Type: UnityEngine.Rendering.Universal.UniversalRenderPipelineAsset

Method: UnityEngine.Rendering.Universal.ScriptableRendererData LoadBuiltinRendererData(UnityEngine.Rendering.Universal.RendererType type = 1)

Disassembly:
	0x03A2C50C MOV X19, X0
	0x03A2C510 BL 0x3A2C520
	0x03A2C514 STR W0, [X19 + 0x8C]
	0x03A2C518 LDP X30, X19, [X31], #0x10
	0x03A2C51C RET
	0x03A2C520 STP X30, X21, [X31 - 0x20]!
	0x03A2C524 STP X20, X19, [X31 + 0x10]
	0x03A2C528 ADRP X21, 0x9B6000
	0x03A2C52C ADRP X20, 0x6F0000
	0x03A2C530 LDRB W8, [X21 + 0x67]
	0x03A2C534 LDR X20, [X20 + 0x8A8]
	0x03A2C538 MOV W19, W1
	0x03A2C53C TBNZ X8, 0x0, 0x3A2C560
	0x03A2C540 ADRP X0, 0x6C7000
	0x03A2C544 LDR X0, [X0 + 0x5A8]

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+64]
	003 Compare X8, 0
	004 JumpIfEqual {18}
	005 Move W9, [X8+24]
	006 Compare W9, 0
	007 JumpIfEqual {19}
	008 Move [X8+32], X31
	009 Move X8, [X0+64]
	010 Compare X8, 0
	011 JumpIfEqual {18}
	012 Move W9, [X8+24]
	013 Compare W9, 0
	014 JumpIfEqual {19}
	015 Move X0, [X8+32]
	016 Move X30, [X31+16]
	017 Return X0
	018 Call 0x1C17F20
	019 Call 0x1C17F28

Method: UnityEngine.Rendering.RenderPipeline CreatePipeline()

Disassembly:
	0x03A2C548 BL 0x1C16CF4
	0x03A2C54C ADRP X0, 0x6F0000
	0x03A2C550 LDR X0, [X0 + 0x8A8]
	0x03A2C554 BL 0x1C16CF4
	0x03A2C558 MOVZ W8, 0x1
	0x03A2C55C STRB W8, [X21 + 0x67]
	0x03A2C560 LDR X0, [X20]
	0x03A2C564 ADRP X20, 0x6C7000
	0x03A2C568 LDR W8, [X0 + 0xE0]
	0x03A2C56C LDR X20, [X20 + 0x5A8]
	0x03A2C570 CBNZ W8, 0x3A2C578
	0x03A2C574 BL 0x1C16DFC
	0x03A2C578 MOV X0, X31
	0x03A2C57C BL 0x3A892F4
	0x03A2C580 LDR X8, [X20]
	0x03A2C584 MOV W20, W0
	0x03A2C588 LDR W9, [X8 + 0xE0]
	0x03A2C58C CBNZ W9, 0x3A2C598
	0x03A2C590 MOV X0, X8
	0x03A2C594 BL 0x1C16DFC
	0x03A2C598 MOV W0, W19
	0x03A2C59C MOV W1, W20
	0x03A2C5A0 MOV X2, X31
	0x03A2C5A4 BL 0x337EE94
	0x03A2C5A8 LDP X20, X19, [X31 + 0x10]
	0x03A2C5AC MOV W1, W0
	0x03A2C5B0 MOV W0, W31
	0x03A2C5B4 MOV X2, X31
	0x03A2C5B8 LDP X30, X21, [X31], #0x20
	0x03A2C5BC B 0x337EDF0
	0x03A2C5C0 LDRB W0, [X0 + 0x90]
	0x03A2C5C4 RET
	0x03A2C5C8 AND W8, W1, 0x1
	0x03A2C5CC STRB W8, [X0 + 0x90]
	0x03A2C5D0 RET
	0x03A2C5D4 LDR W0, [X0 + 0x94]
	0x03A2C5D8 RET
	0x03A2C5DC STR W1, [X0 + 0x94]
	0x03A2C5E0 RET
	0x03A2C5E4 LDR W0, [X0 + 0x98]
	0x03A2C5E8 RET
	0x03A2C5EC STR W1, [X0 + 0x98]
	0x03A2C5F0 RET
	0x03A2C5F4 LDR W0, [X0 + 0x9C]
	0x03A2C5F8 RET
	0x03A2C5FC STR W1, [X0 + 0x9C]
	0x03A2C600 RET
	0x03A2C604 LDR W0, [X0 + 0xA0]
	0x03A2C608 RET
	0x03A2C60C STR W1, [X0 + 0xA0]
	0x03A2C610 RET
	0x03A2C614 STR X30, [X31 - 0x30]!
	0x03A2C618 STP X22, X21, [X31 + 0x10]
	0x03A2C61C STP X20, X19, [X31 + 0x20]
	0x03A2C620 ADRP X22, 0x9B6000
	0x03A2C624 ADRP X21, 0x728000
	0x03A2C628 LDRB W8, [X22 + 0x5F]
	0x03A2C62C LDR X21, [X21 + 0xC30]
	0x03A2C630 MOV W20, W1
	0x03A2C634 MOV X19, X0
	0x03A2C638 TBNZ X8, 0x0, 0x3A2C650
	0x03A2C63C ADRP X0, 0x728000
	0x03A2C640 LDR X0, [X0 + 0xC30]
	0x03A2C644 BL 0x1C16CF4
	0x03A2C648 MOVZ W8, 0x1
	0x03A2C64C STRB W8, [X22 + 0x5F]
	0x03A2C650 LDR X0, [X21]
	0x03A2C654 LDR W8, [X0 + 0xE0]
	0x03A2C658 CBNZ W8, 0x3A2C664
	0x03A2C65C BL 0x1C16DFC
	0x03A2C660 LDR X0, [X21]
	0x03A2C664 LDR X8, [X0 + 0xB8]
	0x03A2C668 LDR W9, [X8 + 0x4]
	0x03A2C66C CMP W9, W20
	0x03A2C670 B.GE 0x3A2C6BC
	0x03A2C674 LDR W9, [X0 + 0xE0]
	0x03A2C678 CBNZ W9, 0x3A2C688
	0x03A2C67C BL 0x1C16DFC
	0x03A2C680 LDR X0, [X21]
	0x03A2C684 LDR X8, [X0 + 0xB8]
	0x03A2C688 LDR W9, [X8 + 0x8]
	0x03A2C68C CMP W9, W20
	0x03A2C690 B.EQ 0x3A2C6B4
	0x03A2C694 LDR W9, [X0 + 0xE0]
	0x03A2C698 CBNZ W9, 0x3A2C6A8
	0x03A2C69C BL 0x1C16DFC
	0x03A2C6A0 LDR X8, [X21]
	0x03A2C6A4 LDR X8, [X8 + 0xB8]
	0x03A2C6A8 LDR W8, [X8 + 0xC]
	0x03A2C6AC CMP W8, W20
	0x03A2C6B0 B.LE 0x3A2C6D4
	0x03A2C6B4 ADD X8, X19, 0x9C
	0x03A2C6B8 B 0x3A2C6C0
	0x03A2C6BC ADD X8, X19, 0x98
	0x03A2C6C0 LDR W0, [X8]
	0x03A2C6C4 LDP X20, X19, [X31 + 0x20]
	0x03A2C6C8 LDP X22, X21, [X31 + 0x10]
	0x03A2C6CC LDR X30, [X31], #0x30
	0x03A2C6D0 RET
	0x03A2C6D4 ADD X8, X19, 0xA0
	0x03A2C6D8 B 0x3A2C6C0
	0x03A2C6DC LDRB W0, [X0 + 0xA4]
	0x03A2C6E0 RET
	0x03A2C6E4 AND W8, W1, 0x1
	0x03A2C6E8 STRB W8, [X0 + 0xA4]
	0x03A2C6EC RET
	0x03A2C6F0 LDRB W0, [X0 + 0xA5]
	0x03A2C6F4 RET
	0x03A2C6F8 AND W8, W1, 0x1
	0x03A2C6FC STRB W8, [X0 + 0xA5]
	0x03A2C700 RET
	0x03A2C704 LDR V0, [X0 + 0xA8]
	0x03A2C708 RET
	0x03A2C70C FMOV S1, W31
	0x03A2C710 FMAX S0, S0, S1
	0x03A2C714 STR S0, [X0 + 0xA8]
	0x03A2C718 RET
	0x03A2C71C LDR W0, [X0 + 0xAC]
	0x03A2C720 RET
	0x03A2C724 SUB X31, X31, 0x30
	0x03A2C728 STP X30, X21, [X31 + 0x10]
	0x03A2C72C STP X20, X19, [X31 + 0x20]
	0x03A2C730 SUB W8, W1, 0x1
	0x03A2C734 CMP W8, 0x4
	0x03A2C738 B.CS 0x3A2C750
	0x03A2C73C LDP X20, X19, [X31 + 0x20]
	0x03A2C740 LDP X30, X21, [X31 + 0x10]
	0x03A2C744 STR W1, [X0 + 0xAC]
	0x03A2C748 ADD X31, X31, 0x30
	0x03A2C74C RET
	0x03A2C750 STR W1, [X31 + 0xC]
	0x03A2C754 ADRP X19, 0x6C7000
	0x03A2C758 LDR X19, [X19 + 0x758]
	0x03A2C75C MOV X0, X19
	0x03A2C760 BL 0x1C16D08
	0x03A2C764 ADD X1, X31, 0xC
	0x03A2C768 BL 0x1C16E04
	0x03A2C76C MOV X20, X0
	0x03A2C770 MOVZ W8, 0x1
	0x03A2C774 MOV X0, X19
	0x03A2C778 STR W8, [X31 + 0x8]
	0x03A2C77C BL 0x1C16D08
	0x03A2C780 ADD X1, X31, 0x8
	0x03A2C784 BL 0x1C16E04
	0x03A2C788 MOV X21, X0
	0x03A2C78C MOVZ W8, 0x4
	0x03A2C790 MOV X0, X19
	0x03A2C794 STR W8, [X31 + 0x4]
	0x03A2C798 BL 0x1C16D08
	0x03A2C79C ADD X1, X31, 0x4
	0x03A2C7A0 BL 0x1C16E04
	0x03A2C7A4 MOV X19, X0
	0x03A2C7A8 ADRP X0, 0x728000
	0x03A2C7AC LDR X0, [X0 + 0xC38]
	0x03A2C7B0 BL 0x1C16D08
	0x03A2C7B4 MOV X1, X20
	0x03A2C7B8 MOV X2, X21
	0x03A2C7BC MOV X3, X19
	0x03A2C7C0 MOV X4, X31
	0x03A2C7C4 BL 0x3227C18
	0x03A2C7C8 MOV X19, X0
	0x03A2C7CC ADRP X0, 0x6CF000
	0x03A2C7D0 LDR X0, [X0 + 0x578]
	0x03A2C7D4 BL 0x1C16D08
	0x03A2C7D8 BL 0x1C16F10
	0x03A2C7DC MOV X1, X19
	0x03A2C7E0 MOV X2, X31
	0x03A2C7E4 MOV X20, X0
	0x03A2C7E8 BL 0x3314A68
	0x03A2C7EC ADRP X0, 0x728000
	0x03A2C7F0 LDR X0, [X0 + 0xC40]
	0x03A2C7F4 BL 0x1C16D08
	0x03A2C7F8 MOV X1, X0
	0x03A2C7FC MOV X0, X20
	0x03A2C800 BL 0x1C16DEC
	0x03A2C804 LDR V0, [X0 + 0xB0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x9B7000
	006 Move W8, [X20+88]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {38}
	012 Move X0, 0x727000
	013 Move X0, [X0+3624]
	014 Call 0x1C17CF4
	015 Move X0, 0x6C8000
	016 Move X0, [X0+2600]
	017 Call 0x1C17CF4
	018 Move X0, 0x6C8000
	019 Move X0, [X0+1432]
	020 Call 0x1C17CF4
	021 Move X0, 0x729000
	022 Move X0, [X0+3040]
	023 Call 0x1C17CF4
	024 Move X0, 0x6F1000
	025 Move X0, [X0+2216]
	026 Call 0x1C17CF4
	027 Move X0, 0x729000
	028 Move X0, [X0+2296]
	029 Call 0x1C17CF4
	030 Move X0, 0x729000
	031 Move X0, [X0+3048]
	032 Call 0x1C17CF4
	033 Move X0, 0x729000
	034 Move X0, [X0+3056]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X20+88], W8
	038 Move X0, [X19+64]
	039 Compare X0, 0
	040 JumpIfNotEqual {49}
	041 Move X8, 0x729000
	042 Move X8, [X8+3040]
	043 Move W1, 1
	044 Move X0, [X8]
	045 Call 0x1C17D6C
	046 Move [X19+64], X0
	047 Compare X0, 0
	048 JumpIfEqual {199}
	049 NotImplemented "Instruction LDRSW not yet implemented."
	050 Move W8, [X0+24]
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Move X8, 0x6C8000
	053 Move X8, [X8+1432]
	054 Add X9, X0, X9
	055 Move X20, [X9+32]
	056 Move X8, [X8]
	057 Move W10, [X8+224]
	058 Compare W10, 0
	059 JumpIfNotEqual {62}
	060 Move X0, X8
	061 Call 0x1C17DFC
	062 Move X0, X20
	063 Move X1, X31
	064 Move X2, X31
	065 Call Object.op_Equality, X0, X1
	066 Move TEMP, X0
	067 And TEMP, TEMP, 1
	068 Compare TEMP, 1
	069 JumpIfNotEqual {137}
	070 Move W9, [X19+40]
	071 Move W8, [X19+44]
	072 NotImplemented "Instruction CMP not yet implemented."
	073 Move X8, [X19+64]
	074 Compare X8, 0
	075 JumpIfEqual {199}
	076 NotImplemented "Instruction LDRSW not yet implemented."
	077 Move W10, [X8+24]
	078 NotImplemented "Instruction CMP not yet implemented."
	079 Add X8, X8, X9
	080 Move X0, [X8+32]
	081 Compare X0, 0
	082 JumpIfEqual {199}
	083 Move X1, X31
	084 Call "il2cpp_vm_object_is_inst", X0
	085 Compare X0, 0
	086 JumpIfEqual {199}
	087 Move X8, [X0]
	088 Move X9, [X8+360]
	089 Move X1, [X8+368]
	090 NotImplemented "Instruction BLR not yet implemented."
	091 Compare X0, 0
	092 JumpIfEqual {199}
	093 Move X8, 0x729000
	094 Move X8, [X8+3056]
	095 Move X2, X31
	096 Move X1, [X8]
	097 Call String.Contains, X0, X1
	098 Move X20, X31
	099 Move TEMP, X0
	100 And TEMP, TEMP, 1
	101 Compare TEMP, 1
	102 JumpIfEqual {192}
	103 Move X8, 0x6F1000
	104 Move X8, [X8+2216]
	105 Move X0, [X8]
	106 Move W8, [X0+224]
	107 Compare W8, 0
	108 JumpIfNotEqual {110}
	109 Call 0x1C17DFC
	110 Move X0, X31
	111 Call UniversalRenderPipeline.get_asset
	112 Compare X0, 0
	113 JumpIfEqual {199}
	114 Move X1, X31
	115 Call Object.get_name, X0
	116 Move X8, 0x729000
	117 Move X8, [X8+3048]
	118 Move X1, X0
	119 Move X2, X31
	120 Move X8, [X8]
	121 Move X0, X8
	122 Call String.Concat, X0, X1
	123 Move X8, 0x6C8000
	124 Move X8, [X8+2600]
	125 Move X20, X0
	126 Move X8, [X8]
	127 Move W9, [X8+224]
	128 Compare W9, 0
	129 JumpIfNotEqual {132}
	130 Move X0, X8
	131 Call 0x1C17DFC
	132 Move X0, X20
	133 Move X1, X19
	134 Move X2, X31
	135 Call Debug.LogError, X0, X1
	136 Move X20, X31
	137 Move X0, X19
	138 Call UniversalRenderPipelineAsset.DestroyRenderers, X0
	139 Move X8, 0x6F1000
	140 Move X8, [X8+2216]
	141 Move X0, [X8]
	142 Call 0x1C17F10
	143 Move X1, X19
	144 Move X2, X31
	145 Move X20, X0
	146 Call UniversalRenderPipeline..ctor, X0, X1
	147 Move X0, X19
	148 Call UniversalRenderPipelineAsset.CreateRenderers, X0
	149 Move X10, [X19+64]
	150 Compare X10, 0
	151 JumpIfEqual {199}
	152 Move X8, [X10+24]
	153 NotImplemented "Instruction CMP not yet implemented."
	154 And X8, X8, 0
	155 Compare X8, 0
	156 JumpIfEqual {192}
	157 Move X9, 0x729000
	158 Move X9, [X9+2296]
	159 Add X10, X10, 32
	160 Move X9, [X9]
	161 Compare X8, 0
	162 JumpIfEqual {198}
	163 Move X11, [X10]
	164 Compare X11, 0
	165 JumpIfEqual {174}
	166 Move X12, [X11]
	167 Move W13, [X9+304]
	168 Move W14, [X12+304]
	169 NotImplemented "Instruction CMP not yet implemented."
	170 Move X12, [X12+200]
	171 Add X12, X12, X13
	172 NotImplemented "Instruction LDUR not yet implemented."
	173 NotImplemented "Instruction CMP not yet implemented."
	174 Subtract X8, X8, 1
	175 Add X10, X10, 8
	176 Move X8, [X11+80]
	177 Compare X8, 0
	178 JumpIfEqual {199}
	179 Move X9, 0x727000
	180 Move X9, [X9+3624]
	181 Move X21, [X8+80]
	182 Move X19, [X8+88]
	183 Move X0, [X9]
	184 Move W9, [X0+224]
	185 Compare W9, 0
	186 JumpIfNotEqual {188}
	187 Call 0x1C17DFC
	188 Move X0, X21
	189 Move X1, X19
	190 Move X2, X31
	191 Call Blitter.Initialize, X0, X1
	192 Move X0, X20
	193 Move X20, [X31+16]
	194 Move X19, [X31+24]
	195 Move X30, [X31+32]
	196 Move X21, [X31+40]
	197 Return X0
	198 Call 0x1C17F28
	199 Call 0x1C17F20

Method: System.Void DestroyRenderers()

Disassembly:
	0x03A2C808 RET
	0x03A2C80C STR S0, [X0 + 0xB0]
	0x03A2C810 RET
	0x03A2C814 LDP S0, S1, [X0 + 0xB4]
	0x03A2C818 RET
	0x03A2C81C STP S0, S1, [X0 + 0xB4]
	0x03A2C820 RET
	0x03A2C824 LDP S0, S1, [X0 + 0xBC]
	0x03A2C828 LDR V2, [X0 + 0xC4]
	0x03A2C82C RET
	0x03A2C830 STP S0, S1, [X0 + 0xBC]
	0x03A2C834 STR S2, [X0 + 0xC4]
	0x03A2C838 RET
	0x03A2C83C LDR V0, [X0 + 0xC8]
	0x03A2C840 RET
	0x03A2C844 STR S0, [X0 + 0xC8]
	0x03A2C848 RET
	0x03A2C84C LDR V0, [X0 + 0xCC]
	0x03A2C850 RET
	0x03A2C854 STP X30, X19, [X31 - 0x10]!
	0x03A2C858 MOV X19, X0
	0x03A2C85C BL 0x3A2C86C
	0x03A2C860 STR S0, [X19 + 0xCC]
	0x03A2C864 LDP X30, X19, [X31], #0x10
	0x03A2C868 RET

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X0+32]
	006 Compare X8, 0
	007 JumpIfEqual {25}
	008 Move X19, X0
	009 Move X20, X31
	010 Move W9, [X8+24]
	011 NotImplemented "Instruction CMP not yet implemented."
	012 NotImplemented "Instruction CMP not yet implemented."
	013 Add X21, X8, X20
	014 Move X0, [X21+32]
	015 Compare X0, 0
	016 JumpIfEqual {21}
	017 Move X1, X31
	018 Call ScriptableRenderer.Dispose, X0
	019 Move [X21+32], X31
	020 Move X8, [X19+32]
	021 Add X20, X20, 1
	022 Compare X8, 0
	023 JumpIfNotEqual {10}
	024 Call 0x1C17F20
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Move X21, [X31+40]
	029 Return 
	030 Call 0x1C17F28

Method: System.Void DestroyRenderer(ref UnityEngine.Rendering.Universal.ScriptableRenderer renderer)

Disassembly:
	0x03A2CA80 LDR X0, [X0 + 0x598]
	0x03A2CA84 BL 0x1C16CF4
	0x03A2CA88 ADRP X0, 0x728000
	0x03A2CA8C LDR X0, [X0 + 0xC48]
	0x03A2CA90 BL 0x1C16CF4
	0x03A2CA94 MOVZ W8, 0x1
	0x03A2CA98 STRB W8, [X21 + 0x60]
	0x03A2CA9C LDR X0, [X20]
	0x03A2CAA0 LDR X20, [X19 + 0x18]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, [X1]
	004 Compare X0, 0
	005 JumpIfEqual {10}
	006 Move X19, X1
	007 Move X1, X31
	008 Call ScriptableRenderer.Dispose, X0
	009 Move [X19], X31
	010 Move X30, [X31+16]
	011 Move X19, [X31+24]
	012 Return 

Method: System.Void OnDisable()

Disassembly:
	0x03A2CAA4 LDR W8, [X0 + 0xE0]
	0x03A2CAA8 CBNZ W8, 0x3A2CAB0
	0x03A2CAAC BL 0x1C16DFC
	0x03A2CAB0 MOV X0, X20
	0x03A2CAB4 MOV X1, X31
	0x03A2CAB8 MOV X2, X31
	0x03A2CABC BL 0x3C3883C

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Call UniversalRenderPipelineAsset.DestroyRenderers, X0
	005 Move X0, X19
	006 Move X1, X31
	007 Move X30, [X31+16]
	008 Move X19, [X31+24]
	009 Call RenderPipelineAsset.OnDisable, X0
	010 Return 

Method: System.Void CreateRenderers()

Disassembly:
	0x03A2C86C STR D8, [X31 - 0x20]!
	0x03A2C870 STR X30, [X31 + 0x8]
	0x03A2C874 STP X20, X19, [X31 + 0x10]
	0x03A2C878 ADRP X19, 0x9B6000
	0x03A2C87C ADRP X20, 0x6F0000
	0x03A2C880 LDRB W8, [X19 + 0x66]
	0x03A2C884 LDR X20, [X20 + 0x8A8]
	0x03A2C888 MOV V8.16B, V0.16B
	0x03A2C88C TBNZ X8, 0x0, 0x3A2C8A4
	0x03A2C890 ADRP X0, 0x6F0000
	0x03A2C894 LDR X0, [X0 + 0x8A8]
	0x03A2C898 BL 0x1C16CF4
	0x03A2C89C MOVZ W8, 0x1
	0x03A2C8A0 STRB W8, [X19 + 0x66]
	0x03A2C8A4 LDR X0, [X20]
	0x03A2C8A8 LDR W8, [X0 + 0xE0]
	0x03A2C8AC CBNZ W8, 0x3A2C8B4
	0x03A2C8B0 BL 0x1C16DFC
	0x03A2C8B4 MOV X0, X31
	0x03A2C8B8 BL 0x3A892D0
	0x03A2C8BC LDP X20, X19, [X31 + 0x10]
	0x03A2C8C0 LDR X30, [X31 + 0x8]
	0x03A2C8C4 FCMP S0, S8
	0x03A2C8C8 FCSEL S0, S8, S0, GT
	0x03A2C8CC FMOV S1, W31
	0x03A2C8D0 FMAX S0, S0, S1
	0x03A2C8D4 LDR V8, [X31], #0x20
	0x03A2C8D8 RET
	0x03A2C8DC LDR V0, [X0 + 0xD0]
	0x03A2C8E0 RET
	0x03A2C8E4 STP X30, X19, [X31 - 0x10]!
	0x03A2C8E8 MOV X19, X0
	0x03A2C8EC BL 0x3A2C86C
	0x03A2C8F0 STR S0, [X19 + 0xD0]
	0x03A2C8F4 LDP X30, X19, [X31], #0x10
	0x03A2C8F8 RET
	0x03A2C8FC LDRB W0, [X0 + 0xD4]
	0x03A2C900 RET
	0x03A2C904 AND W8, W1, 0x1
	0x03A2C908 STRB W8, [X0 + 0xD4]
	0x03A2C90C RET
	0x03A2C910 LDR W0, [X0 + 0xDC]
	0x03A2C914 RET
	0x03A2C918 STR W1, [X0 + 0xDC]
	0x03A2C91C RET
	0x03A2C920 LDRB W0, [X0 + 0xE9]
	0x03A2C924 RET
	0x03A2C928 AND W8, W1, 0x1
	0x03A2C92C STRB W8, [X0 + 0xE9]
	0x03A2C930 RET
	0x03A2C934 LDRB W0, [X0 + 0xEA]
	0x03A2C938 RET
	0x03A2C93C LDRB W0, [X0 + 0xEB]
	0x03A2C940 RET
	0x03A2C944 LDRB W0, [X0 + 0xEC]
	0x03A2C948 RET
	0x03A2C94C LDRB W0, [X0 + 0xEC]
	0x03A2C950 RET
	0x03A2C954 LDR W0, [X0 + 0x11C]
	0x03A2C958 RET
	0x03A2C95C MOV W0, W31
	0x03A2C960 RET
	0x03A2C964 LDRB W0, [X0 + 0xE8]
	0x03A2C968 RET
	0x03A2C96C AND W8, W1, 0x1
	0x03A2C970 STRB W8, [X0 + 0xE8]
	0x03A2C974 RET
	0x03A2C978 LDRB W0, [X0 + 0xF8]
	0x03A2C97C RET
	0x03A2C980 AND W8, W1, 0x1
	0x03A2C984 STRB W8, [X0 + 0xF8]
	0x03A2C988 RET
	0x03A2C98C LDR W0, [X0 + 0xFC]
	0x03A2C990 RET
	0x03A2C994 STR W1, [X0 + 0xFC]
	0x03A2C998 RET
	0x03A2C99C LDR W0, [X0 + 0x100]
	0x03A2C9A0 RET
	0x03A2C9A4 CMP W1, 0x41
	0x03A2C9A8 MOVZ W8, 0x41
	0x03A2C9AC CSEL W8, W1, W8, LT
	0x03A2C9B0 CMP W8, 0x10
	0x03A2C9B4 MOVZ W9, 0x10
	0x03A2C9B8 CSEL W8, W8, W9, GT
	0x03A2C9BC STR W8, [X0 + 0x100]
	0x03A2C9C0 RET
	0x03A2C9C4 LDRB W0, [X0 + 0x104]
	0x03A2C9C8 RET
	0x03A2C9CC LDRB W0, [X0 + 0x105]
	0x03A2C9D0 RET
	0x03A2C9D4 LDRB W0, [X0 + 0xF9]
	0x03A2C9D8 RET
	0x03A2C9DC AND W8, W1, 0x1
	0x03A2C9E0 STRB W8, [X0 + 0xF9]
	0x03A2C9E4 RET
	0x03A2C9E8 LDRB W0, [X0 + 0xD5]
	0x03A2C9EC RET
	0x03A2C9F0 AND W8, W1, 0x1
	0x03A2C9F4 STRB W8, [X0 + 0xD5]
	0x03A2C9F8 RET
	0x03A2C9FC LDR W0, [X0 + 0xD8]
	0x03A2CA00 RET
	0x03A2CA04 STR W1, [X0 + 0xD8]
	0x03A2CA08 RET
	0x03A2CA0C MOV X0, X31
	0x03A2CA10 RET
	0x03A2CA14 MOV X0, X31
	0x03A2CA18 RET
	0x03A2CA1C MOV X0, X31
	0x03A2CA20 RET
	0x03A2CA24 MOV X0, X31
	0x03A2CA28 RET
	0x03A2CA2C MOV X0, X31
	0x03A2CA30 RET
	0x03A2CA34 MOV X0, X31
	0x03A2CA38 RET
	0x03A2CA3C MOV X0, X31
	0x03A2CA40 RET
	0x03A2CA44 MOV X0, X31
	0x03A2CA48 RET
	0x03A2CA4C MOV X0, X31
	0x03A2CA50 RET
	0x03A2CA54 MOV X0, X31
	0x03A2CA58 RET
	0x03A2CA5C STP X30, X21, [X31 - 0x20]!
	0x03A2CA60 STP X20, X19, [X31 + 0x10]
	0x03A2CA64 ADRP X21, 0x9B6000
	0x03A2CA68 ADRP X20, 0x6C7000
	0x03A2CA6C LDRB W8, [X21 + 0x60]
	0x03A2CA70 LDR X20, [X20 + 0x598]
	0x03A2CA74 MOV X19, X0
	0x03A2CA78 TBNZ X8, 0x0, 0x3A2CA9C
	0x03A2CA7C ADRP X0, 0x6C7000

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0x9B7000
	009 Move W8, [X20+89]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {32}
	015 Move X0, 0x6C8000
	016 Move X0, [X0+2600]
	017 Call 0x1C17CF4
	018 Move X0, 0x6C8000
	019 Move X0, [X0+1880]
	020 Call 0x1C17CF4
	021 Move X0, 0x6C8000
	022 Move X0, [X0+1432]
	023 Call 0x1C17CF4
	024 Move X0, 0x729000
	025 Move X0, [X0+3064]
	026 Call 0x1C17CF4
	027 Move X0, 0x729000
	028 Move X0, [X0+3072]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X20+89], W8
	032 Move X8, [X19+32]
	033 Compare X8, 0
	034 JumpIfEqual {77}
	035 Move X22, 0x6C8000
	036 Move X23, 0x729000
	037 Move X24, 0x6C8000
	038 Move X22, [X22+1880]
	039 Move X23, [X23+3072]
	040 Move X24, [X24+2600]
	041 Move X21, X31
	042 Move W9, [X8+24]
	043 NotImplemented "Instruction CMP not yet implemented."
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Add X9, X8, X21
	046 Move X9, [X9+32]
	047 Compare X9, 0
	048 JumpIfEqual {69}
	049 Move X0, [X22]
	050 Add X1, X31, 12
	051 Move [X31+12], W21
	052 Call 0x1C17E04
	053 Move X8, [X23]
	054 Move X1, X0
	055 Move X2, X31
	056 Move X0, X8
	057 Call String.Format, X0, X1
	058 Move X8, [X24]
	059 Move X20, X0
	060 Move W9, [X8+224]
	061 Compare W9, 0
	062 JumpIfNotEqual {65}
	063 Move X0, X8
	064 Call 0x1C17DFC
	065 Move X0, X20
	066 Move X1, X31
	067 Call Debug.LogError, X0
	068 Move X8, [X19+32]
	069 Add X21, X21, 1
	070 Compare X8, 0
	071 JumpIfNotEqual {42}
	072 Move X8, [X19+64]
	073 Compare X8, 0
	074 JumpIfEqual {139}
	075 Move W10, [X8+24]
	076 NotImplemented "Instruction CMP not yet implemented."
	077 Move X8, [X19+64]
	078 Compare X8, 0
	079 JumpIfEqual {139}
	080 Move X9, 0x729000
	081 Move X9, [X9+3064]
	082 Move W1, [X8+24]
	083 Move X0, [X9]
	084 Call 0x1C17D6C
	085 Move X8, [X19+64]
	086 Move [X19+32], X0
	087 Compare X8, 0
	088 JumpIfEqual {139}
	089 Move X21, 0x6C8000
	090 Move X21, [X21+1432]
	091 Move W22, 4
	092 Move W9, [X8+24]
	093 Subtract X23, X22, 4
	094 NotImplemented "Instruction CMP not yet implemented."
	095 NotImplemented "Instruction CMP not yet implemented."
	096 Move X0, [X21]
	097 Move X20, [X8]
	098 Move W9, [X0+224]
	099 Compare W9, 0
	100 JumpIfNotEqual {102}
	101 Call 0x1C17DFC
	102 Move X0, X20
	103 Move X1, X31
	104 Move X2, X31
	105 Call Object.op_Inequality, X0, X1
	106 Move TEMP, X0
	107 And TEMP, TEMP, 1
	108 Compare TEMP, 1
	109 JumpIfNotEqual {135}
	110 Move X8, [X19+64]
	111 Compare X8, 0
	112 JumpIfEqual {139}
	113 Move W9, [X8+24]
	114 NotImplemented "Instruction CMP not yet implemented."
	115 Move X0, [X8]
	116 Compare X0, 0
	117 JumpIfEqual {139}
	118 Move X24, [X19+32]
	119 Move X1, X31
	120 Call ScriptableRendererData.InternalCreateRenderer, X0
	121 Compare X24, 0
	122 JumpIfEqual {139}
	123 Move X20, X0
	124 Compare X0, 0
	125 JumpIfEqual {132}
	126 Move X8, [X24]
	127 Move X0, X20
	128 Move X1, [X8+64]
	129 Call 0x1C17E00
	130 Compare X0, 0
	131 JumpIfEqual {149}
	132 Move W8, [X24+24]
	133 NotImplemented "Instruction CMP not yet implemented."
	134 Move [X24], X20
	135 Move X8, [X19+64]
	136 Add X22, X22, 1
	137 Compare X8, 0
	138 JumpIfNotEqual {92}
	139 Call 0x1C17F20
	140 Move X20, [X31+48]
	141 Move X19, [X31+56]
	142 Move X22, [X31+32]
	143 Move X21, [X31+40]
	144 Move X24, [X31+16]
	145 Move X23, [X31+24]
	146 Move X30, [X31+64]
	147 Return 
	148 Call 0x1C17F28
	149 Call 0x1C17F44
	150 Move X1, X31
	151 Call 0x1C17DEC

Method: UnityEngine.Material GetMaterial(UnityEngine.Rendering.Universal.DefaultMaterialType materialType)

Disassembly:
	0x03A2CAC0 TBZ X0, 0x0, 0x3A2CAF8
	0x03A2CAC4 ADRP X8, 0x728000

ISIL:
	001 Move X0, X31
	002 Return X0

Method: UnityEngine.Rendering.Universal.ScriptableRenderer get_scriptableRenderer()

Disassembly:
	0x03A2CAC8 LDR X8, [X8 + 0xC48]
	0x03A2CACC LDR X0, [X8]
	0x03A2CAD0 LDR W8, [X0 + 0xE0]
	0x03A2CAD4 CBNZ W8, 0x3A2CADC
	0x03A2CAD8 BL 0x1C16DFC
	0x03A2CADC MOV W0, W31
	0x03A2CAE0 MOV X1, X31
	0x03A2CAE4 BL 0x3A75BF8
	0x03A2CAE8 MOV X1, X31
	0x03A2CAEC BL 0x3C13E40
	0x03A2CAF0 STR X0, [X19 + 0x18]
	0x03A2CAF4 B 0x3A2CAFC
	0x03A2CAF8 LDR X0, [X19 + 0x18]
	0x03A2CAFC LDP X20, X19, [X31 + 0x10]
	0x03A2CB00 LDP X30, X21, [X31], #0x20
	0x03A2CB04 RET
	0x03A2CB08 STR X30, [X31 - 0x20]!
	0x03A2CB0C STP X20, X19, [X31 + 0x10]
	0x03A2CB10 ADRP X19, 0x9B6000
	0x03A2CB14 ADRP X20, 0x728000
	0x03A2CB18 LDRB W8, [X19 + 0x61]
	0x03A2CB1C LDR X20, [X20 + 0xC50]
	0x03A2CB20 TBNZ X8, 0x0, 0x3A2CB38
	0x03A2CB24 ADRP X0, 0x728000
	0x03A2CB28 LDR X0, [X0 + 0xC50]
	0x03A2CB2C BL 0x1C16CF4
	0x03A2CB30 MOVZ W8, 0x1
	0x03A2CB34 STRB W8, [X19 + 0x61]
	0x03A2CB38 LDR X0, [X20]
	0x03A2CB3C LDR W8, [X0 + 0xE0]
	0x03A2CB40 CBNZ W8, 0x3A2CB48
	0x03A2CB44 BL 0x1C16DFC
	0x03A2CB48 MOV X0, X31
	0x03A2CB4C BL 0x3A89A38
	0x03A2CB50 CBZ X0, 0x3A2CB64
	0x03A2CB54 LDP X20, X19, [X31 + 0x10]
	0x03A2CB58 MOV X1, X31
	0x03A2CB5C LDR X30, [X31], #0x20
	0x03A2CB60 B 0x3A94AA8
	0x03A2CB64 BL 0x1C16F20
	0x03A2CB68 STR X30, [X31 - 0x20]!
	0x03A2CB6C STP X20, X19, [X31 + 0x10]
	0x03A2CB70 ADRP X19, 0x9B6000
	0x03A2CB74 ADRP X20, 0x728000
	0x03A2CB78 LDRB W8, [X19 + 0x62]
	0x03A2CB7C LDR X20, [X20 + 0xC50]
	0x03A2CB80 TBNZ X8, 0x0, 0x3A2CB98
	0x03A2CB84 ADRP X0, 0x728000
	0x03A2CB88 LDR X0, [X0 + 0xC50]
	0x03A2CB8C BL 0x1C16CF4
	0x03A2CB90 MOVZ W8, 0x1
	0x03A2CB94 STRB W8, [X19 + 0x62]
	0x03A2CB98 LDR X0, [X20]
	0x03A2CB9C LDR W8, [X0 + 0xE0]
	0x03A2CBA0 CBNZ W8, 0x3A2CBA8
	0x03A2CBA4 BL 0x1C16DFC
	0x03A2CBA8 MOV X0, X31
	0x03A2CBAC BL 0x3A89A38
	0x03A2CBB0 CBZ X0, 0x3A2CBC4
	0x03A2CBB4 LDP X20, X19, [X31 + 0x10]
	0x03A2CBB8 MOV X1, X31
	0x03A2CBBC LDR X30, [X31], #0x20
	0x03A2CBC0 B 0x3A94ACC
	0x03A2CBC4 BL 0x1C16F20
	0x03A2CBC8 STR X30, [X31 - 0x20]!
	0x03A2CBCC STP X20, X19, [X31 + 0x10]
	0x03A2CBD0 ADRP X19, 0x9B6000
	0x03A2CBD4 ADRP X20, 0x6C7000
	0x03A2CBD8 LDRB W8, [X19 + 0x63]
	0x03A2CBDC LDR X20, [X20 + 0xAC8]
	0x03A2CBE0 TBNZ X8, 0x0, 0x3A2CBF8
	0x03A2CBE4 ADRP X0, 0x6C7000
	0x03A2CBE8 LDR X0, [X0 + 0xAC8]
	0x03A2CBEC BL 0x1C16CF4
	0x03A2CBF0 MOVZ W8, 0x1
	0x03A2CBF4 STRB W8, [X19 + 0x63]
	0x03A2CBF8 LDR X0, [X20]
	0x03A2CBFC LDP X20, X19, [X31 + 0x10]
	0x03A2CC00 MOV W1, W31
	0x03A2CC04 LDR X30, [X31], #0x20
	0x03A2CC08 B 0x1C16D6C
	0x03A2CC0C STR X30, [X31 - 0x20]!
	0x03A2CC10 STP X20, X19, [X31 + 0x10]
	0x03A2CC14 ADRP X20, 0x9B6000
	0x03A2CC18 LDRB W8, [X20 + 0x64]
	0x03A2CC1C MOV X19, X0
	0x03A2CC20 TBNZ X8, 0x0, 0x3A2CC38
	0x03A2CC24 ADRP X0, 0x728000
	0x03A2CC28 LDR X0, [X0 + 0xC58]
	0x03A2CC2C BL 0x1C16CF4
	0x03A2CC30 MOVZ W8, 0x1
	0x03A2CC34 STRB W8, [X20 + 0x64]
	0x03A2CC38 LDR X20, [X19 + 0x120]
	0x03A2CC3C CBNZ X20, 0x3A2CC60
	0x03A2CC40 ADRP X8, 0x728000
	0x03A2CC44 LDR X8, [X8 + 0xC58]
	0x03A2CC48 LDR X0, [X8]
	0x03A2CC4C BL 0x1C16F10
	0x03A2CC50 MOV X1, X31
	0x03A2CC54 MOV X20, X0
	0x03A2CC58 BL 0x33BDD8C
	0x03A2CC5C STR X20, [X19 + 0x120]
	0x03A2CC60 MOV X0, X20
	0x03A2CC64 LDP X20, X19, [X31 + 0x10]
	0x03A2CC68 LDR X30, [X31], #0x20
	0x03A2CC6C RET
	0x03A2CC70 MOV X1, X31
	0x03A2CC74 B 0x33BDD8C
	0x03A2CC78 RET
	0x03A2CC7C STP X30, X21, [X31 - 0x20]!
	0x03A2CC80 STP X20, X19, [X31 + 0x10]
	0x03A2CC84 ADRP X20, 0x9B6000
	0x03A2CC88 LDRB W8, [X20 + 0x65]
	0x03A2CC8C MOV X19, X0
	0x03A2CC90 TBNZ X8, 0x0, 0x3A2CCB4
	0x03A2CC94 ADRP X0, 0x728000
	0x03A2CC98 LDR X0, [X0 + 0xC30]
	0x03A2CC9C BL 0x1C16CF4
	0x03A2CCA0 ADRP X0, 0x6CD000
	0x03A2CCA4 LDR X0, [X0 + 0x6C8]
	0x03A2CCA8 BL 0x1C16CF4
	0x03A2CCAC MOVZ W8, 0x1
	0x03A2CCB0 STRB W8, [X20 + 0x65]
	0x03A2CCB4 LDR W8, [X19 + 0x28]
	0x03A2CCB8 CMP W8, 0x2
	0x03A2CCBC B.LE 0x3A2CD04
	0x03A2CCC0 CMP W8, 0x3
	0x03A2CCC4 B.EQ 0x3A2CD14
	0x03A2CCC8 CMP W8, 0x4
	0x03A2CCCC B.LE 0x3A2CD40
	0x03A2CCD0 CMP W8, 0x6
	0x03A2CCD4 B.EQ 0x3A2CD8C
	0x03A2CCD8 CMP W8, 0x5
	0x03A2CCDC B.EQ 0x3A2CD78
	0x03A2CCE0 CMP W8, 0x7
	0x03A2CCE4 B.LE 0x3A2CD8C
	0x03A2CCE8 CMP W8, 0x9
	0x03A2CCEC B.EQ 0x3A2CE74
	0x03A2CCF0 CMP W8, 0x8

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x9B7000
	007 Move W8, [X20+90]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {33}
	013 Move X0, 0x6C8000
	014 Move X0, [X0+2600]
	015 Call 0x1C17CF4
	016 Move X0, 0x6CF000
	017 Move X0, [X0+1520]
	018 Call 0x1C17CF4
	019 Move X0, 0x6C9000
	020 Move X0, [X0+1136]
	021 Call 0x1C17CF4
	022 Move X0, 0x6CB000
	023 Move X0, [X0+3832]
	024 Call 0x1C17CF4
	025 Move X0, 0x6C8000
	026 Move X0, [X0+1432]
	027 Call 0x1C17CF4
	028 Move X0, 0x729000
	029 Move X0, [X0+3080]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X20+90], W8
	033 Move X8, [X19+64]
	034 Compare X8, 0
	035 JumpIfEqual {44}
	036 Move X9, 0x6C9000
	037 Move X9, [X9+1136]
	038 Move [X31+8], X31
	039 Move W1, [X8+24]
	040 Add X0, X31, 8
	041 Move X2, [X9]
	042 Call Nullable`1<Int32>..ctor, X0, X1
	043 Move X8, [X31+8]
	044 And W31, W8, 255
	045 Move W9, [X19+72]
	046 Move X8, X8
	047 ShiftRight X8, 32
	048 And X8, X8, 0x7FFFFFFF
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Move X8, [X19+64]
	051 Compare X8, 0
	052 JumpIfEqual {154}
	053 Move W10, [X8+24]
	054 Move X9, W9
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Move X10, 0x6C8000
	057 Move X10, [X10+1432]
	058 Add X8, X8, X9
	059 Move X20, [X8+32]
	060 Move X0, [X10]
	061 Move W9, [X0+224]
	062 Compare W9, 0
	063 JumpIfNotEqual {65}
	064 Call 0x1C17DFC
	065 Move X0, X20
	066 Move X1, X31
	067 Move X2, X31
	068 Call Object.op_Equality, X0, X1
	069 Move TEMP, X0
	070 And TEMP, TEMP, 1
	071 Compare TEMP, 1
	072 JumpIfNotEqual {87}
	073 Move X8, 0x6C8000
	074 Move X8, [X8+2600]
	075 Move X0, [X8]
	076 Move W8, [X0+224]
	077 Compare W8, 0
	078 JumpIfNotEqual {80}
	079 Call 0x1C17DFC
	080 Move X8, 0x729000
	081 Move X8, [X8+3080]
	082 Move X1, X19
	083 Move X2, X31
	084 Move X0, [X8]
	085 Call Debug.LogError, X0, X1
	086 Move X0, X31
	087 Move X0, X19
	088 Call UniversalRenderPipelineAsset.get_scriptableRendererData, X0
	089 Compare X0, 0
	090 JumpIfEqual {154}
	091 Move W22, [X19+72]
	092 Move W9, [X0+24]
	093 Move X21, [X19+32]
	094 Move X8, W22
	095 Compare W9, 0
	096 JumpIfEqual {136}
	097 Compare X21, 0
	098 JumpIfEqual {154}
	099 Move W9, [X21+24]
	100 NotImplemented "Instruction CMP not yet implemented."
	101 Add X20, X21, X8
	102 Add X20, X20, 32
	103 Move X0, [X20]
	104 Compare X0, 0
	105 JumpIfEqual {111}
	106 Move X1, X31
	107 Call ScriptableRenderer.Dispose, X0
	108 Move [X20], X31
	109 Move X21, [X19+32]
	110 Move W22, [X19+72]
	111 Move X0, X19
	112 Call UniversalRenderPipelineAsset.get_scriptableRendererData, X0
	113 Compare X0, 0
	114 JumpIfEqual {154}
	115 Move X1, X31
	116 Call ScriptableRendererData.InternalCreateRenderer, X0
	117 Compare X21, 0
	118 JumpIfEqual {154}
	119 Move X20, X0
	120 Compare X0, 0
	121 JumpIfEqual {128}
	122 Move X8, [X21]
	123 Move X0, X20
	124 Move X1, [X8+64]
	125 Call 0x1C17E00
	126 Compare X0, 0
	127 JumpIfEqual {156}
	128 Move W8, [X21+24]
	129 NotImplemented "Instruction CMP not yet implemented."
	130 Add X8, X21, W22
	131 Move [X8+32], X20
	132 Move X21, [X19+32]
	133 Compare X21, 0
	134 JumpIfEqual {154}
	135 Move W22, [X19+72]
	136 Compare X21, 0
	137 JumpIfEqual {154}
	138 Move W9, [X21+24]
	139 NotImplemented "Instruction CMP not yet implemented."
	140 Add X9, X21, X8
	141 Move X9, [X9+32]
	142 Compare X9, 0
	143 JumpIfEqual {99}
	144 Move W8, [X21+24]
	145 NotImplemented "Instruction CMP not yet implemented."
	146 Add X8, X21, W22
	147 Move X0, [X8+32]
	148 Move X20, [X31+32]
	149 Move X19, [X31+40]
	150 Move X22, [X31+16]
	151 Move X21, [X31+24]
	152 Move X30, [X31+48]
	153 Return X0
	154 Call 0x1C17F20
	155 Call 0x1C17F28
	156 Call 0x1C17F44
	157 Move X1, X31
	158 Call 0x1C17DEC

Method: UnityEngine.Rendering.Universal.ScriptableRenderer GetRenderer(System.Int32 index)

Disassembly:
	0x03A2CDB4 LDR W8, [X0 + 0xE0]
	0x03A2CDB8 CBNZ W8, 0x3A2CDC4
	0x03A2CDBC BL 0x1C16DFC
	0x03A2CDC0 LDR X0, [X20]
	0x03A2CDC4 LDR X8, [X0 + 0xB8]
	0x03A2CDC8 LDR W9, [X8 + 0x8]
	0x03A2CDCC CMP W21, W9
	0x03A2CDD0 B.NE 0x3A2CE74
	0x03A2CDD4 LDR W9, [X0 + 0xE0]
	0x03A2CDD8 LDR W21, [X19 + 0x9C]
	0x03A2CDDC CBNZ W9, 0x3A2CDEC
	0x03A2CDE0 BL 0x1C16DFC
	0x03A2CDE4 LDR X0, [X20]
	0x03A2CDE8 LDR X8, [X0 + 0xB8]
	0x03A2CDEC LDR W8, [X8 + 0x4]
	0x03A2CDF0 CMP W21, W8
	0x03A2CDF4 B.NE 0x3A2CE74
	0x03A2CDF8 LDR W8, [X0 + 0xE0]
	0x03A2CDFC LDR W21, [X19 + 0x98]
	0x03A2CE00 CBNZ W8, 0x3A2CE0C
	0x03A2CE04 BL 0x1C16DFC
	0x03A2CE08 LDR X0, [X20]
	0x03A2CE0C LDR X8, [X0 + 0xB8]
	0x03A2CE10 LDR W8, [X8]
	0x03A2CE14 CMP W21, W8
	0x03A2CE18 B.NE 0x3A2CE74
	0x03A2CE1C LDR W20, [X19 + 0x94]
	0x03A2CE20 ADRP X21, 0x728000
	0x03A2CE24 STR W20, [X19 + 0xA0]
	0x03A2CE28 LDR X21, [X21 + 0xC30]
	0x03A2CE2C LDR X0, [X21]
	0x03A2CE30 LDR W8, [X0 + 0xE0]
	0x03A2CE34 CBNZ W8, 0x3A2CE40
	0x03A2CE38 BL 0x1C16DFC
	0x03A2CE3C LDR X0, [X21]
	0x03A2CE40 LDR X8, [X0 + 0xB8]
	0x03A2CE44 CMP W20, 0x0
	0x03A2CE48 CINC W9, W20, LT
	0x03A2CE4C SBFM W9, W9, 0x1, 0x1F
	0x03A2CE50 LDR W8, [X8 + 0x18]
	0x03A2CE54 CMP W9, W8
	0x03A2CE58 CSEL W9, W9, W8, GT
	0x03A2CE5C CMP W9, 0x0
	0x03A2CE60 CINC W10, W9, LT
	0x03A2CE64 SBFM W10, W10, 0x1, 0x1F
	0x03A2CE68 CMP W10, W8
	0x03A2CE6C CSEL W8, W10, W8, GT
	0x03A2CE70 STP W8, W9, [X19 + 0x98]
	0x03A2CE74 ADRP X8, 0xFFFFFFFFFD0C1000
	0x03A2CE78 LDR V0, [X8 + 0x670]
	0x03A2CE7C STR D0, [X19 + 0x28]
	0x03A2CE80 LDP X20, X19, [X31 + 0x10]
	0x03A2CE84 LDP X30, X21, [X31], #0x20
	0x03A2CE88 RET
	0x03A2CE8C BL 0x1C16F20
	0x03A2CE90 BL 0x1C16F28
	0x03A2CE94 BL 0x1C16F44
	0x03A2CE98 MOV X1, X31
	0x03A2CE9C BL 0x1C16DEC
	0x03A2CEA0 STR X30, [X31 - 0x30]!
	0x03A2CEA4 STP X22, X21, [X31 + 0x10]
	0x03A2CEA8 STP X20, X19, [X31 + 0x20]
	0x03A2CEAC LDR X8, [X0 + 0x40]
	0x03A2CEB0 CBZ X8, 0x3A2CEF4
	0x03A2CEB4 MOV X20, X0
	0x03A2CEB8 MOV W19, W1
	0x03A2CEBC MOV W22, W31
	0x03A2CEC0 MOV W21, W31
	0x03A2CEC4 LDR X8, [X8 + 0x18]
	0x03A2CEC8 CMP W21, W8
	0x03A2CECC B.GE 0x3A2CEF8
	0x03A2CED0 MOV X0, X20
	0x03A2CED4 MOV W1, W21
	0x03A2CED8 BL 0x3A2CF20
	0x03A2CEDC LDR X8, [X20 + 0x40]
	0x03A2CEE0 ORN W9, W31, W0, 0x0
	0x03A2CEE4 AND W9, W9, 0x1
	0x03A2CEE8 ADD W22, W22, W9
	0x03A2CEEC ADD W21, W21, 0x1
	0x03A2CEF0 CBNZ X8, 0x3A2CEC4
	0x03A2CEF4 BL 0x1C16F20
	0x03A2CEF8 CMP W22, W8
	0x03A2CEFC CSET W8, NE
	0x03A2CF00 CMP W22, 0x0
	0x03A2CF04 CSET W9, EQ
	0x03A2CF08 ANDS W31, W19, 0x1
	0x03A2CF0C LDP X20, X19, [X31 + 0x20]
	0x03A2CF10 LDP X22, X21, [X31 + 0x10]
	0x03A2CF14 CSEL W0, W9, W8, NE
	0x03A2CF18 LDR X30, [X31], #0x30
	0x03A2CF1C RET
	0x03A2CF20 STP X30, X21, [X31 - 0x20]!
	0x03A2CF24 STP X20, X19, [X31 + 0x10]
	0x03A2CF28 ADRP X21, 0x9B6000
	0x03A2CF2C LDRB W8, [X21 + 0x69]
	0x03A2CF30 MOV W19, W1
	0x03A2CF34 MOV X20, X0
	0x03A2CF38 TBNZ X8, 0x0, 0x3A2CF50
	0x03A2CF3C ADRP X0, 0x6C7000
	0x03A2CF40 LDR X0, [X0 + 0x598]
	0x03A2CF44 BL 0x1C16CF4
	0x03A2CF48 MOVZ W8, 0x1
	0x03A2CF4C STRB W8, [X21 + 0x69]
	0x03A2CF50 ADDS W31, W19, 0x1
	0x03A2CF54 B.NE 0x3A2CF5C
	0x03A2CF58 LDR W19, [X20 + 0x48]
	0x03A2CF5C LDR X8, [X20 + 0x40]
	0x03A2CF60 CBZ X8, 0x3A2CFBC
	0x03A2CF64 LDR W9, [X8 + 0x18]
	0x03A2CF68 CMP W19, W9
	0x03A2CF6C B.GE 0x3A2CFAC
	0x03A2CF70 B.CS 0x3A2CFC0
	0x03A2CF74 ADRP X9, 0x6C7000
	0x03A2CF78 LDR X9, [X9 + 0x598]
	0x03A2CF7C ADD X8, X8, W19, 0x3, SXTW
	0x03A2CF80 LDR X19, [X8 + 0x20]
	0x03A2CF84 LDR X0, [X9]
	0x03A2CF88 LDR W9, [X0 + 0xE0]
	0x03A2CF8C CBNZ W9, 0x3A2CF94
	0x03A2CF90 BL 0x1C16DFC
	0x03A2CF94 MOV X0, X19
	0x03A2CF98 LDP X20, X19, [X31 + 0x10]
	0x03A2CF9C MOV X1, X31
	0x03A2CFA0 MOV X2, X31
	0x03A2CFA4 LDP X30, X21, [X31], #0x20
	0x03A2CFA8 B 0x3C354F8
	0x03A2CFAC LDP X20, X19, [X31 + 0x10]
	0x03A2CFB0 MOV W0, W31
	0x03A2CFB4 LDP X30, X21, [X31], #0x20
	0x03A2CFB8 RET
	0x03A2CFBC BL 0x1C16F20
	0x03A2CFC0 BL 0x1C16F28
	0x03A2CFC4 STR X30, [X31 - 0x20]!
	0x03A2CFC8 STP X20, X19, [X31 + 0x10]
	0x03A2CFCC ADRP X19, 0x9B6000
	0x03A2CFD0 ADRP X20, 0x728000
	0x03A2CFD4 LDRB W8, [X19 + 0x6A]
	0x03A2CFD8 LDR X20, [X20 + 0xC50]
	0x03A2CFDC TBNZ X8, 0x0, 0x3A2CFF4
	0x03A2CFE0 ADRP X0, 0x728000
	0x03A2CFE4 LDR X0, [X0 + 0xC50]
	0x03A2CFE8 BL 0x1C16CF4
	0x03A2CFEC MOVZ W8, 0x1
	0x03A2CFF0 STRB W8, [X19 + 0x6A]
	0x03A2CFF4 LDR X0, [X20]
	0x03A2CFF8 LDR W8, [X0 + 0xE0]
	0x03A2CFFC CBNZ W8, 0x3A2D004
	0x03A2D000 BL 0x1C16DFC
	0x03A2D004 MOV X0, X31
	0x03A2D008 BL 0x3A89A38
	0x03A2D00C CBZ X0, 0x3A2D020
	0x03A2D010 LDR W0, [X0 + 0x80]
	0x03A2D014 LDP X20, X19, [X31 + 0x10]
	0x03A2D018 LDR X30, [X31], #0x20
	0x03A2D01C RET
	0x03A2D020 BL 0x1C16F20
	0x03A2D024 STP X30, X21, [X31 - 0x20]!
	0x03A2D028 STP X20, X19, [X31 + 0x10]
	0x03A2D02C ADRP X20, 0x9B5000
	0x03A2D030 ADRP X21, 0x727000
	0x03A2D034 LDRB W8, [X20 + 0x6B]
	0x03A2D038 LDR X21, [X21 + 0xC50]
	0x03A2D03C MOV W19, W1
	0x03A2D040 TBNZ X8, 0x0, 0x3A2D058
	0x03A2D044 ADRP X0, 0x727000
	0x03A2D048 LDR X0, [X0 + 0xC50]
	0x03A2D04C BL 0x1C16CF4
	0x03A2D050 MOVZ W8, 0x1
	0x03A2D054 STRB W8, [X20 + 0x6B]
	0x03A2D058 LDR X0, [X21]
	0x03A2D05C LDR W8, [X0 + 0xE0]
	0x03A2D060 CBNZ W8, 0x3A2D068
	0x03A2D064 BL 0x1C16DFC
	0x03A2D068 MOV X0, X31
	0x03A2D06C BL 0x3A89A38

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x9B7000
	009 Move W8, [X21+91]
	010 Move W20, W1
	011 Move X19, X0
	012 Move [X31+12], W1
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {31}
	017 Move X0, 0x6C8000
	018 Move X0, [X0+2600]
	019 Call 0x1C17CF4
	020 Move X0, 0x6C8000
	021 Move X0, [X0+1432]
	022 Call 0x1C17CF4
	023 Move X0, 0x729000
	024 Move X0, [X0+3088]
	025 Call 0x1C17CF4
	026 Move X0, 0x729000
	027 Move X0, [X0+3096]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X21+91], W8
	031 Add W31, W20, 1
	032 Move W20, [X19+72]
	033 Move [X31+12], W20
	034 Move X8, [X19+64]
	035 Compare X8, 0
	036 JumpIfEqual {195}
	037 Move TEMP, X20
	038 And TEMP, TEMP, -2147483648
	039 Compare TEMP, -2147483648
	040 JumpIfEqual {60}
	041 Move W9, [X8+24]
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X9, 0x6C8000
	044 Move X9, [X9+1432]
	045 Add X8, X8, W20
	046 Move X21, [X8+32]
	047 Move X0, [X9]
	048 Move W9, [X0+224]
	049 Compare W9, 0
	050 JumpIfNotEqual {52}
	051 Call 0x1C17DFC
	052 Move X0, X21
	053 Move X1, X31
	054 Move X2, X31
	055 Call Object.op_Equality, X0, X1
	056 Move TEMP, X0
	057 And TEMP, TEMP, 1
	058 Compare TEMP, 1
	059 JumpIfNotEqual {102}
	060 Add X0, X31, 12
	061 Move X1, X31
	062 Call Int32.ToString, X0
	063 Move X8, [X19+64]
	064 Compare X8, 0
	065 JumpIfEqual {195}
	066 NotImplemented "Instruction LDRSW not yet implemented."
	067 Move W10, [X8+24]
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Add X8, X8, X9
	070 Move X20, X0
	071 Move X0, [X8+32]
	072 Compare X0, 0
	073 JumpIfEqual {195}
	074 Move X21, 0x729000
	075 Move X22, 0x729000
	076 Move X23, 0x6C8000
	077 Move X21, [X21+3088]
	078 Move X22, [X22+3096]
	079 Move X23, [X23+2600]
	080 Move X1, X31
	081 Call Object.get_name, X0
	082 Move X8, [X21]
	083 Move X2, [X22]
	084 Move X3, X0
	085 Move X1, X20
	086 Move X0, X8
	087 Move X4, X31
	088 Call String.Concat, X0, X1, X2, X3
	089 Move X8, [X23]
	090 Move X20, X0
	091 Move W9, [X8+224]
	092 Compare W9, 0
	093 JumpIfNotEqual {96}
	094 Move X0, X8
	095 Call 0x1C17DFC
	096 Move X0, X20
	097 Move X1, X19
	098 Move X2, X31
	099 Call Debug.LogWarning, X0, X1
	100 Move W20, [X19+72]
	101 Move [X31+12], W20
	102 Move X9, [X19+32]
	103 Compare X9, 0
	104 JumpIfEqual {111}
	105 Move X8, [X19+64]
	106 Compare X8, 0
	107 JumpIfEqual {195}
	108 Move W9, [X9+24]
	109 Move W10, [X8+24]
	110 NotImplemented "Instruction CMP not yet implemented."
	111 Move X0, X19
	112 Call UniversalRenderPipelineAsset.DestroyRenderers, X0
	113 Move X0, X19
	114 Call UniversalRenderPipelineAsset.CreateRenderers, X0
	115 Move X8, [X19+64]
	116 Compare X8, 0
	117 JumpIfEqual {195}
	118 Move W20, [X31+12]
	119 Move W9, [X8+24]
	120 NotImplemented "Instruction CMP not yet implemented."
	121 Move X9, W20
	122 Add X10, X8, X9
	123 Move X10, [X10+32]
	124 Compare X10, 0
	125 JumpIfEqual {195}
	126 Move W10, [X10+24]
	127 Move X21, [X19+32]
	128 Compare W10, 0
	129 JumpIfEqual {175}
	130 Compare X21, 0
	131 JumpIfEqual {195}
	132 Move W10, [X21+24]
	133 NotImplemented "Instruction CMP not yet implemented."
	134 Add X22, X21, X9
	135 Add X22, X22, 32
	136 Move X0, [X22]
	137 Compare X0, 0
	138 JumpIfEqual {147}
	139 Move X1, X31
	140 Call ScriptableRenderer.Dispose, X0
	141 Move [X22], X31
	142 Move X8, [X19+64]
	143 Compare X8, 0
	144 JumpIfEqual {195}
	145 Move X21, [X19+32]
	146 Move W20, [X31+12]
	147 Move W9, [X8+24]
	148 NotImplemented "Instruction CMP not yet implemented."
	149 Move X22, W20
	150 Add X8, X8, X22
	151 Move X0, [X8+32]
	152 Compare X0, 0
	153 JumpIfEqual {195}
	154 Move X1, X31
	155 Call ScriptableRendererData.InternalCreateRenderer, X0
	156 Compare X21, 0
	157 JumpIfEqual {195}
	158 Move X20, X0
	159 Compare X0, 0
	160 JumpIfEqual {167}
	161 Move X8, [X21]
	162 Move X0, X20
	163 Move X1, [X8+64]
	164 Call 0x1C17E00
	165 Compare X0, 0
	166 JumpIfEqual {197}
	167 Move W8, [X21+24]
	168 NotImplemented "Instruction CMP not yet implemented."
	169 Add X8, X21, X22
	170 Move [X8+32], X20
	171 Move X21, [X19+32]
	172 Compare X21, 0
	173 JumpIfEqual {195}
	174 Move W20, [X31+12]
	175 Compare X21, 0
	176 JumpIfEqual {195}
	177 Move W10, [X21+24]
	178 NotImplemented "Instruction CMP not yet implemented."
	179 Add X10, X21, X9
	180 Move X10, [X10+32]
	181 Compare X10, 0
	182 JumpIfEqual {132}
	183 Move W8, [X21+24]
	184 NotImplemented "Instruction CMP not yet implemented."
	185 Add X8, X21, W20
	186 Move X0, [X8+32]
	187 Move X20, [X31+48]
	188 Move X19, [X31+56]
	189 Move X22, [X31+32]
	190 Move X21, [X31+40]
	191 Move X30, [X31+16]
	192 Move X23, [X31+24]
	193 Add X31, X31, 64
	194 Return X0
	195 Call 0x1C17F20
	196 Call 0x1C17F28
	197 Call 0x1C17F44
	198 Move X1, X31
	199 Call 0x1C17DEC

Method: UnityEngine.Rendering.Universal.ScriptableRendererData get_scriptableRendererData()

Disassembly:
	0x03A2CCF4 B.EQ 0x3A2CDA4
	0x03A2CCF8 CMP W8, 0xA
	0x03A2CCFC B.LE 0x3A2CE74
	0x03A2CD00 B 0x3A2CE80
	0x03A2CD04 LDR W8, [X19 + 0x108]
	0x03A2CD08 CMP W8, 0x2
	0x03A2CD0C CSET W8, EQ
	0x03A2CD10 STRB W8, [X19 + 0xD4]
	0x03A2CD14 ADRP X12, 0xFFFFFFFFFD0C1000
	0x03A2CD18 LDRB W8, [X19 + 0x10C]
	0x03A2CD1C LDR W9, [X19 + 0x110]
	0x03A2CD20 LDR W10, [X19 + 0x114]
	0x03A2CD24 LDR W11, [X19 + 0x118]
	0x03A2CD28 LDR V0, [X12 + 0xE80]
	0x03A2CD2C STRB W8, [X19 + 0x90]
	0x03A2CD30 STR W9, [X19 + 0x94]
	0x03A2CD34 STR W10, [X19 + 0x8C]
	0x03A2CD38 STR W11, [X19 + 0x84]
	0x03A2CD3C STR D0, [X19 + 0x28]
	0x03A2CD40 LDR W8, [X19 + 0x30]
	0x03A2CD44 CBNZ W8, 0x3A2CD78
	0x03A2CD48 LDR X21, [X19 + 0x40]
	0x03A2CD4C CBZ X21, 0x3A2CE8C
	0x03A2CD50 LDR X20, [X19 + 0x38]
	0x03A2CD54 CBZ X20, 0x3A2CD6C
	0x03A2CD58 LDR X8, [X21]
	0x03A2CD5C MOV X0, X20
	0x03A2CD60 LDR X1, [X8 + 0x40]
	0x03A2CD64 BL 0x1C16E00
	0x03A2CD68 CBZ X0, 0x3A2CE94
	0x03A2CD6C LDR W8, [X21 + 0x18]
	0x03A2CD70 CBZ W8, 0x3A2CE90
	0x03A2CD74 STR X20, [X21 + 0x20]
	0x03A2CD78 LDR W8, [X19 + 0x12C]
	0x03A2CD7C MOVZ W9, 0x4
	0x03A2CD80 CMP W8, 0x2
	0x03A2CD84 CSINC W8, W9, W8, EQ
	0x03A2CD88 STR W8, [X19 + 0xAC]
	0x03A2CD8C ADRP X8, 0xFFFFFFFFFD0C2000
	0x03A2CD90 LDR V0, [X8 + 0x178]
	0x03A2CD94 MOVZ W8, 0xCCCD
	0x03A2CD98 MOVK W8, 0x3DCC0000
	0x03A2CD9C STR W8, [X19 + 0xC8]
	0x03A2CDA0 STR D0, [X19 + 0x28]
	0x03A2CDA4 ADRP X20, 0x6CD000
	0x03A2CDA8 LDR X20, [X20 + 0x6C8]
	0x03A2CDAC LDR W21, [X19 + 0xA0]
	0x03A2CDB0 LDR X0, [X20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x9B7000
	005 Move W8, [X20+92]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x6C8000
	012 Move X0, [X0+1432]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+92], W8
	016 Move X8, [X19+64]
	017 Compare X8, 0
	018 JumpIfEqual {56}
	019 NotImplemented "Instruction LDRSW not yet implemented."
	020 Move W10, [X8+24]
	021 NotImplemented "Instruction CMP not yet implemented."
	022 Move X10, 0x6C8000
	023 Move X10, [X10+1432]
	024 Add X8, X8, X9
	025 Move X20, [X8+32]
	026 Move X0, [X10]
	027 Move W9, [X0+224]
	028 Compare W9, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X0, X20
	032 Move X1, X31
	033 Move X2, X31
	034 Call Object.op_Equality, X0, X1
	035 Move TEMP, X0
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfNotEqual {44}
	039 Move X8, [X19]
	040 Move X0, X19
	041 Move X9, [X8+712]
	042 Move X1, [X8+720]
	043 NotImplemented "Instruction BLR not yet implemented."
	044 Move X8, [X19+64]
	045 Compare X8, 0
	046 JumpIfEqual {56}
	047 NotImplemented "Instruction LDRSW not yet implemented."
	048 Move W10, [X8+24]
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Add X8, X8, X9
	051 Move X0, [X8+32]
	052 Move X20, [X31+16]
	053 Move X19, [X31+24]
	054 Move X30, [X31+32]
	055 Return X0
	056 Call 0x1C17F20
	057 Call 0x1C17F28

Method: UnityEngine.Experimental.Rendering.GraphicsFormat get_additionalLightsCookieFormat()

Disassembly:
	0x03A2D070 CBZ X0, 0x3A2D084
	0x03A2D074 STR W19, [X0 + 0x80]
	0x03A2D078 LDP X20, X19, [X31 + 0x10]
	0x03A2D07C LDP X30, X21, [X31], #0x20
	0x03A2D080 RET
	0x03A2D084 BL 0x1C16F20
	0x03A2D088 STP X30, X19, [X31 - 0x10]!
	0x03A2D08C LDR W8, [X0 + 0xAC]
	0x03A2D090 CMP W8, 0x4
	0x03A2D094 B.EQ 0x3A2D0B0
	0x03A2D098 CMP W8, 0x2
	0x03A2D09C B.EQ 0x3A2D0B8
	0x03A2D0A0 CMP W8, 0x1
	0x03A2D0A4 B.NE 0x3A2D0C4
	0x03A2D0A8 MOV W0, W31
	0x03A2D0AC B 0x3A2D0BC
	0x03A2D0B0 MOVZ W0, 0x2
	0x03A2D0B4 B 0x3A2D0BC
	0x03A2D0B8 MOVZ W0, 0x1
	0x03A2D0BC LDP X30, X19, [X31], #0x10
	0x03A2D0C0 RET
	0x03A2D0C4 ADRP X0, 0x6C6000
	0x03A2D0C8 LDR X0, [X0 + 0x5B0]
	0x03A2D0CC BL 0x1C16D08
	0x03A2D0D0 BL 0x1C16F10
	0x03A2D0D4 MOV X19, X0
	0x03A2D0D8 ADRP X0, 0x727000
	0x03A2D0DC LDR X0, [X0 + 0xC60]
	0x03A2D0E0 BL 0x1C16D08
	0x03A2D0E4 MOV X1, X0
	0x03A2D0E8 MOV X0, X19
	0x03A2D0EC MOV X2, X31
	0x03A2D0F0 BL 0x337DF1C
	0x03A2D0F4 ADRP X0, 0x727000
	0x03A2D0F8 LDR X0, [X0 + 0xC68]
	0x03A2D0FC BL 0x1C16D08
	0x03A2D100 MOV X1, X0
	0x03A2D104 MOV X0, X19
	0x03A2D108 BL 0x1C16DEC
	0x03A2D10C STP X30, X19, [X31 - 0x10]!
	0x03A2D110 CMP W1, 0x3
	0x03A2D114 B.CS 0x3A2D130
	0x03A2D118 ADRP X8, 0xFFFFFFFFFD16A000
	0x03A2D11C ADD X8, X8, 0xB10
	0x03A2D120 LDR W8, [X8, W1, SXTW]
	0x03A2D124 STR W8, [X0 + 0xAC]
	0x03A2D128 LDP X30, X19, [X31], #0x10
	0x03A2D12C RET
	0x03A2D130 ADRP X0, 0x6C6000
	0x03A2D134 LDR X0, [X0 + 0x5B0]
	0x03A2D138 BL 0x1C16D08
	0x03A2D13C BL 0x1C16F10
	0x03A2D140 MOV X19, X0
	0x03A2D144 ADRP X0, 0x727000
	0x03A2D148 LDR X0, [X0 + 0xC60]
	0x03A2D14C BL 0x1C16D08
	0x03A2D150 MOV X1, X0
	0x03A2D154 MOV X0, X19
	0x03A2D158 MOV X2, X31
	0x03A2D15C BL 0x337DF1C
	0x03A2D160 ADRP X0, 0x727000
	0x03A2D164 LDR X0, [X0 + 0xC70]
	0x03A2D168 BL 0x1C16D08
	0x03A2D16C MOV X1, X0
	0x03A2D170 MOV X0, X19
	0x03A2D174 BL 0x1C16DEC
	0x03A2D178 STP X30, X23, [X31 - 0x30]!
	0x03A2D17C STP X22, X21, [X31 + 0x10]
	0x03A2D180 STP X20, X19, [X31 + 0x20]
	0x03A2D184 ADRP X20, 0x9B5000
	0x03A2D188 ADRP X23, 0x727000
	0x03A2D18C ADRP X22, 0x727000
	0x03A2D190 ADRP X21, 0x6CC000
	0x03A2D194 LDRB W8, [X20 + 0x6C]
	0x03A2D198 LDR X23, [X23 + 0xBF8]
	0x03A2D19C LDR X22, [X22 + 0xBE0]
	0x03A2D1A0 LDR X21, [X21 + 0x6C8]
	0x03A2D1A4 MOV X19, X0
	0x03A2D1A8 TBNZ X8, 0x0, 0x3A2D1D8
	0x03A2D1AC ADRP X0, 0x727000
	0x03A2D1B0 LDR X0, [X0 + 0xBE0]
	0x03A2D1B4 BL 0x1C16CF4
	0x03A2D1B8 ADRP X0, 0x727000
	0x03A2D1BC LDR X0, [X0 + 0xBF8]
	0x03A2D1C0 BL 0x1C16CF4
	0x03A2D1C4 ADRP X0, 0x6CC000
	0x03A2D1C8 LDR X0, [X0 + 0x6C8]
	0x03A2D1CC BL 0x1C16CF4
	0x03A2D1D0 MOVZ W8, 0x1
	0x03A2D1D4 STRB W8, [X20 + 0x6C]
	0x03A2D1D8 LDR X0, [X23]
	0x03A2D1DC MOVZ W1, 0x1
	0x03A2D1E0 MOVZ W20, 0x1
	0x03A2D1E4 BL 0x1C16D6C
	0x03A2D1E8 MOVI V0.2S, 0xB
	0x03A2D1EC STR X0, [X19 + 0x20]
	0x03A2D1F0 STR D0, [X19 + 0x28]
	0x03A2D1F4 STR W20, [X19 + 0x30]
	0x03A2D1F8 LDR X0, [X22]
	0x03A2D1FC MOVZ W1, 0x1
	0x03A2D200 BL 0x1C16D6C
	0x03A2D204 MOVZ X8, 0x1
	0x03A2D208 MOVK X8, 0x3F800000
	0x03A2D20C STUR X8, [X19 + 0x5C]
	0x03A2D210 ADRP X8, 0xFFFFFFFFFD0C1000
	0x03A2D214 LDR V0, [X8 + 0x328]
	0x03A2D218 MOVZ W9, 0x851F
	0x03A2D21C MOVK W9, 0x3F6B0000
	0x03A2D220 MOVZ W22, 0x101
	0x03A2D224 STR W9, [X19 + 0x6C]
	0x03A2D228 MOVZ W9, 0x4
	0x03A2D22C MOVZ W8, 0x800
	0x03A2D230 STR X0, [X19 + 0x40]
	0x03A2D234 STR W20, [X19 + 0x50]
	0x03A2D238 STRB W20, [X19 + 0x70]
	0x03A2D23C STR W20, [X19 + 0x74]
	0x03A2D240 STR W20, [X19 + 0x7C]
	0x03A2D244 STRB W20, [X19 + 0x80]
	0x03A2D248 STRH W22, [X19 + 0x54]
	0x03A2D24C STR W9, [X19 + 0x8C]
	0x03A2D250 STUR D0, [X19 + 0x84]
	0x03A2D254 STR W8, [X19 + 0x94]
	0x03A2D258 LDR X0, [X21]
	0x03A2D25C LDR W8, [X0 + 0xE0]
	0x03A2D260 CBNZ W8, 0x3A2D26C
	0x03A2D264 BL 0x1C16DFC
	0x03A2D268 LDR X0, [X21]
	0x03A2D26C LDR X8, [X0 + 0xB8]
	0x03A2D270 ADRP X9, 0xFFFFFFFFFD0C1000
	0x03A2D274 LDR V1, [X9 + 0x4C0]
	0x03A2D278 ADRP X9, 0xFFFFFFFFFD0BF000
	0x03A2D27C LDR V0, [X8]
	0x03A2D280 LDR V2, [X9 + 0xD1]
	0x03A2D284 ADRP X9, 0xFFFFFFFFFD0BE000
	0x03A2D288 MOV X0, X19
	0x03A2D28C STR D0, [X19 + 0x98]
	0x03A2D290 FMOV V0.2S, 0x0
	0x03A2D294 LDR W8, [X8 + 0x8]
	0x03A2D298 STUR D0, [X19 + 0xCC]
	0x03A2D29C LDR V0, [X9 + 0x23]
	0x03A2D2A0 MOVZ X9, 0x42480000
	0x03A2D2A4 MOVK X9, 0x1

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+32], X30
	003 Move [X31+40], X23
	004 Move [X31+48], X22
	005 Move [X31+56], X21
	006 Move [X31+64], X20
	007 Move [X31+72], X19
	008 Move X21, 0x9B6000
	009 Move X20, 0x6CD000
	010 Move W8, [X21+93]
	011 Move X20, [X20+1736]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {37}
	017 Move X0, 0x6C7000
	018 Move X0, [X0+2600]
	019 Call 0x1C17CF4
	020 Move X0, 0x727000
	021 Move X0, [X0+144]
	022 Call 0x1C17CF4
	023 Move X0, 0x728000
	024 Move X0, [X0+3104]
	025 Call 0x1C17CF4
	026 Move X0, 0x6CF000
	027 Move X0, [X0+1824]
	028 Call 0x1C17CF4
	029 Move X0, 0x6CD000
	030 Move X0, [X0+1736]
	031 Call 0x1C17CF4
	032 Move X0, 0x728000
	033 Move X0, [X0+3112]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X21+93], W8
	037 Move X0, [X20]
	038 Move W8, [X0+224]
	039 Compare W8, 0
	040 JumpIfNotEqual {43}
	041 Call 0x1C17DFC
	042 Move X0, [X20]
	043 Move X8, [X0+184]
	044 Move X8, [X8+16]
	045 Compare X8, 0
	046 JumpIfEqual {163}
	047 NotImplemented "Instruction LDRSW not yet implemented."
	048 Move W10, [X8+24]
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Add X8, X8, X9
	051 Move X21, [X8+32]
	052 Compare X21, 0
	053 JumpIfEqual {163}
	054 Move X8, [X21+24]
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Move X22, X31
	057 And X8, X8, 0
	058 Add X23, X21, 32
	059 NotImplemented "Instruction CMP not yet implemented."
	060 Move W20, [X23]
	061 Move W1, 4
	062 Move X2, X31
	063 Move W0, W20
	064 Call SystemInfo.IsFormatSupported, X0, X1
	065 Move TEMP, X0
	066 And TEMP, TEMP, 1
	067 Compare TEMP, 1
	068 JumpIfEqual {73}
	069 Move W8, [X21+24]
	070 Add X22, X22, 1
	071 NotImplemented "Instruction CMP not yet implemented."
	072 Move W20, W31
	073 Move X0, X31
	074 Call QualitySettings.get_activeColorSpace
	075 Compare W0, 0
	076 JumpIfEqual {79}
	077 Compare W20, 0
	078 JumpIfNotEqual {153}
	079 Move X8, 0x727000
	080 Move X8, [X8+144]
	081 Move X0, [X8]
	082 Move W8, [X0+224]
	083 Compare W8, 0
	084 JumpIfNotEqual {86}
	085 Call 0x1C17DFC
	086 Move W0, W20
	087 Move X1, X31
	088 Call GraphicsFormatUtility.GetLinearFormat, X0
	089 Move W20, W0
	090 Compare W20, 0
	091 JumpIfNotEqual {153}
	092 Move X8, 0x728000
	093 Move X8, [X8+3104]
	094 Move TEMP, 0
	095 Not TEMP
	096 Move X9, TEMP
	097 Add X0, X31, 8
	098 Move X1, X31
	099 Move X8, [X8]
	100 Move [X31+8], X8
	101 Move [X31+16], X9
	102 Move W8, [X19+228]
	103 Move [X31+24], W8
	104 Call Enum.ToString, X0
	105 Move X8, 0x727000
	106 Move X8, [X8+144]
	107 Move X19, X0
	108 Move X8, [X8]
	109 Move W9, [X8+224]
	110 Compare W9, 0
	111 JumpIfNotEqual {114}
	112 Move X0, X8
	113 Call 0x1C17DFC
	114 Move W0, 8
	115 Move X1, X31
	116 Call GraphicsFormatUtility.GetBlockSize, X0
	117 Move X8, 0x6CF000
	118 Move X8, [X8+1824]
	119 Move W9, W0
	120 ShiftRight W9, 29
	121 And W9, W9, 0xFFFFFFF
	122 Add X1, X31, 4
	123 Move [X31+4], W9
	124 Move X8, [X8]
	125 Move X0, X8
	126 Call 0x1C17E04
	127 Move X20, X0
	128 Move W0, 8
	129 Move X1, X31
	130 Call GraphicsFormatUtility.GetFormatString, X0
	131 Move X8, 0x728000
	132 Move X8, [X8+3112]
	133 Move X3, X0
	134 Move X1, X19
	135 Move X2, X20
	136 Move X8, [X8]
	137 Move X4, X31
	138 Move X0, X8
	139 Call String.Format, X0, X1, X2, X3
	140 Move X8, 0x6C7000
	141 Move X8, [X8+2600]
	142 Move X19, X0
	143 Move X8, [X8]
	144 Move W9, [X8+224]
	145 Compare W9, 0
	146 JumpIfNotEqual {149}
	147 Move X0, X8
	148 Call 0x1C17DFC
	149 Move X0, X19
	150 Move X1, X31
	151 Call Debug.LogWarning, X0
	152 Move W20, 8
	153 Move W0, W20
	154 Move X20, [X31+64]
	155 Move X19, [X31+72]
	156 Move X22, [X31+48]
	157 Move X21, [X31+56]
	158 Move X30, [X31+32]
	159 Move X23, [X31+40]
	160 Add X31, X31, 80
	161 Return X0
	162 Call 0x1C17F28
	163 Call 0x1C17F20

Method: UnityEngine.Vector2Int get_additionalLightsCookieResolution()

Disassembly:
	0x03A2D2A8 STR X9, [X19 + 0xA8]
	0x03A2D2AC MOVZ W9, 0x3E800000
	0x03A2D2B0 STR W9, [X19 + 0xB0]

ISIL:
	001 Move W0, [X0+224]
	002 NotImplemented "Instruction BFM not yet implemented."
	003 Return X0

Method: System.Int32[] get_rendererIndexList()

Disassembly:
	0x03A2D2B4 MOVZ W9, 0x20
	0x03A2D2B8 STR W9, [X19 + 0x100]
	0x03A2D2BC MOVZ W9, 0x100
	0x03A2D2C0 STUR D1, [X19 + 0xB4]
	0x03A2D2C4 STUR V2, [X19 + 0xBC]
	0x03A2D2C8 STRH W22, [X19 + 0xEA]
	0x03A2D2CC STUR V0, [X19 + 0xD8]
	0x03A2D2D0 STRB W20, [X19 + 0xE8]
	0x03A2D2D4 STRB W20, [X19 + 0xF9]
	0x03A2D2D8 STRB W20, [X19 + 0x105]
	0x03A2D2DC STR W20, [X19 + 0x108]
	0x03A2D2E0 STR W9, [X19 + 0x110]
	0x03A2D2E4 STR W8, [X19 + 0xA0]
	0x03A2D2E8 STR W9, [X19 + 0x118]
	0x03A2D2EC LDP X20, X19, [X31 + 0x20]
	0x03A2D2F0 LDP X22, X21, [X31 + 0x10]
	0x03A2D2F4 MOV X1, X31
	0x03A2D2F8 LDP X30, X23, [X31], #0x30
	0x03A2D2FC B 0x3C55360
	0x03A2D300 STR X30, [X31 - 0x30]!
	0x03A2D304 STP X22, X21, [X31 + 0x10]
	0x03A2D308 STP X20, X19, [X31 + 0x20]
	0x03A2D30C ADRP X20, 0x9B5000
	0x03A2D310 ADRP X21, 0x6CC000
	0x03A2D314 ADRP X19, 0x727000
	0x03A2D318 ADRP X22, 0x727000
	0x03A2D31C LDRB W8, [X20 + 0x6D]
	0x03A2D320 LDR X21, [X21 + 0x6C8]
	0x03A2D324 LDR X19, [X19 + 0xC78]
	0x03A2D328 LDR X22, [X22 + 0xC80]
	0x03A2D32C TBNZ X8, 0x0, 0x3A2D374
	0x03A2D330 ADRP X0, 0x727000
	0x03A2D334 LDR X0, [X0 + 0xC78]
	0x03A2D338 BL 0x1C16CF4
	0x03A2D33C ADRP X0, 0x727000
	0x03A2D340 LDR X0, [X0 + 0xC80]
	0x03A2D344 BL 0x1C16CF4
	0x03A2D348 ADRP X0, 0x727000
	0x03A2D34C LDR X0, [X0 + 0xC88]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x9B6000
	005 Move W8, [X20+94]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x6C8000
	012 Move X0, [X0+3672]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+94], W8
	016 Move X8, [X19+64]
	017 Compare X8, 0
	018 JumpIfEqual {45}
	019 Move X9, 0x6C8000
	020 Move X9, [X9+3672]
	021 Move W8, [X8+24]
	022 Move X0, [X9]
	023 Add W1, W8, 1
	024 Call 0x1C17D6C
	025 Compare X0, 0
	026 JumpIfEqual {45}
	027 Move W8, [X0+24]
	028 Move X9, X8
	029 ShiftRight X9, 32
	030 And X9, X9, 0x7FFFFFFF
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Move X9, X31
	033 Move X10, W8
	034 Add X11, X0, 32
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Subtract W12, W9, 1
	037 Move [X11], W12
	038 Add X9, X9, 1
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Move X20, [X31+16]
	041 Move X19, [X31+24]
	042 Move X30, [X31+32]
	043 Return X0
	044 Call 0x1C17F28
	045 Call 0x1C17F20

Method: System.Boolean get_supportsCameraDepthTexture()

Disassembly:
	0x03A2D350 BL 0x1C16CF4
	0x03A2D354 ADRP X0, 0x727000

ISIL:
	001 Move W0, [X0+76]
	002 Return X0

Method: System.Void set_supportsCameraDepthTexture(System.Boolean value)

Disassembly:
	0x03A2D358 LDR X0, [X0 + 0xC90]
	0x03A2D35C BL 0x1C16CF4
	0x03A2D360 ADRP X0, 0x6CC000

ISIL:
	001 And W8, W1, 1
	002 Move [X0+76], W8
	003 Return 

Method: System.Boolean get_supportsCameraOpaqueTexture()

Disassembly:
	0x03A2D364 LDR X0, [X0 + 0x6C8]
	0x03A2D368 BL 0x1C16CF4

ISIL:
	001 Move W0, [X0+77]
	002 Return X0

Method: System.Void set_supportsCameraOpaqueTexture(System.Boolean value)

Disassembly:
	0x03A2D36C MOVZ W8, 0x1
	0x03A2D370 STRB W8, [X20 + 0x6D]
	0x03A2D374 LDR X8, [X21]

ISIL:
	001 And W8, W1, 1
	002 Move [X0+77], W8
	003 Return 

Method: UnityEngine.Rendering.Universal.Downsampling get_opaqueDownsampling()

Disassembly:
	0x03A2D378 ADRP X9, 0xFFFFFFFFFD0C0000
	0x03A2D37C LDR V0, [X9 + 0xD78]

ISIL:
	001 Move W0, [X0+80]
	002 Return X0

Method: System.Boolean get_supportsTerrainHoles()

Disassembly:
	0x03A2D380 MOVZ W9, 0x400
	0x03A2D384 LDR X8, [X8 + 0xB8]

ISIL:
	001 Move W0, [X0+84]
	002 Return X0

Method: UnityEngine.Rendering.Universal.StoreActionsOptimization get_storeActionsOptimization()

Disassembly:
	0x03A2D388 MOVZ W1, 0x5
	0x03A2D38C STR D0, [X8]

ISIL:
	001 Move W0, [X0+244]
	002 Return X0

Method: System.Void set_storeActionsOptimization(UnityEngine.Rendering.Universal.StoreActionsOptimization value)

Disassembly:
	0x03A2D390 STR W9, [X8 + 0x8]
	0x03A2D394 LDR X0, [X19]

ISIL:
	001 Move [X0+244], W1
	002 Return 

Method: System.Boolean get_supportsHDR()

Disassembly:
	0x03A2D398 BL 0x1C16D6C
	0x03A2D39C LDR X8, [X22]

ISIL:
	001 Move W0, [X0+85]
	002 Return X0

Method: System.Void set_supportsHDR(System.Boolean value)

Disassembly:
	0x03A2D3A0 MOV X19, X0
	0x03A2D3A4 MOVZ W1, 0x1
	0x03A2D3A8 MOV X0, X8

ISIL:
	001 And W8, W1, 1
	002 Move [X0+85], W8
	003 Return 

Method: UnityEngine.Rendering.Universal.HDRColorBufferPrecision get_hdrColorBufferPrecision()

Disassembly:
	0x03A2D3AC BL 0x1C16D6C
	0x03A2D3B0 CBZ X0, 0x3A2D4BC

ISIL:
	001 Move W0, [X0+88]
	002 Return X0

Method: System.Void set_hdrColorBufferPrecision(UnityEngine.Rendering.Universal.HDRColorBufferPrecision value)

Disassembly:
	0x03A2D3B4 LDR W8, [X0 + 0x18]
	0x03A2D3B8 CBZ W8, 0x3A2D4B8

ISIL:
	001 Move [X0+88], W1
	002 Return 

Method: System.Int32 get_msaaSampleCount()

Disassembly:
	0x03A2D3BC MOVZ W8, 0x5
	0x03A2D3C0 STR W8, [X0 + 0x20]

ISIL:
	001 Move W0, [X0+92]
	002 Return X0

Method: System.Void set_msaaSampleCount(System.Int32 value)

Disassembly:
	0x03A2D3C4 CBZ X19, 0x3A2D4BC
	0x03A2D3C8 LDR W8, [X19 + 0x18]

ISIL:
	001 Move [X0+92], W1
	002 Return 

Method: System.Single get_renderScale()

Disassembly:
	0x03A2D3CC CBZ W8, 0x3A2D4B8
	0x03A2D3D0 STR X0, [X19 + 0x20]

ISIL:
	001 Move V0, [X0+96]
	002 Return V0

Method: System.Void set_renderScale(System.Single value)

Disassembly:
	0x03A2D3D4 LDR X0, [X22]
	0x03A2D3D8 MOVZ W1, 0x1
	0x03A2D3DC BL 0x1C16D6C
	0x03A2D3E0 CBZ X0, 0x3A2D4BC
	0x03A2D3E4 LDR W8, [X0 + 0x18]
	0x03A2D3E8 CBZ W8, 0x3A2D4B8

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Call UniversalRenderPipelineAsset.ValidateRenderScale, X0, V0
	005 Move [X19+96], S0
	006 Move X30, [X31+16]
	007 Move X19, [X31+24]
	008 Return 

Method: System.Boolean get_enableLODCrossFade()

Disassembly:
	0x03A2D468 STR X20, [X19 + 0x38]
	0x03A2D46C LDR X0, [X22]

ISIL:
	001 Move W0, [X0+112]
	002 Return X0

Method: UnityEngine.Rendering.Universal.LODCrossFadeDitheringType get_lodCrossFadeDitheringType()

Disassembly:
	0x03A2D470 MOVZ W1, 0x1
	0x03A2D474 BL 0x1C16D6C

ISIL:
	001 Move W0, [X0+116]
	002 Return X0

Method: UnityEngine.Rendering.Universal.UpscalingFilterSelection get_upscalingFilter()

Disassembly:
	0x03A2D478 CBZ X0, 0x3A2D4BC
	0x03A2D47C LDR W8, [X0 + 0x18]

ISIL:
	001 Move W0, [X0+100]
	002 Return X0

Method: System.Void set_upscalingFilter(UnityEngine.Rendering.Universal.UpscalingFilterSelection value)

Disassembly:
	0x03A2D480 CBZ W8, 0x3A2D4B8
	0x03A2D484 MOVZ W8, 0x4A

ISIL:
	001 Move [X0+100], W1
	002 Return 

Method: System.Boolean get_fsrOverrideSharpness()

Disassembly:
	0x03A2D488 STR W8, [X0 + 0x20]
	0x03A2D48C LDR W8, [X19 + 0x18]

ISIL:
	001 Move W0, [X0+104]
	002 Return X0

Method: System.Void set_fsrOverrideSharpness(System.Boolean value)

Disassembly:
	0x03A2D490 CMP W8, 0x4
	0x03A2D494 B.LS 0x3A2D4B8
	0x03A2D498 STR X0, [X19 + 0x40]

ISIL:
	001 And W8, W1, 1
	002 Move [X0+104], W8
	003 Return 

Method: System.Single get_fsrSharpness()

Disassembly:
	0x03A2D49C LDR X8, [X21]
	0x03A2D4A0 LDP X22, X21, [X31 + 0x10]

ISIL:
	001 Move V0, [X0+108]
	002 Return V0

Method: System.Void set_fsrSharpness(System.Single value)

Disassembly:
	0x03A2D4A4 LDR X8, [X8 + 0xB8]
	0x03A2D4A8 STR X19, [X8 + 0x10]

ISIL:
	001 Move [X0+108], S0
	002 Return 

Method: UnityEngine.Rendering.Universal.ShEvalMode get_shEvalMode()

Disassembly:
	0x03A2D4AC LDP X20, X19, [X31 + 0x20]
	0x03A2D4B0 LDR X30, [X31], #0x30

ISIL:
	001 Move W0, [X0+120]
	002 Return X0

Method: System.Void set_shEvalMode(UnityEngine.Rendering.Universal.ShEvalMode value)

Disassembly:
	0x03A2D4B4 RET
	0x03A2D4B8 BL 0x1C16F28

ISIL:
	001 Move [X0+120], W1
	002 Return 

Method: UnityEngine.Rendering.Universal.LightRenderingMode get_mainLightRenderingMode()

Disassembly:
	0x03A2D4BC BL 0x1C16F20
	0x03A2D4C0 STP X30, X21, [X31 - 0x20]!

ISIL:
	001 Move W0, [X0+124]
	002 Return X0

Method: System.Void set_mainLightRenderingMode(UnityEngine.Rendering.Universal.LightRenderingMode value)

Disassembly:
	0x03A2D4C4 STP X20, X19, [X31 + 0x10]
	0x03A2D4C8 ADRP X20, 0x9B5000

ISIL:
	001 Move [X0+124], W1
	002 Return 

Method: System.Boolean get_supportsMainLightShadows()

Disassembly:
	0x03A2D4CC ADRP X21, 0x6C6000
	0x03A2D4D0 LDRB W8, [X20 + 0x6E]

ISIL:
	001 Move W0, [X0+128]
	002 Return X0

Method: System.Void set_supportsMainLightShadows(System.Boolean value)

Disassembly:
	0x03A2D4D4 LDR X21, [X21 + 0x598]
	0x03A2D4D8 MOV X19, X0
	0x03A2D4DC TBNZ X8, 0x0, 0x3A2D4F4

ISIL:
	001 And W8, W1, 1
	002 Move [X0+128], W8
	003 Return 

Method: System.Int32 get_mainLightShadowmapResolution()

Disassembly:
	0x03A2D4E0 ADRP X0, 0x6C6000
	0x03A2D4E4 LDR X0, [X0 + 0x598]

ISIL:
	001 Move W0, [X0+132]
	002 Return X0

Method: System.Void set_mainLightShadowmapResolution(System.Int32 value)

Disassembly:
	0x03A2D4E8 BL 0x1C16CF4
	0x03A2D4EC MOVZ W8, 0x1

ISIL:
	001 Move [X0+132], W1
	002 Return 

Method: UnityEngine.Rendering.Universal.LightRenderingMode get_additionalLightsRenderingMode()

Disassembly:
	0x03A2D4F0 STRB W8, [X20 + 0x6E]
	0x03A2D4F4 LDR X0, [X21]

ISIL:
	001 Move W0, [X0+136]
	002 Return X0

Method: System.Void set_additionalLightsRenderingMode(UnityEngine.Rendering.Universal.LightRenderingMode value)

Disassembly:
	0x03A2D4F8 LDR X20, [X19 + 0x10]
	0x03A2D4FC LDR W8, [X0 + 0xE0]

ISIL:
	001 Move [X0+136], W1
	002 Return 

Method: System.Int32 get_maxAdditionalLightsCount()

Disassembly:
	0x03A2D500 CBNZ W8, 0x3A2D508
	0x03A2D504 BL 0x1C16DFC

ISIL:
	001 Move W0, [X0+140]
	002 Return X0

Method: System.Void set_maxAdditionalLightsCount(System.Int32 value)

Disassembly:
	0x03A2D508 MOV X0, X20
	0x03A2D50C MOV X1, X31
	0x03A2D510 MOV X2, X31
	0x03A2D514 BL 0x3C3883C
	0x03A2D518 TBZ X0, 0x0, 0x3A2D52C
	0x03A2D51C LDP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Call UniversalRenderPipelineAsset.ValidatePerObjectLights, X0, X1
	005 Move [X19+140], W0
	006 Move X30, [X31+16]
	007 Move X19, [X31+24]
	008 Return 

Method: System.Boolean get_supportsAdditionalLightShadows()

Disassembly:
	0x03A2D5C0 LDR X0, [X0 + 0xC98]
	0x03A2D5C4 BL 0x1C16CF4

ISIL:
	001 Move W0, [X0+144]
	002 Return X0

Method: System.Void set_supportsAdditionalLightShadows(System.Boolean value)

Disassembly:
	0x03A2D5C8 MOVZ W8, 0x1
	0x03A2D5CC STRB W8, [X19 + 0x6F]
	0x03A2D5D0 LDR X0, [X20]

ISIL:
	001 And W8, W1, 1
	002 Move [X0+144], W8
	003 Return 

Method: System.Int32 get_additionalLightsShadowmapResolution()

Disassembly:
	0x03A2D5D4 BL 0x1C16F10
	0x03A2D5D8 MOV X19, X0

ISIL:
	001 Move W0, [X0+148]
	002 Return X0

Method: System.Void set_additionalLightsShadowmapResolution(System.Int32 value)

Disassembly:
	0x03A2D5DC BL 0x3A2D5F0
	0x03A2D5E0 MOV X0, X19

ISIL:
	001 Move [X0+148], W1
	002 Return 

Method: System.Int32 get_additionalLightsShadowResolutionTierLow()

Disassembly:
	0x03A2D5E4 LDP X20, X19, [X31 + 0x10]
	0x03A2D5E8 LDR X30, [X31], #0x20

ISIL:
	001 Move W0, [X0+152]
	002 Return X0

Method: System.Void set_additionalLightsShadowResolutionTierLow(System.Int32 value)

Disassembly:
	0x03A2D5EC RET
	0x03A2D5F0 STP X29, X30, [X31 - 0x60]!

ISIL:
	001 Move [X0+152], W1
	002 Return 

Method: System.Int32 get_additionalLightsShadowResolutionTierMedium()

Disassembly:
	0x03A2D5F4 STP X28, X27, [X31 + 0x10]
	0x03A2D5F8 STP X26, X25, [X31 + 0x20]

ISIL:
	001 Move W0, [X0+156]
	002 Return X0

Method: System.Void set_additionalLightsShadowResolutionTierMedium(System.Int32 value)

Disassembly:
	0x03A2D5FC STP X24, X23, [X31 + 0x30]
	0x03A2D600 STP X22, X21, [X31 + 0x40]

ISIL:
	001 Move [X0+156], W1
	002 Return 

Method: System.Int32 get_additionalLightsShadowResolutionTierHigh()

Disassembly:
	0x03A2D604 STP X20, X19, [X31 + 0x50]
	0x03A2D608 ADRP X21, 0x9B5000

ISIL:
	001 Move W0, [X0+160]
	002 Return X0

Method: System.Void set_additionalLightsShadowResolutionTierHigh(System.Int32 value)

Disassembly:
	0x03A2D60C ADRP X20, 0x723000
	0x03A2D610 LDRB W8, [X21 + 0x73]

ISIL:
	001 Move [X0+160], W1
	002 Return 

Method: System.Int32 GetAdditionalLightsShadowResolution(System.Int32 additionalLightsShadowResolutionTier)

Disassembly:
	0x03A2D614 LDR X20, [X20 + 0x778]
	0x03A2D618 MOV X19, X0
	0x03A2D61C TBNZ X8, 0x0, 0x3A2D694
	0x03A2D620 ADRP X0, 0x6C7000
	0x03A2D624 LDR X0, [X0 + 0xE70]
	0x03A2D628 BL 0x1C16CF4
	0x03A2D62C ADRP X0, 0x723000
	0x03A2D630 LDR X0, [X0 + 0x778]
	0x03A2D634 BL 0x1C16CF4
	0x03A2D638 ADRP X0, 0x724000
	0x03A2D63C LDR X0, [X0 + 0x7B8]
	0x03A2D640 BL 0x1C16CF4
	0x03A2D644 ADRP X0, 0x727000
	0x03A2D648 LDR X0, [X0 + 0xCA0]
	0x03A2D64C BL 0x1C16CF4
	0x03A2D650 ADRP X0, 0x727000
	0x03A2D654 LDR X0, [X0 + 0xCA8]
	0x03A2D658 BL 0x1C16CF4
	0x03A2D65C ADRP X0, 0x727000
	0x03A2D660 LDR X0, [X0 + 0xCB0]
	0x03A2D664 BL 0x1C16CF4
	0x03A2D668 ADRP X0, 0x727000
	0x03A2D66C LDR X0, [X0 + 0xCB8]
	0x03A2D670 BL 0x1C16CF4
	0x03A2D674 ADRP X0, 0x727000
	0x03A2D678 LDR X0, [X0 + 0xCC0]
	0x03A2D67C BL 0x1C16CF4
	0x03A2D680 ADRP X0, 0x727000
	0x03A2D684 LDR X0, [X0 + 0xCC8]
	0x03A2D688 BL 0x1C16CF4
	0x03A2D68C MOVZ W8, 0x1
	0x03A2D690 STRB W8, [X21 + 0x73]
	0x03A2D694 MOV X0, X19
	0x03A2D698 MOV X1, X31
	0x03A2D69C BL 0x39A0840
	0x03A2D6A0 BL 0x3A2D89C
	0x03A2D6A4 MOV X1, X0
	0x03A2D6A8 MOV X0, X19
	0x03A2D6AC MOV X2, X31
	0x03A2D6B0 BL 0x39A06DC
	0x03A2D6B4 LDR X0, [X20]
	0x03A2D6B8 LDR W8, [X0 + 0xE0]
	0x03A2D6BC CBNZ W8, 0x3A2D6C4
	0x03A2D6C0 BL 0x1C16DFC
	0x03A2D6C4 MOV X0, X31
	0x03A2D6C8 BL 0x399C120
	0x03A2D6CC CBZ X0, 0x3A2D88C
	0x03A2D6D0 MOVZ W1, 0x10
	0x03A2D6D4 MOV X2, X31
	0x03A2D6D8 BL 0x39AA684

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x9B6000
	007 Move X21, 0x728000
	008 Move W8, [X22+95]
	009 Move X21, [X21+3120]
	010 Move W20, W1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x728000
	017 Move X0, [X0+3120]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+95], W8
	021 Move X0, [X21]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {27}
	025 Call 0x1C17DFC
	026 Move X0, [X21]
	027 Move X8, [X0+184]
	028 Move W9, [X8+4]
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move W9, [X0+224]
	031 Compare W9, 0
	032 JumpIfNotEqual {36}
	033 Call 0x1C17DFC
	034 Move X0, [X21]
	035 Move X8, [X0+184]
	036 Move W9, [X8+8]
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move W9, [X0+224]
	039 Compare W9, 0
	040 JumpIfNotEqual {44}
	041 Call 0x1C17DFC
	042 Move X8, [X21]
	043 Move X8, [X8+184]
	044 Move W8, [X8+12]
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Add X8, X19, 156
	047 Add X8, X19, 152
	048 Move W0, [X8]
	049 Move X20, [X31+32]
	050 Move X19, [X31+40]
	051 Move X22, [X31+16]
	052 Move X21, [X31+24]
	053 Move X30, [X31+48]
	054 Return X0
	055 Add X8, X19, 160

Method: System.Boolean get_reflectionProbeBlending()

Disassembly:
	0x03A2D6DC CBZ X0, 0x3A2D88C
	0x03A2D6E0 LDR X8, [X0 + 0x18]

ISIL:
	001 Move W0, [X0+164]
	002 Return X0

Method: System.Void set_reflectionProbeBlending(System.Boolean value)

Disassembly:
	0x03A2D6E4 MOV X20, X0
	0x03A2D6E8 CMP W8, 0x1
	0x03A2D6EC B.LT 0x3A2D870

ISIL:
	001 And W8, W1, 1
	002 Move [X0+164], W8
	003 Return 

Method: System.Boolean get_reflectionProbeBoxProjection()

Disassembly:
	0x03A2D6F0 ADRP X27, 0x727000
	0x03A2D6F4 ADRP X28, 0x724000

ISIL:
	001 Move W0, [X0+165]
	002 Return X0

Method: System.Void set_reflectionProbeBoxProjection(System.Boolean value)

Disassembly:
	0x03A2D6F8 LDR X27, [X27 + 0xCC0]
	0x03A2D6FC LDR X28, [X28 + 0x7B8]
	0x03A2D700 MOV X26, X31

ISIL:
	001 And W8, W1, 1
	002 Move [X0+165], W8
	003 Return 

Method: System.Single get_shadowDistance()

Disassembly:
	0x03A2D704 AND X8, X8, 0x0
	0x03A2D708 ADD X29, X20, 0x20

ISIL:
	001 Move V0, [X0+168]
	002 Return V0

Method: System.Void set_shadowDistance(System.Single value)

Disassembly:
	0x03A2D70C CMP X26, W8, UXTW
	0x03A2D710 B.CS 0x3A2D890
	0x03A2D714 LDR X0, [X27]
	0x03A2D718 LDR X21, [X29, X26, LSL #3]

ISIL:
	001 Move S1, W31
	002 NotImplemented "Instruction FMAX not yet implemented."
	003 Move [X0+168], S0
	004 Return 

Method: System.Int32 get_shadowCascadeCount()

Disassembly:
	0x03A2D71C BL 0x1C16F10
	0x03A2D720 MOV X1, X31

ISIL:
	001 Move W0, [X0+172]
	002 Return X0

Method: System.Void set_shadowCascadeCount(System.Int32 value)

Disassembly:
	0x03A2D724 MOV X22, X0
	0x03A2D728 BL 0x33BDD8C
	0x03A2D72C CBZ X22, 0x3A2D88C
	0x03A2D730 CBZ X21, 0x3A2D754
	0x03A2D734 LDR X9, [X21]
	0x03A2D738 LDR X8, [X28]
	0x03A2D73C LDRB W11, [X9 + 0x130]
	0x03A2D740 LDRB W10, [X8 + 0x130]
	0x03A2D744 CMP W11, W10
	0x03A2D748 B.CS 0x3A2D75C
	0x03A2D74C MOV X24, X31
	0x03A2D750 B 0x3A2D770
	0x03A2D754 STR X31, [X22 + 0x10]
	0x03A2D758 B 0x3A2D850
	0x03A2D75C LDR X9, [X9 + 0xC8]
	0x03A2D760 ADD X9, X9, X10, 0x3, LSL
	0x03A2D764 LDUR X9, [X9 - 0x8]
	0x03A2D768 CMP X9, X8
	0x03A2D76C CSEL X24, X21, X31, EQ
	0x03A2D770 STR X24, [X22 + 0x10]
	0x03A2D774 CBZ X24, 0x3A2D850
	0x03A2D778 LDR X8, [X24 + 0x58]
	0x03A2D77C CBNZ X8, 0x3A2D7A8
	0x03A2D780 ADRP X8, 0x727000
	0x03A2D784 LDR X8, [X8 + 0xCB0]
	0x03A2D788 LDR X0, [X8]
	0x03A2D78C BL 0x1C16F10
	0x03A2D790 ADRP X8, 0x727000
	0x03A2D794 LDR X8, [X8 + 0xCA8]
	0x03A2D798 MOV X23, X0
	0x03A2D79C LDR X1, [X8]
	0x03A2D7A0 BL 0x318442C
	0x03A2D7A4 STR X23, [X24 + 0x58]
	0x03A2D7A8 LDR X8, [X22 + 0x10]
	0x03A2D7AC CBZ X8, 0x3A2D88C
	0x03A2D7B0 LDR X24, [X8 + 0x58]
	0x03A2D7B4 ADRP X8, 0x727000
	0x03A2D7B8 LDR X8, [X8 + 0xCC8]
	0x03A2D7BC LDR X23, [X8]
	0x03A2D7C0 ADRP X8, 0x6C7000
	0x03A2D7C4 LDR X8, [X8 + 0xE70]
	0x03A2D7C8 LDR X0, [X8]
	0x03A2D7CC BL 0x1C16F10
	0x03A2D7D0 ADRP X8, 0x727000
	0x03A2D7D4 LDR X8, [X8 + 0xCB8]
	0x03A2D7D8 MOV X1, X22
	0x03A2D7DC MOV X3, X31
	0x03A2D7E0 MOV X25, X0
	0x03A2D7E4 LDR X2, [X8]
	0x03A2D7E8 BL 0x3314368
	0x03A2D7EC CBZ X24, 0x3A2D88C
	0x03A2D7F0 ADRP X9, 0x727000
	0x03A2D7F4 LDR W10, [X24 + 0x1C]
	0x03A2D7F8 LDR X8, [X24 + 0x10]
	0x03A2D7FC LDR X9, [X9 + 0xCA0]
	0x03A2D800 ADD W10, W10, 0x1

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Subtract W8, W1, 1
	007 NotImplemented "Instruction CMP not yet implemented."
	008 Move X20, [X31+32]
	009 Move X19, [X31+40]
	010 Move X30, [X31+16]
	011 Move X21, [X31+24]
	012 Move [X0+172], W1
	013 Add X31, X31, 48
	014 Return 
	015 Move [X31+12], W1
	016 Move X19, 0x6C7000
	017 Move X19, [X19+1880]
	018 Move X0, X19
	019 Call 0x1C17D08
	020 Add X1, X31, 12
	021 Call 0x1C17E04
	022 Move X20, X0
	023 Move W8, 1
	024 Move X0, X19
	025 Move [X31+8], W8
	026 Call 0x1C17D08
	027 Add X1, X31, 8
	028 Call 0x1C17E04
	029 Move X21, X0
	030 Move W8, 4
	031 Move X0, X19
	032 Move [X31+4], W8
	033 Call 0x1C17D08
	034 Add X1, X31, 4
	035 Call 0x1C17E04
	036 Move X19, X0
	037 Move X0, 0x728000
	038 Move X0, [X0+3128]
	039 Call 0x1C17D08
	040 Move X1, X20
	041 Move X2, X21
	042 Move X3, X19
	043 Move X4, X31
	044 Call String.Format, X0, X1, X2, X3
	045 Move X19, X0
	046 Move X0, 0x6CF000
	047 Move X0, [X0+1400]
	048 Call 0x1C17D08
	049 Call 0x1C17F10
	050 Move X1, X19
	051 Move X2, X31
	052 Move X20, X0
	053 Call ArgumentException..ctor, X0, X1
	054 Move X0, 0x728000
	055 Move X0, [X0+3136]
	056 Call 0x1C17D08
	057 Move X1, X0
	058 Move X0, X20
	059 Call 0x1C17DEC

Method: System.Single get_cascade2Split()

Disassembly:
	0x03A2D804 LDR X9, [X9]
	0x03A2D808 STR W10, [X24 + 0x1C]

ISIL:
	001 Move V0, [X0+176]
	002 Return V0

Method: System.Void set_cascade2Split(System.Single value)

Disassembly:
	0x03A2D80C CBZ X8, 0x3A2D88C
	0x03A2D810 LDRSW X10, [X24 + 0x18]

ISIL:
	001 Move [X0+176], S0
	002 Return 

Method: UnityEngine.Vector2 get_cascade3Split()

Disassembly:
	0x03A2D814 LDR W11, [X8 + 0x18]
	0x03A2D818 CMP W10, W11

ISIL:
	001 Move S0, [X0+180]
	002 Move S1, [X0+184]
	003 Return X0

Method: System.Void set_cascade3Split(UnityEngine.Vector2 value)

Disassembly:
	0x03A2D81C B.CS 0x3A2D834
	0x03A2D820 ADD W9, W10, 0x1

ISIL:
	001 Move [X0+180], S0
	002 Move [X0+188], S1
	003 Return 

Method: UnityEngine.Vector3 get_cascade4Split()

Disassembly:
	0x03A2D824 ADD X8, X8, X10, 0x4, LSL
	0x03A2D828 STR W9, [X24 + 0x18]
	0x03A2D82C STP X23, X25, [X8 + 0x20]

ISIL:
	001 Move S0, [X0+188]
	002 Move S1, [X0+192]
	003 Move V2, [X0+196]
	004 Return X0

Method: System.Void set_cascade4Split(UnityEngine.Vector3 value)

Disassembly:
	0x03A2D830 B 0x3A2D850
	0x03A2D834 LDR X8, [X9 + 0x20]
	0x03A2D838 MOV X0, X24

ISIL:
	001 Move [X0+188], S0
	002 Move [X0+196], S1
	003 Move [X0+196], S2
	004 Return 

Method: System.Single get_cascadeBorder()

Disassembly:
	0x03A2D83C MOV X1, X23
	0x03A2D840 MOV X2, X25

ISIL:
	001 Move V0, [X0+200]
	002 Return V0

Method: System.Void set_cascadeBorder(System.Single value)

Disassembly:
	0x03A2D844 LDR X8, [X8 + 0xC0]
	0x03A2D848 LDR X3, [X8 + 0x70]

ISIL:
	001 Move [X0+200], S0
	002 Return 

Method: System.Single get_shadowDepthBias()

Disassembly:
	0x03A2D84C BL 0x3184C38
	0x03A2D850 MOV X0, X19

ISIL:
	001 Move V0, [X0+204]
	002 Return V0

Method: System.Void set_shadowDepthBias(System.Single value)

Disassembly:
	0x03A2D854 MOV X1, X21
	0x03A2D858 MOV X2, X31
	0x03A2D85C BL 0x39A06DC
	0x03A2D860 LDR W8, [X20 + 0x18]
	0x03A2D864 ADD X26, X26, 0x1
	0x03A2D868 CMP X26, W8, SXTW

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Call UniversalRenderPipelineAsset.ValidateShadowBias, X0, V0
	005 Move [X19+204], S0
	006 Move X30, [X31+16]
	007 Move X19, [X31+24]
	008 Return 

Method: System.Single get_shadowNormalBias()

Disassembly:
	0x03A2D8DC BL 0x1C16CF4
	0x03A2D8E0 ADRP X0, 0x727000

ISIL:
	001 Move V0, [X0+208]
	002 Return V0

Method: System.Void set_shadowNormalBias(System.Single value)

Disassembly:
	0x03A2D8E4 LDR X0, [X0 + 0xCE0]
	0x03A2D8E8 BL 0x1C16CF4
	0x03A2D8EC ADRP X0, 0x727000
	0x03A2D8F0 LDR X0, [X0 + 0xCE8]
	0x03A2D8F4 BL 0x1C16CF4
	0x03A2D8F8 MOVZ W8, 0x1

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Call UniversalRenderPipelineAsset.ValidateShadowBias, X0, V0
	005 Move [X19+208], S0
	006 Move X30, [X31+16]
	007 Move X19, [X31+24]
	008 Return 

Method: System.Boolean get_supportsSoftShadows()

Disassembly:
	0x03A2D8FC STRB W8, [X19 + 0x70]
	0x03A2D900 LDR X0, [X20]

ISIL:
	001 Move W0, [X0+212]
	002 Return X0

Method: System.Void set_supportsSoftShadows(System.Boolean value)

Disassembly:
	0x03A2D904 BL 0x1C16F10
	0x03A2D908 MOV X1, X31
	0x03A2D90C MOV X19, X0

ISIL:
	001 And W8, W1, 1
	002 Move [X0+212], W8
	003 Return 

Method: UnityEngine.Rendering.Universal.SoftShadowQuality get_softShadowQuality()

Disassembly:
	0x03A2D910 BL 0x39AF590
	0x03A2D914 CBZ X19, 0x3A2D9C0

ISIL:
	001 Move W0, [X0+220]
	002 Return X0

Method: System.Void set_softShadowQuality(UnityEngine.Rendering.Universal.SoftShadowQuality value)

Disassembly:
	0x03A2D918 ADRP X8, 0x727000
	0x03A2D91C LDR X8, [X8 + 0xCE8]

ISIL:
	001 Move [X0+220], W1
	002 Return 

Method: System.Boolean get_supportsDynamicBatching()

Disassembly:
	0x03A2D920 ADRP X22, 0x727000
	0x03A2D924 MOVZ W9, 0x1

ISIL:
	001 Move W0, [X0+233]
	002 Return X0

Method: System.Void set_supportsDynamicBatching(System.Boolean value)

Disassembly:
	0x03A2D928 LDR X8, [X8]
	0x03A2D92C LDR X22, [X22 + 0xCE0]
	0x03A2D930 STR W9, [X19 + 0x48]

ISIL:
	001 And W8, W1, 1
	002 Move [X0+233], W8
	003 Return 

Method: System.Boolean get_supportsMixedLighting()

Disassembly:
	0x03A2D934 STR X8, [X19 + 0x28]
	0x03A2D938 LDR X0, [X22]

ISIL:
	001 Move W0, [X0+234]
	002 Return X0

Method: System.Boolean get_supportsLightCookies()

Disassembly:
	0x03A2D93C LDR W8, [X0 + 0xE0]
	0x03A2D940 CBNZ W8, 0x3A2D94C

ISIL:
	001 Move W0, [X0+235]
	002 Return X0

Method: System.Boolean get_supportsLightLayers()

Disassembly:
	0x03A2D944 BL 0x1C16DFC
	0x03A2D948 LDR X0, [X22]

ISIL:
	001 Move W0, [X0+236]
	002 Return X0

Method: System.Boolean get_useRenderingLayers()

Disassembly:
	0x03A2D94C LDR X8, [X0 + 0xB8]
	0x03A2D950 LDR X20, [X8 + 0x8]

ISIL:
	001 Move W0, [X0+236]
	002 Return X0

Method: UnityEngine.Rendering.Universal.VolumeFrameworkUpdateMode get_volumeFrameworkUpdateMode()

Disassembly:
	0x03A2D954 CBNZ X20, 0x3A2D9A8
	0x03A2D958 LDR W8, [X0 + 0xE0]

ISIL:
	001 Move W0, [X0+284]
	002 Return X0

Method: UnityEngine.Rendering.Universal.PipelineDebugLevel get_debugLevel()

Disassembly:
	0x03A2D95C CBNZ W8, 0x3A2D968
	0x03A2D960 BL 0x1C16DFC

ISIL:
	001 Move W0, W31
	002 Return X0

Method: System.Boolean get_useSRPBatcher()

Disassembly:
	0x03A2D964 LDR X0, [X22]
	0x03A2D968 ADRP X9, 0x6CF000

ISIL:
	001 Move W0, [X0+232]
	002 Return X0

Method: System.Void set_useSRPBatcher(System.Boolean value)

Disassembly:
	0x03A2D96C LDR X8, [X0 + 0xB8]
	0x03A2D970 LDR X9, [X9 + 0x940]
	0x03A2D974 LDR X21, [X8]

ISIL:
	001 And W8, W1, 1
	002 Move [X0+232], W8
	003 Return 

Method: System.Boolean get_enableRenderGraph()

Disassembly:
	0x03A2D978 LDR X0, [X9]
	0x03A2D97C BL 0x1C16F10

ISIL:
	001 Move W0, [X0+248]
	002 Return X0

Method: System.Void set_enableRenderGraph(System.Boolean value)

Disassembly:
	0x03A2D980 ADRP X8, 0x727000
	0x03A2D984 LDR X8, [X8 + 0xCD8]
	0x03A2D988 MOV X1, X21

ISIL:
	001 And W8, W1, 1
	002 Move [X0+248], W8
	003 Return 

Method: UnityEngine.Rendering.Universal.ColorGradingMode get_colorGradingMode()

Disassembly:
	0x03A2D98C MOV X3, X31
	0x03A2D990 MOV X20, X0

ISIL:
	001 Move W0, [X0+252]
	002 Return X0

Method: System.Void set_colorGradingMode(UnityEngine.Rendering.Universal.ColorGradingMode value)

Disassembly:
	0x03A2D994 LDR X2, [X8]
	0x03A2D998 BL 0x2D27194

ISIL:
	001 Move [X0+252], W1
	002 Return 

Method: System.Int32 get_colorGradingLutSize()

Disassembly:
	0x03A2D99C LDR X8, [X22]
	0x03A2D9A0 LDR X8, [X8 + 0xB8]

ISIL:
	001 Move W0, [X0+256]
	002 Return X0

Method: System.Void set_colorGradingLutSize(System.Int32 value)

Disassembly:
	0x03A2D9A4 STR X20, [X8 + 0x8]
	0x03A2D9A8 STR X20, [X19 + 0x40]
	0x03A2D9AC MOV X0, X19
	0x03A2D9B0 LDP X20, X19, [X31 + 0x20]
	0x03A2D9B4 LDP X22, X21, [X31 + 0x10]
	0x03A2D9B8 LDR X30, [X31], #0x30
	0x03A2D9BC RET
	0x03A2D9C0 BL 0x1C16F20

ISIL:
	001 NotImplemented "Instruction CMP not yet implemented."
	002 Move W8, 65
	003 NotImplemented "Instruction CSEL not yet implemented."
	004 NotImplemented "Instruction CMP not yet implemented."
	005 Move W9, 16
	006 NotImplemented "Instruction CSEL not yet implemented."
	007 Move [X0+256], W8
	008 Return 

Method: System.Boolean get_useFastSRGBLinearConversion()

Disassembly:
	0x03A2D9C4 STR X30, [X31 - 0x20]!
	0x03A2D9C8 STP X20, X19, [X31 + 0x10]

ISIL:
	001 Move W0, [X0+260]
	002 Return X0

Method: System.Boolean get_supportDataDrivenLensFlare()

Disassembly:
	0x03A2D9CC ADRP X19, 0x9B5000
	0x03A2D9D0 ADRP X20, 0x727000

ISIL:
	001 Move W0, [X0+261]
	002 Return X0

Method: System.Boolean get_useAdaptivePerformance()

Disassembly:
	0x03A2D9D4 LDRB W8, [X19 + 0x71]
	0x03A2D9D8 LDR X20, [X20 + 0xCE0]

ISIL:
	001 Move W0, [X0+249]
	002 Return X0

Method: System.Void set_useAdaptivePerformance(System.Boolean value)

Disassembly:
	0x03A2D9DC TBNZ X8, 0x0, 0x3A2D9F4
	0x03A2D9E0 ADRP X0, 0x727000
	0x03A2D9E4 LDR X0, [X0 + 0xCE0]

ISIL:
	001 And W8, W1, 1
	002 Move [X0+249], W8
	003 Return 

Method: System.Boolean get_conservativeEnclosingSphere()

Disassembly:
	0x03A2D9E8 BL 0x1C16CF4
	0x03A2D9EC MOVZ W8, 0x1

ISIL:
	001 Move W0, [X0+213]
	002 Return X0

Method: System.Void set_conservativeEnclosingSphere(System.Boolean value)

Disassembly:
	0x03A2D9F0 STRB W8, [X19 + 0x71]
	0x03A2D9F4 LDR X0, [X20]
	0x03A2D9F8 BL 0x1C16F10

ISIL:
	001 And W8, W1, 1
	002 Move [X0+213], W8
	003 Return 

Method: System.Int32 get_numIterationsEnclosingSphere()

Disassembly:
	0x03A2D9FC MOV X1, X31
	0x03A2DA00 MOV X19, X0

ISIL:
	001 Move W0, [X0+216]
	002 Return X0

Method: System.Void set_numIterationsEnclosingSphere(System.Int32 value)

Disassembly:
	0x03A2DA04 BL 0x33BDD8C
	0x03A2DA08 LDR X8, [X20]

ISIL:
	001 Move [X0+216], W1
	002 Return 

Method: UnityEngine.Material get_defaultMaterial()

Disassembly:
	0x03A2DA0C LDR X8, [X8 + 0xB8]
	0x03A2DA10 STR X19, [X8]

ISIL:
	001 Move X0, X31
	002 Return X0

Method: UnityEngine.Material get_defaultParticleMaterial()

Disassembly:
	0x03A2DA14 LDP X20, X19, [X31 + 0x10]
	0x03A2DA18 LDR X30, [X31], #0x20

ISIL:
	001 Move X0, X31
	002 Return X0

Method: UnityEngine.Material get_defaultLineMaterial()

Disassembly:
	0x03A2DA1C RET
	0x03A2DA20 MOV X1, X31

ISIL:
	001 Move X0, X31
	002 Return X0

Method: UnityEngine.Material get_defaultTerrainMaterial()

Disassembly:
	0x03A2DA24 B 0x33BDD8C
	0x03A2DA28 STR X30, [X31 - 0x20]!

ISIL:
	001 Move X0, X31
	002 Return X0

Method: UnityEngine.Material get_defaultUIMaterial()

Disassembly:
	0x03A2DA2C STP X20, X19, [X31 + 0x10]
	0x03A2DA30 ADRP X19, 0x9B5000

ISIL:
	001 Move X0, X31
	002 Return X0

Method: UnityEngine.Material get_defaultUIOverdrawMaterial()

Disassembly:
	0x03A2DA34 ADRP X20, 0x727000
	0x03A2DA38 LDRB W8, [X19 + 0x72]

ISIL:
	001 Move X0, X31
	002 Return X0

Method: UnityEngine.Material get_defaultUIETC1SupportedMaterial()

Disassembly:
	0x03A2DA3C LDR X20, [X20 + 0xC50]
	0x03A2DA40 TBNZ X8, 0x0, 0x3A2DA64

ISIL:
	001 Move X0, X31
	002 Return X0

Method: UnityEngine.Material get_default2DMaterial()

Disassembly:
	0x03A2DA44 ADRP X0, 0x6C6000
	0x03A2DA48 LDR X0, [X0 + 0x598]

ISIL:
	001 Move X0, X31
	002 Return X0

Method: UnityEngine.Material get_default2DMaskMaterial()

Disassembly:
	0x03A2DA4C BL 0x1C16CF4
	0x03A2DA50 ADRP X0, 0x727000

ISIL:
	001 Move X0, X31
	002 Return X0

Method: UnityEngine.Material get_decalMaterial()

Disassembly:
	0x03A2DA54 LDR X0, [X0 + 0xC50]
	0x03A2DA58 BL 0x1C16CF4

ISIL:
	001 Move X0, X31
	002 Return X0

Method: UnityEngine.Shader get_defaultShader()

Disassembly:
	0x03A2DA5C MOVZ W8, 0x1
	0x03A2DA60 STRB W8, [X19 + 0x72]
	0x03A2DA64 LDR X0, [X20]
	0x03A2DA68 ADRP X19, 0x6C6000
	0x03A2DA6C LDR W8, [X0 + 0xE0]
	0x03A2DA70 LDR X19, [X19 + 0x598]
	0x03A2DA74 CBNZ W8, 0x3A2DA7C
	0x03A2DA78 BL 0x1C16DFC
	0x03A2DA7C MOV X0, X31
	0x03A2DA80 BL 0x3A89A38
	0x03A2DA84 LDR X8, [X19]
	0x03A2DA88 MOV X19, X0
	0x03A2DA8C LDR W9, [X8 + 0xE0]
	0x03A2DA90 CBNZ W9, 0x3A2DA9C
	0x03A2DA94 MOV X0, X8
	0x03A2DA98 BL 0x1C16DFC
	0x03A2DA9C MOV X0, X19
	0x03A2DAA0 MOV X1, X31
	0x03A2DAA4 MOV X2, X31
	0x03A2DAA8 BL 0x3C354F8
	0x03A2DAAC TBZ X0, 0x0, 0x3A2DADC
	0x03A2DAB0 LDR X0, [X20]
	0x03A2DAB4 LDR W8, [X0 + 0xE0]
	0x03A2DAB8 CBNZ W8, 0x3A2DAC0
	0x03A2DABC BL 0x1C16DFC
	0x03A2DAC0 MOV X0, X31
	0x03A2DAC4 BL 0x3A89A38
	0x03A2DAC8 CBZ X0, 0x3A2DAEC
	0x03A2DACC LDRB W8, [X0 + 0x78]
	0x03A2DAD0 CMP W8, 0x0
	0x03A2DAD4 CSET W0, EQ
	0x03A2DAD8 B 0x3A2DAE0
	0x03A2DADC MOVZ W0, 0x1
	0x03A2DAE0 LDP X20, X19, [X31 + 0x10]
	0x03A2DAE4 LDR X30, [X31], #0x20
	0x03A2DAE8 RET
	0x03A2DAEC BL 0x1C16F20
	0x03A2DAF0 MOVZ W0, 0x10
	0x03A2DAF4 RET
	0x03A2DAF8 MOV X1, X31
	0x03A2DAFC B 0x33BDD8C
	0x03A2DB00 STP X30, X21, [X31 - 0x20]!
	0x03A2DB04 STP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x9B6000
	006 Move X20, 0x6C7000
	007 Move W8, [X21+96]
	008 Move X20, [X20+1432]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x6C7000
	015 Move X0, [X0+1432]
	016 Call 0x1C17CF4
	017 Move X0, 0x728000
	018 Move X0, [X0+3144]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+96], W8
	022 Move X0, [X20]
	023 Move X20, [X19+24]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Move X0, X20
	029 Move X1, X31
	030 Move X2, X31
	031 Call Object.op_Equality, X0, X1
	032 Move TEMP, X0
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfNotEqual {49}
	036 Move X8, 0x728000
	037 Move X8, [X8+3144]
	038 Move X0, [X8]
	039 Move W8, [X0+224]
	040 Compare W8, 0
	041 JumpIfNotEqual {43}
	042 Call 0x1C17DFC
	043 Move W0, W31
	044 Move X1, X31
	045 Call ShaderUtils.GetShaderPath, X0
	046 Move X1, X31
	047 Call Shader.Find, X0
	048 Move [X19+24], X0
	049 Move X0, [X19+24]
	050 Move X20, [X31+16]
	051 Move X19, [X31+24]
	052 Move X30, [X31+32]
	053 Move X21, [X31+40]
	054 Return X0

Method: System.String[] get_renderingLayerMaskNames()

Disassembly:
	0x03A2DB08 ADRP X21, 0x9B5000
	0x03A2DB0C ADRP X20, 0x723000
	0x03A2DB10 LDRB W8, [X21 + 0x74]
	0x03A2DB14 LDR X20, [X20 + 0x778]
	0x03A2DB18 MOV X19, X0
	0x03A2DB1C TBNZ X8, 0x0, 0x3A2DB34
	0x03A2DB20 ADRP X0, 0x723000
	0x03A2DB24 LDR X0, [X0 + 0x778]
	0x03A2DB28 BL 0x1C16CF4
	0x03A2DB2C MOVZ W8, 0x1
	0x03A2DB30 STRB W8, [X21 + 0x74]
	0x03A2DB34 LDR X0, [X20]
	0x03A2DB38 LDR W8, [X0 + 0xE0]
	0x03A2DB3C CBNZ W8, 0x3A2DB44
	0x03A2DB40 BL 0x1C16DFC
	0x03A2DB44 MOV X0, X31
	0x03A2DB48 BL 0x399C120
	0x03A2DB4C LDR X8, [X19 + 0x10]
	0x03A2DB50 CBZ X8, 0x3A2DBC4
	0x03A2DB54 LDR X9, [X8]
	0x03A2DB58 MOV X19, X0
	0x03A2DB5C MOV X0, X8
	0x03A2DB60 LDP X10, X1, [X9 + 0x178]
	0x03A2DB64 BLR X10

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x9B6000
	005 Move X20, 0x728000
	006 Move W8, [X19+97]
	007 Move X20, [X20+3152]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x728000
	013 Move X0, [X0+3152]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+97], W8
	017 Move X0, [X20]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {22}
	021 Call 0x1C17DFC
	022 Move X0, X31
	023 Call UniversalRenderPipelineGlobalSettings.get_instance
	024 Compare X0, 0
	025 JumpIfEqual {32}
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X1, X31
	029 Move X30, [X31+32]
	030 Call UniversalRenderPipelineGlobalSettings.get_renderingLayerMaskNames, X0
	031 Return X0
	032 Call 0x1C17F20

Method: System.String[] get_prefixedRenderingLayerMaskNames()

Disassembly:
	0x03A2DB68 CBZ X0, 0x3A2DBC4
	0x03A2DB6C CBZ X19, 0x3A2DBC4
	0x03A2DB70 LDR X1, [X0 + 0x18]
	0x03A2DB74 MOV X0, X19
	0x03A2DB78 MOV X2, X31
	0x03A2DB7C BL 0x39AA180
	0x03A2DB80 TBNZ X0, 0x1F, 0x3A2DBB8
	0x03A2DB84 MOV W19, W0
	0x03A2DB88 LDR X0, [X20]
	0x03A2DB8C LDR W8, [X0 + 0xE0]
	0x03A2DB90 CBNZ W8, 0x3A2DB98
	0x03A2DB94 BL 0x1C16DFC
	0x03A2DB98 MOV X0, X31
	0x03A2DB9C BL 0x399C120
	0x03A2DBA0 CBZ X0, 0x3A2DBC4
	0x03A2DBA4 MOV W1, W19
	0x03A2DBA8 LDP X20, X19, [X31 + 0x10]
	0x03A2DBAC MOV X2, X31
	0x03A2DBB0 LDP X30, X21, [X31], #0x20
	0x03A2DBB4 B 0x39AA300
	0x03A2DBB8 LDP X20, X19, [X31 + 0x10]
	0x03A2DBBC LDP X30, X21, [X31], #0x20
	0x03A2DBC0 RET
	0x03A2DBC4 BL 0x1C16F20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x9B6000
	005 Move X20, 0x728000
	006 Move W8, [X19+98]
	007 Move X20, [X20+3152]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x728000
	013 Move X0, [X0+3152]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+98], W8
	017 Move X0, [X20]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {22}
	021 Call 0x1C17DFC
	022 Move X0, X31
	023 Call UniversalRenderPipelineGlobalSettings.get_instance
	024 Compare X0, 0
	025 JumpIfEqual {32}
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X1, X31
	029 Move X30, [X31+32]
	030 Call UniversalRenderPipelineGlobalSettings.get_prefixedRenderingLayerMaskNames, X0
	031 Return X0
	032 Call 0x1C17F20

Method: System.String[] get_lightLayerMaskNames()

Disassembly:
	0x03A2DBC8 LDR W0, [X0 + 0x10]
	0x03A2DBCC RET
	0x03A2DBD0 STR W1, [X0 + 0x10]
	0x03A2DBD4 RET
	0x03A2DBD8 LDR W0, [X0 + 0x14]
	0x03A2DBDC RET
	0x03A2DBE0 STR W1, [X0 + 0x14]
	0x03A2DBE4 RET
	0x03A2DBE8 LDR W0, [X0 + 0x18]
	0x03A2DBEC RET
	0x03A2DBF0 STR W1, [X0 + 0x18]
	0x03A2DBF4 RET
	0x03A2DBF8 LDR W8, [X0 + 0x10]
	0x03A2DBFC CBNZ W8, 0x3A2DC08
	0x03A2DC00 LDR W8, [X0 + 0x14]
	0x03A2DC04 CBZ W8, 0x3A2DC10
	0x03A2DC08 MOVZ W0, 0x1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x9B6000
	005 Move X20, 0x6C7000
	006 Move W8, [X19+99]
	007 Move X20, [X20+2760]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x6C7000
	013 Move X0, [X0+2760]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+99], W8
	017 Move X0, [X20]
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move W1, W31
	021 Move X30, [X31+32]
	022 Call 0x1C17D6C
	023 Return X0

Method: UnityEngine.Rendering.Universal.UniversalRenderPipelineAsset/TextureResources get_textures()

Disassembly:
	0x03A2DC0C RET
	0x03A2DC10 LDR W8, [X0 + 0x18]
	0x03A2DC14 CMP W8, 0x0
	0x03A2DC18 CSET W0, NE
	0x03A2DC1C RET
	0x03A2DC20 LDR W8, [X0 + 0x10]
	0x03A2DC24 AND W8, W8, 0xFFFFFFFE
	0x03A2DC28 CMP W8, 0x4
	0x03A2DC2C CSET W0, NE
	0x03A2DC30 RET
	0x03A2DC34 MOVZ W0, 0x1
	0x03A2DC38 RET
	0x03A2DC3C MOV W0, W31
	0x03A2DC40 RET
	0x03A2DC44 STP X30, X21, [X31 - 0x20]!
	0x03A2DC48 STP X20, X19, [X31 + 0x10]
	0x03A2DC4C ADRP X20, 0x9B5000
	0x03A2DC50 ADRP X21, 0x727000
	0x03A2DC54 LDRB W8, [X20 + 0x75]
	0x03A2DC58 LDR X21, [X21 + 0xCF0]
	0x03A2DC5C MOV X19, X0
	0x03A2DC60 TBNZ X8, 0x0, 0x3A2DC78
	0x03A2DC64 ADRP X0, 0x727000
	0x03A2DC68 LDR X0, [X0 + 0xCF0]
	0x03A2DC6C BL 0x1C16CF4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x9B6000
	005 Move W8, [X20+100]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x728000
	012 Move X0, [X0+3160]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+100], W8
	016 Move X20, [X19+288]
	017 Compare X20, 0
	018 JumpIfNotEqual {27}
	019 Move X8, 0x728000
	020 Move X8, [X8+3160]
	021 Move X0, [X8]
	022 Call 0x1C17F10
	023 Move X1, X31
	024 Move X20, X0
	025 Call Object..ctor, X0
	026 Move [X19+288], X20
	027 Move X0, X20
	028 Move X20, [X31+16]
	029 Move X19, [X31+24]
	030 Move X30, [X31+32]
	031 Return X0

Method: System.Void OnBeforeSerialize()

Disassembly:
	0x03A2DC78 LDR X0, [X21]

ISIL:
	001 Return 

Method: System.Void OnAfterDeserialize()

Disassembly:
	0x03A2DC7C BL 0x1C16F10
	0x03A2DC80 MOV X1, X19
	0x03A2DC84 MOV X20, X0
	0x03A2DC88 BL 0x3A2DC9C
	0x03A2DC8C MOV X0, X20
	0x03A2DC90 LDP X20, X19, [X31 + 0x10]
	0x03A2DC94 LDP X30, X21, [X31], #0x20
	0x03A2DC98 RET
	0x03A2DC9C STP X30, X23, [X31 - 0x30]!
	0x03A2DCA0 STP X22, X21, [X31 + 0x10]
	0x03A2DCA4 STP X20, X19, [X31 + 0x20]
	0x03A2DCA8 ADRP X22, 0x9B5000
	0x03A2DCAC ADRP X23, 0x727000
	0x03A2DCB0 ADRP X21, 0x724000
	0x03A2DCB4 LDRB W8, [X22 + 0x84]
	0x03A2DCB8 LDR X23, [X23 + 0xCF8]
	0x03A2DCBC LDR X21, [X21 + 0x7B8]
	0x03A2DCC0 MOV X20, X1
	0x03A2DCC4 MOV X19, X0
	0x03A2DCC8 TBNZ X8, 0x0, 0x3A2DD04
	0x03A2DCCC ADRP X0, 0x727000
	0x03A2DCD0 LDR X0, [X0 + 0xCF8]
	0x03A2DCD4 BL 0x1C16CF4
	0x03A2DCD8 ADRP X0, 0x724000
	0x03A2DCDC LDR X0, [X0 + 0x7B8]
	0x03A2DCE0 BL 0x1C16CF4
	0x03A2DCE4 ADRP X0, 0x723000
	0x03A2DCE8 LDR X0, [X0 + 0x7A0]
	0x03A2DCEC BL 0x1C16CF4
	0x03A2DCF0 ADRP X0, 0x727000
	0x03A2DCF4 LDR X0, [X0 + 0xD00]
	0x03A2DCF8 BL 0x1C16CF4
	0x03A2DCFC MOVZ W8, 0x1
	0x03A2DD00 STRB W8, [X22 + 0x84]
	0x03A2DD04 LDR X2, [X23]
	0x03A2DD08 MOV X0, X19
	0x03A2DD0C MOV X1, X20
	0x03A2DD10 BL 0x29AEE64
	0x03A2DD14 BL 0x3A2D89C
	0x03A2DD18 MOV X1, X0
	0x03A2DD1C MOV X0, X19
	0x03A2DD20 MOV X2, X31
	0x03A2DD24 BL 0x39A06DC
	0x03A2DD28 LDR X0, [X21]
	0x03A2DD2C BL 0x1C16F10
	0x03A2DD30 MOV X1, X31
	0x03A2DD34 MOV X20, X0
	0x03A2DD38 BL 0x39A6ED4
	0x03A2DD3C CBZ X20, 0x3A2DDE4
	0x03A2DD40 ADRP X8, 0x727000
	0x03A2DD44 LDR X8, [X8 + 0xD00]
	0x03A2DD48 LDR X21, [X20 + 0x48]
	0x03A2DD4C MOVZ W9, 0x10
	0x03A2DD50 MOVZ W10, 0x101
	0x03A2DD54 LDR X8, [X8]
	0x03A2DD58 MOV X0, X19
	0x03A2DD5C STR W9, [X20 + 0x20]
	0x03A2DD60 STRH W10, [X20 + 0x50]
	0x03A2DD64 STR X8, [X20 + 0x28]
	0x03A2DD68 BL 0x3A2DEF4
	0x03A2DD6C CBZ X21, 0x3A2DDE4
	0x03A2DD70 ADRP X22, 0x723000
	0x03A2DD74 LDR X22, [X22 + 0x7A0]
	0x03A2DD78 MOV X1, X0
	0x03A2DD7C MOV X0, X21
	0x03A2DD80 LDR X2, [X22]
	0x03A2DD84 BL 0x2497EC8
	0x03A2DD88 LDR X21, [X20 + 0x48]
	0x03A2DD8C MOV X0, X19
	0x03A2DD90 BL 0x3A2E33C
	0x03A2DD94 CBZ X21, 0x3A2DDE4
	0x03A2DD98 LDR X2, [X22]
	0x03A2DD9C MOV X1, X0
	0x03A2DDA0 MOV X0, X21
	0x03A2DDA4 BL 0x2497EC8
	0x03A2DDA8 LDR X21, [X20 + 0x48]
	0x03A2DDAC MOV X0, X19
	0x03A2DDB0 BL 0x3A2E150
	0x03A2DDB4 CBZ X21, 0x3A2DDE4
	0x03A2DDB8 LDR X2, [X22]
	0x03A2DDBC MOV X1, X0
	0x03A2DDC0 MOV X0, X21
	0x03A2DDC4 BL 0x2497EC8
	0x03A2DDC8 MOV X0, X19
	0x03A2DDCC MOV X1, X20
	0x03A2DDD0 LDP X20, X19, [X31 + 0x20]
	0x03A2DDD4 LDP X22, X21, [X31 + 0x10]
	0x03A2DDD8 MOV X2, X31
	0x03A2DDDC LDP X30, X23, [X31], #0x30
	0x03A2DDE0 B 0x39A06DC
	0x03A2DDE4 BL 0x1C16F20
	0x03A2DDE8 MOV X1, X31
	0x03A2DDEC B 0x33BDD8C
	0x03A2DDF0 STR X30, [X31 - 0x50]!
	0x03A2DDF4 STP X26, X25, [X31 + 0x10]
	0x03A2DDF8 STP X24, X23, [X31 + 0x20]
	0x03A2DDFC STP X22, X21, [X31 + 0x30]
	0x03A2DE00 STP X20, X19, [X31 + 0x40]
	0x03A2DE04 ADRP X26, 0x9B5000
	0x03A2DE08 ADRP X24, 0x727000
	0x03A2DE0C ADRP X25, 0x727000
	0x03A2DE10 ADRP X23, 0x727000
	0x03A2DE14 ADRP X21, 0x727000
	0x03A2DE18 ADRP X22, 0x727000
	0x03A2DE1C ADRP X19, 0x727000
	0x03A2DE20 ADRP X20, 0x727000
	0x03A2DE24 LDR X24, [X24 + 0xD08]
	0x03A2DE28 LDR X25, [X25 + 0xD10]
	0x03A2DE2C LDRB W8, [X26 + 0x76]
	0x03A2DE30 LDR X23, [X23 + 0xD18]
	0x03A2DE34 LDR X21, [X21 + 0xD20]
	0x03A2DE38 LDR X22, [X22 + 0xD28]
	0x03A2DE3C LDR X19, [X19 + 0xD30]
	0x03A2DE40 LDR X20, [X20 + 0xD38]
	0x03A2DE44 TBNZ X8, 0x0, 0x3A2DEA4
	0x03A2DE48 ADRP X0, 0x727000
	0x03A2DE4C LDR X0, [X0 + 0xD18]
	0x03A2DE50 BL 0x1C16CF4
	0x03A2DE54 ADRP X0, 0x727000
	0x03A2DE58 LDR X0, [X0 + 0xD20]
	0x03A2DE5C BL 0x1C16CF4
	0x03A2DE60 ADRP X0, 0x727000
	0x03A2DE64 LDR X0, [X0 + 0xD28]
	0x03A2DE68 BL 0x1C16CF4
	0x03A2DE6C ADRP X0, 0x727000
	0x03A2DE70 LDR X0, [X0 + 0xD38]
	0x03A2DE74 BL 0x1C16CF4
	0x03A2DE78 ADRP X0, 0x727000
	0x03A2DE7C LDR X0, [X0 + 0xD08]
	0x03A2DE80 BL 0x1C16CF4
	0x03A2DE84 ADRP X0, 0x727000
	0x03A2DE88 LDR X0, [X0 + 0xD10]
	0x03A2DE8C BL 0x1C16CF4
	0x03A2DE90 ADRP X0, 0x727000
	0x03A2DE94 LDR X0, [X0 + 0xD30]
	0x03A2DE98 BL 0x1C16CF4
	0x03A2DE9C MOVZ W8, 0x1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x9B6000
	006 Move W8, [X20+101]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {20}
	012 Move X0, 0x728000
	013 Move X0, [X0+3120]
	014 Call 0x1C17CF4
	015 Move X0, 0x6CD000
	016 Move X0, [X0+1736]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+101], W8
	020 Move W8, [X19+40]
	021 NotImplemented "Instruction CMP not yet implemented."
	022 NotImplemented "Instruction CMP not yet implemented."
	023 NotImplemented "Instruction CMP not yet implemented."
	024 NotImplemented "Instruction CMP not yet implemented."
	025 NotImplemented "Instruction CMP not yet implemented."
	026 NotImplemented "Instruction CMP not yet implemented."
	027 NotImplemented "Instruction CMP not yet implemented."
	028 NotImplemented "Instruction CMP not yet implemented."
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move W8, [X19+264]
	031 NotImplemented "Instruction CMP not yet implemented."
	032 NotImplemented "Instruction CSET not yet implemented."
	033 Move [X19+212], W8
	034 Move X12, -49541120
	035 Move W8, [X19+268]
	036 Move W9, [X19+272]
	037 Move W10, [X19+276]
	038 Move W11, [X19+280]
	039 Move V0, [X12+3712]
	040 Move [X19+144], W8
	041 Move [X19+148], W9
	042 Move [X19+140], W10
	043 Move [X19+132], W11
	044 Move [X19+40], D0
	045 Move W8, [X19+48]
	046 Compare W8, 0
	047 JumpIfNotEqual {64}
	048 Move X21, [X19+64]
	049 Compare X21, 0
	050 JumpIfEqual {137}
	051 Move X20, [X19+56]
	052 Compare X20, 0
	053 JumpIfEqual {60}
	054 Move X8, [X21]
	055 Move X0, X20
	056 Move X1, [X8+64]
	057 Call 0x1C17E00
	058 Compare X0, 0
	059 JumpIfEqual {139}
	060 Move W8, [X21+24]
	061 Compare W8, 0
	062 JumpIfEqual {138}
	063 Move [X21+32], X20
	064 Move W8, [X19+300]
	065 Move W9, 4
	066 NotImplemented "Instruction CMP not yet implemented."
	067 NotImplemented "Instruction CSINC not yet implemented."
	068 Move [X19+172], W8
	069 Move X8, -49537024
	070 Move V0, [X8+376]
	071 Move W8, 0xCCCD
	072 NotImplemented "Instruction MOVK not yet implemented."
	073 Move [X19+200], W8
	074 Move [X19+40], D0
	075 Move X20, 0x6CD000
	076 Move X20, [X20+1736]
	077 Move W21, [X19+160]
	078 Move X0, [X20]
	079 Move W8, [X0+224]
	080 Compare W8, 0
	081 JumpIfNotEqual {84}
	082 Call 0x1C17DFC
	083 Move X0, [X20]
	084 Move X8, [X0+184]
	085 Move W9, [X8+8]
	086 NotImplemented "Instruction CMP not yet implemented."
	087 Move W9, [X0+224]
	088 Move W21, [X19+156]
	089 Compare W9, 0
	090 JumpIfNotEqual {94}
	091 Call 0x1C17DFC
	092 Move X0, [X20]
	093 Move X8, [X0+184]
	094 Move W8, [X8+4]
	095 NotImplemented "Instruction CMP not yet implemented."
	096 Move W8, [X0+224]
	097 Move W21, [X19+152]
	098 Compare W8, 0
	099 JumpIfNotEqual {102}
	100 Call 0x1C17DFC
	101 Move X0, [X20]
	102 Move X8, [X0+184]
	103 Move W8, [X8]
	104 NotImplemented "Instruction CMP not yet implemented."
	105 Move W20, [X19+148]
	106 Move X21, 0x728000
	107 Move [X19+160], W20
	108 Move X21, [X21+3120]
	109 Move X0, [X21]
	110 Move W8, [X0+224]
	111 Compare W8, 0
	112 JumpIfNotEqual {115}
	113 Call 0x1C17DFC
	114 Move X0, [X21]
	115 Move X8, [X0+184]
	116 NotImplemented "Instruction CMP not yet implemented."
	117 NotImplemented "Instruction CINC not yet implemented."
	118 NotImplemented "Instruction SBFM not yet implemented."
	119 Move W8, [X8+24]
	120 NotImplemented "Instruction CMP not yet implemented."
	121 NotImplemented "Instruction CSEL not yet implemented."
	122 NotImplemented "Instruction CMP not yet implemented."
	123 NotImplemented "Instruction CINC not yet implemented."
	124 NotImplemented "Instruction SBFM not yet implemented."
	125 NotImplemented "Instruction CMP not yet implemented."
	126 NotImplemented "Instruction CSEL not yet implemented."
	127 Move [X19+152], W8
	128 Move [X19+156], W9
	129 Move X8, -49541120
	130 Move V0, [X8+1648]
	131 Move [X19+40], D0
	132 Move X20, [X31+16]
	133 Move X19, [X31+24]
	134 Move X30, [X31+32]
	135 Move X21, [X31+40]
	136 Return 
	137 Call 0x1C17F20
	138 Call 0x1C17F28
	139 Call 0x1C17F44
	140 Move X1, X31
	141 Call 0x1C17DEC

Method: System.Single ValidateShadowBias(System.Single value)

Disassembly:
	0x03A2D86C B.LT 0x3A2D70C
	0x03A2D870 LDP X20, X19, [X31 + 0x50]
	0x03A2D874 LDP X22, X21, [X31 + 0x40]
	0x03A2D878 LDP X24, X23, [X31 + 0x30]
	0x03A2D87C LDP X26, X25, [X31 + 0x20]
	0x03A2D880 LDP X28, X27, [X31 + 0x10]
	0x03A2D884 LDP X29, X30, [X31], #0x60
	0x03A2D888 RET
	0x03A2D88C BL 0x1C16F20
	0x03A2D890 BL 0x1C16F28
	0x03A2D894 MOV X1, X31
	0x03A2D898 B 0x33BDD8C
	0x03A2D89C STR X30, [X31 - 0x30]!
	0x03A2D8A0 STP X22, X21, [X31 + 0x10]
	0x03A2D8A4 STP X20, X19, [X31 + 0x20]
	0x03A2D8A8 ADRP X19, 0x9B5000
	0x03A2D8AC ADRP X20, 0x727000
	0x03A2D8B0 LDRB W8, [X19 + 0x70]
	0x03A2D8B4 LDR X20, [X20 + 0xCD0]
	0x03A2D8B8 TBNZ X8, 0x0, 0x3A2D900
	0x03A2D8BC ADRP X0, 0x6CF000
	0x03A2D8C0 LDR X0, [X0 + 0x940]
	0x03A2D8C4 BL 0x1C16CF4
	0x03A2D8C8 ADRP X0, 0x727000
	0x03A2D8CC LDR X0, [X0 + 0xCD0]
	0x03A2D8D0 BL 0x1C16CF4
	0x03A2D8D4 ADRP X0, 0x727000
	0x03A2D8D8 LDR X0, [X0 + 0xCD8]

ISIL:
	001 Move [X31-32], D8
	002 Move [X31+8], X30
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, 0x9B6000
	006 Move X20, 0x6F0000
	007 Move W8, [X19+102]
	008 Move X20, [X20+2216]
	009 Move V8, V0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x6F0000
	015 Move X0, [X0+2216]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X19+102], W8
	019 Move X0, [X20]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X31
	025 Call UniversalRenderPipeline.get_maxShadowBias
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+8]
	029 NotImplemented "Instruction FCMP not yet implemented."
	030 NotImplemented "Instruction FCSEL not yet implemented."
	031 Move S1, W31
	032 NotImplemented "Instruction FMAX not yet implemented."
	033 Move V8, [X31+32]
	034 Return V0

Method: System.Int32 ValidatePerObjectLights(System.Int32 value)

Disassembly:
	0x03A2D520 MOVZ W0, 0x1
	0x03A2D524 LDP X30, X21, [X31], #0x20
	0x03A2D528 RET
	0x03A2D52C LDR X0, [X21]
	0x03A2D530 LDR X19, [X19 + 0x18]
	0x03A2D534 LDR W8, [X0 + 0xE0]
	0x03A2D538 CBNZ W8, 0x3A2D540
	0x03A2D53C BL 0x1C16DFC
	0x03A2D540 MOV X0, X19
	0x03A2D544 LDP X20, X19, [X31 + 0x10]
	0x03A2D548 MOV X1, X31
	0x03A2D54C MOV X2, X31
	0x03A2D550 LDP X30, X21, [X31], #0x20
	0x03A2D554 B 0x3C3883C
	0x03A2D558 MOV X1, X31
	0x03A2D55C B 0x3C36D2C
	0x03A2D560 MOV X1, X31
	0x03A2D564 B 0x33BDD8C
	0x03A2D568 MOV X1, X31
	0x03A2D56C B 0x33BDD8C
	0x03A2D570 MOV X1, X31
	0x03A2D574 B 0x3C36D2C
	0x03A2D578 MOV X1, X31
	0x03A2D57C B 0x33BDD8C
	0x03A2D580 MOV W0, W31
	0x03A2D584 RET
	0x03A2D588 MOVZ W0, 0x1
	0x03A2D58C RET
	0x03A2D590 MOVZ W0, 0x1
	0x03A2D594 RET
	0x03A2D598 MOV W0, W31
	0x03A2D59C RET
	0x03A2D5A0 STR X30, [X31 - 0x20]!
	0x03A2D5A4 STP X20, X19, [X31 + 0x10]
	0x03A2D5A8 ADRP X19, 0x9B5000
	0x03A2D5AC ADRP X20, 0x727000
	0x03A2D5B0 LDRB W8, [X19 + 0x6F]
	0x03A2D5B4 LDR X20, [X20 + 0xC98]
	0x03A2D5B8 TBNZ X8, 0x0, 0x3A2D5D0
	0x03A2D5BC ADRP X0, 0x727000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x9B6000
	006 Move X20, 0x6F0000
	007 Move W8, [X21+103]
	008 Move X20, [X20+2216]
	009 Move W19, W1
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x6C7000
	015 Move X0, [X0+1448]
	016 Call 0x1C17CF4
	017 Move X0, 0x6F0000
	018 Move X0, [X0+2216]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+103], W8
	022 Move X0, [X20]
	023 Move X20, 0x6C7000
	024 Move W8, [X0+224]
	025 Move X20, [X20+1448]
	026 Compare W8, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 Move X0, X31
	030 Call UniversalRenderPipeline.get_maxPerObjectLights
	031 Move X8, [X20]
	032 Move W20, W0
	033 Move W9, [X8+224]
	034 Compare W9, 0
	035 JumpIfNotEqual {38}
	036 Move X0, X8
	037 Call 0x1C17DFC
	038 Move W0, W19
	039 Move W1, W20
	040 Move X2, X31
	041 Call Math.Min, X0, X1
	042 Move X20, [X31+16]
	043 Move X19, [X31+24]
	044 Move W1, W0
	045 Move W0, W31
	046 Move X2, X31
	047 Move X30, [X31+32]
	048 Move X21, [X31+40]
	049 Call Math.Max, X0, X1
	050 Return X0

Method: System.Single ValidateRenderScale(System.Single value)

Disassembly:
	0x03A2D3EC MOVZ W8, 0x15
	0x03A2D3F0 STR W8, [X0 + 0x20]
	0x03A2D3F4 LDR W8, [X19 + 0x18]
	0x03A2D3F8 CMP W8, 0x1
	0x03A2D3FC B.LS 0x3A2D4B8
	0x03A2D400 STR X0, [X19 + 0x28]
	0x03A2D404 LDR X0, [X22]
	0x03A2D408 ADRP X20, 0x727000
	0x03A2D40C LDR X20, [X20 + 0xC88]
	0x03A2D410 MOVZ W1, 0x4
	0x03A2D414 BL 0x1C16D6C
	0x03A2D418 LDR X1, [X20]
	0x03A2D41C MOV X2, X31
	0x03A2D420 MOV X20, X0
	0x03A2D424 BL 0x32C5BD8
	0x03A2D428 LDR W8, [X19 + 0x18]
	0x03A2D42C CMP W8, 0x2
	0x03A2D430 B.LS 0x3A2D4B8
	0x03A2D434 STR X20, [X19 + 0x30]
	0x03A2D438 LDR X0, [X22]
	0x03A2D43C ADRP X20, 0x727000
	0x03A2D440 LDR X20, [X20 + 0xC90]
	0x03A2D444 MOVZ W1, 0x3
	0x03A2D448 BL 0x1C16D6C
	0x03A2D44C LDR X1, [X20]
	0x03A2D450 MOV X2, X31
	0x03A2D454 MOV X20, X0
	0x03A2D458 BL 0x32C5BD8
	0x03A2D45C LDR W8, [X19 + 0x18]
	0x03A2D460 CMP W8, 0x3
	0x03A2D464 B.LS 0x3A2D4B8

ISIL:
	001 Move [X31-48], D9
	002 Move [X31-40], D8
	003 Move [X31+16], X30
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, 0x9B6000
	007 Move X20, 0x6F0000
	008 Move W8, [X19+104]
	009 Move X20, [X20+2216]
	010 Move V8, V0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x6F0000
	016 Move X0, [X0+2216]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X19+104], W8
	020 Move X0, [X20]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 Move X0, X31
	026 Call UniversalRenderPipeline.get_minRenderScale
	027 Move X0, X31
	028 Move V9, V0
	029 Call UniversalRenderPipeline.get_maxRenderScale
	030 NotImplemented "Instruction FCMP not yet implemented."
	031 Move X20, [X31+32]
	032 Move X19, [X31+40]
	033 Move X30, [X31+16]
	034 NotImplemented "Instruction FCSEL not yet implemented."
	035 NotImplemented "Instruction FCMP not yet implemented."
	036 NotImplemented "Instruction FCSEL not yet implemented."
	037 Move D9, [X31+48]
	038 Move D8, [X31+56]
	039 Return V0

Method: System.Boolean ValidateRendererDataList(System.Boolean partial = False)

Disassembly:
	0x03A2DEA0 STRB W8, [X26 + 0x76]
	0x03A2DEA4 LDR X8, [X23]
	0x03A2DEA8 LDR X9, [X24]
	0x03A2DEAC LDR X10, [X25]
	0x03A2DEB0 LDP X26, X25, [X31 + 0x10]
	0x03A2DEB4 LDR X8, [X8 + 0xB8]
	0x03A2DEB8 STP X9, X10, [X8]
	0x03A2DEBC LDR X8, [X23]
	0x03A2DEC0 LDR X9, [X21]
	0x03A2DEC4 LDR X11, [X22]
	0x03A2DEC8 LDP X22, X21, [X31 + 0x30]
	0x03A2DECC LDR X10, [X8 + 0xB8]
	0x03A2DED0 LDP X24, X23, [X31 + 0x20]
	0x03A2DED4 STP X9, X11, [X10 + 0x10]
	0x03A2DED8 LDR X8, [X8 + 0xB8]
	0x03A2DEDC LDR X9, [X19]
	0x03A2DEE0 LDR X10, [X20]
	0x03A2DEE4 LDP X20, X19, [X31 + 0x40]
	0x03A2DEE8 STP X9, X10, [X8 + 0x20]
	0x03A2DEEC LDR X30, [X31], #0x50
	0x03A2DEF0 RET
	0x03A2DEF4 STR X30, [X31 - 0x60]!
	0x03A2DEF8 STP X28, X27, [X31 + 0x10]
	0x03A2DEFC STP X26, X25, [X31 + 0x20]
	0x03A2DF00 STP X24, X23, [X31 + 0x30]
	0x03A2DF04 STP X22, X21, [X31 + 0x40]
	0x03A2DF08 STP X20, X19, [X31 + 0x50]
	0x03A2DF0C ADRP X19, 0x9B5000
	0x03A2DF10 ADRP X21, 0x727000
	0x03A2DF14 LDRB W8, [X19 + 0x77]
	0x03A2DF18 LDR X21, [X21 + 0xD40]
	0x03A2DF1C MOV X20, X0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X0+64]
	007 Compare X8, 0
	008 JumpIfEqual {25}
	009 Move X20, X0
	010 Move W19, W1
	011 Move W22, W31
	012 Move W21, W31
	013 Move X8, [X8+24]
	014 NotImplemented "Instruction CMP not yet implemented."
	015 Move X0, X20
	016 Move W1, W21
	017 Call UniversalRenderPipelineAsset.ValidateRendererData, X0, X1
	018 Move X8, [X20+64]
	019 NotImplemented "Instruction ORN not yet implemented."
	020 And W9, W9, 1
	021 Add W22, W22, W9
	022 Add W21, W21, 1
	023 Compare X8, 0
	024 JumpIfNotEqual {13}
	025 Call 0x1C17F20
	026 NotImplemented "Instruction CMP not yet implemented."
	027 NotImplemented "Instruction CSET not yet implemented."
	028 NotImplemented "Instruction CMP not yet implemented."
	029 NotImplemented "Instruction CSET not yet implemented."
	030 And W31, W19, 1
	031 Move X20, [X31+32]
	032 Move X19, [X31+40]
	033 Move X22, [X31+16]
	034 Move X21, [X31+24]
	035 NotImplemented "Instruction CSEL not yet implemented."
	036 Move X30, [X31+48]
	037 Return X0

Method: System.Boolean ValidateRendererData(System.Int32 index)

Disassembly:
	0x03A2DF20 TBNZ X8, 0x0, 0x3A2DFC8
	0x03A2DF24 ADRP X0, 0x6CA000
	0x03A2DF28 LDR X0, [X0 + 0xB00]
	0x03A2DF2C BL 0x1C16CF4
	0x03A2DF30 ADRP X0, 0x727000
	0x03A2DF34 LDR X0, [X0 + 0xD48]
	0x03A2DF38 BL 0x1C16CF4
	0x03A2DF3C ADRP X0, 0x724000
	0x03A2DF40 LDR X0, [X0 + 0xE8]
	0x03A2DF44 BL 0x1C16CF4
	0x03A2DF48 ADRP X0, 0x724000
	0x03A2DF4C LDR X0, [X0 + 0xF0]
	0x03A2DF50 BL 0x1C16CF4
	0x03A2DF54 ADRP X0, 0x724000
	0x03A2DF58 LDR X0, [X0 + 0xF8]
	0x03A2DF5C BL 0x1C16CF4
	0x03A2DF60 ADRP X0, 0x70C000
	0x03A2DF64 LDR X0, [X0 + 0x6A0]
	0x03A2DF68 BL 0x1C16CF4
	0x03A2DF6C ADRP X0, 0x727000
	0x03A2DF70 LDR X0, [X0 + 0xD18]
	0x03A2DF74 BL 0x1C16CF4
	0x03A2DF78 ADRP X0, 0x6C6000
	0x03A2DF7C LDR X0, [X0 + 0x6C0]
	0x03A2DF80 BL 0x1C16CF4
	0x03A2DF84 ADRP X0, 0x727000
	0x03A2DF88 LDR X0, [X0 + 0xD50]
	0x03A2DF8C BL 0x1C16CF4
	0x03A2DF90 ADRP X0, 0x727000
	0x03A2DF94 LDR X0, [X0 + 0xD58]
	0x03A2DF98 BL 0x1C16CF4
	0x03A2DF9C ADRP X0, 0x727000
	0x03A2DFA0 LDR X0, [X0 + 0xD60]
	0x03A2DFA4 BL 0x1C16CF4
	0x03A2DFA8 ADRP X0, 0x727000
	0x03A2DFAC LDR X0, [X0 + 0xD68]
	0x03A2DFB0 BL 0x1C16CF4
	0x03A2DFB4 ADRP X0, 0x727000
	0x03A2DFB8 LDR X0, [X0 + 0xD40]
	0x03A2DFBC BL 0x1C16CF4
	0x03A2DFC0 MOVZ W8, 0x1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x9B6000
	006 Move W8, [X21+105]
	007 Move W19, W1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x6C7000
	014 Move X0, [X0+1432]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+105], W8
	018 Add W31, W19, 1
	019 Move W19, [X20+72]
	020 Move X8, [X20+64]
	021 Compare X8, 0
	022 JumpIfEqual {49}
	023 Move W9, [X8+24]
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move X9, 0x6C7000
	026 Move X9, [X9+1432]
	027 Add X8, X8, W19
	028 Move X19, [X8+32]
	029 Move X0, [X9]
	030 Move W9, [X0+224]
	031 Compare W9, 0
	032 JumpIfNotEqual {34}
	033 Call 0x1C17DFC
	034 Move X0, X19
	035 Move X20, [X31+16]
	036 Move X19, [X31+24]
	037 Move X1, X31
	038 Move X2, X31
	039 Move X30, [X31+32]
	040 Move X21, [X31+40]
	041 Call Object.op_Inequality, X0, X1
	042 Return X0
	043 Move X20, [X31+16]
	044 Move X19, [X31+24]
	045 Move W0, W31
	046 Move X30, [X31+32]
	047 Move X21, [X31+40]
	048 Return X0
	049 Call 0x1C17F20
	050 Call 0x1C17F28

Method: UnityEngine.Rendering.Universal.ShaderVariantLogLevel get_shaderVariantLogLevel()

Disassembly:
	0x03A2DFC4 STRB W8, [X19 + 0x77]
	0x03A2DFC8 LDR X0, [X21]
	0x03A2DFCC BL 0x1C16F10
	0x03A2DFD0 MOV X1, X31
	0x03A2DFD4 MOV X19, X0
	0x03A2DFD8 BL 0x33BDD8C
	0x03A2DFDC CBZ X19, 0x3A2E144
	0x03A2DFE0 ADRP X8, 0x724000
	0x03A2DFE4 LDR X8, [X8 + 0xE8]
	0x03A2DFE8 STR X20, [X19 + 0x10]
	0x03A2DFEC ADRP X21, 0x727000
	0x03A2DFF0 LDR X0, [X8]
	0x03A2DFF4 LDR X21, [X21 + 0xD18]
	0x03A2DFF8 BL 0x1C16F10
	0x03A2DFFC MOV X1, X31
	0x03A2E000 MOV X20, X0
	0x03A2E004 BL 0x399C0B4
	0x03A2E008 LDR X0, [X21]
	0x03A2E00C LDR W8, [X0 + 0xE0]
	0x03A2E010 CBNZ W8, 0x3A2E01C
	0x03A2E014 BL 0x1C16DFC
	0x03A2E018 LDR X0, [X21]
	0x03A2E01C CBZ X20, 0x3A2E144
	0x03A2E020 ADRP X21, 0x726000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x9B6000
	005 Move X20, 0x728000
	006 Move W8, [X19+106]
	007 Move X20, [X20+3152]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x728000
	013 Move X0, [X0+3152]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+106], W8
	017 Move X0, [X20]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {22}
	021 Call 0x1C17DFC
	022 Move X0, X31
	023 Call UniversalRenderPipelineGlobalSettings.get_instance
	024 Compare X0, 0
	025 JumpIfEqual {31}
	026 Move W0, [X0+128]
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X30, [X31+32]
	030 Return X0
	031 Call 0x1C17F20

Method: System.Void set_shaderVariantLogLevel(UnityEngine.Rendering.Universal.ShaderVariantLogLevel value)

Disassembly:
	0x03A2E024 ADRP X28, 0x6C5000
	0x03A2E028 LDR X21, [X21 + 0xD48]
	0x03A2E02C LDR X28, [X28 + 0x6C0]
	0x03A2E030 LDR X8, [X0 + 0xB8]
	0x03A2E034 ADRP X25, 0x70B000
	0x03A2E038 ADRP X27, 0x726000
	0x03A2E03C ADRP X23, 0x6C9000
	0x03A2E040 LDR X25, [X25 + 0x6A0]
	0x03A2E044 LDR X27, [X27 + 0xD50]
	0x03A2E048 LDR X23, [X23 + 0xB00]
	0x03A2E04C LDP X1, X2, [X8]
	0x03A2E050 ADRP X26, 0x726000
	0x03A2E054 ADRP X24, 0x726000
	0x03A2E058 ADRP X22, 0x726000
	0x03A2E05C LDR X26, [X26 + 0xD58]
	0x03A2E060 LDR X24, [X24 + 0xD60]
	0x03A2E064 LDR X22, [X22 + 0xD68]
	0x03A2E068 MOV X0, X20
	0x03A2E06C MOV X3, X31
	0x03A2E070 BL 0x39AE800
	0x03A2E074 LDR X0, [X28]
	0x03A2E078 LDR X21, [X21]
	0x03A2E07C LDR W8, [X0 + 0xE0]
	0x03A2E080 CBNZ W8, 0x3A2E088
	0x03A2E084 BL 0x1C16DFC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x9B5000
	006 Move X21, 0x727000
	007 Move W8, [X20+107]
	008 Move X21, [X21+3152]
	009 Move W19, W1
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x727000
	015 Move X0, [X0+3152]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+107], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X31
	025 Call UniversalRenderPipelineGlobalSettings.get_instance
	026 Compare X0, 0
	027 JumpIfEqual {34}
	028 Move [X0+128], W19
	029 Move X20, [X31+16]
	030 Move X19, [X31+24]
	031 Move X30, [X31+32]
	032 Move X21, [X31+40]
	033 Return 
	034 Call 0x1C17F20

Method: UnityEngine.Rendering.Universal.ShadowCascadesOption get_shadowCascadeOption()

Disassembly:
	0x03A2E088 MOV X0, X21
	0x03A2E08C MOV X1, X31
	0x03A2E090 BL 0x338C698
	0x03A2E094 MOV X1, X0
	0x03A2E098 MOV X0, X20
	0x03A2E09C MOV X2, X31
	0x03A2E0A0 BL 0x39AED9C
	0x03A2E0A4 LDR X0, [X25]
	0x03A2E0A8 BL 0x1C16F10
	0x03A2E0AC LDR X2, [X27]
	0x03A2E0B0 MOV X1, X19
	0x03A2E0B4 MOV X3, X31
	0x03A2E0B8 MOV X21, X0
	0x03A2E0BC BL 0x2D27710
	0x03A2E0C0 STR X21, [X20 + 0x48]
	0x03A2E0C4 LDR X0, [X23]
	0x03A2E0C8 BL 0x1C16F10
	0x03A2E0CC LDR X2, [X26]
	0x03A2E0D0 MOV X1, X19
	0x03A2E0D4 MOV X3, X31
	0x03A2E0D8 MOV X21, X0
	0x03A2E0DC BL 0x2983F04
	0x03A2E0E0 STR X21, [X20 + 0x50]
	0x03A2E0E4 LDR X0, [X25]
	0x03A2E0E8 BL 0x1C16F10
	0x03A2E0EC LDR X2, [X24]
	0x03A2E0F0 MOV X1, X19
	0x03A2E0F4 MOV X3, X31
	0x03A2E0F8 MOV X21, X0
	0x03A2E0FC BL 0x2D27710
	0x03A2E100 STR X21, [X20 + 0x80]
	0x03A2E104 LDR X0, [X23]
	0x03A2E108 BL 0x1C16F10

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move W8, [X0+172]
	004 NotImplemented "Instruction CMP not yet implemented."
	005 NotImplemented "Instruction CMP not yet implemented."
	006 NotImplemented "Instruction CMP not yet implemented."
	007 Move W0, W31
	008 Move W0, 2
	009 Move W0, 1
	010 Move X30, [X31+16]
	011 Move X19, [X31+24]
	012 Return X0
	013 Move X0, 0x6C6000
	014 Move X0, [X0+1456]
	015 Call 0x1C17D08
	016 Call 0x1C17F10
	017 Move X19, X0
	018 Move X0, 0x727000
	019 Move X0, [X0+3168]
	020 Call 0x1C17D08
	021 Move X1, X0
	022 Move X0, X19
	023 Move X2, X31
	024 Call InvalidOperationException..ctor, X0, X1
	025 Move X0, 0x727000
	026 Move X0, [X0+3176]
	027 Call 0x1C17D08
	028 Move X1, X0
	029 Move X0, X19
	030 Call 0x1C17DEC

Method: System.Void set_shadowCascadeOption(UnityEngine.Rendering.Universal.ShadowCascadesOption value)

Disassembly:
	0x03A2E10C LDR X2, [X22]
	0x03A2E110 MOV X1, X19
	0x03A2E114 MOV X3, X31
	0x03A2E118 MOV X21, X0
	0x03A2E11C BL 0x2983F04
	0x03A2E120 STR X21, [X20 + 0x88]
	0x03A2E124 MOV X0, X20
	0x03A2E128 LDP X20, X19, [X31 + 0x50]
	0x03A2E12C LDP X22, X21, [X31 + 0x40]
	0x03A2E130 LDP X24, X23, [X31 + 0x30]
	0x03A2E134 LDP X26, X25, [X31 + 0x20]
	0x03A2E138 LDP X28, X27, [X31 + 0x10]
	0x03A2E13C LDR X30, [X31], #0x60
	0x03A2E140 RET
	0x03A2E144 BL 0x1C16F20
	0x03A2E148 MOV X1, X31
	0x03A2E14C B 0x33BDD8C
	0x03A2E150 STR X30, [X31 - 0x50]!
	0x03A2E154 STP X26, X25, [X31 + 0x10]
	0x03A2E158 STP X24, X23, [X31 + 0x20]
	0x03A2E15C STP X22, X21, [X31 + 0x30]
	0x03A2E160 STP X20, X19, [X31 + 0x40]
	0x03A2E164 ADRP X20, 0x9B4000
	0x03A2E168 ADRP X21, 0x726000
	0x03A2E16C LDRB W8, [X20 + 0x78]
	0x03A2E170 LDR X21, [X21 + 0xD70]
	0x03A2E174 MOV X19, X0

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 NotImplemented "Instruction CMP not yet implemented."
	004 Move X8, -48848896
	005 Add X8, X8, 2832
	006 Move W8, [X8]
	007 Move [X0+172], W8
	008 Move X30, [X31+16]
	009 Move X19, [X31+24]
	010 Return 
	011 Move X0, 0x6C6000
	012 Move X0, [X0+1456]
	013 Call 0x1C17D08
	014 Call 0x1C17F10
	015 Move X19, X0
	016 Move X0, 0x727000
	017 Move X0, [X0+3168]
	018 Call 0x1C17D08
	019 Move X1, X0
	020 Move X0, X19
	021 Move X2, X31
	022 Call InvalidOperationException..ctor, X0, X1
	023 Move X0, 0x727000
	024 Move X0, [X0+3184]
	025 Call 0x1C17D08
	026 Move X1, X0
	027 Move X0, X19
	028 Call 0x1C17DEC

Method: System.Void .ctor()

Disassembly:
	0x03A2E178 TBNZ X8, 0x0, 0x3A2E208
	0x03A2E17C ADRP X0, 0x726000
	0x03A2E180 LDR X0, [X0 + 0xD78]
	0x03A2E184 BL 0x1C16CF4
	0x03A2E188 ADRP X0, 0x726000
	0x03A2E18C LDR X0, [X0 + 0xD80]
	0x03A2E190 BL 0x1C16CF4
	0x03A2E194 ADRP X0, 0x726000
	0x03A2E198 LDR X0, [X0 + 0xD88]
	0x03A2E19C BL 0x1C16CF4
	0x03A2E1A0 ADRP X0, 0x726000
	0x03A2E1A4 LDR X0, [X0 + 0xD90]
	0x03A2E1A8 BL 0x1C16CF4
	0x03A2E1AC ADRP X0, 0x726000
	0x03A2E1B0 LDR X0, [X0 + 0xD98]
	0x03A2E1B4 BL 0x1C16CF4
	0x03A2E1B8 ADRP X0, 0x726000
	0x03A2E1BC LDR X0, [X0 + 0xDA0]
	0x03A2E1C0 BL 0x1C16CF4
	0x03A2E1C4 ADRP X0, 0x726000
	0x03A2E1C8 LDR X0, [X0 + 0xD18]
	0x03A2E1CC BL 0x1C16CF4
	0x03A2E1D0 ADRP X0, 0x6C5000
	0x03A2E1D4 LDR X0, [X0 + 0x6C0]
	0x03A2E1D8 BL 0x1C16CF4
	0x03A2E1DC ADRP X0, 0x726000
	0x03A2E1E0 LDR X0, [X0 + 0xDA8]
	0x03A2E1E4 BL 0x1C16CF4
	0x03A2E1E8 ADRP X0, 0x726000
	0x03A2E1EC LDR X0, [X0 + 0xDB0]
	0x03A2E1F0 BL 0x1C16CF4
	0x03A2E1F4 ADRP X0, 0x726000
	0x03A2E1F8 LDR X0, [X0 + 0xD70]
	0x03A2E1FC BL 0x1C16CF4
	0x03A2E200 MOVZ W8, 0x1
	0x03A2E204 STRB W8, [X20 + 0x78]
	0x03A2E208 LDR X0, [X21]
	0x03A2E20C BL 0x1C16F10
	0x03A2E210 MOV X1, X31
	0x03A2E214 MOV X20, X0
	0x03A2E218 BL 0x33BDD8C
	0x03A2E21C CBZ X20, 0x3A2E330
	0x03A2E220 ADRP X8, 0x726000
	0x03A2E224 LDR X8, [X8 + 0xD80]
	0x03A2E228 STR X19, [X20 + 0x10]
	0x03A2E22C ADRP X21, 0x726000
	0x03A2E230 LDR X0, [X8]
	0x03A2E234 LDR X21, [X21 + 0xD18]
	0x03A2E238 BL 0x1C16F10
	0x03A2E23C MOV X1, X31
	0x03A2E240 MOV X19, X0
	0x03A2E244 BL 0x39AF324
	0x03A2E248 LDR X0, [X21]
	0x03A2E24C LDR W8, [X0 + 0xE0]
	0x03A2E250 CBNZ W8, 0x3A2E25C
	0x03A2E254 BL 0x1C16DFC
	0x03A2E258 LDR X0, [X21]
	0x03A2E25C CBZ X19, 0x3A2E330
	0x03A2E260 LDR X8, [X0 + 0xB8]
	0x03A2E264 ADRP X21, 0x726000
	0x03A2E268 ADRP X22, 0x726000
	0x03A2E26C ADRP X23, 0x726000
	0x03A2E270 LDR X21, [X21 + 0xDA0]
	0x03A2E274 LDR X22, [X22 + 0xDA8]
	0x03A2E278 LDR X23, [X23 + 0xD78]
	0x03A2E27C LDP X1, X2, [X8 + 0x10]
	0x03A2E280 ADRP X24, 0x726000
	0x03A2E284 ADRP X25, 0x726000
	0x03A2E288 ADRP X26, 0x6C5000
	0x03A2E28C LDR X24, [X24 + 0xDB0]
	0x03A2E290 LDR X25, [X25 + 0xD88]
	0x03A2E294 LDR X26, [X26 + 0x6C0]
	0x03A2E298 MOV X0, X19
	0x03A2E29C MOV X3, X31
	0x03A2E2A0 BL 0x39AE800
	0x03A2E2A4 LDR X0, [X21]
	0x03A2E2A8 BL 0x1C16F10
	0x03A2E2AC LDR X2, [X22]
	0x03A2E2B0 MOV X1, X20
	0x03A2E2B4 MOV X3, X31
	0x03A2E2B8 MOV X21, X0
	0x03A2E2BC BL 0x2D27AA8
	0x03A2E2C0 STR X21, [X19 + 0x48]
	0x03A2E2C4 LDR X0, [X23]
	0x03A2E2C8 BL 0x1C16F10
	0x03A2E2CC LDR X2, [X24]
	0x03A2E2D0 MOV X1, X20
	0x03A2E2D4 MOV X3, X31
	0x03A2E2D8 MOV X21, X0
	0x03A2E2DC BL 0x2A6B948
	0x03A2E2E0 STR X21, [X19 + 0x50]
	0x03A2E2E4 LDR X0, [X26]
	0x03A2E2E8 LDR X20, [X25]
	0x03A2E2EC LDR W8, [X0 + 0xE0]
	0x03A2E2F0 CBNZ W8, 0x3A2E2F8
	0x03A2E2F4 BL 0x1C16DFC
	0x03A2E2F8 MOV X0, X20
	0x03A2E2FC MOV X1, X31

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x9B5000
	008 Move X23, 0x727000
	009 Move X22, 0x727000
	010 Move X21, 0x6CC000
	011 Move W8, [X20+108]
	012 Move X23, [X23+3064]
	013 Move X22, [X22+3040]
	014 Move X21, [X21+1736]
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {31}
	020 Move X0, 0x727000
	021 Move X0, [X0+3040]
	022 Call 0x1C17CF4
	023 Move X0, 0x727000
	024 Move X0, [X0+3064]
	025 Call 0x1C17CF4
	026 Move X0, 0x6CC000
	027 Move X0, [X0+1736]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X20+108], W8
	031 Move X0, [X23]
	032 Move W1, 1
	033 Move W20, 1
	034 Call 0x1C17D6C
	035 NotImplemented "Instruction MOVI not yet implemented."
	036 Move [X19+32], X0
	037 Move [X19+40], D0
	038 Move [X19+48], W20
	039 Move X0, [X22]
	040 Move W1, 1
	041 Call 0x1C17D6C
	042 Move X8, 1
	043 NotImplemented "Instruction MOVK not yet implemented."
	044 Move [X19+92], X8
	045 Move X8, -49541120
	046 Move V0, [X8+808]
	047 Move W9, 0x851F
	048 NotImplemented "Instruction MOVK not yet implemented."
	049 Move W22, 257
	050 Move [X19+108], W9
	051 Move W9, 4
	052 Move W8, 2048
	053 Move [X19+64], X0
	054 Move [X19+80], W20
	055 Move [X19+112], W20
	056 Move [X19+116], W20
	057 Move [X19+124], W20
	058 Move [X19+128], W20
	059 NotImplemented "Instruction STRH not yet implemented."
	060 Move [X19+140], W9
	061 Move [X19+132], D0
	062 Move [X19+148], W8
	063 Move X0, [X21]
	064 Move W8, [X0+224]
	065 Compare W8, 0
	066 JumpIfNotEqual {69}
	067 Call 0x1C17DFC
	068 Move X0, [X21]
	069 Move X8, [X0+184]
	070 Move X9, -49541120
	071 Move V1, [X9+1216]
	072 Move X9, -49549312
	073 Move V0, [X8]
	074 Move V2, [X9+209]
	075 Move X9, -49553408
	076 Move X0, X19
	077 Move [X19+152], D0
	078 Move V0, 0
	079 Move W8, [X8+8]
	080 Move [X19+204], D0
	081 Move V0, [X9+35]
	082 Move X9, 0x42480000
	083 NotImplemented "Instruction MOVK not yet implemented."
	084 Move [X19+168], X9
	085 Move W9, 0x3E800000
	086 Move [X19+176], W9
	087 Move W9, 32
	088 Move [X19+256], W9
	089 Move W9, 256
	090 Move [X19+180], D1
	091 Move [X19+188], V2
	092 NotImplemented "Instruction STRH not yet implemented."
	093 Move [X19+216], V0
	094 Move [X19+232], W20
	095 Move [X19+249], W20
	096 Move [X19+261], W20
	097 Move [X19+264], W20
	098 Move [X19+272], W9
	099 Move [X19+160], W8
	100 Move [X19+280], W9
	101 Move X20, [X31+32]
	102 Move X19, [X31+40]
	103 Move X22, [X31+16]
	104 Move X21, [X31+24]
	105 Move X1, X31
	106 Move X30, [X31+48]
	107 Move X23, [X31+56]
	108 Call RenderPipelineAsset..ctor, X0
	109 Return 

Method: System.Void .cctor()

Disassembly:
	0x03A2E300 BL 0x338C698
	0x03A2E304 MOV X1, X0
	0x03A2E308 MOV X0, X19
	0x03A2E30C MOV X2, X31
	0x03A2E310 BL 0x39AF2C8
	0x03A2E314 MOV X0, X19
	0x03A2E318 LDP X20, X19, [X31 + 0x40]
	0x03A2E31C LDP X22, X21, [X31 + 0x30]
	0x03A2E320 LDP X24, X23, [X31 + 0x20]
	0x03A2E324 LDP X26, X25, [X31 + 0x10]
	0x03A2E328 LDR X30, [X31], #0x50
	0x03A2E32C RET
	0x03A2E330 BL 0x1C16F20
	0x03A2E334 MOV X1, X31
	0x03A2E338 B 0x33BDD8C
	0x03A2E33C STR X30, [X31 - 0x60]!
	0x03A2E340 STP X28, X27, [X31 + 0x10]
	0x03A2E344 STP X26, X25, [X31 + 0x20]
	0x03A2E348 STP X24, X23, [X31 + 0x30]
	0x03A2E34C STP X22, X21, [X31 + 0x40]
	0x03A2E350 STP X20, X19, [X31 + 0x50]
	0x03A2E354 ADRP X19, 0x9B4000
	0x03A2E358 ADRP X21, 0x726000
	0x03A2E35C LDRB W8, [X19 + 0x79]
	0x03A2E360 LDR X21, [X21 + 0xDB8]
	0x03A2E364 MOV X20, X0
	0x03A2E368 TBNZ X8, 0x0, 0x3A2E410
	0x03A2E36C ADRP X0, 0x6C9000
	0x03A2E370 LDR X0, [X0 + 0xB00]
	0x03A2E374 BL 0x1C16CF4
	0x03A2E378 ADRP X0, 0x723000
	0x03A2E37C LDR X0, [X0 + 0xE8]
	0x03A2E380 BL 0x1C16CF4
	0x03A2E384 ADRP X0, 0x723000
	0x03A2E388 LDR X0, [X0 + 0xF0]
	0x03A2E38C BL 0x1C16CF4
	0x03A2E390 ADRP X0, 0x723000
	0x03A2E394 LDR X0, [X0 + 0xF8]
	0x03A2E398 BL 0x1C16CF4
	0x03A2E39C ADRP X0, 0x70B000
	0x03A2E3A0 LDR X0, [X0 + 0x6A0]
	0x03A2E3A4 BL 0x1C16CF4
	0x03A2E3A8 ADRP X0, 0x726000
	0x03A2E3AC LDR X0, [X0 + 0xDC0]
	0x03A2E3B0 BL 0x1C16CF4
	0x03A2E3B4 ADRP X0, 0x726000
	0x03A2E3B8 LDR X0, [X0 + 0xD18]
	0x03A2E3BC BL 0x1C16CF4
	0x03A2E3C0 ADRP X0, 0x6C5000
	0x03A2E3C4 LDR X0, [X0 + 0x6C0]
	0x03A2E3C8 BL 0x1C16CF4
	0x03A2E3CC ADRP X0, 0x726000
	0x03A2E3D0 LDR X0, [X0 + 0xDC8]
	0x03A2E3D4 BL 0x1C16CF4
	0x03A2E3D8 ADRP X0, 0x726000
	0x03A2E3DC LDR X0, [X0 + 0xDD0]
	0x03A2E3E0 BL 0x1C16CF4
	0x03A2E3E4 ADRP X0, 0x726000
	0x03A2E3E8 LDR X0, [X0 + 0xDD8]
	0x03A2E3EC BL 0x1C16CF4
	0x03A2E3F0 ADRP X0, 0x726000
	0x03A2E3F4 LDR X0, [X0 + 0xDE0]
	0x03A2E3F8 BL 0x1C16CF4
	0x03A2E3FC ADRP X0, 0x726000
	0x03A2E400 LDR X0, [X0 + 0xDB8]
	0x03A2E404 BL 0x1C16CF4
	0x03A2E408 MOVZ W8, 0x1
	0x03A2E40C STRB W8, [X19 + 0x79]
	0x03A2E410 LDR X0, [X21]
	0x03A2E414 BL 0x1C16F10
	0x03A2E418 MOV X1, X31
	0x03A2E41C MOV X19, X0
	0x03A2E420 BL 0x33BDD8C
	0x03A2E424 CBZ X19, 0x3A2E58C
	0x03A2E428 ADRP X8, 0x723000
	0x03A2E42C LDR X8, [X8 + 0xE8]
	0x03A2E430 STR X20, [X19 + 0x10]
	0x03A2E434 ADRP X21, 0x726000
	0x03A2E438 LDR X0, [X8]
	0x03A2E43C LDR X21, [X21 + 0xD18]
	0x03A2E440 BL 0x1C16F10
	0x03A2E444 MOV X1, X31
	0x03A2E448 MOV X20, X0
	0x03A2E44C BL 0x399C0B4
	0x03A2E450 LDR X0, [X21]
	0x03A2E454 LDR W8, [X0 + 0xE0]
	0x03A2E458 CBNZ W8, 0x3A2E464
	0x03A2E45C BL 0x1C16DFC
	0x03A2E460 LDR X0, [X21]
	0x03A2E464 CBZ X20, 0x3A2E58C
	0x03A2E468 ADRP X21, 0x726000
	0x03A2E46C ADRP X28, 0x6C5000
	0x03A2E470 LDR X21, [X21 + 0xDC0]
	0x03A2E474 LDR X28, [X28 + 0x6C0]
	0x03A2E478 LDR X8, [X0 + 0xB8]
	0x03A2E47C ADRP X25, 0x70B000
	0x03A2E480 ADRP X27, 0x726000
	0x03A2E484 ADRP X23, 0x6C9000
	0x03A2E488 LDR X25, [X25 + 0x6A0]
	0x03A2E48C LDR X27, [X27 + 0xDC8]
	0x03A2E490 LDR X23, [X23 + 0xB00]
	0x03A2E494 LDP X1, X2, [X8 + 0x20]
	0x03A2E498 ADRP X26, 0x726000
	0x03A2E49C ADRP X24, 0x726000
	0x03A2E4A0 ADRP X22, 0x726000
	0x03A2E4A4 LDR X26, [X26 + 0xDD0]
	0x03A2E4A8 LDR X24, [X24 + 0xDD8]
	0x03A2E4AC LDR X22, [X22 + 0xDE0]
	0x03A2E4B0 MOV X0, X20
	0x03A2E4B4 MOV X3, X31
	0x03A2E4B8 BL 0x39AE800
	0x03A2E4BC LDR X0, [X28]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x9B5000
	007 Move X21, 0x6CC000
	008 Move X19, 0x727000
	009 Move X22, 0x727000
	010 Move W8, [X20+109]
	011 Move X21, [X21+1736]
	012 Move X19, [X19+3192]
	013 Move X22, [X22+3200]
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {35}
	018 Move X0, 0x727000
	019 Move X0, [X0+3192]
	020 Call 0x1C17CF4
	021 Move X0, 0x727000
	022 Move X0, [X0+3200]
	023 Call 0x1C17CF4
	024 Move X0, 0x727000
	025 Move X0, [X0+3208]
	026 Call 0x1C17CF4
	027 Move X0, 0x727000
	028 Move X0, [X0+3216]
	029 Call 0x1C17CF4
	030 Move X0, 0x6CC000
	031 Move X0, [X0+1736]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X20+109], W8
	035 Move X8, [X21]
	036 Move X9, -49545216
	037 Move V0, [X9+3448]
	038 Move W9, 1024
	039 Move X8, [X8+184]
	040 Move W1, 5
	041 Move [X8], D0
	042 Move [X8+8], W9
	043 Move X0, [X19]
	044 Call 0x1C17D6C
	045 Move X8, [X22]
	046 Move X19, X0
	047 Move W1, 1
	048 Move X0, X8
	049 Call 0x1C17D6C
	050 Compare X0, 0
	051 JumpIfEqual {123}
	052 Move W8, [X0+24]
	053 Compare W8, 0
	054 JumpIfEqual {122}
	055 Move W8, 5
	056 Move [X0+32], W8
	057 Compare X19, 0
	058 JumpIfEqual {123}
	059 Move W8, [X19+24]
	060 Compare W8, 0
	061 JumpIfEqual {122}
	062 Move [X19+32], X0
	063 Move X0, [X22]
	064 Move W1, 1
	065 Call 0x1C17D6C
	066 Compare X0, 0
	067 JumpIfEqual {123}
	068 Move W8, [X0+24]
	069 Compare W8, 0
	070 JumpIfEqual {122}
	071 Move W8, 21
	072 Move [X0+32], W8
	073 Move W8, [X19+24]
	074 NotImplemented "Instruction CMP not yet implemented."
	075 Move [X19+40], X0
	076 Move X0, [X22]
	077 Move X20, 0x727000
	078 Move X20, [X20+3208]
	079 Move W1, 4
	080 Call 0x1C17D6C
	081 Move X1, [X20]
	082 Move X2, X31
	083 Move X20, X0
	084 Call RuntimeHelpers.InitializeArray, X0, X1
	085 Move W8, [X19+24]
	086 NotImplemented "Instruction CMP not yet implemented."
	087 Move [X19+48], X20
	088 Move X0, [X22]
	089 Move X20, 0x727000
	090 Move X20, [X20+3216]
	091 Move W1, 3
	092 Call 0x1C17D6C
	093 Move X1, [X20]
	094 Move X2, X31
	095 Move X20, X0
	096 Call RuntimeHelpers.InitializeArray, X0, X1
	097 Move W8, [X19+24]
	098 NotImplemented "Instruction CMP not yet implemented."
	099 Move [X19+56], X20
	100 Move X0, [X22]
	101 Move W1, 1
	102 Call 0x1C17D6C
	103 Compare X0, 0
	104 JumpIfEqual {123}
	105 Move W8, [X0+24]
	106 Compare W8, 0
	107 JumpIfEqual {122}
	108 Move W8, 74
	109 Move [X0+32], W8
	110 Move W8, [X19+24]
	111 NotImplemented "Instruction CMP not yet implemented."
	112 Move [X19+64], X0
	113 Move X8, [X21]
	114 Move X22, [X31+16]
	115 Move X21, [X31+24]
	116 Move X8, [X8+184]
	117 Move [X8+16], X19
	118 Move X20, [X31+32]
	119 Move X19, [X31+40]
	120 Move X30, [X31+48]
	121 Return 
	122 Call 0x1C17F28
	123 Call 0x1C17F20

