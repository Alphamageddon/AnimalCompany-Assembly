Type: UnityEngine.Rendering.Universal.DecalEntityManager/<>c

Method: System.Void .cctor()

Disassembly:
	0x03A40DA4 BL 0x39B1DB4
	0x03A40DA8 CBZ X19, 0x3A40D64
	0x03A40DAC MOV X0, X19
	0x03A40DB0 BL 0x1C16F18
	0x03A40DB4 MOV X19, X31
	0x03A40DB8 B 0x3A40DC0
	0x03A40DBC MOV X20, X0
	0x03A40DC0 ADD X0, X31, 0x148
	0x03A40DC4 MOV X1, X31
	0x03A40DC8 BL 0x39B1DB4
	0x03A40DCC CBNZ X19, 0x3A40DD8
	0x03A40DD0 MOV X0, X20
	0x03A40DD4 BL 0x1D2C690
	0x03A40DD8 MOV X0, X19
	0x03A40DDC BL 0x1C16F18
	0x03A40DE0 BL 0x1990590
	0x03A40DE4 FSUB S0, S4, S0
	0x03A40DE8 FSUB S1, S5, S1
	0x03A40DEC FSUB S2, S6, S2
	0x03A40DF0 FMUL S0, S0, S0
	0x03A40DF4 FMUL S1, S1, S1
	0x03A40DF8 FSUB S3, S7, S3
	0x03A40DFC FMUL S2, S2, S2

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x9A3000
	005 Move X20, 0x716000
	006 Move W8, [X19+343]
	007 Move X20, [X20+2584]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x716000
	013 Move X0, [X0+2584]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+343], W8
	017 Move X0, [X20]
	018 Call 0x1C17F10
	019 Move X1, X31
	020 Move X19, X0
	021 Call Object..ctor, X0
	022 Move X8, [X20]
	023 Move X8, [X8+184]
	024 Move [X8], X19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Return 

Method: System.Void .ctor()

Disassembly:
	0x03A40E00 FADD S0, S0, S1
	0x03A40E04 FADD S0, S2, S0

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: System.Int32 <Update>b__26_0(UnityEngine.Rendering.Universal.DecalEntityManager/CombinedChunks a, UnityEngine.Rendering.Universal.DecalEntityManager/CombinedChunks b)

Disassembly:
	0x03A40E08 FMUL S1, S3, S3
	0x03A40E0C FADD S0, S1, S0
	0x03A40E10 RET
	0x03A40E14 STP D15, D14, [X31 - 0x70]!
	0x03A40E18 STP D13, D12, [X31 + 0x10]
	0x03A40E1C STP D11, D10, [X31 + 0x20]
	0x03A40E20 STP D9, D8, [X31 + 0x30]
	0x03A40E24 STR X29, [X31 + 0x40]
	0x03A40E28 STP X30, X21, [X31 + 0x50]
	0x03A40E2C STP X20, X19, [X31 + 0x60]
	0x03A40E30 SUB X31, X31, 0x2D0
	0x03A40E34 ADRP X21, 0x9A2000
	0x03A40E38 LDRB W8, [X21 + 0x160]
	0x03A40E3C MOV W20, W1
	0x03A40E40 MOV X19, X0
	0x03A40E44 STR X2, [X31 + 0x2C0]
	0x03A40E48 STR X3, [X31 + 0x2C8]
	0x03A40E4C TBNZ X8, 0x0, 0x3A40E70
	0x03A40E50 ADRP X0, 0x6DD000
	0x03A40E54 LDR X0, [X0 + 0x7D0]
	0x03A40E58 BL 0x1C16CF4
	0x03A40E5C ADRP X0, 0x6DE000
	0x03A40E60 LDR X0, [X0 + 0x838]
	0x03A40E64 BL 0x1C16CF4
	0x03A40E68 MOVZ W8, 0x1
	0x03A40E6C STRB W8, [X21 + 0x160]
	0x03A40E70 ADRP X21, 0x6DD000
	0x03A40E74 LDR X21, [X21 + 0x7D0]
	0x03A40E78 MOVI V0.2D, 0x0
	0x03A40E7C ADD X0, X31, 0x2C0
	0x03A40E80 MOV X1, X31
	0x03A40E84 STP V0, V0, [X31 + 0x2A0]
	0x03A40E88 STP V0, V0, [X31 + 0x280]
	0x03A40E8C BL 0x3C433EC
	0x03A40E90 MOV X0, X31
	0x03A40E94 BL 0x3887BE4
	0x03A40E98 LDR X8, [X19]
	0x03A40E9C MOVZ W9, 0xC
	0x03A40EA0 SMADDL X8, X20, X9, X8
	0x03A40EA4 LDP S3, S4, [X8]
	0x03A40EA8 LDR V5, [X8 + 0x8]
	0x03A40EAC SXTW X20, W20
	0x03A40EB0 FSUB S0, S3, S0
	0x03A40EB4 LDR V3, [X19 + 0x90]
	0x03A40EB8 FSUB S1, S4, S1

ISIL:
	001 Subtract X31, X31, 32
	002 Move [X31+16], X30
	003 Move [X31+24], X19
	004 Move W9, [X1+36]
	005 Move W8, [X2+36]
	006 Move X19, X2
	007 Move TEMP, X9
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {15}
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfNotEqual {19}
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfNotEqual {28}
	019 Move X8, [X1+8]
	020 Compare X8, 0
	021 JumpIfEqual {61}
	022 Move X9, [X19+8]
	023 Compare X9, 0
	024 JumpIfEqual {61}
	025 Move W8, [X8+64]
	026 Move W9, [X9+64]
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Move TEMP, 0
	029 Not TEMP
	030 Move W0, TEMP
	031 Move W0, 1
	032 Move X8, [X1]
	033 Compare X8, 0
	034 JumpIfEqual {61}
	035 Move X0, [X8+40]
	036 Compare X0, 0
	037 JumpIfEqual {61}
	038 Move X8, [X0]
	039 Move X9, [X8+344]
	040 Move X1, [X8+352]
	041 NotImplemented "Instruction BLR not yet implemented."
	042 Move [X31+12], W0
	043 Move X8, [X19]
	044 Compare X8, 0
	045 JumpIfEqual {61}
	046 Move X0, [X8+40]
	047 Compare X0, 0
	048 JumpIfEqual {61}
	049 Move X8, [X0]
	050 Move X9, [X8+344]
	051 Move X1, [X8+352]
	052 NotImplemented "Instruction BLR not yet implemented."
	053 Move W1, W0
	054 Add X0, X31, 12
	055 Move X2, X31
	056 Call Int32.CompareTo, X0, X1
	057 Move X30, [X31+16]
	058 Move X19, [X31+24]
	059 Add X31, X31, 32
	060 Return X0
	061 Call 0x1C17F20

