Type: UnityEngine.Rendering.Universal.ScreenSpaceShadows/ScreenSpaceShadowsPostPass

Method: System.Void Configure(UnityEngine.Rendering.CommandBuffer cmd, UnityEngine.RenderTextureDescriptor cameraTextureDescriptor)

Disassembly:
	0x03A702C8 STR W9, [X20 + 0x1C]
	0x03A702CC CBZ X8, 0x3A7047C
	0x03A702D0 LDRSW X9, [X20 + 0x18]
	0x03A702D4 LDR W11, [X8 + 0x18]
	0x03A702D8 CMP W9, W11
	0x03A702DC B.CS 0x3A702FC
	0x03A702E0 ADRP X10, 0xFFFFFFFFFD07E000
	0x03A702E4 LDR V0, [X10]
	0x03A702E8 ADD W10, W9, 0x1
	0x03A702EC ADD X8, X8, X9, 0x3, LSL
	0x03A702F0 STR W10, [X20 + 0x18]
	0x03A702F4 STR D0, [X8 + 0x20]
	0x03A702F8 B 0x3A70318
	0x03A702FC LDR X8, [X10 + 0x20]
	0x03A70300 FMOV S0, W31
	0x03A70304 FMOV S1, 1
	0x03A70308 MOV X0, X20
	0x03A7030C LDR X8, [X8 + 0xC0]
	0x03A70310 LDR X1, [X8 + 0x70]
	0x03A70314 BL 0x30C9664
	0x03A70318 LDR W9, [X20 + 0x1C]
	0x03A7031C LDR X8, [X20 + 0x10]
	0x03A70320 LDR X10, [X22]
	0x03A70324 ADD W9, W9, 0x1
	0x03A70328 STR W9, [X20 + 0x1C]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x973000
	006 Move X20, 0x6E7000
	007 Move W8, [X21+663]
	008 Move X20, [X20+3160]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x6E7000
	015 Move X0, [X0+3160]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+663], W8
	019 Move X0, [X20]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {25}
	023 Call 0x1C17DFC
	024 Move X0, [X20]
	025 Move X8, [X0+184]
	026 Move X0, X19
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X2, X31
	030 Move X1, [X8+16]
	031 Move X30, [X31+32]
	032 Move X21, [X31+40]
	033 Call ScriptableRenderPass.ConfigureTarget, X0, X1
	034 Return 

Method: System.Void Execute(UnityEngine.Rendering.ScriptableRenderContext context, ref UnityEngine.Rendering.Universal.RenderingData renderingData)

Disassembly:
	0x03A7032C CBZ X8, 0x3A7047C
	0x03A70330 LDRSW X9, [X20 + 0x18]
	0x03A70334 LDR W11, [X8 + 0x18]
	0x03A70338 CMP W9, W11
	0x03A7033C B.CS 0x3A7035C
	0x03A70340 ADRP X10, 0xFFFFFFFFFD07D000
	0x03A70344 LDR V0, [X10 + 0x648]
	0x03A70348 ADD W10, W9, 0x1
	0x03A7034C ADD X8, X8, X9, 0x3, LSL
	0x03A70350 STR W10, [X20 + 0x18]
	0x03A70354 STR D0, [X8 + 0x20]
	0x03A70358 B 0x3A70378
	0x03A7035C LDR X8, [X10 + 0x20]
	0x03A70360 FMOV S0, 1
	0x03A70364 FMOV S1, W31
	0x03A70368 MOV X0, X20
	0x03A7036C LDR X8, [X8 + 0xC0]
	0x03A70370 LDR X1, [X8 + 0x70]
	0x03A70374 BL 0x30C9664
	0x03A70378 LDR W10, [X20 + 0x1C]
	0x03A7037C LDR X8, [X20 + 0x10]
	0x03A70380 LDR X9, [X22]
	0x03A70384 ADD W10, W10, 0x1
	0x03A70388 STR W10, [X20 + 0x1C]
	0x03A7038C CBZ X8, 0x3A7047C
	0x03A70390 LDRSW X10, [X20 + 0x18]
	0x03A70394 LDR W11, [X8 + 0x18]
	0x03A70398 CMP W10, W11
	0x03A7039C B.CS 0x3A703B8
	0x03A703A0 ADD W9, W10, 0x1
	0x03A703A4 ADD X8, X8, X10, 0x3, LSL
	0x03A703A8 FMOV V0.2S, 0x0
	0x03A703AC STR W9, [X20 + 0x18]
	0x03A703B0 STR D0, [X8 + 0x20]
	0x03A703B4 B 0x3A703D4
	0x03A703B8 LDR X8, [X9 + 0x20]
	0x03A703BC FMOV S0, 1
	0x03A703C0 FMOV S1, 1
	0x03A703C4 MOV X0, X20
	0x03A703C8 LDR X8, [X8 + 0xC0]
	0x03A703CC LDR X1, [X8 + 0x70]
	0x03A703D0 BL 0x30C9664
	0x03A703D4 CBZ X19, 0x3A7047C
	0x03A703D8 MOV X0, X19
	0x03A703DC MOV W1, W31
	0x03A703E0 MOV X2, X20
	0x03A703E4 MOV X3, X31
	0x03A703E8 BL 0x3C18984
	0x03A703EC LDR X8, [X21]
	0x03A703F0 ADRP X9, 0x684000
	0x03A703F4 MOVZ W1, 0x6
	0x03A703F8 LDR X8, [X8 + 0xB8]
	0x03A703FC LDR X9, [X9 + 0xE58]
	0x03A70400 LDR X19, [X8 + 0x80]
	0x03A70404 LDR X0, [X9]
	0x03A70408 BL 0x1C16D6C
	0x03A7040C ADRP X8, 0x6E6000
	0x03A70410 LDR X8, [X8 + 0xCE0]
	0x03A70414 MOV X2, X31
	0x03A70418 MOV X20, X0
	0x03A7041C LDR X1, [X8]
	0x03A70420 BL 0x32C5BD8
	0x03A70424 CBZ X19, 0x3A7047C
	0x03A70428 MOV X0, X19
	0x03A7042C MOV X1, X20
	0x03A70430 MOV W2, W31
	0x03A70434 MOV W3, W31
	0x03A70438 MOV W4, W31
	0x03A7043C MOV X5, X31
	0x03A70440 BL 0x3C1985C
	0x03A70444 LDR X8, [X21]
	0x03A70448 LDR X8, [X8 + 0xB8]
	0x03A7044C LDR X0, [X8 + 0x80]
	0x03A70450 CBZ X0, 0x3A7047C
	0x03A70454 MOVZ W1, 0x1
	0x03A70458 MOV X2, X31
	0x03A7045C BL 0x3C1A03C
	0x03A70460 LDR X8, [X21]
	0x03A70464 LDP X20, X19, [X31 + 0x20]
	0x03A70468 LDP X22, X21, [X31 + 0x10]
	0x03A7046C LDR X8, [X8 + 0xB8]
	0x03A70470 LDR X0, [X8 + 0x80]
	0x03A70474 LDR X30, [X31], #0x30
	0x03A70478 RET
	0x03A7047C BL 0x1C16F20
	0x03A70480 MOV W0, W31
	0x03A70484 RET
	0x03A70488 CMP W0, 0x8
	0x03A7048C CSET W0, NE
	0x03A70490 RET
	0x03A70494 STP X30, X21, [X31 - 0x20]!
	0x03A70498 STP X20, X19, [X31 + 0x10]
	0x03A7049C ADRP X19, 0x972000
	0x03A704A0 ADRP X21, 0x6E4000
	0x03A704A4 LDRB W8, [X19 + 0x2A1]
	0x03A704A8 LDR X21, [X21 + 0x10]
	0x03A704AC TBNZ X8, 0x0, 0x3A704E8
	0x03A704B0 ADRP X0, 0x687000
	0x03A704B4 LDR X0, [X0 + 0xCA0]
	0x03A704B8 BL 0x1C16CF4
	0x03A704BC ADRP X0, 0x683000
	0x03A704C0 LDR X0, [X0 + 0x598]
	0x03A704C4 BL 0x1C16CF4
	0x03A704C8 ADRP X0, 0x6E4000
	0x03A704CC LDR X0, [X0 + 0x10]
	0x03A704D0 BL 0x1C16CF4
	0x03A704D4 ADRP X0, 0x6E6000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, 0x973000
	007 Move X21, 0x6E7000
	008 Move W8, [X19+664]
	009 Move X21, [X21+3160]
	010 Move X20, X2
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {32}
	015 Move X0, 0x6AC000
	016 Move X0, [X0+2296]
	017 Call 0x1C17CF4
	018 Move X0, 0x6E7000
	019 Move X0, [X0+3160]
	020 Call 0x1C17CF4
	021 Move X0, 0x6E7000
	022 Move X0, [X0+3248]
	023 Call 0x1C17CF4
	024 Move X0, 0x6E6000
	025 Move X0, [X0+3896]
	026 Call 0x1C17CF4
	027 Move X0, 0x6E6000
	028 Move X0, [X0+3936]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X19+664], W8
	032 Move X0, [X21]
	033 Move [X31+8], W31
	034 Move X22, 0x6AC000
	035 Move X19, [X20]
	036 Move W8, [X0+224]
	037 Move X22, [X22+2296]
	038 Compare W8, 0
	039 JumpIfNotEqual {42}
	040 Call 0x1C17DFC
	041 Move X0, [X21]
	042 Move X8, [X0+184]
	043 Add X0, X31, 8
	044 Move X1, X19
	045 Move X3, X31
	046 Move X2, [X8+8]
	047 Call ProfilingScope..ctor, X0, X1, X2
	048 Move W8, [X20+592]
	049 Move X0, [X22]
	050 Move W9, [X20+604]
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Move W8, [X0+224]
	053 NotImplemented "Instruction CSET not yet implemented."
	054 NotImplemented "Instruction CMP not yet implemented."
	055 NotImplemented "Instruction CSET not yet implemented."
	056 NotImplemented "Instruction CSET not yet implemented."
	057 Compare W8, 0
	058 JumpIfNotEqual {60}
	059 Call 0x1C17DFC
	060 Move X8, 0x6E7000
	061 Move X8, [X8+3248]
	062 Move X1, [X8]
	063 Move X0, X19
	064 Move W2, W31
	065 Move X3, X31
	066 Call CoreUtils.SetKeyword, X0, X1, X2
	067 Move X8, 0x6E6000
	068 Move X8, [X8+3936]
	069 And W2, W22, W20
	070 Move X1, [X8]
	071 Move X0, X19
	072 Move X3, X31
	073 Call CoreUtils.SetKeyword, X0, X1, X2
	074 Move X8, 0x6E6000
	075 Move X8, [X8+3896]
	076 And W2, W21, W20
	077 Move X1, [X8]
	078 Move X0, X19
	079 Move X3, X31
	080 Call CoreUtils.SetKeyword, X0, X1, X2
	081 Add X0, X31, 8
	082 Move X1, X31
	083 Call ProfilingScope.Dispose, X0
	084 Move X20, [X31+32]
	085 Move X19, [X31+40]
	086 Move X22, [X31+16]
	087 Move X21, [X31+24]
	088 Move X30, [X31+48]
	089 Return 
	090 Move X19, X0
	091 NotImplemented "Instruction CMP not yet implemented."
	092 Move X0, X19
	093 Call 0x3EB2AD0
	094 Move X20, [X0]
	095 Call 0x3EB2AE0
	096 Add X0, X31, 8
	097 Move X1, X31
	098 Call ProfilingScope.Dispose, X0
	099 Compare X20, 0
	100 JumpIfEqual {84}
	101 Move X0, X20
	102 Call 0x1C17F18
	103 Move X20, X31
	104 Move X19, X0
	105 Add X0, X31, 8
	106 Move X1, X31
	107 Call ProfilingScope.Dispose, X0
	108 Compare X20, 0
	109 JumpIfNotEqual {112}
	110 Move X0, X19
	111 Call 0x1D2D690
	112 Move X0, X20
	113 Call 0x1C17F18
	114 Call 0x1991590

Method: System.Void .ctor()

Disassembly:
	0x03A6F68C ADRP X0, 0x68A000
	0x03A6F690 LDR X0, [X0 + 0x6B0]
	0x03A6F694 BL 0x1C16CF4
	0x03A6F698 ADRP X0, 0x684000
	0x03A6F69C LDR X0, [X0 + 0x598]
	0x03A6F6A0 BL 0x1C16CF4
	0x03A6F6A4 ADRP X0, 0x6E5000
	0x03A6F6A8 LDR X0, [X0 + 0xC50]
	0x03A6F6AC BL 0x1C16CF4
	0x03A6F6B0 MOVZ W8, 0x1
	0x03A6F6B4 STRB W8, [X23 + 0x29B]
	0x03A6F6B8 MOVZ W8, 0x1
	0x03A6F6BC STP X31, X31, [X31 + 0x20]
	0x03A6F6C0 STR X31, [X31 + 0x30]
	0x03A6F6C4 STR X31, [X31 + 0x48]
	0x03A6F6C8 STR W8, [X20]
	0x03A6F6CC STR W31, [X19]
	0x03A6F6D0 CBZ X22, 0x3A6F89C
	0x03A6F6D4 LDR X0, [X22 + 0x28]
	0x03A6F6D8 CBZ X0, 0x3A6F89C
	0x03A6F6DC ADRP X8, 0x68A000
	0x03A6F6E0 LDR X8, [X8 + 0x6B0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x974000
	006 Move X21, 0x6E5000
	007 Move W8, [X20+665]
	008 Move X21, [X21+4080]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x6E5000
	015 Move X0, [X0+4080]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+665], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X1, X31
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Call ScriptableRenderPass..ctor, X0
	031 Return 

Method: System.Void .cctor()

Disassembly:
	0x03A704D8 LDR X0, [X0 + 0xCF0]
	0x03A704DC BL 0x1C16CF4
	0x03A704E0 MOVZ W8, 0x1
	0x03A704E4 STRB W8, [X19 + 0x2A1]
	0x03A704E8 LDR X0, [X21]
	0x03A704EC ADRP X19, 0x683000
	0x03A704F0 LDR W8, [X0 + 0xE0]
	0x03A704F4 LDR X19, [X19 + 0x598]
	0x03A704F8 CBNZ W8, 0x3A70504
	0x03A704FC BL 0x1C16DFC
	0x03A70500 LDR X0, [X21]
	0x03A70504 LDR X8, [X19]
	0x03A70508 LDR X9, [X0 + 0xB8]
	0x03A7050C LDR W10, [X8 + 0xE0]
	0x03A70510 LDR X19, [X9 + 0x88]
	0x03A70514 CBNZ W10, 0x3A70520
	0x03A70518 MOV X0, X8
	0x03A7051C BL 0x1C16DFC
	0x03A70520 MOV X0, X19
	0x03A70524 MOV X1, X31
	0x03A70528 MOV X2, X31
	0x03A7052C BL 0x3C3883C
	0x03A70530 TBZ X0, 0x0, 0x3A70588
	0x03A70534 ADRP X8, 0x6E6000
	0x03A70538 LDR X8, [X8 + 0xCF0]
	0x03A7053C LDR X0, [X8]
	0x03A70540 MOV X1, X31
	0x03A70544 BL 0x3C13E40
	0x03A70548 ADRP X8, 0x687000
	0x03A7054C LDR X8, [X8 + 0xCA0]
	0x03A70550 MOV X20, X0
	0x03A70554 LDR X0, [X8]
	0x03A70558 BL 0x1C16F10
	0x03A7055C MOV X19, X0
	0x03A70560 MOV X1, X20
	0x03A70564 MOV X2, X31
	0x03A70568 BL 0x3C1454C
	0x03A7056C LDR X0, [X21]
	0x03A70570 LDR W8, [X0 + 0xE0]
	0x03A70574 CBNZ W8, 0x3A70580
	0x03A70578 BL 0x1C16DFC
	0x03A7057C LDR X0, [X21]
	0x03A70580 LDR X8, [X0 + 0xB8]
	0x03A70584 STR X19, [X8 + 0x88]
	0x03A70588 LDR X0, [X21]
	0x03A7058C LDR W8, [X0 + 0xE0]
	0x03A70590 CBNZ W8, 0x3A7059C
	0x03A70594 BL 0x1C16DFC
	0x03A70598 LDR X0, [X21]
	0x03A7059C LDR X8, [X0 + 0xB8]
	0x03A705A0 LDP X20, X19, [X31 + 0x10]
	0x03A705A4 LDR X0, [X8 + 0x88]
	0x03A705A8 LDP X30, X21, [X31], #0x20
	0x03A705AC RET
	0x03A705B0 B 0x3A705B4
	0x03A705B4 MOV X19, X0
	0x03A705B8 CMP W1, 0x1
	0x03A705BC B.NE 0x3A70618
	0x03A705C0 MOV X0, X19
	0x03A705C4 BL 0x3EB1AD0
	0x03A705C8 MOV X19, X0
	0x03A705CC ADRP X0, 0x689000
	0x03A705D0 LDR X0, [X0 + 0xCC0]
	0x03A705D4 BL 0x1C16D08
	0x03A705D8 LDR X8, [X19]
	0x03A705DC LDR X1, [X8]
	0x03A705E0 BL 0x1C17270
	0x03A705E4 TBZ X0, 0x0, 0x3A705F0
	0x03A705E8 BL 0x3EB1AE0
	0x03A705EC B 0x3A70588
	0x03A705F0 MOVZ W0, 0x8
	0x03A705F4 BL 0x3EB1AF0
	0x03A705F8 LDR X8, [X19]

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+128], X30
	003 Move [X31+136], X23
	004 Move [X31+144], X22
	005 Move [X31+152], X21
	006 Move [X31+160], X20
	007 Move [X31+168], X19
	008 Move X23, 0x973000
	009 Move X19, 0x6E7000
	010 Move X21, 0x6E7000
	011 Move X20, 0x6E1000
	012 Move X22, 0x6E1000
	013 Move W8, [X23+666]
	014 Move X19, [X19+3272]
	015 Move X21, [X21+3160]
	016 Move X20, [X20+1432]
	017 Move X22, [X22+2480]
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {36}
	022 Move X0, 0x6E1000
	023 Move X0, [X0+1432]
	024 Call 0x1C17CF4
	025 Move X0, 0x6E1000
	026 Move X0, [X0+2480]
	027 Call 0x1C17CF4
	028 Move X0, 0x6E7000
	029 Move X0, [X0+3160]
	030 Call 0x1C17CF4
	031 Move X0, 0x6E7000
	032 Move X0, [X0+3272]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X23+666], W8
	036 Move X8, [X21]
	037 Move X9, [X19]
	038 Move X8, [X8+184]
	039 Move [X8], X9
	040 Move X8, [X21]
	041 Move X0, [X20]
	042 Move X8, [X8+184]
	043 Move X19, [X8]
	044 Call 0x1C17F10
	045 Move X1, X19
	046 Move X2, X31
	047 Move X20, X0
	048 Call ProfilingSampler..ctor, X0, X1
	049 Move X8, [X21]
	050 Move W0, 1
	051 Move X1, X31
	052 Move X8, [X8+184]
	053 Move [X8+8], X20
	054 Add X8, X31, 40
	055 Call RenderTargetIdentifier.op_Implicit, X0
	056 NotImplemented "Instruction LDUR not yet implemented."
	057 NotImplemented "Instruction LDUR not yet implemented."
	058 Move X8, [X31+72]
	059 Move X0, [X22]
	060 Move [X31+80], V0
	061 Move [X31+88], V1
	062 Move [X31+112], X8
	063 Move W8, [X0+224]
	064 Compare W8, 0
	065 JumpIfNotEqual {67}
	066 Call 0x1C17DFC
	067 Move V0, [X31+80]
	068 Move V1, [X31+96]
	069 Move X8, [X31+112]
	070 Add X0, X31, 0
	071 Move X1, X31
	072 Move [X31], V0
	073 Move [X31+8], V1
	074 Move [X31+32], X8
	075 Call RTHandles.Alloc, X0
	076 Move X8, [X21]
	077 Move X20, [X31+160]
	078 Move X19, [X31+168]
	079 Move X22, [X31+144]
	080 Move X21, [X31+152]
	081 Move X30, [X31+128]
	082 Move X23, [X31+136]
	083 Move X8, [X8+184]
	084 Move [X8+16], X0
	085 Add X31, X31, 176
	086 Return 

