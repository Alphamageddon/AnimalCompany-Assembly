Type: UnityEngine.Rendering.Universal.MotionVectorsPersistentData

Method: System.Void .ctor()

Disassembly:
	0x03A58F90 BL 0x1C16D6C
	0x03A58F94 MOV X20, X0
	0x03A58F98 ADD X0, X31, 0x1E8
	0x03A58F9C FMOV S0, W31
	0x03A58FA0 FMOV S1, W31
	0x03A58FA4 FMOV S2, 1
	0x03A58FA8 FMOV S3, 1
	0x03A58FAC MOV X1, X31
	0x03A58FB0 STP X31, X31, [X31 + 0x1E8]
	0x03A58FB4 STR W31, [X31 + 0x200]
	0x03A58FB8 STR X31, [X31 + 0x1F8]
	0x03A58FBC BL 0x3C00A84
	0x03A58FC0 CBZ X20, 0x3A59538
	0x03A58FC4 ADD X21, X31, 0x180
	0x03A58FC8 LDUR V0, [X21 + 0x68]
	0x03A58FCC LDUR V1, [X21 + 0x74]
	0x03A58FD0 STR V0, [X31 + 0x1C]
	0x03A58FD4 STUR V1, [X21 + 0x4C]
	0x03A58FD8 LDR W8, [X20 + 0x18]
	0x03A58FDC CBZ W8, 0x3A59534
	0x03A58FE0 LDUR V0, [X21 + 0x4C]
	0x03A58FE4 LDR V1, [X31 + 0x1C]
	0x03A58FE8 ADD X0, X31, 0x1A0
	0x03A58FEC FMOV S2, 1
	0x03A58FF0 STUR V0, [X20 + 0x2C]
	0x03A58FF4 STR V1, [X20 + 0x2]
	0x03A58FF8 FMOV S0, 1
	0x03A58FFC FMOV S1, 1
	0x03A59000 FMOV S3, 1
	0x03A59004 MOV X1, X31
	0x03A59008 STP X31, X31, [X31 + 0x1A0]
	0x03A5900C STR W31, [X31 + 0x1B8]
	0x03A59010 STR X31, [X31 + 0x1B0]
	0x03A59014 BL 0x3C00A84
	0x03A59018 LDUR V0, [X21 + 0x2C]
	0x03A5901C LDR V1, [X31 + 0x1A]
	0x03A59020 STUR V0, [X21 + 0xC]
	0x03A59024 STR V1, [X31 + 0x18]
	0x03A59028 LDR W8, [X20 + 0x18]
	0x03A5902C CMP W8, 0x1
	0x03A59030 B.LS 0x3A59534
	0x03A59034 LDUR V0, [X21 + 0xC]
	0x03A59038 LDR V1, [X31 + 0x18]
	0x03A5903C ADRP X24, 0x6F9000
	0x03A59040 LDR X24, [X24 + 0xE78]
	0x03A59044 ADRP X8, 0xFFFFFFFFFD095000
	0x03A59048 STUR V0, [X20 + 0x48]
	0x03A5904C STUR V1, [X20 + 0x3C]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x98B000
	008 Move X22, 0x6A0000
	009 Move X21, 0x69D000
	010 Move X20, 0x69C000
	011 Move W8, [X23+500]
	012 Move X22, [X22+2440]
	013 Move X21, [X21+3672]
	014 Move X20, [X20+1592]
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {31}
	020 Move X0, 0x69D000
	021 Move X0, [X0+3672]
	022 Call 0x1C17CF4
	023 Move X0, 0x6A0000
	024 Move X0, [X0+2440]
	025 Call 0x1C17CF4
	026 Move X0, 0x69C000
	027 Move X0, [X0+1592]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X23+500], W8
	031 Move X0, [X22]
	032 Move W1, 2
	033 Call 0x1C17D6C
	034 Move [X19+16], X0
	035 Move X0, [X22]
	036 Move W1, 2
	037 Call 0x1C17D6C
	038 Move [X19+24], X0
	039 Move X0, [X21]
	040 Move W1, 2
	041 Call 0x1C17D6C
	042 Move [X19+32], X0
	043 Move X0, [X20]
	044 Move W1, 2
	045 Call 0x1C17D6C
	046 Move [X19+40], X0
	047 Move X0, X19
	048 Move X1, X31
	049 Call Object..ctor, X0
	050 Move X0, X19
	051 Move X20, [X31+32]
	052 Move X19, [X31+40]
	053 Move X22, [X31+16]
	054 Move X21, [X31+24]
	055 Move X30, [X31+48]
	056 Move X23, [X31+56]

Method: System.Int32 get_lastFrameIndex()

Disassembly:
	0x03A591AC MOVZ W1, 0x2
	0x03A591B0 BL 0x1C16D6C
	0x03A591B4 MOV X20, X0
	0x03A591B8 ADD X0, X31, 0xE0
	0x03A591BC FMOV S0, W31
	0x03A591C0 FMOV S1, W31
	0x03A591C4 FMOV S2, 1
	0x03A591C8 FMOV S3, 1
	0x03A591CC MOV X1, X31
	0x03A591D0 STP X31, X31, [X31 + 0xE0]

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+32]
	003 Compare X8, 0
	004 JumpIfEqual {11}
	005 Move W9, [X8+24]
	006 Compare W9, 0
	007 JumpIfEqual {12}
	008 Move W0, [X8+32]
	009 Move X30, [X31+16]
	010 Return X0
	011 Call 0x1C17F20
	012 Call 0x1C17F28

Method: UnityEngine.Matrix4x4 get_viewProjection()

Disassembly:
	0x03A591D4 STR W31, [X31 + 0xF8]
	0x03A591D8 STR X31, [X31 + 0xF0]
	0x03A591DC BL 0x3C00A84
	0x03A591E0 CBZ X20, 0x3A59538
	0x03A591E4 LDR V0, [X31 + 0xE]
	0x03A591E8 LDUR V1, [X25 + 0x6C]
	0x03A591EC STR V0, [X31 + 0xC]
	0x03A591F0 STUR V1, [X25 + 0x4C]
	0x03A591F4 LDR W8, [X20 + 0x18]
	0x03A591F8 CBZ W8, 0x3A59534
	0x03A591FC LDUR V0, [X25 + 0x4C]
	0x03A59200 LDR V1, [X31 + 0xC]
	0x03A59204 ADD X0, X31, 0xA0

ISIL:
	001 Move [X31-16], X30
	002 Move X9, [X0+16]
	003 Compare X9, 0
	004 JumpIfEqual {18}
	005 Move W10, [X9+24]
	006 Compare W10, 0
	007 JumpIfEqual {19}
	008 Move V1, [X9+64]
	009 Move V0, [X9+80]
	010 Move V3, [X9+32]
	011 Move V2, [X9+48]
	012 Move [X8+32], V1
	013 Move [X8+40], V0
	014 Move [X8], V3
	015 Move [X8+8], V2
	016 Move X30, [X31+16]
	017 Return X0
	018 Call 0x1C17F20
	019 Call 0x1C17F28

Method: UnityEngine.Matrix4x4 get_previousViewProjection()

Disassembly:
	0x03A59208 FMOV S2, 1
	0x03A5920C STUR V0, [X20 + 0x2C]
	0x03A59210 STR V1, [X20 + 0x2]
	0x03A59214 FMOV S0, 1
	0x03A59218 FMOV S1, 1
	0x03A5921C FMOV S3, 1
	0x03A59220 MOV X1, X31
	0x03A59224 STP X31, X31, [X31 + 0xA0]
	0x03A59228 STR W31, [X31 + 0xB8]
	0x03A5922C STR X31, [X31 + 0xB0]
	0x03A59230 BL 0x3C00A84
	0x03A59234 LDUR V0, [X25 + 0x2C]
	0x03A59238 LDR V1, [X31 + 0xA]

ISIL:
	001 Move [X31-16], X30
	002 Move X9, [X0+24]
	003 Compare X9, 0
	004 JumpIfEqual {18}
	005 Move W10, [X9+24]
	006 Compare W10, 0
	007 JumpIfEqual {19}
	008 Move V1, [X9+64]
	009 Move V0, [X9+80]
	010 Move V3, [X9+32]
	011 Move V2, [X9+48]
	012 Move [X8+32], V1
	013 Move [X8+40], V0
	014 Move [X8], V3
	015 Move [X8+8], V2
	016 Move X30, [X31+16]
	017 Return X0
	018 Call 0x1C17F20
	019 Call 0x1C17F28

Method: UnityEngine.Matrix4x4[] get_viewProjectionStereo()

Disassembly:
	0x03A5923C STUR V0, [X25 + 0xC]
	0x03A59240 STR V1, [X31 + 0x8]

ISIL:
	001 Move X0, [X0+16]
	002 Return X0

Method: UnityEngine.Matrix4x4[] get_previousViewProjectionStereo()

Disassembly:
	0x03A59244 LDR W8, [X20 + 0x18]
	0x03A59248 CMP W8, 0x1

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Void Reset()

Disassembly:
	0x03A59050 LDR V8, [X8]
	0x03A59054 LDR X0, [X24]
	0x03A59058 ADRP X23, 0x6FD000
	0x03A5905C LDR X23, [X23 + 0x300]
	0x03A59060 STR D8, [X31 + 0x208]
	0x03A59064 BL 0x1C16F10
	0x03A59068 FMOV S0, W31
	0x03A5906C ADD X3, X31, 0x208
	0x03A59070 MOV X1, X20
	0x03A59074 MOV W2, W31
	0x03A59078 MOV X4, X31
	0x03A5907C MOV X21, X0
	0x03A59080 BL 0x39ECD2C
	0x03A59084 LDR X0, [X23]
	0x03A59088 BL 0x1C16F10
	0x03A5908C MOV X1, X21
	0x03A59090 MOV W2, W31
	0x03A59094 MOV X3, X31
	0x03A59098 MOV X20, X0
	0x03A5909C BL 0x39ED3F0
	0x03A590A0 STR X20, [X19 + 0x38]
	0x03A590A4 LDR X0, [X22]
	0x03A590A8 MOVZ W1, 0x2
	0x03A590AC BL 0x1C16D6C
	0x03A590B0 MOV X20, X0
	0x03A590B4 ADD X0, X31, 0x160
	0x03A590B8 FMOV S0, W31
	0x03A590BC FMOV S1, W31
	0x03A590C0 FMOV S2, 1
	0x03A590C4 FMOV S3, 1
	0x03A590C8 MOV X1, X31
	0x03A590CC STP X31, X31, [X31 + 0x160]
	0x03A590D0 STR W31, [X31 + 0x178]
	0x03A590D4 STR X31, [X31 + 0x170]
	0x03A590D8 BL 0x3C00A84
	0x03A590DC CBZ X20, 0x3A59538
	0x03A590E0 ADD X25, X31, 0x80
	0x03A590E4 LDR V0, [X31 + 0x16]
	0x03A590E8 LDUR V1, [X25 + 0xEC]
	0x03A590EC STR V0, [X31 + 0x14]
	0x03A590F0 STUR V1, [X25 + 0xCC]
	0x03A590F4 LDR W8, [X20 + 0x18]
	0x03A590F8 CBZ W8, 0x3A59534
	0x03A590FC LDUR V0, [X25 + 0xCC]
	0x03A59100 LDR V1, [X31 + 0x14]
	0x03A59104 ADD X0, X31, 0x120
	0x03A59108 FMOV S2, 1
	0x03A5910C STUR V0, [X20 + 0x2C]
	0x03A59110 STR V1, [X20 + 0x2]
	0x03A59114 FMOV S0, 1
	0x03A59118 FMOV S1, 1
	0x03A5911C FMOV S3, 1
	0x03A59120 MOV X1, X31
	0x03A59124 STP X31, X31, [X31 + 0x120]
	0x03A59128 STR W31, [X31 + 0x138]
	0x03A5912C STR X31, [X31 + 0x130]
	0x03A59130 BL 0x3C00A84
	0x03A59134 LDUR V0, [X25 + 0xAC]
	0x03A59138 LDR V1, [X31 + 0x12]
	0x03A5913C STUR V0, [X25 + 0x8C]
	0x03A59140 STR V1, [X31 + 0x10]
	0x03A59144 LDR W8, [X20 + 0x18]
	0x03A59148 CMP W8, 0x1
	0x03A5914C B.LS 0x3A59534
	0x03A59150 LDUR V0, [X25 + 0x8C]
	0x03A59154 LDR V1, [X31 + 0x10]
	0x03A59158 STUR V0, [X20 + 0x48]
	0x03A5915C STUR V1, [X20 + 0x3C]
	0x03A59160 LDR X0, [X24]
	0x03A59164 STR D8, [X31 + 0x208]
	0x03A59168 BL 0x1C16F10
	0x03A5916C FMOV S0, W31
	0x03A59170 ADD X3, X31, 0x208
	0x03A59174 MOV X1, X20
	0x03A59178 MOV W2, W31
	0x03A5917C MOV X4, X31
	0x03A59180 MOV X21, X0
	0x03A59184 BL 0x39ECD2C
	0x03A59188 LDR X0, [X23]
	0x03A5918C BL 0x1C16F10
	0x03A59190 MOV X1, X21
	0x03A59194 MOV W2, W31
	0x03A59198 MOV X3, X31
	0x03A5919C MOV X20, X0
	0x03A591A0 BL 0x39ED3F0
	0x03A591A4 STR X20, [X19 + 0x40]
	0x03A591A8 LDR X0, [X22]

ISIL:
	001 Subtract X31, X31, 288
	002 Move [X31+192], X29
	003 Move [X31+200], X30
	004 Move [X31+208], X28
	005 Move [X31+216], X27
	006 Move [X31+224], X26
	007 Move [X31+232], X25
	008 Move [X31+240], X24
	009 Move [X31+248], X23
	010 Move [X31+256], X22
	011 Move [X31+264], X21
	012 Move [X31+272], X20
	013 Move [X31+280], X19
	014 Move X28, [X0+16]
	015 Compare X28, 0
	016 JumpIfEqual {107}
	017 Move X20, 0x69F000
	018 Move X20, [X20+624]
	019 Move X19, X0
	020 Move W21, 8
	021 Move W22, 32
	022 Move X23, 0x980000
	023 Move W24, 1
	024 Move TEMP, 0
	025 Not TEMP
	026 Move W25, TEMP
	027 Move W26, 0xBF800000
	028 Move W8, [X28+24]
	029 Subtract X27, X21, 8
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move W9, [X23+2752]
	032 Compare W9, 0
	033 JumpIfNotEqual {38}
	034 Move X0, X20
	035 Call 0x1C17CF4
	036 Move [X23+2752], W24
	037 Move W8, [X28+24]
	038 Move X9, [X20]
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Move X9, [X9+184]
	041 Move V0, [X9+96]
	042 Move V1, [X9+112]
	043 Move V3, [X9+64]
	044 Move V2, [X9+80]
	045 Move [X31+160], V0
	046 Move [X31+168], V1
	047 Move [X31+128], V3
	048 Move [X31+136], V2
	049 Move V0, [X31+160]
	050 Move V1, [X31+176]
	051 Move V2, [X31+128]
	052 Move V3, [X31+144]
	053 Add X8, X28, X22
	054 Move [X8+32], V0
	055 Move [X8+40], V1
	056 Move [X8], V2
	057 Move [X8+8], V3
	058 Move X8, [X20]
	059 Move X8, [X8+184]
	060 Move V0, [X8+96]
	061 Move V1, [X8+112]
	062 Move V3, [X8+64]
	063 Move V2, [X8+80]
	064 Move X8, [X19+24]
	065 Move [X31+96], V0
	066 Move [X31+104], V1
	067 Move [X31+64], V3
	068 Move [X31+72], V2
	069 Compare X8, 0
	070 JumpIfEqual {107}
	071 Move V0, [X31+64]
	072 Move V1, [X31+80]
	073 Move V2, [X31+96]
	074 Move V3, [X31+112]
	075 Move [X31], V0
	076 Move [X31+8], V1
	077 Move [X31+32], V2
	078 Move [X31+40], V3
	079 Move W9, [X8+24]
	080 NotImplemented "Instruction CMP not yet implemented."
	081 Move V0, [X31+32]
	082 Move V1, [X31+48]
	083 Move V2, [X31]
	084 Move V3, [X31+16]
	085 Add X8, X8, X22
	086 Move [X8+32], V0
	087 Move [X8+40], V1
	088 Move [X8], V2
	089 Move [X8+8], V3
	090 Move X8, [X19+32]
	091 Compare X8, 0
	092 JumpIfEqual {107}
	093 Move W9, [X8+24]
	094 NotImplemented "Instruction CMP not yet implemented."
	095 Move [X8], W25
	096 Move X8, [X19+40]
	097 Compare X8, 0
	098 JumpIfEqual {107}
	099 Move W9, [X8+24]
	100 NotImplemented "Instruction CMP not yet implemented."
	101 Move [X8], W26
	102 Move X28, [X19+16]
	103 Add X21, X21, 1
	104 Add X22, X22, 64
	105 Compare X28, 0
	106 JumpIfNotEqual {28}
	107 Call 0x1C17F20
	108 Move X20, [X31+272]
	109 Move X19, [X31+280]
	110 Move X22, [X31+256]
	111 Move X21, [X31+264]
	112 Move X24, [X31+240]
	113 Move X23, [X31+248]
	114 Move X26, [X31+224]
	115 Move X25, [X31+232]
	116 Move X28, [X31+208]
	117 Move X27, [X31+216]
	118 Move X29, [X31+192]
	119 Move X30, [X31+200]
	120 Add X31, X31, 288
	121 Return 
	122 Call 0x1C17F28

Method: System.Int32 GetXRMultiPassId(ref UnityEngine.Rendering.Universal.CameraData cameraData)

Disassembly:
	0x03A5924C B.LS 0x3A59534
	0x03A59250 LDUR V0, [X25 + 0xC]
	0x03A59254 LDR V1, [X31 + 0x8]
	0x03A59258 STUR V0, [X20 + 0x48]
	0x03A5925C STUR V1, [X20 + 0x3C]
	0x03A59260 LDR X0, [X24]
	0x03A59264 STR D8, [X31 + 0x208]
	0x03A59268 BL 0x1C16F10
	0x03A5926C FMOV S0, W31
	0x03A59270 ADD X3, X31, 0x208
	0x03A59274 MOV X1, X20
	0x03A59278 MOV W2, W31
	0x03A5927C MOV X4, X31
	0x03A59280 MOV X21, X0
	0x03A59284 BL 0x39ECD2C

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, [X1+376]
	004 Compare X0, 0
	005 JumpIfEqual {21}
	006 Move X19, X1
	007 Move X1, X31
	008 Call XRPass.get_enabled, X0
	009 Move TEMP, X0
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfNotEqual {17}
	013 Move X8, [X19+376]
	014 Compare X8, 0
	015 JumpIfEqual {21}
	016 Move W0, [X8+36]
	017 Move W0, W31
	018 Move X30, [X31+16]
	019 Move X19, [X31+24]
	020 Return X0
	021 Call 0x1C17F20

Method: System.Void Update(ref UnityEngine.Rendering.Universal.CameraData cameraData)

Disassembly:
	0x03A59288 LDR X0, [X23]
	0x03A5928C BL 0x1C16F10
	0x03A59290 MOV X1, X21
	0x03A59294 MOV W2, W31
	0x03A59298 MOV X3, X31
	0x03A5929C MOV X20, X0
	0x03A592A0 BL 0x39ED3F0
	0x03A592A4 STR X20, [X19 + 0x48]
	0x03A592A8 LDR X0, [X22]
	0x03A592AC MOVZ W1, 0x2
	0x03A592B0 BL 0x1C16D6C
	0x03A592B4 MOV X20, X0
	0x03A592B8 ADD X0, X31, 0x60
	0x03A592BC FMOV S0, W31
	0x03A592C0 FMOV S1, W31
	0x03A592C4 FMOV S2, 1
	0x03A592C8 FMOV S3, 1
	0x03A592CC MOV X1, X31
	0x03A592D0 STP X31, X31, [X31 + 0x60]
	0x03A592D4 STR W31, [X31 + 0x78]
	0x03A592D8 STR X31, [X31 + 0x70]
	0x03A592DC BL 0x3C00A84
	0x03A592E0 CBZ X20, 0x3A59538
	0x03A592E4 LDR V0, [X31 + 0x6]
	0x03A592E8 LDUR V1, [X31 + 0x6C]
	0x03A592EC STR V0, [X31 + 0x4]
	0x03A592F0 STUR V1, [X31 + 0x4C]
	0x03A592F4 LDR W8, [X20 + 0x18]
	0x03A592F8 CBZ W8, 0x3A59534
	0x03A592FC LDUR V0, [X31 + 0x4C]
	0x03A59300 LDR V1, [X31 + 0x4]
	0x03A59304 ADD X0, X31, 0x20
	0x03A59308 FMOV S2, 1
	0x03A5930C STUR V0, [X20 + 0x2C]
	0x03A59310 STR V1, [X20 + 0x2]
	0x03A59314 FMOV S0, 1
	0x03A59318 FMOV S1, 1
	0x03A5931C FMOV S3, 1
	0x03A59320 MOV X1, X31
	0x03A59324 STP X31, X31, [X31 + 0x20]
	0x03A59328 STR W31, [X31 + 0x38]
	0x03A5932C STR X31, [X31 + 0x30]
	0x03A59330 BL 0x3C00A84
	0x03A59334 LDUR V0, [X31 + 0x2C]
	0x03A59338 LDR V1, [X31 + 0x2]
	0x03A5933C STUR V0, [X31 + 0xC]
	0x03A59340 STR V1, [X31]
	0x03A59344 LDR W8, [X20 + 0x18]
	0x03A59348 CMP W8, 0x1
	0x03A5934C B.LS 0x3A59534
	0x03A59350 LDUR V0, [X31 + 0xC]
	0x03A59354 LDR V1, [X31]
	0x03A59358 STUR V0, [X20 + 0x48]
	0x03A5935C STUR V1, [X20 + 0x3C]
	0x03A59360 LDR X0, [X24]
	0x03A59364 STR D8, [X31 + 0x208]
	0x03A59368 BL 0x1C16F10
	0x03A5936C FMOV S0, W31
	0x03A59370 ADD X3, X31, 0x208
	0x03A59374 MOV X1, X20
	0x03A59378 MOV W2, W31
	0x03A5937C MOV X4, X31
	0x03A59380 MOV X21, X0
	0x03A59384 BL 0x39ECD2C
	0x03A59388 LDR X0, [X23]
	0x03A5938C BL 0x1C16F10
	0x03A59390 MOV X1, X21
	0x03A59394 MOV W2, W31
	0x03A59398 MOV X3, X31
	0x03A5939C MOV X20, X0
	0x03A593A0 BL 0x39ED3F0
	0x03A593A4 STR X20, [X19 + 0x50]
	0x03A593A8 LDR X0, [X22]
	0x03A593AC MOV W1, W31
	0x03A593B0 BL 0x1C16D6C
	0x03A593B4 MOV X20, X0
	0x03A593B8 LDR X0, [X24]
	0x03A593BC STR D8, [X31 + 0x208]
	0x03A593C0 BL 0x1C16F10
	0x03A593C4 FMOV S0, 0.5
	0x03A593C8 ADD X3, X31, 0x208
	0x03A593CC MOVZ W2, 0x1
	0x03A593D0 MOV X1, X20
	0x03A593D4 MOV X4, X31
	0x03A593D8 MOV X21, X0
	0x03A593DC BL 0x39ECD2C
	0x03A593E0 LDR X0, [X23]
	0x03A593E4 BL 0x1C16F10
	0x03A593E8 MOV X1, X21
	0x03A593EC MOV W2, W31
	0x03A593F0 MOV X3, X31
	0x03A593F4 MOV X20, X0
	0x03A593F8 BL 0x39ED3F0
	0x03A593FC STR X20, [X19 + 0x58]
	0x03A59400 LDR X0, [X22]
	0x03A59404 MOV W1, W31
	0x03A59408 BL 0x1C16D6C
	0x03A5940C MOV X20, X0
	0x03A59410 LDR X0, [X24]
	0x03A59414 STR D8, [X31 + 0x208]
	0x03A59418 BL 0x1C16F10
	0x03A5941C FMOV S0, 0.5
	0x03A59420 ADD X3, X31, 0x208
	0x03A59424 MOVZ W2, 0x1
	0x03A59428 MOV X1, X20
	0x03A5942C MOV X4, X31
	0x03A59430 MOV X21, X0
	0x03A59434 BL 0x39ECD2C
	0x03A59438 LDR X0, [X23]
	0x03A5943C BL 0x1C16F10
	0x03A59440 MOV X1, X21
	0x03A59444 MOV W2, W31
	0x03A59448 MOV X3, X31
	0x03A5944C MOV X20, X0
	0x03A59450 BL 0x39ED3F0
	0x03A59454 STR X20, [X19 + 0x60]
	0x03A59458 LDR X0, [X22]
	0x03A5945C MOV W1, W31
	0x03A59460 BL 0x1C16D6C
	0x03A59464 MOV X20, X0
	0x03A59468 LDR X0, [X24]
	0x03A5946C STR D8, [X31 + 0x208]
	0x03A59470 BL 0x1C16F10
	0x03A59474 FMOV S0, 0.5
	0x03A59478 ADD X3, X31, 0x208
	0x03A5947C MOV X1, X20
	0x03A59480 MOV W2, W31
	0x03A59484 MOV X4, X31
	0x03A59488 MOV X21, X0
	0x03A5948C BL 0x39ECD2C
	0x03A59490 LDR X0, [X23]
	0x03A59494 BL 0x1C16F10
	0x03A59498 MOV X1, X21
	0x03A5949C MOV W2, W31
	0x03A594A0 MOV X3, X31
	0x03A594A4 MOV X20, X0
	0x03A594A8 BL 0x39ED3F0
	0x03A594AC STR X20, [X19 + 0x68]
	0x03A594B0 LDR X0, [X22]
	0x03A594B4 MOV W1, W31
	0x03A594B8 BL 0x1C16D6C
	0x03A594BC MOV X20, X0
	0x03A594C0 LDR X0, [X24]
	0x03A594C4 STR D8, [X31 + 0x208]
	0x03A594C8 BL 0x1C16F10
	0x03A594CC FMOV S0, 0.5
	0x03A594D0 ADD X3, X31, 0x208
	0x03A594D4 MOV X1, X20
	0x03A594D8 MOV W2, W31
	0x03A594DC MOV X4, X31
	0x03A594E0 MOV X21, X0
	0x03A594E4 BL 0x39ECD2C
	0x03A594E8 LDR X0, [X23]
	0x03A594EC BL 0x1C16F10
	0x03A594F0 MOV X1, X21
	0x03A594F4 MOV W2, W31
	0x03A594F8 MOV X3, X31
	0x03A594FC MOV X20, X0
	0x03A59500 BL 0x39ED3F0
	0x03A59504 MOV X0, X19
	0x03A59508 MOV X1, X31
	0x03A5950C STR X20, [X19 + 0x70]
	0x03A59510 BL 0x39F05AC
	0x03A59514 ADD X31, X31, 0x210
	0x03A59518 LDP X20, X19, [X31 + 0x40]
	0x03A5951C LDP X22, X21, [X31 + 0x30]
	0x03A59520 LDP X24, X23, [X31 + 0x20]
	0x03A59524 LDP X30, X25, [X31 + 0x10]
	0x03A59528 LDR X29, [X31 + 0x8]
	0x03A5952C LDR V8, [X31], #0x50
	0x03A59530 RET
	0x03A59534 BL 0x1C16F28
	0x03A59538 BL 0x1C16F20
	0x03A5953C STP X30, X19, [X31 - 0x10]!
	0x03A59540 MOV X19, X0
	0x03A59544 LDR X0, [X0 + 0x40]
	0x03A59548 CBZ X0, 0x3A5957C
	0x03A5954C LDR X8, [X0]
	0x03A59550 LDR X9, [X8 + 0x218]
	0x03A59554 LDR X1, [X8 + 0x220]
	0x03A59558 BLR X9
	0x03A5955C FCMP S0, 0x0
	0x03A59560 B.LE 0x3A59570
	0x03A59564 MOV X0, X19
	0x03A59568 LDP X30, X19, [X31], #0x10
	0x03A5956C B 0x3A59580
	0x03A59570 MOV W0, W31
	0x03A59574 LDP X30, X19, [X31], #0x10
	0x03A59578 RET
	0x03A5957C BL 0x1C16F20
	0x03A59580 STP X30, X21, [X31 - 0x20]!
	0x03A59584 STP X20, X19, [X31 + 0x10]
	0x03A59588 ADRP X21, 0x989000
	0x03A5958C ADRP X20, 0x6C3000
	0x03A59590 LDRB W8, [X21 + 0x1FB]
	0x03A59594 LDR X20, [X20 + 0x8A8]
	0x03A59598 MOV X19, X0
	0x03A5959C TBNZ X8, 0x0, 0x3A595E4
	0x03A595A0 ADRP X0, 0x6FA000
	0x03A595A4 LDR X0, [X0 + 0x90]
	0x03A595A8 BL 0x1C16CF4
	0x03A595AC ADRP X0, 0x69A000
	0x03A595B0 LDR X0, [X0 + 0x598]
	0x03A595B4 BL 0x1C16CF4
	0x03A595B8 ADRP X0, 0x69C000
	0x03A595BC LDR X0, [X0 + 0x130]
	0x03A595C0 BL 0x1C16CF4
	0x03A595C4 ADRP X0, 0x6C4000
	0x03A595C8 LDR X0, [X0 + 0x250]
	0x03A595CC BL 0x1C16CF4
	0x03A595D0 ADRP X0, 0x6C3000
	0x03A595D4 LDR X0, [X0 + 0x8A8]
	0x03A595D8 BL 0x1C16CF4
	0x03A595DC MOVZ W8, 0x1
	0x03A595E0 STRB W8, [X21 + 0x1FB]
	0x03A595E4 LDR X0, [X20]
	0x03A595E8 ADRP X21, 0x69A000
	0x03A595EC LDR W8, [X0 + 0xE0]
	0x03A595F0 LDR X21, [X21 + 0x598]
	0x03A595F4 CBNZ W8, 0x3A595FC
	0x03A595F8 BL 0x1C16DFC
	0x03A595FC MOV X0, X31
	0x03A59600 BL 0x3A8AB60
	0x03A59604 LDR X8, [X21]
	0x03A59608 MOV X20, X0
	0x03A5960C LDR W9, [X8 + 0xE0]
	0x03A59610 CBNZ W9, 0x3A5961C
	0x03A59614 MOV X0, X8
	0x03A59618 BL 0x1C16DFC
	0x03A5961C MOV X0, X20
	0x03A59620 MOV X1, X31
	0x03A59624 MOV X2, X31
	0x03A59628 BL 0x3C3883C
	0x03A5962C TBNZ X0, 0x0, 0x3A597B8
	0x03A59630 LDR X0, [X19 + 0x38]
	0x03A59634 CBZ X0, 0x3A597CC
	0x03A59638 LDR X8, [X0]
	0x03A5963C LDR X9, [X8 + 0x218]
	0x03A59640 LDR X1, [X8 + 0x220]
	0x03A59644 BLR X9
	0x03A59648 LDR X8, [X21]
	0x03A5964C MOV X21, X0
	0x03A59650 LDR W9, [X8 + 0xE0]
	0x03A59654 CBNZ W9, 0x3A59660
	0x03A59658 MOV X0, X8
	0x03A5965C BL 0x1C16DFC
	0x03A59660 MOV X0, X21
	0x03A59664 MOV X1, X31
	0x03A59668 MOV X2, X31
	0x03A5966C BL 0x3C3883C
	0x03A59670 TBNZ X0, 0x0, 0x3A597B8
	0x03A59674 CBZ X20, 0x3A597CC
	0x03A59678 LDR X0, [X19 + 0x38]
	0x03A5967C CBZ X0, 0x3A597CC
	0x03A59680 LDR X8, [X0]
	0x03A59684 LDR W20, [X20 + 0x100]
	0x03A59688 LDR X9, [X8 + 0x218]
	0x03A5968C LDR X1, [X8 + 0x220]
	0x03A59690 BLR X9
	0x03A59694 CBZ X0, 0x3A597CC
	0x03A59698 LDR X8, [X0]
	0x03A5969C LDP X9, X1, [X8 + 0x1A8]
	0x03A596A0 BLR X9
	0x03A596A4 CMP W0, W20
	0x03A596A8 B.NE 0x3A597B8
	0x03A596AC LDR X0, [X19 + 0x38]
	0x03A596B0 CBZ X0, 0x3A597CC
	0x03A596B4 LDR X8, [X0]
	0x03A596B8 LDR X9, [X8 + 0x218]
	0x03A596BC LDR X1, [X8 + 0x220]
	0x03A596C0 BLR X9
	0x03A596C4 CBZ X0, 0x3A597B8
	0x03A596C8 ADRP X8, 0x6C4000
	0x03A596CC LDR X8, [X8 + 0x250]
	0x03A596D0 MOV X19, X0
	0x03A596D4 LDR X9, [X8]
	0x03A596D8 LDR X8, [X0]
	0x03A596DC CMP X8, X9
	0x03A596E0 B.EQ 0x3A5975C
	0x03A596E4 ADRP X9, 0x69C000
	0x03A596E8 LDR X9, [X9 + 0x130]
	0x03A596EC LDRB W11, [X8 + 0x130]
	0x03A596F0 LDR X9, [X9]
	0x03A596F4 LDRB W10, [X9 + 0x130]
	0x03A596F8 CMP W11, W10
	0x03A596FC B.CC 0x3A597B8
	0x03A59700 LDR X8, [X8 + 0xC8]
	0x03A59704 ADD X8, X8, X10, 0x3, LSL
	0x03A59708 LDUR X8, [X8 - 0x8]
	0x03A5970C CMP X8, X9
	0x03A59710 CSEL X19, X19, X31, EQ
	0x03A59714 CBZ X19, 0x3A597B8
	0x03A59718 LDR X8, [X19]
	0x03A5971C MOV X0, X19
	0x03A59720 LDP X9, X1, [X8 + 0x1C8]
	0x03A59724 BLR X9
	0x03A59728 CMP W0, 0x2
	0x03A5972C B.NE 0x3A597B8
	0x03A59730 LDR X8, [X19]
	0x03A59734 MOV X0, X19
	0x03A59738 LDP X9, X1, [X8 + 0x188]
	0x03A5973C BLR X9
	0x03A59740 MUL W8, W20, W20
	0x03A59744 CMP W0, W8
	0x03A59748 B.NE 0x3A597B8
	0x03A5974C MOV X0, X19
	0x03A59750 MOV X1, X31
	0x03A59754 BL 0x3C202A4
	0x03A59758 B 0x3A597B0
	0x03A5975C LDP X8, X1, [X9 + 0x188]
	0x03A59760 MOV X0, X19
	0x03A59764 BLR X8
	0x03A59768 MUL W8, W20, W20
	0x03A5976C CMP W0, W8
	0x03A59770 B.NE 0x3A597B8
	0x03A59774 LDR X8, [X19]
	0x03A59778 MOV X0, X19
	0x03A5977C LDP X9, X1, [X8 + 0x178]
	0x03A59780 BLR X9
	0x03A59784 ADRP X8, 0x6FA000
	0x03A59788 LDR X8, [X8 + 0x90]
	0x03A5978C MOV W19, W0
	0x03A59790 LDR X8, [X8]
	0x03A59794 LDR W9, [X8 + 0xE0]
	0x03A59798 CBNZ W9, 0x3A597A4
	0x03A5979C MOV X0, X8
	0x03A597A0 BL 0x1C16DFC
	0x03A597A4 MOV W0, W19
	0x03A597A8 MOV X1, X31
	0x03A597AC BL 0x3C61964
	0x03A597B0 EOR W8, W0, 0x1
	0x03A597B4 B 0x3A597BC
	0x03A597B8 MOV W8, W31
	0x03A597BC LDP X20, X19, [X31 + 0x10]
	0x03A597C0 AND W0, W8, 0x1
	0x03A597C4 LDP X30, X21, [X31], #0x20
	0x03A597C8 RET
	0x03A597CC BL 0x1C16F20
	0x03A597D0 MOVZ W0, 0x1
	0x03A597D4 RET
	0x03A597D8 STR X30, [X31 - 0x30]!
	0x03A597DC STP X22, X21, [X31 + 0x10]
	0x03A597E0 STP X20, X19, [X31 + 0x20]
	0x03A597E4 ADRP X20, 0x989000
	0x03A597E8 ADRP X22, 0x6FD000
	0x03A597EC ADRP X21, 0x6FD000
	0x03A597F0 LDRB W8, [X20 + 0x1FC]
	0x03A597F4 LDR X22, [X22 + 0xB8]
	0x03A597F8 LDR X21, [X21 + 0xA8]
	0x03A597FC MOV X19, X0
	0x03A59800 TBNZ X8, 0x0, 0x3A59824
	0x03A59804 ADRP X0, 0x6FD000
	0x03A59808 LDR X0, [X0 + 0xA8]
	0x03A5980C BL 0x1C16CF4
	0x03A59810 ADRP X0, 0x6FD000
	0x03A59814 LDR X0, [X0 + 0xB8]
	0x03A59818 BL 0x1C16CF4
	0x03A5981C MOVZ W8, 0x1
	0x03A59820 STRB W8, [X20 + 0x1FC]
	0x03A59824 LDR X0, [X22]
	0x03A59828 BL 0x1C16F10
	0x03A5982C MOV X1, X31
	0x03A59830 MOV W2, W31
	0x03A59834 MOV X3, X31
	0x03A59838 MOV X20, X0
	0x03A5983C BL 0x39F3994
	0x03A59840 STR X20, [X19 + 0x38]
	0x03A59844 LDR X0, [X21]
	0x03A59848 BL 0x1C16F10
	0x03A5984C FMOV S0, W31
	0x03A59850 FMOV S1, W31
	0x03A59854 FMOV S2, 1
	0x03A59858 MOV W1, W31
	0x03A5985C MOV X2, X31
	0x03A59860 MOV X20, X0
	0x03A59864 BL 0x39F30E4
	0x03A59868 STR X20, [X19 + 0x40]
	0x03A5986C MOV X0, X19
	0x03A59870 LDP X20, X19, [X31 + 0x20]
	0x03A59874 LDP X22, X21, [X31 + 0x10]
	0x03A59878 MOV X1, X31
	0x03A5987C LDR X30, [X31], #0x30
	0x03A59880 B 0x39F05AC
	0x03A59884 STP X30, X19, [X31 - 0x10]!
	0x03A59888 MOV X19, X0
	0x03A5988C LDR X0, [X0 + 0x38]
	0x03A59890 CBZ X0, 0x3A59900
	0x03A59894 LDR X8, [X0]
	0x03A59898 LDR X9, [X8 + 0x218]
	0x03A5989C LDR X1, [X8 + 0x220]
	0x03A598A0 BLR X9
	0x03A598A4 CBZ W0, 0x3A598F8
	0x03A598A8 MOV X0, X31
	0x03A598AC BL 0x3C3BB6C
	0x03A598B0 CMP W0, 0x23
	0x03A598B4 B.LT 0x3A598EC
	0x03A598B8 LDR X0, [X19 + 0x38]
	0x03A598BC CBZ X0, 0x3A59900
	0x03A598C0 LDR X8, [X0]
	0x03A598C4 LDR X9, [X8 + 0x218]
	0x03A598C8 LDR X1, [X8 + 0x220]
	0x03A598CC BLR X9
	0x03A598D0 CMP W0, 0x1
	0x03A598D4 B.NE 0x3A598F4
	0x03A598D8 MOV X0, X31
	0x03A598DC BL 0x3C3BDEC

ISIL:
	001 Move [X31-80], D9
	002 Move [X31-72], D8
	003 Move [X31+16], X29
	004 Move [X31+32], X30
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Subtract X31, X31, 1344
	011 Move X19, X1
	012 Move X20, X0
	013 Call MotionVectorsPersistentData.GetXRMultiPassId, X0, X1
	014 Move X8, [X20+40]
	015 Compare X8, 0
	016 JumpIfEqual {489}
	017 Move W9, [X8+24]
	018 Move W21, W0
	019 NotImplemented "Instruction CMP not yet implemented."
	020 Move X9, [X20+32]
	021 Compare X9, 0
	022 JumpIfEqual {489}
	023 Move W10, [X9+24]
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move X22, W21
	026 Add X8, X8, X22
	027 Add X9, X9, X22
	028 Move V8, [X19+328]
	029 Move V9, [X8+32]
	030 Move W23, [X9+32]
	031 Move X0, X31
	032 Call Time.get_frameCount
	033 NotImplemented "Instruction FCMP not yet implemented."
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Move X0, [X19+376]
	036 Compare X0, 0
	037 JumpIfEqual {489}
	038 Move X1, X31
	039 Call XRPass.get_enabled, X0
	040 Move TEMP, X0
	041 And TEMP, TEMP, 1
	042 Compare TEMP, 1
	043 JumpIfNotEqual {185}
	044 Move X0, [X19+376]
	045 Compare X0, 0
	046 JumpIfEqual {489}
	047 Move X1, X31
	048 Call XRPass.get_singlePassEnabled, X0
	049 Move TEMP, X0
	050 And TEMP, TEMP, 1
	051 Compare TEMP, 1
	052 JumpIfNotEqual {185}
	053 Add X8, X31, 1280
	054 Move X0, X19
	055 Move W1, W31
	056 Move X2, X31
	057 Call CameraData.GetProjectionMatrixNoJitter, X0, X1
	058 Move V0, [X31+80]
	059 Move V1, [X31+81]
	060 Move V2, [X31+82]
	061 Move V3, [X31+83]
	062 Add X8, X31, 1280
	063 Add X0, X31, 1024
	064 Move W1, 1
	065 Move X2, X31
	066 Move [X31+64], V0
	067 Move [X31+65], V1
	068 Move [X31+66], V2
	069 Move [X31+67], V3
	070 Call GL.GetGPUProjectionMatrix, X0, X1
	071 Move V0, [X31+80]
	072 Move V1, [X31+81]
	073 Move V2, [X31+82]
	074 Move V3, [X31+83]
	075 Add X8, X31, 1280
	076 Move X0, X19
	077 Move W1, W31
	078 Move X2, X31
	079 Move [X31+72], V0
	080 Move [X31+73], V1
	081 Move [X31+74], V2
	082 Move [X31+75], V3
	083 Call CameraData.GetViewMatrix, X0, X1
	084 Move V0, [X31+80]
	085 Move V1, [X31+81]
	086 Move V2, [X31+82]
	087 Move V3, [X31+83]
	088 Add X8, X31, 1216
	089 Move [X31+896], V0
	090 Move [X31+904], V1
	091 Move V0, [X31+72]
	092 Move V1, [X31+73]
	093 Move [X31+928], V2
	094 Move [X31+936], V3
	095 Move V2, [X31+74]
	096 Move V3, [X31+75]
	097 Add X0, X31, 960
	098 Add X1, X31, 896
	099 Move X2, X31
	100 Move [X31+960], V0
	101 Move [X31+968], V1
	102 Move [X31+992], V2
	103 Move [X31+1000], V3
	104 Call Matrix4x4.op_Multiply, X0, X1
	105 Move V0, [X31+76]
	106 Move V1, [X31+77]
	107 Move V2, [X31+78]
	108 Move V3, [X31+79]
	109 Add X8, X31, 1216
	110 Move W1, 1
	111 Move X0, X19
	112 Move X2, X31
	113 Move [X31+80], V0
	114 Move [X31+81], V1
	115 Move [X31+82], V2
	116 Move [X31+83], V3
	117 Call CameraData.GetProjectionMatrixNoJitter, X0, X1
	118 Move V0, [X31+76]
	119 Move V1, [X31+77]
	120 Move V2, [X31+78]
	121 Move V3, [X31+79]
	122 Add X8, X31, 1216
	123 Add X0, X31, 832
	124 Move W1, 1
	125 Move X2, X31
	126 Move [X31+832], V0
	127 Move [X31+840], V1
	128 Move [X31+864], V2
	129 Move [X31+872], V3
	130 Call GL.GetGPUProjectionMatrix, X0, X1
	131 Move V0, [X31+76]
	132 Move V1, [X31+77]
	133 Move V2, [X31+78]
	134 Move V3, [X31+79]
	135 Add X8, X31, 1216
	136 Move W1, 1
	137 Move X0, X19
	138 Move X2, X31
	139 Move [X31+68], V0
	140 Move [X31+69], V1
	141 Move [X31+70], V2
	142 Move [X31+71], V3
	143 Call CameraData.GetViewMatrix, X0, X1
	144 Move V0, [X31+76]
	145 Move V1, [X31+77]
	146 Move V2, [X31+78]
	147 Move V3, [X31+79]
	148 Add X8, X31, 768
	149 Move [X31+640], V0
	150 Move [X31+648], V1
	151 Move V0, [X31+68]
	152 Move V1, [X31+69]
	153 Move [X31+672], V2
	154 Move [X31+680], V3
	155 Move V2, [X31+70]
	156 Move V3, [X31+71]
	157 Add X0, X31, 704
	158 Add X1, X31, 640
	159 Move X2, X31
	160 Move [X31+704], V0
	161 Move [X31+712], V1
	162 Move [X31+736], V2
	163 Move [X31+744], V3
	164 Call Matrix4x4.op_Multiply, X0, X1
	165 Move V0, [X31+768]
	166 Move V1, [X31+784]
	167 Move V2, [X31+800]
	168 Move V3, [X31+816]
	169 NotImplemented "Instruction FCMP not yet implemented."
	170 Move [X31+76], V0
	171 Move [X31+77], V1
	172 Move [X31+78], V2
	173 Move [X31+79], V3
	174 Move X8, [X20+24]
	175 Move V0, [X31+80]
	176 Move V1, [X31+81]
	177 Move V2, [X31+82]
	178 Move V3, [X31+83]
	179 Move [X31+72], V0
	180 Move [X31+73], V1
	181 Move [X31+74], V2
	182 Move [X31+75], V3
	183 Compare X8, 0
	184 JumpIfNotEqual {338}
	185 Add X8, X31, 1280
	186 Move X0, X19
	187 Move W1, W31
	188 Move X2, X31
	189 Call CameraData.GetProjectionMatrixNoJitter, X0, X1
	190 Move V0, [X31+80]
	191 Move V1, [X31+81]
	192 Move V2, [X31+82]
	193 Move V3, [X31+83]
	194 Add X8, X31, 1280
	195 Add X0, X31, 256
	196 Move W1, 1
	197 Move X2, X31
	198 Move [X31+256], V0
	199 Move [X31+264], V1
	200 Move [X31+288], V2
	201 Move [X31+296], V3
	202 Call GL.GetGPUProjectionMatrix, X0, X1
	203 Move V0, [X31+80]
	204 Move V1, [X31+81]
	205 Move V2, [X31+82]
	206 Move V3, [X31+83]
	207 Add X8, X31, 1280
	208 Move X0, X19
	209 Move W1, W31
	210 Move X2, X31
	211 Move [X31+76], V0
	212 Move [X31+77], V1
	213 Move [X31+78], V2
	214 Move [X31+79], V3
	215 Call CameraData.GetViewMatrix, X0, X1
	216 Move V0, [X31+80]
	217 Move V1, [X31+81]
	218 Move V2, [X31+82]
	219 Move V3, [X31+83]
	220 Add X8, X31, 1152
	221 Move [X31+128], V0
	222 Move [X31+136], V1
	223 Move V0, [X31+76]
	224 Move V1, [X31+77]
	225 Move [X31+160], V2
	226 Move [X31+168], V3
	227 Move V2, [X31+78]
	228 Move V3, [X31+79]
	229 Add X0, X31, 192
	230 Add X1, X31, 128
	231 Move X2, X31
	232 Move [X31+192], V0
	233 Move [X31+200], V1
	234 Move [X31+224], V2
	235 Move [X31+232], V3
	236 Call Matrix4x4.op_Multiply, X0, X1
	237 Move V0, [X31+72]
	238 Move V1, [X31+73]
	239 Move V2, [X31+74]
	240 Move V3, [X31+75]
	241 Move [X31+80], V0
	242 Move [X31+81], V1
	243 Move [X31+82], V2
	244 Move [X31+83], V3
	245 Move X8, [X20+24]
	246 NotImplemented "Instruction FCMP not yet implemented."
	247 Move V0, [X31+80]
	248 Move V1, [X31+81]
	249 Move V2, [X31+82]
	250 Move V3, [X31+83]
	251 Move [X31+76], V0
	252 Move [X31+77], V1
	253 Move [X31+78], V2
	254 Move [X31+79], V3
	255 Compare X8, 0
	256 JumpIfNotEqual {273}
	257 Move X9, [X20+16]
	258 Compare X9, 0
	259 JumpIfEqual {489}
	260 Move W10, [X9+24]
	261 NotImplemented "Instruction CMP not yet implemented."
	262 Add X9, X9, X22
	263 Move V1, [X9+64]
	264 Move V0, [X9+80]
	265 Move V3, [X9+32]
	266 Move V2, [X9+48]
	267 Move [X31+79], V0
	268 Move [X31+78], V1
	269 Move [X31+77], V2
	270 Move [X31+76], V3
	271 Compare X8, 0
	272 JumpIfEqual {489}
	273 Move V0, [X31+76]
	274 Move V1, [X31+77]
	275 Move V2, [X31+78]
	276 Move V3, [X31+79]
	277 Move [X31+64], V0
	278 Move [X31+72], V1
	279 Move [X31+96], V2
	280 Move [X31+104], V3
	281 Move W9, [X8+24]
	282 NotImplemented "Instruction CMP not yet implemented."
	283 Move V0, [X31+96]
	284 Move V1, [X31+112]
	285 Move V2, [X31+64]
	286 Move V3, [X31+80]
	287 Add X8, X8, X22
	288 Move [X8+64], V0
	289 Move [X8+72], V1
	290 Move [X8+32], V2
	291 Move [X8+40], V3
	292 Move X8, [X20+16]
	293 Move V0, [X31+80]
	294 Move V1, [X31+81]
	295 Move V2, [X31+82]
	296 Move V3, [X31+83]
	297 Move [X31+72], V0
	298 Move [X31+73], V1
	299 Move [X31+74], V2
	300 Move [X31+75], V3
	301 Compare X8, 0
	302 JumpIfEqual {489}
	303 Move V0, [X31+72]
	304 Move V1, [X31+73]
	305 Move V2, [X31+74]
	306 Move V3, [X31+75]
	307 Move [X31], V0
	308 Move [X31+8], V1
	309 Move [X31+32], V2
	310 Move [X31+40], V3
	311 Move W9, [X8+24]
	312 NotImplemented "Instruction CMP not yet implemented."
	313 Move V0, [X31+32]
	314 Move V1, [X31+48]
	315 Move V2, [X31]
	316 Move V3, [X31+16]
	317 Add X8, X8, X22
	318 Move [X8+64], V0
	319 Move [X8+72], V1
	320 Move [X8+32], V2
	321 Move [X8+40], V3
	322 Move X9, [X20+16]
	323 Compare X9, 0
	324 JumpIfEqual {489}
	325 Move W10, [X9+24]
	326 Compare W10, 0
	327 JumpIfEqual {490}
	328 Move V1, [X9+64]
	329 Move V0, [X9+80]
	330 Move V3, [X9+32]
	331 Move V2, [X9+48]
	332 Move [X31+75], V0
	333 Move [X31+74], V1
	334 Move [X31+73], V2
	335 Move [X31+72], V3
	336 Compare X8, 0
	337 JumpIfEqual {489}
	338 Move V0, [X31+72]
	339 Move V1, [X31+73]
	340 Move V2, [X31+74]
	341 Move V3, [X31+75]
	342 Move [X31+576], V0
	343 Move [X31+584], V1
	344 Move [X31+608], V2
	345 Move [X31+616], V3
	346 Move W9, [X8+24]
	347 Compare W9, 0
	348 JumpIfEqual {490}
	349 Move V1, [X31+608]
	350 Move V0, [X31+624]
	351 Move V3, [X31+576]
	352 Move V2, [X31+592]
	353 NotImplemented "Instruction FCMP not yet implemented."
	354 Move [X8+64], V1
	355 Move [X8+72], V0
	356 Move [X8+32], V3
	357 Move [X8+40], V2
	358 Move X8, [X20+24]
	359 Move V0, [X31+76]
	360 Move V1, [X31+77]
	361 Move V2, [X31+78]
	362 Move V3, [X31+79]
	363 Move [X31+68], V0
	364 Move [X31+69], V1
	365 Move [X31+70], V2
	366 Move [X31+71], V3
	367 Compare X8, 0
	368 JumpIfNotEqual {384}
	369 Move X9, [X20+16]
	370 Compare X9, 0
	371 JumpIfEqual {489}
	372 Move W10, [X9+24]
	373 NotImplemented "Instruction CMP not yet implemented."
	374 Move V1, [X9+128]
	375 Move V0, [X9+144]
	376 Move V3, [X9+96]
	377 Move V2, [X9+112]
	378 Move [X31+71], V0
	379 Move [X31+70], V1
	380 Move [X31+69], V2
	381 Move [X31+68], V3
	382 Compare X8, 0
	383 JumpIfEqual {489}
	384 Move V0, [X31+68]
	385 Move V1, [X31+69]
	386 Move V2, [X31+70]
	387 Move V3, [X31+71]
	388 Move [X31+512], V0
	389 Move [X31+520], V1
	390 Move [X31+544], V2
	391 Move [X31+552], V3
	392 Move W9, [X8+24]
	393 NotImplemented "Instruction CMP not yet implemented."
	394 Move V1, [X31+544]
	395 Move V0, [X31+560]
	396 Move V3, [X31+512]
	397 Move V2, [X31+528]
	398 Move [X8+128], V1
	399 Move [X8+136], V0
	400 Move [X8+96], V3
	401 Move [X8+104], V2
	402 Move X8, [X20+16]
	403 Move V0, [X31+80]
	404 Move V1, [X31+81]
	405 Move V2, [X31+82]
	406 Move V3, [X31+83]
	407 Move [X31+768], V0
	408 Move [X31+776], V1
	409 Move [X31+800], V2
	410 Move [X31+808], V3
	411 Compare X8, 0
	412 JumpIfEqual {489}
	413 Move V0, [X31+768]
	414 Move V1, [X31+784]
	415 Move V2, [X31+800]
	416 Move V3, [X31+816]
	417 Move [X31+448], V0
	418 Move [X31+456], V1
	419 Move [X31+480], V2
	420 Move [X31+488], V3
	421 Move W9, [X8+24]
	422 Compare W9, 0
	423 JumpIfEqual {490}
	424 Move V1, [X31+480]
	425 Move V0, [X31+496]
	426 Move V3, [X31+448]
	427 Move V2, [X31+464]
	428 Move [X8+64], V1
	429 Move [X8+72], V0
	430 Move [X8+32], V3
	431 Move [X8+40], V2
	432 Move X8, [X20+16]
	433 Move V0, [X31+76]
	434 Move V1, [X31+77]
	435 Move V2, [X31+78]
	436 Move V3, [X31+79]
	437 Move [X31+384], V0
	438 Move [X31+392], V1
	439 Move [X31+416], V2
	440 Move [X31+424], V3
	441 Compare X8, 0
	442 JumpIfEqual {489}
	443 Move V0, [X31+384]
	444 Move V1, [X31+400]
	445 Move V2, [X31+416]
	446 Move V3, [X31+432]
	447 Move [X31+320], V0
	448 Move [X31+328], V1
	449 Move [X31+352], V2
	450 Move [X31+360], V3
	451 Move W9, [X8+24]
	452 NotImplemented "Instruction CMP not yet implemented."
	453 Move V1, [X31+352]
	454 Move V0, [X31+368]
	455 Move V3, [X31+320]
	456 Move V2, [X31+336]
	457 Move [X8+128], V1
	458 Move [X8+136], V0
	459 Move [X8+96], V3
	460 Move [X8+104], V2
	461 Move X23, [X20+32]
	462 Move X0, X31
	463 Call Time.get_frameCount
	464 Compare X23, 0
	465 JumpIfEqual {489}
	466 Move W8, [X23+24]
	467 NotImplemented "Instruction CMP not yet implemented."
	468 Add X8, X23, X22
	469 Move [X8+32], W0
	470 Move X8, [X20+40]
	471 Compare X8, 0
	472 JumpIfEqual {489}
	473 Move W9, [X8+24]
	474 NotImplemented "Instruction CMP not yet implemented."
	475 Move V0, [X19+328]
	476 Add X8, X8, X22
	477 Move [X8+32], S0
	478 Add X31, X31, 1344
	479 Move X20, [X31+64]
	480 Move X19, [X31+72]
	481 Move X22, [X31+48]
	482 Move X21, [X31+56]
	483 Move X30, [X31+32]
	484 Move X23, [X31+40]
	485 Move X29, [X31+16]
	486 Move D9, [X31+80]
	487 Move D8, [X31+88]
	488 Return 
	489 Call 0x1C17F20
	490 Call 0x1C17F28

