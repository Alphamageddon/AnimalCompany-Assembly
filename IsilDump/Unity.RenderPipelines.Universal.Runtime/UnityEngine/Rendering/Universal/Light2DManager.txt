Type: UnityEngine.Rendering.Universal.Light2DManager

Method: System.Collections.Generic.List`1<UnityEngine.Rendering.Universal.Light2D> get_lights()

Disassembly:
	0x03A178B0 LDR X0, [X0 + 0x168]
	0x03A178B4 BL 0x1C16CF4
	0x03A178B8 ADRP X0, 0x73D000
	0x03A178BC LDR X0, [X0 + 0x3F0]
	0x03A178C0 BL 0x1C16CF4
	0x03A178C4 MOVZ W8, 0x1
	0x03A178C8 STRB W8, [X23 + 0xFCC]
	0x03A178CC LDR X0, [X24]
	0x03A178D0 BL 0x1C16F10
	0x03A178D4 LDR X1, [X21]
	0x03A178D8 MOV X21, X0
	0x03A178DC BL 0x2FE3E58
	0x03A178E0 LDR X0, [X22]
	0x03A178E4 BL 0x1C16F10
	0x03A178E8 LDR X1, [X19]
	0x03A178EC MOV X19, X0
	0x03A178F0 BL 0x30C8E58
	0x03A178F4 CBZ X20, 0x3A17BB8
	0x03A178F8 LDR X8, [X20 + 0x18]
	0x03A178FC ADRP X23, 0xFFFFFFFFFD0D3000
	0x03A17900 CMP W8, 0x1
	0x03A17904 B.LT 0x3A17A10

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x9CB000
	005 Move X19, 0x73E000
	006 Move W8, [X20+4032]
	007 Move X19, [X19+1176]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x73E000
	013 Move X0, [X0+1176]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+4032], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {23}
	021 Call 0x1C17DFC
	022 Move X0, [X19]
	023 Move X8, [X0+184]
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X0, [X8+8]
	027 Move X30, [X31+32]
	028 Return X0

Method: System.Void RegisterLight(UnityEngine.Rendering.Universal.Light2D light)

Disassembly:
	0x03A164CC BL 0x3EB1AD0
	0x03A164D0 LDR X23, [X0]
	0x03A164D4 BL 0x3EB1AE0
	0x03A164D8 MOV W20, W31
	0x03A164DC B 0x3A1644C
	0x03A164E0 MOV X21, X31
	0x03A164E4 MOVZ W20, 0xC
	0x03A164E8 B 0x3A164F0
	0x03A164EC MOV X21, X31
	0x03A164F0 ADRP X8, 0x73E000
	0x03A164F4 LDR X8, [X8 + 0x578]
	0x03A164F8 LDR X1, [X8]
	0x03A164FC ADD X0, X31, 0x30
	0x03A16500 BL 0x2BC434C
	0x03A16504 CBNZ X21, 0x3A16618
	0x03A16508 CMP W20, 0xC
	0x03A1650C B.EQ 0x3A1631C
	0x03A16510 CBZ W20, 0x3A1631C
	0x03A16514 B 0x3A16598
	0x03A16518 MOV X23, X31
	0x03A1651C LDR X1, [X28]
	0x03A16520 ADD X0, X31, 0x70
	0x03A16524 BL 0x2BC434C
	0x03A16528 CBZ X23, 0x3A16578
	0x03A1652C B 0x3A1662C
	0x03A16530 MOV X0, X23
	0x03A16534 BL 0x1C16F18
	0x03A16538 B 0x3A16634
	0x03A1653C BL 0x1C16F20
	0x03A16540 B 0x3A16634
	0x03A16544 BL 0x1C16F20
	0x03A16548 B 0x3A16634
	0x03A1654C MOV X22, X1
	0x03A16550 MOV X20, X0
	0x03A16554 B 0x3A1651C
	0x03A16558 B 0x3A16570
	0x03A1655C B 0x3A16570
	0x03A16560 B 0x3A16570
	0x03A16564 B 0x3A16570
	0x03A16568 B 0x3A16570
	0x03A1656C B 0x3A16570
	0x03A16570 MOV X22, X1
	0x03A16574 MOV X20, X0
	0x03A16578 CMP W22, 0x1
	0x03A1657C B.NE 0x3A165DC
	0x03A16580 MOV X0, X20
	0x03A16584 BL 0x3EB1AD0
	0x03A16588 LDR X21, [X0]
	0x03A1658C BL 0x3EB1AE0
	0x03A16590 MOV W20, W31
	0x03A16594 B 0x3A164F0
	0x03A16598 ADRP X8, 0x73E000
	0x03A1659C LDR X8, [X8 + 0x580]
	0x03A165A0 ADD X0, X31, 0x50
	0x03A165A4 LDR X1, [X8]
	0x03A165A8 BL 0x2BC434C
	0x03A165AC LDP X20, X19, [X31 + 0x120]
	0x03A165B0 LDP X22, X21, [X31 + 0x110]
	0x03A165B4 LDP X24, X23, [X31 + 0x100]
	0x03A165B8 LDP X26, X25, [X31 + 0xF0]
	0x03A165BC LDP X28, X27, [X31 + 0xE0]
	0x03A165C0 LDP X29, X30, [X31 + 0xD0]
	0x03A165C4 LDP D9, D8, [X31 + 0xC0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x9CC000
	006 Move X20, 0x73F000
	007 Move W8, [X21+4033]
	008 Move X20, [X20+1176]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x73F000
	015 Move X0, [X0+1176]
	016 Call 0x1C17CF4
	017 Move X0, 0x73F000
	018 Move X0, [X0+1336]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+4033], W8
	022 Move X0, [X20]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 Move X21, 0x9CD000
	028 Move W8, [X21+13]
	029 Compare W8, 0
	030 JumpIfNotEqual {36}
	031 Move X0, 0x73F000
	032 Move X0, [X0+1176]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X21+13], W8
	036 Move X0, [X20]
	037 Move W8, [X0+224]
	038 Compare W8, 0
	039 JumpIfNotEqual {42}
	040 Call 0x1C17DFC
	041 Move X0, [X20]
	042 Move X8, [X0+184]
	043 Move X0, [X8+8]
	044 Compare X0, 0
	045 JumpIfEqual {74}
	046 Move X9, 0x73F000
	047 Move X9, [X9+1336]
	048 Move W10, [X0+28]
	049 Move X8, [X0+16]
	050 Move X9, [X9]
	051 Add W10, W10, 1
	052 Move [X0+28], W10
	053 Compare X8, 0
	054 JumpIfEqual {74}
	055 NotImplemented "Instruction LDRSW not yet implemented."
	056 Move W11, [X8+24]
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Add W9, W10, 1
	059 Add X8, X8, X10
	060 Move [X0+24], W9
	061 Move [X8+32], X19
	062 Move X8, [X9+32]
	063 Move X1, X19
	064 Move X8, [X8+192]
	065 Move X2, [X8+112]
	066 Call List`1<Object>.AddWithResize, X0, X1
	067 Move X0, X19
	068 Move X20, [X31+16]
	069 Move X19, [X31+24]
	070 Move X30, [X31+32]
	071 Move X21, [X31+40]
	072 Call Light2DManager.ErrorIfDuplicateGlobalLight, X0
	073 Return 
	074 Call 0x1C17F20

Method: System.Void DeregisterLight(UnityEngine.Rendering.Universal.Light2D light)

Disassembly:
	0x03A1661C BL 0x1C16F18
	0x03A16620 BL 0x1C16F20
	0x03A16624 BL 0x1C16F20
	0x03A16628 BL 0x1C16F20
	0x03A1662C MOV X0, X23
	0x03A16630 BL 0x1C16F18
	0x03A16634 BL 0x1990590
	0x03A16638 MOV X22, X1
	0x03A1663C MOV X20, X0
	0x03A16640 B 0x3A165E0
	0x03A16644 B 0x3A16700
	0x03A16648 B 0x3A16700
	0x03A1664C B 0x3A16660
	0x03A16650 B 0x3A16660
	0x03A16654 B 0x3A16660
	0x03A16658 B 0x3A16700
	0x03A1665C B 0x3A16660
	0x03A16660 MOV X22, X1
	0x03A16664 MOV X20, X0
	0x03A16668 CMP W22, 0x1
	0x03A1666C B.NE 0x3A166A0
	0x03A16670 MOV X0, X20
	0x03A16674 BL 0x3EB1AD0
	0x03A16678 LDR X19, [X0]
	0x03A1667C BL 0x3EB1AE0
	0x03A16680 ADRP X8, 0x73E000
	0x03A16684 LDR X8, [X8 + 0x580]
	0x03A16688 ADD X0, X31, 0x50
	0x03A1668C LDR X1, [X8]
	0x03A16690 BL 0x2BC434C
	0x03A16694 CBZ X19, 0x3A165AC
	0x03A16698 MOV X0, X19
	0x03A1669C BL 0x1C16F18
	0x03A166A0 MOV X19, X31
	0x03A166A4 B 0x3A166AC
	0x03A166A8 MOV X20, X0
	0x03A166AC ADRP X8, 0x73E000
	0x03A166B0 LDR X8, [X8 + 0x580]
	0x03A166B4 LDR X1, [X8]
	0x03A166B8 ADD X0, X31, 0x50
	0x03A166BC BL 0x2BC434C
	0x03A166C0 CBZ X19, 0x3A16750
	0x03A166C4 MOV X0, X19
	0x03A166C8 BL 0x1C16F18

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x9CC000
	006 Move X20, 0x73F000
	007 Move W8, [X21+4034]
	008 Move X20, [X20+1176]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x73F000
	015 Move X0, [X0+1176]
	016 Call 0x1C17CF4
	017 Move X0, 0x73F000
	018 Move X0, [X0+1344]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+4034], W8
	022 Move X0, [X20]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 Move X21, 0x9CD000
	028 Move W8, [X21+13]
	029 Compare W8, 0
	030 JumpIfNotEqual {36}
	031 Move X0, 0x73F000
	032 Move X0, [X0+1176]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X21+13], W8
	036 Move X0, [X20]
	037 Move W8, [X0+224]
	038 Compare W8, 0
	039 JumpIfNotEqual {42}
	040 Call 0x1C17DFC
	041 Move X0, [X20]
	042 Move X8, [X0+184]
	043 Move X0, [X8+8]
	044 Compare X0, 0
	045 JumpIfEqual {56}
	046 Move X8, 0x73F000
	047 Move X8, [X8+1344]
	048 Move X1, X19
	049 Move X20, [X31+16]
	050 Move X19, [X31+24]
	051 Move X2, [X8]
	052 Move X30, [X31+32]
	053 Move X21, [X31+40]
	054 Call List`1<Object>.Remove, X0, X1
	055 Return 
	056 Call 0x1C17F20

Method: System.Void ErrorIfDuplicateGlobalLight(UnityEngine.Rendering.Universal.Light2D light)

Disassembly:
	0x03A14478 BL 0x2FE46FC
	0x03A1447C LDR X8, [X31 + 0x78]
	0x03A14480 ADD X19, X19, 0x1
	0x03A14484 ADD X27, X27, 0xC
	0x03A14488 CMP X8, X19
	0x03A1448C B.NE 0x3A14368
	0x03A14490 ADRP X8, 0x740000
	0x03A14494 LDR X8, [X8 + 0x3F0]
	0x03A14498 ADRP X19, 0x740000
	0x03A1449C ADRP X20, 0x740000
	0x03A144A0 LDR X0, [X8]
	0x03A144A4 LDR X19, [X19 + 0x3F8]
	0x03A144A8 LDR X20, [X20 + 0x510]
	0x03A144AC STR W31, [X31 + 0x138]
	0x03A144B0 BL 0x1C16F10
	0x03A144B4 LDR X1, [X19]
	0x03A144B8 MOV X25, X0
	0x03A144BC BL 0x301B7C4
	0x03A144C0 LDR X0, [X20]
	0x03A144C4 STR X25, [X31 + 0x130]
	0x03A144C8 BL 0x1C16F10
	0x03A144CC FMOV D0, 16.000000001862645
	0x03A144D0 MOV X27, X0
	0x03A144D4 BL 0x3A0F784
	0x03A144D8 CBZ X27, 0x3A14BE0
	0x03A144DC MOV X0, X27
	0x03A144E0 MOV X1, X26
	0x03A144E4 MOV W2, W31
	0x03A144E8 MOV W3, W31
	0x03A144EC BL 0x3A0F8F4
	0x03A144F0 CBZ X26, 0x3A14BE0
	0x03A144F4 ADRP X8, 0xFFFFFFFFFD0D6000
	0x03A144F8 LDR V9, [X8 + 0x18C]
	0x03A144FC LDR W2, [X26 + 0x18]
	0x03A14500 ADD X1, X31, 0x130
	0x03A14504 MOV X0, X27
	0x03A14508 FMUL S0, S8, S9
	0x03A1450C FCVT S0, S0
	0x03A14510 BL 0x3A11D74
	0x03A14514 CBZ X25, 0x3A14BE0
	0x03A14518 LDR W8, [X25 + 0x18]
	0x03A1451C CMP W8, 0x1
	0x03A14520 B.LT 0x3A14B68
	0x03A14524 ADRP X8, 0x740000
	0x03A14528 LDR X8, [X8 + 0x240]
	0x03A1452C MOV X0, X25
	0x03A14530 MOV W1, W31
	0x03A14534 LDR X2, [X8]
	0x03A14538 BL 0x301BCCC
	0x03A1453C CBZ X0, 0x3A14BE0
	0x03A14540 LDR W8, [X0 + 0x18]
	0x03A14544 ADRP X22, 0x740000
	0x03A14548 LDR X22, [X22 + 0x210]
	0x03A1454C MOV X27, X0
	0x03A14550 CMP W8, 0x1
	0x03A14554 LDR X8, [X31 + 0x78]
	0x03A14558 SXTW X20, W8
	0x03A1455C B.LT 0x3A145D8
	0x03A14560 ADRP X19, 0x6DF000
	0x03A14564 LDR X19, [X19 + 0x5A8]
	0x03A14568 MOV W28, W31
	0x03A1456C LDR X2, [X22]
	0x03A14570 ADD X8, X31, 0x1C0
	0x03A14574 MOV X0, X27
	0x03A14578 MOV W1, W28
	0x03A1457C BL 0x2FE4360
	0x03A14580 LDR X8, [X31 + 0x1C0]
	0x03A14584 ADDS X31, X8, 0x1
	0x03A14588 B.EQ 0x3A145C8
	0x03A1458C LDR X2, [X22]
	0x03A14590 ADD X8, X31, 0x1C0
	0x03A14594 MOV X0, X27
	0x03A14598 MOV W1, W28
	0x03A1459C BL 0x2FE4360
	0x03A145A0 LDR X0, [X19]
	0x03A145A4 LDR X29, [X31 + 0x1C0]
	0x03A145A8 LDR W8, [X0 + 0xE0]
	0x03A145AC CBNZ W8, 0x3A145B4
	0x03A145B0 BL 0x1C16DFC
	0x03A145B4 MOV X0, X20
	0x03A145B8 MOV X1, X29
	0x03A145BC MOV X2, X31
	0x03A145C0 BL 0x337EEA0
	0x03A145C4 MOV X20, X0
	0x03A145C8 LDR W8, [X27 + 0x18]
	0x03A145CC ADD W28, W28, 0x1
	0x03A145D0 CMP W28, W8
	0x03A145D4 B.LT 0x3A1456C
	0x03A145D8 ADD X2, X31, 0x138
	0x03A145DC MOV X0, X27
	0x03A145E0 MOV X1, X26
	0x03A145E4 BL 0x3A174C4
	0x03A145E8 CBZ X0, 0x3A14BE0
	0x03A145EC STR X20, [X31 + 0x28]
	0x03A145F0 ADRP X8, 0x740000

ISIL:
	001 Move [X31-96], X30
	002 Move [X31+16], X28
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X20, 0x9CE000
	013 Move W8, [X20+4035]
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {33}
	019 Move X0, 0x6E0000
	020 Move X0, [X0+2600]
	021 Call 0x1C17CF4
	022 Move X0, 0x741000
	023 Move X0, [X0+1176]
	024 Call 0x1C17CF4
	025 Move X0, 0x741000
	026 Move X0, [X0+1184]
	027 Call 0x1C17CF4
	028 Move X0, 0x741000
	029 Move X0, [X0+1192]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X20+4035], W8
	033 Move [X31+12], W31
	034 Compare X19, 0
	035 JumpIfEqual {111}
	036 Move W8, [X19+36]
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move X22, [X19+80]
	039 Compare X22, 0
	040 JumpIfEqual {111}
	041 Move X8, [X22+24]
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X25, 0x741000
	044 Move X26, 0x741000
	045 Move X27, 0x741000
	046 Move X28, 0x6E0000
	047 Move X25, [X25+1176]
	048 Move X26, [X26+1184]
	049 Move X27, [X27+1192]
	050 Move X28, [X28+2600]
	051 Move X23, X31
	052 And X8, X8, 0
	053 Add X24, X22, 32
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Move X0, [X25]
	056 Move W20, [X24]
	057 Move W21, [X19+40]
	058 Move W8, [X0+224]
	059 Compare W8, 0
	060 JumpIfNotEqual {62}
	061 Call 0x1C17DFC
	062 Move W0, W20
	063 Move W1, W21
	064 Call Light2DManager.ContainsDuplicateGlobalLight, X0, X1
	065 Move TEMP, X0
	066 And TEMP, TEMP, 1
	067 Compare TEMP, 1
	068 JumpIfNotEqual {95}
	069 Move W0, W20
	070 Move X1, X31
	071 Call SortingLayer.IDToName, X0
	072 Move W8, [X19+40]
	073 Move X20, X0
	074 Add X0, X31, 12
	075 Move X1, X31
	076 Move [X31+12], W8
	077 Call Int32.ToString, X0
	078 Move X8, [X26]
	079 Move X2, [X27]
	080 Move X3, X0
	081 Move X1, X20
	082 Move X0, X8
	083 Move X4, X31
	084 Call String.Concat, X0, X1, X2, X3
	085 Move X8, [X28]
	086 Move X20, X0
	087 Move W9, [X8+224]
	088 Compare W9, 0
	089 JumpIfNotEqual {92}
	090 Move X0, X8
	091 Call 0x1C17DFC
	092 Move X0, X20
	093 Move X1, X31
	094 Call Debug.LogError, X0
	095 Move W8, [X22+24]
	096 Add X23, X23, 1
	097 NotImplemented "Instruction CMP not yet implemented."
	098 Move X20, [X31+80]
	099 Move X19, [X31+88]
	100 Move X22, [X31+64]
	101 Move X21, [X31+72]
	102 Move X24, [X31+48]
	103 Move X23, [X31+56]
	104 Move X26, [X31+32]
	105 Move X25, [X31+40]
	106 Move X28, [X31+16]
	107 Move X27, [X31+24]
	108 Move X30, [X31+96]
	109 Return 
	110 Call 0x1C17F28
	111 Call 0x1C17F20

Method: System.Boolean GetGlobalColor(System.Int32 sortingLayerIndex, System.Int32 blendStyleIndex, out UnityEngine.Color color)

Disassembly:
	0x03A17B08 ADD X8, X31, 0x60
	0x03A17B0C MOV X0, X20
	0x03A17B10 MOV W1, W21
	0x03A17B14 BL 0x2FE4360
	0x03A17B18 CBZ X19, 0x3A17BB8
	0x03A17B1C LDR W11, [X19 + 0x1C]
	0x03A17B20 LDR X10, [X31 + 0x70]
	0x03A17B24 LDR X8, [X19 + 0x10]
	0x03A17B28 LDR X9, [X23]
	0x03A17B2C ADD W11, W11, 0x1
	0x03A17B30 STR W11, [X19 + 0x1C]
	0x03A17B34 CBZ X8, 0x3A17BB8
	0x03A17B38 LDRSW X11, [X19 + 0x18]
	0x03A17B3C LDR W12, [X8 + 0x18]
	0x03A17B40 SCVTF S0, X24
	0x03A17B44 SCVTF S1, X10
	0x03A17B48 FDIV S0, S0, S9
	0x03A17B4C CMP W11, W12
	0x03A17B50 FDIV S1, S1, S9
	0x03A17B54 B.CS 0x3A17B6C
	0x03A17B58 ADD W9, W11, 0x1
	0x03A17B5C ADD X8, X8, X11, 0x3, LSL
	0x03A17B60 STR W9, [X19 + 0x18]
	0x03A17B64 STP S0, S1, [X8 + 0x20]
	0x03A17B68 B 0x3A17B80
	0x03A17B6C LDR X8, [X9 + 0x20]
	0x03A17B70 MOV X0, X19
	0x03A17B74 LDR X8, [X8 + 0xC0]
	0x03A17B78 LDR X1, [X8 + 0x70]
	0x03A17B7C BL 0x30C9664
	0x03A17B80 LDR W8, [X20 + 0x18]
	0x03A17B84 ADD W21, W21, 0x1
	0x03A17B88 CMP W21, W8
	0x03A17B8C B.LT 0x3A17AEC
	0x03A17B90 MOV X0, X19
	0x03A17B94 LDP X20, X19, [X31 + 0xF0]
	0x03A17B98 LDP X22, X21, [X31 + 0xE0]
	0x03A17B9C LDP X24, X23, [X31 + 0xD0]
	0x03A17BA0 LDP X26, X25, [X31 + 0xC0]
	0x03A17BA4 LDP X28, X27, [X31 + 0xB0]
	0x03A17BA8 LDR X30, [X31 + 0xA0]
	0x03A17BAC LDP D9, D8, [X31 + 0x90]
	0x03A17BB0 ADD X31, X31, 0x100
	0x03A17BB4 RET
	0x03A17BB8 BL 0x1C16F20
	0x03A17BBC BL 0x1C16F28
	0x03A17BC0 SUB X31, X31, 0x70
	0x03A17BC4 STP X29, X30, [X31 + 0x10]
	0x03A17BC8 STP X28, X27, [X31 + 0x20]
	0x03A17BCC STP X26, X25, [X31 + 0x30]
	0x03A17BD0 STP X24, X23, [X31 + 0x40]
	0x03A17BD4 STP X22, X21, [X31 + 0x50]
	0x03A17BD8 STP X20, X19, [X31 + 0x60]
	0x03A17BDC ADRP X26, 0x9CA000
	0x03A17BE0 LDRB W8, [X26 + 0xFCD]
	0x03A17BE4 MOV X21, X6
	0x03A17BE8 MOV W19, W5
	0x03A17BEC MOV X20, X4
	0x03A17BF0 MOV X22, X3
	0x03A17BF4 MOV W23, W2
	0x03A17BF8 MOV X24, X1
	0x03A17BFC MOV X25, X0
	0x03A17C00 TBNZ X8, 0x0, 0x3A17C60
	0x03A17C04 ADRP X0, 0x73D000
	0x03A17C08 LDR X0, [X0 + 0x4B0]
	0x03A17C0C BL 0x1C16CF4
	0x03A17C10 ADRP X0, 0x73D000
	0x03A17C14 LDR X0, [X0 + 0x4B8]
	0x03A17C18 BL 0x1C16CF4
	0x03A17C1C ADRP X0, 0x73D000
	0x03A17C20 LDR X0, [X0 + 0x638]
	0x03A17C24 BL 0x1C16CF4
	0x03A17C28 ADRP X0, 0x73D000
	0x03A17C2C LDR X0, [X0 + 0x4C8]
	0x03A17C30 BL 0x1C16CF4
	0x03A17C34 ADRP X0, 0x73D000
	0x03A17C38 LDR X0, [X0 + 0x4D0]
	0x03A17C3C BL 0x1C16CF4
	0x03A17C40 ADRP X0, 0x73D000
	0x03A17C44 LDR X0, [X0 + 0x4D8]
	0x03A17C48 BL 0x1C16CF4
	0x03A17C4C ADRP X0, 0x70C000
	0x03A17C50 LDR X0, [X0 + 0x8D0]
	0x03A17C54 BL 0x1C16CF4
	0x03A17C58 MOVZ W8, 0x1
	0x03A17C5C STRB W8, [X26 + 0xFCD]
	0x03A17C60 CBZ X21, 0x3A17DA4
	0x03A17C64 ADRP X27, 0x73D000
	0x03A17C68 LDR X27, [X27 + 0x4B8]
	0x03A17C6C MOV X0, X21
	0x03A17C70 BL 0x3A131A8
	0x03A17C74 LDR X8, [X27]
	0x03A17C78 MOV X26, X0
	0x03A17C7C LDR W9, [X8 + 0xE0]
	0x03A17C80 CBNZ W9, 0x3A17C8C
	0x03A17C84 MOV X0, X8
	0x03A17C88 BL 0x1C16DFC
	0x03A17C8C CBZ X26, 0x3A17DA4
	0x03A17C90 LDR X8, [X27]
	0x03A17C94 ADRP X27, 0x73D000
	0x03A17C98 ADRP X28, 0x73D000
	0x03A17C9C ADRP X29, 0x73D000
	0x03A17CA0 LDR X8, [X8 + 0xB8]
	0x03A17CA4 LDR X27, [X27 + 0x4C8]
	0x03A17CA8 LDR X28, [X28 + 0x638]
	0x03A17CAC LDR X29, [X29 + 0x4B0]
	0x03A17CB0 LDR X2, [X8]
	0x03A17CB4 MOV X0, X26
	0x03A17CB8 MOV W1, W23
	0x03A17CBC MOV X3, X31
	0x03A17CC0 BL 0x3C18D00
	0x03A17CC4 LDR X8, [X27]
	0x03A17CC8 MOV X0, X26
	0x03A17CCC MOV X1, X25
	0x03A17CD0 MOV X2, X24
	0x03A17CD4 MOV W3, W31
	0x03A17CD8 MOV W4, W31
	0x03A17CDC MOV W5, W23
	0x03A17CE0 MOV W6, W31
	0x03A17CE4 MOV W7, W31
	0x03A17CE8 STR X8, [X31]
	0x03A17CEC BL 0x221B178
	0x03A17CF0 LDR X8, [X28]
	0x03A17CF4 MOVZ W7, 0x1
	0x03A17CF8 MOV X0, X26
	0x03A17CFC MOV X1, X22
	0x03A17D00 MOV X2, X20
	0x03A17D04 MOV W3, W31
	0x03A17D08 MOV W4, W19
	0x03A17D0C MOV W5, W31
	0x03A17D10 MOV W6, W31
	0x03A17D14 STR X8, [X31 + 0x8]

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+32], X30
	003 Move [X31+40], X25
	004 Move [X31+48], X24
	005 Move [X31+56], X23
	006 Move [X31+64], X22
	007 Move [X31+72], X21
	008 Move [X31+80], X20
	009 Move [X31+88], X19
	010 Move X23, 0x9CB000
	011 Move X22, 0x73E000
	012 Move W8, [X23+4036]
	013 Move X22, [X22+1176]
	014 Move X19, X2
	015 Move W20, W1
	016 Move W21, W0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {38}
	021 Move X0, 0x73E000
	022 Move X0, [X0+1360]
	023 Call 0x1C17CF4
	024 Move X0, 0x73E000
	025 Move X0, [X0+1368]
	026 Call 0x1C17CF4
	027 Move X0, 0x73E000
	028 Move X0, [X0+1376]
	029 Call 0x1C17CF4
	030 Move X0, 0x73E000
	031 Move X0, [X0+1176]
	032 Call 0x1C17CF4
	033 Move X0, 0x73E000
	034 Move X0, [X0+1384]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X23+4036], W8
	038 Move X8, -49455104
	039 Move V0, [X8+187]
	040 Move [X31+8], X31
	041 Move [X31+16], X31
	042 Move [X31+24], X31
	043 Move [X19], V0
	044 Move X0, [X22]
	045 Move W8, [X0+224]
	046 Compare W8, 0
	047 JumpIfNotEqual {49}
	048 Call 0x1C17DFC
	049 Move X23, 0x9CC000
	050 Move W8, [X23+13]
	051 Compare W8, 0
	052 JumpIfNotEqual {58}
	053 Move X0, 0x73E000
	054 Move X0, [X0+1176]
	055 Call 0x1C17CF4
	056 Move W8, 1
	057 Move [X23+13], W8
	058 Move X0, [X22]
	059 Move W8, [X0+224]
	060 Compare W8, 0
	061 JumpIfNotEqual {64}
	062 Call 0x1C17DFC
	063 Move X0, [X22]
	064 Move X8, [X0+184]
	065 Move X0, [X8+8]
	066 Compare X0, 0
	067 JumpIfEqual {122}
	068 Move X8, 0x73E000
	069 Move X8, [X8+1384]
	070 Move X25, 0x73E000
	071 Move X24, 0x73E000
	072 Move X1, [X8]
	073 Move X25, [X25+1368]
	074 Move X24, [X24+1360]
	075 Add X8, X31, 8
	076 Call List`1<Object>.GetEnumerator, X0
	077 Move X1, [X25]
	078 Add X0, X31, 8
	079 Call Enumerator<Object>.MoveNext, X0
	080 Move W22, W0
	081 Move TEMP, X0
	082 And TEMP, TEMP, 1
	083 Compare TEMP, 1
	084 JumpIfNotEqual {104}
	085 Move X23, [X31+24]
	086 Compare X23, 0
	087 JumpIfEqual {121}
	088 Move W8, [X23+36]
	089 NotImplemented "Instruction CMP not yet implemented."
	090 Move W8, [X23+40]
	091 NotImplemented "Instruction CMP not yet implemented."
	092 Move X0, X23
	093 Move W1, W21
	094 Call Light2D.IsLitLayer, X0, X1
	095 Move TEMP, X0
	096 And TEMP, TEMP, 1
	097 Compare TEMP, 1
	098 JumpIfNotEqual {77}
	099 Move V0, [X23+3]
	100 Move V1, [X23+64]
	101 NotImplemented "Instruction INVALID not yet implemented."
	102 Move [X19], V0
	103 Move W19, 4
	104 Move W19, 6
	105 Move X1, [X24]
	106 Add X0, X31, 8
	107 Call Enumerator<Object>.Dispose, X0
	108 NotImplemented "Instruction CMP not yet implemented."
	109 NotImplemented "Instruction CSET not yet implemented."
	110 And W0, W22, W8
	111 Move X20, [X31+80]
	112 Move X19, [X31+88]
	113 Move X22, [X31+64]
	114 Move X21, [X31+72]
	115 Move X24, [X31+48]
	116 Move X23, [X31+56]
	117 Move X30, [X31+32]
	118 Move X25, [X31+40]
	119 Add X31, X31, 96
	120 Return X0
	121 Call 0x1C17F20
	122 Call 0x1C17F20
	123 Move X19, X0
	124 NotImplemented "Instruction CMP not yet implemented."
	125 Move X0, X19
	126 Call 0x3EB2AD0
	127 Move X20, [X0]
	128 Call 0x3EB2AE0
	129 Move X1, [X24]
	130 Add X0, X31, 8
	131 Call Enumerator<Object>.Dispose, X0
	132 Compare X20, 0
	133 JumpIfNotEqual {137}
	134 Move W22, W31
	135 Move W19, W31
	136 Move X20, X31
	137 Move X0, X20
	138 Call 0x1C17F18
	139 Move X19, X0
	140 Move X1, [X24]
	141 Add X0, X31, 8
	142 Call Enumerator<Object>.Dispose, X0
	143 Compare X20, 0
	144 JumpIfNotEqual {147}
	145 Move X0, X19
	146 Call 0x1D2D690
	147 Move X0, X20
	148 Call 0x1C17F18
	149 Call 0x1991590

Method: System.Boolean ContainsDuplicateGlobalLight(System.Int32 sortingLayerIndex, System.Int32 blendStyleIndex)

Disassembly:
	0x03A17908 ADRP X24, 0x73D000
	0x03A1790C LDR X24, [X24 + 0x310]
	0x03A17910 LDR V9, [X23 + 0x18C]
	0x03A17914 MOV X22, X31
	0x03A17918 AND X8, X8, 0x0
	0x03A1791C ADD X25, X20, 0x24
	0x03A17920 MOVZ W26, 0x7F800000
	0x03A17924 MOVZ X27, 0x80000000
	0x03A17928 MOVZ W28, 0x30
	0x03A1792C CMP X22, W8, UXTW
	0x03A17930 B.CS 0x3A17BBC
	0x03A17934 LDP S0, S1, [X25 - 0x4]
	0x03A17938 MOVI V2.2D, 0x0
	0x03A1793C STP V2, V2, [X31 + 0x10]
	0x03A17940 STR V2, [X31]
	0x03A17944 FMOV S2, W26
	0x03A17948 FMUL S0, S0, S9
	0x03A1794C FMUL S1, S1, S9
	0x03A17950 FCVTZS X8, S0
	0x03A17954 FCMP S0, S2
	0x03A17958 FCVTZS X9, S1
	0x03A1795C CSEL X1, X27, X8, EQ
	0x03A17960 FCMP S1, S2
	0x03A17964 CSEL X2, X27, X9, EQ
	0x03A17968 ADD X0, X31, 0x0
	0x03A1796C MOV X3, X31
	0x03A17970 BL 0x3A04370
	0x03A17974 CBZ X21, 0x3A17BB8
	0x03A17978 LDP V0, V1, [X31]
	0x03A1797C LDR V2, [X31 + 0x2]
	0x03A17980 LDR X10, [X24]
	0x03A17984 STP V0, V1, [X31 + 0x30]
	0x03A17988 STR V2, [X31 + 0x5]
	0x03A1798C LDR W9, [X21 + 0x1C]
	0x03A17990 LDR X8, [X21 + 0x10]
	0x03A17994 ADD W9, W9, 0x1
	0x03A17998 STR W9, [X21 + 0x1C]
	0x03A1799C CBZ X8, 0x3A17BB8
	0x03A179A0 LDRSW X9, [X21 + 0x18]
	0x03A179A4 LDR W11, [X8 + 0x18]
	0x03A179A8 CMP W9, W11
	0x03A179AC B.CS 0x3A179D4
	0x03A179B0 ADD W10, W9, 0x1
	0x03A179B4 STR W10, [X21 + 0x18]
	0x03A179B8 LDP V1, V0, [X31 + 0x40]
	0x03A179BC LDR V2, [X31 + 0x3]
	0x03A179C0 NOP
	0x03A179C4 MADD X8, X9, X28, X8
	0x03A179C8 STP V1, V0, [X8 + 0x30]
	0x03A179CC STR V2, [X8 + 0x2]
	0x03A179D0 B 0x3A179FC
	0x03A179D4 LDR X8, [X10 + 0x20]
	0x03A179D8 LDP V0, V1, [X31 + 0x30]
	0x03A179DC LDR V2, [X31 + 0x5]
	0x03A179E0 ADD X1, X31, 0x60
	0x03A179E4 LDR X8, [X8 + 0xC0]
	0x03A179E8 MOV X0, X21
	0x03A179EC LDR X2, [X8 + 0x70]
	0x03A179F0 STP V0, V1, [X31 + 0x60]
	0x03A179F4 STR V2, [X31 + 0x8]
	0x03A179F8 BL 0x2FE46FC
	0x03A179FC LDR W8, [X20 + 0x18]
	0x03A17A00 ADD X22, X22, 0x1
	0x03A17A04 ADD X25, X25, 0xC
	0x03A17A08 CMP X22, W8, SXTW
	0x03A17A0C B.LT 0x3A1792C
	0x03A17A10 ADRP X8, 0x73D000
	0x03A17A14 LDR X8, [X8 + 0x3F0]
	0x03A17A18 ADRP X20, 0x73D000
	0x03A17A1C ADRP X22, 0x73D000
	0x03A17A20 LDR X0, [X8]
	0x03A17A24 LDR X20, [X20 + 0x3F8]
	0x03A17A28 LDR X22, [X22 + 0x510]
	0x03A17A2C BL 0x1C16F10
	0x03A17A30 LDR X1, [X20]
	0x03A17A34 MOV X20, X0
	0x03A17A38 BL 0x301B7C4
	0x03A17A3C LDR X0, [X22]
	0x03A17A40 STR X20, [X31 + 0x30]
	0x03A17A44 BL 0x1C16F10
	0x03A17A48 FMOV D0, 16.000000001862645
	0x03A17A4C MOV X22, X0
	0x03A17A50 BL 0x3A0F784
	0x03A17A54 CBZ X22, 0x3A17BB8
	0x03A17A58 MOV X0, X22
	0x03A17A5C MOV X1, X21
	0x03A17A60 MOV W2, W31
	0x03A17A64 MOV W3, W31
	0x03A17A68 BL 0x3A0F8F4
	0x03A17A6C CBZ X21, 0x3A17BB8
	0x03A17A70 LDR V9, [X23 + 0x18C]
	0x03A17A74 LDR W2, [X21 + 0x18]
	0x03A17A78 ADD X1, X31, 0x30
	0x03A17A7C MOV X0, X22
	0x03A17A80 FMUL S0, S8, S9
	0x03A17A84 FCVT S0, S0
	0x03A17A88 BL 0x3A11D74
	0x03A17A8C CBZ X20, 0x3A17BB8
	0x03A17A90 LDR W8, [X20 + 0x18]
	0x03A17A94 CMP W8, 0x1
	0x03A17A98 B.LT 0x3A17B90
	0x03A17A9C ADRP X8, 0x73D000
	0x03A17AA0 LDR X8, [X8 + 0x240]
	0x03A17AA4 MOV X0, X20
	0x03A17AA8 MOV W1, W31
	0x03A17AAC STR W31, [X31]
	0x03A17AB0 LDR X2, [X8]
	0x03A17AB4 BL 0x301BCCC
	0x03A17AB8 ADD X2, X31, 0x0
	0x03A17ABC MOV X1, X21
	0x03A17AC0 BL 0x3A174C4
	0x03A17AC4 CBZ X0, 0x3A17BB8
	0x03A17AC8 LDR W8, [X0 + 0x18]
	0x03A17ACC MOV X20, X0
	0x03A17AD0 CMP W8, 0x1
	0x03A17AD4 B.LT 0x3A17B90
	0x03A17AD8 ADRP X22, 0x73D000
	0x03A17ADC ADRP X23, 0x737000
	0x03A17AE0 LDR X22, [X22 + 0x210]
	0x03A17AE4 LDR X23, [X23 + 0x720]
	0x03A17AE8 MOV W21, W31
	0x03A17AEC LDR X2, [X22]
	0x03A17AF0 ADD X8, X31, 0x60
	0x03A17AF4 MOV X0, X20
	0x03A17AF8 MOV W1, W21
	0x03A17AFC BL 0x2FE4360
	0x03A17B00 LDR X2, [X22]
	0x03A17B04 LDR X24, [X31 + 0x68]

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+32], X30
	003 Move [X31+48], X24
	004 Move [X31+56], X23
	005 Move [X31+64], X22
	006 Move [X31+72], X21
	007 Move [X31+80], X20
	008 Move [X31+88], X19
	009 Move X22, 0x9CB000
	010 Move X21, 0x73E000
	011 Move W8, [X22+4037]
	012 Move X21, [X21+1176]
	013 Move W19, W1
	014 Move W20, W0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {36}
	019 Move X0, 0x73E000
	020 Move X0, [X0+1360]
	021 Call 0x1C17CF4
	022 Move X0, 0x73E000
	023 Move X0, [X0+1368]
	024 Call 0x1C17CF4
	025 Move X0, 0x73E000
	026 Move X0, [X0+1376]
	027 Call 0x1C17CF4
	028 Move X0, 0x73E000
	029 Move X0, [X0+1176]
	030 Call 0x1C17CF4
	031 Move X0, 0x73E000
	032 Move X0, [X0+1384]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X22+4037], W8
	036 Move X0, [X21]
	037 Move [X31+8], X31
	038 Move [X31+16], X31
	039 Move [X31+24], X31
	040 Move W8, [X0+224]
	041 Compare W8, 0
	042 JumpIfNotEqual {44}
	043 Call 0x1C17DFC
	044 Move X22, 0x9CC000
	045 Move W8, [X22+13]
	046 Compare W8, 0
	047 JumpIfNotEqual {53}
	048 Move X0, 0x73E000
	049 Move X0, [X0+1176]
	050 Call 0x1C17CF4
	051 Move W8, 1
	052 Move [X22+13], W8
	053 Move X0, [X21]
	054 Move W8, [X0+224]
	055 Compare W8, 0
	056 JumpIfNotEqual {59}
	057 Call 0x1C17DFC
	058 Move X0, [X21]
	059 Move X8, [X0+184]
	060 Move X0, [X8+8]
	061 Compare X0, 0
	062 JumpIfEqual {119}
	063 Move X8, 0x73E000
	064 Move X8, [X8+1384]
	065 Move X23, 0x73E000
	066 Move X22, 0x73E000
	067 Move X1, [X8]
	068 Move X23, [X23+1368]
	069 Move X22, [X22+1360]
	070 Add X8, X31, 8
	071 Call List`1<Object>.GetEnumerator, X0
	072 Move W8, 1
	073 Move W24, W8
	074 Move X1, [X23]
	075 Add X0, X31, 8
	076 Call Enumerator<Object>.MoveNext, X0
	077 Move W21, W0
	078 Move TEMP, X0
	079 And TEMP, TEMP, 1
	080 Compare TEMP, 1
	081 JumpIfNotEqual {102}
	082 Move X8, [X31+24]
	083 Compare X8, 0
	084 JumpIfEqual {118}
	085 Move W9, [X8+36]
	086 NotImplemented "Instruction CMP not yet implemented."
	087 Move W9, [X8+40]
	088 NotImplemented "Instruction CMP not yet implemented."
	089 Move X0, X8
	090 Move W1, W20
	091 Call Light2D.IsLitLayer, X0, X1
	092 Move TEMP, X0
	093 And TEMP, TEMP, 1
	094 Compare TEMP, 1
	095 JumpIfNotEqual {74}
	096 Move W8, W31
	097 Move TEMP, X24
	098 And TEMP, TEMP, 1
	099 Compare TEMP, 1
	100 JumpIfEqual {73}
	101 Move W19, 5
	102 Move W19, 6
	103 Move X1, [X22]
	104 Add X0, X31, 8
	105 Call Enumerator<Object>.Dispose, X0
	106 NotImplemented "Instruction CMP not yet implemented."
	107 NotImplemented "Instruction CSET not yet implemented."
	108 And W0, W21, W8
	109 Move X20, [X31+80]
	110 Move X19, [X31+88]
	111 Move X22, [X31+64]
	112 Move X21, [X31+72]
	113 Move X24, [X31+48]
	114 Move X23, [X31+56]
	115 Move X30, [X31+32]
	116 Add X31, X31, 96
	117 Return X0
	118 Call 0x1C17F20
	119 Call 0x1C17F20
	120 Move X19, X0
	121 NotImplemented "Instruction CMP not yet implemented."
	122 Move X0, X19
	123 Call 0x3EB2AD0
	124 Move X20, [X0]
	125 Call 0x3EB2AE0
	126 Move X1, [X22]
	127 Add X0, X31, 8
	128 Call Enumerator<Object>.Dispose, X0
	129 Compare X20, 0
	130 JumpIfNotEqual {134}
	131 Move W21, W31
	132 Move W19, W31
	133 Move X20, X31
	134 Move X0, X20
	135 Call 0x1C17F18
	136 Move X19, X0
	137 Move X1, [X22]
	138 Add X0, X31, 8
	139 Call Enumerator<Object>.Dispose, X0
	140 Compare X20, 0
	141 JumpIfNotEqual {144}
	142 Move X0, X19
	143 Call 0x1D2D690
	144 Move X0, X20
	145 Call 0x1C17F18
	146 Call 0x1991590

Method: UnityEngine.SortingLayer[] GetCachedSortingLayer()

Disassembly:
	0x03A148DC LDR W8, [X27 + 0x18]
	0x03A148E0 CMP W20, W8
	0x03A148E4 B.CS 0x3A14BDC
	0x03A148E8 ADD X10, X27, X20, 0x1, LSL
	0x03A148EC LDR X8, [X31 + 0xE0]
	0x03A148F0 LDRH W10, [X10 + 0x20]
	0x03A148F4 ADD W11, W29, 0x2
	0x03A148F8 ADD W25, W24, 0x1
	0x03A148FC ADD W28, W28, 0x1
	0x03A14900 STRH W10, [X8, W29, SXTW]
	0x03A14904 STRH W19, [X8, W9, SXTW]
	0x03A14908 STRH W24, [X8, W11, SXTW]
	0x03A1490C LDR W9, [X23 + 0x18]
	0x03A14910 ADD W29, W29, 0x3
	0x03A14914 MOV W19, W24
	0x03A14918 MOV W24, W25
	0x03A1491C CMP W28, W9
	0x03A14920 MOV X20, X26
	0x03A14924 B.LT 0x3A1480C
	0x03A14928 LDR W17, [X31 + 0x34]
	0x03A1492C LDR X0, [X31 + 0x28]
	0x03A14930 ADD X9, X31, 0xE0
	0x03A14934 SUB W10, W25, 0x1
	0x03A14938 STRH W21, [X8, W29, SXTW]
	0x03A1493C B 0x3A14960
	0x03A14940 LDR X8, [X31 + 0xE0]
	0x03A14944 LDR X0, [X31 + 0x28]
	0x03A14948 STRH W21, [X8, W29, SXTW]
	0x03A1494C CBZ X27, 0x3A14BE0
	0x03A14950 LDR W17, [X31 + 0x34]
	0x03A14954 ADD X9, X31, 0xE0
	0x03A14958 MOV W25, W21
	0x03A1495C MOV W10, W21
	0x03A14960 LDR W11, [X27 + 0x18]
	0x03A14964 CMP W0, W11
	0x03A14968 B.CS 0x3A14BDC
	0x03A1496C ADD X12, X27, X0, 0x1, LSL
	0x03A14970 LDRH W13, [X12 + 0x20]!
	0x03A14974 ADD W14, W29, 0x1
	0x03A14978 STRH W13, [X8, W14, SXTW]
	0x03A1497C CBZ X0, 0x3A14994

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x9CE000
	005 Move X20, 0x741000
	006 Move W8, [X19+4038]
	007 Move X20, [X20+1176]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x741000
	013 Move X0, [X0+1176]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+4038], W8
	017 Move X0, [X20]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {23}
	021 Call 0x1C17DFC
	022 Move X0, [X20]
	023 Move X8, [X0+184]
	024 Move X8, [X8]
	025 Compare X8, 0
	026 JumpIfNotEqual {40}
	027 Move X0, X31
	028 Call SortingLayer.get_layers
	029 Move X8, [X20]
	030 Move X19, X0
	031 Move W9, [X8+224]
	032 Compare W9, 0
	033 JumpIfNotEqual {37}
	034 Move X0, X8
	035 Call 0x1C17DFC
	036 Move X8, [X20]
	037 Move X8, [X8+184]
	038 Move [X8], X19
	039 Move X0, [X20]
	040 Move W8, [X0+224]
	041 Compare W8, 0
	042 JumpIfNotEqual {45}
	043 Call 0x1C17DFC
	044 Move X0, [X20]
	045 Move X8, [X0+184]
	046 Move X20, [X31+16]
	047 Move X19, [X31+24]
	048 Move X0, [X8]
	049 Move X30, [X31+32]
	050 Return X0

Method: System.Void .cctor()

Disassembly:
	0x03A17D18 STR W31, [X31]
	0x03A17D1C BL 0x221A284
	0x03A17D20 LDR X0, [X29]
	0x03A17D24 MOV W1, W23
	0x03A17D28 BL 0x1C16D6C
	0x03A17D2C STR X0, [X21 + 0x98]
	0x03A17D30 ADRP X8, 0x73D000
	0x03A17D34 LDR X8, [X8 + 0x4D8]
	0x03A17D38 MOV X2, X0
	0x03A17D3C MOV X0, X25
	0x03A17D40 MOV X1, X24
	0x03A17D44 LDR X4, [X8]
	0x03A17D48 MOV W3, W23
	0x03A17D4C BL 0x2400390
	0x03A17D50 ADRP X8, 0x70C000
	0x03A17D54 LDR X8, [X8 + 0x8D0]
	0x03A17D58 MOV W1, W19
	0x03A17D5C LDR X0, [X8]
	0x03A17D60 BL 0x1C16D6C
	0x03A17D64 STR X0, [X21 + 0xA0]
	0x03A17D68 ADRP X8, 0x73D000
	0x03A17D6C LDR X8, [X8 + 0x4D0]
	0x03A17D70 MOV X2, X0
	0x03A17D74 MOV X0, X22
	0x03A17D78 MOV X1, X20
	0x03A17D7C LDR X4, [X8]
	0x03A17D80 MOV W3, W19
	0x03A17D84 LDP X20, X19, [X31 + 0x60]
	0x03A17D88 LDP X22, X21, [X31 + 0x50]
	0x03A17D8C LDP X24, X23, [X31 + 0x40]
	0x03A17D90 LDP X26, X25, [X31 + 0x30]
	0x03A17D94 LDP X28, X27, [X31 + 0x20]
	0x03A17D98 LDP X29, X30, [X31 + 0x10]
	0x03A17D9C ADD X31, X31, 0x70
	0x03A17DA0 B 0x23EC284

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x9CB000
	007 Move X22, 0x73E000
	008 Move X19, 0x73E000
	009 Move X20, 0x73E000
	010 Move W8, [X21+4039]
	011 Move X22, [X22+1528]
	012 Move X19, [X19+1536]
	013 Move X20, [X20+1176]
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {29}
	018 Move X0, 0x73E000
	019 Move X0, [X0+1176]
	020 Call 0x1C17CF4
	021 Move X0, 0x73E000
	022 Move X0, [X0+1536]
	023 Call 0x1C17CF4
	024 Move X0, 0x73E000
	025 Move X0, [X0+1528]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X21+4039], W8
	029 Move X0, [X22]
	030 Call 0x1C17F10
	031 Move X1, [X19]
	032 Move X19, X0
	033 Call List`1<Object>..ctor, X0
	034 Move X8, [X20]
	035 Move X22, [X31+16]
	036 Move X21, [X31+24]
	037 Move X8, [X8+184]
	038 Move [X8+8], X19
	039 Move X20, [X31+32]
	040 Move X19, [X31+40]
	041 Move X30, [X31+48]
	042 Return 

