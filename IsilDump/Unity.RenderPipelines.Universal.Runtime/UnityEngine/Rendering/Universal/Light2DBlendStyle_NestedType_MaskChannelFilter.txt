Type: UnityEngine.Rendering.Universal.Light2DBlendStyle/MaskChannelFilter

Method: UnityEngine.Vector4 get_mask()

Disassembly:
	0x03A16B14 STP X22, X21, [X31 + 0x40]
	0x03A16B18 STP X20, X19, [X31 + 0x50]
	0x03A16B1C ADRP X23, 0x9CB000

ISIL:
	001 Move S0, [X0]
	002 Move S1, [X0+4]
	003 Move S2, [X0+8]
	004 Move S3, [X0+12]
	005 Return X0

Method: System.Void set_mask(UnityEngine.Vector4 value)

Disassembly:
	0x03A16B20 ADRP X22, 0x73E000
	0x03A16B24 LDRB W8, [X23 + 0xFC4]
	0x03A16B28 LDR X22, [X22 + 0x498]

ISIL:
	001 Move [X0], S0
	002 Move [X0+8], S1
	003 Move [X0+8], S2
	004 Move [X0+16], S3
	005 Return 

Method: UnityEngine.Vector4 get_inverted()

Disassembly:
	0x03A16B2C MOV X19, X2
	0x03A16B30 MOV W20, W1
	0x03A16B34 MOV W21, W0

ISIL:
	001 Move S0, [X0+16]
	002 Move S1, [X0+20]
	003 Move S2, [X0+24]
	004 Move S3, [X0+28]
	005 Return X0

Method: System.Void set_inverted(UnityEngine.Vector4 value)

Disassembly:
	0x03A16B38 TBNZ X8, 0x0, 0x3A16B80
	0x03A16B3C ADRP X0, 0x73E000
	0x03A16B40 LDR X0, [X0 + 0x550]

ISIL:
	001 Move [X0+16], S0
	002 Move [X0+24], S1
	003 Move [X0+24], S2
	004 Move [X0+32], S3
	005 Return 

Method: System.Void .ctor(UnityEngine.Vector4 m, UnityEngine.Vector4 i)

Disassembly:
	0x03A16AD8 MOV X0, X20
	0x03A16ADC BL 0x1C16F18
	0x03A16AE0 MOV X19, X0
	0x03A16AE4 LDR X1, [X22]
	0x03A16AE8 ADD X0, X31, 0x8

ISIL:
	001 Move [X0], S0
	002 Move [X0+8], S1
	003 Move [X0+8], S2
	004 Move [X0+16], S3
	005 Move [X0+16], S4
	006 Move [X0+24], S5
	007 Move [X0+24], S6
	008 Move [X0+32], S7
	009 Return 

