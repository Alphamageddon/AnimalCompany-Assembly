Type: UnityEngine.Rendering.Universal.UniversalRenderPipeline/Profiling

Method: UnityEngine.Rendering.ProfilingSampler TryGetOrAddCameraSampler(UnityEngine.Camera camera)

Disassembly:
	0x03A8EE44 STR S8, [X19 + 0x114]
	0x03A8EE48 STR S11, [X19 + 0x10C]
	0x03A8EE4C STR S9, [X19 + 0x110]
	0x03A8EE50 STR S10, [X19 + 0x118]
	0x03A8EE54 LDR X0, [X21]
	0x03A8EE58 LDR W8, [X0 + 0xE0]
	0x03A8EE5C CBNZ W8, 0x3A8EE64
	0x03A8EE60 BL 0x1C16DFC
	0x03A8EE64 FADD S12, S8, S11
	0x03A8EE68 FCVT S8, S12
	0x03A8EE6C ADD X0, X31, 0x48
	0x03A8EE70 MOV V0.16B, V8.16B
	0x03A8EE74 BL 0x3EB1C00
	0x03A8EE78 FCMP S12, 0x0
	0x03A8EE7C B.GE 0x3A8EE98
	0x03A8EE80 FMOV D1, -0.5
	0x03A8EE84 FCMP D0, D1
	0x03A8EE88 B.NE 0x3A8EEC0
	0x03A8EE8C LDR V0, [X31 + 0x48]
	0x03A8EE90 FMOV D1, -1
	0x03A8EE94 B 0x3A8EEAC
	0x03A8EE98 FMOV D1, 0.5
	0x03A8EE9C FCMP D0, D1
	0x03A8EEA0 B.NE 0x3A8EECC
	0x03A8EEA4 LDR V0, [X31 + 0x48]
	0x03A8EEA8 FMOV D1, 1
	0x03A8EEAC FCVTZS X8, D0
	0x03A8EEB0 FADD D1, D0, D1
	0x03A8EEB4 ANDS X31, X8, 0x1
	0x03A8EEB8 FCSEL D12, D0, D1, EQ
	0x03A8EEBC B 0x3A8EED4
	0x03A8EEC0 FADD D0, D8, D1
	0x03A8EEC4 FRINTP D12, D0
	0x03A8EEC8 B 0x3A8EED4
	0x03A8EECC FADD D0, D8, D1
	0x03A8EED0 FRINTM D12, D0
	0x03A8EED4 FCVT S8, S11
	0x03A8EED8 ADD X0, X31, 0x48
	0x03A8EEDC MOV V0.16B, V8.16B
	0x03A8EEE0 BL 0x3EB1C00
	0x03A8EEE4 FCMP S11, 0x0
	0x03A8EEE8 B.GE 0x3A8EF04
	0x03A8EEEC FMOV D1, -0.5
	0x03A8EEF0 FCMP D0, D1
	0x03A8EEF4 B.NE 0x3A8EF2C
	0x03A8EEF8 LDR V0, [X31 + 0x48]
	0x03A8EEFC FMOV D1, -1
	0x03A8EF00 B 0x3A8EF18
	0x03A8EF04 FMOV D1, 0.5
	0x03A8EF08 FCMP D0, D1
	0x03A8EF0C B.NE 0x3A8EF38
	0x03A8EF10 LDR V0, [X31 + 0x48]
	0x03A8EF14 FMOV D1, 1
	0x03A8EF18 FCVTZS X8, D0
	0x03A8EF1C FADD D1, D0, D1
	0x03A8EF20 ANDS X31, X8, 0x1
	0x03A8EF24 FCSEL D0, D0, D1, EQ
	0x03A8EF28 B 0x3A8EF40
	0x03A8EF2C FADD D0, D8, D1
	0x03A8EF30 FRINTP D0, D0
	0x03A8EF34 B 0x3A8EF40
	0x03A8EF38 FADD D0, D8, D1
	0x03A8EF3C FRINTM D0, D0
	0x03A8EF40 MOVZ X9, 0x7FF00000
	0x03A8EF44 FMOV D1, X9
	0x03A8EF48 FCVTZS W8, D12
	0x03A8EF4C MOVZ W10, 0x80000000
	0x03A8EF50 FCMP D12, D1
	0x03A8EF54 FCVTZS W11, D0
	0x03A8EF58 FADD S10, S10, S9
	0x03A8EF5C CSEL W8, W10, W8, EQ
	0x03A8EF60 FCMP D0, D1
	0x03A8EF64 CSEL W9, W10, W11, EQ
	0x03A8EF68 FCVT S8, S10
	0x03A8EF6C SUB W8, W8, W9
	0x03A8EF70 ADD X0, X31, 0x48
	0x03A8EF74 MOV V0.16B, V8.16B
	0x03A8EF78 STR W8, [X19 + 0x140]
	0x03A8EF7C BL 0x3EB1C00
	0x03A8EF80 FCMP S10, 0x0
	0x03A8EF84 B.GE 0x3A8EFA0
	0x03A8EF88 FMOV D1, -0.5
	0x03A8EF8C FCMP D0, D1
	0x03A8EF90 B.NE 0x3A8EFC8
	0x03A8EF94 LDR V0, [X31 + 0x48]
	0x03A8EF98 FMOV D1, -1
	0x03A8EF9C B 0x3A8EFB4
	0x03A8EFA0 FMOV D1, 0.5
	0x03A8EFA4 FCMP D0, D1
	0x03A8EFA8 B.NE 0x3A8EFD4

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, 0x955000
	007 Move W8, [X19+896]
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {30}
	013 Move X0, 0x6C3000
	014 Move X0, [X0+3496]
	015 Call 0x1C17CF4
	016 Move X0, 0x6C3000
	017 Move X0, [X0+3504]
	018 Call 0x1C17CF4
	019 Move X0, 0x6C3000
	020 Move X0, [X0+1432]
	021 Call 0x1C17CF4
	022 Move X0, 0x6CA000
	023 Move X0, [X0+864]
	024 Call 0x1C17CF4
	025 Move X0, 0x6CA000
	026 Move X0, [X0+904]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X19+896], W8
	030 Move [X31+8], X31
	031 Compare X20, 0
	032 JumpIfEqual {106}
	033 Move X8, [X20]
	034 Move X22, 0x6CA000
	035 Move X0, X20
	036 Move X9, [X8+344]
	037 Move X1, [X8+352]
	038 Move X22, [X22+864]
	039 NotImplemented "Instruction BLR not yet implemented."
	040 Move X8, [X22]
	041 Move W19, W0
	042 Move W9, [X8+224]
	043 Compare W9, 0
	044 JumpIfNotEqual {48}
	045 Move X0, X8
	046 Call 0x1C17DFC
	047 Move X8, [X22]
	048 Move X8, [X8+184]
	049 Move X0, [X8]
	050 Compare X0, 0
	051 JumpIfEqual {106}
	052 Move X8, 0x6C3000
	053 Move X8, [X8+3504]
	054 Add X2, X31, 8
	055 Move W1, W19
	056 Move X3, [X8]
	057 Call Dictionary`2<Int32, Object>.TryGetValue, X0, X1, X2
	058 Move TEMP, X0
	059 And TEMP, TEMP, 1
	060 Compare TEMP, 1
	061 JumpIfEqual {99}
	062 Move X0, X20
	063 Move X1, X31
	064 Call Object.get_name, X0
	065 Move X8, 0x6CA000
	066 Move X8, [X8+904]
	067 Move X1, X0
	068 Move X2, X31
	069 Move X8, [X8]
	070 Move X0, X8
	071 Call String.Concat, X0, X1
	072 Move X8, 0x6C3000
	073 Move X8, [X8+1432]
	074 Move X20, X0
	075 Move X8, [X8]
	076 Move X0, X8
	077 Call 0x1C17F10
	078 Move X1, X20
	079 Move X2, X31
	080 Move X21, X0
	081 Call ProfilingSampler..ctor, X0, X1
	082 Move X0, [X22]
	083 Move [X31+8], X21
	084 Move W8, [X0+224]
	085 Compare W8, 0
	086 JumpIfNotEqual {89}
	087 Call 0x1C17DFC
	088 Move X0, [X22]
	089 Move X8, [X0+184]
	090 Move X0, [X8]
	091 Compare X0, 0
	092 JumpIfEqual {106}
	093 Move X8, 0x6C3000
	094 Move X2, [X31+8]
	095 Move X8, [X8+3496]
	096 Move W1, W19
	097 Move X3, [X8]
	098 Call Dictionary`2<Int32, Object>.Add, X0, X1, X2
	099 Move X0, [X31+8]
	100 Move X20, [X31+32]
	101 Move X19, [X31+40]
	102 Move X22, [X31+16]
	103 Move X21, [X31+24]
	104 Move X30, [X31+48]
	105 Return X0
	106 Call 0x1C17F20

Method: System.Void .cctor()

Disassembly:
	0x03A92F58 STP V0, V1, [X31 + 0x90]
	0x03A92F5C STR X8, [X31 + 0xB0]
	0x03A92F60 STP V2, V3, [X31 + 0xC0]
	0x03A92F64 STR X9, [X31 + 0xE0]
	0x03A92F68 BL 0x3C4B6D8
	0x03A92F6C LDR X8, [X19 + 0x178]
	0x03A92F70 CBZ X8, 0x3A9301C
	0x03A92F74 MOV W20, W0
	0x03A92F78 MOV X0, X8
	0x03A92F7C MOV X1, X31
	0x03A92F80 BL 0x3984C98
	0x03A92F84 TBZ X0, 0x0, 0x3A93014
	0x03A92F88 LDP V0, V1, [X31 + 0x180]
	0x03A92F8C LDR X8, [X31 + 0x1A0]
	0x03A92F90 STP V0, V1, [X31 + 0x150]
	0x03A92F94 STR X8, [X31 + 0x170]
	0x03A92F98 LDR X8, [X19 + 0x178]
	0x03A92F9C CBZ X8, 0x3A9301C
	0x03A92FA0 LDR X9, [X8 + 0x50]
	0x03A92FA4 LDP V0, V1, [X8 + 0x30]
	0x03A92FA8 MOVI V2.2D, 0x0
	0x03A92FAC ADD X0, X31, 0xF0
	0x03A92FB0 ADD X1, X31, 0x60
	0x03A92FB4 MOVN W3, 0x0
	0x03A92FB8 MOV W2, W31
	0x03A92FBC MOV W4, W31
	0x03A92FC0 MOV X5, X31
	0x03A92FC4 STR X31, [X31 + 0x110]
	0x03A92FC8 STR X9, [X31 + 0x80]
	0x03A92FCC STP V0, V1, [X31 + 0x60]
	0x03A92FD0 STP V2, V2, [X31 + 0xF0]
	0x03A92FD4 BL 0x3C4B098
	0x03A92FD8 LDP V0, V1, [X31 + 0x150]
	0x03A92FDC LDR X8, [X31 + 0x170]
	0x03A92FE0 LDP V2, V3, [X31 + 0xF0]
	0x03A92FE4 LDR X9, [X31 + 0x110]
	0x03A92FE8 ADD X0, X31, 0x30
	0x03A92FEC ADD X1, X31, 0x0
	0x03A92FF0 MOV X2, X31
	0x03A92FF4 STP V0, V1, [X31 + 0x30]
	0x03A92FF8 STR X8, [X31 + 0x50]
	0x03A92FFC STP V2, V3, [X31]
	0x03A93000 STR X9, [X31 + 0x20]
	0x03A93004 BL 0x3C4B6D8
	0x03A93008 ORR W8, W20, W0, 0x0
	0x03A9300C TBNZ X8, 0x0, 0x3A92E84
	0x03A93010 B 0x3A92EC8
	0x03A93014 TBNZ X20, 0x0, 0x3A92E84
	0x03A93018 B 0x3A92EC8
	0x03A9301C BL 0x1C16F20
	0x03A93020 SUB X31, X31, 0xA0
	0x03A93024 STR X30, [X31 + 0x80]
	0x03A93028 STP X20, X19, [X31 + 0x90]
	0x03A9302C MOV X20, X8
	0x03A93030 ADD X8, X31, 0x0
	0x03A93034 MOV X19, X0

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0x951000
	009 Move X24, 0x6BF000
	010 Move X19, 0x6BF000
	011 Move X20, 0x6C6000
	012 Move X22, 0x6BF000
	013 Move X21, 0x663000
	014 Move W8, [X23+897]
	015 Move X24, [X24+2312]
	016 Move X19, [X19+2296]
	017 Move X20, [X20+864]
	018 Move X22, [X22+1432]
	019 Move X21, [X21+3936]
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {41}
	024 Move X0, 0x6BF000
	025 Move X0, [X0+2296]
	026 Call 0x1C17CF4
	027 Move X0, 0x6BF000
	028 Move X0, [X0+2312]
	029 Call 0x1C17CF4
	030 Move X0, 0x6BF000
	031 Move X0, [X0+1432]
	032 Call 0x1C17CF4
	033 Move X0, 0x6C6000
	034 Move X0, [X0+864]
	035 Call 0x1C17CF4
	036 Move X0, 0x663000
	037 Move X0, [X0+3936]
	038 Call 0x1C17CF4
	039 Move W8, 1
	040 Move [X23+897], W8
	041 Move X0, [X24]
	042 Call 0x1C17F10
	043 Move X1, [X19]
	044 Move X19, X0
	045 Call Dictionary`2<Int32, Object>..ctor, X0
	046 Move X8, [X20]
	047 Move X8, [X8+184]
	048 Move [X8], X19
	049 Move X0, [X22]
	050 Call 0x1C17F10
	051 Move X1, [X21]
	052 Move X2, X31
	053 Move X19, X0
	054 Call ProfilingSampler..ctor, X0, X1
	055 Move X8, [X20]
	056 Move X22, [X31+32]
	057 Move X21, [X31+40]
	058 Move X24, [X31+16]
	059 Move X23, [X31+24]
	060 Move X8, [X8+184]
	061 Move [X8+8], X19
	062 Move X20, [X31+48]
	063 Move X19, [X31+56]
	064 Move X30, [X31+64]
	065 Return 

