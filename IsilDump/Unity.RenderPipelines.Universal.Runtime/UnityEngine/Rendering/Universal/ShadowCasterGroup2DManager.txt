Type: UnityEngine.Rendering.Universal.ShadowCasterGroup2DManager

Method: System.Collections.Generic.List`1<UnityEngine.Rendering.Universal.ShadowCasterGroup2D> get_shadowCasterGroups()

Disassembly:
	0x03A28E90 FMIN S2, S0, S2
	0x03A28E94 FCMP S0, S1
	0x03A28E98 FCSEL S0, S2, S1, PL
	0x03A28E9C LDP S1, S2, [X21 + 0xF0]
	0x03A28EA0 MOVZ W9, 0x80000000
	0x03A28EA4 ADD X0, X31, 0x80
	0x03A28EA8 MOV X3, X31
	0x03A28EAC SCVTF S1, S1
	0x03A28EB0 SCVTF S2, S2
	0x03A28EB4 FMUL S1, S0, S1
	0x03A28EB8 FMUL S0, S0, S2
	0x03A28EBC FMOV S2, W8
	0x03A28EC0 FCVTZS W8, S1
	0x03A28EC4 FCMP S1, S2
	0x03A28EC8 FCVTZS W10, S0
	0x03A28ECC CSEL W1, W9, W8, EQ
	0x03A28ED0 FCMP S0, S2
	0x03A28ED4 CSEL W2, W9, W10, EQ

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x9BB000
	005 Move X20, 0x72D000
	006 Move W8, [X19+50]
	007 Move X20, [X20+1520]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x72D000
	013 Move X0, [X0+1520]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+50], W8
	017 Move X8, [X20]
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X8, [X8+184]
	021 Move X0, [X8]
	022 Move X30, [X31+32]
	023 Return X0

Method: System.Void CacheValues()

Disassembly:
	0x03A28ED8 BL 0x3C227F4
	0x03A28EDC ADD X0, X31, 0x80
	0x03A28EE0 MOV W1, W31
	0x03A28EE4 MOV X2, X31
	0x03A28EE8 BL 0x3C22B28
	0x03A28EEC ADD X0, X31, 0x80
	0x03A28EF0 MOV W1, W31
	0x03A28EF4 MOV X2, X31
	0x03A28EF8 BL 0x3C22B44
	0x03A28EFC ADD X0, X31, 0x80
	0x03A28F00 MOVZ W1, 0x18
	0x03A28F04 MOV X2, X31
	0x03A28F08 BL 0x3C22520
	0x03A28F0C ADD X0, X31, 0x80
	0x03A28F10 MOVZ W1, 0x8
	0x03A28F14 MOV X2, X31
	0x03A28F18 BL 0x3C2240C
	0x03A28F1C MOVZ W8, 0x1
	0x03A28F20 MOVZ W9, 0x2
	0x03A28F24 STR W8, [X31 + 0x88]
	0x03A28F28 STR W9, [X31 + 0xA0]
	0x03A28F2C LDP V0, V1, [X31 + 0x80]
	0x03A28F30 LDR V2, [X31 + 0xA]
	0x03A28F34 LDR W8, [X31 + 0xB0]
	0x03A28F38 STP V0, V1, [X31 + 0x40]
	0x03A28F3C STR V2, [X31 + 0x6]
	0x03A28F40 STR W8, [X31 + 0x70]
	0x03A28F44 CBZ X19, 0x3A28F8C
	0x03A28F48 LDP V0, V1, [X31 + 0x40]
	0x03A28F4C LDR V2, [X31 + 0x6]
	0x03A28F50 LDR W8, [X31 + 0x70]
	0x03A28F54 ADD X2, X31, 0x0
	0x03A28F58 MOVZ W3, 0x1
	0x03A28F5C MOV X0, X19
	0x03A28F60 MOV W1, W20
	0x03A28F64 MOV X4, X31
	0x03A28F68 STP V0, V1, [X31]
	0x03A28F6C STR V2, [X31 + 0x2]
	0x03A28F70 STR W8, [X31 + 0x30]
	0x03A28F74 BL 0x3C4CB34
	0x03A28F78 LDP X20, X19, [X31 + 0xE0]
	0x03A28F7C LDP X22, X21, [X31 + 0xD0]
	0x03A28F80 LDP X30, X23, [X31 + 0xC0]
	0x03A28F84 ADD X31, X31, 0xF0
	0x03A28F88 RET
	0x03A28F8C BL 0x1C16F20
	0x03A28F90 STP X29, X30, [X31 - 0x50]!
	0x03A28F94 STP X26, X25, [X31 + 0x10]
	0x03A28F98 STP X24, X23, [X31 + 0x20]
	0x03A28F9C STP X22, X21, [X31 + 0x30]
	0x03A28FA0 STP X20, X19, [X31 + 0x40]
	0x03A28FA4 SUB X31, X31, 0x5D0
	0x03A28FA8 ADRP X24, 0x9BA000
	0x03A28FAC LDRB W8, [X24 + 0x45]
	0x03A28FB0 MOV W19, W5
	0x03A28FB4 MOV X20, X4
	0x03A28FB8 MOV W21, W3
	0x03A28FBC MOV X22, X2
	0x03A28FC0 MOV X25, X1
	0x03A28FC4 MOV X23, X0
	0x03A28FC8 TBNZ X8, 0x0, 0x3A28FE0
	0x03A28FCC ADRP X0, 0x72C000
	0x03A28FD0 LDR X0, [X0 + 0x6A0]
	0x03A28FD4 BL 0x1C16CF4
	0x03A28FD8 MOVZ W8, 0x1
	0x03A28FDC STRB W8, [X24 + 0x45]
	0x03A28FE0 ADRP X26, 0x72C000
	0x03A28FE4 LDR X26, [X26 + 0x6A0]
	0x03A28FE8 ADD W8, W19, 0x3
	0x03A28FEC CMP W19, 0x0
	0x03A28FF0 CSEL W8, W8, W19, LT
	0x03A28FF4 AND W9, W8, 0xFFFFFFFC
	0x03A28FF8 SUBS W24, W19, W9
	0x03A28FFC SBFM W19, W8, 0x2, 0x1F
	0x03A29000 B.NE 0x3A29048
	0x03A29004 ADD X0, X31, 0x310
	0x03A29008 MOVZ W2, 0x2B8
	0x03A2900C MOV X1, X25
	0x03A29010 BL 0x3EB1AC0
	0x03A29014 LDR X0, [X26]
	0x03A29018 LDR W8, [X0 + 0xE0]
	0x03A2901C CBNZ W8, 0x3A29024
	0x03A29020 BL 0x1C16DFC
	0x03A29024 ADD X0, X31, 0x58
	0x03A29028 ADD X1, X31, 0x310
	0x03A2902C MOVZ W2, 0x2B8
	0x03A29030 BL 0x3EB1AC0
	0x03A29034 ADD X1, X31, 0x58
	0x03A29038 MOV X0, X23
	0x03A2903C MOV X2, X22

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X19, 0x9BB000
	010 Move W8, [X19+51]
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {26}
	015 Move X0, 0x72D000
	016 Move X0, [X0+2800]
	017 Call 0x1C17CF4
	018 Move X0, 0x72D000
	019 Move X0, [X0+2808]
	020 Call 0x1C17CF4
	021 Move X0, 0x6CC000
	022 Move X0, [X0+1432]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X19+51], W8
	026 Move X22, 0x9BB000
	027 Move W8, [X22+14]
	028 Compare W8, 0
	029 JumpIfNotEqual {35}
	030 Move X0, 0x72D000
	031 Move X0, [X0+1520]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X22+14], W8
	035 Move X19, 0x72D000
	036 Move X19, [X19+1520]
	037 Move X8, [X19]
	038 Move X8, [X8+184]
	039 Move X8, [X8]
	040 Compare X8, 0
	041 JumpIfEqual {100}
	042 Move X23, 0x72D000
	043 Move X24, 0x6CC000
	044 Move X23, [X23+2808]
	045 Move X24, [X24+1432]
	046 Move W20, W31
	047 Move W25, 1
	048 Move W8, 1
	049 And W31, W8, 255
	050 Move X0, X19
	051 Call 0x1C17CF4
	052 Move [X22+14], W25
	053 Move X8, [X19]
	054 Move X8, [X8+184]
	055 Move X0, [X8]
	056 Compare X0, 0
	057 JumpIfEqual {109}
	058 Move W8, [X0+24]
	059 NotImplemented "Instruction CMP not yet implemented."
	060 Move X2, [X23]
	061 Move W1, W20
	062 Call List`1<Object>.get_Item, X0, X1
	063 Move X8, [X24]
	064 Move X21, X0
	065 Move W9, [X8+224]
	066 Compare W9, 0
	067 JumpIfNotEqual {70}
	068 Move X0, X8
	069 Call 0x1C17DFC
	070 Move X0, X21
	071 Move X1, X31
	072 Move X2, X31
	073 Call Object.op_Inequality, X0, X1
	074 Move TEMP, X0
	075 And TEMP, TEMP, 1
	076 Compare TEMP, 1
	077 JumpIfNotEqual {98}
	078 Move W8, [X22+14]
	079 Compare W8, 0
	080 JumpIfNotEqual {84}
	081 Move X0, X19
	082 Call 0x1C17CF4
	083 Move [X22+14], W25
	084 Move X8, [X19]
	085 Move X8, [X8+184]
	086 Move X0, [X8]
	087 Compare X0, 0
	088 JumpIfEqual {109}
	089 Move X2, [X23]
	090 Move W1, W20
	091 Call List`1<Object>.get_Item, X0, X1
	092 Compare X0, 0
	093 JumpIfEqual {109}
	094 Move X8, [X0]
	095 Move X9, [X8+376]
	096 Move X1, [X8+384]
	097 NotImplemented "Instruction BLR not yet implemented."
	098 Move W8, [X22+14]
	099 Add W20, W20, 1
	100 Move X20, [X31+48]
	101 Move X19, [X31+56]
	102 Move X22, [X31+32]
	103 Move X21, [X31+40]
	104 Move X24, [X31+16]
	105 Move X23, [X31+24]
	106 Move X30, [X31+64]
	107 Move X25, [X31+72]
	108 Return 
	109 Call 0x1C17F20

Method: System.Void AddShadowCasterGroupToList(UnityEngine.Rendering.Universal.ShadowCasterGroup2D shadowCaster, System.Collections.Generic.List`1<UnityEngine.Rendering.Universal.ShadowCasterGroup2D> list)

Disassembly:
	0x03A29040 MOV W3, W19
	0x03A29044 BL 0x3A28D00
	0x03A29048 LDR X0, [X26]
	0x03A2904C LDR W8, [X0 + 0xE0]
	0x03A29050 CBNZ W8, 0x3A2905C
	0x03A29054 BL 0x1C16DFC
	0x03A29058 LDR X0, [X26]
	0x03A2905C LDR X8, [X0 + 0xB8]
	0x03A29060 LDR X8, [X8 + 0x50]
	0x03A29064 CBZ X8, 0x3A2914C
	0x03A29068 LDR W9, [X8 + 0x18]
	0x03A2906C CMP W19, W9
	0x03A29070 B.CS 0x3A29150
	0x03A29074 SXTW X25, W19
	0x03A29078 ADD X8, X8, X25, 0x3, LSL
	0x03A2907C LDR X8, [X8 + 0x20]
	0x03A29080 CBZ X8, 0x3A2914C
	0x03A29084 LDR X9, [X8 + 0x48]
	0x03A29088 LDUR V0, [X8 + 0x38]
	0x03A2908C LDUR V1, [X8 + 0x28]
	0x03A29090 ADD X5, X31, 0x30
	0x03A29094 MOV X0, X23
	0x03A29098 MOV X2, X22
	0x03A2909C MOV W3, W21
	0x03A290A0 MOV X4, X20
	0x03A290A4 MOV W6, W24
	0x03A290A8 STR X9, [X31 + 0x50]
	0x03A290AC STP V1, V0, [X31 + 0x30]
	0x03A290B0 BL 0x3A29154
	0x03A290B4 LDR X8, [X26]
	0x03A290B8 LDR X8, [X8 + 0xB8]
	0x03A290BC LDR X9, [X8 + 0x50]
	0x03A290C0 CBZ X9, 0x3A2914C
	0x03A290C4 LDR W10, [X9 + 0x18]
	0x03A290C8 CMP W19, W10
	0x03A290CC B.CS 0x3A29150
	0x03A290D0 ADD X9, X9, X25, 0x3, LSL
	0x03A290D4 LDR X9, [X9 + 0x20]
	0x03A290D8 CBZ X9, 0x3A2914C
	0x03A290DC LDR X8, [X8 + 0x60]
	0x03A290E0 LDR X10, [X9 + 0x48]
	0x03A290E4 LDUR V0, [X9 + 0x38]
	0x03A290E8 LDUR V1, [X9 + 0x28]
	0x03A290EC STR X10, [X31 + 0x330]
	0x03A290F0 STP V1, V0, [X31 + 0x310]
	0x03A290F4 CBZ X8, 0x3A2914C
	0x03A290F8 LDP V0, V1, [X31 + 0x310]
	0x03A290FC LDR X9, [X31 + 0x330]
	0x03A29100 STP V0, V1, [X31]
	0x03A29104 STR X9, [X31 + 0x20]
	0x03A29108 LDR W9, [X8 + 0x18]
	0x03A2910C CMP W19, W9
	0x03A29110 B.CS 0x3A29150

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0x9BA000
	008 Move W8, [X21+52]
	009 Move X19, X1
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {26}
	015 Move X0, 0x72C000
	016 Move X0, [X0+2816]
	017 Call 0x1C17CF4
	018 Move X0, 0x72C000
	019 Move X0, [X0+2800]
	020 Call 0x1C17CF4
	021 Move X0, 0x72C000
	022 Move X0, [X0+2808]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X21+52], W8
	026 Compare X19, 0
	027 JumpIfEqual {62}
	028 Move W8, [X19+24]
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move X22, 0x72C000
	031 Move X22, [X22+2808]
	032 Move W21, W31
	033 Compare X20, 0
	034 JumpIfEqual {62}
	035 Move X2, [X22]
	036 Move W23, [X20+32]
	037 Move X0, X19
	038 Move W1, W21
	039 Call List`1<Object>.get_Item, X0, X1
	040 Compare X0, 0
	041 JumpIfEqual {62}
	042 Move W8, [X0+32]
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Move W8, [X19+24]
	045 Add W21, W21, 1
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Move W21, W31
	048 Move X8, 0x72C000
	049 Move X8, [X8+2816]
	050 Move X0, X19
	051 Move W1, W21
	052 Move X2, X20
	053 Move X3, [X8]
	054 Move X20, [X31+32]
	055 Move X19, [X31+40]
	056 Move X22, [X31+16]
	057 Move X21, [X31+24]
	058 Move X30, [X31+48]
	059 Move X23, [X31+56]
	060 Call List`1<Object>.Insert, X0, X1, X2
	061 Return 
	062 Call 0x1C17F20

Method: System.Void RemoveShadowCasterGroupFromList(UnityEngine.Rendering.Universal.ShadowCasterGroup2D shadowCaster, System.Collections.Generic.List`1<UnityEngine.Rendering.Universal.ShadowCasterGroup2D> list)

Disassembly:
	0x03A29114 LDR X10, [X31 + 0x20]
	0x03A29118 LDP V0, V1, [X31]
	0x03A2911C MOVZ W9, 0x28
	0x03A29120 MADD X8, X25, X9, X8
	0x03A29124 AND W0, W0, 0x1
	0x03A29128 STR X10, [X8 + 0x40]
	0x03A2912C STP V0, V1, [X8 + 0x20]
	0x03A29130 ADD X31, X31, 0x5D0
	0x03A29134 LDP X20, X19, [X31 + 0x40]
	0x03A29138 LDP X22, X21, [X31 + 0x30]
	0x03A2913C LDP X24, X23, [X31 + 0x20]
	0x03A29140 LDP X26, X25, [X31 + 0x10]
	0x03A29144 LDP X29, X30, [X31], #0x50
	0x03A29148 RET
	0x03A2914C BL 0x1C16F20
	0x03A29150 BL 0x1C16F28
	0x03A29154 STR D8, [X31 - 0x70]!
	0x03A29158 STP X29, X30, [X31 + 0x10]
	0x03A2915C STP X28, X27, [X31 + 0x20]
	0x03A29160 STP X26, X25, [X31 + 0x30]
	0x03A29164 STP X24, X23, [X31 + 0x40]
	0x03A29168 STP X22, X21, [X31 + 0x50]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x9BA000
	006 Move W8, [X21+53]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x72C000
	014 Move X0, [X0+2824]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+53], W8
	018 Compare X19, 0
	019 JumpIfEqual {31}
	020 Move X8, 0x72C000
	021 Move X8, [X8+2824]
	022 Move X0, X19
	023 Move X1, X20
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X2, [X8]
	027 Move X30, [X31+32]
	028 Move X21, [X31+40]
	029 Call List`1<Object>.Remove, X0, X1
	030 Return 
	031 Call 0x1C17F20

Method: UnityEngine.Rendering.Universal.CompositeShadowCaster2D FindTopMostCompositeShadowCaster(UnityEngine.Rendering.Universal.ShadowCaster2D shadowCaster)

Disassembly:
	0x03A2916C STP X20, X19, [X31 + 0x60]
	0x03A29170 SUB X31, X31, 0x230
	0x03A29174 STR X6, [X31 + 0x8]
	0x03A29178 STR W3, [X31 + 0x23C]
	0x03A2917C ADRP X21, 0x9B9000
	0x03A29180 ADRP X24, 0x72B000
	0x03A29184 LDRB W8, [X21 + 0x4B]
	0x03A29188 LDR X24, [X24 + 0x6A0]
	0x03A2918C MOV X23, X5
	0x03A29190 MOV X19, X4
	0x03A29194 MOV X22, X2
	0x03A29198 MOV X26, X0
	0x03A2919C TBNZ X8, 0x0, 0x3A29208
	0x03A291A0 ADRP X0, 0x6D0000
	0x03A291A4 LDR X0, [X0 + 0x7A0]
	0x03A291A8 BL 0x1C16CF4
	0x03A291AC ADRP X0, 0x72B000
	0x03A291B0 LDR X0, [X0 + 0x660]
	0x03A291B4 BL 0x1C16CF4
	0x03A291B8 ADRP X0, 0x72B000
	0x03A291BC LDR X0, [X0 + 0xAF0]
	0x03A291C0 BL 0x1C16CF4
	0x03A291C4 ADRP X0, 0x72B000
	0x03A291C8 LDR X0, [X0 + 0xAC0]
	0x03A291CC BL 0x1C16CF4
	0x03A291D0 ADRP X0, 0x72B000
	0x03A291D4 LDR X0, [X0 + 0xAF8]
	0x03A291D8 BL 0x1C16CF4
	0x03A291DC ADRP X0, 0x72B000
	0x03A291E0 LDR X0, [X0 + 0xAC8]
	0x03A291E4 BL 0x1C16CF4
	0x03A291E8 ADRP X0, 0x6CA000
	0x03A291EC LDR X0, [X0 + 0x598]
	0x03A291F0 BL 0x1C16CF4
	0x03A291F4 ADRP X0, 0x72B000
	0x03A291F8 LDR X0, [X0 + 0x6A0]
	0x03A291FC BL 0x1C16CF4
	0x03A29200 MOVZ W8, 0x1
	0x03A29204 STRB W8, [X21 + 0x4B]
	0x03A29208 LDR X0, [X24]
	0x03A2920C MOVI V0.2D, 0x0
	0x03A29210 STRB W31, [X31 + 0x238]
	0x03A29214 STRB W31, [X31 + 0x228]
	0x03A29218 STR X31, [X31 + 0x220]
	0x03A2921C STP V0, V0, [X31 + 0x200]
	0x03A29220 STP V0, V0, [X31 + 0x1E0]
	0x03A29224 LDR W8, [X0 + 0xE0]
	0x03A29228 CBNZ W8, 0x3A29234
	0x03A2922C BL 0x1C16DFC
	0x03A29230 LDR X0, [X24]
	0x03A29234 LDR X8, [X0 + 0xB8]
	0x03A29238 ADD X0, X31, 0x238
	0x03A2923C MOV X1, X22
	0x03A29240 MOV X3, X31
	0x03A29244 LDR X2, [X8 + 0x28]
	0x03A29248 BL 0x39B1DB0
	0x03A2924C ADRP X21, 0x9B9000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x9BA000
	007 Move W8, [X20+54]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0x72C000
	014 Move X0, [X0+2832]
	015 Call 0x1C17CF4
	016 Move X0, 0x6CB000
	017 Move X0, [X0+1432]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X20+54], W8
	021 Move [X31+8], X31
	022 Compare X19, 0
	023 JumpIfEqual {70}
	024 Move X0, X19
	025 Move X1, X31
	026 Call Component.get_transform, X0
	027 Compare X0, 0
	028 JumpIfEqual {70}
	029 Move X21, 0x6CB000
	030 Move X22, 0x72C000
	031 Move X21, [X21+1432]
	032 Move X22, [X22+2832]
	033 Move X1, X31
	034 Call Transform.get_parent, X0
	035 Move X20, X0
	036 Move X19, X31
	037 Move X0, [X21]
	038 Move W8, [X0+224]
	039 Compare W8, 0
	040 JumpIfNotEqual {42}
	041 Call 0x1C17DFC
	042 Move X0, X20
	043 Move X1, X31
	044 Move X2, X31
	045 Call Object.op_Inequality, X0, X1
	046 Move TEMP, X0
	047 And TEMP, TEMP, 1
	048 Compare TEMP, 1
	049 JumpIfNotEqual {63}
	050 Compare X20, 0
	051 JumpIfEqual {70}
	052 Move X2, [X22]
	053 Add X1, X31, 8
	054 Move X0, X20
	055 Call 0x21A5990, X0, X1
	056 Move X8, [X31+8]
	057 And W31, W0, 1
	058 Move X0, X20
	059 Move X1, X31
	060 NotImplemented "Instruction CSEL not yet implemented."
	061 Call Transform.get_parent, X0
	062 Move X20, X0
	063 Move X0, X19
	064 Move X20, [X31+32]
	065 Move X19, [X31+40]
	066 Move X22, [X31+16]
	067 Move X21, [X31+24]
	068 Move X30, [X31+48]
	069 Return X0
	070 Call 0x1C17F20

Method: System.Boolean AddToShadowCasterGroup(UnityEngine.Rendering.Universal.ShadowCaster2D shadowCaster, ref UnityEngine.Rendering.Universal.ShadowCasterGroup2D shadowCasterGroup)

Disassembly:
	0x03A28874 BL 0x1C16DFC
	0x03A28878 MOV X0, X21
	0x03A2887C MOV X1, X22
	0x03A28880 MOV X2, X31
	0x03A28884 BL 0x3C354F8
	0x03A28888 TBZ X0, 0x0, 0x3A288E0
	0x03A2888C ADRP X8, 0x72C000
	0x03A28890 LDR X8, [X8 + 0x6A0]
	0x03A28894 LDR X21, [X20 + 0xB8]
	0x03A28898 LDR X0, [X8]
	0x03A2889C LDR W8, [X0 + 0xE0]
	0x03A288A0 CBNZ W8, 0x3A288A8
	0x03A288A4 BL 0x1C16DFC
	0x03A288A8 MOV X0, X21
	0x03A288AC MOV W1, W31
	0x03A288B0 BL 0x3A2868C
	0x03A288B4 STR X0, [X20 + 0x110]
	0x03A288B8 CBZ X0, 0x3A288E8
	0x03A288BC LDR W8, [X0 + 0x18]
	0x03A288C0 CMP W8, W19
	0x03A288C4 B.LS 0x3A288EC
	0x03A288C8 ADD X8, X0, W19, 0x3, SXTW
	0x03A288CC LDR X0, [X8 + 0x20]
	0x03A288D0 LDP X20, X19, [X31 + 0x20]
	0x03A288D4 LDP X22, X21, [X31 + 0x10]
	0x03A288D8 LDR X30, [X31], #0x30
	0x03A288DC RET
	0x03A288E0 LDR X0, [X20 + 0x110]
	0x03A288E4 CBNZ X0, 0x3A288BC
	0x03A288E8 BL 0x1C16F20
	0x03A288EC BL 0x1C16F28
	0x03A288F0 STR X30, [X31 - 0x30]!
	0x03A288F4 STP X22, X21, [X31 + 0x10]
	0x03A288F8 STP X20, X19, [X31 + 0x20]
	0x03A288FC ADRP X21, 0x9BA000
	0x03A28900 LDRB W8, [X21 + 0x40]
	0x03A28904 MOV W19, W1
	0x03A28908 MOV X20, X0
	0x03A2890C TBNZ X8, 0x0, 0x3A28930
	0x03A28910 ADRP X0, 0x6CB000
	0x03A28914 LDR X0, [X0 + 0x598]
	0x03A28918 BL 0x1C16CF4
	0x03A2891C ADRP X0, 0x72C000
	0x03A28920 LDR X0, [X0 + 0x6A0]
	0x03A28924 BL 0x1C16CF4
	0x03A28928 MOVZ W8, 0x1
	0x03A2892C STRB W8, [X21 + 0x40]
	0x03A28930 CBZ X20, 0x3A289EC
	0x03A28934 LDR X8, [X20 + 0x118]
	0x03A28938 CBZ X8, 0x3A28990
	0x03A2893C LDR X9, [X8 + 0x18]
	0x03A28940 CBZ X9, 0x3A28990
	0x03A28944 CBZ W9, 0x3A289F0
	0x03A28948 LDR X0, [X8 + 0x20]
	0x03A2894C CBZ X0, 0x3A289EC
	0x03A28950 LDR X21, [X20 + 0xB8]
	0x03A28954 MOV X1, X31
	0x03A28958 BL 0x3C14714
	0x03A2895C ADRP X8, 0x6CB000
	0x03A28960 LDR X8, [X8 + 0x598]
	0x03A28964 MOV X22, X0
	0x03A28968 LDR X8, [X8]
	0x03A2896C LDR W9, [X8 + 0xE0]
	0x03A28970 CBNZ W9, 0x3A2897C
	0x03A28974 MOV X0, X8
	0x03A28978 BL 0x1C16DFC
	0x03A2897C MOV X0, X21
	0x03A28980 MOV X1, X22
	0x03A28984 MOV X2, X31
	0x03A28988 BL 0x3C354F8
	0x03A2898C TBZ X0, 0x0, 0x3A289E4
	0x03A28990 ADRP X8, 0x72C000
	0x03A28994 LDR X8, [X8 + 0x6A0]
	0x03A28998 LDR X21, [X20 + 0xB8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x9BB000
	007 Move X22, 0x6CC000
	008 Move W8, [X21+55]
	009 Move X22, [X22+1432]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x72D000
	017 Move X0, [X0+2744]
	018 Call 0x1C17CF4
	019 Move X0, 0x6CC000
	020 Move X0, [X0+1432]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X21+55], W8
	024 Move X0, X20
	025 Call ShadowCasterGroup2DManager.FindTopMostCompositeShadowCaster, X0
	026 Move X8, [X22]
	027 Move [X31+8], X0
	028 Move X21, X0
	029 Move W9, [X8+224]
	030 Compare W9, 0
	031 JumpIfNotEqual {34}
	032 Move X0, X8
	033 Call 0x1C17DFC
	034 Move X0, X21
	035 Move X1, X31
	036 Move X2, X31
	037 Call Object.op_Equality, X0, X1
	038 Move TEMP, X0
	039 And TEMP, TEMP, 1
	040 Compare TEMP, 1
	041 JumpIfNotEqual {51}
	042 Compare X20, 0
	043 JumpIfEqual {94}
	044 Move X8, 0x72D000
	045 Move X8, [X8+2744]
	046 Add X1, X31, 8
	047 Move X0, X20
	048 Move X2, [X8]
	049 Call 0x21A5990, X0, X1
	050 Move X21, [X31+8]
	051 Move X0, [X22]
	052 Move W8, [X0+224]
	053 Compare W8, 0
	054 JumpIfNotEqual {56}
	055 Call 0x1C17DFC
	056 Move X0, X21
	057 Move X1, X31
	058 Move X2, X31
	059 Call Object.op_Inequality, X0, X1
	060 Move TEMP, X0
	061 And TEMP, TEMP, 1
	062 Compare TEMP, 1
	063 JumpIfNotEqual {87}
	064 Move X0, [X22]
	065 Move X21, [X19]
	066 Move X22, [X31+8]
	067 Move W8, [X0+224]
	068 Compare W8, 0
	069 JumpIfNotEqual {71}
	070 Call 0x1C17DFC
	071 Move X0, X21
	072 Move X1, X22
	073 Move X2, X31
	074 Call Object.op_Inequality, X0, X1
	075 Move TEMP, X0
	076 And TEMP, TEMP, 1
	077 Compare TEMP, 1
	078 JumpIfNotEqual {87}
	079 Move X0, [X31+8]
	080 Compare X0, 0
	081 JumpIfEqual {94}
	082 Move X1, X20
	083 Call ShadowCasterGroup2D.RegisterShadowCaster2D, X0, X1
	084 Move X8, [X31+8]
	085 Move W0, 1
	086 Move [X19], X8
	087 Move W0, W31
	088 Move X20, [X31+32]
	089 Move X19, [X31+40]
	090 Move X22, [X31+16]
	091 Move X21, [X31+24]
	092 Move X30, [X31+48]
	093 Return X0
	094 Call 0x1C17F20

Method: System.Void RemoveFromShadowCasterGroup(UnityEngine.Rendering.Universal.ShadowCaster2D shadowCaster, UnityEngine.Rendering.Universal.ShadowCasterGroup2D shadowCasterGroup)

Disassembly:
	0x03A285FC LDR W9, [X0 + 0xE0]
	0x03A28600 CBNZ W9, 0x3A28618
	0x03A28604 BL 0x1C16DFC
	0x03A28608 LDR X8, [X19]
	0x03A2860C LDR X8, [X8 + 0xB8]
	0x03A28610 LDR X8, [X8 + 0x60]
	0x03A28614 CBZ X8, 0x3A2867C
	0x03A28618 LDRSW X8, [X8 + 0x18]
	0x03A2861C CMP X8, W20, UXTW
	0x03A28620 B.EQ 0x3A2865C
	0x03A28624 ADRP X8, 0x72C000
	0x03A28628 LDR X8, [X8 + 0xB18]
	0x03A2862C MOV W1, W20
	0x03A28630 LDR X0, [X8]
	0x03A28634 BL 0x1C16D6C
	0x03A28638 LDR X8, [X19]
	0x03A2863C MOV X20, X0
	0x03A28640 LDR W9, [X8 + 0xE0]
	0x03A28644 CBNZ W9, 0x3A28654
	0x03A28648 MOV X0, X8
	0x03A2864C BL 0x1C16DFC
	0x03A28650 LDR X8, [X19]
	0x03A28654 LDR X8, [X8 + 0xB8]
	0x03A28658 STR X20, [X8 + 0x60]
	0x03A2865C LDP X20, X19, [X31 + 0xC0]
	0x03A28660 LDP X22, X21, [X31 + 0xB0]
	0x03A28664 LDP X24, X23, [X31 + 0xA0]
	0x03A28668 LDP X26, X25, [X31 + 0x90]
	0x03A2866C LDP X30, X27, [X31 + 0x80]
	0x03A28670 ADD X31, X31, 0xD0
	0x03A28674 RET
	0x03A28678 BL 0x1C16F28
	0x03A2867C BL 0x1C16F20
	0x03A28680 BL 0x1C16F44
	0x03A28684 MOV X1, X31
	0x03A28688 BL 0x1C16DEC
	0x03A2868C STP X30, X27, [X31 - 0x50]!
	0x03A28690 STP X26, X25, [X31 + 0x10]
	0x03A28694 STP X24, X23, [X31 + 0x20]
	0x03A28698 STP X22, X21, [X31 + 0x30]
	0x03A2869C STP X20, X19, [X31 + 0x40]
	0x03A286A0 ADRP X22, 0x9BA000
	0x03A286A4 ADRP X21, 0x6D2000
	0x03A286A8 LDRB W8, [X22 + 0x3E]
	0x03A286AC LDR X21, [X21 + 0x7A0]
	0x03A286B0 MOV W19, W1
	0x03A286B4 MOV X20, X0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x9BB000
	007 Move X21, 0x6CC000
	008 Move W8, [X22+56]
	009 Move X21, [X21+1432]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x6CC000
	017 Move X0, [X0+1432]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+56], W8
	021 Move X0, [X21]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move X0, X19
	027 Move X1, X31
	028 Move X2, X31
	029 Call Object.op_Inequality, X0, X1
	030 Move TEMP, X0
	031 And TEMP, TEMP, 1
	032 Compare TEMP, 1
	033 JumpIfNotEqual {39}
	034 Compare X19, 0
	035 JumpIfEqual {66}
	036 Move X0, X19
	037 Move X1, X20
	038 Call ShadowCasterGroup2D.UnregisterShadowCaster2D, X0, X1
	039 Move X0, [X21]
	040 Move W8, [X0+224]
	041 Compare W8, 0
	042 JumpIfNotEqual {44}
	043 Call 0x1C17DFC
	044 Move X0, X19
	045 Move X1, X20
	046 Move X2, X31
	047 Call Object.op_Equality, X0, X1
	048 Move TEMP, X0
	049 And TEMP, TEMP, 1
	050 Compare TEMP, 1
	051 JumpIfNotEqual {60}
	052 Move X0, X19
	053 Move X20, [X31+32]
	054 Move X19, [X31+40]
	055 Move X22, [X31+16]
	056 Move X21, [X31+24]
	057 Move X30, [X31+48]
	058 Call ShadowCasterGroup2DManager.RemoveGroup, X0
	059 Return 
	060 Move X20, [X31+32]
	061 Move X19, [X31+40]
	062 Move X22, [X31+16]
	063 Move X21, [X31+24]
	064 Move X30, [X31+48]
	065 Return 
	066 Call 0x1C17F20

Method: System.Void AddGroup(UnityEngine.Rendering.Universal.ShadowCasterGroup2D group)

Disassembly:
	0x03A27468 LDR X24, [X31 + 0x18]
	0x03A2746C CBZ X24, 0x3A275F0
	0x03A27470 ADRP X8, 0x728000
	0x03A27474 LDR X8, [X8 + 0x188]
	0x03A27478 ADRP X19, 0x72D000
	0x03A2747C ADRP X20, 0x72D000
	0x03A27480 LDR X19, [X19 + 0xA80]
	0x03A27484 LDR X20, [X20 + 0xA78]
	0x03A27488 LDR X2, [X8]
	0x03A2748C ADRP X21, 0x6F9000
	0x03A27490 ADRP X22, 0x6F8000
	0x03A27494 ADRP X23, 0x6CD000
	0x03A27498 LDR X21, [X21 + 0x6C0]
	0x03A2749C LDR X22, [X22 + 0x5B0]
	0x03A274A0 LDR X23, [X23 + 0xE18]
	0x03A274A4 MOV X0, X24
	0x03A274A8 MOV X1, X27
	0x03A274AC BL 0x2F6D654
	0x03A274B0 LDR X26, [X31 + 0x10]
	0x03A274B4 LDR W0, [X28 + 0x18]
	0x03A274B8 MOV X1, X26
	0x03A274BC BL 0x3A2B104
	0x03A274C0 LDR X0, [X19]
	0x03A274C4 BL 0x1C16F10
	0x03A274C8 LDR X1, [X20]
	0x03A274CC MOV X25, X0
	0x03A274D0 BL 0x3140060
	0x03A274D4 MOV X0, X28
	0x03A274D8 MOV X1, X29
	0x03A274DC MOV X2, X25
	0x03A274E0 BL 0x3A2A894
	0x03A274E4 MOV X0, X25
	0x03A274E8 BL 0x3A2AC88
	0x03A274EC MOV X0, X28
	0x03A274F0 MOV X1, X24
	0x03A274F4 MOV X2, X29
	0x03A274F8 MOV X3, X26
	0x03A274FC MOV X4, X25
	0x03A27500 BL 0x3A2ACD8
	0x03A27504 LDR X1, [X21]
	0x03A27508 MOV X0, X24
	0x03A2750C BL 0x2F6F36C
	0x03A27510 LDR X1, [X22]
	0x03A27514 MOV X24, X0
	0x03A27518 MOV X0, X28
	0x03A2751C BL 0x30CE118
	0x03A27520 LDR X1, [X23]
	0x03A27524 MOV X21, X0
	0x03A27528 MOV X0, X29
	0x03A2752C BL 0x2FDE4C8
	0x03A27530 CBZ X26, 0x3A275F0
	0x03A27534 ADRP X8, 0x6F9000
	0x03A27538 LDR X8, [X8 + 0x758]
	0x03A2753C MOV X22, X0
	0x03A27540 MOV X0, X26
	0x03A27544 LDR X1, [X8]
	0x03A27548 BL 0x30D0D68
	0x03A2754C LDR X19, [X31 + 0x8]
	0x03A27550 CBZ X19, 0x3A275F0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x9BC000
	006 Move X21, 0x6CD000
	007 Move W8, [X20+57]
	008 Move X21, [X21+1432]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {28}
	014 Move X0, 0x72E000
	015 Move X0, [X0+1552]
	016 Call 0x1C17CF4
	017 Move X0, 0x72E000
	018 Move X0, [X0+1544]
	019 Call 0x1C17CF4
	020 Move X0, 0x6CD000
	021 Move X0, [X0+1432]
	022 Call 0x1C17CF4
	023 Move X0, 0x72E000
	024 Move X0, [X0+1520]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X20+57], W8
	028 Move X0, [X21]
	029 Move W8, [X0+224]
	030 Compare W8, 0
	031 JumpIfNotEqual {33}
	032 Call 0x1C17DFC
	033 Move X0, X19
	034 Move X1, X31
	035 Move X2, X31
	036 Call Object.op_Equality, X0, X1
	037 Move TEMP, X0
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfNotEqual {46}
	041 Move X20, [X31+16]
	042 Move X19, [X31+24]
	043 Move X30, [X31+32]
	044 Move X21, [X31+40]
	045 Return 
	046 Move X21, 0x72E000
	047 Move X21, [X21+1520]
	048 Move X8, [X21]
	049 Move X8, [X8+184]
	050 Move X1, [X8]
	051 Compare X1, 0
	052 JumpIfNotEqual {68}
	053 Move X8, 0x72E000
	054 Move X8, [X8+1544]
	055 Move X0, [X8]
	056 Call 0x1C17F10
	057 Move X8, 0x72E000
	058 Move X8, [X8+1552]
	059 Move X20, X0
	060 Move X1, [X8]
	061 Call List`1<Object>..ctor, X0
	062 Move X8, [X21]
	063 Move X8, [X8+184]
	064 Move [X8], X20
	065 Move X8, [X21]
	066 Move X8, [X8+184]
	067 Move X1, [X8]
	068 Move X0, X19
	069 Move X20, [X31+16]
	070 Move X19, [X31+24]
	071 Move X30, [X31+32]
	072 Move X21, [X31+40]
	073 Call ShadowCasterGroup2DManager.AddShadowCasterGroupToList, X0, X1
	074 Return 

Method: System.Void RemoveGroup(UnityEngine.Rendering.Universal.ShadowCasterGroup2D group)

Disassembly:
	0x03A27558 MOV X0, X19
	0x03A2755C MOV X1, X31
	0x03A27560 BL 0x3C19C94
	0x03A27564 MOV X0, X19
	0x03A27568 MOV X1, X21
	0x03A2756C MOV X2, X31
	0x03A27570 BL 0x3C17F08
	0x03A27574 MOV X0, X19
	0x03A27578 MOV X1, X22
	0x03A2757C MOV X2, X31
	0x03A27580 BL 0x3C18FF0
	0x03A27584 MOV X0, X19
	0x03A27588 MOV X1, X23
	0x03A2758C MOV X2, X31
	0x03A27590 BL 0x3C18060
	0x03A27594 MOV X0, X19
	0x03A27598 MOV X1, X24
	0x03A2759C MOV X2, X31
	0x03A275A0 BL 0x3C18264
	0x03A275A4 ADD X8, X31, 0x28
	0x03A275A8 MOV X0, X21
	0x03A275AC BL 0x3A27B3C
	0x03A275B0 LDR X8, [X31 + 0x38]
	0x03A275B4 LDUR V0, [X31 + 0x28]
	0x03A275B8 LDR X9, [X31]
	0x03A275BC LDP X20, X19, [X31 + 0xC0]
	0x03A275C0 LDP X22, X21, [X31 + 0xB0]
	0x03A275C4 LDP X24, X23, [X31 + 0xA0]
	0x03A275C8 LDP X26, X25, [X31 + 0x90]
	0x03A275CC LDP X28, X27, [X31 + 0x80]
	0x03A275D0 LDP X29, X30, [X31 + 0x70]
	0x03A275D4 LDP D9, D8, [X31 + 0x60]
	0x03A275D8 LDR V10, [X31 + 0x50]
	0x03A275DC STR X8, [X9 + 0x10]
	0x03A275E0 STR V0, [X9]
	0x03A275E4 ADD X31, X31, 0xD0
	0x03A275E8 RET
	0x03A275EC BL 0x1C16F28

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x9BC000
	006 Move X21, 0x6CD000
	007 Move W8, [X20+58]
	008 Move X21, [X21+1432]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x6CD000
	015 Move X0, [X0+1432]
	016 Call 0x1C17CF4
	017 Move X0, 0x72E000
	018 Move X0, [X0+1520]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X20+58], W8
	022 Move X0, [X21]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 Move X0, X19
	028 Move X1, X31
	029 Move X2, X31
	030 Call Object.op_Inequality, X0, X1
	031 Move TEMP, X0
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfNotEqual {49}
	035 Move X8, 0x72E000
	036 Move X8, [X8+1520]
	037 Move X8, [X8]
	038 Move X8, [X8+184]
	039 Move X1, [X8]
	040 Compare X1, 0
	041 JumpIfEqual {49}
	042 Move X0, X19
	043 Move X20, [X31+16]
	044 Move X19, [X31+24]
	045 Move X30, [X31+32]
	046 Move X21, [X31+40]
	047 Call ShadowCasterGroup2DManager.RemoveShadowCasterGroupFromList, X0, X1
	048 Return 
	049 Move X20, [X31+16]
	050 Move X19, [X31+24]
	051 Move X30, [X31+32]
	052 Move X21, [X31+40]
	053 Return 

Method: System.Void .ctor()

Disassembly:
	0x03A29250 LDRB W8, [X21 + 0xE]
	0x03A29254 CBNZ W8, 0x3A2926C

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

