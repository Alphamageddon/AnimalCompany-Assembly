Type: UnityEngine.Rendering.Universal.DebugRenderSetup

Method: UnityEngine.Rendering.Universal.DebugDisplaySettingsMaterial get_MaterialSettings()

Disassembly:
	0x03A38B50 LDR W8, [X19 + 0xF4]
	0x03A38B54 LDR X0, [X22]
	0x03A38B58 MOVZ W9, 0x1
	0x03A38B5C STR W9, [X31 + 0x8]
	0x03A38B60 STR W8, [X31 + 0x1C]
	0x03A38B64 LDR W8, [X0 + 0xE0]
	0x03A38B68 ADD X21, X20, 0x130
	0x03A38B6C CBNZ W8, 0x3A38B78
	0x03A38B70 BL 0x1C16DFC

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+16]
	003 Compare X8, 0
	004 JumpIfEqual {11}
	005 Move X8, [X8+120]
	006 Compare X8, 0
	007 JumpIfEqual {11}
	008 Move X0, [X8+32]
	009 Move X30, [X31+16]
	010 Return X0
	011 Call 0x1C17F20

Method: UnityEngine.Rendering.Universal.DebugDisplaySettingsRendering get_RenderingSettings()

Disassembly:
	0x03A38B74 LDR X0, [X22]
	0x03A38B78 LDR X8, [X23]
	0x03A38B7C LDR X9, [X0 + 0xB8]
	0x03A38B80 LDR W10, [X8 + 0xE0]
	0x03A38B84 LDR X22, [X9 + 0x8]
	0x03A38B88 CBNZ W10, 0x3A38B94
	0x03A38B8C MOV X0, X8
	0x03A38B90 BL 0x1C16DFC
	0x03A38B94 ADD X1, X31, 0x0

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+16]
	003 Compare X8, 0
	004 JumpIfEqual {11}
	005 Move X8, [X8+120]
	006 Compare X8, 0
	007 JumpIfEqual {11}
	008 Move X0, [X8+40]
	009 Move X30, [X31+16]
	010 Return X0
	011 Call 0x1C17F20

Method: UnityEngine.Rendering.Universal.DebugDisplaySettingsLighting get_LightingSettings()

Disassembly:
	0x03A38B98 FMOV S0, W31
	0x03A38B9C MOVZ W5, 0x1
	0x03A38BA0 MOV X0, X21
	0x03A38BA4 MOV W2, W31
	0x03A38BA8 MOV W3, W31
	0x03A38BAC MOV W4, W31
	0x03A38BB0 MOV X6, X22
	0x03A38BB4 MOV X7, X31
	0x03A38BB8 BL 0x3A6D184

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+16]
	003 Compare X8, 0
	004 JumpIfEqual {11}
	005 Move X8, [X8+120]
	006 Compare X8, 0
	007 JumpIfEqual {11}
	008 Move X0, [X8+48]
	009 Move X30, [X31+16]
	010 Return X0
	011 Call 0x1C17F20

Method: System.Void Begin()

Disassembly:
	0x03A38BBC LDR X2, [X20 + 0x130]
	0x03A38BC0 MOV X0, X20
	0x03A38BC4 MOV X1, X19
	0x03A38BC8 BL 0x3A38BE0
	0x03A38BCC LDP X20, X19, [X31 + 0x60]
	0x03A38BD0 LDP X22, X21, [X31 + 0x50]
	0x03A38BD4 LDP X30, X23, [X31 + 0x40]
	0x03A38BD8 ADD X31, X31, 0x70
	0x03A38BDC RET
	0x03A38BE0 SUB X31, X31, 0x110
	0x03A38BE4 STR X29, [X31 + 0xC0]
	0x03A38BE8 STP X30, X25, [X31 + 0xD0]
	0x03A38BEC STP X24, X23, [X31 + 0xE0]
	0x03A38BF0 STP X22, X21, [X31 + 0xF0]
	0x03A38BF4 STP X20, X19, [X31 + 0x100]
	0x03A38BF8 ADRP X22, 0x9AA000
	0x03A38BFC LDRB W8, [X22 + 0x114]
	0x03A38C00 MOV X19, X2
	0x03A38C04 MOV X21, X1
	0x03A38C08 MOV X20, X0
	0x03A38C0C TBNZ X8, 0x0, 0x3A38C30
	0x03A38C10 ADRP X0, 0x71D000
	0x03A38C14 LDR X0, [X0 + 0x6C8]
	0x03A38C18 BL 0x1C16CF4
	0x03A38C1C ADRP X0, 0x71C000
	0x03A38C20 LDR X0, [X0 + 0x10]
	0x03A38C24 BL 0x1C16CF4
	0x03A38C28 MOVZ W8, 0x1
	0x03A38C2C STRB W8, [X22 + 0x114]
	0x03A38C30 MOVI V0.2D, 0x0
	0x03A38C34 STR W31, [X31 + 0x70]
	0x03A38C38 STR W31, [X31 + 0x30]
	0x03A38C3C ADD X22, X21, 0xD8
	0x03A38C40 STP V0, V0, [X31 + 0x50]
	0x03A38C44 STR V0, [X31 + 0x4]
	0x03A38C48 STP V0, V0, [X31 + 0x10]
	0x03A38C4C STR V0, [X31]
	0x03A38C50 LDR W8, [X22 + 0x30]
	0x03A38C54 LDUR V0, [X21 + 0xF8]
	0x03A38C58 LDUR V1, [X21 + 0xE8]
	0x03A38C5C LDUR V2, [X21 + 0xD8]
	0x03A38C60 MOV X0, X31
	0x03A38C64 STR W8, [X31 + 0xB0]
	0x03A38C68 STP V1, V0, [X31 + 0x90]
	0x03A38C6C STR V2, [X31 + 0x8]
	0x03A38C70 BL 0x3C113A8
	0x03A38C74 CMP W0, 0x1
	0x03A38C78 MOVZ W8, 0x8
	0x03A38C7C MOVZ W9, 0x4
	0x03A38C80 CSEL W1, W9, W8, EQ
	0x03A38C84 ADD X0, X31, 0x80
	0x03A38C88 MOV X2, X31
	0x03A38C8C BL 0x3C2240C
	0x03A38C90 ADD X0, X31, 0x80
	0x03A38C94 MOV W1, W31
	0x03A38C98 MOV X2, X31
	0x03A38C9C BL 0x3C22520

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x9AB000
	005 Move W8, [X20+261]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x719000
	012 Move X0, [X0+3200]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+261], W8
	016 Move X0, X19
	017 Call DebugRenderSetup.get_RenderingSettings, X0
	018 Compare X0, 0
	019 JumpIfEqual {62}
	020 Move W8, [X0+40]
	021 Move X20, 0x719000
	022 Move X20, [X20+3200]
	023 NotImplemented "Instruction CMP not yet implemented."
	024 Move X8, [X19+24]
	025 Move X0, [X20]
	026 Move [X31+8], X8
	027 Move W8, [X0+224]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Add X0, X31, 8
	032 Move X1, X31
	033 Call ScriptableRenderContext.Submit, X0
	034 Move W0, 1
	035 Move X1, X31
	036 Call GL.set_wireframe, X0
	037 Subtract W8, W8, 3
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Move W8, [X19+40]
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Move X8, [X19+24]
	042 Move X0, [X20]
	043 Move [X31+8], X8
	044 Move W8, [X0+224]
	045 Move X20, [X19+32]
	046 Compare W8, 0
	047 JumpIfNotEqual {49}
	048 Call 0x1C17DFC
	049 Add X0, X31, 8
	050 Move X1, X20
	051 Move X2, X31
	052 Call ScriptableRenderContext.ExecuteCommandBuffer, X0, X1
	053 Move X0, [X19+32]
	054 Compare X0, 0
	055 JumpIfEqual {62}
	056 Move X1, X31
	057 Call CommandBuffer.Clear, X0
	058 Move X20, [X31+16]
	059 Move X19, [X31+24]
	060 Move X30, [X31+32]
	061 Return 
	062 Call 0x1C17F20

Method: System.Void End()

Disassembly:
	0x03A38CA0 MOVZ W8, 0x1
	0x03A38CA4 STR W8, [X31 + 0x88]
	0x03A38CA8 LDR X25, [X20 + 0x138]
	0x03A38CAC CBZ X25, 0x3A38EF0
	0x03A38CB0 ADRP X23, 0x71D000
	0x03A38CB4 LDR X23, [X23 + 0x6C8]
	0x03A38CB8 LDR X0, [X23]
	0x03A38CBC LDR W8, [X0 + 0xE0]
	0x03A38CC0 CBNZ W8, 0x3A38CCC
	0x03A38CC4 BL 0x1C16DFC
	0x03A38CC8 LDR X0, [X23]
	0x03A38CCC LDR X8, [X0 + 0xB8]
	0x03A38CD0 LDR X8, [X8]
	0x03A38CD4 CBZ X8, 0x3A38EF0
	0x03A38CD8 LDR W9, [X8 + 0x18]
	0x03A38CDC CBZ W9, 0x3A38EF4
	0x03A38CE0 ADRP X24, 0x71C000
	0x03A38CE4 LDR X24, [X24 + 0x10]
	0x03A38CE8 LDR X21, [X8 + 0x20]
	0x03A38CEC LDR X0, [X24]
	0x03A38CF0 LDR W9, [X0 + 0xE0]
	0x03A38CF4 CBNZ W9, 0x3A38CFC
	0x03A38CF8 BL 0x1C16DFC
	0x03A38CFC LDR W8, [X25 + 0x18]
	0x03A38D00 CBZ W8, 0x3A38EF4
	0x03A38D04 ADD X0, X25, 0x20
	0x03A38D08 ADD X1, X31, 0x80
	0x03A38D0C FMOV S0, W31
	0x03A38D10 MOVZ W5, 0x1
	0x03A38D14 MOV W2, W31
	0x03A38D18 MOV W3, W31
	0x03A38D1C MOV W4, W31
	0x03A38D20 MOV X6, X21
	0x03A38D24 MOV X7, X31
	0x03A38D28 BL 0x3A6D184
	0x03A38D2C LDR X8, [X20 + 0xE8]
	0x03A38D30 CBZ X8, 0x3A38EF0
	0x03A38D34 LDR W9, [X8 + 0x10]
	0x03A38D38 SUB W9, W9, 0x1
	0x03A38D3C CMP W9, 0x1
	0x03A38D40 B.HI 0x3A38E08

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x9AB000
	005 Move W8, [X20+262]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x719000
	012 Move X0, [X0+3200]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+262], W8
	016 Move X0, X19
	017 Call DebugRenderSetup.get_RenderingSettings, X0
	018 Compare X0, 0
	019 JumpIfEqual {45}
	020 Move W8, [X0+40]
	021 NotImplemented "Instruction CMP not yet implemented."
	022 Subtract W8, W8, 3
	023 NotImplemented "Instruction CMP not yet implemented."
	024 Move W8, [X19+40]
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move X9, 0x719000
	027 Move X8, [X19+24]
	028 Move X9, [X9+3200]
	029 Move [X31+8], X8
	030 Move X0, [X9]
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {35}
	034 Call 0x1C17DFC
	035 Add X0, X31, 8
	036 Move X1, X31
	037 Call ScriptableRenderContext.Submit, X0
	038 Move W0, W31
	039 Move X1, X31
	040 Call GL.set_wireframe, X0
	041 Move X20, [X31+16]
	042 Move X19, [X31+24]
	043 Move X30, [X31+32]
	044 Return 
	045 Call 0x1C17F20

Method: System.Void .ctor(UnityEngine.Rendering.Universal.DebugHandler debugHandler, UnityEngine.Rendering.ScriptableRenderContext context, UnityEngine.Rendering.CommandBuffer commandBuffer, System.Int32 index, UnityEngine.Rendering.FilteringSettings filteringSettings)

Disassembly:
	0x03A38898 MOVZ W8, 0xC9
	0x03A3889C MOVZ W9, 0x2
	0x03A388A0 STP X22, X20, [X19 + 0xE0]
	0x03A388A4 STR W8, [X19 + 0x10]
	0x03A388A8 STR W9, [X19 + 0xC8]
	0x03A388AC STR X21, [X19 + 0xF0]
	0x03A388B0 LDR X0, [X25]
	0x03A388B4 BL 0x1C16F10
	0x03A388B8 LDR X1, [X26]
	0x03A388BC MOV X2, X31
	0x03A388C0 MOV X21, X0
	0x03A388C4 BL 0x39B19AC
	0x03A388C8 STR X21, [X19 + 0x118]
	0x03A388CC LDR X0, [X25]
	0x03A388D0 BL 0x1C16F10
	0x03A388D4 LDR X1, [X29]
	0x03A388D8 MOV X2, X31
	0x03A388DC MOV X21, X0
	0x03A388E0 BL 0x39B19AC
	0x03A388E4 STR X21, [X19 + 0x120]
	0x03A388E8 LDR X0, [X28]
	0x03A388EC LDR W8, [X0 + 0xE0]
	0x03A388F0 CBNZ W8, 0x3A388F8
	0x03A388F4 BL 0x1C16DFC
	0x03A388F8 MOV X0, X31

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, X1
	009 Move X1, X31
	010 Move X19, X5
	011 Move W20, W4
	012 Move X21, X3
	013 Move X22, X2
	014 Move X24, X0
	015 Call Object..ctor, X0
	016 Move [X24+16], X23
	017 Move [X24+24], X22
	018 Move [X24+32], X21
	019 Move [X24+40], W20
	020 Move X8, [X19+16]
	021 Move V0, [X19]
	022 Move X0, X24
	023 Move X20, [X31+48]
	024 Move X19, [X31+56]
	025 Move [X24+60], X8
	026 Move [X24+44], V0
	027 Move X22, [X31+32]
	028 Move X21, [X31+40]
	029 Move X24, [X31+16]
	030 Move X23, [X31+24]
	031 Move X30, [X31+64]
	032 Call DebugRenderSetup.Begin, X0
	033 Return 

Method: UnityEngine.Rendering.DrawingSettings CreateDrawingSettings(UnityEngine.Rendering.DrawingSettings drawingSettings)

Disassembly:
	0x03A37D30 BL 0x3C0FF44
	0x03A37D34 LDP X20, X19, [X31 + 0x10]
	0x03A37D38 LDR X30, [X31], #0x20
	0x03A37D3C RET
	0x03A37D40 BL 0x1C16F20
	0x03A37D44 LDR X0, [X0 + 0x18]
	0x03A37D48 RET
	0x03A37D4C STR X1, [X0 + 0x18]
	0x03A37D50 RET
	0x03A37D54 LDR X0, [X0 + 0x20]
	0x03A37D58 RET
	0x03A37D5C STR X1, [X0 + 0x20]
	0x03A37D60 RET
	0x03A37D64 LDR X0, [X0 + 0x28]
	0x03A37D68 RET
	0x03A37D6C STR X1, [X0 + 0x28]
	0x03A37D70 RET
	0x03A37D74 LDR X0, [X0 + 0x30]
	0x03A37D78 RET
	0x03A37D7C STR X1, [X0 + 0x30]
	0x03A37D80 RET
	0x03A37D84 LDR X0, [X0 + 0x38]
	0x03A37D88 RET
	0x03A37D8C STR X1, [X0 + 0x38]
	0x03A37D90 RET
	0x03A37D94 LDR X0, [X0 + 0x40]
	0x03A37D98 RET
	0x03A37D9C STR X1, [X0 + 0x40]
	0x03A37DA0 RET
	0x03A37DA4 SUB X31, X31, 0x50
	0x03A37DA8 STR X30, [X31 + 0x20]
	0x03A37DAC STP X22, X21, [X31 + 0x30]
	0x03A37DB0 STP X20, X19, [X31 + 0x40]
	0x03A37DB4 ADRP X20, 0x9AB000
	0x03A37DB8 LDRB W8, [X20 + 0x109]
	0x03A37DBC MOV X19, X0
	0x03A37DC0 TBNZ X8, 0x0, 0x3A37E08
	0x03A37DC4 ADRP X0, 0x6E7000
	0x03A37DC8 LDR X0, [X0 + 0x5B8]
	0x03A37DCC BL 0x1C16CF4
	0x03A37DD0 ADRP X0, 0x6E7000
	0x03A37DD4 LDR X0, [X0 + 0x5C0]
	0x03A37DD8 BL 0x1C16CF4
	0x03A37DDC ADRP X0, 0x6E7000
	0x03A37DE0 LDR X0, [X0 + 0x5C8]
	0x03A37DE4 BL 0x1C16CF4
	0x03A37DE8 ADRP X0, 0x6E7000
	0x03A37DEC LDR X0, [X0 + 0x5D0]
	0x03A37DF0 BL 0x1C16CF4
	0x03A37DF4 ADRP X0, 0x6E7000
	0x03A37DF8 LDR X0, [X0 + 0x5D8]
	0x03A37DFC BL 0x1C16CF4
	0x03A37E00 MOVZ W8, 0x1
	0x03A37E04 STRB W8, [X20 + 0x109]
	0x03A37E08 STP X31, X31, [X31 + 0x8]
	0x03A37E0C STR X31, [X31 + 0x18]
	0x03A37E10 LDR X8, [X19 + 0x28]
	0x03A37E14 CBZ X8, 0x3A37F1C
	0x03A37E18 LDR W8, [X8 + 0x30]
	0x03A37E1C CMP W8, 0x2
	0x03A37E20 B.EQ 0x3A37EE4
	0x03A37E24 CMP W8, 0x1
	0x03A37E28 B.EQ 0x3A37E38
	0x03A37E2C CBNZ W8, 0x3A37F20
	0x03A37E30 MOV W21, W31
	0x03A37E34 B 0x3A37F00
	0x03A37E38 LDR X0, [X19 + 0x10]
	0x03A37E3C CBZ X0, 0x3A37F1C
	0x03A37E40 ADRP X8, 0x6E7000

ISIL:
	001 Subtract X31, X31, 272
	002 Move [X31+208], X29
	003 Move [X31+224], X30
	004 Move [X31+232], X23
	005 Move [X31+240], X22
	006 Move [X31+248], X21
	007 Move [X31+256], X20
	008 Move [X31+264], X19
	009 NotImplemented "Instruction MRS not yet implemented."
	010 Move X9, [X22+40]
	011 Move X23, 0x9AC000
	012 Move X20, X1
	013 Move X21, X0
	014 Move [X31+200], X9
	015 Move W9, [X23+263]
	016 Move X19, X8
	017 Move TEMP, X9
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {26}
	021 Move X0, 0x71E000
	022 Move X0, [X0+184]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X23+263], W8
	026 Add X0, X31, 0
	027 Move W2, 196
	028 Move W1, W31
	029 Call 0x3EB2B10
	030 Move X0, X21
	031 Call DebugRenderSetup.get_MaterialSettings, X0
	032 Compare X0, 0
	033 JumpIfEqual {79}
	034 Move W8, [X0+76]
	035 Compare W8, 0
	036 JumpIfEqual {63}
	037 Move X8, [X21+16]
	038 Compare X8, 0
	039 JumpIfEqual {79}
	040 Move X23, 0x71E000
	041 Move X21, [X8+16]
	042 Move X23, [X23+184]
	043 Add X0, X31, 0
	044 Move W2, 196
	045 Move X1, X20
	046 Call 0x3EB2AC0
	047 Move X0, [X23]
	048 Move W8, [X0+224]
	049 Compare W8, 0
	050 JumpIfNotEqual {52}
	051 Call 0x1C17DFC
	052 Add X0, X31, 0
	053 Move X1, X21
	054 Move X2, X31
	055 Call DrawingSettings.set_overrideMaterial, X0, X1
	056 Add X0, X31, 0
	057 Move W1, W31
	058 Move X2, X31
	059 Call DrawingSettings.set_overrideMaterialPassIndex, X0, X1
	060 Add X1, X31, 0
	061 Move W2, 196
	062 Move X0, X19
	063 Move W2, 196
	064 Move X0, X19
	065 Move X1, X20
	066 Call 0x3EB2AC0
	067 Move X8, [X22+40]
	068 Move X9, [X31+200]
	069 NotImplemented "Instruction CMP not yet implemented."
	070 Move X20, [X31+256]
	071 Move X19, [X31+264]
	072 Move X22, [X31+240]
	073 Move X21, [X31+248]
	074 Move X30, [X31+224]
	075 Move X23, [X31+232]
	076 Move X29, [X31+208]
	077 Add X31, X31, 272
	078 Return X0
	079 Call 0x1C17F20
	080 Call 0x3EB2B20

Method: UnityEngine.Rendering.RenderStateBlock GetRenderStateBlock(UnityEngine.Rendering.RenderStateBlock renderStateBlock)

Disassembly:
	0x03A37E44 LDR X8, [X8 + 0x5D0]
	0x03A37E48 LDR X1, [X8]
	0x03A37E4C ADD X8, X31, 0x8
	0x03A37E50 BL 0x2DBE924
	0x03A37E54 ADRP X20, 0x6E7000
	0x03A37E58 ADRP X22, 0x6E7000
	0x03A37E5C LDR X20, [X20 + 0x5C0]
	0x03A37E60 LDR X22, [X22 + 0x5D8]
	0x03A37E64 MOVZ W21, 0x1
	0x03A37E68 LDR X1, [X20]
	0x03A37E6C ADD X0, X31, 0x8
	0x03A37E70 BL 0x2BC3C64
	0x03A37E74 TBZ X0, 0x0, 0x3A37EEC
	0x03A37E78 LDR X19, [X31 + 0x18]
	0x03A37E7C CBZ X19, 0x3A37F18
	0x03A37E80 LDR X8, [X19]
	0x03A37E84 LDR X1, [X22]
	0x03A37E88 LDRH W9, [X8 + 0x12E]
	0x03A37E8C CBZ X9, 0x3A37EB0
	0x03A37E90 LDR X10, [X8 + 0xB0]
	0x03A37E94 ADD X10, X10, 0x8
	0x03A37E98 LDUR X11, [X10 - 0x8]
	0x03A37E9C CMP X11, X1
	0x03A37EA0 B.EQ 0x3A37EC0
	0x03A37EA4 SUBS X9, X9, 0x1
	0x03A37EA8 ADD X10, X10, 0x10
	0x03A37EAC B.NE 0x3A37E98
	0x03A37EB0 MOVZ W2, 0x1
	0x03A37EB4 MOV X0, X19
	0x03A37EB8 BL 0x1C5C788
	0x03A37EBC B 0x3A37ED0
	0x03A37EC0 LDR W9, [X10]
	0x03A37EC4 ADD W9, W9, 0x1
	0x03A37EC8 ADD X8, X8, W9, 0x4, SXTW
	0x03A37ECC ADD X0, X8, 0x138
	0x03A37ED0 LDP X8, X1, [X0]
	0x03A37ED4 MOV X0, X19
	0x03A37ED8 BLR X8
	0x03A37EDC AND W21, W21, W0, 0x0
	0x03A37EE0 B 0x3A37E68
	0x03A37EE4 MOVZ W21, 0x1
	0x03A37EE8 B 0x3A37F00
	0x03A37EEC ADRP X8, 0x6E7000
	0x03A37EF0 LDR X8, [X8 + 0x5B8]
	0x03A37EF4 ADD X0, X31, 0x8
	0x03A37EF8 LDR X1, [X8]
	0x03A37EFC BL 0x2BC3C60
	0x03A37F00 AND W0, W21, 0x1
	0x03A37F04 LDP X20, X19, [X31 + 0x40]
	0x03A37F08 LDP X22, X21, [X31 + 0x30]
	0x03A37F0C LDR X30, [X31 + 0x20]
	0x03A37F10 ADD X31, X31, 0x50
	0x03A37F14 RET
	0x03A37F18 BL 0x1C16F20
	0x03A37F1C BL 0x1C16F20
	0x03A37F20 STR W8, [X31 + 0x2C]
	0x03A37F24 ADRP X0, 0x71E000
	0x03A37F28 LDR X0, [X0 + 0x5F0]
	0x03A37F2C BL 0x1C16D08
	0x03A37F30 ADD X1, X31, 0x2C
	0x03A37F34 BL 0x1C16E04
	0x03A37F38 MOV X19, X0
	0x03A37F3C ADRP X0, 0x71E000
	0x03A37F40 LDR X0, [X0 + 0x5F8]
	0x03A37F44 BL 0x1C16D08
	0x03A37F48 MOV X1, X19
	0x03A37F4C MOV X2, X31
	0x03A37F50 BL 0x321EFD0
	0x03A37F54 MOV X19, X0
	0x03A37F58 ADRP X0, 0x6C4000
	0x03A37F5C LDR X0, [X0 + 0x760]
	0x03A37F60 BL 0x1C16D08
	0x03A37F64 BL 0x1C16F10
	0x03A37F68 MOV X20, X0
	0x03A37F6C ADRP X0, 0x71E000
	0x03A37F70 LDR X0, [X0 + 0x600]
	0x03A37F74 BL 0x1C16D08
	0x03A37F78 MOV X1, X0
	0x03A37F7C MOV X0, X20
	0x03A37F80 MOV X2, X19
	0x03A37F84 MOV X3, X31
	0x03A37F88 BL 0x3311888
	0x03A37F8C ADRP X0, 0x71E000
	0x03A37F90 LDR X0, [X0 + 0x608]
	0x03A37F94 BL 0x1C16D08
	0x03A37F98 MOV X1, X0
	0x03A37F9C MOV X0, X20
	0x03A37FA0 BL 0x1C16DEC
	0x03A37FA4 B 0x3A37FAC
	0x03A37FA8 B 0x3A37FAC
	0x03A37FAC MOV X19, X0
	0x03A37FB0 CMP W1, 0x1
	0x03A37FB4 B.NE 0x3A37FE8
	0x03A37FB8 MOV X0, X19
	0x03A37FBC BL 0x3EB1AD0
	0x03A37FC0 LDR X20, [X0]
	0x03A37FC4 BL 0x3EB1AE0
	0x03A37FC8 ADRP X8, 0x6E7000
	0x03A37FCC LDR X8, [X8 + 0x5B8]
	0x03A37FD0 ADD X0, X31, 0x8
	0x03A37FD4 LDR X1, [X8]
	0x03A37FD8 BL 0x2BC3C60
	0x03A37FDC CBZ X20, 0x3A37F00
	0x03A37FE0 MOV X0, X20
	0x03A37FE4 BL 0x1C16F18
	0x03A37FE8 MOV X20, X31
	0x03A37FEC B 0x3A37FF4
	0x03A37FF0 MOV X19, X0
	0x03A37FF4 ADRP X8, 0x6E7000
	0x03A37FF8 LDR X8, [X8 + 0x5B8]
	0x03A37FFC LDR X1, [X8]
	0x03A38000 ADD X0, X31, 0x8
	0x03A38004 BL 0x2BC3C60
	0x03A38008 CBNZ X20, 0x3A38014
	0x03A3800C MOV X0, X19
	0x03A38010 BL 0x1D2C690
	0x03A38014 MOV X0, X20
	0x03A38018 BL 0x1C16F18
	0x03A3801C BL 0x1990590
	0x03A38020 STP X30, X21, [X31 - 0x20]!
	0x03A38024 STP X20, X19, [X31 + 0x10]
	0x03A38028 ADRP X21, 0x9AA000
	0x03A3802C ADRP X20, 0x71D000
	0x03A38030 LDRB W8, [X21 + 0x10A]
	0x03A38034 LDR X20, [X20 + 0x4B0]
	0x03A38038 MOV X19, X0
	0x03A3803C TBNZ X8, 0x0, 0x3A38060
	0x03A38040 ADRP X0, 0x71D000
	0x03A38044 LDR X0, [X0 + 0x610]
	0x03A38048 BL 0x1C16CF4
	0x03A3804C ADRP X0, 0x71D000
	0x03A38050 LDR X0, [X0 + 0x4B0]
	0x03A38054 BL 0x1C16CF4
	0x03A38058 MOVZ W8, 0x1
	0x03A3805C STRB W8, [X21 + 0x10A]
	0x03A38060 LDR X0, [X20]
	0x03A38064 ADRP X20, 0x71D000
	0x03A38068 LDR W8, [X0 + 0xE0]
	0x03A3806C LDR X20, [X20 + 0x610]
	0x03A38070 CBNZ W8, 0x3A38078
	0x03A38074 BL 0x1C16DFC
	0x03A38078 LDR X1, [X20]
	0x03A3807C MOV X0, X19
	0x03A38080 BL 0x29AFA14
	0x03A38084 LDR X8, [X19]
	0x03A38088 MOV X0, X19
	0x03A3808C LDP X20, X19, [X31 + 0x10]
	0x03A38090 LDR X2, [X8 + 0x208]
	0x03A38094 LDR X1, [X8 + 0x210]
	0x03A38098 LDP X30, X21, [X31], #0x20
	0x03A3809C BR X2
	0x03A380A0 STP X29, X30, [X31 - 0x60]!
	0x03A380A4 STP X28, X27, [X31 + 0x10]
	0x03A380A8 STP X26, X25, [X31 + 0x20]
	0x03A380AC STP X24, X23, [X31 + 0x30]
	0x03A380B0 STP X22, X21, [X31 + 0x40]
	0x03A380B4 STP X20, X19, [X31 + 0x50]
	0x03A380B8 ADRP X21, 0x9AA000
	0x03A380BC ADRP X25, 0x71D000
	0x03A380C0 ADRP X20, 0x71D000
	0x03A380C4 ADRP X24, 0x71D000
	0x03A380C8 ADRP X23, 0x71D000
	0x03A380CC ADRP X22, 0x71D000
	0x03A380D0 ADRP X29, 0x71D000
	0x03A380D4 ADRP X28, 0x71D000
	0x03A380D8 ADRP X27, 0x71D000
	0x03A380DC ADRP X26, 0x71D000
	0x03A380E0 LDR X25, [X25 + 0x618]
	0x03A380E4 LDR X20, [X20 + 0x620]
	0x03A380E8 LDR X24, [X24 + 0x628]
	0x03A380EC LDR X23, [X23 + 0x630]
	0x03A380F0 LDR X22, [X22 + 0x638]
	0x03A380F4 LDR X29, [X29 + 0x640]
	0x03A380F8 LDR X28, [X28 + 0x648]
	0x03A380FC LDR X27, [X27 + 0x650]
	0x03A38100 LDR X26, [X26 + 0x658]
	0x03A38104 LDRB W8, [X21 + 0x10B]
	0x03A38108 MOV X19, X0
	0x03A3810C TBNZ X8, 0x0, 0x3A381C0
	0x03A38110 ADRP X0, 0x71D000
	0x03A38114 LDR X0, [X0 + 0x660]
	0x03A38118 BL 0x1C16CF4
	0x03A3811C ADRP X0, 0x71D000
	0x03A38120 LDR X0, [X0 + 0x640]
	0x03A38124 BL 0x1C16CF4
	0x03A38128 ADRP X0, 0x71D000
	0x03A3812C LDR X0, [X0 + 0x630]
	0x03A38130 BL 0x1C16CF4
	0x03A38134 ADRP X0, 0x71D000
	0x03A38138 LDR X0, [X0 + 0x650]
	0x03A3813C BL 0x1C16CF4
	0x03A38140 ADRP X0, 0x71D000
	0x03A38144 LDR X0, [X0 + 0x668]
	0x03A38148 BL 0x1C16CF4
	0x03A3814C ADRP X0, 0x71D000
	0x03A38150 LDR X0, [X0 + 0x670]
	0x03A38154 BL 0x1C16CF4
	0x03A38158 ADRP X0, 0x71D000
	0x03A3815C LDR X0, [X0 + 0x648]
	0x03A38160 BL 0x1C16CF4
	0x03A38164 ADRP X0, 0x71D000
	0x03A38168 LDR X0, [X0 + 0x638]

ISIL:
	001 Subtract X31, X31, 288
	002 Move [X31+208], X29
	003 Move [X31+216], X30
	004 Move [X31+224], X26
	005 Move [X31+232], X25
	006 Move [X31+240], X24
	007 Move [X31+248], X23
	008 Move [X31+256], X22
	009 Move [X31+264], X21
	010 Move [X31+272], X20
	011 Move [X31+280], X19
	012 Move X22, 0x9AC000
	013 Move X20, X8
	014 Move W8, [X22+264]
	015 Move X19, X1
	016 Move X21, X0
	017 Add X23, X31, 96
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {27}
	022 Move X0, 0x6E6000
	023 Move X0, [X0+3368]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X22+264], W8
	027 NotImplemented "Instruction MOVI not yet implemented."
	028 Move X0, X21
	029 Move [X31+192], X31
	030 Move [X31+200], X31
	031 Move [X31+176], X31
	032 Move [X31+184], X31
	033 Move [X31+160], W31
	034 Move [X23+3], V0
	035 Move [X31+112], V0
	036 Move [X31+120], V0
	037 Move [X31+6], V0
	038 Call DebugRenderSetup.get_RenderingSettings, X0
	039 Compare X0, 0
	040 JumpIfEqual {227}
	041 Move W8, [X0+40]
	042 NotImplemented "Instruction CMP not yet implemented."
	043 NotImplemented "Instruction LDUR not yet implemented."
	044 NotImplemented "Instruction LDUR not yet implemented."
	045 Add X0, X31, 176
	046 Move X1, X31
	047 Move [X31+192], X8
	048 Move [X23+5], V0
	049 Call FilteringSettings.get_renderQueueRange, X0
	050 Move X25, 0x6E6000
	051 Move X25, [X25+3368]
	052 Move X22, X0
	053 Move X8, [X25]
	054 Move W9, [X8+224]
	055 Compare W9, 0
	056 JumpIfNotEqual {59}
	057 Move X0, X8
	058 Call 0x1C17DFC
	059 Move X0, X31
	060 Add X26, X21, 44
	061 Call RenderQueueRange.get_opaque
	062 Move X1, X0
	063 Move X0, X22
	064 Move X2, X31
	065 Call RenderQueueRange.op_Equality, X0, X1
	066 Move TEMP, X0
	067 And TEMP, TEMP, 1
	068 Compare TEMP, 1
	069 JumpIfNotEqual {92}
	070 Move W24, 1
	071 Subtract W8, W8, 3
	072 NotImplemented "Instruction CMP not yet implemented."
	073 Move W8, [X21+40]
	074 NotImplemented "Instruction CMP not yet implemented."
	075 Add X0, X31, 8
	076 Move S0, -1
	077 Move W1, 2
	078 Move TEMP, 0
	079 Not TEMP
	080 Move W2, TEMP
	081 Move W3, 1
	082 Move X4, X31
	083 Move [X31+8], X31
	084 Move [X31+16], X31
	085 Call RasterState..ctor, X0, X1, X2, V0, X3
	086 Move X1, [X31+8]
	087 Move X2, [X31+16]
	088 Move X0, X19
	089 Move X3, X31
	090 Call RenderStateBlock.set_rasterState, X0, X1
	091 Move W1, 2
	092 Move X8, [X26+16]
	093 Move V0, [X26]
	094 Add X0, X31, 176
	095 Move X1, X31
	096 Move [X31+192], X8
	097 Move [X23+5], V0
	098 Call FilteringSettings.get_renderQueueRange, X0
	099 Move X8, [X25]
	100 Move X22, X0
	101 Move W9, [X8+224]
	102 Compare W9, 0
	103 JumpIfNotEqual {106}
	104 Move X0, X8
	105 Call 0x1C17DFC
	106 Move X0, X31
	107 Call RenderQueueRange.get_all
	108 Move X1, X0
	109 Move X0, X22
	110 Move X2, X31
	111 Call RenderQueueRange.op_Equality, X0, X1
	112 And W24, W0, 1
	113 Move X8, [X26+16]
	114 Move V0, [X26]
	115 Add X0, X31, 176
	116 Move X1, X31
	117 Move [X31+192], X8
	118 Move [X23+5], V0
	119 Call FilteringSettings.get_renderQueueRange, X0
	120 Move X8, [X25]
	121 Move X22, X0
	122 Move W9, [X8+224]
	123 Compare W9, 0
	124 JumpIfNotEqual {127}
	125 Move X0, X8
	126 Call 0x1C17DFC
	127 Move X0, X31
	128 Call RenderQueueRange.get_transparent
	129 Move X1, X0
	130 Move X0, X22
	131 Move X2, X31
	132 Call RenderQueueRange.op_Equality, X0, X1
	133 Move TEMP, X0
	134 And TEMP, TEMP, 1
	135 Compare TEMP, 1
	136 JumpIfNotEqual {138}
	137 Move W8, 1
	138 Move X8, [X26+16]
	139 Move V0, [X26]
	140 Add X0, X31, 176
	141 Move X1, X31
	142 Move [X31+192], X8
	143 Move [X23+5], V0
	144 Call FilteringSettings.get_renderQueueRange, X0
	145 Move X8, [X25]
	146 Move X22, X0
	147 Move W9, [X8+224]
	148 Compare W9, 0
	149 JumpIfNotEqual {152}
	150 Move X0, X8
	151 Call 0x1C17DFC
	152 Move X0, X31
	153 Call RenderQueueRange.get_all
	154 Move X1, X0
	155 Move X0, X22
	156 Move X2, X31
	157 Call RenderQueueRange.op_Equality, X0, X1
	158 And W8, W0, 1
	159 Move X9, [X21+16]
	160 Compare X9, 0
	161 JumpIfEqual {227}
	162 Move X9, [X9+120]
	163 Compare X9, 0
	164 JumpIfEqual {227}
	165 Move X9, [X9+40]
	166 Compare X9, 0
	167 JumpIfEqual {227}
	168 Move W10, [X9+24]
	169 NotImplemented "Instruction CMP not yet implemented."
	170 Move W9, 1
	171 NotImplemented "Instruction CMP not yet implemented."
	172 NotImplemented "Instruction CSET not yet implemented."
	173 NotImplemented "Instruction CMP not yet implemented."
	174 Move W10, 1
	175 NotImplemented "Instruction CMP not yet implemented."
	176 NotImplemented "Instruction CSET not yet implemented."
	177 And W9, W24, W9
	178 And W8, W10, W8
	179 Or W3, W8, W9
	180 Add X0, X31, 200
	181 Move W1, 15
	182 Move W2, 1
	183 Move W4, 1
	184 Move W5, W31
	185 Move W6, W31
	186 Move W7, W31
	187 Move [X31], X31
	188 Call RenderTargetBlendState..ctor, X0, X1, X2, X3, X4, X5, X6, X7
	189 Move X1, [X31+200]
	190 NotImplemented "Instruction MOVI not yet implemented."
	191 Add X0, X31, 96
	192 Move X2, X31
	193 Move [X31+160], W31
	194 Move [X23+3], V0
	195 Move [X31+112], V0
	196 Move [X31+120], V0
	197 Move [X31+6], V0
	198 Call BlendState.set_blendState0, X0, X1
	199 Add X0, X31, 24
	200 Add X1, X31, 96
	201 Move W2, 68
	202 Call 0x3EB2AC0
	203 Add X1, X31, 24
	204 Move X0, X19
	205 Move X2, X31
	206 Call RenderStateBlock.set_blendState, X0, X1
	207 Move W1, 1
	208 Move X0, X19
	209 Move X2, X31
	210 Call RenderStateBlock.set_mask, X0, X1
	211 Move W2, 108
	212 Move X0, X20
	213 Move X1, X19
	214 Call 0x3EB2AC0
	215 Move X20, [X31+272]
	216 Move X19, [X31+280]
	217 Move X22, [X31+256]
	218 Move X21, [X31+264]
	219 Move X24, [X31+240]
	220 Move X23, [X31+248]
	221 Move X26, [X31+224]
	222 Move X25, [X31+232]
	223 Move X29, [X31+208]
	224 Move X30, [X31+216]
	225 Add X31, X31, 288
	226 Return X0
	227 Call 0x1C17F20

Method: System.Void Dispose()

Disassembly:
	0x03A38894 BL 0x3A4225C

ISIL:
	001 Call DebugRenderSetup.End, X0
	002 Return 

