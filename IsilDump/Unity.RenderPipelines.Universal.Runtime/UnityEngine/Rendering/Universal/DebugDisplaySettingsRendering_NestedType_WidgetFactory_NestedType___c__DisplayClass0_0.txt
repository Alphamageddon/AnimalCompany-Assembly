Type: UnityEngine.Rendering.Universal.DebugDisplaySettingsRendering/WidgetFactory/<>c__DisplayClass0_0

Method: System.Void .ctor()

Disassembly:
	0x03A3385C BL 0x1C16DFC
	0x03A33860 LDR X0, [X21]

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: System.Int32 <CreateMapOverlays>b__0()

Disassembly:
	0x03A357B4 TBZ X0, 0x0, 0x3A357CC
	0x03A357B8 LDR X1, [X31 + 0x18]
	0x03A357BC MOV X0, X19
	0x03A357C0 MOV X2, X31
	0x03A357C4 BL 0x39A06DC
	0x03A357C8 B 0x3A357A8
	0x03A357CC LDR X1, [X22]
	0x03A357D0 ADD X0, X31, 0x8
	0x03A357D4 BL 0x2BC434C
	0x03A357D8 LDP X20, X19, [X31 + 0x40]
	0x03A357DC LDP X22, X21, [X31 + 0x30]
	0x03A357E0 LDP X30, X23, [X31 + 0x20]
	0x03A357E4 ADD X31, X31, 0x50
	0x03A357E8 RET
	0x03A357EC BL 0x1C16F20
	0x03A357F0 B 0x3A357F4
	0x03A357F4 MOV X20, X0
	0x03A357F8 CMP W1, 0x1
	0x03A357FC B.NE 0x3A35828
	0x03A35800 MOV X0, X20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x9AE000
	005 Move W8, [X20+204]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x721000
	012 Move X0, [X0+1136]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+204], W8
	016 Move X8, [X19+16]
	017 Compare X8, 0
	018 JumpIfEqual {27}
	019 Move X8, [X8+32]
	020 Compare X8, 0
	021 JumpIfEqual {27}
	022 Move W0, [X8+32]
	023 Move X20, [X31+16]
	024 Move X19, [X31+24]
	025 Move X30, [X31+32]
	026 Return X0
	027 Call 0x1C17F20

Method: System.Void <CreateMapOverlays>b__1(System.Int32 value)

Disassembly:
	0x03A35804 BL 0x3EB1AD0
	0x03A35808 LDR X19, [X0]
	0x03A3580C BL 0x3EB1AE0
	0x03A35810 LDR X1, [X22]
	0x03A35814 ADD X0, X31, 0x8
	0x03A35818 BL 0x2BC434C
	0x03A3581C CBZ X19, 0x3A357D8
	0x03A35820 MOV X0, X19
	0x03A35824 BL 0x1C16F18
	0x03A35828 MOV X19, X31
	0x03A3582C B 0x3A35834
	0x03A35830 MOV X20, X0
	0x03A35834 LDR X1, [X22]
	0x03A35838 ADD X0, X31, 0x8
	0x03A3583C BL 0x2BC434C
	0x03A35840 CBNZ X19, 0x3A3584C
	0x03A35844 MOV X0, X20
	0x03A35848 BL 0x1D2C690
	0x03A3584C MOV X0, X19
	0x03A35850 BL 0x1C16F18
	0x03A35854 BL 0x1990590

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x9AE000
	006 Move W8, [X21+205]
	007 Move W19, W1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x721000
	014 Move X0, [X0+1136]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+205], W8
	018 Move X8, [X20+16]
	019 Compare X8, 0
	020 JumpIfEqual {30}
	021 Move X8, [X8+32]
	022 Compare X8, 0
	023 JumpIfEqual {30}
	024 Move [X8+32], W19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Move X21, [X31+40]
	029 Return 
	030 Call 0x1C17F20

Method: System.Int32 <CreateMapOverlays>b__2()

Disassembly:
	0x03A35858 STP X30, X21, [X31 - 0x20]!
	0x03A3585C STP X20, X19, [X31 + 0x10]
	0x03A35860 ADRP X20, 0x9AD000
	0x03A35864 ADRP X21, 0x720000
	0x03A35868 LDRB W8, [X20 + 0xF8]
	0x03A3586C LDR X21, [X21 + 0x4A0]
	0x03A35870 MOV X19, X0
	0x03A35874 TBNZ X8, 0x0, 0x3A3588C
	0x03A35878 ADRP X0, 0x720000
	0x03A3587C LDR X0, [X0 + 0x4A0]
	0x03A35880 BL 0x1C16CF4
	0x03A35884 MOVZ W8, 0x1
	0x03A35888 STRB W8, [X20 + 0xF8]
	0x03A3588C LDR X0, [X21]
	0x03A35890 BL 0x1C16F10
	0x03A35894 MOV X1, X31
	0x03A35898 MOV X20, X0
	0x03A3589C BL 0x39A5B1C
	0x03A358A0 STR X20, [X19 + 0x10]
	0x03A358A4 MOV X0, X19

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x9AE000
	005 Move W8, [X20+206]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x721000
	012 Move X0, [X0+1136]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+206], W8
	016 Move X8, [X19+16]
	017 Compare X8, 0
	018 JumpIfEqual {27}
	019 Move X8, [X8+32]
	020 Compare X8, 0
	021 JumpIfEqual {27}
	022 Move W0, [X8+32]
	023 Move X20, [X31+16]
	024 Move X19, [X31+24]
	025 Move X30, [X31+32]
	026 Return X0
	027 Call 0x1C17F20

Method: System.Void <CreateMapOverlays>b__3(System.Int32 value)

Disassembly:
	0x03A358A8 LDP X20, X19, [X31 + 0x10]
	0x03A358AC MOV X1, X31
	0x03A358B0 LDP X30, X21, [X31], #0x20
	0x03A358B4 B 0x33BDD8C
	0x03A358B8 MOVZ W0, 0x4
	0x03A358BC RET
	0x03A358C0 STR X30, [X31 - 0x10]!
	0x03A358C4 LDR X8, [X0 + 0x78]
	0x03A358C8 CBZ X8, 0x3A358D8
	0x03A358CC LDR X0, [X8 + 0x30]
	0x03A358D0 LDR X30, [X31], #0x10
	0x03A358D4 RET
	0x03A358D8 BL 0x1C16F20
	0x03A358DC STR X30, [X31 - 0x10]!
	0x03A358E0 LDR X8, [X0 + 0x78]
	0x03A358E4 CBZ X8, 0x3A358F4
	0x03A358E8 LDR X0, [X8 + 0x20]
	0x03A358EC LDR X30, [X31], #0x10
	0x03A358F0 RET
	0x03A358F4 BL 0x1C16F20
	0x03A358F8 STR X30, [X31 - 0x10]!

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x9AE000
	006 Move W8, [X21+207]
	007 Move W19, W1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x721000
	014 Move X0, [X0+1136]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+207], W8
	018 Move X8, [X20+16]
	019 Compare X8, 0
	020 JumpIfEqual {30}
	021 Move X8, [X8+32]
	022 Compare X8, 0
	023 JumpIfEqual {30}
	024 Move [X8+32], W19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Move X21, [X31+40]
	029 Return 
	030 Call 0x1C17F20

