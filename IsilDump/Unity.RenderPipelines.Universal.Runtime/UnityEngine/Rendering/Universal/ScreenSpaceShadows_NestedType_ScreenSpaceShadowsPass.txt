Type: UnityEngine.Rendering.Universal.ScreenSpaceShadows/ScreenSpaceShadowsPass

Method: System.Void .ctor()

Disassembly:
	0x03A6F604 TBNZ X0, 0x0, 0x3A6F610
	0x03A6F608 MOV W8, W31
	0x03A6F60C B 0x3A6F61C
	0x03A6F610 LDR W8, [X3]
	0x03A6F614 CMP W8, W2
	0x03A6F618 CSEL W8, W8, W2, LT
	0x03A6F61C STR W8, [X3]
	0x03A6F620 RET
	0x03A6F624 CMP W0, W1
	0x03A6F628 CSEL W0, W0, W1, LT
	0x03A6F62C RET
	0x03A6F630 SUB X31, X31, 0xA0
	0x03A6F634 STR X30, [X31 + 0x40]
	0x03A6F638 STP X28, X27, [X31 + 0x50]
	0x03A6F63C STP X26, X25, [X31 + 0x60]
	0x03A6F640 STP X24, X23, [X31 + 0x70]
	0x03A6F644 STP X22, X21, [X31 + 0x80]
	0x03A6F648 STP X20, X19, [X31 + 0x90]
	0x03A6F64C ADRP X23, 0x973000
	0x03A6F650 LDRB W8, [X23 + 0x29B]
	0x03A6F654 MOV X19, X3
	0x03A6F658 MOV X20, X2
	0x03A6F65C MOV W21, W1
	0x03A6F660 MOV X22, X0
	0x03A6F664 TBNZ X8, 0x0, 0x3A6F6B8
	0x03A6F668 ADRP X0, 0x68A000
	0x03A6F66C LDR X0, [X0 + 0x690]
	0x03A6F670 BL 0x1C16CF4
	0x03A6F674 ADRP X0, 0x68A000
	0x03A6F678 LDR X0, [X0 + 0x698]
	0x03A6F67C BL 0x1C16CF4
	0x03A6F680 ADRP X0, 0x68A000
	0x03A6F684 LDR X0, [X0 + 0x6A0]
	0x03A6F688 BL 0x1C16CF4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x974000
	006 Move X20, 0x6E5000
	007 Move W8, [X21+658]
	008 Move X20, [X20+4080]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x6E8000
	015 Move X0, [X0+3168]
	016 Call 0x1C17CF4
	017 Move X0, 0x6E5000
	018 Move X0, [X0+4080]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+658], W8
	022 Move X0, [X20]
	023 Move X20, 0x6E8000
	024 Move W8, [X0+224]
	025 Move X20, [X20+3168]
	026 Compare W8, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 Move X0, X19
	030 Move X1, X31
	031 Call ScriptableRenderPass..ctor, X0
	032 Move X0, [X20]
	033 Call 0x1C17F10
	034 Move X1, X31
	035 Move X20, X0
	036 Call Object..ctor, X0
	037 Move [X19+232], X20
	038 Move X20, [X31+16]
	039 Move X19, [X31+24]
	040 Move X30, [X31+32]
	041 Move X21, [X31+40]
	042 Return 

Method: System.Void Dispose()

Disassembly:
	0x03A6FB54 MOV X1, X31
	0x03A6FB58 BL 0x3A94AA8
	0x03A6FB5C CBZ X0, 0x3A6FBCC
	0x03A6FB60 LDR W8, [X0 + 0x18]
	0x03A6FB64 ADD W9, W8, 0x7

ISIL:
	001 Move X0, [X0+240]
	002 Compare X0, 0
	003 JumpIfEqual {7}
	004 Move X1, X31
	005 Call RTHandle.Release, X0
	006 Return 
	007 Return 

Method: System.Boolean Setup(UnityEngine.Rendering.Universal.ScreenSpaceShadowsSettings featureSettings, UnityEngine.Material material)

Disassembly:
	0x03A6FA64 LDR X24, [X31 + 0x30]
	0x03A6FA68 CBZ X24, 0x3A6FBC8
	0x03A6FA6C LDRB W8, [X24 + 0x18]
	0x03A6FA70 CBZ W8, 0x3A6FA54
	0x03A6FA74 MOV X0, X22
	0x03A6FA78 MOV X1, X31
	0x03A6FA7C BL 0x3A82680
	0x03A6FA80 LDR X8, [X24]
	0x03A6FA84 CMP W23, 0x1
	0x03A6FA88 CSET W1, EQ
	0x03A6FA8C LDP X9, X5, [X8 + 0x1D8]
	0x03A6FA90 AND W2, W0, 0x1
	0x03A6FA94 ADD X3, X31, 0x1C
	0x03A6FA98 ADD X4, X31, 0x18
	0x03A6FA9C MOV X0, X24
	0x03A6FAA0 BLR X9
	0x03A6FAA4 LDR W8, [X20]
	0x03A6FAA8 LDR W9, [X31 + 0x1C]
	0x03A6FAAC ORR W25, W25, W0, 0x0
	0x03A6FAB0 CMP W8, W9
	0x03A6FAB4 CSEL W8, W8, W9, LT
	0x03A6FAB8 STR W8, [X20]
	0x03A6FABC LDR W8, [X19]
	0x03A6FAC0 LDR W9, [X31 + 0x18]
	0x03A6FAC4 CMP W8, W9
	0x03A6FAC8 CSEL W8, W8, W9, GT
	0x03A6FACC STR W8, [X19]
	0x03A6FAD0 B 0x3A6FA54
	0x03A6FAD4 LDR X1, [X28]
	0x03A6FAD8 ADD X0, X31, 0x20

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x974000
	008 Move X22, 0x685000
	009 Move W8, [X23+659]
	010 Move X22, [X22+1432]
	011 Move X19, X2
	012 Move X21, X1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0x685000
	019 Move X0, [X0+1432]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X23+659], W8
	023 Move W8, 1
	024 Move [X20+224], X19
	025 Move [X20+232], X21
	026 Move [X20+200], W8
	027 Move X0, [X22]
	028 Move W8, [X0+224]
	029 Compare W8, 0
	030 JumpIfNotEqual {32}
	031 Call 0x1C17DFC
	032 Move X0, X19
	033 Move X20, [X31+32]
	034 Move X19, [X31+40]
	035 Move X22, [X31+16]
	036 Move X21, [X31+24]
	037 Move X1, X31
	038 Move X2, X31
	039 Move X30, [X31+48]
	040 Move X23, [X31+56]
	041 Call Object.op_Inequality, X0, X1
	042 Return X0

Method: System.Void OnCameraSetup(UnityEngine.Rendering.CommandBuffer cmd, ref UnityEngine.Rendering.Universal.RenderingData renderingData)

Disassembly:
	0x03A6FBD0 B 0x3A6FBDC
	0x03A6FBD4 B 0x3A6FBDC
	0x03A6FBD8 B 0x3A6FBDC
	0x03A6FBDC MOV X22, X0
	0x03A6FBE0 CMP W1, 0x1
	0x03A6FBE4 B.NE 0x3A6FC10
	0x03A6FBE8 MOV X0, X22
	0x03A6FBEC BL 0x3EB1AD0
	0x03A6FBF0 LDR X23, [X0]
	0x03A6FBF4 BL 0x3EB1AE0
	0x03A6FBF8 LDR X1, [X28]
	0x03A6FBFC ADD X0, X31, 0x20
	0x03A6FC00 BL 0x2BC434C
	0x03A6FC04 CBZ X23, 0x3A6FAE0
	0x03A6FC08 MOV X0, X23
	0x03A6FC0C BL 0x1C16F18
	0x03A6FC10 MOV X23, X31
	0x03A6FC14 B 0x3A6FC1C
	0x03A6FC18 MOV X22, X0
	0x03A6FC1C LDR X1, [X28]
	0x03A6FC20 ADD X0, X31, 0x20
	0x03A6FC24 BL 0x2BC434C
	0x03A6FC28 CBNZ X23, 0x3A6FC34
	0x03A6FC2C MOV X0, X22
	0x03A6FC30 BL 0x1D2C690
	0x03A6FC34 MOV X0, X23
	0x03A6FC38 BL 0x1C16F18
	0x03A6FC3C BL 0x1990590
	0x03A6FC40 STR D8, [X31 - 0x30]!
	0x03A6FC44 STR X30, [X31 + 0x8]
	0x03A6FC48 STP X22, X21, [X31 + 0x10]
	0x03A6FC4C STP X20, X19, [X31 + 0x20]
	0x03A6FC50 ADRP X22, 0x973000
	0x03A6FC54 ADRP X21, 0x6E5000
	0x03A6FC58 LDRB W8, [X22 + 0x29D]
	0x03A6FC5C LDR X21, [X21 + 0x20]
	0x03A6FC60 MOV W20, W1
	0x03A6FC64 MOV X19, X0
	0x03A6FC68 TBNZ X8, 0x0, 0x3A6FC80
	0x03A6FC6C ADRP X0, 0x6E5000
	0x03A6FC70 LDR X0, [X0 + 0x20]
	0x03A6FC74 BL 0x1C16CF4
	0x03A6FC78 MOVZ W8, 0x1
	0x03A6FC7C STRB W8, [X22 + 0x29D]
	0x03A6FC80 MOV W0, W20
	0x03A6FC84 BL 0x3A6FD08
	0x03A6FC88 MOV W8, W0
	0x03A6FC8C LDR X0, [X21]
	0x03A6FC90 MOVN W10, 0x0
	0x03A6FC94 LSLV W11, W10, W8
	0x03A6FC98 CMP W8, 0x20
	0x03A6FC9C LDR W9, [X0 + 0xE0]
	0x03A6FCA0 CSINV W20, W10, W11, EQ
	0x03A6FCA4 CBNZ W9, 0x3A6FCAC
	0x03A6FCA8 BL 0x1C16DFC
	0x03A6FCAC CBZ X19, 0x3A6FD04
	0x03A6FCB0 LDR X8, [X21]
	0x03A6FCB4 UCVTF S0, W20
	0x03A6FCB8 FMOV S1, 1
	0x03A6FCBC MOV X0, X19
	0x03A6FCC0 LDR X8, [X8 + 0xB8]
	0x03A6FCC4 MOV W2, W20
	0x03A6FCC8 MOV X3, X31
	0x03A6FCCC FDIV S8, S1, S0
	0x03A6FCD0 LDR W1, [X8 + 0xC0]
	0x03A6FCD4 BL 0x3C4CE30
	0x03A6FCD8 LDR X8, [X21]
	0x03A6FCDC MOV X0, X19
	0x03A6FCE0 LDP X20, X19, [X31 + 0x20]
	0x03A6FCE4 LDP X22, X21, [X31 + 0x10]
	0x03A6FCE8 LDR X8, [X8 + 0xB8]
	0x03A6FCEC LDR X30, [X31 + 0x8]
	0x03A6FCF0 MOV V0.16B, V8.16B
	0x03A6FCF4 MOV X2, X31
	0x03A6FCF8 LDR W1, [X8 + 0xC4]
	0x03A6FCFC LDR V8, [X31], #0x30
	0x03A6FD00 B 0x3C4CDDC
	0x03A6FD04 BL 0x1C16F20
	0x03A6FD08 CMP W0, 0x4
	0x03A6FD0C B.CS 0x3A6FD1C
	0x03A6FD10 UBFM W8, W0, 0x1D, 0x1C
	0x03A6FD14 ADD W0, W8, 0x8
	0x03A6FD18 RET
	0x03A6FD1C STP X30, X19, [X31 - 0x10]!
	0x03A6FD20 ADRP X0, 0x68D000
	0x03A6FD24 LDR X0, [X0 + 0x758]
	0x03A6FD28 BL 0x1C16D08
	0x03A6FD2C BL 0x1C16F10
	0x03A6FD30 MOV X1, X31
	0x03A6FD34 MOV X19, X0
	0x03A6FD38 BL 0x3380288
	0x03A6FD3C ADRP X0, 0x6E7000
	0x03A6FD40 LDR X0, [X0 + 0xCD0]
	0x03A6FD44 BL 0x1C16D08
	0x03A6FD48 MOV X1, X0
	0x03A6FD4C MOV X0, X19
	0x03A6FD50 BL 0x1C16DEC

ISIL:
	001 Subtract X31, X31, 208
	002 Move [X31+160], X30
	003 Move [X31+168], X23
	004 Move [X31+176], X22
	005 Move [X31+184], X21
	006 Move [X31+192], X20
	007 Move [X31+200], X19
	008 Move X23, 0x974000
	009 Move X22, 0x6E6000
	010 Move W8, [X23+660]
	011 Move X22, [X22+16]
	012 Move X21, X2
	013 Move X20, X1
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {27}
	019 Move X0, 0x6E6000
	020 Move X0, [X0+16]
	021 Call 0x1C17CF4
	022 Move X0, 0x6E8000
	023 Move X0, [X0+3192]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X23+660], W8
	027 Move W8, [X21+288]
	028 Move V1, [X21+256]
	029 Move V0, [X21+272]
	030 Move V2, [X21+15]
	031 Add X0, X31, 96
	032 Move W1, W31
	033 Move X2, X31
	034 Move [X31+144], W8
	035 Move [X31+112], V1
	036 Move [X31+120], V0
	037 Move [X31+6], V2
	038 Call RenderTextureDescriptor.set_depthBufferBits, X0, X1
	039 Move X0, [X22]
	040 Move W8, 1
	041 Move [X31+104], W8
	042 Move W8, [X0+224]
	043 Compare W8, 0
	044 JumpIfNotEqual {46}
	045 Call 0x1C17DFC
	046 Move X23, 0x6E8000
	047 Move X23, [X23+3192]
	048 Move W0, 5
	049 Move W1, 5
	050 Move W21, 5
	051 Call RenderingUtils.SupportsGraphicsFormat, X0, X1
	052 And W31, W0, 1
	053 Move W8, 59
	054 NotImplemented "Instruction CSEL not yet implemented."
	055 Add X0, X31, 96
	056 Move X2, X31
	057 Call RenderTextureDescriptor.set_graphicsFormat, X0, X1
	058 Move X0, [X22]
	059 Add X21, X19, 240
	060 Move W8, [X0+224]
	061 Compare W8, 0
	062 JumpIfNotEqual {64}
	063 Call 0x1C17DFC
	064 Move X6, [X23]
	065 Add X1, X31, 96
	066 Move S0, W31
	067 Move W3, 1
	068 Move W5, 1
	069 Move X0, X21
	070 Move W2, W31
	071 Move W4, W31
	072 Call RenderingUtils.ReAllocateIfNeeded, X0, X1, X2, X3, X4, X5, V0, X6
	073 Move X8, [X21]
	074 Compare X8, 0
	075 JumpIfEqual {115}
	076 Move X9, [X8+72]
	077 NotImplemented "Instruction LDUR not yet implemented."
	078 NotImplemented "Instruction LDUR not yet implemented."
	079 Move X1, [X8+88]
	080 Move [X31+80], X9
	081 Move [X31+48], V1
	082 Move [X31+56], V0
	083 Compare X20, 0
	084 JumpIfEqual {115}
	085 Move V0, [X31+48]
	086 Move V1, [X31+64]
	087 Move X8, [X31+80]
	088 Add X2, X31, 0
	089 Move X0, X20
	090 Move X3, X31
	091 Move [X31], V0
	092 Move [X31+8], V1
	093 Move [X31+32], X8
	094 Call CommandBuffer.SetGlobalTexture, X0, X1, X2
	095 Move X1, [X19+240]
	096 Move X0, X19
	097 Move X2, X31
	098 Call ScriptableRenderPass.ConfigureTarget, X0, X1
	099 Move S0, 1
	100 Move S1, 1
	101 Move S2, 1
	102 Move S3, 1
	103 Move X0, X19
	104 Move W1, W31
	105 Move X2, X31
	106 Call ScriptableRenderPass.ConfigureClear, X0, X1, X2
	107 Move X20, [X31+192]
	108 Move X19, [X31+200]
	109 Move X22, [X31+176]
	110 Move X21, [X31+184]
	111 Move X30, [X31+160]
	112 Move X23, [X31+168]
	113 Add X31, X31, 208
	114 Return 
	115 Call 0x1C17F20

Method: System.Void Execute(UnityEngine.Rendering.ScriptableRenderContext context, ref UnityEngine.Rendering.Universal.RenderingData renderingData)

Disassembly:
	0x03A6FF34 BL 0x1C16CF4
	0x03A6FF38 ADRP X0, 0x6DF000
	0x03A6FF3C LDR X0, [X0 + 0x718]
	0x03A6FF40 BL 0x1C16CF4
	0x03A6FF44 ADRP X0, 0x68B000
	0x03A6FF48 LDR X0, [X0 + 0x700]
	0x03A6FF4C BL 0x1C16CF4
	0x03A6FF50 ADRP X0, 0x684000
	0x03A6FF54 LDR X0, [X0 + 0x598]
	0x03A6FF58 BL 0x1C16CF4
	0x03A6FF5C ADRP X0, 0x6E5000
	0x03A6FF60 LDR X0, [X0 + 0x10]
	0x03A6FF64 BL 0x1C16CF4
	0x03A6FF68 ADRP X0, 0x6E7000
	0x03A6FF6C LDR X0, [X0 + 0xCE0]
	0x03A6FF70 BL 0x1C16CF4
	0x03A6FF74 ADRP X0, 0x6E7000
	0x03A6FF78 LDR X0, [X0 + 0xCE8]
	0x03A6FF7C BL 0x1C16CF4
	0x03A6FF80 MOVZ W8, 0x1
	0x03A6FF84 STRB W8, [X19 + 0x2A0]
	0x03A6FF88 LDR X0, [X21]
	0x03A6FF8C ADRP X19, 0x684000
	0x03A6FF90 LDR W8, [X0 + 0xE0]
	0x03A6FF94 LDR X19, [X19 + 0x598]
	0x03A6FF98 CBNZ W8, 0x3A6FFA4
	0x03A6FF9C BL 0x1C16DFC
	0x03A6FFA0 LDR X0, [X21]
	0x03A6FFA4 LDR X8, [X19]
	0x03A6FFA8 LDR X9, [X0 + 0xB8]
	0x03A6FFAC LDR W10, [X8 + 0xE0]
	0x03A6FFB0 LDR X19, [X9 + 0x80]
	0x03A6FFB4 CBNZ W10, 0x3A6FFC0
	0x03A6FFB8 MOV X0, X8
	0x03A6FFBC BL 0x1C16DFC
	0x03A6FFC0 MOV X0, X19
	0x03A6FFC4 MOV X1, X31
	0x03A6FFC8 MOV X2, X31
	0x03A6FFCC BL 0x3C354F8
	0x03A6FFD0 TBZ X0, 0x0, 0x3A6FFE8
	0x03A6FFD4 LDR X0, [X21]
	0x03A6FFD8 LDR W8, [X0 + 0xE0]
	0x03A6FFDC CBNZ W8, 0x3A70460
	0x03A6FFE0 BL 0x1C16DFC
	0x03A6FFE4 B 0x3A70460
	0x03A6FFE8 ADRP X8, 0x68B000
	0x03A6FFEC LDR X8, [X8 + 0x700]
	0x03A6FFF0 LDR X0, [X8]
	0x03A6FFF4 BL 0x1C16F10
	0x03A6FFF8 MOV X1, X31
	0x03A6FFFC MOV X19, X0
	0x03A70000 BL 0x3C17028
	0x03A70004 CBZ X19, 0x3A7047C
	0x03A70008 ADRP X8, 0x6E6000
	0x03A7000C LDR X8, [X8 + 0xCE8]
	0x03A70010 MOV X0, X19
	0x03A70014 MOV X2, X31
	0x03A70018 LDR X1, [X8]
	0x03A7001C BL 0x3C38A84
	0x03A70020 LDR X0, [X21]
	0x03A70024 LDR W8, [X0 + 0xE0]
	0x03A70028 CBNZ W8, 0x3A70034
	0x03A7002C BL 0x1C16DFC
	0x03A70030 LDR X0, [X21]
	0x03A70034 LDR X8, [X0 + 0xB8]
	0x03A70038 STR X19, [X8 + 0x80]
	0x03A7003C ADRP X8, 0x687000
	0x03A70040 LDR X8, [X8 + 0x3C0]
	0x03A70044 LDR X0, [X8]
	0x03A70048 BL 0x1C16F10
	0x03A7004C ADRP X8, 0x6AF000
	0x03A70050 LDR X8, [X8 + 0x5B8]
	0x03A70054 MOV X20, X0
	0x03A70058 LDR X1, [X8]
	0x03A7005C BL 0x30CB97C
	0x03A70060 CBZ X20, 0x3A7047C
	0x03A70064 ADRP X22, 0x687000
	0x03A70068 LDR X22, [X22 + 0x3B8]
	0x03A7006C LDR W9, [X20 + 0x1C]
	0x03A70070 LDR X8, [X20 + 0x10]
	0x03A70074 LDR X10, [X22]
	0x03A70078 ADD W9, W9, 0x1
	0x03A7007C STR W9, [X20 + 0x1C]
	0x03A70080 CBZ X8, 0x3A7047C
	0x03A70084 LDRSW X9, [X20 + 0x18]
	0x03A70088 LDR W11, [X8 + 0x18]
	0x03A7008C CMP W9, W11
	0x03A70090 B.CS 0x3A700B4
	0x03A70094 MOVZ W11, 0xC
	0x03A70098 ADD W10, W9, 0x1
	0x03A7009C FMOV V0.2S, 0x0
	0x03A700A0 MADD X8, X9, X11, X8
	0x03A700A4 STR W10, [X20 + 0x18]
	0x03A700A8 STR D0, [X8 + 0x20]
	0x03A700AC STR W31, [X8 + 0x28]
	0x03A700B0 B 0x3A700D4
	0x03A700B4 LDR X8, [X10 + 0x20]
	0x03A700B8 FMOV S0, -1
	0x03A700BC FMOV S1, -1
	0x03A700C0 FMOV S2, W31
	0x03A700C4 LDR X8, [X8 + 0xC0]
	0x03A700C8 MOV X0, X20
	0x03A700CC LDR X1, [X8 + 0x70]
	0x03A700D0 BL 0x30CC1B4
	0x03A700D4 LDR W9, [X20 + 0x1C]
	0x03A700D8 LDR X8, [X20 + 0x10]
	0x03A700DC LDR X10, [X22]
	0x03A700E0 ADD W9, W9, 0x1
	0x03A700E4 STR W9, [X20 + 0x1C]
	0x03A700E8 CBZ X8, 0x3A7047C
	0x03A700EC LDRSW X9, [X20 + 0x18]
	0x03A700F0 LDR W11, [X8 + 0x18]
	0x03A700F4 CMP W9, W11
	0x03A700F8 B.CS 0x3A70120
	0x03A700FC ADRP X11, 0xFFFFFFFFFD07D000
	0x03A70100 LDR V0, [X11 + 0xB40]
	0x03A70104 MOVZ W11, 0xC
	0x03A70108 ADD W10, W9, 0x1
	0x03A7010C MADD X8, X9, X11, X8
	0x03A70110 STR W10, [X20 + 0x18]
	0x03A70114 STR D0, [X8 + 0x20]
	0x03A70118 STR W31, [X8 + 0x28]
	0x03A7011C B 0x3A70140
	0x03A70120 LDR X8, [X10 + 0x20]
	0x03A70124 FMOV S0, -1
	0x03A70128 FMOV S1, 1
	0x03A7012C FMOV S2, W31
	0x03A70130 LDR X8, [X8 + 0xC0]
	0x03A70134 MOV X0, X20
	0x03A70138 LDR X1, [X8 + 0x70]
	0x03A7013C BL 0x30CC1B4
	0x03A70140 LDR W9, [X20 + 0x1C]
	0x03A70144 LDR X8, [X20 + 0x10]
	0x03A70148 LDR X10, [X22]
	0x03A7014C ADD W9, W9, 0x1
	0x03A70150 STR W9, [X20 + 0x1C]
	0x03A70154 CBZ X8, 0x3A7047C
	0x03A70158 LDRSW X9, [X20 + 0x18]
	0x03A7015C LDR W11, [X8 + 0x18]
	0x03A70160 CMP W9, W11
	0x03A70164 B.CS 0x3A7018C
	0x03A70168 ADRP X11, 0xFFFFFFFFFD07D000
	0x03A7016C LDR V0, [X11 + 0x930]
	0x03A70170 MOVZ W11, 0xC
	0x03A70174 ADD W10, W9, 0x1
	0x03A70178 MADD X8, X9, X11, X8
	0x03A7017C STR W10, [X20 + 0x18]
	0x03A70180 STR D0, [X8 + 0x20]
	0x03A70184 STR W31, [X8 + 0x28]
	0x03A70188 B 0x3A701AC
	0x03A7018C LDR X8, [X10 + 0x20]
	0x03A70190 FMOV S0, 1
	0x03A70194 FMOV S1, -1
	0x03A70198 FMOV S2, W31
	0x03A7019C LDR X8, [X8 + 0xC0]
	0x03A701A0 MOV X0, X20
	0x03A701A4 LDR X1, [X8 + 0x70]
	0x03A701A8 BL 0x30CC1B4
	0x03A701AC LDR W9, [X20 + 0x1C]
	0x03A701B0 LDR X8, [X20 + 0x10]
	0x03A701B4 LDR X10, [X22]
	0x03A701B8 ADD W9, W9, 0x1
	0x03A701BC STR W9, [X20 + 0x1C]
	0x03A701C0 CBZ X8, 0x3A7047C
	0x03A701C4 LDRSW X9, [X20 + 0x18]
	0x03A701C8 LDR W11, [X8 + 0x18]
	0x03A701CC CMP W9, W11
	0x03A701D0 B.CS 0x3A701F4
	0x03A701D4 MOVZ W11, 0xC
	0x03A701D8 ADD W10, W9, 0x1
	0x03A701DC FMOV V0.2S, 0x0
	0x03A701E0 MADD X8, X9, X11, X8
	0x03A701E4 STR W10, [X20 + 0x18]
	0x03A701E8 STR D0, [X8 + 0x20]
	0x03A701EC STR W31, [X8 + 0x28]
	0x03A701F0 B 0x3A70214
	0x03A701F4 LDR X8, [X10 + 0x20]
	0x03A701F8 FMOV S0, 1
	0x03A701FC FMOV S1, 1
	0x03A70200 FMOV S2, W31
	0x03A70204 LDR X8, [X8 + 0xC0]
	0x03A70208 MOV X0, X20
	0x03A7020C LDR X1, [X8 + 0x70]
	0x03A70210 BL 0x30CC1B4
	0x03A70214 MOV X0, X19
	0x03A70218 MOV X1, X20

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x974000
	007 Move X21, 0x685000
	008 Move W8, [X22+661]
	009 Move X21, [X21+1432]
	010 Move X20, X2
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {48}
	016 Move X0, 0x6E4000
	017 Move X0, [X0+3624]
	018 Call 0x1C17CF4
	019 Move X0, 0x6AD000
	020 Move X0, [X0+2296]
	021 Call 0x1C17CF4
	022 Move X0, 0x685000
	023 Move X0, [X0+2600]
	024 Call 0x1C17CF4
	025 Move X0, 0x685000
	026 Move X0, [X0+2512]
	027 Call 0x1C17CF4
	028 Move X0, 0x685000
	029 Move X0, [X0+1432]
	030 Call 0x1C17CF4
	031 Move X0, 0x6E8000
	032 Move X0, [X0+3152]
	033 Call 0x1C17CF4
	034 Move X0, 0x6E8000
	035 Move X0, [X0+3248]
	036 Call 0x1C17CF4
	037 Move X0, 0x6E7000
	038 Move X0, [X0+3896]
	039 Call 0x1C17CF4
	040 Move X0, 0x6E7000
	041 Move X0, [X0+3936]
	042 Call 0x1C17CF4
	043 Move X0, 0x6E8000
	044 Move X0, [X0+3256]
	045 Call 0x1C17CF4
	046 Move W8, 1
	047 Move [X22+661], W8
	048 Move X0, [X21]
	049 Move [X31+8], W31
	050 Move X21, [X19+224]
	051 Move W8, [X0+224]
	052 Compare W8, 0
	053 JumpIfNotEqual {55}
	054 Call 0x1C17DFC
	055 Move X0, X21
	056 Move X1, X31
	057 Move X2, X31
	058 Call Object.op_Equality, X0, X1
	059 Move TEMP, X0
	060 And TEMP, TEMP, 1
	061 Compare TEMP, 1
	062 JumpIfNotEqual {106}
	063 Move X8, 0x684000
	064 Move X8, [X8+2512]
	065 Move W1, 1
	066 Move X0, [X8]
	067 Call 0x1C17D6C
	068 Move X20, X0
	069 Move X0, X19
	070 Move X1, X31
	071 Call "il2cpp_vm_object_is_inst", X0
	072 Compare X0, 0
	073 JumpIfEqual {174}
	074 Move X8, [X0]
	075 Move X9, [X8+424]
	076 Move X1, [X8+432]
	077 NotImplemented "Instruction BLR not yet implemented."
	078 Compare X20, 0
	079 JumpIfEqual {174}
	080 Move X19, X0
	081 Compare X0, 0
	082 JumpIfEqual {89}
	083 Move X8, [X20]
	084 Move X0, X19
	085 Move X1, [X8+64]
	086 Call 0x1C17E00
	087 Compare X0, 0
	088 JumpIfEqual {176}
	089 Move W8, [X20+24]
	090 Compare W8, 0
	091 JumpIfEqual {175}
	092 Move [X20+32], X19
	093 Move X8, 0x684000
	094 Move X8, [X8+2600]
	095 Move X0, [X8]
	096 Move W8, [X0+224]
	097 Compare W8, 0
	098 JumpIfNotEqual {100}
	099 Call 0x1C17DFC
	100 Move X8, 0x6E7000
	101 Move X8, [X8+3256]
	102 Move X1, X20
	103 Move X2, X31
	104 Move X0, [X8]
	105 Call Debug.LogErrorFormat, X0, X1
	106 Move X22, 0x6E7000
	107 Move X22, [X22+3152]
	108 Move X21, 0x6E3000
	109 Move X20, [X20]
	110 Move X0, [X22]
	111 Move W8, [X0+224]
	112 Move X21, [X21+3624]
	113 Compare W8, 0
	114 JumpIfNotEqual {117}
	115 Call 0x1C17DFC
	116 Move X0, [X22]
	117 Move X8, [X0+184]
	118 Add X0, X31, 8
	119 Move X1, X20
	120 Move X3, X31
	121 Move X2, [X8+8]
	122 Call ProfilingScope..ctor, X0, X1, X2
	123 Move X0, [X21]
	124 Move X21, [X19+240]
	125 Move X19, [X19+224]
	126 Move W8, [X0+224]
	127 Compare W8, 0
	128 JumpIfNotEqual {130}
	129 Call 0x1C17DFC
	130 Move X0, X20
	131 Move X1, X21
	132 Move X2, X21
	133 Move X3, X19
	134 Move W4, W31
	135 Move X5, X31
	136 Call Blitter.BlitCameraTexture, X0, X1, X2, X3, X4
	137 Move X8, 0x6AC000
	138 Move X8, [X8+2296]
	139 Move X0, [X8]
	140 Move W8, [X0+224]
	141 Compare W8, 0
	142 JumpIfNotEqual {144}
	143 Call 0x1C17DFC
	144 Move X8, 0x6E6000
	145 Move X8, [X8+3936]
	146 Move X1, [X8]
	147 Move X0, X20
	148 Move W2, W31
	149 Move X3, X31
	150 Call CoreUtils.SetKeyword, X0, X1, X2
	151 Move X8, 0x6E6000
	152 Move X8, [X8+3896]
	153 Move X1, [X8]
	154 Move X0, X20
	155 Move W2, W31
	156 Move X3, X31
	157 Call CoreUtils.SetKeyword, X0, X1, X2
	158 Move X8, 0x6E7000
	159 Move X8, [X8+3248]
	160 Move X1, [X8]
	161 Move W2, 1
	162 Move X0, X20
	163 Move X3, X31
	164 Call CoreUtils.SetKeyword, X0, X1, X2
	165 Add X0, X31, 8
	166 Move X1, X31
	167 Call ProfilingScope.Dispose, X0
	168 Move X20, [X31+32]
	169 Move X19, [X31+40]
	170 Move X22, [X31+16]
	171 Move X21, [X31+24]
	172 Move X30, [X31+48]
	173 Return 
	174 Call 0x1C17F20
	175 Call 0x1C17F28
	176 Call 0x1C17F44
	177 Move X1, X31
	178 Call 0x1C17DEC
	179 Move X19, X0
	180 NotImplemented "Instruction CMP not yet implemented."
	181 Move X0, X19
	182 Call 0x3EB2AD0
	183 Move X20, [X0]
	184 Call 0x3EB2AE0
	185 Add X0, X31, 8
	186 Move X1, X31
	187 Call ProfilingScope.Dispose, X0
	188 Compare X20, 0
	189 JumpIfEqual {168}
	190 Move X0, X20
	191 Call 0x1C17F18
	192 Move X20, X31
	193 Move X19, X0
	194 Add X0, X31, 8
	195 Move X1, X31
	196 Call ProfilingScope.Dispose, X0
	197 Compare X20, 0
	198 JumpIfNotEqual {201}
	199 Move X0, X19
	200 Call 0x1D2D690
	201 Move X0, X20
	202 Call 0x1C17F18
	203 Call 0x1991590

Method: System.Void .cctor()

Disassembly:
	0x03A7021C MOV X2, X31
	0x03A70220 BL 0x3C18380
	0x03A70224 LDR X8, [X21]
	0x03A70228 ADRP X9, 0x6DE000
	0x03A7022C LDR X8, [X8 + 0xB8]
	0x03A70230 LDR X9, [X9 + 0x718]
	0x03A70234 LDR X19, [X8 + 0x80]
	0x03A70238 LDR X0, [X9]
	0x03A7023C BL 0x1C16F10
	0x03A70240 ADRP X8, 0x6DF000
	0x03A70244 LDR X8, [X8 + 0xF08]
	0x03A70248 MOV X20, X0
	0x03A7024C LDR X1, [X8]
	0x03A70250 BL 0x30C8E58
	0x03A70254 CBZ X20, 0x3A7047C
	0x03A70258 ADRP X22, 0x6DE000
	0x03A7025C LDR X22, [X22 + 0x720]
	0x03A70260 LDR W10, [X20 + 0x1C]
	0x03A70264 LDR X8, [X20 + 0x10]
	0x03A70268 LDR X9, [X22]
	0x03A7026C ADD W10, W10, 0x1
	0x03A70270 STR W10, [X20 + 0x1C]
	0x03A70274 CBZ X8, 0x3A7047C
	0x03A70278 LDRSW X10, [X20 + 0x18]
	0x03A7027C LDR W11, [X8 + 0x18]
	0x03A70280 CMP W10, W11
	0x03A70284 B.CS 0x3A7029C
	0x03A70288 ADD W9, W10, 0x1
	0x03A7028C ADD X8, X8, X10, 0x3, LSL
	0x03A70290 STR W9, [X20 + 0x18]
	0x03A70294 STR X31, [X8 + 0x20]
	0x03A70298 B 0x3A702B8
	0x03A7029C LDR X8, [X9 + 0x20]
	0x03A702A0 FMOV S0, W31
	0x03A702A4 FMOV S1, W31
	0x03A702A8 MOV X0, X20
	0x03A702AC LDR X8, [X8 + 0xC0]
	0x03A702B0 LDR X1, [X8 + 0x70]
	0x03A702B4 BL 0x30C9664
	0x03A702B8 LDR W9, [X20 + 0x1C]
	0x03A702BC LDR X8, [X20 + 0x10]
	0x03A702C0 LDR X10, [X22]
	0x03A702C4 ADD W9, W9, 0x1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x973000
	007 Move X19, 0x6E7000
	008 Move X21, 0x6E7000
	009 Move X20, 0x6E1000
	010 Move W8, [X22+662]
	011 Move X19, [X19+3264]
	012 Move X21, [X21+3152]
	013 Move X20, [X20+1432]
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {29}
	018 Move X0, 0x6E1000
	019 Move X0, [X0+1432]
	020 Call 0x1C17CF4
	021 Move X0, 0x6E7000
	022 Move X0, [X0+3152]
	023 Call 0x1C17CF4
	024 Move X0, 0x6E7000
	025 Move X0, [X0+3264]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X22+662], W8
	029 Move X8, [X21]
	030 Move X9, [X19]
	031 Move X8, [X8+184]
	032 Move [X8], X9
	033 Move X8, [X21]
	034 Move X0, [X20]
	035 Move X8, [X8+184]
	036 Move X19, [X8]
	037 Call 0x1C17F10
	038 Move X1, X19
	039 Move X2, X31
	040 Move X20, X0
	041 Call ProfilingSampler..ctor, X0, X1
	042 Move X8, [X21]
	043 Move X22, [X31+16]
	044 Move X21, [X31+24]
	045 Move X8, [X8+184]
	046 Move [X8+8], X20
	047 Move X20, [X31+32]
	048 Move X19, [X31+40]
	049 Move X30, [X31+48]
	050 Return 

