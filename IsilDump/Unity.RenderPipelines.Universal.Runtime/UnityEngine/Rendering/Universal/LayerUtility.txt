Type: UnityEngine.Rendering.Universal.LayerUtility

Method: System.UInt32 get_maxTextureCount()

Disassembly:
	0x03A1E374 SUBS X9, X9, 0x1
	0x03A1E378 ADD X10, X10, 0x10
	0x03A1E37C B.NE 0x3A1E368
	0x03A1E380 MOV X0, X20
	0x03A1E384 MOV W2, W31
	0x03A1E388 BL 0x1C5C788
	0x03A1E38C B 0x3A1E39C
	0x03A1E390 LDRSW X9, [X10]
	0x03A1E394 ADD X8, X8, X9, 0x4, LSL
	0x03A1E398 ADD X0, X8, 0x138
	0x03A1E39C LDP X8, X1, [X0]
	0x03A1E3A0 MOV X0, X20
	0x03A1E3A4 BLR X8
	0x03A1E3A8 CBZ X0, 0x3A1E410
	0x03A1E3AC LDR W1, [X0 + 0x130]
	0x03A1E3B0 LDP V0, V1, [X31 + 0x80]
	0x03A1E3B4 LDR V2, [X31 + 0xA]
	0x03A1E3B8 LDR W8, [X31 + 0xB0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x9C4000
	005 Move X20, 0x737000
	006 Move W8, [X19+4068]
	007 Move X20, [X20+1688]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x737000
	013 Move X0, [X0+1688]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+4068], W8
	017 Move X8, [X20]
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X8, [X8+184]
	021 Move W0, [X8+8]
	022 Move X30, [X31+32]
	023 Return X0

Method: System.Void set_maxTextureCount(System.UInt32 value)

Disassembly:
	0x03A1E3BC STP V0, V1, [X31 + 0x40]
	0x03A1E3C0 STR V2, [X31 + 0x6]
	0x03A1E3C4 STR W8, [X31 + 0x70]
	0x03A1E3C8 CBZ X19, 0x3A1E410
	0x03A1E3CC LDP V0, V1, [X31 + 0x40]
	0x03A1E3D0 LDR V2, [X31 + 0x6]
	0x03A1E3D4 LDR W8, [X31 + 0x70]
	0x03A1E3D8 ADD X2, X31, 0x0
	0x03A1E3DC MOVZ W3, 0x1
	0x03A1E3E0 MOV X0, X19
	0x03A1E3E4 MOV X4, X31
	0x03A1E3E8 STP V0, V1, [X31]
	0x03A1E3EC STR V2, [X31 + 0x2]
	0x03A1E3F0 STR W8, [X31 + 0x30]
	0x03A1E3F4 BL 0x3C4CB34
	0x03A1E3F8 LDP X20, X19, [X31 + 0xF0]
	0x03A1E3FC LDP X22, X21, [X31 + 0xE0]
	0x03A1E400 LDP X30, X23, [X31 + 0xD0]
	0x03A1E404 LDR V8, [X31 + 0xC0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x9C4000
	006 Move X21, 0x737000
	007 Move W8, [X20+4069]
	008 Move X21, [X21+1688]
	009 Move W19, W0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x737000
	015 Move X0, [X0+1688]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+4069], W8
	019 Move X8, [X21]
	020 Move X8, [X8+184]
	021 Move [X8+8], W19
	022 Move X20, [X31+16]
	023 Move X19, [X31+24]
	024 Move X30, [X31+32]
	025 Move X21, [X31+40]
	026 Return 

Method: System.Void InitializeBudget(System.UInt32 maxTextureCount)

Disassembly:
	0x03A1CDCC STP X20, X19, [X31 + 0x10]
	0x03A1CDD0 ADRP X19, 0x9C5000
	0x03A1CDD4 ADRP X20, 0x738000
	0x03A1CDD8 LDRB W8, [X19 + 0xFDD]
	0x03A1CDDC LDR X20, [X20 + 0x680]
	0x03A1CDE0 TBNZ X8, 0x0, 0x3A1CDF8
	0x03A1CDE4 ADRP X0, 0x738000
	0x03A1CDE8 LDR X0, [X0 + 0x680]
	0x03A1CDEC BL 0x1C16CF4
	0x03A1CDF0 MOVZ W8, 0x1
	0x03A1CDF4 STRB W8, [X19 + 0xFDD]
	0x03A1CDF8 LDR X0, [X20]
	0x03A1CDFC BL 0x1C16F10
	0x03A1CE00 MOV X1, X31
	0x03A1CE04 MOV X19, X0
	0x03A1CE08 BL 0x33BDD8C
	0x03A1CE0C LDR X8, [X20]
	0x03A1CE10 LDR X8, [X8 + 0xB8]
	0x03A1CE14 STR X19, [X8]
	0x03A1CE18 LDP X20, X19, [X31 + 0x10]
	0x03A1CE1C LDR X30, [X31], #0x20
	0x03A1CE20 RET

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x9C7000
	005 Move W8, [X20+16]
	006 Move W19, W0
	007 Compare W8, 0
	008 JumpIfNotEqual {14}
	009 Move X0, 0x739000
	010 Move X0, [X0+1688]
	011 Call 0x1C17CF4
	012 Move W8, 1
	013 Move [X20+16], W8
	014 Move X8, 0x739000
	015 Move X8, [X8+1688]
	016 NotImplemented "Instruction CMP not yet implemented."
	017 Move W9, 4
	018 NotImplemented "Instruction CSEL not yet implemented."
	019 Move X8, [X8]
	020 Move X20, [X31+16]
	021 Move X19, [X31+24]
	022 Move X8, [X8+184]
	023 Move [X8+8], W9
	024 Move X30, [X31+32]
	025 Return 

Method: System.Boolean CanBatchLightsInLayer(System.Int32 layerIndex1, System.Int32 layerIndex2, UnityEngine.SortingLayer[] sortingLayers, UnityEngine.Rendering.Universal.ILight2DCullResult lightCullResult)

Disassembly:
	0x03A1E408 ADD X31, X31, 0x100
	0x03A1E40C RET
	0x03A1E410 BL 0x1C16F20
	0x03A1E414 SUB X31, X31, 0x120
	0x03A1E418 STP D11, D10, [X31 + 0xD0]
	0x03A1E41C STP D9, D8, [X31 + 0xE0]
	0x03A1E420 STP X29, X30, [X31 + 0xF0]
	0x03A1E424 STP X22, X21, [X31 + 0x100]
	0x03A1E428 STP X20, X19, [X31 + 0x110]
	0x03A1E42C CBZ X1, 0x3A1E520
	0x03A1E430 LDR V11, [X1 + 0xF0]
	0x03A1E434 MOV X22, X1
	0x03A1E438 MOV X21, X0
	0x03A1E43C MOV X0, X1
	0x03A1E440 MOV X1, X31
	0x03A1E444 MOV X19, X3
	0x03A1E448 MOV X20, X2
	0x03A1E44C BL 0x3C32E90
	0x03A1E450 CBZ X0, 0x3A1E520
	0x03A1E454 MOV X1, X31
	0x03A1E458 BL 0x3C3F58C
	0x03A1E45C MOV X0, X22
	0x03A1E460 MOV X1, X31
	0x03A1E464 MOV V8.16B, V0.16B
	0x03A1E468 MOV V9.16B, V1.16B
	0x03A1E46C MOV V10.16B, V2.16B
	0x03A1E470 BL 0x3C32E90
	0x03A1E474 CBZ X0, 0x3A1E520
	0x03A1E478 MOV X1, X31
	0x03A1E47C BL 0x3C3DEB4
	0x03A1E480 MOV V4.16B, V0.16B
	0x03A1E484 MOV V5.16B, V1.16B
	0x03A1E488 MOV V6.16B, V2.16B
	0x03A1E48C MOV V7.16B, V3.16B
	0x03A1E490 ADD X8, X31, 0x50
	0x03A1E494 MOV V0.16B, V8.16B
	0x03A1E498 MOV V1.16B, V9.16B
	0x03A1E49C MOV V2.16B, V10.16B
	0x03A1E4A0 MOV V3.16B, V4.16B
	0x03A1E4A4 MOV V4.16B, V5.16B
	0x03A1E4A8 MOV V5.16B, V6.16B
	0x03A1E4AC MOV V6.16B, V7.16B
	0x03A1E4B0 MOV X0, X31
	0x03A1E4B4 STP S11, S11, [X31 + 0x4]
	0x03A1E4B8 STR S11, [X31]
	0x03A1E4BC BL 0x3C26FA8
	0x03A1E4C0 LDP V1, V0, [X31 + 0x70]
	0x03A1E4C4 LDP V2, V3, [X31 + 0x50]
	0x03A1E4C8 STP V1, V0, [X31 + 0xB0]
	0x03A1E4CC STP V2, V3, [X31 + 0x90]
	0x03A1E4D0 STP V2, V3, [X31 + 0x50]
	0x03A1E4D4 STP V1, V0, [X31 + 0x70]
	0x03A1E4D8 CBZ X21, 0x3A1E520
	0x03A1E4DC LDP V0, V1, [X31 + 0x50]
	0x03A1E4E0 LDP V2, V3, [X31 + 0x70]
	0x03A1E4E4 ADD X2, X31, 0x10
	0x03A1E4E8 MOV X0, X21
	0x03A1E4EC MOV X1, X20
	0x03A1E4F0 MOV X3, X19
	0x03A1E4F4 MOV X4, X31
	0x03A1E4F8 STP V0, V1, [X31 + 0x10]
	0x03A1E4FC STP V2, V3, [X31 + 0x30]
	0x03A1E500 BL 0x3C4F0D4
	0x03A1E504 LDP X20, X19, [X31 + 0x110]
	0x03A1E508 LDP X22, X21, [X31 + 0x100]
	0x03A1E50C LDP X29, X30, [X31 + 0xF0]
	0x03A1E510 LDP D9, D8, [X31 + 0xE0]
	0x03A1E514 LDP D11, D10, [X31 + 0xD0]
	0x03A1E518 ADD X31, X31, 0x120
	0x03A1E51C RET
	0x03A1E520 BL 0x1C16F20
	0x03A1E524 STR X30, [X31 - 0x10]!
	0x03A1E528 CBZ X0, 0x3A1E554
	0x03A1E52C LDRB W8, [X0 + 0x7D]
	0x03A1E530 CBZ W8, 0x3A1E548
	0x03A1E534 LDR V0, [X0 + 0x80]
	0x03A1E538 FCMP S0, 0x0
	0x03A1E53C B.LE 0x3A1E548
	0x03A1E540 LDR X30, [X31], #0x10
	0x03A1E544 B 0x3A15404
	0x03A1E548 MOV W0, W31
	0x03A1E54C LDR X30, [X31], #0x10
	0x03A1E550 RET
	0x03A1E554 BL 0x1C16F20
	0x03A1E558 STR X30, [X31 - 0x20]!
	0x03A1E55C STP X20, X19, [X31 + 0x10]
	0x03A1E560 CBZ X0, 0x3A1E5A4
	0x03A1E564 MOV W19, W1
	0x03A1E568 MOV X20, X0
	0x03A1E56C BL 0x3A137AC
	0x03A1E570 LDRB W8, [X20 + 0x84]
	0x03A1E574 CBZ W8, 0x3A1E594
	0x03A1E578 LDR V0, [X20 + 0x88]
	0x03A1E57C FCMP S0, 0x0
	0x03A1E580 CSET W8, GT
	0x03A1E584 CMP W0, W19
	0x03A1E588 CSET W9, EQ
	0x03A1E58C AND W0, W9, W8, 0x0
	0x03A1E590 B 0x3A1E598
	0x03A1E594 MOV W0, W31
	0x03A1E598 LDP X20, X19, [X31 + 0x10]
	0x03A1E59C LDR X30, [X31], #0x20
	0x03A1E5A0 RET
	0x03A1E5A4 BL 0x1C16F20
	0x03A1E5A8 STP X30, X23, [X31 - 0x30]!
	0x03A1E5AC STP X22, X21, [X31 + 0x10]
	0x03A1E5B0 STP X20, X19, [X31 + 0x20]
	0x03A1E5B4 ADRP X22, 0x9C3000
	0x03A1E5B8 ADRP X23, 0x6D5000
	0x03A1E5BC LDRB W8, [X22 + 0xFF2]
	0x03A1E5C0 LDR X23, [X23 + 0x598]
	0x03A1E5C4 MOV W19, W2
	0x03A1E5C8 MOV W21, W1
	0x03A1E5CC MOV X20, X0
	0x03A1E5D0 TBNZ X8, 0x0, 0x3A1E5E8
	0x03A1E5D4 ADRP X0, 0x6D5000
	0x03A1E5D8 LDR X0, [X0 + 0x598]
	0x03A1E5DC BL 0x1C16CF4
	0x03A1E5E0 MOVZ W8, 0x1
	0x03A1E5E4 STRB W8, [X22 + 0xFF2]
	0x03A1E5E8 LDR X0, [X23]
	0x03A1E5EC LDR W8, [X0 + 0xE0]
	0x03A1E5F0 CBNZ W8, 0x3A1E5F8
	0x03A1E5F4 BL 0x1C16DFC
	0x03A1E5F8 MOV X0, X20
	0x03A1E5FC MOV X1, X31
	0x03A1E600 MOV X2, X31
	0x03A1E604 BL 0x3C354F8
	0x03A1E608 TBZ X0, 0x0, 0x3A1E640
	0x03A1E60C CBZ X20, 0x3A1E654
	0x03A1E610 LDR W8, [X20 + 0x24]
	0x03A1E614 CMP W8, 0x4
	0x03A1E618 B.EQ 0x3A1E640
	0x03A1E61C LDR W8, [X20 + 0x28]
	0x03A1E620 CMP W8, W21
	0x03A1E624 B.NE 0x3A1E640
	0x03A1E628 MOV X0, X20
	0x03A1E62C MOV W1, W19
	0x03A1E630 LDP X20, X19, [X31 + 0x20]
	0x03A1E634 LDP X22, X21, [X31 + 0x10]
	0x03A1E638 LDP X30, X23, [X31], #0x30
	0x03A1E63C B 0x3A15404
	0x03A1E640 LDP X20, X19, [X31 + 0x20]
	0x03A1E644 LDP X22, X21, [X31 + 0x10]
	0x03A1E648 MOV W0, W31
	0x03A1E64C LDP X30, X23, [X31], #0x30
	0x03A1E650 RET
	0x03A1E654 BL 0x1C16F20
	0x03A1E658 STR D8, [X31 - 0x70]!
	0x03A1E65C STP X29, X30, [X31 + 0x10]
	0x03A1E660 STP X28, X27, [X31 + 0x20]
	0x03A1E664 STP X26, X25, [X31 + 0x30]
	0x03A1E668 STP X24, X23, [X31 + 0x40]
	0x03A1E66C STP X22, X21, [X31 + 0x50]
	0x03A1E670 STP X20, X19, [X31 + 0x60]
	0x03A1E674 SUB X31, X31, 0x6A0
	0x03A1E678 STP X5, X1, [X31 + 0x10]
	0x03A1E67C ADRP X20, 0x9C3000
	0x03A1E680 ADRP X23, 0x736000
	0x03A1E684 LDRB W8, [X20 + 0xFF3]
	0x03A1E688 LDR X23, [X23 + 0x6A0]
	0x03A1E68C MOV X19, X6
	0x03A1E690 MOV W21, W4
	0x03A1E694 MOV X22, X3
	0x03A1E698 MOV W29, W2
	0x03A1E69C MOV X25, X0
	0x03A1E6A0 TBNZ X8, 0x0, 0x3A1E724
	0x03A1E6A4 ADRP X0, 0x6D5000
	0x03A1E6A8 LDR X0, [X0 + 0xA28]
	0x03A1E6AC BL 0x1C16CF4
	0x03A1E6B0 ADRP X0, 0x736000
	0x03A1E6B4 LDR X0, [X0 + 0x660]
	0x03A1E6B8 BL 0x1C16CF4
	0x03A1E6BC ADRP X0, 0x736000
	0x03A1E6C0 LDR X0, [X0 + 0x548]
	0x03A1E6C4 BL 0x1C16CF4
	0x03A1E6C8 ADRP X0, 0x736000
	0x03A1E6CC LDR X0, [X0 + 0x670]
	0x03A1E6D0 BL 0x1C16CF4
	0x03A1E6D4 ADRP X0, 0x736000
	0x03A1E6D8 LDR X0, [X0 + 0x6A8]
	0x03A1E6DC BL 0x1C16CF4
	0x03A1E6E0 ADRP X0, 0x736000
	0x03A1E6E4 LDR X0, [X0 + 0x6B0]
	0x03A1E6E8 BL 0x1C16CF4
	0x03A1E6EC ADRP X0, 0x6D5000
	0x03A1E6F0 LDR X0, [X0 + 0x598]
	0x03A1E6F4 BL 0x1C16CF4
	0x03A1E6F8 ADRP X0, 0x736000
	0x03A1E6FC LDR X0, [X0 + 0x658]
	0x03A1E700 BL 0x1C16CF4
	0x03A1E704 ADRP X0, 0x736000
	0x03A1E708 LDR X0, [X0 + 0x6A0]
	0x03A1E70C BL 0x1C16CF4
	0x03A1E710 ADRP X0, 0x736000
	0x03A1E714 LDR X0, [X0 + 0x768]
	0x03A1E718 BL 0x1C16CF4
	0x03A1E71C MOVZ W8, 0x1
	0x03A1E720 STRB W8, [X20 + 0xFF3]
	0x03A1E724 LDR X0, [X23]
	0x03A1E728 STR X31, [X31 + 0x698]
	0x03A1E72C STR X31, [X31 + 0x690]
	0x03A1E730 LDR W8, [X0 + 0xE0]
	0x03A1E734 CBNZ W8, 0x3A1E73C
	0x03A1E738 BL 0x1C16DFC
	0x03A1E73C ADRP X20, 0x9C4000
	0x03A1E740 LDRB W8, [X20 + 0x11]
	0x03A1E744 CBNZ W8, 0x3A1E75C
	0x03A1E748 ADRP X0, 0x736000
	0x03A1E74C LDR X0, [X0 + 0x6A0]
	0x03A1E750 BL 0x1C16CF4
	0x03A1E754 MOVZ W8, 0x1
	0x03A1E758 STRB W8, [X20 + 0x11]
	0x03A1E75C LDR X0, [X23]
	0x03A1E760 LDR W8, [X0 + 0xE0]
	0x03A1E764 CBNZ W8, 0x3A1E770
	0x03A1E768 BL 0x1C16DFC
	0x03A1E76C LDR X0, [X23]
	0x03A1E770 LDR X8, [X0 + 0xB8]
	0x03A1E774 LDR W8, [X8 + 0x78]
	0x03A1E778 UBFM W20, W8, 0x1E, 0x1D
	0x03A1E77C CBZ W20, 0x3A1EDD8
	0x03A1E780 STR X22, [X31 + 0x38]
	0x03A1E784 CBZ X19, 0x3A1EE28
	0x03A1E788 ADRP X8, 0x736000
	0x03A1E78C LDR X8, [X8 + 0x6B0]
	0x03A1E790 LDR W1, [X19 + 0x18]
	0x03A1E794 ADD X0, X31, 0x690
	0x03A1E798 MOVZ W2, 0x2
	0x03A1E79C LDR X4, [X8]
	0x03A1E7A0 MOVZ W3, 0x1
	0x03A1E7A4 BL 0x23C7EE0
	0x03A1E7A8 LDR W8, [X19 + 0x18]
	0x03A1E7AC CMP W8, 0x1
	0x03A1E7B0 B.LT 0x3A1EDC0
	0x03A1E7B4 MOV W24, W31
	0x03A1E7B8 MOV W9, W20
	0x03A1E7BC MOVZ W23, 0x1
	0x03A1E7C0 STR X9, [X31 + 0x30]
	0x03A1E7C4 MOV W8, W8
	0x03A1E7C8 SUB X28, X8, W24, SXTW
	0x03A1E7CC CMP X28, 0x1
	0x03A1E7D0 B.LT 0x3A1E8F8
	0x03A1E7D4 MOV W22, W31
	0x03A1E7D8 MOV W20, W31
	0x03A1E7DC LDR X9, [X31 + 0x30]
	0x03A1E7E0 SXTW X8, W20
	0x03A1E7E4 CMP X8, X9
	0x03A1E7E8 B.GE 0x3A1E900
	0x03A1E7EC ADRP X8, 0x736000
	0x03A1E7F0 LDR X8, [X8 + 0x670]
	0x03A1E7F4 ADD W26, W24, W22
	0x03A1E7F8 MOV X0, X19
	0x03A1E7FC MOV W1, W26
	0x03A1E800 LDR X2, [X8]
	0x03A1E804 BL 0x301BCCC
	0x03A1E808 ADRP X8, 0x736000
	0x03A1E80C LDR X8, [X8 + 0x658]
	0x03A1E810 MOV X27, X0
	0x03A1E814 LDR X8, [X8]
	0x03A1E818 LDR W9, [X8 + 0xE0]
	0x03A1E81C CBNZ W9, 0x3A1E828
	0x03A1E820 MOV X0, X8
	0x03A1E824 BL 0x1C16DFC
	0x03A1E828 MOV X0, X27
	0x03A1E82C MOV W1, W29
	0x03A1E830 MOV W2, W21
	0x03A1E834 BL 0x3A1E5A8
	0x03A1E838 TBZ X0, 0x0, 0x3A1E8E8
	0x03A1E83C ADRP X8, 0x736000
	0x03A1E840 LDR X8, [X8 + 0x658]
	0x03A1E844 LDR X0, [X8]
	0x03A1E848 LDR W8, [X0 + 0xE0]
	0x03A1E84C CBNZ W8, 0x3A1E854
	0x03A1E850 BL 0x1C16DFC
	0x03A1E854 MOV X0, X27
	0x03A1E858 MOV W1, W21
	0x03A1E85C BL 0x3A1E524
	0x03A1E860 TBZ X0, 0x0, 0x3A1E8E8
	0x03A1E864 LDR X8, [X31 + 0x690]
	0x03A1E868 LDR X1, [X31 + 0x18]
	0x03A1E86C ADD X0, X31, 0x3D0
	0x03A1E870 MOVZ W2, 0x2B8
	0x03A1E874 STRB W31, [X8, W26, SXTW]
	0x03A1E878 BL 0x3EB1AC0
	0x03A1E87C CBZ X27, 0x3A1EE28
	0x03A1E880 ADRP X8, 0x736000
	0x03A1E884 LDR X8, [X8 + 0x6A0]
	0x03A1E888 LDR V8, [X27 + 0x80]
	0x03A1E88C LDR X0, [X8]
	0x03A1E890 LDR W8, [X0 + 0xE0]
	0x03A1E894 CBNZ W8, 0x3A1E89C
	0x03A1E898 BL 0x1C16DFC
	0x03A1E89C ADD X0, X31, 0x118
	0x03A1E8A0 ADD X1, X31, 0x3D0
	0x03A1E8A4 MOVZ W2, 0x2B8
	0x03A1E8A8 BL 0x3EB1AC0
	0x03A1E8AC LDR X2, [X31 + 0x38]
	0x03A1E8B0 ADD X1, X31, 0x118
	0x03A1E8B4 MOV X0, X25
	0x03A1E8B8 MOV W3, W21
	0x03A1E8BC MOV X4, X27
	0x03A1E8C0 MOV W5, W20
	0x03A1E8C4 MOV V0.16B, V8.16B
	0x03A1E8C8 MOV X6, X31
	0x03A1E8CC BL 0x3A28F90
	0x03A1E8D0 TBZ X0, 0x0, 0x3A1E8E8
	0x03A1E8D4 LDR X8, [X31 + 0x690]
	0x03A1E8D8 SXTW X9, W26
	0x03A1E8DC MOVZ W10, 0x1
	0x03A1E8E0 ADD W20, W20, 0x1
	0x03A1E8E4 STRB W10, [X8, X9, LSL]
	0x03A1E8E8 ADD W22, W22, 0x1
	0x03A1E8EC CMP X28, W22, SXTW
	0x03A1E8F0 B.GT 0x3A1E7DC
	0x03A1E8F4 B 0x3A1E900
	0x03A1E8F8 MOV W20, W31
	0x03A1E8FC MOV W22, W31
	0x03A1E900 CMP W20, 0x1
	0x03A1E904 CSET W8, LT
	0x03A1E908 BIC W8, W8, W23, 0x0
	0x03A1E90C ADRP X23, 0x736000
	0x03A1E910 LDR X0, [X31 + 0x38]
	0x03A1E914 LDR X23, [X23 + 0x658]
	0x03A1E918 TBNZ X8, 0x0, 0x3A1E960
	0x03A1E91C LDR X9, [X31 + 0x10]
	0x03A1E920 LDR X8, [X9 + 0x20]
	0x03A1E924 LDP V1, V0, [X9]
	0x03A1E928 STR X8, [X31 + 0x3F0]
	0x03A1E92C STP V1, V0, [X31 + 0x3D0]
	0x03A1E930 CBZ X0, 0x3A1EE28
	0x03A1E934 LDP V0, V1, [X31 + 0x3D0]
	0x03A1E938 LDR X8, [X31 + 0x3F0]
	0x03A1E93C ADD X1, X31, 0xF0
	0x03A1E940 MOVZ W4, 0x2
	0x03A1E944 MOVZ W5, 0x3
	0x03A1E948 MOV W2, W31
	0x03A1E94C MOV W3, W31
	0x03A1E950 MOV X6, X31
	0x03A1E954 STP V0, V1, [X31 + 0xF0]
	0x03A1E958 STR X8, [X31 + 0x110]
	0x03A1E95C BL 0x3C4DBAC

ISIL:
	001 Subtract X31, X31, 224
	002 Move [X31+128], X29
	003 Move [X31+136], X30
	004 Move [X31+144], X28
	005 Move [X31+152], X27
	006 Move [X31+160], X26
	007 Move [X31+168], X25
	008 Move [X31+176], X24
	009 Move [X31+184], X23
	010 Move [X31+192], X22
	011 Move [X31+200], X21
	012 Move [X31+208], X20
	013 Move [X31+216], X19
	014 Move X23, 0x9C4000
	015 Move W8, [X23+4070]
	016 Move X21, X3
	017 Move X20, X2
	018 Move W22, W1
	019 Move W19, W0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {65}
	024 Move X0, 0x737000
	025 Move X0, [X0+1400]
	026 Call 0x1C17CF4
	027 Move X0, 0x737000
	028 Move X0, [X0+1360]
	029 Call 0x1C17CF4
	030 Move X0, 0x737000
	031 Move X0, [X0+1408]
	032 Call 0x1C17CF4
	033 Move X0, 0x737000
	034 Move X0, [X0+1416]
	035 Call 0x1C17CF4
	036 Move X0, 0x737000
	037 Move X0, [X0+1368]
	038 Call 0x1C17CF4
	039 Move X0, 0x737000
	040 Move X0, [X0+1424]
	041 Call 0x1C17CF4
	042 Move X0, 0x737000
	043 Move X0, [X0+1432]
	044 Call 0x1C17CF4
	045 Move X0, 0x737000
	046 Move X0, [X0+1376]
	047 Call 0x1C17CF4
	048 Move X0, 0x737000
	049 Move X0, [X0+1440]
	050 Call 0x1C17CF4
	051 Move X0, 0x737000
	052 Move X0, [X0+1640]
	053 Call 0x1C17CF4
	054 Move X0, 0x737000
	055 Move X0, [X0+1480]
	056 Call 0x1C17CF4
	057 Move X0, 0x737000
	058 Move X0, [X0+1488]
	059 Call 0x1C17CF4
	060 Move X0, 0x737000
	061 Move X0, [X0+1384]
	062 Call 0x1C17CF4
	063 Move W8, 1
	064 Move [X23+4070], W8
	065 Move [X31+96], X31
	066 Move [X31+104], X31
	067 Move [X31+112], X31
	068 Move [X31+64], X31
	069 Move [X31+72], X31
	070 Move [X31+80], X31
	071 Move [X31+32], X31
	072 Move [X31+40], X31
	073 Move [X31+48], X31
	074 Compare X20, 0
	075 JumpIfEqual {310}
	076 Move W8, [X20+24]
	077 NotImplemented "Instruction CMP not yet implemented."
	078 Add X8, X20, W19
	079 Add X0, X8, 32
	080 Move X1, X31
	081 Call SortingLayer.get_id, X0
	082 Move W8, [X20+24]
	083 NotImplemented "Instruction CMP not yet implemented."
	084 Add X8, X20, W22
	085 Move W19, W0
	086 Add X0, X8, 32
	087 Move X1, X31
	088 Call SortingLayer.get_id, X0
	089 Compare X21, 0
	090 JumpIfEqual {310}
	091 Move X10, 0x737000
	092 Move X8, [X21]
	093 Move X10, [X10+1640]
	094 Move W20, W0
	095 NotImplemented "Instruction LDRH not yet implemented."
	096 Move X1, [X10]
	097 Compare X9, 0
	098 JumpIfEqual {105}
	099 Move X10, [X8+176]
	100 Add X10, X10, 8
	101 NotImplemented "Instruction LDUR not yet implemented."
	102 NotImplemented "Instruction CMP not yet implemented."
	103 Subtract X9, X9, 1
	104 Add X10, X10, 16
	105 Move X0, X21
	106 Move W2, W31
	107 Call 0x1C5D788
	108 NotImplemented "Instruction LDRSW not yet implemented."
	109 Add X8, X8, X9
	110 Add X0, X8, 312
	111 Move X8, [X0]
	112 Move X1, [X0+8]
	113 Move X0, X21
	114 NotImplemented "Instruction BLR not yet implemented."
	115 Compare X0, 0
	116 JumpIfEqual {310}
	117 Move X8, 0x737000
	118 Move X8, [X8+1384]
	119 Move X28, 0x737000
	120 Move X25, 0x737000
	121 Move X26, 0x737000
	122 Move X28, [X28+1368]
	123 Move X25, [X25+1416]
	124 Move X26, [X26+1488]
	125 Move X1, [X8]
	126 Move X27, 0x737000
	127 Move X24, 0x737000
	128 Move X29, 0x737000
	129 Move X27, [X27+1424]
	130 Move X24, [X24+1400]
	131 Move X29, [X29+1360]
	132 Add X8, X31, 8
	133 Call List`1<Object>.GetEnumerator, X0
	134 NotImplemented "Instruction LDUR not yet implemented."
	135 Move X8, [X31+24]
	136 Move [X31+6], V0
	137 Move [X31+112], X8
	138 Move X1, [X28]
	139 Add X0, X31, 96
	140 Call Enumerator<Object>.MoveNext, X0
	141 Move TEMP, X0
	142 And TEMP, TEMP, 1
	143 Compare TEMP, 1
	144 JumpIfNotEqual {164}
	145 Move X22, [X31+112]
	146 Compare X22, 0
	147 JumpIfEqual {305}
	148 Move X0, X22
	149 Move W1, W19
	150 Call Light2D.IsLitLayer, X0, X1
	151 Move W23, W0
	152 Move X0, X22
	153 Move W1, W20
	154 Call Light2D.IsLitLayer, X0, X1
	155 Xor W8, W23, W0
	156 Move TEMP, X8
	157 And TEMP, TEMP, 1
	158 Compare TEMP, 1
	159 JumpIfNotEqual {138}
	160 Move X1, [X29]
	161 Add X0, X31, 96
	162 Call Enumerator<Object>.Dispose, X0
	163 Move W0, W31
	164 Move X1, [X29]
	165 Add X0, X31, 96
	166 Call Enumerator<Object>.Dispose, X0
	167 Move X8, [X21]
	168 Move X10, 0x737000
	169 NotImplemented "Instruction LDRH not yet implemented."
	170 Move X10, [X10+1640]
	171 Move X1, [X10]
	172 Compare X9, 0
	173 JumpIfEqual {180}
	174 Move X10, [X8+176]
	175 Add X10, X10, 8
	176 NotImplemented "Instruction LDUR not yet implemented."
	177 NotImplemented "Instruction CMP not yet implemented."
	178 Subtract X9, X9, 1
	179 Add X10, X10, 16
	180 Move W2, 1
	181 Move X0, X21
	182 Call 0x1C5D788
	183 Move W9, [X10]
	184 Add W9, W9, 1
	185 Add X8, X8, W9
	186 Add X0, X8, 312
	187 Move X8, [X0]
	188 Move X1, [X0+8]
	189 Move X0, X21
	190 NotImplemented "Instruction BLR not yet implemented."
	191 Compare X0, 0
	192 JumpIfEqual {310}
	193 Move X8, 0x737000
	194 Move X8, [X8+1480]
	195 Move X1, [X8]
	196 Add X8, X31, 8
	197 Call List`1<Object>.GetEnumerator, X0
	198 NotImplemented "Instruction LDUR not yet implemented."
	199 Move X8, [X31+24]
	200 Move [X31+4], V0
	201 Move [X31+80], X8
	202 Move X1, [X25]
	203 Add X0, X31, 64
	204 Call Enumerator<Object>.MoveNext, X0
	205 Move TEMP, X0
	206 And TEMP, TEMP, 1
	207 Compare TEMP, 1
	208 JumpIfNotEqual {267}
	209 Move X8, [X31+80]
	210 Compare X8, 0
	211 JumpIfEqual {308}
	212 Move X0, [X8+40]
	213 Compare X0, 0
	214 JumpIfEqual {309}
	215 Move X1, [X26]
	216 Add X8, X31, 8
	217 Call List`1<Object>.GetEnumerator, X0
	218 NotImplemented "Instruction LDUR not yet implemented."
	219 Move X8, [X31+24]
	220 Move [X31+2], V0
	221 Move [X31+48], X8
	222 Move X1, [X27]
	223 Add X0, X31, 32
	224 Call Enumerator<Object>.MoveNext, X0
	225 Move W21, W0
	226 Move TEMP, X0
	227 And TEMP, TEMP, 1
	228 Compare TEMP, 1
	229 JumpIfNotEqual {249}
	230 Move X22, [X31+48]
	231 Compare X22, 0
	232 JumpIfEqual {259}
	233 Move X0, X22
	234 Move W1, W19
	235 Move X2, X31
	236 Call ShadowCaster2D.IsShadowedLayer, X0, X1
	237 Move W23, W0
	238 Move X0, X22
	239 Move W1, W20
	240 Move X2, X31
	241 Call ShadowCaster2D.IsShadowedLayer, X0, X1
	242 Xor W8, W23, W0
	243 Move TEMP, X8
	244 And TEMP, TEMP, 1
	245 Compare TEMP, 1
	246 JumpIfNotEqual {222}
	247 Move X22, X31
	248 Move W23, 4
	249 Move X22, X31
	250 Move W23, 6
	251 Move X1, [X24]
	252 Add X0, X31, 32
	253 Call Enumerator<Object>.Dispose, X0
	254 Compare X22, 0
	255 JumpIfNotEqual {306}
	256 NotImplemented "Instruction CMP not yet implemented."
	257 Compare W23, 0
	258 JumpIfEqual {202}
	259 Call 0x1C17F20
	260 Move X21, X1
	261 NotImplemented "Instruction CMP not yet implemented."
	262 Call 0x3EB2AD0
	263 Move X22, [X0]
	264 Call 0x3EB2AE0
	265 Move W21, W31
	266 Move W23, W31
	267 Move X8, 0x737000
	268 Move X8, [X8+1408]
	269 Add X0, X31, 64
	270 Move X1, [X8]
	271 Call Enumerator<Object>.Dispose, X0
	272 Move W0, 1
	273 Move X20, [X31+208]
	274 Move X19, [X31+216]
	275 Move X22, [X31+192]
	276 Move X21, [X31+200]
	277 Move X24, [X31+176]
	278 Move X23, [X31+184]
	279 Move X26, [X31+160]
	280 Move X25, [X31+168]
	281 Move X28, [X31+144]
	282 Move X27, [X31+152]
	283 Move X29, [X31+128]
	284 Move X30, [X31+136]
	285 Add X31, X31, 224
	286 Return X0
	287 Move X8, 0x737000
	288 Move X8, [X8+1408]
	289 Add X0, X31, 64
	290 Move X1, [X8]
	291 Call Enumerator<Object>.Dispose, X0
	292 Move TEMP, X21
	293 And TEMP, TEMP, 1
	294 Compare TEMP, 1
	295 JumpIfEqual {163}
	296 Move [X31], X0
	297 Move X22, X31
	298 Move X1, [X24]
	299 Add X0, X31, 32
	300 Call Enumerator<Object>.Dispose, X0
	301 Compare X22, 0
	302 JumpIfEqual {316}
	303 Move X0, X22
	304 Call 0x1C17F18
	305 Call 0x1C17F20
	306 Move X0, X22
	307 Call 0x1C17F18
	308 Call 0x1C17F20
	309 Call 0x1C17F20
	310 Call 0x1C17F20
	311 Call 0x1C17F28
	312 Move X21, X1
	313 Move [X31], X0
	314 Move X21, X1
	315 Move [X31], X0
	316 NotImplemented "Instruction CMP not yet implemented."
	317 Move X0, [X31]
	318 Call 0x3EB2AD0
	319 Move X19, [X0]
	320 Call 0x3EB2AE0
	321 Move X8, 0x737000
	322 Move X8, [X8+1408]
	323 Add X0, X31, 64
	324 Move X1, [X8]
	325 Call Enumerator<Object>.Dispose, X0
	326 Compare X19, 0
	327 JumpIfEqual {272}
	328 Move X0, X19
	329 Call 0x1C17F18
	330 Move X19, X31
	331 Move [X31], X0
	332 Move X8, 0x737000
	333 Move X8, [X8+1408]
	334 Move X1, [X8]
	335 Add X0, X31, 64
	336 Call Enumerator<Object>.Dispose, X0
	337 Compare X19, 0
	338 JumpIfEqual {361}
	339 Move X0, X19
	340 Call 0x1C17F18
	341 NotImplemented "Instruction CMP not yet implemented."
	342 Move [X31], X0
	343 Move X0, [X31]
	344 Call 0x3EB2AD0
	345 Move X22, [X0]
	346 Call 0x3EB2AE0
	347 Move X1, [X29]
	348 Add X0, X31, 96
	349 Call Enumerator<Object>.Dispose, X0
	350 Compare X22, 0
	351 JumpIfEqual {167}
	352 Move X0, X22
	353 Call 0x1C17F18
	354 Move X22, X31
	355 Move [X31], X0
	356 Move X1, [X29]
	357 Add X0, X31, 96
	358 Call Enumerator<Object>.Dispose, X0
	359 Compare X22, 0
	360 JumpIfNotEqual {363}
	361 Move X0, [X31]
	362 Call 0x1D2D690
	363 Move X0, X22
	364 Call 0x1C17F18
	365 Call 0x1991590

Method: System.Int32 FindUpperBoundInBatch(System.Int32 startLayerIndex, UnityEngine.SortingLayer[] sortingLayers, UnityEngine.Rendering.Universal.ILight2DCullResult lightCullResult)

Disassembly:
	0x03A1E960 CMP W22, 0x1
	0x03A1E964 B.LT 0x3A1EDAC
	0x03A1E968 MOV X26, X31
	0x03A1E96C MOV W8, W22
	0x03A1E970 STR W31, [X31 + 0x24]
	0x03A1E974 STR X8, [X31 + 0x6A8]
	0x03A1E978 ADRP X8, 0x736000
	0x03A1E97C LDR X8, [X8 + 0x670]
	0x03A1E980 ADD W20, W24, W26
	0x03A1E984 MOV X0, X19
	0x03A1E988 MOV W1, W20
	0x03A1E98C LDR X2, [X8]
	0x03A1E990 BL 0x301BCCC
	0x03A1E994 LDR X8, [X23]
	0x03A1E998 MOV X27, X0
	0x03A1E99C LDR W9, [X8 + 0xE0]
	0x03A1E9A0 CBNZ W9, 0x3A1E9AC
	0x03A1E9A4 MOV X0, X8
	0x03A1E9A8 BL 0x1C16DFC
	0x03A1E9AC MOV X0, X27
	0x03A1E9B0 MOV W1, W29
	0x03A1E9B4 MOV W2, W21
	0x03A1E9B8 BL 0x3A1E5A8
	0x03A1E9BC TBZ X0, 0x0, 0x3A1ED5C
	0x03A1E9C0 CBZ X25, 0x3A1EE28
	0x03A1E9C4 LDR X8, [X25]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Compare X1, 0
	007 JumpIfEqual {32}
	008 Move X19, X2
	009 Move X20, X1
	010 Move W21, W0
	011 Move W22, W0
	012 Move X8, [X20+24]
	013 Add W22, W22, 1
	014 NotImplemented "Instruction CMP not yet implemented."
	015 Move W0, W21
	016 Move W1, W22
	017 Move X2, X20
	018 Move X3, X19
	019 Call LayerUtility.CanBatchLightsInLayer, X0, X1, X2, X3
	020 Move TEMP, X0
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {12}
	024 Move W22, W8
	025 Subtract W0, W22, 1
	026 Move X20, [X31+32]
	027 Move X19, [X31+40]
	028 Move X22, [X31+16]
	029 Move X21, [X31+24]
	030 Move X30, [X31+48]
	031 Return X0
	032 Call 0x1C17F20

Method: System.Void InitializeBatchInfos(UnityEngine.SortingLayer[] cachedSortingLayers)

Disassembly:
	0x03A1E9C8 ADRP X10, 0x736000
	0x03A1E9CC LDRH W9, [X8 + 0x12E]
	0x03A1E9D0 LDR X10, [X10 + 0x660]
	0x03A1E9D4 LDR X1, [X10]
	0x03A1E9D8 CBZ X9, 0x3A1E9FC
	0x03A1E9DC LDR X10, [X8 + 0xB0]
	0x03A1E9E0 ADD X10, X10, 0x8
	0x03A1E9E4 LDUR X11, [X10 - 0x8]
	0x03A1E9E8 CMP X11, X1
	0x03A1E9EC B.EQ 0x3A1EA0C
	0x03A1E9F0 SUBS X9, X9, 0x1
	0x03A1E9F4 ADD X10, X10, 0x10
	0x03A1E9F8 B.NE 0x3A1E9E4
	0x03A1E9FC MOV X0, X25
	0x03A1EA00 MOV W2, W31
	0x03A1EA04 BL 0x1C5C788
	0x03A1EA08 B 0x3A1EA18
	0x03A1EA0C LDRSW X9, [X10]
	0x03A1EA10 ADD X8, X8, X9, 0x4, LSL
	0x03A1EA14 ADD X0, X8, 0x138
	0x03A1EA18 LDP X8, X1, [X0]
	0x03A1EA1C MOV X0, X25
	0x03A1EA20 BLR X8
	0x03A1EA24 LDR X8, [X23]
	0x03A1EA28 MOV X28, X0
	0x03A1EA2C LDR W9, [X8 + 0xE0]
	0x03A1EA30 CBNZ W9, 0x3A1EA3C
	0x03A1EA34 MOV X0, X8
	0x03A1EA38 BL 0x1C16DFC
	0x03A1EA3C MOV X0, X28
	0x03A1EA40 MOV X1, X27
	0x03A1EA44 MOV W2, W31
	0x03A1EA48 BL 0x3A1EE2C
	0x03A1EA4C ADRP X8, 0x6D5000
	0x03A1EA50 LDR X8, [X8 + 0x598]
	0x03A1EA54 MOV X28, X0
	0x03A1EA58 LDR X8, [X8]
	0x03A1EA5C LDR W9, [X8 + 0xE0]
	0x03A1EA60 CBNZ W9, 0x3A1EA6C
	0x03A1EA64 MOV X0, X8
	0x03A1EA68 BL 0x1C16DFC
	0x03A1EA6C MOV X0, X28
	0x03A1EA70 MOV X1, X31
	0x03A1EA74 MOV X2, X31
	0x03A1EA78 BL 0x3C3883C
	0x03A1EA7C TBNZ X0, 0x0, 0x3A1ED54
	0x03A1EA80 CBZ X27, 0x3A1EE28
	0x03A1EA84 MOV X0, X27
	0x03A1EA88 BL 0x3A131A8
	0x03A1EA8C ADRP X8, 0x6D5000
	0x03A1EA90 LDR X8, [X8 + 0x598]
	0x03A1EA94 LDR X8, [X8]
	0x03A1EA98 LDR W9, [X8 + 0xE0]
	0x03A1EA9C CBNZ W9, 0x3A1EAB8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x9C4000
	006 Move W8, [X20+4071]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {20}
	012 Move X0, 0x737000
	013 Move X0, [X0+1880]
	014 Call 0x1C17CF4
	015 Move X0, 0x737000
	016 Move X0, [X0+1688]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+4071], W8
	020 Compare X19, 0
	021 JumpIfEqual {62}
	022 Move X20, 0x737000
	023 Move X20, [X20+1688]
	024 Move X8, [X20]
	025 Move X8, [X8+184]
	026 Move X8, [X8]
	027 Compare X8, 0
	028 JumpIfEqual {34}
	029 Move X20, [X31+16]
	030 Move X19, [X31+24]
	031 Move X30, [X31+32]
	032 Move X21, [X31+40]
	033 Return 
	034 Move X8, 0x737000
	035 Move W1, [X19+24]
	036 Move X8, [X8+1880]
	037 Move X0, [X8]
	038 Call 0x1C17D6C
	039 Move X8, [X20]
	040 Move X8, [X8+184]
	041 Move [X8], X0
	042 Move X8, [X20]
	043 Move X8, [X8+184]
	044 Move X8, [X8]
	045 Compare X8, 0
	046 JumpIfEqual {62}
	047 Move X19, X31
	048 Move W21, 32
	049 Move W9, [X8+24]
	050 NotImplemented "Instruction CMP not yet implemented."
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Add X0, X8, X21
	053 Move W1, W19
	054 Call LayerBatch.InitRTIds, X0, X1
	055 Move X8, [X20]
	056 Add X19, X19, 1
	057 Add X21, X21, 52
	058 Move X8, [X8+184]
	059 Move X8, [X8]
	060 Compare X8, 0
	061 JumpIfNotEqual {49}
	062 Call 0x1C17F20
	063 Call 0x1C17F28

Method: UnityEngine.Rendering.Universal.LayerBatch[] CalculateBatches(UnityEngine.Rendering.Universal.ILight2DCullResult lightCullResult, out System.Int32 batchCount)

Disassembly:
	0x03A1D354 ADD X21, X21, 0x1
	0x03A1D358 B.NE 0x3A1D304
	0x03A1D35C LDP X20, X19, [X31 + 0x40]
	0x03A1D360 LDP X22, X21, [X31 + 0x30]
	0x03A1D364 LDP X24, X23, [X31 + 0x20]
	0x03A1D368 LDP X30, X25, [X31 + 0x10]
	0x03A1D36C ADD X31, X31, 0x50
	0x03A1D370 RET
	0x03A1D374 STR X30, [X31 - 0x20]!
	0x03A1D378 STP X20, X19, [X31 + 0x10]
	0x03A1D37C ADRP X19, 0x9C4000
	0x03A1D380 ADRP X20, 0x737000
	0x03A1D384 LDRB W8, [X19 + 0xFE4]
	0x03A1D388 LDR X20, [X20 + 0x698]
	0x03A1D38C TBNZ X8, 0x0, 0x3A1D3A4
	0x03A1D390 ADRP X0, 0x737000
	0x03A1D394 LDR X0, [X0 + 0x698]
	0x03A1D398 BL 0x1C16CF4
	0x03A1D39C MOVZ W8, 0x1
	0x03A1D3A0 STRB W8, [X19 + 0xFE4]
	0x03A1D3A4 LDR X8, [X20]
	0x03A1D3A8 LDP X20, X19, [X31 + 0x10]
	0x03A1D3AC LDR X8, [X8 + 0xB8]
	0x03A1D3B0 LDR W0, [X8 + 0x8]
	0x03A1D3B4 LDR X30, [X31], #0x20
	0x03A1D3B8 RET
	0x03A1D3BC STP X30, X21, [X31 - 0x20]!
	0x03A1D3C0 STP X20, X19, [X31 + 0x10]
	0x03A1D3C4 ADRP X20, 0x9C4000
	0x03A1D3C8 ADRP X21, 0x737000
	0x03A1D3CC LDRB W8, [X20 + 0xFE5]
	0x03A1D3D0 LDR X21, [X21 + 0x698]
	0x03A1D3D4 MOV W19, W0
	0x03A1D3D8 TBNZ X8, 0x0, 0x3A1D3F0
	0x03A1D3DC ADRP X0, 0x737000
	0x03A1D3E0 LDR X0, [X0 + 0x698]
	0x03A1D3E4 BL 0x1C16CF4
	0x03A1D3E8 MOVZ W8, 0x1
	0x03A1D3EC STRB W8, [X20 + 0xFE5]
	0x03A1D3F0 LDR X8, [X21]
	0x03A1D3F4 LDR X8, [X8 + 0xB8]
	0x03A1D3F8 STR W19, [X8 + 0x8]
	0x03A1D3FC LDP X20, X19, [X31 + 0x10]
	0x03A1D400 LDP X30, X21, [X31], #0x20
	0x03A1D404 RET
	0x03A1D408 SUB X31, X31, 0xE0
	0x03A1D40C STP X29, X30, [X31 + 0x80]
	0x03A1D410 STP X28, X27, [X31 + 0x90]
	0x03A1D414 STP X26, X25, [X31 + 0xA0]
	0x03A1D418 STP X24, X23, [X31 + 0xB0]
	0x03A1D41C STP X22, X21, [X31 + 0xC0]
	0x03A1D420 STP X20, X19, [X31 + 0xD0]
	0x03A1D424 ADRP X23, 0x9C4000
	0x03A1D428 LDRB W8, [X23 + 0xFE6]
	0x03A1D42C MOV X21, X3
	0x03A1D430 MOV X20, X2
	0x03A1D434 MOV W22, W1
	0x03A1D438 MOV W19, W0
	0x03A1D43C TBNZ X8, 0x0, 0x3A1D4E4
	0x03A1D440 ADRP X0, 0x737000
	0x03A1D444 LDR X0, [X0 + 0x578]
	0x03A1D448 BL 0x1C16CF4
	0x03A1D44C ADRP X0, 0x737000
	0x03A1D450 LDR X0, [X0 + 0x550]
	0x03A1D454 BL 0x1C16CF4
	0x03A1D458 ADRP X0, 0x737000
	0x03A1D45C LDR X0, [X0 + 0x580]
	0x03A1D460 BL 0x1C16CF4
	0x03A1D464 ADRP X0, 0x737000
	0x03A1D468 LDR X0, [X0 + 0x588]
	0x03A1D46C BL 0x1C16CF4
	0x03A1D470 ADRP X0, 0x737000
	0x03A1D474 LDR X0, [X0 + 0x558]
	0x03A1D478 BL 0x1C16CF4
	0x03A1D47C ADRP X0, 0x737000
	0x03A1D480 LDR X0, [X0 + 0x590]
	0x03A1D484 BL 0x1C16CF4
	0x03A1D488 ADRP X0, 0x737000
	0x03A1D48C LDR X0, [X0 + 0x598]
	0x03A1D490 BL 0x1C16CF4
	0x03A1D494 ADRP X0, 0x737000
	0x03A1D498 LDR X0, [X0 + 0x560]
	0x03A1D49C BL 0x1C16CF4
	0x03A1D4A0 ADRP X0, 0x737000
	0x03A1D4A4 LDR X0, [X0 + 0x5A0]
	0x03A1D4A8 BL 0x1C16CF4
	0x03A1D4AC ADRP X0, 0x737000
	0x03A1D4B0 LDR X0, [X0 + 0x668]
	0x03A1D4B4 BL 0x1C16CF4
	0x03A1D4B8 ADRP X0, 0x737000
	0x03A1D4BC LDR X0, [X0 + 0x5C8]
	0x03A1D4C0 BL 0x1C16CF4
	0x03A1D4C4 ADRP X0, 0x737000
	0x03A1D4C8 LDR X0, [X0 + 0x5D0]
	0x03A1D4CC BL 0x1C16CF4
	0x03A1D4D0 ADRP X0, 0x737000
	0x03A1D4D4 LDR X0, [X0 + 0x568]
	0x03A1D4D8 BL 0x1C16CF4
	0x03A1D4DC MOVZ W8, 0x1
	0x03A1D4E0 STRB W8, [X23 + 0xFE6]
	0x03A1D4E4 STP X31, X31, [X31 + 0x60]
	0x03A1D4E8 STR X31, [X31 + 0x70]
	0x03A1D4EC STP X31, X31, [X31 + 0x40]
	0x03A1D4F0 STR X31, [X31 + 0x50]
	0x03A1D4F4 STP X31, X31, [X31 + 0x20]
	0x03A1D4F8 STR X31, [X31 + 0x30]
	0x03A1D4FC CBZ X20, 0x3A1D85C
	0x03A1D500 LDR W8, [X20 + 0x18]
	0x03A1D504 CMP W8, W19
	0x03A1D508 B.LS 0x3A1D860
	0x03A1D50C ADD X8, X20, W19, 0x2, SXTW
	0x03A1D510 ADD X0, X8, 0x20
	0x03A1D514 MOV X1, X31
	0x03A1D518 BL 0x3C008D0
	0x03A1D51C LDR W8, [X20 + 0x18]
	0x03A1D520 CMP W8, W22
	0x03A1D524 B.LS 0x3A1D860
	0x03A1D528 ADD X8, X20, W22, 0x2, SXTW
	0x03A1D52C MOV W19, W0
	0x03A1D530 ADD X0, X8, 0x20
	0x03A1D534 MOV X1, X31
	0x03A1D538 BL 0x3C008D0
	0x03A1D53C CBZ X21, 0x3A1D85C
	0x03A1D540 ADRP X10, 0x737000
	0x03A1D544 LDR X8, [X21]
	0x03A1D548 LDR X10, [X10 + 0x668]
	0x03A1D54C MOV W20, W0
	0x03A1D550 LDRH W9, [X8 + 0x12E]
	0x03A1D554 LDR X1, [X10]
	0x03A1D558 CBZ X9, 0x3A1D57C
	0x03A1D55C LDR X10, [X8 + 0xB0]
	0x03A1D560 ADD X10, X10, 0x8
	0x03A1D564 LDUR X11, [X10 - 0x8]
	0x03A1D568 CMP X11, X1
	0x03A1D56C B.EQ 0x3A1D58C
	0x03A1D570 SUBS X9, X9, 0x1
	0x03A1D574 ADD X10, X10, 0x10
	0x03A1D578 B.NE 0x3A1D564
	0x03A1D57C MOV X0, X21
	0x03A1D580 MOV W2, W31
	0x03A1D584 BL 0x1C5C788
	0x03A1D588 B 0x3A1D598
	0x03A1D58C LDRSW X9, [X10]
	0x03A1D590 ADD X8, X8, X9, 0x4, LSL
	0x03A1D594 ADD X0, X8, 0x138
	0x03A1D598 LDP X8, X1, [X0]
	0x03A1D59C MOV X0, X21
	0x03A1D5A0 BLR X8
	0x03A1D5A4 CBZ X0, 0x3A1D85C
	0x03A1D5A8 ADRP X8, 0x737000
	0x03A1D5AC LDR X8, [X8 + 0x568]
	0x03A1D5B0 ADRP X28, 0x737000
	0x03A1D5B4 ADRP X25, 0x737000
	0x03A1D5B8 ADRP X26, 0x737000
	0x03A1D5BC LDR X28, [X28 + 0x558]
	0x03A1D5C0 LDR X25, [X25 + 0x588]
	0x03A1D5C4 LDR X26, [X26 + 0x5D0]

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+64], X29
	003 Move [X31+72], X30
	004 Move [X31+80], X28
	005 Move [X31+88], X27
	006 Move [X31+96], X26
	007 Move [X31+104], X25
	008 Move [X31+112], X24
	009 Move [X31+120], X23
	010 Move [X31+128], X22
	011 Move [X31+136], X21
	012 Move [X31+144], X20
	013 Move [X31+152], X19
	014 Move X22, 0x9C5000
	015 Move X21, 0x738000
	016 Move W8, [X22+4072]
	017 Move X21, [X21+1176]
	018 Move X19, X1
	019 Move X20, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {35}
	024 Move X0, 0x738000
	025 Move X0, [X0+1640]
	026 Call 0x1C17CF4
	027 Move X0, 0x738000
	028 Move X0, [X0+1688]
	029 Call 0x1C17CF4
	030 Move X0, 0x738000
	031 Move X0, [X0+1176]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X22+4072], W8
	035 Move X0, [X21]
	036 Move [X31+28], W31
	037 Move W8, [X0+224]
	038 Compare W8, 0
	039 JumpIfNotEqual {41}
	040 Call 0x1C17DFC
	041 Call Light2DManager.GetCachedSortingLayer
	042 Move X21, X0
	043 Call LayerUtility.InitializeBatchInfos, X0
	044 Move [X19], W31
	045 Compare X21, 0
	046 JumpIfEqual {173}
	047 Move W8, [X21+24]
	048 Move X26, 0x738000
	049 Move X26, [X26+1688]
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Move W22, W31
	052 Move W27, 52
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Add X8, X21, W22
	055 Add X24, X8, 32
	056 Move X0, X24
	057 Move X1, X31
	058 Call SortingLayer.get_id, X0
	059 Compare X20, 0
	060 JumpIfEqual {173}
	061 Move X8, [X20]
	062 Move X10, 0x738000
	063 Move W23, W0
	064 NotImplemented "Instruction LDRH not yet implemented."
	065 Move X10, [X10+1640]
	066 Move X1, [X10]
	067 Compare X9, 0
	068 JumpIfEqual {75}
	069 Move X10, [X8+176]
	070 Add X10, X10, 8
	071 NotImplemented "Instruction LDUR not yet implemented."
	072 NotImplemented "Instruction CMP not yet implemented."
	073 Subtract X9, X9, 1
	074 Add X10, X10, 16
	075 Move W2, 2
	076 Move X0, X20
	077 Call 0x1C5D788
	078 Move W9, [X10]
	079 Add W9, W9, 2
	080 Add X8, X8, W9
	081 Add X0, X8, 312
	082 Move X9, [X0]
	083 Move X2, [X0+8]
	084 Add X8, X31, 8
	085 Move X0, X20
	086 Move W1, W23
	087 NotImplemented "Instruction BLR not yet implemented."
	088 NotImplemented "Instruction LDUR not yet implemented."
	089 Move W8, [X31+24]
	090 Move X9, [X26]
	091 Move [X31+2], V0
	092 Move [X31+48], W8
	093 Move X8, [X9+184]
	094 NotImplemented "Instruction LDRSW not yet implemented."
	095 Move X29, [X8]
	096 Add W8, W28, 1
	097 Move [X19], W8
	098 Compare X29, 0
	099 JumpIfEqual {173}
	100 Move W25, W22
	101 Move X8, [X21+24]
	102 Add W25, W25, 1
	103 NotImplemented "Instruction CMP not yet implemented."
	104 Move W0, W22
	105 Move W1, W25
	106 Move X2, X21
	107 Move X3, X20
	108 Call LayerUtility.CanBatchLightsInLayer, X0, X1, X2, X3
	109 Move TEMP, X0
	110 And TEMP, TEMP, 1
	111 Compare TEMP, 1
	112 JumpIfEqual {101}
	113 Move W8, [X21+24]
	114 Move W25, W8
	115 NotImplemented "Instruction CMP not yet implemented."
	116 Move X0, X24
	117 Move X1, X31
	118 Call SortingLayer.get_value, X0
	119 Move W8, [X29+24]
	120 NotImplemented "Instruction CMP not yet implemented."
	121 Move W9, [X21+24]
	122 Subtract W8, W25, 1
	123 NotImplemented "Instruction CMP not yet implemented."
	124 NotImplemented "Instruction CMP not yet implemented."
	125 Add X8, X21, W8
	126 Move TEMP, 0x7FFF
	127 Not TEMP
	128 Move W9, TEMP
	129 NotImplemented "Instruction CSEL not yet implemented."
	130 Add X0, X8, 32
	131 Move X1, X31
	132 Call SortingLayer.get_value, X0
	133 Move W8, [X21+24]
	134 Move W24, W0
	135 Move W1, W22
	136 Move X3, X31
	137 NotImplemented "Instruction CMP not yet implemented."
	138 Move W8, 0x7FFF
	139 NotImplemented "Instruction CSEL not yet implemented."
	140 Add X0, X31, 28
	141 Call SortingLayerRange..ctor, X0, X1, X2
	142 NotImplemented "Instruction MADD not yet implemented."
	143 NotImplemented "Instruction SXTH not yet implemented."
	144 Move [X8+32], W23
	145 Move [X8+36], W9
	146 Move W9, [X31+28]
	147 Move W22, W25
	148 Move [X8+40], W9
	149 Move W9, [X31+48]
	150 Move V0, [X31+2]
	151 Move [X8+60], W9
	152 Move [X8+44], V0
	153 Move W8, [X21+24]
	154 NotImplemented "Instruction CMP not yet implemented."
	155 Move X8, [X26]
	156 Move X20, [X31+144]
	157 Move X19, [X31+152]
	158 Move X22, [X31+128]
	159 Move X21, [X31+136]
	160 Move X24, [X31+112]
	161 Move X23, [X31+120]
	162 Move X8, [X8+184]
	163 Move X26, [X31+96]
	164 Move X25, [X31+104]
	165 Move X28, [X31+80]
	166 Move X27, [X31+88]
	167 Move X29, [X31+64]
	168 Move X30, [X31+72]
	169 Move X0, [X8]
	170 Add X31, X31, 160
	171 Return X0
	172 Call 0x1C17F28
	173 Call 0x1C17F20

