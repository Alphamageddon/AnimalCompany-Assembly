Type: UnityEngine.Rendering.Universal.UniversalRenderPipelineVolumeDebugSettings

Method: System.Type get_targetRenderPipeline()

Disassembly:
	0x03A393CC BL 0x3EB1AD0
	0x03A393D0 LDR X8, [X0]
	0x03A393D4 STR X8, [X31 + 0x8]
	0x03A393D8 BL 0x3EB1AE0
	0x03A393DC LDR X22, [X31 + 0x8]
	0x03A393E0 MOV W23, W31
	0x03A393E4 B 0x3A3925C
	0x03A393E8 STR X31, [X31 + 0x8]
	0x03A393EC ADD X0, X31, 0xA0
	0x03A393F0 MOV X1, X31
	0x03A393F4 BL 0x39B1DB4
	0x03A393F8 LDR X8, [X31 + 0x8]
	0x03A393FC CBZ X8, 0x3A3942C
	0x03A39400 LDR X0, [X31 + 0x8]
	0x03A39404 BL 0x1C16F18
	0x03A39408 MOV X23, X1
	0x03A3940C MOV X22, X0
	0x03A39410 B 0x3A393EC
	0x03A39414 B 0x3A39424
	0x03A39418 B 0x3A39424
	0x03A3941C B 0x3A39424
	0x03A39420 B 0x3A39424
	0x03A39424 MOV X23, X1
	0x03A39428 MOV X22, X0
	0x03A3942C CMP W23, 0x1
	0x03A39430 B.NE 0x3A3945C
	0x03A39434 MOV X0, X22

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x9AA000
	006 Move X19, 0x71D000
	007 Move X20, 0x6BB000
	008 Move W8, [X21+268]
	009 Move X19, [X19+1688]
	010 Move X20, [X20+1728]
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x6BB000
	016 Move X0, [X0+1728]
	017 Call 0x1C17CF4
	018 Move X0, 0x71D000
	019 Move X0, [X0+1688]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X21+268], W8
	023 Move X0, [X20]
	024 Move X19, [X19]
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 Move X0, X19
	030 Move X20, [X31+16]
	031 Move X19, [X31+24]
	032 Move X1, X31
	033 Move X30, [X31+32]
	034 Move X21, [X31+40]
	035 Call Type.GetTypeFromHandle, X0
	036 Return X0

Method: UnityEngine.Rendering.VolumeStack get_selectedCameraVolumeStack()

Disassembly:
	0x03A39438 BL 0x3EB1AD0
	0x03A3943C LDR X19, [X0]
	0x03A39440 BL 0x3EB1AE0
	0x03A39444 ADD X0, X31, 0xA8
	0x03A39448 MOV X1, X31
	0x03A3944C BL 0x39B1DB4
	0x03A39450 CBZ X19, 0x3A392DC
	0x03A39454 MOV X0, X19
	0x03A39458 BL 0x1C16F18
	0x03A3945C MOV X19, X31
	0x03A39460 B 0x3A39468
	0x03A39464 MOV X22, X0
	0x03A39468 ADD X0, X31, 0xA8
	0x03A3946C MOV X1, X31
	0x03A39470 BL 0x39B1DB4
	0x03A39474 CBNZ X19, 0x3A39480
	0x03A39478 MOV X0, X22
	0x03A3947C BL 0x1D2C690
	0x03A39480 MOV X0, X19
	0x03A39484 BL 0x1C16F18
	0x03A39488 BL 0x1990590
	0x03A3948C STP X30, X23, [X31 - 0x30]!
	0x03A39490 STP X22, X21, [X31 + 0x10]
	0x03A39494 STP X20, X19, [X31 + 0x20]
	0x03A39498 ADRP X20, 0x9A9000
	0x03A3949C LDRB W8, [X20 + 0x116]
	0x03A394A0 MOV X19, X1
	0x03A394A4 TBNZ X8, 0x0, 0x3A394EC
	0x03A394A8 ADRP X0, 0x6E2000
	0x03A394AC LDR X0, [X0 + 0x8F8]
	0x03A394B0 BL 0x1C16CF4
	0x03A394B4 ADRP X0, 0x71C000
	0x03A394B8 LDR X0, [X0 + 0x6D0]
	0x03A394BC BL 0x1C16CF4
	0x03A394C0 ADRP X0, 0x71C000
	0x03A394C4 LDR X0, [X0 + 0x6D8]
	0x03A394C8 BL 0x1C16CF4
	0x03A394CC ADRP X0, 0x71C000
	0x03A394D0 LDR X0, [X0 + 0x6E0]
	0x03A394D4 BL 0x1C16CF4
	0x03A394D8 ADRP X0, 0x71C000
	0x03A394DC LDR X0, [X0 + 0x6E8]
	0x03A394E0 BL 0x1C16CF4
	0x03A394E4 MOVZ W8, 0x1
	0x03A394E8 STRB W8, [X20 + 0x116]
	0x03A394EC CBZ X19, 0x3A39584
	0x03A394F0 ADRP X8, 0x6E2000
	0x03A394F4 LDR X8, [X8 + 0x8F8]
	0x03A394F8 ADRP X23, 0x71C000
	0x03A394FC ADRP X22, 0x71C000
	0x03A39500 ADRP X21, 0x71C000
	0x03A39504 LDR X0, [X8]
	0x03A39508 ADRP X20, 0x71C000
	0x03A3950C LDR W8, [X0 + 0xE0]
	0x03A39510 LDR X23, [X23 + 0x6D0]
	0x03A39514 LDR X22, [X22 + 0x6E0]
	0x03A39518 LDR X21, [X21 + 0x6D8]
	0x03A3951C LDR X20, [X20 + 0x6E8]
	0x03A39520 CBNZ W8, 0x3A39528
	0x03A39524 BL 0x1C16DFC
	0x03A39528 LDR X1, [X23]
	0x03A3952C MOV X0, X19
	0x03A39530 MOV W2, W31
	0x03A39534 MOV X3, X31
	0x03A39538 BL 0x39E9618
	0x03A3953C LDR X1, [X22]
	0x03A39540 MOV X0, X19
	0x03A39544 MOV W2, W31
	0x03A39548 MOV X3, X31
	0x03A3954C BL 0x39E9618

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x9AA000
	006 Move X21, 0x6BB000
	007 Move W8, [X20+269]
	008 Move X21, [X21+1432]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {28}
	014 Move X0, 0x71C000
	015 Move X0, [X0+3024]
	016 Call 0x1C17CF4
	017 Move X0, 0x6BB000
	018 Move X0, [X0+1432]
	019 Call 0x1C17CF4
	020 Move X0, 0x71D000
	021 Move X0, [X0+1696]
	022 Call 0x1C17CF4
	023 Move X0, 0x6E5000
	024 Move X0, [X0+4032]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X20+269], W8
	028 Move X0, [X21]
	029 Move X20, [X19+24]
	030 Move W8, [X0+224]
	031 Compare W8, 0
	032 JumpIfNotEqual {34}
	033 Call 0x1C17DFC
	034 Move X0, X20
	035 Move X1, X31
	036 Move X2, X31
	037 Call Object.op_Equality, X0, X1
	038 Move W8, W0
	039 Move X0, X31
	040 Move TEMP, X8
	041 And TEMP, TEMP, 1
	042 Compare TEMP, 1
	043 JumpIfEqual {85}
	044 Move X0, [X19+24]
	045 Compare X0, 0
	046 JumpIfEqual {90}
	047 Move X8, 0x71C000
	048 Move X8, [X8+3024]
	049 Move X1, [X8]
	050 Call 0x21A4894, X0
	051 Move X8, [X21]
	052 Move X19, X0
	053 Move W9, [X8+224]
	054 Compare W9, 0
	055 JumpIfNotEqual {58}
	056 Move X0, X8
	057 Call 0x1C17DFC
	058 Move X0, X19
	059 Move X1, X31
	060 Move X2, X31
	061 Call Object.op_Equality, X0, X1
	062 Move W8, W0
	063 Move X0, X31
	064 Move TEMP, X8
	065 And TEMP, TEMP, 1
	066 Compare TEMP, 1
	067 JumpIfEqual {85}
	068 Compare X19, 0
	069 JumpIfEqual {90}
	070 Move X0, [X19+192]
	071 Compare X0, 0
	072 JumpIfNotEqual {85}
	073 Move X8, 0x6E5000
	074 Move X8, [X8+4032]
	075 Move X0, [X8]
	076 Move W8, [X0+224]
	077 Compare W8, 0
	078 JumpIfNotEqual {80}
	079 Call 0x1C17DFC
	080 Move X0, X31
	081 Call VolumeManager.get_instance
	082 Compare X0, 0
	083 JumpIfEqual {90}
	084 Move X0, [X0+16]
	085 Move X20, [X31+16]
	086 Move X19, [X31+24]
	087 Move X30, [X31+32]
	088 Move X21, [X31+40]
	089 Return X0
	090 Call 0x1C17F20

Method: UnityEngine.LayerMask get_selectedCameraLayerMask()

Disassembly:
	0x03A39550 LDR X1, [X21]
	0x03A39554 MOV X0, X19
	0x03A39558 MOV W2, W31
	0x03A3955C MOV X3, X31
	0x03A39560 BL 0x39E9618
	0x03A39564 LDR X1, [X20]
	0x03A39568 MOV X0, X19
	0x03A3956C LDP X20, X19, [X31 + 0x20]
	0x03A39570 LDP X22, X21, [X31 + 0x10]
	0x03A39574 MOV W2, W31
	0x03A39578 MOV X3, X31
	0x03A3957C LDP X30, X23, [X31], #0x30
	0x03A39580 B 0x39E9618
	0x03A39584 ADRP X0, 0x6BF000
	0x03A39588 LDR X0, [X0 + 0x528]
	0x03A3958C BL 0x1C16D08
	0x03A39590 BL 0x1C16F10
	0x03A39594 MOV X19, X0
	0x03A39598 ADRP X0, 0x71C000
	0x03A3959C LDR X0, [X0 + 0x6F0]
	0x03A395A0 BL 0x1C16D08
	0x03A395A4 MOV X1, X0
	0x03A395A8 MOV X0, X19
	0x03A395AC MOV X2, X31
	0x03A395B0 BL 0x330E100
	0x03A395B4 ADRP X0, 0x71C000
	0x03A395B8 LDR X0, [X0 + 0x6F8]
	0x03A395BC BL 0x1C16D08
	0x03A395C0 MOV X1, X0
	0x03A395C4 MOV X0, X19
	0x03A395C8 BL 0x1C16DEC
	0x03A395CC STR X30, [X31 - 0x20]!
	0x03A395D0 STP X20, X19, [X31 + 0x10]
	0x03A395D4 ADRP X19, 0x9A9000
	0x03A395D8 ADRP X20, 0x6BA000
	0x03A395DC LDRB W8, [X19 + 0x117]
	0x03A395E0 LDR X20, [X20 + 0xAC8]
	0x03A395E4 TBNZ X8, 0x0, 0x3A39644
	0x03A395E8 ADRP X0, 0x71C000
	0x03A395EC LDR X0, [X0 + 0x6C8]
	0x03A395F0 BL 0x1C16CF4
	0x03A395F4 ADRP X0, 0x6BA000
	0x03A395F8 LDR X0, [X0 + 0xAC8]
	0x03A395FC BL 0x1C16CF4
	0x03A39600 ADRP X0, 0x71C000
	0x03A39604 LDR X0, [X0 + 0x700]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x9AA000
	006 Move X20, 0x6BB000
	007 Move W8, [X21+270]
	008 Move X20, [X20+1432]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {25}
	014 Move X0, 0x71C000
	015 Move X0, [X0+3024]
	016 Call 0x1C17CF4
	017 Move X0, 0x6BB000
	018 Move X0, [X0+1432]
	019 Call 0x1C17CF4
	020 Move X0, 0x71D000
	021 Move X0, [X0+1696]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+270], W8
	025 Move X0, [X20]
	026 Move X20, [X19+24]
	027 Move W8, [X0+224]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X0, X20
	032 Move X1, X31
	033 Move X2, X31
	034 Call Object.op_Inequality, X0, X1
	035 Move TEMP, X0
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfNotEqual {49}
	039 Move X0, [X19+24]
	040 Compare X0, 0
	041 JumpIfEqual {58}
	042 Move X8, 0x71C000
	043 Move X8, [X8+3024]
	044 Move X1, [X8]
	045 Call 0x21A4894, X0
	046 Compare X0, 0
	047 JumpIfEqual {58}
	048 Move W0, [X0+60]
	049 Move W0, W31
	050 Move X1, X31
	051 Call LayerMask.op_Implicit, X0
	052 Move X20, [X31+16]
	053 Move X19, [X31+24]
	054 And X0, X0, 0
	055 Move X30, [X31+32]
	056 Move X21, [X31+40]
	057 Return X0
	058 Call 0x1C17F20

Method: UnityEngine.Vector3 get_selectedCameraPosition()

Disassembly:
	0x03A39608 BL 0x1C16CF4
	0x03A3960C ADRP X0, 0x71C000
	0x03A39610 LDR X0, [X0 + 0x708]
	0x03A39614 BL 0x1C16CF4
	0x03A39618 ADRP X0, 0x71C000
	0x03A3961C LDR X0, [X0 + 0x710]
	0x03A39620 BL 0x1C16CF4
	0x03A39624 ADRP X0, 0x71C000
	0x03A39628 LDR X0, [X0 + 0x718]
	0x03A3962C BL 0x1C16CF4
	0x03A39630 ADRP X0, 0x71C000
	0x03A39634 LDR X0, [X0 + 0x720]
	0x03A39638 BL 0x1C16CF4
	0x03A3963C MOVZ W8, 0x1
	0x03A39640 STRB W8, [X19 + 0x117]
	0x03A39644 LDR X0, [X20]
	0x03A39648 MOVZ W1, 0x4
	0x03A3964C BL 0x1C16D6C
	0x03A39650 CBZ X0, 0x3A396F0
	0x03A39654 LDR W8, [X0 + 0x18]
	0x03A39658 CBZ W8, 0x3A396EC
	0x03A3965C ADRP X9, 0x71C000
	0x03A39660 LDR X9, [X9 + 0x718]
	0x03A39664 CMP W8, 0x1
	0x03A39668 LDR X9, [X9]
	0x03A3966C STR X9, [X0 + 0x20]
	0x03A39670 B.EQ 0x3A396EC
	0x03A39674 ADRP X9, 0x71C000
	0x03A39678 LDR X9, [X9 + 0x710]
	0x03A3967C CMP W8, 0x2
	0x03A39680 LDR X9, [X9]
	0x03A39684 STR X9, [X0 + 0x28]
	0x03A39688 B.LS 0x3A396EC
	0x03A3968C ADRP X9, 0x71C000
	0x03A39690 LDR X9, [X9 + 0x708]
	0x03A39694 CMP W8, 0x3
	0x03A39698 LDR X9, [X9]
	0x03A3969C STR X9, [X0 + 0x30]
	0x03A396A0 B.EQ 0x3A396EC
	0x03A396A4 ADRP X8, 0x71C000
	0x03A396A8 LDR X8, [X8 + 0x700]
	0x03A396AC ADRP X9, 0x71C000
	0x03A396B0 LDR X8, [X8]
	0x03A396B4 LDR X9, [X9 + 0x6C8]
	0x03A396B8 STR X8, [X0 + 0x38]
	0x03A396BC LDR X8, [X9]
	0x03A396C0 LDR X8, [X8 + 0xB8]
	0x03A396C4 STR X0, [X8]
	0x03A396C8 LDR X8, [X9]
	0x03A396CC ADRP X9, 0x71C000
	0x03A396D0 LDR X9, [X9 + 0x720]
	0x03A396D4 LDP X20, X19, [X31 + 0x10]
	0x03A396D8 LDR X8, [X8 + 0xB8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x9AA000
	006 Move X20, 0x6BB000
	007 Move W8, [X21+271]
	008 Move X20, [X20+1432]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x6BB000
	015 Move X0, [X0+1432]
	016 Call 0x1C17CF4
	017 Move X0, 0x71D000
	018 Move X0, [X0+1696]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+271], W8
	022 Move X0, [X20]
	023 Move X20, [X19+24]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Move X0, X20
	029 Move X1, X31
	030 Move X2, X31
	031 Call Object.op_Inequality, X0, X1
	032 Move TEMP, X0
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfNotEqual {50}
	036 Move X0, [X19+24]
	037 Compare X0, 0
	038 JumpIfEqual {71}
	039 Move X1, X31
	040 Call Component.get_transform, X0
	041 Compare X0, 0
	042 JumpIfEqual {71}
	043 Move X20, [X31+16]
	044 Move X19, [X31+24]
	045 Move X1, X31
	046 Move X30, [X31+32]
	047 Move X21, [X31+40]
	048 Call Transform.get_position, X0
	049 Return X0
	050 Move X19, 0x9A0000
	051 Move W8, [X19+1923]
	052 Compare W8, 0
	053 JumpIfNotEqual {59}
	054 Move X0, 0x6BB000
	055 Move X0, [X0+1440]
	056 Call 0x1C17CF4
	057 Move W8, 1
	058 Move [X19+1923], W8
	059 Move X8, 0x6BB000
	060 Move X8, [X8+1440]
	061 Move X20, [X31+16]
	062 Move X19, [X31+24]
	063 Move X8, [X8]
	064 Move X8, [X8+184]
	065 Move S0, [X8]
	066 Move S1, [X8+4]
	067 Move V2, [X8+8]
	068 Move X30, [X31+32]
	069 Move X21, [X31+40]
	070 Return X0
	071 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x03A39334 BL 0x1C16F20
	0x03A39338 BL 0x1C16F20
	0x03A3933C BL 0x1C16F28
	0x03A39340 BL 0x1C16F20
	0x03A39344 BL 0x1C16F20
	0x03A39348 BL 0x1C16F28
	0x03A3934C BL 0x1C16F20
	0x03A39350 BL 0x1C16F20
	0x03A39354 BL 0x1C16F20
	0x03A39358 BL 0x3EB1B20
	0x03A3935C B 0x3A39424
	0x03A39360 B 0x3A39424
	0x03A39364 B 0x3A39424
	0x03A39368 B 0x3A39424
	0x03A3936C B 0x3A39424
	0x03A39370 B 0x3A39424
	0x03A39374 B 0x3A39424
	0x03A39378 B 0x3A39424
	0x03A3937C B 0x3A39424
	0x03A39380 B 0x3A393B8
	0x03A39384 B 0x3A393B8
	0x03A39388 B 0x3A39424
	0x03A3938C B 0x3A39424
	0x03A39390 B 0x3A39424
	0x03A39394 B 0x3A39424
	0x03A39398 B 0x3A39424
	0x03A3939C B 0x3A39424

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x9AA000
	006 Move X20, 0x71D000
	007 Move W8, [X21+272]
	008 Move X20, [X20+1672]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x71D000
	015 Move X0, [X0+1680]
	016 Call 0x1C17CF4
	017 Move X0, 0x71D000
	018 Move X0, [X0+1672]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+272], W8
	022 Move X0, [X20]
	023 Move X20, 0x71D000
	024 Move W8, [X0+224]
	025 Move X20, [X20+1680]
	026 Compare W8, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 Move X1, [X20]
	030 Move X0, X19
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X30, [X31+32]
	034 Move X21, [X31+40]
	035 Call 0x2849B7C, X0
	036 Return 

