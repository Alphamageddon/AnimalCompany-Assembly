Type: UnityEngine.Rendering.Universal.TemporalAA

Method: UnityEngine.Matrix4x4 CalculateJitterMatrix(ref UnityEngine.Rendering.Universal.CameraData cameraData)

Disassembly:
	0x03A79A08 MOV X24, X31
	0x03A79A0C B 0x3A79A14
	0x03A79A10 MOV X23, X0
	0x03A79A14 ADD X0, X31, 0x60
	0x03A79A18 MOV X1, X31
	0x03A79A1C BL 0x39972C0
	0x03A79A20 CBNZ X24, 0x3A79A2C
	0x03A79A24 MOV X0, X23
	0x03A79A28 BL 0x1D2C690
	0x03A79A2C MOV X0, X24
	0x03A79A30 BL 0x1C16F18
	0x03A79A34 BL 0x1990590
	0x03A79A38 STR X30, [X31 - 0x20]!
	0x03A79A3C STP X20, X19, [X31 + 0x10]
	0x03A79A40 ADRP X19, 0x969000
	0x03A79A44 ADRP X20, 0x6D4000
	0x03A79A48 LDRB W8, [X19 + 0x2FC]
	0x03A79A4C LDR X20, [X20 + 0xA88]
	0x03A79A50 TBNZ X8, 0x0, 0x3A79A80
	0x03A79A54 ADRP X0, 0x67A000
	0x03A79A58 LDR X0, [X0 + 0x638]
	0x03A79A5C BL 0x1C16CF4
	0x03A79A60 ADRP X0, 0x6DD000
	0x03A79A64 LDR X0, [X0 + 0x608]
	0x03A79A68 BL 0x1C16CF4
	0x03A79A6C ADRP X0, 0x6D4000
	0x03A79A70 LDR X0, [X0 + 0xA88]
	0x03A79A74 BL 0x1C16CF4
	0x03A79A78 MOVZ W8, 0x1
	0x03A79A7C STRB W8, [X19 + 0x2FC]
	0x03A79A80 LDR X0, [X20]
	0x03A79A84 MOVZ W1, 0x9
	0x03A79A88 BL 0x1C16D6C
	0x03A79A8C CBZ X0, 0x3A79B8C
	0x03A79A90 LDR W8, [X0 + 0x18]
	0x03A79A94 CBZ W8, 0x3A79B88
	0x03A79A98 CMP W8, 0x1
	0x03A79A9C STR X31, [X0 + 0x20]
	0x03A79AA0 B.EQ 0x3A79B88
	0x03A79AA4 ADRP X9, 0xFFFFFFFFFD075000
	0x03A79AA8 LDR V0, [X9]
	0x03A79AAC CMP W8, 0x2
	0x03A79AB0 STR D0, [X0 + 0x28]
	0x03A79AB4 B.LS 0x3A79B88
	0x03A79AB8 ADRP X9, 0xFFFFFFFFFD074000
	0x03A79ABC LDR V0, [X9 + 0x648]
	0x03A79AC0 CMP W8, 0x3
	0x03A79AC4 STR D0, [X0 + 0x30]
	0x03A79AC8 B.EQ 0x3A79B88
	0x03A79ACC ADRP X9, 0xFFFFFFFFFD075000
	0x03A79AD0 LDR V0, [X9 + 0x378]
	0x03A79AD4 CMP W8, 0x4
	0x03A79AD8 STR D0, [X0 + 0x38]
	0x03A79ADC B.LS 0x3A79B88
	0x03A79AE0 ADRP X9, 0xFFFFFFFFFD075000
	0x03A79AE4 LDR V0, [X9 + 0x278]
	0x03A79AE8 CMP W8, 0x5
	0x03A79AEC STR D0, [X0 + 0x40]
	0x03A79AF0 B.EQ 0x3A79B88
	0x03A79AF4 ADRP X9, 0xFFFFFFFFFD074000
	0x03A79AF8 LDR V0, [X9 + 0xB40]
	0x03A79AFC CMP W8, 0x6
	0x03A79B00 STR D0, [X0 + 0x48]
	0x03A79B04 B.LS 0x3A79B88
	0x03A79B08 ADRP X9, 0xFFFFFFFFFD074000
	0x03A79B0C LDR V0, [X9 + 0x930]
	0x03A79B10 CMP W8, 0x7
	0x03A79B14 STR D0, [X0 + 0x50]
	0x03A79B18 B.EQ 0x3A79B88
	0x03A79B1C FMOV V0.2S, 0x0
	0x03A79B20 CMP W8, 0x8
	0x03A79B24 STR D0, [X0 + 0x58]
	0x03A79B28 B.LS 0x3A79B88
	0x03A79B2C ADRP X19, 0x6DD000
	0x03A79B30 LDR X19, [X19 + 0x608]
	0x03A79B34 FMOV V0.2S, 0x0

ISIL:
	001 Subtract X31, X31, 208
	002 Move [X31+144], D8
	003 Move [X31+160], X30
	004 Move [X31+168], X23
	005 Move [X31+176], X22
	006 Move [X31+184], X21
	007 Move [X31+192], X20
	008 Move [X31+200], X19
	009 Move X21, 0x96A000
	010 Move W9, [X21+759]
	011 Move X20, X0
	012 Move X19, X8
	013 Move TEMP, X9
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0x6DE000
	018 Move X0, [X0+1544]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+759], W8
	022 Move X21, 0x960000
	023 Move W8, [X21+2752]
	024 Compare W8, 0
	025 JumpIfNotEqual {31}
	026 Move X0, 0x67F000
	027 Move X0, [X0+624]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X21+2752], W8
	031 Move X8, 0x67F000
	032 Move X8, [X8+624]
	033 Move X0, X20
	034 Move X1, X31
	035 Move X8, [X8]
	036 Move X8, [X8+184]
	037 Move V1, [X8+96]
	038 Move V0, [X8+112]
	039 Move V2, [X8+64]
	040 Move V3, [X8+80]
	041 Move [X31+112], V1
	042 Move [X31+120], V0
	043 Move [X31+80], V2
	044 Move [X31+88], V3
	045 Call CameraData.IsTemporalAAEnabled, X0
	046 Move TEMP, X0
	047 And TEMP, TEMP, 1
	048 Compare TEMP, 1
	049 JumpIfNotEqual {86}
	050 Move X23, 0x6DE000
	051 Move W22, [X20+516]
	052 Move X23, [X23+1544]
	053 Move X0, X31
	054 Call Time.get_frameCount
	055 Move W21, W0
	056 Move X0, [X23]
	057 Move V0, [X20+216]
	058 Move V1, [X20+496]
	059 Move W8, [X0+224]
	060 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	061 Move [X31], V1
	062 Compare W8, 0
	063 JumpIfNotEqual {65}
	064 Call 0x1C17DFC
	065 Add W0, W21, W22
	066 Call TemporalAA.CalculateJitter, X0
	067 NotImplemented "Instruction MOVI not yet implemented."
	068 Move V0.S[1], V1.S[0]
	069 Move V1, [X31]
	070 Add X8, X31, 16
	071 Move X0, X31
	072 NotImplemented "Instruction INVALID not yet implemented."
	073 NotImplemented "Instruction INVALID not yet implemented."
	074 NotImplemented "Instruction INVALID not yet implemented."
	075 Move S1, V0.S[1]
	076 Move S2, W31
	077 Call Matrix4x4.Translate, X0
	078 Move V0, [X31+16]
	079 Move V1, [X31+32]
	080 Move V2, [X31+48]
	081 Move V3, [X31+64]
	082 Move [X31+80], V0
	083 Move [X31+88], V1
	084 Move [X31+112], V2
	085 Move [X31+120], V3
	086 Move V1, [X31+112]
	087 Move V0, [X31+128]
	088 Move V3, [X31+80]
	089 Move V2, [X31+96]
	090 Move X22, [X31+176]
	091 Move X21, [X31+184]
	092 Move X30, [X31+160]
	093 Move X23, [X31+168]
	094 Move [X19+32], V1
	095 Move [X19+40], V0
	096 Move [X19], V3
	097 Move [X19+8], V2
	098 Move X20, [X31+192]
	099 Move X19, [X31+200]
	100 Move V8, [X31+144]
	101 Add X31, X31, 208
	102 Return X0

Method: UnityEngine.Vector2 CalculateJitter(System.Int32 frameIndex)

Disassembly:
	0x03A79B38 STR D0, [X0 + 0x60]
	0x03A79B3C LDR X8, [X19]
	0x03A79B40 LDR X8, [X8 + 0xB8]
	0x03A79B44 STR X0, [X8]
	0x03A79B48 LDR X8, [X19]
	0x03A79B4C LDR X8, [X8 + 0xB8]
	0x03A79B50 LDR X8, [X8]
	0x03A79B54 CBZ X8, 0x3A79B8C
	0x03A79B58 ADRP X9, 0x67A000
	0x03A79B5C LDR X9, [X9 + 0x638]
	0x03A79B60 LDR W8, [X8 + 0x18]
	0x03A79B64 LDR X0, [X9]
	0x03A79B68 ADD W1, W8, 0x1
	0x03A79B6C BL 0x1C16D6C
	0x03A79B70 LDR X8, [X19]
	0x03A79B74 LDP X20, X19, [X31 + 0x10]
	0x03A79B78 LDR X8, [X8 + 0xB8]
	0x03A79B7C STR X0, [X8 + 0x8]
	0x03A79B80 LDR X30, [X31], #0x20

ISIL:
	001 Move [X31-32], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X19
	004 And W8, W0, 1023
	005 Add W19, W8, 1
	006 Move W1, 2
	007 Move W0, W19
	008 Move X2, X31
	009 Call HaltonSequence.Get, X0, X1
	010 Move W1, 3
	011 Move W0, W19
	012 Move X2, X31
	013 Move V8, V0
	014 Call HaltonSequence.Get, X0, X1
	015 Move X30, [X31+16]
	016 Move X19, [X31+24]
	017 Move S2, -0.5
	018 Add S1, S0, S2
	019 Add S0, S8, S2
	020 Move V8, [X31+32]
	021 Return X0

Method: System.Single[] CalculateFilterWeights(System.Single jitterScale)

Disassembly:
	0x03A79B84 RET
	0x03A79B88 BL 0x1C16F28
	0x03A79B8C BL 0x1C16F20
	0x03A79B90 STR X30, [X31 - 0x50]!
	0x03A79B94 STP X26, X25, [X31 + 0x10]
	0x03A79B98 STP X24, X23, [X31 + 0x20]
	0x03A79B9C STP X22, X21, [X31 + 0x30]
	0x03A79BA0 STP X20, X19, [X31 + 0x40]
	0x03A79BA4 ADRP X25, 0x969000
	0x03A79BA8 ADRP X26, 0x6DD000
	0x03A79BAC ADRP X19, 0x6DD000
	0x03A79BB0 ADRP X24, 0x6DD000
	0x03A79BB4 ADRP X23, 0x6DD000
	0x03A79BB8 ADRP X22, 0x6DD000
	0x03A79BBC ADRP X21, 0x6DD000
	0x03A79BC0 ADRP X20, 0x6DD000
	0x03A79BC4 LDR X26, [X26 + 0xF18]
	0x03A79BC8 LDR X19, [X19 + 0xF60]
	0x03A79BCC LDRB W8, [X25 + 0x2FD]
	0x03A79BD0 LDR X24, [X24 + 0xFB8]
	0x03A79BD4 LDR X23, [X23 + 0xFC0]
	0x03A79BD8 LDR X22, [X22 + 0xFC8]
	0x03A79BDC LDR X21, [X21 + 0xFD0]
	0x03A79BE0 LDR X20, [X20 + 0xFD8]
	0x03A79BE4 TBNZ X8, 0x0, 0x3A79C44
	0x03A79BE8 ADRP X0, 0x6DD000
	0x03A79BEC LDR X0, [X0 + 0xF60]
	0x03A79BF0 BL 0x1C16CF4
	0x03A79BF4 ADRP X0, 0x6DD000
	0x03A79BF8 LDR X0, [X0 + 0xFD8]
	0x03A79BFC BL 0x1C16CF4
	0x03A79C00 ADRP X0, 0x6DD000
	0x03A79C04 LDR X0, [X0 + 0xFB8]
	0x03A79C08 BL 0x1C16CF4
	0x03A79C0C ADRP X0, 0x6DD000
	0x03A79C10 LDR X0, [X0 + 0xFC0]
	0x03A79C14 BL 0x1C16CF4
	0x03A79C18 ADRP X0, 0x6DD000
	0x03A79C1C LDR X0, [X0 + 0xFD0]
	0x03A79C20 BL 0x1C16CF4
	0x03A79C24 ADRP X0, 0x6DD000
	0x03A79C28 LDR X0, [X0 + 0xF18]
	0x03A79C2C BL 0x1C16CF4
	0x03A79C30 ADRP X0, 0x6DD000
	0x03A79C34 LDR X0, [X0 + 0xFC8]
	0x03A79C38 BL 0x1C16CF4
	0x03A79C3C MOVZ W8, 0x1
	0x03A79C40 STRB W8, [X25 + 0x2FD]
	0x03A79C44 LDR X0, [X26]
	0x03A79C48 MOV X1, X31
	0x03A79C4C BL 0x3C124EC
	0x03A79C50 LDR X8, [X19]
	0x03A79C54 MOV X1, X31
	0x03A79C58 LDR X8, [X8 + 0xB8]
	0x03A79C5C STR W0, [X8]
	0x03A79C60 LDR X0, [X24]
	0x03A79C64 BL 0x3C124EC
	0x03A79C68 LDR X8, [X19]
	0x03A79C6C MOV X1, X31
	0x03A79C70 LDR X8, [X8 + 0xB8]
	0x03A79C74 STR W0, [X8 + 0x4]
	0x03A79C78 LDR X0, [X23]
	0x03A79C7C BL 0x3C124EC
	0x03A79C80 LDR X8, [X19]
	0x03A79C84 MOV X1, X31
	0x03A79C88 LDR X8, [X8 + 0xB8]
	0x03A79C8C STR W0, [X8 + 0x8]
	0x03A79C90 LDR X0, [X22]
	0x03A79C94 BL 0x3C124EC
	0x03A79C98 LDR X8, [X19]
	0x03A79C9C MOV X1, X31
	0x03A79CA0 LDR X8, [X8 + 0xB8]
	0x03A79CA4 STR W0, [X8 + 0xC]
	0x03A79CA8 LDR X0, [X21]
	0x03A79CAC BL 0x3C124EC
	0x03A79CB0 LDR X8, [X19]
	0x03A79CB4 MOV X1, X31
	0x03A79CB8 LDR X8, [X8 + 0xB8]
	0x03A79CBC STR W0, [X8 + 0x10]
	0x03A79CC0 LDR X0, [X20]
	0x03A79CC4 BL 0x3C124EC
	0x03A79CC8 LDR X8, [X19]
	0x03A79CCC LDP X20, X19, [X31 + 0x40]
	0x03A79CD0 LDP X22, X21, [X31 + 0x30]
	0x03A79CD4 LDP X24, X23, [X31 + 0x20]
	0x03A79CD8 LDR X8, [X8 + 0xB8]
	0x03A79CDC LDP X26, X25, [X31 + 0x10]
	0x03A79CE0 STR W0, [X8 + 0x14]
	0x03A79CE4 LDR X30, [X31], #0x50

ISIL:
	001 Move [X31-80], D10
	002 Move [X31+16], D9
	003 Move [X31+24], D8
	004 Move [X31+32], X30
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X19, 0x96A000
	011 Move W8, [X19+760]
	012 Move V8, V0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0x6DE000
	018 Move X0, [X0+1544]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X19+760], W8
	022 Move X8, -49864704
	023 Move X20, 0x6DE000
	024 Move V10, [X8+856]
	025 Move X20, [X20+1544]
	026 Move X21, X31
	027 Move X22, X31
	028 Move S9, W31
	029 Move X0, X31
	030 Call Time.get_frameCount
	031 Move X8, [X20]
	032 Move W19, W0
	033 Move W9, [X8+224]
	034 Compare W9, 0
	035 JumpIfNotEqual {38}
	036 Move X0, X8
	037 Call 0x1C17DFC
	038 Move W0, W19
	039 Call TemporalAA.CalculateJitter, X0
	040 Move X19, [X20]
	041 Move X8, [X19+184]
	042 Move X9, [X8]
	043 Compare X9, 0
	044 JumpIfEqual {99}
	045 Move W10, [X9+24]
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Add X9, X9, X21
	048 Move S2, [X9+32]
	049 Move S3, [X9+36]
	050 Multiply S0, S0, S8
	051 Multiply S1, S1, S8
	052 Move X23, [X8+8]
	053 Subtract S1, S3, S1
	054 Subtract S0, S2, S0
	055 Multiply S0, S0, S0
	056 Multiply S1, S1, S1
	057 Add S0, S0, S1
	058 Multiply S0, S0, S10
	059 Call 0x3EB2E70
	060 Compare X23, 0
	061 JumpIfEqual {99}
	062 Move W8, [X23+24]
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Add X8, X23, X22
	065 Add X22, X22, 1
	066 Add S9, S9, S0
	067 NotImplemented "Instruction CMP not yet implemented."
	068 Add X21, X21, 8
	069 Move [X8+32], S0
	070 Move X21, X31
	071 Move W8, [X19+224]
	072 Compare W8, 0
	073 JumpIfNotEqual {77}
	074 Move X0, X19
	075 Call 0x1C17DFC
	076 Move X19, [X20]
	077 Move X8, [X19+184]
	078 NotImplemented "Instruction CMP not yet implemented."
	079 Move X0, [X8+8]
	080 Compare X0, 0
	081 JumpIfEqual {99}
	082 Move W8, [X0+24]
	083 NotImplemented "Instruction CMP not yet implemented."
	084 Add X8, X0, X21
	085 Move V0, [X8+32]
	086 Add X21, X21, 1
	087 NotImplemented "Instruction FDIV not yet implemented."
	088 Move [X8+32], S0
	089 Move X20, [X31+64]
	090 Move X19, [X31+72]
	091 Move X22, [X31+48]
	092 Move X21, [X31+56]
	093 Move X30, [X31+32]
	094 Move X23, [X31+40]
	095 Move D9, [X31+16]
	096 Move D8, [X31+24]
	097 Move V10, [X31+80]
	098 Return X0
	099 Call 0x1C17F20
	100 Call 0x1C17F28

Method: System.String ValidateAndWarn(ref UnityEngine.Rendering.Universal.CameraData cameraData)

Disassembly:
	0x03A79CE8 RET
	0x03A79CEC STP X30, X21, [X31 - 0x20]!
	0x03A79CF0 STP X20, X19, [X31 + 0x10]
	0x03A79CF4 ADRP X20, 0x969000
	0x03A79CF8 ADRP X19, 0x6DD000
	0x03A79CFC ADRP X21, 0x6DD000
	0x03A79D00 LDRB W8, [X20 + 0x2FE]
	0x03A79D04 LDR X19, [X19 + 0xFE0]
	0x03A79D08 LDR X21, [X21 + 0xF68]
	0x03A79D0C TBNZ X8, 0x0, 0x3A79D30
	0x03A79D10 ADRP X0, 0x6DD000
	0x03A79D14 LDR X0, [X0 + 0xF68]
	0x03A79D18 BL 0x1C16CF4
	0x03A79D1C ADRP X0, 0x6DD000
	0x03A79D20 LDR X0, [X0 + 0xFE0]
	0x03A79D24 BL 0x1C16CF4
	0x03A79D28 MOVZ W8, 0x1
	0x03A79D2C STRB W8, [X20 + 0x2FE]
	0x03A79D30 LDR X8, [X21]
	0x03A79D34 LDR X9, [X19]
	0x03A79D38 LDP X20, X19, [X31 + 0x10]
	0x03A79D3C LDR X8, [X8 + 0xB8]
	0x03A79D40 STR X9, [X8]
	0x03A79D44 LDP X30, X21, [X31], #0x20
	0x03A79D48 RET
	0x03A79D4C LDR W0, [X0]
	0x03A79D50 RET
	0x03A79D54 CMP W1, 0x4
	0x03A79D58 MOVZ W8, 0x4
	0x03A79D5C CSEL W8, W1, W8, LT
	0x03A79D60 BIC W8, W8, W8, 0x1F
	0x03A79D64 STR W8, [X0]
	0x03A79D68 RET
	0x03A79D6C LDR V0, [X0 + 0x4]
	0x03A79D70 FMOV S1, 1
	0x03A79D74 FSUB S0, S1, S0
	0x03A79D78 RET
	0x03A79D7C FMOV S1, 1
	0x03A79D80 FSUB S0, S1, S0
	0x03A79D84 FMIN S1, S0, S1
	0x03A79D88 FCMP S0, 0x0
	0x03A79D8C FMOV S0, W31
	0x03A79D90 FCSEL S0, S1, S0, PL
	0x03A79D94 STR S0, [X0 + 0x4]
	0x03A79D98 RET
	0x03A79D9C LDR V0, [X0 + 0x8]
	0x03A79DA0 RET
	0x03A79DA4 FMOV S1, 1
	0x03A79DA8 FCMP S0, 0x0
	0x03A79DAC FMIN S0, S0, S1
	0x03A79DB0 FMOV S1, W31
	0x03A79DB4 FCSEL S0, S0, S1, PL
	0x03A79DB8 STR S0, [X0 + 0x8]
	0x03A79DBC RET
	0x03A79DC0 LDR V0, [X0 + 0xC]
	0x03A79DC4 RET
	0x03A79DC8 FMOV S1, W31
	0x03A79DCC FMOV S2, -1
	0x03A79DD0 FMIN S1, S0, S1
	0x03A79DD4 FCMP S0, S2
	0x03A79DD8 FCSEL S0, S1, S2, PL
	0x03A79DDC STR S0, [X0 + 0xC]
	0x03A79DE0 RET
	0x03A79DE4 LDR V0, [X0 + 0x10]
	0x03A79DE8 RET
	0x03A79DEC ADRP X8, 0xFFFFFFFFFD071000
	0x03A79DF0 LDR V1, [X8 + 0x410]
	0x03A79DF4 FMOV S2, 10
	0x03A79DF8 FMIN S2, S0, S2
	0x03A79DFC FCMP S0, S1
	0x03A79E00 FCSEL S0, S2, S1, PL
	0x03A79E04 STR S0, [X0 + 0x10]
	0x03A79E08 RET
	0x03A79E0C LDR V0, [X0 + 0x14]
	0x03A79E10 RET
	0x03A79E14 FMOV S1, 1
	0x03A79E18 FCMP S0, 0x0
	0x03A79E1C FMIN S0, S0, S1
	0x03A79E20 FMOV S1, W31
	0x03A79E24 FCSEL S0, S0, S1, PL
	0x03A79E28 STR S0, [X0 + 0x14]
	0x03A79E2C RET
	0x03A79E30 ADRP X9, 0xFFFFFFFFFD072000
	0x03A79E34 LDR V0, [X9 + 0xA4]
	0x03A79E38 MOVZ W9, 0x3
	0x03A79E3C STR X31, [X8 + 0x18]
	0x03A79E40 STR W9, [X8]
	0x03A79E44 STUR V0, [X8 + 0x4]
	0x03A79E48 STR W31, [X8 + 0x14]
	0x03A79E4C RET
	0x03A79E50 MOV X1, X31
	0x03A79E54 B 0x33BDD8C
	0x03A79E58 STR X30, [X31 - 0x20]!
	0x03A79E5C STP X20, X19, [X31 + 0x10]
	0x03A79E60 ADRP X19, 0x969000
	0x03A79E64 ADRP X20, 0x6DD000
	0x03A79E68 LDRB W8, [X19 + 0x2FF]
	0x03A79E6C LDR X20, [X20 + 0xF98]
	0x03A79E70 TBNZ X8, 0x0, 0x3A79E88
	0x03A79E74 ADRP X0, 0x6DD000
	0x03A79E78 LDR X0, [X0 + 0xF98]
	0x03A79E7C BL 0x1C16CF4
	0x03A79E80 MOVZ W8, 0x1
	0x03A79E84 STRB W8, [X19 + 0x2FF]
	0x03A79E88 LDR X0, [X20]
	0x03A79E8C BL 0x1C16F10
	0x03A79E90 MOV X1, X31
	0x03A79E94 MOV X19, X0
	0x03A79E98 BL 0x33BDD8C
	0x03A79E9C LDR X8, [X20]
	0x03A79EA0 LDR X8, [X8 + 0xB8]
	0x03A79EA4 STR X19, [X8]
	0x03A79EA8 LDP X20, X19, [X31 + 0x10]
	0x03A79EAC LDR X30, [X31], #0x20
	0x03A79EB0 RET
	0x03A79EB4 MOV X1, X31
	0x03A79EB8 B 0x33BDD8C
	0x03A79EBC STP D9, D8, [X31 - 0x60]!
	0x03A79EC0 STR X30, [X31 + 0x10]
	0x03A79EC4 STP X26, X25, [X31 + 0x20]
	0x03A79EC8 STP X24, X23, [X31 + 0x30]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x96A000
	005 Move W8, [X20+761]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {40}
	011 Move X0, 0x6DC000
	012 Move X0, [X0+2328]
	013 Call 0x1C17CF4
	014 Move X0, 0x67B000
	015 Move X0, [X0+2600]
	016 Call 0x1C17CF4
	017 Move X0, 0x6DE000
	018 Move X0, [X0+3880]
	019 Call 0x1C17CF4
	020 Move X0, 0x6DE000
	021 Move X0, [X0+3888]
	022 Call 0x1C17CF4
	023 Move X0, 0x6DE000
	024 Move X0, [X0+3896]
	025 Call 0x1C17CF4
	026 Move X0, 0x6DE000
	027 Move X0, [X0+3904]
	028 Call 0x1C17CF4
	029 Move X0, 0x6DE000
	030 Move X0, [X0+3912]
	031 Call 0x1C17CF4
	032 Move X0, 0x6DE000
	033 Move X0, [X0+3920]
	034 Call 0x1C17CF4
	035 Move X0, 0x6DE000
	036 Move X0, [X0+3928]
	037 Call 0x1C17CF4
	038 Move W8, 1
	039 Move [X20+761], W8
	040 Move [X31+8], X31
	041 Move X8, [X19+480]
	042 Compare X8, 0
	043 JumpIfNotEqual {49}
	044 Move X8, 0x6DE000
	045 Move X8, [X8+3912]
	046 Move X20, [X8]
	047 Compare X20, 0
	048 JumpIfNotEqual {115}
	049 Move W8, [X19+224]
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Move X0, [X19+376]
	052 Compare X0, 0
	053 JumpIfEqual {62}
	054 Move X1, X31
	055 Call XRPass.get_enabled, X0
	056 Move TEMP, X0
	057 And TEMP, TEMP, 1
	058 Compare TEMP, 1
	059 JumpIfNotEqual {62}
	060 Move X8, 0x6DE000
	061 Move X8, [X8+3928]
	062 Move X8, 0x6DE000
	063 Move X8, [X8+3896]
	064 Move X20, [X8]
	065 Compare X20, 0
	066 JumpIfNotEqual {115}
	067 Move X0, [X19+192]
	068 Compare X0, 0
	069 JumpIfEqual {141}
	070 Move X8, 0x6DC000
	071 Move X8, [X8+2328]
	072 Add X1, X31, 8
	073 Move X2, [X8]
	074 Call 0x21A5990, X0, X1
	075 Move TEMP, X0
	076 And TEMP, TEMP, 1
	077 Compare TEMP, 1
	078 JumpIfNotEqual {95}
	079 Move X0, [X31+8]
	080 Compare X0, 0
	081 JumpIfEqual {141}
	082 Move W8, [X0+44]
	083 NotImplemented "Instruction CMP not yet implemented."
	084 Move X1, X31
	085 Call UniversalAdditionalCameraData.get_cameraStack, X0
	086 Compare X0, 0
	087 JumpIfEqual {141}
	088 Move W8, [X0+24]
	089 NotImplemented "Instruction CMP not yet implemented."
	090 Move X8, 0x6DE000
	091 Move X8, [X8+3888]
	092 Move X20, [X8]
	093 Compare X20, 0
	094 JumpIfNotEqual {115}
	095 Move X0, [X19+192]
	096 Compare X0, 0
	097 JumpIfEqual {141}
	098 Move X1, X31
	099 Call Camera.get_allowDynamicResolution, X0
	100 Move X8, 0x6DE000
	101 Move X8, [X8+3904]
	102 Move X20, [X8]
	103 Compare X20, 0
	104 JumpIfEqual {109}
	105 Move TEMP, X0
	106 And TEMP, TEMP, 1
	107 Compare TEMP, 1
	108 JumpIfEqual {115}
	109 Move X9, 0x6DE000
	110 Move W8, [X19+392]
	111 Move X9, [X9+3920]
	112 NotImplemented "Instruction CMP not yet implemented."
	113 Move X9, [X9]
	114 NotImplemented "Instruction CSEL not yet implemented."
	115 Move X0, X31
	116 Call Time.get_frameCount
	117 Move W8, 0xEEEF
	118 Move W9, 0x8888
	119 NotImplemented "Instruction MOVK not yet implemented."
	120 NotImplemented "Instruction MOVK not yet implemented."
	121 NotImplemented "Instruction MADD not yet implemented."
	122 Move W9, 0x4444
	123 NotImplemented "Instruction EXTR not yet implemented."
	124 NotImplemented "Instruction MOVK not yet implemented."
	125 NotImplemented "Instruction CMP not yet implemented."
	126 Move X8, 0x67B000
	127 Move X8, [X8+2600]
	128 Move X0, [X8]
	129 Move W8, [X0+224]
	130 Compare W8, 0
	131 JumpIfNotEqual {133}
	132 Call 0x1C17DFC
	133 Move X0, X20
	134 Move X1, X31
	135 Call Debug.LogWarning, X0
	136 Move X0, X20
	137 Move X20, [X31+16]
	138 Move X19, [X31+24]
	139 Move X30, [X31+32]
	140 Return X0
	141 Call 0x1C17F20

Method: System.Void ExecutePass(UnityEngine.Rendering.CommandBuffer cmd, UnityEngine.Material taaMaterial, ref UnityEngine.Rendering.Universal.CameraData cameraData, UnityEngine.Rendering.RTHandle source, UnityEngine.Rendering.RTHandle destination, UnityEngine.RenderTexture motionVectors)

Disassembly:
	0x03A79ECC STP X22, X21, [X31 + 0x40]
	0x03A79ED0 STP X20, X19, [X31 + 0x50]
	0x03A79ED4 ADRP X21, 0x969000
	0x03A79ED8 LDRB W8, [X21 + 0x300]
	0x03A79EDC MOV X20, X2
	0x03A79EE0 MOV X19, X1
	0x03A79EE4 TBNZ X8, 0x0, 0x3A79F2C
	0x03A79EE8 ADRP X0, 0x6D9000
	0x03A79EEC LDR X0, [X0 + 0xE28]
	0x03A79EF0 BL 0x1C16CF4
	0x03A79EF4 ADRP X0, 0x6A2000
	0x03A79EF8 LDR X0, [X0 + 0x8F8]
	0x03A79EFC BL 0x1C16CF4
	0x03A79F00 ADRP X0, 0x6DD000
	0x03A79F04 LDR X0, [X0 + 0xF60]
	0x03A79F08 BL 0x1C16CF4
	0x03A79F0C ADRP X0, 0x6DD000
	0x03A79F10 LDR X0, [X0 + 0xF68]
	0x03A79F14 BL 0x1C16CF4
	0x03A79F18 ADRP X0, 0x6D7000
	0x03A79F1C LDR X0, [X0 + 0xA88]
	0x03A79F20 BL 0x1C16CF4
	0x03A79F24 MOVZ W8, 0x1
	0x03A79F28 STRB W8, [X21 + 0x300]
	0x03A79F2C CBZ X19, 0x3A7A198
	0x03A79F30 ADRP X24, 0x6DD000
	0x03A79F34 LDR X24, [X24 + 0xF60]
	0x03A79F38 LDR X21, [X19 + 0x38]
	0x03A79F3C LDR X0, [X24]
	0x03A79F40 LDR W8, [X0 + 0xE0]
	0x03A79F44 CBNZ W8, 0x3A79F4C
	0x03A79F48 BL 0x1C16DFC
	0x03A79F4C CBZ X21, 0x3A7A198
	0x03A79F50 LDR X8, [X24]
	0x03A79F54 LDR V0, [X19 + 0x44]
	0x03A79F58 MOV X0, X21
	0x03A79F5C MOV X2, X31
	0x03A79F60 LDR X8, [X8 + 0xB8]
	0x03A79F64 LDR W1, [X8 + 0xC]
	0x03A79F68 BL 0x3C15CD8
	0x03A79F6C LDR X0, [X19 + 0x38]
	0x03A79F70 CBZ X0, 0x3A7A198
	0x03A79F74 LDR X8, [X24]
	0x03A79F78 LDR V0, [X19 + 0x48]
	0x03A79F7C ADRP X25, 0x6D7000
	0x03A79F80 MOV X2, X31
	0x03A79F84 LDR X8, [X8 + 0xB8]
	0x03A79F88 LDR W1, [X8 + 0x10]
	0x03A79F8C LDR X25, [X25 + 0xA88]
	0x03A79F90 BL 0x3C15CD8
	0x03A79F94 LDR X8, [X24]
	0x03A79F98 LDR X0, [X25]
	0x03A79F9C LDP X23, X22, [X19 + 0x30]
	0x03A79FA0 LDR X8, [X8 + 0xB8]
	0x03A79FA4 LDR W9, [X0 + 0xE0]
	0x03A79FA8 LDR W21, [X8]
	0x03A79FAC CBNZ W9, 0x3A79FB4
	0x03A79FB0 BL 0x1C16DFC
	0x03A79FB4 MOV X0, X23
	0x03A79FB8 MOV X1, X31
	0x03A79FBC BL 0x399A66C
	0x03A79FC0 CBZ X22, 0x3A7A198
	0x03A79FC4 MOV X2, X0
	0x03A79FC8 MOV X0, X22
	0x03A79FCC MOV W1, W21
	0x03A79FD0 MOV X3, X31
	0x03A79FD4 BL 0x3C14C34
	0x03A79FD8 LDR X8, [X24]
	0x03A79FDC LDR X0, [X19 + 0x28]
	0x03A79FE0 LDR X22, [X19 + 0x38]
	0x03A79FE4 MOV X1, X31
	0x03A79FE8 LDR X8, [X8 + 0xB8]
	0x03A79FEC LDR W21, [X8 + 0x4]
	0x03A79FF0 BL 0x399A66C
	0x03A79FF4 CBZ X22, 0x3A7A198
	0x03A79FF8 MOV X2, X0
	0x03A79FFC MOV X0, X22
	0x03A7A000 MOV W1, W21
	0x03A7A004 MOV X3, X31
	0x03A7A008 BL 0x3C14C34
	0x03A7A00C LDR X8, [X24]
	0x03A7A010 LDR X0, [X19 + 0x20]
	0x03A7A014 LDR X22, [X19 + 0x38]
	0x03A7A018 MOV X1, X31
	0x03A7A01C LDR X8, [X8 + 0xB8]
	0x03A7A020 LDR W21, [X8 + 0x14]
	0x03A7A024 BL 0x399A66C
	0x03A7A028 CBZ X22, 0x3A7A198
	0x03A7A02C ADRP X26, 0x6DC000
	0x03A7A030 ADRP X23, 0x6A1000
	0x03A7A034 LDR X26, [X26 + 0xF68]
	0x03A7A038 LDR X23, [X23 + 0x8F8]
	0x03A7A03C MOV X2, X0
	0x03A7A040 MOV X0, X22
	0x03A7A044 MOV W1, W21
	0x03A7A048 MOV X3, X31
	0x03A7A04C BL 0x3C14C34
	0x03A7A050 LDR X0, [X26]
	0x03A7A054 LDR X21, [X19 + 0x38]
	0x03A7A058 LDR W8, [X0 + 0xE0]
	0x03A7A05C CBNZ W8, 0x3A7A068
	0x03A7A060 BL 0x1C16DFC
	0x03A7A064 LDR X0, [X26]
	0x03A7A068 LDR X8, [X0 + 0xB8]
	0x03A7A06C LDR X0, [X23]
	0x03A7A070 LDRB W23, [X19 + 0x58]
	0x03A7A074 LDR X22, [X8]
	0x03A7A078 LDR W8, [X0 + 0xE0]
	0x03A7A07C CBNZ W8, 0x3A7A084
	0x03A7A080 BL 0x1C16DFC
	0x03A7A084 CMP W23, 0x0
	0x03A7A088 CSET W2, NE
	0x03A7A08C MOV X0, X21
	0x03A7A090 MOV X1, X22
	0x03A7A094 MOV X3, X31
	0x03A7A098 BL 0x39E9638
	0x03A7A09C LDR X8, [X19 + 0x50]
	0x03A7A0A0 CBZ X8, 0x3A7A0D8
	0x03A7A0A4 LDR X0, [X24]
	0x03A7A0A8 LDR X21, [X19 + 0x38]
	0x03A7A0AC LDR W8, [X0 + 0xE0]
	0x03A7A0B0 CBNZ W8, 0x3A7A0B8
	0x03A7A0B4 BL 0x1C16DFC
	0x03A7A0B8 CBZ X21, 0x3A7A198
	0x03A7A0BC LDR X8, [X24]
	0x03A7A0C0 LDR X2, [X19 + 0x50]
	0x03A7A0C4 MOV X0, X21
	0x03A7A0C8 MOV X3, X31
	0x03A7A0CC LDR X8, [X8 + 0xB8]
	0x03A7A0D0 LDR W1, [X8 + 0x8]
	0x03A7A0D4 BL 0x3C15E54
	0x03A7A0D8 CBZ X20, 0x3A7A198
	0x03A7A0DC LDR X0, [X25]
	0x03A7A0E0 LDR X20, [X20 + 0x18]
	0x03A7A0E4 LDR X21, [X19 + 0x18]
	0x03A7A0E8 LDR W8, [X0 + 0xE0]
	0x03A7A0EC CBNZ W8, 0x3A7A0F4
	0x03A7A0F0 BL 0x1C16DFC
	0x03A7A0F4 ADRP X22, 0x6D8000
	0x03A7A0F8 LDR X22, [X22 + 0xE28]
	0x03A7A0FC MOV X0, X21
	0x03A7A100 MOV X1, X31
	0x03A7A104 BL 0x399A7C4
	0x03A7A108 ADRP X23, 0x967000
	0x03A7A10C LDRB W8, [X23 + 0xA48]
	0x03A7A110 MOV X21, X0
	0x03A7A114 CBNZ W8, 0x3A7A12C
	0x03A7A118 ADRP X0, 0x681000
	0x03A7A11C LDR X0, [X0 + 0xF08]
	0x03A7A120 BL 0x1C16CF4
	0x03A7A124 MOVZ W8, 0x1
	0x03A7A128 STRB W8, [X23 + 0xA48]
	0x03A7A12C ADRP X8, 0x681000
	0x03A7A130 LDR X8, [X8 + 0xF08]
	0x03A7A134 LDR X0, [X22]
	0x03A7A138 LDR X22, [X19 + 0x38]
	0x03A7A13C LDR W19, [X19 + 0x40]
	0x03A7A140 LDR X8, [X8]
	0x03A7A144 LDR W9, [X0 + 0xE0]
	0x03A7A148 LDR X8, [X8 + 0xB8]
	0x03A7A14C LDP S8, S9, [X8 + 0x8]
	0x03A7A150 CBNZ W9, 0x3A7A158
	0x03A7A154 BL 0x1C16DFC
	0x03A7A158 MOV X0, X20
	0x03A7A15C MOV X1, X21
	0x03A7A160 MOV X2, X22
	0x03A7A164 MOV W3, W19
	0x03A7A168 LDP X20, X19, [X31 + 0x50]
	0x03A7A16C LDP X22, X21, [X31 + 0x40]
	0x03A7A170 LDP X24, X23, [X31 + 0x30]
	0x03A7A174 LDP X26, X25, [X31 + 0x20]
	0x03A7A178 LDR X30, [X31 + 0x10]
	0x03A7A17C FMOV S2, W31
	0x03A7A180 FMOV S3, W31
	0x03A7A184 MOV V0.16B, V8.16B
	0x03A7A188 MOV V1.16B, V9.16B
	0x03A7A18C MOV X4, X31
	0x03A7A190 LDP D9, D8, [X31], #0x60
	0x03A7A194 B 0x39E23B4
	0x03A7A198 BL 0x1C16F20
	0x03A7A19C STP D9, D8, [X31 - 0x40]!
	0x03A7A1A0 STP X30, X23, [X31 + 0x10]
	0x03A7A1A4 STP X22, X21, [X31 + 0x20]
	0x03A7A1A8 STP X20, X19, [X31 + 0x30]
	0x03A7A1AC ADRP X21, 0x968000
	0x03A7A1B0 LDRB W8, [X21 + 0x301]
	0x03A7A1B4 MOV X20, X2
	0x03A7A1B8 MOV X19, X1
	0x03A7A1BC TBNZ X8, 0x0, 0x3A7A1E0
	0x03A7A1C0 ADRP X0, 0x6D8000
	0x03A7A1C4 LDR X0, [X0 + 0xE28]
	0x03A7A1C8 BL 0x1C16CF4
	0x03A7A1CC ADRP X0, 0x6D6000
	0x03A7A1D0 LDR X0, [X0 + 0xA88]
	0x03A7A1D4 BL 0x1C16CF4
	0x03A7A1D8 MOVZ W8, 0x1
	0x03A7A1DC STRB W8, [X21 + 0x301]
	0x03A7A1E0 CBZ X20, 0x3A7A2A4
	0x03A7A1E4 CBZ X19, 0x3A7A2A4
	0x03A7A1E8 ADRP X8, 0x6D6000
	0x03A7A1EC LDR X8, [X8 + 0xA88]
	0x03A7A1F0 LDR X20, [X20 + 0x18]
	0x03A7A1F4 LDR X21, [X19 + 0x18]
	0x03A7A1F8 LDR X0, [X8]
	0x03A7A1FC LDR W8, [X0 + 0xE0]
	0x03A7A200 CBNZ W8, 0x3A7A208
	0x03A7A204 BL 0x1C16DFC
	0x03A7A208 ADRP X22, 0x6D8000
	0x03A7A20C LDR X22, [X22 + 0xE28]
	0x03A7A210 MOV X0, X21
	0x03A7A214 MOV X1, X31
	0x03A7A218 BL 0x399A7C4
	0x03A7A21C ADRP X23, 0x967000
	0x03A7A220 LDRB W8, [X23 + 0xA48]
	0x03A7A224 MOV X21, X0
	0x03A7A228 CBNZ W8, 0x3A7A240
	0x03A7A22C ADRP X0, 0x681000
	0x03A7A230 LDR X0, [X0 + 0xF08]
	0x03A7A234 BL 0x1C16CF4
	0x03A7A238 MOVZ W8, 0x1
	0x03A7A23C STRB W8, [X23 + 0xA48]
	0x03A7A240 ADRP X8, 0x681000
	0x03A7A244 LDR X8, [X8 + 0xF08]
	0x03A7A248 LDR X0, [X22]
	0x03A7A24C LDR X22, [X19 + 0x38]
	0x03A7A250 LDR W19, [X19 + 0x40]
	0x03A7A254 LDR X8, [X8]
	0x03A7A258 LDR W9, [X0 + 0xE0]
	0x03A7A25C LDR X8, [X8 + 0xB8]
	0x03A7A260 LDP S8, S9, [X8 + 0x8]
	0x03A7A264 CBNZ W9, 0x3A7A26C
	0x03A7A268 BL 0x1C16DFC
	0x03A7A26C MOV X0, X20
	0x03A7A270 MOV X1, X21
	0x03A7A274 MOV X2, X22
	0x03A7A278 MOV W3, W19
	0x03A7A27C LDP X20, X19, [X31 + 0x30]
	0x03A7A280 LDP X22, X21, [X31 + 0x20]
	0x03A7A284 LDP X30, X23, [X31 + 0x10]
	0x03A7A288 FMOV S2, W31
	0x03A7A28C FMOV S3, W31
	0x03A7A290 MOV V0.16B, V8.16B
	0x03A7A294 MOV V1.16B, V9.16B
	0x03A7A298 MOV X4, X31
	0x03A7A29C LDP D9, D8, [X31], #0x40
	0x03A7A2A0 B 0x39E23B4
	0x03A7A2A4 BL 0x1C16F20
	0x03A7A2A8 STRH W1, [X0]
	0x03A7A2AC STRH W1, [X0 + 0x2]
	0x03A7A2B0 RET
	0x03A7A2B4 STRH W1, [X0]
	0x03A7A2B8 STRH W2, [X0 + 0x2]
	0x03A7A2BC RET
	0x03A7A2C0 STR X30, [X31 - 0x30]!
	0x03A7A2C4 STP X22, X21, [X31 + 0x10]
	0x03A7A2C8 STP X20, X19, [X31 + 0x20]
	0x03A7A2CC ADRP X22, 0x968000
	0x03A7A2D0 ADRP X21, 0x679000
	0x03A7A2D4 LDRB W8, [X22 + 0x302]
	0x03A7A2D8 LDR X21, [X21 + 0x5A8]
	0x03A7A2DC MOV W20, W1
	0x03A7A2E0 MOV X19, X0
	0x03A7A2E4 TBNZ X8, 0x0, 0x3A7A2FC
	0x03A7A2E8 ADRP X0, 0x679000
	0x03A7A2EC LDR X0, [X0 + 0x5A8]
	0x03A7A2F0 BL 0x1C16CF4
	0x03A7A2F4 MOVZ W8, 0x1
	0x03A7A2F8 STRB W8, [X22 + 0x302]
	0x03A7A2FC LDR X0, [X21]
	0x03A7A300 LDRH W21, [X19]
	0x03A7A304 LDR W8, [X0 + 0xE0]
	0x03A7A308 CBNZ W8, 0x3A7A310
	0x03A7A30C BL 0x1C16DFC
	0x03A7A310 MOV W0, W21
	0x03A7A314 MOV W1, W20
	0x03A7A318 MOV X2, X31
	0x03A7A31C BL 0x337EE84
	0x03A7A320 LDRH W8, [X19 + 0x2]
	0x03A7A324 STRH W0, [X19]
	0x03A7A328 MOV W1, W20
	0x03A7A32C MOV X2, X31
	0x03A7A330 MOV W0, W8
	0x03A7A334 BL 0x337EDE0
	0x03A7A338 STRH W0, [X19 + 0x2]
	0x03A7A33C LDP X20, X19, [X31 + 0x20]
	0x03A7A340 LDP X22, X21, [X31 + 0x10]
	0x03A7A344 LDR X30, [X31], #0x30
	0x03A7A348 RET
	0x03A7A34C STP X30, X23, [X31 - 0x30]!
	0x03A7A350 STP X22, X21, [X31 + 0x10]
	0x03A7A354 STP X20, X19, [X31 + 0x20]
	0x03A7A358 ADRP X23, 0x968000

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+16], D8
	003 Move [X31+32], X29
	004 Move [X31+40], X30
	005 Move [X31+48], X28
	006 Move [X31+56], X27
	007 Move [X31+64], X26
	008 Move [X31+72], X25
	009 Move [X31+80], X24
	010 Move [X31+88], X23
	011 Move [X31+96], X22
	012 Move [X31+104], X21
	013 Move [X31+112], X20
	014 Move [X31+120], X19
	015 Move [X31+8], X3
	016 Move X24, 0x96A000
	017 Move X23, 0x6DC000
	018 Move W8, [X24+762]
	019 Move X23, [X23+168]
	020 Move X26, X5
	021 Move X20, X4
	022 Move X19, X2
	023 Move X21, X1
	024 Move X22, X0
	025 Move TEMP, X8
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {46}
	029 Move X0, 0x6DA000
	030 Move X0, [X0+3624]
	031 Call 0x1C17CF4
	032 Move X0, 0x6DC000
	033 Move X0, [X0+168]
	034 Call 0x1C17CF4
	035 Move X0, 0x6DE000
	036 Move X0, [X0+3936]
	037 Call 0x1C17CF4
	038 Move X0, 0x6DE000
	039 Move X0, [X0+3944]
	040 Call 0x1C17CF4
	041 Move X0, 0x6DE000
	042 Move X0, [X0+1544]
	043 Call 0x1C17CF4
	044 Move W8, 1
	045 Move [X24+762], W8
	046 Move X1, [X23]
	047 Move W0, 21
	048 Move [X31+24], W31
	049 Call 0x2236BC0, X0
	050 Move X2, X0
	051 Add X0, X31, 24
	052 Move X1, X22
	053 Move X3, X31
	054 Call ProfilingScope..ctor, X0, X1, X2
	055 Move X9, [X19+376]
	056 Compare X9, 0
	057 JumpIfEqual {260}
	058 Move X8, [X19+480]
	059 Compare X8, 0
	060 JumpIfEqual {261}
	061 Move W28, [X9+36]
	062 Move W9, 92
	063 Move W10, 88
	064 NotImplemented "Instruction CMP not yet implemented."
	065 NotImplemented "Instruction CSEL not yet implemented."
	066 Move W29, [X8]
	067 Move X0, X31
	068 Call Time.get_frameCount
	069 Move X8, [X19+480]
	070 Compare X8, 0
	071 JumpIfEqual {262}
	072 Move X23, 0x6DE000
	073 Move X23, [X23+3936]
	074 Move W25, W0
	075 NotImplemented "Instruction CMP not yet implemented."
	076 Move W9, 80
	077 Move X0, [X23]
	078 Move W10, 72
	079 NotImplemented "Instruction CSEL not yet implemented."
	080 Move X24, [X8]
	081 Move W10, [X0+224]
	082 Compare W10, 0
	083 JumpIfNotEqual {86}
	084 Call 0x1C17DFC
	085 Move X0, [X23]
	086 Move X8, [X0+184]
	087 Move W27, [X8]
	088 Move X0, X24
	089 Move X1, X31
	090 Call RTHandle.op_Implicit, X0
	091 Compare X21, 0
	092 JumpIfEqual {263}
	093 Move X2, X0
	094 Move X0, X21
	095 Move W1, W27
	096 Move X3, X31
	097 Call Material.SetTexture, X0, X1, X2
	098 Move X8, [X23]
	099 NotImplemented "Instruction CMP not yet implemented."
	100 Move X8, [X8+184]
	101 Move W27, [X8+4]
	102 Move X0, X31
	103 Call Texture2D.get_blackTexture
	104 Move X26, X0
	105 Move X0, X21
	106 Move W1, W27
	107 Move X2, X26
	108 Move X3, X31
	109 Call Material.SetTexture, X0, X1, X2
	110 Move W8, [X19+512]
	111 Move S8, 1
	112 Compare W8, 0
	113 JumpIfNotEqual {115}
	114 Move V8, [X19+492]
	115 Move X0, [X23]
	116 Move W8, [X0+224]
	117 Compare W8, 0
	118 JumpIfNotEqual {121}
	119 Call 0x1C17DFC
	120 Move X0, [X23]
	121 Move X8, [X0+184]
	122 Move W1, [X8+12]
	123 Move X0, X21
	124 Move V0, V8
	125 Move X2, X31
	126 Call Material.SetFloat, X0, X1, V0
	127 Move X8, [X23]
	128 Move V0, [X19+504]
	129 Move X8, [X8+184]
	130 Move W1, [X8+16]
	131 Move X0, X21
	132 Move X2, X31
	133 Call Material.SetFloat, X0, X1, V0
	134 Move W8, [X19+488]
	135 NotImplemented "Instruction CMP not yet implemented."
	136 Move X0, [X23]
	137 Move W8, [X0+224]
	138 Compare W8, 0
	139 JumpIfNotEqual {142}
	140 Call 0x1C17DFC
	141 Move X0, [X23]
	142 Move X9, 0x6DD000
	143 Move X8, [X0+184]
	144 Move X9, [X9+1544]
	145 Move V8, [X19+496]
	146 Move W26, [X8+8]
	147 Move X0, [X9]
	148 Move W8, [X0+224]
	149 Compare W8, 0
	150 JumpIfNotEqual {152}
	151 Call 0x1C17DFC
	152 Move V0, V8
	153 Call TemporalAA.CalculateFilterWeights, V0
	154 Move X2, X0
	155 Move X0, X21
	156 Move W1, W26
	157 Move X3, X31
	158 Call Material.SetFloatArray, X0, X1, X2
	159 Compare X24, 0
	160 JumpIfEqual {264}
	161 Move X0, [X24+24]
	162 Compare X0, 0
	163 JumpIfEqual {265}
	164 Move X1, X31
	165 Call RenderTexture.get_graphicsFormat, X0
	166 Move X23, 0x6DD000
	167 Move X23, [X23+3944]
	168 NotImplemented "Instruction CMP not yet implemented."
	169 NotImplemented "Instruction CMP not yet implemented."
	170 NotImplemented "Instruction CMP not yet implemented."
	171 Move X0, [X23]
	172 Move W8, [X0+224]
	173 Compare W8, 0
	174 JumpIfNotEqual {177}
	175 Call 0x1C17DFC
	176 Move X0, [X23]
	177 Move X8, [X0+184]
	178 Move X1, [X8]
	179 Move X0, X21
	180 Move X2, X31
	181 Call Material.EnableKeyword, X0, X1
	182 Move X0, [X23]
	183 Move W8, [X0+224]
	184 Compare W8, 0
	185 JumpIfNotEqual {188}
	186 Call 0x1C17DFC
	187 Move X0, [X23]
	188 Move X8, [X0+184]
	189 Move X1, [X8]
	190 Move X0, X21
	191 Move X2, X31
	192 Call Material.DisableKeyword, X0, X1
	193 Move X27, 0x6D9000
	194 Move X27, [X27+3624]
	195 Move W26, [X19+488]
	196 Move X0, [X27]
	197 Move W8, [X0+224]
	198 Compare W8, 0
	199 JumpIfNotEqual {201}
	200 Call 0x1C17DFC
	201 Move X1, [X31+8]
	202 Move W3, 2
	203 Move X0, X22
	204 Move X2, X20
	205 Move W4, W31
	206 Move X5, X21
	207 Move W6, W26
	208 Move X7, X31
	209 Call Blitter.BlitCameraTexture, X0, X1, X2, X3, X4, X5, X6
	210 NotImplemented "Instruction CMP not yet implemented."
	211 Move X0, X21
	212 Move X1, X31
	213 Call Material.get_shader, X0
	214 Compare X0, 0
	215 JumpIfEqual {266}
	216 Move X1, X31
	217 Call Shader.get_passCount, X0
	218 Move W23, W0
	219 Move X0, [X27]
	220 Move W8, [X0+224]
	221 Compare W8, 0
	222 JumpIfNotEqual {224}
	223 Call 0x1C17DFC
	224 Subtract W6, W23, 1
	225 Move W3, 2
	226 Move X0, X22
	227 Move X1, X20
	228 Move X2, X24
	229 Move W4, W31
	230 Move X5, X21
	231 Move X7, X31
	232 Call Blitter.BlitCameraTexture, X0, X1, X2, X3, X4, X5, X6
	233 Move X19, [X19+480]
	234 Move X0, X31
	235 Call Time.get_frameCount
	236 Compare X19, 0
	237 JumpIfEqual {267}
	238 Compare W28, 0
	239 JumpIfEqual {241}
	240 Move [X19+92], W0
	241 Move [X19+88], W0
	242 Add X0, X31, 24
	243 Move X1, X31
	244 Call ProfilingScope.Dispose, X0
	245 Move X20, [X31+112]
	246 Move X19, [X31+120]
	247 Move X22, [X31+96]
	248 Move X21, [X31+104]
	249 Move X24, [X31+80]
	250 Move X23, [X31+88]
	251 Move X26, [X31+64]
	252 Move X25, [X31+72]
	253 Move X28, [X31+48]
	254 Move X27, [X31+56]
	255 Move X29, [X31+32]
	256 Move X30, [X31+40]
	257 Move V8, [X31+16]
	258 Add X31, X31, 128
	259 Return 
	260 Call 0x1C17F20
	261 Call 0x1C17F20
	262 Call 0x1C17F20
	263 Call 0x1C17F20
	264 Call 0x1C17F20
	265 Call 0x1C17F20
	266 Call 0x1C17F20
	267 Call 0x1C17F20
	268 Move X19, X0
	269 NotImplemented "Instruction CMP not yet implemented."
	270 Move X0, X19
	271 Call 0x3EB2AD0
	272 Move X20, [X0]
	273 Call 0x3EB2AE0
	274 Add X0, X31, 24
	275 Move X1, X31
	276 Call ProfilingScope.Dispose, X0
	277 Compare X20, 0
	278 JumpIfEqual {245}
	279 Move X0, X20
	280 Call 0x1C17F18
	281 Move X20, X31
	282 Move X19, X0
	283 Add X0, X31, 24
	284 Move X1, X31
	285 Call ProfilingScope.Dispose, X0
	286 Compare X20, 0
	287 JumpIfNotEqual {290}
	288 Move X0, X19
	289 Call 0x1D2D690
	290 Move X0, X20
	291 Call 0x1C17F18
	292 Call 0x1991590

Method: System.Void Render(UnityEngine.Experimental.Rendering.RenderGraphModule.RenderGraph renderGraph, UnityEngine.Material taaMaterial, ref UnityEngine.Rendering.Universal.CameraData cameraData, ref UnityEngine.Experimental.Rendering.RenderGraphModule.TextureHandle srcColor, ref UnityEngine.Experimental.Rendering.RenderGraphModule.TextureHandle srcDepth, ref UnityEngine.Experimental.Rendering.RenderGraphModule.TextureHandle srcMotionVectors, ref UnityEngine.Experimental.Rendering.RenderGraphModule.TextureHandle dstColor)

Disassembly:
	0x03A7A35C ADRP X22, 0x679000
	0x03A7A360 LDRB W8, [X23 + 0x303]
	0x03A7A364 LDR X22, [X22 + 0x5A8]
	0x03A7A368 MOV W20, W2
	0x03A7A36C MOV W21, W1
	0x03A7A370 MOV X19, X0
	0x03A7A374 TBNZ X8, 0x0, 0x3A7A38C
	0x03A7A378 ADRP X0, 0x679000
	0x03A7A37C LDR X0, [X0 + 0x5A8]
	0x03A7A380 BL 0x1C16CF4
	0x03A7A384 MOVZ W8, 0x1
	0x03A7A388 STRB W8, [X23 + 0x303]
	0x03A7A38C LDR X0, [X22]
	0x03A7A390 LDRH W22, [X19]
	0x03A7A394 LDR W8, [X0 + 0xE0]
	0x03A7A398 CBNZ W8, 0x3A7A3A0
	0x03A7A39C BL 0x1C16DFC
	0x03A7A3A0 MOV W0, W21
	0x03A7A3A4 MOV W1, W22
	0x03A7A3A8 MOV X2, X31
	0x03A7A3AC BL 0x337EDE0
	0x03A7A3B0 LDRH W1, [X19 + 0x2]
	0x03A7A3B4 STRH W0, [X19]
	0x03A7A3B8 MOV W0, W20
	0x03A7A3BC MOV X2, X31
	0x03A7A3C0 BL 0x337EE84
	0x03A7A3C4 STRH W0, [X19 + 0x2]
	0x03A7A3C8 LDP X20, X19, [X31 + 0x20]
	0x03A7A3CC LDP X22, X21, [X31 + 0x10]
	0x03A7A3D0 LDP X30, X23, [X31], #0x30
	0x03A7A3D4 RET
	0x03A7A3D8 LDRSH W8, [X0 + 0x2]
	0x03A7A3DC LDRSH W9, [X0]
	0x03A7A3E0 CMP W8, W9
	0x03A7A3E4 CSET W0, LT
	0x03A7A3E8 RET
	0x03A7A3EC LDRSH W8, [X0]
	0x03A7A3F0 CMP W8, W1, SXTH
	0x03A7A3F4 B.LE 0x3A7A400
	0x03A7A3F8 MOV W0, W31
	0x03A7A3FC RET
	0x03A7A400 LDRSH W8, [X0 + 0x2]
	0x03A7A404 CMP W8, W1, SXTH
	0x03A7A408 CSET W0, GE
	0x03A7A40C RET
	0x03A7A410 STR X30, [X31 - 0x30]!
	0x03A7A414 STP X22, X21, [X31 + 0x10]
	0x03A7A418 STP X20, X19, [X31 + 0x20]
	0x03A7A41C ADRP X21, 0x968000
	0x03A7A420 ADRP X22, 0x679000
	0x03A7A424 LDRB W8, [X21 + 0x304]
	0x03A7A428 LDR X22, [X22 + 0x5A8]
	0x03A7A42C MOV X19, X1
	0x03A7A430 MOV X20, X0
	0x03A7A434 TBNZ X8, 0x0, 0x3A7A44C
	0x03A7A438 ADRP X0, 0x679000
	0x03A7A43C LDR X0, [X0 + 0x5A8]
	0x03A7A440 BL 0x1C16CF4
	0x03A7A444 MOVZ W8, 0x1
	0x03A7A448 STRB W8, [X21 + 0x304]
	0x03A7A44C LDR X0, [X22]
	0x03A7A450 LDR W8, [X0 + 0xE0]
	0x03A7A454 CBNZ W8, 0x3A7A45C
	0x03A7A458 BL 0x1C16DFC
	0x03A7A45C MOV W0, W20
	0x03A7A460 MOV W1, W19
	0x03A7A464 MOV X2, X31
	0x03A7A468 UBFM X21, X20, 0x10, 0x3F
	0x03A7A46C UBFM X22, X19, 0x10, 0x3F
	0x03A7A470 BL 0x337EE84
	0x03A7A474 MOV W19, W0
	0x03A7A478 MOV W0, W21
	0x03A7A47C MOV W1, W22
	0x03A7A480 MOV X2, X31
	0x03A7A484 BL 0x337EDE0
	0x03A7A488 AND X8, X0, 0xFFFF
	0x03A7A48C AND X0, X19, 0xFFFF
	0x03A7A490 LDP X20, X19, [X31 + 0x20]
	0x03A7A494 LDP X22, X21, [X31 + 0x10]
	0x03A7A498 BFM X0, X8, 0x30, 0xF
	0x03A7A49C LDR X30, [X31], #0x30
	0x03A7A4A0 RET
	0x03A7A4A4 ORR W0, W31, 0x80007FFF
	0x03A7A4A8 RET
	0x03A7A4AC STR X30, [X31 - 0x30]!
	0x03A7A4B0 STP X22, X21, [X31 + 0x10]
	0x03A7A4B4 STP X20, X19, [X31 + 0x20]
	0x03A7A4B8 ADRP X20, 0x968000
	0x03A7A4BC ADRP X22, 0x67D000
	0x03A7A4C0 ADRP X21, 0x685000
	0x03A7A4C4 LDRB W8, [X20 + 0x305]
	0x03A7A4C8 LDR X22, [X22 + 0x628]
	0x03A7A4CC LDR X21, [X21 + 0x588]
	0x03A7A4D0 MOV X19, X0
	0x03A7A4D4 TBNZ X8, 0x0, 0x3A7A4F8
	0x03A7A4D8 ADRP X0, 0x67D000
	0x03A7A4DC LDR X0, [X0 + 0x628]
	0x03A7A4E0 BL 0x1C16CF4
	0x03A7A4E4 ADRP X0, 0x685000
	0x03A7A4E8 LDR X0, [X0 + 0x588]
	0x03A7A4EC BL 0x1C16CF4
	0x03A7A4F0 MOVZ W8, 0x1
	0x03A7A4F4 STRB W8, [X20 + 0x305]
	0x03A7A4F8 LDRH W8, [X19]
	0x03A7A4FC LDR X0, [X22]
	0x03A7A500 ADD X1, X31, 0xC
	0x03A7A504 STRH W8, [X31 + 0xC]
	0x03A7A508 BL 0x1C16E04
	0x03A7A50C MOV X20, X0
	0x03A7A510 LDRH W8, [X19 + 0x2]
	0x03A7A514 LDR X0, [X22]
	0x03A7A518 ADD X1, X31, 0x8
	0x03A7A51C STRH W8, [X31 + 0x8]
	0x03A7A520 BL 0x1C16E04
	0x03A7A524 LDR X8, [X21]
	0x03A7A528 MOV X2, X0
	0x03A7A52C MOV X1, X20
	0x03A7A530 MOV X3, X31
	0x03A7A534 MOV X0, X8
	0x03A7A538 BL 0x3227BD4
	0x03A7A53C LDP X20, X19, [X31 + 0x20]
	0x03A7A540 LDP X22, X21, [X31 + 0x10]
	0x03A7A544 LDR X30, [X31], #0x30
	0x03A7A548 RET
	0x03A7A54C SUB X31, X31, 0x1F0
	0x03A7A550 STP D15, D14, [X31 + 0x170]
	0x03A7A554 STP D13, D12, [X31 + 0x180]
	0x03A7A558 STP D11, D10, [X31 + 0x190]
	0x03A7A55C STP D9, D8, [X31 + 0x1A0]
	0x03A7A560 STR X29, [X31 + 0x1B0]
	0x03A7A564 STP X30, X23, [X31 + 0x1C0]
	0x03A7A568 STP X22, X21, [X31 + 0x1D0]
	0x03A7A56C STP X20, X19, [X31 + 0x1E0]
	0x03A7A570 ADRP X22, 0x968000
	0x03A7A574 ADRP X21, 0x6DC000
	0x03A7A578 LDRB W8, [X22 + 0x306]
	0x03A7A57C LDR X21, [X21 + 0xFE8]
	0x03A7A580 MOV W19, W1
	0x03A7A584 MOV X20, X0
	0x03A7A588 TBNZ X8, 0x0, 0x3A7A5A0
	0x03A7A58C ADRP X0, 0x6DC000
	0x03A7A590 LDR X0, [X0 + 0xFE8]
	0x03A7A594 BL 0x1C16CF4
	0x03A7A598 MOVZ W8, 0x1
	0x03A7A59C STRB W8, [X22 + 0x306]
	0x03A7A5A0 MOVI V0.2D, 0x0
	0x03A7A5A4 STR W31, [X31 + 0x160]
	0x03A7A5A8 STP V0, V0, [X31 + 0x140]
	0x03A7A5AC STP V0, V0, [X31 + 0x120]
	0x03A7A5B0 STP V0, V0, [X31 + 0x100]
	0x03A7A5B4 STR V0, [X31 + 0xF]
	0x03A7A5B8 LDR W8, [X20 + 0x88]
	0x03A7A5BC LDR X9, [X20 + 0x80]
	0x03A7A5C0 ADD X0, X31, 0xF0
	0x03A7A5C4 MOVZ W2, 0x74
	0x03A7A5C8 SDIV W10, W19, W8
	0x03A7A5CC MSUB W8, W10, W8, W19
	0x03A7A5D0 MOVZ W10, 0x74
	0x03A7A5D4 SMADDL X1, X8, X10, X9
	0x03A7A5D8 BL 0x3EB1B30
	0x03A7A5DC ADD X8, X31, 0xB0
	0x03A7A5E0 ADD X0, X31, 0xF0
	0x03A7A5E4 MOV X1, X31
	0x03A7A5E8 BL 0x3C5BC90
	0x03A7A5EC LDP V0, V1, [X31 + 0xB0]
	0x03A7A5F0 LDP V2, V3, [X31 + 0xD0]
	0x03A7A5F4 ADD X8, X31, 0xB0
	0x03A7A5F8 ADD X0, X31, 0x70
	0x03A7A5FC MOV X1, X31
	0x03A7A600 STP V0, V1, [X31 + 0x70]
	0x03A7A604 STP V2, V3, [X31 + 0x90]
	0x03A7A608 BL 0x3898FFC
	0x03A7A60C LDR V4, [X31 + 0xD0]
	0x03A7A610 LDR V0, [X31 + 0xD4]
	0x03A7A614 LDR W8, [X20 + 0x88]
	0x03A7A618 LDR X2, [X21]
	0x03A7A61C LDP S9, S8, [X31 + 0xE0]
	0x03A7A620 STP S0, S4, [X31 + 0x5C]
	0x03A7A624 LDR V0, [X31 + 0xD8]
	0x03A7A628 LDR V11, [X31 + 0xE8]
	0x03A7A62C SDIV W1, W19, W8
	0x03A7A630 ADD X8, X31, 0xB0
	0x03A7A634 MOV X0, X20
	0x03A7A638 STR S0, [X31 + 0x58]
	0x03A7A63C BL 0x2D1F610
	0x03A7A640 LDR V0, [X31 + 0xB0]
	0x03A7A644 LDP S4, S15, [X31 + 0xB4]
	0x03A7A648 LDP S5, S12, [X31 + 0xC4]
	0x03A7A64C ADD X0, X31, 0xF0
	0x03A7A650 STR S0, [X31 + 0x1BC]
	0x03A7A654 LDR V0, [X31 + 0xC0]
	0x03A7A658 FMUL S1, S8, S12
	0x03A7A65C MOV X1, X31
	0x03A7A660 STP S9, S8, [X31 + 0x40]
	0x03A7A664 STR S0, [X31 + 0x1B8]
	0x03A7A668 LDR V0, [X31 + 0xD0]
	0x03A7A66C STP S0, S11, [X31 + 0x50]
	0x03A7A670 LDP S0, S10, [X31 + 0xD4]
	0x03A7A674 STP S4, S0, [X31 + 0x48]
	0x03A7A678 LDR V0, [X31 + 0xE0]
	0x03A7A67C STP S0, S5, [X31 + 0x68]
	0x03A7A680 LDP S0, S14, [X31 + 0xE4]
	0x03A7A684 STR S0, [X31 + 0x64]
	0x03A7A688 FMUL S0, S9, S15
	0x03A7A68C FADD S0, S0, S1
	0x03A7A690 FMUL S1, S11, S10
	0x03A7A694 FADD S0, S0, S1
	0x03A7A698 FADD S13, S0, S14
	0x03A7A69C FNEG S9, S13
	0x03A7A6A0 BL 0x3C5BCAC
	0x03A7A6A4 ADD X0, X31, 0xF0
	0x03A7A6A8 MOV X1, X31
	0x03A7A6AC MOV V8.16B, V0.16B
	0x03A7A6B0 BL 0x3C5BCAC
	0x03A7A6B4 ADD X0, X31, 0xF0
	0x03A7A6B8 MOV X1, X31
	0x03A7A6BC FSUB S11, S9, S8
	0x03A7A6C0 FSUB S8, S0, S13
	0x03A7A6C4 BL 0x3C5BC7C
	0x03A7A6C8 CBNZ W0, 0x3A7A9F4
	0x03A7A6CC STP S12, S15, [X31 + 0x18]
	0x03A7A6D0 LDP S15, S12, [X31 + 0x40]
	0x03A7A6D4 ADD X0, X31, 0xF0
	0x03A7A6D8 MOV X1, X31
	0x03A7A6DC STR S10, [X31 + 0x20]
	0x03A7A6E0 STP S14, S13, [X31 + 0x28]
	0x03A7A6E4 STP S11, S8, [X31 + 0x30]
	0x03A7A6E8 STR S9, [X31 + 0x38]
	0x03A7A6EC BL 0x3C5BCB4
	0x03A7A6F0 ADRP X8, 0xFFFFFFFFFD070000
	0x03A7A6F4 ADRP X21, 0x967000
	0x03A7A6F8 LDR V1, [X8 + 0x104]
	0x03A7A6FC LDRB W8, [X21 + 0x564]
	0x03A7A700 FMUL S10, S0, S1
	0x03A7A704 FMOV S1, 0.5
	0x03A7A708 CBNZ W8, 0x3A7A724
	0x03A7A70C ADRP X0, 0x679000
	0x03A7A710 LDR X0, [X0 + 0x5A8]
	0x03A7A714 BL 0x1C16CF4
	0x03A7A718 FMOV S1, 0.5
	0x03A7A71C MOVZ W8, 0x1
	0x03A7A720 STRB W8, [X21 + 0x564]
	0x03A7A724 ADRP X21, 0x679000
	0x03A7A728 LDR X21, [X21 + 0x5A8]
	0x03A7A72C LDR V0, [X31 + 0x1BC]
	0x03A7A730 LDR V14, [X31 + 0x48]
	0x03A7A734 FMUL S10, S10, S1
	0x03A7A738 LDR X0, [X21]
	0x03A7A73C FMUL S8, S15, S0
	0x03A7A740 LDR V0, [X31 + 0x1B8]
	0x03A7A744 FMUL S13, S15, S14
	0x03A7A748 LDR W8, [X0 + 0xE0]
	0x03A7A74C FMUL S11, S12, S0
	0x03A7A750 LDR V0, [X31 + 0x6C]
	0x03A7A754 FMUL S9, S12, S0
	0x03A7A758 CBNZ W8, 0x3A7A760
	0x03A7A75C BL 0x1C16DFC
	0x03A7A760 FADD S1, S8, S11
	0x03A7A764 FADD S0, S13, S9
	0x03A7A768 LDP S13, S11, [X31 + 0x50]
	0x03A7A76C LDR V8, [X31 + 0x4C]
	0x03A7A770 STP S0, S1, [X31 + 0x8]
	0x03A7A774 STR S10, [X31 + 0x24]
	0x03A7A778 FMUL S1, S11, S13
	0x03A7A77C FMUL S0, S11, S8
	0x03A7A780 STP S0, S1, [X31]
	0x03A7A784 FCVT S0, S10
	0x03A7A788 STR D0, [X31 + 0x10]
	0x03A7A78C BL 0x3EB1BF0
	0x03A7A790 ADD X0, X31, 0xF0
	0x03A7A794 MOV X1, X31
	0x00000000 INVALID
	0x03A7A79C BL 0x3C5BCAC
	0x03A7A7A0 FMUL S2, S0, S9
	0x03A7A7A4 LDP S1, S0, [X31 + 0x5C]
	0x03A7A7A8 LDR V3, [X31 + 0x58]
	0x03A7A7AC STR S2, [X31 + 0x60]
	0x03A7A7B0 LDP S7, S5, [X31 + 0x18]
	0x03A7A7B4 FMUL S0, S0, S2
	0x03A7A7B8 FMUL S1, S1, S2
	0x03A7A7BC FMUL S2, S3, S2
	0x03A7A7C0 LDR V3, [X31 + 0x1BC]
	0x03A7A7C4 FADD S0, S15, S0
	0x03A7A7C8 FMUL S4, S14, S0
	0x03A7A7CC LDR V6, [X31 + 0x6C]
	0x03A7A7D0 FMUL S3, S3, S0
	0x03A7A7D4 FMUL S0, S5, S0
	0x03A7A7D8 LDR V5, [X31 + 0x1B8]
	0x03A7A7DC FADD S1, S12, S1
	0x03A7A7E0 FMUL S6, S6, S1
	0x03A7A7E4 FADD S2, S11, S2
	0x03A7A7E8 FMUL S5, S5, S1
	0x03A7A7EC FMUL S1, S7, S1
	0x03A7A7F0 LDR V7, [X31 + 0x20]
	0x03A7A7F4 ADD X0, X31, 0xF0
	0x03A7A7F8 MOV X1, X31
	0x03A7A7FC STR S9, [X31 + 0x3C]
	0x03A7A800 FMUL S12, S13, S2
	0x03A7A804 FMUL S14, S8, S2
	0x03A7A808 FMUL S10, S7, S2
	0x03A7A80C FADD S9, S3, S5
	0x03A7A810 FADD S11, S4, S6
	0x03A7A814 FADD S15, S0, S1
	0x03A7A818 ADRP X23, 0xFFFFFFFFFD070000
	0x03A7A81C BL 0x3C5BCAC
	0x03A7A820 ADRP X22, 0x967000
	0x03A7A824 LDRB W8, [X22 + 0x56A]
	0x03A7A828 STR S0, [X31 + 0x1BC]
	0x03A7A82C CBNZ W8, 0x3A7A844
	0x03A7A830 ADRP X0, 0x679000
	0x03A7A834 LDR X0, [X0 + 0x5A8]
	0x03A7A838 BL 0x1C16CF4
	0x03A7A83C MOVZ W8, 0x1
	0x03A7A840 STRB W8, [X22 + 0x56A]
	0x03A7A844 LDR V0, [X31 + 0xC]
	0x03A7A848 LDR V1, [X31 + 0x4]
	0x03A7A84C LDR X0, [X21]
	0x03A7A850 FADD S15, S10, S15
	0x03A7A854 FADD S14, S14, S11
	0x03A7A858 FADD S8, S0, S1
	0x03A7A85C LDR V0, [X23 + 0x180]
	0x03A7A860 LDR V1, [X31]
	0x03A7A864 LDR W8, [X0 + 0xE0]
	0x03A7A868 STR S0, [X31 + 0x1B8]
	0x03A7A86C LDR V0, [X31 + 0x8]
	0x03A7A870 FADD S10, S0, S1
	0x03A7A874 FADD S0, S12, S9
	0x03A7A878 STR S0, [X31 + 0x6C]
	0x03A7A87C CBZ W8, 0x3A7A894
	0x03A7A880 LDR V0, [X31 + 0x10]
	0x03A7A884 BL 0x3EB1C30
	0x03A7A888 MOV V9.16B, V0.16B
	0x03A7A88C LDP S11, S0, [X31 + 0x64]
	0x03A7A890 B 0x3A7A8C8
	0x03A7A894 BL 0x1C16DFC
	0x03A7A898 LDR V0, [X31 + 0x10]
	0x03A7A89C LDRB W23, [X22 + 0x56A]
	0x03A7A8A0 BL 0x3EB1C30
	0x03A7A8A4 LDR V11, [X31 + 0x64]
	0x03A7A8A8 MOV V9.16B, V0.16B
	0x03A7A8AC CBNZ W23, 0x3A7A8C4
	0x03A7A8B0 ADRP X0, 0x679000
	0x03A7A8B4 LDR X0, [X0 + 0x5A8]
	0x03A7A8B8 BL 0x1C16CF4
	0x03A7A8BC MOVZ W8, 0x1
	0x03A7A8C0 STRB W8, [X22 + 0x56A]
	0x03A7A8C4 LDR V0, [X31 + 0x68]
	0x03A7A8C8 LDR V1, [X31 + 0x28]
	0x03A7A8CC LDR X0, [X21]
	0x03A7A8D0 FADD S12, S8, S0
	0x03A7A8D4 FADD S14, S11, S14
	0x03A7A8D8 FADD S13, S1, S15
	0x03A7A8DC LDR V1, [X31 + 0x6C]
	0x03A7A8E0 LDR W8, [X0 + 0xE0]
	0x03A7A8E4 FADD S15, S10, S11
	0x00000000 INVALID
	0x03A7A8EC FADD S8, S0, S1
	0x03A7A8F0 LDR V0, [X31 + 0x24]
	0x03A7A8F4 LDR V1, [X31 + 0x1B8]
	0x03A7A8F8 FSUB S10, S1, S0
	0x03A7A8FC CBNZ W8, 0x3A7A904
	0x03A7A900 BL 0x1C16DFC
	0x03A7A904 FCVT S0, S10
	0x03A7A908 BL 0x3EB1C30
	0x00000000 INVALID
	0x03A7A910 LDR V0, [X31 + 0x3C]
	0x03A7A914 LDR V1, [X31 + 0x1BC]
	0x03A7A918 LDR V3, [X31 + 0x2C]
	0x03A7A91C FSUB S2, S14, S15
	0x03A7A920 ADRP X22, 0x967000
	0x03A7A924 FMUL S0, S1, S0
	0x03A7A928 FSUB S1, S8, S12
	0x03A7A92C FSUB S9, S3, S13
	0x03A7A930 FMUL S8, S0, S11
	0x03A7A934 FMUL S0, S1, S1
	0x03A7A938 FMUL S1, S2, S2
	0x03A7A93C LDRB W8, [X22 + 0x585]
	0x03A7A940 FADD S0, S0, S1
	0x03A7A944 FMUL S1, S9, S9
	0x03A7A948 FADD S0, S1, S0
	0x03A7A94C FDIV S11, S1, S0
	0x03A7A950 FMOV S12, 1
	0x03A7A954 CBNZ W8, 0x3A7A96C
	0x03A7A958 ADRP X0, 0x679000
	0x03A7A95C LDR X0, [X0 + 0x5A8]
	0x03A7A960 BL 0x1C16CF4
	0x03A7A964 MOVZ W8, 0x1
	0x03A7A968 STRB W8, [X22 + 0x585]
	0x03A7A96C LDR X0, [X21]
	0x03A7A970 FDIV S8, S8, S10
	0x03A7A974 FSUB S10, S12, S11
	0x03A7A978 LDR W8, [X0 + 0xE0]
	0x03A7A97C CBNZ W8, 0x3A7A984
	0x03A7A980 BL 0x1C16DFC
	0x03A7A984 LDR V1, [X31 + 0x3C]
	0x03A7A988 LDR V3, [X31 + 0x60]
	0x03A7A98C LDR V11, [X31 + 0x30]
	0x03A7A990 FSQRT S0, S10
	0x03A7A994 FNEG S2, S9
	0x03A7A998 FMUL S1, S3, S1
	0x03A7A99C LDR V3, [X31 + 0x38]
	0x03A7A9A0 FCMP S1, S2
	0x03A7A9A4 FMUL S0, S8, S0
	0x03A7A9A8 B.LE 0x3A7A9CC
	0x03A7A9AC FNEG S2, S13
	0x03A7A9B0 FSUB S2, S2, S0
	0x03A7A9B4 FMOV W8, S2
	0x03A7A9B8 AND W8, W8, 0x7FFFFFFF
	0x03A7A9BC MOVZ W9, 0x7F800000
	0x03A7A9C0 CMP W8, W9
	0x03A7A9C4 FCCMP S2, S3, 0x0, LS
	0x03A7A9C8 FCSEL S11, S3, S2, GT
	0x03A7A9CC LDR V8, [X31 + 0x34]
	0x03A7A9D0 FCMP S9, S1
	0x03A7A9D4 B.PL 0x3A7A9F4
	0x03A7A9D8 FSUB S0, S0, S13
	0x03A7A9DC FMOV W8, S0
	0x03A7A9E0 AND W8, W8, 0x7FFFFFFF
	0x03A7A9E4 MOVZ W9, 0x7F800000
	0x03A7A9E8 CMP W8, W9
	0x03A7A9EC FCCMP S0, S3, 0x8, LS
	0x03A7A9F0 FCSEL S8, S3, S0, MI
	0x03A7A9F4 LDR X8, [X20 + 0x90]
	0x03A7A9F8 FMOV S0, W31
	0x03A7A9FC FMAXNM S1, S11, S0
	0x03A7AA00 FMAXNM S0, S8, S0
	0x03A7AA04 ADD X8, X8, W19, 0x3, SXTW
	0x03A7AA08 LDP X20, X19, [X31 + 0x1E0]
	0x03A7AA0C LDP X22, X21, [X31 + 0x1D0]
	0x03A7AA10 LDP X30, X23, [X31 + 0x1C0]
	0x03A7AA14 LDR X29, [X31 + 0x1B0]
	0x03A7AA18 LDP D9, D8, [X31 + 0x1A0]
	0x03A7AA1C LDP D11, D10, [X31 + 0x190]
	0x03A7AA20 LDP D13, D12, [X31 + 0x180]
	0x03A7AA24 LDP D15, D14, [X31 + 0x170]
	0x03A7AA28 STP S1, S0, [X8]
	0x03A7AA2C ADD X31, X31, 0x1F0
	0x03A7AA30 RET
	0x03A7AA34 SUB X31, X31, 0x140

ISIL:
	001 Subtract X31, X31, 256
	002 Move [X31+144], D8
	003 Move [X31+160], X29
	004 Move [X31+168], X30
	005 Move [X31+176], X28
	006 Move [X31+184], X27
	007 Move [X31+192], X26
	008 Move [X31+200], X25
	009 Move [X31+208], X24
	010 Move [X31+216], X23
	011 Move [X31+224], X22
	012 Move [X31+232], X21
	013 Move [X31+240], X20
	014 Move [X31+248], X19
	015 Move X22, 0x969000
	016 Move W8, [X22+763]
	017 Move X27, X5
	018 Move X24, X4
	019 Move X26, X3
	020 Move X23, X2
	021 Move X19, X1
	022 Move X21, X0
	023 Move [X31], X6
	024 Move TEMP, X8
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {66}
	028 Move X0, 0x6DB000
	029 Move X0, [X0+168]
	030 Call 0x1C17CF4
	031 Move X0, 0x6D7000
	032 Move X0, [X0+1432]
	033 Call 0x1C17CF4
	034 Move X0, 0x6DD000
	035 Move X0, [X0+3952]
	036 Call 0x1C17CF4
	037 Move X0, 0x6DD000
	038 Move X0, [X0+3960]
	039 Call 0x1C17CF4
	040 Move X0, 0x6DD000
	041 Move X0, [X0+3968]
	042 Call 0x1C17CF4
	043 Move X0, 0x6DD000
	044 Move X0, [X0+1544]
	045 Call 0x1C17CF4
	046 Move X0, 0x6DD000
	047 Move X0, [X0+3976]
	048 Call 0x1C17CF4
	049 Move X0, 0x6DD000
	050 Move X0, [X0+3984]
	051 Call 0x1C17CF4
	052 Move X0, 0x6DD000
	053 Move X0, [X0+3992]
	054 Call 0x1C17CF4
	055 Move X0, 0x6DD000
	056 Move X0, [X0+4000]
	057 Call 0x1C17CF4
	058 Move X0, 0x6DD000
	059 Move X0, [X0+4008]
	060 Call 0x1C17CF4
	061 Move X0, 0x6DD000
	062 Move X0, [X0+4016]
	063 Call 0x1C17CF4
	064 Move W8, 1
	065 Move [X22+763], W8
	066 NotImplemented "Instruction MOVI not yet implemented."
	067 Move [X31+88], X31
	068 Move [X31+96], V0
	069 Move [X31+104], V0
	070 Move [X31+48], V0
	071 Move [X31+56], V0
	072 Move [X31+40], X31
	073 Move X9, [X23+376]
	074 Compare X9, 0
	075 JumpIfEqual {392}
	076 Move X8, [X23+480]
	077 Compare X8, 0
	078 JumpIfEqual {392}
	079 Move W25, [X9+36]
	080 Move W9, 92
	081 Move W10, 88
	082 Move X0, X31
	083 NotImplemented "Instruction CMP not yet implemented."
	084 NotImplemented "Instruction CSEL not yet implemented."
	085 Move W29, [X8]
	086 Call Time.get_frameCount
	087 Move W8, [X23+512]
	088 Move W22, W0
	089 Move S8, 1
	090 Compare W8, 0
	091 JumpIfNotEqual {93}
	092 Move V8, [X23+492]
	093 Move X8, [X23+480]
	094 Compare X8, 0
	095 JumpIfEqual {392}
	096 NotImplemented "Instruction CMP not yet implemented."
	097 Move W9, 80
	098 Move W10, 72
	099 NotImplemented "Instruction CSEL not yet implemented."
	100 Compare X21, 0
	101 JumpIfEqual {392}
	102 Move X25, [X8]
	103 Move X0, X21
	104 Move X2, X31
	105 Move X1, X25
	106 Call RenderGraph.ImportTexture, X0, X1
	107 NotImplemented "Instruction CMP not yet implemented."
	108 Move [X31+152], X0
	109 Move X8, [X21+64]
	110 Compare X8, 0
	111 JumpIfEqual {392}
	112 Add X27, X8, 48
	113 Move X8, 0x6DB000
	114 Move X8, [X8+168]
	115 Move X28, 0x6DD000
	116 Move X20, 0x6DD000
	117 Move X28, [X28+4016]
	118 Move X20, [X20+3968]
	119 Move X9, [X27]
	120 Move X1, [X8]
	121 Move W0, 21
	122 Move [X31+136], X9
	123 Call 0x2236BC0, X0
	124 Move X1, [X28]
	125 Move X4, [X20]
	126 Move X3, X0
	127 Add X8, X31, 8
	128 Add X2, X31, 88
	129 Move X0, X21
	130 Call 0x2241F24, X0, X1, X2, X3
	131 NotImplemented "Instruction LDUR not yet implemented."
	132 NotImplemented "Instruction LDUR not yet implemented."
	133 Move X27, [X31+88]
	134 Move [X31+96], V0
	135 Move [X31+104], V1
	136 Move X1, [X31]
	137 Add X0, X31, 96
	138 Move W2, W31
	139 Move X3, X31
	140 Call RenderGraphBuilder.UseColorBuffer, X0, X1, X2
	141 Compare X27, 0
	142 JumpIfEqual {393}
	143 Move [X27+16], X0
	144 Move X27, [X31+88]
	145 Add X0, X31, 96
	146 Move X1, X26
	147 Move X2, X31
	148 Call RenderGraphBuilder.ReadTexture, X0, X1
	149 Compare X27, 0
	150 JumpIfEqual {394}
	151 Move [X27+24], X0
	152 Move X26, [X31+88]
	153 Add X0, X31, 96
	154 Move X1, X24
	155 Move X2, X31
	156 Call RenderGraphBuilder.ReadTexture, X0, X1
	157 Compare X26, 0
	158 JumpIfEqual {395}
	159 Move [X26+32], X0
	160 Move X24, [X31+88]
	161 Add X0, X31, 96
	162 Add X1, X31, 136
	163 Move X2, X31
	164 Call RenderGraphBuilder.ReadTexture, X0, X1
	165 Compare X24, 0
	166 JumpIfEqual {396}
	167 Move [X24+40], X0
	168 Move X24, [X31+88]
	169 Add X0, X31, 96
	170 Add X1, X31, 152
	171 Move X2, X31
	172 Call RenderGraphBuilder.ReadTexture, X0, X1
	173 Compare X24, 0
	174 JumpIfEqual {397}
	175 Move [X24+48], X0
	176 Move X24, [X31+88]
	177 Compare X24, 0
	178 JumpIfEqual {398}
	179 Move [X24+56], X19
	180 Move W8, [X23+488]
	181 Move [X24+68], S8
	182 Move [X24+64], W8
	183 Move V0, [X23+504]
	184 NotImplemented "Instruction CMP not yet implemented."
	185 Move [X24+72], S0
	186 Move X8, 0x6DD000
	187 Move X8, [X8+1544]
	188 Move V8, [X23+496]
	189 Move X0, [X8]
	190 Move W8, [X0+224]
	191 Compare W8, 0
	192 JumpIfNotEqual {194}
	193 Call 0x1C17DFC
	194 Move V0, V8
	195 Call TemporalAA.CalculateFilterWeights, V0
	196 Move X0, X31
	197 Move [X24+80], X0
	198 Compare X25, 0
	199 JumpIfEqual {399}
	200 Move X0, [X25+24]
	201 Compare X0, 0
	202 JumpIfEqual {400}
	203 Move X1, X31
	204 Call RenderTexture.get_graphicsFormat, X0
	205 NotImplemented "Instruction CMP not yet implemented."
	206 NotImplemented "Instruction CMP not yet implemented."
	207 NotImplemented "Instruction CMP not yet implemented."
	208 Move X8, [X31+88]
	209 Compare X8, 0
	210 JumpIfEqual {401}
	211 Move W9, 1
	212 Move X8, [X31+88]
	213 Compare X8, 0
	214 JumpIfEqual {405}
	215 Move W9, W31
	216 Move [X8+88], W9
	217 Move X8, 0x6DD000
	218 Move X8, [X8+3992]
	219 Move X8, [X8]
	220 Move W9, [X8+224]
	221 Compare W9, 0
	222 JumpIfNotEqual {228}
	223 Move X0, X8
	224 Call 0x1C17DFC
	225 Move X8, 0x6DD000
	226 Move X8, [X8+3992]
	227 Move X8, [X8]
	228 Move X9, [X8+184]
	229 Move X23, [X9+8]
	230 Compare X23, 0
	231 JumpIfNotEqual {258}
	232 Move W9, [X8+224]
	233 Compare W9, 0
	234 JumpIfNotEqual {240}
	235 Move X0, X8
	236 Call 0x1C17DFC
	237 Move X8, 0x6DD000
	238 Move X8, [X8+3992]
	239 Move X8, [X8]
	240 Move X9, 0x6DD000
	241 Move X8, [X8+184]
	242 Move X9, [X9+3952]
	243 Move X24, [X8]
	244 Move X0, [X9]
	245 Call 0x1C17F10
	246 Move X8, 0x6DD000
	247 Move X8, [X8+3976]
	248 Move X23, X0
	249 Move X2, [X8]
	250 Move X1, X24
	251 Move X3, X31
	252 Call 0x25C88AC, X0, X1, X2
	253 Move X8, 0x6DD000
	254 Move X8, [X8+3992]
	255 Move X8, [X8]
	256 Move X8, [X8+184]
	257 Move [X8+8], X23
	258 Move X8, 0x6DD000
	259 Move X8, [X8+3960]
	260 Move X2, [X8]
	261 Add X0, X31, 96
	262 Move X1, X23
	263 Call 0x224207C, X0, X1
	264 Add X0, X31, 96
	265 Move X1, X31
	266 Call RenderGraphBuilder.Dispose, X0
	267 NotImplemented "Instruction CMP not yet implemented."
	268 Compare X19, 0
	269 JumpIfEqual {392}
	270 Move X0, X19
	271 Move X1, X31
	272 Call Material.get_shader, X0
	273 Compare X0, 0
	274 JumpIfEqual {392}
	275 Move X1, X31
	276 Call Shader.get_passCount, X0
	277 Move X8, 0x6D7000
	278 Move X8, [X8+1432]
	279 Move W22, W0
	280 Move X8, [X8]
	281 Move X0, X8
	282 Call 0x1C17F10
	283 Move X8, 0x6DD000
	284 Move X8, [X8+4000]
	285 Move X2, X31
	286 Move X23, X0
	287 Move X1, [X8]
	288 Call ProfilingSampler..ctor, X0, X1
	289 Move X8, 0x6DD000
	290 Move X8, [X8+4008]
	291 Add X2, X31, 40
	292 Move X0, X21
	293 Move X3, X23
	294 Move X1, [X8]
	295 Move X8, 0x6DD000
	296 Move X8, [X8+3968]
	297 Move X4, [X8]
	298 Add X8, X31, 8
	299 Call 0x2241F24, X0, X1, X2, X3
	300 NotImplemented "Instruction LDUR not yet implemented."
	301 NotImplemented "Instruction LDUR not yet implemented."
	302 Move X21, [X31+40]
	303 Move [X31+48], V0
	304 Move [X31+56], V1
	305 Add X0, X31, 48
	306 Add X1, X31, 152
	307 Move W2, W31
	308 Move X3, X31
	309 Call RenderGraphBuilder.UseColorBuffer, X0, X1, X2
	310 Compare X21, 0
	311 JumpIfEqual {402}
	312 Move [X21+16], X0
	313 Move X21, [X31+40]
	314 Move X1, [X31]
	315 Add X0, X31, 48
	316 Move X2, X31
	317 Call RenderGraphBuilder.ReadTexture, X0, X1
	318 Compare X21, 0
	319 JumpIfEqual {403}
	320 Move [X21+24], X0
	321 Move X8, [X31+40]
	322 Compare X8, 0
	323 JumpIfEqual {404}
	324 Subtract W9, W22, 1
	325 Move [X8+56], X19
	326 Move [X8+64], W9
	327 Move X8, 0x6DD000
	328 Move X8, [X8+3992]
	329 Move X8, [X8]
	330 Move W9, [X8+224]
	331 Compare W9, 0
	332 JumpIfNotEqual {338}
	333 Move X0, X8
	334 Call 0x1C17DFC
	335 Move X8, 0x6DD000
	336 Move X8, [X8+3992]
	337 Move X8, [X8]
	338 Move X9, [X8+184]
	339 Move X19, [X9+16]
	340 Compare X19, 0
	341 JumpIfNotEqual {368}
	342 Move W9, [X8+224]
	343 Compare W9, 0
	344 JumpIfNotEqual {350}
	345 Move X0, X8
	346 Call 0x1C17DFC
	347 Move X8, 0x6DD000
	348 Move X8, [X8+3992]
	349 Move X8, [X8]
	350 Move X9, 0x6DD000
	351 Move X8, [X8+184]
	352 Move X9, [X9+3952]
	353 Move X20, [X8]
	354 Move X0, [X9]
	355 Call 0x1C17F10
	356 Move X8, 0x6DD000
	357 Move X8, [X8+3984]
	358 Move X19, X0
	359 Move X2, [X8]
	360 Move X1, X20
	361 Move X3, X31
	362 Call 0x25C88AC, X0, X1, X2
	363 Move X8, 0x6DD000
	364 Move X8, [X8+3992]
	365 Move X8, [X8]
	366 Move X8, [X8+184]
	367 Move [X8+16], X19
	368 Move X8, 0x6DD000
	369 Move X8, [X8+3960]
	370 Move X2, [X8]
	371 Add X0, X31, 48
	372 Move X1, X19
	373 Call 0x224207C, X0, X1
	374 Add X0, X31, 48
	375 Move X1, X31
	376 Call RenderGraphBuilder.Dispose, X0
	377 Move X20, [X31+240]
	378 Move X19, [X31+248]
	379 Move X22, [X31+224]
	380 Move X21, [X31+232]
	381 Move X24, [X31+208]
	382 Move X23, [X31+216]
	383 Move X26, [X31+192]
	384 Move X25, [X31+200]
	385 Move X28, [X31+176]
	386 Move X27, [X31+184]
	387 Move X29, [X31+160]
	388 Move X30, [X31+168]
	389 Move V8, [X31+144]
	390 Add X31, X31, 256
	391 Return 
	392 Call 0x1C17F20
	393 Call 0x1C17F20
	394 Call 0x1C17F20
	395 Call 0x1C17F20
	396 Call 0x1C17F20
	397 Call 0x1C17F20
	398 Call 0x1C17F20
	399 Call 0x1C17F20
	400 Call 0x1C17F20
	401 Call 0x1C17F20
	402 Call 0x1C17F20
	403 Call 0x1C17F20
	404 Call 0x1C17F20
	405 Call 0x1C17F20
	406 Move X23, X0
	407 NotImplemented "Instruction CMP not yet implemented."
	408 Move X0, X23
	409 Call 0x3EB2AD0
	410 Move X19, [X0]
	411 Call 0x3EB2AE0
	412 Add X0, X31, 48
	413 Move X1, X31
	414 Call RenderGraphBuilder.Dispose, X0
	415 Compare X19, 0
	416 JumpIfEqual {377}
	417 Move X0, X19
	418 Call 0x1C17F18
	419 Move X19, X31
	420 Move X23, X0
	421 Add X0, X31, 48
	422 Move X1, X31
	423 Call RenderGraphBuilder.Dispose, X0
	424 Compare X19, 0
	425 JumpIfEqual {448}
	426 Move X0, X19
	427 Call 0x1C17F18
	428 Move X23, X0
	429 NotImplemented "Instruction CMP not yet implemented."
	430 Move X0, X23
	431 Call 0x3EB2AD0
	432 Move X24, [X0]
	433 Call 0x3EB2AE0
	434 Add X0, X31, 96
	435 Move X1, X31
	436 Call RenderGraphBuilder.Dispose, X0
	437 Compare X24, 0
	438 JumpIfEqual {267}
	439 Move X0, X24
	440 Call 0x1C17F18
	441 Move X24, X31
	442 Move X23, X0
	443 Add X0, X31, 96
	444 Move X1, X31
	445 Call RenderGraphBuilder.Dispose, X0
	446 Compare X24, 0
	447 JumpIfNotEqual {450}
	448 Move X0, X23
	449 Call 0x1D2D690
	450 Move X0, X24
	451 Call 0x1C17F18
	452 Call 0x1991590

Method: System.Void .cctor()

Disassembly:
	0x03A7AA38 STR D14, [X31 + 0xD0]
	0x03A7AA3C STP D13, D12, [X31 + 0xD8]
	0x03A7AA40 STP D11, D10, [X31 + 0xE8]
	0x03A7AA44 STP D9, D8, [X31 + 0xF8]
	0x03A7AA48 STR X29, [X31 + 0x108]
	0x03A7AA4C STP X30, X23, [X31 + 0x110]
	0x03A7AA50 STP X22, X21, [X31 + 0x120]
	0x03A7AA54 STP X20, X19, [X31 + 0x130]
	0x03A7AA58 ADRP X21, 0x968000
	0x03A7AA5C ADRP X22, 0x6DC000
	0x03A7AA60 LDRB W8, [X21 + 0x307]
	0x03A7AA64 LDR X22, [X22 + 0xFE8]
	0x03A7AA68 MOV W19, W1
	0x03A7AA6C MOV X20, X0
	0x03A7AA70 TBNZ X8, 0x0, 0x3A7AA88
	0x03A7AA74 ADRP X0, 0x6DC000
	0x03A7AA78 LDR X0, [X0 + 0xFE8]
	0x03A7AA7C BL 0x1C16CF4
	0x03A7AA80 MOVZ W8, 0x1
	0x03A7AA84 STRB W8, [X21 + 0x307]
	0x03A7AA88 ADD X0, X31, 0x48
	0x03A7AA8C MOVZ W2, 0x88
	0x03A7AA90 MOV W1, W31
	0x03A7AA94 MOVZ W23, 0x88
	0x03A7AA98 BL 0x3EB1B10
	0x03A7AA9C LDR W8, [X20 + 0x88]
	0x03A7AAA0 LDR X9, [X20 + 0x80]
	0x03A7AAA4 ADD X0, X31, 0x48
	0x03A7AAA8 MOVZ W2, 0x88
	0x03A7AAAC SDIV W21, W19, W8
	0x03A7AAB0 MSUB W8, W21, W8, W19
	0x03A7AAB4 SMADDL X1, X8, X23, X9
	0x03A7AAB8 BL 0x3EB1B30
	0x03A7AABC LDR X2, [X22]
	0x03A7AAC0 ADD X8, X31, 0x8
	0x03A7AAC4 MOV X0, X20
	0x03A7AAC8 MOV W1, W21
	0x03A7AACC BL 0x2D1F610
	0x03A7AAD0 LDR V11, [X31 + 0x10]
	0x03A7AAD4 LDR V12, [X31 + 0x20]
	0x03A7AAD8 LDR V13, [X31 + 0x30]
	0x03A7AADC LDR V14, [X31 + 0x40]
	0x03A7AAE0 ADD X8, X31, 0x8
	0x03A7AAE4 ADD X0, X31, 0x48
	0x03A7AAE8 MOV X1, X31
	0x03A7AAEC BL 0x3C5C12C
	0x03A7AAF0 LDP S0, S1, [X31 + 0x8]
	0x03A7AAF4 LDR V2, [X31 + 0x10]
	0x03A7AAF8 MOV X0, X31
	0x03A7AAFC BL 0x3887BE4
	0x03A7AB00 ADD X8, X31, 0x8
	0x03A7AB04 ADD X0, X31, 0x48
	0x03A7AB08 MOV X1, X31
	0x03A7AB0C MOV V8.16B, V0.16B
	0x03A7AB10 MOV V9.16B, V1.16B
	0x03A7AB14 MOV V10.16B, V2.16B
	0x03A7AB18 BL 0x3C5C12C
	0x03A7AB1C LDP S0, S1, [X31 + 0x14]
	0x03A7AB20 LDR V2, [X31 + 0x1C]
	0x03A7AB24 MOV X0, X31
	0x03A7AB28 BL 0x3887BE4
	0x03A7AB2C MOVN W10, 0x800000
	0x03A7AB30 MOVN W11, 0x80800000
	0x03A7AB34 MOV W8, W31
	0x03A7AB38 MOV W9, W31
	0x03A7AB3C FMOV S3, W10
	0x03A7AB40 FMOV S4, W11
	0x03A7AB44 MOVZ W10, 0x7F800000
	0x03A7AB48 AND W11, W8, 0x2
	0x03A7AB4C AND W12, W9, 0x2
	0x03A7AB50 UBFM W13, W9, 0x1, 0x1F
	0x03A7AB54 SUB W11, W11, 0x1
	0x03A7AB58 SUB W12, W12, 0x1
	0x03A7AB5C AND W13, W13, 0x2
	0x03A7AB60 SUB W13, W13, 0x1
	0x03A7AB64 SCVTF S5, W11
	0x03A7AB68 SCVTF S6, W12
	0x03A7AB6C SCVTF S7, W13
	0x03A7AB70 FMUL S5, S0, S5
	0x03A7AB74 FMUL S6, S1, S6
	0x03A7AB78 FMUL S7, S2, S7
	0x03A7AB7C FADD S5, S8, S5
	0x03A7AB80 FADD S6, S9, S6
	0x03A7AB84 FADD S7, S10, S7
	0x03A7AB88 FMUL S5, S11, S5
	0x03A7AB8C FMUL S6, S12, S6

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x969000
	005 Move X20, 0x6D4000
	006 Move W8, [X19+764]
	007 Move X20, [X20+2696]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {23}
	012 Move X0, 0x67A000
	013 Move X0, [X0+1592]
	014 Call 0x1C17CF4
	015 Move X0, 0x6DD000
	016 Move X0, [X0+1544]
	017 Call 0x1C17CF4
	018 Move X0, 0x6D4000
	019 Move X0, [X0+2696]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X19+764], W8
	023 Move X0, [X20]
	024 Move W1, 9
	025 Call 0x1C17D6C
	026 Compare X0, 0
	027 JumpIfEqual {86}
	028 Move W8, [X0+24]
	029 Compare W8, 0
	030 JumpIfEqual {85}
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Move [X0+32], X31
	033 Move X9, -49852416
	034 Move V0, [X9]
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Move [X0+40], D0
	037 Move X9, -49856512
	038 Move V0, [X9+1608]
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Move [X0+48], D0
	041 Move X9, -49852416
	042 Move V0, [X9+888]
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Move [X0+56], D0
	045 Move X9, -49852416
	046 Move V0, [X9+632]
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Move [X0+64], D0
	049 Move X9, -49856512
	050 Move V0, [X9+2880]
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Move [X0+72], D0
	053 Move X9, -49856512
	054 Move V0, [X9+2352]
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Move [X0+80], D0
	057 Move V0, 0
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Move [X0+88], D0
	060 Move X19, 0x6DD000
	061 Move X19, [X19+1544]
	062 Move V0, 0
	063 Move [X0+96], D0
	064 Move X8, [X19]
	065 Move X8, [X8+184]
	066 Move [X8], X0
	067 Move X8, [X19]
	068 Move X8, [X8+184]
	069 Move X8, [X8]
	070 Compare X8, 0
	071 JumpIfEqual {86}
	072 Move X9, 0x67A000
	073 Move X9, [X9+1592]
	074 Move W8, [X8+24]
	075 Move X0, [X9]
	076 Add W1, W8, 1
	077 Call 0x1C17D6C
	078 Move X8, [X19]
	079 Move X20, [X31+16]
	080 Move X19, [X31+24]
	081 Move X8, [X8+184]
	082 Move [X8+8], X0
	083 Move X30, [X31+32]
	084 Return 
	085 Call 0x1C17F28
	086 Call 0x1C17F20

