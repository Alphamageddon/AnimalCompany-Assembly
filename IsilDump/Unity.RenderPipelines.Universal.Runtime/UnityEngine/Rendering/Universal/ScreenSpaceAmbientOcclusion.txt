Type: UnityEngine.Rendering.Universal.ScreenSpaceAmbientOcclusion

Method: UnityEngine.Rendering.Universal.ScreenSpaceAmbientOcclusionSettings get_settings()

Disassembly:
	0x03A6CB88 LDR X0, [X29]
	0x03A6CB8C LDR X21, [X19 + 0xF8]

ISIL:
	001 Add X0, X0, 32
	002 Return X0

Method: System.Void Create()

Disassembly:
	0x03A6CB90 LDR W8, [X0 + 0xE0]
	0x03A6CB94 CBNZ W8, 0x3A6CB9C
	0x03A6CB98 BL 0x1C16DFC
	0x03A6CB9C LDR X1, [X24]
	0x03A6CBA0 MOVZ W2, 0x1
	0x03A6CBA4 MOV X0, X21
	0x03A6CBA8 MOV X3, X31
	0x03A6CBAC BL 0x39E9638
	0x03A6CBB0 LDR X0, [X23]
	0x03A6CBB4 LDR X21, [X19 + 0xF8]
	0x03A6CBB8 LDR W8, [X0 + 0xE0]
	0x03A6CBBC CBNZ W8, 0x3A6CBC8
	0x03A6CBC0 BL 0x1C16DFC
	0x03A6CBC4 LDR X0, [X23]
	0x03A6CBC8 LDR X8, [X19 + 0x188]
	0x03A6CBCC CBZ X8, 0x3A6D148
	0x03A6CBD0 CBZ X21, 0x3A6D148
	0x03A6CBD4 LDR X9, [X0 + 0xB8]
	0x03A6CBD8 LDR V3, [X8 + 0x34]
	0x03A6CBDC LDR V1, [X8 + 0x28]
	0x03A6CBE0 LDR V0, [X8 + 0x20]
	0x03A6CBE4 LDR W1, [X9 + 0x4]
	0x03A6CBE8 SCVTF S2, W25
	0x03A6CBEC FMOV S4, 1
	0x03A6CBF0 FDIV S2, S4, S2
	0x03A6CBF4 MOV X0, X21
	0x03A6CBF8 MOV X2, X31
	0x03A6CBFC BL 0x3C15D80
	0x03A6CC00 LDR X0, [X29]
	0x03A6CC04 LDR X21, [X19 + 0xF8]
	0x03A6CC08 LDR W8, [X0 + 0xE0]
	0x03A6CC0C CBNZ W8, 0x3A6CC14
	0x03A6CC10 BL 0x1C16DFC
	0x03A6CC14 ADRP X8, 0x6EA000
	0x03A6CC18 LDR X8, [X8 + 0xB58]
	0x03A6CC1C MOV X0, X21
	0x03A6CC20 MOV W2, W31
	0x03A6CC24 MOV X3, X31
	0x03A6CC28 LDR X1, [X8]
	0x03A6CC2C BL 0x39E9638
	0x03A6CC30 ADRP X8, 0x6EA000
	0x03A6CC34 LDR X0, [X19 + 0xF8]
	0x03A6CC38 LDR X8, [X8 + 0xB48]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x977000
	005 Move W8, [X20+639]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x6EA000
	012 Move X0, [X0+3856]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+639], W8
	016 Move X8, [X19+64]
	017 Compare X8, 0
	018 JumpIfNotEqual {26}
	019 Move X8, 0x6EA000
	020 Move X8, [X8+3856]
	021 Move X0, [X8]
	022 Call 0x1C17F10
	023 Move X20, X0
	024 Call ScreenSpaceAmbientOcclusionPass..ctor, X0
	025 Move [X19+64], X20
	026 Move X8, [X19+32]
	027 Compare X8, 0
	028 JumpIfEqual {47}
	029 Move W9, [X8+56]
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move W10, 1
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move [X8+16], W10
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Move W9, 2
	036 Move [X8+44], W31
	037 Move W9, 1
	038 Move [X8+44], W9
	039 Move TEMP, 0
	040 Not TEMP
	041 Move W9, TEMP
	042 Move [X8+56], W9
	043 Move X20, [X31+16]
	044 Move X19, [X31+24]
	045 Move X30, [X31+32]
	046 Return 
	047 Call 0x1C17F20

Method: System.Void AddRenderPasses(UnityEngine.Rendering.Universal.ScriptableRenderer renderer, ref UnityEngine.Rendering.Universal.RenderingData renderingData)

Disassembly:
	0x03A6CDD4 CMP W8, 0x2
	0x03A6CDD8 B.EQ 0x3A6CE24
	0x03A6CDDC CMP W8, 0x1
	0x03A6CDE0 B.EQ 0x3A6CE68
	0x03A6CDE4 CBNZ W8, 0x3A6D150
	0x03A6CDE8 LDR X0, [X29]
	0x03A6CDEC LDR X20, [X19 + 0xF8]
	0x03A6CDF0 LDR W8, [X0 + 0xE0]
	0x03A6CDF4 CBNZ W8, 0x3A6CDFC
	0x03A6CDF8 BL 0x1C16DFC
	0x03A6CDFC ADRP X8, 0x6EA000
	0x03A6CE00 LDR X8, [X8 + 0xB78]
	0x03A6CE04 MOVZ W2, 0x1
	0x03A6CE08 MOV X0, X20
	0x03A6CE0C MOV X3, X31
	0x03A6CE10 LDR X1, [X8]
	0x03A6CE14 BL 0x39E9638
	0x03A6CE18 MOV W2, W31
	0x03A6CE1C MOV W20, W31
	0x03A6CE20 B 0x3A6CE5C
	0x03A6CE24 LDR X0, [X29]
	0x03A6CE28 LDR X20, [X19 + 0xF8]
	0x03A6CE2C LDR W8, [X0 + 0xE0]
	0x03A6CE30 CBNZ W8, 0x3A6CE38
	0x03A6CE34 BL 0x1C16DFC
	0x03A6CE38 ADRP X8, 0x6EA000
	0x03A6CE3C LDR X8, [X8 + 0xB78]
	0x03A6CE40 MOV X0, X20
	0x03A6CE44 MOV W2, W31
	0x03A6CE48 MOV X3, X31
	0x03A6CE4C LDR X1, [X8]
	0x03A6CE50 BL 0x39E9638
	0x03A6CE54 MOV W2, W31
	0x03A6CE58 MOVZ W20, 0x1
	0x03A6CE5C ADRP X21, 0x6EA000
	0x03A6CE60 LDR X21, [X21 + 0xB40]
	0x03A6CE64 B 0x3A6CEA8
	0x03A6CE68 LDR X0, [X29]
	0x03A6CE6C LDR X20, [X19 + 0xF8]
	0x03A6CE70 LDR W8, [X0 + 0xE0]
	0x03A6CE74 CBNZ W8, 0x3A6CE7C
	0x03A6CE78 BL 0x1C16DFC
	0x03A6CE7C ADRP X8, 0x6EA000
	0x03A6CE80 LDR X8, [X8 + 0xB78]
	0x03A6CE84 MOV X0, X20
	0x03A6CE88 MOV W2, W31
	0x03A6CE8C MOV X3, X31
	0x03A6CE90 LDR X1, [X8]
	0x03A6CE94 BL 0x39E9638
	0x03A6CE98 ADRP X21, 0x6EA000
	0x03A6CE9C LDR X21, [X21 + 0xB40]
	0x03A6CEA0 MOV W20, W31
	0x03A6CEA4 MOVZ W2, 0x1
	0x03A6CEA8 ADRP X8, 0x6EA000
	0x03A6CEAC LDR X8, [X8 + 0xB38]
	0x03A6CEB0 ADRP X22, 0x6E8000
	0x03A6CEB4 LDR X22, [X22 + 0x10]
	0x03A6CEB8 LDR X0, [X19 + 0xF8]
	0x03A6CEBC LDR X1, [X8]
	0x03A6CEC0 MOV X3, X31
	0x03A6CEC4 BL 0x39E9638
	0x03A6CEC8 LDR X0, [X19 + 0xF8]
	0x03A6CECC LDR X1, [X21]
	0x03A6CED0 MOV W2, W20
	0x03A6CED4 MOV X3, X31
	0x03A6CED8 BL 0x39E9638
	0x03A6CEDC LDP V0, V1, [X31 + 0x350]
	0x03A6CEE0 LDR V2, [X31 + 0x37]
	0x03A6CEE4 LDR W8, [X31 + 0x380]
	0x03A6CEE8 MOVZ W9, 0x1
	0x03A6CEEC ADD X0, X31, 0x310
	0x03A6CEF0 MOV W1, W31
	0x03A6CEF4 MOV X2, X31
	0x03A6CEF8 STP V0, V1, [X31 + 0x310]
	0x03A6CEFC STR V2, [X31 + 0x33]
	0x03A6CF00 STR W8, [X31 + 0x340]
	0x03A6CF04 STR W9, [X31 + 0x318]
	0x03A6CF08 BL 0x3C22520
	0x03A6CF0C LDP V0, V1, [X31 + 0x310]
	0x03A6CF10 LDR W8, [X31 + 0x340]
	0x03A6CF14 LDR V2, [X31 + 0x33]
	0x03A6CF18 ADD X20, X19, 0x150
	0x03A6CF1C STP V0, V1, [X19 + 0x150]
	0x03A6CF20 STR W8, [X19 + 0x180]
	0x03A6CF24 LDR W8, [X19 + 0x150]
	0x03A6CF28 STR V2, [X19 + 0x17]
	0x03A6CF2C SDIV W8, W8, W25
	0x03A6CF30 STR W8, [X19 + 0x150]
	0x03A6CF34 LDR W8, [X20 + 0x4]
	0x03A6CF38 SDIV W8, W8, W25
	0x03A6CF3C STR W8, [X20 + 0x4]
	0x03A6CF40 LDRB W8, [X19 + 0xE8]
	0x03A6CF44 CBZ W8, 0x3A6CF5C
	0x03A6CF48 LDR W8, [X19 + 0x130]
	0x03A6CF4C CMP W8, 0x0
	0x03A6CF50 B.LE 0x3A6CF5C
	0x03A6CF54 MOVZ W1, 0x10
	0x03A6CF58 B 0x3A6CF60
	0x03A6CF5C MOV W1, W31
	0x03A6CF60 MOV X0, X20
	0x03A6CF64 MOV X2, X31
	0x03A6CF68 BL 0x3C225D8
	0x03A6CF6C LDR X21, [X19 + 0x128]
	0x03A6CF70 CBZ X21, 0x3A6D148
	0x03A6CF74 LDR X0, [X22]
	0x03A6CF78 LDR W8, [X0 + 0xE0]
	0x03A6CF7C CBNZ W8, 0x3A6CF84
	0x03A6CF80 BL 0x1C16DFC
	0x03A6CF84 LDR W8, [X21 + 0x18]
	0x03A6CF88 CBZ W8, 0x3A6D14C
	0x03A6CF8C ADRP X8, 0x6EA000
	0x03A6CF90 LDR X8, [X8 + 0xB80]
	0x03A6CF94 ADD X0, X21, 0x20
	0x03A6CF98 FMOV S0, W31
	0x03A6CF9C MOVZ W2, 0x1
	0x03A6CFA0 LDR X6, [X8]
	0x03A6CFA4 MOVZ W3, 0x1
	0x03A6CFA8 MOVZ W5, 0x1
	0x03A6CFAC MOV X1, X20
	0x03A6CFB0 MOV W4, W31

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0x977000
	009 Move [X31+8], X1
	010 Move X22, 0x6E8000
	011 Move W8, [X23+640]
	012 Move X22, [X22+4088]
	013 Move X21, X2
	014 Move X20, X1
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {34}
	020 Move X0, 0x688000
	021 Move X0, [X0+2600]
	022 Call 0x1C17CF4
	023 Move X0, 0x688000
	024 Move X0, [X0+2512]
	025 Call 0x1C17CF4
	026 Move X0, 0x6E8000
	027 Move X0, [X0+4088]
	028 Call 0x1C17CF4
	029 Move X0, 0x6EB000
	030 Move X0, [X0+2832]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X23+640], W8
	034 Move X0, [X22]
	035 Add X21, X21, 24
	036 Move W8, [X0+224]
	037 Compare W8, 0
	038 JumpIfNotEqual {40}
	039 Call 0x1C17DFC
	040 Move X0, X21
	041 Move X1, X31
	042 Call UniversalRenderer.IsOffscreenDepthTexture, X0
	043 Move TEMP, X0
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfNotEqual {55}
	047 Move X20, [X31+48]
	048 Move X19, [X31+56]
	049 Move X22, [X31+32]
	050 Move X21, [X31+40]
	051 Move X30, [X31+16]
	052 Move X23, [X31+24]
	053 Add X31, X31, 64
	054 Return 
	055 Move X0, X19
	056 Call ScreenSpaceAmbientOcclusion.GetMaterials, X0
	057 Move TEMP, X0
	058 And TEMP, TEMP, 1
	059 Compare TEMP, 1
	060 JumpIfNotEqual {87}
	061 Move X0, [X19+64]
	062 Compare X0, 0
	063 JumpIfEqual {153}
	064 Add X4, X19, 40
	065 Add X3, X19, 56
	066 Add X1, X19, 32
	067 Add X2, X31, 8
	068 Call ScreenSpaceAmbientOcclusionPass.Setup, X0, X1, X2, X3, X4
	069 Move TEMP, X0
	070 And TEMP, TEMP, 1
	071 Compare TEMP, 1
	072 JumpIfNotEqual {47}
	073 Compare X20, 0
	074 JumpIfEqual {153}
	075 Move X1, [X19+64]
	076 Move X0, X20
	077 Move X20, [X31+48]
	078 Move X19, [X31+56]
	079 Move X22, [X31+32]
	080 Move X21, [X31+40]
	081 Move X30, [X31+16]
	082 Move X23, [X31+24]
	083 Move X2, X31
	084 Add X31, X31, 64
	085 Call ScriptableRenderer.EnqueuePass, X0, X1
	086 Return 
	087 Move X8, 0x688000
	088 Move X8, [X8+2512]
	089 Move W1, 2
	090 Move X0, [X8]
	091 Call 0x1C17D6C
	092 Move X20, X0
	093 Move X0, X19
	094 Move X1, X31
	095 Call "il2cpp_vm_object_is_inst", X0
	096 Compare X0, 0
	097 JumpIfEqual {153}
	098 Move X8, [X0]
	099 Move X9, [X8+424]
	100 Move X1, [X8+432]
	101 NotImplemented "Instruction BLR not yet implemented."
	102 Compare X20, 0
	103 JumpIfEqual {153}
	104 Move X21, X0
	105 Compare X0, 0
	106 JumpIfEqual {113}
	107 Move X8, [X20]
	108 Move X0, X21
	109 Move X1, [X8+64]
	110 Call 0x1C17E00
	111 Compare X0, 0
	112 JumpIfEqual {155}
	113 Move W8, [X20+24]
	114 Compare W8, 0
	115 JumpIfEqual {154}
	116 Move X0, X19
	117 Move X1, X31
	118 Move [X20+32], X21
	119 Call Object.get_name, X0
	120 Move X19, X0
	121 Compare X0, 0
	122 JumpIfEqual {129}
	123 Move X8, [X20]
	124 Move X0, X19
	125 Move X1, [X8+64]
	126 Call 0x1C17E00
	127 Compare X0, 0
	128 JumpIfEqual {155}
	129 Move W8, [X20+24]
	130 NotImplemented "Instruction CMP not yet implemented."
	131 Move [X20+40], X19
	132 Move X8, 0x688000
	133 Move X8, [X8+2600]
	134 Move X0, [X8]
	135 Move W8, [X0+224]
	136 Compare W8, 0
	137 JumpIfNotEqual {139}
	138 Call 0x1C17DFC
	139 Move X8, 0x6EB000
	140 Move X8, [X8+2832]
	141 Move X1, X20
	142 Move X20, [X31+48]
	143 Move X19, [X31+56]
	144 Move X22, [X31+32]
	145 Move X21, [X31+40]
	146 Move X0, [X8]
	147 Move X30, [X31+16]
	148 Move X23, [X31+24]
	149 Move X2, X31
	150 Add X31, X31, 64
	151 Call Debug.LogErrorFormat, X0, X1
	152 Return 
	153 Call 0x1C17F20
	154 Call 0x1C17F28
	155 Call 0x1C17F44
	156 Move X1, X31
	157 Call 0x1C17DEC

Method: System.Void Dispose(System.Boolean disposing)

Disassembly:
	0x03A6D224 STR X31, [X31 + 0x240]
	0x03A6D228 STP V0, V0, [X25 + 0x190]
	0x03A6D22C STP V0, V0, [X25 + 0x170]
	0x03A6D230 STP V0, V0, [X25 + 0x150]
	0x03A6D234 STR V0, [X25 + 0x14]
	0x03A6D238 LDP V2, V0, [X24 + 0x10]
	0x03A6D23C LDR W8, [X24 + 0x30]
	0x03A6D240 LDR V1, [X24]
	0x03A6D244 LDR X0, [X29]
	0x03A6D248 STP V2, V0, [X25 + 0x50]
	0x03A6D24C STR W8, [X31 + 0x100]
	0x03A6D250 STR V1, [X25 + 0x4]
	0x03A6D254 ADRP X27, 0x6E7000
	0x03A6D258 LDR W8, [X0 + 0xE0]
	0x03A6D25C LDR X27, [X27 + 0x10]
	0x03A6D260 CBNZ W8, 0x3A6D268
	0x03A6D264 BL 0x1C16DFC
	0x03A6D268 LDP V0, V1, [X25 + 0x40]
	0x03A6D26C LDR W8, [X31 + 0x100]
	0x03A6D270 LDR V2, [X25 + 0x6]
	0x03A6D274 ADD X0, X31, 0x190
	0x03A6D278 STP V0, V1, [X25 + 0x100]
	0x03A6D27C STR W8, [X31 + 0x1C0]
	0x03A6D280 ADD X8, X31, 0x1D0
	0x03A6D284 FMOV S0, W31
	0x03A6D288 MOV W1, W31
	0x03A6D28C MOV W2, W21

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x976000
	005 Move W8, [X20+641]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x6AF000
	012 Move X0, [X0+2296]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+641], W8
	016 Move X20, 0x6AF000
	017 Move X0, [X19+64]
	018 Move X20, [X20+2296]
	019 Compare X0, 0
	020 JumpIfEqual {22}
	021 Call ScreenSpaceAmbientOcclusionPass.Dispose, X0
	022 Move [X19+64], X31
	023 Move X0, [X20]
	024 Move X19, [X19+56]
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 Move X0, X19
	030 Move X20, [X31+16]
	031 Move X19, [X31+24]
	032 Move X1, X31
	033 Move X30, [X31+32]
	034 Call CoreUtils.Destroy, X0
	035 Return 

Method: System.Boolean GetMaterials()

Disassembly:
	0x03A6CFB4 BL 0x3A6D184
	0x03A6CFB8 LDR X8, [X19 + 0x128]
	0x03A6CFBC CBZ X8, 0x3A6D148
	0x03A6CFC0 LDR W9, [X8 + 0x18]
	0x03A6CFC4 CMP W9, 0x1
	0x03A6CFC8 B.LS 0x3A6D14C
	0x03A6CFCC ADRP X9, 0x6EA000
	0x03A6CFD0 LDR X9, [X9 + 0xB50]
	0x03A6CFD4 ADD X0, X8, 0x28
	0x03A6CFD8 FMOV S0, W31
	0x03A6CFDC MOVZ W2, 0x1
	0x03A6CFE0 LDR X6, [X9]
	0x03A6CFE4 MOVZ W3, 0x1
	0x03A6CFE8 MOVZ W5, 0x1
	0x03A6CFEC MOV X1, X20
	0x03A6CFF0 MOV W4, W31
	0x03A6CFF4 BL 0x3A6D184
	0x03A6CFF8 LDR X8, [X19 + 0x128]
	0x03A6CFFC CBZ X8, 0x3A6D148
	0x03A6D000 LDR W9, [X8 + 0x18]
	0x03A6D004 CMP W9, 0x2
	0x03A6D008 B.LS 0x3A6D14C
	0x03A6D00C ADRP X9, 0x6E9000
	0x03A6D010 LDR X9, [X9 + 0xB20]
	0x03A6D014 ADD X0, X8, 0x30
	0x03A6D018 FMOV S0, W31
	0x03A6D01C MOVZ W2, 0x1
	0x03A6D020 LDR X6, [X9]
	0x03A6D024 MOVZ W3, 0x1
	0x03A6D028 MOVZ W5, 0x1
	0x03A6D02C MOV X1, X20
	0x03A6D030 MOV W4, W31
	0x03A6D034 BL 0x3A6D184
	0x03A6D038 LDR V0, [X19 + 0x150]
	0x03A6D03C LDRB W8, [X19 + 0xE8]
	0x03A6D040 UNIMPLEMENTED
	0x03A6D044 MOV X0, X20
	0x03A6D048 MUL S0.2S, S0.2S, S1.2S
	0x03A6D04C UBFM W1, W8, 0x1C, 0x1B
	0x03A6D050 MOV X2, X31
	0x03A6D054 STR D0, [X19 + 0x150]
	0x03A6D058 BL 0x3C225D8
	0x03A6D05C LDR X21, [X19 + 0x128]
	0x03A6D060 CBZ X21, 0x3A6D148
	0x03A6D064 LDR X0, [X22]
	0x03A6D068 LDR W8, [X0 + 0xE0]
	0x03A6D06C CBNZ W8, 0x3A6D074
	0x03A6D070 BL 0x1C16DFC
	0x03A6D074 LDR W8, [X21 + 0x18]
	0x03A6D078 CMP W8, 0x3
	0x03A6D07C B.LS 0x3A6D14C
	0x03A6D080 ADRP X8, 0x6E9000
	0x03A6D084 LDR X8, [X8 + 0xB60]
	0x03A6D088 ADD X0, X21, 0x38
	0x03A6D08C FMOV S0, W31
	0x03A6D090 MOVZ W2, 0x1
	0x03A6D094 LDR X6, [X8]
	0x03A6D098 MOVZ W3, 0x1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x977000
	006 Move X21, 0x688000
	007 Move W8, [X20+642]
	008 Move X21, [X21+1432]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x6B0000
	015 Move X0, [X0+2296]
	016 Call 0x1C17CF4
	017 Move X0, 0x688000
	018 Move X0, [X0+1432]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X20+642], W8
	022 Move X0, [X21]
	023 Move X20, [X19+56]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Move X0, X20
	029 Move X1, X31
	030 Move X2, X31
	031 Call Object.op_Equality, X0, X1
	032 Move TEMP, X0
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfNotEqual {62}
	036 Move X0, [X21]
	037 Move X20, [X19+48]
	038 Move W8, [X0+224]
	039 Compare W8, 0
	040 JumpIfNotEqual {42}
	041 Call 0x1C17DFC
	042 Move X0, X20
	043 Move X1, X31
	044 Move X2, X31
	045 Call Object.op_Inequality, X0, X1
	046 Move TEMP, X0
	047 And TEMP, TEMP, 1
	048 Compare TEMP, 1
	049 JumpIfNotEqual {62}
	050 Move X8, 0x6AF000
	051 Move X8, [X8+2296]
	052 Move X20, [X19+48]
	053 Move X0, [X8]
	054 Move W8, [X0+224]
	055 Compare W8, 0
	056 JumpIfNotEqual {58}
	057 Call 0x1C17DFC
	058 Move X0, X20
	059 Move X1, X31
	060 Call CoreUtils.CreateEngineMaterial, X0
	061 Move [X19+56], X0
	062 Move X0, [X21]
	063 Move X19, [X19+56]
	064 Move W8, [X0+224]
	065 Compare W8, 0
	066 JumpIfNotEqual {68}
	067 Call 0x1C17DFC
	068 Move X0, X19
	069 Move X20, [X31+16]
	070 Move X19, [X31+24]
	071 Move X1, X31
	072 Move X2, X31
	073 Move X30, [X31+32]
	074 Move X21, [X31+40]
	075 Call Object.op_Inequality, X0, X1
	076 Return X0

Method: System.Void .ctor()

Disassembly:
	0x03A6D338 STR W8, [X31 + 0x180]
	0x03A6D33C LDR X8, [X19]
	0x03A6D340 CBZ X8, 0x3A6D4EC
	0x03A6D344 LDR X0, [X8 + 0x18]
	0x03A6D348 CBZ X0, 0x3A6D4EC
	0x03A6D34C MOV X1, X31
	0x03A6D350 BL 0x3C1ABA0
	0x03A6D354 LDR X8, [X19]
	0x03A6D358 CBZ X8, 0x3A6D4EC
	0x03A6D35C MOV W26, W0
	0x03A6D360 LDR X0, [X8 + 0x18]
	0x03A6D364 CBZ X0, 0x3A6D4EC
	0x03A6D368 MOV X1, X31
	0x03A6D36C BL 0x3C1AC20
	0x03A6D370 LDR X8, [X19]
	0x03A6D374 CBZ X8, 0x3A6D4EC
	0x03A6D378 LDR X0, [X8 + 0x18]
	0x03A6D37C STR W26, [X31 + 0x14]
	0x03A6D380 CBZ X0, 0x3A6D4EC
	0x03A6D384 MOV X1, X31
	0x03A6D388 MOV V9.16B, V0.16B
	0x03A6D38C BL 0x3C1AB20
	0x03A6D390 LDR X8, [X19]
	0x03A6D394 CBZ X8, 0x3A6D4EC
	0x03A6D398 MOV W26, W0
	0x03A6D39C LDR X0, [X8 + 0x18]
	0x03A6D3A0 STR W28, [X31 + 0x10]
	0x03A6D3A4 CBZ X0, 0x3A6D4EC
	0x03A6D3A8 MOV X1, X31
	0x03A6D3AC BL 0x3C1A9D4
	0x03A6D3B0 LDR X8, [X19]
	0x03A6D3B4 CBZ X8, 0x3A6D4EC
	0x03A6D3B8 MOV W28, W0
	0x03A6D3BC LDR X0, [X29]
	0x03A6D3C0 LDR X29, [X8 + 0x58]
	0x03A6D3C4 LDR W9, [X0 + 0xE0]
	0x03A6D3C8 CBNZ W9, 0x3A6D3D0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x976000
	006 Move X21, 0x6EA000
	007 Move W8, [X20+643]
	008 Move X21, [X21+2824]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x6EA000
	015 Move X0, [X0+2824]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+643], W8
	019 Move X0, [X21]
	020 Call 0x1C17F10
	021 Move X8, -49803264
	022 Move V1, [X8+1664]
	023 Move X9, 0x5C29
	024 NotImplemented "Instruction MOVK not yet implemented."
	025 Move TEMP, 0xFFFF
	026 Not TEMP
	027 Move X8, TEMP
	028 NotImplemented "Instruction MOVI not yet implemented."
	029 NotImplemented "Instruction MOVK not yet implemented."
	030 NotImplemented "Instruction MOVK not yet implemented."
	031 Move X1, X31
	032 Move X20, X0
	033 Move [X0+40], X9
	034 Move [X0+24], D0
	035 Move [X0+32], D1
	036 Move [X0+52], X8
	037 Call Object..ctor, X0
	038 Move W8, 1
	039 Move [X19+32], X20
	040 Move [X19+24], W8
	041 Move X0, X19
	042 Move X20, [X31+16]
	043 Move X19, [X31+24]
	044 Move X1, X31
	045 Move X30, [X31+32]
	046 Move X21, [X31+40]
	047 Call ScriptableObject..ctor, X0
	048 Return 

