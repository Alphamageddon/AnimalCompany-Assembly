Type: UnityEngine.Rendering.Universal.UniversalAdditionalCameraData/<>c

Method: System.Void .cctor()

Disassembly:
	0x03A83058 BL 0x3AACE18
	0x03A8305C MOV X0, X31
	0x03A83060 STR X26, [X19 + 0x1F0]
	0x03A83064 BL 0x3C560AC
	0x03A83068 ADRP X8, 0x6D4000
	0x03A8306C LDR W25, [X20 + 0x5C]
	0x03A83070 LDR X8, [X8 + 0x168]
	0x03A83074 MOV X26, X0
	0x03A83078 LDR X8, [X8]
	0x03A8307C MOV X0, X8
	0x03A83080 BL 0x1C16F10
	0x03A83084 ADRP X8, 0x6D4000
	0x03A83088 LDR X8, [X8 + 0x1C8]
	0x03A8308C MOVZ W3, 0x1
	0x03A83090 MOVZ W4, 0xFA
	0x03A83094 MOV X2, X23
	0x03A83098 LDR X1, [X8]
	0x03A8309C AND X8, X24, 0x0
	0x03A830A0 MOV X5, X26
	0x03A830A4 MOV X6, X25
	0x03A830A8 MOV X27, X0
	0x03A830AC STR X31, [X31 + 0x18]
	0x03A830B0 STR W28, [X31 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x960000
	005 Move X20, 0x6D5000
	006 Move W8, [X19+816]
	007 Move X20, [X20+248]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x6D5000
	013 Move X0, [X0+248]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+816], W8
	017 Move X0, [X20]
	018 Call 0x1C17F10
	019 Move X1, X31
	020 Move X19, X0
	021 Call Object..ctor, X0
	022 Move X8, [X20]
	023 Move X8, [X8+184]
	024 Move [X8], X19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Return 

Method: System.Void .ctor()

Disassembly:
	0x03A830B4 STP X22, X8, [X31]
	0x03A830B8 BL 0x3AAF16C

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: System.Boolean <UpdateCameraStack>b__52_0(UnityEngine.Camera cam)

Disassembly:
	0x03A830BC STR X27, [X19 + 0x1F8]
	0x03A830C0 ADRP X8, 0x699000
	0x03A830C4 LDR X8, [X8 + 0xD28]
	0x03A830C8 ADRP X28, 0x6D4000
	0x03A830CC LDR X0, [X8]
	0x03A830D0 LDR W8, [X0 + 0xE0]
	0x03A830D4 LDR X28, [X28 + 0x170]
	0x03A830D8 CBNZ W8, 0x3A830E0
	0x03A830DC BL 0x1C16DFC
	0x03A830E0 MOV X0, X31
	0x03A830E4 BL 0x3C560AC
	0x03A830E8 ADRP X8, 0x6D4000
	0x03A830EC LDR W22, [X20 + 0x5C]
	0x03A830F0 LDR X23, [X21]
	0x03A830F4 LDR W24, [X21 + 0x8]
	0x03A830F8 LDR W27, [X29 + 0x14]
	0x03A830FC LDR X8, [X8 + 0x168]
	0x03A83100 MOV X25, X0
	0x03A83104 LDR X8, [X8]
	0x03A83108 MOV X0, X8
	0x03A8310C BL 0x1C16F10
	0x03A83110 MOVZ W1, 0xA
	0x03A83114 MOVZ W2, 0x1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x960000
	006 Move X21, 0x671000
	007 Move W8, [X20+817]
	008 Move X21, [X21+1432]
	009 Move X19, X1
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x671000
	015 Move X0, [X0+1432]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+817], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X1, X31
	028 Move X2, X31
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]
	031 Call Object.op_Equality, X0, X1
	032 Return X0

