Type: UnityEngine.Rendering.Universal.Render2DLightingPass

Method: System.Void .ctor(UnityEngine.Rendering.Universal.Renderer2DData rendererData, UnityEngine.Material blitMaterial, UnityEngine.Material samplingMaterial)

Disassembly:
	0x03A19130 LDR W9, [X8 + 0xF8]
	0x03A19134 LDR W8, [X31 + 0x9C]
	0x03A19138 LDR X4, [X31 + 0xB0]
	0x03A1913C CMP W9, 0x2
	0x03A19140 ADD W20, W8, W25
	0x03A19144 MOVN W8, 0x0
	0x03A19148 STR W8, [X31 + 0x1310]
	0x03A1914C ADD X8, X31, 0x1000
	0x03A19150 ADD X8, X8, 0x300
	0x03A19154 STR W9, [X31 + 0x80]
	0x03A19158 STRB W31, [X8 + 0xC]
	0x03A1915C B.LT 0x3A1918C
	0x03A19160 LDR X8, [X31 + 0x78]
	0x03A19164 CMP W20, W8
	0x03A19168 B.LT 0x3A1918C
	0x03A1916C LDR W2, [X31 + 0x9C]
	0x03A19170 ADD X5, X31, 0x1000
	0x03A19174 ADD X6, X31, 0x1000
	0x03A19178 ADD X5, X5, 0x310
	0x03A1917C ADD X6, X6, 0x30C
	0x03A19180 MOV X0, X27
	0x03A19184 MOV W1, W25
	0x03A19188 BL 0x3A187A8
	0x03A1918C LDR X8, [X27 + 0xF0]
	0x03A19190 CBZ X8, 0x3A19C9C
	0x03A19194 LDR X8, [X8 + 0x58]
	0x03A19198 CBZ X8, 0x3A19C9C
	0x03A1919C LDR X0, [X29]
	0x03A191A0 LDR X8, [X8 + 0x18]
	0x03A191A4 LDR W9, [X0 + 0xE0]
	0x03A191A8 STR X8, [X31 + 0x58]
	0x03A191AC CBNZ W9, 0x3A191B8
	0x03A191B0 BL 0x1C16DFC
	0x03A191B4 LDR X0, [X29]
	0x03A191B8 LDR X8, [X0 + 0xB8]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0x9C9000
	009 Move X24, 0x73B000
	010 Move W8, [X23+4053]
	011 Move X24, [X24+4080]
	012 Move X20, X3
	013 Move X21, X2
	014 Move X22, X1
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {25}
	020 Move X0, 0x73B000
	021 Move X0, [X0+4080]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X23+4053], W8
	025 Move X0, [X24]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {30}
	029 Call 0x1C17DFC
	030 Move X0, X19
	031 Move X1, X31
	032 Call ScriptableRenderPass..ctor, X0
	033 Move X0, X19
	034 Move [X19+232], X20
	035 Move [X19+240], X22
	036 Move [X19+224], X21
	037 Call Render2DLightingPass.GetCameraSortingLayerBoundsIndex, X0
	038 NotImplemented "Instruction STRH not yet implemented."
	039 Move X20, [X31+48]
	040 Move X19, [X31+56]
	041 Move X22, [X31+32]
	042 Move X21, [X31+40]
	043 Move X24, [X31+16]
	044 Move X23, [X31+24]
	045 Move X30, [X31+64]
	046 Return 

Method: System.Void Setup(System.Boolean useDepth)

Disassembly:
	0x03A1929C ADD X8, X31, 0x1000
	0x03A192A0 ADD X8, X8, 0x710
	0x03A192A4 LDR X21, [X21 + 0x658]

ISIL:
	001 And W8, W1, 1
	002 Move [X0+248], W8
	003 Return 

Method: System.Void GetTransparencySortingMode(UnityEngine.Camera camera, ref UnityEngine.Rendering.SortingSettings sortingSettings)

Disassembly:
	0x03A192A8 ORR X8, X8, 0xF
	0x03A192AC STR X8, [X31 + 0xA8]
	0x03A192B0 LDR X0, [X29]
	0x03A192B4 LDR W8, [X0 + 0xE0]
	0x03A192B8 CBZ W8, 0x3A192C4
	0x03A192BC LDR X20, [X31 + 0xB0]
	0x03A192C0 B 0x3A192D0
	0x03A192C4 LDR X20, [X31 + 0xB0]
	0x03A192C8 BL 0x1C16DFC
	0x03A192CC LDR X0, [X29]
	0x03A192D0 LDR X8, [X0 + 0xB8]
	0x03A192D4 LDR X2, [X8 + 0x48]
	0x03A192D8 STRB W31, [X31 + 0xFE0]
	0x03A192DC ADD X0, X31, 0xFE0
	0x03A192E0 MOV X1, X19
	0x03A192E4 MOV X3, X31
	0x03A192E8 BL 0x39B1DB0
	0x03A192EC LDRB W8, [X31 + 0xFE0]
	0x03A192F0 ADD X9, X31, 0x1000
	0x03A192F4 ADD X9, X9, 0x300
	0x03A192F8 STRB W8, [X9]
	0x03A192FC CBZ X20, 0x3A19A78
	0x03A19300 LDR W8, [X20 + 0x18]
	0x03A19304 CMP W28, W8
	0x03A19308 B.CS 0x3A19A80
	0x03A1930C MOVZ W8, 0x34
	0x03A19310 MADD X8, X28, X8, X20
	0x03A19314 LDP V0, V1, [X8 + 0x20]
	0x03A19318 LDR V2, [X8 + 0x4]
	0x03A1931C LDR W8, [X8 + 0x50]
	0x03A19320 STR V0, [X31 + 0x171]
	0x03A19324 LDR W9, [X31 + 0x171C]
	0x03A19328 STR W8, [X31 + 0x1740]
	0x03A1932C STR V2, [X31 + 0x173]
	0x03A19330 STR V1, [X31 + 0x172]
	0x03A19334 CMP W9, 0x0
	0x03A19338 B.LE 0x3A197A8
	0x03A1933C LDR X8, [X31 + 0x58]
	0x03A19340 CMP W8, 0x1
	0x03A19344 B.LT 0x3A19458

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X0+240]
	005 Compare X8, 0
	006 JumpIfEqual {50}
	007 Move W8, [X8+60]
	008 Move X19, X2
	009 NotImplemented "Instruction CMP not yet implemented."
	010 NotImplemented "Instruction CMP not yet implemented."
	011 Compare W8, 0
	012 JumpIfNotEqual {32}
	013 Compare X1, 0
	014 JumpIfEqual {50}
	015 Move X0, X1
	016 Move X1, X31
	017 Call Camera.get_orthographic, X0
	018 Move TEMP, X0
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfNotEqual {24}
	022 Move W1, 1
	023 Move X0, X19
	024 Move X0, X19
	025 Move W1, W31
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X2, X31
	029 Move X30, [X31+32]
	030 Call SortingSettings.set_distanceMetric, X0, X1
	031 Return 
	032 Move X20, X0
	033 Move W1, 2
	034 Move X0, X19
	035 Move X2, X31
	036 Call SortingSettings.set_distanceMetric, X0, X1
	037 Move X8, [X20+240]
	038 Compare X8, 0
	039 JumpIfEqual {50}
	040 Move S0, [X8+64]
	041 Move S1, [X8+68]
	042 Move V2, [X8+72]
	043 Move X0, X19
	044 Move X20, [X31+16]
	045 Move X19, [X31+24]
	046 Move X1, X31
	047 Move X30, [X31+32]
	048 Call SortingSettings.set_customAxis, X0, X1
	049 Return 
	050 Call 0x1C17F20

Method: System.Void CopyCameraSortingLayerRenderTexture(UnityEngine.Rendering.ScriptableRenderContext context, UnityEngine.Rendering.Universal.RenderingData renderingData, UnityEngine.Rendering.RenderBufferStoreAction mainTargetStoreAction)

Disassembly:
	0x03A19348 MOV X22, X31
	0x03A1934C LDR W8, [X31 + 0x1728]
	0x03A19350 MOVZ W9, 0x1
	0x03A19354 LSLV W9, W9, W22
	0x03A19358 ANDS W20, W8, W9, 0x0
	0x03A1935C B.EQ 0x3A19428
	0x03A19360 LDR W8, [X26 + 0x30]
	0x03A19364 LDP V1, V0, [X26 + 0x10]
	0x03A19368 LDR V2, [X26]
	0x03A1936C STR W8, [X31 + 0x9D0]
	0x03A19370 STR V0, [X31 + 0x9C]
	0x03A19374 STR V1, [X31 + 0x9B]
	0x03A19378 STR V2, [X31 + 0x9A]
	0x03A1937C ADD X0, X31, 0x1000
	0x03A19380 ADD X8, X31, 0xFE0
	0x03A19384 ADD X0, X0, 0x710
	0x03A19388 ADD X2, X31, 0x9A0
	0x03A1938C MOV X1, X19
	0x03A19390 MOV W3, W22
	0x03A19394 BL 0x3A1A9B0
	0x03A19398 LDR V0, [X31 + 0xFE]
	0x03A1939C LDR V1, [X31 + 0xFF]
	0x03A193A0 LDR X8, [X31 + 0x1000]
	0x03A193A4 LDR X0, [X29]
	0x03A193A8 STR V0, [X31 + 0x12D]
	0x03A193AC STR V1, [X31 + 0x12E]
	0x03A193B0 STR X8, [X31 + 0x12F0]
	0x03A193B4 LDR W8, [X0 + 0xE0]
	0x03A193B8 CBNZ W8, 0x3A193C4
	0x03A193BC BL 0x1C16DFC
	0x03A193C0 LDR X0, [X29]
	0x03A193C4 LDR X8, [X0 + 0xB8]
	0x03A193C8 LDR X8, [X8 + 0x10]
	0x03A193CC CBZ X8, 0x3A19A68
	0x03A193D0 LDR W9, [X8 + 0x18]
	0x03A193D4 CMP X22, X9
	0x03A193D8 B.CS 0x3A19A60
	0x03A193DC ADD X8, X8, X22, 0x2, LSL
	0x03A193E0 LDR V0, [X31 + 0x12D]
	0x03A193E4 LDR V1, [X31 + 0x12E]
	0x03A193E8 LDR X9, [X31 + 0x12F0]
	0x03A193EC LDR W1, [X8 + 0x20]
	0x03A193F0 STR V0, [X31 + 0xFE]
	0x03A193F4 STR V1, [X31 + 0xFF]
	0x03A193F8 STR X9, [X31 + 0x1000]
	0x03A193FC CBZ X19, 0x3A19A58
	0x03A19400 LDR V0, [X31 + 0xFE]
	0x03A19404 LDR V1, [X31 + 0xFF]
	0x03A19408 LDR X8, [X31 + 0x1000]
	0x03A1940C STR V0, [X31 + 0x97]
	0x03A19410 STR V1, [X31 + 0x98]
	0x03A19414 STR X8, [X31 + 0x990]
	0x03A19418 ADD X2, X31, 0x970
	0x03A1941C MOV X0, X19
	0x03A19420 MOV X3, X31
	0x03A19424 BL 0x3C4FCFC
	0x03A19428 LDR X0, [X21]
	0x03A1942C LDR W8, [X0 + 0xE0]
	0x03A19430 CBNZ W8, 0x3A19438
	0x03A19434 BL 0x1C16DFC
	0x03A19438 CMP W20, 0x0
	0x03A1943C CSET W2, NE
	0x03A19440 MOV X0, X19
	0x03A19444 MOV W1, W22
	0x03A19448 BL 0x3A1AA80
	0x03A1944C ADD X22, X22, 0x1
	0x03A19450 CMP X25, X22
	0x03A19454 B.NE 0x3A1934C
	0x03A19458 ADRP X8, 0x737000
	0x03A1945C LDR X8, [X8 + 0xC80]
	0x03A19460 LDR X0, [X8]
	0x03A19464 LDR W8, [X0 + 0xE0]
	0x03A19468 CBNZ W8, 0x3A19470
	0x03A1946C BL 0x1C16DFC
	0x03A19470 ADD X0, X31, 0x1000
	0x03A19474 ADD X0, X0, 0x318
	0x03A19478 MOV X1, X19
	0x03A1947C MOV X2, X31
	0x03A19480 BL 0x3C58FE4
	0x03A19484 CBZ X19, 0x3A19A88
	0x03A19488 MOV X0, X19
	0x03A1948C MOV X1, X31
	0x03A19490 BL 0x3C4C310
	0x03A19494 MOV X0, X27
	0x03A19498 BL 0x3A181BC
	0x03A1949C LDR W8, [X31 + 0x80]
	0x03A194A0 MOV W23, W0
	0x03A194A4 CMP W8, 0x1
	0x03A194A8 B.LE 0x3A194D4
	0x03A194AC ADD X8, X31, 0x1000
	0x03A194B0 LDR W9, [X31 + 0x64]
	0x03A194B4 ADD X8, X8, 0x300
	0x03A194B8 LDRB W8, [X8 + 0xC]
	0x03A194BC CMP W9, W28
	0x03A194C0 CSET W9, EQ
	0x03A194C4 ANDS W31, W9, W8, 0x0
	0x03A194C8 MOVZ W8, 0x1
	0x03A194CC CINC W22, W8, EQ
	0x03A194D0 B 0x3A194D8
	0x03A194D4 MOV W22, W31
	0x03A194D8 LDR X0, [X31 + 0xA8]
	0x03A194DC MOV X1, X31
	0x03A194E0 BL 0x3C5AE58
	0x03A194E4 SXTH W27, W23
	0x03A194E8 SXTH W8, W0
	0x03A194EC CMP W27, W8
	0x03A194F0 B.LT 0x3A19654
	0x03A194F4 LDR X0, [X31 + 0xA8]
	0x03A194F8 MOV X1, X31
	0x03A194FC BL 0x3C5AE60
	0x03A19500 SXTH W8, W0
	0x03A19504 CMP W27, W8
	0x03A19508 B.GE 0x3A19654
	0x03A1950C LDR X8, [X31 + 0xB8]
	0x03A19510 LDR X8, [X8 + 0xF0]
	0x03A19514 CBZ X8, 0x3A19AB8
	0x03A19518 LDRB W8, [X8 + 0x61]
	0x03A1951C CBZ W8, 0x3A19654
	0x03A19520 LDR X0, [X31 + 0xA8]
	0x03A19524 MOV X1, X31
	0x03A19528 BL 0x3C5AE58
	0x03A1952C MOV W1, W0
	0x03A19530 STR W31, [X31 + 0xFE0]
	0x03A19534 LDR X20, [X31 + 0x90]
	0x03A19538 ADD X0, X31, 0xFE0
	0x03A1953C MOV W2, W27
	0x03A19540 MOV X3, X31
	0x03A19544 BL 0x3C5AE4C
	0x03A19548 LDR X9, [X31 + 0x50]
	0x03A1954C LDR W8, [X31 + 0xFE0]
	0x03A19550 AND X9, X9, 0x0
	0x03A19554 ORR X1, X9, X8, 0x0
	0x03A19558 MOV X0, X20
	0x03A1955C MOV X2, X31
	0x03A19560 STR X1, [X31 + 0x50]
	0x03A19564 BL 0x3C54044
	0x03A19568 LDR X1, [X31 + 0x78]
	0x03A1956C LDR X23, [X31 + 0x1318]
	0x03A19570 ADD X0, X31, 0x1000
	0x03A19574 ADD X0, X0, 0x4B0
	0x03A19578 MOVZ W2, 0xC4
	0x03A1957C BL 0x3EB1AC0
	0x03A19580 LDR X24, [X31 + 0xA0]
	0x03A19584 ADD X5, X31, 0x1000
	0x03A19588 ADD X5, X5, 0x4B0
	0x03A1958C MOV X1, X23
	0x03A19590 MOV X2, X19
	0x03A19594 MOV X3, X24
	0x03A19598 MOV X4, X20
	0x03A1959C BL 0x3A18A38
	0x03A195A0 LDR X23, [X31 + 0x1318]
	0x03A195A4 ADD X0, X31, 0x688
	0x03A195A8 MOVZ W2, 0x2B8
	0x03A195AC MOV X1, X24
	0x03A195B0 BL 0x3EB1AC0
	0x03A195B4 LDR X0, [X31 + 0xB8]
	0x03A195B8 ADD X2, X31, 0x688
	0x03A195BC MOV X1, X23
	0x03A195C0 MOV W3, W22
	0x03A195C4 BL 0x3A18348
	0x03A195C8 LDR X0, [X31 + 0xA8]

ISIL:
	001 Move [X31-80], X29
	002 Move [X31-72], X30
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Subtract X31, X31, 1472
	012 Move X19, 0x9C9000
	013 Move W8, [X19+4054]
	014 Move W20, W3
	015 Move X22, X2
	016 Move X21, X0
	017 Move [X31+1464], X1
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {36}
	022 Move X0, 0x73A000
	023 Move X0, [X0+3624]
	024 Call 0x1C17CF4
	025 Move X0, 0x703000
	026 Move X0, [X0+2296]
	027 Call 0x1C17CF4
	028 Move X0, 0x73C000
	029 Move X0, [X0+1624]
	030 Call 0x1C17CF4
	031 Move X0, 0x738000
	032 Move X0, [X0+3200]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X19+4054], W8
	036 Move X19, [X22]
	037 Add X0, X31, 768
	038 Move W2, 696
	039 Move X1, X22
	040 Call 0x3EB2AC0
	041 Move X8, [X21+240]
	042 Compare X8, 0
	043 JumpIfEqual {189}
	044 Move X9, 0x73C000
	045 Move X9, [X9+1624]
	046 Move W22, [X8+104]
	047 Move X0, [X9]
	048 Move W9, [X0+224]
	049 Compare W9, 0
	050 JumpIfNotEqual {52}
	051 Call 0x1C17DFC
	052 Add X0, X31, 72
	053 Add X1, X31, 768
	054 Move W2, 696
	055 Call 0x3EB2AC0
	056 Add X1, X31, 72
	057 Move X0, X21
	058 Move X2, X19
	059 Move W3, W22
	060 Call RendererLighting.CreateCameraSortingLayerRenderTexture, X0, X1, X2, X3
	061 Move X8, [X21+240]
	062 Compare X8, 0
	063 JumpIfEqual {189}
	064 Move W8, [X8+104]
	065 NotImplemented "Instruction CMP not yet implemented."
	066 Move X22, [X21+232]
	067 Move W23, W31
	068 Move X22, [X21+224]
	069 Move X0, X21
	070 Move X1, X31
	071 Call ScriptableRenderPass.get_colorAttachmentHandle, X0
	072 Compare X0, 0
	073 JumpIfEqual {189}
	074 Move X0, [X0+24]
	075 Compare X0, 0
	076 JumpIfEqual {189}
	077 Move X1, X31
	078 Call Texture.get_filterMode, X0
	079 NotImplemented "Instruction CMP not yet implemented."
	080 NotImplemented "Instruction CSET not yet implemented."
	081 Move X0, X21
	082 Move X1, X31
	083 Call ScriptableRenderPass.get_colorAttachmentHandle, X0
	084 Move X8, [X21+240]
	085 Compare X8, 0
	086 JumpIfEqual {189}
	087 Move X9, 0x73A000
	088 Move X9, [X9+3624]
	089 Move X24, X0
	090 Move X26, 0x703000
	091 Move X25, [X8+328]
	092 Move X0, [X9]
	093 Move W9, [X0+224]
	094 Move X26, [X26+2296]
	095 Compare W9, 0
	096 JumpIfNotEqual {98}
	097 Call 0x1C17DFC
	098 Move W3, 2
	099 Move X0, X19
	100 Move X1, X24
	101 Move X2, X25
	102 Move W4, W31
	103 Move X5, X22
	104 Move W6, W23
	105 Move X7, X31
	106 Call Blitter.BlitCameraTexture, X0, X1, X2, X3, X4, X5, X6
	107 Move X0, X21
	108 Move X1, X31
	109 Call ScriptableRenderPass.get_colorAttachmentHandle, X0
	110 Move X8, [X26]
	111 Move X22, [X21+152]
	112 Move X23, X0
	113 Move W9, [X8+224]
	114 Compare W9, 0
	115 JumpIfNotEqual {118}
	116 Move X0, X8
	117 Call 0x1C17DFC
	118 Move TEMP, 0
	119 Not TEMP
	120 Move W8, TEMP
	121 Move S0, W31
	122 Move S1, W31
	123 Move S2, W31
	124 Move S3, W31
	125 Move X0, X19
	126 Move X1, X23
	127 Move W2, W31
	128 Move W3, W20
	129 Move X4, X22
	130 Move W5, W31
	131 Move W6, W20
	132 Move W7, W31
	133 Move [X31+24], X31
	134 Move [X31+16], W8
	135 Move [X31+8], W8
	136 Move [X31], W31
	137 Call CoreUtils.SetRenderTarget, X0, X1, X2, X3, X4, X5, X6, X7, X8, X9, X10, X11
	138 Move X8, [X21+240]
	139 Compare X8, 0
	140 JumpIfEqual {189}
	141 Move X9, [X8+328]
	142 Compare X9, 0
	143 JumpIfEqual {189}
	144 Move X10, [X9+72]
	145 NotImplemented "Instruction LDUR not yet implemented."
	146 NotImplemented "Instruction LDUR not yet implemented."
	147 Move W1, [X8+336]
	148 Move [X31+800], X10
	149 Move [X31+768], V1
	150 Move [X31+776], V0
	151 Compare X19, 0
	152 JumpIfEqual {189}
	153 Move V0, [X31+768]
	154 Move V1, [X31+784]
	155 Move X8, [X31+800]
	156 Move X20, 0x738000
	157 Move X20, [X20+3200]
	158 Add X2, X31, 32
	159 Move X0, X19
	160 Move X3, X31
	161 Move [X31+32], V0
	162 Move [X31+40], V1
	163 Move [X31+64], X8
	164 Call CommandBuffer.SetGlobalTexture, X0, X1, X2
	165 Move X0, [X20]
	166 Move W8, [X0+224]
	167 Compare W8, 0
	168 JumpIfNotEqual {170}
	169 Call 0x1C17DFC
	170 Add X0, X31, 1464
	171 Move X1, X19
	172 Move X2, X31
	173 Call ScriptableRenderContext.ExecuteCommandBuffer, X0, X1
	174 Move X0, X19
	175 Move X1, X31
	176 Call CommandBuffer.Clear, X0
	177 Add X31, X31, 1472
	178 Move X20, [X31+64]
	179 Move X19, [X31+72]
	180 Move X22, [X31+48]
	181 Move X21, [X31+56]
	182 Move X24, [X31+32]
	183 Move X23, [X31+40]
	184 Move X26, [X31+16]
	185 Move X25, [X31+24]
	186 Move X29, [X31+80]
	187 Move X30, [X31+88]
	188 Return 
	189 Call 0x1C17F20

Method: System.Int16 GetCameraSortingLayerBoundsIndex()

Disassembly:
	0x03A191BC ADD X0, X31, 0x1000
	0x03A191C0 ADD X0, X0, 0x308
	0x03A191C4 MOV X1, X19
	0x03A191C8 LDR X2, [X8 + 0x40]
	0x03A191CC MOV X3, X31
	0x03A191D0 BL 0x39B1DB0
	0x03A191D4 LDR W9, [X31 + 0x1310]
	0x03A191D8 MOVZ W8, 0x1
	0x03A191DC STR W9, [X31 + 0x64]
	0x03A191E0 CMP W9, W25
	0x03A191E4 LDR W9, [X31 + 0x80]
	0x03A191E8 CINC W8, W8, GE
	0x03A191EC CMP W9, 0x1
	0x03A191F0 CSEL W22, W8, W31, GT
	0x03A191F4 MOV X0, X27
	0x03A191F8 MOV X1, X31
	0x03A191FC STR X20, [X31 + 0x38]
	0x03A19200 BL 0x3A43A98
	0x03A19204 ADRP X8, 0x702000
	0x03A19208 LDR X8, [X8 + 0x8F8]
	0x03A1920C MOV X23, X0
	0x03A19210 LDR X24, [X27 + 0x98]
	0x03A19214 LDR X0, [X8]
	0x03A19218 LDR W8, [X0 + 0xE0]
	0x03A1921C CBNZ W8, 0x3A19224
	0x03A19220 BL 0x1C16DFC
	0x03A19224 MOVN W8, 0x0
	0x03A19228 FMOV S0, W31
	0x03A1922C FMOV S1, W31
	0x03A19230 FMOV S2, W31
	0x03A19234 FMOV S3, W31
	0x03A19238 MOV X0, X19
	0x03A1923C MOV X1, X23
	0x03A19240 MOV W2, W31
	0x03A19244 MOV W3, W22
	0x03A19248 MOV X4, X24
	0x03A1924C MOV W5, W31
	0x03A19250 MOV W6, W22
	0x03A19254 MOV W7, W31
	0x03A19258 STR X31, [X31 + 0x18]
	0x03A1925C STR W8, [X31 + 0x10]
	0x03A19260 STR W8, [X31 + 0x8]
	0x03A19264 STR W31, [X31]
	0x03A19268 BL 0x39E7E68
	0x03A1926C CMP W20, W25
	0x03A19270 B.LE 0x3A19BA4
	0x03A19274 LDR X8, [X31 + 0x17B8]
	0x03A19278 LDR X9, [X31 + 0x40]
	0x03A1927C SXTW X28, W9
	0x03A19280 LDR X9, [X31 + 0x38]
	0x03A19284 STR X8, [X31 + 0x78]
	0x03A19288 LDR X8, [X31 + 0x58]
	0x03A1928C ADRP X21, 0x73B000
	0x03A19290 SXTW X9, W9
	0x03A19294 STR X9, [X31 + 0x68]
	0x03A19298 AND X25, X8, 0x0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x9C9000
	007 Move X21, 0x73C000
	008 Move W8, [X20+4055]
	009 Move X21, [X21+1176]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x73C000
	016 Move X0, [X0+1176]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+4055], W8
	020 Move X0, [X21]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 Call Light2DManager.GetCachedSortingLayer
	026 Compare X0, 0
	027 JumpIfEqual {59}
	028 Move W8, [X0+24]
	029 Move X20, X0
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move W22, W31
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Add X8, X20, W22
	034 Add X21, X8, 32
	035 Move X0, X21
	036 Move X1, X31
	037 Call SortingLayer.get_id, X0
	038 Move X8, [X19+240]
	039 Compare X8, 0
	040 JumpIfEqual {59}
	041 Move W8, [X8+100]
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move W8, [X20+24]
	044 Add W9, W22, 1
	045 NotImplemented "Instruction SXTH not yet implemented."
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Move W0, 0x8000
	048 Move W8, [X20+24]
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Move X0, X21
	051 Move X1, X31
	052 Call SortingLayer.get_value, X0
	053 Move X20, [X31+32]
	054 Move X19, [X31+40]
	055 Move X22, [X31+16]
	056 Move X21, [X31+24]
	057 Move X30, [X31+48]
	058 Return X0
	059 Call 0x1C17F20
	060 Call 0x1C17F28

Method: System.Void DetermineWhenToResolve(System.Int32 startIndex, System.Int32 batchesDrawn, System.Int32 batchCount, UnityEngine.Rendering.Universal.LayerBatch[] layerBatches, out System.Int32 resolveDuringBatch, out System.Boolean resolveIsAfterCopy)

Disassembly:
	0x03A197A8 MOV X22, X31
	0x03A197AC LDR X8, [X29]
	0x03A197B0 LDR W9, [X8 + 0xE0]
	0x03A197B4 CBNZ W9, 0x3A197C4
	0x03A197B8 MOV X0, X8
	0x03A197BC BL 0x1C16DFC
	0x03A197C0 LDR X8, [X29]
	0x03A197C4 LDR X9, [X8 + 0xB8]
	0x03A197C8 LDR X9, [X9 + 0x10]
	0x03A197CC CBZ X9, 0x3A19A40
	0x03A197D0 LDRSW X10, [X9 + 0x18]
	0x03A197D4 CMP X22, X10
	0x03A197D8 B.GE 0x3A19458
	0x03A197DC LDR W10, [X8 + 0xE0]
	0x03A197E0 CBNZ W10, 0x3A197FC
	0x03A197E4 MOV X0, X8
	0x03A197E8 BL 0x1C16DFC
	0x03A197EC LDR X8, [X29]
	0x03A197F0 LDR X8, [X8 + 0xB8]
	0x03A197F4 LDR X9, [X8 + 0x10]
	0x03A197F8 CBZ X9, 0x3A19A70
	0x03A197FC LDR W8, [X9 + 0x18]
	0x03A19800 CMP X22, X8
	0x03A19804 B.CS 0x3A19A50
	0x03A19808 ADD X8, X9, X22, 0x2, LSL
	0x03A1980C LDR W23, [X8 + 0x20]
	0x03A19810 MOV X0, X31
	0x03A19814 BL 0x3C1B398
	0x03A19818 ADD X8, X31, 0x1000
	0x03A1981C ADD X8, X8, 0x640
	0x03A19820 MOV X1, X31
	0x03A19824 BL 0x3C4B274
	0x03A19828 LDR V0, [X31 + 0x164]
	0x03A1982C LDR V1, [X31 + 0x165]
	0x03A19830 LDR X8, [X31 + 0x1660]
	0x03A19834 STR V0, [X31 + 0xFE]
	0x03A19838 STR V1, [X31 + 0xFF]
	0x03A1983C STR X8, [X31 + 0x1000]
	0x03A19840 CBZ X19, 0x3A19A48
	0x03A19844 LDR V0, [X31 + 0xFE]
	0x03A19848 LDR V1, [X31 + 0xFF]
	0x03A1984C LDR X8, [X31 + 0x1000]
	0x03A19850 STR V0, [X31 + 0x94]
	0x03A19854 STR V1, [X31 + 0x95]
	0x03A19858 STR X8, [X31 + 0x960]
	0x03A1985C ADD X2, X31, 0x940
	0x03A19860 MOV X0, X19
	0x03A19864 MOV W1, W23
	0x03A19868 MOV X3, X31
	0x03A1986C BL 0x3C4FCFC
	0x03A19870 LDR X0, [X21]
	0x03A19874 LDR W8, [X0 + 0xE0]
	0x03A19878 CBNZ W8, 0x3A19880
	0x03A1987C BL 0x1C16DFC
	0x03A19880 CMP X22, 0x0
	0x03A19884 CSET W2, EQ
	0x03A19888 MOV X0, X19
	0x03A1988C MOV W1, W22
	0x03A19890 BL 0x3A1AA80
	0x03A19894 ADD X22, X22, 0x1
	0x03A19898 B 0x3A197AC
	0x03A1989C MOV W20, W31
	0x03A198A0 LDR X1, [X31 + 0xA0]
	0x03A198A4 ADD X0, X31, 0xFE0
	0x03A198A8 MOVZ W2, 0x2B8
	0x03A198AC BL 0x3EB1AC0
	0x03A198B0 LDR W27, [X31 + 0x1710]
	0x03A198B4 LDR W24, [X31 + 0x1714]
	0x03A198B8 LDR X0, [X31 + 0xB8]
	0x03A198BC MOV X1, X31
	0x03A198C0 BL 0x3A43A98
	0x03A198C4 CBZ X0, 0x3A19A90
	0x03A198C8 LDR X8, [X0 + 0x48]
	0x03A198CC LDUR V0, [X0 + 0x38]
	0x03A198D0 LDUR V1, [X0 + 0x28]
	0x03A198D4 LDR X10, [X31 + 0xB8]
	0x03A198D8 STR X8, [X31 + 0x1660]
	0x03A198DC STR V0, [X31 + 0x165]
	0x03A198E0 STR V1, [X31 + 0x164]
	0x03A198E4 LDR X8, [X10 + 0x98]
	0x03A198E8 CBZ X8, 0x3A19A98
	0x03A198EC LDR X9, [X8 + 0x48]
	0x03A198F0 LDUR V0, [X8 + 0x38]
	0x03A198F4 LDUR V1, [X8 + 0x28]
	0x03A198F8 STR X9, [X31 + 0xFB0]
	0x03A198FC STR V0, [X31 + 0xFA]
	0x03A19900 STR V1, [X31 + 0xF9]
	0x03A19904 LDR X8, [X10 + 0xF0]
	0x03A19908 CBZ X8, 0x3A19AA0
	0x03A1990C LDR X23, [X8 + 0x158]
	0x03A19910 CBZ X23, 0x3A19AA8
	0x03A19914 LDR X8, [X23]
	0x03A19918 ADRP X10, 0x73B000
	0x03A1991C LDRH W9, [X8 + 0x12E]
	0x03A19920 LDR X10, [X10 + 0x668]
	0x03A19924 LDR X1, [X10]
	0x03A19928 CBZ X9, 0x3A1994C
	0x03A1992C LDR X10, [X8 + 0xB0]
	0x03A19930 ADD X10, X10, 0x8
	0x03A19934 LDUR X11, [X10 - 0x8]
	0x03A19938 CMP X11, X1
	0x03A1993C B.EQ 0x3A1995C
	0x03A19940 SUBS X9, X9, 0x1
	0x03A19944 ADD X10, X10, 0x10
	0x03A19948 B.NE 0x3A19934
	0x03A1994C MOV X0, X23
	0x03A19950 MOV W2, W31
	0x03A19954 BL 0x1C5C788
	0x03A19958 B 0x3A19968
	0x03A1995C LDRSW X9, [X10]
	0x03A19960 ADD X8, X8, X9, 0x4, LSL
	0x03A19964 ADD X0, X8, 0x138
	0x03A19968 LDP X8, X1, [X0]
	0x03A1996C MOV X0, X23
	0x03A19970 BLR X8
	0x03A19974 MOV X23, X0
	0x03A19978 LDR X0, [X21]
	0x03A1997C LDR W8, [X0 + 0xE0]
	0x03A19980 CBNZ W8, 0x3A19988
	0x03A19984 BL 0x1C16DFC
	0x03A19988 ADD X0, X31, 0x118
	0x03A1998C ADD X1, X31, 0xFE0
	0x03A19990 MOVZ W2, 0x2B8
	0x03A19994 BL 0x3EB1AC0
	0x03A19998 LDR V0, [X31 + 0x164]
	0x03A1999C LDR V1, [X31 + 0x165]
	0x03A199A0 LDR X8, [X31 + 0x1660]
	0x03A199A4 LDR V2, [X31 + 0xF9]
	0x03A199A8 LDR V3, [X31 + 0xFA]
	0x03A199AC LDR X9, [X31 + 0xFB0]
	0x03A199B0 STP V0, V1, [X31 + 0xF0]
	0x03A199B4 STR X8, [X31 + 0x110]
	0x03A199B8 STP V2, V3, [X31 + 0xC0]
	0x03A199BC STR X9, [X31 + 0xE0]
	0x03A199C0 LDR X0, [X31 + 0xB8]
	0x03A199C4 ADD X1, X31, 0x118
	0x03A199C8 ADD X5, X31, 0xF0
	0x03A199CC ADD X6, X31, 0xC0
	0x03A199D0 MOV X2, X19
	0x03A199D4 MOV W3, W27
	0x03A199D8 MOV W4, W24
	0x03A199DC MOV W7, W31
	0x03A199E0 STR X23, [X31 + 0x10]
	0x03A199E4 STRB W31, [X31 + 0x8]
	0x03A199E8 STR W20, [X31]
	0x03A199EC BL 0x3A1AB2C
	0x03A199F0 MOV X0, X19
	0x03A199F4 MOV X1, X22
	0x03A199F8 MOV X2, X31
	0x03A199FC BL 0x3C4D6A0
	0x03A19A00 LDR X27, [X31 + 0xB8]
	0x03A19A04 MOV X22, X31
	0x03A19A08 MOVZ W20, 0x2A
	0x03A19A0C ADD X0, X31, 0x1000
	0x03A19A10 ADD X0, X0, 0x300
	0x03A19A14 MOV X1, X31
	0x03A19A18 BL 0x39B1DB4
	0x03A19A1C CBNZ X22, 0x3A19C7C
	0x03A19A20 CMP W20, 0x2A
	0x03A19A24 B.EQ 0x3A19A2C
	0x03A19A28 CBNZ W20, 0x3A19C0C
	0x03A19A2C LDR X8, [X31 + 0x68]
	0x03A19A30 ADD X28, X28, 0x1
	0x03A19A34 CMP X28, X8

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+64], X30
	003 Move [X31+80], X28
	004 Move [X31+88], X27
	005 Move [X31+96], X26
	006 Move [X31+104], X25
	007 Move [X31+112], X24
	008 Move [X31+120], X23
	009 Move [X31+128], X22
	010 Move [X31+136], X21
	011 Move [X31+144], X20
	012 Move [X31+152], X19
	013 NotImplemented "Instruction MRS not yet implemented."
	014 Move X8, [X27+40]
	015 Move X25, 0x9C9000
	016 Move X19, X6
	017 Move X20, X5
	018 Move [X31+56], X8
	019 Move W8, [X25+4056]
	020 Move X22, X4
	021 Move W23, W2
	022 Move W21, W1
	023 Move X24, X0
	024 Move TEMP, X8
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {39}
	028 Move X0, 0x73C000
	029 Move X0, [X0+1640]
	030 Call 0x1C17CF4
	031 Move X0, 0x73C000
	032 Move X0, [X0+1352]
	033 Call 0x1C17CF4
	034 Move X0, 0x73C000
	035 Move X0, [X0+1648]
	036 Call 0x1C17CF4
	037 Move W8, 1
	038 Move [X25+4056], W8
	039 NotImplemented "Instruction MOVI not yet implemented."
	040 Move [X31+48], W31
	041 Move [X31+16], V0
	042 Move [X31+24], V0
	043 Move [X31], V0
	044 Move X8, [X24+240]
	045 Compare X8, 0
	046 JumpIfEqual {176}
	047 Move X25, [X8+344]
	048 Compare X25, 0
	049 JumpIfEqual {176}
	050 Move X10, 0x73C000
	051 Move X8, [X25]
	052 Move X10, [X10+1640]
	053 NotImplemented "Instruction LDRH not yet implemented."
	054 Move X1, [X10]
	055 Compare X9, 0
	056 JumpIfEqual {63}
	057 Move X10, [X8+176]
	058 Add X10, X10, 8
	059 NotImplemented "Instruction LDUR not yet implemented."
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Subtract X9, X9, 1
	062 Add X10, X10, 16
	063 Move X0, X25
	064 Move W2, W31
	065 Call 0x1C5D788
	066 NotImplemented "Instruction LDRSW not yet implemented."
	067 Add X8, X8, X9
	068 Add X0, X8, 312
	069 Move X8, [X0]
	070 Move X1, [X0+8]
	071 Move X0, X25
	072 NotImplemented "Instruction BLR not yet implemented."
	073 Compare X0, 0
	074 JumpIfEqual {176}
	075 Move W8, [X0+24]
	076 Move X25, X0
	077 NotImplemented "Instruction CMP not yet implemented."
	078 Move X28, 0x73C000
	079 Move X28, [X28+1648]
	080 Move W26, W31
	081 Move X2, [X28]
	082 Move X0, X25
	083 Move W1, W26
	084 Call List`1<Object>.get_Item, X0, X1
	085 Compare X0, 0
	086 JumpIfEqual {176}
	087 Move W8, [X0+132]
	088 Compare W8, 0
	089 JumpIfEqual {92}
	090 Move V0, [X0+136]
	091 NotImplemented "Instruction FCMP not yet implemented."
	092 Move W8, [X25+24]
	093 Add W26, W26, 1
	094 NotImplemented "Instruction CMP not yet implemented."
	095 Move TEMP, 0
	096 Not TEMP
	097 Move W25, TEMP
	098 Move X8, [X24+240]
	099 Compare X8, 0
	100 JumpIfEqual {176}
	101 Move W8, [X8+97]
	102 Compare W8, 0
	103 JumpIfEqual {147}
	104 Move X0, X24
	105 Call Render2DLightingPass.GetCameraSortingLayerBoundsIndex, X0
	106 Add W8, W23, W21
	107 NotImplemented "Instruction CMP not yet implemented."
	108 Compare X22, 0
	109 JumpIfEqual {176}
	110 Add X9, X31, 0
	111 Move W10, 52
	112 Move X8, W8
	113 Or X23, X9, 15
	114 NotImplemented "Instruction SMADDL not yet implemented."
	115 NotImplemented "Instruction SXTH not yet implemented."
	116 Add X26, X9, 32
	117 Subtract X28, X8, W21
	118 Move W8, [X22+24]
	119 NotImplemented "Instruction CMP not yet implemented."
	120 Move W8, [X26+48]
	121 Move V1, [X26+16]
	122 Move V0, [X26+32]
	123 Move V2, [X26]
	124 Move X0, X23
	125 Move X1, X31
	126 Move [X31+48], W8
	127 Move [X31+16], V1
	128 Move [X31+24], V0
	129 Move [X31], V2
	130 Call SortingLayerRange.get_lowerBound, X0
	131 NotImplemented "Instruction CMP not yet implemented."
	132 Move X0, X23
	133 Move X1, X31
	134 Call SortingLayerRange.get_upperBound, X0
	135 NotImplemented "Instruction CMP not yet implemented."
	136 Add W21, W21, 1
	137 Subtract X28, X28, 1
	138 Add X26, X26, 52
	139 Move TEMP, 0
	140 Not TEMP
	141 Move W21, TEMP
	142 NotImplemented "Instruction CMP not yet implemented."
	143 NotImplemented "Instruction CSET not yet implemented."
	144 NotImplemented "Instruction CSEL not yet implemented."
	145 Move [X19], W8
	146 Move [X20], W9
	147 Move [X20], W25
	148 Move [X19], W31
	149 Move X8, [X27+40]
	150 Move X9, [X31+56]
	151 NotImplemented "Instruction CMP not yet implemented."
	152 Move X20, [X31+144]
	153 Move X19, [X31+152]
	154 Move X22, [X31+128]
	155 Move X21, [X31+136]
	156 Move X24, [X31+112]
	157 Move X23, [X31+120]
	158 Move X26, [X31+96]
	159 Move X25, [X31+104]
	160 Move X28, [X31+80]
	161 Move X27, [X31+88]
	162 Move X30, [X31+64]
	163 Add X31, X31, 160
	164 Return 
	165 Add W25, W23, W21
	166 Move W8, 52
	167 Subtract W25, W25, 1
	168 NotImplemented "Instruction CMP not yet implemented."
	169 Compare X22, 0
	170 JumpIfEqual {176}
	171 Move W9, [X22+24]
	172 NotImplemented "Instruction CMP not yet implemented."
	173 NotImplemented "Instruction SMADDL not yet implemented."
	174 Move W9, [X9+52]
	175 NotImplemented "Instruction CMP not yet implemented."
	176 Call 0x1C17F20
	177 Call 0x1C17F28
	178 Call 0x3EB2B20

Method: System.Void Render(UnityEngine.Rendering.ScriptableRenderContext context, UnityEngine.Rendering.CommandBuffer cmd, ref UnityEngine.Rendering.Universal.RenderingData renderingData, ref UnityEngine.Rendering.FilteringSettings filterSettings, UnityEngine.Rendering.DrawingSettings drawSettings)

Disassembly:
	0x03A19A38 B.NE 0x3A192B0
	0x03A19A3C B 0x3A19BA4
	0x03A19A40 BL 0x1C16F20
	0x03A19A44 B 0x3A19CC4
	0x03A19A48 BL 0x1C16F20
	0x03A19A4C B 0x3A19CC4
	0x03A19A50 BL 0x1C16F28
	0x03A19A54 B 0x3A19CC4
	0x03A19A58 BL 0x1C16F20
	0x03A19A5C B 0x3A19CC4
	0x03A19A60 BL 0x1C16F28
	0x03A19A64 B 0x3A19CC4
	0x03A19A68 BL 0x1C16F20
	0x03A19A6C B 0x3A19CC4
	0x03A19A70 BL 0x1C16F20
	0x03A19A74 B 0x3A19CC4
	0x03A19A78 BL 0x1C16F20
	0x03A19A7C B 0x3A19CC4
	0x03A19A80 BL 0x1C16F28
	0x03A19A84 B 0x3A19CC4
	0x03A19A88 BL 0x1C16F20
	0x03A19A8C B 0x3A19CC4
	0x03A19A90 BL 0x1C16F20
	0x03A19A94 B 0x3A19CC4
	0x03A19A98 BL 0x1C16F20
	0x03A19A9C B 0x3A19CC4
	0x03A19AA0 BL 0x1C16F20
	0x03A19AA4 B 0x3A19CC4
	0x03A19AA8 BL 0x1C16F20
	0x03A19AAC B 0x3A19CC4
	0x03A19AB0 BL 0x1C16F20
	0x03A19AB4 B 0x3A19CC4
	0x03A19AB8 BL 0x1C16F20
	0x03A19ABC B 0x3A19CC4
	0x03A19AC0 B 0x3A19B3C
	0x03A19AC4 B 0x3A19B3C
	0x03A19AC8 B 0x3A19B3C
	0x03A19ACC B 0x3A19B3C
	0x03A19AD0 B 0x3A19B3C
	0x03A19AD4 B 0x3A19B3C
	0x03A19AD8 B 0x3A19B7C
	0x03A19ADC STR X22, [X31 + 0x48]
	0x03A19AE0 B 0x3A19B3C
	0x03A19AE4 B 0x3A19B3C
	0x03A19AE8 B 0x3A19B3C
	0x03A19AEC B 0x3A19B3C
	0x03A19AF0 B 0x3A19B3C
	0x03A19AF4 B 0x3A19B3C
	0x03A19AF8 B 0x3A19B3C
	0x03A19AFC B 0x3A19B7C
	0x03A19B00 B 0x3A19B3C
	0x03A19B04 B 0x3A19B3C
	0x03A19B08 B 0x3A19B3C
	0x03A19B0C B 0x3A19B3C
	0x03A19B10 B 0x3A19B3C
	0x03A19B14 B 0x3A19B3C
	0x03A19B18 B 0x3A19B3C
	0x03A19B1C B 0x3A19B7C
	0x03A19B20 B 0x3A19B3C
	0x03A19B24 B 0x3A19B3C
	0x03A19B28 B 0x3A19B7C
	0x03A19B2C B 0x3A19B3C
	0x03A19B30 B 0x3A19B3C
	0x03A19B34 B 0x3A19B7C
	0x03A19B38 B 0x3A19B7C
	0x03A19B3C LDR X27, [X31 + 0xB8]
	0x03A19B40 B 0x3A19B7C
	0x03A19B44 B 0x3A19B7C
	0x03A19B48 B 0x3A19B7C
	0x03A19B4C B 0x3A19B7C
	0x03A19B50 B 0x3A19B7C
	0x03A19B54 B 0x3A19B7C
	0x03A19B58 B 0x3A19B7C
	0x03A19B5C B 0x3A19B7C
	0x03A19B60 B 0x3A19B7C
	0x03A19B64 B 0x3A19B7C
	0x03A19B68 B 0x3A19B7C
	0x03A19B6C B 0x3A19B7C
	0x03A19B70 B 0x3A19B7C
	0x03A19B74 B 0x3A19B7C
	0x03A19B78 B 0x3A19B7C
	0x03A19B7C MOV X20, X1
	0x03A19B80 MOV X23, X0
	0x03A19B84 CMP W20, 0x1
	0x03A19B88 B.NE 0x3A19C58
	0x03A19B8C MOV X0, X23
	0x03A19B90 BL 0x3EB1AD0
	0x03A19B94 LDR X22, [X0]
	0x03A19B98 BL 0x3EB1AE0
	0x03A19B9C MOV W20, W31
	0x03A19BA0 B 0x3A19A0C
	0x03A19BA4 ADD X0, X31, 0x1000
	0x03A19BA8 ADD X0, X0, 0x308
	0x03A19BAC MOV X1, X31
	0x03A19BB0 BL 0x39B1DB4
	0x03A19BB4 LDP X8, X21, [X31 + 0x38]
	0x03A19BB8 CMP W8, W21
	0x03A19BBC B.LE 0x3A19C1C
	0x03A19BC0 LDR X10, [X31 + 0xB0]
	0x03A19BC4 CBZ X10, 0x3A19C9C
	0x03A19BC8 MOVZ W9, 0x34
	0x03A19BCC SXTW X8, W8
	0x03A19BD0 SMADDL X9, X21, X9, X10
	0x03A19BD4 ADD X22, X9, 0x20
	0x03A19BD8 SUB X20, X8, W21, SXTW
	0x03A19BDC LDR X8, [X31 + 0xB0]
	0x03A19BE0 LDR W8, [X8 + 0x18]
	0x03A19BE4 CMP W21, W8
	0x03A19BE8 B.CS 0x3A19C78
	0x03A19BEC MOV X0, X22
	0x03A19BF0 MOV X1, X19
	0x03A19BF4 BL 0x3A1B33C
	0x03A19BF8 ADD X22, X22, 0x34
	0x03A19BFC SUBS X20, X20, 0x1
	0x03A19C00 ADD W21, W21, 0x1

ISIL:
	001 Subtract X31, X31, 224
	002 Move [X31+144], X30
	003 Move [X31+152], X27
	004 Move [X31+160], X26
	005 Move [X31+168], X25
	006 Move [X31+176], X24
	007 Move [X31+184], X23
	008 Move [X31+192], X22
	009 Move [X31+200], X21
	010 Move [X31+208], X20
	011 Move [X31+216], X19
	012 Move X25, 0x9C9000
	013 Move [X31+136], X1
	014 Move X24, 0x73B000
	015 Move W8, [X25+4057]
	016 Move X24, [X24+4080]
	017 Move X20, X5
	018 Move X19, X4
	019 Move X21, X3
	020 Move X22, X2
	021 Move X23, X1
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {43}
	026 Move X0, 0x73C000
	027 Move X0, [X0+176]
	028 Call 0x1C17CF4
	029 Move X0, 0x738000
	030 Move X0, [X0+3200]
	031 Call 0x1C17CF4
	032 Move X0, 0x73B000
	033 Move X0, [X0+4080]
	034 Call 0x1C17CF4
	035 Move X0, 0x73C000
	036 Move X0, [X0+1656]
	037 Call 0x1C17CF4
	038 Move X0, 0x73C000
	039 Move X0, [X0+1664]
	040 Call 0x1C17CF4
	041 Move W8, 1
	042 Move [X25+4057], W8
	043 Move X0, [X24]
	044 NotImplemented "Instruction MOVI not yet implemented."
	045 Move [X31+108], V0
	046 Move [X31+80], V0
	047 Move [X31+88], V0
	048 Move [X31+48], V0
	049 Move [X31+56], V0
	050 Move [X31+16], V0
	051 Move [X31+24], V0
	052 Move W8, [X0+224]
	053 Compare W8, 0
	054 JumpIfNotEqual {56}
	055 Call 0x1C17DFC
	056 Move X0, X21
	057 Move X1, X31
	058 Call ScriptableRenderPass.GetActiveDebugHandler, X0
	059 Compare X0, 0
	060 JumpIfEqual {113}
	061 Move X27, 0x73C000
	062 Move X27, [X27+1664]
	063 Move X24, X0
	064 NotImplemented "Instruction MOVI not yet implemented."
	065 Move [X31+108], V0
	066 Move X0, [X27]
	067 Move [X31+80], V0
	068 Move [X31+88], V0
	069 Move [X31+48], V0
	070 Move [X31+56], V0
	071 Move [X31+16], V0
	072 Move [X31+24], V0
	073 Move W8, [X0+224]
	074 Compare W8, 0
	075 JumpIfNotEqual {78}
	076 Call 0x1C17DFC
	077 Move X0, [X27]
	078 Move X8, [X0+184]
	079 Move X25, [X8+8]
	080 Compare X25, 0
	081 JumpIfNotEqual {103}
	082 Move W8, [X0+224]
	083 Compare W8, 0
	084 JumpIfNotEqual {87}
	085 Call 0x1C17DFC
	086 Move X0, [X27]
	087 Move X9, 0x73C000
	088 Move X8, [X0+184]
	089 Move X9, [X9+176]
	090 Move X26, [X8]
	091 Move X0, [X9]
	092 Call 0x1C17F10
	093 Move X8, 0x73C000
	094 Move X8, [X8+1656]
	095 Move X1, X26
	096 Move X3, X31
	097 Move X25, X0
	098 Move X2, [X8]
	099 Call DrawFunction..ctor, X0, X1, X2
	100 Move X8, [X27]
	101 Move X8, [X8+184]
	102 Move [X8+8], X25
	103 Add X6, X31, 16
	104 Move X0, X24
	105 Move X1, X23
	106 Move X2, X22
	107 Move X3, X21
	108 Move X4, X20
	109 Move X5, X19
	110 Move X7, X25
	111 Move [X31], X31
	112 Call DebugHandler.DrawWithDebugRenderState, X0, X1, X2, X3, X4, X5, X6, X7
	113 Move X8, 0x738000
	114 Move X8, [X8+3200]
	115 Move X22, [X21+8]
	116 Move X21, [X21+16]
	117 Move X0, [X8]
	118 Move W8, [X0+224]
	119 Compare W8, 0
	120 JumpIfNotEqual {122}
	121 Call 0x1C17DFC
	122 Add X0, X31, 136
	123 Move X1, X22
	124 Move X2, X21
	125 Move X3, X20
	126 Move X4, X19
	127 Move X5, X31
	128 Call ScriptableRenderContext.DrawRenderers, X0, X1, X2, X3
	129 Move X20, [X31+208]
	130 Move X19, [X31+216]
	131 Move X22, [X31+192]
	132 Move X21, [X31+200]
	133 Move X24, [X31+176]
	134 Move X23, [X31+184]
	135 Move X26, [X31+160]
	136 Move X25, [X31+168]
	137 Move X30, [X31+144]
	138 Move X27, [X31+152]
	139 Add X31, X31, 224
	140 Return 

Method: System.Int32 DrawLayerBatches(UnityEngine.Rendering.Universal.LayerBatch[] layerBatches, System.Int32 batchCount, System.Int32 startIndex, UnityEngine.Rendering.CommandBuffer cmd, UnityEngine.Rendering.ScriptableRenderContext context, ref UnityEngine.Rendering.Universal.RenderingData renderingData, ref UnityEngine.Rendering.FilteringSettings filterSettings, ref UnityEngine.Rendering.DrawingSettings normalsDrawSettings, ref UnityEngine.Rendering.DrawingSettings drawSettings, ref UnityEngine.RenderTextureDescriptor desc)

Disassembly:
	0x03A19C04 B.NE 0x3A19BDC
	0x03A19C08 B 0x3A19C1C
	0x03A19C0C ADD X0, X31, 0x1000
	0x03A19C10 ADD X0, X0, 0x308
	0x03A19C14 MOV X1, X31
	0x03A19C18 BL 0x39B1DB4
	0x03A19C1C LDR X8, [X31 + 0x30]
	0x03A19C20 LDR X8, [X8 + 0x28]
	0x03A19C24 LDR X9, [X31 + 0x1748]
	0x03A19C28 CMP X8, X9
	0x03A19C2C B.NE 0x3A19CC0
	0x03A19C30 LDR W0, [X31 + 0x9C]
	0x03A19C34 ADD X31, X31, 0x1000
	0x03A19C38 ADD X31, X31, 0x750
	0x03A19C3C LDP X20, X19, [X31 + 0x50]
	0x03A19C40 LDP X22, X21, [X31 + 0x40]
	0x03A19C44 LDP X24, X23, [X31 + 0x30]
	0x03A19C48 LDP X26, X25, [X31 + 0x20]
	0x03A19C4C LDP X28, X27, [X31 + 0x10]
	0x03A19C50 LDP X29, X30, [X31], #0x60
	0x03A19C54 RET
	0x03A19C58 MOV X22, X31
	0x03A19C5C ADD X0, X31, 0x1000
	0x03A19C60 ADD X0, X0, 0x300
	0x03A19C64 MOV X1, X31
	0x03A19C68 BL 0x39B1DB4
	0x03A19C6C CBZ X22, 0x3A19D1C
	0x03A19C70 MOV X0, X22
	0x03A19C74 BL 0x1C16F18
	0x03A19C78 BL 0x1C16F28
	0x03A19C7C MOV X0, X22
	0x03A19C80 BL 0x1C16F18
	0x03A19C84 BL 0x1C16F28
	0x03A19C88 STR W31, [X31 + 0x9C]
	0x03A19C8C BL 0x1C16F20
	0x03A19C90 MOV X0, X24
	0x03A19C94 BL 0x1C16F18
	0x03A19C98 BL 0x1C16F20
	0x03A19C9C BL 0x1C16F20
	0x03A19CA0 MOV X24, X31
	0x03A19CA4 ADD X0, X31, 0x1000
	0x03A19CA8 ADD X0, X0, 0x300
	0x03A19CAC MOV X1, X31
	0x03A19CB0 BL 0x39B1DB4
	0x03A19CB4 CBZ X24, 0x3A19D7C
	0x03A19CB8 MOV X0, X24
	0x03A19CBC BL 0x1C16F18
	0x03A19CC0 BL 0x3EB1B20
	0x03A19CC4 MOV X23, X0
	0x03A19CC8 STR X1, [X31 + 0x80]
	0x03A19CCC B 0x3A19CA4
	0x03A19CD0 MOV X20, X1
	0x03A19CD4 MOV X23, X0
	0x03A19CD8 B 0x3A19C5C
	0x03A19CDC B 0x3A19D14
	0x03A19CE0 B 0x3A19D14
	0x03A19CE4 B 0x3A19D74
	0x03A19CE8 B 0x3A19D74
	0x03A19CEC B 0x3A19D74
	0x03A19CF0 B 0x3A19D74
	0x03A19CF4 B 0x3A19D14
	0x03A19CF8 B 0x3A19D74
	0x03A19CFC B 0x3A19D74
	0x03A19D00 B 0x3A19D74
	0x03A19D04 B 0x3A19D74
	0x03A19D08 B 0x3A19D74
	0x03A19D0C B 0x3A19D14
	0x03A19D10 B 0x3A19D14
	0x03A19D14 MOV X20, X1
	0x03A19D18 MOV X23, X0
	0x03A19D1C CMP W20, 0x1
	0x03A19D20 B.NE 0x3A19D4C
	0x03A19D24 MOV X0, X23
	0x03A19D28 BL 0x3EB1AD0
	0x03A19D2C LDR X22, [X0]
	0x03A19D30 BL 0x3EB1AE0
	0x03A19D34 ADD X0, X31, 0x1000
	0x03A19D38 ADD X0, X0, 0x308
	0x03A19D3C MOV X1, X31
	0x03A19D40 BL 0x39B1DB4
	0x03A19D44 CBZ X22, 0x3A19BB4
	0x03A19D48 B 0x3A19DB8
	0x03A19D4C MOV X22, X31
	0x03A19D50 B 0x3A19D58
	0x03A19D54 MOV X23, X0
	0x03A19D58 ADD X0, X31, 0x1000
	0x03A19D5C ADD X0, X0, 0x308
	0x03A19D60 MOV X1, X31
	0x03A19D64 BL 0x39B1DB4
	0x03A19D68 CBZ X22, 0x3A19DE0
	0x03A19D6C MOV X0, X22
	0x03A19D70 BL 0x1C16F18
	0x03A19D74 MOV X23, X0
	0x03A19D78 STR X1, [X31 + 0x80]
	0x03A19D7C LDR X8, [X31 + 0x80]
	0x03A19D80 CMP W8, 0x1
	0x03A19D84 B.NE 0x3A19DC0
	0x03A19D88 MOV X0, X23
	0x03A19D8C BL 0x3EB1AD0
	0x03A19D90 LDR X22, [X0]
	0x03A19D94 BL 0x3EB1AE0
	0x03A19D98 ADD X0, X31, 0x1000
	0x03A19D9C ADD X0, X0, 0x308
	0x03A19DA0 MOV X1, X31
	0x03A19DA4 BL 0x39B1DB4
	0x03A19DA8 LDR X25, [X31 + 0x40]
	0x03A19DAC LDR X8, [X31 + 0xA0]
	0x03A19DB0 LDR X27, [X31 + 0xB8]
	0x03A19DB4 CBZ X22, 0x3A19130
	0x03A19DB8 MOV X0, X22
	0x03A19DBC BL 0x1C16F18
	0x03A19DC0 MOV X22, X31
	0x03A19DC4 B 0x3A19DCC
	0x03A19DC8 MOV X23, X0
	0x03A19DCC ADD X0, X31, 0x1000
	0x03A19DD0 ADD X0, X0, 0x308
	0x03A19DD4 MOV X1, X31
	0x03A19DD8 BL 0x39B1DB4
	0x03A19DDC CBNZ X22, 0x3A19DE8
	0x03A19DE0 MOV X0, X23
	0x03A19DE4 BL 0x1D2C690
	0x03A19DE8 MOV X0, X22
	0x03A19DEC BL 0x1C16F18
	0x03A19DF0 BL 0x1990590
	0x03A19DF4 STP D11, D10, [X31 - 0x80]!
	0x03A19DF8 STP D9, D8, [X31 + 0x10]
	0x03A19DFC STP X29, X30, [X31 + 0x20]
	0x03A19E00 STP X28, X27, [X31 + 0x30]
	0x03A19E04 STP X26, X25, [X31 + 0x40]
	0x03A19E08 STP X24, X23, [X31 + 0x50]
	0x03A19E0C STP X22, X21, [X31 + 0x60]
	0x03A19E10 STP X20, X19, [X31 + 0x70]
	0x03A19E14 SUB X31, X31, 0x6E0
	0x03A19E18 ADRP X22, 0x9C8000
	0x03A19E1C STR X1, [X31 + 0x6D8]
	0x03A19E20 ADRP X27, 0x73B000
	0x03A19E24 LDRB W8, [X22 + 0xFF9]
	0x03A19E28 LDR X27, [X27 + 0x658]
	0x03A19E2C MOV X26, X6
	0x03A19E30 MOV X24, X5
	0x03A19E34 MOV X19, X4
	0x03A19E38 MOV X20, X3
	0x03A19E3C MOV X21, X2
	0x03A19E40 MOV X23, X0
	0x03A19E44 TBNZ X8, 0x0, 0x3A19E8C
	0x03A19E48 ADRP X0, 0x702000
	0x03A19E4C LDR X0, [X0 + 0x8F8]
	0x03A19E50 BL 0x1C16CF4
	0x03A19E54 ADRP X0, 0x73B000
	0x03A19E58 LDR X0, [X0 + 0xB8]
	0x03A19E5C BL 0x1C16CF4
	0x03A19E60 ADRP X0, 0x73B000
	0x03A19E64 LDR X0, [X0 + 0x660]
	0x03A19E68 BL 0x1C16CF4
	0x03A19E6C ADRP X0, 0x73B000
	0x03A19E70 LDR X0, [X0 + 0x658]
	0x03A19E74 BL 0x1C16CF4
	0x03A19E78 ADRP X0, 0x737000
	0x03A19E7C LDR X0, [X0 + 0xC80]
	0x03A19E80 BL 0x1C16CF4
	0x03A19E84 MOVZ W8, 0x1
	0x03A19E88 STRB W8, [X22 + 0xFF9]
	0x03A19E8C LDR X0, [X27]
	0x03A19E90 STRB W31, [X31 + 0x6D0]
	0x03A19E94 LDR X22, [X21]
	0x03A19E98 LDR W8, [X0 + 0xE0]
	0x03A19E9C CBNZ W8, 0x3A19EA8
	0x03A19EA0 BL 0x1C16DFC
	0x03A19EA4 LDR X0, [X27]
	0x03A19EA8 LDR X8, [X0 + 0xB8]
	0x03A19EAC ADD X0, X31, 0x6D0
	0x03A19EB0 MOV X1, X22
	0x03A19EB4 MOV X3, X31
	0x03A19EB8 LDR X2, [X8]
	0x03A19EBC BL 0x39B1DB0
	0x03A19EC0 LDR X8, [X24 + 0x20]
	0x03A19EC4 LDP V1, V0, [X24]
	0x03A19EC8 STR X8, [X31 + 0x3A0]
	0x03A19ECC STP V1, V0, [X31 + 0x380]
	0x03A19ED0 ADD X8, X31, 0x6A0
	0x03A19ED4 MOV W0, W31
	0x03A19ED8 MOV X1, X31
	0x03A19EDC BL 0x3C4B204
	0x03A19EE0 LDR V0, [X31 + 0x6A]
	0x03A19EE4 LDR V1, [X31 + 0x6B]
	0x03A19EE8 LDR X8, [X31 + 0x6C0]
	0x03A19EEC LDP V2, V3, [X31 + 0x380]
	0x03A19EF0 LDR X9, [X31 + 0x3A0]
	0x03A19EF4 STR V0, [X31 + 0x64]
	0x03A19EF8 STR V1, [X31 + 0x65]
	0x03A19EFC STR X8, [X31 + 0x660]
	0x03A19F00 STR V2, [X31 + 0x67]
	0x03A19F04 STR V3, [X31 + 0x68]
	0x03A19F08 STR X9, [X31 + 0x690]
	0x03A19F0C ADD X0, X31, 0x670
	0x03A19F10 ADD X1, X31, 0x640
	0x03A19F14 MOV X2, X31
	0x03A19F18 BL 0x3C4B708
	0x03A19F1C ADRP X28, 0x73B000
	0x03A19F20 LDR X28, [X28 + 0x660]
	0x03A19F24 FMOV S8, 1
	0x03A19F28 TBNZ X0, 0x0, 0x3A19FA8
	0x03A19F2C CBZ X23, 0x3A1A39C
	0x03A19F30 LDR X8, [X23]
	0x03A19F34 LDR X1, [X28]
	0x03A19F38 LDRH W9, [X8 + 0x12E]
	0x03A19F3C CBZ X9, 0x3A19F60
	0x03A19F40 LDR X10, [X8 + 0xB0]
	0x03A19F44 ADD X10, X10, 0x8
	0x03A19F48 LDUR X11, [X10 - 0x8]
	0x03A19F4C CMP X11, X1
	0x03A19F50 B.EQ 0x3A19F70
	0x03A19F54 SUBS X9, X9, 0x1
	0x03A19F58 ADD X10, X10, 0x10
	0x03A19F5C B.NE 0x3A19F48
	0x03A19F60 MOV X0, X23
	0x03A19F64 MOV W2, W31
	0x03A19F68 BL 0x1C5C788
	0x03A19F6C B 0x3A19F7C
	0x03A19F70 LDRSW X9, [X10]
	0x03A19F74 ADD X8, X8, X9, 0x4, LSL
	0x03A19F78 ADD X0, X8, 0x138
	0x03A19F7C LDP X8, X1, [X0]
	0x03A19F80 MOV X0, X23
	0x03A19F84 BLR X8
	0x03A19F88 CBZ X0, 0x3A1A3A0
	0x03A19F8C ADRP X8, 0xFFFFFFFFFD0D1000
	0x03A19F90 LDR V0, [X0 + 0x50]
	0x03A19F94 LDR V8, [X8 + 0x330]
	0x03A19F98 FCMP S0, S8
	0x03A19F9C B.MI 0x3A19FA8
	0x03A19FA0 FMOV S1, 1
	0x03A19FA4 FMIN S8, S0, S1
	0x03A19FA8 ADD X0, X31, 0x380
	0x03A19FAC MOVZ W2, 0x2B8
	0x03A19FB0 MOV X1, X21
	0x03A19FB4 BL 0x3EB1AC0
	0x03A19FB8 LDR X0, [X27]
	0x03A19FBC LDR W8, [X0 + 0xE0]
	0x03A19FC0 CBNZ W8, 0x3A19FC8
	0x03A19FC4 BL 0x1C16DFC
	0x03A19FC8 ADD X0, X31, 0xC8
	0x03A19FCC ADD X1, X31, 0x380
	0x03A19FD0 MOVZ W2, 0x2B8
	0x03A19FD4 BL 0x3EB1AC0
	0x03A19FD8 ADD X1, X31, 0xC8
	0x03A19FDC MOV X0, X23
	0x03A19FE0 MOV X2, X22
	0x03A19FE4 MOV V0.16B, V8.16B
	0x03A19FE8 BL 0x3A1DFD4
	0x03A19FEC LDR W8, [X21 + 0xF8]
	0x03A19FF0 CMP W8, 0x1
	0x03A19FF4 CSET W25, GT
	0x03A19FF8 CBZ X23, 0x3A1A390
	0x03A19FFC LDR X8, [X23]
	0x03A1A000 LDR X1, [X28]
	0x03A1A004 LDRH W9, [X8 + 0x12E]
	0x03A1A008 CBZ X9, 0x3A1A02C
	0x03A1A00C LDR X10, [X8 + 0xB0]
	0x03A1A010 ADD X10, X10, 0x8
	0x03A1A014 LDUR X11, [X10 - 0x8]
	0x03A1A018 CMP X11, X1
	0x03A1A01C B.EQ 0x3A1A03C
	0x03A1A020 SUBS X9, X9, 0x1
	0x03A1A024 ADD X10, X10, 0x10
	0x03A1A028 B.NE 0x3A1A014
	0x03A1A02C MOV X0, X23
	0x03A1A030 MOV W2, W31
	0x03A1A034 BL 0x1C5C788
	0x03A1A038 B 0x3A1A048
	0x03A1A03C LDRSW X9, [X10]
	0x03A1A040 ADD X8, X8, X9, 0x4, LSL
	0x03A1A044 ADD X0, X8, 0x138
	0x03A1A048 LDP X8, X1, [X0]
	0x03A1A04C MOV X0, X23
	0x03A1A050 BLR X8
	0x03A1A054 CBZ X0, 0x3A1A394
	0x03A1A058 LDRB W9, [X26]
	0x03A1A05C LDRB W8, [X0 + 0x60]
	0x03A1A060 STRB W31, [X26]
	0x03A1A064 LDR X11, [X24 + 0x20]
	0x03A1A068 LDP V0, V1, [X24]
	0x03A1A06C CMP W9, 0x0
	0x03A1A070 MOVZ W10, 0x7
	0x03A1A074 CCMP W8, 0x0, 0x4, NE
	0x03A1A078 CSINC W26, W10, W31, NE
	0x03A1A07C STR X11, [X31 + 0x3A0]
	0x03A1A080 STP V0, V1, [X31 + 0x380]
	0x03A1A084 ADD X8, X31, 0x6A0
	0x03A1A088 MOV W0, W31
	0x03A1A08C MOV X1, X31
	0x03A1A090 BL 0x3C4B204
	0x03A1A094 LDR V0, [X31 + 0x6A]
	0x03A1A098 LDR V1, [X31 + 0x6B]
	0x03A1A09C LDR X8, [X31 + 0x6C0]
	0x03A1A0A0 LDP V2, V3, [X31 + 0x380]
	0x03A1A0A4 LDR X9, [X31 + 0x3A0]
	0x03A1A0A8 STP V0, V1, [X31 + 0x70]
	0x03A1A0AC STR X8, [X31 + 0x90]
	0x03A1A0B0 STP V2, V3, [X31 + 0xA0]
	0x03A1A0B4 STR X9, [X31 + 0xC0]
	0x03A1A0B8 ADD X0, X31, 0xA0
	0x03A1A0BC ADD X1, X31, 0x70
	0x03A1A0C0 MOV X2, X31
	0x03A1A0C4 BL 0x3C4B708
	0x03A1A0C8 LDR X8, [X23]
	0x03A1A0CC LDR X1, [X28]
	0x03A1A0D0 LDRH W9, [X8 + 0x12E]
	0x03A1A0D4 TBZ X0, 0x0, 0x3A1A10C
	0x03A1A0D8 CBZ W9, 0x3A1A0FC
	0x03A1A0DC LDR X10, [X8 + 0xB0]
	0x03A1A0E0 ADD X10, X10, 0x8
	0x03A1A0E4 LDUR X11, [X10 - 0x8]
	0x03A1A0E8 CMP X11, X1
	0x03A1A0EC B.EQ 0x3A1A140
	0x03A1A0F0 SUBS X9, X9, 0x1
	0x03A1A0F4 ADD X10, X10, 0x10
	0x03A1A0F8 B.NE 0x3A1A0E4
	0x03A1A0FC MOV X0, X23
	0x03A1A100 MOV W2, W31
	0x03A1A104 BL 0x1C5C788
	0x03A1A108 B 0x3A1A14C
	0x03A1A10C CBZ W9, 0x3A1A130
	0x03A1A110 LDR X10, [X8 + 0xB0]
	0x03A1A114 ADD X10, X10, 0x8
	0x03A1A118 LDUR X11, [X10 - 0x8]
	0x03A1A11C CMP X11, X1
	0x03A1A120 B.EQ 0x3A1A22C
	0x03A1A124 SUBS X9, X9, 0x1
	0x03A1A128 ADD X10, X10, 0x10
	0x03A1A12C B.NE 0x3A1A118
	0x03A1A130 MOV X0, X23
	0x03A1A134 MOV W2, W31
	0x03A1A138 BL 0x1C5C788
	0x03A1A13C B 0x3A1A238
	0x03A1A140 LDRSW X9, [X10]
	0x03A1A144 ADD X8, X8, X9, 0x4, LSL
	0x03A1A148 ADD X0, X8, 0x138
	0x03A1A14C LDP X8, X1, [X0]
	0x03A1A150 MOV X0, X23
	0x03A1A154 BLR X8
	0x03A1A158 CBZ X0, 0x3A1A3A4
	0x03A1A15C LDR X0, [X0 + 0x128]
	0x03A1A160 ADD X8, X31, 0x6A0
	0x03A1A164 MOV X1, X31
	0x03A1A168 BL 0x39CDF64
	0x03A1A16C LDR V0, [X31 + 0x6A]
	0x03A1A170 LDR V1, [X31 + 0x6B]
	0x03A1A174 LDR X8, [X31 + 0x6C0]
	0x03A1A178 LDR X0, [X27]
	0x03A1A17C STP V0, V1, [X31 + 0x380]
	0x03A1A180 STR X8, [X31 + 0x3A0]
	0x03A1A184 LDR X8, [X24 + 0x20]
	0x03A1A188 LDP V1, V0, [X24]
	0x03A1A18C STR X8, [X31 + 0x6C0]
	0x03A1A190 STR V0, [X31 + 0x6B]
	0x03A1A194 STR V1, [X31 + 0x6A]
	0x03A1A198 LDR W8, [X0 + 0xE0]
	0x03A1A19C CBNZ W8, 0x3A1A1A8
	0x03A1A1A0 BL 0x1C16DFC
	0x03A1A1A4 LDR X0, [X27]
	0x03A1A1A8 ADRP X9, 0x701000
	0x03A1A1AC LDR X8, [X0 + 0xB8]
	0x03A1A1B0 LDR X9, [X9 + 0x8F8]
	0x03A1A1B4 LDP S11, S10, [X8 + 0xC]
	0x03A1A1B8 LDR X0, [X9]
	0x03A1A1BC LDP S9, S8, [X8 + 0x14]
	0x03A1A1C0 LDR W9, [X0 + 0xE0]
	0x03A1A1C4 CBNZ W9, 0x3A1A1CC
	0x03A1A1C8 BL 0x1C16DFC
	0x03A1A1CC LDP V0, V1, [X31 + 0x380]
	0x03A1A1D0 LDR X8, [X31 + 0x3A0]
	0x03A1A1D4 LDR V2, [X31 + 0x6A]
	0x03A1A1D8 LDR V3, [X31 + 0x6B]
	0x03A1A1DC LDR X9, [X31 + 0x6C0]
	0x03A1A1E0 STP V0, V1, [X31 + 0x40]
	0x03A1A1E4 STR X8, [X31 + 0x60]
	0x03A1A1E8 STP V2, V3, [X31 + 0x10]
	0x03A1A1EC STR X9, [X31 + 0x30]
	0x03A1A1F0 ADD X1, X31, 0x40
	0x03A1A1F4 ADD X4, X31, 0x10
	0x03A1A1F8 MOVZ W2, 0x2
	0x03A1A1FC MOV X0, X22
	0x03A1A200 MOV W3, W25
	0x03A1A204 MOV W5, W31
	0x03A1A208 MOV W6, W31
	0x03A1A20C MOV W7, W26
	0x03A1A210 MOV V0.16B, V11.16B
	0x03A1A214 MOV V1.16B, V10.16B
	0x03A1A218 MOV V2.16B, V9.16B
	0x03A1A21C MOV V3.16B, V8.16B
	0x03A1A220 STR X31, [X31]
	0x03A1A224 BL 0x39E710C
	0x03A1A228 B 0x3A1A2C0
	0x03A1A22C LDRSW X9, [X10]
	0x03A1A230 ADD X8, X8, X9, 0x4, LSL
	0x03A1A234 ADD X0, X8, 0x138
	0x03A1A238 LDP X8, X1, [X0]
	0x03A1A23C MOV X0, X23
	0x03A1A240 BLR X8
	0x03A1A244 MOV X8, X0
	0x03A1A248 CBZ X0, 0x3A1A3A8
	0x03A1A24C LDR X0, [X27]
	0x03A1A250 LDR X23, [X8 + 0x128]
	0x03A1A254 LDR W9, [X0 + 0xE0]
	0x03A1A258 CBNZ W9, 0x3A1A264
	0x03A1A25C BL 0x1C16DFC
	0x03A1A260 LDR X0, [X27]
	0x03A1A264 ADRP X9, 0x701000
	0x03A1A268 LDR X8, [X0 + 0xB8]
	0x03A1A26C LDR X9, [X9 + 0x8F8]
	0x03A1A270 LDP S10, S8, [X8 + 0xC]
	0x03A1A274 LDR X0, [X9]
	0x03A1A278 LDP S11, S9, [X8 + 0x14]
	0x03A1A27C LDR W9, [X0 + 0xE0]
	0x03A1A280 CBNZ W9, 0x3A1A288
	0x03A1A284 BL 0x1C16DFC
	0x03A1A288 MOVZ W2, 0x2
	0x03A1A28C MOVN W6, 0x0
	0x03A1A290 MOVN W7, 0x0
	0x03A1A294 MOV X0, X22
	0x03A1A298 MOV X1, X23
	0x03A1A29C MOV W3, W25
	0x03A1A2A0 MOV W4, W26
	0x03A1A2A4 MOV V0.16B, V10.16B
	0x03A1A2A8 MOV V1.16B, V8.16B
	0x03A1A2AC MOV V2.16B, V11.16B
	0x03A1A2B0 MOV V3.16B, V9.16B
	0x03A1A2B4 MOV W5, W31
	0x03A1A2B8 STR X31, [X31]
	0x03A1A2BC BL 0x39E329C
	0x03A1A2C0 ADRP X8, 0x736000
	0x03A1A2C4 LDR X8, [X8 + 0xC80]
	0x03A1A2C8 LDR X0, [X8]
	0x03A1A2CC LDR W8, [X0 + 0xE0]
	0x03A1A2D0 CBNZ W8, 0x3A1A2D8
	0x03A1A2D4 BL 0x1C16DFC
	0x03A1A2D8 ADD X0, X31, 0x6D8
	0x03A1A2DC MOV X1, X22
	0x03A1A2E0 MOV X2, X31
	0x03A1A2E4 BL 0x3C58FE4
	0x03A1A2E8 CBZ X22, 0x3A1A398
	0x03A1A2EC MOV X0, X22
	0x03A1A2F0 MOV X1, X31
	0x03A1A2F4 BL 0x3C4C310
	0x03A1A2F8 LDR X0, [X27]
	0x03A1A2FC LDR W8, [X0 + 0xE0]
	0x03A1A300 CBNZ W8, 0x3A1A30C
	0x03A1A304 BL 0x1C16DFC
	0x03A1A308 LDR X0, [X27]
	0x03A1A30C ADRP X8, 0x73A000
	0x03A1A310 LDR X8, [X8 + 0xB8]
	0x03A1A314 LDR X9, [X0 + 0xB8]
	0x03A1A318 LDR X8, [X8]
	0x03A1A31C LDR W22, [X9 + 0x8]
	0x03A1A320 LDR W10, [X8 + 0xE0]
	0x03A1A324 CBNZ W10, 0x3A1A330
	0x03A1A328 MOV X0, X8
	0x03A1A32C BL 0x1C16DFC
	0x03A1A330 MOV X0, X20
	0x03A1A334 MOV W1, W31
	0x03A1A338 MOV X2, X22
	0x03A1A33C MOV X3, X31
	0x03A1A340 BL 0x3C538D4
	0x03A1A344 LDP X1, X2, [X21 + 0x8]
	0x03A1A348 ADD X0, X31, 0x6D8
	0x03A1A34C MOV X3, X20
	0x03A1A350 MOV X4, X19
	0x03A1A354 MOV X5, X31
	0x03A1A358 BL 0x3C58AC8
	0x03A1A35C ADD X0, X31, 0x6D0
	0x03A1A360 MOV X1, X31
	0x03A1A364 BL 0x39B1DB4
	0x03A1A368 ADD X31, X31, 0x6E0
	0x03A1A36C LDP X20, X19, [X31 + 0x70]
	0x03A1A370 LDP X22, X21, [X31 + 0x60]
	0x03A1A374 LDP X24, X23, [X31 + 0x50]
	0x03A1A378 LDP X26, X25, [X31 + 0x40]
	0x03A1A37C LDP X28, X27, [X31 + 0x30]
	0x03A1A380 LDP X29, X30, [X31 + 0x20]
	0x03A1A384 LDP D9, D8, [X31 + 0x10]
	0x03A1A388 LDP D11, D10, [X31], #0x80
	0x03A1A38C RET
	0x03A1A390 BL 0x1C16F20
	0x03A1A394 BL 0x1C16F20
	0x03A1A398 BL 0x1C16F20
	0x03A1A39C BL 0x1C16F20
	0x03A1A3A0 BL 0x1C16F20
	0x03A1A3A4 BL 0x1C16F20
	0x03A1A3A8 BL 0x1C16F20
	0x03A1A3AC B 0x3A1A3F8
	0x03A1A3B0 B 0x3A1A3F8
	0x03A1A3B4 B 0x3A1A3F8
	0x03A1A3B8 B 0x3A1A3F8
	0x03A1A3BC B 0x3A1A3F8
	0x03A1A3C0 B 0x3A1A3F8
	0x03A1A3C4 B 0x3A1A3F8
	0x03A1A3C8 B 0x3A1A3F8
	0x03A1A3CC B 0x3A1A3F8
	0x03A1A3D0 B 0x3A1A3F8
	0x03A1A3D4 B 0x3A1A3F8
	0x03A1A3D8 B 0x3A1A3F8
	0x03A1A3DC B 0x3A1A3F8
	0x03A1A3E0 B 0x3A1A3F8
	0x03A1A3E4 B 0x3A1A3F8
	0x03A1A3E8 B 0x3A1A3F8
	0x03A1A3EC B 0x3A1A3F8
	0x03A1A3F0 B 0x3A1A3F8
	0x03A1A3F4 B 0x3A1A3F8
	0x03A1A3F8 MOV X19, X0
	0x03A1A3FC CMP W1, 0x1
	0x03A1A400 B.NE 0x3A1A42C
	0x03A1A404 MOV X0, X19
	0x03A1A408 BL 0x3EB1AD0
	0x03A1A40C LDR X20, [X0]
	0x03A1A410 BL 0x3EB1AE0
	0x03A1A414 ADD X0, X31, 0x6D0
	0x03A1A418 MOV X1, X31
	0x03A1A41C BL 0x39B1DB4
	0x03A1A420 CBZ X20, 0x3A1A368
	0x03A1A424 MOV X0, X20
	0x03A1A428 BL 0x1C16F18
	0x03A1A42C MOV X20, X31
	0x03A1A430 B 0x3A1A438
	0x03A1A434 MOV X19, X0
	0x03A1A438 ADD X0, X31, 0x6D0
	0x03A1A43C MOV X1, X31
	0x03A1A440 BL 0x39B1DB4
	0x03A1A444 CBNZ X20, 0x3A1A450
	0x03A1A448 MOV X0, X19
	0x03A1A44C BL 0x1D2C690
	0x03A1A450 MOV X0, X20
	0x03A1A454 BL 0x1C16F18
	0x03A1A458 BL 0x1990590
	0x03A1A45C STR D12, [X31 - 0x90]!
	0x03A1A460 STP D11, D10, [X31 + 0x10]
	0x03A1A464 STP D9, D8, [X31 + 0x20]
	0x03A1A468 STP X29, X30, [X31 + 0x30]
	0x03A1A46C STP X28, X27, [X31 + 0x40]
	0x03A1A470 STP X26, X25, [X31 + 0x50]
	0x03A1A474 STP X24, X23, [X31 + 0x60]
	0x03A1A478 STP X22, X21, [X31 + 0x70]
	0x03A1A47C STP X20, X19, [X31 + 0x80]
	0x03A1A480 SUB X31, X31, 0x690
	0x03A1A484 ADRP X19, 0x9C7000
	0x03A1A488 LDRB W8, [X19 + 0xFFA]
	0x03A1A48C MOV X20, X4
	0x03A1A490 MOV W21, W3
	0x03A1A494 MOV X22, X2
	0x03A1A498 MOV X24, X0
	0x03A1A49C STR X5, [X31 + 0x698]
	0x03A1A4A0 STR X1, [X31 + 0x28]
	0x03A1A4A4 TBNZ X8, 0x0, 0x3A1A4F8
	0x03A1A4A8 ADRP X0, 0x73A000
	0x03A1A4AC LDR X0, [X0 + 0x668]
	0x03A1A4B0 BL 0x1C16CF4
	0x03A1A4B4 ADRP X0, 0x73A000
	0x03A1A4B8 LDR X0, [X0 + 0x660]
	0x03A1A4BC BL 0x1C16CF4
	0x03A1A4C0 ADRP X0, 0x73A000
	0x03A1A4C4 LDR X0, [X0 + 0x498]
	0x03A1A4C8 BL 0x1C16CF4
	0x03A1A4CC ADRP X0, 0x73A000
	0x03A1A4D0 LDR X0, [X0 + 0x548]
	0x03A1A4D4 BL 0x1C16CF4
	0x03A1A4D8 ADRP X0, 0x73A000
	0x03A1A4DC LDR X0, [X0 + 0x670]
	0x03A1A4E0 BL 0x1C16CF4
	0x03A1A4E4 ADRP X0, 0x73A000
	0x03A1A4E8 LDR X0, [X0 + 0x658]
	0x03A1A4EC BL 0x1C16CF4
	0x03A1A4F0 MOVZ W8, 0x1
	0x03A1A4F4 STRB W8, [X19 + 0xFFA]
	0x03A1A4F8 STR X31, [X31 + 0x688]
	0x03A1A4FC STR X31, [X31 + 0x680]
	0x03A1A500 CBZ X24, 0x3A1A9A8
	0x03A1A504 ADRP X10, 0x73A000
	0x03A1A508 LDR X8, [X24]
	0x03A1A50C LDR X10, [X10 + 0x660]
	0x03A1A510 LDRH W9, [X8 + 0x12E]
	0x03A1A514 LDR X1, [X10]
	0x03A1A518 CBZ X9, 0x3A1A53C
	0x03A1A51C LDR X10, [X8 + 0xB0]
	0x03A1A520 ADD X10, X10, 0x8
	0x03A1A524 LDUR X11, [X10 - 0x8]
	0x03A1A528 CMP X11, X1
	0x03A1A52C B.EQ 0x3A1A54C
	0x03A1A530 SUBS X9, X9, 0x1
	0x03A1A534 ADD X10, X10, 0x10
	0x03A1A538 B.NE 0x3A1A524
	0x03A1A53C MOV X0, X24
	0x03A1A540 MOV W2, W31
	0x03A1A544 BL 0x1C5C788
	0x03A1A548 B 0x3A1A558
	0x03A1A54C LDRSW X9, [X10]
	0x03A1A550 ADD X8, X8, X9, 0x4, LSL
	0x03A1A554 ADD X0, X8, 0x138
	0x03A1A558 LDP X8, X1, [X0]
	0x03A1A55C MOV X0, X24
	0x03A1A560 BLR X8
	0x03A1A564 CBZ X0, 0x3A1A9A8
	0x03A1A568 LDR X25, [X0 + 0x158]
	0x03A1A56C CBZ X25, 0x3A1A9A8
	0x03A1A570 ADRP X10, 0x73A000
	0x03A1A574 LDR X8, [X25]
	0x03A1A578 LDR X10, [X10 + 0x668]
	0x03A1A57C LDRH W9, [X8 + 0x12E]
	0x03A1A580 LDR X1, [X10]
	0x03A1A584 CBZ X9, 0x3A1A5A8
	0x03A1A588 LDR X10, [X8 + 0xB0]
	0x03A1A58C ADD X10, X10, 0x8
	0x03A1A590 LDUR X11, [X10 - 0x8]
	0x03A1A594 CMP X11, X1
	0x03A1A598 B.EQ 0x3A1A5B8
	0x03A1A59C SUBS X9, X9, 0x1
	0x03A1A5A0 ADD X10, X10, 0x10
	0x03A1A5A4 B.NE 0x3A1A590
	0x03A1A5A8 MOV X0, X25
	0x03A1A5AC MOV W2, W31
	0x03A1A5B0 BL 0x1C5C788
	0x03A1A5B4 B 0x3A1A5C4
	0x03A1A5B8 LDRSW X9, [X10]
	0x03A1A5BC ADD X8, X8, X9, 0x4, LSL
	0x03A1A5C0 ADD X0, X8, 0x138
	0x03A1A5C4 LDP X8, X1, [X0]
	0x03A1A5C8 MOV X0, X25
	0x03A1A5CC BLR X8
	0x03A1A5D0 CBZ X0, 0x3A1A9A8
	0x03A1A5D4 LDR W8, [X0 + 0x18]
	0x03A1A5D8 MOV X25, X0
	0x03A1A5DC CMP W8, 0x1
	0x03A1A5E0 B.LT 0x3A1A618
	0x03A1A5E4 ADRP X19, 0x73A000
	0x03A1A5E8 LDR X19, [X19 + 0x670]
	0x03A1A5EC MOV W26, W31
	0x03A1A5F0 LDR X2, [X19]
	0x03A1A5F4 MOV X0, X25
	0x03A1A5F8 MOV W1, W26
	0x03A1A5FC BL 0x301BCCC
	0x03A1A600 CBZ X0, 0x3A1A9A8
	0x03A1A604 BL 0x3A1377C
	0x03A1A608 LDR W8, [X25 + 0x18]
	0x03A1A60C ADD W26, W26, 0x1
	0x03A1A610 CMP W26, W8
	0x03A1A614 B.LT 0x3A1A5F0
	0x03A1A618 MOV X0, X31
	0x03A1A61C BL 0x3A27ED8
	0x03A1A620 LDR X8, [X24]
	0x03A1A624 ADRP X10, 0x73A000
	0x03A1A628 LDRH W9, [X8 + 0x12E]
	0x03A1A62C LDR X10, [X10 + 0x660]
	0x03A1A630 LDR X1, [X10]
	0x03A1A634 CBZ X9, 0x3A1A658
	0x03A1A638 LDR X10, [X8 + 0xB0]
	0x03A1A63C ADD X10, X10, 0x8
	0x03A1A640 LDUR X11, [X10 - 0x8]
	0x03A1A644 CMP X11, X1
	0x03A1A648 B.EQ 0x3A1A668
	0x03A1A64C SUBS X9, X9, 0x1
	0x03A1A650 ADD X10, X10, 0x10
	0x03A1A654 B.NE 0x3A1A640
	0x03A1A658 MOV X0, X24
	0x03A1A65C MOV W2, W31
	0x03A1A660 BL 0x1C5C788
	0x03A1A664 B 0x3A1A674
	0x03A1A668 LDRSW X9, [X10]
	0x03A1A66C ADD X8, X8, X9, 0x4, LSL
	0x03A1A670 ADD X0, X8, 0x138
	0x03A1A674 LDP X8, X1, [X0]
	0x03A1A678 MOV X0, X24
	0x03A1A67C BLR X8
	0x03A1A680 CBZ X0, 0x3A1A9A8
	0x03A1A684 LDR X28, [X0 + 0x58]
	0x03A1A688 CBZ X28, 0x3A1A9A8
	0x03A1A68C LDR X8, [X28 + 0x18]
	0x03A1A690 CMP W8, 0x1
	0x03A1A694 B.LT 0x3A1A97C
	0x03A1A698 LDR X9, [X31 + 0x698]
	0x03A1A69C ADRP X10, 0xFFFFFFFFFD0D2000
	0x03A1A6A0 LDR V0, [X10 + 0xBB]
	0x03A1A6A4 MOV X25, X31
	0x03A1A6A8 ADD X23, X9, 0x8
	0x03A1A6AC ADD X9, X31, 0x618
	0x03A1A6B0 ADD X29, X31, 0x338
	0x03A1A6B4 ADD X19, X9, 0x8
	0x03A1A6B8 AND X8, X8, 0x0
	0x03A1A6BC MOVI V12.2S, 0x4
	0x03A1A6C0 STR V0, [X31 + 0x1]
	0x03A1A6C4 LDR W9, [X20 + 0x18]
	0x03A1A6C8 MOVZ W10, 0x1
	0x03A1A6CC LSLV W27, W10, W25
	0x03A1A6D0 ANDS W31, W9, W27, 0x0
	0x03A1A6D4 B.EQ 0x3A1A96C
	0x03A1A6D8 CMP X25, W8, UXTW
	0x03A1A6DC B.CS 0x3A1A9AC
	0x03A1A6E0 CBZ X22, 0x3A1A9A8
	0x03A1A6E4 ADD X8, X28, X25, 0x5, LSL
	0x03A1A6E8 LDR X26, [X8 + 0x20]
	0x03A1A6EC MOV X0, X22
	0x03A1A6F0 MOV X2, X31
	0x03A1A6F4 MOV X1, X26
	0x03A1A6F8 BL 0x3C4D65C
	0x03A1A6FC ADRP X8, 0x73A000
	0x03A1A700 LDR X8, [X8 + 0x498]
	0x03A1A704 LDR X0, [X8]
	0x03A1A708 LDR W8, [X0 + 0xE0]
	0x03A1A70C CBNZ W8, 0x3A1A714
	0x03A1A710 BL 0x1C16DFC
	0x03A1A714 ADD X2, X31, 0x680
	0x03A1A718 MOV W0, W21
	0x03A1A71C MOV W1, W25
	0x03A1A720 BL 0x3A16B08
	0x03A1A724 TBZ X0, 0x0, 0x3A1A73C
	0x03A1A728 LDR V11, [X31 + 0x680]
	0x03A1A72C LDR V10, [X31 + 0x684]
	0x03A1A730 LDR V8, [X31 + 0x688]
	0x03A1A734 LDR V9, [X31 + 0x68C]
	0x03A1A738 B 0x3A1A754
	0x03A1A73C LDR V0, [X31 + 0x1]
	0x03A1A740 FMOV S8, W31
	0x03A1A744 FMOV S9, 1
	0x03A1A748 FMOV S10, W31
	0x03A1A74C FMOV S11, W31
	0x03A1A750 STR V0, [X31 + 0x68]
	0x03A1A754 LDR W8, [X20 + 0x1C]
	0x03A1A758 LDR X9, [X31 + 0x698]
	0x03A1A75C ADD X2, X31, 0x618
	0x03A1A760 MOV X0, X20
	0x03A1A764 ANDS W27, W8, W27, 0x0
	0x03A1A768 LDR V0, [X9]
	0x03A1A76C CSET W8, EQ
	0x03A1A770 UNIMPLEMENTED
	0x03A1A774 UNIMPLEMENTED
	0x03A1A778 UNIMPLEMENTED
	0x00000000 INVALID
	0x03A1A780 STR D0, [X31 + 0x618]
	0x03A1A784 LDUR V0, [X23 + 0x1C]
	0x03A1A788 LDP V2, V1, [X23]
	0x03A1A78C ADD X8, X31, 0x338
	0x03A1A790 MOV X1, X22
	0x03A1A794 MOV W3, W25
	0x03A1A798 STUR V0, [X19 + 0x1C]
	0x03A1A79C STP V2, V1, [X19]
	0x03A1A7A0 BL 0x3A1A9B0
	0x03A1A7A4 LDR X8, [X31 + 0x358]
	0x03A1A7A8 LDP V1, V0, [X29]
	0x03A1A7AC ADD X1, X31, 0x5F0
	0x03A1A7B0 MOVZ W2, 0x2
	0x03A1A7B4 MOVZ W4, 0x2
	0x03A1A7B8 MOVZ W5, 0x3
	0x03A1A7BC MOV X0, X22
	0x03A1A7C0 MOV W3, W31
	0x03A1A7C4 MOV X6, X31
	0x03A1A7C8 STR X8, [X31 + 0x670]
	0x03A1A7CC STR V0, [X31 + 0x66]
	0x03A1A7D0 STR V1, [X31 + 0x65]
	0x03A1A7D4 STR V1, [X31 + 0x5F]
	0x03A1A7D8 STR V0, [X31 + 0x60]
	0x03A1A7DC STR X8, [X31 + 0x610]
	0x03A1A7E0 BL 0x3C4DBAC
	0x03A1A7E4 MOVZ W2, 0x1
	0x03A1A7E8 MOV X0, X22
	0x03A1A7EC MOV W1, W31
	0x03A1A7F0 MOV V0.16B, V11.16B
	0x03A1A7F4 MOV V1.16B, V10.16B
	0x03A1A7F8 MOV V2.16B, V8.16B
	0x03A1A7FC MOV V3.16B, V9.16B
	0x03A1A800 MOV X3, X31
	0x03A1A804 BL 0x3C4CCDC
	0x03A1A808 CBZ W27, 0x3A1A95C
	0x03A1A80C LDR X1, [X31 + 0x28]
	0x03A1A810 ADD X0, X31, 0x338
	0x03A1A814 MOVZ W2, 0x2B8
	0x03A1A818 BL 0x3EB1AC0
	0x03A1A81C LDR X8, [X31 + 0x670]
	0x03A1A820 LDR V0, [X31 + 0x66]
	0x03A1A824 LDR V1, [X31 + 0x65]
	0x03A1A828 ADRP X10, 0x73A000
	0x03A1A82C STR X8, [X31 + 0x330]
	0x03A1A830 STP V1, V0, [X31 + 0x310]
	0x03A1A834 LDR X8, [X24]
	0x03A1A838 LDRH W9, [X8 + 0x12E]
	0x03A1A83C LDR X10, [X10 + 0x660]
	0x03A1A840 LDR X1, [X10]
	0x03A1A844 CBZ X9, 0x3A1A868
	0x03A1A848 LDR X10, [X8 + 0xB0]
	0x03A1A84C ADD X10, X10, 0x8
	0x03A1A850 LDUR X11, [X10 - 0x8]
	0x03A1A854 CMP X11, X1
	0x03A1A858 B.EQ 0x3A1A878
	0x03A1A85C SUBS X9, X9, 0x1
	0x03A1A860 ADD X10, X10, 0x10
	0x03A1A864 B.NE 0x3A1A850
	0x03A1A868 MOV X0, X24
	0x03A1A86C MOV W2, W31
	0x03A1A870 BL 0x1C5C788
	0x03A1A874 B 0x3A1A884
	0x03A1A878 LDRSW X9, [X10]
	0x03A1A87C ADD X8, X8, X9, 0x4, LSL
	0x03A1A880 ADD X0, X8, 0x138
	0x03A1A884 LDP X8, X1, [X0]
	0x03A1A888 MOV X0, X24
	0x03A1A88C BLR X8
	0x03A1A890 CBZ X0, 0x3A1A9A8
	0x03A1A894 LDR X27, [X0 + 0x158]
	0x03A1A898 CBZ X27, 0x3A1A9A8
	0x03A1A89C LDR X8, [X27]
	0x03A1A8A0 ADRP X10, 0x73A000
	0x03A1A8A4 LDRH W9, [X8 + 0x12E]
	0x03A1A8A8 LDR X10, [X10 + 0x668]
	0x03A1A8AC LDR X1, [X10]
	0x03A1A8B0 CBZ X9, 0x3A1A8D4
	0x03A1A8B4 LDR X10, [X8 + 0xB0]
	0x03A1A8B8 ADD X10, X10, 0x8
	0x03A1A8BC LDUR X11, [X10 - 0x8]
	0x03A1A8C0 CMP X11, X1
	0x03A1A8C4 B.EQ 0x3A1A8E4
	0x03A1A8C8 SUBS X9, X9, 0x1
	0x03A1A8CC ADD X10, X10, 0x10
	0x03A1A8D0 B.NE 0x3A1A8BC
	0x03A1A8D4 MOV X0, X27
	0x03A1A8D8 MOV W2, W31
	0x03A1A8DC BL 0x1C5C788
	0x03A1A8E0 B 0x3A1A8F0
	0x03A1A8E4 LDRSW X9, [X10]
	0x03A1A8E8 ADD X8, X8, X9, 0x4, LSL
	0x03A1A8EC ADD X0, X8, 0x138
	0x03A1A8F0 LDP X8, X1, [X0]
	0x03A1A8F4 MOV X0, X27
	0x03A1A8F8 BLR X8
	0x03A1A8FC ADRP X8, 0x73A000
	0x03A1A900 LDR X8, [X8 + 0x658]
	0x03A1A904 MOV X27, X0
	0x03A1A908 LDR X8, [X8]
	0x03A1A90C LDR W9, [X8 + 0xE0]
	0x03A1A910 CBNZ W9, 0x3A1A91C
	0x03A1A914 MOV X0, X8
	0x03A1A918 BL 0x1C16DFC
	0x03A1A91C ADD X0, X31, 0x58
	0x03A1A920 ADD X1, X31, 0x338
	0x03A1A924 MOVZ W2, 0x2B8
	0x03A1A928 BL 0x3EB1AC0
	0x03A1A92C LDP V0, V1, [X31 + 0x310]
	0x03A1A930 LDR X8, [X31 + 0x330]
	0x03A1A934 ADD X1, X31, 0x58
	0x03A1A938 ADD X5, X31, 0x30
	0x03A1A93C MOV X0, X24
	0x03A1A940 MOV W2, W25
	0x03A1A944 MOV X3, X22
	0x03A1A948 MOV W4, W21
	0x03A1A94C MOV X6, X27
	0x03A1A950 STP V0, V1, [X31 + 0x30]
	0x03A1A954 STR X8, [X31 + 0x50]
	0x03A1A958 BL 0x3A1E658
	0x03A1A95C MOV X0, X22
	0x03A1A960 MOV X1, X26
	0x03A1A964 MOV X2, X31
	0x03A1A968 BL 0x3C4D6A0
	0x03A1A96C LDR W8, [X28 + 0x18]
	0x03A1A970 ADD X25, X25, 0x1
	0x03A1A974 CMP X25, W8, SXTW
	0x03A1A978 B.LT 0x3A1A6C4
	0x03A1A97C ADD X31, X31, 0x690
	0x03A1A980 LDP X20, X19, [X31 + 0x80]
	0x03A1A984 LDP X22, X21, [X31 + 0x70]
	0x03A1A988 LDP X24, X23, [X31 + 0x60]
	0x03A1A98C LDP X26, X25, [X31 + 0x50]
	0x03A1A990 LDP X28, X27, [X31 + 0x40]
	0x03A1A994 LDP X29, X30, [X31 + 0x30]
	0x03A1A998 LDP D9, D8, [X31 + 0x20]
	0x03A1A99C LDP D11, D10, [X31 + 0x10]
	0x03A1A9A0 LDR V12, [X31], #0x90
	0x03A1A9A4 RET
	0x03A1A9A8 BL 0x1C16F20
	0x03A1A9AC BL 0x1C16F28
	0x03A1A9B0 SUB X31, X31, 0xC0
	0x03A1A9B4 STR X30, [X31 + 0x80]
	0x03A1A9B8 STP X24, X23, [X31 + 0x90]
	0x03A1A9BC STP X22, X21, [X31 + 0xA0]
	0x03A1A9C0 STP X20, X19, [X31 + 0xB0]
	0x03A1A9C4 ADD X21, X0, 0x30
	0x03A1A9C8 MOV X19, X8
	0x03A1A9CC LDRB W8, [X21, W3, SXTW]
	0x03A1A9D0 MOV X20, X0
	0x03A1A9D4 SXTW X22, W3
	0x03A1A9D8 CBZ W8, 0x3A1A9E4
	0x03A1A9DC UBFM X23, X22, 0x3E, 0x3D
	0x03A1A9E0 B 0x3A1AA44
	0x03A1A9E4 ADD X8, X20, X22, 0x2, LSL
	0x03A1A9E8 LDP V2, V0, [X2 + 0x10]
	0x03A1A9EC LDR W9, [X2 + 0x30]
	0x03A1A9F0 LDR V1, [X2]
	0x03A1A9F4 LDR W8, [X8 + 0x20]
	0x03A1A9F8 STP V2, V0, [X31 + 0x50]
	0x03A1A9FC STR W9, [X31 + 0x70]
	0x03A1AA00 STR V1, [X31 + 0x4]
	0x03A1AA04 CBZ X1, 0x3A1AA7C
	0x03A1AA08 LDP V0, V1, [X31 + 0x40]
	0x03A1AA0C LDR V2, [X31 + 0x6]
	0x03A1AA10 LDR W9, [X31 + 0x70]
	0x03A1AA14 ADD X2, X31, 0x0
	0x03A1AA18 MOVZ W3, 0x1
	0x03A1AA1C MOV X0, X1
	0x03A1AA20 MOV W1, W8
	0x03A1AA24 MOV X4, X31
	0x03A1AA28 UBFM X23, X22, 0x3E, 0x3D
	0x03A1AA2C STP V0, V1, [X31]
	0x03A1AA30 STR V2, [X31 + 0x2]
	0x03A1AA34 STR W9, [X31 + 0x30]
	0x03A1AA38 MOVZ W24, 0x1
	0x03A1AA3C BL 0x3C4CB34
	0x03A1AA40 STRB W24, [X21, X22, LSL]
	0x03A1AA44 ADD X8, X20, X23
	0x03A1AA48 LDR W1, [X8 + 0x20]
	0x03A1AA4C MOVI V0.2D, 0x0
	0x03A1AA50 MOV X0, X19
	0x03A1AA54 MOV X2, X31
	0x03A1AA58 STR X31, [X19 + 0x20]
	0x03A1AA5C STP V0, V0, [X19]
	0x03A1AA60 BL 0x3C4B05C
	0x03A1AA64 LDP X20, X19, [X31 + 0xB0]
	0x03A1AA68 LDP X22, X21, [X31 + 0xA0]
	0x03A1AA6C LDP X24, X23, [X31 + 0x90]
	0x03A1AA70 LDR X30, [X31 + 0x80]
	0x03A1AA74 ADD X31, X31, 0xC0
	0x03A1AA78 RET
	0x03A1AA7C BL 0x1C16F20
	0x03A1AA80 STP X30, X23, [X31 - 0x30]!
	0x03A1AA84 STP X22, X21, [X31 + 0x10]
	0x03A1AA88 STP X20, X19, [X31 + 0x20]
	0x03A1AA8C ADRP X23, 0x9C7000
	0x03A1AA90 ADRP X22, 0x73A000
	0x03A1AA94 LDRB W8, [X23 + 0xFEF]
	0x03A1AA98 LDR X22, [X22 + 0x658]
	0x03A1AA9C MOV W20, W2
	0x03A1AAA0 MOV W21, W1
	0x03A1AAA4 MOV X19, X0
	0x03A1AAA8 TBNZ X8, 0x0, 0x3A1AAC0
	0x03A1AAAC ADRP X0, 0x73A000
	0x03A1AAB0 LDR X0, [X0 + 0x658]
	0x03A1AAB4 BL 0x1C16CF4
	0x03A1AAB8 MOVZ W8, 0x1
	0x03A1AABC STRB W8, [X23 + 0xFEF]
	0x03A1AAC0 LDR X0, [X22]
	0x03A1AAC4 LDR W8, [X0 + 0xE0]
	0x03A1AAC8 CBNZ W8, 0x3A1AAD4
	0x03A1AACC BL 0x1C16DFC
	0x03A1AAD0 LDR X0, [X22]
	0x03A1AAD4 LDR X8, [X0 + 0xB8]
	0x03A1AAD8 LDR X8, [X8 + 0x48]
	0x03A1AADC CBZ X8, 0x3A1AB24
	0x03A1AAE0 LDR W9, [X8 + 0x18]
	0x03A1AAE4 CMP W9, W21
	0x03A1AAE8 B.LS 0x3A1AB28
	0x03A1AAEC CBZ X19, 0x3A1AB24
	0x03A1AAF0 ADD X8, X8, W21, 0x3, SXTW
	0x03A1AAF4 LDR X1, [X8 + 0x20]
	0x03A1AAF8 MOV X0, X19
	0x03A1AAFC MOV X2, X31
	0x03A1AB00 TBZ X20, 0x0, 0x3A1AB14
	0x03A1AB04 LDP X20, X19, [X31 + 0x20]
	0x03A1AB08 LDP X22, X21, [X31 + 0x10]
	0x03A1AB0C LDP X30, X23, [X31], #0x30
	0x03A1AB10 B 0x3C4D0E0
	0x03A1AB14 LDP X20, X19, [X31 + 0x20]
	0x03A1AB18 LDP X22, X21, [X31 + 0x10]
	0x03A1AB1C LDP X30, X23, [X31], #0x30
	0x03A1AB20 B 0x3C4D124
	0x03A1AB24 BL 0x1C16F20
	0x03A1AB28 BL 0x1C16F28
	0x03A1AB2C STR D8, [X31 - 0x70]!
	0x03A1AB30 STP X29, X30, [X31 + 0x10]
	0x03A1AB34 STP X28, X27, [X31 + 0x20]
	0x03A1AB38 STP X26, X25, [X31 + 0x30]
	0x03A1AB3C STP X24, X23, [X31 + 0x40]
	0x03A1AB40 STP X22, X21, [X31 + 0x50]
	0x03A1AB44 STP X20, X19, [X31 + 0x60]
	0x03A1AB48 SUB X31, X31, 0x6D0
	0x03A1AB4C STR W7, [X31 + 0x20]
	0x03A1AB50 STP X5, X6, [X31 + 0x10]
	0x03A1AB54 STR W3, [X31 + 0x2C]
	0x03A1AB58 STR X1, [X31 + 0x30]
	0x03A1AB5C ADRP X19, 0x9C7000
	0x03A1AB60 ADRP X20, 0x73A000
	0x03A1AB64 LDRB W8, [X19 + 0xFF4]
	0x03A1AB68 LDR X20, [X20 + 0x6A0]
	0x03A1AB6C MOV W29, W4
	0x03A1AB70 MOV X24, X2
	0x03A1AB74 MOV X28, X0
	0x03A1AB78 TBNZ X8, 0x0, 0x3A1ABFC
	0x03A1AB7C ADRP X0, 0x6D9000
	0x03A1AB80 LDR X0, [X0 + 0xA28]
	0x03A1AB84 BL 0x1C16CF4
	0x03A1AB88 ADRP X0, 0x73A000
	0x03A1AB8C LDR X0, [X0 + 0x660]
	0x03A1AB90 BL 0x1C16CF4
	0x03A1AB94 ADRP X0, 0x73A000
	0x03A1AB98 LDR X0, [X0 + 0x548]
	0x03A1AB9C BL 0x1C16CF4
	0x03A1ABA0 ADRP X0, 0x73A000
	0x03A1ABA4 LDR X0, [X0 + 0x670]
	0x03A1ABA8 BL 0x1C16CF4
	0x03A1ABAC ADRP X0, 0x73A000
	0x03A1ABB0 LDR X0, [X0 + 0x6A8]
	0x03A1ABB4 BL 0x1C16CF4
	0x03A1ABB8 ADRP X0, 0x73A000
	0x03A1ABBC LDR X0, [X0 + 0x6B0]
	0x03A1ABC0 BL 0x1C16CF4
	0x03A1ABC4 ADRP X0, 0x6D9000
	0x03A1ABC8 LDR X0, [X0 + 0x598]
	0x03A1ABCC BL 0x1C16CF4
	0x03A1ABD0 ADRP X0, 0x73A000
	0x03A1ABD4 LDR X0, [X0 + 0x658]
	0x03A1ABD8 BL 0x1C16CF4
	0x03A1ABDC ADRP X0, 0x73A000
	0x03A1ABE0 LDR X0, [X0 + 0x6A0]
	0x03A1ABE4 BL 0x1C16CF4
	0x03A1ABE8 ADRP X0, 0x73A000
	0x03A1ABEC LDR X0, [X0 + 0x6B8]
	0x03A1ABF0 BL 0x1C16CF4
	0x03A1ABF4 MOVZ W8, 0x1
	0x03A1ABF8 STRB W8, [X19 + 0xFF4]
	0x03A1ABFC LDR X0, [X20]
	0x03A1AC00 STR X31, [X31 + 0x6C8]
	0x03A1AC04 STR X31, [X31 + 0x6C0]
	0x03A1AC08 LDR W8, [X0 + 0xE0]
	0x03A1AC0C CBNZ W8, 0x3A1AC14
	0x03A1AC10 BL 0x1C16DFC
	0x03A1AC14 ADRP X19, 0x9C8000
	0x03A1AC18 LDRB W8, [X19 + 0x11]
	0x03A1AC1C LDR X27, [X31 + 0x750]
	0x03A1AC20 CBNZ W8, 0x3A1AC38
	0x03A1AC24 ADRP X0, 0x73A000
	0x03A1AC28 LDR X0, [X0 + 0x6A0]
	0x03A1AC2C BL 0x1C16CF4
	0x03A1AC30 MOVZ W8, 0x1
	0x03A1AC34 STRB W8, [X19 + 0x11]
	0x03A1AC38 LDR X0, [X20]
	0x03A1AC3C LDR W8, [X0 + 0xE0]
	0x03A1AC40 CBNZ W8, 0x3A1AC4C
	0x03A1AC44 BL 0x1C16DFC
	0x03A1AC48 LDR X0, [X20]
	0x03A1AC4C CBZ X27, 0x3A1B338
	0x03A1AC50 ADRP X9, 0x73A000
	0x03A1AC54 LDR X8, [X0 + 0xB8]
	0x03A1AC58 LDR X9, [X9 + 0x6B0]
	0x03A1AC5C LDR W1, [X27 + 0x18]
	0x03A1AC60 ADD X0, X31, 0x6C0
	0x03A1AC64 LDR W8, [X8 + 0x78]
	0x03A1AC68 LDR X4, [X9]
	0x03A1AC6C MOVZ W2, 0x2
	0x03A1AC70 MOVZ W3, 0x1
	0x03A1AC74 UBFM W20, W8, 0x1E, 0x1D
	0x03A1AC78 BL 0x23C7EE0
	0x03A1AC7C CBZ W20, 0x3A1ACA0
	0x03A1AC80 LDR W9, [X31 + 0x740]
	0x03A1AC84 LDR W8, [X31 + 0x20]
	0x03A1AC88 LDR W19, [X27 + 0x18]
	0x03A1AC8C STR W9, [X31 + 0xC]
	0x03A1AC90 CMP W8, W9
	0x03A1AC94 B.NE 0x3A1ACD0
	0x03A1AC98 STR W19, [X31 + 0x8]
	0x03A1AC9C B 0x3A1AD1C
	0x03A1ACA0 ADRP X8, 0x6D9000
	0x03A1ACA4 LDR X8, [X8 + 0xA28]
	0x03A1ACA8 LDR X0, [X8]
	0x03A1ACAC LDR W8, [X0 + 0xE0]
	0x03A1ACB0 CBNZ W8, 0x3A1ACB8
	0x03A1ACB4 BL 0x1C16DFC
	0x03A1ACB8 ADRP X8, 0x73A000
	0x03A1ACBC LDR X8, [X8 + 0x6B8]
	0x03A1ACC0 MOV X1, X31
	0x03A1ACC4 LDR X0, [X8]
	0x03A1ACC8 BL 0x3C0649C
	0x03A1ACCC B 0x3A1B314
	0x03A1ACD0 SUBS W22, W19, 0x1
	0x03A1ACD4 B.MI 0x3A1B300
	0x03A1ACD8 ADRP X21, 0x73A000
	0x03A1ACDC LDR X21, [X21 + 0x670]
	0x03A1ACE0 LDR X2, [X21]
	0x03A1ACE4 MOV X0, X27
	0x03A1ACE8 MOV W1, W22
	0x03A1ACEC BL 0x301BCCC
	0x03A1ACF0 CBZ X0, 0x3A1B338
	0x03A1ACF4 LDRB W8, [X0 + 0x84]
	0x03A1ACF8 CBZ W8, 0x3A1AD08
	0x03A1ACFC LDR V0, [X0 + 0x88]
	0x03A1AD00 FCMP S0, 0x0
	0x03A1AD04 B.GT 0x3A1AD14
	0x03A1AD08 SUBS W22, W22, 0x1
	0x03A1AD0C B.PL 0x3A1ACE0
	0x03A1AD10 MOV W22, W19
	0x03A1AD14 LDR W19, [X27 + 0x18]
	0x03A1AD18 STR W22, [X31 + 0x8]
	0x03A1AD1C CMP W19, 0x1
	0x03A1AD20 B.LT 0x3A1B300
	0x03A1AD24 MOV W8, W20
	0x03A1AD28 STR X8, [X31 + 0x6D8]
	0x03A1AD2C ADRP X23, 0x73A000
	0x03A1AD30 LDRB W22, [X31 + 0x748]
	0x03A1AD34 LDR X23, [X23 + 0x670]
	0x03A1AD38 MOV W25, W31
	0x03A1AD3C STR W29, [X31 + 0x28]
	0x03A1AD40 STR X28, [X31 + 0x38]
	0x03A1AD44 MOV W8, W19
	0x03A1AD48 SUB X28, X8, W25, SXTW
	0x03A1AD4C CMP X28, 0x1
	0x03A1AD50 B.LT 0x3A1AE44
	0x03A1AD54 MOV W26, W31
	0x03A1AD58 MOV W19, W31
	0x03A1AD5C LDR X9, [X31 + 0x6D8]
	0x03A1AD60 SXTW X8, W19
	0x03A1AD64 CMP X8, X9
	0x03A1AD68 B.GE 0x3A1AE4C
	0x03A1AD6C LDR X2, [X23]
	0x03A1AD70 ADD W20, W25, W26
	0x03A1AD74 MOV X0, X27
	0x03A1AD78 MOV W1, W20
	0x03A1AD7C BL 0x301BCCC
	0x03A1AD80 ADRP X8, 0x73A000
	0x03A1AD84 LDR X8, [X8 + 0x658]
	0x03A1AD88 MOV X21, X0
	0x03A1AD8C LDR X8, [X8]
	0x03A1AD90 LDR W9, [X8 + 0xE0]
	0x03A1AD94 CBNZ W9, 0x3A1ADA0
	0x03A1AD98 MOV X0, X8
	0x03A1AD9C BL 0x1C16DFC
	0x03A1ADA0 MOV X0, X21
	0x03A1ADA4 MOV W1, W29
	0x03A1ADA8 BL 0x3A1E558
	0x03A1ADAC TBZ X0, 0x0, 0x3A1AE34
	0x03A1ADB0 LDR X8, [X31 + 0x6C0]
	0x03A1ADB4 LDR X1, [X31 + 0x30]
	0x03A1ADB8 ADD X0, X31, 0x400
	0x03A1ADBC MOVZ W2, 0x2B8
	0x03A1ADC0 STRB W31, [X8, W20, SXTW]
	0x03A1ADC4 BL 0x3EB1AC0
	0x03A1ADC8 CBZ X21, 0x3A1B338
	0x03A1ADCC ADRP X8, 0x73A000
	0x03A1ADD0 LDR X8, [X8 + 0x6A0]
	0x03A1ADD4 LDR V8, [X21 + 0x88]
	0x03A1ADD8 LDR X0, [X8]
	0x03A1ADDC LDR W8, [X0 + 0xE0]
	0x03A1ADE0 CBNZ W8, 0x3A1ADE8
	0x03A1ADE4 BL 0x1C16DFC
	0x03A1ADE8 ADD X0, X31, 0x148
	0x03A1ADEC ADD X1, X31, 0x400
	0x03A1ADF0 MOVZ W2, 0x2B8

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Subtract X31, X31, 4096
	014 Subtract X31, X31, 1872
	015 Move [X31+120], X2
	016 NotImplemented "Instruction MRS not yet implemented."
	017 Move [X31+48], X8
	018 Move X8, [X8+40]
	019 Move X21, 0x9C9000
	020 Move X20, 0x73B000
	021 Move X23, X7
	022 Move [X31+5960], X8
	023 Move [X31+4888], X5
	024 Move W8, [X21+4058]
	025 Move X20, [X20+4080]
	026 Move X24, X6
	027 Move X19, X4
	028 Move W25, W3
	029 Move X22, X1
	030 Move X27, X0
	031 Move TEMP, X8
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfEqual {58}
	035 Move X0, 0x703000
	036 Move X0, [X0+2296]
	037 Call 0x1C17CF4
	038 Move X0, 0x73C000
	039 Move X0, [X0+1640]
	040 Call 0x1C17CF4
	041 Move X0, 0x73C000
	042 Move X0, [X0+1672]
	043 Call 0x1C17CF4
	044 Move X0, 0x73C000
	045 Move X0, [X0+1624]
	046 Call 0x1C17CF4
	047 Move X0, 0x738000
	048 Move X0, [X0+3200]
	049 Call 0x1C17CF4
	050 Move X0, 0x73B000
	051 Move X0, [X0+4080]
	052 Call 0x1C17CF4
	053 Move X0, 0x73C000
	054 Move X0, [X0+1680]
	055 Call 0x1C17CF4
	056 Move W8, 1
	057 Move [X21+4058], W8
	058 Move X0, [X20]
	059 Add X8, X31, 4096
	060 Add X8, X8, 768
	061 NotImplemented "Instruction MOVI not yet implemented."
	062 Move [X8+20], W31
	063 Move [X31+4880], W31
	064 Move [X8+12], W31
	065 Move [X8+8], W31
	066 Move [X8], W31
	067 Move [X31+5952], W31
	068 Move [X31+4848], X31
	069 Move [X31+371], V0
	070 Move [X31+370], V0
	071 Move [X31+369], V0
	072 Move [X31+302], V0
	073 Move [X31+301], V0
	074 Move [X31+4800], X31
	075 Move [X31+299], V0
	076 Move [X31+298], V0
	077 Move W8, [X0+224]
	078 Compare W8, 0
	079 JumpIfNotEqual {81}
	080 Call 0x1C17DFC
	081 Move X29, 0x73C000
	082 Move X29, [X29+1672]
	083 Move X0, X24
	084 Move X1, X31
	085 Call ScriptableRenderPass.GetActiveDebugHandler, X0
	086 Move W20, 1
	087 Move [X31+144], X23
	088 Move [X31+160], X24
	089 Compare X0, 0
	090 JumpIfEqual {94}
	091 Move X1, X31
	092 Call DebugHandler.get_IsLightingActive, X0
	093 And W8, W0, 1
	094 Move W8, 1
	095 Move X26, [X31+6080]
	096 Move X0, X31
	097 Move [X31+116], W8
	098 Call SpriteMaskUtility.HasSpriteMaskInScene
	099 Move X8, [X29]
	100 Add X9, X31, 4096
	101 Add X9, X9, 768
	102 Move [X9+20], W20
	103 Move W9, [X8+224]
	104 Move W28, W0
	105 Compare W9, 0
	106 JumpIfNotEqual {110}
	107 Move X0, X8
	108 Call 0x1C17DFC
	109 Move X8, [X29]
	110 Move X8, [X8+184]
	111 Add X0, X31, 4096
	112 Add X0, X0, 776
	113 Move X1, X19
	114 Move X2, [X8+48]
	115 Move X3, X31
	116 Move [X31+176], X22
	117 Call ProfilingScope..ctor, X0, X1, X2
	118 Move X8, [X31+120]
	119 Move [X31+184], X27
	120 Move [X31+64], X25
	121 Subtract W20, W8, W25
	122 Move X9, [X31+6064]
	123 Move W21, W31
	124 Move X25, W25
	125 Move X8, W8
	126 Move W27, 52
	127 Move [X31+156], W31
	128 Move [X31+168], X9
	129 Move [X31+136], X8
	130 Move X9, [X31+176]
	131 Compare X9, 0
	132 JumpIfEqual {1029}
	133 Move W8, [X9+24]
	134 NotImplemented "Instruction CMP not yet implemented."
	135 NotImplemented "Instruction MADD not yet implemented."
	136 Move W8, [X23+56]
	137 Compare W8, 0
	138 JumpIfEqual {147}
	139 Move W24, W31
	140 And W9, W8, 1
	141 Move W8, W8
	142 ShiftRight W8, 1
	143 And W8, W8, 0x7FFFFFFF
	144 Add W24, W9, W24
	145 Compare W8, 0
	146 JumpIfNotEqual {140}
	147 Move W24, W31
	148 Move X8, 0x9CA000
	149 Move W8, [X8+15]
	150 Compare W8, 0
	151 JumpIfNotEqual {158}
	152 Move X0, 0x73C000
	153 Move X0, [X0+1688]
	154 Call 0x1C17CF4
	155 Move X8, 0x9CA000
	156 Move W9, 1
	157 Move [X8+15], W9
	158 Move X8, 0x73C000
	159 Move X8, [X8+1688]
	160 Add W21, W24, W21
	161 Move X8, [X8]
	162 Move X8, [X8+184]
	163 Move W8, [X8+8]
	164 NotImplemented "Instruction CMP not yet implemented."
	165 Move W9, [X31+156]
	166 NotImplemented "Instruction CMP not yet implemented."
	167 NotImplemented "Instruction CSET not yet implemented."
	168 And W8, W28, W8
	169 Add W9, W9, 1
	170 Move [X31+156], W9
	171 Move TEMP, X8
	172 And TEMP, TEMP, 1
	173 Compare TEMP, 1
	174 JumpIfEqual {189}
	175 Move X8, [X31+176]
	176 NotImplemented "Instruction NOP not yet implemented."
	177 NotImplemented "Instruction MADD not yet implemented."
	178 Move W8, [X8+48]
	179 NotImplemented "Instruction CMP not yet implemented."
	180 Move X9, [X31+136]
	181 Add X8, X25, 1
	182 NotImplemented "Instruction CMP not yet implemented."
	183 NotImplemented "Instruction CSET not yet implemented."
	184 NotImplemented "Instruction ORN not yet implemented."
	185 Move TEMP, X8
	186 And TEMP, TEMP, 1
	187 Compare TEMP, 1
	188 JumpIfEqual {279}
	189 Move X8, [X31+176]
	190 And X9, X22, 0
	191 NotImplemented "Instruction MADD not yet implemented."
	192 Move W8, [X8+40]
	193 Or X22, X9, X8
	194 Move X0, [X31+144]
	195 Move X1, X22
	196 Move X2, X31
	197 Call FilteringSettings.set_sortingLayerRange, X0, X1
	198 Move X9, [X31+184]
	199 Move W8, [X9+248]
	200 Compare W8, 0
	201 JumpIfEqual {211}
	202 Move X8, [X9+152]
	203 Compare X8, 0
	204 JumpIfEqual {1033}
	205 Move X9, [X8+72]
	206 NotImplemented "Instruction LDUR not yet implemented."
	207 NotImplemented "Instruction LDUR not yet implemented."
	208 Move [X31+4800], X9
	209 Move [X31+299], V0
	210 Move [X31+298], V1
	211 Add X8, X31, 4064
	212 Move W0, W31
	213 Move X1, X31
	214 Call RenderTargetIdentifier.op_Implicit, X0
	215 Move V0, [X31+254]
	216 Move V1, [X31+255]
	217 Move X8, [X31+4096]
	218 Move [X31+298], V0
	219 Move [X31+299], V1
	220 Move [X31+4800], X8
	221 Move X1, [X31+160]
	222 Move X24, [X31+4888]
	223 Add X0, X31, 4064
	224 Move W2, 696
	225 Call 0x3EB2AC0
	226 Move X1, [X31+168]
	227 Add X0, X31, 4096
	228 Add X0, X0, 1600
	229 Move W2, 196
	230 Call 0x3EB2AC0
	231 Move X8, [X31+144]
	232 Move X10, 0x73C000
	233 Move V1, [X31+298]
	234 Move V2, [X31+299]
	235 Move V0, [X8]
	236 Move X8, [X8+16]
	237 Move X9, [X31+4800]
	238 Move X10, [X10+1624]
	239 Move [X31+252], V0
	240 Move [X31+4048], X8
	241 Move [X31+249], V1
	242 Move X0, [X10]
	243 Move [X31+250], V2
	244 Move [X31+4016], X9
	245 Move W8, [X0+224]
	246 Compare W8, 0
	247 JumpIfNotEqual {249}
	248 Call 0x1C17DFC
	249 Add X0, X31, 3288
	250 Add X1, X31, 4064
	251 Move W2, 696
	252 Call 0x3EB2AC0
	253 Add X0, X31, 4096
	254 Add X1, X31, 4096
	255 Add X0, X0, 1400
	256 Add X1, X1, 1600
	257 Move W2, 196
	258 Call 0x3EB2AC0
	259 Move V0, [X31+252]
	260 Move X8, [X31+4048]
	261 Move V1, [X31+249]
	262 Move V2, [X31+250]
	263 Move X9, [X31+4016]
	264 Move [X31+204], V0
	265 Move [X31+3280], X8
	266 Move [X31+201], V1
	267 Move [X31+202], V2
	268 Move [X31+3248], X9
	269 Move X0, [X31+184]
	270 Add X3, X31, 4096
	271 Add X6, X31, 4096
	272 Add X2, X31, 3288
	273 Add X3, X3, 1400
	274 Add X4, X31, 3264
	275 Add X5, X31, 3216
	276 Add X6, X6, 788
	277 Move X1, X24
	278 Call RendererLighting.RenderNormals, X0, X1, X2, X3, X4, X5, X6
	279 Move X0, [X29]
	280 Move W8, [X0+224]
	281 Compare W8, 0
	282 JumpIfNotEqual {285}
	283 Call 0x1C17DFC
	284 Move X0, [X29]
	285 Move X8, [X0+184]
	286 Move X2, [X8+56]
	287 Move [X31+4064], W31
	288 Add X0, X31, 4064
	289 Move X1, X19
	290 Move X3, X31
	291 Call ProfilingScope..ctor, X0, X1, X2
	292 Move W8, [X31+4064]
	293 Move X1, [X31+160]
	294 Add X9, X31, 4096
	295 Add X9, X9, 768
	296 Add X0, X31, 4064
	297 Move W2, 696
	298 Move [X9], W8
	299 Call 0x3EB2AC0
	300 Move X8, 0x73B000
	301 Move X8, [X8+1624]
	302 Add X23, X23, 32
	303 Move W24, [X23]
	304 Move X0, [X8]
	305 Move W8, [X0+224]
	306 Compare W8, 0
	307 JumpIfNotEqual {309}
	308 Call 0x1C17DFC
	309 Add X0, X31, 2520
	310 Add X1, X31, 4064
	311 Move W2, 696
	312 Call 0x3EB2AC0
	313 Move X0, [X31+184]
	314 Add X1, X31, 2520
	315 Move X2, X19
	316 Move W3, W24
	317 Move X4, X23
	318 Move X5, X26
	319 Call RendererLighting.RenderLights, X0, X1, X2, X3, X4, X5
	320 Move X24, X31
	321 Move W23, 15
	322 Add X0, X31, 4096
	323 Add X0, X0, 768
	324 Move X1, X31
	325 Call ProfilingScope.Dispose, X0
	326 Compare X24, 0
	327 JumpIfNotEqual {1031}
	328 NotImplemented "Instruction CMP not yet implemented."
	329 Compare W23, 0
	330 JumpIfNotEqual {992}
	331 Move W8, [X31+156]
	332 Add X25, X25, 1
	333 NotImplemented "Instruction CMP not yet implemented."
	334 NotImplemented "Instruction CMP not yet implemented."
	335 Move X23, X0
	336 Move [X31+128], X1
	337 Move X0, X23
	338 Call 0x3EB2AD0
	339 Move X24, [X0]
	340 Call 0x3EB2AE0
	341 Move W23, W31
	342 Move [X31+156], W31
	343 Move [X31+156], W20
	344 Move X25, [X31+64]
	345 Move X27, [X31+184]
	346 Add X0, X31, 4096
	347 Add X0, X0, 776
	348 Move X1, X31
	349 Call ProfilingScope.Dispose, X0
	350 Move X8, [X31+160]
	351 Move W9, [X8+248]
	352 Move W8, [X31+156]
	353 Move X4, [X31+176]
	354 NotImplemented "Instruction CMP not yet implemented."
	355 Add W20, W8, W25
	356 Move TEMP, 0
	357 Not TEMP
	358 Move W8, TEMP
	359 Move [X31+4880], W8
	360 Add X8, X31, 4096
	361 Add X8, X8, 768
	362 Move [X31+128], W9
	363 Move [X8+12], W31
	364 Move X8, [X31+120]
	365 NotImplemented "Instruction CMP not yet implemented."
	366 Move W2, [X31+156]
	367 Add X5, X31, 4096
	368 Add X6, X31, 4096
	369 Add X5, X5, 784
	370 Add X6, X6, 780
	371 Move X0, X27
	372 Move W1, W25
	373 Call Render2DLightingPass.DetermineWhenToResolve, X0, X1, X2, X3, X4, X5, X6
	374 Move X8, [X27+240]
	375 Compare X8, 0
	376 JumpIfEqual {1034}
	377 Move X8, [X8+88]
	378 Compare X8, 0
	379 JumpIfEqual {1034}
	380 Move X0, [X29]
	381 Move X8, [X8+24]
	382 Move W9, [X0+224]
	383 Move [X31+88], X8
	384 Compare W9, 0
	385 JumpIfNotEqual {388}
	386 Call 0x1C17DFC
	387 Move X0, [X29]
	388 Move X8, [X0+184]
	389 Add X0, X31, 4096
	390 Add X0, X0, 776
	391 Move X1, X19
	392 Move X2, [X8+64]
	393 Move X3, X31
	394 Call ProfilingScope..ctor, X0, X1, X2
	395 Move W9, [X31+4880]
	396 Move W8, 1
	397 Move [X31+100], W9
	398 NotImplemented "Instruction CMP not yet implemented."
	399 Move W9, [X31+128]
	400 NotImplemented "Instruction CINC not yet implemented."
	401 NotImplemented "Instruction CMP not yet implemented."
	402 NotImplemented "Instruction CSEL not yet implemented."
	403 Move X0, X27
	404 Move X1, X31
	405 Move [X31+56], X20
	406 Call ScriptableRenderPass.get_colorAttachmentHandle, X0
	407 Move X8, 0x702000
	408 Move X8, [X8+2296]
	409 Move X23, X0
	410 Move X24, [X27+152]
	411 Move X0, [X8]
	412 Move W8, [X0+224]
	413 Compare W8, 0
	414 JumpIfNotEqual {416}
	415 Call 0x1C17DFC
	416 Move TEMP, 0
	417 Not TEMP
	418 Move W8, TEMP
	419 Move S0, W31
	420 Move S1, W31
	421 Move S2, W31
	422 Move S3, W31
	423 Move X0, X19
	424 Move X1, X23
	425 Move W2, W31
	426 Move W3, W22
	427 Move X4, X24
	428 Move W5, W31
	429 Move W6, W22
	430 Move W7, W31
	431 Move [X31+24], X31
	432 Move [X31+16], W8
	433 Move [X31+8], W8
	434 Move [X31], W31
	435 Call CoreUtils.SetRenderTarget, X0, X1, X2, X3, X4, X5, X6, X7, X8, X9, X10, X11
	436 NotImplemented "Instruction CMP not yet implemented."
	437 Move X8, [X31+6072]
	438 Move X9, [X31+64]
	439 Move X28, W9
	440 Move X9, [X31+56]
	441 Move [X31+120], X8
	442 Move X8, [X31+88]
	443 Move X21, 0x73B000
	444 Move X9, W9
	445 Move [X31+104], X9
	446 And X25, X8, 0
	447 Add X8, X31, 4096
	448 Add X8, X8, 1808
	449 Move X21, [X21+1624]
	450 Or X8, X8, 15
	451 Move [X31+168], X8
	452 Move X0, [X29]
	453 Move W8, [X0+224]
	454 Compare W8, 0
	455 JumpIfEqual {457}
	456 Move X20, [X31+176]
	457 Move X20, [X31+176]
	458 Call 0x1C17DFC
	459 Move X0, [X29]
	460 Move X8, [X0+184]
	461 Move X2, [X8+72]
	462 Move [X31+4064], W31
	463 Add X0, X31, 4064
	464 Move X1, X19
	465 Move X3, X31
	466 Call ProfilingScope..ctor, X0, X1, X2
	467 Move W8, [X31+4064]
	468 Add X9, X31, 4096
	469 Add X9, X9, 768
	470 Move [X9], W8
	471 Compare X20, 0
	472 JumpIfEqual {949}
	473 Move W8, [X20+24]
	474 NotImplemented "Instruction CMP not yet implemented."
	475 Move W8, 52
	476 NotImplemented "Instruction MADD not yet implemented."
	477 Move V0, [X8+32]
	478 Move V1, [X8+48]
	479 Move V2, [X8+4]
	480 Move W8, [X8+80]
	481 Move [X31+369], V0
	482 Move W9, [X31+5916]
	483 Move [X31+5952], W8
	484 Move [X31+371], V2
	485 Move [X31+370], V1
	486 NotImplemented "Instruction CMP not yet implemented."
	487 Move X8, [X31+88]
	488 NotImplemented "Instruction CMP not yet implemented."
	489 Move X22, X31
	490 Move W8, [X31+5928]
	491 Move W9, 1
	492 NotImplemented "Instruction LSLV not yet implemented."
	493 And W20, W8, W9
	494 Move W8, [X26+48]
	495 Move V1, [X26+16]
	496 Move V0, [X26+32]
	497 Move V2, [X26]
	498 Move [X31+2512], W8
	499 Move [X31+156], V0
	500 Move [X31+155], V1
	501 Move [X31+154], V2
	502 Add X0, X31, 4096
	503 Add X8, X31, 4064
	504 Add X0, X0, 1808
	505 Add X2, X31, 2464
	506 Move X1, X19
	507 Move W3, W22
	508 Call LayerBatch.GetRTId, X0, X1, X2, X3
	509 Move V0, [X31+254]
	510 Move V1, [X31+255]
	511 Move X8, [X31+4096]
	512 Move X0, [X29]
	513 Move [X31+301], V0
	514 Move [X31+302], V1
	515 Move [X31+4848], X8
	516 Move W8, [X0+224]
	517 Compare W8, 0
	518 JumpIfNotEqual {521}
	519 Call 0x1C17DFC
	520 Move X0, [X29]
	521 Move X8, [X0+184]
	522 Move X8, [X8+16]
	523 Compare X8, 0
	524 JumpIfEqual {947}
	525 Move W9, [X8+24]
	526 NotImplemented "Instruction CMP not yet implemented."
	527 Add X8, X8, X22
	528 Move V0, [X31+301]
	529 Move V1, [X31+302]
	530 Move X9, [X31+4848]
	531 Move W1, [X8+32]
	532 Move [X31+254], V0
	533 Move [X31+255], V1
	534 Move [X31+4096], X9
	535 Compare X19, 0
	536 JumpIfEqual {945}
	537 Move V0, [X31+254]
	538 Move V1, [X31+255]
	539 Move X8, [X31+4096]
	540 Move [X31+151], V0
	541 Move [X31+152], V1
	542 Move [X31+2448], X8
	543 Add X2, X31, 2416
	544 Move X0, X19
	545 Move X3, X31
	546 Call CommandBuffer.SetGlobalTexture, X0, X1, X2
	547 Move X0, [X21]
	548 Move W8, [X0+224]
	549 Compare W8, 0
	550 JumpIfNotEqual {552}
	551 Call 0x1C17DFC
	552 NotImplemented "Instruction CMP not yet implemented."
	553 NotImplemented "Instruction CSET not yet implemented."
	554 Move X0, X19
	555 Move W1, W22
	556 Call RendererLighting.EnableBlendStyle, X0, X1, X2
	557 Add X22, X22, 1
	558 NotImplemented "Instruction CMP not yet implemented."
	559 Move X8, 0x737000
	560 Move X8, [X8+3200]
	561 Move X0, [X8]
	562 Move W8, [X0+224]
	563 Compare W8, 0
	564 JumpIfNotEqual {566}
	565 Call 0x1C17DFC
	566 Add X0, X31, 4096
	567 Add X0, X0, 792
	568 Move X1, X19
	569 Move X2, X31
	570 Call ScriptableRenderContext.ExecuteCommandBuffer, X0, X1
	571 Compare X19, 0
	572 JumpIfEqual {951}
	573 Move X0, X19
	574 Move X1, X31
	575 Call CommandBuffer.Clear, X0
	576 Move X0, X27
	577 Call Render2DLightingPass.GetCameraSortingLayerBoundsIndex, X0
	578 Move W8, [X31+128]
	579 Move W23, W0
	580 NotImplemented "Instruction CMP not yet implemented."
	581 Add X8, X31, 4096
	582 Move W9, [X31+100]
	583 Add X8, X8, 768
	584 Move W8, [X8+12]
	585 NotImplemented "Instruction CMP not yet implemented."
	586 NotImplemented "Instruction CSET not yet implemented."
	587 And W31, W9, W8
	588 Move W8, 1
	589 NotImplemented "Instruction CINC not yet implemented."
	590 Move W22, W31
	591 Move X0, [X31+168]
	592 Move X1, X31
	593 Call SortingLayerRange.get_lowerBound, X0
	594 NotImplemented "Instruction SXTH not yet implemented."
	595 NotImplemented "Instruction SXTH not yet implemented."
	596 NotImplemented "Instruction CMP not yet implemented."
	597 Move X0, [X31+168]
	598 Move X1, X31
	599 Call SortingLayerRange.get_upperBound, X0
	600 NotImplemented "Instruction SXTH not yet implemented."
	601 NotImplemented "Instruction CMP not yet implemented."
	602 Move X8, [X31+184]
	603 Move X8, [X8+240]
	604 Compare X8, 0
	605 JumpIfEqual {957}
	606 Move W8, [X8+97]
	607 Compare W8, 0
	608 JumpIfEqual {685}
	609 Move X0, [X31+168]
	610 Move X1, X31
	611 Call SortingLayerRange.get_lowerBound, X0
	612 Move W1, W0
	613 Move [X31+4064], W31
	614 Move X20, [X31+144]
	615 Add X0, X31, 4064
	616 Move W2, W27
	617 Move X3, X31
	618 Call SortingLayerRange..ctor, X0, X1, X2
	619 Move X9, [X31+80]
	620 Move W8, [X31+4064]
	621 And X9, X9, 0
	622 Or X1, X9, X8
	623 Move X0, X20
	624 Move X2, X31
	625 Move [X31+80], X1
	626 Call FilteringSettings.set_sortingLayerRange, X0, X1
	627 Move X1, [X31+120]
	628 Move X23, [X31+4888]
	629 Add X0, X31, 4096
	630 Add X0, X0, 1200
	631 Move W2, 196
	632 Call 0x3EB2AC0
	633 Move X24, [X31+160]
	634 Add X5, X31, 4096
	635 Add X5, X5, 1200
	636 Move X1, X23
	637 Move X2, X19
	638 Move X3, X24
	639 Move X4, X20
	640 Call Render2DLightingPass.Render, X0, X1, X2, X3, X4, X5
	641 Move X23, [X31+4888]
	642 Add X0, X31, 1672
	643 Move W2, 696
	644 Move X1, X24
	645 Call 0x3EB2AC0
	646 Move X0, [X31+184]
	647 Add X2, X31, 1672
	648 Move X1, X23
	649 Move W3, W22
	650 Call Render2DLightingPass.CopyCameraSortingLayerRenderTexture, X0, X1, X2, X3
	651 Move X0, [X31+168]
	652 Move X22, [X31+72]
	653 Move X1, X31
	654 Call SortingLayerRange.get_upperBound, X0
	655 Add W1, W27, 1
	656 Move W2, W0
	657 Move [X31+5696], W31
	658 Move X20, [X31+144]
	659 Add X0, X31, 4096
	660 Add X0, X0, 1600
	661 Move X3, X31
	662 Call SortingLayerRange..ctor, X0, X1, X2
	663 Move W8, [X31+5696]
	664 And X9, X22, 0
	665 Or X22, X9, X8
	666 Move X0, X20
	667 Move X1, X22
	668 Move X2, X31
	669 Call FilteringSettings.set_sortingLayerRange, X0, X1
	670 Move X1, [X31+120]
	671 Move [X31+72], X22
	672 Move X22, [X31+4888]
	673 Add X0, X31, 4096
	674 Add X0, X0, 1000
	675 Move W2, 196
	676 Call 0x3EB2AC0
	677 Move X3, [X31+160]
	678 Move X27, [X31+184]
	679 Add X5, X31, 4096
	680 Add X5, X5, 1000
	681 Move X1, X22
	682 Move X2, X19
	683 Move X4, X20
	684 Call Render2DLightingPass.Render, X0, X1, X2, X3, X4, X5
	685 Move X20, [X31+168]
	686 Move X1, X31
	687 Move X0, X20
	688 Call SortingLayerRange.get_lowerBound, X0
	689 Move W23, W0
	690 Move X0, X20
	691 Move X1, X31
	692 Call SortingLayerRange.get_upperBound, X0
	693 Move W2, W0
	694 Move [X31+4064], W31
	695 Move X20, [X31+144]
	696 Add X0, X31, 4064
	697 Move W1, W23
	698 Move X3, X31
	699 Call SortingLayerRange..ctor, X0, X1, X2
	700 Move X9, [X31+136]
	701 Move W8, [X31+4064]
	702 And X9, X9, 0
	703 Or X1, X9, X8
	704 Move X0, X20
	705 Move X2, X31
	706 Move [X31+136], X1
	707 Call FilteringSettings.set_sortingLayerRange, X0, X1
	708 Move X1, [X31+120]
	709 Move X23, [X31+4888]
	710 Add X0, X31, 4096
	711 Add X0, X0, 800
	712 Move W2, 196
	713 Call 0x3EB2AC0
	714 Move X3, [X31+160]
	715 Add X5, X31, 4096
	716 Add X5, X5, 800
	717 Move X1, X23
	718 Move X2, X19
	719 Move X4, X20
	720 Call Render2DLightingPass.Render, X0, X1, X2, X3, X4, X5
	721 Move X0, [X31+168]
	722 Move X1, X31
	723 Call SortingLayerRange.get_upperBound, X0
	724 And W8, W27, 0xFFFF
	725 NotImplemented "Instruction CMP not yet implemented."
	726 Move X27, [X31+184]
	727 Move X8, [X27+240]
	728 Compare X8, 0
	729 JumpIfEqual {956}
	730 Move W8, [X8+97]
	731 Compare W8, 0
	732 JumpIfEqual {744}
	733 Move X1, [X31+160]
	734 Move X23, [X31+4888]
	735 Add X0, X31, 976
	736 Move W2, 696
	737 Call 0x3EB2AC0
	738 Add X2, X31, 976
	739 Move X0, X27
	740 Move X1, X23
	741 Move W3, W22
	742 Call Render2DLightingPass.CopyCameraSortingLayerRenderTexture, X0, X1, X2, X3
	743 Move X27, [X31+184]
	744 Move W8, [X31+116]
	745 Move X22, X31
	746 Move W20, 42
	747 Compare W8, 0
	748 JumpIfEqual {930}
	749 Move W8, [X31+5924]
	750 NotImplemented "Instruction CMP not yet implemented."
	751 Move X8, 0x73B000
	752 Move X8, [X8+1680]
	753 Move X22, [X8]
	754 Move X0, X19
	755 Move X1, X22
	756 Move X2, X31
	757 Call CommandBuffer.BeginSample, X0, X1
	758 Move W8, [X31+128]
	759 NotImplemented "Instruction CMP not yet implemented."
	760 Add X8, X31, 4096
	761 Add X8, X8, 768
	762 Move W8, [X8+12]
	763 NotImplemented "Instruction CMP not yet implemented."
	764 Move W8, [X31+100]
	765 NotImplemented "Instruction CCMP not yet implemented."
	766 Move W8, 1
	767 NotImplemented "Instruction CINC not yet implemented."
	768 Move X22, X31
	769 Move X8, [X29]
	770 Move W9, [X8+224]
	771 Compare W9, 0
	772 JumpIfNotEqual {776}
	773 Move X0, X8
	774 Call 0x1C17DFC
	775 Move X8, [X29]
	776 Move X9, [X8+184]
	777 Move X9, [X9+16]
	778 Compare X9, 0
	779 JumpIfEqual {942}
	780 NotImplemented "Instruction LDRSW not yet implemented."
	781 NotImplemented "Instruction CMP not yet implemented."
	782 Move W10, [X8+224]
	783 Compare W10, 0
	784 JumpIfNotEqual {792}
	785 Move X0, X8
	786 Call 0x1C17DFC
	787 Move X8, [X29]
	788 Move X8, [X8+184]
	789 Move X9, [X8+16]
	790 Compare X9, 0
	791 JumpIfEqual {948}
	792 Move W8, [X9+24]
	793 NotImplemented "Instruction CMP not yet implemented."
	794 Add X8, X9, X22
	795 Move W23, [X8+32]
	796 Move X0, X31
	797 Call Texture2D.get_blackTexture
	798 Add X8, X31, 4096
	799 Add X8, X8, 1600
	800 Move X1, X31
	801 Call RenderTargetIdentifier.op_Implicit, X0
	802 Move V0, [X31+356]
	803 Move V1, [X31+357]
	804 Move X8, [X31+5728]
	805 Move [X31+254], V0
	806 Move [X31+255], V1
	807 Move [X31+4096], X8
	808 Compare X19, 0
	809 JumpIfEqual {943}
	810 Move V0, [X31+254]
	811 Move V1, [X31+255]
	812 Move X8, [X31+4096]
	813 Move [X31+148], V0
	814 Move [X31+149], V1
	815 Move [X31+2400], X8
	816 Add X2, X31, 2368
	817 Move X0, X19
	818 Move W1, W23
	819 Move X3, X31
	820 Call CommandBuffer.SetGlobalTexture, X0, X1, X2
	821 Move X0, [X21]
	822 Move W8, [X0+224]
	823 Compare W8, 0
	824 JumpIfNotEqual {826}
	825 Call 0x1C17DFC
	826 NotImplemented "Instruction CMP not yet implemented."
	827 NotImplemented "Instruction CSET not yet implemented."
	828 Move X0, X19
	829 Move W1, W22
	830 Call RendererLighting.EnableBlendStyle, X0, X1, X2
	831 Add X22, X22, 1
	832 Move W20, W31
	833 Move X1, [X31+160]
	834 Add X0, X31, 4064
	835 Move W2, 696
	836 Call 0x3EB2AC0
	837 Move W27, [X31+5904]
	838 Move W24, [X31+5908]
	839 Move X0, [X31+184]
	840 Move X1, X31
	841 Call ScriptableRenderPass.get_colorAttachmentHandle, X0
	842 Compare X0, 0
	843 JumpIfEqual {952}
	844 Move X8, [X0+72]
	845 NotImplemented "Instruction LDUR not yet implemented."
	846 NotImplemented "Instruction LDUR not yet implemented."
	847 Move X10, [X31+184]
	848 Move [X31+5728], X8
	849 Move [X31+357], V0
	850 Move [X31+356], V1
	851 Move X8, [X10+152]
	852 Compare X8, 0
	853 JumpIfEqual {953}
	854 Move X9, [X8+72]
	855 NotImplemented "Instruction LDUR not yet implemented."
	856 NotImplemented "Instruction LDUR not yet implemented."
	857 Move [X31+4016], X9
	858 Move [X31+250], V0
	859 Move [X31+249], V1
	860 Move X8, [X10+240]
	861 Compare X8, 0
	862 JumpIfEqual {954}
	863 Move X23, [X8+344]
	864 Compare X23, 0
	865 JumpIfEqual {955}
	866 Move X8, [X23]
	867 Move X10, 0x73B000
	868 NotImplemented "Instruction LDRH not yet implemented."
	869 Move X10, [X10+1640]
	870 Move X1, [X10]
	871 Compare X9, 0
	872 JumpIfEqual {879}
	873 Move X10, [X8+176]
	874 Add X10, X10, 8
	875 NotImplemented "Instruction LDUR not yet implemented."
	876 NotImplemented "Instruction CMP not yet implemented."
	877 Subtract X9, X9, 1
	878 Add X10, X10, 16
	879 Move X0, X23
	880 Move W2, W31
	881 Call 0x1C5D788
	882 NotImplemented "Instruction LDRSW not yet implemented."
	883 Add X8, X8, X9
	884 Add X0, X8, 312
	885 Move X8, [X0]
	886 Move X1, [X0+8]
	887 Move X0, X23
	888 NotImplemented "Instruction BLR not yet implemented."
	889 Move X23, X0
	890 Move X0, [X21]
	891 Move W8, [X0+224]
	892 Compare W8, 0
	893 JumpIfNotEqual {895}
	894 Call 0x1C17DFC
	895 Add X0, X31, 280
	896 Add X1, X31, 4064
	897 Move W2, 696
	898 Call 0x3EB2AC0
	899 Move V0, [X31+356]
	900 Move V1, [X31+357]
	901 Move X8, [X31+5728]
	902 Move V2, [X31+249]
	903 Move V3, [X31+250]
	904 Move X9, [X31+4016]
	905 Move [X31+240], V0
	906 Move [X31+248], V1
	907 Move [X31+272], X8
	908 Move [X31+192], V2
	909 Move [X31+200], V3
	910 Move [X31+224], X9
	911 Move X0, [X31+184]
	912 Add X1, X31, 280
	913 Add X5, X31, 240
	914 Add X6, X31, 192
	915 Move X2, X19
	916 Move W3, W27
	917 Move W4, W24
	918 Move W7, W31
	919 Move [X31+16], X23
	920 Move [X31+8], W31
	921 Move [X31], W20
	922 Call RendererLighting.RenderLightVolumes, X0, X1, X2, X3, X4, X5, X6, X7, X8, X9, X10
	923 Move X0, X19
	924 Move X1, X22
	925 Move X2, X31
	926 Call CommandBuffer.EndSample, X0, X1
	927 Move X27, [X31+184]
	928 Move X22, X31
	929 Move W20, 42
	930 Add X0, X31, 4096
	931 Add X0, X0, 768
	932 Move X1, X31
	933 Call ProfilingScope.Dispose, X0
	934 Compare X22, 0
	935 JumpIfNotEqual {1026}
	936 NotImplemented "Instruction CMP not yet implemented."
	937 Compare W20, 0
	938 JumpIfNotEqual {992}
	939 Move X8, [X31+104]
	940 Add X28, X28, 1
	941 NotImplemented "Instruction CMP not yet implemented."
	942 Call 0x1C17F20
	943 Call 0x1C17F20
	944 Call 0x1C17F28
	945 Call 0x1C17F20
	946 Call 0x1C17F28
	947 Call 0x1C17F20
	948 Call 0x1C17F20
	949 Call 0x1C17F20
	950 Call 0x1C17F28
	951 Call 0x1C17F20
	952 Call 0x1C17F20
	953 Call 0x1C17F20
	954 Call 0x1C17F20
	955 Call 0x1C17F20
	956 Call 0x1C17F20
	957 Call 0x1C17F20
	958 Move [X31+72], X22
	959 Move X27, [X31+184]
	960 Move X20, X1
	961 Move X23, X0
	962 NotImplemented "Instruction CMP not yet implemented."
	963 Move X0, X23
	964 Call 0x3EB2AD0
	965 Move X22, [X0]
	966 Call 0x3EB2AE0
	967 Move W20, W31
	968 Add X0, X31, 4096
	969 Add X0, X0, 776
	970 Move X1, X31
	971 Call ProfilingScope.Dispose, X0
	972 Move X8, [X31+56]
	973 Move X21, [X31+64]
	974 NotImplemented "Instruction CMP not yet implemented."
	975 Move X10, [X31+176]
	976 Compare X10, 0
	977 JumpIfEqual {1034}
	978 Move W9, 52
	979 Move X8, W8
	980 NotImplemented "Instruction SMADDL not yet implemented."
	981 Add X22, X9, 32
	982 Subtract X20, X8, W21
	983 Move X8, [X31+176]
	984 Move W8, [X8+24]
	985 NotImplemented "Instruction CMP not yet implemented."
	986 Move X0, X22
	987 Move X1, X19
	988 Call LayerBatch.ReleaseRT, X0, X1
	989 Add X22, X22, 52
	990 Subtract X20, X20, 1
	991 Add W21, W21, 1
	992 Add X0, X31, 4096
	993 Add X0, X0, 776
	994 Move X1, X31
	995 Call ProfilingScope.Dispose, X0
	996 Move X8, [X31+48]
	997 Move X8, [X8+40]
	998 Move X9, [X31+5960]
	999 NotImplemented "Instruction CMP not yet implemented."
	1000 Move W0, [X31+156]
	1001 Add X31, X31, 4096
	1002 Add X31, X31, 1872
	1003 Move X20, [X31+80]
	1004 Move X19, [X31+88]
	1005 Move X22, [X31+64]
	1006 Move X21, [X31+72]
	1007 Move X24, [X31+48]
	1008 Move X23, [X31+56]
	1009 Move X26, [X31+32]
	1010 Move X25, [X31+40]
	1011 Move X28, [X31+16]
	1012 Move X27, [X31+24]
	1013 Move X29, [X31+96]
	1014 Move X30, [X31+104]
	1015 Return X0
	1016 Move X22, X31
	1017 Add X0, X31, 4096
	1018 Add X0, X0, 768
	1019 Move X1, X31
	1020 Call ProfilingScope.Dispose, X0
	1021 Compare X22, 0
	1022 JumpIfEqual {1051}
	1023 Move X0, X22
	1024 Call 0x1C17F18
	1025 Call 0x1C17F28
	1026 Move X0, X22
	1027 Call 0x1C17F18
	1028 Call 0x1C17F28
	1029 Move [X31+156], W31
	1030 Call 0x1C17F20
	1031 Move X0, X24
	1032 Call 0x1C17F18
	1033 Call 0x1C17F20
	1034 Call 0x1C17F20
	1035 Move X24, X31
	1036 Add X0, X31, 4096
	1037 Add X0, X0, 768
	1038 Move X1, X31
	1039 Call ProfilingScope.Dispose, X0
	1040 Compare X24, 0
	1041 JumpIfEqual {1074}
	1042 Move X0, X24
	1043 Call 0x1C17F18
	1044 Call 0x3EB2B20
	1045 Move X23, X0
	1046 Move [X31+128], X1
	1047 Move X20, X1
	1048 Move X23, X0
	1049 Move X20, X1
	1050 Move X23, X0
	1051 NotImplemented "Instruction CMP not yet implemented."
	1052 Move X0, X23
	1053 Call 0x3EB2AD0
	1054 Move X22, [X0]
	1055 Call 0x3EB2AE0
	1056 Add X0, X31, 4096
	1057 Add X0, X0, 776
	1058 Move X1, X31
	1059 Call ProfilingScope.Dispose, X0
	1060 Compare X22, 0
	1061 JumpIfEqual {972}
	1062 Move X22, X31
	1063 Move X23, X0
	1064 Add X0, X31, 4096
	1065 Add X0, X0, 776
	1066 Move X1, X31
	1067 Call ProfilingScope.Dispose, X0
	1068 Compare X22, 0
	1069 JumpIfEqual {1099}
	1070 Move X0, X22
	1071 Call 0x1C17F18
	1072 Move X23, X0
	1073 Move [X31+128], X1
	1074 Move X8, [X31+128]
	1075 NotImplemented "Instruction CMP not yet implemented."
	1076 Move X0, X23
	1077 Call 0x3EB2AD0
	1078 Move X22, [X0]
	1079 Call 0x3EB2AE0
	1080 Add X0, X31, 4096
	1081 Add X0, X0, 776
	1082 Move X1, X31
	1083 Call ProfilingScope.Dispose, X0
	1084 Move X25, [X31+64]
	1085 Move X8, [X31+160]
	1086 Move X27, [X31+184]
	1087 Compare X22, 0
	1088 JumpIfEqual {351}
	1089 Move X0, X22
	1090 Call 0x1C17F18
	1091 Move X22, X31
	1092 Move X23, X0
	1093 Add X0, X31, 4096
	1094 Add X0, X0, 776
	1095 Move X1, X31
	1096 Call ProfilingScope.Dispose, X0
	1097 Compare X22, 0
	1098 JumpIfNotEqual {1101}
	1099 Move X0, X23
	1100 Call 0x1D2D690
	1101 Move X0, X22
	1102 Call 0x1C17F18
	1103 Call 0x1991590

Method: System.Void Execute(UnityEngine.Rendering.ScriptableRenderContext context, ref UnityEngine.Rendering.Universal.RenderingData renderingData)

Disassembly:
	0x03A1C398 ADRP X0, 0x738000
	0x03A1C39C LDR X0, [X0 + 0x698]
	0x03A1C3A0 BL 0x1C16CF4
	0x03A1C3A4 ADRP X0, 0x738000
	0x03A1C3A8 LDR X0, [X0 + 0x498]
	0x03A1C3AC BL 0x1C16CF4
	0x03A1C3B0 MOVZ W8, 0x1
	0x03A1C3B4 STRB W8, [X22 + 0xFE8]
	0x03A1C3B8 LDR X0, [X21]
	0x03A1C3BC STR W31, [X31 + 0x1C]
	0x03A1C3C0 LDR W8, [X0 + 0xE0]
	0x03A1C3C4 CBNZ W8, 0x3A1C3CC
	0x03A1C3C8 BL 0x1C16DFC
	0x03A1C3CC BL 0x3A138DC
	0x03A1C3D0 MOV X21, X0
	0x03A1C3D4 BL 0x3A1D9C8
	0x03A1C3D8 STR W31, [X19]
	0x03A1C3DC CBZ X21, 0x3A1C5C4
	0x03A1C3E0 LDR W8, [X21 + 0x18]
	0x03A1C3E4 ADRP X26, 0x738000
	0x03A1C3E8 LDR X26, [X26 + 0x698]
	0x03A1C3EC CMP W8, 0x1
	0x03A1C3F0 B.LT 0x3A1C594
	0x03A1C3F4 MOV W22, W31
	0x03A1C3F8 MOVZ W27, 0x34
	0x03A1C3FC CMP W22, W8
	0x03A1C400 B.CS 0x3A1C5C0
	0x03A1C404 ADD X8, X21, W22, 0x2, SXTW
	0x03A1C408 ADD X24, X8, 0x20
	0x03A1C40C MOV X0, X24
	0x03A1C410 MOV X1, X31
	0x03A1C414 BL 0x3C008D0
	0x03A1C418 CBZ X20, 0x3A1C5C4
	0x03A1C41C LDR X8, [X20]
	0x03A1C420 ADRP X10, 0x738000
	0x03A1C424 MOV W23, W0
	0x03A1C428 LDRH W9, [X8 + 0x12E]
	0x03A1C42C LDR X10, [X10 + 0x668]
	0x03A1C430 LDR X1, [X10]
	0x03A1C434 CBZ X9, 0x3A1C458
	0x03A1C438 LDR X10, [X8 + 0xB0]
	0x03A1C43C ADD X10, X10, 0x8
	0x03A1C440 LDUR X11, [X10 - 0x8]
	0x03A1C444 CMP X11, X1
	0x03A1C448 B.EQ 0x3A1C468
	0x03A1C44C SUBS X9, X9, 0x1
	0x03A1C450 ADD X10, X10, 0x10
	0x03A1C454 B.NE 0x3A1C440
	0x03A1C458 MOVZ W2, 0x2
	0x03A1C45C MOV X0, X20
	0x03A1C460 BL 0x1C5C788
	0x03A1C464 B 0x3A1C478
	0x03A1C468 LDR W9, [X10]
	0x03A1C46C ADD W9, W9, 0x2
	0x03A1C470 ADD X8, X8, W9, 0x4, SXTW
	0x03A1C474 ADD X0, X8, 0x138
	0x03A1C478 LDP X9, X2, [X0]
	0x03A1C47C ADD X8, X31, 0x8
	0x03A1C480 MOV X0, X20
	0x03A1C484 MOV W1, W23
	0x03A1C488 BLR X9
	0x03A1C48C LDUR V0, [X31 + 0x8]
	0x03A1C490 LDR W8, [X31 + 0x18]
	0x03A1C494 LDR X9, [X26]
	0x03A1C498 STR V0, [X31 + 0x2]
	0x03A1C49C STR W8, [X31 + 0x30]
	0x03A1C4A0 LDR X8, [X9 + 0xB8]
	0x03A1C4A4 LDRSW X28, [X19]
	0x03A1C4A8 LDR X29, [X8]
	0x03A1C4AC ADD W8, W28, 0x1
	0x03A1C4B0 STR W8, [X19]
	0x03A1C4B4 CBZ X29, 0x3A1C5C4
	0x03A1C4B8 MOV W25, W22
	0x03A1C4BC LDR X8, [X21 + 0x18]
	0x03A1C4C0 ADD W25, W25, 0x1
	0x03A1C4C4 CMP W25, W8
	0x03A1C4C8 B.GE 0x3A1C4EC
	0x03A1C4CC MOV W0, W22
	0x03A1C4D0 MOV W1, W25
	0x03A1C4D4 MOV X2, X21
	0x03A1C4D8 MOV X3, X20
	0x03A1C4DC BL 0x3A1D408
	0x03A1C4E0 TBNZ X0, 0x0, 0x3A1C4BC
	0x03A1C4E4 LDR W8, [X21 + 0x18]
	0x03A1C4E8 B 0x3A1C4F0
	0x03A1C4EC MOV W25, W8
	0x03A1C4F0 CMP W22, W8
	0x03A1C4F4 B.CS 0x3A1C5C0
	0x03A1C4F8 MOV X0, X24
	0x03A1C4FC MOV X1, X31
	0x03A1C500 BL 0x3C008D8
	0x03A1C504 LDR W8, [X29 + 0x18]
	0x03A1C508 CMP W28, W8
	0x03A1C50C B.CS 0x3A1C5C0
	0x03A1C510 LDR W9, [X21 + 0x18]
	0x03A1C514 SUB W8, W25, 0x1
	0x03A1C518 CMP W8, W9
	0x03A1C51C B.CS 0x3A1C5C0
	0x03A1C520 CMP W22, 0x0
	0x03A1C524 ADD X8, X21, W8, 0x2, SXTW
	0x03A1C528 MOVN W9, 0x7FFF
	0x03A1C52C CSEL W22, W9, W0, EQ
	0x03A1C530 ADD X0, X8, 0x20
	0x03A1C534 MOV X1, X31
	0x03A1C538 BL 0x3C008D8
	0x03A1C53C LDR W8, [X21 + 0x18]
	0x03A1C540 MOV W24, W0
	0x03A1C544 MOV W1, W22
	0x03A1C548 MOV X3, X31
	0x03A1C54C CMP W25, W8
	0x03A1C550 MOVZ W8, 0x7FFF
	0x03A1C554 CSEL W2, W8, W0, EQ
	0x03A1C558 ADD X0, X31, 0x1C
	0x03A1C55C BL 0x3C5AE4C
	0x03A1C560 MADD X8, X28, X27, X29
	0x03A1C564 SXTH W9, W24
	0x03A1C568 STP W23, W9, [X8 + 0x20]
	0x03A1C56C LDR W9, [X31 + 0x1C]
	0x03A1C570 MOV W22, W25
	0x03A1C574 STR W9, [X8 + 0x28]
	0x03A1C578 LDR W9, [X31 + 0x30]
	0x03A1C57C LDR V0, [X31 + 0x2]
	0x03A1C580 STR W9, [X8 + 0x3C]
	0x03A1C584 STUR V0, [X8 + 0x2C]
	0x03A1C588 LDR W8, [X21 + 0x18]
	0x03A1C58C CMP W25, W8
	0x03A1C590 B.LT 0x3A1C3FC
	0x03A1C594 LDR X8, [X26]
	0x03A1C598 LDP X20, X19, [X31 + 0x90]
	0x03A1C59C LDP X22, X21, [X31 + 0x80]
	0x03A1C5A0 LDP X24, X23, [X31 + 0x70]
	0x03A1C5A4 LDR X8, [X8 + 0xB8]
	0x03A1C5A8 LDP X26, X25, [X31 + 0x60]
	0x03A1C5AC LDP X28, X27, [X31 + 0x50]
	0x03A1C5B0 LDP X29, X30, [X31 + 0x40]
	0x03A1C5B4 LDR X0, [X8]
	0x03A1C5B8 ADD X31, X31, 0xA0
	0x03A1C5BC RET
	0x03A1C5C0 BL 0x1C16F28
	0x03A1C5C4 BL 0x1C16F20
	0x03A1C5C8 STR X30, [X31 - 0x30]!
	0x03A1C5CC STP X22, X21, [X31 + 0x10]
	0x03A1C5D0 STP X20, X19, [X31 + 0x20]
	0x03A1C5D4 ADRP X21, 0x9C5000
	0x03A1C5D8 ADRP X20, 0x738000
	0x03A1C5DC LDRB W8, [X21 + 0xFF0]
	0x03A1C5E0 LDR X20, [X20 + 0x658]
	0x03A1C5E4 MOV X19, X1
	0x03A1C5E8 TBNZ X8, 0x0, 0x3A1C600
	0x03A1C5EC ADRP X0, 0x738000
	0x03A1C5F0 LDR X0, [X0 + 0x658]
	0x03A1C5F4 BL 0x1C16CF4
	0x03A1C5F8 MOVZ W8, 0x1
	0x03A1C5FC STRB W8, [X21 + 0xFF0]
	0x03A1C600 LDR X0, [X20]
	0x03A1C604 LDR W8, [X0 + 0xE0]
	0x03A1C608 CBNZ W8, 0x3A1C614
	0x03A1C60C BL 0x1C16DFC
	0x03A1C610 LDR X0, [X20]
	0x03A1C614 LDR X8, [X0 + 0xB8]
	0x03A1C618 LDR X20, [X8 + 0x48]
	0x03A1C61C CBZ X20, 0x3A1C678
	0x03A1C620 LDR X8, [X20 + 0x18]
	0x03A1C624 CMP W8, 0x1
	0x03A1C628 B.LT 0x3A1C664
	0x03A1C62C MOV X21, X31
	0x03A1C630 AND X8, X8, 0x0
	0x03A1C634 ADD X22, X20, 0x20
	0x03A1C638 CMP X21, W8, UXTW
	0x03A1C63C B.CS 0x3A1C674
	0x03A1C640 CBZ X19, 0x3A1C678
	0x03A1C644 LDR X1, [X22, X21, LSL #3]
	0x03A1C648 MOV X0, X19
	0x03A1C64C MOV X2, X31
	0x03A1C650 BL 0x3C4D124
	0x03A1C654 LDR W8, [X20 + 0x18]
	0x03A1C658 ADD X21, X21, 0x1
	0x03A1C65C CMP X21, W8, SXTW
	0x03A1C660 B.LT 0x3A1C638
	0x03A1C664 LDP X20, X19, [X31 + 0x20]
	0x03A1C668 LDP X22, X21, [X31 + 0x10]
	0x03A1C66C LDR X30, [X31], #0x30
	0x03A1C670 RET
	0x03A1C674 BL 0x1C16F28
	0x03A1C678 BL 0x1C16F20
	0x03A1C67C STP X30, X21, [X31 - 0x20]!
	0x03A1C680 STP X20, X19, [X31 + 0x10]
	0x03A1C684 ADRP X21, 0x9C5000
	0x03A1C688 LDRB W8, [X21 + 0xFF1]
	0x03A1C68C MOV X19, X1
	0x03A1C690 MOV X20, X0
	0x03A1C694 TBNZ X8, 0x0, 0x3A1C6AC
	0x03A1C698 ADRP X0, 0x738000
	0x03A1C69C LDR X0, [X0 + 0x660]
	0x03A1C6A0 BL 0x1C16CF4
	0x03A1C6A4 MOVZ W8, 0x1
	0x03A1C6A8 STRB W8, [X21 + 0xFF1]
	0x03A1C6AC CBZ X20, 0x3A1C8C8
	0x03A1C6B0 ADRP X21, 0x738000
	0x03A1C6B4 LDR X8, [X20]
	0x03A1C6B8 LDR X21, [X21 + 0x660]
	0x03A1C6BC LDRH W9, [X8 + 0x12E]
	0x03A1C6C0 LDR X1, [X21]
	0x03A1C6C4 CBZ X9, 0x3A1C6E8
	0x03A1C6C8 LDR X10, [X8 + 0xB0]
	0x03A1C6CC ADD X10, X10, 0x8
	0x03A1C6D0 LDUR X11, [X10 - 0x8]
	0x03A1C6D4 CMP X11, X1
	0x03A1C6D8 B.EQ 0x3A1C6F8
	0x03A1C6DC SUBS X9, X9, 0x1
	0x03A1C6E0 ADD X10, X10, 0x10
	0x03A1C6E4 B.NE 0x3A1C6D0
	0x03A1C6E8 MOV X0, X20
	0x03A1C6EC MOV W2, W31
	0x03A1C6F0 BL 0x1C5C788
	0x03A1C6F4 B 0x3A1C704
	0x03A1C6F8 LDRSW X9, [X10]
	0x03A1C6FC ADD X8, X8, X9, 0x4, LSL
	0x03A1C700 ADD X0, X8, 0x138
	0x03A1C704 LDP X8, X1, [X0]
	0x03A1C708 MOV X0, X20
	0x03A1C70C BLR X8
	0x03A1C710 CBZ X0, 0x3A1C8C8
	0x03A1C714 STRB W31, [X0 + 0x120]
	0x03A1C718 LDR X8, [X20]
	0x03A1C71C LDR X1, [X21]
	0x03A1C720 LDRH W9, [X8 + 0x12E]
	0x03A1C724 CBZ X9, 0x3A1C748
	0x03A1C728 LDR X10, [X8 + 0xB0]
	0x03A1C72C ADD X10, X10, 0x8
	0x03A1C730 LDUR X11, [X10 - 0x8]
	0x03A1C734 CMP X11, X1
	0x03A1C738 B.EQ 0x3A1C758
	0x03A1C73C SUBS X9, X9, 0x1
	0x03A1C740 ADD X10, X10, 0x10
	0x03A1C744 B.NE 0x3A1C730
	0x03A1C748 MOV X0, X20
	0x03A1C74C MOV W2, W31
	0x03A1C750 BL 0x1C5C788
	0x03A1C754 B 0x3A1C764
	0x03A1C758 LDRSW X9, [X10]
	0x03A1C75C ADD X8, X8, X9, 0x4, LSL
	0x03A1C760 ADD X0, X8, 0x138
	0x03A1C764 LDP X8, X1, [X0]
	0x03A1C768 MOV X0, X20
	0x03A1C76C BLR X8
	0x03A1C770 CBZ X0, 0x3A1C8C8
	0x03A1C774 STR W31, [X0 + 0x124]
	0x03A1C778 LDR X8, [X20]
	0x03A1C77C LDR X1, [X21]
	0x03A1C780 LDRH W9, [X8 + 0x12E]
	0x03A1C784 CBZ X9, 0x3A1C7A8
	0x03A1C788 LDR X10, [X8 + 0xB0]
	0x03A1C78C ADD X10, X10, 0x8
	0x03A1C790 LDUR X11, [X10 - 0x8]
	0x03A1C794 CMP X11, X1
	0x03A1C798 B.EQ 0x3A1C7B8
	0x03A1C79C SUBS X9, X9, 0x1
	0x03A1C7A0 ADD X10, X10, 0x10
	0x03A1C7A4 B.NE 0x3A1C790
	0x03A1C7A8 MOV X0, X20
	0x03A1C7AC MOV W2, W31
	0x03A1C7B0 BL 0x1C5C788
	0x03A1C7B4 B 0x3A1C7C4
	0x03A1C7B8 LDRSW X9, [X10]
	0x03A1C7BC ADD X8, X8, X9, 0x4, LSL
	0x03A1C7C0 ADD X0, X8, 0x138
	0x03A1C7C4 LDP X8, X1, [X0]
	0x03A1C7C8 MOV X0, X20
	0x03A1C7CC BLR X8
	0x03A1C7D0 CBZ X0, 0x3A1C8C8
	0x03A1C7D4 CBZ X19, 0x3A1C8C8
	0x03A1C7D8 LDR W1, [X0 + 0x130]
	0x03A1C7DC MOV X0, X19
	0x03A1C7E0 MOV X2, X31
	0x03A1C7E4 BL 0x3C4CBB0
	0x03A1C7E8 LDR X8, [X20]
	0x03A1C7EC LDR X1, [X21]
	0x03A1C7F0 LDRH W9, [X8 + 0x12E]
	0x03A1C7F4 CBZ X9, 0x3A1C818
	0x03A1C7F8 LDR X10, [X8 + 0xB0]
	0x03A1C7FC ADD X10, X10, 0x8
	0x03A1C800 LDUR X11, [X10 - 0x8]
	0x03A1C804 CMP X11, X1
	0x03A1C808 B.EQ 0x3A1C828
	0x03A1C80C SUBS X9, X9, 0x1
	0x03A1C810 ADD X10, X10, 0x10
	0x03A1C814 B.NE 0x3A1C800
	0x03A1C818 MOV X0, X20
	0x03A1C81C MOV W2, W31
	0x03A1C820 BL 0x1C5C788
	0x03A1C824 B 0x3A1C834
	0x03A1C828 LDRSW X9, [X10]
	0x03A1C82C ADD X8, X8, X9, 0x4, LSL
	0x03A1C830 ADD X0, X8, 0x138
	0x03A1C834 LDP X8, X1, [X0]
	0x03A1C838 MOV X0, X20
	0x03A1C83C BLR X8
	0x03A1C840 CBZ X0, 0x3A1C8C8
	0x03A1C844 LDR W1, [X0 + 0x140]
	0x03A1C848 MOV X0, X19
	0x03A1C84C MOV X2, X31
	0x03A1C850 BL 0x3C4CBB0
	0x03A1C854 LDR X8, [X20]
	0x03A1C858 LDR X1, [X21]
	0x03A1C85C LDRH W9, [X8 + 0x12E]
	0x03A1C860 CBZ X9, 0x3A1C884
	0x03A1C864 LDR X10, [X8 + 0xB0]
	0x03A1C868 ADD X10, X10, 0x8
	0x03A1C86C LDUR X11, [X10 - 0x8]
	0x03A1C870 CMP X11, X1
	0x03A1C874 B.EQ 0x3A1C894
	0x03A1C878 SUBS X9, X9, 0x1
	0x03A1C87C ADD X10, X10, 0x10
	0x03A1C880 B.NE 0x3A1C86C
	0x03A1C884 MOV X0, X20
	0x03A1C888 MOV W2, W31
	0x03A1C88C BL 0x1C5C788
	0x03A1C890 B 0x3A1C8A0
	0x03A1C894 LDRSW X9, [X10]
	0x03A1C898 ADD X8, X8, X9, 0x4, LSL
	0x03A1C89C ADD X0, X8, 0x138
	0x03A1C8A0 LDP X8, X1, [X0]
	0x03A1C8A4 MOV X0, X20
	0x03A1C8A8 BLR X8
	0x03A1C8AC CBZ X0, 0x3A1C8C8
	0x03A1C8B0 LDR W1, [X0 + 0x150]
	0x03A1C8B4 MOV X0, X19
	0x03A1C8B8 LDP X20, X19, [X31 + 0x10]
	0x03A1C8BC MOV X2, X31
	0x03A1C8C0 LDP X30, X21, [X31], #0x20
	0x03A1C8C4 B 0x3C4CBB0
	0x03A1C8C8 BL 0x1C16F20
	0x03A1C8CC LDR X0, [X0 + 0xF0]
	0x03A1C8D0 RET
	0x03A1C8D4 SUB X31, X31, 0x60
	0x03A1C8D8 STR X30, [X31 + 0x10]
	0x03A1C8DC STP X26, X25, [X31 + 0x20]
	0x03A1C8E0 STP X24, X23, [X31 + 0x30]
	0x03A1C8E4 STP X22, X21, [X31 + 0x40]
	0x03A1C8E8 STP X20, X19, [X31 + 0x50]
	0x03A1C8EC ADRP X25, 0x9C5000
	0x03A1C8F0 ADRP X26, 0x738000
	0x03A1C8F4 ADRP X20, 0x738000
	0x03A1C8F8 ADRP X24, 0x738000
	0x03A1C8FC ADRP X23, 0x738000
	0x03A1C900 ADRP X22, 0x738000
	0x03A1C904 ADRP X21, 0x6D8000
	0x03A1C908 ADRP X19, 0x738000
	0x03A1C90C LDR X26, [X26 + 0x6C0]
	0x03A1C910 LDR X20, [X20 + 0x688]
	0x03A1C914 LDRB W8, [X25 + 0xFDC]
	0x03A1C918 LDR X24, [X24 + 0x6C8]
	0x03A1C91C LDR X23, [X23 + 0x6D0]
	0x03A1C920 LDR X22, [X22 + 0x6D8]
	0x03A1C924 LDR X21, [X21 + 0xE58]
	0x03A1C928 LDR X19, [X19 + 0x6E0]
	0x03A1C92C TBNZ X8, 0x0, 0x3A1CA40
	0x03A1C930 ADRP X0, 0x6D8000
	0x03A1C934 LDR X0, [X0 + 0xE58]
	0x03A1C938 BL 0x1C16CF4
	0x03A1C93C ADRP X0, 0x738000
	0x03A1C940 LDR X0, [X0 + 0x70]
	0x03A1C944 BL 0x1C16CF4
	0x03A1C948 ADRP X0, 0x738000
	0x03A1C94C LDR X0, [X0 + 0x68]
	0x03A1C950 BL 0x1C16CF4
	0x03A1C954 ADRP X0, 0x738000
	0x03A1C958 LDR X0, [X0 + 0x60]
	0x03A1C95C BL 0x1C16CF4
	0x03A1C960 ADRP X0, 0x734000
	0x03A1C964 LDR X0, [X0 + 0x598]
	0x03A1C968 BL 0x1C16CF4
	0x03A1C96C ADRP X0, 0x738000
	0x03A1C970 LDR X0, [X0 + 0x688]
	0x03A1C974 BL 0x1C16CF4
	0x03A1C978 ADRP X0, 0x738000
	0x03A1C97C LDR X0, [X0 + 0x6D8]
	0x03A1C980 BL 0x1C16CF4
	0x03A1C984 ADRP X0, 0x738000
	0x03A1C988 LDR X0, [X0 + 0x6E8]
	0x03A1C98C BL 0x1C16CF4
	0x03A1C990 ADRP X0, 0x738000
	0x03A1C994 LDR X0, [X0 + 0x6F0]
	0x03A1C998 BL 0x1C16CF4
	0x03A1C99C ADRP X0, 0x738000
	0x03A1C9A0 LDR X0, [X0 + 0x6F8]
	0x03A1C9A4 BL 0x1C16CF4
	0x03A1C9A8 ADRP X0, 0x738000
	0x03A1C9AC LDR X0, [X0 + 0x700]
	0x03A1C9B0 BL 0x1C16CF4
	0x03A1C9B4 ADRP X0, 0x738000
	0x03A1C9B8 LDR X0, [X0 + 0x708]
	0x03A1C9BC BL 0x1C16CF4
	0x03A1C9C0 ADRP X0, 0x738000
	0x03A1C9C4 LDR X0, [X0 + 0x90]
	0x03A1C9C8 BL 0x1C16CF4
	0x03A1C9CC ADRP X0, 0x738000
	0x03A1C9D0 LDR X0, [X0 + 0x6C0]
	0x03A1C9D4 BL 0x1C16CF4
	0x03A1C9D8 ADRP X0, 0x738000
	0x03A1C9DC LDR X0, [X0 + 0x710]
	0x03A1C9E0 BL 0x1C16CF4
	0x03A1C9E4 ADRP X0, 0x738000
	0x03A1C9E8 LDR X0, [X0 + 0x718]
	0x03A1C9EC BL 0x1C16CF4
	0x03A1C9F0 ADRP X0, 0x738000
	0x03A1C9F4 LDR X0, [X0 + 0x720]
	0x03A1C9F8 BL 0x1C16CF4
	0x03A1C9FC ADRP X0, 0x738000
	0x03A1CA00 LDR X0, [X0 + 0x728]
	0x03A1CA04 BL 0x1C16CF4
	0x03A1CA08 ADRP X0, 0x738000
	0x03A1CA0C LDR X0, [X0 + 0x730]
	0x03A1CA10 BL 0x1C16CF4
	0x03A1CA14 ADRP X0, 0x738000
	0x03A1CA18 LDR X0, [X0 + 0x6D0]
	0x03A1CA1C BL 0x1C16CF4
	0x03A1CA20 ADRP X0, 0x738000
	0x03A1CA24 LDR X0, [X0 + 0x6C8]
	0x03A1CA28 BL 0x1C16CF4
	0x03A1CA2C ADRP X0, 0x738000
	0x03A1CA30 LDR X0, [X0 + 0x6E0]
	0x03A1CA34 BL 0x1C16CF4
	0x03A1CA38 MOVZ W8, 0x1
	0x03A1CA3C STRB W8, [X25 + 0xFDC]
	0x03A1CA40 LDR X0, [X26]
	0x03A1CA44 MOV X1, X31
	0x03A1CA48 BL 0x3C124EC
	0x03A1CA4C LDR X8, [X20]
	0x03A1CA50 MOV X1, X31
	0x03A1CA54 LDR X8, [X8 + 0xB8]
	0x03A1CA58 STR W0, [X8]
	0x03A1CA5C LDR X0, [X24]
	0x03A1CA60 BL 0x3C124EC
	0x03A1CA64 LDR X8, [X20]
	0x03A1CA68 MOV X1, X31
	0x03A1CA6C LDR X8, [X8 + 0xB8]
	0x03A1CA70 STR W0, [X8 + 0x4]
	0x03A1CA74 LDR X0, [X23]
	0x03A1CA78 BL 0x3C124EC
	0x03A1CA7C LDR X8, [X20]
	0x03A1CA80 MOV X1, X31
	0x03A1CA84 LDR X8, [X8 + 0xB8]
	0x03A1CA88 STR W0, [X8 + 0x8]
	0x03A1CA8C LDR X0, [X22]
	0x03A1CA90 BL 0x3C124EC
	0x03A1CA94 LDR X8, [X20]
	0x03A1CA98 MOVZ W1, 0x4
	0x03A1CA9C LDR X8, [X8 + 0xB8]
	0x03A1CAA0 STR W0, [X8 + 0xC]
	0x03A1CAA4 LDR X0, [X21]
	0x03A1CAA8 BL 0x1C16D6C
	0x03A1CAAC LDR X8, [X19]
	0x03A1CAB0 MOV X19, X0
	0x03A1CAB4 MOV X1, X31
	0x03A1CAB8 MOV X0, X8
	0x03A1CABC BL 0x3C124EC
	0x03A1CAC0 CBZ X19, 0x3A1CDC4
	0x03A1CAC4 LDR W8, [X19 + 0x18]
	0x03A1CAC8 CBZ W8, 0x3A1CDC0
	0x03A1CACC ADRP X8, 0x738000
	0x03A1CAD0 LDR X8, [X8 + 0x708]
	0x03A1CAD4 STR W0, [X19 + 0x20]
	0x03A1CAD8 MOV X1, X31
	0x03A1CADC LDR X0, [X8]
	0x03A1CAE0 BL 0x3C124EC
	0x03A1CAE4 LDR W8, [X19 + 0x18]
	0x03A1CAE8 CMP W8, 0x1
	0x03A1CAEC B.LS 0x3A1CDC0
	0x03A1CAF0 ADRP X8, 0x738000
	0x03A1CAF4 LDR X8, [X8 + 0x720]
	0x03A1CAF8 STR W0, [X19 + 0x24]
	0x03A1CAFC MOV X1, X31
	0x03A1CB00 LDR X0, [X8]
	0x03A1CB04 BL 0x3C124EC
	0x03A1CB08 LDR W8, [X19 + 0x18]
	0x03A1CB0C CMP W8, 0x2
	0x03A1CB10 B.LS 0x3A1CDC0
	0x03A1CB14 ADRP X8, 0x738000
	0x03A1CB18 LDR X8, [X8 + 0x730]
	0x03A1CB1C STR W0, [X19 + 0x28]
	0x03A1CB20 MOV X1, X31
	0x03A1CB24 LDR X0, [X8]
	0x03A1CB28 BL 0x3C124EC
	0x03A1CB2C LDR W8, [X19 + 0x18]
	0x03A1CB30 CMP W8, 0x3
	0x03A1CB34 B.LS 0x3A1CDC0
	0x03A1CB38 STR W0, [X19 + 0x2C]
	0x03A1CB3C LDR X8, [X20]
	0x03A1CB40 ADRP X9, 0x738000
	0x03A1CB44 ADRP X21, 0x738000
	0x03A1CB48 ADRP X22, 0x738000
	0x03A1CB4C LDR X8, [X8 + 0xB8]
	0x03A1CB50 LDR X9, [X9 + 0x718]
	0x03A1CB54 LDR X21, [X21 + 0x6F0]
	0x03A1CB58 LDR X22, [X22 + 0x90]
	0x03A1CB5C STR X19, [X8 + 0x10]
	0x03A1CB60 LDR X1, [X9]
	0x03A1CB64 ADRP X19, 0x738000
	0x03A1CB68 ADRP X23, 0x738000
	0x03A1CB6C LDR X19, [X19 + 0x60]
	0x03A1CB70 LDR X23, [X23 + 0x68]
	0x03A1CB74 ADD X0, X31, 0x18
	0x03A1CB78 MOV X2, X31
	0x03A1CB7C STR W31, [X31 + 0x18]
	0x03A1CB80 BL 0x3C5A49C
	0x03A1CB84 LDR X8, [X20]
	0x03A1CB88 LDR W9, [X31 + 0x18]
	0x03A1CB8C ADD X0, X31, 0x8
	0x03A1CB90 MOV X2, X31
	0x03A1CB94 LDR X8, [X8 + 0xB8]
	0x03A1CB98 STR W9, [X8 + 0x18]
	0x03A1CB9C LDR X1, [X21]
	0x03A1CBA0 STR W31, [X31 + 0x8]
	0x03A1CBA4 BL 0x3C5A49C
	0x03A1CBA8 LDR X8, [X20]
	0x03A1CBAC LDR W9, [X31 + 0x8]
	0x03A1CBB0 ADD X0, X31, 0x0
	0x03A1CBB4 MOV X2, X31
	0x03A1CBB8 LDR X8, [X8 + 0xB8]
	0x03A1CBBC STR W9, [X8 + 0x1C]
	0x03A1CBC0 LDR X1, [X22]
	0x03A1CBC4 STR W31, [X31]
	0x03A1CBC8 BL 0x3C5A49C
	0x03A1CBCC LDR X8, [X20]
	0x03A1CBD0 LDR W9, [X31]
	0x03A1CBD4 LDR X8, [X8 + 0xB8]
	0x03A1CBD8 STR W9, [X8 + 0x20]
	0x03A1CBDC LDR X0, [X19]
	0x03A1CBE0 BL 0x1C16F10
	0x03A1CBE4 LDR X1, [X23]
	0x03A1CBE8 MOV X19, X0
	0x03A1CBEC BL 0x305C9FC
	0x03A1CBF0 CBZ X19, 0x3A1CDC4
	0x03A1CBF4 LDR X8, [X20]
	0x03A1CBF8 ADRP X21, 0x738000
	0x03A1CBFC LDR X9, [X8 + 0xB8]
	0x03A1CC00 LDR X21, [X21 + 0x70]
	0x03A1CC04 LDR W10, [X19 + 0x1C]
	0x03A1CC08 LDR X8, [X19 + 0x10]
	0x03A1CC0C LDR W1, [X9 + 0x20]
	0x03A1CC10 LDR X9, [X21]
	0x03A1CC14 ADD W10, W10, 0x1
	0x03A1CC18 STR W10, [X19 + 0x1C]
	0x03A1CC1C CBZ X8, 0x3A1CDC4
	0x03A1CC20 LDRSW X10, [X19 + 0x18]
	0x03A1CC24 LDR W11, [X8 + 0x18]
	0x03A1CC28 CMP W10, W11
	0x03A1CC2C B.CS 0x3A1CC44
	0x03A1CC30 ADD W9, W10, 0x1
	0x03A1CC34 ADD X8, X8, X10, 0x2, LSL
	0x03A1CC38 STR W9, [X19 + 0x18]
	0x03A1CC3C STR W1, [X8 + 0x20]
	0x03A1CC40 B 0x3A1CC58
	0x03A1CC44 LDR X8, [X9 + 0x20]
	0x03A1CC48 MOV X0, X19
	0x03A1CC4C LDR X8, [X8 + 0xC0]
	0x03A1CC50 LDR X2, [X8 + 0x70]
	0x03A1CC54 BL 0x305D1F8
	0x03A1CC58 LDR X8, [X20]
	0x03A1CC5C LDR W10, [X19 + 0x1C]
	0x03A1CC60 LDR X9, [X8 + 0xB8]
	0x03A1CC64 LDR X8, [X19 + 0x10]
	0x03A1CC68 ADD W10, W10, 0x1
	0x03A1CC6C LDR W1, [X9 + 0x18]
	0x03A1CC70 LDR X9, [X21]
	0x03A1CC74 STR W10, [X19 + 0x1C]
	0x03A1CC78 CBZ X8, 0x3A1CDC4
	0x03A1CC7C ADRP X21, 0x734000
	0x03A1CC80 ADRP X26, 0x738000
	0x03A1CC84 LDR X21, [X21 + 0x598]
	0x03A1CC88 LDR X26, [X26 + 0x710]
	0x03A1CC8C LDRSW X10, [X19 + 0x18]
	0x03A1CC90 LDR W11, [X8 + 0x18]
	0x03A1CC94 ADRP X25, 0x738000
	0x03A1CC98 ADRP X24, 0x738000
	0x03A1CC9C ADRP X23, 0x738000
	0x03A1CCA0 ADRP X22, 0x738000
	0x03A1CCA4 LDR X25, [X25 + 0x6F8]
	0x03A1CCA8 LDR X24, [X24 + 0x728]
	0x03A1CCAC LDR X23, [X23 + 0x700]
	0x03A1CCB0 LDR X22, [X22 + 0x6E8]
	0x03A1CCB4 CMP W10, W11
	0x03A1CCB8 B.CS 0x3A1CCD0
	0x03A1CCBC ADD W9, W10, 0x1
	0x03A1CCC0 ADD X8, X8, X10, 0x2, LSL
	0x03A1CCC4 STR W9, [X19 + 0x18]
	0x03A1CCC8 STR W1, [X8 + 0x20]
	0x03A1CCCC B 0x3A1CCE4
	0x03A1CCD0 LDR X8, [X9 + 0x20]
	0x03A1CCD4 MOV X0, X19
	0x03A1CCD8 LDR X8, [X8 + 0xC0]
	0x03A1CCDC LDR X2, [X8 + 0x70]
	0x03A1CCE0 BL 0x305D1F8
	0x03A1CCE4 LDR X8, [X20]
	0x03A1CCE8 LDR X8, [X8 + 0xB8]
	0x03A1CCEC STR X19, [X8 + 0x28]
	0x03A1CCF0 LDR X0, [X21]
	0x03A1CCF4 BL 0x1C16F10
	0x03A1CCF8 LDR X1, [X26]
	0x03A1CCFC MOV X2, X31
	0x03A1CD00 MOV X19, X0
	0x03A1CD04 BL 0x39B19AC
	0x03A1CD08 LDR X8, [X20]
	0x03A1CD0C LDR X8, [X8 + 0xB8]
	0x03A1CD10 STR X19, [X8 + 0x30]
	0x03A1CD14 LDR X0, [X21]
	0x03A1CD18 BL 0x1C16F10
	0x03A1CD1C LDR X1, [X25]
	0x03A1CD20 MOV X2, X31
	0x03A1CD24 MOV X19, X0
	0x03A1CD28 BL 0x39B19AC
	0x03A1CD2C LDR X8, [X20]
	0x03A1CD30 LDR X8, [X8 + 0xB8]
	0x03A1CD34 STR X19, [X8 + 0x38]
	0x03A1CD38 LDR X0, [X21]
	0x03A1CD3C BL 0x1C16F10
	0x03A1CD40 LDR X1, [X24]
	0x03A1CD44 MOV X2, X31
	0x03A1CD48 MOV X19, X0
	0x03A1CD4C BL 0x39B19AC
	0x03A1CD50 LDR X8, [X20]
	0x03A1CD54 LDR X8, [X8 + 0xB8]
	0x03A1CD58 STR X19, [X8 + 0x40]
	0x03A1CD5C LDR X0, [X21]
	0x03A1CD60 BL 0x1C16F10
	0x03A1CD64 LDR X1, [X23]
	0x03A1CD68 MOV X2, X31
	0x03A1CD6C MOV X19, X0
	0x03A1CD70 BL 0x39B19AC
	0x03A1CD74 LDR X8, [X20]
	0x03A1CD78 LDR X8, [X8 + 0xB8]
	0x03A1CD7C STR X19, [X8 + 0x48]
	0x03A1CD80 LDR X0, [X21]
	0x03A1CD84 BL 0x1C16F10
	0x03A1CD88 LDR X1, [X22]
	0x03A1CD8C MOV X2, X31
	0x03A1CD90 MOV X19, X0
	0x03A1CD94 BL 0x39B19AC
	0x03A1CD98 LDR X8, [X20]
	0x03A1CD9C LDP X22, X21, [X31 + 0x40]
	0x03A1CDA0 LDP X24, X23, [X31 + 0x30]
	0x03A1CDA4 LDP X26, X25, [X31 + 0x20]
	0x03A1CDA8 LDR X8, [X8 + 0xB8]
	0x03A1CDAC LDR X30, [X31 + 0x10]
	0x03A1CDB0 STR X19, [X8 + 0x50]
	0x03A1CDB4 LDP X20, X19, [X31 + 0x50]
	0x03A1CDB8 ADD X31, X31, 0x60
	0x03A1CDBC RET
	0x03A1CDC0 BL 0x1C16F28
	0x03A1CDC4 BL 0x1C16F20
	0x03A1CDC8 STR X30, [X31 - 0x20]!

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Subtract X31, X31, 3504
	014 NotImplemented "Instruction MRS not yet implemented."
	015 Move X8, [X25+40]
	016 Add X26, X31, 752
	017 Move X22, 0x9C6000
	018 Move X21, 0x701000
	019 Move [X31+3496], X8
	020 Move [X26+1336], X1
	021 Move W8, [X22+4059]
	022 Move X21, [X21+3368]
	023 Move X19, X2
	024 Move X20, X0
	025 Move TEMP, X8
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {55}
	029 Move X0, 0x700000
	030 Move X0, [X0+2296]
	031 Call 0x1C17CF4
	032 Move X0, 0x739000
	033 Move X0, [X0+184]
	034 Call 0x1C17CF4
	035 Move X0, 0x739000
	036 Move X0, [X0+1640]
	037 Call 0x1C17CF4
	038 Move X0, 0x739000
	039 Move X0, [X0+1672]
	040 Call 0x1C17CF4
	041 Move X0, 0x701000
	042 Move X0, [X0+3368]
	043 Call 0x1C17CF4
	044 Move X0, 0x739000
	045 Move X0, [X0+1624]
	046 Call 0x1C17CF4
	047 Move X0, 0x735000
	048 Move X0, [X0+3200]
	049 Call 0x1C17CF4
	050 Move X0, 0x739000
	051 Move X0, [X0+1696]
	052 Call 0x1C17CF4
	053 Move W8, 1
	054 Move [X22+4059], W8
	055 Add X0, X31, 3296
	056 Move W2, 196
	057 Move W1, W31
	058 Call 0x3EB2B10
	059 Add X0, X31, 3096
	060 Move W2, 196
	061 Move W1, W31
	062 Call 0x3EB2B10
	063 NotImplemented "Instruction MOVI not yet implemented."
	064 Add X0, X31, 2896
	065 Move W2, 196
	066 Move W1, W31
	067 Move [X31+1952], W31
	068 Move [X26+81], V0
	069 Move [X26+80], V0
	070 Move [X26+79], V0
	071 Move [X26+78], V0
	072 Move [X26+77], V0
	073 Move [X26+76], V0
	074 Move [X26+74], V0
	075 Move [X26+73], V0
	076 Move [X26+72], V0
	077 Move [X31+1900], W31
	078 Call 0x3EB2B10
	079 Move X0, [X21]
	080 NotImplemented "Instruction MOVI not yet implemented."
	081 Move [X26+70], V0
	082 Move [X26+69], V0
	083 Move [X26+68], V0
	084 Move [X26+67], V0
	085 Move [X26+66], V0
	086 Move [X26+65], V0
	087 Move [X31+1784], W31
	088 Move X21, [X19+216]
	089 Move [X26+1320], X31
	090 Move [X26+1312], X31
	091 Move [X26+1328], X31
	092 Move W8, [X0+224]
	093 Compare W8, 0
	094 JumpIfNotEqual {96}
	095 Call 0x1C17DFC
	096 Move X0, X31
	097 Call RenderQueueRange.get_all
	098 Move X1, X0
	099 Add X0, X31, 2064
	100 Move X2, X31
	101 Call FilteringSettings.set_renderQueueRange, X0, X1
	102 Add X0, X31, 2064
	103 Move TEMP, 0
	104 Not TEMP
	105 Move W1, TEMP
	106 Move X2, X31
	107 Call FilteringSettings.set_layerMask, X0, X1
	108 Add X0, X31, 2064
	109 Move TEMP, 0
	110 Not TEMP
	111 Move W1, TEMP
	112 Move X2, X31
	113 Call FilteringSettings.set_renderingLayerMask, X0, X1
	114 Move X0, X31
	115 Call SortingLayerRange.get_all
	116 And X1, X0, 0
	117 Add X0, X31, 2064
	118 Move X2, X31
	119 Call FilteringSettings.set_sortingLayerRange, X0, X1
	120 Move X8, [X20+240]
	121 Compare X8, 0
	122 JumpIfEqual {664}
	123 Move X23, 0x9C7000
	124 Move W9, [X23+16]
	125 Move W22, [X8+108]
	126 Compare W9, 0
	127 JumpIfNotEqual {134}
	128 Move X0, 0x739000
	129 Move X0, [X0+1688]
	130 Call 0x1C17CF4
	131 Move W8, 1
	132 Move [X23+16], W8
	133 Move X8, [X20+240]
	134 Move X9, 0x739000
	135 Move X9, [X9+1688]
	136 NotImplemented "Instruction CMP not yet implemented."
	137 Move W10, 4
	138 NotImplemented "Instruction CSEL not yet implemented."
	139 Move X9, [X9]
	140 Move X9, [X9+184]
	141 Move [X9+8], W10
	142 Compare X8, 0
	143 JumpIfEqual {664}
	144 Move X9, 0x739000
	145 Move X9, [X9+1696]
	146 Move W22, [X8+112]
	147 Move X0, [X9]
	148 Move W9, [X0+224]
	149 Compare W9, 0
	150 JumpIfNotEqual {152}
	151 Call 0x1C17DFC
	152 Move W0, W22
	153 Move X1, X31
	154 Call ShadowRendering.InitializeBudget, X0
	155 Move X8, [X20+240]
	156 Compare X8, 0
	157 JumpIfEqual {664}
	158 Move X22, [X8+344]
	159 Compare X22, 0
	160 JumpIfEqual {664}
	161 Move X10, 0x739000
	162 Move X8, [X22]
	163 Move X10, [X10+1640]
	164 Move X27, 0x739000
	165 NotImplemented "Instruction LDRH not yet implemented."
	166 Move X1, [X10]
	167 Move X27, [X27+1672]
	168 Compare X9, 0
	169 JumpIfEqual {176}
	170 Move X10, [X8+176]
	171 Add X10, X10, 8
	172 NotImplemented "Instruction LDUR not yet implemented."
	173 NotImplemented "Instruction CMP not yet implemented."
	174 Subtract X9, X9, 1
	175 Add X10, X10, 16
	176 Move W2, 3
	177 Move X0, X22
	178 Call 0x1C5D788
	179 Move W9, [X10]
	180 Add W9, W9, 3
	181 Add X8, X8, W9
	182 Add X0, X8, 312
	183 Move X8, [X0]
	184 Move X1, [X0+8]
	185 Move X0, X22
	186 NotImplemented "Instruction BLR not yet implemented."
	187 Move X8, [X27]
	188 Move W22, W0
	189 Move W9, [X8+224]
	190 Compare W9, 0
	191 JumpIfNotEqual {195}
	192 Move X0, X8
	193 Call 0x1C17DFC
	194 Move X8, [X27]
	195 Move X8, [X8+184]
	196 Move W3, 23
	197 Move X0, X20
	198 Move X2, X19
	199 Move X1, [X8+40]
	200 Add X8, X31, 2696
	201 Move X4, X31
	202 Move TEMP, X22
	203 And TEMP, TEMP, 1
	204 Compare TEMP, 1
	205 JumpIfNotEqual {379}
	206 Call ScriptableRenderPass.CreateDrawingSettings, X0, X1, X2, X3
	207 Add X0, X31, 3296
	208 Add X1, X31, 2696
	209 Move W2, 196
	210 Call 0x3EB2AC0
	211 Move X8, [X27]
	212 Move W3, 23
	213 Move X0, X20
	214 Move X2, X19
	215 Move X8, [X8+184]
	216 Move X4, X31
	217 Move W1, [X8+28]
	218 Add X8, X31, 2696
	219 Call ScriptableRenderPass.CreateDrawingSettings, X0, X1, X2, X3
	220 Add X0, X31, 3096
	221 Add X1, X31, 2696
	222 Move W2, 196
	223 Call 0x3EB2AC0
	224 Move X8, 0x739000
	225 Move X8, [X8+184]
	226 Move X0, [X8]
	227 Move W8, [X0+224]
	228 Compare W8, 0
	229 JumpIfNotEqual {231}
	230 Call 0x1C17DFC
	231 Add X8, X31, 2696
	232 Add X0, X31, 3296
	233 Move X1, X31
	234 Call DrawingSettings.get_sortingSettings, X0
	235 Add X0, X31, 1968
	236 Add X1, X31, 2696
	237 Move W2, 96
	238 Call 0x3EB2AC0
	239 Add X2, X31, 1968
	240 Move X0, X20
	241 Move X1, X21
	242 Call Render2DLightingPass.GetTransparencySortingMode, X0, X1, X2
	243 Add X0, X31, 1688
	244 Add X1, X31, 1968
	245 Move W2, 96
	246 Call 0x3EB2AC0
	247 Add X0, X31, 3296
	248 Add X1, X31, 1688
	249 Move X2, X31
	250 Call DrawingSettings.set_sortingSettings, X0, X1
	251 Add X0, X31, 1592
	252 Add X1, X31, 1968
	253 Move W2, 96
	254 Call 0x3EB2AC0
	255 Add X0, X31, 3096
	256 Add X1, X31, 1592
	257 Move X2, X31
	258 Call DrawingSettings.set_sortingSettings, X0, X1
	259 Move X8, [X20+240]
	260 Compare X8, 0
	261 JumpIfEqual {664}
	262 Move X21, [X19]
	263 Compare X21, 0
	264 JumpIfEqual {664}
	265 Move X9, [X27]
	266 Move V0, [X8+76]
	267 Move X0, X21
	268 Move X2, X31
	269 Move X9, [X9+184]
	270 Move W1, [X9]
	271 Call CommandBuffer.SetGlobalFloat, X0, X1, V0
	272 Move X8, [X20+240]
	273 Compare X8, 0
	274 JumpIfEqual {664}
	275 Move X9, [X27]
	276 Move V0, [X8+76]
	277 Move S1, 1
	278 Move X0, X21
	279 Move X9, [X9+184]
	280 NotImplemented "Instruction FDIV not yet implemented."
	281 Move X2, X31
	282 Move W1, [X9+4]
	283 Call CommandBuffer.SetGlobalFloat, X0, X1, V0
	284 Move X8, [X27]
	285 Move S0, 1
	286 Move X0, X21
	287 Move X2, X31
	288 Move X8, [X8+184]
	289 Move W1, [X8+8]
	290 Call CommandBuffer.SetGlobalFloat, X0, X1, V0
	291 Move X0, [X27]
	292 Move W8, [X0+224]
	293 Compare W8, 0
	294 JumpIfNotEqual {297}
	295 Call 0x1C17DFC
	296 Move X0, [X27]
	297 Move X8, [X0+184]
	298 Move S0, 1
	299 Move S1, 1
	300 Move S2, 1
	301 Move W1, [X8+12]
	302 Move S3, 1
	303 Move X0, X21
	304 Move X2, X31
	305 Move X27, X25
	306 Call CommandBuffer.SetGlobalColor, X0, X1, X2
	307 Move X8, 0x739000
	308 Move X8, [X8+1624]
	309 Move X0, [X8]
	310 Move W8, [X0+224]
	311 Compare W8, 0
	312 JumpIfNotEqual {314}
	313 Call 0x1C17DFC
	314 Move X0, X20
	315 Move X1, X21
	316 Call RendererLighting.SetShapeLightShaderGlobals, X0, X1
	317 Add X0, X31, 896
	318 Move W2, 696
	319 Move X1, X19
	320 Call 0x3EB2AC0
	321 Add X8, X31, 1904
	322 Add X1, X31, 896
	323 Move X0, X20
	324 Call RendererLighting.GetBlendStyleRenderTextureDesc, X0, X1
	325 Move X8, [X20+240]
	326 Compare X8, 0
	327 JumpIfEqual {664}
	328 Move X0, [X8+344]
	329 Add X1, X31, 1900
	330 Call LayerUtility.CalculateBatches, X0, X1
	331 Move W22, [X31+1900]
	332 NotImplemented "Instruction CMP not yet implemented."
	333 Move X23, X0
	334 Move W24, W31
	335 Add X28, X31, 1904
	336 Add X29, X31, 3296
	337 Add X25, X31, 3096
	338 Move X5, [X26+1336]
	339 Add X7, X31, 2064
	340 Move X0, X20
	341 Move X1, X23
	342 Move W2, W22
	343 Move W3, W24
	344 Move X4, X21
	345 Move X6, X19
	346 Move [X31+8], X29
	347 Move [X31+16], X28
	348 Move [X31], X25
	349 Call Render2DLightingPass.DrawLayerBatches, X0, X1, X2, X3, X4, X5, X6, X7, X8, X9, X10
	350 Add W24, W0, W24
	351 NotImplemented "Instruction CMP not yet implemented."
	352 Move X8, 0x739000
	353 Move X8, [X8+1624]
	354 Move X0, [X8]
	355 Move W8, [X0+224]
	356 Compare W8, 0
	357 JumpIfNotEqual {359}
	358 Call 0x1C17DFC
	359 Move X1, X21
	360 Call RendererLighting.DisableAllKeywords, X0, X1
	361 Move X0, X20
	362 Move X1, X21
	363 Call RendererLighting.ReleaseRenderTextures, X0, X1
	364 Move X8, 0x735000
	365 Move X8, [X8+3200]
	366 Move X25, X27
	367 Move X0, [X8]
	368 Move W8, [X0+224]
	369 Compare W8, 0
	370 JumpIfNotEqual {372}
	371 Call 0x1C17DFC
	372 Add X0, X31, 2088
	373 Move X1, X21
	374 Move X2, X31
	375 Call ScriptableRenderContext.ExecuteCommandBuffer, X0, X1
	376 Move X0, X21
	377 Move X1, X31
	378 Call CommandBuffer.Clear, X0
	379 Call ScriptableRenderPass.CreateDrawingSettings, X0, X1, X2, X3
	380 Add X0, X31, 2896
	381 Add X1, X31, 2696
	382 Move W2, 196
	383 Call 0x3EB2AC0
	384 Move X8, 0x739000
	385 Move X8, [X8+184]
	386 Move X0, [X8]
	387 Move W8, [X19+248]
	388 Move W9, [X0+224]
	389 NotImplemented "Instruction CMP not yet implemented."
	390 NotImplemented "Instruction CSET not yet implemented."
	391 Compare W9, 0
	392 JumpIfNotEqual {394}
	393 Call 0x1C17DFC
	394 Add X8, X31, 2696
	395 Add X0, X31, 2896
	396 Move X1, X31
	397 Call DrawingSettings.get_sortingSettings, X0
	398 Add X0, X31, 1792
	399 Add X1, X31, 2696
	400 Move W2, 96
	401 Call 0x3EB2AC0
	402 Add X2, X31, 1792
	403 Move X0, X20
	404 Move X1, X21
	405 Call Render2DLightingPass.GetTransparencySortingMode, X0, X1, X2
	406 Add X0, X31, 800
	407 Add X1, X31, 1792
	408 Move W2, 96
	409 Call 0x3EB2AC0
	410 Add X0, X31, 2896
	411 Add X1, X31, 800
	412 Move X2, X31
	413 Call DrawingSettings.set_sortingSettings, X0, X1
	414 Move X0, [X27]
	415 Move X21, [X19]
	416 Move W8, [X0+224]
	417 Compare W8, 0
	418 JumpIfNotEqual {421}
	419 Call 0x1C17DFC
	420 Move X0, [X27]
	421 Move X8, [X0+184]
	422 Add X0, X31, 1784
	423 Move X1, X21
	424 Move X3, X31
	425 Move X2, [X8+80]
	426 Call ProfilingScope..ctor, X0, X1, X2
	427 Move X0, X20
	428 Move X1, X31
	429 Call ScriptableRenderPass.get_colorAttachmentHandle, X0
	430 Move X8, 0x700000
	431 Move X8, [X8+2296]
	432 Move X23, X0
	433 Move X24, [X20+152]
	434 Move X0, [X8]
	435 Move W8, [X0+224]
	436 Compare W8, 0
	437 JumpIfNotEqual {439}
	438 Call 0x1C17DFC
	439 Move TEMP, 0
	440 Not TEMP
	441 Move W8, TEMP
	442 Move S0, W31
	443 Move S1, W31
	444 Move S2, W31
	445 Move S3, W31
	446 Move X0, X21
	447 Move X1, X23
	448 Move W2, W31
	449 Move W3, W22
	450 Move X4, X24
	451 Move W5, W31
	452 Move W6, W22
	453 Move W7, W31
	454 Move [X31+24], X31
	455 Move [X31+16], W8
	456 Move [X31+8], W8
	457 Move [X31], W31
	458 Call CoreUtils.SetRenderTarget, X0, X1, X2, X3, X4, X5, X6, X7, X8, X9, X10, X11
	459 Move X0, [X27]
	460 Move W8, [X0+224]
	461 Compare W8, 0
	462 JumpIfNotEqual {464}
	463 Call 0x1C17DFC
	464 Compare X21, 0
	465 JumpIfEqual {667}
	466 Move X8, [X27]
	467 Move X8, [X8+184]
	468 Move W1, [X8+8]
	469 Move S0, 1
	470 Move X0, X21
	471 Move X2, X31
	472 Call CommandBuffer.SetGlobalFloat, X0, X1, V0
	473 Move X0, [X27]
	474 Move W8, [X0+224]
	475 Compare W8, 0
	476 JumpIfNotEqual {479}
	477 Call 0x1C17DFC
	478 Move X0, [X27]
	479 Move X8, [X0+184]
	480 Move W1, [X8+12]
	481 Move S0, 1
	482 Move S1, 1
	483 Move S2, 1
	484 Move S3, 1
	485 Move X0, X21
	486 Move X2, X31
	487 Call CommandBuffer.SetGlobalColor, X0, X1, X2
	488 Move X29, 0x739000
	489 Move X29, [X29+1624]
	490 Move X23, X31
	491 Add X28, X31, 2696
	492 Move X0, [X27]
	493 Move W8, [X0+224]
	494 Compare W8, 0
	495 JumpIfNotEqual {498}
	496 Call 0x1C17DFC
	497 Move X0, [X27]
	498 Move X8, [X0+184]
	499 Move X8, [X8+16]
	500 Compare X8, 0
	501 JumpIfEqual {663}
	502 NotImplemented "Instruction LDRSW not yet implemented."
	503 NotImplemented "Instruction CMP not yet implemented."
	504 Compare X23, 0
	505 JumpIfNotEqual {535}
	506 Move W9, [X0+224]
	507 Compare W9, 0
	508 JumpIfNotEqual {515}
	509 Call 0x1C17DFC
	510 Move X8, [X27]
	511 Move X8, [X8+184]
	512 Move X8, [X8+16]
	513 Compare X8, 0
	514 JumpIfEqual {666}
	515 Move W9, [X8+24]
	516 Compare W9, 0
	517 JumpIfEqual {665}
	518 Move W24, [X8+32]
	519 Move X0, X31
	520 Call Texture2D.get_blackTexture
	521 Add X8, X31, 2696
	522 Move X1, X31
	523 Call RenderTargetIdentifier.op_Implicit, X0
	524 Move V0, [X28]
	525 Move V1, [X28+16]
	526 Move X8, [X28+32]
	527 Move [X26], V0
	528 Move [X26+8], V1
	529 Move [X26+32], X8
	530 Add X2, X31, 752
	531 Move X0, X21
	532 Move W1, W24
	533 Move X3, X31
	534 Call CommandBuffer.SetGlobalTexture, X0, X1, X2
	535 Move X0, [X29]
	536 Move W8, [X0+224]
	537 Compare W8, 0
	538 JumpIfNotEqual {540}
	539 Call 0x1C17DFC
	540 NotImplemented "Instruction CMP not yet implemented."
	541 NotImplemented "Instruction CSET not yet implemented."
	542 Move X0, X21
	543 Move W1, W23
	544 Call RendererLighting.EnableBlendStyle, X0, X1, X2
	545 Add X23, X23, 1
	546 Add X0, X31, 1784
	547 Move X1, X31
	548 Call ProfilingScope.Dispose, X0
	549 Move X8, 0x739000
	550 Move X8, [X8+1624]
	551 Move X0, [X8]
	552 Move W8, [X0+224]
	553 Compare W8, 0
	554 JumpIfNotEqual {556}
	555 Call 0x1C17DFC
	556 Move X1, X21
	557 Call RendererLighting.DisableAllKeywords, X0, X1
	558 Move X8, 0x735000
	559 Move X8, [X8+3200]
	560 Move X0, [X8]
	561 Move W8, [X0+224]
	562 Compare W8, 0
	563 JumpIfNotEqual {565}
	564 Call 0x1C17DFC
	565 Add X0, X31, 2088
	566 Move X1, X21
	567 Move X2, X31
	568 Call ScriptableRenderContext.ExecuteCommandBuffer, X0, X1
	569 Compare X21, 0
	570 JumpIfEqual {664}
	571 Move X0, X21
	572 Move X1, X31
	573 Call CommandBuffer.Clear, X0
	574 Move X8, [X20+240]
	575 Compare X8, 0
	576 JumpIfEqual {664}
	577 Move W8, [X8+97]
	578 Compare W8, 0
	579 JumpIfEqual {629}
	580 NotImplemented "Instruction LDRH not yet implemented."
	581 Add X0, X31, 2696
	582 Move W1, 0x8000
	583 Move X3, X31
	584 Move [X31+2696], W31
	585 Call SortingLayerRange..ctor, X0, X1, X2
	586 Move W1, [X31+2696]
	587 Add X0, X31, 2064
	588 Move X2, X31
	589 Call FilteringSettings.set_sortingLayerRange, X0, X1
	590 Move X23, [X26+1336]
	591 Add X0, X31, 2496
	592 Add X1, X31, 2896
	593 Move W2, 196
	594 Call 0x3EB2AC0
	595 Add X4, X31, 2064
	596 Add X5, X31, 2496
	597 Move X1, X23
	598 Move X2, X21
	599 Move X3, X19
	600 Call Render2DLightingPass.Render, X0, X1, X2, X3, X4, X5
	601 Move X23, [X26+1336]
	602 Add X0, X31, 56
	603 Move W2, 696
	604 Move X1, X19
	605 Call 0x3EB2AC0
	606 Add X2, X31, 56
	607 Move X0, X20
	608 Move X1, X23
	609 Move W3, W22
	610 Call Render2DLightingPass.CopyCameraSortingLayerRenderTexture, X0, X1, X2, X3
	611 NotImplemented "Instruction LDRH not yet implemented."
	612 Add X0, X31, 52
	613 Move W2, 0x7FFF
	614 Move X3, X31
	615 Add W1, W8, 1
	616 Move [X31+52], W31
	617 Call SortingLayerRange..ctor, X0, X1, X2
	618 Move W1, [X31+52]
	619 Add X0, X31, 2064
	620 Move X2, X31
	621 Call FilteringSettings.set_sortingLayerRange, X0, X1
	622 Move X20, [X26+1336]
	623 Add X0, X31, 2296
	624 Add X1, X31, 2896
	625 Move W2, 196
	626 Call 0x3EB2AC0
	627 Add X4, X31, 2064
	628 Add X5, X31, 2296
	629 Move X20, [X26+1336]
	630 Add X0, X31, 2096
	631 Add X1, X31, 2896
	632 Move W2, 196
	633 Call 0x3EB2AC0
	634 Add X4, X31, 2064
	635 Add X5, X31, 2096
	636 Move X1, X20
	637 Move X2, X21
	638 Move X3, X19
	639 Call Render2DLightingPass.Render, X0, X1, X2, X3, X4, X5
	640 Move X0, X31
	641 Call SortingLayerRange.get_all
	642 And X1, X0, 0
	643 Add X0, X31, 2064
	644 Move X2, X31
	645 Call FilteringSettings.set_sortingLayerRange, X0, X1
	646 Move X8, [X25+40]
	647 Move X9, [X31+3496]
	648 NotImplemented "Instruction CMP not yet implemented."
	649 Add X31, X31, 3504
	650 Move X20, [X31+80]
	651 Move X19, [X31+88]
	652 Move X22, [X31+64]
	653 Move X21, [X31+72]
	654 Move X24, [X31+48]
	655 Move X23, [X31+56]
	656 Move X26, [X31+32]
	657 Move X25, [X31+40]
	658 Move X28, [X31+16]
	659 Move X27, [X31+24]
	660 Move X29, [X31+96]
	661 Move X30, [X31+104]
	662 Return 
	663 Call 0x1C17F20
	664 Call 0x1C17F20
	665 Call 0x1C17F28
	666 Call 0x1C17F20
	667 Call 0x1C17F20
	668 Call 0x3EB2B20
	669 Move X23, X0
	670 NotImplemented "Instruction CMP not yet implemented."
	671 Move X0, X23
	672 Call 0x3EB2AD0
	673 Move X24, [X0]
	674 Call 0x3EB2AE0
	675 Add X0, X31, 1784
	676 Move X1, X31
	677 Call ProfilingScope.Dispose, X0
	678 Compare X24, 0
	679 JumpIfEqual {549}
	680 Move X0, X24
	681 Call 0x1C17F18
	682 Move X24, X31
	683 Move X23, X0
	684 Add X0, X31, 1784
	685 Move X1, X31
	686 Call ProfilingScope.Dispose, X0
	687 Compare X24, 0
	688 JumpIfNotEqual {691}
	689 Move X0, X23
	690 Call 0x1D2D690
	691 Move X0, X24
	692 Call 0x1C17F18
	693 Call 0x1991590

Method: UnityEngine.Rendering.Universal.Renderer2DData UnityEngine.Rendering.Universal.IRenderPass2D.get_rendererData()

Disassembly:
	0x03A1D8CC STR X0, [X31]
	0x03A1D8D0 ADRP X8, 0x737000

ISIL:
	001 Move X0, [X0+240]
	002 Return X0

Method: System.Void .cctor()

Disassembly:
	0x03A1D8D4 LDR X8, [X8 + 0x580]
	0x03A1D8D8 LDR X1, [X8]
	0x03A1D8DC ADD X0, X31, 0x40
	0x03A1D8E0 BL 0x2BC434C
	0x03A1D8E4 CBZ X19, 0x3A1D94C
	0x03A1D8E8 MOV X0, X19
	0x03A1D8EC BL 0x1C16F18
	0x03A1D8F0 B 0x3A1D8FC
	0x03A1D8F4 B 0x3A1D8FC
	0x03A1D8F8 B 0x3A1D8FC
	0x03A1D8FC CMP W1, 0x1
	0x03A1D900 STR X0, [X31]
	0x03A1D904 B.NE 0x3A1D930
	0x03A1D908 LDR X0, [X31]
	0x03A1D90C BL 0x3EB1AD0
	0x03A1D910 LDR X22, [X0]
	0x03A1D914 BL 0x3EB1AE0
	0x03A1D918 LDR X1, [X29]
	0x03A1D91C ADD X0, X31, 0x60
	0x03A1D920 BL 0x2BC434C
	0x03A1D924 CBZ X22, 0x3A1D658
	0x03A1D928 MOV X0, X22
	0x03A1D92C BL 0x1C16F18
	0x03A1D930 MOV X22, X31
	0x03A1D934 B 0x3A1D93C
	0x03A1D938 STR X0, [X31]
	0x03A1D93C LDR X1, [X29]
	0x03A1D940 ADD X0, X31, 0x60
	0x03A1D944 BL 0x2BC434C
	0x03A1D948 CBNZ X22, 0x3A1D954
	0x03A1D94C LDR X0, [X31]
	0x03A1D950 BL 0x1D2C690
	0x03A1D954 MOV X0, X22
	0x03A1D958 BL 0x1C16F18
	0x03A1D95C BL 0x1990590
	0x03A1D960 STR X30, [X31 - 0x30]!
	0x03A1D964 STP X22, X21, [X31 + 0x10]
	0x03A1D968 STP X20, X19, [X31 + 0x20]
	0x03A1D96C CBZ X1, 0x3A1D9C4
	0x03A1D970 MOV X19, X2
	0x03A1D974 MOV X20, X1
	0x03A1D978 MOV W21, W0
	0x03A1D97C MOV W22, W0
	0x03A1D980 LDR X8, [X20 + 0x18]
	0x03A1D984 ADD W22, W22, 0x1
	0x03A1D988 CMP W22, W8
	0x03A1D98C B.GE 0x3A1D9AC
	0x03A1D990 MOV W0, W21
	0x03A1D994 MOV W1, W22
	0x03A1D998 MOV X2, X20
	0x03A1D99C MOV X3, X19
	0x03A1D9A0 BL 0x3A1D408
	0x03A1D9A4 TBNZ X0, 0x0, 0x3A1D980
	0x03A1D9A8 B 0x3A1D9B0
	0x03A1D9AC MOV W22, W8
	0x03A1D9B0 SUB W0, W22, 0x1
	0x03A1D9B4 LDP X20, X19, [X31 + 0x20]
	0x03A1D9B8 LDP X22, X21, [X31 + 0x10]
	0x03A1D9BC LDR X30, [X31], #0x30
	0x03A1D9C0 RET
	0x03A1D9C4 BL 0x1C16F20
	0x03A1D9C8 STP X30, X21, [X31 - 0x20]!
	0x03A1D9CC STP X20, X19, [X31 + 0x10]
	0x03A1D9D0 ADRP X20, 0x9C4000
	0x03A1D9D4 LDRB W8, [X20 + 0xFE7]
	0x03A1D9D8 MOV X19, X0
	0x03A1D9DC TBNZ X8, 0x0, 0x3A1DA00
	0x03A1D9E0 ADRP X0, 0x737000
	0x03A1D9E4 LDR X0, [X0 + 0x758]
	0x03A1D9E8 BL 0x1C16CF4
	0x03A1D9EC ADRP X0, 0x737000
	0x03A1D9F0 LDR X0, [X0 + 0x698]
	0x03A1D9F4 BL 0x1C16CF4
	0x03A1D9F8 MOVZ W8, 0x1
	0x03A1D9FC STRB W8, [X20 + 0xFE7]
	0x03A1DA00 CBZ X19, 0x3A1DA98
	0x03A1DA04 ADRP X20, 0x737000
	0x03A1DA08 LDR X20, [X20 + 0x698]
	0x03A1DA0C LDR X8, [X20]
	0x03A1DA10 LDR X8, [X8 + 0xB8]
	0x03A1DA14 LDR X8, [X8]
	0x03A1DA18 CBZ X8, 0x3A1DA28
	0x03A1DA1C LDP X20, X19, [X31 + 0x10]
	0x03A1DA20 LDP X30, X21, [X31], #0x20
	0x03A1DA24 RET
	0x03A1DA28 ADRP X8, 0x737000
	0x03A1DA2C LDR W1, [X19 + 0x18]
	0x03A1DA30 LDR X8, [X8 + 0x758]
	0x03A1DA34 LDR X0, [X8]
	0x03A1DA38 BL 0x1C16D6C
	0x03A1DA3C LDR X8, [X20]
	0x03A1DA40 LDR X8, [X8 + 0xB8]
	0x03A1DA44 STR X0, [X8]
	0x03A1DA48 LDR X8, [X20]
	0x03A1DA4C LDR X8, [X8 + 0xB8]
	0x03A1DA50 LDR X8, [X8]
	0x03A1DA54 CBZ X8, 0x3A1DA98
	0x03A1DA58 MOV X19, X31
	0x03A1DA5C MOVZ W21, 0x20
	0x03A1DA60 LDR W9, [X8 + 0x18]
	0x03A1DA64 CMP X19, W9, SXTW
	0x03A1DA68 B.GE 0x3A1DA1C
	0x03A1DA6C CMP X19, X9
	0x03A1DA70 B.CS 0x3A1DA9C
	0x03A1DA74 ADD X0, X8, X21
	0x03A1DA78 MOV W1, W19
	0x03A1DA7C BL 0x3A1D2A0
	0x03A1DA80 LDR X8, [X20]
	0x03A1DA84 ADD X19, X19, 0x1
	0x03A1DA88 ADD X21, X21, 0x34
	0x03A1DA8C LDR X8, [X8 + 0xB8]
	0x03A1DA90 LDR X8, [X8]
	0x03A1DA94 CBNZ X8, 0x3A1DA60
	0x03A1DA98 BL 0x1C16F20
	0x03A1DA9C BL 0x1C16F28
	0x03A1DAA0 STP X30, X21, [X31 - 0x20]!
	0x03A1DAA4 STP X20, X19, [X31 + 0x10]
	0x03A1DAA8 ADRP X21, 0x9C4000
	0x03A1DAAC ADRP X20, 0x737000
	0x03A1DAB0 ADRP X19, 0x6D6000
	0x03A1DAB4 LDRB W8, [X21 + 0xFE9]
	0x03A1DAB8 LDR X20, [X20 + 0x760]
	0x03A1DABC LDR X19, [X19 + 0x598]
	0x03A1DAC0 TBNZ X8, 0x0, 0x3A1DAE4
	0x03A1DAC4 ADRP X0, 0x737000
	0x03A1DAC8 LDR X0, [X0 + 0x760]
	0x03A1DACC BL 0x1C16CF4
	0x03A1DAD0 ADRP X0, 0x6D6000
	0x03A1DAD4 LDR X0, [X0 + 0x598]
	0x03A1DAD8 BL 0x1C16CF4
	0x03A1DADC MOVZ W8, 0x1
	0x03A1DAE0 STRB W8, [X21 + 0xFE9]
	0x03A1DAE4 LDR X8, [X20]
	0x03A1DAE8 LDR X0, [X19]
	0x03A1DAEC LDR X8, [X8 + 0xB8]
	0x03A1DAF0 LDR W9, [X0 + 0xE0]
	0x03A1DAF4 LDR X19, [X8]
	0x03A1DAF8 CBNZ W9, 0x3A1DB00
	0x03A1DAFC BL 0x1C16DFC
	0x03A1DB00 MOV X0, X19
	0x03A1DB04 MOV X1, X31
	0x03A1DB08 MOV X2, X31
	0x03A1DB0C BL 0x3C3883C
	0x03A1DB10 TBZ X0, 0x0, 0x3A1DB24
	0x03A1DB14 BL 0x3A1DB3C
	0x03A1DB18 LDR X8, [X20]
	0x03A1DB1C LDR X8, [X8 + 0xB8]
	0x03A1DB20 STR X0, [X8]
	0x03A1DB24 LDR X8, [X20]
	0x03A1DB28 LDP X20, X19, [X31 + 0x10]
	0x03A1DB2C LDR X8, [X8 + 0xB8]
	0x03A1DB30 LDR X0, [X8]
	0x03A1DB34 LDP X30, X21, [X31], #0x20
	0x03A1DB38 RET
	0x03A1DB3C SUB X31, X31, 0xC0
	0x03A1DB40 STP D15, D14, [X31 + 0x20]
	0x03A1DB44 STP D13, D12, [X31 + 0x30]
	0x03A1DB48 STP D11, D10, [X31 + 0x40]
	0x03A1DB4C STP D9, D8, [X31 + 0x50]
	0x03A1DB50 STP X29, X30, [X31 + 0x60]
	0x03A1DB54 STP X28, X27, [X31 + 0x70]
	0x03A1DB58 STP X26, X25, [X31 + 0x80]
	0x03A1DB5C STP X24, X23, [X31 + 0x90]
	0x03A1DB60 STP X22, X21, [X31 + 0xA0]
	0x03A1DB64 STP X20, X19, [X31 + 0xB0]
	0x03A1DB68 ADRP X20, 0x9C4000
	0x03A1DB6C ADRP X19, 0x737000
	0x03A1DB70 LDRB W8, [X20 + 0xFEA]
	0x03A1DB74 LDR X19, [X19 + 0x10]
	0x03A1DB78 TBNZ X8, 0x0, 0x3A1DB9C
	0x03A1DB7C ADRP X0, 0x737000
	0x03A1DB80 LDR X0, [X0 + 0x10]
	0x03A1DB84 BL 0x1C16CF4
	0x03A1DB88 ADRP X0, 0x700000
	0x03A1DB8C LDR X0, [X0 + 0x250]
	0x03A1DB90 BL 0x1C16CF4
	0x03A1DB94 MOVZ W8, 0x1
	0x03A1DB98 STRB W8, [X20 + 0xFEA]
	0x03A1DB9C LDR X0, [X19]
	0x03A1DBA0 LDR W8, [X0 + 0xE0]
	0x03A1DBA4 CBNZ W8, 0x3A1DBAC
	0x03A1DBA8 BL 0x1C16DFC
	0x03A1DBAC ADRP X21, 0x700000
	0x03A1DBB0 LDR X21, [X21 + 0x250]
	0x03A1DBB4 MOVZ W0, 0x30
	0x03A1DBB8 MOVZ W1, 0x7
	0x03A1DBBC MOV X2, X31
	0x03A1DBC0 MOVZ W20, 0x30
	0x03A1DBC4 BL 0x3A6ED54
	0x03A1DBC8 TBNZ X0, 0x0, 0x3A1DBFC
	0x03A1DBCC LDR X0, [X19]
	0x03A1DBD0 LDR W8, [X0 + 0xE0]
	0x03A1DBD4 CBNZ W8, 0x3A1DBDC
	0x03A1DBD8 BL 0x1C16DFC
	0x03A1DBDC MOVZ W0, 0x34
	0x03A1DBE0 MOVZ W1, 0x7
	0x03A1DBE4 MOV X2, X31
	0x03A1DBE8 MOVZ W19, 0x34
	0x03A1DBEC BL 0x3A6ED54
	0x03A1DBF0 ANDS W31, W0, 0x1
	0x03A1DBF4 MOVZ W8, 0x8
	0x03A1DBF8 CSEL W20, W19, W8, NE
	0x03A1DBFC LDR X0, [X21]
	0x03A1DC00 BL 0x1C16F10
	0x03A1DC04 MOVZ W1, 0x100
	0x03A1DC08 MOVZ W2, 0x100
	0x03A1DC0C MOV W3, W20
	0x03A1DC10 MOV W4, W31
	0x03A1DC14 MOV X5, X31
	0x03A1DC18 MOV X19, X0
	0x03A1DC1C BL 0x3C1BEA4
	0x03A1DC20 CBZ X19, 0x3A1DEC8
	0x03A1DC24 MOVZ W1, 0x1
	0x03A1DC28 MOV X0, X19
	0x03A1DC2C MOV X2, X31
	0x03A1DC30 MOVZ W24, 0x1
	0x03A1DC34 BL 0x3C1AB5C
	0x03A1DC38 MOVZ W1, 0x1
	0x03A1DC3C MOV X0, X19
	0x03A1DC40 MOV X2, X31
	0x03A1DC44 BL 0x3C1AA10
	0x03A1DC48 ADRP X9, 0xFFFFFFFFFD0CD000
	0x03A1DC4C ADRP X21, 0x6D6000
	0x03A1DC50 ADRP X8, 0xFFFFFFFFFD0CD000
	0x03A1DC54 ADRP X22, 0x6DE000
	0x03A1DC58 LDR V0, [X9 + 0xAC]
	0x03A1DC5C LDR X21, [X21 + 0x5A8]
	0x03A1DC60 LDR X22, [X22 + 0xF08]
	0x03A1DC64 LDR V11, [X8 + 0x17C]
	0x03A1DC68 MOV W20, W31
	0x03A1DC6C MOVZ W26, 0x43000000
	0x03A1DC70 ADRP X27, 0x9C4000
	0x03A1DC74 ADRP X28, 0x9BC000
	0x03A1DC78 ADRP X29, 0x9BC000
	0x03A1DC7C STR S0, [X31 + 0x14]
	0x03A1DC80 FMOV S13, 1
	0x03A1DC84 ADRP X25, 0x9BC000
	0x03A1DC88 MOVZ W8, 0xC3000000
	0x03A1DC8C SCVTF S0, W20
	0x03A1DC90 FMOV S1, W8
	0x03A1DC94 FMOV S2, W26
	0x03A1DC98 FADD S1, S0, S1
	0x03A1DC9C FSUB S0, S2, S0
	0x03A1DCA0 STP S0, S1, [X31 + 0xC]
	0x03A1DCA4 FMUL S1, S1, S1
	0x03A1DCA8 FMUL S0, S0, S0
	0x03A1DCAC MOV W23, W31
	0x03A1DCB0 STP S0, S1, [X31 + 0x18]
	0x03A1DCB4 LDRB W8, [X27 + 0x810]
	0x03A1DCB8 CBNZ W8, 0x3A1DCC8
	0x03A1DCBC MOV X0, X21
	0x03A1DCC0 BL 0x1C16CF4
	0x03A1DCC4 STRB W24, [X27 + 0x810]
	0x03A1DCC8 LDR X0, [X21]
	0x03A1DCCC LDR W8, [X0 + 0xE0]
	0x03A1DCD0 CBNZ W8, 0x3A1DCD8
	0x03A1DCD4 BL 0x1C16DFC
	0x03A1DCD8 LDRB W8, [X28 + 0x818]
	0x03A1DCDC CBNZ W8, 0x3A1DCEC
	0x03A1DCE0 MOV X0, X21
	0x03A1DCE4 BL 0x1C16CF4
	0x03A1DCE8 STRB W24, [X28 + 0x818]
	0x03A1DCEC LDR X0, [X21]
	0x03A1DCF0 LDR W8, [X0 + 0xE0]
	0x03A1DCF4 CBNZ W8, 0x3A1DCFC
	0x03A1DCF8 BL 0x1C16DFC
	0x03A1DCFC LDR V2, [X31 + 0x18]
	0x03A1DD00 SCVTF S10, W23
	0x03A1DD04 FMOV S0, W26
	0x03A1DD08 FSUB S0, S0, S10
	0x03A1DD0C FMUL S1, S0, S0
	0x03A1DD10 FADD S1, S2, S1
	0x03A1DD14 FSQRT S1, S1
	0x03A1DD18 FCMP S1, S11
	0x03A1DD1C B.LE 0x3A1DD30
	0x03A1DD20 FDIV S8, S0, S1
	0x03A1DD24 LDR V0, [X31 + 0xC]
	0x03A1DD28 FDIV S9, S0, S1
	0x03A1DD2C B 0x3A1DD50
	0x03A1DD30 LDRB W8, [X25 + 0x78F]
	0x03A1DD34 CBNZ W8, 0x3A1DD44
	0x03A1DD38 MOV X0, X22
	0x03A1DD3C BL 0x1C16CF4
	0x03A1DD40 STRB W24, [X25 + 0x78F]
	0x03A1DD44 LDR X8, [X22]
	0x03A1DD48 LDR X8, [X8 + 0xB8]
	0x03A1DD4C LDP S8, S9, [X8]
	0x03A1DD50 MOVZ W8, 0xC3000000
	0x03A1DD54 LDR V1, [X31 + 0x1C]
	0x03A1DD58 FMOV S0, W8
	0x03A1DD5C FADD S12, S10, S0
	0x03A1DD60 FMUL S0, S12, S12
	0x03A1DD64 FADD S0, S1, S0
	0x03A1DD68 CMP W20, 0xFF
	0x03A1DD6C FSQRT S15, S0
	0x03A1DD70 FMOV S10, W31
	0x03A1DD74 B.EQ 0x3A1DDA0
	0x03A1DD78 CMP W23, 0xFF
	0x03A1DD7C B.EQ 0x3A1DDA0
	0x03A1DD80 MOVZ W8, 0xBB800000
	0x03A1DD84 FADD S0, S15, S15
	0x03A1DD88 FMOV S1, W8
	0x03A1DD8C FMUL S0, S0, S1
	0x03A1DD90 FADD S0, S0, S13
	0x03A1DD94 FCMP S0, 0x0
	0x03A1DD98 B.MI 0x3A1DDA0
	0x03A1DD9C FMIN S10, S0, S13
	0x03A1DDA0 LDRB W8, [X29 + 0x78D]
	0x03A1DDA4 CBNZ W8, 0x3A1DDB4
	0x03A1DDA8 MOV X0, X22
	0x03A1DDAC BL 0x1C16CF4
	0x03A1DDB0 STRB W24, [X29 + 0x78D]
	0x03A1DDB4 LDR X8, [X22]
	0x03A1DDB8 LDRB W9, [X28 + 0x818]
	0x03A1DDBC LDR X8, [X8 + 0xB8]
	0x03A1DDC0 LDP S13, S14, [X8 + 0x18]
	0x03A1DDC4 CBNZ W9, 0x3A1DDD4

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+16], X30
	003 Move [X31+32], X26
	004 Move [X31+40], X25
	005 Move [X31+48], X24
	006 Move [X31+56], X23
	007 Move [X31+64], X22
	008 Move [X31+72], X21
	009 Move [X31+80], X20
	010 Move [X31+88], X19
	011 Move X25, 0x9C5000
	012 Move X26, 0x738000
	013 Move X20, 0x738000
	014 Move X24, 0x738000
	015 Move X23, 0x738000
	016 Move X22, 0x738000
	017 Move X21, 0x6D8000
	018 Move X19, 0x738000
	019 Move X26, [X26+1728]
	020 Move X20, [X20+1672]
	021 Move W8, [X25+4060]
	022 Move X24, [X24+1736]
	023 Move X23, [X23+1744]
	024 Move X22, [X22+1752]
	025 Move X21, [X21+3672]
	026 Move X19, [X19+1760]
	027 Move TEMP, X8
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfEqual {99}
	031 Move X0, 0x6D8000
	032 Move X0, [X0+3672]
	033 Call 0x1C17CF4
	034 Move X0, 0x738000
	035 Move X0, [X0+112]
	036 Call 0x1C17CF4
	037 Move X0, 0x738000
	038 Move X0, [X0+104]
	039 Call 0x1C17CF4
	040 Move X0, 0x738000
	041 Move X0, [X0+96]
	042 Call 0x1C17CF4
	043 Move X0, 0x734000
	044 Move X0, [X0+1432]
	045 Call 0x1C17CF4
	046 Move X0, 0x738000
	047 Move X0, [X0+1672]
	048 Call 0x1C17CF4
	049 Move X0, 0x738000
	050 Move X0, [X0+1752]
	051 Call 0x1C17CF4
	052 Move X0, 0x738000
	053 Move X0, [X0+1768]
	054 Call 0x1C17CF4
	055 Move X0, 0x738000
	056 Move X0, [X0+1776]
	057 Call 0x1C17CF4
	058 Move X0, 0x738000
	059 Move X0, [X0+1784]
	060 Call 0x1C17CF4
	061 Move X0, 0x738000
	062 Move X0, [X0+1792]
	063 Call 0x1C17CF4
	064 Move X0, 0x738000
	065 Move X0, [X0+1800]
	066 Call 0x1C17CF4
	067 Move X0, 0x738000
	068 Move X0, [X0+144]
	069 Call 0x1C17CF4
	070 Move X0, 0x738000
	071 Move X0, [X0+1728]
	072 Call 0x1C17CF4
	073 Move X0, 0x738000
	074 Move X0, [X0+1808]
	075 Call 0x1C17CF4
	076 Move X0, 0x738000
	077 Move X0, [X0+1816]
	078 Call 0x1C17CF4
	079 Move X0, 0x738000
	080 Move X0, [X0+1824]
	081 Call 0x1C17CF4
	082 Move X0, 0x738000
	083 Move X0, [X0+1832]
	084 Call 0x1C17CF4
	085 Move X0, 0x738000
	086 Move X0, [X0+1840]
	087 Call 0x1C17CF4
	088 Move X0, 0x738000
	089 Move X0, [X0+1744]
	090 Call 0x1C17CF4
	091 Move X0, 0x738000
	092 Move X0, [X0+1736]
	093 Call 0x1C17CF4
	094 Move X0, 0x738000
	095 Move X0, [X0+1760]
	096 Call 0x1C17CF4
	097 Move W8, 1
	098 Move [X25+4060], W8
	099 Move X0, [X26]
	100 Move X1, X31
	101 Call Shader.PropertyToID, X0
	102 Move X8, [X20]
	103 Move X1, X31
	104 Move X8, [X8+184]
	105 Move [X8], W0
	106 Move X0, [X24]
	107 Call Shader.PropertyToID, X0
	108 Move X8, [X20]
	109 Move X1, X31
	110 Move X8, [X8+184]
	111 Move [X8+4], W0
	112 Move X0, [X23]
	113 Call Shader.PropertyToID, X0
	114 Move X8, [X20]
	115 Move X1, X31
	116 Move X8, [X8+184]
	117 Move [X8+8], W0
	118 Move X0, [X22]
	119 Call Shader.PropertyToID, X0
	120 Move X8, [X20]
	121 Move W1, 4
	122 Move X8, [X8+184]
	123 Move [X8+12], W0
	124 Move X0, [X21]
	125 Call 0x1C17D6C
	126 Move X8, [X19]
	127 Move X19, X0
	128 Move X1, X31
	129 Move X0, X8
	130 Call Shader.PropertyToID, X0
	131 Compare X19, 0
	132 JumpIfEqual {326}
	133 Move W8, [X19+24]
	134 Compare W8, 0
	135 JumpIfEqual {325}
	136 Move X8, 0x738000
	137 Move X8, [X8+1800]
	138 Move [X19+32], W0
	139 Move X1, X31
	140 Move X0, [X8]
	141 Call Shader.PropertyToID, X0
	142 Move W8, [X19+24]
	143 NotImplemented "Instruction CMP not yet implemented."
	144 Move X8, 0x738000
	145 Move X8, [X8+1824]
	146 Move [X19+36], W0
	147 Move X1, X31
	148 Move X0, [X8]
	149 Call Shader.PropertyToID, X0
	150 Move W8, [X19+24]
	151 NotImplemented "Instruction CMP not yet implemented."
	152 Move X8, 0x738000
	153 Move X8, [X8+1840]
	154 Move [X19+40], W0
	155 Move X1, X31
	156 Move X0, [X8]
	157 Call Shader.PropertyToID, X0
	158 Move W8, [X19+24]
	159 NotImplemented "Instruction CMP not yet implemented."
	160 Move [X19+44], W0
	161 Move X8, [X20]
	162 Move X9, 0x738000
	163 Move X21, 0x738000
	164 Move X22, 0x738000
	165 Move X8, [X8+184]
	166 Move X9, [X9+1816]
	167 Move X21, [X21+1776]
	168 Move X22, [X22+144]
	169 Move [X8+16], X19
	170 Move X1, [X9]
	171 Move X19, 0x738000
	172 Move X23, 0x738000
	173 Move X19, [X19+96]
	174 Move X23, [X23+104]
	175 Add X0, X31, 24
	176 Move X2, X31
	177 Move [X31+24], W31
	178 Call ShaderTagId..ctor, X0, X1
	179 Move X8, [X20]
	180 Move W9, [X31+24]
	181 Add X0, X31, 8
	182 Move X2, X31
	183 Move X8, [X8+184]
	184 Move [X8+24], W9
	185 Move X1, [X21]
	186 Move [X31+8], W31
	187 Call ShaderTagId..ctor, X0, X1
	188 Move X8, [X20]
	189 Move W9, [X31+8]
	190 Add X0, X31, 0
	191 Move X2, X31
	192 Move X8, [X8+184]
	193 Move [X8+28], W9
	194 Move X1, [X22]
	195 Move [X31], W31
	196 Call ShaderTagId..ctor, X0, X1
	197 Move X8, [X20]
	198 Move W9, [X31]
	199 Move X8, [X8+184]
	200 Move [X8+32], W9
	201 Move X0, [X19]
	202 Call 0x1C17F10
	203 Move X1, [X23]
	204 Move X19, X0
	205 Call List`1<ShaderTagId>..ctor, X0
	206 Compare X19, 0
	207 JumpIfEqual {326}
	208 Move X8, [X20]
	209 Move X21, 0x738000
	210 Move X9, [X8+184]
	211 Move X21, [X21+112]
	212 Move W10, [X19+28]
	213 Move X8, [X19+16]
	214 Move W1, [X9+32]
	215 Move X9, [X21]
	216 Add W10, W10, 1
	217 Move [X19+28], W10
	218 Compare X8, 0
	219 JumpIfEqual {326}
	220 NotImplemented "Instruction LDRSW not yet implemented."
	221 Move W11, [X8+24]
	222 NotImplemented "Instruction CMP not yet implemented."
	223 Add W9, W10, 1
	224 Add X8, X8, X10
	225 Move [X19+24], W9
	226 Move [X8+32], W1
	227 Move X8, [X9+32]
	228 Move X0, X19
	229 Move X8, [X8+192]
	230 Move X2, [X8+112]
	231 Call List`1<ShaderTagId>.AddWithResize, X0, X1
	232 Move X8, [X20]
	233 Move W10, [X19+28]
	234 Move X9, [X8+184]
	235 Move X8, [X19+16]
	236 Add W10, W10, 1
	237 Move W1, [X9+24]
	238 Move X9, [X21]
	239 Move [X19+28], W10
	240 Compare X8, 0
	241 JumpIfEqual {326}
	242 Move X21, 0x734000
	243 Move X26, 0x738000
	244 Move X21, [X21+1432]
	245 Move X26, [X26+1808]
	246 NotImplemented "Instruction LDRSW not yet implemented."
	247 Move W11, [X8+24]
	248 Move X25, 0x738000
	249 Move X24, 0x738000
	250 Move X23, 0x738000
	251 Move X22, 0x738000
	252 Move X25, [X25+1784]
	253 Move X24, [X24+1832]
	254 Move X23, [X23+1792]
	255 Move X22, [X22+1768]
	256 NotImplemented "Instruction CMP not yet implemented."
	257 Add W9, W10, 1
	258 Add X8, X8, X10
	259 Move [X19+24], W9
	260 Move [X8+32], W1
	261 Move X8, [X9+32]
	262 Move X0, X19
	263 Move X8, [X8+192]
	264 Move X2, [X8+112]
	265 Call List`1<ShaderTagId>.AddWithResize, X0, X1
	266 Move X8, [X20]
	267 Move X8, [X8+184]
	268 Move [X8+40], X19
	269 Move X0, [X21]
	270 Call 0x1C17F10
	271 Move X1, [X26]
	272 Move X2, X31
	273 Move X19, X0
	274 Call ProfilingSampler..ctor, X0, X1
	275 Move X8, [X20]
	276 Move X8, [X8+184]
	277 Move [X8+48], X19
	278 Move X0, [X21]
	279 Call 0x1C17F10
	280 Move X1, [X25]
	281 Move X2, X31
	282 Move X19, X0
	283 Call ProfilingSampler..ctor, X0, X1
	284 Move X8, [X20]
	285 Move X8, [X8+184]
	286 Move [X8+56], X19
	287 Move X0, [X21]
	288 Call 0x1C17F10
	289 Move X1, [X24]
	290 Move X2, X31
	291 Move X19, X0
	292 Call ProfilingSampler..ctor, X0, X1
	293 Move X8, [X20]
	294 Move X8, [X8+184]
	295 Move [X8+64], X19
	296 Move X0, [X21]
	297 Call 0x1C17F10
	298 Move X1, [X23]
	299 Move X2, X31
	300 Move X19, X0
	301 Call ProfilingSampler..ctor, X0, X1
	302 Move X8, [X20]
	303 Move X8, [X8+184]
	304 Move [X8+72], X19
	305 Move X0, [X21]
	306 Call 0x1C17F10
	307 Move X1, [X22]
	308 Move X2, X31
	309 Move X19, X0
	310 Call ProfilingSampler..ctor, X0, X1
	311 Move X8, [X20]
	312 Move X22, [X31+64]
	313 Move X21, [X31+72]
	314 Move X24, [X31+48]
	315 Move X23, [X31+56]
	316 Move X26, [X31+32]
	317 Move X25, [X31+40]
	318 Move X8, [X8+184]
	319 Move X30, [X31+16]
	320 Move [X8+80], X19
	321 Move X20, [X31+80]
	322 Move X19, [X31+88]
	323 Add X31, X31, 96
	324 Return 
	325 Call 0x1C17F28
	326 Call 0x1C17F20

