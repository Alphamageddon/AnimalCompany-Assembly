Type: UnityEngine.Rendering.Universal.PolyNode

Method: System.Boolean IsHoleNode()

Disassembly:
	0x03A04E10 BL 0x1C16F20
	0x03A04E14 STR X30, [X31 - 0x20]!
	0x03A04E18 STP X20, X19, [X31 + 0x10]
	0x03A04E1C CBZ X1, 0x3A04E98
	0x03A04E20 LDR X8, [X1 + 0xF0]
	0x03A04E24 MOV X20, X1
	0x03A04E28 CBZ X8, 0x3A04E98

ISIL:
	001 Move W8, 1
	002 Move X0, [X0+16]
	003 Move W9, W8
	004 Xor W8, W8, 1
	005 Compare X0, 0
	006 JumpIfNotEqual {2}
	007 And W0, W9, 1
	008 Return X0

Method: System.Int32 get_ChildCount()

Disassembly:
	0x03A04E2C LDR X9, [X20 + 0x50]
	0x03A04E30 LDR X10, [X8 + 0x50]
	0x03A04E34 MOV W19, W2
	0x03A04E38 CMP X9, X10
	0x03A04E3C ADD X9, X20, 0x40
	0x03A04E40 B.GE 0x3A04E5C
	0x03A04E44 LDP V1, V0, [X9 + 0x10]
	0x03A04E48 LDR V2, [X9]
	0x03A04E4C ADD X9, X20, 0x10
	0x03A04E50 STP V1, V0, [X20 + 0x80]
	0x03A04E54 STR V2, [X20 + 0x7]
	0x03A04E58 B 0x3A04E70
	0x03A04E5C LDP V1, V0, [X9 + 0x10]
	0x03A04E60 LDR V2, [X9]
	0x03A04E64 ADD X9, X20, 0x70
	0x03A04E68 STP V1, V0, [X20 + 0x20]
	0x03A04E6C STR V2, [X20 + 0x1]
	0x03A04E70 LDP V1, V0, [X8 + 0x50]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x9DE000
	005 Move W8, [X20+3940]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x751000
	012 Move X0, [X0+320]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+3940], W8
	016 Move X8, [X19+48]
	017 Compare X8, 0
	018 JumpIfEqual {24}
	019 Move W0, [X8+24]
	020 Move X20, [X31+16]
	021 Move X19, [X31+24]
	022 Move X30, [X31+32]
	023 Return X0
	024 Call 0x1C17F20

Method: System.Collections.Generic.List`1<UnityEngine.Rendering.Universal.IntPoint> get_Contour()

Disassembly:
	0x03A04E74 LDR V2, [X8 + 0x4]
	0x03A04E78 MOV X1, X20

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Void AddChild(UnityEngine.Rendering.Universal.PolyNode Child)

Disassembly:
	0x03A04E7C STP V1, V0, [X9 + 0x10]
	0x03A04E80 STR V2, [X9]
	0x03A04E84 BL 0x3A04E9C
	0x03A04E88 STR W19, [X20 + 0xD8]
	0x03A04E8C LDP X20, X19, [X31 + 0x10]
	0x03A04E90 LDR X30, [X31], #0x20
	0x03A04E94 RET
	0x03A04E98 BL 0x1C16F20
	0x03A04E9C STR X30, [X31 - 0x10]!
	0x03A04EA0 CBZ X1, 0x3A04EE4
	0x03A04EA4 LDUR V0, [X1 + 0x78]
	0x03A04EA8 LDUR V1, [X1 + 0x18]
	0x00000000 INVALID
	0x03A04EB0 UNIMPLEMENTED
	0x03A04EB4 STUR V0, [X1 + 0xA8]
	0x03A04EB8 CBZ X8, 0x3A04ED0
	0x03A04EBC FMOV X9, D0
	0x03A04EC0 SCVTF D0, X9
	0x03A04EC4 SCVTF D1, X8
	0x03A04EC8 FDIV D0, D0, D1
	0x03A04ECC B 0x3A04ED8
	0x03A04ED0 ADRP X8, 0xFFFFFFFFFD0EA000
	0x03A04ED4 LDR V0, [X8 + 0x530]
	0x03A04ED8 STR D0, [X1 + 0xD0]
	0x03A04EDC LDR X30, [X31], #0x10
	0x03A04EE0 RET
	0x03A04EE4 BL 0x1C16F20
	0x03A04EE8 STR X30, [X31 - 0x10]!
	0x03A04EEC CBZ X1, 0x3A04FDC
	0x03A04EF0 ADRP X8, 0xFFFFFFFFFD0EA000
	0x03A04EF4 LDR V0, [X8 + 0x530]
	0x03A04EF8 LDR X8, [X1 + 0xF8]
	0x03A04EFC CBZ X8, 0x3A04FDC
	0x03A04F00 LDR X9, [X1 + 0x18]
	0x03A04F04 LDR X10, [X8 + 0x18]
	0x03A04F08 CMP X9, X10
	0x03A04F0C B.NE 0x3A04F40
	0x03A04F10 LDR X9, [X1 + 0x20]
	0x03A04F14 LDR X10, [X8 + 0x20]
	0x03A04F18 CMP X9, X10
	0x03A04F1C B.NE 0x3A04F40
	0x03A04F20 LDR X9, [X1 + 0x48]
	0x03A04F24 LDR X10, [X1 + 0x78]
	0x03A04F28 CMP X9, X10
	0x03A04F2C B.NE 0x3A04F50
	0x03A04F30 LDR X9, [X1 + 0x80]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x9DE000
	006 Move W8, [X21+3941]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0x751000
	014 Move X0, [X0+376]
	015 Call 0x1C17CF4
	016 Move X0, 0x751000
	017 Move X0, [X0+320]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+3941], W8
	021 Move X0, [X20+48]
	022 Compare X0, 0
	023 JumpIfEqual {55}
	024 Move X9, 0x751000
	025 Move X9, [X9+376]
	026 Move W21, [X0+24]
	027 Move W10, [X0+28]
	028 Move X8, [X0+16]
	029 Move X9, [X9]
	030 Add W10, W10, 1
	031 Move [X0+28], W10
	032 Compare X8, 0
	033 JumpIfEqual {55}
	034 Move W10, [X8+24]
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Move X9, W21
	037 Add W10, W21, 1
	038 Add X8, X8, X9
	039 Move [X0+24], W10
	040 Move [X8+32], X19
	041 Move X8, [X9+32]
	042 Move X1, X19
	043 Move X8, [X8+192]
	044 Move X2, [X8+112]
	045 Call List`1<Object>.AddWithResize, X0, X1
	046 Compare X19, 0
	047 JumpIfEqual {55}
	048 Move [X19+16], X20
	049 Move [X19+32], W21
	050 Move X20, [X31+16]
	051 Move X19, [X31+24]
	052 Move X30, [X31+32]
	053 Move X21, [X31+40]
	054 Return 
	055 Call 0x1C17F20

Method: UnityEngine.Rendering.Universal.PolyNode GetNext()

Disassembly:
	0x03A04F34 LDR X10, [X1 + 0x50]
	0x03A04F38 CMP X10, X9
	0x03A04F3C B.NE 0x3A04F50
	0x03A04F40 LDR X9, [X1 + 0xF0]
	0x03A04F44 MOV X1, X9
	0x03A04F48 CBNZ X9, 0x3A04EF8
	0x03A04F4C B 0x3A04FDC
	0x03A04F50 LDR V1, [X1 + 0xD0]
	0x03A04F54 FCMP D1, D0
	0x03A04F58 B.EQ 0x3A04F68
	0x03A04F5C LDR V1, [X8 + 0xD0]
	0x03A04F60 FCMP D1, D0
	0x03A04F64 B.NE 0x3A04FD0
	0x03A04F68 LDR V1, [X8 + 0xD0]
	0x03A04F6C FCMP D1, D0
	0x03A04F70 B.NE 0x3A04F88
	0x03A04F74 LDR X9, [X8 + 0xF8]
	0x03A04F78 MOV X1, X8
	0x03A04F7C MOV X8, X9
	0x03A04F80 CBNZ X9, 0x3A04F68
	0x03A04F84 B 0x3A04FDC
	0x03A04F88 MOV X9, X1
	0x03A04F8C LDR V1, [X9 + 0xD0]
	0x03A04F90 FCMP D1, D0
	0x03A04F94 B.NE 0x3A04FA4
	0x03A04F98 LDR X9, [X9 + 0xF0]
	0x03A04F9C CBNZ X9, 0x3A04F8C
	0x03A04FA0 B 0x3A04FDC
	0x03A04FA4 LDR X10, [X9 + 0xF8]
	0x03A04FA8 CBZ X10, 0x3A04FDC
	0x03A04FAC LDR X11, [X9 + 0x80]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x9DE000
	005 Move W8, [X20+3942]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0x751000
	012 Move X0, [X0+320]
	013 Call 0x1C17CF4
	014 Move X0, 0x751000
	015 Move X0, [X0+336]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3942], W8
	019 Move X0, [X19+48]
	020 Compare X0, 0
	021 JumpIfEqual {37}
	022 Move W8, [X0+24]
	023 NotImplemented "Instruction CMP not yet implemented."
	024 Move X8, 0x751000
	025 Move X8, [X8+336]
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move W1, W31
	029 Move X2, [X8]
	030 Move X30, [X31+32]
	031 Call List`1<Object>.get_Item, X0, X1
	032 Return X0
	033 Move X0, X19
	034 Move X20, [X31+16]
	035 Move X19, [X31+24]
	036 Move X30, [X31+32]
	037 Call 0x1C17F20

Method: UnityEngine.Rendering.Universal.PolyNode GetNextSiblingUp()

Disassembly:
	0x03A04FB0 LDR X10, [X10 + 0x20]
	0x03A04FB4 CMP X11, X10
	0x03A04FB8 B.EQ 0x3A04F44
	0x03A04FBC LDR X8, [X8 + 0x18]
	0x03A04FC0 LDR X10, [X9 + 0x18]
	0x03A04FC4 CMP X8, X10
	0x03A04FC8 CSEL X0, X1, X9, LT
	0x03A04FCC B 0x3A04FD4
	0x03A04FD0 MOV X0, X1
	0x03A04FD4 LDR X30, [X31], #0x10
	0x03A04FD8 RET
	0x03A04FDC BL 0x1C16F20
	0x03A04FE0 STR X30, [X31 - 0x30]!
	0x03A04FE4 STP X22, X21, [X31 + 0x10]
	0x03A04FE8 STP X20, X19, [X31 + 0x20]
	0x03A04FEC ADRP X22, 0x9DD000
	0x03A04FF0 LDRB W8, [X22 + 0xF6F]
	0x03A04FF4 MOV W20, W2
	0x03A04FF8 MOV X19, X1
	0x03A04FFC MOV X21, X0
	0x03A05000 TBNZ X8, 0x0, 0x3A05018
	0x03A05004 ADRP X0, 0x74F000
	0x03A05008 LDR X0, [X0 + 0x1E0]
	0x03A0500C BL 0x1C16CF4
	0x03A05010 MOVZ W8, 0x1
	0x03A05014 STRB W8, [X22 + 0xF6F]
	0x03A05018 CBZ X19, 0x3A053DC
	0x03A0501C LDR W8, [X19 + 0xEC]
	0x03A05020 ADDS W31, W8, 0x2
	0x03A05024 B.NE 0x3A050C8
	0x03A05028 MOV X9, X19
	0x03A0502C TBZ X20, 0x0, 0x3A0507C
	0x03A05030 MOV X8, X9
	0x03A05034 LDR X9, [X9 + 0xF0]
	0x03A05038 CBZ X9, 0x3A053DC
	0x03A0503C LDR X10, [X8 + 0x80]
	0x03A05040 LDR X11, [X9 + 0x20]
	0x03A05044 CMP X10, X11
	0x03A05048 B.EQ 0x3A05030
	0x03A0504C CMP X8, X19

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x9DE000
	008 Move X20, 0x751000
	009 Move X19, 0x751000
	010 Move W9, [X22+3943]
	011 Move X20, [X20+320]
	012 Move X19, [X19+336]
	013 Move X21, X0
	014 Move W23, 1
	015 Move TEMP, X9
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {24}
	019 Move X0, X20
	020 Call 0x1C17CF4
	021 Move X0, X19
	022 Call 0x1C17CF4
	023 Move [X22+3943], W23
	024 Move X8, [X21+16]
	025 Compare X8, 0
	026 JumpIfEqual {46}
	027 Move X0, [X8+48]
	028 Compare X0, 0
	029 JumpIfEqual {54}
	030 Move W9, [X0+24]
	031 Move W10, [X21+32]
	032 Move X21, X8
	033 Subtract W9, W9, 1
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Move W9, 1
	036 Move X2, [X19]
	037 Move X20, [X31+32]
	038 Move X19, [X31+40]
	039 Move X22, [X31+16]
	040 Move X21, [X31+24]
	041 Add W1, W10, 1
	042 Move X30, [X31+48]
	043 Move X23, [X31+56]
	044 Call List`1<Object>.get_Item, X0, X1
	045 Return X0
	046 Move X20, [X31+32]
	047 Move X19, [X31+40]
	048 Move X22, [X31+16]
	049 Move X21, [X31+24]
	050 Move X0, X31
	051 Move X30, [X31+48]
	052 Move X23, [X31+56]
	053 Return X0
	054 Call 0x1C17F20

Method: System.Collections.Generic.List`1<UnityEngine.Rendering.Universal.PolyNode> get_Childs()

Disassembly:
	0x03A05050 B.EQ 0x3A0519C
	0x03A05054 ADRP X9, 0xFFFFFFFFFD0E9000

ISIL:
	001 Move X0, [X0+48]
	002 Return X0

Method: UnityEngine.Rendering.Universal.PolyNode get_Parent()

Disassembly:
	0x03A05058 LDR V0, [X9 + 0x530]
	0x03A0505C CBZ X8, 0x3A053DC

ISIL:
	001 Move X0, [X0+16]
	002 Return X0

Method: System.Boolean get_IsHole()

Disassembly:
	0x03A05060 LDR V1, [X8 + 0xD0]
	0x03A05064 FCMP D1, D0
	0x03A05068 B.NE 0x3A05120
	0x03A0506C LDR X8, [X8 + 0xF8]
	0x03A05070 CMP X8, X19
	0x03A05074 B.NE 0x3A0505C
	0x03A05078 B 0x3A0519C

ISIL:
	001 Move W8, 1
	002 Move X0, [X0+16]
	003 Move W9, W8
	004 Xor W8, W8, 1
	005 Compare X0, 0
	006 JumpIfNotEqual {2}
	007 And W0, W9, 1
	008 Return X0

Method: System.Boolean get_IsOpen()

Disassembly:
	0x03A0507C MOV X8, X9
	0x03A05080 LDR X9, [X9 + 0xF8]

ISIL:
	001 Move W0, [X0+56]
	002 Return X0

Method: System.Void set_IsOpen(System.Boolean value)

Disassembly:
	0x03A05084 CBZ X9, 0x3A053DC
	0x03A05088 LDR X10, [X8 + 0x80]
	0x03A0508C LDR X11, [X9 + 0x20]

ISIL:
	001 And W8, W1, 1
	002 Move [X0+56], W8
	003 Return 

Method: System.Void .ctor()

Disassembly:
	0x03A04D4C BL 0x1C16D08
	0x03A04D50 MOV X1, X0
	0x03A04D54 MOV X0, X19
	0x03A04D58 MOV X2, X31
	0x03A04D5C BL 0x3A130EC
	0x03A04D60 ADRP X0, 0x750000
	0x03A04D64 LDR X0, [X0 + 0x1D8]
	0x03A04D68 BL 0x1C16D08
	0x03A04D6C MOV X1, X0
	0x03A04D70 MOV X0, X19
	0x03A04D74 BL 0x1C16DEC
	0x03A04D78 MOVN W9, 0xC0000000
	0x03A04D7C CMP X8, X9
	0x03A04D80 B.LE 0x3A04DA8
	0x03A04D84 MOVZ W8, 0x1
	0x03A04D88 STRB W8, [X2]
	0x03A04D8C LDP V1, V0, [X1 + 0x10]
	0x03A04D90 LDR V2, [X1]
	0x03A04D94 ADD X1, X31, 0x0
	0x03A04D98 STP V1, V0, [X31 + 0x10]
	0x03A04D9C STR V2, [X31]
	0x03A04DA0 BL 0x3A04CE4
	0x03A04DA4 B 0x3A04DD8
	0x03A04DA8 LDR X9, [X1 + 0x10]
	0x03A04DAC MOVN W11, 0xC0000000
	0x03A04DB0 SUB X10, X31, X9
	0x03A04DB4 CMP X10, X11
	0x03A04DB8 B.GT 0x3A04D84
	0x03A04DBC SUB X8, X31, X8
	0x03A04DC0 MOVN W10, 0xC0000000
	0x03A04DC4 CMP X8, X10
	0x03A04DC8 B.GT 0x3A04D84
	0x03A04DCC MOVZ W8, 0x40000000
	0x03A04DD0 CMP X9, X8
	0x03A04DD4 B.GE 0x3A04D84
	0x03A04DD8 LDP X30, X19, [X31 + 0x30]
	0x03A04DDC ADD X31, X31, 0x40
	0x03A04DE0 RET
	0x03A04DE4 STR X30, [X31 - 0x10]!
	0x03A04DE8 CBZ X1, 0x3A04E10
	0x03A04DEC STP X2, X3, [X1 + 0xF0]
	0x03A04DF0 LDP V1, V0, [X4 + 0x10]
	0x03A04DF4 LDR V2, [X4]
	0x03A04DF8 MOVN W8, 0x0
	0x03A04DFC STR W8, [X1 + 0xEC]
	0x03A04E00 STP V1, V0, [X1 + 0x50]
	0x03A04E04 STR V2, [X1 + 0x4]
	0x03A04E08 LDR X30, [X31], #0x10
	0x03A04E0C RET

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0x9DE000
	009 Move X24, 0x751000
	010 Move X20, 0x751000
	011 Move X22, 0x751000
	012 Move X21, 0x751000
	013 Move W8, [X23+3944]
	014 Move X24, [X24+360]
	015 Move X20, [X20+368]
	016 Move X22, [X22+344]
	017 Move X21, [X21+352]
	018 Move X19, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {37}
	023 Move X0, 0x751000
	024 Move X0, [X0+368]
	025 Call 0x1C17CF4
	026 Move X0, 0x751000
	027 Move X0, [X0+352]
	028 Call 0x1C17CF4
	029 Move X0, 0x751000
	030 Move X0, [X0+344]
	031 Call 0x1C17CF4
	032 Move X0, 0x751000
	033 Move X0, [X0+360]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X23+3944], W8
	037 Move X0, [X24]
	038 Call 0x1C17F10
	039 Move X1, [X20]
	040 Move X20, X0
	041 Call List`1<IntPoint>..ctor, X0
	042 Move [X19+24], X20
	043 Move X0, [X22]
	044 Call 0x1C17F10
	045 Move X1, [X21]
	046 Move X20, X0
	047 Call List`1<Object>..ctor, X0
	048 Move [X19+48], X20
	049 Move X0, X19
	050 Move X20, [X31+48]
	051 Move X19, [X31+56]
	052 Move X22, [X31+32]
	053 Move X21, [X31+40]
	054 Move X24, [X31+16]
	055 Move X23, [X31+24]
	056 Move X1, X31
	057 Move X30, [X31+64]
	058 Call Object..ctor, X0
	059 Return 

