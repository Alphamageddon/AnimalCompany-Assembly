Type: UnityEngine.Rendering.Universal.CameraTypeUtility

Method: System.String GetName(UnityEngine.Rendering.Universal.CameraRenderType type)

Disassembly:
	0x03A820F0 LDR X0, [X21]
	0x03A820F4 LDR W8, [X0 + 0xE0]
	0x03A820F8 CBNZ W8, 0x3A82100
	0x03A820FC BL 0x1C16DFC
	0x03A82100 MOV X0, X19
	0x03A82104 LDP X20, X19, [X31 + 0x10]
	0x03A82108 MOV X1, X31
	0x03A8210C MOV X2, X31
	0x03A82110 LDP X30, X21, [X31], #0x20
	0x03A82114 B 0x3C3883C
	0x03A82118 STR X30, [X31 - 0x20]!
	0x03A8211C STP X20, X19, [X31 + 0x10]
	0x03A82120 ADRP X20, 0x960000
	0x03A82124 LDRB W8, [X20 + 0x332]
	0x03A82128 MOV X19, X0
	0x03A8212C TBNZ X8, 0x0, 0x3A82150
	0x03A82130 ADRP X0, 0x6D5000
	0x03A82134 LDR X0, [X0 + 0x120]
	0x03A82138 BL 0x1C16CF4
	0x03A8213C ADRP X0, 0x6D5000
	0x03A82140 LDR X0, [X0 + 0x128]
	0x03A82144 BL 0x1C16CF4
	0x03A82148 MOVZ W8, 0x1
	0x03A8214C STRB W8, [X20 + 0x332]
	0x03A82150 STR X31, [X31 + 0x8]
	0x03A82154 CBZ X19, 0x3A821AC
	0x03A82158 MOV X0, X19
	0x03A8215C MOV X1, X31
	0x03A82160 BL 0x3C32ECC
	0x03A82164 CBZ X0, 0x3A821AC
	0x03A82168 ADRP X8, 0x6D5000
	0x03A8216C LDR X8, [X8 + 0x128]
	0x03A82170 ADD X1, X31, 0x8
	0x03A82174 MOV X19, X0
	0x03A82178 LDR X2, [X8]
	0x03A8217C BL 0x21E6600
	0x03A82180 TBZ X0, 0x0, 0x3A8218C
	0x03A82184 LDR X0, [X31 + 0x8]
	0x03A82188 B 0x3A821A0
	0x03A8218C ADRP X8, 0x6D5000
	0x03A82190 LDR X8, [X8 + 0x120]
	0x03A82194 MOV X0, X19
	0x03A82198 LDR X1, [X8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x961000
	006 Move X20, 0x6D6000
	007 Move W8, [X21+802]
	008 Move X20, [X20+136]
	009 Move W19, W0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x6D6000
	015 Move X0, [X0+136]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+802], W8
	019 Move X0, [X20]
	020 Move TEMP, X19
	021 And TEMP, TEMP, -2147483648
	022 Compare TEMP, -2147483648
	023 JumpIfEqual {35}
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {29}
	027 Call 0x1C17DFC
	028 Move X0, [X20]
	029 Move X8, [X0+184]
	030 Move X8, [X8]
	031 Compare X8, 0
	032 JumpIfEqual {54}
	033 Move W8, [X8+24]
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Move W19, W31
	036 Move W8, [X0+224]
	037 Compare W8, 0
	038 JumpIfNotEqual {41}
	039 Call 0x1C17DFC
	040 Move X0, [X20]
	041 Move X8, [X0+184]
	042 Move X8, [X8]
	043 Compare X8, 0
	044 JumpIfEqual {54}
	045 Move W9, [X8+24]
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Add X8, X8, W19
	048 Move X0, [X8+32]
	049 Move X20, [X31+16]
	050 Move X19, [X31+24]
	051 Move X30, [X31+32]
	052 Move X21, [X31+40]
	053 Return X0
	054 Call 0x1C17F20
	055 Call 0x1C17F28

Method: System.Void .cctor()

Disassembly:
	0x03A8219C BL 0x21E51FC
	0x03A821A0 LDP X20, X19, [X31 + 0x10]
	0x03A821A4 LDR X30, [X31], #0x20
	0x03A821A8 RET
	0x03A821AC BL 0x1C16F20
	0x03A821B0 LDR W0, [X0 + 0x20]
	0x03A821B4 RET
	0x03A821B8 LDRB W0, [X0 + 0x24]
	0x03A821BC RET
	0x03A821C0 AND W8, W1, 0x1
	0x03A821C4 STRB W8, [X0 + 0x24]
	0x03A821C8 RET
	0x03A821CC STR X30, [X31 - 0x30]!
	0x03A821D0 STP X22, X21, [X31 + 0x10]
	0x03A821D4 STP X20, X19, [X31 + 0x20]
	0x03A821D8 ADRP X20, 0x960000
	0x03A821DC ADRP X22, 0x671000
	0x03A821E0 LDRB W8, [X20 + 0x333]
	0x03A821E4 LDR X22, [X22 + 0x598]
	0x03A821E8 MOV X19, X0
	0x03A821EC TBNZ X8, 0x0, 0x3A82210
	0x03A821F0 ADRP X0, 0x6D5000
	0x03A821F4 LDR X0, [X0 + 0x130]
	0x03A821F8 BL 0x1C16CF4
	0x03A821FC ADRP X0, 0x671000
	0x03A82200 LDR X0, [X0 + 0x598]
	0x03A82204 BL 0x1C16CF4
	0x03A82208 MOVZ W8, 0x1
	0x03A8220C STRB W8, [X20 + 0x333]
	0x03A82210 MOV X20, X19
	0x03A82214 LDR X21, [X20 + 0x28]!
	0x03A82218 LDR X0, [X22]
	0x03A8221C LDR W8, [X0 + 0xE0]
	0x03A82220 CBNZ W8, 0x3A82228
	0x03A82224 BL 0x1C16DFC
	0x03A82228 MOV X0, X21
	0x03A8222C MOV X1, X31
	0x03A82230 BL 0x3C38948
	0x03A82234 TBNZ X0, 0x0, 0x3A82250
	0x03A82238 ADRP X8, 0x6D5000
	0x03A8223C LDR X8, [X8 + 0x130]
	0x03A82240 MOV X0, X19
	0x03A82244 MOV X1, X20
	0x03A82248 LDR X2, [X8]
	0x03A8224C BL 0x21A4990
	0x03A82250 LDR X0, [X20]
	0x03A82254 LDP X20, X19, [X31 + 0x20]
	0x03A82258 LDP X22, X21, [X31 + 0x10]
	0x03A8225C LDR X30, [X31], #0x30
	0x03A82260 RET
	0x03A82264 LDR W0, [X0 + 0x30]
	0x03A82268 RET
	0x03A8226C LDR W0, [X0 + 0x34]
	0x03A82270 RET
	0x03A82274 STR W1, [X0 + 0x34]
	0x03A82278 RET
	0x03A8227C LDR W0, [X0 + 0x38]
	0x03A82280 RET
	0x03A82284 LDR W8, [X0 + 0x38]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x961000
	007 Move X19, 0x6D6000
	008 Move X20, 0x672000
	009 Move W8, [X21+803]
	010 Move X19, [X19+144]
	011 Move X20, [X20+1728]
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {33}
	016 Move X0, 0x6D6000
	017 Move X0, [X0+144]
	018 Call 0x1C17CF4
	019 Move X0, 0x6D6000
	020 Move X0, [X0+136]
	021 Call 0x1C17CF4
	022 Move X0, 0x672000
	023 Move X0, [X0+3576]
	024 Call 0x1C17CF4
	025 Move X0, 0x672000
	026 Move X0, [X0+3768]
	027 Call 0x1C17CF4
	028 Move X0, 0x672000
	029 Move X0, [X0+1728]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X21+803], W8
	033 Move X0, [X20]
	034 Move X22, 0x672000
	035 Move X19, [X19]
	036 Move W8, [X0+224]
	037 Move X22, [X22+3576]
	038 Compare W8, 0
	039 JumpIfNotEqual {41}
	040 Call 0x1C17DFC
	041 Move X21, 0x672000
	042 Move X20, 0x6D6000
	043 Move X21, [X21+3768]
	044 Move X20, [X20+136]
	045 Move X0, X19
	046 Move X1, X31
	047 Call Type.GetTypeFromHandle, X0
	048 Move X8, [X22]
	049 Move X19, X0
	050 Move W9, [X8+224]
	051 Compare W9, 0
	052 JumpIfNotEqual {55}
	053 Move X0, X8
	054 Call 0x1C17DFC
	055 Move X0, X19
	056 Move X1, X31
	057 Call Enum.GetNames, X0
	058 Move X1, [X21]
	059 Call Enumerable.ToArray, X0
	060 Move X8, [X20]
	061 Move X20, [X31+32]
	062 Move X19, [X31+40]
	063 Move X22, [X31+16]
	064 Move X21, [X31+24]
	065 Move X8, [X8+184]
	066 Move [X8], X0
	067 Move X30, [X31+48]
	068 Return 

