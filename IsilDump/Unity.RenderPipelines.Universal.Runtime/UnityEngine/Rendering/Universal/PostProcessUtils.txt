Type: UnityEngine.Rendering.Universal.PostProcessUtils

Method: System.Int32 ConfigureDithering(UnityEngine.Rendering.Universal.PostProcessData data, System.Int32 index, UnityEngine.Camera camera, UnityEngine.Material material)

Disassembly:
	0x03A68B2C LDR X9, [X9 + 0xE10]
	0x03A68B30 ADD W10, W10, 0x1
	0x03A68B34 LDR X9, [X9]
	0x03A68B38 STR W10, [X0 + 0x1C]
	0x03A68B3C CBZ X8, 0x3A69C4C
	0x03A68B40 LDRSW X10, [X0 + 0x18]
	0x03A68B44 LDR W11, [X8 + 0x18]
	0x03A68B48 CMP W10, W11
	0x03A68B4C B.CS 0x3A68B64
	0x03A68B50 ADD W9, W10, 0x1
	0x03A68B54 ADD X8, X8, X10, 0x2, LSL
	0x03A68B58 STR W9, [X0 + 0x18]
	0x03A68B5C STR W25, [X8 + 0x20]
	0x03A68B60 B 0x3A68B78
	0x03A68B64 LDR X8, [X9 + 0x20]
	0x03A68B68 LDR X8, [X8 + 0xC0]
	0x03A68B6C LDR X2, [X8 + 0x70]
	0x03A68B70 MOV W1, W25
	0x03A68B74 BL 0x2FDC70C
	0x03A68B78 MOVN X25, 0x1B
	0x03A68B7C ADD X8, X27, X25
	0x03A68B80 LDR W2, [X8 + 0x3C]
	0x03A68B84 ADDS W31, W2, 0x1
	0x03A68B88 B.EQ 0x3A68BB0
	0x03A68B8C LDR W1, [X8 + 0x58]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Compare X2, 0
	008 JumpIfEqual {31}
	009 Move W20, W1
	010 Move X21, X0
	011 Move X0, X2
	012 Move X1, X31
	013 Move X19, X3
	014 Move X22, X2
	015 Call Camera.get_pixelWidth, X0
	016 Move W23, W0
	017 Move X0, X22
	018 Move X1, X31
	019 Call Camera.get_pixelHeight, X0
	020 Move W3, W0
	021 Move X0, X21
	022 Move W1, W20
	023 Move X4, X19
	024 Move X20, [X31+32]
	025 Move X19, [X31+40]
	026 Move X22, [X31+16]
	027 Move X21, [X31+24]
	028 Move W2, W23
	029 Move X30, [X31+48]
	030 Move X23, [X31+56]
	031 Call 0x1C17F20

Method: System.Int32 ConfigureDithering(UnityEngine.Rendering.Universal.PostProcessData data, System.Int32 index, System.Int32 cameraPixelWidth, System.Int32 cameraPixelHeight, UnityEngine.Material material)

Disassembly:
	0x03A68B90 STR X31, [X31 + 0x310]
	0x03A68B94 ADD X0, X31, 0x310
	0x03A68B98 MOV X3, X31
	0x03A68B9C BL 0x3A5764C
	0x03A68BA0 LDR X1, [X31 + 0x310]
	0x03A68BA4 MOV X0, X21
	0x03A68BA8 MOV X2, X31
	0x03A68BAC BL 0x3A57D7C
	0x03A68BB0 ADDS X25, X25, 0x4
	0x03A68BB4 B.NE 0x3A68B7C
	0x03A68BB8 B 0x3A68A5C
	0x03A68BBC ADRP X8, 0x6EE000
	0x03A68BC0 LDR X8, [X8 + 0x9A0]
	0x03A68BC4 ADD X0, X31, 0x6B0
	0x03A68BC8 LDR X1, [X8]
	0x03A68BCC BL 0x2BFA7D4
	0x03A68BD0 ADRP X26, 0x6EE000
	0x03A68BD4 LDR X26, [X26 + 0x9C0]
	0x03A68BD8 LDR X0, [X19 + 0x58]
	0x03A68BDC CBZ X0, 0x3A69C34
	0x03A68BE0 ADRP X8, 0x6B6000
	0x03A68BE4 LDR X8, [X8 + 0xB50]
	0x03A68BE8 LDR X1, [X8]
	0x03A68BEC ADD X8, X31, 0x310
	0x03A68BF0 BL 0x2FDD2BC
	0x03A68BF4 LDR V0, [X31 + 0x31]
	0x03A68BF8 LDR X8, [X31 + 0x320]
	0x03A68BFC ADRP X22, 0x6EE000
	0x03A68C00 STR V0, [X31 + 0x27]
	0x03A68C04 STR X8, [X31 + 0x280]
	0x03A68C08 LDR X22, [X22 + 0x980]
	0x03A68C0C LDR X1, [X28]
	0x03A68C10 ADD X0, X31, 0x270
	0x03A68C14 BL 0x2BBDDA0
	0x03A68C18 TBZ X0, 0x0, 0x3A68C34
	0x03A68C1C LDR X0, [X19 + 0x40]
	0x03A68C20 CBZ X0, 0x3A69C3C
	0x03A68C24 LDR W1, [X31 + 0x280]
	0x03A68C28 LDR X2, [X22]
	0x03A68C2C BL 0x2A30AB8
	0x03A68C30 B 0x3A68C0C
	0x03A68C34 ADRP X8, 0x6B6000
	0x03A68C38 LDR X8, [X8 + 0xB18]
	0x03A68C3C ADD X0, X31, 0x270
	0x03A68C40 LDR X1, [X8]
	0x03A68C44 BL 0x2BBDD9C
	0x03A68C48 LDR X8, [X19 + 0x58]
	0x03A68C4C CBZ X8, 0x3A69C34
	0x03A68C50 LDR W9, [X8 + 0x1C]
	0x03A68C54 ADRP X25, 0x6E7000
	0x03A68C58 ADD W9, W9, 0x1
	0x03A68C5C STP W31, W9, [X8 + 0x18]
	0x03A68C60 LDR X0, [X19 + 0x48]
	0x03A68C64 LDR X25, [X25 + 0x890]
	0x03A68C68 CBZ X0, 0x3A69C34
	0x03A68C6C ADRP X8, 0x6E7000
	0x03A68C70 LDR X8, [X8 + 0x880]
	0x03A68C74 LDR X1, [X8]
	0x03A68C78 ADD X8, X31, 0x310
	0x03A68C7C BL 0x2A0A71C
	0x03A68C80 LDP V0, V1, [X31 + 0x310]
	0x03A68C84 STP V0, V1, [X31 + 0x250]
	0x03A68C88 LDR X1, [X25]
	0x03A68C8C ADD X0, X31, 0x250
	0x03A68C90 BL 0x2BF39B0
	0x03A68C94 TBZ X0, 0x0, 0x3A68D44
	0x03A68C98 LDR X8, [X31 + 0x260]
	0x03A68C9C LDR X3, [X26]
	0x03A68CA0 STR X8, [X31 + 0x248]
	0x03A68CA4 ADD X0, X31, 0x248
	0x03A68CA8 ADD X1, X31, 0x294
	0x03A68CAC ADD X2, X31, 0x244
	0x03A68CB0 BL 0x2EDF008
	0x03A68CB4 LDR X0, [X23]
	0x03A68CB8 LDR W24, [X31 + 0x294]
	0x03A68CBC LDR W22, [X31 + 0x244]
	0x03A68CC0 LDR W8, [X0 + 0xE0]
	0x03A68CC4 CBNZ W8, 0x3A68CCC
	0x03A68CC8 BL 0x1C16DFC
	0x03A68CCC LDR W8, [X31 + 0x98]
	0x03A68CD0 SUBS W8, W22, W8
	0x03A68CD4 CSNEG W8, W8, W8, PL
	0x03A68CD8 CMP W8, 0x2
	0x03A68CDC B.CC 0x3A68C88
	0x03A68CE0 LDR X0, [X19 + 0x58]
	0x03A68CE4 CBZ X0, 0x3A69C50
	0x03A68CE8 ADRP X9, 0x68C000
	0x03A68CEC LDR W10, [X0 + 0x1C]
	0x03A68CF0 LDR X8, [X0 + 0x10]
	0x03A68CF4 LDR X9, [X9 + 0xE10]
	0x03A68CF8 ADD W10, W10, 0x1
	0x03A68CFC LDR X9, [X9]
	0x03A68D00 STR W10, [X0 + 0x1C]
	0x03A68D04 CBZ X8, 0x3A69C54
	0x03A68D08 LDRSW X10, [X0 + 0x18]
	0x03A68D0C LDR W11, [X8 + 0x18]
	0x03A68D10 CMP W10, W11
	0x03A68D14 B.CS 0x3A68D2C
	0x03A68D18 ADD W9, W10, 0x1
	0x03A68D1C ADD X8, X8, X10, 0x2, LSL
	0x03A68D20 STR W9, [X0 + 0x18]

ISIL:
	001 Move [X31-80], D9
	002 Move [X31-72], D8
	003 Move [X31+16], X30
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X24, 0x97B000
	012 Move W8, [X24+614]
	013 Move X19, X4
	014 Move W20, W3
	015 Move W21, W2
	016 Move W22, W1
	017 Move X23, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {27}
	022 Move X0, 0x6EF000
	023 Move X0, [X0+2344]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X24+614], W8
	027 Compare X23, 0
	028 JumpIfEqual {120}
	029 Move X8, [X23+32]
	030 Compare X8, 0
	031 JumpIfEqual {120}
	032 Move X25, [X8+16]
	033 Compare X25, 0
	034 JumpIfEqual {107}
	035 Move X8, [X25+24]
	036 Compare X8, 0
	037 JumpIfEqual {107}
	038 Add W9, W22, 1
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Move X0, X31
	041 NotImplemented "Instruction CSINC not yet implemented."
	042 Call Random.get_state
	043 Move X23, X0
	044 Move X0, X31
	045 Move X24, X1
	046 Call Time.get_frameCount
	047 Move X1, X31
	048 Call Random.InitState, X0
	049 Move X0, X31
	050 Call Random.get_value
	051 Move X0, X31
	052 Move V8, V0
	053 Call Random.get_value
	054 Move X0, X23
	055 Move X1, X24
	056 Move X2, X31
	057 Move V9, V0
	058 Call Random.set_state, X0
	059 Move W8, [X25+24]
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Move X24, 0x6EF000
	062 Move X24, [X24+2344]
	063 Add X8, X25, W22
	064 Move X23, [X8+32]
	065 Move X0, [X24]
	066 Move W9, [X0+224]
	067 Compare W9, 0
	068 JumpIfNotEqual {70}
	069 Call 0x1C17DFC
	070 Compare X19, 0
	071 JumpIfEqual {120}
	072 Move X8, [X24]
	073 Move X0, X19
	074 Move X2, X23
	075 Move X3, X31
	076 Move X8, [X8+184]
	077 Move W1, [X8+12]
	078 Call Material.SetTexture, X0, X1, X2
	079 Compare X23, 0
	080 JumpIfEqual {120}
	081 Move X8, [X24]
	082 Move X9, [X23]
	083 Move X0, X23
	084 Move X8, [X8+184]
	085 Move W24, [X8+16]
	086 Move X8, [X9+392]
	087 Move X1, [X9+400]
	088 NotImplemented "Instruction BLR not yet implemented."
	089 Move X8, [X23]
	090 Move W25, W0
	091 Move X0, X23
	092 Move X9, [X8+424]
	093 Move X1, [X8+432]
	094 NotImplemented "Instruction BLR not yet implemented."
	095 NotImplemented "Instruction SCVTF not yet implemented."
	096 NotImplemented "Instruction SCVTF not yet implemented."
	097 NotImplemented "Instruction SCVTF not yet implemented."
	098 NotImplemented "Instruction SCVTF not yet implemented."
	099 NotImplemented "Instruction FDIV not yet implemented."
	100 NotImplemented "Instruction FDIV not yet implemented."
	101 Move X0, X19
	102 Move W1, W24
	103 Move V2, V8
	104 Move V3, V9
	105 Move X2, X31
	106 Call Material.SetVector, X0, X1, X2
	107 Move W22, W31
	108 Move W0, W22
	109 Move X20, [X31+64]
	110 Move X19, [X31+72]
	111 Move X22, [X31+48]
	112 Move X21, [X31+56]
	113 Move X24, [X31+32]
	114 Move X23, [X31+40]
	115 Move X30, [X31+16]
	116 Move X25, [X31+24]
	117 Move D9, [X31+80]
	118 Move D8, [X31+88]
	119 Return X0
	120 Call 0x1C17F20
	121 Call 0x1C17F28

Method: System.Void ConfigureFilmGrain(UnityEngine.Rendering.Universal.PostProcessData data, UnityEngine.Rendering.Universal.FilmGrain settings, UnityEngine.Camera camera, UnityEngine.Material material)

Disassembly:
	0x03A68D24 STR W24, [X8 + 0x20]
	0x03A68D28 B 0x3A68C88
	0x03A68D2C LDR X8, [X9 + 0x20]
	0x03A68D30 LDR X8, [X8 + 0xC0]
	0x03A68D34 LDR X2, [X8 + 0x70]
	0x03A68D38 MOV W1, W24
	0x03A68D3C BL 0x2FDC70C
	0x03A68D40 B 0x3A68C88
	0x03A68D44 ADRP X8, 0x6E7000
	0x03A68D48 LDR X8, [X8 + 0x888]
	0x03A68D4C ADD X0, X31, 0x250
	0x03A68D50 LDR X1, [X8]
	0x03A68D54 BL 0x2BF3AB0
	0x03A68D58 LDR X0, [X19 + 0x58]
	0x03A68D5C CBZ X0, 0x3A69C34
	0x03A68D60 ADRP X8, 0x6B6000
	0x03A68D64 LDR X8, [X8 + 0xB50]
	0x03A68D68 LDR X1, [X8]
	0x03A68D6C ADD X8, X31, 0x310
	0x03A68D70 BL 0x2FDD2BC
	0x03A68D74 LDR V0, [X31 + 0x31]
	0x03A68D78 LDR X8, [X31 + 0x320]
	0x03A68D7C ADRP X22, 0x6B5000
	0x03A68D80 STR V0, [X31 + 0x27]
	0x03A68D84 STR X8, [X31 + 0x280]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Compare X2, 0
	008 JumpIfEqual {31}
	009 Move X20, X1
	010 Move X21, X0
	011 Move X0, X2
	012 Move X1, X31
	013 Move X19, X3
	014 Move X22, X2
	015 Call Camera.get_pixelWidth, X0
	016 Move W23, W0
	017 Move X0, X22
	018 Move X1, X31
	019 Call Camera.get_pixelHeight, X0
	020 Move W3, W0
	021 Move X0, X21
	022 Move X1, X20
	023 Move X4, X19
	024 Move X20, [X31+32]
	025 Move X19, [X31+40]
	026 Move X22, [X31+16]
	027 Move X21, [X31+24]
	028 Move W2, W23
	029 Move X30, [X31+48]
	030 Move X23, [X31+56]
	031 Call 0x1C17F20

Method: System.Void ConfigureFilmGrain(UnityEngine.Rendering.Universal.PostProcessData data, UnityEngine.Rendering.Universal.FilmGrain settings, System.Int32 cameraPixelWidth, System.Int32 cameraPixelHeight, UnityEngine.Material material)

Disassembly:
	0x03A68D88 LDR X22, [X22 + 0x8A8]
	0x03A68D8C LDR X1, [X28]
	0x03A68D90 ADD X0, X31, 0x270
	0x03A68D94 BL 0x2BBDDA0
	0x03A68D98 TBZ X0, 0x0, 0x3A68DB4
	0x03A68D9C LDR X0, [X19 + 0x48]
	0x03A68DA0 CBZ X0, 0x3A69C40
	0x03A68DA4 LDR W1, [X31 + 0x280]
	0x03A68DA8 LDR X2, [X22]
	0x03A68DAC BL 0x2A0B690
	0x03A68DB0 B 0x3A68D8C
	0x03A68DB4 ADRP X8, 0x6B6000
	0x03A68DB8 LDR X8, [X8 + 0xB18]
	0x03A68DBC ADD X0, X31, 0x270
	0x03A68DC0 LDR X1, [X8]
	0x03A68DC4 BL 0x2BBDD9C
	0x03A68DC8 LDR X8, [X19 + 0x58]
	0x03A68DCC LDR W10, [X31 + 0x68]
	0x03A68DD0 CBZ X8, 0x3A69C34
	0x03A68DD4 LDR W9, [X8 + 0x1C]
	0x03A68DD8 CMP W10, 0x1
	0x03A68DDC ADD W9, W9, 0x1
	0x03A68DE0 STP W31, W9, [X8 + 0x18]
	0x03A68DE4 B.LT 0x3A6936C
	0x03A68DE8 ADRP X8, 0xFFFFFFFFFD081000
	0x03A68DEC ADRP X9, 0xFFFFFFFFFD082000
	0x03A68DF0 LDR V8, [X8 + 0xF20]
	0x03A68DF4 LDR V2, [X9 + 0x79]
	0x03A68DF8 ADD X11, X31, 0x4B0
	0x03A68DFC MOV W27, W10
	0x03A68E00 MOVZ W10, 0x7
	0x03A68E04 MOVZ W8, 0x2
	0x03A68E08 MOV X23, X31
	0x03A68E0C MOV W22, W31
	0x03A68E10 MOV W29, W31
	0x03A68E14 MOVZ W24, 0x88
	0x03A68E18 ADD X12, X11, 0x3C
	0x03A68E1C ADD X11, X11, 0x20
	0x03A68E20 UNIMPLEMENTED
	0x03A68E24 UNIMPLEMENTED
	0x03A68E28 STR W31, [X31 + 0x6C]
	0x03A68E2C STP X11, X12, [X31 + 0x58]
	0x03A68E30 STR X27, [X31 + 0x80]
	0x03A68E34 STR V2, [X31 + 0x7]
	0x03A68E38 STP V4, V3, [X31 + 0x30]
	0x03A68E3C LDR X8, [X31 + 0x90]
	0x03A68E40 ADD X0, X31, 0x1B8
	0x03A68E44 MOVZ W2, 0x88
	0x03A68E48 MADD X1, X23, X24, X8
	0x03A68E4C BL 0x3EB1B30
	0x03A68E50 ADD X0, X31, 0x1B8
	0x03A68E54 MOV X1, X31
	0x03A68E58 BL 0x3C5BFF8
	0x03A68E5C MOV X25, X0
	0x03A68E60 ADD X0, X31, 0x1B8
	0x03A68E64 MOV X1, X31
	0x03A68E68 BL 0x3C5C0A0
	0x03A68E6C CBZ X0, 0x3A69C34
	0x03A68E70 MOV X1, X31
	0x03A68E74 BL 0x3C385F8
	0x03A68E78 LDR X8, [X19 + 0x40]
	0x03A68E7C CBZ X8, 0x3A69C34
	0x03A68E80 ADRP X9, 0x6EE000
	0x03A68E84 LDR X9, [X9 + 0x988]
	0x03A68E88 MOV W1, W0
	0x03A68E8C ADD X2, X31, 0x4B0
	0x03A68E90 MOV X0, X8
	0x03A68E94 LDR X3, [X9]
	0x03A68E98 STR W1, [X31 + 0x8C]
	0x03A68E9C BL 0x2A3111C
	0x03A68EA0 ADRP X8, 0x68B000
	0x03A68EA4 LDR X8, [X8 + 0x598]
	0x03A68EA8 MOV W26, W0
	0x03A68EAC LDR X8, [X8]
	0x03A68EB0 LDR W9, [X8 + 0xE0]
	0x03A68EB4 CBNZ W9, 0x3A68EC0
	0x03A68EB8 MOV X0, X8
	0x03A68EBC BL 0x1C16DFC
	0x03A68EC0 MOV X0, X25
	0x03A68EC4 MOV X1, X31
	0x03A68EC8 BL 0x3C38948
	0x03A68ECC TBZ X0, 0x0, 0x3A69354
	0x03A68ED0 TBZ X26, 0x0, 0x3A68EF4
	0x03A68ED4 CBZ X25, 0x3A69C34
	0x03A68ED8 LDR W24, [X31 + 0x4B0]
	0x03A68EDC MOV X0, X25
	0x03A68EE0 MOV X1, X31
	0x03A68EE4 BL 0x3C1AD38
	0x03A68EE8 CMP W24, W0
	0x03A68EEC CSET W24, NE
	0x03A68EF0 B 0x3A691F4
	0x03A68EF4 CBZ X25, 0x3A69C34
	0x03A68EF8 LDR X8, [X25]
	0x03A68EFC MOV X0, X25
	0x03A68F00 LDP X9, X1, [X8 + 0x188]
	0x03A68F04 BLR X9
	0x03A68F08 UBFM W8, W0, 0x1E, 0x1D
	0x03A68F0C SUB W8, W8, 0x1
	0x03A68F10 MOVZ X9, 0x43300000
	0x03A68F14 ORR X8, X8, X9, 0x0
	0x03A68F18 MOVZ X9, 0xC3300000
	0x03A68F1C FMOV D0, X9
	0x03A68F20 FMOV D1, X8
	0x03A68F24 FADD D0, D1, D0
	0x03A68F28 STR W0, [X31 + 0x4C8]
	0x03A68F2C FMOV X8, D0
	0x03A68F30 MOV X0, X21
	0x03A68F34 MOV X1, X31
	0x03A68F38 SBFM X24, X8, 0x34, 0x3F
	0x03A68F3C BL 0x3A579A0
	0x03A68F40 CMP W24, 0x404
	0x03A68F44 MOVZ W8, 0x404
	0x03A68F48 CSEL W8, W24, W8, LT
	0x03A68F4C SUB W9, W8, 0x3FD
	0x03A68F50 CMP W8, 0x3FE
	0x03A68F54 MOV X27, X31
	0x03A68F58 STR W9, [X31 + 0x4CC]
	0x03A68F5C STR X25, [X31 + 0x508]
	0x03A68F60 B.LT 0x3A69188
	0x03A68F64 SUB W8, W0, W24
	0x03A68F68 LDR X24, [X31 + 0x60]
	0x03A68F6C ADD W28, W8, 0x3FF
	0x03A68F70 MOV X0, X21
	0x03A68F74 MOV X1, X31
	0x03A68F78 BL 0x3A579A0
	0x03A68F7C ADD W8, W28, W27
	0x03A68F80 SUB W9, W0, 0x1
	0x03A68F84 CMP W8, W9
	0x03A68F88 CSEL W26, W8, W9, LT
	0x03A68F8C ADD X2, X31, 0x1B0
	0x03A68F90 MOV X0, X21
	0x03A68F94 MOV W1, W26
	0x03A68F98 MOV X3, X31
	0x03A68F9C BL 0x3A57B4C
	0x03A68FA0 TBZ X0, 0x0, 0x3A69070
	0x03A68FA4 LDR W8, [X31 + 0x1B0]
	0x03A68FA8 MOVZ W3, 0x1
	0x03A68FAC MOV X0, X19
	0x03A68FB0 MOV W1, W26
	0x03A68FB4 STR W8, [X24]
	0x03A68FB8 LDR W8, [X31 + 0x1B4]
	0x03A68FBC MOV W4, W31
	0x03A68FC0 STUR W8, [X24 - 0x1C]
	0x03A68FC4 LDR W2, [X31 + 0x1B4]
	0x03A68FC8 BL 0x3A69F88
	0x03A68FCC LDP S4, S5, [X19]
	0x03A68FD0 MOVZ W8, 0x7F800000
	0x03A68FD4 MOVZ W14, 0x80000000
	0x03A68FD8 MOV W10, W22
	0x03A68FDC SCVTF S4, S4
	0x03A68FE0 FMUL S0, S0, S4
	0x03A68FE4 FMUL S2, S2, S4
	0x03A68FE8 FMOV S4, W8
	0x03A68FEC SCVTF S5, S5
	0x03A68FF0 FMUL S3, S3, S5
	0x03A68FF4 FCVTZS W12, S2
	0x03A68FF8 FCMP S2, S4
	0x03A68FFC FCVTZS W11, S0
	0x03A69000 FCVTZS W13, S3
	0x03A69004 CSEL X12, X14, X12, EQ
	0x03A69008 FCMP S0, S4
	0x03A6900C UBFM X13, X13, 0x20, 0x1F
	0x03A69010 CSEL X11, X14, X11, EQ
	0x03A69014 FCMP S3, S4
	0x03A69018 MOVZ X14, 0x80000000
	0x03A6901C FMUL S1, S1, S5
	0x03A69020 CSEL X13, X14, X13, EQ
	0x03A69024 ADD X11, X11, X12
	0x03A69028 ORR X12, X13, X12, 0x0
	0x03A6902C FCVTZS W13, S1
	0x03A69030 UBFM X13, X13, 0x20, 0x1F
	0x03A69034 FCMP S1, S4
	0x03A69038 LDRSW X8, [X31 + 0x4CC]
	0x03A6903C CSEL X13, X14, X13, EQ
	0x03A69040 CMP W22, W11
	0x03A69044 ADD X12, X12, X13

ISIL:
	001 Move [X31-112], D12
	002 Move [X31+8], D11
	003 Move [X31+16], D10
	004 Move [X31+24], D9
	005 Move [X31+32], D8
	006 Move [X31+40], X30
	007 Move [X31+48], X26
	008 Move [X31+56], X25
	009 Move [X31+64], X24
	010 Move [X31+72], X23
	011 Move [X31+80], X22
	012 Move [X31+88], X21
	013 Move [X31+96], X20
	014 Move [X31+104], X19
	015 Move X23, 0x97B000
	016 Move W8, [X23+615]
	017 Move X19, X4
	018 Move W21, W3
	019 Move W22, W2
	020 Move X20, X1
	021 Move X24, X0
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {34}
	026 Move X0, 0x68C000
	027 Move X0, [X0+1432]
	028 Call 0x1C17CF4
	029 Move X0, 0x6EF000
	030 Move X0, [X0+2344]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X23+615], W8
	034 Compare X20, 0
	035 JumpIfEqual {209}
	036 Move X0, [X20+80]
	037 Compare X0, 0
	038 JumpIfEqual {209}
	039 Move X8, [X0]
	040 Move X9, [X8+536]
	041 Move X1, [X8+544]
	042 NotImplemented "Instruction BLR not yet implemented."
	043 Move X8, [X20+56]
	044 Compare X8, 0
	045 JumpIfEqual {209}
	046 Move X9, [X8]
	047 Move X23, X0
	048 Move X0, X8
	049 Move X10, [X9+536]
	050 Move X1, [X9+544]
	051 NotImplemented "Instruction BLR not yet implemented."
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Compare X24, 0
	054 JumpIfEqual {209}
	055 Move X8, [X24+32]
	056 Compare X8, 0
	057 JumpIfEqual {209}
	058 Move X0, [X20+56]
	059 Compare X0, 0
	060 JumpIfEqual {209}
	061 Move X9, [X0]
	062 Move X23, [X8+24]
	063 Move X8, [X9+536]
	064 Move X1, [X9+544]
	065 NotImplemented "Instruction BLR not yet implemented."
	066 Compare X23, 0
	067 JumpIfEqual {209}
	068 Move W8, [X23+24]
	069 NotImplemented "Instruction CMP not yet implemented."
	070 Add X8, X23, W0
	071 Move X23, [X8+32]
	072 Move X26, 0x68C000
	073 Move X26, [X26+1432]
	074 Move X0, X31
	075 Call Random.get_state
	076 Move X24, X0
	077 Move X0, X31
	078 Move X25, X1
	079 Call Time.get_frameCount
	080 Move X1, X31
	081 Call Random.InitState, X0
	082 Move X0, X31
	083 Call Random.get_value
	084 Move X0, X31
	085 Move V8, V0
	086 Call Random.get_value
	087 Move X0, X24
	088 Move X1, X25
	089 Move X2, X31
	090 Move V9, V0
	091 Call Random.set_state, X0
	092 Move X0, [X26]
	093 Move W8, [X0+224]
	094 Compare W8, 0
	095 JumpIfNotEqual {97}
	096 Call 0x1C17DFC
	097 Move X0, X23
	098 Move X1, X31
	099 Move X2, X31
	100 Call Object.op_Equality, X0, X1
	101 Move TEMP, X0
	102 And TEMP, TEMP, 1
	103 Compare TEMP, 1
	104 JumpIfNotEqual {122}
	105 Move X21, 0x971000
	106 Move W8, [X21+3674]
	107 Compare W8, 0
	108 JumpIfNotEqual {114}
	109 Move X0, 0x693000
	110 Move X0, [X0+2464]
	111 Call 0x1C17CF4
	112 Move W8, 1
	113 Move [X21+3674], W8
	114 Move X8, 0x693000
	115 Move X8, [X8+2464]
	116 Move X8, [X8]
	117 Move X8, [X8+184]
	118 Move S10, [X8]
	119 Move S11, [X8+4]
	120 Move S8, [X8+8]
	121 Move S9, [X8+12]
	122 Compare X23, 0
	123 JumpIfEqual {209}
	124 Move X8, [X23]
	125 Move X0, X23
	126 Move X9, [X8+392]
	127 Move X1, [X8+400]
	128 NotImplemented "Instruction BLR not yet implemented."
	129 Move X8, [X23]
	130 Move W24, W0
	131 Move X0, X23
	132 Move X9, [X8+424]
	133 Move X1, [X8+432]
	134 NotImplemented "Instruction BLR not yet implemented."
	135 NotImplemented "Instruction SCVTF not yet implemented."
	136 NotImplemented "Instruction SCVTF not yet implemented."
	137 NotImplemented "Instruction SCVTF not yet implemented."
	138 NotImplemented "Instruction SCVTF not yet implemented."
	139 NotImplemented "Instruction FDIV not yet implemented."
	140 NotImplemented "Instruction FDIV not yet implemented."
	141 Move X22, 0x6EF000
	142 Move X22, [X22+2344]
	143 Move X0, [X22]
	144 Move W8, [X0+224]
	145 Compare W8, 0
	146 JumpIfNotEqual {148}
	147 Call 0x1C17DFC
	148 Compare X19, 0
	149 JumpIfEqual {209}
	150 Move X8, [X22]
	151 Move X0, X19
	152 Move X2, X23
	153 Move X3, X31
	154 Move X8, [X8+184]
	155 Move W1, [X8]
	156 Call Material.SetTexture, X0, X1, X2
	157 Move X0, [X20+64]
	158 Compare X0, 0
	159 JumpIfEqual {209}
	160 Move X8, [X22]
	161 Move X9, [X0]
	162 Move X8, [X8+184]
	163 Move X10, [X9+536]
	164 Move X1, [X9+544]
	165 Move W21, [X8+4]
	166 NotImplemented "Instruction BLR not yet implemented."
	167 Move X0, [X20+72]
	168 Compare X0, 0
	169 JumpIfEqual {209}
	170 Move X8, [X0]
	171 Move V12, V0
	172 Move X9, [X8+536]
	173 Move X1, [X8+544]
	174 NotImplemented "Instruction BLR not yet implemented."
	175 Move V1, V0
	176 Move S0, 4
	177 Multiply S0, S12, S0
	178 Move S2, W31
	179 Move S3, W31
	180 Move X0, X19
	181 Move W1, W21
	182 Move X2, X31
	183 Call Material.SetVector, X0, X1, X2
	184 Move X8, [X22]
	185 Move X0, X19
	186 Move V0, V10
	187 Move V1, V11
	188 Move X8, [X8+184]
	189 Move V2, V8
	190 Move V3, V9
	191 Move X20, [X31+96]
	192 Move X19, [X31+104]
	193 Move W1, [X8+8]
	194 Move X22, [X31+80]
	195 Move X21, [X31+88]
	196 Move X24, [X31+64]
	197 Move X23, [X31+72]
	198 Move X26, [X31+48]
	199 Move X25, [X31+56]
	200 Move X30, [X31+40]
	201 Move D9, [X31+24]
	202 Move D8, [X31+32]
	203 Move D11, [X31+8]
	204 Move D10, [X31+16]
	205 Move X2, X31
	206 Move V12, [X31+112]
	207 Call Material.SetVector, X0, X1, X2
	208 Return 
	209 Call 0x1C17F20
	210 Call 0x1C17F28

Method: System.Void SetSourceSize(UnityEngine.Rendering.CommandBuffer cmd, UnityEngine.RenderTextureDescriptor desc)

Disassembly:
	0x03A69048 CSEL X22, X10, X11, GT
	0x03A6904C UBFM X10, X12, 0x20, 0x3F
	0x03A69050 MOV W9, W29
	0x03A69054 ADD X27, X27, 0x1
	0x03A69058 CMP W29, W10
	0x03A6905C CSEL X29, X9, X10, GT
	0x03A69060 CMP X27, X8
	0x03A69064 ADD X24, X24, 0x4
	0x03A69068 B.LT 0x3A68F70
	0x03A6906C B 0x3A69074
	0x03A69070 LDR W8, [X31 + 0x4CC]
	0x03A69074 ADRP X28, 0x6B5000
	0x03A69078 LDR X28, [X28 + 0xB28]
	0x03A6907C LDR W24, [X31 + 0x8C]
	0x03A69080 CMP W8, W27
	0x03A69084 B.LE 0x3A69180
	0x03A69088 LDR X0, [X19 + 0x48]
	0x03A6908C CBZ X0, 0x3A69C34
	0x03A69090 ADRP X8, 0x6E5000
	0x03A69094 LDR X8, [X8 + 0xD08]
	0x03A69098 MOV W1, W24
	0x03A6909C LDR X2, [X8]
	0x03A690A0 BL 0x2A0A530
	0x03A690A4 LDR X8, [X19 + 0x48]
	0x03A690A8 CBZ X8, 0x3A69C34
	0x03A690AC ADRP X9, 0x6B4000
	0x03A690B0 LDR X9, [X9 + 0x8B0]
	0x03A690B4 LDR W2, [X31 + 0x98]
	0x03A690B8 MOV W25, W0
	0x03A690BC MOV X0, X8
	0x03A690C0 LDR X3, [X9]
	0x03A690C4 MOV W1, W24
	0x03A690C8 BL 0x2A0A330
	0x03A690CC CMP W27, 0x1
	0x03A690D0 B.LT 0x3A6910C
	0x03A690D4 LDR X24, [X31 + 0x60]
	0x03A690D8 LDR W1, [X24]
	0x03A690DC LDUR W2, [X24 - 0x1C]
	0x03A690E0 ADD X0, X31, 0x310
	0x03A690E4 MOV X3, X31
	0x03A690E8 STR X31, [X31 + 0x310]
	0x03A690EC BL 0x3A5764C
	0x03A690F0 LDR X1, [X31 + 0x310]
	0x03A690F4 MOV X0, X21
	0x03A690F8 MOV X2, X31
	0x03A690FC BL 0x3A57D7C
	0x03A69100 SUBS X27, X27, 0x1
	0x03A69104 ADD X24, X24, 0x4

ISIL:
	001 Move [X31-48], D9
	002 Move [X31-40], D8
	003 Move [X31+16], X30
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0x97A000
	008 Move W8, [X21+616]
	009 Move X20, X1
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x6EE000
	016 Move X0, [X0+2344]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X21+616], W8
	020 Move S0, [X20]
	021 Move S1, [X20+4]
	022 Move X21, 0x6EE000
	023 Move X21, [X21+2344]
	024 Move X0, X20
	025 Move X1, X31
	026 NotImplemented "Instruction SCVTF not yet implemented."
	027 NotImplemented "Instruction SCVTF not yet implemented."
	028 Call RenderTextureDescriptor.get_useDynamicScale, X0
	029 Move TEMP, X0
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfNotEqual {39}
	033 Move X0, X31
	034 Call ScalableBufferManager.get_widthScaleFactor
	035 Move X0, X31
	036 Multiply S9, S0, S9
	037 Call ScalableBufferManager.get_heightScaleFactor
	038 Multiply S8, S0, S8
	039 Move X0, [X21]
	040 Move W8, [X0+224]
	041 Compare W8, 0
	042 JumpIfNotEqual {44}
	043 Call 0x1C17DFC
	044 Compare X19, 0
	045 JumpIfEqual {64}
	046 Move X8, [X21]
	047 Move X0, X19
	048 Move X20, [X31+32]
	049 Move X19, [X31+40]
	050 Move X30, [X31+16]
	051 Move X21, [X31+24]
	052 Move X8, [X8+184]
	053 Move S0, 1
	054 NotImplemented "Instruction FDIV not yet implemented."
	055 NotImplemented "Instruction FDIV not yet implemented."
	056 Move W1, [X8+20]
	057 Move V0, V9
	058 Move V1, V8
	059 Move X2, X31
	060 Move D9, [X31+48]
	061 Move D8, [X31+56]
	062 Call CommandBuffer.SetGlobalVector, X0, X1, X2
	063 Return 
	064 Call 0x1C17F20

