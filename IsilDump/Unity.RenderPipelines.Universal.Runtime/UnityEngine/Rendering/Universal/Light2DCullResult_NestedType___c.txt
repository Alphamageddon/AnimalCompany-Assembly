Type: UnityEngine.Rendering.Universal.Light2DCullResult/<>c

Method: System.Void .cctor()

Disassembly:
	0x03A17828 ADRP X0, 0x73D000
	0x03A1782C LDR X0, [X0 + 0x510]
	0x03A17830 BL 0x1C16CF4
	0x03A17834 ADRP X0, 0x737000
	0x03A17838 LDR X0, [X0 + 0x720]
	0x03A1783C BL 0x1C16CF4
	0x03A17840 ADRP X0, 0x73D000
	0x03A17844 LDR X0, [X0 + 0x310]
	0x03A17848 BL 0x1C16CF4
	0x03A1784C ADRP X0, 0x73D000
	0x03A17850 LDR X0, [X0 + 0x170]
	0x03A17854 BL 0x1C16CF4
	0x03A17858 ADRP X0, 0x73D000
	0x03A1785C LDR X0, [X0 + 0x3F8]
	0x03A17860 BL 0x1C16CF4
	0x03A17864 ADRP X0, 0x738000
	0x03A17868 LDR X0, [X0 + 0xF08]
	0x03A1786C BL 0x1C16CF4
	0x03A17870 ADRP X0, 0x73D000
	0x03A17874 LDR X0, [X0 + 0x200]
	0x03A17878 BL 0x1C16CF4
	0x03A1787C ADRP X0, 0x73D000
	0x03A17880 LDR X0, [X0 + 0x238]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x9CB000
	005 Move X20, 0x73E000
	006 Move W8, [X19+4031]
	007 Move X20, [X20+1512]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x73E000
	013 Move X0, [X0+1512]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+4031], W8
	017 Move X0, [X20]
	018 Call 0x1C17F10
	019 Move X1, X31
	020 Move X19, X0
	021 Call Object..ctor, X0
	022 Move X8, [X20]
	023 Move X8, [X8+184]
	024 Move [X8], X19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Return 

Method: System.Void .ctor()

Disassembly:
	0x03A17884 BL 0x1C16CF4
	0x03A17888 ADRP X0, 0x73D000

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: System.Int32 <SetupCulling>b__8_0(UnityEngine.Rendering.Universal.Light2D l1, UnityEngine.Rendering.Universal.Light2D l2)

Disassembly:
	0x03A1788C LDR X0, [X0 + 0x240]
	0x03A17890 BL 0x1C16CF4
	0x03A17894 ADRP X0, 0x73D000
	0x03A17898 LDR X0, [X0 + 0x210]
	0x03A1789C BL 0x1C16CF4
	0x03A178A0 ADRP X0, 0x737000
	0x03A178A4 LDR X0, [X0 + 0x718]
	0x03A178A8 BL 0x1C16CF4
	0x03A178AC ADRP X0, 0x73D000

ISIL:
	001 Move [X31-16], X30
	002 Compare X1, 0
	003 JumpIfEqual {11}
	004 Compare X2, 0
	005 JumpIfEqual {11}
	006 Move W8, [X1+104]
	007 Move W9, [X2+104]
	008 Subtract W0, W8, W9
	009 Move X30, [X31+16]
	010 Return X0
	011 Call 0x1C17F20

