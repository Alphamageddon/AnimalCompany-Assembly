Type: UnityEngine.Rendering.Universal.DebugDisplaySettingsRendering/WidgetFactory/<>c__DisplayClass10_0

Method: System.Void .ctor()

Disassembly:
	0x03A3507C BL 0x1C16CF4
	0x03A35080 MOVZ W8, 0x1

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: System.Int32 <CreatePixelValidationMode>b__0()

Disassembly:
	0x03A358FC LDR X8, [X0 + 0x78]
	0x03A35900 CBZ X8, 0x3A35910
	0x03A35904 LDR X0, [X8 + 0x28]
	0x03A35908 LDR X30, [X31], #0x10
	0x03A3590C RET
	0x03A35910 BL 0x1C16F20
	0x03A35914 STR X30, [X31 - 0x10]!
	0x03A35918 LDR X0, [X0 + 0x78]
	0x03A3591C CBZ X0, 0x3A35930
	0x03A35920 LDR X8, [X0]
	0x03A35924 LDP X2, X1, [X8 + 0x1D8]
	0x03A35928 LDR X30, [X31], #0x10
	0x03A3592C BR X2
	0x03A35930 BL 0x1C16F20
	0x03A35934 STR X30, [X31 - 0x10]!
	0x03A35938 LDR X0, [X0 + 0x78]
	0x03A3593C CBZ X0, 0x3A35950
	0x03A35940 LDR X8, [X0]
	0x03A35944 LDP X2, X1, [X8 + 0x1E8]
	0x03A35948 LDR X30, [X31], #0x10

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x9AE000
	005 Move W8, [X20+208]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x721000
	012 Move X0, [X0+1136]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+208], W8
	016 Move X8, [X19+16]
	017 Compare X8, 0
	018 JumpIfEqual {27}
	019 Move X8, [X8+32]
	020 Compare X8, 0
	021 JumpIfEqual {27}
	022 Move W0, [X8+60]
	023 Move X20, [X31+16]
	024 Move X19, [X31+24]
	025 Move X30, [X31+32]
	026 Return X0
	027 Call 0x1C17F20

Method: System.Void <CreatePixelValidationMode>b__1(System.Int32 value)

Disassembly:
	0x03A3594C BR X2
	0x03A35950 BL 0x1C16F20
	0x03A35954 STR X30, [X31 - 0x10]!
	0x03A35958 LDR X0, [X0 + 0x78]
	0x03A3595C CBZ X0, 0x3A35970
	0x03A35960 LDR X8, [X0]
	0x03A35964 LDP X2, X1, [X8 + 0x1F8]
	0x03A35968 LDR X30, [X31], #0x10
	0x03A3596C BR X2
	0x03A35970 BL 0x1C16F20
	0x03A35974 STR X30, [X31 - 0x10]!
	0x03A35978 LDR X8, [X0 + 0x78]
	0x03A3597C CBZ X8, 0x3A359DC
	0x03A35980 LDR X9, [X8 + 0x30]
	0x03A35984 CBZ X9, 0x3A359DC
	0x03A35988 LDR W10, [X9 + 0x10]
	0x03A3598C CBNZ W10, 0x3A359C0
	0x03A35990 LDR W9, [X9 + 0x14]
	0x03A35994 CBNZ W9, 0x3A359C0
	0x03A35998 LDR X9, [X8 + 0x28]
	0x03A3599C CBZ X9, 0x3A359DC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x9AE000
	006 Move W8, [X21+209]
	007 Move W19, W1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x721000
	014 Move X0, [X0+1136]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+209], W8
	018 Move X8, [X20+16]
	019 Compare X8, 0
	020 JumpIfEqual {30}
	021 Move X8, [X8+32]
	022 Compare X8, 0
	023 JumpIfEqual {30}
	024 Move [X8+60], W19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Move X21, [X31+40]
	029 Return 
	030 Call 0x1C17F20

Method: System.Int32 <CreatePixelValidationMode>b__2()

Disassembly:
	0x03A359A0 LDR W9, [X9 + 0x28]
	0x03A359A4 CBNZ W9, 0x3A359C0
	0x03A359A8 LDR X8, [X8 + 0x20]
	0x03A359AC CBZ X8, 0x3A359DC
	0x03A359B0 LDR W9, [X8 + 0x48]
	0x03A359B4 CBNZ W9, 0x3A359C0
	0x03A359B8 LDR W9, [X8 + 0x4C]
	0x03A359BC CBZ W9, 0x3A359CC
	0x03A359C0 MOVZ W0, 0x1
	0x03A359C4 LDR X30, [X31], #0x10
	0x03A359C8 RET
	0x03A359CC LDR W8, [X8 + 0x44]
	0x03A359D0 CMP W8, 0x0
	0x03A359D4 CSET W0, NE
	0x03A359D8 B 0x3A359C4
	0x03A359DC BL 0x1C16F20
	0x03A359E0 STR X30, [X31 - 0x10]!
	0x03A359E4 LDR X0, [X0 + 0x78]
	0x03A359E8 CBZ X0, 0x3A35A00
	0x03A359EC LDR X8, [X0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x9AE000
	005 Move W8, [X20+210]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x721000
	012 Move X0, [X0+1136]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+210], W8
	016 Move X8, [X19+16]
	017 Compare X8, 0
	018 JumpIfEqual {27}
	019 Move X8, [X8+32]
	020 Compare X8, 0
	021 JumpIfEqual {27}
	022 Move W0, [X8+60]
	023 Move X20, [X31+16]
	024 Move X19, [X31+24]
	025 Move X30, [X31+32]
	026 Return X0
	027 Call 0x1C17F20

Method: System.Void <CreatePixelValidationMode>b__3(System.Int32 value)

Disassembly:
	0x03A359F0 LDR X3, [X8 + 0x218]
	0x03A359F4 LDR X2, [X8 + 0x220]
	0x03A359F8 LDR X30, [X31], #0x10
	0x03A359FC BR X3
	0x03A35A00 BL 0x1C16F20
	0x03A35A04 LDR X0, [X0 + 0x10]
	0x03A35A08 RET
	0x03A35A0C LDR X0, [X0 + 0x78]
	0x03A35A10 RET
	0x03A35A14 ADD X0, X0, 0x28
	0x03A35A18 RET
	0x03A35A1C ADD X0, X0, 0x30
	0x03A35A20 RET
	0x03A35A24 LDR X0, [X0 + 0x20]
	0x03A35A28 RET
	0x03A35A2C STR X30, [X31 - 0x10]!
	0x03A35A30 LDR X8, [X0 + 0x78]
	0x03A35A34 CBZ X8, 0x3A35A64
	0x03A35A38 LDR X8, [X8 + 0x30]
	0x03A35A3C CBZ X8, 0x3A35A64
	0x03A35A40 LDR W8, [X8 + 0x18]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x9AE000
	006 Move W8, [X21+211]
	007 Move W19, W1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x721000
	014 Move X0, [X0+1136]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+211], W8
	018 Move X8, [X20+16]
	019 Compare X8, 0
	020 JumpIfEqual {30}
	021 Move X8, [X8+32]
	022 Compare X8, 0
	023 JumpIfEqual {30}
	024 Move [X8+60], W19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Move X21, [X31+40]
	029 Return 
	030 Call 0x1C17F20

