Type: UnityEngine.Rendering.Universal.RendererLighting

Method: UnityEngine.Experimental.Rendering.GraphicsFormat GetRenderTextureFormat()

Disassembly:
	0x03A1EECC BL 0x2B10A7C
	0x03A1EED0 TBNZ X0, 0x0, 0x3A1EF18
	0x03A1EED4 LDR X0, [X23]
	0x03A1EED8 LDR W8, [X0 + 0xE0]
	0x03A1EEDC CBNZ W8, 0x3A1EEE4
	0x03A1EEE0 BL 0x1C16DFC
	0x03A1EEE4 AND W2, W21, 0x1
	0x03A1EEE8 MOV X0, X19
	0x03A1EEEC MOV X1, X20
	0x03A1EEF0 BL 0x3A1FA4C
	0x03A1EEF4 STR X0, [X31 + 0x8]
	0x03A1EEF8 MOV X2, X0
	0x03A1EEFC LDR X0, [X19 + 0xF0]
	0x03A1EF00 CBZ X0, 0x3A1EF30
	0x03A1EF04 ADRP X8, 0x736000
	0x03A1EF08 LDR X8, [X8 + 0x778]
	0x03A1EF0C MOV W1, W22
	0x03A1EF10 LDR X3, [X8]
	0x03A1EF14 BL 0x2B0F048
	0x03A1EF18 LDR X0, [X31 + 0x8]
	0x03A1EF1C LDP X20, X19, [X31 + 0x30]
	0x03A1EF20 LDP X22, X21, [X31 + 0x20]
	0x03A1EF24 LDP X30, X23, [X31 + 0x10]
	0x03A1EF28 ADD X31, X31, 0x40
	0x03A1EF2C RET
	0x03A1EF30 BL 0x1C16F20
	0x03A1EF34 STP D13, D12, [X31 - 0x50]!
	0x03A1EF38 STP D11, D10, [X31 + 0x10]
	0x03A1EF3C STP D9, D8, [X31 + 0x20]
	0x03A1EF40 STP X30, X21, [X31 + 0x30]
	0x03A1EF44 STP X20, X19, [X31 + 0x40]
	0x03A1EF48 ADRP X21, 0x9C3000
	0x03A1EF4C LDRB W8, [X21 + 0xFF6]
	0x03A1EF50 MOV X20, X2
	0x03A1EF54 MOV X19, X1
	0x03A1EF58 TBNZ X8, 0x0, 0x3A1EF70
	0x03A1EF5C ADRP X0, 0x736000
	0x03A1EF60 LDR X0, [X0 + 0x658]
	0x03A1EF64 BL 0x1C16CF4
	0x03A1EF68 MOVZ W8, 0x1
	0x03A1EF6C STRB W8, [X21 + 0xFF6]
	0x03A1EF70 CBZ X20, 0x3A1F03C
	0x03A1EF74 ADRP X21, 0x736000
	0x03A1EF78 LDR X21, [X21 + 0x658]
	0x03A1EF7C LDP S11, S10, [X20 + 0x30]
	0x03A1EF80 LDP S9, S12, [X20 + 0x38]
	0x03A1EF84 LDP S13, S8, [X20 + 0x40]
	0x03A1EF88 LDR X0, [X21]
	0x03A1EF8C LDR W8, [X0 + 0xE0]
	0x03A1EF90 CBNZ W8, 0x3A1EF98
	0x03A1EF94 BL 0x1C16DFC
	0x03A1EF98 CBZ X19, 0x3A1F03C
	0x03A1EF9C LDR X8, [X21]
	0x03A1EFA0 LDR V0, [X20 + 0x2C]
	0x03A1EFA4 FMUL S1, S13, S12
	0x03A1EFA8 MOV X0, X19
	0x03A1EFAC LDR X8, [X8 + 0xB8]
	0x03A1EFB0 MOV X2, X31
	0x03A1EFB4 FMUL S9, S9, S1
	0x03A1EFB8 FMUL S10, S10, S1
	0x03A1EFBC LDR W1, [X8 + 0x78]
	0x03A1EFC0 FMUL S11, S11, S1
	0x03A1EFC4 BL 0x3C4CDDC
	0x03A1EFC8 LDR X8, [X21]
	0x03A1EFCC LDR V0, [X20 + 0x100]
	0x03A1EFD0 MOV X0, X19

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x9C4000
	005 Move X19, 0x737000
	006 Move W8, [X20+4075]
	007 Move X19, [X19+1624]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x737000
	013 Move X0, [X0+1624]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+4075], W8
	017 Move X8, [X19]
	018 Move W9, [X8+224]
	019 Compare W9, 0
	020 JumpIfNotEqual {24}
	021 Move X0, X8
	022 Call 0x1C17DFC
	023 Move X8, [X19]
	024 Move X9, [X8+184]
	025 Move W9, [X9+108]
	026 Compare W9, 0
	027 JumpIfNotEqual {71}
	028 Move W0, 74
	029 Move W1, 5
	030 Move X2, X31
	031 Call SystemInfo.IsFormatSupported, X0, X1
	032 Move TEMP, X0
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfNotEqual {44}
	036 Move X8, [X19]
	037 Move W9, [X8+224]
	038 Compare W9, 0
	039 JumpIfNotEqual {43}
	040 Move X0, X8
	041 Call 0x1C17DFC
	042 Move X8, [X19]
	043 Move W9, 74
	044 Move W0, 48
	045 Move W1, 5
	046 Move X2, X31
	047 Call SystemInfo.IsFormatSupported, X0, X1
	048 Move X8, [X19]
	049 Move TEMP, X0
	050 And TEMP, TEMP, 1
	051 Compare TEMP, 1
	052 JumpIfNotEqual {62}
	053 Move W9, [X8+224]
	054 Compare W9, 0
	055 JumpIfNotEqual {59}
	056 Move X0, X8
	057 Call 0x1C17DFC
	058 Move X8, [X19]
	059 Move W9, 48
	060 Move X10, [X8+184]
	061 Move [X10+104], W9
	062 Move W9, [X8+224]
	063 Compare W9, 0
	064 JumpIfNotEqual {68}
	065 Move X0, X8
	066 Call 0x1C17DFC
	067 Move X8, [X19]
	068 Move X9, [X8+184]
	069 Move W10, 1
	070 Move [X9+108], W10
	071 Move W9, [X8+224]
	072 Compare W9, 0
	073 JumpIfNotEqual {77}
	074 Move X0, X8
	075 Call 0x1C17DFC
	076 Move X8, [X19]
	077 Move X8, [X8+184]
	078 Move X20, [X31+16]
	079 Move X19, [X31+24]
	080 Move W0, [X8+104]
	081 Move X30, [X31+32]
	082 Return X0

Method: System.Void CreateNormalMapRenderTexture(UnityEngine.Rendering.Universal.IRenderPass2D pass, UnityEngine.Rendering.Universal.RenderingData renderingData, UnityEngine.Rendering.CommandBuffer cmd, System.Single renderScale)

Disassembly:
	0x03A1EFD4 MOV X2, X31
	0x03A1EFD8 LDR X8, [X8 + 0xB8]
	0x03A1EFDC LDR W1, [X8 + 0x7C]
	0x03A1EFE0 BL 0x3C4CDDC
	0x03A1EFE4 LDR X8, [X21]
	0x03A1EFE8 FMOV S3, 1
	0x03A1EFEC MOV X0, X19
	0x03A1EFF0 MOV V0.16B, V11.16B
	0x03A1EFF4 LDR X8, [X8 + 0xB8]
	0x03A1EFF8 MOV V1.16B, V10.16B
	0x03A1EFFC MOV V2.16B, V9.16B
	0x03A1F000 MOV X2, X31
	0x03A1F004 LDR W1, [X8 + 0x80]
	0x03A1F008 BL 0x3C4CF88
	0x03A1F00C LDR X8, [X21]
	0x03A1F010 MOV X0, X19
	0x03A1F014 MOV V0.16B, V8.16B
	0x03A1F018 LDP X20, X19, [X31 + 0x40]
	0x03A1F01C LDR X8, [X8 + 0xB8]
	0x03A1F020 LDP X30, X21, [X31 + 0x30]
	0x03A1F024 LDP D9, D8, [X31 + 0x20]
	0x03A1F028 LDP D11, D10, [X31 + 0x10]
	0x03A1F02C LDR W1, [X8 + 0x84]
	0x03A1F030 MOV X2, X31
	0x03A1F034 LDP D13, D12, [X31], #0x50
	0x03A1F038 B 0x3C4CDDC
	0x03A1F03C BL 0x1C16F20
	0x03A1F040 SUB X31, X31, 0x1A0
	0x03A1F044 STP D11, D10, [X31 + 0x130]
	0x03A1F048 STP D9, D8, [X31 + 0x140]
	0x03A1F04C STR X29, [X31 + 0x150]
	0x03A1F050 STP X30, X25, [X31 + 0x160]
	0x03A1F054 STP X24, X23, [X31 + 0x170]
	0x03A1F058 STP X22, X21, [X31 + 0x180]
	0x03A1F05C STP X20, X19, [X31 + 0x190]
	0x03A1F060 ADRP X22, 0x9C2000
	0x03A1F064 ADRP X23, 0x735000
	0x03A1F068 LDRB W8, [X22 + 0xFF7]
	0x03A1F06C LDR X23, [X23 + 0x658]
	0x03A1F070 MOV X20, X2
	0x03A1F074 MOV X19, X1
	0x03A1F078 MOV X21, X0
	0x03A1F07C TBNZ X8, 0x0, 0x3A1F0AC
	0x03A1F080 ADRP X0, 0x735000
	0x03A1F084 LDR X0, [X0 + 0x660]
	0x03A1F088 BL 0x1C16CF4
	0x03A1F08C ADRP X0, 0x6D4000
	0x03A1F090 LDR X0, [X0 + 0x598]
	0x03A1F094 BL 0x1C16CF4
	0x03A1F098 ADRP X0, 0x735000
	0x03A1F09C LDR X0, [X0 + 0x658]
	0x03A1F0A0 BL 0x1C16CF4
	0x03A1F0A4 MOVZ W8, 0x1
	0x03A1F0A8 STRB W8, [X22 + 0xFF7]
	0x03A1F0AC LDR X0, [X23]
	0x03A1F0B0 MOVI V0.2D, 0x0
	0x03A1F0B4 STP V0, V0, [X31 + 0x110]
	0x03A1F0B8 STP V0, V0, [X31 + 0xF0]
	0x03A1F0BC LDR W8, [X0 + 0xE0]
	0x03A1F0C0 CBNZ W8, 0x3A1F0C8
	0x03A1F0C4 BL 0x1C16DFC
	0x03A1F0C8 ADD X1, X31, 0xF0
	0x03A1F0CC MOV X0, X20
	0x03A1F0D0 BL 0x3A1F478
	0x03A1F0D4 CBZ X20, 0x3A1F448
	0x03A1F0D8 LDR X8, [X23]
	0x03A1F0DC LDP S10, S11, [X20 + 0xEC]
	0x03A1F0E0 LDP S8, S9, [X20 + 0xE4]
	0x03A1F0E4 MOV X0, X20
	0x03A1F0E8 LDR X8, [X8 + 0xB8]
	0x03A1F0EC MOV X1, X31
	0x03A1F0F0 LDR W22, [X8 + 0x90]
	0x03A1F0F4 BL 0x3C32E90
	0x03A1F0F8 CBZ X0, 0x3A1F448
	0x03A1F0FC MOV X1, X31
	0x03A1F100 BL 0x3C3F58C
	0x03A1F104 CBZ X19, 0x3A1F448
	0x03A1F108 FDIV S3, S10, S11
	0x03A1F10C MOVZ W8, 0x43B40000
	0x03A1F110 FMOV S4, 1
	0x03A1F114 FMOV S5, W8
	0x03A1F118 FSUB S3, S4, S3
	0x03A1F11C FDIV S10, S8, S5
	0x03A1F120 FDIV S8, S9, S5
	0x03A1F124 FDIV S9, S4, S3
	0x03A1F128 FMOV S3, W31
	0x03A1F12C MOV X0, X19
	0x03A1F130 MOV W1, W22
	0x03A1F134 MOV X2, X31
	0x03A1F138 ADD X24, X31, 0x88
	0x03A1F13C BL 0x3C4CED8
	0x03A1F140 LDR X8, [X23]
	0x03A1F144 LDP V0, V1, [X31 + 0xF0]
	0x03A1F148 LDP V2, V3, [X31 + 0x110]
	0x03A1F14C ADD X2, X31, 0xB0
	0x03A1F150 LDR X8, [X8 + 0xB8]
	0x03A1F154 MOV X0, X19
	0x03A1F158 MOV X3, X31
	0x03A1F15C LDR W1, [X8 + 0x94]
	0x03A1F160 STP V0, V1, [X31 + 0xB0]
	0x03A1F164 STP V2, V3, [X31 + 0xD0]
	0x03A1F168 BL 0x3C4D038
	0x03A1F16C LDR X8, [X23]
	0x03A1F170 MOV X0, X19
	0x03A1F174 MOV V0.16B, V9.16B
	0x03A1F178 MOV X2, X31
	0x03A1F17C LDR X8, [X8 + 0xB8]
	0x03A1F180 LDR W1, [X8 + 0x98]
	0x03A1F184 BL 0x3C4CDDC
	0x03A1F188 LDR X8, [X23]
	0x03A1F18C MOV X0, X19
	0x03A1F190 MOV V0.16B, V8.16B
	0x03A1F194 MOV X2, X31
	0x03A1F198 LDR X8, [X8 + 0xB8]
	0x03A1F19C LDR W1, [X8 + 0x9C]
	0x03A1F1A0 BL 0x3C4CDDC
	0x03A1F1A4 LDR X8, [X23]
	0x03A1F1A8 FSUB S0, S8, S10
	0x03A1F1AC FMOV S1, 1
	0x03A1F1B0 FDIV S0, S1, S0
	0x03A1F1B4 LDR X8, [X8 + 0xB8]
	0x03A1F1B8 MOV X0, X19
	0x03A1F1BC MOV X2, X31
	0x03A1F1C0 LDR W1, [X8 + 0xA0]
	0x03A1F1C4 BL 0x3C4CDDC
	0x03A1F1C8 LDR X8, [X23]
	0x03A1F1CC LDR X8, [X8 + 0xB8]
	0x03A1F1D0 LDR W22, [X8 + 0xA4]
	0x03A1F1D4 BL 0x3A1DAA0
	0x03A1F1D8 ADD X8, X31, 0x88
	0x03A1F1DC MOV X1, X31
	0x03A1F1E0 BL 0x3C4B274
	0x03A1F1E4 LDP V0, V1, [X24]
	0x03A1F1E8 LDR X8, [X31 + 0xA8]
	0x03A1F1EC ADD X2, X31, 0x60
	0x03A1F1F0 MOV X0, X19
	0x03A1F1F4 MOV W1, W22
	0x03A1F1F8 MOV X3, X31
	0x03A1F1FC STP V0, V1, [X31 + 0x60]
	0x03A1F200 STR X8, [X31 + 0x80]
	0x03A1F204 BL 0x3C4FCFC
	0x03A1F208 CBZ X21, 0x3A1F448
	0x03A1F20C LDR X9, [X23]
	0x03A1F210 ADRP X11, 0x735000
	0x03A1F214 LDR X8, [X21]
	0x03A1F218 LDR X10, [X9 + 0xB8]
	0x03A1F21C LDR X11, [X11 + 0x660]
	0x03A1F220 LDRH W9, [X8 + 0x12E]
	0x03A1F224 LDR W22, [X10 + 0x8C]
	0x03A1F228 LDR X1, [X11]
	0x03A1F22C CBZ X9, 0x3A1F250
	0x03A1F230 LDR X10, [X8 + 0xB0]
	0x03A1F234 ADD X10, X10, 0x8
	0x03A1F238 LDUR X11, [X10 - 0x8]
	0x03A1F23C CMP X11, X1
	0x03A1F240 B.EQ 0x3A1F260
	0x03A1F244 SUBS X9, X9, 0x1
	0x03A1F248 ADD X10, X10, 0x10
	0x03A1F24C B.NE 0x3A1F238
	0x03A1F250 MOV X0, X21
	0x03A1F254 MOV W2, W31
	0x03A1F258 BL 0x1C5C788
	0x03A1F25C B 0x3A1F26C
	0x03A1F260 LDRSW X9, [X10]
	0x03A1F264 ADD X8, X8, X9, 0x4, LSL
	0x03A1F268 ADD X0, X8, 0x138
	0x03A1F26C LDP X8, X1, [X0]
	0x03A1F270 MOV X0, X21
	0x03A1F274 BLR X8
	0x03A1F278 CBZ X0, 0x3A1F448
	0x03A1F27C LDR X0, [X0 + 0xE8]
	0x03A1F280 ADRP X25, 0x6D4000
	0x03A1F284 LDR X25, [X25 + 0x598]
	0x03A1F288 ADD X8, X31, 0x88
	0x03A1F28C MOV X1, X31
	0x03A1F290 BL 0x3C4B274
	0x03A1F294 LDP V0, V1, [X24]
	0x03A1F298 LDR X8, [X31 + 0xA8]
	0x03A1F29C ADD X2, X31, 0x30
	0x03A1F2A0 MOV X0, X19
	0x03A1F2A4 MOV W1, W22
	0x03A1F2A8 MOV X3, X31
	0x03A1F2AC STP V0, V1, [X31 + 0x30]
	0x03A1F2B0 STR X8, [X31 + 0x50]
	0x03A1F2B4 BL 0x3C4FCFC
	0x03A1F2B8 LDR X8, [X23]
	0x03A1F2BC LDR V0, [X20 + 0x2C]
	0x03A1F2C0 MOV X0, X19
	0x03A1F2C4 MOV X2, X31
	0x03A1F2C8 LDR X8, [X8 + 0xB8]
	0x03A1F2CC LDR W1, [X8 + 0x78]
	0x03A1F2D0 BL 0x3C4CDDC
	0x03A1F2D4 LDR X8, [X23]
	0x03A1F2D8 FMOV S0, 1
	0x03A1F2DC FCMP S10, S0
	0x03A1F2E0 FMOV S1, W31
	0x03A1F2E4 LDR X8, [X8 + 0xB8]
	0x03A1F2E8 FCSEL S0, S0, S1, EQ
	0x03A1F2EC MOV X0, X19
	0x03A1F2F0 MOV X2, X31
	0x03A1F2F4 LDR W1, [X8 + 0xA8]
	0x03A1F2F8 BL 0x3C4CDDC
	0x03A1F2FC LDR X0, [X23]
	0x03A1F300 LDR W8, [X0 + 0xE0]
	0x03A1F304 CBNZ W8, 0x3A1F310
	0x03A1F308 BL 0x1C16DFC
	0x03A1F30C LDR X0, [X23]
	0x03A1F310 LDR X8, [X0 + 0xB8]
	0x03A1F314 LDR V0, [X20 + 0x74]
	0x03A1F318 MOV X0, X19
	0x03A1F31C MOV X2, X31
	0x03A1F320 LDR W1, [X8 + 0xAC]
	0x03A1F324 BL 0x3C4CDDC
	0x03A1F328 LDR W8, [X20 + 0x24]
	0x03A1F32C LDR X0, [X25]
	0x03A1F330 MOVZ W9, 0x58
	0x03A1F334 MOVZ W10, 0x60
	0x03A1F338 CMP W8, 0x3
	0x03A1F33C CSEL X8, X10, X9, EQ
	0x03A1F340 LDR W9, [X0 + 0xE0]
	0x03A1F344 LDR X21, [X20, X8, LSL]
	0x03A1F348 CBNZ W9, 0x3A1F350
	0x03A1F34C BL 0x1C16DFC
	0x03A1F350 MOV X0, X21
	0x03A1F354 MOV X1, X31
	0x03A1F358 MOV X2, X31
	0x03A1F35C BL 0x3C354F8
	0x03A1F360 TBZ X0, 0x0, 0x3A1F424
	0x03A1F364 LDR W8, [X20 + 0x24]
	0x03A1F368 MOVZ W9, 0x58
	0x03A1F36C CMP W8, 0x3
	0x03A1F370 MOVZ W8, 0x60
	0x03A1F374 CSEL X8, X8, X9, EQ
	0x03A1F378 LDR X0, [X20, X8, LSL]
	0x03A1F37C CBZ X0, 0x3A1F448
	0x03A1F380 MOV X1, X31
	0x03A1F384 BL 0x3C41990
	0x03A1F388 LDR X8, [X25]
	0x03A1F38C MOV X21, X0
	0x03A1F390 LDR W9, [X8 + 0xE0]
	0x03A1F394 CBNZ W9, 0x3A1F3A0
	0x03A1F398 MOV X0, X8
	0x03A1F39C BL 0x1C16DFC
	0x03A1F3A0 MOV X0, X21
	0x03A1F3A4 MOV X1, X31
	0x03A1F3A8 MOV X2, X31
	0x03A1F3AC BL 0x3C354F8
	0x03A1F3B0 TBZ X0, 0x0, 0x3A1F424
	0x03A1F3B4 LDR X0, [X23]
	0x03A1F3B8 LDR W8, [X0 + 0xE0]
	0x03A1F3BC CBNZ W8, 0x3A1F3C4
	0x03A1F3C0 BL 0x1C16DFC
	0x03A1F3C4 LDR W8, [X20 + 0x24]
	0x03A1F3C8 MOVZ W9, 0x58
	0x03A1F3CC CMP W8, 0x3
	0x03A1F3D0 MOVZ W8, 0x60
	0x03A1F3D4 CSEL X8, X8, X9, EQ
	0x03A1F3D8 LDR X0, [X20, X8, LSL]
	0x03A1F3DC CBZ X0, 0x3A1F448
	0x03A1F3E0 LDR X8, [X23]
	0x03A1F3E4 MOV X1, X31
	0x03A1F3E8 LDR X8, [X8 + 0xB8]
	0x03A1F3EC LDR W20, [X8 + 0xB0]
	0x03A1F3F0 BL 0x3C41990
	0x03A1F3F4 ADD X8, X31, 0x88
	0x03A1F3F8 MOV X1, X31
	0x03A1F3FC BL 0x3C4B274
	0x03A1F400 LDP V0, V1, [X24]
	0x03A1F404 LDR X8, [X31 + 0xA8]
	0x03A1F408 ADD X2, X31, 0x0
	0x03A1F40C MOV X0, X19
	0x03A1F410 MOV W1, W20

ISIL:
	001 Subtract X31, X31, 256
	002 Move [X31+192], D8
	003 Move [X31+208], X30
	004 Move [X31+216], X23
	005 Move [X31+224], X22
	006 Move [X31+232], X21
	007 Move [X31+240], X20
	008 Move [X31+248], X19
	009 Move X22, 0x9C4000
	010 Move W8, [X22+4076]
	011 Move V8, V0
	012 Move X19, X2
	013 Move X21, X1
	014 Move X20, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {27}
	019 Move X0, 0x736000
	020 Move X0, [X0+1632]
	021 Call 0x1C17CF4
	022 Move X0, 0x736000
	023 Move X0, [X0+1624]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X22+4076], W8
	027 NotImplemented "Instruction MOVI not yet implemented."
	028 Move [X31+176], W31
	029 Move [X31+144], V0
	030 Move [X31+152], V0
	031 Move [X31+8], V0
	032 Compare X20, 0
	033 JumpIfEqual {293}
	034 Move X22, 0x736000
	035 Move X8, [X20]
	036 Move X22, [X22+1632]
	037 NotImplemented "Instruction LDRH not yet implemented."
	038 Move X1, [X22]
	039 Compare X9, 0
	040 JumpIfEqual {47}
	041 Move X10, [X8+176]
	042 Add X10, X10, 8
	043 NotImplemented "Instruction LDUR not yet implemented."
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Subtract X9, X9, 1
	046 Add X10, X10, 16
	047 Move X0, X20
	048 Move W2, W31
	049 Call 0x1C5D788
	050 NotImplemented "Instruction LDRSW not yet implemented."
	051 Add X8, X8, X9
	052 Add X0, X8, 312
	053 Move X8, [X0]
	054 Move X1, [X0+8]
	055 Move X0, X20
	056 NotImplemented "Instruction BLR not yet implemented."
	057 Compare X0, 0
	058 JumpIfEqual {293}
	059 Move V0, [X0+292]
	060 NotImplemented "Instruction FCMP not yet implemented."
	061 Move X8, [X20]
	062 Move X1, [X22]
	063 NotImplemented "Instruction LDRH not yet implemented."
	064 Compare X9, 0
	065 JumpIfEqual {72}
	066 Move X10, [X8+176]
	067 Add X10, X10, 8
	068 NotImplemented "Instruction LDUR not yet implemented."
	069 NotImplemented "Instruction CMP not yet implemented."
	070 Subtract X9, X9, 1
	071 Add X10, X10, 16
	072 Move X0, X20
	073 Move W2, W31
	074 Call 0x1C5D788
	075 NotImplemented "Instruction LDRSW not yet implemented."
	076 Add X8, X8, X9
	077 Add X0, X8, 312
	078 Move X8, [X0]
	079 Move X1, [X0+8]
	080 Move X0, X20
	081 NotImplemented "Instruction BLR not yet implemented."
	082 Compare X0, 0
	083 JumpIfEqual {293}
	084 Move W8, [X0+288]
	085 Compare W8, 0
	086 JumpIfEqual {116}
	087 Move X8, [X20]
	088 Move X1, [X22]
	089 NotImplemented "Instruction LDRH not yet implemented."
	090 Compare X9, 0
	091 JumpIfEqual {98}
	092 Move X10, [X8+176]
	093 Add X10, X10, 8
	094 NotImplemented "Instruction LDUR not yet implemented."
	095 NotImplemented "Instruction CMP not yet implemented."
	096 Subtract X9, X9, 1
	097 Add X10, X10, 16
	098 Move X0, X20
	099 Move W2, W31
	100 Call 0x1C5D788
	101 NotImplemented "Instruction LDRSW not yet implemented."
	102 Add X8, X8, X9
	103 Add X0, X8, 312
	104 Move X8, [X0]
	105 Move X1, [X0+8]
	106 Move X0, X20
	107 NotImplemented "Instruction BLR not yet implemented."
	108 Compare X0, 0
	109 JumpIfEqual {293}
	110 Compare X19, 0
	111 JumpIfEqual {293}
	112 Move W1, [X0+304]
	113 Move X0, X19
	114 Move X2, X31
	115 Call CommandBuffer.ReleaseTemporaryRT, X0, X1
	116 Move X8, [X20]
	117 Move X1, [X22]
	118 NotImplemented "Instruction LDRH not yet implemented."
	119 Compare X9, 0
	120 JumpIfEqual {127}
	121 Move X10, [X8+176]
	122 Add X10, X10, 8
	123 NotImplemented "Instruction LDUR not yet implemented."
	124 NotImplemented "Instruction CMP not yet implemented."
	125 Subtract X9, X9, 1
	126 Add X10, X10, 16
	127 Move X0, X20
	128 Move W2, W31
	129 Call 0x1C5D788
	130 NotImplemented "Instruction LDRSW not yet implemented."
	131 Add X8, X8, X9
	132 Add X0, X8, 312
	133 Move X8, [X0]
	134 Move X1, [X0+8]
	135 Move X0, X20
	136 NotImplemented "Instruction BLR not yet implemented."
	137 Compare X0, 0
	138 JumpIfEqual {293}
	139 Move W8, 1
	140 Move [X0+288], W8
	141 Move X8, [X20]
	142 Move X1, [X22]
	143 NotImplemented "Instruction LDRH not yet implemented."
	144 Compare X9, 0
	145 JumpIfEqual {152}
	146 Move X10, [X8+176]
	147 Add X10, X10, 8
	148 NotImplemented "Instruction LDUR not yet implemented."
	149 NotImplemented "Instruction CMP not yet implemented."
	150 Subtract X9, X9, 1
	151 Add X10, X10, 16
	152 Move X0, X20
	153 Move W2, W31
	154 Call 0x1C5D788
	155 NotImplemented "Instruction LDRSW not yet implemented."
	156 Add X8, X8, X9
	157 Add X0, X8, 312
	158 Move X8, [X0]
	159 Move X1, [X0+8]
	160 Move X0, X20
	161 NotImplemented "Instruction BLR not yet implemented."
	162 Compare X0, 0
	163 JumpIfEqual {293}
	164 Move X23, 0x736000
	165 Move X23, [X23+1624]
	166 Move [X0+292], S8
	167 Move S0, [X21+240]
	168 Move S1, [X21+244]
	169 Move W8, 0x7F800000
	170 Move S2, W8
	171 Move W9, 0x80000000
	172 NotImplemented "Instruction SCVTF not yet implemented."
	173 NotImplemented "Instruction SCVTF not yet implemented."
	174 Multiply S0, S0, S8
	175 Multiply S1, S1, S8
	176 NotImplemented "Instruction FCVTZS not yet implemented."
	177 NotImplemented "Instruction FCMP not yet implemented."
	178 NotImplemented "Instruction FCVTZS not yet implemented."
	179 NotImplemented "Instruction CSEL not yet implemented."
	180 NotImplemented "Instruction FCMP not yet implemented."
	181 NotImplemented "Instruction CSEL not yet implemented."
	182 Add X0, X31, 128
	183 Move X3, X31
	184 Call RenderTextureDescriptor..ctor, X0, X1, X2
	185 Move X0, [X23]
	186 Move W8, [X0+224]
	187 Compare W8, 0
	188 JumpIfNotEqual {190}
	189 Call 0x1C17DFC
	190 Call RendererLighting.GetRenderTextureFormat
	191 Move W1, W0
	192 Add X0, X31, 128
	193 Move X2, X31
	194 Call RenderTextureDescriptor.set_graphicsFormat, X0, X1
	195 Add X0, X31, 128
	196 Move W1, W31
	197 Move X2, X31
	198 Call RenderTextureDescriptor.set_useMipMap, X0, X1
	199 Add X0, X31, 128
	200 Move W1, W31
	201 Move X2, X31
	202 Call RenderTextureDescriptor.set_autoGenerateMips, X0, X1
	203 Move X8, [X20]
	204 Move X1, [X22]
	205 NotImplemented "Instruction LDRH not yet implemented."
	206 Compare X9, 0
	207 JumpIfEqual {214}
	208 Move X10, [X8+176]
	209 Add X10, X10, 8
	210 NotImplemented "Instruction LDUR not yet implemented."
	211 NotImplemented "Instruction CMP not yet implemented."
	212 Subtract X9, X9, 1
	213 Add X10, X10, 16
	214 Move X0, X20
	215 Move W2, W31
	216 Call 0x1C5D788
	217 NotImplemented "Instruction LDRSW not yet implemented."
	218 Add X8, X8, X9
	219 Add X0, X8, 312
	220 Move X8, [X0]
	221 Move X1, [X0+8]
	222 Move X0, X20
	223 NotImplemented "Instruction BLR not yet implemented."
	224 Compare X0, 0
	225 JumpIfEqual {293}
	226 Move W8, [X0+96]
	227 Add X0, X31, 128
	228 Move X2, X31
	229 Move W1, W8
	230 ShiftRight W1, 27
	231 And W1, W1, 0x3FFFFFF
	232 Call RenderTextureDescriptor.set_depthBufferBits, X0, X1
	233 Move W8, [X21+248]
	234 Move W9, 2
	235 Move [X31+160], W9
	236 Move X1, [X22]
	237 Move [X31+136], W8
	238 Move X8, [X20]
	239 NotImplemented "Instruction LDRH not yet implemented."
	240 Compare X9, 0
	241 JumpIfEqual {248}
	242 Move X10, [X8+176]
	243 Add X10, X10, 8
	244 NotImplemented "Instruction LDUR not yet implemented."
	245 NotImplemented "Instruction CMP not yet implemented."
	246 Subtract X9, X9, 1
	247 Add X10, X10, 16
	248 Move X0, X20
	249 Move W2, W31
	250 Call 0x1C5D788
	251 NotImplemented "Instruction LDRSW not yet implemented."
	252 Add X8, X8, X9
	253 Add X0, X8, 312
	254 Move X8, [X0]
	255 Move X1, [X0+8]
	256 Move X0, X20
	257 NotImplemented "Instruction BLR not yet implemented."
	258 Compare X0, 0
	259 JumpIfEqual {293}
	260 Move W1, [X0+304]
	261 Move V0, [X31+128]
	262 Move V1, [X31+144]
	263 Move V2, [X31+10]
	264 Move W8, [X31+176]
	265 Move [X31+64], V0
	266 Move [X31+72], V1
	267 Move [X31+6], V2
	268 Move [X31+112], W8
	269 Compare X19, 0
	270 JumpIfEqual {293}
	271 Move V0, [X31+64]
	272 Move V1, [X31+80]
	273 Move V2, [X31+6]
	274 Move W8, [X31+112]
	275 Add X2, X31, 0
	276 Move W3, 1
	277 Move X0, X19
	278 Move X4, X31
	279 Move [X31], V0
	280 Move [X31+8], V1
	281 Move [X31+2], V2
	282 Move [X31+48], W8
	283 Call CommandBuffer.GetTemporaryRT, X0, X1, X2, X3
	284 Move X20, [X31+240]
	285 Move X19, [X31+248]
	286 Move X22, [X31+224]
	287 Move X21, [X31+232]
	288 Move X30, [X31+208]
	289 Move X23, [X31+216]
	290 Move V8, [X31+192]
	291 Add X31, X31, 256
	292 Return 
	293 Call 0x1C17F20

Method: UnityEngine.RenderTextureDescriptor GetBlendStyleRenderTextureDesc(UnityEngine.Rendering.Universal.IRenderPass2D pass, UnityEngine.Rendering.Universal.RenderingData renderingData)

Disassembly:
	0x03A1D198 LDP X30, X23, [X31 + 0x10]
	0x03A1D19C ADD X31, X31, 0x40
	0x03A1D1A0 RET
	0x03A1D1A4 B 0x3A1D1AC
	0x03A1D1A8 B 0x3A1D1AC
	0x03A1D1AC MOV X19, X0
	0x03A1D1B0 CMP W1, 0x1
	0x03A1D1B4 B.NE 0x3A1D1E0
	0x03A1D1B8 MOV X0, X19
	0x03A1D1BC BL 0x3EB1AD0
	0x03A1D1C0 LDR X20, [X0]
	0x03A1D1C4 BL 0x3EB1AE0
	0x03A1D1C8 ADD X0, X31, 0x8
	0x03A1D1CC MOV X1, X31
	0x03A1D1D0 BL 0x39B1DB4
	0x03A1D1D4 CBZ X20, 0x3A1D190
	0x03A1D1D8 MOV X0, X20
	0x03A1D1DC BL 0x1C16F18
	0x03A1D1E0 MOV X20, X31
	0x03A1D1E4 B 0x3A1D1EC
	0x03A1D1E8 MOV X19, X0
	0x03A1D1EC ADD X0, X31, 0x8
	0x03A1D1F0 MOV X1, X31
	0x03A1D1F4 BL 0x39B1DB4
	0x03A1D1F8 CBNZ X20, 0x3A1D204
	0x03A1D1FC MOV X0, X19
	0x03A1D200 BL 0x1D2C690
	0x03A1D204 MOV X0, X20
	0x03A1D208 BL 0x1C16F18
	0x03A1D20C BL 0x1990590
	0x03A1D210 STR X30, [X31 - 0x30]!
	0x03A1D214 STP X22, X21, [X31 + 0x10]
	0x03A1D218 STP X20, X19, [X31 + 0x20]
	0x03A1D21C ADRP X21, 0x9C4000
	0x03A1D220 ADRP X22, 0x733000
	0x03A1D224 ADRP X19, 0x737000
	0x03A1D228 ADRP X20, 0x737000
	0x03A1D22C LDRB W8, [X21 + 0xFE2]
	0x03A1D230 LDR X22, [X22 + 0x598]
	0x03A1D234 LDR X19, [X19 + 0x748]
	0x03A1D238 LDR X20, [X20 + 0x738]
	0x03A1D23C TBNZ X8, 0x0, 0x3A1D26C
	0x03A1D240 ADRP X0, 0x733000
	0x03A1D244 LDR X0, [X0 + 0x598]
	0x03A1D248 BL 0x1C16CF4
	0x03A1D24C ADRP X0, 0x737000
	0x03A1D250 LDR X0, [X0 + 0x738]
	0x03A1D254 BL 0x1C16CF4
	0x03A1D258 ADRP X0, 0x737000
	0x03A1D25C LDR X0, [X0 + 0x748]
	0x03A1D260 BL 0x1C16CF4
	0x03A1D264 MOVZ W8, 0x1
	0x03A1D268 STRB W8, [X21 + 0xFE2]
	0x03A1D26C LDR X0, [X22]
	0x03A1D270 BL 0x1C16F10
	0x03A1D274 LDR X1, [X19]
	0x03A1D278 MOV X2, X31
	0x03A1D27C MOV X19, X0
	0x03A1D280 BL 0x39B19AC
	0x03A1D284 LDR X8, [X20]
	0x03A1D288 LDP X22, X21, [X31 + 0x10]
	0x03A1D28C LDR X8, [X8 + 0xB8]
	0x03A1D290 STR X19, [X8]
	0x03A1D294 LDP X20, X19, [X31 + 0x20]
	0x03A1D298 LDR X30, [X31], #0x30
	0x03A1D29C RET
	0x03A1D2A0 SUB X31, X31, 0x50
	0x03A1D2A4 STP X30, X25, [X31 + 0x10]
	0x03A1D2A8 STP X24, X23, [X31 + 0x20]
	0x03A1D2AC STP X22, X21, [X31 + 0x30]
	0x03A1D2B0 STP X20, X19, [X31 + 0x40]
	0x03A1D2B4 ADRP X21, 0x9C4000
	0x03A1D2B8 LDRB W8, [X21 + 0xFE3]
	0x03A1D2BC MOV W19, W1
	0x03A1D2C0 MOV X20, X0
	0x03A1D2C4 TBNZ X8, 0x0, 0x3A1D2E8
	0x03A1D2C8 ADRP X0, 0x6D6000
	0x03A1D2CC LDR X0, [X0 + 0x758]
	0x03A1D2D0 BL 0x1C16CF4
	0x03A1D2D4 ADRP X0, 0x737000
	0x03A1D2D8 LDR X0, [X0 + 0x750]
	0x03A1D2DC BL 0x1C16CF4
	0x03A1D2E0 MOVZ W8, 0x1
	0x03A1D2E4 STRB W8, [X21 + 0xFE3]
	0x03A1D2E8 ADRP X22, 0x6D6000
	0x03A1D2EC ADRP X23, 0x737000
	0x03A1D2F0 LDR X22, [X22 + 0x758]
	0x03A1D2F4 LDR X23, [X23 + 0x750]
	0x03A1D2F8 MOV X21, X31
	0x03A1D2FC ADD X24, X20, 0x30
	0x03A1D300 MOVN X25, 0xF
	0x03A1D304 STRB W31, [X24, X21, LSL]
	0x03A1D308 LDR X0, [X22]
	0x03A1D30C ADD X1, X31, 0xC
	0x03A1D310 STR W19, [X31 + 0xC]
	0x03A1D314 BL 0x1C16E04
	0x03A1D318 MOV X20, X0
	0x03A1D31C LDR X0, [X22]
	0x03A1D320 ADD X1, X31, 0x8
	0x03A1D324 STR W21, [X31 + 0x8]
	0x03A1D328 BL 0x1C16E04
	0x03A1D32C LDR X8, [X23]
	0x03A1D330 MOV X2, X0
	0x03A1D334 MOV X1, X20
	0x03A1D338 MOV X3, X31
	0x03A1D33C MOV X0, X8
	0x03A1D340 BL 0x3227BD4
	0x03A1D344 MOV X1, X31
	0x03A1D348 BL 0x3C124EC
	0x03A1D34C STR W0, [X24, X25, LSL]
	0x03A1D350 ADDS X25, X25, 0x4

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+64], X30
	003 Move [X31+80], X22
	004 Move [X31+88], X21
	005 Move [X31+96], X20
	006 Move [X31+104], X19
	007 Move X22, 0x9C5000
	008 Move W9, [X22+4077]
	009 Move X20, X1
	010 Move X21, X0
	011 Move X19, X8
	012 Move TEMP, X9
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x738000
	017 Move X0, [X0+1632]
	018 Call 0x1C17CF4
	019 Move X0, 0x738000
	020 Move X0, [X0+1624]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+4077], W8
	024 NotImplemented "Instruction MOVI not yet implemented."
	025 Move [X31+48], W31
	026 Move [X31+16], V0
	027 Move [X31+24], V0
	028 Move [X31], V0
	029 Compare X21, 0
	030 JumpIfEqual {124}
	031 Move X10, 0x738000
	032 Move X8, [X21]
	033 Move X10, [X10+1632]
	034 NotImplemented "Instruction LDRH not yet implemented."
	035 Move X1, [X10]
	036 Compare X9, 0
	037 JumpIfEqual {44}
	038 Move X10, [X8+176]
	039 Add X10, X10, 8
	040 NotImplemented "Instruction LDUR not yet implemented."
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Subtract X9, X9, 1
	043 Add X10, X10, 16
	044 Move X0, X21
	045 Move W2, W31
	046 Call 0x1C5D788
	047 NotImplemented "Instruction LDRSW not yet implemented."
	048 Add X8, X8, X9
	049 Add X0, X8, 312
	050 Move X8, [X0]
	051 Move X1, [X0+8]
	052 Move X0, X21
	053 NotImplemented "Instruction BLR not yet implemented."
	054 Compare X0, 0
	055 JumpIfEqual {124}
	056 Move X8, -49487872
	057 Move V0, [X0+80]
	058 Move V1, [X8+816]
	059 Move S2, 1
	060 Move X21, 0x738000
	061 NotImplemented "Instruction FMIN not yet implemented."
	062 NotImplemented "Instruction FCMP not yet implemented."
	063 Move X21, [X21+1624]
	064 NotImplemented "Instruction FCSEL not yet implemented."
	065 Move S1, [X20+240]
	066 Move S2, [X20+244]
	067 Move W8, 0x7F800000
	068 Move W9, 0x80000000
	069 Add X0, X31, 0
	070 NotImplemented "Instruction SCVTF not yet implemented."
	071 NotImplemented "Instruction SCVTF not yet implemented."
	072 Multiply S1, S0, S1
	073 Multiply S0, S0, S2
	074 Move S2, W8
	075 NotImplemented "Instruction FCVTZS not yet implemented."
	076 NotImplemented "Instruction FCMP not yet implemented."
	077 NotImplemented "Instruction FCVTZS not yet implemented."
	078 NotImplemented "Instruction CSEL not yet implemented."
	079 NotImplemented "Instruction FCMP not yet implemented."
	080 NotImplemented "Instruction CSEL not yet implemented."
	081 Move X3, X31
	082 Call RenderTextureDescriptor..ctor, X0, X1, X2
	083 Move X0, [X21]
	084 Move W8, [X0+224]
	085 Compare W8, 0
	086 JumpIfNotEqual {88}
	087 Call 0x1C17DFC
	088 Call RendererLighting.GetRenderTextureFormat
	089 Move W1, W0
	090 Add X0, X31, 0
	091 Move X2, X31
	092 Call RenderTextureDescriptor.set_graphicsFormat, X0, X1
	093 Add X0, X31, 0
	094 Move W1, W31
	095 Move X2, X31
	096 Call RenderTextureDescriptor.set_useMipMap, X0, X1
	097 Add X0, X31, 0
	098 Move W1, W31
	099 Move X2, X31
	100 Call RenderTextureDescriptor.set_autoGenerateMips, X0, X1
	101 Add X0, X31, 0
	102 Move W1, W31
	103 Move X2, X31
	104 Call RenderTextureDescriptor.set_depthBufferBits, X0, X1
	105 Move W8, 1
	106 Move W9, 2
	107 Move [X31+8], W8
	108 Move [X31+32], W9
	109 Move W10, [X31+48]
	110 Move V1, [X31+16]
	111 Move V0, [X31+32]
	112 Move V2, [X31]
	113 Move X22, [X31+80]
	114 Move X21, [X31+88]
	115 Move [X19+48], W10
	116 Move [X19+16], V1
	117 Move [X19+24], V0
	118 Move [X19], V2
	119 Move X20, [X31+96]
	120 Move X19, [X31+104]
	121 Move X30, [X31+64]
	122 Add X31, X31, 112
	123 Return X0
	124 Call 0x1C17F20

Method: System.Void CreateCameraSortingLayerRenderTexture(UnityEngine.Rendering.Universal.IRenderPass2D pass, UnityEngine.Rendering.Universal.RenderingData renderingData, UnityEngine.Rendering.CommandBuffer cmd, UnityEngine.Rendering.Universal.Downsampling downsamplingMethod)

Disassembly:
	0x03A195CC LDR X22, [X31 + 0x48]
	0x03A195D0 MOV X1, X31
	0x03A195D4 BL 0x3C5AE60
	0x03A195D8 ADD W1, W27, 0x1
	0x03A195DC MOV W2, W0
	0x03A195E0 STR W31, [X31 + 0x1640]
	0x03A195E4 LDR X20, [X31 + 0x90]
	0x03A195E8 ADD X0, X31, 0x1000
	0x03A195EC ADD X0, X0, 0x640
	0x03A195F0 MOV X3, X31
	0x03A195F4 BL 0x3C5AE4C
	0x03A195F8 LDR W8, [X31 + 0x1640]
	0x03A195FC AND X9, X22, 0x0
	0x03A19600 ORR X22, X9, X8, 0x0
	0x03A19604 MOV X0, X20
	0x03A19608 MOV X1, X22
	0x03A1960C MOV X2, X31
	0x03A19610 BL 0x3C54044
	0x03A19614 LDR X1, [X31 + 0x78]
	0x03A19618 STR X22, [X31 + 0x48]
	0x03A1961C LDR X22, [X31 + 0x1318]
	0x03A19620 ADD X0, X31, 0x1000
	0x03A19624 ADD X0, X0, 0x3E8
	0x03A19628 MOVZ W2, 0xC4
	0x03A1962C BL 0x3EB1AC0
	0x03A19630 LDR X3, [X31 + 0xA0]
	0x03A19634 LDR X27, [X31 + 0xB8]
	0x03A19638 ADD X5, X31, 0x1000
	0x03A1963C ADD X5, X5, 0x3E8
	0x03A19640 MOV X1, X22
	0x03A19644 MOV X2, X19
	0x03A19648 MOV X4, X20
	0x03A1964C BL 0x3A18A38
	0x03A19650 B 0x3A19740
	0x03A19654 LDR X20, [X31 + 0xA8]
	0x03A19658 MOV X1, X31
	0x03A1965C MOV X0, X20
	0x03A19660 BL 0x3C5AE58
	0x03A19664 MOV W23, W0
	0x03A19668 MOV X0, X20
	0x03A1966C MOV X1, X31
	0x03A19670 BL 0x3C5AE60
	0x03A19674 MOV W2, W0
	0x03A19678 STR W31, [X31 + 0xFE0]
	0x03A1967C LDR X20, [X31 + 0x90]
	0x03A19680 ADD X0, X31, 0xFE0
	0x03A19684 MOV W1, W23
	0x03A19688 MOV X3, X31
	0x03A1968C BL 0x3C5AE4C
	0x03A19690 LDR X9, [X31 + 0x88]
	0x03A19694 LDR W8, [X31 + 0xFE0]
	0x03A19698 AND X9, X9, 0x0
	0x03A1969C ORR X1, X9, X8, 0x0
	0x03A196A0 MOV X0, X20
	0x03A196A4 MOV X2, X31
	0x03A196A8 STR X1, [X31 + 0x88]
	0x03A196AC BL 0x3C54044
	0x03A196B0 LDR X1, [X31 + 0x78]
	0x03A196B4 LDR X23, [X31 + 0x1318]
	0x03A196B8 ADD X0, X31, 0x1000
	0x03A196BC ADD X0, X0, 0x320
	0x03A196C0 MOVZ W2, 0xC4
	0x03A196C4 BL 0x3EB1AC0
	0x03A196C8 LDR X3, [X31 + 0xA0]
	0x03A196CC ADD X5, X31, 0x1000
	0x03A196D0 ADD X5, X5, 0x320
	0x03A196D4 MOV X1, X23
	0x03A196D8 MOV X2, X19
	0x03A196DC MOV X4, X20
	0x03A196E0 BL 0x3A18A38
	0x03A196E4 LDR X0, [X31 + 0xA8]
	0x03A196E8 MOV X1, X31
	0x03A196EC BL 0x3C5AE60
	0x03A196F0 AND W8, W27, 0xFFFF
	0x03A196F4 CMP W8, W0, UXTH
	0x03A196F8 B.NE 0x3A1973C
	0x03A196FC LDR X27, [X31 + 0xB8]
	0x03A19700 LDR X8, [X27 + 0xF0]
	0x03A19704 CBZ X8, 0x3A19AB0
	0x03A19708 LDRB W8, [X8 + 0x61]
	0x03A1970C CBZ W8, 0x3A19740
	0x03A19710 LDR X1, [X31 + 0xA0]
	0x03A19714 LDR X23, [X31 + 0x1318]
	0x03A19718 ADD X0, X31, 0x3D0
	0x03A1971C MOVZ W2, 0x2B8
	0x03A19720 BL 0x3EB1AC0
	0x03A19724 ADD X2, X31, 0x3D0
	0x03A19728 MOV X0, X27
	0x03A1972C MOV X1, X23
	0x03A19730 MOV W3, W22
	0x03A19734 BL 0x3A18348
	0x03A19738 B 0x3A19740
	0x03A1973C LDR X27, [X31 + 0xB8]
	0x03A19740 LDR W8, [X31 + 0x74]
	0x03A19744 MOV X22, X31
	0x03A19748 MOVZ W20, 0x2A
	0x03A1974C CBZ W8, 0x3A19A0C
	0x03A19750 LDR W8, [X31 + 0x1724]
	0x03A19754 CMP W8, 0x1
	0x03A19758 B.LT 0x3A19A0C
	0x03A1975C ADRP X8, 0x73B000
	0x03A19760 LDR X8, [X8 + 0x690]
	0x03A19764 LDR X22, [X8]
	0x03A19768 MOV X0, X19
	0x03A1976C MOV X1, X22
	0x03A19770 MOV X2, X31
	0x03A19774 BL 0x3C4D65C
	0x03A19778 LDR W8, [X31 + 0x80]
	0x03A1977C CMP W8, 0x1
	0x03A19780 B.LE 0x3A1989C
	0x03A19784 ADD X8, X31, 0x1000
	0x03A19788 ADD X8, X8, 0x300
	0x03A1978C LDRB W8, [X8 + 0xC]
	0x03A19790 CMP W8, 0x0
	0x03A19794 LDR W8, [X31 + 0x64]
	0x03A19798 CCMP W8, W28, 0x0, EQ
	0x03A1979C MOVZ W8, 0x1
	0x03A197A0 CINC W20, W8, NE
	0x03A197A4 B 0x3A198A0

ISIL:
	001 Subtract X31, X31, 240
	002 Move [X31+192], X30
	003 Move [X31+200], X23
	004 Move [X31+208], X22
	005 Move [X31+216], X21
	006 Move [X31+224], X20
	007 Move [X31+232], X19
	008 Move X23, 0x9C9000
	009 Move W8, [X23+4078]
	010 Move W22, W3
	011 Move X19, X2
	012 Move X21, X1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0x73C000
	019 Move X0, [X0+1632]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X23+4078], W8
	023 NotImplemented "Instruction MOVI not yet implemented."
	024 Subtract W8, W22, 1
	025 Move [X31+144], V0
	026 Move [X31+152], V0
	027 Move [X31+8], V0
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Move S0, 1
	030 Move [X31+176], W31
	031 Move X9, -48762880
	032 Add X9, X9, 2784
	033 Move V0, [X9]
	034 Add X21, X21, 240
	035 Move V1, [X21]
	036 Move W8, 0x7F800000
	037 Move S2, W8
	038 Move W9, 0x80000000
	039 Move V3, [X21+4]
	040 NotImplemented "Instruction SCVTF not yet implemented."
	041 Multiply S1, S0, S1
	042 NotImplemented "Instruction FCVTZS not yet implemented."
	043 NotImplemented "Instruction FCMP not yet implemented."
	044 NotImplemented "Instruction SCVTF not yet implemented."
	045 Multiply S0, S0, S1
	046 NotImplemented "Instruction CSEL not yet implemented."
	047 NotImplemented "Instruction FCVTZS not yet implemented."
	048 NotImplemented "Instruction FCMP not yet implemented."
	049 NotImplemented "Instruction CSEL not yet implemented."
	050 Add X0, X31, 128
	051 Move X3, X31
	052 Call RenderTextureDescriptor..ctor, X0, X1, X2
	053 Move X0, X21
	054 Move X1, X31
	055 Call RenderTextureDescriptor.get_graphicsFormat, X0
	056 Move W1, W0
	057 Add X0, X31, 128
	058 Move X2, X31
	059 Call RenderTextureDescriptor.set_graphicsFormat, X0, X1
	060 Add X0, X31, 128
	061 Move W1, W31
	062 Move X2, X31
	063 Call RenderTextureDescriptor.set_useMipMap, X0, X1
	064 Add X0, X31, 128
	065 Move W1, W31
	066 Move X2, X31
	067 Call RenderTextureDescriptor.set_autoGenerateMips, X0, X1
	068 Add X0, X31, 128
	069 Move W1, W31
	070 Move X2, X31
	071 Call RenderTextureDescriptor.set_depthBufferBits, X0, X1
	072 Move W8, 1
	073 Move W9, 2
	074 Move [X31+136], W8
	075 Move [X31+160], W9
	076 Compare X20, 0
	077 JumpIfEqual {135}
	078 Move X10, 0x73C000
	079 Move X8, [X20]
	080 Move X10, [X10+1632]
	081 NotImplemented "Instruction LDRH not yet implemented."
	082 Move X1, [X10]
	083 Compare X9, 0
	084 JumpIfEqual {91}
	085 Move X10, [X8+176]
	086 Add X10, X10, 8
	087 NotImplemented "Instruction LDUR not yet implemented."
	088 NotImplemented "Instruction CMP not yet implemented."
	089 Subtract X9, X9, 1
	090 Add X10, X10, 16
	091 Move X0, X20
	092 Move W2, W31
	093 Call 0x1C5D788
	094 NotImplemented "Instruction LDRSW not yet implemented."
	095 Add X8, X8, X9
	096 Add X0, X8, 312
	097 Move X8, [X0]
	098 Move X1, [X0+8]
	099 Move X0, X20
	100 NotImplemented "Instruction BLR not yet implemented."
	101 Compare X0, 0
	102 JumpIfEqual {135}
	103 Move W1, [X0+336]
	104 Move V0, [X31+128]
	105 Move V1, [X31+144]
	106 Move V2, [X31+10]
	107 Move W8, [X31+176]
	108 Move [X31+64], V0
	109 Move [X31+72], V1
	110 Move [X31+6], V2
	111 Move [X31+112], W8
	112 Compare X19, 0
	113 JumpIfEqual {135}
	114 Move V0, [X31+64]
	115 Move V1, [X31+80]
	116 Move V2, [X31+6]
	117 Move W8, [X31+112]
	118 Add X2, X31, 0
	119 Move W3, 1
	120 Move X0, X19
	121 Move X4, X31
	122 Move [X31], V0
	123 Move [X31+8], V1
	124 Move [X31+2], V2
	125 Move [X31+48], W8
	126 Call CommandBuffer.GetTemporaryRT, X0, X1, X2, X3
	127 Move X20, [X31+224]
	128 Move X19, [X31+232]
	129 Move X22, [X31+208]
	130 Move X21, [X31+216]
	131 Move X30, [X31+192]
	132 Move X23, [X31+200]
	133 Add X31, X31, 240
	134 Return 
	135 Call 0x1C17F20

Method: System.Void EnableBlendStyle(UnityEngine.Rendering.CommandBuffer cmd, System.Int32 blendStyleIndex, System.Boolean enabled)

Disassembly:
	0x03A1BA80 FMOV S0, 1
	0x03A1BA84 FMOV S1, 1
	0x03A1BA88 FMOV S2, 1
	0x03A1BA8C FMOV S3, 1
	0x03A1BA90 MOV X0, X21
	0x03A1BA94 MOV X2, X31
	0x03A1BA98 BL 0x3C4CF88
	0x03A1BA9C ADRP X29, 0x739000
	0x03A1BAA0 LDR X29, [X29 + 0x658]
	0x03A1BAA4 MOV X23, X31
	0x03A1BAA8 ADD X28, X31, 0xA88
	0x03A1BAAC LDR X0, [X27]
	0x03A1BAB0 LDR W8, [X0 + 0xE0]
	0x03A1BAB4 CBNZ W8, 0x3A1BAC0
	0x03A1BAB8 BL 0x1C16DFC
	0x03A1BABC LDR X0, [X27]
	0x03A1BAC0 LDR X8, [X0 + 0xB8]
	0x03A1BAC4 LDR X8, [X8 + 0x10]
	0x03A1BAC8 CBZ X8, 0x3A1BD18
	0x03A1BACC LDRSW X9, [X8 + 0x18]
	0x03A1BAD0 CMP X23, X9
	0x03A1BAD4 B.GE 0x3A1BB68
	0x03A1BAD8 CBNZ X23, 0x3A1BB3C
	0x03A1BADC LDR W9, [X0 + 0xE0]
	0x03A1BAE0 CBNZ W9, 0x3A1BAF8
	0x03A1BAE4 BL 0x1C16DFC
	0x03A1BAE8 LDR X8, [X27]
	0x03A1BAEC LDR X8, [X8 + 0xB8]
	0x03A1BAF0 LDR X8, [X8 + 0x10]
	0x03A1BAF4 CBZ X8, 0x3A1BD24
	0x03A1BAF8 LDR W9, [X8 + 0x18]
	0x03A1BAFC CBZ W9, 0x3A1BD20
	0x03A1BB00 LDR W24, [X8 + 0x20]
	0x03A1BB04 MOV X0, X31
	0x03A1BB08 BL 0x3C1B398
	0x03A1BB0C ADD X8, X31, 0xA88
	0x03A1BB10 MOV X1, X31
	0x03A1BB14 BL 0x3C4B274
	0x03A1BB18 LDP V0, V1, [X28]
	0x03A1BB1C LDR X8, [X28 + 0x20]
	0x03A1BB20 STP V0, V1, [X26]
	0x03A1BB24 STR X8, [X26 + 0x20]
	0x03A1BB28 ADD X2, X31, 0x2F0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x9C7000
	008 Move X22, 0x73A000
	009 Move W8, [X23+4079]
	010 Move X22, [X22+1624]
	011 Move W20, W2
	012 Move W21, W1
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0x73A000
	019 Move X0, [X0+1624]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X23+4079], W8
	023 Move X0, [X22]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {29}
	027 Call 0x1C17DFC
	028 Move X0, [X22]
	029 Move X8, [X0+184]
	030 Move X8, [X8+72]
	031 Compare X8, 0
	032 JumpIfEqual {61}
	033 Move W9, [X8+24]
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Compare X19, 0
	036 JumpIfEqual {61}
	037 Add X8, X8, W21
	038 Move X1, [X8+32]
	039 Move X0, X19
	040 Move X2, X31
	041 Move TEMP, X20
	042 And TEMP, TEMP, 1
	043 Compare TEMP, 1
	044 JumpIfNotEqual {53}
	045 Move X20, [X31+32]
	046 Move X19, [X31+40]
	047 Move X22, [X31+16]
	048 Move X21, [X31+24]
	049 Move X30, [X31+48]
	050 Move X23, [X31+56]
	051 Call CommandBuffer.EnableShaderKeyword, X0, X1
	052 Return 
	053 Move X20, [X31+32]
	054 Move X19, [X31+40]
	055 Move X22, [X31+16]
	056 Move X21, [X31+24]
	057 Move X30, [X31+48]
	058 Move X23, [X31+56]
	059 Call CommandBuffer.DisableShaderKeyword, X0, X1
	060 Return 
	061 Call 0x1C17F20
	062 Call 0x1C17F28

Method: System.Void DisableAllKeywords(UnityEngine.Rendering.Universal.IRenderPass2D pass, UnityEngine.Rendering.CommandBuffer cmd)

Disassembly:
	0x03A1D5C8 LDR X1, [X8]
	0x03A1D5CC ADRP X27, 0x737000
	0x03A1D5D0 ADRP X24, 0x737000
	0x03A1D5D4 ADRP X29, 0x737000
	0x03A1D5D8 LDR X27, [X27 + 0x590]
	0x03A1D5DC LDR X24, [X24 + 0x578]
	0x03A1D5E0 LDR X29, [X29 + 0x550]
	0x03A1D5E4 ADD X8, X31, 0x8
	0x03A1D5E8 BL 0x301CB58
	0x03A1D5EC LDUR V0, [X31 + 0x8]
	0x03A1D5F0 LDR X8, [X31 + 0x18]
	0x03A1D5F4 STR V0, [X31 + 0x6]
	0x03A1D5F8 STR X8, [X31 + 0x70]
	0x03A1D5FC LDR X1, [X28]
	0x03A1D600 ADD X0, X31, 0x60
	0x03A1D604 BL 0x2BC4350
	0x03A1D608 TBZ X0, 0x0, 0x3A1D64C
	0x03A1D60C LDR X22, [X31 + 0x70]
	0x03A1D610 CBZ X22, 0x3A1D848
	0x03A1D614 MOV X0, X22
	0x03A1D618 MOV W1, W19
	0x03A1D61C BL 0x3A15404
	0x03A1D620 MOV W23, W0
	0x03A1D624 MOV X0, X22
	0x03A1D628 MOV W1, W20
	0x03A1D62C BL 0x3A15404
	0x03A1D630 EOR W8, W23, W0, 0x0
	0x03A1D634 TBZ X8, 0x0, 0x3A1D5FC
	0x03A1D638 LDR X1, [X29]
	0x03A1D63C ADD X0, X31, 0x60
	0x03A1D640 BL 0x2BC434C
	0x03A1D644 MOV W0, W31
	0x03A1D648 B 0x3A1D7EC
	0x03A1D64C LDR X1, [X29]
	0x03A1D650 ADD X0, X31, 0x60
	0x03A1D654 BL 0x2BC434C
	0x03A1D658 LDR X8, [X21]
	0x03A1D65C ADRP X10, 0x737000
	0x03A1D660 LDRH W9, [X8 + 0x12E]
	0x03A1D664 LDR X10, [X10 + 0x668]
	0x03A1D668 LDR X1, [X10]
	0x03A1D66C CBZ X9, 0x3A1D690
	0x03A1D670 LDR X10, [X8 + 0xB0]
	0x03A1D674 ADD X10, X10, 0x8
	0x03A1D678 LDUR X11, [X10 - 0x8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x9C5000
	007 Move X20, 0x738000
	008 Move W8, [X21+4080]
	009 Move X20, [X20+1624]
	010 Move X19, X1
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x738000
	016 Move X0, [X0+1624]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X21+4080], W8
	020 Move X0, [X20]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {26}
	024 Call 0x1C17DFC
	025 Move X0, [X20]
	026 Move X8, [X0+184]
	027 Move X20, [X8+72]
	028 Compare X20, 0
	029 JumpIfEqual {52}
	030 Move X8, [X20+24]
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Move X21, X31
	033 And X8, X8, 0
	034 Add X22, X20, 32
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Compare X19, 0
	037 JumpIfEqual {52}
	038 Move X1, [X22]
	039 Move X0, X19
	040 Move X2, X31
	041 Call CommandBuffer.DisableShaderKeyword, X0, X1
	042 Move W8, [X20+24]
	043 Add X21, X21, 1
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Move X20, [X31+32]
	046 Move X19, [X31+40]
	047 Move X22, [X31+16]
	048 Move X21, [X31+24]
	049 Move X30, [X31+48]
	050 Return 
	051 Call 0x1C17F28
	052 Call 0x1C17F20

Method: System.Void ReleaseRenderTextures(UnityEngine.Rendering.Universal.IRenderPass2D pass, UnityEngine.Rendering.CommandBuffer cmd)

Disassembly:
	0x03A1D67C CMP X11, X1
	0x03A1D680 B.EQ 0x3A1D6A0
	0x03A1D684 SUBS X9, X9, 0x1
	0x03A1D688 ADD X10, X10, 0x10
	0x03A1D68C B.NE 0x3A1D678
	0x03A1D690 MOVZ W2, 0x1
	0x03A1D694 MOV X0, X21
	0x03A1D698 BL 0x1C5C788
	0x03A1D69C B 0x3A1D6B0
	0x03A1D6A0 LDR W9, [X10]
	0x03A1D6A4 ADD W9, W9, 0x1
	0x03A1D6A8 ADD X8, X8, W9, 0x4, SXTW
	0x03A1D6AC ADD X0, X8, 0x138
	0x03A1D6B0 LDP X8, X1, [X0]
	0x03A1D6B4 MOV X0, X21
	0x03A1D6B8 BLR X8
	0x03A1D6BC CBZ X0, 0x3A1D85C
	0x03A1D6C0 ADRP X8, 0x737000
	0x03A1D6C4 LDR X8, [X8 + 0x5C8]
	0x03A1D6C8 LDR X1, [X8]
	0x03A1D6CC ADD X8, X31, 0x8
	0x03A1D6D0 BL 0x301CB58
	0x03A1D6D4 LDUR V0, [X31 + 0x8]
	0x03A1D6D8 LDR X8, [X31 + 0x18]
	0x03A1D6DC STR V0, [X31 + 0x4]
	0x03A1D6E0 STR X8, [X31 + 0x50]
	0x03A1D6E4 LDR X1, [X25]
	0x03A1D6E8 ADD X0, X31, 0x40
	0x03A1D6EC BL 0x2BC4350
	0x03A1D6F0 TBZ X0, 0x0, 0x3A1D7D4
	0x03A1D6F4 LDR X8, [X31 + 0x50]
	0x03A1D6F8 CBZ X8, 0x3A1D854
	0x03A1D6FC LDR X0, [X8 + 0x28]
	0x03A1D700 CBZ X0, 0x3A1D858
	0x03A1D704 LDR X1, [X26]
	0x03A1D708 ADD X8, X31, 0x8
	0x03A1D70C BL 0x301CB58
	0x03A1D710 LDUR V0, [X31 + 0x8]
	0x03A1D714 LDR X8, [X31 + 0x18]
	0x03A1D718 STR V0, [X31 + 0x2]
	0x03A1D71C STR X8, [X31 + 0x30]
	0x03A1D720 LDR X1, [X27]
	0x03A1D724 ADD X0, X31, 0x20
	0x03A1D728 BL 0x2BC4350
	0x03A1D72C MOV W21, W0
	0x03A1D730 TBZ X0, 0x0, 0x3A1D774
	0x03A1D734 LDR X22, [X31 + 0x30]
	0x03A1D738 CBZ X22, 0x3A1D79C
	0x03A1D73C MOV X0, X22
	0x03A1D740 MOV W1, W19
	0x03A1D744 MOV X2, X31
	0x03A1D748 BL 0x3A2693C
	0x03A1D74C MOV W23, W0
	0x03A1D750 MOV X0, X22
	0x03A1D754 MOV W1, W20
	0x03A1D758 MOV X2, X31
	0x03A1D75C BL 0x3A2693C
	0x03A1D760 EOR W8, W23, W0, 0x0
	0x03A1D764 TBZ X8, 0x0, 0x3A1D720
	0x03A1D768 MOV X22, X31
	0x03A1D76C MOVZ W23, 0x4
	0x03A1D770 B 0x3A1D77C
	0x03A1D774 MOV X22, X31
	0x03A1D778 MOVZ W23, 0x6
	0x03A1D77C LDR X1, [X24]
	0x03A1D780 ADD X0, X31, 0x20
	0x03A1D784 BL 0x2BC434C
	0x03A1D788 CBNZ X22, 0x3A1D84C
	0x03A1D78C CMP W23, 0x6
	0x03A1D790 B.EQ 0x3A1D6E4
	0x03A1D794 CBZ W23, 0x3A1D6E4
	0x03A1D798 B 0x3A1D80C
	0x03A1D79C BL 0x1C16F20
	0x03A1D7A0 B 0x3A1D864
	0x03A1D7A4 B 0x3A1D7B0
	0x03A1D7A8 B 0x3A1D7B0
	0x03A1D7AC B 0x3A1D7B0
	0x03A1D7B0 MOV X21, X1
	0x03A1D7B4 CMP W21, 0x1
	0x03A1D7B8 B.NE 0x3A1D828
	0x03A1D7BC BL 0x3EB1AD0
	0x03A1D7C0 LDR X22, [X0]
	0x03A1D7C4 BL 0x3EB1AE0
	0x03A1D7C8 MOV W21, W31
	0x03A1D7CC MOV W23, W31
	0x03A1D7D0 B 0x3A1D77C
	0x03A1D7D4 ADRP X8, 0x737000
	0x03A1D7D8 LDR X8, [X8 + 0x580]
	0x03A1D7DC ADD X0, X31, 0x40
	0x03A1D7E0 LDR X1, [X8]
	0x03A1D7E4 BL 0x2BC434C
	0x03A1D7E8 MOVZ W0, 0x1
	0x03A1D7EC LDP X20, X19, [X31 + 0xD0]
	0x03A1D7F0 LDP X22, X21, [X31 + 0xC0]
	0x03A1D7F4 LDP X24, X23, [X31 + 0xB0]
	0x03A1D7F8 LDP X26, X25, [X31 + 0xA0]
	0x03A1D7FC LDP X28, X27, [X31 + 0x90]
	0x03A1D800 LDP X29, X30, [X31 + 0x80]
	0x03A1D804 ADD X31, X31, 0xE0
	0x03A1D808 RET
	0x03A1D80C ADRP X8, 0x737000
	0x03A1D810 LDR X8, [X8 + 0x580]
	0x03A1D814 ADD X0, X31, 0x40
	0x03A1D818 LDR X1, [X8]
	0x03A1D81C BL 0x2BC434C
	0x03A1D820 TBNZ X21, 0x0, 0x3A1D644
	0x03A1D824 B 0x3A1D7E8
	0x03A1D828 STR X0, [X31]
	0x03A1D82C MOV X22, X31
	0x03A1D830 LDR X1, [X24]
	0x03A1D834 ADD X0, X31, 0x20
	0x03A1D838 BL 0x2BC434C
	0x03A1D83C CBZ X22, 0x3A1D88C
	0x03A1D840 MOV X0, X22
	0x03A1D844 BL 0x1C16F18
	0x03A1D848 BL 0x1C16F20
	0x03A1D84C MOV X0, X22
	0x03A1D850 BL 0x1C16F18
	0x03A1D854 BL 0x1C16F20
	0x03A1D858 BL 0x1C16F20
	0x03A1D85C BL 0x1C16F20
	0x03A1D860 BL 0x1C16F28
	0x03A1D864 MOV X21, X1
	0x03A1D868 STR X0, [X31]
	0x03A1D86C B 0x3A1D830
	0x03A1D870 B 0x3A1D884
	0x03A1D874 B 0x3A1D884
	0x03A1D878 B 0x3A1D884
	0x03A1D87C B 0x3A1D884
	0x03A1D880 B 0x3A1D884
	0x03A1D884 MOV X21, X1
	0x03A1D888 STR X0, [X31]
	0x03A1D88C CMP W21, 0x1
	0x03A1D890 B.NE 0x3A1D8C4
	0x03A1D894 LDR X0, [X31]
	0x03A1D898 BL 0x3EB1AD0
	0x03A1D89C LDR X19, [X0]
	0x03A1D8A0 BL 0x3EB1AE0
	0x03A1D8A4 ADRP X8, 0x737000
	0x03A1D8A8 LDR X8, [X8 + 0x580]
	0x03A1D8AC ADD X0, X31, 0x40
	0x03A1D8B0 LDR X1, [X8]
	0x03A1D8B4 BL 0x2BC434C
	0x03A1D8B8 CBZ X19, 0x3A1D7E8
	0x03A1D8BC MOV X0, X19
	0x03A1D8C0 BL 0x1C16F18
	0x03A1D8C4 MOV X19, X31
	0x03A1D8C8 B 0x3A1D8D0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x9C5000
	006 Move W8, [X21+4081]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x738000
	014 Move X0, [X0+1632]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+4081], W8
	018 Compare X20, 0
	019 JumpIfEqual {158}
	020 Move X21, 0x738000
	021 Move X8, [X20]
	022 Move X21, [X21+1632]
	023 NotImplemented "Instruction LDRH not yet implemented."
	024 Move X1, [X21]
	025 Compare X9, 0
	026 JumpIfEqual {33}
	027 Move X10, [X8+176]
	028 Add X10, X10, 8
	029 NotImplemented "Instruction LDUR not yet implemented."
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Subtract X9, X9, 1
	032 Add X10, X10, 16
	033 Move X0, X20
	034 Move W2, W31
	035 Call 0x1C5D788
	036 NotImplemented "Instruction LDRSW not yet implemented."
	037 Add X8, X8, X9
	038 Add X0, X8, 312
	039 Move X8, [X0]
	040 Move X1, [X0+8]
	041 Move X0, X20
	042 NotImplemented "Instruction BLR not yet implemented."
	043 Compare X0, 0
	044 JumpIfEqual {158}
	045 Move [X0+288], W31
	046 Move X8, [X20]
	047 Move X1, [X21]
	048 NotImplemented "Instruction LDRH not yet implemented."
	049 Compare X9, 0
	050 JumpIfEqual {57}
	051 Move X10, [X8+176]
	052 Add X10, X10, 8
	053 NotImplemented "Instruction LDUR not yet implemented."
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Subtract X9, X9, 1
	056 Add X10, X10, 16
	057 Move X0, X20
	058 Move W2, W31
	059 Call 0x1C5D788
	060 NotImplemented "Instruction LDRSW not yet implemented."
	061 Add X8, X8, X9
	062 Add X0, X8, 312
	063 Move X8, [X0]
	064 Move X1, [X0+8]
	065 Move X0, X20
	066 NotImplemented "Instruction BLR not yet implemented."
	067 Compare X0, 0
	068 JumpIfEqual {158}
	069 Move [X0+292], W31
	070 Move X8, [X20]
	071 Move X1, [X21]
	072 NotImplemented "Instruction LDRH not yet implemented."
	073 Compare X9, 0
	074 JumpIfEqual {81}
	075 Move X10, [X8+176]
	076 Add X10, X10, 8
	077 NotImplemented "Instruction LDUR not yet implemented."
	078 NotImplemented "Instruction CMP not yet implemented."
	079 Subtract X9, X9, 1
	080 Add X10, X10, 16
	081 Move X0, X20
	082 Move W2, W31
	083 Call 0x1C5D788
	084 NotImplemented "Instruction LDRSW not yet implemented."
	085 Add X8, X8, X9
	086 Add X0, X8, 312
	087 Move X8, [X0]
	088 Move X1, [X0+8]
	089 Move X0, X20
	090 NotImplemented "Instruction BLR not yet implemented."
	091 Compare X0, 0
	092 JumpIfEqual {158}
	093 Compare X19, 0
	094 JumpIfEqual {158}
	095 Move W1, [X0+304]
	096 Move X0, X19
	097 Move X2, X31
	098 Call CommandBuffer.ReleaseTemporaryRT, X0, X1
	099 Move X8, [X20]
	100 Move X1, [X21]
	101 NotImplemented "Instruction LDRH not yet implemented."
	102 Compare X9, 0
	103 JumpIfEqual {110}
	104 Move X10, [X8+176]
	105 Add X10, X10, 8
	106 NotImplemented "Instruction LDUR not yet implemented."
	107 NotImplemented "Instruction CMP not yet implemented."
	108 Subtract X9, X9, 1
	109 Add X10, X10, 16
	110 Move X0, X20
	111 Move W2, W31
	112 Call 0x1C5D788
	113 NotImplemented "Instruction LDRSW not yet implemented."
	114 Add X8, X8, X9
	115 Add X0, X8, 312
	116 Move X8, [X0]
	117 Move X1, [X0+8]
	118 Move X0, X20
	119 NotImplemented "Instruction BLR not yet implemented."
	120 Compare X0, 0
	121 JumpIfEqual {158}
	122 Move W1, [X0+320]
	123 Move X0, X19
	124 Move X2, X31
	125 Call CommandBuffer.ReleaseTemporaryRT, X0, X1
	126 Move X8, [X20]
	127 Move X1, [X21]
	128 NotImplemented "Instruction LDRH not yet implemented."
	129 Compare X9, 0
	130 JumpIfEqual {137}
	131 Move X10, [X8+176]
	132 Add X10, X10, 8
	133 NotImplemented "Instruction LDUR not yet implemented."
	134 NotImplemented "Instruction CMP not yet implemented."
	135 Subtract X9, X9, 1
	136 Add X10, X10, 16
	137 Move X0, X20
	138 Move W2, W31
	139 Call 0x1C5D788
	140 NotImplemented "Instruction LDRSW not yet implemented."
	141 Add X8, X8, X9
	142 Add X0, X8, 312
	143 Move X8, [X0]
	144 Move X1, [X0+8]
	145 Move X0, X20
	146 NotImplemented "Instruction BLR not yet implemented."
	147 Compare X0, 0
	148 JumpIfEqual {158}
	149 Move W1, [X0+336]
	150 Move X0, X19
	151 Move X20, [X31+16]
	152 Move X19, [X31+24]
	153 Move X2, X31
	154 Move X30, [X31+32]
	155 Move X21, [X31+40]
	156 Call CommandBuffer.ReleaseTemporaryRT, X0, X1
	157 Return 
	158 Call 0x1C17F20

Method: System.Void DrawPointLight(UnityEngine.Rendering.CommandBuffer cmd, UnityEngine.Rendering.Universal.Light2D light, UnityEngine.Mesh lightMesh, UnityEngine.Material material)

Disassembly:
	0x03A1F414 MOV X3, X31
	0x03A1F418 STP V0, V1, [X31]
	0x03A1F41C STR X8, [X31 + 0x20]
	0x03A1F420 BL 0x3C4FCFC
	0x03A1F424 LDP X20, X19, [X31 + 0x190]
	0x03A1F428 LDP X22, X21, [X31 + 0x180]
	0x03A1F42C LDP X24, X23, [X31 + 0x170]
	0x03A1F430 LDP X30, X25, [X31 + 0x160]
	0x03A1F434 LDR X29, [X31 + 0x150]
	0x03A1F438 LDP D9, D8, [X31 + 0x140]
	0x03A1F43C LDP D11, D10, [X31 + 0x130]
	0x03A1F440 ADD X31, X31, 0x1A0
	0x03A1F444 RET
	0x03A1F448 BL 0x1C16F20
	0x03A1F44C STR X30, [X31 - 0x10]!
	0x03A1F450 CBZ X0, 0x3A1F464
	0x03A1F454 LDP S0, S1, [X0 + 0xEC]
	0x03A1F458 FDIV S0, S0, S1
	0x03A1F45C LDR X30, [X31], #0x10
	0x03A1F460 RET
	0x03A1F464 BL 0x1C16F20
	0x03A1F468 MOVZ W8, 0x43B40000
	0x03A1F46C FMOV S1, W8
	0x03A1F470 FDIV S0, S0, S1
	0x03A1F474 RET
	0x03A1F478 SUB X31, X31, 0x170
	0x03A1F47C STP D13, D12, [X31 + 0x110]
	0x03A1F480 STP D11, D10, [X31 + 0x120]
	0x03A1F484 STP D9, D8, [X31 + 0x130]
	0x03A1F488 STR X29, [X31 + 0x140]
	0x03A1F48C STP X30, X21, [X31 + 0x150]
	0x03A1F490 STP X20, X19, [X31 + 0x160]
	0x03A1F494 CBZ X0, 0x3A1F5BC
	0x03A1F498 ADRP X21, 0x9B9000
	0x03A1F49C LDRB W8, [X21 + 0x85B]
	0x03A1F4A0 LDR V8, [X0 + 0xF0]
	0x03A1F4A4 MOV X19, X1
	0x03A1F4A8 MOV X20, X0
	0x03A1F4AC CBNZ W8, 0x3A1F4C4
	0x03A1F4B0 ADRP X0, 0x6D4000
	0x03A1F4B4 LDR X0, [X0 + 0x5A0]
	0x03A1F4B8 BL 0x1C16CF4
	0x03A1F4BC MOVZ W8, 0x1
	0x03A1F4C0 STRB W8, [X21 + 0x85B]
	0x03A1F4C4 ADRP X8, 0x6D4000
	0x03A1F4C8 LDR X8, [X8 + 0x5A0]
	0x03A1F4CC MOV X0, X20
	0x03A1F4D0 MOV X1, X31
	0x03A1F4D4 LDR X8, [X8]
	0x03A1F4D8 LDR X8, [X8 + 0xB8]
	0x03A1F4DC LDP S9, S10, [X8 + 0xC]
	0x03A1F4E0 LDR V11, [X8 + 0x14]
	0x03A1F4E4 BL 0x3C32E90
	0x03A1F4E8 CBZ X0, 0x3A1F5BC
	0x03A1F4EC MOV X1, X31
	0x03A1F4F0 MOV X20, X0
	0x03A1F4F4 FMUL S11, S8, S11
	0x03A1F4F8 FMUL S12, S8, S10
	0x03A1F4FC FMUL S13, S8, S9
	0x03A1F500 BL 0x3C3F58C
	0x03A1F504 MOV X0, X20
	0x03A1F508 MOV X1, X31
	0x03A1F50C MOV V8.16B, V0.16B
	0x03A1F510 MOV V9.16B, V1.16B
	0x03A1F514 MOV V10.16B, V2.16B
	0x03A1F518 BL 0x3C3DEB4
	0x03A1F51C MOV V4.16B, V0.16B
	0x03A1F520 MOV V5.16B, V1.16B

ISIL:
	001 Subtract X31, X31, 288
	002 Move [X31+208], D11
	003 Move [X31+216], D10
	004 Move [X31+224], D9
	005 Move [X31+232], D8
	006 Move [X31+240], X29
	007 Move [X31+248], X30
	008 Move [X31+256], X22
	009 Move [X31+264], X21
	010 Move [X31+272], X20
	011 Move [X31+280], X19
	012 Compare X1, 0
	013 JumpIfEqual {93}
	014 Move V11, [X1+240]
	015 Move X22, X1
	016 Move X21, X0
	017 Move X0, X1
	018 Move X1, X31
	019 Move X19, X3
	020 Move X20, X2
	021 Call Component.get_transform, X0
	022 Compare X0, 0
	023 JumpIfEqual {93}
	024 Move X1, X31
	025 Call Transform.get_position, X0
	026 Move X0, X22
	027 Move X1, X31
	028 Move V8, V0
	029 Move V9, V1
	030 Move V10, V2
	031 Call Component.get_transform, X0
	032 Compare X0, 0
	033 JumpIfEqual {93}
	034 Move X1, X31
	035 Call Transform.get_rotation, X0
	036 Move V4, V0
	037 Move V5, V1
	038 Move V6, V2
	039 Move V7, V3
	040 Add X8, X31, 80
	041 Move V0, V8
	042 Move V1, V9
	043 Move V2, V10
	044 Move V3, V4
	045 Move V4, V5
	046 Move V5, V6
	047 Move V6, V7
	048 Move X0, X31
	049 Move [X31+4], S11
	050 Move [X31+12], S11
	051 Move [X31], S11
	052 Call Matrix4x4.TRS, X0, X1, X2
	053 Move V1, [X31+112]
	054 Move V0, [X31+128]
	055 Move V2, [X31+80]
	056 Move V3, [X31+96]
	057 Move [X31+176], V1
	058 Move [X31+184], V0
	059 Move [X31+144], V2
	060 Move [X31+152], V3
	061 Move [X31+80], V2
	062 Move [X31+88], V3
	063 Move [X31+112], V1
	064 Move [X31+120], V0
	065 Compare X21, 0
	066 JumpIfEqual {93}
	067 Move V0, [X31+80]
	068 Move V1, [X31+96]
	069 Move V2, [X31+112]
	070 Move V3, [X31+128]
	071 Add X2, X31, 16
	072 Move X0, X21
	073 Move X1, X20
	074 Move X3, X19
	075 Move X4, X31
	076 Move [X31+16], V0
	077 Move [X31+24], V1
	078 Move [X31+48], V2
	079 Move [X31+56], V3
	080 Call CommandBuffer.DrawMesh, X0, X1, X2, X3
	081 Move X20, [X31+272]
	082 Move X19, [X31+280]
	083 Move X22, [X31+256]
	084 Move X21, [X31+264]
	085 Move X29, [X31+240]
	086 Move X30, [X31+248]
	087 Move D9, [X31+224]
	088 Move D8, [X31+232]
	089 Move D11, [X31+208]
	090 Move D10, [X31+216]
	091 Add X31, X31, 288
	092 Return 
	093 Call 0x1C17F20

Method: System.Boolean CanCastShadows(UnityEngine.Rendering.Universal.Light2D light, System.Int32 layerToRender)

Disassembly:
	0x03A1F524 MOV V6.16B, V2.16B
	0x03A1F528 MOV V7.16B, V3.16B
	0x03A1F52C ADD X8, X31, 0x90
	0x03A1F530 MOV V0.16B, V8.16B
	0x03A1F534 MOV V1.16B, V9.16B
	0x03A1F538 MOV V2.16B, V10.16B
	0x03A1F53C MOV V3.16B, V4.16B
	0x03A1F540 MOV V4.16B, V5.16B
	0x03A1F544 MOV V5.16B, V6.16B
	0x03A1F548 MOV V6.16B, V7.16B
	0x03A1F54C MOV X0, X31
	0x03A1F550 STP S12, S11, [X31 + 0x4]
	0x03A1F554 STR S13, [X31]

ISIL:
	001 Move [X31-16], X30
	002 Compare X0, 0
	003 JumpIfEqual {15}
	004 Move W8, [X0+125]
	005 Compare W8, 0
	006 JumpIfEqual {12}
	007 Move V0, [X0+128]
	008 NotImplemented "Instruction FCMP not yet implemented."
	009 Move X30, [X31+16]
	010 Call Light2D.IsLitLayer, X0, X1
	011 Return X0
	012 Move W0, W31
	013 Move X30, [X31+16]
	014 Return X0
	015 Call 0x1C17F20

Method: System.Boolean CanCastVolumetricShadows(UnityEngine.Rendering.Universal.Light2D light, System.Int32 endLayerValue)

Disassembly:
	0x03A1F558 BL 0x3C26FA8
	0x03A1F55C LDP V1, V0, [X31 + 0xB0]
	0x03A1F560 LDP V3, V2, [X31 + 0x90]
	0x03A1F564 ADD X8, X31, 0x50
	0x03A1F568 ADD X0, X31, 0x10
	0x03A1F56C MOV X1, X31
	0x03A1F570 STP V1, V0, [X31 + 0xF0]
	0x03A1F574 STP V3, V2, [X31 + 0xD0]
	0x03A1F578 STP V3, V2, [X31 + 0x10]
	0x03A1F57C STP V1, V0, [X31 + 0x30]
	0x03A1F580 BL 0x3C2711C
	0x03A1F584 LDP V1, V0, [X31 + 0x70]
	0x03A1F588 LDP V3, V2, [X31 + 0x50]
	0x03A1F58C LDP X30, X21, [X31 + 0x150]
	0x03A1F590 LDR X29, [X31 + 0x140]
	0x03A1F594 STP V1, V0, [X31 + 0xB0]
	0x03A1F598 STP V3, V2, [X31 + 0x90]
	0x03A1F59C STP V1, V0, [X19 + 0x20]
	0x03A1F5A0 STP V3, V2, [X19]
	0x03A1F5A4 LDP X20, X19, [X31 + 0x160]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Compare X0, 0
	005 JumpIfEqual {23}
	006 Move W19, W1
	007 Move X20, X0
	008 Call Light2D.GetTopMostLitLayer, X0
	009 Move W8, [X20+132]
	010 Compare W8, 0
	011 JumpIfEqual {18}
	012 Move V0, [X20+136]
	013 NotImplemented "Instruction FCMP not yet implemented."
	014 NotImplemented "Instruction CSET not yet implemented."
	015 NotImplemented "Instruction CMP not yet implemented."
	016 NotImplemented "Instruction CSET not yet implemented."
	017 And W0, W9, W8
	018 Move W0, W31
	019 Move X20, [X31+16]
	020 Move X19, [X31+24]
	021 Move X30, [X31+32]
	022 Return X0
	023 Call 0x1C17F20

Method: System.Boolean ShouldRenderLight(UnityEngine.Rendering.Universal.Light2D light, System.Int32 blendStyleIndex, System.Int32 layerToRender)

Disassembly:
	0x03A1F5A8 LDP D9, D8, [X31 + 0x130]
	0x03A1F5AC LDP D11, D10, [X31 + 0x120]
	0x03A1F5B0 LDP D13, D12, [X31 + 0x110]
	0x03A1F5B4 ADD X31, X31, 0x170
	0x03A1F5B8 RET
	0x03A1F5BC BL 0x1C16F20
	0x03A1F5C0 STP X30, X25, [X31 - 0x40]!
	0x03A1F5C4 STP X24, X23, [X31 + 0x10]
	0x03A1F5C8 STP X22, X21, [X31 + 0x20]
	0x03A1F5CC STP X20, X19, [X31 + 0x30]
	0x03A1F5D0 ADRP X22, 0x9C2000
	0x03A1F5D4 LDRB W8, [X22 + 0xFF8]
	0x03A1F5D8 MOV W19, W2
	0x03A1F5DC MOV X20, X1
	0x03A1F5E0 MOV X21, X0
	0x03A1F5E4 TBNZ X8, 0x0, 0x3A1F608
	0x03A1F5E8 ADRP X0, 0x6FC000
	0x03A1F5EC LDR X0, [X0 + 0x8F8]
	0x03A1F5F0 BL 0x1C16CF4
	0x03A1F5F4 ADRP X0, 0x735000
	0x03A1F5F8 LDR X0, [X0 + 0x660]
	0x03A1F5FC BL 0x1C16CF4
	0x03A1F600 MOVZ W8, 0x1
	0x03A1F604 STRB W8, [X22 + 0xFF8]
	0x03A1F608 CBZ X21, 0x3A1F860
	0x03A1F60C ADRP X24, 0x735000
	0x03A1F610 ADRP X25, 0x6FC000
	0x03A1F614 LDR X24, [X24 + 0x660]
	0x03A1F618 LDR X25, [X25 + 0x8F8]
	0x03A1F61C MOV X23, X31
	0x03A1F620 LDR X8, [X21]
	0x03A1F624 LDR X1, [X24]
	0x03A1F628 LDRH W9, [X8 + 0x12E]
	0x03A1F62C CBZ X9, 0x3A1F650
	0x03A1F630 LDR X10, [X8 + 0xB0]
	0x03A1F634 ADD X10, X10, 0x8
	0x03A1F638 LDUR X11, [X10 - 0x8]
	0x03A1F63C CMP X11, X1
	0x03A1F640 B.EQ 0x3A1F660
	0x03A1F644 SUBS X9, X9, 0x1
	0x03A1F648 ADD X10, X10, 0x10
	0x03A1F64C B.NE 0x3A1F638
	0x03A1F650 MOV X0, X21
	0x03A1F654 MOV W2, W31

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x9C3000
	008 Move X23, 0x6D5000
	009 Move W8, [X22+4082]
	010 Move X23, [X23+1432]
	011 Move W19, W2
	012 Move W21, W1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0x6D5000
	019 Move X0, [X0+1432]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+4082], W8
	023 Move X0, [X23]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Move X0, X20
	029 Move X1, X31
	030 Move X2, X31
	031 Call Object.op_Inequality, X0, X1
	032 Move TEMP, X0
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfNotEqual {52}
	036 Compare X20, 0
	037 JumpIfEqual {60}
	038 Move W8, [X20+36]
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Move W8, [X20+40]
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Move X0, X20
	043 Move W1, W19
	044 Move X20, [X31+32]
	045 Move X19, [X31+40]
	046 Move X22, [X31+16]
	047 Move X21, [X31+24]
	048 Move X30, [X31+48]
	049 Move X23, [X31+56]
	050 Call Light2D.IsLitLayer, X0, X1
	051 Return X0
	052 Move X20, [X31+32]
	053 Move X19, [X31+40]
	054 Move X22, [X31+16]
	055 Move X21, [X31+24]
	056 Move W0, W31
	057 Move X30, [X31+48]
	058 Move X23, [X31+56]
	059 Return X0
	060 Call 0x1C17F20

Method: System.Void RenderLightSet(UnityEngine.Rendering.Universal.IRenderPass2D pass, UnityEngine.Rendering.Universal.RenderingData renderingData, System.Int32 blendStyleIndex, UnityEngine.Rendering.CommandBuffer cmd, System.Int32 layerToRender, UnityEngine.Rendering.RenderTargetIdentifier renderTexture, System.Collections.Generic.List`1<UnityEngine.Rendering.Universal.Light2D> lights)

Disassembly:
	0x03A1F658 BL 0x1C5C788
	0x03A1F65C B 0x3A1F66C
	0x03A1F660 LDRSW X9, [X10]
	0x03A1F664 ADD X8, X8, X9, 0x4, LSL
	0x03A1F668 ADD X0, X8, 0x138
	0x03A1F66C LDP X8, X1, [X0]
	0x03A1F670 MOV X0, X21
	0x03A1F674 BLR X8
	0x03A1F678 CBZ X0, 0x3A1F860
	0x03A1F67C LDR X8, [X0 + 0x58]
	0x03A1F680 CBZ X8, 0x3A1F860
	0x03A1F684 LDRSW X8, [X8 + 0x18]
	0x03A1F688 CMP X23, X8
	0x03A1F68C B.GE 0x3A1F84C
	0x03A1F690 LSRV W8, W19, W23
	0x03A1F694 TBZ X8, 0x0, 0x3A1F844
	0x03A1F698 LDR X8, [X21]
	0x03A1F69C LDR X1, [X24]
	0x03A1F6A0 LDRH W9, [X8 + 0x12E]
	0x03A1F6A4 CBZ X9, 0x3A1F6C8
	0x03A1F6A8 LDR X10, [X8 + 0xB0]
	0x03A1F6AC ADD X10, X10, 0x8
	0x03A1F6B0 LDUR X11, [X10 - 0x8]
	0x03A1F6B4 CMP X11, X1
	0x03A1F6B8 B.EQ 0x3A1F6D8
	0x03A1F6BC SUBS X9, X9, 0x1
	0x03A1F6C0 ADD X10, X10, 0x10
	0x03A1F6C4 B.NE 0x3A1F6B0
	0x03A1F6C8 MOV X0, X21
	0x03A1F6CC MOV W2, W31
	0x03A1F6D0 BL 0x1C5C788
	0x03A1F6D4 B 0x3A1F6E4
	0x03A1F6D8 LDRSW X9, [X10]
	0x03A1F6DC ADD X8, X8, X9, 0x4, LSL
	0x03A1F6E0 ADD X0, X8, 0x138
	0x03A1F6E4 LDP X8, X1, [X0]
	0x03A1F6E8 MOV X0, X21
	0x03A1F6EC BLR X8
	0x03A1F6F0 CBZ X0, 0x3A1F860
	0x03A1F6F4 LDR X8, [X0 + 0x58]
	0x03A1F6F8 CBZ X8, 0x3A1F860
	0x03A1F6FC LDR W9, [X8 + 0x18]
	0x03A1F700 CMP X23, X9
	0x03A1F704 B.CS 0x3A1F864
	0x03A1F708 ADD X8, X8, X23, 0x5, LSL
	0x03A1F70C LDRB W8, [X8 + 0x30]
	0x03A1F710 CBZ W8, 0x3A1F844
	0x03A1F714 LDR X8, [X21]
	0x03A1F718 LDR X1, [X24]
	0x03A1F71C LDRH W9, [X8 + 0x12E]
	0x03A1F720 CBZ X9, 0x3A1F744
	0x03A1F724 LDR X10, [X8 + 0xB0]
	0x03A1F728 ADD X10, X10, 0x8
	0x03A1F72C LDUR X11, [X10 - 0x8]
	0x03A1F730 CMP X11, X1
	0x03A1F734 B.EQ 0x3A1F754
	0x03A1F738 SUBS X9, X9, 0x1
	0x03A1F73C ADD X10, X10, 0x10
	0x03A1F740 B.NE 0x3A1F72C
	0x03A1F744 MOV X0, X21
	0x03A1F748 MOV W2, W31
	0x03A1F74C BL 0x1C5C788
	0x03A1F750 B 0x3A1F760
	0x03A1F754 LDRSW X9, [X10]
	0x03A1F758 ADD X8, X8, X9, 0x4, LSL
	0x03A1F75C ADD X0, X8, 0x138
	0x03A1F760 LDP X8, X1, [X0]
	0x03A1F764 MOV X0, X21
	0x03A1F768 BLR X8
	0x03A1F76C CBZ X0, 0x3A1F860
	0x03A1F770 LDR X8, [X0 + 0x58]
	0x03A1F774 CBZ X8, 0x3A1F860
	0x03A1F778 LDR W9, [X8 + 0x18]
	0x03A1F77C CMP X23, X9
	0x03A1F780 B.CS 0x3A1F864
	0x03A1F784 LDR X0, [X25]
	0x03A1F788 ADD X8, X8, X23, 0x5, LSL
	0x03A1F78C LDR X22, [X8 + 0x38]
	0x03A1F790 LDR W9, [X0 + 0xE0]
	0x03A1F794 CBNZ W9, 0x3A1F79C
	0x03A1F798 BL 0x1C16DFC
	0x03A1F79C FMOV S0, W31
	0x03A1F7A0 FMOV S1, W31
	0x03A1F7A4 FMOV S2, W31
	0x03A1F7A8 FMOV S3, 1
	0x03A1F7AC MOVZ W2, 0x1
	0x03A1F7B0 MOVN W4, 0x0
	0x03A1F7B4 MOVN W5, 0x0
	0x03A1F7B8 MOV X0, X20
	0x03A1F7BC MOV X1, X22
	0x03A1F7C0 MOV W3, W31
	0x03A1F7C4 MOV X6, X31
	0x03A1F7C8 BL 0x39E7864
	0x03A1F7CC LDR X8, [X21]
	0x03A1F7D0 LDR X1, [X24]
	0x03A1F7D4 LDRH W9, [X8 + 0x12E]
	0x03A1F7D8 CBZ X9, 0x3A1F7FC
	0x03A1F7DC LDR X10, [X8 + 0xB0]
	0x03A1F7E0 ADD X10, X10, 0x8
	0x03A1F7E4 LDUR X11, [X10 - 0x8]
	0x03A1F7E8 CMP X11, X1
	0x03A1F7EC B.EQ 0x3A1F80C
	0x03A1F7F0 SUBS X9, X9, 0x1
	0x03A1F7F4 ADD X10, X10, 0x10
	0x03A1F7F8 B.NE 0x3A1F7E4
	0x03A1F7FC MOV X0, X21
	0x03A1F800 MOV W2, W31
	0x03A1F804 BL 0x1C5C788
	0x03A1F808 B 0x3A1F818
	0x03A1F80C LDRSW X9, [X10]
	0x03A1F810 ADD X8, X8, X9, 0x4, LSL
	0x03A1F814 ADD X0, X8, 0x138
	0x03A1F818 LDP X8, X1, [X0]
	0x03A1F81C MOV X0, X21
	0x03A1F820 BLR X8
	0x03A1F824 CBZ X0, 0x3A1F860
	0x03A1F828 LDR X8, [X0 + 0x58]
	0x03A1F82C CBZ X8, 0x3A1F860
	0x03A1F830 LDR W9, [X8 + 0x18]
	0x03A1F834 CMP X23, X9
	0x03A1F838 B.CS 0x3A1F864
	0x03A1F83C ADD X8, X8, X23, 0x5, LSL
	0x03A1F840 STRB W31, [X8 + 0x30]
	0x03A1F844 ADD X23, X23, 0x1
	0x03A1F848 B 0x3A1F620
	0x03A1F84C LDP X20, X19, [X31 + 0x30]
	0x03A1F850 LDP X22, X21, [X31 + 0x20]
	0x03A1F854 LDP X24, X23, [X31 + 0x10]
	0x03A1F858 LDP X30, X25, [X31], #0x40
	0x03A1F85C RET
	0x03A1F860 BL 0x1C16F20
	0x03A1F864 BL 0x1C16F28
	0x03A1F868 STP X30, X23, [X31 - 0x30]!
	0x03A1F86C STP X22, X21, [X31 + 0x10]
	0x03A1F870 STP X20, X19, [X31 + 0x20]
	0x03A1F874 ADRP X23, 0x9C2000
	0x03A1F878 ADRP X22, 0x735000
	0x03A1F87C LDRB W8, [X23 + 0xFFB]
	0x03A1F880 LDR X22, [X22 + 0x658]
	0x03A1F884 MOV W19, W2
	0x03A1F888 MOV W21, W1
	0x03A1F88C MOV X20, X0
	0x03A1F890 TBNZ X8, 0x0, 0x3A1F8A8
	0x03A1F894 ADRP X0, 0x735000
	0x03A1F898 LDR X0, [X0 + 0x658]
	0x03A1F89C BL 0x1C16CF4
	0x03A1F8A0 MOVZ W8, 0x1
	0x03A1F8A4 STRB W8, [X23 + 0xFFB]
	0x03A1F8A8 LDR X0, [X22]
	0x03A1F8AC LDR W8, [X0 + 0xE0]
	0x03A1F8B0 CBNZ W8, 0x3A1F8B8
	0x03A1F8B4 BL 0x1C16DFC
	0x03A1F8B8 CBZ X20, 0x3A1F900
	0x03A1F8BC LDR X8, [X22]
	0x03A1F8C0 SCVTF S0, W21
	0x03A1F8C4 MOV X0, X20
	0x03A1F8C8 MOV X2, X31
	0x03A1F8CC LDR X8, [X8 + 0xB8]
	0x03A1F8D0 LDR W1, [X8 + 0x70]
	0x03A1F8D4 BL 0x3C15CD8
	0x03A1F8D8 LDR X8, [X22]
	0x03A1F8DC SCVTF S0, W19
	0x03A1F8E0 MOV X0, X20
	0x03A1F8E4 LDP X20, X19, [X31 + 0x20]
	0x03A1F8E8 LDR X8, [X8 + 0xB8]
	0x03A1F8EC LDP X22, X21, [X31 + 0x10]
	0x03A1F8F0 MOV X2, X31
	0x03A1F8F4 LDR W1, [X8 + 0x74]
	0x03A1F8F8 LDP X30, X23, [X31], #0x30
	0x03A1F8FC B 0x3C15CD8
	0x03A1F900 BL 0x1C16F20
	0x03A1F904 STR X30, [X31 - 0x40]!
	0x03A1F908 STP X24, X23, [X31 + 0x10]
	0x03A1F90C STP X22, X21, [X31 + 0x20]
	0x03A1F910 STP X20, X19, [X31 + 0x30]
	0x03A1F914 ADRP X21, 0x9C2000
	0x03A1F918 LDRB W8, [X21 + 0xFFC]
	0x03A1F91C MOV W19, W1
	0x03A1F920 MOV X20, X0
	0x03A1F924 TBNZ X8, 0x0, 0x3A1F93C
	0x03A1F928 ADRP X0, 0x6D4000
	0x03A1F92C LDR X0, [X0 + 0x598]
	0x03A1F930 BL 0x1C16CF4
	0x03A1F934 MOVZ W8, 0x1
	0x03A1F938 STRB W8, [X21 + 0xFFC]
	0x03A1F93C CBZ X20, 0x3A1FA48
	0x03A1F940 LDR W23, [X20 + 0x24]
	0x03A1F944 LDR W22, [X20 + 0x70]
	0x03A1F948 CMP W23, 0x3
	0x03A1F94C B.NE 0x3A1F9E0
	0x03A1F950 ADRP X24, 0x6D4000
	0x03A1F954 LDR X24, [X24 + 0x598]
	0x03A1F958 LDR X21, [X20 + 0x60]
	0x03A1F95C LDR X0, [X24]
	0x03A1F960 LDR W8, [X0 + 0xE0]
	0x03A1F964 CBNZ W8, 0x3A1F96C
	0x03A1F968 BL 0x1C16DFC
	0x03A1F96C MOV X0, X21
	0x03A1F970 MOV X1, X31
	0x03A1F974 MOV X2, X31
	0x03A1F978 BL 0x3C354F8
	0x03A1F97C TBZ X0, 0x0, 0x3A1F9EC
	0x03A1F980 LDR W8, [X20 + 0x24]
	0x03A1F984 MOVZ W9, 0x58
	0x03A1F988 CMP W8, 0x3
	0x03A1F98C MOVZ W8, 0x60
	0x03A1F990 CSEL X8, X8, X9, EQ
	0x03A1F994 LDR X0, [X20, X8, LSL]
	0x03A1F998 CBZ X0, 0x3A1FA48
	0x03A1F99C MOV X1, X31
	0x03A1F9A0 BL 0x3C41990
	0x03A1F9A4 LDR X8, [X24]
	0x03A1F9A8 MOV X21, X0
	0x03A1F9AC LDR W9, [X8 + 0xE0]
	0x03A1F9B0 CBNZ W9, 0x3A1F9BC
	0x03A1F9B4 MOV X0, X8
	0x03A1F9B8 BL 0x1C16DFC
	0x03A1F9BC MOV X0, X21
	0x03A1F9C0 MOV X1, X31
	0x03A1F9C4 MOV X2, X31
	0x03A1F9C8 BL 0x3C354F8
	0x03A1F9CC ANDS W31, W0, 0x1
	0x03A1F9D0 MOVZ W9, 0x10
	0x03A1F9D4 MOV W8, W31
	0x03A1F9D8 CSEL W9, W9, W31, NE
	0x03A1F9DC B 0x3A1F9F4
	0x03A1F9E0 MOV W9, W31
	0x03A1F9E4 MOVZ W8, 0x2
	0x03A1F9E8 B 0x3A1F9F4
	0x03A1F9EC MOV W8, W31
	0x03A1F9F0 MOV W9, W31
	0x03A1F9F4 LDR W11, [X20 + 0x78]
	0x03A1F9F8 CMP W23, 0x2
	0x03A1F9FC AND W10, W19, 0x1
	0x03A1FA00 CSET W12, EQ
	0x03A1FA04 CMP W22, 0x1
	0x03A1FA08 CSET W13, NE
	0x03A1FA0C BFM W10, W12, 0x1D, 0x0
	0x03A1FA10 BFM W10, W13, 0x1E, 0x0
	0x03A1FA14 CMP W11, 0x2
	0x03A1FA18 ORR W8, W10, W8, 0x0
	0x03A1FA1C CSET W10, NE
	0x03A1FA20 CMP W11, 0x0
	0x03A1FA24 LDP X20, X19, [X31 + 0x30]
	0x03A1FA28 LDP X22, X21, [X31 + 0x20]
	0x03A1FA2C LDP X24, X23, [X31 + 0x10]
	0x03A1FA30 CSET W11, EQ
	0x03A1FA34 ORR W8, W8, W9, 0x0
	0x03A1FA38 BFM W8, W11, 0x1B, 0x0
	0x03A1FA3C ORR W0, W8, W10, 0x6
	0x03A1FA40 LDR X30, [X31], #0x40
	0x03A1FA44 RET
	0x03A1FA48 BL 0x1C16F20
	0x03A1FA4C STP X30, X23, [X31 - 0x30]!
	0x03A1FA50 STP X22, X21, [X31 + 0x10]
	0x03A1FA54 STP X20, X19, [X31 + 0x20]
	0x03A1FA58 ADRP X22, 0x9C2000
	0x03A1FA5C LDRB W8, [X22 + 0xFFD]
	0x03A1FA60 MOV W21, W2
	0x03A1FA64 MOV X19, X1
	0x03A1FA68 MOV X20, X0
	0x03A1FA6C TBNZ X8, 0x0, 0x3A1FA9C
	0x03A1FA70 ADRP X0, 0x6FC000
	0x03A1FA74 LDR X0, [X0 + 0x8F8]
	0x03A1FA78 BL 0x1C16CF4
	0x03A1FA7C ADRP X0, 0x6D4000
	0x03A1FA80 LDR X0, [X0 + 0x598]
	0x03A1FA84 BL 0x1C16CF4
	0x03A1FA88 ADRP X0, 0x735000
	0x03A1FA8C LDR X0, [X0 + 0x658]
	0x03A1FA90 BL 0x1C16CF4
	0x03A1FA94 MOVZ W8, 0x1
	0x03A1FA98 STRB W8, [X22 + 0xFFD]
	0x03A1FA9C CBZ X19, 0x3A1FD24
	0x03A1FAA0 CBZ X20, 0x3A1FD24
	0x03A1FAA4 LDR W22, [X19 + 0x24]
	0x03A1FAA8 ADRP X8, 0x6FC000
	0x03A1FAAC LDR X8, [X8 + 0x8F8]
	0x03A1FAB0 CMP W22, 0x3
	0x03A1FAB4 TBZ X21, 0x0, 0x3A1FAEC
	0x03A1FAB8 LDR X0, [X8]
	0x03A1FABC MOVZ W8, 0x80
	0x03A1FAC0 MOVZ W9, 0x90
	0x03A1FAC4 CSEL X8, X9, X8, EQ
	0x03A1FAC8 LDR W9, [X0 + 0xE0]
	0x03A1FACC LDR X20, [X20, X8, LSL]
	0x03A1FAD0 CBNZ W9, 0x3A1FAD8
	0x03A1FAD4 BL 0x1C16DFC
	0x03A1FAD8 MOV X0, X20
	0x03A1FADC MOV X1, X31
	0x03A1FAE0 BL 0x39E1920
	0x03A1FAE4 MOV X20, X0
	0x03A1FAE8 B 0x3A1FB84
	0x03A1FAEC LDR X0, [X8]
	0x03A1FAF0 MOVZ W8, 0x78
	0x03A1FAF4 MOVZ W9, 0x88
	0x03A1FAF8 CSEL X8, X9, X8, EQ
	0x03A1FAFC LDR W9, [X0 + 0xE0]
	0x03A1FB00 LDR X20, [X20, X8, LSL]
	0x03A1FB04 CBNZ W9, 0x3A1FB0C
	0x03A1FB08 BL 0x1C16DFC
	0x03A1FB0C MOV X0, X20
	0x03A1FB10 MOV X1, X31
	0x03A1FB14 BL 0x39E1920
	0x03A1FB18 ADRP X21, 0x735000
	0x03A1FB1C LDR X21, [X21 + 0x658]
	0x03A1FB20 LDR W23, [X19 + 0x70]
	0x03A1FB24 MOV X20, X0
	0x03A1FB28 LDR X8, [X21]
	0x03A1FB2C LDR W9, [X8 + 0xE0]
	0x03A1FB30 CBZ W9, 0x3A1FB4C
	0x03A1FB34 CBZ W23, 0x3A1FB58
	0x03A1FB38 MOVZ W1, 0x5
	0x03A1FB3C MOVZ W2, 0xA
	0x03A1FB40 MOV X0, X20
	0x03A1FB44 BL 0x3A1F868
	0x03A1FB48 B 0x3A1FB84
	0x03A1FB4C MOV X0, X8
	0x03A1FB50 BL 0x1C16DFC
	0x03A1FB54 CBNZ W23, 0x3A1FB38
	0x03A1FB58 MOVZ W1, 0x1
	0x03A1FB5C MOVZ W2, 0x1
	0x03A1FB60 MOV X0, X20
	0x03A1FB64 BL 0x3A1F868
	0x03A1FB68 CBZ X20, 0x3A1FD24
	0x03A1FB6C LDR X8, [X21]
	0x03A1FB70 MOV X0, X20
	0x03A1FB74 MOV X2, X31
	0x03A1FB78 LDR X8, [X8 + 0xB8]
	0x03A1FB7C LDR X1, [X8 + 0x40]
	0x03A1FB80 BL 0x3C14E3C
	0x03A1FB84 LDR W8, [X19 + 0x24]
	0x03A1FB88 CMP W8, 0x2
	0x03A1FB8C B.NE 0x3A1FBC4
	0x03A1FB90 ADRP X21, 0x735000
	0x03A1FB94 LDR X21, [X21 + 0x658]
	0x03A1FB98 LDR X0, [X21]
	0x03A1FB9C LDR W8, [X0 + 0xE0]
	0x03A1FBA0 CBNZ W8, 0x3A1FBA8
	0x03A1FBA4 BL 0x1C16DFC
	0x03A1FBA8 CBZ X20, 0x3A1FD24
	0x03A1FBAC LDR X8, [X21]
	0x03A1FBB0 MOV X0, X20
	0x03A1FBB4 MOV X2, X31
	0x03A1FBB8 LDR X8, [X8 + 0xB8]
	0x03A1FBBC LDR X1, [X8 + 0x20]
	0x03A1FBC0 BL 0x3C14E3C
	0x03A1FBC4 CMP W22, 0x3
	0x03A1FBC8 B.NE 0x3A1FC94
	0x03A1FBCC ADRP X22, 0x6D4000
	0x03A1FBD0 LDR W8, [X19 + 0x24]
	0x03A1FBD4 LDR X22, [X22 + 0x598]
	0x03A1FBD8 MOVZ W9, 0x58
	0x03A1FBDC MOVZ W10, 0x60
	0x03A1FBE0 CMP W8, 0x3
	0x03A1FBE4 LDR X0, [X22]
	0x03A1FBE8 CSEL X8, X10, X9, EQ
	0x03A1FBEC LDR X21, [X19, X8, LSL]
	0x03A1FBF0 LDR W9, [X0 + 0xE0]
	0x03A1FBF4 CBNZ W9, 0x3A1FBFC
	0x03A1FBF8 BL 0x1C16DFC
	0x03A1FBFC MOV X0, X21
	0x03A1FC00 MOV X1, X31
	0x03A1FC04 MOV X2, X31
	0x03A1FC08 BL 0x3C354F8
	0x03A1FC0C TBZ X0, 0x0, 0x3A1FC94
	0x03A1FC10 LDR W8, [X19 + 0x24]
	0x03A1FC14 MOVZ W9, 0x58
	0x03A1FC18 CMP W8, 0x3
	0x03A1FC1C MOVZ W8, 0x60
	0x03A1FC20 CSEL X8, X8, X9, EQ
	0x03A1FC24 LDR X0, [X19, X8, LSL]
	0x03A1FC28 CBZ X0, 0x3A1FD24
	0x03A1FC2C MOV X1, X31
	0x03A1FC30 BL 0x3C41990
	0x03A1FC34 LDR X8, [X22]
	0x03A1FC38 MOV X21, X0
	0x03A1FC3C LDR W9, [X8 + 0xE0]
	0x03A1FC40 CBNZ W9, 0x3A1FC4C
	0x03A1FC44 MOV X0, X8
	0x03A1FC48 BL 0x1C16DFC
	0x03A1FC4C MOV X0, X21
	0x03A1FC50 MOV X1, X31
	0x03A1FC54 MOV X2, X31
	0x03A1FC58 BL 0x3C354F8
	0x03A1FC5C TBZ X0, 0x0, 0x3A1FC94
	0x03A1FC60 ADRP X21, 0x735000
	0x03A1FC64 LDR X21, [X21 + 0x658]
	0x03A1FC68 LDR X0, [X21]
	0x03A1FC6C LDR W8, [X0 + 0xE0]
	0x03A1FC70 CBNZ W8, 0x3A1FC78
	0x03A1FC74 BL 0x1C16DFC
	0x03A1FC78 CBZ X20, 0x3A1FD24
	0x03A1FC7C LDR X8, [X21]
	0x03A1FC80 MOV X0, X20
	0x03A1FC84 MOV X2, X31
	0x03A1FC88 LDR X8, [X8 + 0xB8]
	0x03A1FC8C LDR X1, [X8 + 0x28]
	0x03A1FC90 BL 0x3C14E3C
	0x03A1FC94 LDR W8, [X19 + 0x78]
	0x03A1FC98 CBNZ W8, 0x3A1FCD4
	0x03A1FC9C ADRP X21, 0x735000
	0x03A1FCA0 LDR X21, [X21 + 0x658]
	0x03A1FCA4 LDR X0, [X21]
	0x03A1FCA8 LDR W8, [X0 + 0xE0]
	0x03A1FCAC CBNZ W8, 0x3A1FCB4
	0x03A1FCB0 BL 0x1C16DFC
	0x03A1FCB4 CBZ X20, 0x3A1FD24
	0x03A1FCB8 LDR X8, [X21]
	0x03A1FCBC MOV X0, X20
	0x03A1FCC0 MOV X2, X31
	0x03A1FCC4 LDR X8, [X8 + 0xB8]
	0x03A1FCC8 LDR X1, [X8 + 0x30]
	0x03A1FCCC BL 0x3C14E3C
	0x03A1FCD0 LDR W8, [X19 + 0x78]
	0x03A1FCD4 CMP W8, 0x2
	0x03A1FCD8 B.EQ 0x3A1FD10
	0x03A1FCDC ADRP X19, 0x735000
	0x03A1FCE0 LDR X19, [X19 + 0x658]
	0x03A1FCE4 LDR X0, [X19]
	0x03A1FCE8 LDR W8, [X0 + 0xE0]
	0x03A1FCEC CBNZ W8, 0x3A1FCF4
	0x03A1FCF0 BL 0x1C16DFC
	0x03A1FCF4 CBZ X20, 0x3A1FD24
	0x03A1FCF8 LDR X8, [X19]
	0x03A1FCFC MOV X0, X20
	0x03A1FD00 MOV X2, X31
	0x03A1FD04 LDR X8, [X8 + 0xB8]
	0x03A1FD08 LDR X1, [X8 + 0x38]
	0x03A1FD0C BL 0x3C14E3C
	0x03A1FD10 MOV X0, X20
	0x03A1FD14 LDP X20, X19, [X31 + 0x20]
	0x03A1FD18 LDP X22, X21, [X31 + 0x10]
	0x03A1FD1C LDP X30, X23, [X31], #0x30
	0x03A1FD20 RET
	0x03A1FD24 BL 0x1C16F20
	0x03A1FD28 SUB X31, X31, 0x70
	0x03A1FD2C STP X29, X30, [X31 + 0x10]
	0x03A1FD30 STP X28, X27, [X31 + 0x20]
	0x03A1FD34 STP X26, X25, [X31 + 0x30]
	0x03A1FD38 STP X24, X23, [X31 + 0x40]
	0x03A1FD3C STP X22, X21, [X31 + 0x50]
	0x03A1FD40 STP X20, X19, [X31 + 0x60]
	0x03A1FD44 ADRP X28, 0x9C2000
	0x03A1FD48 ADRP X29, 0x731000
	0x03A1FD4C ADRP X19, 0x735000
	0x03A1FD50 ADRP X20, 0x735000
	0x03A1FD54 ADRP X27, 0x735000
	0x03A1FD58 ADRP X26, 0x735000
	0x03A1FD5C ADRP X25, 0x735000
	0x03A1FD60 ADRP X24, 0x735000
	0x03A1FD64 ADRP X23, 0x735000
	0x03A1FD68 ADRP X22, 0x735000
	0x03A1FD6C ADRP X21, 0x6D4000
	0x03A1FD70 LDR X29, [X29 + 0x598]
	0x03A1FD74 LDR X19, [X19 + 0x780]
	0x03A1FD78 LDR X20, [X20 + 0x658]
	0x03A1FD7C LDR X27, [X27 + 0x6F0]
	0x03A1FD80 LDR X26, [X26 + 0x788]
	0x03A1FD84 LDRB W8, [X28 + 0xFFF]
	0x03A1FD88 LDR X25, [X25 + 0x790]
	0x03A1FD8C LDR X24, [X24 + 0x798]
	0x03A1FD90 LDR X23, [X23 + 0x7A0]
	0x03A1FD94 LDR X22, [X22 + 0x7A8]
	0x03A1FD98 LDR X21, [X21 + 0xAC8]
	0x03A1FD9C TBNZ X8, 0x0, 0x3A1FFB8
	0x03A1FDA0 ADRP X0, 0x6D5000
	0x03A1FDA4 LDR X0, [X0 + 0xE58]
	0x03A1FDA8 BL 0x1C16CF4
	0x03A1FDAC ADRP X0, 0x731000
	0x03A1FDB0 LDR X0, [X0 + 0x598]
	0x03A1FDB4 BL 0x1C16CF4
	0x03A1FDB8 ADRP X0, 0x735000
	0x03A1FDBC LDR X0, [X0 + 0x658]
	0x03A1FDC0 BL 0x1C16CF4
	0x03A1FDC4 ADRP X0, 0x6D4000
	0x03A1FDC8 LDR X0, [X0 + 0xAC8]
	0x03A1FDCC BL 0x1C16CF4
	0x03A1FDD0 ADRP X0, 0x735000
	0x03A1FDD4 LDR X0, [X0 + 0x7B0]
	0x03A1FDD8 BL 0x1C16CF4
	0x03A1FDDC ADRP X0, 0x735000
	0x03A1FDE0 LDR X0, [X0 + 0x7B8]
	0x03A1FDE4 BL 0x1C16CF4
	0x03A1FDE8 ADRP X0, 0x735000
	0x03A1FDEC LDR X0, [X0 + 0x7C0]
	0x03A1FDF0 BL 0x1C16CF4
	0x03A1FDF4 ADRP X0, 0x735000
	0x03A1FDF8 LDR X0, [X0 + 0x7C8]
	0x03A1FDFC BL 0x1C16CF4
	0x03A1FE00 ADRP X0, 0x735000
	0x03A1FE04 LDR X0, [X0 + 0x7D0]
	0x03A1FE08 BL 0x1C16CF4
	0x03A1FE0C ADRP X0, 0x735000
	0x03A1FE10 LDR X0, [X0 + 0x7D8]
	0x03A1FE14 BL 0x1C16CF4
	0x03A1FE18 ADRP X0, 0x735000
	0x03A1FE1C LDR X0, [X0 + 0x7E0]
	0x03A1FE20 BL 0x1C16CF4
	0x03A1FE24 ADRP X0, 0x735000
	0x03A1FE28 LDR X0, [X0 + 0x7E8]

ISIL:
	001 Move [X31-112], D8
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Subtract X31, X31, 1696
	015 Move [X31+16], X5
	016 Move [X31+24], X1
	017 Move X20, 0x9C3000
	018 Move X23, 0x736000
	019 Move W8, [X20+4083]
	020 Move X23, [X23+1696]
	021 Move X19, X6
	022 Move W21, W4
	023 Move X22, X3
	024 Move W29, W2
	025 Move X25, X0
	026 Move TEMP, X8
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {62}
	030 Move X0, 0x6D5000
	031 Move X0, [X0+2600]
	032 Call 0x1C17CF4
	033 Move X0, 0x736000
	034 Move X0, [X0+1632]
	035 Call 0x1C17CF4
	036 Move X0, 0x736000
	037 Move X0, [X0+1352]
	038 Call 0x1C17CF4
	039 Move X0, 0x736000
	040 Move X0, [X0+1648]
	041 Call 0x1C17CF4
	042 Move X0, 0x736000
	043 Move X0, [X0+1704]
	044 Call 0x1C17CF4
	045 Move X0, 0x736000
	046 Move X0, [X0+1712]
	047 Call 0x1C17CF4
	048 Move X0, 0x6D5000
	049 Move X0, [X0+1432]
	050 Call 0x1C17CF4
	051 Move X0, 0x736000
	052 Move X0, [X0+1624]
	053 Call 0x1C17CF4
	054 Move X0, 0x736000
	055 Move X0, [X0+1696]
	056 Call 0x1C17CF4
	057 Move X0, 0x736000
	058 Move X0, [X0+1896]
	059 Call 0x1C17CF4
	060 Move W8, 1
	061 Move [X20+4083], W8
	062 Move X0, [X23]
	063 Move [X31+1688], X31
	064 Move [X31+1680], X31
	065 Move W8, [X0+224]
	066 Compare W8, 0
	067 JumpIfNotEqual {69}
	068 Call 0x1C17DFC
	069 Move X20, 0x9C4000
	070 Move W8, [X20+17]
	071 Compare W8, 0
	072 JumpIfNotEqual {78}
	073 Move X0, 0x736000
	074 Move X0, [X0+1696]
	075 Call 0x1C17CF4
	076 Move W8, 1
	077 Move [X20+17], W8
	078 Move X0, [X23]
	079 Move W8, [X0+224]
	080 Compare W8, 0
	081 JumpIfNotEqual {84}
	082 Call 0x1C17DFC
	083 Move X0, [X23]
	084 Move X8, [X0+184]
	085 Move W8, [X8+120]
	086 Move W20, W8
	087 ShiftRight W20, 30
	088 And W20, W20, 0x1FFFFFFF
	089 Compare W20, 0
	090 JumpIfEqual {548}
	091 Move [X31+56], X22
	092 Compare X19, 0
	093 JumpIfEqual {575}
	094 Move X8, 0x736000
	095 Move X8, [X8+1712]
	096 Move W1, [X19+24]
	097 Add X0, X31, 1680
	098 Move W2, 2
	099 Move X4, [X8]
	100 Move W3, 1
	101 Call NativeArray`1<Boolean>..ctor, X0, X1, X2, X3
	102 Move W8, [X19+24]
	103 NotImplemented "Instruction CMP not yet implemented."
	104 Move W24, W31
	105 Move W9, W20
	106 Move W23, 1
	107 Move [X31+48], X9
	108 Move W8, W8
	109 Subtract X28, X8, W24
	110 NotImplemented "Instruction CMP not yet implemented."
	111 Move W22, W31
	112 Move W20, W31
	113 Move X9, [X31+48]
	114 Move X8, W20
	115 NotImplemented "Instruction CMP not yet implemented."
	116 Move X8, 0x736000
	117 Move X8, [X8+1648]
	118 Add W26, W24, W22
	119 Move X0, X19
	120 Move W1, W26
	121 Move X2, [X8]
	122 Call List`1<Object>.get_Item, X0, X1
	123 Move X8, 0x736000
	124 Move X8, [X8+1624]
	125 Move X27, X0
	126 Move X8, [X8]
	127 Move W9, [X8+224]
	128 Compare W9, 0
	129 JumpIfNotEqual {132}
	130 Move X0, X8
	131 Call 0x1C17DFC
	132 Move X0, X27
	133 Move W1, W29
	134 Move W2, W21
	135 Call RendererLighting.ShouldRenderLight, X0, X1, X2
	136 Move TEMP, X0
	137 And TEMP, TEMP, 1
	138 Compare TEMP, 1
	139 JumpIfNotEqual {192}
	140 Move X8, 0x736000
	141 Move X8, [X8+1624]
	142 Move X0, [X8]
	143 Move W8, [X0+224]
	144 Compare W8, 0
	145 JumpIfNotEqual {147}
	146 Call 0x1C17DFC
	147 Move X0, X27
	148 Move W1, W21
	149 Call RendererLighting.CanCastShadows, X0, X1
	150 Move TEMP, X0
	151 And TEMP, TEMP, 1
	152 Compare TEMP, 1
	153 JumpIfNotEqual {192}
	154 Move X8, [X31+1680]
	155 Move X1, [X31+24]
	156 Add X0, X31, 976
	157 Move W2, 696
	158 Move [X8], W31
	159 Call 0x3EB2AC0
	160 Compare X27, 0
	161 JumpIfEqual {575}
	162 Move X8, 0x736000
	163 Move X8, [X8+1696]
	164 Move V8, [X27+128]
	165 Move X0, [X8]
	166 Move W8, [X0+224]
	167 Compare W8, 0
	168 JumpIfNotEqual {170}
	169 Call 0x1C17DFC
	170 Add X0, X31, 280
	171 Add X1, X31, 976
	172 Move W2, 696
	173 Call 0x3EB2AC0
	174 Move X2, [X31+56]
	175 Add X1, X31, 280
	176 Move X0, X25
	177 Move W3, W21
	178 Move X4, X27
	179 Move W5, W20
	180 Move V0, V8
	181 Move X6, X31
	182 Call ShadowRendering.PrerenderShadows, X0, X1, X2, X3, X4, X5, V0
	183 Move TEMP, X0
	184 And TEMP, TEMP, 1
	185 Compare TEMP, 1
	186 JumpIfNotEqual {192}
	187 Move X8, [X31+1680]
	188 Move X9, W26
	189 Move W10, 1
	190 Add W20, W20, 1
	191 Move [X8], W10
	192 Add W22, W22, 1
	193 NotImplemented "Instruction CMP not yet implemented."
	194 Move W20, W31
	195 Move W22, W31
	196 NotImplemented "Instruction CMP not yet implemented."
	197 NotImplemented "Instruction CSET not yet implemented."
	198 NotImplemented "Instruction BIC not yet implemented."
	199 Move X23, 0x736000
	200 Move X0, [X31+56]
	201 Move X23, [X23+1624]
	202 Move TEMP, X8
	203 And TEMP, TEMP, 1
	204 Compare TEMP, 1
	205 JumpIfEqual {228}
	206 Move X9, [X31+16]
	207 Move X8, [X9+32]
	208 Move V1, [X9]
	209 Move V0, [X9+16]
	210 Move [X31+1008], X8
	211 Move [X31+976], V1
	212 Move [X31+984], V0
	213 Compare X0, 0
	214 JumpIfEqual {575}
	215 Move V0, [X31+976]
	216 Move V1, [X31+992]
	217 Move X8, [X31+1008]
	218 Add X1, X31, 240
	219 Move W4, 2
	220 Move W5, 3
	221 Move W2, W31
	222 Move W3, W31
	223 Move X6, X31
	224 Move [X31+240], V0
	225 Move [X31+248], V1
	226 Move [X31+272], X8
	227 Call CommandBuffer.SetRenderTarget, X0, X1, X2, X3, X4, X5
	228 NotImplemented "Instruction CMP not yet implemented."
	229 Move X26, X31
	230 Move W8, W22
	231 Move [X31+36], W31
	232 Move [X31+1704], X8
	233 Move X8, 0x736000
	234 Move X8, [X8+1648]
	235 Add W20, W24, W26
	236 Move X0, X19
	237 Move W1, W20
	238 Move X2, [X8]
	239 Call List`1<Object>.get_Item, X0, X1
	240 Move X8, [X23]
	241 Move X27, X0
	242 Move W9, [X8+224]
	243 Compare W9, 0
	244 JumpIfNotEqual {247}
	245 Move X0, X8
	246 Call 0x1C17DFC
	247 Move X0, X27
	248 Move W1, W29
	249 Move W2, W21
	250 Call RendererLighting.ShouldRenderLight, X0, X1, X2
	251 Move TEMP, X0
	252 And TEMP, TEMP, 1
	253 Compare TEMP, 1
	254 JumpIfNotEqual {521}
	255 Compare X25, 0
	256 JumpIfEqual {575}
	257 Move X8, [X25]
	258 Move X10, 0x736000
	259 NotImplemented "Instruction LDRH not yet implemented."
	260 Move X10, [X10+1632]
	261 Move X1, [X10]
	262 Compare X9, 0
	263 JumpIfEqual {270}
	264 Move X10, [X8+176]
	265 Add X10, X10, 8
	266 NotImplemented "Instruction LDUR not yet implemented."
	267 NotImplemented "Instruction CMP not yet implemented."
	268 Subtract X9, X9, 1
	269 Add X10, X10, 16
	270 Move X0, X25
	271 Move W2, W31
	272 Call 0x1C5D788
	273 NotImplemented "Instruction LDRSW not yet implemented."
	274 Add X8, X8, X9
	275 Add X0, X8, 312
	276 Move X8, [X0]
	277 Move X1, [X0+8]
	278 Move X0, X25
	279 NotImplemented "Instruction BLR not yet implemented."
	280 Move X8, [X23]
	281 Move X28, X0
	282 Move W9, [X8+224]
	283 Compare W9, 0
	284 JumpIfNotEqual {287}
	285 Move X0, X8
	286 Call 0x1C17DFC
	287 Move X0, X28
	288 Move X1, X27
	289 Move W2, W31
	290 Call RendererLighting.GetLightMaterial, X0, X1, X2
	291 Move X8, 0x6D5000
	292 Move X8, [X8+1432]
	293 Move X28, X0
	294 Move X8, [X8]
	295 Move W9, [X8+224]
	296 Compare W9, 0
	297 JumpIfNotEqual {300}
	298 Move X0, X8
	299 Call 0x1C17DFC
	300 Move X0, X28
	301 Move X1, X31
	302 Move X2, X31
	303 Call Object.op_Equality, X0, X1
	304 Move TEMP, X0
	305 And TEMP, TEMP, 1
	306 Compare TEMP, 1
	307 JumpIfEqual {519}
	308 Compare X27, 0
	309 JumpIfEqual {575}
	310 Move X0, X27
	311 Call Light2D.get_lightMesh, X0
	312 Move X8, 0x6D5000
	313 Move X8, [X8+1432]
	314 Move X8, [X8]
	315 Move W9, [X8+224]
	316 Compare W9, 0
	317 JumpIfNotEqual {324}
	318 Move W23, W21
	319 Move X21, X0
	320 Move X0, X8
	321 Call 0x1C17DFC
	322 Move X0, X21
	323 Move W21, W23
	324 Move X1, X31
	325 Move X2, X31
	326 Move [X31+40], X0
	327 Call Object.op_Equality, X0, X1
	328 Move TEMP, X0
	329 And TEMP, TEMP, 1
	330 Compare TEMP, 1
	331 JumpIfEqual {519}
	332 Move X8, [X31+1680]
	333 Move W8, [X8]
	334 Compare W8, 0
	335 JumpIfEqual {350}
	336 Move X8, 0x736000
	337 Move X8, [X8+1696]
	338 Move X0, [X8]
	339 Move W8, [X0+224]
	340 Compare W8, 0
	341 JumpIfNotEqual {343}
	342 Call 0x1C17DFC
	343 Move W2, [X31+36]
	344 Move X0, [X31+56]
	345 Move X1, X27
	346 Move X3, X31
	347 Add W20, W2, 1
	348 Call ShadowRendering.SetGlobalShadowTexture, X0, X1, X2
	349 Move [X31+36], W20
	350 Move X8, 0x736000
	351 Move X8, [X8+1696]
	352 Move X0, [X8]
	353 Move W8, [X0+224]
	354 Compare W8, 0
	355 JumpIfNotEqual {357}
	356 Call 0x1C17DFC
	357 Move X0, [X31+56]
	358 Move X1, X31
	359 Call ShadowRendering.DisableGlobalShadowTexture, X0
	360 Move W8, [X27+36]
	361 NotImplemented "Instruction CMP not yet implemented."
	362 Move X8, 0x6D5000
	363 Move X8, [X8+1432]
	364 Move X20, [X27+88]
	365 Move X0, [X8]
	366 Move W8, [X0+224]
	367 Compare W8, 0
	368 JumpIfNotEqual {370}
	369 Call 0x1C17DFC
	370 Move X0, X20
	371 Move X1, X31
	372 Move X2, X31
	373 Call Object.op_Inequality, X0, X1
	374 Move TEMP, X0
	375 And TEMP, TEMP, 1
	376 Compare TEMP, 1
	377 JumpIfNotEqual {448}
	378 Move W8, [X27+36]
	379 Move W9, 96
	380 NotImplemented "Instruction CMP not yet implemented."
	381 Move W8, 88
	382 NotImplemented "Instruction CSEL not yet implemented."
	383 Move X0, [X27]
	384 Compare X0, 0
	385 JumpIfEqual {575}
	386 Move X1, X31
	387 Call Sprite.get_texture, X0
	388 Move X8, 0x6D5000
	389 Move X8, [X8+1432]
	390 Move X20, X0
	391 Move X8, [X8]
	392 Move W9, [X8+224]
	393 Compare W9, 0
	394 JumpIfNotEqual {397}
	395 Move X0, X8
	396 Call 0x1C17DFC
	397 Move X0, X20
	398 Move X1, X31
	399 Move X2, X31
	400 Call Object.op_Inequality, X0, X1
	401 Move TEMP, X0
	402 And TEMP, TEMP, 1
	403 Compare TEMP, 1
	404 JumpIfNotEqual {448}
	405 Move X20, 0x736000
	406 Move X20, [X20+1624]
	407 Move X0, [X20]
	408 Move W8, [X0+224]
	409 Compare W8, 0
	410 JumpIfNotEqual {413}
	411 Call 0x1C17DFC
	412 Move X0, [X20]
	413 Move W8, [X27+36]
	414 Move W9, 96
	415 NotImplemented "Instruction CMP not yet implemented."
	416 Move W8, 88
	417 NotImplemented "Instruction CSEL not yet implemented."
	418 Move X8, [X27]
	419 Compare X8, 0
	420 JumpIfEqual {575}
	421 Move X9, [X0+184]
	422 Move X0, X8
	423 Move X1, X31
	424 Move W20, [X9+136]
	425 Call Sprite.get_texture, X0
	426 Add X8, X31, 128
	427 Move X1, X31
	428 Call RenderTargetIdentifier.op_Implicit, X0
	429 Move V0, [X31+128]
	430 Move V1, [X31+144]
	431 Move X8, [X31+160]
	432 Move X0, [X31+56]
	433 Move [X31+976], V0
	434 Move [X31+984], V1
	435 Move [X31+1008], X8
	436 Compare X0, 0
	437 JumpIfEqual {575}
	438 Move V0, [X31+976]
	439 Move V1, [X31+992]
	440 Move X8, [X31+1008]
	441 Add X2, X31, 192
	442 Move W1, W20
	443 Move X3, X31
	444 Move [X31+192], V0
	445 Move [X31+200], V1
	446 Move [X31+224], X8
	447 Call CommandBuffer.SetGlobalTexture, X0, X1, X2
	448 Move X8, 0x736000
	449 Move X8, [X8+1624]
	450 Move X0, [X8]
	451 Move W8, [X0+224]
	452 Compare W8, 0
	453 JumpIfNotEqual {455}
	454 Call 0x1C17DFC
	455 Move X1, [X31+56]
	456 Move X2, X27
	457 Call RendererLighting.SetGeneralLightShaderGlobals, X0, X1, X2
	458 Move W8, [X27+120]
	459 NotImplemented "Instruction CMP not yet implemented."
	460 Move W8, [X27+36]
	461 NotImplemented "Instruction CMP not yet implemented."
	462 Move X8, 0x736000
	463 Move X8, [X8+1624]
	464 Move X0, [X8]
	465 Move W8, [X0+224]
	466 Compare W8, 0
	467 JumpIfNotEqual {469}
	468 Call 0x1C17DFC
	469 Move X1, [X31+56]
	470 Move X0, X25
	471 Move X2, X27
	472 Call RendererLighting.SetPointLightShaderGlobals, X0, X1, X2
	473 Move W8, [X27+36]
	474 NotImplemented "Instruction CMP not yet implemented."
	475 Move X0, X27
	476 Move X1, X31
	477 Call Component.get_transform, X0
	478 Compare X0, 0
	479 JumpIfEqual {575}
	480 Add X8, X31, 128
	481 Move X1, X31
	482 Call Transform.get_localToWorldMatrix, X0
	483 Move V0, [X31+128]
	484 Move V1, [X31+144]
	485 Move V2, [X31+160]
	486 Move V3, [X31+176]
	487 Move X0, [X31+56]
	488 Move [X31+976], V0
	489 Move [X31+984], V1
	490 Move [X31+1008], V2
	491 Move [X31+1016], V3
	492 Compare X0, 0
	493 JumpIfEqual {575}
	494 Move V0, [X31+976]
	495 Move V1, [X31+992]
	496 Move V2, [X31+1008]
	497 Move V3, [X31+1024]
	498 Move X1, [X31+40]
	499 Add X2, X31, 64
	500 Move X3, X28
	501 Move X4, X31
	502 Move [X31+64], V0
	503 Move [X31+72], V1
	504 Move [X31+96], V2
	505 Move [X31+104], V3
	506 Call CommandBuffer.DrawMesh, X0, X1, X2, X3
	507 Move X8, 0x736000
	508 Move X8, [X8+1624]
	509 Move X0, [X8]
	510 Move W8, [X0+224]
	511 Compare W8, 0
	512 JumpIfNotEqual {514}
	513 Call 0x1C17DFC
	514 Move X0, [X31+56]
	515 Move X2, [X31+40]
	516 Move X1, X27
	517 Move X3, X28
	518 Call RendererLighting.DrawPointLight, X0, X1, X2, X3
	519 Move X23, 0x736000
	520 Move X23, [X23+1624]
	521 Move X8, [X31+1704]
	522 Add X26, X26, 1
	523 NotImplemented "Instruction CMP not yet implemented."
	524 Move W8, [X31+36]
	525 Move X26, 0x736000
	526 Move X23, [X31+56]
	527 Move X26, [X26+1696]
	528 Subtract W20, W8, 1
	529 Move X0, [X26]
	530 Move W8, [X0+224]
	531 Compare W8, 0
	532 JumpIfNotEqual {534}
	533 Call 0x1C17DFC
	534 Move X0, X23
	535 Move W1, W20
	536 Move X2, X31
	537 Call ShadowRendering.ReleaseShadowRenderTexture, X0, X1
	538 Subtract W20, W20, 1
	539 Move W8, [X19+24]
	540 Add W24, W22, W24
	541 Move W23, W31
	542 NotImplemented "Instruction CMP not yet implemented."
	543 Move X8, 0x736000
	544 Move X8, [X8+1704]
	545 Add X0, X31, 1680
	546 Move X1, [X8]
	547 Call NativeArray`1<Boolean>.Dispose, X0
	548 Move X8, 0x6D5000
	549 Move X8, [X8+2600]
	550 Move X0, [X8]
	551 Move W8, [X0+224]
	552 Compare W8, 0
	553 JumpIfNotEqual {555}
	554 Call 0x1C17DFC
	555 Move X8, 0x736000
	556 Move X8, [X8+1896]
	557 Move X1, X31
	558 Move X0, [X8]
	559 Call Debug.LogError, X0
	560 Add X31, X31, 1696
	561 Move X20, [X31+96]
	562 Move X19, [X31+104]
	563 Move X22, [X31+80]
	564 Move X21, [X31+88]
	565 Move X24, [X31+64]
	566 Move X23, [X31+72]
	567 Move X26, [X31+48]
	568 Move X25, [X31+56]
	569 Move X28, [X31+32]
	570 Move X27, [X31+40]
	571 Move X29, [X31+16]
	572 Move X30, [X31+24]
	573 Move V8, [X31+112]
	574 Return 
	575 Call 0x1C17F20

Method: System.Void RenderLightVolumes(UnityEngine.Rendering.Universal.IRenderPass2D pass, UnityEngine.Rendering.Universal.RenderingData renderingData, UnityEngine.Rendering.CommandBuffer cmd, System.Int32 layerToRender, System.Int32 endLayerValue, UnityEngine.Rendering.RenderTargetIdentifier renderTexture, UnityEngine.Rendering.RenderTargetIdentifier depthTexture, UnityEngine.Rendering.RenderBufferStoreAction intermediateStoreAction, UnityEngine.Rendering.RenderBufferStoreAction finalStoreAction, System.Boolean requiresRTInit, System.Collections.Generic.List`1<UnityEngine.Rendering.Universal.Light2D> lights)

Disassembly:
	0x03A1BB2C MOV X0, X21
	0x03A1BB30 MOV W1, W24
	0x03A1BB34 MOV X3, X31
	0x03A1BB38 BL 0x3C4FCFC
	0x03A1BB3C LDR X0, [X29]
	0x03A1BB40 LDR W8, [X0 + 0xE0]
	0x03A1BB44 CBNZ W8, 0x3A1BB4C
	0x03A1BB48 BL 0x1C16DFC
	0x03A1BB4C CMP X23, 0x0
	0x03A1BB50 CSET W2, EQ
	0x03A1BB54 MOV X0, X21
	0x03A1BB58 MOV W1, W23
	0x03A1BB5C BL 0x3A1AA80
	0x03A1BB60 ADD X23, X23, 0x1
	0x03A1BB64 B 0x3A1BAAC
	0x03A1BB68 ADD X0, X31, 0x6F8
	0x03A1BB6C MOV X1, X31
	0x03A1BB70 BL 0x39B1DB4
	0x03A1BB74 ADRP X8, 0x739000
	0x03A1BB78 LDR X8, [X8 + 0x658]
	0x03A1BB7C LDR X0, [X8]
	0x03A1BB80 LDR W8, [X0 + 0xE0]
	0x03A1BB84 CBNZ W8, 0x3A1BB8C
	0x03A1BB88 BL 0x1C16DFC
	0x03A1BB8C MOV X1, X21
	0x03A1BB90 BL 0x3A1C5C8
	0x03A1BB94 ADRP X8, 0x735000
	0x03A1BB98 LDR X8, [X8 + 0xC80]
	0x03A1BB9C LDR X0, [X8]
	0x03A1BBA0 LDR W8, [X0 + 0xE0]
	0x03A1BBA4 CBNZ W8, 0x3A1BBAC
	0x03A1BBA8 BL 0x1C16DFC
	0x03A1BBAC ADD X0, X31, 0x828
	0x03A1BBB0 MOV X1, X21
	0x03A1BBB4 MOV X2, X31
	0x03A1BBB8 BL 0x3C58FE4
	0x03A1BBBC CBZ X21, 0x3A1BD1C
	0x03A1BBC0 MOV X0, X21
	0x03A1BBC4 MOV X1, X31
	0x03A1BBC8 BL 0x3C4C310
	0x03A1BBCC LDR X8, [X20 + 0xF0]
	0x03A1BBD0 CBZ X8, 0x3A1BD1C
	0x03A1BBD4 LDRB W8, [X8 + 0x61]
	0x03A1BBD8 CBZ W8, 0x3A1BCA4
	0x03A1BBDC LDRH W2, [X20 + 0xFA]
	0x03A1BBE0 ADD X0, X31, 0xA88
	0x03A1BBE4 MOVZ W1, 0x8000
	0x03A1BBE8 MOV X3, X31
	0x03A1BBEC STR W31, [X31 + 0xA88]
	0x03A1BBF0 BL 0x3C5AE4C
	0x03A1BBF4 LDR W1, [X31 + 0xA88]
	0x03A1BBF8 ADD X0, X31, 0x810
	0x03A1BBFC MOV X2, X31
	0x03A1BC00 BL 0x3C54044
	0x03A1BC04 LDR X23, [X26 + 0x538]
	0x03A1BC08 ADD X0, X31, 0x9C0
	0x03A1BC0C ADD X1, X31, 0xB50
	0x03A1BC10 MOVZ W2, 0xC4
	0x03A1BC14 BL 0x3EB1AC0
	0x03A1BC18 ADD X4, X31, 0x810
	0x03A1BC1C ADD X5, X31, 0x9C0
	0x03A1BC20 MOV X1, X23
	0x03A1BC24 MOV X2, X21
	0x03A1BC28 MOV X3, X19
	0x03A1BC2C BL 0x3A18A38
	0x03A1BC30 LDR X23, [X26 + 0x538]
	0x03A1BC34 ADD X0, X31, 0x38
	0x03A1BC38 MOVZ W2, 0x2B8
	0x03A1BC3C MOV X1, X19
	0x03A1BC40 BL 0x3EB1AC0
	0x03A1BC44 ADD X2, X31, 0x38
	0x03A1BC48 MOV X0, X20
	0x03A1BC4C MOV X1, X23
	0x03A1BC50 MOV W3, W22
	0x03A1BC54 BL 0x3A18348
	0x03A1BC58 LDRH W8, [X20 + 0xFA]
	0x03A1BC5C ADD X0, X31, 0x34
	0x03A1BC60 MOVZ W2, 0x7FFF
	0x03A1BC64 MOV X3, X31
	0x03A1BC68 ADD W1, W8, 0x1
	0x03A1BC6C STR W31, [X31 + 0x34]
	0x03A1BC70 BL 0x3C5AE4C
	0x03A1BC74 LDR W1, [X31 + 0x34]
	0x03A1BC78 ADD X0, X31, 0x810
	0x03A1BC7C MOV X2, X31
	0x03A1BC80 BL 0x3C54044
	0x03A1BC84 LDR X20, [X26 + 0x538]
	0x03A1BC88 ADD X0, X31, 0x8F8
	0x03A1BC8C ADD X1, X31, 0xB50
	0x03A1BC90 MOVZ W2, 0xC4
	0x03A1BC94 BL 0x3EB1AC0
	0x03A1BC98 ADD X4, X31, 0x810
	0x03A1BC9C ADD X5, X31, 0x8F8
	0x03A1BCA0 B 0x3A1BCC0
	0x03A1BCA4 LDR X20, [X26 + 0x538]
	0x03A1BCA8 ADD X0, X31, 0x830
	0x03A1BCAC ADD X1, X31, 0xB50
	0x03A1BCB0 MOVZ W2, 0xC4
	0x03A1BCB4 BL 0x3EB1AC0
	0x03A1BCB8 ADD X4, X31, 0x810
	0x03A1BCBC ADD X5, X31, 0x830
	0x03A1BCC0 MOV X1, X20
	0x03A1BCC4 MOV X2, X21
	0x03A1BCC8 MOV X3, X19
	0x03A1BCCC BL 0x3A18A38
	0x03A1BCD0 MOV X0, X31
	0x03A1BCD4 BL 0x3C54010
	0x03A1BCD8 AND X1, X0, 0x0
	0x03A1BCDC ADD X0, X31, 0x810
	0x03A1BCE0 MOV X2, X31
	0x03A1BCE4 BL 0x3C54044
	0x03A1BCE8 LDR X8, [X25 + 0x28]
	0x03A1BCEC LDR X9, [X31 + 0xDA8]
	0x03A1BCF0 CMP X8, X9
	0x03A1BCF4 B.NE 0x3A1BD2C
	0x03A1BCF8 ADD X31, X31, 0xDB0
	0x03A1BCFC LDP X20, X19, [X31 + 0x50]
	0x03A1BD00 LDP X22, X21, [X31 + 0x40]
	0x03A1BD04 LDP X24, X23, [X31 + 0x30]
	0x03A1BD08 LDP X26, X25, [X31 + 0x20]
	0x03A1BD0C LDP X28, X27, [X31 + 0x10]
	0x03A1BD10 LDP X29, X30, [X31], #0x60
	0x03A1BD14 RET
	0x03A1BD18 BL 0x1C16F20
	0x03A1BD1C BL 0x1C16F20
	0x03A1BD20 BL 0x1C16F28
	0x03A1BD24 BL 0x1C16F20
	0x03A1BD28 BL 0x1C16F20
	0x03A1BD2C BL 0x3EB1B20
	0x03A1BD30 B 0x3A1BD68
	0x03A1BD34 B 0x3A1BD68
	0x03A1BD38 B 0x3A1BD68
	0x03A1BD3C B 0x3A1BD68
	0x03A1BD40 B 0x3A1BD68
	0x03A1BD44 B 0x3A1BD68
	0x03A1BD48 B 0x3A1BD68
	0x03A1BD4C B 0x3A1BD68
	0x03A1BD50 B 0x3A1BD68
	0x03A1BD54 B 0x3A1BD68
	0x03A1BD58 B 0x3A1BD68
	0x03A1BD5C B 0x3A1BD68
	0x03A1BD60 B 0x3A1BD68
	0x03A1BD64 B 0x3A1BD68
	0x03A1BD68 MOV X23, X0
	0x03A1BD6C CMP W1, 0x1
	0x03A1BD70 B.NE 0x3A1BD9C
	0x03A1BD74 MOV X0, X23
	0x03A1BD78 BL 0x3EB1AD0
	0x03A1BD7C LDR X24, [X0]
	0x03A1BD80 BL 0x3EB1AE0
	0x03A1BD84 ADD X0, X31, 0x6F8
	0x03A1BD88 MOV X1, X31
	0x03A1BD8C BL 0x39B1DB4
	0x03A1BD90 CBZ X24, 0x3A1BB74
	0x03A1BD94 MOV X0, X24
	0x03A1BD98 BL 0x1C16F18
	0x03A1BD9C MOV X24, X31
	0x03A1BDA0 B 0x3A1BDA8
	0x03A1BDA4 MOV X23, X0
	0x03A1BDA8 ADD X0, X31, 0x6F8
	0x03A1BDAC MOV X1, X31
	0x03A1BDB0 BL 0x39B1DB4
	0x03A1BDB4 CBNZ X24, 0x3A1BDC0
	0x03A1BDB8 MOV X0, X23
	0x03A1BDBC BL 0x1D2C690
	0x03A1BDC0 MOV X0, X24
	0x03A1BDC4 BL 0x1C16F18
	0x03A1BDC8 BL 0x1990590
	0x03A1BDCC STR X30, [X31 - 0x20]!
	0x03A1BDD0 STP X20, X19, [X31 + 0x10]
	0x03A1BDD4 ADRP X20, 0x9C7000
	0x03A1BDD8 LDRB W8, [X20 + 0x10]
	0x03A1BDDC MOV W19, W0
	0x03A1BDE0 CBNZ W8, 0x3A1BDF8
	0x03A1BDE4 ADRP X0, 0x739000
	0x03A1BDE8 LDR X0, [X0 + 0x698]
	0x03A1BDEC BL 0x1C16CF4
	0x03A1BDF0 MOVZ W8, 0x1
	0x03A1BDF4 STRB W8, [X20 + 0x10]
	0x03A1BDF8 ADRP X8, 0x739000
	0x03A1BDFC LDR X8, [X8 + 0x698]
	0x03A1BE00 CMP W19, 0x4
	0x03A1BE04 MOVZ W9, 0x4
	0x03A1BE08 CSEL W9, W19, W9, HI
	0x03A1BE0C LDR X8, [X8]
	0x03A1BE10 LDP X20, X19, [X31 + 0x10]
	0x03A1BE14 LDR X8, [X8 + 0xB8]
	0x03A1BE18 STR W9, [X8 + 0x8]
	0x03A1BE1C LDR X30, [X31], #0x20
	0x03A1BE20 RET
	0x03A1BE24 SUB X31, X31, 0xF0
	0x03A1BE28 STR X30, [X31 + 0xA0]
	0x03A1BE2C STP X26, X25, [X31 + 0xB0]
	0x03A1BE30 STP X24, X23, [X31 + 0xC0]
	0x03A1BE34 STP X22, X21, [X31 + 0xD0]
	0x03A1BE38 STP X20, X19, [X31 + 0xE0]
	0x03A1BE3C ADRP X21, 0x9C6000
	0x03A1BE40 LDRB W8, [X21 + 0xFF5]
	0x03A1BE44 MOV X19, X1
	0x03A1BE48 MOV X20, X0
	0x03A1BE4C TBNZ X8, 0x0, 0x3A1BE70
	0x03A1BE50 ADRP X0, 0x739000
	0x03A1BE54 LDR X0, [X0 + 0x660]
	0x03A1BE58 BL 0x1C16CF4
	0x03A1BE5C ADRP X0, 0x739000
	0x03A1BE60 LDR X0, [X0 + 0x658]
	0x03A1BE64 BL 0x1C16CF4
	0x03A1BE68 MOVZ W8, 0x1
	0x03A1BE6C STRB W8, [X21 + 0xFF5]
	0x03A1BE70 CBZ X20, 0x3A1C190
	0x03A1BE74 ADRP X22, 0x739000
	0x03A1BE78 ADRP X23, 0x739000
	0x03A1BE7C LDR X22, [X22 + 0x660]
	0x03A1BE80 LDR X23, [X23 + 0x658]
	0x03A1BE84 ADRP X25, 0xFFFFFFFFFD17C000
	0x03A1BE88 ADRP X26, 0xFFFFFFFFFD17C000
	0x03A1BE8C MOV X24, X31
	0x03A1BE90 ADD X25, X25, 0xAEC
	0x03A1BE94 ADD X26, X26, 0xAF8
	0x03A1BE98 LDR X8, [X20]
	0x03A1BE9C LDR X1, [X22]
	0x03A1BEA0 LDRH W9, [X8 + 0x12E]
	0x03A1BEA4 CBZ X9, 0x3A1BEC8
	0x03A1BEA8 LDR X10, [X8 + 0xB0]
	0x03A1BEAC ADD X10, X10, 0x8
	0x03A1BEB0 LDUR X11, [X10 - 0x8]
	0x03A1BEB4 CMP X11, X1
	0x03A1BEB8 B.EQ 0x3A1BED8
	0x03A1BEBC SUBS X9, X9, 0x1
	0x03A1BEC0 ADD X10, X10, 0x10
	0x03A1BEC4 B.NE 0x3A1BEB0
	0x03A1BEC8 MOV X0, X20
	0x03A1BECC MOV W2, W31
	0x03A1BED0 BL 0x1C5C788
	0x03A1BED4 B 0x3A1BEE4
	0x03A1BED8 LDRSW X9, [X10]
	0x03A1BEDC ADD X8, X8, X9, 0x4, LSL
	0x03A1BEE0 ADD X0, X8, 0x138
	0x03A1BEE4 LDP X8, X1, [X0]
	0x03A1BEE8 MOV X0, X20
	0x03A1BEEC BLR X8
	0x03A1BEF0 CBZ X0, 0x3A1C190
	0x03A1BEF4 LDR X8, [X0 + 0x58]
	0x03A1BEF8 CBZ X8, 0x3A1C190
	0x03A1BEFC LDRSW X8, [X8 + 0x18]
	0x03A1BF00 CMP X24, X8
	0x03A1BF04 B.GE 0x3A1C0B0
	0x03A1BF08 LDR X8, [X20]
	0x03A1BF0C LDR X1, [X22]
	0x03A1BF10 LDRH W9, [X8 + 0x12E]
	0x03A1BF14 CBZ X9, 0x3A1BF38
	0x03A1BF18 LDR X10, [X8 + 0xB0]
	0x03A1BF1C ADD X10, X10, 0x8
	0x03A1BF20 LDUR X11, [X10 - 0x8]
	0x03A1BF24 CMP X11, X1
	0x03A1BF28 B.EQ 0x3A1BF48
	0x03A1BF2C SUBS X9, X9, 0x1
	0x03A1BF30 ADD X10, X10, 0x10
	0x03A1BF34 B.NE 0x3A1BF20
	0x03A1BF38 MOV X0, X20
	0x03A1BF3C MOV W2, W31
	0x03A1BF40 BL 0x1C5C788
	0x03A1BF44 B 0x3A1BF54
	0x03A1BF48 LDRSW X9, [X10]
	0x03A1BF4C ADD X8, X8, X9, 0x4, LSL
	0x03A1BF50 ADD X0, X8, 0x138
	0x03A1BF54 LDP X8, X1, [X0]
	0x03A1BF58 MOV X0, X20
	0x03A1BF5C BLR X8
	0x03A1BF60 CBZ X0, 0x3A1C190
	0x03A1BF64 LDR X8, [X0 + 0x58]
	0x03A1BF68 CBZ X8, 0x3A1C190
	0x03A1BF6C LDR W9, [X8 + 0x18]
	0x03A1BF70 CMP X24, X9
	0x03A1BF74 B.CS 0x3A1C194
	0x03A1BF78 ADD X8, X8, X24, 0x5, LSL
	0x03A1BF7C LDP V1, V0, [X8 + 0x20]
	0x03A1BF80 LDR X0, [X23]
	0x03A1BF84 STP V1, V0, [X31 + 0x80]
	0x03A1BF88 LDR W8, [X0 + 0xE0]
	0x03A1BF8C CBNZ W8, 0x3A1BF98
	0x03A1BF90 BL 0x1C16DFC
	0x03A1BF94 LDR X0, [X23]
	0x03A1BF98 LDR X8, [X0 + 0xB8]
	0x03A1BF9C LDR X8, [X8 + 0x50]
	0x03A1BFA0 CBZ X8, 0x3A1C190
	0x03A1BFA4 LDRSW X9, [X8 + 0x18]
	0x03A1BFA8 CMP X24, X9
	0x03A1BFAC B.GE 0x3A1C0B4
	0x03A1BFB0 LDR W9, [X0 + 0xE0]
	0x03A1BFB4 CBNZ W9, 0x3A1BFCC
	0x03A1BFB8 BL 0x1C16DFC
	0x03A1BFBC LDR X8, [X23]
	0x03A1BFC0 LDR X8, [X8 + 0xB8]
	0x03A1BFC4 LDR X8, [X8 + 0x50]
	0x03A1BFC8 CBZ X8, 0x3A1C190
	0x03A1BFCC LDR W9, [X8 + 0x18]
	0x03A1BFD0 CMP X24, X9
	0x03A1BFD4 B.CS 0x3A1C194
	0x03A1BFD8 LDRSW X9, [X31 + 0x8C]
	0x03A1BFDC CMP W9, 0x2
	0x03A1BFE0 B.HI 0x3A1BFF0
	0x03A1BFE4 LDR V0, [X25, X9, LSL #2]
	0x03A1BFE8 LDR V1, [X26, X9, LSL #2]
	0x03A1BFEC B 0x3A1BFF8
	0x03A1BFF0 FMOV S1, W31
	0x03A1BFF4 FMOV S0, 1
	0x03A1BFF8 CBZ X19, 0x3A1C190
	0x03A1BFFC ADD X8, X8, X24, 0x2, LSL
	0x03A1C000 LDR W1, [X8 + 0x20]
	0x03A1C004 FMOV S2, W31
	0x03A1C008 FMOV S3, W31
	0x03A1C00C MOV X0, X19
	0x03A1C010 MOV X2, X31
	0x03A1C014 BL 0x3C4CED8
	0x03A1C018 LDR X8, [X23]
	0x03A1C01C LDR X8, [X8 + 0xB8]
	0x03A1C020 LDR X8, [X8 + 0x58]
	0x03A1C024 CBZ X8, 0x3A1C190
	0x03A1C028 LDR W9, [X8 + 0x18]
	0x03A1C02C CMP X24, X9
	0x03A1C030 B.CS 0x3A1C194
	0x03A1C034 ADD X8, X8, X24, 0x2, LSL
	0x03A1C038 LDR W21, [X8 + 0x20]
	0x03A1C03C ADD X8, X31, 0x50
	0x03A1C040 ADD X0, X31, 0x80
	0x03A1C044 BL 0x3A1598C
	0x03A1C048 LDP S0, S1, [X31 + 0x50]
	0x03A1C04C LDP S2, S3, [X31 + 0x58]
	0x03A1C050 MOV X0, X19
	0x03A1C054 MOV W1, W21
	0x03A1C058 MOV X2, X31
	0x03A1C05C BL 0x3C4CED8
	0x03A1C060 LDR X8, [X23]
	0x03A1C064 LDR X8, [X8 + 0xB8]
	0x03A1C068 LDR X8, [X8 + 0x60]
	0x03A1C06C CBZ X8, 0x3A1C190
	0x03A1C070 LDR W9, [X8 + 0x18]
	0x03A1C074 CMP X24, X9
	0x03A1C078 B.CS 0x3A1C194
	0x03A1C07C ADD X8, X8, X24, 0x2, LSL
	0x03A1C080 LDR W21, [X8 + 0x20]
	0x03A1C084 ADD X8, X31, 0x50
	0x03A1C088 ADD X0, X31, 0x80
	0x03A1C08C BL 0x3A1598C
	0x03A1C090 LDP S0, S1, [X31 + 0x60]
	0x03A1C094 LDP S2, S3, [X31 + 0x68]
	0x03A1C098 MOV X0, X19
	0x03A1C09C MOV W1, W21
	0x03A1C0A0 MOV X2, X31
	0x03A1C0A4 BL 0x3C4CED8
	0x03A1C0A8 ADD X24, X24, 0x1
	0x03A1C0AC B 0x3A1BE98
	0x03A1C0B0 LDR X0, [X23]
	0x03A1C0B4 LDR W8, [X0 + 0xE0]
	0x03A1C0B8 CBNZ W8, 0x3A1C0C4
	0x03A1C0BC BL 0x1C16DFC
	0x03A1C0C0 LDR X0, [X23]
	0x03A1C0C4 LDR X9, [X0 + 0xB8]
	0x03A1C0C8 LDR X8, [X20]
	0x03A1C0CC LDR X1, [X22]
	0x03A1C0D0 LDR W21, [X9 + 0x8C]
	0x03A1C0D4 LDRH W9, [X8 + 0x12E]
	0x03A1C0D8 CBZ X9, 0x3A1C0FC
	0x03A1C0DC LDR X10, [X8 + 0xB0]
	0x03A1C0E0 ADD X10, X10, 0x8
	0x03A1C0E4 LDUR X11, [X10 - 0x8]
	0x03A1C0E8 CMP X11, X1
	0x03A1C0EC B.EQ 0x3A1C10C
	0x03A1C0F0 SUBS X9, X9, 0x1
	0x03A1C0F4 ADD X10, X10, 0x10
	0x03A1C0F8 B.NE 0x3A1C0E4
	0x03A1C0FC MOV X0, X20
	0x03A1C100 MOV W2, W31
	0x03A1C104 BL 0x1C5C788
	0x03A1C108 B 0x3A1C118
	0x03A1C10C LDRSW X9, [X10]
	0x03A1C110 ADD X8, X8, X9, 0x4, LSL
	0x03A1C114 ADD X0, X8, 0x138
	0x03A1C118 LDP X8, X1, [X0]
	0x03A1C11C MOV X0, X20
	0x03A1C120 BLR X8
	0x03A1C124 CBZ X0, 0x3A1C190
	0x03A1C128 LDR X0, [X0 + 0xE8]
	0x03A1C12C ADD X8, X31, 0x28
	0x03A1C130 MOV X1, X31
	0x03A1C134 BL 0x3C4B274
	0x03A1C138 LDUR V0, [X31 + 0x28]
	0x03A1C13C LDUR V1, [X31 + 0x38]
	0x03A1C140 LDR X8, [X31 + 0x48]
	0x03A1C144 STP V0, V1, [X31 + 0x50]
	0x03A1C148 STR X8, [X31 + 0x70]
	0x03A1C14C CBZ X19, 0x3A1C190
	0x03A1C150 LDP V0, V1, [X31 + 0x50]
	0x03A1C154 LDR X8, [X31 + 0x70]
	0x03A1C158 ADD X2, X31, 0x0
	0x03A1C15C MOV X0, X19
	0x03A1C160 MOV W1, W21
	0x03A1C164 MOV X3, X31
	0x03A1C168 STP V0, V1, [X31]
	0x03A1C16C STR X8, [X31 + 0x20]
	0x03A1C170 BL 0x3C4FCFC
	0x03A1C174 LDP X20, X19, [X31 + 0xE0]
	0x03A1C178 LDP X22, X21, [X31 + 0xD0]
	0x03A1C17C LDP X24, X23, [X31 + 0xC0]
	0x03A1C180 LDP X26, X25, [X31 + 0xB0]
	0x03A1C184 LDR X30, [X31 + 0xA0]
	0x03A1C188 ADD X31, X31, 0xF0
	0x03A1C18C RET
	0x03A1C190 BL 0x1C16F20
	0x03A1C194 BL 0x1C16F28
	0x03A1C198 SUB X31, X31, 0x70
	0x03A1C19C STR X30, [X31 + 0x40]
	0x03A1C1A0 STP X22, X21, [X31 + 0x50]
	0x03A1C1A4 STP X20, X19, [X31 + 0x60]
	0x03A1C1A8 ADRP X22, 0x9C5000
	0x03A1C1AC LDRB W9, [X22 + 0xFED]
	0x03A1C1B0 MOV X20, X1
	0x03A1C1B4 MOV X21, X0
	0x03A1C1B8 MOV X19, X8
	0x03A1C1BC TBNZ X9, 0x0, 0x3A1C1E0
	0x03A1C1C0 ADRP X0, 0x738000
	0x03A1C1C4 LDR X0, [X0 + 0x660]
	0x03A1C1C8 BL 0x1C16CF4
	0x03A1C1CC ADRP X0, 0x738000
	0x03A1C1D0 LDR X0, [X0 + 0x658]
	0x03A1C1D4 BL 0x1C16CF4
	0x03A1C1D8 MOVZ W8, 0x1
	0x03A1C1DC STRB W8, [X22 + 0xFED]
	0x03A1C1E0 MOVI V0.2D, 0x0
	0x03A1C1E4 STR W31, [X31 + 0x30]
	0x03A1C1E8 STP V0, V0, [X31 + 0x10]
	0x03A1C1EC STR V0, [X31]
	0x03A1C1F0 CBZ X21, 0x3A1C350
	0x03A1C1F4 ADRP X10, 0x738000
	0x03A1C1F8 LDR X8, [X21]
	0x03A1C1FC LDR X10, [X10 + 0x660]
	0x03A1C200 LDRH W9, [X8 + 0x12E]
	0x03A1C204 LDR X1, [X10]
	0x03A1C208 CBZ X9, 0x3A1C22C
	0x03A1C20C LDR X10, [X8 + 0xB0]
	0x03A1C210 ADD X10, X10, 0x8
	0x03A1C214 LDUR X11, [X10 - 0x8]
	0x03A1C218 CMP X11, X1
	0x03A1C21C B.EQ 0x3A1C23C
	0x03A1C220 SUBS X9, X9, 0x1
	0x03A1C224 ADD X10, X10, 0x10
	0x03A1C228 B.NE 0x3A1C214
	0x03A1C22C MOV X0, X21
	0x03A1C230 MOV W2, W31
	0x03A1C234 BL 0x1C5C788
	0x03A1C238 B 0x3A1C248
	0x03A1C23C LDRSW X9, [X10]
	0x03A1C240 ADD X8, X8, X9, 0x4, LSL
	0x03A1C244 ADD X0, X8, 0x138
	0x03A1C248 LDP X8, X1, [X0]
	0x03A1C24C MOV X0, X21
	0x03A1C250 BLR X8
	0x03A1C254 CBZ X0, 0x3A1C350
	0x03A1C258 ADRP X8, 0xFFFFFFFFFD0CE000
	0x03A1C25C LDR V0, [X0 + 0x50]
	0x03A1C260 LDR V1, [X8 + 0x330]
	0x03A1C264 FMOV S2, 1
	0x03A1C268 ADRP X21, 0x738000
	0x03A1C26C FMIN S2, S0, S2
	0x03A1C270 FCMP S0, S1
	0x03A1C274 LDR X21, [X21 + 0x658]
	0x03A1C278 FCSEL S0, S2, S1, PL
	0x03A1C27C LDP S1, S2, [X20 + 0xF0]
	0x03A1C280 MOVZ W8, 0x7F800000
	0x03A1C284 MOVZ W9, 0x80000000
	0x03A1C288 ADD X0, X31, 0x0
	0x03A1C28C SCVTF S1, S1
	0x03A1C290 SCVTF S2, S2
	0x03A1C294 FMUL S1, S0, S1
	0x03A1C298 FMUL S0, S0, S2
	0x03A1C29C FMOV S2, W8
	0x03A1C2A0 FCVTZS W8, S1
	0x03A1C2A4 FCMP S1, S2
	0x03A1C2A8 FCVTZS W10, S0
	0x03A1C2AC CSEL W1, W9, W8, EQ
	0x03A1C2B0 FCMP S0, S2
	0x03A1C2B4 CSEL W2, W9, W10, EQ
	0x03A1C2B8 MOV X3, X31
	0x03A1C2BC BL 0x3C227F4
	0x03A1C2C0 LDR X0, [X21]
	0x03A1C2C4 LDR W8, [X0 + 0xE0]
	0x03A1C2C8 CBNZ W8, 0x3A1C2D0
	0x03A1C2CC BL 0x1C16DFC
	0x03A1C2D0 BL 0x3A1DECC
	0x03A1C2D4 MOV W1, W0
	0x03A1C2D8 ADD X0, X31, 0x0
	0x03A1C2DC MOV X2, X31
	0x03A1C2E0 BL 0x3C2240C
	0x03A1C2E4 ADD X0, X31, 0x0
	0x03A1C2E8 MOV W1, W31
	0x03A1C2EC MOV X2, X31
	0x03A1C2F0 BL 0x3C22B28
	0x03A1C2F4 ADD X0, X31, 0x0
	0x03A1C2F8 MOV W1, W31
	0x03A1C2FC MOV X2, X31
	0x03A1C300 BL 0x3C22B44
	0x03A1C304 ADD X0, X31, 0x0
	0x03A1C308 MOV W1, W31
	0x03A1C30C MOV X2, X31
	0x03A1C310 BL 0x3C22520
	0x03A1C314 MOVZ W8, 0x1
	0x03A1C318 MOVZ W9, 0x2
	0x03A1C31C STR W8, [X31 + 0x8]
	0x03A1C320 STR W9, [X31 + 0x20]
	0x03A1C324 LDR W10, [X31 + 0x30]
	0x03A1C328 LDP V1, V0, [X31 + 0x10]
	0x03A1C32C LDR V2, [X31]
	0x03A1C330 LDP X22, X21, [X31 + 0x50]
	0x03A1C334 STR W10, [X19 + 0x30]
	0x03A1C338 STP V1, V0, [X19 + 0x10]

ISIL:
	001 Move [X31-112], D8
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Subtract X31, X31, 1744
	015 Move [X31+32], W7
	016 Move [X31+16], X5
	017 Move [X31+24], X6
	018 Move [X31+44], W3
	019 Move [X31+48], X1
	020 Move X19, 0x9C7000
	021 Move X20, 0x73A000
	022 Move W8, [X19+4084]
	023 Move X20, [X20+1696]
	024 Move W29, W4
	025 Move X24, X2
	026 Move X28, X0
	027 Move TEMP, X8
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfEqual {63}
	031 Move X0, 0x6D9000
	032 Move X0, [X0+2600]
	033 Call 0x1C17CF4
	034 Move X0, 0x73A000
	035 Move X0, [X0+1632]
	036 Call 0x1C17CF4
	037 Move X0, 0x73A000
	038 Move X0, [X0+1352]
	039 Call 0x1C17CF4
	040 Move X0, 0x73A000
	041 Move X0, [X0+1648]
	042 Call 0x1C17CF4
	043 Move X0, 0x73A000
	044 Move X0, [X0+1704]
	045 Call 0x1C17CF4
	046 Move X0, 0x73A000
	047 Move X0, [X0+1712]
	048 Call 0x1C17CF4
	049 Move X0, 0x6D9000
	050 Move X0, [X0+1432]
	051 Call 0x1C17CF4
	052 Move X0, 0x73A000
	053 Move X0, [X0+1624]
	054 Call 0x1C17CF4
	055 Move X0, 0x73A000
	056 Move X0, [X0+1696]
	057 Call 0x1C17CF4
	058 Move X0, 0x73A000
	059 Move X0, [X0+1720]
	060 Call 0x1C17CF4
	061 Move W8, 1
	062 Move [X19+4084], W8
	063 Move X0, [X20]
	064 Move [X31+1736], X31
	065 Move [X31+1728], X31
	066 Move W8, [X0+224]
	067 Compare W8, 0
	068 JumpIfNotEqual {70}
	069 Call 0x1C17DFC
	070 Move X19, 0x9C8000
	071 Move W8, [X19+17]
	072 Move X27, [X31+1872]
	073 Compare W8, 0
	074 JumpIfNotEqual {80}
	075 Move X0, 0x73A000
	076 Move X0, [X0+1696]
	077 Call 0x1C17CF4
	078 Move W8, 1
	079 Move [X19+17], W8
	080 Move X0, [X20]
	081 Move W8, [X0+224]
	082 Compare W8, 0
	083 JumpIfNotEqual {86}
	084 Call 0x1C17DFC
	085 Move X0, [X20]
	086 Compare X27, 0
	087 JumpIfEqual {567}
	088 Move X9, 0x73A000
	089 Move X8, [X0+184]
	090 Move X9, [X9+1712]
	091 Move W1, [X27+24]
	092 Add X0, X31, 1728
	093 Move W8, [X8+120]
	094 Move X4, [X9]
	095 Move W2, 2
	096 Move W3, 1
	097 Move W20, W8
	098 ShiftRight W20, 30
	099 And W20, W20, 0x1FFFFFFF
	100 Call NativeArray`1<Boolean>..ctor, X0, X1, X2, X3
	101 Compare W20, 0
	102 JumpIfEqual {109}
	103 Move W9, [X31+1856]
	104 Move W8, [X31+32]
	105 Move W19, [X27+24]
	106 Move [X31+12], W9
	107 NotImplemented "Instruction CMP not yet implemented."
	108 Move [X31+8], W19
	109 Move X8, 0x6D9000
	110 Move X8, [X8+2600]
	111 Move X0, [X8]
	112 Move W8, [X0+224]
	113 Compare W8, 0
	114 JumpIfNotEqual {116}
	115 Call 0x1C17DFC
	116 Move X8, 0x73A000
	117 Move X8, [X8+1720]
	118 Move X1, X31
	119 Move X0, [X8]
	120 Call Debug.LogError, X0
	121 Subtract W22, W19, 1
	122 Move X21, 0x73A000
	123 Move X21, [X21+1648]
	124 Move X2, [X21]
	125 Move X0, X27
	126 Move W1, W22
	127 Call List`1<Object>.get_Item, X0, X1
	128 Compare X0, 0
	129 JumpIfEqual {567}
	130 Move W8, [X0+132]
	131 Compare W8, 0
	132 JumpIfEqual {135}
	133 Move V0, [X0+136]
	134 NotImplemented "Instruction FCMP not yet implemented."
	135 Subtract W22, W22, 1
	136 Move W22, W19
	137 Move W19, [X27+24]
	138 Move [X31+8], W22
	139 NotImplemented "Instruction CMP not yet implemented."
	140 Move W8, W20
	141 Move [X31+1752], X8
	142 Move X23, 0x73A000
	143 Move W22, [X31+1864]
	144 Move X23, [X23+1648]
	145 Move W25, W31
	146 Move [X31+40], W29
	147 Move [X31+56], X28
	148 Move W8, W19
	149 Subtract X28, X8, W25
	150 NotImplemented "Instruction CMP not yet implemented."
	151 Move W26, W31
	152 Move W19, W31
	153 Move X9, [X31+1752]
	154 Move X8, W19
	155 NotImplemented "Instruction CMP not yet implemented."
	156 Move X2, [X23]
	157 Add W20, W25, W26
	158 Move X0, X27
	159 Move W1, W20
	160 Call List`1<Object>.get_Item, X0, X1
	161 Move X8, 0x73A000
	162 Move X8, [X8+1624]
	163 Move X21, X0
	164 Move X8, [X8]
	165 Move W9, [X8+224]
	166 Compare W9, 0
	167 JumpIfNotEqual {170}
	168 Move X0, X8
	169 Call 0x1C17DFC
	170 Move X0, X21
	171 Move W1, W29
	172 Call RendererLighting.CanCastVolumetricShadows, X0, X1
	173 Move TEMP, X0
	174 And TEMP, TEMP, 1
	175 Compare TEMP, 1
	176 JumpIfNotEqual {215}
	177 Move X8, [X31+1728]
	178 Move X1, [X31+48]
	179 Add X0, X31, 1024
	180 Move W2, 696
	181 Move [X8], W31
	182 Call 0x3EB2AC0
	183 Compare X21, 0
	184 JumpIfEqual {567}
	185 Move X8, 0x73A000
	186 Move X8, [X8+1696]
	187 Move V8, [X21+136]
	188 Move X0, [X8]
	189 Move W8, [X0+224]
	190 Compare W8, 0
	191 JumpIfNotEqual {193}
	192 Call 0x1C17DFC
	193 Add X0, X31, 328
	194 Add X1, X31, 1024
	195 Move W2, 696
	196 Call 0x3EB2AC0
	197 Move X0, [X31+56]
	198 Move W3, [X31+44]
	199 Add X1, X31, 328
	200 Move X2, X24
	201 Move X4, X21
	202 Move W5, W19
	203 Move V0, V8
	204 Move X6, X31
	205 Call ShadowRendering.PrerenderShadows, X0, X1, X2, X3, X4, X5, V0
	206 Move TEMP, X0
	207 And TEMP, TEMP, 1
	208 Compare TEMP, 1
	209 JumpIfNotEqual {215}
	210 Move X8, [X31+1728]
	211 Move X9, W20
	212 Move W10, 1
	213 Add W19, W19, 1
	214 Move [X8], W10
	215 Add W26, W26, 1
	216 NotImplemented "Instruction CMP not yet implemented."
	217 Move W19, W31
	218 Move W26, W31
	219 Move X28, [X31+56]
	220 NotImplemented "Instruction CMP not yet implemented."
	221 NotImplemented "Instruction CSET not yet implemented."
	222 NotImplemented "Instruction BIC not yet implemented."
	223 Move TEMP, X8
	224 And TEMP, TEMP, 1
	225 Compare TEMP, 1
	226 JumpIfEqual {269}
	227 Move X9, [X31+16]
	228 Move X10, [X31+24]
	229 Move X8, [X9+32]
	230 Move V1, [X9]
	231 Move V0, [X9+16]
	232 Add W9, W26, W25
	233 Move [X31+1056], X8
	234 Move [X31+65], V0
	235 Move [X31+64], V1
	236 Move X8, [X10+32]
	237 Move V0, [X10]
	238 Move V1, [X10+16]
	239 Move W10, [X31+8]
	240 Move [X31+160], X8
	241 Move [X31+128], V0
	242 Move [X31+136], V1
	243 NotImplemented "Instruction CMP not yet implemented."
	244 Move W9, [X31+32]
	245 Move W10, [X31+12]
	246 NotImplemented "Instruction CSEL not yet implemented."
	247 Compare X24, 0
	248 JumpIfEqual {567}
	249 Move V0, [X31+64]
	250 Move V1, [X31+65]
	251 Move X8, [X31+1056]
	252 Move V2, [X31+128]
	253 Move V3, [X31+144]
	254 Move X9, [X31+160]
	255 Add X1, X31, 288
	256 Add X4, X31, 240
	257 Move X0, X24
	258 Move W2, W31
	259 Move W5, W31
	260 Move W6, W3
	261 Move X7, X31
	262 Move [X31+288], V0
	263 Move [X31+296], V1
	264 Move [X31+320], X8
	265 Move [X31+240], V2
	266 Move [X31+248], V3
	267 Move [X31+272], X9
	268 Call CommandBuffer.SetRenderTarget, X0, X1, X2, X3, X4, X5, X6
	269 NotImplemented "Instruction CMP not yet implemented."
	270 Move X29, X31
	271 Move W22, W26
	272 Move [X31+36], W31
	273 Move X2, [X23]
	274 Add W21, W25, W29
	275 Move X0, X27
	276 Move W1, W21
	277 Call List`1<Object>.get_Item, X0, X1
	278 Compare X0, 0
	279 JumpIfEqual {567}
	280 Move W8, [X0+36]
	281 Move X19, X0
	282 NotImplemented "Instruction CMP not yet implemented."
	283 Move V0, [X19+68]
	284 NotImplemented "Instruction FCMP not yet implemented."
	285 Move W8, [X19+72]
	286 Compare W8, 0
	287 JumpIfEqual {526}
	288 Move X0, X19
	289 Call Light2D.GetTopMostLitLayer, X0
	290 Move W8, [X31+40]
	291 NotImplemented "Instruction CMP not yet implemented."
	292 Compare X28, 0
	293 JumpIfEqual {567}
	294 Move X8, [X28]
	295 Move X10, 0x73A000
	296 NotImplemented "Instruction LDRH not yet implemented."
	297 Move X10, [X10+1632]
	298 Move X1, [X10]
	299 Compare X9, 0
	300 JumpIfEqual {307}
	301 Move X10, [X8+176]
	302 Add X10, X10, 8
	303 NotImplemented "Instruction LDUR not yet implemented."
	304 NotImplemented "Instruction CMP not yet implemented."
	305 Subtract X9, X9, 1
	306 Add X10, X10, 16
	307 Move X0, X28
	308 Move W2, W31
	309 Call 0x1C5D788
	310 NotImplemented "Instruction LDRSW not yet implemented."
	311 Add X8, X8, X9
	312 Add X0, X8, 312
	313 Move X8, [X0]
	314 Move X1, [X0+8]
	315 Move X0, X28
	316 NotImplemented "Instruction BLR not yet implemented."
	317 Move X28, 0x73A000
	318 Move X28, [X28+1624]
	319 Move X20, X0
	320 Move X8, [X28]
	321 Move W9, [X8+224]
	322 Compare W9, 0
	323 JumpIfNotEqual {326}
	324 Move X0, X8
	325 Call 0x1C17DFC
	326 Move W2, 1
	327 Move X0, X20
	328 Move X1, X19
	329 Call RendererLighting.GetLightMaterial, X0, X1, X2
	330 Move X20, X0
	331 Move X0, X19
	332 Call Light2D.get_lightMesh, X0
	333 Move X8, [X31+1728]
	334 Move W8, [X8]
	335 Move X21, X0
	336 Compare W8, 0
	337 JumpIfEqual {354}
	338 Move X8, 0x73A000
	339 Move X8, [X8+1696]
	340 Move X0, [X8]
	341 Move W8, [X0+224]
	342 Compare W8, 0
	343 JumpIfNotEqual {345}
	344 Call 0x1C17DFC
	345 Move W2, [X31+36]
	346 Move X0, X24
	347 Move X1, X19
	348 Move X3, X31
	349 Add W28, W2, 1
	350 Call ShadowRendering.SetGlobalShadowTexture, X0, X1, X2
	351 Move [X31+36], W28
	352 Move X28, 0x739000
	353 Move X28, [X28+1624]
	354 Move X8, 0x739000
	355 Move X8, [X8+1696]
	356 Move X0, [X8]
	357 Move W8, [X0+224]
	358 Compare W8, 0
	359 JumpIfNotEqual {361}
	360 Call 0x1C17DFC
	361 Move X0, X24
	362 Move X1, X31
	363 Call ShadowRendering.DisableGlobalShadowTexture, X0
	364 Move W8, [X19+36]
	365 NotImplemented "Instruction CMP not yet implemented."
	366 Move X8, 0x6D8000
	367 Move X8, [X8+1432]
	368 Move X28, [X19+88]
	369 Move X0, [X8]
	370 Move W8, [X0+224]
	371 Compare W8, 0
	372 JumpIfNotEqual {374}
	373 Call 0x1C17DFC
	374 Move X0, X28
	375 Move X1, X31
	376 Move X2, X31
	377 Call Object.op_Inequality, X0, X1
	378 Move X28, 0x739000
	379 Move X28, [X28+1624]
	380 Move TEMP, X0
	381 And TEMP, TEMP, 1
	382 Compare TEMP, 1
	383 JumpIfNotEqual {456}
	384 Move W8, [X19+36]
	385 Move W9, 96
	386 NotImplemented "Instruction CMP not yet implemented."
	387 Move W8, 88
	388 NotImplemented "Instruction CSEL not yet implemented."
	389 Move X0, [X19]
	390 Compare X0, 0
	391 JumpIfEqual {567}
	392 Move X1, X31
	393 Call Sprite.get_texture, X0
	394 Move X8, 0x6D8000
	395 Move X8, [X8+1432]
	396 Move X28, X0
	397 Move X8, [X8]
	398 Move W9, [X8+224]
	399 Compare W9, 0
	400 JumpIfNotEqual {403}
	401 Move X0, X8
	402 Call 0x1C17DFC
	403 Move X0, X28
	404 Move X1, X31
	405 Move X2, X31
	406 Call Object.op_Inequality, X0, X1
	407 Move X28, 0x739000
	408 Move X28, [X28+1624]
	409 Move TEMP, X0
	410 And TEMP, TEMP, 1
	411 Compare TEMP, 1
	412 JumpIfNotEqual {456}
	413 Move X0, [X28]
	414 Move W8, [X0+224]
	415 Compare W8, 0
	416 JumpIfNotEqual {419}
	417 Call 0x1C17DFC
	418 Move X0, [X28]
	419 Move W8, [X19+36]
	420 Move W9, 96
	421 NotImplemented "Instruction CMP not yet implemented."
	422 Move W8, 88
	423 NotImplemented "Instruction CSEL not yet implemented."
	424 Move X8, [X19]
	425 Compare X8, 0
	426 JumpIfEqual {567}
	427 Move X9, [X0+184]
	428 Move X0, X8
	429 Move X1, X31
	430 Move W28, [X9+136]
	431 Call Sprite.get_texture, X0
	432 Add X8, X31, 128
	433 Move X1, X31
	434 Call RenderTargetIdentifier.op_Implicit, X0
	435 Move V0, [X31+128]
	436 Move V1, [X31+144]
	437 Move X8, [X31+160]
	438 Move [X31+64], V0
	439 Move [X31+65], V1
	440 Move [X31+1056], X8
	441 Compare X24, 0
	442 JumpIfEqual {567}
	443 Move V0, [X31+64]
	444 Move V1, [X31+65]
	445 Move X8, [X31+1056]
	446 Add X2, X31, 192
	447 Move X0, X24
	448 Move W1, W28
	449 Move X3, X31
	450 Move [X31+192], V0
	451 Move [X31+200], V1
	452 Move [X31+224], X8
	453 Call CommandBuffer.SetGlobalTexture, X0, X1, X2
	454 Move X28, 0x739000
	455 Move X28, [X28+1624]
	456 Move X0, [X28]
	457 Move X28, [X31+56]
	458 Move W8, [X0+224]
	459 Compare W8, 0
	460 JumpIfNotEqual {462}
	461 Call 0x1C17DFC
	462 Move X1, X24
	463 Move X2, X19
	464 Call RendererLighting.SetGeneralLightShaderGlobals, X0, X1, X2
	465 Move W8, [X19+120]
	466 NotImplemented "Instruction CMP not yet implemented."
	467 Move W8, [X19+36]
	468 NotImplemented "Instruction CMP not yet implemented."
	469 Move X8, 0x739000
	470 Move X8, [X8+1624]
	471 Move X0, [X8]
	472 Move W8, [X0+224]
	473 Compare W8, 0
	474 JumpIfNotEqual {476}
	475 Call 0x1C17DFC
	476 Move X0, X28
	477 Move X1, X24
	478 Move X2, X19
	479 Call RendererLighting.SetPointLightShaderGlobals, X0, X1, X2
	480 Move W8, [X19+36]
	481 NotImplemented "Instruction CMP not yet implemented."
	482 Move X0, X19
	483 Move X1, X31
	484 Call Component.get_transform, X0
	485 Compare X0, 0
	486 JumpIfEqual {567}
	487 Add X8, X31, 128
	488 Move X1, X31
	489 Call Transform.get_localToWorldMatrix, X0
	490 Move V0, [X31+128]
	491 Move V1, [X31+144]
	492 Move V2, [X31+160]
	493 Move V3, [X31+176]
	494 Move [X31+64], V0
	495 Move [X31+65], V1
	496 Move [X31+66], V2
	497 Move [X31+67], V3
	498 Compare X24, 0
	499 JumpIfEqual {567}
	500 Move V0, [X31+64]
	501 Move V1, [X31+65]
	502 Move V2, [X31+66]
	503 Move V3, [X31+67]
	504 Add X2, X31, 64
	505 Move X0, X24
	506 Move X1, X21
	507 Move X3, X20
	508 Move X4, X31
	509 Move [X31+64], V0
	510 Move [X31+72], V1
	511 Move [X31+96], V2
	512 Move [X31+104], V3
	513 Call CommandBuffer.DrawMesh, X0, X1, X2, X3
	514 Move X8, 0x739000
	515 Move X8, [X8+1624]
	516 Move X0, [X8]
	517 Move W8, [X0+224]
	518 Compare W8, 0
	519 JumpIfNotEqual {521}
	520 Call 0x1C17DFC
	521 Move X0, X24
	522 Move X1, X19
	523 Move X2, X21
	524 Move X3, X20
	525 Call RendererLighting.DrawPointLight, X0, X1, X2, X3
	526 Add X29, X29, 1
	527 NotImplemented "Instruction CMP not yet implemented."
	528 Move W8, [X31+36]
	529 Move W29, [X31+40]
	530 Move X20, 0x739000
	531 Move X20, [X20+1696]
	532 Subtract W19, W8, 1
	533 Move X0, [X20]
	534 Move W8, [X0+224]
	535 Compare W8, 0
	536 JumpIfNotEqual {538}
	537 Call 0x1C17DFC
	538 Move X0, X24
	539 Move W1, W19
	540 Move X2, X31
	541 Call ShadowRendering.ReleaseShadowRenderTexture, X0, X1
	542 Subtract W19, W19, 1
	543 Move W19, [X27+24]
	544 Add W25, W26, W25
	545 Move W22, W31
	546 NotImplemented "Instruction CMP not yet implemented."
	547 Move X8, 0x739000
	548 Move X8, [X8+1704]
	549 Add X0, X31, 1728
	550 Move X1, [X8]
	551 Call NativeArray`1<Boolean>.Dispose, X0
	552 Add X31, X31, 1744
	553 Move X20, [X31+96]
	554 Move X19, [X31+104]
	555 Move X22, [X31+80]
	556 Move X21, [X31+88]
	557 Move X24, [X31+64]
	558 Move X23, [X31+72]
	559 Move X26, [X31+48]
	560 Move X25, [X31+56]
	561 Move X28, [X31+32]
	562 Move X27, [X31+40]
	563 Move X29, [X31+16]
	564 Move X30, [X31+24]
	565 Move V8, [X31+112]
	566 Return 
	567 Call 0x1C17F20

Method: System.Void SetShapeLightShaderGlobals(UnityEngine.Rendering.Universal.IRenderPass2D pass, UnityEngine.Rendering.CommandBuffer cmd)

Disassembly:
	0x03A1CE24 MOV X1, X31
	0x03A1CE28 B 0x33BDD8C
	0x03A1CE2C STR X30, [X31 - 0x40]!
	0x03A1CE30 STP X24, X23, [X31 + 0x10]
	0x03A1CE34 STP X22, X21, [X31 + 0x20]
	0x03A1CE38 STP X20, X19, [X31 + 0x30]
	0x03A1CE3C ADRP X24, 0x9C5000
	0x03A1CE40 STR X1, [X31 + 0x8]
	0x03A1CE44 ADRP X23, 0x734000
	0x03A1CE48 LDRB W8, [X24 + 0xFDE]
	0x03A1CE4C LDR X23, [X23 + 0xC80]
	0x03A1CE50 MOV X19, X5
	0x03A1CE54 MOV X20, X4
	0x03A1CE58 MOV X21, X3
	0x03A1CE5C MOV X22, X2
	0x03A1CE60 TBNZ X8, 0x0, 0x3A1CE78
	0x03A1CE64 ADRP X0, 0x734000
	0x03A1CE68 LDR X0, [X0 + 0xC80]
	0x03A1CE6C BL 0x1C16CF4
	0x03A1CE70 MOVZ W8, 0x1
	0x03A1CE74 STRB W8, [X24 + 0xFDE]
	0x03A1CE78 LDR X0, [X23]
	0x03A1CE7C LDP X23, X22, [X22 + 0x8]
	0x03A1CE80 LDR W8, [X0 + 0xE0]
	0x03A1CE84 CBNZ W8, 0x3A1CE8C
	0x03A1CE88 BL 0x1C16DFC
	0x03A1CE8C ADD X0, X31, 0x8
	0x03A1CE90 MOV X1, X23
	0x03A1CE94 MOV X2, X22
	0x03A1CE98 MOV X3, X21
	0x03A1CE9C MOV X4, X20
	0x03A1CEA0 MOV X5, X19
	0x03A1CEA4 MOV X6, X31
	0x03A1CEA8 BL 0x3C58B84
	0x03A1CEAC LDP X20, X19, [X31 + 0x30]
	0x03A1CEB0 LDP X22, X21, [X31 + 0x20]
	0x03A1CEB4 LDP X24, X23, [X31 + 0x10]
	0x03A1CEB8 LDR X30, [X31], #0x40
	0x03A1CEBC RET
	0x03A1CEC0 STP X30, X23, [X31 - 0x30]!
	0x03A1CEC4 STP X22, X21, [X31 + 0x10]
	0x03A1CEC8 STP X20, X19, [X31 + 0x20]
	0x03A1CECC ADRP X23, 0x9C5000
	0x03A1CED0 ADRP X22, 0x737000
	0x03A1CED4 LDRB W8, [X23 + 0xFDF]
	0x03A1CED8 LDR X22, [X22 + 0xFF0]
	0x03A1CEDC MOV X19, X2
	0x03A1CEE0 MOV W20, W1
	0x03A1CEE4 MOV X21, X0
	0x03A1CEE8 TBNZ X8, 0x0, 0x3A1CF0C
	0x03A1CEEC ADRP X0, 0x737000
	0x03A1CEF0 LDR X0, [X0 + 0xFF0]
	0x03A1CEF4 BL 0x1C16CF4
	0x03A1CEF8 ADRP X0, 0x738000
	0x03A1CEFC LDR X0, [X0 + 0x738]
	0x03A1CF00 BL 0x1C16CF4
	0x03A1CF04 MOVZ W8, 0x1
	0x03A1CF08 STRB W8, [X23 + 0xFDF]
	0x03A1CF0C LDR X0, [X22]
	0x03A1CF10 ADRP X22, 0x738000
	0x03A1CF14 LDR W8, [X0 + 0xE0]
	0x03A1CF18 LDR X22, [X22 + 0x738]
	0x03A1CF1C CBNZ W8, 0x3A1CF24
	0x03A1CF20 BL 0x1C16DFC
	0x03A1CF24 MOV X0, X21
	0x03A1CF28 MOV X1, X31
	0x03A1CF2C BL 0x3A4225C
	0x03A1CF30 STR W20, [X21 + 0x10]
	0x03A1CF34 LDR X0, [X22]
	0x03A1CF38 LDR W8, [X0 + 0xE0]
	0x03A1CF3C CBNZ W8, 0x3A1CF48
	0x03A1CF40 BL 0x1C16DFC
	0x03A1CF44 LDR X0, [X22]
	0x03A1CF48 LDR X8, [X0 + 0xB8]
	0x03A1CF4C LDP X22, X21, [X31 + 0x10]
	0x03A1CF50 STR X19, [X8 + 0x8]
	0x03A1CF54 LDP X20, X19, [X31 + 0x20]
	0x03A1CF58 LDP X30, X23, [X31], #0x30
	0x03A1CF5C RET
	0x03A1CF60 SUB X31, X31, 0x90
	0x03A1CF64 STP X30, X27, [X31 + 0x40]
	0x03A1CF68 STP X26, X25, [X31 + 0x50]
	0x03A1CF6C STP X24, X23, [X31 + 0x60]
	0x03A1CF70 STP X22, X21, [X31 + 0x70]
	0x03A1CF74 STP X20, X19, [X31 + 0x80]
	0x03A1CF78 ADRP X27, 0x9C5000
	0x03A1CF7C ADRP X26, 0x738000
	0x03A1CF80 LDRB W8, [X27 + 0xFE0]
	0x03A1CF84 LDR X26, [X26 + 0x10]
	0x03A1CF88 MOV X19, X6
	0x03A1CF8C MOV X24, X5
	0x03A1CF90 MOV W20, W4
	0x03A1CF94 MOV W22, W3
	0x03A1CF98 MOV W23, W2
	0x03A1CF9C MOV X25, X1
	0x03A1CFA0 MOV X21, X0
	0x03A1CFA4 TBNZ X8, 0x0, 0x3A1CFC8
	0x03A1CFA8 ADRP X0, 0x738000
	0x03A1CFAC LDR X0, [X0 + 0x10]
	0x03A1CFB0 BL 0x1C16CF4
	0x03A1CFB4 ADRP X0, 0x738000
	0x03A1CFB8 LDR X0, [X0 + 0x740]
	0x03A1CFBC BL 0x1C16CF4
	0x03A1CFC0 MOVZ W8, 0x1
	0x03A1CFC4 STRB W8, [X27 + 0xFE0]
	0x03A1CFC8 STR X25, [X21 + 0xE0]
	0x03A1CFCC LDP V1, V0, [X24 + 0x100]
	0x03A1CFD0 LDR W8, [X24 + 0x120]
	0x03A1CFD4 LDR V2, [X24 + 0xF]
	0x03A1CFD8 ADRP X24, 0x738000
	0x03A1CFDC LDR X24, [X24 + 0x740]
	0x03A1CFE0 ADD X0, X31, 0x0
	0x03A1CFE4 MOV W1, W31
	0x03A1CFE8 MOV X2, X31
	0x03A1CFEC STR W8, [X31 + 0x30]
	0x03A1CFF0 STP V1, V0, [X31 + 0x10]
	0x03A1CFF4 STR V2, [X31]
	0x03A1CFF8 STP W23, W22, [X31]
	0x03A1CFFC BL 0x3C22520
	0x03A1D000 LDR X0, [X26]
	0x03A1D004 ADD X21, X21, 0xE8
	0x03A1D008 LDR W8, [X0 + 0xE0]
	0x03A1D00C CBNZ W8, 0x3A1D014
	0x03A1D010 BL 0x1C16DFC
	0x03A1D014 LDR X6, [X24]
	0x03A1D018 ADD X1, X31, 0x0
	0x03A1D01C FMOV S0, W31
	0x03A1D020 MOVZ W3, 0x1
	0x03A1D024 MOVZ W5, 0x1
	0x03A1D028 MOV X0, X21
	0x03A1D02C MOV W2, W20
	0x03A1D030 MOV W4, W31
	0x03A1D034 MOV X7, X31
	0x03A1D038 BL 0x3A6D184
	0x03A1D03C LDR X8, [X21]
	0x03A1D040 LDP X22, X21, [X31 + 0x70]
	0x03A1D044 LDP X24, X23, [X31 + 0x60]
	0x03A1D048 LDP X26, X25, [X31 + 0x50]
	0x03A1D04C STR X8, [X19]
	0x03A1D050 LDP X20, X19, [X31 + 0x80]
	0x03A1D054 LDP X30, X27, [X31 + 0x40]
	0x03A1D058 ADD X31, X31, 0x90
	0x03A1D05C RET
	0x03A1D060 LDR X0, [X0 + 0xE8]
	0x03A1D064 CBZ X0, 0x3A1D070
	0x03A1D068 MOV X1, X31
	0x03A1D06C B 0x39D4B1C
	0x03A1D070 RET
	0x03A1D074 SUB X31, X31, 0x40
	0x03A1D078 STP X30, X23, [X31 + 0x10]
	0x03A1D07C STP X22, X21, [X31 + 0x20]
	0x03A1D080 STP X20, X19, [X31 + 0x30]
	0x03A1D084 ADRP X21, 0x9C4000
	0x03A1D088 ADRP X23, 0x737000
	0x03A1D08C LDRB W8, [X21 + 0xFE1]
	0x03A1D090 LDR X23, [X23 + 0x738]
	0x03A1D094 MOV X20, X2
	0x03A1D098 MOV X19, X0
	0x03A1D09C TBNZ X8, 0x0, 0x3A1D0C0
	0x03A1D0A0 ADRP X0, 0x6FE000
	0x03A1D0A4 LDR X0, [X0 + 0x8F8]
	0x03A1D0A8 BL 0x1C16CF4
	0x03A1D0AC ADRP X0, 0x737000
	0x03A1D0B0 LDR X0, [X0 + 0x738]
	0x03A1D0B4 BL 0x1C16CF4
	0x03A1D0B8 MOVZ W8, 0x1
	0x03A1D0BC STRB W8, [X21 + 0xFE1]
	0x03A1D0C0 LDR X0, [X23]
	0x03A1D0C4 STRB W31, [X31 + 0x8]
	0x03A1D0C8 ADRP X21, 0x6FE000
	0x03A1D0CC LDR X20, [X20]
	0x03A1D0D0 LDR W8, [X0 + 0xE0]
	0x03A1D0D4 LDR X21, [X21 + 0x8F8]
	0x03A1D0D8 CBNZ W8, 0x3A1D0E4
	0x03A1D0DC BL 0x1C16DFC
	0x03A1D0E0 LDR X0, [X23]
	0x03A1D0E4 LDR X8, [X0 + 0xB8]
	0x03A1D0E8 ADD X0, X31, 0x8
	0x03A1D0EC MOV X1, X20
	0x03A1D0F0 MOV X3, X31
	0x03A1D0F4 LDR X2, [X8]
	0x03A1D0F8 BL 0x39B1DB0
	0x03A1D0FC LDR X0, [X21]
	0x03A1D100 LDR X21, [X19 + 0xE8]
	0x03A1D104 LDR W8, [X0 + 0xE0]
	0x03A1D108 CBNZ W8, 0x3A1D110
	0x03A1D10C BL 0x1C16DFC
	0x03A1D110 FMOV S0, W31
	0x03A1D114 FMOV S1, W31
	0x03A1D118 FMOV S2, W31
	0x03A1D11C FMOV S3, W31
	0x03A1D120 MOVZ W2, 0x2
	0x03A1D124 MOVN W6, 0x0
	0x03A1D128 MOVN W7, 0x0
	0x03A1D12C MOV X0, X20
	0x03A1D130 MOV X1, X21
	0x03A1D134 MOV W3, W31
	0x03A1D138 MOV W4, W31
	0x03A1D13C MOV W5, W31
	0x03A1D140 STR X31, [X31]
	0x03A1D144 BL 0x39E329C
	0x03A1D148 LDR X0, [X23]
	0x03A1D14C LDP X22, X21, [X19 + 0xE0]
	0x03A1D150 LDR W8, [X0 + 0xE0]
	0x03A1D154 CBNZ W8, 0x3A1D160
	0x03A1D158 BL 0x1C16DFC
	0x03A1D15C LDR X0, [X23]
	0x03A1D160 LDR X8, [X0 + 0xB8]
	0x03A1D164 LDR X4, [X8 + 0x8]
	0x03A1D168 MOV X0, X19
	0x03A1D16C MOV X1, X20
	0x03A1D170 MOV X2, X22
	0x03A1D174 MOV X3, X21
	0x03A1D178 MOV W5, W31
	0x03A1D17C MOV X6, X31
	0x03A1D180 BL 0x3A44A30
	0x03A1D184 ADD X0, X31, 0x8
	0x03A1D188 MOV X1, X31
	0x03A1D18C BL 0x39B1DB4
	0x03A1D190 LDP X20, X19, [X31 + 0x30]
	0x03A1D194 LDP X22, X21, [X31 + 0x20]

ISIL:
	001 Subtract X31, X31, 240
	002 Move [X31+160], X30
	003 Move [X31+176], X26
	004 Move [X31+184], X25
	005 Move [X31+192], X24
	006 Move [X31+200], X23
	007 Move [X31+208], X22
	008 Move [X31+216], X21
	009 Move [X31+224], X20
	010 Move [X31+232], X19
	011 Move X21, 0x9C6000
	012 Move W8, [X21+4085]
	013 Move X19, X1
	014 Move X20, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {27}
	019 Move X0, 0x739000
	020 Move X0, [X0+1632]
	021 Call 0x1C17CF4
	022 Move X0, 0x739000
	023 Move X0, [X0+1624]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X21+4085], W8
	027 Compare X20, 0
	028 JumpIfEqual {243}
	029 Move X22, 0x739000
	030 Move X23, 0x739000
	031 Move X22, [X22+1632]
	032 Move X23, [X23+1624]
	033 Move X25, -48775168
	034 Move X26, -48775168
	035 Move X24, X31
	036 Add X25, X25, 2796
	037 Add X26, X26, 2808
	038 Move X8, [X20]
	039 Move X1, [X22]
	040 NotImplemented "Instruction LDRH not yet implemented."
	041 Compare X9, 0
	042 JumpIfEqual {49}
	043 Move X10, [X8+176]
	044 Add X10, X10, 8
	045 NotImplemented "Instruction LDUR not yet implemented."
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Subtract X9, X9, 1
	048 Add X10, X10, 16
	049 Move X0, X20
	050 Move W2, W31
	051 Call 0x1C5D788
	052 NotImplemented "Instruction LDRSW not yet implemented."
	053 Add X8, X8, X9
	054 Add X0, X8, 312
	055 Move X8, [X0]
	056 Move X1, [X0+8]
	057 Move X0, X20
	058 NotImplemented "Instruction BLR not yet implemented."
	059 Compare X0, 0
	060 JumpIfEqual {243}
	061 Move X8, [X0+88]
	062 Compare X8, 0
	063 JumpIfEqual {243}
	064 NotImplemented "Instruction LDRSW not yet implemented."
	065 NotImplemented "Instruction CMP not yet implemented."
	066 Move X8, [X20]
	067 Move X1, [X22]
	068 NotImplemented "Instruction LDRH not yet implemented."
	069 Compare X9, 0
	070 JumpIfEqual {77}
	071 Move X10, [X8+176]
	072 Add X10, X10, 8
	073 NotImplemented "Instruction LDUR not yet implemented."
	074 NotImplemented "Instruction CMP not yet implemented."
	075 Subtract X9, X9, 1
	076 Add X10, X10, 16
	077 Move X0, X20
	078 Move W2, W31
	079 Call 0x1C5D788
	080 NotImplemented "Instruction LDRSW not yet implemented."
	081 Add X8, X8, X9
	082 Add X0, X8, 312
	083 Move X8, [X0]
	084 Move X1, [X0+8]
	085 Move X0, X20
	086 NotImplemented "Instruction BLR not yet implemented."
	087 Compare X0, 0
	088 JumpIfEqual {243}
	089 Move X8, [X0+88]
	090 Compare X8, 0
	091 JumpIfEqual {243}
	092 Move W9, [X8+24]
	093 NotImplemented "Instruction CMP not yet implemented."
	094 Add X8, X8, X24
	095 Move V1, [X8+32]
	096 Move V0, [X8+48]
	097 Move X0, [X23]
	098 Move [X31+128], V1
	099 Move [X31+136], V0
	100 Move W8, [X0+224]
	101 Compare W8, 0
	102 JumpIfNotEqual {105}
	103 Call 0x1C17DFC
	104 Move X0, [X23]
	105 Move X8, [X0+184]
	106 Move X8, [X8+80]
	107 Compare X8, 0
	108 JumpIfEqual {243}
	109 NotImplemented "Instruction LDRSW not yet implemented."
	110 NotImplemented "Instruction CMP not yet implemented."
	111 Move W9, [X0+224]
	112 Compare W9, 0
	113 JumpIfNotEqual {120}
	114 Call 0x1C17DFC
	115 Move X8, [X23]
	116 Move X8, [X8+184]
	117 Move X8, [X8+80]
	118 Compare X8, 0
	119 JumpIfEqual {243}
	120 Move W9, [X8+24]
	121 NotImplemented "Instruction CMP not yet implemented."
	122 NotImplemented "Instruction LDRSW not yet implemented."
	123 NotImplemented "Instruction CMP not yet implemented."
	124 Move V0, [X25]
	125 Move V1, [X26]
	126 Move S1, W31
	127 Move S0, 1
	128 Compare X19, 0
	129 JumpIfEqual {243}
	130 Add X8, X8, X24
	131 Move W1, [X8+32]
	132 Move S2, W31
	133 Move S3, W31
	134 Move X0, X19
	135 Move X2, X31
	136 Call CommandBuffer.SetGlobalVector, X0, X1, X2
	137 Move X8, [X23]
	138 Move X8, [X8+184]
	139 Move X8, [X8+88]
	140 Compare X8, 0
	141 JumpIfEqual {243}
	142 Move W9, [X8+24]
	143 NotImplemented "Instruction CMP not yet implemented."
	144 Add X8, X8, X24
	145 Move W21, [X8+32]
	146 Add X8, X31, 80
	147 Add X0, X31, 128
	148 Call Light2DBlendStyle.get_maskTextureChannelFilter, X0
	149 Move S0, [X31+80]
	150 Move S1, [X31+84]
	151 Move S2, [X31+88]
	152 Move S3, [X31+92]
	153 Move X0, X19
	154 Move W1, W21
	155 Move X2, X31
	156 Call CommandBuffer.SetGlobalVector, X0, X1, X2
	157 Move X8, [X23]
	158 Move X8, [X8+184]
	159 Move X8, [X8+96]
	160 Compare X8, 0
	161 JumpIfEqual {243}
	162 Move W9, [X8+24]
	163 NotImplemented "Instruction CMP not yet implemented."
	164 Add X8, X8, X24
	165 Move W21, [X8+32]
	166 Add X8, X31, 80
	167 Add X0, X31, 128
	168 Call Light2DBlendStyle.get_maskTextureChannelFilter, X0
	169 Move S0, [X31+96]
	170 Move S1, [X31+100]
	171 Move S2, [X31+104]
	172 Move S3, [X31+108]
	173 Move X0, X19
	174 Move W1, W21
	175 Move X2, X31
	176 Call CommandBuffer.SetGlobalVector, X0, X1, X2
	177 Add X24, X24, 1
	178 Move X0, [X23]
	179 Move W8, [X0+224]
	180 Compare W8, 0
	181 JumpIfNotEqual {184}
	182 Call 0x1C17DFC
	183 Move X0, [X23]
	184 Move X9, [X0+184]
	185 Move X8, [X20]
	186 Move X1, [X22]
	187 Move W21, [X9+140]
	188 NotImplemented "Instruction LDRH not yet implemented."
	189 Compare X9, 0
	190 JumpIfEqual {197}
	191 Move X10, [X8+176]
	192 Add X10, X10, 8
	193 NotImplemented "Instruction LDUR not yet implemented."
	194 NotImplemented "Instruction CMP not yet implemented."
	195 Subtract X9, X9, 1
	196 Add X10, X10, 16
	197 Move X0, X20
	198 Move W2, W31
	199 Call 0x1C5D788
	200 NotImplemented "Instruction LDRSW not yet implemented."
	201 Add X8, X8, X9
	202 Add X0, X8, 312
	203 Move X8, [X0]
	204 Move X1, [X0+8]
	205 Move X0, X20
	206 NotImplemented "Instruction BLR not yet implemented."
	207 Compare X0, 0
	208 JumpIfEqual {243}
	209 Move X0, [X0+232]
	210 Add X8, X31, 40
	211 Move X1, X31
	212 Call RenderTargetIdentifier.op_Implicit, X0
	213 NotImplemented "Instruction LDUR not yet implemented."
	214 NotImplemented "Instruction LDUR not yet implemented."
	215 Move X8, [X31+72]
	216 Move [X31+80], V0
	217 Move [X31+88], V1
	218 Move [X31+112], X8
	219 Compare X19, 0
	220 JumpIfEqual {243}
	221 Move V0, [X31+80]
	222 Move V1, [X31+96]
	223 Move X8, [X31+112]
	224 Add X2, X31, 0
	225 Move X0, X19
	226 Move W1, W21
	227 Move X3, X31
	228 Move [X31], V0
	229 Move [X31+8], V1
	230 Move [X31+32], X8
	231 Call CommandBuffer.SetGlobalTexture, X0, X1, X2
	232 Move X20, [X31+224]
	233 Move X19, [X31+232]
	234 Move X22, [X31+208]
	235 Move X21, [X31+216]
	236 Move X24, [X31+192]
	237 Move X23, [X31+200]
	238 Move X26, [X31+176]
	239 Move X25, [X31+184]
	240 Move X30, [X31+160]
	241 Add X31, X31, 240
	242 Return 
	243 Call 0x1C17F20
	244 Call 0x1C17F28

Method: System.Single GetNormalizedInnerRadius(UnityEngine.Rendering.Universal.Light2D light)

Disassembly:
	0x03A2044C MOV X1, X31
	0x03A20450 LDR X8, [X8 + 0xB8]
	0x03A20454 STR W0, [X8 + 0x9C]
	0x03A20458 ADRP X8, 0x734000
	0x03A2045C LDR X8, [X8 + 0x830]
	0x03A20460 LDR X0, [X8]
	0x03A20464 BL 0x3C124EC

ISIL:
	001 Move [X31-16], X30
	002 Compare X0, 0
	003 JumpIfEqual {9}
	004 Move S0, [X0+236]
	005 Move S1, [X0+240]
	006 NotImplemented "Instruction FDIV not yet implemented."
	007 Move X30, [X31+16]
	008 Return V0
	009 Call 0x1C17F20

Method: System.Single GetNormalizedAngle(System.Single angle)

Disassembly:
	0x03A20468 LDR X8, [X20]
	0x03A2046C MOV X1, X31
	0x03A20470 LDR X8, [X8 + 0xB8]
	0x03A20474 STR W0, [X8 + 0xA0]

ISIL:
	001 Move W8, 0x43B40000
	002 Move S1, W8
	003 NotImplemented "Instruction FDIV not yet implemented."
	004 Return V0

Method: System.Void GetScaledLightInvMatrix(UnityEngine.Rendering.Universal.Light2D light, out UnityEngine.Matrix4x4 retMatrix)

Disassembly:
	0x03A20478 ADRP X8, 0x734000
	0x03A2047C LDR X8, [X8 + 0x7B0]
	0x03A20480 LDR X0, [X8]
	0x03A20484 BL 0x3C124EC
	0x03A20488 LDR X8, [X20]
	0x03A2048C MOV X1, X31
	0x03A20490 LDR X8, [X8 + 0xB8]
	0x03A20494 STR W0, [X8 + 0xA4]
	0x03A20498 LDR X0, [X19]
	0x03A2049C BL 0x3C124EC
	0x03A204A0 LDR X8, [X20]
	0x03A204A4 MOV X1, X31
	0x03A204A8 LDR X8, [X8 + 0xB8]
	0x03A204AC STR W0, [X8 + 0xA8]
	0x03A204B0 ADRP X8, 0x734000
	0x03A204B4 LDR X8, [X8 + 0x7C8]
	0x03A204B8 LDR X0, [X8]
	0x03A204BC BL 0x3C124EC
	0x03A204C0 LDR X8, [X20]
	0x03A204C4 MOV X1, X31
	0x03A204C8 LDR X8, [X8 + 0xB8]
	0x03A204CC STR W0, [X8 + 0xAC]
	0x03A204D0 ADRP X8, 0x734000
	0x03A204D4 LDR X8, [X8 + 0x7F0]
	0x03A204D8 LDR X0, [X8]
	0x03A204DC BL 0x3C124EC
	0x03A204E0 LDR X8, [X20]
	0x03A204E4 LDP X20, X19, [X31 + 0x60]
	0x03A204E8 LDP X22, X21, [X31 + 0x50]
	0x03A204EC LDP X24, X23, [X31 + 0x40]
	0x03A204F0 LDR X8, [X8 + 0xB8]
	0x03A204F4 LDP X26, X25, [X31 + 0x30]
	0x03A204F8 LDP X28, X27, [X31 + 0x20]
	0x03A204FC LDP X29, X30, [X31 + 0x10]
	0x03A20500 STR W0, [X8 + 0xB0]
	0x03A20504 ADD X31, X31, 0x70
	0x03A20508 RET
	0x03A2050C BL 0x1C16F28
	0x03A20510 BL 0x1C16F20
	0x03A20514 STP X30, X21, [X31 - 0x20]!
	0x03A20518 STP X20, X19, [X31 + 0x10]
	0x03A2051C MOVZ W21, 0x1
	0x03A20520 MOV X20, X0
	0x03A20524 STR W21, [X0 + 0x28]
	0x03A20528 MOV X0, X31
	0x03A2052C MOV X19, X1
	0x03A20530 BL 0x3C0B398
	0x03A20534 MOVZ W8, 0x3F800000
	0x03A20538 MOV X0, X20
	0x03A2053C MOV X1, X31
	0x03A20540 STP S0, S1, [X20 + 0x38]
	0x03A20544 STP S2, S3, [X20 + 0x40]
	0x03A20548 STR W8, [X20 + 0x48]
	0x03A2054C STR W21, [X20 + 0x50]
	0x03A20550 BL 0x33BDD8C
	0x03A20554 STR X19, [X20 + 0x10]
	0x03A20558 LDP X20, X19, [X31 + 0x10]
	0x03A2055C LDP X30, X21, [X31], #0x20
	0x03A20560 RET
	0x03A20564 STR X30, [X31 - 0x20]!
	0x03A20568 STP X20, X19, [X31 + 0x10]
	0x03A2056C ADRP X20, 0x9C2000
	0x03A20570 LDRB W8, [X20]
	0x03A20574 MOV X19, X0
	0x03A20578 TBNZ X8, 0x0, 0x3A20590
	0x03A2057C ADRP X0, 0x734000
	0x03A20580 LDR X0, [X0 + 0x8B8]
	0x03A20584 BL 0x1C16CF4
	0x03A20588 MOVZ W8, 0x1
	0x03A2058C STRB W8, [X20]
	0x03A20590 LDR X8, [X19 + 0x10]
	0x03A20594 CBZ X8, 0x3A205C0
	0x03A20598 ADRP X9, 0x734000
	0x03A2059C LDR X9, [X9 + 0x8B8]
	0x03A205A0 LDR X10, [X8]
	0x03A205A4 LDR X9, [X9]
	0x03A205A8 LDRB W12, [X10 + 0x130]
	0x03A205AC LDRB W11, [X9 + 0x130]
	0x03A205B0 CMP W12, W11
	0x03A205B4 B.CS 0x3A205C8
	0x03A205B8 MOV X8, X31
	0x03A205BC B 0x3A205DC

ISIL:
	001 Subtract X31, X31, 368
	002 Move [X31+272], D13
	003 Move [X31+280], D12
	004 Move [X31+288], D11
	005 Move [X31+296], D10
	006 Move [X31+304], D9
	007 Move [X31+312], D8
	008 Move [X31+320], X29
	009 Move [X31+336], X30
	010 Move [X31+344], X21
	011 Move [X31+352], X20
	012 Move [X31+360], X19
	013 Compare X0, 0
	014 JumpIfEqual {109}
	015 Move X21, 0x9B9000
	016 Move W8, [X21+2139]
	017 Move V8, [X0+240]
	018 Move X19, X1
	019 Move X20, X0
	020 Compare W8, 0
	021 JumpIfNotEqual {27}
	022 Move X0, 0x6D4000
	023 Move X0, [X0+1440]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X21+2139], W8
	027 Move X8, 0x6D4000
	028 Move X8, [X8+1440]
	029 Move X0, X20
	030 Move X1, X31
	031 Move X8, [X8]
	032 Move X8, [X8+184]
	033 Move S9, [X8+12]
	034 Move S10, [X8+16]
	035 Move V11, [X8+20]
	036 Call Component.get_transform, X0
	037 Compare X0, 0
	038 JumpIfEqual {109}
	039 Move X1, X31
	040 Move X20, X0
	041 Multiply S11, S8, S11
	042 Multiply S12, S8, S10
	043 Multiply S13, S8, S9
	044 Call Transform.get_position, X0
	045 Move X0, X20
	046 Move X1, X31
	047 Move V8, V0
	048 Move V9, V1
	049 Move V10, V2
	050 Call Transform.get_rotation, X0
	051 Move V4, V0
	052 Move V5, V1
	053 Move V6, V2
	054 Move V7, V3
	055 Add X8, X31, 144
	056 Move V0, V8
	057 Move V1, V9
	058 Move V2, V10
	059 Move V3, V4
	060 Move V4, V5
	061 Move V5, V6
	062 Move V6, V7
	063 Move X0, X31
	064 Move [X31+4], S12
	065 Move [X31+12], S11
	066 Move [X31], S13
	067 Call Matrix4x4.TRS, X0, X1, X2
	068 Move V1, [X31+176]
	069 Move V0, [X31+192]
	070 Move V3, [X31+144]
	071 Move V2, [X31+160]
	072 Add X8, X31, 80
	073 Add X0, X31, 16
	074 Move X1, X31
	075 Move [X31+240], V1
	076 Move [X31+248], V0
	077 Move [X31+208], V3
	078 Move [X31+216], V2
	079 Move [X31+16], V3
	080 Move [X31+24], V2
	081 Move [X31+48], V1
	082 Move [X31+56], V0
	083 Call Matrix4x4.Inverse, X0
	084 Move V1, [X31+112]
	085 Move V0, [X31+128]
	086 Move V3, [X31+80]
	087 Move V2, [X31+96]
	088 Move X30, [X31+336]
	089 Move X21, [X31+344]
	090 Move X29, [X31+320]
	091 Move [X31+176], V1
	092 Move [X31+184], V0
	093 Move [X31+144], V3
	094 Move [X31+152], V2
	095 Move [X19+32], V1
	096 Move [X19+40], V0
	097 Move [X19], V3
	098 Move [X19+8], V2
	099 Move X20, [X31+352]
	100 Move X19, [X31+360]
	101 Move D9, [X31+304]
	102 Move D8, [X31+312]
	103 Move D11, [X31+288]
	104 Move D10, [X31+296]
	105 Move D13, [X31+272]
	106 Move D12, [X31+280]
	107 Add X31, X31, 368
	108 Return 
	109 Call 0x1C17F20

Method: System.Void SetGeneralLightShaderGlobals(UnityEngine.Rendering.Universal.IRenderPass2D pass, UnityEngine.Rendering.CommandBuffer cmd, UnityEngine.Rendering.Universal.Light2D light)

Disassembly:
	0x03A1FF34 BL 0x1C16CF4
	0x03A1FF38 ADRP X0, 0x735000
	0x03A1FF3C LDR X0, [X0 + 0x878]
	0x03A1FF40 BL 0x1C16CF4
	0x03A1FF44 ADRP X0, 0x735000
	0x03A1FF48 LDR X0, [X0 + 0x880]
	0x03A1FF4C BL 0x1C16CF4
	0x03A1FF50 ADRP X0, 0x735000
	0x03A1FF54 LDR X0, [X0 + 0x888]
	0x03A1FF58 BL 0x1C16CF4
	0x03A1FF5C ADRP X0, 0x735000
	0x03A1FF60 LDR X0, [X0 + 0x890]
	0x03A1FF64 BL 0x1C16CF4
	0x03A1FF68 ADRP X0, 0x735000
	0x03A1FF6C LDR X0, [X0 + 0x898]
	0x03A1FF70 BL 0x1C16CF4
	0x03A1FF74 ADRP X0, 0x735000
	0x03A1FF78 LDR X0, [X0 + 0x8A0]
	0x03A1FF7C BL 0x1C16CF4
	0x03A1FF80 ADRP X0, 0x735000
	0x03A1FF84 LDR X0, [X0 + 0x7A0]
	0x03A1FF88 BL 0x1C16CF4
	0x03A1FF8C ADRP X0, 0x735000
	0x03A1FF90 LDR X0, [X0 + 0x8A8]
	0x03A1FF94 BL 0x1C16CF4
	0x03A1FF98 ADRP X0, 0x735000
	0x03A1FF9C LDR X0, [X0 + 0x790]
	0x03A1FFA0 BL 0x1C16CF4
	0x03A1FFA4 ADRP X0, 0x735000
	0x03A1FFA8 LDR X0, [X0 + 0x8B0]
	0x03A1FFAC BL 0x1C16CF4
	0x03A1FFB0 MOVZ W8, 0x1
	0x03A1FFB4 STRB W8, [X28 + 0xFFF]
	0x03A1FFB8 LDR X0, [X29]
	0x03A1FFBC BL 0x1C16F10
	0x03A1FFC0 LDR X1, [X19]
	0x03A1FFC4 MOV X2, X31
	0x03A1FFC8 MOV X19, X0
	0x03A1FFCC BL 0x39B19AC
	0x03A1FFD0 LDR X8, [X20]
	0x03A1FFD4 ADD X0, X31, 0x8
	0x03A1FFD8 MOV X2, X31
	0x03A1FFDC LDR X8, [X8 + 0xB8]
	0x03A1FFE0 STR X19, [X8]
	0x03A1FFE4 LDR X1, [X27]
	0x03A1FFE8 STR W31, [X31 + 0x8]
	0x03A1FFEC BL 0x3C5A49C
	0x03A1FFF0 LDR X8, [X20]
	0x03A1FFF4 ADRP X10, 0xFFFFFFFFFD0CB000
	0x03A1FFF8 LDR W9, [X31 + 0x8]
	0x03A1FFFC LDR V0, [X10 + 0xA9]
	0x03A20000 LDR X11, [X8 + 0xB8]
	0x03A20004 MOVZ W1, 0x4
	0x03A20008 STR W9, [X11 + 0x8]
	0x03A2000C STUR V0, [X11 + 0xC]
	0x03A20010 LDR X10, [X26]
	0x03A20014 LDR X8, [X8 + 0xB8]
	0x03A20018 LDR X9, [X25]
	0x03A2001C STP X10, X9, [X8 + 0x20]
	0x03A20020 LDR X10, [X24]
	0x03A20024 LDR X9, [X23]
	0x03A20028 STP X10, X9, [X8 + 0x30]
	0x03A2002C LDR X9, [X22]
	0x03A20030 STR X9, [X8 + 0x40]
	0x03A20034 LDR X0, [X21]
	0x03A20038 BL 0x1C16D6C
	0x03A2003C CBZ X0, 0x3A20510

ISIL:
	001 Move [X31-80], D13
	002 Move [X31-72], D12
	003 Move [X31+16], D11
	004 Move [X31+24], D10
	005 Move [X31+32], D9
	006 Move [X31+40], D8
	007 Move [X31+48], X30
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X21, 0x9C3000
	012 Move W8, [X21+4086]
	013 Move X20, X2
	014 Move X19, X1
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {24}
	019 Move X0, 0x736000
	020 Move X0, [X0+1624]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X21+4086], W8
	024 Compare X20, 0
	025 JumpIfEqual {87}
	026 Move X21, 0x736000
	027 Move X21, [X21+1624]
	028 Move S11, [X20+48]
	029 Move S10, [X20+52]
	030 Move S9, [X20+56]
	031 Move S12, [X20+60]
	032 Move S13, [X20+64]
	033 Move S8, [X20+68]
	034 Move X0, [X21]
	035 Move W8, [X0+224]
	036 Compare W8, 0
	037 JumpIfNotEqual {39}
	038 Call 0x1C17DFC
	039 Compare X19, 0
	040 JumpIfEqual {87}
	041 Move X8, [X21]
	042 Move V0, [X20+44]
	043 Multiply S1, S13, S12
	044 Move X0, X19
	045 Move X8, [X8+184]
	046 Move X2, X31
	047 Multiply S9, S9, S1
	048 Multiply S10, S10, S1
	049 Move W1, [X8+120]
	050 Multiply S11, S11, S1
	051 Call CommandBuffer.SetGlobalFloat, X0, X1, V0
	052 Move X8, [X21]
	053 Move V0, [X20+256]
	054 Move X0, X19
	055 Move X2, X31
	056 Move X8, [X8+184]
	057 Move W1, [X8+124]
	058 Call CommandBuffer.SetGlobalFloat, X0, X1, V0
	059 Move X8, [X21]
	060 Move S3, 1
	061 Move X0, X19
	062 Move V0, V11
	063 Move X8, [X8+184]
	064 Move V1, V10
	065 Move V2, V9
	066 Move X2, X31
	067 Move W1, [X8+128]
	068 Call CommandBuffer.SetGlobalColor, X0, X1, X2
	069 Move X8, [X21]
	070 Move X0, X19
	071 Move V0, V8
	072 Move X20, [X31+64]
	073 Move X19, [X31+72]
	074 Move X8, [X8+184]
	075 Move X30, [X31+48]
	076 Move X21, [X31+56]
	077 Move D9, [X31+32]
	078 Move D8, [X31+40]
	079 Move D11, [X31+16]
	080 Move D10, [X31+24]
	081 Move W1, [X8+132]
	082 Move X2, X31
	083 Move D13, [X31+80]
	084 Move D12, [X31+88]
	085 Call CommandBuffer.SetGlobalFloat, X0, X1, V0
	086 Return 
	087 Call 0x1C17F20

Method: System.Void SetPointLightShaderGlobals(UnityEngine.Rendering.Universal.IRenderPass2D pass, UnityEngine.Rendering.CommandBuffer cmd, UnityEngine.Rendering.Universal.Light2D light)

Disassembly:
	0x03A20040 LDR W8, [X0 + 0x18]
	0x03A20044 CBZ W8, 0x3A2050C
	0x03A20048 ADRP X9, 0x734000
	0x03A2004C LDR X9, [X9 + 0x8A8]
	0x03A20050 CMP W8, 0x1
	0x03A20054 LDR X9, [X9]
	0x03A20058 STR X9, [X0 + 0x20]
	0x03A2005C B.EQ 0x3A2050C
	0x03A20060 ADRP X9, 0x734000
	0x03A20064 LDR X9, [X9 + 0x860]
	0x03A20068 CMP W8, 0x2
	0x03A2006C LDR X9, [X9]
	0x03A20070 STR X9, [X0 + 0x28]
	0x03A20074 B.LS 0x3A2050C
	0x03A20078 ADRP X9, 0x734000
	0x03A2007C LDR X9, [X9 + 0x868]
	0x03A20080 CMP W8, 0x3
	0x03A20084 LDR X9, [X9]
	0x03A20088 STR X9, [X0 + 0x30]
	0x03A2008C B.EQ 0x3A2050C
	0x03A20090 ADRP X8, 0x734000
	0x03A20094 LDR X8, [X8 + 0x7E0]
	0x03A20098 ADRP X21, 0x6D4000
	0x03A2009C ADRP X19, 0x734000
	0x03A200A0 MOVZ W1, 0x4
	0x03A200A4 LDR X8, [X8]
	0x03A200A8 STR X8, [X0 + 0x38]
	0x03A200AC LDR X8, [X20]
	0x03A200B0 LDR X8, [X8 + 0xB8]
	0x03A200B4 LDR X21, [X21 + 0xE58]
	0x03A200B8 STR X0, [X8 + 0x48]
	0x03A200BC LDR X0, [X21]
	0x03A200C0 LDR X19, [X19 + 0x890]
	0x03A200C4 BL 0x1C16D6C
	0x03A200C8 LDR X8, [X19]
	0x03A200CC MOV X19, X0
	0x03A200D0 MOV X1, X31
	0x03A200D4 MOV X0, X8
	0x03A200D8 BL 0x3C124EC
	0x03A200DC CBZ X19, 0x3A20510
	0x03A200E0 LDR W8, [X19 + 0x18]
	0x03A200E4 CBZ W8, 0x3A2050C
	0x03A200E8 ADRP X8, 0x734000
	0x03A200EC LDR X8, [X8 + 0x870]
	0x03A200F0 STR W0, [X19 + 0x20]
	0x03A200F4 MOV X1, X31
	0x03A200F8 LDR X0, [X8]
	0x03A200FC BL 0x3C124EC
	0x03A20100 LDR W8, [X19 + 0x18]
	0x03A20104 CMP W8, 0x1
	0x03A20108 B.LS 0x3A2050C
	0x03A2010C ADRP X8, 0x734000
	0x03A20110 LDR X8, [X8 + 0x818]
	0x03A20114 STR W0, [X19 + 0x24]
	0x03A20118 MOV X1, X31
	0x03A2011C LDR X0, [X8]
	0x03A20120 BL 0x3C124EC
	0x03A20124 LDR W8, [X19 + 0x18]
	0x03A20128 CMP W8, 0x2
	0x03A2012C B.LS 0x3A2050C
	0x03A20130 ADRP X8, 0x734000
	0x03A20134 LDR X8, [X8 + 0x880]
	0x03A20138 STR W0, [X19 + 0x28]
	0x03A2013C MOV X1, X31
	0x03A20140 LDR X0, [X8]
	0x03A20144 BL 0x3C124EC
	0x03A20148 LDR W8, [X19 + 0x18]
	0x03A2014C CMP W8, 0x3
	0x03A20150 B.LS 0x3A2050C
	0x03A20154 STR W0, [X19 + 0x2C]
	0x03A20158 LDR X8, [X20]
	0x03A2015C MOVZ W1, 0x4
	0x03A20160 LDR X8, [X8 + 0xB8]
	0x03A20164 STR X19, [X8 + 0x50]
	0x03A20168 LDR X0, [X21]
	0x03A2016C ADRP X19, 0x734000
	0x03A20170 LDR X19, [X19 + 0x7F8]
	0x03A20174 BL 0x1C16D6C
	0x03A20178 LDR X8, [X19]
	0x03A2017C MOV X19, X0
	0x03A20180 MOV X1, X31
	0x03A20184 MOV X0, X8
	0x03A20188 BL 0x3C124EC
	0x03A2018C CBZ X19, 0x3A20510
	0x03A20190 LDR W8, [X19 + 0x18]
	0x03A20194 CBZ W8, 0x3A2050C
	0x03A20198 ADRP X8, 0x734000
	0x03A2019C LDR X8, [X8 + 0x828]
	0x03A201A0 STR W0, [X19 + 0x20]
	0x03A201A4 MOV X1, X31
	0x03A201A8 LDR X0, [X8]
	0x03A201AC BL 0x3C124EC
	0x03A201B0 LDR W8, [X19 + 0x18]
	0x03A201B4 CMP W8, 0x1
	0x03A201B8 B.LS 0x3A2050C
	0x03A201BC ADRP X8, 0x734000
	0x03A201C0 LDR X8, [X8 + 0x7C0]
	0x03A201C4 STR W0, [X19 + 0x24]
	0x03A201C8 MOV X1, X31
	0x03A201CC LDR X0, [X8]
	0x03A201D0 BL 0x3C124EC
	0x03A201D4 LDR W8, [X19 + 0x18]
	0x03A201D8 CMP W8, 0x2
	0x03A201DC B.LS 0x3A2050C
	0x03A201E0 ADRP X8, 0x734000
	0x03A201E4 LDR X8, [X8 + 0x858]
	0x03A201E8 STR W0, [X19 + 0x28]
	0x03A201EC MOV X1, X31
	0x03A201F0 LDR X0, [X8]
	0x03A201F4 BL 0x3C124EC
	0x03A201F8 LDR W8, [X19 + 0x18]
	0x03A201FC CMP W8, 0x3
	0x03A20200 B.LS 0x3A2050C
	0x03A20204 STR W0, [X19 + 0x2C]
	0x03A20208 LDR X8, [X20]
	0x03A2020C MOVZ W1, 0x4
	0x03A20210 LDR X8, [X8 + 0xB8]
	0x03A20214 STR X19, [X8 + 0x58]
	0x03A20218 LDR X0, [X21]
	0x03A2021C ADRP X19, 0x734000
	0x03A20220 LDR X19, [X19 + 0x850]
	0x03A20224 BL 0x1C16D6C
	0x03A20228 LDR X8, [X19]
	0x03A2022C MOV X19, X0
	0x03A20230 MOV X1, X31
	0x03A20234 MOV X0, X8
	0x03A20238 BL 0x3C124EC
	0x03A2023C CBZ X19, 0x3A20510
	0x03A20240 LDR W8, [X19 + 0x18]
	0x03A20244 CBZ W8, 0x3A2050C
	0x03A20248 ADRP X8, 0x734000
	0x03A2024C LDR X8, [X8 + 0x878]
	0x03A20250 STR W0, [X19 + 0x20]
	0x03A20254 MOV X1, X31
	0x03A20258 LDR X0, [X8]
	0x03A2025C BL 0x3C124EC
	0x03A20260 LDR W8, [X19 + 0x18]
	0x03A20264 CMP W8, 0x1
	0x03A20268 B.LS 0x3A2050C
	0x03A2026C ADRP X8, 0x734000
	0x03A20270 LDR X8, [X8 + 0x7D8]
	0x03A20274 STR W0, [X19 + 0x24]
	0x03A20278 MOV X1, X31
	0x03A2027C LDR X0, [X8]
	0x03A20280 BL 0x3C124EC
	0x03A20284 LDR W8, [X19 + 0x18]
	0x03A20288 CMP W8, 0x2
	0x03A2028C B.LS 0x3A2050C
	0x03A20290 ADRP X8, 0x734000
	0x03A20294 LDR X8, [X8 + 0x810]
	0x03A20298 STR W0, [X19 + 0x28]
	0x03A2029C MOV X1, X31
	0x03A202A0 LDR X0, [X8]
	0x03A202A4 BL 0x3C124EC
	0x03A202A8 LDR W8, [X19 + 0x18]
	0x03A202AC CMP W8, 0x3
	0x03A202B0 B.LS 0x3A2050C
	0x03A202B4 ADRP X8, 0x734000
	0x03A202B8 ADRP X23, 0x734000
	0x03A202BC ADRP X24, 0x734000
	0x03A202C0 ADRP X25, 0x734000
	0x03A202C4 ADRP X26, 0x734000
	0x03A202C8 ADRP X22, 0x734000
	0x03A202CC ADRP X21, 0x734000
	0x03A202D0 ADRP X29, 0x734000
	0x03A202D4 ADRP X27, 0x734000
	0x03A202D8 LDR X8, [X8 + 0x800]
	0x03A202DC LDR X23, [X23 + 0x840]
	0x03A202E0 LDR X24, [X24 + 0x7E8]
	0x03A202E4 LDR X25, [X25 + 0x7D0]
	0x03A202E8 LDR X26, [X26 + 0x848]
	0x03A202EC LDR X22, [X22 + 0x8B0]
	0x03A202F0 LDR X21, [X21 + 0x8A0]
	0x03A202F4 LDR X29, [X29 + 0x808]
	0x03A202F8 LDR X27, [X27 + 0x820]
	0x03A202FC STR W0, [X19 + 0x2C]
	0x03A20300 LDR X9, [X20]
	0x03A20304 ADRP X28, 0x734000
	0x03A20308 LDR X28, [X28 + 0x838]
	0x03A2030C MOVZ W10, 0x8
	0x03A20310 LDR X9, [X9 + 0xB8]
	0x03A20314 MOV X1, X31
	0x03A20318 STR X19, [X9 + 0x60]
	0x03A2031C STR W10, [X9 + 0x68]
	0x03A20320 LDR X0, [X8]
	0x03A20324 ADRP X19, 0x734000
	0x03A20328 LDR X19, [X19 + 0x898]
	0x03A2032C BL 0x3C124EC
	0x03A20330 LDR X8, [X20]
	0x03A20334 MOV X1, X31
	0x03A20338 LDR X8, [X8 + 0xB8]
	0x03A2033C STR W0, [X8 + 0x70]
	0x03A20340 LDR X0, [X23]
	0x03A20344 BL 0x3C124EC
	0x03A20348 LDR X8, [X20]
	0x03A2034C MOV X1, X31
	0x03A20350 LDR X8, [X8 + 0xB8]
	0x03A20354 STR W0, [X8 + 0x74]
	0x03A20358 LDR X0, [X24]
	0x03A2035C BL 0x3C124EC
	0x03A20360 LDR X8, [X20]
	0x03A20364 MOV X1, X31
	0x03A20368 LDR X8, [X8 + 0xB8]
	0x03A2036C STR W0, [X8 + 0x78]
	0x03A20370 LDR X0, [X25]
	0x03A20374 BL 0x3C124EC
	0x03A20378 LDR X8, [X20]
	0x03A2037C MOV X1, X31
	0x03A20380 LDR X8, [X8 + 0xB8]
	0x03A20384 STR W0, [X8 + 0x7C]
	0x03A20388 LDR X0, [X26]
	0x03A2038C BL 0x3C124EC
	0x03A20390 LDR X8, [X20]
	0x03A20394 MOV X1, X31
	0x03A20398 LDR X8, [X8 + 0xB8]
	0x03A2039C STR W0, [X8 + 0x80]
	0x03A203A0 LDR X0, [X22]
	0x03A203A4 BL 0x3C124EC
	0x03A203A8 LDR X8, [X20]
	0x03A203AC MOV X1, X31
	0x03A203B0 LDR X8, [X8 + 0xB8]
	0x03A203B4 STR W0, [X8 + 0x84]
	0x03A203B8 LDR X0, [X21]
	0x03A203BC BL 0x3C124EC
	0x03A203C0 LDR X8, [X20]
	0x03A203C4 MOV X1, X31
	0x03A203C8 LDR X8, [X8 + 0xB8]
	0x03A203CC STR W0, [X8 + 0x88]
	0x03A203D0 LDR X0, [X29]
	0x03A203D4 BL 0x3C124EC
	0x03A203D8 LDR X8, [X20]
	0x03A203DC MOV X1, X31
	0x03A203E0 LDR X8, [X8 + 0xB8]
	0x03A203E4 STR W0, [X8 + 0x8C]
	0x03A203E8 LDR X0, [X27]
	0x03A203EC BL 0x3C124EC
	0x03A203F0 LDR X8, [X20]
	0x03A203F4 MOV X1, X31
	0x03A203F8 LDR X8, [X8 + 0xB8]
	0x03A203FC STR W0, [X8 + 0x90]
	0x03A20400 LDR X0, [X28]
	0x03A20404 BL 0x3C124EC
	0x03A20408 LDR X8, [X20]
	0x03A2040C MOV X1, X31
	0x03A20410 LDR X8, [X8 + 0xB8]
	0x03A20414 STR W0, [X8 + 0x94]
	0x03A20418 ADRP X8, 0x734000
	0x03A2041C LDR X8, [X8 + 0x888]
	0x03A20420 LDR X0, [X8]
	0x03A20424 BL 0x3C124EC
	0x03A20428 LDR X8, [X20]
	0x03A2042C MOV X1, X31
	0x03A20430 LDR X8, [X8 + 0xB8]
	0x03A20434 STR W0, [X8 + 0x98]
	0x03A20438 ADRP X8, 0x734000
	0x03A2043C LDR X8, [X8 + 0x7B8]
	0x03A20440 LDR X0, [X8]
	0x03A20444 BL 0x3C124EC
	0x03A20448 LDR X8, [X20]

ISIL:
	001 Subtract X31, X31, 416
	002 Move [X31+304], D11
	003 Move [X31+312], D10
	004 Move [X31+320], D9
	005 Move [X31+328], D8
	006 Move [X31+336], X29
	007 Move [X31+352], X30
	008 Move [X31+360], X25
	009 Move [X31+368], X24
	010 Move [X31+376], X23
	011 Move [X31+384], X22
	012 Move [X31+392], X21
	013 Move [X31+400], X20
	014 Move [X31+408], X19
	015 Move X22, 0x9C2000
	016 Move X23, 0x735000
	017 Move W8, [X22+4087]
	018 Move X23, [X23+1624]
	019 Move X20, X2
	020 Move X19, X1
	021 Move X21, X0
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {37}
	026 Move X0, 0x735000
	027 Move X0, [X0+1632]
	028 Call 0x1C17CF4
	029 Move X0, 0x6D4000
	030 Move X0, [X0+1432]
	031 Call 0x1C17CF4
	032 Move X0, 0x735000
	033 Move X0, [X0+1624]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X22+4087], W8
	037 Move X0, [X23]
	038 NotImplemented "Instruction MOVI not yet implemented."
	039 Move [X31+272], V0
	040 Move [X31+280], V0
	041 Move [X31+240], V0
	042 Move [X31+248], V0
	043 Move W8, [X0+224]
	044 Compare W8, 0
	045 JumpIfNotEqual {47}
	046 Call 0x1C17DFC
	047 Add X1, X31, 240
	048 Move X0, X20
	049 Call RendererLighting.GetScaledLightInvMatrix, X0, X1
	050 Compare X20, 0
	051 JumpIfEqual {305}
	052 Move X8, [X23]
	053 Move S10, [X20+236]
	054 Move S11, [X20+240]
	055 Move S8, [X20+228]
	056 Move S9, [X20+232]
	057 Move X0, X20
	058 Move X8, [X8+184]
	059 Move X1, X31
	060 Move W22, [X8+144]
	061 Call Component.get_transform, X0
	062 Compare X0, 0
	063 JumpIfEqual {305}
	064 Move X1, X31
	065 Call Transform.get_position, X0
	066 Compare X19, 0
	067 JumpIfEqual {305}
	068 NotImplemented "Instruction FDIV not yet implemented."
	069 Move W8, 0x43B40000
	070 Move S4, 1
	071 Move S5, W8
	072 Subtract S3, S4, S3
	073 NotImplemented "Instruction FDIV not yet implemented."
	074 NotImplemented "Instruction FDIV not yet implemented."
	075 NotImplemented "Instruction FDIV not yet implemented."
	076 Move S3, W31
	077 Move X0, X19
	078 Move W1, W22
	079 Move X2, X31
	080 Add X24, X31, 136
	081 Call CommandBuffer.SetGlobalVector, X0, X1, X2
	082 Move X8, [X23]
	083 Move V0, [X31+240]
	084 Move V1, [X31+256]
	085 Move V2, [X31+272]
	086 Move V3, [X31+288]
	087 Add X2, X31, 176
	088 Move X8, [X8+184]
	089 Move X0, X19
	090 Move X3, X31
	091 Move W1, [X8+148]
	092 Move [X31+176], V0
	093 Move [X31+184], V1
	094 Move [X31+208], V2
	095 Move [X31+216], V3
	096 Call CommandBuffer.SetGlobalMatrix, X0, X1, X2
	097 Move X8, [X23]
	098 Move X0, X19
	099 Move V0, V9
	100 Move X2, X31
	101 Move X8, [X8+184]
	102 Move W1, [X8+152]
	103 Call CommandBuffer.SetGlobalFloat, X0, X1, V0
	104 Move X8, [X23]
	105 Move X0, X19
	106 Move V0, V8
	107 Move X2, X31
	108 Move X8, [X8+184]
	109 Move W1, [X8+156]
	110 Call CommandBuffer.SetGlobalFloat, X0, X1, V0
	111 Move X8, [X23]
	112 Subtract S0, S8, S10
	113 Move S1, 1
	114 NotImplemented "Instruction FDIV not yet implemented."
	115 Move X8, [X8+184]
	116 Move X0, X19
	117 Move X2, X31
	118 Move W1, [X8+160]
	119 Call CommandBuffer.SetGlobalFloat, X0, X1, V0
	120 Move X8, [X23]
	121 Move X8, [X8+184]
	122 Move W22, [X8+164]
	123 Call Light2DLookupTexture.GetLightLookupTexture
	124 Add X8, X31, 136
	125 Move X1, X31
	126 Call RenderTargetIdentifier.op_Implicit, X0
	127 Move V0, [X24]
	128 Move V1, [X24+16]
	129 Move X8, [X31+168]
	130 Add X2, X31, 96
	131 Move X0, X19
	132 Move W1, W22
	133 Move X3, X31
	134 Move [X31+96], V0
	135 Move [X31+104], V1
	136 Move [X31+128], X8
	137 Call CommandBuffer.SetGlobalTexture, X0, X1, X2
	138 Compare X21, 0
	139 JumpIfEqual {305}
	140 Move X9, [X23]
	141 Move X11, 0x735000
	142 Move X8, [X21]
	143 Move X10, [X9+184]
	144 Move X11, [X11+1632]
	145 NotImplemented "Instruction LDRH not yet implemented."
	146 Move W22, [X10+140]
	147 Move X1, [X11]
	148 Compare X9, 0
	149 JumpIfEqual {156}
	150 Move X10, [X8+176]
	151 Add X10, X10, 8
	152 NotImplemented "Instruction LDUR not yet implemented."
	153 NotImplemented "Instruction CMP not yet implemented."
	154 Subtract X9, X9, 1
	155 Add X10, X10, 16
	156 Move X0, X21
	157 Move W2, W31
	158 Call 0x1C5D788
	159 NotImplemented "Instruction LDRSW not yet implemented."
	160 Add X8, X8, X9
	161 Add X0, X8, 312
	162 Move X8, [X0]
	163 Move X1, [X0+8]
	164 Move X0, X21
	165 NotImplemented "Instruction BLR not yet implemented."
	166 Compare X0, 0
	167 JumpIfEqual {305}
	168 Move X0, [X0+232]
	169 Move X25, 0x6D4000
	170 Move X25, [X25+1432]
	171 Add X8, X31, 136
	172 Move X1, X31
	173 Call RenderTargetIdentifier.op_Implicit, X0
	174 Move V0, [X24]
	175 Move V1, [X24+16]
	176 Move X8, [X31+168]
	177 Add X2, X31, 48
	178 Move X0, X19
	179 Move W1, W22
	180 Move X3, X31
	181 Move [X31+48], V0
	182 Move [X31+56], V1
	183 Move [X31+80], X8
	184 Call CommandBuffer.SetGlobalTexture, X0, X1, X2
	185 Move X8, [X23]
	186 Move V0, [X20+44]
	187 Move X0, X19
	188 Move X2, X31
	189 Move X8, [X8+184]
	190 Move W1, [X8+120]
	191 Call CommandBuffer.SetGlobalFloat, X0, X1, V0
	192 Move X8, [X23]
	193 Move S0, 1
	194 NotImplemented "Instruction FCMP not yet implemented."
	195 Move S1, W31
	196 Move X8, [X8+184]
	197 NotImplemented "Instruction FCSEL not yet implemented."
	198 Move X0, X19
	199 Move X2, X31
	200 Move W1, [X8+168]
	201 Call CommandBuffer.SetGlobalFloat, X0, X1, V0
	202 Move X0, [X23]
	203 Move W8, [X0+224]
	204 Compare W8, 0
	205 JumpIfNotEqual {208}
	206 Call 0x1C17DFC
	207 Move X0, [X23]
	208 Move X8, [X0+184]
	209 Move V0, [X20+116]
	210 Move X0, X19
	211 Move X2, X31
	212 Move W1, [X8+172]
	213 Call CommandBuffer.SetGlobalFloat, X0, X1, V0
	214 Move W8, [X20+36]
	215 Move X0, [X25]
	216 Move W9, 88
	217 Move W10, 96
	218 NotImplemented "Instruction CMP not yet implemented."
	219 NotImplemented "Instruction CSEL not yet implemented."
	220 Move W9, [X0+224]
	221 Move X21, [X20]
	222 Compare W9, 0
	223 JumpIfNotEqual {225}
	224 Call 0x1C17DFC
	225 Move X0, X21
	226 Move X1, X31
	227 Move X2, X31
	228 Call Object.op_Inequality, X0, X1
	229 Move TEMP, X0
	230 And TEMP, TEMP, 1
	231 Compare TEMP, 1
	232 JumpIfNotEqual {290}
	233 Move W8, [X20+36]
	234 Move W9, 88
	235 NotImplemented "Instruction CMP not yet implemented."
	236 Move W8, 96
	237 NotImplemented "Instruction CSEL not yet implemented."
	238 Move X0, [X20]
	239 Compare X0, 0
	240 JumpIfEqual {305}
	241 Move X1, X31
	242 Call Sprite.get_texture, X0
	243 Move X8, [X25]
	244 Move X21, X0
	245 Move W9, [X8+224]
	246 Compare W9, 0
	247 JumpIfNotEqual {250}
	248 Move X0, X8
	249 Call 0x1C17DFC
	250 Move X0, X21
	251 Move X1, X31
	252 Move X2, X31
	253 Call Object.op_Inequality, X0, X1
	254 Move TEMP, X0
	255 And TEMP, TEMP, 1
	256 Compare TEMP, 1
	257 JumpIfNotEqual {290}
	258 Move X0, [X23]
	259 Move W8, [X0+224]
	260 Compare W8, 0
	261 JumpIfNotEqual {263}
	262 Call 0x1C17DFC
	263 Move W8, [X20+36]
	264 Move W9, 88
	265 NotImplemented "Instruction CMP not yet implemented."
	266 Move W8, 96
	267 NotImplemented "Instruction CSEL not yet implemented."
	268 Move X0, [X20]
	269 Compare X0, 0
	270 JumpIfEqual {305}
	271 Move X8, [X23]
	272 Move X1, X31
	273 Move X8, [X8+184]
	274 Move W20, [X8+176]
	275 Call Sprite.get_texture, X0
	276 Add X8, X31, 136
	277 Move X1, X31
	278 Call RenderTargetIdentifier.op_Implicit, X0
	279 Move V0, [X24]
	280 Move V1, [X24+16]
	281 Move X8, [X31+168]
	282 Add X2, X31, 0
	283 Move X0, X19
	284 Move W1, W20
	285 Move X3, X31
	286 Move [X31], V0
	287 Move [X31+8], V1
	288 Move [X31+32], X8
	289 Call CommandBuffer.SetGlobalTexture, X0, X1, X2
	290 Move X20, [X31+400]
	291 Move X19, [X31+408]
	292 Move X22, [X31+384]
	293 Move X21, [X31+392]
	294 Move X24, [X31+368]
	295 Move X23, [X31+376]
	296 Move X30, [X31+352]
	297 Move X25, [X31+360]
	298 Move X29, [X31+336]
	299 Move D9, [X31+320]
	300 Move D8, [X31+328]
	301 Move D11, [X31+304]
	302 Move D10, [X31+312]
	303 Add X31, X31, 416
	304 Return 
	305 Call 0x1C17F20

Method: System.Void ClearDirtyLighting(UnityEngine.Rendering.Universal.IRenderPass2D pass, UnityEngine.Rendering.CommandBuffer cmd, System.UInt32 blendStylesUsed)

Disassembly:
	0x03A205C0 STR X31, [X19 + 0x18]
	0x03A205C4 B 0x3A205E0
	0x03A205C8 LDR X10, [X10 + 0xC8]
	0x03A205CC ADD X10, X10, X11, 0x3, LSL
	0x03A205D0 LDUR X10, [X10 - 0x8]
	0x03A205D4 CMP X10, X9
	0x03A205D8 CSEL X8, X8, X31, EQ
	0x03A205DC STR X8, [X19 + 0x18]
	0x03A205E0 LDP X20, X19, [X31 + 0x10]
	0x03A205E4 LDR X30, [X31], #0x20
	0x03A205E8 RET
	0x03A205EC STP X30, X21, [X31 - 0x20]!
	0x03A205F0 STP X20, X19, [X31 + 0x10]
	0x03A205F4 ADRP X21, 0x9C2000
	0x03A205F8 ADRP X20, 0x6D3000
	0x03A205FC LDRB W8, [X21 + 0x1]
	0x03A20600 LDR X20, [X20 + 0x598]
	0x03A20604 MOV X19, X0
	0x03A20608 TBNZ X8, 0x0, 0x3A20620
	0x03A2060C ADRP X0, 0x6D3000
	0x03A20610 LDR X0, [X0 + 0x598]
	0x03A20614 BL 0x1C16CF4
	0x03A20618 MOVZ W8, 0x1
	0x03A2061C STRB W8, [X21 + 0x1]
	0x03A20620 LDR X0, [X20]
	0x03A20624 LDR X20, [X19 + 0x18]
	0x03A20628 LDR W8, [X0 + 0xE0]
	0x03A2062C CBNZ W8, 0x3A20634
	0x03A20630 BL 0x1C16DFC
	0x03A20634 MOV X0, X20
	0x03A20638 MOV X1, X31
	0x03A2063C MOV X2, X31
	0x03A20640 BL 0x3C354F8
	0x03A20644 TBZ X0, 0x0, 0x3A20650
	0x03A20648 LDR X8, [X19 + 0x18]
	0x03A2064C STR X8, [X19 + 0x10]
	0x03A20650 LDP X20, X19, [X31 + 0x10]
	0x03A20654 LDP X30, X21, [X31], #0x20
	0x03A20658 RET
	0x03A2065C SUB X31, X31, 0x90
	0x03A20660 STP D11, D10, [X31 + 0x10]
	0x03A20664 STP D9, D8, [X31 + 0x20]
	0x03A20668 STP X29, X30, [X31 + 0x30]
	0x03A2066C STP X28, X27, [X31 + 0x40]
	0x03A20670 STP X26, X25, [X31 + 0x50]
	0x03A20674 STP X24, X23, [X31 + 0x60]
	0x03A20678 STP X22, X21, [X31 + 0x70]
	0x03A2067C STP X20, X19, [X31 + 0x80]
	0x03A20680 ADRP X20, 0x9C2000
	0x03A20684 LDRB W8, [X20 + 0x2]
	0x03A20688 MOV W22, W1
	0x03A2068C MOV X19, X0
	0x03A20690 STR W2, [X31 + 0xC]
	0x03A20694 TBNZ X8, 0x0, 0x3A206B8
	0x03A20698 ADRP X0, 0x734000
	0x03A2069C LDR X0, [X0 + 0x8C0]
	0x03A206A0 BL 0x1C16CF4
	0x03A206A4 ADRP X0, 0x6D3000
	0x03A206A8 LDR X0, [X0 + 0x5A8]
	0x03A206AC BL 0x1C16CF4
	0x03A206B0 MOVZ W8, 0x1
	0x03A206B4 STRB W8, [X20 + 0x2]
	0x03A206B8 LDR X21, [X19 + 0x10]
	0x03A206BC CBZ X21, 0x3A20CB8
	0x03A206C0 ADRP X20, 0x734000
	0x03A206C4 LDR X8, [X21]
	0x03A206C8 LDR X20, [X20 + 0x8C0]
	0x03A206CC LDRH W9, [X8 + 0x12E]
	0x03A206D0 LDR X1, [X20]
	0x03A206D4 CBZ X9, 0x3A206F8
	0x03A206D8 LDR X10, [X8 + 0xB0]
	0x03A206DC ADD X10, X10, 0x8
	0x03A206E0 LDUR X11, [X10 - 0x8]
	0x03A206E4 CMP X11, X1
	0x03A206E8 B.EQ 0x3A20708
	0x03A206EC SUBS X9, X9, 0x1
	0x03A206F0 ADD X10, X10, 0x10
	0x03A206F4 B.NE 0x3A206E0
	0x03A206F8 MOV X0, X21
	0x03A206FC MOV W2, W31
	0x03A20700 BL 0x1C5C788
	0x03A20704 B 0x3A20714
	0x03A20708 LDRSW X9, [X10]
	0x03A2070C ADD X8, X8, X9, 0x4, LSL
	0x03A20710 ADD X0, X8, 0x138
	0x03A20714 LDP X8, X1, [X0]
	0x03A20718 MOV X0, X21
	0x03A2071C BLR X8
	0x03A20720 LDR X23, [X19 + 0x10]
	0x03A20724 CBZ X23, 0x3A20CB8
	0x03A20728 LDR X8, [X23]
	0x03A2072C LDR X1, [X20]
	0x03A20730 MOV W21, W0
	0x03A20734 LDRH W9, [X8 + 0x12E]
	0x03A20738 CBZ X9, 0x3A2075C
	0x03A2073C LDR X10, [X8 + 0xB0]
	0x03A20740 ADD X10, X10, 0x8
	0x03A20744 LDUR X11, [X10 - 0x8]
	0x03A20748 CMP X11, X1
	0x03A2074C B.EQ 0x3A2076C
	0x03A20750 SUBS X9, X9, 0x1
	0x03A20754 ADD X10, X10, 0x10
	0x03A20758 B.NE 0x3A20744
	0x03A2075C MOVZ W2, 0x2
	0x03A20760 MOV X0, X23
	0x03A20764 BL 0x1C5C788
	0x03A20768 B 0x3A2077C
	0x03A2076C LDR W9, [X10]
	0x03A20770 ADD W9, W9, 0x2
	0x03A20774 ADD X8, X8, W9, 0x4, SXTW
	0x03A20778 ADD X0, X8, 0x138
	0x03A2077C LDP X8, X1, [X0]
	0x03A20780 MOV X0, X23
	0x03A20784 BLR X8
	0x03A20788 LDR X24, [X19 + 0x10]
	0x03A2078C CBZ X24, 0x3A20CB8
	0x03A20790 LDR X8, [X24]
	0x03A20794 LDR X1, [X20]
	0x03A20798 MOV W23, W0
	0x03A2079C LDRH W9, [X8 + 0x12E]
	0x03A207A0 CBZ X9, 0x3A207C4
	0x03A207A4 LDR X10, [X8 + 0xB0]
	0x03A207A8 ADD X10, X10, 0x8
	0x03A207AC LDUR X11, [X10 - 0x8]
	0x03A207B0 CMP X11, X1
	0x03A207B4 B.EQ 0x3A207D4
	0x03A207B8 SUBS X9, X9, 0x1
	0x03A207BC ADD X10, X10, 0x10
	0x03A207C0 B.NE 0x3A207AC
	0x03A207C4 MOVZ W2, 0x4
	0x03A207C8 MOV X0, X24
	0x03A207CC BL 0x1C5C788
	0x03A207D0 B 0x3A207E4
	0x03A207D4 LDR W9, [X10]
	0x03A207D8 ADD W9, W9, 0x4
	0x03A207DC ADD X8, X8, W9, 0x4, SXTW
	0x03A207E0 ADD X0, X8, 0x138
	0x03A207E4 LDP X8, X1, [X0]
	0x03A207E8 MOV X0, X24
	0x03A207EC BLR X8
	0x03A207F0 LDR X24, [X19 + 0x10]
	0x03A207F4 CBZ X24, 0x3A20CB8
	0x03A207F8 LDR X8, [X24]
	0x03A207FC LDR X1, [X20]
	0x03A20800 MOV W25, W0
	0x03A20804 LDRH W9, [X8 + 0x12E]
	0x03A20808 CBZ X9, 0x3A2082C
	0x03A2080C LDR X10, [X8 + 0xB0]
	0x03A20810 ADD X10, X10, 0x8
	0x03A20814 LDUR X11, [X10 - 0x8]
	0x03A20818 CMP X11, X1
	0x03A2081C B.EQ 0x3A2083C
	0x03A20820 SUBS X9, X9, 0x1
	0x03A20824 ADD X10, X10, 0x10
	0x03A20828 B.NE 0x3A20814
	0x03A2082C MOVZ W2, 0x6
	0x03A20830 MOV X0, X24
	0x03A20834 BL 0x1C5C788
	0x03A20838 B 0x3A2084C
	0x03A2083C LDR W9, [X10]
	0x03A20840 ADD W9, W9, 0x6
	0x03A20844 ADD X8, X8, W9, 0x4, SXTW
	0x03A20848 ADD X0, X8, 0x138
	0x03A2084C LDP X8, X1, [X0]
	0x03A20850 MOV X0, X24
	0x03A20854 BLR X8
	0x03A20858 LDR X26, [X19 + 0x10]
	0x03A2085C CBZ X26, 0x3A20CB8
	0x03A20860 LDR X8, [X26]
	0x03A20864 LDR X1, [X20]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X22, 0x9C2000
	010 Move W8, [X22+4088]
	011 Move W19, W2
	012 Move X20, X1
	013 Move X21, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0x6FC000
	019 Move X0, [X0+2296]
	020 Call 0x1C17CF4
	021 Move X0, 0x735000
	022 Move X0, [X0+1632]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X22+4088], W8
	026 Compare X21, 0
	027 JumpIfEqual {189}
	028 Move X24, 0x735000
	029 Move X25, 0x6FC000
	030 Move X24, [X24+1632]
	031 Move X25, [X25+2296]
	032 Move X23, X31
	033 Move X8, [X21]
	034 Move X1, [X24]
	035 NotImplemented "Instruction LDRH not yet implemented."
	036 Compare X9, 0
	037 JumpIfEqual {44}
	038 Move X10, [X8+176]
	039 Add X10, X10, 8
	040 NotImplemented "Instruction LDUR not yet implemented."
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Subtract X9, X9, 1
	043 Add X10, X10, 16
	044 Move X0, X21
	045 Move W2, W31
	046 Call 0x1C5D788
	047 NotImplemented "Instruction LDRSW not yet implemented."
	048 Add X8, X8, X9
	049 Add X0, X8, 312
	050 Move X8, [X0]
	051 Move X1, [X0+8]
	052 Move X0, X21
	053 NotImplemented "Instruction BLR not yet implemented."
	054 Compare X0, 0
	055 JumpIfEqual {189}
	056 Move X8, [X0+88]
	057 Compare X8, 0
	058 JumpIfEqual {189}
	059 NotImplemented "Instruction LDRSW not yet implemented."
	060 NotImplemented "Instruction CMP not yet implemented."
	061 NotImplemented "Instruction LSRV not yet implemented."
	062 Move TEMP, X8
	063 And TEMP, TEMP, 1
	064 Compare TEMP, 1
	065 JumpIfNotEqual {179}
	066 Move X8, [X21]
	067 Move X1, [X24]
	068 NotImplemented "Instruction LDRH not yet implemented."
	069 Compare X9, 0
	070 JumpIfEqual {77}
	071 Move X10, [X8+176]
	072 Add X10, X10, 8
	073 NotImplemented "Instruction LDUR not yet implemented."
	074 NotImplemented "Instruction CMP not yet implemented."
	075 Subtract X9, X9, 1
	076 Add X10, X10, 16
	077 Move X0, X21
	078 Move W2, W31
	079 Call 0x1C5D788
	080 NotImplemented "Instruction LDRSW not yet implemented."
	081 Add X8, X8, X9
	082 Add X0, X8, 312
	083 Move X8, [X0]
	084 Move X1, [X0+8]
	085 Move X0, X21
	086 NotImplemented "Instruction BLR not yet implemented."
	087 Compare X0, 0
	088 JumpIfEqual {189}
	089 Move X8, [X0+88]
	090 Compare X8, 0
	091 JumpIfEqual {189}
	092 Move W9, [X8+24]
	093 NotImplemented "Instruction CMP not yet implemented."
	094 Add X8, X8, X23
	095 Move W8, [X8+48]
	096 Compare W8, 0
	097 JumpIfEqual {179}
	098 Move X8, [X21]
	099 Move X1, [X24]
	100 NotImplemented "Instruction LDRH not yet implemented."
	101 Compare X9, 0
	102 JumpIfEqual {109}
	103 Move X10, [X8+176]
	104 Add X10, X10, 8
	105 NotImplemented "Instruction LDUR not yet implemented."
	106 NotImplemented "Instruction CMP not yet implemented."
	107 Subtract X9, X9, 1
	108 Add X10, X10, 16
	109 Move X0, X21
	110 Move W2, W31
	111 Call 0x1C5D788
	112 NotImplemented "Instruction LDRSW not yet implemented."
	113 Add X8, X8, X9
	114 Add X0, X8, 312
	115 Move X8, [X0]
	116 Move X1, [X0+8]
	117 Move X0, X21
	118 NotImplemented "Instruction BLR not yet implemented."
	119 Compare X0, 0
	120 JumpIfEqual {189}
	121 Move X8, [X0+88]
	122 Compare X8, 0
	123 JumpIfEqual {189}
	124 Move W9, [X8+24]
	125 NotImplemented "Instruction CMP not yet implemented."
	126 Move X0, [X25]
	127 Add X8, X8, X23
	128 Move X22, [X8+56]
	129 Move W9, [X0+224]
	130 Compare W9, 0
	131 JumpIfNotEqual {133}
	132 Call 0x1C17DFC
	133 Move S0, W31
	134 Move S1, W31
	135 Move S2, W31
	136 Move S3, 1
	137 Move W2, 1
	138 Move TEMP, 0
	139 Not TEMP
	140 Move W4, TEMP
	141 Move TEMP, 0
	142 Not TEMP
	143 Move W5, TEMP
	144 Move X0, X20
	145 Move X1, X22
	146 Move W3, W31
	147 Move X6, X31
	148 Call CoreUtils.SetRenderTarget, X0, X1, X2, X3, X4, X5, X6
	149 Move X8, [X21]
	150 Move X1, [X24]
	151 NotImplemented "Instruction LDRH not yet implemented."
	152 Compare X9, 0
	153 JumpIfEqual {160}
	154 Move X10, [X8+176]
	155 Add X10, X10, 8
	156 NotImplemented "Instruction LDUR not yet implemented."
	157 NotImplemented "Instruction CMP not yet implemented."
	158 Subtract X9, X9, 1
	159 Add X10, X10, 16
	160 Move X0, X21
	161 Move W2, W31
	162 Call 0x1C5D788
	163 NotImplemented "Instruction LDRSW not yet implemented."
	164 Add X8, X8, X9
	165 Add X0, X8, 312
	166 Move X8, [X0]
	167 Move X1, [X0+8]
	168 Move X0, X21
	169 NotImplemented "Instruction BLR not yet implemented."
	170 Compare X0, 0
	171 JumpIfEqual {189}
	172 Move X8, [X0+88]
	173 Compare X8, 0
	174 JumpIfEqual {189}
	175 Move W9, [X8+24]
	176 NotImplemented "Instruction CMP not yet implemented."
	177 Add X8, X8, X23
	178 Move [X8+48], W31
	179 Add X23, X23, 1
	180 Move X20, [X31+48]
	181 Move X19, [X31+56]
	182 Move X22, [X31+32]
	183 Move X21, [X31+40]
	184 Move X24, [X31+16]
	185 Move X23, [X31+24]
	186 Move X30, [X31+64]
	187 Move X25, [X31+72]
	188 Return 
	189 Call 0x1C17F20
	190 Call 0x1C17F28

Method: System.Void RenderNormals(UnityEngine.Rendering.Universal.IRenderPass2D pass, UnityEngine.Rendering.ScriptableRenderContext context, UnityEngine.Rendering.Universal.RenderingData renderingData, UnityEngine.Rendering.DrawingSettings drawSettings, UnityEngine.Rendering.FilteringSettings filterSettings, UnityEngine.Rendering.RenderTargetIdentifier depthTarget, ref System.Boolean bFirstClear)

Disassembly:
	0x03A1ADF4 BL 0x3EB1AC0
	0x03A1ADF8 LDR X0, [X31 + 0x38]
	0x03A1ADFC LDR W3, [X31 + 0x2C]
	0x03A1AE00 ADD X1, X31, 0x148
	0x03A1AE04 MOV X2, X24
	0x03A1AE08 MOV X4, X21
	0x03A1AE0C MOV W5, W19
	0x03A1AE10 MOV V0.16B, V8.16B
	0x03A1AE14 MOV X6, X31
	0x03A1AE18 BL 0x3A28F90
	0x03A1AE1C TBZ X0, 0x0, 0x3A1AE34
	0x03A1AE20 LDR X8, [X31 + 0x6C0]
	0x03A1AE24 SXTW X9, W20
	0x03A1AE28 MOVZ W10, 0x1
	0x03A1AE2C ADD W19, W19, 0x1
	0x03A1AE30 STRB W10, [X8, X9, LSL]
	0x03A1AE34 ADD W26, W26, 0x1
	0x03A1AE38 CMP X28, W26, SXTW
	0x03A1AE3C B.GT 0x3A1AD5C
	0x03A1AE40 B 0x3A1AE4C
	0x03A1AE44 MOV W19, W31
	0x03A1AE48 MOV W26, W31
	0x03A1AE4C LDR X28, [X31 + 0x38]
	0x03A1AE50 CMP W19, 0x1
	0x03A1AE54 CSET W8, LT
	0x03A1AE58 BIC W8, W8, W22, 0x0
	0x03A1AE5C TBNZ X8, 0x0, 0x3A1AEE8
	0x03A1AE60 LDP X9, X10, [X31 + 0x10]
	0x03A1AE64 LDR X8, [X9 + 0x20]
	0x03A1AE68 LDP V1, V0, [X9]
	0x03A1AE6C ADD W9, W26, W25
	0x03A1AE70 STR X8, [X31 + 0x420]
	0x03A1AE74 STR V0, [X31 + 0x41]
	0x03A1AE78 STR V1, [X31 + 0x40]
	0x03A1AE7C LDR X8, [X10 + 0x20]
	0x03A1AE80 LDP V0, V1, [X10]
	0x03A1AE84 LDR W10, [X31 + 0x8]
	0x03A1AE88 STR X8, [X31 + 0xA0]
	0x03A1AE8C STP V0, V1, [X31 + 0x80]
	0x03A1AE90 CMP W9, W10
	0x03A1AE94 LDR W9, [X31 + 0x20]
	0x03A1AE98 LDR W10, [X31 + 0xC]
	0x03A1AE9C CSEL W3, W9, W10, LT
	0x03A1AEA0 CBZ X24, 0x3A1B338
	0x03A1AEA4 LDR V0, [X31 + 0x40]
	0x03A1AEA8 LDR V1, [X31 + 0x41]
	0x03A1AEAC LDR X8, [X31 + 0x420]
	0x03A1AEB0 LDP V2, V3, [X31 + 0x80]
	0x03A1AEB4 LDR X9, [X31 + 0xA0]
	0x03A1AEB8 ADD X1, X31, 0x120
	0x03A1AEBC ADD X4, X31, 0xF0
	0x03A1AEC0 MOV X0, X24
	0x03A1AEC4 MOV W2, W31
	0x03A1AEC8 MOV W5, W31
	0x03A1AECC MOV W6, W3
	0x03A1AED0 MOV X7, X31
	0x03A1AED4 STP V0, V1, [X31 + 0x120]
	0x03A1AED8 STR X8, [X31 + 0x140]
	0x03A1AEDC STP V2, V3, [X31 + 0xF0]
	0x03A1AEE0 STR X9, [X31 + 0x110]
	0x03A1AEE4 BL 0x3C4E184
	0x03A1AEE8 CMP W26, 0x1
	0x03A1AEEC B.LT 0x3A1B2EC
	0x03A1AEF0 MOV X29, X31
	0x03A1AEF4 MOV W22, W26
	0x03A1AEF8 STR W31, [X31 + 0x24]
	0x03A1AEFC LDR X2, [X23]
	0x03A1AF00 ADD W21, W25, W29
	0x03A1AF04 MOV X0, X27
	0x03A1AF08 MOV W1, W21
	0x03A1AF0C BL 0x301BCCC
	0x03A1AF10 CBZ X0, 0x3A1B338
	0x03A1AF14 LDR W8, [X0 + 0x24]
	0x03A1AF18 MOV X19, X0
	0x03A1AF1C CMP W8, 0x4
	0x03A1AF20 B.EQ 0x3A1B2A4
	0x03A1AF24 LDR V0, [X19 + 0x44]
	0x03A1AF28 FCMP S0, 0x0
	0x03A1AF2C B.LS 0x3A1B2A4
	0x03A1AF30 LDRB W8, [X19 + 0x48]
	0x03A1AF34 CBZ W8, 0x3A1B2A4
	0x03A1AF38 MOV X0, X19
	0x03A1AF3C BL 0x3A137AC
	0x03A1AF40 LDR W8, [X31 + 0x28]
	0x03A1AF44 CMP W0, W8
	0x03A1AF48 B.NE 0x3A1B2A4
	0x03A1AF4C CBZ X28, 0x3A1B338
	0x03A1AF50 LDR X8, [X28]
	0x03A1AF54 ADRP X10, 0x73A000
	0x03A1AF58 LDRH W9, [X8 + 0x12E]
	0x03A1AF5C LDR X10, [X10 + 0x660]
	0x03A1AF60 LDR X1, [X10]
	0x03A1AF64 CBZ X9, 0x3A1AF88
	0x03A1AF68 LDR X10, [X8 + 0xB0]
	0x03A1AF6C ADD X10, X10, 0x8
	0x03A1AF70 LDUR X11, [X10 - 0x8]
	0x03A1AF74 CMP X11, X1
	0x03A1AF78 B.EQ 0x3A1AF98
	0x03A1AF7C SUBS X9, X9, 0x1
	0x03A1AF80 ADD X10, X10, 0x10
	0x03A1AF84 B.NE 0x3A1AF70
	0x03A1AF88 MOV X0, X28
	0x03A1AF8C MOV W2, W31
	0x03A1AF90 BL 0x1C5C788
	0x03A1AF94 B 0x3A1AFA4
	0x03A1AF98 LDRSW X9, [X10]
	0x03A1AF9C ADD X8, X8, X9, 0x4, LSL
	0x03A1AFA0 ADD X0, X8, 0x138
	0x03A1AFA4 LDP X8, X1, [X0]
	0x03A1AFA8 MOV X0, X28
	0x03A1AFAC BLR X8
	0x03A1AFB0 ADRP X28, 0x73A000
	0x03A1AFB4 LDR X28, [X28 + 0x658]
	0x03A1AFB8 MOV X20, X0
	0x03A1AFBC LDR X8, [X28]
	0x03A1AFC0 LDR W9, [X8 + 0xE0]
	0x03A1AFC4 CBNZ W9, 0x3A1AFD0
	0x03A1AFC8 MOV X0, X8
	0x03A1AFCC BL 0x1C16DFC
	0x03A1AFD0 MOVZ W2, 0x1
	0x03A1AFD4 MOV X0, X20
	0x03A1AFD8 MOV X1, X19
	0x03A1AFDC BL 0x3A1EE2C
	0x03A1AFE0 MOV X20, X0
	0x03A1AFE4 MOV X0, X19
	0x03A1AFE8 BL 0x3A131A8
	0x03A1AFEC LDR X8, [X31 + 0x6C0]
	0x03A1AFF0 LDRB W8, [X8, W21, SXTW]
	0x03A1AFF4 MOV X21, X0
	0x03A1AFF8 CBZ W8, 0x3A1B03C
	0x03A1AFFC ADRP X8, 0x73A000
	0x03A1B000 LDR X8, [X8 + 0x6A0]
	0x03A1B004 LDR X0, [X8]
	0x03A1B008 LDR W8, [X0 + 0xE0]
	0x03A1B00C CBNZ W8, 0x3A1B014
	0x03A1B010 BL 0x1C16DFC
	0x03A1B014 LDR W2, [X31 + 0x24]
	0x03A1B018 MOV X0, X24
	0x03A1B01C MOV X1, X19
	0x03A1B020 MOV X3, X31
	0x03A1B024 ADD W28, W2, 0x1
	0x03A1B028 BL 0x3A29DD0
	0x03A1B02C STR W28, [X31 + 0x24]
	0x03A1B030 ADRP X28, 0x739000
	0x03A1B034 LDR X28, [X28 + 0x658]
	0x03A1B038 B 0x3A1B060
	0x03A1B03C ADRP X8, 0x739000
	0x03A1B040 LDR X8, [X8 + 0x6A0]
	0x03A1B044 LDR X0, [X8]
	0x03A1B048 LDR W8, [X0 + 0xE0]
	0x03A1B04C CBNZ W8, 0x3A1B054
	0x03A1B050 BL 0x1C16DFC
	0x03A1B054 MOV X0, X24
	0x03A1B058 MOV X1, X31
	0x03A1B05C BL 0x3A29F54
	0x03A1B060 LDR W8, [X19 + 0x24]
	0x03A1B064 CMP W8, 0x2
	0x03A1B068 B.NE 0x3A1B19C
	0x03A1B06C ADRP X8, 0x6D8000
	0x03A1B070 LDR X8, [X8 + 0x598]
	0x03A1B074 LDR X28, [X19 + 0x58]
	0x03A1B078 LDR X0, [X8]
	0x03A1B07C LDR W8, [X0 + 0xE0]
	0x03A1B080 CBNZ W8, 0x3A1B088
	0x03A1B084 BL 0x1C16DFC
	0x03A1B088 MOV X0, X28
	0x03A1B08C MOV X1, X31
	0x03A1B090 MOV X2, X31
	0x03A1B094 BL 0x3C354F8
	0x03A1B098 ADRP X28, 0x739000
	0x03A1B09C LDR X28, [X28 + 0x658]
	0x03A1B0A0 TBZ X0, 0x0, 0x3A1B19C
	0x03A1B0A4 LDR W8, [X19 + 0x24]
	0x03A1B0A8 MOVZ W9, 0x60
	0x03A1B0AC CMP W8, 0x3
	0x03A1B0B0 MOVZ W8, 0x58
	0x03A1B0B4 CSEL X8, X9, X8, EQ
	0x03A1B0B8 LDR X0, [X19, X8, LSL]
	0x03A1B0BC CBZ X0, 0x3A1B338
	0x03A1B0C0 MOV X1, X31
	0x03A1B0C4 BL 0x3C41990
	0x03A1B0C8 ADRP X8, 0x6D8000
	0x03A1B0CC LDR X8, [X8 + 0x598]
	0x03A1B0D0 MOV X28, X0
	0x03A1B0D4 LDR X8, [X8]
	0x03A1B0D8 LDR W9, [X8 + 0xE0]
	0x03A1B0DC CBNZ W9, 0x3A1B0E8
	0x03A1B0E0 MOV X0, X8
	0x03A1B0E4 BL 0x1C16DFC
	0x03A1B0E8 MOV X0, X28
	0x03A1B0EC MOV X1, X31
	0x03A1B0F0 MOV X2, X31
	0x03A1B0F4 BL 0x3C354F8
	0x03A1B0F8 ADRP X28, 0x739000
	0x03A1B0FC LDR X28, [X28 + 0x658]
	0x03A1B100 TBZ X0, 0x0, 0x3A1B19C
	0x03A1B104 LDR X0, [X28]
	0x03A1B108 LDR W8, [X0 + 0xE0]
	0x03A1B10C CBNZ W8, 0x3A1B118
	0x03A1B110 BL 0x1C16DFC
	0x03A1B114 LDR X0, [X28]
	0x03A1B118 LDR W8, [X19 + 0x24]
	0x03A1B11C MOVZ W9, 0x60
	0x03A1B120 CMP W8, 0x3
	0x03A1B124 MOVZ W8, 0x58
	0x03A1B128 CSEL X8, X9, X8, EQ
	0x03A1B12C LDR X8, [X19, X8, LSL]
	0x03A1B130 CBZ X8, 0x3A1B338
	0x03A1B134 LDR X9, [X0 + 0xB8]
	0x03A1B138 MOV X0, X8
	0x03A1B13C MOV X1, X31
	0x03A1B140 LDR W28, [X9 + 0x88]
	0x03A1B144 BL 0x3C41990
	0x03A1B148 ADD X8, X31, 0x80
	0x03A1B14C MOV X1, X31
	0x03A1B150 BL 0x3C4B274
	0x03A1B154 LDP V0, V1, [X31 + 0x80]
	0x03A1B158 LDR X8, [X31 + 0xA0]
	0x03A1B15C STR V0, [X31 + 0x40]
	0x03A1B160 STR V1, [X31 + 0x41]
	0x03A1B164 STR X8, [X31 + 0x420]
	0x03A1B168 CBZ X24, 0x3A1B338
	0x03A1B16C LDR V0, [X31 + 0x40]
	0x03A1B170 LDR V1, [X31 + 0x41]
	0x03A1B174 LDR X8, [X31 + 0x420]
	0x03A1B178 ADD X2, X31, 0xC0
	0x03A1B17C MOV X0, X24
	0x03A1B180 MOV W1, W28
	0x03A1B184 MOV X3, X31
	0x03A1B188 STP V0, V1, [X31 + 0xC0]
	0x03A1B18C STR X8, [X31 + 0xE0]
	0x03A1B190 BL 0x3C4FCFC
	0x03A1B194 ADRP X28, 0x739000
	0x03A1B198 LDR X28, [X28 + 0x658]
	0x03A1B19C LDR X0, [X28]
	0x03A1B1A0 LDR X28, [X31 + 0x38]
	0x03A1B1A4 LDR W8, [X0 + 0xE0]
	0x03A1B1A8 CBNZ W8, 0x3A1B1B0
	0x03A1B1AC BL 0x1C16DFC
	0x03A1B1B0 MOV X1, X24
	0x03A1B1B4 MOV X2, X19
	0x03A1B1B8 BL 0x3A1EF34
	0x03A1B1BC LDR W8, [X19 + 0x78]
	0x03A1B1C0 CMP W8, 0x2
	0x03A1B1C4 B.NE 0x3A1B1D4
	0x03A1B1C8 LDR W8, [X19 + 0x24]
	0x03A1B1CC CMP W8, 0x3
	0x03A1B1D0 B.NE 0x3A1B200
	0x03A1B1D4 ADRP X8, 0x739000
	0x03A1B1D8 LDR X8, [X8 + 0x658]
	0x03A1B1DC LDR X0, [X8]
	0x03A1B1E0 LDR W8, [X0 + 0xE0]
	0x03A1B1E4 CBNZ W8, 0x3A1B1EC
	0x03A1B1E8 BL 0x1C16DFC
	0x03A1B1EC MOV X0, X28
	0x03A1B1F0 MOV X1, X24
	0x03A1B1F4 MOV X2, X19
	0x03A1B1F8 BL 0x3A1F040
	0x03A1B1FC LDR W8, [X19 + 0x24]
	0x03A1B200 CMP W8, 0x3
	0x03A1B204 B.CS 0x3A1B274
	0x03A1B208 MOV X0, X19
	0x03A1B20C MOV X1, X31
	0x03A1B210 BL 0x3C32E90
	0x03A1B214 CBZ X0, 0x3A1B338
	0x03A1B218 ADD X8, X31, 0x80
	0x03A1B21C MOV X1, X31
	0x03A1B220 BL 0x3C3F1C8
	0x03A1B224 LDP V0, V1, [X31 + 0x80]
	0x03A1B228 LDP V2, V3, [X31 + 0xA0]
	0x03A1B22C STR V0, [X31 + 0x40]
	0x03A1B230 STR V1, [X31 + 0x41]
	0x03A1B234 STR V2, [X31 + 0x42]
	0x03A1B238 STR V3, [X31 + 0x43]
	0x03A1B23C CBZ X24, 0x3A1B338
	0x03A1B240 LDR V0, [X31 + 0x40]
	0x03A1B244 LDR V1, [X31 + 0x41]
	0x03A1B248 LDR V2, [X31 + 0x42]
	0x03A1B24C LDR V3, [X31 + 0x43]
	0x03A1B250 ADD X2, X31, 0x40
	0x03A1B254 MOV X0, X24
	0x03A1B258 MOV X1, X21
	0x03A1B25C MOV X3, X20
	0x03A1B260 MOV X4, X31
	0x03A1B264 STP V0, V1, [X31 + 0x40]
	0x03A1B268 STP V2, V3, [X31 + 0x60]
	0x03A1B26C BL 0x3C4F0D4
	0x03A1B270 B 0x3A1B2A4
	0x03A1B274 B.NE 0x3A1B2A4
	0x03A1B278 ADRP X8, 0x739000
	0x03A1B27C LDR X8, [X8 + 0x658]
	0x03A1B280 LDR X0, [X8]
	0x03A1B284 LDR W8, [X0 + 0xE0]
	0x03A1B288 CBNZ W8, 0x3A1B290
	0x03A1B28C BL 0x1C16DFC
	0x03A1B290 MOV X0, X24
	0x03A1B294 MOV X1, X19
	0x03A1B298 MOV X2, X21
	0x03A1B29C MOV X3, X20
	0x03A1B2A0 BL 0x3A1E414
	0x03A1B2A4 ADD X29, X29, 0x1
	0x03A1B2A8 CMP X29, X22
	0x03A1B2AC B.NE 0x3A1AEFC
	0x03A1B2B0 LDP W8, W29, [X31 + 0x24]
	0x03A1B2B4 ADRP X20, 0x739000
	0x03A1B2B8 LDR X20, [X20 + 0x6A0]
	0x03A1B2BC SUBS W19, W8, 0x1
	0x03A1B2C0 B.MI 0x3A1B2EC
	0x03A1B2C4 LDR X0, [X20]
	0x03A1B2C8 LDR W8, [X0 + 0xE0]
	0x03A1B2CC CBNZ W8, 0x3A1B2D4
	0x03A1B2D0 BL 0x1C16DFC
	0x03A1B2D4 MOV X0, X24
	0x03A1B2D8 MOV W1, W19
	0x03A1B2DC MOV X2, X31
	0x03A1B2E0 BL 0x3A29FE0
	0x03A1B2E4 SUBS W19, W19, 0x1
	0x03A1B2E8 B.PL 0x3A1B2C4
	0x03A1B2EC LDR W19, [X27 + 0x18]
	0x03A1B2F0 ADD W25, W26, W25
	0x03A1B2F4 MOV W22, W31
	0x03A1B2F8 CMP W25, W19
	0x03A1B2FC B.LT 0x3A1AD44
	0x03A1B300 ADRP X8, 0x739000
	0x03A1B304 LDR X8, [X8 + 0x6A8]
	0x03A1B308 ADD X0, X31, 0x6C0
	0x03A1B30C LDR X1, [X8]
	0x03A1B310 BL 0x23C810C
	0x03A1B314 ADD X31, X31, 0x6D0
	0x03A1B318 LDP X20, X19, [X31 + 0x60]
	0x03A1B31C LDP X22, X21, [X31 + 0x50]
	0x03A1B320 LDP X24, X23, [X31 + 0x40]
	0x03A1B324 LDP X26, X25, [X31 + 0x30]
	0x03A1B328 LDP X28, X27, [X31 + 0x20]
	0x03A1B32C LDP X29, X30, [X31 + 0x10]
	0x03A1B330 LDR V8, [X31], #0x70
	0x03A1B334 RET
	0x03A1B338 BL 0x1C16F20
	0x03A1B33C STR X30, [X31 - 0x30]!
	0x03A1B340 STP X22, X21, [X31 + 0x10]
	0x03A1B344 STP X20, X19, [X31 + 0x20]
	0x03A1B348 ADD X20, X0, 0x30
	0x03A1B34C MOV X19, X1
	0x03A1B350 MOVN X21, 0xF
	0x03A1B354 MOV X22, X20
	0x03A1B358 LDRB W8, [X22]
	0x03A1B35C CBZ W8, 0x3A1B378
	0x03A1B360 CBZ X19, 0x3A1B394
	0x03A1B364 LDR W1, [X20, X21, LSL]
	0x03A1B368 MOV X0, X19
	0x03A1B36C MOV X2, X31
	0x03A1B370 BL 0x3C4CBB0
	0x03A1B374 STRB W31, [X22]
	0x03A1B378 ADDS X21, X21, 0x4
	0x03A1B37C ADD X22, X22, 0x1
	0x03A1B380 B.NE 0x3A1B358
	0x03A1B384 LDP X20, X19, [X31 + 0x20]
	0x03A1B388 LDP X22, X21, [X31 + 0x10]
	0x03A1B38C LDR X30, [X31], #0x30
	0x03A1B390 RET
	0x03A1B394 BL 0x1C16F20
	0x03A1B398 STP X29, X30, [X31 - 0x60]!
	0x03A1B39C STP X28, X27, [X31 + 0x10]
	0x03A1B3A0 STP X26, X25, [X31 + 0x20]
	0x03A1B3A4 STP X24, X23, [X31 + 0x30]
	0x03A1B3A8 STP X22, X21, [X31 + 0x40]
	0x03A1B3AC STP X20, X19, [X31 + 0x50]
	0x03A1B3B0 SUB X31, X31, 0xDB0
	0x03A1B3B4 MRS X25, 0xC000
	0x03A1B3B8 LDR X8, [X25 + 0x28]
	0x03A1B3BC ADD X26, X31, 0x2F0
	0x03A1B3C0 ADRP X22, 0x9C6000
	0x03A1B3C4 ADRP X21, 0x701000
	0x03A1B3C8 STR X8, [X31 + 0xDA8]
	0x03A1B3CC STR X1, [X26 + 0x538]
	0x03A1B3D0 LDRB W8, [X22 + 0xFDB]
	0x03A1B3D4 LDR X21, [X21 + 0xD28]
	0x03A1B3D8 MOV X19, X2
	0x03A1B3DC MOV X20, X0
	0x03A1B3E0 TBNZ X8, 0x0, 0x3A1B44C
	0x03A1B3E4 ADRP X0, 0x700000
	0x03A1B3E8 LDR X0, [X0 + 0x8F8]
	0x03A1B3EC BL 0x1C16CF4
	0x03A1B3F0 ADRP X0, 0x739000
	0x03A1B3F4 LDR X0, [X0 + 0xB8]
	0x03A1B3F8 BL 0x1C16CF4
	0x03A1B3FC ADRP X0, 0x739000
	0x03A1B400 LDR X0, [X0 + 0x668]
	0x03A1B404 BL 0x1C16CF4
	0x03A1B408 ADRP X0, 0x739000
	0x03A1B40C LDR X0, [X0 + 0x688]
	0x03A1B410 BL 0x1C16CF4
	0x03A1B414 ADRP X0, 0x701000
	0x03A1B418 LDR X0, [X0 + 0xD28]
	0x03A1B41C BL 0x1C16CF4
	0x03A1B420 ADRP X0, 0x739000
	0x03A1B424 LDR X0, [X0 + 0x658]
	0x03A1B428 BL 0x1C16CF4
	0x03A1B42C ADRP X0, 0x735000
	0x03A1B430 LDR X0, [X0 + 0xC80]
	0x03A1B434 BL 0x1C16CF4
	0x03A1B438 ADRP X0, 0x739000
	0x03A1B43C LDR X0, [X0 + 0x6A0]
	0x03A1B440 BL 0x1C16CF4
	0x03A1B444 MOVZ W8, 0x1
	0x03A1B448 STRB W8, [X22 + 0xFDB]
	0x03A1B44C ADD X0, X31, 0xCE0
	0x03A1B450 MOVZ W2, 0xC4
	0x03A1B454 MOV W1, W31
	0x03A1B458 BL 0x3EB1B10

ISIL:
	001 Move [X31-128], D11
	002 Move [X31-120], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X29
	006 Move [X31+40], X30
	007 Move [X31+48], X28
	008 Move [X31+56], X27
	009 Move [X31+64], X26
	010 Move [X31+72], X25
	011 Move [X31+80], X24
	012 Move [X31+88], X23
	013 Move [X31+96], X22
	014 Move [X31+104], X21
	015 Move [X31+112], X20
	016 Move [X31+120], X19
	017 Subtract X31, X31, 1760
	018 Move X22, 0x9C8000
	019 Move [X31+1752], X1
	020 Move X27, 0x73B000
	021 Move W8, [X22+4089]
	022 Move X27, [X27+1624]
	023 Move X26, X6
	024 Move X24, X5
	025 Move X19, X4
	026 Move X20, X3
	027 Move X21, X2
	028 Move X23, X0
	029 Move TEMP, X8
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfEqual {50}
	033 Move X0, 0x702000
	034 Move X0, [X0+2296]
	035 Call 0x1C17CF4
	036 Move X0, 0x73B000
	037 Move X0, [X0+184]
	038 Call 0x1C17CF4
	039 Move X0, 0x73B000
	040 Move X0, [X0+1632]
	041 Call 0x1C17CF4
	042 Move X0, 0x73B000
	043 Move X0, [X0+1624]
	044 Call 0x1C17CF4
	045 Move X0, 0x737000
	046 Move X0, [X0+3200]
	047 Call 0x1C17CF4
	048 Move W8, 1
	049 Move [X22+4089], W8
	050 Move X0, [X27]
	051 Move [X31+1744], W31
	052 Move X22, [X21]
	053 Move W8, [X0+224]
	054 Compare W8, 0
	055 JumpIfNotEqual {58}
	056 Call 0x1C17DFC
	057 Move X0, [X27]
	058 Move X8, [X0+184]
	059 Add X0, X31, 1744
	060 Move X1, X22
	061 Move X3, X31
	062 Move X2, [X8]
	063 Call ProfilingScope..ctor, X0, X1, X2
	064 Move X8, [X24+32]
	065 Move V1, [X24]
	066 Move V0, [X24+16]
	067 Move [X31+928], X8
	068 Move [X31+896], V1
	069 Move [X31+904], V0
	070 Add X8, X31, 1696
	071 Move W0, W31
	072 Move X1, X31
	073 Call RenderTargetIdentifier.op_Implicit, X0
	074 Move V0, [X31+106]
	075 Move V1, [X31+107]
	076 Move X8, [X31+1728]
	077 Move V2, [X31+896]
	078 Move V3, [X31+912]
	079 Move X9, [X31+928]
	080 Move [X31+100], V0
	081 Move [X31+101], V1
	082 Move [X31+1632], X8
	083 Move [X31+103], V2
	084 Move [X31+104], V3
	085 Move [X31+1680], X9
	086 Add X0, X31, 1648
	087 Add X1, X31, 1600
	088 Move X2, X31
	089 Call RenderTargetIdentifier.op_Inequality, X0, X1
	090 Move X28, 0x73B000
	091 Move X28, [X28+1632]
	092 Move S8, 1
	093 Move TEMP, X0
	094 And TEMP, TEMP, 1
	095 Compare TEMP, 1
	096 JumpIfEqual {128}
	097 Compare X23, 0
	098 JumpIfEqual {420}
	099 Move X8, [X23]
	100 Move X1, [X28]
	101 NotImplemented "Instruction LDRH not yet implemented."
	102 Compare X9, 0
	103 JumpIfEqual {110}
	104 Move X10, [X8+176]
	105 Add X10, X10, 8
	106 NotImplemented "Instruction LDUR not yet implemented."
	107 NotImplemented "Instruction CMP not yet implemented."
	108 Subtract X9, X9, 1
	109 Add X10, X10, 16
	110 Move X0, X23
	111 Move W2, W31
	112 Call 0x1C5D788
	113 NotImplemented "Instruction LDRSW not yet implemented."
	114 Add X8, X8, X9
	115 Add X0, X8, 312
	116 Move X8, [X0]
	117 Move X1, [X0+8]
	118 Move X0, X23
	119 NotImplemented "Instruction BLR not yet implemented."
	120 Compare X0, 0
	121 JumpIfEqual {421}
	122 Move X8, -49475584
	123 Move V0, [X0+80]
	124 Move V8, [X8+816]
	125 NotImplemented "Instruction FCMP not yet implemented."
	126 Move S1, 1
	127 NotImplemented "Instruction FMIN not yet implemented."
	128 Add X0, X31, 896
	129 Move W2, 696
	130 Move X1, X21
	131 Call 0x3EB2AC0
	132 Move X0, [X27]
	133 Move W8, [X0+224]
	134 Compare W8, 0
	135 JumpIfNotEqual {137}
	136 Call 0x1C17DFC
	137 Add X0, X31, 200
	138 Add X1, X31, 896
	139 Move W2, 696
	140 Call 0x3EB2AC0
	141 Add X1, X31, 200
	142 Move X0, X23
	143 Move X2, X22
	144 Move V0, V8
	145 Call RendererLighting.CreateNormalMapRenderTexture, X0, X1, X2, V0
	146 Move W8, [X21+248]
	147 NotImplemented "Instruction CMP not yet implemented."
	148 NotImplemented "Instruction CSET not yet implemented."
	149 Compare X23, 0
	150 JumpIfEqual {417}
	151 Move X8, [X23]
	152 Move X1, [X28]
	153 NotImplemented "Instruction LDRH not yet implemented."
	154 Compare X9, 0
	155 JumpIfEqual {162}
	156 Move X10, [X8+176]
	157 Add X10, X10, 8
	158 NotImplemented "Instruction LDUR not yet implemented."
	159 NotImplemented "Instruction CMP not yet implemented."
	160 Subtract X9, X9, 1
	161 Add X10, X10, 16
	162 Move X0, X23
	163 Move W2, W31
	164 Call 0x1C5D788
	165 NotImplemented "Instruction LDRSW not yet implemented."
	166 Add X8, X8, X9
	167 Add X0, X8, 312
	168 Move X8, [X0]
	169 Move X1, [X0+8]
	170 Move X0, X23
	171 NotImplemented "Instruction BLR not yet implemented."
	172 Compare X0, 0
	173 JumpIfEqual {418}
	174 Move W9, [X26]
	175 Move W8, [X0+96]
	176 Move [X26], W31
	177 Move X11, [X24+32]
	178 Move V0, [X24]
	179 Move V1, [X24+16]
	180 NotImplemented "Instruction CMP not yet implemented."
	181 Move W10, 7
	182 NotImplemented "Instruction CCMP not yet implemented."
	183 NotImplemented "Instruction CSINC not yet implemented."
	184 Move [X31+928], X11
	185 Move [X31+896], V0
	186 Move [X31+904], V1
	187 Add X8, X31, 1696
	188 Move W0, W31
	189 Move X1, X31
	190 Call RenderTargetIdentifier.op_Implicit, X0
	191 Move V0, [X31+106]
	192 Move V1, [X31+107]
	193 Move X8, [X31+1728]
	194 Move V2, [X31+896]
	195 Move V3, [X31+912]
	196 Move X9, [X31+928]
	197 Move [X31+112], V0
	198 Move [X31+120], V1
	199 Move [X31+144], X8
	200 Move [X31+160], V2
	201 Move [X31+168], V3
	202 Move [X31+192], X9
	203 Add X0, X31, 160
	204 Add X1, X31, 112
	205 Move X2, X31
	206 Call RenderTargetIdentifier.op_Inequality, X0, X1
	207 Move X8, [X23]
	208 Move X1, [X28]
	209 NotImplemented "Instruction LDRH not yet implemented."
	210 Move TEMP, X0
	211 And TEMP, TEMP, 1
	212 Compare TEMP, 1
	213 JumpIfNotEqual {225}
	214 Compare W9, 0
	215 JumpIfEqual {222}
	216 Move X10, [X8+176]
	217 Add X10, X10, 8
	218 NotImplemented "Instruction LDUR not yet implemented."
	219 NotImplemented "Instruction CMP not yet implemented."
	220 Subtract X9, X9, 1
	221 Add X10, X10, 16
	222 Move X0, X23
	223 Move W2, W31
	224 Call 0x1C5D788
	225 Compare W9, 0
	226 JumpIfEqual {233}
	227 Move X10, [X8+176]
	228 Add X10, X10, 8
	229 NotImplemented "Instruction LDUR not yet implemented."
	230 NotImplemented "Instruction CMP not yet implemented."
	231 Subtract X9, X9, 1
	232 Add X10, X10, 16
	233 Move X0, X23
	234 Move W2, W31
	235 Call 0x1C5D788
	236 NotImplemented "Instruction LDRSW not yet implemented."
	237 Add X8, X8, X9
	238 Add X0, X8, 312
	239 Move X8, [X0]
	240 Move X1, [X0+8]
	241 Move X0, X23
	242 NotImplemented "Instruction BLR not yet implemented."
	243 Compare X0, 0
	244 JumpIfEqual {422}
	245 Move X0, [X0+296]
	246 Add X8, X31, 1696
	247 Move X1, X31
	248 Call RTHandle.op_Implicit, X0
	249 Move V0, [X31+106]
	250 Move V1, [X31+107]
	251 Move X8, [X31+1728]
	252 Move X0, [X27]
	253 Move [X31+896], V0
	254 Move [X31+904], V1
	255 Move [X31+928], X8
	256 Move X8, [X24+32]
	257 Move V1, [X24]
	258 Move V0, [X24+16]
	259 Move [X31+1728], X8
	260 Move [X31+107], V0
	261 Move [X31+106], V1
	262 Move W8, [X0+224]
	263 Compare W8, 0
	264 JumpIfNotEqual {267}
	265 Call 0x1C17DFC
	266 Move X0, [X27]
	267 Move X9, 0x701000
	268 Move X8, [X0+184]
	269 Move X9, [X9+2296]
	270 Move S11, [X8+12]
	271 Move S10, [X8+16]
	272 Move X0, [X9]
	273 Move S9, [X8+20]
	274 Move S8, [X8+24]
	275 Move W9, [X0+224]
	276 Compare W9, 0
	277 JumpIfNotEqual {279}
	278 Call 0x1C17DFC
	279 Move V0, [X31+896]
	280 Move V1, [X31+912]
	281 Move X8, [X31+928]
	282 Move V2, [X31+106]
	283 Move V3, [X31+107]
	284 Move X9, [X31+1728]
	285 Move [X31+64], V0
	286 Move [X31+72], V1
	287 Move [X31+96], X8
	288 Move [X31+16], V2
	289 Move [X31+24], V3
	290 Move [X31+48], X9
	291 Add X1, X31, 64
	292 Add X4, X31, 16
	293 Move W2, 2
	294 Move X0, X22
	295 Move W3, W25
	296 Move W5, W31
	297 Move W6, W31
	298 Move W7, W26
	299 Move V0, V11
	300 Move V1, V10
	301 Move V2, V9
	302 Move V3, V8
	303 Move [X31], X31
	304 Call CoreUtils.SetRenderTarget, X0, X1, X2, X3, X4, X5, X6, X7, X8
	305 NotImplemented "Instruction LDRSW not yet implemented."
	306 Add X8, X8, X9
	307 Add X0, X8, 312
	308 Move X8, [X0]
	309 Move X1, [X0+8]
	310 Move X0, X23
	311 NotImplemented "Instruction BLR not yet implemented."
	312 Move X8, X0
	313 Compare X0, 0
	314 JumpIfEqual {423}
	315 Move X0, [X27]
	316 Move X23, [X8+296]
	317 Move W9, [X0+224]
	318 Compare W9, 0
	319 JumpIfNotEqual {322}
	320 Call 0x1C17DFC
	321 Move X0, [X27]
	322 Move X9, 0x701000
	323 Move X8, [X0+184]
	324 Move X9, [X9+2296]
	325 Move S10, [X8+12]
	326 Move S8, [X8+16]
	327 Move X0, [X9]
	328 Move S11, [X8+20]
	329 Move S9, [X8+24]
	330 Move W9, [X0+224]
	331 Compare W9, 0
	332 JumpIfNotEqual {334}
	333 Call 0x1C17DFC
	334 Move W2, 2
	335 Move TEMP, 0
	336 Not TEMP
	337 Move W6, TEMP
	338 Move TEMP, 0
	339 Not TEMP
	340 Move W7, TEMP
	341 Move X0, X22
	342 Move X1, X23
	343 Move W3, W25
	344 Move W4, W26
	345 Move V0, V10
	346 Move V1, V8
	347 Move V2, V11
	348 Move V3, V9
	349 Move W5, W31
	350 Move [X31], X31
	351 Call CoreUtils.SetRenderTarget, X0, X1, X2, X3, X4, X5, X6, X7, X8
	352 Move X8, 0x736000
	353 Move X8, [X8+3200]
	354 Move X0, [X8]
	355 Move W8, [X0+224]
	356 Compare W8, 0
	357 JumpIfNotEqual {359}
	358 Call 0x1C17DFC
	359 Add X0, X31, 1752
	360 Move X1, X22
	361 Move X2, X31
	362 Call ScriptableRenderContext.ExecuteCommandBuffer, X0, X1
	363 Compare X22, 0
	364 JumpIfEqual {419}
	365 Move X0, X22
	366 Move X1, X31
	367 Call CommandBuffer.Clear, X0
	368 Move X0, [X27]
	369 Move W8, [X0+224]
	370 Compare W8, 0
	371 JumpIfNotEqual {374}
	372 Call 0x1C17DFC
	373 Move X0, [X27]
	374 Move X8, 0x73A000
	375 Move X8, [X8+184]
	376 Move X9, [X0+184]
	377 Move X8, [X8]
	378 Move W22, [X9+8]
	379 Move W10, [X8+224]
	380 Compare W10, 0
	381 JumpIfNotEqual {384}
	382 Move X0, X8
	383 Call 0x1C17DFC
	384 Move X0, X20
	385 Move W1, W31
	386 Move X2, X22
	387 Move X3, X31
	388 Call DrawingSettings.SetShaderPassName, X0, X1, X2
	389 Move X1, [X21+8]
	390 Move X2, [X21+16]
	391 Add X0, X31, 1752
	392 Move X3, X20
	393 Move X4, X19
	394 Move X5, X31
	395 Call ScriptableRenderContext.DrawRenderers, X0, X1, X2, X3
	396 Add X0, X31, 1744
	397 Move X1, X31
	398 Call ProfilingScope.Dispose, X0
	399 Add X31, X31, 1760
	400 Move X20, [X31+112]
	401 Move X19, [X31+120]
	402 Move X22, [X31+96]
	403 Move X21, [X31+104]
	404 Move X24, [X31+80]
	405 Move X23, [X31+88]
	406 Move X26, [X31+64]
	407 Move X25, [X31+72]
	408 Move X28, [X31+48]
	409 Move X27, [X31+56]
	410 Move X29, [X31+32]
	411 Move X30, [X31+40]
	412 Move D9, [X31+16]
	413 Move D8, [X31+24]
	414 Move D11, [X31+128]
	415 Move D10, [X31+136]
	416 Return 
	417 Call 0x1C17F20
	418 Call 0x1C17F20
	419 Call 0x1C17F20
	420 Call 0x1C17F20
	421 Call 0x1C17F20
	422 Call 0x1C17F20
	423 Call 0x1C17F20
	424 Move X19, X0
	425 NotImplemented "Instruction CMP not yet implemented."
	426 Move X0, X19
	427 Call 0x3EB2AD0
	428 Move X20, [X0]
	429 Call 0x3EB2AE0
	430 Add X0, X31, 1744
	431 Move X1, X31
	432 Call ProfilingScope.Dispose, X0
	433 Compare X20, 0
	434 JumpIfEqual {399}
	435 Move X0, X20
	436 Call 0x1C17F18
	437 Move X20, X31
	438 Move X19, X0
	439 Add X0, X31, 1744
	440 Move X1, X31
	441 Call ProfilingScope.Dispose, X0
	442 Compare X20, 0
	443 JumpIfNotEqual {446}
	444 Move X0, X19
	445 Call 0x1D2D690
	446 Move X0, X20
	447 Call 0x1C17F18
	448 Call 0x1991590

Method: System.Void RenderLights(UnityEngine.Rendering.Universal.IRenderPass2D pass, UnityEngine.Rendering.Universal.RenderingData renderingData, UnityEngine.Rendering.CommandBuffer cmd, System.Int32 layerToRender, ref UnityEngine.Rendering.Universal.LayerBatch layerBatch, ref UnityEngine.RenderTextureDescriptor rtDesc)

Disassembly:
	0x03A1B45C ADD X0, X31, 0xC18
	0x03A1B460 MOVZ W2, 0xC4
	0x03A1B464 MOV W1, W31
	0x03A1B468 BL 0x3EB1B10
	0x03A1B46C MOVI V0.2D, 0x0
	0x03A1B470 ADD X0, X31, 0xB50
	0x03A1B474 MOVZ W2, 0xC4
	0x03A1B478 MOV W1, W31
	0x03A1B47C STR W31, [X31 + 0x7A0]
	0x03A1B480 STR V0, [X26 + 0x51]
	0x03A1B484 STR V0, [X26 + 0x50]
	0x03A1B488 STR V0, [X26 + 0x4F]
	0x03A1B48C STR V0, [X26 + 0x4E]
	0x03A1B490 STR V0, [X26 + 0x4D]
	0x03A1B494 STR V0, [X26 + 0x4C]
	0x03A1B498 STR V0, [X26 + 0x4A]
	0x03A1B49C STR V0, [X26 + 0x49]
	0x03A1B4A0 STR V0, [X26 + 0x48]
	0x03A1B4A4 STR W31, [X31 + 0x76C]
	0x03A1B4A8 BL 0x3EB1B10
	0x03A1B4AC LDR X0, [X21]
	0x03A1B4B0 MOVI V0.2D, 0x0
	0x03A1B4B4 STR V0, [X26 + 0x46]
	0x03A1B4B8 STR V0, [X26 + 0x45]
	0x03A1B4BC STR V0, [X26 + 0x44]
	0x03A1B4C0 STR V0, [X26 + 0x43]
	0x03A1B4C4 STR V0, [X26 + 0x42]
	0x03A1B4C8 STR V0, [X26 + 0x41]
	0x03A1B4CC STRB W31, [X31 + 0x6F8]
	0x03A1B4D0 LDR X21, [X19 + 0xD8]
	0x03A1B4D4 STR X31, [X26 + 0x528]
	0x03A1B4D8 STR X31, [X26 + 0x520]
	0x03A1B4DC STR X31, [X26 + 0x530]
	0x03A1B4E0 LDR W8, [X0 + 0xE0]
	0x03A1B4E4 CBNZ W8, 0x3A1B4EC
	0x03A1B4E8 BL 0x1C16DFC
	0x03A1B4EC MOV X0, X31
	0x03A1B4F0 BL 0x3C54008
	0x03A1B4F4 MOV X1, X0
	0x03A1B4F8 ADD X0, X31, 0x810
	0x03A1B4FC MOV X2, X31
	0x03A1B500 BL 0x3C54020
	0x03A1B504 ADD X0, X31, 0x810
	0x03A1B508 MOVN W1, 0x0
	0x03A1B50C MOV X2, X31
	0x03A1B510 BL 0x3C54028
	0x03A1B514 ADD X0, X31, 0x810
	0x03A1B518 MOVN W1, 0x0
	0x03A1B51C MOV X2, X31
	0x03A1B520 BL 0x3C54030
	0x03A1B524 MOV X0, X31
	0x03A1B528 BL 0x3C54010
	0x03A1B52C AND X1, X0, 0x0
	0x03A1B530 ADD X0, X31, 0x810
	0x03A1B534 MOV X2, X31
	0x03A1B538 BL 0x3C54044
	0x03A1B53C LDR X8, [X20 + 0xF0]
	0x03A1B540 CBZ X8, 0x3A1BD1C
	0x03A1B544 ADRP X23, 0x9C7000
	0x03A1B548 LDRB W9, [X23 + 0x10]
	0x03A1B54C LDR W22, [X8 + 0x6C]
	0x03A1B550 CBNZ W9, 0x3A1B56C
	0x03A1B554 ADRP X0, 0x739000
	0x03A1B558 LDR X0, [X0 + 0x698]
	0x03A1B55C BL 0x1C16CF4
	0x03A1B560 MOVZ W8, 0x1
	0x03A1B564 STRB W8, [X23 + 0x10]
	0x03A1B568 LDR X8, [X20 + 0xF0]
	0x03A1B56C ADRP X9, 0x739000
	0x03A1B570 LDR X9, [X9 + 0x698]
	0x03A1B574 CMP W22, 0x4
	0x03A1B578 MOVZ W10, 0x4
	0x03A1B57C CSEL W10, W22, W10, HI
	0x03A1B580 LDR X9, [X9]
	0x03A1B584 LDR X9, [X9 + 0xB8]
	0x03A1B588 STR W10, [X9 + 0x8]
	0x03A1B58C CBZ X8, 0x3A1BD1C
	0x03A1B590 ADRP X9, 0x739000
	0x03A1B594 LDR X9, [X9 + 0x6A0]
	0x03A1B598 LDR W22, [X8 + 0x70]
	0x03A1B59C LDR X0, [X9]
	0x03A1B5A0 LDR W9, [X0 + 0xE0]
	0x03A1B5A4 CBNZ W9, 0x3A1B5AC
	0x03A1B5A8 BL 0x1C16DFC
	0x03A1B5AC MOV W0, W22
	0x03A1B5B0 MOV X1, X31
	0x03A1B5B4 BL 0x3A2830C
	0x03A1B5B8 LDR X8, [X20 + 0xF0]
	0x03A1B5BC CBZ X8, 0x3A1BD1C
	0x03A1B5C0 LDR X22, [X8 + 0x158]
	0x03A1B5C4 CBZ X22, 0x3A1BD1C
	0x03A1B5C8 ADRP X10, 0x739000
	0x03A1B5CC LDR X8, [X22]
	0x03A1B5D0 LDR X10, [X10 + 0x668]
	0x03A1B5D4 ADRP X27, 0x739000
	0x03A1B5D8 LDRH W9, [X8 + 0x12E]
	0x03A1B5DC LDR X1, [X10]
	0x03A1B5E0 LDR X27, [X27 + 0x688]
	0x03A1B5E4 CBZ X9, 0x3A1B608
	0x03A1B5E8 LDR X10, [X8 + 0xB0]
	0x03A1B5EC ADD X10, X10, 0x8
	0x03A1B5F0 LDUR X11, [X10 - 0x8]
	0x03A1B5F4 CMP X11, X1
	0x03A1B5F8 B.EQ 0x3A1B618
	0x03A1B5FC SUBS X9, X9, 0x1
	0x03A1B600 ADD X10, X10, 0x10
	0x03A1B604 B.NE 0x3A1B5F0
	0x03A1B608 MOVZ W2, 0x3
	0x03A1B60C MOV X0, X22
	0x03A1B610 BL 0x1C5C788
	0x03A1B614 B 0x3A1B628
	0x03A1B618 LDR W9, [X10]
	0x03A1B61C ADD W9, W9, 0x3
	0x03A1B620 ADD X8, X8, W9, 0x4, SXTW
	0x03A1B624 ADD X0, X8, 0x138
	0x03A1B628 LDP X8, X1, [X0]
	0x03A1B62C MOV X0, X22
	0x03A1B630 BLR X8
	0x03A1B634 LDR X8, [X27]
	0x03A1B638 MOV W22, W0
	0x03A1B63C LDR W9, [X8 + 0xE0]
	0x03A1B640 CBNZ W9, 0x3A1B650
	0x03A1B644 MOV X0, X8
	0x03A1B648 BL 0x1C16DFC
	0x03A1B64C LDR X8, [X27]
	0x03A1B650 LDR X8, [X8 + 0xB8]
	0x03A1B654 MOVZ W3, 0x17
	0x03A1B658 MOV X0, X20
	0x03A1B65C MOV X2, X19
	0x03A1B660 LDR X1, [X8 + 0x28]
	0x03A1B664 ADD X8, X31, 0xA88
	0x03A1B668 MOV X4, X31
	0x03A1B66C TBZ X22, 0x0, 0x3A1B908
	0x03A1B670 BL 0x3A42FD4
	0x03A1B674 ADD X0, X31, 0xCE0
	0x03A1B678 ADD X1, X31, 0xA88
	0x03A1B67C MOVZ W2, 0xC4
	0x03A1B680 BL 0x3EB1AC0
	0x03A1B684 LDR X8, [X27]
	0x03A1B688 MOVZ W3, 0x17
	0x03A1B68C MOV X0, X20
	0x03A1B690 MOV X2, X19
	0x03A1B694 LDR X8, [X8 + 0xB8]
	0x03A1B698 MOV X4, X31
	0x03A1B69C LDR W1, [X8 + 0x1C]
	0x03A1B6A0 ADD X8, X31, 0xA88
	0x03A1B6A4 BL 0x3A44CA4
	0x03A1B6A8 ADD X0, X31, 0xC18
	0x03A1B6AC ADD X1, X31, 0xA88
	0x03A1B6B0 MOVZ W2, 0xC4
	0x03A1B6B4 BL 0x3EB1AC0
	0x03A1B6B8 ADRP X8, 0x739000
	0x03A1B6BC LDR X8, [X8 + 0xB8]
	0x03A1B6C0 LDR X0, [X8]
	0x03A1B6C4 LDR W8, [X0 + 0xE0]
	0x03A1B6C8 CBNZ W8, 0x3A1B6D0
	0x03A1B6CC BL 0x1C16DFC
	0x03A1B6D0 ADD X8, X31, 0xA88
	0x03A1B6D4 ADD X0, X31, 0xCE0
	0x03A1B6D8 MOV X1, X31
	0x03A1B6DC BL 0x3C53684
	0x03A1B6E0 ADD X0, X31, 0x7B0
	0x03A1B6E4 ADD X1, X31, 0xA88
	0x03A1B6E8 MOVZ W2, 0x60
	0x03A1B6EC BL 0x3EB1AC0
	0x03A1B6F0 ADD X2, X31, 0x7B0
	0x03A1B6F4 MOV X0, X20
	0x03A1B6F8 MOV X1, X21
	0x03A1B6FC BL 0x3A182A8
	0x03A1B700 ADD X0, X31, 0x698
	0x03A1B704 ADD X1, X31, 0x7B0
	0x03A1B708 MOVZ W2, 0x60
	0x03A1B70C BL 0x3EB1AC0
	0x03A1B710 ADD X0, X31, 0xCE0
	0x03A1B714 ADD X1, X31, 0x698
	0x03A1B718 MOV X2, X31
	0x03A1B71C BL 0x3C536A0
	0x03A1B720 ADD X0, X31, 0x638
	0x03A1B724 ADD X1, X31, 0x7B0
	0x03A1B728 MOVZ W2, 0x60
	0x03A1B72C BL 0x3EB1AC0
	0x03A1B730 ADD X0, X31, 0xC18
	0x03A1B734 ADD X1, X31, 0x638
	0x03A1B738 MOV X2, X31
	0x03A1B73C BL 0x3C536A0
	0x03A1B740 LDR X8, [X20 + 0xF0]
	0x03A1B744 CBZ X8, 0x3A1BD1C
	0x03A1B748 LDR X21, [X19]
	0x03A1B74C CBZ X21, 0x3A1BD1C
	0x03A1B750 LDR X9, [X27]
	0x03A1B754 LDR V0, [X8 + 0x4C]
	0x03A1B758 MOV X0, X21
	0x03A1B75C MOV X2, X31
	0x03A1B760 LDR X9, [X9 + 0xB8]
	0x03A1B764 LDR W1, [X9]
	0x03A1B768 BL 0x3C4CDDC
	0x03A1B76C LDR X8, [X20 + 0xF0]
	0x03A1B770 CBZ X8, 0x3A1BD1C
	0x03A1B774 LDR X9, [X27]
	0x03A1B778 LDR V0, [X8 + 0x4C]
	0x03A1B77C FMOV S1, 1
	0x03A1B780 MOV X0, X21
	0x03A1B784 LDR X9, [X9 + 0xB8]
	0x03A1B788 FDIV S0, S1, S0
	0x03A1B78C MOV X2, X31
	0x03A1B790 LDR W1, [X9 + 0x4]
	0x03A1B794 BL 0x3C4CDDC
	0x03A1B798 LDR X8, [X27]
	0x03A1B79C FMOV S0, 1
	0x03A1B7A0 MOV X0, X21
	0x03A1B7A4 MOV X2, X31
	0x03A1B7A8 LDR X8, [X8 + 0xB8]
	0x03A1B7AC LDR W1, [X8 + 0x8]
	0x03A1B7B0 BL 0x3C4CDDC
	0x03A1B7B4 LDR X0, [X27]
	0x03A1B7B8 LDR W8, [X0 + 0xE0]
	0x03A1B7BC CBNZ W8, 0x3A1B7C8
	0x03A1B7C0 BL 0x1C16DFC
	0x03A1B7C4 LDR X0, [X27]
	0x03A1B7C8 LDR X8, [X0 + 0xB8]
	0x03A1B7CC FMOV S0, 1
	0x03A1B7D0 FMOV S1, 1
	0x03A1B7D4 FMOV S2, 1
	0x03A1B7D8 LDR W1, [X8 + 0xC]
	0x03A1B7DC FMOV S3, 1
	0x03A1B7E0 MOV X0, X21
	0x03A1B7E4 MOV X2, X31
	0x03A1B7E8 MOV X27, X25
	0x03A1B7EC BL 0x3C4CF88
	0x03A1B7F0 ADRP X8, 0x739000
	0x03A1B7F4 LDR X8, [X8 + 0x658]
	0x03A1B7F8 LDR X0, [X8]
	0x03A1B7FC LDR W8, [X0 + 0xE0]
	0x03A1B800 CBNZ W8, 0x3A1B808
	0x03A1B804 BL 0x1C16DFC
	0x03A1B808 MOV X0, X20
	0x03A1B80C MOV X1, X21
	0x03A1B810 BL 0x3A1BE24
	0x03A1B814 ADD X0, X31, 0x380
	0x03A1B818 MOVZ W2, 0x2B8
	0x03A1B81C MOV X1, X19
	0x03A1B820 BL 0x3EB1AC0
	0x03A1B824 ADD X8, X31, 0x770
	0x03A1B828 ADD X1, X31, 0x380
	0x03A1B82C MOV X0, X20
	0x03A1B830 BL 0x3A1C198
	0x03A1B834 LDR X8, [X20 + 0xF0]
	0x03A1B838 CBZ X8, 0x3A1BD1C
	0x03A1B83C LDR X0, [X8 + 0x158]
	0x03A1B840 ADD X1, X31, 0x76C
	0x03A1B844 BL 0x3A1C354
	0x03A1B848 LDR W22, [X31 + 0x76C]
	0x03A1B84C CMP W22, 0x1
	0x03A1B850 B.LT 0x3A1B8A0
	0x03A1B854 MOV X23, X0
	0x03A1B858 MOV W24, W31
	0x03A1B85C ADD X28, X31, 0x770
	0x03A1B860 ADD X29, X31, 0xCE0
	0x03A1B864 ADD X25, X31, 0xC18
	0x03A1B868 LDR X5, [X26 + 0x538]
	0x03A1B86C ADD X7, X31, 0x810
	0x03A1B870 MOV X0, X20
	0x03A1B874 MOV X1, X23
	0x03A1B878 MOV W2, W22
	0x03A1B87C MOV W3, W24
	0x03A1B880 MOV X4, X21
	0x03A1B884 MOV X6, X19
	0x03A1B888 STP X29, X28, [X31 + 0x8]
	0x03A1B88C STR X25, [X31]
	0x03A1B890 BL 0x3A18C04
	0x03A1B894 ADD W24, W0, W24
	0x03A1B898 CMP W24, W22
	0x03A1B89C B.LT 0x3A1B868
	0x03A1B8A0 ADRP X8, 0x739000
	0x03A1B8A4 LDR X8, [X8 + 0x658]
	0x03A1B8A8 LDR X0, [X8]
	0x03A1B8AC LDR W8, [X0 + 0xE0]
	0x03A1B8B0 CBNZ W8, 0x3A1B8B8
	0x03A1B8B4 BL 0x1C16DFC
	0x03A1B8B8 MOV X1, X21
	0x03A1B8BC BL 0x3A1C5C8
	0x03A1B8C0 MOV X0, X20
	0x03A1B8C4 MOV X1, X21
	0x03A1B8C8 BL 0x3A1C67C
	0x03A1B8CC ADRP X8, 0x735000
	0x03A1B8D0 LDR X8, [X8 + 0xC80]
	0x03A1B8D4 MOV X25, X27
	0x03A1B8D8 LDR X0, [X8]
	0x03A1B8DC LDR W8, [X0 + 0xE0]
	0x03A1B8E0 CBNZ W8, 0x3A1B8E8
	0x03A1B8E4 BL 0x1C16DFC
	0x03A1B8E8 ADD X0, X31, 0x828
	0x03A1B8EC MOV X1, X21
	0x03A1B8F0 MOV X2, X31
	0x03A1B8F4 BL 0x3C58FE4
	0x03A1B8F8 MOV X0, X21
	0x03A1B8FC MOV X1, X31
	0x03A1B900 BL 0x3C4C310
	0x03A1B904 B 0x3A1BCD0
	0x03A1B908 BL 0x3A42FD4
	0x03A1B90C ADD X0, X31, 0xB50
	0x03A1B910 ADD X1, X31, 0xA88
	0x03A1B914 MOVZ W2, 0xC4
	0x03A1B918 BL 0x3EB1AC0
	0x03A1B91C ADRP X8, 0x739000
	0x03A1B920 LDR X8, [X8 + 0xB8]
	0x03A1B924 LDR X0, [X8]
	0x03A1B928 LDR W8, [X19 + 0xF8]
	0x03A1B92C LDR W9, [X0 + 0xE0]
	0x03A1B930 CMP W8, 0x1
	0x03A1B934 CSET W22, GT
	0x03A1B938 CBNZ W9, 0x3A1B940
	0x03A1B93C BL 0x1C16DFC
	0x03A1B940 ADD X8, X31, 0xA88
	0x03A1B944 ADD X0, X31, 0xB50
	0x03A1B948 MOV X1, X31
	0x03A1B94C BL 0x3C53684
	0x03A1B950 ADD X0, X31, 0x700
	0x03A1B954 ADD X1, X31, 0xA88
	0x03A1B958 MOVZ W2, 0x60
	0x03A1B95C BL 0x3EB1AC0
	0x03A1B960 ADD X2, X31, 0x700
	0x03A1B964 MOV X0, X20
	0x03A1B968 MOV X1, X21
	0x03A1B96C BL 0x3A182A8
	0x03A1B970 ADD X0, X31, 0x320
	0x03A1B974 ADD X1, X31, 0x700
	0x03A1B978 MOVZ W2, 0x60
	0x03A1B97C BL 0x3EB1AC0
	0x03A1B980 ADD X0, X31, 0xB50
	0x03A1B984 ADD X1, X31, 0x320
	0x03A1B988 MOV X2, X31
	0x03A1B98C BL 0x3C536A0
	0x03A1B990 LDR X0, [X27]
	0x03A1B994 LDR X21, [X19]
	0x03A1B998 LDR W8, [X0 + 0xE0]
	0x03A1B99C CBNZ W8, 0x3A1B9A8
	0x03A1B9A0 BL 0x1C16DFC
	0x03A1B9A4 LDR X0, [X27]
	0x03A1B9A8 LDR X8, [X0 + 0xB8]
	0x03A1B9AC ADD X0, X31, 0x6F8

ISIL:
	001 Move [X31-144], D12
	002 Move [X31+16], D11
	003 Move [X31+24], D10
	004 Move [X31+32], D9
	005 Move [X31+40], D8
	006 Move [X31+48], X29
	007 Move [X31+56], X30
	008 Move [X31+64], X28
	009 Move [X31+72], X27
	010 Move [X31+80], X26
	011 Move [X31+88], X25
	012 Move [X31+96], X24
	013 Move [X31+104], X23
	014 Move [X31+112], X22
	015 Move [X31+120], X21
	016 Move [X31+128], X20
	017 Move [X31+136], X19
	018 Subtract X31, X31, 1680
	019 Move X19, 0x9C7000
	020 Move W8, [X19+4090]
	021 Move X20, X4
	022 Move W21, W3
	023 Move X22, X2
	024 Move X24, X0
	025 Move [X31+1688], X5
	026 Move [X31+40], X1
	027 Move TEMP, X8
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfEqual {51}
	031 Move X0, 0x73A000
	032 Move X0, [X0+1640]
	033 Call 0x1C17CF4
	034 Move X0, 0x73A000
	035 Move X0, [X0+1632]
	036 Call 0x1C17CF4
	037 Move X0, 0x73A000
	038 Move X0, [X0+1176]
	039 Call 0x1C17CF4
	040 Move X0, 0x73A000
	041 Move X0, [X0+1352]
	042 Call 0x1C17CF4
	043 Move X0, 0x73A000
	044 Move X0, [X0+1648]
	045 Call 0x1C17CF4
	046 Move X0, 0x73A000
	047 Move X0, [X0+1624]
	048 Call 0x1C17CF4
	049 Move W8, 1
	050 Move [X19+4090], W8
	051 Move [X31+1672], X31
	052 Move [X31+1664], X31
	053 Compare X24, 0
	054 JumpIfEqual {369}
	055 Move X10, 0x73A000
	056 Move X8, [X24]
	057 Move X10, [X10+1632]
	058 NotImplemented "Instruction LDRH not yet implemented."
	059 Move X1, [X10]
	060 Compare X9, 0
	061 JumpIfEqual {68}
	062 Move X10, [X8+176]
	063 Add X10, X10, 8
	064 NotImplemented "Instruction LDUR not yet implemented."
	065 NotImplemented "Instruction CMP not yet implemented."
	066 Subtract X9, X9, 1
	067 Add X10, X10, 16
	068 Move X0, X24
	069 Move W2, W31
	070 Call 0x1C5D788
	071 NotImplemented "Instruction LDRSW not yet implemented."
	072 Add X8, X8, X9
	073 Add X0, X8, 312
	074 Move X8, [X0]
	075 Move X1, [X0+8]
	076 Move X0, X24
	077 NotImplemented "Instruction BLR not yet implemented."
	078 Compare X0, 0
	079 JumpIfEqual {369}
	080 Move X25, [X0+344]
	081 Compare X25, 0
	082 JumpIfEqual {369}
	083 Move X10, 0x73A000
	084 Move X8, [X25]
	085 Move X10, [X10+1640]
	086 NotImplemented "Instruction LDRH not yet implemented."
	087 Move X1, [X10]
	088 Compare X9, 0
	089 JumpIfEqual {96}
	090 Move X10, [X8+176]
	091 Add X10, X10, 8
	092 NotImplemented "Instruction LDUR not yet implemented."
	093 NotImplemented "Instruction CMP not yet implemented."
	094 Subtract X9, X9, 1
	095 Add X10, X10, 16
	096 Move X0, X25
	097 Move W2, W31
	098 Call 0x1C5D788
	099 NotImplemented "Instruction LDRSW not yet implemented."
	100 Add X8, X8, X9
	101 Add X0, X8, 312
	102 Move X8, [X0]
	103 Move X1, [X0+8]
	104 Move X0, X25
	105 NotImplemented "Instruction BLR not yet implemented."
	106 Compare X0, 0
	107 JumpIfEqual {369}
	108 Move W8, [X0+24]
	109 Move X25, X0
	110 NotImplemented "Instruction CMP not yet implemented."
	111 Move X19, 0x73A000
	112 Move X19, [X19+1648]
	113 Move W26, W31
	114 Move X2, [X19]
	115 Move X0, X25
	116 Move W1, W26
	117 Call List`1<Object>.get_Item, X0, X1
	118 Compare X0, 0
	119 JumpIfEqual {369}
	120 Call Light2D.CacheValues, X0
	121 Move W8, [X25+24]
	122 Add W26, W26, 1
	123 NotImplemented "Instruction CMP not yet implemented."
	124 Move X0, X31
	125 Call ShadowCasterGroup2DManager.CacheValues
	126 Move X8, [X24]
	127 Move X10, 0x73A000
	128 NotImplemented "Instruction LDRH not yet implemented."
	129 Move X10, [X10+1632]
	130 Move X1, [X10]
	131 Compare X9, 0
	132 JumpIfEqual {139}
	133 Move X10, [X8+176]
	134 Add X10, X10, 8
	135 NotImplemented "Instruction LDUR not yet implemented."
	136 NotImplemented "Instruction CMP not yet implemented."
	137 Subtract X9, X9, 1
	138 Add X10, X10, 16
	139 Move X0, X24
	140 Move W2, W31
	141 Call 0x1C5D788
	142 NotImplemented "Instruction LDRSW not yet implemented."
	143 Add X8, X8, X9
	144 Add X0, X8, 312
	145 Move X8, [X0]
	146 Move X1, [X0+8]
	147 Move X0, X24
	148 NotImplemented "Instruction BLR not yet implemented."
	149 Compare X0, 0
	150 JumpIfEqual {369}
	151 Move X28, [X0+88]
	152 Compare X28, 0
	153 JumpIfEqual {369}
	154 Move X8, [X28+24]
	155 NotImplemented "Instruction CMP not yet implemented."
	156 Move X9, [X31+1688]
	157 Move X10, -49471488
	158 Move V0, [X10+187]
	159 Move X25, X31
	160 Add X23, X9, 8
	161 Add X9, X31, 1560
	162 Add X29, X31, 824
	163 Add X19, X9, 8
	164 And X8, X8, 0
	165 NotImplemented "Instruction MOVI not yet implemented."
	166 Move [X31+1], V0
	167 Move W9, [X20+24]
	168 Move W10, 1
	169 NotImplemented "Instruction LSLV not yet implemented."
	170 And W31, W9, W27
	171 NotImplemented "Instruction CMP not yet implemented."
	172 Compare X22, 0
	173 JumpIfEqual {369}
	174 Add X8, X28, X25
	175 Move X26, [X8+32]
	176 Move X0, X22
	177 Move X2, X31
	178 Move X1, X26
	179 Call CommandBuffer.BeginSample, X0, X1
	180 Move X8, 0x73A000
	181 Move X8, [X8+1176]
	182 Move X0, [X8]
	183 Move W8, [X0+224]
	184 Compare W8, 0
	185 JumpIfNotEqual {187}
	186 Call 0x1C17DFC
	187 Add X2, X31, 1664
	188 Move W0, W21
	189 Move W1, W25
	190 Call Light2DManager.GetGlobalColor, X0, X1, X2
	191 Move TEMP, X0
	192 And TEMP, TEMP, 1
	193 Compare TEMP, 1
	194 JumpIfNotEqual {199}
	195 Move V11, [X31+1664]
	196 Move V10, [X31+1668]
	197 Move V8, [X31+1672]
	198 Move V9, [X31+1676]
	199 Move V0, [X31+1]
	200 Move S8, W31
	201 Move S9, 1
	202 Move S10, W31
	203 Move S11, W31
	204 Move [X31+104], V0
	205 Move W8, [X20+28]
	206 Move X9, [X31+1688]
	207 Add X2, X31, 1560
	208 Move X0, X20
	209 And W27, W8, W27
	210 Move V0, [X9]
	211 NotImplemented "Instruction CSET not yet implemented."
	212 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	213 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	214 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	215 NotImplemented "Instruction INVALID not yet implemented."
	216 Move [X31+1560], D0
	217 NotImplemented "Instruction LDUR not yet implemented."
	218 Move V2, [X23]
	219 Move V1, [X23+16]
	220 Add X8, X31, 824
	221 Move X1, X22
	222 Move W3, W25
	223 Move [X19+28], V0
	224 Move [X19], V2
	225 Move [X19+8], V1
	226 Call LayerBatch.GetRTId, X0, X1, X2, X3
	227 Move X8, [X31+856]
	228 Move V1, [X29]
	229 Move V0, [X29+16]
	230 Add X1, X31, 1520
	231 Move W2, 2
	232 Move W4, 2
	233 Move W5, 3
	234 Move X0, X22
	235 Move W3, W31
	236 Move X6, X31
	237 Move [X31+1648], X8
	238 Move [X31+102], V0
	239 Move [X31+101], V1
	240 Move [X31+95], V1
	241 Move [X31+96], V0
	242 Move [X31+1552], X8
	243 Call CommandBuffer.SetRenderTarget, X0, X1, X2, X3, X4, X5
	244 Move W2, 1
	245 Move X0, X22
	246 Move W1, W31
	247 Move V0, V11
	248 Move V1, V10
	249 Move V2, V8
	250 Move V3, V9
	251 Move X3, X31
	252 Call CommandBuffer.ClearRenderTarget, X0, X1, X2, X3
	253 Compare W27, 0
	254 JumpIfEqual {343}
	255 Move X1, [X31+40]
	256 Add X0, X31, 824
	257 Move W2, 696
	258 Call 0x3EB2AC0
	259 Move X8, [X31+1648]
	260 Move V0, [X31+102]
	261 Move V1, [X31+101]
	262 Move X10, 0x73A000
	263 Move [X31+816], X8
	264 Move [X31+784], V1
	265 Move [X31+792], V0
	266 Move X8, [X24]
	267 NotImplemented "Instruction LDRH not yet implemented."
	268 Move X10, [X10+1632]
	269 Move X1, [X10]
	270 Compare X9, 0
	271 JumpIfEqual {278}
	272 Move X10, [X8+176]
	273 Add X10, X10, 8
	274 NotImplemented "Instruction LDUR not yet implemented."
	275 NotImplemented "Instruction CMP not yet implemented."
	276 Subtract X9, X9, 1
	277 Add X10, X10, 16
	278 Move X0, X24
	279 Move W2, W31
	280 Call 0x1C5D788
	281 NotImplemented "Instruction LDRSW not yet implemented."
	282 Add X8, X8, X9
	283 Add X0, X8, 312
	284 Move X8, [X0]
	285 Move X1, [X0+8]
	286 Move X0, X24
	287 NotImplemented "Instruction BLR not yet implemented."
	288 Compare X0, 0
	289 JumpIfEqual {369}
	290 Move X27, [X0+344]
	291 Compare X27, 0
	292 JumpIfEqual {369}
	293 Move X8, [X27]
	294 Move X10, 0x73A000
	295 NotImplemented "Instruction LDRH not yet implemented."
	296 Move X10, [X10+1640]
	297 Move X1, [X10]
	298 Compare X9, 0
	299 JumpIfEqual {306}
	300 Move X10, [X8+176]
	301 Add X10, X10, 8
	302 NotImplemented "Instruction LDUR not yet implemented."
	303 NotImplemented "Instruction CMP not yet implemented."
	304 Subtract X9, X9, 1
	305 Add X10, X10, 16
	306 Move X0, X27
	307 Move W2, W31
	308 Call 0x1C5D788
	309 NotImplemented "Instruction LDRSW not yet implemented."
	310 Add X8, X8, X9
	311 Add X0, X8, 312
	312 Move X8, [X0]
	313 Move X1, [X0+8]
	314 Move X0, X27
	315 NotImplemented "Instruction BLR not yet implemented."
	316 Move X8, 0x73A000
	317 Move X8, [X8+1624]
	318 Move X27, X0
	319 Move X8, [X8]
	320 Move W9, [X8+224]
	321 Compare W9, 0
	322 JumpIfNotEqual {325}
	323 Move X0, X8
	324 Call 0x1C17DFC
	325 Add X0, X31, 88
	326 Add X1, X31, 824
	327 Move W2, 696
	328 Call 0x3EB2AC0
	329 Move V0, [X31+784]
	330 Move V1, [X31+800]
	331 Move X8, [X31+816]
	332 Add X1, X31, 88
	333 Add X5, X31, 48
	334 Move X0, X24
	335 Move W2, W25
	336 Move X3, X22
	337 Move W4, W21
	338 Move X6, X27
	339 Move [X31+48], V0
	340 Move [X31+56], V1
	341 Move [X31+80], X8
	342 Call RendererLighting.RenderLightSet, X0, X1, X2, X3, X4, X5, X6
	343 Move X0, X22
	344 Move X1, X26
	345 Move X2, X31
	346 Call CommandBuffer.EndSample, X0, X1
	347 Move W8, [X28+24]
	348 Add X25, X25, 1
	349 NotImplemented "Instruction CMP not yet implemented."
	350 Add X31, X31, 1680
	351 Move X20, [X31+128]
	352 Move X19, [X31+136]
	353 Move X22, [X31+112]
	354 Move X21, [X31+120]
	355 Move X24, [X31+96]
	356 Move X23, [X31+104]
	357 Move X26, [X31+80]
	358 Move X25, [X31+88]
	359 Move X28, [X31+64]
	360 Move X27, [X31+72]
	361 Move X29, [X31+48]
	362 Move X30, [X31+56]
	363 Move D9, [X31+32]
	364 Move D8, [X31+40]
	365 Move D11, [X31+16]
	366 Move D10, [X31+24]
	367 Move V12, [X31+144]
	368 Return 
	369 Call 0x1C17F20
	370 Call 0x1C17F28

Method: System.Void SetBlendModes(UnityEngine.Material material, UnityEngine.Rendering.BlendMode src, UnityEngine.Rendering.BlendMode dst)

Disassembly:
	0x03A20868 MOV W24, W0
	0x03A2086C LDRH W9, [X8 + 0x12E]
	0x03A20870 CBZ X9, 0x3A20894
	0x03A20874 LDR X10, [X8 + 0xB0]
	0x03A20878 ADD X10, X10, 0x8
	0x03A2087C LDUR X11, [X10 - 0x8]
	0x03A20880 CMP X11, X1
	0x03A20884 B.EQ 0x3A208A4
	0x03A20888 SUBS X9, X9, 0x1
	0x03A2088C ADD X10, X10, 0x10
	0x03A20890 B.NE 0x3A2087C
	0x03A20894 MOVZ W2, 0x8
	0x03A20898 MOV X0, X26
	0x03A2089C BL 0x1C5C788
	0x03A208A0 B 0x3A208B4
	0x03A208A4 LDR W9, [X10]
	0x03A208A8 ADD W9, W9, 0x8
	0x03A208AC ADD X8, X8, W9, 0x4, SXTW
	0x03A208B0 ADD X0, X8, 0x138
	0x03A208B4 LDP X8, X1, [X0]
	0x03A208B8 MOV X0, X26
	0x03A208BC BLR X8
	0x03A208C0 LDR X27, [X19 + 0x10]
	0x03A208C4 CBZ X27, 0x3A20CB8
	0x03A208C8 LDR X8, [X27]
	0x03A208CC LDR X1, [X20]
	0x03A208D0 MOV W26, W0
	0x03A208D4 LDRH W9, [X8 + 0x12E]
	0x03A208D8 CBZ X9, 0x3A208FC
	0x03A208DC LDR X10, [X8 + 0xB0]
	0x03A208E0 ADD X10, X10, 0x8
	0x03A208E4 LDUR X11, [X10 - 0x8]
	0x03A208E8 CMP X11, X1
	0x03A208EC B.EQ 0x3A2090C
	0x03A208F0 SUBS X9, X9, 0x1
	0x03A208F4 ADD X10, X10, 0x10
	0x03A208F8 B.NE 0x3A208E4
	0x03A208FC MOVZ W2, 0xA
	0x03A20900 MOV X0, X27

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x9C2000
	008 Move X22, 0x735000
	009 Move W8, [X23+4091]
	010 Move X22, [X22+1624]
	011 Move W19, W2
	012 Move W21, W1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0x735000
	019 Move X0, [X0+1624]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X23+4091], W8
	023 Move X0, [X22]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Compare X20, 0
	029 JumpIfEqual {51}
	030 Move X8, [X22]
	031 NotImplemented "Instruction SCVTF not yet implemented."
	032 Move X0, X20
	033 Move X2, X31
	034 Move X8, [X8+184]
	035 Move W1, [X8+112]
	036 Call Material.SetFloat, X0, X1, V0
	037 Move X8, [X22]
	038 NotImplemented "Instruction SCVTF not yet implemented."
	039 Move X0, X20
	040 Move X20, [X31+32]
	041 Move X19, [X31+40]
	042 Move X8, [X8+184]
	043 Move X22, [X31+16]
	044 Move X21, [X31+24]
	045 Move X2, X31
	046 Move W1, [X8+116]
	047 Move X30, [X31+48]
	048 Move X23, [X31+56]
	049 Call Material.SetFloat, X0, X1, V0
	050 Return 
	051 Call 0x1C17F20

Method: System.UInt32 GetLightMaterialIndex(UnityEngine.Rendering.Universal.Light2D light, System.Boolean isVolume)

Disassembly:
	0x03A20904 BL 0x1C5C788
	0x03A20908 B 0x3A2091C
	0x03A2090C LDR W9, [X10]
	0x03A20910 ADD W9, W9, 0xA
	0x03A20914 ADD X8, X8, W9, 0x4, SXTW
	0x03A20918 ADD X0, X8, 0x138
	0x03A2091C LDP X8, X1, [X0]
	0x03A20920 MOV X0, X27
	0x03A20924 BLR X8
	0x03A20928 LDR X28, [X19 + 0x10]
	0x03A2092C CBZ X28, 0x3A20CB8
	0x03A20930 LDR X8, [X28]
	0x03A20934 LDR X1, [X20]
	0x03A20938 MOV W27, W0
	0x03A2093C LDRH W9, [X8 + 0x12E]
	0x03A20940 CBZ X9, 0x3A20964
	0x03A20944 LDR X10, [X8 + 0xB0]
	0x03A20948 ADD X10, X10, 0x8
	0x03A2094C LDUR X11, [X10 - 0x8]
	0x03A20950 CMP X11, X1
	0x03A20954 B.EQ 0x3A20974
	0x03A20958 SUBS X9, X9, 0x1
	0x03A2095C ADD X10, X10, 0x10
	0x03A20960 B.NE 0x3A2094C
	0x03A20964 MOVZ W2, 0xC
	0x03A20968 MOV X0, X28
	0x03A2096C BL 0x1C5C788
	0x03A20970 B 0x3A20984
	0x03A20974 LDR W9, [X10]
	0x03A20978 ADD W9, W9, 0xC
	0x03A2097C ADD X8, X8, W9, 0x4, SXTW
	0x03A20980 ADD X0, X8, 0x138
	0x03A20984 LDP X8, X1, [X0]
	0x03A20988 MOV X0, X28
	0x03A2098C BLR X8
	0x03A20990 LDR X29, [X19 + 0x10]
	0x03A20994 CBZ X29, 0x3A20CB8
	0x03A20998 LDR X8, [X29]
	0x03A2099C LDR X1, [X20]
	0x03A209A0 ADRP X20, 0x6D3000
	0x03A209A4 MOV W28, W0
	0x03A209A8 LDRH W9, [X8 + 0x12E]
	0x03A209AC LDR X20, [X20 + 0x5A8]
	0x03A209B0 CBZ X9, 0x3A209D4
	0x03A209B4 LDR X10, [X8 + 0xB0]
	0x03A209B8 ADD X10, X10, 0x8
	0x03A209BC LDUR X11, [X10 - 0x8]
	0x03A209C0 CMP X11, X1
	0x03A209C4 B.EQ 0x3A209E4
	0x03A209C8 SUBS X9, X9, 0x1
	0x03A209CC ADD X10, X10, 0x10
	0x03A209D0 B.NE 0x3A209BC
	0x03A209D4 MOVZ W2, 0xE
	0x03A209D8 MOV X0, X29
	0x03A209DC BL 0x1C5C788
	0x03A209E0 B 0x3A209F4
	0x03A209E4 LDR W9, [X10]
	0x03A209E8 ADD W9, W9, 0xE
	0x03A209EC ADD X8, X8, W9, 0x4, SXTW
	0x03A209F0 ADD X0, X8, 0x138
	0x03A209F4 LDP X8, X1, [X0]
	0x03A209F8 MOV X0, X29
	0x03A209FC BLR X8
	0x03A20A00 AND W8, W27, W28, 0x0
	0x03A20A04 ORR W9, W27, W28, 0x0
	0x03A20A08 AND W10, W8, 0x1
	0x03A20A0C AND W8, W8, W0, 0x0
	0x03A20A10 AND W9, W9, 0x1
	0x03A20A14 AND W8, W8, 0x1
	0x03A20A18 STRB W10, [X19 + 0x25]
	0x03A20A1C STRB W9, [X19 + 0x26]
	0x03A20A20 STRB W8, [X19 + 0x27]
	0x03A20A24 STRB W8, [X19 + 0x54]
	0x03A20A28 LDR X0, [X20]
	0x03A20A2C LDR W9, [X31 + 0xC]
	0x03A20A30 SDIV W29, W22, W23
	0x03A20A34 LDR W8, [X0 + 0xE0]
	0x03A20A38 SDIV W20, W9, W25
	0x03A20A3C CBNZ W8, 0x3A20A44
	0x03A20A40 BL 0x1C16DFC
	0x03A20A44 MOV W0, W20
	0x03A20A48 MOV W1, W29

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x9C2000
	009 Move W8, [X21+4092]
	010 Move W19, W1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x6D4000
	017 Move X0, [X0+1432]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+4092], W8
	021 Compare X20, 0
	022 JumpIfEqual {95}
	023 Move W23, [X20+36]
	024 Move W22, [X20+112]
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move X24, 0x6D4000
	027 Move X24, [X24+1432]
	028 Move X21, [X20+96]
	029 Move X0, [X24]
	030 Move W8, [X0+224]
	031 Compare W8, 0
	032 JumpIfNotEqual {34}
	033 Call 0x1C17DFC
	034 Move X0, X21
	035 Move X1, X31
	036 Move X2, X31
	037 Call Object.op_Inequality, X0, X1
	038 Move TEMP, X0
	039 And TEMP, TEMP, 1
	040 Compare TEMP, 1
	041 JumpIfNotEqual {69}
	042 Move W8, [X20+36]
	043 Move W9, 88
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Move W8, 96
	046 NotImplemented "Instruction CSEL not yet implemented."
	047 Move X0, [X20]
	048 Compare X0, 0
	049 JumpIfEqual {95}
	050 Move X1, X31
	051 Call Sprite.get_texture, X0
	052 Move X8, [X24]
	053 Move X21, X0
	054 Move W9, [X8+224]
	055 Compare W9, 0
	056 JumpIfNotEqual {59}
	057 Move X0, X8
	058 Call 0x1C17DFC
	059 Move X0, X21
	060 Move X1, X31
	061 Move X2, X31
	062 Call Object.op_Inequality, X0, X1
	063 And W31, W0, 1
	064 Move W9, 16
	065 Move W8, W31
	066 NotImplemented "Instruction CSEL not yet implemented."
	067 Move W9, W31
	068 Move W8, 2
	069 Move W8, W31
	070 Move W9, W31
	071 Move W11, [X20+120]
	072 NotImplemented "Instruction CMP not yet implemented."
	073 And W10, W19, 1
	074 NotImplemented "Instruction CSET not yet implemented."
	075 NotImplemented "Instruction CMP not yet implemented."
	076 NotImplemented "Instruction CSET not yet implemented."
	077 NotImplemented "Instruction BFM not yet implemented."
	078 NotImplemented "Instruction BFM not yet implemented."
	079 NotImplemented "Instruction CMP not yet implemented."
	080 Or W8, W10, W8
	081 NotImplemented "Instruction CSET not yet implemented."
	082 NotImplemented "Instruction CMP not yet implemented."
	083 Move X20, [X31+48]
	084 Move X19, [X31+56]
	085 Move X22, [X31+32]
	086 Move X21, [X31+40]
	087 Move X24, [X31+16]
	088 Move X23, [X31+24]
	089 NotImplemented "Instruction CSET not yet implemented."
	090 Or W8, W8, W9
	091 NotImplemented "Instruction BFM not yet implemented."
	092 Or W0, W8, W10
	093 Move X30, [X31+64]
	094 Return X0
	095 Call 0x1C17F20

Method: UnityEngine.Material CreateLightMaterial(UnityEngine.Rendering.Universal.Renderer2DData rendererData, UnityEngine.Rendering.Universal.Light2D light, System.Boolean isVolume)

Disassembly:
	0x03A20A4C MOV X2, X31
	0x03A20A50 BL 0x337EE94
	0x03A20A54 MOV W1, W0
	0x03A20A58 MOVZ W0, 0x1
	0x03A20A5C MOV X2, X31
	0x03A20A60 MOVZ W20, 0x1
	0x03A20A64 BL 0x337EDF0
	0x03A20A68 LDRB W8, [X19 + 0x26]
	0x03A20A6C STR W0, [X19 + 0x28]
	0x03A20A70 STRB W31, [X19 + 0x2C]
	0x03A20A74 STR X31, [X19 + 0x30]
	0x03A20A78 CBZ W8, 0x3A20A98
	0x03A20A7C LDRB W8, [X19 + 0x25]
	0x03A20A80 STRB W20, [X19 + 0x2C]
	0x03A20A84 TBZ X24, 0x0, 0x3A20AD8
	0x03A20A88 CBZ W8, 0x3A20B08
	0x03A20A8C STR W23, [X19 + 0x30]
	0x03A20A90 MOV W9, W25
	0x03A20A94 B 0x3A20B54
	0x03A20A98 CMP W0, 0x2
	0x03A20A9C B.LT 0x3A20AEC
	0x03A20AA0 EOR W8, W24, 0x1
	0x03A20AA4 TBNZ X8, 0x0, 0x3A20AEC
	0x03A20AA8 LDR W10, [X31 + 0xC]
	0x03A20AAC SDIV W9, W22, W0
	0x03A20AB0 MOVZ W8, 0x1
	0x03A20AB4 CMP W9, 0x0
	0x03A20AB8 SDIV W10, W10, W0
	0x03A20ABC STRB W8, [X19 + 0x2C]
	0x03A20AC0 CINC W8, W9, LT
	0x03A20AC4 CMP W10, 0x0
	0x03A20AC8 CINC W9, W10, LT
	0x03A20ACC AND W8, W8, 0xFFFFFFFE
	0x03A20AD0 AND W9, W9, 0xFFFFFFFE
	0x03A20AD4 B 0x3A20B64
	0x03A20AD8 CBZ W8, 0x3A20B28
	0x03A20ADC MUL W8, W0, W23
	0x03A20AE0 STR W8, [X19 + 0x30]
	0x03A20AE4 MUL W9, W0, W25
	0x03A20AE8 B 0x3A20B68
	0x03A20AEC MOV X0, X31
	0x03A20AF0 BL 0x3C0B398
	0x03A20AF4 MOV V11.16B, V0.16B
	0x03A20AF8 MOV V9.16B, V1.16B
	0x03A20AFC MOV V8.16B, V2.16B
	0x03A20B00 MOV V10.16B, V3.16B
	0x03A20B04 B 0x3A20B7C
	0x03A20B08 TBZ X28, 0x0, 0x3A20B3C
	0x03A20B0C SDIV W8, W22, W0
	0x03A20B10 CMP W8, 0x0
	0x03A20B14 CINC W8, W8, LT
	0x03A20B18 AND W8, W8, 0xFFFFFFFE
	0x03A20B1C STR W8, [X19 + 0x30]
	0x03A20B20 MOV W9, W25
	0x03A20B24 B 0x3A20B68
	0x03A20B28 TBZ X28, 0x0, 0x3A20B5C
	0x03A20B2C STR W22, [X19 + 0x30]
	0x03A20B30 MUL W9, W0, W25
	0x03A20B34 MOV W8, W22
	0x03A20B38 B 0x3A20B68
	0x03A20B3C LDR W8, [X31 + 0xC]
	0x03A20B40 STR W23, [X19 + 0x30]
	0x03A20B44 SDIV W8, W8, W0
	0x03A20B48 CMP W8, 0x0
	0x03A20B4C CINC W8, W8, LT
	0x03A20B50 AND W9, W8, 0xFFFFFFFE
	0x03A20B54 MOV W8, W23
	0x03A20B58 B 0x3A20B68
	0x03A20B5C LDR W9, [X31 + 0xC]
	0x03A20B60 MUL W8, W0, W23
	0x03A20B64 STR W8, [X19 + 0x30]
	0x03A20B68 STR W9, [X19 + 0x34]
	0x03A20B6C SCVTF S8, W8
	0x03A20B70 SCVTF S10, W9
	0x03A20B74 FMOV S11, W31
	0x03A20B78 FMOV S9, W31
	0x03A20B7C STP S11, S9, [X19 + 0x38]
	0x03A20B80 STP S8, S10, [X19 + 0x40]
	0x03A20B84 TBZ X28, 0x0, 0x3A20B90
	0x03A20B88 SCVTF S0, W25
	0x03A20B8C B 0x3A20C20
	0x03A20B90 TBZ X27, 0x0, 0x3A20BCC
	0x03A20B94 MOV X0, X31
	0x03A20B98 BL 0x3C0B398
	0x03A20B9C FCMP S11, S0
	0x03A20BA0 B.NE 0x3A20C10
	0x03A20BA4 FCMP S10, S3
	0x03A20BA8 B.NE 0x3A20C10
	0x03A20BAC FCMP S9, S1
	0x03A20BB0 B.NE 0x3A20C10
	0x03A20BB4 FCMP S8, S2
	0x03A20BB8 B.NE 0x3A20C10
	0x03A20BBC LDR W8, [X31 + 0xC]
	0x03A20BC0 SCVTF S0, W22
	0x03A20BC4 SCVTF S1, W8
	0x03A20BC8 B 0x3A20C14
	0x03A20BCC TBZ X24, 0x0, 0x3A20BDC
	0x03A20BD0 LDR W8, [X19 + 0x28]
	0x03A20BD4 CMP W8, 0x2
	0x03A20BD8 B.GE 0x3A20C98
	0x03A20BDC MOV X0, X31
	0x03A20BE0 BL 0x3C0B398
	0x03A20BE4 FCMP S11, S0
	0x03A20BE8 B.NE 0x3A20C28
	0x03A20BEC FCMP S10, S3
	0x03A20BF0 B.NE 0x3A20C28
	0x03A20BF4 FCMP S9, S1
	0x03A20BF8 B.NE 0x3A20C28
	0x03A20BFC FCMP S8, S2
	0x03A20C00 B.NE 0x3A20C28
	0x03A20C04 LDR W8, [X31 + 0xC]
	0x03A20C08 SCVTF S0, W8
	0x03A20C0C B 0x3A20C2C
	0x03A20C10 LDP S0, S1, [X19 + 0x40]
	0x03A20C14 FDIV S0, S0, S1
	0x03A20C18 SCVTF S1, W23
	0x03A20C1C FDIV S0, S1, S0
	0x03A20C20 MOV W8, W21
	0x03A20C24 B 0x3A20C34
	0x03A20C28 LDR V0, [X19 + 0x44]
	0x03A20C2C LDR W8, [X19 + 0x28]
	0x03A20C30 MUL W8, W8, W21
	0x03A20C34 FMOV S1, 0.5
	0x03A20C38 SCVTF S2, W8
	0x03A20C3C FMUL S0, S0, S1
	0x03A20C40 FDIV S0, S0, S2
	0x03A20C44 ORR W8, W24, W26, 0x0
	0x03A20C48 STR S0, [X19 + 0x48]
	0x03A20C4C TBZ X8, 0x0, 0x3A20C58
	0x03A20C50 SCVTF S0, W21
	0x03A20C54 B 0x3A20C64
	0x03A20C58 LDR W8, [X19 + 0x28]
	0x03A20C5C MUL W8, W8, W21
	0x03A20C60 SCVTF S0, W8
	0x03A20C64 FMOV S1, 1
	0x03A20C68 FDIV S0, S1, S0
	0x03A20C6C STR S0, [X19 + 0x4C]
	0x03A20C70 LDP X20, X19, [X31 + 0x80]
	0x03A20C74 LDP X22, X21, [X31 + 0x70]
	0x03A20C78 LDP X24, X23, [X31 + 0x60]
	0x03A20C7C LDP X26, X25, [X31 + 0x50]
	0x03A20C80 LDP X28, X27, [X31 + 0x40]
	0x03A20C84 LDP X29, X30, [X31 + 0x30]
	0x03A20C88 LDP D9, D8, [X31 + 0x20]
	0x03A20C8C LDP D11, D10, [X31 + 0x10]
	0x03A20C90 ADD X31, X31, 0x90
	0x03A20C94 RET
	0x03A20C98 LDR V0, [X19 + 0x34]
	0x03A20C9C FMOV S1, 0.5
	0x03A20CA0 SCVTF S0, S0
	0x03A20CA4 FMUL S1, S0, S1
	0x03A20CA8 SCVTF S0, W21
	0x03A20CAC FDIV S1, S1, S0
	0x03A20CB0 STR S1, [X19 + 0x48]
	0x03A20CB4 B 0x3A20C64
	0x03A20CB8 BL 0x1C16F20
	0x03A20CBC STP D13, D12, [X31 - 0x70]!
	0x03A20CC0 STP D11, D10, [X31 + 0x10]
	0x03A20CC4 STP D9, D8, [X31 + 0x20]
	0x03A20CC8 STR X30, [X31 + 0x30]
	0x03A20CCC STP X24, X23, [X31 + 0x40]
	0x03A20CD0 STP X22, X21, [X31 + 0x50]
	0x03A20CD4 STP X20, X19, [X31 + 0x60]
	0x03A20CD8 ADRP X22, 0x9C2000
	0x03A20CDC LDRB W8, [X22 + 0x3]
	0x03A20CE0 MOV W19, W2
	0x03A20CE4 MOV W21, W1
	0x03A20CE8 MOV X20, X0
	0x03A20CEC TBNZ X8, 0x0, 0x3A20D04
	0x03A20CF0 ADRP X0, 0x734000
	0x03A20CF4 LDR X0, [X0 + 0x8C0]
	0x03A20CF8 BL 0x1C16CF4
	0x03A20CFC MOVZ W8, 0x1
	0x03A20D00 STRB W8, [X22 + 0x3]
	0x03A20D04 ADRP X24, 0x734000
	0x03A20D08 LDRB W8, [X20 + 0x27]
	0x03A20D0C LDR X24, [X24 + 0x8C0]
	0x03A20D10 CBZ W8, 0x3A20D5C
	0x03A20D14 LDR X22, [X20 + 0x10]
	0x03A20D18 CBZ X22, 0x3A2104C
	0x03A20D1C LDR X8, [X22]
	0x03A20D20 LDR X1, [X24]
	0x03A20D24 LDRH W9, [X8 + 0x12E]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x9C2000
	008 Move W8, [X22+4093]
	009 Move W21, W2
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {27}
	016 Move X0, 0x6FC000
	017 Move X0, [X0+2296]
	018 Call 0x1C17CF4
	019 Move X0, 0x6D4000
	020 Move X0, [X0+1432]
	021 Call 0x1C17CF4
	022 Move X0, 0x735000
	023 Move X0, [X0+1624]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X22+4093], W8
	027 Compare X19, 0
	028 JumpIfEqual {216}
	029 Compare X20, 0
	030 JumpIfEqual {216}
	031 Move W22, [X19+36]
	032 Move X8, 0x6FC000
	033 Move X8, [X8+2296]
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Move TEMP, X21
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfNotEqual {52}
	039 Move X0, [X8]
	040 Move W8, 128
	041 Move W9, 144
	042 NotImplemented "Instruction CSEL not yet implemented."
	043 Move W9, [X0+224]
	044 Move X20, [X20]
	045 Compare W9, 0
	046 JumpIfNotEqual {48}
	047 Call 0x1C17DFC
	048 Move X0, X20
	049 Move X1, X31
	050 Call CoreUtils.CreateEngineMaterial, X0
	051 Move X20, X0
	052 Move X0, [X8]
	053 Move W8, 120
	054 Move W9, 136
	055 NotImplemented "Instruction CSEL not yet implemented."
	056 Move W9, [X0+224]
	057 Move X20, [X20]
	058 Compare W9, 0
	059 JumpIfNotEqual {61}
	060 Call 0x1C17DFC
	061 Move X0, X20
	062 Move X1, X31
	063 Call CoreUtils.CreateEngineMaterial, X0
	064 Move X21, 0x735000
	065 Move X21, [X21+1624]
	066 Move W23, [X19+112]
	067 Move X20, X0
	068 Move X8, [X21]
	069 Move W9, [X8+224]
	070 Compare W9, 0
	071 JumpIfEqual {78}
	072 Compare W23, 0
	073 JumpIfEqual {82}
	074 Move W1, 5
	075 Move W2, 10
	076 Move X0, X20
	077 Call RendererLighting.SetBlendModes, X0, X1, X2
	078 Move X0, X8
	079 Call 0x1C17DFC
	080 Compare W23, 0
	081 JumpIfNotEqual {74}
	082 Move W1, 1
	083 Move W2, 1
	084 Move X0, X20
	085 Call RendererLighting.SetBlendModes, X0, X1, X2
	086 Compare X20, 0
	087 JumpIfEqual {216}
	088 Move X8, [X21]
	089 Move X0, X20
	090 Move X2, X31
	091 Move X8, [X8+184]
	092 Move X1, [X8+64]
	093 Call Material.EnableKeyword, X0, X1
	094 Move W8, [X19+36]
	095 NotImplemented "Instruction CMP not yet implemented."
	096 Move X21, 0x735000
	097 Move X21, [X21+1624]
	098 Move X0, [X21]
	099 Move W8, [X0+224]
	100 Compare W8, 0
	101 JumpIfNotEqual {103}
	102 Call 0x1C17DFC
	103 Compare X20, 0
	104 JumpIfEqual {216}
	105 Move X8, [X21]
	106 Move X0, X20
	107 Move X2, X31
	108 Move X8, [X8+184]
	109 Move X1, [X8+32]
	110 Call Material.EnableKeyword, X0, X1
	111 NotImplemented "Instruction CMP not yet implemented."
	112 Move X22, 0x6D4000
	113 Move W8, [X19+36]
	114 Move X22, [X22+1432]
	115 Move W9, 88
	116 Move W10, 96
	117 NotImplemented "Instruction CMP not yet implemented."
	118 Move X0, [X22]
	119 NotImplemented "Instruction CSEL not yet implemented."
	120 Move X21, [X19]
	121 Move W9, [X0+224]
	122 Compare W9, 0
	123 JumpIfNotEqual {125}
	124 Call 0x1C17DFC
	125 Move X0, X21
	126 Move X1, X31
	127 Move X2, X31
	128 Call Object.op_Inequality, X0, X1
	129 Move TEMP, X0
	130 And TEMP, TEMP, 1
	131 Compare TEMP, 1
	132 JumpIfNotEqual {173}
	133 Move W8, [X19+36]
	134 Move W9, 88
	135 NotImplemented "Instruction CMP not yet implemented."
	136 Move W8, 96
	137 NotImplemented "Instruction CSEL not yet implemented."
	138 Move X0, [X19]
	139 Compare X0, 0
	140 JumpIfEqual {216}
	141 Move X1, X31
	142 Call Sprite.get_texture, X0
	143 Move X8, [X22]
	144 Move X21, X0
	145 Move W9, [X8+224]
	146 Compare W9, 0
	147 JumpIfNotEqual {150}
	148 Move X0, X8
	149 Call 0x1C17DFC
	150 Move X0, X21
	151 Move X1, X31
	152 Move X2, X31
	153 Call Object.op_Inequality, X0, X1
	154 Move TEMP, X0
	155 And TEMP, TEMP, 1
	156 Compare TEMP, 1
	157 JumpIfNotEqual {173}
	158 Move X21, 0x735000
	159 Move X21, [X21+1624]
	160 Move X0, [X21]
	161 Move W8, [X0+224]
	162 Compare W8, 0
	163 JumpIfNotEqual {165}
	164 Call 0x1C17DFC
	165 Compare X20, 0
	166 JumpIfEqual {216}
	167 Move X8, [X21]
	168 Move X0, X20
	169 Move X2, X31
	170 Move X8, [X8+184]
	171 Move X1, [X8+40]
	172 Call Material.EnableKeyword, X0, X1
	173 Move W8, [X19+120]
	174 Compare W8, 0
	175 JumpIfNotEqual {192}
	176 Move X21, 0x735000
	177 Move X21, [X21+1624]
	178 Move X0, [X21]
	179 Move W8, [X0+224]
	180 Compare W8, 0
	181 JumpIfNotEqual {183}
	182 Call 0x1C17DFC
	183 Compare X20, 0
	184 JumpIfEqual {216}
	185 Move X8, [X21]
	186 Move X0, X20
	187 Move X2, X31
	188 Move X8, [X8+184]
	189 Move X1, [X8+48]
	190 Call Material.EnableKeyword, X0, X1
	191 Move W8, [X19+120]
	192 NotImplemented "Instruction CMP not yet implemented."
	193 Move X19, 0x735000
	194 Move X19, [X19+1624]
	195 Move X0, [X19]
	196 Move W8, [X0+224]
	197 Compare W8, 0
	198 JumpIfNotEqual {200}
	199 Call 0x1C17DFC
	200 Compare X20, 0
	201 JumpIfEqual {216}
	202 Move X8, [X19]
	203 Move X0, X20
	204 Move X2, X31
	205 Move X8, [X8+184]
	206 Move X1, [X8+56]
	207 Call Material.EnableKeyword, X0, X1
	208 Move X0, X20
	209 Move X20, [X31+32]
	210 Move X19, [X31+40]
	211 Move X22, [X31+16]
	212 Move X21, [X31+24]
	213 Move X30, [X31+48]
	214 Move X23, [X31+56]
	215 Return X0
	216 Call 0x1C17F20

Method: UnityEngine.Material GetLightMaterial(UnityEngine.Rendering.Universal.Renderer2DData rendererData, UnityEngine.Rendering.Universal.Light2D light, System.Boolean isVolume)

Disassembly:
	0x03A1FE2C BL 0x1C16CF4
	0x03A1FE30 ADRP X0, 0x735000
	0x03A1FE34 LDR X0, [X0 + 0x7F0]
	0x03A1FE38 BL 0x1C16CF4
	0x03A1FE3C ADRP X0, 0x735000
	0x03A1FE40 LDR X0, [X0 + 0x788]
	0x03A1FE44 BL 0x1C16CF4
	0x03A1FE48 ADRP X0, 0x735000
	0x03A1FE4C LDR X0, [X0 + 0x7F8]
	0x03A1FE50 BL 0x1C16CF4
	0x03A1FE54 ADRP X0, 0x735000
	0x03A1FE58 LDR X0, [X0 + 0x800]
	0x03A1FE5C BL 0x1C16CF4
	0x03A1FE60 ADRP X0, 0x735000
	0x03A1FE64 LDR X0, [X0 + 0x780]
	0x03A1FE68 BL 0x1C16CF4
	0x03A1FE6C ADRP X0, 0x735000
	0x03A1FE70 LDR X0, [X0 + 0x6F0]
	0x03A1FE74 BL 0x1C16CF4
	0x03A1FE78 ADRP X0, 0x735000
	0x03A1FE7C LDR X0, [X0 + 0x808]
	0x03A1FE80 BL 0x1C16CF4
	0x03A1FE84 ADRP X0, 0x735000
	0x03A1FE88 LDR X0, [X0 + 0x798]
	0x03A1FE8C BL 0x1C16CF4
	0x03A1FE90 ADRP X0, 0x735000
	0x03A1FE94 LDR X0, [X0 + 0x810]
	0x03A1FE98 BL 0x1C16CF4
	0x03A1FE9C ADRP X0, 0x735000
	0x03A1FEA0 LDR X0, [X0 + 0x818]
	0x03A1FEA4 BL 0x1C16CF4
	0x03A1FEA8 ADRP X0, 0x735000
	0x03A1FEAC LDR X0, [X0 + 0x820]
	0x03A1FEB0 BL 0x1C16CF4
	0x03A1FEB4 ADRP X0, 0x735000
	0x03A1FEB8 LDR X0, [X0 + 0x828]
	0x03A1FEBC BL 0x1C16CF4
	0x03A1FEC0 ADRP X0, 0x735000
	0x03A1FEC4 LDR X0, [X0 + 0x830]
	0x03A1FEC8 BL 0x1C16CF4
	0x03A1FECC ADRP X0, 0x735000
	0x03A1FED0 LDR X0, [X0 + 0x838]
	0x03A1FED4 BL 0x1C16CF4
	0x03A1FED8 ADRP X0, 0x735000
	0x03A1FEDC LDR X0, [X0 + 0x840]
	0x03A1FEE0 BL 0x1C16CF4
	0x03A1FEE4 ADRP X0, 0x735000
	0x03A1FEE8 LDR X0, [X0 + 0x848]
	0x03A1FEEC BL 0x1C16CF4
	0x03A1FEF0 ADRP X0, 0x735000
	0x03A1FEF4 LDR X0, [X0 + 0x850]
	0x03A1FEF8 BL 0x1C16CF4
	0x03A1FEFC ADRP X0, 0x735000
	0x03A1FF00 LDR X0, [X0 + 0x858]
	0x03A1FF04 BL 0x1C16CF4
	0x03A1FF08 ADRP X0, 0x735000
	0x03A1FF0C LDR X0, [X0 + 0x860]
	0x03A1FF10 BL 0x1C16CF4
	0x03A1FF14 ADRP X0, 0x735000
	0x03A1FF18 LDR X0, [X0 + 0x868]
	0x03A1FF1C BL 0x1C16CF4
	0x03A1FF20 ADRP X0, 0x735000
	0x03A1FF24 LDR X0, [X0 + 0x7A8]
	0x03A1FF28 BL 0x1C16CF4
	0x03A1FF2C ADRP X0, 0x735000
	0x03A1FF30 LDR X0, [X0 + 0x870]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X22, 0x9C3000
	009 Move X23, 0x736000
	010 Move W8, [X22+4094]
	011 Move X23, [X23+1624]
	012 Move W21, W2
	013 Move X20, X1
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {30}
	019 Move X0, 0x736000
	020 Move X0, [X0+1904]
	021 Call 0x1C17CF4
	022 Move X0, 0x736000
	023 Move X0, [X0+1912]
	024 Call 0x1C17CF4
	025 Move X0, 0x736000
	026 Move X0, [X0+1624]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X22+4094], W8
	030 Move X0, [X23]
	031 Move [X31+8], X31
	032 Move W8, [X0+224]
	033 Compare W8, 0
	034 JumpIfNotEqual {36}
	035 Call 0x1C17DFC
	036 And W1, W21, 1
	037 Move X0, X20
	038 Call RendererLighting.GetLightMaterialIndex, X0, X1
	039 Compare X19, 0
	040 JumpIfEqual {83}
	041 Move W22, W0
	042 Move X0, [X19+240]
	043 Compare X0, 0
	044 JumpIfEqual {83}
	045 Move X8, 0x736000
	046 Move X8, [X8+1904]
	047 Add X2, X31, 8
	048 Move W1, W22
	049 Move X3, [X8]
	050 Call Dictionary`2<UInt32, Object>.TryGetValue, X0, X1, X2
	051 Move TEMP, X0
	052 And TEMP, TEMP, 1
	053 Compare TEMP, 1
	054 JumpIfEqual {74}
	055 Move X0, [X23]
	056 Move W8, [X0+224]
	057 Compare W8, 0
	058 JumpIfNotEqual {60}
	059 Call 0x1C17DFC
	060 And W2, W21, 1
	061 Move X0, X19
	062 Move X1, X20
	063 Call RendererLighting.CreateLightMaterial, X0, X1, X2
	064 Move [X31+8], X0
	065 Move X2, X0
	066 Move X0, [X19+240]
	067 Compare X0, 0
	068 JumpIfEqual {83}
	069 Move X8, 0x736000
	070 Move X8, [X8+1912]
	071 Move W1, W22
	072 Move X3, [X8]
	073 Call Dictionary`2<UInt32, Object>.set_Item, X0, X1, X2
	074 Move X0, [X31+8]
	075 Move X20, [X31+48]
	076 Move X19, [X31+56]
	077 Move X22, [X31+32]
	078 Move X21, [X31+40]
	079 Move X30, [X31+16]
	080 Move X23, [X31+24]
	081 Add X31, X31, 64
	082 Return X0
	083 Call 0x1C17F20

Method: System.Void .cctor()

Disassembly:
	0x03A20D28 CBZ X9, 0x3A20D4C
	0x03A20D2C LDR X10, [X8 + 0xB0]
	0x03A20D30 ADD X10, X10, 0x8
	0x03A20D34 LDUR X11, [X10 - 0x8]
	0x03A20D38 CMP X11, X1
	0x03A20D3C B.EQ 0x3A20DA4
	0x03A20D40 SUBS X9, X9, 0x1
	0x03A20D44 ADD X10, X10, 0x10
	0x03A20D48 B.NE 0x3A20D34
	0x03A20D4C MOVZ W2, 0x2
	0x03A20D50 MOV X0, X22
	0x03A20D54 BL 0x1C5C788
	0x03A20D58 B 0x3A20DB4
	0x03A20D5C LDR X22, [X20 + 0x10]
	0x03A20D60 CBZ X22, 0x3A2104C
	0x03A20D64 LDR X8, [X22]
	0x03A20D68 LDR X1, [X24]
	0x03A20D6C LDRH W9, [X8 + 0x12E]
	0x03A20D70 CBZ X9, 0x3A20D94
	0x03A20D74 LDR X10, [X8 + 0xB0]
	0x03A20D78 ADD X10, X10, 0x8
	0x03A20D7C LDUR X11, [X10 - 0x8]
	0x03A20D80 CMP X11, X1
	0x03A20D84 B.EQ 0x3A20FAC
	0x03A20D88 SUBS X9, X9, 0x1
	0x03A20D8C ADD X10, X10, 0x10
	0x03A20D90 B.NE 0x3A20D7C
	0x03A20D94 MOVZ W2, 0x6
	0x03A20D98 MOV X0, X22
	0x03A20D9C BL 0x1C5C788
	0x03A20DA0 B 0x3A20FBC
	0x03A20DA4 LDR W9, [X10]
	0x03A20DA8 ADD W9, W9, 0x2
	0x03A20DAC ADD X8, X8, W9, 0x4, SXTW
	0x03A20DB0 ADD X0, X8, 0x138
	0x03A20DB4 LDP X8, X1, [X0]
	0x03A20DB8 MOV X0, X22
	0x03A20DBC BLR X8
	0x03A20DC0 LDR X23, [X20 + 0x10]
	0x03A20DC4 CBZ X23, 0x3A2104C
	0x03A20DC8 LDR X8, [X23]
	0x03A20DCC LDR X1, [X24]
	0x03A20DD0 SCVTF S9, W21
	0x03A20DD4 SCVTF S8, W19
	0x03A20DD8 LDRH W9, [X8 + 0x12E]
	0x03A20DDC MOV W22, W0
	0x03A20DE0 FDIV S12, S9, S8
	0x03A20DE4 CBZ X9, 0x3A20E08
	0x03A20DE8 LDR X10, [X8 + 0xB0]
	0x03A20DEC ADD X10, X10, 0x8
	0x03A20DF0 LDUR X11, [X10 - 0x8]
	0x03A20DF4 CMP X11, X1
	0x03A20DF8 B.EQ 0x3A20E18
	0x03A20DFC SUBS X9, X9, 0x1
	0x03A20E00 ADD X10, X10, 0x10
	0x03A20E04 B.NE 0x3A20DF0
	0x03A20E08 MOVZ W2, 0x4
	0x03A20E0C MOV X0, X23
	0x03A20E10 BL 0x1C5C788
	0x03A20E14 B 0x3A20E28
	0x03A20E18 LDR W9, [X10]
	0x03A20E1C ADD W9, W9, 0x4
	0x03A20E20 ADD X8, X8, W9, 0x4, SXTW
	0x03A20E24 ADD X0, X8, 0x138
	0x03A20E28 LDP X8, X1, [X0]
	0x03A20E2C MOV X0, X23
	0x03A20E30 BLR X8
	0x03A20E34 SCVTF S0, W22
	0x03A20E38 SCVTF S1, W0
	0x03A20E3C FDIV S13, S0, S1
	0x03A20E40 FCMP S12, S13
	0x03A20E44 B.LE 0x3A20E80
	0x03A20E48 MOVZ W8, 0x7F800000
	0x03A20E4C FMUL S9, S13, S8
	0x03A20E50 FMOV S0, W8
	0x03A20E54 MOVZ W9, 0x80000000
	0x03A20E58 FCVTZS W10, S9
	0x03A20E5C FCMP S9, S0
	0x03A20E60 CSEL W8, W9, W10, EQ
	0x03A20E64 SUB W8, W21, W8
	0x03A20E68 CMP W8, 0x0
	0x03A20E6C CINC W8, W8, LT
	0x03A20E70 SBFM W8, W8, 0x1, 0x1F
	0x03A20E74 SCVTF S10, W8
	0x03A20E78 FMOV S11, W31
	0x03A20E7C B 0x3A20EB4
	0x03A20E80 MOVZ W8, 0x7F800000
	0x03A20E84 FDIV S8, S9, S13
	0x03A20E88 FMOV S0, W8
	0x03A20E8C MOVZ W9, 0x80000000
	0x03A20E90 FCVTZS W10, S8
	0x03A20E94 FCMP S8, S0
	0x03A20E98 CSEL W8, W9, W10, EQ
	0x03A20E9C SUB W8, W19, W8
	0x03A20EA0 CMP W8, 0x0
	0x03A20EA4 CINC W8, W8, LT
	0x03A20EA8 SBFM W8, W8, 0x1, 0x1F
	0x03A20EAC SCVTF S11, W8
	0x03A20EB0 FMOV S10, W31
	0x03A20EB4 LDR X22, [X20 + 0x10]
	0x03A20EB8 CBZ X22, 0x3A2104C
	0x03A20EBC LDR X8, [X22]
	0x03A20EC0 LDR X1, [X24]
	0x03A20EC4 LDRH W9, [X8 + 0x12E]
	0x03A20EC8 CBZ X9, 0x3A20EEC
	0x03A20ECC LDR X10, [X8 + 0xB0]
	0x03A20ED0 ADD X10, X10, 0x8
	0x03A20ED4 LDUR X11, [X10 - 0x8]
	0x03A20ED8 CMP X11, X1
	0x03A20EDC B.EQ 0x3A20EFC
	0x03A20EE0 SUBS X9, X9, 0x1
	0x03A20EE4 ADD X10, X10, 0x10
	0x03A20EE8 B.NE 0x3A20ED4
	0x03A20EEC MOVZ W2, 0x2
	0x03A20EF0 MOV X0, X22
	0x03A20EF4 BL 0x1C5C788
	0x03A20EF8 B 0x3A20F0C
	0x03A20EFC LDR W9, [X10]
	0x03A20F00 ADD W9, W9, 0x2
	0x03A20F04 ADD X8, X8, W9, 0x4, SXTW
	0x03A20F08 ADD X0, X8, 0x138
	0x03A20F0C LDP X8, X1, [X0]
	0x03A20F10 MOV X0, X22
	0x03A20F14 BLR X8
	0x03A20F18 SDIV W8, W21, W0
	0x03A20F1C MSUB W8, W8, W0, W21
	0x03A20F20 CBZ W8, 0x3A20F6C
	0x03A20F24 LDR X21, [X20 + 0x10]
	0x03A20F28 CBZ X21, 0x3A2104C
	0x03A20F2C LDR X8, [X21]
	0x03A20F30 LDR X1, [X24]
	0x03A20F34 LDRH W9, [X8 + 0x12E]
	0x03A20F38 CBZ X9, 0x3A20F5C
	0x03A20F3C LDR X10, [X8 + 0xB0]
	0x03A20F40 ADD X10, X10, 0x8
	0x03A20F44 LDUR X11, [X10 - 0x8]
	0x03A20F48 CMP X11, X1
	0x03A20F4C B.EQ 0x3A20F74
	0x03A20F50 SUBS X9, X9, 0x1
	0x03A20F54 ADD X10, X10, 0x10
	0x03A20F58 B.NE 0x3A20F44
	0x03A20F5C MOVZ W2, 0x4
	0x03A20F60 MOV X0, X21
	0x03A20F64 BL 0x1C5C788
	0x03A20F68 B 0x3A20F84
	0x03A20F6C FCMP S12, S13
	0x03A20F70 B 0x3A20FA0
	0x03A20F74 LDR W9, [X10]
	0x03A20F78 ADD W9, W9, 0x4
	0x03A20F7C ADD X8, X8, W9, 0x4, SXTW
	0x03A20F80 ADD X0, X8, 0x138
	0x03A20F84 LDP X8, X1, [X0]
	0x03A20F88 MOV X0, X21
	0x03A20F8C BLR X8
	0x03A20F90 SDIV W8, W19, W0
	0x03A20F94 MSUB W8, W8, W0, W19
	0x03A20F98 CBNZ W8, 0x3A2101C
	0x03A20F9C FCMP S13, S12
	0x03A20FA0 CSET W8, GT
	0x03A20FA4 STRB W8, [X20 + 0x54]
	0x03A20FA8 B 0x3A2101C
	0x03A20FAC LDR W9, [X10]
	0x03A20FB0 ADD W9, W9, 0x6
	0x03A20FB4 ADD X8, X8, W9, 0x4, SXTW
	0x03A20FB8 ADD X0, X8, 0x138
	0x03A20FBC LDP X8, X1, [X0]
	0x03A20FC0 MOV X0, X22
	0x03A20FC4 BLR X8
	0x03A20FC8 TBZ X0, 0x0, 0x3A20FE0
	0x03A20FCC LDR W9, [X20 + 0x28]
	0x03A20FD0 LDP W10, W8, [X20 + 0x30]
	0x03A20FD4 MUL W8, W8, W9
	0x03A20FD8 MUL W9, W10, W9
	0x03A20FDC B 0x3A20FE4
	0x03A20FE0 LDP W9, W8, [X20 + 0x30]
	0x03A20FE4 SCVTF S9, W9
	0x03A20FE8 SCVTF S8, W8
	0x03A20FEC FCVTZS W8, S9
	0x03A20FF0 FCVTZS W9, S8
	0x03A20FF4 SUB W8, W21, W8
	0x03A20FF8 SUB W9, W19, W9
	0x03A20FFC CMP W8, 0x0
	0x03A21000 CINC W8, W8, LT
	0x03A21004 CMP W9, 0x0
	0x03A21008 SBFM W8, W8, 0x1, 0x1F
	0x03A2100C CINC W9, W9, LT
	0x03A21010 SCVTF S10, W8
	0x03A21014 SBFM W8, W9, 0x1, 0x1F
	0x03A21018 SCVTF S11, W8
	0x03A2101C MOV V0.16B, V10.16B
	0x03A21020 MOV V1.16B, V11.16B
	0x03A21024 MOV V2.16B, V9.16B
	0x03A21028 MOV V3.16B, V8.16B
	0x03A2102C LDP X20, X19, [X31 + 0x60]
	0x03A21030 LDP X22, X21, [X31 + 0x50]
	0x03A21034 LDP X24, X23, [X31 + 0x40]
	0x03A21038 LDR X30, [X31 + 0x30]
	0x03A2103C LDP D9, D8, [X31 + 0x20]
	0x03A21040 LDP D11, D10, [X31 + 0x10]
	0x03A21044 LDP D13, D12, [X31], #0x70
	0x03A21048 RET
	0x03A2104C BL 0x1C16F20
	0x03A21050 SUB X31, X31, 0x50
	0x03A21054 STP D9, D8, [X31 + 0x10]
	0x03A21058 STP X30, X23, [X31 + 0x20]
	0x03A2105C STP X22, X21, [X31 + 0x30]
	0x03A21060 STP X20, X19, [X31 + 0x40]
	0x03A21064 ADRP X20, 0x9C1000
	0x03A21068 LDRB W8, [X20 + 0x4]
	0x03A2106C MOV V8.16B, V0.16B
	0x03A21070 MOV X19, X0
	0x03A21074 TBNZ X8, 0x0, 0x3A21098
	0x03A21078 ADRP X0, 0x733000
	0x03A2107C LDR X0, [X0 + 0x8C0]
	0x03A21080 BL 0x1C16CF4
	0x03A21084 ADRP X0, 0x6D2000
	0x03A21088 LDR X0, [X0 + 0x5A8]
	0x03A2108C BL 0x1C16CF4
	0x03A21090 MOVZ W8, 0x1
	0x03A21094 STRB W8, [X20 + 0x4]
	0x03A21098 LDR X20, [X19 + 0x10]
	0x03A2109C CBZ X20, 0x3A21468
	0x03A210A0 ADRP X22, 0x733000
	0x03A210A4 LDR X8, [X20]
	0x03A210A8 LDR X22, [X22 + 0x8C0]
	0x03A210AC LDRH W9, [X8 + 0x12E]
	0x03A210B0 LDR X1, [X22]
	0x03A210B4 CBZ X9, 0x3A210D8
	0x03A210B8 LDR X10, [X8 + 0xB0]
	0x03A210BC ADD X10, X10, 0x8
	0x03A210C0 LDUR X11, [X10 - 0x8]
	0x03A210C4 CMP X11, X1
	0x03A210C8 B.EQ 0x3A210E8
	0x03A210CC SUBS X9, X9, 0x1
	0x03A210D0 ADD X10, X10, 0x10
	0x03A210D4 B.NE 0x3A210C0
	0x03A210D8 MOVZ W2, 0x6
	0x03A210DC MOV X0, X20
	0x03A210E0 BL 0x1C5C788
	0x03A210E4 B 0x3A210F8
	0x03A210E8 LDR W9, [X10]
	0x03A210EC ADD W9, W9, 0x6
	0x03A210F0 ADD X8, X8, W9, 0x4, SXTW
	0x03A210F4 ADD X0, X8, 0x138
	0x03A210F8 LDP X8, X1, [X0]
	0x03A210FC MOV X0, X20
	0x03A21100 BLR X8
	0x03A21104 ADRP X20, 0x9B8000
	0x03A21108 TBZ X0, 0x0, 0x3A21178
	0x03A2110C LDRB W8, [X20 + 0x5D7]
	0x03A21110 LDR V9, [X19 + 0x48]
	0x03A21114 CBNZ W8, 0x3A2112C
	0x03A21118 ADRP X0, 0x6D2000
	0x03A2111C LDR X0, [X0 + 0x5A8]
	0x03A21120 BL 0x1C16CF4
	0x03A21124 MOVZ W8, 0x1
	0x03A21128 STRB W8, [X20 + 0x5D7]
	0x03A2112C ADRP X20, 0x6D2000
	0x03A21130 LDR X20, [X20 + 0x5A8]
	0x03A21134 FDIV S9, S9, S8
	0x03A21138 LDR X0, [X20]
	0x03A2113C LDR W8, [X0 + 0xE0]
	0x03A21140 CBNZ W8, 0x3A21148
	0x03A21144 BL 0x1C16DFC
	0x03A21148 FCVT S8, S9
	0x03A2114C ADD X0, X31, 0x8
	0x03A21150 MOV V0.16B, V8.16B
	0x03A21154 BL 0x3EB1C00
	0x03A21158 FCMP S9, 0x0
	0x03A2115C B.GE 0x3A211F0
	0x03A21160 FMOV D1, -0.5
	0x03A21164 FCMP D0, D1
	0x03A21168 B.NE 0x3A21240
	0x03A2116C LDR V0, [X31 + 0x8]
	0x03A21170 FMOV D1, -1
	0x03A21174 B 0x3A21204
	0x03A21178 LDR V1, [X19 + 0x28]
	0x03A2117C LDR V0, [X19 + 0x48]
	0x03A21180 LDRB W8, [X20 + 0x5D7]
	0x03A21184 SCVTF S1, S1
	0x03A21188 FMUL S9, S0, S1
	0x03A2118C CBNZ W8, 0x3A211A4
	0x03A21190 ADRP X0, 0x6D2000
	0x03A21194 LDR X0, [X0 + 0x5A8]
	0x03A21198 BL 0x1C16CF4
	0x03A2119C MOVZ W8, 0x1
	0x03A211A0 STRB W8, [X20 + 0x5D7]
	0x03A211A4 ADRP X20, 0x6D2000
	0x03A211A8 LDR X20, [X20 + 0x5A8]
	0x03A211AC FDIV S9, S9, S8
	0x03A211B0 LDR X0, [X20]
	0x03A211B4 LDR W8, [X0 + 0xE0]
	0x03A211B8 CBNZ W8, 0x3A211C0
	0x03A211BC BL 0x1C16DFC
	0x03A211C0 FCVT S8, S9
	0x03A211C4 ADD X0, X31, 0x8
	0x03A211C8 MOV V0.16B, V8.16B
	0x03A211CC BL 0x3EB1C00
	0x03A211D0 FCMP S9, 0x0
	0x03A211D4 B.GE 0x3A21218
	0x03A211D8 FMOV D1, -0.5
	0x03A211DC FCMP D0, D1
	0x03A211E0 B.NE 0x3A2124C
	0x03A211E4 LDR V0, [X31 + 0x8]
	0x03A211E8 FMOV D1, -1
	0x03A211EC B 0x3A2122C
	0x03A211F0 FMOV D1, 0.5
	0x03A211F4 FCMP D0, D1
	0x03A211F8 B.NE 0x3A21258
	0x03A211FC LDR V0, [X31 + 0x8]
	0x03A21200 FMOV D1, 1
	0x03A21204 FCVTZS X8, D0
	0x03A21208 FADD D1, D0, D1
	0x03A2120C ANDS X31, X8, 0x1
	0x03A21210 FCSEL D0, D0, D1, EQ
	0x03A21214 B 0x3A21260
	0x03A21218 FMOV D1, 0.5
	0x03A2121C FCMP D0, D1
	0x03A21220 B.NE 0x3A212A8
	0x03A21224 LDR V0, [X31 + 0x8]
	0x03A21228 FMOV D1, 1
	0x03A2122C FCVTZS X8, D0
	0x03A21230 FADD D1, D0, D1
	0x03A21234 ANDS X31, X8, 0x1
	0x03A21238 FCSEL D0, D0, D1, EQ
	0x03A2123C B 0x3A212B0
	0x03A21240 FADD D0, D8, D1
	0x03A21244 FRINTP D0, D0
	0x03A21248 B 0x3A21260
	0x03A2124C FADD D0, D8, D1
	0x03A21250 FRINTP D0, D0
	0x03A21254 B 0x3A212B0
	0x03A21258 FADD D0, D8, D1
	0x03A2125C FRINTM D0, D0
	0x03A21260 LDR X0, [X20]
	0x03A21264 MOVZ X8, 0x7FF00000
	0x03A21268 FMOV D1, X8
	0x03A2126C FCVTZS W10, D0
	0x03A21270 LDR W9, [X0 + 0xE0]
	0x03A21274 FCMP D0, D1
	0x03A21278 MOVZ W8, 0x80000000
	0x03A2127C CSEL W20, W8, W10, EQ
	0x03A21280 CBNZ W9, 0x3A21288
	0x03A21284 BL 0x1C16DFC
	0x03A21288 MOVZ W0, 0x1
	0x03A2128C MOV W1, W20
	0x03A21290 MOV X2, X31
	0x03A21294 BL 0x337EDF0
	0x03A21298 LDR V8, [X19 + 0x48]
	0x03A2129C MOV W20, W0
	0x03A212A0 STR W0, [X19 + 0x50]
	0x03A212A4 B 0x3A21300
	0x03A212A8 FADD D0, D8, D1
	0x03A212AC FRINTM D0, D0
	0x03A212B0 LDR X0, [X20]
	0x03A212B4 MOVZ X8, 0x7FF00000
	0x03A212B8 FMOV D1, X8
	0x03A212BC FCVTZS W10, D0
	0x03A212C0 LDR W9, [X0 + 0xE0]
	0x03A212C4 FCMP D0, D1
	0x03A212C8 MOVZ W8, 0x80000000
	0x03A212CC CSEL W20, W8, W10, EQ
	0x03A212D0 CBNZ W9, 0x3A212D8
	0x03A212D4 BL 0x1C16DFC
	0x03A212D8 MOVZ W0, 0x1
	0x03A212DC MOV W1, W20
	0x03A212E0 MOV X2, X31
	0x03A212E4 BL 0x337EDF0
	0x03A212E8 LDR V0, [X19 + 0x28]
	0x03A212EC LDR V1, [X19 + 0x48]
	0x03A212F0 MOV W20, W0
	0x03A212F4 STR W0, [X19 + 0x50]
	0x03A212F8 SCVTF S0, S0
	0x03A212FC FMUL S8, S1, S0
	0x03A21300 LDR X21, [X19 + 0x10]
	0x03A21304 CBZ X21, 0x3A21468
	0x03A21308 LDR X8, [X21]
	0x03A2130C LDR X1, [X22]
	0x03A21310 LDRH W9, [X8 + 0x12E]
	0x03A21314 CBZ X9, 0x3A21338
	0x03A21318 LDR X10, [X8 + 0xB0]
	0x03A2131C ADD X10, X10, 0x8
	0x03A21320 LDUR X11, [X10 - 0x8]
	0x03A21324 CMP X11, X1
	0x03A21328 B.EQ 0x3A21348
	0x03A2132C SUBS X9, X9, 0x1
	0x03A21330 ADD X10, X10, 0x10
	0x03A21334 B.NE 0x3A21320
	0x03A21338 MOVZ W2, 0x6
	0x03A2133C MOV X0, X21
	0x03A21340 BL 0x1C5C788
	0x03A21344 B 0x3A21358
	0x03A21348 LDR W9, [X10]
	0x03A2134C ADD W9, W9, 0x6
	0x03A21350 ADD X8, X8, W9, 0x4, SXTW
	0x03A21354 ADD X0, X8, 0x138
	0x03A21358 LDP X8, X1, [X0]
	0x03A2135C MOV X0, X21
	0x03A21360 BLR X8
	0x03A21364 TBNZ X0, 0x0, 0x3A21448
	0x03A21368 LDR X21, [X19 + 0x10]
	0x03A2136C CBZ X21, 0x3A21468
	0x03A21370 LDR X8, [X21]
	0x03A21374 LDR X1, [X22]
	0x03A21378 LDRH W9, [X8 + 0x12E]
	0x03A2137C CBZ X9, 0x3A213A0
	0x03A21380 LDR X10, [X8 + 0xB0]
	0x03A21384 ADD X10, X10, 0x8
	0x03A21388 LDUR X11, [X10 - 0x8]
	0x03A2138C CMP X11, X1
	0x03A21390 B.EQ 0x3A213B0
	0x03A21394 SUBS X9, X9, 0x1
	0x03A21398 ADD X10, X10, 0x10
	0x03A2139C B.NE 0x3A21388
	0x03A213A0 MOVZ W2, 0x8
	0x03A213A4 MOV X0, X21
	0x03A213A8 BL 0x1C5C788
	0x03A213AC B 0x3A213C0
	0x03A213B0 LDR W9, [X10]
	0x03A213B4 ADD W9, W9, 0x8
	0x03A213B8 ADD X8, X8, W9, 0x4, SXTW
	0x03A213BC ADD X0, X8, 0x138
	0x03A213C0 LDP X8, X1, [X0]
	0x03A213C4 MOV X0, X21
	0x03A213C8 BLR X8
	0x03A213CC TBNZ X0, 0x0, 0x3A21448
	0x03A213D0 LDR X21, [X19 + 0x10]
	0x03A213D4 CBZ X21, 0x3A21468
	0x03A213D8 LDR X8, [X21]
	0x03A213DC LDR W23, [X19 + 0x50]
	0x03A213E0 LDR X1, [X22]
	0x03A213E4 LDRH W9, [X8 + 0x12E]
	0x03A213E8 CBZ X9, 0x3A2140C
	0x03A213EC LDR X10, [X8 + 0xB0]
	0x03A213F0 ADD X10, X10, 0x8
	0x03A213F4 LDUR X11, [X10 - 0x8]
	0x03A213F8 CMP X11, X1
	0x03A213FC B.EQ 0x3A2141C
	0x03A21400 SUBS X9, X9, 0x1
	0x03A21404 ADD X10, X10, 0x10
	0x03A21408 B.NE 0x3A213F4
	0x03A2140C MOV X0, X21
	0x03A21410 MOV W2, W31
	0x03A21414 BL 0x1C5C788
	0x03A21418 B 0x3A21428
	0x03A2141C LDRSW X9, [X10]
	0x03A21420 ADD X8, X8, X9, 0x4, LSL
	0x03A21424 ADD X0, X8, 0x138
	0x03A21428 LDP X8, X1, [X0]
	0x03A2142C MOV X0, X21
	0x03A21430 BLR X8
	0x03A21434 MUL W8, W0, W23
	0x03A21438 SCVTF S0, W8
	0x03A2143C FMOV S1, 1
	0x03A21440 FDIV S0, S1, S0
	0x03A21444 STR S0, [X19 + 0x4C]
	0x03A21448 SCVTF S0, W20
	0x03A2144C FDIV S0, S8, S0
	0x03A21450 LDP X20, X19, [X31 + 0x40]
	0x03A21454 LDP X22, X21, [X31 + 0x30]
	0x03A21458 LDP X30, X23, [X31 + 0x20]
	0x03A2145C LDP D9, D8, [X31 + 0x10]
	0x03A21460 ADD X31, X31, 0x50
	0x03A21464 RET
	0x03A21468 BL 0x1C16F20
	0x03A2146C LDRB W0, [X0 + 0x1E9]
	0x03A21470 RET
	0x03A21474 LDRB W0, [X0 + 0x1EA]
	0x03A21478 RET
	0x03A2147C LDR X0, [X0 + 0x220]
	0x03A21480 RET
	0x03A21484 LDR X0, [X0 + 0x228]
	0x03A21488 RET
	0x03A2148C LDR X0, [X0 + 0x230]
	0x03A21490 RET
	0x03A21494 LDR X0, [X0 + 0x238]
	0x03A21498 RET
	0x03A2149C LDR X0, [X0 + 0x240]
	0x03A214A0 RET
	0x03A214A4 MOVZ W0, 0x3
	0x03A214A8 RET
	0x03A214AC SUB X31, X31, 0xB0
	0x03A214B0 STP X29, X30, [X31 + 0x50]
	0x03A214B4 STP X28, X27, [X31 + 0x60]
	0x03A214B8 STP X26, X25, [X31 + 0x70]
	0x03A214BC STP X24, X23, [X31 + 0x80]
	0x03A214C0 STP X22, X21, [X31 + 0x90]
	0x03A214C4 STP X20, X19, [X31 + 0xA0]
	0x03A214C8 ADRP X22, 0x9C1000
	0x03A214CC ADRP X21, 0x733000
	0x03A214D0 LDRB W8, [X22 + 0x5]
	0x03A214D4 LDR X21, [X21 + 0x8C8]
	0x03A214D8 MOV X19, X1
	0x03A214DC MOV X20, X0
	0x03A214E0 TBNZ X8, 0x0, 0x3A215AC
	0x03A214E4 ADRP X0, 0x731000
	0x03A214E8 LDR X0, [X0 + 0xE28]
	0x03A214EC BL 0x1C16CF4
	0x03A214F0 ADRP X0, 0x6FA000
	0x03A214F4 LDR X0, [X0 + 0x8F8]
	0x03A214F8 BL 0x1C16CF4
	0x03A214FC ADRP X0, 0x733000
	0x03A21500 LDR X0, [X0 + 0x8D0]
	0x03A21504 BL 0x1C16CF4
	0x03A21508 ADRP X0, 0x733000
	0x03A2150C LDR X0, [X0 + 0x8D8]
	0x03A21510 BL 0x1C16CF4

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X28, 0x9C2000
	015 Move X29, 0x731000
	016 Move X19, 0x735000
	017 Move X20, 0x735000
	018 Move X27, 0x735000
	019 Move X26, 0x735000
	020 Move X25, 0x735000
	021 Move X24, 0x735000
	022 Move X23, 0x735000
	023 Move X22, 0x735000
	024 Move X21, 0x6D4000
	025 Move X29, [X29+1432]
	026 Move X19, [X19+1920]
	027 Move X20, [X20+1624]
	028 Move X27, [X27+1776]
	029 Move X26, [X26+1928]
	030 Move W8, [X28+4095]
	031 Move X25, [X25+1936]
	032 Move X24, [X24+1944]
	033 Move X23, [X23+1952]
	034 Move X22, [X22+1960]
	035 Move X21, [X21+2760]
	036 Move TEMP, X8
	037 And TEMP, TEMP, 1
	038 Compare TEMP, 1
	039 JumpIfEqual {174}
	040 Move X0, 0x6D5000
	041 Move X0, [X0+3672]
	042 Call 0x1C17CF4
	043 Move X0, 0x731000
	044 Move X0, [X0+1432]
	045 Call 0x1C17CF4
	046 Move X0, 0x735000
	047 Move X0, [X0+1624]
	048 Call 0x1C17CF4
	049 Move X0, 0x6D4000
	050 Move X0, [X0+2760]
	051 Call 0x1C17CF4
	052 Move X0, 0x735000
	053 Move X0, [X0+1968]
	054 Call 0x1C17CF4
	055 Move X0, 0x735000
	056 Move X0, [X0+1976]
	057 Call 0x1C17CF4
	058 Move X0, 0x735000
	059 Move X0, [X0+1984]
	060 Call 0x1C17CF4
	061 Move X0, 0x735000
	062 Move X0, [X0+1992]
	063 Call 0x1C17CF4
	064 Move X0, 0x735000
	065 Move X0, [X0+2000]
	066 Call 0x1C17CF4
	067 Move X0, 0x735000
	068 Move X0, [X0+2008]
	069 Call 0x1C17CF4
	070 Move X0, 0x735000
	071 Move X0, [X0+2016]
	072 Call 0x1C17CF4
	073 Move X0, 0x735000
	074 Move X0, [X0+2024]
	075 Call 0x1C17CF4
	076 Move X0, 0x735000
	077 Move X0, [X0+2032]
	078 Call 0x1C17CF4
	079 Move X0, 0x735000
	080 Move X0, [X0+1928]
	081 Call 0x1C17CF4
	082 Move X0, 0x735000
	083 Move X0, [X0+2040]
	084 Call 0x1C17CF4
	085 Move X0, 0x735000
	086 Move X0, [X0+2048]
	087 Call 0x1C17CF4
	088 Move X0, 0x735000
	089 Move X0, [X0+1920]
	090 Call 0x1C17CF4
	091 Move X0, 0x735000
	092 Move X0, [X0+1776]
	093 Call 0x1C17CF4
	094 Move X0, 0x735000
	095 Move X0, [X0+2056]
	096 Call 0x1C17CF4
	097 Move X0, 0x735000
	098 Move X0, [X0+1944]
	099 Call 0x1C17CF4
	100 Move X0, 0x735000
	101 Move X0, [X0+2064]
	102 Call 0x1C17CF4
	103 Move X0, 0x735000
	104 Move X0, [X0+2072]
	105 Call 0x1C17CF4
	106 Move X0, 0x735000
	107 Move X0, [X0+2080]
	108 Call 0x1C17CF4
	109 Move X0, 0x735000
	110 Move X0, [X0+2088]
	111 Call 0x1C17CF4
	112 Move X0, 0x735000
	113 Move X0, [X0+2096]
	114 Call 0x1C17CF4
	115 Move X0, 0x735000
	116 Move X0, [X0+2104]
	117 Call 0x1C17CF4
	118 Move X0, 0x735000
	119 Move X0, [X0+2112]
	120 Call 0x1C17CF4
	121 Move X0, 0x735000
	122 Move X0, [X0+2120]
	123 Call 0x1C17CF4
	124 Move X0, 0x735000
	125 Move X0, [X0+2128]
	126 Call 0x1C17CF4
	127 Move X0, 0x735000
	128 Move X0, [X0+2136]
	129 Call 0x1C17CF4
	130 Move X0, 0x735000
	131 Move X0, [X0+2144]
	132 Call 0x1C17CF4
	133 Move X0, 0x735000
	134 Move X0, [X0+2152]
	135 Call 0x1C17CF4
	136 Move X0, 0x735000
	137 Move X0, [X0+1960]
	138 Call 0x1C17CF4
	139 Move X0, 0x735000
	140 Move X0, [X0+2160]
	141 Call 0x1C17CF4
	142 Move X0, 0x735000
	143 Move X0, [X0+2168]
	144 Call 0x1C17CF4
	145 Move X0, 0x735000
	146 Move X0, [X0+2176]
	147 Call 0x1C17CF4
	148 Move X0, 0x735000
	149 Move X0, [X0+2184]
	150 Call 0x1C17CF4
	151 Move X0, 0x735000
	152 Move X0, [X0+2192]
	153 Call 0x1C17CF4
	154 Move X0, 0x735000
	155 Move X0, [X0+2200]
	156 Call 0x1C17CF4
	157 Move X0, 0x735000
	158 Move X0, [X0+2208]
	159 Call 0x1C17CF4
	160 Move X0, 0x735000
	161 Move X0, [X0+1952]
	162 Call 0x1C17CF4
	163 Move X0, 0x735000
	164 Move X0, [X0+2216]
	165 Call 0x1C17CF4
	166 Move X0, 0x735000
	167 Move X0, [X0+1936]
	168 Call 0x1C17CF4
	169 Move X0, 0x735000
	170 Move X0, [X0+2224]
	171 Call 0x1C17CF4
	172 Move W8, 1
	173 Move [X28+4095], W8
	174 Move X0, [X29]
	175 Call 0x1C17F10
	176 Move X1, [X19]
	177 Move X2, X31
	178 Move X19, X0
	179 Call ProfilingSampler..ctor, X0, X1
	180 Move X8, [X20]
	181 Add X0, X31, 8
	182 Move X2, X31
	183 Move X8, [X8+184]
	184 Move [X8], X19
	185 Move X1, [X27]
	186 Move [X31+8], W31
	187 Call ShaderTagId..ctor, X0, X1
	188 Move X8, [X20]
	189 Move X10, -49500160
	190 Move W9, [X31+8]
	191 Move V0, [X10+169]
	192 Move X11, [X8+184]
	193 Move W1, 4
	194 Move [X11+8], W9
	195 Move [X11+12], V0
	196 Move X10, [X26]
	197 Move X8, [X8+184]
	198 Move X9, [X25]
	199 Move [X8+32], X10
	200 Move [X8+40], X9
	201 Move X10, [X24]
	202 Move X9, [X23]
	203 Move [X8+48], X10
	204 Move [X8+56], X9
	205 Move X9, [X22]
	206 Move [X8+64], X9
	207 Move X0, [X21]
	208 Call 0x1C17D6C
	209 Compare X0, 0
	210 JumpIfEqual {520}
	211 Move W8, [X0+24]
	212 Compare W8, 0
	213 JumpIfEqual {519}
	214 Move X9, 0x734000
	215 Move X9, [X9+2216]
	216 NotImplemented "Instruction CMP not yet implemented."
	217 Move X9, [X9]
	218 Move [X0+32], X9
	219 Move X9, 0x734000
	220 Move X9, [X9+2144]
	221 NotImplemented "Instruction CMP not yet implemented."
	222 Move X9, [X9]
	223 Move [X0+40], X9
	224 Move X9, 0x734000
	225 Move X9, [X9+2152]
	226 NotImplemented "Instruction CMP not yet implemented."
	227 Move X9, [X9]
	228 Move [X0+48], X9
	229 Move X8, 0x734000
	230 Move X8, [X8+2016]
	231 Move X21, 0x6D4000
	232 Move X19, 0x734000
	233 Move W1, 4
	234 Move X8, [X8]
	235 Move [X0+56], X8
	236 Move X8, [X20]
	237 Move X8, [X8+184]
	238 Move X21, [X21+3672]
	239 Move [X8+72], X0
	240 Move X0, [X21]
	241 Move X19, [X19+2192]
	242 Call 0x1C17D6C
	243 Move X8, [X19]
	244 Move X19, X0
	245 Move X1, X31
	246 Move X0, X8
	247 Call Shader.PropertyToID, X0
	248 Compare X19, 0
	249 JumpIfEqual {520}
	250 Move W8, [X19+24]
	251 Compare W8, 0
	252 JumpIfEqual {519}
	253 Move X8, 0x734000
	254 Move X8, [X8+2160]
	255 Move [X19+32], W0
	256 Move X1, X31
	257 Move X0, [X8]
	258 Call Shader.PropertyToID, X0
	259 Move W8, [X19+24]
	260 NotImplemented "Instruction CMP not yet implemented."
	261 Move X8, 0x734000
	262 Move X8, [X8+2072]
	263 Move [X19+36], W0
	264 Move X1, X31
	265 Move X0, [X8]
	266 Call Shader.PropertyToID, X0
	267 Move W8, [X19+24]
	268 NotImplemented "Instruction CMP not yet implemented."
	269 Move X8, 0x734000
	270 Move X8, [X8+2176]
	271 Move [X19+40], W0
	272 Move X1, X31
	273 Move X0, [X8]
	274 Call Shader.PropertyToID, X0
	275 Move W8, [X19+24]
	276 NotImplemented "Instruction CMP not yet implemented."
	277 Move [X19+44], W0
	278 Move X8, [X20]
	279 Move W1, 4
	280 Move X8, [X8+184]
	281 Move [X8+80], X19
	282 Move X0, [X21]
	283 Move X19, 0x734000
	284 Move X19, [X19+2040]
	285 Call 0x1C17D6C
	286 Move X8, [X19]
	287 Move X19, X0
	288 Move X1, X31
	289 Move X0, X8
	290 Call Shader.PropertyToID, X0
	291 Compare X19, 0
	292 JumpIfEqual {520}
	293 Move W8, [X19+24]
	294 Compare W8, 0
	295 JumpIfEqual {519}
	296 Move X8, 0x734000
	297 Move X8, [X8+2088]
	298 Move [X19+32], W0
	299 Move X1, X31
	300 Move X0, [X8]
	301 Call Shader.PropertyToID, X0
	302 Move W8, [X19+24]
	303 NotImplemented "Instruction CMP not yet implemented."
	304 Move X8, 0x734000
	305 Move X8, [X8+1984]
	306 Move [X19+36], W0
	307 Move X1, X31
	308 Move X0, [X8]
	309 Call Shader.PropertyToID, X0
	310 Move W8, [X19+24]
	311 NotImplemented "Instruction CMP not yet implemented."
	312 Move X8, 0x734000
	313 Move X8, [X8+2136]
	314 Move [X19+40], W0
	315 Move X1, X31
	316 Move X0, [X8]
	317 Call Shader.PropertyToID, X0
	318 Move W8, [X19+24]
	319 NotImplemented "Instruction CMP not yet implemented."
	320 Move [X19+44], W0
	321 Move X8, [X20]
	322 Move W1, 4
	323 Move X8, [X8+184]
	324 Move [X8+88], X19
	325 Move X0, [X21]
	326 Move X19, 0x734000
	327 Move X19, [X19+2128]
	328 Call 0x1C17D6C
	329 Move X8, [X19]
	330 Move X19, X0
	331 Move X1, X31
	332 Move X0, X8
	333 Call Shader.PropertyToID, X0
	334 Compare X19, 0
	335 JumpIfEqual {520}
	336 Move W8, [X19+24]
	337 Compare W8, 0
	338 JumpIfEqual {519}
	339 Move X8, 0x734000
	340 Move X8, [X8+2168]
	341 Move [X19+32], W0
	342 Move X1, X31
	343 Move X0, [X8]
	344 Call Shader.PropertyToID, X0
	345 Move W8, [X19+24]
	346 NotImplemented "Instruction CMP not yet implemented."
	347 Move X8, 0x734000
	348 Move X8, [X8+2008]
	349 Move [X19+36], W0
	350 Move X1, X31
	351 Move X0, [X8]
	352 Call Shader.PropertyToID, X0
	353 Move W8, [X19+24]
	354 NotImplemented "Instruction CMP not yet implemented."
	355 Move X8, 0x734000
	356 Move X8, [X8+2064]
	357 Move [X19+40], W0
	358 Move X1, X31
	359 Move X0, [X8]
	360 Call Shader.PropertyToID, X0
	361 Move W8, [X19+24]
	362 NotImplemented "Instruction CMP not yet implemented."
	363 Move X8, 0x734000
	364 Move X23, 0x734000
	365 Move X24, 0x734000
	366 Move X25, 0x734000
	367 Move X26, 0x734000
	368 Move X22, 0x734000
	369 Move X21, 0x734000
	370 Move X29, 0x734000
	371 Move X27, 0x734000
	372 Move X8, [X8+2048]
	373 Move X23, [X23+2112]
	374 Move X24, [X24+2024]
	375 Move X25, [X25+2000]
	376 Move X26, [X26+2120]
	377 Move X22, [X22+2224]
	378 Move X21, [X21+2208]
	379 Move X29, [X29+2056]
	380 Move X27, [X27+2080]
	381 Move [X19+44], W0
	382 Move X9, [X20]
	383 Move X28, 0x734000
	384 Move X28, [X28+2104]
	385 Move W10, 8
	386 Move X9, [X9+184]
	387 Move X1, X31
	388 Move [X9+96], X19
	389 Move [X9+104], W10
	390 Move X0, [X8]
	391 Move X19, 0x734000
	392 Move X19, [X19+2200]
	393 Call Shader.PropertyToID, X0
	394 Move X8, [X20]
	395 Move X1, X31
	396 Move X8, [X8+184]
	397 Move [X8+112], W0
	398 Move X0, [X23]
	399 Call Shader.PropertyToID, X0
	400 Move X8, [X20]
	401 Move X1, X31
	402 Move X8, [X8+184]
	403 Move [X8+116], W0
	404 Move X0, [X24]
	405 Call Shader.PropertyToID, X0
	406 Move X8, [X20]
	407 Move X1, X31
	408 Move X8, [X8+184]
	409 Move [X8+120], W0
	410 Move X0, [X25]
	411 Call Shader.PropertyToID, X0
	412 Move X8, [X20]
	413 Move X1, X31
	414 Move X8, [X8+184]
	415 Move [X8+124], W0
	416 Move X0, [X26]
	417 Call Shader.PropertyToID, X0
	418 Move X8, [X20]
	419 Move X1, X31
	420 Move X8, [X8+184]
	421 Move [X8+128], W0
	422 Move X0, [X22]
	423 Call Shader.PropertyToID, X0
	424 Move X8, [X20]
	425 Move X1, X31
	426 Move X8, [X8+184]
	427 Move [X8+132], W0
	428 Move X0, [X21]
	429 Call Shader.PropertyToID, X0
	430 Move X8, [X20]
	431 Move X1, X31
	432 Move X8, [X8+184]
	433 Move [X8+136], W0
	434 Move X0, [X29]
	435 Call Shader.PropertyToID, X0
	436 Move X8, [X20]
	437 Move X1, X31
	438 Move X8, [X8+184]
	439 Move [X8+140], W0
	440 Move X0, [X27]
	441 Call Shader.PropertyToID, X0
	442 Move X8, [X20]
	443 Move X1, X31
	444 Move X8, [X8+184]
	445 Move [X8+144], W0
	446 Move X0, [X28]
	447 Call Shader.PropertyToID, X0
	448 Move X8, [X20]
	449 Move X1, X31
	450 Move X8, [X8+184]
	451 Move [X8+148], W0
	452 Move X8, 0x734000
	453 Move X8, [X8+2184]
	454 Move X0, [X8]
	455 Call Shader.PropertyToID, X0
	456 Move X8, [X20]
	457 Move X1, X31
	458 Move X8, [X8+184]
	459 Move [X8+152], W0
	460 Move X8, 0x734000
	461 Move X8, [X8+1976]
	462 Move X0, [X8]
	463 Call Shader.PropertyToID, X0
	464 Move X8, [X20]
	465 Move X1, X31
	466 Move X8, [X8+184]
	467 Move [X8+156], W0
	468 Move X8, 0x734000
	469 Move X8, [X8+2096]
	470 Move X0, [X8]
	471 Call Shader.PropertyToID, X0
	472 Move X8, [X20]
	473 Move X1, X31
	474 Move X8, [X8+184]
	475 Move [X8+160], W0
	476 Move X8, 0x734000
	477 Move X8, [X8+1968]
	478 Move X0, [X8]
	479 Call Shader.PropertyToID, X0
	480 Move X8, [X20]
	481 Move X1, X31
	482 Move X8, [X8+184]
	483 Move [X8+164], W0
	484 Move X0, [X19]
	485 Call Shader.PropertyToID, X0
	486 Move X8, [X20]
	487 Move X1, X31
	488 Move X8, [X8+184]
	489 Move [X8+168], W0
	490 Move X8, 0x734000
	491 Move X8, [X8+1992]
	492 Move X0, [X8]
	493 Call Shader.PropertyToID, X0
	494 Move X8, [X20]
	495 Move X1, X31
	496 Move X8, [X8+184]
	497 Move [X8+172], W0
	498 Move X8, 0x734000
	499 Move X8, [X8+2032]
	500 Move X0, [X8]
	501 Call Shader.PropertyToID, X0
	502 Move X8, [X20]
	503 Move X20, [X31+96]
	504 Move X19, [X31+104]
	505 Move X22, [X31+80]
	506 Move X21, [X31+88]
	507 Move X24, [X31+64]
	508 Move X23, [X31+72]
	509 Move X8, [X8+184]
	510 Move X26, [X31+48]
	511 Move X25, [X31+56]
	512 Move X28, [X31+32]
	513 Move X27, [X31+40]
	514 Move X29, [X31+16]
	515 Move X30, [X31+24]
	516 Move [X8+176], W0
	517 Add X31, X31, 112
	518 Return 
	519 Call 0x1C17F28
	520 Call 0x1C17F20

