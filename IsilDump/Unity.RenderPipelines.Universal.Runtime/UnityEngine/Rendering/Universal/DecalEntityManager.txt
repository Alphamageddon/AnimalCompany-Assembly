Type: UnityEngine.Rendering.Universal.DecalEntityManager

Method: UnityEngine.Material get_errorMaterial()

Disassembly:
	0x03A3E494 FMOV S0, W31
	0x03A3E498 FCMP S14, S3
	0x03A3E49C STP S2, S1, [X8]
	0x03A3E4A0 FMOV S1, W31
	0x03A3E4A4 B.EQ 0x3A3E4E8
	0x03A3E4A8 LDR V6, [X31 + 0x1CC]
	0x03A3E4AC ADRP X9, 0xFFFFFFFFFD0AB000
	0x03A3E4B0 MOVZ W8, 0x43340000
	0x03A3E4B4 LDR V5, [X9 + 0xF28]
	0x03A3E4B8 FMOV S3, W8
	0x03A3E4BC FDIV S4, S14, S3
	0x03A3E4C0 FDIV S3, S6, S3
	0x03A3E4C4 FMOV S0, 0.25
	0x03A3E4C8 FSUB S3, S3, S4
	0x03A3E4CC FSUB S0, S0, S4
	0x03A3E4D0 FMAX S3, S3, S5
	0x03A3E4D4 FMOV S1, 1
	0x03A3E4D8 FMOV S2, -0.25
	0x03A3E4DC FDIV S0, S0, S3
	0x03A3E4E0 FSUB S0, S1, S0
	0x03A3E4E4 FDIV S1, S2, S3
	0x03A3E4E8 MOV X0, X31
	0x03A3E4EC BL 0x3883124
	0x03A3E4F0 LDR X8, [X20 + 0x88]
	0x03A3E4F4 MOV V2.16B, V10.16B
	0x03A3E4F8 MOV V3.16B, V11.16B
	0x03A3E4FC MOV X0, X31
	0x03A3E500 ADD X8, X8, X23, 0x3, LSL
	0x03A3E504 STP S0, S1, [X8]
	0x03A3E508 MOV V0.16B, V8.16B
	0x03A3E50C MOV V1.16B, V9.16B
	0x03A3E510 BL 0x3892E24
	0x03A3E514 LDR X8, [X20 + 0x98]
	0x03A3E518 MOV X1, X31
	0x03A3E51C ADD X8, X8, X23, 0x4, LSL
	0x03A3E520 STP S0, S1, [X8]
	0x03A3E524 STP S2, S3, [X8 + 0x8]
	0x03A3E528 LDR X8, [X20 + 0xA8]
	0x03A3E52C STR W21, [X8, X23, LSL #2]
	0x03A3E530 LDR X8, [X20 + 0xB8]
	0x03A3E534 STR X22, [X8, X23, LSL #3]
	0x03A3E538 LDR X8, [X20 + 0xC8]
	0x03A3E53C STR S15, [X8, X23, LSL #2]
	0x03A3E540 LDR W8, [X19 + 0x54]
	0x03A3E544 LDR X9, [X20 + 0xE8]
	0x03A3E548 STR W8, [X9, X23, LSL #2]
	0x03A3E54C LDR W0, [X19 + 0x50]
	0x03A3E550 BL 0x3A6FDA8
	0x03A3E554 LDR X8, [X20 + 0xF8]
	0x03A3E558 MOV X1, X31
	0x03A3E55C STR W0, [X8, X23, LSL #2]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x9A5000
	006 Move X20, 0x6B6000
	007 Move W8, [X21+333]
	008 Move X20, [X20+1432]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {25}
	014 Move X0, 0x6DE000
	015 Move X0, [X0+2296]
	016 Call 0x1C17CF4
	017 Move X0, 0x6B6000
	018 Move X0, [X0+1432]
	019 Call 0x1C17CF4
	020 Move X0, 0x718000
	021 Move X0, [X0+2200]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+333], W8
	025 Move X0, [X20]
	026 Move X20, [X19+112]
	027 Move W8, [X0+224]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X0, X20
	032 Move X1, X31
	033 Move X2, X31
	034 Call Object.op_Equality, X0, X1
	035 Move TEMP, X0
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfNotEqual {57}
	039 Move X8, 0x718000
	040 Move X8, [X8+2200]
	041 Move X20, 0x6DE000
	042 Move X1, X31
	043 Move X0, [X8]
	044 Move X20, [X20+2296]
	045 Call Shader.Find, X0
	046 Move X8, [X20]
	047 Move X20, X0
	048 Move W9, [X8+224]
	049 Compare W9, 0
	050 JumpIfNotEqual {53}
	051 Move X0, X8
	052 Call 0x1C17DFC
	053 Move X0, X20
	054 Move X1, X31
	055 Call CoreUtils.CreateEngineMaterial, X0
	056 Move [X19+112], X0
	057 Move X0, [X19+112]
	058 Move X20, [X31+16]
	059 Move X19, [X31+24]
	060 Move X30, [X31+32]
	061 Move X21, [X31+40]
	062 Return X0

Method: UnityEngine.Mesh get_decalProjectorMesh()

Disassembly:
	0x03A3D3E4 ADD X0, X20, 0x30
	0x03A3D3E8 MOV W1, W19
	0x03A3D3EC BL 0x2171F30
	0x03A3D3F0 LDR X2, [X20 + 0x40]!
	0x03A3D3F4 MOV W3, W19
	0x03A3D3F8 ADD X1, X20, 0x8
	0x03A3D3FC BL 0x3A3AFC4
	0x03A3D400 LDR X2, [X21]
	0x03A3D404 MOV X0, X20
	0x03A3D408 MOV W1, W19
	0x03A3D40C BL 0x21721E0
	0x03A3D410 STUR W19, [X20 - 0x2C]
	0x03A3D414 LDP X20, X19, [X31 + 0x20]
	0x03A3D418 LDP X22, X21, [X31 + 0x10]
	0x03A3D41C LDP X30, X23, [X31], #0x30
	0x03A3D420 RET
	0x03A3D424 STR X30, [X31 - 0x20]!
	0x03A3D428 STP X20, X19, [X31 + 0x10]
	0x03A3D42C ADRP X20, 0x9A5000
	0x03A3D430 LDRB W8, [X20 + 0x14C]
	0x03A3D434 MOV X19, X0
	0x03A3D438 TBNZ X8, 0x0, 0x3A3D450
	0x03A3D43C ADRP X0, 0x718000
	0x03A3D440 LDR X0, [X0 + 0x890]
	0x03A3D444 BL 0x1C16CF4
	0x03A3D448 MOVZ W8, 0x1
	0x03A3D44C STRB W8, [X20 + 0x14C]
	0x03A3D450 LDR W8, [X19 + 0x14]
	0x03A3D454 CBZ W8, 0x3A3D480
	0x03A3D458 ADRP X8, 0x718000
	0x03A3D45C LDR X8, [X8 + 0x890]
	0x03A3D460 ADD X0, X19, 0x30
	0x03A3D464 LDR X1, [X8]
	0x03A3D468 BL 0x23D04F4
	0x03A3D46C ADD X0, X19, 0x48
	0x03A3D470 MOV X1, X31
	0x03A3D474 BL 0x3C43744
	0x03A3D478 STR X31, [X19 + 0x40]
	0x03A3D47C STR X31, [X19 + 0x10]
	0x03A3D480 LDP X20, X19, [X31 + 0x10]
	0x03A3D484 LDR X30, [X31], #0x20
	0x03A3D488 RET
	0x03A3D48C MOV X1, X31
	0x03A3D490 B 0x33BDD8C
	0x03A3D494 STP X30, X21, [X31 - 0x20]!
	0x03A3D498 STP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x9A6000
	006 Move X20, 0x6B7000
	007 Move W8, [X21+334]
	008 Move X20, [X20+1432]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x6DF000
	015 Move X0, [X0+2296]
	016 Call 0x1C17CF4
	017 Move X0, 0x6B7000
	018 Move X0, [X0+1432]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+334], W8
	022 Move X0, [X20]
	023 Move X20, [X19+120]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Move X0, X20
	029 Move X1, X31
	030 Move X2, X31
	031 Call Object.op_Equality, X0, X1
	032 Move TEMP, X0
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfNotEqual {52}
	036 Move X8, 0x6DF000
	037 Move X8, [X8+2296]
	038 Move X0, [X8]
	039 Move W8, [X0+224]
	040 Compare W8, 0
	041 JumpIfNotEqual {43}
	042 Call 0x1C17DFC
	043 Move S0, -0.5
	044 Move S1, -0.5
	045 Move S2, -0.5
	046 Move S3, 0.5
	047 Move S4, 0.5
	048 Move S5, 0.5
	049 Move X0, X31
	050 Call CoreUtils.CreateCubeMesh, X0, X1
	051 Move [X19+120], X0
	052 Move X0, [X19+120]
	053 Move X20, [X31+16]
	054 Move X19, [X31+24]
	055 Move X30, [X31+32]
	056 Move X21, [X31+40]
	057 Return X0

Method: System.Void .ctor()

Disassembly:
	0x03A3E560 MOV X0, X19
	0x03A3E564 BL 0x3C32E90
	0x03A3E568 CBZ X0, 0x3A3E628
	0x03A3E56C MOV X1, X31
	0x03A3E570 BL 0x3C3F58C
	0x03A3E574 MOV X0, X31
	0x03A3E578 BL 0x3887BE4
	0x03A3E57C LDR X8, [X20 + 0x108]
	0x03A3E580 MOVZ W9, 0xC
	0x03A3E584 MOV X0, X19
	0x03A3E588 MOV X1, X31
	0x03A3E58C MADD X8, X23, X9, X8
	0x03A3E590 STP S0, S1, [X8]
	0x03A3E594 STR S2, [X8 + 0x8]
	0x03A3E598 BL 0x3C32E90
	0x03A3E59C CBZ X0, 0x3A3E628
	0x03A3E5A0 MOV X1, X31
	0x03A3E5A4 BL 0x3C3DEB4
	0x03A3E5A8 MOV X0, X31
	0x03A3E5AC BL 0x38BD218
	0x03A3E5B0 LDR X8, [X20 + 0x118]
	0x03A3E5B4 MOV X0, X19
	0x03A3E5B8 MOV X1, X31
	0x03A3E5BC ADD X8, X8, X23, 0x4, LSL
	0x03A3E5C0 STP S0, S1, [X8]
	0x03A3E5C4 STP S2, S3, [X8 + 0x8]
	0x03A3E5C8 BL 0x3C32E90
	0x03A3E5CC CBZ X0, 0x3A3E628
	0x03A3E5D0 MOV X1, X31
	0x03A3E5D4 BL 0x3C40EA8
	0x03A3E5D8 MOV X0, X31
	0x03A3E5DC BL 0x3887BE4
	0x03A3E5E0 LDR X8, [X20 + 0x128]
	0x03A3E5E4 MOVZ W9, 0xC
	0x03A3E5E8 MADD X8, X23, X9, X8
	0x03A3E5EC STP S0, S1, [X8]
	0x03A3E5F0 STR S2, [X8 + 0x8]
	0x03A3E5F4 LDR X8, [X20 + 0x138]
	0x03A3E5F8 MOVZ W9, 0x1
	0x03A3E5FC STRB W9, [X8, X23, LSL]
	0x03A3E600 ADD X31, X31, 0x180
	0x03A3E604 LDP X20, X19, [X31 + 0x70]
	0x03A3E608 LDP X22, X21, [X31 + 0x60]
	0x03A3E60C LDP X30, X23, [X31 + 0x50]
	0x03A3E610 LDR X29, [X31 + 0x40]
	0x03A3E614 LDP D9, D8, [X31 + 0x30]
	0x03A3E618 LDP D11, D10, [X31 + 0x20]
	0x03A3E61C LDP D13, D12, [X31 + 0x10]
	0x03A3E620 LDP D15, D14, [X31], #0x80
	0x03A3E624 RET
	0x03A3E628 BL 0x1C16F20
	0x03A3E62C MOV X1, X31
	0x03A3E630 B 0x33BDD8C
	0x03A3E634 MOV X1, X31
	0x03A3E638 B 0x33BDD8C
	0x03A3E63C SUB X31, X31, 0x90
	0x03A3E640 STR X30, [X31 + 0x40]
	0x03A3E644 STP X26, X25, [X31 + 0x50]
	0x03A3E648 STP X24, X23, [X31 + 0x60]
	0x03A3E64C STP X22, X21, [X31 + 0x70]
	0x03A3E650 STP X20, X19, [X31 + 0x80]
	0x03A3E654 ADRP X20, 0x9A4000
	0x03A3E658 LDRB W8, [X20 + 0x152]
	0x03A3E65C MOV X19, X0
	0x03A3E660 TBNZ X8, 0x0, 0x3A3E6A8
	0x03A3E664 ADRP X0, 0x717000
	0x03A3E668 LDR X0, [X0 + 0x978]
	0x03A3E66C BL 0x1C16CF4
	0x03A3E670 ADRP X0, 0x717000
	0x03A3E674 LDR X0, [X0 + 0x980]
	0x03A3E678 BL 0x1C16CF4
	0x03A3E67C ADRP X0, 0x717000
	0x03A3E680 LDR X0, [X0 + 0x988]
	0x03A3E684 BL 0x1C16CF4
	0x03A3E688 ADRP X0, 0x717000
	0x03A3E68C LDR X0, [X0 + 0x990]
	0x03A3E690 BL 0x1C16CF4
	0x03A3E694 ADRP X0, 0x6B5000
	0x03A3E698 LDR X0, [X0 + 0x598]
	0x03A3E69C BL 0x1C16CF4
	0x03A3E6A0 MOVZ W8, 0x1
	0x03A3E6A4 STRB W8, [X20 + 0x152]
	0x03A3E6A8 STP X31, X31, [X31 + 0x20]
	0x03A3E6AC STR X31, [X31 + 0x30]
	0x03A3E6B0 LDR X0, [X19 + 0x10]
	0x03A3E6B4 CBZ X0, 0x3A3E7D4
	0x03A3E6B8 ADRP X8, 0x717000
	0x03A3E6BC LDR X8, [X8 + 0x990]
	0x03A3E6C0 ADRP X23, 0x717000
	0x03A3E6C4 ADRP X24, 0x6B5000
	0x03A3E6C8 ADRP X22, 0x717000
	0x03A3E6CC LDR X1, [X8]
	0x03A3E6D0 LDR X23, [X23 + 0x980]
	0x03A3E6D4 LDR X24, [X24 + 0x598]
	0x03A3E6D8 LDR X22, [X22 + 0x978]
	0x03A3E6DC ADD X8, X31, 0x8
	0x03A3E6E0 BL 0x301CB58
	0x03A3E6E4 LDUR V0, [X31 + 0x8]
	0x03A3E6E8 LDR X8, [X31 + 0x18]
	0x03A3E6EC STR V0, [X31 + 0x2]
	0x03A3E6F0 STR X8, [X31 + 0x30]
	0x03A3E6F4 LDR X1, [X23]
	0x03A3E6F8 ADD X0, X31, 0x20
	0x03A3E6FC BL 0x2BC4350
	0x03A3E700 TBZ X0, 0x0, 0x3A3E79C
	0x03A3E704 LDR X25, [X31 + 0x30]
	0x03A3E708 CBZ X25, 0x3A3E7D0
	0x03A3E70C LDR W8, [X25 + 0x10]
	0x03A3E710 CMP W8, 0x1
	0x03A3E714 B.LT 0x3A3E6F4
	0x03A3E718 MOV X26, X31
	0x03A3E71C LDR X8, [X25 + 0x40]
	0x03A3E720 CBZ X8, 0x3A3E7C4
	0x03A3E724 LDR W9, [X8 + 0x18]
	0x03A3E728 CMP X26, X9
	0x03A3E72C B.CS 0x3A3E7C8
	0x03A3E730 LDR X0, [X24]
	0x03A3E734 ADD X8, X8, X26, 0x3, LSL
	0x03A3E738 LDR X20, [X8 + 0x20]
	0x03A3E73C LDR W9, [X0 + 0xE0]
	0x03A3E740 CBNZ W9, 0x3A3E748
	0x03A3E744 BL 0x1C16DFC
	0x03A3E748 MOV X0, X20
	0x03A3E74C MOV X1, X31
	0x03A3E750 MOV X2, X31
	0x03A3E754 BL 0x3C3883C
	0x03A3E758 TBNZ X0, 0x0, 0x3A3E788
	0x03A3E75C LDR X0, [X19 + 0x50]
	0x03A3E760 CBZ X0, 0x3A3E7CC
	0x03A3E764 LDR X8, [X25 + 0x30]
	0x03A3E768 LDR X21, [X8, X26, LSL #3]
	0x03A3E76C MOV X1, X21
	0x03A3E770 BL 0x3A3CCD4
	0x03A3E774 TBZ X0, 0x0, 0x3A3E788
	0x03A3E778 MOV X0, X19
	0x03A3E77C MOV X1, X21
	0x03A3E780 MOV X2, X20
	0x03A3E784 BL 0x3A3E2C4
	0x03A3E788 LDRSW X8, [X25 + 0x10]
	0x03A3E78C ADD X26, X26, 0x1
	0x03A3E790 CMP X26, X8
	0x03A3E794 B.LT 0x3A3E71C
	0x03A3E798 B 0x3A3E6F4
	0x03A3E79C LDR X1, [X22]
	0x03A3E7A0 ADD X0, X31, 0x20
	0x03A3E7A4 BL 0x2BC434C
	0x03A3E7A8 LDP X20, X19, [X31 + 0x80]
	0x03A3E7AC LDP X22, X21, [X31 + 0x70]
	0x03A3E7B0 LDP X24, X23, [X31 + 0x60]
	0x03A3E7B4 LDP X26, X25, [X31 + 0x50]
	0x03A3E7B8 LDR X30, [X31 + 0x40]
	0x03A3E7BC ADD X31, X31, 0x90
	0x03A3E7C0 RET
	0x03A3E7C4 BL 0x1C16F20
	0x03A3E7C8 BL 0x1C16F28
	0x03A3E7CC BL 0x1C16F20
	0x03A3E7D0 BL 0x1C16F20
	0x03A3E7D4 BL 0x1C16F20
	0x03A3E7D8 B 0x3A3E7F8
	0x03A3E7DC B 0x3A3E7F8
	0x03A3E7E0 B 0x3A3E7F8
	0x03A3E7E4 B 0x3A3E7F8
	0x03A3E7E8 B 0x3A3E7F8
	0x03A3E7EC B 0x3A3E7F8
	0x03A3E7F0 B 0x3A3E7F8
	0x03A3E7F4 B 0x3A3E7F8
	0x03A3E7F8 MOV X19, X0
	0x03A3E7FC CMP W1, 0x1
	0x03A3E800 B.NE 0x3A3E82C
	0x03A3E804 MOV X0, X19
	0x03A3E808 BL 0x3EB1AD0
	0x03A3E80C LDR X20, [X0]
	0x03A3E810 BL 0x3EB1AE0
	0x03A3E814 LDR X1, [X22]
	0x03A3E818 ADD X0, X31, 0x20
	0x03A3E81C BL 0x2BC434C
	0x03A3E820 CBZ X20, 0x3A3E7A8
	0x03A3E824 MOV X0, X20
	0x03A3E828 BL 0x1C16F18
	0x03A3E82C MOV X20, X31
	0x03A3E830 B 0x3A3E838
	0x03A3E834 MOV X19, X0
	0x03A3E838 LDR X1, [X22]
	0x03A3E83C ADD X0, X31, 0x20
	0x03A3E840 BL 0x2BC434C

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X21, 0x9A5000
	014 Move X23, 0x718000
	015 Move X20, 0x718000
	016 Move X29, 0x718000
	017 Move X28, 0x718000
	018 Move X27, 0x718000
	019 Move X26, 0x718000
	020 Move X25, 0x718000
	021 Move X24, 0x718000
	022 Move X22, 0x713000
	023 Move X23, [X23+2208]
	024 Move X20, [X20+2216]
	025 Move X29, [X29+2224]
	026 Move X28, [X28+2232]
	027 Move X27, [X27+2240]
	028 Move X26, [X26+2248]
	029 Move X25, [X25+2256]
	030 Move X24, [X24+2264]
	031 Move W8, [X21+335]
	032 Move X22, [X22+1432]
	033 Move X19, X0
	034 Move TEMP, X8
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfEqual {97}
	038 Move X0, 0x718000
	039 Move X0, [X0+2272]
	040 Call 0x1C17CF4
	041 Move X0, 0x718000
	042 Move X0, [X0+2280]
	043 Call 0x1C17CF4
	044 Move X0, 0x718000
	045 Move X0, [X0+2288]
	046 Call 0x1C17CF4
	047 Move X0, 0x6BA000
	048 Move X0, [X0+2928]
	049 Call 0x1C17CF4
	050 Move X0, 0x718000
	051 Move X0, [X0+2216]
	052 Call 0x1C17CF4
	053 Move X0, 0x718000
	054 Move X0, [X0+2296]
	055 Call 0x1C17CF4
	056 Move X0, 0x718000
	057 Move X0, [X0+2248]
	058 Call 0x1C17CF4
	059 Move X0, 0x718000
	060 Move X0, [X0+2264]
	061 Call 0x1C17CF4
	062 Move X0, 0x718000
	063 Move X0, [X0+2232]
	064 Call 0x1C17CF4
	065 Move X0, 0x6B7000
	066 Move X0, [X0+3632]
	067 Call 0x1C17CF4
	068 Move X0, 0x718000
	069 Move X0, [X0+2224]
	070 Call 0x1C17CF4
	071 Move X0, 0x718000
	072 Move X0, [X0+2240]
	073 Call 0x1C17CF4
	074 Move X0, 0x718000
	075 Move X0, [X0+2208]
	076 Call 0x1C17CF4
	077 Move X0, 0x718000
	078 Move X0, [X0+2304]
	079 Call 0x1C17CF4
	080 Move X0, 0x718000
	081 Move X0, [X0+2256]
	082 Call 0x1C17CF4
	083 Move X0, 0x713000
	084 Move X0, [X0+1432]
	085 Call 0x1C17CF4
	086 Move X0, 0x718000
	087 Move X0, [X0+2312]
	088 Call 0x1C17CF4
	089 Move X0, 0x718000
	090 Move X0, [X0+2320]
	091 Call 0x1C17CF4
	092 Move X0, 0x718000
	093 Move X0, [X0+2328]
	094 Call 0x1C17CF4
	095 Move W8, 1
	096 Move [X21+335], W8
	097 Move X0, [X23]
	098 Call 0x1C17F10
	099 Move X1, [X20]
	100 Move X20, X0
	101 Call List`1<Object>..ctor, X0
	102 Move [X19+16], X20
	103 Move X0, [X29]
	104 Call 0x1C17F10
	105 Move X1, [X28]
	106 Move X20, X0
	107 Call List`1<Object>..ctor, X0
	108 Move [X19+24], X20
	109 Move X0, [X27]
	110 Call 0x1C17F10
	111 Move X1, [X26]
	112 Move X20, X0
	113 Call List`1<Object>..ctor, X0
	114 Move [X19+32], X20
	115 Move X0, [X25]
	116 Call 0x1C17F10
	117 Move X1, [X24]
	118 Move X20, X0
	119 Call List`1<Object>..ctor, X0
	120 Move [X19+40], X20
	121 Move X8, 0x718000
	122 Move X8, [X8+2272]
	123 Move X0, [X8]
	124 Call 0x1C17F10
	125 Move X20, X0
	126 Call DecalEntityIndexer..ctor, X0
	127 Move [X19+80], X20
	128 Move X8, 0x718000
	129 Move X8, [X8+2288]
	130 Move X0, [X8]
	131 Call 0x1C17F10
	132 Move X8, 0x718000
	133 Move X8, [X8+2280]
	134 Move X20, X0
	135 Move X1, [X8]
	136 Call Dictionary`2<Object, Int32>..ctor, X0
	137 Move [X19+88], X20
	138 Move X8, 0x718000
	139 Move X8, [X8+2304]
	140 Move X0, [X8]
	141 Call 0x1C17F10
	142 Move X8, 0x718000
	143 Move X8, [X8+2296]
	144 Move X20, X0
	145 Move X1, [X8]
	146 Call List`1<CombinedChunks>..ctor, X0
	147 Move [X19+96], X20
	148 Move X8, 0x6B7000
	149 Move X8, [X8+3632]
	150 Move X0, [X8]
	151 Call 0x1C17F10
	152 Move X8, 0x6BA000
	153 Move X8, [X8+2928]
	154 Move X20, X0
	155 Move X1, [X8]
	156 Call List`1<Int32>..ctor, X0
	157 Move X0, X19
	158 Move X1, X31
	159 Move [X19+104], X20
	160 Call Object..ctor, X0
	161 Move X0, [X22]
	162 Call 0x1C17F10
	163 Move X8, 0x718000
	164 Move X8, [X8+2312]
	165 Move X2, X31
	166 Move X20, X0
	167 Move X1, [X8]
	168 Call ProfilingSampler..ctor, X0, X1
	169 Move [X19+56], X20
	170 Move X0, [X22]
	171 Call 0x1C17F10
	172 Move X8, 0x718000
	173 Move X8, [X8+2328]
	174 Move X2, X31
	175 Move X20, X0
	176 Move X1, [X8]
	177 Call ProfilingSampler..ctor, X0, X1
	178 Move [X19+64], X20
	179 Move X0, [X22]
	180 Call 0x1C17F10
	181 Move X8, 0x718000
	182 Move X8, [X8+2320]
	183 Move X2, X31
	184 Move X20, X0
	185 Move X1, [X8]
	186 Call ProfilingSampler..ctor, X0, X1
	187 Move [X19+72], X20
	188 Move X20, [X31+80]
	189 Move X19, [X31+88]
	190 Move X22, [X31+64]
	191 Move X21, [X31+72]
	192 Move X24, [X31+48]
	193 Move X23, [X31+56]
	194 Move X26, [X31+32]
	195 Move X25, [X31+40]
	196 Move X28, [X31+16]
	197 Move X27, [X31+24]
	198 Move X29, [X31+96]
	199 Move X30, [X31+104]
	200 Return 

Method: System.Boolean IsValid(UnityEngine.Rendering.Universal.DecalEntity decalEntity)

Disassembly:
	0x03A3E844 CBNZ X20, 0x3A3E850
	0x03A3E848 MOV X0, X19
	0x03A3E84C BL 0x1D2C690
	0x03A3E850 MOV X0, X20
	0x03A3E854 BL 0x1C16F18
	0x03A3E858 BL 0x1990590

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+80]
	003 Compare X0, 0
	004 JumpIfEqual {8}
	005 Move X30, [X31+16]
	006 Call DecalEntityIndexer.IsValid, X0, X1
	007 Return X0
	008 Call 0x1C17F20

Method: UnityEngine.Rendering.Universal.DecalEntity CreateDecalEntity(UnityEngine.Rendering.Universal.DecalProjector decalProjector)

Disassembly:
	0x03A3E85C STR X30, [X31 - 0x40]!
	0x03A3E860 STP X24, X23, [X31 + 0x10]
	0x03A3E864 STP X22, X21, [X31 + 0x20]
	0x03A3E868 STP X20, X19, [X31 + 0x30]
	0x03A3E86C ADRP X21, 0x9A4000
	0x03A3E870 LDRB W8, [X21 + 0x154]
	0x03A3E874 MOV X20, X1
	0x03A3E878 MOV X19, X0
	0x03A3E87C TBNZ X8, 0x0, 0x3A3E8B8
	0x03A3E880 ADRP X0, 0x717000
	0x03A3E884 LDR X0, [X0 + 0x7D0]
	0x03A3E888 BL 0x1C16CF4
	0x03A3E88C ADRP X0, 0x717000
	0x03A3E890 LDR X0, [X0 + 0x7D8]
	0x03A3E894 BL 0x1C16CF4
	0x03A3E898 ADRP X0, 0x717000
	0x03A3E89C LDR X0, [X0 + 0x7E0]
	0x03A3E8A0 BL 0x1C16CF4
	0x03A3E8A4 ADRP X0, 0x717000
	0x03A3E8A8 LDR X0, [X0 + 0x7F0]
	0x03A3E8AC BL 0x1C16CF4
	0x03A3E8B0 MOVZ W8, 0x1
	0x03A3E8B4 STRB W8, [X21 + 0x154]
	0x03A3E8B8 LDR X0, [X19 + 0x50]
	0x03A3E8BC CBZ X0, 0x3A3EA30
	0x03A3E8C0 MOV X1, X20
	0x03A3E8C4 BL 0x3A3CCD4
	0x03A3E8C8 TBZ X0, 0x0, 0x3A3EA1C
	0x03A3E8CC LDR X0, [X19 + 0x50]
	0x03A3E8D0 CBZ X0, 0x3A3EA30
	0x03A3E8D4 MOV X1, X20
	0x03A3E8D8 BL 0x3A3CF90
	0x03A3E8DC LDR X8, [X19 + 0x50]
	0x03A3E8E0 CBZ X8, 0x3A3EA30
	0x03A3E8E4 MOV X21, X0
	0x03A3E8E8 MOV X0, X8
	0x03A3E8EC MOV X1, X20
	0x03A3E8F0 BL 0x3A3CEE0
	0x03A3E8F4 LDR X0, [X19 + 0x10]
	0x03A3E8F8 CBZ X0, 0x3A3EA30
	0x03A3E8FC ADRP X8, 0x717000
	0x03A3E900 LDR X8, [X8 + 0x7F0]
	0x03A3E904 MOV W1, W21
	0x03A3E908 LDR X2, [X8]
	0x03A3E90C BL 0x301BCCC
	0x03A3E910 LDR X8, [X19 + 0x18]
	0x03A3E914 CBZ X8, 0x3A3EA30
	0x03A3E918 ADRP X9, 0x717000
	0x03A3E91C LDR X9, [X9 + 0x7E0]
	0x03A3E920 MOV X20, X0
	0x03A3E924 MOV X0, X8
	0x03A3E928 MOV W1, W21
	0x03A3E92C LDR X2, [X9]
	0x03A3E930 BL 0x301BCCC
	0x03A3E934 LDR X8, [X19 + 0x20]
	0x03A3E938 CBZ X8, 0x3A3EA30
	0x03A3E93C ADRP X9, 0x717000
	0x03A3E940 LDR X9, [X9 + 0x7D0]
	0x03A3E944 MOV X22, X0
	0x03A3E948 MOV X0, X8
	0x03A3E94C MOV W1, W21
	0x03A3E950 LDR X2, [X9]
	0x03A3E954 BL 0x301BCCC
	0x03A3E958 LDR X8, [X19 + 0x28]
	0x03A3E95C CBZ X8, 0x3A3EA30
	0x03A3E960 ADRP X9, 0x717000
	0x03A3E964 LDR X9, [X9 + 0x7D8]
	0x03A3E968 MOV X23, X0
	0x03A3E96C MOV X0, X8
	0x03A3E970 MOV W1, W21
	0x03A3E974 LDR X2, [X9]
	0x03A3E978 BL 0x301BCCC
	0x03A3E97C CBZ X20, 0x3A3EA30
	0x03A3E980 LDR W8, [X20 + 0x10]
	0x03A3E984 UBFM X21, X21, 0x20, 0x3F
	0x03A3E988 MOV X24, X0
	0x03A3E98C SUB W8, W8, 0x1
	0x03A3E990 CMP W8, W21
	0x03A3E994 B.EQ 0x3A3E9B0
	0x03A3E998 LDR X0, [X19 + 0x50]
	0x03A3E99C CBZ X0, 0x3A3EA30
	0x03A3E9A0 LDR X9, [X20 + 0x30]
	0x03A3E9A4 MOV W2, W21
	0x03A3E9A8 LDR X1, [X9, W8, SXTW]
	0x03A3E9AC BL 0x3A3CFF0
	0x03A3E9B0 LDR X8, [X20]
	0x03A3E9B4 MOV X0, X20
	0x03A3E9B8 MOV W1, W21
	0x03A3E9BC LDP X9, X2, [X8 + 0x198]
	0x03A3E9C0 BLR X9
	0x03A3E9C4 CBZ X22, 0x3A3EA30
	0x03A3E9C8 LDR X8, [X22]
	0x03A3E9CC MOV X0, X22
	0x03A3E9D0 MOV W1, W21
	0x03A3E9D4 LDP X9, X2, [X8 + 0x198]
	0x03A3E9D8 BLR X9
	0x03A3E9DC CBZ X23, 0x3A3EA30
	0x03A3E9E0 LDR X8, [X23]
	0x03A3E9E4 MOV X0, X23
	0x03A3E9E8 MOV W1, W21
	0x03A3E9EC LDP X9, X2, [X8 + 0x198]
	0x03A3E9F0 BLR X9
	0x03A3E9F4 CBZ X24, 0x3A3EA30
	0x03A3E9F8 LDR X8, [X24]
	0x03A3E9FC MOV X0, X24
	0x03A3EA00 MOV W1, W21
	0x03A3EA04 LDP X20, X19, [X31 + 0x30]
	0x03A3EA08 LDP X3, X2, [X8 + 0x198]
	0x03A3EA0C LDP X22, X21, [X31 + 0x20]
	0x03A3EA10 LDP X24, X23, [X31 + 0x10]
	0x03A3EA14 LDR X30, [X31], #0x40
	0x03A3EA18 BR X3
	0x03A3EA1C LDP X20, X19, [X31 + 0x30]
	0x03A3EA20 LDP X22, X21, [X31 + 0x20]
	0x03A3EA24 LDP X24, X23, [X31 + 0x10]
	0x03A3EA28 LDR X30, [X31], #0x40
	0x03A3EA2C RET
	0x03A3EA30 BL 0x1C16F20
	0x03A3EA34 SUB X31, X31, 0xC0
	0x03A3EA38 STP X29, X30, [X31 + 0x60]
	0x03A3EA3C STP X28, X27, [X31 + 0x70]
	0x03A3EA40 STP X26, X25, [X31 + 0x80]
	0x03A3EA44 STP X24, X23, [X31 + 0x90]
	0x03A3EA48 STP X22, X21, [X31 + 0xA0]
	0x03A3EA4C STP X20, X19, [X31 + 0xB0]
	0x03A3EA50 ADRP X20, 0x9A4000
	0x03A3EA54 LDRB W8, [X20 + 0x155]
	0x03A3EA58 MOV X19, X0
	0x03A3EA5C TBNZ X8, 0x0, 0x3A3EB88
	0x03A3EA60 ADRP X0, 0x717000
	0x03A3EA64 LDR X0, [X0 + 0x998]
	0x03A3EA68 BL 0x1C16CF4
	0x03A3EA6C ADRP X0, 0x717000
	0x03A3EA70 LDR X0, [X0 + 0x940]
	0x03A3EA74 BL 0x1C16CF4
	0x03A3EA78 ADRP X0, 0x717000
	0x03A3EA7C LDR X0, [X0 + 0x9A0]
	0x03A3EA80 BL 0x1C16CF4
	0x03A3EA84 ADRP X0, 0x717000
	0x03A3EA88 LDR X0, [X0 + 0x9A8]
	0x03A3EA8C BL 0x1C16CF4
	0x03A3EA90 ADRP X0, 0x717000
	0x03A3EA94 LDR X0, [X0 + 0x9B0]
	0x03A3EA98 BL 0x1C16CF4
	0x03A3EA9C ADRP X0, 0x717000
	0x03A3EAA0 LDR X0, [X0 + 0x9B8]
	0x03A3EAA4 BL 0x1C16CF4
	0x03A3EAA8 ADRP X0, 0x717000
	0x03A3EAAC LDR X0, [X0 + 0x9C0]
	0x03A3EAB0 BL 0x1C16CF4
	0x03A3EAB4 ADRP X0, 0x717000
	0x03A3EAB8 LDR X0, [X0 + 0x9C8]
	0x03A3EABC BL 0x1C16CF4
	0x03A3EAC0 ADRP X0, 0x717000
	0x03A3EAC4 LDR X0, [X0 + 0x9D0]
	0x03A3EAC8 BL 0x1C16CF4
	0x03A3EACC ADRP X0, 0x717000
	0x03A3EAD0 LDR X0, [X0 + 0x9D8]
	0x03A3EAD4 BL 0x1C16CF4
	0x03A3EAD8 ADRP X0, 0x717000
	0x03A3EADC LDR X0, [X0 + 0x7D0]
	0x03A3EAE0 BL 0x1C16CF4
	0x03A3EAE4 ADRP X0, 0x717000
	0x03A3EAE8 LDR X0, [X0 + 0x7D8]
	0x03A3EAEC BL 0x1C16CF4
	0x03A3EAF0 ADRP X0, 0x717000
	0x03A3EAF4 LDR X0, [X0 + 0x9E0]
	0x03A3EAF8 BL 0x1C16CF4
	0x03A3EAFC ADRP X0, 0x717000
	0x03A3EB00 LDR X0, [X0 + 0x7E0]
	0x03A3EB04 BL 0x1C16CF4
	0x03A3EB08 ADRP X0, 0x717000
	0x03A3EB0C LDR X0, [X0 + 0x7F0]
	0x03A3EB10 BL 0x1C16CF4
	0x03A3EB14 ADRP X0, 0x717000
	0x03A3EB18 LDR X0, [X0 + 0x9E8]
	0x03A3EB1C BL 0x1C16CF4
	0x03A3EB20 ADRP X0, 0x717000
	0x03A3EB24 LDR X0, [X0 + 0x9F0]
	0x03A3EB28 BL 0x1C16CF4
	0x03A3EB2C ADRP X0, 0x717000
	0x03A3EB30 LDR X0, [X0 + 0x9F8]
	0x03A3EB34 BL 0x1C16CF4
	0x03A3EB38 ADRP X0, 0x717000
	0x03A3EB3C LDR X0, [X0 + 0xA00]
	0x03A3EB40 BL 0x1C16CF4
	0x03A3EB44 ADRP X0, 0x712000
	0x03A3EB48 LDR X0, [X0 + 0x280]
	0x03A3EB4C BL 0x1C16CF4
	0x03A3EB50 ADRP X0, 0x717000
	0x03A3EB54 LDR X0, [X0 + 0xA08]
	0x03A3EB58 BL 0x1C16CF4
	0x03A3EB5C ADRP X0, 0x6B5000
	0x03A3EB60 LDR X0, [X0 + 0x598]
	0x03A3EB64 BL 0x1C16CF4
	0x03A3EB68 ADRP X0, 0x717000
	0x03A3EB6C LDR X0, [X0 + 0xA10]
	0x03A3EB70 BL 0x1C16CF4
	0x03A3EB74 ADRP X0, 0x717000
	0x03A3EB78 LDR X0, [X0 + 0xA18]
	0x03A3EB7C BL 0x1C16CF4
	0x03A3EB80 MOVZ W8, 0x1
	0x03A3EB84 STRB W8, [X20 + 0x155]
	0x03A3EB88 STRB W31, [X31 + 0x30]
	0x03A3EB8C STRB W31, [X31 + 0x2E]
	0x03A3EB90 STRH W31, [X31 + 0x2C]
	0x03A3EB94 STP X31, X31, [X31 + 0x10]
	0x03A3EB98 LDR X2, [X19 + 0x48]
	0x03A3EB9C ADD X0, X31, 0x30
	0x03A3EBA0 MOV X1, X31
	0x03A3EBA4 MOV X3, X31
	0x03A3EBA8 BL 0x39B1DB0
	0x03A3EBAC LDR W8, [X19 + 0x30]
	0x03A3EBB0 CMP W8, 0x0
	0x03A3EBB4 B.LE 0x3A3ED88
	0x03A3EBB8 ADRP X22, 0x6B5000
	0x03A3EBBC LDR X22, [X22 + 0x598]
	0x03A3EBC0 MOV W20, W31
	0x03A3EBC4 LDR X0, [X19 + 0x10]
	0x03A3EBC8 CBZ X0, 0x3A3F1E0
	0x03A3EBCC ADRP X8, 0x717000
	0x03A3EBD0 LDR X8, [X8 + 0x7F0]
	0x03A3EBD4 LDR X2, [X8]
	0x03A3EBD8 MOV W1, W20
	0x03A3EBDC BL 0x301BCCC
	0x03A3EBE0 CBZ X0, 0x3A3F1E4
	0x03A3EBE4 LDR X8, [X22]
	0x03A3EBE8 LDR X21, [X0 + 0x28]
	0x03A3EBEC LDR W9, [X8 + 0xE0]
	0x03A3EBF0 CBNZ W9, 0x3A3EBFC
	0x03A3EBF4 MOV X0, X8
	0x03A3EBF8 BL 0x1C16DFC
	0x03A3EBFC MOV X0, X21
	0x03A3EC00 MOV X1, X31
	0x03A3EC04 MOV X2, X31
	0x03A3EC08 BL 0x3C3883C
	0x03A3EC0C TBZ X0, 0x0, 0x3A3EC40
	0x03A3EC10 LDR X0, [X19 + 0x10]
	0x03A3EC14 CBZ X0, 0x3A3F204
	0x03A3EC18 ADRP X8, 0x717000
	0x03A3EC1C LDR X8, [X8 + 0x7F0]
	0x03A3EC20 LDR X2, [X8]
	0x03A3EC24 MOV W1, W20
	0x03A3EC28 BL 0x301BCCC
	0x03A3EC2C MOV X21, X0
	0x03A3EC30 MOV X0, X19
	0x03A3EC34 BL 0x3A3D494
	0x03A3EC38 CBZ X21, 0x3A3F208
	0x03A3EC3C STR X0, [X21 + 0x28]
	0x03A3EC40 LDR W8, [X19 + 0x30]
	0x03A3EC44 ADD W20, W20, 0x1
	0x03A3EC48 CMP W20, W8
	0x03A3EC4C B.LT 0x3A3EBC4
	0x03A3EC50 MOV X28, X19
	0x03A3EC54 LDR X20, [X28 + 0x60]!
	0x03A3EC58 CMP W8, 0x1
	0x03A3EC5C B.LT 0x3A3ED90
	0x03A3EC60 ADRP X27, 0x717000
	0x03A3EC64 ADRP X29, 0x717000
	0x03A3EC68 LDR X27, [X27 + 0x7D8]
	0x03A3EC6C LDR X29, [X29 + 0xA08]
	0x03A3EC70 ADD X8, X31, 0x38
	0x03A3EC74 MOV W21, W31
	0x03A3EC78 ADD X26, X8, 0x25
	0x03A3EC7C STRB W31, [X31 + 0x2E]
	0x03A3EC80 STRH W31, [X31 + 0x2C]
	0x03A3EC84 LDR X0, [X19 + 0x10]
	0x03A3EC88 CBZ X0, 0x3A3F1F4
	0x03A3EC8C ADRP X8, 0x717000
	0x03A3EC90 LDR X8, [X8 + 0x7F0]
	0x03A3EC94 LDR X2, [X8]
	0x03A3EC98 MOV W1, W21
	0x03A3EC9C BL 0x301BCCC
	0x03A3ECA0 MOV X22, X0
	0x03A3ECA4 LDR X0, [X19 + 0x18]
	0x03A3ECA8 CBZ X0, 0x3A3F1F8
	0x03A3ECAC ADRP X8, 0x717000
	0x03A3ECB0 LDR X8, [X8 + 0x7E0]
	0x03A3ECB4 LDR X2, [X8]
	0x03A3ECB8 MOV W1, W21
	0x03A3ECBC BL 0x301BCCC
	0x03A3ECC0 MOV X23, X0
	0x03A3ECC4 LDR X0, [X19 + 0x20]
	0x03A3ECC8 CBZ X0, 0x3A3F1EC
	0x03A3ECCC ADRP X8, 0x717000
	0x03A3ECD0 LDR X8, [X8 + 0x7D0]
	0x03A3ECD4 LDR X2, [X8]
	0x03A3ECD8 MOV W1, W21
	0x03A3ECDC BL 0x301BCCC
	0x03A3ECE0 MOV X24, X0
	0x03A3ECE4 LDR X0, [X19 + 0x28]
	0x03A3ECE8 CBZ X0, 0x3A3F1F0
	0x03A3ECEC LDR X2, [X27]
	0x03A3ECF0 MOV W1, W21
	0x03A3ECF4 BL 0x301BCCC
	0x03A3ECF8 MOV X25, X0
	0x03A3ECFC LDR X0, [X19 + 0x10]
	0x03A3ED00 CBZ X0, 0x3A3F1E8
	0x03A3ED04 ADRP X8, 0x717000
	0x03A3ED08 LDR X8, [X8 + 0x7F0]
	0x03A3ED0C LDR X2, [X8]
	0x03A3ED10 MOV W1, W21
	0x03A3ED14 BL 0x301BCCC
	0x03A3ED18 CBZ X0, 0x3A3F1FC
	0x03A3ED1C LDRH W9, [X31 + 0x2C]
	0x03A3ED20 LDRB W10, [X31 + 0x2E]
	0x03A3ED24 LDR W8, [X0 + 0x10]
	0x03A3ED28 STRH W9, [X31 + 0xC]
	0x03A3ED2C STRB W10, [X31 + 0xE]
	0x03A3ED30 CBZ X20, 0x3A3F200
	0x03A3ED34 CMP W8, 0x0
	0x03A3ED38 LDRB W8, [X31 + 0xE]
	0x03A3ED3C LDRH W9, [X31 + 0xC]
	0x03A3ED40 LDR X3, [X29]
	0x03A3ED44 CSET W10, NE
	0x03A3ED48 STP X22, X23, [X31 + 0x38]
	0x03A3ED4C STP X24, X25, [X31 + 0x48]
	0x03A3ED50 STR W21, [X31 + 0x58]
	0x03A3ED54 STRB W10, [X31 + 0x5C]
	0x03A3ED58 STRB W8, [X26 + 0x2]
	0x03A3ED5C STRH W9, [X26]
	0x03A3ED60 ADD X2, X31, 0x38
	0x03A3ED64 MOV X0, X20
	0x03A3ED68 MOV W1, W21
	0x03A3ED6C BL 0x30F2B40
	0x03A3ED70 LDR W8, [X19 + 0x30]
	0x03A3ED74 LDR X20, [X19 + 0x60]
	0x03A3ED78 ADD W21, W21, 0x1
	0x03A3ED7C CMP W21, W8
	0x03A3ED80 B.LT 0x3A3EC7C
	0x03A3ED84 B 0x3A3ED90
	0x03A3ED88 MOV X28, X19
	0x03A3ED8C LDR X20, [X28 + 0x60]!
	0x03A3ED90 ADRP X23, 0x717000
	0x03A3ED94 LDR X23, [X23 + 0xA18]
	0x03A3ED98 LDR X8, [X23]
	0x03A3ED9C LDR W9, [X8 + 0xE0]
	0x03A3EDA0 CBNZ W9, 0x3A3EDB0
	0x03A3EDA4 MOV X0, X8
	0x03A3EDA8 BL 0x1C16DFC
	0x03A3EDAC LDR X8, [X23]
	0x03A3EDB0 LDR X9, [X8 + 0xB8]
	0x03A3EDB4 LDR X21, [X9 + 0x8]
	0x03A3EDB8 CBNZ X21, 0x3A3EE10
	0x03A3EDBC LDR W9, [X8 + 0xE0]
	0x03A3EDC0 CBNZ W9, 0x3A3EDD0
	0x03A3EDC4 MOV X0, X8
	0x03A3EDC8 BL 0x1C16DFC
	0x03A3EDCC LDR X8, [X23]
	0x03A3EDD0 ADRP X9, 0x717000
	0x03A3EDD4 LDR X8, [X8 + 0xB8]

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+32], X29
	003 Move [X31+40], X30
	004 Move [X31+48], X28
	005 Move [X31+56], X27
	006 Move [X31+64], X26
	007 Move [X31+72], X25
	008 Move [X31+80], X24
	009 Move [X31+88], X23
	010 Move [X31+96], X22
	011 Move [X31+104], X21
	012 Move [X31+112], X20
	013 Move [X31+120], X19
	014 Move X21, 0x9A5000
	015 Move W8, [X21+336]
	016 Move X19, X1
	017 Move X20, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {39}
	022 Move X0, 0x718000
	023 Move X0, [X0+2000]
	024 Call 0x1C17CF4
	025 Move X0, 0x718000
	026 Move X0, [X0+2008]
	027 Call 0x1C17CF4
	028 Move X0, 0x718000
	029 Move X0, [X0+2016]
	030 Call 0x1C17CF4
	031 Move X0, 0x718000
	032 Move X0, [X0+2032]
	033 Call 0x1C17CF4
	034 Move X0, 0x6B6000
	035 Move X0, [X0+1432]
	036 Call 0x1C17CF4
	037 Move W8, 1
	038 Move [X21+336], W8
	039 Move [X31+24], W31
	040 Move [X31+16], W31
	041 Compare X19, 0
	042 JumpIfEqual {290}
	043 Move X8, 0x6B6000
	044 Move X8, [X8+1432]
	045 Move X21, [X19+40]
	046 Move X0, [X8]
	047 Move W8, [X0+224]
	048 Compare W8, 0
	049 JumpIfNotEqual {51}
	050 Call 0x1C17DFC
	051 Move X0, X21
	052 Move X1, X31
	053 Move X2, X31
	054 Call Object.op_Equality, X0, X1
	055 Move TEMP, X0
	056 And TEMP, TEMP, 1
	057 Compare TEMP, 1
	058 JumpIfNotEqual {62}
	059 Move X0, X20
	060 Call DecalEntityManager.get_errorMaterial, X0
	061 Move X21, X0
	062 Move X2, [X20+56]
	063 Add X0, X31, 24
	064 Move X1, X31
	065 Move X3, X31
	066 Call ProfilingScope..ctor, X0, X1, X2
	067 Move X0, X20
	068 Move X1, X21
	069 Call DecalEntityManager.CreateChunkIndex, X0, X1
	070 Move W27, W0
	071 Move X0, [X20+16]
	072 Compare X0, 0
	073 JumpIfEqual {291}
	074 Move X28, 0x718000
	075 Move X28, [X28+2032]
	076 Move X2, [X28]
	077 Move W1, W27
	078 Call List`1<Object>.get_Item, X0, X1
	079 Compare X0, 0
	080 JumpIfEqual {292}
	081 Move X8, [X20+80]
	082 Compare X8, 0
	083 JumpIfEqual {293}
	084 NotImplemented "Instruction LDRSW not yet implemented."
	085 Move X0, X8
	086 Move W1, W22
	087 Move W2, W27
	088 Call DecalEntityIndexer.CreateDecalEntity, X0, X1, X2
	089 Move X21, X0
	090 Move X0, [X20+16]
	091 Compare X0, 0
	092 JumpIfEqual {294}
	093 Move X2, [X28]
	094 Move W1, W27
	095 Call List`1<Object>.get_Item, X0, X1
	096 Move X23, X0
	097 Move X0, [X20+24]
	098 Compare X0, 0
	099 JumpIfEqual {295}
	100 Move X8, 0x718000
	101 Move X8, [X8+2016]
	102 Move X2, [X8]
	103 Move W1, W27
	104 Call List`1<Object>.get_Item, X0, X1
	105 Move X24, X0
	106 Move X0, [X20+32]
	107 Compare X0, 0
	108 JumpIfEqual {296}
	109 Move X8, 0x718000
	110 Move X8, [X8+2000]
	111 Move X2, [X8]
	112 Move W1, W27
	113 Call List`1<Object>.get_Item, X0, X1
	114 Move X25, X0
	115 Move X0, [X20+40]
	116 Compare X0, 0
	117 JumpIfEqual {297}
	118 Move X8, 0x718000
	119 Move X8, [X8+2008]
	120 Move X2, [X8]
	121 Move W1, W27
	122 Call List`1<Object>.get_Item, X0, X1
	123 Move X26, X0
	124 Move X0, [X20+16]
	125 Compare X0, 0
	126 JumpIfEqual {298}
	127 Move X2, [X28]
	128 Move W1, W27
	129 Call List`1<Object>.get_Item, X0, X1
	130 Compare X0, 0
	131 JumpIfEqual {299}
	132 Move X8, [X20+16]
	133 Compare X8, 0
	134 JumpIfEqual {300}
	135 Move W29, [X0+20]
	136 Move X2, [X28]
	137 Move X0, X8
	138 Move W1, W27
	139 Call List`1<Object>.get_Item, X0, X1
	140 Compare X0, 0
	141 JumpIfEqual {301}
	142 Move W8, [X0+16]
	143 NotImplemented "Instruction CMP not yet implemented."
	144 Move X2, [X20+64]
	145 Move [X31+8], W31
	146 Add X0, X31, 8
	147 Move X1, X31
	148 Move X3, X31
	149 Call ProfilingScope..ctor, X0, X1, X2
	150 Move W8, [X31+8]
	151 Move [X31+16], W8
	152 Move X0, [X20+16]
	153 Compare X0, 0
	154 JumpIfEqual {311}
	155 Move X2, [X28]
	156 Move W1, W27
	157 Call List`1<Object>.get_Item, X0, X1
	158 Compare X0, 0
	159 JumpIfEqual {312}
	160 Move X8, [X20+16]
	161 Compare X8, 0
	162 JumpIfEqual {313}
	163 Move W29, [X0+20]
	164 Move X2, [X28]
	165 Move X0, X8
	166 Move W1, W27
	167 Call List`1<Object>.get_Item, X0, X1
	168 Compare X0, 0
	169 JumpIfEqual {314}
	170 Move W8, [X0+20]
	171 Move W9, 8
	172 Add W8, W8, W29
	173 NotImplemented "Instruction CMP not yet implemented."
	174 NotImplemented "Instruction CSEL not yet implemented."
	175 Compare X23, 0
	176 JumpIfEqual {315}
	177 Move X8, [X23]
	178 Move X9, [X8+424]
	179 Move X2, [X8+432]
	180 Move X0, X23
	181 Move W1, W27
	182 NotImplemented "Instruction BLR not yet implemented."
	183 Compare X24, 0
	184 JumpIfEqual {318}
	185 Move X8, [X24]
	186 Move X9, [X8+424]
	187 Move X2, [X8+432]
	188 Move X0, X24
	189 Move W1, W27
	190 NotImplemented "Instruction BLR not yet implemented."
	191 Compare X25, 0
	192 JumpIfEqual {319}
	193 Move X8, [X25]
	194 Move X9, [X8+424]
	195 Move X2, [X8+432]
	196 Move X0, X25
	197 Move W1, W27
	198 NotImplemented "Instruction BLR not yet implemented."
	199 Compare X26, 0
	200 JumpIfEqual {320}
	201 Move X8, [X26]
	202 Move X9, [X8+424]
	203 Move X2, [X8+432]
	204 Move X0, X26
	205 Move W1, W27
	206 NotImplemented "Instruction BLR not yet implemented."
	207 Move X27, X31
	208 Move W28, 3
	209 Add X0, X31, 16
	210 Move X1, X31
	211 Call ProfilingScope.Dispose, X0
	212 Compare X27, 0
	213 JumpIfNotEqual {316}
	214 NotImplemented "Instruction CMP not yet implemented."
	215 Compare W28, 0
	216 JumpIfNotEqual {289}
	217 Compare X23, 0
	218 JumpIfEqual {302}
	219 Move X8, [X23]
	220 Move X9, [X8+392]
	221 Move X1, [X8+400]
	222 Move X0, X23
	223 NotImplemented "Instruction BLR not yet implemented."
	224 Compare X24, 0
	225 JumpIfEqual {303}
	226 Move X8, [X24]
	227 Move X9, [X8+392]
	228 Move X1, [X8+400]
	229 Move X0, X24
	230 NotImplemented "Instruction BLR not yet implemented."
	231 Compare X25, 0
	232 JumpIfEqual {304}
	233 Move X8, [X25]
	234 Move X9, [X8+392]
	235 Move X1, [X8+400]
	236 Move X0, X25
	237 NotImplemented "Instruction BLR not yet implemented."
	238 Compare X26, 0
	239 JumpIfEqual {305}
	240 Move X8, [X26]
	241 Move X9, [X8+392]
	242 Move X1, [X8+400]
	243 Move X0, X26
	244 NotImplemented "Instruction BLR not yet implemented."
	245 Move X24, [X23+64]
	246 Compare X24, 0
	247 JumpIfEqual {306}
	248 Move X8, [X24]
	249 Move X1, [X8+64]
	250 Move X0, X19
	251 Call 0x1C17E00
	252 Compare X0, 0
	253 JumpIfEqual {307}
	254 Move W8, [X24+24]
	255 NotImplemented "Instruction CMP not yet implemented."
	256 Add X8, X24, X22
	257 Move [X8+32], X19
	258 Move X8, [X23+48]
	259 Move [X8], X21
	260 Move X0, X19
	261 Move X1, X31
	262 Call Component.get_transform, X0
	263 Move X1, X0
	264 Add X0, X23, 72
	265 Move X2, X31
	266 Call TransformAccessArray.Add, X0, X1
	267 Move X0, X20
	268 Move X1, X21
	269 Move X2, X19
	270 Call DecalEntityManager.UpdateDecalEntityData, X0, X1, X2
	271 Add X0, X31, 24
	272 Move X1, X31
	273 Call ProfilingScope.Dispose, X0
	274 Move X0, X21
	275 Move X20, [X31+112]
	276 Move X19, [X31+120]
	277 Move X22, [X31+96]
	278 Move X21, [X31+104]
	279 Move X24, [X31+80]
	280 Move X23, [X31+88]
	281 Move X26, [X31+64]
	282 Move X25, [X31+72]
	283 Move X28, [X31+48]
	284 Move X27, [X31+56]
	285 Move X29, [X31+32]
	286 Move X30, [X31+40]
	287 Add X31, X31, 128
	288 Return X0
	289 Move X21, X31
	290 Call 0x1C17F20
	291 Call 0x1C17F20
	292 Call 0x1C17F20
	293 Call 0x1C17F20
	294 Call 0x1C17F20
	295 Call 0x1C17F20
	296 Call 0x1C17F20
	297 Call 0x1C17F20
	298 Call 0x1C17F20
	299 Call 0x1C17F20
	300 Call 0x1C17F20
	301 Call 0x1C17F20
	302 Call 0x1C17F20
	303 Call 0x1C17F20
	304 Call 0x1C17F20
	305 Call 0x1C17F20
	306 Call 0x1C17F20
	307 Call 0x1C17F44
	308 Move X1, X31
	309 Call 0x1C17DEC
	310 Call 0x1C17F28
	311 Call 0x1C17F20
	312 Call 0x1C17F20
	313 Call 0x1C17F20
	314 Call 0x1C17F20
	315 Call 0x1C17F20
	316 Move X0, X27
	317 Call 0x1C17F18
	318 Call 0x1C17F20
	319 Call 0x1C17F20
	320 Call 0x1C17F20
	321 Move X27, X1
	322 Move X28, X0
	323 NotImplemented "Instruction CMP not yet implemented."
	324 Move X0, X28
	325 Call 0x3EB2AD0
	326 Move X8, [X0]
	327 Move [X31], X8
	328 Call 0x3EB2AE0
	329 Move X27, [X31]
	330 Move W28, W31
	331 Move [X31], X31
	332 Add X0, X31, 16
	333 Move X1, X31
	334 Call ProfilingScope.Dispose, X0
	335 Move X8, [X31]
	336 Compare X8, 0
	337 JumpIfEqual {344}
	338 Move X0, [X31]
	339 Call 0x1C17F18
	340 Move X27, X1
	341 Move X28, X0
	342 Move X27, X1
	343 Move X28, X0
	344 NotImplemented "Instruction CMP not yet implemented."
	345 Move X0, X28
	346 Call 0x3EB2AD0
	347 Move X19, [X0]
	348 Call 0x3EB2AE0
	349 Add X0, X31, 24
	350 Move X1, X31
	351 Call ProfilingScope.Dispose, X0
	352 Move X21, X31
	353 Compare X19, 0
	354 JumpIfEqual {274}
	355 Move X0, X19
	356 Call 0x1C17F18
	357 Move X19, X31
	358 Move X28, X0
	359 Add X0, X31, 24
	360 Move X1, X31
	361 Call ProfilingScope.Dispose, X0
	362 Compare X19, 0
	363 JumpIfNotEqual {366}
	364 Move X0, X28
	365 Call 0x1D2D690
	366 Move X0, X19
	367 Call 0x1C17F18
	368 Call 0x1991590

Method: System.Int32 CreateChunkIndex(UnityEngine.Material material)

Disassembly:
	0x03A3EDD8 LDR X9, [X9 + 0x998]
	0x03A3EDDC LDR X22, [X8]
	0x03A3EDE0 LDR X0, [X9]
	0x03A3EDE4 BL 0x1C16F10
	0x03A3EDE8 ADRP X8, 0x717000
	0x03A3EDEC LDR X8, [X8 + 0xA10]
	0x03A3EDF0 MOV X21, X0
	0x03A3EDF4 LDR X2, [X8]
	0x03A3EDF8 MOV X1, X22
	0x03A3EDFC MOV X3, X31
	0x03A3EE00 BL 0x295CC78
	0x03A3EE04 LDR X8, [X23]
	0x03A3EE08 LDR X8, [X8 + 0xB8]
	0x03A3EE0C STR X21, [X8 + 0x8]
	0x03A3EE10 CBZ X20, 0x3A3F258
	0x03A3EE14 ADRP X8, 0x717000
	0x03A3EE18 LDR X8, [X8 + 0x9D8]
	0x03A3EE1C LDR X2, [X8]
	0x03A3EE20 MOV X0, X20
	0x03A3EE24 MOV X1, X21
	0x03A3EE28 BL 0x30F51A0
	0x03A3EE2C LDR W8, [X19 + 0x30]
	0x03A3EE30 CMP W8, 0x1
	0x03A3EE34 B.LT 0x3A3F1B4
	0x03A3EE38 ADRP X29, 0x717000
	0x03A3EE3C LDR X29, [X29 + 0x9E0]
	0x03A3EE40 MOV W20, W31
	0x03A3EE44 LDR X0, [X28]
	0x03A3EE48 CBZ X0, 0x3A3F214
	0x03A3EE4C LDR X2, [X29]
	0x03A3EE50 ADD X8, X31, 0x38
	0x03A3EE54 MOV W1, W20
	0x03A3EE58 BL 0x30F2AD8
	0x03A3EE5C LDR W8, [X31 + 0x58]
	0x03A3EE60 CMP W20, W8
	0x03A3EE64 B.NE 0x3A3EE9C
	0x03A3EE68 LDR X0, [X28]
	0x03A3EE6C CBZ X0, 0x3A3F218
	0x03A3EE70 LDR X2, [X29]
	0x03A3EE74 ADD X8, X31, 0x38
	0x03A3EE78 MOV W1, W20
	0x03A3EE7C BL 0x30F2AD8
	0x03A3EE80 LDRB W8, [X31 + 0x5C]
	0x03A3EE84 TBZ X8, 0x0, 0x3A3EE9C
	0x03A3EE88 LDR W8, [X19 + 0x30]
	0x03A3EE8C ADD W20, W20, 0x1
	0x03A3EE90 CMP W20, W8
	0x03A3EE94 B.LT 0x3A3EE44
	0x03A3EE98 B 0x3A3F1B4
	0x03A3EE9C LDR X0, [X19 + 0x58]
	0x03A3EEA0 CBZ X0, 0x3A3F25C
	0x03A3EEA4 ADRP X8, 0x717000
	0x03A3EEA8 LDR X8, [X8 + 0x9A0]
	0x03A3EEAC LDR X1, [X8]
	0x03A3EEB0 BL 0x2A9F124
	0x03A3EEB4 LDR W8, [X19 + 0x30]
	0x03A3EEB8 CMP W8, 0x1
	0x03A3EEBC B.LT 0x3A3F1A4
	0x03A3EEC0 ADRP X27, 0x717000
	0x03A3EEC4 LDR X27, [X27 + 0x9F0]
	0x03A3EEC8 MOV W20, W31
	0x03A3EECC MOV W21, W31
	0x03A3EED0 LDR X0, [X28]
	0x03A3EED4 CBZ X0, 0x3A3F20C
	0x03A3EED8 LDR X2, [X29]
	0x03A3EEDC ADD X8, X31, 0x38
	0x03A3EEE0 MOV W1, W21
	0x03A3EEE4 BL 0x30F2AD8
	0x03A3EEE8 LDR X0, [X28]
	0x03A3EEEC CBZ X0, 0x3A3F210
	0x03A3EEF0 LDP X26, X25, [X31 + 0x38]
	0x03A3EEF4 LDP X24, X22, [X31 + 0x48]
	0x03A3EEF8 LDR W23, [X31 + 0x58]
	0x03A3EEFC LDR X2, [X29]
	0x03A3EF00 ADD X8, X31, 0x38
	0x03A3EF04 MOV W1, W21
	0x03A3EF08 BL 0x30F2AD8
	0x03A3EF0C LDRB W8, [X31 + 0x5C]
	0x03A3EF10 TBNZ X8, 0x0, 0x3A3EFB8
	0x03A3EF14 CBZ X26, 0x3A3F22C
	0x03A3EF18 LDUR V0, [X26 + 0x18]
	0x03A3EF1C STR V0, [X31 + 0x1]
	0x03A3EF20 ADD X0, X31, 0x10
	0x03A3EF24 MOV X1, X31
	0x03A3EF28 BL 0x3BFDCAC
	0x03A3EF2C CBZ X25, 0x3A3F234
	0x03A3EF30 LDUR V0, [X25 + 0x18]
	0x03A3EF34 STR V0, [X31 + 0x1]
	0x03A3EF38 ADD X0, X31, 0x10
	0x03A3EF3C MOV X1, X31
	0x03A3EF40 BL 0x3BFDCAC
	0x03A3EF44 CBZ X24, 0x3A3F238
	0x03A3EF48 LDUR V0, [X24 + 0x18]
	0x03A3EF4C STR V0, [X31 + 0x1]
	0x03A3EF50 ADD X0, X31, 0x10
	0x03A3EF54 MOV X1, X31
	0x03A3EF58 BL 0x3BFDCAC
	0x03A3EF5C CBZ X22, 0x3A3F230
	0x03A3EF60 LDUR V0, [X22 + 0x18]
	0x03A3EF64 STR V0, [X31 + 0x1]
	0x03A3EF68 ADD X0, X31, 0x10
	0x03A3EF6C MOV X1, X31
	0x03A3EF70 BL 0x3BFDCAC
	0x03A3EF74 LDR X8, [X26]
	0x03A3EF78 LDP X9, X1, [X8 + 0x1B8]
	0x03A3EF7C MOV X0, X26
	0x03A3EF80 BLR X9
	0x03A3EF84 LDR X8, [X25]
	0x03A3EF88 LDP X9, X1, [X8 + 0x1B8]
	0x03A3EF8C MOV X0, X25
	0x03A3EF90 BLR X9
	0x03A3EF94 LDR X8, [X24]
	0x03A3EF98 LDP X9, X1, [X8 + 0x1B8]
	0x03A3EF9C MOV X0, X24
	0x03A3EFA0 BLR X9
	0x03A3EFA4 LDR X8, [X22]
	0x03A3EFA8 LDP X9, X1, [X8 + 0x1B8]
	0x03A3EFAC MOV X0, X22
	0x03A3EFB0 BLR X9
	0x03A3EFB4 B 0x3A3F0DC
	0x03A3EFB8 LDR X0, [X19 + 0x10]
	0x03A3EFBC CBZ X0, 0x3A3F23C
	0x03A3EFC0 LDR X3, [X27]
	0x03A3EFC4 MOV W1, W21
	0x03A3EFC8 MOV X2, X26
	0x03A3EFCC BL 0x301BD20
	0x03A3EFD0 LDR X0, [X19 + 0x18]
	0x03A3EFD4 CBZ X0, 0x3A3F21C
	0x03A3EFD8 ADRP X8, 0x717000
	0x03A3EFDC LDR X8, [X8 + 0xA00]
	0x03A3EFE0 LDR X3, [X8]
	0x03A3EFE4 MOV W1, W21
	0x03A3EFE8 MOV X2, X25
	0x03A3EFEC BL 0x301BD20
	0x03A3EFF0 LDR X0, [X19 + 0x20]
	0x03A3EFF4 CBZ X0, 0x3A3F240
	0x03A3EFF8 ADRP X8, 0x717000
	0x03A3EFFC LDR X8, [X8 + 0x9F8]
	0x03A3F000 LDR X3, [X8]
	0x03A3F004 MOV W1, W21
	0x03A3F008 MOV X2, X24
	0x03A3F00C BL 0x301BD20
	0x03A3F010 LDR X0, [X19 + 0x28]
	0x03A3F014 CBZ X0, 0x3A3F220
	0x03A3F018 ADRP X8, 0x716000
	0x03A3F01C LDR X8, [X8 + 0x9E8]
	0x03A3F020 LDR X3, [X8]
	0x03A3F024 MOV W1, W21
	0x03A3F028 MOV X2, X22
	0x03A3F02C BL 0x301BD20
	0x03A3F030 LDR X0, [X19 + 0x10]
	0x03A3F034 CBZ X0, 0x3A3F244
	0x03A3F038 ADRP X8, 0x716000
	0x03A3F03C LDR X22, [X19 + 0x58]
	0x03A3F040 LDR X8, [X8 + 0x7F0]
	0x03A3F044 LDR X2, [X8]
	0x03A3F048 MOV W1, W21
	0x03A3F04C BL 0x301BCCC
	0x03A3F050 CBZ X0, 0x3A3F224
	0x03A3F054 CBZ X22, 0x3A3F248
	0x03A3F058 ADRP X8, 0x716000
	0x03A3F05C LDR X1, [X0 + 0x28]
	0x03A3F060 LDR X8, [X8 + 0x9A8]
	0x03A3F064 LDR X2, [X8]
	0x03A3F068 MOV X0, X22
	0x03A3F06C BL 0x2A9F190
	0x03A3F070 TBNZ X0, 0x0, 0x3A3F0B8
	0x03A3F074 LDR X0, [X19 + 0x10]
	0x03A3F078 CBZ X0, 0x3A3F254
	0x03A3F07C ADRP X8, 0x716000
	0x03A3F080 LDR X22, [X19 + 0x58]
	0x03A3F084 LDR X8, [X8 + 0x7F0]
	0x03A3F088 LDR X2, [X8]
	0x03A3F08C MOV W1, W21
	0x03A3F090 BL 0x301BCCC
	0x03A3F094 CBZ X0, 0x3A3F250
	0x03A3F098 CBZ X22, 0x3A3F24C
	0x03A3F09C ADRP X8, 0x716000
	0x03A3F0A0 LDR X1, [X0 + 0x28]
	0x03A3F0A4 LDR X8, [X8 + 0x940]
	0x03A3F0A8 LDR X3, [X8]
	0x03A3F0AC MOV X0, X22
	0x03A3F0B0 MOV W2, W21
	0x03A3F0B4 BL 0x2A9EF9C
	0x03A3F0B8 LDR X0, [X19 + 0x68]
	0x03A3F0BC CBZ X0, 0x3A3F228
	0x03A3F0C0 ADRP X8, 0x711000
	0x03A3F0C4 LDR X8, [X8 + 0x280]
	0x03A3F0C8 LDR X3, [X8]
	0x03A3F0CC MOV W1, W23
	0x03A3F0D0 MOV W2, W21
	0x03A3F0D4 BL 0x2FDC470
	0x03A3F0D8 ADD W20, W20, 0x1
	0x03A3F0DC LDR W8, [X19 + 0x30]
	0x03A3F0E0 ADD W21, W21, 0x1
	0x03A3F0E4 CMP W21, W8
	0x03A3F0E8 B.LT 0x3A3EED0
	0x03A3F0EC SUBS W2, W8, W20
	0x03A3F0F0 B.LE 0x3A3F1A4
	0x03A3F0F4 LDR X0, [X19 + 0x10]
	0x03A3F0F8 CBZ X0, 0x3A3F264
	0x03A3F0FC ADRP X8, 0x716000
	0x03A3F100 LDR X8, [X8 + 0x9D0]
	0x03A3F104 LDR X3, [X8]
	0x03A3F108 MOV W1, W20
	0x03A3F10C BL 0x301DAD8
	0x03A3F110 LDR X0, [X19 + 0x18]
	0x03A3F114 CBZ X0, 0x3A3F268
	0x03A3F118 ADRP X9, 0x716000
	0x03A3F11C LDR W8, [X19 + 0x30]
	0x03A3F120 LDR X9, [X9 + 0x9B0]
	0x03A3F124 SUB W2, W8, W20
	0x03A3F128 LDR X3, [X9]
	0x03A3F12C MOV W1, W20
	0x03A3F130 BL 0x301DAD8
	0x03A3F134 LDR X0, [X19 + 0x20]
	0x03A3F138 CBZ X0, 0x3A3F26C
	0x03A3F13C ADRP X9, 0x716000
	0x03A3F140 LDR W8, [X19 + 0x30]
	0x03A3F144 LDR X9, [X9 + 0x9B8]
	0x03A3F148 SUB W2, W8, W20
	0x03A3F14C LDR X3, [X9]
	0x03A3F150 MOV W1, W20
	0x03A3F154 BL 0x301DAD8
	0x03A3F158 LDR X0, [X19 + 0x28]
	0x03A3F15C CBZ X0, 0x3A3F270
	0x03A3F160 ADRP X9, 0x716000
	0x03A3F164 LDR W8, [X19 + 0x30]
	0x03A3F168 LDR X9, [X9 + 0x9C0]
	0x03A3F16C SUB W2, W8, W20
	0x03A3F170 LDR X3, [X9]
	0x03A3F174 MOV W1, W20
	0x03A3F178 BL 0x301DAD8
	0x03A3F17C LDR X0, [X28]
	0x03A3F180 CBZ X0, 0x3A3F274
	0x03A3F184 ADRP X9, 0x716000
	0x03A3F188 LDR W8, [X19 + 0x30]
	0x03A3F18C LDR X9, [X9 + 0x9C8]
	0x03A3F190 SUB W2, W8, W20
	0x03A3F194 LDR X3, [X9]
	0x03A3F198 MOV W1, W20
	0x03A3F19C BL 0x30F4F48
	0x03A3F1A0 STR W20, [X19 + 0x30]
	0x03A3F1A4 LDR X0, [X19 + 0x50]
	0x03A3F1A8 CBZ X0, 0x3A3F260
	0x03A3F1AC LDR X1, [X19 + 0x68]
	0x03A3F1B0 BL 0x3A3D08C
	0x03A3F1B4 ADD X0, X31, 0x30
	0x03A3F1B8 MOV X1, X31
	0x03A3F1BC BL 0x39B1DB4
	0x03A3F1C0 LDP X20, X19, [X31 + 0xB0]
	0x03A3F1C4 LDP X22, X21, [X31 + 0xA0]
	0x03A3F1C8 LDP X24, X23, [X31 + 0x90]
	0x03A3F1CC LDP X26, X25, [X31 + 0x80]
	0x03A3F1D0 LDP X28, X27, [X31 + 0x70]
	0x03A3F1D4 LDP X29, X30, [X31 + 0x60]
	0x03A3F1D8 ADD X31, X31, 0xC0
	0x03A3F1DC RET
	0x03A3F1E0 BL 0x1C16F20
	0x03A3F1E4 BL 0x1C16F20
	0x03A3F1E8 BL 0x1C16F20
	0x03A3F1EC BL 0x1C16F20
	0x03A3F1F0 BL 0x1C16F20
	0x03A3F1F4 BL 0x1C16F20
	0x03A3F1F8 BL 0x1C16F20
	0x03A3F1FC BL 0x1C16F20
	0x03A3F200 BL 0x1C16F20
	0x03A3F204 BL 0x1C16F20
	0x03A3F208 BL 0x1C16F20
	0x03A3F20C BL 0x1C16F20
	0x03A3F210 BL 0x1C16F20
	0x03A3F214 BL 0x1C16F20
	0x03A3F218 BL 0x1C16F20
	0x03A3F21C BL 0x1C16F20
	0x03A3F220 BL 0x1C16F20
	0x03A3F224 BL 0x1C16F20
	0x03A3F228 BL 0x1C16F20
	0x03A3F22C BL 0x1C16F20
	0x03A3F230 BL 0x1C16F20
	0x03A3F234 BL 0x1C16F20
	0x03A3F238 BL 0x1C16F20
	0x03A3F23C BL 0x1C16F20
	0x03A3F240 BL 0x1C16F20
	0x03A3F244 BL 0x1C16F20
	0x03A3F248 BL 0x1C16F20
	0x03A3F24C BL 0x1C16F20
	0x03A3F250 BL 0x1C16F20
	0x03A3F254 BL 0x1C16F20
	0x03A3F258 BL 0x1C16F20
	0x03A3F25C BL 0x1C16F20
	0x03A3F260 BL 0x1C16F20
	0x03A3F264 BL 0x1C16F20
	0x03A3F268 BL 0x1C16F20
	0x03A3F26C BL 0x1C16F20
	0x03A3F270 BL 0x1C16F20
	0x03A3F274 BL 0x1C16F20
	0x03A3F278 B 0x3A3F394
	0x03A3F27C B 0x3A3F394
	0x03A3F280 B 0x3A3F394
	0x03A3F284 B 0x3A3F394
	0x03A3F288 B 0x3A3F394
	0x03A3F28C B 0x3A3F394
	0x03A3F290 B 0x3A3F394
	0x03A3F294 B 0x3A3F394
	0x03A3F298 B 0x3A3F394
	0x03A3F29C B 0x3A3F394
	0x03A3F2A0 B 0x3A3F394
	0x03A3F2A4 B 0x3A3F394
	0x03A3F2A8 B 0x3A3F394
	0x03A3F2AC B 0x3A3F394
	0x03A3F2B0 B 0x3A3F394
	0x03A3F2B4 B 0x3A3F394
	0x03A3F2B8 B 0x3A3F394
	0x03A3F2BC B 0x3A3F394
	0x03A3F2C0 B 0x3A3F394

ISIL:
	001 Subtract X31, X31, 208
	002 Move [X31+160], X30
	003 Move [X31+168], X23
	004 Move [X31+176], X22
	005 Move [X31+184], X21
	006 Move [X31+192], X20
	007 Move [X31+200], X19
	008 Move X21, 0x9A5000
	009 Move W8, [X21+337]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {66}
	016 Move X0, 0x718000
	017 Move X0, [X0+2336]
	018 Call 0x1C17CF4
	019 Move X0, 0x718000
	020 Move X0, [X0+2344]
	021 Call 0x1C17CF4
	022 Move X0, 0x718000
	023 Move X0, [X0+2352]
	024 Call 0x1C17CF4
	025 Move X0, 0x718000
	026 Move X0, [X0+2360]
	027 Call 0x1C17CF4
	028 Move X0, 0x718000
	029 Move X0, [X0+2368]
	030 Call 0x1C17CF4
	031 Move X0, 0x718000
	032 Move X0, [X0+2376]
	033 Call 0x1C17CF4
	034 Move X0, 0x6B7000
	035 Move X0, [X0+3600]
	036 Call 0x1C17CF4
	037 Move X0, 0x718000
	038 Move X0, [X0+2384]
	039 Call 0x1C17CF4
	040 Move X0, 0x718000
	041 Move X0, [X0+2392]
	042 Call 0x1C17CF4
	043 Move X0, 0x718000
	044 Move X0, [X0+2400]
	045 Call 0x1C17CF4
	046 Move X0, 0x718000
	047 Move X0, [X0+2408]
	048 Call 0x1C17CF4
	049 Move X0, 0x718000
	050 Move X0, [X0+2416]
	051 Call 0x1C17CF4
	052 Move X0, 0x713000
	053 Move X0, [X0+1424]
	054 Call 0x1C17CF4
	055 Move X0, 0x6BA000
	056 Move X0, [X0+2440]
	057 Call 0x1C17CF4
	058 Move X0, 0x6E0000
	059 Move X0, [X0+312]
	060 Call 0x1C17CF4
	061 Move X0, 0x718000
	062 Move X0, [X0+2088]
	063 Call 0x1C17CF4
	064 Move W8, 1
	065 Move [X21+337], W8
	066 Move [X31+60], W31
	067 Move X0, [X19+88]
	068 Compare X0, 0
	069 JumpIfEqual {340}
	070 Move X8, 0x718000
	071 Move X8, [X8+2376]
	072 Add X2, X31, 60
	073 Move X1, X20
	074 Move X3, [X8]
	075 Call Dictionary`2<Object, Int32>.TryGetValue, X0, X1, X2
	076 Move TEMP, X0
	077 And TEMP, TEMP, 1
	078 Compare TEMP, 1
	079 JumpIfNotEqual {81}
	080 Move W0, [X31+60]
	081 Move X8, 0x713000
	082 Move X8, [X8+1424]
	083 Move X0, [X8]
	084 Call 0x1C17F10
	085 Move X1, X31
	086 Move X21, X0
	087 Call MaterialPropertyBlock..ctor, X0
	088 Move X8, 0x6BA000
	089 Move X8, [X8+2440]
	090 Move W1, 250
	091 Move X0, [X8]
	092 Call 0x1C17D6C
	093 Compare X21, 0
	094 JumpIfEqual {340}
	095 Move X8, 0x718000
	096 Move X8, [X8+2088]
	097 Move X2, X0
	098 Move X0, X21
	099 Move X3, X31
	100 Move X1, [X8]
	101 Call MaterialPropertyBlock.SetMatrixArray, X0, X1, X2
	102 Move X8, 0x718000
	103 Move X22, [X19+16]
	104 Move X8, [X8+2360]
	105 Move X0, [X8]
	106 Call 0x1C17F10
	107 Move X1, X31
	108 Move X23, X0
	109 Call Object..ctor, X0
	110 Compare X23, 0
	111 JumpIfEqual {340}
	112 Move [X23+40], X20
	113 Compare X22, 0
	114 JumpIfEqual {340}
	115 Move X9, 0x718000
	116 Move X9, [X9+2416]
	117 Move W10, [X22+28]
	118 Move X8, [X22+16]
	119 Move X9, [X9]
	120 Add W10, W10, 1
	121 Move [X22+28], W10
	122 Compare X8, 0
	123 JumpIfEqual {340}
	124 NotImplemented "Instruction LDRSW not yet implemented."
	125 Move W11, [X8+24]
	126 NotImplemented "Instruction CMP not yet implemented."
	127 Add W9, W10, 1
	128 Add X8, X8, X10
	129 Move [X22+24], W9
	130 Move [X8+32], X23
	131 Move X8, [X9+32]
	132 Move X0, X22
	133 Move X1, X23
	134 Move X8, [X8+192]
	135 Move X2, [X8+112]
	136 Call List`1<Object>.AddWithResize, X0, X1
	137 Move X8, 0x718000
	138 Move X22, [X19+24]
	139 Move X8, [X8+2336]
	140 Move X0, [X8]
	141 Call 0x1C17F10
	142 Move X1, X31
	143 Move X23, X0
	144 Call Object..ctor, X0
	145 Compare X23, 0
	146 JumpIfEqual {340}
	147 Move [X23+40], X21
	148 Compare X22, 0
	149 JumpIfEqual {340}
	150 Move X9, 0x718000
	151 Move X9, [X9+2400]
	152 Move W10, [X22+28]
	153 Move X8, [X22+16]
	154 Move X9, [X9]
	155 Add W10, W10, 1
	156 Move [X22+28], W10
	157 Compare X8, 0
	158 JumpIfEqual {340}
	159 NotImplemented "Instruction LDRSW not yet implemented."
	160 Move W11, [X8+24]
	161 NotImplemented "Instruction CMP not yet implemented."
	162 Add W9, W10, 1
	163 Add X8, X8, X10
	164 Move [X22+24], W9
	165 Move [X8+32], X23
	166 Move X8, [X9+32]
	167 Move X0, X22
	168 Move X1, X23
	169 Move X8, [X8+192]
	170 Move X2, [X8+112]
	171 Call List`1<Object>.AddWithResize, X0, X1
	172 Move X8, 0x717000
	173 Move X21, [X19+32]
	174 Move X8, [X8+2344]
	175 Move X0, [X8]
	176 Call 0x1C17F10
	177 Move X1, X31
	178 Move X22, X0
	179 Call Object..ctor, X0
	180 Compare X21, 0
	181 JumpIfEqual {340}
	182 Move X9, 0x717000
	183 Move X9, [X9+2392]
	184 Move W10, [X21+28]
	185 Move X8, [X21+16]
	186 Move X9, [X9]
	187 Add W10, W10, 1
	188 Move [X21+28], W10
	189 Compare X8, 0
	190 JumpIfEqual {340}
	191 NotImplemented "Instruction LDRSW not yet implemented."
	192 Move W11, [X8+24]
	193 NotImplemented "Instruction CMP not yet implemented."
	194 Add W9, W10, 1
	195 Add X8, X8, X10
	196 Move [X21+24], W9
	197 Move [X8+32], X22
	198 Move X8, [X9+32]
	199 Move X0, X21
	200 Move X1, X22
	201 Move X8, [X8+192]
	202 Move X2, [X8+112]
	203 Call List`1<Object>.AddWithResize, X0, X1
	204 Move X8, 0x717000
	205 Move X21, [X19+40]
	206 Move X8, [X8+2352]
	207 Move X0, [X8]
	208 Call 0x1C17F10
	209 Move X1, X31
	210 Move X22, X0
	211 Call Object..ctor, X0
	212 Move X8, 0x6DF000
	213 Move X8, [X8+312]
	214 Add X0, X31, 40
	215 Move W1, 1
	216 Move W2, 4
	217 Move X4, [X8]
	218 Move W3, 1
	219 Move [X31+40], X31
	220 Move [X31+48], X31
	221 Call NativeArray`1<Int32>..ctor, X0, X1, X2, X3
	222 Compare X22, 0
	223 JumpIfEqual {340}
	224 NotImplemented "Instruction LDUR not yet implemented."
	225 Move [X22+104], V0
	226 Compare X21, 0
	227 JumpIfEqual {340}
	228 Move X9, 0x717000
	229 Move X9, [X9+2408]
	230 Move W10, [X21+28]
	231 Move X8, [X21+16]
	232 Move X9, [X9]
	233 Add W10, W10, 1
	234 Move [X21+28], W10
	235 Compare X8, 0
	236 JumpIfEqual {340}
	237 NotImplemented "Instruction LDRSW not yet implemented."
	238 Move W11, [X8+24]
	239 NotImplemented "Instruction CMP not yet implemented."
	240 Add W9, W10, 1
	241 Add X8, X8, X10
	242 Move [X21+24], W9
	243 Move [X8+32], X22
	244 Move X8, [X9+32]
	245 Move X0, X21
	246 Move X1, X22
	247 Move X8, [X8+192]
	248 Move X2, [X8+112]
	249 Call List`1<Object>.AddWithResize, X0, X1
	250 Move X0, [X19+96]
	251 NotImplemented "Instruction MOVI not yet implemented."
	252 Move [X31+32], X31
	253 Move [X31], V0
	254 Move [X31+8], V0
	255 Compare X0, 0
	256 JumpIfEqual {340}
	257 Move V0, [X31]
	258 Move V1, [X31+16]
	259 Move X8, [X31+32]
	260 Move X9, 0x717000
	261 Move X9, [X9+2384]
	262 Move [X31+64], V0
	263 Move [X31+72], V1
	264 Move [X31+96], X8
	265 Move W11, [X0+28]
	266 Move X8, [X0+16]
	267 Move X10, [X9]
	268 Add W9, W11, 1
	269 Move [X0+28], W9
	270 Compare X8, 0
	271 JumpIfEqual {340}
	272 NotImplemented "Instruction LDRSW not yet implemented."
	273 Move W11, [X8+24]
	274 NotImplemented "Instruction CMP not yet implemented."
	275 Add W10, W9, 1
	276 Move [X0+24], W10
	277 Move X10, [X31+96]
	278 Move V0, [X31+64]
	279 Move V1, [X31+80]
	280 Move W11, 40
	281 NotImplemented "Instruction MADD not yet implemented."
	282 Move [X8+64], X10
	283 Move [X8+32], V0
	284 Move [X8+40], V1
	285 Move X8, [X10+32]
	286 Move V0, [X31+64]
	287 Move V1, [X31+80]
	288 Move X9, [X31+96]
	289 Add X1, X31, 112
	290 Move X8, [X8+192]
	291 Move X2, [X8+112]
	292 Move [X31+112], V0
	293 Move [X31+120], V1
	294 Move [X31+144], X9
	295 Call List`1<CombinedChunks>.AddWithResize, X0, X1
	296 Move X0, [X19+104]
	297 Compare X0, 0
	298 JumpIfEqual {340}
	299 Move X9, 0x6B6000
	300 Move X9, [X9+3600]
	301 Move W10, [X0+28]
	302 Move X8, [X0+16]
	303 Move X9, [X9]
	304 Add W10, W10, 1
	305 Move [X0+28], W10
	306 Compare X8, 0
	307 JumpIfEqual {340}
	308 NotImplemented "Instruction LDRSW not yet implemented."
	309 Move W11, [X8+24]
	310 NotImplemented "Instruction CMP not yet implemented."
	311 Add W9, W10, 1
	312 Add X8, X8, X10
	313 Move [X0+24], W9
	314 Move [X8+32], W31
	315 Move X8, [X9+32]
	316 Move W1, W31
	317 Move X8, [X8+192]
	318 Move X2, [X8+112]
	319 Call List`1<Int32>.AddWithResize, X0, X1
	320 Move X0, [X19+88]
	321 Compare X0, 0
	322 JumpIfEqual {340}
	323 Move X8, 0x717000
	324 Move W2, [X19+48]
	325 Move X8, [X8+2368]
	326 Move X1, X20
	327 Move X3, [X8]
	328 Call Dictionary`2<Object, Int32>.Add, X0, X1, X2
	329 Move W0, [X19+48]
	330 Add W8, W0, 1
	331 Move [X19+48], W8
	332 Move X20, [X31+192]
	333 Move X19, [X31+200]
	334 Move X22, [X31+176]
	335 Move X21, [X31+184]
	336 Move X30, [X31+160]
	337 Move X23, [X31+168]
	338 Add X31, X31, 208
	339 Return X0
	340 Call 0x1C17F20

Method: System.Void UpdateAllDecalEntitiesData()

Disassembly:
	0x03A3F63C ADD X0, X31, 0xA0
	0x03A3F640 BL 0x2BC434C
	0x03A3F644 LDR X0, [X19 + 0x18]
	0x03A3F648 CBZ X0, 0x3A3FA38
	0x03A3F64C LDR X1, [X20]
	0x03A3F650 ADD X8, X31, 0x18
	0x03A3F654 BL 0x301CB58
	0x03A3F658 LDUR V0, [X31 + 0x18]
	0x03A3F65C LDR X8, [X31 + 0x28]
	0x03A3F660 STR V0, [X31 + 0x7]
	0x03A3F664 STR X8, [X31 + 0x80]
	0x03A3F668 LDR X1, [X21]
	0x03A3F66C ADD X0, X31, 0x70
	0x03A3F670 BL 0x2BC4350
	0x03A3F674 TBZ X0, 0x0, 0x3A3F698
	0x03A3F678 LDR X8, [X31 + 0x80]
	0x03A3F67C CBZ X8, 0x3A3FA1C
	0x03A3F680 LDUR V0, [X8 + 0x18]
	0x03A3F684 STR V0, [X31 + 0x9]
	0x03A3F688 ADD X0, X31, 0x90
	0x03A3F68C MOV X1, X31
	0x03A3F690 BL 0x3BFDCAC
	0x03A3F694 B 0x3A3F668
	0x03A3F698 LDR X1, [X29]
	0x03A3F69C ADD X0, X31, 0x70
	0x03A3F6A0 BL 0x2BC434C
	0x03A3F6A4 LDR X0, [X19 + 0x20]
	0x03A3F6A8 CBZ X0, 0x3A3FA38
	0x03A3F6AC LDR X1, [X28]
	0x03A3F6B0 ADD X8, X31, 0x18
	0x03A3F6B4 BL 0x301CB58
	0x03A3F6B8 LDUR V0, [X31 + 0x18]
	0x03A3F6BC LDR X8, [X31 + 0x28]
	0x03A3F6C0 STR V0, [X31 + 0x5]
	0x03A3F6C4 STR X8, [X31 + 0x60]
	0x03A3F6C8 LDR X1, [X27]
	0x03A3F6CC ADD X0, X31, 0x50
	0x03A3F6D0 BL 0x2BC4350
	0x03A3F6D4 TBZ X0, 0x0, 0x3A3F6F8
	0x03A3F6D8 LDR X8, [X31 + 0x60]
	0x03A3F6DC CBZ X8, 0x3A3FA20
	0x03A3F6E0 LDUR V0, [X8 + 0x18]
	0x03A3F6E4 STR V0, [X31 + 0x9]
	0x03A3F6E8 ADD X0, X31, 0x90
	0x03A3F6EC MOV X1, X31
	0x03A3F6F0 BL 0x3BFDCAC
	0x03A3F6F4 B 0x3A3F6C8
	0x03A3F6F8 ADRP X8, 0x716000
	0x03A3F6FC LDR X8, [X8 + 0xA20]
	0x03A3F700 ADD X0, X31, 0x50
	0x03A3F704 LDR X1, [X8]
	0x03A3F708 BL 0x2BC434C
	0x03A3F70C LDR X0, [X19 + 0x28]
	0x03A3F710 CBZ X0, 0x3A3FA38
	0x03A3F714 ADRP X8, 0x716000
	0x03A3F718 LDR X8, [X8 + 0xA90]
	0x03A3F71C LDR X1, [X8]
	0x03A3F720 ADD X8, X31, 0x18
	0x03A3F724 BL 0x301CB58
	0x03A3F728 LDUR V0, [X31 + 0x18]
	0x03A3F72C LDR X8, [X31 + 0x28]
	0x03A3F730 STR V0, [X31 + 0x3]
	0x03A3F734 STR X8, [X31 + 0x40]
	0x03A3F738 LDR X1, [X24]
	0x03A3F73C ADD X0, X31, 0x30
	0x03A3F740 BL 0x2BC4350
	0x03A3F744 TBZ X0, 0x0, 0x3A3F768
	0x03A3F748 LDR X8, [X31 + 0x40]
	0x03A3F74C CBZ X8, 0x3A3FA24
	0x03A3F750 LDUR V0, [X8 + 0x18]
	0x03A3F754 STR V0, [X31 + 0x9]
	0x03A3F758 ADD X0, X31, 0x90
	0x03A3F75C MOV X1, X31
	0x03A3F760 BL 0x3BFDCAC
	0x03A3F764 B 0x3A3F738
	0x03A3F768 ADRP X8, 0x716000
	0x03A3F76C LDR X8, [X8 + 0xA28]
	0x03A3F770 ADD X0, X31, 0x30
	0x03A3F774 LDR X1, [X8]
	0x03A3F778 BL 0x2BC434C
	0x03A3F77C LDR X0, [X19 + 0x10]
	0x03A3F780 CBZ X0, 0x3A3FA38
	0x03A3F784 LDR X1, [X26]
	0x03A3F788 ADD X8, X31, 0x18
	0x03A3F78C BL 0x301CB58
	0x03A3F790 LDUR V0, [X31 + 0x18]
	0x03A3F794 LDR X8, [X31 + 0x28]
	0x03A3F798 STR V0, [X25]
	0x03A3F79C STR X8, [X31 + 0xB0]
	0x03A3F7A0 LDR X1, [X23]
	0x03A3F7A4 ADD X0, X31, 0xA0
	0x03A3F7A8 BL 0x2BC4350
	0x03A3F7AC TBZ X0, 0x0, 0x3A3F7C8
	0x03A3F7B0 LDR X0, [X31 + 0xB0]
	0x03A3F7B4 CBZ X0, 0x3A3FA28
	0x03A3F7B8 LDR X8, [X0]
	0x03A3F7BC LDP X9, X1, [X8 + 0x1B8]
	0x03A3F7C0 BLR X9
	0x03A3F7C4 B 0x3A3F7A0
	0x03A3F7C8 LDR X1, [X22]
	0x03A3F7CC ADD X0, X31, 0xA0
	0x03A3F7D0 BL 0x2BC434C
	0x03A3F7D4 LDR X0, [X19 + 0x18]
	0x03A3F7D8 CBZ X0, 0x3A3FA38
	0x03A3F7DC LDR X1, [X20]
	0x03A3F7E0 ADD X8, X31, 0x18
	0x03A3F7E4 BL 0x301CB58
	0x03A3F7E8 LDUR V0, [X31 + 0x18]
	0x03A3F7EC LDR X8, [X31 + 0x28]
	0x03A3F7F0 STR V0, [X31 + 0x7]
	0x03A3F7F4 STR X8, [X31 + 0x80]
	0x03A3F7F8 LDR X1, [X21]
	0x03A3F7FC ADD X0, X31, 0x70
	0x03A3F800 BL 0x2BC4350
	0x03A3F804 TBZ X0, 0x0, 0x3A3F820
	0x03A3F808 LDR X0, [X31 + 0x80]
	0x03A3F80C CBZ X0, 0x3A3FA2C
	0x03A3F810 LDR X8, [X0]
	0x03A3F814 LDP X9, X1, [X8 + 0x1B8]
	0x03A3F818 BLR X9
	0x03A3F81C B 0x3A3F7F8
	0x03A3F820 LDR X1, [X29]
	0x03A3F824 ADD X0, X31, 0x70
	0x03A3F828 BL 0x2BC434C
	0x03A3F82C LDR X0, [X19 + 0x20]
	0x03A3F830 CBZ X0, 0x3A3FA38
	0x03A3F834 LDR X1, [X28]
	0x03A3F838 ADD X8, X31, 0x18
	0x03A3F83C BL 0x301CB58
	0x03A3F840 LDUR V0, [X31 + 0x18]
	0x03A3F844 LDR X8, [X31 + 0x28]
	0x03A3F848 STR V0, [X31 + 0x5]
	0x03A3F84C STR X8, [X31 + 0x60]
	0x03A3F850 LDR X1, [X27]
	0x03A3F854 ADD X0, X31, 0x50
	0x03A3F858 BL 0x2BC4350

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+64], X30
	003 Move [X31+80], X26
	004 Move [X31+88], X25
	005 Move [X31+96], X24
	006 Move [X31+104], X23
	007 Move [X31+112], X22
	008 Move [X31+120], X21
	009 Move [X31+128], X20
	010 Move [X31+136], X19
	011 Move X20, 0x9A4000
	012 Move W8, [X20+338]
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {35}
	018 Move X0, 0x717000
	019 Move X0, [X0+2424]
	020 Call 0x1C17CF4
	021 Move X0, 0x717000
	022 Move X0, [X0+2432]
	023 Call 0x1C17CF4
	024 Move X0, 0x717000
	025 Move X0, [X0+2440]
	026 Call 0x1C17CF4
	027 Move X0, 0x717000
	028 Move X0, [X0+2448]
	029 Call 0x1C17CF4
	030 Move X0, 0x6B5000
	031 Move X0, [X0+1432]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X20+338], W8
	035 Move [X31+32], X31
	036 Move [X31+40], X31
	037 Move [X31+48], X31
	038 Move X0, [X19+16]
	039 Compare X0, 0
	040 JumpIfEqual {125}
	041 Move X8, 0x717000
	042 Move X8, [X8+2448]
	043 Move X23, 0x717000
	044 Move X24, 0x6B5000
	045 Move X22, 0x717000
	046 Move X1, [X8]
	047 Move X23, [X23+2432]
	048 Move X24, [X24+1432]
	049 Move X22, [X22+2424]
	050 Add X8, X31, 8
	051 Call List`1<Object>.GetEnumerator, X0
	052 NotImplemented "Instruction LDUR not yet implemented."
	053 Move X8, [X31+24]
	054 Move [X31+2], V0
	055 Move [X31+48], X8
	056 Move X1, [X23]
	057 Add X0, X31, 32
	058 Call Enumerator<Object>.MoveNext, X0
	059 Move TEMP, X0
	060 And TEMP, TEMP, 1
	061 Compare TEMP, 1
	062 JumpIfNotEqual {107}
	063 Move X25, [X31+48]
	064 Compare X25, 0
	065 JumpIfEqual {124}
	066 Move W8, [X25+16]
	067 NotImplemented "Instruction CMP not yet implemented."
	068 Move X26, X31
	069 Move X8, [X25+64]
	070 Compare X8, 0
	071 JumpIfEqual {121}
	072 Move W9, [X8+24]
	073 NotImplemented "Instruction CMP not yet implemented."
	074 Move X0, [X24]
	075 Add X8, X8, X26
	076 Move X20, [X8+32]
	077 Move W9, [X0+224]
	078 Compare W9, 0
	079 JumpIfNotEqual {81}
	080 Call 0x1C17DFC
	081 Move X0, X20
	082 Move X1, X31
	083 Move X2, X31
	084 Call Object.op_Equality, X0, X1
	085 Move TEMP, X0
	086 And TEMP, TEMP, 1
	087 Compare TEMP, 1
	088 JumpIfEqual {104}
	089 Move X0, [X19+80]
	090 Compare X0, 0
	091 JumpIfEqual {123}
	092 Move X8, [X25+48]
	093 Move X21, [X8]
	094 Move X1, X21
	095 Call DecalEntityIndexer.IsValid, X0, X1
	096 Move TEMP, X0
	097 And TEMP, TEMP, 1
	098 Compare TEMP, 1
	099 JumpIfNotEqual {104}
	100 Move X0, X19
	101 Move X1, X21
	102 Move X2, X20
	103 Call DecalEntityManager.UpdateDecalEntityData, X0, X1, X2
	104 NotImplemented "Instruction LDRSW not yet implemented."
	105 Add X26, X26, 1
	106 NotImplemented "Instruction CMP not yet implemented."
	107 Move X1, [X22]
	108 Add X0, X31, 32
	109 Call Enumerator<Object>.Dispose, X0
	110 Move X20, [X31+128]
	111 Move X19, [X31+136]
	112 Move X22, [X31+112]
	113 Move X21, [X31+120]
	114 Move X24, [X31+96]
	115 Move X23, [X31+104]
	116 Move X26, [X31+80]
	117 Move X25, [X31+88]
	118 Move X30, [X31+64]
	119 Add X31, X31, 144
	120 Return 
	121 Call 0x1C17F20
	122 Call 0x1C17F28
	123 Call 0x1C17F20
	124 Call 0x1C17F20
	125 Call 0x1C17F20
	126 Move X19, X0
	127 NotImplemented "Instruction CMP not yet implemented."
	128 Move X0, X19
	129 Call 0x3EB2AD0
	130 Move X20, [X0]
	131 Call 0x3EB2AE0
	132 Move X1, [X22]
	133 Add X0, X31, 32
	134 Call Enumerator<Object>.Dispose, X0
	135 Compare X20, 0
	136 JumpIfEqual {110}
	137 Move X0, X20
	138 Call 0x1C17F18
	139 Move X20, X31
	140 Move X19, X0
	141 Move X1, [X22]
	142 Add X0, X31, 32
	143 Call Enumerator<Object>.Dispose, X0
	144 Compare X20, 0
	145 JumpIfNotEqual {148}
	146 Move X0, X19
	147 Call 0x1D2D690
	148 Move X0, X20
	149 Call 0x1C17F18
	150 Call 0x1991590

Method: System.Void UpdateDecalEntityData(UnityEngine.Rendering.Universal.DecalEntity decalEntity, UnityEngine.Rendering.Universal.DecalProjector decalProjector)

Disassembly:
	0x03A3F2C4 B 0x3A3F394
	0x03A3F2C8 B 0x3A3F394
	0x03A3F2CC B 0x3A3F394
	0x03A3F2D0 B 0x3A3F394
	0x03A3F2D4 B 0x3A3F394
	0x03A3F2D8 B 0x3A3F394
	0x03A3F2DC B 0x3A3F394
	0x03A3F2E0 B 0x3A3F394
	0x03A3F2E4 B 0x3A3F394
	0x03A3F2E8 B 0x3A3F394
	0x03A3F2EC B 0x3A3F394
	0x03A3F2F0 B 0x3A3F394
	0x03A3F2F4 B 0x3A3F394
	0x03A3F2F8 B 0x3A3F394
	0x03A3F2FC B 0x3A3F394
	0x03A3F300 B 0x3A3F394
	0x03A3F304 B 0x3A3F394
	0x03A3F308 B 0x3A3F394
	0x03A3F30C B 0x3A3F394
	0x03A3F310 B 0x3A3F394
	0x03A3F314 B 0x3A3F394
	0x03A3F318 B 0x3A3F394
	0x03A3F31C B 0x3A3F394
	0x03A3F320 B 0x3A3F394
	0x03A3F324 B 0x3A3F394
	0x03A3F328 B 0x3A3F394
	0x03A3F32C B 0x3A3F394
	0x03A3F330 B 0x3A3F394
	0x03A3F334 B 0x3A3F394
	0x03A3F338 B 0x3A3F394
	0x03A3F33C B 0x3A3F394
	0x03A3F340 B 0x3A3F394
	0x03A3F344 B 0x3A3F394
	0x03A3F348 B 0x3A3F394
	0x03A3F34C B 0x3A3F394
	0x03A3F350 B 0x3A3F394
	0x03A3F354 B 0x3A3F394
	0x03A3F358 B 0x3A3F394
	0x03A3F35C B 0x3A3F394
	0x03A3F360 B 0x3A3F394
	0x03A3F364 B 0x3A3F394
	0x03A3F368 B 0x3A3F394
	0x03A3F36C B 0x3A3F394
	0x03A3F370 B 0x3A3F394
	0x03A3F374 B 0x3A3F394
	0x03A3F378 B 0x3A3F394
	0x03A3F37C B 0x3A3F394
	0x03A3F380 B 0x3A3F394
	0x03A3F384 B 0x3A3F394
	0x03A3F388 B 0x3A3F394
	0x03A3F38C B 0x3A3F394
	0x03A3F390 B 0x3A3F394
	0x03A3F394 MOV X19, X0
	0x03A3F398 CMP W1, 0x1
	0x03A3F39C B.NE 0x3A3F3C8
	0x03A3F3A0 MOV X0, X19
	0x03A3F3A4 BL 0x3EB1AD0
	0x03A3F3A8 LDR X20, [X0]
	0x03A3F3AC BL 0x3EB1AE0
	0x03A3F3B0 ADD X0, X31, 0x30
	0x03A3F3B4 MOV X1, X31
	0x03A3F3B8 BL 0x39B1DB4
	0x03A3F3BC CBZ X20, 0x3A3F1C0
	0x03A3F3C0 MOV X0, X20
	0x03A3F3C4 BL 0x1C16F18
	0x03A3F3C8 MOV X20, X31
	0x03A3F3CC B 0x3A3F3D4
	0x03A3F3D0 MOV X19, X0
	0x03A3F3D4 ADD X0, X31, 0x30
	0x03A3F3D8 MOV X1, X31
	0x03A3F3DC BL 0x39B1DB4
	0x03A3F3E0 CBNZ X20, 0x3A3F3EC
	0x03A3F3E4 MOV X0, X19
	0x03A3F3E8 BL 0x1D2C690
	0x03A3F3EC MOV X0, X20
	0x03A3F3F0 BL 0x1C16F18
	0x03A3F3F4 BL 0x1990590
	0x03A3F3F8 SUB X31, X31, 0x120
	0x03A3F3FC STP X29, X30, [X31 + 0xC0]
	0x03A3F400 STP X28, X27, [X31 + 0xD0]
	0x03A3F404 STP X26, X25, [X31 + 0xE0]
	0x03A3F408 STP X24, X23, [X31 + 0xF0]
	0x03A3F40C STP X22, X21, [X31 + 0x100]
	0x03A3F410 STP X20, X19, [X31 + 0x110]
	0x03A3F414 ADRP X21, 0x9A3000
	0x03A3F418 ADRP X20, 0x6DC000
	0x03A3F41C LDRB W8, [X21 + 0x156]
	0x03A3F420 LDR X20, [X20 + 0x8F8]
	0x03A3F424 MOV X19, X0
	0x03A3F428 TBNZ X8, 0x0, 0x3A3F548
	0x03A3F42C ADRP X0, 0x6DC000
	0x03A3F430 LDR X0, [X0 + 0x8F8]
	0x03A3F434 BL 0x1C16CF4
	0x03A3F438 ADRP X0, 0x716000
	0x03A3F43C LDR X0, [X0 + 0x9A0]
	0x03A3F440 BL 0x1C16CF4
	0x03A3F444 ADRP X0, 0x716000
	0x03A3F448 LDR X0, [X0 + 0xA20]
	0x03A3F44C BL 0x1C16CF4
	0x03A3F450 ADRP X0, 0x716000
	0x03A3F454 LDR X0, [X0 + 0xA28]
	0x03A3F458 BL 0x1C16CF4
	0x03A3F45C ADRP X0, 0x716000
	0x03A3F460 LDR X0, [X0 + 0x978]
	0x03A3F464 BL 0x1C16CF4
	0x03A3F468 ADRP X0, 0x716000
	0x03A3F46C LDR X0, [X0 + 0xA30]
	0x03A3F470 BL 0x1C16CF4
	0x03A3F474 ADRP X0, 0x716000
	0x03A3F478 LDR X0, [X0 + 0x980]
	0x03A3F47C BL 0x1C16CF4
	0x03A3F480 ADRP X0, 0x716000
	0x03A3F484 LDR X0, [X0 + 0xA38]
	0x03A3F488 BL 0x1C16CF4
	0x03A3F48C ADRP X0, 0x716000
	0x03A3F490 LDR X0, [X0 + 0xA40]
	0x03A3F494 BL 0x1C16CF4
	0x03A3F498 ADRP X0, 0x716000
	0x03A3F49C LDR X0, [X0 + 0xA48]
	0x03A3F4A0 BL 0x1C16CF4
	0x03A3F4A4 ADRP X0, 0x716000
	0x03A3F4A8 LDR X0, [X0 + 0xA50]
	0x03A3F4AC BL 0x1C16CF4
	0x03A3F4B0 ADRP X0, 0x716000
	0x03A3F4B4 LDR X0, [X0 + 0x988]
	0x03A3F4B8 BL 0x1C16CF4
	0x03A3F4BC ADRP X0, 0x716000
	0x03A3F4C0 LDR X0, [X0 + 0xA58]
	0x03A3F4C4 BL 0x1C16CF4
	0x03A3F4C8 ADRP X0, 0x716000
	0x03A3F4CC LDR X0, [X0 + 0xA60]
	0x03A3F4D0 BL 0x1C16CF4
	0x03A3F4D4 ADRP X0, 0x716000
	0x03A3F4D8 LDR X0, [X0 + 0xA68]
	0x03A3F4DC BL 0x1C16CF4
	0x03A3F4E0 ADRP X0, 0x716000
	0x03A3F4E4 LDR X0, [X0 + 0xA70]
	0x03A3F4E8 BL 0x1C16CF4
	0x03A3F4EC ADRP X0, 0x716000
	0x03A3F4F0 LDR X0, [X0 + 0xA78]
	0x03A3F4F4 BL 0x1C16CF4
	0x03A3F4F8 ADRP X0, 0x716000
	0x03A3F4FC LDR X0, [X0 + 0xA80]
	0x03A3F500 BL 0x1C16CF4
	0x03A3F504 ADRP X0, 0x716000
	0x03A3F508 LDR X0, [X0 + 0xA88]
	0x03A3F50C BL 0x1C16CF4
	0x03A3F510 ADRP X0, 0x716000
	0x03A3F514 LDR X0, [X0 + 0xA90]
	0x03A3F518 BL 0x1C16CF4
	0x03A3F51C ADRP X0, 0x716000
	0x03A3F520 LDR X0, [X0 + 0xA98]
	0x03A3F524 BL 0x1C16CF4
	0x03A3F528 ADRP X0, 0x716000
	0x03A3F52C LDR X0, [X0 + 0x990]
	0x03A3F530 BL 0x1C16CF4
	0x03A3F534 ADRP X0, 0x716000
	0x03A3F538 LDR X0, [X0 + 0xAA0]
	0x03A3F53C BL 0x1C16CF4
	0x03A3F540 MOVZ W8, 0x1
	0x03A3F544 STRB W8, [X21 + 0x156]
	0x03A3F548 LDR X0, [X20]
	0x03A3F54C STP X31, X31, [X31 + 0xA0]
	0x03A3F550 STR X31, [X31 + 0xB0]
	0x03A3F554 STP X31, X31, [X31 + 0x90]
	0x03A3F558 STP X31, X31, [X31 + 0x70]
	0x03A3F55C STR X31, [X31 + 0x80]
	0x03A3F560 STP X31, X31, [X31 + 0x50]
	0x03A3F564 STR X31, [X31 + 0x60]
	0x03A3F568 STP X31, X31, [X31 + 0x30]
	0x03A3F56C STR X31, [X31 + 0x40]
	0x03A3F570 LDR W8, [X0 + 0xE0]
	0x03A3F574 LDR X20, [X19 + 0x70]
	0x03A3F578 CBNZ W8, 0x3A3F580
	0x03A3F57C BL 0x1C16DFC
	0x03A3F580 MOV X0, X20
	0x03A3F584 MOV X1, X31
	0x03A3F588 BL 0x39E1DF8
	0x03A3F58C LDR X0, [X19 + 0x78]
	0x03A3F590 MOV X1, X31
	0x03A3F594 BL 0x39E1DF8
	0x03A3F598 LDR X0, [X19 + 0x10]
	0x03A3F59C CBZ X0, 0x3A3FA38
	0x03A3F5A0 ADRP X26, 0x716000
	0x03A3F5A4 LDR X26, [X26 + 0x990]
	0x03A3F5A8 ADRP X23, 0x716000
	0x03A3F5AC ADRP X20, 0x716000
	0x03A3F5B0 ADRP X21, 0x716000
	0x03A3F5B4 ADRP X28, 0x716000
	0x03A3F5B8 ADRP X27, 0x716000
	0x03A3F5BC ADRP X24, 0x716000
	0x03A3F5C0 LDR X23, [X23 + 0x980]
	0x03A3F5C4 LDR X20, [X20 + 0xAA0]
	0x03A3F5C8 LDR X21, [X21 + 0xA48]
	0x03A3F5CC LDR X28, [X28 + 0xA98]
	0x03A3F5D0 LDR X27, [X27 + 0xA40]
	0x03A3F5D4 LDR X24, [X24 + 0xA38]
	0x03A3F5D8 LDR X1, [X26]
	0x03A3F5DC ADRP X29, 0x716000
	0x03A3F5E0 ADRP X22, 0x716000
	0x03A3F5E4 LDR X29, [X29 + 0xA30]
	0x03A3F5E8 LDR X22, [X22 + 0x978]
	0x03A3F5EC ADD X8, X31, 0x18
	0x03A3F5F0 ADD X25, X31, 0xA0
	0x03A3F5F4 BL 0x301CB58
	0x03A3F5F8 LDUR V0, [X31 + 0x18]
	0x03A3F5FC LDR X8, [X31 + 0x28]
	0x03A3F600 STR V0, [X25]
	0x03A3F604 STR X8, [X31 + 0xB0]
	0x03A3F608 LDR X1, [X23]
	0x03A3F60C ADD X0, X31, 0xA0
	0x03A3F610 BL 0x2BC4350
	0x03A3F614 TBZ X0, 0x0, 0x3A3F638
	0x03A3F618 LDR X8, [X31 + 0xB0]
	0x03A3F61C CBZ X8, 0x3A3FA18
	0x03A3F620 LDUR V0, [X8 + 0x18]
	0x03A3F624 STR V0, [X31 + 0x9]
	0x03A3F628 ADD X0, X31, 0x90

ISIL:
	001 Move [X31-128], D15
	002 Move [X31-120], D14
	003 Move [X31+16], D13
	004 Move [X31+24], D12
	005 Move [X31+32], D11
	006 Move [X31+40], D10
	007 Move [X31+48], D9
	008 Move [X31+56], D8
	009 Move [X31+64], X29
	010 Move [X31+80], X30
	011 Move [X31+88], X23
	012 Move [X31+96], X22
	013 Move [X31+104], X21
	014 Move [X31+112], X20
	015 Move [X31+120], X19
	016 Subtract X31, X31, 384
	017 Move X22, 0x9A4000
	018 Move W8, [X22+339]
	019 Move X19, X2
	020 Move X21, X1
	021 Move X20, X0
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {31}
	026 Move X0, 0x717000
	027 Move X0, [X0+2016]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X22+339], W8
	031 Move X0, [X20+80]
	032 Compare X0, 0
	033 JumpIfEqual {275}
	034 Move X1, X21
	035 Call DecalEntityIndexer.GetItem, X0, X1
	036 Move X8, [X20+24]
	037 Compare X8, 0
	038 JumpIfEqual {275}
	039 Move X9, 0x717000
	040 Move X9, [X9+2016]
	041 Move X21, X0
	042 Move X0, X8
	043 Move W1, W21
	044 Move X2, [X9]
	045 Call List`1<Object>.get_Item, X0, X1
	046 Compare X0, 0
	047 JumpIfEqual {275}
	048 Compare X19, 0
	049 JumpIfEqual {275}
	050 Move X20, X0
	051 Move X0, X19
	052 Move X1, X31
	053 Call DecalProjector.get_decalOffset, X0
	054 Add X8, X31, 256
	055 Move X0, X31
	056 Call Matrix4x4.Translate, X0
	057 Move V0, [X31+256]
	058 Move V1, [X31+272]
	059 Move V2, [X31+288]
	060 Move V3, [X31+304]
	061 Move X0, X19
	062 Move X1, X31
	063 Move [X31+320], V0
	064 Move [X31+328], V1
	065 Move [X31+352], V2
	066 Move [X31+360], V3
	067 Call DecalProjector.get_decalSize, X0
	068 Add X8, X31, 256
	069 Move X0, X31
	070 Call Matrix4x4.Scale, X0
	071 Move V0, [X31+256]
	072 Move V1, [X31+272]
	073 Move V2, [X31+288]
	074 Move V3, [X31+304]
	075 Add X8, X31, 256
	076 Add X0, X31, 192
	077 Move [X31+128], V0
	078 Move [X31+136], V1
	079 Move V0, [X31+320]
	080 Move V1, [X31+336]
	081 Move [X31+160], V2
	082 Move [X31+168], V3
	083 Move V2, [X31+352]
	084 Move V3, [X31+368]
	085 Add X1, X31, 128
	086 Move X2, X31
	087 Move [X31+192], V0
	088 Move [X31+200], V1
	089 Move [X31+224], V2
	090 Move [X31+232], V3
	091 Call Matrix4x4.op_Multiply, X0, X1
	092 Move V0, [X31+256]
	093 Move V1, [X31+272]
	094 Move V2, [X31+288]
	095 Move V3, [X31+304]
	096 Add X8, X31, 64
	097 Add X0, X31, 0
	098 Move X1, X31
	099 Move [X31], V0
	100 Move [X31+8], V1
	101 Move [X31+32], V2
	102 Move [X31+40], V3
	103 Call float4x4.op_Implicit, X0
	104 Move V1, [X31+96]
	105 Move V0, [X31+112]
	106 Move V3, [X31+64]
	107 Move V2, [X31+80]
	108 NotImplemented "Instruction SBFM not yet implemented."
	109 Move X0, X19
	110 Move [X31+288], V1
	111 Move [X31+296], V0
	112 Move [X31+256], V3
	113 Move [X31+264], V2
	114 Move X8, [X20+104]
	115 Move X1, X31
	116 Add X8, X8, X23
	117 Move [X8+32], V1
	118 Move [X8+40], V0
	119 Move [X8], V3
	120 Move [X8+8], V2
	121 Move S12, [X19+48]
	122 Move S13, [X19+52]
	123 Move S14, [X19+56]
	124 Move S15, [X19+60]
	125 Call DecalProjector.get_uvScaleBias, X0
	126 Move X0, X19
	127 Move X1, X31
	128 Move V8, V0
	129 Move V9, V1
	130 Move V10, V2
	131 Move V11, V3
	132 Call Component.get_gameObject, X0
	133 Compare X0, 0
	134 JumpIfEqual {275}
	135 Move X1, X31
	136 Move [X31+460], S15
	137 Call GameObject.get_layer, X0
	138 Move W21, W0
	139 Move X0, X19
	140 Move X1, X31
	141 Call Component.get_gameObject, X0
	142 Compare X0, 0
	143 JumpIfEqual {275}
	144 Move X1, X31
	145 Call GameObject.get_sceneCullingMask, X0
	146 Move V15, [X19+112]
	147 Move X22, X0
	148 Move V0, V12
	149 Move V1, V13
	150 Move X0, X31
	151 Call float2.op_Implicit, X0
	152 Move X8, [X20+120]
	153 Move W9, 0x43340000
	154 Move V2, V0
	155 Move S3, W9
	156 Add X8, X8, X23
	157 Move S0, W31
	158 NotImplemented "Instruction FCMP not yet implemented."
	159 Move [X8], S2
	160 Move [X8+8], S1
	161 Move S1, W31
	162 Move V6, [X31+460]
	163 Move X9, -49631232
	164 Move W8, 0x43340000
	165 Move V5, [X9+3880]
	166 Move S3, W8
	167 NotImplemented "Instruction FDIV not yet implemented."
	168 NotImplemented "Instruction FDIV not yet implemented."
	169 Move S0, 0.25
	170 Subtract S3, S3, S4
	171 Subtract S0, S0, S4
	172 NotImplemented "Instruction FMAX not yet implemented."
	173 Move S1, 1
	174 Move S2, -0.25
	175 NotImplemented "Instruction FDIV not yet implemented."
	176 Subtract S0, S1, S0
	177 NotImplemented "Instruction FDIV not yet implemented."
	178 Move X0, X31
	179 Call float2.op_Implicit, X0
	180 Move X8, [X20+136]
	181 Move V2, V10
	182 Move V3, V11
	183 Move X0, X31
	184 Add X8, X8, X23
	185 Move [X8], S0
	186 Move [X8+8], S1
	187 Move V0, V8
	188 Move V1, V9
	189 Call float4.op_Implicit, X0
	190 Move X8, [X20+152]
	191 Move X1, X31
	192 Add X8, X8, X23
	193 Move [X8], S0
	194 Move [X8+8], S1
	195 Move [X8+8], S2
	196 Move [X8+16], S3
	197 Move X8, [X20+168]
	198 Move [X8], W21
	199 Move X8, [X20+184]
	200 Move [X8], X22
	201 Move X8, [X20+200]
	202 Move [X8], S15
	203 Move W8, [X19+84]
	204 Move X9, [X20+232]
	205 Move [X9], W8
	206 Move W0, [X19+80]
	207 Call RenderingLayerUtils.ToValidRenderingLayers, X0
	208 Move X8, [X20+248]
	209 Move X1, X31
	210 Move [X8], W0
	211 Move X0, X19
	212 Call Component.get_transform, X0
	213 Compare X0, 0
	214 JumpIfEqual {275}
	215 Move X1, X31
	216 Call Transform.get_position, X0
	217 Move X0, X31
	218 Call float3.op_Implicit, X0
	219 Move X8, [X20+264]
	220 Move W9, 12
	221 Move X0, X19
	222 Move X1, X31
	223 NotImplemented "Instruction MADD not yet implemented."
	224 Move [X8], S0
	225 Move [X8+8], S1
	226 Move [X8+8], S2
	227 Call Component.get_transform, X0
	228 Compare X0, 0
	229 JumpIfEqual {275}
	230 Move X1, X31
	231 Call Transform.get_rotation, X0
	232 Move X0, X31
	233 Call quaternion.op_Implicit, X0
	234 Move X8, [X20+280]
	235 Move X0, X19
	236 Move X1, X31
	237 Add X8, X8, X23
	238 Move [X8], S0
	239 Move [X8+8], S1
	240 Move [X8+8], S2
	241 Move [X8+16], S3
	242 Call Component.get_transform, X0
	243 Compare X0, 0
	244 JumpIfEqual {275}
	245 Move X1, X31
	246 Call Transform.get_lossyScale, X0
	247 Move X0, X31
	248 Call float3.op_Implicit, X0
	249 Move X8, [X20+296]
	250 Move W9, 12
	251 NotImplemented "Instruction MADD not yet implemented."
	252 Move [X8], S0
	253 Move [X8+8], S1
	254 Move [X8+8], S2
	255 Move X8, [X20+312]
	256 Move W9, 1
	257 Move [X8], W9
	258 Add X31, X31, 384
	259 Move X20, [X31+112]
	260 Move X19, [X31+120]
	261 Move X22, [X31+96]
	262 Move X21, [X31+104]
	263 Move X30, [X31+80]
	264 Move X23, [X31+88]
	265 Move X29, [X31+64]
	266 Move D9, [X31+48]
	267 Move D8, [X31+56]
	268 Move D11, [X31+32]
	269 Move D10, [X31+40]
	270 Move D13, [X31+16]
	271 Move D12, [X31+24]
	272 Move D15, [X31+128]
	273 Move D14, [X31+136]
	274 Return 
	275 Call 0x1C17F20

Method: System.Void DestroyDecalEntity(UnityEngine.Rendering.Universal.DecalEntity decalEntity)

Disassembly:
	0x03A3F85C TBZ X0, 0x0, 0x3A3F878
	0x03A3F860 LDR X0, [X31 + 0x60]
	0x03A3F864 CBZ X0, 0x3A3FA30
	0x03A3F868 LDR X8, [X0]
	0x03A3F86C LDP X9, X1, [X8 + 0x1B8]
	0x03A3F870 BLR X9
	0x03A3F874 B 0x3A3F850
	0x03A3F878 ADRP X8, 0x716000
	0x03A3F87C LDR X8, [X8 + 0xA20]
	0x03A3F880 ADD X0, X31, 0x50
	0x03A3F884 LDR X1, [X8]
	0x03A3F888 BL 0x2BC434C
	0x03A3F88C LDR X0, [X19 + 0x28]
	0x03A3F890 CBZ X0, 0x3A3FA38
	0x03A3F894 ADRP X8, 0x716000
	0x03A3F898 LDR X8, [X8 + 0xA90]
	0x03A3F89C LDR X1, [X8]
	0x03A3F8A0 ADD X8, X31, 0x18
	0x03A3F8A4 BL 0x301CB58
	0x03A3F8A8 LDUR V0, [X31 + 0x18]
	0x03A3F8AC LDR X8, [X31 + 0x28]
	0x03A3F8B0 STR V0, [X31 + 0x3]
	0x03A3F8B4 STR X8, [X31 + 0x40]
	0x03A3F8B8 LDR X1, [X24]
	0x03A3F8BC ADD X0, X31, 0x30
	0x03A3F8C0 BL 0x2BC4350
	0x03A3F8C4 TBZ X0, 0x0, 0x3A3F8E0
	0x03A3F8C8 LDR X0, [X31 + 0x40]
	0x03A3F8CC CBZ X0, 0x3A3FA34
	0x03A3F8D0 LDR X8, [X0]
	0x03A3F8D4 LDP X9, X1, [X8 + 0x1B8]
	0x03A3F8D8 BLR X9
	0x03A3F8DC B 0x3A3F8B8
	0x03A3F8E0 ADRP X8, 0x716000
	0x03A3F8E4 LDR X8, [X8 + 0xA28]
	0x03A3F8E8 ADD X0, X31, 0x30
	0x03A3F8EC LDR X1, [X8]
	0x03A3F8F0 BL 0x2BC434C
	0x03A3F8F4 LDR X0, [X19 + 0x50]
	0x03A3F8F8 CBZ X0, 0x3A3FA38
	0x03A3F8FC BL 0x3A3D1A0
	0x03A3F900 LDR X0, [X19 + 0x58]
	0x03A3F904 CBZ X0, 0x3A3FA38
	0x03A3F908 ADRP X8, 0x716000
	0x03A3F90C LDR X8, [X8 + 0x9A0]
	0x03A3F910 LDR X1, [X8]
	0x03A3F914 BL 0x2A9F124
	0x03A3F918 LDR X8, [X19 + 0x10]
	0x03A3F91C CBZ X8, 0x3A3FA38
	0x03A3F920 LDP W2, W9, [X8 + 0x18]
	0x03A3F924 ADD W9, W9, 0x1
	0x03A3F928 CMP W2, 0x1
	0x03A3F92C STP W31, W9, [X8 + 0x18]
	0x03A3F930 B.LT 0x3A3F944
	0x03A3F934 LDR X0, [X8 + 0x10]
	0x03A3F938 MOV W1, W31
	0x03A3F93C MOV X3, X31
	0x03A3F940 BL 0x339FA34
	0x03A3F944 LDR X8, [X19 + 0x18]
	0x03A3F948 CBZ X8, 0x3A3FA38
	0x03A3F94C LDP W2, W9, [X8 + 0x18]
	0x03A3F950 ADD W9, W9, 0x1
	0x03A3F954 CMP W2, 0x1
	0x03A3F958 STP W31, W9, [X8 + 0x18]
	0x03A3F95C B.LT 0x3A3F970
	0x03A3F960 LDR X0, [X8 + 0x10]
	0x03A3F964 MOV W1, W31
	0x03A3F968 MOV X3, X31
	0x03A3F96C BL 0x339FA34
	0x03A3F970 LDR X8, [X19 + 0x20]
	0x03A3F974 CBZ X8, 0x3A3FA38
	0x03A3F978 LDP W2, W9, [X8 + 0x18]
	0x03A3F97C ADD W9, W9, 0x1
	0x03A3F980 CMP W2, 0x1
	0x03A3F984 STP W31, W9, [X8 + 0x18]
	0x03A3F988 B.LT 0x3A3F99C
	0x03A3F98C LDR X0, [X8 + 0x10]
	0x03A3F990 MOV W1, W31
	0x03A3F994 MOV X3, X31
	0x03A3F998 BL 0x339FA34
	0x03A3F99C LDR X8, [X19 + 0x28]
	0x03A3F9A0 CBZ X8, 0x3A3FA38
	0x03A3F9A4 LDP W2, W9, [X8 + 0x18]
	0x03A3F9A8 ADD W9, W9, 0x1
	0x03A3F9AC CMP W2, 0x1
	0x03A3F9B0 STP W31, W9, [X8 + 0x18]
	0x03A3F9B4 B.LT 0x3A3F9C8
	0x03A3F9B8 LDR X0, [X8 + 0x10]
	0x03A3F9BC MOV W1, W31
	0x03A3F9C0 MOV X3, X31
	0x03A3F9C4 BL 0x339FA34
	0x03A3F9C8 LDR X8, [X19 + 0x60]
	0x03A3F9CC CBZ X8, 0x3A3FA38
	0x03A3F9D0 LDP W2, W9, [X8 + 0x18]
	0x03A3F9D4 ADD W9, W9, 0x1
	0x03A3F9D8 CMP W2, 0x1
	0x03A3F9DC STP W31, W9, [X8 + 0x18]
	0x03A3F9E0 B.LT 0x3A3F9F4
	0x03A3F9E4 LDR X0, [X8 + 0x10]
	0x03A3F9E8 MOV W1, W31
	0x03A3F9EC MOV X3, X31
	0x03A3F9F0 BL 0x339FA34
	0x03A3F9F4 STR W31, [X19 + 0x30]
	0x03A3F9F8 LDP X20, X19, [X31 + 0x110]
	0x03A3F9FC LDP X22, X21, [X31 + 0x100]
	0x03A3FA00 LDP X24, X23, [X31 + 0xF0]
	0x03A3FA04 LDP X26, X25, [X31 + 0xE0]
	0x03A3FA08 LDP X28, X27, [X31 + 0xD0]
	0x03A3FA0C LDP X29, X30, [X31 + 0xC0]
	0x03A3FA10 ADD X31, X31, 0x120
	0x03A3FA14 RET
	0x03A3FA18 BL 0x1C16F20
	0x03A3FA1C BL 0x1C16F20
	0x03A3FA20 BL 0x1C16F20
	0x03A3FA24 BL 0x1C16F20
	0x03A3FA28 BL 0x1C16F20
	0x03A3FA2C BL 0x1C16F20
	0x03A3FA30 BL 0x1C16F20

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x9A4000
	009 Move W8, [X21+340]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {30}
	016 Move X0, 0x717000
	017 Move X0, [X0+2000]
	018 Call 0x1C17CF4
	019 Move X0, 0x717000
	020 Move X0, [X0+2008]
	021 Call 0x1C17CF4
	022 Move X0, 0x717000
	023 Move X0, [X0+2016]
	024 Call 0x1C17CF4
	025 Move X0, 0x717000
	026 Move X0, [X0+2032]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X21+340], W8
	030 Move X0, [X19+80]
	031 Compare X0, 0
	032 JumpIfEqual {150}
	033 Move X1, X20
	034 Call DecalEntityIndexer.IsValid, X0, X1
	035 Move TEMP, X0
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfNotEqual {142}
	039 Move X0, [X19+80]
	040 Compare X0, 0
	041 JumpIfEqual {150}
	042 Move X1, X20
	043 Call DecalEntityIndexer.GetItem, X0, X1
	044 Move X8, [X19+80]
	045 Compare X8, 0
	046 JumpIfEqual {150}
	047 Move X21, X0
	048 Move X0, X8
	049 Move X1, X20
	050 Call DecalEntityIndexer.DestroyDecalEntity, X0, X1
	051 Move X0, [X19+16]
	052 Compare X0, 0
	053 JumpIfEqual {150}
	054 Move X8, 0x717000
	055 Move X8, [X8+2032]
	056 Move W1, W21
	057 Move X2, [X8]
	058 Call List`1<Object>.get_Item, X0, X1
	059 Move X8, [X19+24]
	060 Compare X8, 0
	061 JumpIfEqual {150}
	062 Move X9, 0x717000
	063 Move X9, [X9+2016]
	064 Move X20, X0
	065 Move X0, X8
	066 Move W1, W21
	067 Move X2, [X9]
	068 Call List`1<Object>.get_Item, X0, X1
	069 Move X8, [X19+32]
	070 Compare X8, 0
	071 JumpIfEqual {150}
	072 Move X9, 0x717000
	073 Move X9, [X9+2000]
	074 Move X22, X0
	075 Move X0, X8
	076 Move W1, W21
	077 Move X2, [X9]
	078 Call List`1<Object>.get_Item, X0, X1
	079 Move X8, [X19+40]
	080 Compare X8, 0
	081 JumpIfEqual {150}
	082 Move X9, 0x717000
	083 Move X9, [X9+2008]
	084 Move X23, X0
	085 Move X0, X8
	086 Move W1, W21
	087 Move X2, [X9]
	088 Call List`1<Object>.get_Item, X0, X1
	089 Compare X20, 0
	090 JumpIfEqual {150}
	091 Move W8, [X20+16]
	092 Move X21, X21
	093 ShiftRight X21, 32
	094 And X21, X21, 0x7FFFFFFF
	095 Move X24, X0
	096 Subtract W8, W8, 1
	097 NotImplemented "Instruction CMP not yet implemented."
	098 Move X0, [X19+80]
	099 Compare X0, 0
	100 JumpIfEqual {150}
	101 Move X9, [X20+48]
	102 Move W2, W21
	103 Move X1, [X9]
	104 Call DecalEntityIndexer.UpdateIndex, X0, X1, X2
	105 Move X8, [X20]
	106 Move X0, X20
	107 Move W1, W21
	108 Move X9, [X8+408]
	109 Move X2, [X8+416]
	110 NotImplemented "Instruction BLR not yet implemented."
	111 Compare X22, 0
	112 JumpIfEqual {150}
	113 Move X8, [X22]
	114 Move X0, X22
	115 Move W1, W21
	116 Move X9, [X8+408]
	117 Move X2, [X8+416]
	118 NotImplemented "Instruction BLR not yet implemented."
	119 Compare X23, 0
	120 JumpIfEqual {150}
	121 Move X8, [X23]
	122 Move X0, X23
	123 Move W1, W21
	124 Move X9, [X8+408]
	125 Move X2, [X8+416]
	126 NotImplemented "Instruction BLR not yet implemented."
	127 Compare X24, 0
	128 JumpIfEqual {150}
	129 Move X8, [X24]
	130 Move X0, X24
	131 Move W1, W21
	132 Move X20, [X31+48]
	133 Move X19, [X31+56]
	134 Move X3, [X8+408]
	135 Move X2, [X8+416]
	136 Move X22, [X31+32]
	137 Move X21, [X31+40]
	138 Move X24, [X31+16]
	139 Move X23, [X31+24]
	140 Move X30, [X31+64]
	141 CallNoReturn X3
	142 Move X20, [X31+48]
	143 Move X19, [X31+56]
	144 Move X22, [X31+32]
	145 Move X21, [X31+40]
	146 Move X24, [X31+16]
	147 Move X23, [X31+24]
	148 Move X30, [X31+64]
	149 Return 
	150 Call 0x1C17F20

Method: System.Void Update()

Disassembly:
	0x03A3FA34 BL 0x1C16F20
	0x03A3FA38 BL 0x1C16F20
	0x03A3FA3C B 0x3A3FA7C
	0x03A3FA40 B 0x3A3FA7C
	0x03A3FA44 B 0x3A3FAE0
	0x03A3FA48 B 0x3A3FAE0
	0x03A3FA4C B 0x3A3FB44
	0x03A3FA50 B 0x3A3FB44
	0x03A3FA54 B 0x3A3FB9C
	0x03A3FA58 B 0x3A3FB9C
	0x03A3FA5C B 0x3A3FBF4
	0x03A3FA60 B 0x3A3FBF4
	0x03A3FA64 B 0x3A3FC64
	0x03A3FA68 B 0x3A3FC64
	0x03A3FA6C B 0x3A3FCD4
	0x03A3FA70 B 0x3A3FCD4
	0x03A3FA74 B 0x3A3FD34
	0x03A3FA78 B 0x3A3FD34
	0x03A3FA7C CMP W1, 0x1
	0x03A3FA80 STR X0, [X31 + 0x10]
	0x03A3FA84 B.NE 0x3A3FAB4
	0x03A3FA88 LDR X0, [X31 + 0x10]
	0x03A3FA8C BL 0x3EB1AD0
	0x03A3FA90 LDR X21, [X0]
	0x03A3FA94 BL 0x3EB1AE0
	0x03A3FA98 ADRP X8, 0x716000
	0x03A3FA9C LDR X8, [X8 + 0xA28]
	0x03A3FAA0 ADD X0, X31, 0x30
	0x03A3FAA4 LDR X1, [X8]
	0x03A3FAA8 BL 0x2BC434C
	0x03A3FAAC CBZ X21, 0x3A3F8F4
	0x03A3FAB0 B 0x3A3FB70
	0x03A3FAB4 MOV X21, X31
	0x03A3FAB8 B 0x3A3FAC0
	0x03A3FABC STR X0, [X31 + 0x10]
	0x03A3FAC0 ADRP X8, 0x716000
	0x03A3FAC4 LDR X8, [X8 + 0xA28]
	0x03A3FAC8 LDR X1, [X8]
	0x03A3FACC ADD X0, X31, 0x30
	0x03A3FAD0 BL 0x2BC434C
	0x03A3FAD4 CBZ X21, 0x3A3FD90
	0x03A3FAD8 MOV X0, X21
	0x03A3FADC BL 0x1C16F18
	0x03A3FAE0 CMP W1, 0x1
	0x03A3FAE4 STR X0, [X31 + 0x10]
	0x03A3FAE8 B.NE 0x3A3FB18
	0x03A3FAEC LDR X0, [X31 + 0x10]
	0x03A3FAF0 BL 0x3EB1AD0
	0x03A3FAF4 LDR X21, [X0]
	0x03A3FAF8 BL 0x3EB1AE0
	0x03A3FAFC ADRP X8, 0x716000
	0x03A3FB00 LDR X8, [X8 + 0xA20]
	0x03A3FB04 ADD X0, X31, 0x50
	0x03A3FB08 LDR X1, [X8]
	0x03A3FB0C BL 0x2BC434C
	0x03A3FB10 CBZ X21, 0x3A3F88C
	0x03A3FB14 B 0x3A3FB70
	0x03A3FB18 MOV X21, X31
	0x03A3FB1C B 0x3A3FB24
	0x03A3FB20 STR X0, [X31 + 0x10]
	0x03A3FB24 ADRP X8, 0x716000
	0x03A3FB28 LDR X8, [X8 + 0xA20]
	0x03A3FB2C LDR X1, [X8]
	0x03A3FB30 ADD X0, X31, 0x50
	0x03A3FB34 BL 0x2BC434C
	0x03A3FB38 CBZ X21, 0x3A3FD90
	0x03A3FB3C MOV X0, X21
	0x03A3FB40 BL 0x1C16F18
	0x03A3FB44 CMP W1, 0x1
	0x03A3FB48 STR X0, [X31 + 0x10]
	0x03A3FB4C B.NE 0x3A3FB78
	0x03A3FB50 LDR X0, [X31 + 0x10]
	0x03A3FB54 BL 0x3EB1AD0
	0x03A3FB58 LDR X21, [X0]
	0x03A3FB5C BL 0x3EB1AE0
	0x03A3FB60 LDR X1, [X29]
	0x03A3FB64 ADD X0, X31, 0x70
	0x03A3FB68 BL 0x2BC434C
	0x03A3FB6C CBZ X21, 0x3A3F82C
	0x03A3FB70 MOV X0, X21
	0x03A3FB74 BL 0x1C16F18
	0x03A3FB78 MOV X21, X31
	0x03A3FB7C B 0x3A3FB84
	0x03A3FB80 STR X0, [X31 + 0x10]
	0x03A3FB84 LDR X1, [X29]
	0x03A3FB88 ADD X0, X31, 0x70
	0x03A3FB8C BL 0x2BC434C
	0x03A3FB90 CBZ X21, 0x3A3FD90
	0x03A3FB94 MOV X0, X21
	0x03A3FB98 BL 0x1C16F18
	0x03A3FB9C CMP W1, 0x1
	0x03A3FBA0 STR X0, [X31 + 0x10]
	0x03A3FBA4 B.NE 0x3A3FBD0
	0x03A3FBA8 LDR X0, [X31 + 0x10]
	0x03A3FBAC BL 0x3EB1AD0
	0x03A3FBB0 LDR X23, [X0]
	0x03A3FBB4 BL 0x3EB1AE0
	0x03A3FBB8 LDR X1, [X22]
	0x03A3FBBC ADD X0, X31, 0xA0
	0x03A3FBC0 BL 0x2BC434C
	0x03A3FBC4 CBZ X23, 0x3A3F7D4
	0x03A3FBC8 MOV X0, X23
	0x03A3FBCC BL 0x1C16F18
	0x03A3FBD0 MOV X23, X31
	0x03A3FBD4 B 0x3A3FBDC
	0x03A3FBD8 STR X0, [X31 + 0x10]
	0x03A3FBDC LDR X1, [X22]
	0x03A3FBE0 ADD X0, X31, 0xA0
	0x03A3FBE4 BL 0x2BC434C
	0x03A3FBE8 CBZ X23, 0x3A3FD90
	0x03A3FBEC MOV X0, X23
	0x03A3FBF0 BL 0x1C16F18
	0x03A3FBF4 CMP W1, 0x1
	0x03A3FBF8 STR X0, [X31 + 0x10]
	0x03A3FBFC B.NE 0x3A3FC34
	0x03A3FC00 LDR X0, [X31 + 0x10]
	0x03A3FC04 BL 0x3EB1AD0
	0x03A3FC08 LDR X8, [X0]
	0x03A3FC0C STR X8, [X31 + 0x8]
	0x03A3FC10 BL 0x3EB1AE0
	0x03A3FC14 ADRP X8, 0x716000
	0x03A3FC18 LDR X8, [X8 + 0xA28]
	0x03A3FC1C ADD X0, X31, 0x30
	0x03A3FC20 LDR X1, [X8]
	0x03A3FC24 BL 0x2BC434C
	0x03A3FC28 LDR X8, [X31 + 0x8]
	0x03A3FC2C CBZ X8, 0x3A3F77C
	0x03A3FC30 B 0x3A3FD68
	0x03A3FC34 MOV X19, X31
	0x03A3FC38 B 0x3A3FC44
	0x03A3FC3C LDR X19, [X31 + 0x8]
	0x03A3FC40 STR X0, [X31 + 0x10]
	0x03A3FC44 ADRP X8, 0x716000
	0x03A3FC48 LDR X8, [X8 + 0xA28]
	0x03A3FC4C LDR X1, [X8]
	0x03A3FC50 ADD X0, X31, 0x30
	0x03A3FC54 BL 0x2BC434C
	0x03A3FC58 CBZ X19, 0x3A3FD90
	0x03A3FC5C MOV X0, X19
	0x03A3FC60 BL 0x1C16F18
	0x03A3FC64 CMP W1, 0x1
	0x03A3FC68 STR X0, [X31 + 0x10]
	0x03A3FC6C B.NE 0x3A3FCA4
	0x03A3FC70 LDR X0, [X31 + 0x10]
	0x03A3FC74 BL 0x3EB1AD0
	0x03A3FC78 LDR X8, [X0]
	0x03A3FC7C STR X8, [X31 + 0x8]
	0x03A3FC80 BL 0x3EB1AE0
	0x03A3FC84 ADRP X8, 0x716000
	0x03A3FC88 LDR X8, [X8 + 0xA20]
	0x03A3FC8C ADD X0, X31, 0x50
	0x03A3FC90 LDR X1, [X8]
	0x03A3FC94 BL 0x2BC434C
	0x03A3FC98 LDR X8, [X31 + 0x8]
	0x03A3FC9C CBZ X8, 0x3A3F70C
	0x03A3FCA0 B 0x3A3FD68
	0x03A3FCA4 MOV X19, X31
	0x03A3FCA8 B 0x3A3FCB4
	0x03A3FCAC LDR X19, [X31 + 0x8]
	0x03A3FCB0 STR X0, [X31 + 0x10]
	0x03A3FCB4 ADRP X8, 0x716000
	0x03A3FCB8 LDR X8, [X8 + 0xA20]
	0x03A3FCBC LDR X1, [X8]
	0x03A3FCC0 ADD X0, X31, 0x50
	0x03A3FCC4 BL 0x2BC434C
	0x03A3FCC8 CBZ X19, 0x3A3FD90
	0x03A3FCCC MOV X0, X19
	0x03A3FCD0 BL 0x1C16F18
	0x03A3FCD4 CMP W1, 0x1
	0x03A3FCD8 STR X0, [X31 + 0x10]
	0x03A3FCDC B.NE 0x3A3FD0C
	0x03A3FCE0 LDR X0, [X31 + 0x10]
	0x03A3FCE4 BL 0x3EB1AD0
	0x03A3FCE8 LDR X8, [X0]
	0x03A3FCEC STR X8, [X31 + 0x8]
	0x03A3FCF0 BL 0x3EB1AE0
	0x03A3FCF4 LDR X1, [X29]
	0x03A3FCF8 ADD X0, X31, 0x70
	0x03A3FCFC BL 0x2BC434C
	0x03A3FD00 LDR X8, [X31 + 0x8]
	0x03A3FD04 CBZ X8, 0x3A3F6A4
	0x03A3FD08 B 0x3A3FD68
	0x03A3FD0C MOV X19, X31
	0x03A3FD10 B 0x3A3FD1C
	0x03A3FD14 LDR X19, [X31 + 0x8]
	0x03A3FD18 STR X0, [X31 + 0x10]
	0x03A3FD1C LDR X1, [X29]
	0x03A3FD20 ADD X0, X31, 0x70
	0x03A3FD24 BL 0x2BC434C
	0x03A3FD28 CBZ X19, 0x3A3FD90
	0x03A3FD2C MOV X0, X19
	0x03A3FD30 BL 0x1C16F18
	0x03A3FD34 CMP W1, 0x1
	0x03A3FD38 STR X0, [X31 + 0x10]
	0x03A3FD3C B.NE 0x3A3FD70
	0x03A3FD40 LDR X0, [X31 + 0x10]
	0x03A3FD44 BL 0x3EB1AD0
	0x03A3FD48 LDR X8, [X0]
	0x03A3FD4C STR X8, [X31 + 0x8]
	0x03A3FD50 BL 0x3EB1AE0
	0x03A3FD54 LDR X1, [X22]
	0x03A3FD58 ADD X0, X31, 0xA0
	0x03A3FD5C BL 0x2BC434C
	0x03A3FD60 LDR X8, [X31 + 0x8]
	0x03A3FD64 CBZ X8, 0x3A3F644
	0x03A3FD68 MOV X0, X8
	0x03A3FD6C BL 0x1C16F18
	0x03A3FD70 MOV X19, X31
	0x03A3FD74 B 0x3A3FD80
	0x03A3FD78 LDR X19, [X31 + 0x8]
	0x03A3FD7C STR X0, [X31 + 0x10]
	0x03A3FD80 LDR X1, [X22]
	0x03A3FD84 ADD X0, X31, 0xA0
	0x03A3FD88 BL 0x2BC434C
	0x03A3FD8C CBNZ X19, 0x3A3FD98
	0x03A3FD90 LDR X0, [X31 + 0x10]
	0x03A3FD94 BL 0x1D2C690
	0x03A3FD98 MOV X0, X19
	0x03A3FD9C BL 0x1C16F18
	0x03A3FDA0 BL 0x1990590
	0x03A3FDA4 STR X30, [X31 - 0x20]!
	0x03A3FDA8 STP X20, X19, [X31 + 0x10]
	0x03A3FDAC ADRP X19, 0x9A3000
	0x03A3FDB0 ADRP X20, 0x716000
	0x03A3FDB4 LDRB W8, [X19 + 0x157]
	0x03A3FDB8 LDR X20, [X20 + 0xA18]
	0x03A3FDBC TBNZ X8, 0x0, 0x3A3FDD4
	0x03A3FDC0 ADRP X0, 0x716000
	0x03A3FDC4 LDR X0, [X0 + 0xA18]
	0x03A3FDC8 BL 0x1C16CF4
	0x03A3FDCC MOVZ W8, 0x1
	0x03A3FDD0 STRB W8, [X19 + 0x157]
	0x03A3FDD4 LDR X0, [X20]
	0x03A3FDD8 BL 0x1C16F10
	0x03A3FDDC MOV X1, X31
	0x03A3FDE0 MOV X19, X0
	0x03A3FDE4 BL 0x33BDD8C
	0x03A3FDE8 LDR X8, [X20]
	0x03A3FDEC LDR X8, [X8 + 0xB8]
	0x03A3FDF0 STR X19, [X8]
	0x03A3FDF4 LDP X20, X19, [X31 + 0x10]
	0x03A3FDF8 LDR X30, [X31], #0x20
	0x03A3FDFC RET
	0x03A3FE00 MOV X1, X31
	0x03A3FE04 B 0x33BDD8C
	0x03A3FE08 SUB X31, X31, 0x20
	0x03A3FE0C STP X30, X19, [X31 + 0x10]
	0x03A3FE10 LDRB W9, [X1 + 0x24]
	0x03A3FE14 LDRB W8, [X2 + 0x24]
	0x03A3FE18 MOV X19, X2
	0x03A3FE1C TBNZ X9, 0x0, 0x3A3FE28
	0x03A3FE20 TBZ X8, 0x0, 0x3A3FE2C
	0x03A3FE24 B 0x3A3FE58
	0x03A3FE28 TBZ X8, 0x0, 0x3A3FE4C
	0x03A3FE2C LDR X8, [X1 + 0x8]
	0x03A3FE30 CBZ X8, 0x3A3FEB8
	0x03A3FE34 LDR X9, [X19 + 0x8]
	0x03A3FE38 CBZ X9, 0x3A3FEB8
	0x03A3FE3C LDR W8, [X8 + 0x40]
	0x03A3FE40 LDR W9, [X9 + 0x40]
	0x03A3FE44 CMP W8, W9
	0x03A3FE48 B.GE 0x3A3FE54
	0x03A3FE4C MOVN W0, 0x0
	0x03A3FE50 B 0x3A3FEAC
	0x03A3FE54 B.LE 0x3A3FE60
	0x03A3FE58 MOVZ W0, 0x1
	0x03A3FE5C B 0x3A3FEAC
	0x03A3FE60 LDR X8, [X1]
	0x03A3FE64 CBZ X8, 0x3A3FEB8
	0x03A3FE68 LDR X0, [X8 + 0x28]
	0x03A3FE6C CBZ X0, 0x3A3FEB8
	0x03A3FE70 LDR X8, [X0]
	0x03A3FE74 LDP X9, X1, [X8 + 0x158]
	0x03A3FE78 BLR X9
	0x03A3FE7C STR W0, [X31 + 0xC]
	0x03A3FE80 LDR X8, [X19]
	0x03A3FE84 CBZ X8, 0x3A3FEB8
	0x03A3FE88 LDR X0, [X8 + 0x28]
	0x03A3FE8C CBZ X0, 0x3A3FEB8
	0x03A3FE90 LDR X8, [X0]
	0x03A3FE94 LDP X9, X1, [X8 + 0x158]
	0x03A3FE98 BLR X9
	0x03A3FE9C MOV W1, W0
	0x03A3FEA0 ADD X0, X31, 0xC
	0x03A3FEA4 MOV X2, X31
	0x03A3FEA8 BL 0x337B634
	0x03A3FEAC LDP X30, X19, [X31 + 0x10]
	0x03A3FEB0 ADD X31, X31, 0x20
	0x03A3FEB4 RET
	0x03A3FEB8 BL 0x1C16F20
	0x03A3FEBC STP X30, X23, [X31 - 0x30]!
	0x03A3FEC0 STP X22, X21, [X31 + 0x10]
	0x03A3FEC4 STP X20, X19, [X31 + 0x20]
	0x03A3FEC8 ADRP X23, 0x9A3000
	0x03A3FECC ADRP X22, 0x711000
	0x03A3FED0 ADRP X21, 0x716000
	0x03A3FED4 LDRB W8, [X23 + 0x158]
	0x03A3FED8 LDR X22, [X22 + 0x598]
	0x03A3FEDC LDR X21, [X21 + 0xAA8]
	0x03A3FEE0 MOV X20, X1
	0x03A3FEE4 MOV X19, X0
	0x03A3FEE8 TBNZ X8, 0x0, 0x3A3FF0C
	0x03A3FEEC ADRP X0, 0x711000
	0x03A3FEF0 LDR X0, [X0 + 0x598]
	0x03A3FEF4 BL 0x1C16CF4
	0x03A3FEF8 ADRP X0, 0x716000
	0x03A3FEFC LDR X0, [X0 + 0xAA8]
	0x03A3FF00 BL 0x1C16CF4
	0x03A3FF04 MOVZ W8, 0x1
	0x03A3FF08 STRB W8, [X23 + 0x158]
	0x03A3FF0C MOV X0, X19
	0x03A3FF10 MOV X1, X31
	0x03A3FF14 BL 0x33BDD8C
	0x03A3FF18 STR X20, [X19 + 0x10]
	0x03A3FF1C LDR X0, [X22]
	0x03A3FF20 BL 0x1C16F10
	0x03A3FF24 LDR X1, [X21]
	0x03A3FF28 MOV X2, X31
	0x03A3FF2C MOV X20, X0
	0x03A3FF30 BL 0x39B19AC
	0x03A3FF34 STR X20, [X19 + 0x18]
	0x03A3FF38 LDP X20, X19, [X31 + 0x20]
	0x03A3FF3C LDP X22, X21, [X31 + 0x10]
	0x03A3FF40 LDP X30, X23, [X31], #0x30
	0x03A3FF44 RET
	0x03A3FF48 STR X30, [X31 - 0x30]!
	0x03A3FF4C STP X22, X21, [X31 + 0x10]
	0x03A3FF50 STP X20, X19, [X31 + 0x20]
	0x03A3FF54 ADRP X21, 0x9A3000
	0x03A3FF58 LDRB W8, [X21 + 0x159]
	0x03A3FF5C MOV X20, X1
	0x03A3FF60 MOV X19, X0
	0x03A3FF64 TBNZ X8, 0x0, 0x3A3FF7C
	0x03A3FF68 ADRP X0, 0x716000
	0x03A3FF6C LDR X0, [X0 + 0x7D0]
	0x03A3FF70 BL 0x1C16CF4
	0x03A3FF74 MOVZ W8, 0x1
	0x03A3FF78 STRB W8, [X21 + 0x159]
	0x03A3FF7C STRB W31, [X31 + 0x8]
	0x03A3FF80 LDR X2, [X19 + 0x18]
	0x03A3FF84 ADD X0, X31, 0x8
	0x03A3FF88 MOV X1, X31
	0x03A3FF8C MOV X3, X31
	0x03A3FF90 BL 0x39B1DB0
	0x03A3FF94 LDR X8, [X19 + 0x10]
	0x03A3FF98 STR X20, [X19 + 0x20]
	0x03A3FF9C CBZ X8, 0x3A4000C
	0x03A3FFA0 ADRP X22, 0x716000
	0x03A3FFA4 LDR X22, [X22 + 0x7D0]
	0x03A3FFA8 MOV W20, W31
	0x03A3FFAC LDR W9, [X8 + 0x30]
	0x03A3FFB0 CMP W20, W9
	0x03A3FFB4 B.GE 0x3A40010
	0x03A3FFB8 LDR X0, [X8 + 0x20]
	0x03A3FFBC CBZ X0, 0x3A40038
	0x03A3FFC0 LDR X2, [X22]
	0x03A3FFC4 MOV W1, W20
	0x03A3FFC8 BL 0x301BCCC
	0x03A3FFCC LDR X8, [X19 + 0x10]
	0x03A3FFD0 CBZ X8, 0x3A40030
	0x03A3FFD4 MOV X21, X0
	0x03A3FFD8 LDR X0, [X8 + 0x20]
	0x03A3FFDC CBZ X0, 0x3A40034
	0x03A3FFE0 LDR X2, [X22]
	0x03A3FFE4 MOV W1, W20
	0x03A3FFE8 BL 0x301BCCC
	0x03A3FFEC CBZ X0, 0x3A4002C
	0x03A3FFF0 LDR W2, [X0 + 0x10]
	0x03A3FFF4 MOV X0, X19
	0x03A3FFF8 MOV X1, X21
	0x03A3FFFC BL 0x3A400BC
	0x03A40000 LDR X8, [X19 + 0x10]
	0x03A40004 ADD W20, W20, 0x1
	0x03A40008 CBNZ X8, 0x3A3FFAC
	0x03A4000C BL 0x1C16F20
	0x03A40010 ADD X0, X31, 0x8
	0x03A40014 MOV X1, X31
	0x03A40018 BL 0x39B1DB4
	0x03A4001C LDP X20, X19, [X31 + 0x20]
	0x03A40020 LDP X22, X21, [X31 + 0x10]
	0x03A40024 LDR X30, [X31], #0x30
	0x03A40028 RET
	0x03A4002C BL 0x1C16F20
	0x03A40030 BL 0x1C16F20
	0x03A40034 BL 0x1C16F20
	0x03A40038 BL 0x1C16F20
	0x03A4003C B 0x3A40058
	0x03A40040 B 0x3A40058
	0x03A40044 B 0x3A40058
	0x03A40048 B 0x3A40058
	0x03A4004C B 0x3A40058
	0x03A40050 B 0x3A40058
	0x03A40054 B 0x3A40058
	0x03A40058 MOV X19, X0
	0x03A4005C CMP W1, 0x1
	0x03A40060 B.NE 0x3A4008C
	0x03A40064 MOV X0, X19
	0x03A40068 BL 0x3EB1AD0
	0x03A4006C LDR X20, [X0]
	0x03A40070 BL 0x3EB1AE0
	0x03A40074 ADD X0, X31, 0x8
	0x03A40078 MOV X1, X31
	0x03A4007C BL 0x39B1DB4
	0x03A40080 CBZ X20, 0x3A4001C
	0x03A40084 MOV X0, X20
	0x03A40088 BL 0x1C16F18
	0x03A4008C MOV X20, X31
	0x03A40090 B 0x3A40098
	0x03A40094 MOV X19, X0
	0x03A40098 ADD X0, X31, 0x8
	0x03A4009C MOV X1, X31
	0x03A400A0 BL 0x39B1DB4
	0x03A400A4 CBNZ X20, 0x3A400B0
	0x03A400A8 MOV X0, X19
	0x03A400AC BL 0x1D2C690
	0x03A400B0 MOV X0, X20
	0x03A400B4 BL 0x1C16F18
	0x03A400B8 BL 0x1990590
	0x03A400BC SUB X31, X31, 0x30
	0x03A400C0 STP X30, X21, [X31 + 0x10]
	0x03A400C4 STP X20, X19, [X31 + 0x20]
	0x03A400C8 CBZ W2, 0x3A40150
	0x03A400CC MOV X19, X1
	0x03A400D0 CBZ X1, 0x3A40160
	0x03A400D4 LDUR V0, [X19 + 0x18]
	0x03A400D8 MOV X20, X0
	0x03A400DC ADD X0, X31, 0x0
	0x03A400E0 MOV X1, X31
	0x03A400E4 MOV W21, W2
	0x03A400E8 STR V0, [X31]
	0x03A400EC BL 0x3BFDCAC
	0x03A400F0 CMP W21, 0x1
	0x03A400F4 B.LT 0x3A40114
	0x03A400F8 LDR X9, [X19 + 0x58]
	0x03A400FC MOV X8, X31
	0x03A40100 MOV W10, W21
	0x03A40104 STR W8, [X9, X8, LSL #2]
	0x03A40108 ADD X8, X8, 0x1
	0x03A4010C CMP X10, X8
	0x03A40110 B.NE 0x3A40104
	0x03A40114 STR W21, [X19 + 0x68]
	0x03A40118 LDR X0, [X20 + 0x20]
	0x03A4011C CBZ X0, 0x3A40160
	0x03A40120 MOV X1, X31
	0x03A40124 BL 0x3C32E90
	0x03A40128 CBZ X0, 0x3A40160
	0x03A4012C MOV X1, X31
	0x03A40130 BL 0x3C3F58C
	0x03A40134 STP S0, S1, [X19 + 0x28]
	0x03A40138 STR S2, [X19 + 0x30]
	0x03A4013C LDR X0, [X20 + 0x20]
	0x03A40140 CBZ X0, 0x3A40160
	0x03A40144 MOV X1, X31
	0x03A40148 BL 0x3C03A18
	0x03A4014C STR W0, [X19 + 0x40]
	0x03A40150 LDP X20, X19, [X31 + 0x20]
	0x03A40154 LDP X30, X21, [X31 + 0x10]
	0x03A40158 ADD X31, X31, 0x30
	0x03A4015C RET
	0x03A40160 BL 0x1C16F20
	0x03A40164 MOV X0, X31
	0x03A40168 RET
	0x03A4016C STP X29, X30, [X31 - 0x60]!
	0x03A40170 STP X28, X27, [X31 + 0x10]
	0x03A40174 STP X26, X25, [X31 + 0x20]
	0x03A40178 STP X24, X23, [X31 + 0x30]
	0x03A4017C STP X22, X21, [X31 + 0x40]
	0x03A40180 STP X20, X19, [X31 + 0x50]
	0x03A40184 ADRP X26, 0x9A2000
	0x03A40188 ADRP X25, 0x715000
	0x03A4018C ADRP X24, 0x715000
	0x03A40190 ADRP X23, 0x715000
	0x03A40194 ADRP X21, 0x715000
	0x03A40198 ADRP X29, 0x715000
	0x03A4019C ADRP X28, 0x715000
	0x03A401A0 ADRP X27, 0x715000
	0x03A401A4 ADRP X22, 0x715000
	0x03A401A8 LDR X25, [X25 + 0x788]
	0x03A401AC LDR X24, [X24 + 0xAB0]
	0x03A401B0 LDR X23, [X23 + 0xAB8]
	0x03A401B4 LDR X21, [X21 + 0xAC0]
	0x03A401B8 LDR X29, [X29 + 0xAC8]
	0x03A401BC LDR X28, [X28 + 0x790]
	0x03A401C0 LDR X27, [X27 + 0xAD0]
	0x03A401C4 LDRB W8, [X26 + 0x15A]
	0x03A401C8 LDR X22, [X22 + 0xAD8]
	0x03A401CC MOV W20, W1
	0x03A401D0 MOV X19, X0
	0x03A401D4 TBNZ X8, 0x0, 0x3A4027C
	0x03A401D8 ADRP X0, 0x715000
	0x03A401DC LDR X0, [X0 + 0xAE0]
	0x03A401E0 BL 0x1C16CF4
	0x03A401E4 ADRP X0, 0x715000
	0x03A401E8 LDR X0, [X0 + 0xAE8]
	0x03A401EC BL 0x1C16CF4
	0x03A401F0 ADRP X0, 0x715000
	0x03A401F4 LDR X0, [X0 + 0xAD0]
	0x03A401F8 BL 0x1C16CF4
	0x03A401FC ADRP X0, 0x715000
	0x03A40200 LDR X0, [X0 + 0xAF0]
	0x03A40204 BL 0x1C16CF4
	0x03A40208 ADRP X0, 0x715000
	0x03A4020C LDR X0, [X0 + 0xAC0]
	0x03A40210 BL 0x1C16CF4
	0x03A40214 ADRP X0, 0x715000
	0x03A40218 LDR X0, [X0 + 0x790]
	0x03A4021C BL 0x1C16CF4
	0x03A40220 ADRP X0, 0x715000
	0x03A40224 LDR X0, [X0 + 0xAF8]
	0x03A40228 BL 0x1C16CF4
	0x03A4022C ADRP X0, 0x715000
	0x03A40230 LDR X0, [X0 + 0xAC8]
	0x03A40234 BL 0x1C16CF4
	0x03A40238 ADRP X0, 0x715000
	0x03A4023C LDR X0, [X0 + 0xAB0]
	0x03A40240 BL 0x1C16CF4
	0x03A40244 ADRP X0, 0x715000
	0x03A40248 LDR X0, [X0 + 0xAD8]
	0x03A4024C BL 0x1C16CF4
	0x03A40250 ADRP X0, 0x715000
	0x03A40254 LDR X0, [X0 + 0xAB8]
	0x03A40258 BL 0x1C16CF4
	0x03A4025C ADRP X0, 0x715000
	0x03A40260 LDR X0, [X0 + 0x788]
	0x03A40264 BL 0x1C16CF4
	0x03A40268 ADRP X0, 0x715000
	0x03A4026C LDR X0, [X0 + 0xB00]
	0x03A40270 BL 0x1C16CF4
	0x03A40274 MOVZ W8, 0x1
	0x03A40278 STRB W8, [X26 + 0x15A]
	0x03A4027C LDR W3, [X19 + 0x10]
	0x03A40280 LDR X4, [X25]
	0x03A40284 ADD X1, X19, 0x48
	0x03A40288 MOV X0, X19
	0x03A4028C MOV W2, W20
	0x03A40290 BL 0x21A927C
	0x03A40294 LDR W3, [X19 + 0x10]
	0x03A40298 LDR X4, [X25]
	0x03A4029C ADD X1, X19, 0x58
	0x03A402A0 MOV X0, X19
	0x03A402A4 MOV W2, W20
	0x03A402A8 BL 0x21A927C
	0x03A402AC LDR W3, [X19 + 0x10]
	0x03A402B0 LDR X4, [X25]
	0x03A402B4 ADD X1, X19, 0x68
	0x03A402B8 MOV X0, X19
	0x03A402BC MOV W2, W20
	0x03A402C0 BL 0x21A927C
	0x03A402C4 LDR W3, [X19 + 0x10]
	0x03A402C8 LDR X4, [X24]
	0x03A402CC ADD X1, X19, 0x78
	0x03A402D0 MOV X0, X19
	0x03A402D4 MOV W2, W20
	0x03A402D8 BL 0x21A9228
	0x03A402DC LDR W3, [X19 + 0x10]
	0x03A402E0 LDR X4, [X24]
	0x03A402E4 ADD X1, X19, 0x88
	0x03A402E8 MOV X0, X19
	0x03A402EC MOV W2, W20
	0x03A402F0 BL 0x21A9228
	0x03A402F4 LDR W3, [X19 + 0x10]
	0x03A402F8 LDR X4, [X23]
	0x03A402FC ADD X1, X19, 0x98
	0x03A40300 MOV X0, X19
	0x03A40304 MOV W2, W20
	0x03A40308 BL 0x21A9268
	0x03A4030C LDR W3, [X19 + 0x10]
	0x03A40310 LDR X4, [X21]
	0x03A40314 ADD X1, X19, 0xA8
	0x03A40318 MOV X0, X19
	0x03A4031C MOV W2, W20
	0x03A40320 BL 0x21A8F44
	0x03A40324 LDR W3, [X19 + 0x10]
	0x03A40328 LDR X4, [X29]
	0x03A4032C ADD X1, X19, 0xB8
	0x03A40330 MOV X0, X19
	0x03A40334 MOV W2, W20
	0x03A40338 BL 0x21A9014
	0x03A4033C LDR W3, [X19 + 0x10]
	0x03A40340 LDR X4, [X28]
	0x03A40344 ADD X1, X19, 0xC8
	0x03A40348 MOV X0, X19
	0x03A4034C MOV W2, W20
	0x03A40350 BL 0x21A8FEC
	0x03A40354 LDR W3, [X19 + 0x10]
	0x03A40358 LDR X4, [X27]
	0x03A4035C ADD X1, X19, 0x148
	0x03A40360 MOV X0, X19
	0x03A40364 MOV W2, W20
	0x03A40368 BL 0x21A8EDC
	0x03A4036C ADRP X8, 0x715000
	0x03A40370 LDR W3, [X19 + 0x10]
	0x03A40374 LDR X8, [X8 + 0xAE8]
	0x03A40378 ADD X1, X19, 0xD8
	0x03A4037C MOV X0, X19
	0x03A40380 MOV W2, W20
	0x03A40384 LDR X4, [X8]
	0x03A40388 BL 0x21A8EC8
	0x03A4038C ADRP X8, 0x715000
	0x03A40390 LDR W3, [X19 + 0x10]
	0x03A40394 LDR X8, [X8 + 0xAF0]
	0x03A40398 ADD X1, X19, 0xE8
	0x03A4039C MOV X0, X19
	0x03A403A0 MOV W2, W20
	0x03A403A4 LDR X4, [X8]
	0x03A403A8 BL 0x21A8F98
	0x03A403AC ADRP X8, 0x715000
	0x03A403B0 LDR W3, [X19 + 0x10]
	0x03A403B4 LDR X8, [X8 + 0xAF8]
	0x03A403B8 ADD X1, X19, 0xF8
	0x03A403BC MOV X0, X19
	0x03A403C0 MOV W2, W20
	0x03A403C4 LDR X4, [X8]
	0x03A403C8 BL 0x21A9000
	0x03A403CC LDR W3, [X19 + 0x10]
	0x03A403D0 LDR X4, [X22]
	0x03A403D4 ADD X1, X19, 0x108
	0x03A403D8 MOV X0, X19
	0x03A403DC MOV W2, W20
	0x03A403E0 BL 0x21A923C
	0x03A403E4 ADRP X8, 0x715000
	0x03A403E8 LDR W3, [X19 + 0x10]
	0x03A403EC LDR X8, [X8 + 0xB00]
	0x03A403F0 ADD X1, X19, 0x118
	0x03A403F4 MOV X0, X19

ISIL:
	001 Subtract X31, X31, 192
	002 Move [X31+96], X29
	003 Move [X31+104], X30
	004 Move [X31+112], X28
	005 Move [X31+120], X27
	006 Move [X31+128], X26
	007 Move [X31+136], X25
	008 Move [X31+144], X24
	009 Move [X31+152], X23
	010 Move [X31+160], X22
	011 Move [X31+168], X21
	012 Move [X31+176], X20
	013 Move [X31+184], X19
	014 Move X20, 0x9A4000
	015 Move W8, [X20+341]
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {95}
	021 Move X0, 0x717000
	022 Move X0, [X0+2456]
	023 Call 0x1C17CF4
	024 Move X0, 0x717000
	025 Move X0, [X0+2368]
	026 Call 0x1C17CF4
	027 Move X0, 0x717000
	028 Move X0, [X0+2464]
	029 Call 0x1C17CF4
	030 Move X0, 0x717000
	031 Move X0, [X0+2472]
	032 Call 0x1C17CF4
	033 Move X0, 0x717000
	034 Move X0, [X0+2480]
	035 Call 0x1C17CF4
	036 Move X0, 0x717000
	037 Move X0, [X0+2488]
	038 Call 0x1C17CF4
	039 Move X0, 0x717000
	040 Move X0, [X0+2496]
	041 Call 0x1C17CF4
	042 Move X0, 0x717000
	043 Move X0, [X0+2504]
	044 Call 0x1C17CF4
	045 Move X0, 0x717000
	046 Move X0, [X0+2512]
	047 Call 0x1C17CF4
	048 Move X0, 0x717000
	049 Move X0, [X0+2520]
	050 Call 0x1C17CF4
	051 Move X0, 0x717000
	052 Move X0, [X0+2000]
	053 Call 0x1C17CF4
	054 Move X0, 0x717000
	055 Move X0, [X0+2008]
	056 Call 0x1C17CF4
	057 Move X0, 0x717000
	058 Move X0, [X0+2528]
	059 Call 0x1C17CF4
	060 Move X0, 0x717000
	061 Move X0, [X0+2016]
	062 Call 0x1C17CF4
	063 Move X0, 0x717000
	064 Move X0, [X0+2032]
	065 Call 0x1C17CF4
	066 Move X0, 0x717000
	067 Move X0, [X0+2536]
	068 Call 0x1C17CF4
	069 Move X0, 0x717000
	070 Move X0, [X0+2544]
	071 Call 0x1C17CF4
	072 Move X0, 0x717000
	073 Move X0, [X0+2552]
	074 Call 0x1C17CF4
	075 Move X0, 0x717000
	076 Move X0, [X0+2560]
	077 Call 0x1C17CF4
	078 Move X0, 0x712000
	079 Move X0, [X0+640]
	080 Call 0x1C17CF4
	081 Move X0, 0x717000
	082 Move X0, [X0+2568]
	083 Call 0x1C17CF4
	084 Move X0, 0x6B5000
	085 Move X0, [X0+1432]
	086 Call 0x1C17CF4
	087 Move X0, 0x717000
	088 Move X0, [X0+2576]
	089 Call 0x1C17CF4
	090 Move X0, 0x717000
	091 Move X0, [X0+2584]
	092 Call 0x1C17CF4
	093 Move W8, 1
	094 Move [X20+341], W8
	095 Move [X31+48], W31
	096 Move [X31+46], W31
	097 NotImplemented "Instruction STRH not yet implemented."
	098 Move [X31+16], X31
	099 Move [X31+24], X31
	100 Move X2, [X19+72]
	101 Add X0, X31, 48
	102 Move X1, X31
	103 Move X3, X31
	104 Call ProfilingScope..ctor, X0, X1, X2
	105 Move W8, [X19+48]
	106 NotImplemented "Instruction CMP not yet implemented."
	107 Move X22, 0x6B5000
	108 Move X22, [X22+1432]
	109 Move W20, W31
	110 Move X0, [X19+16]
	111 Compare X0, 0
	112 JumpIfEqual {559}
	113 Move X8, 0x717000
	114 Move X8, [X8+2032]
	115 Move X2, [X8]
	116 Move W1, W20
	117 Call List`1<Object>.get_Item, X0, X1
	118 Compare X0, 0
	119 JumpIfEqual {560}
	120 Move X8, [X22]
	121 Move X21, [X0+40]
	122 Move W9, [X8+224]
	123 Compare W9, 0
	124 JumpIfNotEqual {127}
	125 Move X0, X8
	126 Call 0x1C17DFC
	127 Move X0, X21
	128 Move X1, X31
	129 Move X2, X31
	130 Call Object.op_Equality, X0, X1
	131 Move TEMP, X0
	132 And TEMP, TEMP, 1
	133 Compare TEMP, 1
	134 JumpIfNotEqual {149}
	135 Move X0, [X19+16]
	136 Compare X0, 0
	137 JumpIfEqual {568}
	138 Move X8, 0x717000
	139 Move X8, [X8+2032]
	140 Move X2, [X8]
	141 Move W1, W20
	142 Call List`1<Object>.get_Item, X0, X1
	143 Move X21, X0
	144 Move X0, X19
	145 Call DecalEntityManager.get_errorMaterial, X0
	146 Compare X21, 0
	147 JumpIfEqual {569}
	148 Move [X21+40], X0
	149 Move W8, [X19+48]
	150 Add W20, W20, 1
	151 NotImplemented "Instruction CMP not yet implemented."
	152 Move X28, X19
	153 Add X28, X28, 96
	154 Move X20, [X28]
	155 NotImplemented "Instruction CMP not yet implemented."
	156 Move X27, 0x717000
	157 Move X29, 0x717000
	158 Move X27, [X27+2008]
	159 Move X29, [X29+2568]
	160 Add X8, X31, 56
	161 Move W21, W31
	162 Add X26, X8, 37
	163 Move [X31+46], W31
	164 NotImplemented "Instruction STRH not yet implemented."
	165 Move X0, [X19+16]
	166 Compare X0, 0
	167 JumpIfEqual {564}
	168 Move X8, 0x717000
	169 Move X8, [X8+2032]
	170 Move X2, [X8]
	171 Move W1, W21
	172 Call List`1<Object>.get_Item, X0, X1
	173 Move X22, X0
	174 Move X0, [X19+24]
	175 Compare X0, 0
	176 JumpIfEqual {565}
	177 Move X8, 0x717000
	178 Move X8, [X8+2016]
	179 Move X2, [X8]
	180 Move W1, W21
	181 Call List`1<Object>.get_Item, X0, X1
	182 Move X23, X0
	183 Move X0, [X19+32]
	184 Compare X0, 0
	185 JumpIfEqual {562}
	186 Move X8, 0x717000
	187 Move X8, [X8+2000]
	188 Move X2, [X8]
	189 Move W1, W21
	190 Call List`1<Object>.get_Item, X0, X1
	191 Move X24, X0
	192 Move X0, [X19+40]
	193 Compare X0, 0
	194 JumpIfEqual {563}
	195 Move X2, [X27]
	196 Move W1, W21
	197 Call List`1<Object>.get_Item, X0, X1
	198 Move X25, X0
	199 Move X0, [X19+16]
	200 Compare X0, 0
	201 JumpIfEqual {561}
	202 Move X8, 0x717000
	203 Move X8, [X8+2032]
	204 Move X2, [X8]
	205 Move W1, W21
	206 Call List`1<Object>.get_Item, X0, X1
	207 Compare X0, 0
	208 JumpIfEqual {566}
	209 NotImplemented "Instruction LDRH not yet implemented."
	210 Move W10, [X31+46]
	211 Move W8, [X0+16]
	212 NotImplemented "Instruction STRH not yet implemented."
	213 Move [X31+14], W10
	214 Compare X20, 0
	215 JumpIfEqual {567}
	216 NotImplemented "Instruction CMP not yet implemented."
	217 Move W8, [X31+14]
	218 NotImplemented "Instruction LDRH not yet implemented."
	219 Move X3, [X29]
	220 NotImplemented "Instruction CSET not yet implemented."
	221 Move [X31+56], X22
	222 Move [X31+64], X23
	223 Move [X31+72], X24
	224 Move [X31+80], X25
	225 Move [X31+88], W21
	226 Move [X31+92], W10
	227 Move [X26+2], W8
	228 NotImplemented "Instruction STRH not yet implemented."
	229 Add X2, X31, 56
	230 Move X0, X20
	231 Move W1, W21
	232 Call List`1<CombinedChunks>.set_Item, X0, X1, X2
	233 Move W8, [X19+48]
	234 Move X20, [X19+96]
	235 Add W21, W21, 1
	236 NotImplemented "Instruction CMP not yet implemented."
	237 Move X28, X19
	238 Add X28, X28, 96
	239 Move X20, [X28]
	240 Move X23, 0x717000
	241 Move X23, [X23+2584]
	242 Move X8, [X23]
	243 Move W9, [X8+224]
	244 Compare W9, 0
	245 JumpIfNotEqual {249}
	246 Move X0, X8
	247 Call 0x1C17DFC
	248 Move X8, [X23]
	249 Move X9, [X8+184]
	250 Move X21, [X9+8]
	251 Compare X21, 0
	252 JumpIfNotEqual {275}
	253 Move W9, [X8+224]
	254 Compare W9, 0
	255 JumpIfNotEqual {259}
	256 Move X0, X8
	257 Call 0x1C17DFC
	258 Move X8, [X23]
	259 Move X9, 0x717000
	260 Move X8, [X8+184]
	261 Move X9, [X9+2456]
	262 Move X22, [X8]
	263 Move X0, [X9]
	264 Call 0x1C17F10
	265 Move X8, 0x717000
	266 Move X8, [X8+2576]
	267 Move X21, X0
	268 Move X2, [X8]
	269 Move X1, X22
	270 Move X3, X31
	271 Call Comparison`1<CombinedChunks>..ctor, X0, X1, X2
	272 Move X8, [X23]
	273 Move X8, [X8+184]
	274 Move [X8+8], X21
	275 Compare X20, 0
	276 JumpIfEqual {589}
	277 Move X8, 0x717000
	278 Move X8, [X8+2520]
	279 Move X2, [X8]
	280 Move X0, X20
	281 Move X1, X21
	282 Call List`1<CombinedChunks>.Sort, X0, X1
	283 Move W8, [X19+48]
	284 NotImplemented "Instruction CMP not yet implemented."
	285 Move X29, 0x717000
	286 Move X29, [X29+2528]
	287 Move W20, W31
	288 Move X0, [X28]
	289 Compare X0, 0
	290 JumpIfEqual {572}
	291 Move X2, [X29]
	292 Add X8, X31, 56
	293 Move W1, W20
	294 Call List`1<CombinedChunks>.get_Item, X0, X1
	295 Move W8, [X31+88]
	296 NotImplemented "Instruction CMP not yet implemented."
	297 Move X0, [X28]
	298 Compare X0, 0
	299 JumpIfEqual {573}
	300 Move X2, [X29]
	301 Add X8, X31, 56
	302 Move W1, W20
	303 Call List`1<CombinedChunks>.get_Item, X0, X1
	304 Move W8, [X31+92]
	305 Move TEMP, X8
	306 And TEMP, TEMP, 1
	307 Compare TEMP, 1
	308 JumpIfNotEqual {312}
	309 Move W8, [X19+48]
	310 Add W20, W20, 1
	311 NotImplemented "Instruction CMP not yet implemented."
	312 Move X0, [X19+88]
	313 Compare X0, 0
	314 JumpIfEqual {590}
	315 Move X8, 0x717000
	316 Move X8, [X8+2464]
	317 Move X1, [X8]
	318 Call Dictionary`2<Object, Int32>.Clear, X0
	319 Move W8, [X19+48]
	320 NotImplemented "Instruction CMP not yet implemented."
	321 Move X27, 0x717000
	322 Move X27, [X27+2544]
	323 Move W20, W31
	324 Move W21, W31
	325 Move X0, [X28]
	326 Compare X0, 0
	327 JumpIfEqual {570}
	328 Move X2, [X29]
	329 Add X8, X31, 56
	330 Move W1, W21
	331 Call List`1<CombinedChunks>.get_Item, X0, X1
	332 Move X0, [X28]
	333 Compare X0, 0
	334 JumpIfEqual {571}
	335 Move X26, [X31+56]
	336 Move X25, [X31+64]
	337 Move X24, [X31+72]
	338 Move X22, [X31+80]
	339 Move W23, [X31+88]
	340 Move X2, [X29]
	341 Add X8, X31, 56
	342 Move W1, W21
	343 Call List`1<CombinedChunks>.get_Item, X0, X1
	344 Move W8, [X31+92]
	345 Move TEMP, X8
	346 And TEMP, TEMP, 1
	347 Compare TEMP, 1
	348 JumpIfEqual {397}
	349 Compare X26, 0
	350 JumpIfEqual {578}
	351 NotImplemented "Instruction LDUR not yet implemented."
	352 Move [X31+1], V0
	353 Add X0, X31, 16
	354 Move X1, X31
	355 Call JobHandle.Complete, X0
	356 Compare X25, 0
	357 JumpIfEqual {580}
	358 NotImplemented "Instruction LDUR not yet implemented."
	359 Move [X31+1], V0
	360 Add X0, X31, 16
	361 Move X1, X31
	362 Call JobHandle.Complete, X0
	363 Compare X24, 0
	364 JumpIfEqual {581}
	365 NotImplemented "Instruction LDUR not yet implemented."
	366 Move [X31+1], V0
	367 Add X0, X31, 16
	368 Move X1, X31
	369 Call JobHandle.Complete, X0
	370 Compare X22, 0
	371 JumpIfEqual {579}
	372 NotImplemented "Instruction LDUR not yet implemented."
	373 Move [X31+1], V0
	374 Add X0, X31, 16
	375 Move X1, X31
	376 Call JobHandle.Complete, X0
	377 Move X8, [X26]
	378 Move X9, [X8+440]
	379 Move X1, [X8+448]
	380 Move X0, X26
	381 NotImplemented "Instruction BLR not yet implemented."
	382 Move X8, [X25]
	383 Move X9, [X8+440]
	384 Move X1, [X8+448]
	385 Move X0, X25
	386 NotImplemented "Instruction BLR not yet implemented."
	387 Move X8, [X24]
	388 Move X9, [X8+440]
	389 Move X1, [X8+448]
	390 Move X0, X24
	391 NotImplemented "Instruction BLR not yet implemented."
	392 Move X8, [X22]
	393 Move X9, [X8+440]
	394 Move X1, [X8+448]
	395 Move X0, X22
	396 NotImplemented "Instruction BLR not yet implemented."
	397 Move X0, [X19+16]
	398 Compare X0, 0
	399 JumpIfEqual {582}
	400 Move X3, [X27]
	401 Move W1, W21
	402 Move X2, X26
	403 Call List`1<Object>.set_Item, X0, X1, X2
	404 Move X0, [X19+24]
	405 Compare X0, 0
	406 JumpIfEqual {574}
	407 Move X8, 0x717000
	408 Move X8, [X8+2560]
	409 Move X3, [X8]
	410 Move W1, W21
	411 Move X2, X25
	412 Call List`1<Object>.set_Item, X0, X1, X2
	413 Move X0, [X19+32]
	414 Compare X0, 0
	415 JumpIfEqual {583}
	416 Move X8, 0x717000
	417 Move X8, [X8+2552]
	418 Move X3, [X8]
	419 Move W1, W21
	420 Move X2, X24
	421 Call List`1<Object>.set_Item, X0, X1, X2
	422 Move X0, [X19+40]
	423 Compare X0, 0
	424 JumpIfEqual {575}
	425 Move X8, 0x716000
	426 Move X8, [X8+2536]
	427 Move X3, [X8]
	428 Move W1, W21
	429 Move X2, X22
	430 Call List`1<Object>.set_Item, X0, X1, X2
	431 Move X0, [X19+16]
	432 Compare X0, 0
	433 JumpIfEqual {584}
	434 Move X8, 0x716000
	435 Move X22, [X19+88]
	436 Move X8, [X8+2032]
	437 Move X2, [X8]
	438 Move W1, W21
	439 Call List`1<Object>.get_Item, X0, X1
	440 Compare X0, 0
	441 JumpIfEqual {576}
	442 Compare X22, 0
	443 JumpIfEqual {585}
	444 Move X8, 0x716000
	445 Move X1, [X0+40]
	446 Move X8, [X8+2472]
	447 Move X2, [X8]
	448 Move X0, X22
	449 Call Dictionary`2<Object, Int32>.ContainsKey, X0, X1
	450 Move TEMP, X0
	451 And TEMP, TEMP, 1
	452 Compare TEMP, 1
	453 JumpIfEqual {474}
	454 Move X0, [X19+16]
	455 Compare X0, 0
	456 JumpIfEqual {588}
	457 Move X8, 0x716000
	458 Move X22, [X19+88]
	459 Move X8, [X8+2032]
	460 Move X2, [X8]
	461 Move W1, W21
	462 Call List`1<Object>.get_Item, X0, X1
	463 Compare X0, 0
	464 JumpIfEqual {587}
	465 Compare X22, 0
	466 JumpIfEqual {586}
	467 Move X8, 0x716000
	468 Move X1, [X0+40]
	469 Move X8, [X8+2368]
	470 Move X3, [X8]
	471 Move X0, X22
	472 Move W2, W21
	473 Call Dictionary`2<Object, Int32>.Add, X0, X1, X2
	474 Move X0, [X19+104]
	475 Compare X0, 0
	476 JumpIfEqual {577}
	477 Move X8, 0x711000
	478 Move X8, [X8+640]
	479 Move X3, [X8]
	480 Move W1, W23
	481 Move W2, W21
	482 Call List`1<Int32>.set_Item, X0, X1, X2
	483 Add W20, W20, 1
	484 Move W8, [X19+48]
	485 Add W21, W21, 1
	486 NotImplemented "Instruction CMP not yet implemented."
	487 Subtract W2, W8, W20
	488 Move X0, [X19+16]
	489 Compare X0, 0
	490 JumpIfEqual {592}
	491 Move X8, 0x716000
	492 Move X8, [X8+2512]
	493 Move X3, [X8]
	494 Move W1, W20
	495 Call List`1<Object>.RemoveRange, X0, X1, X2
	496 Move X0, [X19+24]
	497 Compare X0, 0
	498 JumpIfEqual {593}
	499 Move X9, 0x716000
	500 Move W8, [X19+48]
	501 Move X9, [X9+2480]
	502 Subtract W2, W8, W20
	503 Move X3, [X9]
	504 Move W1, W20
	505 Call List`1<Object>.RemoveRange, X0, X1, X2
	506 Move X0, [X19+32]
	507 Compare X0, 0
	508 JumpIfEqual {594}
	509 Move X9, 0x716000
	510 Move W8, [X19+48]
	511 Move X9, [X9+2488]
	512 Subtract W2, W8, W20
	513 Move X3, [X9]
	514 Move W1, W20
	515 Call List`1<Object>.RemoveRange, X0, X1, X2
	516 Move X0, [X19+40]
	517 Compare X0, 0
	518 JumpIfEqual {595}
	519 Move X9, 0x716000
	520 Move W8, [X19+48]
	521 Move X9, [X9+2496]
	522 Subtract W2, W8, W20
	523 Move X3, [X9]
	524 Move W1, W20
	525 Call List`1<Object>.RemoveRange, X0, X1, X2
	526 Move X0, [X28]
	527 Compare X0, 0
	528 JumpIfEqual {596}
	529 Move X9, 0x716000
	530 Move W8, [X19+48]
	531 Move X9, [X9+2504]
	532 Subtract W2, W8, W20
	533 Move X3, [X9]
	534 Move W1, W20
	535 Call List`1<CombinedChunks>.RemoveRange, X0, X1, X2
	536 Move [X19+48], W20
	537 Move X0, [X19+80]
	538 Compare X0, 0
	539 JumpIfEqual {591}
	540 Move X1, [X19+104]
	541 Call DecalEntityIndexer.RemapChunkIndices, X0, X1
	542 Add X0, X31, 48
	543 Move X1, X31
	544 Call ProfilingScope.Dispose, X0
	545 Move X20, [X31+176]
	546 Move X19, [X31+184]
	547 Move X22, [X31+160]
	548 Move X21, [X31+168]
	549 Move X24, [X31+144]
	550 Move X23, [X31+152]
	551 Move X26, [X31+128]
	552 Move X25, [X31+136]
	553 Move X28, [X31+112]
	554 Move X27, [X31+120]
	555 Move X29, [X31+96]
	556 Move X30, [X31+104]
	557 Add X31, X31, 192
	558 Return 
	559 Call 0x1C17F20
	560 Call 0x1C17F20
	561 Call 0x1C17F20
	562 Call 0x1C17F20
	563 Call 0x1C17F20
	564 Call 0x1C17F20
	565 Call 0x1C17F20
	566 Call 0x1C17F20
	567 Call 0x1C17F20
	568 Call 0x1C17F20
	569 Call 0x1C17F20
	570 Call 0x1C17F20
	571 Call 0x1C17F20
	572 Call 0x1C17F20
	573 Call 0x1C17F20
	574 Call 0x1C17F20
	575 Call 0x1C17F20
	576 Call 0x1C17F20
	577 Call 0x1C17F20
	578 Call 0x1C17F20
	579 Call 0x1C17F20
	580 Call 0x1C17F20
	581 Call 0x1C17F20
	582 Call 0x1C17F20
	583 Call 0x1C17F20
	584 Call 0x1C17F20
	585 Call 0x1C17F20
	586 Call 0x1C17F20
	587 Call 0x1C17F20
	588 Call 0x1C17F20
	589 Call 0x1C17F20
	590 Call 0x1C17F20
	591 Call 0x1C17F20
	592 Call 0x1C17F20
	593 Call 0x1C17F20
	594 Call 0x1C17F20
	595 Call 0x1C17F20
	596 Call 0x1C17F20
	597 Move X19, X0
	598 NotImplemented "Instruction CMP not yet implemented."
	599 Move X0, X19
	600 Call 0x3EB2AD0
	601 Move X20, [X0]
	602 Call 0x3EB2AE0
	603 Add X0, X31, 48
	604 Move X1, X31
	605 Call ProfilingScope.Dispose, X0
	606 Compare X20, 0
	607 JumpIfEqual {545}
	608 Move X0, X20
	609 Call 0x1C17F18
	610 Move X20, X31
	611 Move X19, X0
	612 Add X0, X31, 48
	613 Move X1, X31
	614 Call ProfilingScope.Dispose, X0
	615 Compare X20, 0
	616 JumpIfNotEqual {619}
	617 Move X0, X19
	618 Call 0x1D2D690
	619 Move X0, X20
	620 Call 0x1C17F18
	621 Call 0x1991590

Method: System.Void Dispose()

Disassembly:
	0x03A403F8 MOV W2, W20
	0x03A403FC LDR X4, [X8]
	0x03A40400 BL 0x21A92A8
	0x03A40404 LDR W3, [X19 + 0x10]
	0x03A40408 LDR X4, [X22]
	0x03A4040C ADD X1, X19, 0x128
	0x03A40410 MOV X0, X19
	0x03A40414 MOV W2, W20
	0x03A40418 BL 0x21A923C
	0x03A4041C ADRP X8, 0x715000
	0x03A40420 LDR W3, [X19 + 0x10]
	0x03A40424 LDR X8, [X8 + 0xAE0]
	0x03A40428 ADD X1, X19, 0x138
	0x03A4042C MOV X0, X19
	0x03A40430 MOV W2, W20
	0x03A40434 LDR X4, [X8]
	0x03A40438 BL 0x21A8EB4
	0x03A4043C LDR W8, [X19 + 0x10]
	0x03A40440 LDP X22, X21, [X31 + 0x40]
	0x03A40444 LDP X24, X23, [X31 + 0x30]
	0x03A40448 LDP X26, X25, [X31 + 0x20]
	0x03A4044C SUB W8, W8, 0x1
	0x03A40450 STR W8, [X19 + 0x10]
	0x03A40454 LDP X20, X19, [X31 + 0x50]
	0x03A40458 LDP X28, X27, [X31 + 0x10]
	0x03A4045C LDP X29, X30, [X31], #0x60
	0x03A40460 RET
	0x03A40464 STP X29, X30, [X31 - 0x60]!
	0x03A40468 STP X28, X27, [X31 + 0x10]
	0x03A4046C STP X26, X25, [X31 + 0x20]
	0x03A40470 STP X24, X23, [X31 + 0x30]
	0x03A40474 STP X22, X21, [X31 + 0x40]
	0x03A40478 STP X20, X19, [X31 + 0x50]
	0x03A4047C ADRP X26, 0x9A2000
	0x03A40480 ADRP X25, 0x715000
	0x03A40484 ADRP X24, 0x715000
	0x03A40488 ADRP X22, 0x715000
	0x03A4048C ADRP X21, 0x715000
	0x03A40490 ADRP X29, 0x715000
	0x03A40494 ADRP X28, 0x715000
	0x03A40498 ADRP X27, 0x715000
	0x03A4049C ADRP X23, 0x715000
	0x03A404A0 LDR X25, [X25 + 0x7A0]
	0x03A404A4 LDR X24, [X24 + 0xB08]
	0x03A404A8 LDR X22, [X22 + 0xB10]
	0x03A404AC LDR X21, [X21 + 0xB18]
	0x03A404B0 LDR X29, [X29 + 0xB20]
	0x03A404B4 LDR X28, [X28 + 0x7A8]
	0x03A404B8 LDR X27, [X27 + 0xB28]
	0x03A404BC LDRB W8, [X26 + 0x15B]
	0x03A404C0 LDR X23, [X23 + 0xB30]
	0x03A404C4 MOV W19, W1
	0x03A404C8 MOV X20, X0
	0x03A404CC TBNZ X8, 0x0, 0x3A40574
	0x03A404D0 ADRP X0, 0x715000
	0x03A404D4 LDR X0, [X0 + 0xB38]
	0x03A404D8 BL 0x1C16CF4
	0x03A404DC ADRP X0, 0x715000
	0x03A404E0 LDR X0, [X0 + 0xB28]
	0x03A404E4 BL 0x1C16CF4
	0x03A404E8 ADRP X0, 0x715000
	0x03A404EC LDR X0, [X0 + 0xB40]
	0x03A404F0 BL 0x1C16CF4
	0x03A404F4 ADRP X0, 0x715000
	0x03A404F8 LDR X0, [X0 + 0xB48]
	0x03A404FC BL 0x1C16CF4
	0x03A40500 ADRP X0, 0x715000
	0x03A40504 LDR X0, [X0 + 0xB18]
	0x03A40508 BL 0x1C16CF4
	0x03A4050C ADRP X0, 0x715000
	0x03A40510 LDR X0, [X0 + 0x7A8]
	0x03A40514 BL 0x1C16CF4
	0x03A40518 ADRP X0, 0x711000
	0x03A4051C LDR X0, [X0 + 0x290]
	0x03A40520 BL 0x1C16CF4
	0x03A40524 ADRP X0, 0x715000
	0x03A40528 LDR X0, [X0 + 0xB20]
	0x03A4052C BL 0x1C16CF4
	0x03A40530 ADRP X0, 0x715000
	0x03A40534 LDR X0, [X0 + 0xB08]
	0x03A40538 BL 0x1C16CF4
	0x03A4053C ADRP X0, 0x715000
	0x03A40540 LDR X0, [X0 + 0xB30]
	0x03A40544 BL 0x1C16CF4
	0x03A40548 ADRP X0, 0x715000
	0x03A4054C LDR X0, [X0 + 0xB10]
	0x03A40550 BL 0x1C16CF4
	0x03A40554 ADRP X0, 0x715000
	0x03A40558 LDR X0, [X0 + 0x7A0]
	0x03A4055C BL 0x1C16CF4
	0x03A40560 ADRP X0, 0x715000
	0x03A40564 LDR X0, [X0 + 0xB50]
	0x03A40568 BL 0x1C16CF4
	0x03A4056C MOVZ W8, 0x1
	0x03A40570 STRB W8, [X26 + 0x15B]
	0x03A40574 LDR X2, [X25]
	0x03A40578 ADD X0, X20, 0x48
	0x03A4057C MOV W1, W19
	0x03A40580 BL 0x2172704
	0x03A40584 LDR X2, [X25]
	0x03A40588 ADD X0, X20, 0x58
	0x03A4058C MOV W1, W19
	0x03A40590 BL 0x2172704
	0x03A40594 LDR X2, [X25]
	0x03A40598 ADD X0, X20, 0x68
	0x03A4059C MOV W1, W19
	0x03A405A0 BL 0x2172704
	0x03A405A4 LDR X2, [X24]
	0x03A405A8 ADD X0, X20, 0x78
	0x03A405AC MOV W1, W19
	0x03A405B0 BL 0x2172554
	0x03A405B4 LDR X2, [X24]
	0x03A405B8 ADD X0, X20, 0x88
	0x03A405BC MOV W1, W19
	0x03A405C0 BL 0x2172554
	0x03A405C4 LDR X2, [X22]
	0x03A405C8 ADD X0, X20, 0x98
	0x03A405CC MOV W1, W19
	0x03A405D0 BL 0x2172674
	0x03A405D4 LDR X2, [X21]
	0x03A405D8 ADD X0, X20, 0xA8
	0x03A405DC MOV W1, W19
	0x03A405E0 BL 0x2172050
	0x03A405E4 LDR X2, [X29]
	0x03A405E8 ADD X0, X20, 0xB8
	0x03A405EC MOV W1, W19
	0x03A405F0 BL 0x2172370
	0x03A405F4 LDR X2, [X28]
	0x03A405F8 ADD X0, X20, 0xC8
	0x03A405FC MOV W1, W19
	0x03A40600 BL 0x2172250
	0x03A40604 LDR X2, [X27]
	0x03A40608 ADD X0, X20, 0xD8
	0x03A4060C MOV W1, W19
	0x03A40610 BL 0x2171E30
	0x03A40614 ADRP X8, 0x715000
	0x03A40618 LDR X8, [X8 + 0xB48]
	0x03A4061C ADD X0, X20, 0xE8
	0x03A40620 MOV W1, W19
	0x03A40624 LDR X2, [X8]
	0x03A40628 BL 0x2172150
	0x03A4062C ADRP X8, 0x711000
	0x03A40630 LDR X8, [X8 + 0x290]
	0x03A40634 ADD X0, X20, 0xF8
	0x03A40638 MOV W1, W19
	0x03A4063C LDR X2, [X8]
	0x03A40640 BL 0x21722E0
	0x03A40644 LDR X2, [X23]
	0x03A40648 ADD X0, X20, 0x108
	0x03A4064C MOV W1, W19
	0x03A40650 BL 0x21725E4
	0x03A40654 ADRP X8, 0x715000
	0x03A40658 LDR X8, [X8 + 0xB50]
	0x03A4065C ADD X0, X20, 0x118
	0x03A40660 MOV W1, W19
	0x03A40664 LDR X2, [X8]
	0x03A40668 BL 0x2172794
	0x03A4066C LDR X2, [X23]
	0x03A40670 ADD X0, X20, 0x128
	0x03A40674 MOV W1, W19
	0x03A40678 BL 0x21725E4
	0x03A4067C ADRP X8, 0x715000
	0x03A40680 LDR X8, [X8 + 0xB38]
	0x03A40684 ADD X0, X20, 0x138
	0x03A40688 MOV W1, W19
	0x03A4068C LDR X2, [X8]
	0x03A40690 BL 0x2171DA0
	0x03A40694 ADRP X8, 0x715000
	0x03A40698 LDR X8, [X8 + 0xB40]
	0x03A4069C ADD X0, X20, 0x148
	0x03A406A0 MOV W1, W19
	0x03A406A4 LDR X2, [X8]
	0x03A406A8 BL 0x2171EC0
	0x03A406AC STR W19, [X20 + 0x14]
	0x03A406B0 LDP X20, X19, [X31 + 0x50]
	0x03A406B4 LDP X22, X21, [X31 + 0x40]
	0x03A406B8 LDP X24, X23, [X31 + 0x30]
	0x03A406BC LDP X26, X25, [X31 + 0x20]
	0x03A406C0 LDP X28, X27, [X31 + 0x10]
	0x03A406C4 LDP X29, X30, [X31], #0x60
	0x03A406C8 RET
	0x03A406CC STP X29, X30, [X31 - 0x60]!
	0x03A406D0 STP X28, X27, [X31 + 0x10]
	0x03A406D4 STP X26, X25, [X31 + 0x20]
	0x03A406D8 STP X24, X23, [X31 + 0x30]
	0x03A406DC STP X22, X21, [X31 + 0x40]
	0x03A406E0 STP X20, X19, [X31 + 0x50]
	0x03A406E4 ADRP X20, 0x9A2000
	0x03A406E8 LDRB W8, [X20 + 0x15C]
	0x03A406EC MOV X19, X0
	0x03A406F0 TBNZ X8, 0x0, 0x3A4078C
	0x03A406F4 ADRP X0, 0x715000
	0x03A406F8 LDR X0, [X0 + 0xB58]
	0x03A406FC BL 0x1C16CF4
	0x03A40700 ADRP X0, 0x6DD000
	0x03A40704 LDR X0, [X0 + 0x148]
	0x03A40708 BL 0x1C16CF4
	0x03A4070C ADRP X0, 0x715000
	0x03A40710 LDR X0, [X0 + 0xB60]
	0x03A40714 BL 0x1C16CF4
	0x03A40718 ADRP X0, 0x6DE000
	0x03A4071C LDR X0, [X0 + 0xF70]
	0x03A40720 BL 0x1C16CF4
	0x03A40724 ADRP X0, 0x715000
	0x03A40728 LDR X0, [X0 + 0xB68]
	0x03A4072C BL 0x1C16CF4
	0x03A40730 ADRP X0, 0x715000
	0x03A40734 LDR X0, [X0 + 0x7B8]
	0x03A40738 BL 0x1C16CF4
	0x03A4073C ADRP X0, 0x714000
	0x03A40740 LDR X0, [X0 + 0x9C0]
	0x03A40744 BL 0x1C16CF4
	0x03A40748 ADRP X0, 0x715000
	0x03A4074C LDR X0, [X0 + 0xB70]
	0x03A40750 BL 0x1C16CF4
	0x03A40754 ADRP X0, 0x6DD000
	0x03A40758 LDR X0, [X0 + 0x158]
	0x03A4075C BL 0x1C16CF4
	0x03A40760 ADRP X0, 0x715000
	0x03A40764 LDR X0, [X0 + 0xB78]
	0x03A40768 BL 0x1C16CF4
	0x03A4076C ADRP X0, 0x715000
	0x03A40770 LDR X0, [X0 + 0xB80]
	0x03A40774 BL 0x1C16CF4
	0x03A40778 ADRP X0, 0x714000
	0x03A4077C LDR X0, [X0 + 0x6A8]
	0x03A40780 BL 0x1C16CF4
	0x03A40784 MOVZ W8, 0x1
	0x03A40788 STRB W8, [X20 + 0x15C]
	0x03A4078C LDR W8, [X19 + 0x14]
	0x03A40790 CBZ W8, 0x3A408B8
	0x03A40794 ADRP X27, 0x715000
	0x03A40798 LDR X27, [X27 + 0x7B8]
	0x03A4079C ADRP X28, 0x714000
	0x03A407A0 ADRP X29, 0x715000
	0x03A407A4 ADRP X20, 0x6DD000
	0x03A407A8 ADRP X22, 0x6DE000
	0x03A407AC ADRP X26, 0x6DD000
	0x03A407B0 ADRP X25, 0x715000
	0x03A407B4 ADRP X24, 0x715000
	0x03A407B8 ADRP X23, 0x715000
	0x03A407BC ADRP X21, 0x715000
	0x03A407C0 LDR X28, [X28 + 0x9C0]
	0x03A407C4 LDR X29, [X29 + 0xB80]
	0x03A407C8 LDR X20, [X20 + 0x148]
	0x03A407CC LDR X22, [X22 + 0xF70]
	0x03A407D0 LDR X26, [X26 + 0x158]
	0x03A407D4 LDR X25, [X25 + 0xB60]
	0x03A407D8 LDR X24, [X24 + 0xB70]
	0x03A407DC LDR X23, [X23 + 0xB68]
	0x03A407E0 LDR X21, [X21 + 0xB78]
	0x03A407E4 LDR X1, [X27]
	0x03A407E8 ADD X0, X19, 0x48
	0x03A407EC BL 0x23FB320
	0x03A407F0 LDR X1, [X27]
	0x03A407F4 ADD X0, X19, 0x58
	0x03A407F8 BL 0x23FB320
	0x03A407FC LDR X1, [X27]
	0x03A40800 ADD X0, X19, 0x68
	0x03A40804 BL 0x23FB320
	0x03A40808 LDR X1, [X28]
	0x03A4080C ADD X0, X19, 0x78
	0x03A40810 BL 0x23F8770
	0x03A40814 LDR X1, [X28]
	0x03A40818 ADD X0, X19, 0x88
	0x03A4081C BL 0x23F8770
	0x03A40820 LDR X1, [X29]
	0x03A40824 ADD X0, X19, 0x98
	0x03A40828 BL 0x23FA464
	0x03A4082C LDR X1, [X20]
	0x03A40830 ADD X0, X19, 0xA8
	0x03A40834 BL 0x23D5AD4
	0x03A40838 LDR X1, [X22]
	0x03A4083C ADD X0, X19, 0xB8
	0x03A40840 BL 0x23ED774
	0x03A40844 LDR X1, [X26]
	0x03A40848 ADD X0, X19, 0xC8
	0x03A4084C BL 0x23E53EC
	0x03A40850 LDR X1, [X25]
	0x03A40854 ADD X0, X19, 0xD8
	0x03A40858 BL 0x23C8F60
	0x03A4085C LDR X1, [X24]
	0x03A40860 ADD X0, X19, 0xE8
	0x03A40864 BL 0x23D6920
	0x03A40868 LDR X1, [X23]
	0x03A4086C ADD X0, X19, 0xF8
	0x03A40870 BL 0x23EC928
	0x03A40874 LDR X1, [X21]
	0x03A40878 ADD X0, X19, 0x108
	0x03A4087C BL 0x23F95DC
	0x03A40880 ADRP X8, 0x715000
	0x03A40884 LDR X8, [X8 + 0xB58]
	0x03A40888 ADD X0, X19, 0x118
	0x03A4088C LDR X1, [X8]
	0x03A40890 BL 0x23FECF0
	0x03A40894 LDR X1, [X21]
	0x03A40898 ADD X0, X19, 0x128
	0x03A4089C BL 0x23F95DC
	0x03A408A0 ADRP X8, 0x714000
	0x03A408A4 LDR X8, [X8 + 0x6A8]
	0x03A408A8 ADD X0, X19, 0x138
	0x03A408AC LDR X1, [X8]
	0x03A408B0 BL 0x23C810C
	0x03A408B4 STR X31, [X19 + 0x10]
	0x03A408B8 LDP X20, X19, [X31 + 0x50]
	0x03A408BC LDP X22, X21, [X31 + 0x40]
	0x03A408C0 LDP X24, X23, [X31 + 0x30]
	0x03A408C4 LDP X26, X25, [X31 + 0x20]
	0x03A408C8 LDP X28, X27, [X31 + 0x10]
	0x03A408CC LDP X29, X30, [X31], #0x60
	0x03A408D0 RET
	0x03A408D4 STR X30, [X31 - 0x40]!
	0x03A408D8 STP X24, X23, [X31 + 0x10]
	0x03A408DC STP X22, X21, [X31 + 0x20]
	0x03A408E0 STP X20, X19, [X31 + 0x30]
	0x03A408E4 ADRP X24, 0x9A2000
	0x03A408E8 ADRP X22, 0x710000
	0x03A408EC ADRP X23, 0x715000
	0x03A408F0 ADRP X21, 0x715000
	0x03A408F4 LDRB W8, [X24 + 0x15D]
	0x03A408F8 LDR X22, [X22 + 0x598]
	0x03A408FC LDR X23, [X23 + 0xB88]
	0x03A40900 LDR X21, [X21 + 0xB90]
	0x03A40904 MOV X20, X1
	0x03A40908 MOV X19, X0
	0x03A4090C TBNZ X8, 0x0, 0x3A4093C
	0x03A40910 ADRP X0, 0x710000
	0x03A40914 LDR X0, [X0 + 0x598]
	0x03A40918 BL 0x1C16CF4
	0x03A4091C ADRP X0, 0x715000
	0x03A40920 LDR X0, [X0 + 0xB90]
	0x03A40924 BL 0x1C16CF4
	0x03A40928 ADRP X0, 0x715000
	0x03A4092C LDR X0, [X0 + 0xB88]
	0x03A40930 BL 0x1C16CF4
	0x03A40934 MOVZ W8, 0x1
	0x03A40938 STRB W8, [X24 + 0x15D]
	0x03A4093C MOV X0, X19
	0x03A40940 MOV X1, X31
	0x03A40944 BL 0x33BDD8C
	0x03A40948 STR X20, [X19 + 0x10]
	0x03A4094C LDR X0, [X22]
	0x03A40950 BL 0x1C16F10
	0x03A40954 LDR X1, [X23]
	0x03A40958 MOV X2, X31
	0x03A4095C MOV X20, X0
	0x03A40960 BL 0x39B19AC
	0x03A40964 STR X20, [X19 + 0x18]
	0x03A40968 LDR X0, [X22]
	0x03A4096C BL 0x1C16F10
	0x03A40970 LDR X1, [X21]
	0x03A40974 MOV X2, X31
	0x03A40978 MOV X20, X0
	0x03A4097C BL 0x39B19AC
	0x03A40980 STR X20, [X19 + 0x20]
	0x03A40984 LDP X20, X19, [X31 + 0x30]
	0x03A40988 LDP X22, X21, [X31 + 0x20]
	0x03A4098C LDP X24, X23, [X31 + 0x10]
	0x03A40990 LDR X30, [X31], #0x40
	0x03A40994 RET
	0x03A40998 STR X30, [X31 - 0x40]!
	0x03A4099C STP X24, X23, [X31 + 0x10]
	0x03A409A0 STP X22, X21, [X31 + 0x20]
	0x03A409A4 STP X20, X19, [X31 + 0x30]
	0x03A409A8 ADRP X20, 0x9A2000
	0x03A409AC LDRB W8, [X20 + 0x15E]
	0x03A409B0 MOV X19, X0
	0x03A409B4 TBNZ X8, 0x0, 0x3A409D8
	0x03A409B8 ADRP X0, 0x715000
	0x03A409BC LDR X0, [X0 + 0x7E0]
	0x03A409C0 BL 0x1C16CF4
	0x03A409C4 ADRP X0, 0x715000
	0x03A409C8 LDR X0, [X0 + 0x7F0]
	0x03A409CC BL 0x1C16CF4
	0x03A409D0 MOVZ W8, 0x1
	0x03A409D4 STRB W8, [X20 + 0x15E]
	0x03A409D8 STRB W31, [X31 + 0x8]
	0x03A409DC LDR X2, [X19 + 0x18]
	0x03A409E0 ADD X0, X31, 0x8
	0x03A409E4 MOV X1, X31
	0x03A409E8 MOV X3, X31
	0x03A409EC BL 0x39B1DB0
	0x03A409F0 LDR X8, [X19 + 0x10]
	0x03A409F4 CBZ X8, 0x3A40A90
	0x03A409F8 ADRP X23, 0x715000
	0x03A409FC ADRP X24, 0x715000
	0x03A40A00 LDR X23, [X23 + 0x7F0]
	0x03A40A04 LDR X24, [X24 + 0x7E0]
	0x03A40A08 MOV W20, W31
	0x03A40A0C LDR W9, [X8 + 0x30]
	0x03A40A10 CMP W20, W9
	0x03A40A14 B.GE 0x3A40A94
	0x03A40A18 LDR X0, [X8 + 0x10]
	0x03A40A1C CBZ X0, 0x3A40AC0
	0x03A40A20 LDR X2, [X23]
	0x03A40A24 MOV W1, W20
	0x03A40A28 BL 0x301BCCC
	0x03A40A2C LDR X8, [X19 + 0x10]
	0x03A40A30 CBZ X8, 0x3A40AB8
	0x03A40A34 MOV X21, X0
	0x03A40A38 LDR X0, [X8 + 0x18]
	0x03A40A3C CBZ X0, 0x3A40ABC
	0x03A40A40 LDR X2, [X24]
	0x03A40A44 MOV W1, W20
	0x03A40A48 BL 0x301BCCC
	0x03A40A4C LDR X8, [X19 + 0x10]
	0x03A40A50 CBZ X8, 0x3A40AB4
	0x03A40A54 MOV X22, X0
	0x03A40A58 LDR X0, [X8 + 0x10]
	0x03A40A5C CBZ X0, 0x3A40AC4
	0x03A40A60 LDR X2, [X23]
	0x03A40A64 MOV W1, W20
	0x03A40A68 BL 0x301BCCC
	0x03A40A6C CBZ X0, 0x3A40AC8
	0x03A40A70 LDR W3, [X0 + 0x10]
	0x03A40A74 MOV X0, X19
	0x03A40A78 MOV X1, X21
	0x03A40A7C MOV X2, X22
	0x03A40A80 BL 0x3A40B58
	0x03A40A84 LDR X8, [X19 + 0x10]
	0x03A40A88 ADD W20, W20, 0x1
	0x03A40A8C CBNZ X8, 0x3A40A0C
	0x03A40A90 BL 0x1C16F20
	0x03A40A94 ADD X0, X31, 0x8
	0x03A40A98 MOV X1, X31
	0x03A40A9C BL 0x39B1DB4
	0x03A40AA0 LDP X20, X19, [X31 + 0x30]
	0x03A40AA4 LDP X22, X21, [X31 + 0x20]
	0x03A40AA8 LDP X24, X23, [X31 + 0x10]
	0x03A40AAC LDR X30, [X31], #0x40
	0x03A40AB0 RET
	0x03A40AB4 BL 0x1C16F20
	0x03A40AB8 BL 0x1C16F20
	0x03A40ABC BL 0x1C16F20
	0x03A40AC0 BL 0x1C16F20
	0x03A40AC4 BL 0x1C16F20
	0x03A40AC8 BL 0x1C16F20
	0x03A40ACC B 0x3A40AF4
	0x03A40AD0 B 0x3A40AF4
	0x03A40AD4 B 0x3A40AF4
	0x03A40AD8 B 0x3A40AF4
	0x03A40ADC B 0x3A40AF4
	0x03A40AE0 B 0x3A40AF4
	0x03A40AE4 B 0x3A40AF4
	0x03A40AE8 B 0x3A40AF4
	0x03A40AEC B 0x3A40AF4
	0x03A40AF0 B 0x3A40AF4
	0x03A40AF4 MOV X19, X0
	0x03A40AF8 CMP W1, 0x1
	0x03A40AFC B.NE 0x3A40B28
	0x03A40B00 MOV X0, X19
	0x03A40B04 BL 0x3EB1AD0
	0x03A40B08 LDR X20, [X0]
	0x03A40B0C BL 0x3EB1AE0
	0x03A40B10 ADD X0, X31, 0x8
	0x03A40B14 MOV X1, X31
	0x03A40B18 BL 0x39B1DB4
	0x03A40B1C CBZ X20, 0x3A40AA0
	0x03A40B20 MOV X0, X20
	0x03A40B24 BL 0x1C16F18
	0x03A40B28 MOV X20, X31
	0x03A40B2C B 0x3A40B34
	0x03A40B30 MOV X19, X0
	0x03A40B34 ADD X0, X31, 0x8
	0x03A40B38 MOV X1, X31
	0x03A40B3C BL 0x39B1DB4
	0x03A40B40 CBNZ X20, 0x3A40B4C
	0x03A40B44 MOV X0, X19
	0x03A40B48 BL 0x1D2C690
	0x03A40B4C MOV X0, X20
	0x03A40B50 BL 0x1C16F18
	0x03A40B54 BL 0x1990590
	0x03A40B58 SUB X31, X31, 0x180
	0x03A40B5C STR X29, [X31 + 0x140]
	0x03A40B60 STP X30, X23, [X31 + 0x150]
	0x03A40B64 STP X22, X21, [X31 + 0x160]
	0x03A40B68 STP X20, X19, [X31 + 0x170]
	0x03A40B6C ADRP X23, 0x9A2000
	0x03A40B70 LDRB W8, [X23 + 0x15F]
	0x03A40B74 MOV W22, W3
	0x03A40B78 MOV X19, X2
	0x03A40B7C MOV X20, X1
	0x03A40B80 MOV X21, X0
	0x03A40B84 TBNZ X8, 0x0, 0x3A40BD8
	0x03A40B88 ADRP X0, 0x715000
	0x03A40B8C LDR X0, [X0 + 0xB98]
	0x03A40B90 BL 0x1C16CF4
	0x03A40B94 ADRP X0, 0x715000
	0x03A40B98 LDR X0, [X0 + 0x768]
	0x03A40B9C BL 0x1C16CF4
	0x03A40BA0 ADRP X0, 0x715000
	0x03A40BA4 LDR X0, [X0 + 0x770]
	0x03A40BA8 BL 0x1C16CF4
	0x03A40BAC ADRP X0, 0x715000
	0x03A40BB0 LDR X0, [X0 + 0x778]
	0x03A40BB4 BL 0x1C16CF4
	0x03A40BB8 ADRP X0, 0x715000
	0x03A40BBC LDR X0, [X0 + 0x780]
	0x03A40BC0 BL 0x1C16CF4
	0x03A40BC4 ADRP X0, 0x715000
	0x03A40BC8 LDR X0, [X0 + 0xBA0]
	0x03A40BCC BL 0x1C16CF4
	0x03A40BD0 MOVZ W8, 0x1
	0x03A40BD4 STRB W8, [X23 + 0x15F]
	0x03A40BD8 STRB W31, [X31 + 0x148]
	0x03A40BDC CBZ W22, 0x3A40D64
	0x03A40BE0 CBZ X19, 0x3A40D7C
	0x03A40BE4 LDUR V0, [X19 + 0x18]
	0x03A40BE8 ADD X0, X31, 0x90
	0x03A40BEC MOV X1, X31
	0x03A40BF0 STR V0, [X31 + 0x9]
	0x03A40BF4 BL 0x3BFDCAC
	0x03A40BF8 CBZ X20, 0x3A40D7C
	0x03A40BFC LDR X22, [X20 + 0x28]
	0x03A40C00 CBZ X22, 0x3A40D7C
	0x03A40C04 ADRP X23, 0x715000
	0x03A40C08 LDR X23, [X23 + 0xBA0]
	0x03A40C0C MOV X0, X22
	0x03A40C10 MOV X2, X31
	0x03A40C14 LDR X1, [X23]
	0x03A40C18 BL 0x3C14D4C
	0x03A40C1C TBZ X0, 0x0, 0x3A40C34
	0x03A40C20 LDR X1, [X23]
	0x03A40C24 MOV X0, X22
	0x03A40C28 MOV X2, X31
	0x03A40C2C BL 0x3C15E9C
	0x03A40C30 STR W0, [X19 + 0x40]
	0x03A40C34 ADRP X23, 0x715000
	0x03A40C38 LDRB W8, [X19 + 0x44]
	0x03A40C3C LDR X23, [X23 + 0xB98]
	0x03A40C40 CBNZ W8, 0x3A40CBC
	0x03A40C44 ADRP X8, 0x715000
	0x03A40C48 LDR X8, [X8 + 0x778]
	0x03A40C4C MOV X0, X22
	0x03A40C50 MOV X2, X31
	0x03A40C54 LDR X1, [X8]
	0x03A40C58 BL 0x3C15010
	0x03A40C5C STR W0, [X19 + 0x30]
	0x03A40C60 ADRP X8, 0x715000
	0x03A40C64 LDR X8, [X8 + 0x770]
	0x03A40C68 MOV X0, X22
	0x03A40C6C MOV X2, X31
	0x03A40C70 LDR X1, [X8]
	0x03A40C74 BL 0x3C15010
	0x03A40C78 STR W0, [X19 + 0x34]
	0x03A40C7C ADRP X8, 0x715000
	0x03A40C80 LDR X8, [X8 + 0x768]
	0x03A40C84 MOV X0, X22
	0x03A40C88 MOV X2, X31
	0x03A40C8C LDR X1, [X8]
	0x03A40C90 BL 0x3C15010
	0x03A40C94 STR W0, [X19 + 0x38]
	0x03A40C98 ADRP X8, 0x715000
	0x03A40C9C LDR X8, [X8 + 0x780]
	0x03A40CA0 MOV X0, X22
	0x03A40CA4 MOV X2, X31
	0x03A40CA8 LDR X1, [X8]
	0x03A40CAC BL 0x3C15010
	0x03A40CB0 MOVZ W8, 0x1
	0x03A40CB4 STR W0, [X19 + 0x3C]
	0x03A40CB8 STRB W8, [X19 + 0x44]
	0x03A40CBC LDR X2, [X21 + 0x20]
	0x03A40CC0 ADD X0, X31, 0x148
	0x03A40CC4 MOV X1, X31
	0x03A40CC8 MOV X3, X31
	0x03A40CCC BL 0x39B1DB0
	0x03A40CD0 ADD X8, X19, 0x108
	0x03A40CD4 LDR V1, [X8]
	0x03A40CD8 ADD X8, X19, 0x118
	0x03A40CDC LDR V0, [X8]
	0x03A40CE0 ADD X8, X19, 0x128
	0x03A40CE4 LDR X21, [X23]
	0x03A40CE8 ADD X0, X31, 0xA8
	0x03A40CEC STP V1, V0, [X31]
	0x03A40CF0 LDR V1, [X8]
	0x03A40CF4 ADD X8, X19, 0x138
	0x03A40CF8 LDR V0, [X8]
	0x03A40CFC ADD X1, X31, 0x0
	0x03A40D00 MOVZ W2, 0x90
	0x03A40D04 STP V1, V0, [X31 + 0x20]
	0x03A40D08 LDUR V1, [X19 + 0xE8]
	0x03A40D0C LDUR V0, [X19 + 0x68]
	0x03A40D10 STP V1, V0, [X31 + 0x40]
	0x03A40D14 LDUR V1, [X19 + 0x48]
	0x03A40D18 LDUR V0, [X19 + 0x58]
	0x03A40D1C STP V1, V0, [X31 + 0x60]
	0x03A40D20 LDUR V0, [X19 + 0xD8]
	0x03A40D24 STR V0, [X31 + 0x8]
	0x03A40D28 LDR X20, [X20 + 0x48]
	0x03A40D2C STP X31, X31, [X31 + 0x90]
	0x03A40D30 BL 0x3EB1AC0
	0x03A40D34 MOVZ W8, 0x1
	0x03A40D38 STR X8, [X31 + 0x138]
	0x03A40D3C ADD X0, X31, 0xA8
	0x03A40D40 MOV X1, X20
	0x03A40D44 MOV X2, X31
	0x03A40D48 MOV X3, X31
	0x03A40D4C MOV X4, X21
	0x03A40D50 BL 0x21EF078
	0x03A40D54 STP X0, X1, [X19 + 0x18]
	0x03A40D58 ADD X0, X31, 0x148
	0x03A40D5C MOV X1, X31
	0x03A40D60 BL 0x39B1DB4
	0x03A40D64 LDP X20, X19, [X31 + 0x170]
	0x03A40D68 LDP X22, X21, [X31 + 0x160]
	0x03A40D6C LDP X30, X23, [X31 + 0x150]
	0x03A40D70 LDR X29, [X31 + 0x140]
	0x03A40D74 ADD X31, X31, 0x180
	0x03A40D78 RET
	0x03A40D7C BL 0x1C16F20
	0x03A40D80 CMP W1, 0x1
	0x03A40D84 MOV X20, X0
	0x03A40D88 B.NE 0x3A40DB4
	0x03A40D8C MOV X0, X20
	0x03A40D90 BL 0x3EB1AD0
	0x03A40D94 LDR X19, [X0]
	0x03A40D98 BL 0x3EB1AE0
	0x03A40D9C ADD X0, X31, 0x148
	0x03A40DA0 MOV X1, X31

ISIL:
	001 Subtract X31, X31, 288
	002 Move [X31+192], X29
	003 Move [X31+200], X30
	004 Move [X31+208], X28
	005 Move [X31+216], X27
	006 Move [X31+224], X26
	007 Move [X31+232], X25
	008 Move [X31+240], X24
	009 Move [X31+248], X23
	010 Move [X31+256], X22
	011 Move [X31+264], X21
	012 Move [X31+272], X20
	013 Move [X31+280], X19
	014 Move X21, 0x9A3000
	015 Move X20, 0x6DC000
	016 Move W8, [X21+342]
	017 Move X20, [X20+2296]
	018 Move X19, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {94}
	023 Move X0, 0x6DC000
	024 Move X0, [X0+2296]
	025 Call 0x1C17CF4
	026 Move X0, 0x716000
	027 Move X0, [X0+2464]
	028 Call 0x1C17CF4
	029 Move X0, 0x716000
	030 Move X0, [X0+2592]
	031 Call 0x1C17CF4
	032 Move X0, 0x716000
	033 Move X0, [X0+2600]
	034 Call 0x1C17CF4
	035 Move X0, 0x716000
	036 Move X0, [X0+2424]
	037 Call 0x1C17CF4
	038 Move X0, 0x716000
	039 Move X0, [X0+2608]
	040 Call 0x1C17CF4
	041 Move X0, 0x716000
	042 Move X0, [X0+2432]
	043 Call 0x1C17CF4
	044 Move X0, 0x716000
	045 Move X0, [X0+2616]
	046 Call 0x1C17CF4
	047 Move X0, 0x716000
	048 Move X0, [X0+2624]
	049 Call 0x1C17CF4
	050 Move X0, 0x716000
	051 Move X0, [X0+2632]
	052 Call 0x1C17CF4
	053 Move X0, 0x716000
	054 Move X0, [X0+2640]
	055 Call 0x1C17CF4
	056 Move X0, 0x716000
	057 Move X0, [X0+2440]
	058 Call 0x1C17CF4
	059 Move X0, 0x716000
	060 Move X0, [X0+2648]
	061 Call 0x1C17CF4
	062 Move X0, 0x716000
	063 Move X0, [X0+2656]
	064 Call 0x1C17CF4
	065 Move X0, 0x716000
	066 Move X0, [X0+2664]
	067 Call 0x1C17CF4
	068 Move X0, 0x716000
	069 Move X0, [X0+2672]
	070 Call 0x1C17CF4
	071 Move X0, 0x716000
	072 Move X0, [X0+2680]
	073 Call 0x1C17CF4
	074 Move X0, 0x716000
	075 Move X0, [X0+2688]
	076 Call 0x1C17CF4
	077 Move X0, 0x716000
	078 Move X0, [X0+2696]
	079 Call 0x1C17CF4
	080 Move X0, 0x716000
	081 Move X0, [X0+2704]
	082 Call 0x1C17CF4
	083 Move X0, 0x716000
	084 Move X0, [X0+2712]
	085 Call 0x1C17CF4
	086 Move X0, 0x716000
	087 Move X0, [X0+2448]
	088 Call 0x1C17CF4
	089 Move X0, 0x716000
	090 Move X0, [X0+2720]
	091 Call 0x1C17CF4
	092 Move W8, 1
	093 Move [X21+342], W8
	094 Move X0, [X20]
	095 Move [X31+160], X31
	096 Move [X31+168], X31
	097 Move [X31+176], X31
	098 Move [X31+144], X31
	099 Move [X31+152], X31
	100 Move [X31+112], X31
	101 Move [X31+120], X31
	102 Move [X31+128], X31
	103 Move [X31+80], X31
	104 Move [X31+88], X31
	105 Move [X31+96], X31
	106 Move [X31+48], X31
	107 Move [X31+56], X31
	108 Move [X31+64], X31
	109 Move W8, [X0+224]
	110 Move X20, [X19+112]
	111 Compare W8, 0
	112 JumpIfNotEqual {114}
	113 Call 0x1C17DFC
	114 Move X0, X20
	115 Move X1, X31
	116 Call CoreUtils.Destroy, X0
	117 Move X0, [X19+120]
	118 Move X1, X31
	119 Call CoreUtils.Destroy, X0
	120 Move X0, [X19+16]
	121 Compare X0, 0
	122 JumpIfEqual {470}
	123 Move X26, 0x716000
	124 Move X26, [X26+2448]
	125 Move X23, 0x716000
	126 Move X20, 0x716000
	127 Move X21, 0x716000
	128 Move X28, 0x716000
	129 Move X27, 0x716000
	130 Move X24, 0x716000
	131 Move X23, [X23+2432]
	132 Move X20, [X20+2720]
	133 Move X21, [X21+2632]
	134 Move X28, [X28+2712]
	135 Move X27, [X27+2624]
	136 Move X24, [X24+2616]
	137 Move X1, [X26]
	138 Move X29, 0x716000
	139 Move X22, 0x716000
	140 Move X29, [X29+2608]
	141 Move X22, [X22+2424]
	142 Add X8, X31, 24
	143 Add X25, X31, 160
	144 Call List`1<Object>.GetEnumerator, X0
	145 NotImplemented "Instruction LDUR not yet implemented."
	146 Move X8, [X31+40]
	147 Move [X25], V0
	148 Move [X31+176], X8
	149 Move X1, [X23]
	150 Add X0, X31, 160
	151 Call Enumerator<Object>.MoveNext, X0
	152 Move TEMP, X0
	153 And TEMP, TEMP, 1
	154 Compare TEMP, 1
	155 JumpIfNotEqual {164}
	156 Move X8, [X31+176]
	157 Compare X8, 0
	158 JumpIfEqual {462}
	159 NotImplemented "Instruction LDUR not yet implemented."
	160 Move [X31+9], V0
	161 Add X0, X31, 144
	162 Move X1, X31
	163 Call JobHandle.Complete, X0
	164 Move X1, [X22]
	165 Add X0, X31, 160
	166 Call Enumerator<Object>.Dispose, X0
	167 Move X0, [X19+24]
	168 Compare X0, 0
	169 JumpIfEqual {470}
	170 Move X1, [X20]
	171 Add X8, X31, 24
	172 Call List`1<Object>.GetEnumerator, X0
	173 NotImplemented "Instruction LDUR not yet implemented."
	174 Move X8, [X31+40]
	175 Move [X31+7], V0
	176 Move [X31+128], X8
	177 Move X1, [X21]
	178 Add X0, X31, 112
	179 Call Enumerator<Object>.MoveNext, X0
	180 Move TEMP, X0
	181 And TEMP, TEMP, 1
	182 Compare TEMP, 1
	183 JumpIfNotEqual {192}
	184 Move X8, [X31+128]
	185 Compare X8, 0
	186 JumpIfEqual {463}
	187 NotImplemented "Instruction LDUR not yet implemented."
	188 Move [X31+9], V0
	189 Add X0, X31, 144
	190 Move X1, X31
	191 Call JobHandle.Complete, X0
	192 Move X1, [X29]
	193 Add X0, X31, 112
	194 Call Enumerator<Object>.Dispose, X0
	195 Move X0, [X19+32]
	196 Compare X0, 0
	197 JumpIfEqual {470}
	198 Move X1, [X28]
	199 Add X8, X31, 24
	200 Call List`1<Object>.GetEnumerator, X0
	201 NotImplemented "Instruction LDUR not yet implemented."
	202 Move X8, [X31+40]
	203 Move [X31+5], V0
	204 Move [X31+96], X8
	205 Move X1, [X27]
	206 Add X0, X31, 80
	207 Call Enumerator<Object>.MoveNext, X0
	208 Move TEMP, X0
	209 And TEMP, TEMP, 1
	210 Compare TEMP, 1
	211 JumpIfNotEqual {220}
	212 Move X8, [X31+96]
	213 Compare X8, 0
	214 JumpIfEqual {464}
	215 NotImplemented "Instruction LDUR not yet implemented."
	216 Move [X31+9], V0
	217 Add X0, X31, 144
	218 Move X1, X31
	219 Call JobHandle.Complete, X0
	220 Move X8, 0x716000
	221 Move X8, [X8+2592]
	222 Add X0, X31, 80
	223 Move X1, [X8]
	224 Call Enumerator<Object>.Dispose, X0
	225 Move X0, [X19+40]
	226 Compare X0, 0
	227 JumpIfEqual {470}
	228 Move X8, 0x716000
	229 Move X8, [X8+2704]
	230 Move X1, [X8]
	231 Add X8, X31, 24
	232 Call List`1<Object>.GetEnumerator, X0
	233 NotImplemented "Instruction LDUR not yet implemented."
	234 Move X8, [X31+40]
	235 Move [X31+3], V0
	236 Move [X31+64], X8
	237 Move X1, [X24]
	238 Add X0, X31, 48
	239 Call Enumerator<Object>.MoveNext, X0
	240 Move TEMP, X0
	241 And TEMP, TEMP, 1
	242 Compare TEMP, 1
	243 JumpIfNotEqual {252}
	244 Move X8, [X31+64]
	245 Compare X8, 0
	246 JumpIfEqual {465}
	247 NotImplemented "Instruction LDUR not yet implemented."
	248 Move [X31+9], V0
	249 Add X0, X31, 144
	250 Move X1, X31
	251 Call JobHandle.Complete, X0
	252 Move X8, 0x716000
	253 Move X8, [X8+2600]
	254 Add X0, X31, 48
	255 Move X1, [X8]
	256 Call Enumerator<Object>.Dispose, X0
	257 Move X0, [X19+16]
	258 Compare X0, 0
	259 JumpIfEqual {470}
	260 Move X1, [X26]
	261 Add X8, X31, 24
	262 Call List`1<Object>.GetEnumerator, X0
	263 NotImplemented "Instruction LDUR not yet implemented."
	264 Move X8, [X31+40]
	265 Move [X25], V0
	266 Move [X31+176], X8
	267 Move X1, [X23]
	268 Add X0, X31, 160
	269 Call Enumerator<Object>.MoveNext, X0
	270 Move TEMP, X0
	271 And TEMP, TEMP, 1
	272 Compare TEMP, 1
	273 JumpIfNotEqual {281}
	274 Move X0, [X31+176]
	275 Compare X0, 0
	276 JumpIfEqual {466}
	277 Move X8, [X0]
	278 Move X9, [X8+440]
	279 Move X1, [X8+448]
	280 NotImplemented "Instruction BLR not yet implemented."
	281 Move X1, [X22]
	282 Add X0, X31, 160
	283 Call Enumerator<Object>.Dispose, X0
	284 Move X0, [X19+24]
	285 Compare X0, 0
	286 JumpIfEqual {470}
	287 Move X1, [X20]
	288 Add X8, X31, 24
	289 Call List`1<Object>.GetEnumerator, X0
	290 NotImplemented "Instruction LDUR not yet implemented."
	291 Move X8, [X31+40]
	292 Move [X31+7], V0
	293 Move [X31+128], X8
	294 Move X1, [X21]
	295 Add X0, X31, 112
	296 Call Enumerator<Object>.MoveNext, X0
	297 Move TEMP, X0
	298 And TEMP, TEMP, 1
	299 Compare TEMP, 1
	300 JumpIfNotEqual {308}
	301 Move X0, [X31+128]
	302 Compare X0, 0
	303 JumpIfEqual {467}
	304 Move X8, [X0]
	305 Move X9, [X8+440]
	306 Move X1, [X8+448]
	307 NotImplemented "Instruction BLR not yet implemented."
	308 Move X1, [X29]
	309 Add X0, X31, 112
	310 Call Enumerator<Object>.Dispose, X0
	311 Move X0, [X19+32]
	312 Compare X0, 0
	313 JumpIfEqual {470}
	314 Move X1, [X28]
	315 Add X8, X31, 24
	316 Call List`1<Object>.GetEnumerator, X0
	317 NotImplemented "Instruction LDUR not yet implemented."
	318 Move X8, [X31+40]
	319 Move [X31+5], V0
	320 Move [X31+96], X8
	321 Move X1, [X27]
	322 Add X0, X31, 80
	323 Call Enumerator<Object>.MoveNext, X0
	324 Move TEMP, X0
	325 And TEMP, TEMP, 1
	326 Compare TEMP, 1
	327 JumpIfNotEqual {335}
	328 Move X0, [X31+96]
	329 Compare X0, 0
	330 JumpIfEqual {468}
	331 Move X8, [X0]
	332 Move X9, [X8+440]
	333 Move X1, [X8+448]
	334 NotImplemented "Instruction BLR not yet implemented."
	335 Move X8, 0x716000
	336 Move X8, [X8+2592]
	337 Add X0, X31, 80
	338 Move X1, [X8]
	339 Call Enumerator<Object>.Dispose, X0
	340 Move X0, [X19+40]
	341 Compare X0, 0
	342 JumpIfEqual {470}
	343 Move X8, 0x716000
	344 Move X8, [X8+2704]
	345 Move X1, [X8]
	346 Add X8, X31, 24
	347 Call List`1<Object>.GetEnumerator, X0
	348 NotImplemented "Instruction LDUR not yet implemented."
	349 Move X8, [X31+40]
	350 Move [X31+3], V0
	351 Move [X31+64], X8
	352 Move X1, [X24]
	353 Add X0, X31, 48
	354 Call Enumerator<Object>.MoveNext, X0
	355 Move TEMP, X0
	356 And TEMP, TEMP, 1
	357 Compare TEMP, 1
	358 JumpIfNotEqual {366}
	359 Move X0, [X31+64]
	360 Compare X0, 0
	361 JumpIfEqual {469}
	362 Move X8, [X0]
	363 Move X9, [X8+440]
	364 Move X1, [X8+448]
	365 NotImplemented "Instruction BLR not yet implemented."
	366 Move X8, 0x716000
	367 Move X8, [X8+2600]
	368 Add X0, X31, 48
	369 Move X1, [X8]
	370 Call Enumerator<Object>.Dispose, X0
	371 Move X0, [X19+80]
	372 Compare X0, 0
	373 JumpIfEqual {470}
	374 Call DecalEntityIndexer.Clear, X0
	375 Move X0, [X19+88]
	376 Compare X0, 0
	377 JumpIfEqual {470}
	378 Move X8, 0x716000
	379 Move X8, [X8+2464]
	380 Move X1, [X8]
	381 Call Dictionary`2<Object, Int32>.Clear, X0
	382 Move X8, [X19+16]
	383 Compare X8, 0
	384 JumpIfEqual {470}
	385 Move W2, [X8+24]
	386 Move W9, [X8+28]
	387 Add W9, W9, 1
	388 NotImplemented "Instruction CMP not yet implemented."
	389 Move [X8+24], W31
	390 Move [X8+28], W9
	391 Move X0, [X8+16]
	392 Move W1, W31
	393 Move X3, X31
	394 Call Array.Clear, X0, X1, X2
	395 Move X8, [X19+24]
	396 Compare X8, 0
	397 JumpIfEqual {470}
	398 Move W2, [X8+24]
	399 Move W9, [X8+28]
	400 Add W9, W9, 1
	401 NotImplemented "Instruction CMP not yet implemented."
	402 Move [X8+24], W31
	403 Move [X8+28], W9
	404 Move X0, [X8+16]
	405 Move W1, W31
	406 Move X3, X31
	407 Call Array.Clear, X0, X1, X2
	408 Move X8, [X19+32]
	409 Compare X8, 0
	410 JumpIfEqual {470}
	411 Move W2, [X8+24]
	412 Move W9, [X8+28]
	413 Add W9, W9, 1
	414 NotImplemented "Instruction CMP not yet implemented."
	415 Move [X8+24], W31
	416 Move [X8+28], W9
	417 Move X0, [X8+16]
	418 Move W1, W31
	419 Move X3, X31
	420 Call Array.Clear, X0, X1, X2
	421 Move X8, [X19+40]
	422 Compare X8, 0
	423 JumpIfEqual {470}
	424 Move W2, [X8+24]
	425 Move W9, [X8+28]
	426 Add W9, W9, 1
	427 NotImplemented "Instruction CMP not yet implemented."
	428 Move [X8+24], W31
	429 Move [X8+28], W9
	430 Move X0, [X8+16]
	431 Move W1, W31
	432 Move X3, X31
	433 Call Array.Clear, X0, X1, X2
	434 Move X8, [X19+96]
	435 Compare X8, 0
	436 JumpIfEqual {470}
	437 Move W2, [X8+24]
	438 Move W9, [X8+28]
	439 Add W9, W9, 1
	440 NotImplemented "Instruction CMP not yet implemented."
	441 Move [X8+24], W31
	442 Move [X8+28], W9
	443 Move X0, [X8+16]
	444 Move W1, W31
	445 Move X3, X31
	446 Call Array.Clear, X0, X1, X2
	447 Move [X19+48], W31
	448 Move X20, [X31+272]
	449 Move X19, [X31+280]
	450 Move X22, [X31+256]
	451 Move X21, [X31+264]
	452 Move X24, [X31+240]
	453 Move X23, [X31+248]
	454 Move X26, [X31+224]
	455 Move X25, [X31+232]
	456 Move X28, [X31+208]
	457 Move X27, [X31+216]
	458 Move X29, [X31+192]
	459 Move X30, [X31+200]
	460 Add X31, X31, 288
	461 Return 
	462 Call 0x1C17F20
	463 Call 0x1C17F20
	464 Call 0x1C17F20
	465 Call 0x1C17F20
	466 Call 0x1C17F20
	467 Call 0x1C17F20
	468 Call 0x1C17F20
	469 Call 0x1C17F20
	470 Call 0x1C17F20
	471 NotImplemented "Instruction CMP not yet implemented."
	472 Move [X31+16], X0
	473 Move X0, [X31+16]
	474 Call 0x3EB2AD0
	475 Move X21, [X0]
	476 Call 0x3EB2AE0
	477 Move X8, 0x716000
	478 Move X8, [X8+2600]
	479 Add X0, X31, 48
	480 Move X1, [X8]
	481 Call Enumerator<Object>.Dispose, X0
	482 Compare X21, 0
	483 JumpIfEqual {371}
	484 Move X21, X31
	485 Move [X31+16], X0
	486 Move X8, 0x716000
	487 Move X8, [X8+2600]
	488 Move X1, [X8]
	489 Add X0, X31, 48
	490 Call Enumerator<Object>.Dispose, X0
	491 Compare X21, 0
	492 JumpIfEqual {663}
	493 Move X0, X21
	494 Call 0x1C17F18
	495 NotImplemented "Instruction CMP not yet implemented."
	496 Move [X31+16], X0
	497 Move X0, [X31+16]
	498 Call 0x3EB2AD0
	499 Move X21, [X0]
	500 Call 0x3EB2AE0
	501 Move X8, 0x716000
	502 Move X8, [X8+2592]
	503 Add X0, X31, 80
	504 Move X1, [X8]
	505 Call Enumerator<Object>.Dispose, X0
	506 Compare X21, 0
	507 JumpIfEqual {340}
	508 Move X21, X31
	509 Move [X31+16], X0
	510 Move X8, 0x716000
	511 Move X8, [X8+2592]
	512 Move X1, [X8]
	513 Add X0, X31, 80
	514 Call Enumerator<Object>.Dispose, X0
	515 Compare X21, 0
	516 JumpIfEqual {663}
	517 Move X0, X21
	518 Call 0x1C17F18
	519 NotImplemented "Instruction CMP not yet implemented."
	520 Move [X31+16], X0
	521 Move X0, [X31+16]
	522 Call 0x3EB2AD0
	523 Move X21, [X0]
	524 Call 0x3EB2AE0
	525 Move X1, [X29]
	526 Add X0, X31, 112
	527 Call Enumerator<Object>.Dispose, X0
	528 Compare X21, 0
	529 JumpIfEqual {311}
	530 Move X0, X21
	531 Call 0x1C17F18
	532 Move X21, X31
	533 Move [X31+16], X0
	534 Move X1, [X29]
	535 Add X0, X31, 112
	536 Call Enumerator<Object>.Dispose, X0
	537 Compare X21, 0
	538 JumpIfEqual {663}
	539 Move X0, X21
	540 Call 0x1C17F18
	541 NotImplemented "Instruction CMP not yet implemented."
	542 Move [X31+16], X0
	543 Move X0, [X31+16]
	544 Call 0x3EB2AD0
	545 Move X23, [X0]
	546 Call 0x3EB2AE0
	547 Move X1, [X22]
	548 Add X0, X31, 160
	549 Call Enumerator<Object>.Dispose, X0
	550 Compare X23, 0
	551 JumpIfEqual {284}
	552 Move X0, X23
	553 Call 0x1C17F18
	554 Move X23, X31
	555 Move [X31+16], X0
	556 Move X1, [X22]
	557 Add X0, X31, 160
	558 Call Enumerator<Object>.Dispose, X0
	559 Compare X23, 0
	560 JumpIfEqual {663}
	561 Move X0, X23
	562 Call 0x1C17F18
	563 NotImplemented "Instruction CMP not yet implemented."
	564 Move [X31+16], X0
	565 Move X0, [X31+16]
	566 Call 0x3EB2AD0
	567 Move X8, [X0]
	568 Move [X31+8], X8
	569 Call 0x3EB2AE0
	570 Move X8, 0x716000
	571 Move X8, [X8+2600]
	572 Add X0, X31, 48
	573 Move X1, [X8]
	574 Call Enumerator<Object>.Dispose, X0
	575 Move X8, [X31+8]
	576 Compare X8, 0
	577 JumpIfEqual {257}
	578 Move X19, X31
	579 Move X19, [X31+8]
	580 Move [X31+16], X0
	581 Move X8, 0x716000
	582 Move X8, [X8+2600]
	583 Move X1, [X8]
	584 Add X0, X31, 48
	585 Call Enumerator<Object>.Dispose, X0
	586 Compare X19, 0
	587 JumpIfEqual {663}
	588 Move X0, X19
	589 Call 0x1C17F18
	590 NotImplemented "Instruction CMP not yet implemented."
	591 Move [X31+16], X0
	592 Move X0, [X31+16]
	593 Call 0x3EB2AD0
	594 Move X8, [X0]
	595 Move [X31+8], X8
	596 Call 0x3EB2AE0
	597 Move X8, 0x716000
	598 Move X8, [X8+2592]
	599 Add X0, X31, 80
	600 Move X1, [X8]
	601 Call Enumerator<Object>.Dispose, X0
	602 Move X8, [X31+8]
	603 Compare X8, 0
	604 JumpIfEqual {225}
	605 Move X19, X31
	606 Move X19, [X31+8]
	607 Move [X31+16], X0
	608 Move X8, 0x716000
	609 Move X8, [X8+2592]
	610 Move X1, [X8]
	611 Add X0, X31, 80
	612 Call Enumerator<Object>.Dispose, X0
	613 Compare X19, 0
	614 JumpIfEqual {663}
	615 Move X0, X19
	616 Call 0x1C17F18
	617 NotImplemented "Instruction CMP not yet implemented."
	618 Move [X31+16], X0
	619 Move X0, [X31+16]
	620 Call 0x3EB2AD0
	621 Move X8, [X0]
	622 Move [X31+8], X8
	623 Call 0x3EB2AE0
	624 Move X1, [X29]
	625 Add X0, X31, 112
	626 Call Enumerator<Object>.Dispose, X0
	627 Move X8, [X31+8]
	628 Compare X8, 0
	629 JumpIfEqual {195}
	630 Move X19, X31
	631 Move X19, [X31+8]
	632 Move [X31+16], X0
	633 Move X1, [X29]
	634 Add X0, X31, 112
	635 Call Enumerator<Object>.Dispose, X0
	636 Compare X19, 0
	637 JumpIfEqual {663}
	638 Move X0, X19
	639 Call 0x1C17F18
	640 NotImplemented "Instruction CMP not yet implemented."
	641 Move [X31+16], X0
	642 Move X0, [X31+16]
	643 Call 0x3EB2AD0
	644 Move X8, [X0]
	645 Move [X31+8], X8
	646 Call 0x3EB2AE0
	647 Move X1, [X22]
	648 Add X0, X31, 160
	649 Call Enumerator<Object>.Dispose, X0
	650 Move X8, [X31+8]
	651 Compare X8, 0
	652 JumpIfEqual {167}
	653 Move X0, X8
	654 Call 0x1C17F18
	655 Move X19, X31
	656 Move X19, [X31+8]
	657 Move [X31+16], X0
	658 Move X1, [X22]
	659 Add X0, X31, 160
	660 Call Enumerator<Object>.Dispose, X0
	661 Compare X19, 0
	662 JumpIfNotEqual {665}
	663 Move X0, [X31+16]
	664 Call 0x1D2D690
	665 Move X0, X19
	666 Call 0x1C17F18
	667 Call 0x1991590

