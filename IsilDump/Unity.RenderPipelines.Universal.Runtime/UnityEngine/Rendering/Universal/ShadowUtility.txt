Type: UnityEngine.Rendering.Universal.ShadowUtility

Method: UnityEngine.Rendering.Universal.ShadowUtility/Edge CreateEdge(System.Int32 triangleIndexA, System.Int32 triangleIndexB, System.Collections.Generic.List`1<UnityEngine.Vector3> vertices, System.Collections.Generic.List`1<System.Int32> triangles)

Disassembly:
	0x03A2B660 CBZ X0, 0x3A2B804
	0x03A2B664 MOV X1, X31
	0x03A2B668 BL 0x33BE520
	0x03A2B66C CBZ X0, 0x3A2B804
	0x03A2B670 LDR X8, [X0]
	0x03A2B674 LDP X9, X1, [X8 + 0x168]
	0x03A2B678 BLR X9
	0x03A2B67C CBZ X0, 0x3A2B804
	0x03A2B680 ADRP X8, 0x729000
	0x03A2B684 LDR X8, [X8 + 0xBF0]
	0x03A2B688 MOV X2, X31
	0x03A2B68C LDR X1, [X8]
	0x03A2B690 BL 0x322BD1C
	0x03A2B694 MOV X20, X31
	0x03A2B698 TBNZ X0, 0x0, 0x3A2B7F0
	0x03A2B69C ADRP X8, 0x6F1000
	0x03A2B6A0 LDR X8, [X8 + 0x8A8]
	0x03A2B6A4 LDR X0, [X8]
	0x03A2B6A8 LDR W8, [X0 + 0xE0]
	0x03A2B6AC CBNZ W8, 0x3A2B6B4
	0x03A2B6B0 BL 0x1C16DFC
	0x03A2B6B4 MOV X0, X31
	0x03A2B6B8 BL 0x3A8AB60
	0x03A2B6BC CBZ X0, 0x3A2B804
	0x03A2B6C0 MOV X1, X31
	0x03A2B6C4 BL 0x3C389D4
	0x03A2B6C8 ADRP X8, 0x729000
	0x03A2B6CC LDR X8, [X8 + 0xBE8]
	0x03A2B6D0 MOV X1, X0
	0x03A2B6D4 MOV X2, X31
	0x03A2B6D8 LDR X8, [X8]
	0x03A2B6DC MOV X0, X8
	0x03A2B6E0 BL 0x321B938
	0x03A2B6E4 ADRP X8, 0x6C8000
	0x03A2B6E8 LDR X8, [X8 + 0xA28]
	0x03A2B6EC MOV X20, X0
	0x03A2B6F0 LDR X8, [X8]
	0x03A2B6F4 LDR W9, [X8 + 0xE0]
	0x03A2B6F8 CBNZ W9, 0x3A2B704
	0x03A2B6FC MOV X0, X8
	0x03A2B700 BL 0x1C16DFC
	0x03A2B704 MOV X0, X20
	0x03A2B708 MOV X1, X19
	0x03A2B70C MOV X2, X31
	0x03A2B710 BL 0x3C065A4
	0x03A2B714 MOV X20, X31
	0x03A2B718 B 0x3A2B7F0
	0x03A2B71C MOV X0, X19
	0x03A2B720 BL 0x3A2B808
	0x03A2B724 ADRP X8, 0x6F1000
	0x03A2B728 LDR X8, [X8 + 0x8A8]
	0x03A2B72C LDR X0, [X8]
	0x03A2B730 BL 0x1C16F10
	0x03A2B734 MOV X1, X19
	0x03A2B738 MOV X2, X31
	0x03A2B73C MOV X20, X0
	0x03A2B740 BL 0x3A89550
	0x03A2B744 MOV X0, X19
	0x03A2B748 BL 0x3A2B86C
	0x03A2B74C LDR X10, [X19 + 0x40]
	0x03A2B750 CBZ X10, 0x3A2B804
	0x03A2B754 LDR X8, [X10 + 0x18]
	0x03A2B758 CMP W8, 0x1
	0x03A2B75C B.LT 0x3A2B7F0
	0x03A2B760 AND X8, X8, 0x0
	0x03A2B764 CBZ X8, 0x3A2B7F0
	0x03A2B768 ADRP X9, 0x729000
	0x03A2B76C LDR X9, [X9 + 0x8F8]
	0x03A2B770 ADD X10, X10, 0x20
	0x03A2B774 LDR X9, [X9]
	0x03A2B778 CBZ X8, 0x3A2B800
	0x03A2B77C LDR X11, [X10]
	0x03A2B780 CBZ X11, 0x3A2B7AC
	0x03A2B784 LDR X12, [X11]
	0x03A2B788 LDRB W13, [X9 + 0x130]
	0x03A2B78C LDRB W14, [X12 + 0x130]
	0x03A2B790 CMP W14, W13
	0x03A2B794 B.CC 0x3A2B7AC
	0x03A2B798 LDR X12, [X12 + 0xC8]
	0x03A2B79C ADD X12, X12, X13, 0x3, LSL
	0x03A2B7A0 LDUR X12, [X12 - 0x8]
	0x03A2B7A4 CMP X12, X9
	0x03A2B7A8 B.EQ 0x3A2B7BC
	0x03A2B7AC SUBS X8, X8, 0x1
	0x03A2B7B0 ADD X10, X10, 0x8
	0x03A2B7B4 B.NE 0x3A2B778
	0x03A2B7B8 B 0x3A2B7F0
	0x03A2B7BC LDR X8, [X11 + 0x50]
	0x03A2B7C0 CBZ X8, 0x3A2B804
	0x03A2B7C4 ADRP X9, 0x727000
	0x03A2B7C8 LDR X9, [X9 + 0xE28]
	0x03A2B7CC LDP X21, X19, [X8 + 0x50]
	0x03A2B7D0 LDR X0, [X9]
	0x03A2B7D4 LDR W9, [X0 + 0xE0]
	0x03A2B7D8 CBNZ W9, 0x3A2B7E0
	0x03A2B7DC BL 0x1C16DFC
	0x03A2B7E0 MOV X0, X21
	0x03A2B7E4 MOV X1, X19
	0x03A2B7E8 MOV X2, X31
	0x03A2B7EC BL 0x39E1430
	0x03A2B7F0 MOV X0, X20
	0x03A2B7F4 LDP X20, X19, [X31 + 0x10]
	0x03A2B7F8 LDP X30, X21, [X31], #0x20
	0x03A2B7FC RET
	0x03A2B800 BL 0x1C16F28
	0x03A2B804 BL 0x1C16F20
	0x03A2B808 STP X30, X21, [X31 - 0x20]!
	0x03A2B80C STP X20, X19, [X31 + 0x10]
	0x03A2B810 LDR X8, [X0 + 0x20]
	0x03A2B814 CBZ X8, 0x3A2B85C
	0x03A2B818 MOV X19, X0
	0x03A2B81C MOV X20, X31
	0x03A2B820 LDR W9, [X8 + 0x18]
	0x03A2B824 CMP X20, W9, SXTW
	0x03A2B828 B.GE 0x3A2B85C
	0x03A2B82C CMP X20, X9
	0x03A2B830 B.CS 0x3A2B868
	0x03A2B834 ADD X21, X8, X20, 0x3, LSL
	0x03A2B838 LDR X0, [X21 + 0x20]
	0x03A2B83C CBZ X0, 0x3A2B850
	0x03A2B840 MOV X1, X31
	0x03A2B844 BL 0x3A4B330
	0x03A2B848 STR X31, [X21 + 0x20]
	0x03A2B84C LDR X8, [X19 + 0x20]
	0x03A2B850 ADD X20, X20, 0x1
	0x03A2B854 CBNZ X8, 0x3A2B820
	0x03A2B858 BL 0x1C16F20
	0x03A2B85C LDP X20, X19, [X31 + 0x10]
	0x03A2B860 LDP X30, X21, [X31], #0x20
	0x03A2B864 RET
	0x03A2B868 BL 0x1C16F28
	0x03A2B86C STR X30, [X31 - 0x40]!
	0x03A2B870 STP X24, X23, [X31 + 0x10]
	0x03A2B874 STP X22, X21, [X31 + 0x20]
	0x03A2B878 STP X20, X19, [X31 + 0x30]
	0x03A2B87C ADRP X20, 0x9B7000

ISIL:
	001 Move [X31-96], D11
	002 Move [X31-88], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X30
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X24, 0x9B8000
	013 Move W9, [X24+77]
	014 Move X21, X3
	015 Move X22, X2
	016 Move W23, W1
	017 Move W20, W0
	018 Move X19, X8
	019 Move TEMP, X9
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {31}
	023 Move X0, 0x6CD000
	024 Move X0, [X0+2432]
	025 Call 0x1C17CF4
	026 Move X0, 0x6F3000
	027 Move X0, [X0+3896]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X24+77], W8
	031 Move [X31+46], W31
	032 NotImplemented "Instruction STRH not yet implemented."
	033 Compare X21, 0
	034 JumpIfEqual {157}
	035 Move X24, 0x6F3000
	036 Move X24, [X24+3896]
	037 Move X0, X21
	038 Move W1, W20
	039 Move X2, [X24]
	040 Call List`1<Int32>.get_Item, X0, X1
	041 Move X2, [X24]
	042 Move W20, W0
	043 Move X0, X21
	044 Move W1, W23
	045 Call List`1<Int32>.get_Item, X0, X1
	046 Compare X22, 0
	047 JumpIfEqual {157}
	048 Move X23, 0x6CD000
	049 Move X23, [X23+2432]
	050 Move W21, W0
	051 Move X0, X22
	052 Move W1, W20
	053 Move X2, [X23]
	054 Call List`1<Vector3>.get_Item, X0, X1
	055 Move X2, [X23]
	056 Move X0, X22
	057 Move W1, W21
	058 Move V8, V0
	059 Move V9, V1
	060 Call List`1<Vector3>.get_Item, X0, X1
	061 Move X22, 0x9AE000
	062 Move W8, [X22+1925]
	063 Move V10, V0
	064 Move V11, V1
	065 Compare W8, 0
	066 JumpIfNotEqual {72}
	067 Move X0, 0x6C9000
	068 Move X0, [X0+1448]
	069 Call 0x1C17CF4
	070 Move W8, 1
	071 Move [X22+1925], W8
	072 Move X8, 0x6C9000
	073 Move X8, [X8+1448]
	074 Subtract S8, S10, S8
	075 Subtract S9, S11, S9
	076 Move X0, [X8]
	077 Move W8, [X0+224]
	078 Compare W8, 0
	079 JumpIfNotEqual {81}
	080 Call 0x1C17DFC
	081 Move X8, -49545216
	082 Multiply S0, S8, S8
	083 Multiply S1, S9, S9
	084 Move V2, [X8+380]
	085 Move X22, 0x6C9000
	086 Add S1, S0, S1
	087 Move S0, W31
	088 Move X22, [X22+1440]
	089 Add S1, S1, S0
	090 NotImplemented "Instruction FSQRT not yet implemented."
	091 NotImplemented "Instruction FCMP not yet implemented."
	092 NotImplemented "Instruction FDIV not yet implemented."
	093 NotImplemented "Instruction FDIV not yet implemented."
	094 NotImplemented "Instruction FDIV not yet implemented."
	095 Move X23, 0x9AE000
	096 Move W8, [X23+1923]
	097 Compare W8, 0
	098 JumpIfNotEqual {104}
	099 Move X0, 0x6C9000
	100 Move X0, [X0+1440]
	101 Call 0x1C17CF4
	102 Move W8, 1
	103 Move [X23+1923], W8
	104 Move X8, [X22]
	105 Move X8, [X8+184]
	106 Move S8, [X8]
	107 Move S9, [X8+4]
	108 Move V10, [X8+8]
	109 Move X23, 0x9AE000
	110 Move W8, [X23+2591]
	111 Compare W8, 0
	112 JumpIfNotEqual {118}
	113 Move X0, 0x6C9000
	114 Move X0, [X0+1440]
	115 Call 0x1C17CF4
	116 Move W8, 1
	117 Move [X23+2591], W8
	118 Move X8, [X22]
	119 NotImplemented "Instruction LDRH not yet implemented."
	120 Move W10, [X31+46]
	121 NotImplemented "Instruction CMP not yet implemented."
	122 Move X8, [X8+184]
	123 Move X24, [X31+48]
	124 Move X23, [X31+56]
	125 Move X30, [X31+32]
	126 Move S0, [X8+72]
	127 Move S1, [X8+76]
	128 Move V2, [X8+80]
	129 NotImplemented "Instruction CSET not yet implemented."
	130 Move [X19], W20
	131 Move [X19+4], W21
	132 Multiply S4, S10, S1
	133 Multiply S3, S9, S2
	134 Multiply S5, S10, S0
	135 Multiply S2, S8, S2
	136 Multiply S1, S8, S1
	137 Multiply S0, S9, S0
	138 Subtract S3, S3, S4
	139 Subtract S2, S5, S2
	140 Subtract S0, S1, S0
	141 Move [X19+20], W31
	142 Move [X19+24], W8
	143 Move [X19+27], W10
	144 Move [X19+8], S3
	145 Move [X19+16], S2
	146 Move [X19+16], S0
	147 NotImplemented "Instruction STURH not yet implemented."
	148 Move X20, [X31+80]
	149 Move X19, [X31+88]
	150 Move X22, [X31+64]
	151 Move X21, [X31+72]
	152 Move D9, [X31+16]
	153 Move D8, [X31+24]
	154 Move D11, [X31+96]
	155 Move D10, [X31+104]
	156 Return X0
	157 Call 0x1C17F20

Method: System.Void PopulateEdgeArray(System.Collections.Generic.List`1<UnityEngine.Vector3> vertices, System.Collections.Generic.List`1<System.Int32> triangles, System.Collections.Generic.List`1<UnityEngine.Rendering.Universal.ShadowUtility/Edge> edges)

Disassembly:
	0x03A2B894 BL 0x1C16CF4
	0x03A2B898 ADRP X0, 0x6C8000
	0x03A2B89C LDR X0, [X0 + 0x758]
	0x03A2B8A0 BL 0x1C16CF4
	0x03A2B8A4 ADRP X0, 0x6C8000
	0x03A2B8A8 LDR X0, [X0 + 0x598]
	0x03A2B8AC BL 0x1C16CF4
	0x03A2B8B0 ADRP X0, 0x729000
	0x03A2B8B4 LDR X0, [X0 + 0xBF8]
	0x03A2B8B8 BL 0x1C16CF4
	0x03A2B8BC ADRP X0, 0x729000
	0x03A2B8C0 LDR X0, [X0 + 0xC00]
	0x03A2B8C4 BL 0x1C16CF4
	0x03A2B8C8 MOVZ W8, 0x1
	0x03A2B8CC STRB W8, [X20 + 0x59]
	0x03A2B8D0 LDR X8, [X19 + 0x20]
	0x03A2B8D4 CBZ X8, 0x3A2B980
	0x03A2B8D8 ADRP X22, 0x6C8000
	0x03A2B8DC ADRP X23, 0x729000
	0x03A2B8E0 ADRP X24, 0x6C8000
	0x03A2B8E4 LDR X22, [X22 + 0x758]
	0x03A2B8E8 LDR X23, [X23 + 0xC00]
	0x03A2B8EC LDR X24, [X24 + 0xA28]
	0x03A2B8F0 MOV X21, X31
	0x03A2B8F4 LDR W9, [X8 + 0x18]
	0x03A2B8F8 CMP X21, W9, SXTW
	0x03A2B8FC B.GE 0x3A2B96C
	0x03A2B900 CMP X21, X9
	0x03A2B904 B.CS 0x3A2BA70
	0x03A2B908 ADD X9, X8, X21, 0x3, LSL
	0x03A2B90C LDR X9, [X9 + 0x20]
	0x03A2B910 CBZ X9, 0x3A2B960
	0x03A2B914 LDR X0, [X22]
	0x03A2B918 ADD X1, X31, 0xC
	0x03A2B91C STR W21, [X31 + 0xC]
	0x03A2B920 BL 0x1C16E04
	0x03A2B924 LDR X8, [X23]
	0x03A2B928 MOV X1, X0
	0x03A2B92C MOV X2, X31
	0x03A2B930 MOV X0, X8
	0x03A2B934 BL 0x321EFD0
	0x03A2B938 LDR X8, [X24]
	0x03A2B93C MOV X20, X0
	0x03A2B940 LDR W9, [X8 + 0xE0]
	0x03A2B944 CBNZ W9, 0x3A2B950
	0x03A2B948 MOV X0, X8
	0x03A2B94C BL 0x1C16DFC
	0x03A2B950 MOV X0, X20
	0x03A2B954 MOV X1, X31
	0x03A2B958 BL 0x3C0649C
	0x03A2B95C LDR X8, [X19 + 0x20]
	0x03A2B960 ADD X21, X21, 0x1
	0x03A2B964 CBNZ X8, 0x3A2B8F4
	0x03A2B968 B 0x3A2BA58
	0x03A2B96C LDR X8, [X19 + 0x40]
	0x03A2B970 CBZ X8, 0x3A2BA58
	0x03A2B974 LDR W10, [X8 + 0x18]
	0x03A2B978 CMP W9, W10
	0x03A2B97C B.EQ 0x3A2B9A8
	0x03A2B980 LDR X8, [X19 + 0x40]
	0x03A2B984 CBZ X8, 0x3A2BA58
	0x03A2B988 ADRP X9, 0x729000
	0x03A2B98C LDR X9, [X9 + 0xBF8]
	0x03A2B990 LDR W1, [X8 + 0x18]
	0x03A2B994 LDR X0, [X9]
	0x03A2B998 BL 0x1C16D6C
	0x03A2B99C LDR X8, [X19 + 0x40]
	0x03A2B9A0 STR X0, [X19 + 0x20]
	0x03A2B9A4 CBZ X8, 0x3A2BA58
	0x03A2B9A8 ADRP X21, 0x6C8000
	0x03A2B9AC LDR X21, [X21 + 0x598]
	0x03A2B9B0 MOVZ W22, 0x4
	0x03A2B9B4 LDR W9, [X8 + 0x18]
	0x03A2B9B8 SUB X23, X22, 0x4
	0x03A2B9BC CMP X23, W9, SXTW
	0x03A2B9C0 B.GE 0x3A2BA5C
	0x03A2B9C4 CMP X23, X9
	0x03A2B9C8 B.CS 0x3A2BA70
	0x03A2B9CC LDR X0, [X21]
	0x03A2B9D0 LDR X20, [X8, X22, LSL #3]
	0x03A2B9D4 LDR W9, [X0 + 0xE0]
	0x03A2B9D8 CBNZ W9, 0x3A2B9E0
	0x03A2B9DC BL 0x1C16DFC
	0x03A2B9E0 MOV X0, X20
	0x03A2B9E4 MOV X1, X31
	0x03A2B9E8 MOV X2, X31
	0x03A2B9EC BL 0x3C354F8
	0x03A2B9F0 TBZ X0, 0x0, 0x3A2BA4C
	0x03A2B9F4 LDR X8, [X19 + 0x40]
	0x03A2B9F8 CBZ X8, 0x3A2BA58
	0x03A2B9FC LDR W9, [X8 + 0x18]
	0x03A2BA00 CMP X23, X9
	0x03A2BA04 B.CS 0x3A2BA70
	0x03A2BA08 LDR X0, [X8, X22, LSL #3]
	0x03A2BA0C CBZ X0, 0x3A2BA58
	0x03A2BA10 LDR X24, [X19 + 0x20]
	0x03A2BA14 MOV X1, X31
	0x03A2BA18 BL 0x3A757B0
	0x03A2BA1C CBZ X24, 0x3A2BA58
	0x03A2BA20 MOV X20, X0
	0x03A2BA24 CBZ X0, 0x3A2BA3C
	0x03A2BA28 LDR X8, [X24]
	0x03A2BA2C MOV X0, X20
	0x03A2BA30 LDR X1, [X8 + 0x40]
	0x03A2BA34 BL 0x1C16E00
	0x03A2BA38 CBZ X0, 0x3A2BA74
	0x03A2BA3C LDR W8, [X24 + 0x18]
	0x03A2BA40 CMP X23, X8
	0x03A2BA44 B.CS 0x3A2BA70
	0x03A2BA48 STR X20, [X24, X22, LSL #3]
	0x03A2BA4C LDR X8, [X19 + 0x40]
	0x03A2BA50 ADD X22, X22, 0x1
	0x03A2BA54 CBNZ X8, 0x3A2B9B4
	0x03A2BA58 BL 0x1C16F20
	0x03A2BA5C LDP X20, X19, [X31 + 0x30]
	0x03A2BA60 LDP X22, X21, [X31 + 0x20]
	0x03A2BA64 LDP X24, X23, [X31 + 0x10]
	0x03A2BA68 LDR X30, [X31], #0x40
	0x03A2BA6C RET
	0x03A2BA70 BL 0x1C16F28
	0x03A2BA74 BL 0x1C16F44
	0x03A2BA78 MOV X1, X31
	0x03A2BA7C BL 0x1C16DEC
	0x03A2BA80 STP X30, X19, [X31 - 0x10]!
	0x03A2BA84 LDR X0, [X1]
	0x03A2BA88 CBZ X0, 0x3A2BA9C
	0x03A2BA8C MOV X19, X1
	0x03A2BA90 MOV X1, X31
	0x03A2BA94 BL 0x3A4B330
	0x03A2BA98 STR X31, [X19]
	0x03A2BA9C LDP X30, X19, [X31], #0x10
	0x03A2BAA0 RET
	0x03A2BAA4 STP X30, X19, [X31 - 0x10]!
	0x03A2BAA8 MOV X19, X0
	0x03A2BAAC BL 0x3A2B808
	0x03A2BAB0 MOV X0, X19
	0x03A2BAB4 MOV X1, X31
	0x03A2BAB8 LDP X30, X19, [X31], #0x10
	0x03A2BABC B 0x3C55314
	0x03A2BAC0 MOV X0, X31
	0x03A2BAC4 RET
	0x03A2BAC8 STR X30, [X31 - 0x30]!
	0x03A2BACC STP X22, X21, [X31 + 0x10]
	0x03A2BAD0 STP X20, X19, [X31 + 0x20]
	0x03A2BAD4 ADRP X20, 0x9B7000
	0x03A2BAD8 LDRB W8, [X20 + 0x5A]
	0x03A2BADC MOV X19, X0
	0x03A2BAE0 TBNZ X8, 0x0, 0x3A2BB34
	0x03A2BAE4 ADRP X0, 0x6C8000
	0x03A2BAE8 LDR X0, [X0 + 0xA28]
	0x03A2BAEC BL 0x1C16CF4
	0x03A2BAF0 ADRP X0, 0x6CF000
	0x03A2BAF4 LDR X0, [X0 + 0x5F0]
	0x03A2BAF8 BL 0x1C16CF4
	0x03A2BAFC ADRP X0, 0x6C9000
	0x03A2BB00 LDR X0, [X0 + 0x470]
	0x03A2BB04 BL 0x1C16CF4
	0x03A2BB08 ADRP X0, 0x6CB000
	0x03A2BB0C LDR X0, [X0 + 0xEF8]
	0x03A2BB10 BL 0x1C16CF4
	0x03A2BB14 ADRP X0, 0x6C8000

ISIL:
	001 Subtract X31, X31, 240
	002 Move [X31+160], X30
	003 Move [X31+176], X26
	004 Move [X31+184], X25
	005 Move [X31+192], X24
	006 Move [X31+200], X23
	007 Move [X31+208], X22
	008 Move [X31+216], X21
	009 Move [X31+224], X20
	010 Move [X31+232], X19
	011 Move X22, 0x9B8000
	012 Move W8, [X22+78]
	013 Move X19, X2
	014 Move X20, X1
	015 Move X21, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {28}
	020 Move X0, 0x72A000
	021 Move X0, [X0+2984]
	022 Call 0x1C17CF4
	023 Move X0, 0x6CA000
	024 Move X0, [X0+3624]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X22+78], W8
	028 Compare X20, 0
	029 JumpIfEqual {169}
	030 Move W8, [X20+24]
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Move X25, 0x72A000
	033 Move X25, [X25+2984]
	034 Move W0, W31
	035 Add X24, X31, 128
	036 Move W26, 28
	037 Add W22, W0, 1
	038 Add X8, X31, 64
	039 Move W1, W22
	040 Move X2, X21
	041 Move X3, X20
	042 Call ShadowUtility.CreateEdge, X0, X1, X2, X3
	043 Compare X19, 0
	044 JumpIfEqual {169}
	045 Move V0, [X31+4]
	046 NotImplemented "Instruction LDUR not yet implemented."
	047 Move X10, [X25]
	048 Move [X31+6], V0
	049 Move [X31+108], V1
	050 Move W9, [X19+28]
	051 Move X8, [X19+16]
	052 Add W9, W9, 1
	053 Move [X19+28], W9
	054 Compare X8, 0
	055 JumpIfEqual {169}
	056 NotImplemented "Instruction LDRSW not yet implemented."
	057 Move W11, [X8+24]
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Add W10, W9, 1
	060 Move [X19+24], W10
	061 NotImplemented "Instruction LDUR not yet implemented."
	062 Move V1, [X31+6]
	063 NotImplemented "Instruction NOP not yet implemented."
	064 NotImplemented "Instruction MADD not yet implemented."
	065 Move [X8+44], V0
	066 Move [X8+2], V1
	067 Move X8, [X10+32]
	068 Move V0, [X31+6]
	069 NotImplemented "Instruction LDUR not yet implemented."
	070 Add X1, X31, 128
	071 Move X8, [X8+192]
	072 Move X0, X19
	073 Move X2, [X8+112]
	074 Move [X31+8], V0
	075 Move [X24+12], V1
	076 Call List`1<Edge>.AddWithResize, X0, X1
	077 Add W23, W22, 1
	078 Add X8, X31, 32
	079 Move W0, W22
	080 Move W1, W23
	081 Move X2, X21
	082 Move X3, X20
	083 Call ShadowUtility.CreateEdge, X0, X1, X2, X3
	084 Move V0, [X31+2]
	085 NotImplemented "Instruction LDUR not yet implemented."
	086 Move X10, [X25]
	087 Move [X31+6], V0
	088 Move [X31+108], V1
	089 Move W9, [X19+28]
	090 Move X8, [X19+16]
	091 Add W9, W9, 1
	092 Move [X19+28], W9
	093 Compare X8, 0
	094 JumpIfEqual {169}
	095 NotImplemented "Instruction LDRSW not yet implemented."
	096 Move W11, [X8+24]
	097 NotImplemented "Instruction CMP not yet implemented."
	098 Add W10, W9, 1
	099 Move [X19+24], W10
	100 NotImplemented "Instruction LDUR not yet implemented."
	101 Move V1, [X31+6]
	102 NotImplemented "Instruction NOP not yet implemented."
	103 NotImplemented "Instruction MADD not yet implemented."
	104 Move [X8+44], V0
	105 Move [X8+2], V1
	106 Move X8, [X10+32]
	107 Move V0, [X31+6]
	108 NotImplemented "Instruction LDUR not yet implemented."
	109 Add X1, X31, 128
	110 Move X8, [X8+192]
	111 Move X0, X19
	112 Move X2, [X8+112]
	113 Move [X31+8], V0
	114 Move [X24+12], V1
	115 Call List`1<Edge>.AddWithResize, X0, X1
	116 Subtract W22, W23, 2
	117 Add X8, X31, 0
	118 Move W0, W23
	119 Move W1, W22
	120 Move X2, X21
	121 Move X3, X20
	122 Call ShadowUtility.CreateEdge, X0, X1, X2, X3
	123 Move V0, [X31]
	124 NotImplemented "Instruction LDUR not yet implemented."
	125 Move X10, [X25]
	126 Move [X31+6], V0
	127 Move [X31+108], V1
	128 Move W9, [X19+28]
	129 Move X8, [X19+16]
	130 Add W9, W9, 1
	131 Move [X19+28], W9
	132 Compare X8, 0
	133 JumpIfEqual {169}
	134 NotImplemented "Instruction LDRSW not yet implemented."
	135 Move W11, [X8+24]
	136 NotImplemented "Instruction CMP not yet implemented."
	137 Add W10, W9, 1
	138 Move [X19+24], W10
	139 NotImplemented "Instruction LDUR not yet implemented."
	140 Move V1, [X31+6]
	141 NotImplemented "Instruction NOP not yet implemented."
	142 NotImplemented "Instruction MADD not yet implemented."
	143 Move [X8+44], V0
	144 Move [X8+2], V1
	145 Move X8, [X10+32]
	146 Move V0, [X31+6]
	147 NotImplemented "Instruction LDUR not yet implemented."
	148 Add X1, X31, 128
	149 Move X8, [X8+192]
	150 Move X0, X19
	151 Move X2, [X8+112]
	152 Move [X31+8], V0
	153 Move [X24+12], V1
	154 Call List`1<Edge>.AddWithResize, X0, X1
	155 Move W8, [X20+24]
	156 Add W0, W22, 3
	157 NotImplemented "Instruction CMP not yet implemented."
	158 Move X20, [X31+224]
	159 Move X19, [X31+232]
	160 Move X22, [X31+208]
	161 Move X21, [X31+216]
	162 Move X24, [X31+192]
	163 Move X23, [X31+200]
	164 Move X26, [X31+176]
	165 Move X25, [X31+184]
	166 Move X30, [X31+160]
	167 Add X31, X31, 240
	168 Return 
	169 Call 0x1C17F20

Method: System.Boolean IsOutsideEdge(System.Int32 edgeIndex, System.Collections.Generic.List`1<UnityEngine.Rendering.Universal.ShadowUtility/Edge> edgesToProcess)

Disassembly:
	0x03A2BB18 LDR X0, [X0 + 0x598]
	0x03A2BB1C BL 0x1C16CF4
	0x03A2BB20 ADRP X0, 0x729000
	0x03A2BB24 LDR X0, [X0 + 0xC08]
	0x03A2BB28 BL 0x1C16CF4
	0x03A2BB2C MOVZ W8, 0x1
	0x03A2BB30 STRB W8, [X20 + 0x5A]
	0x03A2BB34 LDR X8, [X19 + 0x40]
	0x03A2BB38 CBZ X8, 0x3A2BB5C
	0x03A2BB3C ADRP X9, 0x6C9000
	0x03A2BB40 LDR X9, [X9 + 0x470]
	0x03A2BB44 STR X31, [X31 + 0x8]
	0x03A2BB48 LDR W1, [X8 + 0x18]
	0x03A2BB4C ADD X0, X31, 0x8
	0x03A2BB50 LDR X2, [X9]
	0x03A2BB54 BL 0x24341FC
	0x03A2BB58 LDR X8, [X31 + 0x8]
	0x03A2BB5C ANDS W31, W8, 0xFF
	0x03A2BB60 B.EQ 0x3A2BBF8
	0x03A2BB64 LDR W9, [X19 + 0x48]
	0x03A2BB68 UBFM X8, X8, 0x20, 0x3F
	0x03A2BB6C CMP W9, W8
	0x03A2BB70 B.GE 0x3A2BBF8
	0x03A2BB74 LDR X8, [X19 + 0x40]
	0x03A2BB78 CBZ X8, 0x3A2BCE0
	0x03A2BB7C LDR W10, [X8 + 0x18]
	0x03A2BB80 SXTW X9, W9
	0x03A2BB84 CMP W9, W10
	0x03A2BB88 B.CS 0x3A2BCE4
	0x03A2BB8C ADRP X10, 0x6C8000
	0x03A2BB90 LDR X10, [X10 + 0x598]
	0x03A2BB94 ADD X8, X8, X9, 0x3, LSL
	0x03A2BB98 LDR X20, [X8 + 0x20]
	0x03A2BB9C LDR X0, [X10]
	0x03A2BBA0 LDR W9, [X0 + 0xE0]
	0x03A2BBA4 CBNZ W9, 0x3A2BBAC
	0x03A2BBA8 BL 0x1C16DFC
	0x03A2BBAC MOV X0, X20
	0x03A2BBB0 MOV X1, X31
	0x03A2BBB4 MOV X2, X31
	0x03A2BBB8 BL 0x3C3883C
	0x03A2BBBC TBZ X0, 0x0, 0x3A2BBF8
	0x03A2BBC0 ADRP X8, 0x6C8000
	0x03A2BBC4 LDR X8, [X8 + 0xA28]
	0x03A2BBC8 LDR X0, [X8]
	0x03A2BBCC LDR W8, [X0 + 0xE0]
	0x03A2BBD0 CBNZ W8, 0x3A2BBD8
	0x03A2BBD4 BL 0x1C16DFC
	0x03A2BBD8 ADRP X8, 0x729000
	0x03A2BBDC LDR X8, [X8 + 0xC08]
	0x03A2BBE0 MOV X1, X19
	0x03A2BBE4 MOV X2, X31
	0x03A2BBE8 LDR X0, [X8]
	0x03A2BBEC BL 0x3C065A4
	0x03A2BBF0 MOV X0, X31
	0x03A2BBF4 B 0x3A2BCD0
	0x03A2BBF8 MOV X0, X19
	0x03A2BBFC BL 0x3A2BCF4
	0x03A2BC00 CBZ X0, 0x3A2BCE0
	0x03A2BC04 LDR W22, [X19 + 0x48]
	0x03A2BC08 LDRB W9, [X0 + 0x18]
	0x03A2BC0C LDR X21, [X19 + 0x20]
	0x03A2BC10 SXTW X8, W22
	0x03A2BC14 CBZ W9, 0x3A2BCA0
	0x03A2BC18 CBZ X21, 0x3A2BCE0
	0x03A2BC1C LDR W9, [X21 + 0x18]
	0x03A2BC20 CMP W22, W9
	0x03A2BC24 B.CS 0x3A2BCE4
	0x03A2BC28 ADD X20, X21, X8, 0x3, LSL
	0x03A2BC2C LDR X0, [X20 + 0x20]!
	0x03A2BC30 CBZ X0, 0x3A2BC48
	0x03A2BC34 MOV X1, X31
	0x03A2BC38 BL 0x3A4B330
	0x03A2BC3C STR X31, [X20]
	0x03A2BC40 LDR X21, [X19 + 0x20]
	0x03A2BC44 LDR W22, [X19 + 0x48]
	0x03A2BC48 MOV X0, X19
	0x03A2BC4C BL 0x3A2BCF4

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+32], X30
	003 Move [X31+40], X25
	004 Move [X31+48], X24
	005 Move [X31+56], X23
	006 Move [X31+64], X22
	007 Move [X31+72], X21
	008 Move [X31+80], X20
	009 Move [X31+88], X19
	010 Move X21, 0x9B8000
	011 Move W8, [X21+79]
	012 Move X19, X1
	013 Move W20, W0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0x72A000
	019 Move X0, [X0+2992]
	020 Call 0x1C17CF4
	021 Move X0, 0x72A000
	022 Move X0, [X0+3000]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X21+79], W8
	026 Compare X19, 0
	027 JumpIfEqual {90}
	028 Move X23, 0x72A000
	029 Move X23, [X23+3000]
	030 Move W25, [X19+24]
	031 Add X8, X31, 0
	032 Move X0, X19
	033 Move X2, [X23]
	034 Move W1, W20
	035 Call List`1<Edge>.get_Item, X0, X1
	036 Move W21, [X31]
	037 Move W22, [X31+4]
	038 Move W24, [X31+24]
	039 Subtract W1, W20, 1
	040 Move X2, [X23]
	041 Add X8, X31, 0
	042 Move X0, X19
	043 Call List`1<Edge>.get_Item, X0, X1
	044 Move W10, [X31+24]
	045 Move W8, [X31]
	046 Move W9, [X31+4]
	047 And W31, W24, 1
	048 NotImplemented "Instruction CSEL not yet implemented."
	049 NotImplemented "Instruction CSEL not yet implemented."
	050 And W31, W10, 1
	051 NotImplemented "Instruction CSEL not yet implemented."
	052 NotImplemented "Instruction CSEL not yet implemented."
	053 Subtract W9, W11, W10
	054 Subtract W8, W12, W8
	055 NotImplemented "Instruction CSEL not yet implemented."
	056 Compare W8, 0
	057 JumpIfEqual {79}
	058 Add W1, W20, 1
	059 NotImplemented "Instruction CMP not yet implemented."
	060 Move X2, [X23]
	061 Add X8, X31, 0
	062 Move X0, X19
	063 Call List`1<Edge>.get_Item, X0, X1
	064 Move W10, [X31+24]
	065 Move W8, [X31]
	066 Move W9, [X31+4]
	067 And W31, W24, 1
	068 NotImplemented "Instruction CSEL not yet implemented."
	069 NotImplemented "Instruction CSEL not yet implemented."
	070 And W31, W10, 1
	071 NotImplemented "Instruction CSEL not yet implemented."
	072 NotImplemented "Instruction CSEL not yet implemented."
	073 Subtract W9, W11, W10
	074 Subtract W8, W12, W8
	075 NotImplemented "Instruction CSEL not yet implemented."
	076 NotImplemented "Instruction CMP not yet implemented."
	077 NotImplemented "Instruction CSET not yet implemented."
	078 Move W0, 1
	079 Move W0, W31
	080 Move X20, [X31+80]
	081 Move X19, [X31+88]
	082 Move X22, [X31+64]
	083 Move X21, [X31+72]
	084 Move X24, [X31+48]
	085 Move X23, [X31+56]
	086 Move X30, [X31+32]
	087 Move X25, [X31+40]
	088 Add X31, X31, 96
	089 Return X0
	090 Call 0x1C17F20

Method: System.Void SortEdges(System.Collections.Generic.List`1<UnityEngine.Rendering.Universal.ShadowUtility/Edge> edgesToProcess)

Disassembly:
	0x03A2BC88 ADD X8, X21, W22, 0x3, SXTW
	0x03A2BC8C STR X20, [X8 + 0x20]
	0x03A2BC90 LDR X21, [X19 + 0x20]
	0x03A2BC94 CBZ X21, 0x3A2BCE0
	0x03A2BC98 LDR W22, [X19 + 0x48]
	0x03A2BC9C B 0x3A2BCBC
	0x03A2BCA0 CBZ X21, 0x3A2BCE0
	0x03A2BCA4 LDR W9, [X21 + 0x18]
	0x03A2BCA8 CMP W22, W9
	0x03A2BCAC B.CS 0x3A2BCE4
	0x03A2BCB0 ADD X9, X21, X8, 0x3, LSL
	0x03A2BCB4 LDR X9, [X9 + 0x20]
	0x03A2BCB8 CBZ X9, 0x3A2BC1C
	0x03A2BCBC LDR W8, [X21 + 0x18]
	0x03A2BCC0 CMP W22, W8
	0x03A2BCC4 B.CS 0x3A2BCE4
	0x03A2BCC8 ADD X8, X21, W22, 0x3, SXTW
	0x03A2BCCC LDR X0, [X8 + 0x20]
	0x03A2BCD0 LDP X20, X19, [X31 + 0x20]
	0x03A2BCD4 LDP X22, X21, [X31 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x9B8000
	005 Move W8, [X20+80]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x72A000
	012 Move X0, [X0+3008]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+80], W8
	016 Compare X19, 0
	017 JumpIfEqual {27}
	018 Move X8, 0x72A000
	019 Move X8, [X8+3008]
	020 Move X0, X19
	021 Move X20, [X31+16]
	022 Move X19, [X31+24]
	023 Move X1, [X8]
	024 Move X30, [X31+32]
	025 Call List`1<Edge>.Sort, X0
	026 Return 
	027 Call 0x1C17F20

Method: System.Void CreateShadowTriangles(System.Collections.Generic.List`1<UnityEngine.Vector3> vertices, System.Collections.Generic.List`1<UnityEngine.Color> colors, System.Collections.Generic.List`1<System.Int32> triangles, System.Collections.Generic.List`1<UnityEngine.Vector4> tangents, System.Collections.Generic.List`1<UnityEngine.Rendering.Universal.ShadowUtility/Edge> edges)

Disassembly:
	0x03A2BCD8 LDR X30, [X31], #0x30
	0x03A2BCDC RET
	0x03A2BCE0 BL 0x1C16F20
	0x03A2BCE4 BL 0x1C16F28
	0x03A2BCE8 BL 0x1C16F44
	0x03A2BCEC MOV X1, X31
	0x03A2BCF0 BL 0x1C16DEC
	0x03A2BCF4 STR X30, [X31 - 0x20]!
	0x03A2BCF8 STP X20, X19, [X31 + 0x10]
	0x03A2BCFC ADRP X20, 0x9B7000
	0x03A2BD00 LDRB W8, [X20 + 0x5C]
	0x03A2BD04 MOV X19, X0
	0x03A2BD08 TBNZ X8, 0x0, 0x3A2BD20
	0x03A2BD0C ADRP X0, 0x6C8000
	0x03A2BD10 LDR X0, [X0 + 0x598]
	0x03A2BD14 BL 0x1C16CF4
	0x03A2BD18 MOVZ W8, 0x1
	0x03A2BD1C STRB W8, [X20 + 0x5C]
	0x03A2BD20 LDR X8, [X19 + 0x40]
	0x03A2BD24 CBZ X8, 0x3A2BDAC
	0x03A2BD28 LDRSW X9, [X19 + 0x48]
	0x03A2BD2C LDR W10, [X8 + 0x18]
	0x03A2BD30 CMP W9, W10
	0x03A2BD34 B.CS 0x3A2BDB0
	0x03A2BD38 ADRP X10, 0x6C8000
	0x03A2BD3C LDR X10, [X10 + 0x598]
	0x03A2BD40 ADD X8, X8, X9, 0x3, LSL
	0x03A2BD44 LDR X20, [X8 + 0x20]
	0x03A2BD48 LDR X0, [X10]
	0x03A2BD4C LDR W9, [X0 + 0xE0]
	0x03A2BD50 CBNZ W9, 0x3A2BD58
	0x03A2BD54 BL 0x1C16DFC
	0x03A2BD58 MOV X0, X20
	0x03A2BD5C MOV X1, X31
	0x03A2BD60 MOV X2, X31
	0x03A2BD64 BL 0x3C3883C
	0x03A2BD68 TBZ X0, 0x0, 0x3A2BD80
	0x03A2BD6C LDR X8, [X19]
	0x03A2BD70 MOV X0, X19
	0x03A2BD74 LDR X9, [X8 + 0x2C8]
	0x03A2BD78 LDR X1, [X8 + 0x2D0]
	0x03A2BD7C BLR X9
	0x03A2BD80 LDR X8, [X19 + 0x40]
	0x03A2BD84 CBZ X8, 0x3A2BDAC
	0x03A2BD88 LDRSW X9, [X19 + 0x48]
	0x03A2BD8C LDR W10, [X8 + 0x18]
	0x03A2BD90 CMP W9, W10
	0x03A2BD94 B.CS 0x3A2BDB0
	0x03A2BD98 ADD X8, X8, X9, 0x3, LSL
	0x03A2BD9C LDR X0, [X8 + 0x20]
	0x03A2BDA0 LDP X20, X19, [X31 + 0x10]
	0x03A2BDA4 LDR X30, [X31], #0x20
	0x03A2BDA8 RET
	0x03A2BDAC BL 0x1C16F20
	0x03A2BDB0 BL 0x1C16F28
	0x03A2BDB4 SUB X31, X31, 0x40
	0x03A2BDB8 STP X30, X23, [X31 + 0x10]
	0x03A2BDBC STP X22, X21, [X31 + 0x20]
	0x03A2BDC0 STP X20, X19, [X31 + 0x30]
	0x03A2BDC4 ADRP X21, 0x9B7000
	0x03A2BDC8 LDRB W8, [X21 + 0x5B]
	0x03A2BDCC MOV W20, W1
	0x03A2BDD0 MOV X19, X0
	0x03A2BDD4 STR W1, [X31 + 0xC]
	0x03A2BDD8 TBNZ X8, 0x0, 0x3A2BE14
	0x03A2BDDC ADRP X0, 0x6C8000
	0x03A2BDE0 LDR X0, [X0 + 0xA28]
	0x03A2BDE4 BL 0x1C16CF4
	0x03A2BDE8 ADRP X0, 0x6C8000
	0x03A2BDEC LDR X0, [X0 + 0x598]
	0x03A2BDF0 BL 0x1C16CF4
	0x03A2BDF4 ADRP X0, 0x729000
	0x03A2BDF8 LDR X0, [X0 + 0xC10]
	0x03A2BDFC BL 0x1C16CF4
	0x03A2BE00 ADRP X0, 0x729000
	0x03A2BE04 LDR X0, [X0 + 0xC18]
	0x03A2BE08 BL 0x1C16CF4
	0x03A2BE0C MOVZ W8, 0x1
	0x03A2BE10 STRB W8, [X21 + 0x5B]
	0x03A2BE14 ADDS W31, W20, 0x1
	0x03A2BE18 B.NE 0x3A2BE24
	0x03A2BE1C LDR W20, [X19 + 0x48]
	0x03A2BE20 STR W20, [X31 + 0xC]
	0x03A2BE24 LDR X8, [X19 + 0x40]
	0x03A2BE28 CBZ X8, 0x3A2C05C
	0x03A2BE2C TBNZ X20, 0x1F, 0x3A2BE74
	0x03A2BE30 LDR W9, [X8 + 0x18]
	0x03A2BE34 CMP W20, W9
	0x03A2BE38 B.GE 0x3A2BE74
	0x03A2BE3C B.CS 0x3A2C060
	0x03A2BE40 ADRP X9, 0x6C8000
	0x03A2BE44 LDR X9, [X9 + 0x598]
	0x03A2BE48 ADD X8, X8, W20, 0x3, UXTW
	0x03A2BE4C LDR X21, [X8 + 0x20]
	0x03A2BE50 LDR X0, [X9]
	0x03A2BE54 LDR W9, [X0 + 0xE0]
	0x03A2BE58 CBNZ W9, 0x3A2BE60
	0x03A2BE5C BL 0x1C16DFC
	0x03A2BE60 MOV X0, X21
	0x03A2BE64 MOV X1, X31
	0x03A2BE68 MOV X2, X31
	0x03A2BE6C BL 0x3C3883C
	0x03A2BE70 TBZ X0, 0x0, 0x3A2BF14
	0x03A2BE74 ADD X0, X31, 0xC
	0x03A2BE78 MOV X1, X31
	0x03A2BE7C BL 0x337B6E0
	0x03A2BE80 LDR X8, [X19 + 0x40]
	0x03A2BE84 CBZ X8, 0x3A2C05C
	0x03A2BE88 LDRSW X9, [X19 + 0x48]
	0x03A2BE8C LDR W10, [X8 + 0x18]
	0x03A2BE90 CMP W9, W10
	0x03A2BE94 B.CS 0x3A2C060
	0x03A2BE98 ADD X8, X8, X9, 0x3, LSL
	0x03A2BE9C MOV X20, X0
	0x03A2BEA0 LDR X0, [X8 + 0x20]
	0x03A2BEA4 CBZ X0, 0x3A2C05C
	0x03A2BEA8 ADRP X21, 0x729000
	0x03A2BEAC ADRP X22, 0x729000
	0x03A2BEB0 ADRP X23, 0x6C8000
	0x03A2BEB4 LDR X21, [X21 + 0xC10]
	0x03A2BEB8 LDR X22, [X22 + 0xC18]
	0x03A2BEBC LDR X23, [X23 + 0xA28]
	0x03A2BEC0 MOV X1, X31
	0x03A2BEC4 BL 0x3C389D4
	0x03A2BEC8 LDR X8, [X21]
	0x03A2BECC LDR X2, [X22]
	0x03A2BED0 MOV X3, X0
	0x03A2BED4 MOV X1, X20
	0x03A2BED8 MOV X0, X8
	0x03A2BEDC MOV X4, X31
	0x03A2BEE0 BL 0x32277C4
	0x03A2BEE4 LDR X8, [X23]
	0x03A2BEE8 MOV X20, X0
	0x03A2BEEC LDR W9, [X8 + 0xE0]
	0x03A2BEF0 CBNZ W9, 0x3A2BEFC
	0x03A2BEF4 MOV X0, X8
	0x03A2BEF8 BL 0x1C16DFC
	0x03A2BEFC MOV X0, X20
	0x03A2BF00 MOV X1, X19
	0x03A2BF04 MOV X2, X31
	0x03A2BF08 BL 0x3C06B0C
	0x03A2BF0C LDR W20, [X19 + 0x48]
	0x03A2BF10 STR W20, [X31 + 0xC]
	0x03A2BF14 LDR X9, [X19 + 0x20]
	0x03A2BF18 CBZ X9, 0x3A2BF34
	0x03A2BF1C LDR X8, [X19 + 0x40]
	0x03A2BF20 CBZ X8, 0x3A2C05C
	0x03A2BF24 LDR W9, [X9 + 0x18]
	0x03A2BF28 LDR W10, [X8 + 0x18]
	0x03A2BF2C CMP W9, W10
	0x03A2BF30 B.GE 0x3A2BF50
	0x03A2BF34 MOV X0, X19
	0x03A2BF38 BL 0x3A2B808
	0x03A2BF3C MOV X0, X19
	0x03A2BF40 BL 0x3A2B86C
	0x03A2BF44 LDR X8, [X19 + 0x40]
	0x03A2BF48 CBZ X8, 0x3A2C05C
	0x03A2BF4C LDR W20, [X31 + 0xC]
	0x03A2BF50 LDR W9, [X8 + 0x18]
	0x03A2BF54 CMP W20, W9
	0x03A2BF58 B.CS 0x3A2C060
	0x03A2BF5C SXTW X9, W20
	0x03A2BF60 ADD X10, X8, X9, 0x3, LSL
	0x03A2BF64 LDR X10, [X10 + 0x20]
	0x03A2BF68 CBZ X10, 0x3A2C05C
	0x03A2BF6C LDRB W10, [X10 + 0x18]
	0x03A2BF70 LDR X21, [X19 + 0x20]
	0x03A2BF74 CBZ W10, 0x3A2C018
	0x03A2BF78 CBZ X21, 0x3A2C05C
	0x03A2BF7C LDR W10, [X21 + 0x18]
	0x03A2BF80 CMP W20, W10
	0x03A2BF84 B.CS 0x3A2C060
	0x03A2BF88 ADD X22, X21, X9, 0x3, LSL
	0x03A2BF8C LDR X0, [X22 + 0x20]!
	0x03A2BF90 CBZ X0, 0x3A2BFB0
	0x03A2BF94 MOV X1, X31
	0x03A2BF98 BL 0x3A4B330
	0x03A2BF9C STR X31, [X22]
	0x03A2BFA0 LDR X8, [X19 + 0x40]
	0x03A2BFA4 CBZ X8, 0x3A2C05C
	0x03A2BFA8 LDR X21, [X19 + 0x20]
	0x03A2BFAC LDR W20, [X31 + 0xC]
	0x03A2BFB0 LDR W9, [X8 + 0x18]
	0x03A2BFB4 CMP W20, W9
	0x03A2BFB8 B.CS 0x3A2C060
	0x03A2BFBC SXTW X22, W20
	0x03A2BFC0 ADD X8, X8, X22, 0x3, LSL
	0x03A2BFC4 LDR X0, [X8 + 0x20]
	0x03A2BFC8 CBZ X0, 0x3A2C05C
	0x03A2BFCC MOV X1, X31
	0x03A2BFD0 BL 0x3A757B0
	0x03A2BFD4 CBZ X21, 0x3A2C05C
	0x03A2BFD8 MOV X20, X0
	0x03A2BFDC CBZ X0, 0x3A2BFF4
	0x03A2BFE0 LDR X8, [X21]
	0x03A2BFE4 MOV X0, X20
	0x03A2BFE8 LDR X1, [X8 + 0x40]
	0x03A2BFEC BL 0x1C16E00
	0x03A2BFF0 CBZ X0, 0x3A2C064
	0x03A2BFF4 LDR W8, [X21 + 0x18]
	0x03A2BFF8 CMP W22, W8
	0x03A2BFFC B.CS 0x3A2C060
	0x03A2C000 ADD X8, X21, X22, 0x3, LSL
	0x03A2C004 STR X20, [X8 + 0x20]
	0x03A2C008 LDR X21, [X19 + 0x20]
	0x03A2C00C CBZ X21, 0x3A2C05C
	0x03A2C010 LDR W20, [X31 + 0xC]
	0x03A2C014 B 0x3A2C034
	0x03A2C018 CBZ X21, 0x3A2C05C
	0x03A2C01C LDR W10, [X21 + 0x18]
	0x03A2C020 CMP W20, W10
	0x03A2C024 B.CS 0x3A2C060
	0x03A2C028 ADD X10, X21, X9, 0x3, LSL
	0x03A2C02C LDR X10, [X10 + 0x20]
	0x03A2C030 CBZ X10, 0x3A2BF7C
	0x03A2C034 LDR W8, [X21 + 0x18]
	0x03A2C038 CMP W20, W8
	0x03A2C03C B.CS 0x3A2C060
	0x03A2C040 ADD X8, X21, W20, 0x3, SXTW
	0x03A2C044 LDR X0, [X8 + 0x20]
	0x03A2C048 LDP X20, X19, [X31 + 0x30]
	0x03A2C04C LDP X22, X21, [X31 + 0x20]
	0x03A2C050 LDP X30, X23, [X31 + 0x10]
	0x03A2C054 ADD X31, X31, 0x40
	0x03A2C058 RET
	0x03A2C05C BL 0x1C16F20
	0x03A2C060 BL 0x1C16F28
	0x03A2C064 BL 0x1C16F44
	0x03A2C068 MOV X1, X31
	0x03A2C06C BL 0x1C16DEC
	0x03A2C070 SUB X31, X31, 0x50
	0x03A2C074 STP X30, X23, [X31 + 0x20]
	0x03A2C078 STP X22, X21, [X31 + 0x30]
	0x03A2C07C STP X20, X19, [X31 + 0x40]
	0x03A2C080 ADRP X21, 0x9B6000
	0x03A2C084 ADRP X20, 0x6CD000
	0x03A2C088 LDRB W8, [X21 + 0x5D]
	0x03A2C08C LDR X20, [X20 + 0x6C8]
	0x03A2C090 MOV X19, X0
	0x03A2C094 TBNZ X8, 0x0, 0x3A2C0E8
	0x03A2C098 ADRP X0, 0x6C7000
	0x03A2C09C LDR X0, [X0 + 0xA28]
	0x03A2C0A0 BL 0x1C16CF4
	0x03A2C0A4 ADRP X0, 0x727000
	0x03A2C0A8 LDR X0, [X0 + 0x90]
	0x03A2C0AC BL 0x1C16CF4
	0x03A2C0B0 ADRP X0, 0x728000
	0x03A2C0B4 LDR X0, [X0 + 0xC20]
	0x03A2C0B8 BL 0x1C16CF4
	0x03A2C0BC ADRP X0, 0x6CF000
	0x03A2C0C0 LDR X0, [X0 + 0x720]
	0x03A2C0C4 BL 0x1C16CF4
	0x03A2C0C8 ADRP X0, 0x6CD000
	0x03A2C0CC LDR X0, [X0 + 0x6C8]
	0x03A2C0D0 BL 0x1C16CF4
	0x03A2C0D4 ADRP X0, 0x728000
	0x03A2C0D8 LDR X0, [X0 + 0xC28]
	0x03A2C0DC BL 0x1C16CF4

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+48], D10
	003 Move [X31+64], D9
	004 Move [X31+72], D8
	005 Move [X31+80], X29
	006 Move [X31+88], X30
	007 Move [X31+96], X28
	008 Move [X31+104], X27
	009 Move [X31+112], X26
	010 Move [X31+120], X25
	011 Move [X31+128], X24
	012 Move [X31+136], X23
	013 Move [X31+144], X22
	014 Move [X31+152], X21
	015 Move [X31+160], X20
	016 Move [X31+168], X19
	017 Move X24, 0x9B8000
	018 Move W8, [X24+81]
	019 Move X19, X4
	020 Move X20, X3
	021 Move X21, X2
	022 Move X22, X1
	023 Move X23, X0
	024 Move TEMP, X8
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {60}
	028 Move X0, 0x6CA000
	029 Move X0, [X0+3600]
	030 Call 0x1C17CF4
	031 Move X0, 0x723000
	032 Move X0, [X0+3088]
	033 Call 0x1C17CF4
	034 Move X0, 0x723000
	035 Move X0, [X0+4080]
	036 Call 0x1C17CF4
	037 Move X0, 0x6CD000
	038 Move X0, [X0+952]
	039 Call 0x1C17CF4
	040 Move X0, 0x6CD000
	041 Move X0, [X0+2424]
	042 Call 0x1C17CF4
	043 Move X0, 0x72A000
	044 Move X0, [X0+2992]
	045 Call 0x1C17CF4
	046 Move X0, 0x6CD000
	047 Move X0, [X0+2432]
	048 Call 0x1C17CF4
	049 Move X0, 0x72A000
	050 Move X0, [X0+3000]
	051 Call 0x1C17CF4
	052 Move X0, 0x723000
	053 Move X0, [X0+3096]
	054 Call 0x1C17CF4
	055 Move X0, 0x72A000
	056 Move X0, [X0+3016]
	057 Call 0x1C17CF4
	058 Move W8, 1
	059 Move [X24+81], W8
	060 Compare X19, 0
	061 JumpIfEqual {279}
	062 Move W8, [X19+24]
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Move X28, 0x723000
	065 Move X29, 0x6CA000
	066 Move X28, [X28+4080]
	067 Move X29, [X29+3600]
	068 Move W24, W31
	069 Move W0, W24
	070 Move X1, X19
	071 Call ShadowUtility.IsOutsideEdge, X0, X1
	072 Move TEMP, X0
	073 And TEMP, TEMP, 1
	074 Compare TEMP, 1
	075 JumpIfNotEqual {259}
	076 Move X8, 0x72A000
	077 Move X8, [X8+3000]
	078 Move X0, X19
	079 Move W1, W24
	080 Move X2, [X8]
	081 Add X8, X31, 16
	082 Call List`1<Edge>.get_Item, X0, X1
	083 Compare X20, 0
	084 JumpIfEqual {279}
	085 Move X8, 0x72A000
	086 NotImplemented "Instruction LDUR not yet implemented."
	087 Move W27, [X31+16]
	088 Move W25, [X31+20]
	089 Move X8, [X8+3016]
	090 Move X0, X20
	091 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	092 Move S8, V0.S[1]
	093 Move X2, [X8]
	094 Move S9, V0.S[2]
	095 Move S10, V0.S[3]
	096 Move W1, W25
	097 Move V1, V8
	098 Move V2, V9
	099 Move V3, V10
	100 Move [X31], V0
	101 Call List`1<Vector4>.set_Item, X0, X1, X2
	102 Compare X23, 0
	103 JumpIfEqual {279}
	104 Move X8, 0x6CD000
	105 Move W26, [X23+24]
	106 Move X8, [X8+2432]
	107 Move X0, X23
	108 Move W1, W27
	109 Move X2, [X8]
	110 Call List`1<Vector3>.get_Item, X0, X1
	111 Move X9, 0x6CD000
	112 Move W10, [X23+28]
	113 Move X8, [X23+16]
	114 Move X9, [X9+952]
	115 Add W10, W10, 1
	116 Move X9, [X9]
	117 Move [X23+28], W10
	118 Compare X8, 0
	119 JumpIfEqual {279}
	120 NotImplemented "Instruction LDRSW not yet implemented."
	121 Move W11, [X8+24]
	122 NotImplemented "Instruction CMP not yet implemented."
	123 Move W11, 12
	124 Add W9, W10, 1
	125 NotImplemented "Instruction MADD not yet implemented."
	126 Move [X23+24], W9
	127 Move [X8+32], S0
	128 Move [X8+40], S1
	129 Move [X8+40], S2
	130 Move X8, [X9+32]
	131 Move X0, X23
	132 Move X8, [X8+192]
	133 Move X1, [X8+112]
	134 Call List`1<Vector3>.AddWithResize, X0, X1
	135 Compare X22, 0
	136 JumpIfEqual {279}
	137 Move X8, 0x723000
	138 Move X8, [X8+3096]
	139 Move X0, X22
	140 Move W1, W27
	141 Move X2, [X8]
	142 Call List`1<Color>.get_Item, X0, X1
	143 Move X9, 0x723000
	144 Move W10, [X22+28]
	145 Move X8, [X22+16]
	146 Move X9, [X9+3088]
	147 Add W10, W10, 1
	148 Move X9, [X9]
	149 Move [X22+28], W10
	150 Compare X8, 0
	151 JumpIfEqual {279}
	152 NotImplemented "Instruction LDRSW not yet implemented."
	153 Move W11, [X8+24]
	154 NotImplemented "Instruction CMP not yet implemented."
	155 Add W9, W10, 1
	156 Add X8, X8, X10
	157 Move [X22+24], W9
	158 Move [X8+32], S0
	159 Move [X8+40], S1
	160 Move [X8+40], S2
	161 Move [X8+48], S3
	162 Move X8, [X9+32]
	163 Move X0, X22
	164 Move X8, [X8+192]
	165 Move X1, [X8+112]
	166 Call List`1<Color>.AddWithResize, X0, X1
	167 Move W10, [X20+28]
	168 Move X8, [X20+16]
	169 Move X9, [X28]
	170 Add W10, W10, 1
	171 Move [X20+28], W10
	172 Compare X8, 0
	173 JumpIfEqual {279}
	174 NotImplemented "Instruction LDRSW not yet implemented."
	175 Move W11, [X8+24]
	176 NotImplemented "Instruction CMP not yet implemented."
	177 Move V0, [X31]
	178 Add W9, W10, 1
	179 Add X8, X8, X10
	180 Move [X20+24], W9
	181 Move [X8+2], V0
	182 Move X8, [X9+32]
	183 Move X0, X20
	184 Move V0, [X31]
	185 Move V1, V8
	186 Move X8, [X8+192]
	187 Move V2, V9
	188 Move V3, V10
	189 Move X1, [X8+112]
	190 Call List`1<Vector4>.AddWithResize, X0, X1
	191 Compare X21, 0
	192 JumpIfEqual {279}
	193 Move W10, [X21+28]
	194 Move X8, [X21+16]
	195 Move X9, [X29]
	196 Add W10, W10, 1
	197 Move [X21+28], W10
	198 Compare X8, 0
	199 JumpIfEqual {279}
	200 NotImplemented "Instruction LDRSW not yet implemented."
	201 Move W11, [X8+24]
	202 NotImplemented "Instruction CMP not yet implemented."
	203 Add W11, W10, 1
	204 Add X10, X8, X10
	205 Move [X21+24], W11
	206 Move [X10+32], W27
	207 Move W10, [X21+28]
	208 Add W10, W10, 1
	209 Move [X21+28], W10
	210 Move X8, [X9+32]
	211 Move X0, X21
	212 Move W1, W27
	213 Move X8, [X8+192]
	214 Move X2, [X8+112]
	215 Call List`1<Int32>.AddWithResize, X0, X1
	216 Move W10, [X21+28]
	217 Move X8, [X21+16]
	218 Move X9, [X29]
	219 Add W10, W10, 1
	220 Move [X21+28], W10
	221 Compare X8, 0
	222 JumpIfEqual {279}
	223 NotImplemented "Instruction LDRSW not yet implemented."
	224 Move W11, [X8+24]
	225 NotImplemented "Instruction CMP not yet implemented."
	226 Add W11, W10, 1
	227 Add X10, X8, X10
	228 Move [X21+24], W11
	229 Move [X10+32], W26
	230 Move W10, [X21+28]
	231 Add W10, W10, 1
	232 Move [X21+28], W10
	233 Move X8, [X9+32]
	234 Move X0, X21
	235 Move W1, W26
	236 Move X8, [X8+192]
	237 Move X2, [X8+112]
	238 Call List`1<Int32>.AddWithResize, X0, X1
	239 Move W10, [X21+28]
	240 Move X8, [X21+16]
	241 Move X9, [X29]
	242 Add W10, W10, 1
	243 Move [X21+28], W10
	244 Compare X8, 0
	245 JumpIfEqual {279}
	246 NotImplemented "Instruction LDRSW not yet implemented."
	247 Move W11, [X8+24]
	248 NotImplemented "Instruction CMP not yet implemented."
	249 Add W9, W10, 1
	250 Add X8, X8, X10
	251 Move [X21+24], W9
	252 Move [X8+32], W25
	253 Move X8, [X9+32]
	254 Move X0, X21
	255 Move W1, W25
	256 Move X8, [X8+192]
	257 Move X2, [X8+112]
	258 Call List`1<Int32>.AddWithResize, X0, X1
	259 Move W8, [X19+24]
	260 Add W24, W24, 1
	261 NotImplemented "Instruction CMP not yet implemented."
	262 Move X20, [X31+160]
	263 Move X19, [X31+168]
	264 Move X22, [X31+144]
	265 Move X21, [X31+152]
	266 Move X24, [X31+128]
	267 Move X23, [X31+136]
	268 Move X26, [X31+112]
	269 Move X25, [X31+120]
	270 Move X28, [X31+96]
	271 Move X27, [X31+104]
	272 Move X29, [X31+80]
	273 Move X30, [X31+88]
	274 Move D9, [X31+64]
	275 Move D8, [X31+72]
	276 Move V10, [X31+48]
	277 Add X31, X31, 176
	278 Return 
	279 Call 0x1C17F20

Method: System.Object InterpCustomVertexData(UnityEngine.Rendering.Universal.LibTessDotNet.Vec3 position, System.Object[] data, System.Single[] weights)

Disassembly:
	0x03A2C0E0 MOVZ W8, 0x1
	0x03A2C0E4 STRB W8, [X21 + 0x5D]
	0x03A2C0E8 LDR X0, [X20]
	0x03A2C0EC LDR W8, [X0 + 0xE0]
	0x03A2C0F0 CBNZ W8, 0x3A2C0FC
	0x03A2C0F4 BL 0x1C16DFC
	0x03A2C0F8 LDR X0, [X20]
	0x03A2C0FC LDR X8, [X0 + 0xB8]
	0x03A2C100 LDR X8, [X8 + 0x10]

ISIL:
	001 Move [X31-16], X30
	002 Compare X0, 0
	003 JumpIfEqual {10}
	004 Move W8, [X0+24]
	005 Compare W8, 0
	006 JumpIfEqual {11}
	007 Move X0, [X0+32]
	008 Move X30, [X31+16]
	009 Return X0
	010 Call 0x1C17F20
	011 Call 0x1C17F28

Method: System.Void InitializeTangents(System.Int32 tangentsToAdd, System.Collections.Generic.List`1<UnityEngine.Vector4> tangents)

Disassembly:
	0x03A2C104 CBZ X8, 0x3A2C2A4
	0x03A2C108 LDRSW X9, [X19 + 0xE4]
	0x03A2C10C LDR W10, [X8 + 0x18]
	0x03A2C110 CMP W9, W10
	0x03A2C114 B.CS 0x3A2C2A0
	0x03A2C118 ADD X8, X8, X9, 0x3, LSL
	0x03A2C11C LDR X21, [X8 + 0x20]
	0x03A2C120 CBZ X21, 0x3A2C2A4
	0x03A2C124 LDR X8, [X21 + 0x18]
	0x03A2C128 CMP W8, 0x1
	0x03A2C12C B.LT 0x3A2C16C
	0x03A2C130 MOV X22, X31
	0x03A2C134 AND X8, X8, 0x0
	0x03A2C138 ADD X23, X21, 0x20
	0x03A2C13C CMP X22, W8, UXTW
	0x03A2C140 B.CS 0x3A2C2A0
	0x03A2C144 LDR W20, [X23, X22, LSL #2]
	0x03A2C148 MOVZ W1, 0x4
	0x03A2C14C MOV X2, X31
	0x03A2C150 MOV W0, W20
	0x03A2C154 BL 0x3C3C4BC
	0x03A2C158 TBNZ X0, 0x0, 0x3A2C170
	0x03A2C15C LDR W8, [X21 + 0x18]
	0x03A2C160 ADD X22, X22, 0x1
	0x03A2C164 CMP X22, W8, SXTW
	0x03A2C168 B.LT 0x3A2C13C
	0x03A2C16C MOV W20, W31
	0x03A2C170 MOV X0, X31
	0x03A2C174 BL 0x3C113A8
	0x03A2C178 CBZ W0, 0x3A2C184
	0x03A2C17C CBNZ W20, 0x3A2C288
	0x03A2C180 B 0x3A2C1B0
	0x03A2C184 ADRP X8, 0x727000
	0x03A2C188 LDR X8, [X8 + 0x90]
	0x03A2C18C LDR X0, [X8]
	0x03A2C190 LDR W8, [X0 + 0xE0]
	0x03A2C194 CBNZ W8, 0x3A2C19C
	0x03A2C198 BL 0x1C16DFC
	0x03A2C19C MOV W0, W20
	0x03A2C1A0 MOV X1, X31
	0x03A2C1A4 BL 0x3C619DC
	0x03A2C1A8 MOV W20, W0
	0x03A2C1AC CBNZ W20, 0x3A2C288
	0x03A2C1B0 ADRP X8, 0x728000
	0x03A2C1B4 LDR X8, [X8 + 0xC20]
	0x03A2C1B8 MOVN X9, 0x0
	0x03A2C1BC ADD X0, X31, 0x8
	0x03A2C1C0 MOV X1, X31
	0x03A2C1C4 LDR X8, [X8]
	0x03A2C1C8 STP X8, X9, [X31 + 0x8]
	0x03A2C1CC LDR W8, [X19 + 0xE4]
	0x03A2C1D0 STR W8, [X31 + 0x18]
	0x03A2C1D4 BL 0x33B162C
	0x03A2C1D8 ADRP X8, 0x727000
	0x03A2C1DC LDR X8, [X8 + 0x90]
	0x03A2C1E0 MOV X19, X0
	0x03A2C1E4 LDR X8, [X8]
	0x03A2C1E8 LDR W9, [X8 + 0xE0]
	0x03A2C1EC CBNZ W9, 0x3A2C1F8
	0x03A2C1F0 MOV X0, X8
	0x03A2C1F4 BL 0x1C16DFC

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x9B7000
	009 Move W8, [X21+82]
	010 Move X19, X1
	011 Move W20, W0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x722000
	017 Move X0, [X0+4080]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+82], W8
	021 NotImplemented "Instruction CMP not yet implemented."
	022 Move X22, 0x722000
	023 Move X21, 0x6CF000
	024 Move X22, [X22+4080]
	025 Move X21, [X21+2464]
	026 Move X23, 0x9AD000
	027 Move W24, 1
	028 Move W8, [X23+3674]
	029 Compare W8, 0
	030 JumpIfNotEqual {34}
	031 Move X0, X21
	032 Call 0x1C17CF4
	033 Move [X23+3674], W24
	034 Compare X19, 0
	035 JumpIfEqual {73}
	036 Move X8, [X21]
	037 Move W10, [X19+28]
	038 Move X9, [X8+184]
	039 Move X8, [X19+16]
	040 Add W10, W10, 1
	041 Move S0, [X9]
	042 Move S1, [X9+4]
	043 Move S2, [X9+8]
	044 Move S3, [X9+12]
	045 Move X9, [X22]
	046 Move [X19+28], W10
	047 Compare X8, 0
	048 JumpIfEqual {73}
	049 NotImplemented "Instruction LDRSW not yet implemented."
	050 Move W11, [X8+24]
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Add W9, W10, 1
	053 Add X8, X8, X10
	054 Move [X19+24], W9
	055 Move [X8+32], S0
	056 Move [X8+40], S1
	057 Move [X8+40], S2
	058 Move [X8+48], S3
	059 Move X8, [X9+32]
	060 Move X0, X19
	061 Move X8, [X8+192]
	062 Move X1, [X8+112]
	063 Call List`1<Vector4>.AddWithResize, X0, X1
	064 Subtract W20, W20, 1
	065 Move X20, [X31+48]
	066 Move X19, [X31+56]
	067 Move X22, [X31+32]
	068 Move X21, [X31+40]
	069 Move X24, [X31+16]
	070 Move X23, [X31+24]
	071 Move X30, [X31+64]
	072 Return 
	073 Call 0x1C17F20

Method: UnityEngine.Bounds CalculateLocalBounds(UnityEngine.Vector3[] inVertices)

Disassembly:
	0x03A28B3C LDR X8, [X20 + 0x100]
	0x03A28B40 CBZ X8, 0x3A28B98
	0x03A28B44 LDR X9, [X8 + 0x18]
	0x03A28B48 CBZ X9, 0x3A28B98
	0x03A28B4C CBZ W9, 0x3A28BF8
	0x03A28B50 LDR X0, [X8 + 0x20]
	0x03A28B54 CBZ X0, 0x3A28BF4
	0x03A28B58 LDR X21, [X20 + 0xC8]
	0x03A28B5C MOV X1, X31
	0x03A28B60 BL 0x3C14714
	0x03A28B64 ADRP X8, 0x6CB000
	0x03A28B68 LDR X8, [X8 + 0x598]
	0x03A28B6C MOV X22, X0
	0x03A28B70 LDR X8, [X8]
	0x03A28B74 LDR W9, [X8 + 0xE0]
	0x03A28B78 CBNZ W9, 0x3A28B84
	0x03A28B7C MOV X0, X8
	0x03A28B80 BL 0x1C16DFC
	0x03A28B84 MOV X0, X21
	0x03A28B88 MOV X1, X22
	0x03A28B8C MOV X2, X31
	0x03A28B90 BL 0x3C354F8
	0x03A28B94 TBZ X0, 0x0, 0x3A28BEC
	0x03A28B98 ADRP X8, 0x72C000
	0x03A28B9C LDR X8, [X8 + 0x6A0]
	0x03A28BA0 LDR X21, [X20 + 0xC8]
	0x03A28BA4 LDR X0, [X8]
	0x03A28BA8 LDR W8, [X0 + 0xE0]
	0x03A28BAC CBNZ W8, 0x3A28BB4
	0x03A28BB0 BL 0x1C16DFC
	0x03A28BB4 MOV X0, X21
	0x03A28BB8 MOV W1, W31
	0x03A28BBC BL 0x3A2868C
	0x03A28BC0 STR X0, [X20 + 0x100]
	0x03A28BC4 CBZ X0, 0x3A28BF4
	0x03A28BC8 LDR W8, [X0 + 0x18]
	0x03A28BCC CMP W8, W19
	0x03A28BD0 B.LS 0x3A28BF8
	0x03A28BD4 ADD X8, X0, W19, 0x3, SXTW
	0x03A28BD8 LDR X0, [X8 + 0x20]
	0x03A28BDC LDP X20, X19, [X31 + 0x20]
	0x03A28BE0 LDP X22, X21, [X31 + 0x10]
	0x03A28BE4 LDR X30, [X31], #0x30
	0x03A28BE8 RET
	0x03A28BEC LDR X0, [X20 + 0x100]
	0x03A28BF0 CBNZ X0, 0x3A28BC8
	0x03A28BF4 BL 0x1C16F20
	0x03A28BF8 BL 0x1C16F28
	0x03A28BFC STR X30, [X31 - 0x30]!
	0x03A28C00 STP X22, X21, [X31 + 0x10]
	0x03A28C04 STP X20, X19, [X31 + 0x20]
	0x03A28C08 ADRP X21, 0x9BA000
	0x03A28C0C LDRB W8, [X21 + 0x43]
	0x03A28C10 MOV W19, W1
	0x03A28C14 MOV X20, X0
	0x03A28C18 TBNZ X8, 0x0, 0x3A28C3C
	0x03A28C1C ADRP X0, 0x6CB000
	0x03A28C20 LDR X0, [X0 + 0x598]
	0x03A28C24 BL 0x1C16CF4
	0x03A28C28 ADRP X0, 0x72C000
	0x03A28C2C LDR X0, [X0 + 0x6A0]
	0x03A28C30 BL 0x1C16CF4
	0x03A28C34 MOVZ W8, 0x1
	0x03A28C38 STRB W8, [X21 + 0x43]
	0x03A28C3C CBZ X20, 0x3A28CF8
	0x03A28C40 LDR X8, [X20 + 0x108]
	0x03A28C44 CBZ X8, 0x3A28C9C
	0x03A28C48 LDR X9, [X8 + 0x18]
	0x03A28C4C CBZ X9, 0x3A28C9C
	0x03A28C50 CBZ W9, 0x3A28CFC
	0x03A28C54 LDR X0, [X8 + 0x20]
	0x03A28C58 CBZ X0, 0x3A28CF8
	0x03A28C5C LDR X21, [X20 + 0xD0]
	0x03A28C60 MOV X1, X31
	0x03A28C64 BL 0x3C14714
	0x03A28C68 ADRP X8, 0x6CB000
	0x03A28C6C LDR X8, [X8 + 0x598]
	0x03A28C70 MOV X22, X0
	0x03A28C74 LDR X8, [X8]
	0x03A28C78 LDR W9, [X8 + 0xE0]
	0x03A28C7C CBNZ W9, 0x3A28C88
	0x03A28C80 MOV X0, X8
	0x03A28C84 BL 0x1C16DFC
	0x03A28C88 MOV X0, X21

ISIL:
	001 Move [X31-48], D8
	002 Move [X31+8], X30
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Compare X0, 0
	008 JumpIfEqual {90}
	009 Move X19, X8
	010 Move X8, [X0+24]
	011 Move X20, X0
	012 Compare X8, 0
	013 JumpIfEqual {60}
	014 Move X21, 0x9BB000
	015 Move W8, [X21+306]
	016 Compare W8, 0
	017 JumpIfNotEqual {23}
	018 Move X0, 0x6D4000
	019 Move X0, [X0+3848]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X21+306], W8
	023 Move X21, 0x6D4000
	024 Move X21, [X21+3848]
	025 Move X22, 0x9B4000
	026 Move W9, [X22+1296]
	027 Move X8, [X21]
	028 Move X8, [X8+184]
	029 Move V8, [X8+48]
	030 Compare W9, 0
	031 JumpIfNotEqual {38}
	032 Move X0, X21
	033 Call 0x1C17CF4
	034 Move X8, [X21]
	035 Move W9, 1
	036 Move [X22+1296], W9
	037 Move X8, [X8+184]
	038 Move X9, [X20+24]
	039 Move V0, [X8+56]
	040 NotImplemented "Instruction CMP not yet implemented."
	041 And X8, X9, 0
	042 Add X9, X20, 32
	043 Move V1, [X9+12]
	044 Subtract X8, X8, 1
	045 NotImplemented "Instruction INVALID not yet implemented."
	046 NotImplemented "Instruction INVALID not yet implemented."
	047 NotImplemented "Instruction INVALID not yet implemented."
	048 NotImplemented "Instruction INVALID not yet implemented."
	049 NotImplemented "Instruction MOVI not yet implemented."
	050 NotImplemented "Instruction MOVI not yet implemented."
	051 NotImplemented "Instruction INVALID not yet implemented."
	052 Add V2, V0, V2
	053 Add V0, V0, V2
	054 Subtract V0, V0, V8
	055 NotImplemented "Instruction INVALID not yet implemented."
	056 Add V1, V8, V0
	057 Move [X19], D1
	058 Move S1, W31
	059 Move [X19+8], W31
	060 Move X20, 0x9B1000
	061 Move W8, [X20+1923]
	062 Compare W8, 0
	063 JumpIfNotEqual {69}
	064 Move X0, 0x6CC000
	065 Move X0, [X0+1440]
	066 Call 0x1C17CF4
	067 Move W8, 1
	068 Move [X20+1923], W8
	069 Move X8, 0x6CC000
	070 Move X8, [X8+1440]
	071 NotImplemented "Instruction MOVI not yet implemented."
	072 Move S3, 0.5
	073 Move X8, [X8]
	074 Move X8, [X8+184]
	075 Move V0, [X8]
	076 Move V1, [X8+8]
	077 Move [X19], D0
	078 Move [X19+8], S1
	079 NotImplemented "Instruction INVALID not yet implemented."
	080 Multiply S1, S1, S3
	081 Move [X19+12], D0
	082 Move [X19+20], S1
	083 Move X20, [X31+32]
	084 Move X19, [X31+40]
	085 Move X22, [X31+16]
	086 Move X21, [X31+24]
	087 Move X30, [X31+8]
	088 Move V8, [X31+48]
	089 Return X0
	090 Call 0x1C17F20

Method: UnityEngine.Bounds GenerateShadowMesh(UnityEngine.Mesh mesh, UnityEngine.Vector3[] shapePath)

Disassembly:
	0x03A27E10 MOV X0, X20
	0x03A27E14 MOV X1, X19
	0x03A27E18 LDP X20, X19, [X31 + 0x10]
	0x03A27E1C LDR X8, [X8 + 0xC0]
	0x03A27E20 LDR X2, [X8 + 0x70]
	0x03A27E24 LDP X30, X21, [X31], #0x20
	0x03A27E28 B 0x301BF90
	0x03A27E2C BL 0x1C16F20
	0x03A27E30 STP X30, X21, [X31 - 0x20]!
	0x03A27E34 STP X20, X19, [X31 + 0x10]
	0x03A27E38 ADRP X21, 0x9BB000
	0x03A27E3C LDRB W8, [X21 + 0x31]
	0x03A27E40 MOV X19, X1
	0x03A27E44 MOV X20, X0
	0x03A27E48 TBNZ X8, 0x0, 0x3A27E60
	0x03A27E4C ADRP X0, 0x72D000
	0x03A27E50 LDR X0, [X0 + 0xAE8]
	0x03A27E54 BL 0x1C16CF4
	0x03A27E58 MOVZ W8, 0x1
	0x03A27E5C STRB W8, [X21 + 0x31]
	0x03A27E60 LDR X0, [X20 + 0x28]
	0x03A27E64 CBZ X0, 0x3A27E84
	0x03A27E68 ADRP X8, 0x72D000
	0x03A27E6C LDR X8, [X8 + 0xAE8]
	0x03A27E70 MOV X1, X19
	0x03A27E74 LDP X20, X19, [X31 + 0x10]
	0x03A27E78 LDR X2, [X8]
	0x03A27E7C LDP X30, X21, [X31], #0x20
	0x03A27E80 B 0x301D7A8
	0x03A27E84 LDP X20, X19, [X31 + 0x10]
	0x03A27E88 LDP X30, X21, [X31], #0x20
	0x03A27E8C RET
	0x03A27E90 STR X30, [X31 - 0x20]!
	0x03A27E94 STP X20, X19, [X31 + 0x10]
	0x03A27E98 ADRP X19, 0x9BB000
	0x03A27E9C ADRP X20, 0x72D000
	0x03A27EA0 LDRB W8, [X19 + 0x32]
	0x03A27EA4 LDR X20, [X20 + 0x5F0]
	0x03A27EA8 TBNZ X8, 0x0, 0x3A27EC0
	0x03A27EAC ADRP X0, 0x72D000
	0x03A27EB0 LDR X0, [X0 + 0x5F0]
	0x03A27EB4 BL 0x1C16CF4
	0x03A27EB8 MOVZ W8, 0x1
	0x03A27EBC STRB W8, [X19 + 0x32]
	0x03A27EC0 LDR X8, [X20]
	0x03A27EC4 LDP X20, X19, [X31 + 0x10]
	0x03A27EC8 LDR X8, [X8 + 0xB8]
	0x03A27ECC LDR X0, [X8]
	0x03A27ED0 LDR X30, [X31], #0x20
	0x03A27ED4 RET
	0x03A27ED8 STP X30, X25, [X31 - 0x40]!
	0x03A27EDC STP X24, X23, [X31 + 0x10]
	0x03A27EE0 STP X22, X21, [X31 + 0x20]
	0x03A27EE4 STP X20, X19, [X31 + 0x30]
	0x03A27EE8 ADRP X19, 0x9BB000
	0x03A27EEC LDRB W8, [X19 + 0x33]
	0x03A27EF0 TBNZ X8, 0x0, 0x3A27F20
	0x03A27EF4 ADRP X0, 0x72D000
	0x03A27EF8 LDR X0, [X0 + 0xAF0]
	0x03A27EFC BL 0x1C16CF4
	0x03A27F00 ADRP X0, 0x72D000
	0x03A27F04 LDR X0, [X0 + 0xAF8]
	0x03A27F08 BL 0x1C16CF4
	0x03A27F0C ADRP X0, 0x6CC000
	0x03A27F10 LDR X0, [X0 + 0x598]
	0x03A27F14 BL 0x1C16CF4
	0x03A27F18 MOVZ W8, 0x1
	0x03A27F1C STRB W8, [X19 + 0x33]
	0x03A27F20 ADRP X22, 0x9BB000
	0x03A27F24 LDRB W8, [X22 + 0xE]
	0x03A27F28 CBNZ W8, 0x3A27F40
	0x03A27F2C ADRP X0, 0x72D000
	0x03A27F30 LDR X0, [X0 + 0x5F0]
	0x03A27F34 BL 0x1C16CF4
	0x03A27F38 MOVZ W8, 0x1
	0x03A27F3C STRB W8, [X22 + 0xE]
	0x03A27F40 ADRP X19, 0x72D000
	0x03A27F44 LDR X19, [X19 + 0x5F0]
	0x03A27F48 LDR X8, [X19]
	0x03A27F4C LDR X8, [X8 + 0xB8]
	0x03A27F50 LDR X8, [X8]
	0x03A27F54 CBZ X8, 0x3A28028
	0x03A27F58 ADRP X23, 0x72D000
	0x03A27F5C ADRP X24, 0x6CC000
	0x03A27F60 LDR X23, [X23 + 0xAF8]
	0x03A27F64 LDR X24, [X24 + 0x598]
	0x03A27F68 MOV W20, W31
	0x03A27F6C MOVZ W25, 0x1
	0x03A27F70 MOVZ W8, 0x1
	0x03A27F74 ANDS W31, W8, 0xFF
	0x03A27F78 B.NE 0x3A27F88
	0x03A27F7C MOV X0, X19
	0x03A27F80 BL 0x1C16CF4
	0x03A27F84 STRB W25, [X22 + 0xE]
	0x03A27F88 LDR X8, [X19]
	0x03A27F8C LDR X8, [X8 + 0xB8]
	0x03A27F90 LDR X0, [X8]
	0x03A27F94 CBZ X0, 0x3A2803C
	0x03A27F98 LDR W8, [X0 + 0x18]
	0x03A27F9C CMP W20, W8
	0x03A27FA0 B.GE 0x3A28028
	0x03A27FA4 LDR X2, [X23]
	0x03A27FA8 MOV W1, W20
	0x03A27FAC BL 0x301BCCC
	0x03A27FB0 LDR X8, [X24]
	0x03A27FB4 MOV X21, X0
	0x03A27FB8 LDR W9, [X8 + 0xE0]
	0x03A27FBC CBNZ W9, 0x3A27FC8
	0x03A27FC0 MOV X0, X8
	0x03A27FC4 BL 0x1C16DFC
	0x03A27FC8 MOV X0, X21
	0x03A27FCC MOV X1, X31
	0x03A27FD0 MOV X2, X31
	0x03A27FD4 BL 0x3C354F8
	0x03A27FD8 TBZ X0, 0x0, 0x3A2801C
	0x03A27FDC LDRB W8, [X22 + 0xE]
	0x03A27FE0 CBNZ W8, 0x3A27FF0
	0x03A27FE4 MOV X0, X19
	0x03A27FE8 BL 0x1C16CF4
	0x03A27FEC STRB W25, [X22 + 0xE]
	0x03A27FF0 LDR X8, [X19]
	0x03A27FF4 LDR X8, [X8 + 0xB8]
	0x03A27FF8 LDR X0, [X8]
	0x03A27FFC CBZ X0, 0x3A2803C
	0x03A28000 LDR X2, [X23]
	0x03A28004 MOV W1, W20
	0x03A28008 BL 0x301BCCC
	0x03A2800C CBZ X0, 0x3A2803C
	0x03A28010 LDR X8, [X0]
	0x03A28014 LDP X9, X1, [X8 + 0x178]
	0x03A28018 BLR X9
	0x03A2801C LDRB W8, [X22 + 0xE]
	0x03A28020 ADD W20, W20, 0x1
	0x03A28024 B 0x3A27F74
	0x03A28028 LDP X20, X19, [X31 + 0x30]
	0x03A2802C LDP X22, X21, [X31 + 0x20]
	0x03A28030 LDP X24, X23, [X31 + 0x10]
	0x03A28034 LDP X30, X25, [X31], #0x40
	0x03A28038 RET
	0x03A2803C BL 0x1C16F20
	0x03A28040 STP X30, X23, [X31 - 0x30]!
	0x03A28044 STP X22, X21, [X31 + 0x10]
	0x03A28048 STP X20, X19, [X31 + 0x20]
	0x03A2804C ADRP X21, 0x9BA000
	0x03A28050 LDRB W8, [X21 + 0x34]
	0x03A28054 MOV X19, X1
	0x03A28058 MOV X20, X0
	0x03A2805C TBNZ X8, 0x0, 0x3A2808C
	0x03A28060 ADRP X0, 0x72C000
	0x03A28064 LDR X0, [X0 + 0xB00]
	0x03A28068 BL 0x1C16CF4
	0x03A2806C ADRP X0, 0x72C000
	0x03A28070 LDR X0, [X0 + 0xAF0]
	0x03A28074 BL 0x1C16CF4
	0x03A28078 ADRP X0, 0x72C000
	0x03A2807C LDR X0, [X0 + 0xAF8]
	0x03A28080 BL 0x1C16CF4
	0x03A28084 MOVZ W8, 0x1
	0x03A28088 STRB W8, [X21 + 0x34]
	0x03A2808C CBZ X19, 0x3A28110
	0x03A28090 LDR W8, [X19 + 0x18]
	0x03A28094 CMP W8, 0x1
	0x03A28098 B.LT 0x3A280E4
	0x03A2809C ADRP X22, 0x72C000
	0x03A280A0 LDR X22, [X22 + 0xAF8]
	0x03A280A4 MOV W21, W31
	0x03A280A8 CBZ X20, 0x3A28110
	0x03A280AC LDR X2, [X22]
	0x03A280B0 LDR W23, [X20 + 0x20]
	0x03A280B4 MOV X0, X19
	0x03A280B8 MOV W1, W21
	0x03A280BC BL 0x301BCCC
	0x03A280C0 CBZ X0, 0x3A28110
	0x03A280C4 LDR W8, [X0 + 0x20]
	0x03A280C8 CMP W23, W8
	0x03A280CC B.EQ 0x3A280E8
	0x03A280D0 LDR W8, [X19 + 0x18]
	0x03A280D4 ADD W21, W21, 0x1
	0x03A280D8 CMP W21, W8
	0x03A280DC B.LT 0x3A280A8
	0x03A280E0 B 0x3A280E8
	0x03A280E4 MOV W21, W31
	0x03A280E8 ADRP X8, 0x72C000
	0x03A280EC LDR X8, [X8 + 0xB00]
	0x03A280F0 MOV X0, X19
	0x03A280F4 MOV W1, W21
	0x03A280F8 MOV X2, X20
	0x03A280FC LDR X3, [X8]
	0x03A28100 LDP X20, X19, [X31 + 0x20]
	0x03A28104 LDP X22, X21, [X31 + 0x10]
	0x03A28108 LDP X30, X23, [X31], #0x30
	0x03A2810C B 0x301CEEC
	0x03A28110 BL 0x1C16F20
	0x03A28114 STP X30, X21, [X31 - 0x20]!
	0x03A28118 STP X20, X19, [X31 + 0x10]
	0x03A2811C ADRP X21, 0x9BA000
	0x03A28120 LDRB W8, [X21 + 0x35]
	0x03A28124 MOV X19, X1
	0x03A28128 MOV X20, X0
	0x03A2812C TBNZ X8, 0x0, 0x3A28144
	0x03A28130 ADRP X0, 0x72C000
	0x03A28134 LDR X0, [X0 + 0xB08]
	0x03A28138 BL 0x1C16CF4
	0x03A2813C MOVZ W8, 0x1
	0x03A28140 STRB W8, [X21 + 0x35]
	0x03A28144 CBZ X19, 0x3A28168
	0x03A28148 ADRP X8, 0x72C000
	0x03A2814C LDR X8, [X8 + 0xB08]
	0x03A28150 MOV X0, X19
	0x03A28154 MOV X1, X20
	0x03A28158 LDP X20, X19, [X31 + 0x10]
	0x03A2815C LDR X2, [X8]
	0x03A28160 LDP X30, X21, [X31], #0x20
	0x03A28164 B 0x301D7A8
	0x03A28168 BL 0x1C16F20
	0x03A2816C STR X30, [X31 - 0x30]!
	0x03A28170 STP X22, X21, [X31 + 0x10]
	0x03A28174 STP X20, X19, [X31 + 0x20]
	0x03A28178 ADRP X20, 0x9BA000
	0x03A2817C LDRB W8, [X20 + 0x36]
	0x03A28180 MOV X19, X0
	0x03A28184 TBNZ X8, 0x0, 0x3A281A8
	0x03A28188 ADRP X0, 0x72C000
	0x03A2818C LDR X0, [X0 + 0xB10]
	0x03A28190 BL 0x1C16CF4
	0x03A28194 ADRP X0, 0x6CB000
	0x03A28198 LDR X0, [X0 + 0x598]
	0x03A2819C BL 0x1C16CF4
	0x03A281A0 MOVZ W8, 0x1
	0x03A281A4 STRB W8, [X20 + 0x36]
	0x03A281A8 STR X31, [X31 + 0x8]
	0x03A281AC CBZ X19, 0x3A2824C
	0x03A281B0 MOV X0, X19
	0x03A281B4 MOV X1, X31
	0x03A281B8 BL 0x3C32E90
	0x03A281BC CBZ X0, 0x3A2824C
	0x03A281C0 ADRP X21, 0x6CB000
	0x03A281C4 ADRP X22, 0x72C000
	0x03A281C8 LDR X21, [X21 + 0x598]
	0x03A281CC LDR X22, [X22 + 0xB10]
	0x03A281D0 MOV X1, X31
	0x03A281D4 BL 0x3C3F49C
	0x03A281D8 MOV X20, X0
	0x03A281DC MOV X19, X31
	0x03A281E0 LDR X0, [X21]
	0x03A281E4 LDR W8, [X0 + 0xE0]
	0x03A281E8 CBNZ W8, 0x3A281F0
	0x03A281EC BL 0x1C16DFC
	0x03A281F0 MOV X0, X20
	0x03A281F4 MOV X1, X31
	0x03A281F8 MOV X2, X31
	0x03A281FC BL 0x3C354F8
	0x03A28200 TBZ X0, 0x0, 0x3A28238
	0x03A28204 CBZ X20, 0x3A2824C
	0x03A28208 LDR X2, [X22]
	0x03A2820C ADD X1, X31, 0x8
	0x03A28210 MOV X0, X20
	0x03A28214 BL 0x21A4990
	0x03A28218 LDR X8, [X31 + 0x8]
	0x03A2821C ANDS W31, W0, 0x1
	0x03A28220 MOV X0, X20
	0x03A28224 MOV X1, X31
	0x03A28228 CSEL X19, X8, X19, NE
	0x03A2822C BL 0x3C3F49C
	0x03A28230 MOV X20, X0
	0x03A28234 B 0x3A281E0
	0x03A28238 MOV X0, X19
	0x03A2823C LDP X20, X19, [X31 + 0x20]
	0x03A28240 LDP X22, X21, [X31 + 0x10]
	0x03A28244 LDR X30, [X31], #0x30
	0x03A28248 RET
	0x03A2824C BL 0x1C16F20
	0x03A28250 MOV X1, X31
	0x03A28254 B 0x33BDD8C
	0x03A28258 STR X30, [X31 - 0x20]!
	0x03A2825C STP X20, X19, [X31 + 0x10]
	0x03A28260 ADRP X20, 0x9BA000
	0x03A28264 ADRP X19, 0x72C000
	0x03A28268 LDRB W8, [X20 + 0x3B]
	0x03A2826C LDR X19, [X19 + 0x6A0]
	0x03A28270 TBNZ X8, 0x0, 0x3A28288
	0x03A28274 ADRP X0, 0x72C000
	0x03A28278 LDR X0, [X0 + 0x6A0]
	0x03A2827C BL 0x1C16CF4
	0x03A28280 MOVZ W8, 0x1
	0x03A28284 STRB W8, [X20 + 0x3B]
	0x03A28288 LDR X0, [X19]
	0x03A2828C LDR W8, [X0 + 0xE0]
	0x03A28290 CBNZ W8, 0x3A2829C
	0x03A28294 BL 0x1C16DFC
	0x03A28298 LDR X0, [X19]
	0x03A2829C LDR X8, [X0 + 0xB8]
	0x03A282A0 LDP X20, X19, [X31 + 0x10]
	0x03A282A4 LDR W0, [X8 + 0x78]
	0x03A282A8 LDR X30, [X31], #0x20
	0x03A282AC RET
	0x03A282B0 STP X30, X21, [X31 - 0x20]!
	0x03A282B4 STP X20, X19, [X31 + 0x10]
	0x03A282B8 ADRP X21, 0x9BA000
	0x03A282BC ADRP X20, 0x72C000
	0x03A282C0 LDRB W8, [X21 + 0x3C]
	0x03A282C4 LDR X20, [X20 + 0x6A0]
	0x03A282C8 MOV W19, W0
	0x03A282CC TBNZ X8, 0x0, 0x3A282E4
	0x03A282D0 ADRP X0, 0x72C000
	0x03A282D4 LDR X0, [X0 + 0x6A0]
	0x03A282D8 BL 0x1C16CF4
	0x03A282DC MOVZ W8, 0x1
	0x03A282E0 STRB W8, [X21 + 0x3C]
	0x03A282E4 LDR X0, [X20]
	0x03A282E8 LDR W8, [X0 + 0xE0]
	0x03A282EC CBNZ W8, 0x3A282F8
	0x03A282F0 BL 0x1C16DFC
	0x03A282F4 LDR X0, [X20]
	0x03A282F8 LDR X8, [X0 + 0xB8]
	0x03A282FC STR W19, [X8 + 0x78]
	0x03A28300 LDP X20, X19, [X31 + 0x10]
	0x03A28304 LDP X30, X21, [X31], #0x20
	0x03A28308 RET
	0x03A2830C SUB X31, X31, 0xD0
	0x03A28310 STP X30, X27, [X31 + 0x80]
	0x03A28314 STP X26, X25, [X31 + 0x90]
	0x03A28318 STP X24, X23, [X31 + 0xA0]
	0x03A2831C STP X22, X21, [X31 + 0xB0]
	0x03A28320 STP X20, X19, [X31 + 0xC0]
	0x03A28324 ADRP X21, 0x9BA000
	0x03A28328 ADRP X19, 0x72C000
	0x03A2832C LDRB W8, [X21 + 0x3D]
	0x03A28330 LDR X19, [X19 + 0x6A0]
	0x03A28334 MOV W20, W0
	0x03A28338 TBNZ X8, 0x0, 0x3A28398
	0x03A2833C ADRP X0, 0x6CC000
	0x03A28340 LDR X0, [X0 + 0xE58]
	0x03A28344 BL 0x1C16CF4
	0x03A28348 ADRP X0, 0x6CB000
	0x03A2834C LDR X0, [X0 + 0x758]
	0x03A28350 BL 0x1C16CF4
	0x03A28354 ADRP X0, 0x72A000
	0x03A28358 LDR X0, [X0 + 0xF30]
	0x03A2835C BL 0x1C16CF4
	0x03A28360 ADRP X0, 0x728000
	0x03A28364 LDR X0, [X0 + 0x9B0]
	0x03A28368 BL 0x1C16CF4
	0x03A2836C ADRP X0, 0x72C000
	0x03A28370 LDR X0, [X0 + 0xB18]
	0x03A28374 BL 0x1C16CF4
	0x03A28378 ADRP X0, 0x72C000
	0x03A2837C LDR X0, [X0 + 0x6A0]
	0x03A28380 BL 0x1C16CF4
	0x03A28384 ADRP X0, 0x72C000
	0x03A28388 LDR X0, [X0 + 0xB20]
	0x03A2838C BL 0x1C16CF4
	0x03A28390 MOVZ W8, 0x1
	0x03A28394 STRB W8, [X21 + 0x3D]
	0x03A28398 LDR X0, [X19]
	0x03A2839C LDR W8, [X0 + 0xE0]
	0x03A283A0 CBNZ W8, 0x3A283AC
	0x03A283A4 BL 0x1C16DFC
	0x03A283A8 LDR X0, [X19]
	0x03A283AC LDR X8, [X0 + 0xB8]
	0x03A283B0 LDR X8, [X8 + 0x50]
	0x03A283B4 CBZ X8, 0x3A283E0
	0x03A283B8 LDR W9, [X0 + 0xE0]
	0x03A283BC CBNZ W9, 0x3A283D4
	0x03A283C0 BL 0x1C16DFC
	0x03A283C4 LDR X0, [X19]
	0x03A283C8 LDR X8, [X0 + 0xB8]
	0x03A283CC LDR X8, [X8 + 0x50]
	0x03A283D0 CBZ X8, 0x3A2867C
	0x03A283D4 LDRSW X8, [X8 + 0x18]
	0x03A283D8 CMP X8, W20, UXTW
	0x03A283DC B.EQ 0x3A285E0
	0x03A283E0 ADRP X8, 0x72A000
	0x03A283E4 LDR X8, [X8 + 0xF30]
	0x03A283E8 ADRP X22, 0x6CC000
	0x03A283EC MOV W1, W20
	0x03A283F0 LDR X0, [X8]
	0x03A283F4 LDR X22, [X22 + 0xE58]
	0x03A283F8 BL 0x1C16D6C
	0x03A283FC LDR X8, [X19]
	0x03A28400 MOV X21, X0
	0x03A28404 LDR W9, [X8 + 0xE0]
	0x03A28408 CBNZ W9, 0x3A28418
	0x03A2840C MOV X0, X8
	0x03A28410 BL 0x1C16DFC
	0x03A28414 LDR X8, [X19]
	0x03A28418 LDR X8, [X8 + 0xB8]
	0x03A2841C MOV W1, W20
	0x03A28420 STR X21, [X8 + 0x50]
	0x03A28424 LDR X0, [X22]
	0x03A28428 BL 0x1C16D6C
	0x03A2842C MOV X8, X0
	0x03A28430 LDR X0, [X19]
	0x03A28434 ADRP X21, 0x9BA000
	0x03A28438 LDR X9, [X0 + 0xB8]
	0x03A2843C STR X8, [X9 + 0x58]
	0x03A28440 LDRB W8, [X21 + 0x131]
	0x03A28444 CBNZ W8, 0x3A2845C
	0x03A28448 MOV X0, X19
	0x03A2844C BL 0x1C16CF4
	0x03A28450 LDR X0, [X19]
	0x03A28454 MOVZ W8, 0x1
	0x03A28458 STRB W8, [X21 + 0x131]
	0x03A2845C LDR W8, [X0 + 0xE0]
	0x03A28460 CBNZ W8, 0x3A2846C
	0x03A28464 BL 0x1C16DFC
	0x03A28468 LDR X0, [X19]
	0x03A2846C LDR X8, [X0 + 0xB8]
	0x03A28470 STR W20, [X8 + 0x78]
	0x03A28474 CBZ W20, 0x3A285E0
	0x03A28478 ADRP X24, 0x6CB000
	0x03A2847C ADRP X25, 0x72C000
	0x03A28480 ADRP X26, 0x728000
	0x03A28484 LDR X24, [X24 + 0x758]
	0x03A28488 LDR X25, [X25 + 0xB20]
	0x03A2848C LDR X26, [X26 + 0x9B0]
	0x03A28490 MOV X23, X31
	0x03A28494 MOV W22, W20
	0x03A28498 LDR W8, [X0 + 0xE0]
	0x03A2849C CBNZ W8, 0x3A284A8
	0x03A284A0 BL 0x1C16DFC
	0x03A284A4 LDR X0, [X19]
	0x03A284A8 LDR X8, [X0 + 0xB8]
	0x03A284AC LDR X0, [X24]
	0x03A284B0 ADD X1, X31, 0x7C
	0x03A284B4 LDR X21, [X8 + 0x58]
	0x03A284B8 STR W23, [X31 + 0x7C]
	0x03A284BC BL 0x1C16E04
	0x03A284C0 LDR X8, [X25]
	0x03A284C4 MOV X1, X0
	0x03A284C8 MOV X2, X31
	0x03A284CC MOV X0, X8
	0x03A284D0 BL 0x321EFD0
	0x03A284D4 MOV X1, X31
	0x03A284D8 BL 0x3C124EC
	0x03A284DC CBZ X21, 0x3A2867C
	0x03A284E0 LDR W8, [X21 + 0x18]
	0x03A284E4 CMP W23, W8
	0x03A284E8 B.CS 0x3A28678
	0x03A284EC ADD X8, X21, X23, 0x2, LSL
	0x03A284F0 STR W0, [X8 + 0x20]
	0x03A284F4 LDR X8, [X19]
	0x03A284F8 LDR X8, [X8 + 0xB8]
	0x03A284FC LDR X9, [X8 + 0x58]
	0x03A28500 CBZ X9, 0x3A2867C
	0x03A28504 LDR W10, [X9 + 0x18]
	0x03A28508 CMP W23, W10
	0x03A2850C B.CS 0x3A28678
	0x03A28510 LDR X27, [X8 + 0x50]
	0x03A28514 ADD X8, X9, X23, 0x2, LSL
	0x03A28518 LDR W0, [X8 + 0x20]
	0x03A2851C ADD X8, X31, 0x28
	0x03A28520 MOV X1, X31
	0x03A28524 BL 0x3C4B258
	0x03A28528 LDUR V0, [X31 + 0x28]
	0x03A2852C LDUR V1, [X31 + 0x38]
	0x03A28530 LDR X8, [X31 + 0x48]
	0x03A28534 LDR X0, [X24]
	0x03A28538 ADD X1, X31, 0x28
	0x03A2853C STP V0, V1, [X31 + 0x50]
	0x03A28540 STR X8, [X31 + 0x70]
	0x03A28544 STR W23, [X31 + 0x28]
	0x03A28548 BL 0x1C16E04
	0x03A2854C LDR X8, [X25]
	0x03A28550 MOV X1, X0
	0x03A28554 MOV X2, X31
	0x03A28558 MOV X0, X8
	0x03A2855C BL 0x321EFD0
	0x03A28560 LDR X8, [X26]
	0x03A28564 MOV X21, X0
	0x03A28568 LDR W9, [X8 + 0xE0]
	0x03A2856C CBNZ W9, 0x3A28578
	0x03A28570 MOV X0, X8
	0x03A28574 BL 0x1C16DFC
	0x03A28578 LDP V0, V1, [X31 + 0x50]
	0x03A2857C LDR X8, [X31 + 0x70]
	0x03A28580 ADD X0, X31, 0x0
	0x03A28584 MOV X1, X21
	0x03A28588 MOV X2, X31
	0x03A2858C STP V0, V1, [X31]
	0x03A28590 STR X8, [X31 + 0x20]
	0x03A28594 BL 0x39D6AD0
	0x03A28598 CBZ X27, 0x3A2867C
	0x03A2859C MOV X21, X0
	0x03A285A0 CBZ X0, 0x3A285B8
	0x03A285A4 LDR X8, [X27]
	0x03A285A8 MOV X0, X21
	0x03A285AC LDR X1, [X8 + 0x40]
	0x03A285B0 BL 0x1C16E00
	0x03A285B4 CBZ X0, 0x3A28680
	0x03A285B8 LDR W8, [X27 + 0x18]
	0x03A285BC CMP W23, W8
	0x03A285C0 B.CS 0x3A28678
	0x03A285C4 ADD X8, X27, X23, 0x3, LSL
	0x03A285C8 STR X21, [X8 + 0x20]
	0x03A285CC LDR X0, [X19]
	0x03A285D0 ADD W8, W23, 0x1
	0x03A285D4 SXTW X23, W8
	0x03A285D8 CMP X23, X22
	0x03A285DC B.LT 0x3A28498
	0x03A285E0 LDR W8, [X0 + 0xE0]
	0x03A285E4 CBNZ W8, 0x3A285F0
	0x03A285E8 BL 0x1C16DFC
	0x03A285EC LDR X0, [X19]
	0x03A285F0 LDR X8, [X0 + 0xB8]

ISIL:
	001 Subtract X31, X31, 208
	002 Move [X31+80], D10
	003 Move [X31+96], D9
	004 Move [X31+104], D8
	005 Move [X31+112], X29
	006 Move [X31+120], X30
	007 Move [X31+128], X28
	008 Move [X31+136], X27
	009 Move [X31+144], X26
	010 Move [X31+152], X25
	011 Move [X31+160], X24
	012 Move [X31+168], X23
	013 Move [X31+176], X22
	014 Move [X31+184], X21
	015 Move [X31+192], X20
	016 Move [X31+200], X19
	017 Move [X31], X8
	018 Move [X31+8], X0
	019 Move X28, 0x9BC000
	020 Move X29, 0x6D1000
	021 Move X21, 0x6F9000
	022 Move X27, 0x6CE000
	023 Move X22, 0x6D1000
	024 Move X26, 0x728000
	025 Move X23, 0x728000
	026 Move X24, 0x727000
	027 Move X19, 0x727000
	028 Move X29, [X29+960]
	029 Move X21, [X21+1464]
	030 Move X27, [X27+3632]
	031 Move W8, [X28+83]
	032 Move X22, [X22+2928]
	033 Move X26, [X26+8]
	034 Move X23, [X23+16]
	035 Move X24, [X24+3072]
	036 Move X19, [X19+3080]
	037 Move X25, X1
	038 Move TEMP, X8
	039 And TEMP, TEMP, 1
	040 Compare TEMP, 1
	041 JumpIfEqual {152}
	042 Move X0, 0x6F5000
	043 Move X0, [X0+1504]
	044 Call 0x1C17CF4
	045 Move X0, 0x72E000
	046 Move X0, [X0+2632]
	047 Call 0x1C17CF4
	048 Move X0, 0x72E000
	049 Move X0, [X0+2640]
	050 Call 0x1C17CF4
	051 Move X0, 0x72E000
	052 Move X0, [X0+2648]
	053 Call 0x1C17CF4
	054 Move X0, 0x72E000
	055 Move X0, [X0+2656]
	056 Call 0x1C17CF4
	057 Move X0, 0x728000
	058 Move X0, [X0+2056]
	059 Call 0x1C17CF4
	060 Move X0, 0x728000
	061 Move X0, [X0+1120]
	062 Call 0x1C17CF4
	063 Move X0, 0x6CF000
	064 Move X0, [X0+2504]
	065 Call 0x1C17CF4
	066 Move X0, 0x728000
	067 Move X0, [X0+368]
	068 Call 0x1C17CF4
	069 Move X0, 0x6CF000
	070 Move X0, [X0+2512]
	071 Call 0x1C17CF4
	072 Move X0, 0x72E000
	073 Move X0, [X0+2664]
	074 Call 0x1C17CF4
	075 Move X0, 0x72E000
	076 Move X0, [X0+2672]
	077 Call 0x1C17CF4
	078 Move X0, 0x728000
	079 Move X0, [X0+1672]
	080 Call 0x1C17CF4
	081 Move X0, 0x6F9000
	082 Move X0, [X0+3416]
	083 Call 0x1C17CF4
	084 Move X0, 0x729000
	085 Move X0, [X0+392]
	086 Call 0x1C17CF4
	087 Move X0, 0x6FA000
	088 Move X0, [X0+1880]
	089 Call 0x1C17CF4
	090 Move X0, 0x6CE000
	091 Move X0, [X0+3608]
	092 Call 0x1C17CF4
	093 Move X0, 0x6FA000
	094 Move X0, [X0+1728]
	095 Call 0x1C17CF4
	096 Move X0, 0x6F9000
	097 Move X0, [X0+1456]
	098 Call 0x1C17CF4
	099 Move X0, 0x6D1000
	100 Move X0, [X0+2928]
	101 Call 0x1C17CF4
	102 Move X0, 0x728000
	103 Move X0, [X0+16]
	104 Call 0x1C17CF4
	105 Move X0, 0x72E000
	106 Move X0, [X0+2680]
	107 Call 0x1C17CF4
	108 Move X0, 0x6F9000
	109 Move X0, [X0+1464]
	110 Call 0x1C17CF4
	111 Move X0, 0x727000
	112 Move X0, [X0+3080]
	113 Call 0x1C17CF4
	114 Move X0, 0x6D1000
	115 Move X0, [X0+2424]
	116 Call 0x1C17CF4
	117 Move X0, 0x6CE000
	118 Move X0, [X0+3632]
	119 Call 0x1C17CF4
	120 Move X0, 0x72E000
	121 Move X0, [X0+2688]
	122 Call 0x1C17CF4
	123 Move X0, 0x727000
	124 Move X0, [X0+3072]
	125 Call 0x1C17CF4
	126 Move X0, 0x6D1000
	127 Move X0, [X0+960]
	128 Call 0x1C17CF4
	129 Move X0, 0x728000
	130 Move X0, [X0+8]
	131 Call 0x1C17CF4
	132 Move X0, 0x72E000
	133 Move X0, [X0+2696]
	134 Call 0x1C17CF4
	135 Move X0, 0x72E000
	136 Move X0, [X0+2704]
	137 Call 0x1C17CF4
	138 Move X0, 0x72D000
	139 Move X0, [X0+2712]
	140 Call 0x1C17CF4
	141 Move X0, 0x72D000
	142 Move X0, [X0+2720]
	143 Call 0x1C17CF4
	144 Move X0, 0x72D000
	145 Move X0, [X0+2728]
	146 Call 0x1C17CF4
	147 Move X0, 0x72D000
	148 Move X0, [X0+2736]
	149 Call 0x1C17CF4
	150 Move W8, 1
	151 Move [X28+83], W8
	152 Move X0, [X29]
	153 Call 0x1C17F10
	154 Move X1, [X21]
	155 Move [X31+32], X0
	156 Call List`1<Vector3>..ctor, X0
	157 Move X0, [X27]
	158 Call 0x1C17F10
	159 Move X1, [X22]
	160 Move [X31+88], X0
	161 Call List`1<Int32>..ctor, X0
	162 Move X0, [X26]
	163 Call 0x1C17F10
	164 Move X1, [X23]
	165 Move [X31+16], X0
	166 Call List`1<Vector4>..ctor, X0
	167 Move X0, [X24]
	168 Call 0x1C17F10
	169 Move X1, [X19]
	170 Move [X31+24], X0
	171 Call List`1<Color>..ctor, X0
	172 Compare X25, 0
	173 JumpIfEqual {544}
	174 Move X8, 0x72D000
	175 Move X8, [X8+2640]
	176 Move X20, [X25+24]
	177 Move X0, [X8]
	178 Move W1, W20
	179 ShiftRight W1, 31
	180 And W1, W1, 0x3FFFFFFF
	181 Call 0x1C17D6C
	182 NotImplemented "Instruction CMP not yet implemented."
	183 Move X26, X0
	184 Move X19, 0x6F4000
	185 Move X19, [X19+1504]
	186 Move X22, X31
	187 Move X8, X31
	188 And X27, X20, 0
	189 Add X28, X25, 32
	190 Move TEMP, 0
	191 Not TEMP
	192 Move X29, TEMP
	193 Move W20, 24
	194 Move X21, 1
	195 NotImplemented "Instruction MOVI not yet implemented."
	196 Move W9, [X25+24]
	197 NotImplemented "Instruction CMP not yet implemented."
	198 Move S9, [X28]
	199 Move S10, [X28+4]
	200 Move X0, [X19]
	201 Add X23, X8, 1
	202 NotImplemented "Instruction CMP not yet implemented."
	203 Add X1, X31, 40
	204 NotImplemented "Instruction CSEL not yet implemented."
	205 Move [X31+40], S9
	206 Move [X31+48], S10
	207 Move [X31+48], S9
	208 Move [X31+56], S10
	209 Call 0x1C17E04
	210 Compare X26, 0
	211 JumpIfEqual {544}
	212 Move W8, [X26+24]
	213 Add X9, X29, 1
	214 NotImplemented "Instruction CMP not yet implemented."
	215 NotImplemented "Instruction SBFM not yet implemented."
	216 NotImplemented "Instruction MADD not yet implemented."
	217 Move [X8+32], S9
	218 Move [X8+40], S10
	219 Move [X8+40], X31
	220 Move [X8+48], X0
	221 Move W8, [X25+24]
	222 Subtract X23, X23, 1
	223 NotImplemented "Instruction CMP not yet implemented."
	224 NotImplemented "Instruction CMP not yet implemented."
	225 Move W8, 12
	226 NotImplemented "Instruction SMADDL not yet implemented."
	227 Move V9, [X28+12]
	228 Move V10, [X8+32]
	229 Move X0, [X19]
	230 Add X1, X31, 64
	231 Move [X31+64], D9
	232 Move [X31+72], D10
	233 Call 0x1C17E04
	234 Move W8, [X26+24]
	235 Add X29, X29, 2
	236 NotImplemented "Instruction CMP not yet implemented."
	237 Add X9, X22, X21
	238 Move X8, 2
	239 Add X22, X22, X8
	240 Add V0, V9, V10
	241 Add X8, X23, 1
	242 NotImplemented "Instruction SBFM not yet implemented."
	243 NotImplemented "Instruction INVALID not yet implemented."
	244 NotImplemented "Instruction CMP not yet implemented."
	245 NotImplemented "Instruction MADD not yet implemented."
	246 Move [X9+32], D0
	247 Move [X9+40], X31
	248 Move [X9+48], X0
	249 Move X8, 0x72D000
	250 Move X8, [X8+2704]
	251 Move X0, [X8]
	252 Call 0x1C17F10
	253 Move X1, X31
	254 Move X25, X0
	255 Call Tess..ctor, X0
	256 Compare X25, 0
	257 JumpIfEqual {544}
	258 Move X20, 0x72D000
	259 Move X21, 0x72D000
	260 Move X19, 0x72D000
	261 Move X20, [X20+2632]
	262 Move X21, [X21+2696]
	263 Move X19, [X19+2736]
	264 Move X0, X25
	265 Move X1, X26
	266 Move W2, W31
	267 Move X3, X31
	268 Call Tess.AddContour, X0, X1, X2
	269 Move X0, [X20]
	270 Call 0x1C17F10
	271 Move X2, [X21]
	272 Move X1, X31
	273 Move X3, X31
	274 Move X26, X0
	275 Call CombineCallback..ctor, X0, X1, X2
	276 Move W3, 3
	277 Move X0, X25
	278 Move W1, W31
	279 Move W2, W31
	280 Move X4, X26
	281 Move X5, X31
	282 Call Tess.Tessellate, X0, X1, X2, X3, X4
	283 Move X0, [X19]
	284 Move X26, [X25+128]
	285 Move W8, [X0+224]
	286 Compare W8, 0
	287 JumpIfNotEqual {290}
	288 Call 0x1C17DFC
	289 Move X0, [X19]
	290 Move X8, [X0+184]
	291 Move X21, 0x727000
	292 Move X20, 0x6CE000
	293 Move X27, [X8+8]
	294 Move X21, [X21+2056]
	295 Move X20, [X20+2504]
	296 Move X29, [X31+88]
	297 Compare X27, 0
	298 JumpIfNotEqual {320}
	299 Move W8, [X0+224]
	300 Compare W8, 0
	301 JumpIfNotEqual {304}
	302 Call 0x1C17DFC
	303 Move X0, [X19]
	304 Move X9, 0x6CE000
	305 Move X8, [X0+184]
	306 Move X9, [X9+2512]
	307 Move X28, [X8]
	308 Move X0, [X9]
	309 Call 0x1C17F10
	310 Move X8, 0x72D000
	311 Move X8, [X8+2712]
	312 Move X1, X28
	313 Move X3, X31
	314 Move X27, X0
	315 Move X2, [X8]
	316 Call Func`2<Int32, Int32>..ctor, X0, X1, X2
	317 Move X8, [X19]
	318 Move X8, [X8+184]
	319 Move [X8+8], X27
	320 Move X2, [X21]
	321 Move X0, X26
	322 Move X1, X27
	323 Call Enumerable.Select, X0, X1
	324 Move X1, [X20]
	325 Call Enumerable.ToArray, X0
	326 Move X8, [X19]
	327 Move X27, [X25+112]
	328 Move X26, X0
	329 Move W9, [X8+224]
	330 Compare W9, 0
	331 JumpIfNotEqual {335}
	332 Move X0, X8
	333 Call 0x1C17DFC
	334 Move X8, [X19]
	335 Move X9, [X8+184]
	336 Move X21, 0x72D000
	337 Move X20, 0x727000
	338 Move X28, [X9+16]
	339 Move X21, [X21+2656]
	340 Move X20, [X20+368]
	341 Compare X28, 0
	342 JumpIfNotEqual {366}
	343 Move W9, [X8+224]
	344 Compare W9, 0
	345 JumpIfNotEqual {349}
	346 Move X0, X8
	347 Call 0x1C17DFC
	348 Move X8, [X19]
	349 Move X9, 0x72D000
	350 Move X8, [X8+184]
	351 Move X9, [X9+2672]
	352 Move X29, [X8]
	353 Move X0, [X9]
	354 Call 0x1C17F10
	355 Move X8, 0x72D000
	356 Move X8, [X8+2720]
	357 Move X1, X29
	358 Move X3, X31
	359 Move X28, X0
	360 Move X2, [X8]
	361 Call Func`2<ContourVertex, Vector3>..ctor, X0, X1, X2
	362 Move X8, [X19]
	363 Move X29, [X31+88]
	364 Move X8, [X8+184]
	365 Move [X8+16], X28
	366 Move X2, [X21]
	367 Move X0, X27
	368 Move X1, X28
	369 Call Enumerable.Select, X0, X1
	370 Move X1, [X20]
	371 Call Enumerable.ToArray, X0
	372 Move X8, [X19]
	373 Move X27, [X25+112]
	374 Move X25, X0
	375 Move W9, [X8+224]
	376 Compare W9, 0
	377 JumpIfNotEqual {381}
	378 Move X0, X8
	379 Call 0x1C17DFC
	380 Move X8, [X19]
	381 Move X9, [X8+184]
	382 Move X21, 0x72D000
	383 Move X20, 0x727000
	384 Move X28, [X9+24]
	385 Move X21, [X21+2648]
	386 Move X20, [X20+1120]
	387 Compare X28, 0
	388 JumpIfNotEqual {412}
	389 Move W9, [X8+224]
	390 Compare W9, 0
	391 JumpIfNotEqual {395}
	392 Move X0, X8
	393 Call 0x1C17DFC
	394 Move X8, [X19]
	395 Move X9, 0x72D000
	396 Move X8, [X8+184]
	397 Move X9, [X9+2664]
	398 Move X29, [X8]
	399 Move X0, [X9]
	400 Call 0x1C17F10
	401 Move X8, 0x72D000
	402 Move X8, [X8+2728]
	403 Move X1, X29
	404 Move X3, X31
	405 Move X28, X0
	406 Move X2, [X8]
	407 Call Func`2<ContourVertex, Color>..ctor, X0, X1, X2
	408 Move X8, [X19]
	409 Move X29, [X31+88]
	410 Move X8, [X8+184]
	411 Move [X8+24], X28
	412 Move X2, [X21]
	413 Move X0, X27
	414 Move X1, X28
	415 Call Enumerable.Select, X0, X1
	416 Move X1, [X20]
	417 Call Enumerable.ToArray, X0
	418 Move X28, [X31+32]
	419 Compare X28, 0
	420 JumpIfEqual {544}
	421 Move X8, 0x6F8000
	422 Move X8, [X8+3416]
	423 Move X27, X0
	424 Move X0, X28
	425 Move X1, X25
	426 Move X2, [X8]
	427 Call List`1<Vector3>.AddRange, X0, X1
	428 Compare X29, 0
	429 JumpIfEqual {544}
	430 Move X8, 0x727000
	431 Move X8, [X8+1672]
	432 Move X0, X29
	433 Move X1, X26
	434 Move X2, [X8]
	435 Call List`1<Int32>.AddRange, X0, X1
	436 Move X24, [X31+24]
	437 Compare X24, 0
	438 JumpIfEqual {544}
	439 Move X8, 0x728000
	440 Move X8, [X8+392]
	441 Move X19, 0x72D000
	442 Move X20, 0x72D000
	443 Move X19, [X19+2688]
	444 Move X20, [X20+2680]
	445 Move X2, [X8]
	446 Move X21, 0x6F9000
	447 Move X22, 0x6F8000
	448 Move X23, 0x6CD000
	449 Move X21, [X21+1728]
	450 Move X22, [X22+1456]
	451 Move X23, [X23+3608]
	452 Move X0, X24
	453 Move X1, X27
	454 Call List`1<Color>.AddRange, X0, X1
	455 Move X26, [X31+16]
	456 Move W0, [X28+24]
	457 Move X1, X26
	458 Call ShadowUtility.InitializeTangents, X0, X1
	459 Move X0, [X19]
	460 Call 0x1C17F10
	461 Move X1, [X20]
	462 Move X25, X0
	463 Call List`1<Edge>..ctor, X0
	464 Move X0, X28
	465 Move X1, X29
	466 Move X2, X25
	467 Call ShadowUtility.PopulateEdgeArray, X0, X1, X2
	468 Move X0, X25
	469 Call ShadowUtility.SortEdges, X0
	470 Move X0, X28
	471 Move X1, X24
	472 Move X2, X29
	473 Move X3, X26
	474 Move X4, X25
	475 Call ShadowUtility.CreateShadowTriangles, X0, X1, X2, X3, X4
	476 Move X1, [X21]
	477 Move X0, X24
	478 Call List`1<Color>.ToArray, X0
	479 Move X1, [X22]
	480 Move X24, X0
	481 Move X0, X28
	482 Call List`1<Vector3>.ToArray, X0
	483 Move X1, [X23]
	484 Move X21, X0
	485 Move X0, X29
	486 Call List`1<Int32>.ToArray, X0
	487 Compare X26, 0
	488 JumpIfEqual {544}
	489 Move X8, 0x6F9000
	490 Move X8, [X8+1880]
	491 Move X22, X0
	492 Move X0, X26
	493 Move X1, [X8]
	494 Call List`1<Vector4>.ToArray, X0
	495 Move X19, [X31+8]
	496 Compare X19, 0
	497 JumpIfEqual {544}
	498 Move X23, X0
	499 Move X0, X19
	500 Move X1, X31
	501 Call Mesh.Clear, X0
	502 Move X0, X19
	503 Move X1, X21
	504 Move X2, X31
	505 Call Mesh.set_vertices, X0, X1
	506 Move X0, X19
	507 Move X1, X22
	508 Move X2, X31
	509 Call Mesh.set_triangles, X0, X1
	510 Move X0, X19
	511 Move X1, X23
	512 Move X2, X31
	513 Call Mesh.set_tangents, X0, X1
	514 Move X0, X19
	515 Move X1, X24
	516 Move X2, X31
	517 Call Mesh.set_colors, X0, X1
	518 Add X8, X31, 40
	519 Move X0, X21
	520 Call ShadowUtility.CalculateLocalBounds, X0
	521 Move X8, [X31+56]
	522 NotImplemented "Instruction LDUR not yet implemented."
	523 Move X9, [X31]
	524 Move X20, [X31+192]
	525 Move X19, [X31+200]
	526 Move X22, [X31+176]
	527 Move X21, [X31+184]
	528 Move X24, [X31+160]
	529 Move X23, [X31+168]
	530 Move X26, [X31+144]
	531 Move X25, [X31+152]
	532 Move X28, [X31+128]
	533 Move X27, [X31+136]
	534 Move X29, [X31+112]
	535 Move X30, [X31+120]
	536 Move D9, [X31+96]
	537 Move D8, [X31+104]
	538 Move V10, [X31+80]
	539 Move [X9+16], X8
	540 Move [X9], V0
	541 Add X31, X31, 208
	542 Return X0
	543 Call 0x1C17F28
	544 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x03A2C1F8 MOVZ W0, 0x8
	0x03A2C1FC MOV X1, X31

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

