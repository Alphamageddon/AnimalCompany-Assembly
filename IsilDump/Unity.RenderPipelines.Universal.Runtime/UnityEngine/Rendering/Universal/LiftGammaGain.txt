Type: UnityEngine.Rendering.Universal.LiftGammaGain

Method: System.Boolean IsActive()

Disassembly:
	0x03A5AFC8 LDR W9, [X10]
	0x03A5AFCC ADD W9, W9, 0x2
	0x03A5AFD0 ADD X8, X8, W9, 0x4, SXTW
	0x03A5AFD4 ADD X0, X8, 0x138
	0x03A5AFD8 LDP X8, X1, [X0]
	0x03A5AFDC MOV X0, X20
	0x03A5AFE0 BLR X8
	0x03A5AFE4 ADRP X22, 0x6FC000
	0x03A5AFE8 LDR X22, [X22 + 0x3A8]
	0x03A5AFEC LDR X8, [X20]
	0x03A5AFF0 LDR X1, [X21]
	0x03A5AFF4 LDRH W9, [X8 + 0x12E]
	0x03A5AFF8 CBZ X9, 0x3A5B01C
	0x03A5AFFC LDR X10, [X8 + 0xB0]
	0x03A5B000 ADD X10, X10, 0x8
	0x03A5B004 LDUR X11, [X10 - 0x8]
	0x03A5B008 CMP X11, X1
	0x03A5B00C B.EQ 0x3A5B02C
	0x03A5B010 SUBS X9, X9, 0x1
	0x03A5B014 ADD X10, X10, 0x10
	0x03A5B018 B.NE 0x3A5B004
	0x03A5B01C MOV X0, X20
	0x03A5B020 MOV W2, W31
	0x03A5B024 BL 0x1C5C788
	0x03A5B028 B 0x3A5B038
	0x03A5B02C LDRSW X9, [X10]
	0x03A5B030 ADD X8, X8, X9, 0x4, LSL
	0x03A5B034 ADD X0, X8, 0x138
	0x03A5B038 LDP X8, X1, [X0]
	0x03A5B03C MOV X0, X20
	0x03A5B040 BLR X8
	0x03A5B044 TBZ X0, 0x0, 0x3A5B0E4
	0x03A5B048 LDR X8, [X20]
	0x03A5B04C LDR X1, [X22]
	0x03A5B050 LDRH W9, [X8 + 0x12E]
	0x03A5B054 CBZ X9, 0x3A5B078
	0x03A5B058 LDR X10, [X8 + 0xB0]
	0x03A5B05C ADD X10, X10, 0x8
	0x03A5B060 LDUR X11, [X10 - 0x8]
	0x03A5B064 CMP X11, X1
	0x03A5B068 B.EQ 0x3A5B088
	0x03A5B06C SUBS X9, X9, 0x1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x989000
	006 Move X20, 0x6FD000
	007 Move W8, [X21+515]
	008 Move X20, [X20+824]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x6FD000
	015 Move X0, [X0+824]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+515], W8
	019 Move X0, [X19+56]
	020 Move X1, [X20]
	021 Move S0, 1
	022 Move S1, 1
	023 Move S2, 1
	024 Move S3, W31
	025 Call VolumeParameter`1<Vector4>.op_Inequality, X0, X1
	026 Move TEMP, X0
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {41}
	030 Move X0, [X19+64]
	031 Move X1, [X20]
	032 Move S0, 1
	033 Move S1, 1
	034 Move S2, 1
	035 Move S3, W31
	036 Call VolumeParameter`1<Vector4>.op_Inequality, X0, X1
	037 Move TEMP, X0
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfNotEqual {47}
	041 Move X20, [X31+16]
	042 Move X19, [X31+24]
	043 Move W0, 1
	044 Move X30, [X31+32]
	045 Move X21, [X31+40]
	046 Return X0
	047 Move X0, [X19+72]
	048 Move X1, [X20]
	049 Move X20, [X31+16]
	050 Move X19, [X31+24]
	051 Move S0, 1
	052 Move S1, 1
	053 Move S2, 1
	054 Move S3, W31
	055 Move X30, [X31+32]
	056 Move X21, [X31+40]
	057 Call VolumeParameter`1<Vector4>.op_Inequality, X0, X1
	058 Return X0

Method: System.Boolean IsTileCompatible()

Disassembly:
	0x03A5B070 ADD X10, X10, 0x10
	0x03A5B074 B.NE 0x3A5B060

ISIL:
	001 Move W0, 1
	002 Return X0

Method: System.Void .ctor()

Disassembly:
	0x03A5B078 MOV X0, X20
	0x03A5B07C MOV W2, W31
	0x03A5B080 BL 0x1C5C788
	0x03A5B084 B 0x3A5B094
	0x03A5B088 LDRSW X9, [X10]
	0x03A5B08C ADD X8, X8, X9, 0x4, LSL
	0x03A5B090 ADD X0, X8, 0x138
	0x03A5B094 LDP X8, X1, [X0]
	0x03A5B098 MOV X0, X20
	0x03A5B09C BLR X8
	0x03A5B0A0 LDP V0, V1, [X31 + 0x30]
	0x03A5B0A4 LDR X8, [X31 + 0x50]
	0x03A5B0A8 STP V0, V1, [X31]
	0x03A5B0AC STR X8, [X31 + 0x20]
	0x03A5B0B0 CBZ X0, 0x3A5B104
	0x03A5B0B4 LDP V0, V1, [X31]
	0x03A5B0B8 LDR X10, [X31 + 0x20]
	0x03A5B0BC LDR X2, [X19]
	0x03A5B0C0 LDR X9, [X0 + 0x18]
	0x03A5B0C4 LDR X8, [X0 + 0x40]
	0x03A5B0C8 STP V0, V1, [X31 + 0x60]
	0x03A5B0CC STR X10, [X31 + 0x80]
	0x03A5B0D0 LDR X3, [X0 + 0x28]
	0x03A5B0D4 ADD X1, X31, 0x60
	0x03A5B0D8 MOV X0, X8
	0x03A5B0DC BLR X9
	0x03A5B0E0 B 0x3A5AFEC
	0x03A5B0E4 ADD X0, X31, 0x98
	0x03A5B0E8 MOV X1, X31
	0x03A5B0EC BL 0x39B1DB4
	0x03A5B0F0 LDP X20, X19, [X31 + 0xB0]
	0x03A5B0F4 LDP X22, X21, [X31 + 0xA0]
	0x03A5B0F8 LDR X30, [X31 + 0x90]
	0x03A5B0FC ADD X31, X31, 0xC0
	0x03A5B100 RET
	0x03A5B104 BL 0x1C16F20
	0x03A5B108 BL 0x1C16F20
	0x03A5B10C BL 0x1C16F20
	0x03A5B110 BL 0x1C16F20
	0x03A5B114 B 0x3A5B128
	0x03A5B118 B 0x3A5B128
	0x03A5B11C B 0x3A5B128
	0x03A5B120 B 0x3A5B128
	0x03A5B124 B 0x3A5B128
	0x03A5B128 MOV X19, X0
	0x03A5B12C CMP W1, 0x1
	0x03A5B130 B.NE 0x3A5B15C
	0x03A5B134 MOV X0, X19
	0x03A5B138 BL 0x3EB1AD0
	0x03A5B13C LDR X20, [X0]
	0x03A5B140 BL 0x3EB1AE0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x988000
	006 Move X21, 0x6FC000
	007 Move W8, [X20+516]
	008 Move X21, [X21+832]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x6FC000
	015 Move X0, [X0+832]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+516], W8
	019 Move X0, [X21]
	020 Call 0x1C17F10
	021 Move S0, 1
	022 Move S1, 1
	023 Move S2, 1
	024 Move S3, W31
	025 Move W1, W31
	026 Move X2, X31
	027 Move X20, X0
	028 Call Vector4Parameter..ctor, X0, X1, X2
	029 Move [X19+56], X20
	030 Move X0, [X21]
	031 Call 0x1C17F10
	032 Move S0, 1
	033 Move S1, 1
	034 Move S2, 1
	035 Move S3, W31
	036 Move W1, W31
	037 Move X2, X31
	038 Move X20, X0
	039 Call Vector4Parameter..ctor, X0, X1, X2
	040 Move [X19+64], X20
	041 Move X0, [X21]
	042 Call 0x1C17F10
	043 Move S0, 1
	044 Move S1, 1
	045 Move S2, 1
	046 Move S3, W31
	047 Move W1, W31
	048 Move X2, X31
	049 Move X20, X0
	050 Call Vector4Parameter..ctor, X0, X1, X2
	051 Move [X19+72], X20
	052 Move X0, X19
	053 Move X20, [X31+16]
	054 Move X19, [X31+24]
	055 Move X1, X31
	056 Move X30, [X31+32]
	057 Move X21, [X31+40]
	058 Call VolumeComponent..ctor, X0
	059 Return 

