Type: UnityEngine.Rendering.Universal.DebugDisplaySettingsRendering/WidgetFactory/<>c__DisplayClass5_0

Method: System.Void .ctor()

Disassembly:
	0x03A34510 STRB W8, [X19 + 0xC7]
	0x03A34514 LDR X0, [X21]

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: System.Boolean <CreateMaxOverdrawCount>b__0()

Disassembly:
	0x03A3611C LDR W1, [X9 + 0x60]
	0x03A36120 MOV X2, X31
	0x03A36124 LDP D11, D10, [X31], #0x50
	0x03A36128 B 0x3C4CDDC
	0x03A3612C LDP X20, X19, [X31 + 0x40]
	0x03A36130 LDP X22, X21, [X31 + 0x30]
	0x03A36134 LDR X30, [X31 + 0x20]
	0x03A36138 LDP D9, D8, [X31 + 0x10]
	0x03A3613C LDP D11, D10, [X31], #0x50
	0x03A36140 RET
	0x03A36144 CMP W21, 0x1
	0x03A36148 B.EQ 0x3A36238
	0x03A3614C CBNZ W21, 0x3A35FE8
	0x03A36150 ADRP X8, 0x71F000
	0x03A36154 LDR X8, [X8 + 0x4C8]
	0x03A36158 MOV X0, X19
	0x03A3615C MOV X2, X31
	0x03A36160 LDR X1, [X8]
	0x03A36164 BL 0x3C4D124
	0x03A36168 B 0x3A35FE8
	0x03A3616C FMOV S0, 1
	0x03A36170 MOV X0, X19

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x9AD000
	005 Move W8, [X20+231]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x720000
	012 Move X0, [X0+1136]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+231], W8
	016 Move X8, [X19+16]
	017 Compare X8, 0
	018 JumpIfEqual {29}
	019 Move X8, [X8+32]
	020 Compare X8, 0
	021 JumpIfEqual {29}
	022 Move W8, [X8+24]
	023 Move X20, [X31+16]
	024 Move X19, [X31+24]
	025 NotImplemented "Instruction CMP not yet implemented."
	026 NotImplemented "Instruction CSET not yet implemented."
	027 Move X30, [X31+32]
	028 Return X0
	029 Call 0x1C17F20

Method: System.Int32 <CreateMaxOverdrawCount>b__1()

Disassembly:
	0x03A36174 MOV X2, X31
	0x03A36178 BL 0x3C4CDDC
	0x03A3617C LDR X8, [X20 + 0x78]
	0x03A36180 CBZ X8, 0x3A36294
	0x03A36184 LDR X8, [X8 + 0x20]
	0x03A36188 CBZ X8, 0x3A36294
	0x03A3618C LDR X9, [X21]
	0x03A36190 LDR W10, [X8 + 0x18]
	0x03A36194 LDR X9, [X9 + 0xB8]
	0x03A36198 LDR W1, [X9 + 0x54]
	0x03A3619C CBZ W10, 0x3A361A8
	0x03A361A0 LDR V0, [X8 + 0x24]
	0x03A361A4 B 0x3A361AC
	0x03A361A8 FMOV S0, 1
	0x03A361AC MOV X0, X19
	0x03A361B0 MOV X2, X31
	0x03A361B4 BL 0x3C4CDDC
	0x03A361B8 LDR X8, [X20 + 0x78]
	0x03A361BC CBZ X8, 0x3A36294
	0x03A361C0 LDR X8, [X8 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x9AD000
	005 Move W8, [X20+232]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x720000
	012 Move X0, [X0+1136]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+232], W8
	016 Move X8, [X19+16]
	017 Compare X8, 0
	018 JumpIfEqual {27}
	019 Move X8, [X8+32]
	020 Compare X8, 0
	021 JumpIfEqual {27}
	022 Move W0, [X8+28]
	023 Move X20, [X31+16]
	024 Move X19, [X31+24]
	025 Move X30, [X31+32]
	026 Return X0
	027 Call 0x1C17F20

Method: System.Void <CreateMaxOverdrawCount>b__2(System.Int32 value)

Disassembly:
	0x03A361C4 CBZ X8, 0x3A36294
	0x03A361C8 LDR X9, [X21]
	0x03A361CC LDP S0, S8, [X8 + 0x2C]
	0x03A361D0 LDP S9, S10, [X8 + 0x34]
	0x03A361D4 MOV X0, X31
	0x03A361D8 LDR X9, [X9 + 0xB8]
	0x03A361DC LDR W20, [X9 + 0x58]
	0x03A361E0 BL 0x3C25A10
	0x03A361E4 MOV V11.16B, V0.16B
	0x03A361E8 MOV V0.16B, V8.16B
	0x03A361EC MOV X0, X31
	0x03A361F0 BL 0x3C25A10
	0x03A361F4 MOV V8.16B, V0.16B
	0x03A361F8 MOV V0.16B, V9.16B
	0x03A361FC MOV X0, X31
	0x03A36200 BL 0x3C25A10
	0x03A36204 MOV X0, X19
	0x03A36208 MOV W1, W20
	0x03A3620C MOV V1.16B, V8.16B
	0x03A36210 LDP X20, X19, [X31 + 0x40]
	0x03A36214 LDP X22, X21, [X31 + 0x30]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x9AD000
	006 Move W8, [X21+233]
	007 Move W19, W1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x720000
	014 Move X0, [X0+1136]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+233], W8
	018 Move X8, [X20+16]
	019 Compare X8, 0
	020 JumpIfEqual {30}
	021 Move X8, [X8+32]
	022 Compare X8, 0
	023 JumpIfEqual {30}
	024 Move [X8+28], W19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Move X21, [X31+40]
	029 Return 
	030 Call 0x1C17F20

