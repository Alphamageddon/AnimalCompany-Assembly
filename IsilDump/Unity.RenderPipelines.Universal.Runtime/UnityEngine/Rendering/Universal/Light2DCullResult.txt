Type: UnityEngine.Rendering.Universal.Light2DCullResult

Method: System.Collections.Generic.List`1<UnityEngine.Rendering.Universal.Light2D> get_visibleLights()

Disassembly:
	0x03A16B44 BL 0x1C16CF4
	0x03A16B48 ADRP X0, 0x73E000

ISIL:
	001 Move X0, [X0+16]
	002 Return X0

Method: System.Collections.Generic.List`1<UnityEngine.Rendering.Universal.ShadowCasterGroup2D> get_visibleShadows()

Disassembly:
	0x03A16B4C LDR X0, [X0 + 0x558]
	0x03A16B50 BL 0x1C16CF4

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Boolean IsSceneLit()

Disassembly:
	0x03A16B54 ADRP X0, 0x73E000
	0x03A16B58 LDR X0, [X0 + 0x560]
	0x03A16B5C BL 0x1C16CF4
	0x03A16B60 ADRP X0, 0x73E000
	0x03A16B64 LDR X0, [X0 + 0x498]
	0x03A16B68 BL 0x1C16CF4
	0x03A16B6C ADRP X0, 0x73E000
	0x03A16B70 LDR X0, [X0 + 0x568]
	0x03A16B74 BL 0x1C16CF4
	0x03A16B78 MOVZ W8, 0x1
	0x03A16B7C STRB W8, [X23 + 0xFC4]
	0x03A16B80 ADRP X8, 0xFFFFFFFFFD0D6000
	0x03A16B84 LDR V0, [X8 + 0xBB]
	0x03A16B88 STP X31, X31, [X31 + 0x8]
	0x03A16B8C STR X31, [X31 + 0x18]
	0x03A16B90 STR V0, [X19]
	0x03A16B94 LDR X0, [X22]
	0x03A16B98 LDR W8, [X0 + 0xE0]
	0x03A16B9C CBNZ W8, 0x3A16BA4
	0x03A16BA0 BL 0x1C16DFC
	0x03A16BA4 ADRP X23, 0x9CC000
	0x03A16BA8 LDRB W8, [X23 + 0xD]
	0x03A16BAC CBNZ W8, 0x3A16BC4
	0x03A16BB0 ADRP X0, 0x73E000
	0x03A16BB4 LDR X0, [X0 + 0x498]
	0x03A16BB8 BL 0x1C16CF4
	0x03A16BBC MOVZ W8, 0x1
	0x03A16BC0 STRB W8, [X23 + 0xD]
	0x03A16BC4 LDR X0, [X22]
	0x03A16BC8 LDR W8, [X0 + 0xE0]
	0x03A16BCC CBNZ W8, 0x3A16BD8
	0x03A16BD0 BL 0x1C16DFC
	0x03A16BD4 LDR X0, [X22]
	0x03A16BD8 LDR X8, [X0 + 0xB8]
	0x03A16BDC LDR X0, [X8 + 0x8]
	0x03A16BE0 CBZ X0, 0x3A16C9C
	0x03A16BE4 ADRP X8, 0x73E000
	0x03A16BE8 LDR X8, [X8 + 0x568]
	0x03A16BEC ADRP X25, 0x73E000
	0x03A16BF0 ADRP X24, 0x73E000
	0x03A16BF4 LDR X1, [X8]
	0x03A16BF8 LDR X25, [X25 + 0x558]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x9CC000
	005 Move X19, 0x73F000
	006 Move W8, [X20+4027]
	007 Move X19, [X19+1176]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {20}
	012 Move X0, 0x73F000
	013 Move X0, [X0+1176]
	014 Call 0x1C17CF4
	015 Move X0, 0x73F000
	016 Move X0, [X0+1352]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+4027], W8
	020 Move X0, [X19]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 Move X20, 0x9CD000
	026 Move W8, [X20+13]
	027 Compare W8, 0
	028 JumpIfNotEqual {34}
	029 Move X0, 0x73F000
	030 Move X0, [X0+1176]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X20+13], W8
	034 Move X0, [X19]
	035 Move W8, [X0+224]
	036 Compare W8, 0
	037 JumpIfNotEqual {40}
	038 Call 0x1C17DFC
	039 Move X0, [X19]
	040 Move X8, [X0+184]
	041 Move X8, [X8+8]
	042 Compare X8, 0
	043 JumpIfEqual {51}
	044 Move W8, [X8+24]
	045 Move X20, [X31+16]
	046 Move X19, [X31+24]
	047 NotImplemented "Instruction CMP not yet implemented."
	048 NotImplemented "Instruction CSET not yet implemented."
	049 Move X30, [X31+32]
	050 Return X0
	051 Call 0x1C17F20

Method: UnityEngine.Rendering.Universal.LightStats GetLightStatsByLayer(System.Int32 layer)

Disassembly:
	0x03A16BFC LDR X24, [X24 + 0x550]
	0x03A16C00 ADD X8, X31, 0x8
	0x03A16C04 BL 0x301CB58
	0x03A16C08 LDR X1, [X25]
	0x03A16C0C ADD X0, X31, 0x8
	0x03A16C10 BL 0x2BC4350
	0x03A16C14 MOV W22, W0
	0x03A16C18 TBZ X0, 0x0, 0x3A16C64
	0x03A16C1C LDR X23, [X31 + 0x18]
	0x03A16C20 CBZ X23, 0x3A16C98
	0x03A16C24 LDR W8, [X23 + 0x24]
	0x03A16C28 CMP W8, 0x4
	0x03A16C2C B.NE 0x3A16C08
	0x03A16C30 LDR W8, [X23 + 0x28]
	0x03A16C34 CMP W8, W20
	0x03A16C38 B.NE 0x3A16C08
	0x03A16C3C MOV X0, X23
	0x03A16C40 MOV W1, W21
	0x03A16C44 BL 0x3A15404
	0x03A16C48 TBZ X0, 0x0, 0x3A16C08
	0x03A16C4C LDR V0, [X23 + 0x3]
	0x03A16C50 LDR V1, [X23 + 0x40]
	0x00000000 INVALID
	0x03A16C58 STR V0, [X19]
	0x03A16C5C MOVZ W19, 0x4
	0x03A16C60 B 0x3A16C68
	0x03A16C64 MOVZ W19, 0x6
	0x03A16C68 LDR X1, [X24]
	0x03A16C6C ADD X0, X31, 0x8
	0x03A16C70 BL 0x2BC434C
	0x03A16C74 CMP W19, 0x4
	0x03A16C78 CSET W8, EQ
	0x03A16C7C AND W0, W22, W8, 0x0
	0x03A16C80 LDP X20, X19, [X31 + 0x50]
	0x03A16C84 LDP X22, X21, [X31 + 0x40]
	0x03A16C88 LDP X24, X23, [X31 + 0x30]
	0x03A16C8C LDP X30, X25, [X31 + 0x20]
	0x03A16C90 ADD X31, X31, 0x60
	0x03A16C94 RET
	0x03A16C98 BL 0x1C16F20
	0x03A16C9C BL 0x1C16F20
	0x03A16CA0 B 0x3A16CA8
	0x03A16CA4 B 0x3A16CA8
	0x03A16CA8 MOV X19, X0
	0x03A16CAC CMP W1, 0x1
	0x03A16CB0 B.NE 0x3A16CE0
	0x03A16CB4 MOV X0, X19
	0x03A16CB8 BL 0x3EB1AD0
	0x03A16CBC LDR X20, [X0]
	0x03A16CC0 BL 0x3EB1AE0
	0x03A16CC4 LDR X1, [X24]
	0x03A16CC8 ADD X0, X31, 0x8
	0x03A16CCC BL 0x2BC434C
	0x03A16CD0 CBNZ X20, 0x3A16CE8
	0x03A16CD4 MOV W22, W31
	0x03A16CD8 MOV W19, W31
	0x03A16CDC B 0x3A16C74
	0x03A16CE0 MOV X20, X31
	0x03A16CE4 B 0x3A16CF4
	0x03A16CE8 MOV X0, X20
	0x03A16CEC BL 0x1C16F18
	0x03A16CF0 MOV X19, X0
	0x03A16CF4 LDR X1, [X24]
	0x03A16CF8 ADD X0, X31, 0x8
	0x03A16CFC BL 0x2BC434C
	0x03A16D00 CBNZ X20, 0x3A16D0C
	0x03A16D04 MOV X0, X19
	0x03A16D08 BL 0x1D2C690
	0x03A16D0C MOV X0, X20
	0x03A16D10 BL 0x1C16F18
	0x03A16D14 BL 0x1990590
	0x03A16D18 STR X30, [X31 - 0x30]!
	0x03A16D1C STP X22, X21, [X31 + 0x10]
	0x03A16D20 STP X20, X19, [X31 + 0x20]
	0x03A16D24 ADRP X21, 0x9CB000
	0x03A16D28 ADRP X22, 0x73E000
	0x03A16D2C ADRP X19, 0x73E000
	0x03A16D30 ADRP X20, 0x73E000
	0x03A16D34 LDRB W8, [X21 + 0xFC7]
	0x03A16D38 LDR X22, [X22 + 0x5F8]
	0x03A16D3C LDR X19, [X19 + 0x600]
	0x03A16D40 LDR X20, [X20 + 0x498]
	0x03A16D44 TBNZ X8, 0x0, 0x3A16D74
	0x03A16D48 ADRP X0, 0x73E000
	0x03A16D4C LDR X0, [X0 + 0x498]
	0x03A16D50 BL 0x1C16CF4
	0x03A16D54 ADRP X0, 0x73E000
	0x03A16D58 LDR X0, [X0 + 0x600]
	0x03A16D5C BL 0x1C16CF4
	0x03A16D60 ADRP X0, 0x73E000
	0x03A16D64 LDR X0, [X0 + 0x5F8]
	0x03A16D68 BL 0x1C16CF4
	0x03A16D6C MOVZ W8, 0x1
	0x03A16D70 STRB W8, [X21 + 0xFC7]
	0x03A16D74 LDR X0, [X22]
	0x03A16D78 BL 0x1C16F10
	0x03A16D7C LDR X1, [X19]
	0x03A16D80 MOV X19, X0
	0x03A16D84 BL 0x301B7C4
	0x03A16D88 LDR X8, [X20]
	0x03A16D8C LDP X22, X21, [X31 + 0x10]
	0x03A16D90 LDR X8, [X8 + 0xB8]
	0x03A16D94 STR X19, [X8 + 0x8]
	0x03A16D98 LDP X20, X19, [X31 + 0x20]
	0x03A16D9C LDR X30, [X31], #0x30
	0x03A16DA0 RET
	0x03A16DA4 LDRB W8, [X1]
	0x03A16DA8 AND W9, W0, 0x1
	0x03A16DAC STRB W9, [X1]
	0x03A16DB0 CMP W8, W9
	0x03A16DB4 CSET W0, NE
	0x03A16DB8 RET
	0x03A16DBC SUB X31, X31, 0x60
	0x03A16DC0 STP X30, X23, [X31 + 0x30]

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+32], X29
	003 Move [X31+40], X30
	004 Move [X31+48], X28
	005 Move [X31+56], X27
	006 Move [X31+64], X26
	007 Move [X31+72], X25
	008 Move [X31+80], X24
	009 Move [X31+88], X23
	010 Move [X31+96], X22
	011 Move [X31+104], X21
	012 Move [X31+112], X20
	013 Move [X31+120], X19
	014 Move X22, 0x9CC000
	015 Move W9, [X22+4028]
	016 Move W20, W1
	017 Move X21, X0
	018 Move X19, X8
	019 Move TEMP, X9
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {37}
	023 Move X0, 0x73F000
	024 Move X0, [X0+1360]
	025 Call 0x1C17CF4
	026 Move X0, 0x73F000
	027 Move X0, [X0+1368]
	028 Call 0x1C17CF4
	029 Move X0, 0x73F000
	030 Move X0, [X0+1376]
	031 Call 0x1C17CF4
	032 Move X0, 0x73F000
	033 Move X0, [X0+1384]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X22+4028], W8
	037 Move [X31+8], X31
	038 Move [X31+16], X31
	039 Move [X31+24], X31
	040 Move X0, [X21+16]
	041 Compare X0, 0
	042 JumpIfEqual {113}
	043 Move X8, 0x73F000
	044 Move X8, [X8+1384]
	045 Move X28, 0x73F000
	046 Move X22, 0x73F000
	047 Move X1, [X8]
	048 Move X28, [X28+1368]
	049 Move X22, [X22+1360]
	050 Add X8, X31, 8
	051 Call List`1<Object>.GetEnumerator, X0
	052 Move W25, W31
	053 Move W24, W31
	054 Move W23, W31
	055 Move W26, W31
	056 Move W27, W31
	057 Move W29, 1
	058 Move X1, [X28]
	059 Add X0, X31, 8
	060 Call Enumerator<Object>.MoveNext, X0
	061 Move TEMP, X0
	062 And TEMP, TEMP, 1
	063 Compare TEMP, 1
	064 JumpIfNotEqual {90}
	065 Move X21, [X31+24]
	066 Compare X21, 0
	067 JumpIfEqual {112}
	068 Move X0, X21
	069 Move W1, W20
	070 Call Light2D.IsLitLayer, X0, X1
	071 Move TEMP, X0
	072 And TEMP, TEMP, 1
	073 Compare TEMP, 1
	074 JumpIfNotEqual {58}
	075 Move W8, [X21+120]
	076 Move V0, [X21+68]
	077 Move W10, [X21+36]
	078 Move W9, [X21+40]
	079 Add W27, W27, 1
	080 NotImplemented "Instruction CMP not yet implemented."
	081 NotImplemented "Instruction CINC not yet implemented."
	082 NotImplemented "Instruction FCMP not yet implemented."
	083 NotImplemented "Instruction LSLV not yet implemented."
	084 NotImplemented "Instruction CSET not yet implemented."
	085 NotImplemented "Instruction CMP not yet implemented."
	086 Or W24, W8, W24
	087 NotImplemented "Instruction CSEL not yet implemented."
	088 Add W25, W25, W9
	089 Or W23, W8, W23
	090 Move X1, [X22]
	091 Add X0, X31, 8
	092 Call Enumerator<Object>.Dispose, X0
	093 Move [X19], W27
	094 Move [X19+4], W26
	095 Move [X19+8], W25
	096 Move [X19+12], W24
	097 Move [X19+16], W23
	098 Move X20, [X31+112]
	099 Move X19, [X31+120]
	100 Move X22, [X31+96]
	101 Move X21, [X31+104]
	102 Move X24, [X31+80]
	103 Move X23, [X31+88]
	104 Move X26, [X31+64]
	105 Move X25, [X31+72]
	106 Move X28, [X31+48]
	107 Move X27, [X31+56]
	108 Move X29, [X31+32]
	109 Move X30, [X31+40]
	110 Add X31, X31, 128
	111 Return X0
	112 Call 0x1C17F20
	113 Call 0x1C17F20
	114 Move X20, X0
	115 NotImplemented "Instruction CMP not yet implemented."
	116 Move X0, X20
	117 Call 0x3EB2AD0
	118 Move X21, [X0]
	119 Call 0x3EB2AE0
	120 Move X1, [X22]
	121 Add X0, X31, 8
	122 Call Enumerator<Object>.Dispose, X0
	123 Compare X21, 0
	124 JumpIfEqual {93}
	125 Move X0, X21
	126 Call 0x1C17F18
	127 Move X21, X31
	128 Move X20, X0
	129 Move X1, [X22]
	130 Add X0, X31, 8
	131 Call Enumerator<Object>.Dispose, X0
	132 Compare X21, 0
	133 JumpIfNotEqual {136}
	134 Move X0, X20
	135 Call 0x1D2D690
	136 Move X0, X21
	137 Call 0x1C17F18
	138 Call 0x1991590

Method: System.Void SetupCulling(ref UnityEngine.Rendering.ScriptableCullingParameters cullingParameters, UnityEngine.Camera camera)

Disassembly:
	0x03A16DC4 STP X22, X21, [X31 + 0x40]
	0x03A16DC8 STP X20, X19, [X31 + 0x50]
	0x03A16DCC ADRP X22, 0x9CB000
	0x03A16DD0 LDRB W8, [X22 + 0xFC8]
	0x03A16DD4 MOV X21, X2
	0x03A16DD8 MOV W19, W1
	0x03A16DDC MOV X20, X0
	0x03A16DE0 TBNZ X8, 0x0, 0x3A16E04
	0x03A16DE4 ADRP X0, 0x73E000
	0x03A16DE8 LDR X0, [X0 + 0x200]
	0x03A16DEC BL 0x1C16CF4
	0x03A16DF0 ADRP X0, 0x73E000
	0x03A16DF4 LDR X0, [X0 + 0x210]
	0x03A16DF8 BL 0x1C16CF4
	0x03A16DFC MOVZ W8, 0x1
	0x03A16E00 STRB W8, [X22 + 0xFC8]
	0x03A16E04 CBZ X20, 0x3A16E8C
	0x03A16E08 LDR W8, [X20 + 0x18]
	0x03A16E0C ADRP X23, 0x73E000
	0x03A16E10 LDR X23, [X23 + 0x210]
	0x03A16E14 CMP W8, W19
	0x03A16E18 B.LE 0x3A16E50
	0x03A16E1C MOV W22, W19
	0x03A16E20 LDR X2, [X23]
	0x03A16E24 ADD X8, X31, 0x0
	0x03A16E28 MOV X0, X20
	0x03A16E2C MOV W1, W22
	0x03A16E30 BL 0x2FE4360
	0x03A16E34 LDR X8, [X31]
	0x03A16E38 CMP X8, X21
	0x03A16E3C B.GT 0x3A16E74
	0x03A16E40 LDR W8, [X20 + 0x18]
	0x03A16E44 ADD W22, W22, 0x1
	0x03A16E48 CMP W22, W8
	0x03A16E4C B.LT 0x3A16E20
	0x03A16E50 LDR X2, [X23]
	0x03A16E54 ADD X8, X31, 0x0
	0x03A16E58 MOV X0, X20
	0x03A16E5C MOV W1, W19
	0x03A16E60 BL 0x2FE4360
	0x03A16E64 LDR X8, [X31]
	0x03A16E68 ADDS X31, X8, 0x1
	0x03A16E6C CSET W0, EQ
	0x03A16E70 B 0x3A16E78
	0x03A16E74 MOVZ W0, 0x1
	0x03A16E78 LDP X20, X19, [X31 + 0x50]
	0x03A16E7C LDP X22, X21, [X31 + 0x40]
	0x03A16E80 LDP X30, X23, [X31 + 0x30]
	0x03A16E84 ADD X31, X31, 0x60
	0x03A16E88 RET
	0x03A16E8C BL 0x1C16F20
	0x03A16E90 SUB X31, X31, 0x160
	0x03A16E94 STP X29, X30, [X31 + 0x100]
	0x03A16E98 STP X28, X27, [X31 + 0x110]
	0x03A16E9C STP X26, X25, [X31 + 0x120]
	0x03A16EA0 STP X24, X23, [X31 + 0x130]
	0x03A16EA4 STP X22, X21, [X31 + 0x140]
	0x03A16EA8 STP X20, X19, [X31 + 0x150]
	0x03A16EAC ADRP X23, 0x9CB000
	0x03A16EB0 ADRP X21, 0x73E000
	0x03A16EB4 ADRP X20, 0x73E000
	0x03A16EB8 LDRB W8, [X23 + 0xFC9]
	0x03A16EBC LDR X21, [X21 + 0x168]
	0x03A16EC0 LDR X20, [X20 + 0x170]
	0x03A16EC4 MOV X28, X2
	0x03A16EC8 MOV X19, X1
	0x03A16ECC MOV X22, X0
	0x03A16ED0 TBNZ X8, 0x0, 0x3A16F3C
	0x03A16ED4 ADRP X0, 0x73E000
	0x03A16ED8 LDR X0, [X0 + 0x618]
	0x03A16EDC BL 0x1C16CF4
	0x03A16EE0 ADRP X0, 0x73E000
	0x03A16EE4 LDR X0, [X0 + 0x310]
	0x03A16EE8 BL 0x1C16CF4
	0x03A16EEC ADRP X0, 0x73E000
	0x03A16EF0 LDR X0, [X0 + 0x620]
	0x03A16EF4 BL 0x1C16CF4
	0x03A16EF8 ADRP X0, 0x73E000
	0x03A16EFC LDR X0, [X0 + 0x170]
	0x03A16F00 BL 0x1C16CF4
	0x03A16F04 ADRP X0, 0x73E000
	0x03A16F08 LDR X0, [X0 + 0x200]
	0x03A16F0C BL 0x1C16CF4
	0x03A16F10 ADRP X0, 0x73E000
	0x03A16F14 LDR X0, [X0 + 0x210]
	0x03A16F18 BL 0x1C16CF4
	0x03A16F1C ADRP X0, 0x73E000
	0x03A16F20 LDR X0, [X0 + 0x168]
	0x03A16F24 BL 0x1C16CF4
	0x03A16F28 ADRP X0, 0x6DD000
	0x03A16F2C LDR X0, [X0 + 0x5A8]
	0x03A16F30 BL 0x1C16CF4
	0x03A16F34 MOVZ W8, 0x1
	0x03A16F38 STRB W8, [X23 + 0xFC9]
	0x03A16F3C LDR X0, [X21]
	0x03A16F40 MOVI V0.2D, 0x0
	0x03A16F44 STR X31, [X31 + 0x60]
	0x03A16F48 STP V0, V0, [X31 + 0x40]
	0x03A16F4C BL 0x1C16F10
	0x03A16F50 LDR X1, [X20]
	0x03A16F54 MOV X20, X0
	0x03A16F58 BL 0x2FE3E58
	0x03A16F5C CBZ X22, 0x3A17298
	0x03A16F60 ADRP X27, 0x73E000
	0x03A16F64 LDR X27, [X27 + 0x210]
	0x03A16F68 ADD X8, X31, 0xD0
	0x03A16F6C MOV X0, X22
	0x03A16F70 MOV W1, W31
	0x03A16F74 LDR X2, [X27]
	0x03A16F78 BL 0x2FE4360
	0x03A16F7C LDR X2, [X27]
	0x03A16F80 LDR X24, [X31 + 0xD0]
	0x03A16F84 ADD X8, X31, 0xD0
	0x03A16F88 MOV X0, X22
	0x03A16F8C MOV W1, W31
	0x03A16F90 BL 0x2FE4360
	0x03A16F94 LDR W2, [X22 + 0x18]
	0x03A16F98 LDR X23, [X31 + 0xD0]
	0x03A16F9C CMP W2, 0x2
	0x03A16FA0 B.LT 0x3A17044
	0x03A16FA4 ADRP X21, 0x6DD000
	0x03A16FA8 LDR X21, [X21 + 0x5A8]
	0x03A16FAC MOVZ W25, 0x1
	0x03A16FB0 LDR X2, [X27]
	0x03A16FB4 ADD X8, X31, 0xD0
	0x03A16FB8 MOV X0, X22
	0x03A16FBC MOV W1, W25
	0x03A16FC0 BL 0x2FE4360
	0x03A16FC4 LDR X8, [X31 + 0xD0]
	0x03A16FC8 ADDS X31, X8, 0x1
	0x03A16FCC B.EQ 0x3A17034
	0x03A16FD0 LDR X2, [X27]
	0x03A16FD4 ADD X8, X31, 0xD0
	0x03A16FD8 MOV X0, X22
	0x03A16FDC MOV W1, W25
	0x03A16FE0 BL 0x2FE4360
	0x03A16FE4 LDR X0, [X21]
	0x03A16FE8 LDR X26, [X31 + 0xD0]
	0x03A16FEC LDR W8, [X0 + 0xE0]
	0x03A16FF0 CBNZ W8, 0x3A16FF8
	0x03A16FF4 BL 0x1C16DFC
	0x03A16FF8 MOV X0, X24
	0x03A16FFC MOV X1, X26
	0x03A17000 MOV X2, X31
	0x03A17004 BL 0x337EEA0
	0x03A17008 LDR X2, [X27]
	0x03A1700C MOV X24, X0
	0x03A17010 ADD X8, X31, 0xD0
	0x03A17014 MOV X0, X22
	0x03A17018 MOV W1, W25
	0x03A1701C BL 0x2FE4360
	0x03A17020 LDR X1, [X31 + 0xD0]
	0x03A17024 MOV X0, X23
	0x03A17028 MOV X2, X31
	0x03A1702C BL 0x337EDFC
	0x03A17030 MOV X23, X0
	0x03A17034 LDR W2, [X22 + 0x18]
	0x03A17038 ADD W25, W25, 0x1
	0x03A1703C CMP W25, W2
	0x03A17040 B.LT 0x3A16FB0
	0x03A17044 ADRP X25, 0x73D000
	0x03A17048 ADRP X8, 0x73D000
	0x03A1704C LDR X25, [X25 + 0x310]
	0x03A17050 LDR X8, [X8 + 0x620]
	0x03A17054 CMP X24, 0x1
	0x03A17058 B.LT 0x3A17164
	0x03A1705C ADD X8, X31, 0xD0
	0x03A17060 MOV X26, X28
	0x03A17064 MOV X28, X31
	0x03A17068 ADD X29, X8, 0x8
	0x03A1706C MOVZ W21, 0x30
	0x03A17070 LDR X2, [X27]
	0x03A17074 ADD X8, X31, 0xD0
	0x03A17078 MOV X0, X22
	0x03A1707C MOV W1, W24
	0x03A17080 BL 0x2FE4360
	0x03A17084 LDP V1, V0, [X29]
	0x03A17088 LDR X8, [X29 + 0x20]
	0x03A1708C STP V1, V0, [X31 + 0x70]
	0x03A17090 LDP V0, V1, [X31 + 0x70]
	0x03A17094 STR X8, [X31 + 0x90]
	0x03A17098 STR X8, [X31 + 0x30]
	0x03A1709C STP V0, V1, [X31 + 0x10]
	0x03A170A0 CBZ X20, 0x3A17298
	0x03A170A4 LDP V0, V1, [X31 + 0x10]
	0x03A170A8 LDR X8, [X31 + 0x30]
	0x03A170AC LDR X9, [X25]
	0x03A170B0 STP V0, V1, [X31 + 0xA0]
	0x03A170B4 STR X8, [X31 + 0xC0]
	0x03A170B8 LDR W10, [X20 + 0x1C]
	0x03A170BC LDR X8, [X20 + 0x10]
	0x03A170C0 ADD W10, W10, 0x1
	0x03A170C4 STR W10, [X20 + 0x1C]
	0x03A170C8 CBZ X8, 0x3A17298
	0x03A170CC LDRSW X10, [X20 + 0x18]
	0x03A170D0 LDR W11, [X8 + 0x18]
	0x03A170D4 CMP W10, W11
	0x03A170D8 B.CS 0x3A17104
	0x03A170DC ADD W9, W10, 0x1
	0x03A170E0 MADD X8, X10, X21, X8
	0x03A170E4 STR W9, [X20 + 0x18]
	0x03A170E8 STR X28, [X8 + 0x20]
	0x03A170EC LDR X9, [X31 + 0xC0]
	0x03A170F0 LDP V1, V0, [X31 + 0xA0]
	0x03A170F4 STR X9, [X8 + 0x48]
	0x03A170F8 STUR V0, [X8 + 0x38]
	0x03A170FC STUR V1, [X8 + 0x28]
	0x03A17100 B 0x3A17130
	0x03A17104 LDR X8, [X9 + 0x20]
	0x03A17108 LDR X9, [X31 + 0xC0]
	0x03A1710C LDP V0, V1, [X31 + 0xA0]
	0x03A17110 ADD X1, X31, 0xD0
	0x03A17114 LDR X8, [X8 + 0xC0]
	0x03A17118 MOV X0, X20
	0x03A1711C LDR X2, [X8 + 0x70]
	0x03A17120 STR X28, [X31 + 0xD0]
	0x03A17124 STR X9, [X29 + 0x20]
	0x03A17128 STP V0, V1, [X29]
	0x03A1712C BL 0x2FE46FC
	0x03A17130 ADD X28, X28, 0x1
	0x03A17134 CMP X24, X28
	0x03A17138 B.NE 0x3A17070
	0x03A1713C ADRP X8, 0x73D000
	0x03A17140 LDR W2, [X22 + 0x18]
	0x03A17144 LDR X8, [X8 + 0x620]
	0x03A17148 MOV X0, X22
	0x03A1714C MOV W1, W31
	0x03A17150 LDR X3, [X8]
	0x03A17154 BL 0x2FE5670
	0x03A17158 MOV X1, X0
	0x03A1715C MOV X28, X26
	0x03A17160 B 0x3A1717C
	0x03A17164 LDR X3, [X8]
	0x03A17168 MOV X0, X22
	0x03A1716C MOV W1, W31
	0x03A17170 BL 0x2FE5670
	0x03A17174 CBZ X20, 0x3A17298
	0x03A17178 MOV X1, X0
	0x03A1717C ADRP X8, 0x73D000
	0x03A17180 LDR X8, [X8 + 0x618]
	0x03A17184 MOV X0, X20
	0x03A17188 LDR X2, [X8]
	0x03A1718C BL 0x2FE4980
	0x03A17190 LDR W8, [X20 + 0x18]
	0x03A17194 STR W8, [X28]
	0x03A17198 CBZ X19, 0x3A17298
	0x03A1719C LDRSW X8, [X19 + 0x18]
	0x03A171A0 ADD X21, X23, 0x1
	0x03A171A4 CMP X21, X8
	0x03A171A8 B.GE 0x3A17274
	0x03A171AC ADD X8, X31, 0xD0
	0x03A171B0 ADD X22, X8, 0x8
	0x03A171B4 MOVZ W23, 0x30
	0x03A171B8 LDR X2, [X27]
	0x03A171BC ADD X8, X31, 0xD0
	0x03A171C0 MOV X0, X19
	0x03A171C4 MOV W1, W21
	0x03A171C8 BL 0x2FE4360
	0x03A171CC LDP V1, V0, [X22]
	0x03A171D0 LDR X8, [X22 + 0x20]
	0x03A171D4 LDR X9, [X25]
	0x03A171D8 STP V1, V0, [X31 + 0x40]
	0x03A171DC LDP V0, V1, [X31 + 0x40]
	0x03A171E0 STR X8, [X31 + 0x60]
	0x03A171E4 STR X8, [X31 + 0xC0]
	0x03A171E8 STP V0, V1, [X31 + 0xA0]
	0x03A171EC LDR W10, [X20 + 0x1C]
	0x03A171F0 LDR X8, [X20 + 0x10]
	0x03A171F4 ADD W10, W10, 0x1
	0x03A171F8 STR W10, [X20 + 0x1C]
	0x03A171FC CBZ X8, 0x3A17298
	0x03A17200 LDRSW X10, [X20 + 0x18]
	0x03A17204 LDR W11, [X8 + 0x18]
	0x03A17208 CMP W10, W11
	0x03A1720C B.CS 0x3A17238
	0x03A17210 ADD W9, W10, 0x1
	0x03A17214 MADD X8, X10, X23, X8
	0x03A17218 STR W9, [X20 + 0x18]
	0x03A1721C STR X21, [X8 + 0x20]
	0x03A17220 LDR X9, [X31 + 0xC0]
	0x03A17224 LDP V1, V0, [X31 + 0xA0]
	0x03A17228 STR X9, [X8 + 0x48]
	0x03A1722C STUR V0, [X8 + 0x38]
	0x03A17230 STUR V1, [X8 + 0x28]
	0x03A17234 B 0x3A17264
	0x03A17238 LDR X8, [X9 + 0x20]
	0x03A1723C LDR X9, [X31 + 0xC0]
	0x03A17240 LDP V0, V1, [X31 + 0xA0]
	0x03A17244 ADD X1, X31, 0xD0
	0x03A17248 LDR X8, [X8 + 0xC0]
	0x03A1724C MOV X0, X20
	0x03A17250 LDR X2, [X8 + 0x70]
	0x03A17254 STR X21, [X31 + 0xD0]
	0x03A17258 STR X9, [X22 + 0x20]
	0x03A1725C STP V0, V1, [X22]
	0x03A17260 BL 0x2FE46FC
	0x03A17264 LDRSW X8, [X19 + 0x18]
	0x03A17268 ADD X21, X21, 0x1
	0x03A1726C CMP X21, X8
	0x03A17270 B.LT 0x3A171B8
	0x03A17274 MOV X0, X20
	0x03A17278 LDP X20, X19, [X31 + 0x150]
	0x03A1727C LDP X22, X21, [X31 + 0x140]
	0x03A17280 LDP X24, X23, [X31 + 0x130]
	0x03A17284 LDP X26, X25, [X31 + 0x120]
	0x03A17288 LDP X28, X27, [X31 + 0x110]
	0x03A1728C LDP X29, X30, [X31 + 0x100]
	0x03A17290 ADD X31, X31, 0x160
	0x03A17294 RET
	0x03A17298 BL 0x1C16F20
	0x03A1729C SUB X31, X31, 0x80
	0x03A172A0 STR X30, [X31 + 0x30]
	0x03A172A4 STP X26, X25, [X31 + 0x40]
	0x03A172A8 STP X24, X23, [X31 + 0x50]
	0x03A172AC STP X22, X21, [X31 + 0x60]
	0x03A172B0 STP X20, X19, [X31 + 0x70]
	0x03A172B4 ADRP X21, 0x9CA000
	0x03A172B8 ADRP X22, 0x73D000
	0x03A172BC ADRP X20, 0x73D000
	0x03A172C0 LDRB W8, [X21 + 0xFCA]
	0x03A172C4 LDR X22, [X22 + 0x168]
	0x03A172C8 LDR X20, [X20 + 0x170]
	0x03A172CC MOV X19, X0
	0x03A172D0 TBNZ X8, 0x0, 0x3A17324
	0x03A172D4 ADRP X0, 0x73D000
	0x03A172D8 LDR X0, [X0 + 0x618]
	0x03A172DC BL 0x1C16CF4
	0x03A172E0 ADRP X0, 0x73D000
	0x03A172E4 LDR X0, [X0 + 0x620]
	0x03A172E8 BL 0x1C16CF4
	0x03A172EC ADRP X0, 0x73D000
	0x03A172F0 LDR X0, [X0 + 0x170]
	0x03A172F4 BL 0x1C16CF4
	0x03A172F8 ADRP X0, 0x73D000
	0x03A172FC LDR X0, [X0 + 0x200]
	0x03A17300 BL 0x1C16CF4
	0x03A17304 ADRP X0, 0x73D000
	0x03A17308 LDR X0, [X0 + 0x210]
	0x03A1730C BL 0x1C16CF4
	0x03A17310 ADRP X0, 0x73D000
	0x03A17314 LDR X0, [X0 + 0x168]
	0x03A17318 BL 0x1C16CF4
	0x03A1731C MOVZ W8, 0x1
	0x03A17320 STRB W8, [X21 + 0xFCA]
	0x03A17324 LDR X0, [X22]
	0x03A17328 BL 0x1C16F10
	0x03A1732C LDR X1, [X20]
	0x03A17330 MOV X20, X0
	0x03A17334 BL 0x2FE3E58
	0x03A17338 CBZ X19, 0x3A174C0
	0x03A1733C ADRP X24, 0x73D000
	0x03A17340 LDR X24, [X24 + 0x210]
	0x03A17344 ADRP X23, 0x73D000
	0x03A17348 ADD X8, X31, 0x0
	0x03A1734C MOV X0, X19
	0x03A17350 LDR X2, [X24]
	0x03A17354 LDR X23, [X23 + 0x620]
	0x03A17358 MOV W1, W31
	0x03A1735C BL 0x2FE4360
	0x03A17360 LDR X2, [X24]
	0x03A17364 ADD X8, X31, 0x0
	0x03A17368 MOV X0, X19
	0x03A1736C MOV W1, W31
	0x03A17370 BL 0x2FE4360
	0x03A17374 LDR W8, [X19 + 0x18]
	0x03A17378 CMP W8, 0x2
	0x03A1737C B.LT 0x3A17448
	0x03A17380 LDR X25, [X31]
	0x03A17384 MOV W21, W31
	0x03A17388 MOVZ W26, 0x1
	0x03A1738C MOVZ W22, 0x1
	0x03A17390 LDR X2, [X24]
	0x03A17394 ADD X8, X31, 0x0
	0x03A17398 MOV X0, X19
	0x03A1739C MOV W1, W22
	0x03A173A0 BL 0x2FE4360
	0x03A173A4 TBZ X26, 0x0, 0x3A173F8
	0x03A173A8 LDR X8, [X31]
	0x03A173AC CMP X25, X8
	0x03A173B0 B.LE 0x3A173F8
	0x03A173B4 LDR X2, [X24]
	0x03A173B8 ADD X8, X31, 0x0
	0x03A173BC MOV X0, X19
	0x03A173C0 MOV W1, W22
	0x03A173C4 BL 0x2FE4360
	0x03A173C8 LDR X8, [X31]
	0x03A173CC ADDS X31, X8, 0x1
	0x03A173D0 B.EQ 0x3A173F8
	0x03A173D4 LDR X2, [X24]
	0x03A173D8 ADD X8, X31, 0x0
	0x03A173DC MOV X0, X19
	0x03A173E0 MOV W1, W22
	0x03A173E4 BL 0x2FE4360
	0x03A173E8 LDR X25, [X31]
	0x03A173EC MOV W26, W31
	0x03A173F0 MOV W21, W22
	0x03A173F4 B 0x3A17434
	0x03A173F8 LDR X2, [X24]
	0x03A173FC ADD X8, X31, 0x0
	0x03A17400 MOV X0, X19
	0x03A17404 MOV W1, W22
	0x03A17408 BL 0x2FE4360
	0x03A1740C LDR X8, [X31]
	0x03A17410 CMP X8, X25
	0x03A17414 B.LT 0x3A17434
	0x03A17418 LDR X2, [X24]
	0x03A1741C ADD X8, X31, 0x0
	0x03A17420 MOV X0, X19
	0x03A17424 MOV W1, W22
	0x03A17428 BL 0x2FE4360
	0x03A1742C LDR X25, [X31]
	0x03A17430 MOVZ W26, 0x1
	0x03A17434 LDR W8, [X19 + 0x18]
	0x03A17438 ADD W22, W22, 0x1
	0x03A1743C CMP W22, W8
	0x03A17440 B.LT 0x3A17390
	0x03A17444 B 0x3A1744C
	0x03A17448 MOV W21, W31
	0x03A1744C LDR X3, [X23]
	0x03A17450 SUB W2, W8, W21
	0x03A17454 MOV X0, X19
	0x03A17458 MOV W1, W21
	0x03A1745C BL 0x2FE5670
	0x03A17460 CBZ X20, 0x3A174C0
	0x03A17464 ADRP X22, 0x73D000
	0x03A17468 LDR X22, [X22 + 0x618]
	0x03A1746C MOV X1, X0
	0x03A17470 MOV X0, X20
	0x03A17474 LDR X2, [X22]
	0x03A17478 BL 0x2FE4980
	0x03A1747C LDR X3, [X23]
	0x03A17480 MOV X0, X19
	0x03A17484 MOV W1, W31
	0x03A17488 MOV W2, W21
	0x03A1748C BL 0x2FE5670
	0x03A17490 LDR X2, [X22]
	0x03A17494 MOV X1, X0
	0x03A17498 MOV X0, X20
	0x03A1749C BL 0x2FE4980
	0x03A174A0 MOV X0, X20
	0x03A174A4 LDP X20, X19, [X31 + 0x70]
	0x03A174A8 LDP X22, X21, [X31 + 0x60]
	0x03A174AC LDP X24, X23, [X31 + 0x50]
	0x03A174B0 LDP X26, X25, [X31 + 0x40]
	0x03A174B4 LDR X30, [X31 + 0x30]
	0x03A174B8 ADD X31, X31, 0x80
	0x03A174BC RET
	0x03A174C0 BL 0x1C16F20
	0x03A174C4 SUB X31, X31, 0x100
	0x03A174C8 STP X29, X30, [X31 + 0xA0]
	0x03A174CC STP X28, X27, [X31 + 0xB0]
	0x03A174D0 STP X26, X25, [X31 + 0xC0]
	0x03A174D4 STP X24, X23, [X31 + 0xD0]
	0x03A174D8 STP X22, X21, [X31 + 0xE0]
	0x03A174DC STP X20, X19, [X31 + 0xF0]
	0x03A174E0 ADRP X19, 0x9CA000
	0x03A174E4 LDRB W8, [X19 + 0xFCB]
	0x03A174E8 MOV X22, X2
	0x03A174EC MOV X20, X1
	0x03A174F0 MOV X21, X0
	0x03A174F4 TBNZ X8, 0x0, 0x3A17530
	0x03A174F8 ADRP X0, 0x73D000
	0x03A174FC LDR X0, [X0 + 0x628]
	0x03A17500 BL 0x1C16CF4
	0x03A17504 ADRP X0, 0x73D000
	0x03A17508 LDR X0, [X0 + 0x200]
	0x03A1750C BL 0x1C16CF4
	0x03A17510 ADRP X0, 0x73D000
	0x03A17514 LDR X0, [X0 + 0x210]
	0x03A17518 BL 0x1C16CF4
	0x03A1751C ADRP X0, 0x73D000
	0x03A17520 LDR X0, [X0 + 0x630]
	0x03A17524 BL 0x1C16CF4
	0x03A17528 MOVZ W8, 0x1
	0x03A1752C STRB W8, [X19 + 0xFCB]
	0x03A17530 MOV X0, X21
	0x03A17534 STR X31, [X31 + 0x68]
	0x03A17538 BL 0x3A1729C
	0x03A1753C CBZ X0, 0x3A177D0
	0x03A17540 ADRP X25, 0x73D000
	0x03A17544 LDR X25, [X25 + 0x210]
	0x03A17548 ADD X8, X31, 0x70
	0x03A1754C MOV W1, W31
	0x03A17550 MOV X21, X0
	0x03A17554 LDR X2, [X25]
	0x03A17558 ADD X19, X31, 0x70
	0x03A1755C BL 0x2FE4360
	0x03A17560 LDR W8, [X21 + 0x18]
	0x03A17564 STR X22, [X31 + 0x8]
	0x03A17568 CMP W8, 0x2
	0x03A1756C B.LT 0x3A17680
	0x03A17570 LDP X28, X23, [X31 + 0x68]
	0x03A17574 ADD X26, X19, 0x8
	0x03A17578 ADD X27, X19, 0x20
	0x03A1757C MOVZ W22, 0x1
	0x03A17580 LDR X2, [X25]
	0x03A17584 SUB W8, W8, 0x1
	0x03A17588 CMP W22, W8
	0x03A1758C SUB W1, W22, 0x1
	0x03A17590 ADD X8, X31, 0x70
	0x03A17594 MOV X0, X21
	0x03A17598 CSINC W24, W31, W22, EQ
	0x03A1759C BL 0x2FE4360
	0x03A175A0 LDR X2, [X25]
	0x03A175A4 LDR X19, [X31 + 0x70]
	0x03A175A8 ADD X8, X31, 0x70
	0x03A175AC MOV X0, X21
	0x03A175B0 MOV W1, W22
	0x03A175B4 BL 0x2FE4360
	0x03A175B8 LDR V0, [X26]
	0x03A175BC LDR V1, [X27]
	0x03A175C0 LDR X2, [X25]
	0x03A175C4 LDR X29, [X31 + 0x70]
	0x03A175C8 ADD X8, X31, 0x70
	0x03A175CC MOV X0, X21
	0x03A175D0 MOV W1, W24
	0x03A175D4 STP V1, V0, [X31 + 0x40]
	0x03A175D8 BL 0x2FE4360
	0x03A175DC CMP X19, X29
	0x03A175E0 B.LE 0x3A17650
	0x03A175E4 LDR X24, [X31 + 0x70]
	0x03A175E8 MOV X0, X21
	0x03A175EC MOV W1, W22
	0x03A175F0 MOV X2, X23
	0x03A175F4 BL 0x3A16DBC
	0x03A175F8 TBZ X0, 0x0, 0x3A17650
	0x03A175FC CMP X19, X24
	0x03A17600 B.EQ 0x3A17618
	0x03A17604 CBZ X20, 0x3A177CC
	0x03A17608 LDRSW X8, [X20 + 0x18]
	0x03A1760C ADD X9, X23, 0x1
	0x03A17610 CMP X9, X8
	0x03A17614 CSINC X19, X31, X23, GE
	0x03A17618 ADRP X8, 0x73D000
	0x03A1761C LDP V1, V0, [X31 + 0x40]
	0x03A17620 LDR X8, [X8 + 0x630]
	0x03A17624 ADD X2, X31, 0x70
	0x03A17628 MOV X0, X21
	0x03A1762C MOV W1, W22
	0x03A17630 LDR X3, [X8]
	0x03A17634 MOVZ W8, 0x3
	0x03A17638 STR X19, [X31 + 0x70]
	0x03A1763C STR V0, [X26]
	0x03A17640 STR X8, [X31 + 0x88]
	0x03A17644 STR V1, [X27]
	0x03A17648 BL 0x2FE43C8
	0x03A1764C MOV X28, X19
	0x03A17650 LDR X2, [X25]
	0x03A17654 ADD X8, X31, 0x70
	0x03A17658 MOV X0, X21
	0x03A1765C MOV W1, W22
	0x03A17660 ADD W19, W22, 0x1
	0x03A17664 BL 0x2FE4360
	0x03A17668 LDR W8, [X21 + 0x18]
	0x03A1766C LDR X23, [X31 + 0x70]
	0x03A17670 MOV W22, W19
	0x03A17674 CMP W19, W8
	0x03A17678 B.LT 0x3A17580
	0x03A1767C STR X28, [X31 + 0x68]
	0x03A17680 SUB W8, W8, 0x1
	0x03A17684 CMP W8, 0x2
	0x03A17688 B.LT 0x3A1779C
	0x03A1768C ADRP X19, 0x73D000
	0x03A17690 ADRP X27, 0x73D000
	0x03A17694 LDR X19, [X19 + 0x630]
	0x03A17698 LDR X27, [X27 + 0x628]
	0x03A1769C ADD X8, X31, 0x70
	0x03A176A0 MOVZ W22, 0x1
	0x03A176A4 ADD X26, X8, 0x8
	0x03A176A8 MOV W23, W22
	0x03A176AC SUB W24, W22, 0x1
	0x03A176B0 ADD W22, W22, 0x1
	0x03A176B4 LDR X2, [X25]
	0x03A176B8 ADD X8, X31, 0x70
	0x03A176BC MOV X0, X21
	0x03A176C0 MOV W1, W24
	0x03A176C4 BL 0x2FE4360
	0x03A176C8 LDR X2, [X25]
	0x03A176CC LDR X29, [X31 + 0x70]
	0x03A176D0 ADD X8, X31, 0x70
	0x03A176D4 MOV X0, X21
	0x03A176D8 MOV W1, W23
	0x03A176DC BL 0x2FE4360
	0x03A176E0 LDR X8, [X26 + 0x20]
	0x03A176E4 LDP V1, V0, [X26]
	0x03A176E8 LDR X2, [X25]
	0x03A176EC LDR X28, [X31 + 0x70]
	0x03A176F0 STR X8, [X31 + 0x30]
	0x03A176F4 ADD X8, X31, 0x70
	0x03A176F8 MOV X0, X21
	0x03A176FC MOV W1, W22
	0x03A17700 STP V1, V0, [X31 + 0x10]
	0x03A17704 BL 0x2FE4360
	0x03A17708 SUB X8, X28, X29
	0x03A1770C CMP X8, 0x1
	0x03A17710 B.LE 0x3A1778C
	0x03A17714 LDR X8, [X31 + 0x70]
	0x03A17718 CMP X28, X8
	0x03A1771C SUB X8, X28, 0x1
	0x03A17720 B.NE 0x3A17750
	0x03A17724 LDR X9, [X31 + 0x30]
	0x03A17728 LDP V0, V1, [X31 + 0x10]
	0x03A1772C LDR X3, [X19]
	0x03A17730 ADD X2, X31, 0x70
	0x03A17734 MOV X0, X21
	0x03A17738 MOV W1, W23
	0x03A1773C STR X8, [X31 + 0x70]
	0x03A17740 STR X9, [X26 + 0x20]
	0x03A17744 STP V0, V1, [X26]
	0x03A17748 BL 0x2FE43C8
	0x03A1774C B 0x3A17778
	0x03A17750 LDR X9, [X31 + 0x30]
	0x03A17754 LDP V0, V1, [X31 + 0x10]
	0x03A17758 LDR X3, [X27]
	0x03A1775C ADD X2, X31, 0x70
	0x03A17760 MOV X0, X21

ISIL:
	001 Subtract X31, X31, 304
	002 Move [X31+144], D15
	003 Move [X31+152], D14
	004 Move [X31+160], D13
	005 Move [X31+168], D12
	006 Move [X31+176], D11
	007 Move [X31+184], D10
	008 Move [X31+192], D9
	009 Move [X31+200], D8
	010 Move [X31+208], X29
	011 Move [X31+216], X30
	012 Move [X31+224], X28
	013 Move [X31+232], X27
	014 Move [X31+240], X26
	015 Move [X31+248], X25
	016 Move [X31+256], X24
	017 Move [X31+264], X23
	018 Move [X31+272], X22
	019 Move [X31+280], X21
	020 Move [X31+288], X20
	021 Move [X31+296], X19
	022 Move X22, 0x9CC000
	023 Move W8, [X22+4029]
	024 Move X20, X2
	025 Move X21, X1
	026 Move X19, X0
	027 Move TEMP, X8
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfEqual {102}
	031 Move X0, 0x73F000
	032 Move X0, [X0+1392]
	033 Call 0x1C17CF4
	034 Move X0, 0x73F000
	035 Move X0, [X0+1400]
	036 Call 0x1C17CF4
	037 Move X0, 0x73F000
	038 Move X0, [X0+1360]
	039 Call 0x1C17CF4
	040 Move X0, 0x73F000
	041 Move X0, [X0+1408]
	042 Call 0x1C17CF4
	043 Move X0, 0x73F000
	044 Move X0, [X0+1416]
	045 Call 0x1C17CF4
	046 Move X0, 0x73F000
	047 Move X0, [X0+1368]
	048 Call 0x1C17CF4
	049 Move X0, 0x73F000
	050 Move X0, [X0+1424]
	051 Call 0x1C17CF4
	052 Move X0, 0x73F000
	053 Move X0, [X0+1432]
	054 Call 0x1C17CF4
	055 Move X0, 0x73F000
	056 Move X0, [X0+1376]
	057 Call 0x1C17CF4
	058 Move X0, 0x73F000
	059 Move X0, [X0+1440]
	060 Call 0x1C17CF4
	061 Move X0, 0x73F000
	062 Move X0, [X0+1176]
	063 Call 0x1C17CF4
	064 Move X0, 0x73F000
	065 Move X0, [X0+1448]
	066 Call 0x1C17CF4
	067 Move X0, 0x73F000
	068 Move X0, [X0+1336]
	069 Call 0x1C17CF4
	070 Move X0, 0x73F000
	071 Move X0, [X0+1456]
	072 Call 0x1C17CF4
	073 Move X0, 0x73F000
	074 Move X0, [X0+1464]
	075 Call 0x1C17CF4
	076 Move X0, 0x73F000
	077 Move X0, [X0+1472]
	078 Call 0x1C17CF4
	079 Move X0, 0x73F000
	080 Move X0, [X0+1480]
	081 Call 0x1C17CF4
	082 Move X0, 0x73F000
	083 Move X0, [X0+1488]
	084 Call 0x1C17CF4
	085 Move X0, 0x73F000
	086 Move X0, [X0+1384]
	087 Call 0x1C17CF4
	088 Move X0, 0x73F000
	089 Move X0, [X0+1496]
	090 Call 0x1C17CF4
	091 Move X0, 0x73B000
	092 Move X0, [X0+1664]
	093 Call 0x1C17CF4
	094 Move X0, 0x73F000
	095 Move X0, [X0+1504]
	096 Call 0x1C17CF4
	097 Move X0, 0x73F000
	098 Move X0, [X0+1512]
	099 Call 0x1C17CF4
	100 Move W8, 1
	101 Move [X22+4029], W8
	102 Move [X31+112], X31
	103 Move [X31+120], X31
	104 Move [X31+128], X31
	105 Move [X31+80], X31
	106 Move [X31+88], X31
	107 Move [X31+96], X31
	108 Move [X31+48], X31
	109 Move [X31+56], X31
	110 Move [X31+64], X31
	111 Move X8, [X19+16]
	112 Compare X8, 0
	113 JumpIfEqual {587}
	114 Move W2, [X8+24]
	115 Move W9, [X8+28]
	116 Move X22, 0x73F000
	117 Move X22, [X22+1176]
	118 Add W9, W9, 1
	119 NotImplemented "Instruction CMP not yet implemented."
	120 Move [X8+24], W31
	121 Move [X8+28], W9
	122 Move X0, [X8+16]
	123 Move W1, W31
	124 Move X3, X31
	125 Call Array.Clear, X0, X1, X2
	126 Move X0, [X22]
	127 Move W8, [X0+224]
	128 Compare W8, 0
	129 JumpIfNotEqual {131}
	130 Call 0x1C17DFC
	131 Move X23, 0x9CD000
	132 Move W8, [X23+13]
	133 Compare W8, 0
	134 JumpIfNotEqual {140}
	135 Move X0, 0x73F000
	136 Move X0, [X0+1176]
	137 Call 0x1C17CF4
	138 Move W8, 1
	139 Move [X23+13], W8
	140 Move X0, [X22]
	141 Move W8, [X0+224]
	142 Compare W8, 0
	143 JumpIfNotEqual {146}
	144 Call 0x1C17DFC
	145 Move X0, [X22]
	146 Move X8, [X0+184]
	147 Move X0, [X8+8]
	148 Compare X0, 0
	149 JumpIfEqual {587}
	150 Move X26, 0x73F000
	151 Move X26, [X26+1384]
	152 Move X27, 0x73F000
	153 Move X29, 0x73B000
	154 Move X25, 0x73F000
	155 Move X24, 0x73F000
	156 Move X27, [X27+1368]
	157 Move X29, [X29+1664]
	158 Move X25, [X25+1424]
	159 Move X24, [X24+1472]
	160 Move X1, [X26]
	161 Move X28, 0x73F000
	162 Move X28, [X28+1360]
	163 Add X8, X31, 24
	164 Call List`1<Object>.GetEnumerator, X0
	165 NotImplemented "Instruction LDUR not yet implemented."
	166 Move X8, [X31+40]
	167 Move [X31+7], V0
	168 Move [X31+128], X8
	169 Move X1, [X27]
	170 Add X0, X31, 112
	171 Call Enumerator<Object>.MoveNext, X0
	172 Move TEMP, X0
	173 And TEMP, TEMP, 1
	174 Compare TEMP, 1
	175 JumpIfNotEqual {294}
	176 Compare X20, 0
	177 JumpIfEqual {578}
	178 Move X22, [X31+128]
	179 Move X0, X20
	180 Move X1, X31
	181 Call Camera.get_cullingMask, X0
	182 Compare X22, 0
	183 JumpIfEqual {579}
	184 Move W23, W0
	185 Move X0, X22
	186 Move X1, X31
	187 Call Component.get_gameObject, X0
	188 Compare X0, 0
	189 JumpIfEqual {577}
	190 Move X1, X31
	191 Call GameObject.get_layer, X0
	192 NotImplemented "Instruction LSRV not yet implemented."
	193 Move TEMP, X8
	194 And TEMP, TEMP, 1
	195 Compare TEMP, 1
	196 JumpIfNotEqual {169}
	197 Move W8, [X22+36]
	198 NotImplemented "Instruction CMP not yet implemented."
	199 Move X0, [X19+16]
	200 Compare X0, 0
	201 JumpIfEqual {582}
	202 Move X9, 0x73E000
	203 Move W10, [X0+28]
	204 Move X8, [X0+16]
	205 Move X9, [X9+1336]
	206 Add W10, W10, 1
	207 Move X9, [X9]
	208 Move [X0+28], W10
	209 Compare X8, 0
	210 JumpIfEqual {581}
	211 NotImplemented "Instruction LDRSW not yet implemented."
	212 Move W11, [X8+24]
	213 NotImplemented "Instruction CMP not yet implemented."
	214 Move X8, [X9+32]
	215 Move X8, [X8+192]
	216 Move X2, [X8+112]
	217 Move X1, X22
	218 Call List`1<Object>.AddWithResize, X0, X1
	219 Move V1, [X22+208]
	220 Move S0, [X22+212]
	221 Move S10, [X22+216]
	222 Move W23, W31
	223 Move [X31+16], S0
	224 Move [X31+24], S1
	225 Move X0, [X29]
	226 Move W8, [X0+224]
	227 Compare W8, 0
	228 JumpIfNotEqual {230}
	229 Call 0x1C17DFC
	230 Move X0, X21
	231 Move X1, X31
	232 Call ScriptableCullingParameters.get_cullingPlaneCount, X0
	233 NotImplemented "Instruction CMP not yet implemented."
	234 Move X0, [X29]
	235 Move W8, [X0+224]
	236 Compare W8, 0
	237 JumpIfNotEqual {239}
	238 Call 0x1C17DFC
	239 Move X0, X21
	240 Move W1, W23
	241 Move X2, X31
	242 Call ScriptableCullingParameters.GetCullingPlane, X0, X1
	243 Move V13, V0
	244 Move V14, V1
	245 Move V15, V2
	246 Move V11, V3
	247 Move S1, [X31+16]
	248 Move S0, [X31+20]
	249 Move V2, V10
	250 Move X0, X31
	251 Call float3.op_Implicit, X0
	252 Move V8, V0
	253 Move V9, V1
	254 Move V12, V2
	255 Move V0, V13
	256 Move V1, V14
	257 Move V2, V15
	258 Move X0, X31
	259 Call float3.op_Implicit, X0
	260 Move V3, [X22+220]
	261 Multiply S0, S8, S0
	262 Multiply S1, S9, S1
	263 Add S0, S0, S1
	264 Multiply S1, S12, S2
	265 Add S0, S1, S0
	266 Add S0, S11, S0
	267 NotImplemented "Instruction FNEG not yet implemented."
	268 NotImplemented "Instruction FCMP not yet implemented."
	269 Add W23, W23, 1
	270 Move X0, [X19+16]
	271 Compare X0, 0
	272 JumpIfEqual {585}
	273 Move X9, 0x73E000
	274 Move W10, [X0+28]
	275 Move X8, [X0+16]
	276 Move X9, [X9+1336]
	277 Add W10, W10, 1
	278 Move X9, [X9]
	279 Move [X0+28], W10
	280 Compare X8, 0
	281 JumpIfEqual {586}
	282 NotImplemented "Instruction LDRSW not yet implemented."
	283 Move W11, [X8+24]
	284 NotImplemented "Instruction CMP not yet implemented."
	285 Add W9, W10, 1
	286 Add X8, X8, X10
	287 Move [X0+24], W9
	288 Move [X8+32], X22
	289 Move X8, [X9+32]
	290 Move X8, [X8+192]
	291 Move X2, [X8+112]
	292 Move X1, X22
	293 Call List`1<Object>.AddWithResize, X0, X1
	294 Move X1, [X28]
	295 Add X0, X31, 112
	296 Call Enumerator<Object>.Dispose, X0
	297 Move X21, 0x73E000
	298 Move X21, [X21+1512]
	299 Move X20, [X19+16]
	300 Move X0, [X21]
	301 Move W8, [X0+224]
	302 Compare W8, 0
	303 JumpIfNotEqual {306}
	304 Call 0x1C17DFC
	305 Move X0, [X21]
	306 Move X8, [X0+184]
	307 Move X21, [X8+8]
	308 Compare X21, 0
	309 JumpIfNotEqual {335}
	310 Move W8, [X0+224]
	311 Compare W8, 0
	312 JumpIfEqual {315}
	313 Move X23, 0x73E000
	314 Move X23, [X23+1512]
	315 Call 0x1C17DFC
	316 Move X23, 0x73E000
	317 Move X23, [X23+1512]
	318 Move X0, [X23]
	319 Move X9, 0x73E000
	320 Move X8, [X0+184]
	321 Move X9, [X9+1392]
	322 Move X22, [X8]
	323 Move X0, [X9]
	324 Call 0x1C17F10
	325 Move X8, 0x73E000
	326 Move X8, [X8+1504]
	327 Move X1, X22
	328 Move X3, X31
	329 Move X21, X0
	330 Move X2, [X8]
	331 Call Comparison`1<Object>..ctor, X0, X1, X2
	332 Move X8, [X23]
	333 Move X8, [X8+184]
	334 Move [X8+8], X21
	335 Compare X20, 0
	336 JumpIfEqual {587}
	337 Move X8, 0x73E000
	338 Move X8, [X8+1496]
	339 Move X0, X20
	340 Move X1, X21
	341 Move X2, [X8]
	342 Call List`1<Object>.Sort, X0, X1
	343 Move X8, [X19+24]
	344 Compare X8, 0
	345 JumpIfEqual {587}
	346 Move W2, [X8+24]
	347 Move W9, [X8+28]
	348 Add W9, W9, 1
	349 NotImplemented "Instruction CMP not yet implemented."
	350 Move [X8+24], W31
	351 Move [X8+28], W9
	352 Move X0, [X8+16]
	353 Move W1, W31
	354 Move X3, X31
	355 Call Array.Clear, X0, X1, X2
	356 Move X20, 0x9CC000
	357 Move W8, [X20+14]
	358 Compare W8, 0
	359 JumpIfNotEqual {365}
	360 Move X0, 0x73E000
	361 Move X0, [X0+1520]
	362 Call 0x1C17CF4
	363 Move W8, 1
	364 Move [X20+14], W8
	365 Move X8, 0x73E000
	366 Move X8, [X8+1520]
	367 Move X8, [X8]
	368 Move X8, [X8+184]
	369 Move X0, [X8]
	370 Compare X0, 0
	371 JumpIfEqual {545}
	372 Move X8, 0x73E000
	373 Move X8, [X8+1480]
	374 Move X1, [X8]
	375 Add X8, X31, 24
	376 Call List`1<Object>.GetEnumerator, X0
	377 NotImplemented "Instruction LDUR not yet implemented."
	378 Move X8, [X31+40]
	379 Move [X31+5], V0
	380 Move [X31+96], X8
	381 Move X8, 0x73E000
	382 Move X8, [X8+1416]
	383 Move X1, [X8]
	384 Add X0, X31, 80
	385 Call Enumerator<Object>.MoveNext, X0
	386 Move TEMP, X0
	387 And TEMP, TEMP, 1
	388 Compare TEMP, 1
	389 JumpIfNotEqual {540}
	390 Move X21, [X31+96]
	391 Compare X21, 0
	392 JumpIfEqual {580}
	393 Move X0, [X21+40]
	394 Compare X0, 0
	395 JumpIfEqual {381}
	396 Move X8, 0x73E000
	397 Move X8, [X8+1488]
	398 Move X1, [X8]
	399 Add X8, X31, 24
	400 Call List`1<Object>.GetEnumerator, X0
	401 NotImplemented "Instruction LDUR not yet implemented."
	402 Move X8, [X31+40]
	403 Move [X31+3], V0
	404 Move [X31+64], X8
	405 Move X1, [X25]
	406 Add X0, X31, 48
	407 Call Enumerator<Object>.MoveNext, X0
	408 Move TEMP, X0
	409 And TEMP, TEMP, 1
	410 Compare TEMP, 1
	411 JumpIfNotEqual {507}
	412 Move X0, [X19+16]
	413 Compare X0, 0
	414 JumpIfEqual {528}
	415 Move X20, [X31+64]
	416 Move X1, [X26]
	417 Add X8, X31, 24
	418 Call List`1<Object>.GetEnumerator, X0
	419 NotImplemented "Instruction LDUR not yet implemented."
	420 Move X8, [X31+40]
	421 Move [X31+7], V0
	422 Move [X31+128], X8
	423 Move X1, [X27]
	424 Add X0, X31, 112
	425 Call Enumerator<Object>.MoveNext, X0
	426 Move TEMP, X0
	427 And TEMP, TEMP, 1
	428 Compare TEMP, 1
	429 JumpIfNotEqual {475}
	430 Compare X20, 0
	431 JumpIfEqual {495}
	432 Move X1, [X31+128]
	433 Move X0, X20
	434 Move X2, X31
	435 Call ShadowCaster2D.IsLit, X0, X1
	436 Move TEMP, X0
	437 And TEMP, TEMP, 1
	438 Compare TEMP, 1
	439 JumpIfNotEqual {423}
	440 Move X0, [X19+24]
	441 Compare X0, 0
	442 JumpIfEqual {496}
	443 Move X2, [X24]
	444 Move X1, X21
	445 Call List`1<Object>.Contains, X0, X1
	446 Move TEMP, X0
	447 And TEMP, TEMP, 1
	448 Compare TEMP, 1
	449 JumpIfEqual {423}
	450 Move X0, [X19+24]
	451 Compare X0, 0
	452 JumpIfEqual {497}
	453 Move X9, 0x73E000
	454 Move W10, [X0+28]
	455 Move X8, [X0+16]
	456 Move X9, [X9+1448]
	457 Add W10, W10, 1
	458 Move X9, [X9]
	459 Move [X0+28], W10
	460 Compare X8, 0
	461 JumpIfEqual {498}
	462 NotImplemented "Instruction LDRSW not yet implemented."
	463 Move W11, [X8+24]
	464 NotImplemented "Instruction CMP not yet implemented."
	465 Add W9, W10, 1
	466 Add X8, X8, X10
	467 Move X23, X31
	468 Move [X0+24], W9
	469 Move [X8+32], X21
	470 Move X8, [X9+32]
	471 Move X8, [X8+192]
	472 Move X2, [X8+112]
	473 Move X1, X21
	474 Call List`1<Object>.AddWithResize, X0, X1
	475 Move X23, X31
	476 Move W20, 18
	477 Move X1, [X28]
	478 Add X0, X31, 112
	479 Call Enumerator<Object>.Dispose, X0
	480 Compare X23, 0
	481 JumpIfNotEqual {526}
	482 NotImplemented "Instruction CMP not yet implemented."
	483 Compare W20, 0
	484 JumpIfNotEqual {509}
	485 Move X0, [X19+24]
	486 Compare X0, 0
	487 JumpIfEqual {529}
	488 Move X2, [X24]
	489 Move X1, X21
	490 Call List`1<Object>.Contains, X0, X1
	491 Move TEMP, X0
	492 And TEMP, TEMP, 1
	493 Compare TEMP, 1
	494 JumpIfNotEqual {405}
	495 Call 0x1C17F20
	496 Call 0x1C17F20
	497 Call 0x1C17F20
	498 Call 0x1C17F20
	499 Move X22, X1
	500 Move X20, X0
	501 NotImplemented "Instruction CMP not yet implemented."
	502 Move X0, X20
	503 Call 0x3EB2AD0
	504 Move X23, [X0]
	505 Call 0x3EB2AE0
	506 Move W20, W31
	507 Move X21, X31
	508 Move W20, 12
	509 Move X21, X31
	510 Move X8, 0x73E000
	511 Move X8, [X8+1400]
	512 Move X1, [X8]
	513 Add X0, X31, 48
	514 Call Enumerator<Object>.Dispose, X0
	515 Compare X21, 0
	516 JumpIfNotEqual {583}
	517 NotImplemented "Instruction CMP not yet implemented."
	518 Compare W20, 0
	519 JumpIfEqual {381}
	520 Move X23, X31
	521 Move X1, [X28]
	522 Add X0, X31, 112
	523 Call Enumerator<Object>.Dispose, X0
	524 Compare X23, 0
	525 JumpIfEqual {534}
	526 Move X0, X23
	527 Call 0x1C17F18
	528 Call 0x1C17F20
	529 Call 0x1C17F20
	530 Move X22, X1
	531 Move X20, X0
	532 Move X22, X1
	533 Move X20, X0
	534 NotImplemented "Instruction CMP not yet implemented."
	535 Move X0, X20
	536 Call 0x3EB2AD0
	537 Move X21, [X0]
	538 Call 0x3EB2AE0
	539 Move W20, W31
	540 Move X8, 0x73E000
	541 Move X8, [X8+1408]
	542 Add X0, X31, 80
	543 Move X1, [X8]
	544 Call Enumerator<Object>.Dispose, X0
	545 Move X20, [X31+288]
	546 Move X19, [X31+296]
	547 Move X22, [X31+272]
	548 Move X21, [X31+280]
	549 Move X24, [X31+256]
	550 Move X23, [X31+264]
	551 Move X26, [X31+240]
	552 Move X25, [X31+248]
	553 Move X28, [X31+224]
	554 Move X27, [X31+232]
	555 Move X29, [X31+208]
	556 Move X30, [X31+216]
	557 Move D9, [X31+192]
	558 Move D8, [X31+200]
	559 Move D11, [X31+176]
	560 Move D10, [X31+184]
	561 Move D13, [X31+160]
	562 Move D12, [X31+168]
	563 Move D15, [X31+144]
	564 Move D14, [X31+152]
	565 Add X31, X31, 304
	566 Return 
	567 Move X21, X31
	568 Move X8, 0x73E000
	569 Move X8, [X8+1400]
	570 Move X1, [X8]
	571 Add X0, X31, 48
	572 Call Enumerator<Object>.Dispose, X0
	573 Compare X21, 0
	574 JumpIfEqual {595}
	575 Move X0, X21
	576 Call 0x1C17F18
	577 Call 0x1C17F20
	578 Call 0x1C17F20
	579 Call 0x1C17F20
	580 Call 0x1C17F20
	581 Call 0x1C17F20
	582 Call 0x1C17F20
	583 Move X0, X21
	584 Call 0x1C17F18
	585 Call 0x1C17F20
	586 Call 0x1C17F20
	587 Call 0x1C17F20
	588 Move X0, X23
	589 Call 0x1C17F18
	590 Call 0x1991590
	591 Move X22, X1
	592 Move X20, X0
	593 Move X22, X1
	594 Move X20, X0
	595 NotImplemented "Instruction CMP not yet implemented."
	596 Move X0, X20
	597 Call 0x3EB2AD0
	598 Move X19, [X0]
	599 Call 0x3EB2AE0
	600 Move X8, 0x73E000
	601 Move X8, [X8+1408]
	602 Add X0, X31, 80
	603 Move X1, [X8]
	604 Call Enumerator<Object>.Dispose, X0
	605 Compare X19, 0
	606 JumpIfEqual {545}
	607 Move X0, X19
	608 Call 0x1C17F18
	609 Move X19, X31
	610 Move X20, X0
	611 Move X8, 0x73E000
	612 Move X8, [X8+1408]
	613 Move X1, [X8]
	614 Add X0, X31, 80
	615 Call Enumerator<Object>.Dispose, X0
	616 Compare X19, 0
	617 JumpIfEqual {640}
	618 Move X0, X19
	619 Call 0x1C17F18
	620 Move X20, X0
	621 NotImplemented "Instruction CMP not yet implemented."
	622 Move X0, X20
	623 Call 0x3EB2AD0
	624 Move X21, [X0]
	625 Call 0x3EB2AE0
	626 Move X1, [X28]
	627 Add X0, X31, 112
	628 Call Enumerator<Object>.Dispose, X0
	629 Compare X21, 0
	630 JumpIfEqual {297}
	631 Move X0, X21
	632 Call 0x1C17F18
	633 Move X21, X31
	634 Move X20, X0
	635 Move X1, [X28]
	636 Add X0, X31, 112
	637 Call Enumerator<Object>.Dispose, X0
	638 Compare X21, 0
	639 JumpIfNotEqual {642}
	640 Move X0, X20
	641 Call 0x1D2D690
	642 Move X0, X21
	643 Call 0x1C17F18
	644 Call 0x1991590

Method: System.Void .ctor()

Disassembly:
	0x03A17764 MOV W1, W23
	0x03A17768 STR X8, [X31 + 0x70]
	0x03A1776C STR X9, [X26 + 0x20]
	0x03A17770 STP V0, V1, [X26]
	0x03A17774 BL 0x2FE59C0
	0x03A17778 LDR W8, [X21 + 0x18]
	0x03A1777C SUB W8, W8, 0x1
	0x03A17780 CMP W23, W8
	0x03A17784 B.LT 0x3A176B4
	0x03A17788 B 0x3A1779C
	0x03A1778C LDR W8, [X21 + 0x18]
	0x03A17790 SUB W8, W8, 0x1
	0x03A17794 CMP W22, W8
	0x03A17798 B.LT 0x3A176A8
	0x03A1779C LDR X2, [X31 + 0x8]
	0x03A177A0 MOV X0, X21
	0x03A177A4 MOV X1, X20
	0x03A177A8 BL 0x3A16E90
	0x03A177AC LDP X20, X19, [X31 + 0xF0]
	0x03A177B0 LDP X22, X21, [X31 + 0xE0]
	0x03A177B4 LDP X24, X23, [X31 + 0xD0]
	0x03A177B8 LDP X26, X25, [X31 + 0xC0]
	0x03A177BC LDP X28, X27, [X31 + 0xB0]
	0x03A177C0 LDP X29, X30, [X31 + 0xA0]
	0x03A177C4 ADD X31, X31, 0x100
	0x03A177C8 RET
	0x03A177CC STR X28, [X31 + 0x68]
	0x03A177D0 BL 0x1C16F20
	0x03A177D4 SUB X31, X31, 0x100
	0x03A177D8 STP D9, D8, [X31 + 0x90]
	0x03A177DC STR X30, [X31 + 0xA0]
	0x03A177E0 STP X28, X27, [X31 + 0xB0]
	0x03A177E4 STP X26, X25, [X31 + 0xC0]
	0x03A177E8 STP X24, X23, [X31 + 0xD0]
	0x03A177EC STP X22, X21, [X31 + 0xE0]
	0x03A177F0 STP X20, X19, [X31 + 0xF0]
	0x03A177F4 ADRP X23, 0x9CA000
	0x03A177F8 ADRP X24, 0x73D000
	0x03A177FC ADRP X21, 0x73D000
	0x03A17800 ADRP X22, 0x737000
	0x03A17804 ADRP X19, 0x738000
	0x03A17808 LDRB W8, [X23 + 0xFCC]
	0x03A1780C LDR X24, [X24 + 0x168]
	0x03A17810 LDR X21, [X21 + 0x170]
	0x03A17814 LDR X22, [X22 + 0x718]
	0x03A17818 LDR X19, [X19 + 0xF08]
	0x03A1781C MOV V8.16B, V0.16B
	0x03A17820 MOV X20, X0
	0x03A17824 TBNZ X8, 0x0, 0x3A178CC

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0x9CB000
	009 Move X24, 0x73E000
	010 Move X20, 0x73E000
	011 Move X22, 0x73E000
	012 Move X21, 0x73E000
	013 Move W8, [X23+4030]
	014 Move X24, [X24+1528]
	015 Move X20, [X20+1536]
	016 Move X22, [X22+1544]
	017 Move X21, [X21+1552]
	018 Move X19, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {37}
	023 Move X0, 0x73E000
	024 Move X0, [X0+1552]
	025 Call 0x1C17CF4
	026 Move X0, 0x73E000
	027 Move X0, [X0+1536]
	028 Call 0x1C17CF4
	029 Move X0, 0x73E000
	030 Move X0, [X0+1544]
	031 Call 0x1C17CF4
	032 Move X0, 0x73E000
	033 Move X0, [X0+1528]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X23+4030], W8
	037 Move X0, [X24]
	038 Call 0x1C17F10
	039 Move X1, [X20]
	040 Move X20, X0
	041 Call List`1<Object>..ctor, X0
	042 Move [X19+16], X20
	043 Move X0, [X22]
	044 Call 0x1C17F10
	045 Move X1, [X21]
	046 Move X20, X0
	047 Call List`1<Object>..ctor, X0
	048 Move [X19+24], X20
	049 Move X0, X19
	050 Move X20, [X31+48]
	051 Move X19, [X31+56]
	052 Move X22, [X31+32]
	053 Move X21, [X31+40]
	054 Move X24, [X31+16]
	055 Move X23, [X31+24]
	056 Move X1, X31
	057 Move X30, [X31+64]
	058 Call Object..ctor, X0
	059 Return 

