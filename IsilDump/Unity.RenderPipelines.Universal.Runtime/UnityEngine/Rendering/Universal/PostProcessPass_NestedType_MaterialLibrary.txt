Type: UnityEngine.Rendering.Universal.PostProcessPass/MaterialLibrary

Method: System.Void .ctor(UnityEngine.Rendering.Universal.PostProcessData data)

Disassembly:
	0x03A66E80 MOV X0, X19
	0x03A66E84 BLR X8
	0x03A66E88 CBNZ X20, 0x3A66EB8
	0x03A66E8C LDP X20, X19, [X31 + 0x30]
	0x03A66E90 LDP X22, X21, [X31 + 0x20]
	0x03A66E94 LDP X24, X23, [X31 + 0x10]
	0x03A66E98 LDR X30, [X31], #0x40
	0x03A66E9C RET
	0x03A66EA0 BL 0x1C16F28
	0x03A66EA4 BL 0x1C16F20
	0x03A66EA8 BL 0x1C16F20
	0x03A66EAC BL 0x1C171E0
	0x03A66EB0 BL 0x1C16F20
	0x03A66EB4 BL 0x1C16F20
	0x03A66EB8 MOV X0, X20
	0x03A66EBC BL 0x1C16F18
	0x03A66EC0 B 0x3A66ED0
	0x03A66EC4 B 0x3A66ED0
	0x03A66EC8 B 0x3A66ED0
	0x03A66ECC B 0x3A66ED0
	0x03A66ED0 CMP W1, 0x1
	0x03A66ED4 B.NE 0x3A66EE8
	0x03A66ED8 BL 0x3EB1AD0
	0x03A66EDC LDR X20, [X0]
	0x03A66EE0 BL 0x3EB1AE0
	0x03A66EE4 B 0x3A66E1C
	0x03A66EE8 STR X0, [X31 + 0x8]
	0x03A66EEC MOV X20, X31
	0x03A66EF0 B 0x3A66EF8
	0x03A66EF4 STR X0, [X31 + 0x8]
	0x03A66EF8 LDR X1, [X21]
	0x03A66EFC MOV X0, X19
	0x03A66F00 BL 0x1C16E00
	0x03A66F04 MOV X19, X0
	0x03A66F08 CBZ X0, 0x3A66F64
	0x03A66F0C LDR X8, [X19]
	0x03A66F10 LDR X1, [X21]
	0x03A66F14 LDRH W9, [X8 + 0x12E]
	0x03A66F18 CBZ X9, 0x3A66F3C
	0x03A66F1C LDR X10, [X8 + 0xB0]
	0x03A66F20 ADD X10, X10, 0x8
	0x03A66F24 LDUR X11, [X10 - 0x8]
	0x03A66F28 CMP X11, X1
	0x03A66F2C B.EQ 0x3A66F4C
	0x03A66F30 SUBS X9, X9, 0x1
	0x03A66F34 ADD X10, X10, 0x10
	0x03A66F38 B.NE 0x3A66F24
	0x03A66F3C MOV X0, X19
	0x03A66F40 MOV W2, W31
	0x03A66F44 BL 0x1C5C788
	0x03A66F48 B 0x3A66F58
	0x03A66F4C LDRSW X9, [X10]
	0x03A66F50 ADD X8, X8, X9, 0x4, LSL
	0x03A66F54 ADD X0, X8, 0x138
	0x03A66F58 LDP X8, X1, [X0]
	0x03A66F5C MOV X0, X19
	0x03A66F60 BLR X8
	0x03A66F64 CBNZ X20, 0x3A66F70
	0x03A66F68 LDR X0, [X31 + 0x8]
	0x03A66F6C BL 0x1D2C690
	0x03A66F70 MOV X0, X20
	0x03A66F74 BL 0x1C16F18
	0x03A66F78 BL 0x1990590
	0x03A66F7C STR X30, [X31 - 0x40]!
	0x03A66F80 STP X24, X23, [X31 + 0x10]
	0x03A66F84 STP X22, X21, [X31 + 0x20]
	0x03A66F88 STP X20, X19, [X31 + 0x30]
	0x03A66F8C ADRP X23, 0x97C000
	0x03A66F90 ADRP X22, 0x6ED000
	0x03A66F94 LDRB W8, [X23 + 0x25C]
	0x03A66F98 LDR X22, [X22 + 0xFF0]
	0x03A66F9C MOV W21, W2
	0x03A66FA0 MOV W20, W1
	0x03A66FA4 MOV X19, X0
	0x03A66FA8 TBNZ X8, 0x0, 0x3A66FD8
	0x03A66FAC ADRP X0, 0x6EA000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, X1
	005 Move X1, X31
	006 Move X19, X0
	007 Call Object..ctor, X0
	008 Compare X20, 0
	009 JumpIfEqual {92}
	010 Move X8, [X20+24]
	011 Compare X8, 0
	012 JumpIfEqual {92}
	013 Move X1, [X8+16]
	014 Call MaterialLibrary.Load, X0, X1
	015 Move [X19+16], X0
	016 Move X8, [X20+24]
	017 Compare X8, 0
	018 JumpIfEqual {92}
	019 Move X1, [X8+24]
	020 Call MaterialLibrary.Load, X0, X1
	021 Move [X19+24], X0
	022 Move X8, [X20+24]
	023 Compare X8, 0
	024 JumpIfEqual {92}
	025 Move X1, [X8+32]
	026 Call MaterialLibrary.Load, X0, X1
	027 Move [X19+32], X0
	028 Move X8, [X20+24]
	029 Compare X8, 0
	030 JumpIfEqual {92}
	031 Move X1, [X8+40]
	032 Call MaterialLibrary.Load, X0, X1
	033 Move [X19+40], X0
	034 Move X8, [X20+24]
	035 Compare X8, 0
	036 JumpIfEqual {92}
	037 Move X1, [X8+48]
	038 Call MaterialLibrary.Load, X0, X1
	039 Move [X19+48], X0
	040 Move X8, [X20+24]
	041 Compare X8, 0
	042 JumpIfEqual {92}
	043 Move X1, [X8+56]
	044 Call MaterialLibrary.Load, X0, X1
	045 Move [X19+56], X0
	046 Move X8, [X20+24]
	047 Compare X8, 0
	048 JumpIfEqual {92}
	049 Move X1, [X8+80]
	050 Call MaterialLibrary.Load, X0, X1
	051 Move [X19+64], X0
	052 Move X8, [X20+24]
	053 Compare X8, 0
	054 JumpIfEqual {92}
	055 Move X1, [X8+88]
	056 Call MaterialLibrary.Load, X0, X1
	057 Move [X19+72], X0
	058 Move X8, [X20+24]
	059 Compare X8, 0
	060 JumpIfEqual {92}
	061 Move X1, [X8+104]
	062 Call MaterialLibrary.Load, X0, X1
	063 Move [X19+80], X0
	064 Move X8, [X20+24]
	065 Compare X8, 0
	066 JumpIfEqual {92}
	067 Move X1, [X8+112]
	068 Call MaterialLibrary.Load, X0, X1
	069 Move [X19+88], X0
	070 Move X8, [X20+24]
	071 Compare X8, 0
	072 JumpIfEqual {92}
	073 Move X1, [X8+120]
	074 Call MaterialLibrary.Load, X0, X1
	075 Move [X19+96], X0
	076 Move X8, [X20+24]
	077 Compare X8, 0
	078 JumpIfEqual {92}
	079 Move X1, [X8+128]
	080 Call MaterialLibrary.Load, X0, X1
	081 Move [X19+104], X0
	082 Move X8, [X20+24]
	083 Compare X8, 0
	084 JumpIfEqual {92}
	085 Move X1, [X8+96]
	086 Call MaterialLibrary.Load, X0, X1
	087 Move [X19+112], X0
	088 Move X20, [X31+16]
	089 Move X19, [X31+24]
	090 Move X30, [X31+32]
	091 Return 
	092 Call 0x1C17F20

Method: UnityEngine.Material Load(UnityEngine.Shader shader)

Disassembly:
	0x03A66FB0 LDR X0, [X0 + 0x598]
	0x03A66FB4 BL 0x1C16CF4
	0x03A66FB8 ADRP X0, 0x6ED000
	0x03A66FBC LDR X0, [X0 + 0xFF0]
	0x03A66FC0 BL 0x1C16CF4
	0x03A66FC4 ADRP X0, 0x6F0000
	0x03A66FC8 LDR X0, [X0 + 0x8B8]
	0x03A66FCC BL 0x1C16CF4
	0x03A66FD0 MOVZ W8, 0x1
	0x03A66FD4 STRB W8, [X23 + 0x25C]
	0x03A66FD8 LDR X0, [X22]
	0x03A66FDC ADRP X23, 0x6EA000
	0x03A66FE0 ADRP X22, 0x6F0000
	0x03A66FE4 LDR W8, [X0 + 0xE0]
	0x03A66FE8 LDR X23, [X23 + 0x598]
	0x03A66FEC LDR X22, [X22 + 0x8B8]
	0x03A66FF0 CBNZ W8, 0x3A66FF8
	0x03A66FF4 BL 0x1C16DFC
	0x03A66FF8 MOV X0, X19
	0x03A66FFC MOV X1, X31
	0x03A67000 AND W24, W21, 0x1
	0x03A67004 BL 0x3A4225C
	0x03A67008 LDR X0, [X23]
	0x03A6700C BL 0x1C16F10
	0x03A67010 LDR X1, [X22]
	0x03A67014 MOV X2, X31
	0x03A67018 MOV X21, X0
	0x03A6701C BL 0x39B19AC
	0x03A67020 STR X21, [X19 + 0x38]
	0x03A67024 STR W20, [X19 + 0x10]
	0x03A67028 STRB W24, [X19 + 0xE0]
	0x03A6702C LDP X20, X19, [X31 + 0x30]
	0x03A67030 LDP X22, X21, [X31 + 0x20]
	0x03A67034 LDP X24, X23, [X31 + 0x10]
	0x03A67038 LDR X30, [X31], #0x40
	0x03A6703C RET
	0x03A67040 LDRB W8, [X0 + 0xE0]
	0x03A67044 CMP W8, 0x0
	0x03A67048 CSET W0, EQ
	0x03A6704C RET
	0x03A67050 STP X30, X21, [X31 - 0x20]!
	0x03A67054 STP X20, X19, [X31 + 0x10]
	0x03A67058 ADRP X21, 0x97B000
	0x03A6705C ADRP X20, 0x6EF000
	0x03A67060 LDRB W8, [X21 + 0x25D]
	0x03A67064 LDR X20, [X20 + 0x8C0]
	0x03A67068 MOV X19, X2
	0x03A6706C TBNZ X8, 0x0, 0x3A67084
	0x03A67070 ADRP X0, 0x6EF000
	0x03A67074 LDR X0, [X0 + 0x8C0]
	0x03A67078 BL 0x1C16CF4
	0x03A6707C MOVZ W8, 0x1
	0x03A67080 STRB W8, [X21 + 0x25D]
	0x03A67084 LDR X0, [X20]
	0x03A67088 LDR X19, [X19]
	0x03A6708C LDR W8, [X0 + 0xE0]
	0x03A67090 CBNZ W8, 0x3A67098
	0x03A67094 BL 0x1C16DFC
	0x03A67098 MOV X0, X19
	0x03A6709C LDP X20, X19, [X31 + 0x10]
	0x03A670A0 MOV W1, W31
	0x03A670A4 LDP X30, X21, [X31], #0x20
	0x03A670A8 B 0x3A670AC
	0x03A670AC SUB X31, X31, 0x30
	0x03A670B0 STP X30, X21, [X31 + 0x10]
	0x03A670B4 STP X20, X19, [X31 + 0x20]
	0x03A670B8 ADRP X21, 0x97B000
	0x03A670BC ADRP X20, 0x6EF000
	0x03A670C0 LDRB W8, [X21 + 0x25E]
	0x03A670C4 LDR X20, [X20 + 0x8C0]
	0x03A670C8 MOV X19, X0
	0x03A670CC TBNZ X8, 0x0, 0x3A670FC
	0x03A670D0 ADRP X0, 0x6EF000
	0x03A670D4 LDR X0, [X0 + 0x8C8]
	0x03A670D8 BL 0x1C16CF4
	0x03A670DC ADRP X0, 0x6EF000
	0x03A670E0 LDR X0, [X0 + 0x8D0]
	0x03A670E4 BL 0x1C16CF4
	0x03A670E8 ADRP X0, 0x6EF000
	0x03A670EC LDR X0, [X0 + 0x8C0]
	0x03A670F0 BL 0x1C16CF4
	0x03A670F4 MOVZ W8, 0x1
	0x03A670F8 STRB W8, [X21 + 0x25E]
	0x03A670FC LDR X0, [X20]
	0x03A67100 STRB W31, [X31 + 0x8]
	0x03A67104 ADRP X21, 0x6EF000
	0x03A67108 LDR W8, [X0 + 0xE0]
	0x03A6710C LDR X21, [X21 + 0x8D0]
	0x03A67110 CBNZ W8, 0x3A6711C
	0x03A67114 BL 0x1C16DFC
	0x03A67118 LDR X0, [X20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x97D000
	006 Move X21, 0x68E000
	007 Move W8, [X20+598]
	008 Move X21, [X21+1432]
	009 Move X19, X1
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {31}
	014 Move X0, 0x68E000
	015 Move X0, [X0+2504]
	016 Call 0x1C17CF4
	017 Move X0, 0x6B6000
	018 Move X0, [X0+2296]
	019 Call 0x1C17CF4
	020 Move X0, 0x68E000
	021 Move X0, [X0+2600]
	022 Call 0x1C17CF4
	023 Move X0, 0x68E000
	024 Move X0, [X0+1432]
	025 Call 0x1C17CF4
	026 Move X0, 0x6F0000
	027 Move X0, [X0+1880]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X20+598], W8
	031 Move X0, [X21]
	032 Move W8, [X0+224]
	033 Compare W8, 0
	034 JumpIfNotEqual {36}
	035 Call 0x1C17DFC
	036 Move X0, X19
	037 Move X1, X31
	038 Move X2, X31
	039 Call Object.op_Equality, X0, X1
	040 Move TEMP, X0
	041 And TEMP, TEMP, 1
	042 Compare TEMP, 1
	043 JumpIfNotEqual {88}
	044 Move X8, 0x68D000
	045 Move X8, [X8+2504]
	046 Move X19, [X8]
	047 Move X8, [X19+56]
	048 Compare X8, 0
	049 JumpIfNotEqual {53}
	050 Move X0, X19
	051 Call 0x1C5D6E0
	052 Move X8, [X19+56]
	053 Move X0, [X8+16]
	054 Move W8, [X0+309]
	055 Move TEMP, X8
	056 And TEMP, TEMP, 1
	057 Compare TEMP, 1
	058 JumpIfEqual {60}
	059 Call 0x1C5D684
	060 Move W8, [X0+224]
	061 Compare W8, 0
	062 JumpIfNotEqual {64}
	063 Call 0x1C17DFC
	064 Move X8, [X19+56]
	065 Move X0, [X8+16]
	066 Move W8, [X0+309]
	067 Move TEMP, X8
	068 And TEMP, TEMP, 1
	069 Compare TEMP, 1
	070 JumpIfEqual {72}
	071 Call 0x1C5D684
	072 Move X8, 0x68D000
	073 Move X8, [X8+2600]
	074 Move X9, [X0+184]
	075 Move X8, [X8]
	076 Move X19, [X9]
	077 Move W10, [X8+224]
	078 Compare W10, 0
	079 JumpIfNotEqual {82}
	080 Move X0, X8
	081 Call 0x1C17DFC
	082 Move X8, 0x6F0000
	083 Move X8, [X8+1880]
	084 Move X1, X19
	085 Move X2, X31
	086 Move X0, [X8]
	087 Call Debug.LogErrorFormat, X0, X1
	088 Compare X19, 0
	089 JumpIfEqual {118}
	090 Move X0, X19
	091 Move X1, X31
	092 Call Shader.get_isSupported, X0
	093 Move TEMP, X0
	094 And TEMP, TEMP, 1
	095 Compare TEMP, 1
	096 JumpIfNotEqual {112}
	097 Move X8, 0x6B5000
	098 Move X8, [X8+2296]
	099 Move X0, [X8]
	100 Move W8, [X0+224]
	101 Compare W8, 0
	102 JumpIfNotEqual {104}
	103 Call 0x1C17DFC
	104 Move X0, X19
	105 Move X20, [X31+16]
	106 Move X19, [X31+24]
	107 Move X1, X31
	108 Move X30, [X31+32]
	109 Move X21, [X31+40]
	110 Call CoreUtils.CreateEngineMaterial, X0
	111 Return X0
	112 Move X20, [X31+16]
	113 Move X19, [X31+24]
	114 Move X0, X31
	115 Move X30, [X31+32]
	116 Move X21, [X31+40]
	117 Return X0
	118 Call 0x1C17F20

Method: System.Void Cleanup()

Disassembly:
	0x03A6711C LDR X8, [X0 + 0xB8]
	0x03A67120 ADD X0, X31, 0x8
	0x03A67124 MOV X1, X19
	0x03A67128 MOV X3, X31
	0x03A6712C LDR X2, [X8]
	0x03A67130 BL 0x39B1DB0
	0x03A67134 LDR X0, [X21]
	0x03A67138 LDR W8, [X0 + 0xE0]
	0x03A6713C CBNZ W8, 0x3A67144
	0x03A67140 BL 0x1C16DFC
	0x03A67144 MOV X0, X19
	0x03A67148 MOV X1, X31
	0x03A6714C BL 0x3AB4A08
	0x03A67150 ADRP X20, 0x6EF000
	0x03A67154 LDR X20, [X20 + 0x8C8]
	0x03A67158 LDR X0, [X20]
	0x03A6715C LDR W8, [X0 + 0xE0]
	0x03A67160 CBNZ W8, 0x3A6716C
	0x03A67164 BL 0x1C16DFC
	0x03A67168 LDR X0, [X20]
	0x03A6716C LDR X8, [X0 + 0xB8]
	0x03A67170 LDR X1, [X8 + 0x20]
	0x03A67174 MOV X0, X19
	0x03A67178 MOV X2, X31
	0x03A6717C BL 0x3AA4358
	0x03A67180 ADD X0, X31, 0x8
	0x03A67184 MOV X1, X31
	0x03A67188 BL 0x39B1DB4
	0x03A6718C LDP X20, X19, [X31 + 0x20]
	0x03A67190 LDP X30, X21, [X31 + 0x10]
	0x03A67194 ADD X31, X31, 0x30
	0x03A67198 RET
	0x03A6719C B 0x3A671A4
	0x03A671A0 B 0x3A671A4
	0x03A671A4 MOV X19, X0
	0x03A671A8 CMP W1, 0x1
	0x03A671AC B.NE 0x3A671D8
	0x03A671B0 MOV X0, X19
	0x03A671B4 BL 0x3EB1AD0
	0x03A671B8 LDR X20, [X0]
	0x03A671BC BL 0x3EB1AE0
	0x03A671C0 ADD X0, X31, 0x8
	0x03A671C4 MOV X1, X31
	0x03A671C8 BL 0x39B1DB4
	0x03A671CC CBZ X20, 0x3A6718C
	0x03A671D0 MOV X0, X20
	0x03A671D4 BL 0x1C16F18
	0x03A671D8 MOV X20, X31
	0x03A671DC B 0x3A671E4
	0x03A671E0 MOV X19, X0
	0x03A671E4 ADD X0, X31, 0x8
	0x03A671E8 MOV X1, X31
	0x03A671EC BL 0x39B1DB4
	0x03A671F0 CBNZ X20, 0x3A671FC
	0x03A671F4 MOV X0, X19
	0x03A671F8 BL 0x1D2C690
	0x03A671FC MOV X0, X20
	0x03A67200 BL 0x1C16F18
	0x03A67204 BL 0x1990590

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x97C000
	006 Move X20, 0x6B5000
	007 Move W8, [X21+599]
	008 Move X20, [X20+2296]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x6B5000
	015 Move X0, [X0+2296]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+599], W8
	019 Move X0, [X20]
	020 Move X20, [X19+16]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 Move X0, X20
	026 Move X1, X31
	027 Call CoreUtils.Destroy, X0
	028 Move X0, [X19+24]
	029 Move X1, X31
	030 Call CoreUtils.Destroy, X0
	031 Move X0, [X19+32]
	032 Move X1, X31
	033 Call CoreUtils.Destroy, X0
	034 Move X0, [X19+40]
	035 Move X1, X31
	036 Call CoreUtils.Destroy, X0
	037 Move X0, [X19+48]
	038 Move X1, X31
	039 Call CoreUtils.Destroy, X0
	040 Move X0, [X19+56]
	041 Move X1, X31
	042 Call CoreUtils.Destroy, X0
	043 Move X0, [X19+64]
	044 Move X1, X31
	045 Call CoreUtils.Destroy, X0
	046 Move X0, [X19+72]
	047 Move X1, X31
	048 Call CoreUtils.Destroy, X0
	049 Move X0, [X19+80]
	050 Move X1, X31
	051 Call CoreUtils.Destroy, X0
	052 Move X0, [X19+88]
	053 Move X1, X31
	054 Call CoreUtils.Destroy, X0
	055 Move X0, [X19+96]
	056 Move X1, X31
	057 Call CoreUtils.Destroy, X0
	058 Move X0, [X19+104]
	059 Move X1, X31
	060 Call CoreUtils.Destroy, X0
	061 Move X0, [X19+112]
	062 Move X20, [X31+16]
	063 Move X19, [X31+24]
	064 Move X1, X31
	065 Move X30, [X31+32]
	066 Move X21, [X31+40]
	067 Call CoreUtils.Destroy, X0
	068 Return 

