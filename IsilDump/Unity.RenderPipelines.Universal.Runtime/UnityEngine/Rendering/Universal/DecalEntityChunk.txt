Type: UnityEngine.Rendering.Universal.DecalEntityChunk

Method: System.Void Push()

Disassembly:
	0x03A3E2D4 STR X29, [X31 + 0x40]
	0x03A3E2D8 STP X30, X23, [X31 + 0x50]
	0x03A3E2DC STP X22, X21, [X31 + 0x60]
	0x03A3E2E0 STP X20, X19, [X31 + 0x70]

ISIL:
	001 Move W8, [X0+16]
	002 Add W8, W8, 1
	003 Move [X0+16], W8
	004 Return 

Method: System.Void RemoveAtSwapBack(System.Int32 entityIndex)

Disassembly:
	0x03A3E2E4 SUB X31, X31, 0x180
	0x03A3E2E8 ADRP X22, 0x9A4000
	0x03A3E2EC LDRB W8, [X22 + 0x153]
	0x03A3E2F0 MOV X19, X2
	0x03A3E2F4 MOV X21, X1
	0x03A3E2F8 MOV X20, X0
	0x03A3E2FC TBNZ X8, 0x0, 0x3A3E314
	0x03A3E300 ADRP X0, 0x717000
	0x03A3E304 LDR X0, [X0 + 0x7E0]
	0x03A3E308 BL 0x1C16CF4
	0x03A3E30C MOVZ W8, 0x1
	0x03A3E310 STRB W8, [X22 + 0x153]
	0x03A3E314 LDR X0, [X20 + 0x50]
	0x03A3E318 CBZ X0, 0x3A3E628
	0x03A3E31C MOV X1, X21
	0x03A3E320 BL 0x3A3CF90
	0x03A3E324 LDR X8, [X20 + 0x18]
	0x03A3E328 CBZ X8, 0x3A3E628
	0x03A3E32C ADRP X9, 0x717000
	0x03A3E330 LDR X9, [X9 + 0x7E0]
	0x03A3E334 MOV X21, X0
	0x03A3E338 MOV X0, X8
	0x03A3E33C MOV W1, W21
	0x03A3E340 LDR X2, [X9]
	0x03A3E344 BL 0x301BCCC
	0x03A3E348 CBZ X0, 0x3A3E628
	0x03A3E34C CBZ X19, 0x3A3E628
	0x03A3E350 MOV X20, X0
	0x03A3E354 MOV X0, X19
	0x03A3E358 MOV X1, X31
	0x03A3E35C BL 0x3A3AAF8
	0x03A3E360 ADD X8, X31, 0x100
	0x03A3E364 MOV X0, X31
	0x03A3E368 BL 0x3C28344
	0x03A3E36C LDP V0, V1, [X31 + 0x100]
	0x03A3E370 LDP V2, V3, [X31 + 0x120]
	0x03A3E374 MOV X0, X19
	0x03A3E378 MOV X1, X31
	0x03A3E37C STP V0, V1, [X31 + 0x140]
	0x03A3E380 STP V2, V3, [X31 + 0x160]
	0x03A3E384 BL 0x3A3AAEC
	0x03A3E388 ADD X8, X31, 0x100
	0x03A3E38C MOV X0, X31

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x9A5000
	008 Move X22, 0x718000
	009 Move X21, 0x718000
	010 Move W8, [X23+330]
	011 Move X22, [X22+2160]
	012 Move X21, [X21+2168]
	013 Move W20, W1
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {27}
	019 Move X0, 0x718000
	020 Move X0, [X0+2160]
	021 Call 0x1C17CF4
	022 Move X0, 0x718000
	023 Move X0, [X0+2168]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X23+330], W8
	027 Move W3, [X19+16]
	028 Move X4, [X22]
	029 Add X1, X19, 48
	030 Move X0, X19
	031 Move W2, W20
	032 Call DecalChunk.RemoveAtSwapBack, X0, X1, X2, X3
	033 Move W3, [X19+16]
	034 Move X4, [X21]
	035 Add X1, X19, 64
	036 Move X0, X19
	037 Move W2, W20
	038 Call DecalChunk.RemoveAtSwapBack, X0, X1, X2, X3
	039 Add X0, X19, 72
	040 Move W1, W20
	041 Move X2, X31
	042 Call TransformAccessArray.RemoveAtSwapBack, X0, X1
	043 Move W8, [X19+16]
	044 Move X22, [X31+16]
	045 Move X21, [X31+24]
	046 Subtract W8, W8, 1
	047 Move [X19+16], W8
	048 Move X20, [X31+32]
	049 Move X19, [X31+40]
	050 Move X30, [X31+48]
	051 Move X23, [X31+56]
	052 Return 

Method: System.Void SetCapacity(System.Int32 newCapacity)

Disassembly:
	0x03A3E390 BL 0x3C28318
	0x03A3E394 LDP V0, V1, [X31 + 0x100]
	0x03A3E398 LDP V2, V3, [X31 + 0x120]
	0x03A3E39C ADD X8, X31, 0x100
	0x03A3E3A0 ADD X0, X31, 0xC0
	0x03A3E3A4 STP V0, V1, [X31 + 0x80]
	0x03A3E3A8 LDP V0, V1, [X31 + 0x140]
	0x03A3E3AC STP V2, V3, [X31 + 0xA0]
	0x03A3E3B0 LDP V2, V3, [X31 + 0x160]
	0x03A3E3B4 ADD X1, X31, 0x80
	0x03A3E3B8 MOV X2, X31
	0x03A3E3BC STP V0, V1, [X31 + 0xC0]
	0x03A3E3C0 STP V2, V3, [X31 + 0xE0]
	0x03A3E3C4 BL 0x3C27F74
	0x03A3E3C8 LDP V0, V1, [X31 + 0x100]
	0x03A3E3CC LDP V2, V3, [X31 + 0x120]
	0x03A3E3D0 ADD X8, X31, 0x40
	0x03A3E3D4 ADD X0, X31, 0x0
	0x03A3E3D8 MOV X1, X31
	0x03A3E3DC STP V0, V1, [X31]
	0x03A3E3E0 STP V2, V3, [X31 + 0x20]
	0x03A3E3E4 BL 0x3898FFC
	0x03A3E3E8 LDP V1, V0, [X31 + 0x60]
	0x03A3E3EC LDP V3, V2, [X31 + 0x40]
	0x03A3E3F0 SBFM X23, X21, 0x20, 0x3F
	0x03A3E3F4 MOV X0, X19
	0x03A3E3F8 STP V1, V0, [X31 + 0x120]
	0x03A3E3FC STP V3, V2, [X31 + 0x100]
	0x03A3E400 LDR X8, [X20 + 0x68]
	0x03A3E404 MOV X1, X31
	0x03A3E408 ADD X8, X8, X23, 0x6, LSL
	0x03A3E40C STP V1, V0, [X8 + 0x20]
	0x03A3E410 STP V3, V2, [X8]
	0x03A3E414 LDP S12, S13, [X19 + 0x30]
	0x03A3E418 LDP S14, S15, [X19 + 0x38]
	0x03A3E41C BL 0x3A3AB08
	0x03A3E420 MOV X0, X19

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x9A5000
	008 Move X22, 0x718000
	009 Move X21, 0x718000
	010 Move W8, [X23+331]
	011 Move X22, [X22+2176]
	012 Move X21, [X21+2184]
	013 Move W19, W1
	014 Move X20, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {27}
	019 Move X0, 0x718000
	020 Move X0, [X0+2176]
	021 Call 0x1C17CF4
	022 Move X0, 0x718000
	023 Move X0, [X0+2184]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X23+331], W8
	027 Move X2, [X22]
	028 Add X0, X20, 48
	029 Move W1, W19
	030 Call ArrayExtensions.ResizeArray, X0, X1
	031 Add X20, X20, 64
	032 Move X2, [X20]
	033 Move W3, W19
	034 Add X1, X20, 8
	035 Call DecalChunk.ResizeNativeArray, X0, X1, X2, X3
	036 Move X2, [X21]
	037 Move X0, X20
	038 Move W1, W19
	039 Call ArrayExtensions.ResizeArray, X0, X1
	040 Move [X20-44], W19
	041 Move X20, [X31+32]
	042 Move X19, [X31+40]
	043 Move X22, [X31+16]
	044 Move X21, [X31+24]
	045 Move X30, [X31+48]
	046 Move X23, [X31+56]
	047 Return 

Method: System.Void Dispose()

Disassembly:
	0x03A3E424 MOV X1, X31
	0x03A3E428 MOV V8.16B, V0.16B
	0x03A3E42C MOV V9.16B, V1.16B
	0x03A3E430 MOV V10.16B, V2.16B
	0x03A3E434 MOV V11.16B, V3.16B
	0x03A3E438 BL 0x3C32ECC
	0x03A3E43C CBZ X0, 0x3A3E628
	0x03A3E440 MOV X1, X31
	0x03A3E444 STR S15, [X31 + 0x1CC]
	0x03A3E448 BL 0x3C35734
	0x03A3E44C MOV W21, W0
	0x03A3E450 MOV X0, X19
	0x03A3E454 MOV X1, X31
	0x03A3E458 BL 0x3C32ECC
	0x03A3E45C CBZ X0, 0x3A3E628
	0x03A3E460 MOV X1, X31
	0x03A3E464 BL 0x3C35C68
	0x03A3E468 LDR V15, [X19 + 0x70]
	0x03A3E46C MOV X22, X0
	0x03A3E470 MOV V0.16B, V12.16B
	0x03A3E474 MOV V1.16B, V13.16B
	0x03A3E478 MOV X0, X31
	0x03A3E47C BL 0x3883124
	0x03A3E480 LDR X8, [X20 + 0x78]
	0x03A3E484 MOVZ W9, 0x43340000
	0x03A3E488 MOV V2.16B, V0.16B

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x9A5000
	005 Move W8, [X20+332]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x718000
	012 Move X0, [X0+2192]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+332], W8
	016 Move W8, [X19+20]
	017 Compare W8, 0
	018 JumpIfEqual {29}
	019 Move X8, 0x718000
	020 Move X8, [X8+2192]
	021 Add X0, X19, 48
	022 Move X1, [X8]
	023 Call NativeArray`1<DecalEntity>.Dispose, X0
	024 Add X0, X19, 72
	025 Move X1, X31
	026 Call TransformAccessArray.Dispose, X0
	027 Move [X19+64], X31
	028 Move [X19+16], X31
	029 Move X20, [X31+16]
	030 Move X19, [X31+24]
	031 Move X30, [X31+32]
	032 Return 

Method: System.Void .ctor()

Disassembly:
	0x03A3E48C FMOV S3, W9
	0x03A3E490 ADD X8, X8, X23, 0x3, LSL

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

