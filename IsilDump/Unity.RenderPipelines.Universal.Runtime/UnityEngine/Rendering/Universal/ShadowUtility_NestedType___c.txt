Type: UnityEngine.Rendering.Universal.ShadowUtility/<>c

Method: System.Void .cctor()

Disassembly:
	0x03A2C240 MOV X1, X19
	0x03A2C244 MOV X2, X20
	0x03A2C248 LDR X8, [X8]
	0x03A2C24C MOV X4, X31
	0x03A2C250 MOV X0, X8
	0x03A2C254 BL 0x3227C18
	0x03A2C258 ADRP X8, 0x6C7000
	0x03A2C25C LDR X8, [X8 + 0xA28]
	0x03A2C260 MOV X19, X0
	0x03A2C264 LDR X8, [X8]
	0x03A2C268 LDR W9, [X8 + 0xE0]
	0x03A2C26C CBNZ W9, 0x3A2C278
	0x03A2C270 MOV X0, X8
	0x03A2C274 BL 0x1C16DFC
	0x03A2C278 MOV X0, X19
	0x03A2C27C MOV X1, X31
	0x03A2C280 BL 0x3C06A04
	0x03A2C284 MOVZ W20, 0x8
	0x03A2C288 MOV W0, W20
	0x03A2C28C LDP X20, X19, [X31 + 0x40]
	0x03A2C290 LDP X22, X21, [X31 + 0x30]
	0x03A2C294 LDP X30, X23, [X31 + 0x20]
	0x03A2C298 ADD X31, X31, 0x50

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x9B7000
	005 Move X20, 0x729000
	006 Move W8, [X19+84]
	007 Move X20, [X20+2736]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x729000
	013 Move X0, [X0+2736]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+84], W8
	017 Move X0, [X20]
	018 Call 0x1C17F10
	019 Move X1, X31
	020 Move X19, X0
	021 Call Object..ctor, X0
	022 Move X8, [X20]
	023 Move X8, [X8+184]
	024 Move [X8], X19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Return 

Method: System.Void .ctor()

Disassembly:
	0x03A2C29C RET
	0x03A2C2A0 BL 0x1C16F28

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: System.Int32 <GenerateShadowMesh>b__9_0(System.Int32 i)

Disassembly:
	0x03A2C2A4 BL 0x1C16F20
	0x03A2C2A8 LDR W0, [X0 + 0xE0]

ISIL:
	001 Move W0, W1
	002 Return X0

Method: UnityEngine.Vector3 <GenerateShadowMesh>b__9_1(UnityEngine.Rendering.Universal.LibTessDotNet.ContourVertex v)

Disassembly:
	0x03A2C2AC BFM X0, X0, 0x20, 0x1F
	0x03A2C2B0 RET
	0x03A2C2B4 STR X30, [X31 - 0x20]!

ISIL:
	001 Move S0, [X1]
	002 Move S1, [X1+4]
	003 Move S2, W31
	004 Return X0

Method: UnityEngine.Color <GenerateShadowMesh>b__9_2(UnityEngine.Rendering.Universal.LibTessDotNet.ContourVertex v)

Disassembly:
	0x03A2C2B8 STP X20, X19, [X31 + 0x10]
	0x03A2C2BC ADRP X20, 0x9B6000
	0x03A2C2C0 LDRB W8, [X20 + 0x5E]
	0x03A2C2C4 MOV X19, X0
	0x03A2C2C8 TBNZ X8, 0x0, 0x3A2C2E0
	0x03A2C2CC ADRP X0, 0x6C8000
	0x03A2C2D0 LDR X0, [X0 + 0xE58]
	0x03A2C2D4 BL 0x1C16CF4
	0x03A2C2D8 MOVZ W8, 0x1
	0x03A2C2DC STRB W8, [X20 + 0x5E]
	0x03A2C2E0 LDR X8, [X19 + 0x40]
	0x03A2C2E4 CBZ X8, 0x3A2C34C
	0x03A2C2E8 ADRP X9, 0x6C8000
	0x03A2C2EC LDR X9, [X9 + 0xE58]
	0x03A2C2F0 LDR W8, [X8 + 0x18]
	0x03A2C2F4 LDR X0, [X9]
	0x03A2C2F8 ADD W1, W8, 0x1
	0x03A2C2FC BL 0x1C16D6C
	0x03A2C300 CBZ X0, 0x3A2C34C
	0x03A2C304 LDR W8, [X0 + 0x18]
	0x03A2C308 UBFM X9, X8, 0x20, 0x1F
	0x03A2C30C CMP X9, 0x1
	0x03A2C310 B.LT 0x3A2C33C
	0x03A2C314 MOV X9, X31
	0x03A2C318 SXTW X10, W8
	0x03A2C31C ADD X11, X0, 0x20
	0x03A2C320 CMP X9, X8
	0x03A2C324 B.CS 0x3A2C348
	0x03A2C328 SUB W12, W9, 0x1
	0x03A2C32C STR W12, [X11, X9, LSL #2]
	0x03A2C330 ADD X9, X9, 0x1
	0x03A2C334 CMP X10, X9
	0x03A2C338 B.NE 0x3A2C320
	0x03A2C33C LDP X20, X19, [X31 + 0x10]
	0x03A2C340 LDR X30, [X31], #0x20
	0x03A2C344 RET
	0x03A2C348 BL 0x1C16F28
	0x03A2C34C BL 0x1C16F20
	0x03A2C350 LDRB W0, [X0 + 0x4C]
	0x03A2C354 RET
	0x03A2C358 AND W8, W1, 0x1
	0x03A2C35C STRB W8, [X0 + 0x4C]
	0x03A2C360 RET
	0x03A2C364 LDRB W0, [X0 + 0x4D]
	0x03A2C368 RET
	0x03A2C36C AND W8, W1, 0x1
	0x03A2C370 STRB W8, [X0 + 0x4D]
	0x03A2C374 RET
	0x03A2C378 LDR W0, [X0 + 0x50]
	0x03A2C37C RET
	0x03A2C380 LDRB W0, [X0 + 0x54]
	0x03A2C384 RET
	0x03A2C388 LDR W0, [X0 + 0xF4]
	0x03A2C38C RET
	0x03A2C390 STR W1, [X0 + 0xF4]
	0x03A2C394 RET
	0x03A2C398 LDRB W0, [X0 + 0x55]
	0x03A2C39C RET
	0x03A2C3A0 AND W8, W1, 0x1
	0x03A2C3A4 STRB W8, [X0 + 0x55]
	0x03A2C3A8 RET
	0x03A2C3AC LDR W0, [X0 + 0x58]
	0x03A2C3B0 RET
	0x03A2C3B4 STR W1, [X0 + 0x58]
	0x03A2C3B8 RET
	0x03A2C3BC LDR W0, [X0 + 0x5C]
	0x03A2C3C0 RET
	0x03A2C3C4 STR W1, [X0 + 0x5C]
	0x03A2C3C8 RET

ISIL:
	001 Move [X31-48], D10
	002 Move [X31+8], D9
	003 Move [X31+16], D8
	004 Move [X31+24], X30
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x9B7000
	008 Move W8, [X20+85]
	009 Move X19, X1
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x6F0000
	015 Move X0, [X0+1504]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+85], W8
	019 Move X0, [X19+16]
	020 Compare X0, 0
	021 JumpIfEqual {74}
	022 Move X20, 0x6F0000
	023 Move X20, [X20+1504]
	024 Move X8, [X0]
	025 Move X1, [X20]
	026 Move X8, [X8+64]
	027 Move X9, [X1+64]
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Call 0x1C17E08
	030 Move X8, [X19+16]
	031 Compare X8, 0
	032 JumpIfEqual {74}
	033 Move X9, [X8]
	034 Move X1, [X20]
	035 Move X9, [X9+64]
	036 Move X10, [X1+64]
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move V8, [X0]
	039 Move X0, X8
	040 Call 0x1C17E08
	041 Move X8, [X19+16]
	042 Compare X8, 0
	043 JumpIfEqual {74}
	044 Move X9, [X8]
	045 Move X1, [X20]
	046 Move X9, [X9+64]
	047 Move X10, [X1+64]
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Move V9, [X0+4]
	050 Move X0, X8
	051 Call 0x1C17E08
	052 Move X8, [X19+16]
	053 Compare X8, 0
	054 JumpIfEqual {74}
	055 Move X9, [X8]
	056 Move X1, [X20]
	057 Move X9, [X9+64]
	058 Move X10, [X1+64]
	059 NotImplemented "Instruction CMP not yet implemented."
	060 Move V10, [X0+8]
	061 Move X0, X8
	062 Call 0x1C17E08
	063 Move V3, [X0+12]
	064 Move V0, V8
	065 Move V1, V9
	066 Move X20, [X31+32]
	067 Move X19, [X31+40]
	068 Move X30, [X31+24]
	069 Move D9, [X31+8]
	070 Move D8, [X31+16]
	071 Move V2, V10
	072 Move V10, [X31+48]
	073 Return X0
	074 Call 0x1C17F20
	075 Move X0, X8
	076 Call 0x1C181E0

