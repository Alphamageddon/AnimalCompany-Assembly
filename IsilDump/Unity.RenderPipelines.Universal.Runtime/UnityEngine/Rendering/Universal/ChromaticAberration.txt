Type: UnityEngine.Rendering.Universal.ChromaticAberration

Method: System.Boolean IsActive()

Disassembly:
	0x03A59C14 LDR X0, [X19 + 0x38]
	0x03A59C18 CBZ X0, 0x3A59C9C
	0x03A59C1C LDR X8, [X0]
	0x03A59C20 LDR X9, [X8 + 0x218]
	0x03A59C24 LDR X1, [X8 + 0x220]
	0x03A59C28 BLR X9
	0x03A59C2C CMP W0, 0xA
	0x03A59C30 B.NE 0x3A59C8C
	0x03A59C34 LDR X0, [X19 + 0x50]
	0x03A59C38 CBZ X0, 0x3A59C9C
	0x03A59C3C LDR X8, [X0]
	0x03A59C40 LDR X9, [X8 + 0x218]

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+56]
	003 Compare X0, 0
	004 JumpIfEqual {13}
	005 Move X8, [X0]
	006 Move X9, [X8+536]
	007 Move X1, [X8+544]
	008 NotImplemented "Instruction BLR not yet implemented."
	009 NotImplemented "Instruction FCMP not yet implemented."
	010 NotImplemented "Instruction CSET not yet implemented."
	011 Move X30, [X31+16]
	012 Return X0
	013 Call 0x1C17F20

Method: System.Boolean IsTileCompatible()

Disassembly:
	0x03A59C44 LDR X1, [X8 + 0x220]
	0x03A59C48 BLR X9

ISIL:
	001 Move W0, W31
	002 Return X0

Method: System.Void .ctor()

Disassembly:
	0x03A59C4C ADRP X8, 0x69A000
	0x03A59C50 LDR X8, [X8 + 0x598]
	0x03A59C54 MOV X19, X0
	0x03A59C58 LDR X8, [X8]
	0x03A59C5C LDR W9, [X8 + 0xE0]
	0x03A59C60 CBNZ W9, 0x3A59C6C
	0x03A59C64 MOV X0, X8
	0x03A59C68 BL 0x1C16DFC
	0x03A59C6C MOV X0, X19
	0x03A59C70 LDP X20, X19, [X31 + 0x10]
	0x03A59C74 MOV X1, X31
	0x03A59C78 MOV X2, X31
	0x03A59C7C LDR X30, [X31], #0x20
	0x03A59C80 B 0x3C354F8
	0x03A59C84 MOV W0, W31
	0x03A59C88 B 0x3A59C90
	0x03A59C8C MOVZ W0, 0x1
	0x03A59C90 LDP X20, X19, [X31 + 0x10]
	0x03A59C94 LDR X30, [X31], #0x20
	0x03A59C98 RET
	0x03A59C9C BL 0x1C16F20
	0x03A59CA0 MOVZ W0, 0x1
	0x03A59CA4 RET
	0x03A59CA8 STP X30, X23, [X31 - 0x30]!
	0x03A59CAC STP X22, X21, [X31 + 0x10]
	0x03A59CB0 STP X20, X19, [X31 + 0x20]
	0x03A59CB4 ADRP X20, 0x989000
	0x03A59CB8 ADRP X23, 0x6FD000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x98A000
	006 Move X21, 0x6FE000
	007 Move W8, [X20+503]
	008 Move X21, [X21+168]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x6FE000
	015 Move X0, [X0+168]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+503], W8
	019 Move X0, [X21]
	020 Call 0x1C17F10
	021 Move S0, W31
	022 Move S1, W31
	023 Move S2, 1
	024 Move W1, W31
	025 Move X2, X31
	026 Move X20, X0
	027 Call ClampedFloatParameter..ctor, X0, V0, V1, V2, X1
	028 Move [X19+56], X20
	029 Move X0, X19
	030 Move X20, [X31+16]
	031 Move X19, [X31+24]
	032 Move X1, X31
	033 Move X30, [X31+32]
	034 Move X21, [X31+40]
	035 Call VolumeComponent..ctor, X0
	036 Return 

