Type: UnityEngine.Rendering.Universal.LibTessDotNet.MeshUtils/Vertex

Method: System.Void Reset()

Disassembly:
	0x03A97C50 LDR X1, [X8 + 0x40]
	0x03A97C54 BL 0x1C16E00
	0x03A97C58 CBZ X0, 0x3A97DA4
	0x03A97C5C LDR W8, [X21 + 0x18]
	0x03A97C60 CBZ W8, 0x3A97D9C
	0x03A97C64 STR X24, [X21 + 0x20]
	0x03A97C68 CBZ X23, 0x3A97DA0
	0x03A97C6C LDR X23, [X23 + 0x48]
	0x03A97C70 CBZ X23, 0x3A97C8C
	0x03A97C74 LDR X8, [X21]
	0x03A97C78 MOV X0, X23
	0x03A97C7C LDR X1, [X8 + 0x40]
	0x03A97C80 BL 0x1C16E00
	0x03A97C84 CBZ X0, 0x3A97DA4
	0x03A97C88 LDR W8, [X21 + 0x18]
	0x03A97C8C CMP W8, 0x1
	0x03A97C90 B.LS 0x3A97D9C
	0x03A97C94 STR X23, [X21 + 0x28]
	0x03A97C98 CBZ X22, 0x3A97DA0
	0x03A97C9C LDR X22, [X22 + 0x48]
	0x03A97CA0 CBZ X22, 0x3A97CBC
	0x03A97CA4 LDR X8, [X21]
	0x03A97CA8 MOV X0, X22
	0x03A97CAC LDR X1, [X8 + 0x40]
	0x03A97CB0 BL 0x1C16E00
	0x03A97CB4 CBZ X0, 0x3A97DA4
	0x03A97CB8 LDR W8, [X21 + 0x18]
	0x03A97CBC CMP W8, 0x2
	0x03A97CC0 B.LS 0x3A97D9C
	0x03A97CC4 STR X22, [X21 + 0x30]
	0x03A97CC8 CBZ X20, 0x3A97DA0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x94C000
	006 Move X20, 0x6C1000
	007 Move W8, [X21+951]
	008 Move X20, [X20+1592]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x6C1000
	015 Move X0, [X0+1592]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+951], W8
	019 Move [X19+16], X31
	020 Move [X19+24], X31
	021 Move [X19+32], X31
	022 Move X0, [X20]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {28}
	026 Call 0x1C17DFC
	027 Move X0, [X20]
	028 Move X8, [X0+184]
	029 Move W9, [X8+8]
	030 Move X8, [X8]
	031 Move [X19+72], X31
	032 Move [X19+60], X31
	033 Move [X19+48], W9
	034 Move [X19+40], X8
	035 Move [X19+52], X31
	036 Move X20, [X31+16]
	037 Move X19, [X31+24]
	038 Move X30, [X31+32]
	039 Move X21, [X31+40]
	040 Return 

Method: System.Void .ctor()

Disassembly:
	0x03A97CCC LDR X20, [X20 + 0x48]
	0x03A97CD0 CBZ X20, 0x3A97CEC
	0x03A97CD4 LDR X8, [X21]
	0x03A97CD8 MOV X0, X20
	0x03A97CDC LDR X1, [X8 + 0x40]
	0x03A97CE0 BL 0x1C16E00
	0x03A97CE4 CBZ X0, 0x3A97DA4
	0x03A97CE8 LDR W8, [X21 + 0x18]
	0x03A97CEC CMP W8, 0x3
	0x03A97CF0 B.LS 0x3A97D9C
	0x03A97CF4 ADRP X8, 0x65C000
	0x03A97CF8 LDR X8, [X8 + 0x638]
	0x03A97CFC STR X20, [X21 + 0x38]
	0x03A97D00 MOVZ W1, 0x4
	0x03A97D04 LDR X0, [X8]
	0x03A97D08 BL 0x1C16D6C
	0x03A97D0C CBZ X0, 0x3A97DA0
	0x03A97D10 LDR W8, [X0 + 0x18]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x94C000
	006 Move X21, 0x6C1000
	007 Move W8, [X20+952]
	008 Move X21, [X21+1600]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x6C1000
	015 Move X0, [X0+1600]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+952], W8
	019 Move X1, [X21]
	020 Move X0, X19
	021 Move X20, [X31+16]
	022 Move X19, [X31+24]
	023 Move X30, [X31+32]
	024 Move X21, [X31+40]
	025 Call 0x24A806C, X0
	026 Return 

