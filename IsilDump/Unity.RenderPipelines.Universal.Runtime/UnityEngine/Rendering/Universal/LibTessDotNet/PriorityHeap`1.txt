Type: UnityEngine.Rendering.Universal.LibTessDotNet.PriorityHeap`1

Method: System.Boolean get_Empty()

Disassembly:
	0x024B3B60 BL 0x1C5C788
	0x024B3B64 B 0x24B3B74
	0x024B3B68 LDRSW X9, [X10]
	0x024B3B6C ADD X8, X8, X9, 0x4, LSL

ISIL:
	001 Move W8, [X0+40]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 NotImplemented "Instruction CSET not yet implemented."
	004 Return X0

Method: System.Void .ctor(System.Int32 initialSize, UnityEngine.Rendering.Universal.LibTessDotNet.PriorityHeap`1/LessOrEqual<TValue> leq)

Disassembly:
	0x024B3B70 ADD X0, X8, 0x138
	0x024B3B74 LDP X8, X1, [X0]
	0x024B3B78 MOV X0, X21
	0x024B3B7C BLR X8
	0x024B3B80 CBNZ X22, 0x24B3BBC
	0x024B3B84 LDR X0, [X19 + 0x10]
	0x024B3B88 CBZ X0, 0x24B3BB4
	0x024B3B8C LDR X8, [X20 + 0x20]
	0x024B3B90 LDR X8, [X8 + 0xC0]
	0x024B3B94 LDR X1, [X8 + 0xC8]
	0x024B3B98 BL 0x25EF6B0
	0x024B3B9C STR W31, [X19 + 0x18]
	0x024B3BA0 LDP X20, X19, [X31 + 0x20]
	0x024B3BA4 LDP X22, X21, [X31 + 0x10]
	0x024B3BA8 LDP X30, X23, [X31], #0x30
	0x024B3BAC RET
	0x024B3BB0 BL 0x1C16F20
	0x024B3BB4 BL 0x1C16F20
	0x024B3BB8 BL 0x1C16F20
	0x024B3BBC MOV X0, X22
	0x024B3BC0 BL 0x1C16F18
	0x024B3BC4 B 0x24B3BD0
	0x024B3BC8 B 0x24B3BD0
	0x024B3BCC B 0x24B3BD0
	0x024B3BD0 CMP W1, 0x1
	0x024B3BD4 B.NE 0x24B3BE8
	0x024B3BD8 BL 0x3EB1AD0
	0x024B3BDC LDR X22, [X0]
	0x024B3BE0 BL 0x3EB1AE0
	0x024B3BE4 B 0x24B3B24
	0x024B3BE8 MOV X19, X0
	0x024B3BEC MOV X22, X31
	0x024B3BF0 B 0x24B3BF8
	0x024B3BF4 MOV X19, X0
	0x024B3BF8 CBZ X21, 0x24B3C54
	0x024B3BFC LDR X8, [X21]
	0x024B3C00 LDR X1, [X23]
	0x024B3C04 LDRH W9, [X8 + 0x12E]
	0x024B3C08 CBZ X9, 0x24B3C2C
	0x024B3C0C LDR X10, [X8 + 0xB0]
	0x024B3C10 ADD X10, X10, 0x8
	0x024B3C14 LDUR X11, [X10 - 0x8]
	0x024B3C18 CMP X11, X1
	0x024B3C1C B.EQ 0x24B3C3C
	0x024B3C20 SUBS X9, X9, 0x1
	0x024B3C24 ADD X10, X10, 0x10
	0x024B3C28 B.NE 0x24B3C14
	0x024B3C2C MOV X0, X21
	0x024B3C30 MOV W2, W31
	0x024B3C34 BL 0x1C5C788
	0x024B3C38 B 0x24B3C48
	0x024B3C3C LDRSW X9, [X10]
	0x024B3C40 ADD X8, X8, X9, 0x4, LSL
	0x024B3C44 ADD X0, X8, 0x138
	0x024B3C48 LDP X8, X1, [X0]
	0x024B3C4C MOV X0, X21
	0x024B3C50 BLR X8
	0x024B3C54 CBNZ X22, 0x24B3C60
	0x024B3C58 MOV X0, X19
	0x024B3C5C BL 0x1D2C690
	0x024B3C60 MOV X0, X22
	0x024B3C64 BL 0x1C16F18
	0x024B3C68 BL 0x1990590
	0x024B3C6C SUB X31, X31, 0xB0
	0x024B3C70 STP X30, X25, [X31 + 0x70]
	0x024B3C74 STP X24, X23, [X31 + 0x80]
	0x024B3C78 STP X22, X21, [X31 + 0x90]
	0x024B3C7C STP X20, X19, [X31 + 0xA0]
	0x024B3C80 ADRP X20, 0x1F26000
	0x024B3C84 LDRB W8, [X20 + 0xBD7]
	0x024B3C88 MOV X19, X1
	0x024B3C8C MOV X21, X0
	0x024B3C90 TBNZ X8, 0x0, 0x24B3CB4
	0x024B3C94 ADRP X0, 0x1C40000
	0x024B3C98 LDR X0, [X0 + 0xE00]
	0x024B3C9C BL 0x1C16CF4
	0x024B3CA0 ADRP X0, 0x1C40000
	0x024B3CA4 LDR X0, [X0 + 0xE18]
	0x024B3CA8 BL 0x1C16CF4
	0x024B3CAC MOVZ W8, 0x1
	0x024B3CB0 STRB W8, [X20 + 0xBD7]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0x1F27000
	009 Move X23, 0x1C42000
	010 Move W8, [X24+3027]
	011 Move X23, [X23+3672]
	012 Move X19, X3
	013 Move X20, X2
	014 Move W22, W1
	015 Move X21, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {25}
	020 Move X0, 0x1C42000
	021 Move X0, [X0+3672]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X24+3027], W8
	025 Move X0, X21
	026 Move X1, X31
	027 Call Object..ctor, X0
	028 Move [X21+16], X20
	029 Move X0, [X23]
	030 Add W20, W22, 1
	031 Move W1, W20
	032 Call 0x1C17D6C
	033 Move [X21+24], X0
	034 Move X8, [X19+32]
	035 Move X8, [X8+192]
	036 Move X0, [X8+16]
	037 Move W8, [X0+309]
	038 Move TEMP, X8
	039 And TEMP, TEMP, 1
	040 Compare TEMP, 1
	041 JumpIfEqual {43}
	042 Call 0x1C5D684
	043 Move W1, W20
	044 Call 0x1C17D6C
	045 Move X8, [X21+24]
	046 Move [X21+32], X0
	047 Move [X21+40], W31
	048 Move [X21+44], W22
	049 Move [X21+48], W31
	050 Move [X21+52], W31
	051 Compare X8, 0
	052 JumpIfEqual {95}
	053 Move W9, [X8+24]
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Move W9, 1
	056 Move [X8+36], W9
	057 Move X8, [X19+32]
	058 Move X20, X0
	059 Move X8, [X8+192]
	060 Move X0, [X8+32]
	061 Move W8, [X0+309]
	062 Move TEMP, X8
	063 And TEMP, TEMP, 1
	064 Compare TEMP, 1
	065 JumpIfEqual {67}
	066 Call 0x1C5D684
	067 Call 0x1C17F10
	068 Move X8, [X19+32]
	069 Move X19, X0
	070 Move X8, [X8+192]
	071 Move X1, [X8+40]
	072 Call 0x2D57D7C, X0
	073 Compare X19, 0
	074 JumpIfEqual {95}
	075 Move [X19+16], X31
	076 Compare X20, 0
	077 JumpIfEqual {95}
	078 Move X8, [X20]
	079 Move X0, X19
	080 Move X1, [X8+64]
	081 Call 0x1C17E00
	082 Compare X0, 0
	083 JumpIfEqual {97}
	084 Move W8, [X20+24]
	085 NotImplemented "Instruction CMP not yet implemented."
	086 Move [X20+40], X19
	087 Move X20, [X31+48]
	088 Move X19, [X31+56]
	089 Move X22, [X31+32]
	090 Move X21, [X31+40]
	091 Move X24, [X31+16]
	092 Move X23, [X31+24]
	093 Move X30, [X31+64]
	094 Return 
	095 Call 0x1C17F20
	096 Call 0x1C17F28
	097 Call 0x1C17F44
	098 Move X1, X31
	099 Call 0x1C17DEC

Method: System.Void FloatDown(System.Int32 curr)

Disassembly:
	0x024B3CB4 STP X31, X31, [X31 + 0x50]
	0x024B3CB8 STR X31, [X31 + 0x60]
	0x024B3CBC LDR X8, [X19 + 0x20]
	0x024B3CC0 LDR X8, [X8 + 0xC0]
	0x024B3CC4 LDR X0, [X8 + 0x20]
	0x024B3CC8 LDRB W8, [X0 + 0x135]
	0x024B3CCC TBNZ X8, 0x0, 0x24B3CD4
	0x024B3CD0 BL 0x1C5C684
	0x024B3CD4 BL 0x1C16F10
	0x024B3CD8 LDR X8, [X19 + 0x20]
	0x024B3CDC MOV X20, X0
	0x024B3CE0 LDR X8, [X8 + 0xC0]
	0x024B3CE4 LDR X1, [X8 + 0x28]
	0x024B3CE8 BL 0x24F1248
	0x024B3CEC LDR X0, [X21 + 0x10]
	0x024B3CF0 CBZ X0, 0x24B4038
	0x024B3CF4 LDR X8, [X19 + 0x20]
	0x024B3CF8 LDR X8, [X8 + 0xC0]
	0x024B3CFC LDR X1, [X8 + 0x68]
	0x024B3D00 BL 0x25EF53C
	0x024B3D04 CBZ X0, 0x24B4038
	0x024B3D08 LDR X8, [X19 + 0x20]
	0x024B3D0C MOV X21, X0
	0x024B3D10 LDR X8, [X8 + 0xC0]
	0x024B3D14 LDR X1, [X8 + 0xA0]
	0x024B3D18 LDRB W8, [X1 + 0x135]
	0x024B3D1C TBNZ X8, 0x0, 0x24B3D2C
	0x024B3D20 MOV X0, X1
	0x024B3D24 BL 0x1C5C684
	0x024B3D28 MOV X1, X0
	0x024B3D2C LDR X8, [X21]
	0x024B3D30 LDRH W9, [X8 + 0x12E]
	0x024B3D34 CBZ X9, 0x24B3D58
	0x024B3D38 LDR X10, [X8 + 0xB0]
	0x024B3D3C ADD X10, X10, 0x8
	0x024B3D40 LDUR X11, [X10 - 0x8]
	0x024B3D44 CMP X11, X1
	0x024B3D48 B.EQ 0x24B3D68
	0x024B3D4C SUBS X9, X9, 0x1
	0x024B3D50 ADD X10, X10, 0x10
	0x024B3D54 B.NE 0x24B3D40
	0x024B3D58 MOV X0, X21
	0x024B3D5C MOV W2, W31
	0x024B3D60 BL 0x1C5C788
	0x024B3D64 B 0x24B3D74
	0x024B3D68 LDRSW X9, [X10]
	0x024B3D6C ADD X8, X8, X9, 0x4, LSL
	0x024B3D70 ADD X0, X8, 0x138
	0x024B3D74 LDP X8, X1, [X0]
	0x024B3D78 ADRP X24, 0x1C40000
	0x024B3D7C LDR X24, [X24 + 0xE00]
	0x024B3D80 MOV X0, X21
	0x024B3D84 BLR X8
	0x024B3D88 MOV X21, X0
	0x024B3D8C CBZ X0, 0x24B403C
	0x024B3D90 ADRP X25, 0x1C40000
	0x024B3D94 LDR X25, [X25 + 0xE18]
	0x024B3D98 LDR X8, [X21]
	0x024B3D9C LDR X1, [X25]
	0x024B3DA0 LDRH W9, [X8 + 0x12E]
	0x024B3DA4 CBZ X9, 0x24B3DC8
	0x024B3DA8 LDR X10, [X8 + 0xB0]
	0x024B3DAC ADD X10, X10, 0x8
	0x024B3DB0 LDUR X11, [X10 - 0x8]
	0x024B3DB4 CMP X11, X1
	0x024B3DB8 B.EQ 0x24B3DD8
	0x024B3DBC SUBS X9, X9, 0x1
	0x024B3DC0 ADD X10, X10, 0x10
	0x024B3DC4 B.NE 0x24B3DB0
	0x024B3DC8 MOV X0, X21
	0x024B3DCC MOV W2, W31
	0x024B3DD0 BL 0x1C5C788
	0x024B3DD4 B 0x24B3DE4
	0x024B3DD8 LDRSW X9, [X10]
	0x024B3DDC ADD X8, X8, X9, 0x4, LSL
	0x024B3DE0 ADD X0, X8, 0x138
	0x024B3DE4 LDP X8, X1, [X0]
	0x024B3DE8 MOV X0, X21
	0x024B3DEC BLR X8
	0x024B3DF0 TBZ X0, 0x0, 0x24B3F2C
	0x024B3DF4 LDR X8, [X19 + 0x20]
	0x024B3DF8 LDR X8, [X8 + 0xC0]
	0x024B3DFC LDR X1, [X8 + 0xB0]
	0x024B3E00 LDRB W8, [X1 + 0x135]
	0x024B3E04 TBNZ X8, 0x0, 0x24B3E14
	0x024B3E08 MOV X0, X1
	0x024B3E0C BL 0x1C5C684
	0x024B3E10 MOV X1, X0
	0x024B3E14 LDR X8, [X21]
	0x024B3E18 LDRH W9, [X8 + 0x12E]
	0x024B3E1C CBZ X9, 0x24B3E40
	0x024B3E20 LDR X10, [X8 + 0xB0]
	0x024B3E24 ADD X10, X10, 0x8
	0x024B3E28 LDUR X11, [X10 - 0x8]
	0x024B3E2C CMP X11, X1
	0x024B3E30 B.EQ 0x24B3E50
	0x024B3E34 SUBS X9, X9, 0x1
	0x024B3E38 ADD X10, X10, 0x10
	0x024B3E3C B.NE 0x24B3E28
	0x024B3E40 MOV X0, X21
	0x024B3E44 MOV W2, W31
	0x024B3E48 BL 0x1C5C788
	0x024B3E4C B 0x24B3E5C
	0x024B3E50 LDRSW X9, [X10]
	0x024B3E54 ADD X8, X8, X9, 0x4, LSL
	0x024B3E58 ADD X0, X8, 0x138
	0x024B3E5C LDP X8, X1, [X0]
	0x024B3E60 MOV X0, X21
	0x024B3E64 BLR X8
	0x024B3E68 CBZ X0, 0x24B4034
	0x024B3E6C LDR X8, [X19 + 0x20]
	0x024B3E70 LDR X8, [X8 + 0xC0]
	0x024B3E74 LDR X1, [X8 + 0xD0]
	0x024B3E78 ADD X8, X31, 0x30
	0x024B3E7C BL 0x24F17FC
	0x024B3E80 LDR V0, [X31 + 0x3]
	0x024B3E84 LDR X8, [X31 + 0x40]
	0x024B3E88 STR V0, [X31 + 0x5]
	0x024B3E8C STR X8, [X31 + 0x60]
	0x024B3E90 LDR X8, [X19 + 0x20]
	0x024B3E94 LDR X8, [X8 + 0xC0]
	0x024B3E98 LDR X1, [X8 + 0xF0]
	0x024B3E9C ADD X0, X31, 0x50
	0x024B3EA0 BL 0x2BC471C

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X8, [X0+24]
	010 Compare X8, 0
	011 JumpIfEqual {137}
	012 Move X9, [X8+24]
	013 Move W19, W1
	014 NotImplemented "Instruction CMP not yet implemented."
	015 Add X10, X8, W19
	016 Move W22, [X10+32]
	017 Move X20, X0
	018 Move X21, W22
	019 Move W10, [X20+40]
	020 Move W23, W19
	021 ShiftRight W23, 31
	022 And W23, W23, 0x3FFFFFFF
	023 NotImplemented "Instruction CMP not yet implemented."
	024 Move X10, W23
	025 Or X24, X10, 1
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move X11, [X20+32]
	028 Compare X11, 0
	029 JumpIfEqual {137}
	030 Add X12, X8, X24
	031 NotImplemented "Instruction LDRSW not yet implemented."
	032 Move W13, [X11+24]
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Add X12, X11, X12
	035 Move X12, [X12+32]
	036 Compare X12, 0
	037 JumpIfEqual {137}
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Add X8, X8, X10
	040 NotImplemented "Instruction LDRSW not yet implemented."
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Add X8, X11, X8
	043 Move X8, [X8+32]
	044 Compare X8, 0
	045 JumpIfEqual {137}
	046 Move X9, [X20+16]
	047 Compare X9, 0
	048 JumpIfEqual {137}
	049 Move X1, [X12+16]
	050 Move X2, [X8+16]
	051 Move X8, [X9+24]
	052 Move X0, [X9+64]
	053 Move X3, [X9+40]
	054 NotImplemented "Instruction BLR not yet implemented."
	055 Move X8, [X20+24]
	056 And W31, W0, 1
	057 NotImplemented "Instruction CSEL not yet implemented."
	058 Compare X8, 0
	059 JumpIfEqual {137}
	060 Move W9, [X8+24]
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Move W9, [X20+40]
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Move X9, [X20+32]
	065 Compare X9, 0
	066 JumpIfEqual {137}
	067 Move W11, [X9+24]
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Add X10, X9, X21
	070 Move X10, [X10+32]
	071 Compare X10, 0
	072 JumpIfEqual {137}
	073 Add X8, X8, W23
	074 Move W24, [X8+32]
	075 NotImplemented "Instruction CMP not yet implemented."
	076 Move X25, W24
	077 Add X8, X9, X25
	078 Move X8, [X8+32]
	079 Compare X8, 0
	080 JumpIfEqual {137}
	081 Move X9, [X20+16]
	082 Compare X9, 0
	083 JumpIfEqual {137}
	084 Move X1, [X10+16]
	085 Move X2, [X8+16]
	086 Move X8, [X9+24]
	087 Move X0, [X9+64]
	088 Move X3, [X9+40]
	089 NotImplemented "Instruction BLR not yet implemented."
	090 Move X8, [X20+24]
	091 Move TEMP, X0
	092 And TEMP, TEMP, 1
	093 Compare TEMP, 1
	094 JumpIfEqual {112}
	095 Compare X8, 0
	096 JumpIfEqual {137}
	097 Move X9, [X8+24]
	098 NotImplemented "Instruction CMP not yet implemented."
	099 Add X10, X8, W19
	100 Move [X10+32], W24
	101 Move X10, [X20+32]
	102 Compare X10, 0
	103 JumpIfEqual {137}
	104 Move W11, [X10+24]
	105 NotImplemented "Instruction CMP not yet implemented."
	106 Add X10, X10, X25
	107 Move X10, [X10+32]
	108 Compare X10, 0
	109 JumpIfEqual {137}
	110 Move [X10+24], W19
	111 Move W19, W23
	112 Compare X8, 0
	113 JumpIfEqual {137}
	114 Move W9, [X8+24]
	115 NotImplemented "Instruction CMP not yet implemented."
	116 Add X8, X8, W19
	117 Move [X8+32], W22
	118 Move X8, [X20+32]
	119 Compare X8, 0
	120 JumpIfEqual {137}
	121 Move W9, [X8+24]
	122 NotImplemented "Instruction CMP not yet implemented."
	123 Add X8, X8, X21
	124 Move X8, [X8+32]
	125 Compare X8, 0
	126 JumpIfEqual {137}
	127 Move [X8+24], W19
	128 Move X20, [X31+48]
	129 Move X19, [X31+56]
	130 Move X22, [X31+32]
	131 Move X21, [X31+40]
	132 Move X24, [X31+16]
	133 Move X23, [X31+24]
	134 Move X30, [X31+64]
	135 Move X25, [X31+72]
	136 Return 
	137 Call 0x1C17F20
	138 Call 0x1C17F28

Method: System.Void FloatUp(System.Int32 curr)

Disassembly:
	0x024B3EA4 TBZ X0, 0x0, 0x24B3EDC
	0x024B3EA8 LDR X8, [X19 + 0x20]
	0x024B3EAC LDR X8, [X8 + 0xC0]
	0x024B3EB0 LDR X1, [X8 + 0xE0]
	0x024B3EB4 ADD X0, X31, 0x50
	0x024B3EB8 BL 0x2BC4808
	0x024B3EBC MOV X1, X0
	0x024B3EC0 CBZ X20, 0x24B3EFC
	0x024B3EC4 LDR X8, [X19 + 0x20]
	0x024B3EC8 LDR X8, [X8 + 0xC0]
	0x024B3ECC LDR X2, [X8 + 0x48]
	0x024B3ED0 MOV X0, X20
	0x024B3ED4 BL 0x24F1750
	0x024B3ED8 B 0x24B3E90
	0x024B3EDC MOV X23, X31
	0x024B3EE0 LDR X8, [X19 + 0x20]
	0x024B3EE4 LDR X8, [X8 + 0xC0]
	0x024B3EE8 LDR X1, [X8 + 0xF8]
	0x024B3EEC ADD X0, X31, 0x50
	0x024B3EF0 BL 0x2BC470C
	0x024B3EF4 CBZ X23, 0x24B3D98
	0x024B3EF8 B 0x24B402C
	0x024B3EFC BL 0x1C16F20
	0x024B3F00 B 0x24B4048
	0x024B3F04 B 0x24B3F10
	0x024B3F08 B 0x24B3F10
	0x024B3F0C B 0x24B3F10
	0x024B3F10 MOV X22, X1
	0x024B3F14 CMP W22, 0x1
	0x024B3F18 B.NE 0x24B4000
	0x024B3F1C BL 0x3EB1AD0
	0x024B3F20 LDR X23, [X0]
	0x024B3F24 BL 0x3EB1AE0
	0x024B3F28 B 0x24B3EE0
	0x024B3F2C MOV X22, X31
	0x024B3F30 MOVZ W23, 0x6
	0x024B3F34 CBZ X21, 0x24B3F90
	0x024B3F38 LDR X8, [X21]
	0x024B3F3C LDR X1, [X24]
	0x024B3F40 LDRH W9, [X8 + 0x12E]
	0x024B3F44 CBZ X9, 0x24B3F68
	0x024B3F48 LDR X10, [X8 + 0xB0]
	0x024B3F4C ADD X10, X10, 0x8
	0x024B3F50 LDUR X11, [X10 - 0x8]
	0x024B3F54 CMP X11, X1
	0x024B3F58 B.EQ 0x24B3F78
	0x024B3F5C SUBS X9, X9, 0x1
	0x024B3F60 ADD X10, X10, 0x10
	0x024B3F64 B.NE 0x24B3F50
	0x024B3F68 MOV X0, X21
	0x024B3F6C MOV W2, W31
	0x024B3F70 BL 0x1C5C788
	0x024B3F74 B 0x24B3F84
	0x024B3F78 LDRSW X9, [X10]
	0x024B3F7C ADD X8, X8, X9, 0x4, LSL
	0x024B3F80 ADD X0, X8, 0x138
	0x024B3F84 LDP X8, X1, [X0]
	0x024B3F88 MOV X0, X21
	0x024B3F8C BLR X8
	0x024B3F90 CBNZ X22, 0x24B4040
	0x024B3F94 CMP W23, 0x6
	0x024B3F98 B.EQ 0x24B3FA0
	0x024B3F9C CBNZ W23, 0x24B3FE8
	0x024B3FA0 CBZ X20, 0x24B4038
	0x024B3FA4 LDR X8, [X19 + 0x20]
	0x024B3FA8 MOV X0, X20
	0x024B3FAC LDR X8, [X8 + 0xC0]
	0x024B3FB0 LDR X1, [X8 + 0xD0]
	0x024B3FB4 ADD X8, X31, 0x10
	0x024B3FB8 BL 0x24F17FC
	0x024B3FBC LDR X8, [X31 + 0x20]
	0x024B3FC0 LDR V0, [X31 + 0x1]
	0x024B3FC4 ADD X1, X31, 0x10
	0x024B3FC8 STR X8, [X31 + 0x40]
	0x024B3FCC STR V0, [X31 + 0x3]
	0x024B3FD0 STR V0, [X31 + 0x1]
	0x024B3FD4 STR X8, [X31 + 0x20]
	0x024B3FD8 LDR X8, [X19 + 0x20]
	0x024B3FDC LDR X8, [X8 + 0xC0]
	0x024B3FE0 LDR X0, [X8 + 0xD8]
	0x024B3FE4 BL 0x1C16E04
	0x024B3FE8 LDP X20, X19, [X31 + 0xA0]
	0x024B3FEC LDP X22, X21, [X31 + 0x90]
	0x024B3FF0 LDP X24, X23, [X31 + 0x80]
	0x024B3FF4 LDP X30, X25, [X31 + 0x70]
	0x024B3FF8 ADD X31, X31, 0xB0
	0x024B3FFC RET

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X8, [X0+24]
	010 Compare X8, 0
	011 JumpIfEqual {99}
	012 Move X9, [X8+24]
	013 Move W19, W1
	014 NotImplemented "Instruction CMP not yet implemented."
	015 NotImplemented "Instruction SBFM not yet implemented."
	016 NotImplemented "Instruction CMP not yet implemented."
	017 Add X9, X8, W19
	018 Move W22, [X9+32]
	019 Move X20, X0
	020 Move X21, W22
	021 Compare W10, 0
	022 JumpIfEqual {76}
	023 Move X9, [X20+32]
	024 Compare X9, 0
	025 JumpIfEqual {99}
	026 Add X8, X8, W10
	027 Move W23, W10
	028 Move W24, [X8+32]
	029 Move W10, [X9+24]
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move X25, W24
	032 Add X8, X9, X25
	033 Move X8, [X8+32]
	034 Compare X8, 0
	035 JumpIfEqual {99}
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Add X9, X9, X21
	038 Move X9, [X9+32]
	039 Compare X9, 0
	040 JumpIfEqual {99}
	041 Move X10, [X20+16]
	042 Compare X10, 0
	043 JumpIfEqual {99}
	044 Move X1, [X8+16]
	045 Move X2, [X9+16]
	046 Move X8, [X10+24]
	047 Move X0, [X10+64]
	048 Move X3, [X10+40]
	049 NotImplemented "Instruction BLR not yet implemented."
	050 Move X8, [X20+24]
	051 Move TEMP, X0
	052 And TEMP, TEMP, 1
	053 Compare TEMP, 1
	054 JumpIfEqual {74}
	055 Compare X8, 0
	056 JumpIfEqual {99}
	057 Move X9, [X8+24]
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Add X10, X8, W19
	060 Move [X10+32], W24
	061 Move X10, [X20+32]
	062 Compare X10, 0
	063 JumpIfEqual {99}
	064 Move W11, [X10+24]
	065 NotImplemented "Instruction CMP not yet implemented."
	066 Add X10, X10, X25
	067 Move X11, [X10+32]
	068 Compare X11, 0
	069 JumpIfEqual {99}
	070 NotImplemented "Instruction SBFM not yet implemented."
	071 NotImplemented "Instruction CMP not yet implemented."
	072 Move [X11+24], W19
	073 Move W19, W23
	074 Compare X8, 0
	075 JumpIfEqual {99}
	076 Move W9, [X8+24]
	077 NotImplemented "Instruction CMP not yet implemented."
	078 Add X8, X8, W19
	079 Move [X8+32], W22
	080 Move X8, [X20+32]
	081 Compare X8, 0
	082 JumpIfEqual {99}
	083 Move W9, [X8+24]
	084 NotImplemented "Instruction CMP not yet implemented."
	085 Add X8, X8, X21
	086 Move X8, [X8+32]
	087 Compare X8, 0
	088 JumpIfEqual {99}
	089 Move [X8+24], W19
	090 Move X20, [X31+48]
	091 Move X19, [X31+56]
	092 Move X22, [X31+32]
	093 Move X21, [X31+40]
	094 Move X24, [X31+16]
	095 Move X23, [X31+24]
	096 Move X30, [X31+64]
	097 Move X25, [X31+72]
	098 Return 
	099 Call 0x1C17F20
	100 Call 0x1C17F28

Method: System.Void Init()

Disassembly:
	0x024B4000 STR X0, [X31 + 0x8]
	0x024B4004 MOV X23, X31
	0x024B4008 LDR X8, [X19 + 0x20]
	0x024B400C LDR X8, [X8 + 0xC0]
	0x024B4010 LDR X1, [X8 + 0xF8]
	0x024B4014 ADD X0, X31, 0x50
	0x024B4018 BL 0x2BC470C
	0x024B401C LDR X0, [X31 + 0x8]
	0x024B4020 CBZ X23, 0x24B4070
	0x024B4024 MOV X0, X23
	0x024B4028 BL 0x1C16F18
	0x024B402C MOV X0, X23
	0x024B4030 BL 0x1C16F18
	0x024B4034 BL 0x1C16F20
	0x024B4038 BL 0x1C16F20
	0x024B403C BL 0x1C16F20
	0x024B4040 MOV X0, X22
	0x024B4044 BL 0x1C16F18
	0x024B4048 MOV X22, X1
	0x024B404C STR X0, [X31 + 0x8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move W20, [X0+40]
	006 Move X19, X0
	007 NotImplemented "Instruction CMP not yet implemented."
	008 Move X21, X1
	009 Move X8, [X21+32]
	010 Move X0, X19
	011 Move W1, W20
	012 Move X8, [X8+192]
	013 Move X2, [X8+64]
	014 Call 0x24B3CB4, X0, X1
	015 Subtract W20, W20, 1
	016 Move W8, 1
	017 Move [X19+52], W8
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 Return 

Method: UnityEngine.Rendering.Universal.LibTessDotNet.PQHandle Insert(TValue value)

Disassembly:
	0x024B4050 B 0x24B4008
	0x024B4054 B 0x24B406C
	0x024B4058 B 0x24B406C
	0x024B405C B 0x24B406C
	0x024B4060 B 0x24B406C
	0x024B4064 B 0x24B406C
	0x024B4068 B 0x24B406C
	0x024B406C MOV X22, X1
	0x024B4070 CMP W22, 0x1
	0x024B4074 B.NE 0x24B4090
	0x024B4078 BL 0x3EB1AD0
	0x024B407C LDR X22, [X0]
	0x024B4080 BL 0x3EB1AE0
	0x024B4084 MOV W23, W31
	0x024B4088 CBNZ X21, 0x24B3F38
	0x024B408C B 0x24B3F90
	0x024B4090 MOV X19, X0
	0x024B4094 MOV X22, X31
	0x024B4098 B 0x24B40A0
	0x024B409C MOV X19, X0
	0x024B40A0 CBZ X21, 0x24B40FC
	0x024B40A4 LDR X8, [X21]
	0x024B40A8 LDR X1, [X24]
	0x024B40AC LDRH W9, [X8 + 0x12E]
	0x024B40B0 CBZ X9, 0x24B40D4
	0x024B40B4 LDR X10, [X8 + 0xB0]
	0x024B40B8 ADD X10, X10, 0x8
	0x024B40BC LDUR X11, [X10 - 0x8]
	0x024B40C0 CMP X11, X1
	0x024B40C4 B.EQ 0x24B40E4
	0x024B40C8 SUBS X9, X9, 0x1
	0x024B40CC ADD X10, X10, 0x10
	0x024B40D0 B.NE 0x24B40BC
	0x024B40D4 MOV X0, X21
	0x024B40D8 MOV W2, W31
	0x024B40DC BL 0x1C5C788
	0x024B40E0 B 0x24B40F0
	0x024B40E4 LDRSW X9, [X10]
	0x024B40E8 ADD X8, X8, X9, 0x4, LSL
	0x024B40EC ADD X0, X8, 0x138
	0x024B40F0 LDP X8, X1, [X0]
	0x024B40F4 MOV X0, X21
	0x024B40F8 BLR X8
	0x024B40FC CBNZ X22, 0x24B4108
	0x024B4100 MOV X0, X19
	0x024B4104 BL 0x1D2C690
	0x024B4108 MOV X0, X22
	0x024B410C BL 0x1C16F18
	0x024B4110 BL 0x1990590
	0x024B4114 LDR X8, [X1 + 0x20]
	0x024B4118 LDR X8, [X8 + 0xC0]
	0x024B411C LDR X1, [X8 + 0x108]
	0x024B4120 B 0x24B3C6C
	0x024B4124 STR X30, [X31 - 0x10]!
	0x024B4128 LDR W8, [X0 + 0x30]
	0x024B412C CBZ W8, 0x24B4138
	0x024B4130 MOV W0, W31
	0x024B4134 B 0x24B414C
	0x024B4138 LDR X8, [X0 + 0x18]
	0x024B413C CBZ X8, 0x24B4154
	0x024B4140 LDR W8, [X8 + 0x28]
	0x024B4144 CMP W8, 0x0
	0x024B4148 CSET W0, EQ
	0x024B414C LDR X30, [X31], #0x10
	0x024B4150 RET
	0x024B4154 BL 0x1C16F20
	0x024B4158 STP X30, X23, [X31 - 0x30]!
	0x024B415C STP X22, X21, [X31 + 0x10]
	0x024B4160 STP X20, X19, [X31 + 0x20]
	0x024B4164 MOV W20, W1
	0x024B4168 MOV X1, X31
	0x024B416C MOV X21, X3
	0x024B4170 MOV X22, X2
	0x024B4174 MOV X19, X0
	0x024B4178 BL 0x33BDD8C
	0x024B417C STR X22, [X19 + 0x10]
	0x024B4180 LDR X8, [X21 + 0x20]
	0x024B4184 LDR X8, [X8 + 0xC0]
	0x024B4188 LDR X0, [X8 + 0x8]
	0x024B418C LDRB W8, [X0 + 0x135]
	0x024B4190 TBNZ X8, 0x0, 0x24B4198
	0x024B4194 BL 0x1C5C684
	0x024B4198 BL 0x1C16F10
	0x024B419C LDR X8, [X21 + 0x20]
	0x024B41A0 MOV W1, W20
	0x024B41A4 MOV X2, X22
	0x024B41A8 MOV X23, X0
	0x024B41AC LDR X8, [X8 + 0xC0]
	0x024B41B0 LDR X3, [X8 + 0x20]
	0x024B41B4 BL 0x24B2B70
	0x024B41B8 STR X23, [X19 + 0x18]
	0x024B41BC LDR X8, [X21 + 0x20]
	0x024B41C0 LDR X8, [X8 + 0xC0]
	0x024B41C4 LDR X0, [X8 + 0x28]
	0x024B41C8 LDRB W8, [X0 + 0x135]
	0x024B41CC TBNZ X8, 0x0, 0x24B41D4
	0x024B41D0 BL 0x1C5C684
	0x024B41D4 MOV W1, W20
	0x024B41D8 BL 0x1C16D6C
	0x024B41DC STR X0, [X19 + 0x20]
	0x024B41E0 STP W31, W20, [X19 + 0x30]
	0x024B41E4 STRB W31, [X19 + 0x38]
	0x024B41E8 LDP X20, X19, [X31 + 0x20]
	0x024B41EC LDP X22, X21, [X31 + 0x10]
	0x024B41F0 LDP X30, X23, [X31], #0x30
	0x024B41F4 RET
	0x024B41F8 LDR W8, [X1]
	0x024B41FC LDR W9, [X0]
	0x024B4200 STR W8, [X0]
	0x024B4204 STR W9, [X1]
	0x024B4208 RET
	0x024B420C SUB X31, X31, 0x90
	0x024B4210 STP X29, X30, [X31 + 0x30]
	0x024B4214 STP X28, X27, [X31 + 0x40]

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X21, 0x1F26000
	011 Move W8, [X21+3028]
	012 Move X19, X2
	013 Move X22, X1
	014 Move X20, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {24}
	019 Move X0, 0x1C69000
	020 Move X0, [X0+3792]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X21+3028], W8
	024 Move W9, [X20+40]
	025 Move W8, [X20+44]
	026 Add W21, W9, 1
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Move [X20+40], W21
	029 Move W9, W8
	030 ShiftRight W9, 31
	031 And W9, W9, 0x3FFFFFFF
	032 Move [X20+44], W9
	033 Move X9, 0x1C69000
	034 Move X9, [X9+3792]
	035 Move W1, 1
	036 Add X0, X20, 24
	037 NotImplemented "Instruction BFM not yet implemented."
	038 Move X2, [X9]
	039 Call Array.Resize, X0, X1
	040 Move X8, [X19+32]
	041 Move W9, [X20+44]
	042 Add X0, X20, 32
	043 Move X8, [X8+192]
	044 Add W1, W9, 1
	045 Move X2, [X8+72]
	046 Call Array.Resize, X0, X1
	047 Move W8, [X20+48]
	048 Move W24, W21
	049 Compare W8, 0
	050 JumpIfEqual {64}
	051 Move X9, [X20+32]
	052 Compare X9, 0
	053 JumpIfEqual {131}
	054 Move W10, [X9+24]
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Move X10, W8
	057 Add X9, X9, X10
	058 Move X9, [X9+32]
	059 Compare X9, 0
	060 JumpIfEqual {131}
	061 Move W9, [X9+24]
	062 Move W24, W8
	063 Move [X20+48], W9
	064 Move X8, [X20+24]
	065 Compare X8, 0
	066 JumpIfEqual {131}
	067 Move W9, [X8+24]
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Add X8, X8, W21
	070 Move [X8+32], W24
	071 Move X25, [X20+32]
	072 Compare X25, 0
	073 JumpIfEqual {131}
	074 Move W8, [X25+24]
	075 NotImplemented "Instruction CMP not yet implemented."
	076 Add X26, X25, W24
	077 Add X26, X26, 32
	078 Move X8, [X26]
	079 Compare X8, 0
	080 JumpIfEqual {83}
	081 Move [X8+24], W21
	082 Move [X8+16], X22
	083 Move X8, [X19+32]
	084 Move X8, [X8+192]
	085 Move X0, [X8+32]
	086 Move W8, [X0+309]
	087 Move TEMP, X8
	088 And TEMP, TEMP, 1
	089 Compare TEMP, 1
	090 JumpIfEqual {92}
	091 Call 0x1C5D684
	092 Call 0x1C17F10
	093 Move X8, [X19+32]
	094 Move X23, X0
	095 Move X8, [X8+192]
	096 Move X1, [X8+40]
	097 Call 0x2D57D7C, X0
	098 Compare X23, 0
	099 JumpIfEqual {131}
	100 Move [X23+16], X22
	101 Move [X23+24], W21
	102 Move X8, [X25]
	103 Move X0, X23
	104 Move X1, [X8+64]
	105 Call 0x1C17E00
	106 Compare X0, 0
	107 JumpIfEqual {133}
	108 Move W8, [X25+24]
	109 NotImplemented "Instruction CMP not yet implemented."
	110 Move [X26], X23
	111 Move W8, [X20+52]
	112 Compare W8, 0
	113 JumpIfEqual {120}
	114 Move X8, [X19+32]
	115 Move X0, X20
	116 Move W1, W21
	117 Move X8, [X8+192]
	118 Move X2, [X8+88]
	119 Call 0x24B3EA4, X0, X1
	120 Move W0, W24
	121 Move X20, [X31+64]
	122 Move X19, [X31+72]
	123 Move X22, [X31+48]
	124 Move X21, [X31+56]
	125 Move X24, [X31+32]
	126 Move X23, [X31+40]
	127 Move X26, [X31+16]
	128 Move X25, [X31+24]
	129 Move X30, [X31+80]
	130 Return X0
	131 Call 0x1C17F20
	132 Call 0x1C17F28
	133 Call 0x1C17F44
	134 Move X1, X31
	135 Call 0x1C17DEC

Method: TValue ExtractMin()

Disassembly:
	0x024B4218 STP X26, X25, [X31 + 0x50]
	0x024B421C STP X24, X23, [X31 + 0x60]
	0x024B4220 STP X22, X21, [X31 + 0x70]
	0x024B4224 STP X20, X19, [X31 + 0x80]
	0x024B4228 ADRP X20, 0x1F25000
	0x024B422C LDRB W8, [X20 + 0xBD8]
	0x024B4230 MOV X26, X1
	0x024B4234 MOV X19, X0
	0x024B4238 TBNZ X8, 0x0, 0x24B4250
	0x024B423C ADRP X0, 0x1C40000
	0x024B4240 LDR X0, [X0 + 0xE58]
	0x024B4244 BL 0x1C16CF4
	0x024B4248 MOVZ W8, 0x1
	0x024B424C STRB W8, [X20 + 0xBD8]
	0x024B4250 LDR X8, [X26 + 0x20]
	0x024B4254 ADRP X20, 0x1C40000
	0x024B4258 LDR X8, [X8 + 0xC0]
	0x024B425C LDR X0, [X8 + 0x38]
	0x024B4260 LDRB W8, [X0 + 0x135]
	0x024B4264 LDR X20, [X20 + 0xE58]
	0x024B4268 TBNZ X8, 0x0, 0x24B4270
	0x024B426C BL 0x1C5C684
	0x024B4270 BL 0x1C16F10
	0x024B4274 LDR X8, [X26 + 0x20]
	0x024B4278 MOV X23, X0
	0x024B427C LDR X8, [X8 + 0xC0]
	0x024B4280 LDR X1, [X8 + 0x40]
	0x024B4284 BL 0x2601D04
	0x024B4288 LDR W8, [X19 + 0x30]
	0x024B428C LDR X0, [X20]
	0x024B4290 ADD W1, W8, 0x1
	0x024B4294 SUB W21, W8, 0x1
	0x024B4298 BL 0x1C16D6C
	0x024B429C STR X0, [X19 + 0x28]
	0x024B42A0 TBNZ X21, 0x1F, 0x24B42CC
	0x024B42A4 CBZ X0, 0x24B4760
	0x024B42A8 LDR W8, [X0 + 0x18]
	0x024B42AC MOV W9, W31
	0x024B42B0 CMP W9, W8
	0x024B42B4 B.CS 0x24B475C
	0x024B42B8 ADD X10, X0, W9, 0x2, SXTW
	0x024B42BC STR W9, [X10 + 0x20]
	0x024B42C0 ADD W9, W9, 0x1
	0x024B42C4 CMP W9, W21
	0x024B42C8 B.LE 0x24B42B0
	0x024B42CC LDR X8, [X26 + 0x20]
	0x024B42D0 LDR X8, [X8 + 0xC0]
	0x024B42D4 LDR X0, [X8 + 0x48]
	0x024B42D8 LDRB W8, [X0 + 0x135]
	0x024B42DC TBNZ X8, 0x0, 0x24B42E4
	0x024B42E0 BL 0x1C5C684
	0x024B42E4 BL 0x1C16F10
	0x024B42E8 LDR X8, [X26 + 0x20]
	0x024B42EC MOV X22, X0
	0x024B42F0 LDR X8, [X8 + 0xC0]
	0x024B42F4 LDR X1, [X8 + 0x50]
	0x024B42F8 BL 0x25FFE84
	0x024B42FC CBZ X22, 0x24B4760
	0x024B4300 STP W31, W21, [X22 + 0x10]
	0x024B4304 CBZ X23, 0x24B4760
	0x024B4308 LDR X8, [X26 + 0x20]
	0x024B430C MOV X0, X23

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X11, [X0+24]
	004 Compare X11, 0
	005 JumpIfEqual {61}
	006 Move W14, [X11+24]
	007 NotImplemented "Instruction CMP not yet implemented."
	008 Move X12, [X0+32]
	009 Compare X12, 0
	010 JumpIfEqual {61}
	011 Move W8, [X11+36]
	012 Move W15, [X12+24]
	013 NotImplemented "Instruction CMP not yet implemented."
	014 Move X10, W8
	015 Add X9, X12, X10
	016 Move X13, [X9+32]
	017 Compare X13, 0
	018 JumpIfEqual {61}
	019 Move W16, [X0+40]
	020 Move X19, [X13+16]
	021 NotImplemented "Instruction CMP not yet implemented."
	022 NotImplemented "Instruction CSEL not yet implemented."
	023 NotImplemented "Instruction CMP not yet implemented."
	024 Add X14, X11, X16
	025 NotImplemented "Instruction LDRSW not yet implemented."
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move [X11+36], W14
	028 Add X11, X12, X14
	029 Move X11, [X11+32]
	030 Compare X11, 0
	031 JumpIfEqual {61}
	032 Move W12, 1
	033 Move [X11+24], W12
	034 Move [X13+16], X31
	035 Move X11, [X0+32]
	036 Compare X11, 0
	037 JumpIfEqual {61}
	038 Move W12, [X11+24]
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Add X10, X11, X10
	041 Move X10, [X10+32]
	042 Compare X10, 0
	043 JumpIfEqual {61}
	044 Move W11, [X0+48]
	045 Move [X10+24], W11
	046 Move W10, [X0+40]
	047 Move [X0+48], W8
	048 Subtract W8, W10, 1
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Move [X0+40], W8
	051 Move X8, [X1+32]
	052 Move W1, 1
	053 Move X8, [X8+192]
	054 Move X2, [X8+64]
	055 Call 0x24B3CB4, X0, X1
	056 Move X19, X9
	057 Move X0, X19
	058 Move X30, [X31+16]
	059 Move X19, [X31+24]
	060 Return X0
	061 Call 0x1C17F20
	062 Call 0x1C17F28

Method: TValue Minimum()

Disassembly:
	0x024B4310 MOV X1, X22
	0x024B4314 LDR X8, [X8 + 0xC0]
	0x024B4318 LDR X2, [X8 + 0x58]
	0x024B431C BL 0x2602314
	0x024B4320 LDR X8, [X26 + 0x20]
	0x024B4324 LDR W9, [X23 + 0x18]
	0x024B4328 LDR X8, [X8 + 0xC0]
	0x024B432C CMP W9, 0x1
	0x024B4330 B.LT 0x24B4720
	0x024B4334 MOVZ W9, 0xF0C3
	0x024B4338 MOVK W9, 0x78300000
	0x024B433C STP X23, X9, [X31 + 0x18]
	0x024B4340 STR X26, [X31 + 0x8]
	0x024B4344 LDR X1, [X8 + 0x60]
	0x024B4348 MOV X0, X23
	0x024B434C BL 0x26022C0
	0x024B4350 CBZ X0, 0x24B4760
	0x024B4354 LDP W20, W28, [X0 + 0x10]
	0x024B4358 ADD W8, W20, 0xA
	0x024B435C CMP W28, W8

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+24]
	003 Compare X8, 0
	004 JumpIfEqual {20}
	005 Move W9, [X8+24]
	006 NotImplemented "Instruction CMP not yet implemented."
	007 Move X9, [X0+32]
	008 Compare X9, 0
	009 JumpIfEqual {20}
	010 NotImplemented "Instruction LDRSW not yet implemented."
	011 Move W10, [X9+24]
	012 NotImplemented "Instruction CMP not yet implemented."
	013 Add X8, X9, X8
	014 Move X8, [X8+32]
	015 Compare X8, 0
	016 JumpIfEqual {20}
	017 Move X0, [X8+16]
	018 Move X30, [X31+16]
	019 Return X0
	020 Call 0x1C17F20
	021 Call 0x1C17F28

Method: System.Void Remove(UnityEngine.Rendering.Universal.LibTessDotNet.PQHandle handle)

Disassembly:
	0x024B4360 B.LE 0x24B45C8
	0x024B4364 ADD W13, W28, 0x1
	0x024B4368 STR W13, [X31 + 0x14]
	0x024B436C LDR X8, [X19 + 0x28]
	0x024B4370 CBZ X8, 0x24B4760
	0x024B4374 LDR X12, [X31 + 0x20]
	0x024B4378 MOVZ W9, 0x9F0D
	0x024B437C MOVK W9, 0x5BC10000
	0x024B4380 ORR W10, W31, 0x1
	0x024B4384 MADD W12, W12, W9, W10
	0x024B4388 SUB W9, W13, W20
	0x024B438C SXTW X11, W9
	0x024B4390 LDR W10, [X8 + 0x18]
	0x024B4394 SDIV X11, X12, X11
	0x024B4398 MSUB W9, W11, W9, W12
	0x024B439C ADD W9, W20, W9
	0x024B43A0 CMP W9, W10
	0x024B43A4 STR X12, [X31 + 0x20]
	0x024B43A8 B.CS 0x24B475C
	0x024B43AC ADD X9, X8, W9, 0x2, SXTW
	0x024B43B0 LDR W22, [X9 + 0x20]!
	0x024B43B4 CMP W20, W10
	0x024B43B8 B.CS 0x24B475C
	0x024B43BC ADD X10, X8, W20, 0x2, SXTW
	0x024B43C0 LDR W11, [X10 + 0x20]
	0x024B43C4 SXTW X25, W22
	0x024B43C8 SUB W29, W20, 0x1
	0x024B43CC MOV W24, W13
	0x024B43D0 STR W11, [X9]
	0x024B43D4 STR W22, [X10 + 0x20]
	0x024B43D8 STR X20, [X31 + 0x28]
	0x024B43DC MOV W27, W29
	0x024B43E0 LDR W9, [X8 + 0x18]
	0x024B43E4 ADD W23, W27, 0x1
	0x024B43E8 CMP W23, W9
	0x024B43EC B.CS 0x24B475C
	0x024B43F0 LDR X9, [X19 + 0x20]
	0x024B43F4 CBZ X9, 0x24B4760
	0x024B43F8 SXTW X21, W23
	0x024B43FC ADD X8, X8, X21, 0x2, LSL
	0x024B4400 LDRSW X8, [X8 + 0x20]
	0x024B4404 LDR W10, [X9 + 0x18]
	0x024B4408 CMP W8, W10
	0x024B440C B.CS 0x24B475C
	0x024B4410 CMP W22, W10
	0x024B4414 B.CS 0x24B475C
	0x024B4418 LDR X10, [X19 + 0x10]
	0x024B441C CBZ X10, 0x24B4760
	0x024B4420 ADD X8, X9, X8, 0x3, LSL
	0x024B4424 ADD X9, X9, X25, 0x3, LSL
	0x024B4428 LDR X11, [X10 + 0x18]
	0x024B442C LDR X0, [X10 + 0x40]
	0x024B4430 LDR X1, [X8 + 0x20]
	0x024B4434 LDR X2, [X9 + 0x20]
	0x024B4438 LDR X3, [X10 + 0x28]
	0x024B443C BLR X11
	0x024B4440 TBNZ X0, 0x0, 0x24B4454
	0x024B4444 LDR X8, [X19 + 0x28]
	0x024B4448 MOV W27, W23
	0x024B444C CBNZ X8, 0x24B43E0
	0x024B4450 B 0x24B4760
	0x024B4454 ADD W29, W27, 0x1
	0x024B4458 LDR X8, [X19 + 0x20]
	0x024B445C CBZ X8, 0x24B4760
	0x024B4460 LDR W9, [X8 + 0x18]
	0x024B4464 CMP W22, W9
	0x024B4468 B.CS 0x24B475C
	0x024B446C LDR X10, [X19 + 0x28]
	0x024B4470 CBZ X10, 0x24B4760
	0x024B4474 LDR W11, [X10 + 0x18]
	0x024B4478 SUB W24, W24, 0x1
	0x024B447C CMP W24, W11
	0x024B4480 B.CS 0x24B475C
	0x024B4484 SXTW X23, W24
	0x024B4488 ADD X10, X10, X23, 0x2, LSL
	0x024B448C LDRSW X10, [X10 + 0x20]
	0x024B4490 CMP W10, W9
	0x024B4494 B.CS 0x24B475C
	0x024B4498 LDR X9, [X19 + 0x10]
	0x024B449C CBZ X9, 0x24B4760
	0x024B44A0 ADD X11, X8, X25, 0x3, LSL
	0x024B44A4 ADD X8, X8, X10, 0x3, LSL
	0x024B44A8 LDR X10, [X9 + 0x18]
	0x024B44AC LDR X0, [X9 + 0x40]
	0x024B44B0 LDR X1, [X11 + 0x20]
	0x024B44B4 LDR X2, [X8 + 0x20]
	0x024B44B8 LDR X3, [X9 + 0x28]
	0x024B44BC BLR X10
	0x024B44C0 TBZ X0, 0x0, 0x24B4458
	0x024B44C4 LDR X8, [X19 + 0x28]
	0x024B44C8 CBZ X8, 0x24B4760
	0x024B44CC LDR W9, [X8 + 0x18]
	0x024B44D0 CMP W29, W9
	0x024B44D4 B.CS 0x24B475C
	0x024B44D8 CMP W24, W9
	0x024B44DC B.CS 0x24B475C
	0x024B44E0 ADD X9, X8, X23, 0x2, LSL
	0x024B44E4 LDR W13, [X9 + 0x20]!
	0x024B44E8 LDR X10, [X26 + 0x20]
	0x024B44EC ADD X11, X8, X21, 0x2, LSL
	0x024B44F0 LDR W12, [X11 + 0x20]!
	0x024B44F4 CMP W29, W24
	0x024B44F8 LDR X10, [X10 + 0xC0]
	0x024B44FC STR W13, [X11]
	0x024B4500 STR W12, [X9]
	0x024B4504 B.LT 0x24B43DC
	0x024B4508 LDR W8, [X11]
	0x024B450C STR W12, [X11]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X8, [X0+32]
	008 Compare X8, 0
	009 JumpIfEqual {117}
	010 Move W9, [X8+24]
	011 Move X20, X1
	012 NotImplemented "Instruction CMP not yet implemented."
	013 Move X23, W20
	014 Add X10, X8, X23
	015 Move X12, [X10+32]
	016 Compare X12, 0
	017 JumpIfEqual {117}
	018 Move X10, [X0+24]
	019 Move X19, X0
	020 Compare X10, 0
	021 JumpIfEqual {117}
	022 NotImplemented "Instruction LDRSW not yet implemented."
	023 Move W11, [X10+24]
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move W22, [X12+24]
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Add X12, X10, X13
	028 Move W13, [X12+32]
	029 Move W12, W22
	030 Move X12, W12
	031 Add X12, X10, X12
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move [X12+32], W13
	034 Move X13, W13
	035 Add X13, X8, X13
	036 Move X13, [X13+32]
	037 Compare X13, 0
	038 JumpIfEqual {117}
	039 Move [X13+24], W22
	040 Move W13, [X19+40]
	041 Subtract W13, W13, 1
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move [X19+40], W13
	044 Move X21, X2
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Move X13, X22
	047 ShiftRight X13, 1
	048 And X13, X13, 0x7FFFFFFF
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Add X10, X10, X13
	051 NotImplemented "Instruction LDRSW not yet implemented."
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Add X10, X8, X10
	054 Move X10, [X10+32]
	055 Compare X10, 0
	056 JumpIfEqual {117}
	057 NotImplemented "Instruction LDRSW not yet implemented."
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Add X8, X8, X11
	060 Move X8, [X8+32]
	061 Compare X8, 0
	062 JumpIfEqual {117}
	063 Move X9, [X19+16]
	064 Compare X9, 0
	065 JumpIfEqual {117}
	066 Move X1, [X10+16]
	067 Move X2, [X8+16]
	068 Move X8, [X9+24]
	069 Move X0, [X9+64]
	070 Move X3, [X9+40]
	071 NotImplemented "Instruction BLR not yet implemented."
	072 Move TEMP, X0
	073 And TEMP, TEMP, 1
	074 Compare TEMP, 1
	075 JumpIfNotEqual {82}
	076 Move X8, [X21+32]
	077 Move X0, X19
	078 Move W1, W22
	079 Move X8, [X8+192]
	080 Move X2, [X8+64]
	081 Call 0x24B3CB4, X0, X1
	082 Move X8, [X21+32]
	083 Move X0, X19
	084 Move W1, W22
	085 Move X8, [X8+192]
	086 Move X2, [X8+88]
	087 Call 0x24B3EA4, X0, X1
	088 Move X8, [X19+32]
	089 Compare X8, 0
	090 JumpIfEqual {117}
	091 Move W9, [X8+24]
	092 NotImplemented "Instruction CMP not yet implemented."
	093 Add X8, X8, X23
	094 Move X8, [X8+32]
	095 Compare X8, 0
	096 JumpIfEqual {117}
	097 Move [X8+16], X31
	098 Move X8, [X19+32]
	099 Compare X8, 0
	100 JumpIfEqual {117}
	101 Move W9, [X8+24]
	102 NotImplemented "Instruction CMP not yet implemented."
	103 Add X8, X8, X23
	104 Move X8, [X8+32]
	105 Compare X8, 0
	106 JumpIfEqual {117}
	107 Move W9, [X19+48]
	108 Move X22, [X31+16]
	109 Move X21, [X31+24]
	110 Move [X8+24], W9
	111 Move [X19+48], W20
	112 Move X20, [X31+32]
	113 Move X19, [X31+40]
	114 Move X30, [X31+48]
	115 Move X23, [X31+56]
	116 Return 
	117 Call 0x1C17F20
	118 Call 0x1C17F28

