Type: UnityEngine.Rendering.Universal.LibTessDotNet.Dict`1

Method: System.Void .ctor(UnityEngine.Rendering.Universal.LibTessDotNet.Dict`1/LessOrEqual<TValue> leq)

Disassembly:
	0x029B612C LDP X2, X1, [X0]
	0x029B6130 MOV X0, X19
	0x029B6134 LDP X20, X19, [X31 + 0x10]
	0x029B6138 LDR X30, [X31], #0x20
	0x029B613C BR X2
	0x029B6140 BL 0x1C16F20
	0x029B6144 STR X30, [X31 - 0x20]!
	0x029B6148 STP X20, X19, [X31 + 0x10]
	0x029B614C ADRP X20, 0x1A24000
	0x029B6150 LDRB W8, [X20 + 0xFCE]
	0x029B6154 MOV X19, X0
	0x029B6158 TBNZ X8, 0x0, 0x29B6170
	0x029B615C ADRP X0, 0x173D000
	0x029B6160 LDR X0, [X0 + 0xE18]
	0x029B6164 BL 0x1C16CF4
	0x029B6168 MOVZ W8, 0x1
	0x029B616C STRB W8, [X20 + 0xFCE]
	0x029B6170 LDR X19, [X19 + 0x10]
	0x029B6174 CBZ X19, 0x29B61E4
	0x029B6178 ADRP X10, 0x173D000
	0x029B617C LDR X8, [X19]
	0x029B6180 LDR X10, [X10 + 0xE18]
	0x029B6184 LDRH W9, [X8 + 0x12E]
	0x029B6188 LDR X1, [X10]
	0x029B618C CBZ X9, 0x29B61B0
	0x029B6190 LDR X10, [X8 + 0xB0]
	0x029B6194 ADD X10, X10, 0x8
	0x029B6198 LDUR X11, [X10 - 0x8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, X1
	006 Move X1, X31
	007 Move X20, X2
	008 Move X19, X0
	009 Call Object..ctor, X0
	010 Move [X19+16], X21
	011 Move X8, [X20+32]
	012 Move X8, [X8+192]
	013 Move X0, [X8+16]
	014 Move W8, [X0+309]
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {20}
	019 Call 0x1C5D684
	020 Call 0x1C17F10
	021 Move X8, [X20+32]
	022 Move X20, X0
	023 Move X8, [X8+192]
	024 Move X1, [X8+24]
	025 Call 0x2424E7C, X0
	026 Compare X20, 0
	027 JumpIfEqual {37}
	028 Move [X20+16], X31
	029 Move [X19+24], X20
	030 Move [X20+24], X20
	031 Move [X20+32], X20
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move X30, [X31+32]
	035 Move X21, [X31+40]
	036 Return 
	037 Call 0x1C17F20

Method: UnityEngine.Rendering.Universal.LibTessDotNet.Dict`1/Node<TValue> Insert(TValue key)

Disassembly:
	0x029B619C CMP X11, X1
	0x029B61A0 B.EQ 0x29B61C0
	0x029B61A4 SUBS X9, X9, 0x1
	0x029B61A8 ADD X10, X10, 0x10
	0x029B61AC B.NE 0x29B6198
	0x029B61B0 MOVZ W2, 0x2
	0x029B61B4 MOV X0, X19

ISIL:
	001 Move X8, [X2+32]
	002 Move X2, X1
	003 Move X9, [X8+192]
	004 Move X8, [X0+24]
	005 Move X3, [X9+40]
	006 Move X1, X8

Method: UnityEngine.Rendering.Universal.LibTessDotNet.Dict`1/Node<TValue> InsertBefore(UnityEngine.Rendering.Universal.LibTessDotNet.Dict`1/Node<TValue> node, TValue key)

Disassembly:
	0x029B61B8 BL 0x1C5C788
	0x029B61BC B 0x29B61D0
	0x029B61C0 LDR W9, [X10]
	0x029B61C4 ADD W9, W9, 0x2
	0x029B61C8 ADD X8, X8, W9, 0x4, SXTW
	0x029B61CC ADD X0, X8, 0x138
	0x029B61D0 LDP X2, X1, [X0]
	0x029B61D4 MOV X0, X19
	0x029B61D8 LDP X20, X19, [X31 + 0x10]
	0x029B61DC LDR X30, [X31], #0x20
	0x029B61E0 BR X2
	0x029B61E4 BL 0x1C16F20
	0x029B61E8 STR X30, [X31 - 0x20]!
	0x029B61EC STP X20, X19, [X31 + 0x10]
	0x029B61F0 STR X1, [X0]
	0x029B61F4 CBZ X1, 0x29B6290
	0x029B61F8 MOV X19, X0
	0x029B61FC LDR X0, [X2 + 0x20]
	0x029B6200 MOV X20, X1
	0x029B6204 LDRB W8, [X0 + 0x135]
	0x029B6208 TBNZ X8, 0x0, 0x29B6210
	0x029B620C BL 0x1C5C684
	0x029B6210 LDR X8, [X0 + 0xC0]
	0x029B6214 LDR X1, [X8 + 0x10]
	0x029B6218 LDRB W8, [X1 + 0x135]
	0x029B621C TBNZ X8, 0x0, 0x29B622C
	0x029B6220 MOV X0, X1
	0x029B6224 BL 0x1C5C684
	0x029B6228 MOV X1, X0
	0x029B622C LDR X8, [X20]
	0x029B6230 LDRH W9, [X8 + 0x12E]
	0x029B6234 CBZ X9, 0x29B6258
	0x029B6238 LDR X10, [X8 + 0xB0]
	0x029B623C ADD X10, X10, 0x8
	0x029B6240 LDUR X11, [X10 - 0x8]
	0x029B6244 CMP X11, X1
	0x029B6248 B.EQ 0x29B6268
	0x029B624C SUBS X9, X9, 0x1
	0x029B6250 ADD X10, X10, 0x10
	0x029B6254 B.NE 0x29B6240
	0x029B6258 MOV X0, X20
	0x029B625C MOV W2, W31
	0x029B6260 BL 0x1C5C788
	0x029B6264 B 0x29B6274
	0x029B6268 LDRSW X9, [X10]
	0x029B626C ADD X8, X8, X9, 0x4, LSL
	0x029B6270 ADD X0, X8, 0x138

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, X3
	007 Move X20, X2
	008 Move X19, X1
	009 Move X22, X0
	010 Compare X19, 0
	011 JumpIfEqual {63}
	012 Move X19, [X19+24]
	013 Compare X19, 0
	014 JumpIfEqual {63}
	015 Move X1, [X19+16]
	016 Compare X1, 0
	017 JumpIfEqual {30}
	018 Move X8, [X22+16]
	019 Compare X8, 0
	020 JumpIfEqual {63}
	021 Move X9, [X8+24]
	022 Move X0, [X8+64]
	023 Move X3, [X8+40]
	024 Move X2, X20
	025 NotImplemented "Instruction BLR not yet implemented."
	026 Move TEMP, X0
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfNotEqual {10}
	030 Move X8, [X21+32]
	031 Move X8, [X8+192]
	032 Move X0, [X8+16]
	033 Move W8, [X0+309]
	034 Move TEMP, X8
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfEqual {39}
	038 Call 0x1C5D684
	039 Call 0x1C17F10
	040 Move X8, [X21+32]
	041 Move X21, X0
	042 Move X8, [X8+192]
	043 Move X1, [X8+24]
	044 Call 0x2424E7C, X0
	045 Compare X21, 0
	046 JumpIfEqual {63}
	047 Move [X21+16], X20
	048 Move X8, [X19+32]
	049 Move [X21+32], X8
	050 Move X8, [X19+32]
	051 Compare X8, 0
	052 JumpIfEqual {63}
	053 Move [X8+24], X21
	054 Move [X21+24], X19
	055 Move [X19+32], X21
	056 Move X0, X21
	057 Move X20, [X31+32]
	058 Move X19, [X31+40]
	059 Move X22, [X31+16]
	060 Move X21, [X31+24]
	061 Move X30, [X31+48]
	062 Return X0
	063 Call 0x1C17F20

Method: UnityEngine.Rendering.Universal.LibTessDotNet.Dict`1/Node<TValue> Find(TValue key)

Disassembly:
	0x029B6274 LDP X8, X1, [X0]
	0x029B6278 MOV X0, X20
	0x029B627C BLR X8
	0x029B6280 STR X0, [X19 + 0x8]
	0x029B6284 LDP X20, X19, [X31 + 0x10]
	0x029B6288 LDR X30, [X31], #0x20
	0x029B628C RET
	0x029B6290 BL 0x1C16F20
	0x029B6294 SUB X31, X31, 0x30
	0x029B6298 STP X30, X21, [X31 + 0x10]
	0x029B629C STP X20, X19, [X31 + 0x20]
	0x029B62A0 LDR X20, [X0 + 0x8]
	0x029B62A4 CBZ X20, 0x29B6410
	0x029B62A8 MOV X21, X0
	0x029B62AC LDR X0, [X1 + 0x20]
	0x029B62B0 MOV X19, X1
	0x029B62B4 LDRB W8, [X0 + 0x135]
	0x029B62B8 TBNZ X8, 0x0, 0x29B62C0
	0x029B62BC BL 0x1C5C684
	0x029B62C0 LDR X8, [X0 + 0xC0]
	0x029B62C4 LDR X1, [X8 + 0x20]
	0x029B62C8 LDRB W8, [X1 + 0x135]
	0x029B62CC TBNZ X8, 0x0, 0x29B62DC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, [X0+24]
	006 Move X20, X0
	007 Move X21, X1
	008 Compare X19, 0
	009 JumpIfEqual {34}
	010 Move X19, [X19+32]
	011 Compare X19, 0
	012 JumpIfEqual {34}
	013 Move X2, [X19+16]
	014 Compare X2, 0
	015 JumpIfEqual {28}
	016 Move X8, [X20+16]
	017 Compare X8, 0
	018 JumpIfEqual {34}
	019 Move X9, [X8+24]
	020 Move X0, [X8+64]
	021 Move X3, [X8+40]
	022 Move X1, X21
	023 NotImplemented "Instruction BLR not yet implemented."
	024 Move TEMP, X0
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfNotEqual {8}
	028 Move X0, X19
	029 Move X20, [X31+16]
	030 Move X19, [X31+24]
	031 Move X30, [X31+32]
	032 Move X21, [X31+40]
	033 Return X0
	034 Call 0x1C17F20

Method: UnityEngine.Rendering.Universal.LibTessDotNet.Dict`1/Node<TValue> Min()

Disassembly:
	0x029B62D0 MOV X0, X1
	0x029B62D4 BL 0x1C5C684
	0x029B62D8 MOV X1, X0
	0x029B62DC LDR X8, [X20]
	0x029B62E0 LDRH W9, [X8 + 0x12E]
	0x029B62E4 CBZ X9, 0x29B6308
	0x029B62E8 LDR X10, [X8 + 0xB0]

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+24]
	003 Compare X8, 0
	004 JumpIfEqual {8}
	005 Move X0, [X8+32]
	006 Move X30, [X31+16]
	007 Return X0
	008 Call 0x1C17F20

Method: System.Void Remove(UnityEngine.Rendering.Universal.LibTessDotNet.Dict`1/Node<TValue> node)

Disassembly:
	0x029B62EC ADD X10, X10, 0x8
	0x029B62F0 LDUR X11, [X10 - 0x8]
	0x029B62F4 CMP X11, X1
	0x029B62F8 B.EQ 0x29B6318
	0x029B62FC SUBS X9, X9, 0x1
	0x029B6300 ADD X10, X10, 0x10
	0x029B6304 B.NE 0x29B62F0
	0x029B6308 MOV X0, X20
	0x029B630C MOV W2, W31
	0x029B6310 BL 0x1C5C788
	0x029B6314 B 0x29B6324
	0x029B6318 LDRSW X9, [X10]

ISIL:
	001 Move [X31-16], X30
	002 Compare X1, 0
	003 JumpIfEqual {15}
	004 Move X8, [X1+32]
	005 Compare X8, 0
	006 JumpIfEqual {15}
	007 Move X9, [X1+24]
	008 Move [X8+24], X9
	009 Move X9, [X1+24]
	010 Compare X9, 0
	011 JumpIfEqual {15}
	012 Move [X9+32], X8
	013 Move X30, [X31+16]
	014 Return 
	015 Call 0x1C17F20

