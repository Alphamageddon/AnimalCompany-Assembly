Type: UnityEngine.Rendering.Universal.LibTessDotNet.MeshUtils/Edge

Method: UnityEngine.Rendering.Universal.LibTessDotNet.MeshUtils/Face get__Rface()

Disassembly:
	0x03A97220 BL 0x3A96F7C
	0x03A97224 CBZ X0, 0x3A9724C
	0x03A97228 LDR X8, [X0 + 0x10]
	0x03A9722C CBZ X8, 0x3A9724C
	0x03A97230 LDR X8, [X8 + 0x28]
	0x03A97234 CBZ X8, 0x3A9724C
	0x03A97238 LDR X8, [X8 + 0x40]

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+40]
	003 Compare X8, 0
	004 JumpIfEqual {8}
	005 Move X0, [X8+72]
	006 Move X30, [X31+16]
	007 Return X0
	008 Call 0x1C17F20

Method: System.Void set__Rface(UnityEngine.Rendering.Universal.LibTessDotNet.MeshUtils/Face value)

Disassembly:
	0x03A97408 BL 0x3A96424
	0x03A9740C MOV X24, X0
	0x03A97410 MOV X0, X19
	0x03A97414 MOV X1, X23
	0x03A97418 MOV X2, X24
	0x03A9741C BL 0x3A97108
	0x03A97420 LDR X8, [X21 + 0x30]

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+40]
	003 Compare X8, 0
	004 JumpIfEqual {8}
	005 Move [X8+72], X1
	006 Move X30, [X31+16]
	007 Return 
	008 Call 0x1C17F20

Method: UnityEngine.Rendering.Universal.LibTessDotNet.MeshUtils/Vertex get__Dst()

Disassembly:
	0x03A965B4 MOV X0, X8
	0x03A965B8 MOV X1, X31
	0x03A965BC BL 0x3A95FC8
	0x03A965C0 MOV X0, X20
	0x03A965C4 BL 0x3A96258
	0x03A965C8 CMP X20, X22
	0x03A965CC MOV X20, X23

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+40]
	003 Compare X8, 0
	004 JumpIfEqual {8}
	005 Move X0, [X8+64]
	006 Move X30, [X31+16]
	007 Return X0
	008 Call 0x1C17F20

Method: System.Void set__Dst(UnityEngine.Rendering.Universal.LibTessDotNet.MeshUtils/Vertex value)

Disassembly:
	0x03A973EC CBZ W8, 0x3A97480
	0x03A973F0 LDR X8, [X21 + 0x30]
	0x03A973F4 CBZ X8, 0x3A974A4
	0x03A973F8 LDR X9, [X19 + 0x10]
	0x03A973FC CBZ X9, 0x3A974A4
	0x03A97400 LDR X2, [X24 + 0x28]
	0x03A97404 LDR X1, [X8 + 0x28]

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+40]
	003 Compare X8, 0
	004 JumpIfEqual {8}
	005 Move [X8+64], X1
	006 Move X30, [X31+16]
	007 Return 
	008 Call 0x1C17F20

Method: UnityEngine.Rendering.Universal.LibTessDotNet.MeshUtils/Edge get__Oprev()

Disassembly:
	0x03A9723C CMP X8, X19
	0x03A97240 B.EQ 0x3A9721C
	0x03A97244 LDP X30, X19, [X31], #0x10
	0x03A97248 RET
	0x03A9724C BL 0x1C16F20
	0x03A97250 STP X30, X23, [X31 - 0x30]!
	0x03A97254 STP X22, X21, [X31 + 0x10]

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+40]
	003 Compare X8, 0
	004 JumpIfEqual {8}
	005 Move X0, [X8+56]
	006 Move X30, [X31+16]
	007 Return X0
	008 Call 0x1C17F20

Method: System.Void set__Oprev(UnityEngine.Rendering.Universal.LibTessDotNet.MeshUtils/Edge value)

Disassembly:
	0x03A97D74 STR X0, [X19 + 0x48]
	0x03A97D78 LDP X20, X19, [X31 + 0x70]
	0x03A97D7C LDP X22, X21, [X31 + 0x60]
	0x03A97D80 LDP X24, X23, [X31 + 0x50]
	0x03A97D84 LDP X26, X25, [X31 + 0x40]
	0x03A97D88 LDR X30, [X31 + 0x38]
	0x03A97D8C LDP D9, D8, [X31 + 0x28]

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+40]
	003 Compare X8, 0
	004 JumpIfEqual {8}
	005 Move [X8+56], X1
	006 Move X30, [X31+16]
	007 Return 
	008 Call 0x1C17F20

Method: UnityEngine.Rendering.Universal.LibTessDotNet.MeshUtils/Edge get__Lprev()

Disassembly:
	0x03A977B0 BL 0x3A96354
	0x03A977B4 LDR X8, [X23 + 0x28]
	0x03A977B8 CBZ X8, 0x3A977EC
	0x03A977BC LDR X9, [X19 + 0x10]
	0x03A977C0 CBZ X9, 0x3A977EC
	0x03A977C4 LDR X2, [X8 + 0x38]
	0x03A977C8 MOV X1, X20

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+48]
	003 Compare X8, 0
	004 JumpIfEqual {8}
	005 Move X0, [X8+40]
	006 Move X30, [X31+16]
	007 Return X0
	008 Call 0x1C17F20

Method: System.Void set__Lprev(UnityEngine.Rendering.Universal.LibTessDotNet.MeshUtils/Edge value)

Disassembly:
	0x03A97D90 LDR V10, [X31 + 0x20]
	0x03A97D94 ADD X31, X31, 0x80
	0x03A97D98 RET
	0x03A97D9C BL 0x1C16F28
	0x03A97DA0 BL 0x1C16F20
	0x03A97DA4 BL 0x1C16F44
	0x03A97DA8 MOV X1, X31

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+48]
	003 Compare X8, 0
	004 JumpIfEqual {8}
	005 Move [X8+40], X1
	006 Move X30, [X31+16]
	007 Return 
	008 Call 0x1C17F20

Method: UnityEngine.Rendering.Universal.LibTessDotNet.MeshUtils/Edge get__Dprev()

Disassembly:
	0x03A97DAC BL 0x1C16DEC
	0x03A97DB0 STP X30, X23, [X31 - 0x30]!
	0x03A97DB4 STP X22, X21, [X31 + 0x10]
	0x03A97DB8 STP X20, X19, [X31 + 0x20]
	0x03A97DBC MOV X19, X1
	0x03A97DC0 MOV X20, X0
	0x03A97DC4 BL 0x3A96F54

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+56]
	003 Compare X8, 0
	004 JumpIfEqual {8}
	005 Move X0, [X8+40]
	006 Move X30, [X31+16]
	007 Return X0
	008 Call 0x1C17F20

Method: System.Void set__Dprev(UnityEngine.Rendering.Universal.LibTessDotNet.MeshUtils/Edge value)

Disassembly:
	0x03A97DC8 CBZ X19, 0x3A97F10
	0x03A97DCC MOV X23, X0
	0x03A97DD0 CBZ X0, 0x3A97F10
	0x03A97DD4 LDR X21, [X19 + 0x10]
	0x03A97DD8 CBZ X21, 0x3A97F10
	0x03A97DDC LDR X8, [X21 + 0x28]
	0x03A97DE0 CBZ X8, 0x3A97F10

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+56]
	003 Compare X8, 0
	004 JumpIfEqual {8}
	005 Move [X8+40], X1
	006 Move X30, [X31+16]
	007 Return 
	008 Call 0x1C17F20

Method: UnityEngine.Rendering.Universal.LibTessDotNet.MeshUtils/Edge get__Rprev()

Disassembly:
	0x03A97DE4 LDR X22, [X23 + 0x10]
	0x03A97DE8 CBZ X22, 0x3A97F10
	0x03A97DEC LDR X9, [X22 + 0x28]
	0x03A97DF0 CBZ X9, 0x3A97F10
	0x03A97DF4 LDR X0, [X8 + 0x40]
	0x03A97DF8 LDR X1, [X9 + 0x40]
	0x03A97DFC BL 0x3A95354

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+40]
	003 Compare X8, 0
	004 JumpIfEqual {8}
	005 Move X0, [X8+48]
	006 Move X30, [X31+16]
	007 Return X0
	008 Call 0x1C17F20

Method: System.Void set__Rprev(UnityEngine.Rendering.Universal.LibTessDotNet.MeshUtils/Edge value)

Disassembly:
	0x03A97E00 TBZ X0, 0x0, 0x3A97E7C
	0x03A97E04 LDR X8, [X21 + 0x28]
	0x03A97E08 CBZ X8, 0x3A97F10
	0x03A97E0C LDR X9, [X22 + 0x28]
	0x03A97E10 CBZ X9, 0x3A97F10
	0x03A97E14 LDR X0, [X8 + 0x40]
	0x03A97E18 LDR X1, [X9 + 0x40]

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+40]
	003 Compare X8, 0
	004 JumpIfEqual {8}
	005 Move [X8+48], X1
	006 Move X30, [X31+16]
	007 Return 
	008 Call 0x1C17F20

Method: UnityEngine.Rendering.Universal.LibTessDotNet.MeshUtils/Edge get__Dnext()

Disassembly:
	0x03A97E1C LDR X2, [X21 + 0x40]
	0x03A97E20 BL 0x3A95410
	0x03A97E24 FCMP S0, 0x0
	0x03A97E28 B.MI 0x3A97EFC
	0x03A97E2C MOV X1, X19
	0x03A97E30 BL 0x3A96F7C
	0x03A97E34 MOVZ W8, 0x1
	0x03A97E38 STRB W8, [X19 + 0x26]
	0x03A97E3C CBZ X0, 0x3A97F10

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+40]
	003 Compare X8, 0
	004 JumpIfEqual {11}
	005 Move X8, [X8+48]
	006 Compare X8, 0
	007 JumpIfEqual {11}
	008 Move X0, [X8+40]
	009 Move X30, [X31+16]
	010 Return X0
	011 Call 0x1C17F20

Method: System.Void set__Dnext(UnityEngine.Rendering.Universal.LibTessDotNet.MeshUtils/Edge value)

Disassembly:
	0x03A97E40 STRB W8, [X0 + 0x26]
	0x03A97E44 LDR X8, [X20 + 0x10]
	0x03A97E48 CBZ X8, 0x3A97F10
	0x03A97E4C MOV X1, X21
	0x03A97E50 BL 0x3A96354
	0x03A97E54 LDR X8, [X20 + 0x10]
	0x03A97E58 CBZ X8, 0x3A97F10
	0x03A97E5C LDR X1, [X22 + 0x28]
	0x03A97E60 MOV X2, X0

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+40]
	003 Compare X8, 0
	004 JumpIfEqual {11}
	005 Move X8, [X8+48]
	006 Compare X8, 0
	007 JumpIfEqual {11}
	008 Move [X8+40], X1
	009 Move X30, [X31+16]
	010 Return 
	011 Call 0x1C17F20

Method: UnityEngine.Rendering.Universal.LibTessDotNet.MeshUtils/Edge get__Rnext()

Disassembly:
	0x03A97E64 MOV X20, X0
	0x03A97E68 BL 0x3A95F04
	0x03A97E6C CBZ X20, 0x3A97F10
	0x03A97E70 LDR X8, [X20 + 0x48]
	0x03A97E74 CBNZ X8, 0x3A97EEC
	0x03A97E78 B 0x3A97F10
	0x03A97E7C LDR X8, [X22 + 0x28]
	0x03A97E80 CBZ X8, 0x3A97F10
	0x03A97E84 LDR X9, [X21 + 0x28]

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+40]
	003 Compare X8, 0
	004 JumpIfEqual {11}
	005 Move X8, [X8+56]
	006 Compare X8, 0
	007 JumpIfEqual {11}
	008 Move X0, [X8+40]
	009 Move X30, [X31+16]
	010 Return X0
	011 Call 0x1C17F20

Method: System.Void set__Rnext(UnityEngine.Rendering.Universal.LibTessDotNet.MeshUtils/Edge value)

Disassembly:
	0x03A97E88 CBZ X9, 0x3A97F10
	0x03A97E8C LDR X0, [X8 + 0x40]
	0x03A97E90 LDR X1, [X9 + 0x40]
	0x03A97E94 LDR X2, [X22 + 0x40]
	0x03A97E98 BL 0x3A95410
	0x03A97E9C FCMP S0, 0x0
	0x03A97EA0 B.GT 0x3A97EFC
	0x03A97EA4 MOVZ W8, 0x1
	0x03A97EA8 STRB W8, [X23 + 0x26]

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+40]
	003 Compare X8, 0
	004 JumpIfEqual {11}
	005 Move X8, [X8+56]
	006 Compare X8, 0
	007 JumpIfEqual {11}
	008 Move [X8+40], X1
	009 Move X30, [X31+16]
	010 Return 
	011 Call 0x1C17F20

Method: System.Void EnsureFirst(ref UnityEngine.Rendering.Universal.LibTessDotNet.MeshUtils/Edge e)

Disassembly:
	0x03A97BC4 STR W9, [X31 + 0x8]
	0x03A97BC8 STR X8, [X31]
	0x03A97BCC CBZ X19, 0x3A97DA0
	0x03A97BD0 LDR W8, [X31 + 0x8]
	0x03A97BD4 LDR X9, [X31]
	0x03A97BD8 ADD X4, X31, 0x1C
	0x03A97BDC ADD X5, X31, 0x18
	0x03A97BE0 MOV X1, X19
	0x03A97BE4 MOV X2, X24
	0x03A97BE8 MOV X3, X23
	0x03A97BEC STR W8, [X19 + 0x30]

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0]
	003 Compare X8, 0
	004 JumpIfEqual {11}
	005 Move X9, [X8+24]
	006 NotImplemented "Instruction CMP not yet implemented."
	007 Move X8, [X8+40]
	008 Move [X0], X8
	009 Move X30, [X31+16]
	010 Return 
	011 Call 0x1C17F20

Method: System.Void Reset()

Disassembly:
	0x03A97EAC STRB W8, [X19 + 0x26]
	0x03A97EB0 LDR X8, [X20 + 0x10]
	0x03A97EB4 CBZ X8, 0x3A97F10
	0x03A97EB8 MOV X1, X22
	0x03A97EBC BL 0x3A96354

ISIL:
	001 NotImplemented "Instruction MOVI not yet implemented."
	002 Move [X0+76], V0
	003 Move [X0+48], V0
	004 Move [X0+56], V0
	005 Move [X0+16], V0
	006 Move [X0+24], V0
	007 Return 

Method: System.Void .ctor()

Disassembly:
	0x03A97EC0 LDR X8, [X20 + 0x10]
	0x03A97EC4 CBZ X8, 0x3A97F10
	0x03A97EC8 LDR X2, [X22 + 0x28]
	0x03A97ECC LDR X1, [X21 + 0x38]
	0x03A97ED0 MOV X20, X0
	0x03A97ED4 BL 0x3A95F04
	0x03A97ED8 CBZ X20, 0x3A97F10
	0x03A97EDC LDR X8, [X20 + 0x28]
	0x03A97EE0 CBZ X8, 0x3A97F10
	0x03A97EE4 LDR X8, [X8 + 0x48]
	0x03A97EE8 CBZ X8, 0x3A97F10
	0x03A97EEC LDRB W9, [X19 + 0x24]
	0x03A97EF0 MOVZ W0, 0x1
	0x03A97EF4 STRB W9, [X8 + 0x35]
	0x03A97EF8 B 0x3A97F00
	0x03A97EFC MOV W0, W31
	0x03A97F00 LDP X20, X19, [X31 + 0x20]
	0x03A97F04 LDP X22, X21, [X31 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x94C000
	006 Move X21, 0x6C1000
	007 Move W8, [X20+955]
	008 Move X21, [X21+1616]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x6C1000
	015 Move X0, [X0+1616]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+955], W8
	019 Move X1, [X21]
	020 Move X0, X19
	021 Move X20, [X31+16]
	022 Move X19, [X31+24]
	023 Move X30, [X31+32]
	024 Move X21, [X31+40]
	025 Call 0x24A806C, X0
	026 Return 

