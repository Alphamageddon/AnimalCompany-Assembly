Type: UnityEngine.Rendering.Universal.LibTessDotNet.PriorityQueue`1

Method: System.Boolean get_Empty()

Disassembly:
	0x024B5124 LDR W2, [X8 + 0x18]
	0x024B5128 MOV X20, X0
	0x024B512C MOV X0, X8
	0x024B5130 MOV X1, X20
	0x024B5134 MOV X3, X31
	0x024B5138 BL 0x33A0C7C
	0x024B513C STR X20, [X19 + 0x18]
	0x024B5140 LDP X20, X19, [X31 + 0x10]
	0x024B5144 LDR X30, [X31], #0x20
	0x024B5148 RET
	0x024B514C BL 0x1C16F20
	0x024B5150 STP X29, X30, [X31 - 0x60]!
	0x024B5154 STP X28, X27, [X31 + 0x10]

ISIL:
	001 Move [X31-16], X30
	002 Move W8, [X0+48]
	003 Compare W8, 0
	004 JumpIfEqual {6}
	005 Move W0, W31
	006 Move X8, [X0+24]
	007 Compare X8, 0
	008 JumpIfEqual {14}
	009 Move W8, [X8+40]
	010 NotImplemented "Instruction CMP not yet implemented."
	011 NotImplemented "Instruction CSET not yet implemented."
	012 Move X30, [X31+16]
	013 Return X0
	014 Call 0x1C17F20

Method: System.Void .ctor(System.Int32 initialSize, UnityEngine.Rendering.Universal.LibTessDotNet.PriorityHeap`1/LessOrEqual<TValue> leq)

Disassembly:
	0x024B5158 STP X26, X25, [X31 + 0x20]
	0x024B515C STP X24, X23, [X31 + 0x30]
	0x024B5160 STP X22, X21, [X31 + 0x40]
	0x024B5164 STP X20, X19, [X31 + 0x50]
	0x024B5168 ADD X29, X31, 0x0
	0x024B516C SUB X31, X31, 0x40
	0x024B5170 MRS X8, 0xC000
	0x024B5174 STUR X8, [X29 - 0x40]
	0x024B5178 LDR X8, [X8 + 0x28]
	0x024B517C MOV X24, X3
	0x024B5180 MOV X20, X0
	0x024B5184 STUR X8, [X29 - 0x8]
	0x024B5188 STP X2, X1, [X29 - 0x18]
	0x024B518C LDR X19, [X3 + 0x20]
	0x024B5190 STUR X2, [X29 - 0x28]
	0x024B5194 LDR X8, [X19 + 0xC0]
	0x024B5198 LDP X9, X10, [X8 + 0x28]
	0x024B519C LDR X8, [X8 + 0x38]
	0x024B51A0 LDR W28, [X10 + 0xFC]
	0x024B51A4 LDR W21, [X9 + 0xFC]
	0x024B51A8 LDR W10, [X8 + 0xFC]
	0x024B51AC ADD X8, X31, 0x0
	0x024B51B0 ADD X9, X28, 0xF
	0x024B51B4 AND X9, X9, 0x1FFFFFFFF
	0x024B51B8 SUB X23, X8, X9
	0x024B51BC ADD X31, X23, 0x0
	0x024B51C0 ADD X9, X10, 0xF
	0x024B51C4 ADD X8, X31, 0x0
	0x024B51C8 AND X9, X9, 0x1FFFFFFFF
	0x024B51CC SUB X25, X8, X9
	0x024B51D0 STP X1, X10, [X29 - 0x38]
	0x024B51D4 ADD X31, X25, 0x0
	0x024B51D8 ADD X9, X21, 0xF
	0x024B51DC ADD X8, X31, 0x0
	0x024B51E0 AND X9, X9, 0x1FFFFFFFF
	0x024B51E4 SUB X8, X8, X9
	0x024B51E8 STUR X8, [X29 - 0x20]
	0x024B51EC ADD X31, X8, 0x0
	0x024B51F0 ADD X8, X31, 0x0
	0x024B51F4 SUB X27, X8, X9

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move W20, W1
	008 Move X1, X31
	009 Move X21, X3
	010 Move X22, X2
	011 Move X19, X0
	012 Call Object..ctor, X0
	013 Move [X19+16], X22
	014 Move X8, [X21+32]
	015 Move X8, [X8+192]
	016 Move X0, [X8+8]
	017 Move W8, [X0+309]
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {23}
	022 Call 0x1C5D684
	023 Call 0x1C17F10
	024 Move X8, [X21+32]
	025 Move W1, W20
	026 Move X2, X22
	027 Move X23, X0
	028 Move X8, [X8+192]
	029 Move X3, [X8+32]
	030 Call 0x24B3B70, X0, X1, X2
	031 Move [X19+24], X23
	032 Move X8, [X21+32]
	033 Move X8, [X8+192]
	034 Move X0, [X8+40]
	035 Move W8, [X0+309]
	036 Move TEMP, X8
	037 And TEMP, TEMP, 1
	038 Compare TEMP, 1
	039 JumpIfEqual {41}
	040 Call 0x1C5D684
	041 Move W1, W20
	042 Call 0x1C17D6C
	043 Move [X19+32], X0
	044 Move [X19+48], W31
	045 Move [X19+52], W20
	046 Move [X19+56], W31
	047 Move X20, [X31+32]
	048 Move X19, [X31+40]
	049 Move X22, [X31+16]
	050 Move X21, [X31+24]
	051 Move X30, [X31+48]
	052 Move X23, [X31+56]
	053 Return 

Method: System.Void Swap(ref System.Int32 a, ref System.Int32 b)

Disassembly:
	0x024B51F8 ADD X31, X27, 0x0
	0x024B51FC MOV X0, X27
	0x024B5200 MOV W1, W31
	0x024B5204 MOV X2, X21
	0x024B5208 BL 0x3EB1B10

ISIL:
	001 Move W8, [X1]
	002 Move W9, [X0]
	003 Move [X0], W8
	004 Move [X1], W9
	005 Return 

Method: System.Void Init()

Disassembly:
	0x024B520C LDP W9, W8, [X20 + 0x20]
	0x024B5210 ADD W22, W8, 0x1
	0x024B5214 CMP W22, W9
	0x024B5218 STR W22, [X20 + 0x24]
	0x024B521C B.LE 0x24B523C
	0x024B5220 LDR X8, [X19 + 0xC0]
	0x024B5224 MOV X0, X20
	0x024B5228 LDR X1, [X8 + 0x20]
	0x024B522C LDR X8, [X1]
	0x024B5230 BLR X8
	0x024B5234 LDR W22, [X20 + 0x24]
	0x024B5238 LDR X19, [X24 + 0x20]
	0x024B523C LDR X26, [X20 + 0x18]
	0x024B5240 MOV X0, X27
	0x024B5244 MOV W1, W31
	0x024B5248 MOV X2, X21
	0x024B524C BL 0x3EB1B10
	0x024B5250 LDR X8, [X19 + 0xC0]
	0x024B5254 LDUR X9, [X29 - 0x38]
	0x024B5258 MOV X0, X23
	0x024B525C MOV X2, X28
	0x024B5260 LDR X8, [X8 + 0x30]
	0x024B5264 LDR W8, [X8 + 0x28]
	0x024B5268 CMP W8, 0x0
	0x024B526C SUB X8, X29, 0x10
	0x024B5270 CSEL X1, X9, X8, LT
	0x024B5274 BL 0x3EB1AC0
	0x024B5278 LDR X8, [X19 + 0xC0]
	0x024B527C MOV X0, X27
	0x024B5280 MOV X2, X23
	0x024B5284 MOV W3, W28
	0x024B5288 LDR X8, [X8 + 0x28]
	0x024B528C LDR X1, [X8 + 0x80]
	0x024B5290 BL 0x1C16D1C
	0x024B5294 LDR X19, [X24 + 0x20]
	0x024B5298 LDP X23, X9, [X29 - 0x30]
	0x024B529C MOV X0, X25
	0x024B52A0 LDR X8, [X19 + 0xC0]
	0x024B52A4 MOV X2, X23
	0x024B52A8 LDR X8, [X8 + 0x38]
	0x024B52AC LDR W8, [X8 + 0x28]
	0x024B52B0 CMP W8, 0x0
	0x024B52B4 SUB X8, X29, 0x18
	0x024B52B8 CSEL X1, X9, X8, LT
	0x024B52BC BL 0x3EB1AC0
	0x024B52C0 LDR X8, [X19 + 0xC0]
	0x024B52C4 MOV X0, X27
	0x024B52C8 MOV X2, X25
	0x024B52CC MOV W3, W23
	0x024B52D0 LDR X8, [X8 + 0x28]
	0x024B52D4 LDR X8, [X8 + 0x80]
	0x024B52D8 ADD X1, X8, 0x20
	0x024B52DC BL 0x1C16D1C
	0x024B52E0 LDUR X25, [X29 - 0x20]
	0x024B52E4 MOV X1, X27
	0x024B52E8 MOV X2, X21
	0x024B52EC MOV X0, X25
	0x024B52F0 BL 0x3EB1AC0
	0x024B52F4 CBZ X26, 0x24B53A8
	0x024B52F8 LDR W8, [X26 + 0x18]
	0x024B52FC SUB W23, W22, 0x1
	0x024B5300 CMP W23, W8
	0x024B5304 B.CS 0x24B53A4
	0x024B5308 LDR X8, [X26]
	0x024B530C SXTW X9, W23
	0x024B5310 MOV X1, X25
	0x024B5314 MOV X2, X21
	0x024B5318 LDR W8, [X8 + 0x104]
	0x024B531C NOP
	0x024B5320 MADD X8, X8, X9, X26
	0x024B5324 ADD X0, X8, 0x20
	0x024B5328 BL 0x3EB1AC0
	0x024B532C LDR X8, [X24 + 0x20]
	0x024B5330 LDR X8, [X8 + 0xC0]
	0x024B5334 LDR X0, [X8 + 0x28]
	0x024B5338 LDRB W8, [X0 + 0x135]
	0x024B533C TBNZ X8, 0x0, 0x24B5344
	0x024B5340 BL 0x1C5C684
	0x024B5344 LDR W8, [X26 + 0x18]
	0x024B5348 CMP W23, W8
	0x024B534C B.CS 0x24B53A4
	0x024B5350 LDR X8, [X24 + 0x20]
	0x024B5354 MOVN W2, 0x0
	0x024B5358 MOV X0, X20
	0x024B535C MOV W1, W23
	0x024B5360 LDR X8, [X8 + 0xC0]
	0x024B5364 LDR X3, [X8 + 0x40]
	0x024B5368 LDR X8, [X3]
	0x024B536C BLR X8
	0x024B5370 LDUR X8, [X29 - 0x40]
	0x024B5374 LDR X8, [X8 + 0x28]
	0x024B5378 LDUR X9, [X29 - 0x8]
	0x024B537C CMP X8, X9
	0x024B5380 B.NE 0x24B53AC
	0x024B5384 ADD X31, X29, 0x0
	0x024B5388 LDP X20, X19, [X31 + 0x50]
	0x024B538C LDP X22, X21, [X31 + 0x40]
	0x024B5390 LDP X24, X23, [X31 + 0x30]
	0x024B5394 LDP X26, X25, [X31 + 0x20]
	0x024B5398 LDP X28, X27, [X31 + 0x10]
	0x024B539C LDP X29, X30, [X31], #0x60
	0x024B53A0 RET
	0x024B53A4 BL 0x1C16F28
	0x024B53A8 BL 0x1C16F20
	0x024B53AC BL 0x3EB1B20
	0x024B53B0 STP X29, X30, [X31 - 0x60]!
	0x024B53B4 STP X28, X27, [X31 + 0x10]
	0x024B53B8 STP X26, X25, [X31 + 0x20]
	0x024B53BC STP X24, X23, [X31 + 0x30]
	0x024B53C0 STP X22, X21, [X31 + 0x40]
	0x024B53C4 STP X20, X19, [X31 + 0x50]
	0x024B53C8 ADD X29, X31, 0x0
	0x024B53CC SUB X31, X31, 0x10
	0x024B53D0 MRS X27, 0xC000
	0x024B53D4 LDR X8, [X27 + 0x28]
	0x024B53D8 STUR X8, [X29 - 0x8]
	0x024B53DC LDR X8, [X2 + 0x20]
	0x024B53E0 LDR X8, [X8 + 0xC0]
	0x024B53E4 LDP X9, X10, [X8 + 0x30]
	0x024B53E8 LDR W20, [X9 + 0xFC]
	0x024B53EC LDR W24, [X10 + 0xFC]
	0x024B53F0 ADD X9, X31, 0x0
	0x024B53F4 ADD X10, X20, 0xF
	0x024B53F8 AND X10, X10, 0x1FFFFFFFF
	0x024B53FC SUB X22, X9, X10
	0x024B5400 ADD X31, X22, 0x0
	0x024B5404 ADD X10, X24, 0xF
	0x024B5408 ADD X9, X31, 0x0
	0x024B540C AND X10, X10, 0x1FFFFFFFF
	0x024B5410 SUB X25, X9, X10
	0x024B5414 ADD X31, X25, 0x0
	0x024B5418 LDR X9, [X0 + 0x18]
	0x024B541C CBZ X9, 0x24B55B8
	0x024B5420 LDR W10, [X9 + 0x18]
	0x024B5424 CBZ W10, 0x24B55BC
	0x024B5428 LDR X8, [X8 + 0x28]
	0x024B542C MOV X19, X1
	0x024B5430 MOV X21, X0
	0x024B5434 ADD X0, X9, 0x20
	0x024B5438 LDR X1, [X8 + 0x80]
	0x024B543C MOV X23, X2
	0x024B5440 BL 0x1C16D18
	0x024B5444 MOV X1, X0
	0x024B5448 MOV X0, X22
	0x024B544C MOV X2, X20
	0x024B5450 BL 0x3EB1AC0
	0x024B5454 LDR X8, [X21 + 0x18]
	0x024B5458 CBZ X8, 0x24B55B8
	0x024B545C LDR W9, [X8 + 0x18]
	0x024B5460 CBZ W9, 0x24B55BC
	0x024B5464 LDR X9, [X23 + 0x20]
	0x024B5468 ADD X0, X8, 0x20
	0x024B546C LDR X9, [X9 + 0xC0]
	0x024B5470 LDR X9, [X9 + 0x28]
	0x024B5474 LDR X1, [X9 + 0x80]
	0x024B5478 BL 0x1C16D18
	0x024B547C MOV W1, W31
	0x024B5480 MOV X2, X20
	0x024B5484 BL 0x3EB1B10
	0x024B5488 LDR X28, [X21 + 0x18]
	0x024B548C CBZ X28, 0x24B55B8
	0x024B5490 LDR X26, [X21 + 0x10]
	0x024B5494 CBZ X26, 0x24B55B8
	0x024B5498 LDR X8, [X23 + 0x20]
	0x024B549C LDR X8, [X8 + 0xC0]
	0x024B54A0 LDR X1, [X8 + 0x18]
	0x024B54A4 LDRB W8, [X1 + 0x135]
	0x024B54A8 TBNZ X8, 0x0, 0x24B54B8
	0x024B54AC MOV X0, X1
	0x024B54B0 BL 0x1C5C684
	0x024B54B4 MOV X1, X0
	0x024B54B8 LDR X8, [X26]
	0x024B54BC LDRH W9, [X8 + 0x12E]
	0x024B54C0 CBZ X9, 0x24B54E4
	0x024B54C4 LDR X10, [X8 + 0xB0]
	0x024B54C8 ADD X10, X10, 0x8
	0x024B54CC LDUR X11, [X10 - 0x8]
	0x024B54D0 CMP X11, X1
	0x024B54D4 B.EQ 0x24B54F4
	0x024B54D8 SUBS X9, X9, 0x1
	0x024B54DC ADD X10, X10, 0x10
	0x024B54E0 B.NE 0x24B54CC
	0x024B54E4 MOVZ W2, 0x1
	0x024B54E8 MOV X0, X26
	0x024B54EC BL 0x1C5C788
	0x024B54F0 B 0x24B5504
	0x024B54F4 LDR W9, [X10]
	0x024B54F8 ADD W9, W9, 0x1
	0x024B54FC ADD X8, X8, W9, 0x4, SXTW
	0x024B5500 ADD X0, X8, 0x138
	0x024B5504 STUR X25, [X29 - 0x10]
	0x024B5508 LDR X1, [X0 + 0x8]
	0x024B550C SUB X3, X29, 0x10
	0x024B5510 MOV X2, X26
	0x024B5514 MOV X4, X25
	0x024B5518 LDP X0, X8, [X1 + 0x8]
	0x024B551C BLR X8
	0x024B5520 LDR W8, [X28 + 0x18]
	0x024B5524 CBZ W8, 0x24B55BC
	0x024B5528 LDR X8, [X23 + 0x20]
	0x024B552C ADD X0, X28, 0x20
	0x024B5530 MOV X2, X25
	0x024B5534 MOV W3, W24
	0x024B5538 LDR X8, [X8 + 0xC0]
	0x024B553C LDR X8, [X8 + 0x28]
	0x024B5540 LDR X8, [X8 + 0x80]
	0x024B5544 ADD X1, X8, 0x20
	0x024B5548 BL 0x1C16D1C
	0x024B554C LDR X8, [X23 + 0x20]
	0x024B5550 MOVZ W2, 0x1
	0x024B5554 MOV X0, X21
	0x024B5558 MOV W1, W31
	0x024B555C LDR X8, [X8 + 0xC0]
	0x024B5560 LDR X3, [X8 + 0x40]
	0x024B5564 LDR X8, [X3]
	0x024B5568 BLR X8
	0x024B556C LDR W8, [X21 + 0x24]
	0x024B5570 MOV X0, X19
	0x024B5574 MOV X1, X22
	0x024B5578 MOV X2, X20
	0x024B557C SUB W8, W8, 0x1
	0x024B5580 STR W8, [X21 + 0x24]
	0x024B5584 BL 0x3EB1AC0
	0x024B5588 LDR X8, [X27 + 0x28]
	0x024B558C LDUR X9, [X29 - 0x8]
	0x024B5590 CMP X8, X9
	0x024B5594 B.NE 0x24B55C0
	0x024B5598 ADD X31, X29, 0x0
	0x024B559C LDP X20, X19, [X31 + 0x50]
	0x024B55A0 LDP X22, X21, [X31 + 0x40]
	0x024B55A4 LDP X24, X23, [X31 + 0x30]
	0x024B55A8 LDP X26, X25, [X31 + 0x20]
	0x024B55AC LDP X28, X27, [X31 + 0x10]
	0x024B55B0 LDP X29, X30, [X31], #0x60
	0x024B55B4 RET
	0x024B55B8 BL 0x1C16F20
	0x024B55BC BL 0x1C16F28
	0x024B55C0 BL 0x3EB1B20
	0x024B55C4 STP X29, X30, [X31 - 0x60]!
	0x024B55C8 STP X28, X27, [X31 + 0x10]
	0x024B55CC STP X26, X25, [X31 + 0x20]
	0x024B55D0 STP X24, X23, [X31 + 0x30]
	0x024B55D4 STP X22, X21, [X31 + 0x40]
	0x024B55D8 STP X20, X19, [X31 + 0x50]
	0x024B55DC ADD X29, X31, 0x0
	0x024B55E0 SUB X31, X31, 0x70
	0x024B55E4 MRS X25, 0xC000
	0x024B55E8 LDR X8, [X25 + 0x28]
	0x024B55EC MOV X19, X3
	0x024B55F0 MOV W21, W1
	0x024B55F4 MOV W23, W2
	0x024B55F8 STUR X8, [X29 - 0x8]
	0x024B55FC LDR X8, [X3 + 0x20]
	0x024B5600 LDR X8, [X8 + 0xC0]
	0x024B5604 LDR X9, [X8 + 0x28]
	0x024B5608 LDR X8, [X8 + 0x38]
	0x024B560C LDR W22, [X9 + 0xFC]
	0x024B5610 LDR W9, [X8 + 0xFC]
	0x024B5614 ADD X8, X31, 0x0
	0x024B5618 STP X9, X0, [X29 - 0x58]
	0x024B561C ADD X9, X9, 0xF
	0x024B5620 AND X9, X9, 0x1FFFFFFFF
	0x024B5624 SUB X28, X8, X9
	0x024B5628 ADD X31, X28, 0x0
	0x024B562C ADD X8, X31, 0x0
	0x024B5630 SUB X8, X8, X9
	0x024B5634 STUR X8, [X29 - 0x40]
	0x024B5638 ADD X31, X8, 0x0
	0x024B563C ADD X9, X22, 0xF
	0x024B5640 ADD X8, X31, 0x0
	0x024B5644 AND X20, X9, 0x1FFFFFFFF
	0x024B5648 SUB X27, X8, X20
	0x024B564C ADD X31, X27, 0x0
	0x024B5650 ADD X8, X31, 0x0
	0x024B5654 SUB X8, X8, X20
	0x024B5658 STUR X8, [X29 - 0x28]
	0x024B565C ADD X31, X8, 0x0
	0x024B5660 ADD X8, X31, 0x0
	0x024B5664 SUB X8, X8, X20
	0x024B5668 STUR X8, [X29 - 0x60]
	0x024B566C ADD X31, X8, 0x0
	0x024B5670 ADD X8, X31, 0x0
	0x024B5674 SUB X0, X8, X20
	0x024B5678 ADD X31, X0, 0x0
	0x024B567C MOV W1, W31
	0x024B5680 MOV X2, X22
	0x024B5684 STUR X0, [X29 - 0x38]
	0x024B5688 BL 0x3EB1B10
	0x024B568C ADD X8, X31, 0x0
	0x024B5690 SUB X0, X8, X20
	0x024B5694 ADD X31, X0, 0x0
	0x024B5698 MOV W1, W31
	0x024B569C MOV X2, X22
	0x024B56A0 STUR X0, [X29 - 0x48]
	0x024B56A4 BL 0x3EB1B10
	0x024B56A8 ADDS W31, W23, 0x1
	0x024B56AC STUR W23, [X29 - 0x2C]
	0x024B56B0 B.EQ 0x24B56C0
	0x024B56B4 LDUR W8, [X29 - 0x2C]
	0x024B56B8 CMP W8, 0x1
	0x024B56BC B.NE 0x24B5A18
	0x024B56C0 LDUR X8, [X29 - 0x50]
	0x024B56C4 LDR X8, [X8 + 0x18]
	0x024B56C8 CBZ X8, 0x24B5A14
	0x024B56CC LDR W9, [X8 + 0x18]
	0x024B56D0 STUR X25, [X29 - 0x70]
	0x024B56D4 CMP W9, W21
	0x024B56D8 B.LS 0x24B5A10
	0x024B56DC LDR X9, [X8]
	0x024B56E0 MOV W10, W21
	0x024B56E4 SXTW X10, W10
	0x024B56E8 MOV X0, X27
	0x024B56EC LDR W9, [X9 + 0x104]
	0x024B56F0 MOV X2, X22
	0x024B56F4 MADD X8, X9, X10, X8
	0x024B56F8 ADD X1, X8, 0x20
	0x024B56FC BL 0x3EB1AC0
	0x024B5700 LDUR X0, [X29 - 0x38]
	0x024B5704 MOV X1, X27
	0x024B5708 MOV X2, X22
	0x024B570C BL 0x3EB1AC0
	0x024B5710 LDUR W8, [X29 - 0x2C]
	0x024B5714 LDUR X25, [X29 - 0x50]
	0x024B5718 ADDS W26, W21, W8
	0x024B571C B.MI 0x24B59DC
	0x024B5720 LDUR X24, [X29 - 0x48]
	0x024B5724 STUR X27, [X29 - 0x68]
	0x024B5728 LDR W8, [X25 + 0x24]
	0x024B572C CMP W26, W8
	0x024B5730 B.GE 0x24B59DC
	0x024B5734 LDR X8, [X25 + 0x18]
	0x024B5738 CBZ X8, 0x24B5A14
	0x024B573C LDR W9, [X8 + 0x18]
	0x024B5740 CMP W26, W9
	0x024B5744 B.CS 0x24B5A10
	0x024B5748 LDR X9, [X8]
	0x024B574C MOV W23, W26
	0x024B5750 MOV X0, X27
	0x024B5754 MOV X2, X22
	0x024B5758 LDR W9, [X9 + 0x104]
	0x024B575C NOP
	0x024B5760 MADD X8, X9, X23, X8

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+48], X29
	003 Move [X31+56], X30
	004 Move [X31+64], X28
	005 Move [X31+72], X27
	006 Move [X31+80], X26
	007 Move [X31+88], X25
	008 Move [X31+96], X24
	009 Move [X31+104], X23
	010 Move [X31+112], X22
	011 Move [X31+120], X21
	012 Move [X31+128], X20
	013 Move [X31+136], X19
	014 Move X20, 0x1F25000
	015 Move W8, [X20+3032]
	016 Move X26, X1
	017 Move X19, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {27}
	022 Move X0, 0x1C40000
	023 Move X0, [X0+3672]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X20+3032], W8
	027 Move X8, [X26+32]
	028 Move X20, 0x1C40000
	029 Move X8, [X8+192]
	030 Move X0, [X8+56]
	031 Move W8, [X0+309]
	032 Move X20, [X20+3672]
	033 Move TEMP, X8
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfEqual {38}
	037 Call 0x1C5D684
	038 Call 0x1C17F10
	039 Move X8, [X26+32]
	040 Move X23, X0
	041 Move X8, [X8+192]
	042 Move X1, [X8+64]
	043 Call Stack`1<Object>..ctor, X0
	044 Move W8, [X19+48]
	045 Move X0, [X20]
	046 Add W1, W8, 1
	047 Subtract W21, W8, 1
	048 Call 0x1C17D6C
	049 Move [X19+40], X0
	050 Move TEMP, X21
	051 And TEMP, TEMP, -2147483648
	052 Compare TEMP, -2147483648
	053 JumpIfEqual {63}
	054 Compare X0, 0
	055 JumpIfEqual {371}
	056 Move W8, [X0+24]
	057 Move W9, W31
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Add X10, X0, W9
	060 Move [X10+32], W9
	061 Add W9, W9, 1
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Move X8, [X26+32]
	064 Move X8, [X8+192]
	065 Move X0, [X8+72]
	066 Move W8, [X0+309]
	067 Move TEMP, X8
	068 And TEMP, TEMP, 1
	069 Compare TEMP, 1
	070 JumpIfEqual {72}
	071 Call 0x1C5D684
	072 Call 0x1C17F10
	073 Move X8, [X26+32]
	074 Move X22, X0
	075 Move X8, [X8+192]
	076 Move X1, [X8+80]
	077 Call 0x2600E84, X0
	078 Compare X22, 0
	079 JumpIfEqual {371}
	080 Move [X22+16], W31
	081 Move [X22+20], W21
	082 Compare X23, 0
	083 JumpIfEqual {371}
	084 Move X8, [X26+32]
	085 Move X0, X23
	086 Move X1, X22
	087 Move X8, [X8+192]
	088 Move X2, [X8+88]
	089 Call Stack`1<Object>.Push, X0, X1
	090 Move X8, [X26+32]
	091 Move W9, [X23+24]
	092 Move X8, [X8+192]
	093 NotImplemented "Instruction CMP not yet implemented."
	094 Move W9, 0xF0C3
	095 NotImplemented "Instruction MOVK not yet implemented."
	096 Move [X31+24], X23
	097 Move [X31+32], X9
	098 Move [X31+8], X26
	099 Move X1, [X8+96]
	100 Move X0, X23
	101 Call Stack`1<Object>.Pop, X0
	102 Compare X0, 0
	103 JumpIfEqual {371}
	104 Move W20, [X0+16]
	105 Move W28, [X0+20]
	106 Add W8, W20, 10
	107 NotImplemented "Instruction CMP not yet implemented."
	108 Add W13, W28, 1
	109 Move [X31+20], W13
	110 Move X8, [X19+40]
	111 Compare X8, 0
	112 JumpIfEqual {371}
	113 Move X12, [X31+32]
	114 Move W9, 0x9F0D
	115 NotImplemented "Instruction MOVK not yet implemented."
	116 Or W10, W31, 1
	117 NotImplemented "Instruction MADD not yet implemented."
	118 Subtract W9, W13, W20
	119 Move X11, W9
	120 Move W10, [X8+24]
	121 NotImplemented "Instruction SDIV not yet implemented."
	122 NotImplemented "Instruction MSUB not yet implemented."
	123 Add W9, W20, W9
	124 NotImplemented "Instruction CMP not yet implemented."
	125 Move [X31+32], X12
	126 Add X9, X8, W9
	127 Add X9, X9, 32
	128 Move W22, [X9]
	129 NotImplemented "Instruction CMP not yet implemented."
	130 Add X10, X8, W20
	131 Move W11, [X10+32]
	132 Move X25, W22
	133 Subtract W29, W20, 1
	134 Move W24, W13
	135 Move [X9], W11
	136 Move [X10+32], W22
	137 Move [X31+40], X20
	138 Move W27, W29
	139 Move W9, [X8+24]
	140 Add W23, W27, 1
	141 NotImplemented "Instruction CMP not yet implemented."
	142 Move X9, [X19+32]
	143 Compare X9, 0
	144 JumpIfEqual {371}
	145 Move X21, W23
	146 Add X8, X8, X21
	147 NotImplemented "Instruction LDRSW not yet implemented."
	148 Move W10, [X9+24]
	149 NotImplemented "Instruction CMP not yet implemented."
	150 NotImplemented "Instruction CMP not yet implemented."
	151 Move X10, [X19+16]
	152 Compare X10, 0
	153 JumpIfEqual {371}
	154 Add X8, X9, X8
	155 Add X9, X9, X25
	156 Move X11, [X10+24]
	157 Move X0, [X10+64]
	158 Move X1, [X8+32]
	159 Move X2, [X9+32]
	160 Move X3, [X10+40]
	161 NotImplemented "Instruction BLR not yet implemented."
	162 Move TEMP, X0
	163 And TEMP, TEMP, 1
	164 Compare TEMP, 1
	165 JumpIfEqual {170}
	166 Move X8, [X19+40]
	167 Move W27, W23
	168 Compare X8, 0
	169 JumpIfNotEqual {139}
	170 Add W29, W27, 1
	171 Move X8, [X19+32]
	172 Compare X8, 0
	173 JumpIfEqual {371}
	174 Move W9, [X8+24]
	175 NotImplemented "Instruction CMP not yet implemented."
	176 Move X10, [X19+40]
	177 Compare X10, 0
	178 JumpIfEqual {371}
	179 Move W11, [X10+24]
	180 Subtract W24, W24, 1
	181 NotImplemented "Instruction CMP not yet implemented."
	182 Move X23, W24
	183 Add X10, X10, X23
	184 NotImplemented "Instruction LDRSW not yet implemented."
	185 NotImplemented "Instruction CMP not yet implemented."
	186 Move X9, [X19+16]
	187 Compare X9, 0
	188 JumpIfEqual {371}
	189 Add X11, X8, X25
	190 Add X8, X8, X10
	191 Move X10, [X9+24]
	192 Move X0, [X9+64]
	193 Move X1, [X11+32]
	194 Move X2, [X8+32]
	195 Move X3, [X9+40]
	196 NotImplemented "Instruction BLR not yet implemented."
	197 Move TEMP, X0
	198 And TEMP, TEMP, 1
	199 Compare TEMP, 1
	200 JumpIfNotEqual {171}
	201 Move X8, [X19+40]
	202 Compare X8, 0
	203 JumpIfEqual {371}
	204 Move W9, [X8+24]
	205 NotImplemented "Instruction CMP not yet implemented."
	206 NotImplemented "Instruction CMP not yet implemented."
	207 Add X9, X8, X23
	208 Add X9, X9, 32
	209 Move W13, [X9]
	210 Move X10, [X26+32]
	211 Add X11, X8, X21
	212 Add X11, X11, 32
	213 Move W12, [X11]
	214 NotImplemented "Instruction CMP not yet implemented."
	215 Move X10, [X10+192]
	216 Move [X11], W13
	217 Move [X9], W12
	218 Move W8, [X11]
	219 Move [X11], W12
	220 Move X21, [X31+24]
	221 Move [X9], W8
	222 Move X0, [X10+72]
	223 Move W8, [X0+309]
	224 Move TEMP, X8
	225 And TEMP, TEMP, 1
	226 Compare TEMP, 1
	227 JumpIfEqual {229}
	228 Call 0x1C5D684
	229 Move X20, [X31+40]
	230 Call 0x1C17F10
	231 Move X8, [X26+32]
	232 Move X22, X0
	233 Move X8, [X8+192]
	234 Move X1, [X8+80]
	235 Call 0x2600E84, X0
	236 Compare X22, 0
	237 JumpIfEqual {371}
	238 Subtract W8, W27, W20
	239 Add W8, W8, 1
	240 Subtract W9, W28, W24
	241 NotImplemented "Instruction CMP not yet implemented."
	242 Move [X22+16], W20
	243 Move [X22+20], W27
	244 Move X8, [X26+32]
	245 Move X0, X21
	246 Move X1, X22
	247 Add W20, W24, 1
	248 Move X8, [X8+192]
	249 Move X2, [X8+88]
	250 Call Stack`1<Object>.Push, X0, X1
	251 Move W13, [X31+20]
	252 Add W8, W24, 11
	253 NotImplemented "Instruction CMP not yet implemented."
	254 Add W8, W24, 1
	255 Move [X22+16], W8
	256 Move [X22+20], W28
	257 Move X8, [X26+32]
	258 Move X0, X21
	259 Move X1, X22
	260 Move X8, [X8+192]
	261 Move X2, [X8+88]
	262 Call Stack`1<Object>.Push, X0, X1
	263 Add W8, W20, 10
	264 NotImplemented "Instruction CMP not yet implemented."
	265 Move W28, W27
	266 Add W20, W24, 1
	267 Move W27, W28
	268 Add W22, W20, 1
	269 NotImplemented "Instruction CMP not yet implemented."
	270 Move X8, [X19+40]
	271 Move X24, W20
	272 Move W25, W20
	273 Move [X31+40], X20
	274 Compare X8, 0
	275 JumpIfEqual {371}
	276 Move X9, [X8+24]
	277 NotImplemented "Instruction CMP not yet implemented."
	278 Move X21, W22
	279 Add X10, X8, X21
	280 Move W28, [X10+32]
	281 NotImplemented "Instruction CMP not yet implemented."
	282 Move X29, X31
	283 NotImplemented "Instruction SBFM not yet implemented."
	284 Move X26, W28
	285 Move X10, [X19+32]
	286 Compare X10, 0
	287 JumpIfEqual {371}
	288 Move W11, [X10+24]
	289 NotImplemented "Instruction CMP not yet implemented."
	290 Add X20, X25, X29
	291 NotImplemented "Instruction CMP not yet implemented."
	292 Add X8, X8, X23
	293 Add X8, X8, X29
	294 NotImplemented "Instruction LDRSW not yet implemented."
	295 NotImplemented "Instruction CMP not yet implemented."
	296 Move X9, [X19+16]
	297 Compare X9, 0
	298 JumpIfEqual {371}
	299 Add X11, X10, X26
	300 Add X8, X10, X8
	301 Move X10, [X9+24]
	302 Move X0, [X9+64]
	303 Move X1, [X11+32]
	304 Move X2, [X8+32]
	305 Move X3, [X9+40]
	306 NotImplemented "Instruction BLR not yet implemented."
	307 Add X8, X25, X29
	308 Add X10, X8, 1
	309 Move TEMP, X0
	310 And TEMP, TEMP, 1
	311 Compare TEMP, 1
	312 JumpIfEqual {330}
	313 Move X8, [X19+40]
	314 Compare X8, 0
	315 JumpIfEqual {371}
	316 Move X9, [X8+24]
	317 NotImplemented "Instruction CMP not yet implemented."
	318 NotImplemented "Instruction CMP not yet implemented."
	319 Add X10, X8, X23
	320 Add X10, X10, X29
	321 Move W11, [X10+28]
	322 Subtract X29, X29, 1
	323 Add X12, X21, X29
	324 NotImplemented "Instruction CMP not yet implemented."
	325 Move [X10+32], W11
	326 Move X20, [X31+40]
	327 Move X26, [X31+8]
	328 Move W10, W20
	329 Move W10, W22
	330 Move X8, [X19+40]
	331 Compare X8, 0
	332 JumpIfEqual {371}
	333 Move X26, [X31+8]
	334 Move X20, [X31+40]
	335 Move W9, [X8+24]
	336 NotImplemented "Instruction CMP not yet implemented."
	337 Add W22, W22, 1
	338 Add X9, X8, W10
	339 NotImplemented "Instruction CMP not yet implemented."
	340 Add X25, X25, 1
	341 Move [X9+32], W28
	342 Move X23, [X31+24]
	343 Move X8, [X26+32]
	344 Move W9, [X23+24]
	345 Move X8, [X8+192]
	346 NotImplemented "Instruction CMP not yet implemented."
	347 Move W9, [X19+48]
	348 Move X0, [X19+24]
	349 Move W10, 1
	350 Move [X19+56], W10
	351 Move [X19+52], W9
	352 Compare X0, 0
	353 JumpIfEqual {371}
	354 Move X1, [X8+144]
	355 Move X20, [X31+128]
	356 Move X19, [X31+136]
	357 Move X22, [X31+112]
	358 Move X21, [X31+120]
	359 Move X24, [X31+96]
	360 Move X23, [X31+104]
	361 Move X26, [X31+80]
	362 Move X25, [X31+88]
	363 Move X28, [X31+64]
	364 Move X27, [X31+72]
	365 Move X29, [X31+48]
	366 Move X30, [X31+56]
	367 Add X31, X31, 144
	368 Call 0x24B4000, X0
	369 Return 
	370 Call 0x1C17F28
	371 Call 0x1C17F20

Method: UnityEngine.Rendering.Universal.LibTessDotNet.PQHandle Insert(TValue value)

Disassembly:
	0x024B5764 ADD X1, X8, 0x20
	0x024B5768 BL 0x3EB1AC0
	0x024B576C MOV X0, X24
	0x024B5770 MOV X1, X27
	0x024B5774 MOV X2, X22
	0x024B5778 BL 0x3EB1AC0
	0x024B577C LDUR X20, [X29 - 0x28]
	0x024B5780 LDUR X1, [X29 - 0x38]
	0x024B5784 LDR X25, [X25 + 0x10]
	0x024B5788 MOV X2, X22
	0x024B578C MOV X0, X20
	0x024B5790 BL 0x3EB1AC0
	0x024B5794 LDR X8, [X19 + 0x20]
	0x024B5798 MOV X0, X20
	0x024B579C LDR X8, [X8 + 0xC0]
	0x024B57A0 LDR X8, [X8 + 0x28]
	0x024B57A4 LDR X8, [X8 + 0x80]
	0x024B57A8 ADD X1, X8, 0x20
	0x024B57AC BL 0x1C16D18
	0x024B57B0 LDUR X20, [X29 - 0x58]
	0x024B57B4 MOV X1, X0
	0x024B57B8 MOV X0, X28
	0x024B57BC MOV X2, X20
	0x024B57C0 BL 0x3EB1AC0
	0x024B57C4 LDUR X27, [X29 - 0x60]
	0x024B57C8 MOV X1, X24
	0x024B57CC MOV X2, X22
	0x024B57D0 MOV X0, X27
	0x024B57D4 BL 0x3EB1AC0
	0x024B57D8 LDR X8, [X19 + 0x20]
	0x024B57DC MOV X0, X27
	0x024B57E0 LDR X8, [X8 + 0xC0]
	0x024B57E4 LDR X8, [X8 + 0x28]
	0x024B57E8 LDR X8, [X8 + 0x80]
	0x024B57EC ADD X1, X8, 0x20
	0x024B57F0 BL 0x1C16D18
	0x024B57F4 MOV X1, X0
	0x024B57F8 LDUR X0, [X29 - 0x40]
	0x024B57FC MOV X2, X20
	0x024B5800 BL 0x3EB1AC0
	0x024B5804 CBZ X25, 0x24B5A14

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move W8, [X0+56]
	006 Move X20, X0
	007 Move X19, X1
	008 Compare W8, 0
	009 JumpIfEqual {18}
	010 Move X0, [X20+24]
	011 Compare X0, 0
	012 JumpIfEqual {47}
	013 Move X8, [X2+32]
	014 Move X1, X19
	015 Move X8, [X8+192]
	016 Move X2, [X8+152]
	017 Call 0x24B4050, X0, X1
	018 Move W21, [X20+48]
	019 Move W8, [X20+52]
	020 Move X21, W21
	021 Add W9, W21, 1
	022 NotImplemented "Instruction CMP not yet implemented."
	023 Move [X20+48], W9
	024 Move W1, W8
	025 ShiftRight W1, 31
	026 And W1, W1, 0x3FFFFFFF
	027 Move [X20+52], W1
	028 Move X8, [X2+32]
	029 Add X0, X20, 32
	030 Move X8, [X8+192]
	031 Move X2, [X8+160]
	032 Call Array.Resize, X0, X1
	033 Move X8, [X20+32]
	034 Compare X8, 0
	035 JumpIfEqual {47}
	036 Move W9, [X8+24]
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Add X8, X8, X21
	039 NotImplemented "Instruction ORN not yet implemented."
	040 Move [X8+32], X19
	041 Move X20, [X31+16]
	042 Move X19, [X31+24]
	043 Move W0, W0
	044 Move X30, [X31+32]
	045 Move X21, [X31+40]
	046 Return X0
	047 Call 0x1C17F20
	048 Call 0x1C17F28

Method: TValue ExtractMin()

Disassembly:
	0x024B5808 LDR X8, [X19 + 0x20]
	0x024B580C LDR X8, [X8 + 0xC0]
	0x024B5810 LDR X1, [X8 + 0x18]
	0x024B5814 LDRB W9, [X1 + 0x135]
	0x024B5818 TBNZ X9, 0x0, 0x24B5830
	0x024B581C MOV X0, X1
	0x024B5820 BL 0x1C5C684
	0x024B5824 LDR X8, [X19 + 0x20]
	0x024B5828 MOV X1, X0
	0x024B582C LDR X8, [X8 + 0xC0]
	0x024B5830 LDR X8, [X8 + 0x38]
	0x024B5834 LDUR X9, [X29 - 0x40]
	0x024B5838 MOV X20, X28
	0x024B583C MOV X27, X28
	0x024B5840 LDR W8, [X8 + 0x28]
	0x024B5844 MOV X28, X9
	0x024B5848 TBNZ X8, 0x1F, 0x24B5854
	0x024B584C LDR X20, [X27]
	0x024B5850 LDR X28, [X9]
	0x024B5854 LDR X8, [X25]
	0x024B5858 LDRH W9, [X8 + 0x12E]
	0x024B585C CBZ X9, 0x24B5880
	0x024B5860 LDR X10, [X8 + 0xB0]
	0x024B5864 ADD X10, X10, 0x8
	0x024B5868 LDUR X11, [X10 - 0x8]
	0x024B586C CMP X11, X1
	0x024B5870 B.EQ 0x24B5890
	0x024B5874 SUBS X9, X9, 0x1
	0x024B5878 ADD X10, X10, 0x10
	0x024B587C B.NE 0x24B5868
	0x024B5880 MOV X0, X25
	0x024B5884 MOV W2, W31
	0x024B5888 BL 0x1C5C788
	0x024B588C B 0x24B589C
	0x024B5890 LDRSW X9, [X10]
	0x024B5894 ADD X8, X8, X9, 0x4, LSL
	0x024B5898 ADD X0, X8, 0x138
	0x024B589C STP X20, X28, [X29 - 0x20]
	0x024B58A0 LDR X1, [X0 + 0x8]
	0x024B58A4 LDUR W9, [X29 - 0x2C]
	0x024B58A8 SUB X3, X29, 0x20
	0x024B58AC SUB X4, X29, 0xC
	0x024B58B0 LDP X0, X8, [X1 + 0x8]
	0x024B58B4 CMP W9, 0x1
	0x024B58B8 CSET W20, EQ
	0x024B58BC ADDS W31, W9, 0x1
	0x024B58C0 MOV X2, X25
	0x024B58C4 CSET W28, EQ
	0x024B58C8 BLR X8
	0x024B58CC LDUR W8, [X29 - 0xC]
	0x024B58D0 LDUR X25, [X29 - 0x50]
	0x024B58D4 CMP W8, 0x0
	0x024B58D8 CSET W8, GT
	0x024B58DC AND W9, W28, W8, 0x0
	0x024B58E0 MOV X28, X27
	0x024B58E4 LDUR X27, [X29 - 0x68]
	0x024B58E8 CSET W8, LT
	0x024B58EC TBNZ X9, 0x0, 0x24B58F8
	0x024B58F0 AND W8, W20, W8, 0x0
	0x024B58F4 CBZ W8, 0x24B59DC
	0x024B58F8 LDUR X1, [X29 - 0x48]
	0x024B58FC LDR X20, [X25 + 0x18]
	0x024B5900 MOV X0, X27
	0x024B5904 MOV X2, X22
	0x024B5908 BL 0x3EB1AC0
	0x024B590C CBZ X20, 0x24B5A14
	0x024B5910 LDR W8, [X20 + 0x18]
	0x024B5914 CMP W21, W8
	0x024B5918 B.CS 0x24B5A10

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move W8, [X0+48]
	006 Move X19, X0
	007 Move X21, X1
	008 Compare W8, 0
	009 JumpIfEqual {45}
	010 Move X10, [X19+40]
	011 Compare X10, 0
	012 JumpIfEqual {83}
	013 Move W9, [X10+24]
	014 Subtract W11, W8, 1
	015 NotImplemented "Instruction CMP not yet implemented."
	016 Move X9, [X19+32]
	017 Compare X9, 0
	018 JumpIfEqual {83}
	019 Add X10, X10, W11
	020 NotImplemented "Instruction LDRSW not yet implemented."
	021 Move W11, [X9+24]
	022 NotImplemented "Instruction CMP not yet implemented."
	023 Move X0, [X19+24]
	024 Compare X0, 0
	025 JumpIfEqual {83}
	026 Add X9, X9, X10
	027 Move W10, [X0+40]
	028 Move X20, [X9+32]
	029 Compare W10, 0
	030 JumpIfEqual {58}
	031 Call 0x24B4310, X0
	032 Move X8, [X19+16]
	033 Compare X8, 0
	034 JumpIfEqual {83}
	035 Move X1, X0
	036 Move X9, [X8+24]
	037 Move X0, [X8+64]
	038 Move X3, [X8+40]
	039 Move X2, X20
	040 NotImplemented "Instruction BLR not yet implemented."
	041 Move TEMP, X0
	042 And TEMP, TEMP, 1
	043 Compare TEMP, 1
	044 JumpIfNotEqual {57}
	045 Move X0, [X19+24]
	046 Compare X0, 0
	047 JumpIfEqual {83}
	048 Move X8, [X21+32]
	049 Move X20, [X31+16]
	050 Move X19, [X31+24]
	051 Move X8, [X8+192]
	052 Move X1, [X8+176]
	053 Move X30, [X31+32]
	054 Move X21, [X31+40]
	055 Call 0x24B4218, X0
	056 Return X0
	057 Move W8, [X19+48]
	058 Subtract W8, W8, 1
	059 Move [X19+48], W8
	060 Subtract W8, W8, 1
	061 Move X9, [X19+40]
	062 Compare X9, 0
	063 JumpIfEqual {83}
	064 Move W10, [X9+24]
	065 NotImplemented "Instruction CMP not yet implemented."
	066 Move X10, [X19+32]
	067 Compare X10, 0
	068 JumpIfEqual {83}
	069 Add X9, X9, W8
	070 NotImplemented "Instruction LDRSW not yet implemented."
	071 Move W11, [X10+24]
	072 NotImplemented "Instruction CMP not yet implemented."
	073 Add X9, X10, X9
	074 Move X9, [X9+32]
	075 Compare X9, 0
	076 JumpIfEqual {59}
	077 Move X0, X20
	078 Move X20, [X31+16]
	079 Move X19, [X31+24]
	080 Move X30, [X31+32]
	081 Move X21, [X31+40]
	082 Return X0
	083 Call 0x1C17F20
	084 Call 0x1C17F28

Method: TValue Minimum()

Disassembly:
	0x024B591C LDR X8, [X20]
	0x024B5920 SXTW X9, W21
	0x024B5924 MOV X1, X27
	0x024B5928 MOV X2, X22
	0x024B592C LDR W8, [X8 + 0x104]
	0x024B5930 NOP
	0x024B5934 MADD X8, X8, X9, X20
	0x024B5938 ADD X0, X8, 0x20
	0x024B593C BL 0x3EB1AC0
	0x024B5940 LDR X8, [X19 + 0x20]
	0x024B5944 LDR X8, [X8 + 0xC0]
	0x024B5948 LDR X0, [X8 + 0x28]
	0x024B594C LDRB W8, [X0 + 0x135]
	0x024B5950 TBNZ X8, 0x0, 0x24B5958
	0x024B5954 BL 0x1C5C684
	0x024B5958 LDR W8, [X20 + 0x18]
	0x024B595C CMP W21, W8
	0x024B5960 B.CS 0x24B5A10
	0x024B5964 LDUR X0, [X29 - 0x28]
	0x024B5968 LDUR X1, [X29 - 0x38]
	0x024B596C LDR X20, [X25 + 0x18]
	0x024B5970 MOV X2, X22
	0x024B5974 BL 0x3EB1AC0
	0x024B5978 CBZ X20, 0x24B5A14
	0x024B597C LDR W8, [X20 + 0x18]
	0x024B5980 CMP W26, W8
	0x024B5984 B.CS 0x24B5A10
	0x024B5988 LDR X8, [X20]
	0x024B598C LDUR X1, [X29 - 0x28]
	0x024B5990 MOV X2, X22
	0x024B5994 LDR W8, [X8 + 0x104]
	0x024B5998 NOP
	0x024B599C MADD X8, X8, X23, X20
	0x024B59A0 ADD X0, X8, 0x20
	0x024B59A4 BL 0x3EB1AC0
	0x024B59A8 LDR X8, [X19 + 0x20]
	0x024B59AC LDR X8, [X8 + 0xC0]
	0x024B59B0 LDR X0, [X8 + 0x28]
	0x024B59B4 LDRB W8, [X0 + 0x135]
	0x024B59B8 TBNZ X8, 0x0, 0x24B59C0
	0x024B59BC BL 0x1C5C684
	0x024B59C0 LDR W8, [X20 + 0x18]
	0x024B59C4 CMP W26, W8
	0x024B59C8 B.CS 0x24B5A10
	0x024B59CC LDUR W8, [X29 - 0x2C]
	0x024B59D0 ADDS W26, W26, W8
	0x024B59D4 ADD W21, W21, W8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W8, [X0+48]
	005 Move X19, X0
	006 Compare W8, 0
	007 JumpIfEqual {50}
	008 Move X9, [X19+40]
	009 Compare X9, 0
	010 JumpIfEqual {58}
	011 Move W11, [X9+24]
	012 Subtract W10, W8, 1
	013 NotImplemented "Instruction CMP not yet implemented."
	014 Move X8, [X19+32]
	015 Compare X8, 0
	016 JumpIfEqual {58}
	017 Add X9, X9, W10
	018 NotImplemented "Instruction LDRSW not yet implemented."
	019 Move W10, [X8+24]
	020 NotImplemented "Instruction CMP not yet implemented."
	021 Move X0, [X19+24]
	022 Compare X0, 0
	023 JumpIfEqual {58}
	024 Add X8, X8, X9
	025 Move W9, [X0+40]
	026 Move X20, [X8+32]
	027 Compare W9, 0
	028 JumpIfEqual {44}
	029 Call 0x24B4310, X0
	030 Move X8, [X19+16]
	031 Compare X8, 0
	032 JumpIfEqual {58}
	033 Move X19, X0
	034 Move X9, [X8+24]
	035 Move X0, [X8+64]
	036 Move X3, [X8+40]
	037 Move X1, X19
	038 Move X2, X20
	039 NotImplemented "Instruction BLR not yet implemented."
	040 Move TEMP, X0
	041 And TEMP, TEMP, 1
	042 Compare TEMP, 1
	043 JumpIfEqual {45}
	044 Move X19, X20
	045 Move X0, X19
	046 Move X20, [X31+16]
	047 Move X19, [X31+24]
	048 Move X30, [X31+32]
	049 Return X0
	050 Move X0, [X19+24]
	051 Compare X0, 0
	052 JumpIfEqual {58}
	053 Move X20, [X31+16]
	054 Move X19, [X31+24]
	055 Move X30, [X31+32]
	056 Call 0x24B4310, X0
	057 Return X0
	058 Call 0x1C17F20
	059 Call 0x1C17F28

Method: System.Void Remove(UnityEngine.Rendering.Universal.LibTessDotNet.PQHandle handle)

Disassembly:
	0x024B59D8 B.PL 0x24B5728
	0x024B59DC LDUR X8, [X29 - 0x70]
	0x024B59E0 LDR X8, [X8 + 0x28]
	0x024B59E4 LDUR X9, [X29 - 0x8]
	0x024B59E8 CMP X8, X9
	0x024B59EC B.NE 0x24B5A54
	0x024B59F0 ADD X31, X29, 0x0
	0x024B59F4 LDP X20, X19, [X31 + 0x50]
	0x024B59F8 LDP X22, X21, [X31 + 0x40]
	0x024B59FC LDP X24, X23, [X31 + 0x30]
	0x024B5A00 LDP X26, X25, [X31 + 0x20]
	0x024B5A04 LDP X28, X27, [X31 + 0x10]
	0x024B5A08 LDP X29, X30, [X31], #0x60
	0x024B5A0C RET
	0x024B5A10 BL 0x1C16F28
	0x024B5A14 BL 0x1C16F20
	0x024B5A18 ADRP X0, 0x1C46000
	0x024B5A1C LDR X0, [X0 + 0x578]
	0x024B5A20 BL 0x1C16D08
	0x024B5A24 BL 0x1C16F10
	0x024B5A28 MOV X20, X0
	0x024B5A2C ADRP X0, 0x1C67000
	0x024B5A30 LDR X0, [X0 + 0xEE0]
	0x024B5A34 BL 0x1C16D08
	0x024B5A38 MOV X1, X0
	0x024B5A3C MOV X0, X20
	0x024B5A40 MOV X2, X31
	0x024B5A44 BL 0x3314A68
	0x024B5A48 MOV X0, X20
	0x024B5A4C MOV X1, X19
	0x024B5A50 BL 0x1C16DEC
	0x024B5A54 BL 0x3EB1B20
	0x024B5A58 STP X29, X30, [X31 - 0x30]!
	0x024B5A5C STP X22, X21, [X31 + 0x10]
	0x024B5A60 STP X20, X19, [X31 + 0x20]
	0x024B5A64 ADD X29, X31, 0x0
	0x024B5A68 SUB X31, X31, 0x10
	0x024B5A6C MRS X22, 0xC000
	0x024B5A70 LDR X8, [X22 + 0x28]
	0x024B5A74 STUR X8, [X29 - 0x8]
	0x024B5A78 LDR X8, [X2 + 0x20]
	0x024B5A7C LDR X8, [X8 + 0xC0]
	0x024B5A80 LDR X9, [X8 + 0x30]
	0x024B5A84 LDR W20, [X9 + 0xFC]
	0x024B5A88 ADD X9, X31, 0x0
	0x024B5A8C ADD X10, X20, 0xF

ISIL:
	001 Move [X31-16], X30
	002 Move TEMP, X1
	003 And TEMP, TEMP, -2147483648
	004 Compare TEMP, -2147483648
	005 JumpIfEqual {16}
	006 Move X0, [X0+24]
	007 Compare X0, 0
	008 JumpIfEqual {50}
	009 Move X8, [X2+32]
	010 And X1, X1, 0
	011 Move X8, [X8+192]
	012 Move X2, [X8+192]
	013 Move X30, [X31+16]
	014 Call 0x24B4360, X0, X1
	015 Return 
	016 Move X8, [X0+32]
	017 Compare X8, 0
	018 JumpIfEqual {50}
	019 Move W10, [X8+24]
	020 NotImplemented "Instruction ORN not yet implemented."
	021 NotImplemented "Instruction CMP not yet implemented."
	022 Add X8, X8, W9
	023 Move [X8+32], X31
	024 Move W11, [X0+48]
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move X8, [X0+40]
	027 Compare X8, 0
	028 JumpIfEqual {50}
	029 Move X9, [X0+32]
	030 Move W10, [X8+24]
	031 Add W11, W11, 1
	032 Subtract W12, W11, 2
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Compare X9, 0
	035 JumpIfEqual {50}
	036 Add X13, X8, W12
	037 NotImplemented "Instruction LDRSW not yet implemented."
	038 Move W14, [X9+24]
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Add X13, X9, X13
	041 Move X13, [X13+32]
	042 Compare X13, 0
	043 JumpIfNotEqual {47}
	044 Subtract W11, W11, 1
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Move [X0+48], W12
	047 Move X30, [X31+16]
	048 Return 
	049 Call 0x1C17F28
	050 Call 0x1C17F20

