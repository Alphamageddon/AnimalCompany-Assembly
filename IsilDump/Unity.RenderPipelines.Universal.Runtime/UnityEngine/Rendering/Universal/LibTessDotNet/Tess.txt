Type: UnityEngine.Rendering.Universal.LibTessDotNet.Tess

Method: UnityEngine.Rendering.Universal.LibTessDotNet.Tess/ActiveRegion RegionBelow(UnityEngine.Rendering.Universal.LibTessDotNet.Tess/ActiveRegion reg)

Disassembly:
	0x03A97F54 LDR X0, [X0 + 0x658]
	0x03A97F58 BL 0x1C16CF4
	0x03A97F5C ADRP X0, 0x6C0000
	0x03A97F60 LDR X0, [X0 + 0x5F8]
	0x03A97F64 BL 0x1C16CF4
	0x03A97F68 ADRP X0, 0x6C0000
	0x03A97F6C LDR X0, [X0 + 0x680]
	0x03A97F70 BL 0x1C16CF4
	0x03A97F74 MOVZ W8, 0x1
	0x03A97F78 STRB W8, [X21 + 0x3C1]

ISIL:
	001 Move [X31-16], X30
	002 Compare X1, 0
	003 JumpIfEqual {13}
	004 Move X8, [X1+24]
	005 Compare X8, 0
	006 JumpIfEqual {13}
	007 Move X8, [X8+24]
	008 Compare X8, 0
	009 JumpIfEqual {13}
	010 Move X0, [X8+16]
	011 Move X30, [X31+16]
	012 Return X0
	013 Call 0x1C17F20

Method: UnityEngine.Rendering.Universal.LibTessDotNet.Tess/ActiveRegion RegionAbove(UnityEngine.Rendering.Universal.LibTessDotNet.Tess/ActiveRegion reg)

Disassembly:
	0x03A97F7C MOV X1, X20
	0x03A97F80 BL 0x3A96F54
	0x03A97F84 CBZ X20, 0x3A98460
	0x03A97F88 MOV X21, X0
	0x03A97F8C CBZ X0, 0x3A98460
	0x03A97F90 LDR X22, [X20 + 0x10]
	0x03A97F94 CBZ X22, 0x3A98460
	0x03A97F98 LDR X29, [X21 + 0x10]
	0x03A97F9C CBZ X29, 0x3A98460
	0x03A97FA0 LDR X9, [X22 + 0x28]

ISIL:
	001 Move [X31-16], X30
	002 Compare X1, 0
	003 JumpIfEqual {13}
	004 Move X8, [X1+24]
	005 Compare X8, 0
	006 JumpIfEqual {13}
	007 Move X8, [X8+32]
	008 Compare X8, 0
	009 JumpIfEqual {13}
	010 Move X0, [X8+16]
	011 Move X30, [X31+16]
	012 Return X0
	013 Call 0x1C17F20

Method: System.Boolean EdgeLeq(UnityEngine.Rendering.Universal.LibTessDotNet.Tess/ActiveRegion reg1, UnityEngine.Rendering.Universal.LibTessDotNet.Tess/ActiveRegion reg2)

Disassembly:
	0x03A97FA4 CBZ X9, 0x3A98460
	0x03A97FA8 LDR X8, [X29 + 0x28]
	0x03A97FAC CBZ X8, 0x3A98460
	0x03A97FB0 LDR X26, [X22 + 0x40]
	0x03A97FB4 LDR X25, [X29 + 0x40]
	0x03A97FB8 CMP X26, X25
	0x03A97FBC B.EQ 0x3A98114
	0x03A97FC0 CBZ X26, 0x3A98460
	0x03A97FC4 LDR X24, [X9 + 0x40]
	0x03A97FC8 CBZ X24, 0x3A98460
	0x03A97FCC ADRP X9, 0x65C000
	0x03A97FD0 LDR X9, [X9 + 0x5A8]
	0x03A97FD4 LDR X23, [X8 + 0x40]
	0x03A97FD8 LDR V8, [X26 + 0x38]
	0x03A97FDC LDR V9, [X24 + 0x38]
	0x03A97FE0 LDR X0, [X9]
	0x03A97FE4 LDR W8, [X0 + 0xE0]
	0x03A97FE8 CBNZ W8, 0x3A97FF0
	0x03A97FEC BL 0x1C16DFC
	0x03A97FF0 MOV V0.16B, V8.16B
	0x03A97FF4 MOV V1.16B, V9.16B
	0x03A97FF8 MOV X0, X31
	0x03A97FFC BL 0x337EEBC
	0x03A98000 CBZ X25, 0x3A98460
	0x03A98004 CBZ X23, 0x3A98460
	0x03A98008 MOV V8.16B, V0.16B
	0x03A9800C LDR V0, [X25 + 0x38]
	0x03A98010 LDR V1, [X23 + 0x38]
	0x03A98014 MOV X0, X31
	0x03A98018 BL 0x337EE18
	0x03A9801C FCMP S8, S0
	0x03A98020 B.GT 0x3A98114
	0x03A98024 MOV X0, X26
	0x03A98028 MOV X1, X25
	0x03A9802C BL 0x3A95354
	0x03A98030 TBZ X0, 0x0, 0x3A98050
	0x03A98034 MOV X0, X23
	0x03A98038 MOV X1, X26
	0x03A9803C MOV X2, X25
	0x03A98040 BL 0x3A95410
	0x03A98044 FCMP S0, 0x0
	0x03A98048 B.LE 0x3A98068
	0x03A9804C B 0x3A98114
	0x03A98050 MOV X0, X24
	0x03A98054 MOV X1, X25
	0x03A98058 MOV X2, X26
	0x03A9805C BL 0x3A95410
	0x03A98060 FCMP S0, 0x0
	0x03A98064 B.MI 0x3A98114
	0x03A98068 ADRP X8, 0x6BF000
	0x03A9806C LDR X8, [X8 + 0x5F8]
	0x03A98070 LDR X0, [X8]
	0x03A98074 BL 0x24A6E1C
	0x03A98078 MOV X27, X0
	0x03A9807C MOV X0, X24
	0x03A98080 MOV X1, X26
	0x03A98084 MOV X2, X23
	0x03A98088 MOV X3, X25
	0x03A9808C MOV X4, X27
	0x03A98090 BL 0x3A95730
	0x03A98094 LDR X1, [X19 + 0x60]
	0x03A98098 MOV X0, X27
	0x03A9809C BL 0x3A95354

ISIL:
	001 Move [X31-48], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Compare X1, 0
	007 JumpIfEqual {73}
	008 Compare X2, 0
	009 JumpIfEqual {73}
	010 Move X21, [X1+16]
	011 Compare X21, 0
	012 JumpIfEqual {73}
	013 Move X8, [X21+40]
	014 Compare X8, 0
	015 JumpIfEqual {73}
	016 Move X20, [X2+16]
	017 Compare X20, 0
	018 JumpIfEqual {73}
	019 Move X9, [X20+40]
	020 Compare X9, 0
	021 JumpIfEqual {73}
	022 Move X19, X0
	023 Move X0, [X8+64]
	024 Move X1, [X19+96]
	025 Move X8, [X9+64]
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move X2, [X21+64]
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Call Geom.EdgeEval, X0, X1, X2
	030 Move X8, [X20+40]
	031 Compare X8, 0
	032 JumpIfEqual {73}
	033 Move X0, [X8+64]
	034 Move X1, [X19+96]
	035 Move X2, [X20+64]
	036 Move V8, V0
	037 Call Geom.EdgeEval, X0, X1, X2
	038 NotImplemented "Instruction FCMP not yet implemented."
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Move X2, [X20+64]
	041 Move X0, X8
	042 Move X0, [X21+64]
	043 Move X1, [X20+64]
	044 Call Geom.VertLeq, X0, X1
	045 Move TEMP, X0
	046 And TEMP, TEMP, 1
	047 Compare TEMP, 1
	048 JumpIfNotEqual {58}
	049 Move X8, [X20+40]
	050 Compare X8, 0
	051 JumpIfEqual {73}
	052 Move X0, [X8+64]
	053 Move X1, [X21+64]
	054 Move X2, [X20+64]
	055 Call Geom.EdgeSign, X0, X1, X2
	056 NotImplemented "Instruction FCMP not yet implemented."
	057 NotImplemented "Instruction CSET not yet implemented."
	058 Move X8, [X21+40]
	059 Compare X8, 0
	060 JumpIfEqual {73}
	061 Move X0, [X8+64]
	062 Move X1, [X20+64]
	063 Move X2, [X21+64]
	064 Call Geom.EdgeSign, X0, X1, X2
	065 NotImplemented "Instruction FCMP not yet implemented."
	066 NotImplemented "Instruction CSET not yet implemented."
	067 Move X20, [X31+32]
	068 Move X19, [X31+40]
	069 Move X30, [X31+16]
	070 Move X21, [X31+24]
	071 Move V8, [X31+48]
	072 Return X0
	073 Call 0x1C17F20

Method: System.Void DeleteRegion(UnityEngine.Rendering.Universal.LibTessDotNet.Tess/ActiveRegion reg)

Disassembly:
	0x03A980A0 TBZ X0, 0x0, 0x3A980B8
	0x03A980A4 LDR X8, [X19 + 0x60]
	0x03A980A8 CBZ X8, 0x3A98460
	0x03A980AC CBZ X27, 0x3A98460
	0x03A980B0 LDUR V0, [X8 + 0x34]
	0x03A980B4 STUR D0, [X27 + 0x34]
	0x03A980B8 MOV X0, X26
	0x03A980BC MOV X1, X25
	0x03A980C0 BL 0x3A95354
	0x03A980C4 ANDS W31, W0, 0x1
	0x03A980C8 CSEL X28, X26, X25, NE
	0x03A980CC MOV X0, X28
	0x03A980D0 MOV X1, X27
	0x03A980D4 BL 0x3A95354
	0x03A980D8 TBZ X0, 0x0, 0x3A980E8
	0x03A980DC CBZ X27, 0x3A98460
	0x03A980E0 LDUR V0, [X28 + 0x34]
	0x03A980E4 STUR D0, [X27 + 0x34]
	0x03A980E8 MOV X0, X27
	0x03A980EC MOV X1, X26
	0x03A980F0 BL 0x3A95314
	0x03A980F4 TBNZ X0, 0x0, 0x3A98108
	0x03A980F8 MOV X0, X27
	0x03A980FC MOV X1, X25
	0x03A98100 BL 0x3A95314
	0x03A98104 TBZ X0, 0x0, 0x3A9813C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x94B000
	006 Move W8, [X21+957]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x6C0000
	014 Move X0, [X0+1632]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+957], W8
	018 Compare X19, 0
	019 JumpIfEqual {37}
	020 Move X8, [X19+16]
	021 Compare X8, 0
	022 JumpIfEqual {37}
	023 Move [X8+80], X31
	024 Move X0, [X20+80]
	025 Compare X0, 0
	026 JumpIfEqual {37}
	027 Move X8, 0x6C0000
	028 Move X8, [X8+1632]
	029 Move X1, [X19+24]
	030 Move X20, [X31+16]
	031 Move X19, [X31+24]
	032 Move X2, [X8]
	033 Move X30, [X31+32]
	034 Move X21, [X31+40]
	035 Call 0x29B62EC, X0, X1
	036 Return 
	037 Call 0x1C17F20

Method: System.Void FixUpperEdge(UnityEngine.Rendering.Universal.LibTessDotNet.Tess/ActiveRegion reg, UnityEngine.Rendering.Universal.LibTessDotNet.MeshUtils/Edge newEdge)

Disassembly:
	0x03A98108 MOV X0, X19
	0x03A9810C MOV X1, X20
	0x03A98110 BL 0x3A97664
	0x03A98114 MOV W22, W31
	0x03A98118 MOV W0, W22
	0x03A9811C LDP X20, X19, [X31 + 0x60]
	0x03A98120 LDP X22, X21, [X31 + 0x50]
	0x03A98124 LDP X24, X23, [X31 + 0x40]
	0x03A98128 LDP X26, X25, [X31 + 0x30]
	0x03A9812C LDP X28, X27, [X31 + 0x20]
	0x03A98130 LDP X29, X30, [X31 + 0x10]
	0x03A98134 LDP D9, D8, [X31], #0x70
	0x03A98138 RET
	0x03A9813C LDR X1, [X19 + 0x60]
	0x03A98140 MOV X0, X24
	0x03A98144 BL 0x3A95314
	0x03A98148 TBNZ X0, 0x0, 0x3A98164

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Compare X1, 0
	005 JumpIfEqual {22}
	006 Move X8, [X0+16]
	007 Compare X8, 0
	008 JumpIfEqual {22}
	009 Move X20, X1
	010 Move X1, [X1+16]
	011 Move X19, X2
	012 Call Mesh.Delete, X0, X1
	013 Move [X20+39], W31
	014 Move [X20+16], X19
	015 Compare X19, 0
	016 JumpIfEqual {22}
	017 Move [X19+80], X20
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Return 
	022 Call 0x1C17F20

Method: UnityEngine.Rendering.Universal.LibTessDotNet.Tess/ActiveRegion TopLeftRegion(UnityEngine.Rendering.Universal.LibTessDotNet.Tess/ActiveRegion reg)

Disassembly:
	0x03A9814C LDR X1, [X19 + 0x60]
	0x03A98150 MOV X0, X24
	0x03A98154 MOV X2, X27
	0x03A98158 BL 0x3A95410
	0x03A9815C FCMP S0, 0x0
	0x03A98160 B.GE 0x3A98274
	0x03A98164 LDR X1, [X19 + 0x60]
	0x03A98168 MOV X0, X23
	0x03A9816C BL 0x3A95314
	0x03A98170 TBNZ X0, 0x0, 0x3A9818C
	0x03A98174 LDR X1, [X19 + 0x60]
	0x03A98178 MOV X0, X23
	0x03A9817C MOV X2, X27
	0x03A98180 BL 0x3A95410
	0x03A98184 FCMP S0, 0x0
	0x03A98188 B.LS 0x3A98274
	0x03A9818C LDR X8, [X19 + 0x10]
	0x03A98190 CBZ X8, 0x3A98460
	0x03A98194 LDR X1, [X22 + 0x28]
	0x03A98198 BL 0x3A96354
	0x03A9819C LDR X8, [X19 + 0x10]
	0x03A981A0 CBZ X8, 0x3A98460
	0x03A981A4 LDR X1, [X29 + 0x28]
	0x03A981A8 BL 0x3A96354
	0x03A981AC LDR X8, [X29 + 0x28]
	0x03A981B0 CBZ X8, 0x3A98460
	0x03A981B4 LDR X9, [X19 + 0x10]
	0x03A981B8 CBZ X9, 0x3A98460
	0x03A981BC LDR X1, [X8 + 0x38]
	0x03A981C0 MOV X2, X22
	0x03A981C4 BL 0x3A95F04
	0x03A981C8 CBZ X27, 0x3A98460
	0x03A981CC LDR X28, [X22 + 0x40]
	0x03A981D0 CBZ X28, 0x3A98460
	0x03A981D4 LDUR V0, [X27 + 0x34]
	0x03A981D8 STUR D0, [X28 + 0x34]
	0x03A981DC LDR X0, [X19 + 0x58]
	0x03A981E0 CBZ X0, 0x3A98460
	0x03A981E4 ADRP X8, 0x6BF000
	0x03A981E8 LDR X8, [X8 + 0x680]
	0x03A981EC MOV X1, X28
	0x03A981F0 LDR X2, [X8]
	0x03A981F4 BL 0x24B4764
	0x03A981F8 STR W0, [X28 + 0x3C]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Compare X1, 0
	006 JumpIfEqual {59}
	007 Move X8, [X1+16]
	008 Move X19, X1
	009 Compare X8, 0
	010 JumpIfEqual {59}
	011 Move X21, [X8+64]
	012 Move X20, X0
	013 Move X1, X19
	014 Call Tess.RegionAbove, X0, X1
	015 Compare X0, 0
	016 JumpIfEqual {59}
	017 Move X8, [X0+16]
	018 Move X19, X0
	019 Compare X8, 0
	020 JumpIfEqual {59}
	021 Move X8, [X8+64]
	022 NotImplemented "Instruction CMP not yet implemented."
	023 Move W8, [X19+39]
	024 Compare W8, 0
	025 JumpIfEqual {53}
	026 Move X21, [X20+16]
	027 Move X1, X19
	028 Call Tess.RegionBelow, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {59}
	031 Move X8, [X0+16]
	032 Compare X8, 0
	033 JumpIfEqual {59}
	034 Move X9, [X19+16]
	035 Compare X9, 0
	036 JumpIfEqual {59}
	037 Compare X21, 0
	038 JumpIfEqual {59}
	039 Move X1, [X8+40]
	040 Move X2, [X9+56]
	041 Call Mesh.Connect, X0, X1, X2
	042 Move X2, X0
	043 Move X0, X20
	044 Move X1, X19
	045 Call Tess.FixUpperEdge, X0, X1, X2
	046 Move X1, X19
	047 Move X20, [X31+16]
	048 Move X19, [X31+24]
	049 Move X30, [X31+32]
	050 Move X21, [X31+40]
	051 Call Tess.RegionAbove, X0, X1
	052 Return X0
	053 Move X0, X19
	054 Move X20, [X31+16]
	055 Move X19, [X31+24]
	056 Move X30, [X31+32]
	057 Move X21, [X31+40]
	058 Return X0
	059 Call 0x1C17F20

Method: UnityEngine.Rendering.Universal.LibTessDotNet.Tess/ActiveRegion TopRightRegion(UnityEngine.Rendering.Universal.LibTessDotNet.Tess/ActiveRegion reg)

Disassembly:
	0x03A981FC LDR X8, [X22 + 0x40]
	0x03A98200 CBZ X8, 0x3A98460
	0x03A98204 ADRP X28, 0x6BF000
	0x03A98208 LDR X28, [X28 + 0x658]
	0x03A9820C LDR W27, [X8 + 0x3C]
	0x03A98210 LDR X0, [X28]
	0x03A98214 LDR W9, [X0 + 0xE0]
	0x03A98218 CBNZ W9, 0x3A98224
	0x03A9821C BL 0x1C16DFC
	0x03A98220 LDR X0, [X28]
	0x03A98224 LDR X8, [X0 + 0xB8]
	0x03A98228 LDR W8, [X8]
	0x03A9822C CMP W27, W8
	0x03A98230 B.EQ 0x3A98464
	0x03A98234 LDR X1, [X22 + 0x40]
	0x03A98238 MOV X0, X19
	0x03A9823C MOV X2, X26
	0x03A98240 MOV X3, X24
	0x03A98244 MOV X4, X25
	0x03A98248 MOV X5, X23
	0x03A9824C BL 0x3A97B28

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Compare X1, 0
	004 JumpIfEqual {28}
	005 Move X8, [X1+16]
	006 Move X0, X1
	007 Compare X8, 0
	008 JumpIfEqual {28}
	009 Move X8, [X8+40]
	010 Compare X8, 0
	011 JumpIfEqual {28}
	012 Move X19, [X8+64]
	013 Move X1, X0
	014 Call Tess.RegionAbove, X0, X1
	015 Compare X0, 0
	016 JumpIfEqual {28}
	017 Move X8, [X0+16]
	018 Compare X8, 0
	019 JumpIfEqual {28}
	020 Move X8, [X8+40]
	021 Compare X8, 0
	022 JumpIfEqual {28}
	023 Move X8, [X8+64]
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move X30, [X31+16]
	026 Move X19, [X31+24]
	027 Return X0
	028 Call 0x1C17F20

Method: UnityEngine.Rendering.Universal.LibTessDotNet.Tess/ActiveRegion AddRegionBelow(UnityEngine.Rendering.Universal.LibTessDotNet.Tess/ActiveRegion regAbove, UnityEngine.Rendering.Universal.LibTessDotNet.MeshUtils/Edge eNewUp)

Disassembly:
	0x03A98250 MOV X1, X20
	0x03A98254 BL 0x3A96F7C
	0x03A98258 MOVZ W8, 0x1
	0x03A9825C STRB W8, [X21 + 0x26]
	0x03A98260 STRB W8, [X20 + 0x26]
	0x03A98264 CBZ X0, 0x3A98460
	0x03A98268 MOV W22, W31
	0x03A9826C STRB W8, [X0 + 0x26]
	0x03A98270 B 0x3A98118
	0x03A98274 LDR X1, [X19 + 0x60]
	0x03A98278 CMP X23, X1
	0x03A9827C B.EQ 0x3A982A4
	0x03A98280 CMP X24, X1
	0x03A98284 B.EQ 0x3A98328
	0x03A98288 MOV X0, X24
	0x03A9828C MOV X2, X27
	0x03A98290 BL 0x3A95410
	0x03A98294 FCMP S0, 0x0
	0x03A98298 B.GE 0x3A983D0
	0x03A9829C LDR X1, [X19 + 0x60]
	0x03A982A0 B 0x3A98410
	0x03A982A4 LDR X8, [X19 + 0x10]
	0x03A982A8 CBZ X8, 0x3A98460
	0x03A982AC LDR X1, [X22 + 0x28]
	0x03A982B0 BL 0x3A96354
	0x03A982B4 LDR X8, [X19 + 0x10]
	0x03A982B8 CBZ X8, 0x3A98460
	0x03A982BC LDR X1, [X29 + 0x28]
	0x03A982C0 MOV X2, X22
	0x03A982C4 BL 0x3A95F04
	0x03A982C8 MOV X0, X19
	0x03A982CC MOV X1, X20
	0x03A982D0 BL 0x3A9714C
	0x03A982D4 MOV X1, X0
	0x03A982D8 MOV X20, X0
	0x03A982DC BL 0x3A96F54
	0x03A982E0 CBZ X0, 0x3A98460
	0x03A982E4 LDR X23, [X0 + 0x10]
	0x03A982E8 MOV X1, X20
	0x03A982EC BL 0x3A96F54
	0x03A982F0 MOV X1, X0
	0x03A982F4 MOV X0, X19
	0x03A982F8 MOV X2, X21
	0x03A982FC BL 0x3A9738C
	0x03A98300 CBZ X23, 0x3A98460
	0x03A98304 LDR X8, [X23 + 0x28]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x94B000
	008 Move X23, 0x6C0000
	009 Move W8, [X22+958]
	010 Move X23, [X23+1640]
	011 Move X19, X2
	012 Move X20, X1
	013 Move X21, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0x6C0000
	019 Move X0, [X0+1640]
	020 Call 0x1C17CF4
	021 Move X0, 0x6C0000
	022 Move X0, [X0+1648]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X22+958], W8
	026 Move X0, [X23]
	027 Call 0x1C17F10
	028 Move X1, X31
	029 Move X22, X0
	030 Call ActiveRegion..ctor, X0
	031 Compare X22, 0
	032 JumpIfEqual {59}
	033 Move [X22+16], X19
	034 Compare X20, 0
	035 JumpIfEqual {59}
	036 Move X0, [X21+80]
	037 Compare X0, 0
	038 JumpIfEqual {59}
	039 Move X8, 0x6C0000
	040 Move X8, [X8+1648]
	041 Move X1, [X20+24]
	042 Move X2, X22
	043 Move X3, [X8]
	044 Call 0x29B61B8, X0, X1, X2
	045 Move [X22+24], X0
	046 Move [X22+39], W31
	047 NotImplemented "Instruction STURH not yet implemented."
	048 Compare X19, 0
	049 JumpIfEqual {59}
	050 Move [X19+80], X22
	051 Move X0, X22
	052 Move X20, [X31+32]
	053 Move X19, [X31+40]
	054 Move X22, [X31+16]
	055 Move X21, [X31+24]
	056 Move X30, [X31+48]
	057 Move X23, [X31+56]
	058 Return X0
	059 Call 0x1C17F20

Method: System.Void ComputeWinding(UnityEngine.Rendering.Universal.LibTessDotNet.Tess/ActiveRegion reg)

Disassembly:
	0x03A98308 CBZ X8, 0x3A98460
	0x03A9830C LDR X2, [X8 + 0x38]
	0x03A98310 MOVZ W5, 0x1
	0x03A98314 MOVZ W22, 0x1
	0x03A98318 MOV X0, X19
	0x03A9831C MOV X1, X20
	0x03A98320 MOV X3, X23
	0x03A98324 B 0x3A983C4
	0x03A98328 LDR X8, [X19 + 0x10]
	0x03A9832C CBZ X8, 0x3A98460
	0x03A98330 LDR X1, [X29 + 0x28]
	0x03A98334 BL 0x3A96354
	0x03A98338 LDR X8, [X29 + 0x28]
	0x03A9833C CBZ X8, 0x3A98460
	0x03A98340 LDR X9, [X19 + 0x10]
	0x03A98344 CBZ X9, 0x3A98460
	0x03A98348 LDR X1, [X22 + 0x38]
	0x03A9834C LDR X2, [X8 + 0x38]
	0x03A98350 BL 0x3A95F04
	0x03A98354 MOV X1, X20
	0x03A98358 BL 0x3A971FC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X1
	005 Move X20, X0
	006 Call Tess.RegionAbove, X0, X1
	007 Compare X0, 0
	008 JumpIfEqual {26}
	009 Compare X19, 0
	010 JumpIfEqual {26}
	011 Move X8, [X19+16]
	012 Compare X8, 0
	013 JumpIfEqual {26}
	014 Move W9, [X0+32]
	015 Move W8, [X8+88]
	016 Add W1, W8, W9
	017 Move [X19+32], W1
	018 Move W0, [X20+76]
	019 Call Geom.IsWindingInside, X0, X1
	020 And W8, W0, 1
	021 Move [X19+36], W8
	022 Move X20, [X31+16]
	023 Move X19, [X31+24]
	024 Move X30, [X31+32]
	025 Return 
	026 Call 0x1C17F20

Method: System.Void FinishRegion(UnityEngine.Rendering.Universal.LibTessDotNet.Tess/ActiveRegion reg)

Disassembly:
	0x03A9835C MOV X1, X0
	0x03A98360 MOV X21, X0
	0x03A98364 BL 0x3A96F54
	0x03A98368 CBZ X0, 0x3A98460
	0x03A9836C LDR X8, [X0 + 0x10]
	0x03A98370 CBZ X8, 0x3A98460
	0x03A98374 LDR X8, [X8 + 0x28]
	0x03A98378 CBZ X8, 0x3A98460
	0x03A9837C LDR X9, [X29 + 0x28]
	0x03A98380 CBZ X9, 0x3A98460
	0x03A98384 LDR X9, [X9 + 0x38]
	0x03A98388 LDR X23, [X8 + 0x30]

ISIL:
	001 Move [X31-16], X30
	002 Compare X1, 0
	003 JumpIfEqual {16}
	004 Move X8, [X1+16]
	005 Compare X8, 0
	006 JumpIfEqual {16}
	007 Move X9, [X8+72]
	008 Compare X9, 0
	009 JumpIfEqual {16}
	010 Move W10, [X1+36]
	011 Move [X9+32], X8
	012 Move [X9+53], W10
	013 Move X30, [X31+16]
	014 Call Tess.DeleteRegion, X0, X1
	015 Return 
	016 Call 0x1C17F20

Method: UnityEngine.Rendering.Universal.LibTessDotNet.MeshUtils/Edge FinishLeftRegions(UnityEngine.Rendering.Universal.LibTessDotNet.Tess/ActiveRegion regFirst, UnityEngine.Rendering.Universal.LibTessDotNet.Tess/ActiveRegion regLast)

Disassembly:
	0x03A9838C MOV X0, X19
	0x03A98390 MOV X1, X20
	0x03A98394 MOV X2, X31
	0x03A98398 STR X9, [X20 + 0x10]
	0x03A9839C BL 0x3A9738C
	0x03A983A0 CBZ X0, 0x3A98460
	0x03A983A4 LDR X8, [X22 + 0x28]
	0x03A983A8 CBZ X8, 0x3A98460
	0x03A983AC LDR X2, [X0 + 0x30]
	0x03A983B0 LDR X3, [X8 + 0x30]
	0x03A983B4 MOVZ W5, 0x1
	0x03A983B8 MOVZ W22, 0x1
	0x03A983BC MOV X0, X19
	0x03A983C0 MOV X1, X21
	0x03A983C4 MOV X4, X23
	0x03A983C8 BL 0x3A974A8
	0x03A983CC B 0x3A98118
	0x03A983D0 MOV X1, X20
	0x03A983D4 BL 0x3A96F7C
	0x03A983D8 MOVZ W8, 0x1
	0x03A983DC STRB W8, [X20 + 0x26]
	0x03A983E0 CBZ X0, 0x3A98460
	0x03A983E4 STRB W8, [X0 + 0x26]
	0x03A983E8 LDR X8, [X19 + 0x10]
	0x03A983EC CBZ X8, 0x3A98460
	0x03A983F0 LDR X1, [X22 + 0x28]
	0x03A983F4 BL 0x3A96354
	0x03A983F8 LDR X1, [X19 + 0x60]
	0x03A983FC CBZ X1, 0x3A98460
	0x03A98400 LDR X8, [X22 + 0x40]
	0x03A98404 CBZ X8, 0x3A98460
	0x03A98408 LDUR V0, [X1 + 0x34]
	0x03A9840C STUR D0, [X8 + 0x34]
	0x03A98410 MOV X0, X23
	0x03A98414 MOV X2, X27
	0x03A98418 BL 0x3A95410
	0x03A9841C FCMP S0, 0x0
	0x03A98420 B.HI 0x3A98114
	0x03A98424 MOVZ W8, 0x1
	0x03A98428 STRB W8, [X21 + 0x26]
	0x03A9842C STRB W8, [X20 + 0x26]
	0x03A98430 LDR X8, [X19 + 0x10]
	0x03A98434 CBZ X8, 0x3A98460
	0x03A98438 LDR X1, [X29 + 0x28]
	0x03A9843C BL 0x3A96354
	0x03A98440 LDR X8, [X19 + 0x60]
	0x03A98444 CBZ X8, 0x3A98460
	0x03A98448 LDR X9, [X29 + 0x40]
	0x03A9844C CBZ X9, 0x3A98460
	0x03A98450 LDUR V0, [X8 + 0x34]
	0x03A98454 MOV W22, W31
	0x03A98458 STUR D0, [X9 + 0x34]
	0x03A9845C B 0x3A98118
	0x03A98460 BL 0x1C16F20
	0x03A98464 ADRP X0, 0x65B000
	0x03A98468 LDR X0, [X0 + 0x5B0]
	0x03A9846C BL 0x1C16D08
	0x03A98470 BL 0x1C16F10
	0x03A98474 MOV X19, X0
	0x03A98478 ADRP X0, 0x6BF000
	0x03A9847C LDR X0, [X0 + 0x688]
	0x03A98480 BL 0x1C16D08
	0x03A98484 MOV X1, X0
	0x03A98488 MOV X0, X19
	0x03A9848C MOV X2, X31
	0x03A98490 BL 0x337DF1C
	0x03A98494 ADRP X0, 0x6BF000
	0x03A98498 LDR X0, [X0 + 0x690]
	0x03A9849C BL 0x1C16D08
	0x03A984A0 MOV X1, X0
	0x03A984A4 MOV X0, X19

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Compare X1, 0
	009 JumpIfEqual {83}
	010 Move X21, [X1+16]
	011 Move X20, X2
	012 Move X22, X1
	013 NotImplemented "Instruction CMP not yet implemented."
	014 Move X19, X0
	015 Move X1, X22
	016 Move [X22+39], W31
	017 Call Tess.RegionBelow, X0, X1
	018 Compare X0, 0
	019 JumpIfEqual {83}
	020 Move X24, [X0+16]
	021 Move X23, X0
	022 Compare X24, 0
	023 JumpIfEqual {83}
	024 Compare X21, 0
	025 JumpIfEqual {83}
	026 Move X8, [X24+64]
	027 Move X9, [X21+64]
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Move W8, [X23+39]
	030 Compare W8, 0
	031 JumpIfEqual {71}
	032 Move X8, [X21+48]
	033 Compare X8, 0
	034 JumpIfEqual {83}
	035 Move X9, [X19+16]
	036 Compare X9, 0
	037 JumpIfEqual {83}
	038 Move X2, [X24+40]
	039 Move X1, [X8+40]
	040 Call Mesh.Connect, X0, X1, X2
	041 Move X24, X0
	042 Move X0, X19
	043 Move X1, X23
	044 Move X2, X24
	045 Call Tess.FixUpperEdge, X0, X1, X2
	046 Move X8, [X21+48]
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Compare X24, 0
	049 JumpIfEqual {83}
	050 Move X8, [X24+40]
	051 Compare X8, 0
	052 JumpIfEqual {83}
	053 Move X9, [X19+16]
	054 Compare X9, 0
	055 JumpIfEqual {83}
	056 Move X1, [X8+56]
	057 Move X2, X24
	058 Call Mesh.Splice, X0, X1, X2
	059 Move X8, [X19+16]
	060 Compare X8, 0
	061 JumpIfEqual {83}
	062 Move X1, X21
	063 Move X2, X24
	064 Call Mesh.Splice, X0, X1, X2
	065 Move X0, X19
	066 Move X1, X22
	067 Call Tess.FinishRegion, X0, X1
	068 Move X21, [X23+16]
	069 NotImplemented "Instruction CMP not yet implemented."
	070 Move X22, X23
	071 Move X0, X19
	072 Move X1, X22
	073 Call Tess.FinishRegion, X0, X1
	074 Move X0, X21
	075 Move X20, [X31+48]
	076 Move X19, [X31+56]
	077 Move X22, [X31+32]
	078 Move X21, [X31+40]
	079 Move X24, [X31+16]
	080 Move X23, [X31+24]
	081 Move X30, [X31+64]
	082 Return X0
	083 Call 0x1C17F20

Method: System.Void AddRightEdges(UnityEngine.Rendering.Universal.LibTessDotNet.Tess/ActiveRegion regUp, UnityEngine.Rendering.Universal.LibTessDotNet.MeshUtils/Edge eFirst, UnityEngine.Rendering.Universal.LibTessDotNet.MeshUtils/Edge eLast, UnityEngine.Rendering.Universal.LibTessDotNet.MeshUtils/Edge eTopLeft, System.Boolean cleanUp)

Disassembly:
	0x03A984A8 BL 0x1C16DEC
	0x03A984AC STR X30, [X31 - 0x50]!
	0x03A984B0 STP X26, X25, [X31 + 0x10]
	0x03A984B4 STP X24, X23, [X31 + 0x20]
	0x03A984B8 STP X22, X21, [X31 + 0x30]
	0x03A984BC STP X20, X19, [X31 + 0x40]
	0x03A984C0 CBZ X2, 0x3A9869C
	0x03A984C4 LDR X23, [X2 + 0x30]
	0x03A984C8 MOV X21, X2
	0x03A984CC MOV X20, X1
	0x03A984D0 MOV X19, X0
	0x03A984D4 BL 0x3A96F54
	0x03A984D8 CBZ X20, 0x3A9869C
	0x03A984DC MOV X24, X0
	0x03A984E0 CBZ X0, 0x3A9869C
	0x03A984E4 LDR X22, [X20 + 0x10]
	0x03A984E8 CBZ X22, 0x3A9869C
	0x03A984EC LDR X8, [X22 + 0x28]
	0x03A984F0 CBZ X8, 0x3A9869C
	0x03A984F4 LDR X26, [X24 + 0x10]
	0x03A984F8 CBZ X26, 0x3A9869C
	0x03A984FC LDR X9, [X26 + 0x28]
	0x03A98500 CBZ X9, 0x3A9869C
	0x03A98504 LDR X8, [X8 + 0x40]
	0x03A98508 LDR X9, [X9 + 0x40]
	0x03A9850C CMP X8, X9
	0x03A98510 B.EQ 0x3A98520
	0x03A98514 MOV X0, X19
	0x03A98518 MOV X1, X20
	0x03A9851C BL 0x3A97F14
	0x03A98520 LDR X0, [X22 + 0x40]
	0x03A98524 LDR X1, [X19 + 0x60]
	0x03A98528 BL 0x3A95314
	0x03A9852C MOV W25, W0
	0x03A98530 TBZ X0, 0x0, 0x3A9858C
	0x03A98534 CBZ X23, 0x3A9869C
	0x03A98538 LDR X8, [X23 + 0x28]
	0x03A9853C CBZ X8, 0x3A9869C
	0x03A98540 LDR X9, [X19 + 0x10]
	0x03A98544 CBZ X9, 0x3A9869C
	0x03A98548 LDR X1, [X8 + 0x38]
	0x03A9854C MOV X2, X22
	0x03A98550 BL 0x3A95F04
	0x03A98554 MOV X0, X19
	0x03A98558 MOV X1, X20
	0x03A9855C BL 0x3A9714C
	0x03A98560 MOV X1, X0
	0x03A98564 MOV X20, X0
	0x03A98568 BL 0x3A96F54
	0x03A9856C CBZ X0, 0x3A9869C
	0x03A98570 LDR X23, [X0 + 0x10]
	0x03A98574 MOV X1, X20
	0x03A98578 BL 0x3A96F54
	0x03A9857C MOV X1, X0
	0x03A98580 MOV X0, X19
	0x03A98584 MOV X2, X24
	0x03A98588 BL 0x3A9738C
	0x03A9858C LDR X0, [X26 + 0x40]
	0x03A98590 LDR X1, [X19 + 0x60]
	0x03A98594 BL 0x3A95314
	0x03A98598 TBZ X0, 0x0, 0x3A985D4
	0x03A9859C LDR X8, [X26 + 0x28]
	0x03A985A0 CBZ X8, 0x3A9869C
	0x03A985A4 LDR X9, [X19 + 0x10]
	0x03A985A8 CBZ X9, 0x3A9869C
	0x03A985AC LDR X2, [X8 + 0x38]
	0x03A985B0 MOV X1, X21
	0x03A985B4 BL 0x3A95F04
	0x03A985B8 MOV X0, X19
	0x03A985BC MOV X1, X24
	0x03A985C0 MOV X2, X31
	0x03A985C4 BL 0x3A9738C
	0x03A985C8 MOV X21, X0
	0x03A985CC CBNZ X0, 0x3A985D8
	0x03A985D0 B 0x3A9869C
	0x03A985D4 TBZ X25, 0x0, 0x3A98608
	0x03A985D8 LDR X2, [X21 + 0x30]
	0x03A985DC MOV X0, X19
	0x03A985E0 MOV X1, X20
	0x03A985E4 MOV X3, X23
	0x03A985E8 MOV X4, X23
	0x03A985EC LDP X20, X19, [X31 + 0x40]
	0x03A985F0 LDP X22, X21, [X31 + 0x30]
	0x03A985F4 LDP X24, X23, [X31 + 0x20]
	0x03A985F8 LDP X26, X25, [X31 + 0x10]
	0x03A985FC MOVZ W5, 0x1
	0x03A98600 LDR X30, [X31], #0x50
	0x03A98604 B 0x3A974A8
	0x03A98608 LDR X0, [X26 + 0x40]
	0x03A9860C LDR X1, [X22 + 0x40]
	0x03A98610 BL 0x3A95354
	0x03A98614 TBZ X0, 0x0, 0x3A98624
	0x03A98618 LDR X8, [X26 + 0x28]
	0x03A9861C CBZ X8, 0x3A9869C
	0x03A98620 LDR X22, [X8 + 0x38]
	0x03A98624 LDR X8, [X21 + 0x30]
	0x03A98628 CBZ X8, 0x3A9869C
	0x03A9862C LDR X9, [X19 + 0x10]
	0x03A98630 CBZ X9, 0x3A9869C
	0x03A98634 LDR X1, [X8 + 0x28]
	0x03A98638 MOV X2, X22
	0x03A9863C BL 0x3A96424
	0x03A98640 CBZ X0, 0x3A9869C
	0x03A98644 LDR X3, [X0 + 0x30]
	0x03A98648 MOV X21, X0
	0x03A9864C MOV X0, X19
	0x03A98650 MOV X1, X20
	0x03A98654 MOV X2, X21
	0x03A98658 MOV X4, X3
	0x03A9865C MOV W5, W31
	0x03A98660 BL 0x3A974A8

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move W19, W5
	011 Move X22, X4
	012 Move X23, X3
	013 Move X24, X2
	014 Move X21, X1
	015 Move X20, X0
	016 Compare X24, 0
	017 JumpIfEqual {146}
	018 Move X2, [X24+40]
	019 Move X0, X20
	020 Move X1, X21
	021 Call Tess.AddRegionBelow, X0, X1, X2
	022 Move X24, [X24+48]
	023 NotImplemented "Instruction CMP not yet implemented."
	024 Compare X22, 0
	025 JumpIfNotEqual {37}
	026 Move X1, X21
	027 Call Tess.RegionBelow, X0, X1
	028 Compare X0, 0
	029 JumpIfEqual {146}
	030 Move X8, [X0+16]
	031 Compare X8, 0
	032 JumpIfEqual {146}
	033 Move X8, [X8+40]
	034 Compare X8, 0
	035 JumpIfEqual {146}
	036 Move X22, [X8+48]
	037 Move X1, X21
	038 Call Tess.RegionBelow, X0, X1
	039 Compare X0, 0
	040 JumpIfEqual {146}
	041 Move W25, 1
	042 Move W26, 1
	043 Move X8, [X0+16]
	044 Compare X8, 0
	045 JumpIfEqual {146}
	046 Move X24, X22
	047 Move X22, [X8+40]
	048 Compare X22, 0
	049 JumpIfEqual {146}
	050 Compare X24, 0
	051 JumpIfEqual {146}
	052 Move X8, [X22+64]
	053 Move X9, [X24+64]
	054 Move X23, X21
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Move X8, [X22+48]
	057 Move X21, X0
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Move X8, [X22+40]
	060 Compare X8, 0
	061 JumpIfEqual {146}
	062 Move X9, [X20+16]
	063 Compare X9, 0
	064 JumpIfEqual {146}
	065 Move X1, [X8+56]
	066 Move X2, X22
	067 Call Mesh.Splice, X0, X1, X2
	068 Move X8, [X24+40]
	069 Compare X8, 0
	070 JumpIfEqual {146}
	071 Move X9, [X20+16]
	072 Compare X9, 0
	073 JumpIfEqual {146}
	074 Move X1, [X8+56]
	075 Move X2, X22
	076 Call Mesh.Splice, X0, X1, X2
	077 Compare X23, 0
	078 JumpIfEqual {146}
	079 Move W8, [X23+32]
	080 Move W9, [X22+88]
	081 Subtract W1, W8, W9
	082 Move [X21+32], W1
	083 Move W0, [X20+76]
	084 Call Geom.IsWindingInside, X0, X1
	085 And W8, W0, 1
	086 Move [X21+36], W8
	087 Move [X23+38], W25
	088 Move TEMP, X26
	089 And TEMP, TEMP, 1
	090 Compare TEMP, 1
	091 JumpIfEqual {110}
	092 Move X0, X20
	093 Move X1, X23
	094 Call Tess.CheckForRightSplice, X0, X1
	095 Move TEMP, X0
	096 And TEMP, TEMP, 1
	097 Compare TEMP, 1
	098 JumpIfNotEqual {110}
	099 Move X0, X22
	100 Move X1, X24
	101 Call Geom.AddWinding, X0, X1
	102 Move X0, X20
	103 Move X1, X23
	104 Call Tess.DeleteRegion, X0, X1
	105 Move X8, [X20+16]
	106 Compare X8, 0
	107 JumpIfEqual {146}
	108 Move X1, X24
	109 Call Mesh.Delete, X0, X1
	110 Move X1, X21
	111 Call Tess.RegionBelow, X0, X1
	112 Move W26, W31
	113 Compare X0, 0
	114 JumpIfNotEqual {43}
	115 Compare X23, 0
	116 JumpIfEqual {146}
	117 Move W8, 1
	118 Move [X23+38], W8
	119 Move TEMP, X19
	120 And TEMP, TEMP, 1
	121 Compare TEMP, 1
	122 JumpIfNotEqual {136}
	123 Move X0, X20
	124 Move X1, X23
	125 Move X20, [X31+64]
	126 Move X19, [X31+72]
	127 Move X22, [X31+48]
	128 Move X21, [X31+56]
	129 Move X24, [X31+32]
	130 Move X23, [X31+40]
	131 Move X26, [X31+16]
	132 Move X25, [X31+24]
	133 Move X30, [X31+80]
	134 Call Tess.WalkDirtyRegions, X0, X1
	135 Return 
	136 Move X20, [X31+64]
	137 Move X19, [X31+72]
	138 Move X22, [X31+48]
	139 Move X21, [X31+56]
	140 Move X24, [X31+32]
	141 Move X23, [X31+40]
	142 Move X26, [X31+16]
	143 Move X25, [X31+24]
	144 Move X30, [X31+80]
	145 Return 
	146 Call 0x1C17F20

Method: System.Void SpliceMergeVertices(UnityEngine.Rendering.Universal.LibTessDotNet.MeshUtils/Edge e1, UnityEngine.Rendering.Universal.LibTessDotNet.MeshUtils/Edge e2)

Disassembly:
	0x03A98A20 MOV X0, X19
	0x03A98A24 BL 0x3A97308
	0x03A98A28 MOV X0, X19
	0x03A98A2C MOV X1, X20
	0x03A98A30 LDP X20, X19, [X31 + 0x30]
	0x03A98A34 LDP X22, X21, [X31 + 0x20]

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+16]
	003 Compare X8, 0
	004 JumpIfEqual {8}
	005 Move X30, [X31+16]
	006 Call Mesh.Splice, X0, X1, X2
	007 Return 
	008 Call 0x1C17F20

Method: System.Void VertexWeights(UnityEngine.Rendering.Universal.LibTessDotNet.MeshUtils/Vertex isect, UnityEngine.Rendering.Universal.LibTessDotNet.MeshUtils/Vertex org, UnityEngine.Rendering.Universal.LibTessDotNet.MeshUtils/Vertex dst, out System.Single w0, out System.Single w1)

Disassembly:
	0x03A98A38 LDP X24, X23, [X31 + 0x10]
	0x03A98A3C LDP X30, X25, [X31], #0x40
	0x03A98A40 B 0x3A98794
	0x03A98A44 LDR X2, [X20 + 0x20]
	0x03A98A48 MOV X0, X19
	0x03A98A4C MOV X1, X21
	0x03A98A50 LDP X20, X19, [X31 + 0x30]
	0x03A98A54 LDP X22, X21, [X31 + 0x20]
	0x03A98A58 LDP X24, X23, [X31 + 0x10]
	0x03A98A5C MOVZ W5, 0x1
	0x03A98A60 MOV X3, X2
	0x03A98A64 MOV X4, X31
	0x03A98A68 LDP X30, X25, [X31], #0x40
	0x03A98A6C B 0x3A974A8
	0x03A98A70 BL 0x1C16F20
	0x03A98A74 STR D10, [X31 - 0x40]!
	0x03A98A78 STP D9, D8, [X31 + 0x10]
	0x03A98A7C STP X30, X21, [X31 + 0x20]
	0x03A98A80 STP X20, X19, [X31 + 0x30]
	0x03A98A84 ADRP X20, 0x94A000
	0x03A98A88 LDRB W8, [X20 + 0x3C3]
	0x03A98A8C MOV V8.16B, V2.16B
	0x03A98A90 MOV V10.16B, V1.16B
	0x03A98A94 MOV V9.16B, V0.16B
	0x03A98A98 MOV X19, X0
	0x03A98A9C TBNZ X8, 0x0, 0x3A98AC0
	0x03A98AA0 ADRP X0, 0x6BF000
	0x03A98AA4 LDR X0, [X0 + 0x668]
	0x03A98AA8 BL 0x1C16CF4
	0x03A98AAC ADRP X0, 0x6BF000
	0x03A98AB0 LDR X0, [X0 + 0x6B8]
	0x03A98AB4 BL 0x1C16CF4
	0x03A98AB8 MOVZ W8, 0x1
	0x03A98ABC STRB W8, [X20 + 0x3C3]
	0x03A98AC0 LDR X0, [X19 + 0x10]
	0x03A98AC4 CBZ X0, 0x3A98B64
	0x03A98AC8 BL 0x3A95D00
	0x03A98ACC CBZ X0, 0x3A98B64
	0x03A98AD0 LDR X8, [X0 + 0x40]
	0x03A98AD4 MOV X20, X0
	0x03A98AD8 CBZ X8, 0x3A98B64
	0x03A98ADC STP S10, S8, [X8 + 0x34]
	0x03A98AE0 LDR X8, [X20 + 0x28]
	0x03A98AE4 CBZ X8, 0x3A98B64
	0x03A98AE8 LDR X8, [X8 + 0x40]
	0x03A98AEC CBZ X8, 0x3A98B64
	0x03A98AF0 ADRP X9, 0x6BF000
	0x03A98AF4 LDR X9, [X9 + 0x668]
	0x03A98AF8 STP S9, S8, [X8 + 0x34]
	0x03A98AFC STR X8, [X19 + 0x60]
	0x03A98B00 LDR X0, [X9]
	0x03A98B04 BL 0x1C16F10
	0x03A98B08 MOV X1, X31
	0x03A98B0C MOV X21, X0
	0x03A98B10 BL 0x3A9A9F8
	0x03A98B14 CBZ X21, 0x3A98B64
	0x03A98B18 MOVZ W8, 0x1
	0x03A98B1C STR X20, [X21 + 0x10]
	0x03A98B20 STR W31, [X21 + 0x20]
	0x03A98B24 STRB W31, [X21 + 0x24]

ISIL:
	001 Move [X31-64], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X0, X2
	009 Move X20, X5
	010 Move X22, X4
	011 Move X21, X3
	012 Move X23, X2
	013 Move X19, X1
	014 Call Geom.VertL1dist, X0, X1
	015 Move X0, X21
	016 Move X1, X19
	017 Move V8, V0
	018 Call Geom.VertL1dist, X0, X1
	019 Add S1, S8, S0
	020 Move S2, 0.5
	021 NotImplemented "Instruction FDIV not yet implemented."
	022 NotImplemented "Instruction FDIV not yet implemented."
	023 Multiply S3, S0, S2
	024 Multiply S0, S1, S2
	025 Move [X22], S3
	026 Move [X20], S0
	027 Compare X19, 0
	028 JumpIfEqual {70}
	029 Compare X23, 0
	030 JumpIfEqual {70}
	031 Compare X21, 0
	032 JumpIfEqual {70}
	033 Move V1, [X22]
	034 Move V2, [X23+40]
	035 Move V3, [X21+40]
	036 Multiply S1, S1, S2
	037 Move S2, [X19+40]
	038 Move S4, [X19+44]
	039 Multiply S0, S0, S3
	040 Add S0, S1, S0
	041 Add S0, S2, S0
	042 Move [X19+40], S0
	043 Move V0, [X22]
	044 Move V1, [X23+44]
	045 Move V2, [X20]
	046 Move V3, [X21+44]
	047 Multiply S0, S0, S1
	048 Multiply S1, S2, S3
	049 Add S0, S0, S1
	050 Add S0, S4, S0
	051 Move [X19+44], S0
	052 Move V0, [X22]
	053 Move V1, [X23+48]
	054 Move V2, [X20]
	055 Move V3, [X21+48]
	056 Move V4, [X19+48]
	057 Multiply S0, S0, S1
	058 Move X22, [X31+32]
	059 Move X21, [X31+40]
	060 Multiply S1, S2, S3
	061 Add S0, S0, S1
	062 Add S0, S4, S0
	063 Move [X19+48], S0
	064 Move X20, [X31+48]
	065 Move X19, [X31+56]
	066 Move X30, [X31+16]
	067 Move X23, [X31+24]
	068 Move V8, [X31+64]
	069 Return 
	070 Call 0x1C17F20

Method: System.Void GetIntersectData(UnityEngine.Rendering.Universal.LibTessDotNet.MeshUtils/Vertex isect, UnityEngine.Rendering.Universal.LibTessDotNet.MeshUtils/Vertex orgUp, UnityEngine.Rendering.Universal.LibTessDotNet.MeshUtils/Vertex dstUp, UnityEngine.Rendering.Universal.LibTessDotNet.MeshUtils/Vertex orgLo, UnityEngine.Rendering.Universal.LibTessDotNet.MeshUtils/Vertex dstLo)

Disassembly:
	0x03A98B28 STRB W31, [X21 + 0x27]
	0x03A98B2C STURH W8, [X21 + 0x25]
	0x03A98B30 LDR X0, [X19 + 0x50]
	0x03A98B34 CBZ X0, 0x3A98B64
	0x03A98B38 ADRP X8, 0x6BF000
	0x03A98B3C LDR X8, [X8 + 0x6B8]
	0x03A98B40 MOV X1, X21
	0x03A98B44 LDR X2, [X8]
	0x03A98B48 BL 0x29B519C
	0x03A98B4C STR X0, [X21 + 0x18]
	0x03A98B50 LDP X20, X19, [X31 + 0x30]
	0x03A98B54 LDP X30, X21, [X31 + 0x20]
	0x03A98B58 LDP D9, D8, [X31 + 0x10]
	0x03A98B5C LDR V10, [X31], #0x40
	0x03A98B60 RET
	0x03A98B64 BL 0x1C16F20
	0x03A98B68 STR X30, [X31 - 0x40]!
	0x03A98B6C STP X24, X23, [X31 + 0x10]
	0x03A98B70 STP X22, X21, [X31 + 0x20]
	0x03A98B74 STP X20, X19, [X31 + 0x30]
	0x03A98B78 ADRP X23, 0x94A000
	0x03A98B7C ADRP X24, 0x6BF000
	0x03A98B80 ADRP X20, 0x6BF000
	0x03A98B84 ADRP X22, 0x6BF000
	0x03A98B88 ADRP X21, 0x6BF000
	0x03A98B8C LDRB W8, [X23 + 0x3C4]
	0x03A98B90 LDR X24, [X24 + 0x6C0]
	0x03A98B94 LDR X20, [X20 + 0x6C8]
	0x03A98B98 LDR X22, [X22 + 0x6D0]
	0x03A98B9C LDR X21, [X21 + 0x6D8]
	0x03A98BA0 MOV X19, X0
	0x03A98BA4 TBNZ X8, 0x0, 0x3A98BE0
	0x03A98BA8 ADRP X0, 0x6BF000
	0x03A98BAC LDR X0, [X0 + 0x6D8]
	0x03A98BB0 BL 0x1C16CF4
	0x03A98BB4 ADRP X0, 0x6BF000
	0x03A98BB8 LDR X0, [X0 + 0x6D0]
	0x03A98BBC BL 0x1C16CF4
	0x03A98BC0 ADRP X0, 0x6BF000
	0x03A98BC4 LDR X0, [X0 + 0x6C0]
	0x03A98BC8 BL 0x1C16CF4
	0x03A98BCC ADRP X0, 0x6BF000
	0x03A98BD0 LDR X0, [X0 + 0x6C8]
	0x03A98BD4 BL 0x1C16CF4
	0x03A98BD8 MOVZ W8, 0x1
	0x03A98BDC STRB W8, [X23 + 0x3C4]
	0x03A98BE0 LDR X0, [X24]
	0x03A98BE4 BL 0x1C16F10
	0x03A98BE8 LDR X2, [X20]
	0x03A98BEC MOV X1, X19
	0x03A98BF0 MOV X3, X31
	0x03A98BF4 MOV X20, X0
	0x03A98BF8 BL 0x2EE9F5C
	0x03A98BFC LDR X0, [X22]
	0x03A98C00 BL 0x1C16F10
	0x03A98C04 LDR X2, [X21]
	0x03A98C08 MOV X1, X20
	0x03A98C0C MOV X21, X0
	0x03A98C10 BL 0x29B512C
	0x03A98C14 LDR V1, [X19 + 0x94]
	0x03A98C18 MOV X0, X19
	0x03A98C1C STR X21, [X19 + 0x50]
	0x03A98C20 FNEG S0, S1
	0x03A98C24 MOV V2.16B, V0.16B
	0x03A98C28 BL 0x3A98A74
	0x03A98C2C LDR V1, [X19 + 0x94]
	0x03A98C30 MOV X0, X19
	0x03A98C34 LDP X20, X19, [X31 + 0x30]
	0x03A98C38 LDP X22, X21, [X31 + 0x20]
	0x03A98C3C LDP X24, X23, [X31 + 0x10]
	0x03A98C40 FNEG S0, S1
	0x03A98C44 MOV V2.16B, V1.16B
	0x03A98C48 LDR X30, [X31], #0x40
	0x03A98C4C B 0x3A98A74
	0x03A98C50 STR X30, [X31 - 0x20]!
	0x03A98C54 STP X20, X19, [X31 + 0x10]
	0x03A98C58 ADRP X20, 0x94A000
	0x03A98C5C LDRB W8, [X20 + 0x3C5]
	0x03A98C60 MOV X19, X0
	0x03A98C64 TBNZ X8, 0x0, 0x3A98C88
	0x03A98C68 ADRP X0, 0x6BF000
	0x03A98C6C LDR X0, [X0 + 0x6E0]
	0x03A98C70 BL 0x1C16CF4
	0x03A98C74 ADRP X0, 0x6BF000
	0x03A98C78 LDR X0, [X0 + 0x6B0]
	0x03A98C7C BL 0x1C16CF4
	0x03A98C80 MOVZ W8, 0x1
	0x03A98C84 STRB W8, [X20 + 0x3C5]
	0x03A98C88 LDR X0, [X19 + 0x50]
	0x03A98C8C CBZ X0, 0x3A98CBC
	0x03A98C90 ADRP X20, 0x6BF000
	0x03A98C94 LDR X20, [X20 + 0x6E0]
	0x03A98C98 LDR X1, [X20]
	0x03A98C9C BL 0x29B52D0
	0x03A98CA0 CBZ X0, 0x3A98CBC
	0x03A98CA4 LDR X1, [X0 + 0x10]
	0x03A98CA8 CBZ X1, 0x3A98CC0
	0x03A98CAC MOV X0, X19
	0x03A98CB0 BL 0x3A970A0
	0x03A98CB4 LDR X0, [X19 + 0x50]
	0x03A98CB8 CBNZ X0, 0x3A98C98
	0x03A98CBC BL 0x1C16F20
	0x03A98CC0 STR X31, [X19 + 0x50]
	0x03A98CC4 LDP X20, X19, [X31 + 0x10]
	0x03A98CC8 LDR X30, [X31], #0x20
	0x03A98CCC RET
	0x03A98CD0 STP X30, X23, [X31 - 0x30]!
	0x03A98CD4 STP X22, X21, [X31 + 0x10]
	0x03A98CD8 STP X20, X19, [X31 + 0x20]
	0x03A98CDC LDR X8, [X0 + 0x10]
	0x03A98CE0 CBZ X8, 0x3A98E00
	0x03A98CE4 LDR X22, [X8 + 0x20]
	0x03A98CE8 CBZ X22, 0x3A98E00
	0x03A98CEC LDR X21, [X22 + 0x20]
	0x03A98CF0 CMP X21, X22
	0x03A98CF4 B.EQ 0x3A98DF0
	0x03A98CF8 MOV X19, X0
	0x03A98CFC CBZ X21, 0x3A98E00
	0x03A98D00 LDR X8, [X21 + 0x28]
	0x03A98D04 CBZ X8, 0x3A98E00
	0x03A98D08 LDP X20, X0, [X21 + 0x38]
	0x03A98D0C LDR X1, [X8 + 0x40]
	0x03A98D10 LDR X23, [X21 + 0x20]
	0x03A98D14 BL 0x3A95314
	0x03A98D18 TBZ X0, 0x0, 0x3A98D60
	0x03A98D1C LDR X8, [X21 + 0x38]
	0x03A98D20 CBZ X8, 0x3A98E00
	0x03A98D24 LDR X8, [X8 + 0x38]
	0x03A98D28 CMP X8, X21
	0x03A98D2C B.EQ 0x3A98D60
	0x03A98D30 LDR X8, [X19 + 0x10]
	0x03A98D34 CBZ X8, 0x3A98E00
	0x03A98D38 MOV X1, X20
	0x03A98D3C MOV X2, X21
	0x03A98D40 BL 0x3A95F04
	0x03A98D44 LDR X8, [X19 + 0x10]
	0x03A98D48 CBZ X8, 0x3A98E00
	0x03A98D4C MOV X1, X21
	0x03A98D50 BL 0x3A96120
	0x03A98D54 CBZ X20, 0x3A98E00
	0x03A98D58 LDR X1, [X20 + 0x38]
	0x03A98D5C B 0x3A98D68
	0x03A98D60 MOV X1, X20
	0x03A98D64 MOV X20, X21
	0x03A98D68 CBZ X1, 0x3A98E00
	0x03A98D6C LDR X21, [X1 + 0x38]
	0x03A98D70 CMP X21, X20
	0x03A98D74 B.NE 0x3A98DE4
	0x03A98D78 CMP X1, X20
	0x03A98D7C B.EQ 0x3A98DB0
	0x03A98D80 CMP X1, X23
	0x03A98D84 B.EQ 0x3A98D9C
	0x03A98D88 CBZ X23, 0x3A98E00
	0x03A98D8C LDR X8, [X23 + 0x28]
	0x03A98D90 CMP X1, X8
	0x03A98D94 B.NE 0x3A98DA4
	0x03A98D98 B 0x3A98DA0
	0x03A98D9C CBZ X23, 0x3A98E00
	0x03A98DA0 LDR X23, [X23 + 0x20]
	0x03A98DA4 LDR X8, [X19 + 0x10]
	0x03A98DA8 CBZ X8, 0x3A98E00
	0x03A98DAC BL 0x3A96120

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+32], D10
	003 Move [X31+40], D9
	004 Move [X31+48], D8
	005 Move [X31+56], X30
	006 Move [X31+64], X26
	007 Move [X31+72], X25
	008 Move [X31+80], X24
	009 Move [X31+88], X23
	010 Move [X31+96], X22
	011 Move [X31+104], X21
	012 Move [X31+112], X20
	013 Move [X31+120], X19
	014 Move X26, 0x94B000
	015 Move X25, 0x6C0000
	016 Move W8, [X26+959]
	017 Move X25, [X25+1592]
	018 Move X20, X5
	019 Move X22, X4
	020 Move X23, X3
	021 Move X24, X2
	022 Move X19, X1
	023 Move X21, X0
	024 Move TEMP, X8
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {39}
	028 Move X0, 0x65C000
	029 Move X0, [X0+2512]
	030 Call 0x1C17CF4
	031 Move X0, 0x65C000
	032 Move X0, [X0+1592]
	033 Call 0x1C17CF4
	034 Move X0, 0x6C0000
	035 Move X0, [X0+1592]
	036 Call 0x1C17CF4
	037 Move W8, 1
	038 Move [X26+959], W8
	039 Move X0, [X25]
	040 Move [X31+16], X31
	041 Move [X31+24], X31
	042 Move W8, [X0+224]
	043 Compare W8, 0
	044 JumpIfNotEqual {47}
	045 Call 0x1C17DFC
	046 Move X0, [X25]
	047 Move X8, [X0+184]
	048 Move W9, [X8+8]
	049 Move X8, [X8]
	050 Move [X31+8], W9
	051 Move [X31], X8
	052 Compare X19, 0
	053 JumpIfEqual {187}
	054 Move W8, [X31+8]
	055 Move X9, [X31]
	056 Add X4, X31, 28
	057 Add X5, X31, 24
	058 Move X1, X19
	059 Move X2, X24
	060 Move X3, X23
	061 Move [X19+48], W8
	062 Move [X19+40], X9
	063 Call Tess.VertexWeights, X0, X1, X2, X3, X4, X5
	064 Add X4, X31, 20
	065 Add X5, X31, 16
	066 Move X1, X19
	067 Move X2, X22
	068 Move X3, X20
	069 Call Tess.VertexWeights, X0, X1, X2, X3, X4, X5
	070 Move X25, [X21+104]
	071 Compare X25, 0
	072 JumpIfEqual {172}
	073 Move X8, 0x65C000
	074 Move X8, [X8+2512]
	075 Move S8, [X19+40]
	076 Move S9, [X19+44]
	077 Move V10, [X19+48]
	078 Move W1, 4
	079 Move X0, [X8]
	080 Call 0x1C17D6C
	081 Compare X24, 0
	082 JumpIfEqual {187}
	083 Move X21, X0
	084 Compare X0, 0
	085 JumpIfEqual {187}
	086 Move X24, [X24+72]
	087 Compare X24, 0
	088 JumpIfEqual {95}
	089 Move X8, [X21]
	090 Move X0, X24
	091 Move X1, [X8+64]
	092 Call 0x1C17E00
	093 Compare X0, 0
	094 JumpIfEqual {188}
	095 Move W8, [X21+24]
	096 Compare W8, 0
	097 JumpIfEqual {186}
	098 Move [X21+32], X24
	099 Compare X23, 0
	100 JumpIfEqual {187}
	101 Move X23, [X23+72]
	102 Compare X23, 0
	103 JumpIfEqual {111}
	104 Move X8, [X21]
	105 Move X0, X23
	106 Move X1, [X8+64]
	107 Call 0x1C17E00
	108 Compare X0, 0
	109 JumpIfEqual {188}
	110 Move W8, [X21+24]
	111 NotImplemented "Instruction CMP not yet implemented."
	112 Move [X21+40], X23
	113 Compare X22, 0
	114 JumpIfEqual {187}
	115 Move X22, [X22+72]
	116 Compare X22, 0
	117 JumpIfEqual {125}
	118 Move X8, [X21]
	119 Move X0, X22
	120 Move X1, [X8+64]
	121 Call 0x1C17E00
	122 Compare X0, 0
	123 JumpIfEqual {188}
	124 Move W8, [X21+24]
	125 NotImplemented "Instruction CMP not yet implemented."
	126 Move [X21+48], X22
	127 Compare X20, 0
	128 JumpIfEqual {187}
	129 Move X20, [X20+72]
	130 Compare X20, 0
	131 JumpIfEqual {139}
	132 Move X8, [X21]
	133 Move X0, X20
	134 Move X1, [X8+64]
	135 Call 0x1C17E00
	136 Compare X0, 0
	137 JumpIfEqual {188}
	138 Move W8, [X21+24]
	139 NotImplemented "Instruction CMP not yet implemented."
	140 Move X8, 0x65C000
	141 Move X8, [X8+1592]
	142 Move [X21+56], X20
	143 Move W1, 4
	144 Move X0, [X8]
	145 Call 0x1C17D6C
	146 Compare X0, 0
	147 JumpIfEqual {187}
	148 Move W8, [X0+24]
	149 Move X2, X0
	150 Compare W8, 0
	151 JumpIfEqual {186}
	152 Move V0, [X31+28]
	153 NotImplemented "Instruction CMP not yet implemented."
	154 Move [X2+32], S0
	155 Move V0, [X31+24]
	156 NotImplemented "Instruction CMP not yet implemented."
	157 Move [X2+36], S0
	158 Move V0, [X31+20]
	159 NotImplemented "Instruction CMP not yet implemented."
	160 Move [X2+40], S0
	161 Move V0, [X31+16]
	162 Move V1, V9
	163 Move V2, V10
	164 Move X1, X21
	165 Move [X2+44], S0
	166 Move X8, [X25+24]
	167 Move X0, [X25+64]
	168 Move X3, [X25+40]
	169 Move V0, V8
	170 NotImplemented "Instruction BLR not yet implemented."
	171 Move [X19+72], X0
	172 Move X20, [X31+112]
	173 Move X19, [X31+120]
	174 Move X22, [X31+96]
	175 Move X21, [X31+104]
	176 Move X24, [X31+80]
	177 Move X23, [X31+88]
	178 Move X26, [X31+64]
	179 Move X25, [X31+72]
	180 Move X30, [X31+56]
	181 Move D9, [X31+40]
	182 Move D8, [X31+48]
	183 Move V10, [X31+32]
	184 Add X31, X31, 128
	185 Return 
	186 Call 0x1C17F28
	187 Call 0x1C17F20
	188 Call 0x1C17F44
	189 Move X1, X31
	190 Call 0x1C17DEC

Method: System.Boolean CheckForRightSplice(UnityEngine.Rendering.Universal.LibTessDotNet.Tess/ActiveRegion regUp)

Disassembly:
	0x03A98664 LDR X8, [X21 + 0x28]
	0x03A98668 CBZ X8, 0x3A9869C
	0x03A9866C LDR X8, [X8 + 0x50]
	0x03A98670 CBZ X8, 0x3A9869C
	0x03A98674 MOV X0, X19
	0x03A98678 MOV X1, X20
	0x03A9867C LDP X20, X19, [X31 + 0x40]
	0x03A98680 LDP X22, X21, [X31 + 0x30]
	0x03A98684 LDP X24, X23, [X31 + 0x20]
	0x03A98688 LDP X26, X25, [X31 + 0x10]
	0x03A9868C MOVZ W9, 0x1
	0x03A98690 STRB W9, [X8 + 0x27]
	0x03A98694 LDR X30, [X31], #0x50
	0x03A98698 B 0x3A977F0
	0x03A9869C BL 0x1C16F20
	0x03A986A0 STR X30, [X31 - 0x30]!
	0x03A986A4 STP X22, X21, [X31 + 0x10]
	0x03A986A8 STP X20, X19, [X31 + 0x20]
	0x03A986AC CBZ X1, 0x3A98748
	0x03A986B0 LDR X21, [X1 + 0x10]
	0x03A986B4 MOV X22, X1
	0x03A986B8 CBZ X21, 0x3A98748
	0x03A986BC MOV X20, X0
	0x03A986C0 LDR X0, [X21 + 0x40]
	0x03A986C4 MOV X1, X2
	0x03A986C8 MOV X19, X2
	0x03A986CC BL 0x3A95314
	0x03A986D0 TBNZ X0, 0x0, 0x3A9874C
	0x03A986D4 LDR X8, [X21 + 0x28]
	0x03A986D8 CBZ X8, 0x3A98748
	0x03A986DC LDR X0, [X8 + 0x40]
	0x03A986E0 MOV X1, X19
	0x03A986E4 BL 0x3A95314
	0x03A986E8 TBNZ X0, 0x0, 0x3A9874C
	0x03A986EC LDR X8, [X20 + 0x10]
	0x03A986F0 CBZ X8, 0x3A98748
	0x03A986F4 LDR X1, [X21 + 0x28]
	0x03A986F8 BL 0x3A96354
	0x03A986FC LDRB W8, [X22 + 0x27]
	0x03A98700 CBZ W8, 0x3A98718
	0x03A98704 LDR X8, [X20 + 0x10]
	0x03A98708 CBZ X8, 0x3A98748
	0x03A9870C LDR X1, [X21 + 0x30]
	0x03A98710 BL 0x3A96120
	0x03A98714 STRB W31, [X22 + 0x27]
	0x03A98718 CBZ X19, 0x3A98748
	0x03A9871C LDR X8, [X20 + 0x10]
	0x03A98720 CBZ X8, 0x3A98748
	0x03A98724 LDR X1, [X19 + 0x20]
	0x03A98728 MOV X2, X21
	0x03A9872C BL 0x3A95F04
	0x03A98730 MOV X0, X20
	0x03A98734 MOV X1, X19
	0x03A98738 LDP X20, X19, [X31 + 0x20]
	0x03A9873C LDP X22, X21, [X31 + 0x10]
	0x03A98740 LDR X30, [X31], #0x30
	0x03A98744 B 0x3A98794
	0x03A98748 BL 0x1C16F20
	0x03A9874C ADRP X0, 0x65B000
	0x03A98750 LDR X0, [X0 + 0x5B0]
	0x03A98754 BL 0x1C16D08
	0x03A98758 BL 0x1C16F10
	0x03A9875C MOV X19, X0
	0x03A98760 ADRP X0, 0x6BF000
	0x03A98764 LDR X0, [X0 + 0x698]
	0x03A98768 BL 0x1C16D08
	0x03A9876C MOV X1, X0
	0x03A98770 MOV X0, X19
	0x03A98774 MOV X2, X31
	0x03A98778 BL 0x337DF1C
	0x03A9877C ADRP X0, 0x6BF000
	0x03A98780 LDR X0, [X0 + 0x6A0]
	0x03A98784 BL 0x1C16D08
	0x03A98788 MOV X1, X0
	0x03A9878C MOV X0, X19
	0x03A98790 BL 0x1C16DEC
	0x03A98794 STP X30, X21, [X31 - 0x20]!
	0x03A98798 STP X20, X19, [X31 + 0x10]
	0x03A9879C STR X1, [X0 + 0x60]
	0x03A987A0 CBZ X1, 0x3A98854
	0x03A987A4 LDR X9, [X1 + 0x20]
	0x03A987A8 MOV X19, X0
	0x03A987AC MOV X10, X9
	0x03A987B0 CBZ X10, 0x3A98854
	0x03A987B4 LDR X8, [X10 + 0x50]
	0x03A987B8 CBNZ X8, 0x3A987D8
	0x03A987BC LDR X10, [X10 + 0x30]
	0x03A987C0 CMP X10, X9
	0x03A987C4 B.NE 0x3A987B0
	0x03A987C8 MOV X0, X19
	0x03A987CC LDP X20, X19, [X31 + 0x10]
	0x03A987D0 LDP X30, X21, [X31], #0x20
	0x03A987D4 B 0x3A98858
	0x03A987D8 MOV X0, X19
	0x03A987DC MOV X1, X8
	0x03A987E0 BL 0x3A9714C
	0x03A987E4 MOV X1, X0
	0x03A987E8 MOV X20, X0
	0x03A987EC BL 0x3A96F54

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x94B000
	008 Move W8, [X20+960]
	009 Move X21, X1
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x6C0000
	016 Move X0, [X0+1656]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+960], W8
	020 Move X1, X21
	021 Call Tess.RegionBelow, X0, X1
	022 Compare X21, 0
	023 JumpIfEqual {123}
	024 Move X22, X0
	025 Compare X0, 0
	026 JumpIfEqual {123}
	027 Move X20, [X21+16]
	028 Compare X20, 0
	029 JumpIfEqual {123}
	030 Move X23, [X22+16]
	031 Compare X23, 0
	032 JumpIfEqual {123}
	033 Move X0, [X20+64]
	034 Move X1, [X23+64]
	035 Call Geom.VertLeq, X0, X1
	036 Move TEMP, X0
	037 And TEMP, TEMP, 1
	038 Compare TEMP, 1
	039 JumpIfNotEqual {68}
	040 Move X8, [X23+40]
	041 Compare X8, 0
	042 JumpIfEqual {123}
	043 Move X0, [X8+64]
	044 Move X1, [X20+64]
	045 Move X2, [X23+64]
	046 Call Geom.EdgeSign, X0, X1, X2
	047 NotImplemented "Instruction FCMP not yet implemented."
	048 Move X0, [X20+64]
	049 Move X1, [X23+64]
	050 Call Geom.VertEq, X0, X1
	051 Move TEMP, X0
	052 And TEMP, TEMP, 1
	053 Compare TEMP, 1
	054 JumpIfNotEqual {99}
	055 Move X8, [X20+64]
	056 Move X9, [X23+64]
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Compare X8, 0
	059 JumpIfEqual {123}
	060 Move X0, [X19+88]
	061 Compare X0, 0
	062 JumpIfEqual {123}
	063 Move W1, [X8+60]
	064 Move X8, 0x6C0000
	065 Move X8, [X8+1656]
	066 Move X2, [X8]
	067 Call 0x24B59D8, X0, X1
	068 Move X8, [X20+40]
	069 Compare X8, 0
	070 JumpIfEqual {123}
	071 Move X0, [X8+64]
	072 Move X1, [X23+64]
	073 Move X2, [X20+64]
	074 Call Geom.EdgeSign, X0, X1, X2
	075 NotImplemented "Instruction FCMP not yet implemented."
	076 Move X1, X21
	077 Call Tess.RegionAbove, X0, X1
	078 Move W8, 1
	079 Move [X21+38], W8
	080 Compare X0, 0
	081 JumpIfEqual {123}
	082 Move [X0+38], W8
	083 Move X8, [X19+16]
	084 Compare X8, 0
	085 JumpIfEqual {123}
	086 Move X1, [X20+40]
	087 Call Mesh.SplitEdge, X0, X1
	088 Move X8, [X23+40]
	089 Compare X8, 0
	090 JumpIfEqual {123}
	091 Move X9, [X19+16]
	092 Compare X9, 0
	093 JumpIfEqual {123}
	094 Move X1, [X8+56]
	095 Move X2, X20
	096 Call Mesh.Splice, X0, X1, X2
	097 Move W0, 1
	098 Move W0, W31
	099 Move X8, [X19+16]
	100 Compare X8, 0
	101 JumpIfEqual {123}
	102 Move X1, [X23+40]
	103 Call Mesh.SplitEdge, X0, X1
	104 Move X8, [X23+40]
	105 Compare X8, 0
	106 JumpIfEqual {123}
	107 Move X9, [X19+16]
	108 Compare X9, 0
	109 JumpIfEqual {123}
	110 Move X2, [X8+56]
	111 Move X1, X20
	112 Call Mesh.Splice, X0, X1, X2
	113 Move W0, 1
	114 Move [X22+38], W0
	115 Move [X21+38], W0
	116 Move X20, [X31+32]
	117 Move X19, [X31+40]
	118 Move X22, [X31+16]
	119 Move X21, [X31+24]
	120 Move X30, [X31+48]
	121 Move X23, [X31+56]
	122 Return X0
	123 Call 0x1C17F20

Method: System.Boolean CheckForLeftSplice(UnityEngine.Rendering.Universal.LibTessDotNet.Tess/ActiveRegion regUp)

Disassembly:
	0x03A98DB0 CMP X20, X23
	0x03A98DB4 B.EQ 0x3A98DCC
	0x03A98DB8 CBZ X23, 0x3A98E00
	0x03A98DBC LDR X8, [X23 + 0x28]
	0x03A98DC0 CMP X21, X8
	0x03A98DC4 B.NE 0x3A98DD4
	0x03A98DC8 B 0x3A98DD0
	0x03A98DCC CBZ X23, 0x3A98E00
	0x03A98DD0 LDR X23, [X23 + 0x20]
	0x03A98DD4 LDR X8, [X19 + 0x10]
	0x03A98DD8 CBZ X8, 0x3A98E00
	0x03A98DDC MOV X1, X20
	0x03A98DE0 BL 0x3A96120
	0x03A98DE4 CMP X23, X22
	0x03A98DE8 MOV X21, X23
	0x03A98DEC B.NE 0x3A98CFC
	0x03A98DF0 LDP X20, X19, [X31 + 0x20]
	0x03A98DF4 LDP X22, X21, [X31 + 0x10]
	0x03A98DF8 LDP X30, X23, [X31], #0x30
	0x03A98DFC RET
	0x03A98E00 BL 0x1C16F20
	0x03A98E04 STR X30, [X31 - 0x50]!
	0x03A98E08 STP X26, X25, [X31 + 0x10]
	0x03A98E0C STP X24, X23, [X31 + 0x20]
	0x03A98E10 STP X22, X21, [X31 + 0x30]
	0x03A98E14 STP X20, X19, [X31 + 0x40]
	0x03A98E18 ADRP X20, 0x94A000
	0x03A98E1C LDRB W8, [X20 + 0x3C6]
	0x03A98E20 MOV X19, X0
	0x03A98E24 TBNZ X8, 0x0, 0x3A98E84
	0x03A98E28 ADRP X0, 0x6BF000
	0x03A98E2C LDR X0, [X0 + 0x6E8]
	0x03A98E30 BL 0x1C16CF4
	0x03A98E34 ADRP X0, 0x6BF000
	0x03A98E38 LDR X0, [X0 + 0x6F0]
	0x03A98E3C BL 0x1C16CF4
	0x03A98E40 ADRP X0, 0x6BF000
	0x03A98E44 LDR X0, [X0 + 0x658]
	0x03A98E48 BL 0x1C16CF4
	0x03A98E4C ADRP X0, 0x6BF000
	0x03A98E50 LDR X0, [X0 + 0x6F8]
	0x03A98E54 BL 0x1C16CF4
	0x03A98E58 ADRP X0, 0x6BF000
	0x03A98E5C LDR X0, [X0 + 0x680]
	0x03A98E60 BL 0x1C16CF4
	0x03A98E64 ADRP X0, 0x6BF000
	0x03A98E68 LDR X0, [X0 + 0x700]
	0x03A98E6C BL 0x1C16CF4
	0x03A98E70 ADRP X0, 0x6BF000
	0x03A98E74 LDR X0, [X0 + 0x708]
	0x03A98E78 BL 0x1C16CF4
	0x03A98E7C MOVZ W8, 0x1
	0x03A98E80 STRB W8, [X20 + 0x3C6]
	0x03A98E84 LDR X8, [X19 + 0x10]
	0x03A98E88 CBZ X8, 0x3A98F94
	0x03A98E8C LDR X8, [X8 + 0x10]
	0x03A98E90 CBZ X8, 0x3A98F94
	0x03A98E94 ADRP X9, 0x6BF000
	0x03A98E98 ADRP X22, 0x6BF000
	0x03A98E9C ADRP X26, 0x6BF000
	0x03A98EA0 ADRP X21, 0x6BF000
	0x03A98EA4 ADRP X23, 0x6BF000
	0x03A98EA8 ADRP X25, 0x6BF000
	0x03A98EAC ADRP X24, 0x6BF000
	0x03A98EB0 LDR X9, [X9 + 0x6F0]
	0x03A98EB4 LDR X22, [X22 + 0x6E8]
	0x03A98EB8 LDR X26, [X26 + 0x708]
	0x03A98EBC LDR X21, [X21 + 0x700]
	0x03A98EC0 LDR X23, [X23 + 0x680]
	0x03A98EC4 LDR X25, [X25 + 0x658]
	0x03A98EC8 LDR X24, [X24 + 0x6F8]
	0x03A98ECC MOVZ W20, 0x8
	0x03A98ED0 MOV X10, X8
	0x03A98ED4 LDR X10, [X10 + 0x18]
	0x03A98ED8 CMP X10, X8
	0x03A98EDC B.EQ 0x3A98EEC
	0x03A98EE0 ADD W20, W20, 0x1
	0x03A98EE4 CBNZ X10, 0x3A98ED4
	0x03A98EE8 B 0x3A98F94
	0x03A98EEC LDR X0, [X9]
	0x03A98EF0 BL 0x1C16F10
	0x03A98EF4 LDR X2, [X22]
	0x03A98EF8 MOV X1, X31
	0x03A98EFC MOV X3, X31
	0x03A98F00 MOV X22, X0
	0x03A98F04 BL 0x2EEA0C4
	0x03A98F08 LDR X0, [X26]
	0x03A98F0C BL 0x1C16F10
	0x03A98F10 LDR X3, [X21]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X19, X1
	008 Move X20, X0
	009 Call Tess.RegionBelow, X0, X1
	010 Compare X19, 0
	011 JumpIfEqual {114}
	012 Move X23, X0
	013 Compare X0, 0
	014 JumpIfEqual {114}
	015 Move X21, [X19+16]
	016 Compare X21, 0
	017 JumpIfEqual {114}
	018 Move X8, [X21+40]
	019 Compare X8, 0
	020 JumpIfEqual {114}
	021 Move X22, [X23+16]
	022 Compare X22, 0
	023 JumpIfEqual {114}
	024 Move X9, [X22+40]
	025 Compare X9, 0
	026 JumpIfEqual {114}
	027 Move X0, [X8+64]
	028 Move X1, [X9+64]
	029 Call Geom.VertLeq, X0, X1
	030 Move TEMP, X0
	031 And TEMP, TEMP, 1
	032 Compare TEMP, 1
	033 JumpIfNotEqual {69}
	034 Move X8, [X21+40]
	035 Compare X8, 0
	036 JumpIfEqual {114}
	037 Move X9, [X22+40]
	038 Compare X9, 0
	039 JumpIfEqual {114}
	040 Move X0, [X8+64]
	041 Move X1, [X9+64]
	042 Move X2, [X21+64]
	043 Call Geom.EdgeSign, X0, X1, X2
	044 NotImplemented "Instruction FCMP not yet implemented."
	045 Move X1, X19
	046 Call Tess.RegionAbove, X0, X1
	047 Move W8, 1
	048 Move [X19+38], W8
	049 Compare X0, 0
	050 JumpIfEqual {114}
	051 Move [X0+38], W8
	052 Move X8, [X20+16]
	053 Compare X8, 0
	054 JumpIfEqual {114}
	055 Move X1, X21
	056 Call Mesh.SplitEdge, X0, X1
	057 Move X8, [X20+16]
	058 Compare X8, 0
	059 JumpIfEqual {114}
	060 Move X1, [X22+40]
	061 Move X2, X0
	062 Move X20, X0
	063 Call Mesh.Splice, X0, X1, X2
	064 Compare X20, 0
	065 JumpIfEqual {114}
	066 Move X8, [X20+72]
	067 Compare X8, 0
	068 JumpIfNotEqual {103}
	069 Move X8, [X22+40]
	070 Compare X8, 0
	071 JumpIfEqual {114}
	072 Move X9, [X21+40]
	073 Compare X9, 0
	074 JumpIfEqual {114}
	075 Move X0, [X8+64]
	076 Move X1, [X9+64]
	077 Move X2, [X22+64]
	078 Call Geom.EdgeSign, X0, X1, X2
	079 NotImplemented "Instruction FCMP not yet implemented."
	080 Move W8, 1
	081 Move [X23+38], W8
	082 Move [X19+38], W8
	083 Move X8, [X20+16]
	084 Compare X8, 0
	085 JumpIfEqual {114}
	086 Move X1, X22
	087 Call Mesh.SplitEdge, X0, X1
	088 Move X8, [X20+16]
	089 Compare X8, 0
	090 JumpIfEqual {114}
	091 Move X2, [X22+40]
	092 Move X1, [X21+56]
	093 Move X20, X0
	094 Call Mesh.Splice, X0, X1, X2
	095 Compare X20, 0
	096 JumpIfEqual {114}
	097 Move X8, [X20+40]
	098 Compare X8, 0
	099 JumpIfEqual {114}
	100 Move X8, [X8+72]
	101 Compare X8, 0
	102 JumpIfEqual {114}
	103 Move W9, [X19+36]
	104 Move W0, 1
	105 Move [X8+53], W9
	106 Move W0, W31
	107 Move X20, [X31+32]
	108 Move X19, [X31+40]
	109 Move X22, [X31+16]
	110 Move X21, [X31+24]
	111 Move X30, [X31+48]
	112 Move X23, [X31+56]
	113 Return X0
	114 Call 0x1C17F20

Method: System.Boolean CheckForIntersect(UnityEngine.Rendering.Universal.LibTessDotNet.Tess/ActiveRegion regUp)

Disassembly:
	0x03A98F14 MOV W1, W20
	0x03A98F18 MOV X2, X22
	0x03A98F1C MOV X21, X0
	0x03A98F20 BL 0x24B4158
	0x03A98F24 LDR X8, [X19 + 0x10]
	0x03A98F28 STR X21, [X19 + 0x58]
	0x03A98F2C CBZ X8, 0x3A98F94
	0x03A98F30 LDR X22, [X8 + 0x10]
	0x03A98F34 CBZ X22, 0x3A98F94
	0x03A98F38 CBZ X21, 0x3A98F94
	0x03A98F3C MOV X20, X22
	0x03A98F40 LDR X20, [X20 + 0x18]
	0x03A98F44 CMP X20, X22
	0x03A98F48 B.EQ 0x3A98F98
	0x03A98F4C LDR X2, [X23]
	0x03A98F50 MOV X0, X21
	0x03A98F54 MOV X1, X20
	0x03A98F58 BL 0x24B4764
	0x03A98F5C CBZ X20, 0x3A98F94
	0x03A98F60 MOV X21, X0
	0x03A98F64 STR W21, [X20 + 0x3C]
	0x03A98F68 LDR X0, [X25]
	0x03A98F6C LDR W8, [X0 + 0xE0]
	0x03A98F70 CBNZ W8, 0x3A98F7C
	0x03A98F74 BL 0x1C16DFC
	0x03A98F78 LDR X0, [X25]
	0x03A98F7C LDR X8, [X0 + 0xB8]
	0x03A98F80 LDR W8, [X8]
	0x03A98F84 CMP W8, W21
	0x03A98F88 B.EQ 0x3A98FB8
	0x03A98F8C LDR X21, [X19 + 0x58]
	0x03A98F90 CBNZ X21, 0x3A98F40
	0x03A98F94 BL 0x1C16F20
	0x03A98F98 LDR X1, [X24]
	0x03A98F9C MOV X0, X21
	0x03A98FA0 LDP X20, X19, [X31 + 0x40]
	0x03A98FA4 LDP X22, X21, [X31 + 0x30]
	0x03A98FA8 LDP X24, X23, [X31 + 0x20]
	0x03A98FAC LDP X26, X25, [X31 + 0x10]
	0x03A98FB0 LDR X30, [X31], #0x50
	0x03A98FB4 B 0x24B420C
	0x03A98FB8 ADRP X0, 0x65B000
	0x03A98FBC LDR X0, [X0 + 0x5B0]
	0x03A98FC0 BL 0x1C16D08
	0x03A98FC4 BL 0x1C16F10
	0x03A98FC8 MOV X19, X0
	0x03A98FCC ADRP X0, 0x6BF000
	0x03A98FD0 LDR X0, [X0 + 0x688]
	0x03A98FD4 BL 0x1C16D08
	0x03A98FD8 MOV X1, X0
	0x03A98FDC MOV X0, X19
	0x03A98FE0 MOV X2, X31
	0x03A98FE4 BL 0x337DF1C
	0x03A98FE8 ADRP X0, 0x6BF000
	0x03A98FEC LDR X0, [X0 + 0x710]
	0x03A98FF0 BL 0x1C16D08
	0x03A98FF4 MOV X1, X0
	0x03A98FF8 MOV X0, X19
	0x03A98FFC BL 0x1C16DEC
	0x03A99000 STR X31, [X0 + 0x58]
	0x03A99004 RET
	0x03A99008 STP X30, X21, [X31 - 0x20]!
	0x03A9900C STP X20, X19, [X31 + 0x10]
	0x03A99010 LDR X8, [X0 + 0x10]
	0x03A99014 CBZ X8, 0x3A99084
	0x03A99018 LDR X9, [X8 + 0x18]
	0x03A9901C CBZ X9, 0x3A99084
	0x03A99020 LDR X21, [X9 + 0x18]
	0x03A99024 MOV X19, X0
	0x03A99028 LDR X9, [X8 + 0x18]
	0x03A9902C CMP X21, X9
	0x03A99030 B.EQ 0x3A99088
	0x03A99034 CBZ X21, 0x3A99084
	0x03A99038 LDR X20, [X21 + 0x20]
	0x03A9903C CBZ X20, 0x3A99084
	0x03A99040 LDR X9, [X20 + 0x38]
	0x03A99044 CBZ X9, 0x3A99084
	0x03A99048 LDR X9, [X9 + 0x38]
	0x03A9904C LDR X21, [X21 + 0x18]
	0x03A99050 CMP X9, X20
	0x03A99054 B.EQ 0x3A99060
	0x03A99058 CBNZ X8, 0x3A99028
	0x03A9905C B 0x3A99084
	0x03A99060 LDR X0, [X20 + 0x30]
	0x03A99064 MOV X1, X20
	0x03A99068 BL 0x3A95678
	0x03A9906C LDR X8, [X19 + 0x10]
	0x03A99070 CBZ X8, 0x3A99084
	0x03A99074 MOV X1, X20
	0x03A99078 BL 0x3A96120
	0x03A9907C LDR X8, [X19 + 0x10]
	0x03A99080 CBNZ X8, 0x3A99028
	0x03A99084 BL 0x1C16F20
	0x03A99088 LDP X20, X19, [X31 + 0x10]
	0x03A9908C LDP X30, X21, [X31], #0x20
	0x03A99090 RET
	0x03A99094 STR X30, [X31 - 0x30]!
	0x03A99098 STP X22, X21, [X31 + 0x10]
	0x03A9909C STP X20, X19, [X31 + 0x20]
	0x03A990A0 ADRP X20, 0x949000
	0x03A990A4 LDRB W8, [X20 + 0x3C7]
	0x03A990A8 MOV X19, X0
	0x03A990AC TBNZ X8, 0x0, 0x3A990D0
	0x03A990B0 ADRP X0, 0x6BE000
	0x03A990B4 LDR X0, [X0 + 0x718]
	0x03A990B8 BL 0x1C16CF4
	0x03A990BC ADRP X0, 0x6BE000
	0x03A990C0 LDR X0, [X0 + 0x720]
	0x03A990C4 BL 0x1C16CF4
	0x03A990C8 MOVZ W8, 0x1
	0x03A990CC STRB W8, [X20 + 0x3C7]
	0x03A990D0 MOV X0, X19
	0x03A990D4 BL 0x3A98CD0
	0x03A990D8 MOV X0, X19
	0x03A990DC BL 0x3A98E04
	0x03A990E0 MOV X0, X19
	0x03A990E4 BL 0x3A99008
	0x03A990E8 MOV X0, X19
	0x03A990EC BL 0x3A98B68
	0x03A990F0 LDR X0, [X19 + 0x58]
	0x03A990F4 CBZ X0, 0x3A9918C
	0x03A990F8 ADRP X21, 0x6BE000
	0x03A990FC ADRP X22, 0x6BE000
	0x03A99100 LDR X21, [X21 + 0x718]
	0x03A99104 LDR X22, [X22 + 0x720]
	0x03A99108 LDR X1, [X21]
	0x03A9910C BL 0x24B4808
	0x03A99110 CBZ X0, 0x3A99190
	0x03A99114 MOV X20, X0
	0x03A99118 LDR X0, [X19 + 0x58]
	0x03A9911C CBZ X0, 0x3A9918C
	0x03A99120 LDR X1, [X22]
	0x03A99124 BL 0x24B491C
	0x03A99128 CBZ X0, 0x3A99178
	0x03A9912C LDR V0, [X0 + 0x34]
	0x03A99130 LDR V1, [X20 + 0x34]
	0x03A99134 FCMP S0, S1
	0x03A99138 B.NE 0x3A99178
	0x03A9913C LDR V0, [X0 + 0x38]
	0x03A99140 LDR V1, [X20 + 0x38]
	0x03A99144 FCMP S0, S1
	0x03A99148 B.NE 0x3A99178
	0x03A9914C LDR X0, [X19 + 0x58]
	0x03A99150 CBZ X0, 0x3A9918C
	0x03A99154 LDR X1, [X21]
	0x03A99158 BL 0x24B4808
	0x03A9915C CBZ X0, 0x3A9918C
	0x03A99160 LDR X8, [X19 + 0x10]
	0x03A99164 CBZ X8, 0x3A9918C
	0x03A99168 LDR X1, [X20 + 0x20]
	0x03A9916C LDR X2, [X0 + 0x20]
	0x03A99170 BL 0x3A95F04
	0x03A99174 B 0x3A99118
	0x03A99178 MOV X0, X19
	0x03A9917C MOV X1, X20
	0x03A99180 BL 0x3A98794
	0x03A99184 LDR X0, [X19 + 0x58]
	0x03A99188 CBNZ X0, 0x3A99108
	0x03A9918C BL 0x1C16F20
	0x03A99190 MOV X0, X19
	0x03A99194 BL 0x3A98C50
	0x03A99198 STR X31, [X19 + 0x58]
	0x03A9919C MOV X0, X19
	0x03A991A0 LDP X20, X19, [X31 + 0x20]
	0x03A991A4 LDP X22, X21, [X31 + 0x10]
	0x03A991A8 LDR X30, [X31], #0x30
	0x03A991AC B 0x3A99008
	0x03A991B0 LDP S0, S1, [X0 + 0x18]
	0x03A991B4 LDR V2, [X0 + 0x20]
	0x03A991B8 RET
	0x03A991BC STP S0, S1, [X0 + 0x18]
	0x03A991C0 STR S2, [X0 + 0x20]
	0x03A991C4 RET
	0x03A991C8 LDR X0, [X0 + 0x70]
	0x03A991CC RET
	0x03A991D0 LDR W0, [X0 + 0x78]
	0x03A991D4 RET
	0x03A991D8 LDR X0, [X0 + 0x80]
	0x03A991DC RET
	0x03A991E0 LDR W0, [X0 + 0x88]
	0x03A991E4 RET
	0x03A991E8 STP X30, X21, [X31 - 0x20]!
	0x03A991EC STP X20, X19, [X31 + 0x10]
	0x03A991F0 ADRP X21, 0x949000
	0x03A991F4 ADRP X20, 0x6BE000
	0x03A991F8 LDRB W8, [X21 + 0x3C8]
	0x03A991FC LDR X20, [X20 + 0x638]
	0x03A99200 MOV X19, X0
	0x03A99204 TBNZ X8, 0x0, 0x3A9921C
	0x03A99208 ADRP X0, 0x6BE000
	0x03A9920C LDR X0, [X0 + 0x638]
	0x03A99210 BL 0x1C16CF4
	0x03A99214 MOVZ W8, 0x1
	0x03A99218 STRB W8, [X21 + 0x3C8]
	0x03A9921C MOVZ W9, 0xF2CA
	0x03A99220 MOVZ W8, 0x3F800000
	0x03A99224 MOVK W9, 0x72490000
	0x03A99228 MOV X0, X19
	0x03A9922C MOV X1, X31
	0x03A99230 STR W8, [X19 + 0x8C]
	0x03A99234 STR W9, [X19 + 0x94]
	0x03A99238 BL 0x33BDD8C
	0x03A9923C LDR X0, [X20]
	0x03A99240 LDR W8, [X0 + 0xE0]
	0x03A99244 CBNZ W8, 0x3A99250
	0x03A99248 BL 0x1C16DFC
	0x03A9924C LDR X0, [X20]
	0x03A99250 LDR X8, [X0 + 0xB8]
	0x03A99254 LDR X9, [X8]
	0x03A99258 LDR W8, [X8 + 0x8]
	0x03A9925C STR X31, [X19 + 0x70]
	0x03A99260 STR W31, [X19 + 0x78]
	0x03A99264 STR X31, [X19 + 0x80]
	0x03A99268 STR W31, [X19 + 0x88]
	0x03A9926C STUR X31, [X19 + 0x44]
	0x03A99270 STUR X31, [X19 + 0x3C]
	0x03A99274 STR W8, [X19 + 0x20]
	0x03A99278 STP X31, X9, [X19 + 0x10]
	0x03A9927C STR W31, [X19 + 0x4C]
	0x03A99280 LDP X20, X19, [X31 + 0x10]
	0x03A99284 LDP X30, X21, [X31], #0x20
	0x03A99288 RET
	0x03A9928C SUB X31, X31, 0x80
	0x03A99290 STR D10, [X31 + 0x20]
	0x03A99294 STP D9, D8, [X31 + 0x30]
	0x03A99298 STP X30, X25, [X31 + 0x40]
	0x03A9929C STP X24, X23, [X31 + 0x50]
	0x03A992A0 STP X22, X21, [X31 + 0x60]
	0x03A992A4 STP X20, X19, [X31 + 0x70]
	0x03A992A8 ADRP X21, 0x949000
	0x03A992AC LDRB W8, [X21 + 0x3C9]
	0x03A992B0 MOV X19, X1
	0x03A992B4 MOV X20, X0
	0x03A992B8 TBNZ X8, 0x0, 0x3A992E8
	0x03A992BC ADRP X0, 0x65A000
	0x03A992C0 LDR X0, [X0 + 0x638]
	0x03A992C4 BL 0x1C16CF4
	0x03A992C8 ADRP X0, 0x6BE000
	0x03A992CC LDR X0, [X0 + 0x638]
	0x03A992D0 BL 0x1C16CF4
	0x03A992D4 ADRP X0, 0x6BE000
	0x03A992D8 LDR X0, [X0 + 0x728]
	0x03A992DC BL 0x1C16CF4
	0x03A992E0 MOVZ W8, 0x1
	0x03A992E4 STRB W8, [X21 + 0x3C9]
	0x03A992E8 STR W31, [X31 + 0x18]
	0x03A992EC STR X31, [X31 + 0x10]
	0x03A992F0 LDR X8, [X20 + 0x10]
	0x03A992F4 CBZ X8, 0x3A99810
	0x03A992F8 LDR X8, [X8 + 0x10]
	0x03A992FC CBZ X8, 0x3A99810
	0x03A99300 ADRP X24, 0x65A000
	0x03A99304 LDR X24, [X24 + 0x638]
	0x03A99308 LDR X23, [X8 + 0x18]
	0x03A9930C MOVZ W1, 0x3
	0x03A99310 LDR X0, [X24]
	0x03A99314 BL 0x1C16D6C
	0x03A99318 CBZ X23, 0x3A99810
	0x03A9931C MOV X21, X0
	0x03A99320 CBZ X0, 0x3A99810
	0x03A99324 LDR W8, [X21 + 0x18]
	0x03A99328 CBZ W8, 0x3A9988C
	0x03A9932C LDR V0, [X23 + 0x28]
	0x03A99330 CMP W8, 0x1
	0x03A99334 STR S0, [X21 + 0x20]
	0x03A99338 B.EQ 0x3A9988C
	0x03A9933C LDR V0, [X23 + 0x2C]
	0x03A99340 CMP W8, 0x2
	0x03A99344 STR S0, [X21 + 0x24]
	0x03A99348 B.LS 0x3A9988C
	0x03A9934C LDR V0, [X23 + 0x30]
	0x03A99350 ADRP X25, 0x6BE000
	0x03A99354 LDR X25, [X25 + 0x728]
	0x03A99358 MOVZ W1, 0x3
	0x03A9935C STR S0, [X21 + 0x28]
	0x03A99360 LDR X0, [X25]
	0x03A99364 BL 0x1C16D6C
	0x03A99368 CBZ X0, 0x3A99810
	0x03A9936C LDR X8, [X0]
	0x03A99370 MOV X22, X0
	0x03A99374 MOV X0, X23
	0x03A99378 LDR X1, [X8 + 0x40]
	0x03A9937C BL 0x1C16E00
	0x03A99380 CBZ X0, 0x3A99890
	0x03A99384 LDR W8, [X22 + 0x18]
	0x03A99388 CBZ W8, 0x3A9988C
	0x03A9938C LDR X8, [X22]
	0x03A99390 STR X23, [X22 + 0x20]
	0x03A99394 MOV X0, X23
	0x03A99398 LDR X1, [X8 + 0x40]
	0x03A9939C BL 0x1C16E00
	0x03A993A0 CBZ X0, 0x3A99890
	0x03A993A4 LDR W8, [X22 + 0x18]
	0x03A993A8 CMP W8, 0x1
	0x03A993AC B.LS 0x3A9988C
	0x03A993B0 LDR X8, [X22]
	0x03A993B4 STR X23, [X22 + 0x28]
	0x03A993B8 MOV X0, X23
	0x03A993BC LDR X1, [X8 + 0x40]
	0x03A993C0 BL 0x1C16E00
	0x03A993C4 CBZ X0, 0x3A99890
	0x03A993C8 LDR W8, [X22 + 0x18]
	0x03A993CC CMP W8, 0x2
	0x03A993D0 B.LS 0x3A9988C
	0x03A993D4 STR X23, [X22 + 0x30]
	0x03A993D8 LDR X0, [X24]
	0x03A993DC MOVZ W1, 0x3
	0x03A993E0 BL 0x1C16D6C
	0x03A993E4 CBZ X0, 0x3A99810
	0x03A993E8 LDR W8, [X0 + 0x18]
	0x03A993EC MOV X24, X0
	0x03A993F0 CBZ W8, 0x3A9988C
	0x03A993F4 LDR V0, [X23 + 0x28]
	0x03A993F8 CMP W8, 0x1
	0x03A993FC STR S0, [X24 + 0x20]
	0x03A99400 B.EQ 0x3A9988C
	0x03A99404 LDR V0, [X23 + 0x2C]
	0x03A99408 CMP W8, 0x2
	0x03A9940C STR S0, [X24 + 0x24]
	0x03A99410 B.LS 0x3A9988C
	0x03A99414 LDR V0, [X23 + 0x30]
	0x03A99418 MOVZ W1, 0x3
	0x03A9941C STR S0, [X24 + 0x28]
	0x03A99420 LDR X0, [X25]
	0x03A99424 BL 0x1C16D6C
	0x03A99428 CBZ X0, 0x3A99810
	0x03A9942C LDR X8, [X0]
	0x03A99430 MOV X25, X0
	0x03A99434 MOV X0, X23
	0x03A99438 LDR X1, [X8 + 0x40]
	0x03A9943C BL 0x1C16E00
	0x03A99440 CBZ X0, 0x3A99890
	0x03A99444 LDR W8, [X25 + 0x18]
	0x03A99448 CBZ W8, 0x3A9988C
	0x03A9944C LDR X8, [X25]
	0x03A99450 STR X23, [X25 + 0x20]
	0x03A99454 MOV X0, X23
	0x03A99458 LDR X1, [X8 + 0x40]
	0x03A9945C BL 0x1C16E00
	0x03A99460 CBZ X0, 0x3A99890
	0x03A99464 LDR W8, [X25 + 0x18]
	0x03A99468 CMP W8, 0x1
	0x03A9946C B.LS 0x3A9988C
	0x03A99470 LDR X8, [X25]
	0x03A99474 STR X23, [X25 + 0x28]
	0x03A99478 MOV X0, X23
	0x03A9947C LDR X1, [X8 + 0x40]
	0x03A99480 BL 0x1C16E00
	0x03A99484 CBZ X0, 0x3A99890
	0x03A99488 LDR W8, [X25 + 0x18]
	0x03A9948C CMP W8, 0x2
	0x03A99490 B.LS 0x3A9988C
	0x03A99494 STR X23, [X25 + 0x30]
	0x03A99498 LDR X8, [X20 + 0x10]
	0x03A9949C CBZ X8, 0x3A99810
	0x03A994A0 LDR X9, [X8 + 0x10]
	0x03A994A4 CMP X23, X9
	0x03A994A8 B.EQ 0x3A99648

ISIL:
	001 Move [X31-112], D9
	002 Move [X31-104], D8
	003 Move [X31+16], X29
	004 Move [X31+24], X30
	005 Move [X31+32], X28
	006 Move [X31+40], X27
	007 Move [X31+48], X26
	008 Move [X31+56], X25
	009 Move [X31+64], X24
	010 Move [X31+72], X23
	011 Move [X31+80], X22
	012 Move [X31+88], X21
	013 Move [X31+96], X20
	014 Move [X31+104], X19
	015 Move X21, 0x94B000
	016 Move W8, [X21+961]
	017 Move X20, X1
	018 Move X19, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {37}
	023 Move X0, 0x65C000
	024 Move X0, [X0+1448]
	025 Call 0x1C17CF4
	026 Move X0, 0x6C0000
	027 Move X0, [X0+1624]
	028 Call 0x1C17CF4
	029 Move X0, 0x6C0000
	030 Move X0, [X0+1528]
	031 Call 0x1C17CF4
	032 Move X0, 0x6C0000
	033 Move X0, [X0+1664]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X21+961], W8
	037 Move X1, X20
	038 Call Tess.RegionBelow, X0, X1
	039 Compare X20, 0
	040 JumpIfEqual {406}
	041 Move X21, X0
	042 Compare X0, 0
	043 JumpIfEqual {406}
	044 Move X22, [X20+16]
	045 Compare X22, 0
	046 JumpIfEqual {406}
	047 Move X29, [X21+16]
	048 Compare X29, 0
	049 JumpIfEqual {406}
	050 Move X9, [X22+40]
	051 Compare X9, 0
	052 JumpIfEqual {406}
	053 Move X8, [X29+40]
	054 Compare X8, 0
	055 JumpIfEqual {406}
	056 Move X26, [X22+64]
	057 Move X25, [X29+64]
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Compare X26, 0
	060 JumpIfEqual {406}
	061 Move X24, [X9+64]
	062 Compare X24, 0
	063 JumpIfEqual {406}
	064 Move X9, 0x65C000
	065 Move X9, [X9+1448]
	066 Move X23, [X8+64]
	067 Move V8, [X26+56]
	068 Move V9, [X24+56]
	069 Move X0, [X9]
	070 Move W8, [X0+224]
	071 Compare W8, 0
	072 JumpIfNotEqual {74}
	073 Call 0x1C17DFC
	074 Move V0, V8
	075 Move V1, V9
	076 Move X0, X31
	077 Call Math.Min, V0, V1
	078 Compare X25, 0
	079 JumpIfEqual {406}
	080 Compare X23, 0
	081 JumpIfEqual {406}
	082 Move V8, V0
	083 Move V0, [X25+56]
	084 Move V1, [X23+56]
	085 Move X0, X31
	086 Call Math.Max, V0, V1
	087 NotImplemented "Instruction FCMP not yet implemented."
	088 Move X0, X26
	089 Move X1, X25
	090 Call Geom.VertLeq, X0, X1
	091 Move TEMP, X0
	092 And TEMP, TEMP, 1
	093 Compare TEMP, 1
	094 JumpIfNotEqual {100}
	095 Move X0, X23
	096 Move X1, X26
	097 Move X2, X25
	098 Call Geom.EdgeSign, X0, X1, X2
	099 NotImplemented "Instruction FCMP not yet implemented."
	100 Move X0, X24
	101 Move X1, X25
	102 Move X2, X26
	103 Call Geom.EdgeSign, X0, X1, X2
	104 NotImplemented "Instruction FCMP not yet implemented."
	105 Move X8, 0x6BF000
	106 Move X8, [X8+1528]
	107 Move X0, [X8]
	108 Call 0x24A7E1C
	109 Move X27, X0
	110 Move X0, X24
	111 Move X1, X26
	112 Move X2, X23
	113 Move X3, X25
	114 Move X4, X27
	115 Call Geom.EdgeIntersect, X0, X1, X2, X3, X4
	116 Move X1, [X19+96]
	117 Move X0, X27
	118 Call Geom.VertLeq, X0, X1
	119 Move TEMP, X0
	120 And TEMP, TEMP, 1
	121 Compare TEMP, 1
	122 JumpIfNotEqual {130}
	123 Move X8, [X19+96]
	124 Compare X8, 0
	125 JumpIfEqual {406}
	126 Compare X27, 0
	127 JumpIfEqual {406}
	128 NotImplemented "Instruction LDUR not yet implemented."
	129 Move [X27+52], D0
	130 Move X0, X26
	131 Move X1, X25
	132 Call Geom.VertLeq, X0, X1
	133 And W31, W0, 1
	134 NotImplemented "Instruction CSEL not yet implemented."
	135 Move X0, X28
	136 Move X1, X27
	137 Call Geom.VertLeq, X0, X1
	138 Move TEMP, X0
	139 And TEMP, TEMP, 1
	140 Compare TEMP, 1
	141 JumpIfNotEqual {146}
	142 Compare X27, 0
	143 JumpIfEqual {406}
	144 NotImplemented "Instruction LDUR not yet implemented."
	145 Move [X27+52], D0
	146 Move X0, X27
	147 Move X1, X26
	148 Call Geom.VertEq, X0, X1
	149 Move TEMP, X0
	150 And TEMP, TEMP, 1
	151 Compare TEMP, 1
	152 JumpIfEqual {160}
	153 Move X0, X27
	154 Move X1, X25
	155 Call Geom.VertEq, X0, X1
	156 Move TEMP, X0
	157 And TEMP, TEMP, 1
	158 Compare TEMP, 1
	159 JumpIfNotEqual {180}
	160 Move X0, X19
	161 Move X1, X20
	162 Call Tess.CheckForRightSplice, X0, X1
	163 Move W22, W31
	164 Move W0, W22
	165 Move X20, [X31+96]
	166 Move X19, [X31+104]
	167 Move X22, [X31+80]
	168 Move X21, [X31+88]
	169 Move X24, [X31+64]
	170 Move X23, [X31+72]
	171 Move X26, [X31+48]
	172 Move X25, [X31+56]
	173 Move X28, [X31+32]
	174 Move X27, [X31+40]
	175 Move X29, [X31+16]
	176 Move X30, [X31+24]
	177 Move D9, [X31+112]
	178 Move D8, [X31+120]
	179 Return X0
	180 Move X1, [X19+96]
	181 Move X0, X24
	182 Call Geom.VertEq, X0, X1
	183 Move TEMP, X0
	184 And TEMP, TEMP, 1
	185 Compare TEMP, 1
	186 JumpIfEqual {192}
	187 Move X1, [X19+96]
	188 Move X0, X24
	189 Move X2, X27
	190 Call Geom.EdgeSign, X0, X1, X2
	191 NotImplemented "Instruction FCMP not yet implemented."
	192 Move X1, [X19+96]
	193 Move X0, X23
	194 Call Geom.VertEq, X0, X1
	195 Move TEMP, X0
	196 And TEMP, TEMP, 1
	197 Compare TEMP, 1
	198 JumpIfEqual {204}
	199 Move X1, [X19+96]
	200 Move X0, X23
	201 Move X2, X27
	202 Call Geom.EdgeSign, X0, X1, X2
	203 NotImplemented "Instruction FCMP not yet implemented."
	204 Move X8, [X19+16]
	205 Compare X8, 0
	206 JumpIfEqual {406}
	207 Move X1, [X22+40]
	208 Call Mesh.SplitEdge, X0, X1
	209 Move X8, [X19+16]
	210 Compare X8, 0
	211 JumpIfEqual {406}
	212 Move X1, [X29+40]
	213 Call Mesh.SplitEdge, X0, X1
	214 Move X8, [X29+40]
	215 Compare X8, 0
	216 JumpIfEqual {406}
	217 Move X9, [X19+16]
	218 Compare X9, 0
	219 JumpIfEqual {406}
	220 Move X1, [X8+56]
	221 Move X2, X22
	222 Call Mesh.Splice, X0, X1, X2
	223 Compare X27, 0
	224 JumpIfEqual {406}
	225 Move X28, [X22+64]
	226 Compare X28, 0
	227 JumpIfEqual {406}
	228 NotImplemented "Instruction LDUR not yet implemented."
	229 Move [X28+52], D0
	230 Move X0, [X19+88]
	231 Compare X0, 0
	232 JumpIfEqual {406}
	233 Move X8, 0x6BF000
	234 Move X8, [X8+1664]
	235 Move X1, X28
	236 Move X2, [X8]
	237 Call 0x24B5764, X0, X1
	238 Move [X28+60], W0
	239 Move X8, [X22+64]
	240 Compare X8, 0
	241 JumpIfEqual {406}
	242 Move X28, 0x6BF000
	243 Move X28, [X28+1624]
	244 Move W27, [X8+60]
	245 Move X0, [X28]
	246 Move W9, [X0+224]
	247 Compare W9, 0
	248 JumpIfNotEqual {251}
	249 Call 0x1C17DFC
	250 Move X0, [X28]
	251 Move X8, [X0+184]
	252 Move W8, [X8]
	253 NotImplemented "Instruction CMP not yet implemented."
	254 Move X1, [X22+64]
	255 Move X0, X19
	256 Move X2, X26
	257 Move X3, X24
	258 Move X4, X25
	259 Move X5, X23
	260 Call Tess.GetIntersectData, X0, X1, X2, X3, X4, X5
	261 Move X1, X20
	262 Call Tess.RegionAbove, X0, X1
	263 Move W8, 1
	264 Move [X21+38], W8
	265 Move [X20+38], W8
	266 Compare X0, 0
	267 JumpIfEqual {406}
	268 Move W22, W31
	269 Move [X0+38], W8
	270 Move X1, [X19+96]
	271 NotImplemented "Instruction CMP not yet implemented."
	272 NotImplemented "Instruction CMP not yet implemented."
	273 Move X0, X24
	274 Move X2, X27
	275 Call Geom.EdgeSign, X0, X1, X2
	276 NotImplemented "Instruction FCMP not yet implemented."
	277 Move X1, [X19+96]
	278 Move X8, [X19+16]
	279 Compare X8, 0
	280 JumpIfEqual {406}
	281 Move X1, [X22+40]
	282 Call Mesh.SplitEdge, X0, X1
	283 Move X8, [X19+16]
	284 Compare X8, 0
	285 JumpIfEqual {406}
	286 Move X1, [X29+40]
	287 Move X2, X22
	288 Call Mesh.Splice, X0, X1, X2
	289 Move X0, X19
	290 Move X1, X20
	291 Call Tess.TopLeftRegion, X0, X1
	292 Move X1, X0
	293 Move X20, X0
	294 Call Tess.RegionBelow, X0, X1
	295 Compare X0, 0
	296 JumpIfEqual {406}
	297 Move X23, [X0+16]
	298 Move X1, X20
	299 Call Tess.RegionBelow, X0, X1
	300 Move X1, X0
	301 Move X0, X19
	302 Move X2, X21
	303 Call Tess.FinishLeftRegions, X0, X1, X2
	304 Compare X23, 0
	305 JumpIfEqual {406}
	306 Move X8, [X23+40]
	307 Compare X8, 0
	308 JumpIfEqual {406}
	309 Move X2, [X8+56]
	310 Move W5, 1
	311 Move W22, 1
	312 Move X0, X19
	313 Move X1, X20
	314 Move X3, X23
	315 Move X8, [X19+16]
	316 Compare X8, 0
	317 JumpIfEqual {406}
	318 Move X1, [X29+40]
	319 Call Mesh.SplitEdge, X0, X1
	320 Move X8, [X29+40]
	321 Compare X8, 0
	322 JumpIfEqual {406}
	323 Move X9, [X19+16]
	324 Compare X9, 0
	325 JumpIfEqual {406}
	326 Move X1, [X22+56]
	327 Move X2, [X8+56]
	328 Call Mesh.Splice, X0, X1, X2
	329 Move X1, X20
	330 Call Tess.TopRightRegion, X0, X1
	331 Move X1, X0
	332 Move X21, X0
	333 Call Tess.RegionBelow, X0, X1
	334 Compare X0, 0
	335 JumpIfEqual {406}
	336 Move X8, [X0+16]
	337 Compare X8, 0
	338 JumpIfEqual {406}
	339 Move X8, [X8+40]
	340 Compare X8, 0
	341 JumpIfEqual {406}
	342 Move X9, [X29+40]
	343 Compare X9, 0
	344 JumpIfEqual {406}
	345 Move X9, [X9+56]
	346 Move X23, [X8+48]
	347 Move X0, X19
	348 Move X1, X20
	349 Move X2, X31
	350 Move [X20+16], X9
	351 Call Tess.FinishLeftRegions, X0, X1, X2
	352 Compare X0, 0
	353 JumpIfEqual {406}
	354 Move X8, [X22+40]
	355 Compare X8, 0
	356 JumpIfEqual {406}
	357 Move X2, [X0+48]
	358 Move X3, [X8+48]
	359 Move W5, 1
	360 Move W22, 1
	361 Move X0, X19
	362 Move X1, X21
	363 Move X4, X23
	364 Call Tess.AddRightEdges, X0, X1, X2, X3, X4, X5
	365 Move X1, X20
	366 Call Tess.RegionAbove, X0, X1
	367 Move W8, 1
	368 Move [X20+38], W8
	369 Compare X0, 0
	370 JumpIfEqual {406}
	371 Move [X0+38], W8
	372 Move X8, [X19+16]
	373 Compare X8, 0
	374 JumpIfEqual {406}
	375 Move X1, [X22+40]
	376 Call Mesh.SplitEdge, X0, X1
	377 Move X1, [X19+96]
	378 Compare X1, 0
	379 JumpIfEqual {406}
	380 Move X8, [X22+64]
	381 Compare X8, 0
	382 JumpIfEqual {406}
	383 NotImplemented "Instruction LDUR not yet implemented."
	384 Move [X8+52], D0
	385 Move X0, X23
	386 Move X2, X27
	387 Call Geom.EdgeSign, X0, X1, X2
	388 NotImplemented "Instruction FCMP not yet implemented."
	389 Move W8, 1
	390 Move [X21+38], W8
	391 Move [X20+38], W8
	392 Move X8, [X19+16]
	393 Compare X8, 0
	394 JumpIfEqual {406}
	395 Move X1, [X29+40]
	396 Call Mesh.SplitEdge, X0, X1
	397 Move X8, [X19+96]
	398 Compare X8, 0
	399 JumpIfEqual {406}
	400 Move X9, [X29+64]
	401 Compare X9, 0
	402 JumpIfEqual {406}
	403 NotImplemented "Instruction LDUR not yet implemented."
	404 Move W22, W31
	405 Move [X9+52], D0
	406 Call 0x1C17F20
	407 Move X0, 0x65B000
	408 Move X0, [X0+1456]
	409 Call 0x1C17D08
	410 Call 0x1C17F10
	411 Move X19, X0
	412 Move X0, 0x6BF000
	413 Move X0, [X0+1672]
	414 Call 0x1C17D08
	415 Move X1, X0
	416 Move X0, X19
	417 Move X2, X31
	418 Call InvalidOperationException..ctor, X0, X1
	419 Move X0, 0x6BF000
	420 Move X0, [X0+1680]
	421 Call 0x1C17D08
	422 Move X1, X0
	423 Move X0, X19
	424 Call 0x1C17DEC

Method: System.Void WalkDirtyRegions(UnityEngine.Rendering.Universal.LibTessDotNet.Tess/ActiveRegion regUp)

Disassembly:
	0x03A987F0 CBZ X0, 0x3A98854
	0x03A987F4 LDR X21, [X0 + 0x10]
	0x03A987F8 MOV X1, X0
	0x03A987FC MOV X0, X19
	0x03A98800 MOV X2, X31
	0x03A98804 BL 0x3A9738C
	0x03A98808 CBZ X0, 0x3A98854
	0x03A9880C LDR X2, [X0 + 0x30]
	0x03A98810 MOV X8, X0
	0x03A98814 CMP X2, X21
	0x03A98818 B.EQ 0x3A9883C
	0x03A9881C MOV X0, X19
	0x03A98820 MOV X1, X20
	0x03A98824 LDP X20, X19, [X31 + 0x10]
	0x03A98828 MOVZ W5, 0x1
	0x03A9882C MOV X3, X21
	0x03A98830 MOV X4, X21
	0x03A98834 LDP X30, X21, [X31], #0x20
	0x03A98838 B 0x3A974A8
	0x03A9883C MOV X0, X19
	0x03A98840 MOV X1, X20
	0x03A98844 LDP X20, X19, [X31 + 0x10]
	0x03A98848 MOV X2, X8
	0x03A9884C LDP X30, X21, [X31], #0x20
	0x03A98850 B 0x3A984AC
	0x03A98854 BL 0x1C16F20
	0x03A98858 STP X30, X25, [X31 - 0x40]!
	0x03A9885C STP X24, X23, [X31 + 0x10]
	0x03A98860 STP X22, X21, [X31 + 0x20]
	0x03A98864 STP X20, X19, [X31 + 0x30]
	0x03A98868 ADRP X21, 0x94A000
	0x03A9886C ADRP X22, 0x6BF000
	0x03A98870 LDRB W8, [X21 + 0x3C2]
	0x03A98874 LDR X22, [X22 + 0x668]
	0x03A98878 MOV X20, X1
	0x03A9887C MOV X19, X0
	0x03A98880 TBNZ X8, 0x0, 0x3A988B0
	0x03A98884 ADRP X0, 0x6BF000
	0x03A98888 LDR X0, [X0 + 0x668]
	0x03A9888C BL 0x1C16CF4
	0x03A98890 ADRP X0, 0x6BF000
	0x03A98894 LDR X0, [X0 + 0x6A8]
	0x03A98898 BL 0x1C16CF4
	0x03A9889C ADRP X0, 0x6BF000
	0x03A988A0 LDR X0, [X0 + 0x6B0]
	0x03A988A4 BL 0x1C16CF4
	0x03A988A8 MOVZ W8, 0x1
	0x03A988AC STRB W8, [X21 + 0x3C2]
	0x03A988B0 LDR X0, [X22]
	0x03A988B4 BL 0x1C16F10
	0x03A988B8 MOV X1, X31
	0x03A988BC MOV X21, X0
	0x03A988C0 BL 0x3A9A9F8
	0x03A988C4 CBZ X20, 0x3A98A70
	0x03A988C8 LDR X8, [X20 + 0x20]
	0x03A988CC CBZ X8, 0x3A98A70
	0x03A988D0 CBZ X21, 0x3A98A70
	0x03A988D4 LDR X8, [X8 + 0x28]
	0x03A988D8 STR X8, [X21 + 0x10]
	0x03A988DC LDR X0, [X19 + 0x50]
	0x03A988E0 CBZ X0, 0x3A98A70
	0x03A988E4 ADRP X8, 0x6BF000
	0x03A988E8 LDR X8, [X8 + 0x6A8]
	0x03A988EC MOV X1, X21
	0x03A988F0 LDR X2, [X8]
	0x03A988F4 BL 0x29B5274
	0x03A988F8 CBZ X0, 0x3A98A70
	0x03A988FC LDR X21, [X0 + 0x10]
	0x03A98900 MOV X1, X21
	0x03A98904 BL 0x3A96F54
	0x03A98908 CBZ X0, 0x3A98960
	0x03A9890C CBZ X21, 0x3A98A70
	0x03A98910 LDR X24, [X21 + 0x10]
	0x03A98914 CBZ X24, 0x3A98A70
	0x03A98918 LDR X8, [X24 + 0x28]
	0x03A9891C CBZ X8, 0x3A98A70
	0x03A98920 MOV X22, X0
	0x03A98924 LDR X23, [X0 + 0x10]
	0x03A98928 LDR X0, [X8 + 0x40]
	0x03A9892C LDR X2, [X24 + 0x40]
	0x03A98930 MOV X1, X20
	0x03A98934 BL 0x3A95410
	0x03A98938 FCMP S0, 0x0
	0x03A9893C B.NE 0x3A98974
	0x03A98940 MOV X0, X19
	0x03A98944 MOV X1, X21
	0x03A98948 MOV X2, X20
	0x03A9894C LDP X20, X19, [X31 + 0x30]
	0x03A98950 LDP X22, X21, [X31 + 0x20]
	0x03A98954 LDP X24, X23, [X31 + 0x10]
	0x03A98958 LDP X30, X25, [X31], #0x40
	0x03A9895C B 0x3A986A0
	0x03A98960 LDP X20, X19, [X31 + 0x30]
	0x03A98964 LDP X22, X21, [X31 + 0x20]
	0x03A98968 LDP X24, X23, [X31 + 0x10]
	0x03A9896C LDP X30, X25, [X31], #0x40
	0x03A98970 RET
	0x03A98974 CBZ X23, 0x3A98A70
	0x03A98978 LDR X8, [X23 + 0x28]
	0x03A9897C CBZ X8, 0x3A98A70
	0x03A98980 LDR X9, [X24 + 0x28]
	0x03A98984 CBZ X9, 0x3A98A70
	0x03A98988 LDR X0, [X8 + 0x40]
	0x03A9898C LDR X1, [X9 + 0x40]
	0x03A98990 BL 0x3A95354
	0x03A98994 LDRB W8, [X21 + 0x24]
	0x03A98998 ANDS W31, W0, 0x1
	0x03A9899C CSEL X22, X21, X22, NE
	0x03A989A0 CBNZ W8, 0x3A989AC
	0x03A989A4 LDRB W8, [X22 + 0x27]
	0x03A989A8 CBZ W8, 0x3A98A44
	0x03A989AC LDR X25, [X19 + 0x10]
	0x03A989B0 CMP X22, X21
	0x03A989B4 B.EQ 0x3A989DC
	0x03A989B8 MOV X0, X23
	0x03A989BC BL 0x3A96E1C
	0x03A989C0 CBZ X25, 0x3A98A70
	0x03A989C4 LDR X2, [X20 + 0x20]
	0x03A989C8 MOV X1, X0
	0x03A989CC BL 0x3A96424
	0x03A989D0 CBZ X0, 0x3A98A70
	0x03A989D4 LDR X2, [X0 + 0x28]
	0x03A989D8 B 0x3A989F8
	0x03A989DC LDR X8, [X20 + 0x20]
	0x03A989E0 CBZ X8, 0x3A98A70
	0x03A989E4 CBZ X25, 0x3A98A70
	0x03A989E8 LDR X2, [X24 + 0x38]
	0x03A989EC LDR X1, [X8 + 0x28]
	0x03A989F0 BL 0x3A96424
	0x03A989F4 MOV X2, X0
	0x03A989F8 LDRB W8, [X22 + 0x27]
	0x03A989FC CBZ W8, 0x3A98A10
	0x03A98A00 MOV X0, X19
	0x03A98A04 MOV X1, X22
	0x03A98A08 BL 0x3A97108
	0x03A98A0C B 0x3A98A28
	0x03A98A10 MOV X0, X19
	0x03A98A14 MOV X1, X21
	0x03A98A18 BL 0x3A97250
	0x03A98A1C MOV X1, X0

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X22, X1
	009 Move X19, X0
	010 Call Tess.RegionBelow, X0, X1
	011 Compare X0, 0
	012 JumpIfEqual {167}
	013 Move X20, X0
	014 Move W8, [X20+38]
	015 Compare W8, 0
	016 JumpIfEqual {20}
	017 Move X1, X20
	018 Call Tess.RegionBelow, X0, X1
	019 Move X21, X0
	020 Compare X22, 0
	021 JumpIfEqual {167}
	022 Move W8, [X22+38]
	023 Compare W8, 0
	024 JumpIfEqual {27}
	025 Move X21, X20
	026 Move X20, X22
	027 Move X1, X22
	028 Call Tess.RegionAbove, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {159}
	031 Move W8, [X0+38]
	032 Move X20, X0
	033 Move X21, X22
	034 Compare W8, 0
	035 JumpIfEqual {159}
	036 Move X22, [X20+16]
	037 Move [X20+38], W31
	038 Compare X22, 0
	039 JumpIfEqual {167}
	040 Move X8, [X22+40]
	041 Compare X8, 0
	042 JumpIfEqual {167}
	043 Move X23, [X21+16]
	044 Compare X23, 0
	045 JumpIfEqual {167}
	046 Move X9, [X23+40]
	047 Compare X9, 0
	048 JumpIfEqual {167}
	049 Move X8, [X8+64]
	050 Move X9, [X9+64]
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Move X0, X19
	053 Move X1, X20
	054 Call Tess.CheckForLeftSplice, X0, X1
	055 Move TEMP, X0
	056 And TEMP, TEMP, 1
	057 Compare TEMP, 1
	058 JumpIfNotEqual {97}
	059 Move W8, [X21+39]
	060 Compare W8, 0
	061 JumpIfEqual {78}
	062 Move X0, X19
	063 Move X1, X21
	064 Call Tess.DeleteRegion, X0, X1
	065 Move X8, [X19+16]
	066 Compare X8, 0
	067 JumpIfEqual {167}
	068 Move X1, X23
	069 Call Mesh.Delete, X0, X1
	070 Move X1, X20
	071 Call Tess.RegionBelow, X0, X1
	072 Compare X0, 0
	073 JumpIfEqual {167}
	074 Move X23, [X0+16]
	075 Move X21, X0
	076 Compare X23, 0
	077 JumpIfNotEqual {97}
	078 Move W8, [X20+39]
	079 Compare W8, 0
	080 JumpIfEqual {97}
	081 Move X0, X19
	082 Move X1, X20
	083 Call Tess.DeleteRegion, X0, X1
	084 Move X8, [X19+16]
	085 Compare X8, 0
	086 JumpIfEqual {167}
	087 Move X1, X22
	088 Call Mesh.Delete, X0, X1
	089 Move X1, X21
	090 Call Tess.RegionAbove, X0, X1
	091 Compare X0, 0
	092 JumpIfEqual {167}
	093 Move X22, [X0+16]
	094 Move X20, X0
	095 Compare X22, 0
	096 JumpIfEqual {167}
	097 Add X24, X22, 64
	098 Move X8, [X24]
	099 Move X9, [X23+64]
	100 NotImplemented "Instruction CMP not yet implemented."
	101 Move X8, [X22+40]
	102 Compare X8, 0
	103 JumpIfEqual {167}
	104 Move X10, [X23+40]
	105 Compare X10, 0
	106 JumpIfEqual {167}
	107 Move X9, [X8+64]
	108 Move X8, [X10+64]
	109 NotImplemented "Instruction CMP not yet implemented."
	110 Move W10, [X20+39]
	111 Compare W10, 0
	112 JumpIfNotEqual {119}
	113 Move W10, [X21+39]
	114 Compare W10, 0
	115 JumpIfNotEqual {119}
	116 Move X10, [X19+96]
	117 NotImplemented "Instruction CMP not yet implemented."
	118 NotImplemented "Instruction CMP not yet implemented."
	119 Move X0, X19
	120 Move X1, X20
	121 Call Tess.CheckForRightSplice, X0, X1
	122 Move X8, [X24]
	123 Move X9, [X23+64]
	124 NotImplemented "Instruction CMP not yet implemented."
	125 Move X8, [X22+40]
	126 Compare X8, 0
	127 JumpIfEqual {167}
	128 Move X9, [X23+40]
	129 Compare X9, 0
	130 JumpIfEqual {167}
	131 Move X8, [X8+64]
	132 Move X9, [X9+64]
	133 NotImplemented "Instruction CMP not yet implemented."
	134 Move X0, X23
	135 Move X1, X22
	136 Call Geom.AddWinding, X0, X1
	137 Move X0, X19
	138 Move X1, X20
	139 Call Tess.DeleteRegion, X0, X1
	140 Move X8, [X19+16]
	141 Compare X8, 0
	142 JumpIfEqual {167}
	143 Move X1, X22
	144 Call Mesh.Delete, X0, X1
	145 Move X1, X21
	146 Call Tess.RegionAbove, X0, X1
	147 Move X20, X0
	148 Move X22, X20
	149 Move X20, X21
	150 Compare X21, 0
	151 JumpIfNotEqual {14}
	152 Move X0, X19
	153 Move X1, X20
	154 Call Tess.CheckForIntersect, X0, X1
	155 Move TEMP, X0
	156 And TEMP, TEMP, 1
	157 Compare TEMP, 1
	158 JumpIfNotEqual {122}
	159 Move X20, [X31+48]
	160 Move X19, [X31+56]
	161 Move X22, [X31+32]
	162 Move X21, [X31+40]
	163 Move X24, [X31+16]
	164 Move X23, [X31+24]
	165 Move X30, [X31+64]
	166 Return 
	167 Call 0x1C17F20

Method: System.Void ConnectRightVertex(UnityEngine.Rendering.Universal.LibTessDotNet.Tess/ActiveRegion regUp, UnityEngine.Rendering.Universal.LibTessDotNet.MeshUtils/Edge eBottomLeft)

Disassembly:
	0x03A994AC CBZ X23, 0x3A99810
	0x03A994B0 LDR W8, [X21 + 0x18]
	0x03A994B4 CBZ W8, 0x3A9988C
	0x03A994B8 LDR V0, [X23 + 0x28]
	0x03A994BC LDR V1, [X21 + 0x20]
	0x03A994C0 FCMP S0, S1
	0x03A994C4 B.PL 0x3A994F0
	0x03A994C8 STR S0, [X21 + 0x20]
	0x03A994CC LDR X8, [X22]
	0x03A994D0 MOV X0, X23
	0x03A994D4 LDR X1, [X8 + 0x40]
	0x03A994D8 BL 0x1C16E00
	0x03A994DC CBZ X0, 0x3A99890
	0x03A994E0 LDR W8, [X22 + 0x18]
	0x03A994E4 CBZ W8, 0x3A9988C
	0x03A994E8 STR X23, [X22 + 0x20]
	0x03A994EC LDR W8, [X21 + 0x18]
	0x03A994F0 CMP W8, 0x1
	0x03A994F4 B.LS 0x3A9988C
	0x03A994F8 LDR V0, [X23 + 0x2C]
	0x03A994FC LDR V1, [X21 + 0x24]
	0x03A99500 FCMP S0, S1
	0x03A99504 B.PL 0x3A99534
	0x03A99508 STR S0, [X21 + 0x24]
	0x03A9950C LDR X8, [X22]
	0x03A99510 MOV X0, X23
	0x03A99514 LDR X1, [X8 + 0x40]
	0x03A99518 BL 0x1C16E00
	0x03A9951C CBZ X0, 0x3A99890
	0x03A99520 LDR W8, [X22 + 0x18]
	0x03A99524 CMP W8, 0x1
	0x03A99528 B.LS 0x3A9988C
	0x03A9952C STR X23, [X22 + 0x28]
	0x03A99530 LDR W8, [X21 + 0x18]
	0x03A99534 CMP W8, 0x2
	0x03A99538 B.LS 0x3A9988C
	0x03A9953C LDR V0, [X23 + 0x30]
	0x03A99540 LDR V1, [X21 + 0x28]
	0x03A99544 FCMP S0, S1
	0x03A99548 B.PL 0x3A99574
	0x03A9954C STR S0, [X21 + 0x28]
	0x03A99550 LDR X8, [X22]
	0x03A99554 MOV X0, X23
	0x03A99558 LDR X1, [X8 + 0x40]
	0x03A9955C BL 0x1C16E00
	0x03A99560 CBZ X0, 0x3A99890
	0x03A99564 LDR W8, [X22 + 0x18]
	0x03A99568 CMP W8, 0x2
	0x03A9956C B.LS 0x3A9988C
	0x03A99570 STR X23, [X22 + 0x30]
	0x03A99574 LDR W8, [X24 + 0x18]
	0x03A99578 CBZ W8, 0x3A9988C
	0x03A9957C LDR V0, [X23 + 0x28]
	0x03A99580 LDR V1, [X24 + 0x20]
	0x03A99584 FCMP S0, S1
	0x03A99588 B.LE 0x3A995B4
	0x03A9958C STR S0, [X24 + 0x20]
	0x03A99590 LDR X8, [X25]
	0x03A99594 MOV X0, X23
	0x03A99598 LDR X1, [X8 + 0x40]
	0x03A9959C BL 0x1C16E00
	0x03A995A0 CBZ X0, 0x3A99890
	0x03A995A4 LDR W8, [X25 + 0x18]
	0x03A995A8 CBZ W8, 0x3A9988C
	0x03A995AC STR X23, [X25 + 0x20]
	0x03A995B0 LDR W8, [X24 + 0x18]
	0x03A995B4 CMP W8, 0x1
	0x03A995B8 B.LS 0x3A9988C
	0x03A995BC LDR V0, [X23 + 0x2C]
	0x03A995C0 LDR V1, [X24 + 0x24]
	0x03A995C4 FCMP S0, S1
	0x03A995C8 B.LE 0x3A995F8
	0x03A995CC STR S0, [X24 + 0x24]
	0x03A995D0 LDR X8, [X25]
	0x03A995D4 MOV X0, X23
	0x03A995D8 LDR X1, [X8 + 0x40]
	0x03A995DC BL 0x1C16E00
	0x03A995E0 CBZ X0, 0x3A99890
	0x03A995E4 LDR W8, [X25 + 0x18]
	0x03A995E8 CMP W8, 0x1
	0x03A995EC B.LS 0x3A9988C
	0x03A995F0 STR X23, [X25 + 0x28]
	0x03A995F4 LDR W8, [X24 + 0x18]
	0x03A995F8 CMP W8, 0x2
	0x03A995FC B.LS 0x3A9988C
	0x03A99600 LDR V0, [X23 + 0x30]
	0x03A99604 LDR V1, [X24 + 0x28]
	0x03A99608 FCMP S0, S1
	0x03A9960C B.LE 0x3A99638
	0x03A99610 STR S0, [X24 + 0x28]
	0x03A99614 LDR X8, [X25]
	0x03A99618 MOV X0, X23
	0x03A9961C LDR X1, [X8 + 0x40]
	0x03A99620 BL 0x1C16E00
	0x03A99624 CBZ X0, 0x3A99890
	0x03A99628 LDR W8, [X25 + 0x18]
	0x03A9962C CMP W8, 0x2
	0x03A99630 B.LS 0x3A9988C
	0x03A99634 STR X23, [X25 + 0x30]
	0x03A99638 LDR X8, [X20 + 0x10]
	0x03A9963C LDR X23, [X23 + 0x18]
	0x03A99640 CBNZ X8, 0x3A994A0
	0x03A99644 B 0x3A99810
	0x03A99648 LDR W9, [X24 + 0x18]
	0x03A9964C CMP W9, 0x1
	0x03A99650 B.LS 0x3A9988C
	0x03A99654 LDR W10, [X21 + 0x18]
	0x03A99658 CMP W10, 0x1
	0x03A9965C B.LS 0x3A9988C
	0x03A99660 CMP W9, 0x2
	0x03A99664 B.LS 0x3A9988C
	0x03A99668 CMP W10, 0x2
	0x03A9966C B.LS 0x3A9988C
	0x03A99670 LDR V0, [X24 + 0x20]
	0x03A99674 LDR V1, [X21 + 0x20]
	0x03A99678 FSUB V0.2S, V0.2S, V1.2S
	0x03A9967C UNIMPLEMENTED
	0x00000000 INVALID
	0x03A99684 FMOV W11, S0
	0x03A99688 AND W11, W11, 0x1
	0x03A9968C CMP W11, W9
	0x03A99690 B.CS 0x3A9988C
	0x03A99694 CMP W11, W10
	0x03A99698 B.CS 0x3A9988C
	0x03A9969C MOV W12, W11

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Compare X2, 0
	011 JumpIfEqual {169}
	012 Move X23, [X2+48]
	013 Move X21, X2
	014 Move X20, X1
	015 Move X19, X0
	016 Call Tess.RegionBelow, X0, X1
	017 Compare X20, 0
	018 JumpIfEqual {169}
	019 Move X24, X0
	020 Compare X0, 0
	021 JumpIfEqual {169}
	022 Move X22, [X20+16]
	023 Compare X22, 0
	024 JumpIfEqual {169}
	025 Move X8, [X22+40]
	026 Compare X8, 0
	027 JumpIfEqual {169}
	028 Move X26, [X24+16]
	029 Compare X26, 0
	030 JumpIfEqual {169}
	031 Move X9, [X26+40]
	032 Compare X9, 0
	033 JumpIfEqual {169}
	034 Move X8, [X8+64]
	035 Move X9, [X9+64]
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Move X0, X19
	038 Move X1, X20
	039 Call Tess.CheckForIntersect, X0, X1
	040 Move X0, [X22+64]
	041 Move X1, [X19+96]
	042 Call Geom.VertEq, X0, X1
	043 Move W25, W0
	044 Move TEMP, X0
	045 And TEMP, TEMP, 1
	046 Compare TEMP, 1
	047 JumpIfNotEqual {74}
	048 Compare X23, 0
	049 JumpIfEqual {169}
	050 Move X8, [X23+40]
	051 Compare X8, 0
	052 JumpIfEqual {169}
	053 Move X9, [X19+16]
	054 Compare X9, 0
	055 JumpIfEqual {169}
	056 Move X1, [X8+56]
	057 Move X2, X22
	058 Call Mesh.Splice, X0, X1, X2
	059 Move X0, X19
	060 Move X1, X20
	061 Call Tess.TopLeftRegion, X0, X1
	062 Move X1, X0
	063 Move X20, X0
	064 Call Tess.RegionBelow, X0, X1
	065 Compare X0, 0
	066 JumpIfEqual {169}
	067 Move X23, [X0+16]
	068 Move X1, X20
	069 Call Tess.RegionBelow, X0, X1
	070 Move X1, X0
	071 Move X0, X19
	072 Move X2, X24
	073 Call Tess.FinishLeftRegions, X0, X1, X2
	074 Move X0, [X26+64]
	075 Move X1, [X19+96]
	076 Call Geom.VertEq, X0, X1
	077 Move TEMP, X0
	078 And TEMP, TEMP, 1
	079 Compare TEMP, 1
	080 JumpIfNotEqual {97}
	081 Move X8, [X26+40]
	082 Compare X8, 0
	083 JumpIfEqual {169}
	084 Move X9, [X19+16]
	085 Compare X9, 0
	086 JumpIfEqual {169}
	087 Move X2, [X8+56]
	088 Move X1, X21
	089 Call Mesh.Splice, X0, X1, X2
	090 Move X0, X19
	091 Move X1, X24
	092 Move X2, X31
	093 Call Tess.FinishLeftRegions, X0, X1, X2
	094 Move X21, X0
	095 Compare X0, 0
	096 JumpIfNotEqual {101}
	097 Move TEMP, X25
	098 And TEMP, TEMP, 1
	099 Compare TEMP, 1
	100 JumpIfNotEqual {118}
	101 Move X2, [X21+48]
	102 Move X0, X19
	103 Move X1, X20
	104 Move X3, X23
	105 Move X4, X23
	106 Move X20, [X31+64]
	107 Move X19, [X31+72]
	108 Move X22, [X31+48]
	109 Move X21, [X31+56]
	110 Move X24, [X31+32]
	111 Move X23, [X31+40]
	112 Move X26, [X31+16]
	113 Move X25, [X31+24]
	114 Move W5, 1
	115 Move X30, [X31+80]
	116 Call Tess.AddRightEdges, X0, X1, X2, X3, X4, X5
	117 Return 
	118 Move X0, [X26+64]
	119 Move X1, [X22+64]
	120 Call Geom.VertLeq, X0, X1
	121 Move TEMP, X0
	122 And TEMP, TEMP, 1
	123 Compare TEMP, 1
	124 JumpIfNotEqual {129}
	125 Move X8, [X26+40]
	126 Compare X8, 0
	127 JumpIfEqual {169}
	128 Move X22, [X8+56]
	129 Move X8, [X21+48]
	130 Compare X8, 0
	131 JumpIfEqual {169}
	132 Move X9, [X19+16]
	133 Compare X9, 0
	134 JumpIfEqual {169}
	135 Move X1, [X8+40]
	136 Move X2, X22
	137 Call Mesh.Connect, X0, X1, X2
	138 Compare X0, 0
	139 JumpIfEqual {169}
	140 Move X3, [X0+48]
	141 Move X21, X0
	142 Move X0, X19
	143 Move X1, X20
	144 Move X2, X21
	145 Move X4, X3
	146 Move W5, W31
	147 Call Tess.AddRightEdges, X0, X1, X2, X3, X4, X5
	148 Move X8, [X21+40]
	149 Compare X8, 0
	150 JumpIfEqual {169}
	151 Move X8, [X8+80]
	152 Compare X8, 0
	153 JumpIfEqual {169}
	154 Move X0, X19
	155 Move X1, X20
	156 Move X20, [X31+64]
	157 Move X19, [X31+72]
	158 Move X22, [X31+48]
	159 Move X21, [X31+56]
	160 Move X24, [X31+32]
	161 Move X23, [X31+40]
	162 Move X26, [X31+16]
	163 Move X25, [X31+24]
	164 Move W9, 1
	165 Move [X8+39], W9
	166 Move X30, [X31+80]
	167 Call Tess.WalkDirtyRegions, X0, X1
	168 Return 
	169 Call 0x1C17F20

Method: System.Void ConnectLeftDegenerate(UnityEngine.Rendering.Universal.LibTessDotNet.Tess/ActiveRegion regUp, UnityEngine.Rendering.Universal.LibTessDotNet.MeshUtils/Vertex vEvent)

Disassembly:
	0x03A996A0 ADD X13, X24, X12, 0x2, LSL
	0x03A996A4 ADD X12, X21, X12, 0x2, LSL
	0x03A996A8 LDR V0, [X24 + 0x28]
	0x03A996AC LDR V1, [X21 + 0x28]
	0x03A996B0 LDR V2, [X13 + 0x20]
	0x03A996B4 LDR V3, [X12 + 0x20]
	0x03A996B8 MOVZ W12, 0x2
	0x03A996BC FSUB S0, S0, S1
	0x03A996C0 FSUB S1, S2, S3
	0x03A996C4 FCMP S0, S1
	0x03A996C8 CSEL W11, W12, W11, GT
	0x03A996CC CMP W11, W10
	0x03A996D0 B.CS 0x3A9988C
	0x03A996D4 CMP W11, W9
	0x03A996D8 B.CS 0x3A9988C
	0x03A996DC ADD X9, X21, X11, 0x2, LSL
	0x03A996E0 ADD X10, X24, X11, 0x2, LSL
	0x03A996E4 LDR V0, [X9 + 0x20]
	0x03A996E8 LDR V1, [X10 + 0x20]
	0x03A996EC FCMP S0, S1
	0x03A996F0 B.GE 0x3A99814
	0x03A996F4 LDR W9, [X22 + 0x18]
	0x03A996F8 CMP W11, W9
	0x03A996FC B.CS 0x3A9988C
	0x03A99700 LDR W9, [X25 + 0x18]
	0x03A99704 CMP W11, W9
	0x03A99708 B.CS 0x3A9988C
	0x03A9970C ADD X9, X22, X11, 0x3, LSL
	0x03A99710 LDR X23, [X9 + 0x20]
	0x03A99714 CBZ X23, 0x3A99810
	0x03A99718 ADD X9, X25, X11, 0x3, LSL
	0x03A9971C LDR X22, [X9 + 0x20]
	0x03A99720 CBZ X22, 0x3A99810
	0x03A99724 ADRP X21, 0x6BE000
	0x03A99728 LDR X21, [X21 + 0x638]
	0x03A9972C LDR X0, [X21]
	0x03A99730 LDR W9, [X0 + 0xE0]
	0x03A99734 CBNZ W9, 0x3A99740
	0x03A99738 BL 0x1C16DFC
	0x03A9973C LDR X8, [X20 + 0x10]
	0x03A99740 LDR V0, [X23 + 0x28]
	0x03A99744 LDR V1, [X22 + 0x28]
	0x03A99748 FSUB V6.2S, V0.2S, V1.2S
	0x03A9974C STR D6, [X31 + 0x10]
	0x03A99750 LDR V0, [X23 + 0x30]
	0x03A99754 LDR V1, [X22 + 0x30]
	0x03A99758 FSUB S8, S0, S1
	0x03A9975C STR S8, [X31 + 0x18]
	0x03A99760 CBZ X8, 0x3A99810
	0x03A99764 LDR X23, [X8 + 0x10]
	0x03A99768 CBZ X23, 0x3A99810
	0x03A9976C MOV S9, V6.S[1]
	0x03A99770 FMOV S10, W31
	0x03A99774 STR V6, [X31]
	0x03A99778 LDR X23, [X23 + 0x18]
	0x03A9977C LDR X8, [X8 + 0x10]
	0x03A99780 CMP X23, X8
	0x03A99784 B.EQ 0x3A99824
	0x03A99788 CBZ X23, 0x3A99810
	0x03A9978C LDR X0, [X21]
	0x03A99790 LDR W8, [X0 + 0xE0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Compare X1, 0
	007 JumpIfEqual {60}
	008 Move X21, [X1+16]
	009 Move X22, X1
	010 Compare X21, 0
	011 JumpIfEqual {60}
	012 Move X20, X0
	013 Move X0, [X21+64]
	014 Move X1, X2
	015 Move X19, X2
	016 Call Geom.VertEq, X0, X1
	017 Move TEMP, X0
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {61}
	021 Move X8, [X21+40]
	022 Compare X8, 0
	023 JumpIfEqual {60}
	024 Move X0, [X8+64]
	025 Move X1, X19
	026 Call Geom.VertEq, X0, X1
	027 Move TEMP, X0
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfEqual {61}
	031 Move X8, [X20+16]
	032 Compare X8, 0
	033 JumpIfEqual {60}
	034 Move X1, [X21+40]
	035 Call Mesh.SplitEdge, X0, X1
	036 Move W8, [X22+39]
	037 Compare W8, 0
	038 JumpIfEqual {45}
	039 Move X8, [X20+16]
	040 Compare X8, 0
	041 JumpIfEqual {60}
	042 Move X1, [X21+48]
	043 Call Mesh.Delete, X0, X1
	044 Move [X22+39], W31
	045 Compare X19, 0
	046 JumpIfEqual {60}
	047 Move X8, [X20+16]
	048 Compare X8, 0
	049 JumpIfEqual {60}
	050 Move X1, [X19+32]
	051 Move X2, X21
	052 Call Mesh.Splice, X0, X1, X2
	053 Move X0, X20
	054 Move X1, X19
	055 Move X20, [X31+32]
	056 Move X19, [X31+40]
	057 Move X22, [X31+16]
	058 Move X21, [X31+24]
	059 Move X30, [X31+48]
	060 Call 0x1C17F20
	061 Move X0, 0x65B000
	062 Move X0, [X0+1456]
	063 Call 0x1C17D08
	064 Call 0x1C17F10
	065 Move X19, X0
	066 Move X0, 0x6BF000
	067 Move X0, [X0+1688]
	068 Call 0x1C17D08
	069 Move X1, X0
	070 Move X0, X19
	071 Move X2, X31
	072 Call InvalidOperationException..ctor, X0, X1
	073 Move X0, 0x6BF000
	074 Move X0, [X0+1696]
	075 Call 0x1C17D08
	076 Move X1, X0
	077 Move X0, X19
	078 Call 0x1C17DEC

Method: System.Void ConnectLeftVertex(UnityEngine.Rendering.Universal.LibTessDotNet.MeshUtils/Vertex vEvent)

Disassembly:
	0x03A99858 BL 0x3A96A34
	0x03A9985C MOV W1, W0
	0x03A99860 FMOV S0, 1
	0x03A99864 MOV X0, X19
	0x03A99868 BL 0x3A968C8
	0x03A9986C LDP X20, X19, [X31 + 0x70]
	0x03A99870 LDP X22, X21, [X31 + 0x60]
	0x03A99874 LDP X24, X23, [X31 + 0x50]
	0x03A99878 LDP X30, X25, [X31 + 0x40]
	0x03A9987C LDP D9, D8, [X31 + 0x30]
	0x03A99880 LDR V10, [X31 + 0x20]
	0x03A99884 ADD X31, X31, 0x80
	0x03A99888 RET
	0x03A9988C BL 0x1C16F28
	0x03A99890 BL 0x1C16F44
	0x03A99894 MOV X1, X31
	0x03A99898 BL 0x1C16DEC
	0x03A9989C STR D8, [X31 - 0x20]!
	0x03A998A0 STR X30, [X31 + 0x8]
	0x03A998A4 STP X20, X19, [X31 + 0x10]
	0x03A998A8 ADRP X20, 0x949000
	0x03A998AC LDRB W8, [X20 + 0x3CA]
	0x03A998B0 MOV X19, X0
	0x03A998B4 TBNZ X8, 0x0, 0x3A998CC
	0x03A998B8 ADRP X0, 0x6BE000
	0x03A998BC LDR X0, [X0 + 0x638]
	0x03A998C0 BL 0x1C16CF4
	0x03A998C4 MOVZ W8, 0x1
	0x03A998C8 STRB W8, [X20 + 0x3CA]
	0x03A998CC LDR X8, [X19 + 0x10]
	0x03A998D0 CBZ X8, 0x3A99994
	0x03A998D4 LDR X20, [X8 + 0x18]
	0x03A998D8 CBZ X20, 0x3A99994
	0x03A998DC FMOV S8, W31
	0x03A998E0 LDR X20, [X20 + 0x18]
	0x03A998E4 LDR X9, [X8 + 0x18]
	0x03A998E8 CMP X20, X9
	0x03A998EC B.EQ 0x3A99920
	0x03A998F0 CBZ X20, 0x3A99994
	0x03A998F4 LDR X9, [X20 + 0x20]
	0x03A998F8 CBZ X9, 0x3A99994
	0x03A998FC LDR W9, [X9 + 0x58]
	0x03A99900 CMP W9, 0x1
	0x03A99904 B.LT 0x3A99918
	0x03A99908 MOV X0, X20
	0x03A9990C BL 0x3A96BF0
	0x03A99910 LDR X8, [X19 + 0x10]
	0x03A99914 FADD S8, S8, S0
	0x03A99918 CBNZ X8, 0x3A998E0
	0x03A9991C B 0x3A99994
	0x03A99920 FCMP S8, 0x0
	0x03A99924 B.PL 0x3A99984
	0x03A99928 LDR X8, [X8 + 0x10]
	0x03A9992C CBZ X8, 0x3A99994
	0x03A99930 LDR X9, [X8 + 0x18]
	0x03A99934 CMP X9, X8
	0x03A99938 B.EQ 0x3A99954
	0x03A9993C CBZ X9, 0x3A99994
	0x03A99940 LDR V0, [X9 + 0x38]
	0x03A99944 FNEG S0, S0
	0x03A99948 STR S0, [X9 + 0x38]
	0x03A9994C LDR X9, [X9 + 0x18]
	0x03A99950 B 0x3A99934
	0x03A99954 ADRP X8, 0x6BE000
	0x03A99958 LDR X8, [X8 + 0x638]
	0x03A9995C LDR X0, [X8]
	0x03A99960 LDR W8, [X0 + 0xE0]
	0x03A99964 CBNZ W8, 0x3A9996C
	0x03A99968 BL 0x1C16DFC
	0x03A9996C LDR V0, [X19 + 0x30]
	0x03A99970 LDR V1, [X19 + 0x38]
	0x03A99974 UNIMPLEMENTED
	0x03A99978 FNEG S1, S1
	0x03A9997C STR D0, [X19 + 0x30]
	0x03A99980 STR S1, [X19 + 0x38]
	0x03A99984 LDP X20, X19, [X31 + 0x10]
	0x03A99988 LDR X30, [X31 + 0x8]
	0x03A9998C LDR V8, [X31], #0x20
	0x03A99990 RET
	0x03A99994 BL 0x1C16F20
	0x03A99998 SUB X31, X31, 0x60
	0x03A9999C STR D8, [X31 + 0x10]
	0x03A999A0 STP X30, X25, [X31 + 0x20]
	0x03A999A4 STP X24, X23, [X31 + 0x30]
	0x03A999A8 STP X22, X21, [X31 + 0x40]
	0x03A999AC STP X20, X19, [X31 + 0x50]
	0x03A999B0 ADRP X20, 0x949000
	0x03A999B4 LDRB W8, [X20 + 0x3CB]
	0x03A999B8 MOV X19, X0
	0x03A999BC TBNZ X8, 0x0, 0x3A999D4
	0x03A999C0 ADRP X0, 0x6BE000
	0x03A999C4 LDR X0, [X0 + 0x638]
	0x03A999C8 BL 0x1C16CF4
	0x03A999CC MOVZ W8, 0x1
	0x03A999D0 STRB W8, [X20 + 0x3CB]
	0x03A999D4 MOV X20, X19
	0x03A999D8 LDR X8, [X20 + 0x18]!
	0x03A999DC ADRP X24, 0x6BE000
	0x03A999E0 LDR W9, [X20 + 0x8]
	0x03A999E4 STR X8, [X31]
	0x03A999E8 LDR V0, [X31]
	0x03A999EC LDR X24, [X24 + 0x638]
	0x03A999F0 STR W9, [X31 + 0x8]
	0x03A999F4 FCMP S0, 0x0
	0x03A999F8 B.NE 0x3A99A3C
	0x03A999FC LDR V0, [X31 + 0x4]
	0x03A99A00 MOV W25, W31
	0x03A99A04 FCMP S0, 0x0
	0x03A99A08 B.NE 0x3A99A40
	0x03A99A0C LDR V0, [X31 + 0x8]
	0x03A99A10 FCMP S0, 0x0
	0x03A99A14 B.NE 0x3A99A40
	0x03A99A18 ADD X1, X31, 0x0
	0x03A99A1C MOV X0, X19
	0x03A99A20 BL 0x3A9928C
	0x03A99A24 LDR W8, [X31 + 0x8]
	0x03A99A28 LDR X9, [X31]
	0x03A99A2C MOVZ W25, 0x1
	0x03A99A30 STR W8, [X20 + 0x8]
	0x03A99A34 STR X9, [X20]
	0x03A99A38 B 0x3A99A40
	0x03A99A3C MOV W25, W31
	0x03A99A40 LDR X0, [X24]
	0x03A99A44 LDR W8, [X0 + 0xE0]
	0x03A99A48 CBNZ W8, 0x3A99A50
	0x03A99A4C BL 0x1C16DFC
	0x03A99A50 ADD X0, X31, 0x0
	0x03A99A54 BL 0x3A96A34
	0x03A99A58 MOV W20, W0
	0x03A99A5C ADD X22, X19, 0x24
	0x03A99A60 FMOV S0, W31
	0x03A99A64 MOV X0, X22
	0x03A99A68 MOV W1, W20
	0x03A99A6C BL 0x3A968C8
	0x03A99A70 MOVZ W21, 0x5556

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X21, 0x94A000
	010 Move X22, 0x6BF000
	011 Move W8, [X21+962]
	012 Move X22, [X22+1640]
	013 Move X20, X1
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {30}
	019 Move X0, 0x6BF000
	020 Move X0, [X0+1640]
	021 Call 0x1C17CF4
	022 Move X0, 0x6BF000
	023 Move X0, [X0+1704]
	024 Call 0x1C17CF4
	025 Move X0, 0x6BF000
	026 Move X0, [X0+1712]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X21+962], W8
	030 Move X0, [X22]
	031 Call 0x1C17F10
	032 Move X1, X31
	033 Move X21, X0
	034 Call ActiveRegion..ctor, X0
	035 Compare X20, 0
	036 JumpIfEqual {176}
	037 Move X8, [X20+32]
	038 Compare X8, 0
	039 JumpIfEqual {176}
	040 Compare X21, 0
	041 JumpIfEqual {176}
	042 Move X8, [X8+40]
	043 Move [X21+16], X8
	044 Move X0, [X19+80]
	045 Compare X0, 0
	046 JumpIfEqual {176}
	047 Move X8, 0x6BF000
	048 Move X8, [X8+1704]
	049 Move X1, X21
	050 Move X2, [X8]
	051 Call 0x29B6274, X0, X1
	052 Compare X0, 0
	053 JumpIfEqual {176}
	054 Move X21, [X0+16]
	055 Move X1, X21
	056 Call Tess.RegionBelow, X0, X1
	057 Compare X0, 0
	058 JumpIfEqual {87}
	059 Compare X21, 0
	060 JumpIfEqual {176}
	061 Move X24, [X21+16]
	062 Compare X24, 0
	063 JumpIfEqual {176}
	064 Move X8, [X24+40]
	065 Compare X8, 0
	066 JumpIfEqual {176}
	067 Move X22, X0
	068 Move X23, [X0+16]
	069 Move X0, [X8+64]
	070 Move X2, [X24+64]
	071 Move X1, X20
	072 Call Geom.EdgeSign, X0, X1, X2
	073 NotImplemented "Instruction FCMP not yet implemented."
	074 Move X0, X19
	075 Move X1, X21
	076 Move X2, X20
	077 Move X20, [X31+48]
	078 Move X19, [X31+56]
	079 Move X22, [X31+32]
	080 Move X21, [X31+40]
	081 Move X24, [X31+16]
	082 Move X23, [X31+24]
	083 Move X30, [X31+64]
	084 Move X25, [X31+72]
	085 Call Tess.ConnectLeftDegenerate, X0, X1, X2
	086 Return 
	087 Move X20, [X31+48]
	088 Move X19, [X31+56]
	089 Move X22, [X31+32]
	090 Move X21, [X31+40]
	091 Move X24, [X31+16]
	092 Move X23, [X31+24]
	093 Move X30, [X31+64]
	094 Move X25, [X31+72]
	095 Return 
	096 Compare X23, 0
	097 JumpIfEqual {176}
	098 Move X8, [X23+40]
	099 Compare X8, 0
	100 JumpIfEqual {176}
	101 Move X9, [X24+40]
	102 Compare X9, 0
	103 JumpIfEqual {176}
	104 Move X0, [X8+64]
	105 Move X1, [X9+64]
	106 Call Geom.VertLeq, X0, X1
	107 Move W8, [X21+36]
	108 And W31, W0, 1
	109 NotImplemented "Instruction CSEL not yet implemented."
	110 Compare W8, 0
	111 JumpIfNotEqual {115}
	112 Move W8, [X22+39]
	113 Compare W8, 0
	114 JumpIfEqual {160}
	115 Move X25, [X19+16]
	116 NotImplemented "Instruction CMP not yet implemented."
	117 Move X0, X23
	118 Call Edge.get__Dnext, X0
	119 Compare X25, 0
	120 JumpIfEqual {176}
	121 Move X2, [X20+32]
	122 Move X1, X0
	123 Call Mesh.Connect, X0, X1, X2
	124 Compare X0, 0
	125 JumpIfEqual {176}
	126 Move X2, [X0+40]
	127 Move X8, [X20+32]
	128 Compare X8, 0
	129 JumpIfEqual {176}
	130 Compare X25, 0
	131 JumpIfEqual {176}
	132 Move X2, [X24+56]
	133 Move X1, [X8+40]
	134 Call Mesh.Connect, X0, X1, X2
	135 Move X2, X0
	136 Move W8, [X22+39]
	137 Compare W8, 0
	138 JumpIfEqual {142}
	139 Move X0, X19
	140 Move X1, X22
	141 Call Tess.FixUpperEdge, X0, X1, X2
	142 Move X0, X19
	143 Move X1, X21
	144 Call Tess.AddRegionBelow, X0, X1, X2
	145 Move X1, X0
	146 Move X0, X19
	147 Call Tess.ComputeWinding, X0, X1
	148 Move X0, X19
	149 Move X1, X20
	150 Move X20, [X31+48]
	151 Move X19, [X31+56]
	152 Move X22, [X31+32]
	153 Move X21, [X31+40]
	154 Move X24, [X31+16]
	155 Move X23, [X31+24]
	156 Move X30, [X31+64]
	157 Move X25, [X31+72]
	158 Call Tess.SweepEvent, X0, X1
	159 Return 
	160 Move X2, [X20+32]
	161 Move X0, X19
	162 Move X1, X21
	163 Move X20, [X31+48]
	164 Move X19, [X31+56]
	165 Move X22, [X31+32]
	166 Move X21, [X31+40]
	167 Move X24, [X31+16]
	168 Move X23, [X31+24]
	169 Move W5, 1
	170 Move X3, X2
	171 Move X4, X31
	172 Move X30, [X31+64]
	173 Move X25, [X31+72]
	174 Call Tess.AddRightEdges, X0, X1, X2, X3, X4, X5
	175 Return 
	176 Call 0x1C17F20

Method: System.Void SweepEvent(UnityEngine.Rendering.Universal.LibTessDotNet.MeshUtils/Vertex vEvent)

Disassembly:
	0x03A99794 CBNZ W8, 0x3A997A0
	0x03A99798 BL 0x1C16DFC
	0x03A9979C LDR V6, [X31]
	0x03A997A0 LDP S0, S1, [X23 + 0x28]
	0x03A997A4 LDP S2, S3, [X22 + 0x28]
	0x03A997A8 LDR V4, [X23 + 0x30]
	0x03A997AC LDR V5, [X22 + 0x30]
	0x03A997B0 FSUB S1, S1, S3
	0x03A997B4 FSUB S2, S0, S2
	0x03A997B8 FSUB S3, S4, S5
	0x03A997BC FMUL S0, S9, S3
	0x03A997C0 FMUL S4, S8, S1
	0x03A997C4 FSUB S0, S0, S4
	0x03A997C8 FMUL S4, S8, S2
	0x03A997CC FMUL S3, S6, S3
	0x03A997D0 FMUL S1, S6, S1
	0x03A997D4 FMUL S5, S9, S2
	0x03A997D8 FSUB S2, S4, S3
	0x03A997DC FSUB S1, S1, S5
	0x03A997E0 FMUL S3, S0, S0
	0x03A997E4 FMUL S4, S2, S2
	0x03A997E8 FADD S3, S3, S4
	0x03A997EC FMUL S4, S1, S1
	0x03A997F0 FADD S3, S4, S3
	0x03A997F4 FCMP S3, S10
	0x03A997F8 B.LE 0x3A99808
	0x03A997FC MOV V10.16B, V3.16B
	0x03A99800 STP S0, S2, [X19]
	0x03A99804 STR S1, [X19 + 0x8]
	0x03A99808 LDR X8, [X20 + 0x10]
	0x03A9980C CBNZ X8, 0x3A99778
	0x03A99810 BL 0x1C16F20
	0x03A99814 MOVZ W8, 0x3F800000
	0x03A99818 STR X31, [X19]
	0x03A9981C STR W8, [X19 + 0x8]
	0x03A99820 B 0x3A9986C
	0x03A99824 FCMP S10, 0x0
	0x03A99828 B.HI 0x3A9986C
	0x03A9982C LDR X0, [X21]
	0x03A99830 LDR W8, [X0 + 0xE0]
	0x03A99834 CBNZ W8, 0x3A99840
	0x03A99838 BL 0x1C16DFC
	0x03A9983C LDR X0, [X21]
	0x03A99840 LDR X8, [X0 + 0xB8]
	0x03A99844 ADD X0, X31, 0x10
	0x03A99848 LDR W9, [X8 + 0x8]
	0x03A9984C LDR X8, [X8]
	0x03A99850 STR W9, [X19 + 0x8]
	0x03A99854 STR X8, [X19]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move [X0+96], X1
	006 Compare X1, 0
	007 JumpIfEqual {61}
	008 Move X9, [X1+32]
	009 Move X19, X0
	010 Move X10, X9
	011 Compare X10, 0
	012 JumpIfEqual {61}
	013 Move X8, [X10+80]
	014 Compare X8, 0
	015 JumpIfNotEqual {23}
	016 Move X10, [X10+48]
	017 NotImplemented "Instruction CMP not yet implemented."
	018 Move X0, X19
	019 Move X20, [X31+16]
	020 Move X19, [X31+24]
	021 Move X30, [X31+32]
	022 Move X21, [X31+40]
	023 Move X0, X19
	024 Move X1, X8
	025 Call Tess.TopLeftRegion, X0, X1
	026 Move X1, X0
	027 Move X20, X0
	028 Call Tess.RegionBelow, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {61}
	031 Move X21, [X0+16]
	032 Move X1, X0
	033 Move X0, X19
	034 Move X2, X31
	035 Call Tess.FinishLeftRegions, X0, X1, X2
	036 Compare X0, 0
	037 JumpIfEqual {61}
	038 Move X2, [X0+48]
	039 Move X8, X0
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Move X0, X19
	042 Move X1, X20
	043 Move X20, [X31+16]
	044 Move X19, [X31+24]
	045 Move W5, 1
	046 Move X3, X21
	047 Move X4, X21
	048 Move X30, [X31+32]
	049 Move X21, [X31+40]
	050 Call Tess.AddRightEdges, X0, X1, X2, X3, X4, X5
	051 Return 
	052 Move X0, X19
	053 Move X1, X20
	054 Move X20, [X31+16]
	055 Move X19, [X31+24]
	056 Move X2, X8
	057 Move X30, [X31+32]
	058 Move X21, [X31+40]
	059 Call Tess.ConnectRightVertex, X0, X1, X2
	060 Return 
	061 Call 0x1C17F20

Method: System.Void AddSentinel(System.Single smin, System.Single smax, System.Single t)

Disassembly:
	0x03A99A74 ADD W8, W20, 0x1
	0x03A99A78 MOVK W21, 0x55550000
	0x03A99A7C SMADDL X9, X8, X21, X31
	0x03A99A80 UBFM X10, X9, 0x3F, 0x3F
	0x03A99A84 UBFM X9, X9, 0x20, 0x3F
	0x03A99A88 LDR V0, [X19 + 0x8C]
	0x03A99A8C ADD W9, W9, W10
	0x03A99A90 ADD W9, W9, W9, 0x1, LSL
	0x03A99A94 SUB W23, W8, W9
	0x03A99A98 MOV X0, X22
	0x03A99A9C MOV W1, W23
	0x03A99AA0 BL 0x3A968C8
	0x03A99AA4 ADD W8, W20, 0x2
	0x03A99AA8 SMADDL X9, X8, X21, X31
	0x03A99AAC UBFM X10, X9, 0x3F, 0x3F
	0x03A99AB0 UBFM X9, X9, 0x20, 0x3F
	0x03A99AB4 LDR V0, [X19 + 0x90]
	0x03A99AB8 ADD W9, W9, W10
	0x03A99ABC ADD W9, W9, W9, 0x1, LSL
	0x03A99AC0 SUB W21, W8, W9
	0x03A99AC4 MOV X0, X22
	0x03A99AC8 MOV W1, W21
	0x03A99ACC BL 0x3A968C8
	0x03A99AD0 ADD X22, X19, 0x30
	0x03A99AD4 FMOV S0, W31
	0x03A99AD8 MOV X0, X22
	0x03A99ADC MOV W1, W20
	0x03A99AE0 BL 0x3A968C8
	0x03A99AE4 ADD X0, X31, 0x0
	0x03A99AE8 MOV W1, W20
	0x03A99AEC BL 0x3A96864
	0x03A99AF0 LDR X0, [X24]
	0x03A99AF4 LDR V1, [X19 + 0x90]
	0x03A99AF8 FCMP S0, 0x0
	0x03A99AFC LDR W8, [X0 + 0xE0]
	0x03A99B00 FNEG S2, S1
	0x03A99B04 FCSEL S8, S2, S1, GT
	0x03A99B08 CBNZ W8, 0x3A99B10
	0x03A99B0C BL 0x1C16DFC
	0x03A99B10 MOV X0, X22
	0x03A99B14 MOV W1, W23
	0x03A99B18 MOV V0.16B, V8.16B
	0x03A99B1C BL 0x3A968C8
	0x03A99B20 ADD X0, X31, 0x0
	0x03A99B24 MOV W1, W20
	0x03A99B28 BL 0x3A96864
	0x03A99B2C LDR X0, [X24]
	0x03A99B30 LDR V1, [X19 + 0x8C]
	0x03A99B34 FCMP S0, 0x0
	0x03A99B38 LDR W8, [X0 + 0xE0]
	0x03A99B3C FNEG S2, S1
	0x03A99B40 FCSEL S8, S1, S2, GT
	0x03A99B44 CBNZ W8, 0x3A99B4C
	0x03A99B48 BL 0x1C16DFC
	0x03A99B4C MOV X0, X22
	0x03A99B50 MOV W1, W21
	0x03A99B54 MOV V0.16B, V8.16B
	0x03A99B58 BL 0x3A968C8
	0x03A99B5C LDR X8, [X19 + 0x10]
	0x03A99B60 CBZ X8, 0x3A99CA4
	0x03A99B64 LDR X20, [X8 + 0x10]

ISIL:
	001 Move [X31-64], D10
	002 Move [X31+16], D9
	003 Move [X31+24], D8
	004 Move [X31+32], X30
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0x94A000
	009 Move W8, [X20+963]
	010 Move V8, V2
	011 Move V10, V1
	012 Move V9, V0
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0x6BF000
	019 Move X0, [X0+1640]
	020 Call 0x1C17CF4
	021 Move X0, 0x6BF000
	022 Move X0, [X0+1720]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X20+963], W8
	026 Move X0, [X19+16]
	027 Compare X0, 0
	028 JumpIfEqual {79}
	029 Call Mesh.MakeEdge, X0
	030 Compare X0, 0
	031 JumpIfEqual {79}
	032 Move X8, [X0+64]
	033 Move X20, X0
	034 Compare X8, 0
	035 JumpIfEqual {79}
	036 Move [X8+52], S10
	037 Move [X8+60], S8
	038 Move X8, [X20+40]
	039 Compare X8, 0
	040 JumpIfEqual {79}
	041 Move X8, [X8+64]
	042 Compare X8, 0
	043 JumpIfEqual {79}
	044 Move X9, 0x6BF000
	045 Move X9, [X9+1640]
	046 Move [X8+52], S9
	047 Move [X8+60], S8
	048 Move [X19+96], X8
	049 Move X0, [X9]
	050 Call 0x1C17F10
	051 Move X1, X31
	052 Move X21, X0
	053 Call ActiveRegion..ctor, X0
	054 Compare X21, 0
	055 JumpIfEqual {79}
	056 Move W8, 1
	057 Move [X21+16], X20
	058 Move [X21+32], W31
	059 Move [X21+36], W31
	060 Move [X21+39], W31
	061 NotImplemented "Instruction STURH not yet implemented."
	062 Move X0, [X19+80]
	063 Compare X0, 0
	064 JumpIfEqual {79}
	065 Move X8, 0x6BF000
	066 Move X8, [X8+1720]
	067 Move X1, X21
	068 Move X2, [X8]
	069 Call 0x29B619C, X0, X1
	070 Move [X21+24], X0
	071 Move X20, [X31+48]
	072 Move X19, [X31+56]
	073 Move X30, [X31+32]
	074 Move X21, [X31+40]
	075 Move D9, [X31+16]
	076 Move D8, [X31+24]
	077 Move V10, [X31+64]
	078 Return 
	079 Call 0x1C17F20

Method: System.Void InitEdgeDict()

Disassembly:
	0x03A99B68 CBZ X20, 0x3A99CA4
	0x03A99B6C LDR X20, [X20 + 0x18]
	0x03A99B70 LDR X9, [X8 + 0x10]
	0x03A99B74 CMP X20, X9
	0x03A99B78 B.EQ 0x3A99BE4
	0x03A99B7C CBZ X20, 0x3A99CA4
	0x03A99B80 LDR X0, [X24]
	0x03A99B84 LDR W9, [X0 + 0xE0]
	0x03A99B88 CBNZ W9, 0x3A99B94
	0x03A99B8C BL 0x1C16DFC
	0x03A99B90 LDR X8, [X19 + 0x10]
	0x03A99B94 LDP S0, S1, [X20 + 0x28]
	0x03A99B98 LDP S2, S3, [X19 + 0x24]
	0x03A99B9C LDR V4, [X20 + 0x30]
	0x03A99BA0 LDR V5, [X19 + 0x2C]
	0x03A99BA4 FMUL S2, S0, S2
	0x03A99BA8 FMUL S3, S1, S3
	0x03A99BAC FMUL S5, S4, S5
	0x03A99BB0 FADD S2, S2, S3
	0x03A99BB4 FADD S2, S2, S5
	0x03A99BB8 STR S2, [X20 + 0x34]
	0x03A99BBC LDP S2, S3, [X19 + 0x30]
	0x03A99BC0 LDR V5, [X19 + 0x38]
	0x03A99BC4 FMUL S0, S0, S2
	0x03A99BC8 FMUL S1, S1, S3
	0x03A99BCC FADD S0, S0, S1
	0x03A99BD0 FMUL S1, S4, S5
	0x03A99BD4 FADD S0, S0, S1
	0x03A99BD8 STR S0, [X20 + 0x38]
	0x03A99BDC CBNZ X8, 0x3A99B6C
	0x03A99BE0 B 0x3A99CA4
	0x03A99BE4 CBZ W25, 0x3A99BF8
	0x03A99BE8 MOV X0, X19
	0x03A99BEC BL 0x3A9989C
	0x03A99BF0 LDR X8, [X19 + 0x10]
	0x03A99BF4 CBZ X8, 0x3A99CA4
	0x03A99BF8 LDR X8, [X8 + 0x10]
	0x03A99BFC CBZ X8, 0x3A99CA4
	0x03A99C00 LDR X9, [X8 + 0x18]
	0x03A99C04 CMP X9, X8
	0x03A99C08 B.EQ 0x3A99C88
	0x03A99C0C MOVZ W10, 0x1
	0x03A99C10 CBZ X9, 0x3A99CA4
	0x03A99C14 LDR V0, [X9 + 0x34]
	0x03A99C18 TBZ X10, 0x0, 0x3A99C34
	0x03A99C1C STR S0, [X19 + 0x44]
	0x03A99C20 STR S0, [X19 + 0x3C]
	0x03A99C24 LDR V0, [X9 + 0x38]
	0x03A99C28 STR S0, [X19 + 0x48]
	0x03A99C2C STR S0, [X19 + 0x40]
	0x03A99C30 B 0x3A99C78
	0x03A99C34 LDR V1, [X19 + 0x3C]
	0x03A99C38 FCMP S0, S1
	0x03A99C3C B.PL 0x3A99C44
	0x03A99C40 STR S0, [X19 + 0x3C]
	0x03A99C44 LDR V1, [X19 + 0x44]
	0x03A99C48 FCMP S0, S1
	0x03A99C4C B.LE 0x3A99C54

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0x94A000
	009 Move X24, 0x6BF000
	010 Move X20, 0x6BF000
	011 Move X22, 0x6BF000
	012 Move X21, 0x6BF000
	013 Move W8, [X23+964]
	014 Move X24, [X24+1728]
	015 Move X20, [X20+1736]
	016 Move X22, [X22+1744]
	017 Move X21, [X21+1752]
	018 Move X19, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {37}
	023 Move X0, 0x6BF000
	024 Move X0, [X0+1752]
	025 Call 0x1C17CF4
	026 Move X0, 0x6BF000
	027 Move X0, [X0+1744]
	028 Call 0x1C17CF4
	029 Move X0, 0x6BF000
	030 Move X0, [X0+1728]
	031 Call 0x1C17CF4
	032 Move X0, 0x6BF000
	033 Move X0, [X0+1736]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X23+964], W8
	037 Move X0, [X24]
	038 Call 0x1C17F10
	039 Move X2, [X20]
	040 Move X1, X19
	041 Move X3, X31
	042 Move X20, X0
	043 Call 0x2EEAF5C, X0, X1, X2
	044 Move X0, [X22]
	045 Call 0x1C17F10
	046 Move X2, [X21]
	047 Move X1, X20
	048 Move X21, X0
	049 Call 0x29B612C, X0, X1
	050 Move V1, [X19+148]
	051 Move X0, X19
	052 Move [X19+80], X21
	053 NotImplemented "Instruction FNEG not yet implemented."
	054 Move V2, V0
	055 Call Tess.AddSentinel, X0, V0, V1, V2
	056 Move V1, [X19+148]
	057 Move X0, X19
	058 Move X20, [X31+48]
	059 Move X19, [X31+56]
	060 Move X22, [X31+32]
	061 Move X21, [X31+40]
	062 Move X24, [X31+16]
	063 Move X23, [X31+24]
	064 NotImplemented "Instruction FNEG not yet implemented."
	065 Move V2, V1
	066 Move X30, [X31+64]
	067 Call Tess.AddSentinel, X0, V0, V1, V2
	068 Return 

Method: System.Void DoneEdgeDict()

Disassembly:
	0x03A99C50 STR S0, [X19 + 0x44]
	0x03A99C54 LDR V0, [X9 + 0x38]
	0x03A99C58 LDR V1, [X19 + 0x40]
	0x03A99C5C FCMP S0, S1
	0x03A99C60 B.PL 0x3A99C68
	0x03A99C64 STR S0, [X19 + 0x40]
	0x03A99C68 LDR V1, [X19 + 0x48]
	0x03A99C6C FCMP S0, S1
	0x03A99C70 B.LE 0x3A99C78
	0x03A99C74 STR S0, [X19 + 0x48]
	0x03A99C78 LDR X9, [X9 + 0x18]
	0x03A99C7C MOV W10, W31
	0x03A99C80 CMP X9, X8
	0x03A99C84 B.NE 0x3A99C10
	0x03A99C88 LDP X20, X19, [X31 + 0x50]
	0x03A99C8C LDP X22, X21, [X31 + 0x40]
	0x03A99C90 LDP X24, X23, [X31 + 0x30]
	0x03A99C94 LDP X30, X25, [X31 + 0x20]
	0x03A99C98 LDR V8, [X31 + 0x10]
	0x03A99C9C ADD X31, X31, 0x60
	0x03A99CA0 RET
	0x03A99CA4 BL 0x1C16F20
	0x03A99CA8 STP X30, X21, [X31 - 0x20]!
	0x03A99CAC STP X20, X19, [X31 + 0x10]
	0x03A99CB0 CBZ X1, 0x3A99E40
	0x03A99CB4 LDR X20, [X1 + 0x20]
	0x03A99CB8 CBZ X20, 0x3A99E40
	0x03A99CBC MOV X19, X0
	0x03A99CC0 LDR X8, [X20 + 0x28]
	0x03A99CC4 CBZ X8, 0x3A99E40
	0x03A99CC8 LDR X0, [X8 + 0x40]
	0x03A99CCC LDR X1, [X20 + 0x40]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x94A000
	005 Move W8, [X20+965]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0x6BF000
	012 Move X0, [X0+1760]
	013 Call 0x1C17CF4
	014 Move X0, 0x6BF000
	015 Move X0, [X0+1712]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+965], W8
	019 Move X0, [X19+80]
	020 Compare X0, 0
	021 JumpIfEqual {36}
	022 Move X20, 0x6BF000
	023 Move X20, [X20+1760]
	024 Move X1, [X20]
	025 Call 0x29B62D0, X0
	026 Compare X0, 0
	027 JumpIfEqual {36}
	028 Move X1, [X0+16]
	029 Compare X1, 0
	030 JumpIfEqual {37}
	031 Move X0, X19
	032 Call Tess.DeleteRegion, X0, X1
	033 Move X0, [X19+80]
	034 Compare X0, 0
	035 JumpIfNotEqual {24}
	036 Call 0x1C17F20
	037 Move [X19+80], X31
	038 Move X20, [X31+16]
	039 Move X19, [X31+24]
	040 Move X30, [X31+32]
	041 Return 

Method: System.Void RemoveDegenerateEdges()

Disassembly:
	0x03A99CD0 BL 0x3A95354
	0x03A99CD4 TBZ X0, 0x0, 0x3A99CF4
	0x03A99CD8 LDR X8, [X20 + 0x30]
	0x03A99CDC CBZ X8, 0x3A99E40
	0x03A99CE0 LDR X20, [X8 + 0x28]
	0x03A99CE4 CBNZ X20, 0x3A99CC0
	0x03A99CE8 B 0x3A99E40
	0x03A99CEC LDR X20, [X20 + 0x38]
	0x03A99CF0 CBZ X20, 0x3A99E40
	0x03A99CF4 LDR X8, [X20 + 0x28]
	0x03A99CF8 CBZ X8, 0x3A99E40
	0x03A99CFC LDR X0, [X20 + 0x40]
	0x03A99D00 LDR X1, [X8 + 0x40]
	0x03A99D04 BL 0x3A95354
	0x03A99D08 TBNZ X0, 0x0, 0x3A99CEC
	0x03A99D0C LDR X8, [X20 + 0x30]
	0x03A99D10 CBZ X8, 0x3A99E40
	0x03A99D14 LDR X21, [X8 + 0x28]
	0x03A99D18 LDR X8, [X20 + 0x38]
	0x03A99D1C CMP X8, X21
	0x03A99D20 B.EQ 0x3A99E5C
	0x03A99D24 LDR X8, [X20 + 0x28]
	0x03A99D28 CBZ X8, 0x3A99E40
	0x03A99D2C CBZ X21, 0x3A99E40
	0x03A99D30 LDR X0, [X8 + 0x40]
	0x03A99D34 LDR X1, [X21 + 0x40]
	0x03A99D38 BL 0x3A95354
	0x03A99D3C TBNZ X0, 0x0, 0x3A99DF4
	0x03A99D40 LDR X8, [X21 + 0x38]
	0x03A99D44 CMP X8, X20
	0x03A99D48 B.EQ 0x3A99DC8
	0x03A99D4C CBZ X20, 0x3A99E40
	0x03A99D50 LDR X8, [X20 + 0x30]
	0x03A99D54 CBZ X8, 0x3A99E40
	0x03A99D58 LDR X0, [X8 + 0x28]
	0x03A99D5C BL 0x3A955D0
	0x03A99D60 TBNZ X0, 0x0, 0x3A99D94
	0x03A99D64 LDR X8, [X20 + 0x28]
	0x03A99D68 CBZ X8, 0x3A99E40
	0x03A99D6C LDR X9, [X20 + 0x30]
	0x03A99D70 CBZ X9, 0x3A99E40
	0x03A99D74 LDR X9, [X9 + 0x28]
	0x03A99D78 CBZ X9, 0x3A99E40
	0x03A99D7C LDR X0, [X8 + 0x40]
	0x03A99D80 LDR X1, [X20 + 0x40]
	0x03A99D84 LDR X2, [X9 + 0x40]
	0x03A99D88 BL 0x3A95410
	0x03A99D8C FCMP S0, 0x0
	0x03A99D90 B.LT 0x3A99DC8
	0x03A99D94 LDR X8, [X20 + 0x30]
	0x03A99D98 CBZ X8, 0x3A99E40
	0x03A99D9C LDR X9, [X19 + 0x10]
	0x03A99DA0 CBZ X9, 0x3A99E40
	0x03A99DA4 LDR X2, [X8 + 0x28]
	0x03A99DA8 MOV X1, X20
	0x03A99DAC BL 0x3A96424
	0x03A99DB0 CBZ X0, 0x3A99E40
	0x03A99DB4 LDR X20, [X0 + 0x28]
	0x03A99DB8 LDR X8, [X21 + 0x38]
	0x03A99DBC CMP X8, X20
	0x03A99DC0 B.NE 0x3A99D4C
	0x03A99DC4 CBZ X20, 0x3A99E40
	0x03A99DC8 LDR X20, [X20 + 0x38]
	0x03A99DCC CBNZ X20, 0x3A99D18
	0x03A99DD0 B 0x3A99E40
	0x03A99DD4 LDR X8, [X19 + 0x10]
	0x03A99DD8 CBZ X8, 0x3A99E40
	0x03A99DDC LDR X1, [X21 + 0x38]
	0x03A99DE0 MOV X2, X21
	0x03A99DE4 BL 0x3A96424
	0x03A99DE8 CBZ X0, 0x3A99E40
	0x03A99DEC LDR X21, [X0 + 0x28]
	0x03A99DF0 CBZ X21, 0x3A99E40
	0x03A99DF4 LDR X0, [X21 + 0x38]
	0x03A99DF8 CMP X0, X20
	0x03A99DFC B.EQ 0x3A99E38
	0x03A99E00 BL 0x3A9558C

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X8, [X0+16]
	008 Compare X8, 0
	009 JumpIfEqual {90}
	010 Move X22, [X8+32]
	011 Compare X22, 0
	012 JumpIfEqual {90}
	013 Move X21, [X22+32]
	014 NotImplemented "Instruction CMP not yet implemented."
	015 Move X19, X0
	016 Compare X21, 0
	017 JumpIfEqual {90}
	018 Move X8, [X21+40]
	019 Compare X8, 0
	020 JumpIfEqual {90}
	021 Move X20, [X21+56]
	022 Move X0, [X21+64]
	023 Move X1, [X8+64]
	024 Move X23, [X21+32]
	025 Call Geom.VertEq, X0, X1
	026 Move TEMP, X0
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfNotEqual {49}
	030 Move X8, [X21+56]
	031 Compare X8, 0
	032 JumpIfEqual {90}
	033 Move X8, [X8+56]
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Move X8, [X19+16]
	036 Compare X8, 0
	037 JumpIfEqual {90}
	038 Move X1, X20
	039 Move X2, X21
	040 Call Mesh.Splice, X0, X1, X2
	041 Move X8, [X19+16]
	042 Compare X8, 0
	043 JumpIfEqual {90}
	044 Move X1, X21
	045 Call Mesh.Delete, X0, X1
	046 Compare X20, 0
	047 JumpIfEqual {90}
	048 Move X1, [X20+56]
	049 Move X1, X20
	050 Move X20, X21
	051 Compare X1, 0
	052 JumpIfEqual {90}
	053 Move X21, [X1+56]
	054 NotImplemented "Instruction CMP not yet implemented."
	055 NotImplemented "Instruction CMP not yet implemented."
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Compare X23, 0
	058 JumpIfEqual {90}
	059 Move X8, [X23+40]
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Compare X23, 0
	062 JumpIfEqual {90}
	063 Move X23, [X23+32]
	064 Move X8, [X19+16]
	065 Compare X8, 0
	066 JumpIfEqual {90}
	067 Call Mesh.Delete, X0, X1
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Compare X23, 0
	070 JumpIfEqual {90}
	071 Move X8, [X23+40]
	072 NotImplemented "Instruction CMP not yet implemented."
	073 Compare X23, 0
	074 JumpIfEqual {90}
	075 Move X23, [X23+32]
	076 Move X8, [X19+16]
	077 Compare X8, 0
	078 JumpIfEqual {90}
	079 Move X1, X20
	080 Call Mesh.Delete, X0, X1
	081 NotImplemented "Instruction CMP not yet implemented."
	082 Move X21, X23
	083 Move X20, [X31+32]
	084 Move X19, [X31+40]
	085 Move X22, [X31+16]
	086 Move X21, [X31+24]
	087 Move X30, [X31+48]
	088 Move X23, [X31+56]
	089 Return 
	090 Call 0x1C17F20

Method: System.Void InitPriorityQ()

Disassembly:
	0x03A99E04 TBNZ X0, 0x0, 0x3A99DD4
	0x03A99E08 LDR X8, [X21 + 0x28]
	0x03A99E0C CBZ X8, 0x3A99E40
	0x03A99E10 LDR X9, [X21 + 0x38]
	0x03A99E14 CBZ X9, 0x3A99E40
	0x03A99E18 LDR X9, [X9 + 0x28]
	0x03A99E1C CBZ X9, 0x3A99E40
	0x03A99E20 LDR X0, [X21 + 0x40]
	0x03A99E24 LDR X1, [X8 + 0x40]
	0x03A99E28 LDR X2, [X9 + 0x40]
	0x03A99E2C BL 0x3A95410
	0x03A99E30 FCMP S0, 0x0
	0x03A99E34 B.LS 0x3A99DD4
	0x03A99E38 LDR X8, [X21 + 0x30]
	0x03A99E3C CBNZ X8, 0x3A99D14
	0x03A99E40 BL 0x1C16F20
	0x03A99E44 LDR X8, [X19 + 0x10]
	0x03A99E48 CBZ X8, 0x3A99E40
	0x03A99E4C MOV X2, X21
	0x03A99E50 BL 0x3A96424
	0x03A99E54 CBZ X0, 0x3A99E40
	0x03A99E58 LDR X21, [X0 + 0x28]
	0x03A99E5C CBZ X21, 0x3A99E40
	0x03A99E60 LDR X1, [X21 + 0x38]
	0x03A99E64 CBZ X1, 0x3A99E40
	0x03A99E68 LDR X8, [X1 + 0x38]
	0x03A99E6C CMP X8, X20
	0x03A99E70 B.NE 0x3A99E44
	0x03A99E74 LDP X20, X19, [X31 + 0x10]
	0x03A99E78 LDP X30, X21, [X31], #0x20
	0x03A99E7C RET
	0x03A99E80 STR X30, [X31 - 0x20]!
	0x03A99E84 STP X20, X19, [X31 + 0x10]
	0x03A99E88 LDR X8, [X0 + 0x10]
	0x03A99E8C CBZ X8, 0x3A99ED0
	0x03A99E90 LDR X9, [X8 + 0x18]
	0x03A99E94 CBZ X9, 0x3A99ED0
	0x03A99E98 LDR X1, [X9 + 0x18]
	0x03A99E9C MOV X19, X0
	0x03A99EA0 LDR X9, [X8 + 0x18]
	0x03A99EA4 CMP X1, X9
	0x03A99EA8 B.EQ 0x3A99ED4
	0x03A99EAC CBZ X1, 0x3A99ED0
	0x03A99EB0 LDRB W9, [X1 + 0x35]
	0x03A99EB4 LDR X20, [X1 + 0x18]
	0x03A99EB8 CBZ W9, 0x3A99EC8
	0x03A99EBC MOV X0, X19
	0x03A99EC0 BL 0x3A99CA8
	0x03A99EC4 LDR X8, [X19 + 0x10]
	0x03A99EC8 MOV X1, X20
	0x03A99ECC CBNZ X8, 0x3A99EA0
	0x03A99ED0 BL 0x1C16F20
	0x03A99ED4 LDP X20, X19, [X31 + 0x10]
	0x03A99ED8 LDR X30, [X31], #0x20
	0x03A99EDC RET
	0x03A99EE0 STR X30, [X31 - 0x20]!
	0x03A99EE4 STP X20, X19, [X31 + 0x10]
	0x03A99EE8 LDR X8, [X0 + 0x10]
	0x03A99EEC CBZ X8, 0x3A99F2C
	0x03A99EF0 LDR X9, [X8 + 0x18]
	0x03A99EF4 CBZ X9, 0x3A99F2C
	0x03A99EF8 LDR X1, [X9 + 0x18]
	0x03A99EFC MOV X19, X0
	0x03A99F00 LDR X9, [X8 + 0x18]
	0x03A99F04 CMP X1, X9
	0x03A99F08 B.EQ 0x3A99F30
	0x03A99F0C CBZ X1, 0x3A99F2C
	0x03A99F10 LDRB W9, [X1 + 0x35]
	0x03A99F14 LDR X20, [X1 + 0x18]
	0x03A99F18 CBNZ W9, 0x3A99F24
	0x03A99F1C BL 0x3A964EC
	0x03A99F20 LDR X8, [X19 + 0x10]
	0x03A99F24 MOV X1, X20
	0x03A99F28 CBNZ X8, 0x3A99F00
	0x03A99F2C BL 0x1C16F20
	0x03A99F30 LDP X20, X19, [X31 + 0x10]
	0x03A99F34 LDR X30, [X31], #0x20
	0x03A99F38 RET
	0x03A99F3C STP X30, X23, [X31 - 0x30]!
	0x03A99F40 STP X22, X21, [X31 + 0x10]
	0x03A99F44 STP X20, X19, [X31 + 0x20]
	0x03A99F48 LDR X8, [X0 + 0x10]
	0x03A99F4C CBZ X8, 0x3A99FD4
	0x03A99F50 LDR X9, [X8 + 0x20]
	0x03A99F54 CBZ X9, 0x3A99FD4
	0x03A99F58 MOV W21, W1
	0x03A99F5C LDR X1, [X9 + 0x20]
	0x03A99F60 MOV W19, W2
	0x03A99F64 MOV X20, X0
	0x03A99F68 SUB W22, W31, W21
	0x03A99F6C LDR X9, [X8 + 0x20]
	0x03A99F70 CMP X1, X9
	0x03A99F74 B.EQ 0x3A99FD8
	0x03A99F78 CBZ X1, 0x3A99FD4
	0x03A99F7C LDR X9, [X1 + 0x28]
	0x03A99F80 CBZ X9, 0x3A99FD4
	0x03A99F84 LDR X9, [X9 + 0x48]
	0x03A99F88 CBZ X9, 0x3A99FD4
	0x03A99F8C LDR X10, [X1 + 0x48]
	0x03A99F90 CBZ X10, 0x3A99FD4
	0x03A99F94 LDRB W11, [X9 + 0x35]
	0x03A99F98 LDRB W9, [X10 + 0x35]
	0x03A99F9C LDR X23, [X1 + 0x20]
	0x03A99FA0 CMP W11, W9
	0x03A99FA4 B.NE 0x3A99FB8
	0x03A99FA8 TBZ X19, 0x0, 0x3A99FC8
	0x03A99FAC BL 0x3A96120
	0x03A99FB0 LDR X8, [X20 + 0x10]
	0x03A99FB4 B 0x3A99FCC
	0x03A99FB8 CMP W9, 0x0
	0x03A99FBC CSEL W9, W22, W21, EQ
	0x03A99FC0 STR W9, [X1 + 0x58]
	0x03A99FC4 B 0x3A99FCC
	0x03A99FC8 STR W31, [X1 + 0x58]
	0x03A99FCC MOV X1, X23
	0x03A99FD0 CBNZ X8, 0x3A99F6C
	0x03A99FD4 BL 0x1C16F20
	0x03A99FD8 LDP X20, X19, [X31 + 0x20]
	0x03A99FDC LDP X22, X21, [X31 + 0x10]
	0x03A99FE0 LDP X30, X23, [X31], #0x30
	0x03A99FE4 RET
	0x03A99FE8 STR X30, [X31 - 0x10]!
	0x03A99FEC CBZ X1, 0x3A9A01C
	0x03A99FF0 LDR X8, [X1 + 0x28]
	0x03A99FF4 CBZ X8, 0x3A9A01C
	0x03A99FF8 LDR X8, [X8 + 0x48]
	0x03A99FFC CBZ X8, 0x3A9A010

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X20, 0x94A000
	011 Move W8, [X20+966]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {40}
	017 Move X0, 0x6BF000
	018 Move X0, [X0+1768]
	019 Call 0x1C17CF4
	020 Move X0, 0x6BF000
	021 Move X0, [X0+1776]
	022 Call 0x1C17CF4
	023 Move X0, 0x6BF000
	024 Move X0, [X0+1624]
	025 Call 0x1C17CF4
	026 Move X0, 0x6BF000
	027 Move X0, [X0+1784]
	028 Call 0x1C17CF4
	029 Move X0, 0x6BF000
	030 Move X0, [X0+1664]
	031 Call 0x1C17CF4
	032 Move X0, 0x6BF000
	033 Move X0, [X0+1792]
	034 Call 0x1C17CF4
	035 Move X0, 0x6BF000
	036 Move X0, [X0+1800]
	037 Call 0x1C17CF4
	038 Move W8, 1
	039 Move [X20+966], W8
	040 Move X8, [X19+16]
	041 Compare X8, 0
	042 JumpIfEqual {113}
	043 Move X8, [X8+16]
	044 Compare X8, 0
	045 JumpIfEqual {113}
	046 Move X9, 0x6BF000
	047 Move X22, 0x6BF000
	048 Move X26, 0x6BF000
	049 Move X21, 0x6BF000
	050 Move X23, 0x6BF000
	051 Move X25, 0x6BF000
	052 Move X24, 0x6BF000
	053 Move X9, [X9+1776]
	054 Move X22, [X22+1768]
	055 Move X26, [X26+1800]
	056 Move X21, [X21+1792]
	057 Move X23, [X23+1664]
	058 Move X25, [X25+1624]
	059 Move X24, [X24+1784]
	060 Move W20, 8
	061 Move X10, X8
	062 Move X10, [X10+24]
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Add W20, W20, 1
	065 Compare X10, 0
	066 JumpIfNotEqual {62}
	067 Move X0, [X9]
	068 Call 0x1C17F10
	069 Move X2, [X22]
	070 Move X1, X31
	071 Move X3, X31
	072 Move X22, X0
	073 Call 0x2EEB0C4, X0, X1, X2
	074 Move X0, [X26]
	075 Call 0x1C17F10
	076 Move X3, [X21]
	077 Move W1, W20
	078 Move X2, X22
	079 Move X21, X0
	080 Call 0x24B5158, X0, X1, X2
	081 Move X8, [X19+16]
	082 Move [X19+88], X21
	083 Compare X8, 0
	084 JumpIfEqual {113}
	085 Move X22, [X8+16]
	086 Compare X22, 0
	087 JumpIfEqual {113}
	088 Compare X21, 0
	089 JumpIfEqual {113}
	090 Move X20, X22
	091 Move X20, [X20+24]
	092 NotImplemented "Instruction CMP not yet implemented."
	093 Move X2, [X23]
	094 Move X0, X21
	095 Move X1, X20
	096 Call 0x24B5764, X0, X1
	097 Compare X20, 0
	098 JumpIfEqual {113}
	099 Move X21, X0
	100 Move [X20+60], W21
	101 Move X0, [X25]
	102 Move W8, [X0+224]
	103 Compare W8, 0
	104 JumpIfNotEqual {107}
	105 Call 0x1C17DFC
	106 Move X0, [X25]
	107 Move X8, [X0+184]
	108 Move W8, [X8]
	109 NotImplemented "Instruction CMP not yet implemented."
	110 Move X21, [X19+88]
	111 Compare X21, 0
	112 JumpIfNotEqual {91}
	113 Call 0x1C17F20
	114 Move X1, [X24]
	115 Move X0, X21
	116 Move X20, [X31+64]
	117 Move X19, [X31+72]
	118 Move X22, [X31+48]
	119 Move X21, [X31+56]
	120 Move X24, [X31+32]
	121 Move X23, [X31+40]
	122 Move X26, [X31+16]
	123 Move X25, [X31+24]
	124 Move X30, [X31+80]
	125 Call 0x24B520C, X0
	126 Return 
	127 Move X0, 0x65B000
	128 Move X0, [X0+1456]
	129 Call 0x1C17D08
	130 Call 0x1C17F10
	131 Move X19, X0
	132 Move X0, 0x6BF000
	133 Move X0, [X0+1672]
	134 Call 0x1C17D08
	135 Move X1, X0
	136 Move X0, X19
	137 Move X2, X31
	138 Call InvalidOperationException..ctor, X0, X1
	139 Move X0, 0x6BF000
	140 Move X0, [X0+1808]
	141 Call 0x1C17D08
	142 Move X1, X0
	143 Move X0, X19
	144 Call 0x1C17DEC

Method: System.Void DonePriorityQ()

Disassembly:
	0x03A9A000 LDRB W9, [X8 + 0x35]
	0x03A9A004 CBZ W9, 0x3A9A010

ISIL:
	001 Move [X0+88], X31
	002 Return 

Method: System.Void RemoveDegenerateFaces()

Disassembly:
	0x03A9A008 LDR W0, [X8 + 0x30]
	0x03A9A00C B 0x3A9A014
	0x03A9A010 MOVN W0, 0x0
	0x03A9A014 LDR X30, [X31], #0x10
	0x03A9A018 RET
	0x03A9A01C BL 0x1C16F20
	0x03A9A020 SUB X31, X31, 0x80
	0x03A9A024 STR D8, [X31 + 0x10]
	0x03A9A028 STP X29, X30, [X31 + 0x20]
	0x03A9A02C STP X28, X27, [X31 + 0x30]
	0x03A9A030 STP X26, X25, [X31 + 0x40]
	0x03A9A034 STP X24, X23, [X31 + 0x50]
	0x03A9A038 STP X22, X21, [X31 + 0x60]
	0x03A9A03C STP X20, X19, [X31 + 0x70]
	0x03A9A040 ADRP X22, 0x948000
	0x03A9A044 LDRB W8, [X22 + 0x3CC]
	0x03A9A048 MOV W21, W2
	0x03A9A04C MOV W19, W1
	0x03A9A050 MOV X20, X0
	0x03A9A054 TBNZ X8, 0x0, 0x3A9A084
	0x03A9A058 ADRP X0, 0x6BA000
	0x03A9A05C LDR X0, [X0 + 0xA50]
	0x03A9A060 BL 0x1C16CF4
	0x03A9A064 ADRP X0, 0x65A000
	0x03A9A068 LDR X0, [X0 + 0xE58]
	0x03A9A06C BL 0x1C16CF4
	0x03A9A070 ADRP X0, 0x659000
	0x03A9A074 LDR X0, [X0 + 0x5A8]
	0x03A9A078 BL 0x1C16CF4
	0x03A9A07C MOVZ W8, 0x1
	0x03A9A080 STRB W8, [X22 + 0x3CC]
	0x03A9A084 CMP W21, 0x3
	0x03A9A088 MOVZ W8, 0x3
	0x03A9A08C CSEL W21, W21, W8, GT
	0x03A9A090 CMP W21, 0x4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X0+16]
	006 Compare X8, 0
	007 JumpIfEqual {39}
	008 Move X9, [X8+24]
	009 Compare X9, 0
	010 JumpIfEqual {39}
	011 Move X21, [X9+24]
	012 Move X19, X0
	013 Move X9, [X8+24]
	014 NotImplemented "Instruction CMP not yet implemented."
	015 Compare X21, 0
	016 JumpIfEqual {39}
	017 Move X20, [X21+32]
	018 Compare X20, 0
	019 JumpIfEqual {39}
	020 Move X9, [X20+56]
	021 Compare X9, 0
	022 JumpIfEqual {39}
	023 Move X9, [X9+56]
	024 Move X21, [X21+24]
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Compare X8, 0
	027 JumpIfNotEqual {13}
	028 Move X0, [X20+48]
	029 Move X1, X20
	030 Call Geom.AddWinding, X0, X1
	031 Move X8, [X19+16]
	032 Compare X8, 0
	033 JumpIfEqual {39}
	034 Move X1, X20
	035 Call Mesh.Delete, X0, X1
	036 Move X8, [X19+16]
	037 Compare X8, 0
	038 JumpIfNotEqual {13}
	039 Call 0x1C17F20
	040 Move X20, [X31+16]
	041 Move X19, [X31+24]
	042 Move X30, [X31+32]
	043 Move X21, [X31+40]
	044 Return 

Method: System.Void ComputeInterior()

Disassembly:
	0x03A9A094 B.LT 0x3A9A0A8
	0x03A9A098 LDR X0, [X20 + 0x10]
	0x03A9A09C CBZ X0, 0x3A9A424
	0x03A9A0A0 MOV W1, W21
	0x03A9A0A4 BL 0x3A96608
	0x03A9A0A8 LDR X8, [X20 + 0x10]
	0x03A9A0AC CBZ X8, 0x3A9A424
	0x03A9A0B0 LDR X9, [X8 + 0x10]
	0x03A9A0B4 CBZ X9, 0x3A9A424
	0x03A9A0B8 LDR X10, [X9 + 0x18]
	0x03A9A0BC CMP X10, X9
	0x03A9A0C0 B.EQ 0x3A9A0DC
	0x03A9A0C4 MOVN W11, 0x0
	0x03A9A0C8 CBZ X10, 0x3A9A424
	0x03A9A0CC STR W11, [X10 + 0x40]
	0x03A9A0D0 LDR X10, [X10 + 0x18]
	0x03A9A0D4 CMP X10, X9
	0x03A9A0D8 B.NE 0x3A9A0C8
	0x03A9A0DC LDR X23, [X8 + 0x18]
	0x03A9A0E0 CBZ X23, 0x3A9A424
	0x03A9A0E4 ADRP X24, 0x659000
	0x03A9A0E8 ADRP X27, 0x65A000
	0x03A9A0EC ADRP X25, 0x6BA000
	0x03A9A0F0 LDR X24, [X24 + 0x5A8]
	0x03A9A0F4 LDR X27, [X27 + 0xE58]
	0x03A9A0F8 LDR X25, [X25 + 0xA50]
	0x03A9A0FC MOV W26, W31
	0x03A9A100 MOV W22, W31
	0x03A9A104 MOVN W28, 0x0
	0x03A9A108 MOVZ W29, 0x1
	0x03A9A10C LDR X23, [X23 + 0x18]
	0x03A9A110 LDR X8, [X8 + 0x18]
	0x03A9A114 CMP X23, X8
	0x03A9A118 B.EQ 0x3A9A1A8
	0x03A9A11C CBZ X23, 0x3A9A424
	0x03A9A120 LDRB W8, [X23 + 0x35]
	0x03A9A124 STR W28, [X23 + 0x30]
	0x03A9A128 CBZ W8, 0x3A9A19C
	0x03A9A12C LDRB W8, [X20 + 0x98]
	0x03A9A130 CBZ W8, 0x3A9A160
	0x03A9A134 MOV X0, X23
	0x03A9A138 BL 0x3A96BF0
	0x03A9A13C LDR X0, [X24]
	0x03A9A140 MOV V8.16B, V0.16B
	0x03A9A144 LDR W8, [X0 + 0xE0]
	0x03A9A148 CBNZ W8, 0x3A9A150
	0x03A9A14C BL 0x1C16DFC
	0x03A9A150 FABS S0, S8
	0x03A9A154 FMOV S1, W29
	0x03A9A158 FCMP S0, S1
	0x03A9A15C B.MI 0x3A9A19C
	0x03A9A160 LDR X8, [X23 + 0x20]
	0x03A9A164 MOV X9, X8
	0x03A9A168 CBZ X9, 0x3A9A424
	0x03A9A16C LDR X10, [X9 + 0x40]
	0x03A9A170 CBZ X10, 0x3A9A424
	0x03A9A174 LDR W11, [X10 + 0x40]
	0x03A9A178 ADDS W31, W11, 0x1
	0x03A9A17C B.NE 0x3A9A188
	0x03A9A180 STR W22, [X10 + 0x40]
	0x03A9A184 ADD W22, W22, 0x1
	0x03A9A188 LDR X9, [X9 + 0x38]
	0x03A9A18C CMP X9, X8
	0x03A9A190 B.NE 0x3A9A168
	0x03A9A194 STR W26, [X23 + 0x30]
	0x03A9A198 ADD W26, W26, 0x1
	0x03A9A19C LDR X8, [X20 + 0x10]
	0x03A9A1A0 CBNZ X8, 0x3A9A10C
	0x03A9A1A4 B 0x3A9A424
	0x03A9A1A8 STR W26, [X20 + 0x88]
	0x03A9A1AC CMP W19, 0x1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x949000
	007 Move W8, [X20+967]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0x6BE000
	014 Move X0, [X0+1816]
	015 Call 0x1C17CF4
	016 Move X0, 0x6BE000
	017 Move X0, [X0+1824]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X20+967], W8
	021 Move X0, X19
	022 Call Tess.RemoveDegenerateEdges, X0
	023 Move X0, X19
	024 Call Tess.InitPriorityQ, X0
	025 Move X0, X19
	026 Call Tess.RemoveDegenerateFaces, X0
	027 Move X0, X19
	028 Call Tess.InitEdgeDict, X0
	029 Move X0, [X19+88]
	030 Compare X0, 0
	031 JumpIfEqual {73}
	032 Move X21, 0x6BE000
	033 Move X22, 0x6BE000
	034 Move X21, [X21+1816]
	035 Move X22, [X22+1824]
	036 Move X1, [X21]
	037 Call 0x24B5808, X0
	038 Compare X0, 0
	039 JumpIfEqual {74}
	040 Move X20, X0
	041 Move X0, [X19+88]
	042 Compare X0, 0
	043 JumpIfEqual {73}
	044 Move X1, [X22]
	045 Call 0x24B591C, X0
	046 Compare X0, 0
	047 JumpIfEqual {67}
	048 Move V0, [X0+52]
	049 Move V1, [X20+52]
	050 NotImplemented "Instruction FCMP not yet implemented."
	051 Move V0, [X0+56]
	052 Move V1, [X20+56]
	053 NotImplemented "Instruction FCMP not yet implemented."
	054 Move X0, [X19+88]
	055 Compare X0, 0
	056 JumpIfEqual {73}
	057 Move X1, [X21]
	058 Call 0x24B5808, X0
	059 Compare X0, 0
	060 JumpIfEqual {73}
	061 Move X8, [X19+16]
	062 Compare X8, 0
	063 JumpIfEqual {73}
	064 Move X1, [X20+32]
	065 Move X2, [X0+32]
	066 Call Mesh.Splice, X0, X1, X2
	067 Move X0, X19
	068 Move X1, X20
	069 Call Tess.SweepEvent, X0, X1
	070 Move X0, [X19+88]
	071 Compare X0, 0
	072 JumpIfNotEqual {36}
	073 Call 0x1C17F20
	074 Move X0, X19
	075 Call Tess.DoneEdgeDict, X0
	076 Move [X19+88], X31
	077 Move X0, X19
	078 Move X20, [X31+32]
	079 Move X19, [X31+40]
	080 Move X22, [X31+16]
	081 Move X21, [X31+24]
	082 Move X30, [X31+48]
	083 Call Tess.RemoveDegenerateFaces, X0
	084 Return 

Method: UnityEngine.Rendering.Universal.LibTessDotNet.Vec3 get_Normal()

Disassembly:
	0x03A9A1B0 LDR X0, [X27]
	0x03A9A1B4 CSET W8, EQ
	0x03A9A1B8 LSLV W8, W26, W8

ISIL:
	001 Move S0, [X0+24]
	002 Move S1, [X0+28]
	003 Move V2, [X0+32]
	004 Return X0

Method: System.Void set_Normal(UnityEngine.Rendering.Universal.LibTessDotNet.Vec3 value)

Disassembly:
	0x03A9A1BC MUL W1, W8, W21
	0x03A9A1C0 BL 0x1C16D6C
	0x03A9A1C4 STR X0, [X20 + 0x80]

ISIL:
	001 Move [X0+24], S0
	002 Move [X0+32], S1
	003 Move [X0+32], S2
	004 Return 

Method: UnityEngine.Rendering.Universal.LibTessDotNet.ContourVertex[] get_Vertices()

Disassembly:
	0x03A9A1C8 STR W22, [X20 + 0x78]
	0x03A9A1CC LDR X0, [X25]

ISIL:
	001 Move X0, [X0+112]
	002 Return X0

Method: System.Int32 get_VertexCount()

Disassembly:
	0x03A9A1D0 MOV W1, W22
	0x03A9A1D4 BL 0x1C16D6C

ISIL:
	001 Move W0, [X0+120]
	002 Return X0

Method: System.Int32[] get_Elements()

Disassembly:
	0x03A9A1D8 LDR X9, [X20 + 0x10]
	0x03A9A1DC STR X0, [X20 + 0x70]

ISIL:
	001 Move X0, [X0+128]
	002 Return X0

Method: System.Int32 get_ElementCount()

Disassembly:
	0x03A9A1E0 CBZ X9, 0x3A9A424
	0x03A9A1E4 LDR X8, [X9 + 0x10]

ISIL:
	001 Move W0, [X0+136]
	002 Return X0

Method: System.Void .ctor()

Disassembly:
	0x03A9A1E8 CBZ X8, 0x3A9A424
	0x03A9A1EC MOVZ W10, 0x18
	0x03A9A1F0 LDR X8, [X8 + 0x18]
	0x03A9A1F4 LDR X11, [X9 + 0x10]
	0x03A9A1F8 CMP X8, X11
	0x03A9A1FC B.EQ 0x3A9A27C
	0x03A9A200 CBZ X8, 0x3A9A424
	0x03A9A204 LDRSW X11, [X8 + 0x40]
	0x03A9A208 ADDS W31, W11, 0x1
	0x03A9A20C B.EQ 0x3A9A274
	0x03A9A210 CBZ X0, 0x3A9A424
	0x03A9A214 LDR W9, [X8 + 0x30]
	0x03A9A218 LDR X12, [X8 + 0x28]
	0x03A9A21C STR W9, [X31 + 0x8]
	0x03A9A220 STR X12, [X31]
	0x03A9A224 LDR W9, [X0 + 0x18]
	0x03A9A228 CMP W11, W9
	0x03A9A22C B.CS 0x3A9A44C
	0x03A9A230 LDR W9, [X31 + 0x8]
	0x03A9A234 LDR X12, [X31]
	0x03A9A238 NOP
	0x03A9A23C MADD X11, X11, X10, X0
	0x03A9A240 STR W9, [X11 + 0x28]
	0x03A9A244 STR X12, [X11 + 0x20]
	0x03A9A248 LDR X0, [X20 + 0x70]
	0x03A9A24C CBZ X0, 0x3A9A424
	0x03A9A250 LDRSW X9, [X8 + 0x40]
	0x03A9A254 LDR W11, [X0 + 0x18]
	0x03A9A258 CMP W9, W11
	0x03A9A25C B.CS 0x3A9A44C
	0x03A9A260 LDR X11, [X8 + 0x48]
	0x03A9A264 NOP
	0x03A9A268 MADD X9, X9, X10, X0
	0x03A9A26C STR X11, [X9 + 0x30]
	0x03A9A270 LDR X9, [X20 + 0x10]
	0x03A9A274 CBNZ X9, 0x3A9A1F0
	0x03A9A278 B 0x3A9A424
	0x03A9A27C LDR X22, [X9 + 0x18]
	0x03A9A280 CBZ X22, 0x3A9A424
	0x03A9A284 MOV W28, W31
	0x03A9A288 SUB W25, W31, W21

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x949000
	006 Move X20, 0x6BE000
	007 Move W8, [X21+968]
	008 Move X20, [X20+1592]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x6BE000
	015 Move X0, [X0+1592]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+968], W8
	019 Move W9, 0xF2CA
	020 Move W8, 0x3F800000
	021 NotImplemented "Instruction MOVK not yet implemented."
	022 Move X0, X19
	023 Move X1, X31
	024 Move [X19+140], W8
	025 Move [X19+148], W9
	026 Call Object..ctor, X0
	027 Move X0, [X20]
	028 Move W8, [X0+224]
	029 Compare W8, 0
	030 JumpIfNotEqual {33}
	031 Call 0x1C17DFC
	032 Move X0, [X20]
	033 Move X8, [X0+184]
	034 Move X9, [X8]
	035 Move W8, [X8+8]
	036 Move [X19+112], X31
	037 Move [X19+120], W31
	038 Move [X19+128], X31
	039 Move [X19+136], W31
	040 Move [X19+68], X31
	041 Move [X19+60], X31
	042 Move [X19+32], W8
	043 Move [X19+16], X31
	044 Move [X19+24], X9
	045 Move [X19+76], W31
	046 Move X20, [X31+16]
	047 Move X19, [X31+24]
	048 Move X30, [X31+32]
	049 Move X21, [X31+40]
	050 Return 

Method: System.Void ComputeNormal(ref UnityEngine.Rendering.Universal.LibTessDotNet.Vec3 norm)

Disassembly:
	0x03A9A28C MOVN W26, 0x0
	0x03A9A290 LDR X22, [X22 + 0x18]
	0x03A9A294 LDR X8, [X9 + 0x18]
	0x03A9A298 CMP X22, X8
	0x03A9A29C B.EQ 0x3A9A428
	0x03A9A2A0 CBZ X22, 0x3A9A424
	0x03A9A2A4 LDRB W8, [X22 + 0x35]
	0x03A9A2A8 CBZ W8, 0x3A9A41C
	0x03A9A2AC LDRB W8, [X20 + 0x98]
	0x03A9A2B0 CBZ W8, 0x3A9A2E4
	0x03A9A2B4 MOV X0, X22
	0x03A9A2B8 BL 0x3A96BF0
	0x03A9A2BC LDR X0, [X24]
	0x03A9A2C0 MOV V8.16B, V0.16B
	0x03A9A2C4 LDR W8, [X0 + 0xE0]
	0x03A9A2C8 CBNZ W8, 0x3A9A2D0
	0x03A9A2CC BL 0x1C16DFC
	0x03A9A2D0 MOVZ W8, 0x1
	0x03A9A2D4 FABS S0, S8
	0x03A9A2D8 FMOV S1, W8
	0x03A9A2DC FCMP S0, S1
	0x03A9A2E0 B.MI 0x3A9A41C
	0x03A9A2E4 LDR X23, [X22 + 0x20]
	0x03A9A2E8 MOV W29, W31
	0x03A9A2EC MOV W8, W28
	0x03A9A2F0 MOV X9, X23
	0x03A9A2F4 CBZ X9, 0x3A9A424
	0x03A9A2F8 LDR X11, [X9 + 0x40]
	0x03A9A2FC CBZ X11, 0x3A9A424
	0x03A9A300 LDR X27, [X20 + 0x80]
	0x03A9A304 CBZ X27, 0x3A9A424
	0x03A9A308 LDR X10, [X27 + 0x18]
	0x03A9A30C ADD W12, W28, W29
	0x03A9A310 CMP W12, W10
	0x03A9A314 B.CS 0x3A9A44C
	0x03A9A318 LDR W11, [X11 + 0x40]
	0x03A9A31C ADD X12, X27, W12, 0x2, SXTW
	0x03A9A320 ADD W8, W8, 0x1
	0x03A9A324 ADD W29, W29, 0x1
	0x03A9A328 STR W11, [X12 + 0x20]
	0x03A9A32C LDR X9, [X9 + 0x38]
	0x03A9A330 CMP X9, X23
	0x03A9A334 B.NE 0x3A9A2F4
	0x03A9A338 CMP W29, W21
	0x03A9A33C B.GE 0x3A9A37C
	0x03A9A340 CMP W8, W10
	0x03A9A344 CSEL W10, W8, W10, HI
	0x03A9A348 MOV W9, W31
	0x03A9A34C SUB W10, W8, W10
	0x03A9A350 ADD W11, W25, W29
	0x03A9A354 ADDS W31, W10, W9
	0x03A9A358 B.EQ 0x3A9A44C
	0x03A9A35C ADD W12, W8, W9
	0x03A9A360 ADD W9, W9, 0x1
	0x03A9A364 ADD X12, X27, W12, 0x2, SXTW
	0x03A9A368 ADDS W31, W11, W9
	0x03A9A36C STR W26, [X12 + 0x20]
	0x03A9A370 B.NE 0x3A9A354
	0x03A9A374 ADD W28, W8, W9
	0x03A9A378 B 0x3A9A380
	0x03A9A37C ADD W28, W28, W29
	0x03A9A380 CMP W19, 0x1
	0x03A9A384 B.NE 0x3A9A41C
	0x03A9A388 MOV X1, X23
	0x03A9A38C BL 0x3A99FE8
	0x03A9A390 LDR W8, [X27 + 0x18]
	0x03A9A394 CMP W28, W8
	0x03A9A398 B.CS 0x3A9A44C
	0x03A9A39C ADD X8, X27, W28, 0x2, SXTW
	0x03A9A3A0 STR W0, [X8 + 0x20]
	0x03A9A3A4 CBZ X23, 0x3A9A424
	0x03A9A3A8 LDR X23, [X23 + 0x38]
	0x03A9A3AC LDR X8, [X22 + 0x20]
	0x03A9A3B0 CMP X23, X8
	0x03A9A3B4 B.EQ 0x3A9A3D0
	0x03A9A3B8 LDR X27, [X20 + 0x80]
	0x03A9A3BC MOV X1, X23
	0x03A9A3C0 ADD W28, W28, 0x1
	0x03A9A3C4 BL 0x3A99FE8
	0x03A9A3C8 CBNZ X27, 0x3A9A390
	0x03A9A3CC B 0x3A9A424
	0x03A9A3D0 CMP W29, W21
	0x03A9A3D4 B.GE 0x3A9A418
	0x03A9A3D8 LDR X8, [X20 + 0x80]
	0x03A9A3DC CBZ X8, 0x3A9A424
	0x03A9A3E0 LDR W9, [X8 + 0x18]
	0x03A9A3E4 ADD W11, W25, W29
	0x03A9A3E8 MOVZ W10, 0x1
	0x03A9A3EC ADD W12, W28, W10
	0x03A9A3F0 CMP W12, W9
	0x03A9A3F4 B.CS 0x3A9A44C
	0x03A9A3F8 ADD W10, W10, 0x1
	0x03A9A3FC ADD W13, W11, W10
	0x03A9A400 ADD X12, X8, W12, 0x2, SXTW
	0x03A9A404 CMP W13, 0x1
	0x03A9A408 STR W26, [X12 + 0x20]
	0x03A9A40C B.NE 0x3A9A3EC
	0x03A9A410 ADD W28, W28, W10
	0x03A9A414 B 0x3A9A41C
	0x03A9A418 ADD W28, W28, 0x1
	0x03A9A41C LDR X9, [X20 + 0x10]
	0x03A9A420 CBNZ X9, 0x3A9A290
	0x03A9A424 BL 0x1C16F20
	0x03A9A428 LDP X20, X19, [X31 + 0x70]
	0x03A9A42C LDP X22, X21, [X31 + 0x60]
	0x03A9A430 LDP X24, X23, [X31 + 0x50]
	0x03A9A434 LDP X26, X25, [X31 + 0x40]
	0x03A9A438 LDP X28, X27, [X31 + 0x30]
	0x03A9A43C LDP X29, X30, [X31 + 0x20]
	0x03A9A440 LDR V8, [X31 + 0x10]
	0x03A9A444 ADD X31, X31, 0x80
	0x03A9A448 RET
	0x03A9A44C BL 0x1C16F28
	0x03A9A450 SUB X31, X31, 0x30
	0x03A9A454 STR X30, [X31 + 0x10]
	0x03A9A458 STP X20, X19, [X31 + 0x20]
	0x03A9A45C ADRP X20, 0x948000
	0x03A9A460 LDRB W8, [X20 + 0x3CD]
	0x03A9A464 MOV X19, X0
	0x03A9A468 TBNZ X8, 0x0, 0x3A9A48C
	0x03A9A46C ADRP X0, 0x6BA000
	0x03A9A470 LDR X0, [X0 + 0xA50]
	0x03A9A474 BL 0x1C16CF4
	0x03A9A478 ADRP X0, 0x65A000
	0x03A9A47C LDR X0, [X0 + 0xE58]
	0x03A9A480 BL 0x1C16CF4
	0x03A9A484 MOVZ W8, 0x1
	0x03A9A488 STRB W8, [X20 + 0x3CD]
	0x03A9A48C LDR X8, [X19 + 0x10]
	0x03A9A490 STR W31, [X19 + 0x78]
	0x03A9A494 STR W31, [X19 + 0x88]
	0x03A9A498 CBZ X8, 0x3A9A640
	0x03A9A49C LDR X8, [X8 + 0x18]
	0x03A9A4A0 CBZ X8, 0x3A9A640
	0x03A9A4A4 LDR X10, [X8 + 0x18]
	0x03A9A4A8 CMP X10, X8
	0x03A9A4AC B.EQ 0x3A9A4FC
	0x03A9A4B0 MOV W9, W31
	0x03A9A4B4 MOV W11, W31
	0x03A9A4B8 CBZ X10, 0x3A9A640
	0x03A9A4BC LDRB W12, [X10 + 0x35]
	0x03A9A4C0 CBZ W12, 0x3A9A4EC
	0x03A9A4C4 LDR X12, [X10 + 0x20]
	0x03A9A4C8 MOV X13, X12
	0x03A9A4CC ADD W11, W11, 0x1
	0x03A9A4D0 CBZ X13, 0x3A9A658
	0x03A9A4D4 LDR X13, [X13 + 0x38]
	0x03A9A4D8 CMP X13, X12
	0x03A9A4DC B.NE 0x3A9A4CC
	0x03A9A4E0 ADD W9, W9, 0x1
	0x03A9A4E4 STR W11, [X19 + 0x78]
	0x03A9A4E8 STR W9, [X19 + 0x88]
	0x03A9A4EC LDR X10, [X10 + 0x18]
	0x03A9A4F0 CMP X10, X8
	0x03A9A4F4 B.NE 0x3A9A4B8
	0x03A9A4F8 B 0x3A9A500
	0x03A9A4FC MOV W9, W31
	0x03A9A500 ADRP X8, 0x65A000
	0x03A9A504 LDR X8, [X8 + 0xE58]
	0x03A9A508 ADRP X20, 0x6BA000
	0x03A9A50C UBFM W1, W9, 0x1F, 0x1E
	0x03A9A510 LDR X0, [X8]
	0x03A9A514 LDR X20, [X20 + 0xA50]
	0x03A9A518 BL 0x1C16D6C
	0x03A9A51C STR X0, [X19 + 0x80]
	0x03A9A520 LDR W1, [X19 + 0x78]
	0x03A9A524 LDR X0, [X20]
	0x03A9A528 BL 0x1C16D6C
	0x03A9A52C LDR X14, [X19 + 0x10]
	0x03A9A530 STR X0, [X19 + 0x70]
	0x03A9A534 CBZ X14, 0x3A9A640
	0x03A9A538 LDR X8, [X14 + 0x18]
	0x03A9A53C CBZ X8, 0x3A9A640
	0x03A9A540 MOV W9, W31
	0x03A9A544 MOV W10, W31
	0x03A9A548 MOV W11, W31
	0x03A9A54C MOVZ W12, 0x18
	0x03A9A550 LDR X8, [X8 + 0x18]
	0x03A9A554 LDR X13, [X14 + 0x18]
	0x03A9A558 CMP X8, X13
	0x03A9A55C B.EQ 0x3A9A644
	0x03A9A560 CBZ X8, 0x3A9A640
	0x03A9A564 LDRB W13, [X8 + 0x35]
	0x03A9A568 CBZ W13, 0x3A9A63C
	0x03A9A56C LDR X14, [X8 + 0x20]
	0x03A9A570 MOV W13, W31
	0x03A9A574 MOV X15, X14
	0x03A9A578 CBZ X0, 0x3A9A640
	0x03A9A57C CBZ X15, 0x3A9A640
	0x03A9A580 LDR X16, [X15 + 0x40]
	0x03A9A584 CBZ X16, 0x3A9A640
	0x03A9A588 LDR W17, [X16 + 0x30]
	0x03A9A58C LDR X16, [X16 + 0x28]
	0x03A9A590 STR W17, [X31 + 0x8]
	0x03A9A594 STR X16, [X31]
	0x03A9A598 LDR W17, [X0 + 0x18]
	0x03A9A59C ADD W16, W10, W13
	0x03A9A5A0 CMP W16, W17
	0x03A9A5A4 B.CS 0x3A9A654
	0x03A9A5A8 LDR W1, [X31 + 0x8]
	0x03A9A5AC LDR X2, [X31]
	0x03A9A5B0 SXTW X17, W16
	0x03A9A5B4 MADD X0, X17, X12, X0
	0x03A9A5B8 STR W1, [X0 + 0x28]
	0x03A9A5BC STR X2, [X0 + 0x20]
	0x03A9A5C0 LDR X0, [X19 + 0x70]
	0x03A9A5C4 CBZ X0, 0x3A9A640
	0x03A9A5C8 LDR X1, [X15 + 0x40]
	0x03A9A5CC CBZ X1, 0x3A9A640
	0x03A9A5D0 LDR W2, [X0 + 0x18]
	0x03A9A5D4 CMP W16, W2
	0x03A9A5D8 B.CS 0x3A9A654
	0x03A9A5DC LDR X16, [X1 + 0x48]
	0x03A9A5E0 NOP
	0x03A9A5E4 MADD X17, X17, X12, X0
	0x03A9A5E8 ADD W13, W13, 0x1
	0x03A9A5EC STR X16, [X17 + 0x30]
	0x03A9A5F0 LDR X15, [X15 + 0x38]
	0x03A9A5F4 CMP X15, X14
	0x03A9A5F8 B.NE 0x3A9A578
	0x03A9A5FC LDR X14, [X19 + 0x80]
	0x03A9A600 CBZ X14, 0x3A9A640
	0x03A9A604 LDR W16, [X14 + 0x18]
	0x03A9A608 CMP W11, W16
	0x03A9A60C B.CS 0x3A9A654
	0x03A9A610 ADD W15, W11, 0x1
	0x03A9A614 ADD X17, X14, W11, 0x2, SXTW
	0x03A9A618 CMP W15, W16
	0x03A9A61C STR W9, [X17 + 0x20]
	0x03A9A620 B.CS 0x3A9A654
	0x03A9A624 ADD X14, X14, W15, 0x2, SXTW
	0x03A9A628 STR W13, [X14 + 0x20]
	0x03A9A62C LDR X14, [X19 + 0x10]
	0x03A9A630 ADD W10, W10, W13
	0x03A9A634 ADD W11, W11, 0x2
	0x03A9A638 ADD W9, W9, W13
	0x03A9A63C CBNZ X14, 0x3A9A550
	0x03A9A640 BL 0x1C16F20
	0x03A9A644 LDP X20, X19, [X31 + 0x20]
	0x03A9A648 LDR X30, [X31 + 0x10]
	0x03A9A64C ADD X31, X31, 0x30
	0x03A9A650 RET
	0x03A9A654 BL 0x1C16F28
	0x03A9A658 STR W11, [X19 + 0x78]
	0x03A9A65C BL 0x1C16F20
	0x03A9A660 STR X30, [X31 - 0x10]!
	0x03A9A664 CBZ X1, 0x3A9A6F4
	0x03A9A668 LDR X8, [X1 + 0x18]
	0x03A9A66C AND X9, X8, 0x0
	0x03A9A670 UBFM X10, X9, 0x20, 0x1F
	0x03A9A674 CMP X10, 0x1
	0x03A9A678 B.LT 0x3A9A6E4
	0x03A9A67C MOV W11, W8
	0x03A9A680 MOV X10, X31
	0x03A9A684 SXTW X11, W11
	0x03A9A688 ADD X12, X1, 0x24
	0x03A9A68C FMOV S0, W31
	0x03A9A690 MOVZ W13, 0x18
	0x03A9A694 CMP X9, X10
	0x03A9A698 B.EQ 0x3A9A6F0
	0x03A9A69C ADD X10, X10, 0x1
	0x03A9A6A0 SDIV W14, W10, W8
	0x03A9A6A4 MSUB W14, W14, W8, W10
	0x03A9A6A8 CMP W14, W8
	0x03A9A6AC B.CS 0x3A9A6F0
	0x03A9A6B0 SMADDL X14, X14, X13, X1
	0x03A9A6B4 LDP S1, S4, [X12 - 0x4]
	0x03A9A6B8 LDP S2, S3, [X14 + 0x20]
	0x03A9A6BC CMP X11, X10
	0x03A9A6C0 ADD X12, X12, 0x18
	0x03A9A6C4 FMUL S1, S1, S3
	0x03A9A6C8 FMUL S2, S4, S2
	0x03A9A6CC FADD S0, S0, S1
	0x03A9A6D0 FSUB S0, S0, S2
	0x03A9A6D4 B.NE 0x3A9A694
	0x03A9A6D8 FMOV S1, 0.5
	0x03A9A6DC FMUL S0, S0, S1
	0x03A9A6E0 B 0x3A9A6E8
	0x03A9A6E4 FMOV S0, W31
	0x03A9A6E8 LDR X30, [X31], #0x10
	0x03A9A6EC RET
	0x03A9A6F0 BL 0x1C16F28
	0x03A9A6F4 BL 0x1C16F20
	0x03A9A6F8 MOV W2, W31
	0x03A9A6FC B 0x3A9A700
	0x03A9A700 SUB X31, X31, 0x60
	0x03A9A704 STP X30, X27, [X31 + 0x10]
	0x03A9A708 STP X26, X25, [X31 + 0x20]
	0x03A9A70C STP X24, X23, [X31 + 0x30]
	0x03A9A710 STP X22, X21, [X31 + 0x40]
	0x03A9A714 STP X20, X19, [X31 + 0x50]
	0x03A9A718 ADRP X22, 0x948000
	0x03A9A71C LDRB W8, [X22 + 0x3CE]
	0x03A9A720 MOV W21, W2
	0x03A9A724 MOV X19, X1
	0x03A9A728 MOV X20, X0
	0x03A9A72C TBNZ X8, 0x0, 0x3A9A744
	0x03A9A730 ADRP X0, 0x6BD000
	0x03A9A734 LDR X0, [X0 + 0x730]
	0x03A9A738 BL 0x1C16CF4
	0x03A9A73C MOVZ W8, 0x1
	0x03A9A740 STRB W8, [X22 + 0x3CE]
	0x03A9A744 LDR X8, [X20 + 0x10]
	0x03A9A748 CBZ X8, 0x3A9A774
	0x03A9A74C CBZ W21, 0x3A9A794
	0x03A9A750 MOV X1, X19
	0x03A9A754 BL 0x3A9A660
	0x03A9A758 CMP W21, 0x1
	0x03A9A75C B.NE 0x3A9A7A0
	0x03A9A760 FCMP S0, 0x0
	0x03A9A764 B.PL 0x3A9A7A0
	0x03A9A768 MOVZ W22, 0x1
	0x03A9A76C CBNZ X19, 0x3A9A7B8
	0x03A9A770 B 0x3A9A8CC
	0x03A9A774 ADRP X8, 0x6BD000
	0x03A9A778 LDR X8, [X8 + 0x730]
	0x03A9A77C LDR X0, [X8]
	0x03A9A780 BL 0x1C16F10
	0x03A9A784 MOV X22, X0
	0x03A9A788 BL 0x3A95A98
	0x03A9A78C STR X22, [X20 + 0x10]
	0x03A9A790 CBNZ W21, 0x3A9A750
	0x03A9A794 MOV W22, W31
	0x03A9A798 CBNZ X19, 0x3A9A7B8
	0x03A9A79C B 0x3A9A8CC
	0x03A9A7A0 CMP W21, 0x2
	0x03A9A7A4 CSET W8, EQ
	0x03A9A7A8 FCMP S0, 0x0
	0x03A9A7AC CSET W9, GT
	0x03A9A7B0 AND W22, W8, W9, 0x0
	0x03A9A7B4 CBZ X19, 0x3A9A8CC
	0x03A9A7B8 LDR W8, [X19 + 0x18]
	0x03A9A7BC CMP W8, 0x1
	0x03A9A7C0 B.LT 0x3A9A8B0
	0x03A9A7C4 MOV W23, W31
	0x03A9A7C8 MOV X21, X31
	0x03A9A7CC MOVN W24, 0x0
	0x03A9A7D0 MOVZ W25, 0x18
	0x03A9A7D4 MOVZ W26, 0x1
	0x03A9A7D8 MOVN W27, 0x0
	0x03A9A7DC CBZ X21, 0x3A9A7F8
	0x03A9A7E0 LDR X8, [X20 + 0x10]
	0x03A9A7E4 CBZ X8, 0x3A9A8CC
	0x03A9A7E8 MOV X1, X21
	0x03A9A7EC BL 0x3A96354
	0x03A9A7F0 LDR X21, [X21 + 0x38]
	0x03A9A7F4 B 0x3A9A820
	0x03A9A7F8 LDR X0, [X20 + 0x10]
	0x03A9A7FC CBZ X0, 0x3A9A8CC
	0x03A9A800 BL 0x3A95D00
	0x03A9A804 CBZ X0, 0x3A9A8CC
	0x03A9A808 LDR X8, [X20 + 0x10]
	0x03A9A80C CBZ X8, 0x3A9A8CC
	0x03A9A810 LDR X2, [X0 + 0x28]
	0x03A9A814 MOV X1, X0
	0x03A9A818 MOV X21, X0
	0x03A9A81C BL 0x3A95F04
	0x03A9A820 MOV W8, W23
	0x03A9A824 CBZ W22, 0x3A9A830
	0x03A9A828 LDR W8, [X19 + 0x18]
	0x03A9A82C ADD W8, W27, W8
	0x03A9A830 CBZ X21, 0x3A9A8CC
	0x03A9A834 LDR W9, [X19 + 0x18]
	0x03A9A838 CMP W8, W9
	0x03A9A83C B.CS 0x3A9A8D0
	0x03A9A840 SMADDL X10, X8, X25, X19
	0x03A9A844 LDR X9, [X21 + 0x40]
	0x03A9A848 LDR W11, [X10 + 0x28]
	0x03A9A84C LDR X10, [X10 + 0x20]
	0x03A9A850 STR W11, [X31 + 0x8]
	0x03A9A854 STR X10, [X31]
	0x03A9A858 CBZ X9, 0x3A9A8CC
	0x03A9A85C LDR W10, [X31 + 0x8]
	0x03A9A860 LDR X11, [X31]
	0x03A9A864 STR W10, [X9 + 0x30]
	0x03A9A868 STR X11, [X9 + 0x28]
	0x03A9A86C LDR X9, [X19 + 0x18]
	0x03A9A870 CMP W8, W9
	0x03A9A874 B.CS 0x3A9A8D0
	0x03A9A878 LDR X10, [X21 + 0x40]
	0x03A9A87C CBZ X10, 0x3A9A8CC
	0x03A9A880 SXTW X8, W8
	0x03A9A884 MADD X8, X8, X25, X19
	0x03A9A888 LDR X8, [X8 + 0x30]
	0x03A9A88C STR X8, [X10 + 0x48]
	0x03A9A890 LDR X8, [X21 + 0x28]
	0x03A9A894 STR W26, [X21 + 0x58]
	0x03A9A898 CBZ X8, 0x3A9A8CC

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+32], D10
	003 Move [X31+48], D9
	004 Move [X31+56], D8
	005 Move [X31+64], X30
	006 Move [X31+72], X25
	007 Move [X31+80], X24
	008 Move [X31+88], X23
	009 Move [X31+96], X22
	010 Move [X31+104], X21
	011 Move [X31+112], X20
	012 Move [X31+120], X19
	013 Move X21, 0x949000
	014 Move W8, [X21+969]
	015 Move X19, X1
	016 Move X20, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {32}
	021 Move X0, 0x65A000
	022 Move X0, [X0+1592]
	023 Call 0x1C17CF4
	024 Move X0, 0x6BE000
	025 Move X0, [X0+1592]
	026 Call 0x1C17CF4
	027 Move X0, 0x6BE000
	028 Move X0, [X0+1832]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X21+969], W8
	032 Move [X31+24], W31
	033 Move [X31+16], X31
	034 Move X8, [X20+16]
	035 Compare X8, 0
	036 JumpIfEqual {366}
	037 Move X8, [X8+16]
	038 Compare X8, 0
	039 JumpIfEqual {366}
	040 Move X24, 0x65A000
	041 Move X24, [X24+1592]
	042 Move X23, [X8+24]
	043 Move W1, 3
	044 Move X0, [X24]
	045 Call 0x1C17D6C
	046 Compare X23, 0
	047 JumpIfEqual {366}
	048 Move X21, X0
	049 Compare X0, 0
	050 JumpIfEqual {366}
	051 Move W8, [X21+24]
	052 Compare W8, 0
	053 JumpIfEqual {401}
	054 Move V0, [X23+40]
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Move [X21+32], S0
	057 Move V0, [X23+44]
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Move [X21+36], S0
	060 Move V0, [X23+48]
	061 Move X25, 0x6BE000
	062 Move X25, [X25+1832]
	063 Move W1, 3
	064 Move [X21+40], S0
	065 Move X0, [X25]
	066 Call 0x1C17D6C
	067 Compare X0, 0
	068 JumpIfEqual {366}
	069 Move X8, [X0]
	070 Move X22, X0
	071 Move X0, X23
	072 Move X1, [X8+64]
	073 Call 0x1C17E00
	074 Compare X0, 0
	075 JumpIfEqual {402}
	076 Move W8, [X22+24]
	077 Compare W8, 0
	078 JumpIfEqual {401}
	079 Move X8, [X22]
	080 Move [X22+32], X23
	081 Move X0, X23
	082 Move X1, [X8+64]
	083 Call 0x1C17E00
	084 Compare X0, 0
	085 JumpIfEqual {402}
	086 Move W8, [X22+24]
	087 NotImplemented "Instruction CMP not yet implemented."
	088 Move X8, [X22]
	089 Move [X22+40], X23
	090 Move X0, X23
	091 Move X1, [X8+64]
	092 Call 0x1C17E00
	093 Compare X0, 0
	094 JumpIfEqual {402}
	095 Move W8, [X22+24]
	096 NotImplemented "Instruction CMP not yet implemented."
	097 Move [X22+48], X23
	098 Move X0, [X24]
	099 Move W1, 3
	100 Call 0x1C17D6C
	101 Compare X0, 0
	102 JumpIfEqual {366}
	103 Move W8, [X0+24]
	104 Move X24, X0
	105 Compare W8, 0
	106 JumpIfEqual {401}
	107 Move V0, [X23+40]
	108 NotImplemented "Instruction CMP not yet implemented."
	109 Move [X24+32], S0
	110 Move V0, [X23+44]
	111 NotImplemented "Instruction CMP not yet implemented."
	112 Move [X24+36], S0
	113 Move V0, [X23+48]
	114 Move W1, 3
	115 Move [X24+40], S0
	116 Move X0, [X25]
	117 Call 0x1C17D6C
	118 Compare X0, 0
	119 JumpIfEqual {366}
	120 Move X8, [X0]
	121 Move X25, X0
	122 Move X0, X23
	123 Move X1, [X8+64]
	124 Call 0x1C17E00
	125 Compare X0, 0
	126 JumpIfEqual {402}
	127 Move W8, [X25+24]
	128 Compare W8, 0
	129 JumpIfEqual {401}
	130 Move X8, [X25]
	131 Move [X25+32], X23
	132 Move X0, X23
	133 Move X1, [X8+64]
	134 Call 0x1C17E00
	135 Compare X0, 0
	136 JumpIfEqual {402}
	137 Move W8, [X25+24]
	138 NotImplemented "Instruction CMP not yet implemented."
	139 Move X8, [X25]
	140 Move [X25+40], X23
	141 Move X0, X23
	142 Move X1, [X8+64]
	143 Call 0x1C17E00
	144 Compare X0, 0
	145 JumpIfEqual {402}
	146 Move W8, [X25+24]
	147 NotImplemented "Instruction CMP not yet implemented."
	148 Move [X25+48], X23
	149 Move X8, [X20+16]
	150 Compare X8, 0
	151 JumpIfEqual {366}
	152 Move X9, [X8+16]
	153 NotImplemented "Instruction CMP not yet implemented."
	154 Compare X23, 0
	155 JumpIfEqual {366}
	156 Move W8, [X21+24]
	157 Compare W8, 0
	158 JumpIfEqual {401}
	159 Move V0, [X23+40]
	160 Move V1, [X21+32]
	161 NotImplemented "Instruction FCMP not yet implemented."
	162 Move [X21+32], S0
	163 Move X8, [X22]
	164 Move X0, X23
	165 Move X1, [X8+64]
	166 Call 0x1C17E00
	167 Compare X0, 0
	168 JumpIfEqual {402}
	169 Move W8, [X22+24]
	170 Compare W8, 0
	171 JumpIfEqual {401}
	172 Move [X22+32], X23
	173 Move W8, [X21+24]
	174 NotImplemented "Instruction CMP not yet implemented."
	175 Move V0, [X23+44]
	176 Move V1, [X21+36]
	177 NotImplemented "Instruction FCMP not yet implemented."
	178 Move [X21+36], S0
	179 Move X8, [X22]
	180 Move X0, X23
	181 Move X1, [X8+64]
	182 Call 0x1C17E00
	183 Compare X0, 0
	184 JumpIfEqual {402}
	185 Move W8, [X22+24]
	186 NotImplemented "Instruction CMP not yet implemented."
	187 Move [X22+40], X23
	188 Move W8, [X21+24]
	189 NotImplemented "Instruction CMP not yet implemented."
	190 Move V0, [X23+48]
	191 Move V1, [X21+40]
	192 NotImplemented "Instruction FCMP not yet implemented."
	193 Move [X21+40], S0
	194 Move X8, [X22]
	195 Move X0, X23
	196 Move X1, [X8+64]
	197 Call 0x1C17E00
	198 Compare X0, 0
	199 JumpIfEqual {402}
	200 Move W8, [X22+24]
	201 NotImplemented "Instruction CMP not yet implemented."
	202 Move [X22+48], X23
	203 Move W8, [X24+24]
	204 Compare W8, 0
	205 JumpIfEqual {401}
	206 Move V0, [X23+40]
	207 Move V1, [X24+32]
	208 NotImplemented "Instruction FCMP not yet implemented."
	209 Move [X24+32], S0
	210 Move X8, [X25]
	211 Move X0, X23
	212 Move X1, [X8+64]
	213 Call 0x1C17E00
	214 Compare X0, 0
	215 JumpIfEqual {402}
	216 Move W8, [X25+24]
	217 Compare W8, 0
	218 JumpIfEqual {401}
	219 Move [X25+32], X23
	220 Move W8, [X24+24]
	221 NotImplemented "Instruction CMP not yet implemented."
	222 Move V0, [X23+44]
	223 Move V1, [X24+36]
	224 NotImplemented "Instruction FCMP not yet implemented."
	225 Move [X24+36], S0
	226 Move X8, [X25]
	227 Move X0, X23
	228 Move X1, [X8+64]
	229 Call 0x1C17E00
	230 Compare X0, 0
	231 JumpIfEqual {402}
	232 Move W8, [X25+24]
	233 NotImplemented "Instruction CMP not yet implemented."
	234 Move [X25+40], X23
	235 Move W8, [X24+24]
	236 NotImplemented "Instruction CMP not yet implemented."
	237 Move V0, [X23+48]
	238 Move V1, [X24+40]
	239 NotImplemented "Instruction FCMP not yet implemented."
	240 Move [X24+40], S0
	241 Move X8, [X25]
	242 Move X0, X23
	243 Move X1, [X8+64]
	244 Call 0x1C17E00
	245 Compare X0, 0
	246 JumpIfEqual {402}
	247 Move W8, [X25+24]
	248 NotImplemented "Instruction CMP not yet implemented."
	249 Move [X25+48], X23
	250 Move X8, [X20+16]
	251 Move X23, [X23+24]
	252 Compare X8, 0
	253 JumpIfNotEqual {152}
	254 Move W9, [X24+24]
	255 NotImplemented "Instruction CMP not yet implemented."
	256 Move W10, [X21+24]
	257 NotImplemented "Instruction CMP not yet implemented."
	258 NotImplemented "Instruction CMP not yet implemented."
	259 NotImplemented "Instruction CMP not yet implemented."
	260 Move V0, [X24+32]
	261 Move V1, [X21+32]
	262 Subtract V0, V0, V1
	263 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	264 NotImplemented "Instruction INVALID not yet implemented."
	265 Move W11, S0
	266 And W11, W11, 1
	267 NotImplemented "Instruction CMP not yet implemented."
	268 NotImplemented "Instruction CMP not yet implemented."
	269 Move W12, W11
	270 Add X13, X24, X12
	271 Add X12, X21, X12
	272 Move V0, [X24+40]
	273 Move V1, [X21+40]
	274 Move V2, [X13+32]
	275 Move V3, [X12+32]
	276 Move W12, 2
	277 Subtract S0, S0, S1
	278 Subtract S1, S2, S3
	279 NotImplemented "Instruction FCMP not yet implemented."
	280 NotImplemented "Instruction CSEL not yet implemented."
	281 NotImplemented "Instruction CMP not yet implemented."
	282 NotImplemented "Instruction CMP not yet implemented."
	283 Add X9, X21, X11
	284 Add X10, X24, X11
	285 Move V0, [X9+32]
	286 Move V1, [X10+32]
	287 NotImplemented "Instruction FCMP not yet implemented."
	288 Move W9, [X22+24]
	289 NotImplemented "Instruction CMP not yet implemented."
	290 Move W9, [X25+24]
	291 NotImplemented "Instruction CMP not yet implemented."
	292 Add X9, X22, X11
	293 Move X23, [X9+32]
	294 Compare X23, 0
	295 JumpIfEqual {366}
	296 Add X9, X25, X11
	297 Move X22, [X9+32]
	298 Compare X22, 0
	299 JumpIfEqual {366}
	300 Move X21, 0x6BE000
	301 Move X21, [X21+1592]
	302 Move X0, [X21]
	303 Move W9, [X0+224]
	304 Compare W9, 0
	305 JumpIfNotEqual {308}
	306 Call 0x1C17DFC
	307 Move X8, [X20+16]
	308 Move V0, [X23+40]
	309 Move V1, [X22+40]
	310 Subtract V6, V0, V1
	311 Move [X31+16], D6
	312 Move V0, [X23+48]
	313 Move V1, [X22+48]
	314 Subtract S8, S0, S1
	315 Move [X31+24], S8
	316 Compare X8, 0
	317 JumpIfEqual {366}
	318 Move X23, [X8+16]
	319 Compare X23, 0
	320 JumpIfEqual {366}
	321 Move S9, V6.S[1]
	322 Move S10, W31
	323 Move [X31], V6
	324 Move X23, [X23+24]
	325 Move X8, [X8+16]
	326 NotImplemented "Instruction CMP not yet implemented."
	327 Compare X23, 0
	328 JumpIfEqual {366}
	329 Move X0, [X21]
	330 Move W8, [X0+224]
	331 Compare W8, 0
	332 JumpIfNotEqual {335}
	333 Call 0x1C17DFC
	334 Move V6, [X31]
	335 Move S0, [X23+40]
	336 Move S1, [X23+44]
	337 Move S2, [X22+40]
	338 Move S3, [X22+44]
	339 Move V4, [X23+48]
	340 Move V5, [X22+48]
	341 Subtract S1, S1, S3
	342 Subtract S2, S0, S2
	343 Subtract S3, S4, S5
	344 Multiply S0, S9, S3
	345 Multiply S4, S8, S1
	346 Subtract S0, S0, S4
	347 Multiply S4, S8, S2
	348 Multiply S3, S6, S3
	349 Multiply S1, S6, S1
	350 Multiply S5, S9, S2
	351 Subtract S2, S4, S3
	352 Subtract S1, S1, S5
	353 Multiply S3, S0, S0
	354 Multiply S4, S2, S2
	355 Add S3, S3, S4
	356 Multiply S4, S1, S1
	357 Add S3, S4, S3
	358 NotImplemented "Instruction FCMP not yet implemented."
	359 Move V10, V3
	360 Move [X19], S0
	361 Move [X19+8], S2
	362 Move [X19+8], S1
	363 Move X8, [X20+16]
	364 Compare X8, 0
	365 JumpIfNotEqual {324}
	366 Call 0x1C17F20
	367 Move W8, 0x3F800000
	368 Move [X19], X31
	369 Move [X19+8], W8
	370 NotImplemented "Instruction FCMP not yet implemented."
	371 Move X0, [X21]
	372 Move W8, [X0+224]
	373 Compare W8, 0
	374 JumpIfNotEqual {377}
	375 Call 0x1C17DFC
	376 Move X0, [X21]
	377 Move X8, [X0+184]
	378 Add X0, X31, 16
	379 Move W9, [X8+8]
	380 Move X8, [X8]
	381 Move [X19+8], W9
	382 Move [X19], X8
	383 Call Vec3.LongAxis, X0
	384 Move W1, W0
	385 Move S0, 1
	386 Move X0, X19
	387 Call Vec3.set_Item, X0, X1, V0
	388 Move X20, [X31+112]
	389 Move X19, [X31+120]
	390 Move X22, [X31+96]
	391 Move X21, [X31+104]
	392 Move X24, [X31+80]
	393 Move X23, [X31+88]
	394 Move X30, [X31+64]
	395 Move X25, [X31+72]
	396 Move D9, [X31+48]
	397 Move D8, [X31+56]
	398 Move V10, [X31+32]
	399 Add X31, X31, 128
	400 Return 
	401 Call 0x1C17F28
	402 Call 0x1C17F44
	403 Move X1, X31
	404 Call 0x1C17DEC

Method: System.Void CheckOrientation()

Disassembly:
	0x03A9A89C ADD W23, W23, 0x1
	0x03A9A8A0 CMP W23, W9
	0x03A9A8A4 SUB W27, W27, 0x1
	0x03A9A8A8 STR W24, [X8 + 0x58]
	0x03A9A8AC B.LT 0x3A9A7DC
	0x03A9A8B0 LDP X20, X19, [X31 + 0x50]
	0x03A9A8B4 LDP X22, X21, [X31 + 0x40]
	0x03A9A8B8 LDP X24, X23, [X31 + 0x30]
	0x03A9A8BC LDP X26, X25, [X31 + 0x20]
	0x03A9A8C0 LDP X30, X27, [X31 + 0x10]
	0x03A9A8C4 ADD X31, X31, 0x60
	0x03A9A8C8 RET
	0x03A9A8CC BL 0x1C16F20
	0x03A9A8D0 BL 0x1C16F28
	0x03A9A8D4 MOV X4, X31
	0x03A9A8D8 B 0x3A9A8DC
	0x03A9A8DC STP X30, X25, [X31 - 0x40]!
	0x03A9A8E0 STP X24, X23, [X31 + 0x10]
	0x03A9A8E4 STP X22, X21, [X31 + 0x20]
	0x03A9A8E8 STP X20, X19, [X31 + 0x30]
	0x03A9A8EC ADRP X25, 0x948000
	0x03A9A8F0 ADRP X24, 0x6BD000
	0x03A9A8F4 LDRB W8, [X25 + 0x3CF]
	0x03A9A8F8 LDR X24, [X24 + 0x638]
	0x03A9A8FC MOV X22, X4
	0x03A9A900 MOV W20, W3
	0x03A9A904 MOV W21, W2
	0x03A9A908 MOV W23, W1
	0x03A9A90C MOV X19, X0
	0x03A9A910 TBNZ X8, 0x0, 0x3A9A934
	0x03A9A914 ADRP X0, 0x6BD000
	0x03A9A918 LDR X0, [X0 + 0x738]
	0x03A9A91C BL 0x1C16CF4
	0x03A9A920 ADRP X0, 0x6BD000
	0x03A9A924 LDR X0, [X0 + 0x638]
	0x03A9A928 BL 0x1C16CF4
	0x03A9A92C MOVZ W8, 0x1
	0x03A9A930 STRB W8, [X25 + 0x3CF]
	0x03A9A934 LDR X0, [X24]
	0x03A9A938 LDR W8, [X0 + 0xE0]
	0x03A9A93C CBNZ W8, 0x3A9A948
	0x03A9A940 BL 0x1C16DFC
	0x03A9A944 LDR X0, [X24]
	0x03A9A948 LDR X8, [X0 + 0xB8]
	0x03A9A94C LDR X9, [X19 + 0x10]
	0x03A9A950 LDR W10, [X8 + 0x8]
	0x03A9A954 LDR X8, [X8]
	0x03A9A958 STR X31, [X19 + 0x80]
	0x03A9A95C STR W23, [X19 + 0x4C]
	0x03A9A960 STR W10, [X19 + 0x20]
	0x03A9A964 STR X8, [X19 + 0x18]
	0x03A9A968 STP X22, X31, [X19 + 0x68]
	0x03A9A96C CBZ X9, 0x3A9A9E0
	0x03A9A970 MOV X0, X19
	0x03A9A974 BL 0x3A99998
	0x03A9A978 MOV X0, X19
	0x03A9A97C BL 0x3A99094
	0x03A9A980 CMP W21, 0x2
	0x03A9A984 B.NE 0x3A9A9A4
	0x03A9A988 MOVZ W1, 0x1
	0x03A9A98C MOVZ W2, 0x1
	0x03A9A990 MOV X0, X19
	0x03A9A994 BL 0x3A99F3C

ISIL:
	001 Move [X31-32], D8
	002 Move [X31+8], X30
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x949000
	006 Move W8, [X20+970]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x6BE000
	013 Move X0, [X0+1592]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+970], W8
	017 Move X8, [X19+16]
	018 Compare X8, 0
	019 JumpIfEqual {70}
	020 Move X20, [X8+24]
	021 Compare X20, 0
	022 JumpIfEqual {70}
	023 Move S8, W31
	024 Move X20, [X20+24]
	025 Move X9, [X8+24]
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Compare X20, 0
	028 JumpIfEqual {70}
	029 Move X9, [X20+32]
	030 Compare X9, 0
	031 JumpIfEqual {70}
	032 Move W9, [X9+88]
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move X0, X20
	035 Call MeshUtils.FaceArea, X0
	036 Move X8, [X19+16]
	037 Add S8, S8, S0
	038 Compare X8, 0
	039 JumpIfNotEqual {24}
	040 NotImplemented "Instruction FCMP not yet implemented."
	041 Move X8, [X8+16]
	042 Compare X8, 0
	043 JumpIfEqual {70}
	044 Move X9, [X8+24]
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Compare X9, 0
	047 JumpIfEqual {70}
	048 Move V0, [X9+56]
	049 NotImplemented "Instruction FNEG not yet implemented."
	050 Move [X9+56], S0
	051 Move X9, [X9+24]
	052 Move X8, 0x6BE000
	053 Move X8, [X8+1592]
	054 Move X0, [X8]
	055 Move W8, [X0+224]
	056 Compare W8, 0
	057 JumpIfNotEqual {59}
	058 Call 0x1C17DFC
	059 Move V0, [X19+48]
	060 Move V1, [X19+56]
	061 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	062 NotImplemented "Instruction FNEG not yet implemented."
	063 Move [X19+48], D0
	064 Move [X19+56], S1
	065 Move X20, [X31+16]
	066 Move X19, [X31+24]
	067 Move X30, [X31+8]
	068 Move V8, [X31+32]
	069 Return 
	070 Call 0x1C17F20

Method: System.Void ProjectPolygon()

Disassembly:
	0x03A9A998 MOV X0, X19
	0x03A9A99C BL 0x3A9A450
	0x03A9A9A0 B 0x3A9A9BC
	0x03A9A9A4 MOV X0, X19
	0x03A9A9A8 BL 0x3A99E80
	0x03A9A9AC MOV X0, X19
	0x03A9A9B0 MOV W1, W21
	0x03A9A9B4 MOV W2, W20
	0x03A9A9B8 BL 0x3A9A020
	0x03A9A9BC LDRB W8, [X19 + 0x99]
	0x03A9A9C0 CBZ W8, 0x3A9A9DC
	0x03A9A9C4 LDR X0, [X19 + 0x10]
	0x03A9A9C8 CBZ X0, 0x3A9A9F4
	0x03A9A9CC ADRP X8, 0x6BD000
	0x03A9A9D0 LDR X8, [X8 + 0x738]
	0x03A9A9D4 LDR X1, [X8]
	0x03A9A9D8 BL 0x24A6F24
	0x03A9A9DC STR X31, [X19 + 0x10]
	0x03A9A9E0 LDP X20, X19, [X31 + 0x30]
	0x03A9A9E4 LDP X22, X21, [X31 + 0x20]
	0x03A9A9E8 LDP X24, X23, [X31 + 0x10]
	0x03A9A9EC LDP X30, X25, [X31], #0x40
	0x03A9A9F0 RET
	0x03A9A9F4 BL 0x1C16F20
	0x03A9A9F8 MOV X1, X31
	0x03A9A9FC B 0x33BDD8C
	0x03A9AA00 SUB X31, X31, 0x40
	0x03A9AA04 STR X30, [X31 + 0x10]
	0x03A9AA08 STP X22, X21, [X31 + 0x20]
	0x03A9AA0C STP X20, X19, [X31 + 0x30]
	0x03A9AA10 ADRP X22, 0x948000
	0x03A9AA14 ADRP X21, 0x6BD000
	0x03A9AA18 ADRP X20, 0x683000
	0x03A9AA1C LDRB W8, [X22 + 0x3D9]
	0x03A9AA20 LDR X21, [X21 + 0x638]
	0x03A9AA24 LDR X20, [X20 + 0x278]
	0x03A9AA28 MOV X19, X0
	0x03A9AA2C TBNZ X8, 0x0, 0x3A9AA50
	0x03A9AA30 ADRP X0, 0x6BD000
	0x03A9AA34 LDR X0, [X0 + 0x638]
	0x03A9AA38 BL 0x1C16CF4
	0x03A9AA3C ADRP X0, 0x683000
	0x03A9AA40 LDR X0, [X0 + 0x278]
	0x03A9AA44 BL 0x1C16CF4
	0x03A9AA48 MOVZ W8, 0x1
	0x03A9AA4C STRB W8, [X22 + 0x3D9]
	0x03A9AA50 LDR W8, [X19 + 0x8]
	0x03A9AA54 LDR X9, [X19]
	0x03A9AA58 LDR X0, [X21]
	0x03A9AA5C ADD X1, X31, 0x0
	0x03A9AA60 STR W8, [X31 + 0x8]
	0x03A9AA64 STR X9, [X31]
	0x03A9AA68 BL 0x1C16E04
	0x03A9AA6C LDR X8, [X20]
	0x03A9AA70 LDR X2, [X19 + 0x10]
	0x03A9AA74 MOV X1, X0
	0x03A9AA78 MOV X3, X31
	0x03A9AA7C MOV X0, X8
	0x03A9AA80 BL 0x3227BD4
	0x03A9AA84 LDP X20, X19, [X31 + 0x30]
	0x03A9AA88 LDP X22, X21, [X31 + 0x20]
	0x03A9AA8C LDR X30, [X31 + 0x10]
	0x03A9AA90 ADD X31, X31, 0x40
	0x03A9AA94 RET
	0x03A9AA98 STP X30, X21, [X31 - 0x20]!
	0x03A9AA9C STP X20, X19, [X31 + 0x10]
	0x03A9AAA0 LDR X8, [X2 + 0x8]
	0x03A9AAA4 STP X1, X2, [X0 + 0x20]
	0x03A9AAA8 MOV X19, X0
	0x03A9AAAC MOV X20, X1
	0x03A9AAB0 STR X8, [X0 + 0x10]
	0x03A9AAB4 LDRB W21, [X2 + 0x52]
	0x03A9AAB8 STR X0, [X0 + 0x40]
	0x03A9AABC MOV X0, X2
	0x03A9AAC0 BL 0x1C16D84
	0x03A9AAC4 TBZ X0, 0x0, 0x3A9AAE0
	0x03A9AAC8 CMP W21, 0x3
	0x03A9AACC B.NE 0x3A9AAE4
	0x03A9AAD0 ADRP X8, 0xFFFFFFFFFE161000
	0x03A9AAD4 ADD X8, X8, 0xDF0
	0x03A9AAD8 STR X8, [X19 + 0x18]
	0x03A9AADC B 0x3A9AAF4
	0x03A9AAE0 CBZ X20, 0x3A9AB0C
	0x03A9AAE4 LDR X8, [X19 + 0x10]
	0x03A9AAE8 LDR X9, [X19 + 0x20]
	0x03A9AAEC STR X8, [X19 + 0x18]
	0x03A9AAF0 STR X9, [X19 + 0x40]
	0x03A9AAF4 ADRP X8, 0xFFFFFFFFFE161000
	0x03A9AAF8 ADD X8, X8, 0xD68
	0x03A9AAFC STR X8, [X19 + 0x38]
	0x03A9AB00 LDP X20, X19, [X31 + 0x10]
	0x03A9AB04 LDP X30, X21, [X31], #0x20
	0x03A9AB08 RET
	0x03A9AB0C ADRP X1, 0xFFFFFFFFFD081000
	0x03A9AB10 ADD X1, X1, 0xEE3
	0x03A9AB14 MOV X0, X31
	0x03A9AB18 BL 0x1C16F3C
	0x03A9AB1C MOV X1, X31
	0x03A9AB20 BL 0x1C16DEC
	0x03A9AB24 LDR X8, [X0 + 0x40]
	0x03A9AB28 LDR X4, [X0 + 0x18]
	0x03A9AB2C LDR X3, [X0 + 0x28]
	0x03A9AB30 MOV X0, X8
	0x03A9AB34 BR X4
	0x03A9AB38 SUB X31, X31, 0x70
	0x03A9AB3C STP X30, X25, [X31 + 0x30]
	0x03A9AB40 STP X24, X23, [X31 + 0x40]
	0x03A9AB44 STP X22, X21, [X31 + 0x50]
	0x03A9AB48 STP X20, X19, [X31 + 0x60]
	0x03A9AB4C ADRP X25, 0x948000
	0x03A9AB50 STP S0, S1, [X31 + 0x20]
	0x03A9AB54 STR S2, [X31 + 0x28]
	0x03A9AB58 ADRP X24, 0x6BD000
	0x03A9AB5C LDRB W8, [X25 + 0x3DA]
	0x03A9AB60 LDR X24, [X24 + 0x638]
	0x03A9AB64 MOV X19, X4
	0x03A9AB68 MOV X20, X3
	0x03A9AB6C MOV X21, X2
	0x03A9AB70 MOV X23, X1
	0x03A9AB74 MOV X22, X0
	0x03A9AB78 TBNZ X8, 0x0, 0x3A9AB90
	0x03A9AB7C ADRP X0, 0x6BD000
	0x03A9AB80 LDR X0, [X0 + 0x638]
	0x03A9AB84 BL 0x1C16CF4
	0x03A9AB88 MOVZ W8, 0x1
	0x03A9AB8C STRB W8, [X25 + 0x3DA]
	0x03A9AB90 LDR X0, [X24]
	0x03A9AB94 MOVI V0.2D, 0x0
	0x03A9AB98 ADD X1, X31, 0x20
	0x03A9AB9C STP V0, V0, [X31]
	0x03A9ABA0 BL 0x1C16E04
	0x03A9ABA4 STP X0, X23, [X31]
	0x03A9ABA8 ADD X1, X31, 0x0
	0x03A9ABAC MOV X0, X22
	0x03A9ABB0 MOV X2, X20
	0x03A9ABB4 MOV X3, X19
	0x03A9ABB8 STR X21, [X31 + 0x10]
	0x03A9ABBC BL 0x1C16CB0
	0x03A9ABC0 LDP X20, X19, [X31 + 0x60]
	0x03A9ABC4 LDP X22, X21, [X31 + 0x50]
	0x03A9ABC8 LDP X24, X23, [X31 + 0x40]
	0x03A9ABCC LDP X30, X25, [X31 + 0x30]
	0x03A9ABD0 ADD X31, X31, 0x70
	0x03A9ABD4 RET
	0x03A9ABD8 MOV X0, X1
	0x03A9ABDC MOV X1, X31
	0x03A9ABE0 B 0x1C16CB4
	0x03A9ABE4 STR X30, [X31 - 0x20]!
	0x03A9ABE8 STP X20, X19, [X31 + 0x10]
	0x03A9ABEC ADRP X19, 0x948000
	0x03A9ABF0 ADRP X20, 0x6BD000
	0x03A9ABF4 LDRB W8, [X19 + 0x3DB]
	0x03A9ABF8 LDR X20, [X20 + 0x740]
	0x03A9ABFC TBNZ X8, 0x0, 0x3A9AC14
	0x03A9AC00 ADRP X0, 0x6BD000
	0x03A9AC04 LDR X0, [X0 + 0x740]
	0x03A9AC08 BL 0x1C16CF4
	0x03A9AC0C MOVZ W8, 0x1
	0x03A9AC10 STRB W8, [X19 + 0x3DB]
	0x03A9AC14 LDR X8, [X20]
	0x03A9AC18 LDP X20, X19, [X31 + 0x10]
	0x03A9AC1C LDR X8, [X8 + 0xB8]
	0x03A9AC20 LDRB W0, [X8]
	0x03A9AC24 LDR X30, [X31], #0x20
	0x03A9AC28 RET
	0x03A9AC2C STP X30, X21, [X31 - 0x20]!
	0x03A9AC30 STP X20, X19, [X31 + 0x10]
	0x03A9AC34 ADRP X21, 0x948000
	0x03A9AC38 ADRP X20, 0x6BD000
	0x03A9AC3C LDRB W8, [X21 + 0x3DC]
	0x03A9AC40 LDR X20, [X20 + 0x740]
	0x03A9AC44 MOV W19, W0
	0x03A9AC48 TBNZ X8, 0x0, 0x3A9AC60
	0x03A9AC4C ADRP X0, 0x6BD000
	0x03A9AC50 LDR X0, [X0 + 0x740]
	0x03A9AC54 BL 0x1C16CF4
	0x03A9AC58 MOVZ W8, 0x1
	0x03A9AC5C STRB W8, [X21 + 0x3DC]
	0x03A9AC60 LDR X8, [X20]
	0x03A9AC64 AND W9, W19, 0x1
	0x03A9AC68 LDP X20, X19, [X31 + 0x10]
	0x03A9AC6C LDR X8, [X8 + 0xB8]
	0x03A9AC70 STRB W9, [X8]
	0x03A9AC74 LDP X30, X21, [X31], #0x20
	0x03A9AC78 RET
	0x03A9AC7C STR X30, [X31 - 0x20]!
	0x03A9AC80 STP X20, X19, [X31 + 0x10]
	0x03A9AC84 ADRP X19, 0x948000
	0x03A9AC88 ADRP X20, 0x6BD000
	0x03A9AC8C LDRB W8, [X19 + 0x3DD]
	0x03A9AC90 LDR X20, [X20 + 0x740]
	0x03A9AC94 TBNZ X8, 0x0, 0x3A9ACAC
	0x03A9AC98 ADRP X0, 0x6BD000
	0x03A9AC9C LDR X0, [X0 + 0x740]
	0x03A9ACA0 BL 0x1C16CF4
	0x03A9ACA4 MOVZ W8, 0x1

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+16], D8
	003 Move [X31+32], X30
	004 Move [X31+40], X25
	005 Move [X31+48], X24
	006 Move [X31+56], X23
	007 Move [X31+64], X22
	008 Move [X31+72], X21
	009 Move [X31+80], X20
	010 Move [X31+88], X19
	011 Move X20, 0x949000
	012 Move W8, [X20+971]
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0x6BE000
	019 Move X0, [X0+1592]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X20+971], W8
	023 Move X20, X19
	024 Add X20, X20, 24
	025 Move X8, [X20]
	026 Move X24, 0x6BE000
	027 Move W9, [X20+8]
	028 Move [X31], X8
	029 Move V0, [X31]
	030 Move X24, [X24+1592]
	031 Move [X31+8], W9
	032 NotImplemented "Instruction FCMP not yet implemented."
	033 Move V0, [X31+4]
	034 Move W25, W31
	035 NotImplemented "Instruction FCMP not yet implemented."
	036 Move V0, [X31+8]
	037 NotImplemented "Instruction FCMP not yet implemented."
	038 Add X1, X31, 0
	039 Move X0, X19
	040 Call Tess.ComputeNormal, X0, X1
	041 Move W8, [X31+8]
	042 Move X9, [X31]
	043 Move W25, 1
	044 Move [X20+8], W8
	045 Move [X20], X9
	046 Move W25, W31
	047 Move X0, [X24]
	048 Move W8, [X0+224]
	049 Compare W8, 0
	050 JumpIfNotEqual {52}
	051 Call 0x1C17DFC
	052 Add X0, X31, 0
	053 Call Vec3.LongAxis, X0
	054 Move W20, W0
	055 Add X22, X19, 36
	056 Move S0, W31
	057 Move X0, X22
	058 Move W1, W20
	059 Call Vec3.set_Item, X0, X1, V0
	060 Move W21, 0x5556
	061 Add W8, W20, 1
	062 NotImplemented "Instruction MOVK not yet implemented."
	063 NotImplemented "Instruction SMADDL not yet implemented."
	064 Move X10, X9
	065 ShiftRight X10, 63
	066 And X10, X10, 0x7FFFFFFF
	067 Move X9, X9
	068 ShiftRight X9, 32
	069 And X9, X9, 0x7FFFFFFF
	070 Move V0, [X19+140]
	071 Add W9, W9, W10
	072 Add W9, W9, W9
	073 Subtract W23, W8, W9
	074 Move X0, X22
	075 Move W1, W23
	076 Call Vec3.set_Item, X0, X1, V0
	077 Add W8, W20, 2
	078 NotImplemented "Instruction SMADDL not yet implemented."
	079 Move X10, X9
	080 ShiftRight X10, 63
	081 And X10, X10, 0x7FFFFFFF
	082 Move X9, X9
	083 ShiftRight X9, 32
	084 And X9, X9, 0x7FFFFFFF
	085 Move V0, [X19+144]
	086 Add W9, W9, W10
	087 Add W9, W9, W9
	088 Subtract W21, W8, W9
	089 Move X0, X22
	090 Move W1, W21
	091 Call Vec3.set_Item, X0, X1, V0
	092 Add X22, X19, 48
	093 Move S0, W31
	094 Move X0, X22
	095 Move W1, W20
	096 Call Vec3.set_Item, X0, X1, V0
	097 Add X0, X31, 0
	098 Move W1, W20
	099 Call Vec3.get_Item, X0, X1
	100 Move X0, [X24]
	101 Move V1, [X19+144]
	102 NotImplemented "Instruction FCMP not yet implemented."
	103 Move W8, [X0+224]
	104 NotImplemented "Instruction FNEG not yet implemented."
	105 NotImplemented "Instruction FCSEL not yet implemented."
	106 Compare W8, 0
	107 JumpIfNotEqual {109}
	108 Call 0x1C17DFC
	109 Move X0, X22
	110 Move W1, W23
	111 Move V0, V8
	112 Call Vec3.set_Item, X0, X1, V0
	113 Add X0, X31, 0
	114 Move W1, W20
	115 Call Vec3.get_Item, X0, X1
	116 Move X0, [X24]
	117 Move V1, [X19+140]
	118 NotImplemented "Instruction FCMP not yet implemented."
	119 Move W8, [X0+224]
	120 NotImplemented "Instruction FNEG not yet implemented."
	121 NotImplemented "Instruction FCSEL not yet implemented."
	122 Compare W8, 0
	123 JumpIfNotEqual {125}
	124 Call 0x1C17DFC
	125 Move X0, X22
	126 Move W1, W21
	127 Move V0, V8
	128 Call Vec3.set_Item, X0, X1, V0
	129 Move X8, [X19+16]
	130 Compare X8, 0
	131 JumpIfEqual {221}
	132 Move X20, [X8+16]
	133 Compare X20, 0
	134 JumpIfEqual {221}
	135 Move X20, [X20+24]
	136 Move X9, [X8+16]
	137 NotImplemented "Instruction CMP not yet implemented."
	138 Compare X20, 0
	139 JumpIfEqual {221}
	140 Move X0, [X24]
	141 Move W9, [X0+224]
	142 Compare W9, 0
	143 JumpIfNotEqual {146}
	144 Call 0x1C17DFC
	145 Move X8, [X19+16]
	146 Move S0, [X20+40]
	147 Move S1, [X20+44]
	148 Move S2, [X19+36]
	149 Move S3, [X19+40]
	150 Move V4, [X20+48]
	151 Move V5, [X19+44]
	152 Multiply S2, S0, S2
	153 Multiply S3, S1, S3
	154 Multiply S5, S4, S5
	155 Add S2, S2, S3
	156 Add S2, S2, S5
	157 Move [X20+52], S2
	158 Move S2, [X19+48]
	159 Move S3, [X19+52]
	160 Move V5, [X19+56]
	161 Multiply S0, S0, S2
	162 Multiply S1, S1, S3
	163 Add S0, S0, S1
	164 Multiply S1, S4, S5
	165 Add S0, S0, S1
	166 Move [X20+56], S0
	167 Compare X8, 0
	168 JumpIfNotEqual {135}
	169 Compare W25, 0
	170 JumpIfEqual {176}
	171 Move X0, X19
	172 Call Tess.CheckOrientation, X0
	173 Move X8, [X19+16]
	174 Compare X8, 0
	175 JumpIfEqual {221}
	176 Move X8, [X8+16]
	177 Compare X8, 0
	178 JumpIfEqual {221}
	179 Move X9, [X8+24]
	180 NotImplemented "Instruction CMP not yet implemented."
	181 Move W10, 1
	182 Compare X9, 0
	183 JumpIfEqual {221}
	184 Move V0, [X9+52]
	185 Move TEMP, X10
	186 And TEMP, TEMP, 1
	187 Compare TEMP, 1
	188 JumpIfNotEqual {194}
	189 Move [X19+68], S0
	190 Move [X19+60], S0
	191 Move V0, [X9+56]
	192 Move [X19+72], S0
	193 Move [X19+64], S0
	194 Move V1, [X19+60]
	195 NotImplemented "Instruction FCMP not yet implemented."
	196 Move [X19+60], S0
	197 Move V1, [X19+68]
	198 NotImplemented "Instruction FCMP not yet implemented."
	199 Move [X19+68], S0
	200 Move V0, [X9+56]
	201 Move V1, [X19+64]
	202 NotImplemented "Instruction FCMP not yet implemented."
	203 Move [X19+64], S0
	204 Move V1, [X19+72]
	205 NotImplemented "Instruction FCMP not yet implemented."
	206 Move [X19+72], S0
	207 Move X9, [X9+24]
	208 Move W10, W31
	209 NotImplemented "Instruction CMP not yet implemented."
	210 Move X20, [X31+80]
	211 Move X19, [X31+88]
	212 Move X22, [X31+64]
	213 Move X21, [X31+72]
	214 Move X24, [X31+48]
	215 Move X23, [X31+56]
	216 Move X30, [X31+32]
	217 Move X25, [X31+40]
	218 Move V8, [X31+16]
	219 Add X31, X31, 96
	220 Return 
	221 Call 0x1C17F20

Method: System.Void TessellateMonoRegion(UnityEngine.Rendering.Universal.LibTessDotNet.MeshUtils/Face face)

Disassembly:
	0x03A9ACA8 STRB W8, [X19 + 0x3DD]
	0x03A9ACAC LDR X8, [X20]
	0x03A9ACB0 LDP X20, X19, [X31 + 0x10]
	0x03A9ACB4 LDR X8, [X8 + 0xB8]
	0x03A9ACB8 LDRB W0, [X8 + 0x1]
	0x03A9ACBC LDR X30, [X31], #0x20
	0x03A9ACC0 RET
	0x03A9ACC4 STP X30, X21, [X31 - 0x20]!
	0x03A9ACC8 STP X20, X19, [X31 + 0x10]
	0x03A9ACCC ADRP X21, 0x948000
	0x03A9ACD0 ADRP X20, 0x6BD000
	0x03A9ACD4 LDRB W8, [X21 + 0x3DE]
	0x03A9ACD8 LDR X20, [X20 + 0x740]
	0x03A9ACDC MOV W19, W0
	0x03A9ACE0 TBNZ X8, 0x0, 0x3A9ACF8
	0x03A9ACE4 ADRP X0, 0x6BD000
	0x03A9ACE8 LDR X0, [X0 + 0x740]
	0x03A9ACEC BL 0x1C16CF4
	0x03A9ACF0 MOVZ W8, 0x1
	0x03A9ACF4 STRB W8, [X21 + 0x3DE]
	0x03A9ACF8 LDR X8, [X20]
	0x03A9ACFC AND W9, W19, 0x1
	0x03A9AD00 LDP X20, X19, [X31 + 0x10]
	0x03A9AD04 LDR X8, [X8 + 0xB8]
	0x03A9AD08 STRB W9, [X8 + 0x1]
	0x03A9AD0C LDP X30, X21, [X31], #0x20
	0x03A9AD10 RET
	0x03A9AD14 MOV W0, W31
	0x03A9AD18 RET
	0x03A9AD1C MOVZ W0, 0x1
	0x03A9AD20 RET
	0x03A9AD24 MOVZ W0, 0x2
	0x03A9AD28 RET
	0x03A9AD2C MOVZ W0, 0x3
	0x03A9AD30 RET
	0x03A9AD34 LDRB W8, [X0 + 0x15]
	0x03A9AD38 CMP W8, 0x0
	0x03A9AD3C MOVZ W8, 0x4
	0x03A9AD40 CSINV W0, W8, W31, NE
	0x03A9AD44 RET
	0x03A9AD48 STP X30, X19, [X31 - 0x10]!
	0x03A9AD4C MOV X19, X0
	0x03A9AD50 BL 0x3A9AF98
	0x03A9AD54 TBNZ X0, 0x0, 0x3A9AD60
	0x03A9AD58 LDRB W8, [X19 + 0x14]
	0x03A9AD5C CBZ W8, 0x3A9AD74
	0x03A9AD60 LDRB W8, [X19 + 0x15]
	0x03A9AD64 CMP W8, 0x0
	0x03A9AD68 MOVZ W8, 0x4
	0x03A9AD6C CINC W0, W8, NE
	0x03A9AD70 B 0x3A9AD78
	0x03A9AD74 MOVN W0, 0x0
	0x03A9AD78 LDP X30, X19, [X31], #0x10
	0x03A9AD7C RET
	0x03A9AD80 STP X30, X19, [X31 - 0x10]!
	0x03A9AD84 MOV X19, X0
	0x03A9AD88 BL 0x3A9AF98
	0x03A9AD8C TBZ X0, 0x0, 0x3A9AD98
	0x03A9AD90 MOVZ W0, 0x1
	0x03A9AD94 B 0x3A9ADA4
	0x03A9AD98 LDRB W8, [X19 + 0x14]
	0x03A9AD9C CMP W8, 0x0
	0x03A9ADA0 CSET W0, NE
	0x03A9ADA4 LDP X30, X19, [X31], #0x10
	0x03A9ADA8 RET
	0x03A9ADAC STR X30, [X31 - 0x20]!
	0x03A9ADB0 STP X20, X19, [X31 + 0x10]
	0x03A9ADB4 LDR W8, [X0 + 0x1C]
	0x03A9ADB8 CBZ W8, 0x3A9ADD4
	0x03A9ADBC LDRB W20, [X0 + 0x15]
	0x03A9ADC0 MOV X19, X0
	0x03A9ADC4 BL 0x3A9AF98
	0x03A9ADC8 TBZ X0, 0x0, 0x3A9ADDC
	0x03A9ADCC ADD W8, W20, 0x3
	0x03A9ADD0 B 0x3A9ADE8
	0x03A9ADD4 MOVN W0, 0x0
	0x03A9ADD8 B 0x3A9ADF8
	0x03A9ADDC LDRB W9, [X19 + 0x14]
	0x03A9ADE0 ADD W8, W20, 0x3
	0x03A9ADE4 CBZ W9, 0x3A9ADF0
	0x03A9ADE8 MOVZ W9, 0x2
	0x03A9ADEC B 0x3A9ADF4
	0x03A9ADF0 MOVZ W9, 0x1
	0x03A9ADF4 ADD W0, W9, W8
	0x03A9ADF8 LDP X20, X19, [X31 + 0x10]
	0x03A9ADFC LDR X30, [X31], #0x20
	0x03A9AE00 RET
	0x03A9AE04 LDR W8, [X0 + 0x1C]
	0x03A9AE08 CMP W8, 0x0
	0x03A9AE0C CSET W0, NE
	0x03A9AE10 RET
	0x03A9AE14 STP X30, X21, [X31 - 0x20]!
	0x03A9AE18 STP X20, X19, [X31 + 0x10]
	0x03A9AE1C LDRB W21, [X0 + 0x15]
	0x03A9AE20 LDR W20, [X0 + 0x1C]
	0x03A9AE24 MOV X19, X0
	0x03A9AE28 BL 0x3A9AF98
	0x03A9AE2C TBZ X0, 0x0, 0x3A9AE38
	0x03A9AE30 MOVZ W8, 0x1
	0x03A9AE34 B 0x3A9AE3C
	0x03A9AE38 LDRB W8, [X19 + 0x14]
	0x03A9AE3C CMP W21, 0x0
	0x03A9AE40 MOVZ W9, 0x4
	0x03A9AE44 CINC W9, W9, NE
	0x03A9AE48 CMP W20, 0x0
	0x03A9AE4C LDP X20, X19, [X31 + 0x10]
	0x03A9AE50 CINC W9, W9, NE
	0x03A9AE54 ADD W0, W9, W8
	0x03A9AE58 LDP X30, X21, [X31], #0x20
	0x03A9AE5C RET
	0x03A9AE60 STP X30, X21, [X31 - 0x20]!
	0x03A9AE64 STP X20, X19, [X31 + 0x10]
	0x03A9AE68 ADRP X21, 0x948000
	0x03A9AE6C LDRB W8, [X21 + 0x3DF]
	0x03A9AE70 MOV W20, W1
	0x03A9AE74 MOV X19, X0
	0x03A9AE78 TBNZ X8, 0x0, 0x3A9AE90
	0x03A9AE7C ADRP X0, 0x6BD000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Compare X1, 0
	006 JumpIfEqual {139}
	007 Move X20, [X1+32]
	008 Compare X20, 0
	009 JumpIfEqual {139}
	010 Move X19, X0
	011 Move X8, [X20+40]
	012 Compare X8, 0
	013 JumpIfEqual {139}
	014 Move X0, [X8+64]
	015 Move X1, [X20+64]
	016 Call Geom.VertLeq, X0, X1
	017 Move TEMP, X0
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfNotEqual {30}
	021 Move X8, [X20+48]
	022 Compare X8, 0
	023 JumpIfEqual {139}
	024 Move X20, [X8+40]
	025 Compare X20, 0
	026 JumpIfNotEqual {11}
	027 Move X20, [X20+56]
	028 Compare X20, 0
	029 JumpIfEqual {139}
	030 Move X8, [X20+40]
	031 Compare X8, 0
	032 JumpIfEqual {139}
	033 Move X0, [X20+64]
	034 Move X1, [X8+64]
	035 Call Geom.VertLeq, X0, X1
	036 Move TEMP, X0
	037 And TEMP, TEMP, 1
	038 Compare TEMP, 1
	039 JumpIfEqual {27}
	040 Move X8, [X20+48]
	041 Compare X8, 0
	042 JumpIfEqual {139}
	043 Move X21, [X8+40]
	044 Move X8, [X20+56]
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Move X8, [X20+40]
	047 Compare X8, 0
	048 JumpIfEqual {139}
	049 Compare X21, 0
	050 JumpIfEqual {139}
	051 Move X0, [X8+64]
	052 Move X1, [X21+64]
	053 Call Geom.VertLeq, X0, X1
	054 Move TEMP, X0
	055 And TEMP, TEMP, 1
	056 Compare TEMP, 1
	057 JumpIfEqual {115}
	058 Move X8, [X21+56]
	059 NotImplemented "Instruction CMP not yet implemented."
	060 Compare X20, 0
	061 JumpIfEqual {139}
	062 Move X8, [X20+48]
	063 Compare X8, 0
	064 JumpIfEqual {139}
	065 Move X0, [X8+40]
	066 Call Geom.EdgeGoesRight, X0
	067 Move TEMP, X0
	068 And TEMP, TEMP, 1
	069 Compare TEMP, 1
	070 JumpIfEqual {85}
	071 Move X8, [X20+40]
	072 Compare X8, 0
	073 JumpIfEqual {139}
	074 Move X9, [X20+48]
	075 Compare X9, 0
	076 JumpIfEqual {139}
	077 Move X9, [X9+40]
	078 Compare X9, 0
	079 JumpIfEqual {139}
	080 Move X0, [X8+64]
	081 Move X1, [X20+64]
	082 Move X2, [X9+64]
	083 Call Geom.EdgeSign, X0, X1, X2
	084 NotImplemented "Instruction FCMP not yet implemented."
	085 Move X8, [X20+48]
	086 Compare X8, 0
	087 JumpIfEqual {139}
	088 Move X9, [X19+16]
	089 Compare X9, 0
	090 JumpIfEqual {139}
	091 Move X2, [X8+40]
	092 Move X1, X20
	093 Call Mesh.Connect, X0, X1, X2
	094 Compare X0, 0
	095 JumpIfEqual {139}
	096 Move X20, [X0+40]
	097 Move X8, [X21+56]
	098 NotImplemented "Instruction CMP not yet implemented."
	099 Compare X20, 0
	100 JumpIfEqual {139}
	101 Move X20, [X20+56]
	102 Compare X20, 0
	103 JumpIfNotEqual {44}
	104 Move X8, [X19+16]
	105 Compare X8, 0
	106 JumpIfEqual {139}
	107 Move X1, [X21+56]
	108 Move X2, X21
	109 Call Mesh.Connect, X0, X1, X2
	110 Compare X0, 0
	111 JumpIfEqual {139}
	112 Move X21, [X0+40]
	113 Compare X21, 0
	114 JumpIfEqual {139}
	115 Move X0, [X21+56]
	116 NotImplemented "Instruction CMP not yet implemented."
	117 Call Geom.EdgeGoesLeft, X0
	118 Move TEMP, X0
	119 And TEMP, TEMP, 1
	120 Compare TEMP, 1
	121 JumpIfEqual {104}
	122 Move X8, [X21+40]
	123 Compare X8, 0
	124 JumpIfEqual {139}
	125 Move X9, [X21+56]
	126 Compare X9, 0
	127 JumpIfEqual {139}
	128 Move X9, [X9+40]
	129 Compare X9, 0
	130 JumpIfEqual {139}
	131 Move X0, [X21+64]
	132 Move X1, [X8+64]
	133 Move X2, [X9+64]
	134 Call Geom.EdgeSign, X0, X1, X2
	135 NotImplemented "Instruction FCMP not yet implemented."
	136 Move X8, [X21+48]
	137 Compare X8, 0
	138 JumpIfNotEqual {43}
	139 Call 0x1C17F20
	140 Move X8, [X19+16]
	141 Compare X8, 0
	142 JumpIfEqual {139}
	143 Move X2, X21
	144 Call Mesh.Connect, X0, X1, X2
	145 Compare X0, 0
	146 JumpIfEqual {139}
	147 Move X21, [X0+40]
	148 Compare X21, 0
	149 JumpIfEqual {139}
	150 Move X1, [X21+56]
	151 Compare X1, 0
	152 JumpIfEqual {139}
	153 Move X8, [X1+56]
	154 NotImplemented "Instruction CMP not yet implemented."
	155 Move X20, [X31+16]
	156 Move X19, [X31+24]
	157 Move X30, [X31+32]
	158 Move X21, [X31+40]
	159 Return 

Method: System.Void TessellateInterior()

Disassembly:
	0x03A9AE80 LDR X0, [X0 + 0x158]
	0x03A9AE84 BL 0x1C16CF4
	0x03A9AE88 MOVZ W8, 0x1
	0x03A9AE8C STRB W8, [X21 + 0x3DF]
	0x03A9AE90 CMP W20, 0x3
	0x03A9AE94 B.HI 0x3A9AED4
	0x03A9AE98 ADRP X9, 0xFFFFFFFFFD0FD000
	0x03A9AE9C MOV W8, W20
	0x03A9AEA0 ADD X9, X9, 0xB4E
	0x03A9AEA4 ADR X10, 0x14
	0x03A9AEA8 LDRB W11, [X9, X8, LSL]
	0x03A9AEAC ADD X10, X10, X11, 0x2, LSL
	0x03A9AEB0 MOVZ W0, 0x8
	0x03A9AEB4 BR X10
	0x03A9AEB8 MOV X0, X31
	0x03A9AEBC BL 0x3C113A8
	0x03A9AEC0 CMP W0, 0x1
	0x03A9AEC4 MOVZ W8, 0x8
	0x03A9AEC8 MOVZ W9, 0x4
	0x03A9AECC CSEL W0, W9, W8, EQ
	0x03A9AED0 B 0x3A9AF8C
	0x03A9AED4 LDRB W8, [X19 + 0x15]
	0x03A9AED8 CMP W8, 0x0
	0x03A9AEDC MOVZ W8, 0x4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X0+16]
	005 Compare X8, 0
	006 JumpIfEqual {26}
	007 Move X9, [X8+24]
	008 Compare X9, 0
	009 JumpIfEqual {26}
	010 Move X1, [X9+24]
	011 Move X19, X0
	012 Move X9, [X8+24]
	013 NotImplemented "Instruction CMP not yet implemented."
	014 Compare X1, 0
	015 JumpIfEqual {26}
	016 Move W9, [X1+53]
	017 Move X20, [X1+24]
	018 Compare W9, 0
	019 JumpIfEqual {23}
	020 Move X0, X19
	021 Call Tess.TessellateMonoRegion, X0, X1
	022 Move X8, [X19+16]
	023 Move X1, X20
	024 Compare X8, 0
	025 JumpIfNotEqual {12}
	026 Call 0x1C17F20
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X30, [X31+32]
	030 Return 

Method: System.Void DiscardExterior()

Disassembly:
	0x03A9AEE0 CSINV W8, W8, W31, NE
	0x03A9AEE4 CMP W8, W20
	0x03A9AEE8 B.NE 0x3A9AF04
	0x03A9AEEC MOVZ W0, 0x31
	0x03A9AEF0 B 0x3A9AF8C
	0x03A9AEF4 LDRB W8, [X19 + 0x1A]
	0x03A9AEF8 CBZ W8, 0x3A9AF1C
	0x03A9AEFC MOVZ W0, 0x8
	0x03A9AF00 B 0x3A9AF8C
	0x03A9AF04 MOV X0, X19
	0x03A9AF08 BL 0x3A9ADAC
	0x03A9AF0C CMP W0, W20
	0x03A9AF10 B.NE 0x3A9AF44
	0x03A9AF14 MOVZ W0, 0x3B
	0x03A9AF18 B 0x3A9AF8C
	0x03A9AF1C ADRP X8, 0x6BD000
	0x03A9AF20 LDR X8, [X8 + 0x158]
	0x03A9AF24 LDR X0, [X8]
	0x03A9AF28 LDR W8, [X0 + 0xE0]
	0x03A9AF2C CBNZ W8, 0x3A9AF34
	0x03A9AF30 BL 0x1C16DFC
	0x03A9AF34 LDP X20, X19, [X31 + 0x10]
	0x03A9AF38 MOV X0, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X0+16]
	005 Compare X8, 0
	006 JumpIfEqual {25}
	007 Move X9, [X8+24]
	008 Compare X9, 0
	009 JumpIfEqual {25}
	010 Move X1, [X9+24]
	011 Move X19, X0
	012 Move X9, [X8+24]
	013 NotImplemented "Instruction CMP not yet implemented."
	014 Compare X1, 0
	015 JumpIfEqual {25}
	016 Move W9, [X1+53]
	017 Move X20, [X1+24]
	018 Compare W9, 0
	019 JumpIfNotEqual {22}
	020 Call Mesh.ZapFace, X0, X1
	021 Move X8, [X19+16]
	022 Move X1, X20
	023 Compare X8, 0
	024 JumpIfNotEqual {12}
	025 Call 0x1C17F20
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Return 

Method: System.Void SetWindingNumber(System.Int32 value, System.Boolean keepOnlyBoundary)

Disassembly:
	0x03A9AF3C LDP X30, X21, [X31], #0x20
	0x03A9AF40 B 0x3AAD524
	0x03A9AF44 BL 0x3A9AF98
	0x03A9AF48 TBNZ X0, 0x0, 0x3A9AF54
	0x03A9AF4C LDRB W8, [X19 + 0x14]
	0x03A9AF50 CBZ W8, 0x3A9AF68
	0x03A9AF54 LDRB W8, [X19 + 0x15]
	0x03A9AF58 CMP W8, 0x0
	0x03A9AF5C MOVZ W8, 0x4
	0x03A9AF60 CINC W8, W8, NE
	0x03A9AF64 B 0x3A9AF6C
	0x03A9AF68 MOVN W8, 0x0
	0x03A9AF6C CMP W8, W20
	0x03A9AF70 B.NE 0x3A9AF88
	0x03A9AF74 LDR W0, [X19 + 0x10]
	0x03A9AF78 LDP X20, X19, [X31 + 0x10]
	0x03A9AF7C MOV X1, X31
	0x03A9AF80 LDP X30, X21, [X31], #0x20
	0x03A9AF84 B 0x3A6FD54
	0x03A9AF88 MOV W0, W31
	0x03A9AF8C LDP X20, X19, [X31 + 0x10]
	0x03A9AF90 LDP X30, X21, [X31], #0x20
	0x03A9AF94 RET
	0x03A9AF98 STR X30, [X31 - 0x20]!
	0x03A9AF9C STP X20, X19, [X31 + 0x10]
	0x03A9AFA0 ADRP X19, 0x948000
	0x03A9AFA4 ADRP X20, 0x682000
	0x03A9AFA8 LDRB W8, [X19 + 0x3E0]
	0x03A9AFAC LDR X20, [X20 + 0x8A8]
	0x03A9AFB0 TBNZ X8, 0x0, 0x3A9AFC8
	0x03A9AFB4 ADRP X0, 0x682000
	0x03A9AFB8 LDR X0, [X0 + 0x8A8]
	0x03A9AFBC BL 0x1C16CF4
	0x03A9AFC0 MOVZ W8, 0x1
	0x03A9AFC4 STRB W8, [X19 + 0x3E0]
	0x03A9AFC8 LDR X0, [X20]
	0x03A9AFCC LDR W8, [X0 + 0xE0]
	0x03A9AFD0 CBNZ W8, 0x3A9AFD8
	0x03A9AFD4 BL 0x1C16DFC
	0x03A9AFD8 MOV X0, X31
	0x03A9AFDC BL 0x3A8AB60
	0x03A9AFE0 CBZ X0, 0x3A9AFF4
	0x03A9AFE4 LDRB W0, [X0 + 0xEC]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X8, [X0+16]
	008 Compare X8, 0
	009 JumpIfEqual {48}
	010 Move X9, [X8+32]
	011 Compare X9, 0
	012 JumpIfEqual {48}
	013 Move W21, W1
	014 Move X1, [X9+32]
	015 Move W19, W2
	016 Move X20, X0
	017 Subtract W22, W31, W21
	018 Move X9, [X8+32]
	019 NotImplemented "Instruction CMP not yet implemented."
	020 Compare X1, 0
	021 JumpIfEqual {48}
	022 Move X9, [X1+40]
	023 Compare X9, 0
	024 JumpIfEqual {48}
	025 Move X9, [X9+72]
	026 Compare X9, 0
	027 JumpIfEqual {48}
	028 Move X10, [X1+72]
	029 Compare X10, 0
	030 JumpIfEqual {48}
	031 Move W11, [X9+53]
	032 Move W9, [X10+53]
	033 Move X23, [X1+32]
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Move TEMP, X19
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfNotEqual {44}
	039 Call Mesh.Delete, X0, X1
	040 Move X8, [X20+16]
	041 NotImplemented "Instruction CMP not yet implemented."
	042 NotImplemented "Instruction CSEL not yet implemented."
	043 Move [X1+88], W9
	044 Move [X1+88], W31
	045 Move X1, X23
	046 Compare X8, 0
	047 JumpIfNotEqual {18}
	048 Call 0x1C17F20
	049 Move X20, [X31+32]
	050 Move X19, [X31+40]
	051 Move X22, [X31+16]
	052 Move X21, [X31+24]
	053 Move X30, [X31+48]
	054 Move X23, [X31+56]
	055 Return 

Method: System.Int32 GetNeighbourFace(UnityEngine.Rendering.Universal.LibTessDotNet.MeshUtils/Edge edge)

Disassembly:
	0x03A9AFE8 LDP X20, X19, [X31 + 0x10]
	0x03A9AFEC LDR X30, [X31], #0x20
	0x03A9AFF0 RET
	0x03A9AFF4 BL 0x1C16F20
	0x03A9AFF8 LDR W0, [X0 + 0x10]
	0x03A9AFFC RET
	0x03A9B000 STR W1, [X0 + 0x10]
	0x03A9B004 RET
	0x03A9B008 LDRB W0, [X0 + 0x14]
	0x03A9B00C RET
	0x03A9B010 AND W8, W1, 0x1
	0x03A9B014 STRB W8, [X0 + 0x14]
	0x03A9B018 RET
	0x03A9B01C LDRB W0, [X0 + 0x15]

ISIL:
	001 Move [X31-16], X30
	002 Compare X1, 0
	003 JumpIfEqual {19}
	004 Move X8, [X1+40]
	005 Compare X8, 0
	006 JumpIfEqual {19}
	007 Move X8, [X8+72]
	008 Compare X8, 0
	009 JumpIfEqual {14}
	010 Move W9, [X8+53]
	011 Compare W9, 0
	012 JumpIfEqual {14}
	013 Move W0, [X8+48]
	014 Move TEMP, 0
	015 Not TEMP
	016 Move W0, TEMP
	017 Move X30, [X31+16]
	018 Return X0
	019 Call 0x1C17F20

Method: System.Void OutputPolymesh(UnityEngine.Rendering.Universal.LibTessDotNet.ElementType elementType, System.Int32 polySize)

Disassembly:
	0x03A9B020 RET
	0x03A9B024 AND W8, W1, 0x1
	0x03A9B028 STRB W8, [X0 + 0x15]
	0x03A9B02C RET
	0x03A9B030 LDRB W0, [X0 + 0x16]
	0x03A9B034 RET
	0x03A9B038 AND W8, W1, 0x1
	0x03A9B03C STRB W8, [X0 + 0x16]
	0x03A9B040 RET
	0x03A9B044 LDRB W0, [X0 + 0x17]
	0x03A9B048 RET
	0x03A9B04C AND W8, W1, 0x1
	0x03A9B050 STRB W8, [X0 + 0x17]
	0x03A9B054 RET
	0x03A9B058 LDRB W0, [X0 + 0x18]
	0x03A9B05C RET
	0x03A9B060 AND W8, W1, 0x1
	0x03A9B064 STRB W8, [X0 + 0x18]
	0x03A9B068 RET
	0x03A9B06C LDRB W0, [X0 + 0x19]
	0x03A9B070 RET
	0x03A9B074 AND W8, W1, 0x1
	0x03A9B078 STRB W8, [X0 + 0x19]
	0x03A9B07C RET
	0x03A9B080 LDRB W0, [X0 + 0x1A]
	0x03A9B084 RET
	0x03A9B088 AND W8, W1, 0x1
	0x03A9B08C STRB W8, [X0 + 0x1A]
	0x03A9B090 RET
	0x03A9B094 LDR W0, [X0 + 0x1C]
	0x03A9B098 RET
	0x03A9B09C STR W1, [X0 + 0x1C]
	0x03A9B0A0 RET
	0x03A9B0A4 LDRB W0, [X0 + 0x20]
	0x03A9B0A8 RET
	0x03A9B0AC AND W8, W1, 0x1
	0x03A9B0B0 STRB W8, [X0 + 0x20]
	0x03A9B0B4 RET
	0x03A9B0B8 LDR W0, [X0 + 0x24]
	0x03A9B0BC RET
	0x03A9B0C0 STR W1, [X0 + 0x24]
	0x03A9B0C4 RET
	0x03A9B0C8 LDR W0, [X0 + 0x28]
	0x03A9B0CC RET
	0x03A9B0D0 STR W1, [X0 + 0x28]
	0x03A9B0D4 RET
	0x03A9B0D8 LDR X0, [X0 + 0x30]
	0x03A9B0DC RET
	0x03A9B0E0 STR X1, [X0 + 0x30]
	0x03A9B0E4 RET
	0x03A9B0E8 LDR X0, [X0 + 0x40]
	0x03A9B0EC RET
	0x03A9B0F0 STR X1, [X0 + 0x40]
	0x03A9B0F4 RET
	0x03A9B0F8 LDR X0, [X0 + 0x48]
	0x03A9B0FC RET
	0x03A9B100 STR X1, [X0 + 0x48]
	0x03A9B104 RET
	0x03A9B108 LDR X0, [X0 + 0x50]
	0x03A9B10C RET
	0x03A9B110 STR X1, [X0 + 0x50]
	0x03A9B114 RET
	0x03A9B118 LDR X0, [X0 + 0x58]
	0x03A9B11C RET
	0x03A9B120 STR X1, [X0 + 0x58]
	0x03A9B124 RET
	0x03A9B128 LDR X0, [X0 + 0x60]
	0x03A9B12C RET
	0x03A9B130 STR X1, [X0 + 0x60]
	0x03A9B134 RET
	0x03A9B138 LDR X0, [X0 + 0x68]
	0x03A9B13C RET
	0x03A9B140 STR X1, [X0 + 0x68]
	0x03A9B144 RET
	0x03A9B148 LDR X0, [X0 + 0x70]
	0x03A9B14C RET
	0x03A9B150 STR X1, [X0 + 0x70]
	0x03A9B154 RET
	0x03A9B158 STR X30, [X31 - 0x50]!
	0x03A9B15C STP X26, X25, [X31 + 0x10]
	0x03A9B160 STP X24, X23, [X31 + 0x20]
	0x03A9B164 STP X22, X21, [X31 + 0x30]
	0x03A9B168 STP X20, X19, [X31 + 0x40]
	0x03A9B16C ADRP X24, 0x947000
	0x03A9B170 ADRP X23, 0x65C000
	0x03A9B174 ADRP X25, 0x6BC000
	0x03A9B178 LDRB W8, [X24 + 0x3E1]
	0x03A9B17C LDR X23, [X23 + 0x988]
	0x03A9B180 LDR X25, [X25 + 0x148]
	0x03A9B184 MOV W20, W3
	0x03A9B188 MOV X19, X2
	0x03A9B18C MOV X22, X1
	0x03A9B190 MOV X21, X0
	0x03A9B194 TBNZ X8, 0x0, 0x3A9B1D0
	0x03A9B198 ADRP X0, 0x6BC000
	0x03A9B19C LDR X0, [X0 + 0x148]
	0x03A9B1A0 BL 0x1C16CF4
	0x03A9B1A4 ADRP X0, 0x659000
	0x03A9B1A8 LDR X0, [X0 + 0xE58]
	0x03A9B1AC BL 0x1C16CF4
	0x03A9B1B0 ADRP X0, 0x65C000
	0x03A9B1B4 LDR X0, [X0 + 0x988]
	0x03A9B1B8 BL 0x1C16CF4
	0x03A9B1BC ADRP X0, 0x6B5000
	0x03A9B1C0 LDR X0, [X0 + 0x598]
	0x03A9B1C4 BL 0x1C16CF4
	0x03A9B1C8 MOVZ W8, 0x1
	0x03A9B1CC STRB W8, [X24 + 0x3E1]
	0x03A9B1D0 LDR X0, [X23]
	0x03A9B1D4 ADRP X26, 0x6B5000
	0x03A9B1D8 LDR X26, [X26 + 0x598]
	0x03A9B1DC MOVZ W1, 0x2
	0x03A9B1E0 BL 0x1C16D6C
	0x03A9B1E4 STR X0, [X21 + 0xC8]
	0x03A9B1E8 LDR X0, [X25]
	0x03A9B1EC LDR W8, [X0 + 0xE0]
	0x03A9B1F0 CBNZ W8, 0x3A9B1FC
	0x03A9B1F4 BL 0x1C16DFC
	0x03A9B1F8 LDR X0, [X25]
	0x03A9B1FC LDR X8, [X0 + 0xB8]
	0x03A9B200 LDR X0, [X26]
	0x03A9B204 LDR X23, [X8 + 0x28]
	0x03A9B208 BL 0x1C16F10
	0x03A9B20C MOV X1, X23
	0x03A9B210 MOV X2, X31
	0x03A9B214 MOV X24, X0
	0x03A9B218 BL 0x39B19AC
	0x03A9B21C STR X24, [X21 + 0xD0]
	0x03A9B220 LDR X8, [X25]
	0x03A9B224 LDR X0, [X26]
	0x03A9B228 LDR X8, [X8 + 0xB8]
	0x03A9B22C LDR X23, [X8 + 0x30]
	0x03A9B230 BL 0x1C16F10
	0x03A9B234 MOV X1, X23
	0x03A9B238 MOV X2, X31
	0x03A9B23C MOV X24, X0
	0x03A9B240 BL 0x39B19AC
	0x03A9B244 STR X24, [X21 + 0xD8]
	0x03A9B248 LDR X8, [X25]
	0x03A9B24C LDR X0, [X26]
	0x03A9B250 LDR X8, [X8 + 0xB8]
	0x03A9B254 LDR X23, [X8 + 0x38]
	0x03A9B258 BL 0x1C16F10
	0x03A9B25C MOV X1, X23
	0x03A9B260 MOV X2, X31
	0x03A9B264 MOV X24, X0
	0x03A9B268 BL 0x39B19AC
	0x03A9B26C MOV X0, X21
	0x03A9B270 MOV X1, X31
	0x03A9B274 STR X24, [X21 + 0xE0]
	0x03A9B278 BL 0x33BDD8C
	0x03A9B27C MOV X0, X31
	0x03A9B280 BL 0x3C3BACC
	0x03A9B284 CMP W0, 0x11
	0x03A9B288 B.EQ 0x3A9B29C
	0x03A9B28C MOV X0, X31
	0x03A9B290 BL 0x3C3BACC
	0x03A9B294 CMP W0, 0x8
	0x03A9B298 B.NE 0x3A9B2A4
	0x03A9B29C MOVZ W24, 0x1
	0x03A9B2A0 B 0x3A9B2B4
	0x03A9B2A4 MOV X0, X31
	0x03A9B2A8 BL 0x3C3BACC
	0x03A9B2AC CMP W0, 0xB
	0x03A9B2B0 CSET W24, EQ
	0x03A9B2B4 ADRP X23, 0x947000
	0x03A9B2B8 LDRB W8, [X23 + 0x428]
	0x03A9B2BC CBNZ W8, 0x3A9B2D4
	0x03A9B2C0 ADRP X0, 0x6BC000
	0x03A9B2C4 LDR X0, [X0 + 0x740]
	0x03A9B2C8 BL 0x1C16CF4
	0x03A9B2CC MOVZ W8, 0x1
	0x03A9B2D0 STRB W8, [X23 + 0x428]
	0x03A9B2D4 ADRP X23, 0x6BC000
	0x03A9B2D8 LDR X23, [X23 + 0x740]
	0x03A9B2DC MOV X0, X31
	0x03A9B2E0 LDR X8, [X23]
	0x03A9B2E4 LDR X8, [X8 + 0xB8]
	0x03A9B2E8 STRB W24, [X8]
	0x03A9B2EC BL 0x3C3BACC
	0x03A9B2F0 CMP W0, 0x2
	0x03A9B2F4 B.NE 0x3A9B30C
	0x03A9B2F8 MOV X0, X31
	0x03A9B2FC BL 0x3C3BB6C
	0x03A9B300 CMP W0, 0x29
	0x03A9B304 CSET W24, LT
	0x03A9B308 B 0x3A9B310
	0x03A9B30C MOV W24, W31
	0x03A9B310 ADRP X26, 0x947000
	0x03A9B314 LDRB W8, [X26 + 0x429]
	0x03A9B318 CBNZ W8, 0x3A9B330
	0x03A9B31C ADRP X0, 0x6BC000
	0x03A9B320 LDR X0, [X0 + 0x740]
	0x03A9B324 BL 0x1C16CF4
	0x03A9B328 MOVZ W8, 0x1
	0x03A9B32C STRB W8, [X26 + 0x429]
	0x03A9B330 LDR X8, [X23]
	0x03A9B334 LDR X8, [X8 + 0xB8]
	0x03A9B338 STRB W24, [X8 + 0x1]
	0x03A9B33C STR X22, [X21 + 0xB8]
	0x03A9B340 LDR X0, [X25]
	0x03A9B344 LDR W8, [X0 + 0xE0]
	0x03A9B348 CBNZ W8, 0x3A9B354
	0x03A9B34C BL 0x1C16DFC
	0x03A9B350 LDR X0, [X25]
	0x03A9B354 LDR X8, [X0 + 0xB8]
	0x03A9B358 LDR X8, [X8 + 0x8]
	0x03A9B35C CBZ X8, 0x3A9B3B0
	0x03A9B360 ADRP X9, 0x659000
	0x03A9B364 LDR X9, [X9 + 0xE58]
	0x03A9B368 LDR W1, [X8 + 0x18]
	0x03A9B36C LDR X0, [X9]
	0x03A9B370 BL 0x1C16D6C
	0x03A9B374 STR X0, [X21 + 0xC0]
	0x03A9B378 MOV X0, X21
	0x03A9B37C BL 0x3A9B3B4
	0x03A9B380 MOVZ W8, 0x1
	0x03A9B384 AND W9, W20, 0x1
	0x03A9B388 STRB W8, [X21 + 0x1A]
	0x03A9B38C STRB W8, [X21 + 0x20]
	0x03A9B390 STRB W9, [X21 + 0x15]
	0x03A9B394 STR X19, [X21 + 0xE8]
	0x03A9B398 LDP X20, X19, [X31 + 0x40]
	0x03A9B39C LDP X22, X21, [X31 + 0x30]
	0x03A9B3A0 LDP X24, X23, [X31 + 0x20]
	0x03A9B3A4 LDP X26, X25, [X31 + 0x10]
	0x03A9B3A8 LDR X30, [X31], #0x50
	0x03A9B3AC RET
	0x03A9B3B0 BL 0x1C16F20
	0x03A9B3B4 STP X30, X23, [X31 - 0x30]!
	0x03A9B3B8 STP X22, X21, [X31 + 0x10]
	0x03A9B3BC STP X20, X19, [X31 + 0x20]
	0x03A9B3C0 ADRP X21, 0x947000
	0x03A9B3C4 ADRP X20, 0x658000
	0x03A9B3C8 LDRB W8, [X21 + 0x3F6]
	0x03A9B3CC LDR X20, [X20 + 0x598]
	0x03A9B3D0 MOV X19, X0
	0x03A9B3D4 TBNZ X8, 0x0, 0x3A9B404
	0x03A9B3D8 ADRP X0, 0x6BC000
	0x03A9B3DC LDR X0, [X0 + 0x148]
	0x03A9B3E0 BL 0x1C16CF4
	0x03A9B3E4 ADRP X0, 0x658000
	0x03A9B3E8 LDR X0, [X0 + 0x598]
	0x03A9B3EC BL 0x1C16CF4
	0x03A9B3F0 ADRP X0, 0x6BC000
	0x03A9B3F4 LDR X0, [X0 + 0x748]
	0x03A9B3F8 BL 0x1C16CF4
	0x03A9B3FC MOVZ W8, 0x1
	0x03A9B400 STRB W8, [X21 + 0x3F6]
	0x03A9B404 LDR X0, [X20]
	0x03A9B408 LDR X20, [X19 + 0xB8]
	0x03A9B40C LDR W8, [X0 + 0xE0]
	0x03A9B410 CBNZ W8, 0x3A9B418
	0x03A9B414 BL 0x1C16DFC
	0x03A9B418 MOV X0, X20
	0x03A9B41C MOV X1, X31
	0x03A9B420 MOV X2, X31
	0x03A9B424 BL 0x3C3883C
	0x03A9B428 TBZ X0, 0x0, 0x3A9B43C
	0x03A9B42C LDP X20, X19, [X31 + 0x20]
	0x03A9B430 LDP X22, X21, [X31 + 0x10]
	0x03A9B434 LDP X30, X23, [X31], #0x30
	0x03A9B438 RET
	0x03A9B43C ADRP X22, 0x6BC000
	0x03A9B440 LDR X22, [X22 + 0x148]
	0x03A9B444 MOV X21, X31
	0x03A9B448 LDR X0, [X22]
	0x03A9B44C LDR W8, [X0 + 0xE0]

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+16], D8
	003 Move [X31+32], X29
	004 Move [X31+40], X30
	005 Move [X31+48], X28
	006 Move [X31+56], X27
	007 Move [X31+64], X26
	008 Move [X31+72], X25
	009 Move [X31+80], X24
	010 Move [X31+88], X23
	011 Move [X31+96], X22
	012 Move [X31+104], X21
	013 Move [X31+112], X20
	014 Move [X31+120], X19
	015 Move X22, 0x948000
	016 Move W8, [X22+972]
	017 Move W21, W2
	018 Move W19, W1
	019 Move X20, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {35}
	024 Move X0, 0x6BA000
	025 Move X0, [X0+2640]
	026 Call 0x1C17CF4
	027 Move X0, 0x65A000
	028 Move X0, [X0+3672]
	029 Call 0x1C17CF4
	030 Move X0, 0x659000
	031 Move X0, [X0+1448]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X22+972], W8
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Move W8, 3
	037 NotImplemented "Instruction CSEL not yet implemented."
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Move X0, [X20+16]
	040 Compare X0, 0
	041 JumpIfEqual {274}
	042 Move W1, W21
	043 Call Mesh.MergeConvexFaces, X0, X1
	044 Move X8, [X20+16]
	045 Compare X8, 0
	046 JumpIfEqual {274}
	047 Move X9, [X8+16]
	048 Compare X9, 0
	049 JumpIfEqual {274}
	050 Move X10, [X9+24]
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Move TEMP, 0
	053 Not TEMP
	054 Move W11, TEMP
	055 Compare X10, 0
	056 JumpIfEqual {274}
	057 Move [X10+64], W11
	058 Move X10, [X10+24]
	059 NotImplemented "Instruction CMP not yet implemented."
	060 Move X23, [X8+24]
	061 Compare X23, 0
	062 JumpIfEqual {274}
	063 Move X24, 0x659000
	064 Move X27, 0x65A000
	065 Move X25, 0x6BA000
	066 Move X24, [X24+1448]
	067 Move X27, [X27+3672]
	068 Move X25, [X25+2640]
	069 Move W26, W31
	070 Move W22, W31
	071 Move TEMP, 0
	072 Not TEMP
	073 Move W28, TEMP
	074 Move W29, 1
	075 Move X23, [X23+24]
	076 Move X8, [X8+24]
	077 NotImplemented "Instruction CMP not yet implemented."
	078 Compare X23, 0
	079 JumpIfEqual {274}
	080 Move W8, [X23+53]
	081 Move [X23+48], W28
	082 Compare W8, 0
	083 JumpIfEqual {113}
	084 Move W8, [X20+152]
	085 Compare W8, 0
	086 JumpIfEqual {98}
	087 Move X0, X23
	088 Call MeshUtils.FaceArea, X0
	089 Move X0, [X24]
	090 Move V8, V0
	091 Move W8, [X0+224]
	092 Compare W8, 0
	093 JumpIfNotEqual {95}
	094 Call 0x1C17DFC
	095 NotImplemented "Instruction FABS not yet implemented."
	096 Move S1, W29
	097 NotImplemented "Instruction FCMP not yet implemented."
	098 Move X8, [X23+32]
	099 Move X9, X8
	100 Compare X9, 0
	101 JumpIfEqual {274}
	102 Move X10, [X9+64]
	103 Compare X10, 0
	104 JumpIfEqual {274}
	105 Move W11, [X10+64]
	106 Add W31, W11, 1
	107 Move [X10+64], W22
	108 Add W22, W22, 1
	109 Move X9, [X9+56]
	110 NotImplemented "Instruction CMP not yet implemented."
	111 Move [X23+48], W26
	112 Add W26, W26, 1
	113 Move X8, [X20+16]
	114 Compare X8, 0
	115 JumpIfNotEqual {75}
	116 Move [X20+136], W26
	117 NotImplemented "Instruction CMP not yet implemented."
	118 Move X0, [X27]
	119 NotImplemented "Instruction CSET not yet implemented."
	120 NotImplemented "Instruction LSLV not yet implemented."
	121 Multiply W1, W8, W21
	122 Call 0x1C17D6C
	123 Move [X20+128], X0
	124 Move [X20+120], W22
	125 Move X0, [X25]
	126 Move W1, W22
	127 Call 0x1C17D6C
	128 Move X9, [X20+16]
	129 Move [X20+112], X0
	130 Compare X9, 0
	131 JumpIfEqual {274}
	132 Move X8, [X9+16]
	133 Compare X8, 0
	134 JumpIfEqual {274}
	135 Move W10, 24
	136 Move X8, [X8+24]
	137 Move X11, [X9+16]
	138 NotImplemented "Instruction CMP not yet implemented."
	139 Compare X8, 0
	140 JumpIfEqual {274}
	141 NotImplemented "Instruction LDRSW not yet implemented."
	142 Add W31, W11, 1
	143 Compare X0, 0
	144 JumpIfEqual {274}
	145 Move W9, [X8+48]
	146 Move X12, [X8+40]
	147 Move [X31+8], W9
	148 Move [X31], X12
	149 Move W9, [X0+24]
	150 NotImplemented "Instruction CMP not yet implemented."
	151 Move W9, [X31+8]
	152 Move X12, [X31]
	153 NotImplemented "Instruction NOP not yet implemented."
	154 NotImplemented "Instruction MADD not yet implemented."
	155 Move [X11+40], W9
	156 Move [X11+32], X12
	157 Move X0, [X20+112]
	158 Compare X0, 0
	159 JumpIfEqual {274}
	160 NotImplemented "Instruction LDRSW not yet implemented."
	161 Move W11, [X0+24]
	162 NotImplemented "Instruction CMP not yet implemented."
	163 Move X11, [X8+72]
	164 NotImplemented "Instruction NOP not yet implemented."
	165 NotImplemented "Instruction MADD not yet implemented."
	166 Move [X9+48], X11
	167 Move X9, [X20+16]
	168 Compare X9, 0
	169 JumpIfNotEqual {136}
	170 Move X22, [X9+24]
	171 Compare X22, 0
	172 JumpIfEqual {274}
	173 Move W28, W31
	174 Subtract W25, W31, W21
	175 Move TEMP, 0
	176 Not TEMP
	177 Move W26, TEMP
	178 Move X22, [X22+24]
	179 Move X8, [X9+24]
	180 NotImplemented "Instruction CMP not yet implemented."
	181 Compare X22, 0
	182 JumpIfEqual {274}
	183 Move W8, [X22+53]
	184 Compare W8, 0
	185 JumpIfEqual {271}
	186 Move W8, [X20+152]
	187 Compare W8, 0
	188 JumpIfEqual {201}
	189 Move X0, X22
	190 Call MeshUtils.FaceArea, X0
	191 Move X0, [X24]
	192 Move V8, V0
	193 Move W8, [X0+224]
	194 Compare W8, 0
	195 JumpIfNotEqual {197}
	196 Call 0x1C17DFC
	197 Move W8, 1
	198 NotImplemented "Instruction FABS not yet implemented."
	199 Move S1, W8
	200 NotImplemented "Instruction FCMP not yet implemented."
	201 Move X23, [X22+32]
	202 Move W29, W31
	203 Move W8, W28
	204 Move X9, X23
	205 Compare X9, 0
	206 JumpIfEqual {274}
	207 Move X11, [X9+64]
	208 Compare X11, 0
	209 JumpIfEqual {274}
	210 Move X27, [X20+128]
	211 Compare X27, 0
	212 JumpIfEqual {274}
	213 Move X10, [X27+24]
	214 Add W12, W28, W29
	215 NotImplemented "Instruction CMP not yet implemented."
	216 Move W11, [X11+64]
	217 Add X12, X27, W12
	218 Add W8, W8, 1
	219 Add W29, W29, 1
	220 Move [X12+32], W11
	221 Move X9, [X9+56]
	222 NotImplemented "Instruction CMP not yet implemented."
	223 NotImplemented "Instruction CMP not yet implemented."
	224 NotImplemented "Instruction CMP not yet implemented."
	225 NotImplemented "Instruction CSEL not yet implemented."
	226 Move W9, W31
	227 Subtract W10, W8, W10
	228 Add W11, W25, W29
	229 Add W31, W10, W9
	230 Add W12, W8, W9
	231 Add W9, W9, 1
	232 Add X12, X27, W12
	233 Add W31, W11, W9
	234 Move [X12+32], W26
	235 Add W28, W8, W9
	236 Add W28, W28, W29
	237 NotImplemented "Instruction CMP not yet implemented."
	238 Move X1, X23
	239 Call Tess.GetNeighbourFace, X0, X1
	240 Move W8, [X27+24]
	241 NotImplemented "Instruction CMP not yet implemented."
	242 Add X8, X27, W28
	243 Move [X8+32], W0
	244 Compare X23, 0
	245 JumpIfEqual {274}
	246 Move X23, [X23+56]
	247 Move X8, [X22+32]
	248 NotImplemented "Instruction CMP not yet implemented."
	249 Move X27, [X20+128]
	250 Move X1, X23
	251 Add W28, W28, 1
	252 Call Tess.GetNeighbourFace, X0, X1
	253 Compare X27, 0
	254 JumpIfNotEqual {240}
	255 NotImplemented "Instruction CMP not yet implemented."
	256 Move X8, [X20+128]
	257 Compare X8, 0
	258 JumpIfEqual {274}
	259 Move W9, [X8+24]
	260 Add W11, W25, W29
	261 Move W10, 1
	262 Add W12, W28, W10
	263 NotImplemented "Instruction CMP not yet implemented."
	264 Add W10, W10, 1
	265 Add W13, W11, W10
	266 Add X12, X8, W12
	267 NotImplemented "Instruction CMP not yet implemented."
	268 Move [X12+32], W26
	269 Add W28, W28, W10
	270 Add W28, W28, 1
	271 Move X9, [X20+16]
	272 Compare X9, 0
	273 JumpIfNotEqual {178}
	274 Call 0x1C17F20
	275 Move X20, [X31+112]
	276 Move X19, [X31+120]
	277 Move X22, [X31+96]
	278 Move X21, [X31+104]
	279 Move X24, [X31+80]
	280 Move X23, [X31+88]
	281 Move X26, [X31+64]
	282 Move X25, [X31+72]
	283 Move X28, [X31+48]
	284 Move X27, [X31+56]
	285 Move X29, [X31+32]
	286 Move X30, [X31+40]
	287 Move V8, [X31+16]
	288 Add X31, X31, 128
	289 Return 
	290 Call 0x1C17F28

Method: System.Void OutputContours()

Disassembly:
	0x03A9B450 CBNZ W8, 0x3A9B45C
	0x03A9B454 BL 0x1C16DFC
	0x03A9B458 LDR X0, [X22]
	0x03A9B45C LDR X8, [X0 + 0xB8]
	0x03A9B460 LDR X8, [X8 + 0x8]
	0x03A9B464 CBZ X8, 0x3A9B76C
	0x03A9B468 LDRSW X9, [X8 + 0x18]
	0x03A9B46C CMP X21, X9
	0x03A9B470 B.GE 0x3A9B4D8
	0x03A9B474 LDR W9, [X0 + 0xE0]
	0x03A9B478 LDP X20, X23, [X19 + 0xB8]
	0x03A9B47C CBNZ W9, 0x3A9B494
	0x03A9B480 BL 0x1C16DFC
	0x03A9B484 LDR X8, [X22]
	0x03A9B488 LDR X8, [X8 + 0xB8]
	0x03A9B48C LDR X8, [X8 + 0x8]
	0x03A9B490 CBZ X8, 0x3A9B76C
	0x03A9B494 LDR W9, [X8 + 0x18]
	0x03A9B498 CMP X21, X9
	0x03A9B49C B.CS 0x3A9B770
	0x03A9B4A0 CBZ X20, 0x3A9B76C
	0x03A9B4A4 ADD X8, X8, X21, 0x3, LSL
	0x03A9B4A8 LDR X1, [X8 + 0x20]
	0x03A9B4AC MOV X0, X20
	0x03A9B4B0 MOV X2, X31
	0x03A9B4B4 BL 0x3C15010
	0x03A9B4B8 CBZ X23, 0x3A9B76C
	0x03A9B4BC LDR W8, [X23 + 0x18]
	0x03A9B4C0 CMP X21, X8
	0x03A9B4C4 B.CS 0x3A9B770
	0x03A9B4C8 ADD X8, X23, X21, 0x2, LSL
	0x03A9B4CC ADD X21, X21, 0x1
	0x03A9B4D0 STR W0, [X8 + 0x20]
	0x03A9B4D4 B 0x3A9B448
	0x03A9B4D8 ADRP X21, 0x6BC000
	0x03A9B4DC LDR X21, [X21 + 0x748]
	0x03A9B4E0 LDR X20, [X19 + 0xB8]
	0x03A9B4E4 LDR X0, [X21]
	0x03A9B4E8 LDR W8, [X0 + 0xE0]
	0x03A9B4EC CBNZ W8, 0x3A9B4F4
	0x03A9B4F0 BL 0x1C16DFC
	0x03A9B4F4 CBZ X20, 0x3A9B76C
	0x03A9B4F8 LDR X8, [X21]
	0x03A9B4FC FMOV S0, W31
	0x03A9B500 MOV X0, X20
	0x03A9B504 MOV X2, X31
	0x03A9B508 LDR X8, [X8 + 0xB8]
	0x03A9B50C LDR W1, [X8 + 0x18]
	0x03A9B510 BL 0x3C15CD8
	0x03A9B514 LDR X0, [X19 + 0xB8]
	0x03A9B518 CBZ X0, 0x3A9B76C
	0x03A9B51C LDR X8, [X21]
	0x03A9B520 MOV X2, X31
	0x03A9B524 LDR X8, [X8 + 0xB8]
	0x03A9B528 LDR W1, [X8 + 0x1C]
	0x03A9B52C MOVZ W8, 0x42C00000
	0x03A9B530 FMOV S0, W8
	0x03A9B534 BL 0x3C15CD8
	0x03A9B538 LDR X0, [X19 + 0xB8]
	0x03A9B53C CBZ X0, 0x3A9B76C
	0x03A9B540 LDR X8, [X21]
	0x03A9B544 FMOV S0, 16
	0x03A9B548 MOV X2, X31
	0x03A9B54C LDR X8, [X8 + 0xB8]
	0x03A9B550 LDR W1, [X8 + 0x20]
	0x03A9B554 BL 0x3C15CD8
	0x03A9B558 LDR X0, [X19 + 0xB8]
	0x03A9B55C CBZ X0, 0x3A9B76C
	0x03A9B560 LDR X8, [X21]
	0x03A9B564 MOV X2, X31
	0x03A9B568 LDR X8, [X8 + 0xB8]
	0x03A9B56C LDR W1, [X8 + 0x24]
	0x03A9B570 MOVZ W8, 0x42400000
	0x03A9B574 FMOV S0, W8
	0x03A9B578 BL 0x3C15CD8
	0x03A9B57C LDR X0, [X19 + 0xB8]
	0x03A9B580 CBZ X0, 0x3A9B76C
	0x03A9B584 LDR X8, [X21]
	0x03A9B588 MOV X2, X31
	0x03A9B58C LDR X8, [X8 + 0xB8]
	0x03A9B590 LDR W1, [X8 + 0x28]
	0x03A9B594 MOVZ W8, 0x42E00000
	0x03A9B598 FMOV S0, W8
	0x03A9B59C BL 0x3C15CD8
	0x03A9B5A0 LDR X0, [X19 + 0xB8]
	0x03A9B5A4 CBZ X0, 0x3A9B76C
	0x03A9B5A8 LDR X8, [X21]
	0x03A9B5AC FMOV S0, 16
	0x03A9B5B0 MOV X2, X31
	0x03A9B5B4 LDR X8, [X8 + 0xB8]
	0x03A9B5B8 LDR W1, [X8 + 0x2C]
	0x03A9B5BC BL 0x3C15CD8
	0x03A9B5C0 LDR X0, [X19 + 0xB8]
	0x03A9B5C4 CBZ X0, 0x3A9B76C
	0x03A9B5C8 LDR X8, [X21]
	0x03A9B5CC MOV X2, X31
	0x03A9B5D0 LDR X8, [X8 + 0xB8]
	0x03A9B5D4 LDR W1, [X8 + 0x30]
	0x03A9B5D8 MOVZ W8, 0x42A00000
	0x03A9B5DC FMOV S0, W8
	0x03A9B5E0 BL 0x3C15CD8
	0x03A9B5E4 LDR X0, [X19 + 0xB8]
	0x03A9B5E8 CBZ X0, 0x3A9B76C
	0x03A9B5EC LDR X8, [X21]
	0x03A9B5F0 MOV X2, X31
	0x03A9B5F4 LDR X8, [X8 + 0xB8]
	0x03A9B5F8 LDR W1, [X8 + 0x34]
	0x03A9B5FC MOVZ W8, 0x42E00000
	0x03A9B600 FMOV S0, W8
	0x03A9B604 BL 0x3C15CD8
	0x03A9B608 LDR X0, [X19 + 0xB8]
	0x03A9B60C CBZ X0, 0x3A9B76C
	0x03A9B610 LDR X8, [X21]
	0x03A9B614 FMOV S0, 16
	0x03A9B618 MOV X2, X31
	0x03A9B61C LDR X8, [X8 + 0xB8]
	0x03A9B620 LDR W1, [X8 + 0x38]
	0x03A9B624 BL 0x3C15CD8
	0x03A9B628 LDR X0, [X19 + 0xB8]
	0x03A9B62C CBZ X0, 0x3A9B76C
	0x03A9B630 LDR X8, [X21]
	0x03A9B634 MOV X2, X31
	0x03A9B638 LDR X8, [X8 + 0xB8]
	0x03A9B63C LDR W1, [X8 + 0x3C]
	0x03A9B640 MOVZ W8, 0x42000000
	0x03A9B644 FMOV S0, W8
	0x03A9B648 BL 0x3C15CD8
	0x03A9B64C LDR X0, [X19 + 0xB8]
	0x03A9B650 CBZ X0, 0x3A9B76C
	0x03A9B654 LDR X8, [X21]
	0x03A9B658 MOV X2, X31
	0x03A9B65C LDR X8, [X8 + 0xB8]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+32], X20
	004 Move [X31+40], X19
	005 Move X20, 0x948000
	006 Move W8, [X20+973]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {20}
	012 Move X0, 0x6BA000
	013 Move X0, [X0+2640]
	014 Call 0x1C17CF4
	015 Move X0, 0x65A000
	016 Move X0, [X0+3672]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+973], W8
	020 Move X8, [X19+16]
	021 Move [X19+120], W31
	022 Move [X19+136], W31
	023 Compare X8, 0
	024 JumpIfEqual {137}
	025 Move X8, [X8+24]
	026 Compare X8, 0
	027 JumpIfEqual {137}
	028 Move X10, [X8+24]
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move W9, W31
	031 Move W11, W31
	032 Compare X10, 0
	033 JumpIfEqual {137}
	034 Move W12, [X10+53]
	035 Compare W12, 0
	036 JumpIfEqual {47}
	037 Move X12, [X10+32]
	038 Move X13, X12
	039 Add W11, W11, 1
	040 Compare X13, 0
	041 JumpIfEqual {144}
	042 Move X13, [X13+56]
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Add W9, W9, 1
	045 Move [X19+120], W11
	046 Move [X19+136], W9
	047 Move X10, [X10+24]
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Move W9, W31
	050 Move X8, 0x65A000
	051 Move X8, [X8+3672]
	052 Move X20, 0x6BA000
	053 Move W1, W9
	054 ShiftRight W1, 31
	055 And W1, W1, 0x3FFFFFFF
	056 Move X0, [X8]
	057 Move X20, [X20+2640]
	058 Call 0x1C17D6C
	059 Move [X19+128], X0
	060 Move W1, [X19+120]
	061 Move X0, [X20]
	062 Call 0x1C17D6C
	063 Move X14, [X19+16]
	064 Move [X19+112], X0
	065 Compare X14, 0
	066 JumpIfEqual {137}
	067 Move X8, [X14+24]
	068 Compare X8, 0
	069 JumpIfEqual {137}
	070 Move W9, W31
	071 Move W10, W31
	072 Move W11, W31
	073 Move W12, 24
	074 Move X8, [X8+24]
	075 Move X13, [X14+24]
	076 NotImplemented "Instruction CMP not yet implemented."
	077 Compare X8, 0
	078 JumpIfEqual {137}
	079 Move W13, [X8+53]
	080 Compare W13, 0
	081 JumpIfEqual {135}
	082 Move X14, [X8+32]
	083 Move W13, W31
	084 Move X15, X14
	085 Compare X0, 0
	086 JumpIfEqual {137}
	087 Compare X15, 0
	088 JumpIfEqual {137}
	089 Move X16, [X15+64]
	090 Compare X16, 0
	091 JumpIfEqual {137}
	092 Move W17, [X16+48]
	093 Move X16, [X16+40]
	094 Move [X31+8], W17
	095 Move [X31], X16
	096 Move W17, [X0+24]
	097 Add W16, W10, W13
	098 NotImplemented "Instruction CMP not yet implemented."
	099 Move W1, [X31+8]
	100 Move X2, [X31]
	101 Move X17, W16
	102 NotImplemented "Instruction MADD not yet implemented."
	103 Move [X0+40], W1
	104 Move [X0+32], X2
	105 Move X0, [X19+112]
	106 Compare X0, 0
	107 JumpIfEqual {137}
	108 Move X1, [X15+64]
	109 Compare X1, 0
	110 JumpIfEqual {137}
	111 Move W2, [X0+24]
	112 NotImplemented "Instruction CMP not yet implemented."
	113 Move X16, [X1+72]
	114 NotImplemented "Instruction NOP not yet implemented."
	115 NotImplemented "Instruction MADD not yet implemented."
	116 Add W13, W13, 1
	117 Move [X17+48], X16
	118 Move X15, [X15+56]
	119 NotImplemented "Instruction CMP not yet implemented."
	120 Move X14, [X19+128]
	121 Compare X14, 0
	122 JumpIfEqual {137}
	123 Move W16, [X14+24]
	124 NotImplemented "Instruction CMP not yet implemented."
	125 Add W15, W11, 1
	126 Add X17, X14, W11
	127 NotImplemented "Instruction CMP not yet implemented."
	128 Move [X17+32], W9
	129 Add X14, X14, W15
	130 Move [X14+32], W13
	131 Move X14, [X19+16]
	132 Add W10, W10, W13
	133 Add W11, W11, 2
	134 Add W9, W9, W13
	135 Compare X14, 0
	136 JumpIfNotEqual {74}
	137 Call 0x1C17F20
	138 Move X20, [X31+32]
	139 Move X19, [X31+40]
	140 Move X30, [X31+16]
	141 Add X31, X31, 48
	142 Return 
	143 Call 0x1C17F28
	144 Move [X19+120], W11
	145 Call 0x1C17F20

Method: System.Single SignedArea(UnityEngine.Rendering.Universal.LibTessDotNet.ContourVertex[] vertices)

Disassembly:
	0x03A9B660 LDR W1, [X8 + 0x40]
	0x03A9B664 MOVZ W8, 0x42C00000
	0x03A9B668 FMOV S0, W8
	0x03A9B66C BL 0x3C15CD8
	0x03A9B670 LDR X0, [X19 + 0xB8]
	0x03A9B674 CBZ X0, 0x3A9B76C
	0x03A9B678 LDR X8, [X21]
	0x03A9B67C FMOV S0, W31
	0x03A9B680 MOV X2, X31
	0x03A9B684 LDR X8, [X8 + 0xB8]
	0x03A9B688 LDR W1, [X8 + 0x44]
	0x03A9B68C BL 0x3C15CD8
	0x03A9B690 LDR X0, [X19 + 0xB8]
	0x03A9B694 CBZ X0, 0x3A9B76C
	0x03A9B698 LDR X8, [X21]
	0x03A9B69C MOV X2, X31
	0x03A9B6A0 LDR X8, [X8 + 0xB8]
	0x03A9B6A4 LDR W1, [X8 + 0x48]
	0x03A9B6A8 MOVZ W8, 0x42800000
	0x03A9B6AC FMOV S0, W8
	0x03A9B6B0 BL 0x3C15CD8
	0x03A9B6B4 LDR X0, [X19 + 0xB8]
	0x03A9B6B8 CBZ X0, 0x3A9B76C
	0x03A9B6BC LDR X8, [X21]
	0x03A9B6C0 MOV X2, X31
	0x03A9B6C4 LDR X8, [X8 + 0xB8]
	0x03A9B6C8 LDR W1, [X8 + 0x4C]
	0x03A9B6CC MOVZ W8, 0x42C00000
	0x03A9B6D0 FMOV S0, W8
	0x03A9B6D4 BL 0x3C15CD8
	0x03A9B6D8 LDR X0, [X19 + 0xB8]
	0x03A9B6DC CBZ X0, 0x3A9B76C
	0x03A9B6E0 LDR X8, [X21]
	0x03A9B6E4 FMOV S0, W31
	0x03A9B6E8 MOV X2, X31
	0x03A9B6EC LDR X8, [X8 + 0xB8]
	0x03A9B6F0 LDR W1, [X8 + 0x50]
	0x03A9B6F4 BL 0x3C15CD8

ISIL:
	001 Move [X31-16], X30
	002 Compare X1, 0
	003 JumpIfEqual {38}
	004 Move X8, [X1+24]
	005 And X9, X8, 0
	006 Move X10, X9
	007 ShiftRight X10, 32
	008 And X10, X10, 0x7FFFFFFF
	009 NotImplemented "Instruction CMP not yet implemented."
	010 Move W11, W8
	011 Move X10, X31
	012 Move X11, W11
	013 Add X12, X1, 36
	014 Move S0, W31
	015 Move W13, 24
	016 NotImplemented "Instruction CMP not yet implemented."
	017 Add X10, X10, 1
	018 NotImplemented "Instruction SDIV not yet implemented."
	019 NotImplemented "Instruction MSUB not yet implemented."
	020 NotImplemented "Instruction CMP not yet implemented."
	021 NotImplemented "Instruction SMADDL not yet implemented."
	022 Move S1, [X12-4]
	023 Move S4, [X12]
	024 Move S2, [X14+32]
	025 Move S3, [X14+36]
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Add X12, X12, 24
	028 Multiply S1, S1, S3
	029 Multiply S2, S4, S2
	030 Add S0, S0, S1
	031 Subtract S0, S0, S2
	032 Move S1, 0.5
	033 Multiply S0, S0, S1
	034 Move S0, W31
	035 Move X30, [X31+16]
	036 Return V0
	037 Call 0x1C17F28
	038 Call 0x1C17F20

Method: System.Void AddContour(UnityEngine.Rendering.Universal.LibTessDotNet.ContourVertex[] vertices)

Disassembly:
	0x03A9B6F8 LDR X0, [X19 + 0xB8]
	0x03A9B6FC CBZ X0, 0x3A9B76C

ISIL:
	001 Move W2, W31

Method: System.Void AddContour(UnityEngine.Rendering.Universal.LibTessDotNet.ContourVertex[] vertices, UnityEngine.Rendering.Universal.LibTessDotNet.ContourOrientation forceOrientation)

Disassembly:
	0x03A9B700 LDR X8, [X21]
	0x03A9B704 FMOV S0, W31
	0x03A9B708 MOV X2, X31
	0x03A9B70C LDR X8, [X8 + 0xB8]
	0x03A9B710 LDR W1, [X8 + 0x54]
	0x03A9B714 BL 0x3C15CD8
	0x03A9B718 LDR X0, [X19 + 0xB8]
	0x03A9B71C CBZ X0, 0x3A9B76C
	0x03A9B720 LDR X8, [X21]
	0x03A9B724 MOV X2, X31
	0x03A9B728 LDR X8, [X8 + 0xB8]
	0x03A9B72C LDR W1, [X8 + 0x58]
	0x03A9B730 MOVZ W8, 0x42C00000
	0x03A9B734 FMOV S0, W8
	0x03A9B738 BL 0x3C15CD8
	0x03A9B73C LDR X0, [X19 + 0xB8]
	0x03A9B740 CBZ X0, 0x3A9B76C
	0x03A9B744 LDR X8, [X21]
	0x03A9B748 LDP X20, X19, [X31 + 0x20]
	0x03A9B74C LDP X22, X21, [X31 + 0x10]
	0x03A9B750 MOV X2, X31
	0x03A9B754 LDR X8, [X8 + 0xB8]
	0x03A9B758 LDR W1, [X8 + 0x5C]
	0x03A9B75C MOVZ W8, 0x42C00000
	0x03A9B760 FMOV S0, W8
	0x03A9B764 LDP X30, X23, [X31], #0x30
	0x03A9B768 B 0x3C15CD8
	0x03A9B76C BL 0x1C16F20
	0x03A9B770 BL 0x1C16F28
	0x03A9B774 SUB X31, X31, 0xB0
	0x03A9B778 STP D9, D8, [X31 + 0x50]
	0x03A9B77C STP X30, X1, [X31 + 0x60]
	0x03A9B780 STP X26, X25, [X31 + 0x70]
	0x03A9B784 STP X24, X23, [X31 + 0x80]
	0x03A9B788 STP X22, X21, [X31 + 0x90]
	0x03A9B78C STP X20, X19, [X31 + 0xA0]
	0x03A9B790 ADRP X20, 0x947000
	0x03A9B794 LDRB W8, [X20 + 0x3E2]
	0x03A9B798 MOV X22, X2
	0x03A9B79C MOV X19, X0
	0x03A9B7A0 TBNZ X8, 0x0, 0x3A9B818
	0x03A9B7A4 ADRP X0, 0x680000
	0x03A9B7A8 LDR X0, [X0 + 0x8F8]
	0x03A9B7AC BL 0x1C16CF4
	0x03A9B7B0 ADRP X0, 0x6BC000
	0x03A9B7B4 LDR X0, [X0 + 0x148]
	0x03A9B7B8 BL 0x1C16CF4
	0x03A9B7BC ADRP X0, 0x6B5000
	0x03A9B7C0 LDR X0, [X0 + 0xC80]
	0x03A9B7C4 BL 0x1C16CF4
	0x03A9B7C8 ADRP X0, 0x6BA000
	0x03A9B7CC LDR X0, [X0 + 0xF48]
	0x03A9B7D0 BL 0x1C16CF4
	0x03A9B7D4 ADRP X0, 0x6BA000
	0x03A9B7D8 LDR X0, [X0 + 0xF58]
	0x03A9B7DC BL 0x1C16CF4
	0x03A9B7E0 ADRP X0, 0x6BA000
	0x03A9B7E4 LDR X0, [X0 + 0xF68]
	0x03A9B7E8 BL 0x1C16CF4
	0x03A9B7EC ADRP X0, 0x6BC000
	0x03A9B7F0 LDR X0, [X0 + 0x750]
	0x03A9B7F4 BL 0x1C16CF4
	0x03A9B7F8 ADRP X0, 0x6BA000
	0x03A9B7FC LDR X0, [X0 + 0xF88]
	0x03A9B800 BL 0x1C16CF4
	0x03A9B804 ADRP X0, 0x6BC000
	0x03A9B808 LDR X0, [X0 + 0x380]
	0x03A9B80C BL 0x1C16CF4
	0x03A9B810 MOVZ W8, 0x1
	0x03A9B814 STRB W8, [X20 + 0x3E2]
	0x03A9B818 STRB W31, [X31 + 0x48]
	0x03A9B81C LDR X21, [X22 + 0xD8]
	0x03A9B820 CBZ X21, 0x3A9BBFC
	0x03A9B824 MOV X0, X21
	0x03A9B828 MOV X1, X31
	0x03A9B82C BL 0x3C03820
	0x03A9B830 TBZ X0, 0x0, 0x3A9B8A4
	0x03A9B834 MOV X0, X31
	0x03A9B838 BL 0x3C104AC
	0x03A9B83C MOV V8.16B, V0.16B
	0x03A9B840 LDR V0, [X22 + 0xF0]
	0x03A9B844 ADRP X20, 0x93D000
	0x03A9B848 LDRB W8, [X20 + 0xABE]
	0x03A9B84C SCVTF S9, S0
	0x03A9B850 CBNZ W8, 0x3A9B868
	0x03A9B854 ADRP X0, 0x658000
	0x03A9B858 LDR X0, [X0 + 0x5A8]
	0x03A9B85C BL 0x1C16CF4
	0x03A9B860 MOVZ W8, 0x1
	0x03A9B864 STRB W8, [X20 + 0xABE]
	0x03A9B868 ADRP X8, 0x658000
	0x03A9B86C LDR X8, [X8 + 0x5A8]
	0x03A9B870 FMUL S8, S8, S9
	0x03A9B874 LDR X0, [X8]
	0x03A9B878 LDR W8, [X0 + 0xE0]
	0x03A9B87C CBNZ W8, 0x3A9B884
	0x03A9B880 BL 0x1C16DFC
	0x03A9B884 MOVZ W8, 0x7F800000
	0x03A9B888 FRINTP S0, S8
	0x03A9B88C FMOV S1, W8
	0x03A9B890 FCVTPS W9, S8
	0x03A9B894 FCMP S0, S1
	0x03A9B898 MOVZ W8, 0x80000000
	0x03A9B89C CSEL W8, W8, W9, EQ
	0x03A9B8A0 B 0x3A9B8A8
	0x03A9B8A4 LDR W8, [X22 + 0xF0]
	0x03A9B8A8 CBZ X19, 0x3A9BBFC
	0x03A9B8AC MOV X0, X21
	0x03A9B8B0 MOV X1, X31
	0x03A9B8B4 STR W8, [X19 + 0x24]
	0x03A9B8B8 BL 0x3C03820
	0x03A9B8BC TBZ X0, 0x0, 0x3A9B930
	0x03A9B8C0 MOV X0, X31
	0x03A9B8C4 BL 0x3C104D4
	0x03A9B8C8 MOV V8.16B, V0.16B
	0x03A9B8CC LDR V0, [X22 + 0xF4]
	0x03A9B8D0 ADRP X20, 0x93D000

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+16], X30
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X22, 0x948000
	013 Move W8, [X22+974]
	014 Move W21, W2
	015 Move X19, X1
	016 Move X20, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {26}
	021 Move X0, 0x6BD000
	022 Move X0, [X0+1840]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X22+974], W8
	026 Move X8, [X20+16]
	027 Compare X8, 0
	028 JumpIfEqual {38}
	029 Compare W21, 0
	030 JumpIfEqual {47}
	031 Move X1, X19
	032 Call Tess.SignedArea, X0, X1
	033 NotImplemented "Instruction CMP not yet implemented."
	034 NotImplemented "Instruction FCMP not yet implemented."
	035 Move W22, 1
	036 Compare X19, 0
	037 JumpIfNotEqual {57}
	038 Move X8, 0x6BD000
	039 Move X8, [X8+1840]
	040 Move X0, [X8]
	041 Call 0x1C17F10
	042 Move X22, X0
	043 Call Mesh..ctor, X0
	044 Move [X20+16], X22
	045 Compare W21, 0
	046 JumpIfNotEqual {31}
	047 Move W22, W31
	048 Compare X19, 0
	049 JumpIfNotEqual {57}
	050 NotImplemented "Instruction CMP not yet implemented."
	051 NotImplemented "Instruction CSET not yet implemented."
	052 NotImplemented "Instruction FCMP not yet implemented."
	053 NotImplemented "Instruction CSET not yet implemented."
	054 And W22, W8, W9
	055 Compare X19, 0
	056 JumpIfEqual {140}
	057 Move W8, [X19+24]
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Move W23, W31
	060 Move X21, X31
	061 Move TEMP, 0
	062 Not TEMP
	063 Move W24, TEMP
	064 Move W25, 24
	065 Move W26, 1
	066 Move TEMP, 0
	067 Not TEMP
	068 Move W27, TEMP
	069 Compare X21, 0
	070 JumpIfEqual {77}
	071 Move X8, [X20+16]
	072 Compare X8, 0
	073 JumpIfEqual {140}
	074 Move X1, X21
	075 Call Mesh.SplitEdge, X0, X1
	076 Move X21, [X21+56]
	077 Move X0, [X20+16]
	078 Compare X0, 0
	079 JumpIfEqual {140}
	080 Call Mesh.MakeEdge, X0
	081 Compare X0, 0
	082 JumpIfEqual {140}
	083 Move X8, [X20+16]
	084 Compare X8, 0
	085 JumpIfEqual {140}
	086 Move X2, [X0+40]
	087 Move X1, X0
	088 Move X21, X0
	089 Call Mesh.Splice, X0, X1, X2
	090 Move W8, W23
	091 Compare W22, 0
	092 JumpIfEqual {95}
	093 Move W8, [X19+24]
	094 Add W8, W27, W8
	095 Compare X21, 0
	096 JumpIfEqual {140}
	097 Move W9, [X19+24]
	098 NotImplemented "Instruction CMP not yet implemented."
	099 NotImplemented "Instruction SMADDL not yet implemented."
	100 Move X9, [X21+64]
	101 Move W11, [X10+40]
	102 Move X10, [X10+32]
	103 Move [X31+8], W11
	104 Move [X31], X10
	105 Compare X9, 0
	106 JumpIfEqual {140}
	107 Move W10, [X31+8]
	108 Move X11, [X31]
	109 Move [X9+48], W10
	110 Move [X9+40], X11
	111 Move X9, [X19+24]
	112 NotImplemented "Instruction CMP not yet implemented."
	113 Move X10, [X21+64]
	114 Compare X10, 0
	115 JumpIfEqual {140}
	116 Move X8, W8
	117 NotImplemented "Instruction MADD not yet implemented."
	118 Move X8, [X8+48]
	119 Move [X10+72], X8
	120 Move X8, [X21+40]
	121 Move [X21+88], W26
	122 Compare X8, 0
	123 JumpIfEqual {140}
	124 Add W23, W23, 1
	125 NotImplemented "Instruction CMP not yet implemented."
	126 Subtract W27, W27, 1
	127 Move [X8+88], W24
	128 Move X20, [X31+80]
	129 Move X19, [X31+88]
	130 Move X22, [X31+64]
	131 Move X21, [X31+72]
	132 Move X24, [X31+48]
	133 Move X23, [X31+56]
	134 Move X26, [X31+32]
	135 Move X25, [X31+40]
	136 Move X30, [X31+16]
	137 Move X27, [X31+24]
	138 Add X31, X31, 96
	139 Return 
	140 Call 0x1C17F20
	141 Call 0x1C17F28

Method: System.Void Tessellate(UnityEngine.Rendering.Universal.LibTessDotNet.WindingRule windingRule, UnityEngine.Rendering.Universal.LibTessDotNet.ElementType elementType, System.Int32 polySize)

Disassembly:
	0x03A9B8D4 LDRB W8, [X20 + 0xABE]
	0x03A9B8D8 SCVTF S9, S0

ISIL:
	001 Move X4, X31

Method: System.Void Tessellate(UnityEngine.Rendering.Universal.LibTessDotNet.WindingRule windingRule, UnityEngine.Rendering.Universal.LibTessDotNet.ElementType elementType, System.Int32 polySize, UnityEngine.Rendering.Universal.LibTessDotNet.CombineCallback combineCallback)

Disassembly:
	0x03A9B8DC CBNZ W8, 0x3A9B8F4
	0x03A9B8E0 ADRP X0, 0x658000
	0x03A9B8E4 LDR X0, [X0 + 0x5A8]
	0x03A9B8E8 BL 0x1C16CF4
	0x03A9B8EC MOVZ W8, 0x1
	0x03A9B8F0 STRB W8, [X20 + 0xABE]
	0x03A9B8F4 ADRP X8, 0x658000
	0x03A9B8F8 LDR X8, [X8 + 0x5A8]
	0x03A9B8FC FMUL S8, S8, S9
	0x03A9B900 LDR X0, [X8]
	0x03A9B904 LDR W8, [X0 + 0xE0]
	0x03A9B908 CBNZ W8, 0x3A9B910
	0x03A9B90C BL 0x1C16DFC
	0x03A9B910 MOVZ W8, 0x7F800000
	0x03A9B914 FRINTP S0, S8
	0x03A9B918 FMOV S1, W8
	0x03A9B91C FCVTPS W9, S8
	0x03A9B920 FCMP S0, S1
	0x03A9B924 MOVZ W8, 0x80000000
	0x03A9B928 CSEL W8, W8, W9, EQ
	0x03A9B92C B 0x3A9B934
	0x03A9B930 LDR W8, [X22 + 0xF4]
	0x03A9B934 STR W8, [X19 + 0x28]
	0x03A9B938 LDR W8, [X22 + 0x22C]
	0x03A9B93C CBZ W8, 0x3A9B948
	0x03A9B940 MOVZ W20, 0x1
	0x03A9B944 B 0x3A9B954
	0x03A9B948 LDR W8, [X22 + 0x228]
	0x03A9B94C ORN W8, W31, W8, 0x0
	0x03A9B950 UBFM W20, W8, 0x1F, 0x1F
	0x03A9B954 LDR X0, [X22 + 0xD8]
	0x03A9B958 CBZ X0, 0x3A9BBFC
	0x03A9B95C ADD X8, X31, 0x8
	0x03A9B960 MOV X1, X31
	0x03A9B964 BL 0x3C04220
	0x03A9B968 LDR X0, [X22 + 0xD8]
	0x03A9B96C CBZ X0, 0x3A9BBFC
	0x03A9B970 MOV X1, X31
	0x03A9B974 BL 0x3C03928
	0x03A9B978 LDR X0, [X22 + 0xD8]
	0x03A9B97C CBZ X0, 0x3A9BBFC
	0x03A9B980 ADRP X26, 0x6BC000
	0x03A9B984 LDR X26, [X26 + 0x148]
	0x03A9B988 MOV X1, X31
	0x03A9B98C ADD X23, X19, 0x78
	0x03A9B990 ADD X24, X19, 0x88
	0x03A9B994 ADD X25, X22, 0x238
	0x03A9B998 BL 0x3C035DC
	0x03A9B99C MOV X1, X23
	0x03A9B9A0 MOV X2, X24
	0x03A9B9A4 MOV X3, X25
	0x03A9B9A8 MOV W4, W20
	0x03A9B9AC MOV W6, W31
	0x03A9B9B0 BL 0x3A9BC8C
	0x03A9B9B4 LDR X0, [X26]
	0x03A9B9B8 LDR X20, [X22]
	0x03A9B9BC LDR W8, [X0 + 0xE0]
	0x03A9B9C0 CBNZ W8, 0x3A9B9CC
	0x03A9B9C4 BL 0x1C16DFC
	0x03A9B9C8 LDR X0, [X26]
	0x03A9B9CC LDR X8, [X0 + 0xB8]
	0x03A9B9D0 ADD X0, X31, 0x48
	0x03A9B9D4 MOV X1, X20
	0x03A9B9D8 MOV X3, X31
	0x03A9B9DC LDR X2, [X8 + 0x60]
	0x03A9B9E0 BL 0x39B1DB0
	0x03A9B9E4 ADD X2, X22, 0x228
	0x03A9B9E8 MOV X1, X20
	0x03A9B9EC BL 0x3A9DF24
	0x03A9B9F0 ADRP X25, 0x680000
	0x03A9B9F4 LDR X25, [X25 + 0x8F8]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X25, 0x948000
	010 Move X24, 0x6BD000
	011 Move W8, [X25+975]
	012 Move X24, [X24+1592]
	013 Move X22, X4
	014 Move W20, W3
	015 Move W21, W2
	016 Move W23, W1
	017 Move X19, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {30}
	022 Move X0, 0x6BD000
	023 Move X0, [X0+1848]
	024 Call 0x1C17CF4
	025 Move X0, 0x6BD000
	026 Move X0, [X0+1592]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X25+975], W8
	030 Move X0, [X24]
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {36}
	034 Call 0x1C17DFC
	035 Move X0, [X24]
	036 Move X8, [X0+184]
	037 Move X9, [X19+16]
	038 Move W10, [X8+8]
	039 Move X8, [X8]
	040 Move [X19+128], X31
	041 Move [X19+76], W23
	042 Move [X19+32], W10
	043 Move [X19+24], X8
	044 Move [X19+104], X22
	045 Move [X19+112], X31
	046 Compare X9, 0
	047 JumpIfEqual {76}
	048 Move X0, X19
	049 Call Tess.ProjectPolygon, X0
	050 Move X0, X19
	051 Call Tess.ComputeInterior, X0
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Move W1, 1
	054 Move W2, 1
	055 Move X0, X19
	056 Call Tess.SetWindingNumber, X0, X1, X2
	057 Move X0, X19
	058 Call Tess.OutputContours, X0
	059 Move X0, X19
	060 Call Tess.TessellateInterior, X0
	061 Move X0, X19
	062 Move W1, W21
	063 Move W2, W20
	064 Call Tess.OutputPolymesh, X0, X1, X2
	065 Move W8, [X19+153]
	066 Compare W8, 0
	067 JumpIfEqual {75}
	068 Move X0, [X19+16]
	069 Compare X0, 0
	070 JumpIfEqual {85}
	071 Move X8, 0x6BD000
	072 Move X8, [X8+1848]
	073 Move X1, [X8]
	074 Call 0x24A7F24, X0
	075 Move [X19+16], X31
	076 Move X20, [X31+48]
	077 Move X19, [X31+56]
	078 Move X22, [X31+32]
	079 Move X21, [X31+40]
	080 Move X24, [X31+16]
	081 Move X23, [X31+24]
	082 Move X30, [X31+64]
	083 Move X25, [X31+72]
	084 Return 
	085 Call 0x1C17F20

