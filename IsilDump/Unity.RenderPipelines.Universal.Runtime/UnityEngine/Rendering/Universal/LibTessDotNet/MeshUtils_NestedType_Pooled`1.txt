Type: UnityEngine.Rendering.Universal.LibTessDotNet.MeshUtils/Pooled`1

Method: System.Void Reset()

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Void OnFree()

Disassembly:
	0x024A7E18 CBZ X24, 0x24A7EF8

ISIL:
	001 Return 

Method: T Create()

Disassembly:
	0x024A7E1C LDR X8, [X27 + 0xC0]
	0x024A7E20 LDR X9, [X8 + 0x20]
	0x024A7E24 LDR X1, [X8 + 0x40]
	0x024A7E28 LDR W8, [X9 + 0x28]
	0x024A7E2C LDR X0, [X1]
	0x024A7E30 TBNZ X8, 0x1F, 0x24A7E38
	0x024A7E34 LDR X22, [X22]
	0x024A7E38 STUR X22, [X29 - 0x18]
	0x024A7E3C LDR X8, [X1 + 0x10]
	0x024A7E40 SUB X3, X29, 0x18
	0x024A7E44 SUB X4, X29, 0x10
	0x024A7E48 MOV X2, X24
	0x024A7E4C BLR X8
	0x024A7E50 LDURB W8, [X29 - 0x10]
	0x024A7E54 CBZ W8, 0x24A7E88
	0x024A7E58 LDR X8, [X20 + 0x20]
	0x024A7E5C LDR X9, [X8 + 0xC0]
	0x024A7E60 LDR X8, [X9 + 0x20]
	0x024A7E64 LDRB W10, [X8 + 0x135]
	0x024A7E68 TBNZ X10, 0x0, 0x24A7ECC
	0x024A7E6C MOV X0, X8
	0x024A7E70 BL 0x1C5C684
	0x024A7E74 LDR X8, [X20 + 0x20]
	0x024A7E78 LDUR X19, [X29 - 0x20]
	0x024A7E7C LDR X9, [X8 + 0xC0]
	0x024A7E80 LDR X8, [X9 + 0x20]
	0x024A7E84 B 0x24A7ED0
	0x024A7E88 ADRP X8, 0x1C4E000
	0x024A7E8C LDR X8, [X8 + 0x278]
	0x024A7E90 LDR X8, [X8]
	0x024A7E94 LDR X8, [X8 + 0xB8]
	0x024A7E98 LDR X0, [X8]
	0x024A7E9C LDR X8, [X25 + 0x28]
	0x024A7EA0 LDUR X9, [X29 - 0x8]
	0x024A7EA4 CMP X8, X9
	0x024A7EA8 B.NE 0x24A7EFC
	0x024A7EAC ADD X31, X29, 0x0
	0x024A7EB0 LDP X20, X19, [X31 + 0x50]
	0x024A7EB4 LDP X22, X21, [X31 + 0x40]
	0x024A7EB8 LDP X24, X23, [X31 + 0x30]
	0x024A7EBC LDP X26, X25, [X31 + 0x20]
	0x024A7EC0 LDR X27, [X31 + 0x10]
	0x024A7EC4 LDP X29, X30, [X31], #0x60
	0x024A7EC8 RET
	0x024A7ECC MOV X0, X8
	0x024A7ED0 LDR W8, [X8 + 0x28]
	0x024A7ED4 LDR X1, [X9 + 0x30]
	0x024A7ED8 SUB X5, X29, 0x10
	0x024A7EDC MOV X2, X21
	0x024A7EE0 CMP W8, 0x0
	0x024A7EE4 SUB X8, X29, 0x20
	0x024A7EE8 CSEL X3, X19, X8, LT
	0x024A7EEC MOV X4, X31
	0x024A7EF0 BL 0x1C17728
	0x024A7EF4 B 0x24A7D9C
	0x024A7EF8 BL 0x1C16F20
	0x024A7EFC BL 0x3EB1B20
	0x024A7F00 STP X29, X30, [X31 - 0x50]!
	0x024A7F04 STR X25, [X31 + 0x10]
	0x024A7F08 STP X24, X23, [X31 + 0x20]
	0x024A7F0C STP X22, X21, [X31 + 0x30]
	0x024A7F10 STP X20, X19, [X31 + 0x40]
	0x024A7F14 ADD X29, X31, 0x0
	0x024A7F18 SUB X31, X31, 0x10
	0x024A7F1C MRS X24, 0xC000
	0x024A7F20 LDR X8, [X24 + 0x28]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X0
	005 Move X0, [X0+32]
	006 Move W8, [X0+309]
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {12}
	011 Call 0x1C5D684
	012 Move X8, [X0+192]
	013 Move X0, [X8+16]
	014 Move W8, [X0+309]
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {20}
	019 Call 0x1C5D684
	020 Move X8, [X0+184]
	021 Move X8, [X8]
	022 Compare X8, 0
	023 JumpIfEqual {86}
	024 Move X0, [X19+32]
	025 Move W8, [X0+309]
	026 Move TEMP, X8
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {31}
	030 Call 0x1C5D684
	031 Move X8, [X0+192]
	032 Move X0, [X8+16]
	033 Move W8, [X0+309]
	034 Move TEMP, X8
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfEqual {39}
	038 Call 0x1C5D684
	039 Move X8, [X0+184]
	040 Move X20, [X8]
	041 Compare X20, 0
	042 JumpIfEqual {100}
	043 Move X0, [X19+32]
	044 Move W8, [X0+309]
	045 Move TEMP, X8
	046 And TEMP, TEMP, 1
	047 Compare TEMP, 1
	048 JumpIfEqual {50}
	049 Call 0x1C5D684
	050 Move W8, [X20+24]
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Move X0, [X19+32]
	053 Move W8, [X0+309]
	054 Move TEMP, X8
	055 And TEMP, TEMP, 1
	056 Compare TEMP, 1
	057 JumpIfEqual {59}
	058 Call 0x1C5D684
	059 Move X8, [X0+192]
	060 Move X0, [X8+16]
	061 Move W8, [X0+309]
	062 Move TEMP, X8
	063 And TEMP, TEMP, 1
	064 Compare TEMP, 1
	065 JumpIfEqual {67}
	066 Call 0x1C5D684
	067 Move X8, [X0+184]
	068 Move X20, [X8]
	069 Compare X20, 0
	070 JumpIfEqual {100}
	071 Move X0, [X19+32]
	072 Move W8, [X0+309]
	073 Move TEMP, X8
	074 And TEMP, TEMP, 1
	075 Compare TEMP, 1
	076 JumpIfEqual {78}
	077 Call 0x1C5D684
	078 Move X8, [X0+192]
	079 Move X0, X20
	080 Move X20, [X31+16]
	081 Move X19, [X31+24]
	082 Move X1, [X8+32]
	083 Move X30, [X31+32]
	084 Call Stack`1<Object>.Pop, X0
	085 Return X0
	086 Move X0, [X19+32]
	087 Move W8, [X0+309]
	088 Move TEMP, X8
	089 And TEMP, TEMP, 1
	090 Compare TEMP, 1
	091 JumpIfEqual {93}
	092 Call 0x1C5D684
	093 Move X8, [X0+192]
	094 Move X20, [X31+16]
	095 Move X19, [X31+24]
	096 Move X0, [X8+48]
	097 Move X30, [X31+32]
	098 Call Activator.CreateInstance
	099 Return X0
	100 Call 0x1C17F20

Method: System.Void Free()

Disassembly:
	0x024A7F24 MOV X19, X1
	0x024A7F28 MOV X22, X0
	0x024A7F2C STUR X8, [X29 - 0x8]
	0x024A7F30 LDR X8, [X2 + 0x20]
	0x024A7F34 LDR X25, [X8 + 0xC0]
	0x024A7F38 LDR X8, [X25 + 0x20]
	0x024A7F3C LDR W20, [X8 + 0xFC]
	0x024A7F40 ADD X8, X31, 0x0
	0x024A7F44 ADD X9, X20, 0xF
	0x024A7F48 AND X9, X9, 0x1FFFFFFFF
	0x024A7F4C SUB X21, X8, X9
	0x024A7F50 ADD X31, X21, 0x0
	0x024A7F54 ADD X8, X31, 0x0
	0x024A7F58 SUB X23, X8, X9
	0x024A7F5C ADD X31, X23, 0x0
	0x024A7F60 MOV X0, X23
	0x024A7F64 MOV W1, W31
	0x024A7F68 MOV X2, X20
	0x024A7F6C BL 0x3EB1B10
	0x024A7F70 CBZ X22, 0x24A7FF0
	0x024A7F74 LDR X1, [X25 + 0x18]
	0x024A7F78 SUB X3, X29, 0x10
	0x024A7F7C MOV X2, X22
	0x024A7F80 MOV X4, X21
	0x024A7F84 LDR X0, [X1]
	0x024A7F88 STUR X21, [X29 - 0x10]
	0x024A7F8C LDR X8, [X1 + 0x10]
	0x024A7F90 BLR X8
	0x024A7F94 MOV X0, X23
	0x024A7F98 MOV X1, X21
	0x024A7F9C MOV X2, X20
	0x024A7FA0 BL 0x3EB1AC0
	0x024A7FA4 MOV X0, X21
	0x024A7FA8 MOV X1, X23
	0x024A7FAC MOV X2, X20
	0x024A7FB0 BL 0x3EB1AC0
	0x024A7FB4 MOV X0, X19
	0x024A7FB8 MOV X1, X21
	0x024A7FBC MOV X2, X20
	0x024A7FC0 BL 0x3EB1AC0
	0x024A7FC4 LDR X8, [X24 + 0x28]
	0x024A7FC8 LDUR X9, [X29 - 0x8]
	0x024A7FCC CMP X8, X9
	0x024A7FD0 B.NE 0x24A7FF4
	0x024A7FD4 ADD X31, X29, 0x0
	0x024A7FD8 LDP X20, X19, [X31 + 0x40]
	0x024A7FDC LDP X22, X21, [X31 + 0x30]
	0x024A7FE0 LDP X24, X23, [X31 + 0x20]
	0x024A7FE4 LDR X25, [X31 + 0x10]
	0x024A7FE8 LDP X29, X30, [X31], #0x50
	0x024A7FEC RET
	0x024A7FF0 BL 0x1C16F20
	0x024A7FF4 BL 0x3EB1B20
	0x024A7FF8 STP X29, X30, [X31 - 0x50]!
	0x024A7FFC STP X26, X25, [X31 + 0x10]
	0x024A8000 STP X24, X23, [X31 + 0x20]
	0x024A8004 STP X22, X21, [X31 + 0x30]
	0x024A8008 STP X20, X19, [X31 + 0x40]
	0x024A800C ADD X29, X31, 0x0
	0x024A8010 SUB X31, X31, 0x20
	0x024A8014 MRS X25, 0xC000
	0x024A8018 LDR X8, [X25 + 0x28]
	0x024A801C MOV X23, X2
	0x024A8020 MOV X21, X1
	0x024A8024 MOV X19, X0
	0x024A8028 STUR X8, [X29 - 0x8]
	0x024A802C STUR X1, [X29 - 0x20]
	0x024A8030 LDR X8, [X2 + 0x20]
	0x024A8034 LDR X8, [X8 + 0xC0]
	0x024A8038 LDR X9, [X8 + 0x20]
	0x024A803C LDR W22, [X9 + 0xFC]
	0x024A8040 ADD X9, X31, 0x0
	0x024A8044 ADD X10, X22, 0xF
	0x024A8048 AND X10, X10, 0x1FFFFFFFF
	0x024A804C SUB X20, X9, X10
	0x024A8050 ADD X31, X20, 0x0
	0x024A8054 LDR X8, [X8]
	0x024A8058 LDR X1, [X8 + 0x80]
	0x024A805C BL 0x1C16D18
	0x024A8060 LDR X24, [X0]
	0x024A8064 CBZ X24, 0x24A8184
	0x024A8068 LDR X26, [X23 + 0x20]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X0]
	007 Move X20, X1
	008 Move X19, X0
	009 Move X9, [X8+392]
	010 Move X8, [X8+400]
	011 Move X1, X8
	012 NotImplemented "Instruction BLR not yet implemented."
	013 Move X8, [X19]
	014 Move X0, X19
	015 Move X9, [X8+376]
	016 Move X1, [X8+384]
	017 NotImplemented "Instruction BLR not yet implemented."
	018 Move X8, [X20+32]
	019 Move X8, [X8+192]
	020 Move X0, [X8+16]
	021 Move W8, [X0+309]
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {27}
	026 Call 0x1C5D684
	027 Move X8, [X0+184]
	028 Move X8, [X8]
	029 Compare X8, 0
	030 JumpIfNotEqual {66}
	031 Move X8, [X20+32]
	032 Move X8, [X8+192]
	033 Move X0, [X8+8]
	034 Move W8, [X0+309]
	035 Move TEMP, X8
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfEqual {40}
	039 Call 0x1C5D684
	040 Call 0x1C17F10
	041 Move X8, [X20+32]
	042 Move X21, X0
	043 Move X8, [X8+192]
	044 Move X1, [X8+72]
	045 Call Stack`1<Object>..ctor, X0
	046 Move X8, [X20+32]
	047 Move X8, [X8+192]
	048 Move X0, [X8+16]
	049 Move W9, [X0+309]
	050 Move TEMP, X9
	051 And TEMP, TEMP, 1
	052 Compare TEMP, 1
	053 JumpIfEqual {57}
	054 Call 0x1C5D684
	055 Move X8, [X20+32]
	056 Move X8, [X8+192]
	057 Move X9, [X0+184]
	058 Move [X9], X21
	059 Move X0, [X8+16]
	060 Move W8, [X0+309]
	061 Move TEMP, X8
	062 And TEMP, TEMP, 1
	063 Compare TEMP, 1
	064 JumpIfEqual {66}
	065 Call 0x1C5D684
	066 Move X8, [X20+32]
	067 Move X8, [X8+192]
	068 Move X0, [X8+16]
	069 Move W8, [X0+309]
	070 Move TEMP, X8
	071 And TEMP, TEMP, 1
	072 Compare TEMP, 1
	073 JumpIfEqual {75}
	074 Call 0x1C5D684
	075 Move X8, [X0+184]
	076 Move X21, [X8]
	077 Compare X21, 0
	078 JumpIfEqual {107}
	079 Move X8, [X20+32]
	080 Move X8, [X8+192]
	081 Move X22, [X8+40]
	082 Move W8, [X22+309]
	083 Move TEMP, X8
	084 And TEMP, TEMP, 1
	085 Compare TEMP, 1
	086 JumpIfEqual {90}
	087 Move X0, X22
	088 Call 0x1C5D684
	089 Move X22, X0
	090 Move X0, X19
	091 Move X1, X22
	092 Call 0x1C17E00
	093 Compare X0, 0
	094 JumpIfEqual {108}
	095 Move X8, [X20+32]
	096 Move X1, X0
	097 Move X0, X21
	098 Move X20, [X31+32]
	099 Move X19, [X31+40]
	100 Move X8, [X8+192]
	101 Move X22, [X31+16]
	102 Move X21, [X31+24]
	103 Move X2, [X8+80]
	104 Move X30, [X31+48]
	105 Call Stack`1<Object>.Push, X0, X1
	106 Return 
	107 Call 0x1C17F20
	108 Move X0, X19
	109 Move X1, X22
	110 Call 0x1C181E0

Method: System.Void .ctor()

Disassembly:
	0x024A806C MOV X0, X20
	0x024A8070 MOV X2, X22

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

