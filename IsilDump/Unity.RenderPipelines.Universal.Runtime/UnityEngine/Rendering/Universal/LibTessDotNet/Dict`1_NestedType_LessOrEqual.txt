Type: UnityEngine.Rendering.Universal.LibTessDotNet.Dict`1/LessOrEqual

Method: System.Void .ctor(System.Object object, System.IntPtr method)

Disassembly:
	0x02EEAF5C ADRP X0, 0x1235000
	0x02EEAF60 LDR X0, [X0 + 0x110]
	0x02EEAF64 BL 0x1C16D08
	0x02EEAF68 MOV X3, X0
	0x02EEAF6C MOV X0, X21
	0x02EEAF70 MOV X1, X22
	0x02EEAF74 MOV X2, X20
	0x02EEAF78 MOV X4, X31
	0x02EEAF7C BL 0x3312C8C
	0x02EEAF80 MOV X0, X21
	0x02EEAF84 B 0x2EEAFC0
	0x02EEAF88 ADRP X0, 0x1211000
	0x02EEAF8C LDR X0, [X0 + 0x578]
	0x02EEAF90 MOV X19, X3
	0x02EEAF94 BL 0x1C16D08
	0x02EEAF98 BL 0x1C16F10
	0x02EEAF9C MOV X20, X0
	0x02EEAFA0 ADRP X0, 0x1235000
	0x02EEAFA4 LDR X0, [X0 + 0x118]
	0x02EEAFA8 BL 0x1C16D08
	0x02EEAFAC MOV X1, X0
	0x02EEAFB0 MOV X0, X20
	0x02EEAFB4 MOV X2, X31
	0x02EEAFB8 BL 0x3314A68
	0x02EEAFBC MOV X0, X20
	0x02EEAFC0 MOV X1, X19
	0x02EEAFC4 BL 0x1C16DEC
	0x02EEAFC8 STP X30, X23, [X31 - 0x30]!
	0x02EEAFCC STP X22, X21, [X31 + 0x10]
	0x02EEAFD0 STP X20, X19, [X31 + 0x20]
	0x02EEAFD4 LDR X8, [X3 + 0x20]
	0x02EEAFD8 MOV X21, X0
	0x02EEAFDC LDR X19, [X0 + 0x10]
	0x02EEAFE0 MOV X20, X2
	0x02EEAFE4 LDR X8, [X8 + 0xC0]
	0x02EEAFE8 MOV X22, X1
	0x02EEAFEC LDR X0, [X8 + 0x70]
	0x02EEAFF0 BL 0x21183BC
	0x02EEAFF4 CBZ X19, 0x2EEB038
	0x02EEAFF8 MOV X23, X0
	0x02EEAFFC CBZ X19, 0x2EEB04C
	0x02EEB000 CBZ X23, 0x2EEB04C
	0x02EEB004 LDR X8, [X23]
	0x02EEB008 LDP X1, X2, [X19 + 0x28]
	0x02EEB00C MOV X0, X23
	0x02EEB010 MOV X3, X22
	0x02EEB014 LDP X9, X5, [X8 + 0x1B8]
	0x02EEB018 MOV X4, X20
	0x02EEB01C BLR X9
	0x02EEB020 TBNZ X0, 0x0, 0x2EEB038
	0x02EEB024 LDR X19, [X19 + 0x18]
	0x02EEB028 LDR X8, [X21 + 0x10]
	0x02EEB02C CMP X19, X8
	0x02EEB030 B.NE 0x2EEAFFC
	0x02EEB034 MOV X19, X31
	0x02EEB038 MOV X0, X19
	0x02EEB03C LDP X20, X19, [X31 + 0x20]
	0x02EEB040 LDP X22, X21, [X31 + 0x10]
	0x02EEB044 LDP X30, X23, [X31], #0x30
	0x02EEB048 RET
	0x02EEB04C BL 0x1C16F20
	0x02EEB050 MOVI V0.2D, 0x0
	0x02EEB054 STP V0, V0, [X8 + 0x10]
	0x02EEB058 STR V0, [X8]
	0x02EEB05C LDR X9, [X1 + 0x20]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X2+8]
	007 Move [X0+32], X1
	008 Move [X0+40], X2
	009 Move X19, X0
	010 Move X20, X2
	011 Move [X0+16], X8
	012 Move W22, [X2+82]
	013 Move [X0+64], X0
	014 Move X0, X2
	015 Move X21, X1
	016 Call 0x1C17D84
	017 Move TEMP, X0
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfNotEqual {24}
	021 NotImplemented "Instruction CMP not yet implemented."
	022 Move X8, -21745664
	023 Add X8, X8, 2964
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move W8, [X19+112]
	026 Compare W8, 0
	027 JumpIfEqual {49}
	028 Move X0, X20
	029 Call 0x1C17D7C
	030 Move W21, W0
	031 Move X0, X20
	032 Call 0x1C18238
	033 Move TEMP, X21
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfNotEqual {51}
	037 Move TEMP, X0
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfNotEqual {57}
	041 Move X8, -21745664
	042 Add X8, X8, 3248
	043 Compare X21, 0
	044 JumpIfEqual {71}
	045 Move X8, [X19+16]
	046 Move X9, [X19+32]
	047 Move [X19+24], X8
	048 Move [X19+64], X9
	049 Move X8, -21745664
	050 Add X8, X8, 2928
	051 Move TEMP, X0
	052 And TEMP, TEMP, 1
	053 Compare TEMP, 1
	054 JumpIfNotEqual {59}
	055 Move X8, -21749760
	056 Add X8, X8, 3032
	057 Move X8, -21749760
	058 Add X8, X8, 3172
	059 Move X8, -21749760
	060 Add X8, X8, 2984
	061 Move [X19+24], X8
	062 Move X8, -21749760
	063 Add X8, X8, 2828
	064 Move [X19+56], X8
	065 Move X20, [X31+32]
	066 Move X19, [X31+40]
	067 Move X22, [X31+16]
	068 Move X21, [X31+24]
	069 Move X30, [X31+48]
	070 Return 
	071 Move X1, -37548032
	072 Add X1, X1, 3811
	073 Move X0, X31
	074 Call 0x1C17F3C
	075 Move X1, X31
	076 Call 0x1C17DEC

Method: System.Boolean Invoke(TValue lhs, TValue rhs)

Disassembly:
	0x02EEB060 MOV X1, X0
	0x02EEB064 MOV X0, X8
	0x02EEB068 LDR X9, [X9 + 0xC0]
	0x02EEB06C LDR X2, [X9 + 0x98]
	0x02EEB070 B 0x2BB3BDC

ISIL:
	001 Move X8, [X0+64]
	002 Move X4, [X0+24]
	003 Move X3, [X0+40]
	004 Move X0, X8
	005 CallNoReturn X4

Method: System.IAsyncResult BeginInvoke(TValue lhs, TValue rhs, System.AsyncCallback callback, System.Object object)

Disassembly:
	0x02EEB074 SUB X31, X31, 0x70
	0x02EEB078 STP X30, X19, [X31 + 0x60]
	0x02EEB07C LDR X8, [X1 + 0x20]
	0x02EEB080 MOVI V0.2D, 0x0
	0x02EEB084 MOV X19, X1
	0x02EEB088 MOV X1, X0
	0x02EEB08C LDR X8, [X8 + 0xC0]
	0x02EEB090 ADD X0, X31, 0x0
	0x02EEB094 LDR X8, [X8 + 0xA0]
	0x02EEB098 STP V0, V0, [X31 + 0x10]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+24], X31
	003 Move [X31+32], X30
	004 Move [X31+8], X1
	005 Move [X31+16], X2
	006 Add X1, X31, 8
	007 Move X2, X3
	008 Move X3, X4
	009 Call 0x1C17CB0
	010 Move X30, [X31+32]
	011 Add X31, X31, 48
	012 Return X0

Method: System.Boolean EndInvoke(System.IAsyncResult result)

Disassembly:
	0x02EEB09C STR V0, [X31]
	0x02EEB0A0 LDR X8, [X8 + 0x20]
	0x02EEB0A4 LDR X8, [X8 + 0xC0]
	0x02EEB0A8 LDR X2, [X8 + 0x98]
	0x02EEB0AC BL 0x2BB3BDC
	0x02EEB0B0 LDP V1, V0, [X31 + 0x10]
	0x02EEB0B4 LDR V2, [X31]
	0x02EEB0B8 ADD X1, X31, 0x0
	0x02EEB0BC STP V1, V0, [X31 + 0x40]
	0x02EEB0C0 STP V0, V2, [X31 + 0x20]

ISIL:
	001 Move [X31-16], X30
	002 Move X0, X1
	003 Move X1, X31
	004 Call 0x1C17CB4
	005 Compare X0, 0
	006 JumpIfEqual {11}
	007 Call 0x1C17E08
	008 Move W0, [X0]
	009 Move X30, [X31+16]
	010 Return X0
	011 Call 0x1C17F20

