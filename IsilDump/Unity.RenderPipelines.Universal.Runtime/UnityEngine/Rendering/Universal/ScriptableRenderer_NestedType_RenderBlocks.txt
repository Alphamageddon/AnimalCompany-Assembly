Type: UnityEngine.Rendering.Universal.ScriptableRenderer/RenderBlocks

Method: System.Void .ctor(System.Collections.Generic.List`1<UnityEngine.Rendering.Universal.ScriptableRenderPass> activeRenderPassQueue)

Disassembly:
	0x03A54400 BL 0x1C16F10
	0x03A54404 MOV X19, X0
	0x03A54408 ADRP X0, 0x702000
	0x03A5440C LDR X0, [X0 + 0xE0]
	0x03A54410 BL 0x1C16D08
	0x03A54414 MOV X1, X0
	0x03A54418 MOV X0, X19
	0x03A5441C MOV X2, X31
	0x03A54420 BL 0x3379A44
	0x03A54424 ADRP X0, 0x702000
	0x03A54428 LDR X0, [X0 + 0x138]
	0x03A5442C BL 0x1C16D08
	0x03A54430 MOV X1, X0
	0x03A54434 MOV X0, X19
	0x03A54438 BL 0x1C16DEC
	0x03A5443C STP X30, X19, [X31 - 0x10]!
	0x03A54440 ADRP X0, 0x69F000
	0x03A54444 LDR X0, [X0 + 0xB40]
	0x03A54448 BL 0x1C16D08
	0x03A5444C BL 0x1C16F10
	0x03A54450 MOV X19, X0
	0x03A54454 ADRP X0, 0x702000
	0x03A54458 LDR X0, [X0 + 0xE0]
	0x03A5445C BL 0x1C16D08
	0x03A54460 MOV X1, X0
	0x03A54464 MOV X0, X19
	0x03A54468 MOV X2, X31
	0x03A5446C BL 0x3379A44
	0x03A54470 ADRP X0, 0x702000
	0x03A54474 LDR X0, [X0 + 0x140]
	0x03A54478 BL 0x1C16D08
	0x03A5447C MOV X1, X0
	0x03A54480 MOV X0, X19
	0x03A54484 BL 0x1C16DEC
	0x03A54488 MOV X1, X31
	0x03A5448C B 0x3A757F4
	0x03A54490 MOV X1, X31
	0x03A54494 B 0x33BDD8C
	0x03A54498 LDRB W0, [X0 + 0x5C]
	0x03A5449C RET
	0x03A544A0 AND W8, W1, 0x1
	0x03A544A4 STRB W8, [X0 + 0x5C]
	0x03A544A8 RET
	0x03A544AC STR X30, [X31 - 0x30]!
	0x03A544B0 STP X22, X21, [X31 + 0x10]
	0x03A544B4 STP X20, X19, [X31 + 0x20]
	0x03A544B8 ADRP X22, 0x98E000
	0x03A544BC ADRP X21, 0x702000
	0x03A544C0 LDRB W8, [X22 + 0x1D5]
	0x03A544C4 LDR X21, [X21 + 0x148]
	0x03A544C8 MOV X20, X1
	0x03A544CC MOV X19, X0
	0x03A544D0 TBNZ X8, 0x0, 0x3A544E8
	0x03A544D4 ADRP X0, 0x702000
	0x03A544D8 LDR X0, [X0 + 0x148]
	0x03A544DC BL 0x1C16CF4
	0x03A544E0 MOVZ W8, 0x1
	0x03A544E4 STRB W8, [X22 + 0x1D5]
	0x03A544E8 ADRP X8, 0xFFFFFFFFFD099000
	0x03A544EC LDR V0, [X8 + 0xB00]
	0x03A544F0 MOVN W8, 0x0
	0x03A544F4 MOV X0, X19
	0x03A544F8 MOV X1, X31
	0x03A544FC STR D0, [X19 + 0x50]
	0x03A54500 STR W8, [X19 + 0x58]
	0x03A54504 BL 0x33BDD8C
	0x03A54508 LDR W8, [X20 + 0x18]
	0x03A5450C LDR X9, [X20 + 0x10]
	0x03A54510 LDR V0, [X20]
	0x03A54514 STR W8, [X19 + 0x38]
	0x03A54518 STR X9, [X19 + 0x30]
	0x03A5451C STR V0, [X19 + 0x2]
	0x03A54520 LDR X0, [X21]
	0x03A54524 BL 0x1C16F10
	0x03A54528 MOV X1, X31
	0x03A5452C MOV X20, X0
	0x03A54530 BL 0x33BDD8C
	0x03A54534 STR X20, [X19 + 0x40]
	0x03A54538 LDP X20, X19, [X31 + 0x20]
	0x03A5453C LDP X22, X21, [X31 + 0x10]
	0x03A54540 LDR X30, [X31], #0x30
	0x03A54544 RET
	0x03A54548 MOV X1, X31
	0x03A5454C B 0x33BDD8C
	0x03A54550 SUB X31, X31, 0x60
	0x03A54554 STR X30, [X31 + 0x10]
	0x03A54558 STP X26, X25, [X31 + 0x20]
	0x03A5455C STP X24, X23, [X31 + 0x30]
	0x03A54560 STP X22, X21, [X31 + 0x40]
	0x03A54564 STP X20, X19, [X31 + 0x50]
	0x03A54568 ADRP X21, 0x98E000
	0x03A5456C LDRB W8, [X21 + 0x1D6]
	0x03A54570 MOV W20, W1
	0x03A54574 MOV X19, X0
	0x03A54578 TBNZ X8, 0x0, 0x3A545CC
	0x03A5457C ADRP X0, 0x6A0000
	0x03A54580 LDR X0, [X0 + 0xE58]
	0x03A54584 BL 0x1C16CF4
	0x03A54588 ADRP X0, 0x702000
	0x03A5458C LDR X0, [X0 + 0x150]
	0x03A54590 BL 0x1C16CF4
	0x03A54594 ADRP X0, 0x702000
	0x03A54598 LDR X0, [X0 + 0x158]
	0x03A5459C BL 0x1C16CF4
	0x03A545A0 ADRP X0, 0x6FE000
	0x03A545A4 LDR X0, [X0 + 0xFD0]
	0x03A545A8 BL 0x1C16CF4
	0x03A545AC ADRP X0, 0x702000
	0x03A545B0 LDR X0, [X0 + 0x160]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+48], X30
	003 Move [X31+64], X24
	004 Move [X31+72], X23
	005 Move [X31+80], X22
	006 Move [X31+88], X21
	007 Move [X31+96], X20
	008 Move [X31+104], X19
	009 Move X24, 0x98F000
	010 Move X22, 0x703000
	011 Move X23, 0x6CA000
	012 Move X21, 0x702000
	013 Move W8, [X24+457]
	014 Move X22, [X22+128]
	015 Move X23, [X23+312]
	016 Move X21, [X21+3840]
	017 Move X20, X1
	018 Move X19, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {37}
	023 Move X0, 0x703000
	024 Move X0, [X0+136]
	025 Call 0x1C17CF4
	026 Move X0, 0x703000
	027 Move X0, [X0+128]
	028 Call 0x1C17CF4
	029 Move X0, 0x6CA000
	030 Move X0, [X0+312]
	031 Call 0x1C17CF4
	032 Move X0, 0x702000
	033 Move X0, [X0+3840]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X24+457], W8
	037 Move X4, [X22]
	038 Move X22, 0x703000
	039 Move X22, [X22+136]
	040 Add X0, X31, 32
	041 Move W1, 4
	042 Move W2, 2
	043 Move W3, 1
	044 Move [X31+32], X31
	045 Move [X31+40], X31
	046 Call NativeArray`1<Int32Enum>..ctor, X0, X1, X2, X3
	047 Move V0, [X31+2]
	048 Add X0, X31, 16
	049 Move W2, 2
	050 Move W3, 1
	051 Move [X19], V0
	052 Move W8, [X19+8]
	053 Move X4, [X23]
	054 Move [X31+16], X31
	055 Move [X31+24], X31
	056 Add W1, W8, 1
	057 Call NativeArray`1<Int32>..ctor, X0, X1, X2, X3
	058 Move V0, [X31+1]
	059 Add X0, X31, 0
	060 Move W2, 2
	061 Move W3, 1
	062 Move [X19+1], V0
	063 Move W1, [X19+24]
	064 Move X4, [X23]
	065 Move [X31], X31
	066 Move [X31+8], X31
	067 Call NativeArray`1<Int32>..ctor, X0, X1, X2, X3
	068 Move V0, [X31]
	069 Move [X19+2], V0
	070 Move X0, [X21]
	071 Move W8, [X0+224]
	072 Compare W8, 0
	073 JumpIfNotEqual {76}
	074 Call 0x1C17DFC
	075 Move X0, [X21]
	076 Move X8, [X0+184]
	077 Move X10, [X19]
	078 Move W11, 150
	079 Move X0, X19
	080 NotImplemented "Instruction LDRSW not yet implemented."
	081 Move X1, X20
	082 Move [X10], W11
	083 NotImplemented "Instruction LDRSW not yet implemented."
	084 Move W11, 300
	085 Move [X10], W11
	086 NotImplemented "Instruction LDRSW not yet implemented."
	087 Move W11, 600
	088 Move [X10], W11
	089 NotImplemented "Instruction LDRSW not yet implemented."
	090 Move TEMP, 0x80000000
	091 Not TEMP
	092 Move W9, TEMP
	093 Move [X10], W9
	094 Call RenderBlocks.FillBlockRanges, X0, X1
	095 Move X1, [X22]
	096 Move X0, X19
	097 Call NativeArray`1<Int32Enum>.Dispose, X0
	098 Move W8, [X19+24]
	099 Subtract W8, W8, 1
	100 NotImplemented "Instruction CMP not yet implemented."
	101 Add X8, X19, 16
	102 Add X9, X19, 32
	103 Move X8, [X8]
	104 Move X9, [X9]
	105 Move X10, X31
	106 Add X11, X8, X10
	107 Move W11, [X11]
	108 Move W12, [X11+4]
	109 Subtract W11, W12, W11
	110 Move [X9], W11
	111 Move W11, [X19+24]
	112 Add X10, X10, 1
	113 Subtract W11, W11, 1
	114 NotImplemented "Instruction CMP not yet implemented."
	115 Move X20, [X31+96]
	116 Move X19, [X31+104]
	117 Move X22, [X31+80]
	118 Move X21, [X31+88]
	119 Move X24, [X31+64]
	120 Move X23, [X31+72]
	121 Move X30, [X31+48]
	122 Add X31, X31, 112
	123 Return 

Method: System.Void Dispose()

Disassembly:
	0x03A546BC BL 0x3A5689C
	0x03A546C0 STR X21, [X19 + 0x18]
	0x03A546C4 LDR W8, [X19 + 0x30]
	0x03A546C8 LDR X0, [X25]
	0x03A546CC ADD W1, W8, 0x1
	0x03A546D0 BL 0x1C16D6C
	0x03A546D4 ADRP X8, 0xFFFFFFFFFD099000
	0x03A546D8 LDR V0, [X8 + 0xB00]
	0x03A546DC STR X0, [X19 + 0x48]
	0x03A546E0 LDP X22, X21, [X31 + 0x40]
	0x03A546E4 LDP X24, X23, [X31 + 0x30]
	0x03A546E8 STR D0, [X19 + 0x50]
	0x03A546EC LDP X20, X19, [X31 + 0x50]
	0x03A546F0 LDP X26, X25, [X31 + 0x20]
	0x03A546F4 LDR X30, [X31 + 0x10]
	0x03A546F8 ADD X31, X31, 0x60
	0x03A546FC RET
	0x03A54700 STP X30, X19, [X31 - 0x10]!
	0x03A54704 MOV X19, X0
	0x03A54708 LDR W0, [X0]
	0x03A5470C MOV X1, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x98F000
	006 Move X20, 0x6CA000
	007 Move W8, [X21+458]
	008 Move X20, [X20+328]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x6CA000
	015 Move X0, [X0+328]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+458], W8
	019 Move X1, [X20]
	020 Add X0, X19, 32
	021 Call NativeArray`1<Int32>.Dispose, X0
	022 Move X1, [X20]
	023 Add X0, X19, 16
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X30, [X31+32]
	027 Move X21, [X31+40]
	028 Call NativeArray`1<Int32>.Dispose, X0
	029 Return 

Method: System.Void FillBlockRanges(System.Collections.Generic.List`1<UnityEngine.Rendering.Universal.ScriptableRenderPass> activeRenderPassQueue)

Disassembly:
	0x03A545B4 BL 0x1C16CF4
	0x03A545B8 ADRP X0, 0x702000
	0x03A545BC LDR X0, [X0 + 0x168]
	0x03A545C0 BL 0x1C16CF4
	0x03A545C4 MOVZ W8, 0x1
	0x03A545C8 STRB W8, [X21 + 0x1D6]
	0x03A545CC ADRP X26, 0x702000
	0x03A545D0 ADRP X25, 0x6A0000
	0x03A545D4 LDRB W8, [X19 + 0x2C]
	0x03A545D8 LDR X26, [X26 + 0x150]
	0x03A545DC LDR X25, [X25 + 0xE58]
	0x03A545E0 CBZ W8, 0x3A5464C
	0x03A545E4 LDP W0, W21, [X19 + 0x20]
	0x03A545E8 MOV X1, X31
	0x03A545EC BL 0x3C1ED70
	0x03A545F0 TBZ X0, 0x0, 0x3A5464C
	0x03A545F4 MOV W0, W21
	0x03A545F8 MOV X1, X31
	0x03A545FC BL 0x3C1ED70
	0x03A54600 TBZ X0, 0x0, 0x3A5464C
	0x03A54604 ADRP X8, 0x702000
	0x03A54608 LDR W22, [X19 + 0x20]
	0x03A5460C LDR W23, [X19 + 0x28]
	0x03A54610 LDR X8, [X8 + 0x158]
	0x03A54614 LDR X0, [X8]
	0x03A54618 BL 0x1C16F10
	0x03A5461C ADRP X8, 0x702000
	0x03A54620 LDR X8, [X8 + 0x168]
	0x03A54624 MOVZ W2, 0x4
	0x03A54628 MOVZ W4, 0x1
	0x03A5462C MOVZ W6, 0x1
	0x03A54630 LDR X5, [X8]
	0x03A54634 MOV W1, W22
	0x03A54638 MOV W3, W23
	0x03A5463C MOV X7, X31
	0x03A54640 MOV X21, X0
	0x03A54644 BL 0x39D2F24
	0x03A54648 B 0x3A54694
	0x03A5464C ADRP X8, 0x6FE000
	0x03A54650 LDR X8, [X8 + 0xFD0]
	0x03A54654 ADRP X21, 0x702000
	0x03A54658 LDP W23, W22, [X19 + 0x20]
	0x03A5465C LDR W24, [X19 + 0x28]
	0x03A54660 LDR X0, [X8]
	0x03A54664 LDR X21, [X21 + 0x160]
	0x03A54668 BL 0x1C16F10
	0x03A5466C LDR X6, [X21]
	0x03A54670 MOVZ W4, 0x1
	0x03A54674 MOV W1, W23
	0x03A54678 MOV W2, W22
	0x03A5467C MOV W3, W24
	0x03A54680 MOV W5, W31
	0x03A54684 MOV W7, W31
	0x03A54688 MOV X21, X0
	0x03A5468C STR X31, [X31]
	0x03A54690 BL 0x39D8D04
	0x03A54694 STR X21, [X19 + 0x10]
	0x03A54698 LDR X0, [X26]
	0x03A5469C LDRB W22, [X19 + 0x38]
	0x03A546A0 BL 0x1C16F10
	0x03A546A4 MOV X1, X31
	0x03A546A8 MOV X21, X0
	0x03A546AC BL 0x33BDD8C
	0x03A546B0 MOV X0, X21
	0x03A546B4 MOV W1, W20
	0x03A546B8 STRB W22, [X21 + 0x14]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x98F000
	009 Move W8, [X21+459]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x701000
	017 Move X0, [X0+2312]
	018 Call 0x1C17CF4
	019 Move X0, 0x701000
	020 Move X0, [X0+2320]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X21+459], W8
	024 Move X8, [X20+16]
	025 Move [X8], W31
	026 Move W9, [X20+8]
	027 Subtract W9, W9, 1
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Compare X19, 0
	030 JumpIfEqual {72}
	031 Move X23, 0x701000
	032 Move X23, [X23+2320]
	033 Move X22, X31
	034 Move W21, W31
	035 Move W24, 1
	036 Move W8, [X19+24]
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move X2, [X23]
	039 Move X0, X19
	040 Move W1, W21
	041 Call List`1<Object>.get_Item, X0, X1
	042 Compare X0, 0
	043 JumpIfEqual {72}
	044 Move X8, [X20]
	045 Move W9, [X0+16]
	046 Move W8, [X8]
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Move W8, [X19+24]
	049 Add W21, W21, 1
	050 Move X8, [X20+16]
	051 Add X9, X24, 1
	052 Add X22, X22, 1
	053 Move [X8], W21
	054 Move W10, [X20+8]
	055 Move X24, X9
	056 Subtract W10, W10, 1
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Move X9, W9
	059 Compare X19, 0
	060 JumpIfEqual {72}
	061 Move W9, 1
	062 Move W10, [X19+24]
	063 Move X20, [X31+48]
	064 Move X19, [X31+56]
	065 Move X22, [X31+32]
	066 Move X21, [X31+40]
	067 Move X24, [X31+16]
	068 Move X23, [X31+24]
	069 Move [X8], W10
	070 Move X30, [X31+64]
	071 Return 
	072 Call 0x1C17F20

Method: System.Int32 GetLength(System.Int32 index)

Disassembly:
	0x03A54710 BL 0x3C1ED70
	0x03A54714 TBZ X0, 0x0, 0x3A54728
	0x03A54718 LDR W0, [X19 + 0x4]

ISIL:
	001 Move X8, [X0+32]
	002 Move W0, [X8]
	003 Return X0

Method: UnityEngine.Rendering.Universal.ScriptableRenderer/RenderBlocks/BlockRange GetRange(System.Int32 index)

Disassembly:
	0x03A5471C MOV X1, X31
	0x03A54720 LDP X30, X19, [X31], #0x10
	0x03A54724 B 0x3C1ED70
	0x03A54728 MOV W0, W31
	0x03A5472C LDP X30, X19, [X31], #0x10
	0x03A54730 RET
	0x03A54734 STP X30, X21, [X31 - 0x20]!
	0x03A54738 STP X20, X19, [X31 + 0x10]
	0x03A5473C MOV W19, W1
	0x03A54740 MOV X1, X31
	0x03A54744 MOV X20, X0

ISIL:
	001 Move X8, [X0+16]
	002 Add W9, W1, 1
	003 Move W10, [X8]
	004 Move W8, [X8]
	005 NotImplemented "Instruction CMP not yet implemented."
	006 NotImplemented "Instruction CSEL not yet implemented."
	007 NotImplemented "Instruction CMP not yet implemented."
	008 NotImplemented "Instruction CSEL not yet implemented."
	009 Subtract W0, W9, 1
	010 NotImplemented "Instruction BFM not yet implemented."
	011 Return X0

