Type: UnityEngine.Rendering.Universal.RenderTargetHandle

Method: System.Void set_id(System.Int32 value)

Disassembly:
	0x03A74C20 STR X31, [X31 + 0x70]
	0x03A74C24 STP X31, X31, [X31 + 0x30]

ISIL:
	001 Move [X0], W1
	002 Return 

Method: System.Int32 get_id()

Disassembly:
	0x03A74C28 STP V0, V0, [X31 + 0x50]
	0x03A74C2C STR X31, [X31 + 0x40]

ISIL:
	001 Move W0, [X0]
	002 Return X0

Method: System.Void set_rtid(UnityEngine.Rendering.RenderTargetIdentifier value)

Disassembly:
	0x03A74C30 LDR X8, [X27 + 0x18]
	0x03A74C34 CBZ X8, 0x3A74FA0
	0x03A74C38 LDR W9, [X8 + 0x1C]
	0x03A74C3C ADD W9, W9, 0x1
	0x03A74C40 STP W31, W9, [X8 + 0x18]
	0x03A74C44 LDR X0, [X27 + 0x10]

ISIL:
	001 Move X8, [X1+32]
	002 Move V1, [X1]
	003 Move V0, [X1+16]
	004 Move [X0+40], X8
	005 Move [X0+24], V0
	006 Move [X0+8], V1
	007 Return 

Method: UnityEngine.Rendering.RenderTargetIdentifier get_rtid()

Disassembly:
	0x03A74C48 CBZ X0, 0x3A74FA0
	0x03A74C4C ADRP X8, 0x6DD000
	0x03A74C50 LDR X8, [X8 + 0x60]
	0x03A74C54 ADRP X28, 0x6E2000
	0x03A74C58 ADRP X29, 0x6AA000
	0x03A74C5C LDR X28, [X28 + 0xB98]

ISIL:
	001 Move X9, [X0+40]
	002 NotImplemented "Instruction LDUR not yet implemented."
	003 NotImplemented "Instruction LDUR not yet implemented."
	004 Move [X8+32], X9
	005 Move [X8], V1
	006 Move [X8+8], V0
	007 Return X0

Method: System.Void .ctor(UnityEngine.Rendering.RenderTargetIdentifier renderTargetIdentifier)

Disassembly:
	0x03A74C60 LDR X29, [X29 + 0xB28]
	0x03A74C64 LDR X1, [X8]
	0x03A74C68 ADRP X20, 0x6DD000
	0x03A74C6C LDR X20, [X20 + 0x98]
	0x03A74C70 ADD X8, X31, 0x8
	0x03A74C74 BL 0x2A13AB4
	0x03A74C78 LDUR V0, [X31 + 0x8]
	0x03A74C7C LDUR V1, [X31 + 0x18]
	0x03A74C80 LDR X8, [X31 + 0x28]
	0x03A74C84 STP V0, V1, [X31 + 0x50]
	0x03A74C88 STR X8, [X31 + 0x70]
	0x03A74C8C ADRP X8, 0x6DD000
	0x03A74C90 LDR X8, [X8 + 0x70]
	0x03A74C94 LDR X1, [X8]
	0x03A74C98 ADD X0, X31, 0x50
	0x03A74C9C BL 0x2BF5330
	0x03A74CA0 TBZ X0, 0x0, 0x3A74F24
	0x03A74CA4 LDR X21, [X31 + 0x68]
	0x03A74CA8 CBZ X21, 0x3A74F90
	0x03A74CAC ADRP X8, 0x6DD000
	0x03A74CB0 LDR X8, [X8 + 0xA8]
	0x03A74CB4 LDR X1, [X8]
	0x03A74CB8 MOV X0, X21
	0x03A74CBC BL 0x25ED504
	0x03A74CC0 ADRP X8, 0x6DD000
	0x03A74CC4 LDR X8, [X8 + 0xB0]
	0x03A74CC8 MOV X22, X0
	0x03A74CCC LDR X1, [X8]
	0x03A74CD0 MOV X0, X21
	0x03A74CD4 BL 0x25ED534

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x96F000
	007 Move X22, 0x6E3000
	008 Move W8, [X21+696]
	009 Move X22, [X22+3520]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x6E3000
	017 Move X0, [X0+3520]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+696], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move TEMP, 1
	027 Not TEMP
	028 Move W8, TEMP
	029 Move [X19], W8
	030 Move X8, [X20+32]
	031 Move V1, [X20]
	032 Move V0, [X20+16]
	033 Move X22, [X31+16]
	034 Move X21, [X31+24]
	035 Move [X19+40], X8
	036 Move [X19+24], V0
	037 Move [X19+8], V1
	038 Move X20, [X31+32]
	039 Move X19, [X31+40]
	040 Move X30, [X31+48]
	041 Return 

Method: System.Void .ctor(UnityEngine.Rendering.RTHandle rtHandle)

Disassembly:
	0x03A74CD8 LDR W8, [X21 + 0x20]
	0x03A74CDC CMP W8, 0x1
	0x03A74CE0 B.LT 0x3A74E8C
	0x03A74CE4 MOV X23, X0
	0x03A74CE8 MOV W24, W31
	0x03A74CEC CBZ X23, 0x3A74F58
	0x03A74CF0 LDR X8, [X23]
	0x03A74CF4 ADRP X10, 0x6DD000
	0x03A74CF8 LDRH W9, [X8 + 0x12E]
	0x03A74CFC LDR X10, [X10 + 0x80]
	0x03A74D00 LDR X1, [X10]
	0x03A74D04 CBZ X9, 0x3A74D28
	0x03A74D08 LDR X10, [X8 + 0xB0]
	0x03A74D0C ADD X10, X10, 0x8
	0x03A74D10 LDUR X11, [X10 - 0x8]
	0x03A74D14 CMP X11, X1
	0x03A74D18 B.EQ 0x3A74D38
	0x03A74D1C SUBS X9, X9, 0x1
	0x03A74D20 ADD X10, X10, 0x10
	0x03A74D24 B.NE 0x3A74D10
	0x03A74D28 MOV X0, X23
	0x03A74D2C MOV W2, W31
	0x03A74D30 BL 0x1C5C788
	0x03A74D34 B 0x3A74D44
	0x03A74D38 LDRSW X9, [X10]
	0x03A74D3C ADD X8, X8, X9, 0x4, LSL
	0x03A74D40 ADD X0, X8, 0x138
	0x03A74D44 LDP X8, X2, [X0]
	0x03A74D48 MOV X0, X23
	0x03A74D4C MOV W1, W24
	0x03A74D50 BLR X8
	0x03A74D54 MOV X25, X0
	0x03A74D58 LDR X0, [X28]
	0x03A74D5C MOV X26, X1
	0x03A74D60 LDR W8, [X0 + 0xE0]
	0x03A74D64 CBNZ W8, 0x3A74D6C
	0x03A74D68 BL 0x1C16DFC
	0x03A74D6C MOV W0, W26
	0x03A74D70 MOV W1, W19
	0x03A74D74 BL 0x3A74A98
	0x03A74D78 TBZ X0, 0x0, 0x3A74E7C
	0x03A74D7C CBZ X25, 0x3A74F60
	0x03A74D80 MOV X0, X25
	0x03A74D84 MOV X1, X31
	0x03A74D88 BL 0x39D4B1C
	0x03A74D8C CBZ X22, 0x3A74F64
	0x03A74D90 LDR X8, [X22]
	0x03A74D94 ADRP X10, 0x6A7000
	0x03A74D98 LDR X25, [X27 + 0x18]
	0x03A74D9C LDRH W9, [X8 + 0x12E]
	0x03A74DA0 LDR X10, [X10 + 0x7A8]
	0x03A74DA4 LDR X1, [X10]
	0x03A74DA8 CBZ X9, 0x3A74DCC
	0x03A74DAC LDR X10, [X8 + 0xB0]
	0x03A74DB0 ADD X10, X10, 0x8
	0x03A74DB4 LDUR X11, [X10 - 0x8]
	0x03A74DB8 CMP X11, X1
	0x03A74DBC B.EQ 0x3A74DDC
	0x03A74DC0 SUBS X9, X9, 0x1
	0x03A74DC4 ADD X10, X10, 0x10
	0x03A74DC8 B.NE 0x3A74DB4
	0x03A74DCC MOV X0, X22
	0x03A74DD0 MOV W2, W31
	0x03A74DD4 BL 0x1C5C788
	0x03A74DD8 B 0x3A74DE8
	0x03A74DDC LDRSW X9, [X10]
	0x03A74DE0 ADD X8, X8, X9, 0x4, LSL
	0x03A74DE4 ADD X0, X8, 0x138
	0x03A74DE8 LDP X8, X2, [X0]
	0x03A74DEC MOV X0, X22
	0x03A74DF0 MOV W1, W24
	0x03A74DF4 BLR X8
	0x03A74DF8 MOV W1, W0
	0x03A74DFC CBZ X25, 0x3A74F68
	0x03A74E00 ADRP X9, 0x680000
	0x03A74E04 LDR W10, [X25 + 0x1C]
	0x03A74E08 LDR X8, [X25 + 0x10]
	0x03A74E0C LDR X9, [X9 + 0xE10]
	0x03A74E10 ADD W10, W10, 0x1
	0x03A74E14 LDR X9, [X9]
	0x03A74E18 STR W10, [X25 + 0x1C]
	0x03A74E1C CBZ X8, 0x3A74F5C
	0x03A74E20 LDRSW X10, [X25 + 0x18]
	0x03A74E24 LDR W11, [X8 + 0x18]
	0x03A74E28 CMP W10, W11
	0x03A74E2C B.CS 0x3A74E44
	0x03A74E30 ADD W9, W10, 0x1
	0x03A74E34 ADD X8, X8, X10, 0x2, LSL
	0x03A74E38 STR W9, [X25 + 0x18]
	0x03A74E3C STR W1, [X8 + 0x20]
	0x03A74E40 B 0x3A74E58
	0x03A74E44 LDR X8, [X9 + 0x20]
	0x03A74E48 LDR X8, [X8 + 0xC0]
	0x03A74E4C LDR X2, [X8 + 0x70]
	0x03A74E50 MOV X0, X25
	0x03A74E54 BL 0x2FDC70C
	0x03A74E58 LDR X0, [X28]
	0x03A74E5C LDR W8, [X0 + 0xE0]
	0x03A74E60 CBNZ W8, 0x3A74E6C
	0x03A74E64 BL 0x1C16DFC
	0x03A74E68 LDR X0, [X28]
	0x03A74E6C LDR X8, [X0 + 0xB8]
	0x03A74E70 LDR W9, [X8]
	0x03A74E74 SUB W9, W9, 0x1
	0x03A74E78 STR W9, [X8]
	0x03A74E7C LDR W8, [X21 + 0x20]
	0x03A74E80 ADD W24, W24, 0x1
	0x03A74E84 CMP W24, W8
	0x03A74E88 B.LT 0x3A74CEC
	0x03A74E8C LDR X0, [X27 + 0x18]
	0x03A74E90 CBZ X0, 0x3A74F94
	0x03A74E94 ADRP X8, 0x6AA000
	0x03A74E98 LDR X8, [X8 + 0xB50]
	0x03A74E9C LDR X1, [X8]
	0x03A74EA0 ADD X8, X31, 0x8
	0x03A74EA4 BL 0x2FDD2BC
	0x03A74EA8 LDUR V0, [X31 + 0x8]
	0x03A74EAC LDR X8, [X31 + 0x18]
	0x03A74EB0 STR V0, [X31 + 0x3]
	0x03A74EB4 STR X8, [X31 + 0x40]
	0x03A74EB8 LDR X1, [X29]
	0x03A74EBC ADD X0, X31, 0x30
	0x03A74EC0 BL 0x2BBDDA0
	0x03A74EC4 TBZ X0, 0x0, 0x3A74EDC
	0x03A74EC8 LDR W1, [X31 + 0x40]
	0x03A74ECC LDR X2, [X20]
	0x03A74ED0 MOV X0, X21
	0x03A74ED4 BL 0x25EEA7C

ISIL:
	001 Subtract X31, X31, 320
	002 Move [X31+272], X29
	003 Move [X31+280], X30
	004 Move [X31+288], X22
	005 Move [X31+296], X21
	006 Move [X31+304], X20
	007 Move [X31+312], X19
	008 Move X21, 0x96F000
	009 Move W8, [X21+697]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x680000
	017 Move X0, [X0+1432]
	018 Call 0x1C17CF4
	019 Move X0, 0x6E3000
	020 Move X0, [X0+3520]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X21+697], W8
	024 Compare X20, 0
	025 JumpIfEqual {172}
	026 Move X8, [X20+72]
	027 NotImplemented "Instruction LDUR not yet implemented."
	028 NotImplemented "Instruction LDUR not yet implemented."
	029 Move X22, 0x6E3000
	030 Move X22, [X22+3520]
	031 Move [X31+256], X8
	032 Add X8, X31, 184
	033 Move W0, 2
	034 Move X1, X31
	035 Add X21, X31, 184
	036 Move [X31+224], V1
	037 Move [X31+232], V0
	038 Call RenderTargetIdentifier.op_Implicit, X0
	039 Move V0, [X21]
	040 Move V1, [X21+16]
	041 Move X8, [X31+216]
	042 Move V2, [X31+224]
	043 Move V3, [X31+240]
	044 Move X9, [X31+256]
	045 Add X0, X31, 144
	046 Add X1, X31, 96
	047 Move X2, X31
	048 Move [X31+96], V0
	049 Move [X31+104], V1
	050 Move [X31+128], X8
	051 Move [X31+144], V2
	052 Move [X31+152], V3
	053 Move [X31+176], X9
	054 Call RenderTargetIdentifier.op_Equality, X0, X1
	055 Move TEMP, X0
	056 And TEMP, TEMP, 1
	057 Compare TEMP, 1
	058 JumpIfNotEqual {67}
	059 Move X0, [X22]
	060 Move W8, [X0+224]
	061 Compare W8, 0
	062 JumpIfNotEqual {64}
	063 Call 0x1C17DFC
	064 Move TEMP, 0
	065 Not TEMP
	066 Move W21, TEMP
	067 Move X0, [X20+88]
	068 Compare X0, 0
	069 JumpIfEqual {172}
	070 Move W8, [X0+16]
	071 Compare W8, 0
	072 JumpIfEqual {82}
	073 Move X1, X31
	074 Call Shader.PropertyToID, X0
	075 Move X8, [X22]
	076 Move W21, W0
	077 Move W9, [X8+224]
	078 Compare W9, 0
	079 JumpIfNotEqual {90}
	080 Move X0, X8
	081 Call 0x1C17DFC
	082 Move X0, [X22]
	083 Move W8, [X0+224]
	084 Compare W8, 0
	085 JumpIfNotEqual {87}
	086 Call 0x1C17DFC
	087 Move TEMP, 1
	088 Not TEMP
	089 Move W21, TEMP
	090 Add X8, X20, 40
	091 Move [X19], W21
	092 Move X9, [X8+32]
	093 Move V1, [X8]
	094 Move V0, [X8+16]
	095 Move X0, [X22]
	096 Move X21, 0x680000
	097 Move [X31+256], X9
	098 Move [X31+224], V1
	099 Move [X31+232], V0
	100 Move W8, [X0+224]
	101 Move X21, [X21+1432]
	102 Compare W8, 0
	103 JumpIfNotEqual {105}
	104 Call 0x1C17DFC
	105 Move X8, [X31+256]
	106 Move V1, [X31+224]
	107 Move V0, [X31+240]
	108 Move [X19+40], X8
	109 Move [X19+24], V0
	110 Move [X19+8], V1
	111 Move X0, [X21]
	112 Move X20, [X20+24]
	113 Move W8, [X0+224]
	114 Compare W8, 0
	115 JumpIfNotEqual {117}
	116 Call 0x1C17DFC
	117 Move X0, X20
	118 Move X1, X31
	119 Move X2, X31
	120 Call Object.op_Inequality, X0, X1
	121 Move TEMP, X0
	122 And TEMP, TEMP, 1
	123 Compare TEMP, 1
	124 JumpIfNotEqual {164}
	125 Move X0, [X22]
	126 Add X20, X19, 8
	127 Move W8, [X0+224]
	128 Compare W8, 0
	129 JumpIfNotEqual {131}
	130 Call 0x1C17DFC
	131 Move W0, [X19]
	132 Add X8, X31, 224
	133 Move X1, X31
	134 Call RenderTargetIdentifier.op_Implicit, X0
	135 Move V0, [X31+224]
	136 Move V1, [X31+240]
	137 Move X8, [X31+256]
	138 Add X0, X31, 48
	139 Add X1, X31, 0
	140 Move [X31+48], V0
	141 Move [X31+56], V1
	142 Move [X31+80], X8
	143 Move X8, [X20+32]
	144 Move V1, [X20]
	145 Move V0, [X20+16]
	146 Move X2, X31
	147 Move [X31+32], X8
	148 Move [X31], V1
	149 Move [X31+8], V0
	150 Call RenderTargetIdentifier.op_Inequality, X0, X1
	151 Move TEMP, X0
	152 And TEMP, TEMP, 1
	153 Compare TEMP, 1
	154 JumpIfNotEqual {164}
	155 Move X0, [X22]
	156 Move W8, [X0+224]
	157 Compare W8, 0
	158 JumpIfNotEqual {160}
	159 Call 0x1C17DFC
	160 Move TEMP, 1
	161 Not TEMP
	162 Move W8, TEMP
	163 Move [X19], W8
	164 Move X20, [X31+304]
	165 Move X19, [X31+312]
	166 Move X22, [X31+288]
	167 Move X21, [X31+296]
	168 Move X29, [X31+272]
	169 Move X30, [X31+280]
	170 Add X31, X31, 320
	171 Return 
	172 Call 0x1C17F20

Method: UnityEngine.Rendering.Universal.RenderTargetHandle GetCameraTarget(ref UnityEngine.Rendering.Universal.CameraData cameraData)

Disassembly:
	0x03A74ED8 B 0x3A74EB8
	0x03A74EDC MOV X23, X31
	0x03A74EE0 ADRP X8, 0x6AA000
	0x03A74EE4 LDR X8, [X8 + 0xB18]
	0x03A74EE8 LDR X1, [X8]
	0x03A74EEC ADD X0, X31, 0x30
	0x03A74EF0 BL 0x2BBDD9C
	0x03A74EF4 CBZ X23, 0x3A74C8C
	0x03A74EF8 B 0x3A74F98
	0x03A74EFC B 0x3A74F00
	0x03A74F00 MOV X22, X1
	0x03A74F04 MOV X21, X0
	0x03A74F08 CMP W22, 0x1
	0x03A74F0C B.NE 0x3A74F6C
	0x03A74F10 MOV X0, X21
	0x03A74F14 BL 0x3EB1AD0
	0x03A74F18 LDR X23, [X0]
	0x03A74F1C BL 0x3EB1AE0
	0x03A74F20 B 0x3A74EE0
	0x03A74F24 ADRP X8, 0x6DD000
	0x03A74F28 LDR X8, [X8 + 0x68]
	0x03A74F2C ADD X0, X31, 0x50
	0x03A74F30 LDR X1, [X8]
	0x03A74F34 BL 0x2BF5448
	0x03A74F38 LDP X20, X19, [X31 + 0xD0]
	0x03A74F3C LDP X22, X21, [X31 + 0xC0]
	0x03A74F40 LDP X24, X23, [X31 + 0xB0]
	0x03A74F44 LDP X26, X25, [X31 + 0xA0]
	0x03A74F48 LDP X28, X27, [X31 + 0x90]
	0x03A74F4C LDP X29, X30, [X31 + 0x80]
	0x03A74F50 ADD X31, X31, 0xE0
	0x03A74F54 RET
	0x03A74F58 BL 0x1C16F20
	0x03A74F5C BL 0x1C16F20
	0x03A74F60 BL 0x1C16F20
	0x03A74F64 BL 0x1C16F20
	0x03A74F68 BL 0x1C16F20
	0x03A74F6C MOV X23, X31
	0x03A74F70 ADRP X8, 0x6AA000
	0x03A74F74 LDR X8, [X8 + 0xB18]
	0x03A74F78 LDR X1, [X8]
	0x03A74F7C ADD X0, X31, 0x30
	0x03A74F80 BL 0x2BBDD9C
	0x03A74F84 CBZ X23, 0x3A74FF8
	0x03A74F88 MOV X0, X23
	0x03A74F8C BL 0x1C16F18
	0x03A74F90 BL 0x1C16F20
	0x03A74F94 BL 0x1C16F20

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+56], X21
	004 Move [X31+64], X20
	005 Move [X31+72], X19
	006 Move X21, 0x96F000
	007 Move W9, [X21+698]
	008 Move X20, X0
	009 Move X19, X8
	010 Move TEMP, X9
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x6E3000
	015 Move X0, [X0+3520]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+698], W8
	019 Move X0, [X20+376]
	020 Compare X0, 0
	021 JumpIfEqual {65}
	022 Move X1, X31
	023 Call XRPass.get_enabled, X0
	024 Move TEMP, X0
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfNotEqual {44}
	028 Move X8, [X20+376]
	029 Compare X8, 0
	030 JumpIfEqual {65}
	031 Move X9, [X8+80]
	032 Move V0, [X8+48]
	033 Move V1, [X8+64]
	034 NotImplemented "Instruction MOVI not yet implemented."
	035 Add X1, X31, 0
	036 Move X0, X19
	037 Move [X19+16], V2
	038 Move [X19+24], V2
	039 Move [X31+32], X9
	040 Move [X31], V0
	041 Move [X31+8], V1
	042 Move [X19], V2
	043 Call RenderTargetHandle..ctor, X0, X1
	044 Move X20, 0x6E3000
	045 Move X20, [X20+3520]
	046 Move X0, [X20]
	047 Move W8, [X0+224]
	048 Compare W8, 0
	049 JumpIfNotEqual {52}
	050 Call 0x1C17DFC
	051 Move X0, [X20]
	052 Move X8, [X0+184]
	053 Move V1, [X8+16]
	054 Move V0, [X8+32]
	055 Move V2, [X8]
	056 Move [X19+16], V1
	057 Move [X19+24], V0
	058 Move [X19], V2
	059 Move X20, [X31+64]
	060 Move X19, [X31+72]
	061 Move X30, [X31+48]
	062 Move X21, [X31+56]
	063 Add X31, X31, 80
	064 Return X0
	065 Call 0x1C17F20

Method: System.Void Init(System.String shaderProperty)

Disassembly:
	0x03A74F98 MOV X0, X23
	0x03A74F9C BL 0x1C16F18
	0x03A74FA0 BL 0x1C16F20
	0x03A74FA4 MOV X22, X1
	0x03A74FA8 MOV X21, X0
	0x03A74FAC B 0x3A74F70
	0x03A74FB0 B 0x3A74FF0
	0x03A74FB4 B 0x3A74FF0
	0x03A74FB8 B 0x3A74FF0
	0x03A74FBC B 0x3A74FF0
	0x03A74FC0 B 0x3A74FF0
	0x03A74FC4 B 0x3A74FF0
	0x03A74FC8 B 0x3A74FF0
	0x03A74FCC B 0x3A74FF0
	0x03A74FD0 B 0x3A74FF0
	0x03A74FD4 B 0x3A74FF0
	0x03A74FD8 B 0x3A74FF0
	0x03A74FDC B 0x3A74FF0
	0x03A74FE0 B 0x3A74FF0
	0x03A74FE4 B 0x3A74FF0
	0x03A74FE8 B 0x3A74FF0
	0x03A74FEC B 0x3A74FF0
	0x03A74FF0 MOV X22, X1
	0x03A74FF4 MOV X21, X0
	0x03A74FF8 CMP W22, 0x1
	0x03A74FFC B.NE 0x3A75030
	0x03A75000 MOV X0, X21
	0x03A75004 BL 0x3EB1AD0
	0x03A75008 LDR X19, [X0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x96F000
	007 Move X21, 0x6E3000
	008 Move W8, [X22+699]
	009 Move X21, [X21+3520]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x6E3000
	017 Move X0, [X0+3520]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+699], W8
	021 Move X0, X20
	022 Move X1, X31
	023 Call Shader.PropertyToID, X0
	024 Move X8, [X21]
	025 Move W20, W0
	026 Move W9, [X8+224]
	027 Compare W9, 0
	028 JumpIfNotEqual {31}
	029 Move X0, X8
	030 Call 0x1C17DFC
	031 Move [X19], W20
	032 Move X20, [X31+32]
	033 Move X19, [X31+40]
	034 Move X22, [X31+16]
	035 Move X21, [X31+24]
	036 Move X30, [X31+48]
	037 Return 

Method: System.Void Init(UnityEngine.Rendering.RenderTargetIdentifier renderTargetIdentifier)

Disassembly:
	0x03A7500C BL 0x3EB1AE0
	0x03A75010 ADRP X8, 0x6DC000
	0x03A75014 LDR X8, [X8 + 0x68]
	0x03A75018 ADD X0, X31, 0x50
	0x03A7501C LDR X1, [X8]
	0x03A75020 BL 0x2BF5448
	0x03A75024 CBZ X19, 0x3A74F38
	0x03A75028 MOV X0, X19
	0x03A7502C BL 0x1C16F18
	0x03A75030 MOV X19, X31
	0x03A75034 B 0x3A7503C
	0x03A75038 MOV X21, X0
	0x03A7503C ADRP X8, 0x6DC000
	0x03A75040 LDR X8, [X8 + 0x68]
	0x03A75044 LDR X1, [X8]
	0x03A75048 ADD X0, X31, 0x50
	0x03A7504C BL 0x2BF5448
	0x03A75050 CBNZ X19, 0x3A7505C
	0x03A75054 MOV X0, X21
	0x03A75058 BL 0x1D2C690
	0x03A7505C MOV X0, X19
	0x03A75060 BL 0x1C16F18
	0x03A75064 BL 0x1990590
	0x03A75068 SUB X31, X31, 0xE0
	0x03A7506C STP X29, X30, [X31 + 0x80]
	0x03A75070 STP X28, X27, [X31 + 0x90]
	0x03A75074 STP X26, X25, [X31 + 0xA0]
	0x03A75078 STP X24, X23, [X31 + 0xB0]
	0x03A7507C STP X22, X21, [X31 + 0xC0]
	0x03A75080 STP X20, X19, [X31 + 0xD0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x96E000
	007 Move X22, 0x6E2000
	008 Move W8, [X21+700]
	009 Move X22, [X22+3520]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x6E2000
	017 Move X0, [X0+3520]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+700], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move TEMP, 1
	027 Not TEMP
	028 Move W8, TEMP
	029 Move [X19], W8
	030 Move X8, [X20+32]
	031 Move V1, [X20]
	032 Move V0, [X20+16]
	033 Move X22, [X31+16]
	034 Move X21, [X31+24]
	035 Move [X19+40], X8
	036 Move [X19+24], V0
	037 Move [X19+8], V1
	038 Move X20, [X31+32]
	039 Move X19, [X31+40]
	040 Move X30, [X31+48]
	041 Return 

Method: UnityEngine.Rendering.RenderTargetIdentifier Identifier()

Disassembly:
	0x03A75084 ADRP X21, 0x96D000
	0x03A75088 ADRP X19, 0x67E000
	0x03A7508C ADRP X29, 0x67E000
	0x03A75090 ADRP X22, 0x6E1000
	0x03A75094 LDRB W8, [X21 + 0x2CC]
	0x03A75098 LDR X19, [X19 + 0x8F0]
	0x03A7509C LDR X29, [X29 + 0x758]
	0x03A750A0 LDR X22, [X22 + 0xB98]
	0x03A750A4 MOV X20, X0
	0x03A750A8 TBNZ X8, 0x0, 0x3A75174
	0x03A750AC ADRP X0, 0x67E000
	0x03A750B0 LDR X0, [X0 + 0xA28]
	0x03A750B4 BL 0x1C16CF4
	0x03A750B8 ADRP X0, 0x6DC000
	0x03A750BC LDR X0, [X0 + 0x60]
	0x03A750C0 BL 0x1C16CF4
	0x03A750C4 ADRP X0, 0x6DC000
	0x03A750C8 LDR X0, [X0 + 0x68]
	0x03A750CC BL 0x1C16CF4
	0x03A750D0 ADRP X0, 0x6DC000
	0x03A750D4 LDR X0, [X0 + 0x70]
	0x03A750D8 BL 0x1C16CF4
	0x03A750DC ADRP X0, 0x6DC000
	0x03A750E0 LDR X0, [X0 + 0x78]
	0x03A750E4 BL 0x1C16CF4
	0x03A750E8 ADRP X0, 0x6DC000
	0x03A750EC LDR X0, [X0 + 0x80]
	0x03A750F0 BL 0x1C16CF4
	0x03A750F4 ADRP X0, 0x67E000
	0x03A750F8 LDR X0, [X0 + 0x758]
	0x03A750FC BL 0x1C16CF4
	0x03A75100 ADRP X0, 0x6DC000
	0x03A75104 LDR X0, [X0 + 0x88]
	0x03A75108 BL 0x1C16CF4
	0x03A7510C ADRP X0, 0x67E000
	0x03A75110 LDR X0, [X0 + 0x9D0]
	0x03A75114 BL 0x1C16CF4
	0x03A75118 ADRP X0, 0x6E1000
	0x03A7511C LDR X0, [X0 + 0xB98]
	0x03A75120 BL 0x1C16CF4
	0x03A75124 ADRP X0, 0x6DC000
	0x03A75128 LDR X0, [X0 + 0xA0]
	0x03A7512C BL 0x1C16CF4
	0x03A75130 ADRP X0, 0x6DC000
	0x03A75134 LDR X0, [X0 + 0xA8]
	0x03A75138 BL 0x1C16CF4
	0x03A7513C ADRP X0, 0x6DC000
	0x03A75140 LDR X0, [X0 + 0xB0]
	0x03A75144 BL 0x1C16CF4
	0x03A75148 ADRP X0, 0x67E000
	0x03A7514C LDR X0, [X0 + 0x8F0]
	0x03A75150 BL 0x1C16CF4
	0x03A75154 ADRP X0, 0x6E1000
	0x03A75158 LDR X0, [X0 + 0xDE8]
	0x03A7515C BL 0x1C16CF4
	0x03A75160 ADRP X0, 0x6E1000
	0x03A75164 LDR X0, [X0 + 0xDF0]
	0x03A75168 BL 0x1C16CF4
	0x03A7516C MOVZ W8, 0x1
	0x03A75170 STRB W8, [X21 + 0x2CC]
	0x03A75174 LDR X0, [X19]
	0x03A75178 MOVI V0.2D, 0x0
	0x03A7517C STR X31, [X31 + 0x70]
	0x03A75180 STP V0, V0, [X31 + 0x50]
	0x03A75184 BL 0x1C16F10
	0x03A75188 MOV X1, X31
	0x03A7518C MOV X19, X0
	0x03A75190 BL 0x3231AC4

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+48], X30
	003 Move [X31+64], X22
	004 Move [X31+72], X21
	005 Move [X31+80], X20
	006 Move [X31+88], X19
	007 Move X22, 0x96E000
	008 Move X21, 0x6E2000
	009 Move X19, X8
	010 Move W8, [X22+701]
	011 Move X21, [X21+3520]
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0x6E2000
	018 Move X0, [X0+3520]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X22+701], W8
	022 Move X0, [X21]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 Move W8, [X20]
	028 Add W31, W8, 1
	029 Move X0, [X21]
	030 Move W9, [X0+224]
	031 Compare W9, 0
	032 JumpIfEqual {54}
	033 Add W31, W8, 2
	034 Move X8, [X20+40]
	035 NotImplemented "Instruction LDUR not yet implemented."
	036 NotImplemented "Instruction LDUR not yet implemented."
	037 Add X8, X31, 8
	038 Move W0, 2
	039 Move X1, X31
	040 Call RenderTargetIdentifier.op_Implicit, X0
	041 Move X8, [X31+40]
	042 NotImplemented "Instruction LDUR not yet implemented."
	043 NotImplemented "Instruction LDUR not yet implemented."
	044 Move [X19+32], X8
	045 Move [X19], V1
	046 Move [X19+8], V0
	047 Move X20, [X31+80]
	048 Move X19, [X31+88]
	049 Move X22, [X31+64]
	050 Move X21, [X31+72]
	051 Move X30, [X31+48]
	052 Add X31, X31, 96
	053 Return X0
	054 Call 0x1C17DFC
	055 Move X0, [X21]
	056 Move W21, [X20]
	057 Move W8, [X0+224]
	058 Compare W8, 0
	059 JumpIfNotEqual {61}
	060 Call 0x1C17DFC
	061 Add W31, W21, 2
	062 NotImplemented "Instruction MOVI not yet implemented."
	063 Move W1, [X20]
	064 Move [X19+32], X31
	065 Move [X19], V0
	066 Move [X19+8], V0
	067 Move X0, X19
	068 Move X20, [X31+80]
	069 Move X19, [X31+88]
	070 Move X22, [X31+64]
	071 Move X21, [X31+72]
	072 Move X30, [X31+48]
	073 Move TEMP, 0
	074 Not TEMP
	075 Move W3, TEMP
	076 Move TEMP, 0
	077 Not TEMP
	078 Move W4, TEMP
	079 Move W2, W31
	080 Move X5, X31
	081 Add X31, X31, 96
	082 Call RenderTargetIdentifier..ctor, X0, X1, X2, X3, X4
	083 Return X0

Method: System.Boolean HasInternalRenderTargetId()

Disassembly:
	0x03A75194 MOV X0, X31
	0x03A75198 BL 0x3C3C88C
	0x03A7519C LDR X8, [X29]
	0x03A751A0 STR W0, [X31 + 0x4C]
	0x03A751A4 ADD X1, X31, 0x4C
	0x03A751A8 MOV X0, X8
	0x03A751AC BL 0x1C16E04
	0x03A751B0 LDR X8, [X22]
	0x03A751B4 MOV X21, X0
	0x03A751B8 LDR W9, [X8 + 0xE0]
	0x03A751BC CBNZ W9, 0x3A751CC
	0x03A751C0 MOV X0, X8
	0x03A751C4 BL 0x1C16DFC
	0x03A751C8 LDR X8, [X22]
	0x03A751CC LDR X8, [X8 + 0xB8]
	0x03A751D0 LDR X0, [X29]
	0x03A751D4 ADD X1, X31, 0x48
	0x03A751D8 LDR W8, [X8]
	0x03A751DC STR W8, [X31 + 0x48]
	0x03A751E0 BL 0x1C16E04
	0x03A751E4 CBZ X19, 0x3A7558C
	0x03A751E8 ADRP X8, 0x6E1000
	0x03A751EC LDR X8, [X8 + 0xDF0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x96E000
	006 Move X21, 0x6E2000
	007 Move W8, [X20+702]
	008 Move X21, [X21+3520]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x6E2000
	015 Move X0, [X0+3520]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+702], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move W8, [X19]
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Add W31, W8, 2
	028 NotImplemented "Instruction CSET not yet implemented."
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]
	031 Return X0

Method: System.Boolean Equals(UnityEngine.Rendering.Universal.RenderTargetHandle other)

Disassembly:
	0x03A751F0 MOV X3, X0
	0x03A751F4 MOV X0, X19
	0x03A751F8 MOV X2, X21
	0x03A751FC LDR X1, [X8]
	0x03A75200 MOV X4, X31
	0x03A75204 BL 0x3234D98
	0x03A75208 MOV X0, X19
	0x03A7520C MOV X1, X31
	0x03A75210 BL 0x3233888
	0x03A75214 LDR X0, [X20 + 0x10]
	0x03A75218 CBZ X0, 0x3A7558C
	0x03A7521C ADRP X8, 0x6DC000
	0x03A75220 LDR X8, [X8 + 0x60]
	0x03A75224 ADRP X27, 0x67E000
	0x03A75228 LDR X27, [X27 + 0x9D0]
	0x03A7522C ADRP X28, 0x6E1000
	0x03A75230 LDR X1, [X8]
	0x03A75234 LDR X28, [X28 + 0xDE8]
	0x03A75238 ADD X8, X31, 0x10
	0x03A7523C BL 0x2A13AB4
	0x03A75240 LDP V0, V1, [X31 + 0x10]
	0x03A75244 LDR X8, [X31 + 0x30]
	0x03A75248 STP V0, V1, [X31 + 0x50]
	0x03A7524C STR X8, [X31 + 0x70]
	0x03A75250 ADRP X8, 0x6DC000
	0x03A75254 LDR X8, [X8 + 0x70]
	0x03A75258 LDR X1, [X8]
	0x03A7525C ADD X0, X31, 0x50
	0x03A75260 BL 0x2BF5330
	0x03A75264 TBZ X0, 0x0, 0x3A754C8
	0x03A75268 LDR X20, [X31 + 0x68]
	0x03A7526C CBZ X20, 0x3A75588
	0x03A75270 ADRP X8, 0x6DC000
	0x03A75274 LDR X8, [X8 + 0xA8]
	0x03A75278 LDR X1, [X8]
	0x03A7527C MOV X0, X20
	0x03A75280 BL 0x25ED504
	0x03A75284 ADRP X8, 0x6DC000
	0x03A75288 LDR X8, [X8 + 0xB0]
	0x03A7528C LDR X1, [X8]
	0x03A75290 MOV X0, X20
	0x03A75294 BL 0x25ED534
	0x03A75298 LDR W8, [X20 + 0x20]
	0x03A7529C CMP W8, 0x1
	0x03A752A0 B.LT 0x3A75250
	0x03A752A4 MOV X21, X0
	0x03A752A8 MOV W22, W31
	0x03A752AC CBZ X21, 0x3A7552C
	0x03A752B0 LDR X8, [X21]
	0x03A752B4 ADRP X10, 0x6DC000
	0x03A752B8 LDRH W9, [X8 + 0x12E]
	0x03A752BC LDR X10, [X10 + 0x80]
	0x03A752C0 LDR X1, [X10]
	0x03A752C4 CBZ X9, 0x3A752E8
	0x03A752C8 LDR X10, [X8 + 0xB0]
	0x03A752CC ADD X10, X10, 0x8
	0x03A752D0 LDUR X11, [X10 - 0x8]
	0x03A752D4 CMP X11, X1
	0x03A752D8 B.EQ 0x3A752F8
	0x03A752DC SUBS X9, X9, 0x1
	0x03A752E0 ADD X10, X10, 0x10
	0x03A752E4 B.NE 0x3A752D0
	0x03A752E8 MOV X0, X21
	0x03A752EC MOV W2, W31
	0x03A752F0 BL 0x1C5C788
	0x03A752F4 B 0x3A75304
	0x03A752F8 LDRSW X9, [X10]
	0x03A752FC ADD X8, X8, X9, 0x4, LSL
	0x03A75300 ADD X0, X8, 0x138
	0x03A75304 LDP X8, X2, [X0]
	0x03A75308 MOV X0, X21
	0x03A7530C MOV W1, W22
	0x03A75310 BLR X8

ISIL:
	001 Subtract X31, X31, 224
	002 Move [X31+176], X30
	003 Move [X31+192], X22
	004 Move [X31+200], X21
	005 Move [X31+208], X20
	006 Move [X31+216], X19
	007 Move X22, 0x96E000
	008 Move X21, 0x6E2000
	009 Move W8, [X22+703]
	010 Move X21, [X21+3520]
	011 Move X19, X1
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0x6E2000
	018 Move X0, [X0+3520]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X22+703], W8
	022 Move X0, [X21]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 Move W8, [X20]
	028 Add W31, W8, 2
	029 Move X0, [X21]
	030 Move W8, [X0+224]
	031 Compare W8, 0
	032 JumpIfNotEqual {34}
	033 Call 0x1C17DFC
	034 Move W8, [X19]
	035 Add W31, W8, 2
	036 Move X0, [X21]
	037 Move W8, [X0+224]
	038 Compare W8, 0
	039 JumpIfNotEqual {41}
	040 Call 0x1C17DFC
	041 Add X8, X31, 88
	042 Move X0, X20
	043 Call RenderTargetHandle.Identifier, X0
	044 Move X8, [X31+120]
	045 NotImplemented "Instruction LDUR not yet implemented."
	046 NotImplemented "Instruction LDUR not yet implemented."
	047 Move X0, X19
	048 Move [X31+160], X8
	049 Add X8, X31, 88
	050 Move [X31+128], V0
	051 Move [X31+136], V1
	052 Call RenderTargetHandle.Identifier, X0
	053 NotImplemented "Instruction LDUR not yet implemented."
	054 NotImplemented "Instruction LDUR not yet implemented."
	055 Move X8, [X31+120]
	056 Move V2, [X31+128]
	057 Move V3, [X31+144]
	058 Move X9, [X31+160]
	059 Add X0, X31, 48
	060 Add X1, X31, 0
	061 Move X2, X31
	062 Move [X31], V0
	063 Move [X31+8], V1
	064 Move [X31+32], X8
	065 Move [X31+48], V2
	066 Move [X31+56], V3
	067 Move [X31+80], X9
	068 Call RenderTargetIdentifier.op_Equality, X0, X1
	069 Move X0, [X21]
	070 Move W9, [X0+224]
	071 Compare W9, 0
	072 JumpIfNotEqual {75}
	073 Call 0x1C17DFC
	074 Move W8, [X19]
	075 Move W9, [X20]
	076 NotImplemented "Instruction CMP not yet implemented."
	077 NotImplemented "Instruction CSET not yet implemented."
	078 Move X20, [X31+208]
	079 Move X19, [X31+216]
	080 Move X22, [X31+192]
	081 Move X21, [X31+200]
	082 Move X30, [X31+176]
	083 And W0, W0, 1
	084 Add X31, X31, 224
	085 Return X0

Method: System.Boolean Equals(System.Object obj)

Disassembly:
	0x03A75314 MOV X24, X0
	0x03A75318 LDR X0, [X27]
	0x03A7531C MOV X25, X1
	0x03A75320 MOVZ W1, 0x5
	0x03A75324 BL 0x1C16D6C
	0x03A75328 CBZ X24, 0x3A75528
	0x03A7532C MOV X23, X0
	0x03A75330 CBZ X0, 0x3A75520
	0x03A75334 LDR X26, [X24 + 0x58]
	0x03A75338 CBZ X26, 0x3A75350
	0x03A7533C LDR X8, [X23]
	0x03A75340 LDR X1, [X8 + 0x40]
	0x03A75344 MOV X0, X26
	0x03A75348 BL 0x1C16E00
	0x03A7534C CBZ X0, 0x3A75570
	0x03A75350 LDR W8, [X23 + 0x18]
	0x03A75354 CBZ W8, 0x3A75524
	0x03A75358 STR X26, [X23 + 0x20]
	0x03A7535C LDR X0, [X29]
	0x03A75360 STR W25, [X31 + 0x4C]
	0x03A75364 ADD X1, X31, 0x4C
	0x03A75368 BL 0x1C16E04
	0x03A7536C MOV X25, X0
	0x03A75370 CBZ X0, 0x3A75388
	0x03A75374 LDR X8, [X23]
	0x03A75378 LDR X1, [X8 + 0x40]
	0x03A7537C MOV X0, X25
	0x03A75380 BL 0x1C16E00
	0x03A75384 CBZ X0, 0x3A7554C
	0x03A75388 LDR W8, [X23 + 0x18]
	0x03A7538C CMP W8, 0x1
	0x03A75390 B.LS 0x3A75534
	0x03A75394 STR X25, [X23 + 0x28]
	0x03A75398 LDR X0, [X24 + 0x18]
	0x03A7539C CBZ X0, 0x3A75530
	0x03A753A0 ADD X8, X31, 0x10
	0x03A753A4 MOV X1, X31
	0x03A753A8 BL 0x3C21334
	0x03A753AC LDR W8, [X31 + 0x10]
	0x03A753B0 LDR X0, [X29]
	0x03A753B4 STR W8, [X31 + 0x48]
	0x03A753B8 ADD X1, X31, 0x48
	0x03A753BC BL 0x1C16E04
	0x03A753C0 MOV X25, X0
	0x03A753C4 CBZ X0, 0x3A753DC
	0x03A753C8 LDR X8, [X23]
	0x03A753CC LDR X1, [X8 + 0x40]
	0x03A753D0 MOV X0, X25

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+56], X21
	004 Move [X31+64], X20
	005 Move [X31+72], X19
	006 Move X21, 0x96E000
	007 Move W8, [X21+704]
	008 Move X20, X1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x6E2000
	015 Move X0, [X0+3520]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+704], W8
	019 Compare X20, 0
	020 JumpIfEqual {26}
	021 Move X21, 0x6E2000
	022 Move X21, [X21+3520]
	023 Move X8, [X20]
	024 Move X0, [X21]
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move W0, W31
	027 Move W8, [X0+224]
	028 Compare W8, 0
	029 JumpIfEqual {31}
	030 Move X1, X0
	031 Call 0x1C17DFC
	032 Move X1, [X21]
	033 Move X0, [X20]
	034 Move X8, [X0+64]
	035 Move X9, [X1+64]
	036 Move X0, X20
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Call 0x1C17E08
	039 Move V0, [X0]
	040 Move V1, [X0+16]
	041 Move V2, [X0+2]
	042 Add X1, X31, 0
	043 Move X0, X19
	044 Move [X31], V0
	045 Move [X31+8], V1
	046 Move [X31+2], V2
	047 Call RenderTargetHandle.Equals, X0, X1
	048 Move X20, [X31+64]
	049 Move X19, [X31+72]
	050 Move X30, [X31+48]
	051 Move X21, [X31+56]
	052 And W0, W0, 1
	053 Add X31, X31, 80
	054 Return X0
	055 Call 0x1C181E0

Method: System.Int32 GetHashCode()

Disassembly:
	0x03A753D4 BL 0x1C16E00
	0x03A753D8 CBZ X0, 0x3A75564
	0x03A753DC LDR W8, [X23 + 0x18]
	0x03A753E0 CMP W8, 0x2
	0x03A753E4 B.LS 0x3A75538
	0x03A753E8 STR X25, [X23 + 0x30]
	0x03A753EC LDR X0, [X24 + 0x18]
	0x03A753F0 CBZ X0, 0x3A75544
	0x03A753F4 ADD X8, X31, 0x10
	0x03A753F8 MOV X1, X31
	0x03A753FC BL 0x3C21334
	0x03A75400 LDR W8, [X31 + 0x14]
	0x03A75404 LDR X0, [X29]
	0x03A75408 STR W8, [X31 + 0xC]
	0x03A7540C ADD X1, X31, 0xC
	0x03A75410 BL 0x1C16E04
	0x03A75414 MOV X25, X0
	0x03A75418 CBZ X0, 0x3A75430
	0x03A7541C LDR X8, [X23]
	0x03A75420 LDR X1, [X8 + 0x40]
	0x03A75424 MOV X0, X25

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x96E000
	006 Move X21, 0x6E2000
	007 Move W8, [X20+705]
	008 Move X21, [X21+3520]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x6E2000
	015 Move X0, [X0+3520]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+705], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move W0, [X19]
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Move X21, [X31+40]
	029 Return X0

Method: System.Boolean op_Equality(UnityEngine.Rendering.Universal.RenderTargetHandle c1, UnityEngine.Rendering.Universal.RenderTargetHandle c2)

Disassembly:
	0x03A75428 BL 0x1C16E00
	0x03A7542C CBZ X0, 0x3A75558
	0x03A75430 LDR W8, [X23 + 0x18]
	0x03A75434 CMP W8, 0x3
	0x03A75438 B.LS 0x3A75540
	0x03A7543C STR X25, [X23 + 0x38]
	0x03A75440 LDR X0, [X24 + 0x18]
	0x03A75444 CBZ X0, 0x3A75548
	0x03A75448 ADD X8, X31, 0x10
	0x03A7544C MOV X1, X31
	0x03A75450 BL 0x3C21334
	0x03A75454 LDR W8, [X31 + 0x1C]
	0x03A75458 LDR X0, [X29]
	0x03A7545C STR W8, [X31 + 0x10]
	0x03A75460 ADD X1, X31, 0x10
	0x03A75464 BL 0x1C16E04
	0x03A75468 MOV X24, X0
	0x03A7546C CBZ X0, 0x3A75484
	0x03A75470 LDR X8, [X23]
	0x03A75474 LDR X1, [X8 + 0x40]
	0x03A75478 MOV X0, X24
	0x03A7547C BL 0x1C16E00
	0x03A75480 CBZ X0, 0x3A7557C
	0x03A75484 LDR W8, [X23 + 0x18]
	0x03A75488 CMP W8, 0x4
	0x03A7548C B.LS 0x3A7553C
	0x03A75490 STR X24, [X23 + 0x40]
	0x03A75494 LDR X1, [X28]
	0x03A75498 MOV X0, X19
	0x03A7549C MOV X2, X23
	0x03A754A0 MOV X3, X31
	0x03A754A4 BL 0x3234E54
	0x03A754A8 MOV X0, X19
	0x03A754AC MOV X1, X31
	0x03A754B0 BL 0x3233888
	0x03A754B4 LDR W8, [X20 + 0x20]
	0x03A754B8 ADD W22, W22, 0x1

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+96], X30
	003 Move [X31+112], X22
	004 Move [X31+120], X21
	005 Move [X31+128], X20
	006 Move [X31+136], X19
	007 Move X22, 0x96E000
	008 Move X21, 0x6E2000
	009 Move W8, [X22+706]
	010 Move X21, [X21+3520]
	011 Move X20, X1
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0x6E2000
	018 Move X0, [X0+3520]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X22+706], W8
	022 Move V1, [X20+16]
	023 Move V0, [X20+32]
	024 Move V2, [X20]
	025 Move X0, [X21]
	026 Move [X31+64], V1
	027 Move [X31+72], V0
	028 Move [X31+3], V2
	029 Move W8, [X0+224]
	030 Compare W8, 0
	031 JumpIfNotEqual {33}
	032 Call 0x1C17DFC
	033 Move V0, [X31+48]
	034 Move V1, [X31+64]
	035 Move V2, [X31+5]
	036 Add X1, X31, 0
	037 Move X0, X19
	038 Move [X31], V0
	039 Move [X31+8], V1
	040 Move [X31+2], V2
	041 Call RenderTargetHandle.Equals, X0, X1
	042 Move X20, [X31+128]
	043 Move X19, [X31+136]
	044 Move X22, [X31+112]
	045 Move X21, [X31+120]
	046 Move X30, [X31+96]
	047 And W0, W0, 1
	048 Add X31, X31, 144
	049 Return X0

Method: System.Boolean op_Inequality(UnityEngine.Rendering.Universal.RenderTargetHandle c1, UnityEngine.Rendering.Universal.RenderTargetHandle c2)

Disassembly:
	0x03A754BC CMP W22, W8
	0x03A754C0 B.LT 0x3A752AC
	0x03A754C4 B 0x3A75250
	0x03A754C8 ADRP X8, 0x6DC000
	0x03A754CC LDR X8, [X8 + 0x68]
	0x03A754D0 ADD X0, X31, 0x50
	0x03A754D4 LDR X1, [X8]
	0x03A754D8 BL 0x2BF5448
	0x03A754DC ADRP X8, 0x67E000
	0x03A754E0 LDR X8, [X8 + 0xA28]
	0x03A754E4 LDR X0, [X8]
	0x03A754E8 LDR W8, [X0 + 0xE0]
	0x03A754EC CBNZ W8, 0x3A754F4
	0x03A754F0 BL 0x1C16DFC
	0x03A754F4 MOV X0, X19
	0x03A754F8 MOV X1, X31
	0x03A754FC BL 0x3C06048
	0x03A75500 LDP X20, X19, [X31 + 0xD0]
	0x03A75504 LDP X22, X21, [X31 + 0xC0]
	0x03A75508 LDP X24, X23, [X31 + 0xB0]
	0x03A7550C LDP X26, X25, [X31 + 0xA0]
	0x03A75510 LDP X28, X27, [X31 + 0x90]
	0x03A75514 LDP X29, X30, [X31 + 0x80]
	0x03A75518 ADD X31, X31, 0xE0
	0x03A7551C RET
	0x03A75520 BL 0x1C16F20
	0x03A75524 BL 0x1C16F28
	0x03A75528 BL 0x1C16F20
	0x03A7552C BL 0x1C16F20
	0x03A75530 BL 0x1C16F20
	0x03A75534 BL 0x1C16F28
	0x03A75538 BL 0x1C16F28
	0x03A7553C BL 0x1C16F28
	0x03A75540 BL 0x1C16F28
	0x03A75544 BL 0x1C16F20
	0x03A75548 BL 0x1C16F20
	0x03A7554C BL 0x1C16F44
	0x03A75550 MOV X1, X31

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+96], X30
	003 Move [X31+112], X22
	004 Move [X31+120], X21
	005 Move [X31+128], X20
	006 Move [X31+136], X19
	007 Move X22, 0x96E000
	008 Move X21, 0x6E2000
	009 Move W8, [X22+707]
	010 Move X21, [X21+3520]
	011 Move X20, X1
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0x6E2000
	018 Move X0, [X0+3520]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X22+707], W8
	022 Move V1, [X20+16]
	023 Move V0, [X20+32]
	024 Move V2, [X20]
	025 Move X0, [X21]
	026 Move [X31+64], V1
	027 Move [X31+72], V0
	028 Move [X31+3], V2
	029 Move W8, [X0+224]
	030 Compare W8, 0
	031 JumpIfNotEqual {33}
	032 Call 0x1C17DFC
	033 Move V0, [X31+48]
	034 Move V1, [X31+64]
	035 Move V2, [X31+5]
	036 Add X1, X31, 0
	037 Move X0, X19
	038 Move [X31], V0
	039 Move [X31+8], V1
	040 Move [X31+2], V2
	041 Call RenderTargetHandle.Equals, X0, X1
	042 Move X20, [X31+128]
	043 Move X19, [X31+136]
	044 Move X22, [X31+112]
	045 Move X21, [X31+120]
	046 Move X30, [X31+96]
	047 NotImplemented "Instruction ORN not yet implemented."
	048 And W0, W8, 1
	049 Add X31, X31, 144
	050 Return X0

Method: System.Void .cctor()

Disassembly:
	0x03A75554 BL 0x1C16DEC
	0x03A75558 BL 0x1C16F44
	0x03A7555C MOV X1, X31
	0x03A75560 BL 0x1C16DEC
	0x03A75564 BL 0x1C16F44
	0x03A75568 MOV X1, X31
	0x03A7556C BL 0x1C16DEC
	0x03A75570 BL 0x1C16F44
	0x03A75574 MOV X1, X31
	0x03A75578 BL 0x1C16DEC
	0x03A7557C BL 0x1C16F44
	0x03A75580 MOV X1, X31
	0x03A75584 BL 0x1C16DEC
	0x03A75588 BL 0x1C16F20
	0x03A7558C BL 0x1C16F20
	0x03A75590 B 0x3A755F4
	0x03A75594 B 0x3A755F4
	0x03A75598 B 0x3A755F4
	0x03A7559C B 0x3A755F4
	0x03A755A0 B 0x3A755F4
	0x03A755A4 B 0x3A755F4
	0x03A755A8 B 0x3A755F4
	0x03A755AC B 0x3A755F4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x96E000
	005 Move X20, 0x6E2000
	006 Move W8, [X19+708]
	007 Move X20, [X20+3520]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x6E2000
	013 Move X0, [X0+3520]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+708], W8
	017 Move X8, [X20]
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move TEMP, 0
	021 Not TEMP
	022 Move W9, TEMP
	023 NotImplemented "Instruction MOVI not yet implemented."
	024 Move X8, [X8+184]
	025 Move [X8], W9
	026 Move [X8+4], V0
	027 Move [X8+20], V0
	028 Move [X8+2], V0
	029 Move X30, [X31+32]
	030 Return 

