Type: UnityEngine.Rendering.Universal.ScreenSpaceAmbientOcclusion/ScreenSpaceAmbientOcclusionPass

Method: System.Boolean get_isRendererDeferred()

Disassembly:
	0x03A6D3CC BL 0x1C16DFC
	0x03A6D3D0 LDP V0, V1, [X25 + 0xC0]
	0x03A6D3D4 LDR W8, [X31 + 0x180]
	0x03A6D3D8 LDR V2, [X25 + 0xE]
	0x03A6D3DC LDR W2, [X31 + 0x14]
	0x03A6D3E0 STR V0, [X31 + 0x9]
	0x03A6D3E4 STR W8, [X31 + 0xC0]
	0x03A6D3E8 ADD X8, X31, 0xD0
	0x03A6D3EC ADD X0, X31, 0x90
	0x03A6D3F0 MOV W1, W31
	0x03A6D3F4 MOV V0.16B, V9.16B
	0x03A6D3F8 MOV W3, W26
	0x03A6D3FC MOV W4, W28
	0x03A6D400 MOV X5, X29
	0x03A6D404 STP V1, V2, [X25 + 0x10]
	0x03A6D408 BL 0x3A724F4
	0x03A6D40C LDR X0, [X27]
	0x03A6D410 LDR X26, [X19]
	0x03A6D414 LDR W8, [X0 + 0xE0]
	0x03A6D418 CBNZ W8, 0x3A6D420
	0x03A6D41C BL 0x1C16DFC
	0x03A6D420 ADD X0, X31, 0x18
	0x03A6D424 ADD X1, X31, 0xD0
	0x03A6D428 MOVZ W2, 0x78
	0x03A6D42C BL 0x3EB1AC0
	0x03A6D430 ADD X0, X31, 0x18
	0x03A6D434 MOV X1, X26

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x976000
	005 Move W8, [X20+644]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x6E7000
	012 Move X0, [X0+4088]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+644], W8
	016 Move X8, [X19+328]
	017 Compare X8, 0
	018 JumpIfEqual {24}
	019 Move X9, 0x6E7000
	020 Move X9, [X9+4088]
	021 Move X10, [X8]
	022 Move X9, [X9]
	023 NotImplemented "Instruction CMP not yet implemented."
	024 Move W0, W31
	025 Move W8, [X8+736]
	026 NotImplemented "Instruction CMP not yet implemented."
	027 NotImplemented "Instruction CSET not yet implemented."
	028 Move X20, [X31+16]
	029 Move X19, [X31+24]
	030 Move X30, [X31+32]
	031 Return X0

Method: System.Void .ctor()

Disassembly:
	0x03A6CC3C MOV W2, W31
	0x03A6CC40 MOV X3, X31
	0x03A6CC44 LDR X1, [X8]
	0x03A6CC48 BL 0x39E9638
	0x03A6CC4C ADRP X8, 0x6EA000
	0x03A6CC50 LDR X0, [X19 + 0xF8]
	0x03A6CC54 LDR X8, [X8 + 0xB70]
	0x03A6CC58 MOV W2, W31
	0x03A6CC5C MOV X3, X31
	0x03A6CC60 LDR X1, [X8]
	0x03A6CC64 BL 0x39E9638
	0x03A6CC68 LDR X8, [X19 + 0x188]
	0x03A6CC6C CBZ X8, 0x3A6D148
	0x03A6CC70 LDR W8, [X8 + 0x2C]
	0x03A6CC74 CMP W8, 0x1
	0x03A6CC78 B.EQ 0x3A6CCA0
	0x03A6CC7C CBNZ W8, 0x3A6CCC0
	0x03A6CC80 LDR X0, [X29]
	0x03A6CC84 LDR X21, [X19 + 0xF8]
	0x03A6CC88 LDR W8, [X0 + 0xE0]
	0x03A6CC8C CBNZ W8, 0x3A6CC94
	0x03A6CC90 BL 0x1C16DFC
	0x03A6CC94 ADRP X8, 0x6EA000
	0x03A6CC98 LDR X8, [X8 + 0xB70]
	0x03A6CC9C B 0x3A6CCDC
	0x03A6CCA0 LDR X0, [X29]
	0x03A6CCA4 LDR X21, [X19 + 0xF8]
	0x03A6CCA8 LDR W8, [X0 + 0xE0]
	0x03A6CCAC CBNZ W8, 0x3A6CCB4
	0x03A6CCB0 BL 0x1C16DFC
	0x03A6CCB4 ADRP X8, 0x6EA000
	0x03A6CCB8 LDR X8, [X8 + 0xB48]
	0x03A6CCBC B 0x3A6CCDC
	0x03A6CCC0 LDR X0, [X29]
	0x03A6CCC4 LDR X21, [X19 + 0xF8]
	0x03A6CCC8 LDR W8, [X0 + 0xE0]
	0x03A6CCCC CBNZ W8, 0x3A6CCD4
	0x03A6CCD0 BL 0x1C16DFC
	0x03A6CCD4 ADRP X8, 0x6EA000
	0x03A6CCD8 LDR X8, [X8 + 0xB58]
	0x03A6CCDC LDR X1, [X8]
	0x03A6CCE0 MOVZ W2, 0x1
	0x03A6CCE4 MOV X0, X21
	0x03A6CCE8 MOV X3, X31
	0x03A6CCEC BL 0x39E9638
	0x03A6CCF0 LDR X0, [X20 + 0xD8]
	0x03A6CCF4 CBZ X0, 0x3A6D148
	0x03A6CCF8 LDR X20, [X19 + 0xF8]
	0x03A6CCFC MOV X1, X31
	0x03A6CD00 BL 0x3C03928
	0x03A6CD04 LDR X8, [X29]
	0x03A6CD08 MOV W21, W0
	0x03A6CD0C LDR W9, [X8 + 0xE0]
	0x03A6CD10 CBNZ W9, 0x3A6CD1C
	0x03A6CD14 MOV X0, X8
	0x03A6CD18 BL 0x1C16DFC
	0x03A6CD1C LDR X1, [X28]
	0x03A6CD20 AND W2, W21, 0x1
	0x03A6CD24 MOV X0, X20
	0x03A6CD28 MOV X3, X31
	0x03A6CD2C BL 0x39E9638
	0x03A6CD30 LDR X8, [X19 + 0x188]
	0x03A6CD34 CBZ X8, 0x3A6D148
	0x03A6CD38 LDR X0, [X29]
	0x03A6CD3C LDR W21, [X8 + 0x18]
	0x03A6CD40 LDR X20, [X19 + 0xF8]
	0x03A6CD44 LDR W8, [X0 + 0xE0]
	0x03A6CD48 CBZ W8, 0x3A6CDA4
	0x03A6CD4C CBZ W21, 0x3A6CDAC
	0x03A6CD50 ADRP X8, 0x6EA000
	0x03A6CD54 LDR X8, [X8 + 0xB78]
	0x03A6CD58 MOV X0, X20
	0x03A6CD5C MOV W2, W31
	0x03A6CD60 MOV X3, X31
	0x03A6CD64 LDR X1, [X8]
	0x03A6CD68 BL 0x39E9638
	0x03A6CD6C ADRP X8, 0x6EA000
	0x03A6CD70 LDR X0, [X19 + 0xF8]
	0x03A6CD74 LDR X8, [X8 + 0xB38]
	0x03A6CD78 MOV W2, W31
	0x03A6CD7C MOV X3, X31
	0x03A6CD80 LDR X1, [X8]
	0x03A6CD84 BL 0x39E9638
	0x03A6CD88 ADRP X21, 0x6EA000
	0x03A6CD8C ADRP X8, 0x6EA000
	0x03A6CD90 LDR X21, [X21 + 0xB28]
	0x03A6CD94 LDR X8, [X8 + 0xB40]
	0x03A6CD98 MOV W2, W31
	0x03A6CD9C MOVZ W20, 0x1
	0x03A6CDA0 B 0x3A6CEB0
	0x03A6CDA4 BL 0x1C16DFC
	0x03A6CDA8 CBNZ W21, 0x3A6CD50
	0x03A6CDAC ADRP X8, 0x6EA000
	0x03A6CDB0 LDR X8, [X8 + 0xB28]
	0x03A6CDB4 MOV X0, X20
	0x03A6CDB8 MOV W2, W31
	0x03A6CDBC MOV X3, X31
	0x03A6CDC0 LDR X1, [X8]
	0x03A6CDC4 BL 0x39E9638
	0x03A6CDC8 LDR X8, [X19 + 0x188]
	0x03A6CDCC CBZ X8, 0x3A6D148
	0x03A6CDD0 LDR W8, [X8 + 0x1C]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X23, 0x977000
	010 Move X25, 0x6E3000
	011 Move X24, 0x6E7000
	012 Move X22, 0x68C000
	013 Move X21, 0x6E9000
	014 Move X20, 0x6E8000
	015 Move W8, [X23+645]
	016 Move X25, [X25+72]
	017 Move X24, [X24+3888]
	018 Move X22, [X22+2440]
	019 Move X21, [X21+168]
	020 Move X20, [X20+4080]
	021 Move X19, X0
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {46}
	026 Move X0, 0x68C000
	027 Move X0, [X0+2440]
	028 Call 0x1C17CF4
	029 Move X0, 0x6E9000
	030 Move X0, [X0+168]
	031 Call 0x1C17CF4
	032 Move X0, 0x6E7000
	033 Move X0, [X0+3888]
	034 Call 0x1C17CF4
	035 Move X0, 0x6EB000
	036 Move X0, [X0+2824]
	037 Call 0x1C17CF4
	038 Move X0, 0x6E8000
	039 Move X0, [X0+4080]
	040 Call 0x1C17CF4
	041 Move X0, 0x6E3000
	042 Move X0, [X0+72]
	043 Call 0x1C17CF4
	044 Move W8, 1
	045 Move [X23+645], W8
	046 Move X23, 0x6EB000
	047 Move X23, [X23+2824]
	048 Move W0, 16
	049 Move X1, X31
	050 Call SystemInfo.SupportsRenderTextureFormat, X0
	051 And W8, W0, 1
	052 Move [X19+232], W8
	053 Move X0, [X25]
	054 Move W1, 2
	055 Call 0x1C17D6C
	056 Move [X19+264], X0
	057 Move X0, [X25]
	058 Move W1, 2
	059 Call 0x1C17D6C
	060 Move [X19+272], X0
	061 Move X0, [X25]
	062 Move W1, 2
	063 Call 0x1C17D6C
	064 Move [X19+280], X0
	065 Move X0, [X25]
	066 Move W1, 2
	067 Call 0x1C17D6C
	068 Move [X19+288], X0
	069 Move X0, [X24]
	070 Move W1, 4
	071 Call 0x1C17D6C
	072 Move [X19+296], X0
	073 Move X0, [X22]
	074 Move W1, 2
	075 Call 0x1C17D6C
	076 Move [X19+312], X0
	077 Move X1, [X21]
	078 Move W0, 16
	079 Call 0x2236BC0, X0
	080 Move [X19+320], X0
	081 Move X0, [X20]
	082 Move W8, [X0+224]
	083 Compare W8, 0
	084 JumpIfNotEqual {86}
	085 Call 0x1C17DFC
	086 Move X0, X19
	087 Move X1, X31
	088 Call ScriptableRenderPass..ctor, X0
	089 Move X0, [X23]
	090 Call 0x1C17F10
	091 Move X8, -49799168
	092 Move V1, [X8+1664]
	093 Move X9, 0x5C29
	094 NotImplemented "Instruction MOVK not yet implemented."
	095 Move TEMP, 0xFFFF
	096 Not TEMP
	097 Move X8, TEMP
	098 NotImplemented "Instruction MOVI not yet implemented."
	099 NotImplemented "Instruction MOVK not yet implemented."
	100 NotImplemented "Instruction MOVK not yet implemented."
	101 Move X1, X31
	102 Move X20, X0
	103 Move [X0+40], X9
	104 Move [X0+24], D0
	105 Move [X0+32], D1
	106 Move [X0+52], X8
	107 Call Object..ctor, X0
	108 Move [X19+392], X20
	109 Move X20, [X31+48]
	110 Move X19, [X31+56]
	111 Move X22, [X31+32]
	112 Move X21, [X31+40]
	113 Move X24, [X31+16]
	114 Move X23, [X31+24]
	115 Move X30, [X31+64]
	116 Move X25, [X31+72]
	117 Return 

Method: System.Boolean Setup(ref UnityEngine.Rendering.Universal.ScreenSpaceAmbientOcclusionSettings featureSettings, ref UnityEngine.Rendering.Universal.ScriptableRenderer renderer, ref UnityEngine.Material material, ref UnityEngine.Texture2D[] blueNoiseTextures)

Disassembly:
	0x03A6D09C MOVZ W5, 0x1
	0x03A6D0A0 MOV X1, X20
	0x03A6D0A4 MOV W4, W31
	0x03A6D0A8 BL 0x3A6D184
	0x03A6D0AC LDR X8, [X19 + 0x188]
	0x03A6D0B0 CBZ X8, 0x3A6D148
	0x03A6D0B4 LDRB W8, [X8 + 0x15]
	0x03A6D0B8 CBZ W8, 0x3A6D0D4
	0x03A6D0BC LDR X0, [X19 + 0x148]
	0x03A6D0C0 CBZ X0, 0x3A6D148
	0x03A6D0C4 MOV X1, X31
	0x03A6D0C8 BL 0x3A44BD0
	0x03A6D0CC MOV X1, X0
	0x03A6D0D0 B 0x3A6D0EC
	0x03A6D0D4 LDR X8, [X19 + 0x128]
	0x03A6D0D8 CBZ X8, 0x3A6D148
	0x03A6D0DC LDR W9, [X8 + 0x18]
	0x03A6D0E0 CMP W9, 0x3
	0x03A6D0E4 B.LS 0x3A6D14C
	0x03A6D0E8 LDR X1, [X8 + 0x38]
	0x03A6D0EC MOV X0, X19
	0x03A6D0F0 MOV X2, X31
	0x03A6D0F4 BL 0x3A440A4
	0x03A6D0F8 FMOV S0, 1
	0x03A6D0FC FMOV S1, 1
	0x03A6D100 FMOV S2, 1
	0x03A6D104 FMOV S3, 1
	0x03A6D108 MOV X0, X19
	0x03A6D10C MOV W1, W31
	0x03A6D110 MOV X2, X31
	0x03A6D114 BL 0x3A44510
	0x03A6D118 ADD X31, X31, 0x390
	0x03A6D11C LDP X20, X19, [X31 + 0x90]
	0x03A6D120 LDP X22, X21, [X31 + 0x80]
	0x03A6D124 LDP X24, X23, [X31 + 0x70]
	0x03A6D128 LDP X26, X25, [X31 + 0x60]
	0x03A6D12C LDP X28, X27, [X31 + 0x50]
	0x03A6D130 LDP X29, X30, [X31 + 0x40]
	0x03A6D134 LDP D9, D8, [X31 + 0x30]
	0x03A6D138 LDP D11, D10, [X31 + 0x20]
	0x03A6D13C LDP D13, D12, [X31 + 0x10]
	0x03A6D140 LDP D15, D14, [X31], #0xA0
	0x03A6D144 RET
	0x03A6D148 BL 0x1C16F20
	0x03A6D14C BL 0x1C16F28
	0x03A6D150 ADRP X0, 0x68E000
	0x03A6D154 LDR X0, [X0 + 0x760]
	0x03A6D158 BL 0x1C16D08
	0x03A6D15C BL 0x1C16F10
	0x03A6D160 MOV X1, X31
	0x03A6D164 MOV X19, X0
	0x03A6D168 BL 0x3315FB8
	0x03A6D16C ADRP X0, 0x6E9000
	0x03A6D170 LDR X0, [X0 + 0xB90]
	0x03A6D174 BL 0x1C16D08
	0x03A6D178 MOV X1, X0
	0x03A6D17C MOV X0, X19
	0x03A6D180 BL 0x1C16DEC
	0x03A6D184 STP D9, D8, [X31 - 0x70]!
	0x03A6D188 STP X29, X30, [X31 + 0x10]
	0x03A6D18C STP X28, X27, [X31 + 0x20]
	0x03A6D190 STP X26, X25, [X31 + 0x30]
	0x03A6D194 STP X24, X23, [X31 + 0x40]
	0x03A6D198 STP X22, X21, [X31 + 0x50]
	0x03A6D19C STP X20, X19, [X31 + 0x60]
	0x03A6D1A0 SUB X31, X31, 0x250
	0x03A6D1A4 ADRP X26, 0x975000
	0x03A6D1A8 ADRP X29, 0x6E9000
	0x03A6D1AC LDRB W8, [X26 + 0x2B0]
	0x03A6D1B0 LDR X29, [X29 + 0xB98]
	0x03A6D1B4 MOV X20, X6
	0x03A6D1B8 MOV V8.16B, V0.16B
	0x03A6D1BC MOV W21, W5
	0x03A6D1C0 MOV W28, W4
	0x03A6D1C4 MOV W22, W3
	0x03A6D1C8 MOV W23, W2
	0x03A6D1CC MOV X24, X1
	0x03A6D1D0 MOV X19, X0
	0x03A6D1D4 ADD X25, X31, 0x90
	0x03A6D1D8 TBNZ X8, 0x0, 0x3A6D220
	0x03A6D1DC ADRP X0, 0x686000
	0x03A6D1E0 LDR X0, [X0 + 0x598]
	0x03A6D1E4 BL 0x1C16CF4
	0x03A6D1E8 ADRP X0, 0x6E9000
	0x03A6D1EC LDR X0, [X0 + 0xB98]
	0x03A6D1F0 BL 0x1C16CF4
	0x03A6D1F4 ADRP X0, 0x6E3000
	0x03A6D1F8 LDR X0, [X0 + 0x9B0]
	0x03A6D1FC BL 0x1C16CF4
	0x03A6D200 ADRP X0, 0x6E7000
	0x03A6D204 LDR X0, [X0 + 0x10]
	0x03A6D208 BL 0x1C16CF4
	0x03A6D20C ADRP X0, 0x6AF000
	0x03A6D210 LDR X0, [X0 + 0x8A8]
	0x03A6D214 BL 0x1C16CF4
	0x03A6D218 MOVZ W8, 0x1
	0x03A6D21C STRB W8, [X26 + 0x2B0]
	0x03A6D220 MOVI V0.2D, 0x0

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0x976000
	009 Move W8, [X24+646]
	010 Move X23, X4
	011 Move X22, X3
	012 Move X21, X2
	013 Move X20, X1
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {24}
	019 Move X0, 0x687000
	020 Move X0, [X0+1432]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X24+646], W8
	024 Move X8, [X23]
	025 Move X0, X19
	026 Move [X19+256], X8
	027 Move X8, [X22]
	028 Move [X19+248], X8
	029 Move X8, [X21]
	030 Move [X19+328], X8
	031 Move X8, [X20]
	032 Move [X19+392], X8
	033 Call ScreenSpaceAmbientOcclusionPass.get_isRendererDeferred, X0
	034 Move X8, [X19+392]
	035 Compare X8, 0
	036 JumpIfEqual {97}
	037 Move W9, [X8+21]
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Move W9, 300
	040 Move TEMP, X0
	041 And TEMP, TEMP, 1
	042 Compare TEMP, 1
	043 JumpIfNotEqual {49}
	044 Move W10, 220
	045 Move W11, 1
	046 NotImplemented "Instruction CSEL not yet implemented."
	047 Move [X19+16], W9
	048 Move [X8+24], W11
	049 Move W10, 201
	050 NotImplemented "Instruction CSEL not yet implemented."
	051 Move [X19+16], W9
	052 Move W9, [X8+24]
	053 Compare W9, 0
	054 JumpIfEqual {57}
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Move W9, 2
	057 Move W9, 1
	058 Move [X19+200], W9
	059 Move W8, [X8+48]
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Move X9, 0x687000
	062 Move X9, [X9+1432]
	063 Move [X19+304], W8
	064 Move X20, [X19+248]
	065 Move X0, [X9]
	066 Move W8, [X0+224]
	067 Compare W8, 0
	068 JumpIfNotEqual {70}
	069 Call 0x1C17DFC
	070 Move X0, X20
	071 Move X1, X31
	072 Move X2, X31
	073 Call Object.op_Inequality, X0, X1
	074 Move TEMP, X0
	075 And TEMP, TEMP, 1
	076 Compare TEMP, 1
	077 JumpIfNotEqual {88}
	078 Move X8, [X19+392]
	079 Compare X8, 0
	080 JumpIfEqual {97}
	081 Move V0, [X8+32]
	082 NotImplemented "Instruction FCMP not yet implemented."
	083 Move V0, [X8+40]
	084 NotImplemented "Instruction FCMP not yet implemented."
	085 Move V0, [X8+52]
	086 NotImplemented "Instruction FCMP not yet implemented."
	087 NotImplemented "Instruction CSET not yet implemented."
	088 Move W0, W31
	089 Move X20, [X31+48]
	090 Move X19, [X31+56]
	091 Move X22, [X31+32]
	092 Move X21, [X31+40]
	093 Move X24, [X31+16]
	094 Move X23, [X31+24]
	095 Move X30, [X31+64]
	096 Return X0
	097 Call 0x1C17F20
	098 Move X0, 0x68F000
	099 Move X0, [X0+1888]
	100 Call 0x1C17D08
	101 Call 0x1C17F10
	102 Move X1, X31
	103 Move X19, X0
	104 Call ArgumentOutOfRangeException..ctor, X0
	105 Move X0, 0x6EA000
	106 Move X0, [X0+2840]
	107 Call 0x1C17D08
	108 Move X1, X0
	109 Move X0, X19
	110 Call 0x1C17DEC

Method: System.Void OnCameraSetup(UnityEngine.Rendering.CommandBuffer cmd, ref UnityEngine.Rendering.Universal.RenderingData renderingData)

Disassembly:
	0x03A6D438 BL 0x3A72644
	0x03A6D43C LDR W28, [X31 + 0x10]
	0x03A6D440 ADRP X25, 0x6AF000
	0x03A6D444 LDR X25, [X25 + 0x8A8]
	0x03A6D448 LDR X0, [X25]
	0x03A6D44C LDR W8, [X0 + 0xE0]
	0x03A6D450 CBNZ W8, 0x3A6D45C
	0x03A6D454 BL 0x1C16DFC
	0x03A6D458 LDR X0, [X25]
	0x03A6D45C LDR X8, [X0 + 0xB8]
	0x03A6D460 LDR X0, [X8 + 0x10]
	0x03A6D464 CBZ X0, 0x3A6D4EC
	0x03A6D468 ADD X1, X31, 0x1D0
	0x03A6D46C MOVZ W3, 0x1
	0x03A6D470 MOV X2, X19
	0x03A6D474 MOVZ W26, 0x1
	0x03A6D478 BL 0x3A72710
	0x03A6D47C TBNZ X0, 0x0, 0x3A6D4C4
	0x03A6D480 ADRP X8, 0x6E3000
	0x03A6D484 LDR X8, [X8 + 0x9B0]
	0x03A6D488 LDR X0, [X8]
	0x03A6D48C LDR W8, [X0 + 0xE0]
	0x03A6D490 CBNZ W8, 0x3A6D498
	0x03A6D494 BL 0x1C16DFC
	0x03A6D498 AND W3, W28, 0x1
	0x03A6D49C MOV X0, X24
	0x03A6D4A0 MOV W1, W23
	0x03A6D4A4 MOV W2, W22
	0x03A6D4A8 MOV W4, W21
	0x03A6D4AC MOV V0.16B, V8.16B
	0x03A6D4B0 MOV X5, X20
	0x03A6D4B4 MOV X6, X31
	0x03A6D4B8 BL 0x39D59F4
	0x03A6D4BC MOVZ W26, 0x1
	0x03A6D4C0 STR X0, [X19]
	0x03A6D4C4 MOV W0, W26
	0x03A6D4C8 ADD X31, X31, 0x250
	0x03A6D4CC LDP X20, X19, [X31 + 0x60]
	0x03A6D4D0 LDP X22, X21, [X31 + 0x50]
	0x03A6D4D4 LDP X24, X23, [X31 + 0x40]
	0x03A6D4D8 LDP X26, X25, [X31 + 0x30]
	0x03A6D4DC LDP X28, X27, [X31 + 0x20]
	0x03A6D4E0 LDP X29, X30, [X31 + 0x10]
	0x03A6D4E4 LDP D9, D8, [X31], #0x70
	0x03A6D4E8 RET
	0x03A6D4EC BL 0x1C16F20
	0x03A6D4F0 SUB X31, X31, 0x150
	0x03A6D4F4 STP X29, X30, [X31 + 0xF0]
	0x03A6D4F8 STP X28, X27, [X31 + 0x100]
	0x03A6D4FC STP X26, X25, [X31 + 0x110]
	0x03A6D500 STP X24, X23, [X31 + 0x120]
	0x03A6D504 STP X22, X21, [X31 + 0x130]
	0x03A6D508 STP X20, X19, [X31 + 0x140]
	0x03A6D50C ADRP X20, 0x975000
	0x03A6D510 ADRP X23, 0x686000
	0x03A6D514 LDRB W8, [X20 + 0x288]
	0x03A6D518 LDR X23, [X23 + 0x598]
	0x03A6D51C MOV X22, X2
	0x03A6D520 MOV X19, X0
	0x03A6D524 TBNZ X8, 0x0, 0x3A6D590
	0x03A6D528 ADRP X0, 0x6AE000
	0x03A6D52C LDR X0, [X0 + 0x8F8]
	0x03A6D530 BL 0x1C16CF4
	0x03A6D534 ADRP X0, 0x686000
	0x03A6D538 LDR X0, [X0 + 0xA28]
	0x03A6D53C BL 0x1C16CF4
	0x03A6D540 ADRP X0, 0x686000
	0x03A6D544 LDR X0, [X0 + 0x9D0]
	0x03A6D548 BL 0x1C16CF4
	0x03A6D54C ADRP X0, 0x686000
	0x03A6D550 LDR X0, [X0 + 0x598]
	0x03A6D554 BL 0x1C16CF4
	0x03A6D558 ADRP X0, 0x6E8000
	0x03A6D55C LDR X0, [X0 + 0xF10]
	0x03A6D560 BL 0x1C16CF4
	0x03A6D564 ADRP X0, 0x6E9000
	0x03A6D568 LDR X0, [X0 + 0xBA0]
	0x03A6D56C BL 0x1C16CF4
	0x03A6D570 ADRP X0, 0x6E9000
	0x03A6D574 LDR X0, [X0 + 0xBA8]
	0x03A6D578 BL 0x1C16CF4
	0x03A6D57C ADRP X0, 0x6E9000
	0x03A6D580 LDR X0, [X0 + 0xBB0]
	0x03A6D584 BL 0x1C16CF4
	0x03A6D588 MOVZ W8, 0x1
	0x03A6D58C STRB W8, [X20 + 0x288]
	0x03A6D590 STRB W31, [X31 + 0xE0]
	0x03A6D594 STP X31, X31, [X31 + 0xD0]
	0x03A6D598 STR X31, [X31 + 0xC8]
	0x03A6D59C MOV X21, X19
	0x03A6D5A0 LDR X20, [X21 + 0xF8]!
	0x03A6D5A4 LDR X0, [X23]
	0x03A6D5A8 LDR W8, [X0 + 0xE0]
	0x03A6D5AC CBNZ W8, 0x3A6D5B4
	0x03A6D5B0 BL 0x1C16DFC
	0x03A6D5B4 MOV X0, X20
	0x03A6D5B8 MOV X1, X31
	0x03A6D5BC MOV X2, X31
	0x03A6D5C0 BL 0x3C3883C
	0x03A6D5C4 TBZ X0, 0x0, 0x3A6D65C
	0x03A6D5C8 ADRP X8, 0x686000
	0x03A6D5CC LDR X8, [X8 + 0x9D0]
	0x03A6D5D0 MOVZ W1, 0x1
	0x03A6D5D4 LDR X0, [X8]
	0x03A6D5D8 BL 0x1C16D6C
	0x03A6D5DC MOV X20, X0
	0x03A6D5E0 MOV X0, X19
	0x03A6D5E4 MOV X1, X31
	0x03A6D5E8 BL 0x33BE520
	0x03A6D5EC CBZ X0, 0x3A6D9F4
	0x03A6D5F0 LDR X8, [X0]
	0x03A6D5F4 LDP X9, X1, [X8 + 0x1A8]
	0x03A6D5F8 BLR X9
	0x03A6D5FC CBZ X20, 0x3A6D9F4
	0x03A6D600 MOV X19, X0
	0x03A6D604 CBZ X0, 0x3A6D61C
	0x03A6D608 LDR X8, [X20]
	0x03A6D60C MOV X0, X19
	0x03A6D610 LDR X1, [X8 + 0x40]
	0x03A6D614 BL 0x1C16E00
	0x03A6D618 CBZ X0, 0x3A6DA28
	0x03A6D61C LDR W8, [X20 + 0x18]
	0x03A6D620 CBZ W8, 0x3A6DA00
	0x03A6D624 STR X19, [X20 + 0x20]
	0x03A6D628 ADRP X8, 0x686000
	0x03A6D62C LDR X8, [X8 + 0xA28]
	0x03A6D630 LDR X0, [X8]
	0x03A6D634 LDR W8, [X0 + 0xE0]
	0x03A6D638 CBNZ W8, 0x3A6D640
	0x03A6D63C BL 0x1C16DFC
	0x03A6D640 ADRP X8, 0x6E9000
	0x03A6D644 LDR X8, [X8 + 0xBA0]
	0x03A6D648 MOV X1, X20
	0x03A6D64C MOV X2, X31
	0x03A6D650 LDR X0, [X8]
	0x03A6D654 BL 0x3C066BC
	0x03A6D658 B 0x3A6D974
	0x03A6D65C LDR X23, [X22]
	0x03A6D660 ADD X0, X31, 0xE0
	0x03A6D664 MOV X3, X31
	0x03A6D668 STR X23, [X31 + 0xE8]
	0x03A6D66C LDR X2, [X19 + 0x140]
	0x03A6D670 MOV X1, X23
	0x03A6D674 BL 0x39B1DB0
	0x03A6D678 LDR X8, [X19 + 0x188]
	0x03A6D67C CBZ X8, 0x3A6D9F8
	0x03A6D680 LDRB W8, [X8 + 0x15]
	0x03A6D684 CBNZ W8, 0x3A6D6BC
	0x03A6D688 ADRP X8, 0x6AE000
	0x03A6D68C LDR X8, [X8 + 0x8F8]
	0x03A6D690 LDR X0, [X8]
	0x03A6D694 LDR W8, [X0 + 0xE0]
	0x03A6D698 CBNZ W8, 0x3A6D6A0
	0x03A6D69C BL 0x1C16DFC
	0x03A6D6A0 ADRP X8, 0x6E9000
	0x03A6D6A4 LDR X8, [X8 + 0xBA8]
	0x03A6D6A8 LDR X1, [X8]
	0x03A6D6AC MOVZ W2, 0x1
	0x03A6D6B0 MOV X0, X23
	0x03A6D6B4 MOV X3, X31
	0x03A6D6B8 BL 0x39E9618
	0x03A6D6BC LDR W8, [X19 + 0x180]
	0x03A6D6C0 LDP V1, V0, [X19 + 0x160]
	0x03A6D6C4 LDR V2, [X19 + 0x15]
	0x03A6D6C8 STR W8, [X31 + 0xC0]
	0x03A6D6CC STP V1, V0, [X31 + 0xA0]
	0x03A6D6D0 STR V2, [X31 + 0x9]
	0x03A6D6D4 ADD X1, X31, 0x90
	0x03A6D6D8 MOV X0, X23
	0x03A6D6DC BL 0x3A68048
	0x03A6D6E0 LDR X8, [X19 + 0x128]
	0x03A6D6E4 CBZ X8, 0x3A6D9FC
	0x03A6D6E8 LDR W9, [X8 + 0x18]
	0x03A6D6EC CMP W9, 0x3
	0x03A6D6F0 B.LS 0x3A6DA04
	0x03A6D6F4 LDR X0, [X8 + 0x38]
	0x03A6D6F8 ADD X8, X31, 0x38
	0x03A6D6FC MOV X1, X31
	0x03A6D700 BL 0x39CDF64
	0x03A6D704 LDUR V0, [X31 + 0x38]
	0x03A6D708 LDUR V1, [X31 + 0x48]
	0x03A6D70C LDR X8, [X31 + 0x58]
	0x03A6D710 STP V0, V1, [X31 + 0x60]
	0x03A6D714 STR X8, [X31 + 0x80]
	0x03A6D718 CBZ X23, 0x3A6DA08
	0x03A6D71C ADRP X8, 0x6E9000
	0x03A6D720 LDR X8, [X8 + 0xBB0]
	0x03A6D724 LDP V0, V1, [X31 + 0x60]
	0x03A6D728 LDR X9, [X31 + 0x80]
	0x03A6D72C LDR X1, [X8]
	0x03A6D730 STP V0, V1, [X31 + 0x10]
	0x03A6D734 STR X9, [X31 + 0x30]
	0x03A6D738 ADD X2, X31, 0x10
	0x03A6D73C MOV X0, X23
	0x03A6D740 MOV X3, X31
	0x03A6D744 BL 0x3C4FC28
	0x03A6D748 LDR X0, [X22 + 0x190]
	0x03A6D74C CBZ X0, 0x3A6DA0C
	0x03A6D750 MOV X1, X31
	0x03A6D754 BL 0x398841C
	0x03A6D758 TBZ X0, 0x0, 0x3A6D78C
	0x03A6D75C LDR X8, [X19 + 0x188]
	0x03A6D760 CBZ X8, 0x3A6DA34
	0x03A6D764 LDRB W8, [X8 + 0x14]
	0x03A6D768 CBNZ W8, 0x3A6D77C
	0x03A6D76C MOV X0, X31
	0x03A6D770 BL 0x3C3BBBC
	0x03A6D774 CMP W0, 0x2
	0x03A6D778 B.NE 0x3A6D994
	0x03A6D77C MOV X0, X23
	0x03A6D780 MOV W1, W31
	0x03A6D784 MOV X2, X31
	0x03A6D788 BL 0x3C4D910
	0x03A6D78C LDR W22, [X19 + 0x130]
	0x03A6D790 CMP W22, 0x2
	0x03A6D794 B.NE 0x3A6D7EC
	0x03A6D798 ADRP X22, 0x6E8000
	0x03A6D79C LDR X22, [X22 + 0xF10]
	0x03A6D7A0 LDR X0, [X22]
	0x03A6D7A4 LDR W8, [X0 + 0xE0]
	0x03A6D7A8 CBNZ W8, 0x3A6D7B4
	0x03A6D7AC BL 0x1C16DFC
	0x03A6D7B0 LDR X0, [X22]
	0x03A6D7B4 LDR X8, [X0 + 0xB8]
	0x03A6D7B8 LDR W1, [X8 + 0xC]
	0x03A6D7BC MOVZ W2, 0x1
	0x03A6D7C0 MOV X0, X23
	0x03A6D7C4 MOV X3, X31
	0x03A6D7C8 BL 0x3C4CE30
	0x03A6D7CC LDR X8, [X22]
	0x03A6D7D0 LDR X8, [X8 + 0xB8]
	0x03A6D7D4 LDR W1, [X8 + 0x24]
	0x03A6D7D8 FMOV S0, W31
	0x03A6D7DC MOV X0, X23
	0x03A6D7E0 MOV X2, X31
	0x03A6D7E4 BL 0x3C4CDDC
	0x03A6D7E8 LDR W22, [X19 + 0x130]
	0x03A6D7EC LDR X8, [X19 + 0x188]
	0x03A6D7F0 CBZ X8, 0x3A6DA10
	0x03A6D7F4 ADRP X24, 0x6E8000
	0x03A6D7F8 LDR X24, [X24 + 0xF10]
	0x03A6D7FC LDRB W20, [X8 + 0x15]
	0x03A6D800 LDR X0, [X24]
	0x03A6D804 LDR W9, [X0 + 0xE0]
	0x03A6D808 CBNZ W9, 0x3A6D810
	0x03A6D80C BL 0x1C16DFC
	0x03A6D810 CMP W20, 0x0
	0x03A6D814 CSET W1, NE
	0x03A6D818 ADD X2, X31, 0xD8
	0x03A6D81C ADD X3, X31, 0xD0
	0x03A6D820 MOV W0, W22
	0x03A6D824 BL 0x3A6DB24
	0x03A6D828 LDR X0, [X19 + 0x148]
	0x03A6D82C CBZ X0, 0x3A6DA14
	0x03A6D830 MOV X1, X31
	0x03A6D834 BL 0x3A49678
	0x03A6D838 STR X0, [X31 + 0xC8]
	0x03A6D83C LDR X8, [X19 + 0x128]
	0x03A6D840 CBZ X8, 0x3A6DA18
	0x03A6D844 LDR W9, [X8 + 0x18]
	0x03A6D848 CBZ W9, 0x3A6DA1C
	0x03A6D84C ADD X22, X19, 0x148
	0x03A6D850 ADD X5, X8, 0x20
	0x03A6D854 ADD X0, X31, 0xE8
	0x03A6D858 ADD X4, X31, 0xC8
	0x03A6D85C MOV X2, X22
	0x03A6D860 MOV X3, X21
	0x03A6D864 MOV W6, W31
	0x03A6D868 BL 0x3A6DCB4
	0x03A6D86C LDR X25, [X31 + 0xD0]
	0x03A6D870 STR X23, [X31 + 0x8]
	0x03A6D874 CBZ X25, 0x3A6DA20
	0x03A6D878 LDR X26, [X31 + 0xD8]
	0x03A6D87C MOVZ W27, 0x1
	0x03A6D880 LDR W9, [X25 + 0x18]
	0x03A6D884 SUB W8, W27, 0x1
	0x03A6D888 CMP W8, W9
	0x03A6D88C B.GE 0x3A6D928
	0x03A6D890 CBZ X26, 0x3A6D9D8
	0x03A6D894 LDR W11, [X26 + 0x18]
	0x03A6D898 CMP W8, W11
	0x03A6D89C B.CS 0x3A6D9E0
	0x03A6D8A0 ADD W10, W8, 0x1
	0x03A6D8A4 CMP W10, W11
	0x03A6D8A8 B.CS 0x3A6D9F0
	0x03A6D8AC LDR X28, [X19 + 0x128]
	0x03A6D8B0 CBZ X28, 0x3A6D9DC
	0x03A6D8B4 SUB W10, W10, 0x1
	0x03A6D8B8 CMP W10, W9
	0x03A6D8BC B.CS 0x3A6D9E8
	0x03A6D8C0 LDR X0, [X24]
	0x03A6D8C4 SXTW X8, W8
	0x03A6D8C8 ADD X9, X26, W27, 0x2, SXTW
	0x03A6D8CC ADD X10, X26, X8, 0x2, LSL
	0x03A6D8D0 ADD X8, X25, X8, 0x2, LSL
	0x03A6D8D4 LDRSW X20, [X10 + 0x20]
	0x03A6D8D8 LDRSW X29, [X9 + 0x20]
	0x03A6D8DC LDR W9, [X0 + 0xE0]
	0x03A6D8E0 LDR W23, [X8 + 0x20]
	0x03A6D8E4 CBNZ W9, 0x3A6D8EC
	0x03A6D8E8 BL 0x1C16DFC
	0x03A6D8EC LDR W8, [X28 + 0x18]
	0x03A6D8F0 CMP W20, W8
	0x03A6D8F4 B.CS 0x3A6D9EC
	0x03A6D8F8 CMP W29, W8
	0x03A6D8FC B.CS 0x3A6D9E4
	0x03A6D900 ADD W27, W27, 0x1
	0x03A6D904 ADD X8, X28, 0x20
	0x03A6D908 ADD X4, X8, X20, 0x3, LSL
	0x03A6D90C ADD X5, X8, X29, 0x3, LSL
	0x03A6D910 ADD X0, X31, 0xE8
	0x03A6D914 MOV X2, X22
	0x03A6D918 MOV X3, X21
	0x03A6D91C MOV W6, W23
	0x03A6D920 BL 0x3A6DCB4
	0x03A6D924 B 0x3A6D880
	0x03A6D928 LDR X0, [X24]
	0x03A6D92C LDR W8, [X0 + 0xE0]
	0x03A6D930 CBNZ W8, 0x3A6D938
	0x03A6D934 BL 0x1C16DFC
	0x03A6D938 LDR X8, [X19 + 0x188]
	0x03A6D93C LDR X0, [X31 + 0x8]
	0x03A6D940 CBZ X8, 0x3A6DA24
	0x03A6D944 LDR X9, [X24]
	0x03A6D948 LDR V3, [X8 + 0x24]
	0x03A6D94C LDR X9, [X9 + 0xB8]
	0x03A6D950 LDR W1, [X9]
	0x03A6D954 FMOV S0, 1
	0x03A6D958 FMOV S1, W31
	0x03A6D95C FMOV S2, W31
	0x03A6D960 MOV X2, X31
	0x03A6D964 BL 0x3C4CED8
	0x03A6D968 ADD X0, X31, 0xE0
	0x03A6D96C MOV X1, X31
	0x03A6D970 BL 0x39B1DB4
	0x03A6D974 LDP X20, X19, [X31 + 0x140]
	0x03A6D978 LDP X22, X21, [X31 + 0x130]
	0x03A6D97C LDP X24, X23, [X31 + 0x120]
	0x03A6D980 LDP X26, X25, [X31 + 0x110]
	0x03A6D984 LDP X28, X27, [X31 + 0x100]
	0x03A6D988 LDP X29, X30, [X31 + 0xF0]
	0x03A6D98C ADD X31, X31, 0x150
	0x03A6D990 RET
	0x03A6D994 MOV X0, X31
	0x03A6D998 BL 0x3C3BBBC
	0x03A6D99C CMP W0, 0x1
	0x03A6D9A0 B.NE 0x3A6D9B4
	0x03A6D9A4 LDR X8, [X19 + 0x188]
	0x03A6D9A8 CBZ X8, 0x3A6DA38
	0x03A6D9AC LDR W8, [X8 + 0x18]
	0x03A6D9B0 CBZ W8, 0x3A6D77C
	0x03A6D9B4 MOV X0, X31
	0x03A6D9B8 BL 0x3C3BBBC
	0x03A6D9BC CMP W0, 0x1
	0x03A6D9C0 B.NE 0x3A6D78C
	0x03A6D9C4 MOVZ W1, 0x1
	0x03A6D9C8 MOV X0, X23
	0x03A6D9CC MOV X2, X31
	0x03A6D9D0 BL 0x3C4D910
	0x03A6D9D4 B 0x3A6D78C
	0x03A6D9D8 BL 0x1C16F20
	0x03A6D9DC BL 0x1C16F20
	0x03A6D9E0 BL 0x1C16F28
	0x03A6D9E4 BL 0x1C16F28
	0x03A6D9E8 BL 0x1C16F28
	0x03A6D9EC BL 0x1C16F28
	0x03A6D9F0 BL 0x1C16F28
	0x03A6D9F4 BL 0x1C16F20
	0x03A6D9F8 BL 0x1C16F20
	0x03A6D9FC BL 0x1C16F20
	0x03A6DA00 BL 0x1C16F28
	0x03A6DA04 BL 0x1C16F28
	0x03A6DA08 BL 0x1C16F20
	0x03A6DA0C BL 0x1C16F20
	0x03A6DA10 BL 0x1C16F20
	0x03A6DA14 BL 0x1C16F20
	0x03A6DA18 BL 0x1C16F20
	0x03A6DA1C BL 0x1C16F28
	0x03A6DA20 BL 0x1C16F20
	0x03A6DA24 BL 0x1C16F20
	0x03A6DA28 BL 0x1C16F44
	0x03A6DA2C MOV X1, X31
	0x03A6DA30 BL 0x1C16DEC
	0x03A6DA34 BL 0x1C16F20
	0x03A6DA38 BL 0x1C16F20
	0x03A6DA3C B 0x3A6DAC0
	0x03A6DA40 B 0x3A6DAC0
	0x03A6DA44 B 0x3A6DAC0
	0x03A6DA48 B 0x3A6DAC0
	0x03A6DA4C B 0x3A6DAC0
	0x03A6DA50 B 0x3A6DAC0
	0x03A6DA54 B 0x3A6DAC0
	0x03A6DA58 B 0x3A6DAC0
	0x03A6DA5C B 0x3A6DAC0
	0x03A6DA60 B 0x3A6DAC0
	0x03A6DA64 B 0x3A6DAC0
	0x03A6DA68 B 0x3A6DAC0
	0x03A6DA6C B 0x3A6DAC0
	0x03A6DA70 B 0x3A6DAC0
	0x03A6DA74 B 0x3A6DAC0
	0x03A6DA78 B 0x3A6DAC0
	0x03A6DA7C B 0x3A6DAC0
	0x03A6DA80 B 0x3A6DAC0
	0x03A6DA84 B 0x3A6DAC0
	0x03A6DA88 B 0x3A6DAC0
	0x03A6DA8C B 0x3A6DAC0
	0x03A6DA90 B 0x3A6DAC0
	0x03A6DA94 B 0x3A6DAC0
	0x03A6DA98 B 0x3A6DAC0
	0x03A6DA9C B 0x3A6DAC0
	0x03A6DAA0 B 0x3A6DAC0
	0x03A6DAA4 B 0x3A6DAC0
	0x03A6DAA8 B 0x3A6DAC0
	0x03A6DAAC B 0x3A6DAC0
	0x03A6DAB0 B 0x3A6DAC0
	0x03A6DAB4 B 0x3A6DAC0
	0x03A6DAB8 B 0x3A6DAC0
	0x03A6DABC B 0x3A6DAC0
	0x03A6DAC0 MOV X19, X0
	0x03A6DAC4 CMP W1, 0x1
	0x03A6DAC8 B.NE 0x3A6DAF4
	0x03A6DACC MOV X0, X19
	0x03A6DAD0 BL 0x3EB1AD0
	0x03A6DAD4 LDR X20, [X0]
	0x03A6DAD8 BL 0x3EB1AE0
	0x03A6DADC ADD X0, X31, 0xE0
	0x03A6DAE0 MOV X1, X31
	0x03A6DAE4 BL 0x39B1DB4
	0x03A6DAE8 CBZ X20, 0x3A6D974
	0x03A6DAEC MOV X0, X20
	0x03A6DAF0 BL 0x1C16F18
	0x03A6DAF4 MOV X20, X31
	0x03A6DAF8 B 0x3A6DB00
	0x03A6DAFC MOV X19, X0
	0x03A6DB00 ADD X0, X31, 0xE0
	0x03A6DB04 MOV X1, X31
	0x03A6DB08 BL 0x39B1DB4
	0x03A6DB0C CBNZ X20, 0x3A6DB18
	0x03A6DB10 MOV X0, X19
	0x03A6DB14 BL 0x1D2C690
	0x03A6DB18 MOV X0, X20
	0x03A6DB1C BL 0x1C16F18
	0x03A6DB20 BL 0x1990590
	0x03A6DB24 STP X30, X23, [X31 - 0x30]!
	0x03A6DB28 STP X22, X21, [X31 + 0x10]
	0x03A6DB2C STP X20, X19, [X31 + 0x20]
	0x03A6DB30 ADRP X23, 0x975000
	0x03A6DB34 LDRB W8, [X23 + 0x28A]
	0x03A6DB38 MOV X19, X3
	0x03A6DB3C MOV X21, X2
	0x03A6DB40 MOV W20, W1
	0x03A6DB44 MOV W22, W0
	0x03A6DB48 TBNZ X8, 0x0, 0x3A6DB60
	0x03A6DB4C ADRP X0, 0x6E8000
	0x03A6DB50 LDR X0, [X0 + 0xF10]
	0x03A6DB54 BL 0x1C16CF4
	0x03A6DB58 MOVZ W8, 0x1
	0x03A6DB5C STRB W8, [X23 + 0x28A]
	0x03A6DB60 CMP W22, 0x2
	0x03A6DB64 B.EQ 0x3A6DBC4
	0x03A6DB68 CMP W22, 0x1
	0x03A6DB6C B.EQ 0x3A6DC14
	0x03A6DB70 CBNZ W22, 0x3A6DC80
	0x03A6DB74 ADRP X22, 0x6E8000
	0x03A6DB78 LDR X22, [X22 + 0xF10]
	0x03A6DB7C LDR X0, [X22]
	0x03A6DB80 LDR W8, [X0 + 0xE0]
	0x03A6DB84 CBNZ W8, 0x3A6DB90
	0x03A6DB88 BL 0x1C16DFC
	0x03A6DB8C LDR X0, [X22]
	0x03A6DB90 LDR X8, [X0 + 0xB8]
	0x03A6DB94 LDR X8, [X8 + 0x30]
	0x03A6DB98 STR X8, [X21]
	0x03A6DB9C LDR X0, [X22]
	0x03A6DBA0 LDR W8, [X0 + 0xE0]
	0x03A6DBA4 CBNZ W8, 0x3A6DBB0
	0x03A6DBA8 BL 0x1C16DFC
	0x03A6DBAC LDR X0, [X22]
	0x03A6DBB0 ADD X8, X0, 0xB8
	0x03A6DBB4 ANDS W31, W20, 0x1
	0x03A6DBB8 MOVZ W9, 0x38
	0x03A6DBBC MOVZ W10, 0x40
	0x03A6DBC0 B 0x3A6DC60
	0x03A6DBC4 ADRP X22, 0x6E8000
	0x03A6DBC8 LDR X22, [X22 + 0xF10]
	0x03A6DBCC LDR X0, [X22]
	0x03A6DBD0 LDR W8, [X0 + 0xE0]
	0x03A6DBD4 CBNZ W8, 0x3A6DBE0
	0x03A6DBD8 BL 0x1C16DFC
	0x03A6DBDC LDR X0, [X22]
	0x03A6DBE0 LDR X8, [X0 + 0xB8]
	0x03A6DBE4 LDR X8, [X8 + 0x60]
	0x03A6DBE8 STR X8, [X21]
	0x03A6DBEC LDR X0, [X22]
	0x03A6DBF0 LDR W8, [X0 + 0xE0]
	0x03A6DBF4 CBNZ W8, 0x3A6DC00
	0x03A6DBF8 BL 0x1C16DFC
	0x03A6DBFC LDR X0, [X22]
	0x03A6DC00 ADD X8, X0, 0xB8
	0x03A6DC04 ANDS W31, W20, 0x1
	0x03A6DC08 MOVZ W9, 0x68
	0x03A6DC0C MOVZ W10, 0x70
	0x03A6DC10 B 0x3A6DC60
	0x03A6DC14 ADRP X22, 0x6E8000
	0x03A6DC18 LDR X22, [X22 + 0xF10]
	0x03A6DC1C LDR X0, [X22]
	0x03A6DC20 LDR W8, [X0 + 0xE0]
	0x03A6DC24 CBNZ W8, 0x3A6DC30
	0x03A6DC28 BL 0x1C16DFC
	0x03A6DC2C LDR X0, [X22]
	0x03A6DC30 LDR X8, [X0 + 0xB8]
	0x03A6DC34 LDR X8, [X8 + 0x48]
	0x03A6DC38 STR X8, [X21]
	0x03A6DC3C LDR X0, [X22]
	0x03A6DC40 LDR W8, [X0 + 0xE0]
	0x03A6DC44 CBNZ W8, 0x3A6DC50
	0x03A6DC48 BL 0x1C16DFC
	0x03A6DC4C LDR X0, [X22]
	0x03A6DC50 ADD X8, X0, 0xB8
	0x03A6DC54 ANDS W31, W20, 0x1
	0x03A6DC58 MOVZ W9, 0x50
	0x03A6DC5C MOVZ W10, 0x58
	0x03A6DC60 LDR X8, [X8]
	0x03A6DC64 CSEL X9, X10, X9, NE
	0x03A6DC68 LDP X22, X21, [X31 + 0x10]
	0x03A6DC6C LDR X8, [X8, X9, LSL]
	0x03A6DC70 STR X8, [X19]
	0x03A6DC74 LDP X20, X19, [X31 + 0x20]
	0x03A6DC78 LDP X30, X23, [X31], #0x30
	0x03A6DC7C RET
	0x03A6DC80 ADRP X0, 0x68E000
	0x03A6DC84 LDR X0, [X0 + 0x760]
	0x03A6DC88 BL 0x1C16D08
	0x03A6DC8C BL 0x1C16F10
	0x03A6DC90 MOV X1, X31
	0x03A6DC94 MOV X19, X0
	0x03A6DC98 BL 0x3315FB8
	0x03A6DC9C ADRP X0, 0x6E9000
	0x03A6DCA0 LDR X0, [X0 + 0xBB8]
	0x03A6DCA4 BL 0x1C16D08
	0x03A6DCA8 MOV X1, X0
	0x03A6DCAC MOV X0, X19
	0x03A6DCB0 BL 0x1C16DEC
	0x03A6DCB4 SUB X31, X31, 0xC0
	0x03A6DCB8 STP D9, D8, [X31 + 0x60]
	0x03A6DCBC STR X30, [X31 + 0x70]
	0x03A6DCC0 STP X26, X25, [X31 + 0x80]
	0x03A6DCC4 STP X24, X23, [X31 + 0x90]
	0x03A6DCC8 STP X22, X21, [X31 + 0xA0]
	0x03A6DCCC STP X20, X19, [X31 + 0xB0]
	0x03A6DCD0 ADRP X25, 0x975000
	0x03A6DCD4 ADRP X26, 0x6E8000
	0x03A6DCD8 LDRB W8, [X25 + 0x289]
	0x03A6DCDC LDR X26, [X26 + 0xF10]
	0x03A6DCE0 MOV W19, W6
	0x03A6DCE4 MOV X23, X5
	0x03A6DCE8 MOV X21, X4
	0x03A6DCEC MOV X20, X3
	0x03A6DCF0 MOV X24, X2
	0x03A6DCF4 MOV X22, X0
	0x03A6DCF8 TBNZ X8, 0x0, 0x3A6DD34
	0x03A6DCFC ADRP X0, 0x6E5000
	0x03A6DD00 LDR X0, [X0 + 0xE28]
	0x03A6DD04 BL 0x1C16CF4
	0x03A6DD08 ADRP X0, 0x6AE000
	0x03A6DD0C LDR X0, [X0 + 0x8F8]
	0x03A6DD10 BL 0x1C16CF4
	0x03A6DD14 ADRP X0, 0x686000
	0x03A6DD18 LDR X0, [X0 + 0x598]
	0x03A6DD1C BL 0x1C16CF4
	0x03A6DD20 ADRP X0, 0x6E8000
	0x03A6DD24 LDR X0, [X0 + 0xF10]
	0x03A6DD28 BL 0x1C16CF4
	0x03A6DD2C MOVZ W8, 0x1
	0x03A6DD30 STRB W8, [X25 + 0x289]
	0x03A6DD34 LDR X0, [X26]
	0x03A6DD38 LDR W8, [X0 + 0xE0]
	0x03A6DD3C CBNZ W8, 0x3A6DD44
	0x03A6DD40 BL 0x1C16DFC
	0x03A6DD44 ADRP X25, 0x6E5000
	0x03A6DD48 LDR X25, [X25 + 0xE28]
	0x03A6DD4C CMP W19, 0x9
	0x03A6DD50 B.HI 0x3A6DDDC
	0x03A6DD54 MOVZ W8, 0x1
	0x03A6DD58 LSLV W8, W8, W19
	0x03A6DD5C MOVZ W9, 0x290
	0x03A6DD60 ANDS W31, W8, W9, 0x0
	0x03A6DD64 B.EQ 0x3A6DDDC
	0x03A6DD68 LDR X0, [X24]
	0x03A6DD6C CBZ X0, 0x3A6DFA8
	0x03A6DD70 LDR X22, [X22]
	0x03A6DD74 LDR X21, [X21]
	0x03A6DD78 MOV X1, X31
	0x03A6DD7C BL 0x3A44BD0
	0x03A6DD80 LDR X8, [X25]
	0x03A6DD84 LDR X20, [X20]
	0x03A6DD88 MOV X23, X0
	0x03A6DD8C LDR W9, [X8 + 0xE0]
	0x03A6DD90 CBNZ W9, 0x3A6DD9C
	0x03A6DD94 MOV X0, X8
	0x03A6DD98 BL 0x1C16DFC
	0x03A6DD9C MOV X0, X22
	0x03A6DDA0 MOV X1, X21
	0x03A6DDA4 MOV X2, X23
	0x03A6DDA8 MOV X5, X20
	0x03A6DDAC MOV W6, W19
	0x03A6DDB0 LDP X20, X19, [X31 + 0xB0]
	0x03A6DDB4 LDP X22, X21, [X31 + 0xA0]
	0x03A6DDB8 LDP X24, X23, [X31 + 0x90]
	0x03A6DDBC LDP X26, X25, [X31 + 0x80]
	0x03A6DDC0 LDR X30, [X31 + 0x70]
	0x03A6DDC4 LDP D9, D8, [X31 + 0x60]
	0x03A6DDC8 MOV W3, W31
	0x03A6DDCC MOV W4, W31
	0x03A6DDD0 MOV X7, X31
	0x03A6DDD4 ADD X31, X31, 0xC0
	0x03A6DDD8 B 0x39E3120
	0x03A6DDDC LDR X8, [X21]
	0x03A6DDE0 CBZ X8, 0x3A6DFA8
	0x03A6DDE4 ADRP X9, 0x686000
	0x03A6DDE8 LDR X9, [X9 + 0x598]
	0x03A6DDEC LDR X24, [X8 + 0x18]
	0x03A6DDF0 LDR X0, [X9]
	0x03A6DDF4 LDR W9, [X0 + 0xE0]
	0x03A6DDF8 CBNZ W9, 0x3A6DE00
	0x03A6DDFC BL 0x1C16DFC
	0x03A6DE00 MOV X0, X24
	0x03A6DE04 MOV X1, X31
	0x03A6DE08 MOV X2, X31
	0x03A6DE0C BL 0x3C3883C
	0x03A6DE10 TBZ X0, 0x0, 0x3A6DE50
	0x03A6DE14 LDR X0, [X21]
	0x03A6DE18 CBZ X0, 0x3A6DFA8
	0x03A6DE1C LDRB W8, [X0 + 0xA8]
	0x03A6DE20 CBZ W8, 0x3A6DEA8
	0x03A6DE24 ADD X8, X31, 0x30
	0x03A6DE28 MOV X1, X31
	0x03A6DE2C BL 0x39D48AC
	0x03A6DE30 LDR X0, [X21]
	0x03A6DE34 CBZ X0, 0x3A6DFA8
	0x03A6DE38 LDR V8, [X31 + 0x50]
	0x03A6DE3C ADD X8, X31, 0x30
	0x03A6DE40 MOV X1, X31
	0x03A6DE44 BL 0x39D48AC
	0x03A6DE48 LDR V9, [X31 + 0x54]
	0x03A6DE4C B 0x3A6DEDC
	0x03A6DE50 LDR X0, [X25]
	0x03A6DE54 LDR X24, [X22]
	0x03A6DE58 LDR X22, [X21]
	0x03A6DE5C LDR X21, [X23]
	0x03A6DE60 LDR W8, [X0 + 0xE0]
	0x03A6DE64 LDR X20, [X20]
	0x03A6DE68 CBNZ W8, 0x3A6DE70
	0x03A6DE6C BL 0x1C16DFC
	0x03A6DE70 MOV X0, X24
	0x03A6DE74 MOV X1, X22
	0x03A6DE78 MOV X2, X21
	0x03A6DE7C MOV X3, X20
	0x03A6DE80 MOV W4, W19
	0x03A6DE84 LDP X20, X19, [X31 + 0xB0]
	0x03A6DE88 LDP X22, X21, [X31 + 0xA0]
	0x03A6DE8C LDP X24, X23, [X31 + 0x90]
	0x03A6DE90 LDP X26, X25, [X31 + 0x80]
	0x03A6DE94 LDR X30, [X31 + 0x70]
	0x03A6DE98 LDP D9, D8, [X31 + 0x60]
	0x03A6DE9C MOV X5, X31
	0x03A6DEA0 ADD X31, X31, 0xC0
	0x03A6DEA4 B 0x39E2FCC
	0x03A6DEA8 ADRP X24, 0x974000
	0x03A6DEAC LDRB W8, [X24 + 0xA48]
	0x03A6DEB0 CBNZ W8, 0x3A6DEC8
	0x03A6DEB4 ADRP X0, 0x68E000
	0x03A6DEB8 LDR X0, [X0 + 0xF08]
	0x03A6DEBC BL 0x1C16CF4
	0x03A6DEC0 MOVZ W8, 0x1
	0x03A6DEC4 STRB W8, [X24 + 0xA48]
	0x03A6DEC8 ADRP X8, 0x68E000
	0x03A6DECC LDR X8, [X8 + 0xF08]
	0x03A6DED0 LDR X8, [X8]
	0x03A6DED4 LDR X8, [X8 + 0xB8]
	0x03A6DED8 LDP S8, S9, [X8 + 0x8]
	0x03A6DEDC ADRP X8, 0x6AE000
	0x03A6DEE0 LDR X8, [X8 + 0x8F8]
	0x03A6DEE4 LDR X24, [X22]
	0x03A6DEE8 LDR X23, [X23]
	0x03A6DEEC LDR X0, [X8]
	0x03A6DEF0 LDR W8, [X0 + 0xE0]
	0x03A6DEF4 CBNZ W8, 0x3A6DEFC
	0x03A6DEF8 BL 0x1C16DFC
	0x03A6DEFC MOVN W4, 0x0
	0x03A6DF00 MOVN W5, 0x0
	0x03A6DF04 MOV X0, X24
	0x03A6DF08 MOV X1, X23
	0x03A6DF0C MOV W2, W31
	0x03A6DF10 MOV W3, W31
	0x03A6DF14 MOV X6, X31
	0x03A6DF18 BL 0x39E2DCC
	0x03A6DF1C LDR X8, [X21]
	0x03A6DF20 CBZ X8, 0x3A6DFA8
	0x03A6DF24 LDR X9, [X8 + 0x48]
	0x03A6DF28 LDUR V0, [X8 + 0x38]
	0x03A6DF2C LDUR V1, [X8 + 0x28]
	0x03A6DF30 LDR X0, [X25]
	0x03A6DF34 LDR X21, [X22]
	0x03A6DF38 STR X9, [X31 + 0x50]
	0x03A6DF3C STP V1, V0, [X31 + 0x30]
	0x03A6DF40 LDR W8, [X0 + 0xE0]
	0x03A6DF44 LDR X20, [X20]
	0x03A6DF48 CBNZ W8, 0x3A6DF50
	0x03A6DF4C BL 0x1C16DFC
	0x03A6DF50 LDP V0, V1, [X31 + 0x30]
	0x03A6DF54 LDR X8, [X31 + 0x50]
	0x03A6DF58 ADD X1, X31, 0x0
	0x03A6DF5C FMOV S2, W31
	0x03A6DF60 STP V0, V1, [X31]
	0x03A6DF64 FMOV S3, W31
	0x03A6DF68 MOV X0, X21
	0x03A6DF6C MOV V0.16B, V8.16B
	0x03A6DF70 MOV V1.16B, V9.16B
	0x03A6DF74 MOV X2, X20
	0x03A6DF78 MOV W3, W19
	0x03A6DF7C MOV X4, X31
	0x03A6DF80 STR X8, [X31 + 0x20]
	0x03A6DF84 BL 0x39E2800
	0x03A6DF88 LDP X20, X19, [X31 + 0xB0]
	0x03A6DF8C LDP X22, X21, [X31 + 0xA0]
	0x03A6DF90 LDP X24, X23, [X31 + 0x90]
	0x03A6DF94 LDP X26, X25, [X31 + 0x80]
	0x03A6DF98 LDR X30, [X31 + 0x70]
	0x03A6DF9C LDP D9, D8, [X31 + 0x60]
	0x03A6DFA0 ADD X31, X31, 0xC0
	0x03A6DFA4 RET
	0x03A6DFA8 BL 0x1C16F20
	0x03A6DFAC LDR W8, [X0]
	0x03A6DFB0 SUB W8, W8, 0x4
	0x03A6DFB4 CMP W8, 0x5
	0x03A6DFB8 B.HI 0x3A6DFCC
	0x03A6DFBC MOVZ W9, 0x29
	0x03A6DFC0 LSRV W8, W9, W8
	0x03A6DFC4 AND W0, W8, 0x1
	0x03A6DFC8 RET
	0x03A6DFCC MOV W0, W31
	0x03A6DFD0 RET
	0x03A6DFD4 STP X30, X21, [X31 - 0x20]!
	0x03A6DFD8 STP X20, X19, [X31 + 0x10]
	0x03A6DFDC ADRP X21, 0x975000
	0x03A6DFE0 LDRB W8, [X21 + 0x28B]
	0x03A6DFE4 MOV X19, X1
	0x03A6DFE8 MOV X20, X0
	0x03A6DFEC TBNZ X8, 0x0, 0x3A6E010
	0x03A6DFF0 ADRP X0, 0x6AE000
	0x03A6DFF4 LDR X0, [X0 + 0x8F8]
	0x03A6DFF8 BL 0x1C16CF4
	0x03A6DFFC ADRP X0, 0x6E9000
	0x03A6E000 LDR X0, [X0 + 0xBA8]
	0x03A6E004 BL 0x1C16CF4
	0x03A6E008 MOVZ W8, 0x1
	0x03A6E00C STRB W8, [X21 + 0x28B]
	0x03A6E010 CBZ X19, 0x3A6E06C
	0x03A6E014 LDR X8, [X20 + 0x188]
	0x03A6E018 CBZ X8, 0x3A6E0B4
	0x03A6E01C LDRB W8, [X8 + 0x15]
	0x03A6E020 CBZ W8, 0x3A6E030
	0x03A6E024 LDP X20, X19, [X31 + 0x10]
	0x03A6E028 LDP X30, X21, [X31], #0x20
	0x03A6E02C RET
	0x03A6E030 ADRP X8, 0x6AD000
	0x03A6E034 LDR X8, [X8 + 0x8F8]
	0x03A6E038 LDR X0, [X8]
	0x03A6E03C LDR W8, [X0 + 0xE0]
	0x03A6E040 CBNZ W8, 0x3A6E048
	0x03A6E044 BL 0x1C16DFC
	0x03A6E048 ADRP X8, 0x6E8000
	0x03A6E04C LDR X8, [X8 + 0xBA8]
	0x03A6E050 MOV X0, X19
	0x03A6E054 LDP X20, X19, [X31 + 0x10]
	0x03A6E058 MOV W2, W31
	0x03A6E05C LDR X1, [X8]
	0x03A6E060 MOV X3, X31
	0x03A6E064 LDP X30, X21, [X31], #0x20
	0x03A6E068 B 0x39E9618
	0x03A6E06C ADRP X0, 0x68A000
	0x03A6E070 LDR X0, [X0 + 0x528]
	0x03A6E074 BL 0x1C16D08
	0x03A6E078 BL 0x1C16F10
	0x03A6E07C MOV X19, X0
	0x03A6E080 ADRP X0, 0x6E7000
	0x03A6E084 LDR X0, [X0 + 0x6F0]
	0x03A6E088 BL 0x1C16D08
	0x03A6E08C MOV X1, X0
	0x03A6E090 MOV X0, X19
	0x03A6E094 MOV X2, X31
	0x03A6E098 BL 0x330E100
	0x03A6E09C ADRP X0, 0x6E8000
	0x03A6E0A0 LDR X0, [X0 + 0xBC0]
	0x03A6E0A4 BL 0x1C16D08
	0x03A6E0A8 MOV X1, X0
	0x03A6E0AC MOV X0, X19
	0x03A6E0B0 BL 0x1C16DEC
	0x03A6E0B4 BL 0x1C16F20
	0x03A6E0B8 STP X29, X30, [X31 - 0x60]!
	0x03A6E0BC STP X28, X27, [X31 + 0x10]
	0x03A6E0C0 STP X26, X25, [X31 + 0x20]
	0x03A6E0C4 STP X24, X23, [X31 + 0x30]
	0x03A6E0C8 STP X22, X21, [X31 + 0x40]
	0x03A6E0CC STP X20, X19, [X31 + 0x50]
	0x03A6E0D0 ADRP X29, 0x974000
	0x03A6E0D4 ADRP X23, 0x6E8000
	0x03A6E0D8 ADRP X20, 0x6E7000
	0x03A6E0DC ADRP X28, 0x6E8000
	0x03A6E0E0 ADRP X27, 0x6E8000
	0x03A6E0E4 ADRP X26, 0x6E8000
	0x03A6E0E8 ADRP X19, 0x6E8000
	0x03A6E0EC ADRP X25, 0x6E8000
	0x03A6E0F0 ADRP X24, 0x6E8000
	0x03A6E0F4 ADRP X22, 0x686000
	0x03A6E0F8 ADRP X21, 0x6E8000
	0x03A6E0FC LDR X23, [X23 + 0xBC8]
	0x03A6E100 LDR X20, [X20 + 0xF10]
	0x03A6E104 LDR X28, [X28 + 0xBD0]
	0x03A6E108 LDR X27, [X27 + 0xBD8]
	0x03A6E10C LDR X26, [X26 + 0xBE0]
	0x03A6E110 LDR X19, [X19 + 0xBE8]
	0x03A6E114 LDR X25, [X25 + 0xBF0]
	0x03A6E118 LDR X24, [X24 + 0xBF8]
	0x03A6E11C LDR X22, [X22 + 0xE58]
	0x03A6E120 LDRB W8, [X29 + 0x28C]
	0x03A6E124 LDR X21, [X21 + 0xC00]
	0x03A6E128 TBNZ X8, 0x0, 0x3A6E218
	0x03A6E12C ADRP X0, 0x686000
	0x03A6E130 LDR X0, [X0 + 0xE58]
	0x03A6E134 BL 0x1C16CF4
	0x03A6E138 ADRP X0, 0x6E7000
	0x03A6E13C LDR X0, [X0 + 0xF10]
	0x03A6E140 BL 0x1C16CF4
	0x03A6E144 ADRP X0, 0x6E8000
	0x03A6E148 LDR X0, [X0 + 0xC00]
	0x03A6E14C BL 0x1C16CF4
	0x03A6E150 ADRP X0, 0x6E8000
	0x03A6E154 LDR X0, [X0 + 0xC08]
	0x03A6E158 BL 0x1C16CF4
	0x03A6E15C ADRP X0, 0x6E8000
	0x03A6E160 LDR X0, [X0 + 0xC10]
	0x03A6E164 BL 0x1C16CF4
	0x03A6E168 ADRP X0, 0x6E8000
	0x03A6E16C LDR X0, [X0 + 0xC18]
	0x03A6E170 BL 0x1C16CF4
	0x03A6E174 ADRP X0, 0x6E8000
	0x03A6E178 LDR X0, [X0 + 0xC20]
	0x03A6E17C BL 0x1C16CF4
	0x03A6E180 ADRP X0, 0x6E8000

ISIL:
	001 Move [X31-160], D15
	002 Move [X31-152], D14
	003 Move [X31+16], D13
	004 Move [X31+24], D12
	005 Move [X31+32], D11
	006 Move [X31+40], D10
	007 Move [X31+48], D9
	008 Move [X31+56], D8
	009 Move [X31+64], X29
	010 Move [X31+72], X30
	011 Move [X31+80], X28
	012 Move [X31+88], X27
	013 Move [X31+96], X26
	014 Move [X31+104], X25
	015 Move [X31+112], X24
	016 Move [X31+120], X23
	017 Move [X31+128], X22
	018 Move [X31+136], X21
	019 Move [X31+144], X20
	020 Move [X31+152], X19
	021 Subtract X31, X31, 912
	022 Move X21, 0x976000
	023 Move W8, [X21+647]
	024 Move X20, X2
	025 Move X19, X0
	026 Move TEMP, X8
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {83}
	030 Move X0, 0x6AF000
	031 Move X0, [X0+2296]
	032 Call 0x1C17CF4
	033 Move X0, 0x6E8000
	034 Move X0, [X0+16]
	035 Call 0x1C17CF4
	036 Move X0, 0x6E9000
	037 Move X0, [X0+3856]
	038 Call 0x1C17CF4
	039 Move X0, 0x6EA000
	040 Move X0, [X0+2848]
	041 Call 0x1C17CF4
	042 Move X0, 0x6EA000
	043 Move X0, [X0+2856]
	044 Call 0x1C17CF4
	045 Move X0, 0x6EA000
	046 Move X0, [X0+2864]
	047 Call 0x1C17CF4
	048 Move X0, 0x6EA000
	049 Move X0, [X0+2872]
	050 Call 0x1C17CF4
	051 Move X0, 0x6EA000
	052 Move X0, [X0+2880]
	053 Call 0x1C17CF4
	054 Move X0, 0x6EA000
	055 Move X0, [X0+2888]
	056 Call 0x1C17CF4
	057 Move X0, 0x6EA000
	058 Move X0, [X0+2896]
	059 Call 0x1C17CF4
	060 Move X0, 0x6EA000
	061 Move X0, [X0+2904]
	062 Call 0x1C17CF4
	063 Move X0, 0x6EA000
	064 Move X0, [X0+2912]
	065 Call 0x1C17CF4
	066 Move X0, 0x6EA000
	067 Move X0, [X0+2920]
	068 Call 0x1C17CF4
	069 Move X0, 0x6EA000
	070 Move X0, [X0+2928]
	071 Call 0x1C17CF4
	072 Move X0, 0x6EA000
	073 Move X0, [X0+2936]
	074 Call 0x1C17CF4
	075 Move X0, 0x6EA000
	076 Move X0, [X0+2944]
	077 Call 0x1C17CF4
	078 Move X0, 0x6EA000
	079 Move X0, [X0+2952]
	080 Call 0x1C17CF4
	081 Move W8, 1
	082 Move [X21+647], W8
	083 NotImplemented "Instruction MOVI not yet implemented."
	084 Move [X31+832], W31
	085 Move [X31+800], V0
	086 Move [X31+808], V0
	087 Move [X31+49], V0
	088 Move [X31+624], V0
	089 Move [X31+632], V0
	090 Move [X31+592], V0
	091 Move [X31+600], V0
	092 Move [X31+560], V0
	093 Move [X31+568], V0
	094 Move [X31+528], V0
	095 Move [X31+536], V0
	096 Move [X31+496], V0
	097 Move [X31+504], V0
	098 Move [X31+464], V0
	099 Move [X31+472], V0
	100 Move W8, [X20+288]
	101 Move V1, [X20+256]
	102 Move V0, [X20+272]
	103 Move V2, [X20+15]
	104 Move [X31+896], W8
	105 Move [X31+864], V1
	106 Move [X31+872], V0
	107 Move [X31+53], V2
	108 Move X8, [X19+392]
	109 Compare X8, 0
	110 JumpIfEqual {968}
	111 Move W8, [X8+20]
	112 Move X0, [X20+400]
	113 NotImplemented "Instruction CMP not yet implemented."
	114 Move W8, 1
	115 NotImplemented "Instruction CINC not yet implemented."
	116 Compare X0, 0
	117 JumpIfEqual {968}
	118 Move X1, X31
	119 Call XRPass.get_enabled, X0
	120 Move TEMP, X0
	121 And TEMP, TEMP, 1
	122 Compare TEMP, 1
	123 JumpIfNotEqual {132}
	124 Move X0, [X20+400]
	125 Compare X0, 0
	126 JumpIfEqual {968}
	127 Move X1, X31
	128 Call XRPass.get_singlePassEnabled, X0
	129 And W31, W0, 1
	130 Move W8, 1
	131 NotImplemented "Instruction CINC not yet implemented."
	132 Move W28, 1
	133 Move X23, 0x6E9000
	134 Move X29, 0x6AF000
	135 Move X23, [X23+3856]
	136 Move X29, [X29+2296]
	137 Move X21, X31
	138 Add X22, X20, 24
	139 Move W26, 32
	140 Move W24, 32
	141 Add X8, X31, 400
	142 Move X0, X22
	143 Move W1, W21
	144 Move X2, X31
	145 Call CameraData.GetViewMatrix, X0, X1
	146 Move V0, [X31+400]
	147 Move V1, [X31+416]
	148 Move V2, [X31+432]
	149 Move V3, [X31+448]
	150 Add X8, X31, 400
	151 Move X0, X22
	152 Move W1, W21
	153 Move X2, X31
	154 Move [X31+720], V0
	155 Move [X31+728], V1
	156 Move [X31+752], V2
	157 Move [X31+760], V3
	158 Call CameraData.GetProjectionMatrix, X0, X1
	159 Move V1, [X31+432]
	160 Move V0, [X31+448]
	161 Move V2, [X31+400]
	162 Move V3, [X31+416]
	163 Add X8, X31, 336
	164 Add X0, X31, 272
	165 Move [X31+688], V1
	166 Move [X31+696], V0
	167 Move [X31+656], V2
	168 Move [X31+664], V3
	169 Move X27, [X19+312]
	170 Move [X31+272], V2
	171 Move [X31+280], V3
	172 Move V2, [X31+720]
	173 Move V3, [X31+736]
	174 Move [X31+304], V1
	175 Move [X31+312], V0
	176 Move V0, [X31+752]
	177 Move V1, [X31+768]
	178 Add X1, X31, 208
	179 Move X2, X31
	180 Move [X31+208], V2
	181 Move [X31+216], V3
	182 Move [X31+240], V0
	183 Move [X31+248], V1
	184 Call Matrix4x4.op_Multiply, X0, X1
	185 Move V0, [X31+336]
	186 Move V1, [X31+352]
	187 Move V2, [X31+368]
	188 Move V3, [X31+384]
	189 Move [X31+400], V0
	190 Move [X31+408], V1
	191 Move [X31+432], V2
	192 Move [X31+440], V3
	193 Compare X27, 0
	194 JumpIfEqual {968}
	195 Move V0, [X31+400]
	196 Move V1, [X31+416]
	197 Move V2, [X31+432]
	198 Move V3, [X31+448]
	199 Move [X31+144], V0
	200 Move [X31+152], V1
	201 Move [X31+176], V2
	202 Move [X31+184], V3
	203 Move W8, [X27+24]
	204 NotImplemented "Instruction CMP not yet implemented."
	205 Move V0, [X31+176]
	206 Move V1, [X31+192]
	207 Move V2, [X31+144]
	208 Move V3, [X31+160]
	209 Add X8, X27, X24
	210 Add X0, X31, 592
	211 Move [X8+32], V0
	212 Move [X8+40], V1
	213 Move [X8], V2
	214 Move [X8+8], V3
	215 Move V0, [X31+720]
	216 Move V1, [X31+736]
	217 Move V2, [X31+752]
	218 Move V3, [X31+768]
	219 Move W1, 3
	220 Move X2, X31
	221 Move [X31+592], V0
	222 Move [X31+600], V1
	223 Move [X31+624], V2
	224 Move [X31+632], V3
	225 Move S0, W31
	226 Move S1, W31
	227 Move S2, W31
	228 Move S3, 1
	229 Call Matrix4x4.SetColumn, X0, X1, X2
	230 Move V0, [X31+656]
	231 Move V1, [X31+672]
	232 Move V2, [X31+688]
	233 Move V3, [X31+704]
	234 Add X8, X31, 336
	235 Add X0, X31, 80
	236 Move [X31+80], V0
	237 Move [X31+88], V1
	238 Move V0, [X31+592]
	239 Move V1, [X31+608]
	240 Move [X31+112], V2
	241 Move [X31+120], V3
	242 Move V2, [X31+624]
	243 Move V3, [X31+640]
	244 Add X1, X31, 16
	245 Move X2, X31
	246 Move [X31+16], V0
	247 Move [X31+24], V1
	248 Move [X31+48], V2
	249 Move [X31+56], V3
	250 Call Matrix4x4.op_Multiply, X0, X1
	251 Move V0, [X31+336]
	252 Move V1, [X31+352]
	253 Move V2, [X31+368]
	254 Move V3, [X31+384]
	255 Add X8, X31, 336
	256 Add X0, X31, 528
	257 Move X1, X31
	258 Move [X31+528], V0
	259 Move [X31+536], V1
	260 Move [X31+560], V2
	261 Move [X31+568], V3
	262 Call Matrix4x4.get_inverse, X0
	263 Move V0, [X31+336]
	264 Move V1, [X31+352]
	265 Move V2, [X31+368]
	266 Move V3, [X31+384]
	267 Add X0, X31, 464
	268 Move X1, X31
	269 Move [X31+464], V0
	270 Move [X31+472], V1
	271 Move [X31+496], V2
	272 Move [X31+504], V3
	273 Move S0, -1
	274 Move S1, 1
	275 Move S2, -1
	276 Call Matrix4x4.MultiplyPoint, X0, X1
	277 Move V8, V0
	278 Move V9, V1
	279 Move V10, V2
	280 Add X0, X31, 464
	281 Move S0, 1
	282 Move S1, 1
	283 Move S2, -1
	284 Move X1, X31
	285 Call Matrix4x4.MultiplyPoint, X0, X1
	286 Move V14, V0
	287 Move V15, V1
	288 Move V11, V2
	289 Add X0, X31, 464
	290 Move S0, -1
	291 Move S1, -1
	292 Move S2, -1
	293 Move X1, X31
	294 Call Matrix4x4.MultiplyPoint, X0, X1
	295 Move [X31+12], S0
	296 Move V12, V1
	297 Move V13, V2
	298 Add X0, X31, 464
	299 Move S0, W31
	300 Move S1, W31
	301 Move S2, 1
	302 Move X1, X31
	303 Call Matrix4x4.MultiplyPoint, X0, X1
	304 Move X8, [X19+264]
	305 Compare X8, 0
	306 JumpIfEqual {968}
	307 Move W9, [X8+24]
	308 NotImplemented "Instruction CMP not yet implemented."
	309 Add X8, X8, X26
	310 Move [X8], S8
	311 Move [X8+8], S9
	312 Move [X8+8], S10
	313 Move [X8+12], W31
	314 Move X8, [X19+272]
	315 Compare X8, 0
	316 JumpIfEqual {968}
	317 Move W9, [X8+24]
	318 NotImplemented "Instruction CMP not yet implemented."
	319 Subtract S3, S14, S8
	320 Subtract S4, S15, S9
	321 Subtract S5, S11, S10
	322 Add X8, X8, X26
	323 Move [X8], S3
	324 Move [X8+8], S4
	325 Move [X8+8], S5
	326 Move [X8+12], W31
	327 Move X8, [X19+280]
	328 Compare X8, 0
	329 JumpIfEqual {968}
	330 Move W9, [X8+24]
	331 NotImplemented "Instruction CMP not yet implemented."
	332 Move V3, [X31+12]
	333 Subtract S4, S12, S9
	334 Subtract S5, S13, S10
	335 Add X8, X8, X26
	336 Subtract S3, S3, S8
	337 Move [X8], S3
	338 Move [X8+8], S4
	339 Move [X8+8], S5
	340 Move [X8+12], W31
	341 Move X8, [X19+288]
	342 Compare X8, 0
	343 JumpIfEqual {968}
	344 Move W9, [X8+24]
	345 NotImplemented "Instruction CMP not yet implemented."
	346 Add X21, X21, 1
	347 Add X8, X8, X26
	348 Add X24, X24, 64
	349 NotImplemented "Instruction CMP not yet implemented."
	350 Add X26, X26, 16
	351 Move [X8], S0
	352 Move [X8+8], S1
	353 Move [X8+8], S2
	354 Move [X8+12], W31
	355 Move X0, [X23]
	356 Move X21, [X19+248]
	357 Move W8, [X0+224]
	358 Compare W8, 0
	359 JumpIfNotEqual {362}
	360 Call 0x1C17DFC
	361 Move X0, [X23]
	362 Move X28, 0x6EA000
	363 Move X24, 0x6EA000
	364 Move X28, [X28+2864]
	365 Move X24, [X24+2920]
	366 Move X8, [X20+216]
	367 Compare X8, 0
	368 JumpIfEqual {968}
	369 Move X9, [X0+184]
	370 Move X0, X8
	371 Move X1, X31
	372 Move W22, [X9+32]
	373 Call Camera.get_nearClipPlane, X0
	374 Compare X21, 0
	375 JumpIfEqual {968}
	376 Move S1, 1
	377 NotImplemented "Instruction FDIV not yet implemented."
	378 Move S1, W31
	379 Move S2, W31
	380 Move S3, W31
	381 Move X0, X21
	382 Move W1, W22
	383 Move X2, X31
	384 Call Material.SetVector, X0, X1, X2
	385 Move X0, [X19+248]
	386 Compare X0, 0
	387 JumpIfEqual {968}
	388 Move X8, [X23]
	389 Move X2, [X19+312]
	390 Move X3, X31
	391 Move X8, [X8+184]
	392 Move W1, [X8+40]
	393 Call Material.SetMatrixArray, X0, X1, X2
	394 Move X0, [X19+248]
	395 Compare X0, 0
	396 JumpIfEqual {968}
	397 Move X8, [X23]
	398 Move X2, [X19+264]
	399 Move X3, X31
	400 Move X8, [X8+184]
	401 Move W1, [X8+44]
	402 Call Material.SetVectorArray, X0, X1, X2
	403 Move X0, [X19+248]
	404 Compare X0, 0
	405 JumpIfEqual {968}
	406 Move X8, [X23]
	407 Move X2, [X19+272]
	408 Move X3, X31
	409 Move X8, [X8+184]
	410 Move W1, [X8+20]
	411 Call Material.SetVectorArray, X0, X1, X2
	412 Move X0, [X19+248]
	413 Compare X0, 0
	414 JumpIfEqual {968}
	415 Move X8, [X23]
	416 Move X2, [X19+280]
	417 Move X3, X31
	418 Move X8, [X8+184]
	419 Move W1, [X8+24]
	420 Call Material.SetVectorArray, X0, X1, X2
	421 Move X0, [X19+248]
	422 Compare X0, 0
	423 JumpIfEqual {968}
	424 Move X8, [X23]
	425 Move X2, [X19+288]
	426 Move X3, X31
	427 Move X8, [X8+184]
	428 Move W1, [X8+28]
	429 Call Material.SetVectorArray, X0, X1, X2
	430 Move X0, [X20+216]
	431 Compare X0, 0
	432 JumpIfEqual {968}
	433 Move X21, [X19+248]
	434 Move X1, X31
	435 Call Camera.get_orthographic, X0
	436 Move X8, [X29]
	437 Move W22, W0
	438 Move W9, [X8+224]
	439 Compare W9, 0
	440 JumpIfNotEqual {443}
	441 Move X0, X8
	442 Call 0x1C17DFC
	443 Move X1, [X28]
	444 And W2, W22, 1
	445 Move X0, X21
	446 Move X3, X31
	447 Call CoreUtils.SetKeyword, X0, X1, X2
	448 Move X22, 0x6EA000
	449 Move X0, [X19+248]
	450 Move X22, [X22+2952]
	451 Move W2, W31
	452 Move X3, X31
	453 Move X1, [X22]
	454 Call CoreUtils.SetKeyword, X0, X1, X2
	455 Move X0, [X19+248]
	456 Move X1, [X24]
	457 Move W2, W31
	458 Move X3, X31
	459 Call CoreUtils.SetKeyword, X0, X1, X2
	460 Move X8, [X19+392]
	461 Compare X8, 0
	462 JumpIfEqual {968}
	463 Move W8, [X8+16]
	464 NotImplemented "Instruction CMP not yet implemented."
	465 Compare W8, 0
	466 JumpIfNotEqual {970}
	467 Move X0, [X29]
	468 Move X21, [X19+248]
	469 Move W8, [X0+224]
	470 Compare W8, 0
	471 JumpIfNotEqual {473}
	472 Call 0x1C17DFC
	473 Move X1, [X22]
	474 Move W2, 1
	475 Move X0, X21
	476 Move X3, X31
	477 Call CoreUtils.SetKeyword, X0, X1, X2
	478 Move X8, [X19+256]
	479 Compare X8, 0
	480 JumpIfEqual {968}
	481 Move W9, [X19+236]
	482 Move W8, [X8+24]
	483 Move X0, X31
	484 Add W9, W9, 1
	485 NotImplemented "Instruction SDIV not yet implemented."
	486 NotImplemented "Instruction MSUB not yet implemented."
	487 Move [X19+236], W8
	488 Call Random.get_value
	489 Move X0, X31
	490 Move [X19+240], S0
	491 Call Random.get_value
	492 Move X8, [X19+256]
	493 Move [X19+244], S0
	494 Compare X8, 0
	495 JumpIfEqual {968}
	496 NotImplemented "Instruction LDRSW not yet implemented."
	497 Move W10, [X8+24]
	498 NotImplemented "Instruction CMP not yet implemented."
	499 Move X0, [X23]
	500 Add X8, X8, X9
	501 Move X21, [X8+32]
	502 Move X22, [X19+248]
	503 Move W8, [X0+224]
	504 Compare W8, 0
	505 JumpIfNotEqual {507}
	506 Call 0x1C17DFC
	507 Compare X22, 0
	508 JumpIfEqual {968}
	509 Move X8, [X23]
	510 Move X0, X22
	511 Move X2, X21
	512 Move X3, X31
	513 Move X8, [X8+184]
	514 Move W1, [X8+16]
	515 Call Material.SetTexture, X0, X1, X2
	516 Move X8, [X19+392]
	517 Compare X8, 0
	518 JumpIfEqual {968}
	519 Move X0, [X19+248]
	520 Compare X0, 0
	521 JumpIfEqual {968}
	522 Move X9, [X23]
	523 Move V4, [X8+40]
	524 Move V3, [X8+52]
	525 Move V0, [X8+32]
	526 Move X9, [X9+184]
	527 NotImplemented "Instruction SCVTF not yet implemented."
	528 Move S2, 1
	529 NotImplemented "Instruction FDIV not yet implemented."
	530 Move W1, [X9+4]
	531 Move S1, 1.5
	532 Multiply S1, S4, S1
	533 Move X2, X31
	534 Call Material.SetVector, X0, X1, X2
	535 Compare X21, 0
	536 JumpIfEqual {968}
	537 Move X8, [X23]
	538 Move X9, [X21]
	539 Move X22, [X19+248]
	540 Move W26, [X20+344]
	541 Move X8, [X8+184]
	542 Move X0, X21
	543 Move W23, [X8+8]
	544 Move X8, [X9+392]
	545 Move X1, [X9+400]
	546 NotImplemented "Instruction BLR not yet implemented."
	547 Move X8, [X21]
	548 Move W27, [X20+348]
	549 Move W24, W0
	550 Move X0, X21
	551 Move X9, [X8+424]
	552 Move X1, [X8+432]
	553 NotImplemented "Instruction BLR not yet implemented."
	554 Compare X22, 0
	555 JumpIfEqual {968}
	556 Move S2, [X19+240]
	557 Move S3, [X19+244]
	558 NotImplemented "Instruction SCVTF not yet implemented."
	559 NotImplemented "Instruction SCVTF not yet implemented."
	560 NotImplemented "Instruction FDIV not yet implemented."
	561 NotImplemented "Instruction SCVTF not yet implemented."
	562 NotImplemented "Instruction SCVTF not yet implemented."
	563 NotImplemented "Instruction FDIV not yet implemented."
	564 Move X0, X22
	565 Move W1, W23
	566 Move X0, [X29]
	567 Move X21, [X19+248]
	568 Move W8, [X0+224]
	569 Compare W8, 0
	570 JumpIfNotEqual {572}
	571 Call 0x1C17DFC
	572 Move X1, [X24]
	573 Move W2, 1
	574 Move X0, X21
	575 Move X3, X31
	576 Call CoreUtils.SetKeyword, X0, X1, X2
	577 Move X0, [X23]
	578 Move X21, [X19+248]
	579 Move W8, [X0+224]
	580 Compare W8, 0
	581 JumpIfNotEqual {584}
	582 Call 0x1C17DFC
	583 Move X0, [X23]
	584 Move X8, [X19+392]
	585 Compare X8, 0
	586 JumpIfEqual {968}
	587 Compare X21, 0
	588 JumpIfEqual {968}
	589 Move X9, [X0+184]
	590 Move V3, [X8+52]
	591 Move V1, [X8+40]
	592 Move V0, [X8+32]
	593 Move W1, [X9+4]
	594 NotImplemented "Instruction SCVTF not yet implemented."
	595 Move S4, 1
	596 NotImplemented "Instruction FDIV not yet implemented."
	597 Move X0, X21
	598 Move X2, X31
	599 Call Material.SetVector, X0, X1, X2
	600 Move X0, [X29]
	601 Move X21, [X19+248]
	602 Move W8, [X0+224]
	603 Compare W8, 0
	604 JumpIfNotEqual {606}
	605 Call 0x1C17DFC
	606 Move X8, 0x6EA000
	607 Move X8, [X8+2904]
	608 Move X0, X21
	609 Move W2, W31
	610 Move X3, X31
	611 Move X1, [X8]
	612 Call CoreUtils.SetKeyword, X0, X1, X2
	613 Move X8, 0x6EA000
	614 Move X0, [X19+248]
	615 Move X8, [X8+2888]
	616 Move W2, W31
	617 Move X3, X31
	618 Move X1, [X8]
	619 Call CoreUtils.SetKeyword, X0, X1, X2
	620 Move X8, 0x6EA000
	621 Move X0, [X19+248]
	622 Move X8, [X8+2928]
	623 Move W2, W31
	624 Move X3, X31
	625 Move X1, [X8]
	626 Call CoreUtils.SetKeyword, X0, X1, X2
	627 Move X8, [X19+392]
	628 Compare X8, 0
	629 JumpIfEqual {968}
	630 Move W8, [X8+44]
	631 NotImplemented "Instruction CMP not yet implemented."
	632 Compare W8, 0
	633 JumpIfNotEqual {650}
	634 Move X0, [X29]
	635 Move X21, [X19+248]
	636 Move W8, [X0+224]
	637 Compare W8, 0
	638 JumpIfNotEqual {640}
	639 Call 0x1C17DFC
	640 Move X8, 0x6EA000
	641 Move X8, [X8+2928]
	642 Move X0, [X29]
	643 Move X21, [X19+248]
	644 Move W8, [X0+224]
	645 Compare W8, 0
	646 JumpIfNotEqual {648}
	647 Call 0x1C17DFC
	648 Move X8, 0x6EA000
	649 Move X8, [X8+2888]
	650 Move X0, [X29]
	651 Move X21, [X19+248]
	652 Move W8, [X0+224]
	653 Compare W8, 0
	654 JumpIfNotEqual {656}
	655 Call 0x1C17DFC
	656 Move X8, 0x6EA000
	657 Move X8, [X8+2904]
	658 Move X1, [X8]
	659 Move W2, 1
	660 Move X0, X21
	661 Move X3, X31
	662 Call CoreUtils.SetKeyword, X0, X1, X2
	663 Move X0, [X20+216]
	664 Compare X0, 0
	665 JumpIfEqual {968}
	666 Move X20, [X19+248]
	667 Move X1, X31
	668 Call Camera.get_orthographic, X0
	669 Move X8, [X29]
	670 Move W21, W0
	671 Move W9, [X8+224]
	672 Compare W9, 0
	673 JumpIfNotEqual {676}
	674 Move X0, X8
	675 Call 0x1C17DFC
	676 Move X1, [X28]
	677 And W2, W21, 1
	678 Move X0, X20
	679 Move X3, X31
	680 Call CoreUtils.SetKeyword, X0, X1, X2
	681 Move X8, [X19+392]
	682 Compare X8, 0
	683 JumpIfEqual {968}
	684 Move X0, [X29]
	685 Move W21, [X8+24]
	686 Move X20, [X19+248]
	687 Move W8, [X0+224]
	688 Compare W8, 0
	689 JumpIfEqual {712}
	690 Compare W21, 0
	691 JumpIfEqual {715}
	692 Move X8, 0x6EA000
	693 Move X8, [X8+2936]
	694 Move X0, X20
	695 Move W2, W31
	696 Move X3, X31
	697 Move X1, [X8]
	698 Call CoreUtils.SetKeyword, X0, X1, X2
	699 Move X8, 0x6EA000
	700 Move X0, [X19+248]
	701 Move X8, [X8+2872]
	702 Move W2, W31
	703 Move X3, X31
	704 Move X1, [X8]
	705 Call CoreUtils.SetKeyword, X0, X1, X2
	706 Move X21, 0x6EA000
	707 Move X8, 0x6EA000
	708 Move X21, [X21+2856]
	709 Move X8, [X8+2880]
	710 Move W2, W31
	711 Move W20, 1
	712 Call 0x1C17DFC
	713 Compare W21, 0
	714 JumpIfNotEqual {692}
	715 Move X8, 0x6EA000
	716 Move X8, [X8+2856]
	717 Move X0, X20
	718 Move W2, W31
	719 Move X3, X31
	720 Move X1, [X8]
	721 Call CoreUtils.SetKeyword, X0, X1, X2
	722 Move X8, [X19+392]
	723 Compare X8, 0
	724 JumpIfEqual {968}
	725 Move W8, [X8+28]
	726 NotImplemented "Instruction CMP not yet implemented."
	727 NotImplemented "Instruction CMP not yet implemented."
	728 Compare W8, 0
	729 JumpIfNotEqual {970}
	730 Move X0, [X29]
	731 Move X20, [X19+248]
	732 Move W8, [X0+224]
	733 Compare W8, 0
	734 JumpIfNotEqual {736}
	735 Call 0x1C17DFC
	736 Move X8, 0x6EA000
	737 Move X8, [X8+2936]
	738 Move W2, 1
	739 Move X0, X20
	740 Move X3, X31
	741 Move X1, [X8]
	742 Call CoreUtils.SetKeyword, X0, X1, X2
	743 Move W2, W31
	744 Move W20, W31
	745 Move X0, [X29]
	746 Move X20, [X19+248]
	747 Move W8, [X0+224]
	748 Compare W8, 0
	749 JumpIfNotEqual {751}
	750 Call 0x1C17DFC
	751 Move X8, 0x6EA000
	752 Move X8, [X8+2936]
	753 Move X0, X20
	754 Move W2, W31
	755 Move X3, X31
	756 Move X1, [X8]
	757 Call CoreUtils.SetKeyword, X0, X1, X2
	758 Move W2, W31
	759 Move W20, 1
	760 Move X21, 0x6EA000
	761 Move X21, [X21+2880]
	762 Move X0, [X29]
	763 Move X20, [X19+248]
	764 Move W8, [X0+224]
	765 Compare W8, 0
	766 JumpIfNotEqual {768}
	767 Call 0x1C17DFC
	768 Move X8, 0x6EA000
	769 Move X8, [X8+2936]
	770 Move X0, X20
	771 Move W2, W31
	772 Move X3, X31
	773 Move X1, [X8]
	774 Call CoreUtils.SetKeyword, X0, X1, X2
	775 Move X21, 0x6EA000
	776 Move X21, [X21+2880]
	777 Move W20, W31
	778 Move W2, 1
	779 Move X8, 0x6EA000
	780 Move X8, [X8+2872]
	781 Move X22, 0x6E8000
	782 Move X22, [X22+16]
	783 Move X0, [X19+248]
	784 Move X1, [X8]
	785 Move X3, X31
	786 Call CoreUtils.SetKeyword, X0, X1, X2
	787 Move X0, [X19+248]
	788 Move X1, [X21]
	789 Move W2, W20
	790 Move X3, X31
	791 Call CoreUtils.SetKeyword, X0, X1, X2
	792 Move V0, [X31+848]
	793 Move V1, [X31+864]
	794 Move V2, [X31+55]
	795 Move W8, [X31+896]
	796 Move W9, 1
	797 Add X0, X31, 784
	798 Move W1, W31
	799 Move X2, X31
	800 Move [X31+784], V0
	801 Move [X31+792], V1
	802 Move [X31+51], V2
	803 Move [X31+832], W8
	804 Move [X31+792], W9
	805 Call RenderTextureDescriptor.set_depthBufferBits, X0, X1
	806 Move V0, [X31+784]
	807 Move V1, [X31+800]
	808 Move W8, [X31+832]
	809 Move V2, [X31+51]
	810 Add X20, X19, 336
	811 Move [X19+336], V0
	812 Move [X19+344], V1
	813 Move [X19+384], W8
	814 Move W8, [X19+336]
	815 Move [X19+23], V2
	816 NotImplemented "Instruction SDIV not yet implemented."
	817 Move [X19+336], W8
	818 Move W8, [X20+4]
	819 NotImplemented "Instruction SDIV not yet implemented."
	820 Move [X20+4], W8
	821 Move W8, [X19+232]
	822 Compare W8, 0
	823 JumpIfEqual {827}
	824 Move W8, [X19+304]
	825 NotImplemented "Instruction CMP not yet implemented."
	826 Move W1, 16
	827 Move W1, W31
	828 Move X0, X20
	829 Move X2, X31
	830 Call RenderTextureDescriptor.set_colorFormat, X0, X1
	831 Move X21, [X19+296]
	832 Compare X21, 0
	833 JumpIfEqual {968}
	834 Move X0, [X22]
	835 Move W8, [X0+224]
	836 Compare W8, 0
	837 JumpIfNotEqual {839}
	838 Call 0x1C17DFC
	839 Move W8, [X21+24]
	840 Compare W8, 0
	841 JumpIfEqual {969}
	842 Move X8, 0x6EA000
	843 Move X8, [X8+2944]
	844 Add X0, X21, 32
	845 Move S0, W31
	846 Move W2, 1
	847 Move X6, [X8]
	848 Move W3, 1
	849 Move W5, 1
	850 Move X1, X20
	851 Move W4, W31
	852 Call RenderingUtils.ReAllocateIfNeeded, X0, X1, X2, X3, X4, X5, V0, X6
	853 Move X8, [X19+296]
	854 Compare X8, 0
	855 JumpIfEqual {968}
	856 Move W9, [X8+24]
	857 NotImplemented "Instruction CMP not yet implemented."
	858 Move X9, 0x6EA000
	859 Move X9, [X9+2896]
	860 Add X0, X8, 40
	861 Move S0, W31
	862 Move W2, 1
	863 Move X6, [X9]
	864 Move W3, 1
	865 Move W5, 1
	866 Move X1, X20
	867 Move W4, W31
	868 Call RenderingUtils.ReAllocateIfNeeded, X0, X1, X2, X3, X4, X5, V0, X6
	869 Move X8, [X19+296]
	870 Compare X8, 0
	871 JumpIfEqual {968}
	872 Move W9, [X8+24]
	873 NotImplemented "Instruction CMP not yet implemented."
	874 Move X9, 0x6E9000
	875 Move X9, [X9+2848]
	876 Add X0, X8, 48
	877 Move S0, W31
	878 Move W2, 1
	879 Move X6, [X9]
	880 Move W3, 1
	881 Move W5, 1
	882 Move X1, X20
	883 Move W4, W31
	884 Call RenderingUtils.ReAllocateIfNeeded, X0, X1, X2, X3, X4, X5, V0, X6
	885 Move V0, [X19+336]
	886 Move W8, [X19+232]
	887 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	888 Move X0, X20
	889 Multiply S0, S0, S1
	890 Move W1, W8
	891 ShiftRight W1, 28
	892 And W1, W1, 0x7FFFFFF
	893 Move X2, X31
	894 Move [X19+336], D0
	895 Call RenderTextureDescriptor.set_colorFormat, X0, X1
	896 Move X21, [X19+296]
	897 Compare X21, 0
	898 JumpIfEqual {968}
	899 Move X0, [X22]
	900 Move W8, [X0+224]
	901 Compare W8, 0
	902 JumpIfNotEqual {904}
	903 Call 0x1C17DFC
	904 Move W8, [X21+24]
	905 NotImplemented "Instruction CMP not yet implemented."
	906 Move X8, 0x6E9000
	907 Move X8, [X8+2912]
	908 Add X0, X21, 56
	909 Move S0, W31
	910 Move W2, 1
	911 Move X6, [X8]
	912 Move W3, 1
	913 Move W5, 1
	914 Move X1, X20
	915 Move W4, W31
	916 Call RenderingUtils.ReAllocateIfNeeded, X0, X1, X2, X3, X4, X5, V0, X6
	917 Move X8, [X19+392]
	918 Compare X8, 0
	919 JumpIfEqual {968}
	920 Move W8, [X8+21]
	921 Compare W8, 0
	922 JumpIfEqual {929}
	923 Move X0, [X19+328]
	924 Compare X0, 0
	925 JumpIfEqual {968}
	926 Move X1, X31
	927 Call ScriptableRenderer.get_cameraColorTargetHandle, X0
	928 Move X1, X0
	929 Move X8, [X19+296]
	930 Compare X8, 0
	931 JumpIfEqual {968}
	932 Move W9, [X8+24]
	933 NotImplemented "Instruction CMP not yet implemented."
	934 Move X1, [X8+56]
	935 Move X0, X19
	936 Move X2, X31
	937 Call ScriptableRenderPass.ConfigureTarget, X0, X1
	938 Move S0, 1
	939 Move S1, 1
	940 Move S2, 1
	941 Move S3, 1
	942 Move X0, X19
	943 Move W1, W31
	944 Move X2, X31
	945 Call ScriptableRenderPass.ConfigureClear, X0, X1, X2
	946 Add X31, X31, 912
	947 Move X20, [X31+144]
	948 Move X19, [X31+152]
	949 Move X22, [X31+128]
	950 Move X21, [X31+136]
	951 Move X24, [X31+112]
	952 Move X23, [X31+120]
	953 Move X26, [X31+96]
	954 Move X25, [X31+104]
	955 Move X28, [X31+80]
	956 Move X27, [X31+88]
	957 Move X29, [X31+64]
	958 Move X30, [X31+72]
	959 Move D9, [X31+48]
	960 Move D8, [X31+56]
	961 Move D11, [X31+32]
	962 Move D10, [X31+40]
	963 Move D13, [X31+16]
	964 Move D12, [X31+24]
	965 Move D15, [X31+160]
	966 Move D14, [X31+168]
	967 Return 
	968 Call 0x1C17F20
	969 Call 0x1C17F28
	970 Move X0, 0x68E000
	971 Move X0, [X0+1888]
	972 Call 0x1C17D08
	973 Call 0x1C17F10
	974 Move X1, X31
	975 Move X19, X0
	976 Call ArgumentOutOfRangeException..ctor, X0
	977 Move X0, 0x6E9000
	978 Move X0, [X0+2960]
	979 Call 0x1C17D08
	980 Move X1, X0
	981 Move X0, X19
	982 Call 0x1C17DEC

Method: System.Void Execute(UnityEngine.Rendering.ScriptableRenderContext context, ref UnityEngine.Rendering.Universal.RenderingData renderingData)

Disassembly:
	0x03A6E4F0 LDR X8, [X8 + 0xB8]
	0x03A6E4F4 STR X0, [X8 + 0x68]
	0x03A6E4F8 LDR X0, [X21]
	0x03A6E4FC BL 0x1C16D6C
	0x03A6E500 CBZ X0, 0x3A6E540
	0x03A6E504 LDR W8, [X0 + 0x18]
	0x03A6E508 CBZ W8, 0x3A6E53C
	0x03A6E50C MOVZ W8, 0x9
	0x03A6E510 STR W8, [X0 + 0x20]
	0x03A6E514 LDR X8, [X20]
	0x03A6E518 LDP X20, X19, [X31 + 0x50]
	0x03A6E51C LDP X22, X21, [X31 + 0x40]
	0x03A6E520 LDP X24, X23, [X31 + 0x30]
	0x03A6E524 LDR X8, [X8 + 0xB8]
	0x03A6E528 LDP X26, X25, [X31 + 0x20]
	0x03A6E52C LDP X28, X27, [X31 + 0x10]
	0x03A6E530 STR X0, [X8 + 0x70]
	0x03A6E534 LDP X29, X30, [X31], #0x60
	0x03A6E538 RET
	0x03A6E53C BL 0x1C16F28
	0x03A6E540 BL 0x1C16F20
	0x03A6E544 MOV X1, X31
	0x03A6E548 B 0x33BDD8C
	0x03A6E54C STR X30, [X31 - 0x20]!
	0x03A6E550 STP X20, X19, [X31 + 0x10]
	0x03A6E554 ADRP X20, 0x974000
	0x03A6E558 LDRB W8, [X20 + 0x28D]
	0x03A6E55C MOV X19, X0
	0x03A6E560 TBNZ X8, 0x0, 0x3A6E584
	0x03A6E564 ADRP X0, 0x6E8000
	0x03A6E568 LDR X0, [X0 + 0xC50]
	0x03A6E56C BL 0x1C16CF4
	0x03A6E570 ADRP X0, 0x6E8000
	0x03A6E574 LDR X0, [X0 + 0xC58]
	0x03A6E578 BL 0x1C16CF4
	0x03A6E57C MOVZ W8, 0x1
	0x03A6E580 STRB W8, [X20 + 0x28D]
	0x03A6E584 LDR X8, [X19 + 0x38]
	0x03A6E588 CBNZ X8, 0x3A6E5A8
	0x03A6E58C ADRP X8, 0x6E8000
	0x03A6E590 LDR X8, [X8 + 0xC50]
	0x03A6E594 LDR X0, [X8]
	0x03A6E598 BL 0x1C16F10
	0x03A6E59C MOV X20, X0
	0x03A6E5A0 BL 0x3A6E604
	0x03A6E5A4 STR X20, [X19 + 0x38]
	0x03A6E5A8 LDR X8, [X19 + 0x40]
	0x03A6E5AC CBNZ X8, 0x3A6E5CC
	0x03A6E5B0 ADRP X8, 0x6E8000
	0x03A6E5B4 LDR X8, [X8 + 0xC58]
	0x03A6E5B8 LDR X0, [X8]
	0x03A6E5BC BL 0x1C16F10
	0x03A6E5C0 MOV X20, X0
	0x03A6E5C4 BL 0x3A6E68C
	0x03A6E5C8 STR X20, [X19 + 0x40]
	0x03A6E5CC MOV X0, X19
	0x03A6E5D0 BL 0x3A6E6E4
	0x03A6E5D4 LDR X8, [X19 + 0x38]
	0x03A6E5D8 CBZ X8, 0x3A6E600
	0x03A6E5DC MOVZ W9, 0xDC
	0x03A6E5E0 STR W9, [X8 + 0x10]
	0x03A6E5E4 LDR X8, [X19 + 0x40]
	0x03A6E5E8 CBZ X8, 0x3A6E600
	0x03A6E5EC LDP X20, X19, [X31 + 0x10]
	0x03A6E5F0 MOVZ W9, 0x1C2
	0x03A6E5F4 STR W9, [X8 + 0x10]
	0x03A6E5F8 LDR X30, [X31], #0x20
	0x03A6E5FC RET
	0x03A6E600 BL 0x1C16F20
	0x03A6E604 STP X30, X21, [X31 - 0x20]!
	0x03A6E608 STP X20, X19, [X31 + 0x10]
	0x03A6E60C ADRP X21, 0x974000
	0x03A6E610 ADRP X20, 0x6E5000
	0x03A6E614 LDRB W8, [X21 + 0x292]
	0x03A6E618 LDR X20, [X20 + 0xFF0]
	0x03A6E61C MOV X19, X0
	0x03A6E620 TBNZ X8, 0x0, 0x3A6E644
	0x03A6E624 ADRP X0, 0x6E8000
	0x03A6E628 LDR X0, [X0 + 0xC60]
	0x03A6E62C BL 0x1C16CF4
	0x03A6E630 ADRP X0, 0x6E5000
	0x03A6E634 LDR X0, [X0 + 0xFF0]
	0x03A6E638 BL 0x1C16CF4
	0x03A6E63C MOVZ W8, 0x1
	0x03A6E640 STRB W8, [X21 + 0x292]
	0x03A6E644 LDR X0, [X20]
	0x03A6E648 ADRP X20, 0x6E8000
	0x03A6E64C LDR W8, [X0 + 0xE0]
	0x03A6E650 LDR X20, [X20 + 0xC60]
	0x03A6E654 CBNZ W8, 0x3A6E65C
	0x03A6E658 BL 0x1C16DFC
	0x03A6E65C MOV X0, X19
	0x03A6E660 MOV X1, X31
	0x03A6E664 BL 0x3A4225C
	0x03A6E668 LDR X0, [X20]
	0x03A6E66C BL 0x1C16F10
	0x03A6E670 MOV X1, X31
	0x03A6E674 MOV X20, X0
	0x03A6E678 BL 0x33BDD8C
	0x03A6E67C STR X20, [X19 + 0xE8]
	0x03A6E680 LDP X20, X19, [X31 + 0x10]
	0x03A6E684 LDP X30, X21, [X31], #0x20
	0x03A6E688 RET
	0x03A6E68C STP X30, X21, [X31 - 0x20]!
	0x03A6E690 STP X20, X19, [X31 + 0x10]
	0x03A6E694 ADRP X20, 0x974000
	0x03A6E698 ADRP X21, 0x6E5000
	0x03A6E69C LDRB W8, [X20 + 0x299]
	0x03A6E6A0 LDR X21, [X21 + 0xFF0]
	0x03A6E6A4 MOV X19, X0
	0x03A6E6A8 TBNZ X8, 0x0, 0x3A6E6C0
	0x03A6E6AC ADRP X0, 0x6E5000
	0x03A6E6B0 LDR X0, [X0 + 0xFF0]
	0x03A6E6B4 BL 0x1C16CF4
	0x03A6E6B8 MOVZ W8, 0x1
	0x03A6E6BC STRB W8, [X20 + 0x299]
	0x03A6E6C0 LDR X0, [X21]
	0x03A6E6C4 LDR W8, [X0 + 0xE0]
	0x03A6E6C8 CBNZ W8, 0x3A6E6D0
	0x03A6E6CC BL 0x1C16DFC
	0x03A6E6D0 MOV X0, X19
	0x03A6E6D4 LDP X20, X19, [X31 + 0x10]
	0x03A6E6D8 MOV X1, X31
	0x03A6E6DC LDP X30, X21, [X31], #0x20
	0x03A6E6E0 B 0x3A4225C
	0x03A6E6E4 STP X30, X21, [X31 - 0x20]!
	0x03A6E6E8 STP X20, X19, [X31 + 0x10]
	0x03A6E6EC ADRP X20, 0x974000
	0x03A6E6F0 ADRP X21, 0x685000
	0x03A6E6F4 LDRB W8, [X20 + 0x290]
	0x03A6E6F8 LDR X21, [X21 + 0x598]
	0x03A6E6FC MOV X19, X0
	0x03A6E700 TBNZ X8, 0x0, 0x3A6E730
	0x03A6E704 ADRP X0, 0x6AD000
	0x03A6E708 LDR X0, [X0 + 0x8F8]
	0x03A6E70C BL 0x1C16CF4
	0x03A6E710 ADRP X0, 0x685000
	0x03A6E714 LDR X0, [X0 + 0x598]
	0x03A6E718 BL 0x1C16CF4
	0x03A6E71C ADRP X0, 0x6E8000
	0x03A6E720 LDR X0, [X0 + 0xC68]
	0x03A6E724 BL 0x1C16CF4
	0x03A6E728 MOVZ W8, 0x1
	0x03A6E72C STRB W8, [X20 + 0x290]
	0x03A6E730 LDR X0, [X21]
	0x03A6E734 LDR X20, [X19 + 0x30]
	0x03A6E738 LDR W8, [X0 + 0xE0]
	0x03A6E73C CBNZ W8, 0x3A6E744
	0x03A6E740 BL 0x1C16DFC
	0x03A6E744 MOV X0, X20
	0x03A6E748 MOV X1, X31
	0x03A6E74C MOV X2, X31
	0x03A6E750 BL 0x3C354F8
	0x03A6E754 TBZ X0, 0x0, 0x3A6E768
	0x03A6E758 MOVZ W0, 0x1
	0x03A6E75C LDP X20, X19, [X31 + 0x10]
	0x03A6E760 LDP X30, X21, [X31], #0x20
	0x03A6E764 RET
	0x03A6E768 LDR X0, [X21]
	0x03A6E76C LDR X20, [X19 + 0x20]
	0x03A6E770 LDR W8, [X0 + 0xE0]
	0x03A6E774 CBNZ W8, 0x3A6E77C
	0x03A6E778 BL 0x1C16DFC
	0x03A6E77C MOV X0, X20
	0x03A6E780 MOV X1, X31
	0x03A6E784 MOV X2, X31
	0x03A6E788 BL 0x3C3883C
	0x03A6E78C TBZ X0, 0x0, 0x3A6E7D8
	0x03A6E790 ADRP X8, 0x6E8000
	0x03A6E794 LDR X8, [X8 + 0xC68]
	0x03A6E798 MOV X1, X31
	0x03A6E79C LDR X0, [X8]
	0x03A6E7A0 BL 0x3C13E40
	0x03A6E7A4 STR X0, [X19 + 0x20]
	0x03A6E7A8 MOV X20, X0
	0x03A6E7AC LDR X0, [X21]
	0x03A6E7B0 LDR W8, [X0 + 0xE0]
	0x03A6E7B4 CBNZ W8, 0x3A6E7BC
	0x03A6E7B8 BL 0x1C16DFC
	0x03A6E7BC MOV X0, X20
	0x03A6E7C0 MOV X1, X31
	0x03A6E7C4 MOV X2, X31
	0x03A6E7C8 BL 0x3C3883C
	0x03A6E7CC TBZ X0, 0x0, 0x3A6E7D8
	0x03A6E7D0 MOV W0, W31
	0x03A6E7D4 B 0x3A6E75C
	0x03A6E7D8 ADRP X8, 0x6AD000
	0x03A6E7DC LDR X8, [X8 + 0x8F8]
	0x03A6E7E0 LDR X20, [X19 + 0x20]
	0x03A6E7E4 LDR X0, [X8]
	0x03A6E7E8 LDR W8, [X0 + 0xE0]
	0x03A6E7EC CBNZ W8, 0x3A6E7F4
	0x03A6E7F0 BL 0x1C16DFC
	0x03A6E7F4 MOV X0, X20
	0x03A6E7F8 MOV X1, X31
	0x03A6E7FC BL 0x39E1920
	0x03A6E800 STR X0, [X19 + 0x30]
	0x03A6E804 MOV X20, X0
	0x03A6E808 LDR X0, [X21]
	0x03A6E80C LDR W8, [X0 + 0xE0]
	0x03A6E810 CBNZ W8, 0x3A6E818
	0x03A6E814 BL 0x1C16DFC
	0x03A6E818 MOV X0, X20
	0x03A6E81C LDP X20, X19, [X31 + 0x10]
	0x03A6E820 MOV X1, X31
	0x03A6E824 MOV X2, X31
	0x03A6E828 LDP X30, X21, [X31], #0x20
	0x03A6E82C B 0x3C354F8
	0x03A6E830 STP X30, X23, [X31 - 0x30]!
	0x03A6E834 STP X22, X21, [X31 + 0x10]
	0x03A6E838 STP X20, X19, [X31 + 0x20]
	0x03A6E83C ADRP X22, 0x974000
	0x03A6E840 ADRP X23, 0x6E5000
	0x03A6E844 LDRB W8, [X22 + 0x28E]
	0x03A6E848 LDR X23, [X23 + 0xFF8]
	0x03A6E84C MOV X21, X2
	0x03A6E850 MOV X20, X1
	0x03A6E854 MOV X19, X0
	0x03A6E858 TBNZ X8, 0x0, 0x3A6E894
	0x03A6E85C ADRP X0, 0x685000
	0x03A6E860 LDR X0, [X0 + 0xA28]
	0x03A6E864 BL 0x1C16CF4
	0x03A6E868 ADRP X0, 0x685000
	0x03A6E86C LDR X0, [X0 + 0x9D0]
	0x03A6E870 BL 0x1C16CF4
	0x03A6E874 ADRP X0, 0x6E5000
	0x03A6E878 LDR X0, [X0 + 0xFF8]
	0x03A6E87C BL 0x1C16CF4
	0x03A6E880 ADRP X0, 0x6E8000
	0x03A6E884 LDR X0, [X0 + 0xC70]
	0x03A6E888 BL 0x1C16CF4
	0x03A6E88C MOVZ W8, 0x1
	0x03A6E890 STRB W8, [X22 + 0x28E]
	0x03A6E894 LDR X0, [X23]
	0x03A6E898 ADD X22, X21, 0x18
	0x03A6E89C LDR W8, [X0 + 0xE0]
	0x03A6E8A0 CBNZ W8, 0x3A6E8A8
	0x03A6E8A4 BL 0x1C16DFC
	0x03A6E8A8 MOV X0, X22
	0x03A6E8AC MOV X1, X31
	0x03A6E8B0 BL 0x3A83C1C
	0x03A6E8B4 TBZ X0, 0x0, 0x3A6E8C8
	0x03A6E8B8 LDP X20, X19, [X31 + 0x20]
	0x03A6E8BC LDP X22, X21, [X31 + 0x10]
	0x03A6E8C0 LDP X30, X23, [X31], #0x30
	0x03A6E8C4 RET
	0x03A6E8C8 MOV X0, X19
	0x03A6E8CC BL 0x3A6E6E4
	0x03A6E8D0 TBZ X0, 0x0, 0x3A6E920
	0x03A6E8D4 LDRB W8, [X21 + 0x250]
	0x03A6E8D8 CBZ W8, 0x3A6E8B8
	0x03A6E8DC LDR W8, [X21 + 0x228]
	0x03A6E8E0 ADDS W31, W8, 0x1
	0x03A6E8E4 B.EQ 0x3A6E8B8
	0x03A6E8E8 LDR X0, [X19 + 0x38]
	0x03A6E8EC CBZ X0, 0x3A6EA54
	0x03A6E8F0 LDP X1, X2, [X19 + 0x28]
	0x03A6E8F4 BL 0x3A6EA64
	0x03A6E8F8 TBZ X0, 0x0, 0x3A6E8B8
	0x03A6E8FC CBZ X20, 0x3A6EA4C
	0x03A6E900 LDR X8, [X23]
	0x03A6E904 LDR X9, [X20]
	0x03A6E908 CMP X9, X8
	0x03A6E90C B.EQ 0x3A6E9F4
	0x03A6E910 LDR X1, [X19 + 0x38]
	0x03A6E914 CBZ X1, 0x3A6EA54
	0x03A6E918 MOVZ W8, 0xC9
	0x03A6E91C B 0x3A6EA10
	0x03A6E920 ADRP X8, 0x685000
	0x03A6E924 LDR X8, [X8 + 0x9D0]
	0x03A6E928 MOVZ W1, 0x2
	0x03A6E92C LDR X0, [X8]
	0x03A6E930 BL 0x1C16D6C
	0x03A6E934 MOV X20, X0
	0x03A6E938 MOV X0, X19
	0x03A6E93C MOV X1, X31
	0x03A6E940 BL 0x33BE520
	0x03A6E944 CBZ X0, 0x3A6EA54
	0x03A6E948 LDR X8, [X0]
	0x03A6E94C LDP X9, X1, [X8 + 0x1A8]
	0x03A6E950 BLR X9
	0x03A6E954 CBZ X20, 0x3A6EA54
	0x03A6E958 MOV X21, X0
	0x03A6E95C CBZ X0, 0x3A6E974
	0x03A6E960 LDR X8, [X20]
	0x03A6E964 MOV X0, X21
	0x03A6E968 LDR X1, [X8 + 0x40]
	0x03A6E96C BL 0x1C16E00
	0x03A6E970 CBZ X0, 0x3A6EA40
	0x03A6E974 LDR W8, [X20 + 0x18]
	0x03A6E978 CBZ W8, 0x3A6EA3C
	0x03A6E97C MOV X0, X19
	0x03A6E980 MOV X1, X31
	0x03A6E984 STR X21, [X20 + 0x20]
	0x03A6E988 BL 0x3C389D4
	0x03A6E98C MOV X19, X0
	0x03A6E990 CBZ X0, 0x3A6E9A8
	0x03A6E994 LDR X8, [X20]
	0x03A6E998 MOV X0, X19
	0x03A6E99C LDR X1, [X8 + 0x40]
	0x03A6E9A0 BL 0x1C16E00
	0x03A6E9A4 CBZ X0, 0x3A6EA40
	0x03A6E9A8 LDR W8, [X20 + 0x18]
	0x03A6E9AC CMP W8, 0x1
	0x03A6E9B0 B.LS 0x3A6EA3C
	0x03A6E9B4 STR X19, [X20 + 0x28]
	0x03A6E9B8 ADRP X8, 0x685000
	0x03A6E9BC LDR X8, [X8 + 0xA28]
	0x03A6E9C0 LDR X0, [X8]
	0x03A6E9C4 LDR W8, [X0 + 0xE0]
	0x03A6E9C8 CBNZ W8, 0x3A6E9D0
	0x03A6E9CC BL 0x1C16DFC
	0x03A6E9D0 ADRP X8, 0x6E8000
	0x03A6E9D4 LDR X8, [X8 + 0xC70]
	0x03A6E9D8 MOV X1, X20
	0x03A6E9DC LDP X20, X19, [X31 + 0x20]
	0x03A6E9E0 LDP X22, X21, [X31 + 0x10]
	0x03A6E9E4 LDR X0, [X8]
	0x03A6E9E8 MOV X2, X31
	0x03A6E9EC LDP X30, X23, [X31], #0x30
	0x03A6E9F0 B 0x3C066BC
	0x03A6E9F4 LDR W8, [X20 + 0x2E0]
	0x03A6E9F8 LDR X1, [X19 + 0x38]
	0x03A6E9FC MOVZ W9, 0xC9
	0x03A6EA00 CMP W8, 0x1
	0x03A6EA04 MOVZ W8, 0xDC
	0x03A6EA08 CSEL W8, W8, W9, EQ
	0x03A6EA0C CBZ X1, 0x3A6EA54
	0x03A6EA10 MOV X0, X20
	0x03A6EA14 MOV X2, X31
	0x03A6EA18 STR W8, [X1 + 0x10]
	0x03A6EA1C BL 0x3A4E96C
	0x03A6EA20 LDR X1, [X19 + 0x40]
	0x03A6EA24 MOV X0, X20
	0x03A6EA28 LDP X20, X19, [X31 + 0x20]
	0x03A6EA2C LDP X22, X21, [X31 + 0x10]
	0x03A6EA30 MOV X2, X31
	0x03A6EA34 LDP X30, X23, [X31], #0x30
	0x03A6EA38 B 0x3A4E96C
	0x03A6EA3C BL 0x1C16F28
	0x03A6EA40 BL 0x1C16F44
	0x03A6EA44 MOV X1, X31
	0x03A6EA48 BL 0x1C16DEC
	0x03A6EA4C LDR X8, [X19 + 0x38]
	0x03A6EA50 CBNZ X8, 0x3A6EA58
	0x03A6EA54 BL 0x1C16F20
	0x03A6EA58 MOVZ W9, 0xC9
	0x03A6EA5C STR W9, [X8 + 0x10]
	0x03A6EA60 BL 0x1C16F20
	0x03A6EA64 STP X30, X23, [X31 - 0x30]!
	0x03A6EA68 STP X22, X21, [X31 + 0x10]
	0x03A6EA6C STP X20, X19, [X31 + 0x20]
	0x03A6EA70 ADRP X23, 0x974000
	0x03A6EA74 ADRP X22, 0x685000
	0x03A6EA78 LDRB W8, [X23 + 0x293]
	0x03A6EA7C LDR X22, [X22 + 0x598]
	0x03A6EA80 MOV X19, X2
	0x03A6EA84 MOV X21, X1
	0x03A6EA88 MOV X20, X0
	0x03A6EA8C TBNZ X8, 0x0, 0x3A6EAA4
	0x03A6EA90 ADRP X0, 0x685000
	0x03A6EA94 LDR X0, [X0 + 0x598]
	0x03A6EA98 BL 0x1C16CF4
	0x03A6EA9C MOVZ W8, 0x1
	0x03A6EAA0 STRB W8, [X23 + 0x293]
	0x03A6EAA4 MOVZ W8, 0x1
	0x03A6EAA8 STP X19, X21, [X20 + 0xE0]
	0x03A6EAAC STR W8, [X20 + 0xC8]
	0x03A6EAB0 LDR X0, [X22]
	0x03A6EAB4 LDR W8, [X0 + 0xE0]
	0x03A6EAB8 CBNZ W8, 0x3A6EAC0
	0x03A6EABC BL 0x1C16DFC
	0x03A6EAC0 MOV X0, X19
	0x03A6EAC4 LDP X20, X19, [X31 + 0x20]
	0x03A6EAC8 LDP X22, X21, [X31 + 0x10]
	0x03A6EACC MOV X1, X31
	0x03A6EAD0 MOV X2, X31
	0x03A6EAD4 LDP X30, X23, [X31], #0x30
	0x03A6EAD8 B 0x3C354F8
	0x03A6EADC STR X30, [X31 - 0x20]!
	0x03A6EAE0 STP X20, X19, [X31 + 0x10]
	0x03A6EAE4 ADRP X20, 0x974000
	0x03A6EAE8 LDRB W8, [X20 + 0x28F]
	0x03A6EAEC MOV X19, X0
	0x03A6EAF0 TBNZ X8, 0x0, 0x3A6EB08
	0x03A6EAF4 ADRP X0, 0x6AD000
	0x03A6EAF8 LDR X0, [X0 + 0x8F8]
	0x03A6EAFC BL 0x1C16CF4
	0x03A6EB00 MOVZ W8, 0x1
	0x03A6EB04 STRB W8, [X20 + 0x28F]
	0x03A6EB08 ADRP X20, 0x6AD000
	0x03A6EB0C LDR X8, [X19 + 0x38]
	0x03A6EB10 LDR X20, [X20 + 0x8F8]
	0x03A6EB14 CBZ X8, 0x3A6EB28
	0x03A6EB18 LDR X0, [X8 + 0xF0]
	0x03A6EB1C CBZ X0, 0x3A6EB28
	0x03A6EB20 MOV X1, X31

ISIL:
	001 Subtract X31, X31, 336
	002 Move [X31+240], X29
	003 Move [X31+248], X30
	004 Move [X31+256], X28
	005 Move [X31+264], X27
	006 Move [X31+272], X26
	007 Move [X31+280], X25
	008 Move [X31+288], X24
	009 Move [X31+296], X23
	010 Move [X31+304], X22
	011 Move [X31+312], X21
	012 Move [X31+320], X20
	013 Move [X31+328], X19
	014 Move X20, 0x975000
	015 Move X23, 0x686000
	016 Move W8, [X20+648]
	017 Move X23, [X23+1432]
	018 Move X22, X2
	019 Move X19, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {50}
	024 Move X0, 0x6AE000
	025 Move X0, [X0+2296]
	026 Call 0x1C17CF4
	027 Move X0, 0x686000
	028 Move X0, [X0+2600]
	029 Call 0x1C17CF4
	030 Move X0, 0x686000
	031 Move X0, [X0+2512]
	032 Call 0x1C17CF4
	033 Move X0, 0x686000
	034 Move X0, [X0+1432]
	035 Call 0x1C17CF4
	036 Move X0, 0x6E8000
	037 Move X0, [X0+3856]
	038 Call 0x1C17CF4
	039 Move X0, 0x6E9000
	040 Move X0, [X0+2976]
	041 Call 0x1C17CF4
	042 Move X0, 0x6E9000
	043 Move X0, [X0+2984]
	044 Call 0x1C17CF4
	045 Move X0, 0x6E9000
	046 Move X0, [X0+2992]
	047 Call 0x1C17CF4
	048 Move W8, 1
	049 Move [X20+648], W8
	050 Move [X31+224], W31
	051 Move [X31+208], X31
	052 Move [X31+216], X31
	053 Move [X31+200], X31
	054 Move X21, X19
	055 Add X21, X21, 248
	056 Move X20, [X21]
	057 Move X0, [X23]
	058 Move W8, [X0+224]
	059 Compare W8, 0
	060 JumpIfNotEqual {62}
	061 Call 0x1C17DFC
	062 Move X0, X20
	063 Move X1, X31
	064 Move X2, X31
	065 Call Object.op_Equality, X0, X1
	066 Move TEMP, X0
	067 And TEMP, TEMP, 1
	068 Compare TEMP, 1
	069 JumpIfNotEqual {113}
	070 Move X8, 0x686000
	071 Move X8, [X8+2512]
	072 Move W1, 1
	073 Move X0, [X8]
	074 Call 0x1C17D6C
	075 Move X20, X0
	076 Move X0, X19
	077 Move X1, X31
	078 Call "il2cpp_vm_object_is_inst", X0
	079 Compare X0, 0
	080 JumpIfEqual {366}
	081 Move X8, [X0]
	082 Move X9, [X8+424]
	083 Move X1, [X8+432]
	084 NotImplemented "Instruction BLR not yet implemented."
	085 Compare X20, 0
	086 JumpIfEqual {366}
	087 Move X19, X0
	088 Compare X0, 0
	089 JumpIfEqual {96}
	090 Move X8, [X20]
	091 Move X0, X19
	092 Move X1, [X8+64]
	093 Call 0x1C17E00
	094 Compare X0, 0
	095 JumpIfEqual {379}
	096 Move W8, [X20+24]
	097 Compare W8, 0
	098 JumpIfEqual {369}
	099 Move [X20+32], X19
	100 Move X8, 0x686000
	101 Move X8, [X8+2600]
	102 Move X0, [X8]
	103 Move W8, [X0+224]
	104 Compare W8, 0
	105 JumpIfNotEqual {107}
	106 Call 0x1C17DFC
	107 Move X8, 0x6E9000
	108 Move X8, [X8+2976]
	109 Move X1, X20
	110 Move X2, X31
	111 Move X0, [X8]
	112 Call Debug.LogErrorFormat, X0, X1
	113 Move X23, [X22]
	114 Add X0, X31, 224
	115 Move X3, X31
	116 Move [X31+232], X23
	117 Move X2, [X19+320]
	118 Move X1, X23
	119 Call ProfilingScope..ctor, X0, X1, X2
	120 Move X8, [X19+392]
	121 Compare X8, 0
	122 JumpIfEqual {367}
	123 Move W8, [X8+21]
	124 Compare W8, 0
	125 JumpIfNotEqual {140}
	126 Move X8, 0x6AE000
	127 Move X8, [X8+2296]
	128 Move X0, [X8]
	129 Move W8, [X0+224]
	130 Compare W8, 0
	131 JumpIfNotEqual {133}
	132 Call 0x1C17DFC
	133 Move X8, 0x6E9000
	134 Move X8, [X8+2984]
	135 Move X1, [X8]
	136 Move W2, 1
	137 Move X0, X23
	138 Move X3, X31
	139 Call CoreUtils.SetKeyword, X0, X1, X2
	140 Move W8, [X19+384]
	141 Move V1, [X19+352]
	142 Move V0, [X19+368]
	143 Move V2, [X19+21]
	144 Move [X31+192], W8
	145 Move [X31+160], V1
	146 Move [X31+168], V0
	147 Move [X31+9], V2
	148 Add X1, X31, 144
	149 Move X0, X23
	150 Call PostProcessUtils.SetSourceSize, X0, X1
	151 Move X8, [X19+296]
	152 Compare X8, 0
	153 JumpIfEqual {368}
	154 Move W9, [X8+24]
	155 NotImplemented "Instruction CMP not yet implemented."
	156 Move X0, [X8+56]
	157 Add X8, X31, 56
	158 Move X1, X31
	159 Call RTHandle.op_Implicit, X0
	160 NotImplemented "Instruction LDUR not yet implemented."
	161 NotImplemented "Instruction LDUR not yet implemented."
	162 Move X8, [X31+88]
	163 Move [X31+96], V0
	164 Move [X31+104], V1
	165 Move [X31+128], X8
	166 Compare X23, 0
	167 JumpIfEqual {371}
	168 Move X8, 0x6E9000
	169 Move X8, [X8+2992]
	170 Move V0, [X31+96]
	171 Move V1, [X31+112]
	172 Move X9, [X31+128]
	173 Move X1, [X8]
	174 Move [X31+16], V0
	175 Move [X31+24], V1
	176 Move [X31+48], X9
	177 Add X2, X31, 16
	178 Move X0, X23
	179 Move X3, X31
	180 Call CommandBuffer.SetGlobalTexture, X0, X1, X2
	181 Move X0, [X22+400]
	182 Compare X0, 0
	183 JumpIfEqual {372}
	184 Move X1, X31
	185 Call XRPass.get_supportsFoveatedRendering, X0
	186 Move TEMP, X0
	187 And TEMP, TEMP, 1
	188 Compare TEMP, 1
	189 JumpIfNotEqual {203}
	190 Move X8, [X19+392]
	191 Compare X8, 0
	192 JumpIfEqual {382}
	193 Move W8, [X8+20]
	194 Compare W8, 0
	195 JumpIfNotEqual {199}
	196 Move X0, X31
	197 Call SystemInfo.get_foveatedRenderingCaps
	198 NotImplemented "Instruction CMP not yet implemented."
	199 Move X0, X23
	200 Move W1, W31
	201 Move X2, X31
	202 Call CommandBuffer.SetFoveatedRenderingMode, X0, X1
	203 Move W22, [X19+304]
	204 NotImplemented "Instruction CMP not yet implemented."
	205 Move X22, 0x6E8000
	206 Move X22, [X22+3856]
	207 Move X0, [X22]
	208 Move W8, [X0+224]
	209 Compare W8, 0
	210 JumpIfNotEqual {213}
	211 Call 0x1C17DFC
	212 Move X0, [X22]
	213 Move X8, [X0+184]
	214 Move W1, [X8+12]
	215 Move W2, 1
	216 Move X0, X23
	217 Move X3, X31
	218 Call CommandBuffer.SetGlobalInt, X0, X1, X2
	219 Move X8, [X22]
	220 Move X8, [X8+184]
	221 Move W1, [X8+36]
	222 Move S0, W31
	223 Move X0, X23
	224 Move X2, X31
	225 Call CommandBuffer.SetGlobalFloat, X0, X1, V0
	226 Move W22, [X19+304]
	227 Move X8, [X19+392]
	228 Compare X8, 0
	229 JumpIfEqual {373}
	230 Move X24, 0x6E8000
	231 Move X24, [X24+3856]
	232 Move W20, [X8+21]
	233 Move X0, [X24]
	234 Move W9, [X0+224]
	235 Compare W9, 0
	236 JumpIfNotEqual {238}
	237 Call 0x1C17DFC
	238 NotImplemented "Instruction CMP not yet implemented."
	239 NotImplemented "Instruction CSET not yet implemented."
	240 Add X2, X31, 216
	241 Add X3, X31, 208
	242 Move W0, W22
	243 Call ScreenSpaceAmbientOcclusionPass.GetPassOrder, X0, X1, X2, X3
	244 Move X0, [X19+328]
	245 Compare X0, 0
	246 JumpIfEqual {374}
	247 Move X1, X31
	248 Call ScriptableRenderer.get_cameraDepthTargetHandle, X0
	249 Move [X31+200], X0
	250 Move X8, [X19+296]
	251 Compare X8, 0
	252 JumpIfEqual {375}
	253 Move W9, [X8+24]
	254 Compare W9, 0
	255 JumpIfEqual {376}
	256 Add X22, X19, 328
	257 Add X5, X8, 32
	258 Add X0, X31, 232
	259 Add X4, X31, 200
	260 Move X2, X22
	261 Move X3, X21
	262 Move W6, W31
	263 Call ScreenSpaceAmbientOcclusionPass.RenderAndSetBaseMap, X0, X1, X2, X3, X4, X5, X6
	264 Move X25, [X31+208]
	265 Move [X31+8], X23
	266 Compare X25, 0
	267 JumpIfEqual {377}
	268 Move X26, [X31+216]
	269 Move W27, 1
	270 Move W9, [X25+24]
	271 Subtract W8, W27, 1
	272 NotImplemented "Instruction CMP not yet implemented."
	273 Compare X26, 0
	274 JumpIfEqual {359}
	275 Move W11, [X26+24]
	276 NotImplemented "Instruction CMP not yet implemented."
	277 Add W10, W8, 1
	278 NotImplemented "Instruction CMP not yet implemented."
	279 Move X28, [X19+296]
	280 Compare X28, 0
	281 JumpIfEqual {360}
	282 Subtract W10, W10, 1
	283 NotImplemented "Instruction CMP not yet implemented."
	284 Move X0, [X24]
	285 Move X8, W8
	286 Add X9, X26, W27
	287 Add X10, X26, X8
	288 Add X8, X25, X8
	289 NotImplemented "Instruction LDRSW not yet implemented."
	290 NotImplemented "Instruction LDRSW not yet implemented."
	291 Move W9, [X0+224]
	292 Move W23, [X8+32]
	293 Compare W9, 0
	294 JumpIfNotEqual {296}
	295 Call 0x1C17DFC
	296 Move W8, [X28+24]
	297 NotImplemented "Instruction CMP not yet implemented."
	298 NotImplemented "Instruction CMP not yet implemented."
	299 Add W27, W27, 1
	300 Add X8, X28, 32
	301 Add X4, X8, X20
	302 Add X5, X8, X29
	303 Add X0, X31, 232
	304 Move X2, X22
	305 Move X3, X21
	306 Move W6, W23
	307 Call ScreenSpaceAmbientOcclusionPass.RenderAndSetBaseMap, X0, X1, X2, X3, X4, X5, X6
	308 Move X0, [X24]
	309 Move W8, [X0+224]
	310 Compare W8, 0
	311 JumpIfNotEqual {313}
	312 Call 0x1C17DFC
	313 Move X8, [X19+392]
	314 Move X0, [X31+8]
	315 Compare X8, 0
	316 JumpIfEqual {378}
	317 Move X9, [X24]
	318 Move V3, [X8+36]
	319 Move X9, [X9+184]
	320 Move W1, [X9]
	321 Move S0, 1
	322 Move S1, W31
	323 Move S2, W31
	324 Move X2, X31
	325 Call CommandBuffer.SetGlobalVector, X0, X1, X2
	326 Add X0, X31, 224
	327 Move X1, X31
	328 Call ProfilingScope.Dispose, X0
	329 Move X20, [X31+320]
	330 Move X19, [X31+328]
	331 Move X22, [X31+304]
	332 Move X21, [X31+312]
	333 Move X24, [X31+288]
	334 Move X23, [X31+296]
	335 Move X26, [X31+272]
	336 Move X25, [X31+280]
	337 Move X28, [X31+256]
	338 Move X27, [X31+264]
	339 Move X29, [X31+240]
	340 Move X30, [X31+248]
	341 Add X31, X31, 336
	342 Return 
	343 Move X0, X31
	344 Call SystemInfo.get_foveatedRenderingCaps
	345 NotImplemented "Instruction CMP not yet implemented."
	346 Move X8, [X19+392]
	347 Compare X8, 0
	348 JumpIfEqual {383}
	349 Move W8, [X8+24]
	350 Compare W8, 0
	351 JumpIfEqual {199}
	352 Move X0, X31
	353 Call SystemInfo.get_foveatedRenderingCaps
	354 NotImplemented "Instruction CMP not yet implemented."
	355 Move W1, 1
	356 Move X0, X23
	357 Move X2, X31
	358 Call CommandBuffer.SetFoveatedRenderingMode, X0, X1
	359 Call 0x1C17F20
	360 Call 0x1C17F20
	361 Call 0x1C17F28
	362 Call 0x1C17F28
	363 Call 0x1C17F28
	364 Call 0x1C17F28
	365 Call 0x1C17F28
	366 Call 0x1C17F20
	367 Call 0x1C17F20
	368 Call 0x1C17F20
	369 Call 0x1C17F28
	370 Call 0x1C17F28
	371 Call 0x1C17F20
	372 Call 0x1C17F20
	373 Call 0x1C17F20
	374 Call 0x1C17F20
	375 Call 0x1C17F20
	376 Call 0x1C17F28
	377 Call 0x1C17F20
	378 Call 0x1C17F20
	379 Call 0x1C17F44
	380 Move X1, X31
	381 Call 0x1C17DEC
	382 Call 0x1C17F20
	383 Call 0x1C17F20
	384 Move X19, X0
	385 NotImplemented "Instruction CMP not yet implemented."
	386 Move X0, X19
	387 Call 0x3EB2AD0
	388 Move X20, [X0]
	389 Call 0x3EB2AE0
	390 Add X0, X31, 224
	391 Move X1, X31
	392 Call ProfilingScope.Dispose, X0
	393 Compare X20, 0
	394 JumpIfEqual {329}
	395 Move X0, X20
	396 Call 0x1C17F18
	397 Move X20, X31
	398 Move X19, X0
	399 Add X0, X31, 224
	400 Move X1, X31
	401 Call ProfilingScope.Dispose, X0
	402 Compare X20, 0
	403 JumpIfNotEqual {406}
	404 Move X0, X19
	405 Call 0x1D2D690
	406 Move X0, X20
	407 Call 0x1C17F18
	408 Call 0x1991590

Method: System.Void RenderAndSetBaseMap(ref UnityEngine.Rendering.CommandBuffer cmd, ref UnityEngine.Rendering.Universal.RenderingData renderingData, ref UnityEngine.Rendering.Universal.ScriptableRenderer renderer, ref UnityEngine.Material mat, ref UnityEngine.Rendering.RTHandle baseMap, ref UnityEngine.Rendering.RTHandle target, UnityEngine.Rendering.Universal.ScreenSpaceAmbientOcclusion/ScreenSpaceAmbientOcclusionPass/ShaderPasses pass)

Disassembly:
	0x03A6ECB4 MOVZ W5, 0x1
	0x03A6ECB8 MOV X0, X21
	0x03A6ECBC MOV W2, W31
	0x03A6ECC0 MOV W4, W31
	0x03A6ECC4 BL 0x3A6D184
	0x03A6ECC8 LDR X8, [X21]
	0x03A6ECCC CBZ X8, 0x3A6ED50
	0x03A6ECD0 LDR X9, [X8 + 0x48]
	0x03A6ECD4 LDUR V0, [X8 + 0x38]
	0x03A6ECD8 LDUR V1, [X8 + 0x28]
	0x03A6ECDC LDR X1, [X8 + 0x58]
	0x03A6ECE0 STR X9, [X31 + 0x50]
	0x03A6ECE4 STP V1, V0, [X31 + 0x30]
	0x03A6ECE8 CBZ X20, 0x3A6ED50
	0x03A6ECEC LDP V0, V1, [X31 + 0x30]
	0x03A6ECF0 LDR X8, [X31 + 0x50]
	0x03A6ECF4 ADD X2, X31, 0x0
	0x03A6ECF8 MOV X0, X20
	0x03A6ECFC MOV X3, X31
	0x03A6ED00 STP V0, V1, [X31]
	0x03A6ED04 STR X8, [X31 + 0x20]
	0x03A6ED08 BL 0x3C4FC28
	0x03A6ED0C LDR X1, [X19 + 0xF0]
	0x03A6ED10 MOV X0, X19
	0x03A6ED14 MOV X2, X31
	0x03A6ED18 BL 0x3A440A4
	0x03A6ED1C FMOV S0, 1
	0x03A6ED20 FMOV S1, 1
	0x03A6ED24 FMOV S2, 1
	0x03A6ED28 FMOV S3, 1
	0x03A6ED2C MOV X0, X19
	0x03A6ED30 MOV W1, W31
	0x03A6ED34 MOV X2, X31
	0x03A6ED38 BL 0x3A44510
	0x03A6ED3C LDP X20, X19, [X31 + 0xC0]
	0x03A6ED40 LDP X22, X21, [X31 + 0xB0]
	0x03A6ED44 LDP X30, X23, [X31 + 0xA0]
	0x03A6ED48 ADD X31, X31, 0xD0
	0x03A6ED4C RET
	0x03A6ED50 BL 0x1C16F20
	0x03A6ED54 SUB X31, X31, 0x40
	0x03A6ED58 STR X30, [X31 + 0x10]
	0x03A6ED5C STP X22, X21, [X31 + 0x20]
	0x03A6ED60 STP X20, X19, [X31 + 0x30]
	0x03A6ED64 ADRP X21, 0x974000
	0x03A6ED68 ADRP X22, 0x6E6000
	0x03A6ED6C LDRB W8, [X21 + 0x2AA]
	0x03A6ED70 LDR X22, [X22 + 0x10]
	0x03A6ED74 MOV W20, W1
	0x03A6ED78 MOV W19, W0
	0x03A6ED7C TBNZ X8, 0x0, 0x3A6EDDC
	0x03A6ED80 ADRP X0, 0x6E8000
	0x03A6ED84 LDR X0, [X0 + 0xC80]
	0x03A6ED88 BL 0x1C16CF4
	0x03A6ED8C ADRP X0, 0x6E8000
	0x03A6ED90 LDR X0, [X0 + 0xC88]
	0x03A6ED94 BL 0x1C16CF4
	0x03A6ED98 ADRP X0, 0x6E8000
	0x03A6ED9C LDR X0, [X0 + 0xC90]
	0x03A6EDA0 BL 0x1C16CF4
	0x03A6EDA4 ADRP X0, 0x6E8000
	0x03A6EDA8 LDR X0, [X0 + 0xC98]
	0x03A6EDAC BL 0x1C16CF4
	0x03A6EDB0 ADRP X0, 0x6E8000
	0x03A6EDB4 LDR X0, [X0 + 0xCA0]
	0x03A6EDB8 BL 0x1C16CF4
	0x03A6EDBC ADRP X0, 0x6E8000
	0x03A6EDC0 LDR X0, [X0 + 0xCA8]
	0x03A6EDC4 BL 0x1C16CF4
	0x03A6EDC8 ADRP X0, 0x6E6000
	0x03A6EDCC LDR X0, [X0 + 0x10]
	0x03A6EDD0 BL 0x1C16CF4
	0x03A6EDD4 MOVZ W8, 0x1
	0x03A6EDD8 STRB W8, [X21 + 0x2AA]
	0x03A6EDDC LDR X0, [X22]
	0x03A6EDE0 STR X31, [X31 + 0x8]
	0x03A6EDE4 STRB W31, [X31 + 0x1C]
	0x03A6EDE8 LDR W8, [X0 + 0xE0]
	0x03A6EDEC CBNZ W8, 0x3A6EDF8
	0x03A6EDF0 BL 0x1C16DFC
	0x03A6EDF4 LDR X0, [X22]
	0x03A6EDF8 LDR X8, [X0 + 0xB8]
	0x03A6EDFC LDR X0, [X8 + 0x98]
	0x03A6EE00 CBZ X0, 0x3A6EF30
	0x03A6EE04 ADRP X8, 0x6E8000
	0x03A6EE08 LDR X8, [X8 + 0xC98]
	0x03A6EE0C ADD X2, X31, 0x8
	0x03A6EE10 MOV W1, W19
	0x03A6EE14 LDR X3, [X8]
	0x03A6EE18 BL 0x2A46818
	0x03A6EE1C TBZ X0, 0x0, 0x3A6EE80
	0x03A6EE20 LDR X0, [X31 + 0x8]
	0x03A6EE24 CBZ X0, 0x3A6EF30
	0x03A6EE28 ADRP X8, 0x6E8000
	0x03A6EE2C LDR X8, [X8 + 0xC90]
	0x03A6EE30 ADD X2, X31, 0x1C
	0x03A6EE34 MOV W1, W20
	0x03A6EE38 LDR X3, [X8]
	0x03A6EE3C BL 0x2A37588
	0x03A6EE40 TBNZ X0, 0x0, 0x3A6EF18
	0x03A6EE44 MOV W0, W19
	0x03A6EE48 MOV W1, W20
	0x03A6EE4C MOV X2, X31
	0x03A6EE50 BL 0x3C3C4BC
	0x03A6EE54 LDR X8, [X31 + 0x8]
	0x03A6EE58 AND W2, W0, 0x1
	0x03A6EE5C STRB W2, [X31 + 0x1C]
	0x03A6EE60 CBZ X8, 0x3A6EF30
	0x03A6EE64 ADRP X9, 0x6E8000
	0x03A6EE68 LDR X9, [X9 + 0xC88]
	0x03A6EE6C MOV X0, X8
	0x03A6EE70 MOV W1, W20
	0x03A6EE74 LDR X3, [X9]
	0x03A6EE78 BL 0x2A35C68
	0x03A6EE7C B 0x3A6EF18
	0x03A6EE80 ADRP X8, 0x6E8000
	0x03A6EE84 LDR X8, [X8 + 0xCA8]
	0x03A6EE88 LDR X0, [X8]
	0x03A6EE8C BL 0x1C16F10
	0x03A6EE90 ADRP X8, 0x6E8000
	0x03A6EE94 LDR X8, [X8 + 0xCA0]
	0x03A6EE98 MOV X21, X0
	0x03A6EE9C LDR X1, [X8]
	0x03A6EEA0 BL 0x2A353AC
	0x03A6EEA4 MOV W0, W19
	0x03A6EEA8 MOV W1, W20
	0x03A6EEAC MOV X2, X31
	0x03A6EEB0 STR X21, [X31 + 0x8]
	0x03A6EEB4 BL 0x3C3C4BC
	0x03A6EEB8 LDR X8, [X31 + 0x8]
	0x03A6EEBC AND W2, W0, 0x1
	0x03A6EEC0 STRB W2, [X31 + 0x1C]
	0x03A6EEC4 CBZ X8, 0x3A6EF30
	0x03A6EEC8 ADRP X9, 0x6E8000
	0x03A6EECC LDR X9, [X9 + 0xC88]
	0x03A6EED0 MOV X0, X8
	0x03A6EED4 MOV W1, W20
	0x03A6EED8 LDR X3, [X9]
	0x03A6EEDC BL 0x2A35C68
	0x03A6EEE0 LDR X0, [X22]
	0x03A6EEE4 LDR W8, [X0 + 0xE0]
	0x03A6EEE8 CBNZ W8, 0x3A6EEF4
	0x03A6EEEC BL 0x1C16DFC
	0x03A6EEF0 LDR X0, [X22]
	0x03A6EEF4 LDR X8, [X0 + 0xB8]
	0x03A6EEF8 LDR X0, [X8 + 0x98]
	0x03A6EEFC CBZ X0, 0x3A6EF30
	0x03A6EF00 ADRP X8, 0x6E8000
	0x03A6EF04 LDR X2, [X31 + 0x8]
	0x03A6EF08 LDR X8, [X8 + 0xC80]
	0x03A6EF0C MOV W1, W19
	0x03A6EF10 LDR X3, [X8]
	0x03A6EF14 BL 0x2A44E18
	0x03A6EF18 LDRB W0, [X31 + 0x1C]
	0x03A6EF1C LDP X20, X19, [X31 + 0x30]
	0x03A6EF20 LDP X22, X21, [X31 + 0x20]
	0x03A6EF24 LDR X30, [X31 + 0x10]
	0x03A6EF28 ADD X31, X31, 0x40
	0x03A6EF2C RET
	0x03A6EF30 BL 0x1C16F20
	0x03A6EF34 STR X30, [X31 - 0x30]!
	0x03A6EF38 STP X22, X21, [X31 + 0x10]
	0x03A6EF3C STP X20, X19, [X31 + 0x20]
	0x03A6EF40 ADRP X22, 0x974000
	0x03A6EF44 ADRP X21, 0x685000
	0x03A6EF48 LDRB W8, [X22 + 0x295]
	0x03A6EF4C LDR X21, [X21 + 0x598]
	0x03A6EF50 MOV X20, X2
	0x03A6EF54 MOV X19, X0
	0x03A6EF58 TBNZ X8, 0x0, 0x3A6EFDC
	0x03A6EF5C ADRP X0, 0x6E4000
	0x03A6EF60 LDR X0, [X0 + 0xE28]
	0x03A6EF64 BL 0x1C16CF4
	0x03A6EF68 ADRP X0, 0x6AD000
	0x03A6EF6C LDR X0, [X0 + 0x8F8]
	0x03A6EF70 BL 0x1C16CF4
	0x03A6EF74 ADRP X0, 0x685000
	0x03A6EF78 LDR X0, [X0 + 0xA28]
	0x03A6EF7C BL 0x1C16CF4
	0x03A6EF80 ADRP X0, 0x685000
	0x03A6EF84 LDR X0, [X0 + 0x9D0]
	0x03A6EF88 BL 0x1C16CF4
	0x03A6EF8C ADRP X0, 0x685000
	0x03A6EF90 LDR X0, [X0 + 0x598]
	0x03A6EF94 BL 0x1C16CF4
	0x03A6EF98 ADRP X0, 0x6E8000
	0x03A6EF9C LDR X0, [X0 + 0xC50]
	0x03A6EFA0 BL 0x1C16CF4
	0x03A6EFA4 ADRP X0, 0x6E8000
	0x03A6EFA8 LDR X0, [X0 + 0xCB0]

ISIL:
	001 Subtract X31, X31, 192
	002 Move [X31+96], D9
	003 Move [X31+104], D8
	004 Move [X31+112], X30
	005 Move [X31+128], X26
	006 Move [X31+136], X25
	007 Move [X31+144], X24
	008 Move [X31+152], X23
	009 Move [X31+160], X22
	010 Move [X31+168], X21
	011 Move [X31+176], X20
	012 Move [X31+184], X19
	013 Move X25, 0x975000
	014 Move X26, 0x6E8000
	015 Move W8, [X25+649]
	016 Move X26, [X26+3856]
	017 Move W19, W6
	018 Move X23, X5
	019 Move X21, X4
	020 Move X20, X3
	021 Move X24, X2
	022 Move X22, X0
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {41}
	027 Move X0, 0x6E5000
	028 Move X0, [X0+3624]
	029 Call 0x1C17CF4
	030 Move X0, 0x6AE000
	031 Move X0, [X0+2296]
	032 Call 0x1C17CF4
	033 Move X0, 0x686000
	034 Move X0, [X0+1432]
	035 Call 0x1C17CF4
	036 Move X0, 0x6E8000
	037 Move X0, [X0+3856]
	038 Call 0x1C17CF4
	039 Move W8, 1
	040 Move [X25+649], W8
	041 Move X0, [X26]
	042 Move W8, [X0+224]
	043 Compare W8, 0
	044 JumpIfNotEqual {46}
	045 Call 0x1C17DFC
	046 Move X25, 0x6E5000
	047 Move X25, [X25+3624]
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Move W8, 1
	050 NotImplemented "Instruction LSLV not yet implemented."
	051 Move W9, 656
	052 And W31, W8, W9
	053 Move X0, [X24]
	054 Compare X0, 0
	055 JumpIfEqual {236}
	056 Move X22, [X22]
	057 Move X21, [X21]
	058 Move X1, X31
	059 Call ScriptableRenderer.get_cameraColorTargetHandle, X0
	060 Move X8, [X25]
	061 Move X20, [X20]
	062 Move X23, X0
	063 Move W9, [X8+224]
	064 Compare W9, 0
	065 JumpIfNotEqual {68}
	066 Move X0, X8
	067 Call 0x1C17DFC
	068 Move X0, X22
	069 Move X1, X21
	070 Move X2, X23
	071 Move X5, X20
	072 Move W6, W19
	073 Move X20, [X31+176]
	074 Move X19, [X31+184]
	075 Move X22, [X31+160]
	076 Move X21, [X31+168]
	077 Move X24, [X31+144]
	078 Move X23, [X31+152]
	079 Move X26, [X31+128]
	080 Move X25, [X31+136]
	081 Move X30, [X31+112]
	082 Move D9, [X31+96]
	083 Move D8, [X31+104]
	084 Move W3, W31
	085 Move W4, W31
	086 Move X7, X31
	087 Add X31, X31, 192
	088 Call Blitter.BlitCameraTexture, X0, X1, X2, X3, X4, X5, X6
	089 Return 
	090 Move X8, [X21]
	091 Compare X8, 0
	092 JumpIfEqual {236}
	093 Move X9, 0x686000
	094 Move X9, [X9+1432]
	095 Move X24, [X8+24]
	096 Move X0, [X9]
	097 Move W9, [X0+224]
	098 Compare W9, 0
	099 JumpIfNotEqual {101}
	100 Call 0x1C17DFC
	101 Move X0, X24
	102 Move X1, X31
	103 Move X2, X31
	104 Call Object.op_Equality, X0, X1
	105 Move TEMP, X0
	106 And TEMP, TEMP, 1
	107 Compare TEMP, 1
	108 JumpIfNotEqual {126}
	109 Move X0, [X21]
	110 Compare X0, 0
	111 JumpIfEqual {236}
	112 Move W8, [X0+168]
	113 Compare W8, 0
	114 JumpIfEqual {155}
	115 Add X8, X31, 48
	116 Move X1, X31
	117 Call RTHandle.get_rtHandleProperties, X0
	118 Move X0, [X21]
	119 Compare X0, 0
	120 JumpIfEqual {236}
	121 Move V8, [X31+80]
	122 Add X8, X31, 48
	123 Move X1, X31
	124 Call RTHandle.get_rtHandleProperties, X0
	125 Move V9, [X31+84]
	126 Move X0, [X25]
	127 Move X24, [X22]
	128 Move X22, [X21]
	129 Move X21, [X23]
	130 Move W8, [X0+224]
	131 Move X20, [X20]
	132 Compare W8, 0
	133 JumpIfNotEqual {135}
	134 Call 0x1C17DFC
	135 Move X0, X24
	136 Move X1, X22
	137 Move X2, X21
	138 Move X3, X20
	139 Move W4, W19
	140 Move X20, [X31+176]
	141 Move X19, [X31+184]
	142 Move X22, [X31+160]
	143 Move X21, [X31+168]
	144 Move X24, [X31+144]
	145 Move X23, [X31+152]
	146 Move X26, [X31+128]
	147 Move X25, [X31+136]
	148 Move X30, [X31+112]
	149 Move D9, [X31+96]
	150 Move D8, [X31+104]
	151 Move X5, X31
	152 Add X31, X31, 192
	153 Call Blitter.BlitCameraTexture, X0, X1, X2, X3, X4
	154 Return 
	155 Move X24, 0x974000
	156 Move W8, [X24+2632]
	157 Compare W8, 0
	158 JumpIfNotEqual {164}
	159 Move X0, 0x68E000
	160 Move X0, [X0+3848]
	161 Call 0x1C17CF4
	162 Move W8, 1
	163 Move [X24+2632], W8
	164 Move X8, 0x68E000
	165 Move X8, [X8+3848]
	166 Move X8, [X8]
	167 Move X8, [X8+184]
	168 Move S8, [X8+8]
	169 Move S9, [X8+12]
	170 Move X8, 0x6AE000
	171 Move X8, [X8+2296]
	172 Move X24, [X22]
	173 Move X23, [X23]
	174 Move X0, [X8]
	175 Move W8, [X0+224]
	176 Compare W8, 0
	177 JumpIfNotEqual {179}
	178 Call 0x1C17DFC
	179 Move TEMP, 0
	180 Not TEMP
	181 Move W4, TEMP
	182 Move TEMP, 0
	183 Not TEMP
	184 Move W5, TEMP
	185 Move X0, X24
	186 Move X1, X23
	187 Move W2, W31
	188 Move W3, W31
	189 Move X6, X31
	190 Call CoreUtils.SetRenderTarget, X0, X1, X2, X3, X4, X5
	191 Move X8, [X21]
	192 Compare X8, 0
	193 JumpIfEqual {236}
	194 Move X9, [X8+72]
	195 NotImplemented "Instruction LDUR not yet implemented."
	196 NotImplemented "Instruction LDUR not yet implemented."
	197 Move X0, [X25]
	198 Move X21, [X22]
	199 Move [X31+80], X9
	200 Move [X31+48], V1
	201 Move [X31+56], V0
	202 Move W8, [X0+224]
	203 Move X20, [X20]
	204 Compare W8, 0
	205 JumpIfNotEqual {207}
	206 Call 0x1C17DFC
	207 Move V0, [X31+48]
	208 Move V1, [X31+64]
	209 Move X8, [X31+80]
	210 Add X1, X31, 0
	211 Move S2, W31
	212 Move [X31], V0
	213 Move [X31+8], V1
	214 Move S3, W31
	215 Move X0, X21
	216 Move V0, V8
	217 Move V1, V9
	218 Move X2, X20
	219 Move W3, W19
	220 Move X4, X31
	221 Move [X31+32], X8
	222 Call Blitter.BlitTexture, X0, X1, X2, X3, X4
	223 Move X20, [X31+176]
	224 Move X19, [X31+184]
	225 Move X22, [X31+160]
	226 Move X21, [X31+168]
	227 Move X24, [X31+144]
	228 Move X23, [X31+152]
	229 Move X26, [X31+128]
	230 Move X25, [X31+136]
	231 Move X30, [X31+112]
	232 Move D9, [X31+96]
	233 Move D8, [X31+104]
	234 Add X31, X31, 192
	235 Return 
	236 Call 0x1C17F20

Method: System.Void GetPassOrder(UnityEngine.Rendering.Universal.ScreenSpaceAmbientOcclusion/ScreenSpaceAmbientOcclusionPass/BlurTypes blurType, System.Boolean isAfterOpaque, out System.Int32[] textureIndices, out UnityEngine.Rendering.Universal.ScreenSpaceAmbientOcclusion/ScreenSpaceAmbientOcclusionPass/ShaderPasses[] shaderPasses)

Disassembly:
	0x03A6EB24 BL 0x39D4B1C
	0x03A6EB28 STR X31, [X19 + 0x38]
	0x03A6EB2C LDR X0, [X20]
	0x03A6EB30 LDR X19, [X19 + 0x30]
	0x03A6EB34 LDR W8, [X0 + 0xE0]
	0x03A6EB38 CBNZ W8, 0x3A6EB40
	0x03A6EB3C BL 0x1C16DFC
	0x03A6EB40 MOV X0, X19
	0x03A6EB44 LDP X20, X19, [X31 + 0x10]
	0x03A6EB48 MOV X1, X31
	0x03A6EB4C LDR X30, [X31], #0x20
	0x03A6EB50 B 0x39E1DF8
	0x03A6EB54 LDR X0, [X0 + 0xF0]
	0x03A6EB58 CBZ X0, 0x3A6EB64
	0x03A6EB5C MOV X1, X31
	0x03A6EB60 B 0x39D4B1C
	0x03A6EB64 RET
	0x03A6EB68 STP X30, X21, [X31 - 0x20]!
	0x03A6EB6C STP X20, X19, [X31 + 0x10]
	0x03A6EB70 ADRP X20, 0x974000
	0x03A6EB74 ADRP X21, 0x6E8000
	0x03A6EB78 LDRB W8, [X20 + 0x291]
	0x03A6EB7C LDR X21, [X21 + 0xC60]
	0x03A6EB80 MOV X19, X0
	0x03A6EB84 TBNZ X8, 0x0, 0x3A6EB9C
	0x03A6EB88 ADRP X0, 0x6E8000
	0x03A6EB8C LDR X0, [X0 + 0xC60]
	0x03A6EB90 BL 0x1C16CF4
	0x03A6EB94 MOVZ W8, 0x1
	0x03A6EB98 STRB W8, [X20 + 0x291]
	0x03A6EB9C LDR X0, [X21]
	0x03A6EBA0 BL 0x1C16F10
	0x03A6EBA4 MOV X1, X31
	0x03A6EBA8 MOV X20, X0
	0x03A6EBAC BL 0x33BDD8C
	0x03A6EBB0 MOVZ W8, 0x1
	0x03A6EBB4 STR X20, [X19 + 0x28]
	0x03A6EBB8 STRB W8, [X19 + 0x18]
	0x03A6EBBC MOV X0, X19
	0x03A6EBC0 LDP X20, X19, [X31 + 0x10]
	0x03A6EBC4 MOV X1, X31
	0x03A6EBC8 LDP X30, X21, [X31], #0x20
	0x03A6EBCC B 0x3C36D2C
	0x03A6EBD0 SUB X31, X31, 0xD0
	0x03A6EBD4 STP X30, X23, [X31 + 0xA0]
	0x03A6EBD8 STP X22, X21, [X31 + 0xB0]
	0x03A6EBDC STP X20, X19, [X31 + 0xC0]
	0x03A6EBE0 ADRP X23, 0x974000
	0x03A6EBE4 ADRP X22, 0x6E6000
	0x03A6EBE8 LDRB W8, [X23 + 0x294]
	0x03A6EBEC LDR X22, [X22 + 0x10]
	0x03A6EBF0 MOV X21, X2
	0x03A6EBF4 MOV X20, X1
	0x03A6EBF8 MOV X19, X0
	0x03A6EBFC TBNZ X8, 0x0, 0x3A6EC20
	0x03A6EC00 ADRP X0, 0x6E6000
	0x03A6EC04 LDR X0, [X0 + 0x10]
	0x03A6EC08 BL 0x1C16CF4
	0x03A6EC0C ADRP X0, 0x6E8000
	0x03A6EC10 LDR X0, [X0 + 0xC78]
	0x03A6EC14 BL 0x1C16CF4
	0x03A6EC18 MOVZ W8, 0x1
	0x03A6EC1C STRB W8, [X23 + 0x294]
	0x03A6EC20 LDR W8, [X21 + 0x120]
	0x03A6EC24 LDP V1, V0, [X21 + 0x100]
	0x03A6EC28 LDR V2, [X21 + 0xF]
	0x03A6EC2C ADD X0, X31, 0x60
	0x03A6EC30 MOV W1, W31
	0x03A6EC34 MOV X2, X31
	0x03A6EC38 STR W8, [X31 + 0x90]
	0x03A6EC3C STP V1, V0, [X31 + 0x70]
	0x03A6EC40 STR V2, [X31 + 0x6]
	0x03A6EC44 BL 0x3C22520
	0x03A6EC48 LDR X0, [X22]
	0x03A6EC4C MOVZ W8, 0x1
	0x03A6EC50 STR W8, [X31 + 0x68]
	0x03A6EC54 LDR W8, [X0 + 0xE0]
	0x03A6EC58 CBNZ W8, 0x3A6EC60
	0x03A6EC5C BL 0x1C16DFC
	0x03A6EC60 ADRP X23, 0x6E8000
	0x03A6EC64 LDR X23, [X23 + 0xC78]
	0x03A6EC68 MOVZ W0, 0x5
	0x03A6EC6C MOVZ W1, 0x5
	0x03A6EC70 MOVZ W21, 0x5
	0x03A6EC74 BL 0x3A6ED54
	0x03A6EC78 ANDS W31, W0, 0x1
	0x03A6EC7C MOVZ W8, 0x3B
	0x03A6EC80 CSEL W1, W21, W8, NE
	0x03A6EC84 ADD X0, X31, 0x60
	0x03A6EC88 MOV X2, X31
	0x03A6EC8C BL 0x3C2240C
	0x03A6EC90 LDR X0, [X22]
	0x03A6EC94 ADD X21, X19, 0xF0
	0x03A6EC98 LDR W8, [X0 + 0xE0]
	0x03A6EC9C CBNZ W8, 0x3A6ECA4
	0x03A6ECA0 BL 0x1C16DFC
	0x03A6ECA4 LDR X6, [X23]
	0x03A6ECA8 ADD X1, X31, 0x60
	0x03A6ECAC FMOV S0, W31
	0x03A6ECB0 MOVZ W3, 0x1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x975000
	008 Move W8, [X23+650]
	009 Move X19, X3
	010 Move X21, X2
	011 Move W20, W1
	012 Move W22, W0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0x6E8000
	018 Move X0, [X0+3856]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X23+650], W8
	022 NotImplemented "Instruction CMP not yet implemented."
	023 NotImplemented "Instruction CMP not yet implemented."
	024 Compare W22, 0
	025 JumpIfNotEqual {100}
	026 Move X22, 0x6E8000
	027 Move X22, [X22+3856]
	028 Move X0, [X22]
	029 Move W8, [X0+224]
	030 Compare W8, 0
	031 JumpIfNotEqual {34}
	032 Call 0x1C17DFC
	033 Move X0, [X22]
	034 Move X8, [X0+184]
	035 Move X8, [X8+48]
	036 Move [X21], X8
	037 Move X0, [X22]
	038 Move W8, [X0+224]
	039 Compare W8, 0
	040 JumpIfNotEqual {43}
	041 Call 0x1C17DFC
	042 Move X0, [X22]
	043 Add X8, X0, 184
	044 And W31, W20, 1
	045 Move W9, 56
	046 Move W10, 64
	047 Move X22, 0x6E8000
	048 Move X22, [X22+3856]
	049 Move X0, [X22]
	050 Move W8, [X0+224]
	051 Compare W8, 0
	052 JumpIfNotEqual {55}
	053 Call 0x1C17DFC
	054 Move X0, [X22]
	055 Move X8, [X0+184]
	056 Move X8, [X8+96]
	057 Move [X21], X8
	058 Move X0, [X22]
	059 Move W8, [X0+224]
	060 Compare W8, 0
	061 JumpIfNotEqual {64}
	062 Call 0x1C17DFC
	063 Move X0, [X22]
	064 Add X8, X0, 184
	065 And W31, W20, 1
	066 Move W9, 104
	067 Move W10, 112
	068 Move X22, 0x6E8000
	069 Move X22, [X22+3856]
	070 Move X0, [X22]
	071 Move W8, [X0+224]
	072 Compare W8, 0
	073 JumpIfNotEqual {76}
	074 Call 0x1C17DFC
	075 Move X0, [X22]
	076 Move X8, [X0+184]
	077 Move X8, [X8+72]
	078 Move [X21], X8
	079 Move X0, [X22]
	080 Move W8, [X0+224]
	081 Compare W8, 0
	082 JumpIfNotEqual {85}
	083 Call 0x1C17DFC
	084 Move X0, [X22]
	085 Add X8, X0, 184
	086 And W31, W20, 1
	087 Move W9, 80
	088 Move W10, 88
	089 Move X8, [X8]
	090 NotImplemented "Instruction CSEL not yet implemented."
	091 Move X22, [X31+16]
	092 Move X21, [X31+24]
	093 Move X8, [X8]
	094 Move [X19], X8
	095 Move X20, [X31+32]
	096 Move X19, [X31+40]
	097 Move X30, [X31+48]
	098 Move X23, [X31+56]
	099 Return 
	100 Move X0, 0x68E000
	101 Move X0, [X0+1888]
	102 Call 0x1C17D08
	103 Call 0x1C17F10
	104 Move X1, X31
	105 Move X19, X0
	106 Call ArgumentOutOfRangeException..ctor, X0
	107 Move X0, 0x6E9000
	108 Move X0, [X0+3000]
	109 Call 0x1C17D08
	110 Move X1, X0
	111 Move X0, X19
	112 Call 0x1C17DEC

Method: System.Boolean IsAfterOpaquePass(ref UnityEngine.Rendering.Universal.ScreenSpaceAmbientOcclusion/ScreenSpaceAmbientOcclusionPass/ShaderPasses pass)

Disassembly:
	0x03A6EFAC BL 0x1C16CF4
	0x03A6EFB0 ADRP X0, 0x6E7000
	0x03A6EFB4 LDR X0, [X0 + 0xF38]
	0x03A6EFB8 BL 0x1C16CF4
	0x03A6EFBC ADRP X0, 0x6E7000
	0x03A6EFC0 LDR X0, [X0 + 0xF60]
	0x03A6EFC4 BL 0x1C16CF4
	0x03A6EFC8 ADRP X0, 0x6E8000
	0x03A6EFCC LDR X0, [X0 + 0xCB8]
	0x03A6EFD0 BL 0x1C16CF4

ISIL:
	001 Move W8, [X0]
	002 Subtract W8, W8, 4
	003 NotImplemented "Instruction CMP not yet implemented."
	004 Move W9, 41
	005 NotImplemented "Instruction LSRV not yet implemented."
	006 And W0, W8, 1
	007 Return X0
	008 Move W0, W31
	009 Return X0

Method: System.Void OnCameraCleanup(UnityEngine.Rendering.CommandBuffer cmd)

Disassembly:
	0x03A6EFD4 MOVZ W8, 0x1
	0x03A6EFD8 STRB W8, [X22 + 0x295]
	0x03A6EFDC LDR X0, [X21]
	0x03A6EFE0 STRB W31, [X31 + 0x8]
	0x03A6EFE4 LDR X21, [X19 + 0xE0]
	0x03A6EFE8 LDR W8, [X0 + 0xE0]
	0x03A6EFEC CBNZ W8, 0x3A6EFF4
	0x03A6EFF0 BL 0x1C16DFC
	0x03A6EFF4 MOV X0, X21
	0x03A6EFF8 MOV X1, X31
	0x03A6EFFC MOV X2, X31
	0x03A6F000 BL 0x3C3883C
	0x03A6F004 TBZ X0, 0x0, 0x3A6F09C
	0x03A6F008 ADRP X8, 0x684000
	0x03A6F00C LDR X8, [X8 + 0x9D0]
	0x03A6F010 MOVZ W1, 0x1
	0x03A6F014 LDR X0, [X8]
	0x03A6F018 BL 0x1C16D6C
	0x03A6F01C MOV X20, X0
	0x03A6F020 MOV X0, X19
	0x03A6F024 MOV X1, X31
	0x03A6F028 BL 0x33BE520
	0x03A6F02C CBZ X0, 0x3A6F198
	0x03A6F030 LDR X8, [X0]
	0x03A6F034 LDP X9, X1, [X8 + 0x1A8]
	0x03A6F038 BLR X9
	0x03A6F03C CBZ X20, 0x3A6F198
	0x03A6F040 MOV X19, X0
	0x03A6F044 CBZ X0, 0x3A6F05C
	0x03A6F048 LDR X8, [X20]
	0x03A6F04C MOV X0, X19
	0x03A6F050 LDR X1, [X8 + 0x40]
	0x03A6F054 BL 0x1C16E00
	0x03A6F058 CBZ X0, 0x3A6F1A0
	0x03A6F05C LDR W8, [X20 + 0x18]
	0x03A6F060 CBZ W8, 0x3A6F19C
	0x03A6F064 STR X19, [X20 + 0x20]
	0x03A6F068 ADRP X8, 0x684000
	0x03A6F06C LDR X8, [X8 + 0xA28]
	0x03A6F070 LDR X0, [X8]
	0x03A6F074 LDR W8, [X0 + 0xE0]
	0x03A6F078 CBNZ W8, 0x3A6F080
	0x03A6F07C BL 0x1C16DFC
	0x03A6F080 ADRP X8, 0x6E7000
	0x03A6F084 LDR X8, [X8 + 0xCB8]
	0x03A6F088 MOV X1, X20
	0x03A6F08C MOV X2, X31
	0x03A6F090 LDR X0, [X8]
	0x03A6F094 BL 0x3C066BC
	0x03A6F098 B 0x3A6F188
	0x03A6F09C ADRP X22, 0x6E7000
	0x03A6F0A0 LDR X22, [X22 + 0xC50]
	0x03A6F0A4 ADRP X21, 0x6E3000
	0x03A6F0A8 LDR X20, [X20]
	0x03A6F0AC LDR X0, [X22]
	0x03A6F0B0 LDR W8, [X0 + 0xE0]
	0x03A6F0B4 LDR X21, [X21 + 0xE28]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x975000
	006 Move W8, [X21+651]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0x6AE000
	014 Move X0, [X0+2296]
	015 Call 0x1C17CF4
	016 Move X0, 0x6E9000
	017 Move X0, [X0+2984]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+651], W8
	021 Compare X19, 0
	022 JumpIfEqual {53}
	023 Move X8, [X20+392]
	024 Compare X8, 0
	025 JumpIfEqual {71}
	026 Move W8, [X8+21]
	027 Compare W8, 0
	028 JumpIfEqual {34}
	029 Move X20, [X31+16]
	030 Move X19, [X31+24]
	031 Move X30, [X31+32]
	032 Move X21, [X31+40]
	033 Return 
	034 Move X8, 0x6AD000
	035 Move X8, [X8+2296]
	036 Move X0, [X8]
	037 Move W8, [X0+224]
	038 Compare W8, 0
	039 JumpIfNotEqual {41}
	040 Call 0x1C17DFC
	041 Move X8, 0x6E8000
	042 Move X8, [X8+2984]
	043 Move X0, X19
	044 Move X20, [X31+16]
	045 Move X19, [X31+24]
	046 Move W2, W31
	047 Move X1, [X8]
	048 Move X3, X31
	049 Move X30, [X31+32]
	050 Move X21, [X31+40]
	051 Call CoreUtils.SetKeyword, X0, X1, X2
	052 Return 
	053 Move X0, 0x68A000
	054 Move X0, [X0+1320]
	055 Call 0x1C17D08
	056 Call 0x1C17F10
	057 Move X19, X0
	058 Move X0, 0x6E7000
	059 Move X0, [X0+1776]
	060 Call 0x1C17D08
	061 Move X1, X0
	062 Move X0, X19
	063 Move X2, X31
	064 Call ArgumentNullException..ctor, X0, X1
	065 Move X0, 0x6E8000
	066 Move X0, [X0+3008]
	067 Call 0x1C17D08
	068 Move X1, X0
	069 Move X0, X19
	070 Call 0x1C17DEC
	071 Call 0x1C17F20

Method: System.Void Dispose()

Disassembly:
	0x03A6D290 MOV W3, W23
	0x03A6D294 MOV W4, W22
	0x03A6D298 MOV X5, X20
	0x03A6D29C STR V2, [X25 + 0x12]
	0x03A6D2A0 BL 0x3A724F4
	0x03A6D2A4 LDR X0, [X27]
	0x03A6D2A8 LDR X26, [X19]
	0x03A6D2AC LDR W8, [X0 + 0xE0]
	0x03A6D2B0 CBNZ W8, 0x3A6D2B8
	0x03A6D2B4 BL 0x1C16DFC
	0x03A6D2B8 ADD X1, X31, 0x1D0
	0x03A6D2BC MOV X0, X26
	0x03A6D2C0 MOV W2, W31
	0x03A6D2C4 BL 0x3A71EF4
	0x03A6D2C8 MOV W26, W31
	0x03A6D2CC TBZ X0, 0x0, 0x3A6D4C4
	0x03A6D2D0 LDR X8, [X19]
	0x03A6D2D4 CBZ X8, 0x3A6D440
	0x03A6D2D8 ADRP X9, 0x686000
	0x03A6D2DC LDR X9, [X9 + 0x598]
	0x03A6D2E0 LDR X26, [X8 + 0x18]
	0x03A6D2E4 LDR X0, [X9]
	0x03A6D2E8 LDR W9, [X0 + 0xE0]
	0x03A6D2EC CBNZ W9, 0x3A6D2F4
	0x03A6D2F0 BL 0x1C16DFC
	0x03A6D2F4 MOV X0, X26
	0x03A6D2F8 MOV X1, X31
	0x03A6D2FC MOV X2, X31
	0x03A6D300 BL 0x3C354F8
	0x03A6D304 TBZ X0, 0x0, 0x3A6D440
	0x03A6D308 LDR X8, [X19]
	0x03A6D30C CBZ X8, 0x3A6D4EC
	0x03A6D310 LDR X0, [X8 + 0x18]
	0x03A6D314 CBZ X0, 0x3A6D4EC
	0x03A6D318 ADD X8, X31, 0xD0
	0x03A6D31C MOV X1, X31
	0x03A6D320 BL 0x3C21334
	0x03A6D324 LDP V0, V1, [X25 + 0x40]
	0x03A6D328 LDR V2, [X25 + 0x6]
	0x03A6D32C LDR W8, [X31 + 0x100]
	0x03A6D330 STP V0, V1, [X25 + 0xC0]
	0x03A6D334 STR V2, [X25 + 0xE]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0+296]
	004 Compare X8, 0
	005 JumpIfEqual {52}
	006 Move W9, [X8+24]
	007 Compare W9, 0
	008 JumpIfEqual {51}
	009 Move X19, X0
	010 Move X0, [X8+32]
	011 Compare X0, 0
	012 JumpIfEqual {18}
	013 Move X1, X31
	014 Call RTHandle.Release, X0
	015 Move X8, [X19+296]
	016 Compare X8, 0
	017 JumpIfEqual {52}
	018 Move W9, [X8+24]
	019 NotImplemented "Instruction CMP not yet implemented."
	020 Move X0, [X8+40]
	021 Compare X0, 0
	022 JumpIfEqual {28}
	023 Move X1, X31
	024 Call RTHandle.Release, X0
	025 Move X8, [X19+296]
	026 Compare X8, 0
	027 JumpIfEqual {52}
	028 Move W9, [X8+24]
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move X0, [X8+48]
	031 Compare X0, 0
	032 JumpIfEqual {38}
	033 Move X1, X31
	034 Call RTHandle.Release, X0
	035 Move X8, [X19+296]
	036 Compare X8, 0
	037 JumpIfEqual {52}
	038 Move W9, [X8+24]
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Move X0, [X8+56]
	041 Compare X0, 0
	042 JumpIfEqual {48}
	043 Move X1, X31
	044 Move X30, [X31+16]
	045 Move X19, [X31+24]
	046 Call RTHandle.Release, X0
	047 Return 
	048 Move X30, [X31+16]
	049 Move X19, [X31+24]
	050 Return 
	051 Call 0x1C17F28
	052 Call 0x1C17F20

Method: System.Void .cctor()

Disassembly:
	0x03A6F0B8 CBNZ W8, 0x3A6F0C4
	0x03A6F0BC BL 0x1C16DFC
	0x03A6F0C0 LDR X0, [X22]
	0x03A6F0C4 LDR X8, [X0 + 0xB8]
	0x03A6F0C8 ADD X0, X31, 0x8
	0x03A6F0CC MOV X1, X20
	0x03A6F0D0 MOV X3, X31
	0x03A6F0D4 LDR X2, [X8 + 0x8]
	0x03A6F0D8 BL 0x39B1DB0
	0x03A6F0DC LDR X0, [X21]
	0x03A6F0E0 LDR X21, [X19 + 0xF0]
	0x03A6F0E4 LDR X19, [X19 + 0xE0]
	0x03A6F0E8 LDR W8, [X0 + 0xE0]
	0x03A6F0EC CBNZ W8, 0x3A6F0F4
	0x03A6F0F0 BL 0x1C16DFC
	0x03A6F0F4 MOV X0, X20
	0x03A6F0F8 MOV X1, X21
	0x03A6F0FC MOV X2, X21
	0x03A6F100 MOV X3, X19
	0x03A6F104 MOV W4, W31
	0x03A6F108 MOV X5, X31
	0x03A6F10C BL 0x39E2FCC
	0x03A6F110 ADRP X8, 0x6AC000
	0x03A6F114 LDR X8, [X8 + 0x8F8]
	0x03A6F118 LDR X0, [X8]
	0x03A6F11C LDR W8, [X0 + 0xE0]
	0x03A6F120 CBNZ W8, 0x3A6F128
	0x03A6F124 BL 0x1C16DFC
	0x03A6F128 ADRP X8, 0x6E6000
	0x03A6F12C LDR X8, [X8 + 0xF60]
	0x03A6F130 LDR X1, [X8]
	0x03A6F134 MOV X0, X20
	0x03A6F138 MOV W2, W31
	0x03A6F13C MOV X3, X31
	0x03A6F140 BL 0x39E9618
	0x03A6F144 ADRP X8, 0x6E6000
	0x03A6F148 LDR X8, [X8 + 0xF38]
	0x03A6F14C LDR X1, [X8]
	0x03A6F150 MOV X0, X20
	0x03A6F154 MOV W2, W31
	0x03A6F158 MOV X3, X31
	0x03A6F15C BL 0x39E9618
	0x03A6F160 ADRP X8, 0x6E7000
	0x03A6F164 LDR X8, [X8 + 0xCB0]
	0x03A6F168 LDR X1, [X8]
	0x03A6F16C MOVZ W2, 0x1
	0x03A6F170 MOV X0, X20
	0x03A6F174 MOV X3, X31
	0x03A6F178 BL 0x39E9618
	0x03A6F17C ADD X0, X31, 0x8
	0x03A6F180 MOV X1, X31
	0x03A6F184 BL 0x39B1DB4
	0x03A6F188 LDP X20, X19, [X31 + 0x20]
	0x03A6F18C LDP X22, X21, [X31 + 0x10]
	0x03A6F190 LDR X30, [X31], #0x30
	0x03A6F194 RET
	0x03A6F198 BL 0x1C16F20
	0x03A6F19C BL 0x1C16F28
	0x03A6F1A0 BL 0x1C16F44
	0x03A6F1A4 MOV X1, X31
	0x03A6F1A8 BL 0x1C16DEC
	0x03A6F1AC B 0x3A6F1B8
	0x03A6F1B0 B 0x3A6F1B8
	0x03A6F1B4 B 0x3A6F1B8
	0x03A6F1B8 MOV X19, X0
	0x03A6F1BC CMP W1, 0x1
	0x03A6F1C0 B.NE 0x3A6F1EC
	0x03A6F1C4 MOV X0, X19
	0x03A6F1C8 BL 0x3EB1AD0
	0x03A6F1CC LDR X20, [X0]
	0x03A6F1D0 BL 0x3EB1AE0
	0x03A6F1D4 ADD X0, X31, 0x8
	0x03A6F1D8 MOV X1, X31
	0x03A6F1DC BL 0x39B1DB4
	0x03A6F1E0 CBZ X20, 0x3A6F188
	0x03A6F1E4 MOV X0, X20
	0x03A6F1E8 BL 0x1C16F18
	0x03A6F1EC MOV X20, X31
	0x03A6F1F0 B 0x3A6F1F8
	0x03A6F1F4 MOV X19, X0
	0x03A6F1F8 ADD X0, X31, 0x8
	0x03A6F1FC MOV X1, X31
	0x03A6F200 BL 0x39B1DB4
	0x03A6F204 CBNZ X20, 0x3A6F210
	0x03A6F208 MOV X0, X19
	0x03A6F20C BL 0x1D2C690
	0x03A6F210 MOV X0, X20
	0x03A6F214 BL 0x1C16F18
	0x03A6F218 BL 0x1990590
	0x03A6F21C STR X30, [X31 - 0x30]!
	0x03A6F220 STP X22, X21, [X31 + 0x10]
	0x03A6F224 STP X20, X19, [X31 + 0x20]
	0x03A6F228 ADRP X22, 0x973000
	0x03A6F22C ADRP X19, 0x6E7000
	0x03A6F230 ADRP X21, 0x6E7000
	0x03A6F234 ADRP X20, 0x6E1000
	0x03A6F238 LDRB W8, [X22 + 0x296]
	0x03A6F23C LDR X19, [X19 + 0xCC0]
	0x03A6F240 LDR X21, [X21 + 0xC50]
	0x03A6F244 LDR X20, [X20 + 0x598]
	0x03A6F248 TBNZ X8, 0x0, 0x3A6F278
	0x03A6F24C ADRP X0, 0x6E1000
	0x03A6F250 LDR X0, [X0 + 0x598]
	0x03A6F254 BL 0x1C16CF4
	0x03A6F258 ADRP X0, 0x6E7000
	0x03A6F25C LDR X0, [X0 + 0xC50]
	0x03A6F260 BL 0x1C16CF4
	0x03A6F264 ADRP X0, 0x6E7000
	0x03A6F268 LDR X0, [X0 + 0xCC0]
	0x03A6F26C BL 0x1C16CF4
	0x03A6F270 MOVZ W8, 0x1
	0x03A6F274 STRB W8, [X22 + 0x296]
	0x03A6F278 LDR X8, [X21]
	0x03A6F27C LDR X9, [X19]
	0x03A6F280 LDR X8, [X8 + 0xB8]
	0x03A6F284 STR X9, [X8]
	0x03A6F288 LDR X8, [X21]
	0x03A6F28C LDR X0, [X20]
	0x03A6F290 LDR X8, [X8 + 0xB8]
	0x03A6F294 LDR X19, [X8]
	0x03A6F298 BL 0x1C16F10
	0x03A6F29C MOV X1, X19
	0x03A6F2A0 MOV X2, X31
	0x03A6F2A4 MOV X20, X0
	0x03A6F2A8 BL 0x39B19AC
	0x03A6F2AC LDR X8, [X21]
	0x03A6F2B0 LDP X22, X21, [X31 + 0x10]
	0x03A6F2B4 LDR X8, [X8 + 0xB8]
	0x03A6F2B8 STR X20, [X8 + 0x8]
	0x03A6F2BC LDP X20, X19, [X31 + 0x20]
	0x03A6F2C0 LDR X30, [X31], #0x30
	0x03A6F2C4 RET
	0x03A6F2C8 STP X30, X21, [X31 - 0x20]!
	0x03A6F2CC STP X20, X19, [X31 + 0x10]
	0x03A6F2D0 ADRP X21, 0x973000
	0x03A6F2D4 ADRP X20, 0x6E7000
	0x03A6F2D8 LDRB W8, [X21 + 0x297]
	0x03A6F2DC LDR X20, [X20 + 0xC58]
	0x03A6F2E0 MOV X19, X0
	0x03A6F2E4 TBNZ X8, 0x0, 0x3A6F2FC
	0x03A6F2E8 ADRP X0, 0x6E7000
	0x03A6F2EC LDR X0, [X0 + 0xC58]
	0x03A6F2F0 BL 0x1C16CF4
	0x03A6F2F4 MOVZ W8, 0x1
	0x03A6F2F8 STRB W8, [X21 + 0x297]
	0x03A6F2FC LDR X0, [X20]
	0x03A6F300 LDR W8, [X0 + 0xE0]
	0x03A6F304 CBNZ W8, 0x3A6F310
	0x03A6F308 BL 0x1C16DFC
	0x03A6F30C LDR X0, [X20]
	0x03A6F310 LDR X8, [X0 + 0xB8]
	0x03A6F314 MOV X0, X19
	0x03A6F318 LDP X20, X19, [X31 + 0x10]
	0x03A6F31C MOV X2, X31
	0x03A6F320 LDR X1, [X8 + 0x10]
	0x03A6F324 LDP X30, X21, [X31], #0x20
	0x03A6F328 B 0x3A440A4
	0x03A6F32C STR X30, [X31 - 0x30]!
	0x03A6F330 STP X22, X21, [X31 + 0x10]
	0x03A6F334 STP X20, X19, [X31 + 0x20]
	0x03A6F338 ADRP X19, 0x973000
	0x03A6F33C ADRP X21, 0x6E7000
	0x03A6F340 LDRB W8, [X19 + 0x298]
	0x03A6F344 LDR X21, [X21 + 0xC58]
	0x03A6F348 MOV X20, X2
	0x03A6F34C TBNZ X8, 0x0, 0x3A6F394
	0x03A6F350 ADRP X0, 0x6AC000
	0x03A6F354 LDR X0, [X0 + 0x8F8]
	0x03A6F358 BL 0x1C16CF4
	0x03A6F35C ADRP X0, 0x6E7000
	0x03A6F360 LDR X0, [X0 + 0xC58]
	0x03A6F364 BL 0x1C16CF4
	0x03A6F368 ADRP X0, 0x6E7000
	0x03A6F36C LDR X0, [X0 + 0xCB0]
	0x03A6F370 BL 0x1C16CF4
	0x03A6F374 ADRP X0, 0x6E6000
	0x03A6F378 LDR X0, [X0 + 0xF38]
	0x03A6F37C BL 0x1C16CF4
	0x03A6F380 ADRP X0, 0x6E6000
	0x03A6F384 LDR X0, [X0 + 0xF60]
	0x03A6F388 BL 0x1C16CF4
	0x03A6F38C MOVZ W8, 0x1
	0x03A6F390 STRB W8, [X19 + 0x298]
	0x03A6F394 LDR X0, [X21]
	0x03A6F398 STRB W31, [X31 + 0x8]
	0x03A6F39C ADRP X22, 0x6AC000
	0x03A6F3A0 LDR X19, [X20]
	0x03A6F3A4 LDR W8, [X0 + 0xE0]
	0x03A6F3A8 LDR X22, [X22 + 0x8F8]
	0x03A6F3AC CBNZ W8, 0x3A6F3B8
	0x03A6F3B0 BL 0x1C16DFC
	0x03A6F3B4 LDR X0, [X21]
	0x03A6F3B8 LDR X8, [X0 + 0xB8]
	0x03A6F3BC ADD X0, X31, 0x8
	0x03A6F3C0 MOV X1, X19
	0x03A6F3C4 MOV X3, X31
	0x03A6F3C8 LDR X2, [X8 + 0x8]
	0x03A6F3CC BL 0x39B1DB0
	0x03A6F3D0 LDRB W8, [X20 + 0x250]
	0x03A6F3D4 LDR X0, [X22]
	0x03A6F3D8 LDR W9, [X20 + 0x25C]
	0x03A6F3DC CMP W8, 0x0
	0x03A6F3E0 LDR W8, [X0 + 0xE0]
	0x03A6F3E4 CSET W20, NE
	0x03A6F3E8 CMP W9, 0x1
	0x03A6F3EC CSET W22, EQ
	0x03A6F3F0 CSET W21, GT
	0x03A6F3F4 CBNZ W8, 0x3A6F3FC
	0x03A6F3F8 BL 0x1C16DFC
	0x03A6F3FC ADRP X8, 0x6E7000
	0x03A6F400 LDR X8, [X8 + 0xCB0]
	0x03A6F404 LDR X1, [X8]
	0x03A6F408 MOV X0, X19
	0x03A6F40C MOV W2, W31
	0x03A6F410 MOV X3, X31
	0x03A6F414 BL 0x39E9618
	0x03A6F418 ADRP X8, 0x6E6000
	0x03A6F41C LDR X8, [X8 + 0xF60]
	0x03A6F420 AND W2, W22, W20, 0x0
	0x03A6F424 LDR X1, [X8]
	0x03A6F428 MOV X0, X19
	0x03A6F42C MOV X3, X31
	0x03A6F430 BL 0x39E9618
	0x03A6F434 ADRP X8, 0x6E6000
	0x03A6F438 LDR X8, [X8 + 0xF38]
	0x03A6F43C AND W2, W21, W20, 0x0
	0x03A6F440 LDR X1, [X8]
	0x03A6F444 MOV X0, X19
	0x03A6F448 MOV X3, X31
	0x03A6F44C BL 0x39E9618
	0x03A6F450 ADD X0, X31, 0x8
	0x03A6F454 MOV X1, X31
	0x03A6F458 BL 0x39B1DB4
	0x03A6F45C LDP X20, X19, [X31 + 0x20]
	0x03A6F460 LDP X22, X21, [X31 + 0x10]
	0x03A6F464 LDR X30, [X31], #0x30
	0x03A6F468 RET
	0x03A6F46C B 0x3A6F474
	0x03A6F470 B 0x3A6F474
	0x03A6F474 MOV X19, X0
	0x03A6F478 CMP W1, 0x1
	0x03A6F47C B.NE 0x3A6F4A8
	0x03A6F480 MOV X0, X19
	0x03A6F484 BL 0x3EB1AD0
	0x03A6F488 LDR X20, [X0]
	0x03A6F48C BL 0x3EB1AE0
	0x03A6F490 ADD X0, X31, 0x8
	0x03A6F494 MOV X1, X31
	0x03A6F498 BL 0x39B1DB4
	0x03A6F49C CBZ X20, 0x3A6F45C
	0x03A6F4A0 MOV X0, X20
	0x03A6F4A4 BL 0x1C16F18
	0x03A6F4A8 MOV X20, X31
	0x03A6F4AC B 0x3A6F4B4
	0x03A6F4B0 MOV X19, X0
	0x03A6F4B4 ADD X0, X31, 0x8
	0x03A6F4B8 MOV X1, X31
	0x03A6F4BC BL 0x39B1DB4
	0x03A6F4C0 CBNZ X20, 0x3A6F4CC
	0x03A6F4C4 MOV X0, X19
	0x03A6F4C8 BL 0x1D2C690
	0x03A6F4CC MOV X0, X20
	0x03A6F4D0 BL 0x1C16F18
	0x03A6F4D4 BL 0x1990590
	0x03A6F4D8 SUB X31, X31, 0xB0
	0x03A6F4DC STP X30, X23, [X31 + 0x80]
	0x03A6F4E0 STP X22, X21, [X31 + 0x90]
	0x03A6F4E4 STP X20, X19, [X31 + 0xA0]
	0x03A6F4E8 ADRP X23, 0x973000
	0x03A6F4EC ADRP X19, 0x6E7000
	0x03A6F4F0 ADRP X21, 0x6E7000
	0x03A6F4F4 ADRP X20, 0x6E1000
	0x03A6F4F8 ADRP X22, 0x6E1000
	0x03A6F4FC LDRB W8, [X23 + 0x29A]
	0x03A6F500 LDR X19, [X19 + 0xCC8]
	0x03A6F504 LDR X21, [X21 + 0xC58]
	0x03A6F508 LDR X20, [X20 + 0x598]
	0x03A6F50C LDR X22, [X22 + 0x9B0]
	0x03A6F510 TBNZ X8, 0x0, 0x3A6F54C
	0x03A6F514 ADRP X0, 0x6E1000
	0x03A6F518 LDR X0, [X0 + 0x598]
	0x03A6F51C BL 0x1C16CF4
	0x03A6F520 ADRP X0, 0x6E1000
	0x03A6F524 LDR X0, [X0 + 0x9B0]
	0x03A6F528 BL 0x1C16CF4
	0x03A6F52C ADRP X0, 0x6E7000
	0x03A6F530 LDR X0, [X0 + 0xC58]
	0x03A6F534 BL 0x1C16CF4
	0x03A6F538 ADRP X0, 0x6E7000
	0x03A6F53C LDR X0, [X0 + 0xCC8]
	0x03A6F540 BL 0x1C16CF4

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X29, 0x974000
	014 Move X23, 0x6E8000
	015 Move X20, 0x6E7000
	016 Move X28, 0x6E8000
	017 Move X27, 0x6E8000
	018 Move X26, 0x6E8000
	019 Move X19, 0x6E8000
	020 Move X25, 0x6E8000
	021 Move X24, 0x6E8000
	022 Move X22, 0x686000
	023 Move X21, 0x6E8000
	024 Move X23, [X23+3016]
	025 Move X20, [X20+3856]
	026 Move X28, [X28+3024]
	027 Move X27, [X27+3032]
	028 Move X26, [X26+3040]
	029 Move X19, [X19+3048]
	030 Move X25, [X25+3056]
	031 Move X24, [X24+3064]
	032 Move X22, [X22+3672]
	033 Move W8, [X29+652]
	034 Move X21, [X21+3072]
	035 Move TEMP, X8
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfEqual {98}
	039 Move X0, 0x686000
	040 Move X0, [X0+3672]
	041 Call 0x1C17CF4
	042 Move X0, 0x6E7000
	043 Move X0, [X0+3856]
	044 Call 0x1C17CF4
	045 Move X0, 0x6E8000
	046 Move X0, [X0+3072]
	047 Call 0x1C17CF4
	048 Move X0, 0x6E8000
	049 Move X0, [X0+3080]
	050 Call 0x1C17CF4
	051 Move X0, 0x6E8000
	052 Move X0, [X0+3088]
	053 Call 0x1C17CF4
	054 Move X0, 0x6E8000
	055 Move X0, [X0+3096]
	056 Call 0x1C17CF4
	057 Move X0, 0x6E8000
	058 Move X0, [X0+3104]
	059 Call 0x1C17CF4
	060 Move X0, 0x6E8000
	061 Move X0, [X0+3112]
	062 Call 0x1C17CF4
	063 Move X0, 0x6E8000
	064 Move X0, [X0+3032]
	065 Call 0x1C17CF4
	066 Move X0, 0x6E8000
	067 Move X0, [X0+3120]
	068 Call 0x1C17CF4
	069 Move X0, 0x6E8000
	070 Move X0, [X0+3040]
	071 Call 0x1C17CF4
	072 Move X0, 0x6E8000
	073 Move X0, [X0+3128]
	074 Call 0x1C17CF4
	075 Move X0, 0x6E8000
	076 Move X0, [X0+3016]
	077 Call 0x1C17CF4
	078 Move X0, 0x6E8000
	079 Move X0, [X0+3048]
	080 Call 0x1C17CF4
	081 Move X0, 0x6E8000
	082 Move X0, [X0+3136]
	083 Call 0x1C17CF4
	084 Move X0, 0x6E8000
	085 Move X0, [X0+3064]
	086 Call 0x1C17CF4
	087 Move X0, 0x6E8000
	088 Move X0, [X0+3056]
	089 Call 0x1C17CF4
	090 Move X0, 0x6E8000
	091 Move X0, [X0+3144]
	092 Call 0x1C17CF4
	093 Move X0, 0x6E8000
	094 Move X0, [X0+3024]
	095 Call 0x1C17CF4
	096 Move W8, 1
	097 Move [X29+652], W8
	098 Move X0, [X23]
	099 Move X1, X31
	100 Call Shader.PropertyToID, X0
	101 Move X8, [X20]
	102 Move X1, X31
	103 Move X8, [X8+184]
	104 Move [X8], W0
	105 Move X0, [X28]
	106 Call Shader.PropertyToID, X0
	107 Move X8, [X20]
	108 Move X1, X31
	109 Move X8, [X8+184]
	110 Move [X8+4], W0
	111 Move X0, [X27]
	112 Call Shader.PropertyToID, X0
	113 Move X8, [X20]
	114 Move X1, X31
	115 Move X8, [X8+184]
	116 Move [X8+8], W0
	117 Move X0, [X26]
	118 Call Shader.PropertyToID, X0
	119 Move X8, [X20]
	120 Move X1, X31
	121 Move X8, [X8+184]
	122 Move [X8+12], W0
	123 Move X0, [X19]
	124 Call Shader.PropertyToID, X0
	125 Move X8, [X20]
	126 Move X1, X31
	127 Move X8, [X8+184]
	128 Move [X8+16], W0
	129 Move X0, [X25]
	130 Call Shader.PropertyToID, X0
	131 Move X8, [X20]
	132 Move X1, X31
	133 Move X8, [X8+184]
	134 Move [X8+20], W0
	135 Move X0, [X24]
	136 Call Shader.PropertyToID, X0
	137 Move X8, [X20]
	138 Move X1, X31
	139 Move X8, [X8+184]
	140 Move [X8+24], W0
	141 Move X8, 0x6E8000
	142 Move X8, [X8+3120]
	143 Move X0, [X8]
	144 Call Shader.PropertyToID, X0
	145 Move X8, [X20]
	146 Move X1, X31
	147 Move X8, [X8+184]
	148 Move [X8+28], W0
	149 Move X8, 0x6E8000
	150 Move X8, [X8+3144]
	151 Move X0, [X8]
	152 Call Shader.PropertyToID, X0
	153 Move X8, [X20]
	154 Move X1, X31
	155 Move X8, [X8+184]
	156 Move [X8+32], W0
	157 Move X8, 0x6E8000
	158 Move X8, [X8+3112]
	159 Move X0, [X8]
	160 Call Shader.PropertyToID, X0
	161 Move X8, [X20]
	162 Move X1, X31
	163 Move X8, [X8+184]
	164 Move [X8+36], W0
	165 Move X8, 0x6E8000
	166 Move X8, [X8+3128]
	167 Move X0, [X8]
	168 Call Shader.PropertyToID, X0
	169 Move X8, [X20]
	170 Move X1, X31
	171 Move X8, [X8+184]
	172 Move [X8+40], W0
	173 Move X8, 0x6E8000
	174 Move X8, [X8+3136]
	175 Move X0, [X8]
	176 Call Shader.PropertyToID, X0
	177 Move X8, [X20]
	178 Move W1, 4
	179 Move X8, [X8+184]
	180 Move [X8+44], W0
	181 Move X0, [X22]
	182 Call 0x1C17D6C
	183 Move X8, 0x6E8000
	184 Move X8, [X8+3096]
	185 Move X2, X31
	186 Move X19, X0
	187 Move X1, [X8]
	188 Call RuntimeHelpers.InitializeArray, X0, X1
	189 Move X8, [X20]
	190 Move W1, 3
	191 Move X8, [X8+184]
	192 Move [X8+48], X19
	193 Move X0, [X21]
	194 Call 0x1C17D6C
	195 Move X8, 0x6E8000
	196 Move X8, [X8+3080]
	197 Move X2, X31
	198 Move X19, X0
	199 Move X1, [X8]
	200 Call RuntimeHelpers.InitializeArray, X0, X1
	201 Move X8, [X20]
	202 Move W1, 3
	203 Move X8, [X8+184]
	204 Move [X8+56], X19
	205 Move X0, [X21]
	206 Call 0x1C17D6C
	207 Move X8, 0x6E8000
	208 Move X8, [X8+3088]
	209 Move X2, X31
	210 Move X19, X0
	211 Move X1, [X8]
	212 Call RuntimeHelpers.InitializeArray, X0, X1
	213 Move X8, [X20]
	214 Move W1, 4
	215 Move X8, [X8+184]
	216 Move [X8+64], X19
	217 Move X0, [X22]
	218 Call 0x1C17D6C
	219 Move X8, 0x6E8000
	220 Move X8, [X8+3104]
	221 Move X2, X31
	222 Move X19, X0
	223 Move X1, [X8]
	224 Call RuntimeHelpers.InitializeArray, X0, X1
	225 Move X8, [X20]
	226 Move W1, 2
	227 Move X8, [X8+184]
	228 Move [X8+72], X19
	229 Move X0, [X21]
	230 Call 0x1C17D6C
	231 Compare X0, 0
	232 JumpIfEqual {312}
	233 Move W8, [X0+24]
	234 Compare W8, 0
	235 JumpIfEqual {311}
	236 Move W9, 5
	237 NotImplemented "Instruction CMP not yet implemented."
	238 Move [X0+32], W9
	239 Move W8, 6
	240 Move [X0+36], W8
	241 Move X8, [X20]
	242 Move W1, 2
	243 Move X8, [X8+184]
	244 Move [X8+80], X0
	245 Move X0, [X21]
	246 Call 0x1C17D6C
	247 Compare X0, 0
	248 JumpIfEqual {312}
	249 Move W8, [X0+24]
	250 Compare W8, 0
	251 JumpIfEqual {311}
	252 Move W9, 5
	253 NotImplemented "Instruction CMP not yet implemented."
	254 Move [X0+32], W9
	255 Move W8, 7
	256 Move [X0+36], W8
	257 Move X8, [X20]
	258 Move W1, 2
	259 Move X8, [X8+184]
	260 Move [X8+88], X0
	261 Move X0, [X22]
	262 Call 0x1C17D6C
	263 Compare X0, 0
	264 JumpIfEqual {312}
	265 Move W8, [X0+24]
	266 NotImplemented "Instruction CMP not yet implemented."
	267 Move W8, 3
	268 Move [X0+36], W8
	269 Move X8, [X20]
	270 Move W1, 1
	271 Move X8, [X8+184]
	272 Move [X8+96], X0
	273 Move X0, [X21]
	274 Call 0x1C17D6C
	275 Compare X0, 0
	276 JumpIfEqual {312}
	277 Move W8, [X0+24]
	278 Compare W8, 0
	279 JumpIfEqual {311}
	280 Move W8, 8
	281 Move [X0+32], W8
	282 Move X8, [X20]
	283 Move W1, 1
	284 Move X8, [X8+184]
	285 Move [X8+104], X0
	286 Move X0, [X21]
	287 Call 0x1C17D6C
	288 Compare X0, 0
	289 JumpIfEqual {312}
	290 Move W8, [X0+24]
	291 Compare W8, 0
	292 JumpIfEqual {311}
	293 Move W8, 9
	294 Move [X0+32], W8
	295 Move X8, [X20]
	296 Move X20, [X31+80]
	297 Move X19, [X31+88]
	298 Move X22, [X31+64]
	299 Move X21, [X31+72]
	300 Move X24, [X31+48]
	301 Move X23, [X31+56]
	302 Move X8, [X8+184]
	303 Move X26, [X31+32]
	304 Move X25, [X31+40]
	305 Move X28, [X31+16]
	306 Move X27, [X31+24]
	307 Move [X8+112], X0
	308 Move X29, [X31+96]
	309 Move X30, [X31+104]
	310 Return 
	311 Call 0x1C17F28
	312 Call 0x1C17F20

