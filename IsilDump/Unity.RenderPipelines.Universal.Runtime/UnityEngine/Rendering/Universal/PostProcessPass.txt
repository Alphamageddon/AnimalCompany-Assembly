Type: UnityEngine.Rendering.Universal.PostProcessPass

Method: System.Void .ctor(UnityEngine.Rendering.Universal.RenderPassEvent evt, UnityEngine.Rendering.Universal.PostProcessData data, ref UnityEngine.Rendering.Universal.PostProcessParams postProcessParams)

Disassembly:
	0x03A5FDF8 B.LE 0x3A5FE04
	0x03A5FDFC EOR W9, W28, 0x1
	0x03A5FE00 B 0x3A5FE08
	0x03A5FE04 MOV W9, W31
	0x03A5FE08 ADRP X25, 0x6F5000
	0x03A5FE0C LDR W8, [X20 + 0x168]
	0x03A5FE10 LDR X25, [X25 + 0x10]
	0x03A5FE14 CBZ W8, 0x3A5FF30
	0x03A5FE18 ADD X8, X20, 0xF0
	0x03A5FE1C LDP V1, V0, [X8 + 0x10]
	0x03A5FE20 LDR W10, [X8 + 0x30]
	0x03A5FE24 LDR V2, [X8]
	0x03A5FE28 STR W9, [X31 + 0x1C]
	0x03A5FE2C CMP W29, 0x1
	0x03A5FE30 MOVZ W9, 0x1
	0x03A5FE34 ADD X0, X31, 0x130
	0x03A5FE38 MOV W1, W31
	0x03A5FE3C MOV X2, X31
	0x03A5FE40 CSET W25, EQ
	0x03A5FE44 STR W10, [X31 + 0x160]
	0x03A5FE48 STP V1, V0, [X31 + 0x140]
	0x03A5FE4C STR V2, [X31 + 0x13]
	0x03A5FE50 STR W9, [X31 + 0x138]
	0x03A5FE54 BL 0x3C22520
	0x03A5FE58 LDR W8, [X31 + 0x1AC]
	0x03A5FE5C TBNZ X8, 0x0, 0x3A5FE90
	0x03A5FE60 ADRP X8, 0x6BD000
	0x03A5FE64 LDR X8, [X8 + 0x8A8]
	0x03A5FE68 LDR X0, [X8]
	0x03A5FE6C LDR W8, [X0 + 0xE0]
	0x03A5FE70 CBNZ W8, 0x3A5FE78
	0x03A5FE74 BL 0x1C16DFC
	0x03A5FE78 MOV X0, X31
	0x03A5FE7C BL 0x3A915F0
	0x03A5FE80 MOV W1, W0
	0x03A5FE84 ADD X0, X31, 0x130
	0x03A5FE88 MOV X2, X31
	0x03A5FE8C BL 0x3C2240C
	0x03A5FE90 LDR X8, [X24 + 0x198]
	0x03A5FE94 CBZ X8, 0x3A60430
	0x03A5FE98 LDR X0, [X8 + 0x50]
	0x03A5FE9C STR W27, [X31 + 0x18]
	0x03A5FEA0 CBZ X0, 0x3A60430
	0x03A5FEA4 MOV X1, X31
	0x03A5FEA8 MOV X2, X31
	0x03A5FEAC ORR W27, W28, W25, 0x0
	0x03A5FEB0 BL 0x3C152D0
	0x03A5FEB4 CBZ W27, 0x3A600A8
	0x03A5FEB8 LDR W8, [X31 + 0x1AC]
	0x03A5FEBC CBZ W8, 0x3A5FF04
	0x03A5FEC0 MOV X0, X22
	0x03A5FEC4 MOV X1, X31
	0x03A5FEC8 BL 0x3A93358
	0x03A5FECC MOV X26, X0
	0x03A5FED0 MOV X27, X1
	0x03A5FED4 MOV X0, X22
	0x03A5FED8 MOV X1, X31
	0x03A5FEDC BL 0x3A9344C
	0x03A5FEE0 LDR X8, [X24 + 0x198]
	0x03A5FEE4 CBZ X8, 0x3A60430
	0x03A5FEE8 LDR X4, [X8 + 0x50]
	0x03A5FEEC MOV W3, W0
	0x03A5FEF0 MOV X0, X24
	0x03A5FEF4 MOV X1, X26
	0x03A5FEF8 MOV X2, X27
	0x03A5FEFC MOV W5, W31
	0x03A5FF00 BL 0x3A646E0
	0x03A5FF04 ANDS W31, W28, W25, 0x0
	0x03A5FF08 B.EQ 0x3A5FFBC
	0x03A5FF0C ADRP X25, 0x6F5000
	0x03A5FF10 LDR X8, [X24 + 0x198]
	0x03A5FF14 LDR X25, [X25 + 0x10]
	0x03A5FF18 CBZ X8, 0x3A60430
	0x03A5FF1C LDR X0, [X8 + 0x50]
	0x03A5FF20 CBZ X0, 0x3A60430
	0x03A5FF24 ADRP X8, 0x6F7000
	0x03A5FF28 LDR X8, [X8 + 0x5D0]
	0x03A5FF2C B 0x3A60004
	0x03A5FF30 CMP W9, 0x0
	0x03A5FF34 CSET W8, NE
	0x03A5FF38 CMP W29, 0x1
	0x03A5FF3C B.NE 0x3A6028C
	0x03A5FF40 ADRP X8, 0x6F7000
	0x03A5FF44 LDR X8, [X8 + 0x5E8]
	0x03A5FF48 MOV X0, X21
	0x03A5FF4C MOV X2, X31
	0x03A5FF50 MOV W24, W9
	0x03A5FF54 LDR X1, [X8]
	0x03A5FF58 BL 0x3C14E3C
	0x03A5FF5C CBNZ W24, 0x3A60298
	0x03A5FF60 B 0x3A602C0
	0x03A5FF64 LDRB W8, [X20 + 0x1A0]
	0x03A5FF68 LDRB W9, [X24 + 0x236]
	0x03A5FF6C MOV X0, X22
	0x03A5FF70 MOV X1, X31
	0x03A5FF74 EOR W8, W8, 0x1
	0x03A5FF78 ORR W23, W8, W9, 0x1
	0x03A5FF7C BL 0x3A93358
	0x03A5FF80 MOV X25, X0
	0x03A5FF84 MOV X26, X1
	0x03A5FF88 MOV X0, X22
	0x03A5FF8C MOV X1, X31
	0x03A5FF90 BL 0x3A9344C
	0x03A5FF94 MOV W3, W0
	0x03A5FF98 MOV X0, X24
	0x03A5FF9C MOV X1, X25
	0x03A5FFA0 MOV X2, X26
	0x03A5FFA4 MOV X4, X21
	0x03A5FFA8 MOV W5, W23
	0x03A5FFAC BL 0x3A646E0
	0x03A5FFB0 MOVZ W8, 0x1
	0x03A5FFB4 STR W8, [X31 + 0x1AC]
	0x03A5FFB8 B 0x3A5FD40
	0x03A5FFBC ADRP X25, 0x6F5000
	0x03A5FFC0 LDR X25, [X25 + 0x10]
	0x03A5FFC4 CMP W29, 0x1
	0x03A5FFC8 B.NE 0x3A5FFE8
	0x03A5FFCC LDR X8, [X24 + 0x198]
	0x03A5FFD0 CBZ X8, 0x3A60430
	0x03A5FFD4 LDR X0, [X8 + 0x50]
	0x03A5FFD8 CBZ X0, 0x3A60430
	0x03A5FFDC ADRP X8, 0x6F7000
	0x03A5FFE0 LDR X8, [X8 + 0x5E8]
	0x03A5FFE4 B 0x3A60004
	0x03A5FFE8 CBZ W28, 0x3A60010
	0x03A5FFEC LDR X8, [X24 + 0x198]
	0x03A5FFF0 CBZ X8, 0x3A60430
	0x03A5FFF4 LDR X0, [X8 + 0x50]
	0x03A5FFF8 CBZ X0, 0x3A60430
	0x03A5FFFC ADRP X8, 0x6F7000
	0x03A60000 LDR X8, [X8 + 0x5E0]
	0x03A60004 LDR X1, [X8]
	0x03A60008 MOV X2, X31
	0x03A6000C BL 0x3C14E3C
	0x03A60010 LDR X0, [X25]
	0x03A60014 ADD X26, X24, 0x240
	0x03A60018 LDR W8, [X0 + 0xE0]
	0x03A6001C CBNZ W8, 0x3A60024
	0x03A60020 BL 0x1C16DFC
	0x03A60024 ADRP X8, 0x6F6000
	0x03A60028 LDR X8, [X8 + 0x600]
	0x03A6002C ADD X1, X31, 0x130
	0x03A60030 FMOV S0, W31
	0x03A60034 MOVZ W3, 0x1
	0x03A60038 LDR X6, [X8]
	0x03A6003C MOVZ W5, 0x1
	0x03A60040 MOV X0, X26
	0x03A60044 MOV W2, W31
	0x03A60048 MOV W4, W31
	0x03A6004C MOV X7, X31
	0x03A60050 BL 0x3A6D184
	0x03A60054 LDR X8, [X24 + 0x198]
	0x03A60058 CBZ X8, 0x3A60430
	0x03A6005C ADRP X9, 0x6F2000
	0x03A60060 LDR X9, [X9 + 0xE28]
	0x03A60064 LDR X29, [X24 + 0x118]
	0x03A60068 LDR X28, [X24 + 0x240]
	0x03A6006C LDR X27, [X8 + 0x50]
	0x03A60070 LDR X0, [X9]
	0x03A60074 LDR W9, [X0 + 0xE0]
	0x03A60078 CBNZ W9, 0x3A60080
	0x03A6007C BL 0x1C16DFC
	0x03A60080 LDR W3, [X31 + 0x1A8]
	0x03A60084 MOV X0, X19
	0x03A60088 MOV X1, X29
	0x03A6008C MOV X2, X28
	0x03A60090 MOV W4, W31
	0x03A60094 MOV X5, X27
	0x03A60098 MOV W6, W31
	0x03A6009C MOV X7, X31
	0x03A600A0 BL 0x39E3120
	0x03A600A4 LDR X26, [X26]
	0x03A600A8 LDR W8, [X20 + 0x168]
	0x03A600AC LDR W9, [X31 + 0x1C]
	0x03A600B0 CMP W8, 0x1
	0x03A600B4 B.NE 0x3A60264
	0x03A600B8 LDR W8, [X20 + 0x16C]
	0x03A600BC ADRP X25, 0x6F4000
	0x03A600C0 LDR W27, [X31 + 0x18]
	0x03A600C4 LDR X25, [X25 + 0x10]
	0x03A600C8 CMP W8, 0x1
	0x03A600CC B.EQ 0x3A60280
	0x03A600D0 CMP W8, 0x2
	0x03A600D4 B.NE 0x3A60294
	0x03A600D8 LDR X8, [X24 + 0x198]
	0x03A600DC CBZ X8, 0x3A60430
	0x03A600E0 LDR X0, [X8 + 0x58]
	0x03A600E4 CBZ X0, 0x3A60430
	0x03A600E8 MOV X1, X31
	0x03A600EC MOV X2, X31
	0x03A600F0 BL 0x3C152D0
	0x03A600F4 LDP V0, V1, [X31 + 0x130]
	0x03A600F8 LDR V2, [X31 + 0x15]
	0x03A600FC LDR W8, [X31 + 0x160]
	0x03A60100 LDR X0, [X25]
	0x03A60104 STP V0, V1, [X31 + 0xF0]
	0x03A60108 STR V2, [X31 + 0x11]
	0x03A6010C STR W8, [X31 + 0x120]
	0x03A60110 LDR V0, [X20 + 0x158]
	0x03A60114 ADD X27, X24, 0x248
	0x03A60118 STR D0, [X31 + 0xF0]
	0x03A6011C LDR W8, [X0 + 0xE0]
	0x03A60120 CBNZ W8, 0x3A60128
	0x03A60124 BL 0x1C16DFC
	0x03A60128 ADRP X8, 0x6F6000
	0x03A6012C LDR X8, [X8 + 0x5F8]
	0x03A60130 ADD X1, X31, 0xF0
	0x03A60134 FMOV S0, W31
	0x03A60138 MOVZ W3, 0x1
	0x03A6013C LDR X6, [X8]
	0x03A60140 MOVZ W5, 0x1
	0x03A60144 MOV X0, X27
	0x03A60148 MOV W2, W31
	0x03A6014C MOV W4, W31
	0x03A60150 MOV X7, X31
	0x03A60154 BL 0x3A6D184
	0x03A60158 LDP S0, S1, [X20 + 0xF0]
	0x03A6015C LDR V2, [X20 + 0x158]
	0x03A60160 LDR V3, [X20 + 0x15C]
	0x03A60164 MOV X0, X19
	0x03A60168 SCVTF S0, S0
	0x03A6016C SCVTF S1, S1
	0x03A60170 SCVTF S4, S2
	0x03A60174 SCVTF S5, S3
	0x03A60178 MOV V2.16B, V0.16B
	0x03A6017C MOV V3.16B, V1.16B
	0x03A60180 MOV X1, X31
	0x03A60184 BL 0x39EA1AC
	0x03A60188 LDR X8, [X24 + 0x198]
	0x03A6018C CBZ X8, 0x3A60430
	0x03A60190 ADRP X9, 0x6F2000
	0x03A60194 LDR X9, [X9 + 0xE28]
	0x03A60198 LDR X28, [X24 + 0x248]
	0x03A6019C LDR X24, [X8 + 0x58]
	0x03A601A0 LDR X0, [X9]
	0x03A601A4 LDR W9, [X0 + 0xE0]
	0x03A601A8 CBNZ W9, 0x3A601B0
	0x03A601AC BL 0x1C16DFC
	0x03A601B0 LDR W3, [X31 + 0x1A8]
	0x03A601B4 MOV X0, X19
	0x03A601B8 MOV X1, X26
	0x03A601BC MOV X2, X28
	0x03A601C0 MOV W4, W31
	0x03A601C4 MOV X5, X24
	0x03A601C8 MOV W6, W31
	0x03A601CC MOV X7, X31
	0x03A601D0 BL 0x39E3120
	0x03A601D4 LDR V0, [X20 + 0x174]
	0x03A601D8 FCMP S0, 0x0
	0x03A601DC B.LE 0x3A60230
	0x03A601E0 LDRB W8, [X20 + 0x170]
	0x03A601E4 ADRP X9, 0xFFFFFFFFFD08A000
	0x03A601E8 LDR V1, [X9 + 0x250]
	0x03A601EC ADRP X9, 0x6F6000
	0x03A601F0 LDR X9, [X9 + 0x5F0]
	0x03A601F4 CMP W8, 0x0
	0x03A601F8 LDR W8, [X31 + 0x1AC]
	0x03A601FC FCSEL S8, S1, S0, EQ
	0x03A60200 MOV X0, X21
	0x03A60204 MOV X2, X31
	0x03A60208 CMP W8, 0x0
	0x03A6020C ADRP X8, 0x6F6000
	0x03A60210 LDR X8, [X8 + 0x5C8]
	0x03A60214 CSEL X8, X9, X8, NE
	0x03A60218 LDR X1, [X8]
	0x03A6021C BL 0x3C14E3C
	0x03A60220 MOV X0, X19
	0x03A60224 MOV V0.16B, V8.16B
	0x03A60228 MOV X1, X31
	0x03A6022C BL 0x39EA3DC
	0x03A60230 LDP V0, V1, [X31 + 0xF0]
	0x03A60234 LDR V2, [X31 + 0x11]
	0x03A60238 LDR W8, [X31 + 0x120]
	0x03A6023C LDR X26, [X27]
	0x03A60240 ADD X1, X31, 0x70
	0x03A60244 MOV X0, X19
	0x03A60248 MOV X2, X31
	0x03A6024C STP V0, V1, [X31 + 0x70]
	0x03A60250 STR V2, [X31 + 0x9]
	0x03A60254 STR W8, [X31 + 0xA0]
	0x03A60258 BL 0x3A68048
	0x03A6025C LDP W27, W8, [X31 + 0x18]
	0x03A60260 B 0x3A6028C
	0x03A60264 ADRP X25, 0x6F4000
	0x03A60268 LDR W27, [X31 + 0x18]
	0x03A6026C LDR X25, [X25 + 0x10]
	0x03A60270 CBZ W9, 0x3A602C0
	0x03A60274 CMP W8, 0x2
	0x03A60278 B.NE 0x3A60298
	0x03A6027C B 0x3A602C0
	0x03A60280 CMP W9, 0x0
	0x03A60284 CSET W8, NE
	0x03A60288 CBZ W9, 0x3A60414
	0x03A6028C CBNZ W8, 0x3A60298
	0x03A60290 B 0x3A602C0
	0x03A60294 CBZ W9, 0x3A602C0
	0x03A60298 ADRP X8, 0x6F6000
	0x03A6029C LDR X8, [X8 + 0x5C8]
	0x03A602A0 MOV X0, X21
	0x03A602A4 MOV X2, X31
	0x03A602A8 LDR X1, [X8]
	0x03A602AC BL 0x3C14E3C
	0x03A602B0 LDR V0, [X20 + 0x214]
	0x03A602B4 MOV X0, X19
	0x03A602B8 MOV X1, X31
	0x03A602BC BL 0x39EA3DC
	0x03A602C0 LDR X0, [X25]
	0x03A602C4 LDR W8, [X0 + 0xE0]
	0x03A602C8 CBNZ W8, 0x3A602D0
	0x03A602CC BL 0x1C16DFC
	0x03A602D0 ADD X8, X31, 0x48
	0x03A602D4 MOV X0, X20
	0x03A602D8 MOV X1, X31
	0x03A602DC BL 0x3A72384
	0x03A602E0 LDUR V0, [X31 + 0x48]
	0x03A602E4 LDUR V1, [X31 + 0x58]
	0x03A602E8 LDR X8, [X31 + 0x68]
	0x03A602EC STP V0, V1, [X31 + 0x170]
	0x03A602F0 STR X8, [X31 + 0x190]
	0x03A602F4 CBZ W27, 0x3A60388
	0x03A602F8 CBZ X23, 0x3A60430
	0x03A602FC MOV X0, X23
	0x03A60300 MOV X1, X31
	0x03A60304 BL 0x3A35A14
	0x03A60308 ADRP X9, 0x6F2000
	0x03A6030C LDR X9, [X9 + 0xE28]
	0x03A60310 MOV X8, X0
	0x03A60314 LDR X22, [X8]
	0x03A60318 LDR X0, [X9]
	0x03A6031C LDR W9, [X0 + 0xE0]
	0x03A60320 CBNZ W9, 0x3A60328
	0x03A60324 BL 0x1C16DFC
	0x03A60328 MOV X0, X19
	0x03A6032C MOV X1, X26
	0x03A60330 MOV X2, X22
	0x03A60334 MOV W3, W31
	0x03A60338 MOV W4, W31
	0x03A6033C MOV X5, X21
	0x03A60340 MOV W6, W31
	0x03A60344 MOV X7, X31
	0x03A60348 BL 0x39E3120
	0x03A6034C LDR X19, [X20 + 0x1D0]
	0x03A60350 MOV X0, X23
	0x03A60354 MOV X1, X31
	0x03A60358 BL 0x3A35A14
	0x03A6035C LDR X20, [X0]
	0x03A60360 MOV X0, X23
	0x03A60364 MOV X1, X31
	0x03A60368 BL 0x3A35A1C
	0x03A6036C CBZ X19, 0x3A60430
	0x03A60370 LDR X2, [X0]
	0x03A60374 MOV X0, X19
	0x03A60378 MOV X1, X20
	0x03A6037C MOV X3, X31
	0x03A60380 BL 0x3A4B4D8
	0x03A60384 B 0x3A603F0
	0x03A60388 LDP V0, V1, [X31 + 0x170]
	0x03A6038C LDR X8, [X31 + 0x190]
	0x03A60390 ADD X0, X31, 0x20
	0x03A60394 MOV X1, X31
	0x03A60398 STP V0, V1, [X31 + 0x20]

ISIL:
	001 Subtract X31, X31, 336
	002 Move [X31+240], X29
	003 Move [X31+248], X30
	004 Move [X31+256], X28
	005 Move [X31+264], X27
	006 Move [X31+272], X26
	007 Move [X31+280], X25
	008 Move [X31+288], X24
	009 Move [X31+296], X23
	010 Move [X31+304], X22
	011 Move [X31+312], X21
	012 Move [X31+320], X20
	013 Move [X31+328], X19
	014 Move X23, 0x984000
	015 Move X24, 0x6F5000
	016 Move W8, [X23+570]
	017 Move X24, [X24+4080]
	018 Move X20, X3
	019 Move X21, X2
	020 Move W22, W1
	021 Move X19, X0
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {64}
	026 Move X0, 0x696000
	027 Move X0, [X0+3672]
	028 Call 0x1C17CF4
	029 Move X0, 0x6F8000
	030 Move X0, [X0+1352]
	031 Call 0x1C17CF4
	032 Move X0, 0x6F2000
	033 Move X0, [X0+1432]
	034 Call 0x1C17CF4
	035 Move X0, 0x6F4000
	036 Move X0, [X0+3888]
	037 Call 0x1C17CF4
	038 Move X0, 0x6F2000
	039 Move X0, [X0+2480]
	040 Call 0x1C17CF4
	041 Move X0, 0x6F6000
	042 Move X0, [X0+2840]
	043 Call 0x1C17CF4
	044 Move X0, 0x6F5000
	045 Move X0, [X0+4080]
	046 Call 0x1C17CF4
	047 Move X0, 0x6F8000
	048 Move X0, [X0+1360]
	049 Call 0x1C17CF4
	050 Move X0, 0x6F8000
	051 Move X0, [X0+1368]
	052 Call 0x1C17CF4
	053 Move X0, 0x6F8000
	054 Move X0, [X0+1376]
	055 Call 0x1C17CF4
	056 Move X0, 0x6F8000
	057 Move X0, [X0+1384]
	058 Call 0x1C17CF4
	059 Move X0, 0x6F8000
	060 Move X0, [X0+1392]
	061 Call 0x1C17CF4
	062 Move W8, 1
	063 Move [X23+570], W8
	064 Move X0, [X24]
	065 Move [X31+236], W31
	066 Move X26, 0x6F2000
	067 Move X23, 0x6F8000
	068 Move X25, 0x6F8000
	069 Move W8, [X0+224]
	070 Move X26, [X26+1432]
	071 Move X23, [X23+1376]
	072 Move X25, [X25+1352]
	073 Compare W8, 0
	074 JumpIfNotEqual {76}
	075 Call 0x1C17DFC
	076 Move X0, X19
	077 Move X1, X31
	078 Call ScriptableRenderPass..ctor, X0
	079 Move X0, [X26]
	080 Call 0x1C17F10
	081 Move X1, [X23]
	082 Move X2, X31
	083 Move X23, X0
	084 Call ProfilingSampler..ctor, X0, X1
	085 Move [X19+56], X23
	086 Move [X19+16], W22
	087 Move [X19+416], X21
	088 Move X0, [X25]
	089 Call 0x1C17F10
	090 Move X1, X21
	091 Move X2, X31
	092 Move X22, X0
	093 Call MaterialLibrary..ctor, X0, X1
	094 Move W0, 6
	095 Move W1, 4
	096 Move X2, X31
	097 Move [X19+408], X22
	098 Call SystemInfo.IsFormatSupported, X0, X1
	099 Move TEMP, X0
	100 And TEMP, TEMP, 1
	101 Compare TEMP, 1
	102 JumpIfNotEqual {121}
	103 Move X0, X31
	104 Call SystemInfo.get_graphicsDeviceVendor
	105 Compare X0, 0
	106 JumpIfEqual {403}
	107 Move X1, X31
	108 Call String.ToLowerInvariant, X0
	109 Compare X0, 0
	110 JumpIfEqual {403}
	111 Move X8, 0x6F8000
	112 Move X8, [X8+1368]
	113 Move X2, X31
	114 Move X1, [X8]
	115 Call String.Contains, X0, X1
	116 Move TEMP, X0
	117 And TEMP, TEMP, 1
	118 Compare TEMP, 1
	119 JumpIfNotEqual {121}
	120 Move W8, 6
	121 Move W8, 8
	122 Move X25, 0x696000
	123 Move X22, 0x6F8000
	124 Move X25, [X25+3672]
	125 Move X22, [X22+1360]
	126 Move W0, 21
	127 Move W1, 5
	128 Move X2, X31
	129 Move [X19+520], W8
	130 Move W21, 21
	131 Call SystemInfo.IsFormatSupported, X0, X1
	132 Move TEMP, X0
	133 And TEMP, TEMP, 1
	134 Compare TEMP, 1
	135 JumpIfEqual {146}
	136 Move W0, 45
	137 Move W1, 5
	138 Move X2, X31
	139 Move W21, 45
	140 Move W23, 5
	141 Call SystemInfo.IsFormatSupported, X0, X1
	142 Move TEMP, X0
	143 And TEMP, TEMP, 1
	144 Compare TEMP, 1
	145 JumpIfNotEqual {147}
	146 Move [X19+524], W21
	147 Move [X19+524], W23
	148 Move X0, [X25]
	149 Move X28, 0x6F4000
	150 Move X28, [X28+3888]
	151 Move W1, 16
	152 Call 0x1C17D6C
	153 Move X8, [X22]
	154 Move X21, X0
	155 Move W9, [X8+224]
	156 Compare W9, 0
	157 JumpIfNotEqual {161}
	158 Move X0, X8
	159 Call 0x1C17DFC
	160 Move X8, [X22]
	161 Move X8, [X8+184]
	162 Move X23, 0x6F7000
	163 Move X23, [X23+1384]
	164 Move X26, 0x6F7000
	165 Move [X8+200], X21
	166 Move X0, [X25]
	167 Move X27, 0x6F1000
	168 Move X25, 0x6F5000
	169 Move X26, [X26+1392]
	170 Move X27, [X27+2480]
	171 Move X25, [X25+2840]
	172 Move W1, 16
	173 Call 0x1C17D6C
	174 Move X8, [X22]
	175 Move W1, 16
	176 Move X8, [X8+184]
	177 Move [X8+208], X0
	178 Move X0, [X28]
	179 Call 0x1C17D6C
	180 Move [X19+360], X0
	181 Move X0, [X28]
	182 Move W1, 16
	183 Call 0x1C17D6C
	184 Move W21, W31
	185 Move [X19+352], X0
	186 Move [X31+236], W31
	187 Move X0, [X22]
	188 Move W8, [X0+224]
	189 Compare W8, 0
	190 JumpIfNotEqual {194}
	191 Call 0x1C17DFC
	192 Move X0, [X22]
	193 Move W21, [X31+236]
	194 Move X8, [X0+184]
	195 Add X0, X31, 236
	196 Move X1, X31
	197 Move X28, [X8+200]
	198 Call Int32.ToString, X0
	199 Move X8, [X23]
	200 Move X1, X0
	201 Move X2, X31
	202 Move X0, X8
	203 Call String.Concat, X0, X1
	204 Move X1, X31
	205 Call Shader.PropertyToID, X0
	206 Compare X28, 0
	207 JumpIfEqual {403}
	208 Move W8, [X28+24]
	209 NotImplemented "Instruction CMP not yet implemented."
	210 Add X8, X28, W21
	211 Move [X8+32], W0
	212 Move X8, [X22]
	213 NotImplemented "Instruction LDRSW not yet implemented."
	214 Add X0, X31, 236
	215 Move X1, X31
	216 Move X8, [X8+184]
	217 Move X21, [X8+208]
	218 Call Int32.ToString, X0
	219 Move X8, [X26]
	220 Move X1, X0
	221 Move X2, X31
	222 Move X0, X8
	223 Call String.Concat, X0, X1
	224 Move X1, X31
	225 Call Shader.PropertyToID, X0
	226 Compare X21, 0
	227 JumpIfEqual {403}
	228 Move W8, [X21+24]
	229 NotImplemented "Instruction CMP not yet implemented."
	230 Add X8, X21, X28
	231 Move [X8+32], W0
	232 Move X8, [X22]
	233 Move X8, [X8+184]
	234 Move X8, [X8+200]
	235 Compare X8, 0
	236 JumpIfEqual {403}
	237 NotImplemented "Instruction LDRSW not yet implemented."
	238 Move W9, [X8+24]
	239 NotImplemented "Instruction CMP not yet implemented."
	240 Add X8, X8, X28
	241 Move W0, [X8+32]
	242 Move X29, [X19+360]
	243 Add X8, X31, 144
	244 Move X1, X31
	245 Call RenderTargetIdentifier.op_Implicit, X0
	246 Move V0, [X31+144]
	247 Move V1, [X31+160]
	248 Move X8, [X31+176]
	249 Add X0, X31, 236
	250 Move X1, X31
	251 Move [X31+192], V0
	252 Move [X31+200], V1
	253 Move [X31+224], X8
	254 Call Int32.ToString, X0
	255 Move X8, [X23]
	256 Move X1, X0
	257 Move X2, X31
	258 Move X0, X8
	259 Call String.Concat, X0, X1
	260 Move X8, [X27]
	261 Move X21, X0
	262 Move W9, [X8+224]
	263 Compare W9, 0
	264 JumpIfNotEqual {267}
	265 Move X0, X8
	266 Call 0x1C17DFC
	267 Move V0, [X31+192]
	268 Move V1, [X31+208]
	269 Move X8, [X31+224]
	270 Add X0, X31, 96
	271 Move X1, X21
	272 Move X2, X31
	273 Move [X31+96], V0
	274 Move [X31+104], V1
	275 Move [X31+128], X8
	276 Call RTHandles.Alloc, X0, X1
	277 Compare X29, 0
	278 JumpIfEqual {403}
	279 Move X21, X0
	280 Compare X0, 0
	281 JumpIfEqual {288}
	282 Move X8, [X29]
	283 Move X0, X21
	284 Move X1, [X8+64]
	285 Call 0x1C17E00
	286 Compare X0, 0
	287 JumpIfEqual {405}
	288 Move W8, [X29+24]
	289 NotImplemented "Instruction CMP not yet implemented."
	290 Add X8, X29, X28
	291 Move [X8+32], X21
	292 Move X8, [X22]
	293 Move X8, [X8+184]
	294 Move X8, [X8+208]
	295 Compare X8, 0
	296 JumpIfEqual {403}
	297 NotImplemented "Instruction LDRSW not yet implemented."
	298 Move W9, [X8+24]
	299 NotImplemented "Instruction CMP not yet implemented."
	300 Add X8, X8, X28
	301 Move W0, [X8+32]
	302 Move X29, [X19+352]
	303 Add X8, X31, 56
	304 Move X1, X31
	305 Call RenderTargetIdentifier.op_Implicit, X0
	306 NotImplemented "Instruction LDUR not yet implemented."
	307 NotImplemented "Instruction LDUR not yet implemented."
	308 Move X8, [X31+88]
	309 Add X0, X31, 236
	310 Move X1, X31
	311 Move [X31+144], V0
	312 Move [X31+152], V1
	313 Move [X31+176], X8
	314 Call Int32.ToString, X0
	315 Move X8, [X26]
	316 Move X1, X0
	317 Move X2, X31
	318 Move X0, X8
	319 Call String.Concat, X0, X1
	320 Move V0, [X31+144]
	321 Move V1, [X31+160]
	322 Move X8, [X31+176]
	323 Move X1, X0
	324 Add X0, X31, 16
	325 Move X2, X31
	326 Move [X31+16], V0
	327 Move [X31+24], V1
	328 Move [X31+48], X8
	329 Call RTHandles.Alloc, X0, X1
	330 Compare X29, 0
	331 JumpIfEqual {403}
	332 Move X21, X0
	333 Compare X0, 0
	334 JumpIfEqual {341}
	335 Move X8, [X29]
	336 Move X0, X21
	337 Move X1, [X8+64]
	338 Call 0x1C17E00
	339 Compare X0, 0
	340 JumpIfEqual {405}
	341 Move W8, [X29+24]
	342 NotImplemented "Instruction CMP not yet implemented."
	343 Add X8, X29, X28
	344 Move [X8+32], X21
	345 Move W8, [X31+236]
	346 Add W21, W8, 1
	347 NotImplemented "Instruction CMP not yet implemented."
	348 Move [X31+236], W21
	349 Move X0, [X25]
	350 Move W1, 2
	351 Call 0x1C17D6C
	352 Move [X19+536], X0
	353 Move X0, [X24]
	354 Move W8, [X0+224]
	355 Compare W8, 0
	356 JumpIfNotEqual {358}
	357 Call 0x1C17DFC
	358 Move [X19+66], W31
	359 Move X8, [X20]
	360 Move W1, 5
	361 Move X2, X31
	362 Move [X19+592], X8
	363 Move W0, [X20+8]
	364 Call SystemInfo.IsFormatSupported, X0, X1
	365 Move TEMP, X0
	366 And TEMP, TEMP, 1
	367 Compare TEMP, 1
	368 JumpIfNotEqual {370}
	369 Move W20, [X20+8]
	370 Move W0, 74
	371 Move W1, 5
	372 Move X2, X31
	373 Move W20, 74
	374 Call SystemInfo.IsFormatSupported, X0, X1
	375 Move TEMP, X0
	376 And TEMP, TEMP, 1
	377 Compare TEMP, 1
	378 JumpIfNotEqual {380}
	379 Move W8, W31
	380 Move X0, X31
	381 Call QualitySettings.get_activeColorSpace
	382 NotImplemented "Instruction CMP not yet implemented."
	383 Move W8, 8
	384 Move W9, 4
	385 NotImplemented "Instruction CSEL not yet implemented."
	386 Move W8, 1
	387 Move [X19+512], W20
	388 Move [X19+516], W8
	389 Move X20, [X31+320]
	390 Move X19, [X31+328]
	391 Move X22, [X31+304]
	392 Move X21, [X31+312]
	393 Move X24, [X31+288]
	394 Move X23, [X31+296]
	395 Move X26, [X31+272]
	396 Move X25, [X31+280]
	397 Move X28, [X31+256]
	398 Move X27, [X31+264]
	399 Move X29, [X31+240]
	400 Move X30, [X31+248]
	401 Add X31, X31, 336
	402 Return 
	403 Call 0x1C17F20
	404 Call 0x1C17F28
	405 Call 0x1C17F44
	406 Move X1, X31
	407 Call 0x1C17DEC

Method: System.Void Cleanup()

Disassembly:
	0x03A6039C STR X8, [X31 + 0x40]
	0x03A603A0 BL 0x39D4528
	0x03A603A4 ADRP X8, 0x6F3000
	0x03A603A8 LDR X8, [X8 + 0x98]
	0x03A603AC LDR X0, [X25]
	0x03A603B0 LDR X8, [X8]
	0x03A603B4 LDR W9, [X0 + 0xE0]

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+408]
	003 Compare X0, 0
	004 JumpIfEqual {9}
	005 Move X1, X31
	006 Move X30, [X31+16]
	007 Call MaterialLibrary.Cleanup, X0
	008 Return 
	009 Call 0x1C17F20

Method: System.Void Dispose()

Disassembly:
	0x03A603B8 LDR X8, [X8 + 0xB8]
	0x03A603BC LDR X20, [X8]
	0x03A603C0 CBNZ W9, 0x3A603C8
	0x03A603C4 BL 0x1C16DFC
	0x03A603C8 LDR W4, [X31 + 0x1A8]
	0x03A603CC MOV X0, X19
	0x03A603D0 MOV X1, X22
	0x03A603D4 MOV X2, X26
	0x03A603D8 MOV X3, X20
	0x03A603DC MOV W5, W31
	0x03A603E0 MOV X6, X21
	0x03A603E4 MOV W7, W31
	0x03A603E8 STR X31, [X31]
	0x03A603EC BL 0x3A70E0C
	0x03A603F0 ADD X31, X31, 0x1A0
	0x03A603F4 LDP X20, X19, [X31 + 0x60]
	0x03A603F8 LDP X22, X21, [X31 + 0x50]
	0x03A603FC LDP X24, X23, [X31 + 0x40]
	0x03A60400 LDP X26, X25, [X31 + 0x30]
	0x03A60404 LDP X28, X27, [X31 + 0x20]
	0x03A60408 LDP X29, X30, [X31 + 0x10]
	0x03A6040C LDR V8, [X31], #0x70
	0x03A60410 RET
	0x03A60414 ADRP X8, 0x6F6000
	0x03A60418 LDR X8, [X8 + 0x5D8]
	0x03A6041C MOV X0, X21
	0x03A60420 MOV X2, X31
	0x03A60424 LDR X1, [X8]
	0x03A60428 BL 0x3C14E3C
	0x03A6042C B 0x3A602C0
	0x03A60430 BL 0x1C16F20
	0x03A60434 STR D10, [X31 - 0x80]!
	0x03A60438 STP D9, D8, [X31 + 0x10]
	0x03A6043C STP X29, X30, [X31 + 0x20]
	0x03A60440 STP X28, X27, [X31 + 0x30]
	0x03A60444 STP X26, X25, [X31 + 0x40]
	0x03A60448 STP X24, X23, [X31 + 0x50]
	0x03A6044C STP X22, X21, [X31 + 0x60]
	0x03A60450 STP X20, X19, [X31 + 0x70]
	0x03A60454 SUB X31, X31, 0x270
	0x03A60458 ADRP X22, 0x982000
	0x03A6045C LDRB W8, [X22 + 0x23F]
	0x03A60460 MOV X21, X2
	0x03A60464 MOV X20, X1
	0x03A60468 MOV X19, X0
	0x03A6046C TBNZ X8, 0x0, 0x3A60508
	0x03A60470 ADRP X0, 0x693000
	0x03A60474 LDR X0, [X0 + 0x970]
	0x03A60478 BL 0x1C16CF4
	0x03A6047C ADRP X0, 0x6F2000
	0x03A60480 LDR X0, [X0 + 0xE28]
	0x03A60484 BL 0x1C16CF4
	0x03A60488 ADRP X0, 0x6F2000
	0x03A6048C LDR X0, [X0 + 0xD98]
	0x03A60490 BL 0x1C16CF4
	0x03A60494 ADRP X0, 0x693000
	0x03A60498 LDR X0, [X0 + 0x598]
	0x03A6049C BL 0x1C16CF4
	0x03A604A0 ADRP X0, 0x6F4000
	0x03A604A4 LDR X0, [X0 + 0xA8]
	0x03A604A8 BL 0x1C16CF4
	0x03A604AC ADRP X0, 0x6F3000
	0x03A604B0 LDR X0, [X0 + 0x98]
	0x03A604B4 BL 0x1C16CF4
	0x03A604B8 ADRP X0, 0x6F4000
	0x03A604BC LDR X0, [X0 + 0x10]
	0x03A604C0 BL 0x1C16CF4
	0x03A604C4 ADRP X0, 0x6F3000
	0x03A604C8 LDR X0, [X0 + 0xFF0]
	0x03A604CC BL 0x1C16CF4
	0x03A604D0 ADRP X0, 0x6F6000
	0x03A604D4 LDR X0, [X0 + 0x550]
	0x03A604D8 BL 0x1C16CF4
	0x03A604DC ADRP X0, 0x6F6000
	0x03A604E0 LDR X0, [X0 + 0x608]
	0x03A604E4 BL 0x1C16CF4
	0x03A604E8 ADRP X0, 0x6F6000
	0x03A604EC LDR X0, [X0 + 0x610]
	0x03A604F0 BL 0x1C16CF4
	0x03A604F4 ADRP X0, 0x6F5000
	0x03A604F8 LDR X0, [X0 + 0xF90]
	0x03A604FC BL 0x1C16CF4
	0x03A60500 MOVZ W8, 0x1
	0x03A60504 STRB W8, [X22 + 0x23F]
	0x03A60508 STR X20, [X31 + 0x260]
	0x03A6050C ADD X20, X21, 0x18
	0x03A60510 MOVI V0.2D, 0x0
	0x03A60514 MOV X0, X20
	0x03A60518 MOV X1, X31
	0x03A6051C STRB W31, [X31 + 0x278]
	0x03A60520 STR X31, [X31 + 0x230]
	0x03A60524 STRB W31, [X31 + 0x208]
	0x03A60528 STR X31, [X31 + 0x200]
	0x03A6052C STP V0, V0, [X31 + 0x240]
	0x03A60530 STP V0, V0, [X31 + 0x210]
	0x03A60534 STP V0, V0, [X31 + 0x1E0]
	0x03A60538 STR X19, [X31 + 0x250]
	0x03A6053C BL 0x3A8DE34
	0x03A60540 LDRB W8, [X21 + 0x1C0]
	0x03A60544 STR W0, [X31 + 0x27C]
	0x03A60548 CBZ W8, 0x3A60588
	0x03A6054C LDR X8, [X19 + 0x198]
	0x03A60550 CBZ X8, 0x3A61530

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, [X0+352]
	008 Compare X21, 0
	009 JumpIfEqual {124}
	010 Move X8, [X21+24]
	011 Move X19, X0
	012 NotImplemented "Instruction CMP not yet implemented."
	013 Move X20, X31
	014 Move X22, X31
	015 And X8, X8, 0
	016 Add X23, X21, 32
	017 NotImplemented "Instruction CMP not yet implemented."
	018 Move X8, [X23]
	019 NotImplemented "Instruction CMP not yet implemented."
	020 NotImplemented "Instruction CSEL not yet implemented."
	021 Compare X8, 0
	022 JumpIfEqual {28}
	023 Compare X20, 0
	024 JumpIfEqual {124}
	025 Move X0, X20
	026 Move X1, X31
	027 Call RTHandle.Release, X0
	028 Move W8, [X21+24]
	029 Add X22, X22, 1
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move X21, [X19+360]
	032 Compare X21, 0
	033 JumpIfEqual {124}
	034 Move X8, [X21+24]
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Move X20, X31
	037 Move X22, X31
	038 And X8, X8, 0
	039 Add X23, X21, 32
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Move X8, [X23]
	042 NotImplemented "Instruction CMP not yet implemented."
	043 NotImplemented "Instruction CSEL not yet implemented."
	044 Compare X8, 0
	045 JumpIfEqual {51}
	046 Compare X20, 0
	047 JumpIfEqual {124}
	048 Move X0, X20
	049 Move X1, X31
	050 Call RTHandle.Release, X0
	051 Move W8, [X21+24]
	052 Add X22, X22, 1
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Move X0, [X19+576]
	055 Compare X0, 0
	056 JumpIfEqual {59}
	057 Move X1, X31
	058 Call RTHandle.Release, X0
	059 Move X0, [X19+584]
	060 Compare X0, 0
	061 JumpIfEqual {64}
	062 Move X1, X31
	063 Call RTHandle.Release, X0
	064 Move X0, [X19+320]
	065 Compare X0, 0
	066 JumpIfEqual {69}
	067 Move X1, X31
	068 Call RTHandle.Release, X0
	069 Move X0, [X19+328]
	070 Compare X0, 0
	071 JumpIfEqual {74}
	072 Move X1, X31
	073 Call RTHandle.Release, X0
	074 Move X0, [X19+336]
	075 Compare X0, 0
	076 JumpIfEqual {79}
	077 Move X1, X31
	078 Call RTHandle.Release, X0
	079 Move X0, [X19+344]
	080 Compare X0, 0
	081 JumpIfEqual {84}
	082 Move X1, X31
	083 Call RTHandle.Release, X0
	084 Move X0, [X19+368]
	085 Compare X0, 0
	086 JumpIfEqual {89}
	087 Move X1, X31
	088 Call RTHandle.Release, X0
	089 Move X0, [X19+376]
	090 Compare X0, 0
	091 JumpIfEqual {94}
	092 Move X1, X31
	093 Call RTHandle.Release, X0
	094 Move X0, [X19+384]
	095 Compare X0, 0
	096 JumpIfEqual {99}
	097 Move X1, X31
	098 Call RTHandle.Release, X0
	099 Move X0, [X19+392]
	100 Compare X0, 0
	101 JumpIfEqual {104}
	102 Move X1, X31
	103 Call RTHandle.Release, X0
	104 Move X0, [X19+400]
	105 Compare X0, 0
	106 JumpIfEqual {116}
	107 Move X20, [X31+32]
	108 Move X19, [X31+40]
	109 Move X22, [X31+16]
	110 Move X21, [X31+24]
	111 Move X1, X31
	112 Move X30, [X31+48]
	113 Move X23, [X31+56]
	114 Call RTHandle.Release, X0
	115 Return 
	116 Move X20, [X31+32]
	117 Move X19, [X31+40]
	118 Move X22, [X31+16]
	119 Move X21, [X31+24]
	120 Move X30, [X31+48]
	121 Move X23, [X31+56]
	122 Return 
	123 Call 0x1C17F28
	124 Call 0x1C17F20

Method: System.Void Setup(in UnityEngine.RenderTextureDescriptor baseDescriptor, in UnityEngine.Rendering.RTHandle source, System.Boolean resolveToScreen, in UnityEngine.Rendering.RTHandle depth, in UnityEngine.Rendering.RTHandle internalLut, in UnityEngine.Rendering.RTHandle motionVectors, System.Boolean hasFinalPass, System.Boolean enableColorEncoding)

Disassembly:
	0x03A60554 ADRP X9, 0x693000
	0x03A60558 LDR X9, [X9 + 0x598]
	0x03A6055C LDR X22, [X8 + 0x10]
	0x03A60560 LDR X0, [X9]
	0x03A60564 LDR W9, [X0 + 0xE0]
	0x03A60568 CBNZ W9, 0x3A60570
	0x03A6056C BL 0x1C16DFC
	0x03A60570 MOV X0, X22
	0x03A60574 MOV X1, X31
	0x03A60578 MOV X2, X31
	0x03A6057C BL 0x3C354F8
	0x03A60580 AND W27, W0, 0x1
	0x03A60584 B 0x3A6058C
	0x03A60588 MOV W27, W31
	0x03A6058C LDR W8, [X21 + 0x1C4]
	0x03A60590 CMP W8, 0x2
	0x03A60594 B.NE 0x3A605AC
	0x03A60598 MOV X0, X31
	0x03A6059C BL 0x3C3BACC
	0x03A605A0 CMP W0, 0x8
	0x03A605A4 CSET W23, NE
	0x03A605A8 B 0x3A605B0
	0x03A605AC MOV W23, W31
	0x03A605B0 LDR X8, [X19 + 0x1A8]
	0x03A605B4 CBZ X8, 0x3A61530
	0x03A605B8 LDR X0, [X8 + 0x38]
	0x03A605BC CBZ X0, 0x3A61530
	0x03A605C0 LDR X8, [X0]
	0x03A605C4 LDR X9, [X8 + 0x218]
	0x03A605C8 LDR X1, [X8 + 0x220]
	0x03A605CC BLR X9
	0x03A605D0 LDR X9, [X19 + 0x198]
	0x03A605D4 CBZ X9, 0x3A61530
	0x03A605D8 LDR X8, [X19 + 0x1A8]
	0x03A605DC ADD X10, X9, 0x20
	0x03A605E0 ADD X9, X9, 0x28
	0x03A605E4 CMP W0, 0x1
	0x03A605E8 CSEL X9, X10, X9, EQ
	0x03A605EC CBZ X8, 0x3A61530
	0x03A605F0 ADRP X24, 0x6F2000
	0x03A605F4 LDR X22, [X9]
	0x03A605F8 LDR X24, [X24 + 0xD98]
	0x03A605FC MOV X0, X8
	0x03A60600 BL 0x3A59884
	0x03A60604 LDR W8, [X31 + 0x27C]
	0x03A60608 ORN W8, W8, W0, 0x0
	0x03A6060C TBZ X8, 0x0, 0x3A60618
	0x03A60610 MOV W22, W31
	0x03A60614 B 0x3A60644
	0x03A60618 ADRP X8, 0x693000
	0x03A6061C LDR X8, [X8 + 0x598]
	0x03A60620 LDR X0, [X8]
	0x03A60624 LDR W8, [X0 + 0xE0]
	0x03A60628 CBNZ W8, 0x3A60630
	0x03A6062C BL 0x1C16DFC
	0x03A60630 MOV X0, X22
	0x03A60634 MOV X1, X31
	0x03A60638 MOV X2, X31
	0x03A6063C BL 0x3C354F8
	0x03A60640 AND W22, W0, 0x1
	0x03A60644 LDR X0, [X24]
	0x03A60648 LDR W8, [X0 + 0xE0]
	0x03A6064C CBNZ W8, 0x3A60654
	0x03A60650 BL 0x1C16DFC
	0x03A60654 MOV X0, X31
	0x03A60658 BL 0x39CB4D4
	0x03A6065C CBZ X0, 0x3A61530
	0x03A60660 MOV X1, X31
	0x03A60664 BL 0x39CB6B0
	0x03A60668 TBZ X0, 0x0, 0x3A60674
	0x03A6066C STR W31, [X31 + 0x10]
	0x03A60670 B 0x3A6067C

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X29, 0x983000
	014 Move X27, 0x6F4000
	015 Move W8, [X29+571]
	016 Move W28, [X31+96]
	017 Move X27, [X27+4080]
	018 Move W25, W7
	019 Move X20, X6
	020 Move X21, X5
	021 Move X22, X4
	022 Move W26, W3
	023 Move X23, X2
	024 Move X24, X1
	025 Move X19, X0
	026 Move TEMP, X8
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {35}
	030 Move X0, 0x6F4000
	031 Move X0, [X0+4080]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X29+571], W8
	035 Move V2, [X24+16]
	036 Move V0, [X24+32]
	037 Move W8, [X24+48]
	038 Move V1, [X24]
	039 Add X24, X19, 224
	040 Move X0, X24
	041 Move W1, W31
	042 Move X2, X31
	043 And W28, W28, 1
	044 And W25, W25, 1
	045 And W26, W26, 1
	046 Move [X19+272], W8
	047 Move [X19+240], V2
	048 Move [X19+248], V0
	049 Move [X19+14], V1
	050 Call RenderTextureDescriptor.set_useMipMap, X0, X1
	051 Move X0, X24
	052 Move W1, W31
	053 Move X2, X31
	054 Call RenderTextureDescriptor.set_autoGenerateMips, X0, X1
	055 Move X8, [X23]
	056 Move [X19+280], X8
	057 Move X8, [X22]
	058 Move [X19+296], X8
	059 Move X8, [X21]
	060 Move [X19+304], X8
	061 Move X8, [X20]
	062 Move [X19+564], W31
	063 Move [X19+565], W25
	064 Move [X19+566], W28
	065 Move [X19+312], X8
	066 Move [X19+569], W26
	067 Move X0, [X27]
	068 Move W8, [X0+224]
	069 Compare W8, 0
	070 JumpIfNotEqual {73}
	071 Call 0x1C17DFC
	072 Move X0, [X27]
	073 Move X8, [X0+184]
	074 Move W9, 1
	075 Move X22, [X31+64]
	076 Move X21, [X31+72]
	077 Move X24, [X31+48]
	078 Move X23, [X31+56]
	079 Move X8, [X8]
	080 Move [X19+570], W9
	081 Move X26, [X31+32]
	082 Move X25, [X31+40]
	083 Move X28, [X31+16]
	084 Move X27, [X31+24]
	085 Move [X19+288], X8
	086 Move X20, [X31+80]
	087 Move X19, [X31+88]
	088 Move X29, [X31+96]
	089 Move X30, [X31+104]
	090 Return 

Method: System.Void Setup(in UnityEngine.RenderTextureDescriptor baseDescriptor, in UnityEngine.Rendering.RTHandle source, UnityEngine.Rendering.RTHandle destination, in UnityEngine.Rendering.RTHandle depth, in UnityEngine.Rendering.RTHandle internalLut, System.Boolean hasFinalPass, System.Boolean enableColorEncoding)

Disassembly:
	0x03A60674 LDRB W8, [X19 + 0x238]
	0x03A60678 STR W8, [X31 + 0x10]
	0x03A6067C LDR X0, [X19 + 0x1B0]
	0x03A60680 CBZ X0, 0x3A61530
	0x03A60684 BL 0x3A5A144
	0x03A60688 LDR X8, [X19 + 0x1B8]
	0x03A6068C CBZ X8, 0x3A61530
	0x03A60690 LDR X8, [X8 + 0x38]
	0x03A60694 CBZ X8, 0x3A61530
	0x03A60698 LDR X9, [X8]
	0x03A6069C LDR W11, [X31 + 0x27C]
	0x03A606A0 LDR X10, [X9 + 0x218]
	0x03A606A4 LDR X1, [X9 + 0x220]
	0x03A606A8 EOR W9, W0, 0x1
	0x03A606AC MOV X0, X8
	0x03A606B0 ORR W25, W11, W9, 0x0
	0x03A606B4 BLR X10
	0x03A606B8 FCMP S0, 0x0
	0x03A606BC CSET W24, LE
	0x03A606C0 TBZ X25, 0x0, 0x3A606CC
	0x03A606C4 MOV W29, W31
	0x03A606C8 B 0x3A606F0
	0x03A606CC ADRP X8, 0x693000
	0x03A606D0 LDR X8, [X8 + 0x970]
	0x03A606D4 LDR X0, [X8]
	0x03A606D8 LDR W8, [X0 + 0xE0]
	0x03A606DC CBNZ W8, 0x3A606E4
	0x03A606E0 BL 0x1C16DFC
	0x03A606E4 MOV X0, X31
	0x03A606E8 BL 0x3C018E4
	0x03A606EC AND W29, W0, 0x1
	0x03A606F0 LDR W8, [X31 + 0x27C]
	0x03A606F4 MOV X0, X20
	0x03A606F8 MOV X1, X31
	0x03A606FC ORR W8, W8, W24, 0x0
	0x03A60700 STR W8, [X31 + 0x14]
	0x03A60704 BL 0x3A8F3D4
	0x03A60708 MOV W25, W0
	0x03A6070C TBNZ X0, 0x0, 0x3A60740
	0x03A60710 LDR W8, [X21 + 0x1C4]
	0x03A60714 CMP W8, 0x3
	0x03A60718 B.NE 0x3A60740
	0x03A6071C ADRP X8, 0x6F6000
	0x03A60720 LDR X8, [X8 + 0x608]

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move V2, [X1+16]
	011 Move V0, [X1+32]
	012 Move W8, [X1+48]
	013 Move V1, [X1]
	014 Add X24, X0, 224
	015 Move X22, X2
	016 Move X23, X0
	017 Move [X0+272], W8
	018 Move [X0+240], V2
	019 Move [X0+248], V0
	020 Move [X0+14], V1
	021 Move X0, X24
	022 Move W1, W31
	023 Move X2, X31
	024 Move X19, X5
	025 Move X20, X4
	026 Move X21, X3
	027 And W25, W6, 1
	028 And W26, W7, 1
	029 Call RenderTextureDescriptor.set_useMipMap, X0, X1
	030 Move X0, X24
	031 Move W1, W31
	032 Move X2, X31
	033 Call RenderTextureDescriptor.set_autoGenerateMips, X0, X1
	034 Move X8, [X22]
	035 Move W9, 1
	036 Move [X23+280], X8
	037 Move [X23+288], X21
	038 Move X8, [X20]
	039 Move X22, [X31+48]
	040 Move X21, [X31+56]
	041 Move [X23+296], X8
	042 Move X8, [X19]
	043 Move [X23+564], W31
	044 Move [X23+565], W25
	045 Move [X23+566], W26
	046 Move [X23+304], X8
	047 Move [X23+570], W9
	048 Move X20, [X31+64]
	049 Move X19, [X31+72]
	050 Move X24, [X31+32]
	051 Move X23, [X31+40]
	052 Move X26, [X31+16]
	053 Move X25, [X31+24]
	054 Move X30, [X31+80]
	055 Return 

Method: System.Void SetupFinalPass(in UnityEngine.Rendering.RTHandle source, System.Boolean useSwapBuffer = False, System.Boolean enableColorEncoding = True)

Disassembly:
	0x03A60724 LDR X0, [X8]
	0x03A60728 LDR W8, [X0 + 0xE0]
	0x03A6072C CBNZ W8, 0x3A60734
	0x03A60730 BL 0x1C16DFC
	0x03A60734 MOV X0, X20
	0x03A60738 MOV X1, X31
	0x03A6073C BL 0x3A78CE8
	0x03A60740 LDP W8, W10, [X31 + 0x10]
	0x03A60744 AND W9, W25, 0x1
	0x03A60748 CMP W8, 0x0
	0x03A6074C ADD W8, W23, W27
	0x03A60750 ORN W10, W31, W10, 0x0
	0x03A60754 ADD W8, W8, W22
	0x03A60758 CINC W8, W8, NE
	0x03A6075C AND W10, W10, 0x1
	0x03A60760 ADD W8, W8, W10
	0x03A60764 ADD W8, W8, W9
	0x03A60768 ADD W8, W8, W29
	0x03A6076C STR W8, [X31 + 0x258]
	0x03A60770 LDRB W8, [X19 + 0x23A]
	0x03A60774 ADD X9, X21, 0x1D0
	0x03A60778 STR X9, [X31 + 0x18]
	0x03A6077C CBZ W8, 0x3A60808
	0x03A60780 LDR W8, [X31 + 0x258]
	0x03A60784 CMP W8, 0x1
	0x03A60788 B.LT 0x3A607C0
	0x03A6078C LDR X8, [X31 + 0x18]
	0x03A60790 LDR X0, [X8]
	0x03A60794 CBZ X0, 0x3A61530
	0x03A60798 LDR X8, [X0]
	0x03A6079C MOV W1, W31
	0x03A607A0 LDR X9, [X8 + 0x248]
	0x03A607A4 LDR X2, [X8 + 0x250]
	0x03A607A8 BLR X9
	0x03A607AC LDRB W9, [X19 + 0x23A]
	0x03A607B0 ADD X8, X31, 0x240
	0x03A607B4 CMP W9, 0x0
	0x03A607B8 CSEL X8, X8, X31, EQ
	0x03A607BC CBZ W9, 0x3A6080C

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0x983000
	009 Move X23, 0x6F4000
	010 Move W8, [X24+572]
	011 Move X23, [X23+4080]
	012 Move W20, W3
	013 Move W21, W2
	014 Move X22, X1
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {25}
	020 Move X0, 0x6F4000
	021 Move X0, [X0+4080]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X24+572], W8
	025 Move X8, [X22]
	026 Move [X19+280], X8
	027 Move X0, [X23]
	028 Move W8, [X0+224]
	029 Compare W8, 0
	030 JumpIfNotEqual {33}
	031 Call 0x1C17DFC
	032 Move X0, [X23]
	033 Move X8, [X0+184]
	034 And W9, W21, 1
	035 And W10, W20, 1
	036 Move W11, 1
	037 Move X8, [X8]
	038 NotImplemented "Instruction STRH not yet implemented."
	039 Move [X19+566], W10
	040 Move [X19+570], W9
	041 Move [X19+288], X8
	042 Move X20, [X31+48]
	043 Move X19, [X31+56]
	044 Move X22, [X31+32]
	045 Move X21, [X31+40]
	046 Move X24, [X31+16]
	047 Move X23, [X31+24]
	048 Move X30, [X31+64]
	049 Return 

Method: System.Void OnCameraSetup(UnityEngine.Rendering.CommandBuffer cmd, ref UnityEngine.Rendering.Universal.RenderingData renderingData)

Disassembly:
	0x03A607C0 LDR X8, [X31 + 0x18]
	0x03A607C4 LDR X0, [X8]
	0x03A607C8 CBZ X0, 0x3A61530

ISIL:
	001 Move W8, 1
	002 Move [X0+64], W8
	003 Return 

Method: System.Boolean CanRunOnTile()

Disassembly:
	0x03A607CC MOV X1, X31
	0x03A607D0 BL 0x3A44BD0

ISIL:
	001 Move W0, W31
	002 Return X0

Method: System.Void Execute(UnityEngine.Rendering.ScriptableRenderContext context, ref UnityEngine.Rendering.Universal.RenderingData renderingData)

Disassembly:
	0x03A607D4 LDRB W8, [X19 + 0x23A]
	0x03A607D8 STR X0, [X31 + 0x240]
	0x03A607DC CBZ W8, 0x3A60814
	0x03A607E0 LDR X8, [X31 + 0x18]
	0x03A607E4 LDR X0, [X8]
	0x03A607E8 CBZ X0, 0x3A61530
	0x03A607EC LDR X8, [X0]
	0x03A607F0 LDR X24, [X31 + 0x260]
	0x03A607F4 LDP X9, X2, [X8 + 0x198]
	0x03A607F8 MOV X1, X24
	0x03A607FC BLR X9
	0x03A60800 MOV X8, X0
	0x03A60804 B 0x3A6081C
	0x03A60808 ADD X8, X31, 0x240
	0x03A6080C LDR X9, [X19 + 0x118]
	0x03A60810 STR X9, [X8]
	0x03A60814 LDR X24, [X31 + 0x260]
	0x03A60818 MOV X8, X31
	0x03A6081C ADRP X26, 0x6F6000
	0x03A60820 LDR X26, [X26 + 0x550]
	0x03A60824 STR X8, [X31 + 0x248]
	0x03A60828 LDR X0, [X26]
	0x03A6082C LDR W8, [X0 + 0xE0]
	0x03A60830 CBNZ W8, 0x3A6083C
	0x03A60834 BL 0x1C16DFC
	0x03A60838 LDR X0, [X26]
	0x03A6083C LDR X8, [X0 + 0xB8]
	0x03A60840 ADRP X28, 0x978000
	0x03A60844 LDRB W9, [X28 + 0xAC0]
	0x03A60848 LDR W26, [X8 + 0xC0]
	0x03A6084C CBNZ W9, 0x3A60864
	0x03A60850 ADRP X0, 0x697000
	0x03A60854 LDR X0, [X0 + 0x270]
	0x03A60858 BL 0x1C16CF4
	0x03A6085C MOVZ W8, 0x1
	0x03A60860 STRB W8, [X28 + 0xAC0]
	0x03A60864 ADRP X8, 0x697000
	0x03A60868 LDR X8, [X8 + 0x270]
	0x03A6086C ADD X0, X31, 0x120
	0x03A60870 MOVZ W1, 0x1
	0x03A60874 MOV X2, X31
	0x03A60878 LDR X8, [X8]
	0x03A6087C LDR X8, [X8 + 0xB8]
	0x03A60880 LDP V1, V0, [X8 + 0x60]
	0x03A60884 LDP V2, V3, [X8 + 0x40]
	0x03A60888 ADD X8, X31, 0x160
	0x03A6088C STP V1, V0, [X31 + 0x140]
	0x03A60890 STP V2, V3, [X31 + 0x120]
	0x03A60894 BL 0x3C1015C
	0x03A60898 LDP V0, V1, [X31 + 0x160]
	0x03A6089C LDP V2, V3, [X31 + 0x180]
	0x03A608A0 STP V0, V1, [X31 + 0x1A0]
	0x03A608A4 STP V2, V3, [X31 + 0x1C0]
	0x03A608A8 CBZ X24, 0x3A61530
	0x03A608AC LDP V0, V1, [X31 + 0x1A0]
	0x03A608B0 LDP V2, V3, [X31 + 0x1C0]
	0x03A608B4 ADD X2, X31, 0xE0
	0x03A608B8 MOV X0, X24
	0x03A608BC MOV W1, W26
	0x03A608C0 MOV X3, X31
	0x03A608C4 STP V0, V1, [X31 + 0xE0]
	0x03A608C8 STP V2, V3, [X31 + 0x100]
	0x03A608CC BL 0x3C4D038
	0x03A608D0 CBZ W27, 0x3A6097C
	0x03A608D4 ADRP X8, 0x6F4000
	0x03A608D8 LDR X24, [X31 + 0x260]
	0x03A608DC LDR X8, [X8 + 0xA8]
	0x03A608E0 MOVZ W0, 0x11
	0x03A608E4 LDR X1, [X8]
	0x03A608E8 BL 0x2235BC0
	0x03A608EC MOV X2, X0
	0x03A608F0 ADD X0, X31, 0x278
	0x03A608F4 MOV X1, X24
	0x03A608F8 MOV X3, X31
	0x03A608FC BL 0x39B1DB0
	0x03A60900 LDR X24, [X31 + 0x260]
	0x03A60904 LDR X26, [X31 + 0x240]
	0x03A60908 ADD X1, X31, 0x240
	0x03A6090C MOV X0, X19
	0x03A60910 BL 0x3A61D04
	0x03A60914 LDR X8, [X19 + 0x198]
	0x03A60918 CBZ X8, 0x3A61544
	0x03A6091C ADRP X9, 0x6F2000
	0x03A60920 LDR X9, [X9 + 0xE28]
	0x03A60924 MOV X27, X0
	0x03A60928 LDR X28, [X8 + 0x10]
	0x03A6092C LDR X0, [X9]
	0x03A60930 LDR W9, [X0 + 0xE0]
	0x03A60934 CBNZ W9, 0x3A6093C
	0x03A60938 BL 0x1C16DFC
	0x03A6093C MOVZ W3, 0x2
	0x03A60940 MOV X0, X24
	0x03A60944 MOV X1, X26
	0x03A60948 MOV X2, X27
	0x03A6094C MOV W4, W31
	0x03A60950 MOV X5, X28
	0x03A60954 MOV W6, W31
	0x03A60958 MOV X7, X31
	0x03A6095C BL 0x39E3120
	0x03A60960 LDR X1, [X31 + 0x18]
	0x03A60964 ADD X2, X31, 0x240
	0x03A60968 MOV X0, X19
	0x03A6096C BL 0x3A61E5C
	0x03A60970 ADD X0, X31, 0x278
	0x03A60974 MOV X1, X31
	0x03A60978 BL 0x39B1DB4
	0x03A6097C CBZ W23, 0x3A609F4
	0x03A60980 ADRP X8, 0x6F4000
	0x03A60984 LDR X24, [X31 + 0x260]
	0x03A60988 LDR X8, [X8 + 0xA8]
	0x03A6098C MOVZ W0, 0x12
	0x03A60990 LDR X1, [X8]
	0x03A60994 BL 0x2235BC0
	0x03A60998 MOV X2, X0
	0x03A6099C ADD X0, X31, 0x278
	0x03A609A0 MOV X1, X24
	0x03A609A4 MOV X3, X31
	0x03A609A8 BL 0x39B1DB0
	0x03A609AC LDR X24, [X31 + 0x260]
	0x03A609B0 LDR X26, [X31 + 0x240]
	0x03A609B4 ADD X1, X31, 0x240
	0x03A609B8 MOV X0, X19
	0x03A609BC BL 0x3A61D04
	0x03A609C0 MOV X4, X0
	0x03A609C4 MOV X0, X19
	0x03A609C8 MOV X1, X20
	0x03A609CC MOV X2, X24
	0x03A609D0 MOV X3, X26
	0x03A609D4 BL 0x3A61F80
	0x03A609D8 LDR X1, [X31 + 0x18]
	0x03A609DC ADD X2, X31, 0x240
	0x03A609E0 MOV X0, X19
	0x03A609E4 BL 0x3A61E5C
	0x03A609E8 ADD X0, X31, 0x278
	0x03A609EC MOV X1, X31
	0x03A609F0 BL 0x39B1DB4
	0x03A609F4 CBZ W22, 0x3A60AA8
	0x03A609F8 LDR X8, [X19 + 0x1A8]
	0x03A609FC CBZ X8, 0x3A61530
	0x03A60A00 LDR X0, [X8 + 0x38]
	0x03A60A04 CBZ X0, 0x3A61530
	0x03A60A08 LDR X8, [X0]
	0x03A60A0C LDR X9, [X8 + 0x218]
	0x03A60A10 LDR X1, [X8 + 0x220]
	0x03A60A14 BLR X9
	0x03A60A18 ADRP X8, 0x6F4000
	0x03A60A1C LDR X24, [X31 + 0x260]
	0x03A60A20 LDR X8, [X8 + 0xA8]
	0x03A60A24 CMP W0, 0x1
	0x03A60A28 LDR X1, [X8]
	0x03A60A2C MOVZ W8, 0x13
	0x03A60A30 CINC W0, W8, NE
	0x03A60A34 BL 0x2235BC0
	0x03A60A38 MOV X2, X0
	0x03A60A3C ADD X0, X31, 0x278
	0x03A60A40 MOV X1, X24
	0x03A60A44 MOV X3, X31
	0x03A60A48 BL 0x39B1DB0
	0x03A60A4C LDR X24, [X21 + 0xD8]
	0x03A60A50 LDR X26, [X31 + 0x260]
	0x03A60A54 LDR X27, [X31 + 0x240]
	0x03A60A58 ADD X1, X31, 0x240
	0x03A60A5C MOV X0, X19
	0x03A60A60 BL 0x3A61D04
	0x03A60A64 LDR V0, [X21 + 0x124]
	0x03A60A68 LDR V1, [X21 + 0x128]
	0x03A60A6C LDR V2, [X21 + 0x12C]
	0x03A60A70 LDR V3, [X21 + 0x130]
	0x03A60A74 MOV X4, X0
	0x03A60A78 MOV X0, X19
	0x03A60A7C MOV X1, X24
	0x03A60A80 MOV X2, X26
	0x03A60A84 MOV X3, X27
	0x03A60A88 BL 0x3A6256C
	0x03A60A8C LDR X1, [X31 + 0x18]
	0x03A60A90 ADD X2, X31, 0x240
	0x03A60A94 MOV X0, X19
	0x03A60A98 BL 0x3A61E5C
	0x03A60A9C ADD X0, X31, 0x278
	0x03A60AA0 MOV X1, X31
	0x03A60AA4 BL 0x39B1DB4
	0x03A60AA8 TBZ X25, 0x0, 0x3A60B50
	0x03A60AAC ADRP X8, 0x6F4000
	0x03A60AB0 LDR X24, [X31 + 0x260]
	0x03A60AB4 LDR X8, [X8 + 0xA8]
	0x03A60AB8 MOVZ W0, 0x15
	0x03A60ABC LDR X1, [X8]
	0x03A60AC0 BL 0x2235BC0
	0x03A60AC4 MOV X2, X0
	0x03A60AC8 ADD X0, X31, 0x278
	0x03A60ACC MOV X1, X24
	0x03A60AD0 MOV X3, X31
	0x03A60AD4 BL 0x39B1DB0
	0x03A60AD8 LDR X8, [X19 + 0x198]
	0x03A60ADC CBZ X8, 0x3A61574
	0x03A60AE0 LDR X9, [X19 + 0x138]
	0x03A60AE4 CBZ X9, 0x3A61578
	0x03A60AE8 ADRP X10, 0x6F6000
	0x03A60AEC LDR X24, [X31 + 0x260]
	0x03A60AF0 LDR X10, [X10 + 0x608]
	0x03A60AF4 LDR X28, [X8 + 0x48]
	0x03A60AF8 LDR X27, [X31 + 0x240]
	0x03A60AFC LDR X25, [X31 + 0x248]
	0x03A60B00 LDR X0, [X10]
	0x03A60B04 LDR X26, [X9 + 0x18]
	0x03A60B08 LDR W8, [X0 + 0xE0]
	0x03A60B0C CBNZ W8, 0x3A60B14
	0x03A60B10 BL 0x1C16DFC
	0x03A60B14 MOV X0, X24
	0x03A60B18 MOV X1, X28
	0x03A60B1C MOV X2, X20
	0x03A60B20 MOV X3, X27
	0x03A60B24 MOV X4, X25
	0x03A60B28 MOV X5, X26
	0x03A60B2C MOV X6, X31
	0x03A60B30 BL 0x3A78ECC
	0x03A60B34 LDR X1, [X31 + 0x18]
	0x03A60B38 ADD X2, X31, 0x240
	0x03A60B3C MOV X0, X19
	0x03A60B40 BL 0x3A61E5C
	0x03A60B44 ADD X0, X31, 0x278
	0x03A60B48 MOV X1, X31
	0x03A60B4C BL 0x39B1DB4
	0x03A60B50 CBZ W29, 0x3A60BC8
	0x03A60B54 ADRP X8, 0x6F4000
	0x03A60B58 LDR X24, [X31 + 0x260]
	0x03A60B5C LDR X8, [X8 + 0xA8]
	0x03A60B60 MOVZ W0, 0x16
	0x03A60B64 LDR X1, [X8]
	0x03A60B68 BL 0x2235BC0
	0x03A60B6C MOV X2, X0
	0x03A60B70 ADD X0, X31, 0x278

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X22, 0x983000
	015 Move X21, 0x6BE000
	016 Move W8, [X22+573]
	017 Move X21, [X21+4032]
	018 Move X19, X2
	019 Move X20, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {65}
	024 Move X0, 0x6F5000
	025 Move X0, [X0+2392]
	026 Call 0x1C17CF4
	027 Move X0, 0x6BE000
	028 Move X0, [X0+4032]
	029 Call 0x1C17CF4
	030 Move X0, 0x6F7000
	031 Move X0, [X0+1400]
	032 Call 0x1C17CF4
	033 Move X0, 0x6F7000
	034 Move X0, [X0+1408]
	035 Call 0x1C17CF4
	036 Move X0, 0x6F7000
	037 Move X0, [X0+1416]
	038 Call 0x1C17CF4
	039 Move X0, 0x6F7000
	040 Move X0, [X0+1424]
	041 Call 0x1C17CF4
	042 Move X0, 0x6F7000
	043 Move X0, [X0+1432]
	044 Call 0x1C17CF4
	045 Move X0, 0x6F7000
	046 Move X0, [X0+1440]
	047 Call 0x1C17CF4
	048 Move X0, 0x6F7000
	049 Move X0, [X0+1448]
	050 Call 0x1C17CF4
	051 Move X0, 0x6F7000
	052 Move X0, [X0+1456]
	053 Call 0x1C17CF4
	054 Move X0, 0x6F7000
	055 Move X0, [X0+1464]
	056 Call 0x1C17CF4
	057 Move X0, 0x6F7000
	058 Move X0, [X0+1128]
	059 Call 0x1C17CF4
	060 Move X0, 0x6F7000
	061 Move X0, [X0+1472]
	062 Call 0x1C17CF4
	063 Move W8, 1
	064 Move [X22+573], W8
	065 Move X0, [X21]
	066 Move [X31+8], W31
	067 Move W8, [X0+224]
	068 Compare W8, 0
	069 JumpIfNotEqual {71}
	070 Call 0x1C17DFC
	071 Move X0, X31
	072 Call VolumeManager.get_instance
	073 Compare X0, 0
	074 JumpIfEqual {171}
	075 Move X21, [X0+16]
	076 Compare X21, 0
	077 JumpIfEqual {171}
	078 Move X8, 0x6F7000
	079 Move X8, [X8+1432]
	080 Move X26, 0x6F7000
	081 Move X27, 0x6F7000
	082 Move X28, 0x6F7000
	083 Move X29, 0x6F7000
	084 Move X24, 0x6F7000
	085 Move X22, 0x6F7000
	086 Move X23, 0x6F7000
	087 Move X26, [X26+1456]
	088 Move X27, [X27+1464]
	089 Move X28, [X28+1400]
	090 Move X29, [X29+1448]
	091 Move X24, [X24+1408]
	092 Move X22, [X22+1472]
	093 Move X23, [X23+1424]
	094 Move X1, [X8]
	095 Move X25, 0x6F5000
	096 Move X25, [X25+2392]
	097 Move X0, X21
	098 Call 0x22ADD04, X0
	099 Move [X20+424], X0
	100 Move X1, [X26]
	101 Move X0, X21
	102 Call 0x22ADD04, X0
	103 Move [X20+432], X0
	104 Move X1, [X27]
	105 Move X0, X21
	106 Call 0x22ADD04, X0
	107 Move [X20+440], X0
	108 Move X1, [X28]
	109 Move X0, X21
	110 Call 0x22ADD04, X0
	111 Move [X20+448], X0
	112 Move X1, [X29]
	113 Move X0, X21
	114 Call 0x22ADD04, X0
	115 Move [X20+456], X0
	116 Move X1, [X24]
	117 Move X0, X21
	118 Call 0x22ADD04, X0
	119 Move [X20+464], X0
	120 Move X1, [X22]
	121 Move X0, X21
	122 Call 0x22ADD04, X0
	123 Move [X20+472], X0
	124 Move X1, [X23]
	125 Move X0, X21
	126 Call 0x22ADD04, X0
	127 Move [X20+480], X0
	128 Move X8, 0x6F7000
	129 Move X8, [X8+1416]
	130 Move X0, X21
	131 Move X1, [X8]
	132 Call 0x22ADD04, X0
	133 Move [X20+488], X0
	134 Move X8, 0x6F7000
	135 Move X8, [X8+1128]
	136 Move X0, X21
	137 Move X1, [X8]
	138 Call 0x22ADD04, X0
	139 Move [X20+496], X0
	140 Move X8, 0x6F7000
	141 Move X8, [X8+1440]
	142 Move X0, X21
	143 Move X1, [X8]
	144 Call 0x22ADD04, X0
	145 Move [X20+504], X0
	146 Move W8, [X19+680]
	147 Move [X20+567], W8
	148 Move W8, [X19+681]
	149 Move [X20+568], W8
	150 Move W8, [X20+564]
	151 Move X21, [X19]
	152 Compare W8, 0
	153 JumpIfEqual {184}
	154 Move X0, [X25]
	155 Move W8, [X0+224]
	156 Compare W8, 0
	157 JumpIfNotEqual {160}
	158 Call 0x1C17DFC
	159 Move X0, [X25]
	160 Move X24, X25
	161 Move X8, [X0+184]
	162 Add X0, X31, 8
	163 Move X1, X21
	164 Move X3, X31
	165 Move X2, [X8+8]
	166 Call ProfilingScope..ctor, X0, X1, X2
	167 Move X0, X20
	168 Move X1, X21
	169 Move X2, X19
	170 Call PostProcessPass.RenderFinalPass, X0, X1, X2
	171 Call 0x1C17F20
	172 NotImplemented "Instruction CMP not yet implemented."
	173 Move X22, X0
	174 Move X0, X22
	175 Call 0x3EB2AD0
	176 Move X23, [X0]
	177 Call 0x3EB2AE0
	178 Add X0, X31, 8
	179 Move X1, X31
	180 Call ProfilingScope.Dispose, X0
	181 Move X25, X24
	182 Compare X23, 0
	183 JumpIfNotEqual {218}
	184 Move X0, [X25]
	185 Move W8, [X0+224]
	186 Compare W8, 0
	187 JumpIfNotEqual {190}
	188 Call 0x1C17DFC
	189 Move X0, [X25]
	190 Move X8, [X0+184]
	191 Add X0, X31, 8
	192 Move X1, X21
	193 Move X3, X31
	194 Move X2, [X8]
	195 Call ProfilingScope..ctor, X0, X1, X2
	196 Move X0, X20
	197 Move X1, X21
	198 Move X2, X19
	199 Call PostProcessPass.Render, X0, X1, X2
	200 Add X0, X31, 8
	201 Move X1, X31
	202 Call ProfilingScope.Dispose, X0
	203 Move X20, [X31+96]
	204 Move X19, [X31+104]
	205 Move X22, [X31+80]
	206 Move X21, [X31+88]
	207 Move X24, [X31+64]
	208 Move X23, [X31+72]
	209 Move X26, [X31+48]
	210 Move X25, [X31+56]
	211 Move X28, [X31+32]
	212 Move X27, [X31+40]
	213 Move X29, [X31+16]
	214 Move X30, [X31+24]
	215 Add X31, X31, 112
	216 Return 
	217 Move X23, X31
	218 Move X0, X23
	219 Call 0x1C17F18
	220 Move X22, X0
	221 Add X0, X31, 8
	222 Move X1, X31
	223 Call ProfilingScope.Dispose, X0
	224 Compare X23, 0
	225 JumpIfEqual {248}
	226 Move X0, X23
	227 Call 0x1C17F18
	228 NotImplemented "Instruction CMP not yet implemented."
	229 Move X22, X0
	230 Move X0, X22
	231 Call 0x3EB2AD0
	232 Move X19, [X0]
	233 Call 0x3EB2AE0
	234 Add X0, X31, 8
	235 Move X1, X31
	236 Call ProfilingScope.Dispose, X0
	237 Compare X19, 0
	238 JumpIfEqual {203}
	239 Move X0, X19
	240 Call 0x1C17F18
	241 Move X19, X31
	242 Move X22, X0
	243 Add X0, X31, 8
	244 Move X1, X31
	245 Call ProfilingScope.Dispose, X0
	246 Compare X19, 0
	247 JumpIfNotEqual {250}
	248 Move X0, X22
	249 Call 0x1D2D690
	250 Move X0, X19
	251 Call 0x1C17F18
	252 Call 0x1991590

Method: UnityEngine.RenderTextureDescriptor GetCompatibleDescriptor()

Disassembly:
	0x03A62AB8 LDR X0, [X0 + 0x680]
	0x03A62ABC BL 0x1C16CF4
	0x03A62AC0 ADRP X0, 0x6F4000
	0x03A62AC4 LDR X0, [X0 + 0x688]
	0x03A62AC8 BL 0x1C16CF4
	0x03A62ACC ADRP X0, 0x6F4000
	0x03A62AD0 LDR X0, [X0 + 0x690]
	0x03A62AD4 BL 0x1C16CF4
	0x03A62AD8 ADRP X0, 0x6F4000
	0x03A62ADC LDR X0, [X0 + 0x698]
	0x03A62AE0 BL 0x1C16CF4
	0x03A62AE4 ADRP X0, 0x6F4000
	0x03A62AE8 LDR X0, [X0 + 0x6A0]
	0x03A62AEC BL 0x1C16CF4
	0x03A62AF0 MOVZ W8, 0x1
	0x03A62AF4 STRB W8, [X19 + 0x24A]
	0x03A62AF8 MOVI V0.2D, 0x0
	0x03A62AFC STR W31, [X31 + 0x120]
	0x03A62B00 STP V0, V0, [X31 + 0x100]
	0x03A62B04 STR V0, [X31 + 0xF]
	0x03A62B08 STP X31, X31, [X31 + 0xE0]
	0x03A62B0C LDR X8, [X20 + 0x1C0]
	0x03A62B10 CBZ X8, 0x3A63584
	0x03A62B14 LDR X0, [X8 + 0x70]
	0x03A62B18 CBZ X0, 0x3A63584
	0x03A62B1C LDR X8, [X0]
	0x03A62B20 LDR X9, [X8 + 0x218]
	0x03A62B24 LDR X1, [X8 + 0x220]
	0x03A62B28 BLR X9

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+64], X30
	003 Move [X31+80], X22
	004 Move [X31+88], X21
	005 Move [X31+96], X20
	006 Move [X31+104], X19
	007 Move X19, X0
	008 Add X0, X0, 224
	009 Move W20, [X0]
	010 Move W21, [X19+228]
	011 Move X1, X31
	012 Move X22, X8
	013 Call RenderTextureDescriptor.get_graphicsFormat, X0
	014 Move W3, W0
	015 Add X8, X31, 8
	016 Move X0, X19
	017 Move W1, W20
	018 Move W2, W21
	019 Move W4, W31
	020 Call PostProcessPass.GetCompatibleDescriptor, X0, X1, X2, X3, X4
	021 Move W8, [X31+56]
	022 NotImplemented "Instruction LDUR not yet implemented."
	023 NotImplemented "Instruction LDUR not yet implemented."
	024 NotImplemented "Instruction LDUR not yet implemented."
	025 Move [X22+48], W8
	026 Move X20, [X31+96]
	027 Move X19, [X31+104]
	028 Move [X22+16], V1
	029 Move [X22+24], V0
	030 Move [X22], V2
	031 Move X22, [X31+80]
	032 Move X21, [X31+88]
	033 Move X30, [X31+64]
	034 Add X31, X31, 112
	035 Return X0

Method: UnityEngine.RenderTextureDescriptor GetCompatibleDescriptor(System.Int32 width, System.Int32 height, UnityEngine.Experimental.Rendering.GraphicsFormat format, UnityEngine.Rendering.DepthBits depthBufferBits = 0)

Disassembly:
	0x03A62B2C CBZ W0, 0x3A62B40
	0x03A62B30 CMP W0, 0x1
	0x03A62B34 B.NE 0x3A6358C
	0x03A62B38 MOVZ W8, 0x2
	0x03A62B3C B 0x3A62B44
	0x03A62B40 MOVZ W8, 0x1
	0x03A62B44 LDP W9, W10, [X20 + 0xE0]
	0x03A62B48 ADRP X19, 0x97F000
	0x03A62B4C LDRB W11, [X19 + 0xE38]
	0x03A62B50 ASRV W25, W9, W8
	0x03A62B54 ASRV W24, W10, W8
	0x03A62B58 CMP W25, W24
	0x03A62B5C CSEL W22, W25, W24, GT
	0x03A62B60 CBNZ W11, 0x3A62B78
	0x03A62B64 ADRP X0, 0x691000
	0x03A62B68 LDR X0, [X0 + 0x5A8]
	0x03A62B6C BL 0x1C16CF4
	0x03A62B70 MOVZ W8, 0x1
	0x03A62B74 STRB W8, [X19 + 0xE38]
	0x03A62B78 ADRP X19, 0x691000
	0x03A62B7C LDR X19, [X19 + 0x5A8]
	0x03A62B80 SCVTF S8, W22
	0x03A62B84 LDR X0, [X19]
	0x03A62B88 LDR W8, [X0 + 0xE0]
	0x03A62B8C CBNZ W8, 0x3A62B94
	0x03A62B90 BL 0x1C16DFC
	0x03A62B94 FCVT S0, S8
	0x03A62B98 FMOV D1, 2
	0x03A62B9C MOV X0, X31
	0x03A62BA0 BL 0x337ECD0
	0x03A62BA4 ADRP X22, 0x976000
	0x03A62BA8 LDRB W8, [X22 + 0xA23]
	0x00000000 INVALID
	0x03A62BB0 FMOV S9, -1
	0x03A62BB4 CBNZ W8, 0x3A62BCC
	0x03A62BB8 ADRP X0, 0x691000
	0x03A62BBC LDR X0, [X0 + 0x5A8]
	0x03A62BC0 BL 0x1C16CF4
	0x03A62BC4 MOVZ W8, 0x1
	0x03A62BC8 STRB W8, [X22 + 0xA23]
	0x03A62BCC LDR X0, [X19]
	0x03A62BD0 FADD S8, S8, S9
	0x03A62BD4 LDR W8, [X0 + 0xE0]
	0x03A62BD8 CBNZ W8, 0x3A62BE0
	0x03A62BDC BL 0x1C16DFC
	0x03A62BE0 MOVZ W9, 0x7F800000
	0x03A62BE4 LDR X8, [X20 + 0x1C0]
	0x03A62BE8 FRINTM S0, S8
	0x03A62BEC FMOV S1, W9
	0x03A62BF0 FCVTMS W10, S8
	0x03A62BF4 FCMP S0, S1
	0x03A62BF8 MOVZ W9, 0x80000000
	0x03A62BFC CSEL W19, W9, W10, EQ
	0x03A62C00 CBZ X8, 0x3A63584
	0x03A62C04 LDR X0, [X8 + 0x78]
	0x03A62C08 STR X26, [X31 + 0x10]
	0x03A62C0C CBZ X0, 0x3A63584
	0x03A62C10 LDR X8, [X0]
	0x03A62C14 LDR X9, [X8 + 0x218]
	0x03A62C18 LDR X1, [X8 + 0x220]
	0x03A62C1C BLR X9
	0x03A62C20 LDR X8, [X20 + 0x1C0]

ISIL:
	001 Subtract X31, X31, 208
	002 Move [X31+128], X30
	003 Move [X31+144], X26
	004 Move [X31+152], X25
	005 Move [X31+160], X24
	006 Move [X31+168], X23
	007 Move [X31+176], X22
	008 Move [X31+184], X21
	009 Move [X31+192], X20
	010 Move [X31+200], X19
	011 Move X26, 0x981000
	012 Move X25, 0x6F3000
	013 Move X19, X8
	014 Move W8, [X26+574]
	015 Move X25, [X25+2392]
	016 Move W23, W4
	017 Move W20, W3
	018 Move W21, W2
	019 Move W22, W1
	020 Move X24, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {30}
	025 Move X0, 0x6F3000
	026 Move X0, [X0+2392]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X26+574], W8
	030 Move V2, [X24+240]
	031 Move V0, [X24+256]
	032 Move W8, [X24+272]
	033 Move V1, [X24+14]
	034 Move X0, [X25]
	035 Move [X31+80], V2
	036 Move [X31+88], V0
	037 Move [X31+112], W8
	038 Move [X31+4], V1
	039 Move W8, [X0+224]
	040 Compare W8, 0
	041 JumpIfNotEqual {43}
	042 Call 0x1C17DFC
	043 Move V0, [X31+64]
	044 Move V1, [X31+80]
	045 Move V2, [X31+6]
	046 Move W8, [X31+112]
	047 Add X0, X31, 0
	048 Move W1, W23
	049 Move X2, X31
	050 Move [X31], V0
	051 Move [X31+8], V1
	052 Move [X31+2], V2
	053 Move [X31+48], W8
	054 Call RenderTextureDescriptor.set_depthBufferBits, X0, X1
	055 Move W8, 1
	056 Add X0, X31, 0
	057 Move W1, W20
	058 Move X2, X31
	059 Move [X31+4], W21
	060 Move [X31+8], W8
	061 Move [X31], W22
	062 Call RenderTextureDescriptor.set_graphicsFormat, X0, X1
	063 Move W8, [X31+48]
	064 Move V1, [X31+16]
	065 Move V0, [X31+32]
	066 Move V2, [X31]
	067 Move X22, [X31+176]
	068 Move X21, [X31+184]
	069 Move [X19+48], W8
	070 Move [X19+16], V1
	071 Move [X19+24], V0
	072 Move [X19], V2
	073 Move X20, [X31+192]
	074 Move X19, [X31+200]
	075 Move X24, [X31+160]
	076 Move X23, [X31+168]
	077 Move X26, [X31+144]
	078 Move X25, [X31+152]
	079 Move X30, [X31+128]
	080 Add X31, X31, 208
	081 Return X0

Method: UnityEngine.RenderTextureDescriptor GetCompatibleDescriptor(UnityEngine.RenderTextureDescriptor desc, System.Int32 width, System.Int32 height, UnityEngine.Experimental.Rendering.GraphicsFormat format, UnityEngine.Rendering.DepthBits depthBufferBits = 0)

Disassembly:
	0x03A62C24 CMP W19, W0
	0x03A62C28 CSEL W9, W0, W19, GT
	0x03A62C2C CMP W19, 0x1
	0x03A62C30 CSINC W29, W9, W31, GE
	0x03A62C34 CBZ X8, 0x3A63584
	0x03A62C38 LDR X0, [X8 + 0x58]
	0x03A62C3C CBZ X0, 0x3A63584
	0x03A62C40 LDR X8, [X0]
	0x03A62C44 LDR X9, [X8 + 0x218]
	0x03A62C48 LDR X1, [X8 + 0x220]
	0x03A62C4C BLR X9
	0x03A62C50 LDR X8, [X20 + 0x1C0]
	0x03A62C54 CBZ X8, 0x3A63584
	0x03A62C58 LDR X0, [X8 + 0x40]
	0x03A62C5C CBZ X0, 0x3A63584
	0x03A62C60 LDR X8, [X0]
	0x03A62C64 MOV V8.16B, V0.16B
	0x03A62C68 LDR X9, [X8 + 0x218]
	0x03A62C6C LDR X1, [X8 + 0x220]
	0x03A62C70 BLR X9
	0x03A62C74 MOV X0, X31
	0x03A62C78 BL 0x3C25A10
	0x03A62C7C LDR X8, [X20 + 0x1C0]
	0x03A62C80 CBZ X8, 0x3A63584
	0x03A62C84 LDR X0, [X8 + 0x50]
	0x03A62C88 CBZ X0, 0x3A63584
	0x03A62C8C LDR X8, [X0]
	0x03A62C90 MOV V9.16B, V0.16B

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move W20, W2
	008 Move W21, W1
	009 Move W1, W4
	010 Move X2, X31
	011 Move W19, W3
	012 Move X22, X0
	013 Move X23, X8
	014 Call RenderTextureDescriptor.set_depthBufferBits, X0, X1
	015 Move W8, 1
	016 Move X0, X22
	017 Move W1, W19
	018 Move X2, X31
	019 Move [X22+4], W20
	020 Move [X22+8], W8
	021 Move [X22], W21
	022 Call RenderTextureDescriptor.set_graphicsFormat, X0, X1
	023 Move W8, [X22+48]
	024 Move V1, [X22+16]
	025 Move V0, [X22+32]
	026 Move V2, [X22]
	027 Move X20, [X31+32]
	028 Move X19, [X31+40]
	029 Move X22, [X31+16]
	030 Move X21, [X31+24]
	031 Move [X23+48], W8
	032 Move [X23+16], V1
	033 Move [X23+24], V0
	034 Move [X23], V2
	035 Move X30, [X31+48]
	036 Move X23, [X31+56]
	037 Return X0

Method: System.Boolean RequireSRGBConversionBlitToBackBuffer(ref UnityEngine.Rendering.Universal.CameraData cameraData)

Disassembly:
	0x03A62C94 LDR X9, [X8 + 0x218]
	0x03A62C98 LDR X1, [X8 + 0x220]
	0x03A62C9C BLR X9
	0x03A62CA0 ADRP X8, 0xFFFFFFFFFD088000
	0x03A62CA4 ADRP X9, 0xFFFFFFFFFD088000
	0x03A62CA8 LDR V2, [X8 + 0xC4]
	0x03A62CAC LDR V3, [X9 + 0x200]
	0x03A62CB0 FMOV S1, 1
	0x03A62CB4 LDR X8, [X20 + 0x198]
	0x03A62CB8 FMIN S1, S0, S1
	0x03A62CBC FMUL S1, S1, S2
	0x03A62CC0 FADD S1, S1, S3
	0x03A62CC4 FCMP S0, 0x0

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move X0, X1
	005 Move X1, X31
	006 Call CameraData.get_requireSrgbConversion, X0
	007 Move TEMP, X0
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfNotEqual {14}
	011 Move W8, [X19+566]
	012 NotImplemented "Instruction CMP not yet implemented."
	013 NotImplemented "Instruction CSET not yet implemented."
	014 Move W0, W31
	015 Move X30, [X31+16]
	016 Move X19, [X31+24]
	017 Return X0

Method: System.Boolean RequireHDROutput(ref UnityEngine.Rendering.Universal.CameraData cameraData)

Disassembly:
	0x03A62CC8 FCSEL S10, S1, S3, PL
	0x03A62CCC CBZ X8, 0x3A63584
	0x03A62CD0 ADRP X9, 0x6F4000
	0x03A62CD4 LDR X9, [X9 + 0x550]
	0x03A62CD8 LDR X22, [X8 + 0x40]
	0x03A62CDC LDR X0, [X9]
	0x03A62CE0 LDR W9, [X0 + 0xE0]
	0x03A62CE4 CBNZ W9, 0x3A62CEC
	0x03A62CE8 BL 0x1C16DFC
	0x03A62CEC CBZ X22, 0x3A63584
	0x03A62CF0 ADRP X8, 0x6F4000
	0x03A62CF4 LDR X8, [X8 + 0x550]
	0x03A62CF8 FMOV S0, 0.5

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X1
	004 Move X0, X1
	005 Move X1, X31
	006 Call CameraData.get_isHDROutputActive, X0
	007 Move TEMP, X0
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfNotEqual {14}
	011 Move X8, [X19+400]
	012 NotImplemented "Instruction CMP not yet implemented."
	013 NotImplemented "Instruction CSET not yet implemented."
	014 Move W0, W31
	015 Move X30, [X31+16]
	016 Move X19, [X31+24]
	017 Return X0

Method: System.Void Render(UnityEngine.Rendering.CommandBuffer cmd, ref UnityEngine.Rendering.Universal.RenderingData renderingData)

Disassembly:
	0x03A61434 CBZ X8, 0x3A615C8
	0x03A61438 ADRP X9, 0x6F2000
	0x03A6143C LDR X9, [X9 + 0x98]
	0x03A61440 ADRP X10, 0x6F3000
	0x03A61444 LDR X9, [X9]
	0x03A61448 LDR X10, [X10 + 0x10]
	0x03A6144C LDR X25, [X31 + 0x260]
	0x03A61450 LDR X24, [X31 + 0x240]
	0x03A61454 LDR X9, [X9 + 0xB8]
	0x03A61458 LDR X0, [X10]
	0x03A6145C LDR X21, [X8 + 0x60]
	0x03A61460 LDR X19, [X9]
	0x03A61464 LDR W10, [X0 + 0xE0]
	0x03A61468 CBNZ W10, 0x3A61470
	0x03A6146C BL 0x1C16DFC
	0x03A61470 MOV X0, X25
	0x03A61474 MOV X1, X20
	0x03A61478 MOV X2, X24
	0x03A6147C MOV X3, X19
	0x03A61480 MOV W4, W23
	0x03A61484 MOV W5, W31
	0x03A61488 MOV X6, X21
	0x03A6148C MOV W7, W31
	0x03A61490 STR X31, [X31]
	0x03A61494 BL 0x3A70E0C
	0x03A61498 LDR X8, [X31 + 0x18]
	0x03A6149C LDR X0, [X8]
	0x03A614A0 CBZ X0, 0x3A615CC
	0x03A614A4 MOV X1, X19
	0x03A614A8 MOV X2, X31
	0x03A614AC BL 0x3A4B604
	0x03A614B0 B 0x3A614F4
	0x03A614B4 MOV W23, W31
	0x03A614B8 ADRP X8, 0x6F1000
	0x03A614BC LDR X8, [X8 + 0xE28]
	0x03A614C0 LDR X0, [X8]
	0x03A614C4 LDR W8, [X0 + 0xE0]
	0x03A614C8 CBNZ W8, 0x3A614D0
	0x03A614CC BL 0x1C16DFC
	0x03A614D0 MOVZ W3, 0x2
	0x03A614D4 MOV X0, X20
	0x03A614D8 MOV X1, X21
	0x03A614DC MOV X2, X22
	0x03A614E0 MOV W4, W31
	0x03A614E4 MOV X5, X19
	0x03A614E8 MOV W6, W23
	0x03A614EC MOV X7, X31
	0x03A614F0 BL 0x39E3120
	0x03A614F4 ADD X0, X31, 0x278
	0x03A614F8 MOV X1, X31
	0x03A614FC BL 0x39B1DB4
	0x03A61500 ADD X31, X31, 0x270
	0x03A61504 LDP X20, X19, [X31 + 0x70]
	0x03A61508 LDP X22, X21, [X31 + 0x60]
	0x03A6150C LDP X24, X23, [X31 + 0x50]
	0x03A61510 LDP X26, X25, [X31 + 0x40]
	0x03A61514 LDP X28, X27, [X31 + 0x30]
	0x03A61518 LDP X29, X30, [X31 + 0x20]
	0x03A6151C LDP D9, D8, [X31 + 0x10]
	0x03A61520 LDR V10, [X31], #0x80
	0x03A61524 RET
	0x03A61528 LDRB W8, [X19 + 0x235]
	0x03A6152C B 0x3A61180
	0x03A61530 BL 0x1C16F20
	0x03A61534 BL 0x1C16F20
	0x03A61538 BL 0x1C16F20
	0x03A6153C BL 0x1C16F20
	0x03A61540 BL 0x1C16F20
	0x03A61544 BL 0x1C16F20
	0x03A61548 BL 0x1C16F20
	0x03A6154C BL 0x1C16F20
	0x03A61550 BL 0x1C16F20
	0x03A61554 BL 0x1C16F20
	0x03A61558 BL 0x1C16F20
	0x03A6155C BL 0x1C16F20
	0x03A61560 BL 0x1C16F20
	0x03A61564 BL 0x1C16F20
	0x03A61568 BL 0x1C16F20
	0x03A6156C MOV X0, X26
	0x03A61570 BL 0x1C16F18
	0x03A61574 BL 0x1C16F20
	0x03A61578 BL 0x1C16F20
	0x03A6157C BL 0x1C16F20
	0x03A61580 MOV X0, X26
	0x03A61584 BL 0x1C16F18
	0x03A61588 MOV X0, X26
	0x03A6158C BL 0x1C16F18
	0x03A61590 BL 0x1C16F20
	0x03A61594 BL 0x1C16F20
	0x03A61598 BL 0x1C16F20
	0x03A6159C BL 0x1C16F20
	0x03A615A0 BL 0x1C16F20
	0x03A615A4 BL 0x1C16F20
	0x03A615A8 BL 0x1C16F20
	0x03A615AC BL 0x1C16F20
	0x03A615B0 BL 0x1C16F20
	0x03A615B4 BL 0x1C16F20
	0x03A615B8 BL 0x1C16F20
	0x03A615BC BL 0x1C16F20
	0x03A615C0 BL 0x1C16F20
	0x03A615C4 BL 0x1C16F20
	0x03A615C8 BL 0x1C16F20
	0x03A615CC BL 0x1C16F20
	0x03A615D0 BL 0x1C16F20
	0x03A615D4 BL 0x1C16F20
	0x03A615D8 BL 0x1C16F20
	0x03A615DC BL 0x1C16F20
	0x03A615E0 BL 0x1C16F20
	0x03A615E4 BL 0x1C16F20
	0x03A615E8 B 0x3A61A50
	0x03A615EC B 0x3A61A50
	0x03A615F0 B 0x3A61A50
	0x03A615F4 B 0x3A61A50
	0x03A615F8 B 0x3A61A50
	0x03A615FC B 0x3A61A50
	0x03A61600 B 0x3A61A50
	0x03A61604 B 0x3A61A50
	0x03A61608 B 0x3A61A50
	0x03A6160C B 0x3A61A50
	0x03A61610 B 0x3A61A50
	0x03A61614 B 0x3A61A50
	0x03A61618 B 0x3A61A50
	0x03A6161C B 0x3A61A50
	0x03A61620 B 0x3A61A50
	0x03A61624 B 0x3A61A50
	0x03A61628 B 0x3A61A50
	0x03A6162C B 0x3A61A50
	0x03A61630 B 0x3A61A50
	0x03A61634 B 0x3A61A50
	0x03A61638 B 0x3A61A50
	0x03A6163C B 0x3A61A50
	0x03A61640 B 0x3A61A50
	0x03A61644 B 0x3A61A50
	0x03A61648 B 0x3A61A50
	0x03A6164C B 0x3A61A50
	0x03A61650 B 0x3A61A50
	0x03A61654 B 0x3A61A50
	0x03A61658 B 0x3A61A50
	0x03A6165C B 0x3A61A50
	0x03A61660 B 0x3A61A50
	0x03A61664 B 0x3A61A50
	0x03A61668 B 0x3A61A50
	0x03A6166C B 0x3A61A50
	0x03A61670 B 0x3A61A50
	0x03A61674 B 0x3A61A50
	0x03A61678 B 0x3A61A50
	0x03A6167C B 0x3A61A50
	0x03A61680 B 0x3A61A50
	0x03A61684 B 0x3A61A50
	0x03A61688 B 0x3A61A50
	0x03A6168C B 0x3A61A50
	0x03A61690 B 0x3A61A50
	0x03A61694 B 0x3A61A50
	0x03A61698 B 0x3A6169C
	0x03A6169C MOV X25, X1
	0x03A616A0 MOV X24, X0
	0x03A616A4 CMP W25, 0x1
	0x03A616A8 B.NE 0x3A616C4
	0x03A616AC MOV X0, X24
	0x03A616B0 BL 0x3EB1AD0
	0x03A616B4 LDR X26, [X0]
	0x03A616B8 BL 0x3EB1AE0
	0x03A616BC MOV W22, W31
	0x03A616C0 B 0x3A60ED4
	0x03A616C4 MOV X26, X31
	0x03A616C8 ADD X0, X31, 0x208
	0x03A616CC MOV X1, X31
	0x03A616D0 BL 0x39B1DB4
	0x03A616D4 CBZ X26, 0x3A61A58
	0x03A616D8 MOV X0, X26
	0x03A616DC BL 0x1C16F18
	0x03A616E0 MOV X25, X1
	0x03A616E4 MOV X24, X0
	0x03A616E8 B 0x3A616C8
	0x03A616EC B 0x3A61A50
	0x03A616F0 B 0x3A61A50
	0x03A616F4 B 0x3A61A50
	0x03A616F8 B 0x3A61A50
	0x03A616FC B 0x3A61700
	0x03A61700 MOV X25, X1
	0x03A61704 MOV X24, X0
	0x03A61708 CMP W25, 0x1
	0x03A6170C B.NE 0x3A61728
	0x03A61710 MOV X0, X24
	0x03A61714 BL 0x3EB1AD0
	0x03A61718 LDR X26, [X0]
	0x03A6171C BL 0x3EB1AE0
	0x03A61720 MOV W22, W31
	0x03A61724 B 0x3A60D14
	0x03A61728 MOV X26, X31
	0x03A6172C ADD X0, X31, 0x208
	0x03A61730 MOV X1, X31
	0x03A61734 BL 0x39B1DB4
	0x03A61738 CBZ X26, 0x3A61A58
	0x03A6173C MOV X0, X26
	0x03A61740 BL 0x1C16F18
	0x03A61744 MOV X25, X1
	0x03A61748 MOV X24, X0
	0x03A6174C B 0x3A6172C
	0x03A61750 B 0x3A61A50
	0x03A61754 B 0x3A61A50
	0x03A61758 B 0x3A618DC
	0x03A6175C B 0x3A61990
	0x03A61760 B 0x3A618DC
	0x03A61764 B 0x3A618DC
	0x03A61768 B 0x3A6176C
	0x03A6176C MOV X25, X1
	0x03A61770 MOV X24, X0
	0x03A61774 CMP W25, 0x1
	0x03A61778 B.NE 0x3A61794
	0x03A6177C MOV X0, X24
	0x03A61780 BL 0x3EB1AD0
	0x03A61784 LDR X26, [X0]
	0x03A61788 BL 0x3EB1AE0
	0x03A6178C MOV W22, W31
	0x03A61790 B 0x3A60E2C
	0x03A61794 MOV X26, X31
	0x03A61798 ADD X0, X31, 0x208
	0x03A6179C MOV X1, X31
	0x03A617A0 BL 0x39B1DB4
	0x03A617A4 CBZ X26, 0x3A61A58
	0x03A617A8 MOV X0, X26
	0x03A617AC BL 0x1C16F18
	0x03A617B0 MOV X25, X1
	0x03A617B4 MOV X24, X0
	0x03A617B8 B 0x3A61798
	0x03A617BC B 0x3A61A50
	0x03A617C0 B 0x3A61A50
	0x03A617C4 B 0x3A61A50
	0x03A617C8 B 0x3A61A50
	0x03A617CC B 0x3A61A50
	0x03A617D0 B 0x3A61A50
	0x03A617D4 B 0x3A61A50
	0x03A617D8 B 0x3A61A50
	0x03A617DC B 0x3A61A50
	0x03A617E0 B 0x3A61A50
	0x03A617E4 B 0x3A61A50
	0x03A617E8 B 0x3A61A50
	0x03A617EC B 0x3A61A50
	0x03A617F0 B 0x3A61A50
	0x03A617F4 B 0x3A61A50
	0x03A617F8 B 0x3A61A50
	0x03A617FC B 0x3A61A50
	0x03A61800 B 0x3A61A50
	0x03A61804 B 0x3A61A50
	0x03A61808 B 0x3A61A50
	0x03A6180C B 0x3A61A50
	0x03A61810 B 0x3A61824
	0x03A61814 B 0x3A61934
	0x03A61818 B 0x3A6187C
	0x03A6181C B 0x3A61824
	0x03A61820 B 0x3A6187C
	0x03A61824 MOV X24, X0
	0x03A61828 CMP W1, 0x1
	0x03A6182C B.NE 0x3A61854
	0x03A61830 MOV X0, X24
	0x03A61834 BL 0x3EB1AD0
	0x03A61838 LDR X26, [X0]
	0x03A6183C BL 0x3EB1AE0
	0x03A61840 ADD X0, X31, 0x278
	0x03A61844 MOV X1, X31
	0x03A61848 BL 0x39B1DB4
	0x03A6184C CBZ X26, 0x3A60AA8
	0x03A61850 B 0x3A61A20
	0x03A61854 MOV X26, X31
	0x03A61858 B 0x3A61860
	0x03A6185C MOV X24, X0
	0x03A61860 ADD X0, X31, 0x278
	0x03A61864 MOV X1, X31
	0x03A61868 BL 0x39B1DB4
	0x03A6186C CBZ X26, 0x3A61AA4
	0x03A61870 MOV X0, X26
	0x03A61874 BL 0x1C16F18
	0x03A61878 B 0x3A619F4
	0x03A6187C MOV X24, X0
	0x03A61880 CMP W1, 0x1
	0x03A61884 B.NE 0x3A618AC
	0x03A61888 MOV X0, X24
	0x03A6188C BL 0x3EB1AD0
	0x03A61890 LDR X25, [X0]
	0x03A61894 BL 0x3EB1AE0
	0x03A61898 ADD X0, X31, 0x278
	0x03A6189C MOV X1, X31
	0x03A618A0 BL 0x39B1DB4
	0x03A618A4 CBZ X25, 0x3A60BC8
	0x03A618A8 B 0x3A619BC
	0x03A618AC MOV X25, X31
	0x03A618B0 B 0x3A618B8
	0x03A618B4 MOV X24, X0
	0x03A618B8 ADD X0, X31, 0x278
	0x03A618BC MOV X1, X31
	0x03A618C0 BL 0x39B1DB4
	0x03A618C4 CBZ X25, 0x3A61AA4
	0x03A618C8 MOV X0, X25
	0x03A618CC BL 0x1C16F18
	0x03A618D0 B 0x3A61934
	0x03A618D4 B 0x3A61934
	0x03A618D8 B 0x3A61A50
	0x03A618DC MOV X24, X0
	0x03A618E0 CMP W1, 0x1
	0x03A618E4 B.NE 0x3A6190C
	0x03A618E8 MOV X0, X24
	0x03A618EC BL 0x3EB1AD0
	0x03A618F0 LDR X25, [X0]
	0x03A618F4 BL 0x3EB1AE0
	0x03A618F8 ADD X0, X31, 0x278
	0x03A618FC MOV X1, X31
	0x03A61900 BL 0x39B1DB4
	0x03A61904 CBZ X25, 0x3A60B50
	0x03A61908 B 0x3A619BC
	0x03A6190C MOV X25, X31
	0x03A61910 B 0x3A61918
	0x03A61914 MOV X24, X0
	0x03A61918 ADD X0, X31, 0x278
	0x03A6191C MOV X1, X31
	0x03A61920 BL 0x39B1DB4
	0x03A61924 CBZ X25, 0x3A61AA4
	0x03A61928 MOV X0, X25
	0x03A6192C BL 0x1C16F18
	0x03A61930 B 0x3A61A50
	0x03A61934 MOV X24, X0
	0x03A61938 CMP W1, 0x1
	0x03A6193C B.NE 0x3A61964
	0x03A61940 MOV X0, X24
	0x03A61944 BL 0x3EB1AD0
	0x03A61948 LDR X26, [X0]
	0x03A6194C BL 0x3EB1AE0
	0x03A61950 ADD X0, X31, 0x278
	0x03A61954 MOV X1, X31
	0x03A61958 BL 0x39B1DB4
	0x03A6195C CBZ X26, 0x3A6097C
	0x03A61960 B 0x3A61A20
	0x03A61964 MOV X26, X31
	0x03A61968 B 0x3A61970
	0x03A6196C MOV X24, X0
	0x03A61970 ADD X0, X31, 0x278
	0x03A61974 MOV X1, X31
	0x03A61978 BL 0x39B1DB4
	0x03A6197C CBZ X26, 0x3A61AA4
	0x03A61980 MOV X0, X26
	0x03A61984 BL 0x1C16F18
	0x03A61988 B 0x3A61A50
	0x03A6198C B 0x3A61A50
	0x03A61990 MOV X24, X0
	0x03A61994 CMP W1, 0x1
	0x03A61998 B.NE 0x3A619C4
	0x03A6199C MOV X0, X24
	0x03A619A0 BL 0x3EB1AD0
	0x03A619A4 LDR X25, [X0]
	0x03A619A8 BL 0x3EB1AE0
	0x03A619AC ADD X0, X31, 0x278
	0x03A619B0 MOV X1, X31
	0x03A619B4 BL 0x39B1DB4
	0x03A619B8 CBZ X25, 0x3A60C48
	0x03A619BC MOV X0, X25
	0x03A619C0 BL 0x1C16F18
	0x03A619C4 MOV X25, X31
	0x03A619C8 B 0x3A619D0
	0x03A619CC MOV X24, X0
	0x03A619D0 ADD X0, X31, 0x278
	0x03A619D4 MOV X1, X31
	0x03A619D8 BL 0x39B1DB4
	0x03A619DC CBZ X25, 0x3A61AA4
	0x03A619E0 MOV X0, X25
	0x03A619E4 BL 0x1C16F18
	0x03A619E8 B 0x3A61A50
	0x03A619EC B 0x3A61A50
	0x03A619F0 B 0x3A61A50
	0x03A619F4 MOV X24, X0
	0x03A619F8 CMP W1, 0x1
	0x03A619FC B.NE 0x3A61A28
	0x03A61A00 MOV X0, X24
	0x03A61A04 BL 0x3EB1AD0
	0x03A61A08 LDR X26, [X0]
	0x03A61A0C BL 0x3EB1AE0
	0x03A61A10 ADD X0, X31, 0x278
	0x03A61A14 MOV X1, X31
	0x03A61A18 BL 0x39B1DB4
	0x03A61A1C CBZ X26, 0x3A609F4
	0x03A61A20 MOV X0, X26
	0x03A61A24 BL 0x1C16F18
	0x03A61A28 MOV X26, X31
	0x03A61A2C B 0x3A61A34
	0x03A61A30 MOV X24, X0
	0x03A61A34 ADD X0, X31, 0x278
	0x03A61A38 MOV X1, X31
	0x03A61A3C BL 0x39B1DB4
	0x03A61A40 CBZ X26, 0x3A61AA4
	0x03A61A44 MOV X0, X26
	0x03A61A48 BL 0x1C16F18
	0x03A61A4C B 0x3A61A50
	0x03A61A50 MOV X25, X1
	0x03A61A54 MOV X24, X0
	0x03A61A58 CMP W25, 0x1
	0x03A61A5C B.NE 0x3A61A88
	0x03A61A60 MOV X0, X24
	0x03A61A64 BL 0x3EB1AD0
	0x03A61A68 LDR X19, [X0]
	0x03A61A6C BL 0x3EB1AE0
	0x03A61A70 ADD X0, X31, 0x278
	0x03A61A74 MOV X1, X31
	0x03A61A78 BL 0x39B1DB4
	0x03A61A7C CBZ X19, 0x3A61500
	0x03A61A80 MOV X0, X19
	0x03A61A84 BL 0x1C16F18
	0x03A61A88 MOV X19, X31
	0x03A61A8C B 0x3A61A94
	0x03A61A90 MOV X24, X0
	0x03A61A94 ADD X0, X31, 0x278
	0x03A61A98 MOV X1, X31
	0x03A61A9C BL 0x39B1DB4
	0x03A61AA0 CBNZ X19, 0x3A61AAC
	0x03A61AA4 MOV X0, X24
	0x03A61AA8 BL 0x1D2C690
	0x03A61AAC MOV X0, X19
	0x03A61AB0 BL 0x1C16F18
	0x03A61AB4 BL 0x1990590
	0x03A61AB8 SUB X31, X31, 0x70
	0x03A61ABC STR X30, [X31 + 0x40]
	0x03A61AC0 STP X22, X21, [X31 + 0x50]
	0x03A61AC4 STP X20, X19, [X31 + 0x60]
	0x03A61AC8 MOV X19, X0
	0x03A61ACC LDR W20, [X0 + 0xE0]!
	0x03A61AD0 LDR W21, [X19 + 0xE4]
	0x03A61AD4 MOV X1, X31
	0x03A61AD8 MOV X22, X8
	0x03A61ADC BL 0x3C22060
	0x03A61AE0 MOV W3, W0
	0x03A61AE4 ADD X8, X31, 0x8
	0x03A61AE8 MOV X0, X19
	0x03A61AEC MOV W1, W20
	0x03A61AF0 MOV W2, W21
	0x03A61AF4 MOV W4, W31
	0x03A61AF8 BL 0x3A61B2C
	0x03A61AFC LDR W8, [X31 + 0x38]
	0x03A61B00 LDUR V0, [X31 + 0x28]
	0x03A61B04 LDUR V1, [X31 + 0x18]
	0x03A61B08 LDUR V2, [X31 + 0x8]
	0x03A61B0C STR W8, [X22 + 0x30]
	0x03A61B10 LDP X20, X19, [X31 + 0x60]
	0x03A61B14 STP V1, V0, [X22 + 0x10]
	0x03A61B18 STR V2, [X22]
	0x03A61B1C LDP X22, X21, [X31 + 0x50]
	0x03A61B20 LDR X30, [X31 + 0x40]
	0x03A61B24 ADD X31, X31, 0x70
	0x03A61B28 RET
	0x03A61B2C SUB X31, X31, 0xD0
	0x03A61B30 STR X30, [X31 + 0x80]
	0x03A61B34 STP X26, X25, [X31 + 0x90]
	0x03A61B38 STP X24, X23, [X31 + 0xA0]
	0x03A61B3C STP X22, X21, [X31 + 0xB0]
	0x03A61B40 STP X20, X19, [X31 + 0xC0]
	0x03A61B44 ADRP X26, 0x981000
	0x03A61B48 ADRP X25, 0x6F3000
	0x03A61B4C MOV X19, X8
	0x03A61B50 LDRB W8, [X26 + 0x23E]
	0x03A61B54 LDR X25, [X25 + 0x958]
	0x03A61B58 MOV W23, W4
	0x03A61B5C MOV W20, W3
	0x03A61B60 MOV W21, W2
	0x03A61B64 MOV W22, W1
	0x03A61B68 MOV X24, X0
	0x03A61B6C TBNZ X8, 0x0, 0x3A61B84
	0x03A61B70 ADRP X0, 0x6F3000
	0x03A61B74 LDR X0, [X0 + 0x958]
	0x03A61B78 BL 0x1C16CF4
	0x03A61B7C MOVZ W8, 0x1
	0x03A61B80 STRB W8, [X26 + 0x23E]
	0x03A61B84 LDP V2, V0, [X24 + 0xF0]
	0x03A61B88 LDR W8, [X24 + 0x110]
	0x03A61B8C LDR V1, [X24 + 0xE]
	0x03A61B90 LDR X0, [X25]
	0x03A61B94 STP V2, V0, [X31 + 0x50]
	0x03A61B98 STR W8, [X31 + 0x70]
	0x03A61B9C STR V1, [X31 + 0x4]
	0x03A61BA0 LDR W8, [X0 + 0xE0]
	0x03A61BA4 CBNZ W8, 0x3A61BAC
	0x03A61BA8 BL 0x1C16DFC
	0x03A61BAC LDP V0, V1, [X31 + 0x40]
	0x03A61BB0 LDR V2, [X31 + 0x6]
	0x03A61BB4 LDR W8, [X31 + 0x70]
	0x03A61BB8 ADD X0, X31, 0x0
	0x03A61BBC MOV W1, W23
	0x03A61BC0 MOV X2, X31
	0x03A61BC4 STP V0, V1, [X31]
	0x03A61BC8 STR V2, [X31 + 0x2]
	0x03A61BCC STR W8, [X31 + 0x30]
	0x03A61BD0 BL 0x3C22520
	0x03A61BD4 MOVZ W8, 0x1
	0x03A61BD8 ADD X0, X31, 0x0
	0x03A61BDC MOV W1, W20
	0x03A61BE0 MOV X2, X31
	0x03A61BE4 STP W21, W8, [X31 + 0x4]
	0x03A61BE8 STR W22, [X31]
	0x03A61BEC BL 0x3C2240C
	0x03A61BF0 LDR W8, [X31 + 0x30]
	0x03A61BF4 LDP V1, V0, [X31 + 0x10]
	0x03A61BF8 LDR V2, [X31]
	0x03A61BFC LDP X22, X21, [X31 + 0xB0]
	0x03A61C00 STR W8, [X19 + 0x30]
	0x03A61C04 STP V1, V0, [X19 + 0x10]
	0x03A61C08 STR V2, [X19]
	0x03A61C0C LDP X20, X19, [X31 + 0xC0]
	0x03A61C10 LDP X24, X23, [X31 + 0xA0]
	0x03A61C14 LDP X26, X25, [X31 + 0x90]
	0x03A61C18 LDR X30, [X31 + 0x80]
	0x03A61C1C ADD X31, X31, 0xD0
	0x03A61C20 RET
	0x03A61C24 STP X30, X23, [X31 - 0x30]!
	0x03A61C28 STP X22, X21, [X31 + 0x10]
	0x03A61C2C STP X20, X19, [X31 + 0x20]
	0x03A61C30 MOV W20, W2
	0x03A61C34 MOV W21, W1
	0x03A61C38 MOV W1, W4
	0x03A61C3C MOV X2, X31
	0x03A61C40 MOV W19, W3
	0x03A61C44 MOV X22, X0
	0x03A61C48 MOV X23, X8
	0x03A61C4C BL 0x3C22520
	0x03A61C50 MOVZ W8, 0x1
	0x03A61C54 MOV X0, X22
	0x03A61C58 MOV W1, W19
	0x03A61C5C MOV X2, X31
	0x03A61C60 STP W20, W8, [X22 + 0x4]
	0x03A61C64 STR W21, [X22]
	0x03A61C68 BL 0x3C2240C
	0x03A61C6C LDR W8, [X22 + 0x30]
	0x03A61C70 LDP V1, V0, [X22 + 0x10]
	0x03A61C74 LDR V2, [X22]
	0x03A61C78 LDP X20, X19, [X31 + 0x20]
	0x03A61C7C LDP X22, X21, [X31 + 0x10]
	0x03A61C80 STR W8, [X23 + 0x30]
	0x03A61C84 STP V1, V0, [X23 + 0x10]
	0x03A61C88 STR V2, [X23]
	0x03A61C8C LDP X30, X23, [X31], #0x30
	0x03A61C90 RET
	0x03A61C94 STP X30, X19, [X31 - 0x10]!
	0x03A61C98 MOV X19, X0
	0x03A61C9C MOV X0, X1
	0x03A61CA0 MOV X1, X31
	0x03A61CA4 BL 0x3A93110
	0x03A61CA8 TBZ X0, 0x0, 0x3A61CBC
	0x03A61CAC LDRB W8, [X19 + 0x236]
	0x03A61CB0 CMP W8, 0x0
	0x03A61CB4 CSET W0, NE
	0x03A61CB8 B 0x3A61CC0
	0x03A61CBC MOV W0, W31
	0x03A61CC0 LDP X30, X19, [X31], #0x10
	0x03A61CC4 RET
	0x03A61CC8 STP X30, X19, [X31 - 0x10]!
	0x03A61CCC MOV X19, X1
	0x03A61CD0 MOV X0, X1
	0x03A61CD4 MOV X1, X31
	0x03A61CD8 BL 0x3A9006C
	0x03A61CDC TBZ X0, 0x0, 0x3A61CF0
	0x03A61CE0 LDR X8, [X19 + 0x190]
	0x03A61CE4 CMP X8, 0x0
	0x03A61CE8 CSET W0, EQ
	0x03A61CEC B 0x3A61CF4
	0x03A61CF0 MOV W0, W31
	0x03A61CF4 LDP X30, X19, [X31], #0x10
	0x03A61CF8 RET
	0x03A61CFC LDR X0, [X1]
	0x03A61D00 RET
	0x03A61D04 SUB X31, X31, 0xA0
	0x03A61D08 STP X30, X21, [X31 + 0x80]
	0x03A61D0C STP X20, X19, [X31 + 0x90]
	0x03A61D10 ADRP X21, 0x981000
	0x03A61D14 LDRB W8, [X21 + 0x254]
	0x03A61D18 MOV X19, X1
	0x03A61D1C MOV X20, X0
	0x03A61D20 TBNZ X8, 0x0, 0x3A61D50
	0x03A61D24 ADRP X0, 0x6F3000
	0x03A61D28 LDR X0, [X0 + 0x10]
	0x03A61D2C BL 0x1C16CF4
	0x03A61D30 ADRP X0, 0x6F5000
	0x03A61D34 LDR X0, [X0 + 0x618]
	0x03A61D38 BL 0x1C16CF4
	0x03A61D3C ADRP X0, 0x6F5000
	0x03A61D40 LDR X0, [X0 + 0x620]
	0x03A61D44 BL 0x1C16CF4
	0x03A61D48 MOVZ W8, 0x1
	0x03A61D4C STRB W8, [X21 + 0x254]
	0x03A61D50 MOVI V0.2D, 0x0
	0x03A61D54 STR W31, [X31 + 0x70]
	0x03A61D58 STP V0, V0, [X31 + 0x50]
	0x03A61D5C STR V0, [X31 + 0x4]
	0x03A61D60 LDR X0, [X19 + 0x8]
	0x03A61D64 CBZ X0, 0x3A61DD0
	0x03A61D68 LDR X8, [X20 + 0x118]
	0x03A61D6C CMP X0, X8
	0x03A61D70 B.NE 0x3A61E4C
	0x03A61D74 LDR W8, [X20 + 0xE8]
	0x03A61D78 CMP W8, 0x2
	0x03A61D7C B.LT 0x3A61E4C
	0x03A61D80 ADD X8, X31, 0x8
	0x03A61D84 MOV X0, X20
	0x03A61D88 ADD X21, X20, 0x190
	0x03A61D8C BL 0x3A61AB8
	0x03A61D90 ADRP X9, 0x6F3000
	0x03A61D94 LDR W8, [X31 + 0x38]
	0x03A61D98 LDUR V0, [X31 + 0x28]
	0x03A61D9C LDUR V1, [X31 + 0x18]
	0x03A61DA0 LDUR V2, [X31 + 0x8]
	0x03A61DA4 LDR X9, [X9 + 0x10]
	0x03A61DA8 STR W8, [X31 + 0x70]
	0x03A61DAC STP V1, V0, [X31 + 0x50]
	0x03A61DB0 STR V2, [X31 + 0x4]
	0x03A61DB4 LDR X0, [X9]
	0x03A61DB8 LDR W8, [X0 + 0xE0]
	0x03A61DBC CBNZ W8, 0x3A61DC4
	0x03A61DC0 BL 0x1C16DFC
	0x03A61DC4 ADRP X8, 0x6F5000
	0x03A61DC8 LDR X8, [X8 + 0x618]
	0x03A61DCC B 0x3A61E1C
	0x03A61DD0 ADD X8, X31, 0x8
	0x03A61DD4 MOV X0, X20
	0x03A61DD8 ADD X21, X20, 0x188
	0x03A61DDC BL 0x3A61AB8
	0x03A61DE0 ADRP X9, 0x6F3000
	0x03A61DE4 LDR W8, [X31 + 0x38]
	0x03A61DE8 LDUR V0, [X31 + 0x28]
	0x03A61DEC LDUR V1, [X31 + 0x18]
	0x03A61DF0 LDUR V2, [X31 + 0x8]
	0x03A61DF4 LDR X9, [X9 + 0x10]
	0x03A61DF8 STR W8, [X31 + 0x70]
	0x03A61DFC STP V1, V0, [X31 + 0x50]
	0x03A61E00 STR V2, [X31 + 0x4]
	0x03A61E04 LDR X0, [X9]
	0x03A61E08 LDR W8, [X0 + 0xE0]
	0x03A61E0C CBNZ W8, 0x3A61E14
	0x03A61E10 BL 0x1C16DFC
	0x03A61E14 ADRP X8, 0x6F5000
	0x03A61E18 LDR X8, [X8 + 0x620]
	0x03A61E1C LDR X6, [X8]
	0x03A61E20 ADD X1, X31, 0x40
	0x03A61E24 FMOV S0, W31
	0x03A61E28 MOVZ W2, 0x1
	0x03A61E2C MOVZ W3, 0x1
	0x03A61E30 MOVZ W5, 0x1
	0x03A61E34 MOV X0, X21
	0x03A61E38 MOV W4, W31
	0x03A61E3C MOV X7, X31
	0x03A61E40 BL 0x3A6D184
	0x03A61E44 LDR X0, [X21]
	0x03A61E48 STR X0, [X19 + 0x8]
	0x03A61E4C LDP X20, X19, [X31 + 0x90]
	0x03A61E50 LDP X30, X21, [X31 + 0x80]
	0x03A61E54 ADD X31, X31, 0xA0
	0x03A61E58 RET
	0x03A61E5C STR X30, [X31 - 0x30]!
	0x03A61E60 STP X22, X21, [X31 + 0x10]
	0x03A61E64 STP X20, X19, [X31 + 0x20]
	0x03A61E68 ADRP X22, 0x981000
	0x03A61E6C LDRB W8, [X22 + 0x255]
	0x03A61E70 MOV X19, X2
	0x03A61E74 MOV X20, X1
	0x03A61E78 MOV X21, X0
	0x03A61E7C TBNZ X8, 0x0, 0x3A61EA0
	0x03A61E80 ADRP X0, 0x6F5000
	0x03A61E84 LDR X0, [X0 + 0x628]
	0x03A61E88 BL 0x1C16CF4
	0x03A61E8C ADRP X0, 0x6BA000
	0x03A61E90 LDR X0, [X0 + 0x8F8]
	0x03A61E94 BL 0x1C16CF4
	0x03A61E98 MOVZ W8, 0x1
	0x03A61E9C STRB W8, [X22 + 0x255]
	0x03A61EA0 LDR W8, [X19 + 0x18]
	0x03A61EA4 SUB W8, W8, 0x1
	0x03A61EA8 STR W8, [X19 + 0x18]
	0x03A61EAC LDRB W8, [X21 + 0x23A]
	0x03A61EB0 CBZ W8, 0x3A61F3C
	0x03A61EB4 LDR X0, [X20]
	0x03A61EB8 CBZ X0, 0x3A61F7C
	0x03A61EBC LDR X8, [X0]
	0x03A61EC0 LDR X1, [X19 + 0x20]
	0x03A61EC4 LDR X9, [X8 + 0x238]
	0x03A61EC8 LDR X2, [X8 + 0x240]
	0x03A61ECC BLR X9
	0x03A61ED0 LDR X0, [X20]
	0x03A61ED4 CBZ X0, 0x3A61F7C
	0x03A61ED8 MOV X1, X31
	0x03A61EDC BL 0x3A44BD0
	0x03A61EE0 LDR W8, [X19 + 0x18]
	0x03A61EE4 STR X0, [X19]
	0x03A61EE8 CBNZ W8, 0x3A61F10
	0x03A61EEC LDRB W8, [X21 + 0x235]
	0x03A61EF0 CBNZ W8, 0x3A61F10
	0x03A61EF4 LDR X0, [X20]
	0x03A61EF8 CBZ X0, 0x3A61F7C
	0x03A61EFC LDR X8, [X0]
	0x03A61F00 MOVZ W1, 0x1
	0x03A61F04 LDR X9, [X8 + 0x248]
	0x03A61F08 LDR X2, [X8 + 0x250]
	0x03A61F0C BLR X9
	0x03A61F10 LDR X0, [X20]
	0x03A61F14 CBZ X0, 0x3A61F7C
	0x03A61F18 LDR X8, [X0]
	0x03A61F1C LDR X1, [X19 + 0x20]
	0x03A61F20 LDP X9, X2, [X8 + 0x198]
	0x03A61F24 BLR X9
	0x03A61F28 STR X0, [X19 + 0x8]
	0x03A61F2C LDP X20, X19, [X31 + 0x20]
	0x03A61F30 LDP X22, X21, [X31 + 0x10]
	0x03A61F34 LDR X30, [X31], #0x30
	0x03A61F38 RET
	0x03A61F3C ADRP X8, 0x6BA000
	0x03A61F40 LDR X8, [X8 + 0x8F8]
	0x03A61F44 ADD X20, X19, 0x8
	0x03A61F48 LDR X0, [X8]
	0x03A61F4C LDR W8, [X0 + 0xE0]
	0x03A61F50 CBNZ W8, 0x3A61F58
	0x03A61F54 BL 0x1C16DFC
	0x03A61F58 ADRP X8, 0x6F5000
	0x03A61F5C LDR X8, [X8 + 0x628]
	0x03A61F60 MOV X0, X19
	0x03A61F64 MOV X1, X20
	0x03A61F68 LDP X20, X19, [X31 + 0x20]
	0x03A61F6C LDR X2, [X8]
	0x03A61F70 LDP X22, X21, [X31 + 0x10]
	0x03A61F74 LDR X30, [X31], #0x30
	0x03A61F78 B 0x21A82A0
	0x03A61F7C BL 0x1C16F20
	0x03A61F80 STR D12, [X31 - 0x90]!
	0x03A61F84 STP D11, D10, [X31 + 0x10]
	0x03A61F88 STP D9, D8, [X31 + 0x20]
	0x03A61F8C STP X29, X30, [X31 + 0x30]
	0x03A61F90 STP X28, X27, [X31 + 0x40]
	0x03A61F94 STP X26, X25, [X31 + 0x50]
	0x03A61F98 STP X24, X23, [X31 + 0x60]
	0x03A61F9C STP X22, X21, [X31 + 0x70]
	0x03A61FA0 STP X20, X19, [X31 + 0x80]
	0x03A61FA4 SUB X31, X31, 0x170
	0x03A61FA8 ADRP X22, 0x981000
	0x03A61FAC LDRB W8, [X22 + 0x240]
	0x03A61FB0 MOV X29, X4
	0x03A61FB4 MOV X20, X3
	0x03A61FB8 MOV X21, X2
	0x03A61FBC MOV X23, X1
	0x03A61FC0 MOV X24, X0
	0x03A61FC4 TBNZ X8, 0x0, 0x3A6203C
	0x03A61FC8 ADRP X0, 0x6F1000
	0x03A61FCC LDR X0, [X0 + 0xE28]
	0x03A61FD0 BL 0x1C16CF4
	0x03A61FD4 ADRP X0, 0x6F3000
	0x03A61FD8 LDR X0, [X0 + 0x10]
	0x03A61FDC BL 0x1C16CF4
	0x03A61FE0 ADRP X0, 0x6F5000
	0x03A61FE4 LDR X0, [X0 + 0x550]
	0x03A61FE8 BL 0x1C16CF4
	0x03A61FEC ADRP X0, 0x6F5000
	0x03A61FF0 LDR X0, [X0 + 0x630]
	0x03A61FF4 BL 0x1C16CF4
	0x03A61FF8 ADRP X0, 0x6F5000
	0x03A61FFC LDR X0, [X0 + 0x638]
	0x03A62000 BL 0x1C16CF4
	0x03A62004 ADRP X0, 0x6F4000
	0x03A62008 LDR X0, [X0 + 0x640]
	0x03A6200C BL 0x1C16CF4
	0x03A62010 ADRP X0, 0x6F4000
	0x03A62014 LDR X0, [X0 + 0x648]
	0x03A62018 BL 0x1C16CF4
	0x03A6201C ADRP X0, 0x6F4000
	0x03A62020 LDR X0, [X0 + 0x650]
	0x03A62024 BL 0x1C16CF4
	0x03A62028 ADRP X0, 0x6F4000
	0x03A6202C LDR X0, [X0 + 0x658]
	0x03A62030 BL 0x1C16CF4
	0x03A62034 MOVZ W8, 0x1
	0x03A62038 STRB W8, [X22 + 0x240]
	0x03A6203C ADRP X19, 0x977000
	0x03A62040 LDRB W8, [X19 + 0x78F]
	0x03A62044 MOVI V0.2D, 0x0
	0x03A62048 STR W31, [X31 + 0x160]
	0x03A6204C STP V0, V0, [X31 + 0x140]
	0x03A62050 STR V0, [X31 + 0x13]
	0x03A62054 CBNZ W8, 0x3A6206C
	0x03A62058 ADRP X0, 0x699000
	0x03A6205C LDR X0, [X0 + 0xF08]
	0x03A62060 BL 0x1C16CF4
	0x03A62064 MOVZ W8, 0x1
	0x03A62068 STRB W8, [X19 + 0x78F]
	0x03A6206C LDR X8, [X24 + 0x198]
	0x03A62070 CBZ X8, 0x3A62568
	0x03A62074 LDR X9, [X24 + 0x128]
	0x03A62078 CBZ X9, 0x3A62568
	0x03A6207C ADRP X10, 0x699000
	0x03A62080 LDR X10, [X10 + 0xF08]
	0x03A62084 ADRP X27, 0x6F2000
	0x03A62088 MOVZ W0, 0x2
	0x03A6208C MOV X1, X31
	0x03A62090 LDR X10, [X10]
	0x03A62094 LDR X27, [X27 + 0x10]
	0x03A62098 LDUR V0, [X9 + 0x28]
	0x03A6209C LDUR V1, [X9 + 0x38]
	0x03A620A0 LDR X10, [X10 + 0xB8]
	0x03A620A4 LDR X9, [X9 + 0x48]
	0x03A620A8 LDP S11, S12, [X23 + 0xD8]
	0x03A620AC LDR X22, [X8 + 0x18]
	0x03A620B0 LDP S8, S9, [X10]
	0x03A620B4 ADD X8, X31, 0x58
	0x03A620B8 STR X9, [X31 + 0xB0]
	0x03A620BC STP V0, V1, [X31 + 0x90]
	0x03A620C0 BL 0x3C4B204
	0x03A620C4 LDUR V0, [X31 + 0x58]
	0x03A620C8 LDUR V1, [X31 + 0x68]
	0x03A620CC LDR X8, [X31 + 0x78]
	0x03A620D0 LDP V2, V3, [X31 + 0x90]
	0x03A620D4 LDR X9, [X31 + 0xB0]
	0x03A620D8 ADD X0, X31, 0x100
	0x03A620DC ADD X1, X31, 0xD0
	0x03A620E0 MOV X2, X31
	0x03A620E4 STP V0, V1, [X31 + 0xD0]
	0x03A620E8 STR X8, [X31 + 0xF0]
	0x03A620EC STP V2, V3, [X31 + 0x100]
	0x03A620F0 STR X9, [X31 + 0x120]
	0x03A620F4 BL 0x3C4B6D8
	0x03A620F8 TBNZ X0, 0x0, 0x3A62110
	0x03A620FC LDR W8, [X24 + 0xE8]
	0x03A62100 CMP W8, 0x2
	0x03A62104 B.GE 0x3A62110
	0x03A62108 LDR X25, [X24 + 0x128]
	0x03A6210C B 0x3A62188
	0x03A62110 LDP W1, W2, [X24 + 0xE0]
	0x03A62114 ADRP X19, 0x6F4000
	0x03A62118 LDR X19, [X19 + 0x648]
	0x03A6211C ADD X8, X31, 0x90
	0x03A62120 MOVZ W4, 0x18
	0x03A62124 MOV X0, X24
	0x03A62128 MOV W3, W31
	0x03A6212C ADD X25, X24, 0x180
	0x03A62130 BL 0x3A61B2C
	0x03A62134 LDR W8, [X31 + 0xC0]
	0x03A62138 LDP V1, V0, [X31 + 0xA0]
	0x03A6213C LDR V2, [X31 + 0x9]
	0x03A62140 LDR X0, [X27]
	0x03A62144 STR W8, [X31 + 0x160]
	0x03A62148 STP V1, V0, [X31 + 0x140]
	0x03A6214C STR V2, [X31 + 0x13]
	0x03A62150 LDR W8, [X0 + 0xE0]
	0x03A62154 CBNZ W8, 0x3A6215C
	0x03A62158 BL 0x1C16DFC
	0x03A6215C LDR X6, [X19]
	0x03A62160 ADD X1, X31, 0x130
	0x03A62164 FMOV S0, W31
	0x03A62168 MOVZ W2, 0x1
	0x03A6216C MOVZ W3, 0x1
	0x03A62170 MOVZ W5, 0x1
	0x03A62174 MOV X0, X25
	0x03A62178 MOV W4, W31
	0x03A6217C MOV X7, X31
	0x03A62180 BL 0x3A6D184
	0x03A62184 LDR X25, [X25]
	0x03A62188 LDP W1, W2, [X24 + 0xE0]
	0x03A6218C LDR W3, [X24 + 0x208]
	0x03A62190 ADRP X19, 0x6F4000
	0x03A62194 ADRP X28, 0x6F4000
	0x03A62198 LDR X19, [X19 + 0x650]
	0x03A6219C LDR X28, [X28 + 0x638]
	0x03A621A0 ADD X8, X31, 0x90
	0x03A621A4 MOV X0, X24
	0x03A621A8 MOV W4, W31
	0x03A621AC ADD X26, X24, 0x178
	0x03A621B0 BL 0x3A61B2C
	0x03A621B4 LDR W8, [X31 + 0xC0]
	0x03A621B8 LDP V1, V0, [X31 + 0xA0]
	0x03A621BC LDR V2, [X31 + 0x9]
	0x03A621C0 LDR X0, [X27]
	0x03A621C4 STR W8, [X31 + 0x160]
	0x03A621C8 STP V1, V0, [X31 + 0x140]
	0x03A621CC STR V2, [X31 + 0x13]
	0x03A621D0 LDR W8, [X0 + 0xE0]
	0x03A621D4 CBNZ W8, 0x3A621DC
	0x03A621D8 BL 0x1C16DFC
	0x03A621DC LDR X6, [X19]
	0x03A621E0 ADD X1, X31, 0x130
	0x03A621E4 FMOV S0, W31
	0x03A621E8 MOVZ W2, 0x1
	0x03A621EC MOVZ W3, 0x1
	0x03A621F0 MOVZ W5, 0x1
	0x03A621F4 MOV X0, X26
	0x03A621F8 MOV W4, W31
	0x03A621FC MOV X7, X31
	0x03A62200 BL 0x3A6D184
	0x03A62204 LDP W1, W2, [X24 + 0xE0]
	0x03A62208 ADD X8, X31, 0x58
	0x03A6220C MOVZ W3, 0x8
	0x03A62210 MOV X0, X24
	0x03A62214 MOV W4, W31
	0x03A62218 ADD X27, X24, 0x170
	0x03A6221C BL 0x3A61B2C
	0x03A62220 LDUR V0, [X31 + 0x58]
	0x03A62224 LDUR V1, [X31 + 0x68]
	0x03A62228 LDUR V2, [X31 + 0x78]
	0x03A6222C LDR W8, [X31 + 0x88]
	0x03A62230 LDR X6, [X28]
	0x03A62234 STP V0, V1, [X31 + 0x130]
	0x03A62238 ADD X1, X31, 0x130
	0x03A6223C FMOV S0, W31
	0x03A62240 MOVZ W3, 0x1
	0x03A62244 MOVZ W5, 0x1
	0x03A62248 MOV X0, X27
	0x03A6224C MOV W2, W31
	0x03A62250 MOV W4, W31
	0x03A62254 MOV X7, X31
	0x03A62258 STR V2, [X31 + 0x15]
	0x03A6225C STR W8, [X31 + 0x160]
	0x03A62260 BL 0x3A6D184
	0x03A62264 LDR X0, [X24 + 0x178]
	0x03A62268 CBZ X0, 0x3A62568
	0x03A6226C LDRB W8, [X0 + 0xA8]
	0x03A62270 CBZ W8, 0x3A62288
	0x03A62274 ADD X8, X31, 0x90
	0x03A62278 MOV X1, X31
	0x03A6227C BL 0x39D48AC
	0x03A62280 LDR X19, [X31 + 0xA8]
	0x03A62284 B 0x3A622C4
	0x03A62288 LDR X0, [X0 + 0x18]
	0x03A6228C CBZ X0, 0x3A62568
	0x03A62290 LDR X8, [X0]
	0x03A62294 LDP X9, X1, [X8 + 0x188]
	0x03A62298 BLR X9
	0x03A6229C LDR X8, [X26]
	0x03A622A0 CBZ X8, 0x3A62568
	0x03A622A4 MOV W28, W0
	0x03A622A8 LDR X0, [X8 + 0x18]
	0x03A622AC CBZ X0, 0x3A62568
	0x03A622B0 LDR X8, [X0]
	0x03A622B4 LDP X9, X1, [X8 + 0x1A8]
	0x03A622B8 BLR X9
	0x03A622BC MOV W19, W28
	0x03A622C0 BFM X19, X0, 0x20, 0x1F
	0x03A622C4 ADRP X28, 0x6F4000
	0x03A622C8 LDR X28, [X28 + 0x550]
	0x03A622CC LDR X0, [X28]
	0x03A622D0 LDR W8, [X0 + 0xE0]
	0x03A622D4 CBNZ W8, 0x3A622DC
	0x03A622D8 BL 0x1C16DFC
	0x03A622DC CBZ X22, 0x3A62568
	0x03A622E0 LDR X8, [X28]
	0x03A622E4 UBFM X9, X19, 0x20, 0x3F
	0x03A622E8 SCVTF S2, W19
	0x03A622EC SCVTF S3, W9
	0x03A622F0 LDR X8, [X8 + 0xB8]
	0x03A622F4 FMOV S0, 1
	0x03A622F8 FDIV S1, S0, S3
	0x03A622FC FDIV S0, S0, S2
	0x03A62300 LDR W1, [X8 + 0x30]
	0x03A62304 MOV X0, X22
	0x03A62308 MOV X2, X31
	0x03A6230C BL 0x3C15D80
	0x03A62310 LDR X8, [X24 + 0x1A0]
	0x03A62314 CBZ X8, 0x3A62568
	0x03A62318 LDR X8, [X8 + 0x20]
	0x03A6231C CBZ X8, 0x3A62568
	0x03A62320 LDR X9, [X28]
	0x03A62324 LDR X2, [X8 + 0x20]
	0x03A62328 MOV X0, X22
	0x03A6232C MOV X3, X31
	0x03A62330 LDR X9, [X9 + 0xB8]
	0x03A62334 LDR W1, [X9 + 0x34]
	0x03A62338 BL 0x3C14C34
	0x03A6233C LDR X8, [X24 + 0x1A0]
	0x03A62340 CBZ X8, 0x3A62568
	0x03A62344 LDR X8, [X8 + 0x20]
	0x03A62348 CBZ X8, 0x3A62568
	0x03A6234C LDR X9, [X28]
	0x03A62350 LDR X2, [X8 + 0x28]
	0x03A62354 MOV X0, X22
	0x03A62358 MOV X3, X31
	0x03A6235C LDR X9, [X9 + 0xB8]
	0x03A62360 LDR W1, [X9 + 0x38]
	0x03A62364 BL 0x3C14C34
	0x03A62368 LDR X8, [X28]
	0x03A6236C MOV X0, X22
	0x03A62370 MOV X2, X31
	0x03A62374 LDR X8, [X8 + 0xB8]
	0x03A62378 LDR W1, [X8 + 0x8]
	0x03A6237C MOVZ W8, 0x42800000
	0x03A62380 FMOV S10, W8
	0x03A62384 MOV V0.16B, V10.16B
	0x03A62388 BL 0x3C15CD8
	0x03A6238C LDR X8, [X28]
	0x03A62390 MOV X0, X22
	0x03A62394 MOV V0.16B, V10.16B
	0x03A62398 MOV X2, X31
	0x03A6239C LDR X8, [X8 + 0xB8]
	0x03A623A0 LDR W1, [X8 + 0xC]
	0x03A623A4 BL 0x3C15CD8
	0x03A623A8 MOV X0, X22
	0x03A623AC MOV X1, X31
	0x03A623B0 MOV X2, X31
	0x03A623B4 BL 0x3C152D0
	0x03A623B8 LDRSW X8, [X23 + 0x1B0]
	0x03A623BC CMP W8, 0x2
	0x03A623C0 B.HI 0x3A623E0
	0x03A623C4 ADRP X9, 0x492000
	0x03A623C8 ADD X9, X9, 0xB58
	0x03A623CC LDR X8, [X9, X8, LSL #3]
	0x03A623D0 MOV X0, X22
	0x03A623D4 MOV X2, X31
	0x03A623D8 LDR X1, [X8]
	0x03A623DC BL 0x3C14E3C
	0x03A623E0 ADRP X8, 0x6F2000
	0x03A623E4 LDR X8, [X8 + 0x10]
	0x03A623E8 LDR X23, [X26]
	0x03A623EC SCVTF S10, S11
	0x03A623F0 SCVTF S11, S12
	0x03A623F4 LDR X0, [X8]
	0x03A623F8 LDR W8, [X0 + 0xE0]
	0x03A623FC CBNZ W8, 0x3A62404
	0x03A62400 BL 0x1C16DFC
	0x03A62404 MOVZ W8, 0x5
	0x03A62408 FMOV S4, W31
	0x03A6240C FMOV S5, W31
	0x03A62410 FMOV S6, W31
	0x03A62414 FMOV S7, W31
	0x03A62418 MOVZ W3, 0x2
	0x03A6241C MOVZ W6, 0x2
	0x03A62420 MOV X0, X21
	0x03A62424 MOV X1, X20
	0x03A62428 MOV V0.16B, V8.16B
	0x03A6242C MOV V1.16B, V9.16B
	0x03A62430 MOV V2.16B, V10.16B
	0x03A62434 MOV V3.16B, V11.16B
	0x03A62438 MOV X2, X23
	0x03A6243C MOV W4, W31
	0x03A62440 MOV X5, X25
	0x03A62444 MOV W7, W31
	0x03A62448 STR X31, [X31 + 0x18]
	0x03A6244C STR W31, [X31 + 0x10]
	0x03A62450 STR X22, [X31 + 0x8]
	0x03A62454 STR W8, [X31]
	0x03A62458 BL 0x3A70C08
	0x03A6245C LDR X1, [X26]
	0x03A62460 LDR X2, [X27]
	0x03A62464 FMOV S4, W31
	0x03A62468 FMOV S5, W31
	0x03A6246C FMOV S6, W31
	0x03A62470 FMOV S7, W31
	0x03A62474 MOVZ W3, 0x2
	0x03A62478 MOVZ W5, 0x1
	0x03A6247C MOVZ W7, 0x1
	0x03A62480 MOV V0.16B, V8.16B
	0x03A62484 MOV V1.16B, V9.16B
	0x03A62488 MOV V2.16B, V10.16B
	0x03A6248C MOV V3.16B, V11.16B
	0x03A62490 MOV X0, X21
	0x03A62494 MOV W4, W31
	0x03A62498 MOV X6, X22
	0x03A6249C STR X31, [X31]
	0x03A624A0 BL 0x3A70A44
	0x03A624A4 LDR X0, [X28]
	0x03A624A8 LDR W8, [X0 + 0xE0]
	0x03A624AC CBNZ W8, 0x3A624B8
	0x03A624B0 BL 0x1C16DFC
	0x03A624B4 LDR X0, [X28]
	0x03A624B8 LDR X8, [X27]
	0x03A624BC CBZ X8, 0x3A62568
	0x03A624C0 LDR X9, [X0 + 0xB8]
	0x03A624C4 LDR X10, [X8 + 0x48]
	0x03A624C8 LDUR V0, [X8 + 0x38]
	0x03A624CC LDUR V1, [X8 + 0x28]
	0x03A624D0 LDR W1, [X9 + 0x40]
	0x03A624D4 STR X10, [X31 + 0xB0]
	0x03A624D8 STP V1, V0, [X31 + 0x90]
	0x03A624DC CBZ X21, 0x3A62568
	0x03A624E0 LDP V0, V1, [X31 + 0x90]
	0x03A624E4 LDR X8, [X31 + 0xB0]
	0x03A624E8 ADRP X19, 0x6F0000
	0x03A624EC LDR X19, [X19 + 0xE28]
	0x03A624F0 ADD X2, X31, 0x30
	0x03A624F4 MOV X0, X21
	0x03A624F8 MOV X3, X31
	0x03A624FC STP V0, V1, [X31 + 0x30]
	0x03A62500 STR X8, [X31 + 0x50]
	0x03A62504 BL 0x3C4FCFC
	0x03A62508 LDR X0, [X19]
	0x03A6250C LDR W8, [X0 + 0xE0]
	0x03A62510 CBNZ W8, 0x3A62518
	0x03A62514 BL 0x1C16DFC
	0x03A62518 MOVZ W3, 0x2
	0x03A6251C MOVZ W6, 0x2
	0x03A62520 MOV X0, X21
	0x03A62524 MOV X1, X20
	0x03A62528 MOV X2, X29
	0x03A6252C MOV W4, W31
	0x03A62530 MOV X5, X22
	0x03A62534 MOV X7, X31
	0x03A62538 BL 0x39E3120
	0x03A6253C ADD X31, X31, 0x170
	0x03A62540 LDP X20, X19, [X31 + 0x80]
	0x03A62544 LDP X22, X21, [X31 + 0x70]
	0x03A62548 LDP X24, X23, [X31 + 0x60]
	0x03A6254C LDP X26, X25, [X31 + 0x50]
	0x03A62550 LDP X28, X27, [X31 + 0x40]
	0x03A62554 LDP X29, X30, [X31 + 0x30]
	0x03A62558 LDP D9, D8, [X31 + 0x20]
	0x03A6255C LDP D11, D10, [X31 + 0x10]
	0x03A62560 LDR V12, [X31], #0x90
	0x03A62564 RET
	0x03A62568 BL 0x1C16F20
	0x03A6256C STR X30, [X31 - 0x30]!
	0x03A62570 STP X22, X21, [X31 + 0x10]
	0x03A62574 STP X20, X19, [X31 + 0x20]
	0x03A62578 LDR X8, [X0 + 0x1A8]
	0x03A6257C CBZ X8, 0x3A62628
	0x03A62580 MOV X22, X0
	0x03A62584 LDR X0, [X8 + 0x38]
	0x03A62588 CBZ X0, 0x3A62628
	0x03A6258C LDR X8, [X0]
	0x03A62590 MOV X19, X4
	0x03A62594 MOV X20, X3
	0x03A62598 MOV X21, X2
	0x03A6259C LDR X9, [X8 + 0x218]
	0x03A625A0 LDR X1, [X8 + 0x220]
	0x03A625A4 BLR X9
	0x03A625A8 CMP W0, 0x1
	0x03A625AC B.NE 0x3A625D0
	0x03A625B0 MOV X0, X22
	0x03A625B4 MOV X2, X21
	0x03A625B8 MOV X3, X20
	0x03A625BC MOV X4, X19
	0x03A625C0 LDP X20, X19, [X31 + 0x20]
	0x03A625C4 LDP X22, X21, [X31 + 0x10]
	0x03A625C8 LDR X30, [X31], #0x30
	0x03A625CC B 0x3A647E8
	0x03A625D0 LDR X8, [X22 + 0x1A8]
	0x03A625D4 CBZ X8, 0x3A62628
	0x03A625D8 LDR X0, [X8 + 0x38]
	0x03A625DC CBZ X0, 0x3A62628
	0x03A625E0 LDR X8, [X0]
	0x03A625E4 LDR X9, [X8 + 0x218]
	0x03A625E8 LDR X1, [X8 + 0x220]
	0x03A625EC BLR X9
	0x03A625F0 CMP W0, 0x2
	0x03A625F4 B.NE 0x3A62618
	0x03A625F8 MOV X0, X22
	0x03A625FC MOV X1, X21
	0x03A62600 MOV X2, X20
	0x03A62604 MOV X3, X19
	0x03A62608 LDP X20, X19, [X31 + 0x20]
	0x03A6260C LDP X22, X21, [X31 + 0x10]
	0x03A62610 LDR X30, [X31], #0x30
	0x03A62614 B 0x3A64F90
	0x03A62618 LDP X20, X19, [X31 + 0x20]
	0x03A6261C LDP X22, X21, [X31 + 0x10]
	0x03A62620 LDR X30, [X31], #0x30
	0x03A62624 RET
	0x03A62628 BL 0x1C16F20
	0x03A6262C SUB X31, X31, 0x80
	0x03A62630 STP X30, X25, [X31 + 0x40]
	0x03A62634 STP X24, X23, [X31 + 0x50]
	0x03A62638 STP X22, X21, [X31 + 0x60]
	0x03A6263C STP X20, X19, [X31 + 0x70]
	0x03A62640 ADRP X22, 0x980000
	0x03A62644 LDRB W8, [X22 + 0x248]
	0x03A62648 MOV X24, X4
	0x03A6264C MOV X19, X3
	0x03A62650 MOV X20, X2
	0x03A62654 MOV X21, X1
	0x03A62658 MOV X23, X0
	0x03A6265C TBNZ X8, 0x0, 0x3A62698
	0x03A62660 ADRP X0, 0x6F0000
	0x03A62664 LDR X0, [X0 + 0xE28]
	0x03A62668 BL 0x1C16CF4
	0x03A6266C ADRP X0, 0x6F2000
	0x03A62670 LDR X0, [X0 + 0x958]
	0x03A62674 BL 0x1C16CF4
	0x03A62678 ADRP X0, 0x6F4000
	0x03A6267C LDR X0, [X0 + 0x660]
	0x03A62680 BL 0x1C16CF4
	0x03A62684 ADRP X0, 0x6F4000
	0x03A62688 LDR X0, [X0 + 0x668]
	0x03A6268C BL 0x1C16CF4
	0x03A62690 MOVZ W8, 0x1
	0x03A62694 STRB W8, [X22 + 0x248]
	0x03A62698 LDR X8, [X23 + 0x198]
	0x03A6269C CBZ X8, 0x3A627F0
	0x03A626A0 LDR X22, [X8 + 0x30]
	0x03A626A4 ADRP X8, 0x6F2000
	0x03A626A8 LDR X8, [X8 + 0x958]
	0x03A626AC STR X22, [X31 + 0x38]
	0x03A626B0 LDR X25, [X24 + 0xC0]
	0x03A626B4 LDR X0, [X8]
	0x03A626B8 LDR X24, [X24 + 0x178]
	0x03A626BC LDR W8, [X0 + 0xE0]
	0x03A626C0 CBNZ W8, 0x3A626C8
	0x03A626C4 BL 0x1C16DFC
	0x03A626C8 ADD X0, X31, 0x38
	0x03A626CC MOV X1, X25
	0x03A626D0 MOV X2, X24
	0x03A626D4 BL 0x3A65A40
	0x03A626D8 LDR X8, [X23 + 0x1B0]
	0x03A626DC CBZ X8, 0x3A627F0
	0x03A626E0 LDR X0, [X8 + 0x48]
	0x03A626E4 CBZ X0, 0x3A627F0
	0x03A626E8 LDR X8, [X0]
	0x03A626EC LDR X9, [X8 + 0x218]
	0x03A626F0 LDR X1, [X8 + 0x220]
	0x03A626F4 BLR X9
	0x03A626F8 CBZ X22, 0x3A627F0
	0x03A626FC ADRP X8, 0x6F4000
	0x03A62700 LDR X8, [X8 + 0x660]
	0x03A62704 MOV X0, X22
	0x03A62708 MOV X2, X31
	0x03A6270C LDR X1, [X8]
	0x03A62710 BL 0x3C15C58
	0x03A62714 LDR X8, [X23 + 0x1B0]
	0x03A62718 CBZ X8, 0x3A627F0
	0x03A6271C LDR X0, [X8 + 0x50]
	0x03A62720 CBZ X0, 0x3A627F0
	0x03A62724 LDR X8, [X0]
	0x03A62728 ADRP X24, 0x6F4000
	0x03A6272C LDR X9, [X8 + 0x218]
	0x03A62730 LDR X1, [X8 + 0x220]
	0x03A62734 LDR X24, [X24 + 0x668]
	0x03A62738 BLR X9
	0x03A6273C LDR X1, [X24]
	0x03A62740 MOV X0, X22
	0x03A62744 MOV X2, X31
	0x03A62748 BL 0x3C15C58
	0x03A6274C LDR W8, [X23 + 0x110]
	0x03A62750 LDP V1, V0, [X23 + 0xF0]
	0x03A62754 LDR V2, [X23 + 0xE]
	0x03A62758 ADD X1, X31, 0x0
	0x03A6275C MOV X0, X21
	0x03A62760 MOV X2, X31
	0x03A62764 STR W8, [X31 + 0x30]
	0x03A62768 STP V1, V0, [X31 + 0x10]
	0x03A6276C STR V2, [X31]
	0x03A62770 BL 0x3A68048
	0x03A62774 LDR X8, [X23 + 0x1B0]
	0x03A62778 CBZ X8, 0x3A627F0
	0x03A6277C LDR X0, [X8 + 0x40]
	0x03A62780 CBZ X0, 0x3A627F0
	0x03A62784 LDR X8, [X0]
	0x03A62788 ADRP X23, 0x6F0000
	0x03A6278C LDR X9, [X8 + 0x218]
	0x03A62790 LDR X1, [X8 + 0x220]
	0x03A62794 LDR X23, [X23 + 0xE28]
	0x03A62798 BLR X9
	0x03A6279C LDR X8, [X23]
	0x03A627A0 MOV W23, W0
	0x03A627A4 LDR W9, [X8 + 0xE0]
	0x03A627A8 CBNZ W9, 0x3A627B4
	0x03A627AC MOV X0, X8
	0x03A627B0 BL 0x1C16DFC
	0x03A627B4 MOVZ W3, 0x2
	0x03A627B8 MOV X0, X21
	0x03A627BC MOV X1, X20
	0x03A627C0 MOV X2, X19
	0x03A627C4 MOV W4, W31
	0x03A627C8 MOV X5, X22
	0x03A627CC MOV W6, W23
	0x03A627D0 MOV X7, X31
	0x03A627D4 BL 0x39E3120
	0x03A627D8 LDP X20, X19, [X31 + 0x70]
	0x03A627DC LDP X22, X21, [X31 + 0x60]
	0x03A627E0 LDP X24, X23, [X31 + 0x50]
	0x03A627E4 LDP X30, X25, [X31 + 0x40]
	0x03A627E8 ADD X31, X31, 0x80
	0x03A627EC RET
	0x03A627F0 BL 0x1C16F20
	0x03A627F4 STR D14, [X31 - 0x80]!
	0x03A627F8 STP D13, D12, [X31 + 0x10]
	0x03A627FC STP D11, D10, [X31 + 0x20]
	0x03A62800 STP D9, D8, [X31 + 0x30]
	0x03A62804 STP X30, X25, [X31 + 0x40]
	0x03A62808 STP X24, X23, [X31 + 0x50]
	0x03A6280C STP X22, X21, [X31 + 0x60]
	0x03A62810 STP X20, X19, [X31 + 0x70]
	0x03A62814 ADRP X24, 0x980000
	0x03A62818 LDRB W8, [X24 + 0x249]
	0x03A6281C MOV X19, X4
	0x03A62820 MOV X20, X3
	0x03A62824 MOV X21, X2
	0x03A62828 MOV X23, X1
	0x03A6282C MOV X22, X0
	0x03A62830 TBNZ X8, 0x0, 0x3A6286C
	0x03A62834 ADRP X0, 0x6F0000
	0x03A62838 LDR X0, [X0 + 0xE28]
	0x03A6283C BL 0x1C16CF4
	0x03A62840 ADRP X0, 0x6F4000
	0x03A62844 LDR X0, [X0 + 0x550]
	0x03A62848 BL 0x1C16CF4
	0x03A6284C ADRP X0, 0x6F4000
	0x03A62850 LDR X0, [X0 + 0x670]
	0x03A62854 BL 0x1C16CF4
	0x03A62858 ADRP X0, 0x6F4000
	0x03A6285C LDR X0, [X0 + 0x678]
	0x03A62860 BL 0x1C16CF4
	0x03A62864 MOVZ W8, 0x1
	0x03A62868 STRB W8, [X24 + 0x249]
	0x03A6286C LDR X8, [X22 + 0x1B8]
	0x03A62870 CBZ X8, 0x3A62A24
	0x03A62874 LDR X0, [X8 + 0x38]
	0x03A62878 CBZ X0, 0x3A62A24
	0x03A6287C LDR X8, [X0]
	0x03A62880 LDR X9, [X8 + 0x218]
	0x03A62884 LDR X1, [X8 + 0x220]
	0x03A62888 BLR X9
	0x03A6288C MOV X0, X22
	0x03A62890 MOV X1, X23
	0x03A62894 MOV V8.16B, V0.16B
	0x03A62898 BL 0x3A65C48
	0x03A6289C FMOV S11, 1
	0x03A628A0 MOV X0, X22
	0x03A628A4 MOV X1, X23
	0x03A628A8 MOV V9.16B, V0.16B
	0x03A628AC MOV V10.16B, V1.16B
	0x03A628B0 FADD S12, S8, S11
	0x03A628B4 BL 0x3A65C48
	0x03A628B8 FMUL S2, S0, S0
	0x03A628BC FADD S2, S2, S11
	0x03A628C0 FSQRT S2, S2
	0x03A628C4 FDIV S2, S11, S2
	0x03A628C8 FADD S3, S8, S2
	0x03A628CC FMUL S0, S0, S2
	0x03A628D0 FMUL S1, S1, S2
	0x03A628D4 FDIV S2, S12, S3
	0x03A628D8 LDR X8, [X22 + 0x1B8]
	0x03A628DC FMUL S0, S0, S2
	0x03A628E0 FMUL S1, S1, S2
	0x03A628E4 FDIV S0, S0, S9
	0x03A628E8 FDIV S1, S1, S10
	0x03A628EC FCMP S0, S1
	0x03A628F0 FCSEL S13, S0, S1, MI
	0x03A628F4 CBZ X8, 0x3A62A24
	0x03A628F8 LDR X0, [X8 + 0x40]
	0x03A628FC CBZ X0, 0x3A62A24
	0x03A62900 LDR X8, [X0]
	0x03A62904 FMIN S14, S13, S11
	0x03A62908 LDR X9, [X8 + 0x218]
	0x03A6290C LDR X1, [X8 + 0x220]
	0x03A62910 BLR X9
	0x03A62914 FMOV S11, 1
	0x03A62918 LDR X8, [X22 + 0x198]
	0x03A6291C FCMP S0, 0x0
	0x03A62920 FMOV S1, W31
	0x03A62924 FMOV S2, -1
	0x03A62928 FMIN S0, S0, S11
	0x03A6292C FCSEL S12, S0, S1, PL
	0x03A62930 FADD S0, S14, S2
	0x03A62934 FCMP S13, 0x0
	0x03A62938 FCSEL S13, S0, S2, PL
	0x03A6293C CBZ X8, 0x3A62A24
	0x03A62940 ADRP X23, 0x6F4000
	0x03A62944 LDR X23, [X23 + 0x550]
	0x03A62948 LDR X22, [X8 + 0x38]
	0x03A6294C LDR X0, [X23]
	0x03A62950 LDR W9, [X0 + 0xE0]
	0x03A62954 CBNZ W9, 0x3A6295C
	0x03A62958 BL 0x1C16DFC
	0x03A6295C CBZ X22, 0x3A62A24
	0x03A62960 LDR X8, [X23]
	0x03A62964 ADRP X23, 0x6F4000
	0x03A62968 ADRP X24, 0x6F4000
	0x03A6296C ADRP X25, 0x6F0000
	0x03A62970 LDR X8, [X8 + 0xB8]
	0x03A62974 LDR X23, [X23 + 0x670]
	0x03A62978 FMUL S0, S13, S12
	0x03A6297C FADD S3, S0, S11
	0x03A62980 LDR W1, [X8 + 0x48]
	0x03A62984 LDR X24, [X24 + 0x678]
	0x03A62988 LDR X25, [X25 + 0xE28]
	0x03A6298C MOV X0, X22
	0x03A62990 MOV V0.16B, V9.16B
	0x03A62994 MOV V1.16B, V10.16B
	0x03A62998 MOV V2.16B, V8.16B
	0x03A6299C MOV X2, X31
	0x03A629A0 BL 0x3C15D80
	0x03A629A4 FABS S0, S8
	0x03A629A8 FMOV S1, 1
	0x03A629AC MOVZ W8, 0x1
	0x03A629B0 FSUB S0, S1, S0
	0x03A629B4 FMOV S1, W8
	0x03A629B8 FCMP S0, S1
	0x03A629BC CSEL X8, X23, X24, GT
	0x03A629C0 LDR X1, [X8]
	0x03A629C4 MOV X0, X22
	0x03A629C8 MOV X2, X31
	0x03A629CC BL 0x3C14E3C
	0x03A629D0 LDR X0, [X25]
	0x03A629D4 LDR W8, [X0 + 0xE0]
	0x03A629D8 CBNZ W8, 0x3A629E0
	0x03A629DC BL 0x1C16DFC
	0x03A629E0 MOV X0, X21
	0x03A629E4 MOV X1, X20
	0x03A629E8 MOV X2, X19
	0x03A629EC MOV X5, X22
	0x03A629F0 LDP X20, X19, [X31 + 0x70]
	0x03A629F4 LDP X22, X21, [X31 + 0x60]
	0x03A629F8 LDP X24, X23, [X31 + 0x50]
	0x03A629FC LDP X30, X25, [X31 + 0x40]
	0x03A62A00 LDP D9, D8, [X31 + 0x30]
	0x03A62A04 LDP D11, D10, [X31 + 0x20]
	0x03A62A08 LDP D13, D12, [X31 + 0x10]
	0x03A62A0C MOVZ W3, 0x2
	0x03A62A10 MOV W4, W31
	0x03A62A14 MOV W6, W31
	0x03A62A18 MOV X7, X31
	0x03A62A1C LDR V14, [X31], #0x80
	0x03A62A20 B 0x39E3120
	0x03A62A24 BL 0x1C16F20
	0x03A62A28 SUB X31, X31, 0x1C0
	0x03A62A2C STR D12, [X31 + 0x130]
	0x03A62A30 STP D11, D10, [X31 + 0x140]
	0x03A62A34 STP D9, D8, [X31 + 0x150]
	0x03A62A38 STP X29, X30, [X31 + 0x160]
	0x03A62A3C STP X28, X27, [X31 + 0x170]
	0x03A62A40 STP X26, X25, [X31 + 0x180]
	0x03A62A44 STP X24, X23, [X31 + 0x190]
	0x03A62A48 STP X22, X21, [X31 + 0x1A0]
	0x03A62A4C STP X20, X19, [X31 + 0x1B0]
	0x03A62A50 ADRP X19, 0x980000
	0x03A62A54 LDRB W8, [X19 + 0x24A]
	0x03A62A58 MOV X26, X3
	0x03A62A5C MOV X23, X2
	0x03A62A60 MOV X21, X1
	0x03A62A64 MOV X20, X0
	0x03A62A68 TBNZ X8, 0x0, 0x3A62AF8
	0x03A62A6C ADRP X0, 0x6F0000
	0x03A62A70 LDR X0, [X0 + 0xE28]
	0x03A62A74 BL 0x1C16CF4
	0x03A62A78 ADRP X0, 0x6F1000
	0x03A62A7C LDR X0, [X0 + 0x460]
	0x03A62A80 BL 0x1C16CF4
	0x03A62A84 ADRP X0, 0x6B9000
	0x03A62A88 LDR X0, [X0 + 0x8F8]
	0x03A62A8C BL 0x1C16CF4
	0x03A62A90 ADRP X0, 0x691000
	0x03A62A94 LDR X0, [X0 + 0x598]
	0x03A62A98 BL 0x1C16CF4
	0x03A62A9C ADRP X0, 0x6F2000
	0x03A62AA0 LDR X0, [X0 + 0x10]
	0x03A62AA4 BL 0x1C16CF4
	0x03A62AA8 ADRP X0, 0x6F4000
	0x03A62AAC LDR X0, [X0 + 0x550]
	0x03A62AB0 BL 0x1C16CF4
	0x03A62AB4 ADRP X0, 0x6F4000

ISIL:
	001 Move [X31-128], D10
	002 Move [X31+16], D9
	003 Move [X31+24], D8
	004 Move [X31+32], X29
	005 Move [X31+40], X30
	006 Move [X31+48], X28
	007 Move [X31+56], X27
	008 Move [X31+64], X26
	009 Move [X31+72], X25
	010 Move [X31+80], X24
	011 Move [X31+88], X23
	012 Move [X31+96], X22
	013 Move [X31+104], X21
	014 Move [X31+112], X20
	015 Move [X31+120], X19
	016 Subtract X31, X31, 624
	017 Move X22, 0x982000
	018 Move W8, [X22+575]
	019 Move X21, X2
	020 Move X20, X1
	021 Move X19, X0
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {64}
	026 Move X0, 0x693000
	027 Move X0, [X0+2416]
	028 Call 0x1C17CF4
	029 Move X0, 0x6F2000
	030 Move X0, [X0+3624]
	031 Call 0x1C17CF4
	032 Move X0, 0x6F2000
	033 Move X0, [X0+3480]
	034 Call 0x1C17CF4
	035 Move X0, 0x693000
	036 Move X0, [X0+1432]
	037 Call 0x1C17CF4
	038 Move X0, 0x6F4000
	039 Move X0, [X0+168]
	040 Call 0x1C17CF4
	041 Move X0, 0x6F3000
	042 Move X0, [X0+152]
	043 Call 0x1C17CF4
	044 Move X0, 0x6F4000
	045 Move X0, [X0+16]
	046 Call 0x1C17CF4
	047 Move X0, 0x6F3000
	048 Move X0, [X0+4080]
	049 Call 0x1C17CF4
	050 Move X0, 0x6F6000
	051 Move X0, [X0+1360]
	052 Call 0x1C17CF4
	053 Move X0, 0x6F6000
	054 Move X0, [X0+1544]
	055 Call 0x1C17CF4
	056 Move X0, 0x6F6000
	057 Move X0, [X0+1552]
	058 Call 0x1C17CF4
	059 Move X0, 0x6F5000
	060 Move X0, [X0+3984]
	061 Call 0x1C17CF4
	062 Move W8, 1
	063 Move [X22+575], W8
	064 Move [X31+608], X20
	065 Add X20, X21, 24
	066 NotImplemented "Instruction MOVI not yet implemented."
	067 Move X0, X20
	068 Move X1, X31
	069 Move [X31+632], W31
	070 Move [X31+560], X31
	071 Move [X31+520], W31
	072 Move [X31+512], X31
	073 Move [X31+576], V0
	074 Move [X31+584], V0
	075 Move [X31+528], V0
	076 Move [X31+536], V0
	077 Move [X31+480], V0
	078 Move [X31+488], V0
	079 Move [X31+592], X19
	080 Call CameraData.get_isSceneViewCamera, X0
	081 Move W8, [X21+448]
	082 Move [X31+636], W0
	083 Compare W8, 0
	084 JumpIfEqual {101}
	085 Move X8, [X19+408]
	086 Compare X8, 0
	087 JumpIfEqual {1247}
	088 Move X9, 0x693000
	089 Move X9, [X9+1432]
	090 Move X22, [X8+16]
	091 Move X0, [X9]
	092 Move W9, [X0+224]
	093 Compare W9, 0
	094 JumpIfNotEqual {96}
	095 Call 0x1C17DFC
	096 Move X0, X22
	097 Move X1, X31
	098 Move X2, X31
	099 Call Object.op_Inequality, X0, X1
	100 And W27, W0, 1
	101 Move W27, W31
	102 Move W8, [X21+452]
	103 NotImplemented "Instruction CMP not yet implemented."
	104 Move X0, X31
	105 Call SystemInfo.get_graphicsDeviceType
	106 NotImplemented "Instruction CMP not yet implemented."
	107 NotImplemented "Instruction CSET not yet implemented."
	108 Move W23, W31
	109 Move X8, [X19+424]
	110 Compare X8, 0
	111 JumpIfEqual {1247}
	112 Move X0, [X8+56]
	113 Compare X0, 0
	114 JumpIfEqual {1247}
	115 Move X8, [X0]
	116 Move X9, [X8+536]
	117 Move X1, [X8+544]
	118 NotImplemented "Instruction BLR not yet implemented."
	119 Move X9, [X19+408]
	120 Compare X9, 0
	121 JumpIfEqual {1247}
	122 Move X8, [X19+424]
	123 Add X10, X9, 32
	124 Add X9, X9, 40
	125 NotImplemented "Instruction CMP not yet implemented."
	126 NotImplemented "Instruction CSEL not yet implemented."
	127 Compare X8, 0
	128 JumpIfEqual {1247}
	129 Move X24, 0x6F2000
	130 Move X22, [X9]
	131 Move X24, [X24+3480]
	132 Move X0, X8
	133 Call DepthOfField.IsActive, X0
	134 Move W8, [X31+636]
	135 NotImplemented "Instruction ORN not yet implemented."
	136 Move TEMP, X8
	137 And TEMP, TEMP, 1
	138 Compare TEMP, 1
	139 JumpIfNotEqual {141}
	140 Move W22, W31
	141 Move X8, 0x693000
	142 Move X8, [X8+1432]
	143 Move X0, [X8]
	144 Move W8, [X0+224]
	145 Compare W8, 0
	146 JumpIfNotEqual {148}
	147 Call 0x1C17DFC
	148 Move X0, X22
	149 Move X1, X31
	150 Move X2, X31
	151 Call Object.op_Inequality, X0, X1
	152 And W22, W0, 1
	153 Move X0, [X24]
	154 Move W8, [X0+224]
	155 Compare W8, 0
	156 JumpIfNotEqual {158}
	157 Call 0x1C17DFC
	158 Move X0, X31
	159 Call LensFlareCommonSRP.get_Instance
	160 Compare X0, 0
	161 JumpIfEqual {1247}
	162 Move X1, X31
	163 Call LensFlareCommonSRP.IsEmpty, X0
	164 Move TEMP, X0
	165 And TEMP, TEMP, 1
	166 Compare TEMP, 1
	167 JumpIfNotEqual {169}
	168 Move [X31+16], W31
	169 Move W8, [X19+568]
	170 Move [X31+16], W8
	171 Move X0, [X19+432]
	172 Compare X0, 0
	173 JumpIfEqual {1247}
	174 Call MotionBlur.IsActive, X0
	175 Move X8, [X19+440]
	176 Compare X8, 0
	177 JumpIfEqual {1247}
	178 Move X8, [X8+56]
	179 Compare X8, 0
	180 JumpIfEqual {1247}
	181 Move X9, [X8]
	182 Move W11, [X31+636]
	183 Move X10, [X9+536]
	184 Move X1, [X9+544]
	185 Xor W9, W0, 1
	186 Move X0, X8
	187 Or W25, W11, W9
	188 NotImplemented "Instruction BLR not yet implemented."
	189 NotImplemented "Instruction FCMP not yet implemented."
	190 NotImplemented "Instruction CSET not yet implemented."
	191 Move TEMP, X25
	192 And TEMP, TEMP, 1
	193 Compare TEMP, 1
	194 JumpIfNotEqual {196}
	195 Move W29, W31
	196 Move X8, 0x693000
	197 Move X8, [X8+2416]
	198 Move X0, [X8]
	199 Move W8, [X0+224]
	200 Compare W8, 0
	201 JumpIfNotEqual {203}
	202 Call 0x1C17DFC
	203 Move X0, X31
	204 Call Application.get_isPlaying
	205 And W29, W0, 1
	206 Move W8, [X31+636]
	207 Move X0, X20
	208 Move X1, X31
	209 Or W8, W8, W24
	210 Move [X31+20], W8
	211 Call CameraData.IsTemporalAAEnabled, X0
	212 Move W25, W0
	213 Move TEMP, X0
	214 And TEMP, TEMP, 1
	215 Compare TEMP, 1
	216 JumpIfEqual {229}
	217 Move W8, [X21+452]
	218 NotImplemented "Instruction CMP not yet implemented."
	219 Move X8, 0x6F6000
	220 Move X8, [X8+1544]
	221 Move X0, [X8]
	222 Move W8, [X0+224]
	223 Compare W8, 0
	224 JumpIfNotEqual {226}
	225 Call 0x1C17DFC
	226 Move X0, X20
	227 Move X1, X31
	228 Call TemporalAA.ValidateAndWarn, X0
	229 Move W8, [X31+16]
	230 Move W10, [X31+20]
	231 And W9, W25, 1
	232 NotImplemented "Instruction CMP not yet implemented."
	233 Add W8, W23, W27
	234 NotImplemented "Instruction ORN not yet implemented."
	235 Add W8, W8, W22
	236 NotImplemented "Instruction CINC not yet implemented."
	237 And W10, W10, 1
	238 Add W8, W8, W10
	239 Add W8, W8, W9
	240 Add W8, W8, W29
	241 Move [X31+600], W8
	242 Move W8, [X19+570]
	243 Add X9, X21, 464
	244 Move [X31+24], X9
	245 Compare W8, 0
	246 JumpIfEqual {285}
	247 Move W8, [X31+600]
	248 NotImplemented "Instruction CMP not yet implemented."
	249 Move X8, [X31+24]
	250 Move X0, [X8]
	251 Compare X0, 0
	252 JumpIfEqual {1247}
	253 Move X8, [X0]
	254 Move W1, W31
	255 Move X9, [X8+584]
	256 Move X2, [X8+592]
	257 NotImplemented "Instruction BLR not yet implemented."
	258 Move W9, [X19+570]
	259 Add X8, X31, 576
	260 NotImplemented "Instruction CMP not yet implemented."
	261 NotImplemented "Instruction CSEL not yet implemented."
	262 Compare W9, 0
	263 JumpIfEqual {286}
	264 Move X8, [X31+24]
	265 Move X0, [X8]
	266 Compare X0, 0
	267 JumpIfEqual {1247}
	268 Move X1, X31
	269 Call ScriptableRenderer.get_cameraColorTargetHandle, X0
	270 Move W8, [X19+570]
	271 Move [X31+576], X0
	272 Compare W8, 0
	273 JumpIfEqual {288}
	274 Move X8, [X31+24]
	275 Move X0, [X8]
	276 Compare X0, 0
	277 JumpIfEqual {1247}
	278 Move X8, [X0]
	279 Move X24, [X31+608]
	280 Move X9, [X8+408]
	281 Move X2, [X8+416]
	282 Move X1, X24
	283 NotImplemented "Instruction BLR not yet implemented."
	284 Move X8, X0
	285 Add X8, X31, 576
	286 Move X9, [X19+280]
	287 Move [X8], X9
	288 Move X24, [X31+608]
	289 Move X8, X31
	290 Move X26, 0x6F6000
	291 Move X26, [X26+1360]
	292 Move [X31+584], X8
	293 Move X0, [X26]
	294 Move W8, [X0+224]
	295 Compare W8, 0
	296 JumpIfNotEqual {299}
	297 Call 0x1C17DFC
	298 Move X0, [X26]
	299 Move X8, [X0+184]
	300 Move X28, 0x978000
	301 Move W9, [X28+2752]
	302 Move W26, [X8+192]
	303 Compare W9, 0
	304 JumpIfNotEqual {310}
	305 Move X0, 0x697000
	306 Move X0, [X0+624]
	307 Call 0x1C17CF4
	308 Move W8, 1
	309 Move [X28+2752], W8
	310 Move X8, 0x697000
	311 Move X8, [X8+624]
	312 Add X0, X31, 288
	313 Move W1, 1
	314 Move X2, X31
	315 Move X8, [X8]
	316 Move X8, [X8+184]
	317 Move V1, [X8+96]
	318 Move V0, [X8+112]
	319 Move V2, [X8+64]
	320 Move V3, [X8+80]
	321 Add X8, X31, 352
	322 Move [X31+320], V1
	323 Move [X31+328], V0
	324 Move [X31+288], V2
	325 Move [X31+296], V3
	326 Call GL.GetGPUProjectionMatrix, X0, X1
	327 Move V0, [X31+352]
	328 Move V1, [X31+368]
	329 Move V2, [X31+384]
	330 Move V3, [X31+400]
	331 Move [X31+416], V0
	332 Move [X31+424], V1
	333 Move [X31+448], V2
	334 Move [X31+456], V3
	335 Compare X24, 0
	336 JumpIfEqual {1247}
	337 Move V0, [X31+416]
	338 Move V1, [X31+432]
	339 Move V2, [X31+448]
	340 Move V3, [X31+464]
	341 Add X2, X31, 224
	342 Move X0, X24
	343 Move W1, W26
	344 Move X3, X31
	345 Move [X31+224], V0
	346 Move [X31+232], V1
	347 Move [X31+256], V2
	348 Move [X31+264], V3
	349 Call CommandBuffer.SetGlobalMatrix, X0, X1, X2
	350 Compare W27, 0
	351 JumpIfEqual {396}
	352 Move X8, 0x6F4000
	353 Move X24, [X31+608]
	354 Move X8, [X8+168]
	355 Move W0, 17
	356 Move X1, [X8]
	357 Call 0x2236BC0, X0
	358 Move X2, X0
	359 Add X0, X31, 632
	360 Move X1, X24
	361 Move X3, X31
	362 Call ProfilingScope..ctor, X0, X1, X2
	363 Move X24, [X31+608]
	364 Move X26, [X31+576]
	365 Add X1, X31, 576
	366 Move X0, X19
	367 Call PostProcessPass.<Render>g__GetDestination|69_1, X0, X1
	368 Move X8, [X19+408]
	369 Compare X8, 0
	370 JumpIfEqual {1252}
	371 Move X9, 0x6F2000
	372 Move X9, [X9+3624]
	373 Move X27, X0
	374 Move X28, [X8+16]
	375 Move X0, [X9]
	376 Move W9, [X0+224]
	377 Compare W9, 0
	378 JumpIfNotEqual {380}
	379 Call 0x1C17DFC
	380 Move W3, 2
	381 Move X0, X24
	382 Move X1, X26
	383 Move X2, X27
	384 Move W4, W31
	385 Move X5, X28
	386 Move W6, W31
	387 Move X7, X31
	388 Call Blitter.BlitCameraTexture, X0, X1, X2, X3, X4, X5, X6
	389 Move X1, [X31+24]
	390 Add X2, X31, 576
	391 Move X0, X19
	392 Call PostProcessPass.<Render>g__Swap|69_2, X0, X1, X2
	393 Add X0, X31, 632
	394 Move X1, X31
	395 Call ProfilingScope.Dispose, X0
	396 Compare W23, 0
	397 JumpIfEqual {427}
	398 Move X8, 0x6F4000
	399 Move X24, [X31+608]
	400 Move X8, [X8+168]
	401 Move W0, 18
	402 Move X1, [X8]
	403 Call 0x2236BC0, X0
	404 Move X2, X0
	405 Add X0, X31, 632
	406 Move X1, X24
	407 Move X3, X31
	408 Call ProfilingScope..ctor, X0, X1, X2
	409 Move X24, [X31+608]
	410 Move X26, [X31+576]
	411 Add X1, X31, 576
	412 Move X0, X19
	413 Call PostProcessPass.<Render>g__GetDestination|69_1, X0, X1
	414 Move X4, X0
	415 Move X0, X19
	416 Move X1, X20
	417 Move X2, X24
	418 Move X3, X26
	419 Call PostProcessPass.DoSubpixelMorphologicalAntialiasing, X0, X1, X2, X3, X4
	420 Move X1, [X31+24]
	421 Add X2, X31, 576
	422 Move X0, X19
	423 Call PostProcessPass.<Render>g__Swap|69_2, X0, X1, X2
	424 Add X0, X31, 632
	425 Move X1, X31
	426 Call ProfilingScope.Dispose, X0
	427 Compare W22, 0
	428 JumpIfEqual {475}
	429 Move X8, [X19+424]
	430 Compare X8, 0
	431 JumpIfEqual {1247}
	432 Move X0, [X8+56]
	433 Compare X0, 0
	434 JumpIfEqual {1247}
	435 Move X8, [X0]
	436 Move X9, [X8+536]
	437 Move X1, [X8+544]
	438 NotImplemented "Instruction BLR not yet implemented."
	439 Move X8, 0x6F4000
	440 Move X24, [X31+608]
	441 Move X8, [X8+168]
	442 NotImplemented "Instruction CMP not yet implemented."
	443 Move X1, [X8]
	444 Move W8, 19
	445 NotImplemented "Instruction CINC not yet implemented."
	446 Call 0x2236BC0, X0
	447 Move X2, X0
	448 Add X0, X31, 632
	449 Move X1, X24
	450 Move X3, X31
	451 Call ProfilingScope..ctor, X0, X1, X2
	452 Move X24, [X21+216]
	453 Move X26, [X31+608]
	454 Move X27, [X31+576]
	455 Add X1, X31, 576
	456 Move X0, X19
	457 Call PostProcessPass.<Render>g__GetDestination|69_1, X0, X1
	458 Move V0, [X21+292]
	459 Move V1, [X21+296]
	460 Move V2, [X21+300]
	461 Move V3, [X21+304]
	462 Move X4, X0
	463 Move X0, X19
	464 Move X1, X24
	465 Move X2, X26
	466 Move X3, X27
	467 Call PostProcessPass.DoDepthOfField, X0, X1, X2, X3, X4, X5
	468 Move X1, [X31+24]
	469 Add X2, X31, 576
	470 Move X0, X19
	471 Call PostProcessPass.<Render>g__Swap|69_2, X0, X1, X2
	472 Add X0, X31, 632
	473 Move X1, X31
	474 Call ProfilingScope.Dispose, X0
	475 Move TEMP, X25
	476 And TEMP, TEMP, 1
	477 Compare TEMP, 1
	478 JumpIfNotEqual {523}
	479 Move X8, 0x6F4000
	480 Move X24, [X31+608]
	481 Move X8, [X8+168]
	482 Move W0, 21
	483 Move X1, [X8]
	484 Call 0x2236BC0, X0
	485 Move X2, X0
	486 Add X0, X31, 632
	487 Move X1, X24
	488 Move X3, X31
	489 Call ProfilingScope..ctor, X0, X1, X2
	490 Move X8, [X19+408]
	491 Compare X8, 0
	492 JumpIfEqual {1264}
	493 Move X9, [X19+312]
	494 Compare X9, 0
	495 JumpIfEqual {1265}
	496 Move X10, 0x6F6000
	497 Move X24, [X31+608]
	498 Move X10, [X10+1544]
	499 Move X28, [X8+72]
	500 Move X27, [X31+576]
	501 Move X25, [X31+584]
	502 Move X0, [X10]
	503 Move X26, [X9+24]
	504 Move W8, [X0+224]
	505 Compare W8, 0
	506 JumpIfNotEqual {508}
	507 Call 0x1C17DFC
	508 Move X0, X24
	509 Move X1, X28
	510 Move X2, X20
	511 Move X3, X27
	512 Move X4, X25
	513 Move X5, X26
	514 Move X6, X31
	515 Call TemporalAA.ExecutePass, X0, X1, X2, X3, X4, X5
	516 Move X1, [X31+24]
	517 Add X2, X31, 576
	518 Move X0, X19
	519 Call PostProcessPass.<Render>g__Swap|69_2, X0, X1, X2
	520 Add X0, X31, 632
	521 Move X1, X31
	522 Call ProfilingScope.Dispose, X0
	523 Compare W29, 0
	524 JumpIfEqual {554}
	525 Move X8, 0x6F4000
	526 Move X24, [X31+608]
	527 Move X8, [X8+168]
	528 Move W0, 22
	529 Move X1, [X8]
	530 Call 0x2236BC0, X0
	531 Move X2, X0
	532 Add X0, X31, 632
	533 Move X1, X24
	534 Move X3, X31
	535 Call ProfilingScope..ctor, X0, X1, X2
	536 Move X24, [X31+608]
	537 Move X25, [X31+576]
	538 Add X1, X31, 576
	539 Move X0, X19
	540 Call PostProcessPass.<Render>g__GetDestination|69_1, X0, X1
	541 Move X3, X0
	542 Move X0, X19
	543 Move X1, X24
	544 Move X2, X25
	545 Move X4, X20
	546 Call PostProcessPass.DoMotionBlur, X0, X1, X2, X3, X4
	547 Move X1, [X31+24]
	548 Add X2, X31, 576
	549 Move X0, X19
	550 Call PostProcessPass.<Render>g__Swap|69_2, X0, X1, X2
	551 Add X0, X31, 632
	552 Move X1, X31
	553 Call ProfilingScope.Dispose, X0
	554 Move W8, [X31+20]
	555 Move TEMP, X8
	556 And TEMP, TEMP, 1
	557 Compare TEMP, 1
	558 JumpIfEqual {589}
	559 Move X8, 0x6F4000
	560 Move X24, [X31+608]
	561 Move X8, [X8+168]
	562 Move W0, 23
	563 Move X1, [X8]
	564 Call 0x2236BC0, X0
	565 Move X2, X0
	566 Add X0, X31, 632
	567 Move X1, X24
	568 Move X3, X31
	569 Call ProfilingScope..ctor, X0, X1, X2
	570 Move X24, [X21+216]
	571 Move X25, [X31+608]
	572 Move X26, [X31+576]
	573 Add X1, X31, 576
	574 Move X0, X19
	575 Call PostProcessPass.<Render>g__GetDestination|69_1, X0, X1
	576 Move X4, X0
	577 Move X0, X19
	578 Move X1, X24
	579 Move X2, X25
	580 Move X3, X26
	581 Call PostProcessPass.DoPaniniProjection, X0, X1, X2, X3, X4
	582 Move X1, [X31+24]
	583 Add X2, X31, 576
	584 Move X0, X19
	585 Call PostProcessPass.<Render>g__Swap|69_2, X0, X1, X2
	586 Add X0, X31, 632
	587 Move X1, X31
	588 Call ProfilingScope.Dispose, X0
	589 Move X8, 0x6F4000
	590 Move X24, [X31+608]
	591 Move X8, [X8+168]
	592 Move W0, 24
	593 Move X1, [X8]
	594 Call 0x2236BC0, X0
	595 Move X2, X0
	596 Add X0, X31, 632
	597 Move X1, X24
	598 Move X3, X31
	599 Call ProfilingScope..ctor, X0, X1, X2
	600 Move X8, [X19+408]
	601 Compare X8, 0
	602 JumpIfEqual {1248}
	603 Move X0, [X8+96]
	604 Compare X0, 0
	605 JumpIfEqual {1249}
	606 Move X1, X31
	607 Move X2, X31
	608 Call Material.set_shaderKeywords, X0, X1
	609 Move X8, [X19+448]
	610 Compare X8, 0
	611 JumpIfEqual {1250}
	612 Move X0, [X8+72]
	613 Compare X0, 0
	614 JumpIfEqual {1251}
	615 Move X8, [X0]
	616 Move X1, [X8+544]
	617 Move X9, [X8+536]
	618 NotImplemented "Instruction BLR not yet implemented."
	619 NotImplemented "Instruction FCMP not yet implemented."
	620 Move X8, 0x6F4000
	621 Move X24, [X31+608]
	622 Move X8, [X8+168]
	623 Move X1, [X8]
	624 Move W0, 25
	625 Call 0x2236BC0, X0
	626 Move X2, X0
	627 Move [X31+416], W31
	628 Add X0, X31, 416
	629 Move X1, X24
	630 Move X3, X31
	631 Call ProfilingScope..ctor, X0, X1, X2
	632 Move W8, [X31+416]
	633 Move [X31+520], W8
	634 Move X8, [X19+408]
	635 Compare X8, 0
	636 JumpIfEqual {1266}
	637 Move X1, [X31+608]
	638 Move X2, [X31+576]
	639 Move X3, [X8+96]
	640 Move X0, X19
	641 Call PostProcessPass.SetupBloom, X0, X1, X2, X3
	642 Move X26, X31
	643 Move W22, 46
	644 Add X0, X31, 520
	645 Move X1, X31
	646 Call ProfilingScope.Dispose, X0
	647 Compare X26, 0
	648 JumpIfNotEqual {1267}
	649 NotImplemented "Instruction CMP not yet implemented."
	650 Compare W22, 0
	651 JumpIfNotEqual {1226}
	652 Move W8, [X31+16]
	653 Compare W8, 0
	654 JumpIfEqual {774}
	655 Move X8, [X19+440]
	656 Compare X8, 0
	657 JumpIfEqual {1260}
	658 Move X0, [X8+56]
	659 Compare X0, 0
	660 JumpIfEqual {1261}
	661 Move X8, [X0]
	662 Move X1, [X8+544]
	663 Move X9, [X8+536]
	664 NotImplemented "Instruction BLR not yet implemented."
	665 Move V8, V0
	666 Move S10, 1
	667 NotImplemented "Instruction FCMP not yet implemented."
	668 Move S9, 1
	669 Move X8, [X19+440]
	670 Compare X8, 0
	671 JumpIfEqual {1274}
	672 Move X0, [X8+56]
	673 Compare X0, 0
	674 JumpIfEqual {1275}
	675 Move X8, [X0]
	676 Move X1, [X8+544]
	677 Move X9, [X8+536]
	678 NotImplemented "Instruction BLR not yet implemented."
	679 Move X8, [X19+440]
	680 Compare X8, 0
	681 JumpIfEqual {1276}
	682 Move X0, [X8+64]
	683 Compare X0, 0
	684 JumpIfEqual {1277}
	685 Move X8, [X0]
	686 Move V9, V0
	687 Move X1, [X8+544]
	688 Move X9, [X8+536]
	689 NotImplemented "Instruction BLR not yet implemented."
	690 Move V10, V0
	691 Move X8, 0x6F4000
	692 Move X24, [X31+608]
	693 Move X8, [X8+168]
	694 Move X1, [X8]
	695 Move W0, 26
	696 Call 0x2236BC0, X0
	697 Move X2, X0
	698 Move [X31+416], W31
	699 Add X0, X31, 416
	700 Move X1, X24
	701 Move X3, X31
	702 Call ProfilingScope..ctor, X0, X1, X2
	703 Move W8, [X31+416]
	704 Move X25, [X31+608]
	705 Move X0, [X31+576]
	706 Move [X31+520], W8
	707 Move X24, [X21+216]
	708 Add X8, X31, 416
	709 Move X1, X31
	710 Call RTHandle.op_Implicit, X0
	711 NotImplemented "Instruction FCMP not yet implemented."
	712 NotImplemented "Instruction CSET not yet implemented."
	713 Move X0, X19
	714 Move X1, X24
	715 Move X2, X25
	716 Move V0, V9
	717 Move V1, V10
	718 Call PostProcessPass.LensFlareDataDrivenComputeOcclusion, X0, X1, X2, X3, X4, V0, V1
	719 Move X26, X31
	720 Move W22, 50
	721 Add X0, X31, 520
	722 Move X1, X31
	723 Call ProfilingScope.Dispose, X0
	724 Compare X26, 0
	725 JumpIfNotEqual {1262}
	726 NotImplemented "Instruction CMP not yet implemented."
	727 Compare W22, 0
	728 JumpIfNotEqual {1226}
	729 Move X8, 0x6F4000
	730 Move X24, [X31+608]
	731 Move X8, [X8+168]
	732 Move X1, [X8]
	733 Move W0, 27
	734 Call 0x2236BC0, X0
	735 Move X2, X0
	736 Move [X31+416], W31
	737 Add X0, X31, 416
	738 Move X1, X24
	739 Move X3, X31
	740 Call ProfilingScope..ctor, X0, X1, X2
	741 Move W8, [X31+416]
	742 Move X25, [X31+608]
	743 Move X0, [X31+576]
	744 Move [X31+520], W8
	745 Move X24, [X21+216]
	746 Add X8, X31, 416
	747 Move X1, X31
	748 Call RTHandle.op_Implicit, X0
	749 Move V0, [X31+416]
	750 Move V1, [X31+432]
	751 Move X8, [X31+448]
	752 NotImplemented "Instruction FCMP not yet implemented."
	753 NotImplemented "Instruction CSET not yet implemented."
	754 Move [X31+176], V0
	755 Move [X31+184], V1
	756 Move [X31+208], X8
	757 Add X3, X31, 176
	758 Move X0, X19
	759 Move X1, X24
	760 Move X2, X25
	761 Move V0, V9
	762 Move V1, V10
	763 Call PostProcessPass.LensFlareDataDriven, X0, X1, X2, X3, X4, V0, V1
	764 Move X26, X31
	765 Move W22, 47
	766 Add X0, X31, 520
	767 Move X1, X31
	768 Call ProfilingScope.Dispose, X0
	769 Compare X26, 0
	770 JumpIfNotEqual {1269}
	771 NotImplemented "Instruction CMP not yet implemented."
	772 Compare W22, 0
	773 JumpIfNotEqual {1226}
	774 Move X8, [X19+408]
	775 Compare X8, 0
	776 JumpIfEqual {1253}
	777 Move X1, [X8+96]
	778 Move W8, [X31+636]
	779 Move X0, X19
	780 And W2, W8, 1
	781 Call PostProcessPass.SetupLensDistortion, X0, X1, X2
	782 Move X8, [X19+408]
	783 Compare X8, 0
	784 JumpIfEqual {1254}
	785 Move X1, [X8+96]
	786 Move X0, X19
	787 Call PostProcessPass.SetupChromaticAberration, X0, X1
	788 Move X8, [X19+408]
	789 Compare X8, 0
	790 JumpIfEqual {1255}
	791 Move X1, [X8+96]
	792 Move X2, [X21+400]
	793 Move X0, X19
	794 Call PostProcessPass.SetupVignette, X0, X1, X2
	795 Move X8, [X19+408]
	796 Compare X8, 0
	797 JumpIfEqual {1256}
	798 Move X1, [X31+608]
	799 Move X3, [X8+96]
	800 Move X0, X19
	801 Move X2, X21
	802 Call PostProcessPass.SetupColorGrading, X0, X1, X2, X3
	803 Move X8, [X19+408]
	804 Compare X8, 0
	805 JumpIfEqual {1257}
	806 Move X2, [X8+96]
	807 Move X0, X19
	808 Move X1, X20
	809 Call PostProcessPass.SetupGrain, X0, X1, X2
	810 Move X8, [X19+408]
	811 Compare X8, 0
	812 JumpIfEqual {1258}
	813 Move X2, [X8+96]
	814 Move X0, X19
	815 Move X1, X20
	816 Call PostProcessPass.SetupDithering, X0, X1, X2
	817 Move X0, X20
	818 Move X1, X31
	819 Call CameraData.get_requireSrgbConversion, X0
	820 Move TEMP, X0
	821 And TEMP, TEMP, 1
	822 Compare TEMP, 1
	823 JumpIfNotEqual {838}
	824 Move W8, [X19+566]
	825 Compare W8, 0
	826 JumpIfEqual {838}
	827 Move X8, [X19+408]
	828 Compare X8, 0
	829 JumpIfEqual {1283}
	830 Move X0, [X8+96]
	831 Compare X0, 0
	832 JumpIfEqual {1284}
	833 Move X8, 0x6F5000
	834 Move X8, [X8+3984]
	835 Move X1, [X8]
	836 Move X2, X31
	837 Call Material.EnableKeyword, X0, X1
	838 Move X0, X20
	839 Move X1, X31
	840 Call CameraData.get_isHDROutputActive, X0
	841 Move TEMP, X0
	842 And TEMP, TEMP, 1
	843 Compare TEMP, 1
	844 JumpIfNotEqual {874}
	845 Move X8, [X21+424]
	846 Compare X8, 0
	847 JumpIfNotEqual {874}
	848 Move W8, [X19+565]
	849 Compare W8, 0
	850 JumpIfEqual {852}
	851 Move W23, W31
	852 Move W8, [X19+566]
	853 Move W23, W8
	854 ShiftRight W23, 31
	855 And W23, W23, 0x3FFFFFFF
	856 Move X0, X20
	857 Move X1, X31
	858 Call CameraData.get_hdrDisplayInformation, X0
	859 Move X24, X0
	860 Move X25, X1
	861 Move X0, X20
	862 Move X1, X31
	863 Call CameraData.get_hdrDisplayColorGamut, X0
	864 Move X8, [X19+408]
	865 Compare X8, 0
	866 JumpIfEqual {1287}
	867 Move X4, [X8+96]
	868 Move W3, W0
	869 Move X0, X19
	870 Move X1, X24
	871 Move X2, X25
	872 Move W5, W23
	873 Call PostProcessPass.SetupHDROutput, X0, X1, X2, X3, X4
	874 Move W8, [X19+567]
	875 Compare W8, 0
	876 JumpIfEqual {888}
	877 Move X8, [X19+408]
	878 Compare X8, 0
	879 JumpIfEqual {1271}
	880 Move X0, [X8+96]
	881 Compare X0, 0
	882 JumpIfEqual {1272}
	883 Move X8, 0x6F5000
	884 Move X8, [X8+1552]
	885 Move X1, [X8]
	886 Move X2, X31
	887 Call Material.EnableKeyword, X0, X1
	888 Move X23, 0x6F2000
	889 Move X23, [X23+4080]
	890 Move X0, [X23]
	891 Move W8, [X0+224]
	892 Compare W8, 0
	893 JumpIfNotEqual {895}
	894 Call 0x1C17DFC
	895 Move X0, X21
	896 Move X1, X31
	897 Call ScriptableRenderPass.GetActiveDebugHandler, X0
	898 Move X24, X0
	899 Compare X0, 0
	900 JumpIfEqual {906}
	901 Move X0, X24
	902 Move X1, X20
	903 Move X2, X31
	904 Call DebugHandler.WriteToDebugScreenTexture, X0, X1
	905 And W22, W0, 1
	906 Move W22, W31
	907 Move X0, [X23]
	908 Move X25, [X19+288]
	909 Move W8, [X0+224]
	910 Compare W8, 0
	911 JumpIfNotEqual {914}
	912 Call 0x1C17DFC
	913 Move X0, [X23]
	914 Move X8, [X0+184]
	915 Move X8, [X8]
	916 NotImplemented "Instruction CMP not yet implemented."
	917 Move W23, 2
	918 Move W8, [X21+388]
	919 Move W23, W8
	920 ShiftRight W23, 31
	921 And W23, W23, 0x3FFFFFFF
	922 Add X8, X31, 416
	923 Move W0, 2
	924 Move X1, X31
	925 Call RenderTargetIdentifier.op_Implicit, X0
	926 Move V0, [X31+416]
	927 Move V1, [X31+432]
	928 Move X8, [X31+448]
	929 Move [X31+528], V0
	930 Move [X31+536], V1
	931 Move [X31+560], X8
	932 Move X0, [X21+400]
	933 Compare X0, 0
	934 JumpIfEqual {1259}
	935 Move X1, X31
	936 Call XRPass.get_enabled, X0
	937 Move TEMP, X0
	938 And TEMP, TEMP, 1
	939 Compare TEMP, 1
	940 JumpIfNotEqual {950}
	941 Move X8, [X21+400]
	942 Compare X8, 0
	943 JumpIfEqual {1273}
	944 Move X9, [X8+80]
	945 Move V1, [X8+48]
	946 Move V0, [X8+64]
	947 Move [X31+560], X9
	948 Move [X31+528], V1
	949 Move [X31+536], V0
	950 Move W8, [X19+570]
	951 Compare W8, 0
	952 JumpIfNotEqual {984}
	953 Move W8, [X21+472]
	954 Compare W8, 0
	955 JumpIfNotEqual {979}
	956 Move X8, [X19+288]
	957 Compare X8, 0
	958 JumpIfEqual {1288}
	959 NotImplemented "Instruction LDUR not yet implemented."
	960 NotImplemented "Instruction LDUR not yet implemented."
	961 Move X8, [X8+72]
	962 Move V2, [X31+528]
	963 Move V3, [X31+544]
	964 Move X9, [X31+560]
	965 Move [X31+128], V0
	966 Move [X31+136], V1
	967 Move [X31+160], X8
	968 Move [X31+80], V2
	969 Move [X31+88], V3
	970 Move [X31+112], X9
	971 Add X0, X31, 128
	972 Add X1, X31, 80
	973 Move X2, X31
	974 Call RenderTargetIdentifier.op_Equality, X0, X1
	975 Move TEMP, X0
	976 And TEMP, TEMP, 1
	977 Compare TEMP, 1
	978 JumpIfNotEqual {1246}
	979 Move W8, 1
	980 Move W9, [X19+570]
	981 Move [X19+569], W8
	982 Compare W9, 0
	983 JumpIfEqual {1065}
	984 Move W8, [X19+569]
	985 Compare W8, 0
	986 JumpIfEqual {1034}
	987 Compare W22, 0
	988 JumpIfEqual {1038}
	989 Compare X24, 0
	990 JumpIfEqual {1278}
	991 Move X20, [X31+608]
	992 Move X21, [X31+576]
	993 Move X0, X24
	994 Move X1, X31
	995 Call DebugHandler.get_DebugScreenColorHandle, X0
	996 Move X9, [X19+408]
	997 Compare X9, 0
	998 JumpIfEqual {1279}
	999 Move X8, 0x6F1000
	1000 Move X8, [X8+3624]
	1001 Move X23, [X0]
	1002 Move X19, [X9+96]
	1003 Move X8, [X8]
	1004 Move W10, [X8+224]
	1005 Compare W10, 0
	1006 JumpIfNotEqual {1009}
	1007 Move X0, X8
	1008 Call 0x1C17DFC
	1009 Move X0, X20
	1010 Move X1, X21
	1011 Move X2, X23
	1012 Move W3, W31
	1013 Move W4, W31
	1014 Move X5, X19
	1015 Move W6, W31
	1016 Move X7, X31
	1017 Call Blitter.BlitCameraTexture, X0, X1, X2, X3, X4, X5, X6
	1018 Move X8, [X31+24]
	1019 Move X19, [X8]
	1020 Move X0, X24
	1021 Move X1, X31
	1022 Call DebugHandler.get_DebugScreenColorHandle, X0
	1023 Move X20, [X0]
	1024 Move X0, X24
	1025 Move X1, X31
	1026 Call DebugHandler.get_DebugScreenDepthHandle, X0
	1027 Compare X19, 0
	1028 JumpIfEqual {1280}
	1029 Move X2, [X0]
	1030 Move X0, X19
	1031 Move X1, X20
	1032 Move X3, X31
	1033 Call ScriptableRenderer.ConfigureCameraTarget, X0, X1, X2
	1034 Move W8, [X19+565]
	1035 Compare W8, 0
	1036 JumpIfEqual {1107}
	1037 Move X20, [X31+584]
	1038 Move X8, 0x692000
	1039 Move X8, [X8+1432]
	1040 Move X24, [X21+232]
	1041 Move X0, [X8]
	1042 Move W8, [X0+224]
	1043 Compare W8, 0
	1044 JumpIfNotEqual {1046}
	1045 Call 0x1C17DFC
	1046 Move X0, X24
	1047 Move X1, X31
	1048 Move X2, X31
	1049 Call Object.op_Inequality, X0, X1
	1050 Move TEMP, X0
	1051 And TEMP, TEMP, 1
	1052 Compare TEMP, 1
	1053 JumpIfNotEqual {1160}
	1054 Move X1, [X21+232]
	1055 NotImplemented "Instruction MOVI not yet implemented."
	1056 Move [X31+448], X31
	1057 Move [X31+416], V0
	1058 Move [X31+424], V0
	1059 Add X0, X31, 416
	1060 Move X2, X31
	1061 Call RenderTargetIdentifier..ctor, X0, X1
	1062 Move V0, [X31+416]
	1063 Move V1, [X31+432]
	1064 Move X8, [X31+448]
	1065 Move X20, [X31+576]
	1066 Move X21, [X31+608]
	1067 Add X1, X31, 576
	1068 Move X0, X19
	1069 Call PostProcessPass.<Render>g__GetDestination|69_1, X0, X1
	1070 Move X8, [X19+408]
	1071 Compare X8, 0
	1072 JumpIfEqual {1289}
	1073 Move X9, 0x6F1000
	1074 Move X9, [X9+3624]
	1075 Move X22, X0
	1076 Move X24, [X8+96]
	1077 Move X0, [X9]
	1078 Move W9, [X0+224]
	1079 Compare W9, 0
	1080 JumpIfNotEqual {1082}
	1081 Call 0x1C17DFC
	1082 Move X0, X21
	1083 Move X1, X20
	1084 Move X2, X22
	1085 Move W3, W23
	1086 Move W4, W31
	1087 Move X5, X24
	1088 Move W6, W31
	1089 Move X7, X31
	1090 Call Blitter.BlitCameraTexture, X0, X1, X2, X3, X4, X5, X6
	1091 Move X20, [X31+608]
	1092 Add X1, X31, 576
	1093 Move X0, X19
	1094 Call PostProcessPass.<Render>g__GetDestination|69_1, X0, X1
	1095 Move X22, [X19+288]
	1096 Compare X22, 0
	1097 JumpIfEqual {1290}
	1098 Move X21, X0
	1099 Move X0, [X22+24]
	1100 Move X19, [X19+592]
	1101 Compare X0, 0
	1102 JumpIfEqual {1209}
	1103 Move X1, X31
	1104 Call Texture.get_filterMode, X0
	1105 NotImplemented "Instruction CMP not yet implemented."
	1106 Move W23, 1
	1107 Move X8, [X31+24]
	1108 Move X0, [X8]
	1109 Compare X0, 0
	1110 JumpIfEqual {1291}
	1111 Move X8, [X0]
	1112 Move X9, [X8+584]
	1113 Move X2, [X8+592]
	1114 Move W1, 1
	1115 NotImplemented "Instruction BLR not yet implemented."
	1116 Move X8, [X31+24]
	1117 Move X0, [X8]
	1118 Compare X0, 0
	1119 JumpIfEqual {1292}
	1120 Move X8, [X0]
	1121 Move X1, [X31+608]
	1122 Move X9, [X8+408]
	1123 Move X2, [X8+416]
	1124 NotImplemented "Instruction BLR not yet implemented."
	1125 Move X20, X0
	1126 Move [X31+584], X0
	1127 Move X8, [X19+408]
	1128 Compare X8, 0
	1129 JumpIfEqual {1281}
	1130 Move X9, 0x6F1000
	1131 Move X9, [X9+3624]
	1132 Move X25, [X31+608]
	1133 Move X24, [X31+576]
	1134 Move X21, [X8+96]
	1135 Move X0, [X9]
	1136 Move W9, [X0+224]
	1137 Compare W9, 0
	1138 JumpIfNotEqual {1140}
	1139 Call 0x1C17DFC
	1140 Move X0, X25
	1141 Move X1, X24
	1142 Move X2, X20
	1143 Move W3, W23
	1144 Move W4, W31
	1145 Move X5, X21
	1146 Move W6, W31
	1147 Move X7, X31
	1148 Call Blitter.BlitCameraTexture, X0, X1, X2, X3, X4, X5, X6
	1149 Move X8, [X31+24]
	1150 Move X0, [X8]
	1151 Compare X0, 0
	1152 JumpIfEqual {1282}
	1153 Move X1, [X31+584]
	1154 Move X2, X31
	1155 Call ScriptableRenderer.ConfigureCameraColorTarget, X0, X1
	1156 Move X1, [X31+24]
	1157 Add X2, X31, 576
	1158 Move X0, X19
	1159 Call PostProcessPass.<Render>g__Swap|69_2, X0, X1, X2
	1160 Move V0, [X31+528]
	1161 Move V1, [X31+544]
	1162 Move X8, [X31+560]
	1163 Move [X31+480], V0
	1164 Move [X31+488], V1
	1165 Move V0, [X31+480]
	1166 Move V1, [X31+496]
	1167 Move [X31+512], X8
	1168 Move [X31+64], X8
	1169 Move [X31+32], V0
	1170 Move [X31+40], V1
	1171 Add X0, X31, 32
	1172 Move X1, X31
	1173 Call RTHandleStaticHelpers.SetRTHandleStaticWrapper, X0
	1174 Move X8, [X19+408]
	1175 Compare X8, 0
	1176 JumpIfEqual {1285}
	1177 Move X9, 0x6F2000
	1178 Move X9, [X9+152]
	1179 Move X10, 0x6F3000
	1180 Move X9, [X9]
	1181 Move X10, [X10+16]
	1182 Move X25, [X31+608]
	1183 Move X24, [X31+576]
	1184 Move X9, [X9+184]
	1185 Move X0, [X10]
	1186 Move X21, [X8+96]
	1187 Move X19, [X9]
	1188 Move W10, [X0+224]
	1189 Compare W10, 0
	1190 JumpIfNotEqual {1192}
	1191 Call 0x1C17DFC
	1192 Move X0, X25
	1193 Move X1, X20
	1194 Move X2, X24
	1195 Move X3, X19
	1196 Move W4, W23
	1197 Move W5, W31
	1198 Move X6, X21
	1199 Move W7, W31
	1200 Move [X31], X31
	1201 Call RenderingUtils.FinalBlit, X0, X1, X2, X3, X4, X5, X6, X7
	1202 Move X8, [X31+24]
	1203 Move X0, [X8]
	1204 Compare X0, 0
	1205 JumpIfEqual {1286}
	1206 Move X1, X19
	1207 Move X2, X31
	1208 Call ScriptableRenderer.ConfigureCameraColorTarget, X0, X1
	1209 Move W23, W31
	1210 Move X8, 0x6F1000
	1211 Move X8, [X8+3624]
	1212 Move X0, [X8]
	1213 Move W8, [X0+224]
	1214 Compare W8, 0
	1215 JumpIfNotEqual {1217}
	1216 Call 0x1C17DFC
	1217 Move W3, 2
	1218 Move X0, X20
	1219 Move X1, X21
	1220 Move X2, X22
	1221 Move W4, W31
	1222 Move X5, X19
	1223 Move W6, W23
	1224 Move X7, X31
	1225 Call Blitter.BlitCameraTexture, X0, X1, X2, X3, X4, X5, X6
	1226 Add X0, X31, 632
	1227 Move X1, X31
	1228 Call ProfilingScope.Dispose, X0
	1229 Add X31, X31, 624
	1230 Move X20, [X31+112]
	1231 Move X19, [X31+120]
	1232 Move X22, [X31+96]
	1233 Move X21, [X31+104]
	1234 Move X24, [X31+80]
	1235 Move X23, [X31+88]
	1236 Move X26, [X31+64]
	1237 Move X25, [X31+72]
	1238 Move X28, [X31+48]
	1239 Move X27, [X31+56]
	1240 Move X29, [X31+32]
	1241 Move X30, [X31+40]
	1242 Move D9, [X31+16]
	1243 Move D8, [X31+24]
	1244 Move V10, [X31+128]
	1245 Return 
	1246 Move W8, [X19+565]
	1247 Call 0x1C17F20
	1248 Call 0x1C17F20
	1249 Call 0x1C17F20
	1250 Call 0x1C17F20
	1251 Call 0x1C17F20
	1252 Call 0x1C17F20
	1253 Call 0x1C17F20
	1254 Call 0x1C17F20
	1255 Call 0x1C17F20
	1256 Call 0x1C17F20
	1257 Call 0x1C17F20
	1258 Call 0x1C17F20
	1259 Call 0x1C17F20
	1260 Call 0x1C17F20
	1261 Call 0x1C17F20
	1262 Move X0, X26
	1263 Call 0x1C17F18
	1264 Call 0x1C17F20
	1265 Call 0x1C17F20
	1266 Call 0x1C17F20
	1267 Move X0, X26
	1268 Call 0x1C17F18
	1269 Move X0, X26
	1270 Call 0x1C17F18
	1271 Call 0x1C17F20
	1272 Call 0x1C17F20
	1273 Call 0x1C17F20
	1274 Call 0x1C17F20
	1275 Call 0x1C17F20
	1276 Call 0x1C17F20
	1277 Call 0x1C17F20
	1278 Call 0x1C17F20
	1279 Call 0x1C17F20
	1280 Call 0x1C17F20
	1281 Call 0x1C17F20
	1282 Call 0x1C17F20
	1283 Call 0x1C17F20
	1284 Call 0x1C17F20
	1285 Call 0x1C17F20
	1286 Call 0x1C17F20
	1287 Call 0x1C17F20
	1288 Call 0x1C17F20
	1289 Call 0x1C17F20
	1290 Call 0x1C17F20
	1291 Call 0x1C17F20
	1292 Call 0x1C17F20
	1293 Move X25, X1
	1294 Move X24, X0
	1295 NotImplemented "Instruction CMP not yet implemented."
	1296 Move X0, X24
	1297 Call 0x3EB2AD0
	1298 Move X26, [X0]
	1299 Call 0x3EB2AE0
	1300 Move W22, W31
	1301 Move X26, X31
	1302 Add X0, X31, 520
	1303 Move X1, X31
	1304 Call ProfilingScope.Dispose, X0
	1305 Compare X26, 0
	1306 JumpIfEqual {1473}
	1307 Move X0, X26
	1308 Call 0x1C17F18
	1309 Move X25, X1
	1310 Move X24, X0
	1311 Move X25, X1
	1312 Move X24, X0
	1313 NotImplemented "Instruction CMP not yet implemented."
	1314 Move X0, X24
	1315 Call 0x3EB2AD0
	1316 Move X26, [X0]
	1317 Call 0x3EB2AE0
	1318 Move W22, W31
	1319 Move X26, X31
	1320 Add X0, X31, 520
	1321 Move X1, X31
	1322 Call ProfilingScope.Dispose, X0
	1323 Compare X26, 0
	1324 JumpIfEqual {1473}
	1325 Move X0, X26
	1326 Call 0x1C17F18
	1327 Move X25, X1
	1328 Move X24, X0
	1329 Move X25, X1
	1330 Move X24, X0
	1331 NotImplemented "Instruction CMP not yet implemented."
	1332 Move X0, X24
	1333 Call 0x3EB2AD0
	1334 Move X26, [X0]
	1335 Call 0x3EB2AE0
	1336 Move W22, W31
	1337 Move X26, X31
	1338 Add X0, X31, 520
	1339 Move X1, X31
	1340 Call ProfilingScope.Dispose, X0
	1341 Compare X26, 0
	1342 JumpIfEqual {1473}
	1343 Move X0, X26
	1344 Call 0x1C17F18
	1345 Move X25, X1
	1346 Move X24, X0
	1347 Move X24, X0
	1348 NotImplemented "Instruction CMP not yet implemented."
	1349 Move X0, X24
	1350 Call 0x3EB2AD0
	1351 Move X26, [X0]
	1352 Call 0x3EB2AE0
	1353 Add X0, X31, 632
	1354 Move X1, X31
	1355 Call ProfilingScope.Dispose, X0
	1356 Compare X26, 0
	1357 JumpIfEqual {475}
	1358 Move X26, X31
	1359 Move X24, X0
	1360 Add X0, X31, 632
	1361 Move X1, X31
	1362 Call ProfilingScope.Dispose, X0
	1363 Compare X26, 0
	1364 JumpIfEqual {1492}
	1365 Move X0, X26
	1366 Call 0x1C17F18
	1367 Move X24, X0
	1368 NotImplemented "Instruction CMP not yet implemented."
	1369 Move X0, X24
	1370 Call 0x3EB2AD0
	1371 Move X25, [X0]
	1372 Call 0x3EB2AE0
	1373 Add X0, X31, 632
	1374 Move X1, X31
	1375 Call ProfilingScope.Dispose, X0
	1376 Compare X25, 0
	1377 JumpIfEqual {554}
	1378 Move X25, X31
	1379 Move X24, X0
	1380 Add X0, X31, 632
	1381 Move X1, X31
	1382 Call ProfilingScope.Dispose, X0
	1383 Compare X25, 0
	1384 JumpIfEqual {1492}
	1385 Move X0, X25
	1386 Call 0x1C17F18
	1387 Move X24, X0
	1388 NotImplemented "Instruction CMP not yet implemented."
	1389 Move X0, X24
	1390 Call 0x3EB2AD0
	1391 Move X25, [X0]
	1392 Call 0x3EB2AE0
	1393 Add X0, X31, 632
	1394 Move X1, X31
	1395 Call ProfilingScope.Dispose, X0
	1396 Compare X25, 0
	1397 JumpIfEqual {523}
	1398 Move X25, X31
	1399 Move X24, X0
	1400 Add X0, X31, 632
	1401 Move X1, X31
	1402 Call ProfilingScope.Dispose, X0
	1403 Compare X25, 0
	1404 JumpIfEqual {1492}
	1405 Move X0, X25
	1406 Call 0x1C17F18
	1407 Move X24, X0
	1408 NotImplemented "Instruction CMP not yet implemented."
	1409 Move X0, X24
	1410 Call 0x3EB2AD0
	1411 Move X26, [X0]
	1412 Call 0x3EB2AE0
	1413 Add X0, X31, 632
	1414 Move X1, X31
	1415 Call ProfilingScope.Dispose, X0
	1416 Compare X26, 0
	1417 JumpIfEqual {396}
	1418 Move X26, X31
	1419 Move X24, X0
	1420 Add X0, X31, 632
	1421 Move X1, X31
	1422 Call ProfilingScope.Dispose, X0
	1423 Compare X26, 0
	1424 JumpIfEqual {1492}
	1425 Move X0, X26
	1426 Call 0x1C17F18
	1427 Move X24, X0
	1428 NotImplemented "Instruction CMP not yet implemented."
	1429 Move X0, X24
	1430 Call 0x3EB2AD0
	1431 Move X25, [X0]
	1432 Call 0x3EB2AE0
	1433 Add X0, X31, 632
	1434 Move X1, X31
	1435 Call ProfilingScope.Dispose, X0
	1436 Compare X25, 0
	1437 JumpIfEqual {589}
	1438 Move X0, X25
	1439 Call 0x1C17F18
	1440 Move X25, X31
	1441 Move X24, X0
	1442 Add X0, X31, 632
	1443 Move X1, X31
	1444 Call ProfilingScope.Dispose, X0
	1445 Compare X25, 0
	1446 JumpIfEqual {1492}
	1447 Move X0, X25
	1448 Call 0x1C17F18
	1449 Move X24, X0
	1450 NotImplemented "Instruction CMP not yet implemented."
	1451 Move X0, X24
	1452 Call 0x3EB2AD0
	1453 Move X26, [X0]
	1454 Call 0x3EB2AE0
	1455 Add X0, X31, 632
	1456 Move X1, X31
	1457 Call ProfilingScope.Dispose, X0
	1458 Compare X26, 0
	1459 JumpIfEqual {427}
	1460 Move X0, X26
	1461 Call 0x1C17F18
	1462 Move X26, X31
	1463 Move X24, X0
	1464 Add X0, X31, 632
	1465 Move X1, X31
	1466 Call ProfilingScope.Dispose, X0
	1467 Compare X26, 0
	1468 JumpIfEqual {1492}
	1469 Move X0, X26
	1470 Call 0x1C17F18
	1471 Move X25, X1
	1472 Move X24, X0
	1473 NotImplemented "Instruction CMP not yet implemented."
	1474 Move X0, X24
	1475 Call 0x3EB2AD0
	1476 Move X19, [X0]
	1477 Call 0x3EB2AE0
	1478 Add X0, X31, 632
	1479 Move X1, X31
	1480 Call ProfilingScope.Dispose, X0
	1481 Compare X19, 0
	1482 JumpIfEqual {1229}
	1483 Move X0, X19
	1484 Call 0x1C17F18
	1485 Move X19, X31
	1486 Move X24, X0
	1487 Add X0, X31, 632
	1488 Move X1, X31
	1489 Call ProfilingScope.Dispose, X0
	1490 Compare X19, 0
	1491 JumpIfNotEqual {1494}
	1492 Move X0, X24
	1493 Call 0x1D2D690
	1494 Move X0, X19
	1495 Call 0x1C17F18
	1496 Call 0x1991590

Method: System.Void DoSubpixelMorphologicalAntialiasing(ref UnityEngine.Rendering.Universal.CameraData cameraData, UnityEngine.Rendering.CommandBuffer cmd, UnityEngine.Rendering.RTHandle source, UnityEngine.Rendering.RTHandle destination)

Disassembly:
	0x03A62F80 BL 0x39E3120
	0x03A62F84 LDR X8, [X20 + 0x168]
	0x03A62F88 CBZ X8, 0x3A63584
	0x03A62F8C LDR W9, [X8 + 0x18]
	0x03A62F90 CMP X25, X9
	0x03A62F94 B.CS 0x3A63588
	0x03A62F98 LDR X9, [X20 + 0x160]
	0x03A62F9C CBZ X9, 0x3A63584
	0x03A62FA0 LDR W10, [X9 + 0x18]
	0x03A62FA4 CMP X25, X10
	0x03A62FA8 B.CS 0x3A63588
	0x03A62FAC LDR X1, [X8, X26, LSL]
	0x03A62FB0 LDR X2, [X9, X26, LSL]
	0x03A62FB4 MOVZ W3, 0x2
	0x03A62FB8 MOVZ W6, 0x2
	0x03A62FBC MOV X0, X21
	0x03A62FC0 MOV W4, W31
	0x03A62FC4 MOV X5, X22
	0x03A62FC8 MOV X7, X31
	0x03A62FCC BL 0x39E3120
	0x03A62FD0 LDR X8, [X20 + 0x160]
	0x03A62FD4 CBZ X8, 0x3A63584
	0x03A62FD8 LDR W9, [X8 + 0x18]
	0x03A62FDC CMP X25, X9
	0x03A62FE0 B.CS 0x3A63588
	0x03A62FE4 ADD X25, X25, 0x1
	0x03A62FE8 ADD X8, X8, X26
	0x03A62FEC CMP X19, X25
	0x03A62FF0 ADD X26, X26, 0x8
	0x03A62FF4 B.NE 0x3A62F2C
	0x03A62FF8 ADRP X25, 0x6F4000
	0x03A62FFC LDR X25, [X25 + 0x550]
	0x03A63000 SUBS W8, W29, 0x2
	0x03A63004 B.MI 0x3A63170
	0x03A63008 MOV W8, W8
	0x03A6300C MOVZ X9, 0x1
	0x03A63010 ADD X10, X8, 0x1
	0x03A63014 MOV X29, X31
	0x03A63018 ADD X27, X8, 0x4
	0x03A6301C ADD X19, X9, X8, 0x20, LSL
	0x03A63020 SXTW X8, W10
	0x03A63024 STR X10, [X31 + 0x138]
	0x03A63028 STR X8, [X31 + 0x18]
	0x03A6302C CBZ X29, 0x3A63058
	0x03A63030 LDR X9, [X20 + 0x168]
	0x03A63034 CBZ X9, 0x3A63584
	0x03A63038 LDR W8, [X9 + 0x18]
	0x03A6303C SUB X10, X27, 0x3
	0x03A63040 CMP X10, X8
	0x03A63044 B.CS 0x3A63588
	0x03A63048 LDR X8, [X20 + 0x160]
	0x03A6304C CBZ X8, 0x3A63584
	0x03A63050 ADD X9, X9, X19, 0x1D, ASR
	0x03A63054 B 0x3A63078
	0x03A63058 LDR X8, [X20 + 0x160]
	0x03A6305C CBZ X8, 0x3A63584
	0x03A63060 LDR W9, [X8 + 0x18]
	0x03A63064 LDR X10, [X31 + 0x138]
	0x03A63068 CMP X10, X9
	0x03A6306C B.CS 0x3A63588
	0x03A63070 LDR X9, [X31 + 0x18]
	0x03A63074 ADD X9, X8, X9, 0x3, LSL
	0x03A63078 LDR W10, [X8 + 0x18]
	0x03A6307C SUB X28, X27, 0x4
	0x03A63080 ADD X9, X9, 0x20
	0x03A63084 CMP X28, X10
	0x03A63088 B.CS 0x3A63588
	0x03A6308C LDR X10, [X20 + 0x168]
	0x03A63090 CBZ X10, 0x3A63584
	0x03A63094 LDR W11, [X10 + 0x18]
	0x03A63098 CMP X28, X11
	0x03A6309C B.CS 0x3A63588
	0x03A630A0 LDR X0, [X25]
	0x03A630A4 LDR X26, [X9]
	0x03A630A8 LDR X23, [X8, X27, LSL #3]
	0x03A630AC LDR X24, [X10, X27, LSL #3]
	0x03A630B0 LDR W8, [X0 + 0xE0]
	0x03A630B4 CBNZ W8, 0x3A630C0
	0x03A630B8 BL 0x1C16DFC
	0x03A630BC LDR X0, [X25]
	0x03A630C0 LDR X8, [X0 + 0xB8]
	0x03A630C4 MOV X0, X26
	0x03A630C8 MOV X1, X31
	0x03A630CC LDR W25, [X8 + 0x4C]
	0x03A630D0 ADD X8, X31, 0x78
	0x03A630D4 BL 0x39CDF64
	0x03A630D8 LDUR V0, [X31 + 0x78]
	0x03A630DC LDUR V1, [X31 + 0x88]
	0x03A630E0 LDR X8, [X31 + 0x98]
	0x03A630E4 STP V0, V1, [X31 + 0xA0]
	0x03A630E8 STR X8, [X31 + 0xC0]
	0x03A630EC CBZ X21, 0x3A63584
	0x03A630F0 LDP V0, V1, [X31 + 0xA0]
	0x03A630F4 LDR X8, [X31 + 0xC0]
	0x03A630F8 ADD X2, X31, 0x50
	0x03A630FC MOV X0, X21
	0x03A63100 MOV W1, W25
	0x03A63104 MOV X3, X31
	0x03A63108 STP V0, V1, [X31 + 0x50]
	0x03A6310C STR X8, [X31 + 0x70]
	0x03A63110 BL 0x3C4FCFC
	0x03A63114 ADRP X8, 0x6EF000
	0x03A63118 LDR X8, [X8 + 0xE28]
	0x03A6311C LDR X0, [X8]
	0x03A63120 LDR W8, [X0 + 0xE0]
	0x03A63124 CBNZ W8, 0x3A6312C
	0x03A63128 BL 0x1C16DFC
	0x03A6312C MOVZ W3, 0x2
	0x03A63130 MOVZ W6, 0x3
	0x03A63134 MOV X0, X21
	0x03A63138 MOV X1, X23
	0x03A6313C MOV X2, X24
	0x03A63140 MOV W4, W31
	0x03A63144 MOV X5, X22
	0x03A63148 MOV X7, X31
	0x03A6314C BL 0x39E3120
	0x03A63150 ADRP X25, 0x6F3000
	0x03A63154 LDR X25, [X25 + 0x550]
	0x03A63158 MOV X8, INVALID
	0x03A6315C SUB X27, X27, 0x1
	0x03A63160 ADD X29, X29, 0x1
	0x03A63164 CMP X28, 0x0
	0x03A63168 ADD X19, X19, X8
	0x03A6316C B.GT 0x3A6302C
	0x03A63170 LDR X8, [X20 + 0x1C0]
	0x03A63174 CBZ X8, 0x3A63584
	0x03A63178 LDR X0, [X8 + 0x60]
	0x03A6317C LDR X23, [X31 + 0x10]
	0x03A63180 CBZ X0, 0x3A63584
	0x03A63184 LDR X8, [X0]
	0x03A63188 ADRP X19, 0x6F0000
	0x03A6318C LDR X9, [X8 + 0x218]
	0x03A63190 LDR X1, [X8 + 0x220]
	0x03A63194 LDR X19, [X19 + 0x460]
	0x03A63198 BLR X9
	0x03A6319C MOV X0, X31
	0x03A631A0 MOV V8.16B, V1.16B
	0x03A631A4 MOV V9.16B, V2.16B
	0x03A631A8 MOV V10.16B, V3.16B
	0x03A631AC BL 0x3C25A10
	0x03A631B0 MOV V11.16B, V0.16B
	0x03A631B4 MOV V0.16B, V8.16B
	0x03A631B8 MOV X0, X31
	0x03A631BC BL 0x3C25A10
	0x03A631C0 MOV V8.16B, V0.16B
	0x03A631C4 MOV V0.16B, V9.16B
	0x03A631C8 MOV X0, X31
	0x03A631CC BL 0x3C25A10
	0x03A631D0 LDR X0, [X19]
	0x03A631D4 STP S11, S8, [X31 + 0xE0]
	0x03A631D8 STP S0, S10, [X31 + 0xE8]
	0x03A631DC LDR W8, [X0 + 0xE0]
	0x03A631E0 CBNZ W8, 0x3A631E8
	0x03A631E4 BL 0x1C16DFC
	0x03A631E8 ADD X0, X31, 0xE0
	0x03A631EC MOV X1, X31
	0x03A631F0 BL 0x39E5358
	0x03A631F4 FCMP S0, 0x0
	0x03A631F8 B.LE 0x3A63220
	0x03A631FC LDP S1, S2, [X31 + 0xE0]
	0x03A63200 LDP S3, S4, [X31 + 0xE8]
	0x03A63204 FMOV S5, 1
	0x03A63208 FDIV S5, S5, S0
	0x03A6320C FMUL S0, S5, S1
	0x03A63210 FMUL S1, S5, S2
	0x03A63214 FMUL S2, S5, S3
	0x03A63218 FMUL S3, S5, S4
	0x03A6321C B 0x3A63230
	0x03A63220 FMOV S0, 1
	0x03A63224 FMOV S1, 1
	0x03A63228 FMOV S2, 1
	0x03A6322C FMOV S3, 1
	0x03A63230 STP S0, S1, [X31 + 0xE0]
	0x03A63234 STP S2, S3, [X31 + 0xE8]
	0x03A63238 LDR X8, [X20 + 0x1C0]
	0x03A6323C CBZ X8, 0x3A63584
	0x03A63240 LDR X0, [X8 + 0x48]
	0x03A63244 CBZ X0, 0x3A63584
	0x03A63248 LDR X8, [X0]
	0x03A6324C LDR X9, [X8 + 0x218]
	0x03A63250 LDR X1, [X8 + 0x220]
	0x03A63254 BLR X9
	0x03A63258 LDR X0, [X25]
	0x03A6325C LDP S10, S9, [X31 + 0xE0]
	0x03A63260 LDR V8, [X31 + 0xE8]
	0x03A63264 MOV V11.16B, V0.16B
	0x03A63268 LDR W8, [X0 + 0xE0]
	0x03A6326C CBNZ W8, 0x3A63274
	0x03A63270 BL 0x1C16DFC
	0x03A63274 CBZ X23, 0x3A63584
	0x03A63278 LDR X8, [X25]
	0x03A6327C MOV X0, X23
	0x03A63280 MOV V0.16B, V11.16B
	0x03A63284 MOV V1.16B, V10.16B
	0x03A63288 LDR X8, [X8 + 0xB8]
	0x03A6328C MOV V2.16B, V9.16B
	0x03A63290 MOV V3.16B, V8.16B
	0x03A63294 MOV X2, X31
	0x03A63298 LDR W1, [X8 + 0x50]
	0x03A6329C BL 0x3C15D80
	0x03A632A0 LDR X8, [X25]
	0x03A632A4 LDRB W9, [X20 + 0x204]
	0x03A632A8 FMOV S0, 1
	0x03A632AC FMOV S1, W31
	0x03A632B0 LDR X8, [X8 + 0xB8]
	0x03A632B4 CMP W9, 0x0
	0x03A632B8 FCSEL S0, S1, S0, EQ
	0x03A632BC MOV X0, X23
	0x03A632C0 LDR W1, [X8 + 0x54]
	0x03A632C4 MOV X2, X31
	0x03A632C8 BL 0x3C15CD8
	0x03A632CC LDR X0, [X25]
	0x03A632D0 LDR W8, [X0 + 0xE0]
	0x03A632D4 CBNZ W8, 0x3A632E0
	0x03A632D8 BL 0x1C16DFC
	0x03A632DC LDR X0, [X25]
	0x03A632E0 LDR X8, [X20 + 0x168]
	0x03A632E4 CBZ X8, 0x3A63584
	0x03A632E8 LDR W9, [X8 + 0x18]
	0x03A632EC CBZ W9, 0x3A63588
	0x03A632F0 LDR X9, [X0 + 0xB8]
	0x03A632F4 LDR X0, [X8 + 0x20]
	0x03A632F8 ADD X8, X31, 0x78
	0x03A632FC MOV X1, X31
	0x03A63300 LDR W22, [X9 + 0x58]
	0x03A63304 BL 0x39CDF64
	0x03A63308 LDUR V0, [X31 + 0x78]
	0x03A6330C LDUR V1, [X31 + 0x88]
	0x03A63310 LDR X8, [X31 + 0x98]
	0x03A63314 STP V0, V1, [X31 + 0xA0]
	0x03A63318 STR X8, [X31 + 0xC0]
	0x03A6331C CBZ X21, 0x3A63584
	0x03A63320 LDP V0, V1, [X31 + 0xA0]
	0x03A63324 LDR X8, [X31 + 0xC0]
	0x03A63328 ADD X2, X31, 0x20
	0x03A6332C MOV X0, X21
	0x03A63330 MOV W1, W22
	0x03A63334 MOV X3, X31
	0x03A63338 STP V0, V1, [X31 + 0x20]
	0x03A6333C STR X8, [X31 + 0x40]
	0x03A63340 BL 0x3C4FCFC
	0x03A63344 LDR X8, [X20 + 0x1C0]
	0x03A63348 CBZ X8, 0x3A63584
	0x03A6334C LDR X0, [X8 + 0x80]
	0x03A63350 CBZ X0, 0x3A63584
	0x03A63354 LDR X8, [X0]
	0x03A63358 ADRP X19, 0x690000
	0x03A6335C LDR X9, [X8 + 0x218]
	0x03A63360 LDR X1, [X8 + 0x220]
	0x03A63364 LDR X19, [X19 + 0x598]
	0x03A63368 BLR X9
	0x03A6336C LDR X8, [X19]
	0x03A63370 MOV X21, X0
	0x03A63374 LDR W9, [X8 + 0xE0]
	0x03A63378 CBNZ W9, 0x3A63384
	0x03A6337C MOV X0, X8
	0x03A63380 BL 0x1C16DFC
	0x03A63384 MOV X0, X21
	0x03A63388 MOV X1, X31
	0x03A6338C MOV X2, X31
	0x03A63390 BL 0x3C3883C
	0x03A63394 TBZ X0, 0x0, 0x3A633A4
	0x03A63398 MOV X0, X31
	0x03A6339C BL 0x3C1B398
	0x03A633A0 B 0x3A633C4
	0x03A633A4 LDR X8, [X20 + 0x1C0]
	0x03A633A8 CBZ X8, 0x3A63584
	0x03A633AC LDR X0, [X8 + 0x80]
	0x03A633B0 CBZ X0, 0x3A63584
	0x03A633B4 LDR X8, [X0]
	0x03A633B8 LDR X9, [X8 + 0x218]
	0x03A633BC LDR X1, [X8 + 0x220]
	0x03A633C0 BLR X9
	0x03A633C4 MOV X21, X0
	0x03A633C8 CBZ X0, 0x3A63584
	0x03A633CC LDR X8, [X21]
	0x03A633D0 MOV X0, X21
	0x03A633D4 LDP X9, X1, [X8 + 0x188]
	0x03A633D8 BLR X9
	0x03A633DC LDR X8, [X21]
	0x03A633E0 MOV W22, W0
	0x03A633E4 MOV X0, X21
	0x03A633E8 LDP X9, X1, [X8 + 0x1A8]
	0x03A633EC BLR X9
	0x03A633F0 LDR X9, [X20 + 0x1C0]
	0x03A633F4 CBZ X9, 0x3A63584
	0x03A633F8 MOV W8, W0
	0x03A633FC LDR X0, [X9 + 0x88]
	0x03A63400 CBZ X0, 0x3A63584
	0x03A63404 SCVTF S1, W8
	0x03A63408 LDR X8, [X0]
	0x03A6340C LDP S2, S3, [X20 + 0xE0]
	0x03A63410 SCVTF S0, W22
	0x03A63414 FDIV S11, S0, S1
	0x03A63418 LDR X9, [X8 + 0x218]
	0x03A6341C LDR X1, [X8 + 0x220]
	0x03A63420 SCVTF S0, S2
	0x03A63424 SCVTF S1, S3
	0x03A63428 FDIV S12, S0, S1
	0x03A6342C BLR X9
	0x03A63430 FCMP S11, S12
	0x03A63434 MOV V8.16B, V0.16B
	0x03A63438 B.LE 0x3A63454
	0x03A6343C FDIV S10, S12, S11
	0x03A63440 FMOV S11, 1
	0x03A63444 FMOV S0, 0.5
	0x03A63448 FSUB S1, S11, S10
	0x03A6344C FMUL S9, S1, S0
	0x03A63450 B 0x3A63480
	0x03A63454 FMOV S9, W31
	0x03A63458 FCMP S12, S11
	0x03A6345C FMOV S10, 1
	0x03A63460 B.LE 0x3A6347C
	0x03A63464 FDIV S11, S11, S12
	0x03A63468 FMOV S10, 1
	0x03A6346C FSUB S0, S10, S11
	0x03A63470 FMOV S1, 0.5
	0x03A63474 FMUL S12, S0, S1
	0x03A63478 B 0x3A63484
	0x03A6347C FMOV S11, 1
	0x03A63480 FMOV S12, W31
	0x03A63484 LDR X0, [X25]
	0x03A63488 LDR W8, [X0 + 0xE0]
	0x03A6348C CBNZ W8, 0x3A63498
	0x03A63490 BL 0x1C16DFC
	0x03A63494 LDR X0, [X25]
	0x03A63498 LDR X8, [X0 + 0xB8]
	0x03A6349C MOV X0, X23
	0x03A634A0 MOV V0.16B, V10.16B
	0x03A634A4 MOV V1.16B, V11.16B
	0x03A634A8 LDR W1, [X8 + 0x60]
	0x03A634AC MOV V2.16B, V9.16B
	0x03A634B0 MOV V3.16B, V12.16B
	0x03A634B4 MOV X2, X31
	0x03A634B8 BL 0x3C15D80
	0x03A634BC LDR X8, [X25]
	0x03A634C0 MOV X0, X23
	0x03A634C4 MOV V0.16B, V8.16B
	0x03A634C8 MOV X2, X31
	0x03A634CC LDR X8, [X8 + 0xB8]
	0x03A634D0 LDR W1, [X8 + 0x64]
	0x03A634D4 BL 0x3C15CD8
	0x03A634D8 LDR X8, [X25]
	0x03A634DC MOV X0, X23
	0x03A634E0 MOV X2, X21
	0x03A634E4 MOV X3, X31
	0x03A634E8 LDR X8, [X8 + 0xB8]
	0x03A634EC LDR W1, [X8 + 0x5C]
	0x03A634F0 BL 0x3C14C34
	0x03A634F4 LDR X8, [X20 + 0x1C0]
	0x03A634F8 CBZ X8, 0x3A63584
	0x03A634FC ADRP X22, 0x6F3000
	0x03A63500 LDR X0, [X8 + 0x68]
	0x03A63504 LDR X22, [X22 + 0x690]
	0x03A63508 CBZ X0, 0x3A63584
	0x03A6350C LDR X8, [X0]
	0x03A63510 ADRP X19, 0x6F3000
	0x03A63514 ADRP X20, 0x6F3000
	0x03A63518 ADRP X21, 0x6F3000
	0x03A6351C LDR X9, [X8 + 0x218]
	0x03A63520 LDR X1, [X8 + 0x220]
	0x03A63524 LDR X19, [X19 + 0x6A0]
	0x03A63528 LDR X20, [X20 + 0x698]
	0x03A6352C LDR X21, [X21 + 0x680]
	0x03A63530 BLR X9
	0x03A63534 ANDS W31, W0, 0x1
	0x03A63538 CSEL X8, X19, X20, NE
	0x03A6353C CSEL X9, X22, X21, NE
	0x03A63540 FCMP S8, 0x0
	0x03A63544 CSEL X8, X8, X9, GT
	0x03A63548 LDR X1, [X8]
	0x03A6354C MOV X0, X23
	0x03A63550 MOV X2, X31
	0x03A63554 BL 0x3C14E3C
	0x03A63558 LDP X20, X19, [X31 + 0x1B0]
	0x03A6355C LDP X22, X21, [X31 + 0x1A0]
	0x03A63560 LDP X24, X23, [X31 + 0x190]
	0x03A63564 LDP X26, X25, [X31 + 0x180]
	0x03A63568 LDP X28, X27, [X31 + 0x170]

ISIL:
	001 Move [X31-144], D12
	002 Move [X31+16], D11
	003 Move [X31+24], D10
	004 Move [X31+32], D9
	005 Move [X31+40], D8
	006 Move [X31+48], X29
	007 Move [X31+56], X30
	008 Move [X31+64], X28
	009 Move [X31+72], X27
	010 Move [X31+80], X26
	011 Move [X31+88], X25
	012 Move [X31+96], X24
	013 Move [X31+104], X23
	014 Move [X31+112], X22
	015 Move [X31+120], X21
	016 Move [X31+128], X20
	017 Move [X31+136], X19
	018 Subtract X31, X31, 368
	019 Move X22, 0x981000
	020 Move W8, [X22+576]
	021 Move X29, X4
	022 Move X20, X3
	023 Move X21, X2
	024 Move X23, X1
	025 Move X24, X0
	026 Move TEMP, X8
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {59}
	030 Move X0, 0x6F1000
	031 Move X0, [X0+3624]
	032 Call 0x1C17CF4
	033 Move X0, 0x6F3000
	034 Move X0, [X0+16]
	035 Call 0x1C17CF4
	036 Move X0, 0x6F5000
	037 Move X0, [X0+1360]
	038 Call 0x1C17CF4
	039 Move X0, 0x6F5000
	040 Move X0, [X0+1584]
	041 Call 0x1C17CF4
	042 Move X0, 0x6F5000
	043 Move X0, [X0+1592]
	044 Call 0x1C17CF4
	045 Move X0, 0x6F4000
	046 Move X0, [X0+1600]
	047 Call 0x1C17CF4
	048 Move X0, 0x6F4000
	049 Move X0, [X0+1608]
	050 Call 0x1C17CF4
	051 Move X0, 0x6F4000
	052 Move X0, [X0+1616]
	053 Call 0x1C17CF4
	054 Move X0, 0x6F4000
	055 Move X0, [X0+1624]
	056 Call 0x1C17CF4
	057 Move W8, 1
	058 Move [X22+576], W8
	059 Move X19, 0x977000
	060 Move W8, [X19+1935]
	061 NotImplemented "Instruction MOVI not yet implemented."
	062 Move [X31+352], W31
	063 Move [X31+320], V0
	064 Move [X31+328], V0
	065 Move [X31+19], V0
	066 Compare W8, 0
	067 JumpIfNotEqual {73}
	068 Move X0, 0x699000
	069 Move X0, [X0+3848]
	070 Call 0x1C17CF4
	071 Move W8, 1
	072 Move [X19+1935], W8
	073 Move X8, [X24+408]
	074 Compare X8, 0
	075 JumpIfEqual {440}
	076 Move X9, [X24+296]
	077 Compare X9, 0
	078 JumpIfEqual {440}
	079 Move X10, 0x699000
	080 Move X10, [X10+3848]
	081 Move X27, 0x6F2000
	082 Move W0, 2
	083 Move X1, X31
	084 Move X10, [X10]
	085 Move X27, [X27+16]
	086 NotImplemented "Instruction LDUR not yet implemented."
	087 NotImplemented "Instruction LDUR not yet implemented."
	088 Move X10, [X10+184]
	089 Move X9, [X9+72]
	090 Move S11, [X23+216]
	091 Move S12, [X23+220]
	092 Move X22, [X8+24]
	093 Move S8, [X10]
	094 Move S9, [X10+4]
	095 Add X8, X31, 88
	096 Move [X31+176], X9
	097 Move [X31+144], V0
	098 Move [X31+152], V1
	099 Call RenderTargetIdentifier.op_Implicit, X0
	100 NotImplemented "Instruction LDUR not yet implemented."
	101 NotImplemented "Instruction LDUR not yet implemented."
	102 Move X8, [X31+120]
	103 Move V2, [X31+144]
	104 Move V3, [X31+160]
	105 Move X9, [X31+176]
	106 Add X0, X31, 256
	107 Add X1, X31, 208
	108 Move X2, X31
	109 Move [X31+208], V0
	110 Move [X31+216], V1
	111 Move [X31+240], X8
	112 Move [X31+256], V2
	113 Move [X31+264], V3
	114 Move [X31+288], X9
	115 Call RenderTargetIdentifier.op_Equality, X0, X1
	116 Move TEMP, X0
	117 And TEMP, TEMP, 1
	118 Compare TEMP, 1
	119 JumpIfEqual {123}
	120 Move W8, [X24+232]
	121 NotImplemented "Instruction CMP not yet implemented."
	122 Move X25, [X24+296]
	123 Move W1, [X24+224]
	124 Move W2, [X24+228]
	125 Move X19, 0x6F4000
	126 Move X19, [X19+1608]
	127 Add X8, X31, 144
	128 Move W4, 24
	129 Move X0, X24
	130 Move W3, W31
	131 Add X25, X24, 384
	132 Call PostProcessPass.GetCompatibleDescriptor, X0, X1, X2, X3, X4
	133 Move W8, [X31+192]
	134 Move V1, [X31+160]
	135 Move V0, [X31+176]
	136 Move V2, [X31+9]
	137 Move X0, [X27]
	138 Move [X31+352], W8
	139 Move [X31+320], V1
	140 Move [X31+328], V0
	141 Move [X31+19], V2
	142 Move W8, [X0+224]
	143 Compare W8, 0
	144 JumpIfNotEqual {146}
	145 Call 0x1C17DFC
	146 Move X6, [X19]
	147 Add X1, X31, 304
	148 Move S0, W31
	149 Move W2, 1
	150 Move W3, 1
	151 Move W5, 1
	152 Move X0, X25
	153 Move W4, W31
	154 Move X7, X31
	155 Call RenderingUtils.ReAllocateIfNeeded, X0, X1, X2, X3, X4, X5, V0, X6
	156 Move X25, [X25]
	157 Move W1, [X24+224]
	158 Move W2, [X24+228]
	159 Move W3, [X24+520]
	160 Move X19, 0x6F4000
	161 Move X28, 0x6F4000
	162 Move X19, [X19+1616]
	163 Move X28, [X28+1592]
	164 Add X8, X31, 144
	165 Move X0, X24
	166 Move W4, W31
	167 Add X26, X24, 376
	168 Call PostProcessPass.GetCompatibleDescriptor, X0, X1, X2, X3, X4
	169 Move W8, [X31+192]
	170 Move V1, [X31+160]
	171 Move V0, [X31+176]
	172 Move V2, [X31+9]
	173 Move X0, [X27]
	174 Move [X31+352], W8
	175 Move [X31+320], V1
	176 Move [X31+328], V0
	177 Move [X31+19], V2
	178 Move W8, [X0+224]
	179 Compare W8, 0
	180 JumpIfNotEqual {182}
	181 Call 0x1C17DFC
	182 Move X6, [X19]
	183 Add X1, X31, 304
	184 Move S0, W31
	185 Move W2, 1
	186 Move W3, 1
	187 Move W5, 1
	188 Move X0, X26
	189 Move W4, W31
	190 Move X7, X31
	191 Call RenderingUtils.ReAllocateIfNeeded, X0, X1, X2, X3, X4, X5, V0, X6
	192 Move W1, [X24+224]
	193 Move W2, [X24+228]
	194 Add X8, X31, 88
	195 Move W3, 8
	196 Move X0, X24
	197 Move W4, W31
	198 Add X27, X24, 368
	199 Call PostProcessPass.GetCompatibleDescriptor, X0, X1, X2, X3, X4
	200 NotImplemented "Instruction LDUR not yet implemented."
	201 NotImplemented "Instruction LDUR not yet implemented."
	202 NotImplemented "Instruction LDUR not yet implemented."
	203 Move W8, [X31+136]
	204 Move X6, [X28]
	205 Move [X31+304], V0
	206 Move [X31+312], V1
	207 Add X1, X31, 304
	208 Move S0, W31
	209 Move W3, 1
	210 Move W5, 1
	211 Move X0, X27
	212 Move W2, W31
	213 Move W4, W31
	214 Move X7, X31
	215 Move [X31+21], V2
	216 Move [X31+352], W8
	217 Call RenderingUtils.ReAllocateIfNeeded, X0, X1, X2, X3, X4, X5, V0, X6
	218 Move X0, [X24+376]
	219 Compare X0, 0
	220 JumpIfEqual {440}
	221 Move W8, [X0+168]
	222 Compare W8, 0
	223 JumpIfEqual {228}
	224 Add X8, X31, 144
	225 Move X1, X31
	226 Call RTHandle.get_rtHandleProperties, X0
	227 Move X19, [X31+168]
	228 Move X0, [X0+24]
	229 Compare X0, 0
	230 JumpIfEqual {440}
	231 Move X8, [X0]
	232 Move X9, [X8+392]
	233 Move X1, [X8+400]
	234 NotImplemented "Instruction BLR not yet implemented."
	235 Move X8, [X26]
	236 Compare X8, 0
	237 JumpIfEqual {440}
	238 Move W28, W0
	239 Move X0, [X8+24]
	240 Compare X0, 0
	241 JumpIfEqual {440}
	242 Move X8, [X0]
	243 Move X9, [X8+424]
	244 Move X1, [X8+432]
	245 NotImplemented "Instruction BLR not yet implemented."
	246 Move W19, W28
	247 NotImplemented "Instruction BFM not yet implemented."
	248 Move X28, 0x6F4000
	249 Move X28, [X28+1360]
	250 Move X0, [X28]
	251 Move W8, [X0+224]
	252 Compare W8, 0
	253 JumpIfNotEqual {255}
	254 Call 0x1C17DFC
	255 Compare X22, 0
	256 JumpIfEqual {440}
	257 Move X8, [X28]
	258 Move X9, X19
	259 ShiftRight X9, 32
	260 And X9, X9, 0x7FFFFFFF
	261 NotImplemented "Instruction SCVTF not yet implemented."
	262 NotImplemented "Instruction SCVTF not yet implemented."
	263 Move X8, [X8+184]
	264 Move S0, 1
	265 NotImplemented "Instruction FDIV not yet implemented."
	266 NotImplemented "Instruction FDIV not yet implemented."
	267 Move W1, [X8+48]
	268 Move X0, X22
	269 Move X2, X31
	270 Call Material.SetVector, X0, X1, X2
	271 Move X8, [X24+416]
	272 Compare X8, 0
	273 JumpIfEqual {440}
	274 Move X8, [X8+32]
	275 Compare X8, 0
	276 JumpIfEqual {440}
	277 Move X9, [X28]
	278 Move X2, [X8+32]
	279 Move X0, X22
	280 Move X3, X31
	281 Move X9, [X9+184]
	282 Move W1, [X9+52]
	283 Call Material.SetTexture, X0, X1, X2
	284 Move X8, [X24+416]
	285 Compare X8, 0
	286 JumpIfEqual {440}
	287 Move X8, [X8+32]
	288 Compare X8, 0
	289 JumpIfEqual {440}
	290 Move X9, [X28]
	291 Move X2, [X8+40]
	292 Move X0, X22
	293 Move X3, X31
	294 Move X9, [X9+184]
	295 Move W1, [X9+56]
	296 Call Material.SetTexture, X0, X1, X2
	297 Move X8, [X28]
	298 Move X0, X22
	299 Move X2, X31
	300 Move X8, [X8+184]
	301 Move W1, [X8+8]
	302 Move W8, 0x42800000
	303 Move S10, W8
	304 Move V0, V10
	305 Call Material.SetFloat, X0, X1, V0
	306 Move X8, [X28]
	307 Move X0, X22
	308 Move V0, V10
	309 Move X2, X31
	310 Move X8, [X8+184]
	311 Move W1, [X8+12]
	312 Call Material.SetFloat, X0, X1, V0
	313 Move X0, X22
	314 Move X1, X31
	315 Move X2, X31
	316 Call Material.set_shaderKeywords, X0, X1
	317 NotImplemented "Instruction LDRSW not yet implemented."
	318 NotImplemented "Instruction CMP not yet implemented."
	319 Move X9, 0x492000
	320 Add X9, X9, 2904
	321 Move X8, [X9]
	322 Move X0, X22
	323 Move X2, X31
	324 Move X1, [X8]
	325 Call Material.EnableKeyword, X0, X1
	326 Move X8, 0x6F2000
	327 Move X8, [X8+16]
	328 Move X23, [X26]
	329 NotImplemented "Instruction SCVTF not yet implemented."
	330 NotImplemented "Instruction SCVTF not yet implemented."
	331 Move X0, [X8]
	332 Move W8, [X0+224]
	333 Compare W8, 0
	334 JumpIfNotEqual {336}
	335 Call 0x1C17DFC
	336 Move W8, 5
	337 Move S4, W31
	338 Move S5, W31
	339 Move S6, W31
	340 Move S7, W31
	341 Move W3, 2
	342 Move W6, 2
	343 Move X0, X21
	344 Move X1, X20
	345 Move V0, V8
	346 Move V1, V9
	347 Move V2, V10
	348 Move V3, V11
	349 Move X2, X23
	350 Move W4, W31
	351 Move X5, X25
	352 Move W7, W31
	353 Move [X31+24], X31
	354 Move [X31+16], W31
	355 Move [X31+8], X22
	356 Move [X31], W8
	357 Call RenderingUtils.Blit, X0, X1, X2, X3, X4, X5, X6, X7, X8, X9, X10, X11, X12
	358 Move X1, [X26]
	359 Move X2, [X27]
	360 Move S4, W31
	361 Move S5, W31
	362 Move S6, W31
	363 Move S7, W31
	364 Move W3, 2
	365 Move W5, 1
	366 Move W7, 1
	367 Move V0, V8
	368 Move V1, V9
	369 Move V2, V10
	370 Move V3, V11
	371 Move X0, X21
	372 Move W4, W31
	373 Move X6, X22
	374 Move [X31], X31
	375 Call RenderingUtils.Blit, X0, X1, X2, X3, X4, X5, X6, X7, X8, X9
	376 Move X0, [X28]
	377 Move W8, [X0+224]
	378 Compare W8, 0
	379 JumpIfNotEqual {382}
	380 Call 0x1C17DFC
	381 Move X0, [X28]
	382 Move X8, [X27]
	383 Compare X8, 0
	384 JumpIfEqual {440}
	385 Move X9, [X0+184]
	386 Move X10, [X8+72]
	387 NotImplemented "Instruction LDUR not yet implemented."
	388 NotImplemented "Instruction LDUR not yet implemented."
	389 Move W1, [X9+64]
	390 Move [X31+176], X10
	391 Move [X31+144], V1
	392 Move [X31+152], V0
	393 Compare X21, 0
	394 JumpIfEqual {440}
	395 Move V0, [X31+144]
	396 Move V1, [X31+160]
	397 Move X8, [X31+176]
	398 Move X19, 0x6F0000
	399 Move X19, [X19+3624]
	400 Add X2, X31, 48
	401 Move X0, X21
	402 Move X3, X31
	403 Move [X31+48], V0
	404 Move [X31+56], V1
	405 Move [X31+80], X8
	406 Call CommandBuffer.SetGlobalTexture, X0, X1, X2
	407 Move X0, [X19]
	408 Move W8, [X0+224]
	409 Compare W8, 0
	410 JumpIfNotEqual {412}
	411 Call 0x1C17DFC
	412 Move W3, 2
	413 Move W6, 2
	414 Move X0, X21
	415 Move X1, X20
	416 Move X2, X29
	417 Move W4, W31
	418 Move X5, X22
	419 Move X7, X31
	420 Call Blitter.BlitCameraTexture, X0, X1, X2, X3, X4, X5, X6
	421 Add X31, X31, 368
	422 Move X20, [X31+128]
	423 Move X19, [X31+136]
	424 Move X22, [X31+112]
	425 Move X21, [X31+120]
	426 Move X24, [X31+96]
	427 Move X23, [X31+104]
	428 Move X26, [X31+80]
	429 Move X25, [X31+88]
	430 Move X28, [X31+64]
	431 Move X27, [X31+72]
	432 Move X29, [X31+48]
	433 Move X30, [X31+56]
	434 Move D9, [X31+32]
	435 Move D8, [X31+40]
	436 Move D11, [X31+16]
	437 Move D10, [X31+24]
	438 Move V12, [X31+144]
	439 Return 
	440 Call 0x1C17F20

Method: System.Void DoDepthOfField(UnityEngine.Camera camera, UnityEngine.Rendering.CommandBuffer cmd, UnityEngine.Rendering.RTHandle source, UnityEngine.Rendering.RTHandle destination, UnityEngine.Rect pixelRect)

Disassembly:
	0x03A6356C LDP X29, X30, [X31 + 0x160]
	0x03A63570 LDP D9, D8, [X31 + 0x150]
	0x03A63574 LDP D11, D10, [X31 + 0x140]
	0x03A63578 LDR V12, [X31 + 0x130]
	0x03A6357C ADD X31, X31, 0x1C0
	0x03A63580 RET
	0x03A63584 BL 0x1C16F20
	0x03A63588 BL 0x1C16F28
	0x03A6358C ADRP X0, 0x698000
	0x03A63590 LDR X0, [X0 + 0x760]
	0x03A63594 BL 0x1C16D08
	0x03A63598 BL 0x1C16F10
	0x03A6359C MOV X1, X31
	0x03A635A0 MOV X19, X0
	0x03A635A4 BL 0x3315FB8
	0x03A635A8 ADRP X0, 0x6F3000
	0x03A635AC LDR X0, [X0 + 0x6A8]
	0x03A635B0 BL 0x1C16D08
	0x03A635B4 MOV X1, X0
	0x03A635B8 MOV X0, X19
	0x03A635BC BL 0x1C16DEC
	0x03A635C0 STR D12, [X31 - 0x90]!
	0x03A635C4 STP D11, D10, [X31 + 0x10]
	0x03A635C8 STP D9, D8, [X31 + 0x20]
	0x03A635CC STP X29, X30, [X31 + 0x30]
	0x03A635D0 STP X28, X27, [X31 + 0x40]
	0x03A635D4 STP X26, X25, [X31 + 0x50]
	0x03A635D8 STP X24, X23, [X31 + 0x60]
	0x03A635DC STP X22, X21, [X31 + 0x70]
	0x03A635E0 STP X20, X19, [X31 + 0x80]
	0x03A635E4 SUB X31, X31, 0x2B0
	0x03A635E8 ADRP X19, 0x97F000
	0x03A635EC LDRB W8, [X19 + 0x245]
	0x03A635F0 MOV V8.16B, V1.16B
	0x03A635F4 MOV V9.16B, V0.16B
	0x03A635F8 MOV W23, W4
	0x03A635FC MOV X21, X2
	0x03A63600 MOV X24, X1
	0x03A63604 MOV X22, X0
	0x03A63608 TBNZ X8, 0x0, 0x3A6362C
	0x03A6360C ADRP X0, 0x6EF000
	0x03A63610 LDR X0, [X0 + 0xD98]
	0x03A63614 BL 0x1C16CF4
	0x03A63618 ADRP X0, 0x6F3000
	0x03A6361C LDR X0, [X0 + 0x550]
	0x03A63620 BL 0x1C16CF4
	0x03A63624 MOVZ W8, 0x1
	0x03A63628 STRB W8, [X19 + 0x245]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X0+424]
	007 Compare X8, 0
	008 JumpIfEqual {60}
	009 Move X22, X0
	010 Move X0, [X8+56]
	011 Compare X0, 0
	012 JumpIfEqual {60}
	013 Move X8, [X0]
	014 Move X19, X4
	015 Move X20, X3
	016 Move X21, X2
	017 Move X9, [X8+536]
	018 Move X1, [X8+544]
	019 NotImplemented "Instruction BLR not yet implemented."
	020 NotImplemented "Instruction CMP not yet implemented."
	021 Move X0, X22
	022 Move X2, X21
	023 Move X3, X20
	024 Move X4, X19
	025 Move X20, [X31+32]
	026 Move X19, [X31+40]
	027 Move X22, [X31+16]
	028 Move X21, [X31+24]
	029 Move X30, [X31+48]
	030 Call PostProcessPass.DoGaussianDepthOfField, X0, X1, X2, X3, X4, X5
	031 Return 
	032 Move X8, [X22+424]
	033 Compare X8, 0
	034 JumpIfEqual {60}
	035 Move X0, [X8+56]
	036 Compare X0, 0
	037 JumpIfEqual {60}
	038 Move X8, [X0]
	039 Move X9, [X8+536]
	040 Move X1, [X8+544]
	041 NotImplemented "Instruction BLR not yet implemented."
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X0, X22
	044 Move X1, X21
	045 Move X2, X20
	046 Move X3, X19
	047 Move X20, [X31+32]
	048 Move X19, [X31+40]
	049 Move X22, [X31+16]
	050 Move X21, [X31+24]
	051 Move X30, [X31+48]
	052 Call PostProcessPass.DoBokehDepthOfField, X0, X1, X2, X3, X4
	053 Return 
	054 Move X20, [X31+32]
	055 Move X19, [X31+40]
	056 Move X22, [X31+16]
	057 Move X21, [X31+24]
	058 Move X30, [X31+48]
	059 Return 
	060 Call 0x1C17F20

Method: System.Void DoGaussianDepthOfField(UnityEngine.Camera camera, UnityEngine.Rendering.CommandBuffer cmd, UnityEngine.Rendering.RTHandle source, UnityEngine.Rendering.RTHandle destination, UnityEngine.Rect pixelRect)

Disassembly:
	0x03A657E8 LDP X22, X21, [X31 + 0x80]
	0x03A657EC LDP X30, X23, [X31 + 0x70]
	0x03A657F0 LDP D9, D8, [X31 + 0x60]
	0x03A657F4 LDP D11, D10, [X31 + 0x50]
	0x03A657F8 LDP D13, D12, [X31 + 0x40]
	0x03A657FC LDP D15, D14, [X31 + 0x30]
	0x03A65800 ADD X31, X31, 0xA0
	0x03A65804 RET
	0x03A65808 BL 0x1C16F20
	0x03A6580C BL 0x1C16F28
	0x03A65810 ADRP X8, 0xFFFFFFFFFD085000
	0x03A65814 LDR V1, [X8 + 0x200]
	0x03A65818 FMOV S2, 14
	0x03A6581C FDIV S0, S2, S0
	0x03A65820 FMIN S0, S0, S1
	0x03A65824 RET
	0x03A65828 STP D15, D14, [X31 - 0x60]!
	0x03A6582C STP D13, D12, [X31 + 0x10]
	0x03A65830 STP D11, D10, [X31 + 0x20]
	0x03A65834 STP D9, D8, [X31 + 0x30]
	0x03A65838 STP X30, X21, [X31 + 0x40]
	0x03A6583C STP X20, X19, [X31 + 0x50]
	0x03A65840 ADRP X20, 0x97D000
	0x03A65844 ADRP X21, 0x68E000
	0x03A65848 LDRB W8, [X20 + 0x244]
	0x03A6584C LDR X21, [X21 + 0x598]
	0x03A65850 MOV V8.16B, V2.16B
	0x03A65854 MOV V9.16B, V1.16B
	0x03A65858 MOV V10.16B, V0.16B
	0x03A6585C MOV X19, X0
	0x03A65860 TBNZ X8, 0x0, 0x3A65884
	0x03A65864 ADRP X0, 0x6ED000
	0x03A65868 LDR X0, [X0 + 0xD98]
	0x03A6586C BL 0x1C16CF4
	0x03A65870 ADRP X0, 0x68E000
	0x03A65874 LDR X0, [X0 + 0x598]
	0x03A65878 BL 0x1C16CF4
	0x03A6587C MOVZ W8, 0x1
	0x03A65880 STRB W8, [X20 + 0x244]
	0x03A65884 LDR X0, [X21]
	0x03A65888 LDR W8, [X0 + 0xE0]
	0x03A6588C CBNZ W8, 0x3A65894
	0x03A65890 BL 0x1C16DFC
	0x03A65894 MOV X0, X19
	0x03A65898 MOV X1, X31
	0x03A6589C MOV X2, X31
	0x03A658A0 BL 0x3C354F8
	0x03A658A4 TBZ X0, 0x0, 0x3A65940
	0x03A658A8 CBZ X19, 0x3A65A3C
	0x03A658AC MOV X0, X19
	0x03A658B0 MOV X1, X31
	0x03A658B4 BL 0x3C1668C
	0x03A658B8 CBZ W0, 0x3A65960
	0x03A658BC CMP W0, 0x2
	0x03A658C0 B.EQ 0x3A65A04
	0x03A658C4 CMP W0, 0x1
	0x03A658C8 B.NE 0x3A65940
	0x03A658CC MOV X0, X19
	0x03A658D0 MOV X1, X31
	0x03A658D4 BL 0x3C32E90
	0x03A658D8 CBZ X0, 0x3A65A3C
	0x03A658DC MOV X1, X31
	0x03A658E0 BL 0x3C3FA04
	0x03A658E4 ADRP X8, 0x6ED000
	0x03A658E8 LDR X8, [X8 + 0xD98]
	0x03A658EC MOV V11.16B, V0.16B
	0x03A658F0 MOV V12.16B, V1.16B
	0x03A658F4 MOV V13.16B, V2.16B
	0x03A658F8 LDR X0, [X8]
	0x03A658FC LDR W8, [X0 + 0xE0]
	0x03A65900 CBNZ W8, 0x3A65908
	0x03A65904 BL 0x1C16DFC
	0x03A65908 MOV V0.16B, V11.16B
	0x03A6590C MOV V1.16B, V12.16B
	0x03A65910 MOV V2.16B, V13.16B
	0x03A65914 MOV V3.16B, V10.16B
	0x03A65918 MOV V4.16B, V9.16B
	0x03A6591C MOV V5.16B, V8.16B
	0x03A65920 LDP X20, X19, [X31 + 0x50]
	0x03A65924 LDP X30, X21, [X31 + 0x40]
	0x03A65928 LDP D9, D8, [X31 + 0x30]
	0x03A6592C LDP D11, D10, [X31 + 0x20]
	0x03A65930 LDP D13, D12, [X31 + 0x10]
	0x03A65934 MOV X0, X31
	0x03A65938 LDP D15, D14, [X31], #0x60
	0x03A6593C B 0x39CBC88
	0x03A65940 LDP X20, X19, [X31 + 0x50]
	0x03A65944 LDP X30, X21, [X31 + 0x40]
	0x03A65948 LDP D9, D8, [X31 + 0x30]
	0x03A6594C LDP D11, D10, [X31 + 0x20]
	0x03A65950 LDP D13, D12, [X31 + 0x10]
	0x03A65954 FMOV S0, 1
	0x03A65958 LDP D15, D14, [X31], #0x60
	0x03A6595C RET
	0x03A65960 MOV X0, X19
	0x03A65964 MOV X1, X31
	0x03A65968 BL 0x3C32E90
	0x03A6596C CBZ X0, 0x3A65A3C
	0x03A65970 MOV X1, X31
	0x03A65974 BL 0x3C3FA04
	0x03A65978 MOV X0, X19
	0x03A6597C MOV X1, X31
	0x03A65980 MOV V11.16B, V0.16B
	0x03A65984 MOV V12.16B, V1.16B
	0x03A65988 MOV V13.16B, V2.16B
	0x03A6598C BL 0x3C166C8
	0x03A65990 MOV X0, X19
	0x03A65994 MOV X1, X31
	0x03A65998 MOV V14.16B, V0.16B
	0x03A6599C BL 0x3C16704
	0x03A659A0 ADRP X8, 0x6ED000
	0x03A659A4 LDR X8, [X8 + 0xD98]
	0x03A659A8 MOV V15.16B, V0.16B
	0x03A659AC LDR X0, [X8]
	0x03A659B0 LDR W8, [X0 + 0xE0]
	0x03A659B4 CBNZ W8, 0x3A659BC
	0x03A659B8 BL 0x1C16DFC
	0x03A659BC MOVZ W8, 0x43340000
	0x03A659C0 FMOV S0, W8
	0x03A659C4 FDIV S7, S15, S0
	0x03A659C8 MOV V0.16B, V11.16B
	0x03A659CC MOV V1.16B, V12.16B
	0x03A659D0 MOV V2.16B, V13.16B
	0x03A659D4 MOV V3.16B, V10.16B
	0x03A659D8 MOV V4.16B, V9.16B
	0x03A659DC MOV V5.16B, V8.16B
	0x03A659E0 LDP X20, X19, [X31 + 0x50]
	0x03A659E4 LDP X30, X21, [X31 + 0x40]
	0x03A659E8 LDP D9, D8, [X31 + 0x30]
	0x03A659EC LDP D11, D10, [X31 + 0x20]
	0x03A659F0 LDP D13, D12, [X31 + 0x10]
	0x03A659F4 MOV V6.16B, V14.16B
	0x03A659F8 MOV X0, X31
	0x03A659FC LDP D15, D14, [X31], #0x60
	0x03A65A00 B 0x39CBCA8
	0x03A65A04 ADRP X8, 0x6ED000
	0x03A65A08 LDR X8, [X8 + 0xD98]
	0x03A65A0C LDR X0, [X8]
	0x03A65A10 LDR W8, [X0 + 0xE0]
	0x03A65A14 CBNZ W8, 0x3A65A1C
	0x03A65A18 BL 0x1C16DFC
	0x03A65A1C LDP X20, X19, [X31 + 0x50]
	0x03A65A20 LDP X30, X21, [X31 + 0x40]
	0x03A65A24 LDP D9, D8, [X31 + 0x30]
	0x03A65A28 LDP D11, D10, [X31 + 0x20]
	0x03A65A2C LDP D13, D12, [X31 + 0x10]
	0x03A65A30 MOV X0, X31
	0x03A65A34 LDP D15, D14, [X31], #0x60
	0x03A65A38 B 0x39CBC80
	0x03A65A3C BL 0x1C16F20
	0x03A65A40 SUB X31, X31, 0x140
	0x03A65A44 STR X29, [X31 + 0x100]
	0x03A65A48 STP X30, X23, [X31 + 0x110]
	0x03A65A4C STP X22, X21, [X31 + 0x120]
	0x03A65A50 STP X20, X19, [X31 + 0x130]
	0x03A65A54 ADRP X22, 0x97D000
	0x03A65A58 LDRB W8, [X22 + 0x247]
	0x03A65A5C MOV X20, X2
	0x03A65A60 MOV X21, X1
	0x03A65A64 MOV X19, X0
	0x03A65A68 TBNZ X8, 0x0, 0x3A65A8C
	0x03A65A6C ADRP X0, 0x6EF000
	0x03A65A70 LDR X0, [X0 + 0x918]
	0x03A65A74 BL 0x1C16CF4
	0x03A65A78 ADRP X0, 0x6EF000
	0x03A65A7C LDR X0, [X0 + 0x958]
	0x03A65A80 BL 0x1C16CF4
	0x03A65A84 MOVZ W8, 0x1
	0x03A65A88 STRB W8, [X22 + 0x247]
	0x03A65A8C STR X31, [X31 + 0x108]
	0x03A65A90 CBZ X21, 0x3A65C40
	0x03A65A94 ADRP X8, 0x6EF000
	0x03A65A98 LDR X8, [X8 + 0x918]
	0x03A65A9C ADD X1, X31, 0x108
	0x03A65AA0 MOV X0, X21
	0x03A65AA4 LDR X2, [X8]
	0x03A65AA8 BL 0x21A4990
	0x03A65AAC TBZ X0, 0x0, 0x3A65C28
	0x03A65AB0 LDR X8, [X31 + 0x108]
	0x03A65AB4 CBZ X8, 0x3A65C40
	0x03A65AB8 LDR X21, [X8 + 0x90]
	0x03A65ABC CBZ X21, 0x3A65C28
	0x03A65AC0 CBZ X20, 0x3A65C40
	0x03A65AC4 MOV X0, X20
	0x03A65AC8 MOV X1, X31
	0x03A65ACC BL 0x3984C98
	0x03A65AD0 TBZ X0, 0x0, 0x3A65B44
	0x03A65AD4 MOV X0, X20
	0x03A65AD8 MOV X1, X31
	0x03A65ADC BL 0x3984DE0
	0x03A65AE0 TBZ X0, 0x0, 0x3A65B44
	0x03A65AE4 ADRP X22, 0x6EF000
	0x03A65AE8 LDR X22, [X22 + 0x958]
	0x03A65AEC LDR X20, [X19]
	0x03A65AF0 LDR X0, [X22]
	0x03A65AF4 LDR W8, [X0 + 0xE0]
	0x03A65AF8 CBNZ W8, 0x3A65B00
	0x03A65AFC BL 0x1C16DFC
	0x03A65B00 CBZ X20, 0x3A65C40
	0x03A65B04 LDR X8, [X22]
	0x03A65B08 LDR X2, [X21 + 0x18]
	0x03A65B0C MOV X0, X20
	0x03A65B10 MOV X3, X31
	0x03A65B14 LDR X8, [X8 + 0xB8]
	0x03A65B18 LDR W1, [X8 + 0x1C]
	0x03A65B1C BL 0x3C15E84
	0x03A65B20 LDR X0, [X19]
	0x03A65B24 CBZ X0, 0x3A65C40
	0x03A65B28 LDR X8, [X22]
	0x03A65B2C LDR X2, [X21 + 0x10]
	0x03A65B30 MOV X3, X31
	0x03A65B34 LDR X8, [X8 + 0xB8]
	0x03A65B38 LDR W1, [X8 + 0x18]
	0x03A65B3C BL 0x3C15E84
	0x03A65B40 B 0x3A65C28
	0x03A65B44 MOV X0, X20
	0x03A65B48 MOV X1, X31
	0x03A65B4C BL 0x3984C98
	0x03A65B50 MOV X22, X31
	0x03A65B54 TBZ X0, 0x0, 0x3A65B5C
	0x03A65B58 LDRSW X22, [X20 + 0x24]
	0x03A65B5C ADRP X23, 0x6EF000
	0x03A65B60 LDR X23, [X23 + 0x958]
	0x03A65B64 LDR X20, [X19]
	0x03A65B68 LDR X0, [X23]
	0x03A65B6C LDR W8, [X0 + 0xE0]
	0x03A65B70 CBNZ W8, 0x3A65B7C
	0x03A65B74 BL 0x1C16DFC
	0x03A65B78 LDR X0, [X23]
	0x03A65B7C LDR X8, [X21 + 0x18]
	0x03A65B80 CBZ X8, 0x3A65C40
	0x03A65B84 LDR W9, [X8 + 0x18]
	0x03A65B88 CMP W22, W9
	0x03A65B8C B.CS 0x3A65C44
	0x03A65B90 LDR X9, [X0 + 0xB8]
	0x03A65B94 ADD X8, X8, X22, 0x6, LSL
	0x03A65B98 LDP V0, V1, [X8 + 0x40]
	0x03A65B9C LDP V2, V3, [X8 + 0x20]
	0x03A65BA0 LDR W1, [X9 + 0x14]
	0x03A65BA4 STP V0, V1, [X31 + 0xE0]
	0x03A65BA8 STP V2, V3, [X31 + 0xC0]
	0x03A65BAC CBZ X20, 0x3A65C40
	0x03A65BB0 LDP V0, V1, [X31 + 0xC0]
	0x03A65BB4 LDP V2, V3, [X31 + 0xE0]
	0x03A65BB8 ADD X2, X31, 0x80
	0x03A65BBC MOV X0, X20
	0x03A65BC0 MOV X3, X31
	0x03A65BC4 STP V0, V1, [X31 + 0x80]
	0x03A65BC8 STP V2, V3, [X31 + 0xA0]
	0x03A65BCC BL 0x3C15D84
	0x03A65BD0 LDR X8, [X21 + 0x10]
	0x03A65BD4 CBZ X8, 0x3A65C40
	0x03A65BD8 LDR W9, [X8 + 0x18]
	0x03A65BDC CMP W22, W9
	0x03A65BE0 B.CS 0x3A65C44
	0x03A65BE4 LDR X9, [X23]
	0x03A65BE8 ADD X8, X8, X22, 0x6, LSL
	0x03A65BEC LDR X0, [X19]
	0x03A65BF0 LDP V0, V1, [X8 + 0x40]
	0x03A65BF4 LDR X9, [X9 + 0xB8]
	0x03A65BF8 LDP V2, V3, [X8 + 0x20]
	0x03A65BFC LDR W1, [X9 + 0x10]
	0x03A65C00 STP V0, V1, [X31 + 0x60]
	0x03A65C04 STP V2, V3, [X31 + 0x40]
	0x03A65C08 CBZ X0, 0x3A65C40
	0x03A65C0C LDP V0, V1, [X31 + 0x40]
	0x03A65C10 LDP V2, V3, [X31 + 0x60]
	0x03A65C14 ADD X2, X31, 0x0
	0x03A65C18 MOV X3, X31
	0x03A65C1C STP V0, V1, [X31]
	0x03A65C20 STP V2, V3, [X31 + 0x20]
	0x03A65C24 BL 0x3C15D84
	0x03A65C28 LDP X20, X19, [X31 + 0x130]
	0x03A65C2C LDP X22, X21, [X31 + 0x120]
	0x03A65C30 LDP X30, X23, [X31 + 0x110]
	0x03A65C34 LDR X29, [X31 + 0x100]
	0x03A65C38 ADD X31, X31, 0x140
	0x03A65C3C RET
	0x03A65C40 BL 0x1C16F20
	0x03A65C44 BL 0x1C16F28
	0x03A65C48 STP D9, D8, [X31 - 0x20]!
	0x03A65C4C STP X30, X19, [X31 + 0x10]
	0x03A65C50 CBZ X1, 0x3A65CA0
	0x03A65C54 MOV X19, X0
	0x03A65C58 MOV X0, X1
	0x03A65C5C MOV X1, X31
	0x03A65C60 BL 0x3C03654
	0x03A65C64 ADRP X8, 0xFFFFFFFFFD085000
	0x03A65C68 LDR V1, [X8 + 0x104]
	0x03A65C6C LDP S8, S9, [X19 + 0xE0]
	0x03A65C70 FMUL S0, S0, S1
	0x03A65C74 FMOV S1, 0.5
	0x03A65C78 FMUL S0, S0, S1
	0x03A65C7C BL 0x3EB1E50
	0x03A65C80 LDP X30, X19, [X31 + 0x10]
	0x03A65C84 MOV V1.16B, V0.16B
	0x03A65C88 SCVTF S0, S8
	0x03A65C8C SCVTF S2, S9
	0x03A65C90 FDIV S0, S0, S2
	0x03A65C94 FMUL S0, S1, S0
	0x03A65C98 LDP D9, D8, [X31], #0x20
	0x03A65C9C RET
	0x03A65CA0 BL 0x1C16F20
	0x03A65CA4 STR D10, [X31 - 0x20]!
	0x03A65CA8 STP D9, D8, [X31 + 0x8]
	0x03A65CAC STR X30, [X31 + 0x18]
	0x03A65CB0 FMOV S9, 1
	0x03A65CB4 MOV V8.16B, V0.16B
	0x03A65CB8 FADD S10, S0, S9
	0x03A65CBC BL 0x3A65C48
	0x03A65CC0 FMUL S2, S0, S0
	0x03A65CC4 FADD S2, S2, S9
	0x03A65CC8 FSQRT S2, S2
	0x03A65CCC FDIV S2, S9, S2
	0x03A65CD0 FADD S3, S2, S8
	0x03A65CD4 LDR X30, [X31 + 0x18]
	0x03A65CD8 LDP D9, D8, [X31 + 0x8]
	0x03A65CDC FMUL S0, S0, S2
	0x03A65CE0 FMUL S1, S1, S2
	0x03A65CE4 FDIV S2, S10, S3
	0x03A65CE8 FMUL S0, S0, S2
	0x03A65CEC FMUL S1, S1, S2
	0x03A65CF0 LDR V10, [X31], #0x20
	0x03A65CF4 RET
	0x03A65CF8 STP X30, X27, [X31 - 0x50]!
	0x03A65CFC STP X26, X25, [X31 + 0x10]
	0x03A65D00 STP X24, X23, [X31 + 0x20]
	0x03A65D04 STP X22, X21, [X31 + 0x30]
	0x03A65D08 STP X20, X19, [X31 + 0x40]
	0x03A65D0C ADRP X27, 0x97D000
	0x03A65D10 ADRP X26, 0x6EB000
	0x03A65D14 ADRP X19, 0x6F1000
	0x03A65D18 ADRP X20, 0x6EF000
	0x03A65D1C ADRP X25, 0x6F1000
	0x03A65D20 ADRP X24, 0x6F1000
	0x03A65D24 ADRP X23, 0x6F1000
	0x03A65D28 ADRP X22, 0x6F1000
	0x03A65D2C ADRP X21, 0x6F1000
	0x03A65D30 LDR X26, [X26 + 0x598]
	0x03A65D34 LDR X19, [X19 + 0x728]
	0x03A65D38 LDR X20, [X20 + 0x958]
	0x03A65D3C LDRB W8, [X27 + 0x253]
	0x03A65D40 LDR X25, [X25 + 0x730]
	0x03A65D44 LDR X24, [X24 + 0x738]
	0x03A65D48 LDR X23, [X23 + 0x740]
	0x03A65D4C LDR X22, [X22 + 0x748]
	0x03A65D50 LDR X21, [X21 + 0x750]
	0x03A65D54 TBNZ X8, 0x0, 0x3A65DC0
	0x03A65D58 ADRP X0, 0x6EF000
	0x03A65D5C LDR X0, [X0 + 0x958]
	0x03A65D60 BL 0x1C16CF4
	0x03A65D64 ADRP X0, 0x6EB000
	0x03A65D68 LDR X0, [X0 + 0x598]
	0x03A65D6C BL 0x1C16CF4
	0x03A65D70 ADRP X0, 0x6F1000
	0x03A65D74 LDR X0, [X0 + 0x740]
	0x03A65D78 BL 0x1C16CF4
	0x03A65D7C ADRP X0, 0x6F1000
	0x03A65D80 LDR X0, [X0 + 0x750]
	0x03A65D84 BL 0x1C16CF4
	0x03A65D88 ADRP X0, 0x6F1000
	0x03A65D8C LDR X0, [X0 + 0x728]
	0x03A65D90 BL 0x1C16CF4
	0x03A65D94 ADRP X0, 0x6F1000
	0x03A65D98 LDR X0, [X0 + 0x738]
	0x03A65D9C BL 0x1C16CF4
	0x03A65DA0 ADRP X0, 0x6F1000
	0x03A65DA4 LDR X0, [X0 + 0x730]
	0x03A65DA8 BL 0x1C16CF4
	0x03A65DAC ADRP X0, 0x6F1000
	0x03A65DB0 LDR X0, [X0 + 0x748]
	0x03A65DB4 BL 0x1C16CF4
	0x03A65DB8 MOVZ W8, 0x1
	0x03A65DBC STRB W8, [X27 + 0x253]
	0x03A65DC0 LDR X0, [X26]
	0x03A65DC4 BL 0x1C16F10
	0x03A65DC8 LDR X1, [X19]
	0x03A65DCC MOV X2, X31
	0x03A65DD0 MOV X19, X0
	0x03A65DD4 BL 0x39B19AC
	0x03A65DD8 LDR X8, [X20]
	0x03A65DDC LDR X8, [X8 + 0xB8]
	0x03A65DE0 STR X19, [X8]
	0x03A65DE4 LDR X0, [X26]
	0x03A65DE8 BL 0x1C16F10
	0x03A65DEC LDR X1, [X25]
	0x03A65DF0 MOV X2, X31
	0x03A65DF4 MOV X19, X0
	0x03A65DF8 BL 0x39B19AC
	0x03A65DFC LDR X8, [X20]
	0x03A65E00 MOV X1, X31
	0x03A65E04 LDR X8, [X8 + 0xB8]
	0x03A65E08 STR X19, [X8 + 0x8]
	0x03A65E0C LDR X0, [X24]
	0x03A65E10 BL 0x3C124EC
	0x03A65E14 LDR X8, [X20]
	0x03A65E18 MOV X1, X31
	0x03A65E1C LDR X8, [X8 + 0xB8]
	0x03A65E20 STR W0, [X8 + 0x10]
	0x03A65E24 LDR X0, [X23]
	0x03A65E28 BL 0x3C124EC
	0x03A65E2C LDR X8, [X20]
	0x03A65E30 MOV X1, X31
	0x03A65E34 LDR X8, [X8 + 0xB8]
	0x03A65E38 STR W0, [X8 + 0x14]
	0x03A65E3C LDR X0, [X22]
	0x03A65E40 BL 0x3C124EC
	0x03A65E44 LDR X8, [X20]
	0x03A65E48 MOV X1, X31
	0x03A65E4C LDR X8, [X8 + 0xB8]
	0x03A65E50 STR W0, [X8 + 0x18]
	0x03A65E54 LDR X0, [X21]
	0x03A65E58 BL 0x3C124EC
	0x03A65E5C LDR X8, [X20]
	0x03A65E60 LDP X20, X19, [X31 + 0x40]
	0x03A65E64 LDP X22, X21, [X31 + 0x30]
	0x03A65E68 LDP X24, X23, [X31 + 0x20]
	0x03A65E6C LDR X8, [X8 + 0xB8]
	0x03A65E70 LDP X26, X25, [X31 + 0x10]
	0x03A65E74 STR W0, [X8 + 0x1C]
	0x03A65E78 LDP X30, X27, [X31], #0x50
	0x03A65E7C RET
	0x03A65E80 STR X30, [X31 - 0x20]!
	0x03A65E84 STP X20, X19, [X31 + 0x10]
	0x03A65E88 MOV X20, X1
	0x03A65E8C MOV X1, X31
	0x03A65E90 MOV X19, X0
	0x03A65E94 BL 0x33BDD8C
	0x03A65E98 CBZ X20, 0x3A65FAC
	0x03A65E9C LDR X8, [X20 + 0x18]
	0x03A65EA0 CBZ X8, 0x3A65FAC
	0x03A65EA4 LDR X1, [X8 + 0x10]
	0x03A65EA8 BL 0x3A65FB0
	0x03A65EAC STR X0, [X19 + 0x10]
	0x03A65EB0 LDR X8, [X20 + 0x18]
	0x03A65EB4 CBZ X8, 0x3A65FAC
	0x03A65EB8 LDR X1, [X8 + 0x18]
	0x03A65EBC BL 0x3A65FB0
	0x03A65EC0 STR X0, [X19 + 0x18]
	0x03A65EC4 LDR X8, [X20 + 0x18]
	0x03A65EC8 CBZ X8, 0x3A65FAC
	0x03A65ECC LDR X1, [X8 + 0x20]
	0x03A65ED0 BL 0x3A65FB0
	0x03A65ED4 STR X0, [X19 + 0x20]
	0x03A65ED8 LDR X8, [X20 + 0x18]
	0x03A65EDC CBZ X8, 0x3A65FAC
	0x03A65EE0 LDR X1, [X8 + 0x28]
	0x03A65EE4 BL 0x3A65FB0
	0x03A65EE8 STR X0, [X19 + 0x28]
	0x03A65EEC LDR X8, [X20 + 0x18]
	0x03A65EF0 CBZ X8, 0x3A65FAC
	0x03A65EF4 LDR X1, [X8 + 0x30]
	0x03A65EF8 BL 0x3A65FB0
	0x03A65EFC STR X0, [X19 + 0x30]
	0x03A65F00 LDR X8, [X20 + 0x18]
	0x03A65F04 CBZ X8, 0x3A65FAC
	0x03A65F08 LDR X1, [X8 + 0x38]
	0x03A65F0C BL 0x3A65FB0
	0x03A65F10 STR X0, [X19 + 0x38]
	0x03A65F14 LDR X8, [X20 + 0x18]
	0x03A65F18 CBZ X8, 0x3A65FAC
	0x03A65F1C LDR X1, [X8 + 0x50]
	0x03A65F20 BL 0x3A65FB0
	0x03A65F24 STR X0, [X19 + 0x40]
	0x03A65F28 LDR X8, [X20 + 0x18]
	0x03A65F2C CBZ X8, 0x3A65FAC
	0x03A65F30 LDR X1, [X8 + 0x58]
	0x03A65F34 BL 0x3A65FB0
	0x03A65F38 STR X0, [X19 + 0x48]
	0x03A65F3C LDR X8, [X20 + 0x18]
	0x03A65F40 CBZ X8, 0x3A65FAC
	0x03A65F44 LDR X1, [X8 + 0x68]
	0x03A65F48 BL 0x3A65FB0
	0x03A65F4C STR X0, [X19 + 0x50]
	0x03A65F50 LDR X8, [X20 + 0x18]
	0x03A65F54 CBZ X8, 0x3A65FAC
	0x03A65F58 LDR X1, [X8 + 0x70]
	0x03A65F5C BL 0x3A65FB0
	0x03A65F60 STR X0, [X19 + 0x58]
	0x03A65F64 LDR X8, [X20 + 0x18]
	0x03A65F68 CBZ X8, 0x3A65FAC
	0x03A65F6C LDR X1, [X8 + 0x78]
	0x03A65F70 BL 0x3A65FB0
	0x03A65F74 STR X0, [X19 + 0x60]
	0x03A65F78 LDR X8, [X20 + 0x18]
	0x03A65F7C CBZ X8, 0x3A65FAC
	0x03A65F80 LDR X1, [X8 + 0x80]
	0x03A65F84 BL 0x3A65FB0
	0x03A65F88 STR X0, [X19 + 0x68]
	0x03A65F8C LDR X8, [X20 + 0x18]

ISIL:
	001 Move [X31-128], D10
	002 Move [X31+16], D9
	003 Move [X31+24], D8
	004 Move [X31+32], X29
	005 Move [X31+40], X30
	006 Move [X31+48], X28
	007 Move [X31+56], X27
	008 Move [X31+64], X26
	009 Move [X31+72], X25
	010 Move [X31+80], X24
	011 Move [X31+88], X23
	012 Move [X31+96], X22
	013 Move [X31+104], X21
	014 Move [X31+112], X20
	015 Move [X31+120], X19
	016 Subtract X31, X31, 800
	017 Move X19, 0x97E000
	018 Move W8, [X19+577]
	019 Move X24, X4
	020 Move X20, X3
	021 Move X21, X2
	022 Move X23, X0
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {56}
	027 Move X0, 0x6EE000
	028 Move X0, [X0+3624]
	029 Call 0x1C17CF4
	030 Move X0, 0x6B7000
	031 Move X0, [X0+2296]
	032 Call 0x1C17CF4
	033 Move X0, 0x6F0000
	034 Move X0, [X0+16]
	035 Call 0x1C17CF4
	036 Move X0, 0x6F2000
	037 Move X0, [X0+1360]
	038 Call 0x1C17CF4
	039 Move X0, 0x6F2000
	040 Move X0, [X0+1792]
	041 Call 0x1C17CF4
	042 Move X0, 0x6F2000
	043 Move X0, [X0+1800]
	044 Call 0x1C17CF4
	045 Move X0, 0x6F2000
	046 Move X0, [X0+1808]
	047 Call 0x1C17CF4
	048 Move X0, 0x6F2000
	049 Move X0, [X0+1816]
	050 Call 0x1C17CF4
	051 Move X0, 0x6F2000
	052 Move X0, [X0+1824]
	053 Call 0x1C17CF4
	054 Move W8, 1
	055 Move [X19+577], W8
	056 NotImplemented "Instruction MOVI not yet implemented."
	057 Move [X31+784], W31
	058 Move [X31+752], V0
	059 Move [X31+760], V0
	060 Move [X31+46], V0
	061 Move X8, [X23+408]
	062 Compare X8, 0
	063 JumpIfEqual {562}
	064 Move X19, X23
	065 Move X22, [X8+32]
	066 Add X19, X19, 224
	067 Move W9, [X19]
	068 Move W10, [X19+4]
	069 Move X8, [X19+200]
	070 NotImplemented "Instruction CMP not yet implemented."
	071 NotImplemented "Instruction CINC not yet implemented."
	072 NotImplemented "Instruction CMP not yet implemented."
	073 NotImplemented "Instruction CINC not yet implemented."
	074 Compare X8, 0
	075 JumpIfEqual {562}
	076 Move X0, [X8+64]
	077 Compare X0, 0
	078 JumpIfEqual {562}
	079 Move X8, [X0]
	080 Move X9, [X8+536]
	081 Move X1, [X8+544]
	082 NotImplemented "Instruction BLR not yet implemented."
	083 Move X8, [X23+424]
	084 Compare X8, 0
	085 JumpIfEqual {562}
	086 Move X0, [X8+72]
	087 Compare X0, 0
	088 JumpIfEqual {562}
	089 Move X8, [X0]
	090 Move V8, V0
	091 Move X9, [X8+536]
	092 Move X1, [X8+544]
	093 NotImplemented "Instruction BLR not yet implemented."
	094 Move X8, [X23+424]
	095 NotImplemented "Instruction FCMP not yet implemented."
	096 NotImplemented "Instruction FCSEL not yet implemented."
	097 Compare X8, 0
	098 JumpIfEqual {562}
	099 Move X0, [X8+80]
	100 Compare X0, 0
	101 JumpIfEqual {562}
	102 Move X8, [X0]
	103 Move X9, [X8+536]
	104 Move X1, [X8+544]
	105 NotImplemented "Instruction BLR not yet implemented."
	106 Move X8, [X23+424]
	107 Compare X8, 0
	108 JumpIfEqual {562}
	109 Move X0, [X8+88]
	110 Move [X31+8], X24
	111 Compare X0, 0
	112 JumpIfEqual {562}
	113 Move X8, [X0]
	114 Move X24, 0x6B7000
	115 Move X27, 0x6F2000
	116 Move X28, 0x6F2000
	117 Move X9, [X8+536]
	118 Move X1, [X8+544]
	119 Move X24, [X24+2296]
	120 Move X27, [X27+1808]
	121 Move X28, [X28+1360]
	122 Move V10, V0
	123 NotImplemented "Instruction BLR not yet implemented."
	124 Move X8, [X24]
	125 Move W24, W0
	126 Move W9, [X8+224]
	127 Compare W9, 0
	128 JumpIfNotEqual {131}
	129 Move X0, X8
	130 Call 0x1C17DFC
	131 Move X1, [X27]
	132 And W2, W24, 1
	133 Move X0, X22
	134 Move X3, X31
	135 Call CoreUtils.SetKeyword, X0, X1, X2
	136 Move X0, [X28]
	137 Move W8, [X0+224]
	138 Compare W8, 0
	139 JumpIfNotEqual {141}
	140 Call 0x1C17DFC
	141 Compare X22, 0
	142 JumpIfEqual {562}
	143 Move X9, 0x6F2000
	144 Move X9, [X9+1360]
	145 Move W8, 0x44870000
	146 Move S1, W8
	147 NotImplemented "Instruction SBFM not yet implemented."
	148 Move X9, [X9]
	149 NotImplemented "Instruction SBFM not yet implemented."
	150 Move X25, 0x6F0000
	151 Move X27, 0x6F2000
	152 Move X8, [X9+184]
	153 NotImplemented "Instruction SCVTF not yet implemented."
	154 Move X25, [X25+16]
	155 Move X27, [X27+1800]
	156 Move W1, [X8+28]
	157 NotImplemented "Instruction FDIV not yet implemented."
	158 Move S1, 2
	159 Multiply S0, S0, S10
	160 NotImplemented "Instruction FMINNM not yet implemented."
	161 Move S3, W31
	162 Move X0, X22
	163 Move V0, V8
	164 Move V1, V9
	165 Move X2, X31
	166 Add X26, X31, 568
	167 Call Material.SetVector, X0, X1, X2
	168 Move W1, [X23+224]
	169 Move W2, [X23+228]
	170 Move W3, [X23+524]
	171 Add X8, X31, 680
	172 Move X0, X23
	173 Move W4, W31
	174 Add X24, X23, 320
	175 Call PostProcessPass.GetCompatibleDescriptor, X0, X1, X2, X3, X4
	176 Move W8, [X31+728]
	177 Move V1, [X26+128]
	178 Move V0, [X26+144]
	179 Move V2, [X26+7]
	180 Move X0, [X25]
	181 Move [X31+784], W8
	182 Move [X31+752], V1
	183 Move [X31+760], V0
	184 Move [X31+46], V2
	185 Move W8, [X0+224]
	186 Compare W8, 0
	187 JumpIfNotEqual {189}
	188 Call 0x1C17DFC
	189 Move X6, [X27]
	190 Add X1, X31, 736
	191 Move S0, W31
	192 Move W2, 1
	193 Move W3, 1
	194 Move W5, 1
	195 Move X0, X24
	196 Move W4, W31
	197 Move X7, X31
	198 Call RenderingUtils.ReAllocateIfNeeded, X0, X1, X2, X3, X4, X5, V0, X6
	199 Move W3, [X23+524]
	200 Add X8, X31, 624
	201 Move X0, X23
	202 Move W1, W28
	203 Move W2, W29
	204 Move W4, W31
	205 Add X25, X23, 328
	206 Call PostProcessPass.GetCompatibleDescriptor, X0, X1, X2, X3, X4
	207 Move X9, 0x6F2000
	208 Move V0, [X31+624]
	209 Move V1, [X31+640]
	210 Move V2, [X31+41]
	211 Move W8, [X31+672]
	212 Move X9, [X9+1792]
	213 Move [X31+736], V0
	214 Move [X31+744], V1
	215 Add X1, X31, 736
	216 Move S0, W31
	217 Move X6, [X9]
	218 Move W2, 1
	219 Move W3, 1
	220 Move W5, 1
	221 Move X0, X25
	222 Move W4, W31
	223 Move X7, X31
	224 Move [X31+48], V2
	225 Move [X31+784], W8
	226 Move [X31+808], X25
	227 Call RenderingUtils.ReAllocateIfNeeded, X0, X1, X2, X3, X4, X5, V0, X6
	228 Add X8, X31, 568
	229 Move W3, 48
	230 Move X0, X23
	231 Move W1, W28
	232 Move W2, W29
	233 Move W4, W31
	234 Add X25, X23, 336
	235 Call PostProcessPass.GetCompatibleDescriptor, X0, X1, X2, X3, X4
	236 Move X9, 0x6F2000
	237 Move V0, [X26]
	238 Move V1, [X26+16]
	239 Move V2, [X26+2]
	240 Move W8, [X31+616]
	241 Move X9, [X9+1816]
	242 Move [X31+736], V0
	243 Move [X31+744], V1
	244 Add X1, X31, 736
	245 Move S0, W31
	246 Move X6, [X9]
	247 Move W2, 1
	248 Move W3, 1
	249 Move W5, 1
	250 Move X0, X25
	251 Move W4, W31
	252 Move X7, X31
	253 Move [X31+48], V2
	254 Move [X31+784], W8
	255 Call RenderingUtils.ReAllocateIfNeeded, X0, X1, X2, X3, X4, X5, V0, X6
	256 Add X8, X31, 512
	257 Move W3, 48
	258 Move X0, X23
	259 Move W1, W28
	260 Move W2, W29
	261 Move W4, W31
	262 Add X27, X23, 344
	263 Call PostProcessPass.GetCompatibleDescriptor, X0, X1, X2, X3, X4
	264 Move X9, 0x6F2000
	265 Move V0, [X31+512]
	266 Move V1, [X31+528]
	267 Move V2, [X31+34]
	268 Move W8, [X31+560]
	269 Move X9, [X9+1824]
	270 Move [X31+736], V0
	271 Move [X31+744], V1
	272 Add X1, X31, 736
	273 Move S0, W31
	274 Move X6, [X9]
	275 Move W2, 1
	276 Move W3, 1
	277 Move W5, 1
	278 Move X0, X27
	279 Move W4, W31
	280 Move X7, X31
	281 Move [X31+48], V2
	282 Move [X31+784], W8
	283 Call RenderingUtils.ReAllocateIfNeeded, X0, X1, X2, X3, X4, X5, V0, X6
	284 Move W8, [X19+48]
	285 Move V2, [X19+16]
	286 Move V0, [X19+32]
	287 Move V1, [X19]
	288 Add X1, X31, 448
	289 Move X0, X21
	290 Move X2, X31
	291 Move [X31+496], W8
	292 Move [X31+464], V2
	293 Move [X31+472], V0
	294 Move [X31+28], V1
	295 Call PostProcessUtils.SetSourceSize, X0, X1
	296 Compare X21, 0
	297 JumpIfEqual {562}
	298 Move X29, 0x6F2000
	299 Move X29, [X29+1360]
	300 Move X19, 0x6EE000
	301 Move S0, 0.5
	302 Move S1, 0.5
	303 Move X8, [X29]
	304 Move S2, 2
	305 Move S3, 2
	306 Move X0, X21
	307 Move X8, [X8+184]
	308 Move X2, X31
	309 Move W1, [X8+144]
	310 Move X19, [X19+3624]
	311 Call CommandBuffer.SetGlobalVector, X0, X1, X2
	312 Move X0, [X19]
	313 Move X28, [X24]
	314 Move W8, [X0+224]
	315 Compare W8, 0
	316 JumpIfNotEqual {318}
	317 Call 0x1C17DFC
	318 Move W3, 2
	319 Move X0, X21
	320 Move X1, X20
	321 Move X2, X28
	322 Move W4, W31
	323 Move X5, X22
	324 Move W6, W31
	325 Move X7, X31
	326 Call Blitter.BlitCameraTexture, X0, X1, X2, X3, X4, X5, X6
	327 Move X9, [X23+328]
	328 Compare X9, 0
	329 JumpIfEqual {562}
	330 Move X8, [X23+536]
	331 Move X10, [X9+72]
	332 NotImplemented "Instruction LDUR not yet implemented."
	333 NotImplemented "Instruction LDUR not yet implemented."
	334 Move [X31+432], X10
	335 Move [X31+400], V1
	336 Move [X31+408], V0
	337 Compare X8, 0
	338 JumpIfEqual {562}
	339 Move V0, [X31+400]
	340 Move V1, [X31+416]
	341 Move X9, [X31+432]
	342 Move [X31+352], V0
	343 Move [X31+360], V1
	344 Move [X31+384], X9
	345 Move W9, [X8+24]
	346 Compare W9, 0
	347 JumpIfEqual {563}
	348 Move X9, [X31+384]
	349 Move V1, [X31+352]
	350 Move V0, [X31+368]
	351 Move [X8+64], X9
	352 Move [X8+32], V1
	353 Move [X8+40], V0
	354 Move X9, [X23+336]
	355 Compare X9, 0
	356 JumpIfEqual {562}
	357 Move X8, [X23+536]
	358 Move X10, [X9+72]
	359 NotImplemented "Instruction LDUR not yet implemented."
	360 NotImplemented "Instruction LDUR not yet implemented."
	361 Move [X31+336], X10
	362 Move [X31+304], V1
	363 Move [X31+312], V0
	364 Compare X8, 0
	365 JumpIfEqual {562}
	366 Move V0, [X31+304]
	367 Move V1, [X31+320]
	368 Move X9, [X31+336]
	369 Move [X31+256], V0
	370 Move [X31+264], V1
	371 Move [X31+288], X9
	372 Move W9, [X8+24]
	373 NotImplemented "Instruction CMP not yet implemented."
	374 Move X9, [X31+288]
	375 Move V1, [X31+256]
	376 Move V0, [X31+272]
	377 Move [X8+104], X9
	378 Move [X8+88], V0
	379 Move [X8+72], V1
	380 Move X8, [X24]
	381 Compare X8, 0
	382 JumpIfEqual {562}
	383 Move X9, [X29]
	384 NotImplemented "Instruction LDUR not yet implemented."
	385 NotImplemented "Instruction LDUR not yet implemented."
	386 Move X8, [X8+72]
	387 Move X9, [X9+184]
	388 Add X2, X31, 208
	389 Move X0, X21
	390 Move X3, X31
	391 Move W1, [X9+16]
	392 Move [X31+208], V0
	393 Move [X31+216], V1
	394 Move [X31+240], X8
	395 Call CommandBuffer.SetGlobalTexture, X0, X1, X2
	396 Move X1, [X23+536]
	397 Move X2, [X23+328]
	398 Move X0, X21
	399 Move X3, X31
	400 Call CoreUtils.SetRenderTarget, X0, X1, X2
	401 Compare X20, 0
	402 JumpIfEqual {562}
	403 Move W8, [X20+168]
	404 Compare W8, 0
	405 JumpIfEqual {416}
	406 Add X8, X31, 680
	407 Move X0, X20
	408 Move X1, X31
	409 Call RTHandle.get_rtHandleProperties, X0
	410 Move V8, [X31+712]
	411 Add X8, X31, 680
	412 Move X0, X20
	413 Move X1, X31
	414 Call RTHandle.get_rtHandleProperties, X0
	415 Move V9, [X31+716]
	416 Move X23, 0x97D000
	417 Move W8, [X23+2632]
	418 Compare W8, 0
	419 JumpIfNotEqual {425}
	420 Move X0, 0x697000
	421 Move X0, [X0+3848]
	422 Call 0x1C17CF4
	423 Move W8, 1
	424 Move [X23+2632], W8
	425 Move X8, 0x697000
	426 Move X8, [X8+3848]
	427 Move X8, [X8]
	428 Move X8, [X8+184]
	429 Move S8, [X8+8]
	430 Move S9, [X8+12]
	431 Move X0, [X19]
	432 Move W8, [X0+224]
	433 Compare W8, 0
	434 JumpIfNotEqual {436}
	435 Call 0x1C17DFC
	436 Move S2, W31
	437 Move S3, W31
	438 Move W3, 1
	439 Move X0, X21
	440 Move X1, X20
	441 Move V0, V8
	442 Move V1, V9
	443 Move X2, X22
	444 Move X4, X31
	445 Call Blitter.BlitTexture, X0, X1, X2, X3, X4
	446 Move X0, [X29]
	447 Move W8, [X0+224]
	448 Compare W8, 0
	449 JumpIfNotEqual {451}
	450 Call 0x1C17DFC
	451 Move X8, [X31+808]
	452 Move X8, [X8]
	453 Compare X8, 0
	454 JumpIfEqual {562}
	455 Move X9, [X29]
	456 NotImplemented "Instruction LDUR not yet implemented."
	457 NotImplemented "Instruction LDUR not yet implemented."
	458 Move X8, [X8+72]
	459 Move X9, [X9+184]
	460 Add X2, X31, 160
	461 Move X0, X21
	462 Move X3, X31
	463 Move W1, [X9+20]
	464 Move [X31+160], V0
	465 Move [X31+168], V1
	466 Move [X31+192], X8
	467 Call CommandBuffer.SetGlobalTexture, X0, X1, X2
	468 Move X8, [X29]
	469 Move X0, X20
	470 Move X1, X31
	471 Move X8, [X8+184]
	472 Move W23, [X8+68]
	473 Add X8, X31, 680
	474 Call RTHandle.op_Implicit, X0
	475 Move V0, [X26+112]
	476 Move V1, [X26+128]
	477 Move X8, [X31+712]
	478 Add X2, X31, 112
	479 Move X0, X21
	480 Move W1, W23
	481 Move X3, X31
	482 Move [X31+112], V0
	483 Move [X31+120], V1
	484 Move [X31+144], X8
	485 Call CommandBuffer.SetGlobalTexture, X0, X1, X2
	486 Move X1, [X25]
	487 Move X2, [X27]
	488 Move W3, 2
	489 Move W6, 2
	490 Move X0, X21
	491 Move W4, W31
	492 Move X5, X22
	493 Move X7, X31
	494 Call Blitter.BlitCameraTexture, X0, X1, X2, X3, X4, X5, X6
	495 Move X1, [X27]
	496 Move X2, [X25]
	497 Move W3, 2
	498 Move W6, 3
	499 Move X0, X21
	500 Move W4, W31
	501 Move X5, X22
	502 Move X7, X31
	503 Call Blitter.BlitCameraTexture, X0, X1, X2, X3, X4, X5, X6
	504 Move X8, [X25]
	505 Compare X8, 0
	506 JumpIfEqual {562}
	507 Move X9, [X29]
	508 NotImplemented "Instruction LDUR not yet implemented."
	509 NotImplemented "Instruction LDUR not yet implemented."
	510 Move X8, [X8+72]
	511 Move X9, [X9+184]
	512 Add X2, X31, 64
	513 Move X0, X21
	514 Move X3, X31
	515 Move W1, [X9+68]
	516 Move [X31+64], V0
	517 Move [X31+72], V1
	518 Move [X31+96], X8
	519 Call CommandBuffer.SetGlobalTexture, X0, X1, X2
	520 Move X8, [X24]
	521 Compare X8, 0
	522 JumpIfEqual {562}
	523 Move X9, [X29]
	524 NotImplemented "Instruction LDUR not yet implemented."
	525 NotImplemented "Instruction LDUR not yet implemented."
	526 Move X8, [X8+72]
	527 Move X9, [X9+184]
	528 Add X2, X31, 16
	529 Move X0, X21
	530 Move X3, X31
	531 Move W1, [X9+16]
	532 Move [X31+16], V0
	533 Move [X31+24], V1
	534 Move [X31+48], X8
	535 Call CommandBuffer.SetGlobalTexture, X0, X1, X2
	536 Move X2, [X31+8]
	537 Move W3, 2
	538 Move W6, 4
	539 Move X0, X21
	540 Move X1, X20
	541 Move W4, W31
	542 Move X5, X22
	543 Move X7, X31
	544 Call Blitter.BlitCameraTexture, X0, X1, X2, X3, X4, X5, X6
	545 Add X31, X31, 800
	546 Move X20, [X31+112]
	547 Move X19, [X31+120]
	548 Move X22, [X31+96]
	549 Move X21, [X31+104]
	550 Move X24, [X31+80]
	551 Move X23, [X31+88]
	552 Move X26, [X31+64]
	553 Move X25, [X31+72]
	554 Move X28, [X31+48]
	555 Move X27, [X31+56]
	556 Move X29, [X31+32]
	557 Move X30, [X31+40]
	558 Move D9, [X31+16]
	559 Move D8, [X31+24]
	560 Move V10, [X31+128]
	561 Return 
	562 Call 0x1C17F20
	563 Call 0x1C17F28

Method: System.Void PrepareBokehKernel(System.Single maxRadius, System.Single rcpAspect)

Disassembly:
	0x03A665BC LDR X8, [X8 + 0x820]
	0x03A665C0 LDR X0, [X8]
	0x03A665C4 BL 0x3C124EC
	0x03A665C8 LDR X8, [X19]
	0x03A665CC MOV X1, X31
	0x03A665D0 LDR X8, [X8 + 0xB8]
	0x03A665D4 STR W0, [X8 + 0x24]
	0x03A665D8 ADRP X8, 0x6F0000
	0x03A665DC LDR X8, [X8 + 0x720]
	0x03A665E0 LDR X0, [X8]
	0x03A665E4 BL 0x3C124EC
	0x03A665E8 LDR X8, [X19]
	0x03A665EC MOV X1, X31
	0x03A665F0 LDR X8, [X8 + 0xB8]
	0x03A665F4 STR W0, [X8 + 0x28]
	0x03A665F8 ADRP X8, 0x6F0000
	0x03A665FC LDR X8, [X8 + 0x718]
	0x03A66600 LDR X0, [X8]
	0x03A66604 BL 0x3C124EC
	0x03A66608 LDR X8, [X19]
	0x03A6660C MOV X1, X31
	0x03A66610 LDR X8, [X8 + 0xB8]
	0x03A66614 STR W0, [X8 + 0x2C]
	0x03A66618 ADRP X8, 0x6F0000
	0x03A6661C LDR X8, [X8 + 0x7E8]
	0x03A66620 LDR X0, [X8]
	0x03A66624 BL 0x3C124EC
	0x03A66628 LDR X8, [X19]
	0x03A6662C MOV X1, X31
	0x03A66630 LDR X8, [X8 + 0xB8]
	0x03A66634 STR W0, [X8 + 0x30]
	0x03A66638 ADRP X8, 0x6F0000
	0x03A6663C LDR X8, [X8 + 0x790]
	0x03A66640 LDR X0, [X8]
	0x03A66644 BL 0x3C124EC
	0x03A66648 LDR X8, [X19]
	0x03A6664C MOV X1, X31
	0x03A66650 LDR X8, [X8 + 0xB8]
	0x03A66654 STR W0, [X8 + 0x34]
	0x03A66658 ADRP X8, 0x6F0000
	0x03A6665C LDR X8, [X8 + 0x7B0]
	0x03A66660 LDR X0, [X8]
	0x03A66664 BL 0x3C124EC
	0x03A66668 LDR X8, [X19]
	0x03A6666C MOV X1, X31
	0x03A66670 LDR X8, [X8 + 0xB8]
	0x03A66674 STR W0, [X8 + 0x38]
	0x03A66678 ADRP X8, 0x6F0000
	0x03A6667C LDR X8, [X8 + 0x798]
	0x03A66680 LDR X0, [X8]
	0x03A66684 BL 0x3C124EC
	0x03A66688 LDR X8, [X19]
	0x03A6668C MOV X1, X31
	0x03A66690 LDR X8, [X8 + 0xB8]
	0x03A66694 STR W0, [X8 + 0x3C]
	0x03A66698 ADRP X8, 0x6F0000
	0x03A6669C LDR X8, [X8 + 0x638]
	0x03A666A0 LDR X0, [X8]
	0x03A666A4 BL 0x3C124EC
	0x03A666A8 LDR X8, [X19]
	0x03A666AC MOV X1, X31
	0x03A666B0 LDR X8, [X8 + 0xB8]
	0x03A666B4 STR W0, [X8 + 0x40]
	0x03A666B8 ADRP X8, 0x6F0000
	0x03A666BC LDR X8, [X8 + 0x7B8]
	0x03A666C0 LDR X0, [X8]
	0x03A666C4 BL 0x3C124EC
	0x03A666C8 LDR X8, [X19]
	0x03A666CC MOV X1, X31
	0x03A666D0 LDR X8, [X8 + 0xB8]
	0x03A666D4 STR W0, [X8 + 0x44]
	0x03A666D8 ADRP X8, 0x6F0000
	0x03A666DC LDR X8, [X8 + 0x8A0]
	0x03A666E0 LDR X0, [X8]
	0x03A666E4 BL 0x3C124EC
	0x03A666E8 LDR X8, [X19]
	0x03A666EC MOV X1, X31
	0x03A666F0 LDR X8, [X8 + 0xB8]
	0x03A666F4 STR W0, [X8 + 0x48]
	0x03A666F8 ADRP X8, 0x6F0000
	0x03A666FC LDR X8, [X8 + 0x7D8]
	0x03A66700 LDR X0, [X8]
	0x03A66704 BL 0x3C124EC
	0x03A66708 LDR X8, [X19]
	0x03A6670C MOV X1, X31
	0x03A66710 LDR X8, [X8 + 0xB8]
	0x03A66714 STR W0, [X8 + 0x4C]
	0x03A66718 ADRP X8, 0x6F0000
	0x03A6671C LDR X8, [X8 + 0x7E0]
	0x03A66720 LDR X0, [X8]
	0x03A66724 BL 0x3C124EC
	0x03A66728 LDR X8, [X19]
	0x03A6672C MOV X1, X31
	0x03A66730 LDR X8, [X8 + 0xB8]
	0x03A66734 STR W0, [X8 + 0x50]
	0x03A66738 ADRP X8, 0x6F0000
	0x03A6673C LDR X8, [X8 + 0x7F0]
	0x03A66740 LDR X0, [X8]
	0x03A66744 BL 0x3C124EC
	0x03A66748 LDR X8, [X19]
	0x03A6674C MOV X1, X31
	0x03A66750 LDR X8, [X8 + 0xB8]
	0x03A66754 STR W0, [X8 + 0x54]
	0x03A66758 ADRP X8, 0x6F0000
	0x03A6675C LDR X8, [X8 + 0x7D0]
	0x03A66760 LDR X0, [X8]
	0x03A66764 BL 0x3C124EC
	0x03A66768 LDR X8, [X19]
	0x03A6676C MOV X1, X31
	0x03A66770 LDR X8, [X8 + 0xB8]
	0x03A66774 STR W0, [X8 + 0x58]
	0x03A66778 ADRP X8, 0x6F0000
	0x03A6677C LDR X8, [X8 + 0x860]
	0x03A66780 LDR X0, [X8]
	0x03A66784 BL 0x3C124EC
	0x03A66788 LDR X8, [X19]
	0x03A6678C MOV X1, X31
	0x03A66790 LDR X8, [X8 + 0xB8]
	0x03A66794 STR W0, [X8 + 0x5C]
	0x03A66798 ADRP X8, 0x6F0000
	0x03A6679C LDR X8, [X8 + 0x810]
	0x03A667A0 LDR X0, [X8]
	0x03A667A4 BL 0x3C124EC
	0x03A667A8 LDR X8, [X19]
	0x03A667AC MOV X1, X31
	0x03A667B0 LDR X8, [X8 + 0xB8]
	0x03A667B4 STR W0, [X8 + 0x60]
	0x03A667B8 ADRP X8, 0x6F0000
	0x03A667BC LDR X8, [X8 + 0x868]
	0x03A667C0 LDR X0, [X8]
	0x03A667C4 BL 0x3C124EC
	0x03A667C8 LDR X8, [X19]
	0x03A667CC MOV X1, X31
	0x03A667D0 LDR X8, [X8 + 0xB8]
	0x03A667D4 STR W0, [X8 + 0x64]
	0x03A667D8 ADRP X8, 0x6F0000
	0x03A667DC LDR X8, [X8 + 0x828]
	0x03A667E0 LDR X0, [X8]
	0x03A667E4 BL 0x3C124EC
	0x03A667E8 LDR X8, [X19]
	0x03A667EC MOV X1, X31
	0x03A667F0 LDR X8, [X8 + 0xB8]
	0x03A667F4 STR W0, [X8 + 0x68]
	0x03A667F8 ADRP X8, 0x6F0000
	0x03A667FC LDR X8, [X8 + 0x7C8]
	0x03A66800 LDR X0, [X8]
	0x03A66804 BL 0x3C124EC
	0x03A66808 LDR X8, [X19]
	0x03A6680C MOV X1, X31

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+48], D15
	003 Move [X31+56], D14
	004 Move [X31+64], D13
	005 Move [X31+72], D12
	006 Move [X31+80], D11
	007 Move [X31+88], D10
	008 Move [X31+96], D9
	009 Move [X31+104], D8
	010 Move [X31+112], X30
	011 Move [X31+120], X23
	012 Move [X31+128], X22
	013 Move [X31+136], X21
	014 Move [X31+144], X20
	015 Move [X31+152], X19
	016 Move X20, 0x97D000
	017 Move W8, [X20+578]
	018 Move V9, V0
	019 Move X19, X0
	020 Move [X31+20], S1
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {30}
	025 Move X0, 0x6E9000
	026 Move X0, [X0+72]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X20+578], W8
	030 Move X8, [X19+544]
	031 Compare X8, 0
	032 JumpIfNotEqual {39}
	033 Move X8, 0x6E9000
	034 Move X8, [X8+72]
	035 Move W1, 42
	036 Move X0, [X8]
	037 Call 0x1C17D6C
	038 Move [X19+544], X0
	039 Move X8, [X19+424]
	040 Compare X8, 0
	041 JumpIfEqual {176}
	042 Move X0, [X8+120]
	043 Compare X0, 0
	044 JumpIfEqual {176}
	045 Move X8, [X0]
	046 Move X9, [X8+536]
	047 Move X1, [X8+544]
	048 NotImplemented "Instruction BLR not yet implemented."
	049 Move X8, [X19+424]
	050 Compare X8, 0
	051 JumpIfEqual {176}
	052 Move W20, W0
	053 Move X0, [X8+128]
	054 Compare X0, 0
	055 JumpIfEqual {176}
	056 Move X8, [X0]
	057 Move X9, [X8+536]
	058 Move X1, [X8+544]
	059 NotImplemented "Instruction BLR not yet implemented."
	060 Move X8, [X19+424]
	061 Compare X8, 0
	062 JumpIfEqual {176}
	063 Move X0, [X8+136]
	064 Compare X0, 0
	065 JumpIfEqual {176}
	066 Move X8, [X0]
	067 Move S1, 1
	068 Subtract S0, S1, S0
	069 NotImplemented "Instruction SCVTF not yet implemented."
	070 Move X9, [X8+536]
	071 Move X1, [X8+544]
	072 Move [X31+36], S0
	073 NotImplemented "Instruction BLR not yet implemented."
	074 Move X8, -49786880
	075 Move X9, -49790976
	076 Move V1, [X8+260]
	077 Move V2, [X9+3916]
	078 Multiply S0, S0, S1
	079 Move [X31+28], S0
	080 Move [X31+36], S2
	081 NotImplemented "Instruction FDIV not yet implemented."
	082 Call 0x3EB2BD0
	083 Move X9, -49786880
	084 Move [X31+24], S0
	085 Move V0, [X9+488]
	086 Move X8, -49786880
	087 Move X10, -49790976
	088 Move V8, [X8+108]
	089 Move [X31+16], S0
	090 Move V0, [X10+3960]
	091 Move W20, W31
	092 Move W21, 1
	093 Move V11, V10
	094 NotImplemented "Instruction FDIV not yet implemented."
	095 Move W22, 7
	096 Move [X31+12], S0
	097 Move V1, [X31+16]
	098 NotImplemented "Instruction SCVTF not yet implemented."
	099 Move W8, W21
	100 ShiftRight W8, 29
	101 And W8, W8, 0xFFFFFFF
	102 Subtract W8, W8, W21
	103 Add S0, S0, S1
	104 Move V1, [X31+12]
	105 Move W23, W31
	106 NotImplemented "Instruction SCVTF not yet implemented."
	107 NotImplemented "Instruction FDIV not yet implemented."
	108 NotImplemented "Instruction SCVTF not yet implemented."
	109 Move V1, [X31+32]
	110 Multiply S0, S0, S8
	111 NotImplemented "Instruction FDIV not yet implemented."
	112 Multiply S0, S15, S11
	113 Add S0, S0, S1
	114 NotImplemented "Instruction FDIV not yet implemented."
	115 NotImplemented "Instruction FRINTM not yet implemented."
	116 Multiply S0, S13, S0
	117 Subtract S0, S15, S0
	118 Call 0x3EB2BD0
	119 Move V1, [X31+24]
	120 NotImplemented "Instruction FDIV not yet implemented."
	121 Move V1, [X31+36]
	122 Call 0x3EB2B50
	123 Move V12, V0
	124 Move V0, [X31+28]
	125 Add X0, X31, 44
	126 Add X1, X31, 40
	127 Subtract S0, S15, S0
	128 Call 0x3EB2BC0
	129 Move X8, [X19+544]
	130 Compare X8, 0
	131 JumpIfEqual {176}
	132 Move W10, [X8+24]
	133 Add W9, W20, W23
	134 NotImplemented "Instruction CMP not yet implemented."
	135 Move S2, [X31+40]
	136 Move S1, [X31+44]
	137 Multiply S0, S10, S12
	138 Move V4, [X31+20]
	139 Move X9, W9
	140 Multiply S2, S2, S0
	141 Multiply S0, S1, S0
	142 Multiply S1, S2, S9
	143 Multiply S0, S0, S9
	144 Add X8, X8, X9
	145 Multiply S2, S0, S0
	146 Multiply S3, S1, S1
	147 Add W23, W23, 1
	148 Move [X8+32], S1
	149 Move [X8+40], S0
	150 Add S0, S3, S2
	151 NotImplemented "Instruction CMP not yet implemented."
	152 Multiply S4, S1, S4
	153 NotImplemented "Instruction FSQRT not yet implemented."
	154 Move [X8+40], S0
	155 Move [X8+48], S4
	156 Add W21, W21, 1
	157 Add W22, W22, 7
	158 NotImplemented "Instruction CMP not yet implemented."
	159 Add W20, W20, W23
	160 Move X20, [X31+144]
	161 Move X19, [X31+152]
	162 Move X22, [X31+128]
	163 Move X21, [X31+136]
	164 Move X30, [X31+112]
	165 Move X23, [X31+120]
	166 Move D9, [X31+96]
	167 Move D8, [X31+104]
	168 Move D11, [X31+80]
	169 Move D10, [X31+88]
	170 Move D13, [X31+64]
	171 Move D12, [X31+72]
	172 Move D15, [X31+48]
	173 Move D14, [X31+56]
	174 Add X31, X31, 160
	175 Return 
	176 Call 0x1C17F20
	177 Call 0x1C17F28

Method: System.Single GetMaxBokehRadiusInPixels(System.Single viewportHeight)

Disassembly:
	0x03A66810 LDR X8, [X8 + 0xB8]
	0x03A66814 STR W0, [X8 + 0x6C]
	0x03A66818 ADRP X8, 0x6F0000
	0x03A6681C LDR X8, [X8 + 0x7A8]
	0x03A66820 LDR X0, [X8]
	0x03A66824 BL 0x3C124EC

ISIL:
	001 Move X8, -49786880
	002 Move V1, [X8+512]
	003 Move S2, 14
	004 NotImplemented "Instruction FDIV not yet implemented."
	005 NotImplemented "Instruction FMIN not yet implemented."
	006 Return V0

Method: System.Void DoBokehDepthOfField(UnityEngine.Rendering.CommandBuffer cmd, UnityEngine.Rendering.RTHandle source, UnityEngine.Rendering.RTHandle destination, UnityEngine.Rect pixelRect)

Disassembly:
	0x03A65F90 CBZ X8, 0x3A65FAC
	0x03A65F94 LDR X1, [X8 + 0x60]
	0x03A65F98 BL 0x3A65FB0
	0x03A65F9C STR X0, [X19 + 0x70]
	0x03A65FA0 LDP X20, X19, [X31 + 0x10]
	0x03A65FA4 LDR X30, [X31], #0x20
	0x03A65FA8 RET
	0x03A65FAC BL 0x1C16F20
	0x03A65FB0 STP X30, X21, [X31 - 0x20]!
	0x03A65FB4 STP X20, X19, [X31 + 0x10]
	0x03A65FB8 ADRP X20, 0x97D000
	0x03A65FBC ADRP X21, 0x68E000
	0x03A65FC0 LDRB W8, [X20 + 0x256]
	0x03A65FC4 LDR X21, [X21 + 0x598]
	0x03A65FC8 MOV X19, X1
	0x03A65FCC TBNZ X8, 0x0, 0x3A66014
	0x03A65FD0 ADRP X0, 0x68E000
	0x03A65FD4 LDR X0, [X0 + 0x9C8]
	0x03A65FD8 BL 0x1C16CF4
	0x03A65FDC ADRP X0, 0x6B6000
	0x03A65FE0 LDR X0, [X0 + 0x8F8]
	0x03A65FE4 BL 0x1C16CF4
	0x03A65FE8 ADRP X0, 0x68E000
	0x03A65FEC LDR X0, [X0 + 0xA28]
	0x03A65FF0 BL 0x1C16CF4
	0x03A65FF4 ADRP X0, 0x68E000
	0x03A65FF8 LDR X0, [X0 + 0x598]
	0x03A65FFC BL 0x1C16CF4
	0x03A66000 ADRP X0, 0x6F0000
	0x03A66004 LDR X0, [X0 + 0x758]
	0x03A66008 BL 0x1C16CF4
	0x03A6600C MOVZ W8, 0x1
	0x03A66010 STRB W8, [X20 + 0x256]
	0x03A66014 LDR X0, [X21]
	0x03A66018 LDR W8, [X0 + 0xE0]
	0x03A6601C CBNZ W8, 0x3A66024
	0x03A66020 BL 0x1C16DFC
	0x03A66024 MOV X0, X19
	0x03A66028 MOV X1, X31
	0x03A6602C MOV X2, X31
	0x03A66030 BL 0x3C3883C
	0x03A66034 TBZ X0, 0x0, 0x3A660C8
	0x03A66038 ADRP X8, 0x68D000
	0x03A6603C LDR X8, [X8 + 0x9C8]
	0x03A66040 LDR X19, [X8]
	0x03A66044 LDR X8, [X19 + 0x38]
	0x03A66048 CBNZ X8, 0x3A66058
	0x03A6604C MOV X0, X19
	0x03A66050 BL 0x1C5C6E0
	0x03A66054 LDR X8, [X19 + 0x38]
	0x03A66058 LDR X0, [X8 + 0x10]
	0x03A6605C LDRB W8, [X0 + 0x135]
	0x03A66060 TBNZ X8, 0x0, 0x3A66068
	0x03A66064 BL 0x1C5C684
	0x03A66068 LDR W8, [X0 + 0xE0]
	0x03A6606C CBNZ W8, 0x3A66074
	0x03A66070 BL 0x1C16DFC
	0x03A66074 LDR X8, [X19 + 0x38]
	0x03A66078 LDR X0, [X8 + 0x10]
	0x03A6607C LDRB W8, [X0 + 0x135]
	0x03A66080 TBNZ X8, 0x0, 0x3A66088
	0x03A66084 BL 0x1C5C684
	0x03A66088 ADRP X8, 0x68D000
	0x03A6608C LDR X8, [X8 + 0xA28]
	0x03A66090 LDR X9, [X0 + 0xB8]
	0x03A66094 LDR X8, [X8]
	0x03A66098 LDR X19, [X9]
	0x03A6609C LDR W10, [X8 + 0xE0]
	0x03A660A0 CBNZ W10, 0x3A660AC
	0x03A660A4 MOV X0, X8
	0x03A660A8 BL 0x1C16DFC
	0x03A660AC ADRP X8, 0x6F0000
	0x03A660B0 LDR X8, [X8 + 0x758]
	0x03A660B4 MOV X1, X19
	0x03A660B8 MOV X2, X31
	0x03A660BC LDR X0, [X8]
	0x03A660C0 BL 0x3C066BC
	0x03A660C4 B 0x3A66108
	0x03A660C8 CBZ X19, 0x3A66118
	0x03A660CC MOV X0, X19
	0x03A660D0 MOV X1, X31
	0x03A660D4 BL 0x3C13EAC
	0x03A660D8 TBZ X0, 0x0, 0x3A66108
	0x03A660DC ADRP X8, 0x6B5000
	0x03A660E0 LDR X8, [X8 + 0x8F8]
	0x03A660E4 LDR X0, [X8]
	0x03A660E8 LDR W8, [X0 + 0xE0]
	0x03A660EC CBNZ W8, 0x3A660F4
	0x03A660F0 BL 0x1C16DFC
	0x03A660F4 MOV X0, X19
	0x03A660F8 LDP X20, X19, [X31 + 0x10]
	0x03A660FC MOV X1, X31
	0x03A66100 LDP X30, X21, [X31], #0x20
	0x03A66104 B 0x39E1920
	0x03A66108 LDP X20, X19, [X31 + 0x10]
	0x03A6610C MOV X0, X31
	0x03A66110 LDP X30, X21, [X31], #0x20
	0x03A66114 RET
	0x03A66118 BL 0x1C16F20
	0x03A6611C STP X30, X21, [X31 - 0x20]!
	0x03A66120 STP X20, X19, [X31 + 0x10]
	0x03A66124 ADRP X21, 0x97C000
	0x03A66128 ADRP X20, 0x6B5000
	0x03A6612C LDRB W8, [X21 + 0x257]
	0x03A66130 LDR X20, [X20 + 0x8F8]
	0x03A66134 MOV X19, X0
	0x03A66138 TBNZ X8, 0x0, 0x3A66150
	0x03A6613C ADRP X0, 0x6B5000
	0x03A66140 LDR X0, [X0 + 0x8F8]
	0x03A66144 BL 0x1C16CF4
	0x03A66148 MOVZ W8, 0x1
	0x03A6614C STRB W8, [X21 + 0x257]
	0x03A66150 LDR X0, [X20]
	0x03A66154 LDR X20, [X19 + 0x10]
	0x03A66158 LDR W8, [X0 + 0xE0]
	0x03A6615C CBNZ W8, 0x3A66164
	0x03A66160 BL 0x1C16DFC
	0x03A66164 MOV X0, X20
	0x03A66168 MOV X1, X31
	0x03A6616C BL 0x39E1DF8
	0x03A66170 LDR X0, [X19 + 0x18]
	0x03A66174 MOV X1, X31
	0x03A66178 BL 0x39E1DF8
	0x03A6617C LDR X0, [X19 + 0x20]
	0x03A66180 MOV X1, X31
	0x03A66184 BL 0x39E1DF8
	0x03A66188 LDR X0, [X19 + 0x28]
	0x03A6618C MOV X1, X31
	0x03A66190 BL 0x39E1DF8
	0x03A66194 LDR X0, [X19 + 0x30]
	0x03A66198 MOV X1, X31
	0x03A6619C BL 0x39E1DF8
	0x03A661A0 LDR X0, [X19 + 0x38]
	0x03A661A4 MOV X1, X31
	0x03A661A8 BL 0x39E1DF8
	0x03A661AC LDR X0, [X19 + 0x40]
	0x03A661B0 MOV X1, X31
	0x03A661B4 BL 0x39E1DF8
	0x03A661B8 LDR X0, [X19 + 0x48]
	0x03A661BC MOV X1, X31
	0x03A661C0 BL 0x39E1DF8
	0x03A661C4 LDR X0, [X19 + 0x50]
	0x03A661C8 MOV X1, X31
	0x03A661CC BL 0x39E1DF8
	0x03A661D0 LDR X0, [X19 + 0x58]
	0x03A661D4 MOV X1, X31
	0x03A661D8 BL 0x39E1DF8
	0x03A661DC LDR X0, [X19 + 0x60]
	0x03A661E0 MOV X1, X31
	0x03A661E4 BL 0x39E1DF8
	0x03A661E8 LDR X0, [X19 + 0x68]
	0x03A661EC MOV X1, X31
	0x03A661F0 BL 0x39E1DF8
	0x03A661F4 LDR X0, [X19 + 0x70]
	0x03A661F8 LDP X20, X19, [X31 + 0x10]
	0x03A661FC MOV X1, X31
	0x03A66200 LDP X30, X21, [X31], #0x20
	0x03A66204 B 0x39E1DF8
	0x03A66208 STP X29, X30, [X31 - 0x60]!
	0x03A6620C STP X28, X27, [X31 + 0x10]
	0x03A66210 STP X26, X25, [X31 + 0x20]
	0x03A66214 STP X24, X23, [X31 + 0x30]
	0x03A66218 STP X22, X21, [X31 + 0x40]
	0x03A6621C STP X20, X19, [X31 + 0x50]
	0x03A66220 ADRP X28, 0x97C000
	0x03A66224 ADRP X29, 0x6F0000
	0x03A66228 ADRP X19, 0x6F0000
	0x03A6622C ADRP X27, 0x6F0000
	0x03A66230 ADRP X26, 0x6F0000
	0x03A66234 ADRP X25, 0x6F0000
	0x03A66238 ADRP X24, 0x6F0000
	0x03A6623C ADRP X23, 0x6F0000
	0x03A66240 ADRP X22, 0x6F0000
	0x03A66244 ADRP X21, 0x6F0000
	0x03A66248 ADRP X20, 0x6F0000
	0x03A6624C LDR X29, [X29 + 0x620]
	0x03A66250 LDR X19, [X19 + 0x550]
	0x03A66254 LDR X27, [X27 + 0x618]
	0x03A66258 LDR X26, [X26 + 0x760]
	0x03A6625C LDR X25, [X25 + 0x768]
	0x03A66260 LDR X24, [X24 + 0x708]
	0x03A66264 LDR X23, [X23 + 0x700]
	0x03A66268 LDR X22, [X22 + 0x770]
	0x03A6626C LDR X21, [X21 + 0x778]
	0x03A66270 LDR X20, [X20 + 0x780]
	0x03A66274 LDRB W8, [X28 + 0x258]
	0x03A66278 TBNZ X8, 0x0, 0x3A664DC
	0x03A6627C ADRP X0, 0x6F0000
	0x03A66280 LDR X0, [X0 + 0x550]
	0x03A66284 BL 0x1C16CF4
	0x03A66288 ADRP X0, 0x6F0000
	0x03A6628C LDR X0, [X0 + 0x788]
	0x03A66290 BL 0x1C16CF4
	0x03A66294 ADRP X0, 0x6F0000
	0x03A66298 LDR X0, [X0 + 0x790]
	0x03A6629C BL 0x1C16CF4
	0x03A662A0 ADRP X0, 0x6F0000
	0x03A662A4 LDR X0, [X0 + 0x798]
	0x03A662A8 BL 0x1C16CF4
	0x03A662AC ADRP X0, 0x6F0000
	0x03A662B0 LDR X0, [X0 + 0x7A0]
	0x03A662B4 BL 0x1C16CF4
	0x03A662B8 ADRP X0, 0x6F0000
	0x03A662BC LDR X0, [X0 + 0x7A8]
	0x03A662C0 BL 0x1C16CF4
	0x03A662C4 ADRP X0, 0x6F0000
	0x03A662C8 LDR X0, [X0 + 0x638]
	0x03A662CC BL 0x1C16CF4
	0x03A662D0 ADRP X0, 0x6F0000
	0x03A662D4 LDR X0, [X0 + 0x7B0]
	0x03A662D8 BL 0x1C16CF4
	0x03A662DC ADRP X0, 0x6F0000
	0x03A662E0 LDR X0, [X0 + 0x7B8]
	0x03A662E4 BL 0x1C16CF4
	0x03A662E8 ADRP X0, 0x6F0000
	0x03A662EC LDR X0, [X0 + 0x618]
	0x03A662F0 BL 0x1C16CF4
	0x03A662F4 ADRP X0, 0x6F0000
	0x03A662F8 LDR X0, [X0 + 0x7C0]
	0x03A662FC BL 0x1C16CF4
	0x03A66300 ADRP X0, 0x6F0000
	0x03A66304 LDR X0, [X0 + 0x7C8]
	0x03A66308 BL 0x1C16CF4
	0x03A6630C ADRP X0, 0x6F0000
	0x03A66310 LDR X0, [X0 + 0x700]
	0x03A66314 BL 0x1C16CF4
	0x03A66318 ADRP X0, 0x6F0000
	0x03A6631C LDR X0, [X0 + 0x768]
	0x03A66320 BL 0x1C16CF4
	0x03A66324 ADRP X0, 0x6F0000
	0x03A66328 LDR X0, [X0 + 0x7D0]
	0x03A6632C BL 0x1C16CF4
	0x03A66330 ADRP X0, 0x6F0000
	0x03A66334 LDR X0, [X0 + 0x7D8]
	0x03A66338 BL 0x1C16CF4
	0x03A6633C ADRP X0, 0x6F0000
	0x03A66340 LDR X0, [X0 + 0x778]
	0x03A66344 BL 0x1C16CF4
	0x03A66348 ADRP X0, 0x6F0000
	0x03A6634C LDR X0, [X0 + 0x7E0]
	0x03A66350 BL 0x1C16CF4
	0x03A66354 ADRP X0, 0x6F0000
	0x03A66358 LDR X0, [X0 + 0x760]
	0x03A6635C BL 0x1C16CF4
	0x03A66360 ADRP X0, 0x6F0000
	0x03A66364 LDR X0, [X0 + 0x7E8]
	0x03A66368 BL 0x1C16CF4
	0x03A6636C ADRP X0, 0x6F0000
	0x03A66370 LDR X0, [X0 + 0x7F0]
	0x03A66374 BL 0x1C16CF4
	0x03A66378 ADRP X0, 0x6F0000
	0x03A6637C LDR X0, [X0 + 0x7F8]
	0x03A66380 BL 0x1C16CF4
	0x03A66384 ADRP X0, 0x6F0000
	0x03A66388 LDR X0, [X0 + 0x800]
	0x03A6638C BL 0x1C16CF4
	0x03A66390 ADRP X0, 0x6F0000
	0x03A66394 LDR X0, [X0 + 0x620]
	0x03A66398 BL 0x1C16CF4
	0x03A6639C ADRP X0, 0x6F0000
	0x03A663A0 LDR X0, [X0 + 0x808]
	0x03A663A4 BL 0x1C16CF4
	0x03A663A8 ADRP X0, 0x6F0000
	0x03A663AC LDR X0, [X0 + 0x708]
	0x03A663B0 BL 0x1C16CF4
	0x03A663B4 ADRP X0, 0x6F0000
	0x03A663B8 LDR X0, [X0 + 0x810]
	0x03A663BC BL 0x1C16CF4
	0x03A663C0 ADRP X0, 0x6F0000
	0x03A663C4 LDR X0, [X0 + 0x818]
	0x03A663C8 BL 0x1C16CF4
	0x03A663CC ADRP X0, 0x6F0000
	0x03A663D0 LDR X0, [X0 + 0x820]
	0x03A663D4 BL 0x1C16CF4
	0x03A663D8 ADRP X0, 0x6F0000
	0x03A663DC LDR X0, [X0 + 0x828]
	0x03A663E0 BL 0x1C16CF4
	0x03A663E4 ADRP X0, 0x6F0000
	0x03A663E8 LDR X0, [X0 + 0x830]
	0x03A663EC BL 0x1C16CF4
	0x03A663F0 ADRP X0, 0x6F0000
	0x03A663F4 LDR X0, [X0 + 0x838]
	0x03A663F8 BL 0x1C16CF4
	0x03A663FC ADRP X0, 0x6F0000
	0x03A66400 LDR X0, [X0 + 0x840]
	0x03A66404 BL 0x1C16CF4
	0x03A66408 ADRP X0, 0x6F0000
	0x03A6640C LDR X0, [X0 + 0x848]
	0x03A66410 BL 0x1C16CF4
	0x03A66414 ADRP X0, 0x6F0000
	0x03A66418 LDR X0, [X0 + 0x850]
	0x03A6641C BL 0x1C16CF4
	0x03A66420 ADRP X0, 0x6F0000
	0x03A66424 LDR X0, [X0 + 0x858]
	0x03A66428 BL 0x1C16CF4
	0x03A6642C ADRP X0, 0x6F0000
	0x03A66430 LDR X0, [X0 + 0x860]
	0x03A66434 BL 0x1C16CF4
	0x03A66438 ADRP X0, 0x6F0000
	0x03A6643C LDR X0, [X0 + 0x868]
	0x03A66440 BL 0x1C16CF4
	0x03A66444 ADRP X0, 0x6F0000
	0x03A66448 LDR X0, [X0 + 0x870]
	0x03A6644C BL 0x1C16CF4
	0x03A66450 ADRP X0, 0x6F0000
	0x03A66454 LDR X0, [X0 + 0x878]
	0x03A66458 BL 0x1C16CF4
	0x03A6645C ADRP X0, 0x6F0000
	0x03A66460 LDR X0, [X0 + 0x880]
	0x03A66464 BL 0x1C16CF4
	0x03A66468 ADRP X0, 0x6F0000
	0x03A6646C LDR X0, [X0 + 0x888]
	0x03A66470 BL 0x1C16CF4
	0x03A66474 ADRP X0, 0x6F0000
	0x03A66478 LDR X0, [X0 + 0x890]
	0x03A6647C BL 0x1C16CF4
	0x03A66480 ADRP X0, 0x6F0000
	0x03A66484 LDR X0, [X0 + 0x898]
	0x03A66488 BL 0x1C16CF4
	0x03A6648C ADRP X0, 0x6F0000
	0x03A66490 LDR X0, [X0 + 0x718]
	0x03A66494 BL 0x1C16CF4
	0x03A66498 ADRP X0, 0x6F0000
	0x03A6649C LDR X0, [X0 + 0x770]
	0x03A664A0 BL 0x1C16CF4
	0x03A664A4 ADRP X0, 0x6F0000
	0x03A664A8 LDR X0, [X0 + 0x8A0]
	0x03A664AC BL 0x1C16CF4
	0x03A664B0 ADRP X0, 0x6F0000
	0x03A664B4 LDR X0, [X0 + 0x780]
	0x03A664B8 BL 0x1C16CF4
	0x03A664BC ADRP X0, 0x6F0000
	0x03A664C0 LDR X0, [X0 + 0x8A8]
	0x03A664C4 BL 0x1C16CF4
	0x03A664C8 ADRP X0, 0x6F0000
	0x03A664CC LDR X0, [X0 + 0x720]
	0x03A664D0 BL 0x1C16CF4
	0x03A664D4 MOVZ W8, 0x1
	0x03A664D8 STRB W8, [X28 + 0x258]
	0x03A664DC LDR X0, [X29]
	0x03A664E0 MOV X1, X31
	0x03A664E4 BL 0x3C124EC
	0x03A664E8 LDR X8, [X19]
	0x03A664EC MOV X1, X31
	0x03A664F0 LDR X8, [X8 + 0xB8]
	0x03A664F4 STR W0, [X8]
	0x03A664F8 LDR X0, [X27]
	0x03A664FC BL 0x3C124EC
	0x03A66500 LDR X8, [X19]
	0x03A66504 MOV X1, X31
	0x03A66508 LDR X8, [X8 + 0xB8]
	0x03A6650C STR W0, [X8 + 0x4]
	0x03A66510 LDR X0, [X26]
	0x03A66514 BL 0x3C124EC
	0x03A66518 LDR X8, [X19]
	0x03A6651C MOV X1, X31
	0x03A66520 LDR X8, [X8 + 0xB8]
	0x03A66524 STR W0, [X8 + 0x8]
	0x03A66528 LDR X0, [X25]
	0x03A6652C BL 0x3C124EC
	0x03A66530 LDR X8, [X19]
	0x03A66534 MOV X1, X31
	0x03A66538 LDR X8, [X8 + 0xB8]
	0x03A6653C STR W0, [X8 + 0xC]
	0x03A66540 LDR X0, [X24]
	0x03A66544 BL 0x3C124EC
	0x03A66548 LDR X8, [X19]
	0x03A6654C MOV X1, X31
	0x03A66550 LDR X8, [X8 + 0xB8]
	0x03A66554 STR W0, [X8 + 0x10]
	0x03A66558 LDR X0, [X23]
	0x03A6655C BL 0x3C124EC
	0x03A66560 LDR X8, [X19]
	0x03A66564 MOV X1, X31
	0x03A66568 LDR X8, [X8 + 0xB8]
	0x03A6656C STR W0, [X8 + 0x14]
	0x03A66570 LDR X0, [X22]
	0x03A66574 BL 0x3C124EC
	0x03A66578 LDR X8, [X19]
	0x03A6657C MOV X1, X31
	0x03A66580 LDR X8, [X8 + 0xB8]
	0x03A66584 STR W0, [X8 + 0x18]
	0x03A66588 LDR X0, [X21]
	0x03A6658C BL 0x3C124EC
	0x03A66590 LDR X8, [X19]
	0x03A66594 MOV X1, X31
	0x03A66598 LDR X8, [X8 + 0xB8]
	0x03A6659C STR W0, [X8 + 0x1C]
	0x03A665A0 LDR X0, [X20]
	0x03A665A4 BL 0x3C124EC
	0x03A665A8 LDR X8, [X19]
	0x03A665AC MOV X1, X31
	0x03A665B0 LDR X8, [X8 + 0xB8]
	0x03A665B4 STR W0, [X8 + 0x20]
	0x03A665B8 ADRP X8, 0x6F0000

ISIL:
	001 Subtract X31, X31, 496
	002 Move [X31+368], D11
	003 Move [X31+376], D10
	004 Move [X31+384], D9
	005 Move [X31+392], D8
	006 Move [X31+400], X29
	007 Move [X31+408], X30
	008 Move [X31+416], X28
	009 Move [X31+424], X27
	010 Move [X31+432], X26
	011 Move [X31+440], X25
	012 Move [X31+448], X24
	013 Move [X31+456], X23
	014 Move [X31+464], X22
	015 Move [X31+472], X21
	016 Move [X31+480], X20
	017 Move [X31+488], X19
	018 Move X19, 0x97E000
	019 Move W8, [X19+579]
	020 Move X20, X3
	021 Move X29, X2
	022 Move X21, X1
	023 Move X23, X0
	024 Move TEMP, X8
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {57}
	028 Move X0, 0x6EE000
	029 Move X0, [X0+3624]
	030 Call 0x1C17CF4
	031 Move X0, 0x6B7000
	032 Move X0, [X0+2296]
	033 Call 0x1C17CF4
	034 Move X0, 0x6F0000
	035 Move X0, [X0+2392]
	036 Call 0x1C17CF4
	037 Move X0, 0x6F0000
	038 Move X0, [X0+16]
	039 Call 0x1C17CF4
	040 Move X0, 0x6F1000
	041 Move X0, [X0+1360]
	042 Call 0x1C17CF4
	043 Move X0, 0x6F1000
	044 Move X0, [X0+1552]
	045 Call 0x1C17CF4
	046 Move X0, 0x6F1000
	047 Move X0, [X0+1800]
	048 Call 0x1C17CF4
	049 Move X0, 0x6F1000
	050 Move X0, [X0+1816]
	051 Call 0x1C17CF4
	052 Move X0, 0x6F1000
	053 Move X0, [X0+1824]
	054 Call 0x1C17CF4
	055 Move W8, 1
	056 Move [X19+579], W8
	057 NotImplemented "Instruction MOVI not yet implemented."
	058 Move [X31+352], W31
	059 Move [X31+320], V0
	060 Move [X31+328], V0
	061 Move [X31+19], V0
	062 Move X8, [X23+408]
	063 Compare X8, 0
	064 JumpIfEqual {442}
	065 Move X19, X23
	066 Move X22, [X8+40]
	067 Add X19, X19, 224
	068 Move W9, [X19]
	069 Move W10, [X19+4]
	070 Move X8, [X19+200]
	071 NotImplemented "Instruction CMP not yet implemented."
	072 NotImplemented "Instruction CINC not yet implemented."
	073 NotImplemented "Instruction CMP not yet implemented."
	074 NotImplemented "Instruction CINC not yet implemented."
	075 Compare X8, 0
	076 JumpIfEqual {442}
	077 Move X0, [X8+112]
	078 Compare X0, 0
	079 JumpIfEqual {442}
	080 Move X8, [X0]
	081 Move X9, [X8+536]
	082 Move X1, [X8+544]
	083 NotImplemented "Instruction BLR not yet implemented."
	084 Move X8, [X23+424]
	085 Compare X8, 0
	086 JumpIfEqual {442}
	087 Move X0, [X8+112]
	088 Compare X0, 0
	089 JumpIfEqual {442}
	090 Move X8, [X0]
	091 Move V8, V0
	092 Move X9, [X8+536]
	093 Move X1, [X8+544]
	094 NotImplemented "Instruction BLR not yet implemented."
	095 Move X8, [X23+424]
	096 Compare X8, 0
	097 JumpIfEqual {442}
	098 Move X0, [X8+104]
	099 Compare X0, 0
	100 JumpIfEqual {442}
	101 Move X8, [X0]
	102 Move V9, V0
	103 Move X9, [X8+536]
	104 Move X1, [X8+544]
	105 NotImplemented "Instruction BLR not yet implemented."
	106 Move X8, [X23+424]
	107 Compare X8, 0
	108 JumpIfEqual {442}
	109 Move X0, [X8+96]
	110 Compare X0, 0
	111 JumpIfEqual {442}
	112 Move X8, [X0]
	113 Move [X31+16], X20
	114 Move X20, 0x6EF000
	115 Move X25, 0x6B6000
	116 Move X9, [X8+536]
	117 Move X1, [X8+544]
	118 Move X20, [X20+2392]
	119 Move X25, [X25+2296]
	120 Move V11, V0
	121 NotImplemented "Instruction BLR not yet implemented."
	122 Move X0, [X20]
	123 Move W20, [X23+228]
	124 Move V10, V0
	125 Move W8, [X0+224]
	126 Compare W8, 0
	127 JumpIfNotEqual {129}
	128 Call 0x1C17DFC
	129 Move X0, [X25]
	130 Move X28, 0x6F1000
	131 Move X27, 0x6F1000
	132 Move W25, [X23+567]
	133 Move W8, [X0+224]
	134 Move X28, [X28+1552]
	135 Move X27, [X27+1360]
	136 Compare W8, 0
	137 JumpIfNotEqual {139}
	138 Call 0x1C17DFC
	139 Move X1, [X28]
	140 NotImplemented "Instruction CMP not yet implemented."
	141 NotImplemented "Instruction CSET not yet implemented."
	142 Move X0, X22
	143 Move X3, X31
	144 Call CoreUtils.SetKeyword, X0, X1, X2
	145 Move X0, [X27]
	146 Move W8, [X0+224]
	147 Compare W8, 0
	148 JumpIfNotEqual {150}
	149 Call 0x1C17DFC
	150 Compare X21, 0
	151 JumpIfEqual {442}
	152 Move W8, 0x447A0000
	153 Move S3, W8
	154 Move X8, [X27]
	155 Move X9, -49786880
	156 Move V6, [X9+512]
	157 NotImplemented "Instruction SBFM not yet implemented."
	158 Move X8, [X8+184]
	159 NotImplemented "Instruction SBFM not yet implemented."
	160 NotImplemented "Instruction SCVTF not yet implemented."
	161 Move S2, 14
	162 NotImplemented "Instruction SCVTF not yet implemented."
	163 NotImplemented "Instruction SCVTF not yet implemented."
	164 Move W1, [X8+28]
	165 NotImplemented "Instruction FDIV not yet implemented."
	166 NotImplemented "Instruction FDIV not yet implemented."
	167 NotImplemented "Instruction FDIV not yet implemented."
	168 NotImplemented "Instruction FDIV not yet implemented."
	169 Move S5, 1
	170 Multiply S0, S3, S0
	171 Subtract S3, S10, S3
	172 NotImplemented "Instruction FMIN not yet implemented."
	173 NotImplemented "Instruction FDIV not yet implemented."
	174 NotImplemented "Instruction FDIV not yet implemented."
	175 Move X0, X21
	176 Move V0, V10
	177 Move V2, V9
	178 Move V3, V8
	179 Move X2, X31
	180 Call CommandBuffer.SetGlobalVector, X0, X1, X2
	181 Move X0, [X23+424]
	182 Compare X0, 0
	183 JumpIfEqual {442}
	184 Move X8, [X0]
	185 Move X9, [X8+344]
	186 Move X1, [X8+352]
	187 NotImplemented "Instruction BLR not yet implemented."
	188 Move W8, [X23+552]
	189 NotImplemented "Instruction CMP not yet implemented."
	190 Move V0, [X23+556]
	191 NotImplemented "Instruction FCMP not yet implemented."
	192 Move V0, [X23+560]
	193 NotImplemented "Instruction FCMP not yet implemented."
	194 Move [X23+552], W0
	195 Move X0, X23
	196 Move V0, V9
	197 Move V1, V8
	198 Move [X23+556], S9
	199 Move [X23+560], S8
	200 Call PostProcessPass.PrepareBokehKernel, X0, V0, V1
	201 Move X0, [X27]
	202 Move X24, 0x6EF000
	203 Move W8, [X0+224]
	204 Move X24, [X24+16]
	205 Move [X31+24], X29
	206 Compare W8, 0
	207 JumpIfNotEqual {210}
	208 Call 0x1C17DFC
	209 Move X0, [X27]
	210 Move X8, [X0+184]
	211 Move X29, 0x6F1000
	212 Move X29, [X29+1800]
	213 Move X2, [X23+544]
	214 Move W1, [X8+32]
	215 Move X28, 0x6F1000
	216 Move X28, [X28+1816]
	217 Move X0, X21
	218 Move X3, X31
	219 Add X20, X31, 248
	220 Call CommandBuffer.SetGlobalVectorArray, X0, X1, X2
	221 Move W1, [X23+224]
	222 Move W2, [X23+228]
	223 Add X8, X31, 304
	224 Move W3, 5
	225 Move X0, X23
	226 Move W4, W31
	227 Add X27, X23, 320
	228 Call PostProcessPass.GetCompatibleDescriptor, X0, X1, X2, X3, X4
	229 Move X0, [X24]
	230 Move W8, [X0+224]
	231 Compare W8, 0
	232 JumpIfNotEqual {234}
	233 Call 0x1C17DFC
	234 Move X6, [X29]
	235 Add X1, X31, 304
	236 Move S0, W31
	237 Move W2, 1
	238 Move W3, 1
	239 Move W5, 1
	240 Move X0, X27
	241 Move W4, W31
	242 Move X7, X31
	243 Call RenderingUtils.ReAllocateIfNeeded, X0, X1, X2, X3, X4, X5, V0, X6
	244 Add X8, X31, 248
	245 Move W3, 48
	246 Move X0, X23
	247 Move W1, W25
	248 Move W2, W26
	249 Move W4, W31
	250 Add X24, X23, 336
	251 Call PostProcessPass.GetCompatibleDescriptor, X0, X1, X2, X3, X4
	252 Move V0, [X20]
	253 Move V1, [X20+16]
	254 Move V2, [X20+2]
	255 Move W8, [X31+296]
	256 Move X6, [X28]
	257 Move [X31+304], V0
	258 Move [X31+312], V1
	259 Add X1, X31, 304
	260 Move S0, W31
	261 Move W2, 1
	262 Move W3, 1
	263 Move W5, 1
	264 Move X0, X24
	265 Move W4, W31
	266 Move X7, X31
	267 Move [X31+21], V2
	268 Move [X31+352], W8
	269 Call RenderingUtils.ReAllocateIfNeeded, X0, X1, X2, X3, X4, X5, V0, X6
	270 Add X8, X31, 192
	271 Move W3, 48
	272 Move X0, X23
	273 Move W1, W25
	274 Move W2, W26
	275 Move W4, W31
	276 Add X28, X23, 344
	277 Call PostProcessPass.GetCompatibleDescriptor, X0, X1, X2, X3, X4
	278 Move X9, 0x6F1000
	279 Move V0, [X31+192]
	280 Move V1, [X31+208]
	281 Move V2, [X31+14]
	282 Move W8, [X31+240]
	283 Move X9, [X9+1824]
	284 Move [X31+304], V0
	285 Move [X31+312], V1
	286 Add X1, X31, 304
	287 Move S0, W31
	288 Move X6, [X9]
	289 Move W2, 1
	290 Move W3, 1
	291 Move W5, 1
	292 Move X0, X28
	293 Move W4, W31
	294 Move X7, X31
	295 Move [X31+21], V2
	296 Move [X31+352], W8
	297 Call RenderingUtils.ReAllocateIfNeeded, X0, X1, X2, X3, X4, X5, V0, X6
	298 Move W8, [X19+48]
	299 Move V2, [X19+16]
	300 Move V0, [X19+32]
	301 Move V1, [X19]
	302 Add X1, X31, 128
	303 Move X0, X21
	304 Move X2, X31
	305 Move [X31+176], W8
	306 Move [X31+144], V2
	307 Move [X31+152], V0
	308 Move [X31+8], V1
	309 Call PostProcessUtils.SetSourceSize, X0, X1
	310 Move X19, 0x6F1000
	311 Move X19, [X19+1360]
	312 Move S0, 0.5
	313 Move S1, 0.5
	314 Move S2, 2
	315 Move X8, [X19]
	316 Move S3, 2
	317 Move X0, X21
	318 Move X2, X31
	319 Move X8, [X8+184]
	320 Move W1, [X8+144]
	321 Call CommandBuffer.SetGlobalVector, X0, X1, X2
	322 Move X8, [X19]
	323 Move V0, [X23+228]
	324 Move S1, 1
	325 Move S2, W31
	326 Move X8, [X8+184]
	327 NotImplemented "Instruction SCVTF not yet implemented."
	328 NotImplemented "Instruction FDIV not yet implemented."
	329 Add S0, S0, S0
	330 Move W1, [X8+36]
	331 Add S1, S0, S0
	332 Move S3, W31
	333 Move X0, X21
	334 Move X2, X31
	335 Call CommandBuffer.SetGlobalVector, X0, X1, X2
	336 Move X8, 0x6ED000
	337 Move X8, [X8+3624]
	338 Move X23, [X23+320]
	339 Move X0, [X8]
	340 Move W8, [X0+224]
	341 Compare W8, 0
	342 JumpIfNotEqual {344}
	343 Call 0x1C17DFC
	344 Move X19, [X31+24]
	345 Move W3, 2
	346 Move X0, X21
	347 Move X2, X23
	348 Move X1, X19
	349 Move W4, W31
	350 Move X5, X22
	351 Move W6, W31
	352 Move X7, X31
	353 Call Blitter.BlitCameraTexture, X0, X1, X2, X3, X4, X5, X6
	354 Move X8, [X27]
	355 Compare X8, 0
	356 JumpIfEqual {442}
	357 Move X20, 0x6F1000
	358 Move X20, [X20+1360]
	359 NotImplemented "Instruction LDUR not yet implemented."
	360 NotImplemented "Instruction LDUR not yet implemented."
	361 Move X8, [X8+72]
	362 Move X9, [X20]
	363 Add X2, X31, 80
	364 Move X0, X21
	365 Move X3, X31
	366 Move X9, [X9+184]
	367 Move W1, [X9+16]
	368 Move [X31+80], V0
	369 Move [X31+88], V1
	370 Move [X31+112], X8
	371 Call CommandBuffer.SetGlobalTexture, X0, X1, X2
	372 Move X2, [X24]
	373 Move W3, 2
	374 Move W6, 1
	375 Move X0, X21
	376 Move X1, X19
	377 Move W4, W31
	378 Move X5, X22
	379 Move X7, X31
	380 Call Blitter.BlitCameraTexture, X0, X1, X2, X3, X4, X5, X6
	381 Move X1, [X24]
	382 Move X2, [X28]
	383 Move W3, 2
	384 Move W6, 2
	385 Move X0, X21
	386 Move W4, W31
	387 Move X5, X22
	388 Move X7, X31
	389 Call Blitter.BlitCameraTexture, X0, X1, X2, X3, X4, X5, X6
	390 Move X1, [X28]
	391 Move X2, [X24]
	392 Move W3, 2
	393 Move W6, 3
	394 Move X0, X21
	395 Move W4, W31
	396 Move X5, X22
	397 Move X7, X31
	398 Call Blitter.BlitCameraTexture, X0, X1, X2, X3, X4, X5, X6
	399 Move X8, [X24]
	400 Compare X8, 0
	401 JumpIfEqual {442}
	402 Move X9, [X20]
	403 NotImplemented "Instruction LDUR not yet implemented."
	404 NotImplemented "Instruction LDUR not yet implemented."
	405 Move X8, [X8+72]
	406 Move X9, [X9+184]
	407 Add X2, X31, 32
	408 Move X0, X21
	409 Move X3, X31
	410 Move W1, [X9+24]
	411 Move [X31+32], V0
	412 Move [X31+40], V1
	413 Move [X31+64], X8
	414 Call CommandBuffer.SetGlobalTexture, X0, X1, X2
	415 Move X2, [X31+16]
	416 Move W3, 2
	417 Move W6, 4
	418 Move X0, X21
	419 Move X1, X19
	420 Move W4, W31
	421 Move X5, X22
	422 Move X7, X31
	423 Call Blitter.BlitCameraTexture, X0, X1, X2, X3, X4, X5, X6
	424 Move X20, [X31+480]
	425 Move X19, [X31+488]
	426 Move X22, [X31+464]
	427 Move X21, [X31+472]
	428 Move X24, [X31+448]
	429 Move X23, [X31+456]
	430 Move X26, [X31+432]
	431 Move X25, [X31+440]
	432 Move X28, [X31+416]
	433 Move X27, [X31+424]
	434 Move X29, [X31+400]
	435 Move X30, [X31+408]
	436 Move D9, [X31+384]
	437 Move D8, [X31+392]
	438 Move D11, [X31+368]
	439 Move D10, [X31+376]
	440 Add X31, X31, 496
	441 Return 
	442 Call 0x1C17F20

Method: System.Single GetLensFlareLightAttenuation(UnityEngine.Light light, UnityEngine.Camera cam, UnityEngine.Vector3 wo)

Disassembly:
	0x03A66828 LDR X8, [X19]
	0x03A6682C MOV X1, X31
	0x03A66830 LDR X8, [X8 + 0xB8]
	0x03A66834 STR W0, [X8 + 0x70]
	0x03A66838 ADRP X8, 0x6F0000
	0x03A6683C LDR X8, [X8 + 0x808]
	0x03A66840 LDR X0, [X8]
	0x03A66844 BL 0x3C124EC
	0x03A66848 LDR X8, [X19]
	0x03A6684C MOV X1, X31
	0x03A66850 LDR X8, [X8 + 0xB8]
	0x03A66854 STR W0, [X8 + 0x74]
	0x03A66858 ADRP X8, 0x6F0000
	0x03A6685C LDR X8, [X8 + 0x898]
	0x03A66860 LDR X0, [X8]
	0x03A66864 BL 0x3C124EC
	0x03A66868 LDR X8, [X19]
	0x03A6686C MOV X1, X31
	0x03A66870 LDR X8, [X8 + 0xB8]
	0x03A66874 STR W0, [X8 + 0x78]
	0x03A66878 ADRP X8, 0x6F0000
	0x03A6687C LDR X8, [X8 + 0x840]
	0x03A66880 LDR X0, [X8]
	0x03A66884 BL 0x3C124EC
	0x03A66888 LDR X8, [X19]
	0x03A6688C MOV X1, X31
	0x03A66890 LDR X8, [X8 + 0xB8]
	0x03A66894 STR W0, [X8 + 0x7C]
	0x03A66898 ADRP X8, 0x6F0000
	0x03A6689C LDR X8, [X8 + 0x830]
	0x03A668A0 LDR X0, [X8]
	0x03A668A4 BL 0x3C124EC
	0x03A668A8 LDR X8, [X19]
	0x03A668AC MOV X1, X31
	0x03A668B0 LDR X8, [X8 + 0xB8]
	0x03A668B4 STR W0, [X8 + 0x80]
	0x03A668B8 ADRP X8, 0x6F0000
	0x03A668BC LDR X8, [X8 + 0x850]
	0x03A668C0 LDR X0, [X8]
	0x03A668C4 BL 0x3C124EC
	0x03A668C8 LDR X8, [X19]
	0x03A668CC MOV X1, X31
	0x03A668D0 LDR X8, [X8 + 0xB8]
	0x03A668D4 STR W0, [X8 + 0x84]
	0x03A668D8 ADRP X8, 0x6F0000
	0x03A668DC LDR X8, [X8 + 0x858]
	0x03A668E0 LDR X0, [X8]
	0x03A668E4 BL 0x3C124EC
	0x03A668E8 LDR X8, [X19]
	0x03A668EC MOV X1, X31
	0x03A668F0 LDR X8, [X8 + 0xB8]
	0x03A668F4 STR W0, [X8 + 0x88]
	0x03A668F8 ADRP X8, 0x6F0000
	0x03A668FC LDR X8, [X8 + 0x888]
	0x03A66900 LDR X0, [X8]
	0x03A66904 BL 0x3C124EC
	0x03A66908 LDR X8, [X19]
	0x03A6690C MOV X1, X31
	0x03A66910 LDR X8, [X8 + 0xB8]
	0x03A66914 STR W0, [X8 + 0x8C]
	0x03A66918 ADRP X8, 0x6F0000
	0x03A6691C LDR X8, [X8 + 0x880]
	0x03A66920 LDR X0, [X8]
	0x03A66924 BL 0x3C124EC
	0x03A66928 LDR X8, [X19]
	0x03A6692C MOV X1, X31
	0x03A66930 LDR X8, [X8 + 0xB8]
	0x03A66934 STR W0, [X8 + 0x90]
	0x03A66938 ADRP X8, 0x6F0000
	0x03A6693C LDR X8, [X8 + 0x7F8]
	0x03A66940 LDR X0, [X8]
	0x03A66944 BL 0x3C124EC
	0x03A66948 LDR X8, [X19]
	0x03A6694C MOV X1, X31
	0x03A66950 LDR X8, [X8 + 0xB8]
	0x03A66954 STR W0, [X8 + 0x94]
	0x03A66958 ADRP X8, 0x6F0000
	0x03A6695C LDR X8, [X8 + 0x848]
	0x03A66960 LDR X0, [X8]
	0x03A66964 BL 0x3C124EC
	0x03A66968 LDR X8, [X19]
	0x03A6696C MOV X1, X31
	0x03A66970 LDR X8, [X8 + 0xB8]
	0x03A66974 STR W0, [X8 + 0x98]
	0x03A66978 ADRP X8, 0x6F0000
	0x03A6697C LDR X8, [X8 + 0x818]
	0x03A66980 LDR X0, [X8]
	0x03A66984 BL 0x3C124EC
	0x03A66988 LDR X8, [X19]
	0x03A6698C MOV X1, X31
	0x03A66990 LDR X8, [X8 + 0xB8]
	0x03A66994 STR W0, [X8 + 0x9C]
	0x03A66998 ADRP X8, 0x6F0000
	0x03A6699C LDR X8, [X8 + 0x800]
	0x03A669A0 LDR X0, [X8]
	0x03A669A4 BL 0x3C124EC
	0x03A669A8 LDR X8, [X19]
	0x03A669AC MOV X1, X31
	0x03A669B0 LDR X8, [X8 + 0xB8]
	0x03A669B4 STR W0, [X8 + 0xA0]
	0x03A669B8 ADRP X8, 0x6F0000
	0x03A669BC LDR X8, [X8 + 0x8A8]
	0x03A669C0 LDR X0, [X8]
	0x03A669C4 BL 0x3C124EC
	0x03A669C8 LDR X8, [X19]
	0x03A669CC MOV X1, X31
	0x03A669D0 LDR X8, [X8 + 0xB8]
	0x03A669D4 STR W0, [X8 + 0xA4]
	0x03A669D8 ADRP X8, 0x6F0000
	0x03A669DC LDR X8, [X8 + 0x7A0]
	0x03A669E0 LDR X0, [X8]
	0x03A669E4 BL 0x3C124EC
	0x03A669E8 LDR X8, [X19]
	0x03A669EC MOV X1, X31
	0x03A669F0 LDR X8, [X8 + 0xB8]
	0x03A669F4 STR W0, [X8 + 0xA8]
	0x03A669F8 ADRP X8, 0x6F0000
	0x03A669FC LDR X8, [X8 + 0x788]
	0x03A66A00 LDR X0, [X8]
	0x03A66A04 BL 0x3C124EC
	0x03A66A08 LDR X8, [X19]
	0x03A66A0C MOV X1, X31
	0x03A66A10 LDR X8, [X8 + 0xB8]
	0x03A66A14 STR W0, [X8 + 0xAC]
	0x03A66A18 ADRP X8, 0x6F0000
	0x03A66A1C LDR X8, [X8 + 0x838]
	0x03A66A20 LDR X0, [X8]
	0x03A66A24 BL 0x3C124EC
	0x03A66A28 LDR X8, [X19]
	0x03A66A2C MOV X1, X31
	0x03A66A30 LDR X8, [X8 + 0xB8]
	0x03A66A34 STR W0, [X8 + 0xB0]
	0x03A66A38 ADRP X8, 0x6F0000
	0x03A66A3C LDR X8, [X8 + 0x890]

ISIL:
	001 Move [X31-96], D15
	002 Move [X31-88], D14
	003 Move [X31+16], D13
	004 Move [X31+24], D12
	005 Move [X31+32], D11
	006 Move [X31+40], D10
	007 Move [X31+48], D9
	008 Move [X31+56], D8
	009 Move [X31+64], X30
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X20, 0x97D000
	014 Move X21, 0x68E000
	015 Move W8, [X20+580]
	016 Move X21, [X21+1432]
	017 Move V8, V2
	018 Move V9, V1
	019 Move V10, V0
	020 Move X19, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {33}
	025 Move X0, 0x6ED000
	026 Move X0, [X0+3480]
	027 Call 0x1C17CF4
	028 Move X0, 0x68E000
	029 Move X0, [X0+1432]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X20+580], W8
	033 Move X0, [X21]
	034 Move W8, [X0+224]
	035 Compare W8, 0
	036 JumpIfNotEqual {38}
	037 Call 0x1C17DFC
	038 Move X0, X19
	039 Move X1, X31
	040 Move X2, X31
	041 Call Object.op_Inequality, X0, X1
	042 Move TEMP, X0
	043 And TEMP, TEMP, 1
	044 Compare TEMP, 1
	045 JumpIfNotEqual {93}
	046 Compare X19, 0
	047 JumpIfEqual {179}
	048 Move X0, X19
	049 Move X1, X31
	050 Call Light.get_type, X0
	051 Compare W0, 0
	052 JumpIfEqual {107}
	053 NotImplemented "Instruction CMP not yet implemented."
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Move X0, X19
	056 Move X1, X31
	057 Call Component.get_transform, X0
	058 Compare X0, 0
	059 JumpIfEqual {179}
	060 Move X1, X31
	061 Call Transform.get_forward, X0
	062 Move X8, 0x6ED000
	063 Move X8, [X8+3480]
	064 Move V11, V0
	065 Move V12, V1
	066 Move V13, V2
	067 Move X0, [X8]
	068 Move W8, [X0+224]
	069 Compare W8, 0
	070 JumpIfNotEqual {72}
	071 Call 0x1C17DFC
	072 Move V0, V11
	073 Move V1, V12
	074 Move V2, V13
	075 Move V3, V10
	076 Move V4, V9
	077 Move V5, V8
	078 Move X20, [X31+80]
	079 Move X19, [X31+88]
	080 Move X30, [X31+64]
	081 Move X21, [X31+72]
	082 Move D9, [X31+48]
	083 Move D8, [X31+56]
	084 Move D11, [X31+32]
	085 Move D10, [X31+40]
	086 Move D13, [X31+16]
	087 Move D12, [X31+24]
	088 Move X0, X31
	089 Move D15, [X31+96]
	090 Move D14, [X31+104]
	091 Call LensFlareCommonSRP.ShapeAttenuationDirLight, X0, X1
	092 Return V0
	093 Move X20, [X31+80]
	094 Move X19, [X31+88]
	095 Move X30, [X31+64]
	096 Move X21, [X31+72]
	097 Move D9, [X31+48]
	098 Move D8, [X31+56]
	099 Move D11, [X31+32]
	100 Move D10, [X31+40]
	101 Move D13, [X31+16]
	102 Move D12, [X31+24]
	103 Move S0, 1
	104 Move D15, [X31+96]
	105 Move D14, [X31+104]
	106 Return V0
	107 Move X0, X19
	108 Move X1, X31
	109 Call Component.get_transform, X0
	110 Compare X0, 0
	111 JumpIfEqual {179}
	112 Move X1, X31
	113 Call Transform.get_forward, X0
	114 Move X0, X19
	115 Move X1, X31
	116 Move V11, V0
	117 Move V12, V1
	118 Move V13, V2
	119 Call Light.get_spotAngle, X0
	120 Move X0, X19
	121 Move X1, X31
	122 Move V14, V0
	123 Call Light.get_innerSpotAngle, X0
	124 Move X8, 0x6ED000
	125 Move X8, [X8+3480]
	126 Move V15, V0
	127 Move X0, [X8]
	128 Move W8, [X0+224]
	129 Compare W8, 0
	130 JumpIfNotEqual {132}
	131 Call 0x1C17DFC
	132 Move W8, 0x43340000
	133 Move S0, W8
	134 NotImplemented "Instruction FDIV not yet implemented."
	135 Move V0, V11
	136 Move V1, V12
	137 Move V2, V13
	138 Move V3, V10
	139 Move V4, V9
	140 Move V5, V8
	141 Move X20, [X31+80]
	142 Move X19, [X31+88]
	143 Move X30, [X31+64]
	144 Move X21, [X31+72]
	145 Move D9, [X31+48]
	146 Move D8, [X31+56]
	147 Move D11, [X31+32]
	148 Move D10, [X31+40]
	149 Move D13, [X31+16]
	150 Move D12, [X31+24]
	151 Move V6, V14
	152 Move X0, X31
	153 Move D15, [X31+96]
	154 Move D14, [X31+104]
	155 Call LensFlareCommonSRP.ShapeAttenuationSpotConeLight, X0, X1, V0, V1
	156 Return V0
	157 Move X8, 0x6ED000
	158 Move X8, [X8+3480]
	159 Move X0, [X8]
	160 Move W8, [X0+224]
	161 Compare W8, 0
	162 JumpIfNotEqual {164}
	163 Call 0x1C17DFC
	164 Move X20, [X31+80]
	165 Move X19, [X31+88]
	166 Move X30, [X31+64]
	167 Move X21, [X31+72]
	168 Move D9, [X31+48]
	169 Move D8, [X31+56]
	170 Move D11, [X31+32]
	171 Move D10, [X31+40]
	172 Move D13, [X31+16]
	173 Move D12, [X31+24]
	174 Move X0, X31
	175 Move D15, [X31+96]
	176 Move D14, [X31+104]
	177 Call LensFlareCommonSRP.ShapeAttenuationPointLight
	178 Return V0
	179 Call 0x1C17F20

Method: System.Void LensFlareDataDrivenComputeOcclusion(UnityEngine.Camera camera, UnityEngine.Rendering.CommandBuffer cmd, UnityEngine.Rendering.RenderTargetIdentifier source, System.Boolean usePanini, System.Single paniniDistance, System.Single paniniCropToFit)

Disassembly:
	0x03A645C0 TBNZ X8, 0x0, 0x3A645D8
	0x03A645C4 ADRP X0, 0x6F2000
	0x03A645C8 LDR X0, [X0 + 0x6F0]
	0x03A645CC BL 0x1C16CF4
	0x03A645D0 MOVZ W8, 0x1
	0x03A645D4 STRB W8, [X22 + 0x24F]
	0x03A645D8 LDRB W8, [X21 + 0x235]
	0x03A645DC CBNZ W8, 0x3A64634
	0x03A645E0 LDR X0, [X21 + 0x1F8]
	0x03A645E4 CBZ X0, 0x3A64644
	0x03A645E8 BL 0x3A59BC8
	0x03A645EC TBZ X0, 0x0, 0x3A64634
	0x03A645F0 CBZ X19, 0x3A64644
	0x03A645F4 ADRP X8, 0x6F2000
	0x03A645F8 LDR X8, [X8 + 0x6F0]
	0x03A645FC MOV X0, X19
	0x03A64600 MOV X2, X31
	0x03A64604 LDR X1, [X8]
	0x03A64608 BL 0x3C14E3C
	0x03A6460C LDR X0, [X21 + 0x1A0]
	0x03A64610 LDR X1, [X21 + 0x1F8]
	0x03A64614 LDR W2, [X20 + 0x140]
	0x03A64618 LDR W3, [X20 + 0x144]
	0x03A6461C MOV X4, X19
	0x03A64620 LDP X20, X19, [X31 + 0x20]
	0x03A64624 LDP X22, X21, [X31 + 0x10]
	0x03A64628 MOV X5, X31
	0x03A6462C LDR X30, [X31], #0x30
	0x03A64630 B 0x3A67D88
	0x03A64634 LDP X20, X19, [X31 + 0x20]
	0x03A64638 LDP X22, X21, [X31 + 0x10]
	0x03A6463C LDR X30, [X31], #0x30
	0x03A64640 RET
	0x03A64644 BL 0x1C16F20
	0x03A64648 STR X30, [X31 - 0x30]!
	0x03A6464C STP X22, X21, [X31 + 0x10]
	0x03A64650 STP X20, X19, [X31 + 0x20]
	0x03A64654 ADRP X22, 0x97E000
	0x03A64658 LDRB W8, [X22 + 0x250]
	0x03A6465C MOV X20, X2
	0x03A64660 MOV X21, X1
	0x03A64664 MOV X19, X0
	0x03A64668 TBNZ X8, 0x0, 0x3A64680
	0x03A6466C ADRP X0, 0x6F2000
	0x03A64670 LDR X0, [X0 + 0x6F8]
	0x03A64674 BL 0x1C16CF4
	0x03A64678 MOVZ W8, 0x1
	0x03A6467C STRB W8, [X22 + 0x250]
	0x03A64680 LDRB W8, [X19 + 0x235]
	0x03A64684 CBNZ W8, 0x3A646CC
	0x03A64688 LDRB W8, [X21 + 0x1A9]
	0x03A6468C CBZ W8, 0x3A646CC
	0x03A64690 CBZ X20, 0x3A646DC
	0x03A64694 ADRP X8, 0x6F2000
	0x03A64698 LDR X8, [X8 + 0x6F8]
	0x03A6469C MOV X0, X20
	0x03A646A0 MOV X2, X31
	0x03A646A4 LDR X1, [X8]
	0x03A646A8 BL 0x3C14E3C
	0x03A646AC LDR X0, [X19 + 0x1A0]
	0x03A646B0 LDR W1, [X19 + 0x210]
	0x03A646B4 LDR W2, [X21 + 0x140]
	0x03A646B8 LDR W3, [X21 + 0x144]
	0x03A646BC MOV X4, X20
	0x03A646C0 MOV X5, X31
	0x03A646C4 BL 0x3A67B90
	0x03A646C8 STR W0, [X19 + 0x210]
	0x03A646CC LDP X20, X19, [X31 + 0x20]
	0x03A646D0 LDP X22, X21, [X31 + 0x10]
	0x03A646D4 LDR X30, [X31], #0x30
	0x03A646D8 RET
	0x03A646DC BL 0x1C16F20
	0x03A646E0 SUB X31, X31, 0x60
	0x03A646E4 STR X30, [X31 + 0x10]
	0x03A646E8 STP X26, X25, [X31 + 0x20]
	0x03A646EC STP X24, X23, [X31 + 0x30]
	0x03A646F0 STP X22, X21, [X31 + 0x40]
	0x03A646F4 STP X20, X19, [X31 + 0x50]
	0x03A646F8 ADRP X26, 0x97E000
	0x03A646FC ADRP X25, 0x6B8000
	0x03A64700 LDRB W8, [X26 + 0x251]
	0x03A64704 LDR X25, [X25 + 0x8A8]
	0x03A64708 MOV W19, W5
	0x03A6470C MOV X21, X4
	0x03A64710 MOV W20, W3
	0x03A64714 MOV X22, X2
	0x03A64718 MOV X23, X1
	0x03A6471C MOV X24, X0
	0x03A64720 TBNZ X8, 0x0, 0x3A64744
	0x03A64724 ADRP X0, 0x6F0000
	0x03A64728 LDR X0, [X0 + 0x20]
	0x03A6472C BL 0x1C16CF4
	0x03A64730 ADRP X0, 0x6B8000
	0x03A64734 LDR X0, [X0 + 0x8A8]
	0x03A64738 BL 0x1C16CF4
	0x03A6473C MOVZ W8, 0x1
	0x03A64740 STRB W8, [X26 + 0x251]
	0x03A64744 LDR X0, [X25]
	0x03A64748 STP X31, X31, [X31]
	0x03A6474C ADRP X25, 0x6F0000
	0x03A64750 LDR X24, [X24 + 0x1F0]
	0x03A64754 LDR W8, [X0 + 0xE0]
	0x03A64758 LDR X25, [X25 + 0x20]
	0x03A6475C CBNZ W8, 0x3A64764
	0x03A64760 BL 0x1C16DFC
	0x03A64764 ADD X4, X31, 0x0
	0x03A64768 MOV X0, X23
	0x03A6476C MOV X1, X22
	0x03A64770 MOV W2, W20
	0x03A64774 MOV X3, X24
	0x03A64778 MOV X5, X31
	0x03A6477C BL 0x3A91338
	0x03A64780 LDR X0, [X25]
	0x03A64784 LDR W8, [X0 + 0xE0]
	0x03A64788 CBNZ W8, 0x3A64790
	0x03A6478C BL 0x1C16DFC
	0x03A64790 CBZ X21, 0x3A647E4
	0x03A64794 LDR X8, [X25]
	0x03A64798 LDP S2, S3, [X31 + 0x8]
	0x03A6479C LDP S0, S1, [X31]
	0x03A647A0 MOV X0, X21
	0x03A647A4 LDR X8, [X8 + 0xB8]
	0x03A647A8 MOV X2, X31
	0x03A647AC LDR W1, [X8 + 0xCC]
	0x03A647B0 BL 0x3C15D80
	0x03A647B4 MOV X0, X21
	0x03A647B8 MOV W1, W20
	0x03A647BC MOV W2, W19
	0x03A647C0 MOV X3, X31
	0x03A647C4 BL 0x39EB1AC
	0x03A647C8 LDP X20, X19, [X31 + 0x50]
	0x03A647CC LDP X22, X21, [X31 + 0x40]
	0x03A647D0 LDP X24, X23, [X31 + 0x30]
	0x03A647D4 LDP X26, X25, [X31 + 0x20]
	0x03A647D8 LDR X30, [X31 + 0x10]
	0x03A647DC ADD X31, X31, 0x60
	0x03A647E0 RET
	0x03A647E4 BL 0x1C16F20
	0x03A647E8 STR D10, [X31 - 0x80]!
	0x03A647EC STP D9, D8, [X31 + 0x10]
	0x03A647F0 STP X29, X30, [X31 + 0x20]
	0x03A647F4 STP X28, X27, [X31 + 0x30]
	0x03A647F8 STP X26, X25, [X31 + 0x40]
	0x03A647FC STP X24, X23, [X31 + 0x50]
	0x03A64800 STP X22, X21, [X31 + 0x60]
	0x03A64804 STP X20, X19, [X31 + 0x70]
	0x03A64808 SUB X31, X31, 0x320
	0x03A6480C ADRP X19, 0x97E000
	0x03A64810 LDRB W8, [X19 + 0x241]
	0x03A64814 MOV X24, X4
	0x03A64818 MOV X20, X3
	0x03A6481C MOV X21, X2
	0x03A64820 MOV X23, X0
	0x03A64824 TBNZ X8, 0x0, 0x3A6489C
	0x03A64828 ADRP X0, 0x6EE000
	0x03A6482C LDR X0, [X0 + 0xE28]
	0x03A64830 BL 0x1C16CF4
	0x03A64834 ADRP X0, 0x6B7000
	0x03A64838 LDR X0, [X0 + 0x8F8]
	0x03A6483C BL 0x1C16CF4
	0x03A64840 ADRP X0, 0x6F0000
	0x03A64844 LDR X0, [X0 + 0x10]
	0x03A64848 BL 0x1C16CF4
	0x03A6484C ADRP X0, 0x6F2000
	0x03A64850 LDR X0, [X0 + 0x550]
	0x03A64854 BL 0x1C16CF4
	0x03A64858 ADRP X0, 0x6F2000
	0x03A6485C LDR X0, [X0 + 0x700]

ISIL:
	001 Move [X31-144], D12
	002 Move [X31+16], D11
	003 Move [X31+24], D10
	004 Move [X31+32], D9
	005 Move [X31+40], D8
	006 Move [X31+48], X29
	007 Move [X31+56], X30
	008 Move [X31+64], X28
	009 Move [X31+72], X27
	010 Move [X31+80], X26
	011 Move [X31+88], X25
	012 Move [X31+96], X24
	013 Move [X31+104], X23
	014 Move [X31+112], X22
	015 Move [X31+120], X21
	016 Move [X31+128], X20
	017 Move [X31+136], X19
	018 Subtract X31, X31, 688
	019 Move X19, 0x97F000
	020 Move W8, [X19+581]
	021 Move V8, V1
	022 Move V9, V0
	023 Move W23, W4
	024 Move X21, X2
	025 Move X24, X1
	026 Move X22, X0
	027 Move TEMP, X8
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfEqual {39}
	031 Move X0, 0x6EF000
	032 Move X0, [X0+3480]
	033 Call 0x1C17CF4
	034 Move X0, 0x6F3000
	035 Move X0, [X0+1360]
	036 Call 0x1C17CF4
	037 Move W8, 1
	038 Move [X19+581], W8
	039 Compare X24, 0
	040 JumpIfEqual {235}
	041 Add X8, X31, 624
	042 Move X0, X24
	043 Move X1, X31
	044 Call Camera.get_projectionMatrix, X0
	045 Move V0, [X31+624]
	046 Move V1, [X31+640]
	047 Move V2, [X31+656]
	048 Move V3, [X31+672]
	049 Add X8, X31, 624
	050 Add X0, X31, 496
	051 Move W1, 1
	052 Move X2, X31
	053 Move [X31+496], V0
	054 Move [X31+504], V1
	055 Move [X31+528], V2
	056 Move [X31+536], V3
	057 Call GL.GetGPUProjectionMatrix, X0, X1
	058 Move V0, [X31+624]
	059 Move V1, [X31+640]
	060 Move V2, [X31+656]
	061 Move V3, [X31+672]
	062 Add X8, X31, 624
	063 Move X0, X24
	064 Move X1, X31
	065 Move [X31+560], V0
	066 Move [X31+568], V1
	067 Move [X31+592], V2
	068 Move [X31+600], V3
	069 Call Camera.get_worldToCameraMatrix, X0
	070 Move V0, [X31+624]
	071 Move V1, [X31+640]
	072 Move V2, [X31+656]
	073 Move V3, [X31+672]
	074 Add X8, X31, 432
	075 Add X0, X31, 368
	076 Move [X31+304], V0
	077 Move [X31+312], V1
	078 Move V0, [X31+560]
	079 Move V1, [X31+576]
	080 Move [X31+336], V2
	081 Move [X31+344], V3
	082 Move V2, [X31+592]
	083 Move V3, [X31+608]
	084 Add X1, X31, 304
	085 Move X2, X31
	086 Move [X31+368], V0
	087 Move [X31+376], V1
	088 Move [X31+400], V2
	089 Move [X31+408], V3
	090 Call Matrix4x4.op_Multiply, X0, X1
	091 Move V0, [X31+432]
	092 Move V1, [X31+448]
	093 Move V2, [X31+464]
	094 Move V3, [X31+480]
	095 Move [X31+624], V0
	096 Move [X31+632], V1
	097 Move [X31+656], V2
	098 Move [X31+664], V3
	099 Move X8, [X22+296]
	100 Compare X8, 0
	101 JumpIfEqual {235}
	102 Move X9, [X8+72]
	103 NotImplemented "Instruction LDUR not yet implemented."
	104 NotImplemented "Instruction LDUR not yet implemented."
	105 Move X1, [X8+88]
	106 Move [X31+288], X9
	107 Move [X31+256], V1
	108 Move [X31+264], V0
	109 Compare X21, 0
	110 JumpIfEqual {235}
	111 Move V0, [X31+256]
	112 Move V1, [X31+272]
	113 Move X8, [X31+288]
	114 Add X2, X31, 208
	115 Move X0, X21
	116 Move X3, X31
	117 Move [X31+208], V0
	118 Move [X31+216], V1
	119 Move [X31+240], X8
	120 Call CommandBuffer.SetGlobalTexture, X0, X1, X2
	121 Move X8, [X22+408]
	122 Compare X8, 0
	123 JumpIfEqual {235}
	124 Move X19, [X8+112]
	125 Move W20, [X22+224]
	126 Move W25, [X22+228]
	127 Move X0, X24
	128 Move X1, X31
	129 Call Component.get_transform, X0
	130 Compare X0, 0
	131 JumpIfEqual {235}
	132 Move X26, 0x6F3000
	133 Move X22, 0x6EF000
	134 Move X26, [X26+1360]
	135 Move X22, [X22+3480]
	136 Move X1, X31
	137 Call Transform.get_position, X0
	138 Move V10, V0
	139 Move V11, V1
	140 Move V0, [X31+624]
	141 Move V1, [X31+640]
	142 Move V3, [X31+656]
	143 Move V4, [X31+672]
	144 Move X0, [X26]
	145 Move V12, V2
	146 Move [X31+432], V0
	147 Move [X31+440], V1
	148 Move [X31+464], V3
	149 Move [X31+472], V4
	150 Move W8, [X0+224]
	151 Move [X31+696], X21
	152 Move [X31+128], X24
	153 Move [X31+136], X19
	154 Move [X31+124], W23
	155 Compare W8, 0
	156 JumpIfNotEqual {159}
	157 Call 0x1C17DFC
	158 Move X0, [X26]
	159 Move X8, [X0+184]
	160 Move X0, [X22]
	161 Move W24, [X8+152]
	162 Move W26, [X8+156]
	163 Move W27, [X8+160]
	164 Move W28, [X8+164]
	165 Move W29, [X8+168]
	166 Move W21, [X8+172]
	167 Move W23, [X8+176]
	168 Move W19, [X8+180]
	169 Move W9, [X0+224]
	170 Move W22, [X8+184]
	171 Compare W9, 0
	172 JumpIfNotEqual {174}
	173 Call 0x1C17DFC
	174 Move V2, [X31+432]
	175 Move V3, [X31+448]
	176 Move V4, [X31+464]
	177 Move V5, [X31+480]
	178 Move W9, [X31+124]
	179 Move X1, [X31+128]
	180 Move X0, [X31+136]
	181 Move X5, [X31+696]
	182 NotImplemented "Instruction SCVTF not yet implemented."
	183 NotImplemented "Instruction SCVTF not yet implemented."
	184 Move [X31+144], V2
	185 Move [X31+152], V3
	186 Move [X31+176], V4
	187 Move [X31+184], V5
	188 Move TEMP, 0
	189 Not TEMP
	190 Move W8, TEMP
	191 And W2, W9, 1
	192 Add X4, X31, 144
	193 Move W3, 1
	194 Move V2, V9
	195 Move V3, V8
	196 Move V4, V10
	197 Move V5, V11
	198 Move V6, V12
	199 Move W6, W31
	200 Move W7, W31
	201 Move [X31], X31
	202 Move [X31+8], X31
	203 Move [X31+104], X31
	204 Move [X31+96], W22
	205 Move [X31+88], W19
	206 Move [X31+80], W23
	207 Move [X31+72], W21
	208 Move [X31+64], W29
	209 Move [X31+48], W28
	210 Move [X31+40], W27
	211 Move [X31+32], W26
	212 Move [X31+56], W8
	213 Move [X31+24], W8
	214 Move [X31+16], W24
	215 Call LensFlareCommonSRP.ComputeOcclusion, X0, X1, V0, V1, X2, V2, V3, X3, X4, X5, X6, X7, X8, X9, X10, X11, X12, X13, X14, X15, X16, X17, X18, X19, X20, X21
	216 Add X31, X31, 688
	217 Move X20, [X31+128]
	218 Move X19, [X31+136]
	219 Move X22, [X31+112]
	220 Move X21, [X31+120]
	221 Move X24, [X31+96]
	222 Move X23, [X31+104]
	223 Move X26, [X31+80]
	224 Move X25, [X31+88]
	225 Move X28, [X31+64]
	226 Move X27, [X31+72]
	227 Move X29, [X31+48]
	228 Move X30, [X31+56]
	229 Move D9, [X31+32]
	230 Move D8, [X31+40]
	231 Move D11, [X31+16]
	232 Move D10, [X31+24]
	233 Move V12, [X31+144]
	234 Return 
	235 Call 0x1C17F20

Method: System.Void LensFlareDataDriven(UnityEngine.Camera camera, UnityEngine.Rendering.CommandBuffer cmd, UnityEngine.Rendering.RenderTargetIdentifier source, System.Boolean usePanini, System.Single paniniDistance, System.Single paniniCropToFit)

Disassembly:
	0x03A64860 BL 0x1C16CF4
	0x03A64864 ADRP X0, 0x6F2000
	0x03A64868 LDR X0, [X0 + 0x708]
	0x03A6486C BL 0x1C16CF4
	0x03A64870 ADRP X0, 0x6F2000
	0x03A64874 LDR X0, [X0 + 0x710]
	0x03A64878 BL 0x1C16CF4
	0x03A6487C ADRP X0, 0x6F2000
	0x03A64880 LDR X0, [X0 + 0x718]
	0x03A64884 BL 0x1C16CF4
	0x03A64888 ADRP X0, 0x6F2000
	0x03A6488C LDR X0, [X0 + 0x720]
	0x03A64890 BL 0x1C16CF4
	0x03A64894 MOVZ W8, 0x1
	0x03A64898 STRB W8, [X19 + 0x241]
	0x03A6489C MOVI V0.2D, 0x0
	0x03A648A0 STR W31, [X31 + 0x310]
	0x03A648A4 STP V0, V0, [X31 + 0x2F0]
	0x03A648A8 STR V0, [X31 + 0x2E]
	0x03A648AC LDR X8, [X23 + 0x198]
	0x03A648B0 CBZ X8, 0x3A64F88
	0x03A648B4 MOV X19, X23
	0x03A648B8 LDR X22, [X8 + 0x20]
	0x03A648BC LDR W9, [X19 + 0xE0]!
	0x03A648C0 LDR W10, [X19 + 0x4]
	0x03A648C4 LDR X8, [X19 + 0xC8]
	0x03A648C8 CMP W9, 0x0
	0x03A648CC CINC W26, W9, LT
	0x03A648D0 CMP W10, 0x0
	0x03A648D4 CINC W25, W10, LT
	0x03A648D8 CBZ X8, 0x3A64F88
	0x03A648DC LDR X0, [X8 + 0x40]
	0x03A648E0 CBZ X0, 0x3A64F88
	0x03A648E4 LDR X8, [X0]
	0x03A648E8 LDR X9, [X8 + 0x218]
	0x03A648EC LDR X1, [X8 + 0x220]
	0x03A648F0 BLR X9
	0x03A648F4 LDR X8, [X23 + 0x1A8]
	0x03A648F8 CBZ X8, 0x3A64F88
	0x03A648FC LDR X0, [X8 + 0x48]
	0x03A64900 CBZ X0, 0x3A64F88
	0x03A64904 LDR X8, [X0]
	0x03A64908 MOV V8.16B, V0.16B
	0x03A6490C LDR X9, [X8 + 0x218]
	0x03A64910 LDR X1, [X8 + 0x220]
	0x03A64914 BLR X9
	0x03A64918 LDR X8, [X23 + 0x1A8]
	0x03A6491C FCMP S8, S0
	0x03A64920 FCSEL S9, S8, S0, GT
	0x03A64924 CBZ X8, 0x3A64F88
	0x03A64928 LDR X0, [X8 + 0x50]
	0x03A6492C CBZ X0, 0x3A64F88
	0x03A64930 LDR X8, [X0]
	0x03A64934 LDR X9, [X8 + 0x218]
	0x03A64938 LDR X1, [X8 + 0x220]
	0x03A6493C BLR X9
	0x03A64940 LDR X8, [X23 + 0x1A8]
	0x03A64944 CBZ X8, 0x3A64F88
	0x03A64948 LDR X0, [X8 + 0x58]
	0x03A6494C STR X24, [X31 + 0x8]
	0x03A64950 CBZ X0, 0x3A64F88
	0x03A64954 LDR X8, [X0]
	0x03A64958 ADRP X24, 0x6B7000
	0x03A6495C ADRP X27, 0x6F2000
	0x03A64960 ADRP X28, 0x6F2000
	0x03A64964 LDR X9, [X8 + 0x218]
	0x03A64968 LDR X1, [X8 + 0x220]
	0x03A6496C LDR X24, [X24 + 0x8F8]
	0x03A64970 LDR X27, [X27 + 0x710]
	0x03A64974 LDR X28, [X28 + 0x550]
	0x03A64978 MOV V10.16B, V0.16B
	0x03A6497C BLR X9
	0x03A64980 LDR X8, [X24]
	0x03A64984 MOV W24, W0
	0x03A64988 LDR W9, [X8 + 0xE0]
	0x03A6498C CBNZ W9, 0x3A64998
	0x03A64990 MOV X0, X8
	0x03A64994 BL 0x1C16DFC
	0x03A64998 LDR X1, [X27]
	0x03A6499C AND W2, W24, 0x1
	0x03A649A0 MOV X0, X22
	0x03A649A4 MOV X3, X31
	0x03A649A8 BL 0x39E9638
	0x03A649AC LDR X0, [X28]
	0x03A649B0 LDR W8, [X0 + 0xE0]
	0x03A649B4 CBNZ W8, 0x3A649BC
	0x03A649B8 BL 0x1C16DFC
	0x03A649BC CBZ X22, 0x3A64F88
	0x03A649C0 ADRP X9, 0x6F2000
	0x03A649C4 LDR X9, [X9 + 0x550]
	0x03A649C8 MOVZ W8, 0x44870000
	0x03A649CC FMOV S1, W8
	0x03A649D0 SBFM W28, W26, 0x1, 0x1F
	0x03A649D4 LDR X9, [X9]
	0x03A649D8 SBFM W29, W25, 0x1, 0x1F
	0x03A649DC ADRP X25, 0x6F0000
	0x03A649E0 ADRP X27, 0x6F2000
	0x03A649E4 LDR X8, [X9 + 0xB8]
	0x03A649E8 SCVTF S0, W28
	0x03A649EC LDR X25, [X25 + 0x10]
	0x03A649F0 LDR X27, [X27 + 0x708]
	0x03A649F4 LDR W1, [X8 + 0x1C]
	0x03A649F8 FDIV S0, S0, S1
	0x03A649FC FMOV S1, 2
	0x03A64A00 FMUL S0, S0, S10
	0x03A64A04 FMINNM S2, S0, S1
	0x03A64A08 FMOV S3, W31
	0x03A64A0C MOV X0, X22
	0x03A64A10 MOV V0.16B, V8.16B
	0x03A64A14 MOV V1.16B, V9.16B
	0x03A64A18 MOV X2, X31
	0x03A64A1C ADD X26, X31, 0x238
	0x03A64A20 BL 0x3C15D80
	0x03A64A24 LDP W1, W2, [X23 + 0xE0]
	0x03A64A28 LDR W3, [X23 + 0x20C]
	0x03A64A2C ADD X8, X31, 0x2A8
	0x03A64A30 MOV X0, X23
	0x03A64A34 MOV W4, W31
	0x03A64A38 ADD X24, X23, 0x140
	0x03A64A3C BL 0x3A61B2C
	0x03A64A40 LDR W8, [X31 + 0x2D8]
	0x03A64A44 LDP V1, V0, [X26 + 0x80]
	0x03A64A48 LDR V2, [X26 + 0x7]
	0x03A64A4C LDR X0, [X25]
	0x03A64A50 STR W8, [X31 + 0x310]
	0x03A64A54 STP V1, V0, [X31 + 0x2F0]
	0x03A64A58 STR V2, [X31 + 0x2E]
	0x03A64A5C LDR W8, [X0 + 0xE0]
	0x03A64A60 CBNZ W8, 0x3A64A68
	0x03A64A64 BL 0x1C16DFC
	0x03A64A68 LDR X6, [X27]
	0x03A64A6C ADD X1, X31, 0x2E0
	0x03A64A70 FMOV S0, W31
	0x03A64A74 MOVZ W2, 0x1
	0x03A64A78 MOVZ W3, 0x1
	0x03A64A7C MOVZ W5, 0x1
	0x03A64A80 MOV X0, X24
	0x03A64A84 MOV W4, W31
	0x03A64A88 MOV X7, X31
	0x03A64A8C BL 0x3A6D184
	0x03A64A90 LDR W3, [X23 + 0x20C]
	0x03A64A94 ADD X8, X31, 0x270
	0x03A64A98 MOV X0, X23
	0x03A64A9C MOV W1, W28
	0x03A64AA0 MOV W2, W29
	0x03A64AA4 MOV W4, W31
	0x03A64AA8 ADD X25, X23, 0x148
	0x03A64AAC BL 0x3A61B2C
	0x03A64AB0 ADRP X9, 0x6F2000
	0x03A64AB4 LDP V0, V1, [X31 + 0x270]
	0x03A64AB8 LDR V2, [X31 + 0x29]
	0x03A64ABC LDR W8, [X31 + 0x2A0]
	0x03A64AC0 LDR X9, [X9 + 0x700]
	0x03A64AC4 STP V0, V1, [X31 + 0x2E0]
	0x03A64AC8 ADD X1, X31, 0x2E0
	0x03A64ACC FMOV S0, W31
	0x03A64AD0 LDR X6, [X9]
	0x03A64AD4 MOVZ W2, 0x1
	0x03A64AD8 MOVZ W3, 0x1
	0x03A64ADC MOVZ W5, 0x1
	0x03A64AE0 MOV X0, X25
	0x03A64AE4 MOV W4, W31
	0x03A64AE8 MOV X7, X31
	0x03A64AEC STR V2, [X31 + 0x30]
	0x03A64AF0 STR W8, [X31 + 0x310]
	0x03A64AF4 STR X25, [X31 + 0x328]
	0x03A64AF8 BL 0x3A6D184
	0x03A64AFC ADD X8, X31, 0x238
	0x03A64B00 MOVZ W3, 0x30
	0x03A64B04 MOV X0, X23
	0x03A64B08 MOV W1, W28
	0x03A64B0C MOV W2, W29
	0x03A64B10 MOV W4, W31
	0x03A64B14 ADD X25, X23, 0x150
	0x03A64B18 BL 0x3A61B2C
	0x03A64B1C ADRP X9, 0x6F2000
	0x03A64B20 LDP V0, V1, [X26]
	0x03A64B24 LDR V2, [X26 + 0x2]
	0x03A64B28 LDR W8, [X31 + 0x268]
	0x03A64B2C LDR X9, [X9 + 0x718]
	0x03A64B30 STP V0, V1, [X31 + 0x2E0]
	0x03A64B34 ADD X1, X31, 0x2E0
	0x03A64B38 FMOV S0, W31
	0x03A64B3C LDR X6, [X9]
	0x03A64B40 MOVZ W2, 0x1
	0x03A64B44 MOVZ W3, 0x1
	0x03A64B48 MOVZ W5, 0x1
	0x03A64B4C MOV X0, X25
	0x03A64B50 MOV W4, W31
	0x03A64B54 MOV X7, X31
	0x03A64B58 STR V2, [X31 + 0x30]
	0x03A64B5C STR W8, [X31 + 0x310]
	0x03A64B60 BL 0x3A6D184
	0x03A64B64 ADD X8, X31, 0x200
	0x03A64B68 MOVZ W3, 0x30
	0x03A64B6C MOV X0, X23
	0x03A64B70 MOV W1, W28
	0x03A64B74 MOV W2, W29
	0x03A64B78 MOV W4, W31
	0x03A64B7C ADD X27, X23, 0x158
	0x03A64B80 BL 0x3A61B2C
	0x03A64B84 ADRP X9, 0x6F2000
	0x03A64B88 LDP V0, V1, [X31 + 0x200]
	0x03A64B8C LDR V2, [X31 + 0x22]
	0x03A64B90 LDR W8, [X31 + 0x230]
	0x03A64B94 LDR X9, [X9 + 0x720]
	0x03A64B98 STP V0, V1, [X31 + 0x2E0]
	0x03A64B9C ADD X1, X31, 0x2E0
	0x03A64BA0 FMOV S0, W31
	0x03A64BA4 LDR X6, [X9]
	0x03A64BA8 MOVZ W2, 0x1
	0x03A64BAC MOVZ W3, 0x1
	0x03A64BB0 MOVZ W5, 0x1
	0x03A64BB4 MOV X0, X27
	0x03A64BB8 MOV W4, W31
	0x03A64BBC MOV X7, X31
	0x03A64BC0 STR V2, [X31 + 0x30]
	0x03A64BC4 STR W8, [X31 + 0x310]
	0x03A64BC8 BL 0x3A6D184
	0x03A64BCC LDR W8, [X19 + 0x30]
	0x03A64BD0 LDP V2, V0, [X19 + 0x10]
	0x03A64BD4 LDR V1, [X19]
	0x03A64BD8 ADD X1, X31, 0x1C0
	0x03A64BDC MOV X0, X21
	0x03A64BE0 MOV X2, X31
	0x03A64BE4 STR W8, [X31 + 0x1F0]
	0x03A64BE8 STP V2, V0, [X31 + 0x1D0]
	0x03A64BEC STR V1, [X31 + 0x1C]
	0x03A64BF0 BL 0x3A68048
	0x03A64BF4 CBZ X21, 0x3A64F88
	0x03A64BF8 ADRP X29, 0x6F2000
	0x03A64BFC LDR X29, [X29 + 0x550]
	0x03A64C00 ADRP X19, 0x6EE000
	0x03A64C04 FMOV S0, 0.5
	0x03A64C08 FMOV S1, 0.5
	0x03A64C0C LDR X8, [X29]
	0x03A64C10 FMOV S2, 2
	0x03A64C14 FMOV S3, 2
	0x03A64C18 MOV X0, X21
	0x03A64C1C LDR X8, [X8 + 0xB8]
	0x03A64C20 MOV X2, X31
	0x03A64C24 LDR W1, [X8 + 0x90]
	0x03A64C28 LDR X19, [X19 + 0xE28]
	0x03A64C2C BL 0x3C4CED8

ISIL:
	001 Move [X31-144], D12
	002 Move [X31+16], D11
	003 Move [X31+24], D10
	004 Move [X31+32], D9
	005 Move [X31+40], D8
	006 Move [X31+48], X29
	007 Move [X31+56], X30
	008 Move [X31+64], X28
	009 Move [X31+72], X27
	010 Move [X31+80], X26
	011 Move [X31+88], X25
	012 Move [X31+96], X24
	013 Move [X31+104], X23
	014 Move [X31+112], X22
	015 Move [X31+120], X21
	016 Move [X31+128], X20
	017 Move [X31+136], X19
	018 Subtract X31, X31, 960
	019 Move X19, 0x97F000
	020 Move W8, [X19+582]
	021 Move V8, V1
	022 Move V9, V0
	023 Move W22, W4
	024 Move X23, X3
	025 Move X20, X2
	026 Move X21, X1
	027 Move X24, X0
	028 Move TEMP, X8
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfEqual {49}
	032 Move X0, 0x6F3000
	033 Move X0, [X0+1712]
	034 Call 0x1C17CF4
	035 Move X0, 0x6EF000
	036 Move X0, [X0+3480]
	037 Call 0x1C17CF4
	038 Move X0, 0x6F3000
	039 Move X0, [X0+1360]
	040 Call 0x1C17CF4
	041 Move X0, 0x6F3000
	042 Move X0, [X0+1720]
	043 Call 0x1C17CF4
	044 Move X0, 0x6F3000
	045 Move X0, [X0+1728]
	046 Call 0x1C17CF4
	047 Move W8, 1
	048 Move [X19+582], W8
	049 NotImplemented "Instruction MOVI not yet implemented."
	050 Move [X31+880], X31
	051 Move [X31+768], X31
	052 Move [X31+848], V0
	053 Move [X31+856], V0
	054 Move [X31+816], V0
	055 Move [X31+824], V0
	056 Move [X31+784], V0
	057 Move [X31+792], V0
	058 Move [X31+736], V0
	059 Move [X31+744], V0
	060 Move [X31+704], V0
	061 Move [X31+712], V0
	062 Move [X31+672], V0
	063 Move [X31+680], V0
	064 Compare X21, 0
	065 JumpIfEqual {334}
	066 Add X8, X31, 896
	067 Move X0, X21
	068 Move X1, X31
	069 Call Camera.get_projectionMatrix, X0
	070 Move V0, [X31+896]
	071 Move V1, [X31+912]
	072 Move V2, [X31+928]
	073 Move V3, [X31+944]
	074 Add X8, X31, 896
	075 Add X0, X31, 544
	076 Move W1, 1
	077 Move X2, X31
	078 Move [X31+544], V0
	079 Move [X31+552], V1
	080 Move [X31+576], V2
	081 Move [X31+584], V3
	082 Call GL.GetGPUProjectionMatrix, X0, X1
	083 Move V0, [X31+896]
	084 Move V1, [X31+912]
	085 Move V2, [X31+928]
	086 Move V3, [X31+944]
	087 Add X8, X31, 896
	088 Move X0, X21
	089 Move X1, X31
	090 Move [X31+608], V0
	091 Move [X31+616], V1
	092 Move [X31+640], V2
	093 Move [X31+648], V3
	094 Call Camera.get_worldToCameraMatrix, X0
	095 Move V0, [X31+896]
	096 Move V1, [X31+912]
	097 Move V2, [X31+928]
	098 Move V3, [X31+944]
	099 Add X8, X31, 480
	100 Add X0, X31, 416
	101 Move [X31+352], V0
	102 Move [X31+360], V1
	103 Move V0, [X31+608]
	104 Move V1, [X31+624]
	105 Move [X31+384], V2
	106 Move [X31+392], V3
	107 Move V2, [X31+640]
	108 Move V3, [X31+656]
	109 Add X1, X31, 352
	110 Move X2, X31
	111 Move [X31+416], V0
	112 Move [X31+424], V1
	113 Move [X31+448], V2
	114 Move [X31+456], V3
	115 Call Matrix4x4.op_Multiply, X0, X1
	116 Move V0, [X31+480]
	117 Move V1, [X31+496]
	118 Move V2, [X31+512]
	119 Move V3, [X31+528]
	120 Move [X31+896], V0
	121 Move [X31+904], V1
	122 Move [X31+928], V2
	123 Move [X31+936], V3
	124 Move X8, [X24+408]
	125 Compare X8, 0
	126 JumpIfEqual {334}
	127 Move X19, [X8+112]
	128 Move W25, [X24+224]
	129 Move W26, [X24+228]
	130 Move X0, X21
	131 Move X1, X31
	132 Call Component.get_transform, X0
	133 Compare X0, 0
	134 JumpIfEqual {334}
	135 Move X28, 0x6F3000
	136 Move X28, [X28+1728]
	137 Move X1, X31
	138 Call Transform.get_position, X0
	139 Move V10, V0
	140 Move V11, V1
	141 Move V0, [X31+896]
	142 Move V1, [X31+912]
	143 Move V3, [X31+928]
	144 Move V4, [X31+944]
	145 Move X0, [X28]
	146 Move V12, V2
	147 Move [X31+480], V0
	148 Move [X31+488], V1
	149 Move [X31+512], V3
	150 Move [X31+520], V4
	151 Move X8, [X23+32]
	152 Move V1, [X23]
	153 Move V0, [X23+16]
	154 Move [X31+336], X8
	155 Move [X31+304], V1
	156 Move [X31+312], V0
	157 Move W8, [X0+224]
	158 Compare W8, 0
	159 JumpIfNotEqual {162}
	160 Call 0x1C17DFC
	161 Move X0, [X28]
	162 Move X8, [X0+184]
	163 Move X27, 0x6F3000
	164 Move X24, [X8+8]
	165 Move X27, [X27+1360]
	166 Move [X31+168], X19
	167 Compare X24, 0
	168 JumpIfEqual {183}
	169 Move V0, [X31+304]
	170 Move V1, [X31+320]
	171 Move X8, [X31+336]
	172 Move V2, [X31+480]
	173 Move V3, [X31+496]
	174 Move V4, [X31+512]
	175 Move V5, [X31+528]
	176 Move [X31+848], V0
	177 Move [X31+856], V1
	178 Move [X31+880], X8
	179 Move [X31+784], V2
	180 Move [X31+792], V3
	181 Move [X31+816], V4
	182 Move [X31+824], V5
	183 Move V0, [X31+304]
	184 Move V1, [X31+320]
	185 Move X8, [X31+336]
	186 Move V2, [X31+480]
	187 Move V3, [X31+496]
	188 Move V4, [X31+512]
	189 Move V5, [X31+528]
	190 Move [X31+736], V0
	191 Move [X31+744], V1
	192 Move [X31+768], X8
	193 Move [X31+672], V2
	194 Move [X31+680], V3
	195 Move [X31+704], V4
	196 Move [X31+712], V5
	197 Move W8, [X0+224]
	198 Compare W8, 0
	199 JumpIfNotEqual {202}
	200 Call 0x1C17DFC
	201 Move X0, [X28]
	202 Move X9, 0x6F3000
	203 Move X8, [X0+184]
	204 Move X9, [X9+1712]
	205 Move X24, [X8]
	206 Move X0, [X9]
	207 Call 0x1C17F10
	208 Move X8, 0x6F3000
	209 Move X8, [X8+1720]
	210 Move X1, X24
	211 Move X3, X31
	212 Move X19, X0
	213 Move X2, [X8]
	214 Call Func`4<Object, Object, Vector3, Single>..ctor, X0, X1, X2
	215 Move X8, [X28]
	216 Move X24, X19
	217 Move X8, [X8+184]
	218 Move [X8+8], X19
	219 Move V0, [X31+736]
	220 Move V1, [X31+752]
	221 Move X8, [X31+768]
	222 Move V2, [X31+672]
	223 Move V3, [X31+688]
	224 Move [X31+848], V0
	225 Move [X31+856], V1
	226 Move V0, [X31+704]
	227 Move V1, [X31+720]
	228 Move [X31+784], V2
	229 Move [X31+792], V3
	230 Move [X31+880], X8
	231 Move [X31+816], V0
	232 Move [X31+824], V1
	233 Move X0, [X27]
	234 Move X19, 0x6EF000
	235 Move W23, W26
	236 Move W8, [X0+224]
	237 Move X19, [X19+3480]
	238 Move [X31+968], X20
	239 Move [X31+184], X21
	240 Move [X31+180], W22
	241 Move [X31+164], W25
	242 Compare W8, 0
	243 JumpIfNotEqual {246}
	244 Call 0x1C17DFC
	245 Move X0, [X27]
	246 Move X8, [X0+184]
	247 Move X0, [X19]
	248 Move W27, [X8+148]
	249 Move W12, [X8+152]
	250 Move W28, [X8+156]
	251 Move W29, [X8+160]
	252 Move W19, [X8+164]
	253 Move W21, [X8+168]
	254 Move W22, [X8+172]
	255 Move W25, [X8+176]
	256 Move W9, [X0+224]
	257 Move W26, [X8+180]
	258 Move W20, [X8+184]
	259 Compare W9, 0
	260 JumpIfNotEqual {264}
	261 Move [X31+160], W12
	262 Call 0x1C17DFC
	263 Move W12, [X31+160]
	264 Move V0, [X31+784]
	265 Move V2, [X31+800]
	266 Move W9, [X31+164]
	267 Move V3, [X31+816]
	268 Move V4, [X31+832]
	269 Move X8, [X31+880]
	270 Move [X31+240], V0
	271 Move [X31+248], V2
	272 Move V2, [X31+848]
	273 Move V5, [X31+864]
	274 NotImplemented "Instruction SCVTF not yet implemented."
	275 Move W9, [X31+180]
	276 Move X0, [X31+168]
	277 Move X1, [X31+184]
	278 Move X5, [X31+968]
	279 NotImplemented "Instruction SCVTF not yet implemented."
	280 Move [X31+272], V3
	281 Move [X31+280], V4
	282 Move [X31+192], V2
	283 Move [X31+200], V5
	284 Move [X31+224], X8
	285 Add X8, X31, 192
	286 And W2, W9, 1
	287 Add X4, X31, 240
	288 Move W3, 1
	289 Move V2, V9
	290 Move V3, V8
	291 Move V4, V10
	292 Move V5, V11
	293 Move V6, V12
	294 Move W6, W31
	295 Move W7, W31
	296 Move [X31], X31
	297 Move [X31+8], X31
	298 Move [X31+136], X31
	299 Move [X31+128], W31
	300 Move [X31+120], W20
	301 Move [X31+112], W26
	302 Move [X31+104], W25
	303 Move [X31+96], W22
	304 Move [X31+88], W21
	305 Move [X31+80], W19
	306 Move [X31+72], W29
	307 Move [X31+64], W31
	308 Move [X31+56], W31
	309 Move [X31+48], W28
	310 Move [X31+40], W12
	311 Move [X31+32], W27
	312 Move [X31+16], X8
	313 Move [X31+24], X24
	314 Call LensFlareCommonSRP.DoLensFlareDataDrivenCommon, X0, X1, V0, V1, X2, V2, V3, X3, X4, X5, X6, X7, X8, X9, X10, X11, X12, X13, X14, X15, X16, X17, X18, X19, X20, X21, X22, X23, X24, X25
	315 Add X31, X31, 960
	316 Move X20, [X31+128]
	317 Move X19, [X31+136]
	318 Move X22, [X31+112]
	319 Move X21, [X31+120]
	320 Move X24, [X31+96]
	321 Move X23, [X31+104]
	322 Move X26, [X31+80]
	323 Move X25, [X31+88]
	324 Move X28, [X31+64]
	325 Move X27, [X31+72]
	326 Move X29, [X31+48]
	327 Move X30, [X31+56]
	328 Move D9, [X31+32]
	329 Move D8, [X31+40]
	330 Move D11, [X31+16]
	331 Move D10, [X31+24]
	332 Move V12, [X31+144]
	333 Return 
	334 Call 0x1C17F20

Method: System.Void UpdateMotionBlurMatrices(ref UnityEngine.Material material, UnityEngine.Camera camera, UnityEngine.Experimental.Rendering.XRPass xr)

Disassembly:
	0x03A66A40 LDR X0, [X8]
	0x03A66A44 BL 0x3C124EC
	0x03A66A48 LDR X8, [X19]
	0x03A66A4C MOV X1, X31
	0x03A66A50 LDR X8, [X8 + 0xB8]
	0x03A66A54 STR W0, [X8 + 0xB4]
	0x03A66A58 ADRP X8, 0x6F0000
	0x03A66A5C LDR X8, [X8 + 0x7C0]
	0x03A66A60 LDR X0, [X8]
	0x03A66A64 BL 0x3C124EC
	0x03A66A68 LDR X8, [X19]
	0x03A66A6C MOV X1, X31
	0x03A66A70 LDR X8, [X8 + 0xB8]
	0x03A66A74 STR W0, [X8 + 0xB8]
	0x03A66A78 ADRP X8, 0x6F0000
	0x03A66A7C LDR X8, [X8 + 0x870]
	0x03A66A80 LDR X0, [X8]
	0x03A66A84 BL 0x3C124EC
	0x03A66A88 LDR X8, [X19]
	0x03A66A8C MOV X1, X31
	0x03A66A90 LDR X8, [X8 + 0xB8]
	0x03A66A94 STR W0, [X8 + 0xBC]
	0x03A66A98 ADRP X8, 0x6F0000
	0x03A66A9C LDR X8, [X8 + 0x878]
	0x03A66AA0 LDR X0, [X8]
	0x03A66AA4 BL 0x3C124EC
	0x03A66AA8 LDR X8, [X19]
	0x03A66AAC LDP X20, X19, [X31 + 0x50]
	0x03A66AB0 LDP X22, X21, [X31 + 0x40]
	0x03A66AB4 LDP X24, X23, [X31 + 0x30]
	0x03A66AB8 LDR X8, [X8 + 0xB8]
	0x03A66ABC LDP X26, X25, [X31 + 0x20]
	0x03A66AC0 LDP X28, X27, [X31 + 0x10]
	0x03A66AC4 STR W0, [X8 + 0xC0]
	0x03A66AC8 LDP X29, X30, [X31], #0x60
	0x03A66ACC RET
	0x03A66AD0 STR X30, [X31 - 0x20]!
	0x03A66AD4 STP X20, X19, [X31 + 0x10]
	0x03A66AD8 ADRP X19, 0x97C000
	0x03A66ADC ADRP X20, 0x6F0000
	0x03A66AE0 LDRB W8, [X19 + 0x259]
	0x03A66AE4 LDR X20, [X20 + 0x6C0]
	0x03A66AE8 TBNZ X8, 0x0, 0x3A66B00
	0x03A66AEC ADRP X0, 0x6F0000
	0x03A66AF0 LDR X0, [X0 + 0x6C0]
	0x03A66AF4 BL 0x1C16CF4
	0x03A66AF8 MOVZ W8, 0x1
	0x03A66AFC STRB W8, [X19 + 0x259]
	0x03A66B00 LDR X0, [X20]
	0x03A66B04 BL 0x1C16F10
	0x03A66B08 MOV X1, X31
	0x03A66B0C MOV X19, X0
	0x03A66B10 BL 0x33BDD8C
	0x03A66B14 LDR X8, [X20]
	0x03A66B18 LDR X8, [X8 + 0xB8]
	0x03A66B1C STR X19, [X8]
	0x03A66B20 LDP X20, X19, [X31 + 0x10]
	0x03A66B24 LDR X30, [X31], #0x20
	0x03A66B28 RET
	0x03A66B2C MOV X1, X31
	0x03A66B30 B 0x33BDD8C
	0x03A66B34 STR D10, [X31 - 0x40]!
	0x03A66B38 STP D9, D8, [X31 + 0x8]
	0x03A66B3C STR X30, [X31 + 0x18]
	0x03A66B40 STP X22, X21, [X31 + 0x20]
	0x03A66B44 STP X20, X19, [X31 + 0x30]
	0x03A66B48 ADRP X22, 0x97C000
	0x03A66B4C ADRP X21, 0x6EE000
	0x03A66B50 LDRB W8, [X22 + 0x25A]
	0x03A66B54 LDR X21, [X21 + 0x958]
	0x03A66B58 MOV V8.16B, V2.16B
	0x03A66B5C MOV V9.16B, V1.16B
	0x03A66B60 MOV V10.16B, V0.16B
	0x03A66B64 MOV X19, X2
	0x03A66B68 MOV X20, X1
	0x03A66B6C TBNZ X8, 0x0, 0x3A66B84
	0x03A66B70 ADRP X0, 0x6EE000
	0x03A66B74 LDR X0, [X0 + 0x958]
	0x03A66B78 BL 0x1C16CF4
	0x03A66B7C MOVZ W8, 0x1
	0x03A66B80 STRB W8, [X22 + 0x25A]
	0x03A66B84 LDR X0, [X21]
	0x03A66B88 LDR W8, [X0 + 0xE0]
	0x03A66B8C CBNZ W8, 0x3A66B94
	0x03A66B90 BL 0x1C16DFC
	0x03A66B94 MOV X0, X20
	0x03A66B98 MOV X1, X19
	0x03A66B9C MOV V1.16B, V9.16B
	0x03A66BA0 MOV V2.16B, V8.16B
	0x03A66BA4 LDP X20, X19, [X31 + 0x30]
	0x03A66BA8 LDP X22, X21, [X31 + 0x20]
	0x03A66BAC LDR X30, [X31 + 0x18]
	0x03A66BB0 LDP D9, D8, [X31 + 0x8]
	0x03A66BB4 MOV V0.16B, V10.16B
	0x03A66BB8 MOV X2, X31
	0x03A66BBC LDR V10, [X31], #0x40
	0x03A66BC0 B 0x3A65828
	0x03A66BC4 STR X30, [X31 - 0x40]!
	0x03A66BC8 STP X24, X23, [X31 + 0x10]
	0x03A66BCC STP X22, X21, [X31 + 0x20]
	0x03A66BD0 STP X20, X19, [X31 + 0x30]
	0x03A66BD4 ADRP X21, 0x97C000
	0x03A66BD8 ADRP X19, 0x6F0000
	0x03A66BDC ADRP X20, 0x68D000
	0x03A66BE0 LDRB W8, [X21 + 0x25B]
	0x03A66BE4 LDR X19, [X19 + 0x8B0]
	0x03A66BE8 LDR X20, [X20 + 0x6C0]
	0x03A66BEC TBNZ X8, 0x0, 0x3A66C58
	0x03A66BF0 ADRP X0, 0x68D000
	0x03A66BF4 LDR X0, [X0 + 0xDF8]
	0x03A66BF8 BL 0x1C16CF4
	0x03A66BFC ADRP X0, 0x68D000
	0x03A66C00 LDR X0, [X0 + 0xE00]
	0x03A66C04 BL 0x1C16CF4
	0x03A66C08 ADRP X0, 0x68D000
	0x03A66C0C LDR X0, [X0 + 0xE18]
	0x03A66C10 BL 0x1C16CF4
	0x03A66C14 ADRP X0, 0x68E000
	0x03A66C18 LDR X0, [X0 + 0xE58]
	0x03A66C1C BL 0x1C16CF4
	0x03A66C20 ADRP X0, 0x68D000
	0x03A66C24 LDR X0, [X0 + 0x758]
	0x03A66C28 BL 0x1C16CF4
	0x03A66C2C ADRP X0, 0x6F0000
	0x03A66C30 LDR X0, [X0 + 0x8B0]
	0x03A66C34 BL 0x1C16CF4
	0x03A66C38 ADRP X0, 0x6EF000
	0x03A66C3C LDR X0, [X0 + 0xC70]
	0x03A66C40 BL 0x1C16CF4
	0x03A66C44 ADRP X0, 0x68D000

ISIL:
	001 Subtract X31, X31, 320
	002 Move [X31+256], X29
	003 Move [X31+272], X30
	004 Move [X31+280], X23
	005 Move [X31+288], X22
	006 Move [X31+296], X21
	007 Move [X31+304], X20
	008 Move [X31+312], X19
	009 Move X22, 0x97D000
	010 Move W8, [X22+583]
	011 Move X20, X2
	012 Move X21, X1
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0x6EF000
	019 Move X0, [X0+2328]
	020 Call 0x1C17CF4
	021 Move X0, 0x6EF000
	022 Move X0, [X0+2392]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X22+583], W8
	026 Move [X31+264], X31
	027 Compare X21, 0
	028 JumpIfEqual {175}
	029 Move X8, 0x6EF000
	030 Move X8, [X8+2328]
	031 Add X1, X31, 264
	032 Move X0, X21
	033 Move X2, [X8]
	034 Call 0x21A5990, X0, X1
	035 Move TEMP, X0
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfNotEqual {166}
	039 Move X8, [X31+264]
	040 Compare X8, 0
	041 JumpIfEqual {175}
	042 Move X21, [X8+144]
	043 Compare X21, 0
	044 JumpIfEqual {166}
	045 Compare X20, 0
	046 JumpIfEqual {175}
	047 Move X0, X20
	048 Move X1, X31
	049 Call XRPass.get_enabled, X0
	050 Move TEMP, X0
	051 And TEMP, TEMP, 1
	052 Compare TEMP, 1
	053 JumpIfNotEqual {87}
	054 Move X0, X20
	055 Move X1, X31
	056 Call XRPass.get_singlePassEnabled, X0
	057 Move TEMP, X0
	058 And TEMP, TEMP, 1
	059 Compare TEMP, 1
	060 JumpIfNotEqual {87}
	061 Move X22, 0x6EF000
	062 Move X22, [X22+2392]
	063 Move X20, [X19]
	064 Move X0, [X22]
	065 Move W8, [X0+224]
	066 Compare W8, 0
	067 JumpIfNotEqual {69}
	068 Call 0x1C17DFC
	069 Compare X20, 0
	070 JumpIfEqual {175}
	071 Move X8, [X22]
	072 Move X2, [X21+24]
	073 Move X0, X20
	074 Move X3, X31
	075 Move X8, [X8+184]
	076 Move W1, [X8+28]
	077 Call Material.SetMatrixArray, X0, X1, X2
	078 Move X0, [X19]
	079 Compare X0, 0
	080 JumpIfEqual {175}
	081 Move X8, [X22]
	082 Move X2, [X21+16]
	083 Move X3, X31
	084 Move X8, [X8+184]
	085 Move W1, [X8+24]
	086 Call Material.SetMatrixArray, X0, X1, X2
	087 Move X0, X20
	088 Move X1, X31
	089 Call XRPass.get_enabled, X0
	090 Move X22, X31
	091 Move TEMP, X0
	092 And TEMP, TEMP, 1
	093 Compare TEMP, 1
	094 JumpIfNotEqual {96}
	095 NotImplemented "Instruction LDRSW not yet implemented."
	096 Move X23, 0x6EF000
	097 Move X23, [X23+2392]
	098 Move X20, [X19]
	099 Move X0, [X23]
	100 Move W8, [X0+224]
	101 Compare W8, 0
	102 JumpIfNotEqual {105}
	103 Call 0x1C17DFC
	104 Move X0, [X23]
	105 Move X8, [X21+24]
	106 Compare X8, 0
	107 JumpIfEqual {175}
	108 Move W9, [X8+24]
	109 NotImplemented "Instruction CMP not yet implemented."
	110 Move X9, [X0+184]
	111 Add X8, X8, X22
	112 Move V0, [X8+64]
	113 Move V1, [X8+80]
	114 Move V2, [X8+32]
	115 Move V3, [X8+48]
	116 Move W1, [X9+20]
	117 Move [X31+224], V0
	118 Move [X31+232], V1
	119 Move [X31+192], V2
	120 Move [X31+200], V3
	121 Compare X20, 0
	122 JumpIfEqual {175}
	123 Move V0, [X31+192]
	124 Move V1, [X31+208]
	125 Move V2, [X31+224]
	126 Move V3, [X31+240]
	127 Add X2, X31, 128
	128 Move X0, X20
	129 Move X3, X31
	130 Move [X31+128], V0
	131 Move [X31+136], V1
	132 Move [X31+160], V2
	133 Move [X31+168], V3
	134 Call Material.SetMatrix, X0, X1, X2
	135 Move X8, [X21+16]
	136 Compare X8, 0
	137 JumpIfEqual {175}
	138 Move W9, [X8+24]
	139 NotImplemented "Instruction CMP not yet implemented."
	140 Move X9, [X23]
	141 Add X8, X8, X22
	142 Move X0, [X19]
	143 Move V0, [X8+64]
	144 Move V1, [X8+80]
	145 Move X9, [X9+184]
	146 Move V2, [X8+32]
	147 Move V3, [X8+48]
	148 Move W1, [X9+16]
	149 Move [X31+96], V0
	150 Move [X31+104], V1
	151 Move [X31+64], V2
	152 Move [X31+72], V3
	153 Compare X0, 0
	154 JumpIfEqual {175}
	155 Move V0, [X31+64]
	156 Move V1, [X31+80]
	157 Move V2, [X31+96]
	158 Move V3, [X31+112]
	159 Add X2, X31, 0
	160 Move X3, X31
	161 Move [X31], V0
	162 Move [X31+8], V1
	163 Move [X31+32], V2
	164 Move [X31+40], V3
	165 Call Material.SetMatrix, X0, X1, X2
	166 Move X20, [X31+304]
	167 Move X19, [X31+312]
	168 Move X22, [X31+288]
	169 Move X21, [X31+296]
	170 Move X30, [X31+272]
	171 Move X23, [X31+280]
	172 Move X29, [X31+256]
	173 Add X31, X31, 320
	174 Return 
	175 Call 0x1C17F20
	176 Call 0x1C17F28

Method: System.Void DoMotionBlur(UnityEngine.Rendering.CommandBuffer cmd, UnityEngine.Rendering.RTHandle source, UnityEngine.Rendering.RTHandle destination, ref UnityEngine.Rendering.Universal.CameraData cameraData)

Disassembly:
	0x03A6362C CBZ X24, 0x3A6385C
	0x03A63630 ADD X8, X31, 0x270
	0x03A63634 MOV X0, X24
	0x03A63638 MOV X1, X31
	0x03A6363C BL 0x3C04358
	0x03A63640 LDP V0, V1, [X31 + 0x270]
	0x03A63644 LDP V2, V3, [X31 + 0x290]
	0x03A63648 ADD X8, X31, 0x270
	0x03A6364C ADD X0, X31, 0x1F0
	0x03A63650 MOVZ W1, 0x1
	0x03A63654 MOV X2, X31
	0x03A63658 STP V0, V1, [X31 + 0x1F0]
	0x03A6365C STP V2, V3, [X31 + 0x210]
	0x03A63660 BL 0x3C1015C
	0x03A63664 LDP V0, V1, [X31 + 0x270]
	0x03A63668 LDP V2, V3, [X31 + 0x290]
	0x03A6366C ADD X8, X31, 0x270
	0x03A63670 MOV X0, X24
	0x03A63674 MOV X1, X31
	0x03A63678 STP V0, V1, [X31 + 0x230]
	0x03A6367C STP V2, V3, [X31 + 0x250]
	0x03A63680 BL 0x3C04220
	0x03A63684 LDP V0, V1, [X31 + 0x270]
	0x03A63688 LDP V2, V3, [X31 + 0x290]
	0x03A6368C ADD X8, X31, 0x1B0
	0x03A63690 ADD X0, X31, 0x170
	0x03A63694 STP V0, V1, [X31 + 0x130]
	0x03A63698 LDP V0, V1, [X31 + 0x230]
	0x03A6369C STP V2, V3, [X31 + 0x150]
	0x03A636A0 LDP V2, V3, [X31 + 0x250]
	0x03A636A4 ADD X1, X31, 0x130
	0x03A636A8 MOV X2, X31
	0x03A636AC STP V0, V1, [X31 + 0x170]
	0x03A636B0 STP V2, V3, [X31 + 0x190]
	0x03A636B4 BL 0x3C27F74
	0x03A636B8 LDP V0, V1, [X31 + 0x1B0]
	0x03A636BC LDP V2, V3, [X31 + 0x1D0]
	0x03A636C0 STP V0, V1, [X31 + 0x270]
	0x03A636C4 STP V2, V3, [X31 + 0x290]
	0x03A636C8 LDR X8, [X22 + 0x128]
	0x03A636CC CBZ X8, 0x3A6385C
	0x03A636D0 LDR X9, [X8 + 0x48]
	0x03A636D4 LDUR V0, [X8 + 0x38]
	0x03A636D8 LDUR V1, [X8 + 0x28]
	0x03A636DC LDR X1, [X8 + 0x58]
	0x03A636E0 STR X9, [X31 + 0x120]
	0x03A636E4 STP V1, V0, [X31 + 0x100]
	0x03A636E8 CBZ X21, 0x3A6385C
	0x03A636EC LDP V0, V1, [X31 + 0x100]
	0x03A636F0 LDR X8, [X31 + 0x120]
	0x03A636F4 ADD X2, X31, 0xD0
	0x03A636F8 MOV X0, X21
	0x03A636FC MOV X3, X31
	0x03A63700 STP V0, V1, [X31 + 0xD0]
	0x03A63704 STR X8, [X31 + 0xF0]
	0x03A63708 BL 0x3C4FC28
	0x03A6370C LDR X8, [X22 + 0x198]
	0x03A63710 CBZ X8, 0x3A6385C
	0x03A63714 LDR X19, [X8 + 0x70]
	0x03A63718 LDP W20, W25, [X22 + 0xE0]
	0x03A6371C MOV X0, X24
	0x03A63720 MOV X1, X31
	0x03A63724 BL 0x3C32E90
	0x03A63728 CBZ X0, 0x3A6385C
	0x03A6372C ADRP X26, 0x6F3000
	0x03A63730 ADRP X22, 0x6EF000
	0x03A63734 LDR X26, [X26 + 0x550]
	0x03A63738 LDR X22, [X22 + 0xD98]
	0x03A6373C MOV X1, X31
	0x03A63740 BL 0x3C3F58C
	0x03A63744 MOV V10.16B, V0.16B
	0x03A63748 MOV V11.16B, V1.16B
	0x03A6374C LDP V0, V1, [X31 + 0x270]
	0x03A63750 LDP V3, V4, [X31 + 0x290]
	0x03A63754 LDR X0, [X26]
	0x03A63758 MOV V12.16B, V2.16B
	0x03A6375C STP V0, V1, [X31 + 0x1B0]
	0x03A63760 STP V3, V4, [X31 + 0x1D0]
	0x03A63764 LDR W8, [X0 + 0xE0]
	0x03A63768 STR X21, [X31 + 0x2B8]
	0x03A6376C STP X24, X19, [X31 + 0x80]
	0x03A63770 STR W23, [X31 + 0x7C]
	0x03A63774 CBNZ W8, 0x3A63780
	0x03A63778 BL 0x1C16DFC
	0x03A6377C LDR X0, [X26]
	0x03A63780 LDR X8, [X0 + 0xB8]
	0x03A63784 LDR X0, [X22]
	0x03A63788 LDP W24, W26, [X8 + 0x98]
	0x03A6378C LDP W27, W28, [X8 + 0xA0]
	0x03A63790 LDP W29, W21, [X8 + 0xA8]
	0x03A63794 LDP W23, W19, [X8 + 0xB0]
	0x03A63798 LDR W9, [X0 + 0xE0]
	0x03A6379C LDR W22, [X8 + 0xB8]
	0x03A637A0 CBNZ W9, 0x3A637A8
	0x03A637A4 BL 0x1C16DFC
	0x03A637A8 LDP V2, V3, [X31 + 0x1B0]
	0x03A637AC LDP V4, V5, [X31 + 0x1D0]
	0x03A637B0 LDR W9, [X31 + 0x7C]
	0x03A637B4 LDP X1, X0, [X31 + 0x80]
	0x03A637B8 LDR X5, [X31 + 0x2B8]
	0x03A637BC SCVTF S0, W20
	0x03A637C0 SCVTF S1, W25
	0x03A637C4 STP V2, V3, [X31 + 0x90]
	0x03A637C8 STP V4, V5, [X31 + 0xB0]
	0x03A637CC MOVN W8, 0x0
	0x03A637D0 AND W2, W9, 0x1
	0x03A637D4 ADD X4, X31, 0x90
	0x03A637D8 MOVZ W3, 0x1
	0x03A637DC MOV V2.16B, V9.16B
	0x03A637E0 MOV V3.16B, V8.16B
	0x03A637E4 MOV V4.16B, V10.16B
	0x03A637E8 MOV V5.16B, V11.16B
	0x03A637EC MOV V6.16B, V12.16B
	0x03A637F0 MOV W6, W31

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+64], X30
	003 Move [X31+72], X25
	004 Move [X31+80], X24
	005 Move [X31+88], X23
	006 Move [X31+96], X22
	007 Move [X31+104], X21
	008 Move [X31+112], X20
	009 Move [X31+120], X19
	010 Move X22, 0x980000
	011 Move W8, [X22+584]
	012 Move X24, X4
	013 Move X19, X3
	014 Move X20, X2
	015 Move X21, X1
	016 Move X23, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {35}
	021 Move X0, 0x6F0000
	022 Move X0, [X0+3624]
	023 Call 0x1C17CF4
	024 Move X0, 0x6F2000
	025 Move X0, [X0+2392]
	026 Call 0x1C17CF4
	027 Move X0, 0x6F4000
	028 Move X0, [X0+1632]
	029 Call 0x1C17CF4
	030 Move X0, 0x6F4000
	031 Move X0, [X0+1640]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X22+584], W8
	035 Move X8, [X23+408]
	036 Compare X8, 0
	037 JumpIfEqual {137}
	038 Move X22, [X8+48]
	039 Move X8, 0x6F2000
	040 Move X8, [X8+2392]
	041 Move [X31+56], X22
	042 Move X25, [X24+192]
	043 Move X0, [X8]
	044 Move X24, [X24+376]
	045 Move W8, [X0+224]
	046 Compare W8, 0
	047 JumpIfNotEqual {49}
	048 Call 0x1C17DFC
	049 Add X0, X31, 56
	050 Move X1, X25
	051 Move X2, X24
	052 Call PostProcessPass.UpdateMotionBlurMatrices, X0, X1, X2
	053 Move X8, [X23+432]
	054 Compare X8, 0
	055 JumpIfEqual {137}
	056 Move X0, [X8+72]
	057 Compare X0, 0
	058 JumpIfEqual {137}
	059 Move X8, [X0]
	060 Move X9, [X8+536]
	061 Move X1, [X8+544]
	062 NotImplemented "Instruction BLR not yet implemented."
	063 Compare X22, 0
	064 JumpIfEqual {137}
	065 Move X8, 0x6F4000
	066 Move X8, [X8+1632]
	067 Move X0, X22
	068 Move X2, X31
	069 Move X1, [X8]
	070 Call Material.SetFloat, X0, X1, V0
	071 Move X8, [X23+432]
	072 Compare X8, 0
	073 JumpIfEqual {137}
	074 Move X0, [X8+80]
	075 Compare X0, 0
	076 JumpIfEqual {137}
	077 Move X8, [X0]
	078 Move X24, 0x6F4000
	079 Move X9, [X8+536]
	080 Move X1, [X8+544]
	081 Move X24, [X24+1640]
	082 NotImplemented "Instruction BLR not yet implemented."
	083 Move X1, [X24]
	084 Move X0, X22
	085 Move X2, X31
	086 Call Material.SetFloat, X0, X1, V0
	087 Move W8, [X23+272]
	088 Move V1, [X23+240]
	089 Move V0, [X23+256]
	090 Move V2, [X23+14]
	091 Add X1, X31, 0
	092 Move X0, X21
	093 Move X2, X31
	094 Move [X31+48], W8
	095 Move [X31+16], V1
	096 Move [X31+24], V0
	097 Move [X31], V2
	098 Call PostProcessUtils.SetSourceSize, X0, X1
	099 Move X8, [X23+432]
	100 Compare X8, 0
	101 JumpIfEqual {137}
	102 Move X0, [X8+64]
	103 Compare X0, 0
	104 JumpIfEqual {137}
	105 Move X8, [X0]
	106 Move X23, 0x6F0000
	107 Move X9, [X8+536]
	108 Move X1, [X8+544]
	109 Move X23, [X23+3624]
	110 NotImplemented "Instruction BLR not yet implemented."
	111 Move X8, [X23]
	112 Move W23, W0
	113 Move W9, [X8+224]
	114 Compare W9, 0
	115 JumpIfNotEqual {118}
	116 Move X0, X8
	117 Call 0x1C17DFC
	118 Move W3, 2
	119 Move X0, X21
	120 Move X1, X20
	121 Move X2, X19
	122 Move W4, W31
	123 Move X5, X22
	124 Move W6, W23
	125 Move X7, X31
	126 Call Blitter.BlitCameraTexture, X0, X1, X2, X3, X4, X5, X6
	127 Move X20, [X31+112]
	128 Move X19, [X31+120]
	129 Move X22, [X31+96]
	130 Move X21, [X31+104]
	131 Move X24, [X31+80]
	132 Move X23, [X31+88]
	133 Move X30, [X31+64]
	134 Move X25, [X31+72]
	135 Add X31, X31, 128
	136 Return 
	137 Call 0x1C17F20

Method: System.Void DoPaniniProjection(UnityEngine.Camera camera, UnityEngine.Rendering.CommandBuffer cmd, UnityEngine.Rendering.RTHandle source, UnityEngine.Rendering.RTHandle destination)

Disassembly:
	0x03A637F4 MOV W7, W31
	0x03A637F8 STP X31, X31, [X31]
	0x03A637FC STR X31, [X31 + 0x68]
	0x03A63800 STR W22, [X31 + 0x60]
	0x03A63804 STR W19, [X31 + 0x58]
	0x03A63808 STR W23, [X31 + 0x50]
	0x03A6380C STR W21, [X31 + 0x48]
	0x03A63810 STR W29, [X31 + 0x40]
	0x03A63814 STR W28, [X31 + 0x30]
	0x03A63818 STR W27, [X31 + 0x28]
	0x03A6381C STR W26, [X31 + 0x20]
	0x03A63820 STR W8, [X31 + 0x38]
	0x03A63824 STR W8, [X31 + 0x18]
	0x03A63828 STR W24, [X31 + 0x10]
	0x03A6382C BL 0x39CCEA0
	0x03A63830 ADD X31, X31, 0x2B0
	0x03A63834 LDP X20, X19, [X31 + 0x80]
	0x03A63838 LDP X22, X21, [X31 + 0x70]
	0x03A6383C LDP X24, X23, [X31 + 0x60]
	0x03A63840 LDP X26, X25, [X31 + 0x50]
	0x03A63844 LDP X28, X27, [X31 + 0x40]
	0x03A63848 LDP X29, X30, [X31 + 0x30]
	0x03A6384C LDP D9, D8, [X31 + 0x20]
	0x03A63850 LDP D11, D10, [X31 + 0x10]
	0x03A63854 LDR V12, [X31], #0x90
	0x03A63858 RET
	0x03A6385C BL 0x1C16F20
	0x03A63860 STR D12, [X31 - 0x90]!
	0x03A63864 STP D11, D10, [X31 + 0x10]
	0x03A63868 STP D9, D8, [X31 + 0x20]
	0x03A6386C STP X29, X30, [X31 + 0x30]
	0x03A63870 STP X28, X27, [X31 + 0x40]
	0x03A63874 STP X26, X25, [X31 + 0x50]
	0x03A63878 STP X24, X23, [X31 + 0x60]
	0x03A6387C STP X22, X21, [X31 + 0x70]
	0x03A63880 STP X20, X19, [X31 + 0x80]
	0x03A63884 SUB X31, X31, 0x3C0
	0x03A63888 ADRP X19, 0x97F000
	0x03A6388C LDRB W8, [X19 + 0x246]
	0x03A63890 MOV V8.16B, V1.16B
	0x03A63894 MOV V9.16B, V0.16B
	0x03A63898 MOV W22, W4
	0x03A6389C MOV X23, X3
	0x03A638A0 MOV X20, X2
	0x03A638A4 MOV X21, X1
	0x03A638A8 MOV X24, X0
	0x03A638AC TBNZ X8, 0x0, 0x3A638F4
	0x03A638B0 ADRP X0, 0x6F3000
	0x03A638B4 LDR X0, [X0 + 0x6B0]
	0x03A638B8 BL 0x1C16CF4
	0x03A638BC ADRP X0, 0x6EF000
	0x03A638C0 LDR X0, [X0 + 0xD98]
	0x03A638C4 BL 0x1C16CF4
	0x03A638C8 ADRP X0, 0x6F3000
	0x03A638CC LDR X0, [X0 + 0x550]
	0x03A638D0 BL 0x1C16CF4
	0x03A638D4 ADRP X0, 0x6F3000
	0x03A638D8 LDR X0, [X0 + 0x6B8]
	0x03A638DC BL 0x1C16CF4
	0x03A638E0 ADRP X0, 0x6F3000
	0x03A638E4 LDR X0, [X0 + 0x6C0]
	0x03A638E8 BL 0x1C16CF4
	0x03A638EC MOVZ W8, 0x1
	0x03A638F0 STRB W8, [X19 + 0x246]
	0x03A638F4 MOVI V0.2D, 0x0
	0x03A638F8 STR X31, [X31 + 0x370]
	0x03A638FC STR X31, [X31 + 0x300]
	0x03A63900 STP V0, V0, [X31 + 0x350]
	0x03A63904 STP V0, V0, [X31 + 0x330]
	0x03A63908 STP V0, V0, [X31 + 0x310]
	0x03A6390C STP V0, V0, [X31 + 0x2E0]
	0x03A63910 STP V0, V0, [X31 + 0x2C0]
	0x03A63914 STP V0, V0, [X31 + 0x2A0]
	0x03A63918 CBZ X21, 0x3A63C2C
	0x03A6391C ADD X8, X31, 0x380
	0x03A63920 MOV X0, X21
	0x03A63924 MOV X1, X31
	0x03A63928 BL 0x3C04358
	0x03A6392C LDP V0, V1, [X31 + 0x380]
	0x03A63930 LDP V2, V3, [X31 + 0x3A0]
	0x03A63934 ADD X8, X31, 0x380
	0x03A63938 ADD X0, X31, 0x220
	0x03A6393C MOVZ W1, 0x1
	0x03A63940 MOV X2, X31
	0x03A63944 STP V0, V1, [X31 + 0x220]
	0x03A63948 STP V2, V3, [X31 + 0x240]
	0x03A6394C BL 0x3C1015C
	0x03A63950 LDP V0, V1, [X31 + 0x380]
	0x03A63954 LDP V2, V3, [X31 + 0x3A0]
	0x03A63958 ADD X8, X31, 0x380
	0x03A6395C MOV X0, X21
	0x03A63960 MOV X1, X31
	0x03A63964 STP V0, V1, [X31 + 0x260]
	0x03A63968 STP V2, V3, [X31 + 0x280]
	0x03A6396C BL 0x3C04220
	0x03A63970 LDP V0, V1, [X31 + 0x380]
	0x03A63974 LDP V2, V3, [X31 + 0x3A0]
	0x03A63978 ADD X8, X31, 0x1E0
	0x03A6397C ADD X0, X31, 0x1A0
	0x03A63980 STP V0, V1, [X31 + 0x160]
	0x03A63984 LDP V0, V1, [X31 + 0x260]
	0x03A63988 STP V2, V3, [X31 + 0x180]
	0x03A6398C LDP V2, V3, [X31 + 0x280]
	0x03A63990 ADD X1, X31, 0x160
	0x03A63994 MOV X2, X31
	0x03A63998 STP V0, V1, [X31 + 0x1A0]
	0x03A6399C STP V2, V3, [X31 + 0x1C0]
	0x03A639A0 BL 0x3C27F74
	0x03A639A4 LDP V0, V1, [X31 + 0x1E0]
	0x03A639A8 LDP V2, V3, [X31 + 0x200]
	0x03A639AC STP V0, V1, [X31 + 0x380]
	0x03A639B0 STP V2, V3, [X31 + 0x3A0]
	0x03A639B4 LDR X8, [X24 + 0x198]
	0x03A639B8 CBZ X8, 0x3A63C2C
	0x03A639BC LDR X19, [X8 + 0x70]
	0x03A639C0 LDP W25, W26, [X24 + 0xE0]
	0x03A639C4 MOV X0, X21
	0x03A639C8 MOV X1, X31
	0x03A639CC BL 0x3C32E90
	0x03A639D0 CBZ X0, 0x3A63C2C
	0x03A639D4 ADRP X28, 0x6F3000
	0x03A639D8 LDR X28, [X28 + 0x6C0]
	0x03A639DC MOV X1, X31
	0x03A639E0 BL 0x3C3F58C
	0x03A639E4 MOV V10.16B, V0.16B
	0x03A639E8 MOV V11.16B, V1.16B
	0x03A639EC LDP V0, V1, [X31 + 0x380]
	0x03A639F0 LDP V3, V4, [X31 + 0x3A0]
	0x03A639F4 LDR X0, [X28]
	0x03A639F8 MOV V12.16B, V2.16B
	0x03A639FC STP V0, V1, [X31 + 0x1E0]
	0x03A63A00 STP V3, V4, [X31 + 0x200]
	0x03A63A04 LDR X8, [X23 + 0x20]
	0x03A63A08 LDP V1, V0, [X23]
	0x03A63A0C STR X8, [X31 + 0x150]
	0x03A63A10 STP V1, V0, [X31 + 0x130]
	0x03A63A14 LDR W8, [X0 + 0xE0]
	0x03A63A18 CBNZ W8, 0x3A63A24
	0x03A63A1C BL 0x1C16DFC
	0x03A63A20 LDR X0, [X28]
	0x03A63A24 LDR X8, [X0 + 0xB8]

ISIL:
	001 Move [X31-128], D14
	002 Move [X31+16], D13
	003 Move [X31+24], D12
	004 Move [X31+32], D11
	005 Move [X31+40], D10
	006 Move [X31+48], D9
	007 Move [X31+56], D8
	008 Move [X31+64], X30
	009 Move [X31+72], X25
	010 Move [X31+80], X24
	011 Move [X31+88], X23
	012 Move [X31+96], X22
	013 Move [X31+104], X21
	014 Move [X31+112], X20
	015 Move [X31+120], X19
	016 Move X24, 0x980000
	017 Move W8, [X24+585]
	018 Move X19, X4
	019 Move X20, X3
	020 Move X21, X2
	021 Move X23, X1
	022 Move X22, X0
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {41}
	027 Move X0, 0x6F0000
	028 Move X0, [X0+3624]
	029 Call 0x1C17CF4
	030 Move X0, 0x6F4000
	031 Move X0, [X0+1360]
	032 Call 0x1C17CF4
	033 Move X0, 0x6F4000
	034 Move X0, [X0+1648]
	035 Call 0x1C17CF4
	036 Move X0, 0x6F4000
	037 Move X0, [X0+1656]
	038 Call 0x1C17CF4
	039 Move W8, 1
	040 Move [X24+585], W8
	041 Move X8, [X22+440]
	042 Compare X8, 0
	043 JumpIfEqual {167}
	044 Move X0, [X8+56]
	045 Compare X0, 0
	046 JumpIfEqual {167}
	047 Move X8, [X0]
	048 Move X9, [X8+536]
	049 Move X1, [X8+544]
	050 NotImplemented "Instruction BLR not yet implemented."
	051 Move X0, X22
	052 Move X1, X23
	053 Move V8, V0
	054 Call PostProcessPass.CalcViewExtents, X0, X1
	055 Move S11, 1
	056 Move X0, X22
	057 Move X1, X23
	058 Move V9, V0
	059 Move V10, V1
	060 Add S12, S8, S11
	061 Call PostProcessPass.CalcViewExtents, X0, X1
	062 Multiply S2, S0, S0
	063 Add S2, S2, S11
	064 NotImplemented "Instruction FSQRT not yet implemented."
	065 NotImplemented "Instruction FDIV not yet implemented."
	066 Add S3, S8, S2
	067 Multiply S0, S0, S2
	068 Multiply S1, S1, S2
	069 NotImplemented "Instruction FDIV not yet implemented."
	070 Move X8, [X22+440]
	071 Multiply S0, S0, S2
	072 Multiply S1, S1, S2
	073 NotImplemented "Instruction FDIV not yet implemented."
	074 NotImplemented "Instruction FDIV not yet implemented."
	075 NotImplemented "Instruction FCMP not yet implemented."
	076 NotImplemented "Instruction FCSEL not yet implemented."
	077 Compare X8, 0
	078 JumpIfEqual {167}
	079 Move X0, [X8+64]
	080 Compare X0, 0
	081 JumpIfEqual {167}
	082 Move X8, [X0]
	083 NotImplemented "Instruction FMIN not yet implemented."
	084 Move X9, [X8+536]
	085 Move X1, [X8+544]
	086 NotImplemented "Instruction BLR not yet implemented."
	087 Move S11, 1
	088 Move X8, [X22+408]
	089 NotImplemented "Instruction FCMP not yet implemented."
	090 Move S1, W31
	091 Move S2, -1
	092 NotImplemented "Instruction FMIN not yet implemented."
	093 NotImplemented "Instruction FCSEL not yet implemented."
	094 Add S0, S14, S2
	095 NotImplemented "Instruction FCMP not yet implemented."
	096 NotImplemented "Instruction FCSEL not yet implemented."
	097 Compare X8, 0
	098 JumpIfEqual {167}
	099 Move X23, 0x6F4000
	100 Move X23, [X23+1360]
	101 Move X22, [X8+56]
	102 Move X0, [X23]
	103 Move W9, [X0+224]
	104 Compare W9, 0
	105 JumpIfNotEqual {107}
	106 Call 0x1C17DFC
	107 Compare X22, 0
	108 JumpIfEqual {167}
	109 Move X8, [X23]
	110 Move X23, 0x6F4000
	111 Move X24, 0x6F4000
	112 Move X25, 0x6F0000
	113 Move X8, [X8+184]
	114 Move X23, [X23+1648]
	115 Multiply S0, S13, S12
	116 Add S3, S0, S11
	117 Move W1, [X8+72]
	118 Move X24, [X24+1656]
	119 Move X25, [X25+3624]
	120 Move X0, X22
	121 Move V0, V9
	122 Move V1, V10
	123 Move V2, V8
	124 Move X2, X31
	125 Call Material.SetVector, X0, X1, X2
	126 NotImplemented "Instruction FABS not yet implemented."
	127 Move S1, 1
	128 Move W8, 1
	129 Subtract S0, S1, S0
	130 Move S1, W8
	131 NotImplemented "Instruction FCMP not yet implemented."
	132 NotImplemented "Instruction CSEL not yet implemented."
	133 Move X1, [X8]
	134 Move X0, X22
	135 Move X2, X31
	136 Call Material.EnableKeyword, X0, X1
	137 Move X0, [X25]
	138 Move W8, [X0+224]
	139 Compare W8, 0
	140 JumpIfNotEqual {142}
	141 Call 0x1C17DFC
	142 Move X0, X21
	143 Move X1, X20
	144 Move X2, X19
	145 Move X5, X22
	146 Move X20, [X31+112]
	147 Move X19, [X31+120]
	148 Move X22, [X31+96]
	149 Move X21, [X31+104]
	150 Move X24, [X31+80]
	151 Move X23, [X31+88]
	152 Move X30, [X31+64]
	153 Move X25, [X31+72]
	154 Move D9, [X31+48]
	155 Move D8, [X31+56]
	156 Move D11, [X31+32]
	157 Move D10, [X31+40]
	158 Move D13, [X31+16]
	159 Move D12, [X31+24]
	160 Move W3, 2
	161 Move W4, W31
	162 Move W6, W31
	163 Move X7, X31
	164 Move V14, [X31+128]
	165 Call Blitter.BlitCameraTexture, X0, X1, X2, X3, X4, X5, X6
	166 Return 
	167 Call 0x1C17F20

Method: UnityEngine.Vector2 CalcViewExtents(UnityEngine.Camera camera)

Disassembly:
	0x03A66C48 LDR X0, [X0 + 0x6C0]
	0x03A66C4C BL 0x1C16CF4
	0x03A66C50 MOVZ W8, 0x1
	0x03A66C54 STRB W8, [X21 + 0x25B]
	0x03A66C58 LDR X0, [X20]
	0x03A66C5C ADRP X20, 0x68D000
	0x03A66C60 LDR X19, [X19]
	0x03A66C64 LDR W8, [X0 + 0xE0]
	0x03A66C68 LDR X20, [X20 + 0xDF8]
	0x03A66C6C CBNZ W8, 0x3A66C74
	0x03A66C70 BL 0x1C16DFC
	0x03A66C74 MOV X0, X19
	0x03A66C78 MOV X1, X31
	0x03A66C7C BL 0x338C698
	0x03A66C80 LDR X8, [X20]
	0x03A66C84 MOV X19, X0
	0x03A66C88 LDR W9, [X8 + 0xE0]
	0x03A66C8C CBNZ W9, 0x3A66C98
	0x03A66C90 MOV X0, X8
	0x03A66C94 BL 0x1C16DFC
	0x03A66C98 MOV X0, X19
	0x03A66C9C MOV X1, X31
	0x03A66CA0 BL 0x33B02B8

ISIL:
	001 Move [X31-32], D9
	002 Move [X31-24], D8
	003 Move [X31+16], X30
	004 Move [X31+24], X19
	005 Compare X1, 0
	006 JumpIfEqual {29}
	007 Move X19, X0
	008 Move X0, X1
	009 Move X1, X31
	010 Call Camera.get_fieldOfView, X0
	011 Move X8, -49786880
	012 Move V1, [X8+260]
	013 Move S8, [X19+224]
	014 Move S9, [X19+228]
	015 Multiply S0, S0, S1
	016 Move S1, 0.5
	017 Multiply S0, S0, S1
	018 Call 0x3EB2E50
	019 Move X30, [X31+16]
	020 Move X19, [X31+24]
	021 Move V1, V0
	022 NotImplemented "Instruction SCVTF not yet implemented."
	023 NotImplemented "Instruction SCVTF not yet implemented."
	024 NotImplemented "Instruction FDIV not yet implemented."
	025 Multiply S0, S1, S0
	026 Move D9, [X31+32]
	027 Move D8, [X31+40]
	028 Return X0
	029 Call 0x1C17F20

Method: UnityEngine.Vector2 CalcCropExtents(UnityEngine.Camera camera, System.Single d)

Disassembly:
	0x03A66CA4 CBZ X0, 0x3A66EB0
	0x03A66CA8 ADRP X22, 0x68E000
	0x03A66CAC ADRP X20, 0x6EF000
	0x03A66CB0 ADRP X21, 0x68D000
	0x03A66CB4 LDR X22, [X22 + 0xE58]
	0x03A66CB8 LDR X20, [X20 + 0xC70]
	0x03A66CBC LDR X21, [X21 + 0xE00]
	0x03A66CC0 MOV X1, X31
	0x03A66CC4 MOV X19, X0
	0x03A66CC8 BL 0x3395B7C
	0x03A66CCC LDR X8, [X22]
	0x03A66CD0 MOV W1, W0
	0x03A66CD4 MOV X0, X8
	0x03A66CD8 BL 0x1C16D6C
	0x03A66CDC LDR X8, [X20]
	0x03A66CE0 MOV X1, X31
	0x03A66CE4 LDR X8, [X8 + 0xB8]
	0x03A66CE8 STR X0, [X8]
	0x03A66CEC MOV X0, X19
	0x03A66CF0 BL 0x33A2834
	0x03A66CF4 MOV X19, X0

ISIL:
	001 Move [X31-32], D10
	002 Move [X31+8], D9
	003 Move [X31+16], D8
	004 Move [X31+24], X30
	005 Move S9, 1
	006 Move V8, V0
	007 Add S10, S0, S9
	008 Call PostProcessPass.CalcViewExtents, X0, X1
	009 Multiply S2, S0, S0
	010 Add S2, S2, S9
	011 NotImplemented "Instruction FSQRT not yet implemented."
	012 NotImplemented "Instruction FDIV not yet implemented."
	013 Add S3, S2, S8
	014 Move X30, [X31+24]
	015 Move D9, [X31+8]
	016 Move D8, [X31+16]
	017 Multiply S0, S0, S2
	018 Multiply S1, S1, S2
	019 NotImplemented "Instruction FDIV not yet implemented."
	020 Multiply S0, S0, S2
	021 Multiply S1, S1, S2
	022 Move V10, [X31+32]
	023 Return X0

Method: System.Void SetupBloom(UnityEngine.Rendering.CommandBuffer cmd, UnityEngine.Rendering.RTHandle source, UnityEngine.Material uberMaterial)

Disassembly:
	0x03A63A28 ADRP X27, 0x6F3000
	0x03A63A2C LDR X24, [X8 + 0x8]
	0x03A63A30 LDR X27, [X27 + 0x550]
	0x03A63A34 STR X19, [X31 + 0xA8]
	0x03A63A38 CBZ X24, 0x3A63A60
	0x03A63A3C LDP V0, V1, [X31 + 0x130]
	0x03A63A40 LDR X8, [X31 + 0x150]
	0x03A63A44 LDP V2, V3, [X31 + 0x1E0]
	0x03A63A48 LDP V4, V5, [X31 + 0x200]
	0x03A63A4C STP V0, V1, [X31 + 0x350]
	0x03A63A50 STR X8, [X31 + 0x370]
	0x03A63A54 STP V2, V3, [X31 + 0x310]
	0x03A63A58 STP V4, V5, [X31 + 0x330]
	0x03A63A5C B 0x3A63AF4
	0x03A63A60 LDP V0, V1, [X31 + 0x130]
	0x03A63A64 LDR X8, [X31 + 0x150]
	0x03A63A68 LDP V2, V3, [X31 + 0x1E0]
	0x03A63A6C LDP V4, V5, [X31 + 0x200]
	0x03A63A70 STP V0, V1, [X31 + 0x2E0]
	0x03A63A74 STR X8, [X31 + 0x300]
	0x03A63A78 STP V2, V3, [X31 + 0x2A0]
	0x03A63A7C STP V4, V5, [X31 + 0x2C0]
	0x03A63A80 LDR W8, [X0 + 0xE0]
	0x03A63A84 CBNZ W8, 0x3A63A90
	0x03A63A88 BL 0x1C16DFC
	0x03A63A8C LDR X0, [X28]
	0x03A63A90 ADRP X9, 0x6F3000
	0x03A63A94 LDR X8, [X0 + 0xB8]
	0x03A63A98 LDR X9, [X9 + 0x6B0]
	0x03A63A9C LDR X24, [X8]
	0x03A63AA0 LDR X0, [X9]
	0x03A63AA4 BL 0x1C16F10
	0x03A63AA8 ADRP X8, 0x6F3000
	0x03A63AAC LDR X8, [X8 + 0x6B8]
	0x03A63AB0 MOV X1, X24
	0x03A63AB4 MOV X3, X31
	0x03A63AB8 MOV X19, X0
	0x03A63ABC LDR X2, [X8]
	0x03A63AC0 BL 0x2D40AB0
	0x03A63AC4 LDR X8, [X28]
	0x03A63AC8 MOV X24, X19
	0x03A63ACC LDR X8, [X8 + 0xB8]
	0x03A63AD0 STR X19, [X8 + 0x8]
	0x03A63AD4 LDP V0, V1, [X31 + 0x2E0]
	0x03A63AD8 LDR X8, [X31 + 0x300]
	0x03A63ADC LDP V2, V3, [X31 + 0x2A0]
	0x03A63AE0 STP V0, V1, [X31 + 0x350]
	0x03A63AE4 LDP V0, V1, [X31 + 0x2C0]
	0x03A63AE8 STP V2, V3, [X31 + 0x310]
	0x03A63AEC STR X8, [X31 + 0x370]
	0x03A63AF0 STP V0, V1, [X31 + 0x330]
	0x03A63AF4 LDR X0, [X27]
	0x03A63AF8 ADRP X19, 0x6EF000
	0x03A63AFC MOV W23, W26
	0x03A63B00 LDR W8, [X0 + 0xE0]
	0x03A63B04 LDR X19, [X19 + 0xD98]
	0x03A63B08 STR X20, [X31 + 0x3C8]
	0x03A63B0C STR X21, [X31 + 0xB8]
	0x03A63B10 STR W22, [X31 + 0xB4]
	0x03A63B14 STR W25, [X31 + 0xA4]
	0x03A63B18 CBNZ W8, 0x3A63B24
	0x03A63B1C BL 0x1C16DFC
	0x03A63B20 LDR X0, [X27]
	0x03A63B24 LDR X8, [X0 + 0xB8]
	0x03A63B28 LDR X0, [X19]
	0x03A63B2C LDP W27, W12, [X8 + 0x94]
	0x03A63B30 LDP W28, W29, [X8 + 0x9C]
	0x03A63B34 LDP W19, W21, [X8 + 0xA4]
	0x03A63B38 LDP W22, W25, [X8 + 0xAC]
	0x03A63B3C LDR W9, [X0 + 0xE0]
	0x03A63B40 LDP W26, W20, [X8 + 0xB4]
	0x03A63B44 CBNZ W9, 0x3A63B54
	0x03A63B48 STR W12, [X31 + 0xA0]
	0x03A63B4C BL 0x1C16DFC
	0x03A63B50 LDR W12, [X31 + 0xA0]
	0x03A63B54 LDP V0, V2, [X31 + 0x310]
	0x03A63B58 LDR W9, [X31 + 0xA4]
	0x03A63B5C LDP V3, V4, [X31 + 0x330]
	0x03A63B60 LDR X8, [X31 + 0x370]
	0x03A63B64 STP V0, V2, [X31 + 0xF0]
	0x03A63B68 LDP V2, V5, [X31 + 0x350]
	0x03A63B6C SCVTF S0, W9
	0x03A63B70 LDR W9, [X31 + 0xB4]
	0x03A63B74 LDR X0, [X31 + 0xA8]
	0x03A63B78 LDR X1, [X31 + 0xB8]
	0x03A63B7C LDR X5, [X31 + 0x3C8]
	0x03A63B80 SCVTF S1, W23
	0x03A63B84 STP V3, V4, [X31 + 0x110]
	0x03A63B88 STP V2, V5, [X31 + 0xC0]
	0x03A63B8C STR X8, [X31 + 0xE0]
	0x03A63B90 ADD X8, X31, 0xC0
	0x03A63B94 AND W2, W9, 0x1
	0x03A63B98 ADD X4, X31, 0xF0
	0x03A63B9C MOVZ W3, 0x1
	0x03A63BA0 MOV V2.16B, V9.16B
	0x03A63BA4 MOV V3.16B, V8.16B
	0x03A63BA8 MOV V4.16B, V10.16B
	0x03A63BAC MOV V5.16B, V11.16B
	0x03A63BB0 MOV V6.16B, V12.16B
	0x03A63BB4 MOV W6, W31
	0x03A63BB8 MOV W7, W31
	0x03A63BBC STP X31, X31, [X31]
	0x03A63BC0 STR X31, [X31 + 0x88]
	0x03A63BC4 STRB W31, [X31 + 0x80]
	0x03A63BC8 STR W20, [X31 + 0x78]
	0x03A63BCC STR W26, [X31 + 0x70]
	0x03A63BD0 STR W25, [X31 + 0x68]
	0x03A63BD4 STR W22, [X31 + 0x60]
	0x03A63BD8 STR W21, [X31 + 0x58]
	0x03A63BDC STR W19, [X31 + 0x50]
	0x03A63BE0 STR W29, [X31 + 0x48]
	0x03A63BE4 STR W31, [X31 + 0x40]
	0x03A63BE8 STR W31, [X31 + 0x38]
	0x03A63BEC STR W28, [X31 + 0x30]
	0x03A63BF0 STR W12, [X31 + 0x28]
	0x03A63BF4 STR W27, [X31 + 0x20]
	0x03A63BF8 STP X8, X24, [X31 + 0x10]
	0x03A63BFC BL 0x39CDF90
	0x03A63C00 ADD X31, X31, 0x3C0
	0x03A63C04 LDP X20, X19, [X31 + 0x80]
	0x03A63C08 LDP X22, X21, [X31 + 0x70]
	0x03A63C0C LDP X24, X23, [X31 + 0x60]
	0x03A63C10 LDP X26, X25, [X31 + 0x50]
	0x03A63C14 LDP X28, X27, [X31 + 0x40]
	0x03A63C18 LDP X29, X30, [X31 + 0x30]
	0x03A63C1C LDP D9, D8, [X31 + 0x20]
	0x03A63C20 LDP D11, D10, [X31 + 0x10]
	0x03A63C24 LDR V12, [X31], #0x90
	0x03A63C28 RET
	0x03A63C2C BL 0x1C16F20
	0x03A63C30 SUB X31, X31, 0x80
	0x03A63C34 STP D15, D14, [X31 + 0x10]
	0x03A63C38 STP D13, D12, [X31 + 0x20]
	0x03A63C3C STP D11, D10, [X31 + 0x30]
	0x03A63C40 STP D9, D8, [X31 + 0x40]
	0x03A63C44 STR X30, [X31 + 0x50]
	0x03A63C48 STP X22, X21, [X31 + 0x60]
	0x03A63C4C STP X20, X19, [X31 + 0x70]
	0x03A63C50 ADRP X22, 0x97F000
	0x03A63C54 LDRB W8, [X22 + 0x24B]
	0x03A63C58 MOV W20, W2
	0x03A63C5C MOV X19, X1
	0x03A63C60 MOV X21, X0
	0x03A63C64 TBNZ X8, 0x0, 0x3A63C88
	0x03A63C68 ADRP X0, 0x6F3000
	0x03A63C6C LDR X0, [X0 + 0x550]
	0x03A63C70 BL 0x1C16CF4
	0x03A63C74 ADRP X0, 0x6F3000
	0x03A63C78 LDR X0, [X0 + 0x6C8]
	0x03A63C7C BL 0x1C16CF4
	0x03A63C80 MOVZ W8, 0x1
	0x03A63C84 STRB W8, [X22 + 0x24B]
	0x03A63C88 LDR X8, [X21 + 0x1C8]
	0x03A63C8C CBZ X8, 0x3A63EF8
	0x03A63C90 LDR X0, [X8 + 0x38]
	0x03A63C94 CBZ X0, 0x3A63EF8
	0x03A63C98 LDR X8, [X0]
	0x03A63C9C LDR X9, [X8 + 0x218]
	0x03A63CA0 LDR X1, [X8 + 0x220]
	0x03A63CA4 BLR X9
	0x03A63CA8 MOVZ W8, 0x42C80000
	0x03A63CAC FMOV S2, W8
	0x03A63CB0 ADRP X8, 0xFFFFFFFFFD087000
	0x03A63CB4 FMUL S0, S0, S2
	0x03A63CB8 LDR V2, [X8 + 0x1D8]
	0x03A63CBC FMOV S1, 1
	0x03A63CC0 ADRP X8, 0xFFFFFFFFFD087000
	0x03A63CC4 FABS S0, S0
	0x03A63CC8 FMAXNM S0, S0, S1
	0x03A63CCC LDR V1, [X8 + 0x104]
	0x03A63CD0 MOVZ W8, 0x43200000
	0x03A63CD4 FMUL S0, S0, S2
	0x03A63CD8 FMOV S2, W8
	0x03A63CDC FMIN S0, S0, S2
	0x03A63CE0 FMUL S13, S0, S1
	0x03A63CE4 FMOV S0, 0.5
	0x03A63CE8 FMUL S0, S13, S0
	0x03A63CEC BL 0x3EB1E50
	0x03A63CF0 LDR X8, [X21 + 0x1C8]
	0x03A63CF4 CBZ X8, 0x3A63EF8
	0x03A63CF8 LDR X0, [X8 + 0x50]
	0x03A63CFC CBZ X0, 0x3A63EF8
	0x03A63D00 LDR X8, [X0]
	0x03A63D04 MOV V10.16B, V0.16B
	0x03A63D08 LDR X9, [X8 + 0x218]
	0x03A63D0C LDR X1, [X8 + 0x220]
	0x03A63D10 BLR X9
	0x03A63D14 ADRP X22, 0x97E000
	0x03A63D18 LDRB W8, [X22 + 0xA48]
	0x03A63D1C MOV V8.16B, V0.16B
	0x03A63D20 MOV V14.16B, V1.16B
	0x03A63D24 CBNZ W8, 0x3A63D3C
	0x03A63D28 ADRP X0, 0x698000
	0x03A63D2C LDR X0, [X0 + 0xF08]
	0x03A63D30 BL 0x1C16CF4
	0x03A63D34 MOVZ W8, 0x1
	0x03A63D38 STRB W8, [X22 + 0xA48]
	0x03A63D3C LDR X8, [X21 + 0x1C8]
	0x03A63D40 CBZ X8, 0x3A63EF8
	0x03A63D44 LDR X0, [X8 + 0x40]
	0x03A63D48 CBZ X0, 0x3A63EF8
	0x03A63D4C ADRP X8, 0x698000
	0x03A63D50 LDR X8, [X8 + 0xF08]
	0x03A63D54 LDR X9, [X0]
	0x03A63D58 LDR X8, [X8]
	0x03A63D5C LDR X10, [X9 + 0x218]
	0x03A63D60 LDR X1, [X9 + 0x220]
	0x03A63D64 LDR X8, [X8 + 0xB8]
	0x03A63D68 LDP S11, S15, [X8 + 0x8]
	0x03A63D6C BLR X10
	0x03A63D70 LDR X8, [X21 + 0x1C8]
	0x03A63D74 CBZ X8, 0x3A63EF8
	0x03A63D78 LDR X0, [X8 + 0x48]
	0x03A63D7C STR S0, [X31 + 0x4]
	0x03A63D80 CBZ X0, 0x3A63EF8
	0x03A63D84 LDR X8, [X0]
	0x03A63D88 LDR X9, [X8 + 0x218]
	0x03A63D8C LDR X1, [X8 + 0x220]
	0x03A63D90 BLR X9
	0x03A63D94 LDR X8, [X21 + 0x1C8]
	0x03A63D98 CBZ X8, 0x3A63EF8
	0x03A63D9C LDR X0, [X8 + 0x38]
	0x03A63DA0 CBZ X0, 0x3A63EF8
	0x03A63DA4 LDR X8, [X0]
	0x03A63DA8 MOV V12.16B, V0.16B
	0x03A63DAC MOV V9.16B, V8.16B
	0x03A63DB0 LDR X9, [X8 + 0x218]
	0x03A63DB4 LDR X1, [X8 + 0x220]
	0x03A63DB8 BLR X9
	0x03A63DBC LDR X8, [X21 + 0x1C8]
	0x03A63DC0 FMOV S1, 1
	0x03A63DC4 FDIV S1, S1, S13
	0x03A63DC8 FCMP S0, 0x0
	0x03A63DCC FCSEL S8, S1, S13, LT
	0x03A63DD0 CBZ X8, 0x3A63EF8
	0x03A63DD4 LDR X0, [X8 + 0x58]
	0x03A63DD8 CBZ X0, 0x3A63EF8
	0x03A63DDC LDR X8, [X0]
	0x03A63DE0 LDR X9, [X8 + 0x218]
	0x03A63DE4 LDR X1, [X8 + 0x220]
	0x03A63DE8 BLR X9
	0x03A63DEC LDR X8, [X21 + 0x1C8]
	0x03A63DF0 CBZ X8, 0x3A63EF8
	0x03A63DF4 LDR X0, [X8 + 0x38]
	0x03A63DF8 CBZ X0, 0x3A63EF8
	0x03A63DFC LDR X8, [X0]
	0x03A63E00 ADRP X22, 0x6F3000
	0x03A63E04 MOV V13.16B, V0.16B
	0x03A63E08 FADD S10, S10, S10
	0x03A63E0C LDR X9, [X8 + 0x218]
	0x03A63E10 LDR X1, [X8 + 0x220]
	0x03A63E14 LDR X22, [X22 + 0x550]
	0x03A63E18 BLR X9
	0x03A63E1C MOVZ W8, 0x42C80000
	0x03A63E20 LDR X0, [X22]
	0x03A63E24 FMOV S1, 1
	0x03A63E28 FMOV S2, W8
	0x03A63E2C FDIV S1, S1, S13
	0x03A63E30 FMUL S0, S0, S2
	0x03A63E34 STP S10, S8, [X31 + 0x58]
	0x03A63E38 STP S0, S1, [X31 + 0x8]
	0x03A63E3C LDR W8, [X0 + 0xE0]
	0x03A63E40 CBNZ W8, 0x3A63E48
	0x03A63E44 BL 0x1C16DFC
	0x03A63E48 CBZ X19, 0x3A63EF8
	0x03A63E4C LDR X8, [X22]
	0x03A63E50 ADRP X9, 0xFFFFFFFFFD086000
	0x03A63E54 LDR V3, [X9 + 0xF28]
	0x03A63E58 LDR V2, [X31 + 0x4]
	0x03A63E5C LDR X8, [X8 + 0xB8]
	0x03A63E60 FADD S0, S9, S9
	0x03A63E64 FADD S1, S14, S14
	0x03A63E68 FSUB S0, S0, S11
	0x03A63E6C LDR W1, [X8 + 0x68]
	0x03A63E70 FSUB S1, S1, S15
	0x03A63E74 FMAXNM S2, S2, S3
	0x03A63E78 FMAXNM S3, S12, S3
	0x03A63E7C MOV X0, X19
	0x03A63E80 MOV X2, X31
	0x03A63E84 BL 0x3C15D80
	0x03A63E88 LDR X8, [X22]
	0x03A63E8C LDP S1, S0, [X31 + 0x58]
	0x03A63E90 LDP S3, S2, [X31 + 0x8]
	0x03A63E94 MOV X0, X19
	0x03A63E98 LDR X8, [X8 + 0xB8]
	0x03A63E9C MOV X2, X31
	0x03A63EA0 LDR W1, [X8 + 0x6C]
	0x03A63EA4 BL 0x3C15D80
	0x03A63EA8 LDR X0, [X21 + 0x1C8]
	0x03A63EAC CBZ X0, 0x3A63EF8
	0x03A63EB0 BL 0x3A59E10
	0x03A63EB4 TBZ X0, 0x0, 0x3A63ED4
	0x03A63EB8 TBNZ X20, 0x0, 0x3A63ED4
	0x03A63EBC ADRP X8, 0x6F3000
	0x03A63EC0 LDR X8, [X8 + 0x6C8]
	0x03A63EC4 MOV X0, X19
	0x03A63EC8 MOV X2, X31
	0x03A63ECC LDR X1, [X8]
	0x03A63ED0 BL 0x3C14E3C
	0x03A63ED4 LDP X20, X19, [X31 + 0x70]
	0x03A63ED8 LDP X22, X21, [X31 + 0x60]
	0x03A63EDC LDR X30, [X31 + 0x50]
	0x03A63EE0 LDP D9, D8, [X31 + 0x40]
	0x03A63EE4 LDP D11, D10, [X31 + 0x30]
	0x03A63EE8 LDP D13, D12, [X31 + 0x20]
	0x03A63EEC LDP D15, D14, [X31 + 0x10]
	0x03A63EF0 ADD X31, X31, 0x80
	0x03A63EF4 RET
	0x03A63EF8 BL 0x1C16F20
	0x03A63EFC STR X30, [X31 - 0x30]!
	0x03A63F00 STP X22, X21, [X31 + 0x10]
	0x03A63F04 STP X20, X19, [X31 + 0x20]
	0x03A63F08 ADRP X22, 0x97F000
	0x03A63F0C ADRP X21, 0x6F3000
	0x03A63F10 LDRB W8, [X22 + 0x24C]
	0x03A63F14 LDR X21, [X21 + 0x550]
	0x03A63F18 MOV X19, X1
	0x03A63F1C MOV X20, X0
	0x03A63F20 TBNZ X8, 0x0, 0x3A63F44
	0x03A63F24 ADRP X0, 0x6F3000
	0x03A63F28 LDR X0, [X0 + 0x550]
	0x03A63F2C BL 0x1C16CF4
	0x03A63F30 ADRP X0, 0x6F3000
	0x03A63F34 LDR X0, [X0 + 0x6D0]
	0x03A63F38 BL 0x1C16CF4
	0x03A63F3C MOVZ W8, 0x1
	0x03A63F40 STRB W8, [X22 + 0x24C]
	0x03A63F44 LDR X0, [X21]
	0x03A63F48 LDR W8, [X0 + 0xE0]
	0x03A63F4C CBNZ W8, 0x3A63F58
	0x03A63F50 BL 0x1C16DFC
	0x03A63F54 LDR X0, [X21]
	0x03A63F58 LDR X8, [X20 + 0x1D0]
	0x03A63F5C CBZ X8, 0x3A64000
	0x03A63F60 LDR X8, [X8 + 0x38]
	0x03A63F64 CBZ X8, 0x3A64000
	0x03A63F68 LDR X9, [X0 + 0xB8]
	0x03A63F6C LDR X10, [X8]
	0x03A63F70 MOV X0, X8
	0x03A63F74 LDR W21, [X9 + 0x70]
	0x03A63F78 LDR X9, [X10 + 0x218]
	0x03A63F7C LDR X1, [X10 + 0x220]
	0x03A63F80 BLR X9
	0x03A63F84 CBZ X19, 0x3A64000
	0x03A63F88 ADRP X8, 0xFFFFFFFFFD087000
	0x03A63F8C LDR V1, [X8 + 0x200]
	0x03A63F90 MOV X0, X19
	0x03A63F94 MOV W1, W21
	0x03A63F98 MOV X2, X31
	0x03A63F9C FMUL S0, S0, S1
	0x03A63FA0 BL 0x3C15CD8
	0x03A63FA4 LDR X8, [X20 + 0x1D0]
	0x03A63FA8 CBZ X8, 0x3A64000
	0x03A63FAC LDR X0, [X8 + 0x38]
	0x03A63FB0 CBZ X0, 0x3A64000
	0x03A63FB4 LDR X8, [X0]
	0x03A63FB8 LDR X9, [X8 + 0x218]
	0x03A63FBC LDR X1, [X8 + 0x220]
	0x03A63FC0 BLR X9
	0x03A63FC4 FCMP S0, 0x0
	0x03A63FC8 B.LE 0x3A63FF0
	0x03A63FCC ADRP X8, 0x6F3000
	0x03A63FD0 LDR X8, [X8 + 0x6D0]
	0x03A63FD4 MOV X0, X19
	0x03A63FD8 LDP X20, X19, [X31 + 0x20]
	0x03A63FDC LDP X22, X21, [X31 + 0x10]
	0x03A63FE0 LDR X1, [X8]
	0x03A63FE4 MOV X2, X31
	0x03A63FE8 LDR X30, [X31], #0x30
	0x03A63FEC B 0x3C14E3C
	0x03A63FF0 LDP X20, X19, [X31 + 0x20]
	0x03A63FF4 LDP X22, X21, [X31 + 0x10]
	0x03A63FF8 LDR X30, [X31], #0x30
	0x03A63FFC RET
	0x03A64000 BL 0x1C16F20
	0x03A64004 SUB X31, X31, 0x80
	0x03A64008 STR D14, [X31 + 0x10]
	0x03A6400C STP D13, D12, [X31 + 0x20]
	0x03A64010 STP D11, D10, [X31 + 0x30]
	0x03A64014 STP D9, D8, [X31 + 0x40]
	0x03A64018 STP X30, X23, [X31 + 0x50]
	0x03A6401C STP X22, X21, [X31 + 0x60]
	0x03A64020 STP X20, X19, [X31 + 0x70]
	0x03A64024 ADRP X22, 0x97E000
	0x03A64028 LDRB W8, [X22 + 0x24D]
	0x03A6402C MOV X21, X2
	0x03A64030 MOV X19, X1
	0x03A64034 MOV X20, X0
	0x03A64038 TBNZ X8, 0x0, 0x3A64050
	0x03A6403C ADRP X0, 0x6F2000
	0x03A64040 LDR X0, [X0 + 0x550]
	0x03A64044 BL 0x1C16CF4
	0x03A64048 MOVZ W8, 0x1
	0x03A6404C STRB W8, [X22 + 0x24D]
	0x03A64050 LDR X8, [X20 + 0x1D8]
	0x03A64054 CBZ X8, 0x3A6424C
	0x03A64058 LDR X0, [X8 + 0x38]
	0x03A6405C CBZ X0, 0x3A6424C
	0x03A64060 LDR X8, [X0]
	0x03A64064 LDR X9, [X8 + 0x218]
	0x03A64068 LDR X1, [X8 + 0x220]
	0x03A6406C BLR X9
	0x03A64070 LDR X8, [X20 + 0x1D8]
	0x03A64074 CBZ X8, 0x3A6424C
	0x03A64078 LDR X0, [X8 + 0x40]
	0x03A6407C CBZ X0, 0x3A6424C
	0x03A64080 LDR X8, [X0]
	0x03A64084 ADRP X23, 0x6F2000
	0x03A64088 MOV V10.16B, V0.16B
	0x03A6408C MOV V11.16B, V1.16B
	0x03A64090 LDR X9, [X8 + 0x218]
	0x03A64094 LDR X1, [X8 + 0x220]
	0x03A64098 LDR X23, [X23 + 0x550]
	0x03A6409C MOV V12.16B, V2.16B
	0x03A640A0 BLR X9
	0x03A640A4 LDP S13, S14, [X20 + 0xE0]
	0x03A640A8 MOV V8.16B, V0.16B
	0x03A640AC MOV V9.16B, V1.16B
	0x03A640B0 CBZ X21, 0x3A64138
	0x03A640B4 MOV X0, X21
	0x03A640B8 MOV X1, X31
	0x03A640BC BL 0x3984C98
	0x03A640C0 TBZ X0, 0x0, 0x3A64138
	0x03A640C4 MOV X0, X21
	0x03A640C8 MOV X1, X31
	0x03A640CC BL 0x3984DE0
	0x03A640D0 TBZ X0, 0x0, 0x3A6411C
	0x03A640D4 LDR X0, [X23]
	0x03A640D8 LDR W8, [X0 + 0xE0]
	0x03A640DC CBNZ W8, 0x3A640E8
	0x03A640E0 BL 0x1C16DFC
	0x03A640E4 LDR X0, [X23]
	0x03A640E8 LDR X8, [X0 + 0xB8]
	0x03A640EC MOV X0, X21
	0x03A640F0 MOV V0.16B, V8.16B
	0x03A640F4 MOV V1.16B, V9.16B
	0x03A640F8 LDR W22, [X8 + 0x7C]
	0x03A640FC MOV X1, X31
	0x03A64100 BL 0x398895C
	0x03A64104 CBZ X19, 0x3A6424C
	0x03A64108 MOV X0, X19
	0x03A6410C MOV W1, W22
	0x03A64110 MOV X2, X31
	0x03A64114 BL 0x3C15D80
	0x03A64118 B 0x3A64138
	0x03A6411C MOV X0, X21
	0x03A64120 MOV V0.16B, V8.16B
	0x03A64124 MOV V1.16B, V9.16B
	0x03A64128 MOV X1, X31
	0x03A6412C BL 0x398895C
	0x03A64130 MOV V8.16B, V0.16B
	0x03A64134 MOV V9.16B, V1.16B
	0x03A64138 LDR X8, [X20 + 0x1D8]
	0x03A6413C CBZ X8, 0x3A6424C
	0x03A64140 LDR X0, [X8 + 0x58]
	0x03A64144 CBZ X0, 0x3A6424C
	0x03A64148 LDR X8, [X0]
	0x03A6414C SCVTF S0, S13
	0x03A64150 SCVTF S1, S14
	0x03A64154 FDIV S13, S0, S1
	0x03A64158 LDR X9, [X8 + 0x218]
	0x03A6415C LDR X1, [X8 + 0x220]
	0x03A64160 BLR X9
	0x03A64164 ANDS W31, W0, 0x1
	0x03A64168 FMOV S0, 1
	0x03A6416C FCSEL S0, S13, S0, NE
	0x03A64170 STP S11, S10, [X31 + 0x18]
	0x03A64174 STP S0, S12, [X31 + 0x8]
	0x03A64178 LDR X8, [X20 + 0x1D8]
	0x03A6417C CBZ X8, 0x3A6424C
	0x03A64180 LDR X0, [X8 + 0x48]
	0x03A64184 CBZ X0, 0x3A6424C
	0x03A64188 LDR X8, [X0]
	0x03A6418C LDR X9, [X8 + 0x218]
	0x03A64190 LDR X1, [X8 + 0x220]
	0x03A64194 BLR X9
	0x03A64198 LDR X8, [X20 + 0x1D8]
	0x03A6419C CBZ X8, 0x3A6424C
	0x03A641A0 LDR X0, [X8 + 0x50]
	0x03A641A4 CBZ X0, 0x3A6424C
	0x03A641A8 LDR X8, [X0]
	0x03A641AC MOV V10.16B, V0.16B
	0x03A641B0 LDR X9, [X8 + 0x218]
	0x03A641B4 LDR X1, [X8 + 0x220]
	0x03A641B8 BLR X9
	0x03A641BC LDR X0, [X23]
	0x03A641C0 MOV V11.16B, V0.16B
	0x03A641C4 LDR W8, [X0 + 0xE0]
	0x03A641C8 CBNZ W8, 0x3A641D0
	0x03A641CC BL 0x1C16DFC
	0x03A641D0 CBZ X19, 0x3A6424C
	0x03A641D4 LDR X8, [X23]
	0x03A641D8 LDP S3, S2, [X31 + 0x8]
	0x03A641DC LDP S1, S0, [X31 + 0x18]
	0x03A641E0 FMOV S4, 5
	0x03A641E4 LDR X8, [X8 + 0xB8]
	0x03A641E8 FMUL S11, S11, S4
	0x03A641EC FMOV S4, 3
	0x03A641F0 MOV X0, X19
	0x03A641F4 LDR W1, [X8 + 0x74]
	0x03A641F8 MOV X2, X31
	0x03A641FC FMUL S10, S10, S4
	0x03A64200 BL 0x3C15D80
	0x03A64204 LDR X8, [X23]
	0x03A64208 MOV X0, X19
	0x03A6420C MOV V0.16B, V8.16B
	0x03A64210 MOV V1.16B, V9.16B
	0x03A64214 LDR X8, [X8 + 0xB8]
	0x03A64218 MOV V2.16B, V10.16B
	0x03A6421C MOV V3.16B, V11.16B
	0x03A64220 LDP X20, X19, [X31 + 0x70]
	0x03A64224 LDR W1, [X8 + 0x78]
	0x03A64228 LDP X22, X21, [X31 + 0x60]
	0x03A6422C LDP X30, X23, [X31 + 0x50]
	0x03A64230 LDP D9, D8, [X31 + 0x40]
	0x03A64234 LDP D11, D10, [X31 + 0x30]
	0x03A64238 LDP D13, D12, [X31 + 0x20]
	0x03A6423C LDR V14, [X31 + 0x10]
	0x03A64240 MOV X2, X31
	0x03A64244 ADD X31, X31, 0x80
	0x03A64248 B 0x3C15D80
	0x03A6424C BL 0x1C16F20
	0x03A64250 SUB X31, X31, 0xB0
	0x03A64254 STR D8, [X31 + 0x60]
	0x03A64258 STP X30, X25, [X31 + 0x70]
	0x03A6425C STP X24, X23, [X31 + 0x80]
	0x03A64260 STP X22, X21, [X31 + 0x90]
	0x03A64264 STP X20, X19, [X31 + 0xA0]
	0x03A64268 ADRP X23, 0x97E000
	0x03A6426C LDRB W8, [X23 + 0x24E]
	0x03A64270 MOV X19, X3
	0x03A64274 MOV X22, X2
	0x03A64278 MOV X21, X1
	0x03A6427C MOV X20, X0
	0x03A64280 TBNZ X8, 0x0, 0x3A642BC
	0x03A64284 ADRP X0, 0x6F2000
	0x03A64288 LDR X0, [X0 + 0x550]
	0x03A6428C BL 0x1C16CF4
	0x03A64290 ADRP X0, 0x6F2000
	0x03A64294 LDR X0, [X0 + 0x6D8]
	0x03A64298 BL 0x1C16CF4
	0x03A6429C ADRP X0, 0x6F2000
	0x03A642A0 LDR X0, [X0 + 0x6E0]
	0x03A642A4 BL 0x1C16CF4
	0x03A642A8 ADRP X0, 0x6F2000
	0x03A642AC LDR X0, [X0 + 0x6E8]
	0x03A642B0 BL 0x1C16CF4
	0x03A642B4 MOVZ W8, 0x1
	0x03A642B8 STRB W8, [X23 + 0x24E]
	0x03A642BC LDR X8, [X20 + 0x1E8]
	0x03A642C0 CBZ X8, 0x3A6459C
	0x03A642C4 LDR X0, [X8 + 0x38]
	0x03A642C8 CBZ X0, 0x3A6459C
	0x03A642CC LDR X8, [X0]
	0x03A642D0 LDR W25, [X22 + 0x2A0]
	0x03A642D4 LDR W23, [X22 + 0x2A4]
	0x03A642D8 ADRP X22, 0x6F2000
	0x03A642DC LDR X9, [X8 + 0x218]
	0x03A642E0 LDR X1, [X8 + 0x220]
	0x03A642E4 LDR X22, [X22 + 0x550]
	0x03A642E8 BLR X9
	0x03A642EC BL 0x3EB1B90
	0x03A642F0 LDR X0, [X22]
	0x03A642F4 MOV V8.16B, V0.16B
	0x03A642F8 LDR W8, [X0 + 0xE0]
	0x03A642FC CBNZ W8, 0x3A64308
	0x03A64300 BL 0x1C16DFC
	0x03A64304 LDR X0, [X22]
	0x03A64308 LDR X8, [X20 + 0x130]
	0x03A6430C CBZ X8, 0x3A6459C
	0x03A64310 LDR X9, [X0 + 0xB8]
	0x03A64314 LDR X10, [X8 + 0x48]
	0x03A64318 LDUR V0, [X8 + 0x38]
	0x03A6431C LDUR V1, [X8 + 0x28]
	0x03A64320 LDR W1, [X9 + 0x88]
	0x03A64324 STR X10, [X31 + 0x50]
	0x03A64328 STP V1, V0, [X31 + 0x30]
	0x03A6432C CBZ X21, 0x3A6459C
	0x03A64330 LDP V0, V1, [X31 + 0x30]
	0x03A64334 LDR X8, [X31 + 0x50]
	0x03A64338 ADD X2, X31, 0x0
	0x03A6433C MOV X0, X21
	0x03A64340 MOV X3, X31
	0x03A64344 STP V0, V1, [X31]
	0x03A64348 STR X8, [X31 + 0x20]
	0x03A6434C BL 0x3C4FCFC
	0x03A64350 CBZ X19, 0x3A6459C
	0x03A64354 LDR X8, [X22]
	0x03A64358 MUL W9, W23, W23
	0x03A6435C SCVTF S0, W23
	0x03A64360 FMOV S1, -1
	0x03A64364 LDR X8, [X8 + 0xB8]
	0x03A64368 FMOV S3, 1
	0x03A6436C FADD S2, S0, S1
	0x03A64370 FDIV S1, S3, S0
	0x03A64374 LDR W1, [X8 + 0x80]
	0x03A64378 SCVTF S0, W9
	0x03A6437C FDIV S0, S3, S0
	0x03A64380 MOV X0, X19
	0x03A64384 MOV V3.16B, V8.16B
	0x03A64388 MOV X2, X31
	0x03A6438C BL 0x3C15D80
	0x03A64390 LDR X8, [X20 + 0x1E0]
	0x03A64394 CBZ X8, 0x3A6459C
	0x03A64398 LDR X0, [X8 + 0x38]
	0x03A6439C CBZ X0, 0x3A6459C
	0x03A643A0 LDR X8, [X22]
	0x03A643A4 LDR X9, [X0]
	0x03A643A8 LDR X8, [X8 + 0xB8]
	0x03A643AC LDR X10, [X9 + 0x218]
	0x03A643B0 LDR X1, [X9 + 0x220]
	0x03A643B4 LDR W21, [X8 + 0x8C]
	0x03A643B8 BLR X10
	0x03A643BC MOV X2, X0
	0x03A643C0 MOV X0, X19
	0x03A643C4 MOV W1, W21
	0x03A643C8 MOV X3, X31
	0x03A643CC BL 0x3C14C34
	0x03A643D0 LDR X0, [X20 + 0x1E0]
	0x03A643D4 CBZ X0, 0x3A6459C
	0x03A643D8 LDR X8, [X22]
	0x03A643DC LDR X8, [X8 + 0xB8]
	0x03A643E0 LDR W21, [X8 + 0x84]
	0x03A643E4 BL 0x3A5953C
	0x03A643E8 TBZ X0, 0x0, 0x3A644D0
	0x03A643EC LDR X8, [X20 + 0x1E0]
	0x03A643F0 CBZ X8, 0x3A6459C
	0x03A643F4 LDR X0, [X8 + 0x38]
	0x03A643F8 CBZ X0, 0x3A6459C
	0x03A643FC LDR X8, [X0]
	0x03A64400 LDR X9, [X8 + 0x218]
	0x03A64404 LDR X1, [X8 + 0x220]
	0x03A64408 BLR X9
	0x03A6440C CBZ X0, 0x3A6459C
	0x03A64410 LDR X8, [X0]
	0x03A64414 LDP X9, X1, [X8 + 0x188]
	0x03A64418 BLR X9
	0x03A6441C LDR X8, [X20 + 0x1E0]
	0x03A64420 CBZ X8, 0x3A6459C
	0x03A64424 MOV W22, W0
	0x03A64428 LDR X0, [X8 + 0x38]
	0x03A6442C CBZ X0, 0x3A6459C
	0x03A64430 LDR X8, [X0]
	0x03A64434 LDR X9, [X8 + 0x218]
	0x03A64438 LDR X1, [X8 + 0x220]
	0x03A6443C BLR X9
	0x03A64440 CBZ X0, 0x3A6459C
	0x03A64444 LDR X8, [X0]
	0x03A64448 LDP X9, X1, [X8 + 0x1A8]
	0x03A6444C BLR X9
	0x03A64450 LDR X8, [X20 + 0x1E0]
	0x03A64454 CBZ X8, 0x3A6459C
	0x03A64458 MOV W23, W0
	0x03A6445C LDR X0, [X8 + 0x38]
	0x03A64460 CBZ X0, 0x3A6459C
	0x03A64464 LDR X8, [X0]
	0x03A64468 LDR X9, [X8 + 0x218]
	0x03A6446C LDR X1, [X8 + 0x220]
	0x03A64470 BLR X9
	0x03A64474 CBZ X0, 0x3A6459C
	0x03A64478 LDR X8, [X0]
	0x03A6447C LDP X9, X1, [X8 + 0x1A8]
	0x03A64480 BLR X9
	0x03A64484 LDR X8, [X20 + 0x1E0]
	0x03A64488 CBZ X8, 0x3A6459C
	0x03A6448C MOV W24, W0
	0x03A64490 LDR X0, [X8 + 0x40]
	0x03A64494 CBZ X0, 0x3A6459C
	0x03A64498 LDR X8, [X0]
	0x03A6449C LDR X9, [X8 + 0x218]
	0x03A644A0 LDR X1, [X8 + 0x220]
	0x03A644A4 BLR X9
	0x03A644A8 MOV V3.16B, V0.16B
	0x03A644AC SCVTF S0, W22
	0x03A644B0 FMOV S1, 1
	0x03A644B4 SCVTF S2, W23
	0x03A644B8 SCVTF S4, W24
	0x03A644BC FMOV S5, -1
	0x03A644C0 FDIV S0, S1, S0
	0x03A644C4 FDIV S1, S1, S2
	0x03A644C8 FADD S2, S4, S5
	0x03A644CC B 0x3A64508
	0x03A644D0 ADRP X22, 0x974000
	0x03A644D4 LDRB W8, [X22 + 0xE5A]
	0x03A644D8 CBNZ W8, 0x3A644F0
	0x03A644DC ADRP X0, 0x696000
	0x03A644E0 LDR X0, [X0 + 0x9A0]
	0x03A644E4 BL 0x1C16CF4
	0x03A644E8 MOVZ W8, 0x1
	0x03A644EC STRB W8, [X22 + 0xE5A]
	0x03A644F0 ADRP X8, 0x696000
	0x03A644F4 LDR X8, [X8 + 0x9A0]
	0x03A644F8 LDR X8, [X8]
	0x03A644FC LDR X8, [X8 + 0xB8]
	0x03A64500 LDP S0, S1, [X8]
	0x03A64504 LDP S2, S3, [X8 + 0x8]
	0x03A64508 MOV X0, X19
	0x03A6450C MOV W1, W21
	0x03A64510 MOV X2, X31
	0x03A64514 BL 0x3C15D80
	0x03A64518 CMP W25, 0x1
	0x03A6451C B.NE 0x3A6452C
	0x03A64520 ADRP X8, 0x6F2000
	0x03A64524 LDR X8, [X8 + 0x6E0]
	0x03A64528 B 0x3A64570
	0x03A6452C LDR X8, [X20 + 0x1F0]
	0x03A64530 CBZ X8, 0x3A6459C
	0x03A64534 LDR X0, [X8 + 0x38]
	0x03A64538 CBZ X0, 0x3A6459C
	0x03A6453C LDR X8, [X0]
	0x03A64540 LDR X9, [X8 + 0x218]
	0x03A64544 LDR X1, [X8 + 0x220]
	0x03A64548 BLR X9
	0x03A6454C CMP W0, 0x1
	0x03A64550 B.EQ 0x3A64568
	0x03A64554 CMP W0, 0x2
	0x03A64558 B.NE 0x3A64580
	0x03A6455C ADRP X8, 0x6F2000
	0x03A64560 LDR X8, [X8 + 0x6D8]
	0x03A64564 B 0x3A64570
	0x03A64568 ADRP X8, 0x6F2000
	0x03A6456C LDR X8, [X8 + 0x6E8]
	0x03A64570 LDR X1, [X8]
	0x03A64574 MOV X0, X19
	0x03A64578 MOV X2, X31
	0x03A6457C BL 0x3C14E3C
	0x03A64580 LDP X20, X19, [X31 + 0xA0]
	0x03A64584 LDP X22, X21, [X31 + 0x90]
	0x03A64588 LDP X24, X23, [X31 + 0x80]
	0x03A6458C LDP X30, X25, [X31 + 0x70]
	0x03A64590 LDR V8, [X31 + 0x60]
	0x03A64594 ADD X31, X31, 0xB0
	0x03A64598 RET
	0x03A6459C BL 0x1C16F20
	0x03A645A0 STR X30, [X31 - 0x30]!
	0x03A645A4 STP X22, X21, [X31 + 0x10]
	0x03A645A8 STP X20, X19, [X31 + 0x20]
	0x03A645AC ADRP X22, 0x97E000
	0x03A645B0 LDRB W8, [X22 + 0x24F]
	0x03A645B4 MOV X19, X2
	0x03A645B8 MOV X20, X1
	0x03A645BC MOV X21, X0

ISIL:
	001 Subtract X31, X31, 448
	002 Move [X31+304], D12
	003 Move [X31+320], D11
	004 Move [X31+328], D10
	005 Move [X31+336], D9
	006 Move [X31+344], D8
	007 Move [X31+352], X29
	008 Move [X31+360], X30
	009 Move [X31+368], X28
	010 Move [X31+376], X27
	011 Move [X31+384], X26
	012 Move [X31+392], X25
	013 Move [X31+400], X24
	014 Move [X31+408], X23
	015 Move [X31+416], X22
	016 Move [X31+424], X21
	017 Move [X31+432], X20
	018 Move [X31+440], X19
	019 Move X19, 0x980000
	020 Move W8, [X19+586]
	021 Move X26, X3
	022 Move X23, X2
	023 Move X21, X1
	024 Move X20, X0
	025 Move TEMP, X8
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {64}
	029 Move X0, 0x6F0000
	030 Move X0, [X0+3624]
	031 Call 0x1C17CF4
	032 Move X0, 0x6F1000
	033 Move X0, [X0+1120]
	034 Call 0x1C17CF4
	035 Move X0, 0x6B9000
	036 Move X0, [X0+2296]
	037 Call 0x1C17CF4
	038 Move X0, 0x691000
	039 Move X0, [X0+1432]
	040 Call 0x1C17CF4
	041 Move X0, 0x6F2000
	042 Move X0, [X0+16]
	043 Call 0x1C17CF4
	044 Move X0, 0x6F4000
	045 Move X0, [X0+1360]
	046 Call 0x1C17CF4
	047 Move X0, 0x6F4000
	048 Move X0, [X0+1664]
	049 Call 0x1C17CF4
	050 Move X0, 0x6F4000
	051 Move X0, [X0+1672]
	052 Call 0x1C17CF4
	053 Move X0, 0x6F4000
	054 Move X0, [X0+1680]
	055 Call 0x1C17CF4
	056 Move X0, 0x6F4000
	057 Move X0, [X0+1688]
	058 Call 0x1C17CF4
	059 Move X0, 0x6F4000
	060 Move X0, [X0+1696]
	061 Call 0x1C17CF4
	062 Move W8, 1
	063 Move [X19+586], W8
	064 NotImplemented "Instruction MOVI not yet implemented."
	065 Move [X31+288], W31
	066 Move [X31+256], V0
	067 Move [X31+264], V0
	068 Move [X31+15], V0
	069 Move [X31+224], X31
	070 Move [X31+232], X31
	071 Move X8, [X20+448]
	072 Compare X8, 0
	073 JumpIfEqual {812}
	074 Move X0, [X8+112]
	075 Compare X0, 0
	076 JumpIfEqual {812}
	077 Move X8, [X0]
	078 Move X9, [X8+536]
	079 Move X1, [X8+544]
	080 NotImplemented "Instruction BLR not yet implemented."
	081 Compare W0, 0
	082 JumpIfEqual {85}
	083 NotImplemented "Instruction CMP not yet implemented."
	084 Move W8, 2
	085 Move W8, 1
	086 Move W9, [X20+224]
	087 Move W10, [X20+228]
	088 Move X19, 0x97F000
	089 Move W11, [X19+3640]
	090 NotImplemented "Instruction ASRV not yet implemented."
	091 NotImplemented "Instruction ASRV not yet implemented."
	092 NotImplemented "Instruction CMP not yet implemented."
	093 NotImplemented "Instruction CSEL not yet implemented."
	094 Compare W11, 0
	095 JumpIfNotEqual {101}
	096 Move X0, 0x691000
	097 Move X0, [X0+1448]
	098 Call 0x1C17CF4
	099 Move W8, 1
	100 Move [X19+3640], W8
	101 Move X19, 0x691000
	102 Move X19, [X19+1448]
	103 NotImplemented "Instruction SCVTF not yet implemented."
	104 Move X0, [X19]
	105 Move W8, [X0+224]
	106 Compare W8, 0
	107 JumpIfNotEqual {109}
	108 Call 0x1C17DFC
	109 NotImplemented "Instruction FCVT not yet implemented."
	110 Move D1, 2
	111 Move X0, X31
	112 Call Math.Log, V0, V1
	113 Move X22, 0x976000
	114 Move W8, [X22+2595]
	115 NotImplemented "Instruction INVALID not yet implemented."
	116 Move S9, -1
	117 Compare W8, 0
	118 JumpIfNotEqual {124}
	119 Move X0, 0x691000
	120 Move X0, [X0+1448]
	121 Call 0x1C17CF4
	122 Move W8, 1
	123 Move [X22+2595], W8
	124 Move X0, [X19]
	125 Add S8, S8, S9
	126 Move W8, [X0+224]
	127 Compare W8, 0
	128 JumpIfNotEqual {130}
	129 Call 0x1C17DFC
	130 Move W9, 0x7F800000
	131 Move X8, [X20+448]
	132 NotImplemented "Instruction FRINTM not yet implemented."
	133 Move S1, W9
	134 NotImplemented "Instruction FCVTMS not yet implemented."
	135 NotImplemented "Instruction FCMP not yet implemented."
	136 Move W9, 0x80000000
	137 NotImplemented "Instruction CSEL not yet implemented."
	138 Compare X8, 0
	139 JumpIfEqual {812}
	140 Move X0, [X8+120]
	141 Move [X31+16], X26
	142 Compare X0, 0
	143 JumpIfEqual {812}
	144 Move X8, [X0]
	145 Move X9, [X8+536]
	146 Move X1, [X8+544]
	147 NotImplemented "Instruction BLR not yet implemented."
	148 Move X8, [X20+448]
	149 NotImplemented "Instruction CMP not yet implemented."
	150 NotImplemented "Instruction CSEL not yet implemented."
	151 NotImplemented "Instruction CMP not yet implemented."
	152 NotImplemented "Instruction CSINC not yet implemented."
	153 Compare X8, 0
	154 JumpIfEqual {812}
	155 Move X0, [X8+88]
	156 Compare X0, 0
	157 JumpIfEqual {812}
	158 Move X8, [X0]
	159 Move X9, [X8+536]
	160 Move X1, [X8+544]
	161 NotImplemented "Instruction BLR not yet implemented."
	162 Move X8, [X20+448]
	163 Compare X8, 0
	164 JumpIfEqual {812}
	165 Move X0, [X8+64]
	166 Compare X0, 0
	167 JumpIfEqual {812}
	168 Move X8, [X0]
	169 Move V8, V0
	170 Move X9, [X8+536]
	171 Move X1, [X8+544]
	172 NotImplemented "Instruction BLR not yet implemented."
	173 Move X0, X31
	174 Call Mathf.GammaToLinearSpace, V0
	175 Move X8, [X20+448]
	176 Compare X8, 0
	177 JumpIfEqual {812}
	178 Move X0, [X8+80]
	179 Compare X0, 0
	180 JumpIfEqual {812}
	181 Move X8, [X0]
	182 Move V9, V0
	183 Move X9, [X8+536]
	184 Move X1, [X8+544]
	185 NotImplemented "Instruction BLR not yet implemented."
	186 Move X8, -49774592
	187 Move X9, -49774592
	188 Move V2, [X8+196]
	189 Move V3, [X9+512]
	190 Move S1, 1
	191 Move X8, [X20+408]
	192 NotImplemented "Instruction FMIN not yet implemented."
	193 Multiply S1, S1, S2
	194 Add S1, S1, S3
	195 NotImplemented "Instruction FCMP not yet implemented."
	196 NotImplemented "Instruction FCSEL not yet implemented."
	197 Compare X8, 0
	198 JumpIfEqual {812}
	199 Move X9, 0x6F4000
	200 Move X9, [X9+1360]
	201 Move X22, [X8+64]
	202 Move X0, [X9]
	203 Move W9, [X0+224]
	204 Compare W9, 0
	205 JumpIfNotEqual {207}
	206 Call 0x1C17DFC
	207 Compare X22, 0
	208 JumpIfEqual {812}
	209 Move X8, 0x6F4000
	210 Move X8, [X8+1360]
	211 Move S0, 0.5
	212 Multiply S3, S9, S0
	213 Move X0, X22
	214 Move X8, [X8]
	215 Move V0, V10
	216 Move V1, V8
	217 Move V2, V9
	218 Move X8, [X8+184]
	219 Move X2, X31
	220 Move W1, [X8+72]
	221 Call Material.SetVector, X0, X1, X2
	222 Move X8, [X20+448]
	223 Compare X8, 0
	224 JumpIfEqual {812}
	225 Move X0, [X8+104]
	226 Compare X0, 0
	227 JumpIfEqual {812}
	228 Move X8, [X0]
	229 Move X26, 0x6B9000
	230 Move X27, 0x6F4000
	231 Move X19, 0x6F4000
	232 Move X9, [X8+536]
	233 Move X1, [X8+544]
	234 Move X26, [X26+2296]
	235 Move X27, [X27+1680]
	236 Move X19, [X19+1672]
	237 NotImplemented "Instruction BLR not yet implemented."
	238 Move X8, [X26]
	239 Move W26, W0
	240 Move W9, [X8+224]
	241 Compare W9, 0
	242 JumpIfNotEqual {245}
	243 Move X0, X8
	244 Call 0x1C17DFC
	245 Move X1, [X27]
	246 And W2, W26, 1
	247 Move X0, X22
	248 Move X3, X31
	249 Call CoreUtils.SetKeyword, X0, X1, X2
	250 Move W2, [X20+516]
	251 Move X1, [X19]
	252 Move X0, X22
	253 Move X3, X31
	254 Call CoreUtils.SetKeyword, X0, X1, X2
	255 Move W3, [X20+512]
	256 Add X8, X31, 160
	257 Move X0, X20
	258 Move W1, W25
	259 Move W2, W24
	260 Move W4, W31
	261 Call PostProcessPass.GetCompatibleDescriptor, X0, X1, X2, X3, X4
	262 Move V0, [X31+160]
	263 Move V1, [X31+176]
	264 Move V2, [X31+12]
	265 Move W8, [X31+208]
	266 NotImplemented "Instruction CMP not yet implemented."
	267 Move [X31+240], V0
	268 Move [X31+248], V1
	269 Move [X31+17], V2
	270 Move [X31+288], W8
	271 Move X26, 0x6F2000
	272 Move X26, [X26+16]
	273 Move W19, W31
	274 NotImplemented "Instruction MOVI not yet implemented."
	275 Move X28, [X20+360]
	276 Compare X28, 0
	277 JumpIfEqual {812}
	278 Move W8, [X28+24]
	279 NotImplemented "Instruction CMP not yet implemented."
	280 Move X27, W19
	281 Add X24, X28, X27
	282 Add X24, X24, 32
	283 Move X9, [X24]
	284 Compare X9, 0
	285 JumpIfEqual {812}
	286 Move X0, [X26]
	287 Move X25, [X9+88]
	288 Move W10, [X0+224]
	289 Compare W10, 0
	290 JumpIfNotEqual {293}
	291 Call 0x1C17DFC
	292 Move W8, [X28+24]
	293 NotImplemented "Instruction CMP not yet implemented."
	294 Add X1, X31, 240
	295 Move S0, W31
	296 Move W2, 1
	297 Move W3, 1
	298 Move W5, 1
	299 Move X0, X24
	300 Move W4, W31
	301 Move X6, X25
	302 Move X7, X31
	303 Call RenderingUtils.ReAllocateIfNeeded, X0, X1, X2, X3, X4, X5, V0, X6
	304 Move X8, [X20+352]
	305 Compare X8, 0
	306 JumpIfEqual {812}
	307 Move W9, [X8+24]
	308 NotImplemented "Instruction CMP not yet implemented."
	309 Add X0, X8, X27
	310 Add X0, X0, 32
	311 Move X8, [X0]
	312 Compare X8, 0
	313 JumpIfEqual {812}
	314 Move X6, [X8+88]
	315 Add X1, X31, 240
	316 Move S0, W31
	317 Move W2, 1
	318 Move W3, 1
	319 Move W5, 1
	320 Move W4, W31
	321 Move X7, X31
	322 Call RenderingUtils.ReAllocateIfNeeded, X0, X1, X2, X3, X4, X5, V0, X6
	323 Move V0, [X31+240]
	324 Add W19, W19, 1
	325 NotImplemented "Instruction CMP not yet implemented."
	326 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	327 NotImplemented "Instruction SMAX not yet implemented."
	328 Move [X31+240], D0
	329 Move X8, [X20+352]
	330 Compare X8, 0
	331 JumpIfEqual {812}
	332 Move W9, [X8+24]
	333 Compare W9, 0
	334 JumpIfEqual {813}
	335 Move X9, 0x6F0000
	336 Move X9, [X9+3624]
	337 Move X24, [X8+32]
	338 Move X0, [X9]
	339 Move W9, [X0+224]
	340 Compare W9, 0
	341 JumpIfNotEqual {343}
	342 Call 0x1C17DFC
	343 Move W3, 2
	344 Move X0, X21
	345 Move X1, X23
	346 Move X2, X24
	347 Move W4, W31
	348 Move X5, X22
	349 Move W6, W31
	350 Move X7, X31
	351 Call Blitter.BlitCameraTexture, X0, X1, X2, X3, X4, X5, X6
	352 Move X8, [X20+352]
	353 Compare X8, 0
	354 JumpIfEqual {812}
	355 Move W9, [X8+24]
	356 Compare W9, 0
	357 JumpIfEqual {813}
	358 NotImplemented "Instruction CMP not yet implemented."
	359 Add X8, X8, 32
	360 Move W19, W29
	361 Move W25, 1
	362 Move W26, 40
	363 Move X9, [X20+360]
	364 Compare X9, 0
	365 JumpIfEqual {812}
	366 Move W10, [X9+24]
	367 NotImplemented "Instruction CMP not yet implemented."
	368 Move X10, 0x6F0000
	369 Move X10, [X10+3624]
	370 Move X23, [X8]
	371 Move X24, [X9]
	372 Move X0, [X10]
	373 Move W8, [X0+224]
	374 Compare W8, 0
	375 JumpIfNotEqual {377}
	376 Call 0x1C17DFC
	377 Move W3, 2
	378 Move W6, 1
	379 Move X0, X21
	380 Move X1, X23
	381 Move X2, X24
	382 Move W4, W31
	383 Move X5, X22
	384 Move X7, X31
	385 Call Blitter.BlitCameraTexture, X0, X1, X2, X3, X4, X5, X6
	386 Move X8, [X20+360]
	387 Compare X8, 0
	388 JumpIfEqual {812}
	389 Move W9, [X8+24]
	390 NotImplemented "Instruction CMP not yet implemented."
	391 Move X9, [X20+352]
	392 Compare X9, 0
	393 JumpIfEqual {812}
	394 Move W10, [X9+24]
	395 NotImplemented "Instruction CMP not yet implemented."
	396 Move X1, [X8]
	397 Move X2, [X9]
	398 Move W3, 2
	399 Move W6, 2
	400 Move X0, X21
	401 Move W4, W31
	402 Move X5, X22
	403 Move X7, X31
	404 Call Blitter.BlitCameraTexture, X0, X1, X2, X3, X4, X5, X6
	405 Move X8, [X20+352]
	406 Compare X8, 0
	407 JumpIfEqual {812}
	408 Move W9, [X8+24]
	409 NotImplemented "Instruction CMP not yet implemented."
	410 Add X25, X25, 1
	411 Add X8, X8, X26
	412 NotImplemented "Instruction CMP not yet implemented."
	413 Add X26, X26, 8
	414 Move X25, 0x6F4000
	415 Move X25, [X25+1360]
	416 Subtract W8, W29, 2
	417 Move W8, W8
	418 Move X9, 1
	419 Add X10, X8, 1
	420 Move X29, X31
	421 Add X27, X8, 4
	422 Add X19, X9, X8
	423 Move X8, W10
	424 Move [X31+312], X10
	425 Move [X31+24], X8
	426 Compare X29, 0
	427 JumpIfEqual {438}
	428 Move X9, [X20+360]
	429 Compare X9, 0
	430 JumpIfEqual {812}
	431 Move W8, [X9+24]
	432 Subtract X10, X27, 3
	433 NotImplemented "Instruction CMP not yet implemented."
	434 Move X8, [X20+352]
	435 Compare X8, 0
	436 JumpIfEqual {812}
	437 Add X9, X9, X19
	438 Move X8, [X20+352]
	439 Compare X8, 0
	440 JumpIfEqual {812}
	441 Move W9, [X8+24]
	442 Move X10, [X31+312]
	443 NotImplemented "Instruction CMP not yet implemented."
	444 Move X9, [X31+24]
	445 Add X9, X8, X9
	446 Move W10, [X8+24]
	447 Subtract X28, X27, 4
	448 Add X9, X9, 32
	449 NotImplemented "Instruction CMP not yet implemented."
	450 Move X10, [X20+360]
	451 Compare X10, 0
	452 JumpIfEqual {812}
	453 Move W11, [X10+24]
	454 NotImplemented "Instruction CMP not yet implemented."
	455 Move X0, [X25]
	456 Move X26, [X9]
	457 Move X23, [X8]
	458 Move X24, [X10]
	459 Move W8, [X0+224]
	460 Compare W8, 0
	461 JumpIfNotEqual {464}
	462 Call 0x1C17DFC
	463 Move X0, [X25]
	464 Move X8, [X0+184]
	465 Move X0, X26
	466 Move X1, X31
	467 Move W25, [X8+76]
	468 Add X8, X31, 120
	469 Call RTHandle.op_Implicit, X0
	470 NotImplemented "Instruction LDUR not yet implemented."
	471 NotImplemented "Instruction LDUR not yet implemented."
	472 Move X8, [X31+152]
	473 Move [X31+160], V0
	474 Move [X31+168], V1
	475 Move [X31+192], X8
	476 Compare X21, 0
	477 JumpIfEqual {812}
	478 Move V0, [X31+160]
	479 Move V1, [X31+176]
	480 Move X8, [X31+192]
	481 Add X2, X31, 80
	482 Move X0, X21
	483 Move W1, W25
	484 Move X3, X31
	485 Move [X31+80], V0
	486 Move [X31+88], V1
	487 Move [X31+112], X8
	488 Call CommandBuffer.SetGlobalTexture, X0, X1, X2
	489 Move X8, 0x6EF000
	490 Move X8, [X8+3624]
	491 Move X0, [X8]
	492 Move W8, [X0+224]
	493 Compare W8, 0
	494 JumpIfNotEqual {496}
	495 Call 0x1C17DFC
	496 Move W3, 2
	497 Move W6, 3
	498 Move X0, X21
	499 Move X1, X23
	500 Move X2, X24
	501 Move W4, W31
	502 Move X5, X22
	503 Move X7, X31
	504 Call Blitter.BlitCameraTexture, X0, X1, X2, X3, X4, X5, X6
	505 Move X25, 0x6F3000
	506 Move X25, [X25+1360]
	507 Move X8, INVALID
	508 Subtract X27, X27, 1
	509 Add X29, X29, 1
	510 NotImplemented "Instruction CMP not yet implemented."
	511 Add X19, X19, X8
	512 Move X8, [X20+448]
	513 Compare X8, 0
	514 JumpIfEqual {812}
	515 Move X0, [X8+96]
	516 Move X23, [X31+16]
	517 Compare X0, 0
	518 JumpIfEqual {812}
	519 Move X8, [X0]
	520 Move X19, 0x6F0000
	521 Move X9, [X8+536]
	522 Move X1, [X8+544]
	523 Move X19, [X19+1120]
	524 NotImplemented "Instruction BLR not yet implemented."
	525 Move X0, X31
	526 Move V8, V1
	527 Move V9, V2
	528 Move V10, V3
	529 Call Mathf.GammaToLinearSpace, V0
	530 Move V11, V0
	531 Move V0, V8
	532 Move X0, X31
	533 Call Mathf.GammaToLinearSpace, V0
	534 Move V8, V0
	535 Move V0, V9
	536 Move X0, X31
	537 Call Mathf.GammaToLinearSpace, V0
	538 Move X0, [X19]
	539 Move [X31+224], S11
	540 Move [X31+232], S8
	541 Move [X31+232], S0
	542 Move [X31+240], S10
	543 Move W8, [X0+224]
	544 Compare W8, 0
	545 JumpIfNotEqual {547}
	546 Call 0x1C17DFC
	547 Add X0, X31, 224
	548 Move X1, X31
	549 Call ColorUtils.Luminance, X0
	550 NotImplemented "Instruction FCMP not yet implemented."
	551 Move S1, [X31+224]
	552 Move S2, [X31+228]
	553 Move S3, [X31+232]
	554 Move S4, [X31+236]
	555 Move S5, 1
	556 NotImplemented "Instruction FDIV not yet implemented."
	557 Multiply S0, S5, S1
	558 Multiply S1, S5, S2
	559 Multiply S2, S5, S3
	560 Multiply S3, S5, S4
	561 Move S0, 1
	562 Move S1, 1
	563 Move S2, 1
	564 Move S3, 1
	565 Move [X31+224], S0
	566 Move [X31+232], S1
	567 Move [X31+232], S2
	568 Move [X31+240], S3
	569 Move X8, [X20+448]
	570 Compare X8, 0
	571 JumpIfEqual {812}
	572 Move X0, [X8+72]
	573 Compare X0, 0
	574 JumpIfEqual {812}
	575 Move X8, [X0]
	576 Move X9, [X8+536]
	577 Move X1, [X8+544]
	578 NotImplemented "Instruction BLR not yet implemented."
	579 Move X0, [X25]
	580 Move S10, [X31+224]
	581 Move S9, [X31+228]
	582 Move V8, [X31+232]
	583 Move V11, V0
	584 Move W8, [X0+224]
	585 Compare W8, 0
	586 JumpIfNotEqual {588}
	587 Call 0x1C17DFC
	588 Compare X23, 0
	589 JumpIfEqual {812}
	590 Move X8, [X25]
	591 Move X0, X23
	592 Move V0, V11
	593 Move V1, V10
	594 Move X8, [X8+184]
	595 Move V2, V9
	596 Move V3, V8
	597 Move X2, X31
	598 Move W1, [X8+80]
	599 Call Material.SetVector, X0, X1, X2
	600 Move X8, [X25]
	601 Move W9, [X20+516]
	602 Move S0, 1
	603 Move S1, W31
	604 Move X8, [X8+184]
	605 NotImplemented "Instruction CMP not yet implemented."
	606 NotImplemented "Instruction FCSEL not yet implemented."
	607 Move X0, X23
	608 Move W1, [X8+84]
	609 Move X2, X31
	610 Call Material.SetFloat, X0, X1, V0
	611 Move X0, [X25]
	612 Move W8, [X0+224]
	613 Compare W8, 0
	614 JumpIfNotEqual {617}
	615 Call 0x1C17DFC
	616 Move X0, [X25]
	617 Move X8, [X20+360]
	618 Compare X8, 0
	619 JumpIfEqual {812}
	620 Move W9, [X8+24]
	621 Compare W9, 0
	622 JumpIfEqual {813}
	623 Move X9, [X0+184]
	624 Move X0, [X8+32]
	625 Add X8, X31, 120
	626 Move X1, X31
	627 Move W22, [X9+88]
	628 Call RTHandle.op_Implicit, X0
	629 NotImplemented "Instruction LDUR not yet implemented."
	630 NotImplemented "Instruction LDUR not yet implemented."
	631 Move X8, [X31+152]
	632 Move [X31+160], V0
	633 Move [X31+168], V1
	634 Move [X31+192], X8
	635 Compare X21, 0
	636 JumpIfEqual {812}
	637 Move V0, [X31+160]
	638 Move V1, [X31+176]
	639 Move X8, [X31+192]
	640 Add X2, X31, 32
	641 Move X0, X21
	642 Move W1, W22
	643 Move X3, X31
	644 Move [X31+32], V0
	645 Move [X31+40], V1
	646 Move [X31+64], X8
	647 Call CommandBuffer.SetGlobalTexture, X0, X1, X2
	648 Move X8, [X20+448]
	649 Compare X8, 0
	650 JumpIfEqual {812}
	651 Move X0, [X8+128]
	652 Compare X0, 0
	653 JumpIfEqual {812}
	654 Move X8, [X0]
	655 Move X19, 0x690000
	656 Move X9, [X8+536]
	657 Move X1, [X8+544]
	658 Move X19, [X19+1432]
	659 NotImplemented "Instruction BLR not yet implemented."
	660 Move X8, [X19]
	661 Move X21, X0
	662 Move W9, [X8+224]
	663 Compare W9, 0
	664 JumpIfNotEqual {667}
	665 Move X0, X8
	666 Call 0x1C17DFC
	667 Move X0, X21
	668 Move X1, X31
	669 Move X2, X31
	670 Call Object.op_Equality, X0, X1
	671 Move TEMP, X0
	672 And TEMP, TEMP, 1
	673 Compare TEMP, 1
	674 JumpIfNotEqual {677}
	675 Move X0, X31
	676 Call Texture2D.get_blackTexture
	677 Move X8, [X20+448]
	678 Compare X8, 0
	679 JumpIfEqual {812}
	680 Move X0, [X8+128]
	681 Compare X0, 0
	682 JumpIfEqual {812}
	683 Move X8, [X0]
	684 Move X9, [X8+536]
	685 Move X1, [X8+544]
	686 NotImplemented "Instruction BLR not yet implemented."
	687 Move X21, X0
	688 Compare X0, 0
	689 JumpIfEqual {812}
	690 Move X8, [X21]
	691 Move X0, X21
	692 Move X9, [X8+392]
	693 Move X1, [X8+400]
	694 NotImplemented "Instruction BLR not yet implemented."
	695 Move X8, [X21]
	696 Move W22, W0
	697 Move X0, X21
	698 Move X9, [X8+424]
	699 Move X1, [X8+432]
	700 NotImplemented "Instruction BLR not yet implemented."
	701 Move X9, [X20+448]
	702 Compare X9, 0
	703 JumpIfEqual {812}
	704 Move W8, W0
	705 Move X0, [X9+136]
	706 Compare X0, 0
	707 JumpIfEqual {812}
	708 NotImplemented "Instruction SCVTF not yet implemented."
	709 Move X8, [X0]
	710 Move S2, [X20+224]
	711 Move S3, [X20+228]
	712 NotImplemented "Instruction SCVTF not yet implemented."
	713 NotImplemented "Instruction FDIV not yet implemented."
	714 Move X9, [X8+536]
	715 Move X1, [X8+544]
	716 NotImplemented "Instruction SCVTF not yet implemented."
	717 NotImplemented "Instruction SCVTF not yet implemented."
	718 NotImplemented "Instruction FDIV not yet implemented."
	719 NotImplemented "Instruction BLR not yet implemented."
	720 NotImplemented "Instruction FCMP not yet implemented."
	721 Move V8, V0
	722 NotImplemented "Instruction FDIV not yet implemented."
	723 Move S11, 1
	724 Move S0, 0.5
	725 Subtract S1, S11, S10
	726 Multiply S9, S1, S0
	727 Move S9, W31
	728 NotImplemented "Instruction FCMP not yet implemented."
	729 Move S10, 1
	730 NotImplemented "Instruction FDIV not yet implemented."
	731 Move S10, 1
	732 Subtract S0, S10, S11
	733 Move S1, 0.5
	734 Multiply S12, S0, S1
	735 Move S11, 1
	736 Move S12, W31
	737 Move X0, [X25]
	738 Move W8, [X0+224]
	739 Compare W8, 0
	740 JumpIfNotEqual {743}
	741 Call 0x1C17DFC
	742 Move X0, [X25]
	743 Move X8, [X0+184]
	744 Move X0, X23
	745 Move V0, V10
	746 Move V1, V11
	747 Move W1, [X8+96]
	748 Move V2, V9
	749 Move V3, V12
	750 Move X2, X31
	751 Call Material.SetVector, X0, X1, X2
	752 Move X8, [X25]
	753 Move X0, X23
	754 Move V0, V8
	755 Move X2, X31
	756 Move X8, [X8+184]
	757 Move W1, [X8+100]
	758 Call Material.SetFloat, X0, X1, V0
	759 Move X8, [X25]
	760 Move X0, X23
	761 Move X2, X21
	762 Move X3, X31
	763 Move X8, [X8+184]
	764 Move W1, [X8+92]
	765 Call Material.SetTexture, X0, X1, X2
	766 Move X8, [X20+448]
	767 Compare X8, 0
	768 JumpIfEqual {812}
	769 Move X22, 0x6F3000
	770 Move X0, [X8+104]
	771 Move X22, [X22+1680]
	772 Compare X0, 0
	773 JumpIfEqual {812}
	774 Move X8, [X0]
	775 Move X19, 0x6F3000
	776 Move X20, 0x6F3000
	777 Move X21, 0x6F3000
	778 Move X9, [X8+536]
	779 Move X1, [X8+544]
	780 Move X19, [X19+1696]
	781 Move X20, [X20+1688]
	782 Move X21, [X21+1664]
	783 NotImplemented "Instruction BLR not yet implemented."
	784 And W31, W0, 1
	785 NotImplemented "Instruction CSEL not yet implemented."
	786 NotImplemented "Instruction CSEL not yet implemented."
	787 NotImplemented "Instruction FCMP not yet implemented."
	788 NotImplemented "Instruction CSEL not yet implemented."
	789 Move X1, [X8]
	790 Move X0, X23
	791 Move X2, X31
	792 Call Material.EnableKeyword, X0, X1
	793 Move X20, [X31+432]
	794 Move X19, [X31+440]
	795 Move X22, [X31+416]
	796 Move X21, [X31+424]
	797 Move X24, [X31+400]
	798 Move X23, [X31+408]
	799 Move X26, [X31+384]
	800 Move X25, [X31+392]
	801 Move X28, [X31+368]
	802 Move X27, [X31+376]
	803 Move X29, [X31+352]
	804 Move X30, [X31+360]
	805 Move D9, [X31+336]
	806 Move D8, [X31+344]
	807 Move D11, [X31+320]
	808 Move D10, [X31+328]
	809 Move V12, [X31+304]
	810 Add X31, X31, 448
	811 Return 
	812 Call 0x1C17F20
	813 Call 0x1C17F28
	814 Move X0, 0x698000
	815 Move X0, [X0+1888]
	816 Call 0x1C17D08
	817 Call 0x1C17F10
	818 Move X1, X31
	819 Move X19, X0
	820 Call ArgumentOutOfRangeException..ctor, X0
	821 Move X0, 0x6F3000
	822 Move X0, [X0+1704]
	823 Call 0x1C17D08
	824 Move X1, X0
	825 Move X0, X19
	826 Call 0x1C17DEC

Method: System.Void SetupLensDistortion(UnityEngine.Material material, System.Boolean isSceneView)

Disassembly:
	0x03A64C30 LDR X0, [X19]
	0x03A64C34 LDR X28, [X24]
	0x03A64C38 LDR W8, [X0 + 0xE0]
	0x03A64C3C CBNZ W8, 0x3A64C44
	0x03A64C40 BL 0x1C16DFC
	0x03A64C44 MOVZ W3, 0x2
	0x03A64C48 MOV X0, X21
	0x03A64C4C MOV X1, X20
	0x03A64C50 MOV X2, X28
	0x03A64C54 MOV W4, W31
	0x03A64C58 MOV X5, X22
	0x03A64C5C MOV W6, W31
	0x03A64C60 MOV X7, X31
	0x03A64C64 BL 0x39E3120
	0x03A64C68 LDR X9, [X23 + 0x148]
	0x03A64C6C CBZ X9, 0x3A64F88
	0x03A64C70 LDR X8, [X23 + 0x218]
	0x03A64C74 LDR X10, [X9 + 0x48]
	0x03A64C78 LDUR V0, [X9 + 0x38]
	0x03A64C7C LDUR V1, [X9 + 0x28]
	0x03A64C80 STR X10, [X31 + 0x1B0]
	0x03A64C84 STP V1, V0, [X31 + 0x190]
	0x03A64C88 CBZ X8, 0x3A64F88
	0x03A64C8C LDP V0, V1, [X31 + 0x190]
	0x03A64C90 LDR X9, [X31 + 0x1B0]
	0x03A64C94 STP V0, V1, [X31 + 0x160]
	0x03A64C98 STR X9, [X31 + 0x180]
	0x03A64C9C LDR W9, [X8 + 0x18]
	0x03A64CA0 CBZ W9, 0x3A64F8C
	0x03A64CA4 LDR X9, [X31 + 0x180]
	0x03A64CA8 LDP V1, V0, [X31 + 0x160]
	0x03A64CAC STR X9, [X8 + 0x40]
	0x03A64CB0 STP V1, V0, [X8 + 0x20]
	0x03A64CB4 LDR X9, [X23 + 0x150]
	0x03A64CB8 CBZ X9, 0x3A64F88
	0x03A64CBC LDR X8, [X23 + 0x218]
	0x03A64CC0 LDR X10, [X9 + 0x48]
	0x03A64CC4 LDUR V0, [X9 + 0x38]
	0x03A64CC8 LDUR V1, [X9 + 0x28]
	0x03A64CCC STR X10, [X31 + 0x150]
	0x03A64CD0 STP V1, V0, [X31 + 0x130]
	0x03A64CD4 CBZ X8, 0x3A64F88
	0x03A64CD8 LDP V0, V1, [X31 + 0x130]
	0x03A64CDC LDR X9, [X31 + 0x150]
	0x03A64CE0 STP V0, V1, [X31 + 0x100]
	0x03A64CE4 STR X9, [X31 + 0x120]
	0x03A64CE8 LDR W9, [X8 + 0x18]
	0x03A64CEC CMP W9, 0x1
	0x03A64CF0 B.LS 0x3A64F8C
	0x03A64CF4 LDR X9, [X31 + 0x120]
	0x03A64CF8 LDP V1, V0, [X31 + 0x100]
	0x03A64CFC STR X9, [X8 + 0x68]
	0x03A64D00 STUR V0, [X8 + 0x58]
	0x03A64D04 STUR V1, [X8 + 0x48]
	0x03A64D08 LDR X8, [X24]
	0x03A64D0C CBZ X8, 0x3A64F88
	0x03A64D10 LDR X9, [X29]
	0x03A64D14 LDUR V0, [X8 + 0x28]
	0x03A64D18 LDUR V1, [X8 + 0x38]
	0x03A64D1C LDR X8, [X8 + 0x48]
	0x03A64D20 LDR X9, [X9 + 0xB8]
	0x03A64D24 ADD X2, X31, 0xD0
	0x03A64D28 MOV X0, X21
	0x03A64D2C MOV X3, X31
	0x03A64D30 LDR W1, [X9 + 0x10]
	0x03A64D34 STP V0, V1, [X31 + 0xD0]
	0x03A64D38 STR X8, [X31 + 0xF0]
	0x03A64D3C BL 0x3C4FCFC
	0x03A64D40 LDR X1, [X23 + 0x218]
	0x03A64D44 LDR X2, [X23 + 0x148]
	0x03A64D48 MOV X0, X21
	0x03A64D4C MOV X3, X31
	0x03A64D50 BL 0x39E80A0
	0x03A64D54 CBZ X20, 0x3A64F88
	0x03A64D58 LDRB W8, [X20 + 0xA8]
	0x03A64D5C CBZ W8, 0x3A64D8C
	0x03A64D60 ADD X8, X31, 0x2A8
	0x03A64D64 MOV X0, X20
	0x03A64D68 MOV X1, X31
	0x03A64D6C BL 0x39D48AC
	0x03A64D70 LDR V8, [X31 + 0x2C8]
	0x03A64D74 ADD X8, X31, 0x2A8
	0x03A64D78 MOV X0, X20
	0x03A64D7C MOV X1, X31
	0x03A64D80 BL 0x39D48AC
	0x03A64D84 LDR V9, [X31 + 0x2CC]
	0x03A64D88 B 0x3A64DC0
	0x03A64D8C ADRP X23, 0x97D000
	0x03A64D90 LDRB W8, [X23 + 0xA48]
	0x03A64D94 CBNZ W8, 0x3A64DAC
	0x03A64D98 ADRP X0, 0x697000
	0x03A64D9C LDR X0, [X0 + 0xF08]
	0x03A64DA0 BL 0x1C16CF4
	0x03A64DA4 MOVZ W8, 0x1
	0x03A64DA8 STRB W8, [X23 + 0xA48]
	0x03A64DAC ADRP X8, 0x697000
	0x03A64DB0 LDR X8, [X8 + 0xF08]
	0x03A64DB4 LDR X8, [X8]
	0x03A64DB8 LDR X8, [X8 + 0xB8]
	0x03A64DBC LDP S8, S9, [X8 + 0x8]
	0x03A64DC0 LDR X0, [X19]
	0x03A64DC4 LDR W8, [X0 + 0xE0]
	0x03A64DC8 CBNZ W8, 0x3A64DD0
	0x03A64DCC BL 0x1C16DFC
	0x03A64DD0 FMOV S2, W31
	0x03A64DD4 FMOV S3, W31
	0x03A64DD8 MOVZ W3, 0x1
	0x03A64DDC MOV X0, X21
	0x03A64DE0 MOV X1, X20
	0x03A64DE4 MOV V0.16B, V8.16B
	0x03A64DE8 MOV V1.16B, V9.16B
	0x03A64DEC MOV X2, X22
	0x03A64DF0 MOV X4, X31
	0x03A64DF4 BL 0x39E23B4
	0x03A64DF8 LDR X0, [X29]
	0x03A64DFC LDR W8, [X0 + 0xE0]
	0x03A64E00 CBNZ W8, 0x3A64E08
	0x03A64E04 BL 0x1C16DFC
	0x03A64E08 LDR X8, [X31 + 0x328]
	0x03A64E0C LDR X8, [X8]
	0x03A64E10 CBZ X8, 0x3A64F88
	0x03A64E14 LDR X9, [X29]
	0x03A64E18 LDUR V0, [X8 + 0x28]
	0x03A64E1C LDUR V1, [X8 + 0x38]
	0x03A64E20 LDR X8, [X8 + 0x48]
	0x03A64E24 LDR X9, [X9 + 0xB8]
	0x03A64E28 ADD X2, X31, 0xA0
	0x03A64E2C MOV X0, X21
	0x03A64E30 MOV X3, X31
	0x03A64E34 LDR W1, [X9 + 0x14]
	0x03A64E38 STP V0, V1, [X31 + 0xA0]
	0x03A64E3C STR X8, [X31 + 0xC0]
	0x03A64E40 BL 0x3C4FCFC
	0x03A64E44 LDR X8, [X29]
	0x03A64E48 MOV X0, X20
	0x03A64E4C MOV X1, X31
	0x03A64E50 LDR X8, [X8 + 0xB8]
	0x03A64E54 LDR W23, [X8 + 0x44]
	0x03A64E58 ADD X8, X31, 0x2A8
	0x03A64E5C BL 0x39CDF64
	0x03A64E60 LDP V0, V1, [X26 + 0x70]
	0x03A64E64 LDR X8, [X31 + 0x2C8]
	0x03A64E68 ADD X2, X31, 0x70
	0x03A64E6C MOV X0, X21
	0x03A64E70 MOV W1, W23
	0x03A64E74 MOV X3, X31
	0x03A64E78 STP V0, V1, [X31 + 0x70]
	0x03A64E7C STR X8, [X31 + 0x90]
	0x03A64E80 BL 0x3C4FCFC
	0x03A64E84 LDR X1, [X25]
	0x03A64E88 LDR X2, [X27]
	0x03A64E8C MOVZ W3, 0x2
	0x03A64E90 MOVZ W6, 0x2
	0x03A64E94 MOV X0, X21
	0x03A64E98 MOV W4, W31
	0x03A64E9C MOV X5, X22
	0x03A64EA0 MOV X7, X31
	0x03A64EA4 BL 0x39E3120
	0x03A64EA8 LDR X1, [X27]
	0x03A64EAC LDR X2, [X25]
	0x03A64EB0 MOVZ W3, 0x2
	0x03A64EB4 MOVZ W6, 0x3
	0x03A64EB8 MOV X0, X21
	0x03A64EBC MOV W4, W31
	0x03A64EC0 MOV X5, X22
	0x03A64EC4 MOV X7, X31
	0x03A64EC8 BL 0x39E3120
	0x03A64ECC LDR X8, [X25]
	0x03A64ED0 CBZ X8, 0x3A64F88
	0x03A64ED4 LDR X9, [X29]
	0x03A64ED8 LDUR V0, [X8 + 0x28]
	0x03A64EDC LDUR V1, [X8 + 0x38]
	0x03A64EE0 LDR X8, [X8 + 0x48]
	0x03A64EE4 LDR X9, [X9 + 0xB8]
	0x03A64EE8 ADD X2, X31, 0x40
	0x03A64EEC MOV X0, X21
	0x03A64EF0 MOV X3, X31
	0x03A64EF4 LDR W1, [X9 + 0x44]
	0x03A64EF8 STP V0, V1, [X31 + 0x40]

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+16], D15
	003 Move [X31+24], D14
	004 Move [X31+32], D13
	005 Move [X31+40], D12
	006 Move [X31+48], D11
	007 Move [X31+56], D10
	008 Move [X31+64], D9
	009 Move [X31+72], D8
	010 Move [X31+80], X30
	011 Move [X31+96], X22
	012 Move [X31+104], X21
	013 Move [X31+112], X20
	014 Move [X31+120], X19
	015 Move X22, 0x97F000
	016 Move W8, [X22+587]
	017 Move W20, W2
	018 Move X19, X1
	019 Move X21, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {32}
	024 Move X0, 0x6F3000
	025 Move X0, [X0+1360]
	026 Call 0x1C17CF4
	027 Move X0, 0x6F3000
	028 Move X0, [X0+1736]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X22+587], W8
	032 Move X8, [X21+456]
	033 Compare X8, 0
	034 JumpIfEqual {223}
	035 Move X0, [X8+56]
	036 Compare X0, 0
	037 JumpIfEqual {223}
	038 Move X8, [X0]
	039 Move X9, [X8+536]
	040 Move X1, [X8+544]
	041 NotImplemented "Instruction BLR not yet implemented."
	042 Move W8, 0x42C80000
	043 Move S2, W8
	044 Move X8, -49778688
	045 Multiply S0, S0, S2
	046 Move V2, [X8+472]
	047 Move S1, 1
	048 Move X8, -49778688
	049 NotImplemented "Instruction FABS not yet implemented."
	050 NotImplemented "Instruction FMAXNM not yet implemented."
	051 Move V1, [X8+260]
	052 Move W8, 0x43200000
	053 Multiply S0, S0, S2
	054 Move S2, W8
	055 NotImplemented "Instruction FMIN not yet implemented."
	056 Multiply S13, S0, S1
	057 Move S0, 0.5
	058 Multiply S0, S13, S0
	059 Call 0x3EB2E50
	060 Move X8, [X21+456]
	061 Compare X8, 0
	062 JumpIfEqual {223}
	063 Move X0, [X8+80]
	064 Compare X0, 0
	065 JumpIfEqual {223}
	066 Move X8, [X0]
	067 Move V10, V0
	068 Move X9, [X8+536]
	069 Move X1, [X8+544]
	070 NotImplemented "Instruction BLR not yet implemented."
	071 Move X22, 0x97E000
	072 Move W8, [X22+2632]
	073 Move V8, V0
	074 Move V14, V1
	075 Compare W8, 0
	076 JumpIfNotEqual {82}
	077 Move X0, 0x698000
	078 Move X0, [X0+3848]
	079 Call 0x1C17CF4
	080 Move W8, 1
	081 Move [X22+2632], W8
	082 Move X8, [X21+456]
	083 Compare X8, 0
	084 JumpIfEqual {223}
	085 Move X0, [X8+64]
	086 Compare X0, 0
	087 JumpIfEqual {223}
	088 Move X8, 0x698000
	089 Move X8, [X8+3848]
	090 Move X9, [X0]
	091 Move X8, [X8]
	092 Move X10, [X9+536]
	093 Move X1, [X9+544]
	094 Move X8, [X8+184]
	095 Move S11, [X8+8]
	096 Move S15, [X8+12]
	097 NotImplemented "Instruction BLR not yet implemented."
	098 Move X8, [X21+456]
	099 Compare X8, 0
	100 JumpIfEqual {223}
	101 Move X0, [X8+72]
	102 Move [X31+4], S0
	103 Compare X0, 0
	104 JumpIfEqual {223}
	105 Move X8, [X0]
	106 Move X9, [X8+536]
	107 Move X1, [X8+544]
	108 NotImplemented "Instruction BLR not yet implemented."
	109 Move X8, [X21+456]
	110 Compare X8, 0
	111 JumpIfEqual {223}
	112 Move X0, [X8+56]
	113 Compare X0, 0
	114 JumpIfEqual {223}
	115 Move X8, [X0]
	116 Move V12, V0
	117 Move V9, V8
	118 Move X9, [X8+536]
	119 Move X1, [X8+544]
	120 NotImplemented "Instruction BLR not yet implemented."
	121 Move X8, [X21+456]
	122 Move S1, 1
	123 NotImplemented "Instruction FDIV not yet implemented."
	124 NotImplemented "Instruction FCMP not yet implemented."
	125 NotImplemented "Instruction FCSEL not yet implemented."
	126 Compare X8, 0
	127 JumpIfEqual {223}
	128 Move X0, [X8+88]
	129 Compare X0, 0
	130 JumpIfEqual {223}
	131 Move X8, [X0]
	132 Move X9, [X8+536]
	133 Move X1, [X8+544]
	134 NotImplemented "Instruction BLR not yet implemented."
	135 Move X8, [X21+456]
	136 Compare X8, 0
	137 JumpIfEqual {223}
	138 Move X0, [X8+56]
	139 Compare X0, 0
	140 JumpIfEqual {223}
	141 Move X8, [X0]
	142 Move X22, 0x6F3000
	143 Move V13, V0
	144 Add S10, S10, S10
	145 Move X9, [X8+536]
	146 Move X1, [X8+544]
	147 Move X22, [X22+1360]
	148 NotImplemented "Instruction BLR not yet implemented."
	149 Move W8, 0x42C80000
	150 Move X0, [X22]
	151 Move S1, 1
	152 Move S2, W8
	153 NotImplemented "Instruction FDIV not yet implemented."
	154 Multiply S0, S0, S2
	155 Move [X31+88], S10
	156 Move [X31+96], S8
	157 Move [X31+8], S0
	158 Move [X31+16], S1
	159 Move W8, [X0+224]
	160 Compare W8, 0
	161 JumpIfNotEqual {163}
	162 Call 0x1C17DFC
	163 Compare X19, 0
	164 JumpIfEqual {223}
	165 Move X8, [X22]
	166 Move X9, -49782784
	167 Move V3, [X9+3880]
	168 Move V2, [X31+4]
	169 Move X8, [X8+184]
	170 Add S0, S9, S9
	171 Add S1, S14, S14
	172 Subtract S0, S0, S11
	173 Move W1, [X8+104]
	174 Subtract S1, S1, S15
	175 NotImplemented "Instruction FMAXNM not yet implemented."
	176 NotImplemented "Instruction FMAXNM not yet implemented."
	177 Move X0, X19
	178 Move X2, X31
	179 Call Material.SetVector, X0, X1, X2
	180 Move X8, [X22]
	181 Move S1, [X31+88]
	182 Move S0, [X31+92]
	183 Move S3, [X31+8]
	184 Move S2, [X31+12]
	185 Move X0, X19
	186 Move X8, [X8+184]
	187 Move X2, X31
	188 Move W1, [X8+108]
	189 Call Material.SetVector, X0, X1, X2
	190 Move X0, [X21+456]
	191 Compare X0, 0
	192 JumpIfEqual {223}
	193 Call LensDistortion.IsActive, X0
	194 Move TEMP, X0
	195 And TEMP, TEMP, 1
	196 Compare TEMP, 1
	197 JumpIfNotEqual {208}
	198 Move TEMP, X20
	199 And TEMP, TEMP, 1
	200 Compare TEMP, 1
	201 JumpIfEqual {208}
	202 Move X8, 0x6F3000
	203 Move X8, [X8+1736]
	204 Move X0, X19
	205 Move X2, X31
	206 Move X1, [X8]
	207 Call Material.EnableKeyword, X0, X1
	208 Move X20, [X31+112]
	209 Move X19, [X31+120]
	210 Move X22, [X31+96]
	211 Move X21, [X31+104]
	212 Move X30, [X31+80]
	213 Move D9, [X31+64]
	214 Move D8, [X31+72]
	215 Move D11, [X31+48]
	216 Move D10, [X31+56]
	217 Move D13, [X31+32]
	218 Move D12, [X31+40]
	219 Move D15, [X31+16]
	220 Move D14, [X31+24]
	221 Add X31, X31, 128
	222 Return 
	223 Call 0x1C17F20

Method: System.Void SetupChromaticAberration(UnityEngine.Material material)

Disassembly:
	0x03A64EFC STR X8, [X31 + 0x60]
	0x03A64F00 BL 0x3C4FCFC
	0x03A64F04 LDR X8, [X24]
	0x03A64F08 CBZ X8, 0x3A64F88
	0x03A64F0C LDR X9, [X29]
	0x03A64F10 LDUR V0, [X8 + 0x28]
	0x03A64F14 LDUR V1, [X8 + 0x38]
	0x03A64F18 LDR X8, [X8 + 0x48]
	0x03A64F1C LDR X9, [X9 + 0xB8]
	0x03A64F20 ADD X2, X31, 0x10
	0x03A64F24 MOV X0, X21
	0x03A64F28 MOV X3, X31
	0x03A64F2C LDR W1, [X9 + 0x10]
	0x03A64F30 STP V0, V1, [X31 + 0x10]
	0x03A64F34 STR X8, [X31 + 0x30]
	0x03A64F38 BL 0x3C4FCFC
	0x03A64F3C LDR X2, [X31 + 0x8]
	0x03A64F40 MOVZ W3, 0x2
	0x03A64F44 MOVZ W6, 0x4
	0x03A64F48 MOV X0, X21
	0x03A64F4C MOV X1, X20
	0x03A64F50 MOV W4, W31
	0x03A64F54 MOV X5, X22
	0x03A64F58 MOV X7, X31
	0x03A64F5C BL 0x39E3120
	0x03A64F60 ADD X31, X31, 0x320
	0x03A64F64 LDP X20, X19, [X31 + 0x70]
	0x03A64F68 LDP X22, X21, [X31 + 0x60]
	0x03A64F6C LDP X24, X23, [X31 + 0x50]
	0x03A64F70 LDP X26, X25, [X31 + 0x40]
	0x03A64F74 LDP X28, X27, [X31 + 0x30]
	0x03A64F78 LDP X29, X30, [X31 + 0x20]
	0x03A64F7C LDP D9, D8, [X31 + 0x10]
	0x03A64F80 LDR V10, [X31], #0x80
	0x03A64F84 RET
	0x03A64F88 BL 0x1C16F20
	0x03A64F8C BL 0x1C16F28
	0x03A64F90 SUB X31, X31, 0x1F0
	0x03A64F94 STP D11, D10, [X31 + 0x170]
	0x03A64F98 STP D9, D8, [X31 + 0x180]
	0x03A64F9C STP X29, X30, [X31 + 0x190]
	0x03A64FA0 STP X28, X27, [X31 + 0x1A0]
	0x03A64FA4 STP X26, X25, [X31 + 0x1B0]
	0x03A64FA8 STP X24, X23, [X31 + 0x1C0]
	0x03A64FAC STP X22, X21, [X31 + 0x1D0]
	0x03A64FB0 STP X20, X19, [X31 + 0x1E0]
	0x03A64FB4 ADRP X19, 0x97E000
	0x03A64FB8 LDRB W8, [X19 + 0x243]
	0x03A64FBC MOV X20, X3
	0x03A64FC0 MOV X29, X2
	0x03A64FC4 MOV X21, X1
	0x03A64FC8 MOV X23, X0
	0x03A64FCC TBNZ X8, 0x0, 0x3A65044
	0x03A64FD0 ADRP X0, 0x6EE000
	0x03A64FD4 LDR X0, [X0 + 0xE28]
	0x03A64FD8 BL 0x1C16CF4
	0x03A64FDC ADRP X0, 0x6B7000
	0x03A64FE0 LDR X0, [X0 + 0x8F8]
	0x03A64FE4 BL 0x1C16CF4
	0x03A64FE8 ADRP X0, 0x6F0000
	0x03A64FEC LDR X0, [X0 + 0x958]
	0x03A64FF0 BL 0x1C16CF4
	0x03A64FF4 ADRP X0, 0x6F0000
	0x03A64FF8 LDR X0, [X0 + 0x10]
	0x03A64FFC BL 0x1C16CF4
	0x03A65000 ADRP X0, 0x6F1000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x97F000
	007 Move X21, 0x6F3000
	008 Move W8, [X22+588]
	009 Move X21, [X21+1360]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x6F3000
	017 Move X0, [X0+1360]
	018 Call 0x1C17CF4
	019 Move X0, 0x6F3000
	020 Move X0, [X0+1744]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+588], W8
	024 Move X0, [X21]
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {30}
	028 Call 0x1C17DFC
	029 Move X0, [X21]
	030 Move X8, [X20+464]
	031 Compare X8, 0
	032 JumpIfEqual {81}
	033 Move X8, [X8+56]
	034 Compare X8, 0
	035 JumpIfEqual {81}
	036 Move X9, [X0+184]
	037 Move X10, [X8]
	038 Move X0, X8
	039 Move W21, [X9+112]
	040 Move X9, [X10+536]
	041 Move X1, [X10+544]
	042 NotImplemented "Instruction BLR not yet implemented."
	043 Compare X19, 0
	044 JumpIfEqual {81}
	045 Move X8, -49778688
	046 Move V1, [X8+512]
	047 Move X0, X19
	048 Move W1, W21
	049 Move X2, X31
	050 Multiply S0, S0, S1
	051 Call Material.SetFloat, X0, X1, V0
	052 Move X8, [X20+464]
	053 Compare X8, 0
	054 JumpIfEqual {81}
	055 Move X0, [X8+56]
	056 Compare X0, 0
	057 JumpIfEqual {81}
	058 Move X8, [X0]
	059 Move X9, [X8+536]
	060 Move X1, [X8+544]
	061 NotImplemented "Instruction BLR not yet implemented."
	062 NotImplemented "Instruction FCMP not yet implemented."
	063 Move X8, 0x6F3000
	064 Move X8, [X8+1744]
	065 Move X0, X19
	066 Move X20, [X31+32]
	067 Move X19, [X31+40]
	068 Move X22, [X31+16]
	069 Move X21, [X31+24]
	070 Move X1, [X8]
	071 Move X2, X31
	072 Move X30, [X31+48]
	073 Call Material.EnableKeyword, X0, X1
	074 Return 
	075 Move X20, [X31+32]
	076 Move X19, [X31+40]
	077 Move X22, [X31+16]
	078 Move X21, [X31+24]
	079 Move X30, [X31+48]
	080 Return 
	081 Call 0x1C17F20

Method: System.Void SetupVignette(UnityEngine.Material material, UnityEngine.Experimental.Rendering.XRPass xrPass)

Disassembly:
	0x03A65004 LDR X0, [X0 + 0x550]
	0x03A65008 BL 0x1C16CF4
	0x03A6500C ADRP X0, 0x6F1000
	0x03A65010 LDR X0, [X0 + 0x610]
	0x03A65014 BL 0x1C16CF4
	0x03A65018 ADRP X0, 0x6F1000
	0x03A6501C LDR X0, [X0 + 0x708]
	0x03A65020 BL 0x1C16CF4
	0x03A65024 ADRP X0, 0x6F1000
	0x03A65028 LDR X0, [X0 + 0x718]
	0x03A6502C BL 0x1C16CF4
	0x03A65030 ADRP X0, 0x6F1000
	0x03A65034 LDR X0, [X0 + 0x720]
	0x03A65038 BL 0x1C16CF4
	0x03A6503C MOVZ W8, 0x1
	0x03A65040 STRB W8, [X19 + 0x243]
	0x03A65044 MOVI V0.2D, 0x0
	0x03A65048 STR W31, [X31 + 0x160]
	0x03A6504C STP V0, V0, [X31 + 0x140]
	0x03A65050 STR V0, [X31 + 0x13]
	0x03A65054 LDR X8, [X23 + 0x198]
	0x03A65058 CBZ X8, 0x3A655B8
	0x03A6505C MOV X19, X23
	0x03A65060 LDR X22, [X8 + 0x28]
	0x03A65064 LDR W9, [X19 + 0xE0]!
	0x03A65068 LDR W10, [X19 + 0x4]
	0x03A6506C LDR X8, [X19 + 0xC8]
	0x03A65070 CMP W9, 0x0
	0x03A65074 CINC W24, W9, LT
	0x03A65078 CMP W10, 0x0
	0x03A6507C CINC W26, W10, LT
	0x03A65080 CBZ X8, 0x3A655B8
	0x03A65084 LDR X0, [X8 + 0x70]
	0x03A65088 CBZ X0, 0x3A655B8
	0x03A6508C LDR X8, [X0]
	0x03A65090 LDR X9, [X8 + 0x218]
	0x03A65094 LDR X1, [X8 + 0x220]
	0x03A65098 BLR X9
	0x03A6509C LDR X8, [X23 + 0x1A8]
	0x03A650A0 CBZ X8, 0x3A655B8
	0x03A650A4 LDR X0, [X8 + 0x70]
	0x03A650A8 CBZ X0, 0x3A655B8
	0x03A650AC LDR X8, [X0]
	0x03A650B0 MOV V8.16B, V0.16B
	0x03A650B4 LDR X9, [X8 + 0x218]
	0x03A650B8 LDR X1, [X8 + 0x220]
	0x03A650BC BLR X9
	0x03A650C0 LDR X8, [X23 + 0x1A8]
	0x03A650C4 CBZ X8, 0x3A655B8
	0x03A650C8 LDR X0, [X8 + 0x68]
	0x03A650CC CBZ X0, 0x3A655B8
	0x03A650D0 LDR X8, [X0]
	0x03A650D4 MOV V9.16B, V0.16B
	0x03A650D8 LDR X9, [X8 + 0x218]
	0x03A650DC LDR X1, [X8 + 0x220]
	0x03A650E0 BLR X9
	0x03A650E4 LDR X8, [X23 + 0x1A8]
	0x03A650E8 CBZ X8, 0x3A655B8
	0x03A650EC LDR X0, [X8 + 0x60]
	0x03A650F0 CBZ X0, 0x3A655B8
	0x03A650F4 LDR X8, [X0]
	0x03A650F8 STR X20, [X31 + 0x10]
	0x03A650FC ADRP X20, 0x6EF000
	0x03A65100 ADRP X25, 0x6B6000
	0x03A65104 LDR X9, [X8 + 0x218]
	0x03A65108 LDR X1, [X8 + 0x220]
	0x03A6510C LDR X20, [X20 + 0x958]
	0x03A65110 LDR X25, [X25 + 0x8F8]
	0x03A65114 MOV V11.16B, V0.16B
	0x03A65118 BLR X9
	0x03A6511C LDR X0, [X20]
	0x03A65120 LDR W20, [X23 + 0xE4]
	0x03A65124 MOV V10.16B, V0.16B
	0x03A65128 LDR W8, [X0 + 0xE0]
	0x03A6512C CBNZ W8, 0x3A65134
	0x03A65130 BL 0x1C16DFC
	0x03A65134 LDR X0, [X25]
	0x03A65138 ADRP X28, 0x6F1000
	0x03A6513C ADRP X27, 0x6F1000
	0x03A65140 LDRB W25, [X23 + 0x237]
	0x03A65144 LDR W8, [X0 + 0xE0]
	0x03A65148 LDR X28, [X28 + 0x610]
	0x03A6514C LDR X27, [X27 + 0x550]
	0x03A65150 CBNZ W8, 0x3A65158
	0x03A65154 BL 0x1C16DFC
	0x03A65158 LDR X1, [X28]
	0x03A6515C CMP W25, 0x0
	0x03A65160 CSET W2, NE
	0x03A65164 MOV X0, X22
	0x03A65168 MOV X3, X31
	0x03A6516C BL 0x39E9638
	0x03A65170 LDR X0, [X27]
	0x03A65174 LDR W8, [X0 + 0xE0]
	0x03A65178 CBNZ W8, 0x3A65180
	0x03A6517C BL 0x1C16DFC
	0x03A65180 CBZ X21, 0x3A655B8
	0x03A65184 MOVZ W8, 0x447A0000
	0x03A65188 FMOV S3, W8
	0x03A6518C LDR X8, [X27]
	0x03A65190 ADRP X9, 0xFFFFFFFFFD085000
	0x03A65194 LDR V6, [X9 + 0x200]
	0x03A65198 SBFM W25, W24, 0x1, 0x1F
	0x03A6519C LDR X8, [X8 + 0xB8]
	0x03A651A0 SBFM W26, W26, 0x1, 0x1F
	0x03A651A4 SCVTF S1, W20
	0x03A651A8 FMOV S2, 14
	0x03A651AC SCVTF S4, W25
	0x03A651B0 SCVTF S5, W26
	0x03A651B4 LDR W1, [X8 + 0x1C]
	0x03A651B8 FDIV S0, S9, S11
	0x03A651BC FDIV S3, S8, S3
	0x03A651C0 FDIV S2, S2, S1
	0x03A651C4 FDIV S4, S4, S5
	0x03A651C8 FMOV S5, 1
	0x03A651CC FMUL S0, S3, S0
	0x03A651D0 FSUB S3, S10, S3
	0x03A651D4 FMIN S9, S2, S6
	0x03A651D8 FDIV S8, S5, S4
	0x03A651DC FDIV S1, S0, S3
	0x03A651E0 MOV X0, X21
	0x03A651E4 MOV V0.16B, V10.16B
	0x03A651E8 MOV V2.16B, V9.16B
	0x03A651EC MOV V3.16B, V8.16B
	0x03A651F0 MOV X2, X31
	0x03A651F4 BL 0x3C4CED8
	0x03A651F8 LDR X0, [X23 + 0x1A8]
	0x03A651FC CBZ X0, 0x3A655B8
	0x03A65200 LDR X8, [X0]
	0x03A65204 LDP X9, X1, [X8 + 0x158]
	0x03A65208 BLR X9
	0x03A6520C LDR W8, [X23 + 0x228]
	0x03A65210 CMP W0, W8
	0x03A65214 B.NE 0x3A65230
	0x03A65218 LDR V0, [X23 + 0x22C]
	0x03A6521C FCMP S9, S0
	0x03A65220 B.NE 0x3A65230
	0x03A65224 LDR V0, [X23 + 0x230]
	0x03A65228 FCMP S8, S0
	0x03A6522C B.EQ 0x3A6524C
	0x03A65230 STR W0, [X23 + 0x228]
	0x03A65234 MOV X0, X23
	0x03A65238 MOV V0.16B, V9.16B
	0x03A6523C MOV V1.16B, V8.16B
	0x03A65240 STR S9, [X23 + 0x22C]
	0x03A65244 STR S8, [X23 + 0x230]
	0x03A65248 BL 0x3A655BC
	0x03A6524C LDR X0, [X27]

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+16], D14
	003 Move [X31+32], D13
	004 Move [X31+40], D12
	005 Move [X31+48], D11
	006 Move [X31+56], D10
	007 Move [X31+64], D9
	008 Move [X31+72], D8
	009 Move [X31+80], X30
	010 Move [X31+88], X23
	011 Move [X31+96], X22
	012 Move [X31+104], X21
	013 Move [X31+112], X20
	014 Move [X31+120], X19
	015 Move X22, 0x97E000
	016 Move W8, [X22+589]
	017 Move X21, X2
	018 Move X19, X1
	019 Move X20, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {29}
	024 Move X0, 0x6F2000
	025 Move X0, [X0+1360]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X22+589], W8
	029 Move X8, [X20+472]
	030 Compare X8, 0
	031 JumpIfEqual {188}
	032 Move X0, [X8+56]
	033 Compare X0, 0
	034 JumpIfEqual {188}
	035 Move X8, [X0]
	036 Move X9, [X8+536]
	037 Move X1, [X8+544]
	038 NotImplemented "Instruction BLR not yet implemented."
	039 Move X8, [X20+472]
	040 Compare X8, 0
	041 JumpIfEqual {188}
	042 Move X0, [X8+64]
	043 Compare X0, 0
	044 JumpIfEqual {188}
	045 Move X8, [X0]
	046 Move X23, 0x6F2000
	047 Move V10, V0
	048 Move V11, V1
	049 Move X9, [X8+536]
	050 Move X1, [X8+544]
	051 Move X23, [X23+1360]
	052 Move V12, V2
	053 NotImplemented "Instruction BLR not yet implemented."
	054 Move S13, [X20+224]
	055 Move S14, [X20+228]
	056 Move V8, V0
	057 Move V9, V1
	058 Compare X21, 0
	059 JumpIfEqual {100}
	060 Move X0, X21
	061 Move X1, X31
	062 Call XRPass.get_enabled, X0
	063 Move TEMP, X0
	064 And TEMP, TEMP, 1
	065 Compare TEMP, 1
	066 JumpIfNotEqual {100}
	067 Move X0, X21
	068 Move X1, X31
	069 Call XRPass.get_singlePassEnabled, X0
	070 Move TEMP, X0
	071 And TEMP, TEMP, 1
	072 Compare TEMP, 1
	073 JumpIfNotEqual {93}
	074 Move X0, [X23]
	075 Move W8, [X0+224]
	076 Compare W8, 0
	077 JumpIfNotEqual {80}
	078 Call 0x1C17DFC
	079 Move X0, [X23]
	080 Move X8, [X0+184]
	081 Move X0, X21
	082 Move V0, V8
	083 Move V1, V9
	084 Move W22, [X8+124]
	085 Move X1, X31
	086 Call XRPass.ApplyXRViewCenterOffset, X0, X1
	087 Compare X19, 0
	088 JumpIfEqual {188}
	089 Move X0, X19
	090 Move W1, W22
	091 Move X2, X31
	092 Call Material.SetVector, X0, X1, X2
	093 Move X0, X21
	094 Move V0, V8
	095 Move V1, V9
	096 Move X1, X31
	097 Call XRPass.ApplyXRViewCenterOffset, X0, X1
	098 Move V8, V0
	099 Move V9, V1
	100 Move X8, [X20+472]
	101 Compare X8, 0
	102 JumpIfEqual {188}
	103 Move X0, [X8+88]
	104 Compare X0, 0
	105 JumpIfEqual {188}
	106 Move X8, [X0]
	107 NotImplemented "Instruction SCVTF not yet implemented."
	108 NotImplemented "Instruction SCVTF not yet implemented."
	109 NotImplemented "Instruction FDIV not yet implemented."
	110 Move X9, [X8+536]
	111 Move X1, [X8+544]
	112 NotImplemented "Instruction BLR not yet implemented."
	113 And W31, W0, 1
	114 Move S0, 1
	115 NotImplemented "Instruction FCSEL not yet implemented."
	116 Move [X31+24], S11
	117 Move [X31+32], S10
	118 Move [X31+8], S0
	119 Move [X31+16], S12
	120 Move X8, [X20+472]
	121 Compare X8, 0
	122 JumpIfEqual {188}
	123 Move X0, [X8+72]
	124 Compare X0, 0
	125 JumpIfEqual {188}
	126 Move X8, [X0]
	127 Move X9, [X8+536]
	128 Move X1, [X8+544]
	129 NotImplemented "Instruction BLR not yet implemented."
	130 Move X8, [X20+472]
	131 Compare X8, 0
	132 JumpIfEqual {188}
	133 Move X0, [X8+80]
	134 Compare X0, 0
	135 JumpIfEqual {188}
	136 Move X8, [X0]
	137 Move V10, V0
	138 Move X9, [X8+536]
	139 Move X1, [X8+544]
	140 NotImplemented "Instruction BLR not yet implemented."
	141 Move X0, [X23]
	142 Move V11, V0
	143 Move W8, [X0+224]
	144 Compare W8, 0
	145 JumpIfNotEqual {147}
	146 Call 0x1C17DFC
	147 Compare X19, 0
	148 JumpIfEqual {188}
	149 Move X8, [X23]
	150 Move S3, [X31+8]
	151 Move S2, [X31+12]
	152 Move S1, [X31+24]
	153 Move S0, [X31+28]
	154 Move S4, 5
	155 Move X8, [X8+184]
	156 Multiply S11, S11, S4
	157 Move S4, 3
	158 Move X0, X19
	159 Move W1, [X8+116]
	160 Move X2, X31
	161 Multiply S10, S10, S4
	162 Call Material.SetVector, X0, X1, X2
	163 Move X8, [X23]
	164 Move X0, X19
	165 Move V0, V8
	166 Move V1, V9
	167 Move X8, [X8+184]
	168 Move V2, V10
	169 Move V3, V11
	170 Move X20, [X31+112]
	171 Move X19, [X31+120]
	172 Move W1, [X8+120]
	173 Move X22, [X31+96]
	174 Move X21, [X31+104]
	175 Move X30, [X31+80]
	176 Move X23, [X31+88]
	177 Move D9, [X31+64]
	178 Move D8, [X31+72]
	179 Move D11, [X31+48]
	180 Move D10, [X31+56]
	181 Move D13, [X31+32]
	182 Move D12, [X31+40]
	183 Move V14, [X31+16]
	184 Move X2, X31
	185 Add X31, X31, 128
	186 Call Material.SetVector, X0, X1, X2
	187 Return 
	188 Call 0x1C17F20

Method: System.Void SetupColorGrading(UnityEngine.Rendering.CommandBuffer cmd, ref UnityEngine.Rendering.Universal.RenderingData renderingData, UnityEngine.Material material)

Disassembly:
	0x03A65250 ADRP X24, 0x6EF000
	0x03A65254 LDR W8, [X0 + 0xE0]
	0x03A65258 LDR X24, [X24 + 0x10]
	0x03A6525C STR X29, [X31 + 0x18]
	0x03A65260 CBNZ W8, 0x3A6526C
	0x03A65264 BL 0x1C16DFC
	0x03A65268 LDR X0, [X27]
	0x03A6526C LDR X8, [X0 + 0xB8]
	0x03A65270 ADRP X29, 0x6F1000
	0x03A65274 LDR X29, [X29 + 0x708]
	0x03A65278 LDR X2, [X23 + 0x220]
	0x03A6527C LDR W1, [X8 + 0x20]
	0x03A65280 ADRP X28, 0x6F1000
	0x03A65284 LDR X28, [X28 + 0x718]
	0x03A65288 MOV X0, X21
	0x03A6528C MOV X3, X31
	0x03A65290 ADD X20, X31, 0xF8
	0x03A65294 BL 0x3C4D428
	0x03A65298 LDP W1, W2, [X23 + 0xE0]
	0x03A6529C ADD X8, X31, 0x130
	0x03A652A0 MOVZ W3, 0x5
	0x03A652A4 MOV X0, X23
	0x03A652A8 MOV W4, W31
	0x03A652AC ADD X27, X23, 0x140
	0x03A652B0 BL 0x3A61B2C
	0x03A652B4 LDR X0, [X24]
	0x03A652B8 LDR W8, [X0 + 0xE0]
	0x03A652BC CBNZ W8, 0x3A652C4
	0x03A652C0 BL 0x1C16DFC
	0x03A652C4 LDR X6, [X29]
	0x03A652C8 ADD X1, X31, 0x130
	0x03A652CC FMOV S0, W31
	0x03A652D0 MOVZ W2, 0x1
	0x03A652D4 MOVZ W3, 0x1
	0x03A652D8 MOVZ W5, 0x1
	0x03A652DC MOV X0, X27
	0x03A652E0 MOV W4, W31
	0x03A652E4 MOV X7, X31
	0x03A652E8 BL 0x3A6D184
	0x03A652EC ADD X8, X31, 0xF8
	0x03A652F0 MOVZ W3, 0x30
	0x03A652F4 MOV X0, X23
	0x03A652F8 MOV W1, W25
	0x03A652FC MOV W2, W26
	0x03A65300 MOV W4, W31
	0x03A65304 ADD X24, X23, 0x150
	0x03A65308 BL 0x3A61B2C
	0x03A6530C LDP V0, V1, [X20]
	0x03A65310 LDR V2, [X20 + 0x2]
	0x03A65314 LDR W8, [X31 + 0x128]
	0x03A65318 LDR X6, [X28]
	0x03A6531C STP V0, V1, [X31 + 0x130]
	0x03A65320 ADD X1, X31, 0x130
	0x03A65324 FMOV S0, W31
	0x03A65328 MOVZ W2, 0x1
	0x03A6532C MOVZ W3, 0x1
	0x03A65330 MOVZ W5, 0x1
	0x03A65334 MOV X0, X24
	0x03A65338 MOV W4, W31
	0x03A6533C MOV X7, X31
	0x03A65340 STR V2, [X31 + 0x15]
	0x03A65344 STR W8, [X31 + 0x160]
	0x03A65348 BL 0x3A6D184
	0x03A6534C ADD X8, X31, 0xC0
	0x03A65350 MOVZ W3, 0x30
	0x03A65354 MOV X0, X23
	0x03A65358 MOV W1, W25
	0x03A6535C MOV W2, W26
	0x03A65360 MOV W4, W31
	0x03A65364 ADD X28, X23, 0x158
	0x03A65368 BL 0x3A61B2C
	0x03A6536C ADRP X9, 0x6F1000
	0x03A65370 LDP V0, V1, [X31 + 0xC0]
	0x03A65374 LDR V2, [X31 + 0xE]
	0x03A65378 LDR W8, [X31 + 0xF0]
	0x03A6537C LDR X9, [X9 + 0x720]
	0x03A65380 STP V0, V1, [X31 + 0x130]
	0x03A65384 ADD X1, X31, 0x130
	0x03A65388 FMOV S0, W31
	0x03A6538C LDR X6, [X9]
	0x03A65390 MOVZ W2, 0x1
	0x03A65394 MOVZ W3, 0x1
	0x03A65398 MOVZ W5, 0x1
	0x03A6539C MOV X0, X28
	0x03A653A0 MOV W4, W31
	0x03A653A4 MOV X7, X31
	0x03A653A8 STR V2, [X31 + 0x15]
	0x03A653AC STR W8, [X31 + 0x160]
	0x03A653B0 BL 0x3A6D184
	0x03A653B4 LDR W8, [X19 + 0x30]
	0x03A653B8 LDP V2, V0, [X19 + 0x10]
	0x03A653BC LDR V1, [X19]
	0x03A653C0 ADD X1, X31, 0x80
	0x03A653C4 MOV X0, X21
	0x03A653C8 MOV X2, X31
	0x03A653CC STR W8, [X31 + 0xB0]
	0x03A653D0 STP V2, V0, [X31 + 0x90]
	0x03A653D4 STR V1, [X31 + 0x8]
	0x03A653D8 BL 0x3A68048
	0x03A653DC ADRP X19, 0x6F1000
	0x03A653E0 LDR X19, [X19 + 0x550]
	0x03A653E4 FMOV S0, 0.5
	0x03A653E8 FMOV S1, 0.5
	0x03A653EC FMOV S2, 2
	0x03A653F0 LDR X8, [X19]
	0x03A653F4 FMOV S3, 2
	0x03A653F8 MOV X0, X21
	0x03A653FC MOV X2, X31
	0x03A65400 LDR X8, [X8 + 0xB8]
	0x03A65404 LDR W1, [X8 + 0x90]
	0x03A65408 BL 0x3C4CED8
	0x03A6540C LDR X8, [X19]
	0x03A65410 LDR V0, [X23 + 0xE4]
	0x03A65414 FMOV S1, 1
	0x03A65418 FMOV S2, W31
	0x03A6541C LDR X8, [X8 + 0xB8]
	0x03A65420 SCVTF S0, S0
	0x03A65424 FDIV S0, S1, S0
	0x03A65428 FADD S0, S0, S0
	0x03A6542C LDR W1, [X8 + 0x24]
	0x03A65430 FADD S1, S0, S0
	0x03A65434 FMOV S3, W31
	0x03A65438 MOV X0, X21
	0x03A6543C MOV X2, X31
	0x03A65440 BL 0x3C4CED8
	0x03A65444 ADRP X8, 0x6ED000
	0x03A65448 LDR X8, [X8 + 0xE28]
	0x03A6544C LDR X23, [X23 + 0x140]
	0x03A65450 LDR X0, [X8]
	0x03A65454 LDR W8, [X0 + 0xE0]
	0x03A65458 CBNZ W8, 0x3A65460
	0x03A6545C BL 0x1C16DFC
	0x03A65460 LDR X19, [X31 + 0x18]
	0x03A65464 MOVZ W3, 0x2
	0x03A65468 MOV X0, X21
	0x03A6546C MOV X2, X23
	0x03A65470 MOV X1, X19
	0x03A65474 MOV W4, W31
	0x03A65478 MOV X5, X22
	0x03A6547C MOV W6, W31
	0x03A65480 MOV X7, X31
	0x03A65484 BL 0x39E3120
	0x03A65488 LDR X8, [X27]
	0x03A6548C CBZ X8, 0x3A655B8
	0x03A65490 ADRP X20, 0x6F1000
	0x03A65494 LDR X20, [X20 + 0x550]
	0x03A65498 LDUR V0, [X8 + 0x28]
	0x03A6549C LDUR V1, [X8 + 0x38]
	0x03A654A0 LDR X8, [X8 + 0x48]
	0x03A654A4 LDR X9, [X20]
	0x03A654A8 ADD X2, X31, 0x50
	0x03A654AC MOV X0, X21
	0x03A654B0 MOV X3, X31
	0x03A654B4 LDR X9, [X9 + 0xB8]
	0x03A654B8 LDR W1, [X9 + 0x10]
	0x03A654BC STP V0, V1, [X31 + 0x50]
	0x03A654C0 STR X8, [X31 + 0x70]
	0x03A654C4 BL 0x3C4FCFC
	0x03A654C8 LDR X2, [X24]
	0x03A654CC MOVZ W3, 0x2
	0x03A654D0 MOVZ W6, 0x1
	0x03A654D4 MOV X0, X21
	0x03A654D8 MOV X1, X19
	0x03A654DC MOV W4, W31
	0x03A654E0 MOV X5, X22
	0x03A654E4 MOV X7, X31
	0x03A654E8 BL 0x39E3120
	0x03A654EC LDR X1, [X24]
	0x03A654F0 LDR X2, [X28]
	0x03A654F4 MOVZ W3, 0x2
	0x03A654F8 MOVZ W6, 0x2
	0x03A654FC MOV X0, X21
	0x03A65500 MOV W4, W31
	0x03A65504 MOV X5, X22
	0x03A65508 MOV X7, X31
	0x03A6550C BL 0x39E3120
	0x03A65510 LDR X1, [X28]
	0x03A65514 LDR X2, [X24]
	0x03A65518 MOVZ W3, 0x2
	0x03A6551C MOVZ W6, 0x3
	0x03A65520 MOV X0, X21
	0x03A65524 MOV W4, W31
	0x03A65528 MOV X5, X22
	0x03A6552C MOV X7, X31
	0x03A65530 BL 0x39E3120
	0x03A65534 LDR X8, [X24]
	0x03A65538 CBZ X8, 0x3A655B8
	0x03A6553C LDR X9, [X20]
	0x03A65540 LDUR V0, [X8 + 0x28]
	0x03A65544 LDUR V1, [X8 + 0x38]
	0x03A65548 LDR X8, [X8 + 0x48]
	0x03A6554C LDR X9, [X9 + 0xB8]
	0x03A65550 ADD X2, X31, 0x20
	0x03A65554 MOV X0, X21
	0x03A65558 MOV X3, X31
	0x03A6555C LDR W1, [X9 + 0x18]
	0x03A65560 STP V0, V1, [X31 + 0x20]
	0x03A65564 STR X8, [X31 + 0x40]
	0x03A65568 BL 0x3C4FCFC
	0x03A6556C LDR X2, [X31 + 0x10]
	0x03A65570 MOVZ W3, 0x2
	0x03A65574 MOVZ W6, 0x4
	0x03A65578 MOV X0, X21
	0x03A6557C MOV X1, X19
	0x03A65580 MOV W4, W31
	0x03A65584 MOV X5, X22
	0x03A65588 MOV X7, X31
	0x03A6558C BL 0x39E3120
	0x03A65590 LDP X20, X19, [X31 + 0x1E0]
	0x03A65594 LDP X22, X21, [X31 + 0x1D0]
	0x03A65598 LDP X24, X23, [X31 + 0x1C0]
	0x03A6559C LDP X26, X25, [X31 + 0x1B0]

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+96], D8
	003 Move [X31+112], X30
	004 Move [X31+120], X25
	005 Move [X31+128], X24
	006 Move [X31+136], X23
	007 Move [X31+144], X22
	008 Move [X31+152], X21
	009 Move [X31+160], X20
	010 Move [X31+168], X19
	011 Move X23, 0x97E000
	012 Move W8, [X23+590]
	013 Move X19, X3
	014 Move X22, X2
	015 Move X21, X1
	016 Move X20, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {35}
	021 Move X0, 0x6F2000
	022 Move X0, [X0+1360]
	023 Call 0x1C17CF4
	024 Move X0, 0x6F2000
	025 Move X0, [X0+1752]
	026 Call 0x1C17CF4
	027 Move X0, 0x6F2000
	028 Move X0, [X0+1760]
	029 Call 0x1C17CF4
	030 Move X0, 0x6F2000
	031 Move X0, [X0+1768]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X23+590], W8
	035 Move X8, [X20+488]
	036 Compare X8, 0
	037 JumpIfEqual {251}
	038 Move X0, [X8+56]
	039 Compare X0, 0
	040 JumpIfEqual {251}
	041 Move X8, [X0]
	042 Move W25, [X22+672]
	043 Move W23, [X22+676]
	044 Move X22, 0x6F2000
	045 Move X9, [X8+536]
	046 Move X1, [X8+544]
	047 Move X22, [X22+1360]
	048 NotImplemented "Instruction BLR not yet implemented."
	049 Call 0x3EB2B90
	050 Move X0, [X22]
	051 Move V8, V0
	052 Move W8, [X0+224]
	053 Compare W8, 0
	054 JumpIfNotEqual {57}
	055 Call 0x1C17DFC
	056 Move X0, [X22]
	057 Move X8, [X20+304]
	058 Compare X8, 0
	059 JumpIfEqual {251}
	060 Move X9, [X0+184]
	061 Move X10, [X8+72]
	062 NotImplemented "Instruction LDUR not yet implemented."
	063 NotImplemented "Instruction LDUR not yet implemented."
	064 Move W1, [X9+136]
	065 Move [X31+80], X10
	066 Move [X31+48], V1
	067 Move [X31+56], V0
	068 Compare X21, 0
	069 JumpIfEqual {251}
	070 Move V0, [X31+48]
	071 Move V1, [X31+64]
	072 Move X8, [X31+80]
	073 Add X2, X31, 0
	074 Move X0, X21
	075 Move X3, X31
	076 Move [X31], V0
	077 Move [X31+8], V1
	078 Move [X31+32], X8
	079 Call CommandBuffer.SetGlobalTexture, X0, X1, X2
	080 Compare X19, 0
	081 JumpIfEqual {251}
	082 Move X8, [X22]
	083 Multiply W9, W23, W23
	084 NotImplemented "Instruction SCVTF not yet implemented."
	085 Move S1, -1
	086 Move X8, [X8+184]
	087 Move S3, 1
	088 Add S2, S0, S1
	089 NotImplemented "Instruction FDIV not yet implemented."
	090 Move W1, [X8+128]
	091 NotImplemented "Instruction SCVTF not yet implemented."
	092 NotImplemented "Instruction FDIV not yet implemented."
	093 Move X0, X19
	094 Move V3, V8
	095 Move X2, X31
	096 Call Material.SetVector, X0, X1, X2
	097 Move X8, [X20+480]
	098 Compare X8, 0
	099 JumpIfEqual {251}
	100 Move X0, [X8+56]
	101 Compare X0, 0
	102 JumpIfEqual {251}
	103 Move X8, [X22]
	104 Move X9, [X0]
	105 Move X8, [X8+184]
	106 Move X10, [X9+536]
	107 Move X1, [X9+544]
	108 Move W21, [X8+140]
	109 NotImplemented "Instruction BLR not yet implemented."
	110 Move X2, X0
	111 Move X0, X19
	112 Move W1, W21
	113 Move X3, X31
	114 Call Material.SetTexture, X0, X1, X2
	115 Move X0, [X20+480]
	116 Compare X0, 0
	117 JumpIfEqual {251}
	118 Move X8, [X22]
	119 Move X8, [X8+184]
	120 Move W21, [X8+132]
	121 Call ColorLookup.IsActive, X0
	122 Move TEMP, X0
	123 And TEMP, TEMP, 1
	124 Compare TEMP, 1
	125 JumpIfNotEqual {196}
	126 Move X8, [X20+480]
	127 Compare X8, 0
	128 JumpIfEqual {251}
	129 Move X0, [X8+56]
	130 Compare X0, 0
	131 JumpIfEqual {251}
	132 Move X8, [X0]
	133 Move X9, [X8+536]
	134 Move X1, [X8+544]
	135 NotImplemented "Instruction BLR not yet implemented."
	136 Compare X0, 0
	137 JumpIfEqual {251}
	138 Move X8, [X0]
	139 Move X9, [X8+392]
	140 Move X1, [X8+400]
	141 NotImplemented "Instruction BLR not yet implemented."
	142 Move X8, [X20+480]
	143 Compare X8, 0
	144 JumpIfEqual {251}
	145 Move W22, W0
	146 Move X0, [X8+56]
	147 Compare X0, 0
	148 JumpIfEqual {251}
	149 Move X8, [X0]
	150 Move X9, [X8+536]
	151 Move X1, [X8+544]
	152 NotImplemented "Instruction BLR not yet implemented."
	153 Compare X0, 0
	154 JumpIfEqual {251}
	155 Move X8, [X0]
	156 Move X9, [X8+424]
	157 Move X1, [X8+432]
	158 NotImplemented "Instruction BLR not yet implemented."
	159 Move X8, [X20+480]
	160 Compare X8, 0
	161 JumpIfEqual {251}
	162 Move W23, W0
	163 Move X0, [X8+56]
	164 Compare X0, 0
	165 JumpIfEqual {251}
	166 Move X8, [X0]
	167 Move X9, [X8+536]
	168 Move X1, [X8+544]
	169 NotImplemented "Instruction BLR not yet implemented."
	170 Compare X0, 0
	171 JumpIfEqual {251}
	172 Move X8, [X0]
	173 Move X9, [X8+424]
	174 Move X1, [X8+432]
	175 NotImplemented "Instruction BLR not yet implemented."
	176 Move X8, [X20+480]
	177 Compare X8, 0
	178 JumpIfEqual {251}
	179 Move W24, W0
	180 Move X0, [X8+64]
	181 Compare X0, 0
	182 JumpIfEqual {251}
	183 Move X8, [X0]
	184 Move X9, [X8+536]
	185 Move X1, [X8+544]
	186 NotImplemented "Instruction BLR not yet implemented."
	187 Move V3, V0
	188 NotImplemented "Instruction SCVTF not yet implemented."
	189 Move S1, 1
	190 NotImplemented "Instruction SCVTF not yet implemented."
	191 NotImplemented "Instruction SCVTF not yet implemented."
	192 Move S5, -1
	193 NotImplemented "Instruction FDIV not yet implemented."
	194 NotImplemented "Instruction FDIV not yet implemented."
	195 Add S2, S4, S5
	196 Move X22, 0x974000
	197 Move W8, [X22+3674]
	198 Compare W8, 0
	199 JumpIfNotEqual {205}
	200 Move X0, 0x696000
	201 Move X0, [X0+2464]
	202 Call 0x1C17CF4
	203 Move W8, 1
	204 Move [X22+3674], W8
	205 Move X8, 0x696000
	206 Move X8, [X8+2464]
	207 Move X8, [X8]
	208 Move X8, [X8+184]
	209 Move S0, [X8]
	210 Move S1, [X8+4]
	211 Move S2, [X8+8]
	212 Move S3, [X8+12]
	213 Move X0, X19
	214 Move W1, W21
	215 Move X2, X31
	216 Call Material.SetVector, X0, X1, X2
	217 NotImplemented "Instruction CMP not yet implemented."
	218 Move X8, 0x6F2000
	219 Move X8, [X8+1760]
	220 Move X8, [X20+496]
	221 Compare X8, 0
	222 JumpIfEqual {251}
	223 Move X0, [X8+56]
	224 Compare X0, 0
	225 JumpIfEqual {251}
	226 Move X8, [X0]
	227 Move X9, [X8+536]
	228 Move X1, [X8+544]
	229 NotImplemented "Instruction BLR not yet implemented."
	230 NotImplemented "Instruction CMP not yet implemented."
	231 NotImplemented "Instruction CMP not yet implemented."
	232 Move X8, 0x6F2000
	233 Move X8, [X8+1752]
	234 Move X8, 0x6F2000
	235 Move X8, [X8+1768]
	236 Move X1, [X8]
	237 Move X0, X19
	238 Move X2, X31
	239 Call Material.EnableKeyword, X0, X1
	240 Move X20, [X31+160]
	241 Move X19, [X31+168]
	242 Move X22, [X31+144]
	243 Move X21, [X31+152]
	244 Move X24, [X31+128]
	245 Move X23, [X31+136]
	246 Move X30, [X31+112]
	247 Move X25, [X31+120]
	248 Move V8, [X31+96]
	249 Add X31, X31, 176
	250 Return 
	251 Call 0x1C17F20

Method: System.Void SetupGrain(ref UnityEngine.Rendering.Universal.CameraData cameraData, UnityEngine.Material material)

Disassembly:
	0x03A655A0 LDP X28, X27, [X31 + 0x1A0]
	0x03A655A4 LDP X29, X30, [X31 + 0x190]
	0x03A655A8 LDP D9, D8, [X31 + 0x180]
	0x03A655AC LDP D11, D10, [X31 + 0x170]
	0x03A655B0 ADD X31, X31, 0x1F0
	0x03A655B4 RET
	0x03A655B8 BL 0x1C16F20
	0x03A655BC SUB X31, X31, 0xA0
	0x03A655C0 STP D15, D14, [X31 + 0x30]
	0x03A655C4 STP D13, D12, [X31 + 0x40]
	0x03A655C8 STP D11, D10, [X31 + 0x50]
	0x03A655CC STP D9, D8, [X31 + 0x60]
	0x03A655D0 STP X30, X23, [X31 + 0x70]
	0x03A655D4 STP X22, X21, [X31 + 0x80]
	0x03A655D8 STP X20, X19, [X31 + 0x90]
	0x03A655DC ADRP X20, 0x97D000
	0x03A655E0 LDRB W8, [X20 + 0x242]
	0x03A655E4 MOV V9.16B, V0.16B
	0x03A655E8 MOV X19, X0
	0x03A655EC STR S1, [X31 + 0x14]
	0x03A655F0 TBNZ X8, 0x0, 0x3A65608
	0x03A655F4 ADRP X0, 0x6E9000
	0x03A655F8 LDR X0, [X0 + 0x48]
	0x03A655FC BL 0x1C16CF4
	0x03A65600 MOVZ W8, 0x1
	0x03A65604 STRB W8, [X20 + 0x242]
	0x03A65608 LDR X8, [X19 + 0x220]
	0x03A6560C CBNZ X8, 0x3A65628
	0x03A65610 ADRP X8, 0x6E9000
	0x03A65614 LDR X8, [X8 + 0x48]
	0x03A65618 MOVZ W1, 0x2A
	0x03A6561C LDR X0, [X8]
	0x03A65620 BL 0x1C16D6C
	0x03A65624 STR X0, [X19 + 0x220]
	0x03A65628 LDR X8, [X19 + 0x1A8]
	0x03A6562C CBZ X8, 0x3A65808
	0x03A65630 LDR X0, [X8 + 0x78]
	0x03A65634 CBZ X0, 0x3A65808
	0x03A65638 LDR X8, [X0]
	0x03A6563C LDR X9, [X8 + 0x218]
	0x03A65640 LDR X1, [X8 + 0x220]
	0x03A65644 BLR X9

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x97E000
	007 Move W8, [X22+591]
	008 Move X19, X2
	009 Move X20, X1
	010 Move X21, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x6F2000
	016 Move X0, [X0+1776]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X22+591], W8
	020 Move W8, [X21+565]
	021 Compare W8, 0
	022 JumpIfNotEqual {52}
	023 Move X0, [X21+504]
	024 Compare X0, 0
	025 JumpIfEqual {58}
	026 Call FilmGrain.IsActive, X0
	027 Move TEMP, X0
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfNotEqual {52}
	031 Compare X19, 0
	032 JumpIfEqual {58}
	033 Move X8, 0x6F2000
	034 Move X8, [X8+1776]
	035 Move X0, X19
	036 Move X2, X31
	037 Move X1, [X8]
	038 Call Material.EnableKeyword, X0, X1
	039 Move X0, [X21+416]
	040 Move X1, [X21+504]
	041 Move W2, [X20+320]
	042 Move W3, [X20+324]
	043 Move X4, X19
	044 Move X20, [X31+32]
	045 Move X19, [X31+40]
	046 Move X22, [X31+16]
	047 Move X21, [X31+24]
	048 Move X5, X31
	049 Move X30, [X31+48]
	050 Call PostProcessUtils.ConfigureFilmGrain, X0, X1, X2, X3, X4
	051 Return 
	052 Move X20, [X31+32]
	053 Move X19, [X31+40]
	054 Move X22, [X31+16]
	055 Move X21, [X31+24]
	056 Move X30, [X31+48]
	057 Return 
	058 Call 0x1C17F20

Method: System.Void SetupDithering(ref UnityEngine.Rendering.Universal.CameraData cameraData, UnityEngine.Material material)

Disassembly:
	0x03A65648 LDR X8, [X19 + 0x1A8]
	0x03A6564C CBZ X8, 0x3A65808
	0x03A65650 MOV W20, W0
	0x03A65654 LDR X0, [X8 + 0x80]
	0x03A65658 CBZ X0, 0x3A65808
	0x03A6565C LDR X8, [X0]
	0x03A65660 LDR X9, [X8 + 0x218]
	0x03A65664 LDR X1, [X8 + 0x220]
	0x03A65668 BLR X9
	0x03A6566C LDR X8, [X19 + 0x1A8]
	0x03A65670 CBZ X8, 0x3A65808
	0x03A65674 LDR X0, [X8 + 0x88]
	0x03A65678 CBZ X0, 0x3A65808
	0x03A6567C LDR X8, [X0]
	0x03A65680 FMOV S1, 1
	0x03A65684 FSUB S0, S1, S0
	0x03A65688 SCVTF S10, W20
	0x03A6568C LDR X9, [X8 + 0x218]
	0x03A65690 LDR X1, [X8 + 0x220]
	0x03A65694 STR S0, [X31 + 0x24]
	0x03A65698 BLR X9
	0x03A6569C ADRP X8, 0xFFFFFFFFFD085000
	0x03A656A0 ADRP X9, 0xFFFFFFFFFD084000
	0x03A656A4 LDR V1, [X8 + 0x104]
	0x03A656A8 LDR V2, [X9 + 0xF4C]
	0x03A656AC FMUL S0, S0, S1
	0x03A656B0 STP S0, S2, [X31 + 0x1C]
	0x03A656B4 FDIV S0, S2, S10
	0x03A656B8 BL 0x3EB1BD0
	0x03A656BC ADRP X9, 0xFFFFFFFFFD085000
	0x03A656C0 STR S0, [X31 + 0x18]
	0x03A656C4 LDR V0, [X9 + 0x1E8]
	0x03A656C8 ADRP X8, 0xFFFFFFFFFD085000
	0x03A656CC ADRP X10, 0xFFFFFFFFFD084000
	0x03A656D0 LDR V8, [X8 + 0x6C]
	0x03A656D4 STR S0, [X31 + 0x10]
	0x03A656D8 LDR V0, [X10 + 0xF78]
	0x03A656DC MOV W20, W31

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x97E000
	007 Move W8, [X22+592]
	008 Move X20, X2
	009 Move X21, X1
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x6F2000
	016 Move X0, [X0+1784]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X22+592], W8
	020 Move W8, [X19+565]
	021 Compare W8, 0
	022 JumpIfNotEqual {42}
	023 Move W8, [X21+425]
	024 Compare W8, 0
	025 JumpIfEqual {42}
	026 Compare X20, 0
	027 JumpIfEqual {48}
	028 Move X8, 0x6F2000
	029 Move X8, [X8+1784]
	030 Move X0, X20
	031 Move X2, X31
	032 Move X1, [X8]
	033 Call Material.EnableKeyword, X0, X1
	034 Move X0, [X19+416]
	035 Move W1, [X19+528]
	036 Move W2, [X21+320]
	037 Move W3, [X21+324]
	038 Move X4, X20
	039 Move X5, X31
	040 Call PostProcessUtils.ConfigureDithering, X0, X1, X2, X3, X4
	041 Move [X19+528], W0
	042 Move X20, [X31+32]
	043 Move X19, [X31+40]
	044 Move X22, [X31+16]
	045 Move X21, [X31+24]
	046 Move X30, [X31+48]
	047 Return 
	048 Call 0x1C17F20

Method: System.Void SetupHDROutput(UnityEngine.Rendering.HDROutputUtils/HDRDisplayInformation hdrDisplayInformation, UnityEngine.ColorGamut hdrDisplayColorGamut, UnityEngine.Material material, UnityEngine.Rendering.HDROutputUtils/Operation hdrOperations)

Disassembly:
	0x03A656E0 MOVZ W21, 0x1
	0x03A656E4 MOV V11.16B, V10.16B
	0x03A656E8 FDIV S13, S8, S10
	0x03A656EC MOVZ W22, 0x7
	0x03A656F0 STR S0, [X31 + 0xC]
	0x03A656F4 LDR V1, [X31 + 0x10]
	0x03A656F8 SCVTF S0, W21
	0x03A656FC UBFM W8, W21, 0x1D, 0x1C
	0x03A65700 SUB W8, W8, W21
	0x03A65704 FADD S0, S0, S1
	0x03A65708 LDR V1, [X31 + 0xC]
	0x03A6570C MOV W23, W31
	0x03A65710 SCVTF S14, W8
	0x03A65714 FDIV S10, S0, S1
	0x03A65718 SCVTF S0, W23
	0x03A6571C LDR V1, [X31 + 0x20]
	0x03A65720 FMUL S0, S0, S8
	0x03A65724 FDIV S15, S0, S14
	0x03A65728 FMUL S0, S15, S11
	0x03A6572C FADD S0, S0, S1
	0x03A65730 FDIV S0, S0, S8
	0x03A65734 FRINTM S0, S0
	0x03A65738 FMUL S0, S13, S0
	0x03A6573C FSUB S0, S15, S0
	0x03A65740 BL 0x3EB1BD0
	0x03A65744 LDR V1, [X31 + 0x18]
	0x03A65748 FDIV S0, S1, S0
	0x03A6574C LDR V1, [X31 + 0x24]
	0x03A65750 BL 0x3EB1B50
	0x03A65754 MOV V12.16B, V0.16B
	0x03A65758 LDR V0, [X31 + 0x1C]
	0x03A6575C ADD X0, X31, 0x2C
	0x03A65760 ADD X1, X31, 0x28
	0x03A65764 FSUB S0, S15, S0
	0x03A65768 BL 0x3EB1BC0
	0x03A6576C LDR X8, [X19 + 0x220]
	0x03A65770 CBZ X8, 0x3A65808
	0x03A65774 LDR W10, [X8 + 0x18]
	0x03A65778 ADD W9, W20, W23
	0x03A6577C CMP W9, W10
	0x03A65780 B.CS 0x3A6580C
	0x03A65784 LDP S2, S1, [X31 + 0x28]
	0x03A65788 FMUL S0, S10, S12
	0x03A6578C LDR V4, [X31 + 0x14]
	0x03A65790 SXTW X9, W9
	0x03A65794 FMUL S2, S2, S0
	0x03A65798 FMUL S0, S1, S0
	0x03A6579C FMUL S1, S2, S9
	0x03A657A0 FMUL S0, S0, S9
	0x03A657A4 ADD X8, X8, X9, 0x4, LSL
	0x03A657A8 FMUL S2, S0, S0
	0x03A657AC FMUL S3, S1, S1
	0x03A657B0 ADD W23, W23, 0x1
	0x03A657B4 STP S1, S0, [X8 + 0x20]
	0x03A657B8 FADD S0, S3, S2
	0x03A657BC CMP W22, W23
	0x03A657C0 FMUL S4, S1, S4
	0x03A657C4 FSQRT S0, S0
	0x03A657C8 STP S0, S4, [X8 + 0x28]
	0x03A657CC B.NE 0x3A65718
	0x03A657D0 ADD W21, W21, 0x1
	0x03A657D4 ADD W22, W22, 0x7
	0x03A657D8 CMP W21, 0x4
	0x03A657DC ADD W20, W20, W23
	0x03A657E0 B.NE 0x3A656F4
	0x03A657E4 LDP X20, X19, [X31 + 0x90]

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+16], X30
	003 Move [X31+32], X26
	004 Move [X31+40], X25
	005 Move [X31+48], X24
	006 Move [X31+56], X23
	007 Move [X31+64], X22
	008 Move [X31+72], X21
	009 Move [X31+80], X20
	010 Move [X31+88], X19
	011 Move X26, 0x97E000
	012 Move X25, 0x6B8000
	013 Move W8, [X26+593]
	014 Move X25, [X25+2216]
	015 Move W19, W5
	016 Move X21, X4
	017 Move W20, W3
	018 Move X22, X2
	019 Move X23, X1
	020 Move X24, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {33}
	025 Move X0, 0x6F0000
	026 Move X0, [X0+32]
	027 Call 0x1C17CF4
	028 Move X0, 0x6B8000
	029 Move X0, [X0+2216]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X26+593], W8
	033 Move X0, [X25]
	034 Move [X31], X31
	035 Move [X31+8], X31
	036 Move X25, 0x6F0000
	037 Move X24, [X24+496]
	038 Move W8, [X0+224]
	039 Move X25, [X25+32]
	040 Compare W8, 0
	041 JumpIfNotEqual {43}
	042 Call 0x1C17DFC
	043 Add X4, X31, 0
	044 Move X0, X23
	045 Move X1, X22
	046 Move W2, W20
	047 Move X3, X24
	048 Move X5, X31
	049 Call UniversalRenderPipeline.GetHDROutputLuminanceParameters, X0, X1, X2, X3
	050 Move X0, [X25]
	051 Move W8, [X0+224]
	052 Compare W8, 0
	053 JumpIfNotEqual {55}
	054 Call 0x1C17DFC
	055 Compare X21, 0
	056 JumpIfEqual {83}
	057 Move X8, [X25]
	058 Move S2, [X31+8]
	059 Move S3, [X31+12]
	060 Move S0, [X31]
	061 Move S1, [X31+4]
	062 Move X0, X21
	063 Move X8, [X8+184]
	064 Move X2, X31
	065 Move W1, [X8+204]
	066 Call Material.SetVector, X0, X1, X2
	067 Move X0, X21
	068 Move W1, W20
	069 Move W2, W19
	070 Move X3, X31
	071 Call HDROutputUtils.ConfigureHDROutput, X0, X1, X2
	072 Move X20, [X31+80]
	073 Move X19, [X31+88]
	074 Move X22, [X31+64]
	075 Move X21, [X31+72]
	076 Move X24, [X31+48]
	077 Move X23, [X31+56]
	078 Move X26, [X31+32]
	079 Move X25, [X31+40]
	080 Move X30, [X31+16]
	081 Add X31, X31, 96
	082 Return 
	083 Call 0x1C17F20

Method: System.Void RenderFinalPass(UnityEngine.Rendering.CommandBuffer cmd, ref UnityEngine.Rendering.Universal.RenderingData renderingData)

Disassembly:
	0x03A60B74 MOV X1, X24
	0x03A60B78 MOV X3, X31
	0x03A60B7C BL 0x39B1DB0
	0x03A60B80 LDR X24, [X31 + 0x260]
	0x03A60B84 LDR X25, [X31 + 0x240]
	0x03A60B88 ADD X1, X31, 0x240
	0x03A60B8C MOV X0, X19
	0x03A60B90 BL 0x3A61D04
	0x03A60B94 MOV X3, X0
	0x03A60B98 MOV X0, X19
	0x03A60B9C MOV X1, X24
	0x03A60BA0 MOV X2, X25
	0x03A60BA4 MOV X4, X20
	0x03A60BA8 BL 0x3A6262C
	0x03A60BAC LDR X1, [X31 + 0x18]
	0x03A60BB0 ADD X2, X31, 0x240
	0x03A60BB4 MOV X0, X19
	0x03A60BB8 BL 0x3A61E5C
	0x03A60BBC ADD X0, X31, 0x278
	0x03A60BC0 MOV X1, X31
	0x03A60BC4 BL 0x39B1DB4
	0x03A60BC8 LDR W8, [X31 + 0x14]
	0x03A60BCC TBNZ X8, 0x0, 0x3A60C48
	0x03A60BD0 ADRP X8, 0x6F4000
	0x03A60BD4 LDR X24, [X31 + 0x260]
	0x03A60BD8 LDR X8, [X8 + 0xA8]
	0x03A60BDC MOVZ W0, 0x17
	0x03A60BE0 LDR X1, [X8]
	0x03A60BE4 BL 0x2235BC0
	0x03A60BE8 MOV X2, X0
	0x03A60BEC ADD X0, X31, 0x278
	0x03A60BF0 MOV X1, X24
	0x03A60BF4 MOV X3, X31
	0x03A60BF8 BL 0x39B1DB0
	0x03A60BFC LDR X24, [X21 + 0xD8]
	0x03A60C00 LDR X25, [X31 + 0x260]
	0x03A60C04 LDR X26, [X31 + 0x240]
	0x03A60C08 ADD X1, X31, 0x240
	0x03A60C0C MOV X0, X19
	0x03A60C10 BL 0x3A61D04
	0x03A60C14 MOV X4, X0
	0x03A60C18 MOV X0, X19
	0x03A60C1C MOV X1, X24
	0x03A60C20 MOV X2, X25
	0x03A60C24 MOV X3, X26
	0x03A60C28 BL 0x3A627F4
	0x03A60C2C LDR X1, [X31 + 0x18]
	0x03A60C30 ADD X2, X31, 0x240
	0x03A60C34 MOV X0, X19
	0x03A60C38 BL 0x3A61E5C
	0x03A60C3C ADD X0, X31, 0x278
	0x03A60C40 MOV X1, X31
	0x03A60C44 BL 0x39B1DB4
	0x03A60C48 ADRP X8, 0x6F4000
	0x03A60C4C LDR X24, [X31 + 0x260]
	0x03A60C50 LDR X8, [X8 + 0xA8]
	0x03A60C54 MOVZ W0, 0x18
	0x03A60C58 LDR X1, [X8]
	0x03A60C5C BL 0x2235BC0
	0x03A60C60 MOV X2, X0
	0x03A60C64 ADD X0, X31, 0x278
	0x03A60C68 MOV X1, X24
	0x03A60C6C MOV X3, X31
	0x03A60C70 BL 0x39B1DB0
	0x03A60C74 LDR X8, [X19 + 0x198]
	0x03A60C78 CBZ X8, 0x3A61534
	0x03A60C7C LDR X0, [X8 + 0x60]
	0x03A60C80 CBZ X0, 0x3A61538
	0x03A60C84 MOV X1, X31
	0x03A60C88 MOV X2, X31
	0x03A60C8C BL 0x3C152D0
	0x03A60C90 LDR X8, [X19 + 0x1C0]
	0x03A60C94 CBZ X8, 0x3A6153C
	0x03A60C98 LDR X0, [X8 + 0x48]
	0x03A60C9C CBZ X0, 0x3A61540
	0x03A60CA0 LDR X8, [X0]
	0x03A60CA4 LDR X1, [X8 + 0x220]
	0x03A60CA8 LDR X9, [X8 + 0x218]
	0x03A60CAC BLR X9
	0x03A60CB0 FCMP S0, 0x0
	0x03A60CB4 B.LE 0x3A60D30
	0x03A60CB8 ADRP X8, 0x6F4000
	0x03A60CBC LDR X24, [X31 + 0x260]
	0x03A60CC0 LDR X8, [X8 + 0xA8]
	0x03A60CC4 LDR X1, [X8]
	0x03A60CC8 MOVZ W0, 0x19
	0x03A60CCC BL 0x2235BC0
	0x03A60CD0 MOV X2, X0
	0x03A60CD4 STRB W31, [X31 + 0x1A0]
	0x03A60CD8 ADD X0, X31, 0x1A0
	0x03A60CDC MOV X1, X24
	0x03A60CE0 MOV X3, X31
	0x03A60CE4 BL 0x39B1DB0
	0x03A60CE8 LDRB W8, [X31 + 0x1A0]
	0x03A60CEC STRB W8, [X31 + 0x208]
	0x03A60CF0 LDR X8, [X19 + 0x198]
	0x03A60CF4 CBZ X8, 0x3A6157C
	0x03A60CF8 LDR X1, [X31 + 0x260]
	0x03A60CFC LDR X2, [X31 + 0x240]
	0x03A60D00 LDR X3, [X8 + 0x60]
	0x03A60D04 MOV X0, X19
	0x03A60D08 BL 0x3A62A28
	0x03A60D0C MOV X26, X31
	0x03A60D10 MOVZ W22, 0x2E
	0x03A60D14 ADD X0, X31, 0x208
	0x03A60D18 MOV X1, X31
	0x03A60D1C BL 0x39B1DB4
	0x03A60D20 CBNZ X26, 0x3A61580
	0x03A60D24 CMP W22, 0x2E
	0x03A60D28 B.EQ 0x3A60D30
	0x03A60D2C CBNZ W22, 0x3A614F4
	0x03A60D30 LDR W8, [X31 + 0x10]
	0x03A60D34 CBZ W8, 0x3A60EF0
	0x03A60D38 LDR X8, [X19 + 0x1B8]
	0x03A60D3C CBZ X8, 0x3A61564
	0x03A60D40 LDR X0, [X8 + 0x38]
	0x03A60D44 CBZ X0, 0x3A61568
	0x03A60D48 LDR X8, [X0]
	0x03A60D4C LDR X1, [X8 + 0x220]
	0x03A60D50 LDR X9, [X8 + 0x218]
	0x03A60D54 BLR X9
	0x03A60D58 MOV V8.16B, V0.16B
	0x03A60D5C FMOV S10, 1
	0x03A60D60 FCMP S0, 0x0
	0x03A60D64 FMOV S9, 1
	0x03A60D68 B.LE 0x3A60DB4
	0x03A60D6C LDR X8, [X19 + 0x1B8]
	0x03A60D70 CBZ X8, 0x3A6159C
	0x03A60D74 LDR X0, [X8 + 0x38]
	0x03A60D78 CBZ X0, 0x3A615A0
	0x03A60D7C LDR X8, [X0]
	0x03A60D80 LDR X1, [X8 + 0x220]
	0x03A60D84 LDR X9, [X8 + 0x218]
	0x03A60D88 BLR X9
	0x03A60D8C LDR X8, [X19 + 0x1B8]
	0x03A60D90 CBZ X8, 0x3A615A4
	0x03A60D94 LDR X0, [X8 + 0x40]
	0x03A60D98 CBZ X0, 0x3A615A8
	0x03A60D9C LDR X8, [X0]
	0x03A60DA0 MOV V9.16B, V0.16B
	0x03A60DA4 LDR X1, [X8 + 0x220]
	0x03A60DA8 LDR X9, [X8 + 0x218]
	0x03A60DAC BLR X9
	0x03A60DB0 MOV V10.16B, V0.16B
	0x03A60DB4 ADRP X8, 0x6F4000
	0x03A60DB8 LDR X24, [X31 + 0x260]
	0x03A60DBC LDR X8, [X8 + 0xA8]
	0x03A60DC0 LDR X1, [X8]
	0x03A60DC4 MOVZ W0, 0x1A
	0x03A60DC8 BL 0x2235BC0
	0x03A60DCC MOV X2, X0
	0x03A60DD0 STRB W31, [X31 + 0x1A0]
	0x03A60DD4 ADD X0, X31, 0x1A0
	0x03A60DD8 MOV X1, X24
	0x03A60DDC MOV X3, X31
	0x03A60DE0 BL 0x39B1DB0
	0x03A60DE4 LDRB W8, [X31 + 0x1A0]
	0x03A60DE8 LDR X25, [X31 + 0x260]
	0x03A60DEC LDR X0, [X31 + 0x240]
	0x03A60DF0 STRB W8, [X31 + 0x208]
	0x03A60DF4 LDR X24, [X21 + 0xD8]
	0x03A60DF8 ADD X8, X31, 0x1A0
	0x03A60DFC MOV X1, X31
	0x03A60E00 BL 0x39CDF64
	0x03A60E04 FCMP S8, 0x0
	0x03A60E08 CSET W4, GT
	0x03A60E0C MOV X0, X19
	0x03A60E10 MOV X1, X24
	0x03A60E14 MOV X2, X25
	0x03A60E18 MOV V0.16B, V9.16B
	0x03A60E1C MOV V1.16B, V10.16B
	0x03A60E20 BL 0x3A635C0
	0x03A60E24 MOV X26, X31
	0x03A60E28 MOVZ W22, 0x32
	0x03A60E2C ADD X0, X31, 0x208
	0x03A60E30 MOV X1, X31
	0x03A60E34 BL 0x39B1DB4
	0x03A60E38 CBNZ X26, 0x3A6156C
	0x03A60E3C CMP W22, 0x32
	0x03A60E40 B.EQ 0x3A60E48
	0x03A60E44 CBNZ W22, 0x3A614F4
	0x03A60E48 ADRP X8, 0x6F4000
	0x03A60E4C LDR X24, [X31 + 0x260]
	0x03A60E50 LDR X8, [X8 + 0xA8]
	0x03A60E54 LDR X1, [X8]
	0x03A60E58 MOVZ W0, 0x1B
	0x03A60E5C BL 0x2235BC0
	0x03A60E60 MOV X2, X0
	0x03A60E64 STRB W31, [X31 + 0x1A0]
	0x03A60E68 ADD X0, X31, 0x1A0
	0x03A60E6C MOV X1, X24
	0x03A60E70 MOV X3, X31
	0x03A60E74 BL 0x39B1DB0
	0x03A60E78 LDRB W8, [X31 + 0x1A0]
	0x03A60E7C LDR X25, [X31 + 0x260]
	0x03A60E80 LDR X0, [X31 + 0x240]
	0x03A60E84 STRB W8, [X31 + 0x208]
	0x03A60E88 LDR X24, [X21 + 0xD8]
	0x03A60E8C ADD X8, X31, 0x1A0
	0x03A60E90 MOV X1, X31
	0x03A60E94 BL 0x39CDF64
	0x03A60E98 LDP V0, V1, [X31 + 0x1A0]
	0x03A60E9C LDR X8, [X31 + 0x1C0]
	0x03A60EA0 FCMP S8, 0x0
	0x03A60EA4 CSET W4, GT
	0x03A60EA8 STP V0, V1, [X31 + 0xB0]
	0x03A60EAC STR X8, [X31 + 0xD0]
	0x03A60EB0 ADD X3, X31, 0xB0
	0x03A60EB4 MOV X0, X19
	0x03A60EB8 MOV X1, X24
	0x03A60EBC MOV X2, X25
	0x03A60EC0 MOV V0.16B, V9.16B
	0x03A60EC4 MOV V1.16B, V10.16B
	0x03A60EC8 BL 0x3A63860
	0x03A60ECC MOV X26, X31
	0x03A60ED0 MOVZ W22, 0x2F
	0x03A60ED4 ADD X0, X31, 0x208
	0x03A60ED8 MOV X1, X31
	0x03A60EDC BL 0x39B1DB4
	0x03A60EE0 CBNZ X26, 0x3A61588
	0x03A60EE4 CMP W22, 0x2F
	0x03A60EE8 B.EQ 0x3A60EF0
	0x03A60EEC CBNZ W22, 0x3A614F4
	0x03A60EF0 LDR X8, [X19 + 0x198]
	0x03A60EF4 CBZ X8, 0x3A61548
	0x03A60EF8 LDR X1, [X8 + 0x60]
	0x03A60EFC LDR W8, [X31 + 0x27C]
	0x03A60F00 MOV X0, X19
	0x03A60F04 AND W2, W8, 0x1
	0x03A60F08 BL 0x3A63C30
	0x03A60F0C LDR X8, [X19 + 0x198]
	0x03A60F10 CBZ X8, 0x3A6154C
	0x03A60F14 LDR X1, [X8 + 0x60]
	0x03A60F18 MOV X0, X19
	0x03A60F1C BL 0x3A63EFC
	0x03A60F20 LDR X8, [X19 + 0x198]
	0x03A60F24 CBZ X8, 0x3A61550
	0x03A60F28 LDR X1, [X8 + 0x60]
	0x03A60F2C LDR X2, [X21 + 0x190]
	0x03A60F30 MOV X0, X19
	0x03A60F34 BL 0x3A64004
	0x03A60F38 LDR X8, [X19 + 0x198]
	0x03A60F3C CBZ X8, 0x3A61554
	0x03A60F40 LDR X1, [X31 + 0x260]
	0x03A60F44 LDR X3, [X8 + 0x60]
	0x03A60F48 MOV X0, X19
	0x03A60F4C MOV X2, X21
	0x03A60F50 BL 0x3A64250
	0x03A60F54 LDR X8, [X19 + 0x198]
	0x03A60F58 CBZ X8, 0x3A61558
	0x03A60F5C LDR X2, [X8 + 0x60]
	0x03A60F60 MOV X0, X19
	0x03A60F64 MOV X1, X20
	0x03A60F68 BL 0x3A645A0
	0x03A60F6C LDR X8, [X19 + 0x198]
	0x03A60F70 CBZ X8, 0x3A6155C
	0x03A60F74 LDR X2, [X8 + 0x60]
	0x03A60F78 MOV X0, X19
	0x03A60F7C MOV X1, X20
	0x03A60F80 BL 0x3A64648
	0x03A60F84 MOV X0, X20
	0x03A60F88 MOV X1, X31
	0x03A60F8C BL 0x3A93110
	0x03A60F90 TBZ X0, 0x0, 0x3A60FC0
	0x03A60F94 LDRB W8, [X19 + 0x236]
	0x03A60F98 CBZ W8, 0x3A60FC0
	0x03A60F9C LDR X8, [X19 + 0x198]
	0x03A60FA0 CBZ X8, 0x3A615C0
	0x03A60FA4 LDR X0, [X8 + 0x60]
	0x03A60FA8 CBZ X0, 0x3A615C4
	0x03A60FAC ADRP X8, 0x6F5000
	0x03A60FB0 LDR X8, [X8 + 0xF90]
	0x03A60FB4 LDR X1, [X8]
	0x03A60FB8 MOV X2, X31
	0x03A60FBC BL 0x3C14E3C
	0x03A60FC0 MOV X0, X20
	0x03A60FC4 MOV X1, X31
	0x03A60FC8 BL 0x3A9006C
	0x03A60FCC TBZ X0, 0x0, 0x3A61034
	0x03A60FD0 LDR X8, [X21 + 0x1A8]
	0x03A60FD4 CBNZ X8, 0x3A61034
	0x03A60FD8 LDRB W8, [X19 + 0x235]
	0x03A60FDC CBZ W8, 0x3A60FE8
	0x03A60FE0 MOV W23, W31
	0x03A60FE4 B 0x3A60FF0
	0x03A60FE8 LDRB W8, [X19 + 0x236]
	0x03A60FEC UBFM W23, W8, 0x1F, 0x1E
	0x03A60FF0 MOV X0, X20
	0x03A60FF4 MOV X1, X31
	0x03A60FF8 BL 0x3A93358
	0x03A60FFC MOV X24, X0
	0x03A61000 MOV X25, X1
	0x03A61004 MOV X0, X20
	0x03A61008 MOV X1, X31
	0x03A6100C BL 0x3A9344C
	0x03A61010 LDR X8, [X19 + 0x198]
	0x03A61014 CBZ X8, 0x3A615D0
	0x03A61018 LDR X4, [X8 + 0x60]
	0x03A6101C MOV W3, W0
	0x03A61020 MOV X0, X19
	0x03A61024 MOV X1, X24
	0x03A61028 MOV X2, X25
	0x03A6102C MOV W5, W23
	0x03A61030 BL 0x3A646E0
	0x03A61034 LDRB W8, [X19 + 0x237]
	0x03A61038 CBZ W8, 0x3A61060
	0x03A6103C LDR X8, [X19 + 0x198]
	0x03A61040 CBZ X8, 0x3A61590
	0x03A61044 LDR X0, [X8 + 0x60]
	0x03A61048 CBZ X0, 0x3A61594
	0x03A6104C ADRP X8, 0x6F5000
	0x03A61050 LDR X8, [X8 + 0x610]
	0x03A61054 LDR X1, [X8]
	0x03A61058 MOV X2, X31
	0x03A6105C BL 0x3C14E3C
	0x03A61060 ADRP X23, 0x6F2000
	0x03A61064 LDR X23, [X23 + 0xFF0]
	0x03A61068 LDR X0, [X23]
	0x03A6106C LDR W8, [X0 + 0xE0]
	0x03A61070 CBNZ W8, 0x3A61078
	0x03A61074 BL 0x1C16DFC
	0x03A61078 MOV X0, X21
	0x03A6107C MOV X1, X31
	0x03A61080 BL 0x3A43B70
	0x03A61084 MOV X24, X0
	0x03A61088 CBZ X0, 0x3A610A4
	0x03A6108C MOV X0, X24
	0x03A61090 MOV X1, X20
	0x03A61094 MOV X2, X31
	0x03A61098 BL 0x3A35A68
	0x03A6109C AND W22, W0, 0x1
	0x03A610A0 B 0x3A610A8
	0x03A610A4 MOV W22, W31
	0x03A610A8 LDR X0, [X23]
	0x03A610AC LDR X25, [X19 + 0x120]
	0x03A610B0 LDR W8, [X0 + 0xE0]
	0x03A610B4 CBNZ W8, 0x3A610C0
	0x03A610B8 BL 0x1C16DFC
	0x03A610BC LDR X0, [X23]
	0x03A610C0 LDR X8, [X0 + 0xB8]
	0x03A610C4 LDR X8, [X8]
	0x03A610C8 CMP X25, X8
	0x03A610CC B.EQ 0x3A610D8
	0x03A610D0 MOVZ W23, 0x2
	0x03A610D4 B 0x3A610E0
	0x03A610D8 LDRB W8, [X21 + 0x184]
	0x03A610DC UBFM W23, W8, 0x1F, 0x1E
	0x03A610E0 ADD X8, X31, 0x1A0
	0x03A610E4 MOVZ W0, 0x2
	0x03A610E8 MOV X1, X31
	0x03A610EC BL 0x3C4B204
	0x03A610F0 LDP V0, V1, [X31 + 0x1A0]
	0x03A610F4 LDR X8, [X31 + 0x1C0]
	0x03A610F8 STP V0, V1, [X31 + 0x210]
	0x03A610FC STR X8, [X31 + 0x230]
	0x03A61100 LDR X0, [X21 + 0x190]
	0x03A61104 CBZ X0, 0x3A61560
	0x03A61108 MOV X1, X31
	0x03A6110C BL 0x3984C98
	0x03A61110 TBZ X0, 0x0, 0x3A6112C
	0x03A61114 LDR X8, [X21 + 0x190]
	0x03A61118 CBZ X8, 0x3A61598
	0x03A6111C LDR X9, [X8 + 0x50]
	0x03A61120 LDP V1, V0, [X8 + 0x30]
	0x03A61124 STR X9, [X31 + 0x230]
	0x03A61128 STP V1, V0, [X31 + 0x210]
	0x03A6112C LDRB W8, [X19 + 0x23A]
	0x03A61130 CBNZ W8, 0x3A6118C
	0x03A61134 LDRB W8, [X21 + 0x1D8]
	0x03A61138 CBNZ W8, 0x3A6117C
	0x03A6113C LDR X8, [X19 + 0x120]
	0x03A61140 CBZ X8, 0x3A615D4
	0x03A61144 LDUR V0, [X8 + 0x28]
	0x03A61148 LDUR V1, [X8 + 0x38]
	0x03A6114C LDR X8, [X8 + 0x48]
	0x03A61150 LDP V2, V3, [X31 + 0x210]
	0x03A61154 LDR X9, [X31 + 0x230]
	0x03A61158 STP V0, V1, [X31 + 0x80]
	0x03A6115C STR X8, [X31 + 0xA0]
	0x03A61160 STP V2, V3, [X31 + 0x50]
	0x03A61164 STR X9, [X31 + 0x70]
	0x03A61168 ADD X0, X31, 0x80
	0x03A6116C ADD X1, X31, 0x50
	0x03A61170 MOV X2, X31
	0x03A61174 BL 0x3C4B6D8
	0x03A61178 TBZ X0, 0x0, 0x3A61528
	0x03A6117C MOVZ W8, 0x1
	0x03A61180 LDRB W9, [X19 + 0x23A]
	0x03A61184 STRB W8, [X19 + 0x239]
	0x03A61188 CBZ W9, 0x3A612A8
	0x03A6118C LDRB W8, [X19 + 0x239]
	0x03A61190 CBZ W8, 0x3A61240
	0x03A61194 CBZ W22, 0x3A61250
	0x03A61198 CBZ X24, 0x3A615AC
	0x03A6119C LDR X20, [X31 + 0x260]
	0x03A611A0 LDR X21, [X31 + 0x240]
	0x03A611A4 MOV X0, X24
	0x03A611A8 MOV X1, X31
	0x03A611AC BL 0x3A35A14
	0x03A611B0 LDR X9, [X19 + 0x198]
	0x03A611B4 CBZ X9, 0x3A615B0
	0x03A611B8 ADRP X8, 0x6F1000
	0x03A611BC LDR X8, [X8 + 0xE28]
	0x03A611C0 LDR X23, [X0]
	0x03A611C4 LDR X19, [X9 + 0x60]
	0x03A611C8 LDR X8, [X8]
	0x03A611CC LDR W10, [X8 + 0xE0]
	0x03A611D0 CBNZ W10, 0x3A611DC
	0x03A611D4 MOV X0, X8
	0x03A611D8 BL 0x1C16DFC
	0x03A611DC MOV X0, X20
	0x03A611E0 MOV X1, X21
	0x03A611E4 MOV X2, X23
	0x03A611E8 MOV W3, W31
	0x03A611EC MOV W4, W31
	0x03A611F0 MOV X5, X19
	0x03A611F4 MOV W6, W31
	0x03A611F8 MOV X7, X31
	0x03A611FC BL 0x39E3120
	0x03A61200 LDR X8, [X31 + 0x18]
	0x03A61204 LDR X19, [X8]
	0x03A61208 MOV X0, X24
	0x03A6120C MOV X1, X31
	0x03A61210 BL 0x3A35A14
	0x03A61214 LDR X20, [X0]
	0x03A61218 MOV X0, X24
	0x03A6121C MOV X1, X31
	0x03A61220 BL 0x3A35A1C
	0x03A61224 CBZ X19, 0x3A615B4
	0x03A61228 LDR X2, [X0]
	0x03A6122C MOV X0, X19
	0x03A61230 MOV X1, X20
	0x03A61234 MOV X3, X31
	0x03A61238 BL 0x3A4B4D8
	0x03A6123C B 0x3A614F4
	0x03A61240 LDRB W8, [X19 + 0x235]
	0x03A61244 CBZ W8, 0x3A61348
	0x03A61248 LDR X20, [X31 + 0x248]
	0x03A6124C B 0x3A6138C
	0x03A61250 ADRP X8, 0x692000
	0x03A61254 LDR X8, [X8 + 0x598]
	0x03A61258 LDR X24, [X21 + 0xE8]
	0x03A6125C LDR X0, [X8]
	0x03A61260 LDR W8, [X0 + 0xE0]
	0x03A61264 CBNZ W8, 0x3A6126C
	0x03A61268 BL 0x1C16DFC
	0x03A6126C MOV X0, X24
	0x03A61270 MOV X1, X31
	0x03A61274 MOV X2, X31
	0x03A61278 BL 0x3C354F8
	0x03A6127C TBZ X0, 0x0, 0x3A61408
	0x03A61280 LDR X1, [X21 + 0xE8]
	0x03A61284 MOVI V0.2D, 0x0
	0x03A61288 STR X31, [X31 + 0x1C0]
	0x03A6128C STP V0, V0, [X31 + 0x1A0]
	0x03A61290 ADD X0, X31, 0x1A0
	0x03A61294 MOV X2, X31
	0x03A61298 BL 0x3C4B0C4
	0x03A6129C LDP V0, V1, [X31 + 0x1A0]
	0x03A612A0 LDR X8, [X31 + 0x1C0]
	0x03A612A4 B 0x3A61410
	0x03A612A8 LDR X20, [X31 + 0x240]
	0x03A612AC LDR X21, [X31 + 0x260]
	0x03A612B0 ADD X1, X31, 0x240
	0x03A612B4 MOV X0, X19
	0x03A612B8 BL 0x3A61D04
	0x03A612BC LDR X8, [X19 + 0x198]
	0x03A612C0 CBZ X8, 0x3A615D8
	0x03A612C4 ADRP X9, 0x6F1000
	0x03A612C8 LDR X9, [X9 + 0xE28]
	0x03A612CC MOV X22, X0
	0x03A612D0 LDR X24, [X8 + 0x60]
	0x03A612D4 LDR X0, [X9]
	0x03A612D8 LDR W9, [X0 + 0xE0]
	0x03A612DC CBNZ W9, 0x3A612E4
	0x03A612E0 BL 0x1C16DFC
	0x03A612E4 MOV X0, X21
	0x03A612E8 MOV X1, X20
	0x03A612EC MOV X2, X22
	0x03A612F0 MOV W3, W23
	0x03A612F4 MOV W4, W31
	0x03A612F8 MOV X5, X24
	0x03A612FC MOV W6, W31
	0x03A61300 MOV X7, X31
	0x03A61304 BL 0x39E3120
	0x03A61308 LDR X20, [X31 + 0x260]
	0x03A6130C ADD X1, X31, 0x240
	0x03A61310 MOV X0, X19
	0x03A61314 BL 0x3A61D04
	0x03A61318 LDR X22, [X19 + 0x120]
	0x03A6131C CBZ X22, 0x3A615DC
	0x03A61320 MOV X21, X0
	0x03A61324 LDR X0, [X22 + 0x18]
	0x03A61328 LDR X19, [X19 + 0x250]
	0x03A6132C CBZ X0, 0x3A614B4
	0x03A61330 MOV X1, X31
	0x03A61334 BL 0x3C1AB20
	0x03A61338 CMP W0, 0x1
	0x03A6133C B.NE 0x3A614B4
	0x03A61340 MOVZ W23, 0x1
	0x03A61344 B 0x3A614B8
	0x03A61348 LDR X8, [X31 + 0x18]
	0x03A6134C LDR X0, [X8]
	0x03A61350 CBZ X0, 0x3A615E0
	0x03A61354 LDR X8, [X0]
	0x03A61358 LDR X9, [X8 + 0x248]
	0x03A6135C LDR X2, [X8 + 0x250]
	0x03A61360 MOVZ W1, 0x1
	0x03A61364 BLR X9
	0x03A61368 LDR X8, [X31 + 0x18]
	0x03A6136C LDR X0, [X8]
	0x03A61370 CBZ X0, 0x3A615E4
	0x03A61374 LDR X8, [X0]
	0x03A61378 LDR X1, [X31 + 0x260]
	0x03A6137C LDP X9, X2, [X8 + 0x198]
	0x03A61380 BLR X9
	0x03A61384 MOV X20, X0
	0x03A61388 STR X0, [X31 + 0x248]
	0x03A6138C LDR X8, [X19 + 0x198]
	0x03A61390 CBZ X8, 0x3A615B8
	0x03A61394 ADRP X9, 0x6F1000
	0x03A61398 LDR X9, [X9 + 0xE28]
	0x03A6139C LDR X25, [X31 + 0x260]
	0x03A613A0 LDR X24, [X31 + 0x240]
	0x03A613A4 LDR X21, [X8 + 0x60]
	0x03A613A8 LDR X0, [X9]
	0x03A613AC LDR W9, [X0 + 0xE0]
	0x03A613B0 CBNZ W9, 0x3A613B8
	0x03A613B4 BL 0x1C16DFC
	0x03A613B8 MOV X0, X25
	0x03A613BC MOV X1, X24
	0x03A613C0 MOV X2, X20
	0x03A613C4 MOV W3, W23
	0x03A613C8 MOV W4, W31
	0x03A613CC MOV X5, X21
	0x03A613D0 MOV W6, W31
	0x03A613D4 MOV X7, X31
	0x03A613D8 BL 0x39E3120
	0x03A613DC LDR X8, [X31 + 0x18]
	0x03A613E0 LDR X0, [X8]
	0x03A613E4 CBZ X0, 0x3A615BC
	0x03A613E8 LDR X1, [X31 + 0x248]
	0x03A613EC MOV X2, X31
	0x03A613F0 BL 0x3A4B604
	0x03A613F4 LDR X1, [X31 + 0x18]
	0x03A613F8 ADD X2, X31, 0x240
	0x03A613FC MOV X0, X19
	0x03A61400 BL 0x3A61E5C
	0x03A61404 B 0x3A614F4
	0x03A61408 LDP V0, V1, [X31 + 0x210]
	0x03A6140C LDR X8, [X31 + 0x230]
	0x03A61410 STP V0, V1, [X31 + 0x1E0]
	0x03A61414 LDP V0, V1, [X31 + 0x1E0]
	0x03A61418 STR X8, [X31 + 0x200]
	0x03A6141C STR X8, [X31 + 0x40]
	0x03A61420 STP V0, V1, [X31 + 0x20]
	0x03A61424 ADD X0, X31, 0x20
	0x03A61428 MOV X1, X31
	0x03A6142C BL 0x39D4528
	0x03A61430 LDR X8, [X19 + 0x198]

ISIL:
	001 Move [X31-112], D8
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Subtract X31, X31, 416
	015 Move X21, 0x983000
	016 Move W8, [X21+594]
	017 Move X20, X2
	018 Move X19, X1
	019 Move X24, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {68}
	024 Move X0, 0x6F3000
	025 Move X0, [X0+3624]
	026 Call 0x1C17CF4
	027 Move X0, 0x6F4000
	028 Move X0, [X0+152]
	029 Call 0x1C17CF4
	030 Move X0, 0x6F5000
	031 Move X0, [X0+16]
	032 Call 0x1C17CF4
	033 Move X0, 0x6F4000
	034 Move X0, [X0+4080]
	035 Call 0x1C17CF4
	036 Move X0, 0x6BD000
	037 Move X0, [X0+2216]
	038 Call 0x1C17CF4
	039 Move X0, 0x6F7000
	040 Move X0, [X0+1480]
	041 Call 0x1C17CF4
	042 Move X0, 0x6F7000
	043 Move X0, [X0+1488]
	044 Call 0x1C17CF4
	045 Move X0, 0x6F7000
	046 Move X0, [X0+1496]
	047 Call 0x1C17CF4
	048 Move X0, 0x6F7000
	049 Move X0, [X0+1504]
	050 Call 0x1C17CF4
	051 Move X0, 0x6F7000
	052 Move X0, [X0+1512]
	053 Call 0x1C17CF4
	054 Move X0, 0x6F7000
	055 Move X0, [X0+1520]
	056 Call 0x1C17CF4
	057 Move X0, 0x6F7000
	058 Move X0, [X0+1528]
	059 Call 0x1C17CF4
	060 Move X0, 0x6F6000
	061 Move X0, [X0+3984]
	062 Call 0x1C17CF4
	063 Move X0, 0x6F7000
	064 Move X0, [X0+1536]
	065 Call 0x1C17CF4
	066 Move W8, 1
	067 Move [X21+594], W8
	068 NotImplemented "Instruction MOVI not yet implemented."
	069 Move [X31+400], X31
	070 Move [X31+352], W31
	071 Move [X31+288], W31
	072 Move [X31+368], V0
	073 Move [X31+376], V0
	074 Move [X31+320], V0
	075 Move [X31+328], V0
	076 Move [X31+19], V0
	077 Move [X31+256], V0
	078 Move [X31+264], V0
	079 Move [X31+15], V0
	080 Move X8, [X24+408]
	081 Compare X8, 0
	082 JumpIfEqual {624}
	083 Move X21, [X8+104]
	084 Compare X21, 0
	085 JumpIfEqual {624}
	086 Move X0, X21
	087 Move X1, X31
	088 Move X2, X31
	089 Add X22, X20, 24
	090 Call Material.set_shaderKeywords, X0, X1
	091 Move W8, [X20+288]
	092 Move V1, [X20+256]
	093 Move V0, [X20+272]
	094 Move V2, [X20+15]
	095 Add X1, X31, 176
	096 Move X0, X19
	097 Move X2, X31
	098 Move [X31+224], W8
	099 Move [X31+192], V1
	100 Move [X31+200], V0
	101 Move [X31+11], V2
	102 Call PostProcessUtils.SetSourceSize, X0, X1
	103 Move X0, X24
	104 Move X1, X22
	105 Move X2, X21
	106 Call PostProcessPass.SetupGrain, X0, X1, X2
	107 Move X0, X24
	108 Move X1, X22
	109 Move X2, X21
	110 Call PostProcessPass.SetupDithering, X0, X1, X2
	111 Move X0, X22
	112 Move X1, X31
	113 Call CameraData.get_requireSrgbConversion, X0
	114 Move TEMP, X0
	115 And TEMP, TEMP, 1
	116 Compare TEMP, 1
	117 JumpIfNotEqual {127}
	118 Move W8, [X24+566]
	119 Compare W8, 0
	120 JumpIfEqual {127}
	121 Move X8, 0x6F6000
	122 Move X8, [X8+3984]
	123 Move X0, X21
	124 Move X2, X31
	125 Move X1, [X8]
	126 Call Material.EnableKeyword, X0, X1
	127 Move X27, 0x6F4000
	128 Move X27, [X27+4080]
	129 Move X0, X22
	130 Move X1, X31
	131 Call CameraData.get_isHDROutputActive, X0
	132 Move TEMP, X0
	133 And TEMP, TEMP, 1
	134 Compare TEMP, 1
	135 JumpIfNotEqual {139}
	136 Move X8, [X20+424]
	137 Compare X8, 0
	138 JumpIfEqual {292}
	139 Move [X31+428], W31
	140 Move X0, [X27]
	141 Move W8, [X0+224]
	142 Compare W8, 0
	143 JumpIfNotEqual {145}
	144 Call 0x1C17DFC
	145 Move X0, X20
	146 Move X1, X31
	147 Call ScriptableRenderPass.GetActiveDebugHandler, X0
	148 Move X23, X0
	149 Compare X0, 0
	150 JumpIfEqual {156}
	151 Move X0, X23
	152 Move X1, X22
	153 Move X2, X31
	154 Call DebugHandler.WriteToDebugScreenTexture, X0, X1
	155 And W27, W0, 1
	156 Move W27, W31
	157 Move W8, [X24+570]
	158 Compare W8, 0
	159 JumpIfEqual {170}
	160 Move X0, [X20+464]
	161 Compare X0, 0
	162 JumpIfEqual {624}
	163 Move X8, [X0]
	164 Move X1, X19
	165 Move X9, [X8+424]
	166 Move X2, [X8+432]
	167 NotImplemented "Instruction BLR not yet implemented."
	168 Move X26, X0
	169 Move [X24+280], X0
	170 Move X26, [X24+280]
	171 Move W9, [X20+360]
	172 Move W8, [X20+388]
	173 NotImplemented "Instruction CMP not yet implemented."
	174 Move W9, [X20+364]
	175 NotImplemented "Instruction CMP not yet implemented."
	176 NotImplemented "Instruction CSET not yet implemented."
	177 Move W28, W31
	178 Move W29, [X20+452]
	179 Move W8, W8
	180 ShiftRight W8, 31
	181 And W8, W8, 0x3FFFFFFF
	182 Move X0, X22
	183 Move X1, X31
	184 Move [X31+424], W8
	185 Call CameraData.IsTemporalAAEnabled, X0
	186 Move TEMP, X0
	187 And TEMP, TEMP, 1
	188 Compare TEMP, 1
	189 JumpIfNotEqual {193}
	190 Move V0, [X20+532]
	191 NotImplemented "Instruction FCMP not yet implemented."
	192 Xor W9, W28, 1
	193 Move W9, W31
	194 Move X25, 0x6F5000
	195 Move W8, [X20+360]
	196 Move X25, [X25+16]
	197 Compare W8, 0
	198 JumpIfEqual {280}
	199 Add X8, X20, 240
	200 Move V1, [X8+16]
	201 Move V0, [X8+32]
	202 Move W10, [X8+48]
	203 Move V2, [X8]
	204 Move [X31+28], W9
	205 NotImplemented "Instruction CMP not yet implemented."
	206 Move W9, 1
	207 Add X0, X31, 304
	208 Move W1, W31
	209 Move X2, X31
	210 NotImplemented "Instruction CSET not yet implemented."
	211 Move [X31+352], W10
	212 Move [X31+320], V1
	213 Move [X31+328], V0
	214 Move [X31+19], V2
	215 Move [X31+312], W9
	216 Call RenderTextureDescriptor.set_depthBufferBits, X0, X1
	217 Move W8, [X31+428]
	218 Move TEMP, X8
	219 And TEMP, TEMP, 1
	220 Compare TEMP, 1
	221 JumpIfEqual {235}
	222 Move X8, 0x6BD000
	223 Move X8, [X8+2216]
	224 Move X0, [X8]
	225 Move W8, [X0+224]
	226 Compare W8, 0
	227 JumpIfNotEqual {229}
	228 Call 0x1C17DFC
	229 Move X0, X31
	230 Call UniversalRenderPipeline.MakeUnormRenderTextureGraphicsFormat
	231 Move W1, W0
	232 Add X0, X31, 304
	233 Move X2, X31
	234 Call RenderTextureDescriptor.set_graphicsFormat, X0, X1
	235 Move X8, [X24+408]
	236 Compare X8, 0
	237 JumpIfEqual {624}
	238 Move X0, [X8+80]
	239 Move [X31+24], W27
	240 Compare X0, 0
	241 JumpIfEqual {624}
	242 Move X1, X31
	243 Move X2, X31
	244 Or W27, W28, W25
	245 Call Material.set_shaderKeywords, X0, X1
	246 Compare W27, 0
	247 JumpIfEqual {378}
	248 Move W8, [X31+428]
	249 Compare W8, 0
	250 JumpIfEqual {269}
	251 Move X0, X22
	252 Move X1, X31
	253 Call CameraData.get_hdrDisplayInformation, X0
	254 Move X26, X0
	255 Move X27, X1
	256 Move X0, X22
	257 Move X1, X31
	258 Call CameraData.get_hdrDisplayColorGamut, X0
	259 Move X8, [X24+408]
	260 Compare X8, 0
	261 JumpIfEqual {624}
	262 Move X4, [X8+80]
	263 Move W3, W0
	264 Move X0, X24
	265 Move X1, X26
	266 Move X2, X27
	267 Move W5, W31
	268 Call PostProcessPass.SetupHDROutput, X0, X1, X2, X3, X4
	269 And W31, W28, W25
	270 Move X25, 0x6F5000
	271 Move X8, [X24+408]
	272 Move X25, [X25+16]
	273 Compare X8, 0
	274 JumpIfEqual {624}
	275 Move X0, [X8+80]
	276 Compare X0, 0
	277 JumpIfEqual {624}
	278 Move X8, 0x6F7000
	279 Move X8, [X8+1488]
	280 NotImplemented "Instruction CMP not yet implemented."
	281 NotImplemented "Instruction CSET not yet implemented."
	282 NotImplemented "Instruction CMP not yet implemented."
	283 Move X8, 0x6F7000
	284 Move X8, [X8+1512]
	285 Move X0, X21
	286 Move X2, X31
	287 Move W24, W9
	288 Move X1, [X8]
	289 Call Material.EnableKeyword, X0, X1
	290 Compare W24, 0
	291 JumpIfNotEqual {509}
	292 Move W8, [X20+416]
	293 Move W9, [X24+566]
	294 Move X0, X22
	295 Move X1, X31
	296 Xor W8, W8, 1
	297 Or W23, W8, W9
	298 Call CameraData.get_hdrDisplayInformation, X0
	299 Move X25, X0
	300 Move X26, X1
	301 Move X0, X22
	302 Move X1, X31
	303 Call CameraData.get_hdrDisplayColorGamut, X0
	304 Move W3, W0
	305 Move X0, X24
	306 Move X1, X25
	307 Move X2, X26
	308 Move X4, X21
	309 Move W5, W23
	310 Call PostProcessPass.SetupHDROutput, X0, X1, X2, X3, X4
	311 Move W8, 1
	312 Move [X31+428], W8
	313 Move X25, 0x6F5000
	314 Move X25, [X25+16]
	315 NotImplemented "Instruction CMP not yet implemented."
	316 Move X8, [X24+408]
	317 Compare X8, 0
	318 JumpIfEqual {624}
	319 Move X0, [X8+80]
	320 Compare X0, 0
	321 JumpIfEqual {624}
	322 Move X8, 0x6F7000
	323 Move X8, [X8+1512]
	324 Compare W28, 0
	325 JumpIfEqual {337}
	326 Move X8, [X24+408]
	327 Compare X8, 0
	328 JumpIfEqual {624}
	329 Move X0, [X8+80]
	330 Compare X0, 0
	331 JumpIfEqual {624}
	332 Move X8, 0x6F7000
	333 Move X8, [X8+1504]
	334 Move X1, [X8]
	335 Move X2, X31
	336 Call Material.EnableKeyword, X0, X1
	337 Move X0, [X25]
	338 Add X26, X24, 576
	339 Move W8, [X0+224]
	340 Compare W8, 0
	341 JumpIfNotEqual {343}
	342 Call 0x1C17DFC
	343 Move X8, 0x6F6000
	344 Move X8, [X8+1536]
	345 Add X1, X31, 304
	346 Move S0, W31
	347 Move W3, 1
	348 Move X6, [X8]
	349 Move W5, 1
	350 Move X0, X26
	351 Move W2, W31
	352 Move W4, W31
	353 Move X7, X31
	354 Call RenderingUtils.ReAllocateIfNeeded, X0, X1, X2, X3, X4, X5, V0, X6
	355 Move X8, [X24+408]
	356 Compare X8, 0
	357 JumpIfEqual {624}
	358 Move X9, 0x6F2000
	359 Move X9, [X9+3624]
	360 Move X29, [X24+280]
	361 Move X28, [X24+576]
	362 Move X27, [X8+80]
	363 Move X0, [X9]
	364 Move W9, [X0+224]
	365 Compare W9, 0
	366 JumpIfNotEqual {368}
	367 Call 0x1C17DFC
	368 Move W3, [X31+424]
	369 Move X0, X19
	370 Move X1, X29
	371 Move X2, X28
	372 Move W4, W31
	373 Move X5, X27
	374 Move W6, W31
	375 Move X7, X31
	376 Call Blitter.BlitCameraTexture, X0, X1, X2, X3, X4, X5, X6
	377 Move X26, [X26]
	378 Move W8, [X20+360]
	379 Move W9, [X31+28]
	380 NotImplemented "Instruction CMP not yet implemented."
	381 Move W8, [X20+364]
	382 Move X25, 0x6F4000
	383 Move W27, [X31+24]
	384 Move X25, [X25+16]
	385 NotImplemented "Instruction CMP not yet implemented."
	386 NotImplemented "Instruction CMP not yet implemented."
	387 Move X8, [X24+408]
	388 Compare X8, 0
	389 JumpIfEqual {624}
	390 Move X0, [X8+88]
	391 Compare X0, 0
	392 JumpIfEqual {624}
	393 Move X1, X31
	394 Move X2, X31
	395 Call Material.set_shaderKeywords, X0, X1
	396 Move V0, [X31+304]
	397 Move V1, [X31+320]
	398 Move V2, [X31+21]
	399 Move W8, [X31+352]
	400 Move X0, [X25]
	401 Move [X31+240], V0
	402 Move [X31+248], V1
	403 Move [X31+17], V2
	404 Move [X31+288], W8
	405 Move V0, [X20+344]
	406 Add X27, X24, 584
	407 Move [X31+240], D0
	408 Move W8, [X0+224]
	409 Compare W8, 0
	410 JumpIfNotEqual {412}
	411 Call 0x1C17DFC
	412 Move X8, 0x6F6000
	413 Move X8, [X8+1528]
	414 Add X1, X31, 240
	415 Move S0, W31
	416 Move W3, 1
	417 Move X6, [X8]
	418 Move W5, 1
	419 Move X0, X27
	420 Move W2, W31
	421 Move W4, W31
	422 Move X7, X31
	423 Call RenderingUtils.ReAllocateIfNeeded, X0, X1, X2, X3, X4, X5, V0, X6
	424 Move S0, [X20+240]
	425 Move S1, [X20+244]
	426 Move V2, [X20+344]
	427 Move V3, [X20+348]
	428 Move X0, X19
	429 NotImplemented "Instruction SCVTF not yet implemented."
	430 NotImplemented "Instruction SCVTF not yet implemented."
	431 NotImplemented "Instruction SCVTF not yet implemented."
	432 NotImplemented "Instruction SCVTF not yet implemented."
	433 Move V2, V0
	434 Move V3, V1
	435 Move X1, X31
	436 Call FSRUtils.SetEasuConstants, X0, X1, X2, X3
	437 Move X8, [X24+408]
	438 Compare X8, 0
	439 JumpIfEqual {624}
	440 Move X9, 0x6F2000
	441 Move X9, [X9+3624]
	442 Move X28, [X24+584]
	443 Move X24, [X8+88]
	444 Move X0, [X9]
	445 Move W9, [X0+224]
	446 Compare W9, 0
	447 JumpIfNotEqual {449}
	448 Call 0x1C17DFC
	449 Move W3, [X31+424]
	450 Move X0, X19
	451 Move X1, X26
	452 Move X2, X28
	453 Move W4, W31
	454 Move X5, X24
	455 Move W6, W31
	456 Move X7, X31
	457 Call Blitter.BlitCameraTexture, X0, X1, X2, X3, X4, X5, X6
	458 Move V0, [X20+372]
	459 NotImplemented "Instruction FCMP not yet implemented."
	460 Move W8, [X20+368]
	461 Move X9, -49766400
	462 Move V1, [X9+592]
	463 Move X9, 0x6F6000
	464 Move X9, [X9+1520]
	465 NotImplemented "Instruction CMP not yet implemented."
	466 Move W8, [X31+428]
	467 NotImplemented "Instruction FCSEL not yet implemented."
	468 Move X0, X21
	469 Move X2, X31
	470 NotImplemented "Instruction CMP not yet implemented."
	471 Move X8, 0x6F6000
	472 Move X8, [X8+1480]
	473 NotImplemented "Instruction CSEL not yet implemented."
	474 Move X1, [X8]
	475 Call Material.EnableKeyword, X0, X1
	476 Move X0, X19
	477 Move V0, V8
	478 Move X1, X31
	479 Call FSRUtils.SetRcasConstantsLinear, X0, V0
	480 Move V0, [X31+240]
	481 Move V1, [X31+256]
	482 Move V2, [X31+17]
	483 Move W8, [X31+288]
	484 Move X26, [X27]
	485 Add X1, X31, 112
	486 Move X0, X19
	487 Move X2, X31
	488 Move [X31+112], V0
	489 Move [X31+120], V1
	490 Move [X31+9], V2
	491 Move [X31+160], W8
	492 Call PostProcessUtils.SetSourceSize, X0, X1
	493 Move W27, [X31+24]
	494 Move W8, [X31+28]
	495 Move X25, 0x6F4000
	496 Move W27, [X31+24]
	497 Move X25, [X25+16]
	498 Compare W9, 0
	499 JumpIfEqual {519}
	500 NotImplemented "Instruction CMP not yet implemented."
	501 NotImplemented "Instruction CMP not yet implemented."
	502 NotImplemented "Instruction CSET not yet implemented."
	503 Compare W9, 0
	504 JumpIfEqual {618}
	505 Compare W8, 0
	506 JumpIfNotEqual {509}
	507 Compare W9, 0
	508 JumpIfEqual {519}
	509 Move X8, 0x6F6000
	510 Move X8, [X8+1480]
	511 Move X0, X21
	512 Move X2, X31
	513 Move X1, [X8]
	514 Call Material.EnableKeyword, X0, X1
	515 Move V0, [X20+532]
	516 Move X0, X19
	517 Move X1, X31
	518 Call FSRUtils.SetRcasConstantsLinear, X0, V0
	519 Move X0, [X25]
	520 Move W8, [X0+224]
	521 Compare W8, 0
	522 JumpIfNotEqual {524}
	523 Call 0x1C17DFC
	524 Add X8, X31, 72
	525 Move X0, X20
	526 Move X1, X31
	527 Call RenderingUtils.GetCameraTargetIdentifier, X0
	528 NotImplemented "Instruction LDUR not yet implemented."
	529 NotImplemented "Instruction LDUR not yet implemented."
	530 Move X8, [X31+104]
	531 Move [X31+368], V0
	532 Move [X31+376], V1
	533 Move [X31+400], X8
	534 Compare W27, 0
	535 JumpIfEqual {574}
	536 Compare X23, 0
	537 JumpIfEqual {624}
	538 Move X0, X23
	539 Move X1, X31
	540 Call DebugHandler.get_DebugScreenColorHandle, X0
	541 Move X9, 0x6F2000
	542 Move X9, [X9+3624]
	543 Move X8, X0
	544 Move X22, [X8]
	545 Move X0, [X9]
	546 Move W9, [X0+224]
	547 Compare W9, 0
	548 JumpIfNotEqual {550}
	549 Call 0x1C17DFC
	550 Move X0, X19
	551 Move X1, X26
	552 Move X2, X22
	553 Move W3, W31
	554 Move W4, W31
	555 Move X5, X21
	556 Move W6, W31
	557 Move X7, X31
	558 Call Blitter.BlitCameraTexture, X0, X1, X2, X3, X4, X5, X6
	559 Move X19, [X20+464]
	560 Move X0, X23
	561 Move X1, X31
	562 Call DebugHandler.get_DebugScreenColorHandle, X0
	563 Move X20, [X0]
	564 Move X0, X23
	565 Move X1, X31
	566 Call DebugHandler.get_DebugScreenDepthHandle, X0
	567 Compare X19, 0
	568 JumpIfEqual {624}
	569 Move X2, [X0]
	570 Move X0, X19
	571 Move X1, X20
	572 Move X3, X31
	573 Call ScriptableRenderer.ConfigureCameraTarget, X0, X1, X2
	574 Move V0, [X31+368]
	575 Move V1, [X31+384]
	576 Move X8, [X31+400]
	577 Add X0, X31, 32
	578 Move X1, X31
	579 Move [X31+32], V0
	580 Move [X31+40], V1
	581 Move [X31+64], X8
	582 Call RTHandleStaticHelpers.SetRTHandleStaticWrapper, X0
	583 Move X8, 0x6F3000
	584 Move X8, [X8+152]
	585 Move X0, [X25]
	586 Move X8, [X8]
	587 Move W9, [X0+224]
	588 Move X8, [X8+184]
	589 Move X20, [X8]
	590 Compare W9, 0
	591 JumpIfNotEqual {593}
	592 Call 0x1C17DFC
	593 Move W4, [X31+424]
	594 Move X0, X19
	595 Move X1, X22
	596 Move X2, X26
	597 Move X3, X20
	598 Move W5, W31
	599 Move X6, X21
	600 Move W7, W31
	601 Move [X31], X31
	602 Call RenderingUtils.FinalBlit, X0, X1, X2, X3, X4, X5, X6, X7
	603 Add X31, X31, 416
	604 Move X20, [X31+96]
	605 Move X19, [X31+104]
	606 Move X22, [X31+80]
	607 Move X21, [X31+88]
	608 Move X24, [X31+64]
	609 Move X23, [X31+72]
	610 Move X26, [X31+48]
	611 Move X25, [X31+56]
	612 Move X28, [X31+32]
	613 Move X27, [X31+40]
	614 Move X29, [X31+16]
	615 Move X30, [X31+24]
	616 Move V8, [X31+112]
	617 Return 
	618 Move X8, 0x6F6000
	619 Move X8, [X8+1496]
	620 Move X0, X21
	621 Move X2, X31
	622 Move X1, [X8]
	623 Call Material.EnableKeyword, X0, X1
	624 Call 0x1C17F20

Method: System.Void .cctor()

Disassembly:
	0x03A66CF8 CBZ X0, 0x3A66EB4
	0x03A66CFC ADRP X23, 0x68D000
	0x03A66D00 ADRP X24, 0x68D000
	0x03A66D04 LDR X23, [X23 + 0xE18]
	0x03A66D08 LDR X24, [X24 + 0x758]
	0x03A66D0C MOV W22, W31
	0x03A66D10 LDR X8, [X19]
	0x03A66D14 LDR X1, [X23]
	0x03A66D18 LDRH W9, [X8 + 0x12E]
	0x03A66D1C CBZ X9, 0x3A66D40
	0x03A66D20 LDR X10, [X8 + 0xB0]
	0x03A66D24 ADD X10, X10, 0x8
	0x03A66D28 LDUR X11, [X10 - 0x8]
	0x03A66D2C CMP X11, X1
	0x03A66D30 B.EQ 0x3A66D50
	0x03A66D34 SUBS X9, X9, 0x1
	0x03A66D38 ADD X10, X10, 0x10
	0x03A66D3C B.NE 0x3A66D28
	0x03A66D40 MOV X0, X19
	0x03A66D44 MOV W2, W31
	0x03A66D48 BL 0x1C5C788
	0x03A66D4C B 0x3A66D5C
	0x03A66D50 LDRSW X9, [X10]
	0x03A66D54 ADD X8, X8, X9, 0x4, LSL
	0x03A66D58 ADD X0, X8, 0x138
	0x03A66D5C LDP X8, X1, [X0]
	0x03A66D60 MOV X0, X19
	0x03A66D64 BLR X8
	0x03A66D68 TBZ X0, 0x0, 0x3A66E18
	0x03A66D6C LDR X8, [X19]
	0x03A66D70 LDR X1, [X23]
	0x03A66D74 LDRH W9, [X8 + 0x12E]
	0x03A66D78 CBZ X9, 0x3A66D9C
	0x03A66D7C LDR X10, [X8 + 0xB0]
	0x03A66D80 ADD X10, X10, 0x8
	0x03A66D84 LDUR X11, [X10 - 0x8]
	0x03A66D88 CMP X11, X1
	0x03A66D8C B.EQ 0x3A66DAC
	0x03A66D90 SUBS X9, X9, 0x1
	0x03A66D94 ADD X10, X10, 0x10
	0x03A66D98 B.NE 0x3A66D84
	0x03A66D9C MOVZ W2, 0x1
	0x03A66DA0 MOV X0, X19
	0x03A66DA4 BL 0x1C5C788
	0x03A66DA8 B 0x3A66DBC
	0x03A66DAC LDR W9, [X10]
	0x03A66DB0 ADD W9, W9, 0x1
	0x03A66DB4 ADD X8, X8, W9, 0x4, SXTW
	0x03A66DB8 ADD X0, X8, 0x138
	0x03A66DBC LDP X8, X1, [X0]
	0x03A66DC0 MOV X0, X19
	0x03A66DC4 BLR X8
	0x03A66DC8 CBZ X0, 0x3A66EA4
	0x03A66DCC LDR X8, [X0]
	0x03A66DD0 LDR X1, [X24]
	0x03A66DD4 LDR X8, [X8 + 0x40]
	0x03A66DD8 LDR X9, [X1 + 0x40]
	0x03A66DDC CMP X8, X9
	0x03A66DE0 B.NE 0x3A66EAC
	0x03A66DE4 BL 0x1C16E08
	0x03A66DE8 LDR X8, [X20]
	0x03A66DEC LDR X8, [X8 + 0xB8]
	0x03A66DF0 LDR X8, [X8]
	0x03A66DF4 CBZ X8, 0x3A66EA8
	0x03A66DF8 LDR W9, [X8 + 0x18]
	0x03A66DFC CMP W22, W9
	0x03A66E00 B.CS 0x3A66EA0
	0x03A66E04 LDR W9, [X0]
	0x03A66E08 ADD X8, X8, W22, 0x2, SXTW
	0x03A66E0C ADD W22, W22, 0x1
	0x03A66E10 STR W9, [X8 + 0x20]
	0x03A66E14 B 0x3A66D10
	0x03A66E18 MOV X20, X31
	0x03A66E1C LDR X1, [X21]
	0x03A66E20 MOV X0, X19
	0x03A66E24 BL 0x1C16E00
	0x03A66E28 CBZ X0, 0x3A66E88
	0x03A66E2C LDR X8, [X0]
	0x03A66E30 LDR X1, [X21]
	0x03A66E34 MOV X19, X0
	0x03A66E38 LDRH W9, [X8 + 0x12E]
	0x03A66E3C CBZ X9, 0x3A66E60
	0x03A66E40 LDR X10, [X8 + 0xB0]
	0x03A66E44 ADD X10, X10, 0x8
	0x03A66E48 LDUR X11, [X10 - 0x8]
	0x03A66E4C CMP X11, X1
	0x03A66E50 B.EQ 0x3A66E70
	0x03A66E54 SUBS X9, X9, 0x1
	0x03A66E58 ADD X10, X10, 0x10
	0x03A66E5C B.NE 0x3A66E48
	0x03A66E60 MOV X0, X19
	0x03A66E64 MOV W2, W31
	0x03A66E68 BL 0x1C5C788
	0x03A66E6C B 0x3A66E7C
	0x03A66E70 LDRSW X9, [X10]
	0x03A66E74 ADD X8, X8, X9, 0x4, LSL
	0x03A66E78 ADD X0, X8, 0x138
	0x03A66E7C LDP X8, X1, [X0]

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X27, 0x97D000
	012 Move X26, 0x6EB000
	013 Move X19, 0x6F1000
	014 Move X20, 0x6EF000
	015 Move X25, 0x6F1000
	016 Move X24, 0x6F1000
	017 Move X23, 0x6F1000
	018 Move X22, 0x6F1000
	019 Move X21, 0x6F1000
	020 Move X26, [X26+1432]
	021 Move X19, [X19+1832]
	022 Move X20, [X20+2392]
	023 Move W8, [X27+595]
	024 Move X25, [X25+1840]
	025 Move X24, [X24+1848]
	026 Move X23, [X23+1856]
	027 Move X22, [X22+1864]
	028 Move X21, [X21+1872]
	029 Move TEMP, X8
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfEqual {59}
	033 Move X0, 0x6EF000
	034 Move X0, [X0+2392]
	035 Call 0x1C17CF4
	036 Move X0, 0x6EB000
	037 Move X0, [X0+1432]
	038 Call 0x1C17CF4
	039 Move X0, 0x6F1000
	040 Move X0, [X0+1856]
	041 Call 0x1C17CF4
	042 Move X0, 0x6F1000
	043 Move X0, [X0+1872]
	044 Call 0x1C17CF4
	045 Move X0, 0x6F1000
	046 Move X0, [X0+1832]
	047 Call 0x1C17CF4
	048 Move X0, 0x6F1000
	049 Move X0, [X0+1848]
	050 Call 0x1C17CF4
	051 Move X0, 0x6F1000
	052 Move X0, [X0+1840]
	053 Call 0x1C17CF4
	054 Move X0, 0x6F1000
	055 Move X0, [X0+1864]
	056 Call 0x1C17CF4
	057 Move W8, 1
	058 Move [X27+595], W8
	059 Move X0, [X26]
	060 Call 0x1C17F10
	061 Move X1, [X19]
	062 Move X2, X31
	063 Move X19, X0
	064 Call ProfilingSampler..ctor, X0, X1
	065 Move X8, [X20]
	066 Move X8, [X8+184]
	067 Move [X8], X19
	068 Move X0, [X26]
	069 Call 0x1C17F10
	070 Move X1, [X25]
	071 Move X2, X31
	072 Move X19, X0
	073 Call ProfilingSampler..ctor, X0, X1
	074 Move X8, [X20]
	075 Move X1, X31
	076 Move X8, [X8+184]
	077 Move [X8+8], X19
	078 Move X0, [X24]
	079 Call Shader.PropertyToID, X0
	080 Move X8, [X20]
	081 Move X1, X31
	082 Move X8, [X8+184]
	083 Move [X8+16], W0
	084 Move X0, [X23]
	085 Call Shader.PropertyToID, X0
	086 Move X8, [X20]
	087 Move X1, X31
	088 Move X8, [X8+184]
	089 Move [X8+20], W0
	090 Move X0, [X22]
	091 Call Shader.PropertyToID, X0
	092 Move X8, [X20]
	093 Move X1, X31
	094 Move X8, [X8+184]
	095 Move [X8+24], W0
	096 Move X0, [X21]
	097 Call Shader.PropertyToID, X0
	098 Move X8, [X20]
	099 Move X20, [X31+64]
	100 Move X19, [X31+72]
	101 Move X22, [X31+48]
	102 Move X21, [X31+56]
	103 Move X24, [X31+32]
	104 Move X23, [X31+40]
	105 Move X8, [X8+184]
	106 Move X26, [X31+16]
	107 Move X25, [X31+24]
	108 Move [X8+28], W0
	109 Move X30, [X31+80]
	110 Move X27, [X31+88]
	111 Return 

Method: UnityEngine.Rendering.RTHandle <Render>g__GetSource|69_0(ref UnityEngine.Rendering.Universal.PostProcessPass/<>c__DisplayClass69_0 param_0)

Disassembly:
	0x03A62CFC FMUL S3, S9, S0
	0x03A62D00 MOV X0, X22

ISIL:
	001 Move X0, [X1]
	002 Return X0

Method: UnityEngine.Rendering.RTHandle <Render>g__GetDestination|69_1(ref UnityEngine.Rendering.Universal.PostProcessPass/<>c__DisplayClass69_0 param_0)

Disassembly:
	0x03A62D04 LDR X8, [X8]
	0x03A62D08 MOV V0.16B, V10.16B
	0x03A62D0C MOV V1.16B, V8.16B
	0x03A62D10 MOV V2.16B, V9.16B
	0x03A62D14 LDR X8, [X8 + 0xB8]
	0x03A62D18 MOV X2, X31
	0x03A62D1C LDR W1, [X8 + 0x48]
	0x03A62D20 BL 0x3C15D80
	0x03A62D24 LDR X8, [X20 + 0x1C0]
	0x03A62D28 CBZ X8, 0x3A63584
	0x03A62D2C LDR X0, [X8 + 0x68]
	0x03A62D30 CBZ X0, 0x3A63584
	0x03A62D34 LDR X8, [X0]
	0x03A62D38 ADRP X26, 0x6B9000
	0x03A62D3C ADRP X27, 0x6F4000
	0x03A62D40 ADRP X19, 0x6F4000
	0x03A62D44 LDR X9, [X8 + 0x218]
	0x03A62D48 LDR X1, [X8 + 0x220]
	0x03A62D4C LDR X26, [X26 + 0x8F8]
	0x03A62D50 LDR X27, [X27 + 0x690]
	0x03A62D54 LDR X19, [X19 + 0x688]
	0x03A62D58 BLR X9
	0x03A62D5C LDR X8, [X26]
	0x03A62D60 MOV W26, W0
	0x03A62D64 LDR W9, [X8 + 0xE0]
	0x03A62D68 CBNZ W9, 0x3A62D74
	0x03A62D6C MOV X0, X8
	0x03A62D70 BL 0x1C16DFC
	0x03A62D74 LDR X1, [X27]
	0x03A62D78 AND W2, W26, 0x1
	0x03A62D7C MOV X0, X22
	0x03A62D80 MOV X3, X31
	0x03A62D84 BL 0x39E9638
	0x03A62D88 LDRB W2, [X20 + 0x204]
	0x03A62D8C LDR X1, [X19]
	0x03A62D90 MOV X0, X22
	0x03A62D94 MOV X3, X31
	0x03A62D98 BL 0x39E9638
	0x03A62D9C LDR W3, [X20 + 0x200]
	0x03A62DA0 ADD X8, X31, 0xA0
	0x03A62DA4 MOV X0, X20
	0x03A62DA8 MOV W1, W25
	0x03A62DAC MOV W2, W24
	0x03A62DB0 MOV W4, W31
	0x03A62DB4 BL 0x3A61B2C
	0x03A62DB8 LDP V0, V1, [X31 + 0xA0]
	0x03A62DBC LDR V2, [X31 + 0xC]
	0x03A62DC0 LDR W8, [X31 + 0xD0]
	0x03A62DC4 CMP W29, 0x1
	0x03A62DC8 STP V0, V1, [X31 + 0xF0]
	0x03A62DCC STR V2, [X31 + 0x11]
	0x03A62DD0 STR W8, [X31 + 0x120]
	0x03A62DD4 B.LT 0x3A62EB4
	0x03A62DD8 ADRP X26, 0x6F2000
	0x03A62DDC LDR X26, [X26 + 0x10]
	0x03A62DE0 MOV W19, W31
	0x03A62DE4 MOVI V8.2S, 0x1
	0x03A62DE8 LDR X28, [X20 + 0x168]
	0x03A62DEC CBZ X28, 0x3A63584
	0x03A62DF0 LDR W8, [X28 + 0x18]
	0x03A62DF4 CMP W19, W8
	0x03A62DF8 B.CS 0x3A63588
	0x03A62DFC SXTW X27, W19
	0x03A62E00 ADD X24, X28, X27, 0x3, LSL
	0x03A62E04 LDR X9, [X24 + 0x20]!
	0x03A62E08 CBZ X9, 0x3A63584
	0x03A62E0C LDR X0, [X26]
	0x03A62E10 LDR X25, [X9 + 0x58]
	0x03A62E14 LDR W10, [X0 + 0xE0]
	0x03A62E18 CBNZ W10, 0x3A62E24
	0x03A62E1C BL 0x1C16DFC
	0x03A62E20 LDR W8, [X28 + 0x18]
	0x03A62E24 CMP W19, W8
	0x03A62E28 B.CS 0x3A63588
	0x03A62E2C ADD X1, X31, 0xF0
	0x03A62E30 FMOV S0, W31
	0x03A62E34 MOVZ W2, 0x1
	0x03A62E38 MOVZ W3, 0x1
	0x03A62E3C MOVZ W5, 0x1
	0x03A62E40 MOV X0, X24
	0x03A62E44 MOV W4, W31
	0x03A62E48 MOV X6, X25
	0x03A62E4C MOV X7, X31
	0x03A62E50 BL 0x3A6D184
	0x03A62E54 LDR X8, [X20 + 0x160]
	0x03A62E58 CBZ X8, 0x3A63584

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+128], X30
	003 Move [X31+136], X21
	004 Move [X31+144], X20
	005 Move [X31+152], X19
	006 Move X21, 0x981000
	007 Move W8, [X21+596]
	008 Move X19, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {25}
	014 Move X0, 0x6F3000
	015 Move X0, [X0+16]
	016 Call 0x1C17CF4
	017 Move X0, 0x6F5000
	018 Move X0, [X0+1560]
	019 Call 0x1C17CF4
	020 Move X0, 0x6F5000
	021 Move X0, [X0+1568]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+596], W8
	025 NotImplemented "Instruction MOVI not yet implemented."
	026 Move [X31+112], W31
	027 Move [X31+80], V0
	028 Move [X31+88], V0
	029 Move [X31+4], V0
	030 Move X0, [X19+8]
	031 Compare X0, 0
	032 JumpIfEqual {58}
	033 Move X8, [X20+280]
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Move W8, [X20+232]
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Add X8, X31, 8
	038 Move X0, X20
	039 Add X21, X20, 400
	040 Call PostProcessPass.GetCompatibleDescriptor, X0
	041 Move X9, 0x6F3000
	042 Move W8, [X31+56]
	043 NotImplemented "Instruction LDUR not yet implemented."
	044 NotImplemented "Instruction LDUR not yet implemented."
	045 NotImplemented "Instruction LDUR not yet implemented."
	046 Move X9, [X9+16]
	047 Move [X31+112], W8
	048 Move [X31+80], V1
	049 Move [X31+88], V0
	050 Move [X31+4], V2
	051 Move X0, [X9]
	052 Move W8, [X0+224]
	053 Compare W8, 0
	054 JumpIfNotEqual {56}
	055 Call 0x1C17DFC
	056 Move X8, 0x6F5000
	057 Move X8, [X8+1560]
	058 Add X8, X31, 8
	059 Move X0, X20
	060 Add X21, X20, 392
	061 Call PostProcessPass.GetCompatibleDescriptor, X0
	062 Move X9, 0x6F3000
	063 Move W8, [X31+56]
	064 NotImplemented "Instruction LDUR not yet implemented."
	065 NotImplemented "Instruction LDUR not yet implemented."
	066 NotImplemented "Instruction LDUR not yet implemented."
	067 Move X9, [X9+16]
	068 Move [X31+112], W8
	069 Move [X31+80], V1
	070 Move [X31+88], V0
	071 Move [X31+4], V2
	072 Move X0, [X9]
	073 Move W8, [X0+224]
	074 Compare W8, 0
	075 JumpIfNotEqual {77}
	076 Call 0x1C17DFC
	077 Move X8, 0x6F5000
	078 Move X8, [X8+1568]
	079 Move X6, [X8]
	080 Add X1, X31, 64
	081 Move S0, W31
	082 Move W2, 1
	083 Move W3, 1
	084 Move W5, 1
	085 Move X0, X21
	086 Move W4, W31
	087 Move X7, X31
	088 Call RenderingUtils.ReAllocateIfNeeded, X0, X1, X2, X3, X4, X5, V0, X6
	089 Move X0, [X21]
	090 Move [X19+8], X0
	091 Move X20, [X31+144]
	092 Move X19, [X31+152]
	093 Move X30, [X31+128]
	094 Move X21, [X31+136]
	095 Add X31, X31, 160
	096 Return X0

Method: System.Void <Render>g__Swap|69_2(ref UnityEngine.Rendering.Universal.ScriptableRenderer r, ref UnityEngine.Rendering.Universal.PostProcessPass/<>c__DisplayClass69_0 param_1)

Disassembly:
	0x03A62E5C LDR W9, [X8 + 0x18]
	0x03A62E60 CMP W19, W9
	0x03A62E64 B.CS 0x3A63588
	0x03A62E68 ADD X0, X8, X27, 0x3, LSL
	0x03A62E6C LDR X8, [X0 + 0x20]!
	0x03A62E70 CBZ X8, 0x3A63584
	0x03A62E74 LDR X6, [X8 + 0x58]
	0x03A62E78 ADD X1, X31, 0xF0
	0x03A62E7C FMOV S0, W31
	0x03A62E80 MOVZ W2, 0x1
	0x03A62E84 MOVZ W3, 0x1
	0x03A62E88 MOVZ W5, 0x1
	0x03A62E8C MOV W4, W31
	0x03A62E90 MOV X7, X31
	0x03A62E94 BL 0x3A6D184
	0x03A62E98 LDR V0, [X31 + 0xF0]
	0x03A62E9C ADD W19, W19, 0x1
	0x03A62EA0 CMP W29, W19
	0x03A62EA4 UNIMPLEMENTED
	0x03A62EA8 SMAX S0.2S, S0.2S, S8.2S
	0x03A62EAC STR D0, [X31 + 0xF0]
	0x03A62EB0 B.NE 0x3A62DE8
	0x03A62EB4 LDR X8, [X20 + 0x160]
	0x03A62EB8 CBZ X8, 0x3A63584
	0x03A62EBC LDR W9, [X8 + 0x18]
	0x03A62EC0 CBZ W9, 0x3A63588
	0x03A62EC4 ADRP X9, 0x6F0000
	0x03A62EC8 LDR X9, [X9 + 0xE28]
	0x03A62ECC LDR X24, [X8 + 0x20]
	0x03A62ED0 LDR X0, [X9]
	0x03A62ED4 LDR W9, [X0 + 0xE0]
	0x03A62ED8 CBNZ W9, 0x3A62EE0
	0x03A62EDC BL 0x1C16DFC
	0x03A62EE0 MOVZ W3, 0x2
	0x03A62EE4 MOV X0, X21
	0x03A62EE8 MOV X1, X23
	0x03A62EEC MOV X2, X24
	0x03A62EF0 MOV W4, W31
	0x03A62EF4 MOV X5, X22
	0x03A62EF8 MOV W6, W31
	0x03A62EFC MOV X7, X31
	0x03A62F00 BL 0x39E3120
	0x03A62F04 LDR X8, [X20 + 0x160]
	0x03A62F08 CBZ X8, 0x3A63584
	0x03A62F0C LDR W9, [X8 + 0x18]
	0x03A62F10 CBZ W9, 0x3A63588
	0x03A62F14 CMP W29, 0x2
	0x03A62F18 B.LT 0x3A62FF8
	0x03A62F1C ADD X8, X8, 0x20
	0x03A62F20 MOV W19, W29
	0x03A62F24 MOVZ W25, 0x1
	0x03A62F28 MOVZ W26, 0x28
	0x03A62F2C LDR X9, [X20 + 0x168]
	0x03A62F30 CBZ X9, 0x3A63584
	0x03A62F34 LDR W10, [X9 + 0x18]
	0x03A62F38 CMP X25, X10
	0x03A62F3C B.CS 0x3A63588
	0x03A62F40 ADRP X10, 0x6F0000
	0x03A62F44 LDR X10, [X10 + 0xE28]
	0x03A62F48 LDR X23, [X8]
	0x03A62F4C LDR X24, [X9, X26, LSL]
	0x03A62F50 LDR X0, [X10]
	0x03A62F54 LDR W8, [X0 + 0xE0]
	0x03A62F58 CBNZ W8, 0x3A62F60
	0x03A62F5C BL 0x1C16DFC
	0x03A62F60 MOVZ W3, 0x2
	0x03A62F64 MOVZ W6, 0x1
	0x03A62F68 MOV X0, X21
	0x03A62F6C MOV X1, X23
	0x03A62F70 MOV X2, X24
	0x03A62F74 MOV W4, W31
	0x03A62F78 MOV X5, X22
	0x03A62F7C MOV X7, X31

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x981000
	007 Move W8, [X22+597]
	008 Move X19, X2
	009 Move X20, X1
	010 Move X21, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x6F5000
	016 Move X0, [X0+1576]
	017 Call 0x1C17CF4
	018 Move X0, 0x6BA000
	019 Move X0, [X0+2296]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+597], W8
	023 Move W8, [X19+24]
	024 Subtract W8, W8, 1
	025 Move [X19+24], W8
	026 Move W8, [X21+570]
	027 Compare W8, 0
	028 JumpIfEqual {72}
	029 Move X0, [X20]
	030 Compare X0, 0
	031 JumpIfEqual {92}
	032 Move X8, [X0]
	033 Move X1, [X19+32]
	034 Move X9, [X8+568]
	035 Move X2, [X8+576]
	036 NotImplemented "Instruction BLR not yet implemented."
	037 Move X0, [X20]
	038 Compare X0, 0
	039 JumpIfEqual {92}
	040 Move X1, X31
	041 Call ScriptableRenderer.get_cameraColorTargetHandle, X0
	042 Move W8, [X19+24]
	043 Move [X19], X0
	044 Compare W8, 0
	045 JumpIfNotEqual {57}
	046 Move W8, [X21+565]
	047 Compare W8, 0
	048 JumpIfNotEqual {57}
	049 Move X0, [X20]
	050 Compare X0, 0
	051 JumpIfEqual {92}
	052 Move X8, [X0]
	053 Move W1, 1
	054 Move X9, [X8+584]
	055 Move X2, [X8+592]
	056 NotImplemented "Instruction BLR not yet implemented."
	057 Move X0, [X20]
	058 Compare X0, 0
	059 JumpIfEqual {92}
	060 Move X8, [X0]
	061 Move X1, [X19+32]
	062 Move X9, [X8+408]
	063 Move X2, [X8+416]
	064 NotImplemented "Instruction BLR not yet implemented."
	065 Move [X19+8], X0
	066 Move X20, [X31+32]
	067 Move X19, [X31+40]
	068 Move X22, [X31+16]
	069 Move X21, [X31+24]
	070 Move X30, [X31+48]
	071 Return 
	072 Move X8, 0x6BA000
	073 Move X8, [X8+2296]
	074 Add X20, X19, 8
	075 Move X0, [X8]
	076 Move W8, [X0+224]
	077 Compare W8, 0
	078 JumpIfNotEqual {80}
	079 Call 0x1C17DFC
	080 Move X8, 0x6F5000
	081 Move X8, [X8+1576]
	082 Move X0, X19
	083 Move X1, X20
	084 Move X20, [X31+32]
	085 Move X19, [X31+40]
	086 Move X2, [X8]
	087 Move X22, [X31+16]
	088 Move X21, [X31+24]
	089 Move X30, [X31+48]
	090 Call 0x21A92A0, X0, X1
	091 Return 
	092 Call 0x1C17F20

