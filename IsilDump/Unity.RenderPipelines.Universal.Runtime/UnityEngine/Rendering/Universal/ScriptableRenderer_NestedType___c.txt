Type: UnityEngine.Rendering.Universal.ScriptableRenderer/<>c

Method: System.Void .cctor()

Disassembly:
	0x03A54794 CBZ X0, 0x3A547A0
	0x03A54798 MOV X1, X31
	0x03A5479C BL 0x39D904C
	0x03A547A0 LDR X0, [X19 + 0x18]
	0x03A547A4 CBZ X0, 0x3A547B0
	0x03A547A8 LDP X30, X19, [X31], #0x10
	0x03A547AC B 0x3A547B8
	0x03A547B0 LDP X30, X19, [X31], #0x10
	0x03A547B4 RET
	0x03A547B8 STP X30, X19, [X31 - 0x10]!
	0x03A547BC LDRB W8, [X0 + 0x14]
	0x03A547C0 CBZ W8, 0x3A547FC
	0x03A547C4 MOV X19, X0
	0x03A547C8 LDR X0, [X0 + 0x38]
	0x03A547CC CBZ X0, 0x3A547D8
	0x03A547D0 MOV X1, X31
	0x03A547D4 BL 0x3C3A930
	0x03A547D8 LDR X0, [X19 + 0x40]
	0x03A547DC CBZ X0, 0x3A547E8
	0x03A547E0 MOV X1, X31
	0x03A547E4 BL 0x3C3A930
	0x03A547E8 LDR X0, [X19 + 0x48]
	0x03A547EC CBZ X0, 0x3A547FC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x98F000
	005 Move X20, 0x702000
	006 Move W8, [X19+460]
	007 Move X20, [X20+3600]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x702000
	013 Move X0, [X0+3600]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+460], W8
	017 Move X0, [X20]
	018 Call 0x1C17F10
	019 Move X1, X31
	020 Move X19, X0
	021 Call Object..ctor, X0
	022 Move X8, [X20]
	023 Move X8, [X8+184]
	024 Move [X8], X19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Return 

Method: System.Void .ctor()

Disassembly:
	0x03A547F0 MOV X1, X31
	0x03A547F4 LDP X30, X19, [X31], #0x10

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: System.Void <InitRenderGraphFrame>b__132_0(UnityEngine.Rendering.Universal.ScriptableRenderer/PassData data, UnityEngine.Experimental.Rendering.RenderGraphModule.RenderGraphContext rgContext)

Disassembly:
	0x03A547F8 B 0x3C3A930
	0x03A547FC LDP X30, X19, [X31], #0x10
	0x03A54800 RET
	0x03A54804 STR X30, [X31 - 0x10]!
	0x03A54808 LDR X8, [X0 + 0x10]
	0x03A5480C CBZ X8, 0x3A54838
	0x03A54810 LDR X8, [X0 + 0x18]
	0x03A54814 CBZ X8, 0x3A54838
	0x03A54818 LDR X8, [X0 + 0x48]
	0x03A5481C CBZ X8, 0x3A54844
	0x03A54820 LDR W9, [X8 + 0x18]
	0x03A54824 CMP W9, W1
	0x03A54828 B.LS 0x3A54848
	0x03A5482C ADD X8, X8, W1, 0x2, SXTW
	0x03A54830 LDR W0, [X8 + 0x20]
	0x03A54834 B 0x3A5483C
	0x03A54838 MOVN W0, 0x0
	0x03A5483C LDR X30, [X31], #0x10
	0x03A54840 RET
	0x03A54844 BL 0x1C16F20
	0x03A54848 BL 0x1C16F28
	0x03A5484C SUB X31, X31, 0xB0
	0x03A54850 STP X30, X23, [X31 + 0x80]
	0x03A54854 STP X22, X21, [X31 + 0x90]
	0x03A54858 STP X20, X19, [X31 + 0xA0]
	0x03A5485C ADRP X23, 0x98E000
	0x03A54860 ADRP X21, 0x700000
	0x03A54864 LDRB W8, [X23 + 0x1D7]
	0x03A54868 LDR X21, [X21 + 0xA8]
	0x03A5486C MOV X22, X3
	0x03A54870 MOV X19, X2
	0x03A54874 MOV X20, X0
	0x03A54878 TBNZ X8, 0x0, 0x3A548A8
	0x03A5487C ADRP X0, 0x6C7000
	0x03A54880 LDR X0, [X0 + 0x8F8]
	0x03A54884 BL 0x1C16CF4
	0x03A54888 ADRP X0, 0x700000
	0x03A5488C LDR X0, [X0 + 0xA8]
	0x03A54890 BL 0x1C16CF4
	0x03A54894 ADRP X0, 0x702000
	0x03A54898 LDR X0, [X0 + 0x170]
	0x03A5489C BL 0x1C16CF4
	0x03A548A0 MOVZ W8, 0x1
	0x03A548A4 STRB W8, [X23 + 0x1D7]
	0x03A548A8 LDR X1, [X21]
	0x03A548AC MOVI V0.2D, 0x0
	0x03A548B0 MOVZ W0, 0xD
	0x03A548B4 STRB W31, [X31 + 0x78]
	0x03A548B8 STR W31, [X31 + 0x70]
	0x03A548BC STP V0, V0, [X31 + 0x50]
	0x03A548C0 STP V0, V0, [X31 + 0x30]
	0x03A548C4 STP V0, V0, [X31 + 0x10]
	0x03A548C8 STR V0, [X31]
	0x03A548CC BL 0x2235BC0
	0x03A548D0 MOV X2, X0

ISIL:
	001 Move [X31-64], D10
	002 Move [X31+8], D9
	003 Move [X31+16], D8
	004 Move [X31+24], X30
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X21, 0x98F000
	010 Move W8, [X21+461]
	011 Move X19, X2
	012 Move X20, X1
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0x701000
	018 Move X0, [X0+2248]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+461], W8
	022 Compare X19, 0
	023 JumpIfEqual {69}
	024 Move X22, 0x701000
	025 Move X21, [X19+24]
	026 Move X22, [X22+2248]
	027 Move X0, X31
	028 Call Time.get_time
	029 Move X0, X31
	030 Move V8, V0
	031 Call Time.get_deltaTime
	032 Move X0, X31
	033 Move V9, V0
	034 Call Time.get_smoothDeltaTime
	035 Move X0, [X22]
	036 Move V10, V0
	037 Move W8, [X0+224]
	038 Compare W8, 0
	039 JumpIfNotEqual {41}
	040 Call 0x1C17DFC
	041 Move X0, X21
	042 Move X1, X31
	043 Call ScriptableRenderer.ClearRenderingState, X0
	044 Move X0, X21
	045 Move V0, V8
	046 Move V1, V9
	047 Move V2, V10
	048 Move X1, X31
	049 Call ScriptableRenderer.SetShaderTimeValues, X0, V0, V1, V2
	050 Compare X20, 0
	051 JumpIfEqual {69}
	052 Move X0, [X20+712]
	053 Compare X0, 0
	054 JumpIfEqual {69}
	055 Move X8, [X0]
	056 Move X1, [X19+16]
	057 Add X2, X20, 16
	058 Move X20, [X31+48]
	059 Move X19, [X31+56]
	060 Move X4, [X8+488]
	061 Move X3, [X8+496]
	062 Move X22, [X31+32]
	063 Move X21, [X31+40]
	064 Move X30, [X31+24]
	065 Move D9, [X31+8]
	066 Move D8, [X31+16]
	067 Move V10, [X31+64]
	068 CallNoReturn X4
	069 Call 0x1C17F20

Method: System.Void <ProcessVFXCameraCommand>b__134_0(UnityEngine.Rendering.Universal.ScriptableRenderer/VFXProcessCameraPassData data, UnityEngine.Experimental.Rendering.RenderGraphModule.RenderGraphContext context)

Disassembly:
	0x03A548D4 ADD X0, X31, 0x78
	0x03A548D8 MOV X1, X19
	0x03A548DC MOV X3, X31
	0x03A548E0 BL 0x39B1DB0
	0x03A548E4 LDR W8, [X22]
	0x03A548E8 TBNZ X8, 0x1F, 0x3A5491C
	0x03A548EC LDR X9, [X22 + 0x10]
	0x03A548F0 MOVZ W10, 0x74
	0x03A548F4 ADD X0, X31, 0x0
	0x03A548F8 MOVZ W2, 0x74
	0x03A548FC MADD X1, X8, X10, X9
	0x03A54900 BL 0x3EB1B30
	0x03A54904 ADD X2, X31, 0x0
	0x03A54908 MOV X0, X20
	0x03A5490C MOV X1, X19
	0x03A54910 BL 0x3A54AB4
	0x03A54914 MOV W21, W0
	0x03A54918 B 0x3A54920
	0x03A5491C MOV W21, W31
	0x03A54920 LDR W8, [X22 + 0x4]
	0x03A54924 CMP W8, 0x0
	0x03A54928 B.LE 0x3A54948
	0x03A5492C MOV X0, X20
	0x03A54930 MOV X1, X19
	0x03A54934 MOV X2, X22
	0x03A54938 BL 0x3A54EC4
	0x03A5493C TBZ X0, 0x0, 0x3A54948
	0x03A54940 MOVZ W8, 0x1
	0x03A54944 B 0x3A549DC
	0x03A54948 LDR X9, [X20 + 0x48]
	0x03A5494C LDR X8, [X20 + 0x18]
	0x03A54950 CBZ X9, 0x3A549C8
	0x03A54954 CBZ X8, 0x3A54A3C
	0x03A54958 LDRB W10, [X8 + 0x50]
	0x03A5495C CBZ W10, 0x3A549CC
	0x03A54960 LDR X10, [X9 + 0x18]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0x98F000
	008 Move W8, [X21+462]
	009 Move X19, X2
	010 Move X20, X1
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x703000
	016 Move X0, [X0+144]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X21+462], W8
	020 Compare X20, 0
	021 JumpIfEqual {50}
	022 Compare X19, 0
	023 JumpIfEqual {50}
	024 Move X8, 0x703000
	025 Move X8, [X8+144]
	026 Move X22, [X19+24]
	027 Move X21, [X20+16]
	028 Move X19, [X20+24]
	029 Move X23, [X20+32]
	030 Move X0, [X8]
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {35}
	034 Call 0x1C17DFC
	035 Move X1, X22
	036 Move X4, X21
	037 Move X5, X19
	038 Move X20, [X31+32]
	039 Move X19, [X31+40]
	040 Move X22, [X31+16]
	041 Move X21, [X31+24]
	042 Move X0, X23
	043 Move X2, X31
	044 Move X3, X31
	045 Move X6, X31
	046 Move X30, [X31+48]
	047 Move X23, [X31+56]
	048 Call VFXManager.ProcessCameraCommand, X0, X1, X2, X3
	049 Return 
	050 Call 0x1C17F20

Method: System.Void <SetupRenderGraphCameraProperties>b__135_0(UnityEngine.Rendering.Universal.ScriptableRenderer/PassData data, UnityEngine.Experimental.Rendering.RenderGraphModule.RenderGraphContext context)

Disassembly:
	0x03A54964 CMP W10, 0x1
	0x03A54968 B.LT 0x3A549CC
	0x03A5496C ADRP X11, 0xFFFFFFFFFD096000
	0x03A54970 AND X10, X10, 0x0
	0x03A54974 LDR V0, [X11 + 0x79]
	0x03A54978 ADD X12, X10, 0x1
	0x03A5497C SUB X13, X10, 0x1
	0x03A54980 AND X10, X12, 0x0
	0x03A54984 MOVZ W12, 0x2
	0x03A54988 ADD X9, X9, 0x24
	0x03A5498C UNIMPLEMENTED
	0x03A54990 MOVN W11, 0x0
	0x03A54994 UNIMPLEMENTED
	0x00000000 INVALID
	0x03A5499C UNIMPLEMENTED
	0x03A549A0 FMOV W12, S3
	0x03A549A4 TBZ X12, 0x0, 0x3A549AC
	0x03A549A8 STUR W11, [X9 - 0x4]
	0x03A549AC UNIMPLEMENTED
	0x03A549B0 TBZ X12, 0x0, 0x3A549B8
	0x03A549B4 STR W11, [X9]
	0x00000000 INVALID
	0x03A549BC SUBS X10, X10, 0x2
	0x03A549C0 ADD X9, X9, 0x8
	0x03A549C4 B.NE 0x3A54998
	0x03A549C8 CBZ X8, 0x3A549DC
	0x03A549CC MOV X0, X8
	0x03A549D0 MOV X1, X19
	0x03A549D4 BL 0x3A55058
	0x03A549D8 MOV W8, W31
	0x03A549DC ADRP X9, 0x6C7000
	0x03A549E0 LDR X9, [X9 + 0x8F8]
	0x03A549E4 ORR W8, W21, W8, 0x0
	0x03A549E8 AND W21, W8, 0x1
	0x03A549EC STRB W21, [X20 + 0x5C]
	0x03A549F0 LDR X0, [X9]
	0x03A549F4 LDR W8, [X0 + 0xE0]
	0x03A549F8 CBNZ W8, 0x3A54A00
	0x03A549FC BL 0x1C16DFC
	0x03A54A00 ADRP X8, 0x702000
	0x03A54A04 LDR X8, [X8 + 0x170]
	0x03A54A08 LDR X1, [X8]
	0x03A54A0C MOV X0, X19
	0x03A54A10 MOV W2, W21
	0x03A54A14 MOV X3, X31
	0x03A54A18 BL 0x39E9618
	0x03A54A1C ADD X0, X31, 0x78
	0x03A54A20 MOV X1, X31
	0x03A54A24 BL 0x39B1DB4
	0x03A54A28 LDP X20, X19, [X31 + 0xA0]
	0x03A54A2C LDP X22, X21, [X31 + 0x90]
	0x03A54A30 LDP X30, X23, [X31 + 0x80]
	0x03A54A34 ADD X31, X31, 0xB0
	0x03A54A38 RET
	0x03A54A3C BL 0x1C16F20
	0x03A54A40 B 0x3A54A50
	0x03A54A44 B 0x3A54A50
	0x03A54A48 B 0x3A54A50
	0x03A54A4C B 0x3A54A50
	0x03A54A50 MOV X19, X0
	0x03A54A54 CMP W1, 0x1
	0x03A54A58 B.NE 0x3A54A84
	0x03A54A5C MOV X0, X19
	0x03A54A60 BL 0x3EB1AD0
	0x03A54A64 LDR X20, [X0]
	0x03A54A68 BL 0x3EB1AE0
	0x03A54A6C ADD X0, X31, 0x78
	0x03A54A70 MOV X1, X31
	0x03A54A74 BL 0x39B1DB4
	0x03A54A78 CBZ X20, 0x3A54A28
	0x03A54A7C MOV X0, X20
	0x03A54A80 BL 0x1C16F18
	0x03A54A84 MOV X20, X31
	0x03A54A88 B 0x3A54A90
	0x03A54A8C MOV X19, X0
	0x03A54A90 ADD X0, X31, 0x78
	0x03A54A94 MOV X1, X31
	0x03A54A98 BL 0x39B1DB4
	0x03A54A9C CBNZ X20, 0x3A54AA8
	0x03A54AA0 MOV X0, X19
	0x03A54AA4 BL 0x1D2C690
	0x03A54AA8 MOV X0, X20
	0x03A54AAC BL 0x1C16F18
	0x03A54AB0 BL 0x1990590
	0x03A54AB4 STR D8, [X31 - 0x50]!
	0x03A54AB8 STR X29, [X31 + 0x8]
	0x03A54ABC STP X30, X25, [X31 + 0x10]
	0x03A54AC0 STP X24, X23, [X31 + 0x20]
	0x03A54AC4 STP X22, X21, [X31 + 0x30]
	0x03A54AC8 STP X20, X19, [X31 + 0x40]
	0x03A54ACC SUB X31, X31, 0x390
	0x03A54AD0 ADRP X20, 0x98E000
	0x03A54AD4 LDRB W8, [X20 + 0x1D8]
	0x03A54AD8 MOV X22, X2
	0x03A54ADC MOV X19, X1
	0x03A54AE0 TBNZ X8, 0x0, 0x3A54B1C
	0x03A54AE4 ADRP X0, 0x702000
	0x03A54AE8 LDR X0, [X0 + 0x178]
	0x03A54AEC BL 0x1C16CF4

ISIL:
	001 Move [X31-80], D10
	002 Move [X31+16], D9
	003 Move [X31+24], D8
	004 Move [X31+32], X30
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X21, 0x98F000
	011 Move W8, [X21+463]
	012 Move X19, X2
	013 Move X20, X1
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0x6FD000
	019 Move X0, [X0+3200]
	020 Call 0x1C17CF4
	021 Move X0, 0x701000
	022 Move X0, [X0+2248]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X21+463], W8
	026 Compare X20, 0
	027 JumpIfEqual {120}
	028 Move W8, [X20+920]
	029 Add X21, X20, 720
	030 Compare W8, 0
	031 JumpIfEqual {61}
	032 Compare X19, 0
	033 JumpIfEqual {120}
	034 Move X0, [X20+712]
	035 Compare X0, 0
	036 JumpIfEqual {120}
	037 Move W8, [X20+1248]
	038 Move X1, [X19+24]
	039 Move X2, X21
	040 Move X4, X31
	041 NotImplemented "Instruction CMP not yet implemented."
	042 NotImplemented "Instruction CSET not yet implemented."
	043 Call ScriptableRenderer.SetPerCameraShaderVariables, X0, X1, X2, X3
	044 Move X0, [X20+712]
	045 Compare X0, 0
	046 JumpIfEqual {120}
	047 Move W8, [X20+1248]
	048 Move X1, [X19+24]
	049 Move X2, X21
	050 Move X4, X31
	051 NotImplemented "Instruction CMP not yet implemented."
	052 NotImplemented "Instruction CSET not yet implemented."
	053 Call ScriptableRenderer.SetPerCameraClippingPlaneProperties, X0, X1, X2, X3
	054 Move X0, [X20+712]
	055 Compare X0, 0
	056 JumpIfEqual {120}
	057 Move X1, [X19+24]
	058 Move X2, X21
	059 Move X3, X31
	060 Call ScriptableRenderer.SetPerCameraBillboardProperties, X0, X1, X2
	061 Compare X19, 0
	062 JumpIfEqual {120}
	063 Move X8, 0x6FD000
	064 Move X8, [X8+3200]
	065 Move X22, [X20+912]
	066 Add X23, X19, 16
	067 Move X0, [X8]
	068 Move W8, [X0+224]
	069 Compare W8, 0
	070 JumpIfNotEqual {72}
	071 Call 0x1C17DFC
	072 Move X0, X23
	073 Move X1, X22
	074 Move W2, W31
	075 Move X3, X31
	076 Call ScriptableRenderContext.SetupCameraProperties, X0, X1, X2
	077 Move X0, [X20+712]
	078 Compare X0, 0
	079 JumpIfEqual {120}
	080 Move W8, [X20+1248]
	081 Move X1, [X19+24]
	082 Move X2, X21
	083 Move X4, X31
	084 NotImplemented "Instruction CMP not yet implemented."
	085 NotImplemented "Instruction CSET not yet implemented."
	086 Call ScriptableRenderer.SetPerCameraShaderVariables, X0, X1, X2, X3
	087 Move X20, 0x701000
	088 Move X20, [X20+2248]
	089 Move X0, X31
	090 Call Time.get_time
	091 Move X0, X31
	092 Move V8, V0
	093 Call Time.get_deltaTime
	094 Move X0, X31
	095 Move V9, V0
	096 Call Time.get_smoothDeltaTime
	097 Move X0, [X20]
	098 Move X19, [X19+24]
	099 Move V10, V0
	100 Move W8, [X0+224]
	101 Compare W8, 0
	102 JumpIfNotEqual {104}
	103 Call 0x1C17DFC
	104 Move X0, X19
	105 Move V0, V8
	106 Move V1, V9
	107 Move X20, [X31+64]
	108 Move X19, [X31+72]
	109 Move X22, [X31+48]
	110 Move X21, [X31+56]
	111 Move X30, [X31+32]
	112 Move X23, [X31+40]
	113 Move D9, [X31+16]
	114 Move D8, [X31+24]
	115 Move V2, V10
	116 Move X1, X31
	117 Move V10, [X31+80]
	118 Call ScriptableRenderer.SetShaderTimeValues, X0, V0, V1, V2
	119 Return 
	120 Call 0x1C17F20

Method: System.Void <DrawRenderGraphGizmos>b__137_0(UnityEngine.Rendering.Universal.ScriptableRenderer/DrawGizmosPassData data, UnityEngine.Experimental.Rendering.RenderGraphModule.RenderGraphContext rgContext)

Disassembly:
	0x03A54AF0 ADRP X0, 0x702000
	0x03A54AF4 LDR X0, [X0 + 0x180]
	0x03A54AF8 BL 0x1C16CF4
	0x03A54AFC ADRP X0, 0x69F000

ISIL:
	001 Compare X1, 0
	002 JumpIfEqual {4}
	003 Return 
	004 Move [X31-16], X30
	005 Call 0x1C17F20

Method: System.Void <BeginRenderGraphXRRendering>b__139_0(UnityEngine.Rendering.Universal.ScriptableRenderer/BeginXRPassData data, UnityEngine.Experimental.Rendering.RenderGraphModule.RenderGraphContext context)

Disassembly:
	0x03A54B00 LDR X0, [X0 + 0x598]
	0x03A54B04 BL 0x1C16CF4
	0x03A54B08 ADRP X0, 0x702000
	0x03A54B0C LDR X0, [X0 + 0x188]
	0x03A54B10 BL 0x1C16CF4
	0x03A54B14 MOVZ W8, 0x1
	0x03A54B18 STRB W8, [X20 + 0x1D8]
	0x03A54B1C MOVI V0.2D, 0x0
	0x03A54B20 MOV X0, X22
	0x03A54B24 MOV X1, X31
	0x03A54B28 STR X31, [X31 + 0x348]
	0x03A54B2C STP V0, V0, [X31 + 0x370]
	0x03A54B30 STP V0, V0, [X31 + 0x350]
	0x03A54B34 STP V0, V0, [X31 + 0x320]
	0x03A54B38 STP V0, V0, [X31 + 0x300]
	0x03A54B3C STP V0, V0, [X31 + 0x2E0]
	0x03A54B40 STP V0, V0, [X31 + 0x2C0]
	0x03A54B44 BL 0x3C5BBF0
	0x03A54B48 CBZ X0, 0x3A54EC0
	0x03A54B4C ADRP X20, 0x69F000
	0x03A54B50 LDR X20, [X20 + 0x598]
	0x03A54B54 MOV X1, X31
	0x03A54B58 MOV X24, X0
	0x03A54B5C BL 0x3C16C80
	0x03A54B60 LDR X8, [X20]
	0x03A54B64 MOV X21, X0
	0x03A54B68 LDR W9, [X8 + 0xE0]
	0x03A54B6C CBNZ W9, 0x3A54B78
	0x03A54B70 MOV X0, X8
	0x03A54B74 BL 0x1C16DFC
	0x03A54B78 MOV X0, X21
	0x03A54B7C MOV X1, X31
	0x03A54B80 MOV X2, X31
	0x03A54B84 BL 0x3C354F8
	0x03A54B88 MOV W20, W0
	0x03A54B8C TBZ X0, 0x0, 0x3A54DB0
	0x03A54B90 ADRP X23, 0x984000
	0x03A54B94 LDRB W8, [X23 + 0xAC0]
	0x03A54B98 CBNZ W8, 0x3A54BB0
	0x03A54B9C ADRP X0, 0x6A3000
	0x03A54BA0 LDR X0, [X0 + 0x270]
	0x03A54BA4 BL 0x1C16CF4
	0x03A54BA8 MOVZ W8, 0x1
	0x03A54BAC STRB W8, [X23 + 0xAC0]
	0x03A54BB0 ADRP X8, 0x6A3000
	0x03A54BB4 LDR X8, [X8 + 0x270]
	0x03A54BB8 LDR X8, [X8]
	0x03A54BBC LDR X8, [X8 + 0xB8]
	0x03A54BC0 LDP V1, V0, [X8 + 0x60]
	0x03A54BC4 LDP V2, V3, [X8 + 0x40]
	0x03A54BC8 STP V1, V0, [X31 + 0x370]
	0x03A54BCC STP V2, V3, [X31 + 0x350]
	0x03A54BD0 CBZ X21, 0x3A54EC0
	0x03A54BD4 LDR X8, [X21]
	0x03A54BD8 MOV X0, X21
	0x03A54BDC LDP X9, X1, [X8 + 0x178]
	0x03A54BE0 BLR X9
	0x03A54BE4 MOV W1, W0
	0x03A54BE8 BL 0x3A550E4
	0x03A54BEC ADRP X8, 0x702000
	0x03A54BF0 LDR X8, [X8 + 0x178]
	0x03A54BF4 MOV W23, W0
	0x03A54BF8 ADD X1, X31, 0x348
	0x03A54BFC MOV X0, X24

ISIL:
	001 Move [X31-48], X29
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Subtract X31, X31, 528
	007 Move X21, 0x98F000
	008 Move W8, [X21+464]
	009 Move X19, X2
	010 Move X20, X1
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x6FD000
	016 Move X0, [X0+3200]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X21+464], W8
	020 Compare X20, 0
	021 JumpIfEqual {83}
	022 Add X1, X20, 712
	023 Add X0, X31, 0
	024 Move W2, 528
	025 Call 0x3EB2AC0
	026 Move X0, [X31+376]
	027 Compare X0, 0
	028 JumpIfEqual {83}
	029 Move X20, [X20+16]
	030 Move X1, X31
	031 Call XRPass.get_enabled, X0
	032 Move TEMP, X0
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfNotEqual {76}
	036 Add X0, X31, 0
	037 Move X1, X31
	038 Call CameraData.get_xrUniversal, X0
	039 Compare X0, 0
	040 JumpIfEqual {83}
	041 Move W8, [X0+1736]
	042 Compare W8, 0
	043 JumpIfEqual {51}
	044 Add X0, X31, 0
	045 Move X1, X31
	046 Call CameraData.get_xrUniversal, X0
	047 Compare X0, 0
	048 JumpIfEqual {83}
	049 Move W8, 1
	050 Move [X0+1737], W8
	051 Move X0, [X31+376]
	052 Compare X0, 0
	053 JumpIfEqual {83}
	054 Move X1, X20
	055 Move X2, X31
	056 Call XRPass.StartSinglePass, X0, X1
	057 Compare X19, 0
	058 JumpIfEqual {83}
	059 Move X8, 0x6FD000
	060 Move X8, [X8+3200]
	061 Add X19, X19, 16
	062 Move X0, [X8]
	063 Move W8, [X0+224]
	064 Compare W8, 0
	065 JumpIfNotEqual {67}
	066 Call 0x1C17DFC
	067 Move X0, X19
	068 Move X1, X20
	069 Move X2, X31
	070 Call ScriptableRenderContext.ExecuteCommandBuffer, X0, X1
	071 Compare X20, 0
	072 JumpIfEqual {83}
	073 Move X0, X20
	074 Move X1, X31
	075 Call CommandBuffer.Clear, X0
	076 Add X31, X31, 528
	077 Move X20, [X31+32]
	078 Move X19, [X31+40]
	079 Move X30, [X31+16]
	080 Move X21, [X31+24]
	081 Move X29, [X31+48]
	082 Return 
	083 Call 0x1C17F20

Method: System.Void <EndRenderGraphXRRendering>b__141_0(UnityEngine.Rendering.Universal.ScriptableRenderer/EndXRPassData data, UnityEngine.Experimental.Rendering.RenderGraphModule.RenderGraphContext context)

Disassembly:
	0x03A54C00 LDR X2, [X8]
	0x03A54C04 BL 0x21A4990
	0x03A54C08 TBZ X0, 0x0, 0x3A54C18
	0x03A54C0C ADD X1, X31, 0x348
	0x03A54C10 ADD X2, X31, 0x350
	0x03A54C14 BL 0x3A551B8
	0x03A54C18 ADRP X24, 0x702000
	0x03A54C1C LDR X24, [X24 + 0x180]
	0x03A54C20 LDR X0, [X24]
	0x03A54C24 LDR W8, [X0 + 0xE0]
	0x03A54C28 CBNZ W8, 0x3A54C34
	0x03A54C2C BL 0x1C16DFC
	0x03A54C30 LDR X0, [X24]
	0x03A54C34 LDR X8, [X0 + 0xB8]
	0x03A54C38 LDP V0, V1, [X31 + 0x350]
	0x03A54C3C LDP V2, V3, [X31 + 0x370]
	0x03A54C40 ADD X0, X31, 0x1C0
	0x03A54C44 LDP V4, V5, [X8]
	0x03A54C48 LDP V6, V7, [X8 + 0x20]
	0x03A54C4C STP V0, V1, [X31 + 0x180]
	0x03A54C50 STP V2, V3, [X31 + 0x1A0]
	0x03A54C54 STP V4, V5, [X31 + 0x280]
	0x03A54C58 STP V6, V7, [X31 + 0x2A0]
	0x03A54C5C LDP V0, V1, [X31 + 0x2A0]
	0x03A54C60 LDP V2, V3, [X31 + 0x280]
	0x03A54C64 ADD X8, X31, 0x200
	0x03A54C68 ADD X1, X31, 0x180
	0x03A54C6C MOV X2, X31
	0x03A54C70 ADD X24, X31, 0xD8
	0x03A54C74 STP V0, V1, [X31 + 0x1E0]
	0x03A54C78 STP V2, V3, [X31 + 0x1C0]
	0x03A54C7C BL 0x3C27F74
	0x03A54C80 LDP V0, V1, [X31 + 0x200]
	0x03A54C84 LDP V2, V3, [X31 + 0x220]
	0x03A54C88 ADD X8, X31, 0x200
	0x03A54C8C MOV X0, X22
	0x03A54C90 MOV X1, X31
	0x03A54C94 STP V0, V1, [X31 + 0x240]
	0x03A54C98 STP V2, V3, [X31 + 0x260]
	0x03A54C9C BL 0x3C5BC90
	0x03A54CA0 LDP V0, V1, [X31 + 0x200]
	0x03A54CA4 LDP V2, V3, [X31 + 0x220]
	0x03A54CA8 ADD X8, X31, 0x200
	0x03A54CAC ADD X0, X31, 0x2C0
	0x03A54CB0 MOV X1, X31
	0x03A54CB4 STP V0, V1, [X31 + 0x2C0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x98F000
	006 Move W8, [X21+465]
	007 Move X19, X2
	008 Move X20, X1
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x6FD000
	014 Move X0, [X0+3200]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+465], W8
	018 Compare X20, 0
	019 JumpIfEqual {64}
	020 Move X21, [X20+1088]
	021 Compare X21, 0
	022 JumpIfEqual {64}
	023 Move X20, [X20+16]
	024 Move X0, X21
	025 Move X1, X31
	026 Call XRPass.get_enabled, X0
	027 Move TEMP, X0
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfNotEqual {59}
	031 Move X0, X21
	032 Move X1, X20
	033 Move X2, X31
	034 Call XRPass.StopSinglePass, X0, X1
	035 Compare X19, 0
	036 JumpIfEqual {64}
	037 Move X8, 0x6FD000
	038 Move X8, [X8+3200]
	039 Add X19, X19, 16
	040 Move X0, [X8]
	041 Move W8, [X0+224]
	042 Compare W8, 0
	043 JumpIfNotEqual {45}
	044 Call 0x1C17DFC
	045 Move X0, X19
	046 Move X1, X20
	047 Move X2, X31
	048 Call ScriptableRenderContext.ExecuteCommandBuffer, X0, X1
	049 Compare X20, 0
	050 JumpIfEqual {64}
	051 Move X0, X20
	052 Move X20, [X31+16]
	053 Move X19, [X31+24]
	054 Move X1, X31
	055 Move X30, [X31+32]
	056 Move X21, [X31+40]
	057 Call CommandBuffer.Clear, X0
	058 Return 
	059 Move X20, [X31+16]
	060 Move X19, [X31+24]
	061 Move X30, [X31+32]
	062 Move X21, [X31+40]
	063 Return 
	064 Call 0x1C17F20

