Type: UnityEngine.Rendering.Universal.LightCookieManager/ShaderBitArray

Method: System.Int32 get_elemLength()

Disassembly:
	0x03A582DC ADD X8, X8, X22, 0x2, LSL
	0x03A582E0 ADD X9, X9, X22, 0x2, LSL
	0x03A582E4 LDR V8, [X19 + 0x148]
	0x03A582E8 LDR V9, [X8 + 0x20]
	0x03A582EC LDR W23, [X9 + 0x20]
	0x03A582F0 MOV X0, X31

ISIL:
	001 Move X8, [X0]
	002 Compare X8, 0
	003 JumpIfEqual {6}
	004 Move W0, [X8+24]
	005 Return X0
	006 Move W0, W31
	007 Return X0

Method: System.Int32 get_bitCapacity()

Disassembly:
	0x03A582F4 BL 0x3C3C88C
	0x03A582F8 FCMP S9, S8
	0x03A582FC B.NE 0x3A58308
	0x03A58300 CMP W23, W0
	0x03A58304 B.EQ 0x3A588BC
	0x03A58308 LDR X0, [X19 + 0x178]
	0x03A5830C CBZ X0, 0x3A588D8

ISIL:
	001 Move X8, [X0]
	002 Compare X8, 0
	003 JumpIfEqual {9}
	004 Move W8, [X8+24]
	005 Move W0, W8
	006 ShiftRight W0, 27
	007 And W0, W0, 0x3FFFFFF
	008 Return X0
	009 Move W0, W31
	010 Return X0

Method: System.Single[] get_data()

Disassembly:
	0x03A58310 MOV X1, X31
	0x03A58314 BL 0x3984C98

ISIL:
	001 Move X0, [X0]
	002 Return X0

Method: System.Void Resize(System.Int32 bitCount)

Disassembly:
	0x03A58318 TBZ X0, 0x0, 0x3A58514
	0x03A5831C LDR X0, [X19 + 0x178]
	0x03A58320 CBZ X0, 0x3A588D8
	0x03A58324 MOV X1, X31
	0x03A58328 BL 0x3984DE0
	0x03A5832C TBZ X0, 0x0, 0x3A58514
	0x03A58330 ADD X8, X31, 0x500
	0x03A58334 MOV X0, X19
	0x03A58338 MOV W1, W31
	0x03A5833C MOV X2, X31
	0x03A58340 BL 0x3A92CD8
	0x03A58344 LDR V0, [X31 + 0x50]
	0x03A58348 LDR V1, [X31 + 0x51]
	0x03A5834C LDR V2, [X31 + 0x52]
	0x03A58350 LDR V3, [X31 + 0x53]
	0x03A58354 ADD X8, X31, 0x500
	0x03A58358 ADD X0, X31, 0x400
	0x03A5835C MOVZ W1, 0x1
	0x03A58360 MOV X2, X31
	0x03A58364 STR V0, [X31 + 0x40]
	0x03A58368 STR V1, [X31 + 0x41]
	0x03A5836C STR V2, [X31 + 0x42]
	0x03A58370 STR V3, [X31 + 0x43]
	0x03A58374 BL 0x3C1015C
	0x03A58378 LDR V0, [X31 + 0x50]
	0x03A5837C LDR V1, [X31 + 0x51]
	0x03A58380 LDR V2, [X31 + 0x52]
	0x03A58384 LDR V3, [X31 + 0x53]
	0x03A58388 ADD X8, X31, 0x500
	0x03A5838C MOV X0, X19
	0x03A58390 MOV W1, W31
	0x03A58394 MOV X2, X31
	0x03A58398 STR V0, [X31 + 0x48]
	0x03A5839C STR V1, [X31 + 0x49]
	0x03A583A0 STR V2, [X31 + 0x4A]
	0x03A583A4 STR V3, [X31 + 0x4B]
	0x03A583A8 BL 0x3A92B70
	0x03A583AC LDR V0, [X31 + 0x50]
	0x03A583B0 LDR V1, [X31 + 0x51]
	0x03A583B4 LDR V2, [X31 + 0x52]
	0x03A583B8 LDR V3, [X31 + 0x53]
	0x03A583BC ADD X8, X31, 0x4C0
	0x03A583C0 STP V0, V1, [X31 + 0x380]
	0x03A583C4 LDR V0, [X31 + 0x48]
	0x03A583C8 LDR V1, [X31 + 0x49]
	0x03A583CC STP V2, V3, [X31 + 0x3A0]
	0x03A583D0 LDR V2, [X31 + 0x4A]
	0x03A583D4 LDR V3, [X31 + 0x4B]
	0x03A583D8 ADD X0, X31, 0x3C0
	0x03A583DC ADD X1, X31, 0x380
	0x03A583E0 MOV X2, X31
	0x03A583E4 STP V0, V1, [X31 + 0x3C0]
	0x03A583E8 STP V2, V3, [X31 + 0x3E0]
	0x03A583EC BL 0x3C27F74
	0x03A583F0 LDR V0, [X31 + 0x4C]
	0x03A583F4 LDR V1, [X31 + 0x4D]
	0x03A583F8 LDR V2, [X31 + 0x4E]
	0x03A583FC LDR V3, [X31 + 0x4F]
	0x03A58400 ADD X8, X31, 0x4C0
	0x03A58404 MOVZ W1, 0x1
	0x03A58408 MOV X0, X19
	0x03A5840C MOV X2, X31
	0x03A58410 STR V0, [X31 + 0x50]
	0x03A58414 STR V1, [X31 + 0x51]
	0x03A58418 STR V2, [X31 + 0x52]
	0x03A5841C STR V3, [X31 + 0x53]
	0x03A58420 BL 0x3A92CD8
	0x03A58424 LDR V0, [X31 + 0x4C]
	0x03A58428 LDR V1, [X31 + 0x4D]
	0x03A5842C LDR V2, [X31 + 0x4E]
	0x03A58430 LDR V3, [X31 + 0x4F]
	0x03A58434 ADD X8, X31, 0x4C0
	0x03A58438 ADD X0, X31, 0x340
	0x03A5843C MOVZ W1, 0x1
	0x03A58440 MOV X2, X31
	0x03A58444 STP V0, V1, [X31 + 0x340]
	0x03A58448 STP V2, V3, [X31 + 0x360]
	0x03A5844C BL 0x3C1015C
	0x03A58450 LDR V0, [X31 + 0x4C]
	0x03A58454 LDR V1, [X31 + 0x4D]
	0x03A58458 LDR V2, [X31 + 0x4E]
	0x03A5845C LDR V3, [X31 + 0x4F]
	0x03A58460 ADD X8, X31, 0x4C0
	0x03A58464 MOVZ W1, 0x1

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x98B000
	007 Move W8, [X21+488]
	008 Move W20, W1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {28}
	014 Move X0, 0x6A3000
	015 Move X0, [X0+1520]
	016 Call 0x1C17CF4
	017 Move X0, 0x69D000
	018 Move X0, [X0+1136]
	019 Call 0x1C17CF4
	020 Move X0, 0x69F000
	021 Move X0, [X0+3832]
	022 Call 0x1C17CF4
	023 Move X0, 0x69C000
	024 Move X0, [X0+1592]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X21+488], W8
	028 Move X8, [X19]
	029 Compare X8, 0
	030 JumpIfEqual {50}
	031 Move W9, [X8+24]
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move [X31+8], X31
	034 Move X11, 0x69D000
	035 Move X11, [X11+1136]
	036 Move W1, [X8+24]
	037 Add W9, W20, 31
	038 Add W10, W20, 62
	039 Move X2, [X11]
	040 NotImplemented "Instruction CMP not yet implemented."
	041 NotImplemented "Instruction CSEL not yet implemented."
	042 Add X0, X31, 8
	043 NotImplemented "Instruction SBFM not yet implemented."
	044 Call Nullable`1<Int32>..ctor, X0, X1
	045 Move W8, [X31+8]
	046 Compare W8, 0
	047 JumpIfEqual {59}
	048 Move W8, [X31+12]
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Move TEMP, X20
	051 And TEMP, TEMP, -2147483648
	052 Compare TEMP, -2147483648
	053 JumpIfEqual {84}
	054 Add W8, W20, 31
	055 Add W9, W20, 62
	056 NotImplemented "Instruction CMP not yet implemented."
	057 NotImplemented "Instruction CSEL not yet implemented."
	058 NotImplemented "Instruction SBFM not yet implemented."
	059 Move X8, 0x69C000
	060 Move X8, [X8+1592]
	061 Move W1, W20
	062 Move X0, [X8]
	063 Call 0x1C17D6C
	064 Move X12, [X19]
	065 Compare X12, 0
	066 JumpIfEqual {83}
	067 Move X9, [X12+24]
	068 NotImplemented "Instruction CMP not yet implemented."
	069 And X9, X9, 0
	070 Move X8, X31
	071 Add X10, X0, 32
	072 Move X11, W9
	073 Add X12, X12, 32
	074 NotImplemented "Instruction CMP not yet implemented."
	075 Compare X0, 0
	076 JumpIfEqual {91}
	077 Move W13, [X0+24]
	078 NotImplemented "Instruction CMP not yet implemented."
	079 Move V0, [X12]
	080 Move [X10], S0
	081 Add X8, X8, 1
	082 NotImplemented "Instruction CMP not yet implemented."
	083 Move [X19], X0
	084 Move X20, [X31+32]
	085 Move X19, [X31+40]
	086 Move X30, [X31+16]
	087 Move X21, [X31+24]
	088 Add X31, X31, 48
	089 Return 
	090 Call 0x1C17F28
	091 Call 0x1C17F20

Method: System.Void Clear()

Disassembly:
	0x03A57A78 LSLV W9, W9, W21
	0x03A57A7C ORN W10, W31, W10, 0x0
	0x03A57A80 LDR X2, [X23]
	0x03A57A84 LSLV W10, W10, W21
	0x03A57A88 ORN W9, W31, W9, 0x0
	0x03A57A8C CSEL W8, W20, W8, LT
	0x03A57A90 SDIV W9, W10, W9
	0x03A57A94 ADD W23, W8, W9
	0x03A57A98 ADD X1, X31, 0xC
	0x03A57A9C MOV W0, W23
	0x03A57AA0 BL 0x21A04B4
	0x03A57AA4 STR X0, [X19 + 0x10]
	0x03A57AA8 LDR X2, [X24]
	0x03A57AAC ADD X1, X31, 0xC
	0x03A57AB0 MOV W0, W23
	0x03A57AB4 BL 0x21A0414
	0x03A57AB8 STR X0, [X19 + 0x18]
	0x03A57ABC LDRSW X0, [X31 + 0xC]
	0x03A57AC0 MOVZ W1, 0x40
	0x03A57AC4 MOV W2, W22

ISIL:
	001 Move [X31-16], X30
	002 Move X11, [X0]
	003 Compare X11, 0
	004 JumpIfEqual {20}
	005 Move W8, [X11+24]
	006 Move X9, X8
	007 ShiftRight X9, 32
	008 And X9, X9, 0x7FFFFFFF
	009 NotImplemented "Instruction CMP not yet implemented."
	010 Move X9, X31
	011 Move X10, W8
	012 Add X11, X11, 32
	013 NotImplemented "Instruction CMP not yet implemented."
	014 Move [X11], W31
	015 Add X9, X9, 1
	016 NotImplemented "Instruction CMP not yet implemented."
	017 Move X30, [X31+16]
	018 Return 
	019 Call 0x1C17F28
	020 Call 0x1C17F20

Method: System.Void GetElementIndexAndBitOffset(System.Int32 index, out System.Int32 elemIndex, out System.Int32 bitOffset)

Disassembly:
	0x03A58468 MOV X0, X19
	0x03A5846C MOV X2, X31
	0x03A58470 STR V0, [X31 + 0x44]
	0x03A58474 STR V1, [X31 + 0x45]
	0x03A58478 STR V2, [X31 + 0x46]

ISIL:
	001 NotImplemented "Instruction SBFM not yet implemented."
	002 And W9, W1, 31
	003 Move [X2], W8
	004 Move [X3], W9
	005 Return 

Method: System.Boolean get_Item(System.Int32 index)

Disassembly:
	0x03A5847C STR V3, [X31 + 0x47]
	0x03A58480 BL 0x3A92B70
	0x03A58484 LDR V0, [X31 + 0x4C]
	0x03A58488 LDR V1, [X31 + 0x4D]
	0x03A5848C LDR V2, [X31 + 0x4E]
	0x03A58490 LDR V3, [X31 + 0x4F]
	0x03A58494 ADD X8, X31, 0x300
	0x03A58498 STP V0, V1, [X31 + 0x280]
	0x03A5849C LDR V0, [X31 + 0x44]
	0x03A584A0 LDR V1, [X31 + 0x45]
	0x03A584A4 STP V2, V3, [X31 + 0x2A0]
	0x03A584A8 LDR V2, [X31 + 0x46]

ISIL:
	001 Move X8, [X0]
	002 Compare X8, 0
	003 JumpIfEqual {9}
	004 Move W9, [X8+24]
	005 Compare W9, 0
	006 JumpIfEqual {8}
	007 Add X8, X8, 32
	008 Move X8, X31
	009 NotImplemented "Instruction SBFM not yet implemented."
	010 Move W8, [X8]
	011 NotImplemented "Instruction LSRV not yet implemented."
	012 And W0, W8, 1
	013 Return X0

Method: System.Void set_Item(System.Int32 index, System.Boolean value)

Disassembly:
	0x03A57AC8 MOV X3, X31
	0x03A57ACC BL 0x3C00000
	0x03A57AD0 STR X0, [X19]
	0x03A57AD4 LDRSW X1, [X31 + 0xC]
	0x03A57AD8 MOV X2, X31
	0x03A57ADC BL 0x3C001B4
	0x03A57AE0 STR W22, [X19 + 0x20]
	0x03A57AE4 ADRP X22, 0x98B000
	0x03A57AE8 LDRB W8, [X22 + 0x1ED]
	0x03A57AEC TBNZ X8, 0x0, 0x3A57B04
	0x03A57AF0 ADRP X0, 0x6FF000
	0x03A57AF4 LDR X0, [X0 + 0x2B0]
	0x03A57AF8 BL 0x1C16CF4
	0x03A57AFC MOVZ W8, 0x1
	0x03A57B00 STRB W8, [X22 + 0x1ED]
	0x03A57B04 LDR X8, [X19]
	0x03A57B08 MOV X0, X19

ISIL:
	001 Move X8, [X0]
	002 Compare X8, 0
	003 JumpIfEqual {9}
	004 Move W9, [X8+24]
	005 Compare W9, 0
	006 JumpIfEqual {8}
	007 Add X8, X8, 32
	008 Move X8, X31
	009 NotImplemented "Instruction SBFM not yet implemented."
	010 Move W10, [X8]
	011 Move W11, 1
	012 NotImplemented "Instruction LSLV not yet implemented."
	013 And W31, W2, 1
	014 NotImplemented "Instruction BIC not yet implemented."
	015 Or W10, W10, W11
	016 NotImplemented "Instruction CSEL not yet implemented."
	017 Move [X8], W10
	018 Return 

Method: System.String ToString()

Disassembly:
	0x03A584AC LDR V3, [X31 + 0x47]
	0x03A584B0 ADD X0, X31, 0x2C0
	0x03A584B4 ADD X1, X31, 0x280
	0x03A584B8 MOV X2, X31
	0x03A584BC STP V0, V1, [X31 + 0x2C0]
	0x03A584C0 STP V2, V3, [X31 + 0x2E0]
	0x03A584C4 BL 0x3C27F74
	0x03A584C8 LDP V0, V1, [X31 + 0x300]
	0x03A584CC LDP V2, V3, [X31 + 0x320]
	0x03A584D0 FCMP S9, S8
	0x03A584D4 STR V0, [X31 + 0x4C]
	0x03A584D8 STR V1, [X31 + 0x4D]
	0x03A584DC STR V2, [X31 + 0x4E]
	0x03A584E0 STR V3, [X31 + 0x4F]
	0x03A584E4 LDR X8, [X20 + 0x18]
	0x03A584E8 B.EQ 0x3A586F0
	0x03A584EC LDR V0, [X31 + 0x50]
	0x03A584F0 LDR V1, [X31 + 0x51]
	0x03A584F4 LDR V2, [X31 + 0x52]
	0x03A584F8 LDR V3, [X31 + 0x53]
	0x03A584FC STR V0, [X31 + 0x48]
	0x03A58500 STR V1, [X31 + 0x49]
	0x03A58504 STR V2, [X31 + 0x4A]
	0x03A58508 STR V3, [X31 + 0x4B]
	0x03A5850C CBNZ X8, 0x3A5871C
	0x03A58510 B 0x3A588D8
	0x03A58514 ADD X8, X31, 0x500
	0x03A58518 MOV X0, X19
	0x03A5851C MOV W1, W31
	0x03A58520 MOV X2, X31
	0x03A58524 BL 0x3A92CD8
	0x03A58528 LDR V0, [X31 + 0x50]
	0x03A5852C LDR V1, [X31 + 0x51]
	0x03A58530 LDR V2, [X31 + 0x52]
	0x03A58534 LDR V3, [X31 + 0x53]
	0x03A58538 ADD X8, X31, 0x500
	0x03A5853C ADD X0, X31, 0x100
	0x03A58540 MOVZ W1, 0x1
	0x03A58544 MOV X2, X31
	0x03A58548 STP V0, V1, [X31 + 0x100]
	0x03A5854C STP V2, V3, [X31 + 0x120]
	0x03A58550 BL 0x3C1015C
	0x03A58554 LDR V0, [X31 + 0x50]
	0x03A58558 LDR V1, [X31 + 0x51]
	0x03A5855C LDR V2, [X31 + 0x52]
	0x03A58560 LDR V3, [X31 + 0x53]
	0x03A58564 ADD X8, X31, 0x500
	0x03A58568 MOV X0, X19
	0x03A5856C MOV W1, W31
	0x03A58570 MOV X2, X31
	0x03A58574 STR V0, [X31 + 0x4C]
	0x03A58578 STR V1, [X31 + 0x4D]
	0x03A5857C STR V2, [X31 + 0x4E]
	0x03A58580 STR V3, [X31 + 0x4F]
	0x03A58584 BL 0x3A92B70
	0x03A58588 LDR V0, [X31 + 0x50]
	0x03A5858C LDR V1, [X31 + 0x51]
	0x03A58590 LDR V2, [X31 + 0x52]
	0x03A58594 LDR V3, [X31 + 0x53]
	0x03A58598 ADD X8, X31, 0x480
	0x03A5859C STP V0, V1, [X31 + 0x80]
	0x03A585A0 LDR V0, [X31 + 0x4C]
	0x03A585A4 LDR V1, [X31 + 0x4D]
	0x03A585A8 STP V2, V3, [X31 + 0xA0]
	0x03A585AC LDR V2, [X31 + 0x4E]
	0x03A585B0 LDR V3, [X31 + 0x4F]
	0x03A585B4 ADD X0, X31, 0xC0
	0x03A585B8 ADD X1, X31, 0x80
	0x03A585BC MOV X2, X31
	0x03A585C0 STP V0, V1, [X31 + 0xC0]
	0x03A585C4 STP V2, V3, [X31 + 0xE0]
	0x03A585C8 BL 0x3C27F74
	0x03A585CC LDR V0, [X31 + 0x48]
	0x03A585D0 LDR V1, [X31 + 0x49]
	0x03A585D4 LDR V2, [X31 + 0x4A]
	0x03A585D8 LDR V3, [X31 + 0x4B]
	0x03A585DC STR V0, [X31 + 0x50]
	0x03A585E0 STR V1, [X31 + 0x51]
	0x03A585E4 STR V2, [X31 + 0x52]
	0x03A585E8 STR V3, [X31 + 0x53]
	0x03A585EC LDR X8, [X20 + 0x18]
	0x03A585F0 FCMP S9, S8
	0x03A585F4 B.EQ 0x3A58620
	0x03A585F8 LDR V0, [X31 + 0x50]
	0x03A585FC LDR V1, [X31 + 0x51]
	0x03A58600 LDR V2, [X31 + 0x52]
	0x03A58604 LDR V3, [X31 + 0x53]
	0x03A58608 STR V0, [X31 + 0x4C]
	0x03A5860C STR V1, [X31 + 0x4D]
	0x03A58610 STR V2, [X31 + 0x4E]
	0x03A58614 STR V3, [X31 + 0x4F]

ISIL:
	001 Move [X31-48], X29
	002 Move [X31-40], X30
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Add X29, X31, 0
	008 Subtract X31, X31, 16
	009 NotImplemented "Instruction MRS not yet implemented."
	010 Move X8, [X22+40]
	011 Move X20, 0x98B000
	012 Move X19, X0
	013 Move [X29-8], X8
	014 Move W8, [X20+489]
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {24}
	019 Move X0, 0x69C000
	020 Move X0, [X0+1448]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X20+489], W8
	024 Move X8, 0x69C000
	025 Move X9, [X19]
	026 Move X8, [X8+1448]
	027 Compare X9, 0
	028 JumpIfEqual {33}
	029 Move W9, [X9+24]
	030 Move W20, W9
	031 ShiftRight W20, 27
	032 And W20, W20, 0x3FFFFFF
	033 Move W20, W31
	034 Move X0, [X8]
	035 Move W8, [X0+224]
	036 Compare W8, 0
	037 JumpIfNotEqual {39}
	038 Call 0x1C17DFC
	039 Move W1, 4096
	040 Move W0, W20
	041 Move X2, X31
	042 Call Math.Min, X0, X1
	043 Move X20, W0
	044 Compare W0, 0
	045 JumpIfEqual {78}
	046 Add X9, X20, 15
	047 Add X8, X31, 0
	048 And X9, X9, 0xFFFFFFFF
	049 Subtract X21, X8, X9
	050 Add X31, X21, 0
	051 Move X0, X21
	052 Move W1, W31
	053 Move X2, X20
	054 Call 0x3EB2B10
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Move X8, X31
	057 And X9, X20, 0
	058 Move W10, 48
	059 Move X11, [X19]
	060 Compare X11, 0
	061 JumpIfEqual {67}
	062 Move W12, [X11+24]
	063 Compare W12, 0
	064 JumpIfEqual {66}
	065 Add X11, X11, 32
	066 Move X11, X31
	067 Move X12, X8
	068 ShiftRight X12, 3
	069 And X12, X12, 0x7FFFFFFF
	070 And X12, X12, 0xFFFFFFF
	071 Move W11, [X11]
	072 NotImplemented "Instruction LSRV not yet implemented."
	073 And W31, W11, 1
	074 NotImplemented "Instruction CINC not yet implemented."
	075 Move [X21], W11
	076 Add X8, X8, 1
	077 NotImplemented "Instruction CMP not yet implemented."
	078 Move X0, X31
	079 Move W1, W31
	080 Move X2, X20
	081 Call 0x3EB2B10
	082 Move X21, X31
	083 Move X0, X31
	084 Call Encoding.get_UTF8
	085 Move X4, X0
	086 Move X0, X31
	087 Move X1, X21
	088 Move W2, W31
	089 Move W3, W20
	090 Move X5, X31
	091 Call String.CreateString, X0, X1, X2, X3, X4
	092 Move X8, [X22+40]
	093 NotImplemented "Instruction LDUR not yet implemented."
	094 NotImplemented "Instruction CMP not yet implemented."
	095 Add X31, X29, 0
	096 Move X20, [X31+32]
	097 Move X19, [X31+40]
	098 Move X22, [X31+16]
	099 Move X21, [X31+24]
	100 Move X29, [X31+48]
	101 Move X30, [X31+56]
	102 Return X0
	103 Call 0x3EB2B20

