Type: UnityEngine.Rendering.Universal.DecalCreateDrawCallSystem

Method: System.Single get_maxDrawDistance()

Disassembly:
	0x03A3C338 MOV X1, X31
	0x03A3C33C ADD X8, X8, X26

ISIL:
	001 Move V0, [X0+32]
	002 Return V0

Method: System.Void set_maxDrawDistance(System.Single value)

Disassembly:
	0x03A3C340 LDP V1, V0, [X8 + 0x20]
	0x03A3C344 LDP V3, V2, [X8]

ISIL:
	001 Move [X0+32], S0
	002 Return 

Method: System.Void .ctor(UnityEngine.Rendering.Universal.DecalEntityManager entityManager, System.Single maxDrawDistance)

Disassembly:
	0x03A3C348 ADD X8, X31, 0xA0
	0x03A3C34C STP V1, V0, [X31 + 0x80]
	0x03A3C350 STP V3, V2, [X31 + 0x60]
	0x03A3C354 BL 0x38990D4
	0x03A3C358 LDP V0, V1, [X31 + 0xA0]
	0x03A3C35C LDP V2, V3, [X31 + 0xC0]
	0x03A3C360 STP V0, V1, [X31 + 0x160]
	0x03A3C364 STP V2, V3, [X31 + 0x180]
	0x03A3C368 CBZ X22, 0x3A3C3E0
	0x03A3C36C LDR X6, [X21 + 0x28]
	0x03A3C370 LDP V0, V1, [X31 + 0x160]
	0x03A3C374 LDP V2, V3, [X31 + 0x180]
	0x03A3C378 ADD X2, X31, 0x20
	0x03A3C37C MOV X0, X22
	0x03A3C380 MOV X1, X23
	0x03A3C384 MOV X3, X24
	0x03A3C388 MOV W4, W31
	0x03A3C38C MOV W5, W19
	0x03A3C390 MOV X7, X31
	0x03A3C394 STP V0, V1, [X31 + 0x20]
	0x03A3C398 STP V2, V3, [X31 + 0x40]
	0x03A3C39C BL 0x3C4EDEC
	0x03A3C3A0 ADD X26, X26, 0x40
	0x03A3C3A4 SUBS W28, W28, 0x1
	0x03A3C3A8 ADD X27, X27, 0x4
	0x03A3C3AC B.NE 0x3A3C2A8
	0x03A3C3B0 LDP X8, X9, [X31 + 0x10]
	0x03A3C3B4 ADD X9, X9, 0x1
	0x03A3C3B8 CMP X9, X8
	0x03A3C3BC B.NE 0x3A3C280
	0x03A3C3C0 ADD X31, X31, 0x1E0
	0x03A3C3C4 LDP X20, X19, [X31 + 0x50]
	0x03A3C3C8 LDP X22, X21, [X31 + 0x40]
	0x03A3C3CC LDP X24, X23, [X31 + 0x30]
	0x03A3C3D0 LDP X26, X25, [X31 + 0x20]
	0x03A3C3D4 LDP X28, X27, [X31 + 0x10]
	0x03A3C3D8 LDP X29, X30, [X31], #0x60
	0x03A3C3DC RET
	0x03A3C3E0 BL 0x1C16F20

ISIL:
	001 Move [X31-64], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0x9A7000
	009 Move X22, 0x715000
	010 Move X21, 0x71A000
	011 Move W8, [X23+310]
	012 Move X22, [X22+1432]
	013 Move X21, [X21+1992]
	014 Move V8, V0
	015 Move X20, X1
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {29}
	021 Move X0, 0x715000
	022 Move X0, [X0+1432]
	023 Call 0x1C17CF4
	024 Move X0, 0x71A000
	025 Move X0, [X0+1992]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X23+310], W8
	029 Move X0, X19
	030 Move X1, X31
	031 Call Object..ctor, X0
	032 Move [X19+16], X20
	033 Move X0, [X22]
	034 Call 0x1C17F10
	035 Move X1, [X21]
	036 Move X2, X31
	037 Move X20, X0
	038 Call ProfilingSampler..ctor, X0, X1
	039 Move [X19+24], X20
	040 Move [X19+32], S8
	041 Move X20, [X31+48]
	042 Move X19, [X31+56]
	043 Move X22, [X31+32]
	044 Move X21, [X31+40]
	045 Move X30, [X31+16]
	046 Move X23, [X31+24]
	047 Move V8, [X31+64]
	048 Return 

Method: System.Void Execute()

Disassembly:
	0x03A3C3E4 STP X30, X21, [X31 - 0x20]!
	0x03A3C3E8 STP X20, X19, [X31 + 0x10]
	0x03A3C3EC ADRP X21, 0x9A6000
	0x03A3C3F0 ADRP X20, 0x6B7000
	0x03A3C3F4 LDRB W8, [X21 + 0x14E]
	0x03A3C3F8 LDR X20, [X20 + 0x598]
	0x03A3C3FC MOV X19, X0
	0x03A3C400 TBNZ X8, 0x0, 0x3A3C424
	0x03A3C404 ADRP X0, 0x6DF000
	0x03A3C408 LDR X0, [X0 + 0x8F8]
	0x03A3C40C BL 0x1C16CF4
	0x03A3C410 ADRP X0, 0x6B7000
	0x03A3C414 LDR X0, [X0 + 0x598]
	0x03A3C418 BL 0x1C16CF4
	0x03A3C41C MOVZ W8, 0x1
	0x03A3C420 STRB W8, [X21 + 0x14E]
	0x03A3C424 LDR X0, [X20]
	0x03A3C428 LDR X20, [X19 + 0x78]
	0x03A3C42C LDR W8, [X0 + 0xE0]
	0x03A3C430 CBNZ W8, 0x3A3C438
	0x03A3C434 BL 0x1C16DFC
	0x03A3C438 MOV X0, X20
	0x03A3C43C MOV X1, X31
	0x03A3C440 MOV X2, X31
	0x03A3C444 BL 0x3C3883C
	0x03A3C448 TBZ X0, 0x0, 0x3A3C48C
	0x03A3C44C ADRP X8, 0x6DF000
	0x03A3C450 LDR X8, [X8 + 0x8F8]
	0x03A3C454 LDR X0, [X8]
	0x03A3C458 LDR W8, [X0 + 0xE0]
	0x03A3C45C CBNZ W8, 0x3A3C464
	0x03A3C460 BL 0x1C16DFC
	0x03A3C464 FMOV S0, -0.5
	0x03A3C468 FMOV S1, -0.5
	0x03A3C46C FMOV S2, -0.5
	0x03A3C470 FMOV S3, 0.5
	0x03A3C474 FMOV S4, 0.5
	0x03A3C478 FMOV S5, 0.5
	0x03A3C47C MOV X0, X31
	0x03A3C480 BL 0x39E9824
	0x03A3C484 STR X0, [X19 + 0x78]
	0x03A3C488 B 0x3A3C490
	0x03A3C48C LDR X0, [X19 + 0x78]
	0x03A3C490 LDP X20, X19, [X31 + 0x10]
	0x03A3C494 LDP X30, X21, [X31], #0x20
	0x03A3C498 RET
	0x03A3C49C SUB X31, X31, 0x60
	0x03A3C4A0 STP X30, X27, [X31 + 0x10]
	0x03A3C4A4 STP X26, X25, [X31 + 0x20]
	0x03A3C4A8 STP X24, X23, [X31 + 0x30]
	0x03A3C4AC STP X22, X21, [X31 + 0x40]
	0x03A3C4B0 STP X20, X19, [X31 + 0x50]
	0x03A3C4B4 ADRP X21, 0x9A6000
	0x03A3C4B8 LDRB W8, [X21 + 0x13E]
	0x03A3C4BC MOV X19, X1
	0x03A3C4C0 MOV X20, X0
	0x03A3C4C4 TBNZ X8, 0x0, 0x3A3C4F4
	0x03A3C4C8 ADRP X0, 0x719000
	0x03A3C4CC LDR X0, [X0 + 0x7D8]
	0x03A3C4D0 BL 0x1C16CF4
	0x03A3C4D4 ADRP X0, 0x719000
	0x03A3C4D8 LDR X0, [X0 + 0x7E0]
	0x03A3C4DC BL 0x1C16CF4
	0x03A3C4E0 ADRP X0, 0x719000
	0x03A3C4E4 LDR X0, [X0 + 0x7F0]
	0x03A3C4E8 BL 0x1C16CF4
	0x03A3C4EC MOVZ W8, 0x1
	0x03A3C4F0 STRB W8, [X21 + 0x13E]
	0x03A3C4F4 STRB W31, [X31 + 0x8]
	0x03A3C4F8 LDR X2, [X20 + 0x30]
	0x03A3C4FC ADD X0, X31, 0x8
	0x03A3C500 MOV X1, X31
	0x03A3C504 MOV X3, X31
	0x03A3C508 BL 0x39B1DB0
	0x03A3C50C LDR X8, [X20 + 0x10]
	0x03A3C510 CBZ X8, 0x3A3C5DC
	0x03A3C514 ADRP X25, 0x719000
	0x03A3C518 ADRP X26, 0x719000
	0x03A3C51C ADRP X27, 0x719000
	0x03A3C520 LDR X25, [X25 + 0x7F0]
	0x03A3C524 LDR X26, [X26 + 0x7E0]
	0x03A3C528 LDR X27, [X27 + 0x7D8]
	0x03A3C52C MOV W21, W31
	0x03A3C530 LDR W9, [X8 + 0x30]
	0x03A3C534 CMP W21, W9
	0x03A3C538 B.GE 0x3A3C5E0
	0x03A3C53C LDR X0, [X8 + 0x10]
	0x03A3C540 CBZ X0, 0x3A3C618
	0x03A3C544 LDR X2, [X25]
	0x03A3C548 MOV W1, W21
	0x03A3C54C BL 0x301BCCC
	0x03A3C550 LDR X8, [X20 + 0x10]
	0x03A3C554 CBZ X8, 0x3A3C60C
	0x03A3C558 MOV X22, X0
	0x03A3C55C LDR X0, [X8 + 0x18]
	0x03A3C560 CBZ X0, 0x3A3C610
	0x03A3C564 LDR X2, [X26]
	0x03A3C568 MOV W1, W21
	0x03A3C56C BL 0x301BCCC
	0x03A3C570 LDR X8, [X20 + 0x10]
	0x03A3C574 CBZ X8, 0x3A3C608
	0x03A3C578 MOV X23, X0
	0x03A3C57C LDR X0, [X8 + 0x28]
	0x03A3C580 CBZ X0, 0x3A3C61C
	0x03A3C584 LDR X2, [X27]
	0x03A3C588 MOV W1, W21
	0x03A3C58C BL 0x301BCCC
	0x03A3C590 LDR X8, [X20 + 0x10]
	0x03A3C594 CBZ X8, 0x3A3C620
	0x03A3C598 MOV X24, X0
	0x03A3C59C LDR X0, [X8 + 0x10]
	0x03A3C5A0 CBZ X0, 0x3A3C614
	0x03A3C5A4 LDR X2, [X25]
	0x03A3C5A8 MOV W1, W21
	0x03A3C5AC BL 0x301BCCC
	0x03A3C5B0 CBZ X0, 0x3A3C624
	0x03A3C5B4 LDR W5, [X0 + 0x10]
	0x03A3C5B8 MOV X0, X20
	0x03A3C5BC MOV X1, X19
	0x03A3C5C0 MOV X2, X22
	0x03A3C5C4 MOV X3, X23
	0x03A3C5C8 MOV X4, X24
	0x03A3C5CC BL 0x3A3C6C0
	0x03A3C5D0 LDR X8, [X20 + 0x10]
	0x03A3C5D4 ADD W21, W21, 0x1
	0x03A3C5D8 CBNZ X8, 0x3A3C530
	0x03A3C5DC BL 0x1C16F20
	0x03A3C5E0 ADD X0, X31, 0x8
	0x03A3C5E4 MOV X1, X31
	0x03A3C5E8 BL 0x39B1DB4
	0x03A3C5EC LDP X20, X19, [X31 + 0x50]
	0x03A3C5F0 LDP X22, X21, [X31 + 0x40]
	0x03A3C5F4 LDP X24, X23, [X31 + 0x30]

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X20, 0x9A7000
	011 Move W8, [X20+311]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {28}
	017 Move X0, 0x71A000
	018 Move X0, [X0+2000]
	019 Call 0x1C17CF4
	020 Move X0, 0x71A000
	021 Move X0, [X0+2008]
	022 Call 0x1C17CF4
	023 Move X0, 0x71A000
	024 Move X0, [X0+2016]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X20+311], W8
	028 Move [X31+8], W31
	029 Move X2, [X19+24]
	030 Add X0, X31, 8
	031 Move X1, X31
	032 Move X3, X31
	033 Call ProfilingScope..ctor, X0, X1, X2
	034 Move X8, [X19+16]
	035 Compare X8, 0
	036 JumpIfEqual {94}
	037 Move X24, 0x71A000
	038 Move X25, 0x71A000
	039 Move X26, 0x71A000
	040 Move X24, [X24+2016]
	041 Move X25, [X25+2000]
	042 Move X26, [X26+2008]
	043 Move W20, W31
	044 Move W9, [X8+48]
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Move X0, [X8+24]
	047 Compare X0, 0
	048 JumpIfEqual {112}
	049 Move X2, [X24]
	050 Move W1, W20
	051 Call List`1<Object>.get_Item, X0, X1
	052 Move X8, [X19+16]
	053 Compare X8, 0
	054 JumpIfEqual {109}
	055 Move X21, X0
	056 Move X0, [X8+32]
	057 Compare X0, 0
	058 JumpIfEqual {110}
	059 Move X2, [X25]
	060 Move W1, W20
	061 Call List`1<Object>.get_Item, X0, X1
	062 Move X8, [X19+16]
	063 Compare X8, 0
	064 JumpIfEqual {108}
	065 Move X22, X0
	066 Move X0, [X8+40]
	067 Compare X0, 0
	068 JumpIfEqual {113}
	069 Move X2, [X26]
	070 Move W1, W20
	071 Call List`1<Object>.get_Item, X0, X1
	072 Move X8, [X19+16]
	073 Compare X8, 0
	074 JumpIfEqual {114}
	075 Move X23, X0
	076 Move X0, [X8+24]
	077 Compare X0, 0
	078 JumpIfEqual {111}
	079 Move X2, [X24]
	080 Move W1, W20
	081 Call List`1<Object>.get_Item, X0, X1
	082 Compare X0, 0
	083 JumpIfEqual {115}
	084 Move W4, [X0+16]
	085 Move X0, X19
	086 Move X1, X21
	087 Move X2, X22
	088 Move X3, X23
	089 Call DecalCreateDrawCallSystem.Execute, X0, X1, X2, X3, X4
	090 Move X8, [X19+16]
	091 Add W20, W20, 1
	092 Compare X8, 0
	093 JumpIfNotEqual {44}
	094 Call 0x1C17F20
	095 Add X0, X31, 8
	096 Move X1, X31
	097 Call ProfilingScope.Dispose, X0
	098 Move X20, [X31+64]
	099 Move X19, [X31+72]
	100 Move X22, [X31+48]
	101 Move X21, [X31+56]
	102 Move X24, [X31+32]
	103 Move X23, [X31+40]
	104 Move X26, [X31+16]
	105 Move X25, [X31+24]
	106 Move X30, [X31+80]
	107 Return 
	108 Call 0x1C17F20
	109 Call 0x1C17F20
	110 Call 0x1C17F20
	111 Call 0x1C17F20
	112 Call 0x1C17F20
	113 Call 0x1C17F20
	114 Call 0x1C17F20
	115 Call 0x1C17F20
	116 Move X19, X0
	117 NotImplemented "Instruction CMP not yet implemented."
	118 Move X0, X19
	119 Call 0x3EB2AD0
	120 Move X20, [X0]
	121 Call 0x3EB2AE0
	122 Add X0, X31, 8
	123 Move X1, X31
	124 Call ProfilingScope.Dispose, X0
	125 Compare X20, 0
	126 JumpIfEqual {98}
	127 Move X0, X20
	128 Call 0x1C17F18
	129 Move X20, X31
	130 Move X19, X0
	131 Add X0, X31, 8
	132 Move X1, X31
	133 Call ProfilingScope.Dispose, X0
	134 Compare X20, 0
	135 JumpIfNotEqual {138}
	136 Move X0, X19
	137 Call 0x1D2D690
	138 Move X0, X20
	139 Call 0x1C17F18
	140 Call 0x1991590

Method: System.Void Execute(UnityEngine.Rendering.Universal.DecalCachedChunk cachedChunk, UnityEngine.Rendering.Universal.DecalCulledChunk culledChunk, UnityEngine.Rendering.Universal.DecalDrawCallChunk drawCallChunk, System.Int32 count)

Disassembly:
	0x03A3C5F8 LDP X26, X25, [X31 + 0x20]
	0x03A3C5FC LDP X30, X27, [X31 + 0x10]
	0x03A3C600 ADD X31, X31, 0x60
	0x03A3C604 RET
	0x03A3C608 BL 0x1C16F20
	0x03A3C60C BL 0x1C16F20
	0x03A3C610 BL 0x1C16F20
	0x03A3C614 BL 0x1C16F20
	0x03A3C618 BL 0x1C16F20
	0x03A3C61C BL 0x1C16F20
	0x03A3C620 BL 0x1C16F20
	0x03A3C624 BL 0x1C16F20
	0x03A3C628 B 0x3A3C65C
	0x03A3C62C B 0x3A3C65C
	0x03A3C630 B 0x3A3C65C
	0x03A3C634 B 0x3A3C65C
	0x03A3C638 B 0x3A3C65C
	0x03A3C63C B 0x3A3C65C
	0x03A3C640 B 0x3A3C65C
	0x03A3C644 B 0x3A3C65C
	0x03A3C648 B 0x3A3C65C
	0x03A3C64C B 0x3A3C65C
	0x03A3C650 B 0x3A3C65C
	0x03A3C654 B 0x3A3C65C
	0x03A3C658 B 0x3A3C65C
	0x03A3C65C MOV X19, X0
	0x03A3C660 CMP W1, 0x1
	0x03A3C664 B.NE 0x3A3C690
	0x03A3C668 MOV X0, X19
	0x03A3C66C BL 0x3EB1AD0
	0x03A3C670 LDR X20, [X0]
	0x03A3C674 BL 0x3EB1AE0
	0x03A3C678 ADD X0, X31, 0x8
	0x03A3C67C MOV X1, X31
	0x03A3C680 BL 0x39B1DB4
	0x03A3C684 CBZ X20, 0x3A3C5EC
	0x03A3C688 MOV X0, X20
	0x03A3C68C BL 0x1C16F18
	0x03A3C690 MOV X20, X31
	0x03A3C694 B 0x3A3C69C
	0x03A3C698 MOV X19, X0
	0x03A3C69C ADD X0, X31, 0x8
	0x03A3C6A0 MOV X1, X31
	0x03A3C6A4 BL 0x39B1DB4
	0x03A3C6A8 CBNZ X20, 0x3A3C6B4
	0x03A3C6AC MOV X0, X19
	0x03A3C6B0 BL 0x1D2C690
	0x03A3C6B4 MOV X0, X20
	0x03A3C6B8 BL 0x1C16F18
	0x03A3C6BC BL 0x1990590
	0x03A3C6C0 SUB X31, X31, 0x50
	0x03A3C6C4 STP X30, X25, [X31 + 0x10]
	0x03A3C6C8 STP X24, X23, [X31 + 0x20]
	0x03A3C6CC STP X22, X21, [X31 + 0x30]
	0x03A3C6D0 STP X20, X19, [X31 + 0x40]
	0x03A3C6D4 ADRP X25, 0x9A6000
	0x03A3C6D8 LDRB W8, [X25 + 0x13F]
	0x03A3C6DC MOV W24, W5
	0x03A3C6E0 MOV X19, X4
	0x03A3C6E4 MOV X20, X3
	0x03A3C6E8 MOV X21, X2
	0x03A3C6EC MOV X22, X1
	0x03A3C6F0 MOV X23, X0
	0x03A3C6F4 TBNZ X8, 0x0, 0x3A3C70C
	0x03A3C6F8 ADRP X0, 0x6B7000
	0x03A3C6FC LDR X0, [X0 + 0x598]
	0x03A3C700 BL 0x1C16CF4
	0x03A3C704 MOVZ W8, 0x1
	0x03A3C708 STRB W8, [X25 + 0x13F]
	0x03A3C70C CBZ X20, 0x3A3C80C
	0x03A3C710 LDUR V0, [X20 + 0x18]
	0x03A3C714 ADD X0, X31, 0x0
	0x03A3C718 MOV X1, X31
	0x03A3C71C STR V0, [X31]
	0x03A3C720 BL 0x3BFDCAC
	0x03A3C724 CBZ X19, 0x3A3C80C
	0x03A3C728 LDUR V0, [X19 + 0x18]
	0x03A3C72C ADD X0, X31, 0x0
	0x03A3C730 MOV X1, X31
	0x03A3C734 STR V0, [X31]
	0x03A3C738 BL 0x3BFDCAC
	0x03A3C73C LDR X8, [X23]
	0x03A3C740 MOV X0, X23
	0x03A3C744 MOV X1, X21
	0x03A3C748 LDP X9, X2, [X8 + 0x178]
	0x03A3C74C BLR X9
	0x03A3C750 LDR X8, [X23]
	0x03A3C754 MOV X25, X0
	0x03A3C758 MOV X0, X23
	0x03A3C75C MOV X1, X20
	0x03A3C760 LDP X9, X2, [X8 + 0x188]
	0x03A3C764 BLR X9
	0x03A3C768 CBZ W24, 0x3A3C7F4
	0x03A3C76C ADDS W31, W0, 0x1
	0x03A3C770 B.EQ 0x3A3C7F4
	0x03A3C774 ADRP X8, 0x6B7000
	0x03A3C778 LDR X8, [X8 + 0x598]
	0x03A3C77C LDR X0, [X8]
	0x03A3C780 LDR W8, [X0 + 0xE0]
	0x03A3C784 CBNZ W8, 0x3A3C78C
	0x03A3C788 BL 0x1C16DFC
	0x03A3C78C MOV X0, X25
	0x03A3C790 MOV X1, X31
	0x03A3C794 MOV X2, X31
	0x03A3C798 BL 0x3C3883C
	0x03A3C79C TBNZ X0, 0x0, 0x3A3C7F4
	0x03A3C7A0 MOV X0, X31
	0x03A3C7A4 BL 0x3C3BD9C
	0x03A3C7A8 TBZ X0, 0x0, 0x3A3C7DC
	0x03A3C7AC CBZ X25, 0x3A3C80C
	0x03A3C7B0 MOV X0, X25
	0x03A3C7B4 MOV X1, X31
	0x03A3C7B8 BL 0x3C0F68C
	0x03A3C7BC TBZ X0, 0x0, 0x3A3C7DC
	0x03A3C7C0 MOV X0, X23
	0x03A3C7C4 MOV X1, X22
	0x03A3C7C8 MOV X2, X21
	0x03A3C7CC MOV X3, X20
	0x03A3C7D0 MOV X4, X19
	0x03A3C7D4 BL 0x3A3C810
	0x03A3C7D8 B 0x3A3C7F4

ISIL:
	001 Move [X31-112], D8
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Subtract X31, X31, 640
	015 NotImplemented "Instruction MRS not yet implemented."
	016 Move X8, [X24+40]
	017 Move X25, 0x9A7000
	018 Move W23, W4
	019 Move X20, X3
	020 Move [X31+632], X8
	021 Move W8, [X25+312]
	022 Move X21, X2
	023 Move X19, X1
	024 Move X22, X0
	025 Move TEMP, X8
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {34}
	029 Move X0, 0x71A000
	030 Move X0, [X0+2024]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X25+312], W8
	034 Compare W23, 0
	035 JumpIfEqual {132}
	036 Add X0, X31, 96
	037 Move W2, 192
	038 Move W1, W31
	039 Call 0x3EB2B10
	040 Move [X31+612], W31
	041 Compare X19, 0
	042 JumpIfEqual {150}
	043 NotImplemented "Instruction LDUR not yet implemented."
	044 NotImplemented "Instruction LDUR not yet implemented."
	045 Move [X31+96], V1
	046 Move [X31+104], V0
	047 NotImplemented "Instruction LDUR not yet implemented."
	048 NotImplemented "Instruction LDUR not yet implemented."
	049 Move [X31+128], V1
	050 Move [X31+136], V0
	051 NotImplemented "Instruction LDUR not yet implemented."
	052 NotImplemented "Instruction LDUR not yet implemented."
	053 Move [X31+160], V1
	054 Move [X31+168], V0
	055 NotImplemented "Instruction LDUR not yet implemented."
	056 NotImplemented "Instruction LDUR not yet implemented."
	057 Move [X31+192], V1
	058 Move [X31+200], V0
	059 NotImplemented "Instruction LDUR not yet implemented."
	060 NotImplemented "Instruction LDUR not yet implemented."
	061 Move [X31+224], V1
	062 Move [X31+232], V0
	063 NotImplemented "Instruction LDUR not yet implemented."
	064 Move [X31+16], V0
	065 Compare X21, 0
	066 JumpIfEqual {150}
	067 Move W8, [X21+48]
	068 Move X9, [X21+40]
	069 Move [X31+280], W8
	070 Move [X31+272], X9
	071 Move X25, [X21+56]
	072 NotImplemented "Instruction LDUR not yet implemented."
	073 Move W26, [X21+64]
	074 Add X8, X31, 612
	075 Move [X8+4], V0
	076 Compare X20, 0
	077 JumpIfEqual {150}
	078 NotImplemented "Instruction LDUR not yet implemented."
	079 NotImplemented "Instruction LDUR not yet implemented."
	080 Move V8, [X22+32]
	081 Move W28, [X21+104]
	082 Move X8, 0x71A000
	083 Move [X31+64], V0
	084 Move [X31+72], V1
	085 NotImplemented "Instruction LDUR not yet implemented."
	086 NotImplemented "Instruction LDUR not yet implemented."
	087 Add X0, X31, 296
	088 Add X1, X31, 96
	089 Move W2, 192
	090 Move [X31+32], V0
	091 Move [X31+40], V1
	092 NotImplemented "Instruction LDUR not yet implemented."
	093 Move X8, [X8+2024]
	094 Add X29, X31, 296
	095 Add X27, X31, 296
	096 Move [X31+1], V0
	097 Move X21, [X19+24]
	098 Move X22, [X19+32]
	099 Move X23, [X8]
	100 Call 0x3EB2AC0
	101 Add X8, X31, 612
	102 Move V0, [X8]
	103 Move [X31+488], X25
	104 Move W8, [X31+628]
	105 Move [X31+496], W26
	106 Move [X29+204], V0
	107 Move V1, [X31+64]
	108 Move V0, [X31+80]
	109 Move [X31+524], S8
	110 Move [X31+516], W8
	111 Move [X31+520], W28
	112 Move [X29+232], V0
	113 Move [X29+248], V1
	114 Move V1, [X31+32]
	115 Move V0, [X31+48]
	116 Add X8, X27, 264
	117 Add X9, X27, 296
	118 Add X0, X31, 296
	119 Move [X8], V0
	120 Move V0, [X31+1]
	121 Add X8, X27, 280
	122 Move X1, X21
	123 Move X2, X22
	124 Move X3, X23
	125 Move [X8], V1
	126 Move [X9], V0
	127 Call IJobExtensions.Schedule, X0, X1
	128 Move [X20+24], X0
	129 Move [X20+32], X1
	130 Move [X19+24], X0
	131 Move [X19+32], X1
	132 Move X8, [X24+40]
	133 Move X9, [X31+632]
	134 NotImplemented "Instruction CMP not yet implemented."
	135 Add X31, X31, 640
	136 Move X20, [X31+96]
	137 Move X19, [X31+104]
	138 Move X22, [X31+80]
	139 Move X21, [X31+88]
	140 Move X24, [X31+64]
	141 Move X23, [X31+72]
	142 Move X26, [X31+48]
	143 Move X25, [X31+56]
	144 Move X28, [X31+32]
	145 Move X27, [X31+40]
	146 Move X29, [X31+16]
	147 Move X30, [X31+24]
	148 Move V8, [X31+112]
	149 Return 
	150 Call 0x1C17F20
	151 Call 0x3EB2B20

