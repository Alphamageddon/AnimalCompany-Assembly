Type: UnityEngine.Rendering.Universal.Light2DLookupTexture

Method: UnityEngine.Texture GetLightLookupTexture()

Disassembly:
	0x03A1EAA0 MOV W23, W21
	0x03A1EAA4 MOV X21, X0
	0x03A1EAA8 MOV X0, X8
	0x03A1EAAC BL 0x1C16DFC
	0x03A1EAB0 MOV X0, X21
	0x03A1EAB4 MOV W21, W23
	0x03A1EAB8 MOV X1, X31
	0x03A1EABC MOV X2, X31
	0x03A1EAC0 STR X0, [X31 + 0x28]
	0x03A1EAC4 BL 0x3C3883C
	0x03A1EAC8 TBNZ X0, 0x0, 0x3A1ED54
	0x03A1EACC LDR X8, [X31 + 0x690]
	0x03A1EAD0 LDRB W8, [X8, W20, SXTW]
	0x03A1EAD4 CBZ W8, 0x3A1EB10
	0x03A1EAD8 ADRP X8, 0x736000
	0x03A1EADC LDR X8, [X8 + 0x6A0]
	0x03A1EAE0 LDR X0, [X8]
	0x03A1EAE4 LDR W8, [X0 + 0xE0]
	0x03A1EAE8 CBNZ W8, 0x3A1EAF0
	0x03A1EAEC BL 0x1C16DFC
	0x03A1EAF0 LDR W2, [X31 + 0x24]
	0x03A1EAF4 LDR X0, [X31 + 0x38]
	0x03A1EAF8 MOV X1, X27
	0x03A1EAFC MOV X3, X31
	0x03A1EB00 ADD W20, W2, 0x1
	0x03A1EB04 BL 0x3A29DD0
	0x03A1EB08 STR W20, [X31 + 0x24]
	0x03A1EB0C B 0x3A1EB34
	0x03A1EB10 ADRP X8, 0x736000
	0x03A1EB14 LDR X8, [X8 + 0x6A0]
	0x03A1EB18 LDR X0, [X8]
	0x03A1EB1C LDR W8, [X0 + 0xE0]
	0x03A1EB20 CBNZ W8, 0x3A1EB28
	0x03A1EB24 BL 0x1C16DFC
	0x03A1EB28 LDR X0, [X31 + 0x38]
	0x03A1EB2C MOV X1, X31
	0x03A1EB30 BL 0x3A29F54
	0x03A1EB34 LDR W8, [X27 + 0x24]
	0x03A1EB38 CMP W8, 0x2

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x9C4000
	006 Move X20, 0x737000
	007 Move X19, 0x6D6000
	008 Move W8, [X21+4073]
	009 Move X20, [X20+1888]
	010 Move X19, [X19+1432]
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x737000
	016 Move X0, [X0+1888]
	017 Call 0x1C17CF4
	018 Move X0, 0x6D6000
	019 Move X0, [X0+1432]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X21+4073], W8
	023 Move X8, [X20]
	024 Move X0, [X19]
	025 Move X8, [X8+184]
	026 Move W9, [X0+224]
	027 Move X19, [X8]
	028 Compare W9, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X0, X19
	032 Move X1, X31
	033 Move X2, X31
	034 Call Object.op_Equality, X0, X1
	035 Move TEMP, X0
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfNotEqual {43}
	039 Call Light2DLookupTexture.CreatePointLightLookupTexture
	040 Move X8, [X20]
	041 Move X8, [X8+184]
	042 Move [X8], X0
	043 Move X8, [X20]
	044 Move X20, [X31+16]
	045 Move X19, [X31+24]
	046 Move X8, [X8+184]
	047 Move X0, [X8]
	048 Move X30, [X31+32]
	049 Move X21, [X31+40]
	050 Return X0

Method: UnityEngine.Texture2D CreatePointLightLookupTexture()

Disassembly:
	0x03A1EB3C B.NE 0x3A1EC58
	0x03A1EB40 ADRP X8, 0x6D5000
	0x03A1EB44 LDR X8, [X8 + 0x598]
	0x03A1EB48 LDR X20, [X27 + 0x58]
	0x03A1EB4C LDR X0, [X8]
	0x03A1EB50 LDR W8, [X0 + 0xE0]
	0x03A1EB54 CBNZ W8, 0x3A1EB5C
	0x03A1EB58 BL 0x1C16DFC
	0x03A1EB5C MOV X0, X20
	0x03A1EB60 MOV X1, X31
	0x03A1EB64 MOV X2, X31
	0x03A1EB68 BL 0x3C354F8
	0x03A1EB6C TBZ X0, 0x0, 0x3A1EC58
	0x03A1EB70 LDR W8, [X27 + 0x24]
	0x03A1EB74 MOVZ W9, 0x60
	0x03A1EB78 CMP W8, 0x3
	0x03A1EB7C MOVZ W8, 0x58
	0x03A1EB80 CSEL X8, X9, X8, EQ
	0x03A1EB84 LDR X0, [X27, X8, LSL]
	0x03A1EB88 CBZ X0, 0x3A1EE28
	0x03A1EB8C MOV X1, X31
	0x03A1EB90 BL 0x3C41990
	0x03A1EB94 ADRP X8, 0x6D5000
	0x03A1EB98 LDR X8, [X8 + 0x598]
	0x03A1EB9C MOV X20, X0
	0x03A1EBA0 LDR X8, [X8]
	0x03A1EBA4 LDR W9, [X8 + 0xE0]
	0x03A1EBA8 CBNZ W9, 0x3A1EBB4
	0x03A1EBAC MOV X0, X8
	0x03A1EBB0 BL 0x1C16DFC
	0x03A1EBB4 MOV X0, X20
	0x03A1EBB8 MOV X1, X31
	0x03A1EBBC MOV X2, X31
	0x03A1EBC0 BL 0x3C354F8
	0x03A1EBC4 TBZ X0, 0x0, 0x3A1EC58
	0x03A1EBC8 ADRP X20, 0x736000
	0x03A1EBCC LDR X20, [X20 + 0x658]
	0x03A1EBD0 LDR X0, [X20]
	0x03A1EBD4 LDR W8, [X0 + 0xE0]
	0x03A1EBD8 CBNZ W8, 0x3A1EBE4
	0x03A1EBDC BL 0x1C16DFC
	0x03A1EBE0 LDR X0, [X20]
	0x03A1EBE4 LDR W8, [X27 + 0x24]
	0x03A1EBE8 MOVZ W9, 0x60
	0x03A1EBEC CMP W8, 0x3
	0x03A1EBF0 MOVZ W8, 0x58
	0x03A1EBF4 CSEL X8, X9, X8, EQ
	0x03A1EBF8 LDR X8, [X27, X8, LSL]
	0x03A1EBFC CBZ X8, 0x3A1EE28
	0x03A1EC00 LDR X9, [X0 + 0xB8]
	0x03A1EC04 MOV X0, X8
	0x03A1EC08 MOV X1, X31
	0x03A1EC0C LDR W20, [X9 + 0x88]
	0x03A1EC10 BL 0x3C41990
	0x03A1EC14 ADD X8, X31, 0x80
	0x03A1EC18 MOV X1, X31
	0x03A1EC1C BL 0x3C4B274
	0x03A1EC20 LDP V0, V1, [X31 + 0x80]
	0x03A1EC24 LDR X8, [X31 + 0xA0]
	0x03A1EC28 LDR X0, [X31 + 0x38]
	0x03A1EC2C STP V0, V1, [X31 + 0x3D0]
	0x03A1EC30 STR X8, [X31 + 0x3F0]
	0x03A1EC34 CBZ X0, 0x3A1EE28
	0x03A1EC38 LDP V0, V1, [X31 + 0x3D0]
	0x03A1EC3C LDR X8, [X31 + 0x3F0]
	0x03A1EC40 ADD X2, X31, 0xC0
	0x03A1EC44 MOV W1, W20
	0x03A1EC48 MOV X3, X31
	0x03A1EC4C STP V0, V1, [X31 + 0xC0]
	0x03A1EC50 STR X8, [X31 + 0xE0]
	0x03A1EC54 BL 0x3C4FCFC
	0x03A1EC58 ADRP X8, 0x736000
	0x03A1EC5C LDR X8, [X8 + 0x658]
	0x03A1EC60 LDR X0, [X8]
	0x03A1EC64 LDR W8, [X0 + 0xE0]
	0x03A1EC68 CBNZ W8, 0x3A1EC70
	0x03A1EC6C BL 0x1C16DFC
	0x03A1EC70 LDR X1, [X31 + 0x38]
	0x03A1EC74 MOV X2, X27
	0x03A1EC78 BL 0x3A1EF34
	0x03A1EC7C LDR W8, [X27 + 0x78]
	0x03A1EC80 CMP W8, 0x2
	0x03A1EC84 B.NE 0x3A1EC94
	0x03A1EC88 LDR W8, [X27 + 0x24]
	0x03A1EC8C CMP W8, 0x3
	0x03A1EC90 B.NE 0x3A1ECC0
	0x03A1EC94 ADRP X8, 0x736000
	0x03A1EC98 LDR X8, [X8 + 0x658]
	0x03A1EC9C LDR X0, [X8]
	0x03A1ECA0 LDR W8, [X0 + 0xE0]
	0x03A1ECA4 CBNZ W8, 0x3A1ECAC
	0x03A1ECA8 BL 0x1C16DFC
	0x03A1ECAC LDR X1, [X31 + 0x38]
	0x03A1ECB0 MOV X0, X25
	0x03A1ECB4 MOV X2, X27
	0x03A1ECB8 BL 0x3A1F040
	0x03A1ECBC LDR W8, [X27 + 0x24]
	0x03A1ECC0 CMP W8, 0x3
	0x03A1ECC4 B.CS 0x3A1ED24
	0x03A1ECC8 MOV X0, X27
	0x03A1ECCC MOV X1, X31
	0x03A1ECD0 BL 0x3C32E90
	0x03A1ECD4 CBZ X0, 0x3A1EE28
	0x03A1ECD8 ADD X8, X31, 0x80
	0x03A1ECDC MOV X1, X31
	0x03A1ECE0 BL 0x3C3F1C8
	0x03A1ECE4 LDP V0, V1, [X31 + 0x80]
	0x03A1ECE8 LDP V2, V3, [X31 + 0xA0]
	0x03A1ECEC LDR X0, [X31 + 0x38]
	0x03A1ECF0 STP V0, V1, [X31 + 0x3D0]
	0x03A1ECF4 STP V2, V3, [X31 + 0x3F0]
	0x03A1ECF8 CBZ X0, 0x3A1EE28
	0x03A1ECFC LDP V0, V1, [X31 + 0x3D0]
	0x03A1ED00 LDP V2, V3, [X31 + 0x3F0]
	0x03A1ED04 LDR X1, [X31 + 0x28]
	0x03A1ED08 ADD X2, X31, 0x40
	0x03A1ED0C MOV X3, X28
	0x03A1ED10 MOV X4, X31
	0x03A1ED14 STP V0, V1, [X31 + 0x40]
	0x03A1ED18 STP V2, V3, [X31 + 0x60]
	0x03A1ED1C BL 0x3C4F0D4
	0x03A1ED20 B 0x3A1ED54
	0x03A1ED24 B.NE 0x3A1ED54
	0x03A1ED28 ADRP X8, 0x736000
	0x03A1ED2C LDR X8, [X8 + 0x658]
	0x03A1ED30 LDR X0, [X8]
	0x03A1ED34 LDR W8, [X0 + 0xE0]
	0x03A1ED38 CBNZ W8, 0x3A1ED40
	0x03A1ED3C BL 0x1C16DFC
	0x03A1ED40 LDR X0, [X31 + 0x38]
	0x03A1ED44 LDR X2, [X31 + 0x28]
	0x03A1ED48 MOV X1, X27
	0x03A1ED4C MOV X3, X28
	0x03A1ED50 BL 0x3A1E414
	0x03A1ED54 ADRP X23, 0x736000
	0x03A1ED58 LDR X23, [X23 + 0x658]
	0x03A1ED5C LDR X8, [X31 + 0x6A8]
	0x03A1ED60 ADD X26, X26, 0x1
	0x03A1ED64 CMP X26, X8
	0x03A1ED68 B.NE 0x3A1E978
	0x03A1ED6C LDR W8, [X31 + 0x24]
	0x03A1ED70 ADRP X26, 0x736000
	0x03A1ED74 LDR X23, [X31 + 0x38]
	0x03A1ED78 LDR X26, [X26 + 0x6A0]
	0x03A1ED7C SUBS W20, W8, 0x1
	0x03A1ED80 B.MI 0x3A1EDAC
	0x03A1ED84 LDR X0, [X26]
	0x03A1ED88 LDR W8, [X0 + 0xE0]
	0x03A1ED8C CBNZ W8, 0x3A1ED94
	0x03A1ED90 BL 0x1C16DFC
	0x03A1ED94 MOV X0, X23
	0x03A1ED98 MOV W1, W20
	0x03A1ED9C MOV X2, X31
	0x03A1EDA0 BL 0x3A29FE0
	0x03A1EDA4 SUBS W20, W20, 0x1
	0x03A1EDA8 B.PL 0x3A1ED84
	0x03A1EDAC LDR W8, [X19 + 0x18]
	0x03A1EDB0 ADD W24, W22, W24
	0x03A1EDB4 MOV W23, W31
	0x03A1EDB8 CMP W24, W8
	0x03A1EDBC B.LT 0x3A1E7C4
	0x03A1EDC0 ADRP X8, 0x736000
	0x03A1EDC4 LDR X8, [X8 + 0x6A8]
	0x03A1EDC8 ADD X0, X31, 0x690
	0x03A1EDCC LDR X1, [X8]
	0x03A1EDD0 BL 0x23C810C
	0x03A1EDD4 B 0x3A1EE04
	0x03A1EDD8 ADRP X8, 0x6D5000
	0x03A1EDDC LDR X8, [X8 + 0xA28]
	0x03A1EDE0 LDR X0, [X8]
	0x03A1EDE4 LDR W8, [X0 + 0xE0]
	0x03A1EDE8 CBNZ W8, 0x3A1EDF0
	0x03A1EDEC BL 0x1C16DFC
	0x03A1EDF0 ADRP X8, 0x736000
	0x03A1EDF4 LDR X8, [X8 + 0x768]
	0x03A1EDF8 MOV X1, X31
	0x03A1EDFC LDR X0, [X8]
	0x03A1EE00 BL 0x3C0649C
	0x03A1EE04 ADD X31, X31, 0x6A0
	0x03A1EE08 LDP X20, X19, [X31 + 0x60]
	0x03A1EE0C LDP X22, X21, [X31 + 0x50]
	0x03A1EE10 LDP X24, X23, [X31 + 0x40]
	0x03A1EE14 LDP X26, X25, [X31 + 0x30]
	0x03A1EE18 LDP X28, X27, [X31 + 0x20]
	0x03A1EE1C LDP X29, X30, [X31 + 0x10]
	0x03A1EE20 LDR V8, [X31], #0x70
	0x03A1EE24 RET
	0x03A1EE28 BL 0x1C16F20
	0x03A1EE2C SUB X31, X31, 0x40
	0x03A1EE30 STP X30, X23, [X31 + 0x10]
	0x03A1EE34 STP X22, X21, [X31 + 0x20]
	0x03A1EE38 STP X20, X19, [X31 + 0x30]
	0x03A1EE3C ADRP X22, 0x9C3000
	0x03A1EE40 ADRP X23, 0x736000
	0x03A1EE44 LDRB W8, [X22 + 0xFFE]
	0x03A1EE48 LDR X23, [X23 + 0x658]
	0x03A1EE4C MOV W21, W2
	0x03A1EE50 MOV X20, X1
	0x03A1EE54 MOV X19, X0
	0x03A1EE58 TBNZ X8, 0x0, 0x3A1EE88
	0x03A1EE5C ADRP X0, 0x736000
	0x03A1EE60 LDR X0, [X0 + 0x770]
	0x03A1EE64 BL 0x1C16CF4
	0x03A1EE68 ADRP X0, 0x736000
	0x03A1EE6C LDR X0, [X0 + 0x778]
	0x03A1EE70 BL 0x1C16CF4
	0x03A1EE74 ADRP X0, 0x736000
	0x03A1EE78 LDR X0, [X0 + 0x658]
	0x03A1EE7C BL 0x1C16CF4
	0x03A1EE80 MOVZ W8, 0x1
	0x03A1EE84 STRB W8, [X22 + 0xFFE]
	0x03A1EE88 LDR X0, [X23]
	0x03A1EE8C STR X31, [X31 + 0x8]
	0x03A1EE90 LDR W8, [X0 + 0xE0]
	0x03A1EE94 CBNZ W8, 0x3A1EE9C
	0x03A1EE98 BL 0x1C16DFC
	0x03A1EE9C AND W1, W21, 0x1
	0x03A1EEA0 MOV X0, X20
	0x03A1EEA4 BL 0x3A1F904
	0x03A1EEA8 CBZ X19, 0x3A1EF30
	0x03A1EEAC MOV W22, W0
	0x03A1EEB0 LDR X0, [X19 + 0xF0]
	0x03A1EEB4 CBZ X0, 0x3A1EF30
	0x03A1EEB8 ADRP X8, 0x736000
	0x03A1EEBC LDR X8, [X8 + 0x770]
	0x03A1EEC0 ADD X2, X31, 0x8
	0x03A1EEC4 MOV W1, W22
	0x03A1EEC8 LDR X3, [X8]

ISIL:
	001 Subtract X31, X31, 192
	002 Move [X31+32], D15
	003 Move [X31+40], D14
	004 Move [X31+48], D13
	005 Move [X31+56], D12
	006 Move [X31+64], D11
	007 Move [X31+72], D10
	008 Move [X31+80], D9
	009 Move [X31+88], D8
	010 Move [X31+96], X29
	011 Move [X31+104], X30
	012 Move [X31+112], X28
	013 Move [X31+120], X27
	014 Move [X31+128], X26
	015 Move [X31+136], X25
	016 Move [X31+144], X24
	017 Move [X31+152], X23
	018 Move [X31+160], X22
	019 Move [X31+168], X21
	020 Move [X31+176], X20
	021 Move [X31+184], X19
	022 Move X20, 0x9C4000
	023 Move X19, 0x737000
	024 Move W8, [X20+4074]
	025 Move X19, [X19+16]
	026 Move TEMP, X8
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {38}
	030 Move X0, 0x737000
	031 Move X0, [X0+16]
	032 Call 0x1C17CF4
	033 Move X0, 0x700000
	034 Move X0, [X0+592]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X20+4074], W8
	038 Move X0, [X19]
	039 Move W8, [X0+224]
	040 Compare W8, 0
	041 JumpIfNotEqual {43}
	042 Call 0x1C17DFC
	043 Move X21, 0x700000
	044 Move X21, [X21+592]
	045 Move W0, 48
	046 Move W1, 7
	047 Move X2, X31
	048 Move W20, 48
	049 Call RenderingUtils.SupportsGraphicsFormat, X0, X1
	050 Move TEMP, X0
	051 And TEMP, TEMP, 1
	052 Compare TEMP, 1
	053 JumpIfEqual {67}
	054 Move X0, [X19]
	055 Move W8, [X0+224]
	056 Compare W8, 0
	057 JumpIfNotEqual {59}
	058 Call 0x1C17DFC
	059 Move W0, 52
	060 Move W1, 7
	061 Move X2, X31
	062 Move W19, 52
	063 Call RenderingUtils.SupportsGraphicsFormat, X0, X1
	064 And W31, W0, 1
	065 Move W8, 8
	066 NotImplemented "Instruction CSEL not yet implemented."
	067 Move X0, [X21]
	068 Call 0x1C17F10
	069 Move W1, 256
	070 Move W2, 256
	071 Move W3, W20
	072 Move W4, W31
	073 Move X5, X31
	074 Move X19, X0
	075 Call Texture2D..ctor, X0, X1, X2, X3, X4
	076 Compare X19, 0
	077 JumpIfEqual {262}
	078 Move W1, 1
	079 Move X0, X19
	080 Move X2, X31
	081 Move W24, 1
	082 Call Texture.set_filterMode, X0, X1
	083 Move W1, 1
	084 Move X0, X19
	085 Move X2, X31
	086 Call Texture.set_wrapMode, X0, X1
	087 Move X9, -49491968
	088 Move X21, 0x6D6000
	089 Move X8, -49491968
	090 Move X22, 0x6DE000
	091 Move V0, [X9+172]
	092 Move X21, [X21+1448]
	093 Move X22, [X22+3848]
	094 Move V11, [X8+380]
	095 Move W20, W31
	096 Move W26, 0x43000000
	097 Move X27, 0x9C4000
	098 Move X28, 0x9BC000
	099 Move X29, 0x9BC000
	100 Move [X31+20], S0
	101 Move S13, 1
	102 Move X25, 0x9BC000
	103 Move W8, 0xC3000000
	104 NotImplemented "Instruction SCVTF not yet implemented."
	105 Move S1, W8
	106 Move S2, W26
	107 Add S1, S0, S1
	108 Subtract S0, S2, S0
	109 Move [X31+12], S0
	110 Move [X31+20], S1
	111 Multiply S1, S1, S1
	112 Multiply S0, S0, S0
	113 Move W23, W31
	114 Move [X31+24], S0
	115 Move [X31+32], S1
	116 Move W8, [X27+2064]
	117 Compare W8, 0
	118 JumpIfNotEqual {122}
	119 Move X0, X21
	120 Call 0x1C17CF4
	121 Move [X27+2064], W24
	122 Move X0, [X21]
	123 Move W8, [X0+224]
	124 Compare W8, 0
	125 JumpIfNotEqual {127}
	126 Call 0x1C17DFC
	127 Move W8, [X28+2072]
	128 Compare W8, 0
	129 JumpIfNotEqual {133}
	130 Move X0, X21
	131 Call 0x1C17CF4
	132 Move [X28+2072], W24
	133 Move X0, [X21]
	134 Move W8, [X0+224]
	135 Compare W8, 0
	136 JumpIfNotEqual {138}
	137 Call 0x1C17DFC
	138 Move V2, [X31+24]
	139 NotImplemented "Instruction SCVTF not yet implemented."
	140 Move S0, W26
	141 Subtract S0, S0, S10
	142 Multiply S1, S0, S0
	143 Add S1, S2, S1
	144 NotImplemented "Instruction FSQRT not yet implemented."
	145 NotImplemented "Instruction FCMP not yet implemented."
	146 NotImplemented "Instruction FDIV not yet implemented."
	147 Move V0, [X31+12]
	148 NotImplemented "Instruction FDIV not yet implemented."
	149 Move W8, [X25+1935]
	150 Compare W8, 0
	151 JumpIfNotEqual {155}
	152 Move X0, X22
	153 Call 0x1C17CF4
	154 Move [X25+1935], W24
	155 Move X8, [X22]
	156 Move X8, [X8+184]
	157 Move S8, [X8]
	158 Move S9, [X8+4]
	159 Move W8, 0xC3000000
	160 Move V1, [X31+28]
	161 Move S0, W8
	162 Add S12, S10, S0
	163 Multiply S0, S12, S12
	164 Add S0, S1, S0
	165 NotImplemented "Instruction CMP not yet implemented."
	166 NotImplemented "Instruction FSQRT not yet implemented."
	167 Move S10, W31
	168 NotImplemented "Instruction CMP not yet implemented."
	169 Move W8, 0xBB800000
	170 Add S0, S15, S15
	171 Move S1, W8
	172 Multiply S0, S0, S1
	173 Add S0, S0, S13
	174 NotImplemented "Instruction FCMP not yet implemented."
	175 NotImplemented "Instruction FMIN not yet implemented."
	176 Move W8, [X29+1933]
	177 Compare W8, 0
	178 JumpIfNotEqual {182}
	179 Move X0, X22
	180 Call 0x1C17CF4
	181 Move [X29+1933], W24
	182 Move X8, [X22]
	183 Move W9, [X28+2072]
	184 Move X8, [X8+184]
	185 Move S13, [X8+24]
	186 Move S14, [X8+28]
	187 Compare W9, 0
	188 JumpIfNotEqual {192}
	189 Move X0, X21
	190 Call 0x1C17CF4
	191 Move [X28+2072], W24
	192 Move X0, [X21]
	193 Move W8, [X0+224]
	194 Compare W8, 0
	195 JumpIfNotEqual {197}
	196 Call 0x1C17DFC
	197 NotImplemented "Instruction FCMP not yet implemented."
	198 Move V1, [X31+16]
	199 NotImplemented "Instruction FDIV not yet implemented."
	200 NotImplemented "Instruction FDIV not yet implemented."
	201 Move W8, [X25+1935]
	202 Compare W8, 0
	203 JumpIfNotEqual {207}
	204 Move X0, X22
	205 Call 0x1C17CF4
	206 Move [X25+1935], W24
	207 Move X8, [X22]
	208 Move X8, [X8+184]
	209 Move S0, [X8]
	210 Move S1, [X8+4]
	211 Multiply S0, S13, S0
	212 Multiply S1, S14, S1
	213 Add S0, S0, S1
	214 Call 0x3EB2BB0
	215 Move V1, [X31+20]
	216 Move X0, X19
	217 Move W1, W23
	218 Move W2, W20
	219 NotImplemented "Instruction FDIV not yet implemented."
	220 Move S1, 1
	221 Add S0, S0, S1
	222 NotImplemented "Instruction FMIN not yet implemented."
	223 NotImplemented "Instruction FCMP not yet implemented."
	224 Move S0, W31
	225 NotImplemented "Instruction FCSEL not yet implemented."
	226 Move V0, V10
	227 Move V2, V8
	228 Move V3, V9
	229 Move X3, X31
	230 Move S13, 1
	231 Call Texture2D.SetPixel, X0, X1, X2, X3
	232 Add W23, W23, 1
	233 NotImplemented "Instruction CMP not yet implemented."
	234 Add W20, W20, 1
	235 NotImplemented "Instruction CMP not yet implemented."
	236 Move X0, X19
	237 Move X1, X31
	238 Call Texture2D.Apply, X0
	239 Move X0, X19
	240 Move X20, [X31+176]
	241 Move X19, [X31+184]
	242 Move X22, [X31+160]
	243 Move X21, [X31+168]
	244 Move X24, [X31+144]
	245 Move X23, [X31+152]
	246 Move X26, [X31+128]
	247 Move X25, [X31+136]
	248 Move X28, [X31+112]
	249 Move X27, [X31+120]
	250 Move X29, [X31+96]
	251 Move X30, [X31+104]
	252 Move D9, [X31+80]
	253 Move D8, [X31+88]
	254 Move D11, [X31+64]
	255 Move D10, [X31+72]
	256 Move D13, [X31+48]
	257 Move D12, [X31+56]
	258 Move D15, [X31+32]
	259 Move D14, [X31+40]
	260 Add X31, X31, 192
	261 Return X0
	262 Call 0x1C17F20

