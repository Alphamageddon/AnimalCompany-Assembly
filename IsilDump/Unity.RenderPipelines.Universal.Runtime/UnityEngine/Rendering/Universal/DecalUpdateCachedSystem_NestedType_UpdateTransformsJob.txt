Type: UnityEngine.Rendering.Universal.DecalUpdateCachedSystem/UpdateTransformsJob

Method: System.Single DistanceBetweenQuaternions(Unity.Mathematics.quaternion a, Unity.Mathematics.quaternion b)

Disassembly:
	0x03A41DE4 MOV X0, X20
	0x03A41DE8 BL 0x1C16F18
	0x03A41DEC MOV X20, X31
	0x03A41DF0 B 0x3A41DF8
	0x03A41DF4 MOV X19, X0
	0x03A41DF8 ADD X0, X31, 0x8
	0x03A41DFC MOV X1, X31
	0x03A41E00 BL 0x39B1DB4
	0x03A41E04 CBNZ X20, 0x3A41E10
	0x03A41E08 MOV X0, X19
	0x03A41E0C BL 0x1D2C690
	0x03A41E10 MOV X0, X20

ISIL:
	001 Subtract S0, S4, S0
	002 Subtract S1, S5, S1
	003 Subtract S2, S6, S2
	004 Multiply S0, S0, S0
	005 Multiply S1, S1, S1
	006 Subtract S3, S7, S3
	007 Multiply S2, S2, S2
	008 Add S0, S0, S1
	009 Add S0, S2, S0
	010 Multiply S1, S3, S3
	011 Add S0, S1, S0
	012 Return V0

Method: System.Void Execute(System.Int32 index, UnityEngine.Jobs.TransformAccess transform)

Disassembly:
	0x03A41E14 BL 0x1C16F18
	0x03A41E18 BL 0x1990590
	0x03A41E1C SUB X31, X31, 0x50
	0x03A41E20 STR X30, [X31 + 0x10]
	0x03A41E24 STP X24, X23, [X31 + 0x20]
	0x03A41E28 STP X22, X21, [X31 + 0x30]
	0x03A41E2C STP X20, X19, [X31 + 0x40]
	0x03A41E30 ADRP X23, 0x9A1000
	0x03A41E34 LDRB W8, [X23 + 0x16A]
	0x03A41E38 MOV W21, W3
	0x03A41E3C MOV X19, X2
	0x03A41E40 MOV X22, X1
	0x03A41E44 MOV X20, X0
	0x03A41E48 TBNZ X8, 0x0, 0x3A41E60
	0x03A41E4C ADRP X0, 0x714000
	0x03A41E50 LDR X0, [X0 + 0xBD0]
	0x03A41E54 BL 0x1C16CF4
	0x03A41E58 MOVZ W8, 0x1
	0x03A41E5C STRB W8, [X23 + 0x16A]
	0x03A41E60 CBZ X22, 0x3A41F54
	0x03A41E64 LDUR V0, [X22 + 0x18]
	0x03A41E68 ADD X0, X31, 0x0
	0x03A41E6C MOV X1, X31
	0x03A41E70 STR V0, [X31]
	0x03A41E74 BL 0x3BFDCAC
	0x03A41E78 CBZ X19, 0x3A41F54
	0x03A41E7C LDR X23, [X19 + 0x48]
	0x03A41E80 CBZ X23, 0x3A41F54
	0x03A41E84 LDR X1, [X20 + 0x18]
	0x03A41E88 MOV X0, X23
	0x03A41E8C MOV X2, X31
	0x03A41E90 BL 0x3C05268
	0x03A41E94 LDR X0, [X20 + 0x18]
	0x03A41E98 CBZ X0, 0x3A41F54
	0x03A41E9C MOV X1, X31
	0x03A41EA0 BL 0x3C32E90
	0x03A41EA4 CBZ X0, 0x3A41F54
	0x03A41EA8 ADRP X24, 0x714000
	0x03A41EAC LDR X24, [X24 + 0xBD0]
	0x03A41EB0 MOV X1, X31
	0x03A41EB4 BL 0x3C3F58C
	0x03A41EB8 MOV X0, X23
	0x03A41EBC MOV X1, X31
	0x03A41EC0 BL 0x3C054E8
	0x03A41EC4 LDR X1, [X20 + 0x10]
	0x03A41EC8 MOV X0, X23
	0x03A41ECC MOV X2, X31
	0x03A41ED0 BL 0x3C0540C
	0x03A41ED4 LDR X1, [X22 + 0x148]
	0x03A41ED8 LDR X2, [X24]
	0x03A41EDC ADD X0, X22, 0xD8
	0x03A41EE0 BL 0x23C9170
	0x03A41EE4 LDR X1, [X22 + 0x148]
	0x03A41EE8 MOV X0, X23
	0x03A41EEC MOV X2, X31
	0x03A41EF0 BL 0x3C052AC
	0x03A41EF4 MOV X0, X23
	0x03A41EF8 MOV W1, W21
	0x03A41EFC MOV X2, X31
	0x03A41F00 BL 0x3C052F0
	0x03A41F04 LDR X0, [X20 + 0x18]
	0x03A41F08 CBZ X0, 0x3A41F54
	0x03A41F0C MOV X1, X31
	0x03A41F10 BL 0x3C32E90
	0x03A41F14 CBZ X0, 0x3A41F54
	0x03A41F18 MOV X1, X31
	0x03A41F1C BL 0x3C3F58C
	0x03A41F20 STP S0, S1, [X19 + 0x28]
	0x03A41F24 STR S2, [X19 + 0x30]
	0x03A41F28 LDR X0, [X20 + 0x18]
	0x03A41F2C CBZ X0, 0x3A41F54
	0x03A41F30 MOV X1, X31
	0x03A41F34 BL 0x3C03A18
	0x03A41F38 STR W0, [X19 + 0x40]
	0x03A41F3C LDP X20, X19, [X31 + 0x40]
	0x03A41F40 LDP X22, X21, [X31 + 0x30]
	0x03A41F44 LDP X24, X23, [X31 + 0x20]
	0x03A41F48 LDR X30, [X31 + 0x10]
	0x03A41F4C ADD X31, X31, 0x50
	0x03A41F50 RET
	0x03A41F54 BL 0x1C16F20
	0x03A41F58 MOV X0, X31
	0x03A41F5C RET
	0x03A41F60 STR X30, [X31 - 0x30]!
	0x03A41F64 STP X22, X21, [X31 + 0x10]
	0x03A41F68 STP X20, X19, [X31 + 0x20]
	0x03A41F6C ADRP X21, 0x9A1000
	0x03A41F70 ADRP X22, 0x714000
	0x03A41F74 LDRB W8, [X21 + 0x16B]
	0x03A41F78 LDR X22, [X22 + 0xBD8]
	0x03A41F7C MOV X19, X1
	0x03A41F80 MOV X20, X0
	0x03A41F84 TBNZ X8, 0x0, 0x3A41F9C
	0x03A41F88 ADRP X0, 0x714000
	0x03A41F8C LDR X0, [X0 + 0xBD8]
	0x03A41F90 BL 0x1C16CF4
	0x03A41F94 MOVZ W8, 0x1
	0x03A41F98 STRB W8, [X21 + 0x16B]
	0x03A41F9C LDR X1, [X22]
	0x03A41FA0 MOV X0, X20
	0x03A41FA4 MOV X2, X19
	0x03A41FA8 LDP X20, X19, [X31 + 0x20]
	0x03A41FAC LDP X22, X21, [X31 + 0x10]
	0x03A41FB0 LDR X30, [X31], #0x30
	0x03A41FB4 B 0x3A3BAC0
	0x03A41FB8 STR X30, [X31 - 0x10]!
	0x03A41FBC CBZ X1, 0x3A41FCC
	0x03A41FC0 LDR W0, [X1 + 0x3C]
	0x03A41FC4 LDR X30, [X31], #0x10
	0x03A41FC8 RET
	0x03A41FCC BL 0x1C16F20
	0x03A41FD0 SUB X31, X31, 0x90
	0x03A41FD4 STR X30, [X31 + 0x30]
	0x03A41FD8 STP X28, X27, [X31 + 0x40]
	0x03A41FDC STP X26, X25, [X31 + 0x50]
	0x03A41FE0 STP X24, X23, [X31 + 0x60]
	0x03A41FE4 STP X22, X21, [X31 + 0x70]
	0x03A41FE8 STP X20, X19, [X31 + 0x80]
	0x03A41FEC ADRP X24, 0x9A1000
	0x03A41FF0 ADRP X23, 0x712000
	0x03A41FF4 LDRB W8, [X24 + 0x16C]
	0x03A41FF8 LDR X23, [X23 + 0xFF0]
	0x03A41FFC MOV W22, W3
	0x03A42000 MOV X20, X2
	0x03A42004 MOV X21, X1
	0x03A42008 MOV X19, X0
	0x03A4200C TBNZ X8, 0x0, 0x3A4209C
	0x03A42010 ADRP X0, 0x712000
	0x03A42014 LDR X0, [X0 + 0x70]
	0x03A42018 BL 0x1C16CF4
	0x03A4201C ADRP X0, 0x712000
	0x03A42020 LDR X0, [X0 + 0x68]
	0x03A42024 BL 0x1C16CF4
	0x03A42028 ADRP X0, 0x712000
	0x03A4202C LDR X0, [X0 + 0x60]
	0x03A42030 BL 0x1C16CF4
	0x03A42034 ADRP X0, 0x712000
	0x03A42038 LDR X0, [X0 + 0x78]
	0x03A4203C BL 0x1C16CF4
	0x03A42040 ADRP X0, 0x70E000
	0x03A42044 LDR X0, [X0 + 0x598]
	0x03A42048 BL 0x1C16CF4
	0x03A4204C ADRP X0, 0x710000
	0x03A42050 LDR X0, [X0 + 0xF30]
	0x03A42054 BL 0x1C16CF4
	0x03A42058 ADRP X0, 0x6DA000
	0x03A4205C LDR X0, [X0 + 0xD28]
	0x03A42060 BL 0x1C16CF4
	0x03A42064 ADRP X0, 0x711000
	0x03A42068 LDR X0, [X0 + 0xFF0]
	0x03A4206C BL 0x1C16CF4
	0x03A42070 ADRP X0, 0x713000
	0x03A42074 LDR X0, [X0 + 0xBE0]
	0x03A42078 BL 0x1C16CF4
	0x03A4207C ADRP X0, 0x713000
	0x03A42080 LDR X0, [X0 + 0x780]
	0x03A42084 BL 0x1C16CF4
	0x03A42088 ADRP X0, 0x713000
	0x03A4208C LDR X0, [X0 + 0xBE8]
	0x03A42090 BL 0x1C16CF4
	0x03A42094 MOVZ W8, 0x1
	0x03A42098 STRB W8, [X24 + 0x16C]
	0x03A4209C LDR X0, [X23]
	0x03A420A0 AND W23, W22, 0x1
	0x03A420A4 ADRP X28, 0x70E000
	0x03A420A8 ADRP X27, 0x713000
	0x03A420AC ADRP X22, 0x6DA000
	0x03A420B0 LDR W8, [X0 + 0xE0]
	0x03A420B4 LDR X28, [X28 + 0x598]
	0x03A420B8 LDR X27, [X27 + 0xBE0]
	0x03A420BC LDR X22, [X22 + 0xD28]
	0x03A420C0 CBNZ W8, 0x3A420C8
	0x03A420C4 BL 0x1C16DFC
	0x03A420C8 ADRP X26, 0x712000
	0x03A420CC ADRP X25, 0x712000
	0x03A420D0 ADRP X24, 0x712000
	0x03A420D4 LDR X26, [X26 + 0x78]
	0x03A420D8 LDR X25, [X25 + 0x60]
	0x03A420DC LDR X24, [X24 + 0x68]
	0x03A420E0 MOV X0, X19
	0x03A420E4 BL 0x3A4225C
	0x03A420E8 MOVZ W8, 0xDC
	0x03A420EC STR W8, [X19 + 0x10]
	0x03A420F0 STP X20, X21, [X19 + 0x108]
	0x03A420F4 LDR X0, [X28]
	0x03A420F8 BL 0x1C16F10
	0x03A420FC LDR X1, [X27]
	0x03A42100 MOV X2, X31
	0x03A42104 MOV X21, X0
	0x03A42108 BL 0x39B19AC
	0x03A4210C STR X21, [X19 + 0xF8]
	0x03A42110 LDR X0, [X22]
	0x03A42114 LDR W8, [X0 + 0xE0]
	0x03A42118 CBNZ W8, 0x3A42120
	0x03A4211C BL 0x1C16DFC
	0x03A42120 ADRP X22, 0x712000
	0x03A42124 LDR X22, [X22 + 0x70]
	0x03A42128 MOV X0, X31
	0x03A4212C BL 0x3C560AC
	0x03A42130 LDR X2, [X26]
	0x03A42134 MOV X1, X0
	0x03A42138 ADD X0, X31, 0x20
	0x03A4213C STR W31, [X31 + 0x28]
	0x03A42140 STR X31, [X31 + 0x20]
	0x03A42144 BL 0x2439504
	0x03A42148 LDR X1, [X31 + 0x20]
	0x03A4214C LDR W2, [X31 + 0x28]
	0x03A42150 ADD X0, X31, 0x8
	0x03A42154 MOVN W3, 0x0
	0x03A42158 MOVN W4, 0x0
	0x03A4215C MOV W5, W31
	0x03A42160 MOV X6, X31
	0x03A42164 STP X31, X31, [X31 + 0x8]
	0x03A42168 STR X31, [X31 + 0x18]
	0x03A4216C BL 0x3C53F40
	0x03A42170 LDR X8, [X31 + 0x18]
	0x03A42174 LDUR V0, [X31 + 0x8]
	0x03A42178 STRB W23, [X19 + 0x128]
	0x03A4217C STR X8, [X19 + 0xF0]
	0x03A42180 STR V0, [X19 + 0xE]
	0x03A42184 LDR X0, [X25]
	0x03A42188 BL 0x1C16F10
	0x03A4218C LDR X1, [X24]
	0x03A42190 MOV X21, X0
	0x03A42194 BL 0x305C9FC
	0x03A42198 STR X21, [X19 + 0x100]
	0x03A4219C CBZ X20, 0x3A421AC
	0x03A421A0 ADRP X8, 0x713000
	0x03A421A4 LDR X8, [X8 + 0xBE8]
	0x03A421A8 B 0x3A421B4
	0x03A421AC ADRP X8, 0x713000
	0x03A421B0 LDR X8, [X8 + 0x780]
	0x03A421B4 LDR X1, [X8]
	0x03A421B8 ADD X0, X31, 0x8
	0x03A421BC MOV X2, X31
	0x03A421C0 STR W31, [X31 + 0x8]
	0x03A421C4 BL 0x3C5A49C
	0x03A421C8 CBZ X21, 0x3A42258
	0x03A421CC LDR W10, [X21 + 0x1C]
	0x03A421D0 LDR W1, [X31 + 0x8]
	0x03A421D4 LDR X8, [X21 + 0x10]
	0x03A421D8 LDR X9, [X22]
	0x03A421DC ADD W10, W10, 0x1
	0x03A421E0 STR W10, [X21 + 0x1C]
	0x03A421E4 CBZ X8, 0x3A42258
	0x03A421E8 LDRSW X10, [X21 + 0x18]
	0x03A421EC LDR W11, [X8 + 0x18]
	0x03A421F0 CMP W10, W11
	0x03A421F4 B.CS 0x3A4220C
	0x03A421F8 ADD W9, W10, 0x1
	0x03A421FC ADD X8, X8, X10, 0x2, LSL
	0x03A42200 STR W9, [X21 + 0x18]
	0x03A42204 STR W1, [X8 + 0x20]
	0x03A42208 B 0x3A42220
	0x03A4220C LDR X8, [X9 + 0x20]
	0x03A42210 MOV X0, X21
	0x03A42214 LDR X8, [X8 + 0xC0]
	0x03A42218 LDR X2, [X8 + 0x70]
	0x03A4221C BL 0x305D1F8
	0x03A42220 ADRP X8, 0x710000
	0x03A42224 LDR X8, [X8 + 0xF30]
	0x03A42228 MOVZ W1, 0x4
	0x03A4222C LDR X0, [X8]
	0x03A42230 BL 0x1C16D6C
	0x03A42234 STR X0, [X19 + 0x120]
	0x03A42238 LDP X20, X19, [X31 + 0x80]
	0x03A4223C LDP X22, X21, [X31 + 0x70]
	0x03A42240 LDP X24, X23, [X31 + 0x60]
	0x03A42244 LDP X26, X25, [X31 + 0x50]
	0x03A42248 LDP X28, X27, [X31 + 0x40]
	0x03A4224C LDR X30, [X31 + 0x30]
	0x03A42250 ADD X31, X31, 0x90
	0x03A42254 RET
	0x03A42258 BL 0x1C16F20
	0x03A4225C STR X29, [X31 - 0x50]!
	0x03A42260 STP X30, X25, [X31 + 0x10]
	0x03A42264 STP X24, X23, [X31 + 0x20]
	0x03A42268 STP X22, X21, [X31 + 0x30]
	0x03A4226C STP X20, X19, [X31 + 0x40]
	0x03A42270 SUB X31, X31, 0x1D0
	0x03A42274 ADRP X20, 0x9A0000
	0x03A42278 ADRP X24, 0x713000
	0x03A4227C ADRP X23, 0x6B3000
	0x03A42280 ADRP X25, 0x710000
	0x03A42284 ADRP X22, 0x711000
	0x03A42288 LDRB W8, [X20 + 0x174]
	0x03A4228C LDR X24, [X24 + 0xBF0]
	0x03A42290 LDR X23, [X23 + 0x9B8]
	0x03A42294 LDR X25, [X25 + 0xF30]
	0x03A42298 LDR X22, [X22 + 0xFF0]
	0x03A4229C MOV X19, X0
	0x03A422A0 TBNZ X8, 0x0, 0x3A4230C
	0x03A422A4 ADRP X0, 0x6B3000
	0x03A422A8 LDR X0, [X0 + 0x9B8]
	0x03A422AC BL 0x1C16CF4
	0x03A422B0 ADRP X0, 0x712000
	0x03A422B4 LDR X0, [X0 + 0xC80]
	0x03A422B8 BL 0x1C16CF4
	0x03A422BC ADRP X0, 0x70E000
	0x03A422C0 LDR X0, [X0 + 0x598]
	0x03A422C4 BL 0x1C16CF4
	0x03A422C8 ADRP X0, 0x710000
	0x03A422CC LDR X0, [X0 + 0xF30]
	0x03A422D0 BL 0x1C16CF4
	0x03A422D4 ADRP X0, 0x713000
	0x03A422D8 LDR X0, [X0 + 0xBF0]
	0x03A422DC BL 0x1C16CF4
	0x03A422E0 ADRP X0, 0x712000
	0x03A422E4 LDR X0, [X0 + 0xB18]
	0x03A422E8 BL 0x1C16CF4
	0x03A422EC ADRP X0, 0x711000
	0x03A422F0 LDR X0, [X0 + 0xFF0]
	0x03A422F4 BL 0x1C16CF4
	0x03A422F8 ADRP X0, 0x713000
	0x03A422FC LDR X0, [X0 + 0xBF8]
	0x03A42300 BL 0x1C16CF4
	0x03A42304 MOVZ W8, 0x1
	0x03A42308 STRB W8, [X20 + 0x174]
	0x03A4230C LDR X0, [X24]
	0x03A42310 MOVZ W1, 0x1
	0x03A42314 MOVZ W20, 0x1
	0x03A42318 BL 0x1C16D6C
	0x03A4231C STR X0, [X19 + 0x18]
	0x03A42320 LDR X0, [X23]
	0x03A42324 MOVZ W1, 0x1
	0x03A42328 BL 0x1C16D6C
	0x03A4232C STR X0, [X19 + 0x28]
	0x03A42330 LDR X0, [X25]
	0x03A42334 MOVZ W1, 0x8
	0x03A42338 BL 0x1C16D6C
	0x03A4233C STR X0, [X19 + 0x88]
	0x03A42340 LDR X0, [X23]
	0x03A42344 MOVZ W1, 0x8
	0x03A42348 BL 0x1C16D6C
	0x03A4234C ADRP X8, 0xFFFFFFFFFD0AA000
	0x03A42350 LDR V0, [X8 + 0xBB]
	0x03A42354 STR X0, [X19 + 0x90]
	0x03A42358 MOV X0, X19
	0x03A4235C MOV X1, X31
	0x03A42360 STR V0, [X19 + 0xD]
	0x03A42364 BL 0x33BDD8C
	0x03A42368 MOVZ W8, 0x12C
	0x03A4236C STRB W20, [X19 + 0x70]
	0x03A42370 STR W8, [X19 + 0x10]
	0x03A42374 LDR X0, [X25]
	0x03A42378 MOVZ W1, 0x8
	0x03A4237C BL 0x1C16D6C
	0x03A42380 LDR X8, [X22]
	0x03A42384 MOV X20, X0
	0x03A42388 LDR W9, [X8 + 0xE0]
	0x03A4238C CBNZ W9, 0x3A4239C
	0x03A42390 MOV X0, X8
	0x03A42394 BL 0x1C16DFC
	0x03A42398 LDR X8, [X22]
	0x03A4239C CBZ X20, 0x3A42704
	0x03A423A0 LDR X8, [X8 + 0xB8]
	0x03A423A4 LDR X21, [X8]
	0x03A423A8 CBZ X21, 0x3A423C0
	0x03A423AC LDR X8, [X20]
	0x03A423B0 MOV X0, X21
	0x03A423B4 LDR X1, [X8 + 0x40]
	0x03A423B8 BL 0x1C16E00
	0x03A423BC CBZ X0, 0x3A42708
	0x03A423C0 LDR W8, [X20 + 0x18]
	0x03A423C4 CBZ W8, 0x3A42700
	0x03A423C8 STR X21, [X20 + 0x20]
	0x03A423CC STR X20, [X19 + 0x78]
	0x03A423D0 LDR X0, [X25]
	0x03A423D4 MOVZ W1, 0x8
	0x03A423D8 BL 0x1C16D6C
	0x03A423DC STR X0, [X19 + 0x88]

ISIL:
	001 Move [X31-112], D15
	002 Move [X31-104], D14
	003 Move [X31+16], D13
	004 Move [X31+24], D12
	005 Move [X31+32], D11
	006 Move [X31+40], D10
	007 Move [X31+48], D9
	008 Move [X31+56], D8
	009 Move [X31+64], X29
	010 Move [X31+80], X30
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Subtract X31, X31, 720
	015 Move X21, 0x9A2000
	016 Move W8, [X21+352]
	017 Move W20, W1
	018 Move X19, X0
	019 Move [X31+704], X2
	020 Move [X31+712], X3
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {33}
	025 Move X0, 0x6DD000
	026 Move X0, [X0+2000]
	027 Call 0x1C17CF4
	028 Move X0, 0x6DE000
	029 Move X0, [X0+2104]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X21+352], W8
	033 Move X21, 0x6DD000
	034 Move X21, [X21+2000]
	035 NotImplemented "Instruction MOVI not yet implemented."
	036 Add X0, X31, 704
	037 Move X1, X31
	038 Move [X31+672], V0
	039 Move [X31+680], V0
	040 Move [X31+640], V0
	041 Move [X31+648], V0
	042 Call TransformAccess.get_position, X0
	043 Move X0, X31
	044 Call float3.op_Implicit, X0
	045 Move X8, [X19]
	046 Move W9, 12
	047 NotImplemented "Instruction SMADDL not yet implemented."
	048 Move S3, [X8]
	049 Move S4, [X8+4]
	050 Move V5, [X8+8]
	051 Move X20, W20
	052 Subtract S0, S3, S0
	053 Move V3, [X19+144]
	054 Subtract S1, S4, S1
	055 Subtract S2, S5, S2
	056 Multiply S0, S0, S0
	057 Multiply S1, S1, S1
	058 Add S0, S0, S1
	059 Multiply S1, S2, S2
	060 Add S0, S1, S0
	061 NotImplemented "Instruction FCMP not yet implemented."
	062 Move [X31+796], S3
	063 Move [X31+792], S0
	064 Add X0, X31, 704
	065 Move X1, X31
	066 Call TransformAccess.get_position, X0
	067 Move X0, X31
	068 Call float3.op_Implicit, X0
	069 Move X8, [X19]
	070 Move W9, 12
	071 NotImplemented "Instruction MADD not yet implemented."
	072 Move [X8], S0
	073 Move [X8+8], S1
	074 Move [X8+8], S2
	075 Add X0, X31, 704
	076 Move X1, X31
	077 Call TransformAccess.get_rotation, X0
	078 Move X0, X31
	079 Call quaternion.op_Implicit, X0
	080 Move X8, [X19+16]
	081 Move X0, [X21]
	082 Move V8, V0
	083 Move V9, V1
	084 Add X8, X8, X20
	085 Move W9, [X0+224]
	086 Move S14, [X8]
	087 Move S13, [X8+4]
	088 Move S12, [X8+8]
	089 Move S11, [X8+12]
	090 Move V10, V2
	091 Move V15, V3
	092 Compare W9, 0
	093 JumpIfNotEqual {95}
	094 Call 0x1C17DFC
	095 Move V0, V8
	096 Move V1, V9
	097 Move V2, V10
	098 Move V3, V15
	099 Move V4, V14
	100 Move V5, V13
	101 Move V6, V12
	102 Move V7, V11
	103 Call UpdateTransformsJob.DistanceBetweenQuaternions, X0, X1, X2
	104 Move V9, [X19+144]
	105 Move V8, V0
	106 NotImplemented "Instruction FCMP not yet implemented."
	107 Add X0, X31, 704
	108 Move X1, X31
	109 Call TransformAccess.get_rotation, X0
	110 Move X0, X31
	111 Call quaternion.op_Implicit, X0
	112 Move X8, [X19+16]
	113 Add X8, X8, X20
	114 Move [X8], S0
	115 Move [X8+8], S1
	116 Move [X8+8], S2
	117 Move [X8+16], S3
	118 Add X0, X31, 704
	119 Move X1, X31
	120 Call TransformAccess.get_localScale, X0
	121 Move X0, X31
	122 Call float3.op_Implicit, X0
	123 Move X8, [X19+32]
	124 Move W9, 12
	125 NotImplemented "Instruction MADD not yet implemented."
	126 Move S3, [X8]
	127 Move S4, [X8+4]
	128 Move V5, [X8+8]
	129 Subtract S0, S3, S0
	130 Move V3, [X19+144]
	131 Subtract S1, S4, S1
	132 Subtract S2, S5, S2
	133 Multiply S0, S0, S0
	134 Multiply S1, S1, S1
	135 Add S0, S0, S1
	136 Multiply S1, S2, S2
	137 Add S0, S1, S0
	138 NotImplemented "Instruction FCMP not yet implemented."
	139 Add X0, X31, 704
	140 Move X1, X31
	141 Call TransformAccess.get_localScale, X0
	142 Move X0, X31
	143 Call float3.op_Implicit, X0
	144 Move X8, [X19+32]
	145 Move W9, 12
	146 NotImplemented "Instruction MADD not yet implemented."
	147 Move [X8], S0
	148 Move [X8+8], S1
	149 Move [X8+8], S2
	150 Move V0, [X31+796]
	151 Move V1, [X31+792]
	152 NotImplemented "Instruction FCMP not yet implemented."
	153 NotImplemented "Instruction FCMP not yet implemented."
	154 Move X8, [X19+48]
	155 Move W8, [X8]
	156 Compare W8, 0
	157 JumpIfEqual {436}
	158 Move X8, [X19+64]
	159 Move W8, [X8]
	160 NotImplemented "Instruction CMP not yet implemented."
	161 Add X8, X31, 576
	162 Add X0, X31, 704
	163 Move X1, X31
	164 Call TransformAccess.get_localToWorldMatrix, X0
	165 Move V0, [X31+576]
	166 Move V1, [X31+592]
	167 Move V2, [X31+608]
	168 Move V3, [X31+624]
	169 Add X8, X31, 576
	170 Add X0, X31, 512
	171 Move X1, X31
	172 Move [X31+512], V0
	173 Move [X31+520], V1
	174 Move [X31+544], V2
	175 Move [X31+552], V3
	176 Call float4x4.op_Implicit, X0
	177 Move X0, [X21]
	178 Move V8, [X31+576]
	179 Move V9, [X31+584]
	180 Move V15, [X31+592]
	181 Move V14, [X31+600]
	182 Move V12, [X31+608]
	183 Move V10, [X31+616]
	184 Move W8, [X0+224]
	185 Move V13, [X31+624]
	186 Move V11, [X31+632]
	187 Compare W8, 0
	188 JumpIfNotEqual {191}
	189 Call 0x1C17DFC
	190 Move X0, [X21]
	191 Move X9, 0x6DD000
	192 Move X8, [X0+184]
	193 Move X9, [X9+2104]
	194 NotImplemented "Instruction MOVI not yet implemented."
	195 Add X0, X31, 576
	196 Move S0, [X8]
	197 Move S1, [X8+4]
	198 Move X9, [X9]
	199 Move S2, [X8+8]
	200 Move S3, [X8+12]
	201 Move X1, X31
	202 Move X9, [X9+184]
	203 Move S4, [X9]
	204 Move S5, [X9+4]
	205 Move V6, [X9+8]
	206 Move [X31+608], V7
	207 Move [X31+616], V7
	208 Move [X31+576], V7
	209 Move [X31+584], V7
	210 Call float4x4..ctor, X0, X1, X2
	211 Move V0, [X31+576]
	212 Move V1, [X31+592]
	213 Move V2, [X31+608]
	214 Move V3, [X31+624]
	215 Add X8, X31, 448
	216 Add X0, X31, 384
	217 Add X1, X31, 320
	218 Move X2, X31
	219 Move [X31+384], D8
	220 Move [X31+392], D9
	221 Move [X31+400], D15
	222 Move [X31+408], D14
	223 Move [X31+416], D12
	224 Move [X31+424], D10
	225 Move [X31+432], D13
	226 Move [X31+440], D11
	227 Move [X31+320], V0
	228 Move [X31+328], V1
	229 Move [X31+352], V2
	230 Move [X31+360], V3
	231 Call 0x3A53B9C
	232 Move V0, [X31+448]
	233 Move V1, [X31+452]
	234 Move V2, [X31+456]
	235 Move V20, [X31+460]
	236 Move V3, [X31+464]
	237 Move V4, [X31+468]
	238 Move V5, [X31+472]
	239 Move V19, [X31+476]
	240 Move V6, [X31+480]
	241 Move V7, [X31+484]
	242 Move V16, [X31+488]
	243 Move V17, [X31+492]
	244 Move V8, [X31+496]
	245 Move V9, [X31+500]
	246 Move V10, [X31+504]
	247 Move V18, [X31+508]
	248 Add X0, X31, 704
	249 Move X1, X31
	250 Call TransformAccess.get_rotation, X0
	251 Move X0, X31
	252 Call quaternion.op_Implicit, X0
	253 Move X0, [X21]
	254 Move V8, V0
	255 Move V10, V1
	256 Move V9, V2
	257 Move W8, [X0+224]
	258 Move V11, V3
	259 Compare W8, 0
	260 JumpIfNotEqual {263}
	261 Call 0x1C17DFC
	262 Move X0, [X21]
	263 Move X8, [X0+184]
	264 Move X9, [X19]
	265 NotImplemented "Instruction MOVI not yet implemented."
	266 Add X0, X31, 576
	267 Move S0, [X8]
	268 Move S1, [X8+4]
	269 Move S2, [X8+8]
	270 Move S3, [X8+12]
	271 Move W8, 12
	272 NotImplemented "Instruction MADD not yet implemented."
	273 Multiply S5, S11, S0
	274 Multiply S16, S11, S3
	275 Multiply S17, S8, S3
	276 Multiply S18, S10, S3
	277 Multiply S3, S9, S3
	278 Multiply S19, S8, S0
	279 Multiply S20, S10, S2
	280 Multiply S21, S9, S0
	281 Multiply S22, S8, S1
	282 Multiply S23, S10, S0
	283 Multiply S0, S10, S1
	284 Multiply S6, S11, S1
	285 Multiply S7, S11, S2
	286 Multiply S1, S9, S1
	287 Multiply S24, S8, S2
	288 Multiply S25, S9, S2
	289 Add S2, S20, S17
	290 Move S8, [X8]
	291 Move S9, [X8+4]
	292 Add S17, S21, S18
	293 Move V10, [X8+8]
	294 Add S3, S22, S3
	295 Add S0, S19, S0
	296 Add S2, S5, S2
	297 Add S5, S6, S17
	298 Add S3, S7, S3
	299 Subtract S6, S16, S0
	300 Subtract S0, S2, S1
	301 Subtract S1, S5, S24
	302 Subtract S2, S3, S23
	303 Subtract S3, S6, S25
	304 Move X1, X31
	305 Move [X31+608], W31
	306 Move [X31+576], V4
	307 Move [X31+584], V4
	308 Call float3x3..ctor, X0, X1
	309 Move V0, [X31+576]
	310 Move V1, [X31+580]
	311 Move V2, [X31+584]
	312 Move V3, [X31+588]
	313 Move V4, [X31+592]
	314 Move V5, [X31+596]
	315 Move V6, [X31+600]
	316 Move V7, [X31+604]
	317 Move V16, [X31+608]
	318 Move S17, W31
	319 Move S18, 1
	320 Move S19, W31
	321 Move S20, W31
	322 Move X8, [X19+112]
	323 Add X0, X31, 256
	324 Add X1, X31, 192
	325 Move X2, X31
	326 Add X8, X8, X20
	327 Move [X8], S0
	328 Move [X8+8], S1
	329 Move [X8+8], S2
	330 Move [X8+16], S20
	331 Move [X8+16], S6
	332 Move [X8+24], S7
	333 Move [X8+24], S16
	334 Move [X8+32], S17
	335 Move [X8+32], S3
	336 Move [X8+40], S4
	337 Move [X8+40], S5
	338 Move [X8+48], S19
	339 Move [X8+48], S8
	340 Move [X8+56], S9
	341 Move [X8+56], S10
	342 Move [X8+64], S18
	343 Move X8, [X19+80]
	344 Add X8, X8, X20
	345 Move V21, [X8]
	346 Move V22, [X8+16]
	347 Move V23, [X8+32]
	348 Move V24, [X8+48]
	349 Move [X31+256], S0
	350 Move [X31+260], S1
	351 Move [X31+576], V21
	352 Move [X31+584], V22
	353 Move [X31+608], V23
	354 Move [X31+616], V24
	355 Move [X31+264], S2
	356 Move [X31+272], S3
	357 Move V1, [X31+608]
	358 Move V0, [X31+624]
	359 Move V3, [X31+576]
	360 Move V2, [X31+592]
	361 Add X8, X31, 448
	362 Move [X31+268], S20
	363 Move [X31+276], S4
	364 Move [X31+280], S5
	365 Move [X31+284], S19
	366 Move [X31+288], S6
	367 Move [X31+292], S7
	368 Move [X31+296], S16
	369 Move [X31+300], S17
	370 Move [X31+304], S8
	371 Move [X31+308], S9
	372 Move [X31+312], S10
	373 Move [X31+316], S18
	374 Move [X31+224], V1
	375 Move [X31+232], V0
	376 Move [X31+192], V3
	377 Move [X31+200], V2
	378 Call 0x3A53B9C
	379 Move V1, [X31+480]
	380 Move V0, [X31+496]
	381 Move V3, [X31+448]
	382 Move V2, [X31+464]
	383 Add X0, X31, 64
	384 Move X1, X31
	385 Move [X31+672], V1
	386 Move [X31+680], V0
	387 Move [X31+640], V3
	388 Move [X31+648], V2
	389 Move X8, [X19+96]
	390 Add X8, X8, X20
	391 Move [X8+32], V1
	392 Move [X8+40], V0
	393 Move [X8], V3
	394 Move [X8+8], V2
	395 Move V0, [X31+640]
	396 Move V1, [X31+656]
	397 Move V2, [X31+672]
	398 Move V3, [X31+688]
	399 Add X8, X31, 128
	400 Move [X31+64], V0
	401 Move [X31+72], V1
	402 Move [X31+96], V2
	403 Move [X31+104], V3
	404 Call float4x4.op_Implicit, X0
	405 Move V0, [X31+128]
	406 Move V1, [X31+144]
	407 Move V2, [X31+160]
	408 Move V3, [X31+176]
	409 Move X0, [X21]
	410 Move [X31+448], V0
	411 Move [X31+456], V1
	412 Move [X31+480], V2
	413 Move [X31+488], V3
	414 Move W8, [X0+224]
	415 Compare W8, 0
	416 JumpIfNotEqual {418}
	417 Call 0x1C17DFC
	418 Move V0, [X31+448]
	419 Move V1, [X31+464]
	420 Move V2, [X31+480]
	421 Move V3, [X31+496]
	422 Add X1, X31, 0
	423 Move [X31], V0
	424 Move [X31+8], V1
	425 Move [X31+32], V2
	426 Move [X31+40], V3
	427 Call UpdateTransformsJob.GetDecalProjectBoundingSphere, X0, X1
	428 Move X8, [X19+128]
	429 Add X8, X8, X20
	430 Move [X8], S0
	431 Move [X8+8], S1
	432 Move [X8+8], S2
	433 Move [X8+16], S3
	434 Move X8, [X19+48]
	435 Move [X8], W31
	436 Add X31, X31, 720
	437 Move X20, [X31+96]
	438 Move X19, [X31+104]
	439 Move X30, [X31+80]
	440 Move X21, [X31+88]
	441 Move X29, [X31+64]
	442 Move D9, [X31+48]
	443 Move D8, [X31+56]
	444 Move D11, [X31+32]
	445 Move D10, [X31+40]
	446 Move D13, [X31+16]
	447 Move D12, [X31+24]
	448 Move D15, [X31+112]
	449 Move D14, [X31+120]
	450 Return 

Method: UnityEngine.BoundingSphere GetDecalProjectBoundingSphere(UnityEngine.Matrix4x4 decalToWorld)

Disassembly:
	0x03A423E0 LDR X0, [X23]
	0x03A423E4 MOVZ W1, 0x8
	0x03A423E8 BL 0x1C16D6C
	0x03A423EC STR X0, [X19 + 0x90]
	0x03A423F0 LDR X8, [X22]
	0x03A423F4 MOVZ W1, 0x8
	0x03A423F8 LDR X8, [X8 + 0xB8]
	0x03A423FC LDR X8, [X8]
	0x03A42400 STR X8, [X19 + 0x98]
	0x03A42404 LDR X0, [X24]
	0x03A42408 BL 0x1C16D6C
	0x03A4240C STR X0, [X19 + 0x18]
	0x03A42410 STR W31, [X19 + 0x20]
	0x03A42414 LDR X0, [X23]
	0x03A42418 MOVZ W1, 0x8
	0x03A4241C BL 0x1C16D6C
	0x03A42420 STR X0, [X19 + 0x28]
	0x03A42424 STRB W31, [X19 + 0x30]
	0x03A42428 LDR X8, [X22]
	0x03A4242C LDR X8, [X8 + 0xB8]
	0x03A42430 LDR X8, [X8]
	0x03A42434 STR X8, [X19 + 0x98]
	0x03A42438 CBZ X8, 0x3A42704
	0x03A4243C LDR X9, [X8 + 0x48]
	0x03A42440 LDUR V0, [X8 + 0x38]
	0x03A42444 LDUR V1, [X8 + 0x28]
	0x03A42448 ADRP X8, 0x712000
	0x03A4244C LDR X8, [X8 + 0xB18]
	0x03A42450 STR X9, [X19 + 0xC0]
	0x03A42454 STP V1, V0, [X19 + 0xA0]
	0x03A42458 MOVZ W1, 0x8
	0x03A4245C LDR X0, [X8]
	0x03A42460 BL 0x1C16D6C
	0x03A42464 LDR X8, [X22]
	0x03A42468 LDR X8, [X8 + 0xB8]
	0x03A4246C LDR X8, [X8]
	0x03A42470 CBZ X8, 0x3A42704
	0x03A42474 LDR X9, [X8 + 0x48]
	0x03A42478 LDUR V0, [X8 + 0x38]
	0x03A4247C LDUR V1, [X8 + 0x28]
	0x03A42480 MOV X20, X0
	0x03A42484 STR X9, [X31 + 0x1C0]
	0x03A42488 STP V1, V0, [X31 + 0x1A0]
	0x03A4248C CBZ X0, 0x3A42704
	0x03A42490 LDP V0, V1, [X31 + 0x1A0]
	0x03A42494 LDR X8, [X31 + 0x1C0]
	0x03A42498 STP V0, V1, [X31 + 0x170]
	0x03A4249C STR X8, [X31 + 0x190]
	0x03A424A0 LDR W8, [X20 + 0x18]
	0x03A424A4 CBZ W8, 0x3A42700
	0x03A424A8 LDR X8, [X31 + 0x190]
	0x03A424AC LDP V1, V0, [X31 + 0x170]
	0x03A424B0 MOV W0, W31
	0x03A424B4 MOV X1, X31
	0x03A424B8 STR X8, [X20 + 0x40]
	0x03A424BC ADD X8, X31, 0x148
	0x03A424C0 ADD X21, X31, 0x148
	0x03A424C4 STP V1, V0, [X20 + 0x20]
	0x03A424C8 BL 0x3C4B258
	0x03A424CC LDP V0, V1, [X21]
	0x03A424D0 LDR X8, [X31 + 0x168]
	0x03A424D4 STP V0, V1, [X31 + 0x120]
	0x03A424D8 STR X8, [X31 + 0x140]
	0x03A424DC LDR W8, [X20 + 0x18]
	0x03A424E0 CMP W8, 0x1
	0x03A424E4 B.LS 0x3A42700
	0x03A424E8 LDR X8, [X31 + 0x140]
	0x03A424EC LDP V1, V0, [X31 + 0x120]
	0x03A424F0 MOV W0, W31
	0x03A424F4 MOV X1, X31
	0x03A424F8 STR X8, [X20 + 0x68]
	0x03A424FC ADD X8, X31, 0x148
	0x03A42500 STUR V0, [X20 + 0x58]
	0x03A42504 STUR V1, [X20 + 0x48]
	0x03A42508 BL 0x3C4B258
	0x03A4250C LDP V0, V1, [X21]
	0x03A42510 LDR X8, [X31 + 0x168]
	0x03A42514 STP V0, V1, [X31 + 0xF0]
	0x03A42518 STR X8, [X31 + 0x110]
	0x03A4251C LDR W8, [X20 + 0x18]
	0x03A42520 CMP W8, 0x2
	0x03A42524 B.LS 0x3A42700
	0x03A42528 LDR X8, [X31 + 0x110]
	0x03A4252C LDP V1, V0, [X31 + 0xF0]
	0x03A42530 MOV W0, W31
	0x03A42534 MOV X1, X31
	0x03A42538 STR X8, [X20 + 0x90]
	0x03A4253C ADD X8, X31, 0x148
	0x03A42540 STP V1, V0, [X20 + 0x70]
	0x03A42544 BL 0x3C4B258
	0x03A42548 LDP V0, V1, [X21]
	0x03A4254C LDR X8, [X31 + 0x168]
	0x03A42550 STP V0, V1, [X31 + 0xC0]
	0x03A42554 STR X8, [X31 + 0xE0]
	0x03A42558 LDR W8, [X20 + 0x18]
	0x03A4255C CMP W8, 0x3
	0x03A42560 B.LS 0x3A42700
	0x03A42564 LDR X8, [X31 + 0xE0]
	0x03A42568 LDP V1, V0, [X31 + 0xC0]

ISIL:
	001 Subtract X31, X31, 272
	002 Move [X31+192], D13
	003 Move [X31+200], D12
	004 Move [X31+208], D11
	005 Move [X31+216], D10
	006 Move [X31+224], D9
	007 Move [X31+232], D8
	008 Move [X31+240], X29
	009 Move [X31+256], X30
	010 Move [X31+264], X19
	011 Move V1, [X1+32]
	012 Move V0, [X1+48]
	013 Move V3, [X1]
	014 Move V2, [X1+16]
	015 Move X19, X1
	016 Add X8, X31, 128
	017 Add X0, X31, 64
	018 Move X1, X31
	019 Move [X31+96], V1
	020 Move [X31+104], V0
	021 Move [X31+64], V3
	022 Move [X31+72], V2
	023 Call float4x4.op_Implicit, X0
	024 Move D0, [X31+128]
	025 Move D1, [X31+136]
	026 Move D2, [X31+144]
	027 Move D3, [X31+152]
	028 Move D4, [X31+160]
	029 Move D5, [X31+168]
	030 NotImplemented "Instruction MOVI not yet implemented."
	031 NotImplemented "Instruction MOVI not yet implemented."
	032 NotImplemented "Instruction INVALID not yet implemented."
	033 NotImplemented "Instruction INVALID not yet implemented."
	034 NotImplemented "Instruction INVALID not yet implemented."
	035 NotImplemented "Instruction INVALID not yet implemented."
	036 Move V7, [X19+32]
	037 Move V16, [X19+48]
	038 Move V6, [X19]
	039 Move V17, [X19+16]
	040 Subtract V0, V0, V2
	041 Subtract V1, V1, V3
	042 Move D2, [X31+176]
	043 Move D3, [X31+184]
	044 NotImplemented "Instruction INVALID not yet implemented."
	045 NotImplemented "Instruction INVALID not yet implemented."
	046 Subtract V0, V0, V4
	047 Subtract V1, V1, V5
	048 Add X8, X31, 128
	049 Add X0, X31, 0
	050 Move X1, X31
	051 Move [X31+32], V7
	052 Move [X31+40], V16
	053 Add V8, V0, V2
	054 Add V9, V1, V3
	055 Move [X31], V6
	056 Move [X31+8], V17
	057 Call float4x4.op_Implicit, X0
	058 Move D0, [X31+128]
	059 Move D1, [X31+136]
	060 Move D2, [X31+144]
	061 Move D3, [X31+152]
	062 Move D4, [X31+160]
	063 Move D5, [X31+168]
	064 Move D6, [X31+176]
	065 Move D7, [X31+184]
	066 Move X19, 0x9A0000
	067 Move W8, [X19+1413]
	068 NotImplemented "Instruction INVALID not yet implemented."
	069 NotImplemented "Instruction INVALID not yet implemented."
	070 NotImplemented "Instruction INVALID not yet implemented."
	071 NotImplemented "Instruction INVALID not yet implemented."
	072 NotImplemented "Instruction INVALID not yet implemented."
	073 NotImplemented "Instruction INVALID not yet implemented."
	074 Add V0, V0, V2
	075 Add V1, V1, V3
	076 Add V0, V0, V4
	077 Add V1, V1, V5
	078 Add V10, V0, V6
	079 Add V11, V1, V7
	080 Compare W8, 0
	081 JumpIfNotEqual {87}
	082 Move X0, 0x6B2000
	083 Move X0, [X0+1448]
	084 Call 0x1C17CF4
	085 Move W8, 1
	086 Move [X19+1413], W8
	087 Move X8, 0x6B2000
	088 Move X8, [X8+1448]
	089 Subtract V12, V10, V8
	090 Subtract V13, V11, V9
	091 Move X0, [X8]
	092 Move W8, [X0+224]
	093 Compare W8, 0
	094 JumpIfNotEqual {96}
	095 Call 0x1C17DFC
	096 Add V0, V9, V11
	097 Move S1, 0.5
	098 Add V3, V8, V10
	099 NotImplemented "Instruction MOVI not yet implemented."
	100 NotImplemented "Instruction INVALID not yet implemented."
	101 Multiply S2, S1, V0.S[0]
	102 NotImplemented "Instruction INVALID not yet implemented."
	103 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	104 NotImplemented "Instruction INVALID not yet implemented."
	105 Add V3, V6, V3
	106 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	107 Add V3, V5, V3
	108 Add V3, V4, V3
	109 NotImplemented "Instruction FSQRT not yet implemented."
	110 Multiply S8, S3, S1
	111 Move S1, V0.S[1]
	112 Move X0, X31
	113 Call float3.op_Implicit, X0
	114 Move V3, V8
	115 Move X30, [X31+256]
	116 Move X19, [X31+264]
	117 Move X29, [X31+240]
	118 Move D9, [X31+224]
	119 Move D8, [X31+232]
	120 Move D11, [X31+208]
	121 Move D10, [X31+216]
	122 Move D13, [X31+192]
	123 Move D12, [X31+200]
	124 Add X31, X31, 272
	125 Return X0

Method: System.Void .cctor()

Disassembly:
	0x03A4256C MOV W0, W31
	0x03A42570 MOV X1, X31
	0x03A42574 STR X8, [X20 + 0xB8]
	0x03A42578 ADD X8, X31, 0x148
	0x03A4257C STUR V0, [X20 + 0xA8]
	0x03A42580 STUR V1, [X20 + 0x98]
	0x03A42584 BL 0x3C4B258
	0x03A42588 LDP V0, V1, [X21]
	0x03A4258C LDR X8, [X31 + 0x168]
	0x03A42590 STP V0, V1, [X31 + 0x90]
	0x03A42594 STR X8, [X31 + 0xB0]
	0x03A42598 LDR W8, [X20 + 0x18]
	0x03A4259C CMP W8, 0x4
	0x03A425A0 B.LS 0x3A42700
	0x03A425A4 LDR X8, [X31 + 0xB0]
	0x03A425A8 LDP V1, V0, [X31 + 0x90]
	0x03A425AC MOV W0, W31
	0x03A425B0 MOV X1, X31
	0x03A425B4 STR X8, [X20 + 0xE0]
	0x03A425B8 ADD X8, X31, 0x148
	0x03A425BC STP V1, V0, [X20 + 0xC0]
	0x03A425C0 BL 0x3C4B258
	0x03A425C4 LDP V0, V1, [X21]
	0x03A425C8 LDR X8, [X31 + 0x168]
	0x03A425CC STP V0, V1, [X31 + 0x60]
	0x03A425D0 STR X8, [X31 + 0x80]
	0x03A425D4 LDR W8, [X20 + 0x18]
	0x03A425D8 CMP W8, 0x5
	0x03A425DC B.LS 0x3A42700
	0x03A425E0 LDR X8, [X31 + 0x80]
	0x03A425E4 LDP V1, V0, [X31 + 0x60]
	0x03A425E8 MOV W0, W31
	0x03A425EC MOV X1, X31
	0x03A425F0 STR X8, [X20 + 0x108]
	0x03A425F4 ADD X8, X31, 0x148
	0x03A425F8 STUR V0, [X20 + 0xF8]
	0x03A425FC STUR V1, [X20 + 0xE8]
	0x03A42600 BL 0x3C4B258
	0x03A42604 LDP V0, V1, [X21]
	0x03A42608 LDR X8, [X31 + 0x168]
	0x03A4260C STP V0, V1, [X31 + 0x30]
	0x03A42610 STR X8, [X31 + 0x50]
	0x03A42614 LDR W8, [X20 + 0x18]
	0x03A42618 CMP W8, 0x6
	0x03A4261C B.LS 0x3A42700
	0x03A42620 LDR X8, [X31 + 0x50]
	0x03A42624 LDP V1, V0, [X31 + 0x30]
	0x03A42628 MOV W0, W31
	0x03A4262C MOV X1, X31
	0x03A42630 STR X8, [X20 + 0x130]
	0x03A42634 ADD X8, X31, 0x148
	0x03A42638 STP V1, V0, [X20 + 0x110]
	0x03A4263C BL 0x3C4B258
	0x03A42640 LDP V0, V1, [X21]
	0x03A42644 LDR X8, [X31 + 0x168]
	0x03A42648 STP V0, V1, [X31]
	0x03A4264C STR X8, [X31 + 0x20]
	0x03A42650 LDR W8, [X20 + 0x18]
	0x03A42654 CMP W8, 0x7
	0x03A42658 B.LS 0x3A42700
	0x03A4265C ADRP X8, 0x70E000
	0x03A42660 LDR X8, [X8 + 0x598]
	0x03A42664 LDR X10, [X31 + 0x20]
	0x03A42668 LDP V0, V1, [X31]
	0x03A4266C ADD X9, X20, 0x138
	0x03A42670 ADD X11, X20, 0x148
	0x03A42674 MOVZ W12, 0x3F800000
	0x03A42678 STR X10, [X20 + 0x158]
	0x03A4267C STR V1, [X11]
	0x03A42680 STR V0, [X9]
	0x03A42684 STR X20, [X19 + 0x80]
	0x03A42688 STUR X31, [X19 + 0xD4]
	0x03A4268C STUR X31, [X19 + 0xCC]
	0x03A42690 STR W12, [X19 + 0xDC]
	0x03A42694 STRH W31, [X19 + 0x40]
	0x03A42698 LDR X0, [X8]
	0x03A4269C ADRP X20, 0x713000
	0x03A426A0 ADRP X21, 0x712000
	0x03A426A4 LDR X20, [X20 + 0xBF8]
	0x03A426A8 LDR X21, [X21 + 0xC80]
	0x03A426AC BL 0x1C16F10
	0x03A426B0 LDR X1, [X20]
	0x03A426B4 MOV X2, X31
	0x03A426B8 MOV X20, X0
	0x03A426BC BL 0x39B19AC
	0x03A426C0 MOVZ W8, 0x1
	0x03A426C4 MOVN W9, 0x0
	0x03A426C8 STR X20, [X19 + 0x38]
	0x03A426CC STRB W8, [X19 + 0x42]
	0x03A426D0 STR W9, [X19 + 0x44]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x9A1000
	005 Move W8, [X19+353]
	006 Move TEMP, X8
	007 And TEMP, TEMP, 1
	008 Compare TEMP, 1
	009 JumpIfEqual {15}
	010 Move X0, 0x6DC000
	011 Move X0, [X0+2000]
	012 Call 0x1C17CF4
	013 Move W8, 1
	014 Move [X19+353], W8
	015 Move X20, 0x9A0000
	016 Move W8, [X20+1386]
	017 Compare W8, 0
	018 JumpIfNotEqual {24}
	019 Move X0, 0x6B2000
	020 Move X0, [X0+1448]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X20+1386], W8
	024 Move X19, 0x6B2000
	025 Move X19, [X19+1448]
	026 Move X0, [X19]
	027 Move W8, [X0+224]
	028 Compare W8, 0
	029 JumpIfNotEqual {39}
	030 Call 0x1C17DFC
	031 Move W8, [X20+1386]
	032 Compare W8, 0
	033 JumpIfNotEqual {39}
	034 Move X0, 0x6B2000
	035 Move X0, [X0+1448]
	036 Call 0x1C17CF4
	037 Move W8, 1
	038 Move [X20+1386], W8
	039 Move X0, [X19]
	040 Move W8, [X0+224]
	041 Compare W8, 0
	042 JumpIfNotEqual {52}
	043 Call 0x1C17DFC
	044 Move W8, [X20+1386]
	045 Compare W8, 0
	046 JumpIfNotEqual {52}
	047 Move X0, 0x6B2000
	048 Move X0, [X0+1448]
	049 Call 0x1C17CF4
	050 Move W8, 1
	051 Move [X20+1386], W8
	052 Move X0, [X19]
	053 Move W8, [X0+224]
	054 Compare W8, 0
	055 JumpIfNotEqual {57}
	056 Call 0x1C17DFC
	057 Move X20, 0x9A0000
	058 Move W8, [X20+1380]
	059 Compare W8, 0
	060 JumpIfNotEqual {66}
	061 Move X0, 0x6B2000
	062 Move X0, [X0+1448]
	063 Call 0x1C17CF4
	064 Move W8, 1
	065 Move [X20+1380], W8
	066 Move X0, [X19]
	067 Move W8, [X0+224]
	068 Compare W8, 0
	069 JumpIfNotEqual {79}
	070 Call 0x1C17DFC
	071 Move W8, [X20+1380]
	072 Compare W8, 0
	073 JumpIfNotEqual {79}
	074 Move X0, 0x6B2000
	075 Move X0, [X0+1448]
	076 Call 0x1C17CF4
	077 Move W8, 1
	078 Move [X20+1380], W8
	079 Move X0, [X19]
	080 Move W8, [X0+224]
	081 Compare W8, 0
	082 JumpIfNotEqual {92}
	083 Call 0x1C17DFC
	084 Move W8, [X20+1380]
	085 Compare W8, 0
	086 JumpIfNotEqual {92}
	087 Move X0, 0x6B2000
	088 Move X0, [X0+1448]
	089 Call 0x1C17CF4
	090 Move W8, 1
	091 Move [X20+1380], W8
	092 Move X0, [X19]
	093 Move X19, 0x6DC000
	094 Move W8, [X0+224]
	095 Move X19, [X19+2000]
	096 Compare W8, 0
	097 JumpIfNotEqual {99}
	098 Call 0x1C17DFC
	099 Move X8, [X19]
	100 Move X9, -49627136
	101 Move V0, [X9+56]
	102 Move X20, [X31+16]
	103 Move X19, [X31+24]
	104 Move X8, [X8+184]
	105 Move [X8], V0
	106 Move X30, [X31+32]
	107 Return 

