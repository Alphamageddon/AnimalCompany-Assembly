Type: UnityEngine.Rendering.Universal.PinnedArray`1

Method: System.Int32 get_length()

Disassembly:
	0x024A3B70 MOV X0, X21
	0x024A3B74 MOV X1, X31
	0x024A3B78 LDR X8, [X8]
	0x024A3B7C STR X8, [X22 + 0x30]
	0x024A3B80 BL 0x3C63270
	0x024A3B84 LDR X8, [X23]

ISIL:
	001 Move X8, [X0]
	002 Compare X8, 0
	003 JumpIfEqual {6}
	004 Move W0, [X8+24]
	005 Return X0
	006 Move W0, W31
	007 Return X0

Method: System.Void .ctor(System.Int32 length)

Disassembly:
	0x024A3B88 MOVN X9, 0x0
	0x024A3B8C STR W0, [X31 + 0x10]
	0x024A3B90 ADD X0, X31, 0x0
	0x024A3B94 MOV X1, X31
	0x024A3B98 STP X8, X9, [X31]
	0x024A3B9C BL 0x33B162C
	0x024A3BA0 LDR W8, [X22 + 0x18]
	0x024A3BA4 CMP W8, 0x3
	0x024A3BA8 B.LS 0x24A4150
	0x024A3BAC CMP W8, 0x4
	0x024A3BB0 STR X0, [X22 + 0x38]
	0x024A3BB4 B.EQ 0x24A4150
	0x024A3BB8 ADRP X8, 0x1C51000
	0x024A3BBC LDR X8, [X8 + 0x608]
	0x024A3BC0 MOV X0, X22
	0x024A3BC4 MOV X1, X31
	0x024A3BC8 LDR X8, [X8]
	0x024A3BCC STR X8, [X22 + 0x40]
	0x024A3BD0 BL 0x32278CC
	0x024A3BD4 ADRP X8, 0x1C50000
	0x024A3BD8 LDR X8, [X8 + 0xA28]
	0x024A3BDC MOV X22, X0
	0x024A3BE0 LDR X8, [X8]
	0x024A3BE4 LDR W9, [X8 + 0xE0]
	0x024A3BE8 CBNZ W9, 0x24A3BF4
	0x024A3BEC MOV X0, X8
	0x024A3BF0 BL 0x1C16DFC
	0x024A3BF4 MOV W0, W31
	0x024A3BF8 MOV X1, X22
	0x024A3BFC MOV X2, X31
	0x024A3C00 BL 0x3C06F88
	0x024A3C04 B 0x24A38FC
	0x024A3C08 MOV X2, X31
	0x024A3C0C BL 0x3DA5E70
	0x024A3C10 MOV X0, X21
	0x024A3C14 MOV X1, X31
	0x024A3C18 BL 0x3C63078
	0x024A3C1C LDR X8, [X19]
	0x024A3C20 MOV W23, W0
	0x024A3C24 LDRB W9, [X8 + 0x135]
	0x024A3C28 TBNZ X9, 0x0, 0x24A3C34
	0x024A3C2C MOV X0, X8
	0x024A3C30 BL 0x1C5C684
	0x024A3C34 LDR X0, [X24]
	0x024A3C38 LDR W22, [X20 + 0x9C]
	0x024A3C3C LDR W8, [X0 + 0xE0]
	0x024A3C40 CBNZ W8, 0x24A3C48
	0x024A3C44 BL 0x1C16DFC
	0x024A3C48 MOVZ W1, 0x5
	0x024A3C4C MOV W0, W22
	0x024A3C50 CMP W23, 0x8
	0x024A3C54 B.NE 0x24A3C64
	0x024A3C58 MOV X2, X31
	0x024A3C5C BL 0x3DA5914
	0x024A3C60 B 0x24A3C6C
	0x024A3C64 MOV X2, X31
	0x024A3C68 BL 0x3DA5E70
	0x024A3C6C LDR X0, [X19]
	0x024A3C70 LDRB W8, [X0 + 0x135]
	0x024A3C74 TBNZ X8, 0x0, 0x24A3C80

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X2+32]
	007 Move X21, X2
	008 Move W20, W1
	009 Move X19, X0
	010 Move W9, [X8+309]
	011 Move TEMP, X9
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {18}
	015 Move X0, X8
	016 Call 0x1C5D684
	017 Move X8, X0
	018 Move X8, [X8+192]
	019 Move X0, [X8+16]
	020 Move W8, [X0+309]
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {26}
	025 Call 0x1C5D684
	026 Move W1, W20
	027 Call 0x1C17D6C
	028 Move W1, 3
	029 Move X2, X31
	030 Move [X19], X0
	031 Call GCHandle.Alloc, X0, X1
	032 Move X8, X19
	033 Move [X8+8], X0
	034 Move X0, X8
	035 Move X1, X31
	036 Call GCHandle.AddrOfPinnedObject, X0
	037 Move X1, X31
	038 Call IntPtr.op_Explicit, X0
	039 Move X8, [X21+32]
	040 Move X22, X0
	041 Add X9, X8, 309
	042 NotImplemented "Instruction LDRH not yet implemented."
	043 Move TEMP, X9
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfEqual {52}
	047 Move X0, X8
	048 Call 0x1C5D684
	049 Move X8, [X21+32]
	050 Add X9, X8, 309
	051 NotImplemented "Instruction LDRH not yet implemented."
	052 Move X0, X8
	053 Move X10, [X0+192]
	054 Move X10, [X10+24]
	055 Move X21, [X10]
	056 Move TEMP, X9
	057 And TEMP, TEMP, 1
	058 Compare TEMP, 1
	059 JumpIfEqual {63}
	060 Move X0, X8
	061 Call 0x1C5D684
	062 Move X8, X0
	063 Move X8, [X8+192]
	064 Move W2, 1
	065 Move X0, X22
	066 Move W1, W20
	067 Move X3, [X8+24]
	068 NotImplemented "Instruction BLR not yet implemented."
	069 Move [X19+16], X0
	070 Move [X19+24], X1
	071 Move X20, [X31+32]
	072 Move X19, [X31+40]
	073 Move X22, [X31+16]
	074 Move X21, [X31+24]
	075 Move X30, [X31+48]
	076 Return 

Method: System.Void Dispose()

Disassembly:
	0x024A3C78 BL 0x1C5C684
	0x024A3C7C LDR X0, [X19]
	0x024A3C80 MOVZ W22, 0x1
	0x024A3C84 STRB W22, [X20 + 0xA8]
	0x024A3C88 LDRB W8, [X0 + 0x135]
	0x024A3C8C TBNZ X8, 0x0, 0x24A3C98
	0x024A3C90 BL 0x1C5C684
	0x024A3C94 LDR X0, [X19]
	0x024A3C98 STRB W22, [X20 + 0x84]
	0x024A3C9C STR W31, [X20 + 0x88]
	0x024A3CA0 LDRB W8, [X0 + 0x135]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0]
	004 Compare X8, 0
	005 JumpIfEqual {13}
	006 Move X19, X0
	007 Add X0, X0, 8
	008 Move X1, X31
	009 Call GCHandle.Free, X0
	010 NotImplemented "Instruction MOVI not yet implemented."
	011 Move [X19], V0
	012 Move [X19+8], V0
	013 Move X30, [X31+16]
	014 Move X19, [X31+24]
	015 Return 

