Type: UnityEngine.Rendering.Universal.UTess.Smoothen

Method: System.Void RefineEdges(ref Unity.Collections.NativeArray`1<Unity.Mathematics.int4> refinedEdges, ref Unity.Collections.NativeArray`1<Unity.Mathematics.int4> delaEdges, ref System.Int32 delaEdgeCount, ref Unity.Collections.NativeArray`1<Unity.Mathematics.int4> voronoiEdges)

Disassembly:
	0x03AB93FC LDR X9, [X22 + 0x20]
	0x03AB9400 ADD W10, W27, 0x1
	0x03AB9404 CMP W10, 0x3
	0x03AB9408 ADD W10, W8, 0x1
	0x03AB940C MADD X8, X8, X29, X9
	0x03AB9410 STR W10, [X22 + 0x30]
	0x03AB9414 STP W26, W0, [X8]
	0x03AB9418 MOV W26, W27
	0x03AB941C STR W19, [X8 + 0x8]
	0x03AB9420 B.GE 0x3AB9360
	0x03AB9424 MOVZ W26, 0x1
	0x03AB9428 LDR W8, [X31 + 0x6C]
	0x03AB942C ADD W9, W26, 0x1
	0x03AB9430 STR W9, [X31 + 0x70]
	0x03AB9434 CMP W9, W8
	0x03AB9438 B.GT 0x3AB9484
	0x03AB943C ADRP X8, 0x69F000
	0x03AB9440 LDR X8, [X8 + 0x260]
	0x03AB9444 MOV X0, X24
	0x03AB9448 MOV W1, W26
	0x03AB944C MOV W2, W19
	0x03AB9450 LDR X3, [X8]
	0x03AB9454 BL 0x2B8C500
	0x03AB9458 LDR X0, [X31 + 0x20]
	0x03AB945C ADD X1, X31, 0x30
	0x03AB9460 MOVZ W2, 0x48
	0x03AB9464 BL 0x3EB1B30
	0x03AB9468 LDR X9, [X31 + 0x28]
	0x03AB946C LDR X8, [X31 + 0x10]
	0x03AB9470 ADD X9, X9, 0x1
	0x03AB9474 CMP X9, X8
	0x03AB9478 B.NE 0x3AB9234
	0x03AB947C MOVZ W0, 0x1
	0x03AB9480 B 0x3AB9488
	0x03AB9484 MOV W0, W31
	0x03AB9488 LDP X20, X19, [X31 + 0x100]
	0x03AB948C LDP X22, X21, [X31 + 0xF0]
	0x03AB9490 LDP X24, X23, [X31 + 0xE0]
	0x03AB9494 LDP X26, X25, [X31 + 0xD0]
	0x03AB9498 LDP X28, X27, [X31 + 0xC0]
	0x03AB949C LDP X29, X30, [X31 + 0xB0]
	0x03AB94A0 LDP D9, D8, [X31 + 0xA0]
	0x03AB94A4 LDP D11, D10, [X31 + 0x90]
	0x03AB94A8 LDP D13, D12, [X31 + 0x80]
	0x03AB94AC ADD X31, X31, 0x110
	0x03AB94B0 RET
	0x03AB94B4 STR X30, [X31 - 0x40]!
	0x03AB94B8 STP X24, X23, [X31 + 0x10]
	0x03AB94BC STP X22, X21, [X31 + 0x20]
	0x03AB94C0 STP X20, X19, [X31 + 0x30]
	0x03AB94C4 LDRSW X23, [X3]
	0x03AB94C8 SUB W8, W1, 0x1
	0x03AB94CC CMP W23, W8
	0x03AB94D0 B.GE 0x3AB953C
	0x03AB94D4 MOV X20, X4
	0x03AB94D8 MOV X19, X3
	0x03AB94DC MOV X21, X0
	0x03AB94E0 CMP W23, W2
	0x03AB94E4 B.LE 0x3AB9518
	0x03AB94E8 MOVZ W8, 0x48
	0x03AB94EC SXTW X24, W2
	0x03AB94F0 MADD X0, X23, X8, X21
	0x03AB94F4 SUB X22, X0, 0x48
	0x03AB94F8 MOVZ W2, 0x48
	0x03AB94FC MOV X1, X22
	0x03AB9500 SUB X23, X23, 0x1
	0x03AB9504 BL 0x3EB1AC0
	0x03AB9508 CMP X23, X24
	0x03AB950C MOV X0, X22
	0x03AB9510 B.GT 0x3AB94F4
	0x03AB9514 B 0x3AB951C
	0x03AB9518 SXTW X24, W2
	0x03AB951C MOVZ W8, 0x48
	0x03AB9520 MADD X0, X24, X8, X21
	0x03AB9524 MOVZ W2, 0x48
	0x03AB9528 MOV X1, X20
	0x03AB952C BL 0x3EB1B30
	0x03AB9530 LDR W8, [X19]
	0x03AB9534 ADD W8, W8, 0x1
	0x03AB9538 STR W8, [X19]
	0x03AB953C LDP X20, X19, [X31 + 0x30]
	0x03AB9540 LDP X22, X21, [X31 + 0x20]
	0x03AB9544 LDP X24, X23, [X31 + 0x10]
	0x03AB9548 LDR X30, [X31], #0x40
	0x03AB954C RET
	0x03AB9550 STP X30, X21, [X31 - 0x20]!
	0x03AB9554 STP X20, X19, [X31 + 0x10]
	0x03AB9558 LDR W8, [X3]
	0x03AB955C CMP W8, W1
	0x03AB9560 B.GE 0x3AB95AC
	0x03AB9564 SUB W8, W8, 0x1
	0x03AB9568 MOV X19, X3
	0x03AB956C CMP W8, W2
	0x03AB9570 B.LE 0x3AB95A8
	0x03AB9574 MOVZ W8, 0x48

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0x92A000
	009 Move W8, [X23+1164]
	010 Move X21, X3
	011 Move X22, X2
	012 Move X19, X1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0x6A0000
	019 Move X0, [X0+552]
	020 Call 0x1C17CF4
	021 Move X0, 0x664000
	022 Move X0, [X0+216]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X23+1164], W8
	026 Move W9, [X22]
	027 Move X8, 0x664000
	028 Move X8, [X8+216]
	029 Move W23, W31
	030 Subtract W9, W9, 1
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Move [X22], W31
	033 Move W10, W31
	034 Move X11, [X19]
	035 Move X12, W10
	036 Add X12, X12, 1
	037 Add X13, X11, W10
	038 Add X11, X11, X12
	039 Move W14, [X13]
	040 NotImplemented "Instruction LDUR not yet implemented."
	041 Move W15, [X11+8]
	042 Move W16, [X11+12]
	043 Add X13, X13, 12
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Move W15, S0
	046 NotImplemented "Instruction CSET not yet implemented."
	047 NotImplemented "Instruction CMP not yet implemented."
	048 NotImplemented "Instruction CSET not yet implemented."
	049 And W31, W17, W16
	050 Add W15, W23, 1
	051 NotImplemented "Instruction CSEL not yet implemented."
	052 Move W11, [X11]
	053 Move [X22], W15
	054 Move X13, [X20]
	055 NotImplemented "Instruction CSEL not yet implemented."
	056 Add W10, W10, 1
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Add X12, X13, W23
	059 Move [X12], W14
	060 Move [X12+4], D0
	061 Move [X12+12], W11
	062 Move W23, [X22]
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Move X9, X31
	065 Move X10, X31
	066 Move X11, [X20]
	067 Add X12, X11, X9
	068 Move W11, [X12+8]
	069 Move W12, [X12+12]
	070 Add W31, W11, 1
	071 NotImplemented "Instruction CCMN not yet implemented."
	072 Move X13, [X21]
	073 Add X13, X13, X9
	074 Move [X13], W12
	075 Move [X13+4], W11
	076 Move [X13+8], W10
	077 Move [X13+12], W31
	078 Move W23, [X22]
	079 Add X10, X10, 1
	080 NotImplemented "Instruction CMP not yet implemented."
	081 Add X9, X9, 16
	082 Move X0, [X8]
	083 Move X24, 0x6A0000
	084 Move X22, [X20]
	085 Move X20, [X20+8]
	086 Move X21, [X19]
	087 Move X19, [X19+8]
	088 Move W8, [X0+224]
	089 Move X24, [X24+552]
	090 Compare W8, 0
	091 JumpIfNotEqual {93}
	092 Call 0x1C17DFC
	093 Move X5, [X24]
	094 Move X0, X22
	095 Move X1, X20
	096 Move X2, X21
	097 Move X3, X19
	098 Move W4, W23
	099 Move X20, [X31+48]
	100 Move X19, [X31+56]
	101 Move X22, [X31+32]
	102 Move X21, [X31+40]
	103 Move X24, [X31+16]
	104 Move X23, [X31+24]
	105 Move X30, [X31+64]
	106 Call ModuleHandle.Copy, X0, X1, X2
	107 Return 

Method: System.Void GetAffectingEdges(System.Int32 pointIndex, Unity.Collections.NativeArray`1<Unity.Mathematics.int4> edges, System.Int32 edgeCount, ref Unity.Collections.NativeArray`1<System.Int32> resultSet, ref Unity.Collections.NativeArray`1<System.Int32> checkSet, ref System.Int32 resultCount)

Disassembly:
	0x03AB9578 SXTW X21, W2
	0x03AB957C SMADDL X0, X2, X8, X0
	0x03AB9580 ADD X20, X0, 0x48
	0x03AB9584 MOVZ W2, 0x48
	0x03AB9588 MOV X1, X20
	0x03AB958C ADD X21, X21, 0x1
	0x03AB9590 BL 0x3EB1AC0
	0x03AB9594 LDR W8, [X19]
	0x03AB9598 MOV X0, X20
	0x03AB959C SUB W8, W8, 0x1
	0x03AB95A0 CMP X21, W8, SXTW
	0x03AB95A4 B.LT 0x3AB9580
	0x03AB95A8 STR W8, [X19]
	0x03AB95AC LDP X20, X19, [X31 + 0x10]
	0x03AB95B0 LDP X30, X21, [X31], #0x20
	0x03AB95B4 RET
	0x03AB95B8 SUB X31, X31, 0x1A0
	0x03AB95BC STP X29, X30, [X31 + 0x140]
	0x03AB95C0 STP X28, X27, [X31 + 0x150]
	0x03AB95C4 STP X26, X25, [X31 + 0x160]
	0x03AB95C8 STP X24, X23, [X31 + 0x170]
	0x03AB95CC STP X22, X21, [X31 + 0x180]
	0x03AB95D0 STP X20, X19, [X31 + 0x190]
	0x03AB95D4 ADRP X20, 0x929000

ISIL:
	001 NotImplemented "Instruction CMP not yet implemented."
	002 Move [X6], W31
	003 Move X9, [X5]
	004 Move X8, X31
	005 Move W10, W3
	006 Add X11, X1, 4
	007 NotImplemented "Instruction LDUR not yet implemented."
	008 NotImplemented "Instruction CMP not yet implemented."
	009 Move W12, [X11]
	010 NotImplemented "Instruction CMP not yet implemented."
	011 NotImplemented "Instruction LDRSW not yet implemented."
	012 Add W13, W12, 1
	013 Move [X6], W13
	014 Move X13, [X4]
	015 Move [X13], W8
	016 Move [X9], W31
	017 Add X8, X8, 1
	018 NotImplemented "Instruction CMP not yet implemented."
	019 Add X11, X11, 16
	020 Return 

Method: System.Void CentroidByPoints(System.Int32 triIndex, Unity.Collections.NativeArray`1<UnityEngine.Rendering.Universal.UTess.UTriangle> triangles, ref Unity.Collections.NativeArray`1<System.Int32> centroidTris, ref System.Int32 centroidCount, ref Unity.Mathematics.float2 aggregate, ref Unity.Mathematics.float2 point)

Disassembly:
	0x03AB95D8 ADRP X19, 0x663000
	0x03AB95DC LDRB W8, [X20 + 0x491]
	0x03AB95E0 LDR X19, [X19 + 0xD8]
	0x03AB95E4 MOV X24, X6
	0x03AB95E8 MOV X25, X3
	0x03AB95EC MOV X26, X2
	0x03AB95F0 MOV X21, X1
	0x03AB95F4 MOV X22, X0
	0x03AB95F8 ADD X29, X31, 0x80
	0x03AB95FC TBNZ X8, 0x0, 0x3AB9644
	0x03AB9600 ADRP X0, 0x69F000
	0x03AB9604 LDR X0, [X0 + 0x278]
	0x03AB9608 BL 0x1C16CF4
	0x03AB960C ADRP X0, 0x69F000
	0x03AB9610 LDR X0, [X0 + 0x250]
	0x03AB9614 BL 0x1C16CF4
	0x03AB9618 ADRP X0, 0x69F000
	0x03AB961C LDR X0, [X0 + 0x260]
	0x03AB9620 BL 0x1C16CF4
	0x03AB9624 ADRP X0, 0x69F000
	0x03AB9628 LDR X0, [X0 + 0x280]
	0x03AB962C BL 0x1C16CF4
	0x03AB9630 ADRP X0, 0x663000
	0x03AB9634 LDR X0, [X0 + 0xD8]
	0x03AB9638 BL 0x1C16CF4
	0x03AB963C MOVZ W8, 0x1
	0x03AB9640 STRB W8, [X20 + 0x491]

ISIL:
	001 NotImplemented "Instruction LDRSW not yet implemented."
	002 Move X9, [X3]
	003 NotImplemented "Instruction CMP not yet implemented."
	004 Move X10, X31
	005 Move W11, [X9]
	006 NotImplemented "Instruction CMP not yet implemented."
	007 Add X10, X10, 1
	008 NotImplemented "Instruction CMP not yet implemented."
	009 Add W10, W8, 1
	010 Move W11, 52
	011 Move [X4], W10
	012 Move [X9], W0
	013 NotImplemented "Instruction NOP not yet implemented."
	014 NotImplemented "Instruction SMADDL not yet implemented."
	015 Move V0, [X5]
	016 Move V1, [X8+24]
	017 Add V0, V0, V1
	018 Move [X5], D0
	019 Move V1, [X4]
	020 NotImplemented "Instruction SCVTF not yet implemented."
	021 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	022 NotImplemented "Instruction INVALID not yet implemented."
	023 Move [X6], D0
	024 Return 

Method: System.Void CentroidByPolygon(Unity.Mathematics.int4 e, Unity.Collections.NativeArray`1<UnityEngine.Rendering.Universal.UTess.UTriangle> triangles, ref Unity.Mathematics.float2 centroid, ref System.Single area, ref System.Single distance)

Disassembly:
	0x03AB9644 MOVI V0.2D, 0x0
	0x03AB9648 STR X31, [X31 + 0x110]
	0x03AB964C STR X31, [X31 + 0xC0]
	0x03AB9650 STP V0, V0, [X29 + 0x70]
	0x03AB9654 STP V0, V0, [X29 + 0x50]
	0x03AB9658 STP V0, V0, [X29 + 0x20]
	0x03AB965C STP V0, V0, [X31 + 0x80]
	0x03AB9660 LDR X8, [X24 + 0x10]
	0x03AB9664 LDR V0, [X24]
	0x03AB9668 LDR X0, [X19]
	0x03AB966C LDR W23, [X25]
	0x03AB9670 STR X8, [X31 + 0x70]
	0x03AB9674 STR V0, [X31 + 0x6]
	0x03AB9678 ADRP X19, 0x69F000
	0x03AB967C LDR W8, [X0 + 0xE0]
	0x03AB9680 LDR X19, [X19 + 0x280]
	0x03AB9684 CBNZ W8, 0x3AB968C
	0x03AB9688 BL 0x1C16DFC
	0x03AB968C LDR V0, [X31 + 0x6]
	0x03AB9690 LDR X8, [X31 + 0x70]
	0x03AB9694 LDR X5, [X19]
	0x03AB9698 ADD X3, X31, 0x120
	0x03AB969C MOV X0, X21
	0x03AB96A0 MOV X1, X26
	0x03AB96A4 MOV W2, W23
	0x03AB96A8 MOV X4, X31
	0x03AB96AC STR V0, [X29 + 0xA]
	0x03AB96B0 STR X8, [X31 + 0x130]
	0x03AB96B4 BL 0x221EA04
	0x03AB96B8 MOV W23, W0
	0x03AB96BC TBNZ X0, 0x1F, 0x3AB9834
	0x03AB96C0 STP X26, X25, [X31 + 0x8]
	0x03AB96C4 ADRP X20, 0x69F000
	0x03AB96C8 ADRP X28, 0x69F000
	0x03AB96CC ADRP X19, 0x69F000
	0x03AB96D0 LDR X20, [X20 + 0x250]
	0x03AB96D4 LDR X28, [X28 + 0x278]
	0x03AB96D8 LDR X19, [X19 + 0x260]
	0x03AB96DC MOVZ W8, 0x48
	0x03AB96E0 UMADDL X25, X23, X8, X21
	0x03AB96E4 ADD X0, X31, 0xD0
	0x03AB96E8 MOVZ W2, 0x48
	0x03AB96EC MOV X1, X25
	0x03AB96F0 ADD X26, X31, 0xD0
	0x03AB96F4 BL 0x3EB1B30
	0x03AB96F8 LDR V0, [X24]
	0x03AB96FC LDR W8, [X31 + 0x110]
	0x03AB9700 LDR X2, [X20]
	0x03AB9704 ADD X26, X26, 0x30
	0x03AB9708 STR V0, [X31 + 0x8]
	0x03AB970C LDR W27, [X24 + 0x10]
	0x03AB9710 SUB W1, W8, 0x1
	0x03AB9714 MOV X0, X26
	0x03AB9718 STR W27, [X31 + 0x90]
	0x03AB971C BL 0x2B8C4C0
	0x03AB9720 LDR W4, [X22 + 0x6C]
	0x03AB9724 LDP X1, X2, [X22 + 0x48]
	0x03AB9728 LDR X5, [X28]
	0x03AB972C MOV W24, W0
	0x03AB9730 MUL W3, W4, W27
	0x03AB9734 ADD X0, X31, 0x120
	0x03AB9738 STP X31, X31, [X31 + 0x120]
	0x03AB973C BL 0x2B8C120
	0x03AB9740 LDR W8, [X31 + 0x110]
	0x03AB9744 LDR V0, [X29 + 0xA]
	0x03AB9748 CMP W8, 0x1

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+48], D12
	003 Move [X31+56], D11
	004 Move [X31+64], D10
	005 Move [X31+72], D9
	006 Move [X31+80], D8
	007 Move [X31+88], X30
	008 Move [X31+96], X22
	009 Move [X31+104], X21
	010 Move [X31+112], X20
	011 Move [X31+120], X19
	012 Move W8, 52
	013 NotImplemented "Instruction SBFM not yet implemented."
	014 NotImplemented "Instruction SMADDL not yet implemented."
	015 NotImplemented "Instruction MADD not yet implemented."
	016 Move V3, [X10+24]
	017 Move V2, [X8+24]
	018 Move X22, 0x929000
	019 Move V8, [X6]
	020 Move W8, [X22+1413]
	021 Move S10, V3.S[1]
	022 Move X21, X6
	023 Move X20, X5
	024 Move X19, X4
	025 Move S9, V2.S[1]
	026 Multiply S11, S3, V2.S[1]
	027 Multiply S12, S10, V2.S[0]
	028 Compare W8, 0
	029 JumpIfNotEqual {39}
	030 Move X0, 0x63B000
	031 Move X0, [X0+1448]
	032 Move [X31+16], V3
	033 Move [X31+24], V2
	034 Call 0x1C17CF4
	035 Move V3, [X31+16]
	036 Move V2, [X31+32]
	037 Move W8, 1
	038 Move [X22+1413], W8
	039 Move X8, 0x63B000
	040 Move X8, [X8+1448]
	041 Subtract S4, S11, S12
	042 Subtract V11, V2, V3
	043 Subtract S9, S9, S10
	044 Move X0, [X8]
	045 Move W8, [X0+224]
	046 Compare W8, 0
	047 Invalid "Jump target not found in method."
	048 Move [X31+16], V3
	049 Move [X31+24], V2
	050 Move [X31], V4
	051 Call 0x1C17DFC
	052 Move V4, [X31]
	053 Move V3, [X31+16]
	054 Move V2, [X31+2]
	055 NotImplemented "Instruction INVALID not yet implemented."
	056 Multiply S1, S9, S9
	057 Add S0, S0, S1
	058 NotImplemented "Instruction FSQRT not yet implemented."
	059 Add S0, S8, S0
	060 Move [X21], S0
	061 Move V0, [X20]
	062 Add V1, V3, V2
	063 NotImplemented "Instruction INVALID not yet implemented."
	064 Move X22, [X31+96]
	065 Move X21, [X31+104]
	066 Add S0, S4, S0
	067 Move [X20], S0
	068 Move V0, [X19]
	069 Move X30, [X31+88]
	070 Move D9, [X31+72]
	071 Move D8, [X31+80]
	072 Move D11, [X31+56]
	073 Move D10, [X31+64]
	074 Add V0, V1, V0
	075 Move [X19], D0
	076 Move X20, [X31+112]
	077 Move X19, [X31+120]
	078 Move V12, [X31+48]
	079 Add X31, X31, 128
	080 Return 

Method: System.Boolean ConnectTriangles(ref Unity.Collections.NativeArray`1<Unity.Mathematics.int4> connectedTri, ref Unity.Collections.NativeArray`1<System.Int32> affectEdges, ref Unity.Collections.NativeArray`1<System.Int32> checkSet, Unity.Collections.NativeArray`1<Unity.Mathematics.int4> voronoiEdges, System.Int32 triangleCount)

Disassembly:
	0x03AB974C STR V0, [X29 + 0x3]
	0x03AB9750 STR W8, [X31 + 0xC0]
	0x03AB9754 B.LT 0x3AB9798
	0x03AB9758 ADD X8, X31, 0x80
	0x03AB975C MOV W27, W31
	0x03AB9760 ADD X28, X8, 0x30
	0x03AB9764 LDR X2, [X20]
	0x03AB9768 MOV X0, X26
	0x03AB976C MOV W1, W27
	0x03AB9770 BL 0x2B8C4C0
	0x03AB9774 LDR X3, [X19]
	0x03AB9778 MOV W2, W0
	0x03AB977C MOV X0, X28
	0x03AB9780 MOV W1, W27
	0x03AB9784 BL 0x2B8C500
	0x03AB9788 LDR W8, [X31 + 0xC0]
	0x03AB978C ADD W27, W27, 0x1
	0x03AB9790 CMP W27, W8
	0x03AB9794 B.LT 0x3AB9764
	0x03AB9798 LDR X3, [X19]
	0x03AB979C MOV X0, X26
	0x03AB97A0 MOV W1, W31
	0x03AB97A4 MOV W2, W24
	0x03AB97A8 BL 0x2B8C500
	0x03AB97AC MOVZ W20, 0x1
	0x03AB97B0 ADD X1, X31, 0xD0
	0x03AB97B4 MOVZ W2, 0x48
	0x03AB97B8 MOV X0, X25
	0x03AB97BC STR W20, [X31 + 0x110]
	0x03AB97C0 BL 0x3EB1B30
	0x03AB97C4 ADRP X9, 0x69F000
	0x03AB97C8 LDP X1, X2, [X22 + 0x38]
	0x03AB97CC LDR W8, [X31 + 0x90]
	0x03AB97D0 LDR W4, [X22 + 0x6C]
	0x03AB97D4 LDR X9, [X9 + 0x278]
	0x03AB97D8 ADD X0, X31, 0x120
	0x03AB97DC STP X31, X31, [X31 + 0x120]
	0x03AB97E0 MUL W3, W4, W8
	0x03AB97E4 LDR X5, [X9]
	0x03AB97E8 BL 0x2B8C120
	0x03AB97EC LDR V0, [X29 + 0xA]
	0x03AB97F0 LDR X3, [X19]
	0x03AB97F4 ADD X8, X31, 0x80
	0x03AB97F8 ADD X0, X8, 0x18
	0x03AB97FC MOV W1, W31
	0x03AB9800 MOV W2, W24
	0x03AB9804 STUR V0, [X29 + 0x18]
	0x03AB9808 BL 0x2B8C500
	0x03AB980C ADD X0, X31, 0x18
	0x03AB9810 ADD X1, X31, 0x80
	0x03AB9814 MOVZ W2, 0x48
	0x03AB9818 STR W20, [X31 + 0xA8]
	0x03AB981C BL 0x3EB1AC0
	0x03AB9820 LDP X1, X3, [X31 + 0x8]
	0x03AB9824 ADD W2, W23, 0x1
	0x03AB9828 ADD X4, X31, 0x18
	0x03AB982C MOV X0, X21
	0x03AB9830 BL 0x3AB94B4
	0x03AB9834 ORN W8, W31, W23, 0x0
	0x03AB9838 LDP X20, X19, [X31 + 0x190]
	0x03AB983C LDP X22, X21, [X31 + 0x180]
	0x03AB9840 LDP X24, X23, [X31 + 0x170]
	0x03AB9844 LDP X26, X25, [X31 + 0x160]
	0x03AB9848 LDP X28, X27, [X31 + 0x150]
	0x03AB984C LDP X29, X30, [X31 + 0x140]
	0x03AB9850 UBFM W0, W8, 0x1F, 0x1F
	0x03AB9854 ADD X31, X31, 0x1A0
	0x03AB9858 RET
	0x03AB985C SUB X31, X31, 0x140
	0x03AB9860 STP X29, X30, [X31 + 0xE0]

ISIL:
	001 Move X8, [X1]
	002 Move W12, W31
	003 NotImplemented "Instruction CMP not yet implemented."
	004 NotImplemented "Instruction LDRSW not yet implemented."
	005 Move X8, [X0]
	006 Move X10, X9
	007 ShiftRight X10, 60
	008 And X10, X10, 0x7FFFFFF
	009 Move V0, [X3]
	010 Move [X8+8], X31
	011 Move [X8], D0
	012 Move X11, [X2]
	013 Move W8, 1
	014 Move [X11], W8
	015 Move W9, W5
	016 Move W10, 1
	017 Move W12, 1
	018 Move X13, [X1]
	019 NotImplemented "Instruction LDRSW not yet implemented."
	020 Move W15, [X11]
	021 Compare W15, 0
	022 JumpIfEqual {38}
	023 Subtract X15, X10, 1
	024 Move X16, X9
	025 NotImplemented "Instruction LDRSW not yet implemented."
	026 Move W17, [X11]
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Move X4, [X0]
	029 Add X6, X3, X14
	030 Add X17, X4, X15
	031 Move W5, [X17+4]
	032 Move W17, [X6]
	033 Move W6, [X6+4]
	034 NotImplemented "Instruction CMP not yet implemented."
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Subtract X16, X16, 1
	037 Add X13, X13, 4
	038 Move X16, [X0]
	039 Add X5, X3, X14
	040 Move W15, [X5]
	041 Move W5, [X5+4]
	042 Add X17, X16, X10
	043 NotImplemented "Instruction LDUR not yet implemented."
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Move [X17], W15
	046 Move [X17+4], W5
	047 Move [X17+8], X31
	048 Add X11, X4, X10
	049 Move [X11], W17
	050 Move [X11+4], W6
	051 Add X11, X4, X10
	052 Move [X11], W5
	053 Move [X11+4], W17
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Add X11, X16, X10
	056 Move [X11], W4
	057 Move [X11+4], W15
	058 Move [X11+8], X31
	059 Move X11, [X2]
	060 Add X10, X10, 1
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Add X12, X11, X14
	063 Move [X12], W8
	064 NotImplemented "Instruction CSET not yet implemented."
	065 NotImplemented "Instruction ORN not yet implemented."
	066 And W0, W8, 1
	067 Return X0

Method: System.Boolean Condition(Unity.Collections.Allocator allocator, ref Unity.Collections.NativeArray`1<Unity.Mathematics.float2> pgPoints, System.Int32 pgPointCount, Unity.Collections.NativeArray`1<Unity.Mathematics.int2> pgEdges, System.Int32 pgEdgeCount, ref Unity.Collections.NativeArray`1<Unity.Mathematics.float2> vertices, ref System.Int32 vertexCount, ref Unity.Collections.NativeArray`1<System.Int32> indices, ref System.Int32 indexCount)

Disassembly:
	0x03AB9864 STP X28, X27, [X31 + 0xF0]
	0x03AB9868 STP X26, X25, [X31 + 0x100]
	0x03AB986C STP X24, X23, [X31 + 0x110]
	0x03AB9870 STP X22, X21, [X31 + 0x120]
	0x03AB9874 STP X20, X19, [X31 + 0x130]
	0x03AB9878 ADRP X24, 0x929000
	0x03AB987C ADRP X23, 0x663000
	0x03AB9880 LDRB W8, [X24 + 0x492]
	0x03AB9884 LDR X23, [X23 + 0xD8]
	0x03AB9888 MOV X22, X6
	0x03AB988C MOV X19, X3
	0x03AB9890 MOV X21, X2
	0x03AB9894 MOV X20, X1
	0x03AB9898 TBNZ X8, 0x0, 0x3AB98D4
	0x03AB989C ADRP X0, 0x69F000
	0x03AB98A0 LDR X0, [X0 + 0x250]
	0x03AB98A4 BL 0x1C16CF4
	0x03AB98A8 ADRP X0, 0x69F000
	0x03AB98AC LDR X0, [X0 + 0x260]
	0x03AB98B0 BL 0x1C16CF4
	0x03AB98B4 ADRP X0, 0x69F000
	0x03AB98B8 LDR X0, [X0 + 0x288]
	0x03AB98BC BL 0x1C16CF4
	0x03AB98C0 ADRP X0, 0x663000
	0x03AB98C4 LDR X0, [X0 + 0xD8]
	0x03AB98C8 BL 0x1C16CF4
	0x03AB98CC MOVZ W8, 0x1
	0x03AB98D0 STRB W8, [X24 + 0x492]
	0x03AB98D4 MOVI V0.2D, 0x0
	0x03AB98D8 STR X31, [X31 + 0xB0]
	0x03AB98DC STR X31, [X31 + 0x60]
	0x03AB98E0 STP V0, V0, [X31 + 0x90]
	0x03AB98E4 STP V0, V0, [X31 + 0x70]
	0x03AB98E8 STP V0, V0, [X31 + 0x40]
	0x03AB98EC STP V0, V0, [X31 + 0x20]
	0x03AB98F0 LDR V0, [X22]
	0x03AB98F4 LDR X8, [X22 + 0x10]
	0x03AB98F8 UNIMPLEMENTED
	0x03AB98FC STR V0, [X22]
	0x03AB9900 LDR V0, [X22]
	0x03AB9904 LDR X0, [X23]
	0x03AB9908 LDR W22, [X19]
	0x03AB990C STR X8, [X31 + 0x10]
	0x03AB9910 STR V0, [X31]
	0x03AB9914 ADRP X23, 0x69F000
	0x03AB9918 LDR W8, [X0 + 0xE0]
	0x03AB991C LDR X23, [X23 + 0x288]
	0x03AB9920 CBNZ W8, 0x3AB9928
	0x03AB9924 BL 0x1C16DFC
	0x03AB9928 LDR V0, [X31]
	0x03AB992C LDR X8, [X31 + 0x10]
	0x03AB9930 LDR X5, [X23]
	0x03AB9934 ADD X3, X31, 0xC0
	0x03AB9938 MOV X0, X20
	0x03AB993C MOV X1, X21
	0x03AB9940 MOV W2, W22
	0x03AB9944 MOV X4, X31
	0x03AB9948 STR V0, [X31 + 0xC]
	0x03AB994C STR X8, [X31 + 0xD0]
	0x03AB9950 BL 0x221E568
	0x03AB9954 MOV W22, W0
	0x03AB9958 TBNZ X0, 0x1F, 0x3AB9A50
	0x03AB995C MOVZ W23, 0x48
	0x03AB9960 UMADDL X1, X22, X23, X20
	0x03AB9964 ADD X0, X31, 0x70
	0x03AB9968 MOVZ W2, 0x48
	0x03AB996C ADD X26, X31, 0x70
	0x03AB9970 BL 0x3EB1B30
	0x03AB9974 SUB W8, W22, 0x1
	0x03AB9978 SMADDL X23, X8, X23, X20
	0x03AB997C ADD X0, X31, 0x20
	0x03AB9980 MOVZ W2, 0x48
	0x03AB9984 MOV X1, X23
	0x03AB9988 ADD X25, X31, 0x20
	0x03AB998C BL 0x3EB1B30
	0x03AB9990 LDR W8, [X31 + 0xB0]
	0x03AB9994 CMP W8, 0x1
	0x03AB9998 STR W8, [X31 + 0x60]
	0x03AB999C B.LT 0x3AB99F0
	0x03AB99A0 ADRP X27, 0x69F000
	0x03AB99A4 ADRP X28, 0x69F000
	0x03AB99A8 LDR X27, [X27 + 0x250]
	0x03AB99AC LDR X28, [X28 + 0x260]
	0x03AB99B0 MOV W24, W31
	0x03AB99B4 ADD X25, X25, 0x30
	0x03AB99B8 ADD X26, X26, 0x30
	0x03AB99BC LDR X2, [X27]
	0x03AB99C0 MOV X0, X26
	0x03AB99C4 MOV W1, W24
	0x03AB99C8 BL 0x2B8C4C0
	0x03AB99CC LDR X3, [X28]
	0x03AB99D0 MOV W2, W0
	0x03AB99D4 MOV X0, X25
	0x03AB99D8 MOV W1, W24
	0x03AB99DC BL 0x2B8C500
	0x03AB99E0 LDR W8, [X31 + 0x60]
	0x03AB99E4 ADD W24, W24, 0x1
	0x03AB99E8 CMP W24, W8
	0x03AB99EC B.LT 0x3AB99BC
	0x03AB99F0 ADD X1, X31, 0x20
	0x03AB99F4 MOVZ W2, 0x48
	0x03AB99F8 MOV X0, X23
	0x03AB99FC BL 0x3EB1B30
	0x03AB9A00 LDR W8, [X19]
	0x03AB9A04 CMP W8, W21
	0x03AB9A08 B.GE 0x3AB9A50
	0x03AB9A0C SUB W8, W8, 0x1
	0x03AB9A10 CMP W8, W22
	0x03AB9A14 B.LE 0x3AB9A4C
	0x03AB9A18 MOV W21, W22
	0x03AB9A1C MOVZ W8, 0x48
	0x03AB9A20 MADD X0, X21, X8, X20
	0x03AB9A24 ADD X20, X0, 0x48
	0x03AB9A28 MOVZ W2, 0x48
	0x03AB9A2C MOV X1, X20
	0x03AB9A30 ADD X21, X21, 0x1
	0x03AB9A34 BL 0x3EB1AC0
	0x03AB9A38 LDR W8, [X19]
	0x03AB9A3C MOV X0, X20
	0x03AB9A40 SUB W8, W8, 0x1
	0x03AB9A44 CMP X21, W8, SXTW
	0x03AB9A48 B.LT 0x3AB9A24
	0x03AB9A4C STR W8, [X19]
	0x03AB9A50 ORN W8, W31, W22, 0x0
	0x03AB9A54 LDP X20, X19, [X31 + 0x130]
	0x03AB9A58 LDP X22, X21, [X31 + 0x120]
	0x03AB9A5C LDP X24, X23, [X31 + 0x110]
	0x03AB9A60 LDP X26, X25, [X31 + 0x100]
	0x03AB9A64 LDP X28, X27, [X31 + 0xF0]
	0x03AB9A68 LDP X29, X30, [X31 + 0xE0]
	0x03AB9A6C UBFM W0, W8, 0x1F, 0x1F
	0x03AB9A70 ADD X31, X31, 0x140
	0x03AB9A74 RET
	0x03AB9A78 STR X30, [X31 - 0x30]!
	0x03AB9A7C STP X22, X21, [X31 + 0x10]
	0x03AB9A80 STP X20, X19, [X31 + 0x20]
	0x03AB9A84 MOV X20, X3
	0x03AB9A88 MOV X19, X2
	0x03AB9A8C MOV X21, X0
	0x03AB9A90 MOV X22, X31
	0x03AB9A94 STRB W31, [X31 + 0x8]
	0x03AB9A98 LDRSW X8, [X20]
	0x03AB9A9C CMP X22, X8
	0x03AB9AA0 B.GE 0x3AB9AC4
	0x03AB9AA4 LDR X2, [X21, X22, LSL #3]
	0x03AB9AA8 ADD X0, X31, 0x8
	0x03AB9AAC MOV X1, X19
	0x03AB9AB0 MOV X3, X31
	0x03AB9AB4 BL 0x3A234B0
	0x03AB9AB8 ADD X22, X22, 0x1
	0x03AB9ABC CBNZ W0, 0x3AB9A98
	0x03AB9AC0 B 0x3AB9AD0
	0x03AB9AC4 ADD W9, W8, 0x1
	0x03AB9AC8 STR W9, [X20]
	0x03AB9ACC STR X19, [X21, X8, LSL #3]
	0x03AB9AD0 LDP X20, X19, [X31 + 0x20]
	0x03AB9AD4 LDP X22, X21, [X31 + 0x10]
	0x03AB9AD8 LDR X30, [X31], #0x30
	0x03AB9ADC RET
	0x03AB9AE0 SUB X31, X31, 0xF0
	0x03AB9AE4 STR X30, [X31 + 0x90]
	0x03AB9AE8 STP X28, X27, [X31 + 0xA0]
	0x03AB9AEC STP X26, X25, [X31 + 0xB0]
	0x03AB9AF0 STP X24, X23, [X31 + 0xC0]
	0x03AB9AF4 STP X22, X21, [X31 + 0xD0]
	0x03AB9AF8 STP X20, X19, [X31 + 0xE0]
	0x03AB9AFC ADRP X25, 0x929000
	0x03AB9B00 ADRP X24, 0x69F000
	0x03AB9B04 ADRP X23, 0x664000
	0x03AB9B08 ADRP X22, 0x69B000
	0x03AB9B0C LDRB W8, [X25 + 0x493]
	0x03AB9B10 LDR X24, [X24 + 0x290]
	0x03AB9B14 LDR X23, [X23 + 0x138]
	0x03AB9B18 LDR X22, [X22 + 0x528]
	0x03AB9B1C MOV W21, W3
	0x03AB9B20 MOV X20, X1
	0x03AB9B24 MOV X19, X0
	0x03AB9B28 TBNZ X8, 0x0, 0x3AB9BA0
	0x03AB9B2C ADRP X0, 0x69F000
	0x03AB9B30 LDR X0, [X0 + 0x278]
	0x03AB9B34 BL 0x1C16CF4
	0x03AB9B38 ADRP X0, 0x69F000
	0x03AB9B3C LDR X0, [X0 + 0x260]
	0x03AB9B40 BL 0x1C16CF4
	0x03AB9B44 ADRP X0, 0x69F000
	0x03AB9B48 LDR X0, [X0 + 0x1D0]
	0x03AB9B4C BL 0x1C16CF4
	0x03AB9B50 ADRP X0, 0x663000
	0x03AB9B54 LDR X0, [X0 + 0xD8]
	0x03AB9B58 BL 0x1C16CF4
	0x03AB9B5C ADRP X0, 0x69F000
	0x03AB9B60 LDR X0, [X0 + 0x1D8]
	0x03AB9B64 BL 0x1C16CF4
	0x03AB9B68 ADRP X0, 0x69B000
	0x03AB9B6C LDR X0, [X0 + 0x9B8]
	0x03AB9B70 BL 0x1C16CF4
	0x03AB9B74 ADRP X0, 0x69B000
	0x03AB9B78 LDR X0, [X0 + 0x528]
	0x03AB9B7C BL 0x1C16CF4
	0x03AB9B80 ADRP X0, 0x69F000
	0x03AB9B84 LDR X0, [X0 + 0x290]
	0x03AB9B88 BL 0x1C16CF4
	0x03AB9B8C ADRP X0, 0x664000
	0x03AB9B90 LDR X0, [X0 + 0x138]
	0x03AB9B94 BL 0x1C16CF4
	0x03AB9B98 MOVZ W8, 0x1
	0x03AB9B9C STRB W8, [X25 + 0x493]
	0x03AB9BA0 STP X31, X31, [X31 + 0x80]
	0x03AB9BA4 STP X31, X31, [X31 + 0x70]
	0x03AB9BA8 STP X31, X31, [X31 + 0x60]
	0x03AB9BAC STP X31, X31, [X31 + 0x40]
	0x03AB9BB0 STR X31, [X31 + 0x50]
	0x03AB9BB4 STP X31, X31, [X31 + 0x20]
	0x03AB9BB8 STR X31, [X31 + 0x30]
	0x03AB9BBC LDR W8, [X19 + 0x30]
	0x03AB9BC0 LDR W2, [X19 + 0xA8]
	0x03AB9BC4 ADD X0, X31, 0x10
	0x03AB9BC8 MOVZ W3, 0x1
	0x03AB9BCC ADD W1, W8, W8, 0x1, LSL
	0x03AB9BD0 STR W1, [X19 + 0x74]
	0x03AB9BD4 LDR X4, [X24]
	0x03AB9BD8 STP X31, X31, [X31 + 0x10]
	0x03AB9BDC BL 0x23EE380
	0x03AB9BE0 LDR V0, [X31 + 0x1]
	0x03AB9BE4 LDR W8, [X19 + 0x74]
	0x03AB9BE8 LDR W2, [X19 + 0xA8]
	0x03AB9BEC ADD X0, X31, 0x0
	0x03AB9BF0 STR V0, [X19 + 0x1]
	0x03AB9BF4 LDR X4, [X23]
	0x03AB9BF8 MUL W1, W8, W8
	0x03AB9BFC MOVZ W3, 0x1
	0x03AB9C00 STP X31, X31, [X31]
	0x03AB9C04 BL 0x23D58AC
	0x03AB9C08 LDR V0, [X31]
	0x03AB9C0C ADD X0, X31, 0x80
	0x03AB9C10 MOVZ W3, 0x1
	0x03AB9C14 STUR V0, [X19 + 0x58]
	0x03AB9C18 STR W31, [X31 + 0x9C]
	0x03AB9C1C LDR W1, [X19 + 0x74]
	0x03AB9C20 LDR W2, [X19 + 0xA8]
	0x03AB9C24 LDR X4, [X22]
	0x03AB9C28 BL 0x23FBF70
	0x03AB9C2C CMP W21, 0x1
	0x03AB9C30 B.LT 0x3AB9C88
	0x03AB9C34 MOV W21, W21
	0x03AB9C38 LDR X8, [X20]
	0x03AB9C3C ADD X3, X31, 0x9C
	0x03AB9C40 STR X8, [X31 + 0x78]
	0x03AB9C44 LDP W8, W9, [X20]
	0x03AB9C48 CMP W8, W9
	0x03AB9C4C CSEL W8, W8, W9, LT
	0x03AB9C50 STR W8, [X31 + 0x78]
	0x03AB9C54 LDP W8, W9, [X20]
	0x03AB9C58 CMP W8, W9
	0x03AB9C5C CSEL W8, W8, W9, GT
	0x03AB9C60 STR W8, [X31 + 0x7C]
	0x03AB9C64 LDR X8, [X31 + 0x78]
	0x03AB9C68 STR X8, [X20], #0x8
	0x03AB9C6C LDP X0, X1, [X31 + 0x80]
	0x03AB9C70 LDR X2, [X31 + 0x78]
	0x03AB9C74 BL 0x3AB9A78
	0x03AB9C78 SUBS X21, X21, 0x1
	0x03AB9C7C B.NE 0x3AB9C38
	0x03AB9C80 LDR W20, [X31 + 0x9C]
	0x03AB9C84 B 0x3AB9C8C
	0x03AB9C88 MOV W20, W31
	0x03AB9C8C ADRP X24, 0x69B000
	0x03AB9C90 ADRP X23, 0x69F000
	0x03AB9C94 LDR X24, [X24 + 0x9B8]
	0x03AB9C98 LDR X23, [X23 + 0x1D8]
	0x03AB9C9C LDR W2, [X19 + 0xA8]
	0x03AB9CA0 LDR X4, [X22]
	0x03AB9CA4 ADRP X21, 0x663000
	0x03AB9CA8 LDR X21, [X21 + 0xD8]
	0x03AB9CAC ADD X0, X31, 0x10
	0x03AB9CB0 MOVZ W3, 0x1
	0x03AB9CB4 MOV W1, W20
	0x03AB9CB8 STP X31, X31, [X31 + 0x10]
	0x03AB9CBC BL 0x23FBF70
	0x03AB9CC0 LDR V0, [X31 + 0x1]
	0x03AB9CC4 CMP W20, 0x1
	0x03AB9CC8 STR V0, [X19]
	0x03AB9CCC B.LT 0x3AB9CF8
	0x03AB9CD0 MOV W9, W20
	0x03AB9CD4 MOV X8, X31
	0x03AB9CD8 UBFM X9, X9, 0x3D, 0x3C
	0x03AB9CDC LDR X10, [X31 + 0x80]
	0x03AB9CE0 LDR X11, [X19]
	0x03AB9CE4 LDR X10, [X10, X8, LSL]
	0x03AB9CE8 STR X10, [X11, X8, LSL]
	0x03AB9CEC ADD X8, X8, 0x8
	0x03AB9CF0 CMP X9, X8
	0x03AB9CF4 B.NE 0x3AB9CDC
	0x03AB9CF8 LDR X1, [X24]
	0x03AB9CFC ADRP X22, 0x69F000
	0x03AB9D00 LDR X22, [X22 + 0x1D0]
	0x03AB9D04 ADD X0, X31, 0x80
	0x03AB9D08 BL 0x23FC198
	0x03AB9D0C LDP X0, X1, [X19]
	0x03AB9D10 LDR X2, [X23]
	0x03AB9D14 BL 0x222267C
	0x03AB9D18 LDR X8, [X21]
	0x03AB9D1C LDR W21, [X19 + 0x8]
	0x03AB9D20 MOV X20, X0
	0x03AB9D24 LDR W9, [X8 + 0xE0]
	0x03AB9D28 CBNZ W9, 0x3AB9D34
	0x03AB9D2C MOV X0, X8
	0x03AB9D30 BL 0x1C16DFC
	0x03AB9D34 LDR X4, [X22]
	0x03AB9D38 SUB W2, W21, 0x1
	0x03AB9D3C MOV X0, X20
	0x03AB9D40 MOV W1, W31
	0x03AB9D44 MOV X3, X31
	0x03AB9D48 BL 0x221F61C
	0x03AB9D4C LDR W4, [X19 + 0x74]
	0x03AB9D50 CMP W4, 0x1
	0x03AB9D54 B.LT 0x3AB9DB4
	0x03AB9D58 ADRP X22, 0x69F000
	0x03AB9D5C LDR X22, [X22 + 0x278]
	0x03AB9D60 MOV X20, X31
	0x03AB9D64 MOV X21, X31
	0x03AB9D68 LDR X8, [X19 + 0x10]
	0x03AB9D6C LDP X1, X2, [X19 + 0x58]
	0x03AB9D70 LDR X5, [X22]
	0x03AB9D74 MUL W3, W4, W21
	0x03AB9D78 ADD X8, X8, X20
	0x03AB9D7C LDR W23, [X8 + 0x14]
	0x03AB9D80 ADD X0, X31, 0x10
	0x03AB9D84 STP X31, X31, [X31 + 0x10]
	0x03AB9D88 BL 0x2B8C120
	0x03AB9D8C LDR X8, [X19 + 0x10]
	0x03AB9D90 LDR V0, [X31 + 0x1]
	0x03AB9D94 ADD X21, X21, 0x1
	0x03AB9D98 ADD X8, X8, X20
	0x03AB9D9C STR V0, [X8]
	0x03AB9DA0 STP W31, W23, [X8 + 0x10]
	0x03AB9DA4 LDRSW X4, [X19 + 0x74]
	0x03AB9DA8 ADD X20, X20, 0x18
	0x03AB9DAC CMP X21, X4
	0x03AB9DB0 B.LT 0x3AB9D68
	0x03AB9DB4 LDR W8, [X19 + 0x30]
	0x03AB9DB8 CMP W8, 0x1
	0x03AB9DBC B.LT 0x3AB9F30
	0x03AB9DC0 ADRP X25, 0x69F000
	0x03AB9DC4 LDR X25, [X25 + 0x260]
	0x03AB9DC8 MOV X23, X31
	0x03AB9DCC MOV X24, X31
	0x03AB9DD0 LDR X8, [X19 + 0x20]
	0x03AB9DD4 LDR X9, [X19 + 0x10]
	0x03AB9DD8 LDR X3, [X25]
	0x03AB9DDC ADD X0, X31, 0x60
	0x03AB9DE0 ADD X8, X8, X23
	0x03AB9DE4 LDPSW D21, D20, [X8]
	0x03AB9DE8 LDRSW X22, [X8 + 0x8]
	0x03AB9DEC ADD X28, X21, X21, 0x1, LSL
	0x03AB9DF0 ADD X8, X9, X28, 0x3, LSL
	0x03AB9DF4 LDR X10, [X8 + 0x10]
	0x03AB9DF8 LDR V0, [X8]
	0x03AB9DFC ADD X27, X20, X20, 0x1, LSL
	0x03AB9E00 ADD X8, X9, X27, 0x3, LSL
	0x03AB9E04 STR X10, [X31 + 0x70]
	0x03AB9E08 STR V0, [X31 + 0x6]
	0x03AB9E0C LDR X10, [X8 + 0x10]
	0x03AB9E10 LDR V0, [X8]
	0x03AB9E14 ADD X26, X22, X22, 0x1, LSL
	0x03AB9E18 ADD X8, X9, X26, 0x3, LSL
	0x03AB9E1C LDR W1, [X31 + 0x70]
	0x03AB9E20 STR X10, [X31 + 0x50]
	0x03AB9E24 STR V0, [X31 + 0x4]
	0x03AB9E28 LDR X9, [X8 + 0x10]
	0x03AB9E2C LDR V0, [X8]
	0x03AB9E30 ADD W8, W1, 0x1
	0x03AB9E34 MOV W2, W20
	0x03AB9E38 STR W8, [X31 + 0x70]
	0x03AB9E3C STR X9, [X31 + 0x30]
	0x03AB9E40 STR V0, [X31 + 0x2]
	0x03AB9E44 BL 0x2B8C500
	0x03AB9E48 LDR W1, [X31 + 0x70]
	0x03AB9E4C LDR X3, [X25]
	0x03AB9E50 ADD X0, X31, 0x60
	0x03AB9E54 MOV W2, W22
	0x03AB9E58 ADD W8, W1, 0x1
	0x03AB9E5C STR W8, [X31 + 0x70]
	0x03AB9E60 BL 0x2B8C500
	0x03AB9E64 LDR W1, [X31 + 0x50]
	0x03AB9E68 LDR X3, [X25]
	0x03AB9E6C ADD X0, X31, 0x40
	0x03AB9E70 MOV W2, W22
	0x03AB9E74 ADD W8, W1, 0x1
	0x03AB9E78 STR W8, [X31 + 0x50]
	0x03AB9E7C BL 0x2B8C500
	0x03AB9E80 LDR W1, [X31 + 0x50]
	0x03AB9E84 LDR X3, [X25]
	0x03AB9E88 ADD X0, X31, 0x40
	0x03AB9E8C MOV W2, W21
	0x03AB9E90 ADD W8, W1, 0x1
	0x03AB9E94 STR W8, [X31 + 0x50]
	0x03AB9E98 BL 0x2B8C500
	0x03AB9E9C LDR W1, [X31 + 0x30]
	0x03AB9EA0 LDR X3, [X25]
	0x03AB9EA4 ADD X0, X31, 0x20
	0x03AB9EA8 MOV W2, W21
	0x03AB9EAC ADD W8, W1, 0x1
	0x03AB9EB0 STR W8, [X31 + 0x30]
	0x03AB9EB4 BL 0x2B8C500
	0x03AB9EB8 LDR W1, [X31 + 0x30]
	0x03AB9EBC LDR X3, [X25]
	0x03AB9EC0 ADD X0, X31, 0x20
	0x03AB9EC4 MOV W2, W20
	0x03AB9EC8 ADD W8, W1, 0x1
	0x03AB9ECC STR W8, [X31 + 0x30]
	0x03AB9ED0 BL 0x2B8C500
	0x03AB9ED4 LDR X8, [X19 + 0x10]
	0x03AB9ED8 LDR X9, [X31 + 0x70]
	0x03AB9EDC LDR V0, [X31 + 0x6]
	0x03AB9EE0 ADD X24, X24, 0x1
	0x03AB9EE4 ADD X8, X8, X28, 0x3, LSL
	0x03AB9EE8 STR X9, [X8 + 0x10]
	0x03AB9EEC STR V0, [X8]
	0x03AB9EF0 LDR X8, [X19 + 0x10]
	0x03AB9EF4 LDR X9, [X31 + 0x50]
	0x03AB9EF8 LDR V0, [X31 + 0x4]
	0x03AB9EFC ADD X23, X23, 0xC
	0x03AB9F00 ADD X8, X8, X27, 0x3, LSL
	0x03AB9F04 STR X9, [X8 + 0x10]
	0x03AB9F08 STR V0, [X8]

ISIL:
	001 Subtract X31, X31, 416
	002 Move [X31+304], D9
	003 Move [X31+312], D8
	004 Move [X31+320], X29
	005 Move [X31+328], X30
	006 Move [X31+336], X28
	007 Move [X31+344], X27
	008 Move [X31+352], X26
	009 Move [X31+360], X25
	010 Move [X31+368], X24
	011 Move [X31+376], X23
	012 Move [X31+384], X22
	013 Move [X31+392], X21
	014 Move [X31+400], X20
	015 Move [X31+408], X19
	016 Move [X31+92], W5
	017 Move [X31+72], X3
	018 Move [X31+80], X4
	019 Move [X31+68], W2
	020 Move [X31+112], X1
	021 Move X22, 0x92A000
	022 Move X20, 0x6A0000
	023 Move X27, 0x6A0000
	024 Move X21, 0x665000
	025 Move X29, 0x664000
	026 Move X23, [X31+416]
	027 Move X26, [X31+424]
	028 Move W8, [X22+1165]
	029 Move X20, [X20+528]
	030 Move X27, [X27+560]
	031 Move X21, [X21+312]
	032 Move X29, [X29+216]
	033 Move X19, X7
	034 Move X24, X6
	035 Move W25, W0
	036 Move TEMP, X8
	037 And TEMP, TEMP, 1
	038 Compare TEMP, 1
	039 JumpIfEqual {75}
	040 Move X0, 0x6A0000
	041 Move X0, [X0+568]
	042 Call 0x1C17CF4
	043 Move X0, 0x664000
	044 Move X0, [X0+216]
	045 Call 0x1C17CF4
	046 Move X0, 0x6A0000
	047 Move X0, [X0+576]
	048 Call 0x1C17CF4
	049 Move X0, 0x665000
	050 Move X0, [X0+328]
	051 Call 0x1C17CF4
	052 Move X0, 0x6A0000
	053 Move X0, [X0+584]
	054 Call 0x1C17CF4
	055 Move X0, 0x6A0000
	056 Move X0, [X0+520]
	057 Call 0x1C17CF4
	058 Move X0, 0x6A0000
	059 Move X0, [X0+528]
	060 Call 0x1C17CF4
	061 Move X0, 0x665000
	062 Move X0, [X0+312]
	063 Call 0x1C17CF4
	064 Move X0, 0x6A0000
	065 Move X0, [X0+560]
	066 Call 0x1C17CF4
	067 Move X0, 0x69C000
	068 Move X0, [X0+2520]
	069 Call 0x1C17CF4
	070 Move X0, 0x666000
	071 Move X0, [X0+2096]
	072 Call 0x1C17CF4
	073 Move W8, 1
	074 Move [X22+1165], W8
	075 Move [X31+248], X31
	076 Move [X31+256], X31
	077 Move [X31+232], X31
	078 Move [X31+240], X31
	079 Move [X31+216], X31
	080 Move [X31+224], X31
	081 Move [X31+200], X31
	082 Move [X31+208], X31
	083 Move [X31+184], X31
	084 Move [X31+192], X31
	085 Move [X31+168], X31
	086 Move [X31+176], X31
	087 Move [X31+152], X31
	088 Move [X31+160], X31
	089 Move [X31+136], X31
	090 Move [X31+144], X31
	091 Move [X31+120], X31
	092 Move [X31+128], X31
	093 Move [X31+288], X31
	094 Move [X31+296], X31
	095 Move [X31+272], X31
	096 Move [X31+280], X31
	097 Move [X31+264], X31
	098 Move W1, [X26]
	099 Move X4, [X20]
	100 Move X20, 0x69C000
	101 Move X20, [X20+2520]
	102 Add X0, X31, 248
	103 Move W3, 1
	104 Move W2, W25
	105 Call NativeArray`1<UTriangle>..ctor, X0, X1, X2, X3
	106 Move W1, [X26]
	107 Move X4, [X27]
	108 Add X0, X31, 232
	109 Move W3, 1
	110 Move W2, W25
	111 Call NativeArray`1<int4>..ctor, X0, X1, X2, X3
	112 Move W1, [X26]
	113 Move X4, [X27]
	114 Add X0, X31, 216
	115 Move W3, 1
	116 Move W2, W25
	117 Call NativeArray`1<int4>..ctor, X0, X1, X2, X3
	118 Move W1, [X19]
	119 Move X4, [X27]
	120 Add X0, X31, 200
	121 Move W3, 1
	122 Move W2, W25
	123 Call NativeArray`1<int4>..ctor, X0, X1, X2, X3
	124 Move W1, [X26]
	125 Move X4, [X21]
	126 Add X0, X31, 184
	127 Move W3, 1
	128 Move W2, W25
	129 Call NativeArray`1<Int32>..ctor, X0, X1, X2, X3
	130 Move W1, [X26]
	131 Move X4, [X21]
	132 Add X0, X31, 168
	133 Move W3, 1
	134 Move W2, W25
	135 Call NativeArray`1<Int32>..ctor, X0, X1, X2, X3
	136 Move W1, [X19]
	137 Move X4, [X21]
	138 Add X0, X31, 152
	139 Move W3, 1
	140 Move W2, W25
	141 Call NativeArray`1<Int32>..ctor, X0, X1, X2, X3
	142 Move X0, [X29]
	143 Move X27, [X24]
	144 Move X28, [X24+8]
	145 Move [X31+96], X24
	146 Move [X31+104], X23
	147 Move W29, [X19]
	148 Move X21, [X23]
	149 Move X22, [X23+8]
	150 Move W8, [X0+224]
	151 Move W23, [X26]
	152 Compare W8, 0
	153 JumpIfNotEqual {155}
	154 Call 0x1C17DFC
	155 Add X8, X31, 292
	156 Add X9, X31, 284
	157 Add X10, X31, 300
	158 Add X11, X31, 264
	159 Move [X31+32], X8
	160 Move [X31+40], X31
	161 Add X6, X31, 248
	162 Add X7, X31, 268
	163 Add X8, X31, 232
	164 Move X0, X27
	165 Move X1, X28
	166 Move W2, W29
	167 Move X3, X21
	168 Move X4, X22
	169 Move W5, W23
	170 Move [X31+16], X10
	171 Move [X31+24], X9
	172 Move [X31], X8
	173 Move [X31+8], X11
	174 Call ModuleHandle.BuildTrianglesAndEdges, X0, X1, X2, X3, X4, X5, X6, X7, X8, X9, X10
	175 Move X8, 0x6A0000
	176 Move W1, [X31+264]
	177 Move X8, [X8+560]
	178 Add X0, X31, 136
	179 Move W3, 1
	180 Move W2, W25
	181 Move X4, [X8]
	182 Call NativeArray`1<int4>..ctor, X0, X1, X2, X3
	183 Move X8, 0x6A0000
	184 Move X0, [X31+232]
	185 Move X1, [X31+240]
	186 Move X8, [X8+576]
	187 Move X2, [X8]
	188 Call NativeArrayUnsafeUtility.GetUnsafeBufferPointerWithoutChecks, X0
	189 Move X9, 0x6A0000
	190 Move W8, [X31+264]
	191 Move X9, [X9+568]
	192 Move W1, W31
	193 Move X3, X31
	194 Subtract W2, W8, 1
	195 Move X4, [X9]
	196 Call ModuleHandle.InsertionSort, X0, X1, X2, X3
	197 Move X0, [X20]
	198 Move W8, [X0+224]
	199 Compare W8, 0
	200 JumpIfNotEqual {202}
	201 Call 0x1C17DFC
	202 Add X0, X31, 136
	203 Add X1, X31, 232
	204 Add X2, X31, 264
	205 Add X3, X31, 216
	206 Call Smoothen.RefineEdges, X0, X1, X2, X3
	207 Move W28, [X19]
	208 NotImplemented "Instruction CMP not yet implemented."
	209 Move [X31+64], W25
	210 Move X24, 0x666000
	211 Move X24, [X24+2096]
	212 Move X29, X31
	213 Move S8, 3
	214 Move X0, [X20]
	215 Move X22, [X31+232]
	216 Move W21, [X31+264]
	217 Move W8, [X0+224]
	218 Compare W8, 0
	219 JumpIfNotEqual {221}
	220 Call 0x1C17DFC
	221 NotImplemented "Instruction CMP not yet implemented."
	222 Move X9, [X31+184]
	223 Move X10, [X31+168]
	224 Move W27, W31
	225 Move X8, X31
	226 Add X11, X22, 4
	227 NotImplemented "Instruction LDUR not yet implemented."
	228 NotImplemented "Instruction CMP not yet implemented."
	229 Move W12, [X11]
	230 NotImplemented "Instruction CMP not yet implemented."
	231 Add W12, W27, 1
	232 Move [X10], W8
	233 Move W27, W12
	234 Move [X9], W31
	235 Add X8, X8, 1
	236 NotImplemented "Instruction CMP not yet implemented."
	237 Add X11, X11, 16
	238 NotImplemented "Instruction CMP not yet implemented."
	239 NotImplemented "Instruction CSET not yet implemented."
	240 NotImplemented "Instruction CMP not yet implemented."
	241 Move X8, [X31+168]
	242 Move X9, [X31+232]
	243 Move W10, W27
	244 NotImplemented "Instruction LDRSW not yet implemented."
	245 Add X11, X9, X11
	246 Move W12, [X11+8]
	247 Add W31, W12, 1
	248 Move W11, [X11+12]
	249 Add W31, W11, 1
	250 Subtract X10, X10, 1
	251 Add X8, X8, 4
	252 Compare W27, 0
	253 JumpIfNotEqual {257}
	254 Move W23, W31
	255 Compare W27, 0
	256 JumpIfEqual {320}
	257 Move X0, [X20]
	258 Move X22, [X31+216]
	259 Move X21, [X31+224]
	260 Move W8, [X0+224]
	261 Compare W8, 0
	262 JumpIfNotEqual {264}
	263 Call 0x1C17DFC
	264 Add X0, X31, 200
	265 Add X1, X31, 168
	266 Add X2, X31, 184
	267 Move X3, X22
	268 Move X4, X21
	269 Move W5, W27
	270 Call Smoothen.ConnectTriangles, X0, X1, X2, X3, X4
	271 Move TEMP, X0
	272 And TEMP, TEMP, 1
	273 Compare TEMP, 1
	274 JumpIfNotEqual {415}
	275 Move X8, [X24]
	276 Move X8, [X8+184]
	277 Move X8, [X8]
	278 Move [X31+120], X31
	279 Move [X31+128], X8
	280 Compare W23, 0
	281 JumpIfEqual {311}
	282 Move X25, X26
	283 Move X26, X24
	284 Move X28, X31
	285 Move W24, W27
	286 Move X8, [X31+200]
	287 Move X0, [X20]
	288 Move X23, [X31+248]
	289 Move X27, [X31+256]
	290 Add X8, X8, X28
	291 Move W9, [X0+224]
	292 Move X21, [X8]
	293 Move X22, [X8+8]
	294 Compare W9, 0
	295 JumpIfNotEqual {297}
	296 Call 0x1C17DFC
	297 Add X4, X31, 128
	298 Add X5, X31, 124
	299 Add X6, X31, 120
	300 Move X0, X21
	301 Move X1, X22
	302 Move X2, X23
	303 Move X3, X27
	304 Call Smoothen.CentroidByPolygon, X0, X1, X2, X3, X4
	305 Subtract X24, X24, 1
	306 Add X28, X28, 16
	307 Move V0, [X31+128]
	308 Move V1, [X31+124]
	309 Move X24, X26
	310 Move X26, X25
	311 Move D0, X8
	312 Move S1, W31
	313 Multiply S1, S1, S8
	314 Move X8, [X31+112]
	315 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	316 NotImplemented "Instruction INVALID not yet implemented."
	317 Move [X31+128], D0
	318 Move X8, [X8]
	319 Move [X8], D0
	320 NotImplemented "Instruction LDRSW not yet implemented."
	321 Add X29, X29, 1
	322 NotImplemented "Instruction CMP not yet implemented."
	323 Move W25, [X31+64]
	324 Move X23, [X31+104]
	325 Move X8, [X31+112]
	326 Move W29, [X26]
	327 Move [X26], W31
	328 Move [X19], W31
	329 Move [X31+268], W31
	330 Move X22, [X31+96]
	331 Move X1, [X8]
	332 Move X2, [X8+8]
	333 Move W3, [X31+68]
	334 Move X4, [X31+72]
	335 Move X5, [X31+80]
	336 Move W6, [X31+92]
	337 Move W0, W25
	338 Move X7, X22
	339 Move [X31+8], X23
	340 Move [X31+16], X26
	341 Move [X31], X19
	342 Call Tessellator.Tessellate, X0, X1, X2, X3, X4, X5, X6, X7, X8
	343 Move TEMP, X0
	344 And TEMP, TEMP, 1
	345 Compare TEMP, 1
	346 JumpIfNotEqual {413}
	347 Move X8, 0x664000
	348 Move X21, [X22]
	349 Move X27, [X22+8]
	350 Move X8, [X8+216]
	351 Move W22, [X19]
	352 Move W25, [X26]
	353 Move X0, [X8]
	354 Move X8, X23
	355 Move X23, [X23]
	356 Move X24, [X8+8]
	357 Move W8, [X0+224]
	358 Compare W8, 0
	359 JumpIfNotEqual {361}
	360 Call 0x1C17DFC
	361 Add X8, X31, 280
	362 Add X9, X31, 272
	363 Add X10, X31, 276
	364 Add X11, X31, 288
	365 Add X12, X31, 284
	366 Move [X31+32], X9
	367 Move [X31+40], X8
	368 Add X8, X31, 296
	369 Add X6, X31, 248
	370 Add X7, X31, 268
	371 Move X0, X21
	372 Move X1, X27
	373 Move W2, W22
	374 Move X3, X23
	375 Move X4, X24
	376 Move W5, W25
	377 Move [X31+16], X11
	378 Move [X31+24], X10
	379 Move [X31], X8
	380 Move [X31+8], X12
	381 Move [X31+48], X31
	382 Call ModuleHandle.BuildTriangles, X0, X1, X2, X3, X4, X5, X6, X7, X8, X9, X10, X11
	383 Move X0, [X20]
	384 Move V8, [X31+296]
	385 Move V9, [X31+300]
	386 Move W8, [X0+224]
	387 Compare W8, 0
	388 JumpIfNotEqual {391}
	389 Call 0x1C17DFC
	390 Move X0, [X20]
	391 Move X22, 0x6A0000
	392 Move X23, 0x665000
	393 Move X24, 0x6A0000
	394 Move X22, [X22+584]
	395 Move X23, [X23+328]
	396 Move X24, [X24+520]
	397 Move X8, [X0+184]
	398 Move V0, [X8]
	399 Multiply S0, S9, S0
	400 NotImplemented "Instruction FCMP not yet implemented."
	401 Move V8, [X31+276]
	402 Move W9, [X0+224]
	403 Move V9, [X31+272]
	404 Compare W9, 0
	405 JumpIfNotEqual {409}
	406 Call 0x1C17DFC
	407 Move X8, [X20]
	408 Move X8, [X8+184]
	409 Move V0, [X8+4]
	410 Multiply S0, S9, S0
	411 NotImplemented "Instruction FCMP not yet implemented."
	412 NotImplemented "Instruction CSET not yet implemented."
	413 Move W21, W31
	414 Move W21, W31
	415 Move W29, [X26]
	416 Move W28, [X19]
	417 Move [X26], W31
	418 Move [X19], W31
	419 Move [X31+268], W31
	420 Move W21, 1
	421 Move X22, 0x6A0000
	422 Move X23, 0x665000
	423 Move X24, 0x6A0000
	424 Move X22, [X22+584]
	425 Move X23, [X23+328]
	426 Move X24, [X24+520]
	427 Move X1, [X24]
	428 Add X0, X31, 248
	429 Call NativeArray`1<UTriangle>.Dispose, X0
	430 Move X1, [X22]
	431 Add X0, X31, 232
	432 Call NativeArray`1<int4>.Dispose, X0
	433 Move X1, [X22]
	434 Add X0, X31, 136
	435 Call NativeArray`1<int4>.Dispose, X0
	436 Move X1, [X23]
	437 Add X0, X31, 184
	438 Call NativeArray`1<Int32>.Dispose, X0
	439 Move X1, [X22]
	440 Add X0, X31, 216
	441 Call NativeArray`1<int4>.Dispose, X0
	442 Move X1, [X23]
	443 Add X0, X31, 168
	444 Call NativeArray`1<Int32>.Dispose, X0
	445 Move X1, [X23]
	446 Add X0, X31, 152
	447 Call NativeArray`1<Int32>.Dispose, X0
	448 Move X1, [X22]
	449 Add X0, X31, 200
	450 Call NativeArray`1<int4>.Dispose, X0
	451 Compare W21, 0
	452 JumpIfEqual {458}
	453 Move W8, [X26]
	454 NotImplemented "Instruction CMP not yet implemented."
	455 Move W8, [X19]
	456 NotImplemented "Instruction CMP not yet implemented."
	457 NotImplemented "Instruction CSET not yet implemented."
	458 Move W0, W31
	459 Move X20, [X31+400]
	460 Move X19, [X31+408]
	461 Move X22, [X31+384]
	462 Move X21, [X31+392]
	463 Move X24, [X31+368]
	464 Move X23, [X31+376]
	465 Move X26, [X31+352]
	466 Move X25, [X31+360]
	467 Move X28, [X31+336]
	468 Move X27, [X31+344]
	469 Move X29, [X31+320]
	470 Move X30, [X31+328]
	471 Move D9, [X31+304]
	472 Move D8, [X31+312]
	473 Add X31, X31, 416
	474 Return X0

Method: System.Void .cctor()

Disassembly:
	0x03AB9F0C LDR X8, [X19 + 0x10]
	0x03AB9F10 LDR X9, [X31 + 0x30]
	0x03AB9F14 LDR V0, [X31 + 0x2]
	0x03AB9F18 ADD X8, X8, X26, 0x3, LSL
	0x03AB9F1C STR X9, [X8 + 0x10]
	0x03AB9F20 STR V0, [X8]
	0x03AB9F24 LDRSW X8, [X19 + 0x30]
	0x03AB9F28 CMP X24, X8
	0x03AB9F2C B.LT 0x3AB9DD0
	0x03AB9F30 LDP X20, X19, [X31 + 0xE0]
	0x03AB9F34 LDP X22, X21, [X31 + 0xD0]
	0x03AB9F38 LDP X24, X23, [X31 + 0xC0]
	0x03AB9F3C LDP X26, X25, [X31 + 0xB0]
	0x03AB9F40 LDP X28, X27, [X31 + 0xA0]
	0x03AB9F44 LDR X30, [X31 + 0x90]
	0x03AB9F48 ADD X31, X31, 0xF0
	0x03AB9F4C RET
	0x03AB9F50 SUB X31, X31, 0x40
	0x03AB9F54 STR X30, [X31 + 0x10]
	0x03AB9F58 STP X22, X21, [X31 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x92A000
	005 Move X20, 0x69C000
	006 Move W8, [X19+1166]
	007 Move X20, [X20+2520]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x69C000
	013 Move X0, [X0+2520]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+1166], W8
	017 Move X8, [X20]
	018 Move X9, -50114560
	019 Move V0, [X9+1344]
	020 Move X20, [X31+16]
	021 Move X19, [X31+24]
	022 Move X8, [X8+184]
	023 Move [X8], D0
	024 Move X30, [X31+32]
	025 Return 

