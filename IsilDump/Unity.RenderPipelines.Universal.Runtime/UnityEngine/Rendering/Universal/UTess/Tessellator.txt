Type: UnityEngine.Rendering.Universal.UTess.Tessellator

Method: System.Single FindSplit(UnityEngine.Rendering.Universal.UTess.UHull hull, UnityEngine.Rendering.Universal.UTess.UEvent edge)

Disassembly:
	0x03AB9F5C STP X20, X19, [X31 + 0x30]
	0x03AB9F60 ADRP X22, 0x929000
	0x03AB9F64 LDRB W8, [X22 + 0x494]
	0x03AB9F68 MOV W20, W2
	0x03AB9F6C MOV W19, W1
	0x03AB9F70 MOV X21, X0
	0x03AB9F74 TBNZ X8, 0x0, 0x3AB9F8C
	0x03AB9F78 ADRP X0, 0x69F000
	0x03AB9F7C LDR X0, [X0 + 0x250]
	0x03AB9F80 BL 0x1C16CF4
	0x03AB9F84 MOVZ W8, 0x1
	0x03AB9F88 STRB W8, [X22 + 0x494]
	0x03AB9F8C STP X31, X31, [X31]
	0x03AB9F90 LDR X8, [X21 + 0x10]
	0x03AB9F94 MOVZ W9, 0x18
	0x03AB9F98 SMADDL X8, X20, X9, X8
	0x03AB9F9C LDR V0, [X8]
	0x03AB9FA0 STR V0, [X31]
	0x03AB9FA4 LDR W21, [X8 + 0x10]
	0x03AB9FA8 CMP W21, 0x2
	0x03AB9FAC B.LT 0x3AB9FE4
	0x03AB9FB0 ADRP X22, 0x69F000
	0x03AB9FB4 LDR X22, [X22 + 0x250]
	0x03AB9FB8 MOV W20, W31
	0x03AB9FBC LDR X2, [X22]
	0x03AB9FC0 ADD W1, W20, 0x1
	0x03AB9FC4 ADD X0, X31, 0x0
	0x03AB9FC8 BL 0x2B8C4C0
	0x03AB9FCC CMP W0, W19
	0x03AB9FD0 B.EQ 0x3AB9FEC
	0x03AB9FD4 ADD W8, W20, 0x3
	0x03AB9FD8 ADD W20, W20, 0x2
	0x03AB9FDC CMP W8, W21
	0x03AB9FE0 B.LT 0x3AB9FBC
	0x03AB9FE4 MOVN W0, 0x0
	0x03AB9FE8 B 0x3AB9FFC
	0x03AB9FEC LDR X2, [X22]
	0x03AB9FF0 ADD X0, X31, 0x0
	0x03AB9FF4 MOV W1, W20
	0x03AB9FF8 BL 0x2B8C4C0
	0x03AB9FFC LDP X20, X19, [X31 + 0x30]
	0x03ABA000 LDP X22, X21, [X31 + 0x20]
	0x03ABA004 LDR X30, [X31 + 0x10]
	0x03ABA008 ADD X31, X31, 0x40
	0x03ABA00C RET
	0x03ABA010 SUB X31, X31, 0x40
	0x03ABA014 STP X30, X23, [X31 + 0x10]
	0x03ABA018 STP X22, X21, [X31 + 0x20]
	0x03ABA01C STP X20, X19, [X31 + 0x30]
	0x03ABA020 ADRP X23, 0x928000
	0x03ABA024 ADRP X22, 0x662000
	0x03ABA028 LDRB W8, [X23 + 0x495]
	0x03ABA02C LDR X22, [X22 + 0xD8]
	0x03ABA030 MOV W20, W2
	0x03ABA034 MOV W21, W1
	0x03ABA038 MOV X19, X0
	0x03ABA03C TBNZ X8, 0x0, 0x3ABA060
	0x03ABA040 ADRP X0, 0x69E000
	0x03ABA044 LDR X0, [X0 + 0x298]
	0x03ABA048 BL 0x1C16CF4
	0x03ABA04C ADRP X0, 0x662000
	0x03ABA050 LDR X0, [X0 + 0xD8]
	0x03ABA054 BL 0x1C16CF4
	0x03ABA058 MOVZ W8, 0x1
	0x03ABA05C STRB W8, [X23 + 0x495]
	0x03ABA060 LDR X0, [X22]
	0x03ABA064 CMP W21, W20
	0x03ABA068 CSEL W22, W21, W20, LT
	0x03ABA06C CSEL W21, W21, W20, GT
	0x03ABA070 STP W21, W22, [X31 + 0x4]
	0x03ABA074 ADRP X23, 0x69E000
	0x03ABA078 LDR W8, [X0 + 0xE0]
	0x03ABA07C LDP X20, X19, [X19]
	0x03ABA080 LDR X23, [X23 + 0x298]
	0x03ABA084 CBNZ W8, 0x3ABA08C
	0x03ABA088 BL 0x1C16DFC
	0x03ABA08C BFM X22, X21, 0x20, 0x1F
	0x03ABA090 LDR X5, [X23]
	0x03ABA094 MOV X0, X20
	0x03ABA098 MOV X1, X19
	0x03ABA09C MOV W2, W19
	0x03ABA0A0 MOV X3, X22
	0x03ABA0A4 LDP X20, X19, [X31 + 0x30]
	0x03ABA0A8 LDP X22, X21, [X31 + 0x20]
	0x03ABA0AC LDP X30, X23, [X31 + 0x10]
	0x03ABA0B0 MOV X4, X31
	0x03ABA0B4 ADD X31, X31, 0x40
	0x03ABA0B8 B 0x221E84C
	0x03ABA0BC SUB X31, X31, 0xA0
	0x03ABA0C0 STR X30, [X31 + 0x60]
	0x03ABA0C4 STP X24, X23, [X31 + 0x70]
	0x03ABA0C8 STP X22, X21, [X31 + 0x80]
	0x03ABA0CC STP X20, X19, [X31 + 0x90]

ISIL:
	001 Move [X31-96], D14
	002 Move [X31+16], D13
	003 Move [X31+24], D12
	004 Move [X31+32], D11
	005 Move [X31+40], D10
	006 Move [X31+48], D9
	007 Move [X31+56], D8
	008 Move [X31+64], X30
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X21, 0x92A000
	013 Move W8, [X21+1167]
	014 Move X19, X1
	015 Move X20, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {25}
	020 Move X0, 0x664000
	021 Move X0, [X0+216]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+1167], W8
	025 Move V14, [X20]
	026 Move V8, [X19]
	027 Move X21, 0x664000
	028 Move X21, [X21+216]
	029 NotImplemented "Instruction FCMP not yet implemented."
	030 Move X0, [X21]
	031 Move S9, [X20+4]
	032 Move S13, [X20+8]
	033 Move V10, [X20+12]
	034 Move V11, [X19+4]
	035 Move W8, [X0+224]
	036 Compare W8, 0
	037 JumpIfNotEqual {39}
	038 Call 0x1C17DFC
	039 Move V12, V14
	040 Move X0, [X21]
	041 Move S12, [X19+8]
	042 Move S9, [X19+12]
	043 Move V10, [X19+4]
	044 Move V11, [X20+4]
	045 Move W8, [X0+224]
	046 Compare W8, 0
	047 JumpIfNotEqual {49}
	048 Call 0x1C17DFC
	049 Move V13, V8
	050 Move V8, V14
	051 Move V0, V12
	052 Move V1, V9
	053 Move V2, V13
	054 Move V3, V10
	055 Move V4, V8
	056 Move V5, V11
	057 Move X0, X31
	058 Call ModuleHandle.OrientFast, X0, X1, X2
	059 NotImplemented "Instruction FCMP not yet implemented."
	060 Move V8, [X19+8]
	061 Move V14, [X20+8]
	062 NotImplemented "Instruction FCMP not yet implemented."
	063 Move X0, [X21]
	064 Move S12, [X20]
	065 Move S11, [X20+4]
	066 Move V9, [X20+12]
	067 Move V10, [X19+12]
	068 Move W8, [X0+224]
	069 Compare W8, 0
	070 JumpIfNotEqual {72}
	071 Call 0x1C17DFC
	072 Move V13, V14
	073 Move X0, [X21]
	074 Move V11, [X19+12]
	075 Move S13, [X19]
	076 Move S9, [X19+4]
	077 Move V10, [X20+12]
	078 Move W8, [X0+224]
	079 Compare W8, 0
	080 JumpIfNotEqual {82}
	081 Call 0x1C17DFC
	082 Move V12, V8
	083 Move V8, V14
	084 Move V0, V12
	085 Move V1, V11
	086 Move V2, V13
	087 Move V3, V9
	088 Move V4, V8
	089 Move V5, V10
	090 Move X0, X31
	091 Call ModuleHandle.OrientFast, X0, X1, X2
	092 NotImplemented "Instruction FCMP not yet implemented."
	093 Move W8, [X20+16]
	094 Move W9, [X19+16]
	095 Subtract W8, W8, W9
	096 NotImplemented "Instruction SCVTF not yet implemented."
	097 Move X20, [X31+80]
	098 Move X19, [X31+88]
	099 Move X30, [X31+64]
	100 Move X21, [X31+72]
	101 Move D9, [X31+48]
	102 Move D8, [X31+56]
	103 Move D11, [X31+32]
	104 Move D10, [X31+40]
	105 Move D13, [X31+16]
	106 Move D12, [X31+24]
	107 Move V14, [X31+96]
	108 Return V0

Method: System.Void SetAllocator(Unity.Collections.Allocator allocator)

Disassembly:
	0x03ABA0D0 ADRP X23, 0x928000
	0x03ABA0D4 ADRP X24, 0x69E000

ISIL:
	001 Move [X0+168], W1
	002 Return 

Method: System.Boolean AddPoint(Unity.Collections.NativeArray`1<UnityEngine.Rendering.Universal.UTess.UHull> hulls, System.Int32 hullCount, Unity.Collections.NativeArray`1<Unity.Mathematics.float2> points, Unity.Mathematics.float2 p, System.Int32 idx)

Disassembly:
	0x03ABA0D8 LDRB W8, [X23 + 0x496]
	0x03ABA0DC LDR X24, [X24 + 0x260]
	0x03ABA0E0 MOV W19, W3
	0x03ABA0E4 MOV W21, W2
	0x03ABA0E8 MOV W22, W1
	0x03ABA0EC MOV X20, X0
	0x03ABA0F0 TBNZ X8, 0x0, 0x3ABA108
	0x03ABA0F4 ADRP X0, 0x69E000
	0x03ABA0F8 LDR X0, [X0 + 0x260]
	0x03ABA0FC BL 0x1C16CF4
	0x03ABA100 MOVZ W8, 0x1
	0x03ABA104 STRB W8, [X23 + 0x496]
	0x03ABA108 STP X31, X31, [X31 + 0x40]
	0x03ABA10C STR X31, [X31 + 0x50]
	0x03ABA110 STP X31, X31, [X31 + 0x20]
	0x03ABA114 STR X31, [X31 + 0x30]
	0x03ABA118 STP X31, X31, [X31]
	0x03ABA11C STR X31, [X31 + 0x10]
	0x03ABA120 LDR X8, [X20 + 0x10]
	0x03ABA124 MOVZ W23, 0x18
	0x03ABA128 LDR X3, [X24]
	0x03ABA12C ADD X0, X31, 0x40
	0x03ABA130 SMADDL X9, X22, X23, X8
	0x03ABA134 LDR X10, [X9 + 0x10]
	0x03ABA138 LDR V0, [X9]
	0x03ABA13C NOP
	0x03ABA140 SMADDL X9, X21, X23, X8
	0x03ABA144 SMADDL X8, X19, X23, X8
	0x03ABA148 STR X10, [X31 + 0x50]
	0x03ABA14C STR V0, [X31 + 0x4]
	0x03ABA150 LDR X10, [X9 + 0x10]
	0x03ABA154 LDR V0, [X9]
	0x03ABA158 LDR W1, [X31 + 0x50]
	0x03ABA15C MOV W2, W21
	0x03ABA160 STR X10, [X31 + 0x30]
	0x03ABA164 STR V0, [X31 + 0x2]
	0x03ABA168 LDR X9, [X8 + 0x10]
	0x03ABA16C LDR V0, [X8]
	0x03ABA170 ADD W8, W1, 0x1
	0x03ABA174 STR W8, [X31 + 0x50]
	0x03ABA178 STR X9, [X31 + 0x10]
	0x03ABA17C STR V0, [X31]
	0x03ABA180 BL 0x2B8C500
	0x03ABA184 LDR W1, [X31 + 0x50]
	0x03ABA188 LDR X3, [X24]
	0x03ABA18C ADD X0, X31, 0x40
	0x03ABA190 MOV W2, W19
	0x03ABA194 ADD W8, W1, 0x1
	0x03ABA198 STR W8, [X31 + 0x50]
	0x03ABA19C BL 0x2B8C500
	0x03ABA1A0 LDR W1, [X31 + 0x30]
	0x03ABA1A4 LDR X3, [X24]
	0x03ABA1A8 ADD X0, X31, 0x20
	0x03ABA1AC MOV W2, W19
	0x03ABA1B0 ADD W8, W1, 0x1
	0x03ABA1B4 STR W8, [X31 + 0x30]
	0x03ABA1B8 BL 0x2B8C500
	0x03ABA1BC LDR W1, [X31 + 0x30]
	0x03ABA1C0 LDR X3, [X24]
	0x03ABA1C4 ADD X0, X31, 0x20
	0x03ABA1C8 MOV W2, W22
	0x03ABA1CC ADD W8, W1, 0x1
	0x03ABA1D0 STR W8, [X31 + 0x30]
	0x03ABA1D4 BL 0x2B8C500
	0x03ABA1D8 LDR W1, [X31 + 0x10]
	0x03ABA1DC LDR X3, [X24]
	0x03ABA1E0 ADD X0, X31, 0x0
	0x03ABA1E4 MOV W2, W22
	0x03ABA1E8 ADD W8, W1, 0x1
	0x03ABA1EC STR W8, [X31 + 0x10]
	0x03ABA1F0 BL 0x2B8C500
	0x03ABA1F4 LDR W1, [X31 + 0x10]
	0x03ABA1F8 LDR X3, [X24]
	0x03ABA1FC ADD X0, X31, 0x0
	0x03ABA200 MOV W2, W21
	0x03ABA204 ADD W8, W1, 0x1
	0x03ABA208 STR W8, [X31 + 0x10]
	0x03ABA20C BL 0x2B8C500
	0x03ABA210 LDR X8, [X20 + 0x10]
	0x03ABA214 LDR X9, [X31 + 0x50]
	0x03ABA218 LDR V0, [X31 + 0x4]
	0x03ABA21C LDR X30, [X31 + 0x60]
	0x03ABA220 NOP
	0x03ABA224 SMADDL X8, X22, X23, X8
	0x03ABA228 STR X9, [X8 + 0x10]
	0x03ABA22C STR V0, [X8]
	0x03ABA230 LDR X8, [X20 + 0x10]
	0x03ABA234 LDR X9, [X31 + 0x30]
	0x03ABA238 LDR V0, [X31 + 0x2]
	0x03ABA23C NOP
	0x03ABA240 SMADDL X8, X21, X23, X8
	0x03ABA244 STR X9, [X8 + 0x10]
	0x03ABA248 STR V0, [X8]
	0x03ABA24C LDR X8, [X20 + 0x10]
	0x03ABA250 LDR X9, [X31 + 0x10]
	0x03ABA254 LDR V0, [X31]
	0x03ABA258 LDP X22, X21, [X31 + 0x80]
	0x03ABA25C NOP
	0x03ABA260 SMADDL X8, X19, X23, X8
	0x03ABA264 LDP X20, X19, [X31 + 0x90]
	0x03ABA268 LDP X24, X23, [X31 + 0x70]
	0x03ABA26C STR X9, [X8 + 0x10]
	0x03ABA270 STR V0, [X8]
	0x03ABA274 ADD X31, X31, 0xA0
	0x03ABA278 RET
	0x03ABA27C SUB X31, X31, 0x70
	0x03ABA280 STR X30, [X31 + 0x10]
	0x03ABA284 STP X28, X27, [X31 + 0x20]
	0x03ABA288 STP X26, X25, [X31 + 0x30]
	0x03ABA28C STP X24, X23, [X31 + 0x40]
	0x03ABA290 STP X22, X21, [X31 + 0x50]
	0x03ABA294 STP X20, X19, [X31 + 0x60]
	0x03ABA298 ADRP X20, 0x928000
	0x03ABA29C LDRB W8, [X20 + 0x497]
	0x03ABA2A0 MOV W21, W3
	0x03ABA2A4 MOV W22, W2
	0x03ABA2A8 MOV W23, W1
	0x03ABA2AC MOV X19, X0
	0x03ABA2B0 TBNZ X8, 0x0, 0x3ABA2D4
	0x03ABA2B4 ADRP X0, 0x69E000
	0x03ABA2B8 LDR X0, [X0 + 0x250]
	0x03ABA2BC BL 0x1C16CF4
	0x03ABA2C0 ADRP X0, 0x69E000
	0x03ABA2C4 LDR X0, [X0 + 0x260]
	0x03ABA2C8 BL 0x1C16CF4
	0x03ABA2CC MOVZ W8, 0x1
	0x03ABA2D0 STRB W8, [X20 + 0x497]
	0x03ABA2D4 STP X31, X31, [X31]
	0x03ABA2D8 LDR X8, [X19 + 0x10]
	0x03ABA2DC MOVZ W9, 0x18
	0x03ABA2E0 SMADDL X8, X23, X9, X8
	0x03ABA2E4 LDP W27, W25, [X8 + 0x10]
	0x03ABA2E8 LDR V0, [X8]
	0x03ABA2EC SUBS W20, W27, 0x2
	0x03ABA2F0 STR V0, [X31]
	0x03ABA2F4 B.LT 0x3ABA3B4
	0x03ABA2F8 ADRP X28, 0x69E000
	0x03ABA2FC LDR X28, [X28 + 0x250]
	0x03ABA300 SXTW X26, W23
	0x03ABA304 MOVZ W23, 0x1
	0x03ABA308 LDR X2, [X28]
	0x03ABA30C SUB W24, W23, 0x1
	0x03ABA310 ADD X0, X31, 0x0
	0x03ABA314 MOV W1, W24
	0x03ABA318 BL 0x2B8C4C0
	0x03ABA31C CMP W0, W22
	0x03ABA320 B.NE 0x3ABA33C
	0x03ABA324 LDR X2, [X28]
	0x03ABA328 ADD X0, X31, 0x0
	0x03ABA32C MOV W1, W23
	0x03ABA330 BL 0x2B8C4C0
	0x03ABA334 CMP W0, W21
	0x03ABA338 B.EQ 0x3ABA34C
	0x03ABA33C ADD W23, W23, 0x2
	0x03ABA340 CMP W23, W27
	0x03ABA344 B.LT 0x3ABA308
	0x03ABA348 B 0x3ABA3B4
	0x03ABA34C LDR X2, [X28]
	0x03ABA350 ADD X0, X31, 0x0
	0x03ABA354 MOV W1, W20
	0x03ABA358 BL 0x2B8C4C0
	0x03ABA35C ADRP X21, 0x69E000
	0x03ABA360 LDR X21, [X21 + 0x260]
	0x03ABA364 MOV W2, W0
	0x03ABA368 ADD X0, X31, 0x0
	0x03ABA36C MOV W1, W24
	0x03ABA370 LDR X3, [X21]
	0x03ABA374 BL 0x2B8C500
	0x03ABA378 LDR X2, [X28]
	0x03ABA37C SUB W1, W27, 0x1
	0x03ABA380 ADD X0, X31, 0x0
	0x03ABA384 BL 0x2B8C4C0
	0x03ABA388 LDR X3, [X21]
	0x03ABA38C MOV W2, W0
	0x03ABA390 ADD X0, X31, 0x0
	0x03ABA394 MOV W1, W23
	0x03ABA398 BL 0x2B8C500
	0x03ABA39C LDR X8, [X19 + 0x10]
	0x03ABA3A0 LDR V0, [X31]
	0x03ABA3A4 MOVZ W9, 0x18
	0x03ABA3A8 MADD X8, X26, X9, X8
	0x03ABA3AC STR V0, [X8]
	0x03ABA3B0 STP W20, W25, [X8 + 0x10]
	0x03ABA3B4 LDP X20, X19, [X31 + 0x60]
	0x03ABA3B8 LDP X22, X21, [X31 + 0x50]
	0x03ABA3BC LDP X24, X23, [X31 + 0x40]
	0x03ABA3C0 LDP X26, X25, [X31 + 0x30]
	0x03ABA3C4 LDP X28, X27, [X31 + 0x20]
	0x03ABA3C8 LDR X30, [X31 + 0x10]
	0x03ABA3CC ADD X31, X31, 0x70
	0x03ABA3D0 RET
	0x03ABA3D4 STR X30, [X31 - 0x30]!
	0x03ABA3D8 STP X22, X21, [X31 + 0x10]
	0x03ABA3DC STP X20, X19, [X31 + 0x20]
	0x03ABA3E0 MOV W19, W3
	0x03ABA3E4 MOV W20, W2
	0x03ABA3E8 MOV W21, W1
	0x03ABA3EC MOV X22, X0
	0x03ABA3F0 BL 0x3ABA27C
	0x03ABA3F4 MOV X0, X22
	0x03ABA3F8 MOV W1, W20
	0x03ABA3FC MOV W2, W19
	0x03ABA400 MOV W3, W21
	0x03ABA404 BL 0x3ABA27C
	0x03ABA408 MOV X0, X22
	0x03ABA40C MOV W1, W19
	0x03ABA410 MOV W2, W21
	0x03ABA414 MOV W3, W20
	0x03ABA418 LDP X20, X19, [X31 + 0x20]
	0x03ABA41C LDP X22, X21, [X31 + 0x10]
	0x03ABA420 LDR X30, [X31], #0x30
	0x03ABA424 B 0x3ABA27C
	0x03ABA428 STP X30, X23, [X31 - 0x30]!
	0x03ABA42C STP X22, X21, [X31 + 0x10]
	0x03ABA430 STP X20, X19, [X31 + 0x20]
	0x03ABA434 MOV W19, W2
	0x03ABA438 MOV W20, W1
	0x03ABA43C MOV X21, X0
	0x03ABA440 BL 0x3AB9F50
	0x03ABA444 MOV W22, W0
	0x03ABA448 MOV X0, X21
	0x03ABA44C MOV W1, W19
	0x03ABA450 MOV W2, W20
	0x03ABA454 BL 0x3AB9F50
	0x03ABA458 MOV W23, W0
	0x03ABA45C MOV X0, X21
	0x03ABA460 MOV W1, W20
	0x03ABA464 MOV W2, W19
	0x03ABA468 MOV W3, W22
	0x03ABA46C BL 0x3ABA3D4
	0x03ABA470 MOV X0, X21
	0x03ABA474 MOV W1, W19
	0x03ABA478 MOV W2, W20
	0x03ABA47C MOV W3, W23
	0x03ABA480 BL 0x3ABA3D4
	0x03ABA484 MOV X0, X21
	0x03ABA488 MOV W1, W20
	0x03ABA48C MOV W2, W23
	0x03ABA490 MOV W3, W22
	0x03ABA494 BL 0x3ABA0BC
	0x03ABA498 MOV X0, X21
	0x03ABA49C MOV W1, W19
	0x03ABA4A0 MOV W2, W22
	0x03ABA4A4 LDP X20, X19, [X31 + 0x20]
	0x03ABA4A8 LDP X22, X21, [X31 + 0x10]
	0x03ABA4AC MOV W3, W23
	0x03ABA4B0 LDP X30, X23, [X31], #0x30

ISIL:
	001 Subtract X31, X31, 272
	002 Move [X31+128], D13
	003 Move [X31+136], D12
	004 Move [X31+144], D11
	005 Move [X31+152], D10
	006 Move [X31+160], D9
	007 Move [X31+168], D8
	008 Move [X31+176], X29
	009 Move [X31+184], X30
	010 Move [X31+192], X28
	011 Move [X31+200], X27
	012 Move [X31+208], X26
	013 Move [X31+216], X25
	014 Move [X31+224], X24
	015 Move [X31+232], X23
	016 Move [X31+240], X22
	017 Move [X31+248], X21
	018 Move [X31+256], X20
	019 Move [X31+264], X19
	020 Move [X31+24], X1
	021 Move X21, 0x929000
	022 Move X27, 0x663000
	023 Move W8, [X21+1168]
	024 Move X27, [X27+216]
	025 Move W19, W6
	026 Move V8, V1
	027 Move V9, V0
	028 Move X20, X4
	029 Move W23, W3
	030 Move X24, X2
	031 Move X22, X0
	032 Move TEMP, X8
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfEqual {56}
	036 Move X0, 0x69F000
	037 Move X0, [X0+592]
	038 Call 0x1C17CF4
	039 Move X0, 0x69F000
	040 Move X0, [X0+600]
	041 Call 0x1C17CF4
	042 Move X0, 0x69F000
	043 Move X0, [X0+608]
	044 Call 0x1C17CF4
	045 Move X0, 0x69F000
	046 Move X0, [X0+616]
	047 Call 0x1C17CF4
	048 Move X0, 0x69F000
	049 Move X0, [X0+624]
	050 Call 0x1C17CF4
	051 Move X0, 0x663000
	052 Move X0, [X0+216]
	053 Call 0x1C17CF4
	054 Move W8, 1
	055 Move [X21+1168], W8
	056 Move X0, [X27]
	057 NotImplemented "Instruction MOVI not yet implemented."
	058 Move [X31+112], X31
	059 Move [X31+80], V0
	060 Move [X31+88], V0
	061 Move [X31+48], V0
	062 Move [X31+56], V0
	063 Move X25, 0x69F000
	064 Move X21, 0x69F000
	065 Move W8, [X0+224]
	066 Move X25, [X25+616]
	067 Move X21, [X21+624]
	068 Compare W8, 0
	069 JumpIfNotEqual {71}
	070 Call 0x1C17DFC
	071 Move X26, [X31+24]
	072 Move X4, [X25]
	073 Move X1, X24
	074 Move W2, W23
	075 Move X0, X26
	076 Move V0, V9
	077 Move V1, V8
	078 Move X3, X31
	079 Call ModuleHandle.GetLower, X0, X1, X2, X3
	080 Move X4, [X21]
	081 Move W25, W0
	082 Move X0, X26
	083 Move X1, X24
	084 Move W2, W23
	085 Move V0, V9
	086 Move V1, V8
	087 Move X3, X31
	088 Call 0x221FDC4, X0, X1, X2, X3
	089 Or W8, W25, W0
	090 Move TEMP, X8
	091 And TEMP, TEMP, -2147483648
	092 Compare TEMP, -2147483648
	093 JumpIfEqual {252}
	094 NotImplemented "Instruction CMP not yet implemented."
	095 Move X10, W0
	096 Move X9, W25
	097 Move [X31+16], X10
	098 Move X25, 0x69F000
	099 Move X25, [X25+592]
	100 Add X8, X31, 48
	101 Move X21, X27
	102 Add X23, X8, 24
	103 Add X24, X8, 48
	104 Move W29, 12
	105 Move X8, [X31+24]
	106 Move W10, 72
	107 Add X0, X31, 48
	108 Move W2, 72
	109 NotImplemented "Instruction MADD not yet implemented."
	110 Move [X31+32], X1
	111 Move [X31+40], X9
	112 Call 0x3EB2B30
	113 Move W26, [X31+88]
	114 NotImplemented "Instruction CMP not yet implemented."
	115 Move X2, [X25]
	116 Subtract W28, W26, 2
	117 Move X0, X23
	118 Move W1, W28
	119 Call 0x2B8D4C0, X0, X1
	120 Add X8, X20, W0
	121 Move X2, [X25]
	122 Move S10, [X8]
	123 Move S11, [X8+4]
	124 Subtract W27, W26, 1
	125 Move X0, X23
	126 Move W1, W27
	127 Call 0x2B8D4C0, X0, X1
	128 Move W8, W0
	129 Move X0, [X21]
	130 Add X8, X20, W8
	131 Move S13, [X8]
	132 Move S12, [X8+4]
	133 Move W9, [X0+224]
	134 Compare W9, 0
	135 JumpIfNotEqual {137}
	136 Call 0x1C17DFC
	137 Move V0, V10
	138 Move V1, V11
	139 Move V2, V13
	140 Move V3, V12
	141 Move V4, V9
	142 Move V5, V8
	143 Move X0, X31
	144 Call ModuleHandle.OrientFast, X0, X1, X2
	145 NotImplemented "Instruction FCMP not yet implemented."
	146 Move X2, [X25]
	147 Move X0, X23
	148 Move W1, W27
	149 Call 0x2B8D4C0, X0, X1
	150 Move X2, [X25]
	151 Move W26, W0
	152 Move X0, X23
	153 Move W1, W28
	154 Call 0x2B8D4C0, X0, X1
	155 NotImplemented "Instruction LDRSW not yet implemented."
	156 Move X9, [X22+32]
	157 Add W10, W27, 1
	158 NotImplemented "Instruction CMP not yet implemented."
	159 Add W10, W8, 1
	160 NotImplemented "Instruction MADD not yet implemented."
	161 Move [X22+48], W10
	162 Move [X8], W26
	163 Move [X8+4], W0
	164 Move W26, W27
	165 Move [X8+8], W19
	166 Move W26, 1
	167 Move W8, [X31+84]
	168 Add W9, W26, 1
	169 Move [X31+88], W9
	170 NotImplemented "Instruction CMP not yet implemented."
	171 Move X8, 0x69F000
	172 Move X8, [X8+608]
	173 Move X0, X23
	174 Move W1, W26
	175 Move W2, W19
	176 Move X3, [X8]
	177 Call 0x2B8D500, X0, X1, X2
	178 Move W26, [X31+112]
	179 NotImplemented "Instruction CMP not yet implemented."
	180 Move X2, [X25]
	181 Subtract W28, W26, 2
	182 Move X0, X24
	183 Move W1, W28
	184 Call 0x2B8D4C0, X0, X1
	185 Add X8, X20, W0
	186 Move X2, [X25]
	187 Move S10, [X8]
	188 Move S11, [X8+4]
	189 Subtract W27, W26, 1
	190 Move X0, X24
	191 Move W1, W27
	192 Call 0x2B8D4C0, X0, X1
	193 Move W8, W0
	194 Move X0, [X21]
	195 Add X8, X20, W8
	196 Move S13, [X8]
	197 Move S12, [X8+4]
	198 Move W9, [X0+224]
	199 Compare W9, 0
	200 JumpIfNotEqual {202}
	201 Call 0x1C17DFC
	202 Move V0, V10
	203 Move V1, V11
	204 Move V2, V13
	205 Move V3, V12
	206 Move V4, V9
	207 Move V5, V8
	208 Move X0, X31
	209 Call ModuleHandle.OrientFast, X0, X1, X2
	210 NotImplemented "Instruction FCMP not yet implemented."
	211 Move X2, [X25]
	212 Move X0, X24
	213 Move W1, W28
	214 Call 0x2B8D4C0, X0, X1
	215 Move X2, [X25]
	216 Move W26, W0
	217 Move X0, X24
	218 Move W1, W27
	219 Call 0x2B8D4C0, X0, X1
	220 NotImplemented "Instruction LDRSW not yet implemented."
	221 Move X9, [X22+32]
	222 Add W10, W27, 1
	223 NotImplemented "Instruction CMP not yet implemented."
	224 Add W10, W8, 1
	225 NotImplemented "Instruction MADD not yet implemented."
	226 Move [X22+48], W10
	227 Move [X8], W26
	228 Move [X8+4], W0
	229 Move W26, W27
	230 Move [X8+8], W19
	231 Move W26, 1
	232 Move W8, [X31+108]
	233 Add W9, W26, 1
	234 Move [X31+112], W9
	235 NotImplemented "Instruction CMP not yet implemented."
	236 Move X8, 0x69F000
	237 Move X8, [X8+608]
	238 Move X0, X24
	239 Move W1, W26
	240 Move W2, W19
	241 Move X3, [X8]
	242 Call 0x2B8D500, X0, X1, X2
	243 Move X0, [X31+32]
	244 Add X1, X31, 48
	245 Move W2, 72
	246 Call 0x3EB2B30
	247 Move X9, [X31+40]
	248 Move X8, [X31+16]
	249 Add X9, X9, 1
	250 NotImplemented "Instruction CMP not yet implemented."
	251 Move W0, 1
	252 Move W0, W31
	253 Move X20, [X31+256]
	254 Move X19, [X31+264]
	255 Move X22, [X31+240]
	256 Move X21, [X31+248]
	257 Move X24, [X31+224]
	258 Move X23, [X31+232]
	259 Move X26, [X31+208]
	260 Move X25, [X31+216]
	261 Move X28, [X31+192]
	262 Move X27, [X31+200]
	263 Move X29, [X31+176]
	264 Move X30, [X31+184]
	265 Move D9, [X31+160]
	266 Move D8, [X31+168]
	267 Move D11, [X31+144]
	268 Move D10, [X31+152]
	269 Move D13, [X31+128]
	270 Move D12, [X31+136]
	271 Add X31, X31, 272
	272 Return X0

Method: System.Void InsertHull(Unity.Collections.NativeArray`1<UnityEngine.Rendering.Universal.UTess.UHull> Hulls, System.Int32 Pos, ref System.Int32 Count, UnityEngine.Rendering.Universal.UTess.UHull Value)

Disassembly:
	0x03ABA4B4 B 0x3ABA0BC
	0x03ABA4B8 STP D15, D14, [X31 - 0x90]!
	0x03ABA4BC STP D13, D12, [X31 + 0x10]
	0x03ABA4C0 STP D11, D10, [X31 + 0x20]
	0x03ABA4C4 STP D9, D8, [X31 + 0x30]
	0x03ABA4C8 STP X30, X27, [X31 + 0x40]
	0x03ABA4CC STP X26, X25, [X31 + 0x50]
	0x03ABA4D0 STP X24, X23, [X31 + 0x60]
	0x03ABA4D4 STP X22, X21, [X31 + 0x70]
	0x03ABA4D8 STP X20, X19, [X31 + 0x80]
	0x03ABA4DC ADRP X26, 0x928000
	0x03ABA4E0 LDRB W8, [X26 + 0x498]
	0x03ABA4E4 MOV W22, W7
	0x03ABA4E8 MOV W20, W6
	0x03ABA4EC MOV W25, W5
	0x03ABA4F0 MOV X19, X4
	0x03ABA4F4 MOV X21, X3
	0x03ABA4F8 MOV X23, X1
	0x03ABA4FC MOV X24, X0
	0x03ABA500 TBNZ X8, 0x0, 0x3ABA518
	0x03ABA504 ADRP X0, 0x662000
	0x03ABA508 LDR X0, [X0 + 0xD8]
	0x03ABA50C BL 0x1C16CF4
	0x03ABA510 MOVZ W8, 0x1
	0x03ABA514 STRB W8, [X26 + 0x498]
	0x03ABA518 MOV X0, X24
	0x03ABA51C MOV W1, W25
	0x03ABA520 MOV W2, W20
	0x03ABA524 BL 0x3AB9F50
	0x03ABA528 TBNZ X0, 0x1F, 0x3ABA604
	0x03ABA52C MOV W26, W0
	0x03ABA530 CMP W20, W25
	0x03ABA534 B.GE 0x3ABA544
	0x03ABA538 MOV W27, W22
	0x03ABA53C MOV W22, W25
	0x03ABA540 B 0x3ABA554
	0x03ABA544 MOV W27, W26
	0x03ABA548 MOV W26, W22
	0x03ABA54C MOV W22, W20

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 NotImplemented "Instruction LDRSW not yet implemented."
	009 Subtract W8, W1, 1
	010 NotImplemented "Instruction CMP not yet implemented."
	011 Move X20, X4
	012 Move X19, X3
	013 Move X21, X0
	014 NotImplemented "Instruction CMP not yet implemented."
	015 Move W8, 72
	016 Move X24, W2
	017 NotImplemented "Instruction MADD not yet implemented."
	018 Subtract X22, X0, 72
	019 Move W2, 72
	020 Move X1, X22
	021 Subtract X23, X23, 1
	022 Call 0x3EB2AC0
	023 NotImplemented "Instruction CMP not yet implemented."
	024 Move X0, X22
	025 Move X24, W2
	026 Move W8, 72
	027 NotImplemented "Instruction MADD not yet implemented."
	028 Move W2, 72
	029 Move X1, X20
	030 Call 0x3EB2B30
	031 Move W8, [X19]
	032 Add W8, W8, 1
	033 Move [X19], W8
	034 Move X20, [X31+48]
	035 Move X19, [X31+56]
	036 Move X22, [X31+32]
	037 Move X21, [X31+40]
	038 Move X24, [X31+16]
	039 Move X23, [X31+24]
	040 Move X30, [X31+64]
	041 Return 

Method: System.Void EraseHull(Unity.Collections.NativeArray`1<UnityEngine.Rendering.Universal.UTess.UHull> Hulls, System.Int32 Pos, ref System.Int32 Count)

Disassembly:
	0x03ABA550 MOV W20, W25
	0x03ABA554 MOV X0, X24
	0x03ABA558 MOV W1, W20
	0x03ABA55C MOV W2, W22
	0x03ABA560 BL 0x3ABA010
	0x03ABA564 ADDS W31, W0, 0x1
	0x03ABA568 B.NE 0x3ABA604
	0x03ABA56C ADRP X12, 0x662000
	0x03ABA570 LDR X12, [X12 + 0xD8]
	0x03ABA574 ADD X8, X23, W20, 0x3, SXTW
	0x03ABA578 ADD X9, X23, W22, 0x3, SXTW
	0x03ABA57C ADD X10, X23, W26, 0x3, SXTW
	0x03ABA580 LDR X0, [X12]
	0x03ABA584 ADD X11, X23, W27, 0x3, SXTW
	0x03ABA588 LDP S15, S14, [X8]
	0x03ABA58C LDP S13, S12, [X9]
	0x03ABA590 LDP S11, S9, [X10]
	0x03ABA594 LDR W8, [X0 + 0xE0]
	0x03ABA598 LDP S10, S8, [X11]
	0x03ABA59C CBNZ W8, 0x3ABA5A4
	0x03ABA5A0 BL 0x1C16DFC
	0x03ABA5A4 MOV V0.16B, V15.16B
	0x03ABA5A8 MOV V1.16B, V14.16B
	0x03ABA5AC MOV V2.16B, V13.16B
	0x03ABA5B0 MOV V3.16B, V12.16B
	0x03ABA5B4 MOV V4.16B, V11.16B

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move W8, [X3]
	006 NotImplemented "Instruction CMP not yet implemented."
	007 Subtract W8, W8, 1
	008 Move X19, X3
	009 NotImplemented "Instruction CMP not yet implemented."
	010 Move W8, 72
	011 Move X21, W2
	012 NotImplemented "Instruction SMADDL not yet implemented."
	013 Add X20, X0, 72
	014 Move W2, 72
	015 Move X1, X20
	016 Add X21, X21, 1
	017 Call 0x3EB2AC0
	018 Move W8, [X19]
	019 Move X0, X20
	020 Subtract W8, W8, 1
	021 NotImplemented "Instruction CMP not yet implemented."
	022 Move [X19], W8
	023 Move X20, [X31+16]
	024 Move X19, [X31+24]
	025 Move X30, [X31+32]
	026 Move X21, [X31+40]
	027 Return 

Method: System.Boolean SplitHulls(Unity.Collections.NativeArray`1<UnityEngine.Rendering.Universal.UTess.UHull> hulls, ref System.Int32 hullCount, Unity.Collections.NativeArray`1<Unity.Mathematics.float2> points, UnityEngine.Rendering.Universal.UTess.UEvent evt)

Disassembly:
	0x03ABA5B8 MOV V5.16B, V9.16B
	0x03ABA5BC MOV V6.16B, V10.16B
	0x03ABA5C0 MOV V7.16B, V8.16B
	0x03ABA5C4 MOV X0, X31
	0x03ABA5C8 BL 0x3A23B74
	0x03ABA5CC TBZ X0, 0x0, 0x3ABA604
	0x03ABA5D0 LDRSW X8, [X19]
	0x03ABA5D4 LDR W9, [X21 + 0x8]
	0x03ABA5D8 ADD W10, W8, 0x2
	0x03ABA5DC CMP W10, W9
	0x03ABA5E0 B.GE 0x3ABA630
	0x03ABA5E4 ADD W9, W8, 0x1
	0x03ABA5E8 STR W9, [X19]
	0x03ABA5EC LDR X9, [X21]
	0x03ABA5F0 STR W20, [X9, X8, LSL #2]
	0x03ABA5F4 LDRSW X8, [X19]
	0x03ABA5F8 ADD W10, W8, 0x1
	0x03ABA5FC STR W10, [X19]
	0x03ABA600 STR W22, [X9, X8, LSL #2]
	0x03ABA604 MOVZ W0, 0x1
	0x03ABA608 LDP X20, X19, [X31 + 0x80]
	0x03ABA60C LDP X22, X21, [X31 + 0x70]
	0x03ABA610 LDP X24, X23, [X31 + 0x60]
	0x03ABA614 LDP X26, X25, [X31 + 0x50]
	0x03ABA618 LDP X30, X27, [X31 + 0x40]
	0x03ABA61C LDP D9, D8, [X31 + 0x30]
	0x03ABA620 LDP D11, D10, [X31 + 0x20]
	0x03ABA624 LDP D13, D12, [X31 + 0x10]
	0x03ABA628 LDP D15, D14, [X31], #0x90
	0x03ABA62C RET
	0x03ABA630 MOV W0, W31
	0x03ABA634 B 0x3ABA608
	0x03ABA638 SUB X31, X31, 0x80
	0x03ABA63C STR X30, [X31 + 0x20]
	0x03ABA640 STP X28, X27, [X31 + 0x30]
	0x03ABA644 STP X26, X25, [X31 + 0x40]
	0x03ABA648 STP X24, X23, [X31 + 0x50]
	0x03ABA64C STP X22, X21, [X31 + 0x60]
	0x03ABA650 STP X20, X19, [X31 + 0x70]
	0x03ABA654 ADRP X22, 0x928000
	0x03ABA658 ADRP X21, 0x69E000
	0x03ABA65C LDRB W8, [X22 + 0x499]
	0x03ABA660 LDR X21, [X21 + 0x2A0]
	0x03ABA664 MOV X19, X1
	0x03ABA668 MOV X20, X0
	0x03ABA66C TBNZ X8, 0x0, 0x3ABA690
	0x03ABA670 ADRP X0, 0x69E000
	0x03ABA674 LDR X0, [X0 + 0x250]
	0x03ABA678 BL 0x1C16CF4
	0x03ABA67C ADRP X0, 0x69E000
	0x03ABA680 LDR X0, [X0 + 0x2A0]
	0x03ABA684 BL 0x1C16CF4
	0x03ABA688 MOVZ W8, 0x1
	0x03ABA68C STRB W8, [X22 + 0x499]
	0x03ABA690 STP X31, X31, [X31 + 0x10]
	0x03ABA694 STP X31, X31, [X31]
	0x03ABA698 LDR W8, [X20 + 0x70]
	0x03ABA69C LDR W2, [X20 + 0xA8]
	0x03ABA6A0 LDR X4, [X21]
	0x03ABA6A4 ADD X0, X31, 0x10
	0x03ABA6A8 ADD W9, W8, 0x1
	0x03ABA6AC MUL W1, W9, W8
	0x03ABA6B0 MOVZ W3, 0x1
	0x03ABA6B4 BL 0x23FCDA4
	0x03ABA6B8 STR W31, [X19]
	0x03ABA6BC LDR W23, [X20 + 0x18]
	0x03ABA6C0 CMP W23, 0x1
	0x03ABA6C4 B.LT 0x3ABA770
	0x03ABA6C8 ADRP X25, 0x69E000
	0x03ABA6CC LDR X25, [X25 + 0x250]
	0x03ABA6D0 MOV X24, X31
	0x03ABA6D4 MOVZ W26, 0x18
	0x03ABA6D8 MOVZ W27, 0xC
	0x03ABA6DC LDR X8, [X20 + 0x10]
	0x03ABA6E0 NOP
	0x03ABA6E4 MADD X8, X24, X26, X8
	0x03ABA6E8 LDR V0, [X8]
	0x03ABA6EC STR V0, [X31]
	0x03ABA6F0 LDR W28, [X8 + 0x10]
	0x03ABA6F4 CMP W28, 0x1
	0x03ABA6F8 B.LT 0x3ABA764
	0x03ABA6FC MOV W21, W31
	0x03ABA700 LDR X2, [X25]
	0x03ABA704 ADD X0, X31, 0x0
	0x03ABA708 MOV W1, W21
	0x03ABA70C BL 0x2B8C4C0
	0x03ABA710 LDR X2, [X25]
	0x03ABA714 ADD W21, W21, 0x1
	0x03ABA718 MOV W22, W0
	0x03ABA71C ADD X0, X31, 0x0
	0x03ABA720 MOV W1, W21
	0x03ABA724 BL 0x2B8C4C0
	0x03ABA728 CMP W22, W0
	0x03ABA72C CSEL W8, W22, W0, LT
	0x03ABA730 CMP X24, W8, SXTW
	0x03ABA734 B.GE 0x3ABA758
	0x03ABA738 LDRSW X8, [X19]
	0x03ABA73C ADD W9, W8, 0x1
	0x03ABA740 STR W9, [X19]
	0x03ABA744 LDR X9, [X31 + 0x10]
	0x03ABA748 NOP
	0x03ABA74C MADD X8, X8, X27, X9
	0x03ABA750 STP W24, W22, [X8]
	0x03ABA754 STR W0, [X8 + 0x8]
	0x03ABA758 ADD W21, W21, 0x1
	0x03ABA75C CMP W21, W28
	0x03ABA760 B.LT 0x3ABA700
	0x03ABA764 ADD X24, X24, 0x1
	0x03ABA768 CMP X24, X23
	0x03ABA76C B.NE 0x3ABA6DC
	0x03ABA770 LDP X0, X1, [X31 + 0x10]
	0x03ABA774 LDP X20, X19, [X31 + 0x70]
	0x03ABA778 LDP X22, X21, [X31 + 0x60]
	0x03ABA77C LDP X24, X23, [X31 + 0x50]
	0x03ABA780 LDP X26, X25, [X31 + 0x40]
	0x03ABA784 LDP X28, X27, [X31 + 0x30]
	0x03ABA788 LDR X30, [X31 + 0x20]
	0x03ABA78C ADD X31, X31, 0x80
	0x03ABA790 RET
	0x03ABA794 SUB X31, X31, 0x120
	0x03ABA798 STP D15, D14, [X31 + 0x80]
	0x03ABA79C STP D13, D12, [X31 + 0x90]
	0x03ABA7A0 STP D11, D10, [X31 + 0xA0]
	0x03ABA7A4 STP D9, D8, [X31 + 0xB0]
	0x03ABA7A8 STP X29, X30, [X31 + 0xC0]
	0x03ABA7AC STP X28, X27, [X31 + 0xD0]
	0x03ABA7B0 STP X26, X25, [X31 + 0xE0]
	0x03ABA7B4 STP X24, X23, [X31 + 0xF0]
	0x03ABA7B8 STP X22, X21, [X31 + 0x100]
	0x03ABA7BC STP X20, X19, [X31 + 0x110]
	0x03ABA7C0 ADRP X19, 0x928000
	0x03ABA7C4 LDRB W8, [X19 + 0x49A]
	0x03ABA7C8 MOV X22, X4
	0x03ABA7CC MOV X23, X3
	0x03ABA7D0 MOV X20, X2
	0x03ABA7D4 MOV X24, X1
	0x03ABA7D8 MOV X21, X0
	0x03ABA7DC TBNZ X8, 0x0, 0x3ABA818
	0x03ABA7E0 ADRP X0, 0x69E000
	0x03ABA7E4 LDR X0, [X0 + 0x250]
	0x03ABA7E8 BL 0x1C16CF4
	0x03ABA7EC ADRP X0, 0x662000
	0x03ABA7F0 LDR X0, [X0 + 0xD8]
	0x03ABA7F4 BL 0x1C16CF4
	0x03ABA7F8 ADRP X0, 0x663000
	0x03ABA7FC LDR X0, [X0 + 0x148]
	0x03ABA800 BL 0x1C16CF4
	0x03ABA804 ADRP X0, 0x663000
	0x03ABA808 LDR X0, [X0 + 0x138]
	0x03ABA80C BL 0x1C16CF4
	0x03ABA810 MOVZ W8, 0x1
	0x03ABA814 STRB W8, [X19 + 0x49A]
	0x03ABA818 STP X31, X31, [X31 + 0x70]
	0x03ABA81C STP X31, X31, [X31 + 0x50]
	0x03ABA820 STR X31, [X31 + 0x60]
	0x03ABA824 STP X31, X31, [X31 + 0x30]
	0x03ABA828 STR X31, [X31 + 0x40]
	0x03ABA82C LDR W8, [X21 + 0x30]
	0x03ABA830 CBZ W8, 0x3ABAA28
	0x03ABA834 ADRP X8, 0x663000
	0x03ABA838 LDR X8, [X8 + 0x138]
	0x03ABA83C LDR W9, [X21 + 0x70]
	0x03ABA840 LDR W2, [X21 + 0xA8]
	0x03ABA844 ADD X0, X31, 0x70
	0x03ABA848 LDR X4, [X8]
	0x03ABA84C ADD W8, W9, 0x1
	0x03ABA850 MUL W1, W8, W9
	0x03ABA854 MOVZ W3, 0x1
	0x03ABA858 BL 0x23D58AC

ISIL:
	001 Subtract X31, X31, 416
	002 Move [X31+320], X29
	003 Move [X31+328], X30
	004 Move [X31+336], X28
	005 Move [X31+344], X27
	006 Move [X31+352], X26
	007 Move [X31+360], X25
	008 Move [X31+368], X24
	009 Move [X31+376], X23
	010 Move [X31+384], X22
	011 Move [X31+392], X21
	012 Move [X31+400], X20
	013 Move [X31+408], X19
	014 Move X20, 0x929000
	015 Move X19, 0x663000
	016 Move W8, [X20+1169]
	017 Move X19, [X19+216]
	018 Move X24, X6
	019 Move X25, X3
	020 Move X26, X2
	021 Move X21, X1
	022 Move X22, X0
	023 Add X29, X31, 128
	024 Move TEMP, X8
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {45}
	028 Move X0, 0x69F000
	029 Move X0, [X0+632]
	030 Call 0x1C17CF4
	031 Move X0, 0x69F000
	032 Move X0, [X0+592]
	033 Call 0x1C17CF4
	034 Move X0, 0x69F000
	035 Move X0, [X0+608]
	036 Call 0x1C17CF4
	037 Move X0, 0x69F000
	038 Move X0, [X0+640]
	039 Call 0x1C17CF4
	040 Move X0, 0x663000
	041 Move X0, [X0+216]
	042 Call 0x1C17CF4
	043 Move W8, 1
	044 Move [X20+1169], W8
	045 NotImplemented "Instruction MOVI not yet implemented."
	046 Move [X31+272], X31
	047 Move [X31+192], X31
	048 Move [X29+112], V0
	049 Move [X29+120], V0
	050 Move [X29+80], V0
	051 Move [X29+88], V0
	052 Move [X29+32], V0
	053 Move [X29+40], V0
	054 Move [X31+128], V0
	055 Move [X31+136], V0
	056 Move X8, [X24+16]
	057 Move V0, [X24]
	058 Move X0, [X19]
	059 Move W23, [X25]
	060 Move [X31+112], X8
	061 Move [X31+6], V0
	062 Move X19, 0x69F000
	063 Move W8, [X0+224]
	064 Move X19, [X19+640]
	065 Compare W8, 0
	066 JumpIfNotEqual {68}
	067 Call 0x1C17DFC
	068 Move V0, [X31+6]
	069 Move X8, [X31+112]
	070 Move X5, [X19]
	071 Add X3, X31, 288
	072 Move X0, X21
	073 Move X1, X26
	074 Move W2, W23
	075 Move X4, X31
	076 Move [X29+10], V0
	077 Move [X31+304], X8
	078 Call 0x221FA04, X0, X1, X2, X3
	079 Move W23, W0
	080 Move TEMP, X0
	081 And TEMP, TEMP, -2147483648
	082 Compare TEMP, -2147483648
	083 JumpIfEqual {181}
	084 Move [X31+8], X26
	085 Move [X31+16], X25
	086 Move X20, 0x69F000
	087 Move X28, 0x69F000
	088 Move X19, 0x69F000
	089 Move X20, [X20+592]
	090 Move X28, [X28+632]
	091 Move X19, [X19+608]
	092 Move W8, 72
	093 NotImplemented "Instruction UMADDL not yet implemented."
	094 Add X0, X31, 208
	095 Move W2, 72
	096 Move X1, X25
	097 Add X26, X31, 208
	098 Call 0x3EB2B30
	099 Move V0, [X24]
	100 Move W8, [X31+272]
	101 Move X2, [X20]
	102 Add X26, X26, 48
	103 Move [X31+8], V0
	104 Move W27, [X24+16]
	105 Subtract W1, W8, 1
	106 Move X0, X26
	107 Move [X31+144], W27
	108 Call 0x2B8D4C0, X0, X1
	109 Move W4, [X22+108]
	110 Move X1, [X22+72]
	111 Move X2, [X22+80]
	112 Move X5, [X28]
	113 Move W24, W0
	114 Multiply W3, W4, W27
	115 Add X0, X31, 288
	116 Move [X31+288], X31
	117 Move [X31+296], X31
	118 Call 0x2B8D120, X0, X1, X2, X3
	119 Move W8, [X31+272]
	120 Move V0, [X29+10]
	121 NotImplemented "Instruction CMP not yet implemented."
	122 Move [X29+3], V0
	123 Move [X31+192], W8
	124 Add X8, X31, 128
	125 Move W27, W31
	126 Add X28, X8, 48
	127 Move X2, [X20]
	128 Move X0, X26
	129 Move W1, W27
	130 Call 0x2B8D4C0, X0, X1
	131 Move X3, [X19]
	132 Move W2, W0
	133 Move X0, X28
	134 Move W1, W27
	135 Call 0x2B8D500, X0, X1, X2
	136 Move W8, [X31+192]
	137 Add W27, W27, 1
	138 NotImplemented "Instruction CMP not yet implemented."
	139 Move X3, [X19]
	140 Move X0, X26
	141 Move W1, W31
	142 Move W2, W24
	143 Call 0x2B8D500, X0, X1, X2
	144 Move W20, 1
	145 Add X1, X31, 208
	146 Move W2, 72
	147 Move X0, X25
	148 Move [X31+272], W20
	149 Call 0x3EB2B30
	150 Move X9, 0x69F000
	151 Move X1, [X22+56]
	152 Move X2, [X22+64]
	153 Move W8, [X31+144]
	154 Move W4, [X22+108]
	155 Move X9, [X9+632]
	156 Add X0, X31, 288
	157 Move [X31+288], X31
	158 Move [X31+296], X31
	159 Multiply W3, W4, W8
	160 Move X5, [X9]
	161 Call 0x2B8D120, X0, X1, X2, X3
	162 Move V0, [X29+10]
	163 Move X3, [X19]
	164 Add X8, X31, 128
	165 Add X0, X8, 24
	166 Move W1, W31
	167 Move W2, W24
	168 Move [X29+24], V0
	169 Call 0x2B8D500, X0, X1, X2
	170 Add X0, X31, 24
	171 Add X1, X31, 128
	172 Move W2, 72
	173 Move [X31+168], W20
	174 Call 0x3EB2AC0
	175 Move X1, [X31+8]
	176 Move X3, [X31+16]
	177 Add W2, W23, 1
	178 Add X4, X31, 24
	179 Move X0, X21
	180 Call Tessellator.InsertHull, X0, X1, X2, X3
	181 NotImplemented "Instruction ORN not yet implemented."
	182 Move X20, [X31+400]
	183 Move X19, [X31+408]
	184 Move X22, [X31+384]
	185 Move X21, [X31+392]
	186 Move X24, [X31+368]
	187 Move X23, [X31+376]
	188 Move X26, [X31+352]
	189 Move X25, [X31+360]
	190 Move X28, [X31+336]
	191 Move X27, [X31+344]
	192 Move X29, [X31+320]
	193 Move X30, [X31+328]
	194 Move W0, W8
	195 ShiftRight W0, 31
	196 And W0, W0, 0x7FFFFFFF
	197 Add X31, X31, 416
	198 Return X0

Method: System.Boolean MergeHulls(Unity.Collections.NativeArray`1<UnityEngine.Rendering.Universal.UTess.UHull> hulls, ref System.Int32 hullCount, Unity.Collections.NativeArray`1<Unity.Mathematics.float2> points, UnityEngine.Rendering.Universal.UTess.UEvent evt)

Disassembly:
	0x03ABA85C STR W31, [X31 + 0x6C]
	0x03ABA860 LDR W3, [X21 + 0x68]
	0x03ABA864 MOV X0, X21
	0x03ABA868 MOV X1, X23
	0x03ABA86C MOV X2, X22
	0x03ABA870 BL 0x3AB9AE0
	0x03ABA874 LDR W8, [X21 + 0x70]
	0x03ABA878 STR X24, [X31 + 0x28]
	0x03ABA87C STR X20, [X31 + 0x18]
	0x03ABA880 CMP W8, 0x0
	0x03ABA884 CSET W27, GT
	0x03ABA888 CMP W8, 0x1
	0x03ABA88C B.LT 0x3ABAA30
	0x03ABA890 ADRP X29, 0x69E000
	0x03ABA894 LDR X29, [X29 + 0x250]
	0x03ABA898 MOV X22, X31
	0x03ABA89C MOV W20, W31
	0x03ABA8A0 LDR X8, [X21 + 0x10]
	0x03ABA8A4 MOVZ W9, 0x18
	0x03ABA8A8 MADD X8, X22, X9, X8
	0x03ABA8AC LDR X9, [X8 + 0x10]
	0x03ABA8B0 LDR V0, [X8]
	0x03ABA8B4 CMP W9, 0x2
	0x03ABA8B8 STR X9, [X31 + 0x60]
	0x03ABA8BC STR V0, [X31 + 0x5]
	0x03ABA8C0 B.LT 0x3ABAA10
	0x03ABA8C4 LDR X8, [X31 + 0x28]
	0x03ABA8C8 MOVZ W23, 0x1
	0x03ABA8CC ADD X19, X8, X22, 0x3, LSL
	0x03ABA8D0 ADD X8, X19, 0x4
	0x03ABA8D4 STR X8, [X31 + 0x20]
	0x03ABA8D8 LDR X2, [X29]
	0x03ABA8DC ADD X0, X31, 0x50
	0x03ABA8E0 MOV W1, W23
	0x03ABA8E4 BL 0x2B8C4C0
	0x03ABA8E8 CMP X22, W0, SXTW
	0x03ABA8EC B.GT 0x3ABAA00
	0x03ABA8F0 MOV W24, W0
	0x03ABA8F4 MOV X0, X21
	0x03ABA8F8 MOV W1, W22
	0x03ABA8FC MOV W2, W24
	0x03ABA900 BL 0x3ABA010
	0x03ABA904 TBZ X0, 0x1F, 0x3ABAA00
	0x03ABA908 LDR X2, [X29]
	0x03ABA90C SUB W1, W23, 0x1
	0x03ABA910 ADD X0, X31, 0x50
	0x03ABA914 BL 0x2B8C4C0
	0x03ABA918 LDR W8, [X31 + 0x60]
	0x03ABA91C CMP W8, 0x2
	0x03ABA920 B.LT 0x3ABAA00
	0x03ABA924 MOV W25, W0
	0x03ABA928 SXTW X28, W24
	0x03ABA92C MOVZ W26, 0x1
	0x03ABA930 LDR X2, [X29]
	0x03ABA934 SUB W1, W26, 0x1
	0x03ABA938 ADD X0, X31, 0x50
	0x03ABA93C BL 0x2B8C4C0
	0x03ABA940 CMP W0, W24
	0x03ABA944 B.EQ 0x3ABA95C
	0x03ABA948 LDR W8, [X31 + 0x60]
	0x03ABA94C ADD W26, W26, 0x2
	0x03ABA950 CMP W26, W8
	0x03ABA954 B.LT 0x3ABA930
	0x03ABA958 B 0x3ABAA00
	0x03ABA95C LDR X2, [X29]
	0x03ABA960 ADD X0, X31, 0x50
	0x03ABA964 MOV W1, W26
	0x03ABA968 BL 0x2B8C4C0
	0x03ABA96C TBNZ X0, 0x1F, 0x3ABAA00
	0x03ABA970 LDP X8, X10, [X31 + 0x20]
	0x03ABA974 ADRP X11, 0x662000
	0x03ABA978 LDR V8, [X19]
	0x03ABA97C LDR V9, [X8]
	0x03ABA980 LDR X11, [X11 + 0xD8]
	0x03ABA984 ADD X8, X10, X28, 0x3, LSL
	0x03ABA988 ADD X9, X10, W25, 0x3, SXTW
	0x03ABA98C ADD X10, X10, W0, 0x3, UXTW
	0x03ABA990 LDR X0, [X11]
	0x03ABA994 LDP S15, S14, [X8]
	0x03ABA998 LDP S13, S11, [X9]
	0x03ABA99C LDP S12, S10, [X10]
	0x03ABA9A0 LDR W8, [X0 + 0xE0]
	0x03ABA9A4 CBNZ W8, 0x3ABA9AC
	0x03ABA9A8 BL 0x1C16DFC
	0x03ABA9AC MOV V0.16B, V8.16B
	0x03ABA9B0 MOV V1.16B, V9.16B
	0x03ABA9B4 MOV V2.16B, V15.16B
	0x03ABA9B8 MOV V3.16B, V14.16B
	0x03ABA9BC MOV V4.16B, V13.16B
	0x03ABA9C0 MOV V5.16B, V11.16B
	0x03ABA9C4 MOV V6.16B, V12.16B
	0x03ABA9C8 MOV V7.16B, V10.16B
	0x03ABA9CC MOV X0, X31
	0x03ABA9D0 BL 0x3A23B74
	0x03ABA9D4 TBZ X0, 0x0, 0x3ABAA00
	0x03ABA9D8 LDR W9, [X31 + 0x78]
	0x03ABA9DC ADD W8, W20, 0x2
	0x03ABA9E0 CMP W8, W9
	0x03ABA9E4 B.GE 0x3ABAA38
	0x03ABA9E8 LDR X9, [X31 + 0x70]
	0x03ABA9EC ADD W10, W20, 0x1
	0x03ABA9F0 STR W22, [X9, W20, SXTW]
	0x03ABA9F4 MOV W20, W8
	0x03ABA9F8 STR W8, [X31 + 0x6C]
	0x03ABA9FC STR W24, [X9, W10, SXTW]
	0x03ABAA00 LDR W8, [X31 + 0x60]
	0x03ABAA04 ADD W23, W23, 0x2
	0x03ABAA08 CMP W23, W8
	0x03ABAA0C B.LT 0x3ABA8D8
	0x03ABAA10 LDRSW X8, [X21 + 0x70]
	0x03ABAA14 ADD X22, X22, 0x1
	0x03ABAA18 CMP X22, X8
	0x03ABAA1C CSET W27, LT
	0x03ABAA20 B.LT 0x3ABA8A0
	0x03ABAA24 B 0x3ABAA3C
	0x03ABAA28 MOV W22, W31
	0x03ABAA2C B 0x3ABAC88
	0x03ABAA30 MOV W20, W31
	0x03ABAA34 B 0x3ABAA3C
	0x03ABAA38 LDR W8, [X21 + 0x70]
	0x03ABAA3C ADRP X9, 0x663000
	0x03ABAA40 LDR X9, [X9 + 0x148]
	0x03ABAA44 CMP W20, 0x1
	0x03ABAA48 EOR W22, W27, 0x1
	0x03ABAA4C B.LT 0x3ABAC7C
	0x03ABAA50 TBZ X22, 0x0, 0x3ABAC7C
	0x03ABAA54 ADRP X29, 0x69E000
	0x03ABAA58 LDR X29, [X29 + 0x250]
	0x03ABAA5C MUL W8, W8, W8
	0x03ABAA60 MOVZ W19, 0x18
	0x03ABAA64 STR W8, [X31 + 0x20]
	0x03ABAA68 LDR X8, [X31 + 0x70]
	0x03ABAA6C SXTW X9, W20
	0x03ABAA70 SUB X28, X9, 0x2
	0x03ABAA74 ADD X9, X8, W20, 0x2, SXTW

ISIL:
	001 Subtract X31, X31, 320
	002 Move [X31+224], X29
	003 Move [X31+232], X30
	004 Move [X31+240], X28
	005 Move [X31+248], X27
	006 Move [X31+256], X26
	007 Move [X31+264], X25
	008 Move [X31+272], X24
	009 Move [X31+280], X23
	010 Move [X31+288], X22
	011 Move [X31+296], X21
	012 Move [X31+304], X20
	013 Move [X31+312], X19
	014 Move X24, 0x929000
	015 Move X23, 0x663000
	016 Move W8, [X24+1170]
	017 Move X23, [X23+216]
	018 Move X22, X6
	019 Move X19, X3
	020 Move X21, X2
	021 Move X20, X1
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {40}
	026 Move X0, 0x69F000
	027 Move X0, [X0+592]
	028 Call 0x1C17CF4
	029 Move X0, 0x69F000
	030 Move X0, [X0+608]
	031 Call 0x1C17CF4
	032 Move X0, 0x69F000
	033 Move X0, [X0+648]
	034 Call 0x1C17CF4
	035 Move X0, 0x663000
	036 Move X0, [X0+216]
	037 Call 0x1C17CF4
	038 Move W8, 1
	039 Move [X24+1170], W8
	040 NotImplemented "Instruction MOVI not yet implemented."
	041 Move [X31+176], X31
	042 Move [X31+96], X31
	043 Move [X31+144], V0
	044 Move [X31+152], V0
	045 Move [X31+112], V0
	046 Move [X31+120], V0
	047 Move [X31+64], V0
	048 Move [X31+72], V0
	049 Move [X31+32], V0
	050 Move [X31+40], V0
	051 Move V0, [X22]
	052 Move X8, [X22+16]
	053 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	054 Move [X22], V0
	055 Move V0, [X22]
	056 Move X0, [X23]
	057 Move W22, [X19]
	058 Move [X31+16], X8
	059 Move [X31], V0
	060 Move X23, 0x69F000
	061 Move W8, [X0+224]
	062 Move X23, [X23+648]
	063 Compare W8, 0
	064 JumpIfNotEqual {66}
	065 Call 0x1C17DFC
	066 Move V0, [X31]
	067 Move X8, [X31+16]
	068 Move X5, [X23]
	069 Add X3, X31, 192
	070 Move X0, X20
	071 Move X1, X21
	072 Move W2, W22
	073 Move X4, X31
	074 Move [X31+12], V0
	075 Move [X31+208], X8
	076 Call 0x221F568, X0, X1, X2, X3
	077 Move W22, W0
	078 Move TEMP, X0
	079 And TEMP, TEMP, -2147483648
	080 Compare TEMP, -2147483648
	081 JumpIfEqual {138}
	082 Move W23, 72
	083 NotImplemented "Instruction UMADDL not yet implemented."
	084 Add X0, X31, 112
	085 Move W2, 72
	086 Add X26, X31, 112
	087 Call 0x3EB2B30
	088 Subtract W8, W22, 1
	089 NotImplemented "Instruction SMADDL not yet implemented."
	090 Add X0, X31, 32
	091 Move W2, 72
	092 Move X1, X23
	093 Add X25, X31, 32
	094 Call 0x3EB2B30
	095 Move W8, [X31+176]
	096 NotImplemented "Instruction CMP not yet implemented."
	097 Move [X31+96], W8
	098 Move X27, 0x69F000
	099 Move X28, 0x69F000
	100 Move X27, [X27+592]
	101 Move X28, [X28+608]
	102 Move W24, W31
	103 Add X25, X25, 48
	104 Add X26, X26, 48
	105 Move X2, [X27]
	106 Move X0, X26
	107 Move W1, W24
	108 Call 0x2B8D4C0, X0, X1
	109 Move X3, [X28]
	110 Move W2, W0
	111 Move X0, X25
	112 Move W1, W24
	113 Call 0x2B8D500, X0, X1, X2
	114 Move W8, [X31+96]
	115 Add W24, W24, 1
	116 NotImplemented "Instruction CMP not yet implemented."
	117 Add X1, X31, 32
	118 Move W2, 72
	119 Move X0, X23
	120 Call 0x3EB2B30
	121 Move W8, [X19]
	122 NotImplemented "Instruction CMP not yet implemented."
	123 Subtract W8, W8, 1
	124 NotImplemented "Instruction CMP not yet implemented."
	125 Move W21, W22
	126 Move W8, 72
	127 NotImplemented "Instruction MADD not yet implemented."
	128 Add X20, X0, 72
	129 Move W2, 72
	130 Move X1, X20
	131 Add X21, X21, 1
	132 Call 0x3EB2AC0
	133 Move W8, [X19]
	134 Move X0, X20
	135 Subtract W8, W8, 1
	136 NotImplemented "Instruction CMP not yet implemented."
	137 Move [X19], W8
	138 NotImplemented "Instruction ORN not yet implemented."
	139 Move X20, [X31+304]
	140 Move X19, [X31+312]
	141 Move X22, [X31+288]
	142 Move X21, [X31+296]
	143 Move X24, [X31+272]
	144 Move X23, [X31+280]
	145 Move X26, [X31+256]
	146 Move X25, [X31+264]
	147 Move X28, [X31+240]
	148 Move X27, [X31+248]
	149 Move X29, [X31+224]
	150 Move X30, [X31+232]
	151 Move W0, W8
	152 ShiftRight W0, 31
	153 And W0, W0, 0x7FFFFFFF
	154 Add X31, X31, 320
	155 Return X0

Method: System.Void InsertUniqueEdge(Unity.Collections.NativeArray`1<Unity.Mathematics.int2> edges, Unity.Mathematics.int2 e, ref System.Int32 edgeCount)

Disassembly:
	0x03ABAA78 LDRSW X25, [X8, X28, LSL #2]
	0x03ABAA7C LDURSW X22, [X9 - 0x4]
	0x03ABAA80 STR W28, [X31 + 0x6C]
	0x03ABAA84 LDR X8, [X21 + 0x10]
	0x03ABAA88 NOP
	0x03ABAA8C MADD X8, X25, X19, X8
	0x03ABAA90 LDR V0, [X8]
	0x03ABAA94 LDR X8, [X8 + 0x10]
	0x03ABAA98 STR V0, [X31 + 0x3]
	0x03ABAA9C CMP W8, 0x2
	0x03ABAAA0 STR X8, [X31 + 0x40]
	0x03ABAAA4 B.LT 0x3ABAB00
	0x03ABAAA8 MOVZ W26, 0x1
	0x03ABAAAC MOVN W24, 0x0
	0x03ABAAB0 MOVN W23, 0x0
	0x03ABAAB4 LDR X2, [X29]
	0x03ABAAB8 SUB W1, W26, 0x1
	0x03ABAABC ADD X0, X31, 0x30
	0x03ABAAC0 BL 0x2B8C4C0
	0x03ABAAC4 LDR X2, [X29]
	0x03ABAAC8 MOV W27, W0
	0x03ABAACC ADD X0, X31, 0x30
	0x03ABAAD0 MOV W1, W26
	0x03ABAAD4 BL 0x2B8C4C0
	0x03ABAAD8 LDR W8, [X31 + 0x40]
	0x03ABAADC CMP W0, W22

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, X3
	007 Move X19, X2
	008 Move X21, X0
	009 Move X22, X31
	010 Move [X31+8], W31
	011 NotImplemented "Instruction LDRSW not yet implemented."
	012 NotImplemented "Instruction CMP not yet implemented."
	013 Move X2, [X21]
	014 Add X0, X31, 8
	015 Move X1, X19
	016 Move X3, X31
	017 Call TessEdgeCompare.Compare, X0, X1, X2
	018 Add X22, X22, 1
	019 Compare W0, 0
	020 JumpIfNotEqual {11}
	021 Add W9, W8, 1
	022 Move [X20], W9
	023 Move [X21], X19
	024 Move X20, [X31+32]
	025 Move X19, [X31+40]
	026 Move X22, [X31+16]
	027 Move X21, [X31+24]
	028 Move X30, [X31+48]
	029 Return 

Method: System.Void PrepareDelaunay(Unity.Collections.NativeArray`1<Unity.Mathematics.int2> edges, System.Int32 edgeCount)

Disassembly:
	0x03ABAAE0 CSEL W9, W27, W24, EQ
	0x03ABAAE4 CMP W27, W22
	0x03ABAAE8 ADD W26, W26, 0x2
	0x03ABAAEC CSEL W23, W0, W23, EQ
	0x03ABAAF0 CSEL W24, W24, W9, EQ
	0x03ABAAF4 CMP W26, W8
	0x03ABAAF8 B.LT 0x3ABAAB4
	0x03ABAAFC B 0x3ABAB08
	0x03ABAB00 MOVN W23, 0x0
	0x03ABAB04 MOVN W24, 0x0
	0x03ABAB08 ORR W8, W24, W23, 0x0
	0x03ABAB0C TBNZ X8, 0x1F, 0x3ABAB78
	0x03ABAB10 ADRP X12, 0x662000
	0x03ABAB14 LDR X11, [X31 + 0x28]
	0x03ABAB18 LDR X12, [X12 + 0xD8]
	0x03ABAB1C ADD X8, X11, X25, 0x3, LSL
	0x03ABAB20 LDR X0, [X12]
	0x03ABAB24 ADD X9, X11, X22, 0x3, LSL
	0x03ABAB28 ADD X10, X11, W24, 0x3, UXTW
	0x03ABAB2C ADD X11, X11, W23, 0x3, UXTW
	0x03ABAB30 LDP S15, S14, [X8]
	0x03ABAB34 LDP S13, S12, [X9]
	0x03ABAB38 LDP S11, S9, [X10]
	0x03ABAB3C LDR W8, [X0 + 0xE0]
	0x03ABAB40 LDP S10, S8, [X11]
	0x03ABAB44 CBNZ W8, 0x3ABAB4C
	0x03ABAB48 BL 0x1C16DFC
	0x03ABAB4C MOV V0.16B, V15.16B
	0x03ABAB50 MOV V1.16B, V14.16B
	0x03ABAB54 MOV V2.16B, V13.16B
	0x03ABAB58 MOV V3.16B, V12.16B
	0x03ABAB5C MOV V4.16B, V11.16B
	0x03ABAB60 MOV V5.16B, V9.16B
	0x03ABAB64 MOV V6.16B, V10.16B
	0x03ABAB68 MOV V7.16B, V8.16B
	0x03ABAB6C MOV X0, X31
	0x03ABAB70 BL 0x3A23B74
	0x03ABAB74 TBNZ X0, 0x0, 0x3ABAB88
	0x03ABAB78 CMP W20, 0x2
	0x03ABAB7C MOV W20, W28
	0x03ABAB80 B.GT 0x3ABAA68
	0x03ABAB84 B 0x3ABAC70
	0x03ABAB88 MOV X0, X21
	0x03ABAB8C MOV W1, W25
	0x03ABAB90 MOV W2, W22
	0x03ABAB94 BL 0x3ABA428
	0x03ABAB98 LDR X26, [X31 + 0x28]
	0x03ABAB9C LDR X20, [X31 + 0x18]
	0x03ABABA0 ADD X3, X31, 0x70
	0x03ABABA4 ADD X4, X31, 0x6C
	0x03ABABA8 MOV X0, X21
	0x03ABABAC MOV X1, X26
	0x03ABABB0 MOV X2, X20
	0x03ABABB4 MOV W5, W24
	0x03ABABB8 MOV W6, W25
	0x03ABABBC MOV W7, W23
	0x03ABABC0 BL 0x3ABA4B8
	0x03ABABC4 TBZ X0, 0x0, 0x3ABACBC
	0x03ABABC8 ADD X3, X31, 0x70
	0x03ABABCC ADD X4, X31, 0x6C
	0x03ABABD0 MOV X0, X21
	0x03ABABD4 MOV X1, X26
	0x03ABABD8 MOV X2, X20
	0x03ABABDC MOV W5, W25
	0x03ABABE0 MOV W6, W23
	0x03ABABE4 MOV W7, W24
	0x03ABABE8 BL 0x3ABA4B8
	0x03ABABEC TBZ X0, 0x0, 0x3ABACBC
	0x03ABABF0 ADD X3, X31, 0x70
	0x03ABABF4 ADD X4, X31, 0x6C
	0x03ABABF8 MOV X0, X21
	0x03ABABFC MOV X1, X26
	0x03ABAC00 MOV X2, X20
	0x03ABAC04 MOV W5, W23
	0x03ABAC08 MOV W6, W22
	0x03ABAC0C MOV W7, W24
	0x03ABAC10 BL 0x3ABA4B8
	0x03ABAC14 TBZ X0, 0x0, 0x3ABACBC
	0x03ABAC18 ADD X3, X31, 0x70
	0x03ABAC1C ADD X4, X31, 0x6C
	0x03ABAC20 MOV X0, X21
	0x03ABAC24 MOV X1, X26
	0x03ABAC28 MOV X2, X20
	0x03ABAC2C MOV W5, W22
	0x03ABAC30 MOV W6, W24
	0x03ABAC34 MOV W7, W23
	0x03ABAC38 BL 0x3ABA4B8
	0x03ABAC3C TBZ X0, 0x0, 0x3ABACBC
	0x03ABAC40 LDR W8, [X31 + 0x20]
	0x03ABAC44 SUB W8, W8, 0x1
	0x03ABAC48 CMP W8, 0x0
	0x03ABAC4C CSET W22, GT
	0x03ABAC50 CMP W8, 0x1
	0x03ABAC54 B.LT 0x3ABAC74
	0x03ABAC58 LDR W20, [X31 + 0x6C]
	0x03ABAC5C ADRP X9, 0x663000
	0x03ABAC60 LDR X9, [X9 + 0x148]
	0x03ABAC64 CMP W20, 0x1
	0x03ABAC68 B.GE 0x3ABAA64
	0x03ABAC6C B 0x3ABAC7C
	0x03ABAC70 MOVZ W22, 0x1
	0x03ABAC74 ADRP X9, 0x663000
	0x03ABAC78 LDR X9, [X9 + 0x148]
	0x03ABAC7C LDR X1, [X9]
	0x03ABAC80 ADD X0, X31, 0x70
	0x03ABAC84 BL 0x23D5AD4
	0x03ABAC88 AND W0, W22, 0x1
	0x03ABAC8C LDP X20, X19, [X31 + 0x110]
	0x03ABAC90 LDP X22, X21, [X31 + 0x100]
	0x03ABAC94 LDP X24, X23, [X31 + 0xF0]
	0x03ABAC98 LDP X26, X25, [X31 + 0xE0]
	0x03ABAC9C LDP X28, X27, [X31 + 0xD0]
	0x03ABACA0 LDP X29, X30, [X31 + 0xC0]
	0x03ABACA4 LDP D9, D8, [X31 + 0xB0]
	0x03ABACA8 LDP D11, D10, [X31 + 0xA0]
	0x03ABACAC LDP D13, D12, [X31 + 0x90]
	0x03ABACB0 LDP D15, D14, [X31 + 0x80]
	0x03ABACB4 ADD X31, X31, 0x120
	0x03ABACB8 RET
	0x03ABACBC MOV W22, W31
	0x03ABACC0 B 0x3ABAC74
	0x03ABACC4 STP X30, X25, [X31 - 0x40]!
	0x03ABACC8 STP X24, X23, [X31 + 0x10]
	0x03ABACCC STP X22, X21, [X31 + 0x20]
	0x03ABACD0 STP X20, X19, [X31 + 0x30]
	0x03ABACD4 ADRP X25, 0x928000
	0x03ABACD8 LDRB W8, [X25 + 0x49B]
	0x03ABACDC MOV W24, W6
	0x03ABACE0 MOV W22, W5
	0x03ABACE4 MOV W23, W4
	0x03ABACE8 MOV W19, W3
	0x03ABACEC MOV X20, X2
	0x03ABACF0 MOV X21, X1
	0x03ABACF4 TBNZ X8, 0x0, 0x3ABAD18
	0x03ABACF8 ADRP X0, 0x69E000
	0x03ABACFC LDR X0, [X0 + 0x2A8]
	0x03ABAD00 BL 0x1C16CF4
	0x03ABAD04 ADRP X0, 0x662000
	0x03ABAD08 LDR X0, [X0 + 0xD8]
	0x03ABAD0C BL 0x1C16CF4
	0x03ABAD10 MOVZ W8, 0x1
	0x03ABAD14 STRB W8, [X25 + 0x49B]
	0x03ABAD18 CMP W22, W24
	0x03ABAD1C B.GE 0x3ABAD38
	0x03ABAD20 CMP W22, W23
	0x03ABAD24 B.GE 0x3ABAD68
	0x03ABAD28 MOV W25, W23
	0x03ABAD2C MOV W8, W24
	0x03ABAD30 TBZ X22, 0x1F, 0x3ABAD78
	0x03ABAD34 B 0x3ABAD50
	0x03ABAD38 CMP W24, W23
	0x03ABAD3C B.GE 0x3ABAD68
	0x03ABAD40 MOV W25, W22
	0x03ABAD44 MOV W8, W23
	0x03ABAD48 MOV W22, W24
	0x03ABAD4C TBZ X22, 0x1F, 0x3ABAD78
	0x03ABAD50 LDP X20, X19, [X31 + 0x30]
	0x03ABAD54 LDP X22, X21, [X31 + 0x20]
	0x03ABAD58 LDP X24, X23, [X31 + 0x10]
	0x03ABAD5C MOVN W0, 0x0
	0x03ABAD60 LDP X30, X25, [X31], #0x40
	0x03ABAD64 RET
	0x03ABAD68 MOV W25, W24
	0x03ABAD6C MOV W8, W22
	0x03ABAD70 MOV W22, W23
	0x03ABAD74 TBNZ X22, 0x1F, 0x3ABAD50
	0x03ABAD78 ADRP X9, 0x662000
	0x03ABAD7C LDR X9, [X9 + 0xD8]
	0x03ABAD80 ADRP X23, 0x69E000
	0x03ABAD84 MOV W22, W22
	0x03ABAD88 BFM X22, X8, 0x20, 0x1F
	0x03ABAD8C LDR X0, [X9]
	0x03ABAD90 LDR W9, [X0 + 0xE0]
	0x03ABAD94 LDR X23, [X23 + 0x2A8]
	0x03ABAD98 CBNZ W9, 0x3ABADA0
	0x03ABAD9C BL 0x1C16DFC
	0x03ABADA0 LDR X6, [X23]
	0x03ABADA4 MOV X0, X21
	0x03ABADA8 MOV X1, X20
	0x03ABADAC MOV W2, W19
	0x03ABADB0 MOV X3, X22
	0x03ABADB4 LDP X20, X19, [X31 + 0x30]
	0x03ABADB8 LDP X22, X21, [X31 + 0x20]
	0x03ABADBC LDP X24, X23, [X31 + 0x10]
	0x03ABADC0 MOV W4, W25
	0x03ABADC4 MOV X5, X31
	0x03ABADC8 LDP X30, X25, [X31], #0x40
	0x03ABADCC B 0x221E908
	0x03ABADD0 SUB X31, X31, 0x120
	0x03ABADD4 STP X29, X30, [X31 + 0xC0]
	0x03ABADD8 STP X28, X27, [X31 + 0xD0]
	0x03ABADDC STP X26, X25, [X31 + 0xE0]
	0x03ABADE0 STP X24, X23, [X31 + 0xF0]
	0x03ABADE4 STP X22, X21, [X31 + 0x100]
	0x03ABADE8 STP X20, X19, [X31 + 0x110]
	0x03ABADEC ADRP X19, 0x928000
	0x03ABADF0 LDRB W8, [X19 + 0x49C]
	0x03ABADF4 MOV X26, X1
	0x03ABADF8 MOV X22, X0
	0x03ABADFC TBNZ X8, 0x0, 0x3ABAE44
	0x03ABAE00 ADRP X0, 0x69E000
	0x03ABAE04 LDR X0, [X0 + 0x2B0]
	0x03ABAE08 BL 0x1C16CF4
	0x03ABAE0C ADRP X0, 0x662000
	0x03ABAE10 LDR X0, [X0 + 0xD8]
	0x03ABAE14 BL 0x1C16CF4
	0x03ABAE18 ADRP X0, 0x69E000
	0x03ABAE1C LDR X0, [X0 + 0x2B8]
	0x03ABAE20 BL 0x1C16CF4
	0x03ABAE24 ADRP X0, 0x663000
	0x03ABAE28 LDR X0, [X0 + 0x148]
	0x03ABAE2C BL 0x1C16CF4
	0x03ABAE30 ADRP X0, 0x663000
	0x03ABAE34 LDR X0, [X0 + 0x138]
	0x03ABAE38 BL 0x1C16CF4
	0x03ABAE3C MOVZ W8, 0x1
	0x03ABAE40 STRB W8, [X19 + 0x49C]
	0x03ABAE44 ADRP X19, 0x69E000
	0x03ABAE48 ADRP X20, 0x662000
	0x03ABAE4C LDR X19, [X19 + 0x2B8]
	0x03ABAE50 LDR X20, [X20 + 0xD8]
	0x03ABAE54 MOV X0, X22
	0x03ABAE58 MOV X1, X26
	0x03ABAE5C STP X31, X31, [X31 + 0xB0]
	0x03ABAE60 STP X31, X31, [X31 + 0xA0]
	0x03ABAE64 BL 0x3ABA638
	0x03ABAE68 LDR W8, [X26]
	0x03ABAE6C STR X0, [X31 + 0x50]
	0x03ABAE70 STR X1, [X31 + 0x40]
	0x03ABAE74 CMP W8, 0x1
	0x03ABAE78 STR X8, [X31 + 0x8]
	0x03ABAE7C B.LT 0x3ABAEE4
	0x03ABAE80 LDR X8, [X31 + 0x50]
	0x03ABAE84 LDR X9, [X31 + 0x8]
	0x03ABAE88 ADD X8, X8, 0x8
	0x03ABAE8C LDP W10, W13, [X8 - 0x4]
	0x03ABAE90 LDUR W12, [X8 - 0x8]
	0x03ABAE94 CMP W10, W13
	0x03ABAE98 B.GE 0x3ABAEB0
	0x03ABAE9C CMP W10, W12
	0x03ABAEA0 B.GE 0x3ABAEC8
	0x03ABAEA4 MOV W11, W12
	0x03ABAEA8 MOV W14, W13
	0x03ABAEAC B 0x3ABAED4
	0x03ABAEB0 CMP W13, W12
	0x03ABAEB4 B.GE 0x3ABAEC8
	0x03ABAEB8 MOV W11, W10
	0x03ABAEBC MOV W14, W12
	0x03ABAEC0 MOV W10, W13
	0x03ABAEC4 B 0x3ABAED4
	0x03ABAEC8 MOV W11, W13
	0x03ABAECC MOV W14, W10
	0x03ABAED0 MOV W10, W12
	0x03ABAED4 STP W10, W14, [X8 - 0x8]
	0x03ABAED8 STR W11, [X8], #0xC
	0x03ABAEDC SUBS X9, X9, 0x1
	0x03ABAEE0 B.NE 0x3ABAE8C
	0x03ABAEE4 LDR X2, [X19]
	0x03ABAEE8 ADRP X21, 0x69E000
	0x03ABAEEC ADRP X19, 0x663000
	0x03ABAEF0 LDR X21, [X21 + 0x2B0]
	0x03ABAEF4 LDR X19, [X19 + 0x138]
	0x03ABAEF8 LDR X0, [X31 + 0x50]
	0x03ABAEFC LDR X1, [X31 + 0x40]
	0x03ABAF00 BL 0x2222680
	0x03ABAF04 LDR X8, [X20]
	0x03ABAF08 LDR W20, [X22 + 0x30]
	0x03ABAF0C MOV X24, X0
	0x03ABAF10 LDR W9, [X8 + 0xE0]
	0x03ABAF14 CBNZ W9, 0x3ABAF20
	0x03ABAF18 MOV X0, X8
	0x03ABAF1C BL 0x1C16DFC
	0x03ABAF20 LDR X4, [X21]
	0x03ABAF24 SUB W2, W20, 0x1
	0x03ABAF28 MOV X0, X24
	0x03ABAF2C MOV W1, W31
	0x03ABAF30 MOV X3, X31
	0x03ABAF34 BL 0x221F7BC
	0x03ABAF38 LDR X20, [X31 + 0x8]
	0x03ABAF3C LDR W2, [X22 + 0xA8]
	0x03ABAF40 LDR X4, [X19]
	0x03ABAF44 ADD X0, X31, 0x90
	0x03ABAF48 MOVZ W3, 0x1
	0x03ABAF4C MOV W1, W20

ISIL:
	001 Subtract X31, X31, 240
	002 Move [X31+144], X30
	003 Move [X31+160], X28
	004 Move [X31+168], X27
	005 Move [X31+176], X26
	006 Move [X31+184], X25
	007 Move [X31+192], X24
	008 Move [X31+200], X23
	009 Move [X31+208], X22
	010 Move [X31+216], X21
	011 Move [X31+224], X20
	012 Move [X31+232], X19
	013 Move X25, 0x929000
	014 Move X24, 0x69F000
	015 Move X23, 0x664000
	016 Move X22, 0x69B000
	017 Move W8, [X25+1171]
	018 Move X24, [X24+656]
	019 Move X23, [X23+312]
	020 Move X22, [X22+1320]
	021 Move W21, W3
	022 Move X20, X1
	023 Move X19, X0
	024 Move TEMP, X8
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {57}
	028 Move X0, 0x69F000
	029 Move X0, [X0+632]
	030 Call 0x1C17CF4
	031 Move X0, 0x69F000
	032 Move X0, [X0+608]
	033 Call 0x1C17CF4
	034 Move X0, 0x69F000
	035 Move X0, [X0+464]
	036 Call 0x1C17CF4
	037 Move X0, 0x663000
	038 Move X0, [X0+216]
	039 Call 0x1C17CF4
	040 Move X0, 0x69F000
	041 Move X0, [X0+472]
	042 Call 0x1C17CF4
	043 Move X0, 0x69B000
	044 Move X0, [X0+2488]
	045 Call 0x1C17CF4
	046 Move X0, 0x69B000
	047 Move X0, [X0+1320]
	048 Call 0x1C17CF4
	049 Move X0, 0x69F000
	050 Move X0, [X0+656]
	051 Call 0x1C17CF4
	052 Move X0, 0x664000
	053 Move X0, [X0+312]
	054 Call 0x1C17CF4
	055 Move W8, 1
	056 Move [X25+1171], W8
	057 Move [X31+128], X31
	058 Move [X31+136], X31
	059 Move [X31+112], X31
	060 Move [X31+120], X31
	061 Move [X31+96], X31
	062 Move [X31+104], X31
	063 Move [X31+64], X31
	064 Move [X31+72], X31
	065 Move [X31+80], X31
	066 Move [X31+32], X31
	067 Move [X31+40], X31
	068 Move [X31+48], X31
	069 Move W8, [X19+48]
	070 Move W2, [X19+168]
	071 Add X0, X31, 16
	072 Move W3, 1
	073 Add W1, W8, W8
	074 Move [X19+116], W1
	075 Move X4, [X24]
	076 Move [X31+16], X31
	077 Move [X31+24], X31
	078 Call NativeArray`1<UStar>..ctor, X0, X1, X2, X3
	079 Move V0, [X31+1]
	080 Move W8, [X19+116]
	081 Move W2, [X19+168]
	082 Add X0, X31, 0
	083 Move [X19+1], V0
	084 Move X4, [X23]
	085 Multiply W1, W8, W8
	086 Move W3, 1
	087 Move [X31], X31
	088 Move [X31+8], X31
	089 Call NativeArray`1<Int32>..ctor, X0, X1, X2, X3
	090 Move V0, [X31]
	091 Add X0, X31, 128
	092 Move W3, 1
	093 Move [X19+88], V0
	094 Move [X31+156], W31
	095 Move W1, [X19+116]
	096 Move W2, [X19+168]
	097 Move X4, [X22]
	098 Call NativeArray`1<int2>..ctor, X0, X1, X2, X3
	099 NotImplemented "Instruction CMP not yet implemented."
	100 Move W21, W21
	101 Move X8, [X20]
	102 Add X3, X31, 156
	103 Move [X31+120], X8
	104 Move W8, [X20]
	105 Move W9, [X20+4]
	106 NotImplemented "Instruction CMP not yet implemented."
	107 NotImplemented "Instruction CSEL not yet implemented."
	108 Move [X31+120], W8
	109 Move W8, [X20]
	110 Move W9, [X20+4]
	111 NotImplemented "Instruction CMP not yet implemented."
	112 NotImplemented "Instruction CSEL not yet implemented."
	113 Move [X31+124], W8
	114 Move X8, [X31+120]
	115 Move [X20+8], X8
	116 Move X0, [X31+128]
	117 Move X1, [X31+136]
	118 Move X2, [X31+120]
	119 Call Tessellator.InsertUniqueEdge, X0, X1, X2
	120 Subtract X21, X21, 1
	121 Move W20, [X31+156]
	122 Move W20, W31
	123 Move X24, 0x69B000
	124 Move X23, 0x69F000
	125 Move X24, [X24+2488]
	126 Move X23, [X23+472]
	127 Move W2, [X19+168]
	128 Move X4, [X22]
	129 Move X21, 0x663000
	130 Move X21, [X21+216]
	131 Add X0, X31, 16
	132 Move W3, 1
	133 Move W1, W20
	134 Move [X31+16], X31
	135 Move [X31+24], X31
	136 Call NativeArray`1<int2>..ctor, X0, X1, X2, X3
	137 Move V0, [X31+1]
	138 NotImplemented "Instruction CMP not yet implemented."
	139 Move [X19], V0
	140 Move W9, W20
	141 Move X8, X31
	142 Move X9, X9
	143 ShiftRight X9, 61
	144 And X9, X9, 0xFFFFFFF
	145 Move X10, [X31+128]
	146 Move X11, [X19]
	147 Move X10, [X10]
	148 Move [X11], X10
	149 Add X8, X8, 8
	150 NotImplemented "Instruction CMP not yet implemented."
	151 Move X1, [X24]
	152 Move X22, 0x69F000
	153 Move X22, [X22+464]
	154 Add X0, X31, 128
	155 Call NativeArray`1<int2>.Dispose, X0
	156 Move X0, [X19]
	157 Move X1, [X19+8]
	158 Move X2, [X23]
	159 Call NativeArrayUnsafeUtility.GetUnsafeBufferPointerWithoutChecks, X0
	160 Move X8, [X21]
	161 Move W21, [X19+8]
	162 Move X20, X0
	163 Move W9, [X8+224]
	164 Compare W9, 0
	165 JumpIfNotEqual {168}
	166 Move X0, X8
	167 Call 0x1C17DFC
	168 Move X4, [X22]
	169 Subtract W2, W21, 1
	170 Move X0, X20
	171 Move W1, W31
	172 Move X3, X31
	173 Call ModuleHandle.InsertionSort, X0, X1, X2, X3
	174 Move W4, [X19+116]
	175 NotImplemented "Instruction CMP not yet implemented."
	176 Move X22, 0x69F000
	177 Move X22, [X22+632]
	178 Move X20, X31
	179 Move X21, X31
	180 Move X8, [X19+16]
	181 Move X1, [X19+88]
	182 Move X2, [X19+96]
	183 Move X5, [X22]
	184 Multiply W3, W4, W21
	185 Add X8, X8, X20
	186 Move W23, [X8+20]
	187 Add X0, X31, 16
	188 Move [X31+16], X31
	189 Move [X31+24], X31
	190 Call 0x2B8D120, X0, X1, X2, X3
	191 Move X8, [X19+16]
	192 Move V0, [X31+1]
	193 Add X21, X21, 1
	194 Add X8, X8, X20
	195 Move [X8], V0
	196 Move [X8+16], W31
	197 Move [X8+20], W23
	198 NotImplemented "Instruction LDRSW not yet implemented."
	199 Add X20, X20, 24
	200 NotImplemented "Instruction CMP not yet implemented."
	201 Move W8, [X19+48]
	202 NotImplemented "Instruction CMP not yet implemented."
	203 Move X25, 0x69F000
	204 Move X25, [X25+608]
	205 Move X23, X31
	206 Move X24, X31
	207 Move X8, [X19+32]
	208 Move X9, [X19+16]
	209 Move X3, [X25]
	210 Add X0, X31, 96
	211 Add X8, X8, X23
	212 NotImplemented "Instruction LDPSW not yet implemented."
	213 NotImplemented "Instruction LDRSW not yet implemented."
	214 Add X28, X21, X21
	215 Add X8, X9, X28
	216 Move X10, [X8+16]
	217 Move V0, [X8]
	218 Add X27, X20, X20
	219 Add X8, X9, X27
	220 Move [X31+112], X10
	221 Move [X31+6], V0
	222 Move X10, [X8+16]
	223 Move V0, [X8]
	224 Add X26, X22, X22
	225 Add X8, X9, X26
	226 Move W1, [X31+112]
	227 Move [X31+80], X10
	228 Move [X31+4], V0
	229 Move X9, [X8+16]
	230 Move V0, [X8]
	231 Add W8, W1, 1
	232 Move W2, W20
	233 Move [X31+112], W8
	234 Move [X31+48], X9
	235 Move [X31+2], V0
	236 Call 0x2B8D500, X0, X1, X2
	237 Move W1, [X31+112]
	238 Move X3, [X25]
	239 Add X0, X31, 96
	240 Move W2, W22
	241 Add W8, W1, 1
	242 Move [X31+112], W8
	243 Call 0x2B8D500, X0, X1, X2
	244 Move W1, [X31+80]
	245 Move X3, [X25]
	246 Add X0, X31, 64
	247 Move W2, W22
	248 Add W8, W1, 1
	249 Move [X31+80], W8
	250 Call 0x2B8D500, X0, X1, X2
	251 Move W1, [X31+80]
	252 Move X3, [X25]
	253 Add X0, X31, 64
	254 Move W2, W21
	255 Add W8, W1, 1
	256 Move [X31+80], W8
	257 Call 0x2B8D500, X0, X1, X2
	258 Move W1, [X31+48]
	259 Move X3, [X25]
	260 Add X0, X31, 32
	261 Move W2, W21
	262 Add W8, W1, 1
	263 Move [X31+48], W8
	264 Call 0x2B8D500, X0, X1, X2
	265 Move W1, [X31+48]
	266 Move X3, [X25]
	267 Add X0, X31, 32
	268 Move W2, W20
	269 Add W8, W1, 1
	270 Move [X31+48], W8
	271 Call 0x2B8D500, X0, X1, X2
	272 Move X8, [X19+16]
	273 Move X9, [X31+112]
	274 Move V0, [X31+6]
	275 Add X24, X24, 1
	276 Add X8, X8, X28
	277 Move [X8+16], X9
	278 Move [X8], V0
	279 Move X8, [X19+16]
	280 Move X9, [X31+80]
	281 Move V0, [X31+4]
	282 Add X23, X23, 12
	283 Add X8, X8, X27
	284 Move [X8+16], X9
	285 Move [X8], V0
	286 Move X8, [X19+16]
	287 Move X9, [X31+48]
	288 Move V0, [X31+2]
	289 Add X8, X8, X26
	290 Move [X8+16], X9
	291 Move [X8], V0
	292 NotImplemented "Instruction LDRSW not yet implemented."
	293 NotImplemented "Instruction CMP not yet implemented."
	294 Move X20, [X31+224]
	295 Move X19, [X31+232]
	296 Move X22, [X31+208]
	297 Move X21, [X31+216]
	298 Move X24, [X31+192]
	299 Move X23, [X31+200]
	300 Move X26, [X31+176]
	301 Move X25, [X31+184]
	302 Move X28, [X31+160]
	303 Move X27, [X31+168]
	304 Move X30, [X31+144]
	305 Add X31, X31, 240
	306 Return 

Method: System.Int32 OppositeOf(System.Int32 a, System.Int32 b)

Disassembly:
	0x03ABAF50 STP X31, X31, [X31 + 0x90]
	0x03ABAF54 BL 0x23D58AC
	0x03ABAF58 LDR V0, [X31 + 0x9]
	0x03ABAF5C LDR W2, [X22 + 0xA8]
	0x03ABAF60 ADD W24, W20, W20, 0x1, LSL
	0x03ABAF64 ADD X8, X22, 0x78
	0x03ABAF68 STUR V0, [X22 + 0x78]
	0x03ABAF6C LDR X4, [X19]
	0x03ABAF70 ADD X0, X31, 0x80
	0x03ABAF74 MOVZ W3, 0x1
	0x03ABAF78 MOV W1, W24
	0x03ABAF7C STR X8, [X31 + 0x10]
	0x03ABAF80 STP X31, X31, [X31 + 0x80]
	0x03ABAF84 BL 0x23D58AC
	0x03ABAF88 LDR V0, [X31 + 0x8]
	0x03ABAF8C LDR W2, [X22 + 0xA8]
	0x03ABAF90 ADD X0, X31, 0x70
	0x03ABAF94 MOVZ W3, 0x1
	0x03ABAF98 STUR V0, [X22 + 0x88]
	0x03ABAF9C LDR X4, [X19]
	0x03ABAFA0 MOV W1, W24
	0x03ABAFA4 STP X31, X31, [X31 + 0x70]
	0x03ABAFA8 BL 0x23D58AC
	0x03ABAFAC LDR V0, [X31 + 0x7]
	0x03ABAFB0 LDR W2, [X22 + 0xA8]
	0x03ABAFB4 ADD X8, X22, 0x98
	0x03ABAFB8 ADD X0, X31, 0xB0
	0x03ABAFBC STUR V0, [X22 + 0x98]
	0x03ABAFC0 LDR X4, [X19]
	0x03ABAFC4 MOVZ W3, 0x1
	0x03ABAFC8 MOV W1, W24
	0x03ABAFCC STR X8, [X31 + 0x60]
	0x03ABAFD0 BL 0x23D58AC
	0x03ABAFD4 LDR W2, [X22 + 0xA8]
	0x03ABAFD8 LDR X4, [X19]
	0x03ABAFDC ADD X0, X31, 0xA0
	0x03ABAFE0 MOVZ W3, 0x1
	0x03ABAFE4 MOV W1, W24
	0x03ABAFE8 STR X22, [X31 + 0x38]
	0x03ABAFEC BL 0x23D58AC
	0x03ABAFF0 CMP W20, 0x1
	0x03ABAFF4 B.LT 0x3ABB19C
	0x03ABAFF8 LDR X27, [X31 + 0x38]
	0x03ABAFFC MOV X9, X31
	0x03ABB000 MOV W14, W31
	0x03ABB004 MOV X22, X31
	0x03ABB008 MOV W28, W31
	0x03ABB00C MOV W23, W31

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+32], X22
	004 Move [X31+40], X21
	005 Move [X31+48], X20
	006 Move [X31+56], X19
	007 Move X22, 0x929000
	008 Move W8, [X22+1172]
	009 Move W20, W2
	010 Move W19, W1
	011 Move X21, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x69F000
	017 Move X0, [X0+592]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+1172], W8
	021 Move [X31], X31
	022 Move [X31+8], X31
	023 Move X8, [X21+16]
	024 Move W9, 24
	025 NotImplemented "Instruction SMADDL not yet implemented."
	026 Move V0, [X8]
	027 Move [X31], V0
	028 Move W21, [X8+16]
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move X22, 0x69F000
	031 Move X22, [X22+592]
	032 Move W20, W31
	033 Move X2, [X22]
	034 Add W1, W20, 1
	035 Add X0, X31, 0
	036 Call 0x2B8D4C0, X0, X1
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Add W8, W20, 3
	039 Add W20, W20, 2
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Move TEMP, 0
	042 Not TEMP
	043 Move W0, TEMP
	044 Move X2, [X22]
	045 Add X0, X31, 0
	046 Move W1, W20
	047 Call 0x2B8D4C0, X0, X1
	048 Move X20, [X31+48]
	049 Move X19, [X31+56]
	050 Move X22, [X31+32]
	051 Move X21, [X31+40]
	052 Move X30, [X31+16]
	053 Add X31, X31, 64
	054 Return X0

Method: System.Int32 FindConstraint(System.Int32 a, System.Int32 b)

Disassembly:
	0x03ABB010 MOV X20, X31
	0x03ABB014 MOV W19, W31
	0x03ABB018 STR X31, [X31 + 0x58]
	0x03ABB01C STR W31, [X31 + 0x28]
	0x03ABB020 STR W31, [X31 + 0x1C]
	0x03ABB024 STR X26, [X31 + 0x30]
	0x03ABB028 LDR X8, [X31 + 0x50]
	0x03ABB02C MOVZ W10, 0xC
	0x03ABB030 STR X9, [X31 + 0x20]
	0x03ABB034 MOV X21, X31
	0x03ABB038 MADD X8, X9, X10, X8
	0x03ABB03C LDP W25, W9, [X8]
	0x03ABB040 LDR W8, [X8 + 0x8]
	0x03ABB044 STR W9, [X31 + 0x68]
	0x03ABB048 STR W8, [X31 + 0x2C]
	0x03ABB04C STR W25, [X31 + 0x4C]
	0x03ABB050 ADD X29, X21, 0x1
	0x03ABB054 CMP X21, 0x2
	0x03ABB058 CSEL W8, W31, W29, EQ
	0x03ABB05C MOV W24, W25
	0x03ABB060 CBZ W21, 0x3ABB074
	0x03ABB064 LDR W24, [X31 + 0x68]
	0x03ABB068 CMP W21, 0x1
	0x03ABB06C B.EQ 0x3ABB074
	0x03ABB070 LDR W24, [X31 + 0x2C]
	0x03ABB074 STR W14, [X31 + 0x6C]
	0x03ABB078 CBZ W8, 0x3ABB08C
	0x03ABB07C LDR W25, [X31 + 0x68]
	0x03ABB080 CMP W8, 0x1
	0x03ABB084 B.EQ 0x3ABB08C
	0x03ABB088 LDR W25, [X31 + 0x2C]
	0x03ABB08C MOV X0, X27
	0x03ABB090 MOV W1, W25
	0x03ABB094 MOV W2, W24
	0x03ABB098 BL 0x3AB9F50
	0x03ABB09C LDR W3, [X26]
	0x03ABB0A0 LDR X1, [X31 + 0x50]
	0x03ABB0A4 LDR X2, [X31 + 0x40]
	0x03ABB0A8 MOV W4, W25
	0x03ABB0AC MOV W5, W24
	0x03ABB0B0 MOV W6, W0
	0x03ABB0B4 BL 0x3ABACC4
	0x03ABB0B8 LDR X9, [X31 + 0x58]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0x928000
	009 Move X22, 0x662000
	010 Move W8, [X23+1173]
	011 Move X22, [X22+216]
	012 Move W20, W2
	013 Move W21, W1
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {27}
	019 Move X0, 0x69E000
	020 Move X0, [X0+664]
	021 Call 0x1C17CF4
	022 Move X0, 0x662000
	023 Move X0, [X0+216]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X23+1173], W8
	027 Move X0, [X22]
	028 NotImplemented "Instruction CMP not yet implemented."
	029 NotImplemented "Instruction CSEL not yet implemented."
	030 NotImplemented "Instruction CSEL not yet implemented."
	031 Move [X31+4], W21
	032 Move [X31+8], W22
	033 Move X23, 0x69E000
	034 Move W8, [X0+224]
	035 Move X20, [X19]
	036 Move X19, [X19+8]
	037 Move X23, [X23+664]
	038 Compare W8, 0
	039 JumpIfNotEqual {41}
	040 Call 0x1C17DFC
	041 NotImplemented "Instruction BFM not yet implemented."
	042 Move X5, [X23]
	043 Move X0, X20
	044 Move X1, X19
	045 Move W2, W19
	046 Move X3, X22
	047 Move X20, [X31+48]
	048 Move X19, [X31+56]
	049 Move X22, [X31+32]
	050 Move X21, [X31+40]
	051 Move X30, [X31+16]
	052 Move X23, [X31+24]
	053 Move X4, X31
	054 Add X31, X31, 64
	055 Call ModuleHandle.GetEqual, X0, X1, X2, X3
	056 Return X0

Method: System.Void AddTriangle(System.Int32 i, System.Int32 j, System.Int32 k)

Disassembly:
	0x03ABB0BC LDR X8, [X27 + 0x88]
	0x03ABB0C0 MOV W26, W0
	0x03ABB0C4 MOV W1, W24
	0x03ABB0C8 ADD X21, X9, X21
	0x03ABB0CC STR W0, [X8, W21, SXTW]
	0x03ABB0D0 MOV X0, X27
	0x03ABB0D4 MOV W2, W25
	0x03ABB0D8 BL 0x3ABA010
	0x03ABB0DC LDR X8, [X31 + 0x60]
	0x03ABB0E0 LDR W14, [X31 + 0x6C]
	0x03ABB0E4 ADDS W31, W0, 0x1
	0x03ABB0E8 CSEL W19, W26, W19, EQ
	0x03ABB0EC CSEL X20, X8, X20, EQ
	0x03ABB0F0 CSEL W23, W21, W23, EQ
	0x03ABB0F4 CSEL W28, W28, W26, EQ
	0x03ABB0F8 CSEL X22, X22, X8, EQ
	0x03ABB0FC CSEL W14, W14, W21, EQ
	0x03ABB100 B.EQ 0x3ABB130
	0x03ABB104 LDR X8, [X22]
	0x03ABB108 MOVZ W9, 0x1
	0x03ABB10C STR W9, [X8, W14, SXTW]
	0x03ABB110 TBZ X28, 0x1F, 0x3ABB164
	0x03ABB114 LDR W10, [X31 + 0x28]
	0x03ABB118 LDR X8, [X31 + 0xB0]
	0x03ABB11C LDR X11, [X31 + 0x20]
	0x03ABB120 ADD W9, W10, 0x1
	0x03ABB124 STR W9, [X31 + 0x28]
	0x03ABB128 STR W11, [X8, W10, SXTW]
	0x03ABB12C B 0x3ABB164
	0x03ABB130 LDR X8, [X20]
	0x03ABB134 STR W31, [X8, W23, SXTW]
	0x03ABB138 TBZ X19, 0x1F, 0x3ABB164
	0x03ABB13C LDR X8, [X31 + 0xA0]
	0x03ABB140 LDR W9, [X31 + 0x1C]
	0x03ABB144 LDR X11, [X31 + 0x20]
	0x03ABB148 MOVZ W10, 0x1
	0x03ABB14C STR W11, [X8, W9, SXTW]
	0x03ABB150 LDR X8, [X31 + 0x10]
	0x03ABB154 ADD W9, W9, 0x1
	0x03ABB158 STR W9, [X31 + 0x1C]
	0x03ABB15C LDR X8, [X8]
	0x03ABB160 STR W10, [X8, X11, LSL #2]
	0x03ABB164 LDR X26, [X31 + 0x30]
	0x03ABB168 LDR W25, [X31 + 0x4C]
	0x03ABB16C CMP X29, 0x3
	0x03ABB170 MOV X21, X29
	0x03ABB174 B.NE 0x3ABB050
	0x03ABB178 LDR X9, [X31 + 0x20]
	0x03ABB17C LDR X8, [X31 + 0x8]
	0x03ABB180 ADD X9, X9, 0x1
	0x03ABB184 CMP X9, X8
	0x03ABB188 LDR X8, [X31 + 0x58]
	0x03ABB18C ADD X8, X8, 0x3
	0x03ABB190 STR X8, [X31 + 0x58]
	0x03ABB194 B.NE 0x3ABB028
	0x03ABB198 B 0x3ABB1A4
	0x03ABB19C STR W31, [X31 + 0x1C]
	0x03ABB1A0 STR W31, [X31 + 0x28]
	0x03ABB1A4 LDR W6, [X31 + 0x1C]
	0x03ABB1A8 ADRP X19, 0x662000
	0x03ABB1AC LDR X19, [X19 + 0x148]
	0x03ABB1B0 LDR X5, [X31 + 0x10]
	0x03ABB1B4 LDR W13, [X31 + 0x28]
	0x03ABB1B8 CMP W6, 0x0
	0x03ABB1BC B.GT 0x3ABB1C8
	0x03ABB1C0 CMP W13, 0x1
	0x03ABB1C4 B.LT 0x3ABB2B4
	0x03ABB1C8 LDR X10, [X31 + 0x38]
	0x03ABB1CC LDR X8, [X31 + 0xB0]
	0x03ABB1D0 LDR X9, [X31 + 0xA0]
	0x03ABB1D4 MOVZ W11, 0x1
	0x03ABB1D8 ADD X10, X10, 0x88
	0x03ABB1DC MOV W12, W11
	0x03ABB1E0 SUB W11, W31, W11
	0x03ABB1E4 MOV W17, W6
	0x03ABB1E8 MOV W6, W13
	0x03ABB1EC LDR X13, [X31 + 0xA0]
	0x03ABB1F0 SXTW X15, W17
	0x03ABB1F4 SUB X16, X13, 0x4
	0x03ABB1F8 CMP X15, 0x0
	0x03ABB1FC B.LE 0x3ABB284
	0x03ABB200 LDRSW X1, [X16, X15, LSL #2]
	0x03ABB204 LDR X14, [X5]
	0x03ABB208 SUB X17, X15, 0x1
	0x03ABB20C MOV X15, X17
	0x03ABB210 LDR W0, [X14, X1, LSL #2]
	0x03ABB214 CMP W0, W11
	0x03ABB218 B.EQ 0x3ABB1F8
	0x03ABB21C STR W12, [X14, X1, LSL #2]
	0x03ABB220 LDR X16, [X10]
	0x03ABB224 LDR X0, [X31 + 0xB0]
	0x03ABB228 MOV X15, X31
	0x03ABB22C ADD W1, W1, W1, 0x1, LSL
	0x03ABB230 ADD W3, W1, W15
	0x03ABB234 LDR W2, [X16, W3, SXTW]
	0x03ABB238 TBNZ X2, 0x1F, 0x3ABB274
	0x03ABB23C LDR W4, [X14, X2, LSL #2]
	0x03ABB240 CBNZ W4, 0x3ABB274
	0x03ABB244 LDR X4, [X31 + 0x60]
	0x03ABB248 SXTW X3, W3
	0x03ABB24C LDR X4, [X4]
	0x03ABB250 LDR W3, [X4, X3, LSL #2]
	0x03ABB254 CBZ W3, 0x3ABB268
	0x03ABB258 ADD W3, W6, 0x1
	0x03ABB25C STR W2, [X0, W6, SXTW]
	0x03ABB260 MOV W6, W3
	0x03ABB264 B 0x3ABB274
	0x03ABB268 STR W2, [X13, W17, SXTW]
	0x03ABB26C ADD W17, W17, 0x1
	0x03ABB270 STR W12, [X14, X2, LSL #2]
	0x03ABB274 ADD X15, X15, 0x1
	0x03ABB278 CMP X15, 0x3

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+96], X30
	003 Move [X31+112], X24
	004 Move [X31+120], X23
	005 Move [X31+128], X22
	006 Move [X31+136], X21
	007 Move [X31+144], X20
	008 Move [X31+152], X19
	009 Move X23, 0x928000
	010 Move X24, 0x69E000
	011 Move W8, [X23+1174]
	012 Move X24, [X24+608]
	013 Move W19, W3
	014 Move W21, W2
	015 Move W22, W1
	016 Move X20, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {26}
	021 Move X0, 0x69E000
	022 Move X0, [X0+608]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X23+1174], W8
	026 Move [X31+64], X31
	027 Move [X31+72], X31
	028 Move [X31+80], X31
	029 Move [X31+32], X31
	030 Move [X31+40], X31
	031 Move [X31+48], X31
	032 Move [X31], X31
	033 Move [X31+8], X31
	034 Move [X31+16], X31
	035 Move X8, [X20+16]
	036 Move W23, 24
	037 Move X3, [X24]
	038 Add X0, X31, 64
	039 NotImplemented "Instruction SMADDL not yet implemented."
	040 Move X10, [X9+16]
	041 Move V0, [X9]
	042 NotImplemented "Instruction NOP not yet implemented."
	043 NotImplemented "Instruction SMADDL not yet implemented."
	044 NotImplemented "Instruction SMADDL not yet implemented."
	045 Move [X31+80], X10
	046 Move [X31+4], V0
	047 Move X10, [X9+16]
	048 Move V0, [X9]
	049 Move W1, [X31+80]
	050 Move W2, W21
	051 Move [X31+48], X10
	052 Move [X31+2], V0
	053 Move X9, [X8+16]
	054 Move V0, [X8]
	055 Add W8, W1, 1
	056 Move [X31+80], W8
	057 Move [X31+16], X9
	058 Move [X31], V0
	059 Call 0x2B8D500, X0, X1, X2
	060 Move W1, [X31+80]
	061 Move X3, [X24]
	062 Add X0, X31, 64
	063 Move W2, W19
	064 Add W8, W1, 1
	065 Move [X31+80], W8
	066 Call 0x2B8D500, X0, X1, X2
	067 Move W1, [X31+48]
	068 Move X3, [X24]
	069 Add X0, X31, 32
	070 Move W2, W19
	071 Add W8, W1, 1
	072 Move [X31+48], W8
	073 Call 0x2B8D500, X0, X1, X2
	074 Move W1, [X31+48]
	075 Move X3, [X24]
	076 Add X0, X31, 32
	077 Move W2, W22
	078 Add W8, W1, 1
	079 Move [X31+48], W8
	080 Call 0x2B8D500, X0, X1, X2
	081 Move W1, [X31+16]
	082 Move X3, [X24]
	083 Add X0, X31, 0
	084 Move W2, W22
	085 Add W8, W1, 1
	086 Move [X31+16], W8
	087 Call 0x2B8D500, X0, X1, X2
	088 Move W1, [X31+16]
	089 Move X3, [X24]
	090 Add X0, X31, 0
	091 Move W2, W21
	092 Add W8, W1, 1
	093 Move [X31+16], W8
	094 Call 0x2B8D500, X0, X1, X2
	095 Move X8, [X20+16]
	096 Move X9, [X31+80]
	097 Move V0, [X31+4]
	098 Move X30, [X31+96]
	099 NotImplemented "Instruction NOP not yet implemented."
	100 NotImplemented "Instruction SMADDL not yet implemented."
	101 Move [X8+16], X9
	102 Move [X8], V0
	103 Move X8, [X20+16]
	104 Move X9, [X31+48]
	105 Move V0, [X31+2]
	106 NotImplemented "Instruction NOP not yet implemented."
	107 NotImplemented "Instruction SMADDL not yet implemented."
	108 Move [X8+16], X9
	109 Move [X8], V0
	110 Move X8, [X20+16]
	111 Move X9, [X31+16]
	112 Move V0, [X31]
	113 Move X22, [X31+128]
	114 Move X21, [X31+136]
	115 NotImplemented "Instruction NOP not yet implemented."
	116 NotImplemented "Instruction SMADDL not yet implemented."
	117 Move X20, [X31+144]
	118 Move X19, [X31+152]
	119 Move X24, [X31+112]
	120 Move X23, [X31+120]
	121 Move [X8+16], X9
	122 Move [X8], V0
	123 Add X31, X31, 160
	124 Return 

Method: System.Void RemovePair(System.Int32 r, System.Int32 j, System.Int32 k)

Disassembly:
	0x03ABB27C B.NE 0x3ABB230
	0x03ABB280 B 0x3ABB1EC
	0x03ABB284 CMP W6, 0x1
	0x03ABB288 B.LT 0x3ABB2B4
	0x03ABB28C MOV W12, W6
	0x03ABB290 MOV X13, X8
	0x03ABB294 MOV X14, X9
	0x03ABB298 LDR W15, [X13], #0x4
	0x03ABB29C SUBS X12, X12, 0x1
	0x03ABB2A0 STR W15, [X14], #0x4
	0x03ABB2A4 B.NE 0x3ABB298
	0x03ABB2A8 CMP W6, 0x1
	0x03ABB2AC MOV W13, W31
	0x03ABB2B0 B.GE 0x3ABB1DC
	0x03ABB2B4 LDR X1, [X19]
	0x03ABB2B8 ADD X0, X31, 0xA0
	0x03ABB2BC BL 0x23D5AD4
	0x03ABB2C0 LDR X1, [X19]
	0x03ABB2C4 ADD X0, X31, 0xB0
	0x03ABB2C8 BL 0x23D5AD4
	0x03ABB2CC LDR X0, [X31 + 0x50]
	0x03ABB2D0 LDR X1, [X31 + 0x40]
	0x03ABB2D4 LDP X20, X19, [X31 + 0x110]
	0x03ABB2D8 LDP X22, X21, [X31 + 0x100]
	0x03ABB2DC LDP X24, X23, [X31 + 0xF0]
	0x03ABB2E0 LDP X26, X25, [X31 + 0xE0]
	0x03ABB2E4 LDP X28, X27, [X31 + 0xD0]
	0x03ABB2E8 LDP X29, X30, [X31 + 0xC0]
	0x03ABB2EC ADD X31, X31, 0x120
	0x03ABB2F0 RET
	0x03ABB2F4 SUB X31, X31, 0x70
	0x03ABB2F8 STP X30, X23, [X31 + 0x40]
	0x03ABB2FC STP X22, X21, [X31 + 0x50]
	0x03ABB300 STP X20, X19, [X31 + 0x60]
	0x03ABB304 ADRP X21, 0x927000
	0x03ABB308 ADRP X23, 0x69D000
	0x03ABB30C LDRB W8, [X21 + 0x49D]
	0x03ABB310 LDR X23, [X23 + 0x2A0]
	0x03ABB314 MOV X19, X1
	0x03ABB318 MOV X20, X0
	0x03ABB31C TBNZ X8, 0x0, 0x3ABB340
	0x03ABB320 ADRP X0, 0x69D000
	0x03ABB324 LDR X0, [X0 + 0x220]
	0x03ABB328 BL 0x1C16CF4
	0x03ABB32C ADRP X0, 0x69D000
	0x03ABB330 LDR X0, [X0 + 0x2A0]
	0x03ABB334 BL 0x1C16CF4
	0x03ABB338 MOVZ W8, 0x1
	0x03ABB33C STRB W8, [X21 + 0x49D]
	0x03ABB340 ADRP X22, 0x69D000
	0x03ABB344 LDR X22, [X22 + 0x220]
	0x03ABB348 ADD X1, X31, 0x3C
	0x03ABB34C MOV X0, X20
	0x03ABB350 STP X31, X31, [X31 + 0x28]
	0x03ABB354 STP X31, X31, [X31 + 0x18]
	0x03ABB358 STR W31, [X31 + 0x3C]
	0x03ABB35C BL 0x3ABADD0
	0x03ABB360 STP X0, X1, [X31 + 0x28]
	0x03ABB364 LDR W21, [X31 + 0x3C]
	0x03ABB368 LDR W2, [X20 + 0xA8]
	0x03ABB36C LDR X4, [X23]
	0x03ABB370 ADD X0, X31, 0x18
	0x03ABB374 MOVZ W3, 0x1
	0x03ABB378 MOV W1, W21
	0x03ABB37C BL 0x23FCDA4
	0x03ABB380 CMP W21, 0x1
	0x03ABB384 STR W31, [X19]
	0x03ABB388 B.LT 0x3ABB3EC
	0x03ABB38C MOV X8, X31
	0x03ABB390 MOVZ W9, 0xC
	0x03ABB394 LDR X10, [X20 + 0x78]
	0x03ABB398 LDR W10, [X10, X8, LSL #2]
	0x03ABB39C ADDS W31, W10, 0x1
	0x03ABB3A0 B.NE 0x3ABB3E0
	0x03ABB3A4 LDRSW X10, [X19]
	0x03ABB3A8 ADD W11, W10, 0x1
	0x03ABB3AC STR W11, [X19]
	0x03ABB3B0 LDR X11, [X31 + 0x28]
	0x03ABB3B4 LDR X12, [X31 + 0x18]
	0x03ABB3B8 NOP
	0x03ABB3BC MADD X11, X8, X9, X11
	0x03ABB3C0 LDR X13, [X11]
	0x03ABB3C4 LDR W11, [X11 + 0x8]
	0x03ABB3C8 NOP
	0x03ABB3CC MADD X10, X10, X9, X12
	0x03ABB3D0 STR X13, [X31 + 0x8]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X30
	003 Move [X31+32], X28
	004 Move [X31+40], X27
	005 Move [X31+48], X26
	006 Move [X31+56], X25
	007 Move [X31+64], X24
	008 Move [X31+72], X23
	009 Move [X31+80], X22
	010 Move [X31+88], X21
	011 Move [X31+96], X20
	012 Move [X31+104], X19
	013 Move X20, 0x928000
	014 Move W8, [X20+1175]
	015 Move W21, W3
	016 Move W22, W2
	017 Move W23, W1
	018 Move X19, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {31}
	023 Move X0, 0x69E000
	024 Move X0, [X0+592]
	025 Call 0x1C17CF4
	026 Move X0, 0x69E000
	027 Move X0, [X0+608]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X20+1175], W8
	031 Move [X31], X31
	032 Move [X31+8], X31
	033 Move X8, [X19+16]
	034 Move W9, 24
	035 NotImplemented "Instruction SMADDL not yet implemented."
	036 Move W27, [X8+16]
	037 Move W25, [X8+20]
	038 Move V0, [X8]
	039 Subtract W20, W27, 2
	040 Move [X31], V0
	041 Move X28, 0x69E000
	042 Move X28, [X28+592]
	043 Move X26, W23
	044 Move W23, 1
	045 Move X2, [X28]
	046 Subtract W24, W23, 1
	047 Add X0, X31, 0
	048 Move W1, W24
	049 Call 0x2B8D4C0, X0, X1
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Move X2, [X28]
	052 Add X0, X31, 0
	053 Move W1, W23
	054 Call 0x2B8D4C0, X0, X1
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Add W23, W23, 2
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Move X2, [X28]
	059 Add X0, X31, 0
	060 Move W1, W20
	061 Call 0x2B8D4C0, X0, X1
	062 Move X21, 0x69E000
	063 Move X21, [X21+608]
	064 Move W2, W0
	065 Add X0, X31, 0
	066 Move W1, W24
	067 Move X3, [X21]
	068 Call 0x2B8D500, X0, X1, X2
	069 Move X2, [X28]
	070 Subtract W1, W27, 1
	071 Add X0, X31, 0
	072 Call 0x2B8D4C0, X0, X1
	073 Move X3, [X21]
	074 Move W2, W0
	075 Add X0, X31, 0
	076 Move W1, W23
	077 Call 0x2B8D500, X0, X1, X2
	078 Move X8, [X19+16]
	079 Move V0, [X31]
	080 Move W9, 24
	081 NotImplemented "Instruction MADD not yet implemented."
	082 Move [X8], V0
	083 Move [X8+16], W20
	084 Move [X8+20], W25
	085 Move X20, [X31+96]
	086 Move X19, [X31+104]
	087 Move X22, [X31+80]
	088 Move X21, [X31+88]
	089 Move X24, [X31+64]
	090 Move X23, [X31+72]
	091 Move X26, [X31+48]
	092 Move X25, [X31+56]
	093 Move X28, [X31+32]
	094 Move X27, [X31+40]
	095 Move X30, [X31+16]
	096 Add X31, X31, 112
	097 Return 

Method: System.Void RemoveTriangle(System.Int32 i, System.Int32 j, System.Int32 k)

Disassembly:
	0x03ABB3D4 STR W11, [X31 + 0x10]
	0x03ABB3D8 STR W11, [X10 + 0x8]
	0x03ABB3DC STR X13, [X10]
	0x03ABB3E0 ADD X8, X8, 0x1
	0x03ABB3E4 CMP X8, X21
	0x03ABB3E8 B.NE 0x3ABB394
	0x03ABB3EC LDR X1, [X22]
	0x03ABB3F0 ADD X0, X31, 0x28
	0x03ABB3F4 BL 0x23FCFF8
	0x03ABB3F8 LDP X0, X1, [X31 + 0x18]
	0x03ABB3FC LDP X20, X19, [X31 + 0x60]
	0x03ABB400 LDP X22, X21, [X31 + 0x50]
	0x03ABB404 LDP X30, X23, [X31 + 0x40]
	0x03ABB408 ADD X31, X31, 0x70
	0x03ABB40C RET
	0x03ABB410 SUB X31, X31, 0x60
	0x03ABB414 STR X30, [X31 + 0x30]
	0x03ABB418 STP X22, X21, [X31 + 0x40]
	0x03ABB41C STP X20, X19, [X31 + 0x50]
	0x03ABB420 ADRP X20, 0x927000
	0x03ABB424 ADRP X22, 0x69D000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move W19, W3
	007 Move W20, W2
	008 Move W21, W1
	009 Move X22, X0
	010 Call Tessellator.RemovePair, X0, X1, X2, X3
	011 Move X0, X22
	012 Move W1, W20
	013 Move W2, W19
	014 Move W3, W21
	015 Call Tessellator.RemovePair, X0, X1, X2, X3
	016 Move X0, X22
	017 Move W1, W19
	018 Move W2, W21
	019 Move W3, W20
	020 Move X20, [X31+32]
	021 Move X19, [X31+40]
	022 Move X22, [X31+16]
	023 Move X21, [X31+24]
	024 Move X30, [X31+48]
	025 Call Tessellator.RemovePair, X0, X1, X2, X3
	026 Return 

Method: System.Void EdgeFlip(System.Int32 i, System.Int32 j)

Disassembly:
	0x03ABB428 LDRB W8, [X20 + 0x49E]
	0x03ABB42C LDR X22, [X22 + 0x2A0]
	0x03ABB430 MOV X19, X0
	0x03ABB434 TBNZ X8, 0x0, 0x3ABB458
	0x03ABB438 ADRP X0, 0x69D000
	0x03ABB43C LDR X0, [X0 + 0x220]
	0x03ABB440 BL 0x1C16CF4
	0x03ABB444 ADRP X0, 0x69D000
	0x03ABB448 LDR X0, [X0 + 0x2A0]
	0x03ABB44C BL 0x1C16CF4
	0x03ABB450 MOVZ W8, 0x1
	0x03ABB454 STRB W8, [X20 + 0x49E]
	0x03ABB458 ADRP X21, 0x69D000
	0x03ABB45C LDR X21, [X21 + 0x220]
	0x03ABB460 ADD X1, X31, 0x3C
	0x03ABB464 MOV X0, X19
	0x03ABB468 STP X31, X31, [X31 + 0x20]
	0x03ABB46C STP X31, X31, [X31 + 0x10]
	0x03ABB470 STR W31, [X31 + 0x3C]
	0x03ABB474 BL 0x3ABADD0
	0x03ABB478 STP X0, X1, [X31 + 0x20]
	0x03ABB47C LDR W20, [X31 + 0x3C]
	0x03ABB480 LDR W2, [X19 + 0xA8]
	0x03ABB484 LDR X4, [X22]
	0x03ABB488 ADD X0, X31, 0x10
	0x03ABB48C MOVZ W3, 0x1
	0x03ABB490 MOV W1, W20
	0x03ABB494 BL 0x23FCDA4
	0x03ABB498 CMP W20, 0x1
	0x03ABB49C B.LT 0x3ABB4FC
	0x03ABB4A0 MOV X8, X31
	0x03ABB4A4 MOV W9, W31
	0x03ABB4A8 MOVZ W10, 0xC
	0x03ABB4AC LDR X11, [X19 + 0x78]
	0x03ABB4B0 LDR W11, [X11, X8, LSL #2]
	0x03ABB4B4 CMP W11, 0x1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move W19, W2
	008 Move W20, W1
	009 Move X21, X0
	010 Call Tessellator.OppositeOf, X0, X1, X2
	011 Move W22, W0
	012 Move X0, X21
	013 Move W1, W19
	014 Move W2, W20
	015 Call Tessellator.OppositeOf, X0, X1, X2
	016 Move W23, W0
	017 Move X0, X21
	018 Move W1, W20
	019 Move W2, W19
	020 Move W3, W22
	021 Call Tessellator.RemoveTriangle, X0, X1, X2, X3
	022 Move X0, X21
	023 Move W1, W19
	024 Move W2, W20
	025 Move W3, W23
	026 Call Tessellator.RemoveTriangle, X0, X1, X2, X3
	027 Move X0, X21
	028 Move W1, W20
	029 Move W2, W23
	030 Move W3, W22
	031 Call Tessellator.AddTriangle, X0, X1, X2, X3
	032 Move X0, X21
	033 Move W1, W19
	034 Move W2, W22
	035 Move X20, [X31+32]
	036 Move X19, [X31+40]
	037 Move X22, [X31+16]
	038 Move X21, [X31+24]
	039 Move W3, W23
	040 Move X30, [X31+48]
	041 Move X23, [X31+56]
	042 Call Tessellator.AddTriangle, X0, X1, X2, X3
	043 Return 

Method: System.Boolean Flip(Unity.Collections.NativeArray`1<Unity.Mathematics.float2> points, ref Unity.Collections.NativeArray`1<System.Int32> stack, ref System.Int32 stackCount, System.Int32 a, System.Int32 b, System.Int32 x)

Disassembly:
	0x03ABB4B8 B.NE 0x3ABB4F0
	0x03ABB4BC LDR X11, [X31 + 0x20]
	0x03ABB4C0 LDR X12, [X31 + 0x10]
	0x03ABB4C4 NOP
	0x03ABB4C8 MADD X11, X8, X10, X11
	0x03ABB4CC LDR X13, [X11]
	0x03ABB4D0 LDR W11, [X11 + 0x8]
	0x03ABB4D4 NOP
	0x03ABB4D8 SMADDL X12, X9, X10, X12
	0x03ABB4DC ADD W9, W9, 0x1
	0x03ABB4E0 STR X13, [X31]
	0x03ABB4E4 STR W11, [X31 + 0x8]
	0x03ABB4E8 STR W11, [X12 + 0x8]
	0x03ABB4EC STR X13, [X12]
	0x03ABB4F0 ADD X8, X8, 0x1
	0x03ABB4F4 CMP X8, X20
	0x03ABB4F8 B.NE 0x3ABB4AC
	0x03ABB4FC LDR X1, [X21]
	0x03ABB500 ADD X0, X31, 0x20
	0x03ABB504 BL 0x23FCFF8
	0x03ABB508 LDP X0, X1, [X31 + 0x10]
	0x03ABB50C LDP X20, X19, [X31 + 0x50]
	0x03ABB510 LDP X22, X21, [X31 + 0x40]
	0x03ABB514 LDR X30, [X31 + 0x30]
	0x03ABB518 ADD X31, X31, 0x60
	0x03ABB51C RET
	0x03ABB520 SUB X31, X31, 0x140
	0x03ABB524 STP D9, D8, [X31 + 0xD0]
	0x03ABB528 STP X29, X30, [X31 + 0xE0]
	0x03ABB52C STP X28, X27, [X31 + 0xF0]
	0x03ABB530 STP X26, X25, [X31 + 0x100]
	0x03ABB534 STP X24, X23, [X31 + 0x110]
	0x03ABB538 STP X22, X21, [X31 + 0x120]
	0x03ABB53C STP X20, X19, [X31 + 0x130]
	0x03ABB540 MRS X25, 0xC000
	0x03ABB544 LDR X8, [X25 + 0x28]
	0x03ABB548 ADRP X27, 0x927000
	0x03ABB54C ADRP X26, 0x661000
	0x03ABB550 MOV W23, W6
	0x03ABB554 STR X8, [X31 + 0xC8]
	0x03ABB558 LDRB W8, [X27 + 0x49F]
	0x03ABB55C LDR X26, [X26 + 0xD8]
	0x03ABB560 MOV X22, X4
	0x03ABB564 MOV W24, W3
	0x03ABB568 MOV X19, X2
	0x03ABB56C MOV X20, X1
	0x03ABB570 MOV X21, X0
	0x03ABB574 TBNZ X8, 0x0, 0x3ABB5F8
	0x03ABB578 ADRP X0, 0x69D000
	0x03ABB57C LDR X0, [X0 + 0x278]
	0x03ABB580 BL 0x1C16CF4
	0x03ABB584 ADRP X0, 0x69D000
	0x03ABB588 LDR X0, [X0 + 0x2C0]
	0x03ABB58C BL 0x1C16CF4
	0x03ABB590 ADRP X0, 0x661000
	0x03ABB594 LDR X0, [X0 + 0xD8]
	0x03ABB598 BL 0x1C16CF4
	0x03ABB59C ADRP X0, 0x69D000
	0x03ABB5A0 LDR X0, [X0 + 0x2C8]
	0x03ABB5A4 BL 0x1C16CF4
	0x03ABB5A8 ADRP X0, 0x69D000
	0x03ABB5AC LDR X0, [X0 + 0x2D0]
	0x03ABB5B0 BL 0x1C16CF4
	0x03ABB5B4 ADRP X0, 0x69D000
	0x03ABB5B8 LDR X0, [X0 + 0x2D8]
	0x03ABB5BC BL 0x1C16CF4
	0x03ABB5C0 ADRP X0, 0x69D000
	0x03ABB5C4 LDR X0, [X0 + 0x2E0]
	0x03ABB5C8 BL 0x1C16CF4
	0x03ABB5CC ADRP X0, 0x662000
	0x03ABB5D0 LDR X0, [X0 + 0x138]
	0x03ABB5D4 BL 0x1C16CF4
	0x03ABB5D8 ADRP X0, 0x69D000
	0x03ABB5DC LDR X0, [X0 + 0x2E8]
	0x03ABB5E0 BL 0x1C16CF4
	0x03ABB5E4 ADRP X0, 0x69D000
	0x03ABB5E8 LDR X0, [X0 + 0x2A0]
	0x03ABB5EC BL 0x1C16CF4
	0x03ABB5F0 MOVZ W8, 0x1
	0x03ABB5F4 STRB W8, [X27 + 0x49F]
	0x03ABB5F8 UBFM W8, W23, 0x1F, 0x1E
	0x03ABB5FC STP X31, X31, [X31 + 0x88]
	0x03ABB600 STP X31, X31, [X31 + 0x70]
	0x03ABB604 STP X31, X31, [X31 + 0xB0]
	0x03ABB608 STR W31, [X31 + 0xC0]
	0x03ABB60C STP X31, X31, [X31 + 0x98]
	0x03ABB610 STR W31, [X31 + 0xA8]
	0x03ABB614 STP W8, W24, [X21 + 0x6C]
	0x03ABB618 STR W23, [X21 + 0x68]
	0x03ABB61C STR W31, [X21 + 0x30]
	0x03ABB620 LDR X0, [X26]
	0x03ABB624 ADRP X28, 0x69D000
	0x03ABB628 ADRP X27, 0x662000
	0x03ABB62C ADRP X24, 0x69D000
	0x03ABB630 ADRP X23, 0x69D000
	0x03ABB634 LDR W8, [X0 + 0xE0]

ISIL:
	001 Move [X31-144], D15
	002 Move [X31-136], D14
	003 Move [X31+16], D13
	004 Move [X31+24], D12
	005 Move [X31+32], D11
	006 Move [X31+40], D10
	007 Move [X31+48], D9
	008 Move [X31+56], D8
	009 Move [X31+64], X30
	010 Move [X31+72], X27
	011 Move [X31+80], X26
	012 Move [X31+88], X25
	013 Move [X31+96], X24
	014 Move [X31+104], X23
	015 Move [X31+112], X22
	016 Move [X31+120], X21
	017 Move [X31+128], X20
	018 Move [X31+136], X19
	019 Move X26, 0x928000
	020 Move W8, [X26+1176]
	021 Move W22, W7
	022 Move W20, W6
	023 Move W25, W5
	024 Move X19, X4
	025 Move X21, X3
	026 Move X23, X1
	027 Move X24, X0
	028 Move TEMP, X8
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfEqual {37}
	032 Move X0, 0x662000
	033 Move X0, [X0+216]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X26+1176], W8
	037 Move X0, X24
	038 Move W1, W25
	039 Move W2, W20
	040 Call Tessellator.OppositeOf, X0, X1, X2
	041 Move TEMP, X0
	042 And TEMP, TEMP, -2147483648
	043 Compare TEMP, -2147483648
	044 JumpIfEqual {103}
	045 Move W26, W0
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Move W27, W22
	048 Move W22, W25
	049 Move W27, W26
	050 Move W26, W22
	051 Move W22, W20
	052 Move W20, W25
	053 Move X0, X24
	054 Move W1, W20
	055 Move W2, W22
	056 Call Tessellator.FindConstraint, X0, X1, X2
	057 Add W31, W0, 1
	058 Move X12, 0x662000
	059 Move X12, [X12+216]
	060 Add X8, X23, W20
	061 Add X9, X23, W22
	062 Add X10, X23, W26
	063 Move X0, [X12]
	064 Add X11, X23, W27
	065 Move S15, [X8]
	066 Move S14, [X8+4]
	067 Move S13, [X9]
	068 Move S12, [X9+4]
	069 Move S11, [X10]
	070 Move S9, [X10+4]
	071 Move W8, [X0+224]
	072 Move S10, [X11]
	073 Move S8, [X11+4]
	074 Compare W8, 0
	075 JumpIfNotEqual {77}
	076 Call 0x1C17DFC
	077 Move V0, V15
	078 Move V1, V14
	079 Move V2, V13
	080 Move V3, V12
	081 Move V4, V11
	082 Move V5, V9
	083 Move V6, V10
	084 Move V7, V8
	085 Move X0, X31
	086 Call ModuleHandle.IsInsideCircle, X0, X1, X2, X3
	087 Move TEMP, X0
	088 And TEMP, TEMP, 1
	089 Compare TEMP, 1
	090 JumpIfNotEqual {103}
	091 NotImplemented "Instruction LDRSW not yet implemented."
	092 Move W9, [X21+8]
	093 Add W10, W8, 2
	094 NotImplemented "Instruction CMP not yet implemented."
	095 Add W9, W8, 1
	096 Move [X19], W9
	097 Move X9, [X21]
	098 Move [X9], W20
	099 NotImplemented "Instruction LDRSW not yet implemented."
	100 Add W10, W8, 1
	101 Move [X19], W10
	102 Move [X9], W22
	103 Move W0, 1
	104 Move X20, [X31+128]
	105 Move X19, [X31+136]
	106 Move X22, [X31+112]
	107 Move X21, [X31+120]
	108 Move X24, [X31+96]
	109 Move X23, [X31+104]
	110 Move X26, [X31+80]
	111 Move X25, [X31+88]
	112 Move X30, [X31+64]
	113 Move X27, [X31+72]
	114 Move D9, [X31+48]
	115 Move D8, [X31+56]
	116 Move D11, [X31+32]
	117 Move D10, [X31+40]
	118 Move D13, [X31+16]
	119 Move D12, [X31+24]
	120 Move D15, [X31+144]
	121 Move D14, [X31+152]
	122 Return X0
	123 Move W0, W31

Method: Unity.Collections.NativeArray`1<Unity.Mathematics.int3> GetCells(ref System.Int32 count)

Disassembly:
	0x03ABB638 LDR X28, [X28 + 0x2A0]
	0x03ABB63C LDR X27, [X27 + 0x138]
	0x03ABB640 LDR X24, [X24 + 0x2E8]
	0x03ABB644 LDR X23, [X23 + 0x2E0]
	0x03ABB648 CBNZ W8, 0x3ABB654
	0x03ABB64C BL 0x1C16DFC
	0x03ABB650 LDR X0, [X26]
	0x03ABB654 LDR X8, [X0 + 0xB8]
	0x03ABB658 LDR W2, [X21 + 0xA8]
	0x03ABB65C LDR X4, [X28]
	0x03ABB660 ADD X0, X31, 0x60
	0x03ABB664 LDR W1, [X8 + 0x10]
	0x03ABB668 MOVZ W3, 0x1
	0x03ABB66C STP X31, X31, [X31 + 0x60]
	0x03ABB670 BL 0x23FCDA4
	0x03ABB674 LDR V0, [X31 + 0x6]
	0x03ABB678 LDR W8, [X21 + 0x6C]
	0x03ABB67C LDR W2, [X21 + 0xA8]
	0x03ABB680 ADD X0, X31, 0x50
	0x03ABB684 STR V0, [X21 + 0x2]
	0x03ABB688 LDR X4, [X27]
	0x03ABB68C ADD W9, W8, 0x1
	0x03ABB690 MUL W1, W9, W8
	0x03ABB694 MOVZ W3, 0x1
	0x03ABB698 STP X31, X31, [X31 + 0x50]
	0x03ABB69C BL 0x23D58AC
	0x03ABB6A0 LDR V0, [X31 + 0x5]
	0x03ABB6A4 LDR W8, [X21 + 0x6C]
	0x03ABB6A8 LDR W2, [X21 + 0xA8]
	0x03ABB6AC ADD X0, X31, 0x40
	0x03ABB6B0 STUR V0, [X21 + 0x38]
	0x03ABB6B4 LDR X4, [X27]
	0x03ABB6B8 ADD W9, W8, 0x1
	0x03ABB6BC MUL W1, W9, W8
	0x03ABB6C0 MOVZ W3, 0x1
	0x03ABB6C4 STP X31, X31, [X31 + 0x40]
	0x03ABB6C8 BL 0x23D58AC
	0x03ABB6CC LDR V0, [X31 + 0x4]
	0x03ABB6D0 LDR W8, [X21 + 0x70]
	0x03ABB6D4 LDR W2, [X21 + 0xA8]
	0x03ABB6D8 ADD X0, X31, 0x88
	0x03ABB6DC STUR V0, [X21 + 0x48]
	0x03ABB6E0 LDR X4, [X24]
	0x03ABB6E4 UBFM W1, W8, 0x1D, 0x1C
	0x03ABB6E8 MOVZ W3, 0x1
	0x03ABB6EC BL 0x23EA990
	0x03ABB6F0 STR W31, [X31 + 0x84]
	0x03ABB6F4 LDR W8, [X21 + 0x70]
	0x03ABB6F8 LDR W9, [X21 + 0x68]
	0x03ABB6FC LDR W2, [X21 + 0xA8]
	0x03ABB700 LDR X4, [X23]
	0x03ABB704 ADD X0, X31, 0x70
	0x03ABB708 ADD W1, W8, W9, 0x1, LSL
	0x03ABB70C MOVZ W3, 0x1
	0x03ABB710 BL 0x23E9AAC
	0x03ABB714 LDR W8, [X21 + 0x70]
	0x03ABB718 CMP W8, 0x1
	0x03ABB71C B.LT 0x3ABB754
	0x03ABB720 MOV X8, X31
	0x03ABB724 MOV X23, X31
	0x03ABB728 LDR X9, [X31 + 0x70]
	0x03ABB72C LDR X10, [X20, X23, LSL #3]
	0x03ABB730 ADD X9, X9, X8
	0x03ABB734 STP X10, X31, [X9]
	0x03ABB738 STP W23, W31, [X9 + 0x10]
	0x03ABB73C LDRSW X9, [X21 + 0x70]
	0x03ABB740 ADD X23, X23, 0x1
	0x03ABB744 ADD X8, X8, 0x18
	0x03ABB748 CMP X23, X9
	0x03ABB74C B.LT 0x3ABB728
	0x03ABB750 B 0x3ABB758
	0x03ABB754 MOV W23, W31
	0x03ABB758 LDR W8, [X21 + 0x68]
	0x03ABB75C CMP W8, 0x1
	0x03ABB760 ADRP X8, 0x69D000
	0x03ABB764 LDR X8, [X8 + 0x2C8]
	0x03ABB768 B.LT 0x3ABB81C
	0x03ABB76C MOV X9, X31
	0x03ABB770 ADD X10, X22, 0x4
	0x03ABB774 MOVZ W11, 0x18
	0x03ABB778 MOVZ W12, 0x2
	0x03ABB77C MOVZ W13, 0x1
	0x03ABB780 LDPSW D14, D15, [X10 - 0x8]
	0x03ABB784 ADD X14, X20, X14, 0x3, LSL
	0x03ABB788 ADD X15, X20, X15, 0x3, LSL
	0x03ABB78C LDP S2, S1, [X15]
	0x03ABB790 LDP S3, S0, [X14]

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+32], X30
	003 Move [X31+48], X28
	004 Move [X31+56], X27
	005 Move [X31+64], X26
	006 Move [X31+72], X25
	007 Move [X31+80], X24
	008 Move [X31+88], X23
	009 Move [X31+96], X22
	010 Move [X31+104], X21
	011 Move [X31+112], X20
	012 Move [X31+120], X19
	013 Move X22, 0x928000
	014 Move X21, 0x69E000
	015 Move W8, [X22+1177]
	016 Move X21, [X21+672]
	017 Move X19, X1
	018 Move X20, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {31}
	023 Move X0, 0x69E000
	024 Move X0, [X0+592]
	025 Call 0x1C17CF4
	026 Move X0, 0x69E000
	027 Move X0, [X0+672]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X22+1177], W8
	031 Move [X31+16], X31
	032 Move [X31+24], X31
	033 Move [X31], X31
	034 Move [X31+8], X31
	035 Move W8, [X20+112]
	036 Move W2, [X20+168]
	037 Move X4, [X21]
	038 Add X0, X31, 16
	039 Add W9, W8, 1
	040 Multiply W1, W9, W8
	041 Move W3, 1
	042 Call NativeArray`1<int3>..ctor, X0, X1, X2, X3
	043 Move [X19], W31
	044 Move W23, [X20+24]
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Move X25, 0x69E000
	047 Move X25, [X25+592]
	048 Move X24, X31
	049 Move W26, 24
	050 Move W27, 12
	051 Move X8, [X20+16]
	052 NotImplemented "Instruction NOP not yet implemented."
	053 NotImplemented "Instruction MADD not yet implemented."
	054 Move V0, [X8]
	055 Move [X31], V0
	056 Move W28, [X8+16]
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Move W21, W31
	059 Move X2, [X25]
	060 Add X0, X31, 0
	061 Move W1, W21
	062 Call 0x2B8D4C0, X0, X1
	063 Move X2, [X25]
	064 Add W21, W21, 1
	065 Move W22, W0
	066 Add X0, X31, 0
	067 Move W1, W21
	068 Call 0x2B8D4C0, X0, X1
	069 NotImplemented "Instruction CMP not yet implemented."
	070 NotImplemented "Instruction CSEL not yet implemented."
	071 NotImplemented "Instruction CMP not yet implemented."
	072 NotImplemented "Instruction LDRSW not yet implemented."
	073 Add W9, W8, 1
	074 Move [X19], W9
	075 Move X9, [X31+16]
	076 NotImplemented "Instruction NOP not yet implemented."
	077 NotImplemented "Instruction MADD not yet implemented."
	078 Move [X8], W24
	079 Move [X8+4], W22
	080 Move [X8+8], W0
	081 Add W21, W21, 1
	082 NotImplemented "Instruction CMP not yet implemented."
	083 Add X24, X24, 1
	084 NotImplemented "Instruction CMP not yet implemented."
	085 Move X0, [X31+16]
	086 Move X1, [X31+24]
	087 Move X20, [X31+112]
	088 Move X19, [X31+120]
	089 Move X22, [X31+96]
	090 Move X21, [X31+104]
	091 Move X24, [X31+80]
	092 Move X23, [X31+88]
	093 Move X26, [X31+64]
	094 Move X25, [X31+72]
	095 Move X28, [X31+48]
	096 Move X27, [X31+56]
	097 Move X30, [X31+32]
	098 Add X31, X31, 128
	099 Return X0

Method: System.Boolean ApplyDelaunay(Unity.Collections.NativeArray`1<Unity.Mathematics.float2> points, Unity.Collections.NativeArray`1<Unity.Mathematics.int2> edges)

Disassembly:
	0x03ABB794 FCMP S3, S2
	0x03ABB798 B.PL 0x3ABB7CC
	0x03ABB79C LDR X14, [X31 + 0x70]
	0x03ABB7A0 ADD W15, W23, 0x1
	0x03ABB7A4 SMADDL X14, X23, X11, X14
	0x03ABB7A8 STP S3, S0, [X14]
	0x03ABB7AC STP S2, S1, [X14 + 0x8]
	0x03ABB7B0 STP W9, W12, [X14 + 0x10]
	0x03ABB7B4 LDR X14, [X31 + 0x70]
	0x03ABB7B8 NOP
	0x03ABB7BC SMADDL X14, X15, X11, X14
	0x03ABB7C0 STP S2, S1, [X14]
	0x03ABB7C4 STP S3, S0, [X14 + 0x8]
	0x03ABB7C8 B 0x3ABB7FC
	0x03ABB7CC B.LE 0x3ABB808
	0x03ABB7D0 LDR X14, [X31 + 0x70]
	0x03ABB7D4 ADD W15, W23, 0x1
	0x03ABB7D8 SMADDL X14, X23, X11, X14
	0x03ABB7DC STP S2, S1, [X14]
	0x03ABB7E0 STP S3, S0, [X14 + 0x8]
	0x03ABB7E4 STP W9, W12, [X14 + 0x10]
	0x03ABB7E8 LDR X14, [X31 + 0x70]
	0x03ABB7EC NOP
	0x03ABB7F0 SMADDL X14, X15, X11, X14
	0x03ABB7F4 STP S3, S0, [X14]
	0x03ABB7F8 STP S2, S1, [X14 + 0x8]
	0x03ABB7FC ADD W23, W23, 0x2
	0x03ABB800 STR W9, [X14 + 0x10]
	0x03ABB804 STR W13, [X14 + 0x14]!
	0x03ABB808 LDRSW X14, [X21 + 0x68]
	0x03ABB80C ADD X9, X9, 0x1
	0x03ABB810 ADD X10, X10, 0x8
	0x03ABB814 CMP X9, X14
	0x03ABB818 B.LT 0x3ABB780
	0x03ABB81C LDP X0, X1, [X31 + 0x70]
	0x03ABB820 LDR X2, [X8]
	0x03ABB824 ADRP X24, 0x69D000
	0x03ABB828 LDR X24, [X24 + 0x2C0]
	0x03ABB82C BL 0x2222674
	0x03ABB830 LDR X8, [X26]
	0x03ABB834 MOV X22, X0
	0x03ABB838 LDR W9, [X8 + 0xE0]
	0x03ABB83C CBNZ W9, 0x3ABB848
	0x03ABB840 MOV X0, X8
	0x03ABB844 BL 0x1C16DFC
	0x03ABB848 LDR X4, [X24]
	0x03ABB84C SUB W2, W23, 0x1
	0x03ABB850 MOV X0, X22
	0x03ABB854 MOV W1, W31
	0x03ABB858 MOV X3, X31
	0x03ABB85C BL 0x221F140
	0x03ABB860 LDR X8, [X31 + 0x70]
	0x03ABB864 ADRP X22, 0x926000
	0x03ABB868 LDRB W9, [X22 + 0x577]
	0x03ABB86C LDR V8, [X8]
	0x03ABB870 CBNZ W9, 0x3ABB888
	0x03ABB874 ADRP X0, 0x638000
	0x03ABB878 LDR X0, [X0 + 0x5A8]
	0x03ABB87C BL 0x1C16CF4
	0x03ABB880 MOVZ W8, 0x1
	0x03ABB884 STRB W8, [X22 + 0x577]
	0x03ABB888 ADRP X8, 0x638000
	0x03ABB88C LDR X8, [X8 + 0x5A8]
	0x03ABB890 ADRP X22, 0x69D000
	0x03ABB894 ADD X27, X31, 0x98
	0x03ABB898 FABS S9, S8
	0x03ABB89C LDR X0, [X8]
	0x03ABB8A0 LDR W8, [X0 + 0xE0]
	0x03ABB8A4 LDR X22, [X22 + 0x278]
	0x03ABB8A8 CBNZ W8, 0x3ABB8B0
	0x03ABB8AC BL 0x1C16DFC
	0x03ABB8B0 ADRP X26, 0x69D000
	0x03ABB8B4 ADRP X24, 0x69D000
	0x03ABB8B8 LDR X26, [X26 + 0x2D0]
	0x03ABB8BC LDR X24, [X24 + 0x2D8]
	0x03ABB8C0 FMOV D0, 2
	0x03ABB8C4 FMOV D1, -16
	0x03ABB8C8 MOV X0, X31
	0x03ABB8CC BL 0x337F438
	0x03ABB8D0 LDR W4, [X21 + 0x6C]
	0x03ABB8D4 LDP X1, X2, [X21 + 0x38]
	0x03ABB8D8 LDR X5, [X22]
	0x03ABB8DC FMOV S1, 1
	0x00000000 INVALID
	0x03ABB8E4 FADD S1, S9, S1
	0x03ABB8E8 FMUL S0, S1, S0
	0x03ABB8EC MUL W3, W4, W4
	0x03ABB8F0 ADD X0, X31, 0x60
	0x03ABB8F4 FSUB S8, S8, S0
	0x03ABB8F8 STP X31, X31, [X31 + 0x60]
	0x03ABB8FC BL 0x2B8C120
	0x03ABB900 LDR V0, [X31 + 0x6]
	0x03ABB904 LDR X5, [X22]
	0x03ABB908 ADD X0, X31, 0x50
	0x03ABB90C STUR V0, [X27 + 0x1C]
	0x03ABB910 LDR W4, [X21 + 0x6C]
	0x03ABB914 LDP X1, X2, [X21 + 0x48]
	0x03ABB918 STP X31, X31, [X31 + 0x50]
	0x03ABB91C MUL W3, W4, W4
	0x03ABB920 BL 0x2B8C120
	0x03ABB924 LDR V0, [X31 + 0x5]
	0x03ABB928 LDR X8, [X31 + 0x88]
	0x03ABB92C MOVZ W22, 0x1
	0x03ABB930 MOVZ W9, 0x3F800000
	0x03ABB934 STR W22, [X31 + 0x84]
	0x03ABB938 STUR V0, [X27 + 0x4]
	0x03ABB93C STR W9, [X8 + 0x4]
	0x03ABB940 MOV X9, INVALID
	0x03ABB944 STR S8, [X8]
	0x03ABB948 STR S8, [X8 + 0x8]
	0x03ABB94C STUR X9, [X8 + 0xC]
	0x03ABB950 LDR V0, [X31 + 0xB]
	0x03ABB954 LDR W9, [X31 + 0xC0]
	0x03ABB958 CMP W23, 0x1
	0x03ABB95C STUR V0, [X8 + 0x14]
	0x03ABB960 STP W9, W31, [X8 + 0x24]
	0x03ABB964 LDR V0, [X27]
	0x03ABB968 LDR W9, [X31 + 0xA8]
	0x03ABB96C STR X31, [X8 + 0x40]
	0x03ABB970 STUR V0, [X8 + 0x2C]
	0x03ABB974 STR W9, [X8 + 0x3C]
	0x03ABB978 B.LT 0x3ABBA38
	0x03ABB97C MOVZ W8, 0x18
	0x03ABB980 MOV X22, X31
	0x03ABB984 UMADDL X23, X23, X8, X31
	0x03ABB988 LDR X8, [X31 + 0x70]
	0x03ABB98C ADD X9, X8, X22
	0x03ABB990 LDR W10, [X9 + 0x14]
	0x03ABB994 CMP W10, 0x2
	0x03ABB998 B.EQ 0x3ABB9CC
	0x03ABB99C CBNZ W10, 0x3ABB9F8
	0x03ABB9A0 ADD X8, X8, X22
	0x03ABB9A4 LDP X1, X2, [X31 + 0x88]
	0x03ABB9A8 LDR W3, [X31 + 0x84]
	0x03ABB9AC LDP S0, S1, [X8]
	0x03ABB9B0 LDR W6, [X8 + 0x10]
	0x03ABB9B4 MOV X0, X21
	0x03ABB9B8 MOV X4, X20
	0x03ABB9BC MOV X5, X19
	0x03ABB9C0 BL 0x3AB90D8
	0x03ABB9C4 TBNZ X0, 0x0, 0x3ABBA20
	0x03ABB9C8 B 0x3ABBA34
	0x03ABB9CC LDR X8, [X9 + 0x10]
	0x03ABB9D0 LDR V0, [X9]
	0x03ABB9D4 LDP X1, X2, [X31 + 0x88]
	0x03ABB9D8 ADD X3, X31, 0x84
	0x03ABB9DC ADD X6, X31, 0x20
	0x03ABB9E0 MOV X0, X21
	0x03ABB9E4 STR V0, [X31 + 0x2]
	0x03ABB9E8 STR X8, [X31 + 0x30]
	0x03ABB9EC BL 0x3AB95B8
	0x03ABB9F0 TBNZ X0, 0x0, 0x3ABBA20
	0x03ABB9F4 B 0x3ABBA34
	0x03ABB9F8 ADD X8, X8, X22
	0x03ABB9FC LDR X9, [X8 + 0x10]
	0x03ABBA00 LDR V0, [X8]
	0x03ABBA04 LDP X1, X2, [X31 + 0x88]
	0x03ABBA08 ADD X3, X31, 0x84
	0x03ABBA0C ADD X6, X31, 0x0
	0x03ABBA10 STR V0, [X31]
	0x03ABBA14 STR X9, [X31 + 0x10]
	0x03ABBA18 BL 0x3AB985C
	0x03ABBA1C TBZ X0, 0x0, 0x3ABBA34
	0x03ABBA20 ADD X22, X22, 0x18
	0x03ABBA24 CMP X23, X22
	0x03ABBA28 B.NE 0x3ABB988
	0x03ABBA2C MOVZ W22, 0x1
	0x03ABBA30 B 0x3ABBA38
	0x03ABBA34 MOV W22, W31
	0x03ABBA38 LDR X1, [X26]
	0x03ABBA3C ADD X0, X31, 0x70
	0x03ABBA40 BL 0x23E9D38
	0x03ABBA44 LDR X1, [X24]
	0x03ABBA48 ADD X0, X31, 0x88
	0x03ABBA4C BL 0x23EAC4C
	0x03ABBA50 LDR X8, [X25 + 0x28]
	0x03ABBA54 LDR X9, [X31 + 0xC8]
	0x03ABBA58 CMP X8, X9
	0x03ABBA5C B.NE 0x3ABBA88
	0x03ABBA60 MOV W0, W22
	0x03ABBA64 LDP X20, X19, [X31 + 0x130]
	0x03ABBA68 LDP X22, X21, [X31 + 0x120]
	0x03ABBA6C LDP X24, X23, [X31 + 0x110]
	0x03ABBA70 LDP X26, X25, [X31 + 0x100]
	0x03ABBA74 LDP X28, X27, [X31 + 0xF0]
	0x03ABBA78 LDP X29, X30, [X31 + 0xE0]
	0x03ABBA7C LDP D9, D8, [X31 + 0xD0]
	0x03ABBA80 ADD X31, X31, 0x140
	0x03ABBA84 RET
	0x03ABBA88 BL 0x3EB1B20
	0x03ABBA8C STR X30, [X31 - 0x20]!
	0x03ABBA90 STP X20, X19, [X31 + 0x10]
	0x03ABBA94 ADRP X20, 0x927000
	0x03ABBA98 LDRB W8, [X20 + 0x4A1]
	0x03ABBA9C MOV X19, X0
	0x03ABBAA0 TBNZ X8, 0x0, 0x3ABBB0C
	0x03ABBAA4 ADRP X0, 0x69D000
	0x03ABBAA8 LDR X0, [X0 + 0x220]
	0x03ABBAAC BL 0x1C16CF4
	0x03ABBAB0 ADRP X0, 0x662000
	0x03ABBAB4 LDR X0, [X0 + 0x148]
	0x03ABBAB8 BL 0x1C16CF4
	0x03ABBABC ADRP X0, 0x69D000
	0x03ABBAC0 LDR X0, [X0 + 0x2F0]
	0x03ABBAC4 BL 0x1C16CF4
	0x03ABBAC8 ADRP X0, 0x699000
	0x03ABBACC LDR X0, [X0 + 0x9B8]
	0x03ABBAD0 BL 0x1C16CF4
	0x03ABBAD4 ADRP X0, 0x69D000
	0x03ABBAD8 LDR X0, [X0 + 0x2F8]
	0x03ABBADC BL 0x1C16CF4
	0x03ABBAE0 ADRP X0, 0x662000
	0x03ABBAE4 LDR X0, [X0 + 0x168]
	0x03ABBAE8 BL 0x1C16CF4
	0x03ABBAEC ADRP X0, 0x69D000
	0x03ABBAF0 LDR X0, [X0 + 0x300]
	0x03ABBAF4 BL 0x1C16CF4
	0x03ABBAF8 ADRP X0, 0x69D000
	0x03ABBAFC LDR X0, [X0 + 0x308]
	0x03ABBB00 BL 0x1C16CF4
	0x03ABBB04 MOVZ W8, 0x1
	0x03ABBB08 STRB W8, [X20 + 0x4A1]
	0x03ABBB0C LDR X8, [X19]
	0x03ABBB10 CBZ X8, 0x3ABBB28
	0x03ABBB14 ADRP X8, 0x699000
	0x03ABBB18 LDR X8, [X8 + 0x9B8]
	0x03ABBB1C MOV X0, X19
	0x03ABBB20 LDR X1, [X8]
	0x03ABBB24 BL 0x23FC198
	0x03ABBB28 MOV X0, X19
	0x03ABBB2C LDR X8, [X0 + 0x10]!
	0x03ABBB30 CBZ X8, 0x3ABBB44
	0x03ABBB34 ADRP X8, 0x69D000
	0x03ABBB38 LDR X8, [X8 + 0x2F0]
	0x03ABBB3C LDR X1, [X8]
	0x03ABBB40 BL 0x23EE60C
	0x03ABBB44 MOV X0, X19
	0x03ABBB48 ADRP X20, 0x662000
	0x03ABBB4C LDR X8, [X0 + 0x58]!
	0x03ABBB50 LDR X20, [X20 + 0x148]
	0x03ABBB54 CBZ X8, 0x3ABBB60
	0x03ABBB58 LDR X1, [X20]
	0x03ABBB5C BL 0x23D5AD4
	0x03ABBB60 MOV X0, X19
	0x03ABBB64 LDR X8, [X0 + 0x20]!
	0x03ABBB68 CBZ X8, 0x3ABBB7C
	0x03ABBB6C ADRP X8, 0x69D000
	0x03ABBB70 LDR X8, [X8 + 0x220]
	0x03ABBB74 LDR X1, [X8]
	0x03ABBB78 BL 0x23FCFF8
	0x03ABBB7C MOV X0, X19
	0x03ABBB80 LDR X8, [X0 + 0x38]!
	0x03ABBB84 CBZ X8, 0x3ABBB90
	0x03ABBB88 LDR X1, [X20]
	0x03ABBB8C BL 0x23D5AD4
	0x03ABBB90 MOV X0, X19
	0x03ABBB94 LDR X8, [X0 + 0x48]!
	0x03ABBB98 CBZ X8, 0x3ABBBA4
	0x03ABBB9C LDR X1, [X20]
	0x03ABBBA0 BL 0x23D5AD4
	0x03ABBBA4 MOV X0, X19
	0x03ABBBA8 LDR X8, [X0 + 0x78]!
	0x03ABBBAC CBZ X8, 0x3ABBBB8
	0x03ABBBB0 LDR X1, [X20]
	0x03ABBBB4 BL 0x23D5AD4
	0x03ABBBB8 MOV X0, X19
	0x03ABBBBC LDR X8, [X0 + 0x88]!
	0x03ABBBC0 CBZ X8, 0x3ABBBCC
	0x03ABBBC4 LDR X1, [X20]
	0x03ABBBC8 BL 0x23D5AD4
	0x03ABBBCC LDR X8, [X19 + 0x98]!
	0x03ABBBD0 CBZ X8, 0x3ABBBE8
	0x03ABBBD4 LDR X1, [X20]
	0x03ABBBD8 MOV X0, X19
	0x03ABBBDC LDP X20, X19, [X31 + 0x10]
	0x03ABBBE0 LDR X30, [X31], #0x20
	0x03ABBBE4 B 0x23D5AD4
	0x03ABBBE8 LDP X20, X19, [X31 + 0x10]
	0x03ABBBEC LDR X30, [X31], #0x20
	0x03ABBBF0 RET
	0x03ABBBF4 STP D13, D12, [X31 - 0x60]!
	0x03ABBBF8 STP D11, D10, [X31 + 0x10]
	0x03ABBBFC STP D9, D8, [X31 + 0x20]
	0x03ABBC00 STR X30, [X31 + 0x30]
	0x03ABBC04 STP X22, X21, [X31 + 0x40]
	0x03ABBC08 STP X20, X19, [X31 + 0x50]
	0x03ABBC0C ADRP X22, 0x927000
	0x03ABBC10 ADRP X21, 0x661000
	0x03ABBC14 LDRB W8, [X22 + 0x4A2]
	0x03ABBC18 LDR X21, [X21 + 0xD8]
	0x03ABBC1C MOV X19, X2
	0x03ABBC20 MOV V8.16B, V1.16B
	0x03ABBC24 MOV V9.16B, V0.16B
	0x03ABBC28 MOV X20, X1
	0x03ABBC2C TBNZ X8, 0x0, 0x3ABBC44
	0x03ABBC30 ADRP X0, 0x661000
	0x03ABBC34 LDR X0, [X0 + 0xD8]
	0x03ABBC38 BL 0x1C16CF4
	0x03ABBC3C MOVZ W8, 0x1
	0x03ABBC40 STRB W8, [X22 + 0x4A2]
	0x03ABBC44 LDR X0, [X21]
	0x03ABBC48 LDP S13, S12, [X20]
	0x03ABBC4C LDP S11, S10, [X20 + 0x8]
	0x03ABBC50 LDR W8, [X0 + 0xE0]
	0x03ABBC54 CBNZ W8, 0x3ABBC5C
	0x03ABBC58 BL 0x1C16DFC
	0x03ABBC5C MOV V0.16B, V13.16B
	0x03ABBC60 MOV V1.16B, V12.16B
	0x03ABBC64 MOV V2.16B, V11.16B
	0x03ABBC68 MOV V3.16B, V10.16B
	0x03ABBC6C MOV V4.16B, V9.16B
	0x03ABBC70 MOV V5.16B, V8.16B
	0x03ABBC74 MOV X0, X31
	0x03ABBC78 BL 0x3A23478
	0x03ABBC7C STR S0, [X19]
	0x03ABBC80 LDP X20, X19, [X31 + 0x50]
	0x03ABBC84 LDP X22, X21, [X31 + 0x40]
	0x03ABBC88 LDR X30, [X31 + 0x30]
	0x03ABBC8C LDP D9, D8, [X31 + 0x20]
	0x03ABBC90 LDP D11, D10, [X31 + 0x10]
	0x03ABBC94 FCMP S0, 0x0
	0x03ABBC98 CSET W0, MI
	0x03ABBC9C LDP D13, D12, [X31], #0x60
	0x03ABBCA0 RET
	0x03ABBCA4 STP D13, D12, [X31 - 0x60]!
	0x03ABBCA8 STP D11, D10, [X31 + 0x10]
	0x03ABBCAC STP D9, D8, [X31 + 0x20]
	0x03ABBCB0 STR X30, [X31 + 0x30]
	0x03ABBCB4 STP X22, X21, [X31 + 0x40]
	0x03ABBCB8 STP X20, X19, [X31 + 0x50]
	0x03ABBCBC ADRP X22, 0x927000
	0x03ABBCC0 ADRP X21, 0x661000

ISIL:
	001 Subtract X31, X31, 288
	002 Move [X31+128], D15
	003 Move [X31+136], D14
	004 Move [X31+144], D13
	005 Move [X31+152], D12
	006 Move [X31+160], D11
	007 Move [X31+168], D10
	008 Move [X31+176], D9
	009 Move [X31+184], D8
	010 Move [X31+192], X29
	011 Move [X31+200], X30
	012 Move [X31+208], X28
	013 Move [X31+216], X27
	014 Move [X31+224], X26
	015 Move [X31+232], X25
	016 Move [X31+240], X24
	017 Move [X31+248], X23
	018 Move [X31+256], X22
	019 Move [X31+264], X21
	020 Move [X31+272], X20
	021 Move [X31+280], X19
	022 Move X19, 0x928000
	023 Move W8, [X19+1178]
	024 Move X22, X4
	025 Move X23, X3
	026 Move X20, X2
	027 Move X24, X1
	028 Move X21, X0
	029 Move TEMP, X8
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfEqual {47}
	033 Move X0, 0x69E000
	034 Move X0, [X0+592]
	035 Call 0x1C17CF4
	036 Move X0, 0x662000
	037 Move X0, [X0+216]
	038 Call 0x1C17CF4
	039 Move X0, 0x663000
	040 Move X0, [X0+328]
	041 Call 0x1C17CF4
	042 Move X0, 0x663000
	043 Move X0, [X0+312]
	044 Call 0x1C17CF4
	045 Move W8, 1
	046 Move [X19+1178], W8
	047 Move [X31+112], X31
	048 Move [X31+120], X31
	049 Move [X31+80], X31
	050 Move [X31+88], X31
	051 Move [X31+96], X31
	052 Move [X31+48], X31
	053 Move [X31+56], X31
	054 Move [X31+64], X31
	055 Move W8, [X21+48]
	056 Compare W8, 0
	057 JumpIfEqual {186}
	058 Move X8, 0x663000
	059 Move X8, [X8+312]
	060 Move W9, [X21+112]
	061 Move W2, [X21+168]
	062 Add X0, X31, 112
	063 Move X4, [X8]
	064 Add W8, W9, 1
	065 Multiply W1, W8, W9
	066 Move W3, 1
	067 Call NativeArray`1<Int32>..ctor, X0, X1, X2, X3
	068 Move [X31+108], W31
	069 Move W3, [X21+104]
	070 Move X0, X21
	071 Move X1, X23
	072 Move X2, X22
	073 Call Tessellator.PrepareDelaunay, X0, X1, X2
	074 Move W8, [X21+112]
	075 Move [X31+40], X24
	076 Move [X31+24], X20
	077 NotImplemented "Instruction CMP not yet implemented."
	078 NotImplemented "Instruction CSET not yet implemented."
	079 NotImplemented "Instruction CMP not yet implemented."
	080 Move X29, 0x69E000
	081 Move X29, [X29+592]
	082 Move X22, X31
	083 Move W20, W31
	084 Move X8, [X21+16]
	085 Move W9, 24
	086 NotImplemented "Instruction MADD not yet implemented."
	087 Move X9, [X8+16]
	088 Move V0, [X8]
	089 NotImplemented "Instruction CMP not yet implemented."
	090 Move [X31+96], X9
	091 Move [X31+5], V0
	092 Move X8, [X31+40]
	093 Move W23, 1
	094 Add X19, X8, X22
	095 Add X8, X19, 4
	096 Move [X31+32], X8
	097 Move X2, [X29]
	098 Add X0, X31, 80
	099 Move W1, W23
	100 Call 0x2B8D4C0, X0, X1
	101 NotImplemented "Instruction CMP not yet implemented."
	102 Move W24, W0
	103 Move X0, X21
	104 Move W1, W22
	105 Move W2, W24
	106 Call Tessellator.FindConstraint, X0, X1, X2
	107 Move TEMP, X0
	108 And TEMP, TEMP, -2147483648
	109 Compare TEMP, -2147483648
	110 JumpIfNotEqual {179}
	111 Move X2, [X29]
	112 Subtract W1, W23, 1
	113 Add X0, X31, 80
	114 Call 0x2B8D4C0, X0, X1
	115 Move W8, [X31+96]
	116 NotImplemented "Instruction CMP not yet implemented."
	117 Move W25, W0
	118 Move X28, W24
	119 Move W26, 1
	120 Move X2, [X29]
	121 Subtract W1, W26, 1
	122 Add X0, X31, 80
	123 Call 0x2B8D4C0, X0, X1
	124 NotImplemented "Instruction CMP not yet implemented."
	125 Move W8, [X31+96]
	126 Add W26, W26, 2
	127 NotImplemented "Instruction CMP not yet implemented."
	128 Move X2, [X29]
	129 Add X0, X31, 80
	130 Move W1, W26
	131 Call 0x2B8D4C0, X0, X1
	132 Move TEMP, X0
	133 And TEMP, TEMP, -2147483648
	134 Compare TEMP, -2147483648
	135 JumpIfEqual {179}
	136 Move X8, [X31+32]
	137 Move X10, [X31+40]
	138 Move X11, 0x662000
	139 Move V8, [X19]
	140 Move V9, [X8]
	141 Move X11, [X11+216]
	142 Add X8, X10, X28
	143 Add X9, X10, W25
	144 Add X10, X10, W0
	145 Move X0, [X11]
	146 Move S15, [X8]
	147 Move S14, [X8+4]
	148 Move S13, [X9]
	149 Move S11, [X9+4]
	150 Move S12, [X10]
	151 Move S10, [X10+4]
	152 Move W8, [X0+224]
	153 Compare W8, 0
	154 JumpIfNotEqual {156}
	155 Call 0x1C17DFC
	156 Move V0, V8
	157 Move V1, V9
	158 Move V2, V15
	159 Move V3, V14
	160 Move V4, V13
	161 Move V5, V11
	162 Move V6, V12
	163 Move V7, V10
	164 Move X0, X31
	165 Call ModuleHandle.IsInsideCircle, X0, X1, X2, X3
	166 Move TEMP, X0
	167 And TEMP, TEMP, 1
	168 Compare TEMP, 1
	169 JumpIfNotEqual {179}
	170 Move W9, [X31+120]
	171 Add W8, W20, 2
	172 NotImplemented "Instruction CMP not yet implemented."
	173 Move X9, [X31+112]
	174 Add W10, W20, 1
	175 Move [X9], W22
	176 Move W20, W8
	177 Move [X31+108], W8
	178 Move [X9], W24
	179 Move W8, [X31+96]
	180 Add W23, W23, 2
	181 NotImplemented "Instruction CMP not yet implemented."
	182 NotImplemented "Instruction LDRSW not yet implemented."
	183 Add X22, X22, 1
	184 NotImplemented "Instruction CMP not yet implemented."
	185 NotImplemented "Instruction CSET not yet implemented."
	186 Move W22, W31
	187 Move W20, W31
	188 Move W8, [X21+112]
	189 Move X9, 0x663000
	190 Move X9, [X9+328]
	191 NotImplemented "Instruction CMP not yet implemented."
	192 Xor W22, W27, 1
	193 Move TEMP, X22
	194 And TEMP, TEMP, 1
	195 Compare TEMP, 1
	196 JumpIfNotEqual {358}
	197 Move X29, 0x69E000
	198 Move X29, [X29+592]
	199 Multiply W8, W8, W8
	200 Move W19, 24
	201 Move [X31+32], W8
	202 Move X8, [X31+112]
	203 Move X9, W20
	204 Subtract X28, X9, 2
	205 Add X9, X8, W20
	206 NotImplemented "Instruction LDRSW not yet implemented."
	207 NotImplemented "Instruction LDURSW not yet implemented."
	208 Move [X31+108], W28
	209 Move X8, [X21+16]
	210 NotImplemented "Instruction NOP not yet implemented."
	211 NotImplemented "Instruction MADD not yet implemented."
	212 Move V0, [X8]
	213 Move X8, [X8+16]
	214 Move [X31+3], V0
	215 NotImplemented "Instruction CMP not yet implemented."
	216 Move [X31+64], X8
	217 Move W26, 1
	218 Move TEMP, 0
	219 Not TEMP
	220 Move W24, TEMP
	221 Move TEMP, 0
	222 Not TEMP
	223 Move W23, TEMP
	224 Move X2, [X29]
	225 Subtract W1, W26, 1
	226 Add X0, X31, 48
	227 Call 0x2B8D4C0, X0, X1
	228 Move X2, [X29]
	229 Move W27, W0
	230 Add X0, X31, 48
	231 Move W1, W26
	232 Call 0x2B8D4C0, X0, X1
	233 Move W8, [X31+64]
	234 NotImplemented "Instruction CMP not yet implemented."
	235 NotImplemented "Instruction CSEL not yet implemented."
	236 NotImplemented "Instruction CMP not yet implemented."
	237 Add W26, W26, 2
	238 NotImplemented "Instruction CSEL not yet implemented."
	239 NotImplemented "Instruction CSEL not yet implemented."
	240 NotImplemented "Instruction CMP not yet implemented."
	241 Move TEMP, 0
	242 Not TEMP
	243 Move W23, TEMP
	244 Move TEMP, 0
	245 Not TEMP
	246 Move W24, TEMP
	247 Or W8, W24, W23
	248 Move TEMP, X8
	249 And TEMP, TEMP, -2147483648
	250 Compare TEMP, -2147483648
	251 JumpIfEqual {286}
	252 Move X12, 0x662000
	253 Move X11, [X31+40]
	254 Move X12, [X12+216]
	255 Add X8, X11, X25
	256 Move X0, [X12]
	257 Add X9, X11, X22
	258 Add X10, X11, W24
	259 Add X11, X11, W23
	260 Move S15, [X8]
	261 Move S14, [X8+4]
	262 Move S13, [X9]
	263 Move S12, [X9+4]
	264 Move S11, [X10]
	265 Move S9, [X10+4]
	266 Move W8, [X0+224]
	267 Move S10, [X11]
	268 Move S8, [X11+4]
	269 Compare W8, 0
	270 JumpIfNotEqual {272}
	271 Call 0x1C17DFC
	272 Move V0, V15
	273 Move V1, V14
	274 Move V2, V13
	275 Move V3, V12
	276 Move V4, V11
	277 Move V5, V9
	278 Move V6, V10
	279 Move V7, V8
	280 Move X0, X31
	281 Call ModuleHandle.IsInsideCircle, X0, X1, X2, X3
	282 Move TEMP, X0
	283 And TEMP, TEMP, 1
	284 Compare TEMP, 1
	285 JumpIfEqual {288}
	286 NotImplemented "Instruction CMP not yet implemented."
	287 Move W20, W28
	288 Move X0, X21
	289 Move W1, W25
	290 Move W2, W22
	291 Call Tessellator.EdgeFlip, X0, X1, X2
	292 Move X26, [X31+40]
	293 Move X20, [X31+24]
	294 Add X3, X31, 112
	295 Add X4, X31, 108
	296 Move X0, X21
	297 Move X1, X26
	298 Move X2, X20
	299 Move W5, W24
	300 Move W6, W25
	301 Move W7, W23
	302 Call Tessellator.Flip, X0, X1, X2, X3, X4, X5, X6
	303 Move TEMP, X0
	304 And TEMP, TEMP, 1
	305 Compare TEMP, 1
	306 JumpIfNotEqual {384}
	307 Add X3, X31, 112
	308 Add X4, X31, 108
	309 Move X0, X21
	310 Move X1, X26
	311 Move X2, X20
	312 Move W5, W25
	313 Move W6, W23
	314 Move W7, W24
	315 Call Tessellator.Flip, X0, X1, X2, X3, X4, X5, X6
	316 Move TEMP, X0
	317 And TEMP, TEMP, 1
	318 Compare TEMP, 1
	319 JumpIfNotEqual {384}
	320 Add X3, X31, 112
	321 Add X4, X31, 108
	322 Move X0, X21
	323 Move X1, X26
	324 Move X2, X20
	325 Move W5, W23
	326 Move W6, W22
	327 Move W7, W24
	328 Call Tessellator.Flip, X0, X1, X2, X3, X4, X5, X6
	329 Move TEMP, X0
	330 And TEMP, TEMP, 1
	331 Compare TEMP, 1
	332 JumpIfNotEqual {384}
	333 Add X3, X31, 112
	334 Add X4, X31, 108
	335 Move X0, X21
	336 Move X1, X26
	337 Move X2, X20
	338 Move W5, W22
	339 Move W6, W24
	340 Move W7, W23
	341 Call Tessellator.Flip, X0, X1, X2, X3, X4, X5, X6
	342 Move TEMP, X0
	343 And TEMP, TEMP, 1
	344 Compare TEMP, 1
	345 JumpIfNotEqual {384}
	346 Move W8, [X31+32]
	347 Subtract W8, W8, 1
	348 NotImplemented "Instruction CMP not yet implemented."
	349 NotImplemented "Instruction CSET not yet implemented."
	350 NotImplemented "Instruction CMP not yet implemented."
	351 Move W20, [X31+108]
	352 Move X9, 0x663000
	353 Move X9, [X9+328]
	354 NotImplemented "Instruction CMP not yet implemented."
	355 Move W22, 1
	356 Move X9, 0x663000
	357 Move X9, [X9+328]
	358 Move X1, [X9]
	359 Add X0, X31, 112
	360 Call NativeArray`1<Int32>.Dispose, X0
	361 And W0, W22, 1
	362 Move X20, [X31+272]
	363 Move X19, [X31+280]
	364 Move X22, [X31+256]
	365 Move X21, [X31+264]
	366 Move X24, [X31+240]
	367 Move X23, [X31+248]
	368 Move X26, [X31+224]
	369 Move X25, [X31+232]
	370 Move X28, [X31+208]
	371 Move X27, [X31+216]
	372 Move X29, [X31+192]
	373 Move X30, [X31+200]
	374 Move D9, [X31+176]
	375 Move D8, [X31+184]
	376 Move D11, [X31+160]
	377 Move D10, [X31+168]
	378 Move D13, [X31+144]
	379 Move D12, [X31+152]
	380 Move D15, [X31+128]
	381 Move D14, [X31+136]
	382 Add X31, X31, 288
	383 Return X0
	384 Move W22, W31

Method: System.Int32 FindNeighbor(Unity.Collections.NativeArray`1<Unity.Mathematics.int3> cells, System.Int32 count, System.Int32 a, System.Int32 b, System.Int32 c)

Disassembly:
	0x03ABBCC4 LDRB W8, [X22 + 0x4A3]
	0x03ABBCC8 LDR X21, [X21 + 0xD8]
	0x03ABBCCC MOV X19, X2
	0x03ABBCD0 MOV V8.16B, V1.16B
	0x03ABBCD4 MOV V9.16B, V0.16B
	0x03ABBCD8 MOV X20, X1
	0x03ABBCDC TBNZ X8, 0x0, 0x3ABBCF4
	0x03ABBCE0 ADRP X0, 0x661000
	0x03ABBCE4 LDR X0, [X0 + 0xD8]
	0x03ABBCE8 BL 0x1C16CF4
	0x03ABBCEC MOVZ W8, 0x1
	0x03ABBCF0 STRB W8, [X22 + 0x4A3]
	0x03ABBCF4 LDR X0, [X21]
	0x03ABBCF8 LDP S13, S12, [X20]
	0x03ABBCFC LDP S11, S10, [X20 + 0x8]
	0x03ABBD00 LDR W8, [X0 + 0xE0]
	0x03ABBD04 CBNZ W8, 0x3ABBD0C
	0x03ABBD08 BL 0x1C16DFC
	0x03ABBD0C MOV V0.16B, V13.16B
	0x03ABBD10 MOV V1.16B, V12.16B
	0x03ABBD14 MOV V2.16B, V11.16B
	0x03ABBD18 MOV V3.16B, V10.16B
	0x03ABBD1C MOV V4.16B, V9.16B
	0x03ABBD20 MOV V5.16B, V8.16B
	0x03ABBD24 MOV X0, X31
	0x03ABBD28 BL 0x3A23478
	0x03ABBD2C STR S0, [X19]
	0x03ABBD30 LDP X20, X19, [X31 + 0x50]
	0x03ABBD34 LDP X22, X21, [X31 + 0x40]
	0x03ABBD38 LDR X30, [X31 + 0x30]
	0x03ABBD3C LDP D9, D8, [X31 + 0x20]
	0x03ABBD40 LDP D11, D10, [X31 + 0x10]
	0x03ABBD44 FCMP S0, 0x0
	0x03ABBD48 CSET W0, GT
	0x03ABBD4C LDP D13, D12, [X31], #0x60
	0x03ABBD50 RET
	0x03ABBD54 SUB X31, X31, 0x80
	0x03ABBD58 STR X30, [X31 + 0x60]
	0x03ABBD5C STP X20, X19, [X31 + 0x70]
	0x03ABBD60 MOV X20, X2
	0x03ABBD64 ADD X0, X31, 0x18
	0x03ABBD68 MOVZ W2, 0x48
	0x03ABBD6C MOV X19, X3
	0x03ABBD70 BL 0x3EB1AC0
	0x03ABBD74 LDR V0, [X20]
	0x03ABBD78 LDR X8, [X20 + 0x10]
	0x03ABBD7C ADD X0, X31, 0x18
	0x03ABBD80 ADD X1, X31, 0x0
	0x03ABBD84 STR V0, [X31]
	0x03ABBD88 STR X8, [X31 + 0x10]
	0x03ABBD8C BL 0x3AB8F5C
	0x03ABBD90 STR S0, [X19]
	0x03ABBD94 LDP X20, X19, [X31 + 0x70]
	0x03ABBD98 LDR X30, [X31 + 0x60]
	0x03ABBD9C FCMP S0, 0x0
	0x03ABBDA0 CSET W0, LS
	0x03ABBDA4 ADD X31, X31, 0x80
	0x03ABBDA8 RET
	0x03ABBDAC SUB X31, X31, 0x80
	0x03ABBDB0 STR X30, [X31 + 0x60]
	0x03ABBDB4 STP X20, X19, [X31 + 0x70]
	0x03ABBDB8 MOV X20, X2
	0x03ABBDBC ADD X0, X31, 0x18
	0x03ABBDC0 MOVZ W2, 0x48
	0x03ABBDC4 MOV X19, X3
	0x03ABBDC8 BL 0x3EB1AC0
	0x03ABBDCC LDR V0, [X20]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X25, 0x928000
	010 Move W8, [X25+1179]
	011 Move W24, W6
	012 Move W22, W5
	013 Move W23, W4
	014 Move W19, W3
	015 Move X20, X2
	016 Move X21, X1
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {29}
	021 Move X0, 0x69E000
	022 Move X0, [X0+680]
	023 Call 0x1C17CF4
	024 Move X0, 0x662000
	025 Move X0, [X0+216]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X25+1179], W8
	029 NotImplemented "Instruction CMP not yet implemented."
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move W25, W23
	032 Move W8, W24
	033 Move TEMP, X22
	034 And TEMP, TEMP, -2147483648
	035 Compare TEMP, -2147483648
	036 JumpIfNotEqual {64}
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move W25, W22
	039 Move W8, W23
	040 Move W22, W24
	041 Move TEMP, X22
	042 And TEMP, TEMP, -2147483648
	043 Compare TEMP, -2147483648
	044 JumpIfNotEqual {64}
	045 Move X20, [X31+48]
	046 Move X19, [X31+56]
	047 Move X22, [X31+32]
	048 Move X21, [X31+40]
	049 Move X24, [X31+16]
	050 Move X23, [X31+24]
	051 Move TEMP, 0
	052 Not TEMP
	053 Move W0, TEMP
	054 Move X30, [X31+64]
	055 Move X25, [X31+72]
	056 Return X0
	057 Move W25, W24
	058 Move W8, W22
	059 Move W22, W23
	060 Move TEMP, X22
	061 And TEMP, TEMP, -2147483648
	062 Compare TEMP, -2147483648
	063 JumpIfEqual {45}
	064 Move X9, 0x662000
	065 Move X9, [X9+216]
	066 Move X23, 0x69E000
	067 Move W22, W22
	068 NotImplemented "Instruction BFM not yet implemented."
	069 Move X0, [X9]
	070 Move W9, [X0+224]
	071 Move X23, [X23+680]
	072 Compare W9, 0
	073 JumpIfNotEqual {75}
	074 Call 0x1C17DFC
	075 Move X6, [X23]
	076 Move X0, X21
	077 Move X1, X20
	078 Move W2, W19
	079 Move X3, X22
	080 Move X20, [X31+48]
	081 Move X19, [X31+56]
	082 Move X22, [X31+32]
	083 Move X21, [X31+40]
	084 Move X24, [X31+16]
	085 Move X23, [X31+24]
	086 Move W4, W25
	087 Move X5, X31
	088 Move X30, [X31+64]
	089 Move X25, [X31+72]
	090 Call ModuleHandle.GetEqual, X0, X1, X2, X3
	091 Return X0

Method: Unity.Collections.NativeArray`1<Unity.Mathematics.int3> Constrain(ref System.Int32 count)

Disassembly:
	0x03ABBDD0 LDR X8, [X20 + 0x10]
	0x03ABBDD4 ADD X0, X31, 0x18
	0x03ABBDD8 ADD X1, X31, 0x0
	0x03ABBDDC STR V0, [X31]
	0x03ABBDE0 STR X8, [X31 + 0x10]
	0x03ABBDE4 BL 0x3AB8F5C
	0x03ABBDE8 STR S0, [X19]
	0x03ABBDEC LDP X20, X19, [X31 + 0x70]
	0x03ABBDF0 LDR X30, [X31 + 0x60]
	0x03ABBDF4 FCMP S0, 0x0
	0x03ABBDF8 CSET W0, EQ
	0x03ABBDFC ADD X31, X31, 0x80
	0x03ABBE00 RET
	0x03ABBE04 SUB X31, X31, 0x20
	0x03ABBE08 STP X30, X19, [X31 + 0x10]
	0x03ABBE0C MOV X19, X3
	0x03ABBE10 ADD X0, X31, 0x8
	0x03ABBE14 MOV X3, X31
	0x03ABBE18 STRB W31, [X31 + 0x8]
	0x03ABBE1C BL 0x3A234B0
	0x03ABBE20 SCVTF S0, W0
	0x03ABBE24 STR S0, [X19]
	0x03ABBE28 LDP X30, X19, [X31 + 0x10]
	0x03ABBE2C CMP W0, 0x0
	0x03ABBE30 CSET W0, EQ
	0x03ABBE34 ADD X31, X31, 0x20
	0x03ABBE38 RET
	0x03ABBE3C SUB X31, X31, 0x20
	0x03ABBE40 STP X30, X19, [X31 + 0x10]
	0x03ABBE44 MOV X19, X5
	0x03ABBE48 AND X2, X2, 0x0
	0x03ABBE4C AND X4, X4, 0x0
	0x03ABBE50 ADD X0, X31, 0x8
	0x03ABBE54 MOV X5, X31
	0x03ABBE58 STRB W31, [X31 + 0x8]
	0x03ABBE5C BL 0x3A234C8
	0x03ABBE60 SCVTF S0, W0
	0x03ABBE64 STR S0, [X19]
	0x03ABBE68 LDP X30, X19, [X31 + 0x10]
	0x03ABBE6C CMP W0, 0x0
	0x03ABBE70 CSET W0, EQ
	0x03ABBE74 ADD X31, X31, 0x20
	0x03ABBE78 RET
	0x03ABBE7C FCMP D0, D1
	0x03ABBE80 MOVN W8, 0x0
	0x03ABBE84 CSINC W0, W8, W31, MI
	0x03ABBE88 RET
	0x03ABBE8C STP X30, X23, [X31 - 0x30]!
	0x03ABBE90 STP X22, X21, [X31 + 0x10]
	0x03ABBE94 STP X20, X19, [X31 + 0x20]
	0x03ABBE98 ADRP X23, 0x927000
	0x03ABBE9C ADRP X22, 0x661000
	0x03ABBEA0 LDRB W8, [X23 + 0x4A4]
	0x03ABBEA4 LDR X22, [X22 + 0xD8]
	0x03ABBEA8 MOV X20, X2
	0x03ABBEAC MOV X21, X1
	0x03ABBEB0 MOV X19, X0
	0x03ABBEB4 TBNZ X8, 0x0, 0x3ABBED8
	0x03ABBEB8 ADRP X0, 0x69D000
	0x03ABBEBC LDR X0, [X0 + 0x310]
	0x03ABBEC0 BL 0x1C16CF4
	0x03ABBEC4 ADRP X0, 0x661000
	0x03ABBEC8 LDR X0, [X0 + 0xD8]
	0x03ABBECC BL 0x1C16CF4
	0x03ABBED0 MOVZ W8, 0x1
	0x03ABBED4 STRB W8, [X23 + 0x4A4]
	0x03ABBED8 LDR X8, [X19 + 0x10]
	0x03ABBEDC UBFM X9, X21, 0x20, 0x1F
	0x03ABBEE0 SBFM X10, X21, 0x20, 0x3F
	0x03ABBEE4 UBFM X11, X20, 0x20, 0x1F
	0x03ABBEE8 SBFM X12, X20, 0x20, 0x3F
	0x03ABBEEC ADD X9, X8, X9, 0x1D, ASR
	0x03ABBEF0 ADD X10, X8, X10, 0x3, LSL
	0x03ABBEF4 ADD X11, X8, X11, 0x1D, ASR
	0x03ABBEF8 ADD X8, X8, X12, 0x3, LSL
	0x03ABBEFC LDPSW D12, D9, [X9]
	0x03ABBF00 LDR X13, [X19]
	0x03ABBF04 MOV X20, X19
	0x03ABBF08 LDPSW D14, D10, [X10]
	0x03ABBF0C UBFM X12, X12, 0x3C, 0x3B
	0x03ABBF10 LDR V0, [X13, X12, LSL]
	0x03ABBF14 LDPSW D15, D11, [X11]
	0x03ABBF18 LDPSW D12, D8, [X8]
	0x03ABBF1C UBFM X9, X9, 0x3C, 0x3B
	0x03ABBF20 STR D0, [X20 + 0x20]!
	0x03ABBF24 LDR V0, [X13, X9, LSL]
	0x03ABBF28 UBFM X9, X14, 0x3C, 0x3B
	0x03ABBF2C UBFM X8, X8, 0x3C, 0x3B
	0x03ABBF30 ADRP X21, 0x69D000
	0x03ABBF34 STR D0, [X19 + 0x28]
	0x03ABBF38 LDR V0, [X13, X9, LSL]
	0x03ABBF3C UBFM X9, X10, 0x3C, 0x3B
	0x03ABBF40 STR D0, [X19 + 0x30]
	0x03ABBF44 LDR V0, [X13, X9, LSL]
	0x03ABBF48 UBFM X9, X15, 0x3C, 0x3B
	0x03ABBF4C STR D0, [X19 + 0x38]
	0x03ABBF50 LDR V0, [X13, X9, LSL]
	0x03ABBF54 UBFM X9, X11, 0x3C, 0x3B
	0x03ABBF58 STR D0, [X19 + 0x40]!
	0x03ABBF5C LDR V0, [X13, X9, LSL]
	0x03ABBF60 UBFM X9, X12, 0x3C, 0x3B
	0x03ABBF64 STR D0, [X19 + 0x8]
	0x03ABBF68 LDR V0, [X13, X9, LSL]
	0x03ABBF6C STR D0, [X19 + 0x10]
	0x03ABBF70 LDR V0, [X13, X8, LSL]
	0x03ABBF74 STR D0, [X19 + 0x18]
	0x03ABBF78 LDR X0, [X22]
	0x03ABBF7C LDR W8, [X0 + 0xE0]
	0x03ABBF80 LDR X21, [X21 + 0x310]
	0x03ABBF84 CBNZ W8, 0x3ABBF8C
	0x03ABBF88 BL 0x1C16DFC
	0x03ABBF8C LDR X4, [X21]
	0x03ABBF90 MOVZ W2, 0x3
	0x03ABBF94 MOV X0, X20
	0x03ABBF98 MOV W1, W31
	0x03ABBF9C MOV X3, X31
	0x03ABBFA0 BL 0x221F070
	0x03ABBFA4 LDR X4, [X21]
	0x03ABBFA8 MOVZ W2, 0x3
	0x03ABBFAC MOV X0, X19
	0x03ABBFB0 MOV W1, W31
	0x03ABBFB4 MOV X3, X31
	0x03ABBFB8 BL 0x221F070
	0x03ABBFBC SUB X8, X20, 0x20
	0x03ABBFC0 MOVN X9, 0x1F
	0x03ABBFC4 ADD X10, X8, X9
	0x03ABBFC8 LDR V0, [X10 + 0x40]
	0x03ABBFCC LDR V1, [X10 + 0x60]
	0x03ABBFD0 FSUB D2, D0, D1
	0x03ABBFD4 FCMP D2, 0x0
	0x03ABBFD8 B.NE 0x3ABBFEC
	0x03ABBFDC ADDS X9, X9, 0x8
	0x03ABBFE0 B.NE 0x3ABBFC4
	0x03ABBFE4 MOVZ W0, 0x1
	0x03ABBFE8 B 0x3ABBFF8
	0x03ABBFEC FCMP D0, D1
	0x03ABBFF0 MOVN W8, 0x0
	0x03ABBFF4 CSINC W0, W8, W31, MI
	0x03ABBFF8 LDP X20, X19, [X31 + 0x20]
	0x03ABBFFC LDP X22, X21, [X31 + 0x10]
	0x03ABC000 LDP X30, X23, [X31], #0x30
	0x03ABC004 RET
	0x03ABC008 STP D15, D14, [X31 - 0xA0]!
	0x03ABC00C STP D13, D12, [X31 + 0x10]
	0x03ABC010 STP D11, D10, [X31 + 0x20]
	0x03ABC014 STP D9, D8, [X31 + 0x30]
	0x03ABC018 STP X29, X30, [X31 + 0x40]
	0x03ABC01C STP X28, X27, [X31 + 0x50]
	0x03ABC020 STP X26, X25, [X31 + 0x60]
	0x03ABC024 STP X24, X23, [X31 + 0x70]
	0x03ABC028 STP X22, X21, [X31 + 0x80]
	0x03ABC02C STP X20, X19, [X31 + 0x90]
	0x03ABC030 SUB X31, X31, 0x1000
	0x03ABC034 SUB X31, X31, 0x3F0
	0x03ABC038 ADRP X20, 0x926000
	0x03ABC03C ADRP X21, 0x637000
	0x03ABC040 LDRB W8, [X20 + 0x4A5]
	0x03ABC044 LDR X21, [X21 + 0x598]
	0x03ABC048 MOV X19, X0
	0x03ABC04C ADD X27, X31, 0xF90
	0x03ABC050 TBNZ X8, 0x0, 0x3ABC224
	0x03ABC054 ADRP X0, 0x639000
	0x03ABC058 LDR X0, [X0 + 0x170]
	0x03ABC05C BL 0x1C16CF4
	0x03ABC060 ADRP X0, 0x637000
	0x03ABC064 LDR X0, [X0 + 0xA28]
	0x03ABC068 BL 0x1C16CF4
	0x03ABC06C ADRP X0, 0x69C000
	0x03ABC070 LDR X0, [X0 + 0x318]
	0x03ABC074 BL 0x1C16CF4
	0x03ABC078 ADRP X0, 0x69C000
	0x03ABC07C LDR X0, [X0 + 0x320]
	0x03ABC080 BL 0x1C16CF4
	0x03ABC084 ADRP X0, 0x69C000
	0x03ABC088 LDR X0, [X0 + 0x328]
	0x03ABC08C BL 0x1C16CF4
	0x03ABC090 ADRP X0, 0x69C000
	0x03ABC094 LDR X0, [X0 + 0x330]
	0x03ABC098 BL 0x1C16CF4
	0x03ABC09C ADRP X0, 0x637000
	0x03ABC0A0 LDR X0, [X0 + 0x5A8]
	0x03ABC0A4 BL 0x1C16CF4
	0x03ABC0A8 ADRP X0, 0x637000
	0x03ABC0AC LDR X0, [X0 + 0x598]
	0x03ABC0B0 BL 0x1C16CF4
	0x03ABC0B4 ADRP X0, 0x69C000
	0x03ABC0B8 LDR X0, [X0 + 0x338]
	0x03ABC0BC BL 0x1C16CF4
	0x03ABC0C0 ADRP X0, 0x69C000
	0x03ABC0C4 LDR X0, [X0 + 0x340]
	0x03ABC0C8 BL 0x1C16CF4
	0x03ABC0CC ADRP X0, 0x69C000
	0x03ABC0D0 LDR X0, [X0 + 0x348]
	0x03ABC0D4 BL 0x1C16CF4
	0x03ABC0D8 ADRP X0, 0x69C000
	0x03ABC0DC LDR X0, [X0 + 0x350]
	0x03ABC0E0 BL 0x1C16CF4
	0x03ABC0E4 ADRP X0, 0x69C000
	0x03ABC0E8 LDR X0, [X0 + 0x358]
	0x03ABC0EC BL 0x1C16CF4
	0x03ABC0F0 ADRP X0, 0x69C000
	0x03ABC0F4 LDR X0, [X0 + 0x360]
	0x03ABC0F8 BL 0x1C16CF4
	0x03ABC0FC ADRP X0, 0x69C000
	0x03ABC100 LDR X0, [X0 + 0x368]
	0x03ABC104 BL 0x1C16CF4
	0x03ABC108 ADRP X0, 0x69C000
	0x03ABC10C LDR X0, [X0 + 0x370]
	0x03ABC110 BL 0x1C16CF4
	0x03ABC114 ADRP X0, 0x69C000
	0x03ABC118 LDR X0, [X0 + 0x378]
	0x03ABC11C BL 0x1C16CF4
	0x03ABC120 ADRP X0, 0x69C000
	0x03ABC124 LDR X0, [X0 + 0x380]
	0x03ABC128 BL 0x1C16CF4
	0x03ABC12C ADRP X0, 0x69C000
	0x03ABC130 LDR X0, [X0 + 0x388]
	0x03ABC134 BL 0x1C16CF4
	0x03ABC138 ADRP X0, 0x69C000
	0x03ABC13C LDR X0, [X0 + 0x390]
	0x03ABC140 BL 0x1C16CF4
	0x03ABC144 ADRP X0, 0x69C000
	0x03ABC148 LDR X0, [X0 + 0x398]
	0x03ABC14C BL 0x1C16CF4
	0x03ABC150 ADRP X0, 0x69C000
	0x03ABC154 LDR X0, [X0 + 0x3A0]
	0x03ABC158 BL 0x1C16CF4
	0x03ABC15C ADRP X0, 0x69C000
	0x03ABC160 LDR X0, [X0 + 0x3A8]
	0x03ABC164 BL 0x1C16CF4
	0x03ABC168 ADRP X0, 0x69C000
	0x03ABC16C LDR X0, [X0 + 0x3B0]
	0x03ABC170 BL 0x1C16CF4
	0x03ABC174 ADRP X0, 0x69C000
	0x03ABC178 LDR X0, [X0 + 0x3B8]
	0x03ABC17C BL 0x1C16CF4
	0x03ABC180 ADRP X0, 0x69C000
	0x03ABC184 LDR X0, [X0 + 0x3C0]
	0x03ABC188 BL 0x1C16CF4
	0x03ABC18C ADRP X0, 0x69C000
	0x03ABC190 LDR X0, [X0 + 0x3C8]
	0x03ABC194 BL 0x1C16CF4
	0x03ABC198 ADRP X0, 0x69C000
	0x03ABC19C LDR X0, [X0 + 0x3D0]
	0x03ABC1A0 BL 0x1C16CF4
	0x03ABC1A4 ADRP X0, 0x69C000
	0x03ABC1A8 LDR X0, [X0 + 0x3D8]
	0x03ABC1AC BL 0x1C16CF4
	0x03ABC1B0 ADRP X0, 0x69C000
	0x03ABC1B4 LDR X0, [X0 + 0x3E0]
	0x03ABC1B8 BL 0x1C16CF4
	0x03ABC1BC ADRP X0, 0x69C000
	0x03ABC1C0 LDR X0, [X0 + 0x3E8]
	0x03ABC1C4 BL 0x1C16CF4
	0x03ABC1C8 ADRP X0, 0x69C000
	0x03ABC1CC LDR X0, [X0 + 0x3F0]
	0x03ABC1D0 BL 0x1C16CF4
	0x03ABC1D4 ADRP X0, 0x69C000
	0x03ABC1D8 LDR X0, [X0 + 0x3F8]
	0x03ABC1DC BL 0x1C16CF4
	0x03ABC1E0 ADRP X0, 0x69C000
	0x03ABC1E4 LDR X0, [X0 + 0x400]
	0x03ABC1E8 BL 0x1C16CF4
	0x03ABC1EC ADRP X0, 0x69C000
	0x03ABC1F0 LDR X0, [X0 + 0x408]
	0x03ABC1F4 BL 0x1C16CF4
	0x03ABC1F8 ADRP X0, 0x69C000
	0x03ABC1FC LDR X0, [X0 + 0x410]
	0x03ABC200 BL 0x1C16CF4
	0x03ABC204 ADRP X0, 0x69C000
	0x03ABC208 LDR X0, [X0 + 0x418]
	0x03ABC20C BL 0x1C16CF4
	0x03ABC210 ADRP X0, 0x69C000
	0x03ABC214 LDR X0, [X0 + 0x420]
	0x03ABC218 BL 0x1C16CF4
	0x03ABC21C MOVZ W8, 0x1
	0x03ABC220 STRB W8, [X20 + 0x4A5]
	0x03ABC224 ADD X8, X31, 0x65
	0x03ABC228 MOVI V0.2D, 0x0
	0x03ABC22C ADD X0, X31, 0xC10
	0x03ABC230 MOVZ W2, 0x378
	0x03ABC234 MOV W1, W31
	0x03ABC238 STR X31, [X31 + 0x1068]
	0x03ABC23C STRB W31, [X8 + 0xFFF]
	0x03ABC240 STR X31, [X31 + 0x1058]
	0x03ABC244 STR X31, [X31 + 0x1050]
	0x03ABC248 STR X31, [X31 + 0x1048]
	0x03ABC24C STR X31, [X31 + 0x1040]
	0x03ABC250 STR X31, [X31 + 0x1038]
	0x03ABC254 STR X31, [X31 + 0x1028]
	0x03ABC258 STR X31, [X31 + 0x1020]
	0x03ABC25C STR W31, [X31 + 0x1030]
	0x03ABC260 STR W31, [X31 + 0x101C]
	0x03ABC264 STR X31, [X31 + 0xF98]
	0x03ABC268 STR X31, [X31 + 0xF90]
	0x03ABC26C STR W31, [X31 + 0xFA0]
	0x03ABC270 STP V0, V0, [X27 + 0x60]
	0x03ABC274 STP V0, V0, [X27 + 0x40]
	0x03ABC278 STP V0, V0, [X27 + 0x20]
	0x03ABC27C STR X31, [X31 + 0xF88]
	0x03ABC280 BL 0x3EB1B10
	0x03ABC284 ADD X0, X31, 0x898
	0x03ABC288 MOVZ W2, 0x378
	0x03ABC28C MOV W1, W31
	0x03ABC290 BL 0x3EB1B10
	0x03ABC294 ADD X0, X31, 0x520
	0x03ABC298 MOVZ W2, 0x378
	0x03ABC29C MOV W1, W31
	0x03ABC2A0 BL 0x3EB1B10
	0x03ABC2A4 LDR X0, [X21]
	0x03ABC2A8 LDR X20, [X19 + 0xF8]
	0x03ABC2AC LDR W8, [X0 + 0xE0]
	0x03ABC2B0 CBNZ W8, 0x3ABC2B8
	0x03ABC2B4 BL 0x1C16DFC
	0x03ABC2B8 ADRP X22, 0x637000
	0x03ABC2BC LDR X22, [X22 + 0xA28]
	0x03ABC2C0 MOV X0, X20
	0x03ABC2C4 MOV X1, X31
	0x03ABC2C8 MOV X2, X31
	0x03ABC2CC BL 0x3C3883C
	0x03ABC2D0 TBNZ X0, 0x0, 0x3ABC344
	0x03ABC2D4 LDR X0, [X19 + 0xF8]
	0x03ABC2D8 CBZ X0, 0x3AC3158
	0x03ABC2DC MOV X1, X31
	0x03ABC2E0 BL 0x3AE1CD0
	0x03ABC2E4 CBZ X0, 0x3ABC344
	0x03ABC2E8 LDR X0, [X19 + 0x368]
	0x03ABC2EC CBZ X0, 0x3ABC2F8
	0x03ABC2F0 MOV X1, X31

ISIL:
	001 Subtract X31, X31, 288
	002 Move [X31+192], X29
	003 Move [X31+200], X30
	004 Move [X31+208], X28
	005 Move [X31+216], X27
	006 Move [X31+224], X26
	007 Move [X31+232], X25
	008 Move [X31+240], X24
	009 Move [X31+248], X23
	010 Move [X31+256], X22
	011 Move [X31+264], X21
	012 Move [X31+272], X20
	013 Move [X31+280], X19
	014 Move X19, 0x928000
	015 Move W8, [X19+1180]
	016 Move X26, X1
	017 Move X22, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {39}
	022 Move X0, 0x69E000
	023 Move X0, [X0+688]
	024 Call 0x1C17CF4
	025 Move X0, 0x662000
	026 Move X0, [X0+216]
	027 Call 0x1C17CF4
	028 Move X0, 0x69E000
	029 Move X0, [X0+696]
	030 Call 0x1C17CF4
	031 Move X0, 0x663000
	032 Move X0, [X0+328]
	033 Call 0x1C17CF4
	034 Move X0, 0x663000
	035 Move X0, [X0+312]
	036 Call 0x1C17CF4
	037 Move W8, 1
	038 Move [X19+1180], W8
	039 Move X19, 0x69E000
	040 Move X20, 0x662000
	041 Move X19, [X19+696]
	042 Move X20, [X20+216]
	043 Move X0, X22
	044 Move X1, X26
	045 Move [X31+176], X31
	046 Move [X31+184], X31
	047 Move [X31+160], X31
	048 Move [X31+168], X31
	049 Call Tessellator.GetCells, X0, X1
	050 Move W8, [X26]
	051 Move [X31+80], X0
	052 Move [X31+64], X1
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Move [X31+8], X8
	055 Move X8, [X31+80]
	056 Move X9, [X31+8]
	057 Add X8, X8, 8
	058 Move W10, [X8-4]
	059 Move W13, [X8]
	060 NotImplemented "Instruction LDUR not yet implemented."
	061 NotImplemented "Instruction CMP not yet implemented."
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Move W11, W12
	064 Move W14, W13
	065 NotImplemented "Instruction CMP not yet implemented."
	066 Move W11, W10
	067 Move W14, W12
	068 Move W10, W13
	069 Move W11, W13
	070 Move W14, W10
	071 Move W10, W12
	072 Move [X8-8], W10
	073 Move [X8-4], W14
	074 Move [X8+12], W11
	075 Subtract X9, X9, 1
	076 Move X2, [X19]
	077 Move X21, 0x69E000
	078 Move X19, 0x663000
	079 Move X21, [X21+688]
	080 Move X19, [X19+312]
	081 Move X0, [X31+80]
	082 Move X1, [X31+64]
	083 Call NativeArrayUnsafeUtility.GetUnsafeBufferPointerWithoutChecks, X0
	084 Move X8, [X20]
	085 Move W20, [X22+48]
	086 Move X24, X0
	087 Move W9, [X8+224]
	088 Compare W9, 0
	089 JumpIfNotEqual {92}
	090 Move X0, X8
	091 Call 0x1C17DFC
	092 Move X4, [X21]
	093 Subtract W2, W20, 1
	094 Move X0, X24
	095 Move W1, W31
	096 Move X3, X31
	097 Call ModuleHandle.InsertionSort, X0, X1, X2, X3
	098 Move X20, [X31+8]
	099 Move W2, [X22+168]
	100 Move X4, [X19]
	101 Add X0, X31, 144
	102 Move W3, 1
	103 Move W1, W20
	104 Move [X31+144], X31
	105 Move [X31+152], X31
	106 Call NativeArray`1<Int32>..ctor, X0, X1, X2, X3
	107 Move V0, [X31+9]
	108 Move W2, [X22+168]
	109 Add W24, W20, W20
	110 Add X8, X22, 120
	111 Move [X22+120], V0
	112 Move X4, [X19]
	113 Add X0, X31, 128
	114 Move W3, 1
	115 Move W1, W24
	116 Move [X31+16], X8
	117 Move [X31+128], X31
	118 Move [X31+136], X31
	119 Call NativeArray`1<Int32>..ctor, X0, X1, X2, X3
	120 Move V0, [X31+8]
	121 Move W2, [X22+168]
	122 Add X0, X31, 112
	123 Move W3, 1
	124 Move [X22+136], V0
	125 Move X4, [X19]
	126 Move W1, W24
	127 Move [X31+112], X31
	128 Move [X31+120], X31
	129 Call NativeArray`1<Int32>..ctor, X0, X1, X2, X3
	130 Move V0, [X31+7]
	131 Move W2, [X22+168]
	132 Add X8, X22, 152
	133 Add X0, X31, 176
	134 Move [X22+152], V0
	135 Move X4, [X19]
	136 Move W3, 1
	137 Move W1, W24
	138 Move [X31+96], X8
	139 Call NativeArray`1<Int32>..ctor, X0, X1, X2, X3
	140 Move W2, [X22+168]
	141 Move X4, [X19]
	142 Add X0, X31, 160
	143 Move W3, 1
	144 Move W1, W24
	145 Move [X31+56], X22
	146 Call NativeArray`1<Int32>..ctor, X0, X1, X2, X3
	147 NotImplemented "Instruction CMP not yet implemented."
	148 Move X27, [X31+56]
	149 Move X9, X31
	150 Move W14, W31
	151 Move X22, X31
	152 Move W28, W31
	153 Move W23, W31
	154 Move X20, X31
	155 Move W19, W31
	156 Move [X31+88], X31
	157 Move [X31+40], W31
	158 Move [X31+28], W31
	159 Move [X31+48], X26
	160 Move X8, [X31+80]
	161 Move W10, 12
	162 Move [X31+32], X9
	163 Move X21, X31
	164 NotImplemented "Instruction MADD not yet implemented."
	165 Move W25, [X8]
	166 Move W9, [X8+4]
	167 Move W8, [X8+8]
	168 Move [X31+104], W9
	169 Move [X31+44], W8
	170 Move [X31+76], W25
	171 Add X29, X21, 1
	172 NotImplemented "Instruction CMP not yet implemented."
	173 NotImplemented "Instruction CSEL not yet implemented."
	174 Move W24, W25
	175 Compare W21, 0
	176 JumpIfEqual {180}
	177 Move W24, [X31+104]
	178 NotImplemented "Instruction CMP not yet implemented."
	179 Move W24, [X31+44]
	180 Move [X31+108], W14
	181 Compare W8, 0
	182 JumpIfEqual {186}
	183 Move W25, [X31+104]
	184 NotImplemented "Instruction CMP not yet implemented."
	185 Move W25, [X31+44]
	186 Move X0, X27
	187 Move W1, W25
	188 Move W2, W24
	189 Call Tessellator.OppositeOf, X0, X1, X2
	190 Move W3, [X26]
	191 Move X1, [X31+80]
	192 Move X2, [X31+64]
	193 Move W4, W25
	194 Move W5, W24
	195 Move W6, W0
	196 Call Tessellator.FindNeighbor, X0, X1, X2, X3, X4, X5
	197 Move X9, [X31+88]
	198 Move X8, [X27+136]
	199 Move W26, W0
	200 Move W1, W24
	201 Add X21, X9, X21
	202 Move [X8], W0
	203 Move X0, X27
	204 Move W2, W25
	205 Call Tessellator.FindConstraint, X0, X1, X2
	206 Move X8, [X31+96]
	207 Move W14, [X31+108]
	208 Add W31, W0, 1
	209 NotImplemented "Instruction CSEL not yet implemented."
	210 NotImplemented "Instruction CSEL not yet implemented."
	211 NotImplemented "Instruction CSEL not yet implemented."
	212 NotImplemented "Instruction CSEL not yet implemented."
	213 NotImplemented "Instruction CSEL not yet implemented."
	214 NotImplemented "Instruction CSEL not yet implemented."
	215 Move X8, [X22]
	216 Move W9, 1
	217 Move [X8], W9
	218 Move TEMP, X28
	219 And TEMP, TEMP, -2147483648
	220 Compare TEMP, -2147483648
	221 JumpIfNotEqual {244}
	222 Move W10, [X31+40]
	223 Move X8, [X31+176]
	224 Move X11, [X31+32]
	225 Add W9, W10, 1
	226 Move [X31+40], W9
	227 Move [X8], W11
	228 Move X8, [X20]
	229 Move [X8], W31
	230 Move TEMP, X19
	231 And TEMP, TEMP, -2147483648
	232 Compare TEMP, -2147483648
	233 JumpIfNotEqual {244}
	234 Move X8, [X31+160]
	235 Move W9, [X31+28]
	236 Move X11, [X31+32]
	237 Move W10, 1
	238 Move [X8], W11
	239 Move X8, [X31+16]
	240 Add W9, W9, 1
	241 Move [X31+28], W9
	242 Move X8, [X8]
	243 Move [X8], W10
	244 Move X26, [X31+48]
	245 Move W25, [X31+76]
	246 NotImplemented "Instruction CMP not yet implemented."
	247 Move X21, X29
	248 Move X9, [X31+32]
	249 Move X8, [X31+8]
	250 Add X9, X9, 1
	251 NotImplemented "Instruction CMP not yet implemented."
	252 Move X8, [X31+88]
	253 Add X8, X8, 3
	254 Move [X31+88], X8
	255 Move [X31+28], W31
	256 Move [X31+40], W31
	257 Move W6, [X31+28]
	258 Move X19, 0x662000
	259 Move X19, [X19+328]
	260 Move X5, [X31+16]
	261 Move W13, [X31+40]
	262 NotImplemented "Instruction CMP not yet implemented."
	263 NotImplemented "Instruction CMP not yet implemented."
	264 Move X10, [X31+56]
	265 Move X8, [X31+176]
	266 Move X9, [X31+160]
	267 Move W11, 1
	268 Add X10, X10, 136
	269 Move W12, W11
	270 Subtract W11, W31, W11
	271 Move W17, W6
	272 Move W6, W13
	273 Move X13, [X31+160]
	274 Move X15, W17
	275 Subtract X16, X13, 4
	276 NotImplemented "Instruction CMP not yet implemented."
	277 NotImplemented "Instruction LDRSW not yet implemented."
	278 Move X14, [X5]
	279 Subtract X17, X15, 1
	280 Move X15, X17
	281 Move W0, [X14]
	282 NotImplemented "Instruction CMP not yet implemented."
	283 Move [X14], W12
	284 Move X16, [X10]
	285 Move X0, [X31+176]
	286 Move X15, X31
	287 Add W1, W1, W1
	288 Add W3, W1, W15
	289 Move W2, [X16]
	290 Move TEMP, X2
	291 And TEMP, TEMP, -2147483648
	292 Compare TEMP, -2147483648
	293 JumpIfEqual {309}
	294 Move W4, [X14]
	295 Compare W4, 0
	296 JumpIfNotEqual {309}
	297 Move X4, [X31+96]
	298 Move X3, W3
	299 Move X4, [X4]
	300 Move W3, [X4]
	301 Compare W3, 0
	302 JumpIfEqual {306}
	303 Add W3, W6, 1
	304 Move [X0], W2
	305 Move W6, W3
	306 Move [X13], W2
	307 Add W17, W17, 1
	308 Move [X14], W12
	309 Add X15, X15, 1
	310 NotImplemented "Instruction CMP not yet implemented."
	311 NotImplemented "Instruction CMP not yet implemented."
	312 Move W12, W6
	313 Move X13, X8
	314 Move X14, X9
	315 Move W15, [X13+4]
	316 Subtract X12, X12, 1
	317 Move [X14+4], W15
	318 NotImplemented "Instruction CMP not yet implemented."
	319 Move W13, W31
	320 Move X1, [X19]
	321 Add X0, X31, 160
	322 Call NativeArray`1<Int32>.Dispose, X0
	323 Move X1, [X19]
	324 Add X0, X31, 176
	325 Call NativeArray`1<Int32>.Dispose, X0
	326 Move X0, [X31+80]
	327 Move X1, [X31+64]
	328 Move X20, [X31+272]
	329 Move X19, [X31+280]
	330 Move X22, [X31+256]
	331 Move X21, [X31+264]
	332 Move X24, [X31+240]
	333 Move X23, [X31+248]
	334 Move X26, [X31+224]
	335 Move X25, [X31+232]
	336 Move X28, [X31+208]
	337 Move X27, [X31+216]
	338 Move X29, [X31+192]
	339 Move X30, [X31+200]
	340 Add X31, X31, 288
	341 Return X0

Method: Unity.Collections.NativeArray`1<Unity.Mathematics.int3> RemoveExterior(ref System.Int32 cellCount)

Disassembly:
	0x03ABC2F4 BL 0x3B1C1C4
	0x03ABC2F8 LDR X8, [X19 + 0x478]
	0x03ABC2FC CBZ X8, 0x3ABC3B0
	0x03ABC300 LDR X9, [X8 + 0x18]
	0x03ABC304 CBZ X9, 0x3ABC3B0
	0x03ABC308 CBZ W9, 0x3AC3264
	0x03ABC30C LDR W8, [X8 + 0x20]
	0x03ABC310 CBZ W8, 0x3ABC3B0
	0x03ABC314 LDR X2, [X19 + 0xF8]
	0x03ABC318 LDR X4, [X19 + 0x110]
	0x03ABC31C STR W31, [X19 + 0x120]
	0x03ABC320 ADRP X29, 0x69C000
	0x03ABC324 STR X2, [X19 + 0x100]
	0x03ABC328 STR X4, [X19 + 0x118]
	0x03ABC32C LDR X29, [X29 + 0x3E8]
	0x03ABC330 LDR X0, [X29]
	0x03ABC334 LDR W8, [X0 + 0xE0]
	0x03ABC338 CBZ W8, 0x3ABC400
	0x03ABC33C MOV W1, W31
	0x03ABC340 B 0x3ABC410
	0x03ABC344 ADRP X20, 0x69C000
	0x03ABC348 LDR X20, [X20 + 0x3F8]
	0x03ABC34C MOV X0, X19
	0x03ABC350 MOV X1, X31
	0x03ABC354 BL 0x3C385F8
	0x03ABC358 STR W0, [X31 + 0x103C]
	0x03ABC35C ADD X0, X31, 0x1000
	0x03ABC360 ADD X0, X0, 0x3C
	0x03ABC364 MOV X1, X31
	0x03ABC368 BL 0x337B6E0
	0x03ABC36C LDR X8, [X20]
	0x03ABC370 MOV X1, X0
	0x03ABC374 MOV X2, X31
	0x03ABC378 MOV X0, X8
	0x03ABC37C BL 0x321B938
	0x03ABC380 LDR X8, [X22]
	0x03ABC384 MOV X20, X0
	0x03ABC388 LDR W9, [X8 + 0xE0]
	0x03ABC38C CBNZ W9, 0x3ABC398
	0x03ABC390 MOV X0, X8
	0x03ABC394 BL 0x1C16DFC
	0x03ABC398 MOV X0, X20
	0x03ABC39C MOV X1, X31
	0x03ABC3A0 BL 0x3C06A04
	0x03ABC3A4 MOVZ W8, 0x1
	0x03ABC3A8 STRB W8, [X19 + 0x24C]
	0x03ABC3AC B 0x3AC065C
	0x03ABC3B0 LDR X8, [X19]
	0x03ABC3B4 MOVZ W1, 0x1
	0x03ABC3B8 MOV X0, X19
	0x03ABC3BC MOVZ W20, 0x1
	0x03ABC3C0 LDR X9, [X8 + 0x958]
	0x03ABC3C4 LDR X2, [X8 + 0x960]
	0x03ABC3C8 BLR X9
	0x03ABC3CC STR W31, [X19 + 0x3E0]
	0x03ABC3D0 STR W31, [X19 + 0x3EC]
	0x03ABC3D4 ADRP X8, 0x69C000
	0x03ABC3D8 LDR X8, [X8 + 0x3F0]
	0x03ABC3DC LDR X0, [X8]
	0x03ABC3E0 LDR W8, [X0 + 0xE0]
	0x03ABC3E4 CBNZ W8, 0x3ABC3EC
	0x03ABC3E8 BL 0x1C16DFC
	0x03ABC3EC MOV X0, X19
	0x03ABC3F0 MOV X1, X31
	0x03ABC3F4 BL 0x3ADA254
	0x03ABC3F8 STRB W20, [X19 + 0x24C]
	0x03ABC3FC B 0x3AC065C
	0x03ABC400 BL 0x1C16DFC
	0x03ABC404 LDR W1, [X19 + 0x120]
	0x03ABC408 LDR X2, [X19 + 0x100]
	0x03ABC40C LDR X4, [X19 + 0x118]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+64], X30
	003 Move [X31+72], X23
	004 Move [X31+80], X22
	005 Move [X31+88], X21
	006 Move [X31+96], X20
	007 Move [X31+104], X19
	008 Move X21, 0x927000
	009 Move X23, 0x69D000
	010 Move W8, [X21+1181]
	011 Move X23, [X23+672]
	012 Move X19, X1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0x69D000
	019 Move X0, [X0+544]
	020 Call 0x1C17CF4
	021 Move X0, 0x69D000
	022 Move X0, [X0+672]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X21+1181], W8
	026 Move X22, 0x69D000
	027 Move X22, [X22+544]
	028 Add X1, X31, 60
	029 Move X0, X20
	030 Move [X31+40], X31
	031 Move [X31+48], X31
	032 Move [X31+24], X31
	033 Move [X31+32], X31
	034 Move [X31+60], W31
	035 Call Tessellator.Constrain, X0, X1
	036 Move [X31+40], X0
	037 Move [X31+48], X1
	038 Move W21, [X31+60]
	039 Move W2, [X20+168]
	040 Move X4, [X23]
	041 Add X0, X31, 24
	042 Move W3, 1
	043 Move W1, W21
	044 Call NativeArray`1<int3>..ctor, X0, X1, X2, X3
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Move [X19], W31
	047 Move X8, X31
	048 Move W9, 12
	049 Move X10, [X20+120]
	050 Move W10, [X10]
	051 Add W31, W10, 1
	052 NotImplemented "Instruction LDRSW not yet implemented."
	053 Add W11, W10, 1
	054 Move [X19], W11
	055 Move X11, [X31+40]
	056 Move X12, [X31+24]
	057 NotImplemented "Instruction NOP not yet implemented."
	058 NotImplemented "Instruction MADD not yet implemented."
	059 Move X13, [X11]
	060 Move W11, [X11+8]
	061 NotImplemented "Instruction NOP not yet implemented."
	062 NotImplemented "Instruction MADD not yet implemented."
	063 Move [X31+8], X13
	064 Move [X31+16], W11
	065 Move [X10+8], W11
	066 Move [X10], X13
	067 Add X8, X8, 1
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Move X1, [X22]
	070 Add X0, X31, 40
	071 Call NativeArray`1<int3>.Dispose, X0
	072 Move X0, [X31+24]
	073 Move X1, [X31+32]
	074 Move X20, [X31+96]
	075 Move X19, [X31+104]
	076 Move X22, [X31+80]
	077 Move X21, [X31+88]
	078 Move X30, [X31+64]
	079 Move X23, [X31+72]
	080 Add X31, X31, 112
	081 Return X0

Method: Unity.Collections.NativeArray`1<Unity.Mathematics.int3> RemoveInterior(System.Int32 cellCount)

Disassembly:
	0x03ABC410 LDR V0, [X19 + 0x618]
	0x03ABC414 MOVI V1.2D, 0x0
	0x03ABC418 ADD X0, X31, 0x1A0
	0x03ABC41C MOV X3, X31
	0x03ABC420 MOV X5, X31
	0x03ABC424 STR X31, [X31 + 0x1D0]
	0x03ABC428 STP V1, V1, [X31 + 0x1B0]
	0x03ABC42C STR V1, [X31 + 0x1A]
	0x03ABC430 BL 0x3ACB488
	0x03ABC434 LDR X8, [X29]
	0x03ABC438 ADRP X9, 0x69C000
	0x03ABC43C LDR X9, [X9 + 0x3B0]
	0x03ABC440 LDP V0, V1, [X31 + 0x1A0]
	0x03ABC444 LDR X8, [X8 + 0xB8]
	0x03ABC448 LDR V2, [X31 + 0x1C]
	0x03ABC44C LDR X10, [X31 + 0x1D0]
	0x03ABC450 LDR X2, [X9]
	0x03ABC454 ADD X1, X31, 0x1000
	0x03ABC458 ADD X0, X8, 0x10
	0x03ABC45C ADD X1, X1, 0x70
	0x03ABC460 STP V0, V1, [X27 + 0xE0]
	0x03ABC464 STR V2, [X27 + 0x10]
	0x03ABC468 STR X10, [X31 + 0x10A0]
	0x03ABC46C BL 0x2672734
	0x03ABC470 LDR X8, [X19 + 0x1B0]
	0x03ABC474 LDR X20, [X19 + 0x3B8]
	0x03ABC478 STR X8, [X19 + 0x698]
	0x03ABC47C LDR X0, [X21]
	0x03ABC480 LDR W8, [X0 + 0xE0]
	0x03ABC484 CBNZ W8, 0x3ABC48C
	0x03ABC488 BL 0x1C16DFC
	0x03ABC48C MOV X0, X20
	0x03ABC490 MOV X1, X31
	0x03ABC494 MOV X2, X31
	0x03ABC498 BL 0x3C354F8
	0x03ABC49C TBZ X0, 0x0, 0x3ABC4B0
	0x03ABC4A0 LDR X0, [X19 + 0x3B8]
	0x03ABC4A4 CBZ X0, 0x3AC3158
	0x03ABC4A8 MOV X1, X31
	0x03ABC4AC BL 0x3B16054
	0x03ABC4B0 LDR X8, [X19 + 0xF8]
	0x03ABC4B4 CBZ X8, 0x3AC3158
	0x03ABC4B8 LDR W20, [X19 + 0x490]
	0x03ABC4BC LDR V14, [X19 + 0x1E4]
	0x03ABC4C0 ADD X0, X8, 0x50
	0x03ABC4C4 MOV X1, X31
	0x03ABC4C8 BL 0x3C9BF88
	0x03ABC4CC LDR X8, [X19 + 0xF8]
	0x03ABC4D0 CBZ X8, 0x3AC3158
	0x03ABC4D4 MOV W22, W0
	0x03ABC4D8 ADD X0, X8, 0x50
	0x03ABC4DC MOV X1, X31
	0x03ABC4E0 BL 0x3C9BF98
	0x03ABC4E4 LDR V9, [X19 + 0x1E4]
	0x03ABC4E8 MOVZ W10, 0x3F800000
	0x03ABC4EC STR W10, [X19 + 0x404]
	0x03ABC4F0 ADRP X21, 0x69C000
	0x03ABC4F4 STR S9, [X19 + 0x1E8]
	0x03ABC4F8 LDRB W8, [X19 + 0x305]
	0x03ABC4FC LDR X21, [X21 + 0x3D0]
	0x03ABC500 ADRP X9, 0xFFFFFFFFFD02E000
	0x03ABC504 LDR V1, [X9 + 0xBC]
	0x03ABC508 MOV V15.16B, V0.16B
	0x03ABC50C LDR X1, [X21]
	0x03ABC510 CMP W8, 0x0
	0x03ABC514 FMOV S0, 1
	0x03ABC518 FCSEL S13, S1, S0, EQ
	0x03ABC51C ADD X0, X19, 0x1F0

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+48], X30
	003 Move [X31+64], X22
	004 Move [X31+72], X21
	005 Move [X31+80], X20
	006 Move [X31+88], X19
	007 Move X20, 0x927000
	008 Move X22, 0x69D000
	009 Move W8, [X20+1182]
	010 Move X22, [X22+672]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x69D000
	017 Move X0, [X0+544]
	018 Call 0x1C17CF4
	019 Move X0, 0x69D000
	020 Move X0, [X0+672]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X20+1182], W8
	024 Move X21, 0x69D000
	025 Move X21, [X21+544]
	026 Add X1, X31, 60
	027 Move X0, X19
	028 Move [X31+32], X31
	029 Move [X31+40], X31
	030 Move [X31+16], X31
	031 Move [X31+24], X31
	032 Move [X31+60], W31
	033 Call Tessellator.Constrain, X0, X1
	034 Move [X31+32], X0
	035 Move [X31+40], X1
	036 Move W20, [X31+60]
	037 Move W2, [X19+168]
	038 Move X4, [X22]
	039 Add X0, X31, 16
	040 Move W3, 1
	041 Move W1, W20
	042 Call NativeArray`1<int3>..ctor, X0, X1, X2, X3
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Move X8, X31
	045 Move W9, W31
	046 Move W10, 12
	047 Move X11, [X19+120]
	048 Move W11, [X11]
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Move X11, [X31+32]
	051 Move X12, [X31+16]
	052 NotImplemented "Instruction NOP not yet implemented."
	053 NotImplemented "Instruction MADD not yet implemented."
	054 Move X13, [X11]
	055 Move W11, [X11+8]
	056 NotImplemented "Instruction NOP not yet implemented."
	057 NotImplemented "Instruction SMADDL not yet implemented."
	058 Add W9, W9, 1
	059 Move [X31], X13
	060 Move [X31+8], W11
	061 Move [X12+8], W11
	062 Move [X12], X13
	063 Add X8, X8, 1
	064 NotImplemented "Instruction CMP not yet implemented."
	065 Move X1, [X21]
	066 Add X0, X31, 32
	067 Call NativeArray`1<int3>.Dispose, X0
	068 Move X0, [X31+16]
	069 Move X1, [X31+24]
	070 Move X20, [X31+80]
	071 Move X19, [X31+88]
	072 Move X22, [X31+64]
	073 Move X21, [X31+72]
	074 Move X30, [X31+48]
	075 Add X31, X31, 96
	076 Return X0

Method: System.Boolean Triangulate(Unity.Collections.NativeArray`1<Unity.Mathematics.float2> points, System.Int32 pointCount, Unity.Collections.NativeArray`1<Unity.Mathematics.int2> edges, System.Int32 edgeCount)

Disassembly:
	0x03ABC520 MOV V0.16B, V9.16B
	0x03ABC524 STR S1, [X31 + 0x98]
	0x03ABC528 BL 0x26733E0
	0x03ABC52C STR W31, [X31 + 0x106C]
	0x03ABC530 LDR W8, [X19 + 0x258]
	0x03ABC534 STR W8, [X19 + 0x25C]
	0x03ABC538 TBNZ X8, 0x0, 0x3ABC544
	0x03ABC53C LDR W1, [X19 + 0x210]
	0x03ABC540 B 0x3ABC548
	0x03ABC544 MOVZ W1, 0x2BC
	0x03ABC548 STR W1, [X19 + 0x214]
	0x03ABC54C ADRP X8, 0x69C000
	0x03ABC550 LDR X8, [X8 + 0x3C8]
	0x03ABC554 ADD X0, X19, 0x218
	0x03ABC558 LDR X2, [X8]
	0x03ABC55C BL 0x2672150
	0x03ABC560 ADD X0, X19, 0x260
	0x03ABC564 MOV X1, X31
	0x03ABC568 BL 0x3B1CF2C
	0x03ABC56C LDR W1, [X19 + 0x26C]
	0x03ABC570 ADRP X8, 0x69C000
	0x03ABC574 ADD X0, X19, 0x280
	0x03ABC578 STR W1, [X19 + 0x278]
	0x03ABC57C LDR X8, [X8 + 0x3A0]
	0x03ABC580 LDR X2, [X8]
	0x03ABC584 BL 0x2672150
	0x03ABC588 STR W31, [X19 + 0x61C]
	0x03ABC58C ADRP X8, 0x69C000
	0x03ABC590 LDR X8, [X8 + 0x370]
	0x03ABC594 ADD X0, X19, 0x620
	0x03ABC598 LDR X1, [X8]
	0x03ABC59C BL 0x26733D4
	0x03ABC5A0 ADRP X8, 0x91C000
	0x03ABC5A4 LDRB W8, [X8 + 0x783]
	0x03ABC5A8 CBNZ W8, 0x3ABC5C4
	0x03ABC5AC ADRP X0, 0x637000
	0x03ABC5B0 LDR X0, [X0 + 0x5A0]
	0x03ABC5B4 BL 0x1C16CF4
	0x03ABC5B8 MOVZ W8, 0x1
	0x03ABC5BC ADRP X9, 0x91C000
	0x03ABC5C0 STRB W8, [X9 + 0x783]
	0x03ABC5C4 ADRP X8, 0x637000
	0x03ABC5C8 LDR X8, [X8 + 0x5A0]
	0x03ABC5CC LDR V0, [X19 + 0x148]
	0x03ABC5D0 LDR V1, [X19 + 0x14C]
	0x03ABC5D4 LDR V2, [X19 + 0x150]
	0x03ABC5D8 LDR X8, [X8]
	0x03ABC5DC MOV X0, X31
	0x03ABC5E0 LDR X8, [X8 + 0xB8]
	0x03ABC5E4 LDR V4, [X8]
	0x03ABC5E8 LDR V3, [X8 + 0x4]
	0x03ABC5EC STP S4, S3, [X31 + 0xC8]
	0x03ABC5F0 LDR V3, [X8 + 0x8]
	0x03ABC5F4 STR S3, [X31 + 0xB8]
	0x03ABC5F8 LDR V3, [X19 + 0x154]
	0x03ABC5FC BL 0x1E43664
	0x03ABC600 STR W0, [X19 + 0x144]
	0x03ABC604 STR W0, [X19 + 0x4EC]
	0x03ABC608 STR W0, [X19 + 0x158]
	0x03ABC60C STR W0, [X19 + 0x15C]
	0x03ABC610 ADRP X23, 0x69C000
	0x03ABC614 LDR X23, [X23 + 0x3A8]
	0x03ABC618 ADD X8, X19, 0x4F0
	0x03ABC61C AND X1, X0, 0x0
	0x03ABC620 MOV X0, X8
	0x03ABC624 LDR X2, [X23]
	0x03ABC628 BL 0x2670FAC
	0x03ABC62C LDR W1, [X19 + 0x4EC]
	0x03ABC630 LDR X2, [X23]
	0x03ABC634 ADD X0, X19, 0x510
	0x03ABC638 BL 0x2670FAC
	0x03ABC63C LDR W1, [X19 + 0x4EC]
	0x03ABC640 LDR X2, [X23]
	0x03ABC644 ADD X0, X19, 0x530
	0x03ABC648 BL 0x2670FAC
	0x03ABC64C ADRP X8, 0x69C000
	0x03ABC650 LDR X8, [X8 + 0x350]
	0x03ABC654 LDR W23, [X19 + 0x4EC]
	0x03ABC658 LDR X0, [X8]
	0x03ABC65C LDR W8, [X0 + 0xE0]
	0x03ABC660 CBNZ W8, 0x3ABC668
	0x03ABC664 BL 0x1C16DFC
	0x03ABC668 ADRP X24, 0x926000
	0x03ABC66C LDRB W8, [X24 + 0x4A6]
	0x03ABC670 ADD X9, X19, 0x550
	0x03ABC674 STR X9, [X31 + 0xD0]
	0x03ABC678 CBNZ W8, 0x3ABC690
	0x03ABC67C ADRP X0, 0x69C000
	0x03ABC680 LDR X0, [X0 + 0x350]
	0x03ABC684 BL 0x1C16CF4
	0x03ABC688 MOVZ W8, 0x1
	0x03ABC68C STRB W8, [X24 + 0x4A6]
	0x03ABC690 ADRP X24, 0x69C000
	0x03ABC694 LDR X24, [X24 + 0x350]
	0x03ABC698 LDR X0, [X24]
	0x03ABC69C LDR W8, [X0 + 0xE0]
	0x03ABC6A0 CBNZ W8, 0x3ABC6AC
	0x03ABC6A4 BL 0x1C16DFC
	0x03ABC6A8 LDR X0, [X24]
	0x03ABC6AC LDR X8, [X0 + 0xB8]
	0x03ABC6B0 ADD X0, X31, 0x1A0
	0x03ABC6B4 MOV X1, X23
	0x03ABC6B8 MOV X2, X31
	0x03ABC6BC LDP S0, S1, [X8]
	0x03ABC6C0 LDP S2, S3, [X8 + 0x8]
	0x03ABC6C4 STP X31, X31, [X31 + 0x1A0]
	0x03ABC6C8 STR W31, [X31 + 0x1B0]
	0x03ABC6CC BL 0x3ADBDE8
	0x03ABC6D0 ADRP X8, 0x69C000
	0x03ABC6D4 LDR X8, [X8 + 0x398]
	0x03ABC6D8 LDR V0, [X31 + 0x1A]
	0x03ABC6DC LDR W9, [X31 + 0x1B0]
	0x03ABC6E0 LDR X0, [X31 + 0xD0]
	0x03ABC6E4 LDR X2, [X8]
	0x03ABC6E8 ADD X1, X31, 0x1000
	0x03ABC6EC ADD X1, X1, 0x70
	0x03ABC6F0 STR V0, [X27 + 0xE]
	0x03ABC6F4 STR W9, [X31 + 0x1080]
	0x03ABC6F8 BL 0x267154C
	0x03ABC6FC STR X31, [X19 + 0x580]
	0x03ABC700 ADRP X8, 0x69C000
	0x03ABC704 LDR X8, [X8 + 0x3C0]
	0x03ABC708 ADD X0, X19, 0x588
	0x03ABC70C MOV X1, X31
	0x03ABC710 LDR X2, [X8]
	0x03ABC714 BL 0x2672E94
	0x03ABC718 LDR X8, [X19 + 0x100]
	0x03ABC71C CBZ X8, 0x3AC3158
	0x03ABC720 LDRB W1, [X8 + 0x1B8]
	0x03ABC724 ADRP X8, 0x69C000
	0x03ABC728 ADD X0, X19, 0x5D0
	0x03ABC72C STR W1, [X19 + 0x5F0]
	0x03ABC730 LDR X8, [X8 + 0x3B8]
	0x03ABC734 LDR X2, [X8]
	0x03ABC738 BL 0x2671C04
	0x03ABC73C ADRP X8, 0x69C000
	0x03ABC740 LDR X8, [X8 + 0x380]
	0x03ABC744 ADD X0, X19, 0x5F8
	0x03ABC748 LDR X1, [X8]
	0x03ABC74C BL 0x2671BF8
	0x03ABC750 LDR X8, [X19 + 0x100]
	0x03ABC754 MOVZ W9, 0xFE00
	0x03ABC758 MOVK W9, 0xC6FF0000
	0x03ABC75C STRB W31, [X19 + 0x474]
	0x03ABC760 STR W31, [X19 + 0x4D8]
	0x03ABC764 STR W9, [X19 + 0x2C0]
	0x03ABC768 CBZ X8, 0x3AC3158
	0x03ABC76C ADD X0, X8, 0x50
	0x03ABC770 MOV X1, X31
	0x03ABC774 ADD X23, X19, 0x100
	0x03ABC778 BL 0x3C9BFA8
	0x03ABC77C LDR X8, [X23]
	0x03ABC780 CBZ X8, 0x3AC3158
	0x03ABC784 ADD X0, X8, 0x50
	0x03ABC788 MOV X1, X31
	0x03ABC78C MOV V10.16B, V0.16B
	0x03ABC790 BL 0x3C9BFB8
	0x03ABC794 LDR X8, [X23]
	0x03ABC798 STR X23, [X31 + 0x150]
	0x03ABC79C CBZ X8, 0x3AC3158
	0x03ABC7A0 ADD X0, X8, 0x50
	0x03ABC7A4 MOV X1, X31
	0x03ABC7A8 MOV V11.16B, V0.16B
	0x03ABC7AC ADD X23, X19, 0x2AC
	0x03ABC7B0 BL 0x3C9BFF8
	0x03ABC7B4 MOVI D8, 0x0
	0x03ABC7B8 STR D8, [X23]
	0x03ABC7BC STR W31, [X19 + 0x640]
	0x03ABC7C0 STR D8, [X19 + 0x408]
	0x03ABC7C4 LDR X1, [X21]
	0x03ABC7C8 MOV V12.16B, V0.16B
	0x03ABC7CC ADD X0, X19, 0x410
	0x03ABC7D0 FMOV S0, W31
	0x03ABC7D4 BL 0x26733E0
	0x03ABC7D8 LDR W8, [X19 + 0x324]
	0x03ABC7DC STRB W31, [X19 + 0x430]
	0x03ABC7E0 STR W31, [X19 + 0x494]
	0x03ABC7E4 STR S9, [X31 + 0x160]
	0x03ABC7E8 STR W8, [X19 + 0x498]
	0x03ABC7EC STR X31, [X23 + 0x1F0]
	0x03ABC7F0 STR W31, [X19 + 0x4A4]
	0x03ABC7F4 LDR X0, [X29]
	0x03ABC7F8 LDR W8, [X0 + 0xE0]
	0x03ABC7FC CBNZ W8, 0x3ABC808
	0x03ABC800 BL 0x1C16DFC
	0x03ABC804 LDR X0, [X29]
	0x03ABC808 LDR X8, [X0 + 0xB8]
	0x03ABC80C LDR X0, [X19 + 0x368]
	0x03ABC810 MOVI V0.2D, 0x0
	0x03ABC814 MOVN W9, 0x0
	0x03ABC818 LDR V1, [X8 + 0x15A8]
	0x03ABC81C STR D0, [X19 + 0x4A8]
	0x03ABC820 STR D8, [X19 + 0x4D0]
	0x03ABC824 STRB W31, [X19 + 0x2C4]
	0x03ABC828 UNIMPLEMENTED
	0x03ABC82C STR W9, [X19 + 0x2E4]
	0x03ABC830 STR D0, [X19 + 0x4C8]
	0x03ABC834 STR W31, [X19 + 0x4B0]
	0x03ABC838 CBZ X0, 0x3AC3158
	0x03ABC83C LDR X8, [X0 + 0x58]
	0x03ABC840 CBZ X8, 0x3AC3158
	0x03ABC844 LDR W9, [X19 + 0x338]
	0x03ABC848 LDR W8, [X8 + 0x18]
	0x03ABC84C MOV X1, X31
	0x03ABC850 MOV V9.16B, V13.16B
	0x03ABC854 SUB W9, W9, 0x1
	0x03ABC858 SUB W8, W8, 0x1
	0x03ABC85C CMP W9, W8
	0x03ABC860 CSEL W8, W8, W9, GT
	0x03ABC864 CMP W9, 0x0
	0x03ABC868 MOV V13.16B, V15.16B
	0x03ABC86C CSEL W21, W31, W8, LT
	0x03ABC870 BL 0x3B1C7A0
	0x03ABC874 LDR V0, [X19 + 0x340]
	0x03ABC878 MOVZ W8, 0xBF800000
	0x03ABC87C STR W8, [X19 + 0x360]
	0x03ABC880 LDR V1, [X19 + 0x344]
	0x03ABC884 STR S0, [X31 + 0x30]
	0x03ABC888 MOVI D0, 0x0
	0x03ABC88C STR D0, [X19 + 0x350]
	0x03ABC890 LDR X0, [X29]
	0x03ABC894 LDR V0, [X19 + 0x34C]
	0x03ABC898 LDR V15, [X19 + 0x358]
	0x03ABC89C LDR V8, [X19 + 0x35C]
	0x03ABC8A0 LDR W8, [X0 + 0xE0]
	0x03ABC8A4 STP S1, S0, [X31 + 0x24]
	0x03ABC8A8 CBNZ W8, 0x3ABC8B4
	0x03ABC8AC BL 0x1C16DFC
	0x03ABC8B0 LDR X0, [X29]
	0x03ABC8B4 LDR X8, [X0 + 0xB8]
	0x03ABC8B8 STR W21, [X31 + 0x44]
	0x03ABC8BC LDR X8, [X8 + 0x1598]
	0x03ABC8C0 STR X8, [X23 + 0x230]
	0x03ABC8C4 LDR X8, [X0 + 0xB8]
	0x03ABC8C8 LDR X8, [X8 + 0x15A0]
	0x03ABC8CC STR X8, [X23 + 0x238]
	0x03ABC8D0 LDR X0, [X19 + 0x368]
	0x03ABC8D4 CBZ X0, 0x3AC3158
	0x03ABC8D8 MOV X1, X31
	0x03ABC8DC BL 0x3B1C620
	0x03ABC8E0 ADD X0, X31, 0x1000
	0x03ABC8E4 MOVI D0, 0x0
	0x03ABC8E8 ADD X8, X31, 0x65
	0x03ABC8EC ADD X0, X0, 0x58
	0x03ABC8F0 MOVN W1, 0x0
	0x03ABC8F4 MOV W2, W31
	0x03ABC8F8 MOV X3, X31
	0x03ABC8FC STR W31, [X19 + 0x4BC]
	0x03ABC900 STR W31, [X19 + 0x4C4]
	0x03ABC904 STR X23, [X31 + 0x88]
	0x03ABC908 STR D0, [X23 + 0x208]
	0x03ABC90C STR W31, [X31 + 0x1068]
	0x03ABC910 STRB W31, [X8 + 0xFFF]
	0x03ABC914 STRB W31, [X19 + 0x33C]
	0x03ABC918 STRB W31, [X19 + 0x2DA]
	0x03ABC91C BL 0x3B1BAD0
	0x03ABC920 LDR X8, [X29]
	0x03ABC924 MOVN W2, 0x0
	0x03ABC928 MOVN W3, 0x0
	0x03ABC92C MOV X0, X19
	0x03ABC930 LDR X8, [X8 + 0xB8]
	0x03ABC934 MOV X4, X31
	0x03ABC938 ADD X1, X8, 0x98
	0x03ABC93C BL 0x3B05DB4
	0x03ABC940 LDR X8, [X29]
	0x03ABC944 MOVN W2, 0x0
	0x03ABC948 MOVN W3, 0x0
	0x03ABC94C MOV X0, X19
	0x03ABC950 LDR X8, [X8 + 0xB8]
	0x03ABC954 MOV X4, X31
	0x03ABC958 ADD X1, X8, 0x410
	0x03ABC95C BL 0x3B05DB4
	0x03ABC960 LDR X8, [X29]
	0x03ABC964 MOVN W2, 0x0
	0x03ABC968 MOVN W3, 0x0
	0x03ABC96C MOV X0, X19
	0x03ABC970 LDR X8, [X8 + 0xB8]
	0x03ABC974 MOV X4, X31
	0x03ABC978 ADD X1, X8, 0x788
	0x03ABC97C BL 0x3B05DB4
	0x03ABC980 LDR X8, [X29]
	0x03ABC984 MOVN W2, 0x0
	0x03ABC988 MOVN W3, 0x0
	0x03ABC98C MOV X0, X19
	0x03ABC990 LDR X8, [X8 + 0xB8]
	0x03ABC994 MOV X4, X31
	0x03ABC998 ADD X1, X8, 0xB00
	0x03ABC99C BL 0x3B05DB4
	0x03ABC9A0 LDR X8, [X29]
	0x03ABC9A4 MOVN W2, 0x0
	0x03ABC9A8 MOVN W3, 0x0
	0x03ABC9AC MOV X0, X19
	0x03ABC9B0 LDR X8, [X8 + 0xB8]
	0x03ABC9B4 MOV X4, X31
	0x03ABC9B8 ADD X1, X8, 0xE78
	0x03ABC9BC BL 0x3B05DB4
	0x03ABC9C0 LDR X8, [X29]
	0x03ABC9C4 ADRP X9, 0x69C000
	0x03ABC9C8 LDR X8, [X8 + 0xB8]
	0x03ABC9CC LDR X9, [X9 + 0x378]
	0x03ABC9D0 LDR X1, [X9]
	0x03ABC9D4 MOVZ W9, 0x11F0
	0x03ABC9D8 ADD X0, X8, X9
	0x03ABC9DC BL 0x26739A8
	0x03ABC9E0 STR W31, [X31 + 0x1038]
	0x03ABC9E4 LDR X8, [X19 + 0x478]
	0x03ABC9E8 CBZ X8, 0x3AC3158
	0x03ABC9EC ADD X12, X19, 0x1E4
	0x03ABC9F0 STR X12, [X31 + 0x48]
	0x03ABC9F4 LDR X12, [X31 + 0x88]
	0x03ABC9F8 ADD X13, X19, 0x350
	0x03ABC9FC SCVTF S1, W22
	0x03ABCA00 FSUB S2, S11, S12
	0x03ABCA04 ADD X26, X12, 0x1E8
	0x03ABCA08 ADD X12, X19, 0x354
	0x03ABCA0C STP X12, X13, [X31 + 0xA8]
	0x03ABCA10 SUB W12, W20, 0x1
	0x03ABCA14 STR W12, [X31 + 0x90]
	0x03ABCA18 ADD X12, X19, 0x434
	0x03ABCA1C STR X12, [X31 + 0x80]
	0x03ABCA20 ADD X12, X19, 0x244
	0x03ABCA24 STR X12, [X31 + 0x38]
	0x03ABCA28 ADRP X12, 0xFFFFFFFFFD02E000
	0x03ABCA2C LDR V5, [X12 + 0x5C]
	0x03ABCA30 FMOV S0, W31
	0x03ABCA34 FDIV S1, S14, S1
	0x03ABCA38 FMAXNM S6, S8, S0
	0x03ABCA3C STR S5, [X31 + 0x2C]
	0x03ABCA40 FSUB S5, S10, S2
	0x03ABCA44 FMOV S2, W31
	0x03ABCA48 STR S2, [X31 + 0x140]
	0x03ABCA4C FMAXNM S2, S15, S0
	0x03ABCA50 FMUL S0, S1, S13
	0x03ABCA54 ADRP X10, 0xFFFFFFFFFD02E000
	0x03ABCA58 FMUL S0, S0, S9
	0x03ABCA5C ADRP X11, 0xFFFFFFFFFD02D000
	0x03ABCA60 LDR V4, [X10 + 0x330]
	0x03ABCA64 FMUL S1, S0, S5
	0x03ABCA68 STR S0, [X31 + 0x60]
	0x03ABCA6C MOV V11.16B, V0.16B
	0x03ABCA70 LDR V0, [X31 + 0x160]
	0x03ABCA74 LDR V3, [X11 + 0xF28]
	0x03ABCA78 STP S4, S1, [X31 + 0x64]
	0x03ABCA7C MOVZ W11, 0x1
	0x03ABCA80 FMUL S0, S0, S4
	0x03ABCA84 FADD S1, S2, S3
	0x03ABCA88 FADD S2, S6, S3

ISIL:
	001 Subtract X31, X31, 320
	002 Move [X31+208], D9
	003 Move [X31+216], D8
	004 Move [X31+224], X29
	005 Move [X31+232], X30
	006 Move [X31+240], X28
	007 Move [X31+248], X27
	008 Move [X31+256], X26
	009 Move [X31+264], X25
	010 Move [X31+272], X24
	011 Move [X31+280], X23
	012 Move [X31+288], X22
	013 Move [X31+296], X21
	014 Move [X31+304], X20
	015 Move [X31+312], X19
	016 NotImplemented "Instruction MRS not yet implemented."
	017 Move X8, [X25+40]
	018 Move X27, 0x927000
	019 Move X26, 0x661000
	020 Move W23, W6
	021 Move [X31+200], X8
	022 Move W8, [X27+1183]
	023 Move X26, [X26+216]
	024 Move X22, X4
	025 Move W24, W3
	026 Move X19, X2
	027 Move X20, X1
	028 Move X21, X0
	029 Move TEMP, X8
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfEqual {65}
	033 Move X0, 0x69D000
	034 Move X0, [X0+632]
	035 Call 0x1C17CF4
	036 Move X0, 0x69D000
	037 Move X0, [X0+704]
	038 Call 0x1C17CF4
	039 Move X0, 0x661000
	040 Move X0, [X0+216]
	041 Call 0x1C17CF4
	042 Move X0, 0x69D000
	043 Move X0, [X0+712]
	044 Call 0x1C17CF4
	045 Move X0, 0x69D000
	046 Move X0, [X0+720]
	047 Call 0x1C17CF4
	048 Move X0, 0x69D000
	049 Move X0, [X0+728]
	050 Call 0x1C17CF4
	051 Move X0, 0x69D000
	052 Move X0, [X0+736]
	053 Call 0x1C17CF4
	054 Move X0, 0x662000
	055 Move X0, [X0+312]
	056 Call 0x1C17CF4
	057 Move X0, 0x69D000
	058 Move X0, [X0+744]
	059 Call 0x1C17CF4
	060 Move X0, 0x69D000
	061 Move X0, [X0+672]
	062 Call 0x1C17CF4
	063 Move W8, 1
	064 Move [X27+1183], W8
	065 Move W8, W23
	066 ShiftRight W8, 31
	067 And W8, W8, 0x3FFFFFFF
	068 Move [X31+136], X31
	069 Move [X31+144], X31
	070 Move [X31+112], X31
	071 Move [X31+120], X31
	072 Move [X31+176], X31
	073 Move [X31+184], X31
	074 Move [X31+192], W31
	075 Move [X31+152], X31
	076 Move [X31+160], X31
	077 Move [X31+168], W31
	078 Move [X21+108], W8
	079 Move [X21+112], W24
	080 Move [X21+104], W23
	081 Move [X21+48], W31
	082 Move X0, [X26]
	083 Move X28, 0x69D000
	084 Move X27, 0x662000
	085 Move X24, 0x69D000
	086 Move X23, 0x69D000
	087 Move W8, [X0+224]
	088 Move X28, [X28+672]
	089 Move X27, [X27+312]
	090 Move X24, [X24+744]
	091 Move X23, [X23+736]
	092 Compare W8, 0
	093 JumpIfNotEqual {96}
	094 Call 0x1C17DFC
	095 Move X0, [X26]
	096 Move X8, [X0+184]
	097 Move W2, [X21+168]
	098 Move X4, [X28]
	099 Add X0, X31, 96
	100 Move W1, [X8+16]
	101 Move W3, 1
	102 Move [X31+96], X31
	103 Move [X31+104], X31
	104 Call NativeArray`1<int3>..ctor, X0, X1, X2, X3
	105 Move V0, [X31+6]
	106 Move W8, [X21+108]
	107 Move W2, [X21+168]
	108 Add X0, X31, 80
	109 Move [X21+2], V0
	110 Move X4, [X27]
	111 Add W9, W8, 1
	112 Multiply W1, W9, W8
	113 Move W3, 1
	114 Move [X31+80], X31
	115 Move [X31+88], X31
	116 Call NativeArray`1<Int32>..ctor, X0, X1, X2, X3
	117 Move V0, [X31+5]
	118 Move W8, [X21+108]
	119 Move W2, [X21+168]
	120 Add X0, X31, 64
	121 Move [X21+56], V0
	122 Move X4, [X27]
	123 Add W9, W8, 1
	124 Multiply W1, W9, W8
	125 Move W3, 1
	126 Move [X31+64], X31
	127 Move [X31+72], X31
	128 Call NativeArray`1<Int32>..ctor, X0, X1, X2, X3
	129 Move V0, [X31+4]
	130 Move W8, [X21+112]
	131 Move W2, [X21+168]
	132 Add X0, X31, 136
	133 Move [X21+72], V0
	134 Move X4, [X24]
	135 Move W1, W8
	136 ShiftRight W1, 29
	137 And W1, W1, 0xFFFFFFF
	138 Move W3, 1
	139 Call NativeArray`1<UHull>..ctor, X0, X1, X2, X3
	140 Move [X31+132], W31
	141 Move W8, [X21+112]
	142 Move W9, [X21+104]
	143 Move W2, [X21+168]
	144 Move X4, [X23]
	145 Add X0, X31, 112
	146 Add W1, W8, W9
	147 Move W3, 1
	148 Call NativeArray`1<UEvent>..ctor, X0, X1, X2, X3
	149 Move W8, [X21+112]
	150 NotImplemented "Instruction CMP not yet implemented."
	151 Move X8, X31
	152 Move X23, X31
	153 Move X9, [X31+112]
	154 Move X10, [X20]
	155 Add X9, X9, X8
	156 Move [X9], X10
	157 Move [X9+8], X31
	158 Move [X9+16], W23
	159 Move [X9+20], W31
	160 NotImplemented "Instruction LDRSW not yet implemented."
	161 Add X23, X23, 1
	162 Add X8, X8, 24
	163 NotImplemented "Instruction CMP not yet implemented."
	164 Move W23, W31
	165 Move W8, [X21+104]
	166 NotImplemented "Instruction CMP not yet implemented."
	167 Move X8, 0x69D000
	168 Move X8, [X8+712]
	169 Move X9, X31
	170 Add X10, X22, 4
	171 Move W11, 24
	172 Move W12, 2
	173 Move W13, 1
	174 NotImplemented "Instruction LDPSW not yet implemented."
	175 Add X14, X20, X14
	176 Add X15, X20, X15
	177 Move S2, [X15]
	178 Move S1, [X15+4]
	179 Move S3, [X14]
	180 Move S0, [X14+4]
	181 NotImplemented "Instruction FCMP not yet implemented."
	182 Move X14, [X31+112]
	183 Add W15, W23, 1
	184 NotImplemented "Instruction SMADDL not yet implemented."
	185 Move [X14], S3
	186 Move [X14+8], S0
	187 Move [X14+8], S2
	188 Move [X14+16], S1
	189 Move [X14+16], W9
	190 Move [X14+20], W12
	191 Move X14, [X31+112]
	192 NotImplemented "Instruction NOP not yet implemented."
	193 NotImplemented "Instruction SMADDL not yet implemented."
	194 Move [X14], S2
	195 Move [X14+8], S1
	196 Move [X14+8], S3
	197 Move [X14+16], S0
	198 Move X14, [X31+112]
	199 Add W15, W23, 1
	200 NotImplemented "Instruction SMADDL not yet implemented."
	201 Move [X14], S2
	202 Move [X14+8], S1
	203 Move [X14+8], S3
	204 Move [X14+16], S0
	205 Move [X14+16], W9
	206 Move [X14+20], W12
	207 Move X14, [X31+112]
	208 NotImplemented "Instruction NOP not yet implemented."
	209 NotImplemented "Instruction SMADDL not yet implemented."
	210 Move [X14], S3
	211 Move [X14+8], S0
	212 Move [X14+8], S2
	213 Move [X14+16], S1
	214 Add W23, W23, 2
	215 Move [X14+16], W9
	216 Move [X14+20], W13
	217 NotImplemented "Instruction LDRSW not yet implemented."
	218 Add X9, X9, 1
	219 Add X10, X10, 8
	220 NotImplemented "Instruction CMP not yet implemented."
	221 Move X0, [X31+112]
	222 Move X1, [X31+120]
	223 Move X2, [X8]
	224 Move X24, 0x69D000
	225 Move X24, [X24+704]
	226 Call NativeArrayUnsafeUtility.GetUnsafeBufferPointerWithoutChecks, X0
	227 Move X8, [X26]
	228 Move X22, X0
	229 Move W9, [X8+224]
	230 Compare W9, 0
	231 JumpIfNotEqual {234}
	232 Move X0, X8
	233 Call 0x1C17DFC
	234 Move X4, [X24]
	235 Subtract W2, W23, 1
	236 Move X0, X22
	237 Move W1, W31
	238 Move X3, X31
	239 Call ModuleHandle.InsertionSort, X0, X1, X2, X3
	240 Move X8, [X31+112]
	241 Move X22, 0x926000
	242 Move W9, [X22+1399]
	243 Move V8, [X8]
	244 Compare W9, 0
	245 JumpIfNotEqual {251}
	246 Move X0, 0x638000
	247 Move X0, [X0+1448]
	248 Call 0x1C17CF4
	249 Move W8, 1
	250 Move [X22+1399], W8
	251 Move X8, 0x638000
	252 Move X8, [X8+1448]
	253 Move X22, 0x69D000
	254 Add X27, X31, 152
	255 NotImplemented "Instruction FABS not yet implemented."
	256 Move X0, [X8]
	257 Move W8, [X0+224]
	258 Move X22, [X22+632]
	259 Compare W8, 0
	260 JumpIfNotEqual {262}
	261 Call 0x1C17DFC
	262 Move X26, 0x69D000
	263 Move X24, 0x69D000
	264 Move X26, [X26+720]
	265 Move X24, [X24+728]
	266 Move D0, 2
	267 Move D1, -16
	268 Move X0, X31
	269 Call Math.Pow, V0, V1
	270 Move W4, [X21+108]
	271 Move X1, [X21+56]
	272 Move X2, [X21+64]
	273 Move X5, [X22]
	274 Move S1, 1
	275 NotImplemented "Instruction INVALID not yet implemented."
	276 Add S1, S9, S1
	277 Multiply S0, S1, S0
	278 Multiply W3, W4, W4
	279 Add X0, X31, 96
	280 Subtract S8, S8, S0
	281 Move [X31+96], X31
	282 Move [X31+104], X31
	283 Call 0x2B8D120, X0, X1, X2, X3
	284 Move V0, [X31+6]
	285 Move X5, [X22]
	286 Add X0, X31, 80
	287 Move [X27+28], V0
	288 Move W4, [X21+108]
	289 Move X1, [X21+72]
	290 Move X2, [X21+80]
	291 Move [X31+80], X31
	292 Move [X31+88], X31
	293 Multiply W3, W4, W4
	294 Call 0x2B8D120, X0, X1, X2, X3
	295 Move V0, [X31+5]
	296 Move X8, [X31+136]
	297 Move W22, 1
	298 Move W9, 0x3F800000
	299 Move [X31+132], W22
	300 Move [X27+4], V0
	301 Move [X8+4], W9
	302 Move X9, INVALID
	303 Move [X8], S8
	304 Move [X8+8], S8
	305 Move [X8+12], X9
	306 Move V0, [X31+11]
	307 Move W9, [X31+192]
	308 NotImplemented "Instruction CMP not yet implemented."
	309 Move [X8+20], V0
	310 Move [X8+36], W9
	311 Move [X8+40], W31
	312 Move V0, [X27]
	313 Move W9, [X31+168]
	314 Move [X8+64], X31
	315 Move [X8+44], V0
	316 Move [X8+60], W9
	317 Move W8, 24
	318 Move X22, X31
	319 NotImplemented "Instruction UMADDL not yet implemented."
	320 Move X8, [X31+112]
	321 Add X9, X8, X22
	322 Move W10, [X9+20]
	323 NotImplemented "Instruction CMP not yet implemented."
	324 Compare W10, 0
	325 JumpIfNotEqual {355}
	326 Add X8, X8, X22
	327 Move X1, [X31+136]
	328 Move X2, [X31+144]
	329 Move W3, [X31+132]
	330 Move S0, [X8]
	331 Move S1, [X8+4]
	332 Move W6, [X8+16]
	333 Move X0, X21
	334 Move X4, X20
	335 Move X5, X19
	336 Call Tessellator.AddPoint, X0, X1, X2, X3, X4, X5
	337 Move TEMP, X0
	338 And TEMP, TEMP, 1
	339 Compare TEMP, 1
	340 JumpIfEqual {369}
	341 Move X8, [X9+16]
	342 Move V0, [X9]
	343 Move X1, [X31+136]
	344 Move X2, [X31+144]
	345 Add X3, X31, 132
	346 Add X6, X31, 32
	347 Move X0, X21
	348 Move [X31+2], V0
	349 Move [X31+48], X8
	350 Call Tessellator.SplitHulls, X0, X1, X2, X3, X4
	351 Move TEMP, X0
	352 And TEMP, TEMP, 1
	353 Compare TEMP, 1
	354 JumpIfEqual {369}
	355 Add X8, X8, X22
	356 Move X9, [X8+16]
	357 Move V0, [X8]
	358 Move X1, [X31+136]
	359 Move X2, [X31+144]
	360 Add X3, X31, 132
	361 Add X6, X31, 0
	362 Move [X31], V0
	363 Move [X31+16], X9
	364 Call Tessellator.MergeHulls, X0, X1, X2, X3, X4
	365 Move TEMP, X0
	366 And TEMP, TEMP, 1
	367 Compare TEMP, 1
	368 JumpIfNotEqual {372}
	369 Add X22, X22, 24
	370 NotImplemented "Instruction CMP not yet implemented."
	371 Move W22, 1
	372 Move W22, W31
	373 Move X1, [X26]
	374 Add X0, X31, 112
	375 Call NativeArray`1<UEvent>.Dispose, X0
	376 Move X1, [X24]
	377 Add X0, X31, 136
	378 Call NativeArray`1<UHull>.Dispose, X0
	379 Move X8, [X25+40]
	380 Move X9, [X31+200]
	381 NotImplemented "Instruction CMP not yet implemented."
	382 Move W0, W22
	383 Move X20, [X31+304]
	384 Move X19, [X31+312]
	385 Move X22, [X31+288]
	386 Move X21, [X31+296]
	387 Move X24, [X31+272]
	388 Move X23, [X31+280]
	389 Move X26, [X31+256]
	390 Move X25, [X31+264]
	391 Move X28, [X31+240]
	392 Move X27, [X31+248]
	393 Move X29, [X31+224]
	394 Move X30, [X31+232]
	395 Move D9, [X31+208]
	396 Move D8, [X31+216]
	397 Add X31, X31, 320
	398 Return X0
	399 Call 0x3EB2B20

Method: System.Boolean Tessellate(Unity.Collections.Allocator allocator, Unity.Collections.NativeArray`1<Unity.Mathematics.float2> pgPoints, System.Int32 pgPointCount, Unity.Collections.NativeArray`1<Unity.Mathematics.int2> pgEdges, System.Int32 pgEdgeCount, ref Unity.Collections.NativeArray`1<Unity.Mathematics.float2> outputVertices, ref System.Int32 vertexCount, ref Unity.Collections.NativeArray`1<System.Int32> outputIndices, ref System.Int32 indexCount)

Disassembly:
	0x03AB91B0 BL 0x1C16DFC
	0x03AB91B4 LDR X26, [X31 + 0x18]
	0x03AB91B8 LDR X4, [X25]
	0x03AB91BC MOV X1, X24
	0x03AB91C0 MOV W2, W23
	0x03AB91C4 MOV X0, X26
	0x03AB91C8 MOV V0.16B, V9.16B
	0x03AB91CC MOV V1.16B, V8.16B
	0x03AB91D0 MOV X3, X31
	0x03AB91D4 BL 0x221EB00
	0x03AB91D8 LDR X4, [X21]
	0x03AB91DC MOV W25, W0
	0x03AB91E0 MOV X0, X26
	0x03AB91E4 MOV X1, X24
	0x03AB91E8 MOV W2, W23
	0x03AB91EC MOV V0.16B, V9.16B
	0x03AB91F0 MOV V1.16B, V8.16B
	0x03AB91F4 MOV X3, X31
	0x03AB91F8 BL 0x221EDC4
	0x03AB91FC ORR W8, W25, W0, 0x0
	0x03AB9200 TBNZ X8, 0x1F, 0x3AB9484
	0x03AB9204 CMP W25, W0
	0x03AB9208 B.GE 0x3AB947C
	0x03AB920C SXTW X10, W0
	0x03AB9210 SXTW X9, W25
	0x03AB9214 STR X10, [X31 + 0x10]
	0x03AB9218 ADRP X25, 0x69F000
	0x03AB921C LDR X25, [X25 + 0x250]
	0x03AB9220 ADD X8, X31, 0x30
	0x03AB9224 MOV X21, X27
	0x03AB9228 ADD X23, X8, 0x18
	0x03AB922C ADD X24, X8, 0x30
	0x03AB9230 MOVZ W29, 0xC
	0x03AB9234 LDR X8, [X31 + 0x18]
	0x03AB9238 MOVZ W10, 0x48
	0x03AB923C ADD X0, X31, 0x30
	0x03AB9240 MOVZ W2, 0x48
	0x03AB9244 MADD X1, X9, X10, X8
	0x03AB9248 STP X1, X9, [X31 + 0x20]
	0x03AB924C BL 0x3EB1B30
	0x03AB9250 LDR W26, [X31 + 0x58]
	0x03AB9254 CMP W26, 0x2
	0x03AB9258 B.LT 0x3AB9324
	0x03AB925C LDR X2, [X25]
	0x03AB9260 SUB W28, W26, 0x2
	0x03AB9264 MOV X0, X23
	0x03AB9268 MOV W1, W28
	0x03AB926C BL 0x2B8C4C0
	0x03AB9270 ADD X8, X20, W0, 0x3, SXTW
	0x03AB9274 LDR X2, [X25]
	0x03AB9278 LDP S10, S11, [X8]
	0x03AB927C SUB W27, W26, 0x1
	0x03AB9280 MOV X0, X23
	0x03AB9284 MOV W1, W27
	0x03AB9288 BL 0x2B8C4C0
	0x03AB928C MOV W8, W0
	0x03AB9290 LDR X0, [X21]
	0x03AB9294 ADD X8, X20, W8, 0x3, SXTW
	0x03AB9298 LDP S13, S12, [X8]
	0x03AB929C LDR W9, [X0 + 0xE0]
	0x03AB92A0 CBNZ W9, 0x3AB92A8
	0x03AB92A4 BL 0x1C16DFC
	0x03AB92A8 MOV V0.16B, V10.16B
	0x03AB92AC MOV V1.16B, V11.16B
	0x03AB92B0 MOV V2.16B, V13.16B
	0x03AB92B4 MOV V3.16B, V12.16B
	0x03AB92B8 MOV V4.16B, V9.16B
	0x03AB92BC MOV V5.16B, V8.16B
	0x03AB92C0 MOV X0, X31
	0x03AB92C4 BL 0x3A23478
	0x03AB92C8 FCMP S0, 0x0
	0x03AB92CC B.LE 0x3AB9324
	0x03AB92D0 LDR X2, [X25]
	0x03AB92D4 MOV X0, X23
	0x03AB92D8 MOV W1, W27
	0x03AB92DC BL 0x2B8C4C0
	0x03AB92E0 LDR X2, [X25]
	0x03AB92E4 MOV W26, W0
	0x03AB92E8 MOV X0, X23
	0x03AB92EC MOV W1, W28
	0x03AB92F0 BL 0x2B8C4C0
	0x03AB92F4 LDRSW X8, [X22 + 0x30]
	0x03AB92F8 LDR X9, [X22 + 0x20]
	0x03AB92FC ADD W10, W27, 0x1
	0x03AB9300 CMP W10, 0x3
	0x03AB9304 ADD W10, W8, 0x1
	0x03AB9308 MADD X8, X8, X29, X9
	0x03AB930C STR W10, [X22 + 0x30]
	0x03AB9310 STP W26, W0, [X8]
	0x03AB9314 MOV W26, W27
	0x03AB9318 STR W19, [X8 + 0x8]
	0x03AB931C B.GE 0x3AB925C
	0x03AB9320 MOVZ W26, 0x1
	0x03AB9324 LDR W8, [X31 + 0x54]
	0x03AB9328 ADD W9, W26, 0x1
	0x03AB932C STR W9, [X31 + 0x58]
	0x03AB9330 CMP W9, W8
	0x03AB9334 B.GT 0x3AB9484
	0x03AB9338 ADRP X8, 0x69F000
	0x03AB933C LDR X8, [X8 + 0x260]
	0x03AB9340 MOV X0, X23
	0x03AB9344 MOV W1, W26
	0x03AB9348 MOV W2, W19
	0x03AB934C LDR X3, [X8]
	0x03AB9350 BL 0x2B8C500
	0x03AB9354 LDR W26, [X31 + 0x70]
	0x03AB9358 CMP W26, 0x2
	0x03AB935C B.LT 0x3AB9428
	0x03AB9360 LDR X2, [X25]
	0x03AB9364 SUB W28, W26, 0x2
	0x03AB9368 MOV X0, X24
	0x03AB936C MOV W1, W28
	0x03AB9370 BL 0x2B8C4C0
	0x03AB9374 ADD X8, X20, W0, 0x3, SXTW
	0x03AB9378 LDR X2, [X25]
	0x03AB937C LDP S10, S11, [X8]
	0x03AB9380 SUB W27, W26, 0x1
	0x03AB9384 MOV X0, X24
	0x03AB9388 MOV W1, W27
	0x03AB938C BL 0x2B8C4C0
	0x03AB9390 MOV W8, W0
	0x03AB9394 LDR X0, [X21]
	0x03AB9398 ADD X8, X20, W8, 0x3, SXTW
	0x03AB939C LDP S13, S12, [X8]
	0x03AB93A0 LDR W9, [X0 + 0xE0]

ISIL:
	001 Subtract X31, X31, 288
	002 Move [X31+192], X29
	003 Move [X31+208], X30
	004 Move [X31+216], X27
	005 Move [X31+224], X26
	006 Move [X31+232], X25
	007 Move [X31+240], X24
	008 Move [X31+248], X23
	009 Move [X31+256], X22
	010 Move [X31+264], X21
	011 Move [X31+272], X20
	012 Move [X31+280], X19
	013 Move X27, 0x92A000
	014 Move W8, [X27+1184]
	015 Move X19, X7
	016 Move W24, W6
	017 Move X21, X5
	018 Move X22, X4
	019 Move W25, W3
	020 Move X23, X2
	021 Move X20, X1
	022 Move W26, W0
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {32}
	027 Move X0, 0x6A0000
	028 Move X0, [X0+544]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X27+1184], W8
	032 Add X0, X31, 16
	033 Move W2, 176
	034 Move W1, W31
	035 Move [X31], X31
	036 Move [X31+8], X31
	037 Call 0x3EB2B10
	038 Add X0, X31, 16
	039 Move X1, X20
	040 Move X2, X23
	041 Move W3, W25
	042 Move X4, X22
	043 Move X5, X21
	044 Move W6, W24
	045 Move [X31+184], W26
	046 Move [X31+204], W31
	047 Call Tessellator.Triangulate, X0, X1, X2, X3, X4
	048 Move W24, W31
	049 Move TEMP, X0
	050 And TEMP, TEMP, 1
	051 Compare TEMP, 1
	052 JumpIfNotEqual {127}
	053 Add X0, X31, 16
	054 Move X1, X20
	055 Move X2, X23
	056 Move X3, X22
	057 Move X4, X21
	058 Call Tessellator.ApplyDelaunay, X0, X1, X2
	059 Move TEMP, X0
	060 And TEMP, TEMP, 1
	061 Compare TEMP, 1
	062 JumpIfNotEqual {126}
	063 Add X0, X31, 16
	064 Add X1, X31, 204
	065 Call Tessellator.RemoveExterior, X0, X1
	066 Move W9, [X31+204]
	067 Move [X31], X0
	068 Move [X31+8], X1
	069 NotImplemented "Instruction CMP not yet implemented."
	070 Move X12, [X31+296]
	071 Move X11, [X31+304]
	072 Move X8, [X31+288]
	073 Move W10, W31
	074 Add X13, X0, 8
	075 Move W14, [X13-8]
	076 Move W16, [X13-4]
	077 Move W15, [X13]
	078 And W0, W14, 0xFFFF
	079 NotImplemented "Instruction CMP not yet implemented."
	080 And W17, W16, 0xFFFF
	081 NotImplemented "Instruction CMP not yet implemented."
	082 And W1, W15, 0xFFFF
	083 NotImplemented "Instruction CMP not yet implemented."
	084 NotImplemented "Instruction LDRSW not yet implemented."
	085 Add W15, W14, 1
	086 Move [X11], W15
	087 Move X15, [X12]
	088 Move [X15], W0
	089 NotImplemented "Instruction LDRSW not yet implemented."
	090 Add W16, W14, 1
	091 Move [X11], W16
	092 Move [X15], W1
	093 NotImplemented "Instruction LDRSW not yet implemented."
	094 Add W16, W14, 1
	095 Move [X11], W16
	096 Move [X15], W17
	097 Move W14, [X13-8]
	098 Move W16, [X13-4]
	099 Move W15, [X13]
	100 NotImplemented "Instruction CMP not yet implemented."
	101 NotImplemented "Instruction CSEL not yet implemented."
	102 NotImplemented "Instruction CMP not yet implemented."
	103 NotImplemented "Instruction CSEL not yet implemented."
	104 NotImplemented "Instruction CMP not yet implemented."
	105 NotImplemented "Instruction CSEL not yet implemented."
	106 Subtract X9, X9, 1
	107 Add X13, X13, 12
	108 Compare W10, 0
	109 JumpIfEqual {120}
	110 Add W9, W10, 1
	111 NotImplemented "Instruction CMP not yet implemented."
	112 Move W9, W9
	113 NotImplemented "Instruction LDRSW not yet implemented."
	114 Subtract X9, X9, 1
	115 Add W11, W10, 1
	116 Move [X8], W11
	117 Move X11, [X20+8]
	118 Move X12, [X19]
	119 Move [X12], X11
	120 Move X8, 0x6A0000
	121 Move X8, [X8+544]
	122 Add X0, X31, 0
	123 Move X1, [X8]
	124 Call NativeArray`1<int3>.Dispose, X0
	125 Move W24, 1
	126 Move W24, W31
	127 Add X0, X31, 16
	128 Call Tessellator.Cleanup, X0
	129 Move W0, W24
	130 Move X20, [X31+272]
	131 Move X19, [X31+280]
	132 Move X22, [X31+256]
	133 Move X21, [X31+264]
	134 Move X24, [X31+240]
	135 Move X23, [X31+248]
	136 Move X26, [X31+224]
	137 Move X25, [X31+232]
	138 Move X30, [X31+208]
	139 Move X27, [X31+216]
	140 Move X29, [X31+192]
	141 Add X31, X31, 288
	142 Return X0

Method: System.Void Cleanup()

Disassembly:
	0x03ABCA8C FMUL S0, S0, S9
	0x03ABCA90 MOVZ W10, 0x1
	0x03ABCA94 STR W31, [X31 + 0x34]
	0x03ABCA98 STR W31, [X31 + 0x7C]
	0x03ABCA9C STR W31, [X31 + 0x15C]
	0x03ABCAA0 STR W31, [X31 + 0x54]
	0x03ABCAA4 MOV W9, W31
	0x03ABCAA8 ADD X23, X19, 0x368
	0x03ABCAAC MOVZ W28, 0x178
	0x03ABCAB0 STR S5, [X31 + 0x58]
	0x03ABCAB4 STR S6, [X31 + 0x20]
	0x03ABCAB8 STR S2, [X31 + 0xBC]
	0x03ABCABC STR S0, [X31 + 0xE0]
	0x03ABCAC0 STR S1, [X31 + 0xA0]
	0x03ABCAC4 STR S1, [X31 + 0xE8]
	0x03ABCAC8 STP W11, W10, [X31 + 0x6C]
	0x03ABCACC STR X26, [X31 + 0x160]
	0x03ABCAD0 LDR W10, [X8 + 0x18]
	0x03ABCAD4 CMP W9, W10
	0x03ABCAD8 B.GE 0x3AC04B0
	0x03ABCADC B.CS 0x3AC3264
	0x03ABCAE0 MOVZ W10, 0xC
	0x03ABCAE4 SMADDL X8, X9, X10, X8
	0x03ABCAE8 LDR W8, [X8 + 0x20]
	0x03ABCAEC CBZ W8, 0x3AC04B0
	0x03ABCAF0 LDR W9, [X31 + 0x15C]
	0x03ABCAF4 STR W8, [X31 + 0x106C]
	0x03ABCAF8 CMP W9, 0x6
	0x03ABCAFC B.LT 0x3ABCB90
	0x03ABCB00 ADD X0, X31, 0x1000
	0x03ABCB04 ADD X0, X0, 0x6C
	0x03ABCB08 MOV X1, X31
	0x03ABCB0C BL 0x337B6E0
	0x03ABCB10 MOV X25, X0
	0x03ABCB14 ADD X0, X31, 0x1000
	0x03ABCB18 ADD X0, X0, 0x38
	0x03ABCB1C MOV X1, X31
	0x03ABCB20 BL 0x337B6E0
	0x03ABCB24 ADRP X8, 0x69C000
	0x03ABCB28 LDR X8, [X8 + 0x400]
	0x03ABCB2C ADRP X9, 0x69C000
	0x03ABCB30 MOV X3, X0
	0x03ABCB34 MOV X1, X25
	0x03ABCB38 LDR X8, [X8]
	0x03ABCB3C LDR X9, [X9 + 0x410]
	0x03ABCB40 MOV X4, X31
	0x03ABCB44 MOV X0, X8
	0x03ABCB48 LDR X2, [X9]
	0x03ABCB4C BL 0x32277C4
	0x03ABCB50 ADRP X8, 0x637000
	0x03ABCB54 LDR X8, [X8 + 0xA28]
	0x03ABCB58 MOV X25, X0
	0x03ABCB5C LDR X8, [X8]
	0x03ABCB60 LDR W9, [X8 + 0xE0]
	0x03ABCB64 CBNZ W9, 0x3ABCB70
	0x03ABCB68 MOV X0, X8
	0x03ABCB6C BL 0x1C16DFC
	0x03ABCB70 MOV X0, X25
	0x03ABCB74 MOV X1, X31
	0x03ABCB78 BL 0x3C0649C
	0x03ABCB7C LDR W9, [X26]
	0x03ABCB80 LDR W8, [X31 + 0x106C]
	0x03ABCB84 STR W9, [X31 + 0x1058]
	0x03ABCB88 MOVZ W9, 0x3
	0x03ABCB8C STR W9, [X31 + 0x105C]
	0x03ABCB90 LDRB W9, [X19 + 0x302]
	0x03ABCB94 CBZ W9, 0x3ABCBE4
	0x03ABCB98 CMP W8, 0x3C
	0x03ABCB9C B.NE 0x3ABCBE4
	0x03ABCBA0 MOVZ W8, 0x1
	0x03ABCBA4 STRB W8, [X19 + 0x431]
	0x03ABCBA8 STR W31, [X19 + 0x644]
	0x03ABCBAC LDR W8, [X31 + 0x1038]
	0x03ABCBB0 LDR X1, [X19 + 0x478]
	0x03ABCBB4 ADD X3, X31, 0x1000
	0x03ABCBB8 ADD X3, X3, 0x1C
	0x03ABCBBC ADD W2, W8, 0x1
	0x03ABCBC0 MOV X0, X19
	0x03ABCBC4 MOV X4, X31
	0x03ABCBC8 BL 0x3AFFFE4
	0x03ABCBCC TBZ X0, 0x0, 0x3ABCC20
	0x03ABCBD0 LDR W8, [X31 + 0x101C]
	0x03ABCBD4 STR W8, [X31 + 0x1038]
	0x03ABCBD8 LDR W8, [X19 + 0x644]
	0x03ABCBDC CBNZ W8, 0x3ABCC20
	0x03ABCBE0 B 0x3ABCD70
	0x03ABCBE4 LDR X8, [X23]
	0x03ABCBE8 CBZ X8, 0x3AC3158
	0x03ABCBEC LDR X8, [X8 + 0x38]
	0x03ABCBF0 CBZ X8, 0x3AC3158

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x927000
	005 Move W8, [X20+1185]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {37}
	011 Move X0, 0x69D000
	012 Move X0, [X0+544]
	013 Call 0x1C17CF4
	014 Move X0, 0x662000
	015 Move X0, [X0+328]
	016 Call 0x1C17CF4
	017 Move X0, 0x69D000
	018 Move X0, [X0+752]
	019 Call 0x1C17CF4
	020 Move X0, 0x699000
	021 Move X0, [X0+2488]
	022 Call 0x1C17CF4
	023 Move X0, 0x69D000
	024 Move X0, [X0+760]
	025 Call 0x1C17CF4
	026 Move X0, 0x662000
	027 Move X0, [X0+360]
	028 Call 0x1C17CF4
	029 Move X0, 0x69D000
	030 Move X0, [X0+768]
	031 Call 0x1C17CF4
	032 Move X0, 0x69D000
	033 Move X0, [X0+776]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X20+1185], W8
	037 Move X8, [X19]
	038 Compare X8, 0
	039 JumpIfEqual {45}
	040 Move X8, 0x699000
	041 Move X8, [X8+2488]
	042 Move X0, X19
	043 Move X1, [X8]
	044 Call NativeArray`1<int2>.Dispose, X0
	045 Move X0, X19
	046 Add X0, X0, 16
	047 Move X8, [X0]
	048 Compare X8, 0
	049 JumpIfEqual {54}
	050 Move X8, 0x69D000
	051 Move X8, [X8+752]
	052 Move X1, [X8]
	053 Call NativeArray`1<UStar>.Dispose, X0
	054 Move X0, X19
	055 Move X20, 0x662000
	056 Add X0, X0, 88
	057 Move X8, [X0]
	058 Move X20, [X20+328]
	059 Compare X8, 0
	060 JumpIfEqual {63}
	061 Move X1, [X20]
	062 Call NativeArray`1<Int32>.Dispose, X0
	063 Move X0, X19
	064 Add X0, X0, 32
	065 Move X8, [X0]
	066 Compare X8, 0
	067 JumpIfEqual {72}
	068 Move X8, 0x69D000
	069 Move X8, [X8+544]
	070 Move X1, [X8]
	071 Call NativeArray`1<int3>.Dispose, X0
	072 Move X0, X19
	073 Add X0, X0, 56
	074 Move X8, [X0]
	075 Compare X8, 0
	076 JumpIfEqual {79}
	077 Move X1, [X20]
	078 Call NativeArray`1<Int32>.Dispose, X0
	079 Move X0, X19
	080 Add X0, X0, 72
	081 Move X8, [X0]
	082 Compare X8, 0
	083 JumpIfEqual {86}
	084 Move X1, [X20]
	085 Call NativeArray`1<Int32>.Dispose, X0
	086 Move X0, X19
	087 Add X0, X0, 120
	088 Move X8, [X0]
	089 Compare X8, 0
	090 JumpIfEqual {93}
	091 Move X1, [X20]
	092 Call NativeArray`1<Int32>.Dispose, X0
	093 Move X0, X19
	094 Add X0, X0, 136
	095 Move X8, [X0]
	096 Compare X8, 0
	097 JumpIfEqual {100}
	098 Move X1, [X20]
	099 Call NativeArray`1<Int32>.Dispose, X0
	100 Add X19, X19, 152
	101 Move X8, [X19]
	102 Compare X8, 0
	103 JumpIfEqual {111}
	104 Move X1, [X20]
	105 Move X0, X19
	106 Move X20, [X31+16]
	107 Move X19, [X31+24]
	108 Move X30, [X31+32]
	109 Call NativeArray`1<Int32>.Dispose, X0
	110 Return 
	111 Move X20, [X31+16]
	112 Move X19, [X31+24]
	113 Move X30, [X31+32]
	114 Return 

