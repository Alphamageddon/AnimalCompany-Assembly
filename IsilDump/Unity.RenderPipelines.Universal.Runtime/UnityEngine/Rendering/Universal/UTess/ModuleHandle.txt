Type: UnityEngine.Rendering.Universal.UTess.ModuleHandle

Method: System.Void Copy(Unity.Collections.NativeArray`1<T> src, System.Int32 srcIndex, Unity.Collections.NativeArray`1<T> dst, System.Int32 dstIndex, System.Int32 length)

Disassembly:
	0x0221F2E4 BL 0x1C5C6E0
	0x0221F2E8 LDR X8, [X19 + 0x38]
	0x0221F2EC LDR X0, [X8 + 0x18]
	0x0221F2F0 LDR X8, [X8 + 0x8]
	0x0221F2F4 LDRB W9, [X0 + 0x135]
	0x0221F2F8 LDR W23, [X8 + 0xFC]
	0x0221F2FC TBNZ X9, 0x0, 0x221F304
	0x0221F300 BL 0x1C5C684
	0x0221F304 LDR W8, [X0 + 0xFC]
	0x0221F308 ADD X9, X31, 0x0
	0x0221F30C ADD W8, W8, 0x10
	0x0221F310 ADD X8, X8, 0xF
	0x0221F314 AND X8, X8, 0x1FFFFFFFF
	0x0221F318 SUB X24, X9, X8
	0x0221F31C ADD X31, X24, 0x0
	0x0221F320 ADD X9, X23, 0xF
	0x0221F324 ADD X8, X31, 0x0
	0x0221F328 AND X9, X9, 0x1FFFFFFFF
	0x0221F32C SUB X25, X8, X9
	0x0221F330 ADD X31, X25, 0x0
	0x0221F334 ADD X8, X31, 0x0
	0x0221F338 SUB X26, X8, X9
	0x0221F33C ADD X31, X26, 0x0
	0x0221F340 ADD X8, X31, 0x0
	0x0221F344 SUB X27, X8, X9
	0x0221F348 ADD X31, X27, 0x0
	0x0221F34C MOV X0, X27
	0x0221F350 MOV W1, W31
	0x0221F354 MOV X2, X23
	0x0221F358 BL 0x3EB1B10
	0x0221F35C LDUR W8, [X29 - 0x3C]
	0x0221F360 LDUR W9, [X29 - 0x34]

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X8, [X7+56]
	011 Move W19, W6
	012 Move W20, W5
	013 Move X21, X4
	014 Move X22, X3
	015 Move W23, W2
	016 Move X24, X1
	017 Move X26, X0
	018 Compare X8, 0
	019 JumpIfNotEqual {24}
	020 Move X0, X7
	021 Move X25, X7
	022 Call 0x1C5D6E0
	023 Move X8, [X25+56]
	024 Move X7, [X8+8]
	025 Move X0, X26
	026 Move X1, X24
	027 Move W2, W23
	028 Move X3, X22
	029 Move X4, X21
	030 Move W5, W20
	031 Move W6, W19
	032 Move X20, [X31+64]
	033 Move X19, [X31+72]
	034 Move X22, [X31+48]
	035 Move X21, [X31+56]
	036 Move X24, [X31+32]
	037 Move X23, [X31+40]
	038 Move X26, [X31+16]
	039 Move X25, [X31+24]
	040 Move X30, [X31+80]
	041 Call NativeArray`1<Int32>.Copy, X0, X1, X2, X3, X4
	042 Return 

Method: System.Void Copy(Unity.Collections.NativeArray`1<T> src, Unity.Collections.NativeArray`1<T> dst, System.Int32 length)

Disassembly:
	0x0221EFD4 LDR X1, [X8 + 0x38]
	0x0221EFD8 SUB X4, X29, 0x28
	0x0221EFDC SUB X5, X29, 0xC
	0x0221EFE0 LDR W8, [X9 + 0x28]
	0x0221EFE4 LDUR X9, [X29 - 0x40]
	0x0221EFE8 MOV X2, X23
	0x0221EFEC STP X24, X25, [X29 - 0x28]
	0x0221EFF0 CMP W8, 0x0
	0x0221EFF4 SUB X8, X29, 0x40
	0x0221EFF8 CSEL X3, X9, X8, LT
	0x0221EFFC STUR X21, [X29 - 0x18]
	0x0221F000 BL 0x1C17728
	0x0221F004 LDURB W8, [X29 - 0xC]
	0x0221F008 CBNZ W8, 0x221F01C
	0x0221F00C CMP W26, W28
	0x0221F010 ADD W27, W26, 0x1
	0x0221F014 B.LT 0x221EF70
	0x0221F018 B 0x221F030
	0x0221F01C CMP W27, W26
	0x0221F020 SUB W28, W26, 0x1
	0x0221F024 STUR W26, [X29 - 0x54]
	0x0221F028 B.LT 0x221EF70
	0x0221F02C B 0x221F034
	0x0221F030 LDUR W26, [X29 - 0x54]
	0x0221F034 LDUR X8, [X29 - 0x50]
	0x0221F038 LDR X8, [X8 + 0x28]
	0x0221F03C LDUR X9, [X29 - 0x8]
	0x0221F040 CMP X8, X9
	0x0221F044 B.NE 0x221F06C
	0x0221F048 MOV W0, W26
	0x0221F04C ADD X31, X29, 0x0
	0x0221F050 LDP X20, X19, [X31 + 0x50]
	0x0221F054 LDP X22, X21, [X31 + 0x40]
	0x0221F058 LDP X24, X23, [X31 + 0x30]
	0x0221F05C LDP X26, X25, [X31 + 0x20]
	0x0221F060 LDP X28, X27, [X31 + 0x10]
	0x0221F064 LDP X29, X30, [X31], #0x60
	0x0221F068 RET
	0x0221F06C BL 0x3EB1B20

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X8, [X5+56]
	009 Move X22, X5
	010 Move W19, W4
	011 Move X20, X3
	012 Move X21, X2
	013 Move X23, X1
	014 Move X24, X0
	015 Compare X8, 0
	016 JumpIfNotEqual {25}
	017 Move X0, 0x1EFE000
	018 Move X0, [X0+216]
	019 Call 0x1C17CF4
	020 Move X8, [X22+56]
	021 Compare X8, 0
	022 JumpIfNotEqual {25}
	023 Move X0, X22
	024 Call 0x1C5D6E0
	025 Move X8, 0x1EFE000
	026 Move X8, [X8+216]
	027 Move X0, [X8]
	028 Move W8, [X0+224]
	029 Compare W8, 0
	030 JumpIfNotEqual {32}
	031 Call 0x1C17DFC
	032 Move X8, [X22+56]
	033 Move X0, X24
	034 Move X1, X23
	035 Move X3, X21
	036 Move X7, [X8+8]
	037 Move X4, X20
	038 Move W6, W19
	039 Move X20, [X31+48]
	040 Move X19, [X31+56]
	041 Move X22, [X31+32]
	042 Move X21, [X31+40]
	043 Move X24, [X31+16]
	044 Move X23, [X31+24]
	045 Move W2, W31
	046 Move W5, W31
	047 Move X30, [X31+64]
	048 Call 0x221F2E4, X0, X1, X2, X3, X4
	049 Return 

Method: System.Void InsertionSort(System.Void* array, System.Int32 lo, System.Int32 hi, U comp)

Disassembly:
	0x02220070 B.NE 0x222005C
	0x02220074 MOV X0, X23
	0x02220078 MOV W2, W31
	0x0222007C BL 0x1C5C788
	0x02220080 B 0x2220090
	0x02220084 LDRSW X9, [X10]
	0x02220088 ADD X8, X8, X9, 0x4, LSL
	0x0222008C ADD X0, X8, 0x138
	0x02220090 LDP X8, X1, [X0]
	0x02220094 MOV X0, X23
	0x02220098 BLR X8
	0x0222009C CBZ X26, 0x2220178
	0x022200A0 MOV X0, X26
	0x022200A4 BL 0x1C16F18
	0x022200A8 STR X0, [X31]
	0x022200AC CBZ X21, 0x2220108
	0x022200B0 LDR X8, [X21]
	0x022200B4 LDR X1, [X27]
	0x022200B8 LDRH W9, [X8 + 0x12E]
	0x022200BC CBZ X9, 0x22200E0
	0x022200C0 LDR X10, [X8 + 0xB0]
	0x022200C4 ADD X10, X10, 0x8
	0x022200C8 LDUR X11, [X10 - 0x8]
	0x022200CC CMP X11, X1
	0x022200D0 B.EQ 0x22200F0
	0x022200D4 SUBS X9, X9, 0x1
	0x022200D8 ADD X10, X10, 0x10
	0x022200DC B.NE 0x22200C8
	0x022200E0 MOV X0, X21
	0x022200E4 MOV W2, W31
	0x022200E8 BL 0x1C5C788
	0x022200EC B 0x22200FC
	0x022200F0 LDRSW X9, [X10]
	0x022200F4 ADD X8, X8, X9, 0x4, LSL
	0x022200F8 ADD X0, X8, 0x138
	0x022200FC LDP X8, X1, [X0]
	0x02220100 MOV X0, X21
	0x02220104 BLR X8
	0x02220108 CBZ X24, 0x2220178
	0x0222010C MOV X0, X24
	0x02220110 BL 0x1C16F18
	0x02220114 STR X0, [X31]
	0x02220118 CBZ X24, 0x2220174
	0x0222011C LDR X8, [X24]
	0x02220120 LDR X1, [X27]
	0x02220124 LDRH W9, [X8 + 0x12E]
	0x02220128 CBZ X9, 0x222014C
	0x0222012C LDR X10, [X8 + 0xB0]
	0x02220130 ADD X10, X10, 0x8
	0x02220134 LDUR X11, [X10 - 0x8]
	0x02220138 CMP X11, X1
	0x0222013C B.EQ 0x222015C

ISIL:
	001 Move [X31-80], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move [X31+8], W3
	011 Move X8, [X4+56]
	012 Move X19, X4
	013 Move W22, W2
	014 Move W20, W1
	015 Move X21, X0
	016 Compare X8, 0
	017 JumpIfNotEqual {20}
	018 Move X0, X19
	019 Call 0x1C5D6E0
	020 NotImplemented "Instruction CMP not yet implemented."
	021 Move X23, W20
	022 Move X22, W22
	023 Move X24, X23
	024 Move X8, X24
	025 Add X24, X24, 1
	026 Move V8, [X21]
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Move W25, W8
	029 Move X8, [X19+56]
	030 Move V1, [X21]
	031 Add X0, X31, 8
	032 Move V0, V8
	033 Move X1, [X8+40]
	034 Call XCompare.Compare, X0, V0, V1
	035 Move TEMP, X0
	036 And TEMP, TEMP, -2147483648
	037 Compare TEMP, -2147483648
	038 JumpIfNotEqual {46}
	039 Move X8, W25
	040 Move V0, [X21]
	041 Add W8, W25, 1
	042 Subtract W25, W25, 1
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Move [X21], D0
	045 Move W8, W25
	046 Move W8, W25
	047 Add W8, W8, 1
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Move [X21], D8
	050 Move X20, [X31+64]
	051 Move X19, [X31+72]
	052 Move X22, [X31+48]
	053 Move X21, [X31+56]
	054 Move X24, [X31+32]
	055 Move X23, [X31+40]
	056 Move X30, [X31+16]
	057 Move X25, [X31+24]
	058 Move V8, [X31+80]
	059 Return 

Method: System.Int32 GetLower(Unity.Collections.NativeArray`1<T> values, System.Int32 count, U check, X condition)

Disassembly:
	0x0221FA04 LDR X8, [X20 + 0x38]
	0x0221FA08 LDR X1, [X8 + 0x8]
	0x0221FA0C MOV X0, X19
	0x0221FA10 LDP X20, X19, [X31 + 0x10]
	0x0221FA14 LDR X2, [X1]
	0x0221FA18 LDR X30, [X31], #0x20
	0x0221FA1C BR X2
	0x0221FA20 SUB X31, X31, 0x80
	0x0221FA24 STP D9, D8, [X31 + 0x10]
	0x0221FA28 STP X29, X30, [X31 + 0x20]
	0x0221FA2C STP X28, X27, [X31 + 0x30]
	0x0221FA30 STP X26, X25, [X31 + 0x40]
	0x0221FA34 STP X24, X23, [X31 + 0x50]
	0x0221FA38 STP X22, X21, [X31 + 0x60]
	0x0221FA3C STP X20, X19, [X31 + 0x70]
	0x0221FA40 LDR X8, [X3 + 0x38]
	0x0221FA44 MOV X19, X3
	0x0221FA48 MOV V8.16B, V1.16B
	0x0221FA4C MOV V9.16B, V0.16B
	0x0221FA50 MOV X20, X2
	0x0221FA54 MOV X21, X1
	0x0221FA58 MOV X22, X0
	0x0221FA5C CBNZ X8, 0x221FAAC
	0x0221FA60 ADRP X0, 0x1ED4000
	0x0221FA64 LDR X0, [X0 + 0xE00]
	0x0221FA68 BL 0x1C16CF4
	0x0221FA6C ADRP X0, 0x1EFD000
	0x0221FA70 LDR X0, [X0 + 0xE0]
	0x0221FA74 BL 0x1C16CF4
	0x0221FA78 ADRP X0, 0x1EFD000
	0x0221FA7C LDR X0, [X0 + 0xE8]
	0x0221FA80 BL 0x1C16CF4
	0x0221FA84 ADRP X0, 0x1EFD000
	0x0221FA88 LDR X0, [X0 + 0xF0]
	0x0221FA8C BL 0x1C16CF4
	0x0221FA90 ADRP X0, 0x1EFD000
	0x0221FA94 LDR X0, [X0 + 0xF8]
	0x0221FA98 BL 0x1C16CF4
	0x0221FA9C LDR X8, [X19 + 0x38]
	0x0221FAA0 CBNZ X8, 0x221FAAC
	0x0221FAA4 MOV X0, X19
	0x0221FAA8 BL 0x1C5C6E0
	0x0221FAAC STR X31, [X31 + 0x8]
	0x0221FAB0 CBZ X22, 0x221FAF0
	0x0221FAB4 MOV X0, X22
	0x0221FAB8 MOV X1, X31
	0x0221FABC BL 0x3DEC0CC
	0x0221FAC0 CBZ X0, 0x221FAEC
	0x0221FAC4 MOV W29, W31
	0x0221FAC8 MOV X0, X22
	0x0221FACC LDR X8, [X0 + 0x378]
	0x0221FAD0 ADD X0, X31, 0x8
	0x0221FAD4 MOV X1, X31
	0x0221FAD8 ADD W29, W29, 0x1
	0x0221FADC STR X8, [X31 + 0x8]
	0x0221FAE0 BL 0x3DF88DC
	0x0221FAE4 CBNZ X0, 0x221FACC
	0x0221FAE8 B 0x221FAF4
	0x0221FAEC MOV X22, X31
	0x0221FAF0 MOV W29, W31
	0x0221FAF4 MOV W24, W31
	0x0221FAF8 CBZ X21, 0x221FB1C
	0x0221FAFC MOV X0, X21

ISIL:
	001 Subtract X31, X31, 272
	002 Move [X31+192], X29
	003 Move [X31+200], X30
	004 Move [X31+208], X26
	005 Move [X31+216], X25
	006 Move [X31+224], X24
	007 Move [X31+232], X23
	008 Move [X31+240], X22
	009 Move [X31+248], X21
	010 Move [X31+256], X20
	011 Move [X31+264], X19
	012 Move [X31+184], W4
	013 Move X8, [X5+56]
	014 Move X19, X5
	015 Move X20, X3
	016 Move W22, W2
	017 Move X21, X0
	018 Compare X8, 0
	019 JumpIfNotEqual {22}
	020 Move X0, X19
	021 Call 0x1C5D6E0
	022 Subtract W23, W22, 1
	023 Move W24, W31
	024 Move TEMP, 0
	025 Not TEMP
	026 Move W26, TEMP
	027 Move W25, 72
	028 Add W8, W24, W23
	029 NotImplemented "Instruction SBFM not yet implemented."
	030 NotImplemented "Instruction SMADDL not yet implemented."
	031 Add X0, X31, 104
	032 Move W2, 72
	033 Move [X31+180], W31
	034 Call 0x3EB2AC0
	035 Move V0, [X20]
	036 Move X8, [X20+16]
	037 Add X0, X31, 32
	038 Add X1, X31, 104
	039 Move W2, 72
	040 Move [X31], V0
	041 Move [X31+16], X8
	042 Call 0x3EB2AC0
	043 Move X8, [X19+56]
	044 Add X0, X31, 184
	045 Add X1, X31, 32
	046 Add X2, X31, 0
	047 Move X4, [X8+56]
	048 Add X3, X31, 180
	049 Call TestHullEventLe.Test, X0, X1, X2, X3
	050 Move TEMP, X0
	051 And TEMP, TEMP, 1
	052 Compare TEMP, 1
	053 JumpIfEqual {56}
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Subtract W23, W22, 1
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Add W24, W22, 1
	058 Move W26, W22
	059 Move W22, W26
	060 Move TEMP, 0
	061 Not TEMP
	062 Move W22, TEMP
	063 Move W0, W22
	064 Move X20, [X31+256]
	065 Move X19, [X31+264]
	066 Move X22, [X31+240]
	067 Move X21, [X31+248]
	068 Move X24, [X31+224]
	069 Move X23, [X31+232]
	070 Move X26, [X31+208]
	071 Move X25, [X31+216]
	072 Move X29, [X31+192]
	073 Move X30, [X31+200]
	074 Add X31, X31, 272
	075 Return X0

Method: System.Int32 GetUpper(Unity.Collections.NativeArray`1<T> values, System.Int32 count, U check, X condition)

Disassembly:
	0x0221FDC4 LDR W10, [X23 + 0x1C]
	0x0221FDC8 LDR X8, [X23 + 0x10]
	0x0221FDCC LDR X9, [X25]
	0x0221FDD0 ADD W10, W10, 0x1
	0x0221FDD4 STR W10, [X23 + 0x1C]
	0x0221FDD8 CBZ X8, 0x2220010
	0x0221FDDC LDRSW X10, [X23 + 0x18]
	0x0221FDE0 LDR W11, [X8 + 0x18]
	0x0221FDE4 CMP W10, W11
	0x0221FDE8 B.CS 0x221FE00
	0x0221FDEC ADD W9, W10, 0x1
	0x0221FDF0 ADD X8, X8, X10, 0x3, LSL
	0x0221FDF4 STR W9, [X23 + 0x18]
	0x0221FDF8 STR X21, [X8 + 0x20]
	0x0221FDFC B 0x221FE18
	0x0221FE00 LDR X8, [X9 + 0x20]
	0x0221FE04 MOV X0, X23
	0x0221FE08 MOV X1, X21
	0x0221FE0C LDR X8, [X8 + 0xC0]
	0x0221FE10 LDR X2, [X8 + 0x70]
	0x0221FE14 BL 0x301BF90
	0x0221FE18 CBZ X22, 0x2220010
	0x0221FE1C LDR X8, [X22 + 0x378]
	0x0221FE20 ADD X0, X31, 0x8
	0x0221FE24 MOV X1, X31
	0x0221FE28 STR X8, [X31 + 0x8]
	0x0221FE2C BL 0x3DF88DC
	0x0221FE30 CBZ X21, 0x2220010
	0x0221FE34 LDR X8, [X21 + 0x378]
	0x0221FE38 MOV X22, X0
	0x0221FE3C ADD X0, X31, 0x8
	0x0221FE40 MOV X1, X31
	0x0221FE44 STR X8, [X31 + 0x8]
	0x0221FE48 BL 0x3DF88DC
	0x0221FE4C MOV X21, X0
	0x0221FE50 CMP X22, X0
	0x0221FE54 B.NE 0x221FD14
	0x0221FE58 B 0x221FE98
	0x0221FE5C BL 0x1C16F20
	0x0221FE60 B 0x222002C
	0x0221FE64 BL 0x1C16F20
	0x0221FE68 B 0x2220024
	0x0221FE6C B 0x221FE70
	0x0221FE70 CMP W1, 0x1
	0x0221FE74 STR X0, [X31]
	0x0221FE78 B.NE 0x2220024
	0x0221FE7C LDR X0, [X31]
	0x0221FE80 BL 0x3EB1AD0
	0x0221FE84 LDR X26, [X0]
	0x0221FE88 BL 0x3EB1AE0
	0x0221FE8C CBNZ X24, 0x221FD64
	0x0221FE90 B 0x221FDBC
	0x0221FE94 CBZ X23, 0x2220010
	0x0221FE98 LDR W8, [X23 + 0x18]

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+96], D9
	003 Move [X31+104], D8
	004 Move [X31+112], X30
	005 Move [X31+120], X25
	006 Move [X31+128], X24
	007 Move [X31+136], X23
	008 Move [X31+144], X22
	009 Move [X31+152], X21
	010 Move [X31+160], X20
	011 Move [X31+168], X19
	012 Move [X31+88], W3
	013 Move X8, [X4+56]
	014 Move X19, X4
	015 Move V8, V1
	016 Move V9, V0
	017 Move W21, W2
	018 Move X20, X0
	019 Compare X8, 0
	020 JumpIfNotEqual {23}
	021 Move X0, X19
	022 Call 0x1C5D6E0
	023 Subtract W23, W21, 1
	024 Move W24, W31
	025 Move W25, 72
	026 Add W8, W24, W23
	027 NotImplemented "Instruction SBFM not yet implemented."
	028 NotImplemented "Instruction SMADDL not yet implemented."
	029 Add X0, X31, 8
	030 Move W2, 72
	031 Move [X31+84], W31
	032 Call 0x3EB2B30
	033 Move X8, [X19+56]
	034 Add X0, X31, 88
	035 Add X1, X31, 8
	036 Add X2, X31, 84
	037 Move X3, [X8+56]
	038 Move V0, V9
	039 Move V1, V8
	040 Call TestHullPointU.Test, X0, X1, X2, X3
	041 Move TEMP, X0
	042 And TEMP, TEMP, 1
	043 Compare TEMP, 1
	044 JumpIfEqual {47}
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Add W24, W22, 1
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Subtract W23, W22, 1
	049 Move W21, W22
	050 Move W22, W21
	051 Move W0, W22
	052 Move X20, [X31+160]
	053 Move X19, [X31+168]
	054 Move X22, [X31+144]
	055 Move X21, [X31+152]
	056 Move X24, [X31+128]
	057 Move X23, [X31+136]
	058 Move X30, [X31+112]
	059 Move X25, [X31+120]
	060 Move D9, [X31+96]
	061 Move D8, [X31+104]
	062 Add X31, X31, 176
	063 Return X0

Method: System.Int32 GetEqual(Unity.Collections.NativeArray`1<T> values, System.Int32 count, U check, X condition)

Disassembly:
	0x0221F568 MOV X20, X3
	0x0221F56C MOV W23, W2
	0x0221F570 MOV W21, W1
	0x0221F574 MOV X22, X0
	0x0221F578 CBNZ X8, 0x221F584
	0x0221F57C MOV X0, X19
	0x0221F580 BL 0x1C5C6E0
	0x0221F584 CMP W21, W23
	0x0221F588 B.GE 0x221F604
	0x0221F58C SXTW X24, W21
	0x0221F590 SXTW X25, W23
	0x0221F594 MOV X26, X24
	0x0221F598 MOV X8, X26
	0x0221F59C ADD X26, X26, 0x1
	0x0221F5A0 LDR X23, [X22, X26, LSL #3]
	0x0221F5A4 CMP X8, X24
	0x0221F5A8 MOV W27, W8
	0x0221F5AC B.LT 0x221F5F4
	0x0221F5B0 LDR X8, [X19 + 0x38]
	0x0221F5B4 LDR X2, [X22, W27, SXTW]
	0x0221F5B8 MOV X0, X20
	0x0221F5BC MOV X1, X23
	0x0221F5C0 LDR X3, [X8 + 0x28]
	0x0221F5C4 BL 0x3ABBE8C
	0x0221F5C8 TBZ X0, 0x1F, 0x221F5F0
	0x0221F5CC SXTW X8, W27
	0x0221F5D0 LDR X8, [X22, X8, LSL #3]
	0x0221F5D4 ADD W9, W27, 0x1
	0x0221F5D8 SUB W27, W27, 0x1
	0x0221F5DC CMP W27, W21
	0x0221F5E0 STR X8, [X22, W9, SXTW]
	0x0221F5E4 MOV W8, W27
	0x0221F5E8 B.GE 0x221F5B0
	0x0221F5EC B 0x221F5F4
	0x0221F5F0 MOV W8, W27
	0x0221F5F4 ADD W8, W8, 0x1
	0x0221F5F8 CMP X26, X25
	0x0221F5FC STR X23, [X22, W8, SXTW]
	0x0221F600 B.NE 0x221F598
	0x0221F604 LDP X20, X19, [X31 + 0x40]
	0x0221F608 LDP X22, X21, [X31 + 0x30]
	0x0221F60C LDP X24, X23, [X31 + 0x20]
	0x0221F610 LDP X26, X25, [X31 + 0x10]
	0x0221F614 LDP X30, X27, [X31], #0x50
	0x0221F618 RET
	0x0221F61C STR X30, [X31 - 0x50]!
	0x0221F620 STP X26, X25, [X31 + 0x10]
	0x0221F624 STP X24, X23, [X31 + 0x20]
	0x0221F628 STP X22, X21, [X31 + 0x30]
	0x0221F62C STP X20, X19, [X31 + 0x40]
	0x0221F630 STRB W3, [X31 + 0x8]
	0x0221F634 LDR X8, [X4 + 0x38]
	0x0221F638 MOV X19, X4
	0x0221F63C MOV W22, W2
	0x0221F640 MOV W20, W1
	0x0221F644 MOV X21, X0
	0x0221F648 CBNZ X8, 0x221F654
	0x0221F64C MOV X0, X19
	0x0221F650 BL 0x1C5C6E0
	0x0221F654 CMP W20, W22
	0x0221F658 B.GE 0x221F6D4
	0x0221F65C SXTW X23, W20
	0x0221F660 SXTW X24, W22
	0x0221F664 MOV X25, X23

ISIL:
	001 Subtract X31, X31, 256
	002 Move [X31+176], X29
	003 Move [X31+192], X30
	004 Move [X31+200], X25
	005 Move [X31+208], X24
	006 Move [X31+216], X23
	007 Move [X31+224], X22
	008 Move [X31+232], X21
	009 Move [X31+240], X20
	010 Move [X31+248], X19
	011 Move [X31+184], W4
	012 Move X8, [X5+56]
	013 Move X19, X5
	014 Move X20, X3
	015 Move W22, W2
	016 Move X21, X0
	017 Compare X8, 0
	018 JumpIfNotEqual {21}
	019 Move X0, X19
	020 Call 0x1C5D6E0
	021 Subtract W22, W22, 1
	022 Move W24, W31
	023 Move W23, 72
	024 Add W8, W24, W22
	025 NotImplemented "Instruction SBFM not yet implemented."
	026 NotImplemented "Instruction SMADDL not yet implemented."
	027 Add X0, X31, 104
	028 Move W2, 72
	029 Move [X31+188], W31
	030 Call 0x3EB2AC0
	031 Move V0, [X20]
	032 Move X8, [X20+16]
	033 Add X0, X31, 32
	034 Add X1, X31, 104
	035 Move W2, 72
	036 Move [X31], V0
	037 Move [X31+16], X8
	038 Call 0x3EB2AC0
	039 Move X8, [X19+56]
	040 Add X0, X31, 184
	041 Add X1, X31, 32
	042 Add X2, X31, 0
	043 Move X4, [X8+56]
	044 Add X3, X31, 188
	045 Call TestHullEventE.Test, X0, X1, X2, X3
	046 Move V0, [X31+188]
	047 NotImplemented "Instruction FCMP not yet implemented."
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Add W24, W25, 1
	050 Subtract W22, W25, 1
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Move TEMP, 0
	053 Not TEMP
	054 Move W0, TEMP
	055 Move TEMP, 0
	056 Not TEMP
	057 Move W0, TEMP
	058 Move W0, W25
	059 Move X20, [X31+240]
	060 Move X19, [X31+248]
	061 Move X22, [X31+224]
	062 Move X21, [X31+232]
	063 Move X24, [X31+208]
	064 Move X23, [X31+216]
	065 Move X30, [X31+192]
	066 Move X25, [X31+200]
	067 Move X29, [X31+176]
	068 Add X31, X31, 256
	069 Return X0

Method: System.Single OrientFast(Unity.Mathematics.float2 a, Unity.Mathematics.float2 b, Unity.Mathematics.float2 c)

Disassembly:
	0x03A24478 LDRSW X8, [X28]
	0x03A2447C CSEL W10, W24, W26, LT
	0x03A24480 CSEL W11, W24, W26, GT
	0x03A24484 CMP W26, W21
	0x03A24488 ADD W9, W8, 0x1
	0x03A2448C STR W9, [X28]
	0x03A24490 LDR X9, [X29]
	0x03A24494 LDR W12, [X19]
	0x03A24498 ADD X8, X9, X8, 0x4, LSL
	0x03A2449C STP W10, W11, [X8]
	0x03A244A0 STP W12, W13, [X8 + 0x8]
	0x03A244A4 LDRSW X8, [X28]
	0x03A244A8 CSEL W10, W26, W21, LT
	0x03A244AC CSEL W11, W26, W21, GT

ISIL:
	001 Subtract S1, S3, S1
	002 Subtract S4, S4, S2
	003 Subtract S0, S2, S0
	004 Subtract S2, S5, S3
	005 Move W8, 0x25000000
	006 Multiply S1, S1, S4
	007 Multiply S0, S0, S2
	008 Move S2, W8
	009 Subtract S3, S1, S0
	010 NotImplemented "Instruction FABD not yet implemented."
	011 NotImplemented "Instruction FCMP not yet implemented."
	012 Move S0, W31
	013 NotImplemented "Instruction FCSEL not yet implemented."
	014 Return V0

Method: System.Double OrientFastDouble(Unity.Mathematics.double2 a, Unity.Mathematics.double2 b, Unity.Mathematics.double2 c)

Disassembly:
	0x03A2473C LDP X22, X21, [X31 + 0x40]
	0x03A24740 LDP X24, X23, [X31 + 0x30]
	0x03A24744 LDP X26, X25, [X31 + 0x20]
	0x03A24748 LDP X28, X27, [X31 + 0x10]
	0x03A2474C LDP X29, X30, [X31], #0x60
	0x03A24750 B 0x221E110
	0x03A24754 SUB X31, X31, 0x90
	0x03A24758 STP X29, X30, [X31 + 0x30]
	0x03A2475C STP X28, X27, [X31 + 0x40]
	0x03A24760 STP X26, X25, [X31 + 0x50]
	0x03A24764 STP X24, X23, [X31 + 0x60]
	0x03A24768 STP X22, X21, [X31 + 0x70]
	0x03A2476C STP X20, X19, [X31 + 0x80]
	0x03A24770 LDR X10, [X31 + 0xA8]

ISIL:
	001 Subtract D1, D3, D1
	002 Subtract D4, D4, D2
	003 Subtract D0, D2, D0
	004 Subtract D2, D5, D3
	005 Move X8, 0x3CA00000
	006 Multiply D1, D1, D4
	007 Multiply D0, D0, D2
	008 Move D2, X8
	009 Subtract D3, D1, D0
	010 NotImplemented "Instruction FABD not yet implemented."
	011 NotImplemented "Instruction FCMP not yet implemented."
	012 Move D0, X31
	013 NotImplemented "Instruction FCSEL not yet implemented."
	014 Return V0

Method: UnityEngine.Rendering.Universal.UTess.UCircle CircumCircle(UnityEngine.Rendering.Universal.UTess.UTriangle tri)

Disassembly:
	0x03A24774 LDP X24, X8, [X31 + 0x98]
	0x03A24778 STP X5, X6, [X31 + 0x10]
	0x03A2477C ADRP X26, 0x9BE000
	0x03A24780 LDP X20, X23, [X31 + 0xB8]
	0x03A24784 STP X8, X10, [X31 + 0x20]
	0x03A24788 ADRP X10, 0x6F8000
	0x03A2478C LDR W22, [X31 + 0xB0]
	0x03A24790 LDRB W8, [X26 + 0x1D]
	0x03A24794 LDR X21, [X31 + 0x90]
	0x03A24798 LDR X10, [X10 + 0xD8]
	0x03A2479C MOV W19, W7
	0x03A247A0 MOV X29, X4
	0x03A247A4 MOV X28, X3
	0x03A247A8 MOV W25, W2
	0x03A247AC MOV X9, X0
	0x03A247B0 TBNZ X8, 0x0, 0x3A24804
	0x03A247B4 ADRP X0, 0x730000
	0x03A247B8 LDR X0, [X0 + 0x9B0]
	0x03A247BC STR X9, [X31 + 0x8]
	0x03A247C0 MOV X27, X1
	0x03A247C4 BL 0x1C16CF4
	0x03A247C8 ADRP X0, 0x730000
	0x03A247CC LDR X0, [X0 + 0x9A0]
	0x03A247D0 BL 0x1C16CF4
	0x03A247D4 ADRP X0, 0x730000
	0x03A247D8 LDR X0, [X0 + 0x9A8]
	0x03A247DC BL 0x1C16CF4
	0x03A247E0 ADRP X0, 0x6F8000
	0x03A247E4 LDR X0, [X0 + 0xD8]
	0x03A247E8 BL 0x1C16CF4
	0x03A247EC ADRP X10, 0x6F8000
	0x03A247F0 LDR X10, [X10 + 0xD8]
	0x03A247F4 LDR X9, [X31 + 0x8]
	0x03A247F8 MOV X1, X27
	0x03A247FC MOVZ W8, 0x1
	0x03A24800 STRB W8, [X26 + 0x1D]
	0x03A24804 STR W25, [X29]
	0x03A24808 STR W19, [X24]
	0x03A2480C STR W22, [X23]
	0x03A24810 LDR X0, [X10]
	0x03A24814 ADRP X26, 0x730000
	0x03A24818 ADRP X24, 0x730000
	0x03A2481C ADRP X23, 0x730000
	0x03A24820 LDR W8, [X0 + 0xE0]
	0x03A24824 LDP X29, X28, [X28]
	0x03A24828 LDR X26, [X26 + 0x9A8]
	0x03A2482C LDR X24, [X24 + 0x9B0]
	0x03A24830 LDR X23, [X23 + 0x9A0]
	0x03A24834 CBNZ W8, 0x3A24854
	0x03A24838 MOV X23, X9
	0x03A2483C MOV X27, X1
	0x03A24840 BL 0x1C16DFC
	0x03A24844 MOV X9, X23
	0x03A24848 ADRP X23, 0x730000
	0x03A2484C LDR X23, [X23 + 0x9A0]
	0x03A24850 MOV X1, X27
	0x03A24854 LDR X5, [X26]
	0x03A24858 MOV X0, X9
	0x03A2485C MOV X2, X29
	0x03A24860 MOV X3, X28
	0x03A24864 MOV W4, W25
	0x03A24868 BL 0x221E1AC

ISIL:
	001 Move [X31-48], D11
	002 Move [X31-40], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X30
	006 Move [X31+40], X19
	007 Move S10, [X0]
	008 Move S11, [X0+4]
	009 Move S0, [X0+8]
	010 Move S1, [X0+12]
	011 Move S2, [X0+16]
	012 Move S3, [X0+20]
	013 Move X19, 0x9BE000
	014 Multiply S4, S10, S10
	015 Multiply S5, S0, S0
	016 Multiply S6, S2, S2
	017 Multiply S16, S1, S1
	018 Multiply S17, S3, S3
	019 Subtract S5, S5, S4
	020 Subtract S4, S6, S4
	021 Multiply S7, S11, S11
	022 Subtract S0, S0, S10
	023 Subtract S3, S3, S11
	024 Subtract S18, S1, S11
	025 Subtract S19, S2, S10
	026 Add S5, S5, S16
	027 Add S4, S4, S17
	028 Move W8, [X19+1413]
	029 Subtract S1, S11, S1
	030 Subtract S2, S10, S2
	031 Multiply S20, S0, S3
	032 Multiply S18, S19, S18
	033 Subtract S5, S5, S7
	034 Subtract S4, S4, S7
	035 Subtract S6, S20, S18
	036 Multiply S3, S3, S5
	037 Multiply S1, S1, S4
	038 Multiply S2, S2, S5
	039 Multiply S0, S0, S4
	040 Add S6, S6, S6
	041 Add S1, S3, S1
	042 Add S0, S2, S0
	043 NotImplemented "Instruction FDIV not yet implemented."
	044 NotImplemented "Instruction FDIV not yet implemented."
	045 Compare W8, 0
	046 JumpIfNotEqual {52}
	047 Move X0, 0x6D0000
	048 Move X0, [X0+1448]
	049 Call 0x1C17CF4
	050 Move W8, 1
	051 Move [X19+1413], W8
	052 Move X8, 0x6D0000
	053 Move X8, [X8+1448]
	054 Subtract S10, S10, S8
	055 Subtract S11, S11, S9
	056 Move X0, [X8]
	057 Move W8, [X0+224]
	058 Compare W8, 0
	059 JumpIfNotEqual {61}
	060 Call 0x1C17DFC
	061 Multiply S0, S10, S10
	062 Multiply S1, S11, S11
	063 Add S0, S0, S1
	064 NotImplemented "Instruction FSQRT not yet implemented."
	065 Move V0, V8
	066 Move V1, V9
	067 Move X30, [X31+32]
	068 Move X19, [X31+40]
	069 Move D9, [X31+16]
	070 Move D8, [X31+24]
	071 Move D11, [X31+48]
	072 Move D10, [X31+56]
	073 Return X0

Method: System.Boolean IsInsideCircle(UnityEngine.Rendering.Universal.UTess.UCircle c, Unity.Mathematics.float2 v)

Disassembly:
	0x03A2486C LDP X2, X3, [X21]
	0x03A24870 LDR X5, [X24]
	0x03A24874 LDP X0, X1, [X31 + 0x10]
	0x03A24878 MOV W4, W19
	0x03A2487C BL 0x221DFD4
	0x03A24880 LDP X2, X3, [X20]
	0x03A24884 LDR X5, [X23]
	0x03A24888 LDP X0, X1, [X31 + 0x20]
	0x03A2488C MOV W4, W22
	0x03A24890 LDP X20, X19, [X31 + 0x80]
	0x03A24894 LDP X22, X21, [X31 + 0x70]
	0x03A24898 LDP X24, X23, [X31 + 0x60]
	0x03A2489C LDP X26, X25, [X31 + 0x50]
	0x03A248A0 LDP X28, X27, [X31 + 0x40]
	0x03A248A4 LDP X29, X30, [X31 + 0x30]
	0x03A248A8 ADD X31, X31, 0x90
	0x03A248AC B 0x221E110
	0x03A248B0 STP X30, X27, [X31 - 0x50]!
	0x03A248B4 STP X26, X25, [X31 + 0x10]
	0x03A248B8 STP X24, X23, [X31 + 0x20]
	0x03A248BC STP X22, X21, [X31 + 0x30]
	0x03A248C0 STP X20, X19, [X31 + 0x40]
	0x03A248C4 ADRP X27, 0x9BE000
	0x03A248C8 ADRP X26, 0x6FA000
	0x03A248CC LDRB W8, [X27 + 0x1E]
	0x03A248D0 LDR X26, [X26 + 0x830]
	0x03A248D4 MOV W23, W6
	0x03A248D8 MOV X20, X5
	0x03A248DC MOV X19, X4
	0x03A248E0 MOV X22, X3
	0x03A248E4 MOV X21, X2
	0x03A248E8 MOV X25, X1
	0x03A248EC MOV X24, X0
	0x03A248F0 TBNZ X8, 0x0, 0x3A24908
	0x03A248F4 ADRP X0, 0x6FA000
	0x03A248F8 LDR X0, [X0 + 0x830]

ISIL:
	001 Move [X31-64], D12
	002 Move [X31+16], D11
	003 Move [X31+24], D10
	004 Move [X31+32], D9
	005 Move [X31+40], D8
	006 Move [X31+48], X30
	007 Move [X31+56], X19
	008 Move X19, 0x9BE000
	009 Move W8, [X19+1413]
	010 Move V9, V4
	011 Move V10, V3
	012 Move V8, V2
	013 Move V11, V1
	014 Move V12, V0
	015 Compare W8, 0
	016 JumpIfNotEqual {22}
	017 Move X0, 0x6D0000
	018 Move X0, [X0+1448]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X19+1413], W8
	022 Move X8, 0x6D0000
	023 Move X8, [X8+1448]
	024 Subtract S10, S12, S10
	025 Subtract S9, S11, S9
	026 Move X0, [X8]
	027 Move W8, [X0+224]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Multiply S0, S10, S10
	032 Multiply S1, S9, S9
	033 Add S0, S0, S1
	034 NotImplemented "Instruction FSQRT not yet implemented."
	035 NotImplemented "Instruction FCMP not yet implemented."
	036 Move X30, [X31+48]
	037 Move X19, [X31+56]
	038 Move D9, [X31+32]
	039 Move D8, [X31+40]
	040 Move D11, [X31+16]
	041 Move D10, [X31+24]
	042 NotImplemented "Instruction CSET not yet implemented."
	043 Move V12, [X31+64]
	044 Return X0

Method: System.Single TriangleArea(Unity.Mathematics.float2 va, Unity.Mathematics.float2 vb, Unity.Mathematics.float2 vc)

Disassembly:
	0x03A248FC BL 0x1C16CF4
	0x03A24900 MOVZ W8, 0x1
	0x03A24904 STRB W8, [X27 + 0x1E]
	0x03A24908 LDR X8, [X26]
	0x03A2490C CMP W25, 0x1
	0x03A24910 LDR X8, [X8 + 0xB8]
	0x03A24914 LDP S0, S2, [X8]
	0x03A24918 MOVZ W8, 0x7F800000
	0x03A2491C B.LT 0x3A2499C
	0x03A24920 FMOV S1, W8

ISIL:
	001 Subtract S2, S0, S2
	002 Subtract S3, S1, S3
	003 Subtract S0, S0, S4
	004 Subtract S1, S1, S5
	005 Multiply S1, S2, S1
	006 Multiply S0, S3, S0
	007 NotImplemented "Instruction FABD not yet implemented."
	008 Move S1, 0.5
	009 Multiply S0, S0, S1
	010 Return V0

Method: System.Single Sign(Unity.Mathematics.float2 p1, Unity.Mathematics.float2 p2, Unity.Mathematics.float2 p3)

Disassembly:
	0x03A24924 AND X9, X25, 0x0
	0x03A24928 ADD X10, X24, 0x4
	0x03A2492C MOV V3.16B, V1.16B
	0x03A24930 LDP S4, S5, [X10 - 0x4]
	0x03A24934 FMOV W11, S3
	0x03A24938 AND W11, W11, 0x7FFFFFFF
	0x03A2493C ADD X10, X10, 0x8
	0x03A24940 FCMP S4, S3

ISIL:
	001 Subtract S0, S0, S4
	002 Subtract S3, S3, S5
	003 Subtract S2, S2, S4
	004 Subtract S1, S1, S5
	005 Multiply S0, S0, S3
	006 Multiply S1, S2, S1
	007 Subtract S0, S0, S1
	008 Return V0

Method: System.Boolean IsInsideTriangle(Unity.Mathematics.float2 pt, Unity.Mathematics.float2 v1, Unity.Mathematics.float2 v2, Unity.Mathematics.float2 v3)

Disassembly:
	0x03A24944 CCMP W11, W8, 0x2, PL
	0x03A24948 FMOV W11, S1
	0x03A2494C AND W11, W11, 0x7FFFFFFF
	0x03A24950 FCSEL S3, S4, S3, HI
	0x03A24954 FCMP S5, S1
	0x03A24958 CCMP W11, W8, 0x2, PL
	0x03A2495C FMOV W11, S0
	0x03A24960 AND W11, W11, 0x7FFFFFFF
	0x03A24964 FCSEL S1, S5, S1, HI
	0x03A24968 FCMP S4, S0
	0x03A2496C CCMP W11, W8, 0x2, LE
	0x03A24970 FMOV W11, S2
	0x03A24974 AND W11, W11, 0x7FFFFFFF
	0x03A24978 FCSEL S0, S4, S0, HI
	0x03A2497C FCMP S5, S2
	0x03A24980 CCMP W11, W8, 0x2, LE
	0x03A24984 FCSEL S2, S5, S2, HI
	0x03A24988 SUBS X9, X9, 0x1
	0x03A2498C B.NE 0x3A24930
	0x03A24990 TBZ X23, 0x0, 0x3A249A8
	0x03A24994 MOV W8, W31
	0x03A24998 B 0x3A249AC
	0x03A2499C FMOV S3, W8
	0x03A249A0 MOV V1.16B, V3.16B
	0x03A249A4 TBNZ X23, 0x0, 0x3A24994
	0x03A249A8 LDR W8, [X22]
	0x03A249AC ADD W9, W8, 0x1
	0x03A249B0 STR W9, [X22]
	0x03A249B4 LDR X10, [X21]
	0x03A249B8 ADRP X11, 0xFFFFFFFFFD0C6000
	0x03A249BC LDR V6, [X11 + 0x2F0]
	0x03A249C0 FSUB S4, S2, S1
	0x03A249C4 ADD X10, X10, W8, 0x3, SXTW
	0x03A249C8 STP S3, S1, [X10]
	0x03A249CC LDRSW X10, [X22]
	0x03A249D0 FMOV S5, 0.5
	0x03A249D4 FMUL S4, S4, S5
	0x03A249D8 FADD S4, S1, S4
	0x03A249DC ADD W11, W10, 0x1
	0x03A249E0 STR W11, [X22]
	0x03A249E4 LDR X11, [X21]
	0x03A249E8 FADD S7, S3, S6
	0x03A249EC MOVZ W12, 0x8
	0x03A249F0 LDP X24, X23, [X31 + 0x20]
	0x03A249F4 ADD X10, X11, X10, 0x3, LSL
	0x03A249F8 STP S7, S4, [X10]
	0x03A249FC LDRSW X10, [X22]
	0x03A24A00 FSUB S7, S0, S3
	0x03A24A04 FMUL S5, S7, S5
	0x03A24A08 LDP X26, X25, [X31 + 0x10]
	0x03A24A0C ADD W11, W10, 0x1
	0x03A24A10 STR W11, [X22]
	0x03A24A14 LDR X11, [X21]
	0x03A24A18 ADD X10, X11, X10, 0x3, LSL
	0x03A24A1C STP S3, S2, [X10]
	0x03A24A20 LDRSW X10, [X22]
	0x03A24A24 ADRP X11, 0xFFFFFFFFFD0C5000
	0x03A24A28 LDR V16, [X11 + 0xF28]
	0x03A24A2C FADD S3, S3, S5
	0x03A24A30 ADD W11, W10, 0x1
	0x03A24A34 STR W11, [X22]
	0x03A24A38 LDR X11, [X21]
	0x03A24A3C FADD S5, S2, S16
	0x03A24A40 ADD X10, X11, X10, 0x3, LSL
	0x03A24A44 STP S3, S5, [X10]
	0x03A24A48 LDRSW X10, [X22]
	0x03A24A4C ADD W11, W10, 0x1
	0x03A24A50 STR W11, [X22]
	0x03A24A54 LDR X11, [X21]
	0x03A24A58 ADD X10, X11, X10, 0x3, LSL
	0x03A24A5C STP S0, S2, [X10]

ISIL:
	001 Move [X31-96], D15
	002 Move [X31-88], D14
	003 Move [X31+16], D13
	004 Move [X31+24], D12
	005 Move [X31+32], D11
	006 Move [X31+40], D10
	007 Move [X31+48], D9
	008 Move [X31+56], D8
	009 Move [X31+64], X30
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X19, 0x9BF000
	013 Move X20, 0x6F9000
	014 Move W8, [X19+22]
	015 Move X20, [X20+216]
	016 Move V8, V7
	017 Move V9, V6
	018 Move V15, V5
	019 Move V14, V4
	020 Move V10, V3
	021 Move V12, V2
	022 Move V11, V1
	023 Move V13, V0
	024 Move TEMP, X8
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {33}
	028 Move X0, 0x6F9000
	029 Move X0, [X0+216]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X19+22], W8
	033 Move X0, [X20]
	034 Move W8, [X0+224]
	035 Compare W8, 0
	036 JumpIfNotEqual {38}
	037 Call 0x1C17DFC
	038 Subtract S0, S13, S14
	039 Subtract S1, S10, S15
	040 Subtract S2, S12, S14
	041 Subtract S3, S11, S15
	042 Subtract S4, S13, S9
	043 Subtract S5, S15, S8
	044 Subtract S6, S14, S9
	045 Subtract S17, S11, S8
	046 Multiply S0, S0, S1
	047 Multiply S1, S2, S3
	048 Subtract S7, S13, S12
	049 Subtract S16, S9, S12
	050 Subtract S18, S8, S10
	051 Subtract S19, S11, S10
	052 Multiply S2, S4, S5
	053 Multiply S3, S6, S17
	054 Subtract S0, S0, S1
	055 Multiply S4, S7, S18
	056 Multiply S5, S19, S16
	057 Subtract S1, S2, S3
	058 NotImplemented "Instruction FCMP not yet implemented."
	059 Subtract S2, S4, S5
	060 NotImplemented "Instruction CSET not yet implemented."
	061 NotImplemented "Instruction CSET not yet implemented."
	062 NotImplemented "Instruction FCMP not yet implemented."
	063 NotImplemented "Instruction CSET not yet implemented."
	064 NotImplemented "Instruction CSET not yet implemented."
	065 NotImplemented "Instruction FCMP not yet implemented."
	066 Or W8, W8, W10
	067 NotImplemented "Instruction CSET not yet implemented."
	068 Or W9, W11, W9
	069 NotImplemented "Instruction CSET not yet implemented."
	070 Move X20, [X31+80]
	071 Move X19, [X31+88]
	072 Move X30, [X31+64]
	073 Move D9, [X31+48]
	074 Move D8, [X31+56]
	075 Move D11, [X31+32]
	076 Move D10, [X31+40]
	077 Move D13, [X31+16]
	078 Move D12, [X31+24]
	079 Or W8, W8, W10
	080 Or W9, W11, W9
	081 And W8, W8, W9
	082 Xor W0, W8, 1
	083 Move D15, [X31+96]
	084 Move D14, [X31+104]
	085 Return X0

Method: System.Boolean IsInsideTriangleApproximate(Unity.Mathematics.float2 pt, Unity.Mathematics.float2 v1, Unity.Mathematics.float2 v2, Unity.Mathematics.float2 v3)

Disassembly:
	0x03A24A60 LDRSW X10, [X22]
	0x03A24A64 FADD S2, S0, S16
	0x03A24A68 ADD W11, W10, 0x1
	0x03A24A6C STR W11, [X22]
	0x03A24A70 LDR X11, [X21]
	0x03A24A74 ADD X10, X11, X10, 0x3, LSL
	0x03A24A78 STP S2, S4, [X10]
	0x03A24A7C LDRSW X10, [X22]
	0x03A24A80 ADD W11, W10, 0x1
	0x03A24A84 STR W11, [X22]
	0x03A24A88 LDR X11, [X21]
	0x03A24A8C ADD X10, X11, X10, 0x3, LSL
	0x03A24A90 STP S0, S1, [X10]
	0x03A24A94 LDRSW X10, [X22]
	0x03A24A98 FADD S0, S1, S6
	0x03A24A9C ADD W11, W10, 0x1
	0x03A24AA0 STR W11, [X22]
	0x03A24AA4 LDR X11, [X21]
	0x03A24AA8 LDP X22, X21, [X31 + 0x30]
	0x03A24AAC ADD X10, X11, X10, 0x3, LSL
	0x03A24AB0 STP S3, S0, [X10]
	0x03A24AB4 STR W12, [X20]
	0x03A24AB8 LDR X10, [X19]
	0x03A24ABC MOV W11, W8
	0x03A24AC0 MOV X12, X11
	0x03A24AC4 BFM X12, X9, 0x20, 0x1F
	0x03A24AC8 STR X12, [X10]
	0x03A24ACC LDR X10, [X19]
	0x03A24AD0 ADD W12, W8, 0x2
	0x03A24AD4 BFM X9, X12, 0x20, 0x1F
	0x03A24AD8 STR X9, [X10 + 0x8]
	0x03A24ADC LDR X9, [X19]
	0x03A24AE0 ADD W10, W8, 0x3
	0x03A24AE4 BFM X12, X10, 0x20, 0x1F
	0x03A24AE8 STR X12, [X9 + 0x10]
	0x03A24AEC LDR X9, [X19]
	0x03A24AF0 ADD W12, W8, 0x4
	0x03A24AF4 BFM X10, X12, 0x20, 0x1F
	0x03A24AF8 STR X10, [X9 + 0x18]
	0x03A24AFC LDR X9, [X19]
	0x03A24B00 ADD W10, W8, 0x5
	0x03A24B04 BFM X12, X10, 0x20, 0x1F
	0x03A24B08 STR X12, [X9 + 0x20]
	0x03A24B0C LDR X9, [X19]
	0x03A24B10 ADD W12, W8, 0x6
	0x03A24B14 BFM X10, X12, 0x20, 0x1F
	0x03A24B18 ADD W8, W8, 0x7
	0x03A24B1C STR X10, [X9 + 0x28]
	0x03A24B20 LDR X9, [X19]
	0x03A24B24 BFM X12, X8, 0x20, 0x1F
	0x03A24B28 BFM X8, X11, 0x20, 0x1F
	0x03A24B2C STR X12, [X9 + 0x30]
	0x03A24B30 LDR X9, [X19]
	0x03A24B34 LDP X20, X19, [X31 + 0x40]
	0x03A24B38 STR X8, [X9 + 0x38]
	0x03A24B3C LDP X30, X27, [X31], #0x50
	0x03A24B40 RET
	0x03A24B44 LDRSW X8, [X3]
	0x03A24B48 CMP W8, 0x1
	0x03A24B4C B.LT 0x3A24B70
	0x03A24B50 LDR X9, [X2]
	0x03A24B54 MOV X10, X31
	0x03A24B58 LDR W11, [X9, X10, LSL #2]
	0x03A24B5C CMP W11, W1
	0x03A24B60 B.EQ 0x3A24BC0
	0x03A24B64 ADD X10, X10, 0x1
	0x03A24B68 CMP X10, X8
	0x03A24B6C B.LT 0x3A24B58
	0x03A24B70 LDR W8, [X5]

ISIL:
	001 Move [X31-96], D15
	002 Move [X31-88], D14
	003 Move [X31+16], D13
	004 Move [X31+24], D12
	005 Move [X31+32], D11
	006 Move [X31+40], D10
	007 Move [X31+48], D9
	008 Move [X31+56], D8
	009 Move [X31+64], X30
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X19, 0x9BF000
	013 Move X20, 0x6F9000
	014 Move W8, [X19+23]
	015 Move X20, [X20+216]
	016 Move V8, V7
	017 Move V10, V6
	018 Move V9, V5
	019 Move V14, V4
	020 Move V11, V3
	021 Move V15, V2
	022 Move V12, V1
	023 Move V13, V0
	024 Move TEMP, X8
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {33}
	028 Move X0, 0x6F9000
	029 Move X0, [X0+216]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X19+23], W8
	033 Move X0, [X20]
	034 Move W8, [X0+224]
	035 Compare W8, 0
	036 JumpIfNotEqual {38}
	037 Call 0x1C17DFC
	038 Subtract S0, S15, S14
	039 Subtract S1, S11, S9
	040 Subtract S2, S15, S10
	041 Subtract S3, S11, S8
	042 Subtract S4, S13, S15
	043 Subtract S5, S13, S14
	044 Subtract S6, S13, S10
	045 Subtract S16, S12, S11
	046 Subtract S17, S12, S9
	047 Subtract S18, S12, S8
	048 Multiply S0, S0, S3
	049 Multiply S1, S1, S2
	050 Multiply S2, S4, S17
	051 Multiply S3, S16, S5
	052 Multiply S5, S5, S18
	053 Multiply S17, S17, S6
	054 Move S7, 0.5
	055 Multiply S6, S16, S6
	056 Multiply S4, S4, S18
	057 NotImplemented "Instruction FABD not yet implemented."
	058 NotImplemented "Instruction FABD not yet implemented."
	059 NotImplemented "Instruction FABD not yet implemented."
	060 NotImplemented "Instruction FABD not yet implemented."
	061 Multiply S1, S1, S7
	062 Multiply S2, S2, S7
	063 Multiply S3, S3, S7
	064 Add S1, S1, S2
	065 Multiply S0, S0, S7
	066 Add S1, S3, S1
	067 Move W8, 0x25000000
	068 Move X20, [X31+80]
	069 Move X19, [X31+88]
	070 Move X30, [X31+64]
	071 Move D9, [X31+48]
	072 Move D8, [X31+56]
	073 Move D11, [X31+32]
	074 Move D10, [X31+40]
	075 Move D13, [X31+16]
	076 Move D12, [X31+24]
	077 NotImplemented "Instruction FABD not yet implemented."
	078 Move S1, W8
	079 NotImplemented "Instruction FCMP not yet implemented."
	080 NotImplemented "Instruction CSET not yet implemented."
	081 Move D15, [X31+96]
	082 Move D14, [X31+104]
	083 Return X0

Method: System.Boolean IsInsideCircle(Unity.Mathematics.float2 a, Unity.Mathematics.float2 b, Unity.Mathematics.float2 c, Unity.Mathematics.float2 p)

Disassembly:
	0x03A24B74 SUB W8, W8, 0x1
	0x03A24B78 STR W8, [X5]
	0x03A24B7C LDR X9, [X4]
	0x03A24B80 LDR X8, [X9, W8, SXTW]
	0x03A24B84 STR X8, [X9, W1, SXTW]
	0x03A24B88 LDR W8, [X3]
	0x03A24B8C CMP W8, 0x1
	0x03A24B90 B.LT 0x3A24BC0
	0x03A24B94 LDR X9, [X2]
	0x03A24B98 MOV X10, X31
	0x03A24B9C LDR W11, [X9, X10, LSL #2]
	0x03A24BA0 LDR W12, [X5]
	0x03A24BA4 CMP W11, W12
	0x03A24BA8 B.NE 0x3A24BB4
	0x03A24BAC STR W1, [X9, X10, LSL #2]
	0x03A24BB0 LDR W8, [X3]
	0x03A24BB4 ADD X10, X10, 0x1
	0x03A24BB8 CMP X10, W8, SXTW
	0x03A24BBC B.LT 0x3A24B9C
	0x03A24BC0 RET
	0x03A24BC4 STR X30, [X31 - 0x40]!
	0x03A24BC8 STP X24, X23, [X31 + 0x10]
	0x03A24BCC STP X22, X21, [X31 + 0x20]
	0x03A24BD0 STP X20, X19, [X31 + 0x30]
	0x03A24BD4 ADRP X24, 0x9BE000
	0x03A24BD8 LDRB W8, [X24 + 0x1F]
	0x03A24BDC MOV X19, X4
	0x03A24BE0 MOV X20, X3
	0x03A24BE4 MOV X21, X2
	0x03A24BE8 MOV X22, X1
	0x03A24BEC MOV W23, W0
	0x03A24BF0 TBNZ X8, 0x0, 0x3A24C08
	0x03A24BF4 ADRP X0, 0x6F8000
	0x03A24BF8 LDR X0, [X0 + 0xD8]
	0x03A24BFC BL 0x1C16CF4
	0x03A24C00 MOVZ W8, 0x1
	0x03A24C04 STRB W8, [X24 + 0x1F]
	0x03A24C08 LDR W8, [X19]
	0x03A24C0C CMP W8, W23
	0x03A24C10 B.LE 0x3A24C54
	0x03A24C14 ADRP X24, 0x6F8000
	0x03A24C18 LDR X24, [X24 + 0xD8]
	0x03A24C1C LDR X0, [X24]
	0x03A24C20 LDR W8, [X0 + 0xE0]
	0x03A24C24 CBNZ W8, 0x3A24C2C
	0x03A24C28 BL 0x1C16DFC
	0x03A24C2C MOV W1, W23
	0x03A24C30 MOV X2, X22
	0x03A24C34 MOV X3, X21
	0x03A24C38 MOV X4, X20
	0x03A24C3C MOV X5, X19
	0x03A24C40 BL 0x3A24B44
	0x03A24C44 LDR W8, [X19]
	0x03A24C48 ADD W23, W23, 0x1
	0x03A24C4C CMP W23, W8
	0x03A24C50 B.LT 0x3A24C1C
	0x03A24C54 LDP X20, X19, [X31 + 0x30]
	0x03A24C58 LDP X22, X21, [X31 + 0x20]
	0x03A24C5C LDP X24, X23, [X31 + 0x10]
	0x03A24C60 LDR X30, [X31], #0x40
	0x03A24C64 RET
	0x03A24C68 SUB X31, X31, 0xC0
	0x03A24C6C STP D11, D10, [X31 + 0x40]
	0x03A24C70 STP D9, D8, [X31 + 0x50]
	0x03A24C74 STR X30, [X31 + 0x60]
	0x03A24C78 STP X28, X27, [X31 + 0x70]
	0x03A24C7C STP X26, X25, [X31 + 0x80]
	0x03A24C80 STP X24, X23, [X31 + 0x90]
	0x03A24C84 STP X22, X21, [X31 + 0xA0]
	0x03A24C88 STP X20, X19, [X31 + 0xB0]
	0x03A24C8C ADRP X28, 0x9BE000
	0x03A24C90 ADRP X27, 0x6FA000
	0x03A24C94 LDR X26, [X31 + 0xD0]
	0x03A24C98 LDRB W8, [X28 + 0x20]
	0x03A24C9C LDR X25, [X31 + 0xC0]
	0x03A24CA0 LDR X27, [X27 + 0x840]
	0x03A24CA4 MOV X21, X7
	0x03A24CA8 MOV X20, X6
	0x03A24CAC MOV X19, X5
	0x03A24CB0 MOV X23, X2
	0x03A24CB4 MOV X24, X1
	0x03A24CB8 MOV W22, W0
	0x03A24CBC TBNZ X8, 0x0, 0x3A24D10
	0x03A24CC0 ADRP X0, 0x6F8000
	0x03A24CC4 LDR X0, [X0 + 0xD8]
	0x03A24CC8 BL 0x1C16CF4
	0x03A24CCC ADRP X0, 0x730000
	0x03A24CD0 LDR X0, [X0 + 0x9B8]
	0x03A24CD4 BL 0x1C16CF4
	0x03A24CD8 ADRP X0, 0x730000
	0x03A24CDC LDR X0, [X0 + 0x9C0]
	0x03A24CE0 BL 0x1C16CF4

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+48], D9
	003 Move [X31+56], D8
	004 Move [X31+64], X30
	005 Move [X31+80], X20
	006 Move [X31+88], X19
	007 Multiply S22, S0, S0
	008 Multiply S21, S1, S1
	009 Multiply S20, S2, S2
	010 Multiply S16, S3, S3
	011 Move V19, V5
	012 Add S22, S22, S21
	013 Move V21, V3
	014 Add S20, S20, S16
	015 Move V16, V1
	016 Move V19.S[1], V4.S[0]
	017 Move V21.S[1], V2.S[0]
	018 Move V16.S[1], V0.S[0]
	019 Multiply S17, S4, S4
	020 Multiply S18, S5, S5
	021 Move X19, 0x9BE000
	022 Move V0.S[1], V1.S[0]
	023 Move V2.S[1], V3.S[0]
	024 Subtract V1, V19, V21
	025 Subtract V3, V16, V19
	026 Add S17, S17, S18
	027 Move V4.S[1], V5.S[0]
	028 Move W8, [X19+1413]
	029 Subtract V5, V21, V16
	030 NotImplemented "Instruction INVALID not yet implemented."
	031 NotImplemented "Instruction INVALID not yet implemented."
	032 NotImplemented "Instruction INVALID not yet implemented."
	033 NotImplemented "Instruction INVALID not yet implemented."
	034 NotImplemented "Instruction INVALID not yet implemented."
	035 NotImplemented "Instruction INVALID not yet implemented."
	036 Add V4, V19, V18
	037 Add V1, V1, V2
	038 Add V2, V4, V16
	039 Add V1, V3, V1
	040 NotImplemented "Instruction INVALID not yet implemented."
	041 NotImplemented "Instruction MOVI not yet implemented."
	042 Compare W8, 0
	043 JumpIfNotEqual {55}
	044 Move X0, 0x6D0000
	045 Move X0, [X0+1448]
	046 Move [X31+16], V6
	047 Move [X31+24], V7
	048 Move [X31], V0
	049 Call 0x1C17CF4
	050 Move V0, [X31]
	051 Move V6, [X31+16]
	052 Move V7, [X31+2]
	053 Move W8, 1
	054 Move [X19+1413], W8
	055 Move X20, 0x6D0000
	056 Move X20, [X20+1448]
	057 NotImplemented "Instruction INVALID not yet implemented."
	058 Move X0, [X20]
	059 Move W8, [X0+224]
	060 Compare W8, 0
	061 JumpIfNotEqual {80}
	062 Move [X31+16], V6
	063 Move [X31+24], V7
	064 Move [X31], V0
	065 Call 0x1C17DFC
	066 Move V0, [X31]
	067 Move V6, [X31+16]
	068 Move V7, [X31+2]
	069 Move W8, [X19+1413]
	070 Compare W8, 0
	071 JumpIfNotEqual {80}
	072 Move X0, 0x6D0000
	073 Move X0, [X0+1448]
	074 Call 0x1C17CF4
	075 Move V0, [X31]
	076 Move V6, [X31+16]
	077 Move V7, [X31+2]
	078 Move W8, 1
	079 Move [X19+1413], W8
	080 Move X0, [X20]
	081 Move V6.S[1], V7.S[0]
	082 Subtract V9, V8, V0
	083 Subtract V8, V8, V6
	084 Move W8, [X0+224]
	085 Compare W8, 0
	086 JumpIfNotEqual {88}
	087 Call 0x1C17DFC
	088 Move X8, -49516544
	089 NotImplemented "Instruction INVALID not yet implemented."
	090 NotImplemented "Instruction INVALID not yet implemented."
	091 Move V2, [X8+380]
	092 NotImplemented "Instruction FADDP not yet implemented."
	093 NotImplemented "Instruction FADDP not yet implemented."
	094 NotImplemented "Instruction FSQRT not yet implemented."
	095 NotImplemented "Instruction FSQRT not yet implemented."
	096 Move X20, [X31+80]
	097 Move X19, [X31+88]
	098 Move X30, [X31+64]
	099 Move D9, [X31+48]
	100 Move D8, [X31+56]
	101 Subtract S0, S0, S1
	102 NotImplemented "Instruction FCMP not yet implemented."
	103 NotImplemented "Instruction CSET not yet implemented."
	104 Add X31, X31, 96
	105 Return X0

Method: System.Void BuildTriangles(Unity.Collections.NativeArray`1<Unity.Mathematics.float2> vertices, System.Int32 vertexCount, Unity.Collections.NativeArray`1<System.Int32> indices, System.Int32 indexCount, ref Unity.Collections.NativeArray`1<UnityEngine.Rendering.Universal.UTess.UTriangle> triangles, ref System.Int32 triangleCount, ref System.Single maxArea, ref System.Single avgArea, ref System.Single minArea)

Disassembly:
	0x03A24CE4 ADRP X0, 0x730000
	0x03A24CE8 LDR X0, [X0 + 0x528]
	0x03A24CEC BL 0x1C16CF4
	0x03A24CF0 ADRP X0, 0x730000
	0x03A24CF4 LDR X0, [X0 + 0x530]
	0x03A24CF8 BL 0x1C16CF4
	0x03A24CFC ADRP X0, 0x6FA000
	0x03A24D00 LDR X0, [X0 + 0x840]
	0x03A24D04 BL 0x1C16CF4
	0x03A24D08 MOVZ W8, 0x1
	0x03A24D0C STRB W8, [X28 + 0x20]
	0x03A24D10 LDR X8, [X27]
	0x03A24D14 STP X31, X31, [X31 + 0x30]
	0x03A24D18 STP X31, X31, [X31 + 0x20]
	0x03A24D1C CMP W23, 0x3
	0x03A24D20 LDR X8, [X8 + 0xB8]
	0x03A24D24 LDP S11, S8, [X8]
	0x03A24D28 LDP S9, S10, [X8 + 0x8]
	0x03A24D2C STR W31, [X26]
	0x03A24D30 STR W31, [X25]
	0x03A24D34 STR W31, [X20]
	0x03A24D38 B.LT 0x3A24E30
	0x03A24D3C ADRP X26, 0x6F8000
	0x03A24D40 LDR X26, [X26 + 0xD8]
	0x03A24D44 LDR X0, [X26]
	0x03A24D48 LDR W8, [X0 + 0xE0]
	0x03A24D4C CBNZ W8, 0x3A24D58
	0x03A24D50 BL 0x1C16DFC
	0x03A24D54 LDR X0, [X26]
	0x03A24D58 LDR X8, [X0 + 0xB8]
	0x03A24D5C LDR W9, [X8 + 0xC]
	0x03A24D60 CMP W9, W23
	0x03A24D64 B.LE 0x3A24E30
	0x03A24D68 STR X31, [X31 + 0x68]
	0x03A24D6C LDR W9, [X0 + 0xE0]
	0x03A24D70 CBNZ W9, 0x3A24D80
	0x03A24D74 BL 0x1C16DFC
	0x03A24D78 LDR X8, [X26]
	0x03A24D7C LDR X8, [X8 + 0xB8]
	0x03A24D80 LDR W1, [X8 + 0x4]
	0x03A24D84 ADRP X8, 0x730000
	0x03A24D88 LDR X8, [X8 + 0x528]
	0x03A24D8C ADD X0, X31, 0x30
	0x03A24D90 MOVZ W3, 0x1
	0x03A24D94 MOV W2, W22
	0x03A24D98 LDR X4, [X8]
	0x03A24D9C BL 0x23FBF70
	0x03A24DA0 LDR X8, [X26]
	0x03A24DA4 ADRP X9, 0x730000
	0x03A24DA8 ADD X0, X31, 0x20
	0x03A24DAC MOVZ W3, 0x1
	0x03A24DB0 LDR X8, [X8 + 0xB8]
	0x03A24DB4 LDR X9, [X9 + 0x530]
	0x03A24DB8 MOV W2, W22
	0x03A24DBC LDR W1, [X8 + 0xC]
	0x03A24DC0 LDR X4, [X9]
	0x03A24DC4 BL 0x23F8534
	0x03A24DC8 ADD X2, X31, 0x20
	0x03A24DCC ADD X3, X31, 0x68
	0x03A24DD0 ADD X4, X31, 0x30
	0x03A24DD4 ADD X5, X31, 0x6C
	0x03A24DD8 MOVZ W6, 0x1
	0x03A24DDC MOV X0, X24
	0x03A24DE0 MOV X1, X23
	0x03A24DE4 BL 0x3A248B0
	0x03A24DE8 LDP X1, X2, [X31 + 0x20]
	0x03A24DEC LDP W3, W6, [X31 + 0x68]
	0x03A24DF0 LDP X4, X5, [X31 + 0x30]
	0x03A24DF4 MOV W0, W22
	0x03A24DF8 MOV X7, X19
	0x03A24DFC STP X25, X31, [X31 + 0x10]
	0x03A24E00 STP X20, X21, [X31]
	0x03A24E04 BL 0x3AB81B0
	0x03A24E08 ADRP X8, 0x730000
	0x03A24E0C LDR X8, [X8 + 0x9C0]
	0x03A24E10 ADD X0, X31, 0x20
	0x03A24E14 LDR X1, [X8]
	0x03A24E18 BL 0x23F8770
	0x03A24E1C ADRP X8, 0x730000
	0x03A24E20 LDR X8, [X8 + 0x9B8]
	0x03A24E24 ADD X0, X31, 0x30
	0x03A24E28 LDR X1, [X8]
	0x03A24E2C BL 0x23FC198
	0x03A24E30 MOV V0.16B, V11.16B
	0x03A24E34 MOV V1.16B, V8.16B
	0x03A24E38 MOV V2.16B, V9.16B
	0x03A24E3C MOV V3.16B, V10.16B
	0x03A24E40 LDP X20, X19, [X31 + 0xB0]
	0x03A24E44 LDP X22, X21, [X31 + 0xA0]
	0x03A24E48 LDP X24, X23, [X31 + 0x90]
	0x03A24E4C LDP X26, X25, [X31 + 0x80]
	0x03A24E50 LDP X28, X27, [X31 + 0x70]
	0x03A24E54 LDR X30, [X31 + 0x60]
	0x03A24E58 LDP D9, D8, [X31 + 0x50]
	0x03A24E5C LDP D11, D10, [X31 + 0x40]
	0x03A24E60 ADD X31, X31, 0xC0
	0x03A24E64 RET
	0x03A24E68 SUB X31, X31, 0x140
	0x03A24E6C STP D11, D10, [X31 + 0xC0]
	0x03A24E70 STP D9, D8, [X31 + 0xD0]
	0x03A24E74 STP X29, X30, [X31 + 0xE0]
	0x03A24E78 STP X28, X27, [X31 + 0xF0]
	0x03A24E7C STP X26, X25, [X31 + 0x100]
	0x03A24E80 STP X24, X23, [X31 + 0x110]
	0x03A24E84 STP X22, X21, [X31 + 0x120]
	0x03A24E88 STP X20, X19, [X31 + 0x130]
	0x03A24E8C STR X7, [X31 + 0x68]
	0x03A24E90 ADRP X29, 0x9BE000
	0x03A24E94 ADRP X27, 0x6FA000
	0x03A24E98 LDR X20, [X31 + 0x150]
	0x03A24E9C LDRB W8, [X29 + 0x21]
	0x03A24EA0 LDR X19, [X31 + 0x140]
	0x03A24EA4 LDR X27, [X27 + 0x840]
	0x03A24EA8 MOV X22, X6
	0x03A24EAC MOV X21, X5
	0x03A24EB0 MOV X26, X4
	0x03A24EB4 MOV X28, X3
	0x03A24EB8 MOV X24, X2
	0x03A24EBC MOV X25, X1
	0x03A24EC0 MOV W23, W0
	0x03A24EC4 TBNZ X8, 0x0, 0x3A24F54
	0x03A24EC8 ADRP X0, 0x730000
	0x03A24ECC LDR X0, [X0 + 0x9A0]
	0x03A24ED0 BL 0x1C16CF4
	0x03A24ED4 ADRP X0, 0x730000
	0x03A24ED8 LDR X0, [X0 + 0x9A8]
	0x03A24EDC BL 0x1C16CF4
	0x03A24EE0 ADRP X0, 0x6F8000

ISIL:
	001 Subtract X31, X31, 256
	002 Move [X31+96], D14
	003 Move [X31+112], D13
	004 Move [X31+120], D12
	005 Move [X31+128], D11
	006 Move [X31+136], D10
	007 Move [X31+144], D9
	008 Move [X31+152], D8
	009 Move [X31+160], X29
	010 Move [X31+168], X30
	011 Move [X31+176], X28
	012 Move [X31+184], X27
	013 Move [X31+192], X26
	014 Move [X31+200], X25
	015 Move [X31+208], X24
	016 Move [X31+216], X23
	017 Move [X31+224], X22
	018 Move [X31+232], X21
	019 Move [X31+240], X20
	020 Move [X31+248], X19
	021 Move X20, 0x9BF000
	022 Move W8, [X20+24]
	023 Move X24, [X31+264]
	024 Move X19, X7
	025 Move W21, W5
	026 Move X22, X3
	027 Move X23, X0
	028 Move [X31+104], X6
	029 Move TEMP, X8
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfEqual {38}
	033 Move X0, 0x6F9000
	034 Move X0, [X0+216]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X20+24], W8
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Move X26, [X31+272]
	040 Move X27, [X31+256]
	041 Add X8, X31, 8
	042 Move W25, W31
	043 Add X29, X8, 24
	044 Add X28, X8, 40
	045 Move S8, 0.5
	046 Move W20, 0x7F800000
	047 Move [X31+88], W31
	048 Move [X31+80], X31
	049 NotImplemented "Instruction LDRSW not yet implemented."
	050 Add W8, W25, 1
	051 Add W10, W25, 2
	052 NotImplemented "Instruction LDRSW not yet implemented."
	053 Add X9, X23, X9
	054 Move S9, [X9]
	055 Move S10, [X9+4]
	056 Move X9, 0x6F9000
	057 NotImplemented "Instruction LDRSW not yet implemented."
	058 Move X9, [X9+216]
	059 Add X8, X23, X8
	060 Move S14, [X8]
	061 Move S13, [X8+4]
	062 Move X0, [X9]
	063 Add X9, X23, X10
	064 Move S12, [X9]
	065 Move S11, [X9+4]
	066 Move [X31+72], W31
	067 Move [X31+64], X31
	068 Move W8, [X0+224]
	069 Compare W8, 0
	070 JumpIfNotEqual {72}
	071 Call 0x1C17DFC
	072 Move W8, [X31+72]
	073 Move X9, [X31+64]
	074 Add X0, X31, 8
	075 Move [X31+8], S9
	076 Move [X31+16], S10
	077 Move [X31+16], S14
	078 Move [X31+24], S13
	079 Move [X31+24], S12
	080 Move [X31+32], S11
	081 Move [X29], X31
	082 Move [X29+8], X31
	083 Move [X28+8], W8
	084 Move [X28], X9
	085 Call ModuleHandle.CircumCircle, X0
	086 Move V6, [X27]
	087 Subtract S3, S9, S14
	088 Subtract S5, S10, S11
	089 Subtract S4, S10, S13
	090 Multiply S3, S3, S5
	091 Subtract S5, S9, S12
	092 Multiply S4, S4, S5
	093 Move W8, S6
	094 NotImplemented "Instruction FABD not yet implemented."
	095 And W8, W8, 0x7FFFFFFF
	096 Multiply S3, S3, S8
	097 NotImplemented "Instruction CMP not yet implemented."
	098 NotImplemented "Instruction FCCMP not yet implemented."
	099 NotImplemented "Instruction FCSEL not yet implemented."
	100 Move [X27], S4
	101 Move V4, [X26]
	102 Move W10, 52
	103 Add W25, W25, 3
	104 Move W8, S4
	105 And W8, W8, 0x7FFFFFFF
	106 NotImplemented "Instruction CMP not yet implemented."
	107 NotImplemented "Instruction FCCMP not yet implemented."
	108 NotImplemented "Instruction FCSEL not yet implemented."
	109 Move [X26], S4
	110 Move V4, [X24]
	111 NotImplemented "Instruction CMP not yet implemented."
	112 Add S4, S3, S4
	113 Move [X24], S4
	114 NotImplemented "Instruction LDRSW not yet implemented."
	115 Add W9, W8, 1
	116 Move [X19], W9
	117 Move X9, [X31+104]
	118 Move X9, [X9]
	119 NotImplemented "Instruction NOP not yet implemented."
	120 NotImplemented "Instruction MADD not yet implemented."
	121 Move [X8], S9
	122 Move [X8+8], S10
	123 Move [X8+8], S14
	124 Move [X8+16], S13
	125 Move [X8+16], S12
	126 Move [X8+24], S11
	127 Move [X8+24], S0
	128 Move [X8+32], S1
	129 Move [X8+32], S2
	130 Move [X8+40], S3
	131 Move X9, [X31+80]
	132 Move W10, [X31+88]
	133 Move [X8+40], X9
	134 Move [X8+48], W10
	135 Move V0, [X19]
	136 Move V1, [X24]
	137 Move X20, [X31+240]
	138 Move X19, [X31+248]
	139 Move X22, [X31+224]
	140 Move X21, [X31+232]
	141 NotImplemented "Instruction SCVTF not yet implemented."
	142 NotImplemented "Instruction FDIV not yet implemented."
	143 Move [X24], S0
	144 Move X24, [X31+208]
	145 Move X23, [X31+216]
	146 Move X26, [X31+192]
	147 Move X25, [X31+200]
	148 Move X28, [X31+176]
	149 Move X27, [X31+184]
	150 Move X29, [X31+160]
	151 Move X30, [X31+168]
	152 Move D9, [X31+144]
	153 Move D8, [X31+152]
	154 Move D11, [X31+128]
	155 Move D10, [X31+136]
	156 Move D13, [X31+112]
	157 Move D12, [X31+120]
	158 Move V14, [X31+96]
	159 Add X31, X31, 256
	160 Return 

Method: System.Void BuildTriangles(Unity.Collections.NativeArray`1<Unity.Mathematics.float2> vertices, System.Int32 vertexCount, Unity.Collections.NativeArray`1<System.Int32> indices, System.Int32 indexCount, ref Unity.Collections.NativeArray`1<UnityEngine.Rendering.Universal.UTess.UTriangle> triangles, ref System.Int32 triangleCount, ref System.Single maxArea, ref System.Single avgArea, ref System.Single minArea, ref System.Single maxEdge, ref System.Single avgEdge, ref System.Single minEdge)

Disassembly:
	0x03A24EE4 LDR X0, [X0 + 0xD8]
	0x03A24EE8 BL 0x1C16CF4
	0x03A24EEC ADRP X0, 0x6F9000
	0x03A24EF0 LDR X0, [X0 + 0x148]
	0x03A24EF4 BL 0x1C16CF4
	0x03A24EF8 ADRP X0, 0x730000
	0x03A24EFC LDR X0, [X0 + 0x9B8]
	0x03A24F00 BL 0x1C16CF4
	0x03A24F04 ADRP X0, 0x730000
	0x03A24F08 LDR X0, [X0 + 0x9C0]
	0x03A24F0C BL 0x1C16CF4
	0x03A24F10 ADRP X0, 0x730000
	0x03A24F14 LDR X0, [X0 + 0x528]
	0x03A24F18 BL 0x1C16CF4
	0x03A24F1C ADRP X0, 0x730000
	0x03A24F20 LDR X0, [X0 + 0x530]
	0x03A24F24 BL 0x1C16CF4
	0x03A24F28 ADRP X0, 0x6F9000
	0x03A24F2C LDR X0, [X0 + 0x138]
	0x03A24F30 BL 0x1C16CF4
	0x03A24F34 ADRP X0, 0x730000
	0x03A24F38 LDR X0, [X0 + 0x9C8]
	0x03A24F3C BL 0x1C16CF4
	0x03A24F40 ADRP X0, 0x6FA000
	0x03A24F44 LDR X0, [X0 + 0x840]
	0x03A24F48 BL 0x1C16CF4
	0x03A24F4C MOVZ W8, 0x1
	0x03A24F50 STRB W8, [X29 + 0x21]
	0x03A24F54 LDR X8, [X27]
	0x03A24F58 STP X31, X31, [X31 + 0xB0]
	0x03A24F5C STP X31, X31, [X31 + 0xA0]
	0x03A24F60 STP X31, X31, [X31 + 0x90]
	0x03A24F64 STP X31, X31, [X31 + 0x80]
	0x03A24F68 STP X31, X31, [X31 + 0x70]
	0x03A24F6C LDR X8, [X8 + 0xB8]
	0x03A24F70 CMP W24, 0x3
	0x03A24F74 LDP S11, S8, [X8]
	0x03A24F78 LDP S9, S10, [X8 + 0x8]
	0x03A24F7C STR W31, [X20]
	0x03A24F80 STR W31, [X19]
	0x03A24F84 STR W31, [X22]
	0x03A24F88 B.LT 0x3A25210
	0x03A24F8C ADRP X27, 0x6F8000
	0x03A24F90 LDR X27, [X27 + 0xD8]
	0x03A24F94 LDR X0, [X27]
	0x03A24F98 LDR W8, [X0 + 0xE0]
	0x03A24F9C CBNZ W8, 0x3A24FA8
	0x03A24FA0 BL 0x1C16DFC
	0x03A24FA4 LDR X0, [X27]
	0x03A24FA8 LDR X8, [X0 + 0xB8]
	0x03A24FAC LDR W8, [X8 + 0xC]
	0x03A24FB0 CMP W8, W24
	0x03A24FB4 B.LE 0x3A25210
	0x03A24FB8 ADRP X8, 0x730000
	0x03A24FBC LDR X8, [X8 + 0x528]
	0x03A24FC0 LDR X29, [X31 + 0x148]
	0x03A24FC4 UBFM W1, W26, 0x1D, 0x1C
	0x03A24FC8 ADD X0, X31, 0xA8
	0x03A24FCC LDR X4, [X8]
	0x03A24FD0 MOVZ W3, 0x1
	0x03A24FD4 MOV W2, W23
	0x03A24FD8 STR X31, [X31 + 0xB8]
	0x03A24FDC BL 0x23FBF70
	0x03A24FE0 ADRP X8, 0x730000
	0x03A24FE4 LDR X8, [X8 + 0x530]
	0x03A24FE8 UBFM W1, W24, 0x1E, 0x1D
	0x03A24FEC ADD X0, X31, 0x98
	0x03A24FF0 MOVZ W3, 0x1
	0x03A24FF4 LDR X4, [X8]
	0x03A24FF8 MOV W2, W23
	0x03A24FFC BL 0x23F8534
	0x03A25000 CBZ W26, 0x3A25058
	0x03A25004 ADRP X8, 0x72F000
	0x03A25008 LDR X8, [X8 + 0x9C8]
	0x03A2500C LDR X0, [X8]
	0x03A25010 LDR W8, [X0 + 0xE0]
	0x03A25014 CBNZ W8, 0x3A2501C
	0x03A25018 BL 0x1C16DFC
	0x03A2501C ADD X8, X31, 0xBC
	0x03A25020 ADD X9, X31, 0xA8
	0x03A25024 ADD X10, X31, 0xB8
	0x03A25028 ADD X7, X31, 0x98
	0x03A2502C MOV W0, W23
	0x03A25030 MOV X1, X25
	0x03A25034 MOV X2, X24
	0x03A25038 MOV W3, W24
	0x03A2503C MOV X4, X28
	0x03A25040 MOV X5, X26
	0x03A25044 MOV W6, W26
	0x03A25048 STP X8, X31, [X31 + 0x10]
	0x03A2504C STP X10, X9, [X31]
	0x03A25050 BL 0x3AB72C0
	0x03A25054 TBNZ X0, 0x0, 0x3A250D0
	0x03A25058 STR W26, [X20]
	0x03A2505C STR W24, [X22]
	0x03A25060 LDR X0, [X27]
	0x03A25064 STR X19, [X31 + 0x60]
	0x03A25068 MOV X19, X29
	0x03A2506C LDP X27, X29, [X29]
	0x03A25070 LDR W8, [X0 + 0xE0]
	0x03A25074 CBNZ W8, 0x3A2507C
	0x03A25078 BL 0x1C16DFC
	0x03A2507C ADRP X8, 0x72F000
	0x03A25080 LDR X8, [X8 + 0x9A8]
	0x03A25084 MOV X0, X28
	0x03A25088 MOV X1, X26
	0x03A2508C MOV X2, X27
	0x03A25090 LDR X5, [X8]
	0x03A25094 MOV X3, X29
	0x03A25098 MOV W4, W26
	0x03A2509C BL 0x221E1AC
	0x03A250A0 ADRP X8, 0x72F000
	0x03A250A4 LDP X2, X3, [X21]
	0x03A250A8 LDR X8, [X8 + 0x9A0]
	0x03A250AC MOV X0, X25
	0x03A250B0 MOV X1, X24
	0x03A250B4 MOV W4, W24
	0x03A250B8 LDR X5, [X8]
	0x03A250BC BL 0x221E110
	0x03A250C0 ADRP X27, 0x6F7000
	0x03A250C4 LDR X27, [X27 + 0xD8]
	0x03A250C8 MOV X29, X19
	0x03A250CC LDR X19, [X31 + 0x60]
	0x03A250D0 LDR W8, [X31 + 0xB8]
	0x03A250D4 CMP W8, 0x3
	0x03A250D8 B.LT 0x3A251E8
	0x03A250DC LDR W9, [X31 + 0xBC]
	0x03A250E0 CMP W9, 0x3
	0x03A250E4 B.LT 0x3A251E8
	0x03A250E8 ADRP X9, 0x6F8000
	0x03A250EC LDR X9, [X9 + 0x138]
	0x03A250F0 UBFM W1, W8, 0x1D, 0x1C
	0x03A250F4 ADD X0, X31, 0x88
	0x03A250F8 MOVZ W3, 0x1
	0x03A250FC LDR X4, [X9]
	0x03A25100 MOV W2, W23
	0x03A25104 ADD X24, X31, 0x88
	0x03A25108 BL 0x23D58AC
	0x03A2510C ADRP X9, 0x72F000
	0x03A25110 LDR W8, [X31 + 0xB8]
	0x03A25114 LDR X9, [X9 + 0x530]
	0x03A25118 ADD X0, X31, 0x78
	0x03A2511C MOVZ W3, 0x1
	0x03A25120 UBFM W1, W8, 0x1E, 0x1D
	0x03A25124 LDR X4, [X9]
	0x03A25128 MOV W2, W23
	0x03A2512C BL 0x23F8534
	0x03A25130 LDP X1, X2, [X31 + 0x98]
	0x03A25134 LDP W3, W6, [X31 + 0xB8]
	0x03A25138 LDP X4, X5, [X31 + 0xA8]
	0x03A2513C ADD X8, X31, 0x74
	0x03A25140 ADD X9, X31, 0x70
	0x03A25144 ADD X7, X31, 0x78
	0x03A25148 MOV W0, W23
	0x03A2514C STR X31, [X31 + 0x70]
	0x03A25150 STP X8, X31, [X31 + 0x10]
	0x03A25154 STP X9, X24, [X31]
	0x03A25158 BL 0x3AB81B0
	0x03A2515C TBZ X0, 0x0, 0x3A251C0
	0x03A25160 LDR X0, [X27]
	0x03A25164 STR X29, [X31 + 0x60]
	0x03A25168 LDP X9, X25, [X31 + 0xA8]
	0x03A2516C LDR W26, [X31 + 0xBC]
	0x03A25170 LDP X5, X28, [X31 + 0x88]
	0x03A25174 LDP W24, W29, [X31 + 0x70]
	0x03A25178 LDP X27, X23, [X31 + 0x78]
	0x03A2517C LDR W8, [X0 + 0xE0]
	0x03A25180 CBNZ W8, 0x3A25190
	0x03A25184 STP X9, X5, [X31 + 0x50]
	0x03A25188 BL 0x1C16DFC
	0x03A2518C LDP X9, X5, [X31 + 0x50]
	0x03A25190 LDP X3, X8, [X31 + 0x60]
	0x03A25194 MOV X0, X9
	0x03A25198 MOV X1, X25
	0x03A2519C MOV W2, W26
	0x03A251A0 MOV X4, X20
	0x03A251A4 MOV X6, X28
	0x03A251A8 MOV W7, W29
	0x03A251AC STP X21, X22, [X31 + 0x28]
	0x03A251B0 STR W24, [X31 + 0x20]
	0x03A251B4 STP X27, X23, [X31 + 0x10]
	0x03A251B8 STP X8, X19, [X31]
	0x03A251BC BL 0x3A24754
	0x03A251C0 ADRP X8, 0x72F000
	0x03A251C4 LDR X8, [X8 + 0x9C0]
	0x03A251C8 ADD X0, X31, 0x78
	0x03A251CC LDR X1, [X8]
	0x03A251D0 BL 0x23F8770
	0x03A251D4 ADRP X8, 0x6F8000
	0x03A251D8 LDR X8, [X8 + 0x148]
	0x03A251DC ADD X0, X31, 0x88
	0x03A251E0 LDR X1, [X8]
	0x03A251E4 BL 0x23D5AD4
	0x03A251E8 ADRP X8, 0x72F000
	0x03A251EC LDR X8, [X8 + 0x9C0]
	0x03A251F0 ADD X0, X31, 0x98
	0x03A251F4 LDR X1, [X8]
	0x03A251F8 BL 0x23F8770
	0x03A251FC ADRP X8, 0x72F000
	0x03A25200 LDR X8, [X8 + 0x9B8]
	0x03A25204 ADD X0, X31, 0xA8
	0x03A25208 LDR X1, [X8]
	0x03A2520C BL 0x23FC198
	0x03A25210 MOV V0.16B, V11.16B
	0x03A25214 MOV V1.16B, V8.16B
	0x03A25218 MOV V2.16B, V9.16B
	0x03A2521C MOV V3.16B, V10.16B
	0x03A25220 LDP X20, X19, [X31 + 0x130]
	0x03A25224 LDP X22, X21, [X31 + 0x120]
	0x03A25228 LDP X24, X23, [X31 + 0x110]
	0x03A2522C LDP X26, X25, [X31 + 0x100]
	0x03A25230 LDP X28, X27, [X31 + 0xF0]
	0x03A25234 LDP X29, X30, [X31 + 0xE0]
	0x03A25238 LDP D9, D8, [X31 + 0xD0]
	0x03A2523C LDP D11, D10, [X31 + 0xC0]
	0x03A25240 ADD X31, X31, 0x140
	0x03A25244 RET
	0x03A25248 SUB X31, X31, 0x1B0
	0x03A2524C STR D14, [X31 + 0x110]
	0x03A25250 STP D13, D12, [X31 + 0x120]
	0x03A25254 STP D11, D10, [X31 + 0x130]
	0x03A25258 STP D9, D8, [X31 + 0x140]
	0x03A2525C STP X29, X30, [X31 + 0x150]
	0x03A25260 STP X28, X27, [X31 + 0x160]
	0x03A25264 STP X26, X25, [X31 + 0x170]
	0x03A25268 STP X24, X23, [X31 + 0x180]
	0x03A2526C STP X22, X21, [X31 + 0x190]
	0x03A25270 STP X20, X19, [X31 + 0x1A0]
	0x03A25274 STR X3, [X31 + 0x88]
	0x03A25278 STR W0, [X31 + 0x90]
	0x03A2527C ADRP X21, 0x9BD000
	0x03A25280 ADRP X20, 0x6F9000
	0x03A25284 LDR X28, [X31 + 0x1C0]
	0x03A25288 LDRB W8, [X21 + 0x22]
	0x03A2528C LDR X25, [X31 + 0x1B0]
	0x03A25290 LDR X20, [X20 + 0x840]
	0x03A25294 MOV V12.16B, V1.16B
	0x03A25298 MOV V10.16B, V0.16B
	0x03A2529C MOV X22, X7
	0x03A252A0 MOV X24, X6
	0x03A252A4 MOV X23, X5
	0x03A252A8 MOV X19, X4
	0x03A252AC MOV X29, X2
	0x03A252B0 MOV X26, X1
	0x03A252B4 TBNZ X8, 0x0, 0x3A25344
	0x03A252B8 ADRP X0, 0x6CE000
	0x03A252BC LDR X0, [X0 + 0x5A8]
	0x03A252C0 BL 0x1C16CF4
	0x03A252C4 ADRP X0, 0x6F7000
	0x03A252C8 LDR X0, [X0 + 0xD8]
	0x03A252CC BL 0x1C16CF4
	0x03A252D0 ADRP X0, 0x6F8000
	0x03A252D4 LDR X0, [X0 + 0x148]
	0x03A252D8 BL 0x1C16CF4

ISIL:
	001 Subtract X31, X31, 320
	002 Move [X31+160], D15
	003 Move [X31+168], D14
	004 Move [X31+176], D13
	005 Move [X31+184], D12
	006 Move [X31+192], D11
	007 Move [X31+200], D10
	008 Move [X31+208], D9
	009 Move [X31+216], D8
	010 Move [X31+224], X29
	011 Move [X31+232], X30
	012 Move [X31+240], X28
	013 Move [X31+248], X27
	014 Move [X31+256], X26
	015 Move [X31+264], X25
	016 Move [X31+272], X24
	017 Move [X31+280], X23
	018 Move [X31+288], X22
	019 Move [X31+296], X21
	020 Move [X31+304], X20
	021 Move [X31+312], X19
	022 Move X8, [X31+352]
	023 Move X19, 0x9BF000
	024 Move X9, [X31+328]
	025 Move X22, X3
	026 Move [X31+24], X7
	027 Move [X31+32], X8
	028 Move W8, [X19+25]
	029 Move X23, X0
	030 Move [X31+44], W5
	031 Move [X31+8], X6
	032 Move [X31+16], X9
	033 Move TEMP, X8
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfEqual {42}
	037 Move X0, 0x6F9000
	038 Move X0, [X0+216]
	039 Call 0x1C17CF4
	040 Move W8, 1
	041 Move [X19+25], W8
	042 Move W8, [X31+44]
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Move X24, 0x6D0000
	045 Move X28, [X31+360]
	046 Move X21, [X31+336]
	047 Move X29, [X31+344]
	048 Move X19, [X31+320]
	049 Move X24, [X24+1448]
	050 Add X8, X31, 72
	051 Move W27, W31
	052 Move W20, 0x7F800000
	053 Add X25, X8, 24
	054 Add X26, X8, 40
	055 Move [X31+152], W31
	056 Move [X31+144], X31
	057 NotImplemented "Instruction LDRSW not yet implemented."
	058 Add W8, W27, 1
	059 Add W10, W27, 2
	060 NotImplemented "Instruction LDRSW not yet implemented."
	061 Add X9, X23, X9
	062 Move S12, [X9]
	063 Move S13, [X9+4]
	064 Move X9, 0x6F9000
	065 NotImplemented "Instruction LDRSW not yet implemented."
	066 Move X9, [X9+216]
	067 Add X8, X23, X8
	068 Move S8, [X8]
	069 Move S11, [X8+4]
	070 Move X0, [X9]
	071 Add X9, X23, X10
	072 Move S15, [X9]
	073 Move S10, [X9+4]
	074 Move [X31+136], W31
	075 Move [X31+128], X31
	076 Move W8, [X0+224]
	077 Compare W8, 0
	078 JumpIfNotEqual {80}
	079 Call 0x1C17DFC
	080 Move W8, [X31+136]
	081 Move X9, [X31+128]
	082 Add X0, X31, 72
	083 Move [X31+72], S12
	084 Move [X31+80], S13
	085 Move [X31+80], S8
	086 Move [X31+88], S11
	087 Move [X31+88], S15
	088 Move [X31+96], S10
	089 Move [X25], X31
	090 Move [X25+8], X31
	091 Move [X26+8], W8
	092 Move [X26], X9
	093 Call ModuleHandle.CircumCircle, X0
	094 Move V3, [X19]
	095 Move V14, V0
	096 Move [X31+64], S1
	097 Subtract S0, S12, S8
	098 Subtract S1, S13, S11
	099 Subtract S4, S12, S15
	100 Subtract S5, S13, S10
	101 Multiply S0, S0, S5
	102 Multiply S1, S1, S4
	103 Move W8, S3
	104 NotImplemented "Instruction FABD not yet implemented."
	105 Move S1, 0.5
	106 And W8, W8, 0x7FFFFFFF
	107 Multiply S9, S0, S1
	108 NotImplemented "Instruction CMP not yet implemented."
	109 NotImplemented "Instruction FCCMP not yet implemented."
	110 NotImplemented "Instruction FCSEL not yet implemented."
	111 Move [X19], S0
	112 Move V0, [X21]
	113 Move [X31+52], S5
	114 Move [X31+60], S4
	115 Move [X31+60], S2
	116 Move W8, S0
	117 And W8, W8, 0x7FFFFFFF
	118 NotImplemented "Instruction CMP not yet implemented."
	119 Move X8, [X31+16]
	120 NotImplemented "Instruction FCCMP not yet implemented."
	121 NotImplemented "Instruction FCSEL not yet implemented."
	122 Move [X21], S0
	123 Move V0, [X8]
	124 Add S0, S9, S0
	125 Move [X8], S0
	126 Move X8, 0x9BD000
	127 Move W8, [X8+1413]
	128 Compare W8, 0
	129 JumpIfNotEqual {135}
	130 Move X0, X24
	131 Call 0x1C17CF4
	132 Move X8, 0x9BD000
	133 Move W9, 1
	134 Move [X8+1413], W9
	135 Move X0, [X24]
	136 Move [X31+48], S12
	137 Move W8, [X0+224]
	138 Compare W8, 0
	139 JumpIfEqual {141}
	140 Move W8, 1
	141 Call 0x1C17DFC
	142 Move X8, 0x9BD000
	143 Move W8, [X8+1413]
	144 Move V12, V14
	145 Compare W8, 0
	146 JumpIfNotEqual {152}
	147 Move X0, X24
	148 Call 0x1C17CF4
	149 Move X8, 0x9BD000
	150 Move W9, 1
	151 Move [X8+1413], W9
	152 Move X0, [X24]
	153 Subtract S14, S15, S8
	154 Move [X31+68], S10
	155 Subtract S10, S10, S11
	156 Move W8, [X0+224]
	157 Compare W8, 0
	158 JumpIfEqual {163}
	159 Multiply S0, S14, S14
	160 Multiply S1, S10, S10
	161 Add S0, S0, S1
	162 NotImplemented "Instruction FSQRT not yet implemented."
	163 Call 0x1C17DFC
	164 Move X8, 0x9BD000
	165 Move W8, [X8+1413]
	166 Multiply S0, S14, S14
	167 Multiply S1, S10, S10
	168 Add S0, S0, S1
	169 NotImplemented "Instruction FSQRT not yet implemented."
	170 Compare W8, 0
	171 JumpIfNotEqual {177}
	172 Move X0, X24
	173 Call 0x1C17CF4
	174 Move W8, 1
	175 Move X9, 0x9BD000
	176 Move [X9+1413], W8
	177 Move X0, [X24]
	178 Move V14, V12
	179 Move V12, [X31+48]
	180 Move W8, [X0+224]
	181 Compare W8, 0
	182 JumpIfNotEqual {184}
	183 Call 0x1C17DFC
	184 Move V2, [X29]
	185 Subtract S0, S8, S12
	186 Subtract S1, S11, S13
	187 Multiply S0, S0, S0
	188 Multiply S1, S1, S1
	189 Move W8, S2
	190 Add S0, S0, S1
	191 And W8, W8, 0x7FFFFFFF
	192 NotImplemented "Instruction FSQRT not yet implemented."
	193 NotImplemented "Instruction CMP not yet implemented."
	194 NotImplemented "Instruction FCCMP not yet implemented."
	195 NotImplemented "Instruction FCSEL not yet implemented."
	196 Move W8, S2
	197 Move S3, [X31+52]
	198 Move S1, [X31+56]
	199 And W8, W8, 0x7FFFFFFF
	200 NotImplemented "Instruction CMP not yet implemented."
	201 NotImplemented "Instruction FCCMP not yet implemented."
	202 NotImplemented "Instruction FCSEL not yet implemented."
	203 Multiply S1, S1, S1
	204 Multiply S3, S3, S3
	205 Move W8, S2
	206 Add S1, S1, S3
	207 And W8, W8, 0x7FFFFFFF
	208 NotImplemented "Instruction FSQRT not yet implemented."
	209 NotImplemented "Instruction CMP not yet implemented."
	210 NotImplemented "Instruction FCCMP not yet implemented."
	211 NotImplemented "Instruction FCSEL not yet implemented."
	212 Move [X29], S2
	213 Move V2, [X28]
	214 Move W11, [X31+44]
	215 Add W27, W27, 3
	216 Move W8, S2
	217 And W8, W8, 0x7FFFFFFF
	218 NotImplemented "Instruction CMP not yet implemented."
	219 NotImplemented "Instruction FCCMP not yet implemented."
	220 NotImplemented "Instruction FCSEL not yet implemented."
	221 Move W8, S2
	222 And W8, W8, 0x7FFFFFFF
	223 NotImplemented "Instruction CMP not yet implemented."
	224 NotImplemented "Instruction FCCMP not yet implemented."
	225 NotImplemented "Instruction FCSEL not yet implemented."
	226 Move W8, S2
	227 And W8, W8, 0x7FFFFFFF
	228 NotImplemented "Instruction CMP not yet implemented."
	229 Move X10, [X31+24]
	230 Move X8, [X31+32]
	231 NotImplemented "Instruction FCCMP not yet implemented."
	232 NotImplemented "Instruction FCSEL not yet implemented."
	233 Move [X28], S2
	234 Move V2, [X8]
	235 NotImplemented "Instruction CMP not yet implemented."
	236 Add S0, S0, S2
	237 Add S0, S10, S0
	238 Add S0, S1, S0
	239 Move [X8], S0
	240 NotImplemented "Instruction LDRSW not yet implemented."
	241 Move V0, [X31+68]
	242 Add W9, W8, 1
	243 Move [X10], W9
	244 Move X9, [X31+8]
	245 Move W10, 52
	246 Move X9, [X9]
	247 NotImplemented "Instruction NOP not yet implemented."
	248 NotImplemented "Instruction MADD not yet implemented."
	249 Move [X8+16], S15
	250 Move [X8+24], S0
	251 Move V0, [X31+64]
	252 Move [X8], S12
	253 Move [X8+8], S13
	254 Move [X8+8], S8
	255 Move [X8+16], S11
	256 Move [X8+24], S14
	257 Move [X8+32], S0
	258 Move V0, [X31+60]
	259 Move [X8+32], S0
	260 Move [X8+40], S9
	261 Move W9, [X31+152]
	262 Move X10, [X31+144]
	263 Move [X8+48], W9
	264 Move [X8+40], X10
	265 Move X8, [X31+24]
	266 Move X9, [X31+32]
	267 Move X20, [X31+304]
	268 Move X19, [X31+312]
	269 Move X22, [X31+288]
	270 Move X21, [X31+296]
	271 Move X24, [X31+272]
	272 Move X23, [X31+280]
	273 Move V0, [X8]
	274 Move X8, [X31+16]
	275 Move X26, [X31+256]
	276 Move X25, [X31+264]
	277 Move X28, [X31+240]
	278 Move X27, [X31+248]
	279 NotImplemented "Instruction SCVTF not yet implemented."
	280 Move V1, [X8]
	281 Move X29, [X31+224]
	282 Move X30, [X31+232]
	283 Move D9, [X31+208]
	284 Move D8, [X31+216]
	285 Move D11, [X31+192]
	286 Move D10, [X31+200]
	287 NotImplemented "Instruction FDIV not yet implemented."
	288 Move [X8], S0
	289 Move W8, [X31+44]
	290 Move V0, [X9]
	291 Move D13, [X31+176]
	292 Move D12, [X31+184]
	293 Move D15, [X31+160]
	294 Move D14, [X31+168]
	295 NotImplemented "Instruction SCVTF not yet implemented."
	296 NotImplemented "Instruction FDIV not yet implemented."
	297 Move [X9], S0
	298 Add X31, X31, 320
	299 Return 

Method: System.Void BuildTrianglesAndEdges(Unity.Collections.NativeArray`1<Unity.Mathematics.float2> vertices, System.Int32 vertexCount, Unity.Collections.NativeArray`1<System.Int32> indices, System.Int32 indexCount, ref Unity.Collections.NativeArray`1<UnityEngine.Rendering.Universal.UTess.UTriangle> triangles, ref System.Int32 triangleCount, ref Unity.Collections.NativeArray`1<Unity.Mathematics.int4> delaEdges, ref System.Int32 delaEdgeCount, ref System.Single maxArea, ref System.Single avgArea, ref System.Single minArea)

Disassembly:
	0x03A252DC ADRP X0, 0x72F000
	0x03A252E0 LDR X0, [X0 + 0x9B8]
	0x03A252E4 BL 0x1C16CF4
	0x03A252E8 ADRP X0, 0x72F000
	0x03A252EC LDR X0, [X0 + 0x9C0]
	0x03A252F0 BL 0x1C16CF4
	0x03A252F4 ADRP X0, 0x72F000
	0x03A252F8 LDR X0, [X0 + 0x528]
	0x03A252FC BL 0x1C16CF4
	0x03A25300 ADRP X0, 0x72F000
	0x03A25304 LDR X0, [X0 + 0x530]
	0x03A25308 BL 0x1C16CF4
	0x03A2530C ADRP X0, 0x6F8000
	0x03A25310 LDR X0, [X0 + 0x138]
	0x03A25314 BL 0x1C16CF4
	0x03A25318 ADRP X0, 0x72F000
	0x03A2531C LDR X0, [X0 + 0x9D0]
	0x03A25320 BL 0x1C16CF4
	0x03A25324 ADRP X0, 0x72F000
	0x03A25328 LDR X0, [X0 + 0x9D8]
	0x03A2532C BL 0x1C16CF4
	0x03A25330 ADRP X0, 0x6F9000
	0x03A25334 LDR X0, [X0 + 0x840]
	0x03A25338 BL 0x1C16CF4
	0x03A2533C MOVZ W8, 0x1
	0x03A25340 STRB W8, [X21 + 0x22]
	0x03A25344 LDR X8, [X20]
	0x03A25348 STR X31, [X31 + 0x118]
	0x03A2534C STP X31, X31, [X31 + 0x100]
	0x03A25350 STP X31, X31, [X31 + 0xF0]
	0x03A25354 STP X31, X31, [X31 + 0xE0]
	0x03A25358 STR W31, [X31 + 0xDC]
	0x03A2535C STP X31, X31, [X31 + 0xC8]
	0x03A25360 STP X31, X31, [X31 + 0xB8]
	0x03A25364 STP X31, X31, [X31 + 0xA8]
	0x03A25368 STP X31, X31, [X31 + 0x98]
	0x03A2536C LDR X8, [X8 + 0xB8]
	0x03A25370 CMP W29, 0x3
	0x03A25374 LDP S13, S11, [X8]
	0x03A25378 LDP S8, S9, [X8 + 0x8]
	0x03A2537C STR W31, [X28]
	0x03A25380 STR W31, [X25]
	0x03A25384 STR W31, [X24]
	0x03A25388 B.LT 0x3A25920
	0x03A2538C ADRP X20, 0x6F7000
	0x03A25390 LDR X20, [X20 + 0xD8]
	0x03A25394 LDR X0, [X20]
	0x03A25398 LDR W8, [X0 + 0xE0]
	0x03A2539C CBNZ W8, 0x3A253A8
	0x03A253A0 BL 0x1C16DFC
	0x03A253A4 LDR X0, [X20]
	0x03A253A8 CBZ W19, 0x3A25920
	0x03A253AC LDR X8, [X0 + 0xB8]
	0x03A253B0 LDR W9, [X8 + 0xC]
	0x03A253B4 CMP W9, W29
	0x03A253B8 B.LE 0x3A25920
	0x03A253BC STR X31, [X31 + 0x118]
	0x03A253C0 LDR W9, [X0 + 0xE0]
	0x03A253C4 LDR X10, [X31 + 0x1B8]
	0x03A253C8 MOV X21, X22
	0x03A253CC STR X10, [X31 + 0x80]
	0x03A253D0 CBNZ W9, 0x3A253E0
	0x03A253D4 BL 0x1C16DFC
	0x03A253D8 LDR X8, [X20]
	0x03A253DC LDR X8, [X8 + 0xB8]
	0x03A253E0 LDR W1, [X8 + 0x8]
	0x03A253E4 ADRP X8, 0x6F8000
	0x03A253E8 LDR X8, [X8 + 0x138]
	0x03A253EC LDR W27, [X31 + 0x90]
	0x03A253F0 ADD X0, X31, 0x100
	0x03A253F4 MOVZ W3, 0x1
	0x03A253F8 LDR X4, [X8]
	0x03A253FC MOV W2, W27
	0x03A25400 MOV X22, X20
	0x03A25404 ADD X20, X31, 0x100
	0x03A25408 BL 0x23D58AC
	0x03A2540C LDR X8, [X22]
	0x03A25410 ADRP X22, 0x72F000
	0x03A25414 ADD X0, X31, 0xF0
	0x03A25418 MOVZ W3, 0x1
	0x03A2541C LDR X8, [X8 + 0xB8]
	0x03A25420 LDR X22, [X22 + 0x530]
	0x03A25424 MOV W2, W27
	0x03A25428 LDR W1, [X8 + 0xC]
	0x03A2542C LDR X4, [X22]
	0x03A25430 BL 0x23F8534
	0x03A25434 LDR X4, [X31 + 0x88]
	0x03A25438 ADD X8, X31, 0x11C
	0x03A2543C ADD X9, X31, 0x118
	0x03A25440 ADD X7, X31, 0xF0
	0x03A25444 MOV W0, W27
	0x03A25448 MOV X1, X26
	0x03A2544C MOV X2, X29
	0x03A25450 MOV W3, W29
	0x03A25454 MOV X5, X19
	0x03A25458 MOV W6, W19
	0x03A2545C STP X8, X31, [X31 + 0x10]
	0x03A25460 STP X9, X20, [X31]
	0x03A25464 BL 0x3AB81B0
	0x03A25468 FCMP S12, 0x0
	0x03A2546C CSET W8, EQ
	0x03A25470 FCMP S10, 0x0
	0x03A25474 CSET W9, EQ
	0x03A25478 MOV W10, W0
	0x03A2547C AND W8, W9, W8, 0x0
	0x03A25480 MOV W20, W31
	0x03A25484 TBNZ X8, 0x0, 0x3A255A8
	0x03A25488 TBZ X10, 0x0, 0x3A255A8
	0x03A2548C STR X28, [X31 + 0x78]
	0x03A25490 STR X31, [X31 + 0xE8]
	0x03A25494 ADRP X20, 0x6F7000
	0x03A25498 LDR X20, [X20 + 0xD8]
	0x03A2549C STR X31, [X31 + 0xE0]
	0x03A254A0 STR W31, [X31 + 0xDC]
	0x03A254A4 LDR W28, [X31 + 0x1C8]
	0x03A254A8 LDR X0, [X20]
	0x03A254AC STR W10, [X31 + 0x64]
	0x03A254B0 LDR W8, [X0 + 0xE0]
	0x03A254B4 CBNZ W8, 0x3A254C0
	0x03A254B8 BL 0x1C16DFC
	0x03A254BC LDR X0, [X20]
	0x03A254C0 ADRP X9, 0x72F000
	0x03A254C4 LDR X8, [X0 + 0xB8]
	0x03A254C8 LDR X9, [X9 + 0x528]
	0x03A254CC LDR W27, [X31 + 0x90]
	0x03A254D0 ADD X0, X31, 0xC8
	0x03A254D4 LDR W1, [X8 + 0x4]
	0x03A254D8 LDR X4, [X9]
	0x03A254DC MOVZ W3, 0x1
	0x03A254E0 MOV W2, W27
	0x03A254E4 BL 0x23FBF70
	0x03A254E8 LDR X8, [X20]
	0x03A254EC LDR X4, [X22]
	0x03A254F0 ADD X0, X31, 0xB8
	0x03A254F4 MOVZ W3, 0x1
	0x03A254F8 LDR X8, [X8 + 0xB8]
	0x03A254FC MOV W2, W27
	0x03A25500 LDR W1, [X8 + 0xC]
	0x03A25504 BL 0x23F8534
	0x03A25508 LDR X8, [X20]
	0x03A2550C ADD X0, X31, 0xA8
	0x03A25510 MOVZ W3, 0x1
	0x03A25514 MOV W2, W27
	0x03A25518 LDR X8, [X8 + 0xB8]
	0x03A2551C LDR W1, [X8 + 0x8]
	0x03A25520 ADRP X8, 0x6F8000
	0x03A25524 LDR X8, [X8 + 0x138]
	0x03A25528 LDR X4, [X8]
	0x03A2552C BL 0x23D58AC
	0x03A25530 LDR X8, [X20]
	0x03A25534 LDR X4, [X22]
	0x03A25538 ADD X0, X31, 0x98
	0x03A2553C MOVZ W3, 0x1
	0x03A25540 LDR X8, [X8 + 0xB8]
	0x03A25544 MOV W2, W27
	0x03A25548 LDR W1, [X8 + 0xC]
	0x03A2554C BL 0x23F8534
	0x03A25550 ADRP X9, 0x6CE000
	0x03A25554 LDR X8, [X20]
	0x03A25558 LDR X9, [X9 + 0x5A8]

ISIL:
	001 Subtract X31, X31, 240
	002 Move [X31+80], D14
	003 Move [X31+96], D13
	004 Move [X31+104], D12
	005 Move [X31+112], D11
	006 Move [X31+120], D10
	007 Move [X31+128], D9
	008 Move [X31+136], D8
	009 Move [X31+144], X29
	010 Move [X31+152], X30
	011 Move [X31+160], X28
	012 Move [X31+168], X27
	013 Move [X31+176], X26
	014 Move [X31+184], X25
	015 Move [X31+192], X24
	016 Move [X31+200], X23
	017 Move [X31+208], X22
	018 Move [X31+216], X21
	019 Move [X31+224], X20
	020 Move [X31+232], X19
	021 Move X20, 0x9BE000
	022 Move W8, [X20+26]
	023 Move X9, [X31+264]
	024 Move X19, X7
	025 Move X22, X3
	026 Move X23, X0
	027 Move [X31+92], W5
	028 Move [X31+8], X6
	029 Move [X31+16], X9
	030 Move TEMP, X8
	031 And TEMP, TEMP, 1
	032 Compare TEMP, 1
	033 JumpIfEqual {39}
	034 Move X0, 0x6F8000
	035 Move X0, [X0+216]
	036 Call 0x1C17CF4
	037 Move W8, 1
	038 Move [X20+26], W8
	039 Move W8, [X31+92]
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Move X8, [X31+272]
	042 Move X28, [X31+248]
	043 Move X27, [X31+256]
	044 Move X29, [X31+240]
	045 Move W25, W31
	046 Move [X31], X8
	047 Add X8, X31, 24
	048 Move S8, 0.5
	049 Add X20, X8, 24
	050 Move X10, 0x6F8000
	051 NotImplemented "Instruction LDRSW not yet implemented."
	052 Move X10, [X10+216]
	053 Add W8, W25, 1
	054 Add W9, W25, 2
	055 NotImplemented "Instruction LDRSW not yet implemented."
	056 NotImplemented "Instruction LDRSW not yet implemented."
	057 Move X0, [X10]
	058 Add X8, X23, X21
	059 Move S9, [X8]
	060 Move S10, [X8+4]
	061 Add X8, X23, X24
	062 Move S11, [X8]
	063 Move S12, [X8+4]
	064 Add X8, X23, X26
	065 Move W9, [X0+224]
	066 Move S13, [X8]
	067 Move S14, [X8+4]
	068 Compare W9, 0
	069 JumpIfNotEqual {71}
	070 Call 0x1C17DFC
	071 Add X0, X31, 24
	072 Move [X31+24], S9
	073 Move [X31+32], S10
	074 Move [X31+32], S11
	075 Move [X31+40], S12
	076 Move [X31+40], S13
	077 Move [X31+48], S14
	078 Move [X20], X31
	079 Move [X20+8], X31
	080 Move [X20+24], W31
	081 Move [X20+16], X31
	082 Call ModuleHandle.CircumCircle, X0
	083 Move V6, [X27]
	084 Subtract S3, S9, S11
	085 Subtract S5, S10, S14
	086 Subtract S4, S10, S12
	087 Multiply S3, S3, S5
	088 Subtract S5, S9, S13
	089 Multiply S4, S4, S5
	090 Move W8, S6
	091 NotImplemented "Instruction FABD not yet implemented."
	092 And W8, W8, 0x7FFFFFFF
	093 Move W10, 0x7F800000
	094 Multiply S3, S3, S8
	095 NotImplemented "Instruction CMP not yet implemented."
	096 Move X9, [X31]
	097 NotImplemented "Instruction FCCMP not yet implemented."
	098 NotImplemented "Instruction FCSEL not yet implemented."
	099 Move [X27], S4
	100 Move V4, [X9]
	101 Move TEMP, 0
	102 Not TEMP
	103 Move W13, TEMP
	104 Add W25, W25, 3
	105 Move W8, S4
	106 And W8, W8, 0x7FFFFFFF
	107 NotImplemented "Instruction CMP not yet implemented."
	108 Move X8, [X31+16]
	109 NotImplemented "Instruction FCCMP not yet implemented."
	110 NotImplemented "Instruction FCSEL not yet implemented."
	111 Move [X9], S4
	112 Move V4, [X8]
	113 NotImplemented "Instruction CMP not yet implemented."
	114 NotImplemented "Instruction CSEL not yet implemented."
	115 NotImplemented "Instruction CSEL not yet implemented."
	116 Add S4, S3, S4
	117 Move [X8], S4
	118 NotImplemented "Instruction LDRSW not yet implemented."
	119 NotImplemented "Instruction CMP not yet implemented."
	120 Add W9, W8, 1
	121 Move [X28], W9
	122 Move X9, [X29]
	123 Move W12, [X19]
	124 Add X8, X9, X8
	125 Move [X8], W10
	126 Move [X8+4], W11
	127 Move [X8+8], W12
	128 Move [X8+12], W13
	129 NotImplemented "Instruction LDRSW not yet implemented."
	130 NotImplemented "Instruction CSEL not yet implemented."
	131 NotImplemented "Instruction CSEL not yet implemented."
	132 NotImplemented "Instruction CMP not yet implemented."
	133 Add W9, W8, 1
	134 Move [X28], W9
	135 Move X9, [X29]
	136 Move W12, [X19]
	137 Add X8, X9, X8
	138 Move [X8], W10
	139 Move [X8+4], W11
	140 Move [X8+8], W12
	141 Move [X8+12], W13
	142 NotImplemented "Instruction LDRSW not yet implemented."
	143 NotImplemented "Instruction CSEL not yet implemented."
	144 NotImplemented "Instruction CSEL not yet implemented."
	145 Add W9, W8, 1
	146 Move [X28], W9
	147 Move X9, [X29]
	148 Move W12, [X19]
	149 Add X8, X9, X8
	150 Move [X8], W10
	151 Move [X8+4], W11
	152 Move [X8+8], W12
	153 Move [X8+12], W13
	154 NotImplemented "Instruction LDRSW not yet implemented."
	155 Move W10, [X31+92]
	156 Add W9, W8, 1
	157 Move [X19], W9
	158 Move X9, [X31+8]
	159 NotImplemented "Instruction CMP not yet implemented."
	160 Move W10, 52
	161 Move X9, [X9]
	162 NotImplemented "Instruction NOP not yet implemented."
	163 NotImplemented "Instruction MADD not yet implemented."
	164 Move [X8], S9
	165 Move [X8+8], S10
	166 Move [X8+8], S11
	167 Move [X8+16], S12
	168 Move [X8+16], S13
	169 Move [X8+24], S14
	170 Move [X8+24], S0
	171 Move [X8+32], S1
	172 Move [X8+32], S2
	173 Move [X8+40], S3
	174 Move [X8+40], W21
	175 Move [X8+44], W24
	176 Move [X8+48], W26
	177 Move X8, [X31+16]
	178 Move V0, [X19]
	179 Move X20, [X31+224]
	180 Move X19, [X31+232]
	181 Move X22, [X31+208]
	182 Move X21, [X31+216]
	183 Move V1, [X8]
	184 Move X24, [X31+192]
	185 Move X23, [X31+200]
	186 Move X26, [X31+176]
	187 Move X25, [X31+184]
	188 Move X28, [X31+160]
	189 Move X27, [X31+168]
	190 Move X29, [X31+144]
	191 Move X30, [X31+152]
	192 Move D9, [X31+128]
	193 Move D8, [X31+136]
	194 Move D11, [X31+112]
	195 Move D10, [X31+120]
	196 Move D13, [X31+96]
	197 Move D12, [X31+104]
	198 Move V14, [X31+80]
	199 NotImplemented "Instruction SCVTF not yet implemented."
	200 NotImplemented "Instruction FDIV not yet implemented."
	201 Move [X8], S0
	202 Add X31, X31, 240
	203 Return 

Method: System.Void CopyGraph(Unity.Collections.NativeArray`1<Unity.Mathematics.float2> srcPoints, System.Int32 srcPointCount, ref Unity.Collections.NativeArray`1<Unity.Mathematics.float2> dstPoints, ref System.Int32 dstPointCount, Unity.Collections.NativeArray`1<Unity.Mathematics.int2> srcEdges, System.Int32 srcEdgeCount, ref Unity.Collections.NativeArray`1<Unity.Mathematics.int2> dstEdges, ref System.Int32 dstEdgeCount)

Disassembly:
	0x03A2555C LDR X8, [X8 + 0xB8]
	0x03A25560 LDR X0, [X9]
	0x03A25564 LDR W20, [X8 + 0x14]
	0x03A25568 LDR W9, [X0 + 0xE0]
	0x03A2556C CBNZ W9, 0x3A25574
	0x03A25570 BL 0x1C16DFC
	0x03A25574 MOV W0, W28
	0x03A25578 MOV W1, W20
	0x03A2557C MOV X2, X31
	0x03A25580 BL 0x337EE94
	0x03A25584 FCMP S12, 0x0
	0x03A25588 MOV W28, W0
	0x03A2558C MOV X27, X21
	0x03A25590 B.NE 0x3A255B4
	0x03A25594 FCMP S10, 0x0
	0x03A25598 B.NE 0x3A256D0
	0x03A2559C MOV W20, W31
	0x03A255A0 LDR X28, [X31 + 0x78]
	0x03A255A4 B 0x3A2582C
	0x03A255A8 MOV X27, X21
	0x03A255AC TBZ X20, 0x0, 0x3A25884
	0x03A255B0 B 0x3A258F8
	0x03A255B4 STR X25, [X31 + 0x50]
	0x03A255B8 STP X24, X23, [X31 + 0x68]
	0x03A255BC ADRP X22, 0x72F000
	0x03A255C0 LDR X22, [X22 + 0x9D0]
	0x03A255C4 FMOV S0, 10
	0x03A255C8 ADD X25, X31, 0xDC
	0x03A255CC ADD X24, X31, 0x98
	0x03A255D0 ADD X21, X31, 0xE0
	0x03A255D4 FDIV S13, S12, S0
	0x03A255D8 ADD X23, X31, 0xEC
	0x03A255DC ADRP X20, 0x6F7000
	0x03A255E0 LDR X20, [X20 + 0xD8]
	0x03A255E4 LDR X0, [X20]
	0x03A255E8 LDR W8, [X0 + 0xE0]
	0x03A255EC CBNZ W8, 0x3A255F8
	0x03A255F0 BL 0x1C16DFC
	0x03A255F4 LDR X0, [X20]
	0x03A255F8 SUBS W28, W28, 0x1
	0x03A255FC B.LT 0x3A2581C
	0x03A25600 LDR X8, [X0 + 0xB8]
	0x03A25604 LDR V0, [X8]
	0x03A25608 SCVTF S0, S0
	0x03A2560C FCMP S12, S0
	0x03A25610 B.PL 0x3A2581C
	0x03A25614 LDR W8, [X0 + 0xE0]
	0x03A25618 CBNZ W8, 0x3A25620
	0x03A2561C BL 0x1C16DFC
	0x03A25620 LDR X5, [X31 + 0x88]
	0x03A25624 ADD X8, X31, 0xE8
	0x03A25628 ADD X3, X31, 0xB8
	0x03A2562C ADD X4, X31, 0xE4
	0x03A25630 STR X8, [X31 + 0x8]
	0x03A25634 ADD X8, X31, 0xC8
	0x03A25638 MOV X0, X26
	0x03A2563C MOV X1, X29
	0x03A25640 MOV W2, W29
	0x03A25644 MOV X6, X19
	0x03A25648 MOV W7, W19
	0x03A2564C STR X8, [X31]
	0x03A25650 BL 0x3A2455C
	0x03A25654 LDP X0, X1, [X31 + 0x100]

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X27, 0x9BE000
	014 Move X9, 0x6F8000
	015 Move W8, [X27+27]
	016 Move X28, [X31+96]
	017 Move X29, [X31+104]
	018 Move X9, [X9+216]
	019 Move W22, W7
	020 Move X24, X6
	021 Move X25, X5
	022 Move X26, X4
	023 Move X21, X3
	024 Move W19, W2
	025 Move X20, X1
	026 Move X23, X0
	027 Move TEMP, X8
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfEqual {44}
	031 Move X0, 0x730000
	032 Move X0, [X0+2464]
	033 Call 0x1C17CF4
	034 Move X0, 0x730000
	035 Move X0, [X0+2472]
	036 Call 0x1C17CF4
	037 Move X0, 0x6F8000
	038 Move X0, [X0+216]
	039 Call 0x1C17CF4
	040 Move X9, 0x6F8000
	041 Move X9, [X9+216]
	042 Move W8, 1
	043 Move [X27+27], W8
	044 Move [X29], W22
	045 Move [X26], W19
	046 Move X0, [X9]
	047 Move X27, [X28]
	048 Move X26, [X28+8]
	049 Move X29, 0x730000
	050 Move X28, 0x730000
	051 Move W8, [X0+224]
	052 Move X29, [X29+2472]
	053 Move X28, [X28+2464]
	054 Compare W8, 0
	055 JumpIfNotEqual {57}
	056 Call 0x1C17DFC
	057 Move X5, [X29]
	058 Move X0, X25
	059 Move X1, X24
	060 Move X2, X27
	061 Move X3, X26
	062 Move W4, W22
	063 Call ModuleHandle.Copy, X0, X1, X2
	064 Move X2, [X21]
	065 Move X3, [X21+8]
	066 Move X5, [X28]
	067 Move X0, X23
	068 Move X1, X20
	069 Move W4, W19
	070 Move X20, [X31+80]
	071 Move X19, [X31+88]
	072 Move X22, [X31+64]
	073 Move X21, [X31+72]
	074 Move X24, [X31+48]
	075 Move X23, [X31+56]
	076 Move X26, [X31+32]
	077 Move X25, [X31+40]
	078 Move X28, [X31+16]
	079 Move X27, [X31+24]
	080 Move X29, [X31+96]
	081 Move X30, [X31+104]
	082 Call ModuleHandle.Copy, X0, X1, X2
	083 Return 

Method: System.Void CopyGeometry(Unity.Collections.NativeArray`1<System.Int32> srcIndices, System.Int32 srcIndexCount, ref Unity.Collections.NativeArray`1<System.Int32> dstIndices, ref System.Int32 dstIndexCount, Unity.Collections.NativeArray`1<Unity.Mathematics.float2> srcVertices, System.Int32 srcVertexCount, ref Unity.Collections.NativeArray`1<Unity.Mathematics.float2> dstVertices, ref System.Int32 dstVertexCount)

Disassembly:
	0x03A25658 LDR W2, [X31 + 0x11C]
	0x03A2565C LDP X5, X6, [X31 + 0xF0]
	0x03A25660 LDR W7, [X31 + 0x118]
	0x03A25664 ADD X3, X31, 0xA8
	0x03A25668 ADD X4, X31, 0xE0
	0x03A2566C STP X24, X25, [X31]
	0x03A25670 BL 0x3A24658
	0x03A25674 LDR X0, [X22]
	0x03A25678 LDR W8, [X0 + 0xE0]
	0x03A2567C CBNZ W8, 0x3A25684
	0x03A25680 BL 0x1C16DFC
	0x03A25684 LDR W0, [X31 + 0x90]
	0x03A25688 ADD X1, X31, 0xB8
	0x03A2568C ADD X2, X31, 0xE4
	0x03A25690 ADD X3, X31, 0xC8
	0x03A25694 ADD X4, X31, 0xE8
	0x03A25698 ADD X5, X31, 0x98
	0x03A2569C ADD X6, X31, 0xDC
	0x03A256A0 ADD X7, X31, 0xA8
	0x03A256A4 MOV V0.16B, V10.16B
	0x03A256A8 MOV V1.16B, V12.16B
	0x03A256AC STP X23, X31, [X31 + 0x8]
	0x03A256B0 STR X21, [X31]
	0x03A256B4 BL 0x3AB7D10
	0x03A256B8 TBZ X0, 0x0, 0x3A256C8
	0x03A256BC LDP W20, W8, [X31 + 0xE0]
	0x03A256C0 CMP W20, W8
	0x03A256C4 B.GT 0x3A25960
	0x03A256C8 FADD S12, S13, S12
	0x03A256CC B 0x3A255DC
	0x03A256D0 CMP W28, 0x1
	0x03A256D4 MOV W20, W31
	0x03A256D8 B.LT 0x3A255A0
	0x03A256DC ADRP X8, 0xFFFFFFFFFD0C5000
	0x03A256E0 ADRP X9, 0xFFFFFFFFFD0C5000
	0x03A256E4 LDR V0, [X8 + 0x144]
	0x03A256E8 ADRP X10, 0xFFFFFFFFFD0C5000
	0x03A256EC LDR V1, [X9 + 0xEC]
	0x03A256F0 ADRP X11, 0xFFFFFFFFFD0C5000
	0x03A256F4 LDR V2, [X10 + 0x2C4]
	0x03A256F8 ADRP X12, 0xFFFFFFFFFD0C5000
	0x03A256FC LDR V3, [X11 + 0xBC]
	0x03A25700 FADD S0, S10, S0
	0x03A25704 LDR V13, [X12 + 0x5C]
	0x03A25708 FDIV S0, S0, S1
	0x03A2570C FMUL S0, S0, S2
	0x03A25710 FADD S10, S0, S3
	0x03A25714 FCMP S10, S13
	0x03A25718 B.PL 0x3A255A0
	0x03A2571C STR X25, [X31 + 0x50]
	0x03A25720 STP X24, X23, [X31 + 0x68]
	0x03A25724 ADRP X21, 0x72F000
	0x03A25728 LDR X21, [X21 + 0x9D0]
	0x03A2572C FMOV S0, 10
	0x03A25730 ADD X23, X31, 0xDC
	0x03A25734 ADD X24, X31, 0x98
	0x03A25738 ADD X25, X31, 0xE0
	0x03A2573C FDIV S14, S10, S0
	0x03A25740 ADD X22, X31, 0xEC
	0x03A25744 ADRP X8, 0x6F7000
	0x03A25748 LDR X8, [X8 + 0xD8]
	0x03A2574C LDR X0, [X8]
	0x03A25750 LDR W8, [X0 + 0xE0]

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X28, 0x9BE000
	014 Move X9, 0x6F8000
	015 Move W8, [X28+28]
	016 Move X27, [X31+96]
	017 Move X29, [X31+104]
	018 Move X9, [X9+216]
	019 Move W19, W7
	020 Move X20, X6
	021 Move X21, X5
	022 Move X26, X4
	023 Move X25, X3
	024 Move W22, W2
	025 Move X23, X1
	026 Move X24, X0
	027 Move TEMP, X8
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfEqual {44}
	031 Move X0, 0x730000
	032 Move X0, [X0+2480]
	033 Call 0x1C17CF4
	034 Move X0, 0x730000
	035 Move X0, [X0+2464]
	036 Call 0x1C17CF4
	037 Move X0, 0x6F8000
	038 Move X0, [X0+216]
	039 Call 0x1C17CF4
	040 Move X9, 0x6F8000
	041 Move X9, [X9+216]
	042 Move W8, 1
	043 Move [X28+28], W8
	044 Move [X26], W22
	045 Move [X29], W19
	046 Move X0, [X9]
	047 Move X29, 0x730000
	048 Move X28, 0x730000
	049 Move X26, [X25]
	050 Move X25, [X25+8]
	051 Move W8, [X0+224]
	052 Move X29, [X29+2480]
	053 Move X28, [X28+2464]
	054 Compare W8, 0
	055 JumpIfNotEqual {57}
	056 Call 0x1C17DFC
	057 Move X5, [X29]
	058 Move X0, X24
	059 Move X1, X23
	060 Move X2, X26
	061 Move X3, X25
	062 Move W4, W22
	063 Call 0x221EFD4, X0, X1, X2
	064 Move X2, [X27]
	065 Move X3, [X27+8]
	066 Move X5, [X28]
	067 Move X0, X21
	068 Move X1, X20
	069 Move W4, W19
	070 Move X20, [X31+80]
	071 Move X19, [X31+88]
	072 Move X22, [X31+64]
	073 Move X21, [X31+72]
	074 Move X24, [X31+48]
	075 Move X23, [X31+56]
	076 Move X26, [X31+32]
	077 Move X25, [X31+40]
	078 Move X28, [X31+16]
	079 Move X27, [X31+24]
	080 Move X29, [X31+96]
	081 Move X30, [X31+104]
	082 Call ModuleHandle.Copy, X0, X1, X2
	083 Return 

Method: System.Void TransferOutput(Unity.Collections.NativeArray`1<Unity.Mathematics.int2> srcEdges, System.Int32 srcEdgeCount, ref Unity.Collections.NativeArray`1<Unity.Mathematics.int2> dstEdges, ref System.Int32 dstEdgeCount, Unity.Collections.NativeArray`1<System.Int32> srcIndices, System.Int32 srcIndexCount, ref Unity.Collections.NativeArray`1<System.Int32> dstIndices, ref System.Int32 dstIndexCount, Unity.Collections.NativeArray`1<Unity.Mathematics.float2> srcVertices, System.Int32 srcVertexCount, ref Unity.Collections.NativeArray`1<Unity.Mathematics.float2> dstVertices, ref System.Int32 dstVertexCount)

Disassembly:
	0x03A25754 CBNZ W8, 0x3A2575C
	0x03A25758 BL 0x1C16DFC
	0x03A2575C LDR X5, [X31 + 0x88]
	0x03A25760 ADD X8, X31, 0xE8
	0x03A25764 ADD X3, X31, 0xB8
	0x03A25768 ADD X4, X31, 0xE4
	0x03A2576C STR X8, [X31 + 0x8]
	0x03A25770 ADD X8, X31, 0xC8
	0x03A25774 MOV X0, X26
	0x03A25778 MOV X1, X29
	0x03A2577C MOV W2, W29
	0x03A25780 MOV X6, X19
	0x03A25784 MOV W7, W19
	0x03A25788 STR X8, [X31]
	0x03A2578C BL 0x3A2455C
	0x03A25790 LDP X0, X1, [X31 + 0x100]
	0x03A25794 LDR W2, [X31 + 0x11C]
	0x03A25798 LDP X5, X6, [X31 + 0xF0]
	0x03A2579C LDR W7, [X31 + 0x118]
	0x03A257A0 ADD X3, X31, 0xA8
	0x03A257A4 ADD X4, X31, 0xE0
	0x03A257A8 STP X24, X23, [X31]
	0x03A257AC BL 0x3A24658
	0x03A257B0 LDR X0, [X21]
	0x03A257B4 LDR W8, [X0 + 0xE0]
	0x03A257B8 CBNZ W8, 0x3A257C0
	0x03A257BC BL 0x1C16DFC
	0x03A257C0 LDR W0, [X31 + 0x90]
	0x03A257C4 ADD X1, X31, 0xB8
	0x03A257C8 ADD X2, X31, 0xE4
	0x03A257CC ADD X3, X31, 0xC8
	0x03A257D0 ADD X4, X31, 0xE8
	0x03A257D4 ADD X5, X31, 0x98
	0x03A257D8 ADD X6, X31, 0xDC
	0x03A257DC ADD X7, X31, 0xA8
	0x03A257E0 MOV V0.16B, V10.16B
	0x03A257E4 MOV V1.16B, V12.16B
	0x03A257E8 STP X22, X31, [X31 + 0x8]
	0x03A257EC STR X25, [X31]
	0x03A257F0 BL 0x3AB7D10
	0x03A257F4 TBZ X0, 0x0, 0x3A25804
	0x03A257F8 LDP W20, W8, [X31 + 0xE0]
	0x03A257FC CMP W20, W8
	0x03A25800 B.GT 0x3A25960
	0x03A25804 CMP W28, 0x2
	0x03A25808 B.LT 0x3A2581C
	0x03A2580C FADD S10, S14, S10
	0x03A25810 FCMP S10, S13
	0x03A25814 SUB W28, W28, 0x1
	0x03A25818 B.MI 0x3A25744
	0x03A2581C LDP X23, X28, [X31 + 0x70]
	0x03A25820 LDR X24, [X31 + 0x68]
	0x03A25824 LDR X25, [X31 + 0x50]
	0x03A25828 MOV W20, W31
	0x03A2582C FMOV S10, W31
	0x03A25830 ADRP X21, 0x72F000
	0x03A25834 LDR X21, [X21 + 0x9C0]
	0x03A25838 ADD X0, X31, 0x98
	0x03A2583C LDR X1, [X21]
	0x03A25840 BL 0x23F8770
	0x03A25844 ADRP X8, 0x6F8000
	0x03A25848 LDR X8, [X8 + 0x148]
	0x03A2584C ADD X0, X31, 0xA8
	0x03A25850 LDR X1, [X8]
	0x03A25854 BL 0x23D5AD4
	0x03A25858 LDR X1, [X21]
	0x03A2585C ADD X0, X31, 0xB8
	0x03A25860 BL 0x23F8770
	0x03A25864 ADRP X8, 0x72F000
	0x03A25868 LDR X8, [X8 + 0x9B8]
	0x03A2586C ADD X0, X31, 0xC8
	0x03A25870 LDR X1, [X8]
	0x03A25874 BL 0x23FC198
	0x03A25878 LDR W10, [X31 + 0x64]
	0x03A2587C MOV V13.16B, V10.16B
	0x03A25880 TBNZ X20, 0x0, 0x3A258F8
	0x03A25884 EOR W8, W10, 0x1
	0x03A25888 TBNZ X8, 0x0, 0x3A258F8
	0x03A2588C ADRP X8, 0x6F7000
	0x03A25890 LDP X5, X22, [X31 + 0x100]
	0x03A25894 LDR X8, [X8 + 0xD8]
	0x03A25898 MOV X20, X27
	0x03A2589C MOV X27, X25
	0x03A258A0 MOV X29, X24
	0x03A258A4 LDR X0, [X8]
	0x03A258A8 MOV X26, X23
	0x03A258AC LDR W23, [X31 + 0x11C]

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+48], X29
	003 Move [X31+56], X30
	004 Move [X31+64], X28
	005 Move [X31+72], X27
	006 Move [X31+80], X26
	007 Move [X31+88], X25
	008 Move [X31+96], X24
	009 Move [X31+104], X23
	010 Move [X31+112], X22
	011 Move [X31+120], X21
	012 Move [X31+128], X20
	013 Move [X31+136], X19
	014 Move X10, [X31+168]
	015 Move X24, [X31+152]
	016 Move X8, [X31+160]
	017 Move [X31+16], X5
	018 Move [X31+24], X6
	019 Move X26, 0x9BE000
	020 Move X20, [X31+184]
	021 Move X23, [X31+192]
	022 Move [X31+32], X8
	023 Move [X31+40], X10
	024 Move X10, 0x6F8000
	025 Move W22, [X31+176]
	026 Move W8, [X26+29]
	027 Move X21, [X31+144]
	028 Move X10, [X10+216]
	029 Move W19, W7
	030 Move X29, X4
	031 Move X28, X3
	032 Move W25, W2
	033 Move X9, X0
	034 Move TEMP, X8
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfEqual {58}
	038 Move X0, 0x730000
	039 Move X0, [X0+2480]
	040 Move [X31+8], X9
	041 Move X27, X1
	042 Call 0x1C17CF4
	043 Move X0, 0x730000
	044 Move X0, [X0+2464]
	045 Call 0x1C17CF4
	046 Move X0, 0x730000
	047 Move X0, [X0+2472]
	048 Call 0x1C17CF4
	049 Move X0, 0x6F8000
	050 Move X0, [X0+216]
	051 Call 0x1C17CF4
	052 Move X10, 0x6F8000
	053 Move X10, [X10+216]
	054 Move X9, [X31+8]
	055 Move X1, X27
	056 Move W8, 1
	057 Move [X26+29], W8
	058 Move [X29], W25
	059 Move [X24], W19
	060 Move [X23], W22
	061 Move X0, [X10]
	062 Move X26, 0x730000
	063 Move X24, 0x730000
	064 Move X23, 0x730000
	065 Move W8, [X0+224]
	066 Move X29, [X28]
	067 Move X28, [X28+8]
	068 Move X26, [X26+2472]
	069 Move X24, [X24+2480]
	070 Move X23, [X23+2464]
	071 Compare W8, 0
	072 JumpIfNotEqual {80}
	073 Move X23, X9
	074 Move X27, X1
	075 Call 0x1C17DFC
	076 Move X9, X23
	077 Move X23, 0x730000
	078 Move X23, [X23+2464]
	079 Move X1, X27
	080 Move X5, [X26]
	081 Move X0, X9
	082 Move X2, X29
	083 Move X3, X28
	084 Move W4, W25
	085 Call ModuleHandle.Copy, X0, X1, X2
	086 Move X2, [X21]
	087 Move X3, [X21+8]
	088 Move X5, [X24]
	089 Move X0, [X31+16]
	090 Move X1, [X31+24]
	091 Move W4, W19
	092 Call 0x221EFD4, X0, X1, X2
	093 Move X2, [X20]
	094 Move X3, [X20+8]
	095 Move X5, [X23]
	096 Move X0, [X31+32]
	097 Move X1, [X31+40]
	098 Move W4, W22
	099 Move X20, [X31+128]
	100 Move X19, [X31+136]
	101 Move X22, [X31+112]
	102 Move X21, [X31+120]
	103 Move X24, [X31+96]
	104 Move X23, [X31+104]
	105 Move X26, [X31+80]
	106 Move X25, [X31+88]
	107 Move X28, [X31+64]
	108 Move X27, [X31+72]
	109 Move X29, [X31+48]
	110 Move X30, [X31+56]
	111 Add X31, X31, 144
	112 Call ModuleHandle.Copy, X0, X1, X2
	113 Return 

Method: System.Void GraphConditioner(Unity.Collections.NativeArray`1<Unity.Mathematics.float2> points, ref Unity.Collections.NativeArray`1<Unity.Mathematics.float2> pgPoints, ref System.Int32 pgPointCount, ref Unity.Collections.NativeArray`1<Unity.Mathematics.int2> pgEdges, ref System.Int32 pgEdgeCount, System.Boolean resetTopology)

Disassembly:
	0x03A258B0 LDP X21, X24, [X31 + 0xF0]
	0x03A258B4 LDR W8, [X0 + 0xE0]
	0x03A258B8 LDR W25, [X31 + 0x118]
	0x03A258BC CBNZ W8, 0x3A258CC
	0x03A258C0 STR X5, [X31 + 0x90]
	0x03A258C4 BL 0x1C16DFC
	0x03A258C8 LDR X5, [X31 + 0x90]
	0x03A258CC LDP X3, X0, [X31 + 0x80]
	0x03A258D0 MOV X1, X19
	0x03A258D4 MOV W2, W19
	0x03A258D8 MOV X4, X28
	0x03A258DC MOV X6, X22
	0x03A258E0 MOV W7, W23
	0x03A258E4 STP X26, X29, [X31 + 0x28]
	0x03A258E8 STR W25, [X31 + 0x20]
	0x03A258EC STP X21, X24, [X31 + 0x10]
	0x03A258F0 STP X20, X27, [X31]
	0x03A258F4 BL 0x3A24754
	0x03A258F8 ADRP X8, 0x72F000
	0x03A258FC LDR X8, [X8 + 0x9C0]
	0x03A25900 ADD X0, X31, 0xF0
	0x03A25904 LDR X1, [X8]
	0x03A25908 BL 0x23F8770
	0x03A2590C ADRP X8, 0x6F8000
	0x03A25910 LDR X8, [X8 + 0x148]
	0x03A25914 ADD X0, X31, 0x100
	0x03A25918 LDR X1, [X8]
	0x03A2591C BL 0x23D5AD4
	0x03A25920 MOV V0.16B, V13.16B
	0x03A25924 MOV V1.16B, V11.16B
	0x03A25928 MOV V2.16B, V8.16B
	0x03A2592C MOV V3.16B, V9.16B
	0x03A25930 LDP X20, X19, [X31 + 0x1A0]
	0x03A25934 LDP X22, X21, [X31 + 0x190]
	0x03A25938 LDP X24, X23, [X31 + 0x180]
	0x03A2593C LDP X26, X25, [X31 + 0x170]
	0x03A25940 LDP X28, X27, [X31 + 0x160]
	0x03A25944 LDP X29, X30, [X31 + 0x150]
	0x03A25948 LDP D9, D8, [X31 + 0x140]
	0x03A2594C LDP D11, D10, [X31 + 0x130]
	0x03A25950 LDP D13, D12, [X31 + 0x120]
	0x03A25954 LDR V14, [X31 + 0x110]
	0x03A25958 ADD X31, X31, 0x1B0
	0x03A2595C RET
	0x03A25960 ADRP X8, 0x6F7000
	0x03A25964 LDP X22, X23, [X31 + 0xC8]
	0x03A25968 LDR W26, [X31 + 0xE8]
	0x03A2596C LDR X8, [X8 + 0xD8]
	0x03A25970 LDP X29, X28, [X31 + 0xA8]
	0x03A25974 LDP X21, X24, [X31 + 0x98]
	0x03A25978 LDR W25, [X31 + 0xDC]
	0x03A2597C LDR X0, [X8]
	0x03A25980 LDR W8, [X0 + 0xE0]
	0x03A25984 CBNZ W8, 0x3A2598C
	0x03A25988 BL 0x1C16DFC
	0x03A2598C LDR X9, [X31 + 0x68]
	0x03A25990 LDP X8, X4, [X31 + 0x70]
	0x03A25994 STR W25, [X31 + 0x20]
	0x03A25998 LDR X25, [X31 + 0x50]
	0x03A2599C LDR X3, [X31 + 0x80]
	0x03A259A0 MOV X0, X22
	0x03A259A4 MOV X1, X23
	0x03A259A8 MOV W2, W26
	0x03A259AC MOV X5, X29
	0x03A259B0 MOV X6, X28
	0x03A259B4 MOV W7, W20
	0x03A259B8 STP X8, X9, [X31 + 0x28]
	0x03A259BC STP X21, X24, [X31 + 0x10]
	0x03A259C0 STP X27, X25, [X31]
	0x03A259C4 MOV X28, X4
	0x03A259C8 BL 0x3A24754
	0x03A259CC ADRP X9, 0x6F7000
	0x03A259D0 LDR X9, [X9 + 0xD8]
	0x03A259D4 FCMP S10, 0x0
	0x03A259D8 B.EQ 0x3A25A10
	0x03A259DC LDR X0, [X9]
	0x03A259E0 LDR W20, [X31 + 0x118]
	0x03A259E4 LDR W8, [X0 + 0xE0]
	0x03A259E8 CBNZ W8, 0x3A259F0
	0x03A259EC BL 0x1C16DFC
	0x03A259F0 ADD X1, X31, 0xA8
	0x03A259F4 ADD X2, X31, 0xE0
	0x03A259F8 ADD X3, X31, 0x98
	0x03A259FC ADD X4, X31, 0xDC
	0x03A25A00 MOV W0, W20
	0x03A25A04 BL 0x3A24BC4
	0x03A25A08 ADRP X9, 0x6F7000
	0x03A25A0C LDR X9, [X9 + 0xD8]
	0x03A25A10 LDR X0, [X9]
	0x03A25A14 LDR W20, [X31 + 0x1D0]
	0x03A25A18 LDR W8, [X0 + 0xE0]
	0x03A25A1C CBNZ W8, 0x3A25A2C
	0x03A25A20 MOV X21, X9
	0x03A25A24 BL 0x1C16DFC
	0x03A25A28 LDR X0, [X21]
	0x03A25A2C LDR X8, [X0 + 0xB8]
	0x03A25A30 FMOV S11, W31
	0x03A25A34 LDR W8, [X8 + 0x18]
	0x03A25A38 CMP W8, W20
	0x03A25A3C CSEL W21, W8, W20, LT
	0x03A25A40 CMP W21, 0x1
	0x03A25A44 B.LT 0x3A25B38
	0x03A25A48 STR X19, [X31 + 0x58]
	0x03A25A4C ADRP X8, 0x72F000
	0x03A25A50 LDR X8, [X8 + 0x9D8]
	0x03A25A54 LDP W20, W26, [X31 + 0xE4]
	0x03A25A58 LDP X22, X23, [X31 + 0xC8]
	0x03A25A5C LDR X0, [X8]
	0x03A25A60 LDR W8, [X0 + 0xE0]
	0x03A25A64 CBNZ W8, 0x3A25A6C
	0x03A25A68 BL 0x1C16DFC
	0x03A25A6C LDR W0, [X31 + 0x90]
	0x03A25A70 ADD X8, X31, 0xE0
	0x03A25A74 ADD X1, X31, 0xB8
	0x03A25A78 ADD X6, X31, 0x98
	0x03A25A7C ADD X7, X31, 0xDC
	0x03A25A80 STP X8, X31, [X31 + 0x8]
	0x03A25A84 ADD X8, X31, 0xA8
	0x03A25A88 MOV W2, W20
	0x03A25A8C MOV X3, X22
	0x03A25A90 MOV X4, X23
	0x03A25A94 MOV W5, W26
	0x03A25A98 STR X8, [X31]
	0x03A25A9C BL 0x3AB8864
	0x03A25AA0 TBZ X0, 0x0, 0x3A25B30
	0x03A25AA4 ADRP X8, 0x6F7000
	0x03A25AA8 LDP X28, X29, [X31 + 0xC8]
	0x03A25AAC LDR W23, [X31 + 0xE8]
	0x03A25AB0 LDP X5, X26, [X31 + 0xA8]
	0x03A25AB4 LDR X8, [X8 + 0xD8]
	0x03A25AB8 MOV X20, X25
	0x03A25ABC MOV X19, X27
	0x03A25AC0 LDP W27, W22, [X31 + 0xDC]
	0x03A25AC4 LDR X0, [X8]
	0x03A25AC8 LDP X25, X24, [X31 + 0x98]
	0x03A25ACC LDR W8, [X0 + 0xE0]
	0x03A25AD0 CBNZ W8, 0x3A25AE0
	0x03A25AD4 STR X5, [X31 + 0x50]
	0x03A25AD8 BL 0x1C16DFC
	0x03A25ADC LDR X5, [X31 + 0x50]
	0x03A25AE0 MOV X0, X28
	0x03A25AE4 LDP X28, X3, [X31 + 0x78]
	0x03A25AE8 LDR X9, [X31 + 0x68]
	0x03A25AEC LDR X8, [X31 + 0x70]
	0x03A25AF0 MOV X1, X29
	0x03A25AF4 MOV W2, W23
	0x03A25AF8 MOV X4, X28
	0x03A25AFC MOV X6, X26
	0x03A25B00 MOV W7, W22
	0x03A25B04 SCVTF S11, W21
	0x03A25B08 STP X8, X9, [X31 + 0x28]
	0x03A25B0C STR W27, [X31 + 0x20]
	0x03A25B10 STP X25, X24, [X31 + 0x10]
	0x03A25B14 MOV X25, X20
	0x03A25B18 STP X19, X20, [X31]
	0x03A25B1C MOV X27, X19
	0x03A25B20 BL 0x3A24754
	0x03A25B24 LDR X19, [X31 + 0x58]
	0x03A25B28 SUBS W21, W21, 0x1
	0x03A25B2C B.GT 0x3A25A4C
	0x03A25B30 FCMP S11, 0x0
	0x03A25B34 B.NE 0x3A25B40
	0x03A25B38 LDP X24, X23, [X31 + 0x68]
	0x03A25B3C B 0x3A25B78
	0x03A25B40 ADRP X8, 0x6F7000

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X27, 0x9BE000
	012 Move X26, 0x6FA000
	013 Move W8, [X27+30]
	014 Move X26, [X26+2096]
	015 Move W23, W6
	016 Move X20, X5
	017 Move X19, X4
	018 Move X22, X3
	019 Move X21, X2
	020 Move X25, X1
	021 Move X24, X0
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {31}
	026 Move X0, 0x6FA000
	027 Move X0, [X0+2096]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X27+30], W8
	031 Move X8, [X26]
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move X8, [X8+184]
	034 Move S0, [X8]
	035 Move S2, [X8+4]
	036 Move W8, 0x7F800000
	037 Move S1, W8
	038 And X9, X25, 0
	039 Add X10, X24, 4
	040 Move V3, V1
	041 Move S4, [X10-4]
	042 Move S5, [X10]
	043 Move W11, S3
	044 And W11, W11, 0x7FFFFFFF
	045 Add X10, X10, 8
	046 NotImplemented "Instruction FCMP not yet implemented."
	047 NotImplemented "Instruction CCMP not yet implemented."
	048 Move W11, S1
	049 And W11, W11, 0x7FFFFFFF
	050 NotImplemented "Instruction FCSEL not yet implemented."
	051 NotImplemented "Instruction FCMP not yet implemented."
	052 NotImplemented "Instruction CCMP not yet implemented."
	053 Move W11, S0
	054 And W11, W11, 0x7FFFFFFF
	055 NotImplemented "Instruction FCSEL not yet implemented."
	056 NotImplemented "Instruction FCMP not yet implemented."
	057 NotImplemented "Instruction CCMP not yet implemented."
	058 Move W11, S2
	059 And W11, W11, 0x7FFFFFFF
	060 NotImplemented "Instruction FCSEL not yet implemented."
	061 NotImplemented "Instruction FCMP not yet implemented."
	062 NotImplemented "Instruction CCMP not yet implemented."
	063 NotImplemented "Instruction FCSEL not yet implemented."
	064 Subtract X9, X9, 1
	065 Move TEMP, X23
	066 And TEMP, TEMP, 1
	067 Compare TEMP, 1
	068 JumpIfNotEqual {76}
	069 Move W8, W31
	070 Move S3, W8
	071 Move V1, V3
	072 Move TEMP, X23
	073 And TEMP, TEMP, 1
	074 Compare TEMP, 1
	075 JumpIfEqual {69}
	076 Move W8, [X22]
	077 Add W9, W8, 1
	078 Move [X22], W9
	079 Move X10, [X21]
	080 Move X11, -49520640
	081 Move V6, [X11+752]
	082 Subtract S4, S2, S1
	083 Add X10, X10, W8
	084 Move [X10], S3
	085 Move [X10+8], S1
	086 NotImplemented "Instruction LDRSW not yet implemented."
	087 Move S5, 0.5
	088 Multiply S4, S4, S5
	089 Add S4, S1, S4
	090 Add W11, W10, 1
	091 Move [X22], W11
	092 Move X11, [X21]
	093 Add S7, S3, S6
	094 Move W12, 8
	095 Move X24, [X31+32]
	096 Move X23, [X31+40]
	097 Add X10, X11, X10
	098 Move [X10], S7
	099 Move [X10+8], S4
	100 NotImplemented "Instruction LDRSW not yet implemented."
	101 Subtract S7, S0, S3
	102 Multiply S5, S7, S5
	103 Move X26, [X31+16]
	104 Move X25, [X31+24]
	105 Add W11, W10, 1
	106 Move [X22], W11
	107 Move X11, [X21]
	108 Add X10, X11, X10
	109 Move [X10], S3
	110 Move [X10+8], S2
	111 NotImplemented "Instruction LDRSW not yet implemented."
	112 Move X11, -49524736
	113 Move V16, [X11+3880]
	114 Add S3, S3, S5
	115 Add W11, W10, 1
	116 Move [X22], W11
	117 Move X11, [X21]
	118 Add S5, S2, S16
	119 Add X10, X11, X10
	120 Move [X10], S3
	121 Move [X10+8], S5
	122 NotImplemented "Instruction LDRSW not yet implemented."
	123 Add W11, W10, 1
	124 Move [X22], W11
	125 Move X11, [X21]
	126 Add X10, X11, X10
	127 Move [X10], S0
	128 Move [X10+8], S2
	129 NotImplemented "Instruction LDRSW not yet implemented."
	130 Add S2, S0, S16
	131 Add W11, W10, 1
	132 Move [X22], W11
	133 Move X11, [X21]
	134 Add X10, X11, X10
	135 Move [X10], S2
	136 Move [X10+8], S4
	137 NotImplemented "Instruction LDRSW not yet implemented."
	138 Add W11, W10, 1
	139 Move [X22], W11
	140 Move X11, [X21]
	141 Add X10, X11, X10
	142 Move [X10], S0
	143 Move [X10+8], S1
	144 NotImplemented "Instruction LDRSW not yet implemented."
	145 Add S0, S1, S6
	146 Add W11, W10, 1
	147 Move [X22], W11
	148 Move X11, [X21]
	149 Move X22, [X31+48]
	150 Move X21, [X31+56]
	151 Add X10, X11, X10
	152 Move [X10], S3
	153 Move [X10+8], S0
	154 Move [X20], W12
	155 Move X10, [X19]
	156 Move W11, W8
	157 Move X12, X11
	158 NotImplemented "Instruction BFM not yet implemented."
	159 Move [X10], X12
	160 Move X10, [X19]
	161 Add W12, W8, 2
	162 NotImplemented "Instruction BFM not yet implemented."
	163 Move [X10+8], X9
	164 Move X9, [X19]
	165 Add W10, W8, 3
	166 NotImplemented "Instruction BFM not yet implemented."
	167 Move [X9+16], X12
	168 Move X9, [X19]
	169 Add W12, W8, 4
	170 NotImplemented "Instruction BFM not yet implemented."
	171 Move [X9+24], X10
	172 Move X9, [X19]
	173 Add W10, W8, 5
	174 NotImplemented "Instruction BFM not yet implemented."
	175 Move [X9+32], X12
	176 Move X9, [X19]
	177 Add W12, W8, 6
	178 NotImplemented "Instruction BFM not yet implemented."
	179 Add W8, W8, 7
	180 Move [X9+40], X10
	181 Move X9, [X19]
	182 NotImplemented "Instruction BFM not yet implemented."
	183 NotImplemented "Instruction BFM not yet implemented."
	184 Move [X9+48], X12
	185 Move X9, [X19]
	186 Move X20, [X31+64]
	187 Move X19, [X31+72]
	188 Move [X9+56], X8
	189 Move X30, [X31+80]
	190 Move X27, [X31+88]
	191 Return 

Method: System.Void Reorder(System.Int32 startVertexCount, System.Int32 index, ref Unity.Collections.NativeArray`1<System.Int32> indices, ref System.Int32 indexCount, ref Unity.Collections.NativeArray`1<Unity.Mathematics.float2> vertices, ref System.Int32 vertexCount)

Disassembly:
	0x03A25B44 LDR X8, [X8 + 0xD8]
	0x03A25B48 LDR W20, [X31 + 0x118]
	0x03A25B4C LDP X24, X23, [X31 + 0x68]
	0x03A25B50 LDR X0, [X8]
	0x03A25B54 LDR W8, [X0 + 0xE0]
	0x03A25B58 CBNZ W8, 0x3A25B60
	0x03A25B5C BL 0x1C16DFC
	0x03A25B60 MOV W0, W20
	0x03A25B64 MOV X1, X27
	0x03A25B68 MOV X2, X25
	0x03A25B6C MOV X3, X23
	0x03A25B70 MOV X4, X24
	0x03A25B74 BL 0x3A24BC4
	0x03A25B78 MOVZ W20, 0x1
	0x03A25B7C B 0x3A25830
	0x03A25B80 STR X30, [X31 - 0x20]!
	0x03A25B84 STP X20, X19, [X31 + 0x10]
	0x03A25B88 ADRP X19, 0x9BD000
	0x03A25B8C ADRP X20, 0x6F7000
	0x03A25B90 LDRB W8, [X19 + 0x23]
	0x03A25B94 LDR X20, [X20 + 0xD8]
	0x03A25B98 TBNZ X8, 0x0, 0x3A25BB0
	0x03A25B9C ADRP X0, 0x6F7000
	0x03A25BA0 LDR X0, [X0 + 0xD8]
	0x03A25BA4 BL 0x1C16CF4
	0x03A25BA8 MOVZ W8, 0x1
	0x03A25BAC STRB W8, [X19 + 0x23]
	0x03A25BB0 LDR X8, [X20]
	0x03A25BB4 ADRP X9, 0xFFFFFFFFFD0C8000
	0x03A25BB8 LDR V0, [X9 + 0xDF0]
	0x03A25BBC MOVZ X9, 0x100
	0x03A25BC0 LDR X8, [X8 + 0xB8]

ISIL:
	001 NotImplemented "Instruction LDRSW not yet implemented."
	002 NotImplemented "Instruction CMP not yet implemented."
	003 Move X9, [X2]
	004 Move X10, X31
	005 Move W11, [X9]
	006 NotImplemented "Instruction CMP not yet implemented."
	007 Add X10, X10, 1
	008 NotImplemented "Instruction CMP not yet implemented."
	009 Move W8, [X5]
	010 Subtract W8, W8, 1
	011 Move [X5], W8
	012 Move X9, [X4]
	013 Move X8, [X9]
	014 Move [X9], X8
	015 Move W8, [X3]
	016 NotImplemented "Instruction CMP not yet implemented."
	017 Move X9, [X2]
	018 Move X10, X31
	019 Move W11, [X9]
	020 Move W12, [X5]
	021 NotImplemented "Instruction CMP not yet implemented."
	022 Move [X9], W1
	023 Move W8, [X3]
	024 Add X10, X10, 1
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Return 

Method: System.Void VertexCleanupConditioner(System.Int32 startVertexCount, ref Unity.Collections.NativeArray`1<System.Int32> indices, ref System.Int32 indexCount, ref Unity.Collections.NativeArray`1<Unity.Mathematics.float2> vertices, ref System.Int32 vertexCount)

Disassembly:
	0x03A25BC4 LDP X20, X19, [X31 + 0x10]
	0x03A25BC8 MOVK X9, 0x999A
	0x03A25BCC MOVI V1.4S, 0x1, 0x10
	0x03A25BD0 MOVK X9, 0x3F990000
	0x03A25BD4 STR V1, [X8]
	0x03A25BD8 STR D0, [X8 + 0x10]
	0x03A25BDC STR X9, [X8 + 0x18]
	0x03A25BE0 LDR X30, [X31], #0x20
	0x03A25BE4 RET
	0x03A25BE8 STR X30, [X31 - 0x20]!
	0x03A25BEC STP X20, X19, [X31 + 0x10]
	0x03A25BF0 ADRP X19, 0x9BD000
	0x03A25BF4 ADRP X20, 0x72F000
	0x03A25BF8 LDRB W8, [X19 + 0x24]
	0x03A25BFC LDR X20, [X20 + 0x978]
	0x03A25C00 TBNZ X8, 0x0, 0x3A25C18
	0x03A25C04 ADRP X0, 0x72F000
	0x03A25C08 LDR X0, [X0 + 0x978]
	0x03A25C0C BL 0x1C16CF4
	0x03A25C10 MOVZ W8, 0x1
	0x03A25C14 STRB W8, [X19 + 0x24]
	0x03A25C18 LDR X0, [X20]
	0x03A25C1C BL 0x1C16F10
	0x03A25C20 MOV X1, X31
	0x03A25C24 MOV X19, X0
	0x03A25C28 BL 0x33BDD8C
	0x03A25C2C LDR X8, [X20]
	0x03A25C30 LDR X8, [X8 + 0xB8]
	0x03A25C34 STR X19, [X8]
	0x03A25C38 LDP X20, X19, [X31 + 0x10]
	0x03A25C3C LDR X30, [X31], #0x20
	0x03A25C40 RET
	0x03A25C44 MOV X1, X31
	0x03A25C48 B 0x33BDD8C
	0x03A25C4C STR X30, [X31 - 0x20]!
	0x03A25C50 STP X20, X19, [X31 + 0x10]
	0x03A25C54 ADRP X20, 0x9BD000
	0x03A25C58 LDRB W8, [X20 + 0x25]
	0x03A25C5C MOV X19, X1
	0x03A25C60 TBNZ X8, 0x0, 0x3A25C78
	0x03A25C64 ADRP X0, 0x72E000

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0x9BE000
	009 Move W8, [X24+31]
	010 Move X19, X4
	011 Move X20, X3
	012 Move X21, X2
	013 Move X22, X1
	014 Move W23, W0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {24}
	019 Move X0, 0x6F8000
	020 Move X0, [X0+216]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X24+31], W8
	024 Move W8, [X19]
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move X24, 0x6F8000
	027 Move X24, [X24+216]
	028 Move X0, [X24]
	029 Move W8, [X0+224]
	030 Compare W8, 0
	031 JumpIfNotEqual {33}
	032 Call 0x1C17DFC
	033 Move W1, W23
	034 Move X2, X22
	035 Move X3, X21
	036 Move X4, X20
	037 Move X5, X19
	038 Call ModuleHandle.Reorder, X0, X1, X2, X3, X4, X5
	039 Move W8, [X19]
	040 Add W23, W23, 1
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Move X20, [X31+48]
	043 Move X19, [X31+56]
	044 Move X22, [X31+32]
	045 Move X21, [X31+40]
	046 Move X24, [X31+16]
	047 Move X23, [X31+24]
	048 Move X30, [X31+64]
	049 Return 

Method: Unity.Mathematics.float4 ConvexQuad(Unity.Collections.Allocator allocator, Unity.Collections.NativeArray`1<Unity.Mathematics.float2> points, Unity.Collections.NativeArray`1<Unity.Mathematics.int2> edges, ref Unity.Collections.NativeArray`1<Unity.Mathematics.float2> outVertices, ref System.Int32 outVertexCount, ref Unity.Collections.NativeArray`1<System.Int32> outIndices, ref System.Int32 outIndexCount, ref Unity.Collections.NativeArray`1<Unity.Mathematics.int2> outEdges, ref System.Int32 outEdgeCount)

Disassembly:
	0x03A25C68 LDR X0, [X0 + 0xFE8]
	0x03A25C6C BL 0x1C16CF4
	0x03A25C70 MOVZ W8, 0x1
	0x03A25C74 STRB W8, [X20 + 0x25]
	0x03A25C78 CBZ X19, 0x3A25C9C
	0x03A25C7C ADRP X8, 0x72E000
	0x03A25C80 LDR X8, [X8 + 0xFE8]
	0x03A25C84 LDR X9, [X19]
	0x03A25C88 LDR X8, [X8]
	0x03A25C8C LDRB W11, [X9 + 0x130]
	0x03A25C90 LDRB W10, [X8 + 0x130]
	0x03A25C94 CMP W11, W10
	0x03A25C98 B.CS 0x3A25CA4
	0x03A25C9C MOV W0, W31
	0x03A25CA0 B 0x3A25CB8
	0x03A25CA4 LDR X9, [X9 + 0xC8]
	0x03A25CA8 ADD X9, X9, X10, 0x3, LSL
	0x03A25CAC LDUR X9, [X9 - 0x8]
	0x03A25CB0 CMP X9, X8
	0x03A25CB4 CSET W0, EQ
	0x03A25CB8 LDP X20, X19, [X31 + 0x10]
	0x03A25CBC LDR X30, [X31], #0x20
	0x03A25CC0 RET
	0x03A25CC4 STR X30, [X31 - 0x10]!
	0x03A25CC8 CBZ X1, 0x3A25CE0
	0x03A25CCC LDR W8, [X1 + 0x10]
	0x03A25CD0 CMP W8, 0x258
	0x03A25CD4 CSET W0, EQ
	0x03A25CD8 LDR X30, [X31], #0x10
	0x03A25CDC RET
	0x03A25CE0 BL 0x1C16F20
	0x03A25CE4 LDR V0, [X0 + 0x4C]
	0x03A25CE8 RET
	0x03A25CEC LDR V0, [X0 + 0x50]
	0x03A25CF0 RET
	0x03A25CF4 LDR X0, [X0 + 0x58]
	0x03A25CF8 RET
	0x03A25CFC LDRB W0, [X0 + 0x60]
	0x03A25D00 RET
	0x03A25D04 LDR X0, [X0 + 0xE8]
	0x03A25D08 RET
	0x03A25D0C LDR X0, [X0 + 0x78]
	0x03A25D10 RET
	0x03A25D14 LDR X0, [X0 + 0x80]
	0x03A25D18 RET
	0x03A25D1C LDR X0, [X0 + 0x88]
	0x03A25D20 RET
	0x03A25D24 LDR X0, [X0 + 0x90]
	0x03A25D28 RET
	0x03A25D2C LDR X0, [X0 + 0x98]
	0x03A25D30 RET
	0x03A25D34 LDR X0, [X0 + 0xA0]
	0x03A25D38 RET
	0x03A25D3C LDR X0, [X0 + 0x98]
	0x03A25D40 RET
	0x03A25D44 LDR X0, [X0 + 0xA8]
	0x03A25D48 RET
	0x03A25D4C LDR X0, [X0 + 0xB0]
	0x03A25D50 RET
	0x03A25D54 LDR X0, [X0 + 0xE0]
	0x03A25D58 RET
	0x03A25D5C STR X1, [X0 + 0xE0]
	0x03A25D60 RET
	0x03A25D64 LDR X0, [X0 + 0xC0]
	0x03A25D68 RET
	0x03A25D6C LDR X0, [X0 + 0xC8]
	0x03A25D70 RET
	0x03A25D74 LDR X0, [X0 + 0xD0]
	0x03A25D78 RET
	0x03A25D7C LDR X0, [X0 + 0xB8]
	0x03A25D80 RET
	0x03A25D84 LDR W0, [X0 + 0x3C]
	0x03A25D88 RET
	0x03A25D8C LDP S0, S1, [X0 + 0x40]
	0x03A25D90 LDR V2, [X0 + 0x48]
	0x03A25D94 RET
	0x03A25D98 LDR W0, [X0 + 0x6C]
	0x03A25D9C RET
	0x03A25DA0 LDR W0, [X0 + 0x70]
	0x03A25DA4 RET
	0x03A25DA8 LDRB W0, [X0 + 0x61]
	0x03A25DAC RET
	0x03A25DB0 LDR W0, [X0 + 0x64]
	0x03A25DB4 RET
	0x03A25DB8 LDR W0, [X0 + 0x68]
	0x03A25DBC RET
	0x03A25DC0 STP X30, X21, [X31 - 0x20]!
	0x03A25DC4 STP X20, X19, [X31 + 0x10]
	0x03A25DC8 ADRP X20, 0x9BD000
	0x03A25DCC ADRP X21, 0x72F000
	0x03A25DD0 LDRB W8, [X20 + 0x26]
	0x03A25DD4 LDR X21, [X21 + 0x920]
	0x03A25DD8 MOV X19, X0
	0x03A25DDC TBNZ X8, 0x0, 0x3A25DF4
	0x03A25DE0 ADRP X0, 0x72F000
	0x03A25DE4 LDR X0, [X0 + 0x920]
	0x03A25DE8 BL 0x1C16CF4
	0x03A25DEC MOVZ W8, 0x1
	0x03A25DF0 STRB W8, [X20 + 0x26]
	0x03A25DF4 LDR X0, [X21]
	0x03A25DF8 BL 0x1C16F10
	0x03A25DFC MOV X1, X19
	0x03A25E00 MOV X2, X31
	0x03A25E04 MOV X20, X0
	0x03A25E08 BL 0x3A214AC
	0x03A25E0C MOV X0, X20
	0x03A25E10 LDP X20, X19, [X31 + 0x10]
	0x03A25E14 LDP X30, X21, [X31], #0x20
	0x03A25E18 RET
	0x03A25E1C SUB X31, X31, 0x80
	0x03A25E20 STP X30, X27, [X31 + 0x30]
	0x03A25E24 STP X26, X25, [X31 + 0x40]
	0x03A25E28 STP X24, X23, [X31 + 0x50]
	0x03A25E2C STP X22, X21, [X31 + 0x60]
	0x03A25E30 STP X20, X19, [X31 + 0x70]
	0x03A25E34 ADRP X20, 0x9BD000
	0x03A25E38 LDRB W8, [X20 + 0x27]
	0x03A25E3C MOV X19, X0
	0x03A25E40 TBNZ X8, 0x0, 0x3A25EA0
	0x03A25E44 ADRP X0, 0x6F6000
	0x03A25E48 LDR X0, [X0 + 0x8F8]
	0x03A25E4C BL 0x1C16CF4
	0x03A25E50 ADRP X0, 0x72F000
	0x03A25E54 LDR X0, [X0 + 0x9E0]
	0x03A25E58 BL 0x1C16CF4
	0x03A25E5C ADRP X0, 0x72F000
	0x03A25E60 LDR X0, [X0 + 0x9E8]
	0x03A25E64 BL 0x1C16CF4

ISIL:
	001 Subtract X31, X31, 192
	002 Move [X31+64], D11
	003 Move [X31+72], D10
	004 Move [X31+80], D9
	005 Move [X31+88], D8
	006 Move [X31+96], X30
	007 Move [X31+112], X28
	008 Move [X31+120], X27
	009 Move [X31+128], X26
	010 Move [X31+136], X25
	011 Move [X31+144], X24
	012 Move [X31+152], X23
	013 Move [X31+160], X22
	014 Move [X31+168], X21
	015 Move [X31+176], X20
	016 Move [X31+184], X19
	017 Move X28, 0x9BE000
	018 Move X27, 0x6FA000
	019 Move X26, [X31+208]
	020 Move W8, [X28+32]
	021 Move X25, [X31+192]
	022 Move X27, [X27+2112]
	023 Move X21, X7
	024 Move X20, X6
	025 Move X19, X5
	026 Move X23, X2
	027 Move X24, X1
	028 Move W22, W0
	029 Move TEMP, X8
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfEqual {53}
	033 Move X0, 0x6F8000
	034 Move X0, [X0+216]
	035 Call 0x1C17CF4
	036 Move X0, 0x730000
	037 Move X0, [X0+2488]
	038 Call 0x1C17CF4
	039 Move X0, 0x730000
	040 Move X0, [X0+2496]
	041 Call 0x1C17CF4
	042 Move X0, 0x730000
	043 Move X0, [X0+1320]
	044 Call 0x1C17CF4
	045 Move X0, 0x730000
	046 Move X0, [X0+1328]
	047 Call 0x1C17CF4
	048 Move X0, 0x6FA000
	049 Move X0, [X0+2112]
	050 Call 0x1C17CF4
	051 Move W8, 1
	052 Move [X28+32], W8
	053 Move X8, [X27]
	054 Move [X31+48], X31
	055 Move [X31+56], X31
	056 Move [X31+32], X31
	057 Move [X31+40], X31
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Move X8, [X8+184]
	060 Move S11, [X8]
	061 Move S8, [X8+4]
	062 Move S9, [X8+8]
	063 Move S10, [X8+12]
	064 Move [X26], W31
	065 Move [X25], W31
	066 Move [X20], W31
	067 Move X26, 0x6F8000
	068 Move X26, [X26+216]
	069 Move X0, [X26]
	070 Move W8, [X0+224]
	071 Compare W8, 0
	072 JumpIfNotEqual {75}
	073 Call 0x1C17DFC
	074 Move X0, [X26]
	075 Move X8, [X0+184]
	076 Move W9, [X8+12]
	077 NotImplemented "Instruction CMP not yet implemented."
	078 Move [X31+104], X31
	079 Move W9, [X0+224]
	080 Compare W9, 0
	081 JumpIfNotEqual {85}
	082 Call 0x1C17DFC
	083 Move X8, [X26]
	084 Move X8, [X8+184]
	085 Move W1, [X8+4]
	086 Move X8, 0x730000
	087 Move X8, [X8+1320]
	088 Add X0, X31, 48
	089 Move W3, 1
	090 Move W2, W22
	091 Move X4, [X8]
	092 Call NativeArray`1<int2>..ctor, X0, X1, X2, X3
	093 Move X8, [X26]
	094 Move X9, 0x730000
	095 Add X0, X31, 32
	096 Move W3, 1
	097 Move X8, [X8+184]
	098 Move X9, [X9+1328]
	099 Move W2, W22
	100 Move W1, [X8+12]
	101 Move X4, [X9]
	102 Call NativeArray`1<float2>..ctor, X0, X1, X2, X3
	103 Add X2, X31, 32
	104 Add X3, X31, 104
	105 Add X4, X31, 48
	106 Add X5, X31, 108
	107 Move W6, 1
	108 Move X0, X24
	109 Move X1, X23
	110 Call ModuleHandle.GraphConditioner, X0, X1, X2, X3, X4, X5
	111 Move X1, [X31+32]
	112 Move X2, [X31+40]
	113 Move W3, [X31+104]
	114 Move W6, [X31+108]
	115 Move X4, [X31+48]
	116 Move X5, [X31+56]
	117 Move W0, W22
	118 Move X7, X19
	119 Move [X31+16], X25
	120 Move [X31+24], X31
	121 Move [X31], X20
	122 Move [X31+8], X21
	123 Call Tessellator.Tessellate, X0, X1, X2, X3, X4, X5, X6, X7, X8
	124 Move X8, 0x730000
	125 Move X8, [X8+2496]
	126 Add X0, X31, 32
	127 Move X1, [X8]
	128 Call NativeArray`1<float2>.Dispose, X0
	129 Move X8, 0x730000
	130 Move X8, [X8+2488]
	131 Add X0, X31, 48
	132 Move X1, [X8]
	133 Call NativeArray`1<int2>.Dispose, X0
	134 Move V0, V11
	135 Move V1, V8
	136 Move V2, V9
	137 Move V3, V10
	138 Move X20, [X31+176]
	139 Move X19, [X31+184]
	140 Move X22, [X31+160]
	141 Move X21, [X31+168]
	142 Move X24, [X31+144]
	143 Move X23, [X31+152]
	144 Move X26, [X31+128]
	145 Move X25, [X31+136]
	146 Move X28, [X31+112]
	147 Move X27, [X31+120]
	148 Move X30, [X31+96]
	149 Move D9, [X31+80]
	150 Move D8, [X31+88]
	151 Move D11, [X31+64]
	152 Move D10, [X31+72]
	153 Add X31, X31, 192
	154 Return X0

Method: Unity.Mathematics.float4 Tessellate(Unity.Collections.Allocator allocator, Unity.Collections.NativeArray`1<Unity.Mathematics.float2> points, Unity.Collections.NativeArray`1<Unity.Mathematics.int2> edges, ref Unity.Collections.NativeArray`1<Unity.Mathematics.float2> outVertices, ref System.Int32 outVertexCount, ref Unity.Collections.NativeArray`1<System.Int32> outIndices, ref System.Int32 outIndexCount, ref Unity.Collections.NativeArray`1<Unity.Mathematics.int2> outEdges, ref System.Int32 outEdgeCount)

Disassembly:
	0x03A25E68 ADRP X0, 0x72F000
	0x03A25E6C LDR X0, [X0 + 0x9F0]
	0x03A25E70 BL 0x1C16CF4
	0x03A25E74 ADRP X0, 0x72F000
	0x03A25E78 LDR X0, [X0 + 0x9F8]
	0x03A25E7C BL 0x1C16CF4
	0x03A25E80 ADRP X0, 0x72F000
	0x03A25E84 LDR X0, [X0 + 0xA00]
	0x03A25E88 BL 0x1C16CF4
	0x03A25E8C ADRP X0, 0x72F000
	0x03A25E90 LDR X0, [X0 + 0xA08]
	0x03A25E94 BL 0x1C16CF4
	0x03A25E98 MOVZ W8, 0x1
	0x03A25E9C STRB W8, [X20 + 0x27]
	0x03A25EA0 MOVI V0.2D, 0x0
	0x03A25EA4 STR X31, [X31 + 0x20]
	0x03A25EA8 STP V0, V0, [X31]
	0x03A25EAC LDR X8, [X19 + 0x58]
	0x03A25EB0 CBZ X8, 0x3A25F2C
	0x03A25EB4 ADRP X25, 0x72F000
	0x03A25EB8 ADRP X21, 0x72F000
	0x03A25EBC ADRP X24, 0x6F6000
	0x03A25EC0 ADRP X22, 0x72F000
	0x03A25EC4 ADRP X23, 0x72F000
	0x03A25EC8 LDR X25, [X25 + 0x9E8]
	0x03A25ECC LDR X21, [X21 + 0x9F8]
	0x03A25ED0 LDR X24, [X24 + 0x8F8]
	0x03A25ED4 LDR X22, [X22 + 0x9E0]
	0x03A25ED8 LDR X23, [X23 + 0x9F0]
	0x03A25EDC MOV X26, X31
	0x03A25EE0 MOV X20, X31
	0x03A25EE4 MOVZ W27, 0x38
	0x03A25EE8 LDR W9, [X8 + 0x18]
	0x03A25EEC CMP X26, W9, SXTW
	0x03A25EF0 B.GE 0x3A25F30
	0x03A25EF4 CMP X26, X9
	0x03A25EF8 B.CS 0x3A25FB0
	0x03A25EFC LDR X9, [X8, X27, LSL]
	0x03A25F00 CMP X9, 0x0
	0x03A25F04 CSEL X20, X20, X9, EQ
	0x03A25F08 CBZ X9, 0x3A25F20
	0x03A25F0C CBZ X20, 0x3A25F2C
	0x03A25F10 MOV X0, X20
	0x03A25F14 MOV X1, X31
	0x03A25F18 BL 0x39D4B1C
	0x03A25F1C LDR X8, [X19 + 0x58]
	0x03A25F20 ADD X26, X26, 0x1
	0x03A25F24 ADD X27, X27, 0x20
	0x03A25F28 CBNZ X8, 0x3A25EE8
	0x03A25F2C BL 0x1C16F20
	0x03A25F30 LDR X0, [X19 + 0xF0]
	0x03A25F34 CBZ X0, 0x3A25F2C
	0x03A25F38 LDR X1, [X25]
	0x03A25F3C ADD X8, X31, 0x0
	0x03A25F40 BL 0x2B0F484
	0x03A25F44 LDR X1, [X21]
	0x03A25F48 ADD X0, X31, 0x0
	0x03A25F4C BL 0x2C1BD48
	0x03A25F50 TBZ X0, 0x0, 0x3A25F78
	0x03A25F54 LDR X0, [X24]
	0x03A25F58 LDR X20, [X31 + 0x18]
	0x03A25F5C LDR W8, [X0 + 0xE0]
	0x03A25F60 CBNZ W8, 0x3A25F68
	0x03A25F64 BL 0x1C16DFC
	0x03A25F68 MOV X0, X20
	0x03A25F6C MOV X1, X31
	0x03A25F70 BL 0x39E1DF8
	0x03A25F74 B 0x3A25F44
	0x03A25F78 LDR X1, [X23]
	0x03A25F7C ADD X0, X31, 0x0
	0x03A25F80 BL 0x2C1BE60
	0x03A25F84 LDR X0, [X19 + 0xF0]
	0x03A25F88 CBZ X0, 0x3A25F2C
	0x03A25F8C LDR X1, [X22]
	0x03A25F90 BL 0x2B0F1E4
	0x03A25F94 LDP X20, X19, [X31 + 0x70]
	0x03A25F98 LDP X22, X21, [X31 + 0x60]
	0x03A25F9C LDP X24, X23, [X31 + 0x50]
	0x03A25FA0 LDP X26, X25, [X31 + 0x40]
	0x03A25FA4 LDP X30, X27, [X31 + 0x30]
	0x03A25FA8 ADD X31, X31, 0x80
	0x03A25FAC RET
	0x03A25FB0 BL 0x1C16F28
	0x03A25FB4 B 0x3A25FB8
	0x03A25FB8 MOV X21, X0
	0x03A25FBC CMP W1, 0x1
	0x03A25FC0 B.NE 0x3A25FEC
	0x03A25FC4 MOV X0, X21
	0x03A25FC8 BL 0x3EB1AD0
	0x03A25FCC LDR X20, [X0]
	0x03A25FD0 BL 0x3EB1AE0
	0x03A25FD4 LDR X1, [X23]
	0x03A25FD8 ADD X0, X31, 0x0
	0x03A25FDC BL 0x2C1BE60
	0x03A25FE0 CBZ X20, 0x3A25F84
	0x03A25FE4 MOV X0, X20
	0x03A25FE8 BL 0x1C16F18
	0x03A25FEC MOV X20, X31
	0x03A25FF0 B 0x3A25FF8
	0x03A25FF4 MOV X21, X0
	0x03A25FF8 LDR X1, [X23]
	0x03A25FFC ADD X0, X31, 0x0
	0x03A26000 BL 0x2C1BE60
	0x03A26004 CBNZ X20, 0x3A26010
	0x03A26008 MOV X0, X21
	0x03A2600C BL 0x1D2C690
	0x03A26010 MOV X0, X20
	0x03A26014 BL 0x1C16F18
	0x03A26018 BL 0x1990590
	0x03A2601C SUB X31, X31, 0x180
	0x03A26020 STP X29, X30, [X31 + 0x120]
	0x03A26024 STP X28, X27, [X31 + 0x130]
	0x03A26028 STP X26, X25, [X31 + 0x140]
	0x03A2602C STP X24, X23, [X31 + 0x150]
	0x03A26030 STP X22, X21, [X31 + 0x160]
	0x03A26034 STP X20, X19, [X31 + 0x170]
	0x03A26038 ADRP X20, 0x9BC000
	0x03A2603C LDRB W8, [X20 + 0x28]
	0x03A26040 MOV X19, X0
	0x03A26044 TBNZ X8, 0x0, 0x3A26098
	0x03A26048 ADRP X0, 0x6CD000
	0x03A2604C LDR X0, [X0 + 0x758]
	0x03A26050 BL 0x1C16CF4
	0x03A26054 ADRP X0, 0x72A000
	0x03A26058 LDR X0, [X0 + 0x9B0]
	0x03A2605C BL 0x1C16CF4
	0x03A26060 ADRP X0, 0x72E000
	0x03A26064 LDR X0, [X0 + 0xA10]
	0x03A26068 BL 0x1C16CF4
	0x03A2606C ADRP X0, 0x72E000
	0x03A26070 LDR X0, [X0 + 0xA18]
	0x03A26074 BL 0x1C16CF4
	0x03A26078 ADRP X0, 0x72E000
	0x03A2607C LDR X0, [X0 + 0xA20]
	0x03A26080 BL 0x1C16CF4
	0x03A26084 ADRP X0, 0x72E000
	0x03A26088 LDR X0, [X0 + 0xA28]
	0x03A2608C BL 0x1C16CF4
	0x03A26090 MOVZ W8, 0x1
	0x03A26094 STRB W8, [X20 + 0x28]
	0x03A26098 MOV X0, X19
	0x03A2609C MOV X1, X31
	0x03A260A0 BL 0x3A757CC
	0x03A260A4 LDR X20, [X19 + 0x58]
	0x03A260A8 CBZ X20, 0x3A261E4
	0x03A260AC ADRP X27, 0x6CD000
	0x03A260B0 ADRP X29, 0x72E000
	0x03A260B4 ADRP X25, 0x72A000
	0x03A260B8 ADRP X24, 0x72E000
	0x03A260BC ADRP X23, 0x72E000
	0x03A260C0 LDR X27, [X27 + 0x758]
	0x03A260C4 LDR X29, [X29 + 0xA10]
	0x03A260C8 LDR X25, [X25 + 0x9B0]
	0x03A260CC LDR X24, [X24 + 0xA18]
	0x03A260D0 LDR X23, [X23 + 0xA20]
	0x03A260D4 MOV X28, X31
	0x03A260D8 MOV X26, X31
	0x03A260DC ADD X21, X31, 0xC8
	0x03A260E0 LDRSW X8, [X20 + 0x18]
	0x03A260E4 CMP X26, X8
	0x03A260E8 B.GE 0x3A261E8
	0x03A260EC LDR X0, [X27]
	0x03A260F0 ADD X1, X31, 0x11C
	0x03A260F4 STR W26, [X31 + 0x11C]
	0x03A260F8 BL 0x1C16E04
	0x03A260FC LDR X8, [X29]
	0x03A26100 MOV X1, X0
	0x03A26104 MOV X2, X31
	0x03A26108 MOV X0, X8
	0x03A2610C BL 0x321EFD0
	0x03A26110 MOV X1, X31
	0x03A26114 BL 0x3C124EC
	0x03A26118 LDR W8, [X20 + 0x18]
	0x03A2611C CMP X26, X8
	0x03A26120 B.CS 0x3A262F8
	0x03A26124 ADD X8, X20, X28
	0x03A26128 STR W0, [X8 + 0x34]
	0x03A2612C LDR X22, [X19 + 0x58]
	0x03A26130 CBZ X22, 0x3A261E4
	0x03A26134 LDR W8, [X22 + 0x18]
	0x03A26138 CMP X26, X8
	0x03A2613C B.CS 0x3A262F8
	0x03A26140 ADD X8, X22, X28
	0x03A26144 LDR W0, [X8 + 0x34]
	0x03A26148 ADD X8, X31, 0xC8
	0x03A2614C MOV X1, X31
	0x03A26150 BL 0x3C4B258
	0x03A26154 LDP V0, V1, [X21]
	0x03A26158 LDR X8, [X31 + 0xE8]
	0x03A2615C LDR X0, [X27]
	0x03A26160 ADD X1, X31, 0xC8
	0x03A26164 STP V0, V1, [X31 + 0xF0]
	0x03A26168 STR X8, [X31 + 0x110]
	0x03A2616C STR W26, [X31 + 0xC8]
	0x03A26170 BL 0x1C16E04
	0x03A26174 LDR X8, [X29]
	0x03A26178 MOV X1, X0
	0x03A2617C MOV X2, X31
	0x03A26180 MOV X0, X8
	0x03A26184 BL 0x321EFD0
	0x03A26188 LDR X8, [X25]
	0x03A2618C MOV X20, X0
	0x03A26190 LDR W9, [X8 + 0xE0]
	0x03A26194 CBNZ W9, 0x3A261A0
	0x03A26198 MOV X0, X8
	0x03A2619C BL 0x1C16DFC
	0x03A261A0 LDP V0, V1, [X31 + 0xF0]
	0x03A261A4 LDR X8, [X31 + 0x110]
	0x03A261A8 ADD X0, X31, 0xA0
	0x03A261AC MOV X1, X20
	0x03A261B0 MOV X2, X31
	0x03A261B4 STP V0, V1, [X31 + 0xA0]
	0x03A261B8 STR X8, [X31 + 0xC0]
	0x03A261BC BL 0x39D6AD0
	0x03A261C0 LDR W8, [X22 + 0x18]
	0x03A261C4 CMP X26, X8
	0x03A261C8 B.CS 0x3A262F8
	0x03A261CC ADD X8, X22, X28
	0x03A261D0 STR X0, [X8 + 0x38]
	0x03A261D4 LDR X20, [X19 + 0x58]
	0x03A261D8 ADD X28, X28, 0x20
	0x03A261DC ADD X26, X26, 0x1
	0x03A261E0 CBNZ X20, 0x3A260E0
	0x03A261E4 BL 0x1C16F20
	0x03A261E8 LDR X0, [X24]
	0x03A261EC MOV X1, X31
	0x03A261F0 BL 0x3C124EC
	0x03A261F4 ADD X8, X31, 0xC8
	0x03A261F8 MOV X1, X31
	0x03A261FC STR W0, [X19 + 0x130]
	0x03A26200 BL 0x3C4B258
	0x03A26204 LDP V0, V1, [X21]
	0x03A26208 LDR X8, [X31 + 0xE8]
	0x03A2620C LDR X0, [X25]
	0x03A26210 STP V0, V1, [X31 + 0xF0]
	0x03A26214 STR X8, [X31 + 0x110]
	0x03A26218 LDR W8, [X0 + 0xE0]
	0x03A2621C CBNZ W8, 0x3A26224
	0x03A26220 BL 0x1C16DFC
	0x03A26224 LDP V0, V1, [X31 + 0xF0]
	0x03A26228 LDR X8, [X31 + 0x110]
	0x03A2622C LDR X1, [X24]
	0x03A26230 ADD X0, X31, 0x70
	0x03A26234 MOV X2, X31
	0x03A26238 STP V0, V1, [X31 + 0x70]
	0x03A2623C STR X8, [X31 + 0x90]
	0x03A26240 BL 0x39D6AD0
	0x03A26244 STR X0, [X19 + 0x128]

ISIL:
	001 Subtract X31, X31, 320
	002 Move [X31+192], D11
	003 Move [X31+200], D10
	004 Move [X31+208], D9
	005 Move [X31+216], D8
	006 Move [X31+224], X29
	007 Move [X31+232], X30
	008 Move [X31+240], X28
	009 Move [X31+248], X27
	010 Move [X31+256], X26
	011 Move [X31+264], X25
	012 Move [X31+272], X24
	013 Move [X31+280], X23
	014 Move [X31+288], X22
	015 Move [X31+296], X21
	016 Move [X31+304], X20
	017 Move [X31+312], X19
	018 Move [X31+104], X7
	019 Move X29, 0x9BE000
	020 Move X27, 0x6FA000
	021 Move X20, [X31+336]
	022 Move W8, [X29+33]
	023 Move X19, [X31+320]
	024 Move X27, [X27+2112]
	025 Move X22, X6
	026 Move X21, X5
	027 Move X26, X4
	028 Move X28, X3
	029 Move X24, X2
	030 Move X25, X1
	031 Move W23, W0
	032 Move TEMP, X8
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfEqual {71}
	036 Move X0, 0x730000
	037 Move X0, [X0+2464]
	038 Call 0x1C17CF4
	039 Move X0, 0x730000
	040 Move X0, [X0+2472]
	041 Call 0x1C17CF4
	042 Move X0, 0x6F8000
	043 Move X0, [X0+216]
	044 Call 0x1C17CF4
	045 Move X0, 0x6F9000
	046 Move X0, [X0+328]
	047 Call 0x1C17CF4
	048 Move X0, 0x730000
	049 Move X0, [X0+2488]
	050 Call 0x1C17CF4
	051 Move X0, 0x730000
	052 Move X0, [X0+2496]
	053 Call 0x1C17CF4
	054 Move X0, 0x730000
	055 Move X0, [X0+1320]
	056 Call 0x1C17CF4
	057 Move X0, 0x730000
	058 Move X0, [X0+1328]
	059 Call 0x1C17CF4
	060 Move X0, 0x6F9000
	061 Move X0, [X0+312]
	062 Call 0x1C17CF4
	063 Move X0, 0x730000
	064 Move X0, [X0+2504]
	065 Call 0x1C17CF4
	066 Move X0, 0x6FA000
	067 Move X0, [X0+2112]
	068 Call 0x1C17CF4
	069 Move W8, 1
	070 Move [X29+33], W8
	071 Move X8, [X27]
	072 Move [X31+176], X31
	073 Move [X31+184], X31
	074 Move [X31+160], X31
	075 Move [X31+168], X31
	076 Move [X31+144], X31
	077 Move [X31+152], X31
	078 Move [X31+128], X31
	079 Move [X31+136], X31
	080 Move [X31+112], X31
	081 Move [X31+120], X31
	082 Move X8, [X8+184]
	083 NotImplemented "Instruction CMP not yet implemented."
	084 Move S11, [X8]
	085 Move S8, [X8+4]
	086 Move S9, [X8+8]
	087 Move S10, [X8+12]
	088 Move [X20], W31
	089 Move [X19], W31
	090 Move [X22], W31
	091 Move X27, 0x6F8000
	092 Move X27, [X27+216]
	093 Move X0, [X27]
	094 Move W8, [X0+224]
	095 Compare W8, 0
	096 JumpIfNotEqual {99}
	097 Call 0x1C17DFC
	098 Move X0, [X27]
	099 Move X8, [X0+184]
	100 Move W8, [X8+12]
	101 NotImplemented "Instruction CMP not yet implemented."
	102 Move X8, 0x730000
	103 Move X8, [X8+1320]
	104 Move X29, [X31+328]
	105 Move W1, W26
	106 ShiftRight W1, 29
	107 And W1, W1, 0xFFFFFFF
	108 Add X0, X31, 168
	109 Move X4, [X8]
	110 Move W3, 1
	111 Move W2, W23
	112 Move [X31+184], X31
	113 Call NativeArray`1<int2>..ctor, X0, X1, X2, X3
	114 Move X8, 0x730000
	115 Move X8, [X8+1328]
	116 Move W1, W24
	117 ShiftRight W1, 30
	118 And W1, W1, 0x1FFFFFFF
	119 Add X0, X31, 152
	120 Move W3, 1
	121 Move X4, [X8]
	122 Move W2, W23
	123 Call NativeArray`1<float2>..ctor, X0, X1, X2, X3
	124 Compare W26, 0
	125 JumpIfEqual {153}
	126 Move X8, 0x72F000
	127 Move X8, [X8+2504]
	128 Move X0, [X8]
	129 Move W8, [X0+224]
	130 Compare W8, 0
	131 JumpIfNotEqual {133}
	132 Call 0x1C17DFC
	133 Add X8, X31, 188
	134 Add X9, X31, 168
	135 Add X10, X31, 184
	136 Add X7, X31, 152
	137 Move W0, W23
	138 Move X1, X25
	139 Move X2, X24
	140 Move W3, W24
	141 Move X4, X28
	142 Move X5, X26
	143 Move W6, W26
	144 Move [X31+16], X8
	145 Move [X31+24], X31
	146 Move [X31], X10
	147 Move [X31+8], X9
	148 Call PlanarGraph.Validate, X0, X1, X2, X3, X4, X5, X6, X7, X8
	149 Move TEMP, X0
	150 And TEMP, TEMP, 1
	151 Compare TEMP, 1
	152 JumpIfEqual {186}
	153 Move [X20], W26
	154 Move [X22], W24
	155 Move X0, [X27]
	156 Move [X31+96], X19
	157 Move X19, X29
	158 Move X27, [X29]
	159 Move X29, [X29+8]
	160 Move W8, [X0+224]
	161 Compare W8, 0
	162 JumpIfNotEqual {164}
	163 Call 0x1C17DFC
	164 Move X8, 0x72F000
	165 Move X8, [X8+2472]
	166 Move X0, X28
	167 Move X1, X26
	168 Move X2, X27
	169 Move X5, [X8]
	170 Move X3, X29
	171 Move W4, W26
	172 Call ModuleHandle.Copy, X0, X1, X2
	173 Move X8, 0x72F000
	174 Move X2, [X21]
	175 Move X3, [X21+8]
	176 Move X8, [X8+2464]
	177 Move X0, X25
	178 Move X1, X24
	179 Move W4, W24
	180 Move X5, [X8]
	181 Call ModuleHandle.Copy, X0, X1, X2
	182 Move X27, 0x6F7000
	183 Move X27, [X27+216]
	184 Move X29, X19
	185 Move X19, [X31+96]
	186 Move W8, [X31+184]
	187 NotImplemented "Instruction CMP not yet implemented."
	188 Move W9, [X31+188]
	189 NotImplemented "Instruction CMP not yet implemented."
	190 Move X9, 0x6F8000
	191 Move X9, [X9+312]
	192 Move W1, W8
	193 ShiftRight W1, 29
	194 And W1, W1, 0xFFFFFFF
	195 Add X0, X31, 136
	196 Move W3, 1
	197 Move X4, [X9]
	198 Move W2, W23
	199 Add X24, X31, 136
	200 Call NativeArray`1<Int32>..ctor, X0, X1, X2, X3
	201 Move X9, 0x72F000
	202 Move W8, [X31+184]
	203 Move X9, [X9+1328]
	204 Add X0, X31, 120
	205 Move W3, 1
	206 Move W1, W8
	207 ShiftRight W1, 30
	208 And W1, W1, 0x1FFFFFFF
	209 Move X4, [X9]
	210 Move W2, W23
	211 Call NativeArray`1<float2>..ctor, X0, X1, X2, X3
	212 Move X1, [X31+152]
	213 Move X2, [X31+160]
	214 Move W3, [X31+184]
	215 Move W6, [X31+188]
	216 Move X4, [X31+168]
	217 Move X5, [X31+176]
	218 Add X8, X31, 116
	219 Add X9, X31, 112
	220 Add X7, X31, 120
	221 Move W0, W23
	222 Move [X31+112], X31
	223 Move [X31+16], X8
	224 Move [X31+24], X31
	225 Move [X31], X9
	226 Move [X31+8], X24
	227 Call Tessellator.Tessellate, X0, X1, X2, X3, X4, X5, X6, X7, X8
	228 Move TEMP, X0
	229 And TEMP, TEMP, 1
	230 Compare TEMP, 1
	231 JumpIfNotEqual {267}
	232 Move X0, [X27]
	233 Move [X31+96], X29
	234 Move X9, [X31+168]
	235 Move X25, [X31+176]
	236 Move W26, [X31+188]
	237 Move X5, [X31+136]
	238 Move X28, [X31+144]
	239 Move W24, [X31+112]
	240 Move W29, [X31+116]
	241 Move X27, [X31+120]
	242 Move X23, [X31+128]
	243 Move W8, [X0+224]
	244 Compare W8, 0
	245 JumpIfNotEqual {251}
	246 Move [X31+80], X9
	247 Move [X31+88], X5
	248 Call 0x1C17DFC
	249 Move X9, [X31+80]
	250 Move X5, [X31+88]
	251 Move X3, [X31+96]
	252 Move X8, [X31+104]
	253 Move X0, X9
	254 Move X1, X25
	255 Move W2, W26
	256 Move X4, X20
	257 Move X6, X28
	258 Move W7, W29
	259 Move [X31+40], X21
	260 Move [X31+48], X22
	261 Move [X31+32], W24
	262 Move [X31+16], X27
	263 Move [X31+24], X23
	264 Move [X31], X8
	265 Move [X31+8], X19
	266 Call ModuleHandle.TransferOutput, X0, X1, X2, X3, X4, X5, X6, X7, X8, X9, X10, X11
	267 Move X8, 0x72F000
	268 Move X8, [X8+2496]
	269 Add X0, X31, 120
	270 Move X1, [X8]
	271 Call NativeArray`1<float2>.Dispose, X0
	272 Move X8, 0x6F8000
	273 Move X8, [X8+328]
	274 Add X0, X31, 136
	275 Move X1, [X8]
	276 Call NativeArray`1<Int32>.Dispose, X0
	277 Move X8, 0x72F000
	278 Move X8, [X8+2496]
	279 Add X0, X31, 152
	280 Move X1, [X8]
	281 Call NativeArray`1<float2>.Dispose, X0
	282 Move X8, 0x72F000
	283 Move X8, [X8+2488]
	284 Add X0, X31, 168
	285 Move X1, [X8]
	286 Call NativeArray`1<int2>.Dispose, X0
	287 Move V0, V11
	288 Move V1, V8
	289 Move V2, V9
	290 Move V3, V10
	291 Move X20, [X31+304]
	292 Move X19, [X31+312]
	293 Move X22, [X31+288]
	294 Move X21, [X31+296]
	295 Move X24, [X31+272]
	296 Move X23, [X31+280]
	297 Move X26, [X31+256]
	298 Move X25, [X31+264]
	299 Move X28, [X31+240]
	300 Move X27, [X31+248]
	301 Move X29, [X31+224]
	302 Move X30, [X31+232]
	303 Move D9, [X31+208]
	304 Move D8, [X31+216]
	305 Move D11, [X31+192]
	306 Move D10, [X31+200]
	307 Add X31, X31, 320
	308 Return X0

Method: Unity.Mathematics.float4 Subdivide(Unity.Collections.Allocator allocator, Unity.Collections.NativeArray`1<Unity.Mathematics.float2> points, Unity.Collections.NativeArray`1<Unity.Mathematics.int2> edges, ref Unity.Collections.NativeArray`1<Unity.Mathematics.float2> outVertices, ref System.Int32 outVertexCount, ref Unity.Collections.NativeArray`1<System.Int32> outIndices, ref System.Int32 outIndexCount, ref Unity.Collections.NativeArray`1<Unity.Mathematics.int2> outEdges, ref System.Int32 outEdgeCount, System.Single areaFactor, System.Single targetArea, System.Int32 refineIterations, System.Int32 smoothenIterations)

Disassembly:
	0x03A26248 LDR X0, [X23]
	0x03A2624C MOV X1, X31
	0x03A26250 BL 0x3C124EC
	0x03A26254 ADD X8, X31, 0xC8
	0x03A26258 MOV X1, X31
	0x03A2625C STR W0, [X19 + 0x140]
	0x03A26260 BL 0x3C4B258
	0x03A26264 LDP V0, V1, [X21]
	0x03A26268 LDR X8, [X31 + 0xE8]
	0x03A2626C LDR X1, [X23]
	0x03A26270 ADD X0, X31, 0x40
	0x03A26274 MOV X2, X31
	0x03A26278 STP V0, V1, [X31 + 0x40]
	0x03A2627C STR X8, [X31 + 0x60]
	0x03A26280 BL 0x39D6AD0
	0x03A26284 STR X0, [X19 + 0x138]
	0x03A26288 ADRP X20, 0x72E000
	0x03A2628C LDR X20, [X20 + 0xA28]
	0x03A26290 MOV X1, X31
	0x03A26294 LDR X0, [X20]
	0x03A26298 BL 0x3C124EC
	0x03A2629C ADD X8, X31, 0xC8
	0x03A262A0 MOV X1, X31
	0x03A262A4 STR W0, [X19 + 0x150]
	0x03A262A8 BL 0x3C4B258
	0x03A262AC LDP V0, V1, [X21]
	0x03A262B0 LDR X8, [X31 + 0xE8]
	0x03A262B4 LDR X1, [X20]
	0x03A262B8 ADD X0, X31, 0x10
	0x03A262BC MOV X2, X31
	0x03A262C0 STP V0, V1, [X31 + 0x10]
	0x03A262C4 STR X8, [X31 + 0x30]
	0x03A262C8 BL 0x39D6AD0
	0x03A262CC STR X0, [X19 + 0x148]
	0x03A262D0 STP X31, X31, [X19 + 0xF8]
	0x03A262D4 STP X31, X31, [X19 + 0x110]
	0x03A262D8 LDP X20, X19, [X31 + 0x170]
	0x03A262DC LDP X22, X21, [X31 + 0x160]
	0x03A262E0 LDP X24, X23, [X31 + 0x150]
	0x03A262E4 LDP X26, X25, [X31 + 0x140]
	0x03A262E8 LDP X28, X27, [X31 + 0x130]
	0x03A262EC LDP X29, X30, [X31 + 0x120]
	0x03A262F0 ADD X31, X31, 0x180
	0x03A262F4 RET
	0x03A262F8 BL 0x1C16F28
	0x03A262FC LDR X0, [X0 + 0xF0]
	0x03A26300 RET
	0x03A26304 LDR X0, [X0 + 0xF8]
	0x03A26308 RET
	0x03A2630C STR X1, [X0 + 0xF8]
	0x03A26310 RET
	0x03A26314 LDR X0, [X0 + 0x100]
	0x03A26318 RET
	0x03A2631C STR X1, [X0 + 0x100]
	0x03A26320 RET
	0x03A26324 LDR X0, [X0 + 0x108]
	0x03A26328 RET
	0x03A2632C STR X1, [X0 + 0x108]
	0x03A26330 RET
	0x03A26334 LDR X0, [X0 + 0x110]
	0x03A26338 RET
	0x03A2633C STR X1, [X0 + 0x110]
	0x03A26340 RET
	0x03A26344 LDR X0, [X0 + 0x118]
	0x03A26348 RET
	0x03A2634C STR X1, [X0 + 0x118]
	0x03A26350 RET
	0x03A26354 LDRB W0, [X0 + 0x120]
	0x03A26358 RET
	0x03A2635C AND W8, W1, 0x1
	0x03A26360 STRB W8, [X0 + 0x120]
	0x03A26364 RET
	0x03A26368 LDR V0, [X0 + 0x124]
	0x03A2636C RET
	0x03A26370 STR S0, [X0 + 0x124]
	0x03A26374 RET
	0x03A26378 LDR X0, [X0 + 0x158]
	0x03A2637C RET
	0x03A26380 STR X1, [X0 + 0x158]
	0x03A26384 RET
	0x03A26388 STR X30, [X31 - 0x30]!
	0x03A2638C STP X22, X21, [X31 + 0x10]
	0x03A26390 STP X20, X19, [X31 + 0x20]
	0x03A26394 ADRP X20, 0x9BC000
	0x03A26398 LDRB W8, [X20 + 0x29]
	0x03A2639C MOV X19, X0
	0x03A263A0 TBNZ X8, 0x0, 0x3A263C4
	0x03A263A4 ADRP X0, 0x72E000
	0x03A263A8 LDR X0, [X0 + 0xA30]
	0x03A263AC BL 0x1C16CF4
	0x03A263B0 ADRP X0, 0x72E000
	0x03A263B4 LDR X0, [X0 + 0xA38]
	0x03A263B8 BL 0x1C16CF4
	0x03A263BC MOVZ W8, 0x1
	0x03A263C0 STRB W8, [X20 + 0x29]
	0x03A263C4 ADRP X22, 0x9B2000
	0x03A263C8 ADRP X21, 0x72E000
	0x03A263CC ADRP X20, 0x72E000
	0x03A263D0 LDRB W8, [X22 + 0x786]
	0x03A263D4 LDR X21, [X21 + 0xA38]
	0x03A263D8 LDR X20, [X20 + 0xA30]
	0x03A263DC CBNZ W8, 0x3A263F4
	0x03A263E0 ADRP X0, 0x6CD000
	0x03A263E4 LDR X0, [X0 + 0x5A0]
	0x03A263E8 BL 0x1C16CF4
	0x03A263EC MOVZ W8, 0x1
	0x03A263F0 STRB W8, [X22 + 0x786]
	0x03A263F4 ADRP X8, 0x6CD000
	0x03A263F8 LDR X8, [X8 + 0x5A0]
	0x03A263FC ADRP X9, 0xFFFFFFFFFD0C7000
	0x03A26400 LDR V0, [X9 + 0x4F0]
	0x03A26404 LDR X8, [X8]
	0x03A26408 LDR X8, [X8 + 0xB8]
	0x03A2640C LDR V1, [X8 + 0x18]
	0x03A26410 LDR V2, [X8 + 0x20]
	0x03A26414 ADRP X8, 0xFFFFFFFFFD0C7000
	0x03A26418 STUR D0, [X19 + 0x4C]
	0x03A2641C LDR V0, [X8 + 0x868]
	0x03A26420 MOVZ W8, 0x1
	0x03A26424 STR D1, [X19 + 0x40]
	0x03A26428 STRB W8, [X19 + 0x60]
	0x03A2642C STR S2, [X19 + 0x48]
	0x03A26430 STUR D0, [X19 + 0x6C]
	0x03A26434 LDR X0, [X21]
	0x03A26438 BL 0x1C16F10
	0x03A2643C LDR X1, [X20]
	0x03A26440 MOV X20, X0
	0x03A26444 BL 0x2B0E7A4
	0x03A26448 STR X20, [X19 + 0xF0]
	0x03A2644C MOV X0, X19
	0x03A26450 LDP X20, X19, [X31 + 0x20]
	0x03A26454 LDP X22, X21, [X31 + 0x10]
	0x03A26458 MOV X1, X31
	0x03A2645C LDR X30, [X31], #0x30
	0x03A26460 B 0x3A757F4
	0x03A26464 B 0x3A26468
	0x03A26468 STP X30, X21, [X31 - 0x20]!
	0x03A2646C STP X20, X19, [X31 + 0x10]
	0x03A26470 ADRP X20, 0x9BC000
	0x03A26474 ADRP X21, 0x6CD000
	0x03A26478 LDRB W8, [X20 + 0x39]
	0x03A2647C LDR X21, [X21 + 0x598]
	0x03A26480 MOV X19, X0
	0x03A26484 TBNZ X8, 0x0, 0x3A264C0
	0x03A26488 ADRP X0, 0x72E000
	0x03A2648C LDR X0, [X0 + 0x610]
	0x03A26490 BL 0x1C16CF4
	0x03A26494 ADRP X0, 0x72E000
	0x03A26498 LDR X0, [X0 + 0x608]
	0x03A2649C BL 0x1C16CF4
	0x03A264A0 ADRP X0, 0x6CD000
	0x03A264A4 LDR X0, [X0 + 0x598]
	0x03A264A8 BL 0x1C16CF4
	0x03A264AC ADRP X0, 0x72E000
	0x03A264B0 LDR X0, [X0 + 0x5F0]
	0x03A264B4 BL 0x1C16CF4
	0x03A264B8 MOVZ W8, 0x1
	0x03A264BC STRB W8, [X20 + 0x39]
	0x03A264C0 LDR X0, [X21]
	0x03A264C4 LDR W8, [X0 + 0xE0]
	0x03A264C8 CBNZ W8, 0x3A264D0
	0x03A264CC BL 0x1C16DFC
	0x03A264D0 MOV X0, X19
	0x03A264D4 MOV X1, X31
	0x03A264D8 MOV X2, X31
	0x03A264DC BL 0x3C3883C
	0x03A264E0 TBZ X0, 0x0, 0x3A264F0
	0x03A264E4 LDP X20, X19, [X31 + 0x10]
	0x03A264E8 LDP X30, X21, [X31], #0x20
	0x03A264EC RET
	0x03A264F0 ADRP X21, 0x72E000
	0x03A264F4 LDR X21, [X21 + 0x5F0]
	0x03A264F8 LDR X8, [X21]
	0x03A264FC LDR X8, [X8 + 0xB8]
	0x03A26500 LDR X1, [X8]
	0x03A26504 CBNZ X1, 0x3A26544
	0x03A26508 ADRP X8, 0x72E000
	0x03A2650C LDR X8, [X8 + 0x608]
	0x03A26510 LDR X0, [X8]
	0x03A26514 BL 0x1C16F10
	0x03A26518 ADRP X8, 0x72E000
	0x03A2651C LDR X8, [X8 + 0x610]
	0x03A26520 MOV X20, X0
	0x03A26524 LDR X1, [X8]
	0x03A26528 BL 0x301B7C4
	0x03A2652C LDR X8, [X21]
	0x03A26530 LDR X8, [X8 + 0xB8]
	0x03A26534 STR X20, [X8]
	0x03A26538 LDR X8, [X21]
	0x03A2653C LDR X8, [X8 + 0xB8]
	0x03A26540 LDR X1, [X8]
	0x03A26544 MOV X0, X19
	0x03A26548 LDP X20, X19, [X31 + 0x10]
	0x03A2654C LDP X30, X21, [X31], #0x20
	0x03A26550 B 0x3A28040
	0x03A26554 B 0x3A26558
	0x03A26558 STP X30, X21, [X31 - 0x20]!
	0x03A2655C STP X20, X19, [X31 + 0x10]
	0x03A26560 ADRP X20, 0x9BC000
	0x03A26564 ADRP X21, 0x6CD000
	0x03A26568 LDRB W8, [X20 + 0x3A]
	0x03A2656C LDR X21, [X21 + 0x598]
	0x03A26570 MOV X19, X0
	0x03A26574 TBNZ X8, 0x0, 0x3A26598
	0x03A26578 ADRP X0, 0x6CD000
	0x03A2657C LDR X0, [X0 + 0x598]
	0x03A26580 BL 0x1C16CF4
	0x03A26584 ADRP X0, 0x72E000
	0x03A26588 LDR X0, [X0 + 0x5F0]
	0x03A2658C BL 0x1C16CF4
	0x03A26590 MOVZ W8, 0x1
	0x03A26594 STRB W8, [X20 + 0x3A]
	0x03A26598 LDR X0, [X21]
	0x03A2659C LDR W8, [X0 + 0xE0]
	0x03A265A0 CBNZ W8, 0x3A265A8
	0x03A265A4 BL 0x1C16DFC
	0x03A265A8 MOV X0, X19
	0x03A265AC MOV X1, X31
	0x03A265B0 MOV X2, X31
	0x03A265B4 BL 0x3C354F8
	0x03A265B8 TBZ X0, 0x0, 0x3A265E4
	0x03A265BC ADRP X8, 0x72E000
	0x03A265C0 LDR X8, [X8 + 0x5F0]
	0x03A265C4 LDR X8, [X8]
	0x03A265C8 LDR X8, [X8 + 0xB8]
	0x03A265CC LDR X1, [X8]
	0x03A265D0 CBZ X1, 0x3A265E4
	0x03A265D4 MOV X0, X19
	0x03A265D8 LDP X20, X19, [X31 + 0x10]
	0x03A265DC LDP X30, X21, [X31], #0x20
	0x03A265E0 B 0x3A28114
	0x03A265E4 LDP X20, X19, [X31 + 0x10]
	0x03A265E8 LDP X30, X21, [X31], #0x20
	0x03A265EC RET
	0x03A265F0 MOV X1, X31
	0x03A265F4 B 0x3C36C30
	0x03A265F8 MOV X1, X31
	0x03A265FC B 0x3C36C30
	0x03A26600 LDR X0, [X0 + 0x50]
	0x03A26604 RET
	0x03A26608 LDR X0, [X0 + 0x40]
	0x03A2660C RET
	0x03A26610 LDR W0, [X0 + 0x48]
	0x03A26614 RET
	0x03A26618 STR W1, [X0 + 0x48]
	0x03A2661C RET
	0x03A26620 SUB X31, X31, 0x170
	0x03A26624 STR D14, [X31 + 0x110]
	0x03A26628 STP D13, D12, [X31 + 0x120]
	0x03A2662C STP D11, D10, [X31 + 0x130]
	0x03A26630 STP D9, D8, [X31 + 0x140]
	0x03A26634 STP X29, X30, [X31 + 0x150]
	0x03A26638 STP X20, X19, [X31 + 0x160]
	0x03A2663C MOV X1, X31
	0x03A26640 MOV X19, X0
	0x03A26644 BL 0x3C32E90
	0x03A26648 CBZ X0, 0x3A267C0
	0x03A2664C MOV X1, X31
	0x03A26650 BL 0x3C3F58C
	0x03A26654 MOV X0, X19
	0x03A26658 MOV X1, X31
	0x03A2665C STP S0, S1, [X19 + 0xA4]
	0x03A26660 STR S2, [X19 + 0xAC]
	0x03A26664 BL 0x3C32E90
	0x03A26668 CBZ X0, 0x3A267C0
	0x03A2666C MOV X1, X31
	0x03A26670 BL 0x3C40EA8
	0x03A26674 MOV X0, X19
	0x03A26678 MOV X1, X31
	0x03A2667C STP S0, S1, [X19 + 0xB0]
	0x03A26680 STR S2, [X19 + 0xB8]
	0x03A26684 BL 0x3C32E90
	0x03A26688 CBZ X0, 0x3A267C0
	0x03A2668C MOV X1, X31
	0x03A26690 BL 0x3C3DEB4
	0x03A26694 STP S0, S1, [X19 + 0xBC]
	0x03A26698 STP S2, S3, [X19 + 0xC4]
	0x03A2669C ADRP X20, 0x9B2000
	0x03A266A0 LDP S12, S13, [X19 + 0xA4]
	0x03A266A4 LDRB W8, [X20 + 0x85B]
	0x03A266A8 LDR V14, [X19 + 0xAC]
	0x03A266AC MOV V8.16B, V0.16B
	0x03A266B0 MOV V9.16B, V1.16B
	0x03A266B4 MOV V10.16B, V2.16B
	0x03A266B8 MOV V11.16B, V3.16B
	0x03A266BC CBNZ W8, 0x3A266D4
	0x03A266C0 ADRP X0, 0x6CD000
	0x03A266C4 LDR X0, [X0 + 0x5A0]
	0x03A266C8 BL 0x1C16CF4
	0x03A266CC MOVZ W8, 0x1
	0x03A266D0 STRB W8, [X20 + 0x85B]
	0x03A266D4 ADRP X8, 0x6CD000
	0x03A266D8 LDR X8, [X8 + 0x5A0]
	0x03A266DC MOV V1.16B, V13.16B
	0x03A266E0 MOV V2.16B, V14.16B
	0x03A266E4 MOV V3.16B, V8.16B
	0x03A266E8 LDR X8, [X8]
	0x03A266EC MOV V4.16B, V9.16B
	0x03A266F0 MOV V5.16B, V10.16B
	0x03A266F4 MOV V6.16B, V11.16B
	0x03A266F8 LDR X8, [X8 + 0xB8]
	0x03A266FC MOV X0, X31
	0x03A26700 LDR V0, [X8 + 0x14]
	0x03A26704 LDUR X9, [X8 + 0xC]
	0x03A26708 ADD X8, X31, 0x90
	0x03A2670C STR S0, [X31 + 0x8]
	0x03A26710 MOV V0.16B, V12.16B
	0x03A26714 STR X9, [X31]
	0x03A26718 BL 0x3C26FA8
	0x03A2671C LDP V1, V0, [X31 + 0xB0]
	0x03A26720 LDP V3, V2, [X31 + 0x90]
	0x03A26724 ADD X0, X19, 0xCC
	0x03A26728 ADD X8, X31, 0x50
	0x03A2672C MOV X1, X31
	0x03A26730 STP V1, V0, [X31 + 0xF0]
	0x03A26734 STP V3, V2, [X31 + 0xD0]
	0x03A26738 STUR V0, [X19 + 0xFC]
	0x03A2673C STUR V1, [X19 + 0xEC]
	0x03A26740 STUR V2, [X19 + 0xDC]
	0x03A26744 STUR V3, [X19 + 0xCC]
	0x03A26748 BL 0x3C271CC
	0x03A2674C LDP V1, V0, [X31 + 0x70]
	0x03A26750 LDP V3, V2, [X31 + 0x50]
	0x03A26754 ADD X8, X19, 0x10C
	0x03A26758 MOV X0, X19
	0x03A2675C MOV X1, X31
	0x03A26760 STP V1, V0, [X31 + 0xB0]
	0x03A26764 STP V3, V2, [X31 + 0x90]
	0x03A26768 STP V1, V0, [X8 + 0x20]
	0x03A2676C STP V3, V2, [X8]
	0x03A26770 BL 0x3C32E90
	0x03A26774 CBZ X0, 0x3A267C0
	0x03A26778 ADD X8, X31, 0x10
	0x03A2677C MOV X1, X31
	0x03A26780 BL 0x3C3F1C8
	0x03A26784 LDP V1, V0, [X31 + 0x30]
	0x03A26788 LDP V3, V2, [X31 + 0x10]
	0x03A2678C ADD X8, X19, 0x14C
	0x03A26790 LDP X20, X19, [X31 + 0x160]
	0x03A26794 LDP X29, X30, [X31 + 0x150]
	0x03A26798 LDP D9, D8, [X31 + 0x140]
	0x03A2679C LDP D11, D10, [X31 + 0x130]
	0x03A267A0 LDP D13, D12, [X31 + 0x120]
	0x03A267A4 LDR V14, [X31 + 0x110]
	0x03A267A8 STP V1, V0, [X31 + 0x70]
	0x03A267AC STP V3, V2, [X31 + 0x50]
	0x03A267B0 STP V1, V0, [X8 + 0x20]
	0x03A267B4 STP V3, V2, [X8]
	0x03A267B8 ADD X31, X31, 0x170
	0x03A267BC RET
	0x03A267C0 BL 0x1C16F20
	0x03A267C4 AND W8, W1, 0x1
	0x03A267C8 STRB W8, [X0 + 0x35]
	0x03A267CC RET
	0x03A267D0 LDRB W8, [X0 + 0x35]
	0x03A267D4 CBZ W8, 0x3A267E8
	0x03A267D8 LDRB W8, [X0 + 0x34]
	0x03A267DC CMP W8, 0x0
	0x03A267E0 CSET W0, NE
	0x03A267E4 RET
	0x03A267E8 MOV W0, W31
	0x03A267EC RET
	0x03A267F0 AND W8, W1, 0x1
	0x03A267F4 STRB W8, [X0 + 0x37]
	0x03A267F8 RET
	0x03A267FC LDRB W0, [X0 + 0x37]
	0x03A26800 RET
	0x03A26804 AND W8, W1, 0x1
	0x03A26808 STRB W8, [X0 + 0x36]
	0x03A2680C RET
	0x03A26810 LDRB W0, [X0 + 0x36]
	0x03A26814 RET
	0x03A26818 STR X30, [X31 - 0x30]!
	0x03A2681C STP X22, X21, [X31 + 0x10]
	0x03A26820 STP X20, X19, [X31 + 0x20]
	0x03A26824 ADRP X19, 0x9BC000
	0x03A26828 LDRB W8, [X19 + 0x2A]
	0x03A2682C TBNZ X8, 0x0, 0x3A26844
	0x03A26830 ADRP X0, 0x6CE000
	0x03A26834 LDR X0, [X0 + 0xE58]
	0x03A26838 BL 0x1C16CF4
	0x03A2683C MOVZ W8, 0x1
	0x03A26840 STRB W8, [X19 + 0x2A]
	0x03A26844 MOV X0, X31
	0x03A26848 BL 0x3C00950
	0x03A2684C CBZ X0, 0x3A268DC
	0x03A26850 ADRP X8, 0x6CE000
	0x03A26854 LDR X8, [X8 + 0xE58]
	0x03A26858 LDR X20, [X0 + 0x18]
	0x03A2685C LDR X0, [X8]
	0x03A26860 MOV W1, W20
	0x03A26864 BL 0x1C16D6C
	0x03A26868 CMP W20, 0x1
	0x03A2686C MOV X19, X0
	0x03A26870 B.LT 0x3A268C8
	0x03A26874 MOV X21, X31
	0x03A26878 AND X20, X20, 0x0
	0x03A2687C MOVZ W22, 0x20
	0x03A26880 MOV X0, X31
	0x03A26884 BL 0x3C00950
	0x03A26888 CBZ X0, 0x3A268DC
	0x03A2688C LDR W8, [X0 + 0x18]
	0x03A26890 CMP X21, X8
	0x03A26894 B.CS 0x3A268E0
	0x03A26898 ADD X0, X0, X22
	0x03A2689C MOV X1, X31
	0x03A268A0 BL 0x3C008D0
	0x03A268A4 CBZ X19, 0x3A268DC
	0x03A268A8 LDR W8, [X19 + 0x18]
	0x03A268AC CMP X21, X8
	0x03A268B0 B.CS 0x3A268E0
	0x03A268B4 ADD X21, X21, 0x1
	0x03A268B8 STR W0, [X19, X22, LSL]
	0x03A268BC CMP X20, X21
	0x03A268C0 ADD X22, X22, 0x4
	0x03A268C4 B.NE 0x3A26880
	0x03A268C8 MOV X0, X19
	0x03A268CC LDP X20, X19, [X31 + 0x20]
	0x03A268D0 LDP X22, X21, [X31 + 0x10]
	0x03A268D4 LDR X30, [X31], #0x30
	0x03A268D8 RET
	0x03A268DC BL 0x1C16F20
	0x03A268E0 BL 0x1C16F28
	0x03A268E4 STR X30, [X31 - 0x10]!
	0x03A268E8 CBZ X1, 0x3A26938
	0x03A268EC LDR V0, [X1 + 0xAC]
	0x03A268F0 LDR V1, [X0 + 0x88]
	0x03A268F4 LDR V2, [X1 + 0xB0]
	0x03A268F8 LDUR V3, [X0 + 0x8C]
	0x03A268FC LDR V4, [X1 + 0xDC]
	0x03A26900 LDR V5, [X0 + 0x94]
	0x03A26904 FSUB S0, S0, S1
	0x03A26908 FSUB V1.2S, V2.2S, V3.2S
	0x03A2690C FMUL S0, S0, S0
	0x00000000 INVALID
	0x03A26914 FADD S2, S4, S5
	0x03A26918 FADD S0, S0, S1
	0x03A2691C MOV S1, V1.S[1]
	0x03A26920 FADD S0, S0, S1
	0x03A26924 FMUL S1, S2, S2
	0x03A26928 FCMP S0, S1
	0x03A2692C CSET W0, LS
	0x03A26930 LDR X30, [X31], #0x10
	0x03A26934 RET
	0x03A26938 BL 0x1C16F20
	0x03A2693C STP X30, X21, [X31 - 0x20]!
	0x03A26940 STP X20, X19, [X31 + 0x10]
	0x03A26944 ADRP X21, 0x9BC000
	0x03A26948 LDRB W8, [X21 + 0x2B]
	0x03A2694C MOV W19, W1
	0x03A26950 MOV X20, X0
	0x03A26954 TBNZ X8, 0x0, 0x3A2696C
	0x03A26958 ADRP X0, 0x728000
	0x03A2695C LDR X0, [X0 + 0xD00]
	0x03A26960 BL 0x1C16CF4
	0x03A26964 MOVZ W8, 0x1
	0x03A26968 STRB W8, [X21 + 0x2B]
	0x03A2696C LDR X0, [X20 + 0x38]
	0x03A26970 CBZ X0, 0x3A26990
	0x03A26974 ADRP X8, 0x728000
	0x03A26978 LDR X8, [X8 + 0xD00]
	0x03A2697C MOV W1, W19
	0x03A26980 LDR X2, [X8]
	0x03A26984 BL 0x22E7518
	0x03A26988 ORN W8, W31, W0, 0x0
	0x03A2698C UBFM W0, W8, 0x1F, 0x1F
	0x03A26990 LDP X20, X19, [X31 + 0x10]
	0x03A26994 LDP X30, X21, [X31], #0x20
	0x03A26998 RET
	0x03A2699C SUB X31, X31, 0x90
	0x03A269A0 STR D14, [X31 + 0x30]
	0x03A269A4 STP D13, D12, [X31 + 0x38]
	0x03A269A8 STP D11, D10, [X31 + 0x48]
	0x03A269AC STP D9, D8, [X31 + 0x58]
	0x03A269B0 STR X30, [X31 + 0x68]
	0x03A269B4 STP X22, X21, [X31 + 0x70]
	0x03A269B8 STP X20, X19, [X31 + 0x80]
	0x03A269BC ADRP X20, 0x9BC000
	0x03A269C0 LDRB W8, [X20 + 0x2C]
	0x03A269C4 MOV X19, X0
	0x03A269C8 TBNZ X8, 0x0, 0x3A26A04
	0x03A269CC ADRP X0, 0x72E000
	0x03A269D0 LDR X0, [X0 + 0xA40]
	0x03A269D4 BL 0x1C16CF4
	0x03A269D8 ADRP X0, 0x6F9000
	0x03A269DC LDR X0, [X0 + 0x5A0]
	0x03A269E0 BL 0x1C16CF4
	0x03A269E4 ADRP X0, 0x6CD000
	0x03A269E8 LDR X0, [X0 + 0x598]
	0x03A269EC BL 0x1C16CF4
	0x03A269F0 ADRP X0, 0x6CF000
	0x03A269F4 LDR X0, [X0 + 0x9B0]
	0x03A269F8 BL 0x1C16CF4
	0x03A269FC MOVZ W8, 0x1
	0x03A26A00 STRB W8, [X20 + 0x2C]
	0x03A26A04 LDR X8, [X19 + 0x38]
	0x03A26A08 CBNZ X8, 0x3A26A14
	0x03A26A0C BL 0x3A26818
	0x03A26A10 STR X0, [X19 + 0x38]
	0x03A26A14 MOV X0, X19
	0x03A26A18 MOV X1, X31
	0x03A26A1C BL 0x3C32E90
	0x03A26A20 CBZ X0, 0x3A26D20
	0x03A26A24 ADRP X20, 0x6F9000
	0x03A26A28 ADRP X22, 0x6CD000
	0x03A26A2C LDR X20, [X20 + 0x5A0]
	0x03A26A30 LDR X22, [X22 + 0x598]
	0x03A26A34 MOV X1, X31
	0x03A26A38 BL 0x3C3F58C
	0x03A26A3C ADRP X21, 0x9B2000
	0x03A26A40 LDRB W8, [X21 + 0x85B]
	0x03A26A44 MOV V8.16B, V0.16B
	0x03A26A48 MOV V9.16B, V1.16B
	0x03A26A4C CBNZ W8, 0x3A26A64
	0x03A26A50 ADRP X0, 0x6CD000
	0x03A26A54 LDR X0, [X0 + 0x5A0]
	0x03A26A58 BL 0x1C16CF4
	0x03A26A5C MOVZ W8, 0x1
	0x03A26A60 STRB W8, [X21 + 0x85B]
	0x03A26A64 ADRP X21, 0x6CD000
	0x03A26A68 LDR X21, [X21 + 0x5A0]
	0x03A26A6C LDR X1, [X20]
	0x03A26A70 MOV X0, X19
	0x03A26A74 LDR X8, [X21]
	0x03A26A78 LDR X8, [X8 + 0xB8]
	0x03A26A7C LDUR V10, [X8 + 0xC]
	0x03A26A80 BL 0x21A3894
	0x03A26A84 LDR X8, [X22]
	0x03A26A88 MOV X20, X0
	0x03A26A8C LDR W9, [X8 + 0xE0]
	0x03A26A90 CBNZ W9, 0x3A26A9C
	0x03A26A94 MOV X0, X8
	0x03A26A98 BL 0x1C16DFC
	0x03A26A9C MOV X0, X20
	0x03A26AA0 MOV X1, X31
	0x03A26AA4 MOV X2, X31
	0x03A26AA8 BL 0x3C354F8
	0x03A26AAC TBZ X0, 0x0, 0x3A26AC8
	0x03A26AB0 CBZ X20, 0x3A26D20
	0x03A26AB4 ADD X8, X31, 0x18
	0x03A26AB8 MOV X0, X20
	0x03A26ABC MOV X1, X31
	0x03A26AC0 BL 0x3C12A28
	0x03A26AC4 B 0x3A26B1C
	0x03A26AC8 ADRP X8, 0x72E000
	0x03A26ACC LDR X8, [X8 + 0xA40]
	0x03A26AD0 MOV X0, X19
	0x03A26AD4 LDR X1, [X8]
	0x03A26AD8 BL 0x21A3894
	0x03A26ADC LDR X8, [X22]
	0x03A26AE0 MOV X20, X0
	0x03A26AE4 LDR W9, [X8 + 0xE0]
	0x03A26AE8 CBNZ W9, 0x3A26AF4
	0x03A26AEC MOV X0, X8
	0x03A26AF0 BL 0x1C16DFC
	0x03A26AF4 MOV X0, X20
	0x03A26AF8 MOV X1, X31
	0x03A26AFC MOV X2, X31
	0x03A26B00 BL 0x3C354F8
	0x03A26B04 TBZ X0, 0x0, 0x3A26B28
	0x03A26B08 CBZ X20, 0x3A26D20
	0x03A26B0C ADD X8, X31, 0x18
	0x03A26B10 MOV X0, X20
	0x03A26B14 MOV X1, X31
	0x03A26B18 BL 0x3C89F14
	0x03A26B1C LDP S8, S9, [X31 + 0x18]
	0x03A26B20 LDUR V0, [X31 + 0x24]
	0x03A26B24 B 0x3A26B30
	0x03A26B28 MOVI V0.2S, 0x3F, 0x18
	0x00000000 INVALID
	0x03A26B30 ADRP X20, 0x9B2000
	0x03A26B34 LDRB W8, [X20 + 0x783]
	0x03A26B38 STR V0, [X31]
	0x03A26B3C CBNZ W8, 0x3A26B54
	0x03A26B40 ADRP X0, 0x6CD000
	0x03A26B44 LDR X0, [X0 + 0x5A0]
	0x03A26B48 BL 0x1C16CF4
	0x03A26B4C MOVZ W8, 0x1
	0x03A26B50 STRB W8, [X20 + 0x783]
	0x03A26B54 LDR X8, [X21]
	0x03A26B58 MOV X0, X19
	0x03A26B5C MOV X1, X31
	0x03A26B60 LDR X8, [X8 + 0xB8]
	0x03A26B64 LDP S13, S14, [X8]
	0x03A26B68 BL 0x3C32E90
	0x03A26B6C CBZ X0, 0x3A26D20
	0x03A26B70 MOV X1, X31
	0x03A26B74 BL 0x3C3F58C
	0x03A26B78 MOV X0, X19
	0x03A26B7C MOV X1, X31

ISIL:
	001 Subtract X31, X31, 432
	002 Move [X31+272], D14
	003 Move [X31+288], D13
	004 Move [X31+296], D12
	005 Move [X31+304], D11
	006 Move [X31+312], D10
	007 Move [X31+320], D9
	008 Move [X31+328], D8
	009 Move [X31+336], X29
	010 Move [X31+344], X30
	011 Move [X31+352], X28
	012 Move [X31+360], X27
	013 Move [X31+368], X26
	014 Move [X31+376], X25
	015 Move [X31+384], X24
	016 Move [X31+392], X23
	017 Move [X31+400], X22
	018 Move [X31+408], X21
	019 Move [X31+416], X20
	020 Move [X31+424], X19
	021 Move [X31+136], X3
	022 Move [X31+144], W0
	023 Move X21, 0x9BD000
	024 Move X20, 0x6F9000
	025 Move X28, [X31+448]
	026 Move W8, [X21+34]
	027 Move X25, [X31+432]
	028 Move X20, [X20+2112]
	029 Move V12, V1
	030 Move V10, V0
	031 Move X22, X7
	032 Move X24, X6
	033 Move X23, X5
	034 Move X19, X4
	035 Move X29, X2
	036 Move X26, X1
	037 Move TEMP, X8
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfEqual {76}
	041 Move X0, 0x6CE000
	042 Move X0, [X0+1448]
	043 Call 0x1C17CF4
	044 Move X0, 0x6F7000
	045 Move X0, [X0+216]
	046 Call 0x1C17CF4
	047 Move X0, 0x6F8000
	048 Move X0, [X0+328]
	049 Call 0x1C17CF4
	050 Move X0, 0x72F000
	051 Move X0, [X0+2488]
	052 Call 0x1C17CF4
	053 Move X0, 0x72F000
	054 Move X0, [X0+2496]
	055 Call 0x1C17CF4
	056 Move X0, 0x72F000
	057 Move X0, [X0+1320]
	058 Call 0x1C17CF4
	059 Move X0, 0x72F000
	060 Move X0, [X0+1328]
	061 Call 0x1C17CF4
	062 Move X0, 0x6F8000
	063 Move X0, [X0+312]
	064 Call 0x1C17CF4
	065 Move X0, 0x72F000
	066 Move X0, [X0+2512]
	067 Call 0x1C17CF4
	068 Move X0, 0x72F000
	069 Move X0, [X0+2520]
	070 Call 0x1C17CF4
	071 Move X0, 0x6F9000
	072 Move X0, [X0+2112]
	073 Call 0x1C17CF4
	074 Move W8, 1
	075 Move [X21+34], W8
	076 Move X8, [X20]
	077 Move [X31+280], X31
	078 Move [X31+256], X31
	079 Move [X31+264], X31
	080 Move [X31+240], X31
	081 Move [X31+248], X31
	082 Move [X31+224], X31
	083 Move [X31+232], X31
	084 Move [X31+220], W31
	085 Move [X31+200], X31
	086 Move [X31+208], X31
	087 Move [X31+184], X31
	088 Move [X31+192], X31
	089 Move [X31+168], X31
	090 Move [X31+176], X31
	091 Move [X31+152], X31
	092 Move [X31+160], X31
	093 Move X8, [X8+184]
	094 NotImplemented "Instruction CMP not yet implemented."
	095 Move S13, [X8]
	096 Move S11, [X8+4]
	097 Move S8, [X8+8]
	098 Move S9, [X8+12]
	099 Move [X28], W31
	100 Move [X25], W31
	101 Move [X24], W31
	102 Move X20, 0x6F7000
	103 Move X20, [X20+216]
	104 Move X0, [X20]
	105 Move W8, [X0+224]
	106 Compare W8, 0
	107 JumpIfNotEqual {110}
	108 Call 0x1C17DFC
	109 Move X0, [X20]
	110 Compare W19, 0
	111 JumpIfEqual {498}
	112 Move X8, [X0+184]
	113 Move W9, [X8+12]
	114 NotImplemented "Instruction CMP not yet implemented."
	115 Move [X31+280], X31
	116 Move W9, [X0+224]
	117 Move X10, [X31+440]
	118 Move X21, X22
	119 Move [X31+128], X10
	120 Compare W9, 0
	121 JumpIfNotEqual {125}
	122 Call 0x1C17DFC
	123 Move X8, [X20]
	124 Move X8, [X8+184]
	125 Move W1, [X8+8]
	126 Move X8, 0x6F8000
	127 Move X8, [X8+312]
	128 Move W27, [X31+144]
	129 Add X0, X31, 256
	130 Move W3, 1
	131 Move X4, [X8]
	132 Move W2, W27
	133 Move X22, X20
	134 Add X20, X31, 256
	135 Call NativeArray`1<Int32>..ctor, X0, X1, X2, X3
	136 Move X8, [X22]
	137 Move X22, 0x72F000
	138 Add X0, X31, 240
	139 Move W3, 1
	140 Move X8, [X8+184]
	141 Move X22, [X22+1328]
	142 Move W2, W27
	143 Move W1, [X8+12]
	144 Move X4, [X22]
	145 Call NativeArray`1<float2>..ctor, X0, X1, X2, X3
	146 Move X4, [X31+136]
	147 Add X8, X31, 284
	148 Add X9, X31, 280
	149 Add X7, X31, 240
	150 Move W0, W27
	151 Move X1, X26
	152 Move X2, X29
	153 Move W3, W29
	154 Move X5, X19
	155 Move W6, W19
	156 Move [X31+16], X8
	157 Move [X31+24], X31
	158 Move [X31], X9
	159 Move [X31+8], X20
	160 Call Tessellator.Tessellate, X0, X1, X2, X3, X4, X5, X6, X7, X8
	161 NotImplemented "Instruction FCMP not yet implemented."
	162 NotImplemented "Instruction CSET not yet implemented."
	163 NotImplemented "Instruction FCMP not yet implemented."
	164 NotImplemented "Instruction CSET not yet implemented."
	165 Move W10, W0
	166 And W8, W9, W8
	167 Move W20, W31
	168 Move TEMP, X8
	169 And TEMP, TEMP, 1
	170 Compare TEMP, 1
	171 JumpIfEqual {246}
	172 Move TEMP, X10
	173 And TEMP, TEMP, 1
	174 Compare TEMP, 1
	175 JumpIfNotEqual {246}
	176 Move [X31+120], X28
	177 Move [X31+232], X31
	178 Move X20, 0x6F7000
	179 Move X20, [X20+216]
	180 Move [X31+224], X31
	181 Move [X31+220], W31
	182 Move W28, [X31+456]
	183 Move X0, [X20]
	184 Move [X31+100], W10
	185 Move W8, [X0+224]
	186 Compare W8, 0
	187 JumpIfNotEqual {190}
	188 Call 0x1C17DFC
	189 Move X0, [X20]
	190 Move X9, 0x72F000
	191 Move X8, [X0+184]
	192 Move X9, [X9+1320]
	193 Move W27, [X31+144]
	194 Add X0, X31, 200
	195 Move W1, [X8+4]
	196 Move X4, [X9]
	197 Move W3, 1
	198 Move W2, W27
	199 Call NativeArray`1<int2>..ctor, X0, X1, X2, X3
	200 Move X8, [X20]
	201 Move X4, [X22]
	202 Add X0, X31, 184
	203 Move W3, 1
	204 Move X8, [X8+184]
	205 Move W2, W27
	206 Move W1, [X8+12]
	207 Call NativeArray`1<float2>..ctor, X0, X1, X2, X3
	208 Move X8, [X20]
	209 Add X0, X31, 168
	210 Move W3, 1
	211 Move W2, W27
	212 Move X8, [X8+184]
	213 Move W1, [X8+8]
	214 Move X8, 0x6F8000
	215 Move X8, [X8+312]
	216 Move X4, [X8]
	217 Call NativeArray`1<Int32>..ctor, X0, X1, X2, X3
	218 Move X8, [X20]
	219 Move X4, [X22]
	220 Add X0, X31, 152
	221 Move W3, 1
	222 Move X8, [X8+184]
	223 Move W2, W27
	224 Move W1, [X8+12]
	225 Call NativeArray`1<float2>..ctor, X0, X1, X2, X3
	226 Move X9, 0x6CE000
	227 Move X8, [X20]
	228 Move X9, [X9+1448]
	229 Move X8, [X8+184]
	230 Move X0, [X9]
	231 Move W20, [X8+20]
	232 Move W9, [X0+224]
	233 Compare W9, 0
	234 JumpIfNotEqual {236}
	235 Call 0x1C17DFC
	236 Move W0, W28
	237 Move W1, W20
	238 Move X2, X31
	239 Call Math.Min, X0, X1
	240 NotImplemented "Instruction FCMP not yet implemented."
	241 Move W28, W0
	242 Move X27, X21
	243 NotImplemented "Instruction FCMP not yet implemented."
	244 Move W20, W31
	245 Move X28, [X31+120]
	246 Move X27, X21
	247 Move TEMP, X20
	248 And TEMP, TEMP, 1
	249 Compare TEMP, 1
	250 JumpIfNotEqual {449}
	251 Move [X31+80], X25
	252 Move [X31+104], X24
	253 Move [X31+112], X23
	254 Move X22, 0x72F000
	255 Move X22, [X22+2512]
	256 Move S0, 10
	257 Add X25, X31, 220
	258 Add X24, X31, 152
	259 Add X21, X31, 224
	260 NotImplemented "Instruction FDIV not yet implemented."
	261 Add X23, X31, 236
	262 Move X20, 0x6F7000
	263 Move X20, [X20+216]
	264 Move X0, [X20]
	265 Move W8, [X0+224]
	266 Compare W8, 0
	267 JumpIfNotEqual {270}
	268 Call 0x1C17DFC
	269 Move X0, [X20]
	270 Subtract W28, W28, 1
	271 Move X8, [X0+184]
	272 Move V0, [X8]
	273 NotImplemented "Instruction SCVTF not yet implemented."
	274 NotImplemented "Instruction FCMP not yet implemented."
	275 Move W8, [X0+224]
	276 Compare W8, 0
	277 JumpIfNotEqual {279}
	278 Call 0x1C17DFC
	279 Move X5, [X31+136]
	280 Add X8, X31, 232
	281 Add X3, X31, 184
	282 Add X4, X31, 228
	283 Move [X31+8], X8
	284 Add X8, X31, 200
	285 Move X0, X26
	286 Move X1, X29
	287 Move W2, W29
	288 Move X6, X19
	289 Move W7, W19
	290 Move [X31], X8
	291 Call ModuleHandle.CopyGraph, X0, X1, X2, X3, X4, X5, X6, X7
	292 Move X0, [X31+256]
	293 Move X1, [X31+264]
	294 Move W2, [X31+284]
	295 Move X5, [X31+240]
	296 Move X6, [X31+248]
	297 Move W7, [X31+280]
	298 Add X3, X31, 168
	299 Add X4, X31, 224
	300 Move [X31], X24
	301 Move [X31+8], X25
	302 Call ModuleHandle.CopyGeometry, X0, X1, X2, X3, X4, X5, X6, X7
	303 Move X0, [X22]
	304 Move W8, [X0+224]
	305 Compare W8, 0
	306 JumpIfNotEqual {308}
	307 Call 0x1C17DFC
	308 Move W0, [X31+144]
	309 Add X1, X31, 184
	310 Add X2, X31, 228
	311 Add X3, X31, 200
	312 Add X4, X31, 232
	313 Add X5, X31, 152
	314 Add X6, X31, 220
	315 Add X7, X31, 168
	316 Move V0, V10
	317 Move V1, V12
	318 Move [X31+8], X23
	319 Move [X31+16], X31
	320 Move [X31], X21
	321 Call Refinery.Condition, X0, V0, V1, X1, X2, X3, X4, X5, X6, X7, X8, X9
	322 Move TEMP, X0
	323 And TEMP, TEMP, 1
	324 Compare TEMP, 1
	325 JumpIfNotEqual {329}
	326 Move W20, [X31+224]
	327 Move W8, [X31+228]
	328 NotImplemented "Instruction CMP not yet implemented."
	329 Add S12, S13, S12
	330 NotImplemented "Instruction CMP not yet implemented."
	331 Move W20, W31
	332 Move X8, -49524736
	333 Move X9, -49524736
	334 Move V0, [X8+324]
	335 Move X10, -49524736
	336 Move V1, [X9+236]
	337 Move X11, -49524736
	338 Move V2, [X10+708]
	339 Move X12, -49524736
	340 Move V3, [X11+188]
	341 Add S0, S10, S0
	342 Move V13, [X12+92]
	343 NotImplemented "Instruction FDIV not yet implemented."
	344 Multiply S0, S0, S2
	345 Add S10, S0, S3
	346 NotImplemented "Instruction FCMP not yet implemented."
	347 Move [X31+80], X25
	348 Move [X31+104], X24
	349 Move [X31+112], X23
	350 Move X21, 0x72F000
	351 Move X21, [X21+2512]
	352 Move S0, 10
	353 Add X23, X31, 220
	354 Add X24, X31, 152
	355 Add X25, X31, 224
	356 NotImplemented "Instruction FDIV not yet implemented."
	357 Add X22, X31, 236
	358 Move X8, 0x6F7000
	359 Move X8, [X8+216]
	360 Move X0, [X8]
	361 Move W8, [X0+224]
	362 Compare W8, 0
	363 JumpIfNotEqual {365}
	364 Call 0x1C17DFC
	365 Move X5, [X31+136]
	366 Add X8, X31, 232
	367 Add X3, X31, 184
	368 Add X4, X31, 228
	369 Move [X31+8], X8
	370 Add X8, X31, 200
	371 Move X0, X26
	372 Move X1, X29
	373 Move W2, W29
	374 Move X6, X19
	375 Move W7, W19
	376 Move [X31], X8
	377 Call ModuleHandle.CopyGraph, X0, X1, X2, X3, X4, X5, X6, X7
	378 Move X0, [X31+256]
	379 Move X1, [X31+264]
	380 Move W2, [X31+284]
	381 Move X5, [X31+240]
	382 Move X6, [X31+248]
	383 Move W7, [X31+280]
	384 Add X3, X31, 168
	385 Add X4, X31, 224
	386 Move [X31], X24
	387 Move [X31+8], X23
	388 Call ModuleHandle.CopyGeometry, X0, X1, X2, X3, X4, X5, X6, X7
	389 Move X0, [X21]
	390 Move W8, [X0+224]
	391 Compare W8, 0
	392 JumpIfNotEqual {394}
	393 Call 0x1C17DFC
	394 Move W0, [X31+144]
	395 Add X1, X31, 184
	396 Add X2, X31, 228
	397 Add X3, X31, 200
	398 Add X4, X31, 232
	399 Add X5, X31, 152
	400 Add X6, X31, 220
	401 Add X7, X31, 168
	402 Move V0, V10
	403 Move V1, V12
	404 Move [X31+8], X22
	405 Move [X31+16], X31
	406 Move [X31], X25
	407 Call Refinery.Condition, X0, V0, V1, X1, X2, X3, X4, X5, X6, X7, X8, X9
	408 Move TEMP, X0
	409 And TEMP, TEMP, 1
	410 Compare TEMP, 1
	411 JumpIfNotEqual {415}
	412 Move W20, [X31+224]
	413 Move W8, [X31+228]
	414 NotImplemented "Instruction CMP not yet implemented."
	415 NotImplemented "Instruction CMP not yet implemented."
	416 Add S10, S14, S10
	417 NotImplemented "Instruction FCMP not yet implemented."
	418 Subtract W28, W28, 1
	419 Move X23, [X31+112]
	420 Move X28, [X31+120]
	421 Move X24, [X31+104]
	422 Move X25, [X31+80]
	423 Move W20, W31
	424 Move S10, W31
	425 Move X21, 0x72F000
	426 Move X21, [X21+2496]
	427 Add X0, X31, 152
	428 Move X1, [X21]
	429 Call NativeArray`1<float2>.Dispose, X0
	430 Move X8, 0x6F8000
	431 Move X8, [X8+328]
	432 Add X0, X31, 168
	433 Move X1, [X8]
	434 Call NativeArray`1<Int32>.Dispose, X0
	435 Move X1, [X21]
	436 Add X0, X31, 184
	437 Call NativeArray`1<float2>.Dispose, X0
	438 Move X8, 0x72F000
	439 Move X8, [X8+2488]
	440 Add X0, X31, 200
	441 Move X1, [X8]
	442 Call NativeArray`1<int2>.Dispose, X0
	443 Move W10, [X31+100]
	444 Move V13, V10
	445 Move TEMP, X20
	446 And TEMP, TEMP, 1
	447 Compare TEMP, 1
	448 JumpIfEqual {488}
	449 Xor W8, W10, 1
	450 Move TEMP, X8
	451 And TEMP, TEMP, 1
	452 Compare TEMP, 1
	453 JumpIfEqual {488}
	454 Move X8, 0x6F7000
	455 Move X5, [X31+256]
	456 Move X22, [X31+264]
	457 Move X8, [X8+216]
	458 Move X20, X27
	459 Move X27, X25
	460 Move X29, X24
	461 Move X0, [X8]
	462 Move X26, X23
	463 Move W23, [X31+284]
	464 Move X21, [X31+240]
	465 Move X24, [X31+248]
	466 Move W8, [X0+224]
	467 Move W25, [X31+280]
	468 Compare W8, 0
	469 JumpIfNotEqual {473}
	470 Move [X31+144], X5
	471 Call 0x1C17DFC
	472 Move X5, [X31+144]
	473 Move X3, [X31+128]
	474 Move X0, [X31+136]
	475 Move X1, X19
	476 Move W2, W19
	477 Move X4, X28
	478 Move X6, X22
	479 Move W7, W23
	480 Move [X31+40], X26
	481 Move [X31+48], X29
	482 Move [X31+32], W25
	483 Move [X31+16], X21
	484 Move [X31+24], X24
	485 Move [X31], X20
	486 Move [X31+8], X27
	487 Call ModuleHandle.TransferOutput, X0, X1, X2, X3, X4, X5, X6, X7, X8, X9, X10, X11
	488 Move X8, 0x72F000
	489 Move X8, [X8+2496]
	490 Add X0, X31, 240
	491 Move X1, [X8]
	492 Call NativeArray`1<float2>.Dispose, X0
	493 Move X8, 0x6F8000
	494 Move X8, [X8+328]
	495 Add X0, X31, 256
	496 Move X1, [X8]
	497 Call NativeArray`1<Int32>.Dispose, X0
	498 Move V0, V13
	499 Move V1, V11
	500 Move V2, V8
	501 Move V3, V9
	502 Move X20, [X31+416]
	503 Move X19, [X31+424]
	504 Move X22, [X31+400]
	505 Move X21, [X31+408]
	506 Move X24, [X31+384]
	507 Move X23, [X31+392]
	508 Move X26, [X31+368]
	509 Move X25, [X31+376]
	510 Move X28, [X31+352]
	511 Move X27, [X31+360]
	512 Move X29, [X31+336]
	513 Move X30, [X31+344]
	514 Move D9, [X31+320]
	515 Move D8, [X31+328]
	516 Move D11, [X31+304]
	517 Move D10, [X31+312]
	518 Move D13, [X31+288]
	519 Move D12, [X31+296]
	520 Move V14, [X31+272]
	521 Add X31, X31, 432
	522 Return X0
	523 Move X8, 0x6F7000
	524 Move X22, [X31+200]
	525 Move X23, [X31+208]
	526 Move W26, [X31+232]
	527 Move X8, [X8+216]
	528 Move X29, [X31+168]
	529 Move X28, [X31+176]
	530 Move X21, [X31+152]
	531 Move X24, [X31+160]
	532 Move W25, [X31+220]
	533 Move X0, [X8]
	534 Move W8, [X0+224]
	535 Compare W8, 0
	536 JumpIfNotEqual {538}
	537 Call 0x1C17DFC
	538 Move X9, [X31+104]
	539 Move X8, [X31+112]
	540 Move X4, [X31+120]
	541 Move [X31+32], W25
	542 Move X25, [X31+80]
	543 Move X3, [X31+128]
	544 Move X0, X22
	545 Move X1, X23
	546 Move W2, W26
	547 Move X5, X29
	548 Move X6, X28
	549 Move W7, W20
	550 Move [X31+40], X8
	551 Move [X31+48], X9
	552 Move [X31+16], X21
	553 Move [X31+24], X24
	554 Move [X31], X27
	555 Move [X31+8], X25
	556 Move X28, X4
	557 Call ModuleHandle.TransferOutput, X0, X1, X2, X3, X4, X5, X6, X7, X8, X9, X10, X11
	558 Move X9, 0x6F7000
	559 Move X9, [X9+216]
	560 NotImplemented "Instruction FCMP not yet implemented."
	561 Move X0, [X9]
	562 Move W20, [X31+280]
	563 Move W8, [X0+224]
	564 Compare W8, 0
	565 JumpIfNotEqual {567}
	566 Call 0x1C17DFC
	567 Add X1, X31, 168
	568 Add X2, X31, 224
	569 Add X3, X31, 152
	570 Add X4, X31, 220
	571 Move W0, W20
	572 Call ModuleHandle.VertexCleanupConditioner, X0, X1, X2, X3, X4
	573 Move X9, 0x6F7000
	574 Move X9, [X9+216]
	575 Move X0, [X9]
	576 Move W20, [X31+464]
	577 Move W8, [X0+224]
	578 Compare W8, 0
	579 JumpIfNotEqual {583}
	580 Move X21, X9
	581 Call 0x1C17DFC
	582 Move X0, [X21]
	583 Move X8, [X0+184]
	584 Move S11, W31
	585 Move W8, [X8+24]
	586 NotImplemented "Instruction CMP not yet implemented."
	587 NotImplemented "Instruction CSEL not yet implemented."
	588 NotImplemented "Instruction CMP not yet implemented."
	589 Move [X31+88], X19
	590 Move X8, 0x72F000
	591 Move X8, [X8+2520]
	592 Move W20, [X31+228]
	593 Move W26, [X31+232]
	594 Move X22, [X31+200]
	595 Move X23, [X31+208]
	596 Move X0, [X8]
	597 Move W8, [X0+224]
	598 Compare W8, 0
	599 JumpIfNotEqual {601}
	600 Call 0x1C17DFC
	601 Move W0, [X31+144]
	602 Add X8, X31, 224
	603 Add X1, X31, 184
	604 Add X6, X31, 152
	605 Add X7, X31, 220
	606 Move [X31+8], X8
	607 Move [X31+16], X31
	608 Add X8, X31, 168
	609 Move W2, W20
	610 Move X3, X22
	611 Move X4, X23
	612 Move W5, W26
	613 Move [X31], X8
	614 Call Smoothen.Condition, X0, X1, X2, X3, X4, X5, X6, X7, X8
	615 Move TEMP, X0
	616 And TEMP, TEMP, 1
	617 Compare TEMP, 1
	618 JumpIfNotEqual {662}
	619 Move X8, 0x6F7000
	620 Move X28, [X31+200]
	621 Move X29, [X31+208]
	622 Move W23, [X31+232]
	623 Move X5, [X31+168]
	624 Move X26, [X31+176]
	625 Move X8, [X8+216]
	626 Move X20, X25
	627 Move X19, X27
	628 Move W27, [X31+220]
	629 Move W22, [X31+224]
	630 Move X0, [X8]
	631 Move X25, [X31+152]
	632 Move X24, [X31+160]
	633 Move W8, [X0+224]
	634 Compare W8, 0
	635 JumpIfNotEqual {639}
	636 Move [X31+80], X5
	637 Call 0x1C17DFC
	638 Move X5, [X31+80]
	639 Move X0, X28
	640 Move X28, [X31+120]
	641 Move X3, [X31+128]
	642 Move X9, [X31+104]
	643 Move X8, [X31+112]
	644 Move X1, X29
	645 Move W2, W23
	646 Move X4, X28
	647 Move X6, X26
	648 Move W7, W22
	649 NotImplemented "Instruction SCVTF not yet implemented."
	650 Move [X31+40], X8
	651 Move [X31+48], X9
	652 Move [X31+32], W27
	653 Move [X31+16], X25
	654 Move [X31+24], X24
	655 Move X25, X20
	656 Move [X31], X19
	657 Move [X31+8], X20
	658 Move X27, X19
	659 Call ModuleHandle.TransferOutput, X0, X1, X2, X3, X4, X5, X6, X7, X8, X9, X10, X11
	660 Move X19, [X31+88]
	661 Subtract W21, W21, 1
	662 NotImplemented "Instruction FCMP not yet implemented."
	663 Move X24, [X31+104]
	664 Move X23, [X31+112]
	665 Move X8, 0x6F7000
	666 Move X8, [X8+216]
	667 Move W20, [X31+280]
	668 Move X24, [X31+104]
	669 Move X23, [X31+112]
	670 Move X0, [X8]
	671 Move W8, [X0+224]
	672 Compare W8, 0
	673 JumpIfNotEqual {675}
	674 Call 0x1C17DFC
	675 Move W0, W20
	676 Move X1, X27
	677 Move X2, X25
	678 Move X3, X23
	679 Move X4, X24
	680 Call ModuleHandle.VertexCleanupConditioner, X0, X1, X2, X3, X4
	681 Move W20, 1

Method: System.Void .cctor()

Disassembly:
	0x03A26B80 MOV V10.16B, V0.16B
	0x03A26B84 MOV V11.16B, V1.16B
	0x03A26B88 MOV V12.16B, V2.16B
	0x03A26B8C BL 0x3C32E90
	0x03A26B90 CBZ X0, 0x3A26D20
	0x03A26B94 MOV X1, X31
	0x03A26B98 BL 0x3C40EA8
	0x03A26B9C FCMP S0, 0x0
	0x03A26BA0 B.EQ 0x3A26C50
	0x03A26BA4 MOV X0, X19
	0x03A26BA8 MOV X1, X31
	0x03A26BAC BL 0x3C32E90
	0x03A26BB0 CBZ X0, 0x3A26D20
	0x03A26BB4 MOV X1, X31
	0x03A26BB8 BL 0x3C40EA8
	0x03A26BBC FCMP S1, 0x0
	0x03A26BC0 B.EQ 0x3A26C50
	0x03A26BC4 MOV X0, X19
	0x03A26BC8 MOV X1, X31
	0x03A26BCC BL 0x3C32E90
	0x03A26BD0 CBZ X0, 0x3A26D20
	0x03A26BD4 MOV X1, X31
	0x03A26BD8 BL 0x3C40EA8
	0x03A26BDC MOV X0, X19
	0x03A26BE0 MOV X1, X31
	0x03A26BE4 MOV V10.16B, V0.16B

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x9BD000
	005 Move X20, 0x6F7000
	006 Move W8, [X19+35]
	007 Move X20, [X20+216]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x6F7000
	013 Move X0, [X0+216]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+35], W8
	017 Move X8, [X20]
	018 Move X9, -49512448
	019 Move V0, [X9+3568]
	020 Move X9, 256
	021 Move X8, [X8+184]
	022 Move X20, [X31+16]
	023 Move X19, [X31+24]
	024 NotImplemented "Instruction MOVK not yet implemented."
	025 NotImplemented "Instruction MOVI not yet implemented."
	026 NotImplemented "Instruction MOVK not yet implemented."
	027 Move [X8], V1
	028 Move [X8+16], D0
	029 Move [X8+24], X9
	030 Move X30, [X31+32]
	031 Return 

