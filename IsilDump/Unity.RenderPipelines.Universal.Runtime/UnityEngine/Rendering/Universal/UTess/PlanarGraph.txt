Type: UnityEngine.Rendering.Universal.UTess.PlanarGraph

Method: System.Void RemoveDuplicateEdges(ref Unity.Collections.NativeArray`1<Unity.Mathematics.int2> edges, ref System.Int32 edgeCount, Unity.Collections.NativeArray`1<System.Int32> duplicates, System.Int32 duplicateCount)

Disassembly:
	0x03AB6FA4 ADD W11, W9, 0x1
	0x03AB6FA8 STR W11, [X20]
	0x03AB6FAC LDR X11, [X21]
	0x03AB6FB0 STR X12, [X11, X9, LSL #3]
	0x03AB6FB4 B.PL 0x3AB6EA4
	0x03AB6FB8 ORN W8, W31, W25, 0x0
	0x03AB6FBC LDP X20, X19, [X31 + 0x50]
	0x03AB6FC0 LDP X22, X21, [X31 + 0x40]
	0x03AB6FC4 LDP X24, X23, [X31 + 0x30]
	0x03AB6FC8 LDP X26, X25, [X31 + 0x20]
	0x03AB6FCC LDP X30, X27, [X31 + 0x10]
	0x03AB6FD0 AND W0, W8, 0x1
	0x03AB6FD4 ADD X31, X31, 0x60
	0x03AB6FD8 RET
	0x03AB6FDC SUB X31, X31, 0x120
	0x03AB6FE0 STP D11, D10, [X31 + 0xA0]
	0x03AB6FE4 STP D9, D8, [X31 + 0xB0]
	0x03AB6FE8 STP X29, X30, [X31 + 0xC0]
	0x03AB6FEC STP X28, X27, [X31 + 0xD0]
	0x03AB6FF0 STP X26, X25, [X31 + 0xE0]
	0x03AB6FF4 STP X24, X23, [X31 + 0xF0]
	0x03AB6FF8 STP X22, X21, [X31 + 0x100]
	0x03AB6FFC STP X20, X19, [X31 + 0x110]
	0x03AB7000 ADRP X19, 0x92B000
	0x03AB7004 LDRB W8, [X19 + 0x486]
	0x03AB7008 MOV W23, W4
	0x03AB700C MOV X20, X1
	0x03AB7010 MOV X21, X0
	0x03AB7014 STP X3, X2, [X31 + 0x10]
	0x03AB7018 TBNZ X8, 0x0, 0x3AB7030
	0x03AB701C ADRP X0, 0x69D000
	0x03AB7020 LDR X0, [X0 + 0x9C8]
	0x03AB7024 BL 0x1C16CF4
	0x03AB7028 MOVZ W8, 0x1
	0x03AB702C STRB W8, [X19 + 0x486]
	0x03AB7030 MOVI V0.2D, 0x0
	0x03AB7034 STP V0, V0, [X31 + 0x80]
	0x03AB7038 LDR W0, [X20]
	0x03AB703C ADD X8, X31, 0x60
	0x03AB7040 MOV W1, W23
	0x03AB7044 MOV X2, X31
	0x03AB7048 BL 0x3A23538
	0x03AB704C LDP V0, V1, [X31 + 0x60]
	0x03AB7050 STP V0, V1, [X31 + 0x80]
	0x03AB7054 LDR W8, [X20]
	0x03AB7058 CMP W8, 0x1
	0x03AB705C B.LT 0x3AB7148
	0x03AB7060 ADRP X27, 0x69D000
	0x03AB7064 ADRP X23, 0x63C000
	0x03AB7068 LDR X27, [X27 + 0x9C8]
	0x03AB706C LDR X23, [X23 + 0x5A8]
	0x03AB7070 MOV X28, X31
	0x03AB7074 MOV X24, X31
	0x03AB7078 ADRP X29, 0x92A000
	0x03AB707C MOVZ W19, 0x1
	0x03AB7080 ADD X22, X24, 0x1
	0x03AB7084 CMP X22, W8, SXTW
	0x03AB7088 B.GE 0x3AB7134
	0x03AB708C MOV X26, X28
	0x03AB7090 MOV W25, W19
	0x03AB7094 LDR X8, [X21]
	0x03AB7098 LDRB W9, [X29 + 0x586]
	0x03AB709C ADD X10, X8, X24, 0x4, LSL
	0x03AB70A0 ADD X8, X8, X26
	0x03AB70A4 LDP D8, D9, [X10]
	0x03AB70A8 LDP D10, D11, [X8 + 0x10]
	0x03AB70AC CBNZ W9, 0x3AB70C0
	0x03AB70B0 MOV X0, X23
	0x03AB70B4 BL 0x1C16CF4
	0x03AB70B8 MOVZ W8, 0x1
	0x03AB70BC STRB W8, [X29 + 0x586]
	0x03AB70C0 LDR X0, [X23]
	0x03AB70C4 LDR W8, [X0 + 0xE0]
	0x03AB70C8 CBNZ W8, 0x3AB70D0
	0x03AB70CC BL 0x1C16DFC
	0x03AB70D0 LDR X0, [X27]
	0x03AB70D4 LDR W8, [X0 + 0xE0]
	0x03AB70D8 CBNZ W8, 0x3AB70E4
	0x03AB70DC BL 0x1C16DFC
	0x03AB70E0 LDR X0, [X27]
	0x03AB70E4 LDR X8, [X0 + 0xB8]
	0x03AB70E8 FSUB D0, D10, D8
	0x03AB70EC FSUB D1, D11, D9
	0x03AB70F0 FMUL D0, D0, D0
	0x03AB70F4 LDR V2, [X8]
	0x03AB70F8 FMUL D1, D1, D1
	0x03AB70FC FADD D0, D0, D1
	0x03AB7100 FSQRT D0, D0
	0x03AB7104 FCMP D0, D2
	0x03AB7108 B.PL 0x3AB7120
	0x03AB710C ADD X0, X31, 0x80
	0x03AB7110 MOV W1, W24
	0x03AB7114 MOV W2, W25
	0x03AB7118 MOV X3, X31
	0x03AB711C BL 0x3A23690
	0x03AB7120 LDR W8, [X20]
	0x03AB7124 ADD W25, W25, 0x1
	0x03AB7128 ADD X26, X26, 0x10
	0x03AB712C CMP W8, W25
	0x03AB7130 B.GT 0x3AB7094
	0x03AB7134 ADD W19, W19, 0x1
	0x03AB7138 CMP X22, W8, SXTW
	0x03AB713C ADD X28, X28, 0x10
	0x03AB7140 MOV X24, X22
	0x03AB7144 B.LT 0x3AB7080
	0x03AB7148 LDP X19, X24, [X31 + 0x10]
	0x03AB714C STR W31, [X19]
	0x03AB7150 LDR W8, [X20]
	0x03AB7154 CMP W8, 0x1
	0x03AB7158 B.LT 0x3AB7284
	0x03AB715C MOVN X8, 0x80000000
	0x03AB7160 MOVZ X9, 0x7FF00000
	0x03AB7164 MOV X23, X31

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x92D000
	008 Move W8, [X23+1151]
	009 Move W22, W4
	010 Move X21, X2
	011 Move X19, X1
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {28}
	017 Move X0, 0x6A3000
	018 Move X0, [X0+464]
	019 Call 0x1C17CF4
	020 Move X0, 0x667000
	021 Move X0, [X0+216]
	022 Call 0x1C17CF4
	023 Move X0, 0x6A3000
	024 Move X0, [X0+472]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X23+1151], W8
	028 Move W9, [X19]
	029 Move X8, 0x6A3000
	030 Move X23, 0x666000
	031 Move X8, [X8+472]
	032 Call 0x3EB271C
	033 Return 
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Compare W22, 0
	036 Invalid "Jump target not found in method."
	037 Move X9, X31
	038 Move X10, X31
	039 Move X11, [X20]
	040 Add X10, X10, 1
	041 Add X11, X11, X9
	042 NotImplemented "Instruction LDPSW not yet implemented."
	043 Add X9, X9, 8
	044 Move W12, [X21]
	045 Move W13, [X21]
	046 NotImplemented "Instruction CMP not yet implemented."
	047 NotImplemented "Instruction CSEL not yet implemented."
	048 NotImplemented "Instruction CSEL not yet implemented."
	049 Move [X11], W14
	050 Move [X11+4], W12
	051 NotImplemented "Instruction LDRSW not yet implemented."
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Move X9, X31
	054 Move X10, X31
	055 Move X11, [X20]
	056 Add X10, X10, 1
	057 Add X11, X11, X9
	058 Move W12, [X11]
	059 Move W13, [X11+4]
	060 Add X9, X9, 8
	061 NotImplemented "Instruction CMP not yet implemented."
	062 NotImplemented "Instruction CSEL not yet implemented."
	063 NotImplemented "Instruction CSEL not yet implemented."
	064 Move [X11], W14
	065 Move [X11+4], W12
	066 NotImplemented "Instruction LDRSW not yet implemented."
	067 NotImplemented "Instruction CMP not yet implemented."
	068 Move X0, [X20]
	069 Move X1, [X20+8]
	070 Move X2, [X8]
	071 Move X22, 0x6A2000
	072 Move X22, [X22+464]
	073 Call NativeArrayUnsafeUtility.GetUnsafeBufferPointerWithoutChecks, X0
	074 Move X8, [X23]
	075 Move W23, [X19]
	076 Move X21, X0
	077 Move W9, [X8+224]
	078 Compare W9, 0
	079 JumpIfNotEqual {82}
	080 Move X0, X8
	081 Call 0x1C17DFC
	082 Move X4, [X22]
	083 Subtract W2, W23, 1
	084 Move X0, X21
	085 Move W1, W31
	086 Move X3, X31
	087 Call ModuleHandle.InsertionSort, X0, X1, X2, X3
	088 Move W10, [X19]
	089 NotImplemented "Instruction CMP not yet implemented."
	090 Move X8, X31
	091 Move W9, 1
	092 Move W11, 1
	093 Move X12, [X20]
	094 Add X14, X12, X8
	095 Move W16, [X14+4]
	096 Move W13, [X14+8]
	097 Move W15, [X14]
	098 Move W14, [X14+12]
	099 NotImplemented "Instruction CMP not yet implemented."
	100 NotImplemented "Instruction CSET not yet implemented."
	101 NotImplemented "Instruction CMP not yet implemented."
	102 NotImplemented "Instruction CSET not yet implemented."
	103 NotImplemented "Instruction CMP not yet implemented."
	104 And W15, W15, W16
	105 Move TEMP, X15
	106 And TEMP, TEMP, 1
	107 Compare TEMP, 1
	108 JumpIfEqual {114}
	109 Add X10, X12, W11
	110 Move [X10], W13
	111 Move [X10+4], W14
	112 Move W10, [X19]
	113 Add W11, W11, 1
	114 Add X9, X9, 1
	115 NotImplemented "Instruction CMP not yet implemented."
	116 Add X8, X8, 8
	117 Move W11, 1
	118 Move [X19], W11
	119 Move X20, [X31+32]
	120 Move X19, [X31+40]
	121 Move X22, [X31+16]
	122 Move X21, [X31+24]
	123 Move X30, [X31+48]
	124 Move X23, [X31+56]
	125 Return 

Method: System.Boolean CheckCollinear(Unity.Mathematics.double2 a0, Unity.Mathematics.double2 a1, Unity.Mathematics.double2 b0, Unity.Mathematics.double2 b1)

Disassembly:
	0x03AB7168 UNIMPLEMENTED
	0x03AB716C UNIMPLEMENTED
	0x03AB7170 STP V0, V1, [X31 + 0x20]
	0x03AB7174 ADD X0, X31, 0x80
	0x03AB7178 MOV W1, W23
	0x03AB717C MOV X2, X31
	0x03AB7180 BL 0x3A23658
	0x03AB7184 CMP X23, W0, UXTW
	0x03AB7188 B.EQ 0x3AB71C0
	0x03AB718C LDR W8, [X19]
	0x03AB7190 LDP V3, V2, [X31 + 0x20]
	0x03AB7194 ADD W8, W8, 0x1
	0x03AB7198 STR W8, [X19]
	0x03AB719C LDR X8, [X21]
	0x03AB71A0 LDR V0, [X8, W0, SXTW]
	0x03AB71A4 LDR V1, [X8, X23, LSL #4]
	0x03AB71A8 AND V2.16B, V0.16B, V2.16B
	0x00000000 INVALID
	0x00000000 INVALID
	0x03AB71B4 ORR V2.16B, V3.16B, V2.16B
	0x00000000 INVALID
	0x03AB71BC STR V0, [X8, W0, SXTW]
	0x03AB71C0 LDRSW X8, [X20]
	0x03AB71C4 ADD X23, X23, 0x1
	0x03AB71C8 CMP X23, X8
	0x03AB71CC B.LT 0x3AB7174
	0x03AB71D0 LDR W9, [X19]
	0x03AB71D4 CBZ W9, 0x3AB7284
	0x03AB71D8 AND X19, X8, 0x0
	0x03AB71DC CMP W19, 0x1
	0x03AB71E0 STR W31, [X20]
	0x03AB71E4 B.LT 0x3AB7284
	0x03AB71E8 MOV X22, X31
	0x03AB71EC MOVN W23, 0x0
	0x03AB71F0 ADD X0, X31, 0x80
	0x03AB71F4 MOV W1, W22
	0x03AB71F8 MOV X2, X31
	0x03AB71FC BL 0x3A23658
	0x03AB7200 CMP X22, W0, UXTW
	0x03AB7204 B.NE 0x3AB7230
	0x03AB7208 LDR W8, [X20]
	0x03AB720C LDR X9, [X24]
	0x03AB7210 STR W8, [X9, X22, LSL #2]
	0x03AB7214 LDRSW X8, [X20]
	0x03AB7218 ADD W9, W8, 0x1
	0x03AB721C STR W9, [X20]
	0x03AB7220 LDR X9, [X21]
	0x03AB7224 LDR V0, [X9, X22, LSL #4]
	0x03AB7228 STR V0, [X9, X8, LSL]
	0x03AB722C B 0x3AB7238
	0x03AB7230 LDR X8, [X24]
	0x03AB7234 STR W23, [X8, X22, LSL #2]
	0x03AB7238 ADD X22, X22, 0x1
	0x03AB723C CMP X22, X19
	0x03AB7240 B.NE 0x3AB71F0
	0x03AB7244 CMP W19, 0x1
	0x03AB7248 B.LT 0x3AB7284
	0x03AB724C LDR X8, [X24]
	0x03AB7250 MOV X20, X31
	0x03AB7254 LDR W9, [X8, X20, LSL #2]
	0x03AB7258 TBZ X9, 0x1F, 0x3AB7278
	0x03AB725C ADD X0, X31, 0x80
	0x03AB7260 MOV W1, W20
	0x03AB7264 MOV X2, X31
	0x03AB7268 BL 0x3A23658
	0x03AB726C LDR X8, [X24]
	0x03AB7270 LDR W9, [X8, W0, SXTW]
	0x03AB7274 STR W9, [X8, X20, LSL #2]
	0x03AB7278 ADD X20, X20, 0x1
	0x03AB727C CMP X19, X20
	0x03AB7280 B.NE 0x3AB7254
	0x03AB7284 LDP V0, V1, [X31 + 0x80]
	0x03AB7288 ADD X0, X31, 0x40
	0x03AB728C MOV X1, X31

ISIL:
	001 Move [X31-80], D15
	002 Move [X31-72], D14
	003 Move [X31+16], D13
	004 Move [X31+24], D12
	005 Move [X31+32], D11
	006 Move [X31+40], D10
	007 Move [X31+48], D9
	008 Move [X31+56], D8
	009 Move [X31+64], X30
	010 Move [X31+72], X19
	011 Move X19, 0x92C000
	012 Move W8, [X19+1152]
	013 Move V9, V7
	014 Move V8, V6
	015 Move V11, V5
	016 Move V10, V4
	017 Move V15, V3
	018 Move V14, V2
	019 Move V12, V1
	020 Move V13, V0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {30}
	025 Move X0, 0x69E000
	026 Move X0, [X0+2504]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X19+1152], W8
	030 Subtract D0, D15, D12
	031 Subtract D1, D14, D13
	032 Subtract D2, D11, D12
	033 Subtract D3, D10, D13
	034 Subtract D5, D8, D13
	035 NotImplemented "Instruction FDIV not yet implemented."
	036 Move X8, 0x7FF00000
	037 Subtract D4, D9, D12
	038 NotImplemented "Instruction FDIV not yet implemented."
	039 NotImplemented "Instruction FABS not yet implemented."
	040 Move D2, X8
	041 NotImplemented "Instruction FCMP not yet implemented."
	042 NotImplemented "Instruction FDIV not yet implemented."
	043 Move X8, 0x7FF00000
	044 NotImplemented "Instruction FABS not yet implemented."
	045 Move D2, X8
	046 NotImplemented "Instruction FCMP not yet implemented."
	047 Move X8, 0x7FF00000
	048 NotImplemented "Instruction FABS not yet implemented."
	049 Move D2, X8
	050 NotImplemented "Instruction FCMP not yet implemented."
	051 Move X19, 0x69E000
	052 Move X19, [X19+2504]
	053 NotImplemented "Instruction FABD not yet implemented."
	054 Move X0, [X19]
	055 Move W8, [X0+224]
	056 Compare W8, 0
	057 JumpIfNotEqual {60}
	058 Call 0x1C17DFC
	059 Move X0, [X19]
	060 Move X8, [X0+184]
	061 Move V0, [X8]
	062 NotImplemented "Instruction FCMP not yet implemented."
	063 Move W8, [X0+224]
	064 NotImplemented "Instruction FABD not yet implemented."
	065 Compare W8, 0
	066 JumpIfNotEqual {71}
	067 Call 0x1C17DFC
	068 Move X8, [X19]
	069 Move X8, [X8+184]
	070 Move V0, [X8]
	071 NotImplemented "Instruction FCMP not yet implemented."
	072 NotImplemented "Instruction CSET not yet implemented."
	073 Move W0, W31
	074 Move X30, [X31+64]
	075 Move X19, [X31+72]
	076 Move D9, [X31+48]
	077 Move D8, [X31+56]
	078 Move D11, [X31+32]
	079 Move D10, [X31+40]
	080 Move D13, [X31+16]
	081 Move D12, [X31+24]
	082 Move D15, [X31+80]
	083 Move D14, [X31+88]
	084 Return X0

Method: System.Boolean LineLineIntersection(Unity.Mathematics.double2 a0, Unity.Mathematics.double2 a1, Unity.Mathematics.double2 b0, Unity.Mathematics.double2 b1)

Disassembly:
	0x03AB7290 STP V0, V1, [X31 + 0x40]
	0x03AB7294 BL 0x3A23604
	0x03AB7298 LDP X20, X19, [X31 + 0x110]
	0x03AB729C LDP X22, X21, [X31 + 0x100]
	0x03AB72A0 LDP X24, X23, [X31 + 0xF0]
	0x03AB72A4 LDP X26, X25, [X31 + 0xE0]
	0x03AB72A8 LDP X28, X27, [X31 + 0xD0]
	0x03AB72AC LDP X29, X30, [X31 + 0xC0]
	0x03AB72B0 LDP D9, D8, [X31 + 0xB0]
	0x03AB72B4 LDP D11, D10, [X31 + 0xA0]
	0x03AB72B8 ADD X31, X31, 0x120
	0x03AB72BC RET
	0x03AB72C0 SUB X31, X31, 0x130
	0x03AB72C4 STP X29, X30, [X31 + 0xD0]
	0x03AB72C8 STP X28, X27, [X31 + 0xE0]
	0x03AB72CC STP X26, X25, [X31 + 0xF0]
	0x03AB72D0 STP X24, X23, [X31 + 0x100]
	0x03AB72D4 STP X22, X21, [X31 + 0x110]
	0x03AB72D8 STP X20, X19, [X31 + 0x120]
	0x03AB72DC STR X7, [X31 + 0x50]
	0x03AB72E0 ADRP X19, 0x92B000
	0x03AB72E4 STP W6, W3, [X31 + 0xC8]
	0x03AB72E8 ADRP X28, 0x665000
	0x03AB72EC LDRB W8, [X19 + 0x487]
	0x03AB72F0 LDR X28, [X28 + 0xD8]
	0x03AB72F4 MOV W21, W6
	0x03AB72F8 MOV X22, X5
	0x03AB72FC MOV X23, X4
	0x03AB7300 MOV W25, W3
	0x03AB7304 MOV X24, X1
	0x03AB7308 MOV W20, W0
	0x03AB730C TBNZ X8, 0x0, 0x3AB7384
	0x03AB7310 ADRP X0, 0x69D000
	0x03AB7314 LDR X0, [X0 + 0x9A8]
	0x03AB7318 BL 0x1C16CF4
	0x03AB731C ADRP X0, 0x665000
	0x03AB7320 LDR X0, [X0 + 0xD8]
	0x03AB7324 BL 0x1C16CF4
	0x03AB7328 ADRP X0, 0x666000
	0x03AB732C LDR X0, [X0 + 0x148]
	0x03AB7330 BL 0x1C16CF4
	0x03AB7334 ADRP X0, 0x69D000
	0x03AB7338 LDR X0, [X0 + 0x9B8]
	0x03AB733C BL 0x1C16CF4
	0x03AB7340 ADRP X0, 0x6A1000
	0x03AB7344 LDR X0, [X0 + 0x1F0]
	0x03AB7348 BL 0x1C16CF4
	0x03AB734C ADRP X0, 0x69D000
	0x03AB7350 LDR X0, [X0 + 0x528]
	0x03AB7354 BL 0x1C16CF4
	0x03AB7358 ADRP X0, 0x666000
	0x03AB735C LDR X0, [X0 + 0x138]
	0x03AB7360 BL 0x1C16CF4
	0x03AB7364 ADRP X0, 0x6A1000
	0x03AB7368 LDR X0, [X0 + 0x1F8]
	0x03AB736C BL 0x1C16CF4
	0x03AB7370 ADRP X0, 0x69D000
	0x03AB7374 LDR X0, [X0 + 0x9C8]
	0x03AB7378 BL 0x1C16CF4
	0x03AB737C MOVZ W8, 0x1
	0x03AB7380 STRB W8, [X19 + 0x487]
	0x03AB7384 LDR X0, [X28]
	0x03AB7388 STP X31, X31, [X31 + 0xB8]
	0x03AB738C STP X31, X31, [X31 + 0xA8]
	0x03AB7390 STP X31, X31, [X31 + 0x98]
	0x03AB7394 STP X31, X31, [X31 + 0x88]
	0x03AB7398 STP X31, X31, [X31 + 0x78]
	0x03AB739C STP X31, X31, [X31 + 0x68]
	0x03AB73A0 STR X31, [X31 + 0x60]
	0x03AB73A4 STR W31, [X31 + 0x5C]
	0x03AB73A8 ADRP X27, 0x666000
	0x03AB73AC ADRP X26, 0x69D000
	0x03AB73B0 ADRP X19, 0x6A1000
	0x03AB73B4 LDR W8, [X0 + 0xE0]
	0x03AB73B8 LDR X27, [X27 + 0x138]
	0x03AB73BC LDR X26, [X26 + 0x528]
	0x03AB73C0 LDR X19, [X19 + 0x1F8]
	0x03AB73C4 CBNZ W8, 0x3AB73D0
	0x03AB73C8 BL 0x1C16DFC
	0x03AB73CC LDR X0, [X28]
	0x03AB73D0 LDR X8, [X0 + 0xB8]
	0x03AB73D4 LDR X4, [X27]
	0x03AB73D8 ADD X0, X31, 0xB8
	0x03AB73DC MOVZ W3, 0x1
	0x03AB73E0 LDR W1, [X8 + 0x4]
	0x03AB73E4 MOV W2, W20
	0x03AB73E8 BL 0x23D58AC
	0x03AB73EC LDR X8, [X28]
	0x03AB73F0 LDR X4, [X26]
	0x03AB73F4 ADD X0, X31, 0xA8
	0x03AB73F8 MOVZ W3, 0x1
	0x03AB73FC LDR X8, [X8 + 0xB8]
	0x03AB7400 MOV W2, W20
	0x03AB7404 LDR W1, [X8 + 0x4]
	0x03AB7408 BL 0x23FBF70
	0x03AB740C LDR X8, [X28]
	0x03AB7410 LDR X4, [X26]
	0x03AB7414 ADD X0, X31, 0x98
	0x03AB7418 MOVZ W3, 0x1
	0x03AB741C LDR X8, [X8 + 0xB8]
	0x03AB7420 MOV W2, W20
	0x03AB7424 LDR W1, [X8 + 0x4]
	0x03AB7428 BL 0x23FBF70
	0x03AB742C LDR X8, [X28]
	0x03AB7430 LDR X4, [X26]
	0x03AB7434 ADD X0, X31, 0x88
	0x03AB7438 MOVZ W3, 0x1
	0x03AB743C LDR X8, [X8 + 0xB8]
	0x03AB7440 MOV W2, W20
	0x03AB7444 LDR W1, [X8 + 0x4]
	0x03AB7448 BL 0x23FBF70
	0x03AB744C LDR X4, [X19]
	0x03AB7450 UBFM W26, W25, 0x1D, 0x1C
	0x03AB7454 ADD X0, X31, 0x78
	0x03AB7458 MOVZ W3, 0x1
	0x03AB745C MOV W1, W26
	0x03AB7460 MOV W2, W20
	0x03AB7464 BL 0x23F76C4
	0x03AB7468 LDR X4, [X19]
	0x03AB746C ADD X0, X31, 0x68
	0x03AB7470 MOVZ W3, 0x1
	0x03AB7474 MOV W1, W26
	0x03AB7478 MOV W2, W20
	0x03AB747C BL 0x23F76C4
	0x03AB7480 CMP W25, 0x1
	0x03AB7484 B.LT 0x3AB74BC
	0x03AB7488 MOVZ W10, 0x4000
	0x03AB748C MOVK W10, 0x461C0000
	0x03AB7490 MOV X8, X31
	0x03AB7494 MOV W9, W25
	0x03AB7498 UNIMPLEMENTED
	0x03AB749C LDR V1, [X24, X8, LSL #3]
	0x03AB74A0 LDR X10, [X31 + 0x78]
	0x00000000 INVALID
	0x03AB74A8 UNIMPLEMENTED
	0x03AB74AC STR V1, [X10, X8, LSL]
	0x03AB74B0 ADD X8, X8, 0x1
	0x03AB74B4 CMP X9, X8
	0x03AB74B8 B.NE 0x3AB749C
	0x03AB74BC LDR X0, [X28]
	0x03AB74C0 ADRP X19, 0x69D000
	0x03AB74C4 ADRP X29, 0x69D000
	0x03AB74C8 LDP X25, X24, [X31 + 0xA8]
	0x03AB74CC LDR W8, [X0 + 0xE0]
	0x03AB74D0 LDR X19, [X19 + 0x9A8]
	0x03AB74D4 LDR X29, [X29 + 0x9C8]
	0x03AB74D8 CBNZ W8, 0x3AB74E0
	0x03AB74DC BL 0x1C16DFC
	0x03AB74E0 LDR X5, [X19]
	0x03AB74E4 MOV X0, X23
	0x03AB74E8 MOV X1, X22
	0x03AB74EC MOV X2, X25
	0x03AB74F0 MOV X3, X24
	0x03AB74F4 MOV W4, W21
	0x03AB74F8 BL 0x221E1AC
	0x03AB74FC LDR X0, [X29]
	0x03AB7500 LDP X23, X22, [X31 + 0xB8]
	0x03AB7504 LDR W8, [X0 + 0xE0]
	0x03AB7508 CBNZ W8, 0x3AB7510
	0x03AB750C BL 0x1C16DFC
	0x03AB7510 ADRP X19, 0x69D000
	0x03AB7514 ADRP X25, 0x6A1000
	0x03AB7518 ADRP X24, 0x666000
	0x03AB751C LDR X19, [X19 + 0x9B8]
	0x03AB7520 LDR X25, [X25 + 0x1F0]
	0x03AB7524 LDR X24, [X24 + 0x148]
	0x03AB7528 ADD X0, X31, 0xA8
	0x03AB752C ADD X1, X31, 0xC8
	0x03AB7530 MOV X2, X23
	0x03AB7534 MOV X3, X22
	0x03AB7538 MOV W4, W31
	0x03AB753C BL 0x3AB5FA4
	0x03AB7540 SUB W9, W21, 0x1
	0x03AB7544 CMP W9, 0x1
	0x03AB7548 AND W21, W9, W9, 0x1F
	0x03AB754C B.LT 0x3AB7700
	0x03AB7550 LDR X8, [X31 + 0x138]
	0x03AB7554 LDR X10, [X31 + 0x140]
	0x03AB7558 MOV W19, W9
	0x03AB755C STR W21, [X31 + 0x4C]
	0x03AB7560 STR X8, [X31 + 0x40]
	0x03AB7564 LDR X8, [X31 + 0x130]
	0x03AB7568 STR W9, [X31 + 0x2C]
	0x03AB756C STP X10, X8, [X31 + 0x30]
	0x03AB7570 LDR X0, [X29]
	0x03AB7574 STR W31, [X31 + 0x64]
	0x03AB7578 LDP X22, X23, [X31 + 0xA8]
	0x03AB757C LDR W21, [X31 + 0xC8]
	0x03AB7580 LDR W8, [X0 + 0xE0]
	0x03AB7584 LDP X24, X25, [X31 + 0x78]
	0x03AB7588 CBNZ W8, 0x3AB7590
	0x03AB758C BL 0x1C16DFC
	0x03AB7590 ADD X6, X31, 0x88
	0x03AB7594 ADD X7, X31, 0x68
	0x03AB7598 ADD X8, X31, 0x64
	0x03AB759C MOV X0, X22
	0x03AB75A0 MOV X1, X23
	0x03AB75A4 MOV W2, W21
	0x03AB75A8 MOV X3, X24
	0x03AB75AC MOV X4, X25
	0x03AB75B0 STR X8, [X31]
	0x03AB75B4 BL 0x3AB67B0
	0x03AB75B8 TBZ X0, 0x0, 0x3AB76E4
	0x03AB75BC LDR X0, [X29]
	0x03AB75C0 STR W31, [X31 + 0x60]
	0x03AB75C4 LDP X22, X23, [X31 + 0xA8]
	0x03AB75C8 LDP X28, X27, [X31 + 0x78]
	0x03AB75CC LDR W25, [X31 + 0xCC]
	0x03AB75D0 LDR W8, [X0 + 0xE0]
	0x03AB75D4 LDP X26, X24, [X31 + 0x98]
	0x03AB75D8 CBNZ W8, 0x3AB75E0
	0x03AB75DC BL 0x1C16DFC
	0x03AB75E0 ADD X8, X31, 0x60
	0x03AB75E4 MOV X0, X22
	0x03AB75E8 MOV X1, X23
	0x03AB75EC MOV W2, W21
	0x03AB75F0 MOV X3, X28
	0x03AB75F4 MOV X4, X27
	0x03AB75F8 MOV W5, W25
	0x03AB75FC MOV X6, X26
	0x03AB7600 MOV X7, X24
	0x03AB7604 STR X8, [X31]
	0x03AB7608 BL 0x3AB6B6C
	0x03AB760C TBZ X0, 0x0, 0x3AB76E4
	0x03AB7610 LDR X0, [X29]
	0x03AB7614 LDP X22, X21, [X31 + 0x88]
	0x03AB7618 LDP X24, X25, [X31 + 0x68]
	0x03AB761C LDR W23, [X31 + 0x64]
	0x03AB7620 LDR W8, [X0 + 0xE0]
	0x03AB7624 CBNZ W8, 0x3AB762C
	0x03AB7628 BL 0x1C16DFC
	0x03AB762C ADD X0, X31, 0x78
	0x03AB7630 ADD X1, X31, 0xCC
	0x03AB7634 ADD X2, X31, 0xA8
	0x03AB7638 ADD X3, X31, 0xC8
	0x03AB763C ADD X4, X31, 0x98
	0x03AB7640 ADD X5, X31, 0x60
	0x03AB7644 MOV X6, X22
	0x03AB7648 MOV X7, X21

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+48], D15
	003 Move [X31+56], D14
	004 Move [X31+64], D13
	005 Move [X31+72], D12
	006 Move [X31+80], D11
	007 Move [X31+88], D10
	008 Move [X31+96], D9
	009 Move [X31+104], D8
	010 Move [X31+112], X30
	011 Move [X31+128], X20
	012 Move [X31+136], X19
	013 Move [X31+40], D2
	014 Move X19, 0x92C000
	015 Move X20, 0x666000
	016 Move W8, [X19+1153]
	017 Move X20, [X20+216]
	018 Move V8, V7
	019 Move V9, V6
	020 Move V10, V5
	021 Move V11, V4
	022 Move V12, V3
	023 Move V14, V1
	024 Move V15, V0
	025 Move TEMP, X8
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {37}
	029 Move X0, 0x666000
	030 Move X0, [X0+216]
	031 Call 0x1C17CF4
	032 Move X0, 0x69E000
	033 Move X0, [X0+2504]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X19+1153], W8
	037 Move X0, [X20]
	038 Move X19, 0x69E000
	039 Move W8, [X0+224]
	040 Move X19, [X19+2504]
	041 Compare W8, 0
	042 JumpIfNotEqual {44}
	043 Call 0x1C17DFC
	044 Move V0, V15
	045 Move V1, V14
	046 Move V2, V11
	047 Move V3, V10
	048 Move V4, V9
	049 Move V5, V8
	050 Move X0, X31
	051 Call ModuleHandle.OrientFastDouble, X0, X1, X2
	052 Move [X31+120], D0
	053 Move V0, [X31+40]
	054 Move V1, V12
	055 Move V2, V11
	056 Move V3, V10
	057 Move V4, V9
	058 Move V5, V8
	059 Move X0, X31
	060 Call ModuleHandle.OrientFastDouble, X0, X1, X2
	061 Move X0, [X19]
	062 Move V13, V0
	063 Move W8, [X0+224]
	064 Compare W8, 0
	065 JumpIfNotEqual {68}
	066 Call 0x1C17DFC
	067 Move X0, [X19]
	068 Move X8, [X0+184]
	069 Move V1, [X31+120]
	070 Move V0, [X8]
	071 NotImplemented "Instruction FCMP not yet implemented."
	072 Move W8, [X0+224]
	073 Compare W8, 0
	074 JumpIfNotEqual {79}
	075 Call 0x1C17DFC
	076 Move X0, [X19]
	077 Move X8, [X0+184]
	078 Move V0, [X8]
	079 NotImplemented "Instruction FCMP not yet implemented."
	080 Move W8, [X0+224]
	081 Compare W8, 0
	082 JumpIfNotEqual {85}
	083 Call 0x1C17DFC
	084 Move X0, [X19]
	085 Move X8, [X0+184]
	086 Move V1, [X31+120]
	087 Move V0, [X8]
	088 NotImplemented "Instruction FNEG not yet implemented."
	089 NotImplemented "Instruction FCMP not yet implemented."
	090 Move W8, [X0+224]
	091 Compare W8, 0
	092 JumpIfNotEqual {98}
	093 Call 0x1C17DFC
	094 Move X8, [X19]
	095 Move X8, [X8+184]
	096 Move V0, [X8]
	097 NotImplemented "Instruction FNEG not yet implemented."
	098 NotImplemented "Instruction FCMP not yet implemented."
	099 Move X0, [X20]
	100 Move [X31+16], D13
	101 Move W8, [X0+224]
	102 Compare W8, 0
	103 JumpIfNotEqual {105}
	104 Call 0x1C17DFC
	105 Move V13, [X31+40]
	106 Move V0, V11
	107 Move V1, V10
	108 Move V2, V15
	109 Move V3, V14
	110 Move V4, V13
	111 Move V5, V12
	112 Move X0, X31
	113 Move [X31+24], D11
	114 Move V11, V10
	115 Call ModuleHandle.OrientFastDouble, X0, X1, X2
	116 Move V5, V12
	117 Move [X31+32], D0
	118 Move V0, V9
	119 Move V1, V8
	120 Move V2, V15
	121 Move V3, V14
	122 Move V4, V13
	123 Move X0, X31
	124 Move V10, V9
	125 Move V9, V8
	126 Move V12, V15
	127 Move V8, V14
	128 Move [X31+8], D5
	129 Call ModuleHandle.OrientFastDouble, X0, X1, X2
	130 Move X0, [X19]
	131 Move V13, V0
	132 Move W8, [X0+224]
	133 Compare W8, 0
	134 JumpIfNotEqual {137}
	135 Call 0x1C17DFC
	136 Move X0, [X19]
	137 Move X8, [X0+184]
	138 Move V1, [X31+32]
	139 Move V14, V8
	140 Move V15, V12
	141 Move V0, [X8]
	142 NotImplemented "Instruction FCMP not yet implemented."
	143 Move W8, [X0+224]
	144 Move V12, V9
	145 Compare W8, 0
	146 JumpIfNotEqual {151}
	147 Call 0x1C17DFC
	148 Move X0, [X19]
	149 Move X8, [X0+184]
	150 Move V0, [X8]
	151 Move V9, V10
	152 Move V10, V11
	153 Move V11, [X31+24]
	154 NotImplemented "Instruction FCMP not yet implemented."
	155 Move V12, V9
	156 Move V9, V10
	157 Move V10, V11
	158 Move V11, [X31+24]
	159 Move W8, [X0+224]
	160 Compare W8, 0
	161 JumpIfNotEqual {164}
	162 Call 0x1C17DFC
	163 Move X0, [X19]
	164 Move X8, [X0+184]
	165 Move V1, [X31+32]
	166 Move V0, [X8]
	167 NotImplemented "Instruction FNEG not yet implemented."
	168 NotImplemented "Instruction FCMP not yet implemented."
	169 Move W8, [X0+224]
	170 Compare W8, 0
	171 JumpIfNotEqual {177}
	172 Call 0x1C17DFC
	173 Move X0, [X19]
	174 Move X8, [X0+184]
	175 Move V0, [X8]
	176 NotImplemented "Instruction FNEG not yet implemented."
	177 NotImplemented "Instruction FCMP not yet implemented."
	178 Move V0, [X31+120]
	179 Move W8, [X0+224]
	180 Move V8, V13
	181 NotImplemented "Instruction FABS not yet implemented."
	182 Compare W8, 0
	183 JumpIfNotEqual {186}
	184 Call 0x1C17DFC
	185 Move X0, [X19]
	186 Move X8, [X0+184]
	187 Move V0, [X8]
	188 NotImplemented "Instruction FCMP not yet implemented."
	189 Move V1, [X31+16]
	190 Move W8, [X0+224]
	191 NotImplemented "Instruction FABS not yet implemented."
	192 Compare W8, 0
	193 JumpIfNotEqual {198}
	194 Call 0x1C17DFC
	195 Move X0, [X19]
	196 Move X8, [X0+184]
	197 Move V0, [X8]
	198 NotImplemented "Instruction FCMP not yet implemented."
	199 Move V1, [X31+32]
	200 Move W8, [X0+224]
	201 Move V13, V12
	202 NotImplemented "Instruction FABS not yet implemented."
	203 Compare W8, 0
	204 JumpIfNotEqual {209}
	205 Call 0x1C17DFC
	206 Move X0, [X19]
	207 Move X8, [X0+184]
	208 Move V0, [X8]
	209 NotImplemented "Instruction FCMP not yet implemented."
	210 Move W8, [X0+224]
	211 NotImplemented "Instruction FABS not yet implemented."
	212 Compare W8, 0
	213 JumpIfNotEqual {218}
	214 Call 0x1C17DFC
	215 Move X0, [X19]
	216 Move X8, [X0+184]
	217 Move V0, [X8]
	218 NotImplemented "Instruction FCMP not yet implemented."
	219 Move W8, [X0+224]
	220 Compare W8, 0
	221 JumpIfNotEqual {223}
	222 Call 0x1C17DFC
	223 Move V0, V15
	224 Move V1, V14
	225 Move V2, [X31+40]
	226 Move V3, [X31+8]
	227 Move V4, V11
	228 Move V5, V10
	229 Move V6, V9
	230 Move V7, V13
	231 Move X20, [X31+128]
	232 Move X19, [X31+136]
	233 Move X30, [X31+112]
	234 Move D9, [X31+96]
	235 Move D8, [X31+104]
	236 Move D11, [X31+80]
	237 Move D10, [X31+88]
	238 Move D13, [X31+64]
	239 Move D12, [X31+72]
	240 Move D15, [X31+48]
	241 Move D14, [X31+56]
	242 Add X31, X31, 144
	243 Call PlanarGraph.CheckCollinear, X0, X1, X2, X3
	244 Return X0
	245 Move W0, W31
	246 Move W0, 1
	247 Move X20, [X31+128]
	248 Move X19, [X31+136]
	249 Move X30, [X31+112]
	250 Move D9, [X31+96]
	251 Move D8, [X31+104]
	252 Move D11, [X31+80]
	253 Move D10, [X31+88]
	254 Move D13, [X31+64]
	255 Move D12, [X31+72]
	256 Move D15, [X31+48]
	257 Move D14, [X31+56]
	258 Add X31, X31, 144
	259 Return X0

Method: System.Boolean LineLineIntersection(Unity.Mathematics.double2 p1, Unity.Mathematics.double2 p2, Unity.Mathematics.double2 p3, Unity.Mathematics.double2 p4, ref Unity.Mathematics.double2 result)

Disassembly:
	0x03AB764C STR W23, [X31 + 0x10]
	0x03AB7650 STP X24, X25, [X31]
	0x03AB7654 BL 0x3AB6D24
	0x03AB7658 TBZ X0, 0x0, 0x3AB76E4
	0x03AB765C LDR X0, [X29]
	0x03AB7660 STR W31, [X31 + 0x5C]
	0x03AB7664 LDR W8, [X0 + 0xE0]
	0x03AB7668 CBNZ W8, 0x3AB7670
	0x03AB766C BL 0x1C16DFC
	0x03AB7670 ADD X0, X31, 0x78
	0x03AB7674 ADD X1, X31, 0xCC
	0x03AB7678 ADD X2, X31, 0xB8
	0x03AB767C ADD X3, X31, 0x5C
	0x03AB7680 MOV W4, W20
	0x03AB7684 BL 0x3AB6FDC
	0x03AB7688 LDP X2, X3, [X31 + 0xB8]
	0x03AB768C LDR W4, [X31 + 0x5C]
	0x03AB7690 ADD X0, X31, 0xA8
	0x03AB7694 ADD X1, X31, 0xC8
	0x03AB7698 BL 0x3AB5FA4
	0x03AB769C LDR W8, [X31 + 0x60]
	0x03AB76A0 ORR W8, W8, W23, 0x0
	0x03AB76A4 CBZ W8, 0x3AB7778
	0x03AB76A8 SUB W19, W19, 0x1
	0x03AB76AC CMP W19, 0x0
	0x03AB76B0 B.GT 0x3AB7570
	0x03AB76B4 LDR W8, [X31 + 0x2C]
	0x03AB76B8 CMP W8, 0x1
	0x03AB76BC ADRP X8, 0x665000
	0x03AB76C0 LDR X8, [X8 + 0xD8]
	0x03AB76C4 B.GE 0x3AB7784
	0x03AB76C8 ADRP X19, 0x69D000
	0x03AB76CC ADRP X24, 0x666000
	0x03AB76D0 ADRP X25, 0x6A1000
	0x03AB76D4 LDR X19, [X19 + 0x9B8]
	0x03AB76D8 LDR X24, [X24 + 0x148]
	0x03AB76DC LDR W21, [X31 + 0x4C]
	0x03AB76E0 B 0x3AB76FC
	0x03AB76E4 MOV W21, W19
	0x03AB76E8 ADRP X19, 0x69D000
	0x03AB76EC ADRP X24, 0x666000
	0x03AB76F0 ADRP X25, 0x6A1000
	0x03AB76F4 LDR X19, [X19 + 0x9B8]
	0x03AB76F8 LDR X24, [X24 + 0x148]
	0x03AB76FC LDR X25, [X25 + 0x1F0]
	0x03AB7700 MOV W20, W31
	0x03AB7704 LDR X1, [X19]
	0x03AB7708 ADD X0, X31, 0xA8
	0x03AB770C BL 0x23FC198
	0x03AB7710 LDR X1, [X25]
	0x03AB7714 ADD X0, X31, 0x78
	0x03AB7718 BL 0x23F7900
	0x03AB771C LDR X1, [X25]
	0x03AB7720 ADD X0, X31, 0x68
	0x03AB7724 BL 0x23F7900
	0x03AB7728 LDR X1, [X24]
	0x03AB772C ADD X0, X31, 0xB8
	0x03AB7730 BL 0x23D5AD4
	0x03AB7734 LDR X1, [X19]
	0x03AB7738 ADD X0, X31, 0x98
	0x03AB773C BL 0x23FC198
	0x03AB7740 LDR X1, [X19]
	0x03AB7744 ADD X0, X31, 0x88
	0x03AB7748 BL 0x23FC198
	0x03AB774C CMP W21, 0x0
	0x03AB7750 CSET W8, GT
	0x03AB7754 AND W0, W20, W8, 0x0
	0x03AB7758 LDP X20, X19, [X31 + 0x120]
	0x03AB775C LDP X22, X21, [X31 + 0x110]
	0x03AB7760 LDP X24, X23, [X31 + 0x100]
	0x03AB7764 LDP X26, X25, [X31 + 0xF0]
	0x03AB7768 LDP X28, X27, [X31 + 0xE0]
	0x03AB776C LDP X29, X30, [X31 + 0xD0]
	0x03AB7770 ADD X31, X31, 0x130
	0x03AB7774 RET
	0x03AB7778 STR W19, [X31 + 0x4C]
	0x03AB777C ADRP X8, 0x665000
	0x03AB7780 LDR X8, [X8 + 0xD8]
	0x03AB7784 LDP W20, W19, [X31 + 0xC8]
	0x03AB7788 LDR X9, [X31 + 0x30]
	0x03AB778C ADRP X25, 0x6A1000
	0x03AB7790 STR W20, [X9]
	0x03AB7794 LDR X9, [X31 + 0x38]
	0x03AB7798 STR W19, [X9]
	0x03AB779C LDR X0, [X8]
	0x03AB77A0 LDR X9, [X31 + 0x40]
	0x03AB77A4 LDP X24, X23, [X31 + 0xA8]
	0x03AB77A8 LDR W8, [X0 + 0xE0]
	0x03AB77AC LDP X22, X21, [X9]

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+32], D15
	003 Move [X31+40], D14
	004 Move [X31+48], D13
	005 Move [X31+56], D12
	006 Move [X31+64], D11
	007 Move [X31+72], D10
	008 Move [X31+80], D9
	009 Move [X31+88], D8
	010 Move [X31+96], X30
	011 Move [X31+104], X21
	012 Move [X31+112], X20
	013 Move [X31+120], X19
	014 Move X21, 0x92C000
	015 Move X20, 0x69E000
	016 Move W8, [X21+1154]
	017 Move X20, [X20+2504]
	018 Move X19, X0
	019 Move V12, V7
	020 Move V13, V6
	021 Move V11, V5
	022 Move V10, V4
	023 Move V14, V3
	024 Move V15, V2
	025 Move V8, V1
	026 Move V9, V0
	027 Move TEMP, X8
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfEqual {36}
	031 Move X0, 0x69E000
	032 Move X0, [X0+2504]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X21+1154], W8
	036 Move X0, [X20]
	037 Subtract D1, D15, D9
	038 Subtract D0, D14, D8
	039 Subtract D13, D13, D10
	040 Move W8, [X0+224]
	041 Subtract D12, D12, D11
	042 Move V15, V8
	043 Multiply D8, D1, D12
	044 Multiply D14, D0, D13
	045 Move [X31+24], D9
	046 NotImplemented "Instruction FABD not yet implemented."
	047 Move [X31+8], D1
	048 Move [X31+16], D0
	049 Compare W8, 0
	050 JumpIfNotEqual {53}
	051 Call 0x1C17DFC
	052 Move X0, [X20]
	053 Move X8, [X0+184]
	054 Move V0, [X8]
	055 NotImplemented "Instruction FCMP not yet implemented."
	056 Move V9, [X31+24]
	057 Subtract D2, D11, D15
	058 Move W8, [X0+224]
	059 Multiply D2, D2, D13
	060 Subtract D3, D10, D9
	061 Multiply D3, D3, D12
	062 Subtract D1, D8, D14
	063 Subtract D2, D3, D2
	064 NotImplemented "Instruction FDIV not yet implemented."
	065 Compare W8, 0
	066 JumpIfNotEqual {71}
	067 Call 0x1C17DFC
	068 Move X0, [X20]
	069 Move X8, [X0+184]
	070 Move V0, [X8]
	071 NotImplemented "Instruction FNEG not yet implemented."
	072 NotImplemented "Instruction FCMP not yet implemented."
	073 Move W8, [X0+224]
	074 Compare W8, 0
	075 JumpIfNotEqual {80}
	076 Call 0x1C17DFC
	077 Move X8, [X20]
	078 Move X8, [X8+184]
	079 Move V0, [X8]
	080 Move D1, 1
	081 Add D0, D0, D1
	082 NotImplemented "Instruction FCMP not yet implemented."
	083 Move W0, W31
	084 Move X20, [X31+112]
	085 Move X19, [X31+120]
	086 Move X30, [X31+96]
	087 Move X21, [X31+104]
	088 Move D9, [X31+80]
	089 Move D8, [X31+88]
	090 Move D11, [X31+64]
	091 Move D10, [X31+72]
	092 Move D13, [X31+48]
	093 Move D12, [X31+56]
	094 Move D15, [X31+32]
	095 Move D14, [X31+40]
	096 Add X31, X31, 128
	097 Return X0
	098 Move D0, [X31+8]
	099 Move D1, [X31+16]
	100 Move W0, 1
	101 Multiply D0, D0, D10
	102 Multiply D1, D1, D10
	103 Add D0, D9, D0
	104 Add D1, D15, D1
	105 Move [X19], D0
	106 Move [X19+8], D1

Method: System.Boolean CalculateEdgeIntersections(Unity.Collections.NativeArray`1<Unity.Mathematics.int2> edges, System.Int32 edgeCount, Unity.Collections.NativeArray`1<Unity.Mathematics.double2> points, System.Int32 pointCount, ref Unity.Collections.NativeArray`1<Unity.Mathematics.int2> results, ref Unity.Collections.NativeArray`1<Unity.Mathematics.double2> intersects, ref System.Int32 resultCount)

Disassembly:
	0x03AB77B0 LDR X25, [X25 + 0x1F0]
	0x03AB77B4 CBNZ W8, 0x3AB77BC
	0x03AB77B8 BL 0x1C16DFC
	0x03AB77BC ADRP X8, 0x69D000
	0x03AB77C0 LDR X8, [X8 + 0x9A8]
	0x03AB77C4 MOV X0, X24
	0x03AB77C8 MOV X1, X23
	0x03AB77CC MOV X2, X22
	0x03AB77D0 LDR X5, [X8]
	0x03AB77D4 MOV X3, X21
	0x03AB77D8 MOV W4, W20
	0x03AB77DC BL 0x221E1AC
	0x03AB77E0 CMP W19, 0x1
	0x03AB77E4 B.LT 0x3AB7838
	0x03AB77E8 ADRP X24, 0x666000
	0x03AB77EC LDR X10, [X31 + 0x50]
	0x03AB77F0 LDR X24, [X24 + 0x148]
	0x03AB77F4 LDR W21, [X31 + 0x4C]
	0x03AB77F8 MOVZ X9, 0x8800
	0x03AB77FC MOVK X9, 0x40C30000
	0x03AB7800 MOV X8, X31
	0x03AB7804 UNIMPLEMENTED
	0x03AB7808 LDR X9, [X31 + 0x78]
	0x03AB780C LDR V1, [X9, X8, LSL #4]
	0x03AB7810 LDR X9, [X10]
	0x00000000 INVALID
	0x03AB7818 UNIMPLEMENTED
	0x03AB781C STR D1, [X9, X8, LSL #3]
	0x03AB7820 ADD X8, X8, 0x1
	0x03AB7824 CMP X19, X8
	0x03AB7828 B.NE 0x3AB7808
	0x03AB782C ADRP X19, 0x69D000
	0x03AB7830 LDR X19, [X19 + 0x9B8]
	0x03AB7834 B 0x3AB784C
	0x03AB7838 ADRP X19, 0x69D000
	0x03AB783C ADRP X24, 0x666000
	0x03AB7840 LDR X19, [X19 + 0x9B8]
	0x03AB7844 LDR X24, [X24 + 0x148]
	0x03AB7848 LDR W21, [X31 + 0x4C]
	0x03AB784C MOVZ W20, 0x1
	0x03AB7850 B 0x3AB7704
	0x03AB7854 STR X30, [X31 - 0x20]!
	0x03AB7858 STP X20, X19, [X31 + 0x10]
	0x03AB785C ADRP X19, 0x92B000
	0x03AB7860 ADRP X20, 0x69D000
	0x03AB7864 LDRB W8, [X19 + 0x488]
	0x03AB7868 LDR X20, [X20 + 0x9C8]
	0x03AB786C TBNZ X8, 0x0, 0x3AB7884
	0x03AB7870 ADRP X0, 0x69D000
	0x03AB7874 LDR X0, [X0 + 0x9C8]
	0x03AB7878 BL 0x1C16CF4
	0x03AB787C MOVZ W8, 0x1
	0x03AB7880 STRB W8, [X19 + 0x488]
	0x03AB7884 LDR X8, [X20]
	0x03AB7888 MOVZ X9, 0x68F1
	0x03AB788C MOVK X9, 0x88E30000
	0x03AB7890 LDP X20, X19, [X31 + 0x10]
	0x03AB7894 LDR X8, [X8 + 0xB8]
	0x03AB7898 MOVK X9, 0xF8B5
	0x03AB789C MOVK X9, 0x3EE40000
	0x03AB78A0 MOVZ W10, 0x4
	0x03AB78A4 STR X9, [X8]
	0x03AB78A8 STR W10, [X8 + 0x8]
	0x03AB78AC LDR X30, [X31], #0x20
	0x03AB78B0 RET
	0x03AB78B4 LDR V1, [X0 + 0x24]
	0x03AB78B8 FCMP S1, S0
	0x03AB78BC CSET W0, GT
	0x03AB78C0 RET
	0x03AB78C4 STR D14, [X31 - 0x90]!
	0x03AB78C8 STP D13, D12, [X31 + 0x8]
	0x03AB78CC STP D11, D10, [X31 + 0x18]
	0x03AB78D0 STP D9, D8, [X31 + 0x28]
	0x03AB78D4 STR X30, [X31 + 0x38]
	0x03AB78D8 STP X28, X27, [X31 + 0x40]
	0x03AB78DC STP X26, X25, [X31 + 0x50]
	0x03AB78E0 STP X24, X23, [X31 + 0x60]
	0x03AB78E4 STP X22, X21, [X31 + 0x70]
	0x03AB78E8 STP X20, X19, [X31 + 0x80]
	0x03AB78EC CMP W5, 0x1
	0x03AB78F0 B.LT 0x3AB7A48
	0x03AB78F4 ADRP X22, 0x63C000
	0x03AB78F8 LDR X22, [X22 + 0x5A8]
	0x03AB78FC MOV V8.16B, V1.16B
	0x03AB7900 MOV V9.16B, V0.16B
	0x03AB7904 MOV X19, X7
	0x03AB7908 MOV X20, X6
	0x03AB790C MOV X21, X0
	0x03AB7910 MOV X23, X31
	0x03AB7914 MOV W24, W5
	0x03AB7918 ADD X25, X3, 0x4
	0x03AB791C FMOV S10, 0.5
	0x03AB7920 ADRP X26, 0x92A000
	0x03AB7924 MOVZ W27, 0x1
	0x03AB7928 MOVZ W28, 0x14
	0x03AB792C LDPSW D8, D9, [X25 - 0x8]
	0x03AB7930 ADD X8, X21, X8, 0x3, LSL
	0x03AB7934 LDP S11, S12, [X8]
	0x03AB7938 ADD X8, X21, X9, 0x3, LSL
	0x03AB793C LDP S13, S14, [X8]
	0x03AB7940 FSUB S0, S9, S11
	0x03AB7944 FCMP S0, 0x0
	0x03AB7948 B.NE 0x3AB7958
	0x03AB794C FSUB S0, S8, S12
	0x03AB7950 FCMP S0, 0x0
	0x03AB7954 B.EQ 0x3AB7A24
	0x03AB7958 FSUB S0, S9, S13
	0x03AB795C FCMP S0, 0x0
	0x03AB7960 B.NE 0x3AB7970
	0x03AB7964 FSUB S0, S8, S14
	0x03AB7968 FCMP S0, 0x0
	0x03AB796C B.EQ 0x3AB7A24
	0x03AB7970 LDRB W8, [X26 + 0x585]
	0x03AB7974 CBNZ W8, 0x3AB7984
	0x03AB7978 MOV X0, X22
	0x03AB797C BL 0x1C16CF4
	0x03AB7980 STRB W27, [X26 + 0x585]
	0x03AB7984 LDR X0, [X22]
	0x03AB7988 LDR W8, [X0 + 0xE0]
	0x03AB798C CBZ W8, 0x3AB7A38
	0x03AB7990 MOVZ W8, 0x1
	0x03AB7994 CBNZ W8, 0x3AB79A4
	0x03AB7998 MOV X0, X22
	0x03AB799C BL 0x1C16CF4
	0x03AB79A0 STRB W27, [X26 + 0x585]
	0x03AB79A4 LDR X0, [X22]
	0x03AB79A8 LDR W8, [X0 + 0xE0]
	0x03AB79AC CBNZ W8, 0x3AB79B4
	0x03AB79B0 BL 0x1C16DFC
	0x03AB79B4 FSUB S0, S11, S13
	0x03AB79B8 FSUB S1, S12, S14
	0x03AB79BC FADD S2, S11, S13
	0x03AB79C0 FADD S3, S12, S14
	0x03AB79C4 FMUL S2, S2, S10
	0x03AB79C8 FMUL S3, S3, S10
	0x03AB79CC FMUL S0, S0, S0
	0x03AB79D0 FMUL S1, S1, S1
	0x03AB79D4 FADD S0, S0, S1
	0x03AB79D8 FSUB S1, S2, S9
	0x03AB79DC FSUB S2, S3, S8
	0x03AB79E0 FMUL S1, S1, S1
	0x03AB79E4 FMUL S2, S2, S2
	0x03AB79E8 FSQRT S0, S0
	0x03AB79EC FADD S1, S1, S2
	0x03AB79F0 FMUL S0, S0, S10
	0x03AB79F4 FSQRT S1, S1
	0x03AB79F8 FCMP S1, S0
	0x03AB79FC B.GT 0x3AB7A24
	0x03AB7A00 LDRSW X8, [X19]
	0x03AB7A04 ADD W9, W8, 0x1
	0x03AB7A08 STR W9, [X19]
	0x03AB7A0C LDR X9, [X20]
	0x03AB7A10 NOP
	0x03AB7A14 MADD X8, X8, X28, X9
	0x03AB7A18 STP S11, S12, [X8]
	0x03AB7A1C STP S13, S14, [X8 + 0x8]
	0x03AB7A20 STR W23, [X8 + 0x10]
	0x03AB7A24 ADD X23, X23, 0x1
	0x03AB7A28 CMP X24, X23
	0x03AB7A2C ADD X25, X25, 0x8
	0x03AB7A30 B.NE 0x3AB792C
	0x03AB7A34 B 0x3AB7A48
	0x03AB7A38 BL 0x1C16DFC
	0x03AB7A3C LDRB W8, [X26 + 0x585]
	0x03AB7A40 CBNZ W8, 0x3AB79A4
	0x03AB7A44 B 0x3AB7998
	0x03AB7A48 LDP X20, X19, [X31 + 0x80]
	0x03AB7A4C LDP X22, X21, [X31 + 0x70]
	0x03AB7A50 LDP X24, X23, [X31 + 0x60]
	0x03AB7A54 LDP X26, X25, [X31 + 0x50]
	0x03AB7A58 LDP X28, X27, [X31 + 0x40]
	0x03AB7A5C LDR X30, [X31 + 0x38]
	0x03AB7A60 LDP D9, D8, [X31 + 0x28]
	0x03AB7A64 LDP D11, D10, [X31 + 0x18]
	0x03AB7A68 LDP D13, D12, [X31 + 0x8]
	0x03AB7A6C LDR V14, [X31], #0x90
	0x03AB7A70 RET
	0x03AB7A74 LDRSW X8, [X1]
	0x03AB7A78 STR W8, [X2]
	0x03AB7A7C LDR X9, [X0]
	0x03AB7A80 ADD X8, X9, X8, 0x3, LSL
	0x03AB7A84 STP S0, S1, [X8]
	0x03AB7A88 LDR W8, [X1]
	0x03AB7A8C ADD W8, W8, 0x1
	0x03AB7A90 STR W8, [X1]
	0x03AB7A94 RET
	0x03AB7A98 LDR W8, [X6 + 0x10]
	0x03AB7A9C CMP W8, W5
	0x03AB7AA0 B.GE 0x3AB7B10
	0x03AB7AA4 LDR V0, [X6]
	0x03AB7AA8 SXTW X9, W8
	0x03AB7AAC ADD X9, X3, X9, 0x3, LSL
	0x03AB7AB0 ADD X9, X9, 0x4
	0x03AB7AB4 LDURSW X10, [X9 - 0x4]
	0x03AB7AB8 LDR V1, [X0, X10, LSL #3]
	0x03AB7ABC FSUB V1.2S, V1.2S, V0.2S
	0x03AB7AC0 UNIMPLEMENTED
	0x03AB7AC4 UNIMPLEMENTED
	0x03AB7AC8 UNIMPLEMENTED
	0x03AB7ACC ORN V1.8B, V2.8B, V1.8B
	0x03AB7AD0 FMOV W10, S1
	0x03AB7AD4 TBNZ X10, 0x0, 0x3AB7B00
	0x03AB7AD8 LDRSW X10, [X9]
	0x03AB7ADC LDR V2, [X6 + 0x8]
	0x03AB7AE0 LDR V1, [X0, X10, LSL #3]
	0x03AB7AE4 FSUB V1.2S, V1.2S, V2.2S
	0x03AB7AE8 UNIMPLEMENTED
	0x03AB7AEC UNIMPLEMENTED
	0x03AB7AF0 UNIMPLEMENTED
	0x03AB7AF4 ORN V1.8B, V2.8B, V1.8B
	0x03AB7AF8 FMOV W10, S1
	0x03AB7AFC TBZ X10, 0x0, 0x3AB7B14
	0x03AB7B00 ADD W8, W8, 0x1
	0x03AB7B04 CMP W5, W8
	0x03AB7B08 ADD X9, X9, 0x8
	0x03AB7B0C B.NE 0x3AB7AB4
	0x03AB7B10 MOVN W8, 0x0
	0x03AB7B14 MOV W0, W8
	0x03AB7B18 RET
	0x03AB7B1C SUB X31, X31, 0xA0
	0x03AB7B20 STR D8, [X31 + 0x40]
	0x03AB7B24 STR X30, [X31 + 0x48]
	0x03AB7B28 STP X28, X27, [X31 + 0x50]
	0x03AB7B2C STP X26, X25, [X31 + 0x60]
	0x03AB7B30 STP X24, X23, [X31 + 0x70]
	0x03AB7B34 STP X22, X21, [X31 + 0x80]
	0x03AB7B38 STP X20, X19, [X31 + 0x90]
	0x03AB7B3C ADRP X23, 0x92B000
	0x03AB7B40 ADRP X28, 0x69D000
	0x03AB7B44 LDRB W8, [X23 + 0x489]
	0x03AB7B48 LDR X28, [X28 + 0x9D0]
	0x03AB7B4C MOV X27, X4
	0x03AB7B50 MOV X19, X3
	0x03AB7B54 MOV X20, X2
	0x03AB7B58 MOV X21, X1
	0x03AB7B5C MOV X22, X0
	0x03AB7B60 TBNZ X8, 0x0, 0x3AB7B78
	0x03AB7B64 ADRP X0, 0x69D000
	0x03AB7B68 LDR X0, [X0 + 0x9D0]

ISIL:
	001 Subtract X31, X31, 448
	002 Move [X31+288], D15
	003 Move [X31+296], D14
	004 Move [X31+304], D13
	005 Move [X31+312], D12
	006 Move [X31+320], D11
	007 Move [X31+328], D10
	008 Move [X31+336], D9
	009 Move [X31+344], D8
	010 Move [X31+352], X29
	011 Move [X31+360], X30
	012 Move [X31+368], X28
	013 Move [X31+376], X27
	014 Move [X31+384], X26
	015 Move [X31+392], X25
	016 Move [X31+400], X24
	017 Move [X31+408], X23
	018 Move [X31+416], X22
	019 Move [X31+424], X21
	020 Move [X31+432], X20
	021 Move [X31+440], X19
	022 Move [X31+56], X6
	023 Move [X31+64], X7
	024 NotImplemented "Instruction MRS not yet implemented."
	025 Move X8, [X22+40]
	026 Move X19, 0x92C000
	027 Move X9, [X31+448]
	028 Move X24, X4
	029 Move [X31+280], X8
	030 Move W8, [X19+1155]
	031 Move X21, X3
	032 Move W20, W2
	033 Move X25, X1
	034 Move [X31+40], X0
	035 Move [X31+80], X9
	036 Move TEMP, X8
	037 And TEMP, TEMP, 1
	038 Compare TEMP, 1
	039 JumpIfEqual {58}
	040 Move X0, 0x6A2000
	041 Move X0, [X0+480]
	042 Call 0x1C17CF4
	043 Move X0, 0x666000
	044 Move X0, [X0+216]
	045 Call 0x1C17CF4
	046 Move X0, 0x6A2000
	047 Move X0, [X0+472]
	048 Call 0x1C17CF4
	049 Move X0, 0x69E000
	050 Move X0, [X0+2504]
	051 Call 0x1C17CF4
	052 Move X0, 0x694000
	053 Move X0, [X0+3680]
	054 Call 0x1C17CF4
	055 Move X9, [X31+80]
	056 Move W8, 1
	057 Move [X19+1155], W8
	058 Move X12, 0x69E000
	059 Move X12, [X12+2504]
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Move [X31+96], X31
	062 Move [X31+104], X31
	063 Move [X9], W31
	064 Move X8, [X31+40]
	065 Move [X31+16], X25
	066 Move [X31+24], X24
	067 Move [X31+32], X22
	068 Move X22, X31
	069 Move W9, W20
	070 Add X8, X8, 12
	071 Move X26, 1
	072 Move W24, 1
	073 Move X28, 1
	074 Move [X31+12], W20
	075 Move [X31+88], X8
	076 Move [X31+48], X9
	077 Add X8, X22, 1
	078 NotImplemented "Instruction CMP not yet implemented."
	079 Move [X31+72], X8
	080 Move X8, [X31+40]
	081 Move X27, [X31+48]
	082 Move X20, [X31+88]
	083 Move X23, X28
	084 Add X25, X8, X22
	085 Add X29, X25, 4
	086 Move W9, [X29]
	087 Move W8, [X20]
	088 NotImplemented "Instruction CMP not yet implemented."
	089 NotImplemented "Instruction LDUR not yet implemented."
	090 NotImplemented "Instruction CMP not yet implemented."
	091 Move W11, [X25]
	092 NotImplemented "Instruction CMP not yet implemented."
	093 NotImplemented "Instruction CMP not yet implemented."
	094 Move X11, W11
	095 Add X11, X21, X11
	096 Move D8, [X11]
	097 Move D9, [X11+8]
	098 Move X11, 0x694000
	099 Move X11, [X11+3680]
	100 Move X9, W9
	101 Move X10, W10
	102 Add X9, X21, X9
	103 Move X11, [X11]
	104 Move D10, [X9]
	105 Move D11, [X9+8]
	106 Add X9, X21, X10
	107 Move X0, [X12]
	108 Move X10, [X11+184]
	109 Move X8, W8
	110 Add X8, X21, X8
	111 Move D12, [X9]
	112 Move D13, [X9+8]
	113 Move V0, [X10]
	114 Move D14, [X8]
	115 Move D15, [X8+8]
	116 Move X19, X12
	117 Move [X31+6], V0
	118 Move W8, [X0+224]
	119 Compare W8, 0
	120 JumpIfNotEqual {122}
	121 Call 0x1C17DFC
	122 Move V0, V8
	123 Move V1, V9
	124 Move V2, V10
	125 Move V3, V11
	126 Move V4, V12
	127 Move V5, V13
	128 Move V6, V14
	129 Move V7, V15
	130 Call PlanarGraph.LineLineIntersection, X0, X1, X2, X3
	131 Move X12, X19
	132 Move TEMP, X0
	133 And TEMP, TEMP, 1
	134 Compare TEMP, 1
	135 JumpIfNotEqual {171}
	136 Move X0, [X12]
	137 Move W8, [X0+224]
	138 Compare W8, 0
	139 JumpIfNotEqual {141}
	140 Call 0x1C17DFC
	141 Add X0, X31, 96
	142 Move V0, V8
	143 Move V1, V9
	144 Move V2, V10
	145 Move V3, V11
	146 Move V4, V12
	147 Move V5, V13
	148 Move V6, V14
	149 Move V7, V15
	150 Call PlanarGraph.LineLineIntersection, X0, X1, X2, X3, X4
	151 Move X12, X19
	152 Move TEMP, X0
	153 And TEMP, TEMP, 1
	154 Compare TEMP, 1
	155 JumpIfNotEqual {171}
	156 Move X10, [X31+80]
	157 Move X11, [X31+64]
	158 NotImplemented "Instruction LDRSW not yet implemented."
	159 Move W9, [X11+8]
	160 NotImplemented "Instruction CMP not yet implemented."
	161 Move X9, [X11]
	162 Move V0, [X31+6]
	163 Move [X9], V0
	164 NotImplemented "Instruction LDRSW not yet implemented."
	165 Add W9, W8, 1
	166 Move [X10], W9
	167 Move X9, [X31+56]
	168 Or X10, X23, X22
	169 Move X9, [X9]
	170 Move [X9], X10
	171 Subtract X27, X27, 1
	172 Add X23, X23, X26
	173 NotImplemented "Instruction CMP not yet implemented."
	174 Add X20, X20, 8
	175 Move X9, [X31+48]
	176 Move X22, [X31+72]
	177 Move X8, [X31+88]
	178 Add X24, X24, 1
	179 Add X28, X28, X26
	180 NotImplemented "Instruction CMP not yet implemented."
	181 Add X8, X8, 8
	182 Move [X31+88], X8
	183 Move X9, [X31+80]
	184 Move X24, [X31+24]
	185 Move X22, [X31+32]
	186 Move X25, [X31+16]
	187 Move W20, [X31+12]
	188 Move W19, [X9]
	189 Move X22, [X31+32]
	190 Move W19, W31
	191 Move X0, [X12]
	192 Move W8, [X0+224]
	193 Compare W8, 0
	194 JumpIfNotEqual {199}
	195 Move X23, X12
	196 Call 0x1C17DFC
	197 Move X9, [X31+80]
	198 Move X0, [X23]
	199 Move X8, [X0+184]
	200 Move W8, [X8+8]
	201 Multiply W8, W8, W20
	202 NotImplemented "Instruction CMP not yet implemented."
	203 Move W0, W31
	204 Move X8, [X31+56]
	205 Add X19, X31, 184
	206 Move X20, X9
	207 Move X0, [X8]
	208 Move X1, [X8+8]
	209 Move X8, 0x6A2000
	210 Move X8, [X8+472]
	211 Move X2, [X8]
	212 Call NativeArrayUnsafeUtility.GetUnsafeBufferPointerWithoutChecks, X0
	213 Move X8, 0x666000
	214 Move W20, [X20]
	215 Move X8, [X8+216]
	216 NotImplemented "Instruction MOVI not yet implemented."
	217 Move [X31+144], V0
	218 Move [X31+152], V0
	219 Move [X31+112], V0
	220 Move [X31+120], V0
	221 Move X8, [X8]
	222 Move X23, X0
	223 Move W9, [X8+224]
	224 Compare W9, 0
	225 JumpIfNotEqual {228}
	226 Move X0, X8
	227 Call 0x1C17DFC
	228 Move X8, 0x6A2000
	229 Move X8, [X8+480]
	230 Move X9, [X31+40]
	231 Move V0, [X31+112]
	232 Move V1, [X31+128]
	233 Move V2, [X31+144]
	234 Move V3, [X31+160]
	235 Move X4, [X8]
	236 Subtract W2, W20, 1
	237 Add X3, X31, 184
	238 Move X0, X23
	239 Move W1, W31
	240 Move [X31+184], X21
	241 Move [X31+192], X24
	242 Move [X31+200], X9
	243 Move [X31+208], X25
	244 Move [X31+216], V0
	245 Move [X19+48], V1
	246 Move [X19+56], V2
	247 Move [X19+5], V3
	248 Call ModuleHandle.InsertionSort, X0, X1, X2, X3
	249 Move W0, 1
	250 Move X8, [X22+40]
	251 Move X9, [X31+280]
	252 NotImplemented "Instruction CMP not yet implemented."
	253 Move X20, [X31+432]
	254 Move X19, [X31+440]
	255 Move X22, [X31+416]
	256 Move X21, [X31+424]
	257 Move X24, [X31+400]
	258 Move X23, [X31+408]
	259 Move X26, [X31+384]
	260 Move X25, [X31+392]
	261 Move X28, [X31+368]
	262 Move X27, [X31+376]
	263 Move X29, [X31+352]
	264 Move X30, [X31+360]
	265 Move D9, [X31+336]
	266 Move D8, [X31+344]
	267 Move D11, [X31+320]
	268 Move D10, [X31+328]
	269 Move D13, [X31+304]
	270 Move D12, [X31+312]
	271 Move D15, [X31+288]
	272 Move D14, [X31+296]
	273 Add X31, X31, 448
	274 Return X0
	275 Call 0x3EB2B20

Method: System.Boolean CalculateTJunctions(Unity.Collections.NativeArray`1<Unity.Mathematics.int2> edges, System.Int32 edgeCount, Unity.Collections.NativeArray`1<Unity.Mathematics.double2> points, System.Int32 pointCount, Unity.Collections.NativeArray`1<Unity.Mathematics.int2> results, ref System.Int32 resultCount)

Disassembly:
	0x03AB7B6C BL 0x1C16CF4
	0x03AB7B70 MOVZ W8, 0x1
	0x03AB7B74 STRB W8, [X23 + 0x489]
	0x03AB7B78 LDR W8, [X27 + 0x10]
	0x03AB7B7C LDR V0, [X27]
	0x03AB7B80 LDR X0, [X28]
	0x03AB7B84 LDP X23, X24, [X22]
	0x03AB7B88 LDP X25, X26, [X20]
	0x03AB7B8C LDR W27, [X19]
	0x03AB7B90 STR W8, [X31 + 0x30]
	0x03AB7B94 STR V0, [X31 + 0x2]
	0x03AB7B98 LDR W8, [X0 + 0xE0]
	0x03AB7B9C CBNZ W8, 0x3AB7BA4
	0x03AB7BA0 BL 0x1C16DFC
	0x03AB7BA4 LDR V0, [X31 + 0x2]
	0x03AB7BA8 LDR W8, [X31 + 0x30]
	0x03AB7BAC ADD X6, X31, 0x0
	0x03AB7BB0 MOV X0, X23
	0x03AB7BB4 MOV X1, X24
	0x03AB7BB8 MOV X3, X25
	0x03AB7BBC MOV X4, X26
	0x03AB7BC0 MOV W5, W27
	0x03AB7BC4 STR V0, [X31]
	0x03AB7BC8 STR W8, [X31 + 0x10]
	0x03AB7BCC BL 0x3AB7A98
	0x03AB7BD0 ADDS W31, W0, 0x1
	0x03AB7BD4 B.EQ 0x3AB7CEC
	0x03AB7BD8 LDR X8, [X20]
	0x03AB7BDC LDR X9, [X22]
	0x03AB7BE0 MOV W23, W0
	0x03AB7BE4 SXTW X24, W23
	0x03AB7BE8 ADD X10, X8, W0, 0x3, SXTW
	0x03AB7BEC LDPSW D8, D10, [X10]
	0x03AB7BF0 LDR V0, [X9, X8, LSL #3]
	0x03AB7BF4 LDR V1, [X9, X10, LSL #3]
	0x03AB7BF8 SUB W11, W8, W10
	0x03AB7BFC SUB W12, W31, W11
	0x03AB7C00 CMP W11, W12
	0x03AB7C04 FADD V0.2S, V0.2S, V1.2S
	0x03AB7C08 MOVI V1.2S, 0x3F, 0x18
	0x03AB7C0C CSNEG W11, W11, W11, GE
	0x03AB7C10 CMP W11, 0x1
	0x00000000 INVALID
	0x03AB7C18 B.NE 0x3AB7C90
	0x03AB7C1C LDR X0, [X28]
	0x03AB7C20 LDR W8, [X0 + 0xE0]
	0x03AB7C24 CBNZ W8, 0x3AB7C30
	0x03AB7C28 BL 0x1C16DFC
	0x03AB7C2C LDR X9, [X22]
	0x03AB7C30 LDR W8, [X21]
	0x03AB7C34 STR D8, [X9, W8, SXTW]
	0x03AB7C38 LDR W9, [X21]
	0x03AB7C3C ADD W9, W9, 0x1
	0x03AB7C40 STR W9, [X21]
	0x03AB7C44 LDR X9, [X20]
	0x03AB7C48 ADD X10, X9, X24, 0x3, LSL
	0x03AB7C4C LDP W11, W9, [X10]
	0x03AB7C50 BFM X11, X8, 0x20, 0x1F
	0x03AB7C54 STR X11, [X10]
	0x03AB7C58 LDRSW X12, [X19]
	0x03AB7C5C LDR X10, [X20]
	0x03AB7C60 ADD W11, W23, 0x1
	0x03AB7C64 CMP W12, W11
	0x03AB7C68 B.LE 0x3AB7CD4
	0x03AB7C6C SXTW X11, W11
	0x03AB7C70 ADD X10, X10, X12, 0x3, LSL
	0x03AB7C74 LDUR X13, [X10 - 0x8]
	0x03AB7C78 SUB X12, X12, 0x1
	0x03AB7C7C CMP X12, X11
	0x03AB7C80 STR X13, [X10]
	0x03AB7C84 LDR X10, [X20]
	0x03AB7C88 B.GT 0x3AB7C70
	0x03AB7C8C B 0x3AB7CD8
	0x03AB7C90 LDRSW X11, [X21]
	0x03AB7C94 CMP W8, W10
	0x03AB7C98 ADD W12, W11, 0x1
	0x03AB7C9C STR W12, [X21]
	0x03AB7CA0 STR D8, [X9, X11, LSL #3]
	0x03AB7CA4 LDR X9, [X20]
	0x03AB7CA8 CSEL W12, W8, W10, GT
	0x03AB7CAC BFM X12, X11, 0x20, 0x1F
	0x03AB7CB0 CSEL W8, W8, W10, LT
	0x03AB7CB4 STR X12, [X9, X24, LSL #3]
	0x03AB7CB8 LDRSW X9, [X19]
	0x03AB7CBC BFM X8, X11, 0x20, 0x1F
	0x03AB7CC0 ADD W12, W9, 0x1
	0x03AB7CC4 STR W12, [X19]
	0x03AB7CC8 LDR X12, [X20]
	0x03AB7CCC STR X8, [X12, X9, LSL #3]
	0x03AB7CD0 B 0x3AB7CEC
	0x03AB7CD4 SXTW X11, W11
	0x03AB7CD8 BFM X8, X9, 0x20, 0x1F
	0x03AB7CDC STR X8, [X10, X11, LSL #3]
	0x03AB7CE0 LDR W8, [X19]
	0x03AB7CE4 ADD W8, W8, 0x1
	0x03AB7CE8 STR W8, [X19]
	0x03AB7CEC LDP X20, X19, [X31 + 0x90]
	0x03AB7CF0 LDP X22, X21, [X31 + 0x80]
	0x03AB7CF4 LDP X24, X23, [X31 + 0x70]
	0x03AB7CF8 LDP X26, X25, [X31 + 0x60]
	0x03AB7CFC LDP X28, X27, [X31 + 0x50]
	0x03AB7D00 LDR X30, [X31 + 0x48]
	0x03AB7D04 LDR V8, [X31 + 0x40]
	0x03AB7D08 ADD X31, X31, 0xA0
	0x03AB7D0C RET
	0x03AB7D10 SUB X31, X31, 0x160
	0x03AB7D14 STP D11, D10, [X31 + 0xE0]
	0x03AB7D18 STP D9, D8, [X31 + 0xF0]
	0x03AB7D1C STP X29, X30, [X31 + 0x100]
	0x03AB7D20 STP X28, X27, [X31 + 0x110]

ISIL:
	001 Subtract X31, X31, 192
	002 Move [X31+48], D13
	003 Move [X31+56], D12
	004 Move [X31+64], D11
	005 Move [X31+72], D10
	006 Move [X31+80], D9
	007 Move [X31+88], D8
	008 Move [X31+96], X29
	009 Move [X31+104], X30
	010 Move [X31+112], X28
	011 Move [X31+120], X27
	012 Move [X31+128], X26
	013 Move [X31+136], X25
	014 Move [X31+144], X24
	015 Move [X31+152], X23
	016 Move [X31+160], X22
	017 Move [X31+168], X21
	018 Move [X31+176], X20
	019 Move [X31+184], X19
	020 Move X19, 0x92C000
	021 Move W8, [X19+1156]
	022 Move X25, [X31+192]
	023 Move X22, X3
	024 Move W24, W2
	025 Move [X31+32], X6
	026 Move [X31+40], X7
	027 Move [X31+28], W5
	028 Move [X31+8], X0
	029 Move TEMP, X8
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfEqual {38}
	033 Move X0, 0x69E000
	034 Move X0, [X0+2504]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X19+1156], W8
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Move [X25], W31
	040 Move X27, 0x69E000
	041 Move W8, W24
	042 Move X27, [X27+2504]
	043 Move [X31+16], X8
	044 Move W8, [X31+28]
	045 Move X26, X31
	046 Move X23, 1
	047 Move W28, W8
	048 Add X8, X22, 8
	049 Move [X31], X8
	050 Move W8, 1
	051 Move [X31+24], W8
	052 Move W8, [X31+28]
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Move X19, [X31]
	055 Move X8, [X31+8]
	056 Move X24, X31
	057 Move X21, X31
	058 Add X29, X8, X26
	059 Add X20, X29, 4
	060 Move W8, [X29]
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Move W9, [X20]
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Move X0, [X27]
	065 Move X8, W8
	066 Move X9, W9
	067 Add X8, X22, X8
	068 Add X9, X22, X9
	069 Move D13, [X8]
	070 Move D12, [X8+8]
	071 Move D11, [X9]
	072 Move D10, [X9+8]
	073 Move D8, [X19-8]
	074 Move D9, [X19]
	075 Move W8, [X0+224]
	076 Compare W8, 0
	077 JumpIfNotEqual {79}
	078 Call 0x1C17DFC
	079 Move V0, V13
	080 Move V1, V12
	081 Move V2, V11
	082 Move V3, V10
	083 Move V4, V8
	084 Move V5, V9
	085 Move V6, V8
	086 Move V7, V9
	087 Call PlanarGraph.LineLineIntersection, X0, X1, X2, X3
	088 Move TEMP, X0
	089 And TEMP, TEMP, 1
	090 Compare TEMP, 1
	091 JumpIfNotEqual {100}
	092 NotImplemented "Instruction LDRSW not yet implemented."
	093 Move X9, [X31+40]
	094 NotImplemented "Instruction CMP not yet implemented."
	095 Add W9, W8, 1
	096 Move [X25], W9
	097 Move X9, [X31+32]
	098 Or X10, X24, X26
	099 Move [X9], X10
	100 Add X21, X21, 1
	101 Add X24, X24, X23
	102 NotImplemented "Instruction CMP not yet implemented."
	103 Add X19, X19, 16
	104 Move X8, [X31+16]
	105 Add X26, X26, 1
	106 NotImplemented "Instruction CMP not yet implemented."
	107 NotImplemented "Instruction CSET not yet implemented."
	108 Move W8, [X31+24]
	109 Move W8, W31
	110 Move X20, [X31+176]
	111 Move X19, [X31+184]
	112 Move X22, [X31+160]
	113 Move X21, [X31+168]
	114 Move X24, [X31+144]
	115 Move X23, [X31+152]
	116 Move X26, [X31+128]
	117 Move X25, [X31+136]
	118 Move X28, [X31+112]
	119 Move X27, [X31+120]
	120 Move X29, [X31+96]
	121 Move X30, [X31+104]
	122 Move D9, [X31+80]
	123 Move D8, [X31+88]
	124 Move D11, [X31+64]
	125 Move D10, [X31+72]
	126 Move D13, [X31+48]
	127 Move D12, [X31+56]
	128 NotImplemented "Instruction ORN not yet implemented."
	129 And W0, W8, 1
	130 Add X31, X31, 192
	131 Return X0

Method: System.Boolean CutEdges(ref Unity.Collections.NativeArray`1<Unity.Mathematics.double2> points, ref System.Int32 pointCount, ref Unity.Collections.NativeArray`1<Unity.Mathematics.int2> edges, ref System.Int32 edgeCount, ref Unity.Collections.NativeArray`1<Unity.Mathematics.int2> tJunctions, ref System.Int32 tJunctionCount, Unity.Collections.NativeArray`1<Unity.Mathematics.int2> intersections, Unity.Collections.NativeArray`1<Unity.Mathematics.double2> intersects, System.Int32 intersectionCount)

Disassembly:
	0x03AB7D24 STP X26, X25, [X31 + 0x120]
	0x03AB7D28 STP X24, X23, [X31 + 0x130]
	0x03AB7D2C STP X22, X21, [X31 + 0x140]
	0x03AB7D30 STP X20, X19, [X31 + 0x150]
	0x03AB7D34 LDP X9, X29, [X31 + 0x160]
	0x03AB7D38 STR X5, [X31 + 0x68]
	0x03AB7D3C ADRP X19, 0x92B000
	0x03AB7D40 ADRP X26, 0x665000
	0x03AB7D44 STP X7, X9, [X31 + 0x58]
	0x03AB7D48 LDRB W8, [X19 + 0x48A]
	0x03AB7D4C LDR X26, [X26 + 0xD8]
	0x03AB7D50 MOV X21, X6
	0x03AB7D54 MOV X22, X4
	0x03AB7D58 MOV X23, X3
	0x03AB7D5C MOV X24, X2
	0x03AB7D60 MOV X25, X1
	0x03AB7D64 MOV V8.16B, V1.16B
	0x03AB7D68 MOV V9.16B, V0.16B
	0x03AB7D6C MOV W27, W0
	0x03AB7D70 TBNZ X8, 0x0, 0x3AB7DC4
	0x03AB7D74 ADRP X0, 0x665000
	0x03AB7D78 LDR X0, [X0 + 0xD8]
	0x03AB7D7C BL 0x1C16CF4
	0x03AB7D80 ADRP X0, 0x6A1000
	0x03AB7D84 LDR X0, [X0 + 0x200]
	0x03AB7D88 BL 0x1C16CF4
	0x03AB7D8C ADRP X0, 0x6A1000
	0x03AB7D90 LDR X0, [X0 + 0x208]
	0x03AB7D94 BL 0x1C16CF4
	0x03AB7D98 ADRP X0, 0x6A1000
	0x03AB7D9C LDR X0, [X0 + 0x210]
	0x03AB7DA0 BL 0x1C16CF4
	0x03AB7DA4 ADRP X0, 0x6A1000
	0x03AB7DA8 LDR X0, [X0 + 0x218]
	0x03AB7DAC BL 0x1C16CF4
	0x03AB7DB0 ADRP X0, 0x69D000
	0x03AB7DB4 LDR X0, [X0 + 0x9D0]
	0x03AB7DB8 BL 0x1C16CF4
	0x03AB7DBC MOVZ W8, 0x1
	0x03AB7DC0 STRB W8, [X19 + 0x48A]
	0x03AB7DC4 STP X31, X31, [X31 + 0xC0]
	0x03AB7DC8 STP X31, X31, [X31 + 0xB0]
	0x03AB7DCC STR W31, [X31 + 0xAC]
	0x03AB7DD0 STR W31, [X29]
	0x03AB7DD4 STR X31, [X31 + 0xD8]
	0x03AB7DD8 STR W31, [X31 + 0xD4]
	0x03AB7DDC LDR W9, [X24]
	0x03AB7DE0 LDR X0, [X26]
	0x03AB7DE4 ADRP X20, 0x6A1000
	0x03AB7DE8 ADRP X19, 0x6A1000
	0x03AB7DEC STR W9, [X31 + 0x40]
	0x03AB7DF0 LDR W8, [X0 + 0xE0]
	0x03AB7DF4 LDR X20, [X20 + 0x218]
	0x03AB7DF8 LDR X19, [X19 + 0x210]
	0x03AB7DFC CBNZ W8, 0x3AB7E08
	0x03AB7E00 BL 0x1C16DFC
	0x03AB7E04 LDR X0, [X26]
	0x03AB7E08 LDR X8, [X0 + 0xB8]
	0x03AB7E0C LDR X4, [X20]
	0x03AB7E10 ADRP X28, 0x69D000
	0x03AB7E14 ADD X0, X31, 0xC0
	0x03AB7E18 LDR W1, [X8 + 0x4]
	0x03AB7E1C LDR X28, [X28 + 0x9D0]
	0x03AB7E20 MOVZ W3, 0x1
	0x03AB7E24 MOV W2, W27
	0x03AB7E28 BL 0x23E8BC4
	0x03AB7E2C LDR X8, [X26]
	0x03AB7E30 LDR X4, [X19]
	0x03AB7E34 ADD X0, X31, 0xB0
	0x03AB7E38 MOVZ W3, 0x1
	0x03AB7E3C LDR X8, [X8 + 0xB8]
	0x03AB7E40 MOV W2, W27
	0x03AB7E44 LDR W1, [X8 + 0x10]
	0x03AB7E48 BL 0x23EF264
	0x03AB7E4C LDR X8, [X31 + 0x68]
	0x03AB7E50 MOV X26, X21
	0x03AB7E54 LDR W2, [X21]
	0x03AB7E58 ADD X9, X31, 0xD8
	0x03AB7E5C LDP X0, X1, [X8]
	0x03AB7E60 LDP X21, X8, [X31 + 0x58]
	0x03AB7E64 ADD X6, X31, 0xB0
	0x03AB7E68 ADD X7, X31, 0xD4
	0x03AB7E6C LDP X3, X4, [X21]
	0x03AB7E70 LDR W5, [X8]
	0x03AB7E74 ADD X8, X31, 0xDC
	0x03AB7E78 STP X8, X31, [X31 + 0x10]
	0x03AB7E7C STP X29, X9, [X31]
	0x03AB7E80 BL 0x3A23CE4
	0x03AB7E84 FCMP S9, 0x0
	0x03AB7E88 STR W27, [X31 + 0x44]
	0x03AB7E8C STR X29, [X31 + 0x50]
	0x03AB7E90 B.EQ 0x3AB7EDC
	0x03AB7E94 LDR X0, [X28]
	0x03AB7E98 LDR W8, [X0 + 0xE0]
	0x03AB7E9C CBNZ W8, 0x3AB7EA8
	0x03AB7EA0 BL 0x1C16DFC
	0x03AB7EA4 LDR X0, [X28]
	0x03AB7EA8 LDR X8, [X0 + 0xB8]
	0x03AB7EAC MOVZ W9, 0x7F800000
	0x03AB7EB0 LDP S1, S0, [X8]
	0x03AB7EB4 FMOV W8, S9
	0x03AB7EB8 AND W8, W8, 0x7FFFFFFF
	0x03AB7EBC FCMP S0, S9
	0x03AB7EC0 CCMP W8, W9, 0x2, PL
	0x03AB7EC4 FCSEL S0, S0, S9, HI
	0x03AB7EC8 FMOV W8, S0
	0x03AB7ECC AND W8, W8, 0x7FFFFFFF
	0x03AB7ED0 CMP W8, W9
	0x03AB7ED4 FCCMP S0, S1, 0x8, LS
	0x03AB7ED8 FCSEL S9, S1, S0, MI
	0x03AB7EDC LDR X8, [X31 + 0x50]
	0x03AB7EE0 MOVZ W9, 0x7F800000
	0x03AB7EE4 MOV W29, W31
	0x03AB7EE8 MOVZ W27, 0x1
	0x03AB7EEC LDR V0, [X8]
	0x03AB7EF0 FMOV W8, S8
	0x03AB7EF4 AND W8, W8, 0x7FFFFFFF
	0x03AB7EF8 FMUL S0, S9, S0
	0x03AB7EFC FCMP S0, S8
	0x03AB7F00 CCMP W8, W9, 0x2, LE
	0x03AB7F04 FCSEL S11, S0, S8, HI
	0x03AB7F08 MOV W8, W29
	0x03AB7F0C MOV W29, W8
	0x03AB7F10 BIC W8, W27, W8, 0x0
	0x03AB7F14 TBZ X8, 0x0, 0x3AB815C
	0x03AB7F18 LDR W8, [X31 + 0xD4]
	0x03AB7F1C CMP W8, 0x1
	0x03AB7F20 B.LT 0x3AB7F60
	0x03AB7F24 MOV X19, X31
	0x03AB7F28 MOVZ W20, 0x24
	0x03AB7F2C LDR X0, [X28]
	0x03AB7F30 LDR X8, [X31 + 0xB0]
	0x03AB7F34 LDR W9, [X0 + 0xE0]
	0x03AB7F38 LDR V8, [X8, X20, LSL]
	0x03AB7F3C CBNZ W9, 0x3AB7F44
	0x03AB7F40 BL 0x1C16DFC
	0x03AB7F44 FCMP S8, S11
	0x03AB7F48 B.GT 0x3AB7F64
	0x03AB7F4C LDRSW X8, [X31 + 0xD4]
	0x03AB7F50 ADD X19, X19, 0x1
	0x03AB7F54 ADD X20, X20, 0x34
	0x03AB7F58 CMP X19, X8
	0x03AB7F5C B.LT 0x3AB7F2C
	0x03AB7F60 MOVN W19, 0x0
	0x03AB7F64 ADDS W31, W19, 0x1
	0x03AB7F68 MOVZ W8, 0x1
	0x03AB7F6C B.EQ 0x3AB7F0C
	0x03AB7F70 LDR X8, [X31 + 0xB0]
	0x03AB7F74 LDR X0, [X28]
	0x03AB7F78 MOVZ W9, 0x34
	0x03AB7F7C STR X26, [X31 + 0x48]
	0x03AB7F80 NOP
	0x03AB7F84 SMADDL X8, X19, X9, X8
	0x03AB7F88 LDP S9, S8, [X8 + 0x18]
	0x03AB7F8C LDR V10, [X8 + 0x20]
	0x03AB7F90 STR W31, [X31 + 0xAC]
	0x03AB7F94 LDP X19, X20, [X25]
	0x03AB7F98 LDP X21, X26, [X23]
	0x03AB7F9C LDR W8, [X0 + 0xE0]
	0x03AB7FA0 LDR W27, [X22]
	0x03AB7FA4 CBNZ W8, 0x3AB7FAC
	0x03AB7FA8 BL 0x1C16DFC
	0x03AB7FAC ADD X6, X31, 0xC0
	0x03AB7FB0 ADD X7, X31, 0xAC
	0x03AB7FB4 MOV X0, X19
	0x03AB7FB8 MOV X1, X20
	0x03AB7FBC MOV X3, X21
	0x03AB7FC0 MOV X4, X26
	0x03AB7FC4 MOV W5, W27
	0x03AB7FC8 MOV V0.16B, V9.16B
	0x03AB7FCC MOV V1.16B, V8.16B
	0x03AB7FD0 MOV V2.16B, V10.16B
	0x03AB7FD4 BL 0x3AB78C4
	0x03AB7FD8 LDR W8, [X31 + 0xAC]

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+16], X30
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X27, 0x92C000
	013 Move W8, [X27+1157]
	014 Move W26, [X31+112]
	015 Move X25, X6
	016 Move X23, X5
	017 Move X19, X4
	018 Move X20, X3
	019 Move X21, X2
	020 Move X24, X1
	021 Move X22, X0
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {40}
	026 Move X0, 0x6A2000
	027 Move X0, [X0+488]
	028 Call 0x1C17CF4
	029 Move X0, 0x666000
	030 Move X0, [X0+216]
	031 Call 0x1C17CF4
	032 Move X0, 0x6A2000
	033 Move X0, [X0+472]
	034 Call 0x1C17CF4
	035 Move X0, 0x695000
	036 Move X0, [X0]
	037 Call 0x1C17CF4
	038 Move W8, 1
	039 Move [X27+1157], W8
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Move X9, [X31+96]
	042 Move X8, X31
	043 Move W10, W26
	044 Add X11, X25, 4
	045 Move W25, 1
	046 NotImplemented "Instruction LDRSW not yet implemented."
	047 Move W13, [X11-4]
	048 Move W14, [X11]
	049 Move W15, [X24]
	050 Add W16, W12, 1
	051 Move [X23], W16
	052 Move X16, [X19]
	053 Add X12, X16, X12
	054 Move [X12], W13
	055 Move [X12+4], W15
	056 NotImplemented "Instruction LDRSW not yet implemented."
	057 Move W13, [X24]
	058 Add W15, W12, 1
	059 Move [X23], W15
	060 Move X15, [X19]
	061 Add X12, X15, X12
	062 Move [X12], W14
	063 Move [X12+4], W13
	064 NotImplemented "Instruction LDRSW not yet implemented."
	065 Move W13, [X22+8]
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Add W13, W12, 1
	068 Move [X24], W13
	069 Move V0, [X9+16]
	070 Add X8, X8, 1
	071 NotImplemented "Instruction CMP not yet implemented."
	072 Add X11, X11, 8
	073 Move [X31], V0
	074 Move X13, [X22]
	075 NotImplemented "Instruction CSET not yet implemented."
	076 NotImplemented "Instruction CMP not yet implemented."
	077 Move [X13], V0
	078 Move W25, W31
	079 Move X8, 0x6A2000
	080 Move X8, [X8+472]
	081 Move X0, [X19]
	082 Move X1, [X19+8]
	083 Move X24, 0x666000
	084 Move X26, 0x6A2000
	085 Move X2, [X8]
	086 Move X24, [X24+216]
	087 Move X26, [X26+488]
	088 Call NativeArrayUnsafeUtility.GetUnsafeBufferPointerWithoutChecks, X0
	089 Move X8, [X24]
	090 Move W27, [X23]
	091 Move X24, X0
	092 Move W9, [X8+224]
	093 Compare W9, 0
	094 JumpIfNotEqual {97}
	095 Move X0, X8
	096 Call 0x1C17DFC
	097 Move X4, [X26]
	098 Subtract W2, W27, 1
	099 Move X0, X24
	100 Move W1, W31
	101 Move X3, X31
	102 Call ModuleHandle.InsertionSort, X0, X1, X2, X3
	103 Move W8, [X23]
	104 Subtract W8, W8, 1
	105 Move X9, [X19]
	106 Move X10, [X21]
	107 Add X11, X9, W8
	108 Move W9, [X11]
	109 Move W11, [X11+4]
	110 Move X9, W9
	111 Add X13, X10, X9
	112 Move W15, [X13]
	113 Move X12, X13
	114 Add X12, X12, 4
	115 Move W14, [X12]
	116 Move X10, [X22]
	117 NotImplemented "Instruction SBFM not yet implemented."
	118 Move V0, [X10]
	119 NotImplemented "Instruction SBFM not yet implemented."
	120 Move V1, [X10]
	121 Subtract D2, D0, D1
	122 NotImplemented "Instruction FCMP not yet implemented."
	123 NotImplemented "Instruction FCMP not yet implemented."
	124 Move X16, W15
	125 Move X17, W14
	126 Add X17, X10, X17
	127 Add X10, X10, X16
	128 Move V0, [X17+8]
	129 Move V1, [X10+8]
	130 Subtract D0, D1, D0
	131 NotImplemented "Instruction FCMP not yet implemented."
	132 Move W10, W15
	133 Move W10, W14
	134 Move W14, W15
	135 NotImplemented "Instruction CMP not yet implemented."
	136 Move [X13], W14
	137 Move [X12], W11
	138 Move W8, W8
	139 Move X13, X8
	140 ShiftRight X13, 61
	141 And X13, X13, 0xFFFFFFF
	142 Move X12, [X19]
	143 Add X12, X12, X13
	144 NotImplemented "Instruction LDUR not yet implemented."
	145 NotImplemented "Instruction CMP not yet implemented."
	146 NotImplemented "Instruction LDRSW not yet implemented."
	147 NotImplemented "Instruction LDUR not yet implemented."
	148 Subtract X8, X8, 1
	149 Move W11, W11
	150 Add W15, W14, 1
	151 Move [X20], W15
	152 Move X15, [X21]
	153 Add X16, X8, 1
	154 NotImplemented "Instruction BFM not yet implemented."
	155 NotImplemented "Instruction CMP not yet implemented."
	156 Move [X15], X11
	157 Subtract X13, X13, 8
	158 Move W11, W12
	159 Move W8, W31
	160 Move W12, W11
	161 NotImplemented "Instruction LDRSW not yet implemented."
	162 Move W12, W12
	163 NotImplemented "Instruction BFM not yet implemented."
	164 Subtract W8, W8, 1
	165 Add W11, W9, 1
	166 Move [X20], W11
	167 Move X11, [X21]
	168 Move [X11], X12
	169 NotImplemented "Instruction ORN not yet implemented."
	170 Move X20, [X31+80]
	171 Move X19, [X31+88]
	172 Move X22, [X31+64]
	173 Move X21, [X31+72]
	174 Move X24, [X31+48]
	175 Move X23, [X31+56]
	176 Move X26, [X31+32]
	177 Move X25, [X31+40]
	178 Move X30, [X31+16]
	179 Move X27, [X31+24]
	180 And W0, W8, 1
	181 Add X31, X31, 96
	182 Return X0

Method: System.Void RemoveDuplicatePoints(ref Unity.Collections.NativeArray`1<Unity.Mathematics.double2> points, ref System.Int32 pointCount, ref Unity.Collections.NativeArray`1<System.Int32> duplicates, ref System.Int32 duplicateCount, Unity.Collections.Allocator allocator)

Disassembly:
	0x03AB7FDC CBZ W8, 0x3AB8060
	0x03AB7FE0 LDR X21, [X31 + 0x58]
	0x03AB7FE4 LDR X26, [X31 + 0x48]
	0x03AB7FE8 LDR W27, [X31 + 0x44]
	0x03AB7FEC CMP W8, 0x1
	0x03AB7FF0 B.LT 0x3AB8084
	0x03AB7FF4 ADD X8, X8, X8, 0x2, LSL
	0x03AB7FF8 MOV X19, X31
	0x03AB7FFC UBFM X20, X8, 0x3E, 0x3D
	0x03AB8000 LDR X8, [X31 + 0xC0]
	0x03AB8004 LDR X0, [X28]
	0x03AB8008 ADD X8, X8, X19
	0x03AB800C LDR V0, [X8]
	0x03AB8010 LDR W8, [X8 + 0x10]
	0x03AB8014 STR V0, [X31 + 0x9]
	0x03AB8018 STR W8, [X31 + 0xA0]
	0x03AB801C LDR W8, [X0 + 0xE0]
	0x03AB8020 CBNZ W8, 0x3AB8028
	0x03AB8024 BL 0x1C16DFC
	0x03AB8028 LDR V0, [X31 + 0x9]
	0x03AB802C LDR W8, [X31 + 0xA0]
	0x03AB8030 ADD X4, X31, 0x70
	0x03AB8034 MOV X0, X25
	0x03AB8038 MOV X1, X24
	0x03AB803C MOV X2, X23
	0x03AB8040 MOV X3, X22
	0x03AB8044 STR V0, [X31 + 0x7]
	0x03AB8048 STR W8, [X31 + 0x80]
	0x03AB804C BL 0x3AB7B1C
	0x03AB8050 ADD X19, X19, 0x14
	0x03AB8054 CMP X20, X19
	0x03AB8058 B.NE 0x3AB8000
	0x03AB805C B 0x3AB8084
	0x03AB8060 LDRSW X8, [X24]
	0x03AB8064 LDR X21, [X31 + 0x58]
	0x03AB8068 LDR X26, [X31 + 0x48]
	0x03AB806C LDR W27, [X31 + 0x44]
	0x03AB8070 ADD W9, W8, 0x1
	0x03AB8074 STR W9, [X24]
	0x03AB8078 LDR X9, [X25]
	0x03AB807C ADD X8, X9, X8, 0x3, LSL
	0x03AB8080 STP S9, S8, [X8]
	0x03AB8084 LDP X8, X7, [X31 + 0x60]
	0x03AB8088 MOV W0, W27
	0x03AB808C STR W31, [X8]
	0x03AB8090 STR W31, [X26]
	0x03AB8094 LDP X1, X2, [X25]
	0x03AB8098 LDR W3, [X24]
	0x03AB809C LDP X4, X5, [X23]
	0x03AB80A0 LDR W6, [X22]
	0x03AB80A4 STP X21, X8, [X31 + 0x8]
	0x03AB80A8 STR X26, [X31]
	0x03AB80AC BL 0x3AB81B0
	0x03AB80B0 MOV W27, W0
	0x03AB80B4 STR W31, [X31 + 0xD4]
	0x03AB80B8 TBZ X0, 0x0, 0x3AB812C
	0x03AB80BC LDP X9, X8, [X31 + 0x60]
	0x03AB80C0 LDP X10, X1, [X8]
	0x03AB80C4 ADRP X8, 0x664000
	0x03AB80C8 LDR X8, [X8 + 0xD8]
	0x03AB80CC LDR W26, [X26]
	0x03AB80D0 LDP X20, X19, [X21]
	0x03AB80D4 LDR W21, [X9]
	0x03AB80D8 LDR X0, [X8]
	0x03AB80DC LDR W8, [X0 + 0xE0]
	0x03AB80E0 CBNZ W8, 0x3AB80F0
	0x03AB80E4 STP X1, X10, [X31 + 0x30]
	0x03AB80E8 BL 0x1C16DFC
	0x03AB80EC LDP X1, X10, [X31 + 0x30]
	0x03AB80F0 ADD X8, X31, 0xDC
	0x03AB80F4 STP X8, X31, [X31 + 0x10]
	0x03AB80F8 ADD X8, X31, 0xD8
	0x03AB80FC STR X8, [X31 + 0x8]
	0x03AB8100 LDR X8, [X31 + 0x50]
	0x03AB8104 ADD X6, X31, 0xB0
	0x03AB8108 ADD X7, X31, 0xD4
	0x03AB810C MOV X0, X10
	0x03AB8110 MOV W2, W26
	0x03AB8114 MOV X3, X20
	0x03AB8118 MOV X4, X19
	0x03AB811C MOV W5, W21
	0x03AB8120 STR X8, [X31]
	0x03AB8124 BL 0x3A23CE4
	0x03AB8128 LDR X26, [X31 + 0x48]
	0x03AB812C LDR X0, [X28]
	0x03AB8130 LDR W19, [X24]
	0x03AB8134 LDR W8, [X0 + 0xE0]
	0x03AB8138 CBNZ W8, 0x3AB8144
	0x03AB813C BL 0x1C16DFC
	0x03AB8140 LDR X0, [X28]
	0x03AB8144 LDR X8, [X0 + 0xB8]
	0x03AB8148 LDR W9, [X31 + 0x40]
	0x03AB814C LDR W8, [X8 + 0x8]
	0x03AB8150 SUB W9, W19, W9
	0x03AB8154 CMP W9, W8
	0x03AB8158 B.LE 0x3AB7F08
	0x03AB815C ADRP X8, 0x6A0000
	0x03AB8160 LDR X8, [X8 + 0x208]
	0x03AB8164 ADD X0, X31, 0xB0
	0x03AB8168 LDR X1, [X8]
	0x03AB816C BL 0x23EF518
	0x03AB8170 ADRP X8, 0x6A0000
	0x03AB8174 LDR X8, [X8 + 0x200]
	0x03AB8178 ADD X0, X31, 0xC0
	0x03AB817C LDR X1, [X8]
	0x03AB8180 BL 0x23E8E50
	0x03AB8184 AND W0, W29, 0x1
	0x03AB8188 LDP X20, X19, [X31 + 0x150]
	0x03AB818C LDP X22, X21, [X31 + 0x140]
	0x03AB8190 LDP X24, X23, [X31 + 0x130]
	0x03AB8194 LDP X26, X25, [X31 + 0x120]
	0x03AB8198 LDP X28, X27, [X31 + 0x110]
	0x03AB819C LDP X29, X30, [X31 + 0x100]
	0x03AB81A0 LDP D9, D8, [X31 + 0xF0]
	0x03AB81A4 LDP D11, D10, [X31 + 0xE0]
	0x03AB81A8 ADD X31, X31, 0x160
	0x03AB81AC RET
	0x03AB81B0 SUB X31, X31, 0x120
	0x03AB81B4 STR X29, [X31 + 0xC0]
	0x03AB81B8 STP X30, X27, [X31 + 0xD0]
	0x03AB81BC STP X26, X25, [X31 + 0xE0]
	0x03AB81C0 STP X24, X23, [X31 + 0xF0]
	0x03AB81C4 STP X22, X21, [X31 + 0x100]
	0x03AB81C8 STP X20, X19, [X31 + 0x110]
	0x03AB81CC ADRP X27, 0x92A000
	0x03AB81D0 LDRB W8, [X27 + 0x4A0]
	0x03AB81D4 MOV X19, X7
	0x03AB81D8 MOV W24, W6
	0x03AB81DC MOV X21, X5
	0x03AB81E0 MOV X22, X4
	0x03AB81E4 MOV W25, W3
	0x03AB81E8 MOV X23, X2
	0x03AB81EC MOV X20, X1
	0x03AB81F0 MOV W26, W0
	0x03AB81F4 TBNZ X8, 0x0, 0x3AB820C
	0x03AB81F8 ADRP X0, 0x6A0000
	0x03AB81FC LDR X0, [X0 + 0x220]
	0x03AB8200 BL 0x1C16CF4
	0x03AB8204 MOVZ W8, 0x1
	0x03AB8208 STRB W8, [X27 + 0x4A0]
	0x03AB820C ADD X0, X31, 0x10
	0x03AB8210 MOVZ W2, 0xB0
	0x03AB8214 MOV W1, W31
	0x03AB8218 STP X31, X31, [X31]
	0x03AB821C BL 0x3EB1B10
	0x03AB8220 ADD X0, X31, 0x10
	0x03AB8224 MOV X1, X20
	0x03AB8228 MOV X2, X23
	0x03AB822C MOV W3, W25
	0x03AB8230 MOV X4, X22
	0x03AB8234 MOV X5, X21
	0x03AB8238 MOV W6, W24
	0x03AB823C STR W26, [X31 + 0xB8]
	0x03AB8240 STR W31, [X31 + 0xCC]
	0x03AB8244 BL 0x3ABB520
	0x03AB8248 MOV W24, W31
	0x03AB824C TBZ X0, 0x0, 0x3AB8378
	0x03AB8250 ADD X0, X31, 0x10
	0x03AB8254 MOV X1, X20
	0x03AB8258 MOV X2, X23
	0x03AB825C MOV X3, X22
	0x03AB8260 MOV X4, X21
	0x03AB8264 BL 0x3ABA794
	0x03AB8268 TBZ X0, 0x0, 0x3AB8374
	0x03AB826C ADD X0, X31, 0x10
	0x03AB8270 ADD X1, X31, 0xCC
	0x03AB8274 BL 0x3ABB2F4
	0x03AB8278 LDR W9, [X31 + 0xCC]
	0x03AB827C STP X0, X1, [X31]
	0x03AB8280 CMP W9, 0x1
	0x03AB8284 B.LT 0x3AB8358
	0x03AB8288 LDP X12, X11, [X31 + 0x128]
	0x03AB828C LDR X8, [X31 + 0x120]
	0x03AB8290 MOV W10, W31
	0x03AB8294 ADD X13, X0, 0x8
	0x03AB8298 LDP W14, W16, [X13 - 0x8]
	0x03AB829C LDR W15, [X13]
	0x03AB82A0 AND W0, W14, 0xFFFF
	0x03AB82A4 CMP W0, W15, UXTH
	0x03AB82A8 B.EQ 0x3AB8300
	0x03AB82AC AND W17, W16, 0xFFFF
	0x03AB82B0 CMP W0, W17
	0x03AB82B4 B.EQ 0x3AB8300
	0x03AB82B8 AND W1, W15, 0xFFFF
	0x03AB82BC CMP W17, W1

ISIL:
	001 Subtract X31, X31, 288
	002 Move [X31+160], D11
	003 Move [X31+168], D10
	004 Move [X31+176], D9
	005 Move [X31+184], D8
	006 Move [X31+192], X29
	007 Move [X31+200], X30
	008 Move [X31+208], X28
	009 Move [X31+216], X27
	010 Move [X31+224], X26
	011 Move [X31+232], X25
	012 Move [X31+240], X24
	013 Move [X31+248], X23
	014 Move [X31+256], X22
	015 Move [X31+264], X21
	016 Move [X31+272], X20
	017 Move [X31+280], X19
	018 Move X19, 0x92B000
	019 Move W8, [X19+1158]
	020 Move W23, W4
	021 Move X20, X1
	022 Move X21, X0
	023 Move [X31+16], X3
	024 Move [X31+24], X2
	025 Move TEMP, X8
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {34}
	029 Move X0, 0x69D000
	030 Move X0, [X0+2504]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X19+1158], W8
	034 NotImplemented "Instruction MOVI not yet implemented."
	035 Move [X31+128], V0
	036 Move [X31+136], V0
	037 Move W0, [X20]
	038 Add X8, X31, 96
	039 Move W1, W23
	040 Move X2, X31
	041 Call TessLink.CreateLink, X0, X1
	042 Move V0, [X31+96]
	043 Move V1, [X31+112]
	044 Move [X31+128], V0
	045 Move [X31+136], V1
	046 Move W8, [X20]
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Move X27, 0x69D000
	049 Move X23, 0x63C000
	050 Move X27, [X27+2504]
	051 Move X23, [X23+1448]
	052 Move X28, X31
	053 Move X24, X31
	054 Move X29, 0x92A000
	055 Move W19, 1
	056 Add X22, X24, 1
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Move X26, X28
	059 Move W25, W19
	060 Move X8, [X21]
	061 Move W9, [X29+1414]
	062 Add X10, X8, X24
	063 Add X8, X8, X26
	064 Move D8, [X10]
	065 Move D9, [X10+8]
	066 Move D10, [X8+16]
	067 Move D11, [X8+24]
	068 Compare W9, 0
	069 JumpIfNotEqual {74}
	070 Move X0, X23
	071 Call 0x1C17CF4
	072 Move W8, 1
	073 Move [X29+1414], W8
	074 Move X0, [X23]
	075 Move W8, [X0+224]
	076 Compare W8, 0
	077 JumpIfNotEqual {79}
	078 Call 0x1C17DFC
	079 Move X0, [X27]
	080 Move W8, [X0+224]
	081 Compare W8, 0
	082 JumpIfNotEqual {85}
	083 Call 0x1C17DFC
	084 Move X0, [X27]
	085 Move X8, [X0+184]
	086 Subtract D0, D10, D8
	087 Subtract D1, D11, D9
	088 Multiply D0, D0, D0
	089 Move V2, [X8]
	090 Multiply D1, D1, D1
	091 Add D0, D0, D1
	092 NotImplemented "Instruction FSQRT not yet implemented."
	093 NotImplemented "Instruction FCMP not yet implemented."
	094 Add X0, X31, 128
	095 Move W1, W24
	096 Move W2, W25
	097 Move X3, X31
	098 Call TessLink.Link, X0, X1, X2
	099 Move W8, [X20]
	100 Add W25, W25, 1
	101 Add X26, X26, 16
	102 NotImplemented "Instruction CMP not yet implemented."
	103 Add W19, W19, 1
	104 NotImplemented "Instruction CMP not yet implemented."
	105 Add X28, X28, 16
	106 Move X24, X22
	107 Move X19, [X31+16]
	108 Move X24, [X31+24]
	109 Move [X19], W31
	110 Move W8, [X20]
	111 NotImplemented "Instruction CMP not yet implemented."
	112 Move TEMP, 0x80000000
	113 Not TEMP
	114 Move X8, TEMP
	115 Move X9, 0x7FF00000
	116 Move X23, X31
	117 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	118 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	119 Move [X31+32], V0
	120 Move [X31+40], V1
	121 Add X0, X31, 128
	122 Move W1, W23
	123 Move X2, X31
	124 Call TessLink.Find, X0, X1
	125 NotImplemented "Instruction CMP not yet implemented."
	126 Move W8, [X19]
	127 Move V3, [X31+32]
	128 Move V2, [X31+48]
	129 Add W8, W8, 1
	130 Move [X19], W8
	131 Move X8, [X21]
	132 Move V0, [X8]
	133 Move V1, [X8]
	134 And V2, V0, V2
	135 NotImplemented "Instruction INVALID not yet implemented."
	136 NotImplemented "Instruction INVALID not yet implemented."
	137 Or V2, V3, V2
	138 NotImplemented "Instruction INVALID not yet implemented."
	139 Move [X8], V0
	140 NotImplemented "Instruction LDRSW not yet implemented."
	141 Add X23, X23, 1
	142 NotImplemented "Instruction CMP not yet implemented."
	143 Move W9, [X19]
	144 Compare W9, 0
	145 JumpIfEqual {188}
	146 And X19, X8, 0
	147 NotImplemented "Instruction CMP not yet implemented."
	148 Move [X20], W31
	149 Move X22, X31
	150 Move TEMP, 0
	151 Not TEMP
	152 Move W23, TEMP
	153 Add X0, X31, 128
	154 Move W1, W22
	155 Move X2, X31
	156 Call TessLink.Find, X0, X1
	157 NotImplemented "Instruction CMP not yet implemented."
	158 Move W8, [X20]
	159 Move X9, [X24]
	160 Move [X9], W8
	161 NotImplemented "Instruction LDRSW not yet implemented."
	162 Add W9, W8, 1
	163 Move [X20], W9
	164 Move X9, [X21]
	165 Move V0, [X9]
	166 Move [X9], V0
	167 Move X8, [X24]
	168 Move [X8], W23
	169 Add X22, X22, 1
	170 NotImplemented "Instruction CMP not yet implemented."
	171 NotImplemented "Instruction CMP not yet implemented."
	172 Move X8, [X24]
	173 Move X20, X31
	174 Move W9, [X8]
	175 Move TEMP, X9
	176 And TEMP, TEMP, -2147483648
	177 Compare TEMP, -2147483648
	178 JumpIfNotEqual {186}
	179 Add X0, X31, 128
	180 Move W1, W20
	181 Move X2, X31
	182 Call TessLink.Find, X0, X1
	183 Move X8, [X24]
	184 Move W9, [X8]
	185 Move [X8], W9
	186 Add X20, X20, 1
	187 NotImplemented "Instruction CMP not yet implemented."
	188 Move V0, [X31+128]
	189 Move V1, [X31+144]
	190 Add X0, X31, 64
	191 Move X1, X31
	192 Move [X31+64], V0
	193 Move [X31+72], V1
	194 Call TessLink.DestroyLink, X0
	195 Move X20, [X31+272]
	196 Move X19, [X31+280]
	197 Move X22, [X31+256]
	198 Move X21, [X31+264]
	199 Move X24, [X31+240]
	200 Move X23, [X31+248]
	201 Move X26, [X31+224]
	202 Move X25, [X31+232]
	203 Move X28, [X31+208]
	204 Move X27, [X31+216]
	205 Move X29, [X31+192]
	206 Move X30, [X31+200]
	207 Move D9, [X31+176]
	208 Move D8, [X31+184]
	209 Move D11, [X31+160]
	210 Move D10, [X31+168]
	211 Add X31, X31, 288
	212 Return 

Method: System.Boolean Validate(Unity.Collections.Allocator allocator, Unity.Collections.NativeArray`1<Unity.Mathematics.float2> inputPoints, System.Int32 pointCount, Unity.Collections.NativeArray`1<Unity.Mathematics.int2> inputEdges, System.Int32 edgeCount, ref Unity.Collections.NativeArray`1<Unity.Mathematics.float2> outputPoints, ref System.Int32 outputPointCount, ref Unity.Collections.NativeArray`1<Unity.Mathematics.int2> outputEdges, ref System.Int32 outputEdgeCount)

Disassembly:
	0x03AB82C0 B.EQ 0x3AB8300
	0x03AB82C4 LDRSW X14, [X11]
	0x03AB82C8 ADD W15, W14, 0x1
	0x03AB82CC STR W15, [X11]
	0x03AB82D0 LDR X15, [X12]
	0x03AB82D4 STR W0, [X15, X14, LSL #2]
	0x03AB82D8 LDRSW X14, [X11]
	0x03AB82DC ADD W16, W14, 0x1
	0x03AB82E0 STR W16, [X11]
	0x03AB82E4 STR W1, [X15, X14, LSL #2]
	0x03AB82E8 LDRSW X14, [X11]
	0x03AB82EC ADD W16, W14, 0x1
	0x03AB82F0 STR W16, [X11]
	0x03AB82F4 STR W17, [X15, X14, LSL #2]
	0x03AB82F8 LDP W14, W16, [X13 - 0x8]
	0x03AB82FC LDR W15, [X13]
	0x03AB8300 CMP W14, W16
	0x03AB8304 CSEL W14, W14, W16, GT
	0x03AB8308 CMP W14, W15
	0x03AB830C CSEL W14, W14, W15, GT
	0x03AB8310 CMP W14, W10
	0x03AB8314 CSEL W10, W14, W10, GT
	0x03AB8318 SUBS X9, X9, 0x1
	0x03AB831C ADD X13, X13, 0xC
	0x03AB8320 B.NE 0x3AB8298
	0x03AB8324 CBZ W10, 0x3AB8358
	0x03AB8328 ADD W9, W10, 0x1
	0x03AB832C CMP W9, 0x1
	0x03AB8330 B.LT 0x3AB8358
	0x03AB8334 MOV W9, W9
	0x03AB8338 LDRSW X10, [X8]
	0x03AB833C SUBS X9, X9, 0x1
	0x03AB8340 ADD W11, W10, 0x1
	0x03AB8344 STR W11, [X8]
	0x03AB8348 LDR X11, [X20], #0x8
	0x03AB834C LDR X12, [X19]
	0x03AB8350 STR X11, [X12, X10, LSL #3]
	0x03AB8354 B.NE 0x3AB8338
	0x03AB8358 ADRP X8, 0x6A0000
	0x03AB835C LDR X8, [X8 + 0x220]
	0x03AB8360 ADD X0, X31, 0x0
	0x03AB8364 LDR X1, [X8]
	0x03AB8368 BL 0x23FCFF8
	0x03AB836C MOVZ W24, 0x1
	0x03AB8370 B 0x3AB8378
	0x03AB8374 MOV W24, W31
	0x03AB8378 ADD X0, X31, 0x10
	0x03AB837C BL 0x3ABBA8C
	0x03AB8380 MOV W0, W24
	0x03AB8384 LDP X20, X19, [X31 + 0x110]
	0x03AB8388 LDP X22, X21, [X31 + 0x100]
	0x03AB838C LDP X24, X23, [X31 + 0xF0]
	0x03AB8390 LDP X26, X25, [X31 + 0xE0]
	0x03AB8394 LDP X30, X27, [X31 + 0xD0]
	0x03AB8398 LDR X29, [X31 + 0xC0]
	0x03AB839C ADD X31, X31, 0x120
	0x03AB83A0 RET
	0x03AB83A4 STR X30, [X31 - 0x20]!
	0x03AB83A8 STP X20, X19, [X31 + 0x10]
	0x03AB83AC ADRP X19, 0x92A000
	0x03AB83B0 ADRP X20, 0x69C000
	0x03AB83B4 LDRB W8, [X19 + 0x48B]
	0x03AB83B8 LDR X20, [X20 + 0x9D0]
	0x03AB83BC TBNZ X8, 0x0, 0x3AB83D4
	0x03AB83C0 ADRP X0, 0x69C000
	0x03AB83C4 LDR X0, [X0 + 0x9D0]
	0x03AB83C8 BL 0x1C16CF4
	0x03AB83CC MOVZ W8, 0x1
	0x03AB83D0 STRB W8, [X19 + 0x48B]
	0x03AB83D4 LDR X8, [X20]
	0x03AB83D8 ADRP X9, 0xFFFFFFFFFD035000
	0x03AB83DC LDR V0, [X9 + 0x878]
	0x03AB83E0 LDP X20, X19, [X31 + 0x10]
	0x03AB83E4 LDR X8, [X8 + 0xB8]
	0x03AB83E8 MOVZ W9, 0xFF4
	0x03AB83EC STR D0, [X8]
	0x03AB83F0 STR W9, [X8 + 0x8]
	0x03AB83F4 LDR X30, [X31], #0x20
	0x03AB83F8 RET
	0x03AB83FC STR X30, [X31 - 0x40]!
	0x03AB8400 STP X24, X23, [X31 + 0x10]
	0x03AB8404 STP X22, X21, [X31 + 0x20]
	0x03AB8408 STP X20, X19, [X31 + 0x30]
	0x03AB840C ADRP X23, 0x92A000
	0x03AB8410 LDRB W8, [X23 + 0x48C]
	0x03AB8414 MOV X21, X3
	0x03AB8418 MOV X22, X2
	0x03AB841C MOV X19, X1
	0x03AB8420 MOV X20, X0
	0x03AB8424 TBNZ X8, 0x0, 0x3AB8448
	0x03AB8428 ADRP X0, 0x6A0000
	0x03AB842C LDR X0, [X0 + 0x228]
	0x03AB8430 BL 0x1C16CF4
	0x03AB8434 ADRP X0, 0x664000
	0x03AB8438 LDR X0, [X0 + 0xD8]
	0x03AB843C BL 0x1C16CF4
	0x03AB8440 MOVZ W8, 0x1
	0x03AB8444 STRB W8, [X23 + 0x48C]
	0x03AB8448 LDR W9, [X22]
	0x03AB844C ADRP X8, 0x664000
	0x03AB8450 LDR X8, [X8 + 0xD8]
	0x03AB8454 MOV W23, W31
	0x03AB8458 SUB W9, W9, 0x1
	0x03AB845C CMP W9, 0x1
	0x03AB8460 STR W31, [X22]
	0x03AB8464 B.LT 0x3AB852C
	0x03AB8468 MOV W10, W31
	0x03AB846C LDR X11, [X19]
	0x03AB8470 SXTW X12, W10
	0x03AB8474 ADD X12, X12, 0x1
	0x03AB8478 ADD X13, X11, W10, 0x4, SXTW
	0x03AB847C ADD X11, X11, X12, 0x4, LSL
	0x03AB8480 LDR W14, [X13]
	0x03AB8484 LDUR V0, [X13 + 0x4]
	0x03AB8488 LDP W15, W16, [X11], #0x8
	0x03AB848C ADD X13, X13, 0xC
	0x03AB8490 CMP W14, W15
	0x03AB8494 FMOV W15, S0
	0x03AB8498 CSET W17, EQ
	0x03AB849C CMP W15, W16
	0x03AB84A0 CSET W16, EQ
	0x03AB84A4 ANDS W31, W17, W16, 0x0
	0x03AB84A8 ADD W15, W23, 0x1
	0x03AB84AC CSEL X11, X11, X13, NE
	0x03AB84B0 LDR W11, [X11]
	0x03AB84B4 STR W15, [X22]
	0x03AB84B8 LDR X13, [X20]
	0x03AB84BC CSEL W10, W12, W10, NE
	0x03AB84C0 ADD W10, W10, 0x1
	0x03AB84C4 CMP W10, W9
	0x03AB84C8 ADD X12, X13, W23, 0x4, SXTW
	0x03AB84CC STR W14, [X12]
	0x03AB84D0 STUR D0, [X12 + 0x4]
	0x03AB84D4 STR W11, [X12 + 0xC]
	0x03AB84D8 LDR W23, [X22]
	0x03AB84DC B.LT 0x3AB846C
	0x03AB84E0 CMP W23, 0x1
	0x03AB84E4 B.LT 0x3AB852C
	0x03AB84E8 MOV X9, X31
	0x03AB84EC MOV X10, X31
	0x03AB84F0 LDR X11, [X20]
	0x03AB84F4 ADD X12, X11, X9
	0x03AB84F8 LDP W11, W12, [X12 + 0x8]
	0x03AB84FC ADDS W31, W11, 0x1
	0x03AB8500 CCMN W12, 0x1, 0x4, NE
	0x03AB8504 B.EQ 0x3AB851C
	0x03AB8508 LDR X13, [X21]
	0x03AB850C ADD X13, X13, X9
	0x03AB8510 STP W12, W11, [X13]
	0x03AB8514 STP W10, W31, [X13 + 0x8]
	0x03AB8518 LDR W23, [X22]
	0x03AB851C ADD X10, X10, 0x1
	0x03AB8520 CMP X10, W23, SXTW
	0x03AB8524 ADD X9, X9, 0x10
	0x03AB8528 B.LT 0x3AB84F0
	0x03AB852C LDR X0, [X8]
	0x03AB8530 ADRP X24, 0x6A0000
	0x03AB8534 LDP X22, X20, [X20]
	0x03AB8538 LDP X21, X19, [X19]
	0x03AB853C LDR W8, [X0 + 0xE0]
	0x03AB8540 LDR X24, [X24 + 0x228]
	0x03AB8544 CBNZ W8, 0x3AB854C
	0x03AB8548 BL 0x1C16DFC
	0x03AB854C LDR X5, [X24]
	0x03AB8550 MOV X0, X22
	0x03AB8554 MOV X1, X20
	0x03AB8558 MOV X2, X21
	0x03AB855C MOV X3, X19
	0x03AB8560 MOV W4, W23
	0x03AB8564 LDP X20, X19, [X31 + 0x30]
	0x03AB8568 LDP X22, X21, [X31 + 0x20]
	0x03AB856C LDP X24, X23, [X31 + 0x10]
	0x03AB8570 LDR X30, [X31], #0x40
	0x03AB8574 B 0x221E248
	0x03AB8578 CMP W3, 0x1
	0x03AB857C STR W31, [X6]
	0x03AB8580 B.LT 0x3AB85D4
	0x03AB8584 LDR X9, [X5]
	0x03AB8588 MOV X8, X31
	0x03AB858C MOV W10, W3
	0x03AB8590 ADD X11, X1, 0x4
	0x03AB8594 LDUR W12, [X11 - 0x4]
	0x03AB8598 CMP W12, W0
	0x03AB859C B.EQ 0x3AB85AC
	0x03AB85A0 LDR W12, [X11]
	0x03AB85A4 CMP W12, W0
	0x03AB85A8 B.NE 0x3AB85C0
	0x03AB85AC LDRSW X12, [X6]
	0x03AB85B0 ADD W13, W12, 0x1
	0x03AB85B4 STR W13, [X6]
	0x03AB85B8 LDR X13, [X4]
	0x03AB85BC STR W8, [X13, X12, LSL #2]
	0x03AB85C0 STR W31, [X9, X8, LSL #2]
	0x03AB85C4 ADD X8, X8, 0x1
	0x03AB85C8 CMP X10, X8
	0x03AB85CC ADD X11, X11, 0x10
	0x03AB85D0 B.NE 0x3AB8594
	0x03AB85D4 RET
	0x03AB85D8 LDRSW X8, [X4]
	0x03AB85DC LDR X9, [X3]
	0x03AB85E0 CMP W8, 0x1
	0x03AB85E4 B.LT 0x3AB8604
	0x03AB85E8 MOV X10, X31
	0x03AB85EC LDR W11, [X9, X10, LSL #2]
	0x03AB85F0 CMP W11, W0
	0x03AB85F4 B.EQ 0x3AB8640
	0x03AB85F8 ADD X10, X10, 0x1
	0x03AB85FC CMP X10, X8
	0x03AB8600 B.LT 0x3AB85EC
	0x03AB8604 ADD W10, W8, 0x1
	0x03AB8608 MOVZ W11, 0x34
	0x03AB860C STR W10, [X4]
	0x03AB8610 STR W0, [X9, X8, LSL #2]
	0x03AB8614 NOP
	0x03AB8618 SMADDL X8, X0, X11, X1
	0x03AB861C LDR V0, [X5]
	0x03AB8620 LDR V1, [X8 + 0x18]
	0x03AB8624 FADD V0.2S, V0.2S, V1.2S
	0x03AB8628 STR D0, [X5]
	0x03AB862C LDR V1, [X4]
	0x03AB8630 SCVTF S1, S1
	0x03AB8634 UNIMPLEMENTED
	0x00000000 INVALID
	0x03AB863C STR D0, [X6]
	0x03AB8640 RET
	0x03AB8644 SUB X31, X31, 0x80
	0x03AB8648 STR D12, [X31 + 0x30]
	0x03AB864C STP D11, D10, [X31 + 0x38]
	0x03AB8650 STP D9, D8, [X31 + 0x48]
	0x03AB8654 STR X30, [X31 + 0x58]
	0x03AB8658 STP X22, X21, [X31 + 0x60]
	0x03AB865C STP X20, X19, [X31 + 0x70]
	0x03AB8660 MOVZ W8, 0x34
	0x03AB8664 SBFM X9, X0, 0x20, 0x3F
	0x03AB8668 SMADDL X10, X0, X8, X2
	0x03AB866C MADD X8, X9, X8, X2
	0x03AB8670 LDR V3, [X10 + 0x18]
	0x03AB8674 LDR V2, [X8 + 0x18]
	0x03AB8678 ADRP X22, 0x929000
	0x03AB867C LDR V8, [X6]
	0x03AB8680 LDRB W8, [X22 + 0x585]
	0x03AB8684 MOV S10, V3.S[1]
	0x03AB8688 MOV X21, X6
	0x03AB868C MOV X20, X5
	0x03AB8690 MOV X19, X4
	0x03AB8694 MOV S9, V2.S[1]
	0x03AB8698 FMUL S11, S3, V2.S[1]
	0x03AB869C FMUL S12, S10, V2.S[0]
	0x03AB86A0 CBNZ W8, 0x3AB86C0
	0x03AB86A4 ADRP X0, 0x63B000
	0x03AB86A8 LDR X0, [X0 + 0x5A8]
	0x03AB86AC STP V3, V2, [X31 + 0x10]
	0x03AB86B0 BL 0x1C16CF4
	0x03AB86B4 LDP V3, V2, [X31 + 0x10]
	0x03AB86B8 MOVZ W8, 0x1
	0x03AB86BC STRB W8, [X22 + 0x585]
	0x03AB86C0 ADRP X8, 0x63B000
	0x03AB86C4 LDR X8, [X8 + 0x5A8]
	0x03AB86C8 FSUB S4, S11, S12
	0x03AB86CC FSUB V11.2S, V2.2S, V3.2S
	0x03AB86D0 FSUB S9, S9, S10
	0x03AB86D4 LDR X0, [X8]
	0x03AB86D8 LDR W8, [X0 + 0xE0]
	0x03AB86DC CBNZ W8, 0x3AB86F4
	0x03AB86E0 STP V3, V2, [X31 + 0x10]
	0x03AB86E4 STR V4, [X31]
	0x03AB86E8 BL 0x1C16DFC
	0x03AB86EC LDP V4, V3, [X31]
	0x03AB86F0 LDR V2, [X31 + 0x2]
	0x00000000 INVALID
	0x03AB86F8 FMUL S1, S9, S9
	0x03AB86FC FADD S0, S0, S1
	0x03AB8700 FSQRT S0, S0
	0x03AB8704 FADD S0, S8, S0
	0x03AB8708 STR S0, [X21]
	0x03AB870C LDR V0, [X20]
	0x03AB8710 FADD V1.2S, V3.2S, V2.2S
	0x00000000 INVALID
	0x03AB8718 LDP X22, X21, [X31 + 0x60]
	0x03AB871C FADD S0, S4, S0
	0x03AB8720 STR S0, [X20]
	0x03AB8724 LDR V0, [X19]
	0x03AB8728 LDR X30, [X31 + 0x58]
	0x03AB872C LDP D9, D8, [X31 + 0x48]
	0x03AB8730 LDP D11, D10, [X31 + 0x38]
	0x03AB8734 FADD V0.2S, V1.2S, V0.2S
	0x03AB8738 STR D0, [X19]
	0x03AB873C LDP X20, X19, [X31 + 0x70]
	0x03AB8740 LDR V12, [X31 + 0x30]
	0x03AB8744 ADD X31, X31, 0x80
	0x03AB8748 RET
	0x03AB874C LDR X8, [X1]
	0x03AB8750 MOV W12, W31
	0x03AB8754 CMP W5, 0x2
	0x03AB8758 LDRSW X9, [X8]
	0x03AB875C LDR X8, [X0]
	0x03AB8760 UBFM X10, X9, 0x3C, 0x3B
	0x03AB8764 LDR V0, [X3, X10, LSL]
	0x03AB8768 STR X31, [X8 + 0x8]
	0x03AB876C STR D0, [X8]
	0x03AB8770 LDR X11, [X2]
	0x03AB8774 MOVZ W8, 0x1
	0x03AB8778 STR W8, [X11, X9, LSL #2]
	0x03AB877C B.LT 0x3AB8858
	0x03AB8780 MOV W9, W5
	0x03AB8784 MOVZ W10, 0x1
	0x03AB8788 MOVZ W12, 0x1
	0x03AB878C LDR X13, [X1]
	0x03AB8790 LDRSW X14, [X13, X10, LSL #2]
	0x03AB8794 LDR W15, [X11, X14, LSL #2]
	0x03AB8798 CBZ W15, 0x3AB87E8
	0x03AB879C SUB X15, X10, 0x1
	0x03AB87A0 MOV X16, X9
	0x03AB87A4 LDRSW X14, [X13]
	0x03AB87A8 LDR W17, [X11, X14, LSL #2]
	0x03AB87AC CMP W17, 0x1
	0x03AB87B0 B.EQ 0x3AB87D8
	0x03AB87B4 LDR X4, [X0]
	0x03AB87B8 ADD X6, X3, X14, 0x4, LSL
	0x03AB87BC ADD X17, X4, X15, 0x4, LSL
	0x03AB87C0 LDR W5, [X17 + 0x4]
	0x03AB87C4 LDP W17, W6, [X6]
	0x03AB87C8 CMP W17, W5
	0x03AB87CC B.EQ 0x3AB8810
	0x03AB87D0 CMP W6, W5
	0x03AB87D4 B.EQ 0x3AB881C
	0x03AB87D8 SUBS X16, X16, 0x1
	0x03AB87DC ADD X13, X13, 0x4
	0x03AB87E0 B.NE 0x3AB87A4
	0x03AB87E4 B 0x3AB8858
	0x03AB87E8 LDR X16, [X0]
	0x03AB87EC ADD X5, X3, X14, 0x4, LSL
	0x03AB87F0 LDP W15, W5, [X5]
	0x03AB87F4 ADD X17, X16, X10, 0x4, LSL
	0x03AB87F8 LDUR W4, [X17 - 0xC]
	0x03AB87FC CMP W15, W4
	0x03AB8800 B.NE 0x3AB8828
	0x03AB8804 STP W15, W5, [X17]
	0x03AB8808 STR X31, [X17 + 0x8]
	0x03AB880C B 0x3AB883C
	0x03AB8810 ADD X11, X4, X10, 0x4, LSL
	0x03AB8814 STP W17, W6, [X11]
	0x03AB8818 B 0x3AB8838
	0x03AB881C ADD X11, X4, X10, 0x4, LSL
	0x03AB8820 STP W5, W17, [X11]
	0x03AB8824 B 0x3AB8838
	0x03AB8828 CMP W5, W4
	0x03AB882C B.NE 0x3AB879C
	0x03AB8830 ADD X11, X16, X10, 0x4, LSL
	0x03AB8834 STP W4, W15, [X11]
	0x03AB8838 STR X31, [X11 + 0x8]
	0x03AB883C LDR X11, [X2]
	0x03AB8840 ADD X10, X10, 0x1
	0x03AB8844 CMP X10, X9
	0x03AB8848 ADD X12, X11, X14, 0x2, LSL
	0x03AB884C STR W8, [X12]
	0x03AB8850 CSET W12, CC

ISIL:
	001 Subtract X31, X31, 304
	002 Move [X31+208], X29
	003 Move [X31+216], X30
	004 Move [X31+224], X28
	005 Move [X31+232], X27
	006 Move [X31+240], X26
	007 Move [X31+248], X25
	008 Move [X31+256], X24
	009 Move [X31+264], X23
	010 Move [X31+272], X22
	011 Move [X31+280], X21
	012 Move [X31+288], X20
	013 Move [X31+296], X19
	014 Move [X31+80], X7
	015 Move X19, 0x92B000
	016 Move [X31+200], W6
	017 Move [X31+204], W3
	018 Move X28, 0x665000
	019 Move W8, [X19+1159]
	020 Move X28, [X28+216]
	021 Move W21, W6
	022 Move X22, X5
	023 Move X23, X4
	024 Move W25, W3
	025 Move X24, X1
	026 Move W20, W0
	027 Move TEMP, X8
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfEqual {60}
	031 Move X0, 0x69D000
	032 Move X0, [X0+2472]
	033 Call 0x1C17CF4
	034 Move X0, 0x665000
	035 Move X0, [X0+216]
	036 Call 0x1C17CF4
	037 Move X0, 0x666000
	038 Move X0, [X0+328]
	039 Call 0x1C17CF4
	040 Move X0, 0x69D000
	041 Move X0, [X0+2488]
	042 Call 0x1C17CF4
	043 Move X0, 0x6A1000
	044 Move X0, [X0+496]
	045 Call 0x1C17CF4
	046 Move X0, 0x69D000
	047 Move X0, [X0+1320]
	048 Call 0x1C17CF4
	049 Move X0, 0x666000
	050 Move X0, [X0+312]
	051 Call 0x1C17CF4
	052 Move X0, 0x6A1000
	053 Move X0, [X0+504]
	054 Call 0x1C17CF4
	055 Move X0, 0x69D000
	056 Move X0, [X0+2504]
	057 Call 0x1C17CF4
	058 Move W8, 1
	059 Move [X19+1159], W8
	060 Move X0, [X28]
	061 Move [X31+184], X31
	062 Move [X31+192], X31
	063 Move [X31+168], X31
	064 Move [X31+176], X31
	065 Move [X31+152], X31
	066 Move [X31+160], X31
	067 Move [X31+136], X31
	068 Move [X31+144], X31
	069 Move [X31+120], X31
	070 Move [X31+128], X31
	071 Move [X31+104], X31
	072 Move [X31+112], X31
	073 Move [X31+96], X31
	074 Move [X31+92], W31
	075 Move X27, 0x666000
	076 Move X26, 0x69D000
	077 Move X19, 0x6A1000
	078 Move W8, [X0+224]
	079 Move X27, [X27+312]
	080 Move X26, [X26+1320]
	081 Move X19, [X19+504]
	082 Compare W8, 0
	083 JumpIfNotEqual {86}
	084 Call 0x1C17DFC
	085 Move X0, [X28]
	086 Move X8, [X0+184]
	087 Move X4, [X27]
	088 Add X0, X31, 184
	089 Move W3, 1
	090 Move W1, [X8+4]
	091 Move W2, W20
	092 Call NativeArray`1<Int32>..ctor, X0, X1, X2, X3
	093 Move X8, [X28]
	094 Move X4, [X26]
	095 Add X0, X31, 168
	096 Move W3, 1
	097 Move X8, [X8+184]
	098 Move W2, W20
	099 Move W1, [X8+4]
	100 Call NativeArray`1<int2>..ctor, X0, X1, X2, X3
	101 Move X8, [X28]
	102 Move X4, [X26]
	103 Add X0, X31, 152
	104 Move W3, 1
	105 Move X8, [X8+184]
	106 Move W2, W20
	107 Move W1, [X8+4]
	108 Call NativeArray`1<int2>..ctor, X0, X1, X2, X3
	109 Move X8, [X28]
	110 Move X4, [X26]
	111 Add X0, X31, 136
	112 Move W3, 1
	113 Move X8, [X8+184]
	114 Move W2, W20
	115 Move W1, [X8+4]
	116 Call NativeArray`1<int2>..ctor, X0, X1, X2, X3
	117 Move X4, [X19]
	118 Move W26, W25
	119 ShiftRight W26, 29
	120 And W26, W26, 0xFFFFFFF
	121 Add X0, X31, 120
	122 Move W3, 1
	123 Move W1, W26
	124 Move W2, W20
	125 Call NativeArray`1<double2>..ctor, X0, X1, X2, X3
	126 Move X4, [X19]
	127 Add X0, X31, 104
	128 Move W3, 1
	129 Move W1, W26
	130 Move W2, W20
	131 Call NativeArray`1<double2>..ctor, X0, X1, X2, X3
	132 NotImplemented "Instruction CMP not yet implemented."
	133 Move W10, 0x4000
	134 NotImplemented "Instruction MOVK not yet implemented."
	135 Move X8, X31
	136 Move W9, W25
	137 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	138 Move V1, [X24]
	139 Move X10, [X31+120]
	140 NotImplemented "Instruction INVALID not yet implemented."
	141 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	142 Move [X10], V1
	143 Add X8, X8, 1
	144 NotImplemented "Instruction CMP not yet implemented."
	145 Move X0, [X28]
	146 Move X19, 0x69D000
	147 Move X29, 0x69D000
	148 Move X25, [X31+168]
	149 Move X24, [X31+176]
	150 Move W8, [X0+224]
	151 Move X19, [X19+2472]
	152 Move X29, [X29+2504]
	153 Compare W8, 0
	154 JumpIfNotEqual {156}
	155 Call 0x1C17DFC
	156 Move X5, [X19]
	157 Move X0, X23
	158 Move X1, X22
	159 Move X2, X25
	160 Move X3, X24
	161 Move W4, W21
	162 Call ModuleHandle.Copy, X0, X1, X2
	163 Move X0, [X29]
	164 Move X23, [X31+184]
	165 Move X22, [X31+192]
	166 Move W8, [X0+224]
	167 Compare W8, 0
	168 JumpIfNotEqual {170}
	169 Call 0x1C17DFC
	170 Move X19, 0x69D000
	171 Move X25, 0x6A1000
	172 Move X24, 0x666000
	173 Move X19, [X19+2488]
	174 Move X25, [X25+496]
	175 Move X24, [X24+328]
	176 Add X0, X31, 168
	177 Add X1, X31, 200
	178 Move X2, X23
	179 Move X3, X22
	180 Move W4, W31
	181 Call PlanarGraph.RemoveDuplicateEdges, X0, X1, X2, X3
	182 Subtract W9, W21, 1
	183 NotImplemented "Instruction CMP not yet implemented."
	184 And W21, W9, W9
	185 Move X8, [X31+312]
	186 Move X10, [X31+320]
	187 Move W19, W9
	188 Move [X31+76], W21
	189 Move [X31+64], X8
	190 Move X8, [X31+304]
	191 Move [X31+44], W9
	192 Move [X31+48], X10
	193 Move [X31+56], X8
	194 Move X0, [X29]
	195 Move [X31+100], W31
	196 Move X22, [X31+168]
	197 Move X23, [X31+176]
	198 Move W21, [X31+200]
	199 Move W8, [X0+224]
	200 Move X24, [X31+120]
	201 Move X25, [X31+128]
	202 Compare W8, 0
	203 JumpIfNotEqual {205}
	204 Call 0x1C17DFC
	205 Add X6, X31, 136
	206 Add X7, X31, 104
	207 Add X8, X31, 100
	208 Move X0, X22
	209 Move X1, X23
	210 Move W2, W21
	211 Move X3, X24
	212 Move X4, X25
	213 Move [X31], X8
	214 Call PlanarGraph.CalculateEdgeIntersections, X0, X1, X2, X3, X4, X5, X6
	215 Move TEMP, X0
	216 And TEMP, TEMP, 1
	217 Compare TEMP, 1
	218 JumpIfNotEqual {307}
	219 Move X0, [X29]
	220 Move [X31+96], W31
	221 Move X22, [X31+168]
	222 Move X23, [X31+176]
	223 Move X28, [X31+120]
	224 Move X27, [X31+128]
	225 Move W25, [X31+204]
	226 Move W8, [X0+224]
	227 Move X26, [X31+152]
	228 Move X24, [X31+160]
	229 Compare W8, 0
	230 JumpIfNotEqual {232}
	231 Call 0x1C17DFC
	232 Add X8, X31, 96
	233 Move X0, X22
	234 Move X1, X23
	235 Move W2, W21
	236 Move X3, X28
	237 Move X4, X27
	238 Move W5, W25
	239 Move X6, X26
	240 Move X7, X24
	241 Move [X31], X8
	242 Call PlanarGraph.CalculateTJunctions, X0, X1, X2, X3, X4, X5
	243 Move TEMP, X0
	244 And TEMP, TEMP, 1
	245 Compare TEMP, 1
	246 JumpIfNotEqual {307}
	247 Move X0, [X29]
	248 Move X22, [X31+136]
	249 Move X21, [X31+144]
	250 Move X24, [X31+104]
	251 Move X25, [X31+112]
	252 Move W23, [X31+100]
	253 Move W8, [X0+224]
	254 Compare W8, 0
	255 JumpIfNotEqual {257}
	256 Call 0x1C17DFC
	257 Add X0, X31, 120
	258 Add X1, X31, 204
	259 Add X2, X31, 168
	260 Add X3, X31, 200
	261 Add X4, X31, 152
	262 Add X5, X31, 96
	263 Move X6, X22
	264 Move X7, X21
	265 Move [X31+16], W23
	266 Move [X31], X24
	267 Move [X31+8], X25
	268 Call PlanarGraph.CutEdges, X0, X1, X2, X3, X4, X5, X6, X7, X8
	269 Move TEMP, X0
	270 And TEMP, TEMP, 1
	271 Compare TEMP, 1
	272 JumpIfNotEqual {307}
	273 Move X0, [X29]
	274 Move [X31+92], W31
	275 Move W8, [X0+224]
	276 Compare W8, 0
	277 JumpIfNotEqual {279}
	278 Call 0x1C17DFC
	279 Add X0, X31, 120
	280 Add X1, X31, 204
	281 Add X2, X31, 184
	282 Add X3, X31, 92
	283 Move W4, W20
	284 Call PlanarGraph.RemoveDuplicatePoints, X0, X1, X2, X3, X4
	285 Move X2, [X31+184]
	286 Move X3, [X31+192]
	287 Move W4, [X31+92]
	288 Add X0, X31, 168
	289 Add X1, X31, 200
	290 Call PlanarGraph.RemoveDuplicateEdges, X0, X1, X2, X3
	291 Move W8, [X31+96]
	292 Or W8, W8, W23
	293 Compare W8, 0
	294 JumpIfEqual {350}
	295 Subtract W19, W19, 1
	296 NotImplemented "Instruction CMP not yet implemented."
	297 Move W8, [X31+44]
	298 NotImplemented "Instruction CMP not yet implemented."
	299 Move X8, 0x665000
	300 Move X8, [X8+216]
	301 Move X19, 0x69D000
	302 Move X24, 0x666000
	303 Move X25, 0x6A1000
	304 Move X19, [X19+2488]
	305 Move X24, [X24+328]
	306 Move W21, [X31+76]
	307 Move W21, W19
	308 Move X19, 0x69D000
	309 Move X24, 0x666000
	310 Move X25, 0x6A1000
	311 Move X19, [X19+2488]
	312 Move X24, [X24+328]
	313 Move X25, [X25+496]
	314 Move W20, W31
	315 Move X1, [X19]
	316 Add X0, X31, 168
	317 Call NativeArray`1<int2>.Dispose, X0
	318 Move X1, [X25]
	319 Add X0, X31, 120
	320 Call NativeArray`1<double2>.Dispose, X0
	321 Move X1, [X25]
	322 Add X0, X31, 104
	323 Call NativeArray`1<double2>.Dispose, X0
	324 Move X1, [X24]
	325 Add X0, X31, 184
	326 Call NativeArray`1<Int32>.Dispose, X0
	327 Move X1, [X19]
	328 Add X0, X31, 152
	329 Call NativeArray`1<int2>.Dispose, X0
	330 Move X1, [X19]
	331 Add X0, X31, 136
	332 Call NativeArray`1<int2>.Dispose, X0
	333 NotImplemented "Instruction CMP not yet implemented."
	334 NotImplemented "Instruction CSET not yet implemented."
	335 And W0, W20, W8
	336 Move X20, [X31+288]
	337 Move X19, [X31+296]
	338 Move X22, [X31+272]
	339 Move X21, [X31+280]
	340 Move X24, [X31+256]
	341 Move X23, [X31+264]
	342 Move X26, [X31+240]
	343 Move X25, [X31+248]
	344 Move X28, [X31+224]
	345 Move X27, [X31+232]
	346 Move X29, [X31+208]
	347 Move X30, [X31+216]
	348 Add X31, X31, 304
	349 Return X0
	350 Move [X31+76], W19
	351 Move X8, 0x665000
	352 Move X8, [X8+216]
	353 Move W20, [X31+200]
	354 Move W19, [X31+204]
	355 Move X9, [X31+48]
	356 Move X25, 0x6A1000
	357 Move [X9], W20
	358 Move X9, [X31+56]
	359 Move [X9], W19
	360 Move X0, [X8]
	361 Move X9, [X31+64]
	362 Move X24, [X31+168]
	363 Move X23, [X31+176]
	364 Move W8, [X0+224]
	365 Move X22, [X9]
	366 Move X21, [X9+8]
	367 Move X25, [X25+496]
	368 Compare W8, 0
	369 JumpIfNotEqual {371}
	370 Call 0x1C17DFC
	371 Move X8, 0x69D000
	372 Move X8, [X8+2472]
	373 Move X0, X24
	374 Move X1, X23
	375 Move X2, X22
	376 Move X5, [X8]
	377 Move X3, X21
	378 Move W4, W20
	379 Call ModuleHandle.Copy, X0, X1, X2
	380 NotImplemented "Instruction CMP not yet implemented."
	381 Move X24, 0x666000
	382 Move X10, [X31+80]
	383 Move X24, [X24+328]
	384 Move W21, [X31+76]
	385 Move X9, 0x8800
	386 NotImplemented "Instruction MOVK not yet implemented."
	387 Move X8, X31
	388 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	389 Move X9, [X31+120]
	390 Move V1, [X9]
	391 Move X9, [X10]
	392 NotImplemented "Instruction INVALID not yet implemented."
	393 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	394 Move [X9], D1
	395 Add X8, X8, 1
	396 NotImplemented "Instruction CMP not yet implemented."
	397 Move X19, 0x69D000
	398 Move X19, [X19+2488]
	399 Move X19, 0x69D000
	400 Move X24, 0x666000
	401 Move X19, [X19+2488]
	402 Move X24, [X24+328]
	403 Move W21, [X31+76]
	404 Move W20, 1

Method: System.Void .cctor()

Disassembly:
	0x03AB8854 B.NE 0x3AB878C
	0x03AB8858 ORN W8, W31, W12, 0x0
	0x03AB885C AND W0, W8, 0x1
	0x03AB8860 RET
	0x03AB8864 SUB X31, X31, 0x1A0
	0x03AB8868 STP D9, D8, [X31 + 0x130]
	0x03AB886C STP X29, X30, [X31 + 0x140]
	0x03AB8870 STP X28, X27, [X31 + 0x150]
	0x03AB8874 STP X26, X25, [X31 + 0x160]
	0x03AB8878 STP X24, X23, [X31 + 0x170]
	0x03AB887C STP X22, X21, [X31 + 0x180]
	0x03AB8880 STP X20, X19, [X31 + 0x190]
	0x03AB8884 STR W5, [X31 + 0x5C]
	0x03AB8888 STP X3, X4, [X31 + 0x48]
	0x03AB888C STR W2, [X31 + 0x44]
	0x03AB8890 STR X1, [X31 + 0x70]
	0x03AB8894 ADRP X22, 0x92A000
	0x03AB8898 ADRP X20, 0x6A0000
	0x03AB889C ADRP X27, 0x6A0000
	0x03AB88A0 ADRP X21, 0x665000
	0x03AB88A4 ADRP X29, 0x664000
	0x03AB88A8 LDP X23, X26, [X31 + 0x1A0]
	0x03AB88AC LDRB W8, [X22 + 0x48D]
	0x03AB88B0 LDR X20, [X20 + 0x210]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x92B000
	005 Move X20, 0x69D000
	006 Move W8, [X19+1160]
	007 Move X20, [X20+2504]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x69D000
	013 Move X0, [X0+2504]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+1160], W8
	017 Move X8, [X20]
	018 Move X9, 0x68F1
	019 NotImplemented "Instruction MOVK not yet implemented."
	020 Move X20, [X31+16]
	021 Move X19, [X31+24]
	022 Move X8, [X8+184]
	023 NotImplemented "Instruction MOVK not yet implemented."
	024 NotImplemented "Instruction MOVK not yet implemented."
	025 Move W10, 4
	026 Move [X8], X9
	027 Move [X8+8], W10
	028 Move X30, [X31+32]
	029 Return 

