Type: UnityEngine.Rendering.Universal.Tonemapping

Method: System.Boolean IsActive()

Disassembly:
	0x03A5B804 MOV X8, X0
	0x03A5B808 LDR X0, [X25]
	0x03A5B80C LDR X22, [X8]
	0x03A5B810 LDR W9, [X0 + 0xE0]
	0x03A5B814 CBNZ W9, 0x3A5B81C
	0x03A5B818 BL 0x1C16DFC
	0x03A5B81C MOVN W4, 0x0
	0x03A5B820 MOVN W5, 0x0
	0x03A5B824 MOV X0, X23
	0x03A5B828 MOV X1, X24
	0x03A5B82C MOV X2, X22
	0x03A5B830 MOV W3, W31

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+56]
	003 Compare X0, 0
	004 JumpIfEqual {13}
	005 Move X8, [X0]
	006 Move X9, [X8+536]
	007 Move X1, [X8+544]
	008 NotImplemented "Instruction BLR not yet implemented."
	009 NotImplemented "Instruction CMP not yet implemented."
	010 NotImplemented "Instruction CSET not yet implemented."
	011 Move X30, [X31+16]
	012 Return X0
	013 Call 0x1C17F20

Method: System.Boolean IsTileCompatible()

Disassembly:
	0x03A5B834 MOV X6, X31
	0x03A5B838 BL 0x39E7980

ISIL:
	001 Move W0, 1
	002 Return X0

Method: System.Void .ctor()

Disassembly:
	0x03A5B83C B 0x3A5B8A4
	0x03A5B840 LDP V0, V1, [X31 + 0xB0]
	0x03A5B844 LDR X8, [X31 + 0xD0]
	0x03A5B848 ADD X0, X31, 0x0
	0x03A5B84C MOV X1, X31
	0x03A5B850 STP V0, V1, [X31]
	0x03A5B854 STR X8, [X31 + 0x20]
	0x03A5B858 BL 0x39D4528
	0x03A5B85C ADRP X8, 0x6F8000
	0x03A5B860 LDR X8, [X8 + 0x98]
	0x03A5B864 LDR X0, [X25]
	0x03A5B868 LDR X23, [X21]
	0x03A5B86C LDR X8, [X8]
	0x03A5B870 LDR W9, [X0 + 0xE0]
	0x03A5B874 LDR X8, [X8 + 0xB8]
	0x03A5B878 LDR X22, [X8]
	0x03A5B87C CBNZ W9, 0x3A5B884
	0x03A5B880 BL 0x1C16DFC
	0x03A5B884 MOVN W4, 0x0
	0x03A5B888 MOVN W5, 0x0
	0x03A5B88C MOV X0, X23
	0x03A5B890 MOV X1, X22
	0x03A5B894 MOV W2, W31
	0x03A5B898 MOV W3, W31
	0x03A5B89C MOV X6, X31
	0x03A5B8A0 BL 0x39E2DCC
	0x03A5B8A4 ADRP X8, 0x6F9000
	0x03A5B8A8 LDR X8, [X8 + 0xA8]
	0x03A5B8AC LDR X21, [X21]
	0x03A5B8B0 MOVZ W0, 0xC
	0x03A5B8B4 LDR X1, [X8]
	0x03A5B8B8 BL 0x2235BC0
	0x03A5B8BC MOV X2, X0
	0x03A5B8C0 ADD X0, X31, 0xE8
	0x03A5B8C4 MOV X1, X21
	0x03A5B8C8 MOV X3, X31
	0x03A5B8CC BL 0x39B1DB0
	0x03A5B8D0 LDR X1, [X20 + 0xE0]
	0x03A5B8D4 MOV X0, X19
	0x03A5B8D8 BL 0x3A5B3A4
	0x03A5B8DC ADD X0, X31, 0xE8
	0x03A5B8E0 MOV X1, X31
	0x03A5B8E4 BL 0x39B1DB4
	0x03A5B8E8 LDP X20, X19, [X31 + 0x120]
	0x03A5B8EC LDP X22, X21, [X31 + 0x110]
	0x03A5B8F0 LDP X24, X23, [X31 + 0x100]
	0x03A5B8F4 LDP X30, X25, [X31 + 0xF0]
	0x03A5B8F8 LDR X29, [X31 + 0xE0]
	0x03A5B8FC ADD X31, X31, 0x130
	0x03A5B900 RET
	0x03A5B904 BL 0x1C16F20
	0x03A5B908 CMP W1, 0x1
	0x03A5B90C MOV X20, X0
	0x03A5B910 B.NE 0x3A5B93C
	0x03A5B914 MOV X0, X20
	0x03A5B918 BL 0x3EB1AD0
	0x03A5B91C LDR X19, [X0]
	0x03A5B920 BL 0x3EB1AE0
	0x03A5B924 ADD X0, X31, 0xE8
	0x03A5B928 MOV X1, X31
	0x03A5B92C BL 0x39B1DB4
	0x03A5B930 CBZ X19, 0x3A5B8E8
	0x03A5B934 MOV X0, X19
	0x03A5B938 BL 0x1C16F18
	0x03A5B93C MOV X19, X31
	0x03A5B940 B 0x3A5B948
	0x03A5B944 MOV X20, X0
	0x03A5B948 ADD X0, X31, 0xE8
	0x03A5B94C MOV X1, X31
	0x03A5B950 BL 0x39B1DB4
	0x03A5B954 CBNZ X19, 0x3A5B960
	0x03A5B958 MOV X0, X20
	0x03A5B95C BL 0x1D2C690
	0x03A5B960 MOV X0, X19
	0x03A5B964 BL 0x1C16F18
	0x03A5B968 BL 0x1990590
	0x03A5B96C SUB X31, X31, 0x1B0
	0x03A5B970 STR D8, [X31 + 0x160]
	0x03A5B974 STP X29, X30, [X31 + 0x170]
	0x03A5B978 STP X24, X23, [X31 + 0x180]
	0x03A5B97C STP X22, X21, [X31 + 0x190]
	0x03A5B980 STP X20, X19, [X31 + 0x1A0]
	0x03A5B984 ADRP X24, 0x987000
	0x03A5B988 LDRB W8, [X24 + 0x21A]
	0x03A5B98C MOV X20, X4
	0x03A5B990 MOV X19, X3
	0x03A5B994 MOV W22, W2
	0x03A5B998 MOV X21, X1
	0x03A5B99C MOV X23, X0
	0x03A5B9A0 TBNZ X8, 0x0, 0x3A5BA18
	0x03A5B9A4 ADRP X0, 0x6FB000
	0x03A5B9A8 LDR X0, [X0 + 0x3D8]
	0x03A5B9AC BL 0x1C16CF4
	0x03A5B9B0 ADRP X0, 0x6FB000
	0x03A5B9B4 LDR X0, [X0 + 0x3E0]
	0x03A5B9B8 BL 0x1C16CF4
	0x03A5B9BC ADRP X0, 0x6FB000
	0x03A5B9C0 LDR X0, [X0 + 0x3E8]
	0x03A5B9C4 BL 0x1C16CF4
	0x03A5B9C8 ADRP X0, 0x6FB000
	0x03A5B9CC LDR X0, [X0 + 0x3F0]
	0x03A5B9D0 BL 0x1C16CF4
	0x03A5B9D4 ADRP X0, 0x6FB000
	0x03A5B9D8 LDR X0, [X0 + 0x3F8]
	0x03A5B9DC BL 0x1C16CF4
	0x03A5B9E0 ADRP X0, 0x6F8000
	0x03A5B9E4 LDR X0, [X0 + 0xFF8]
	0x03A5B9E8 BL 0x1C16CF4
	0x03A5B9EC ADRP X0, 0x6FB000
	0x03A5B9F0 LDR X0, [X0 + 0x400]
	0x03A5B9F4 BL 0x1C16CF4
	0x03A5B9F8 ADRP X0, 0x6FB000
	0x03A5B9FC LDR X0, [X0 + 0x3C8]
	0x03A5BA00 BL 0x1C16CF4
	0x03A5BA04 ADRP X0, 0x6FB000
	0x03A5BA08 LDR X0, [X0 + 0x3D0]
	0x03A5BA0C BL 0x1C16CF4
	0x03A5BA10 MOVZ W8, 0x1
	0x03A5BA14 STRB W8, [X24 + 0x21A]
	0x03A5BA18 MOVI V0.2D, 0x0
	0x03A5BA1C STR X31, [X31 + 0x168]
	0x03A5BA20 STR W31, [X31 + 0x130]
	0x03A5BA24 STR W31, [X31 + 0xF0]
	0x03A5BA28 STP V0, V0, [X31 + 0x140]
	0x03A5BA2C STP V0, V0, [X31 + 0x110]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X20, 0x988000
	010 Move X25, 0x6FC000
	011 Move X24, 0x6FC000
	012 Move X23, 0x6FC000
	013 Move X21, 0x6FC000
	014 Move X22, 0x6F7000
	015 Move W8, [X20+525]
	016 Move X25, [X25+872]
	017 Move X24, [X24+880]
	018 Move X23, [X23+888]
	019 Move X21, [X21+168]
	020 Move X22, [X22+1432]
	021 Move X19, X0
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {43}
	026 Move X0, 0x6F7000
	027 Move X0, [X0+1432]
	028 Call 0x1C17CF4
	029 Move X0, 0x6FC000
	030 Move X0, [X0+168]
	031 Call 0x1C17CF4
	032 Move X0, 0x6FC000
	033 Move X0, [X0+888]
	034 Call 0x1C17CF4
	035 Move X0, 0x6FC000
	036 Move X0, [X0+880]
	037 Call 0x1C17CF4
	038 Move X0, 0x6FC000
	039 Move X0, [X0+872]
	040 Call 0x1C17CF4
	041 Move W8, 1
	042 Move [X20+525], W8
	043 Move X0, [X25]
	044 Call 0x1C17F10
	045 Move W1, W31
	046 Move W2, W31
	047 Move X20, X0
	048 Call TonemappingModeParameter..ctor, X0, X1, X2
	049 Move [X19+56], X20
	050 Move X0, [X24]
	051 Call 0x1C17F10
	052 Move W1, 2
	053 Move W2, W31
	054 Move X20, X0
	055 Call NeutralRangeReductionModeParameter..ctor, X0, X1, X2
	056 Move [X19+64], X20
	057 Move X0, [X23]
	058 Call 0x1C17F10
	059 Move W1, 3
	060 Move W2, W31
	061 Move X20, X0
	062 Call HDRACESPresetParameter..ctor, X0, X1, X2
	063 Move [X19+72], X20
	064 Move X0, [X21]
	065 Call 0x1C17F10
	066 Move S0, W31
	067 Move S1, W31
	068 Move S2, 1
	069 Move W1, W31
	070 Move X2, X31
	071 Move X20, X0
	072 Call ClampedFloatParameter..ctor, X0, V0, V1, V2, X1
	073 Move [X19+80], X20
	074 Move X0, [X22]
	075 Call 0x1C17F10
	076 Move W1, W31
	077 Move W2, W31
	078 Move X3, X31
	079 Move X20, X0
	080 Call BoolParameter..ctor, X0, X1, X2
	081 Move [X19+88], X20
	082 Move X0, [X21]
	083 Call 0x1C17F10
	084 Move W8, 0x43960000
	085 Move W9, 0x43C80000
	086 Move S1, W31
	087 Move S0, W8
	088 Move S2, W9
	089 Move W1, W31
	090 Move X2, X31
	091 Move X20, X0
	092 Call ClampedFloatParameter..ctor, X0, V0, V1, V2, X1
	093 Move [X19+96], X20
	094 Move X0, [X22]
	095 Call 0x1C17F10
	096 Move W1, 1
	097 Move W2, W31
	098 Move X3, X31
	099 Move X20, X0
	100 Call BoolParameter..ctor, X0, X1, X2
	101 Move [X19+104], X20
	102 Move X0, [X21]
	103 Call 0x1C17F10
	104 Move X8, -49741824
	105 Move V0, [X8+1036]
	106 Move W8, 0x42480000
	107 Move S1, W31
	108 Move S2, W8
	109 Move W1, W31
	110 Move X2, X31
	111 Move X20, X0
	112 Call ClampedFloatParameter..ctor, X0, V0, V1, V2, X1
	113 Move [X19+112], X20
	114 Move X0, [X21]
	115 Call 0x1C17F10
	116 Move X8, -49741824
	117 Move V2, [X8+688]
	118 Move W8, 0x447A0000
	119 Move S1, W31
	120 Move S0, W8
	121 Move W1, W31
	122 Move X2, X31
	123 Move X20, X0
	124 Call ClampedFloatParameter..ctor, X0, V0, V1, V2, X1
	125 Move [X19+120], X20
	126 Move X0, X19
	127 Move X20, [X31+48]
	128 Move X19, [X31+56]
	129 Move X22, [X31+32]
	130 Move X21, [X31+40]
	131 Move X24, [X31+16]
	132 Move X23, [X31+24]
	133 Move X1, X31
	134 Move X30, [X31+64]
	135 Move X25, [X31+72]
	136 Call VolumeComponent..ctor, X0
	137 Return 

