Type: UnityEngine.Rendering.Universal.ShadowRendering

Method: System.UInt32 get_maxTextureCount()

Disassembly:
	0x03A29258 ADRP X0, 0x72B000
	0x03A2925C LDR X0, [X0 + 0x5F0]
	0x03A29260 BL 0x1C16CF4
	0x03A29264 MOVZ W8, 0x1
	0x03A29268 STRB W8, [X21 + 0xE]
	0x03A2926C ADRP X8, 0x72B000
	0x03A29270 LDR X8, [X8 + 0x5F0]
	0x03A29274 LDR X8, [X8]
	0x03A29278 LDR X8, [X8 + 0xB8]
	0x03A2927C LDR X0, [X8]
	0x03A29280 CBZ X0, 0x3A29374
	0x03A29284 LDR W8, [X0 + 0x18]
	0x03A29288 CMP W8, 0x1
	0x03A2928C B.LT 0x3A29374
	0x03A29290 STR X22, [X31 + 0x28]
	0x03A29294 ADRP X21, 0x72B000
	0x03A29298 ADRP X22, 0x6CA000
	0x03A2929C LDR X21, [X21 + 0xAC8]
	0x03A292A0 LDR X22, [X22 + 0x598]
	0x03A292A4 MOV W25, W31
	0x03A292A8 MOV W24, W31
	0x03A292AC ADRP X8, 0x72B000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x9BA000
	005 Move X19, 0x72C000
	006 Move W8, [X20+59]
	007 Move X19, [X19+1696]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x72C000
	013 Move X0, [X0+1696]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+59], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {23}
	021 Call 0x1C17DFC
	022 Move X0, [X19]
	023 Move X8, [X0+184]
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move W0, [X8+120]
	027 Move X30, [X31+32]
	028 Return X0

Method: System.Void set_maxTextureCount(System.UInt32 value)

Disassembly:
	0x03A292B0 LDR X8, [X8 + 0xAF8]
	0x03A292B4 LDR X2, [X8]
	0x03A292B8 MOV W1, W24
	0x03A292BC MOV X20, X0
	0x03A292C0 BL 0x301BCCC
	0x03A292C4 CBZ X0, 0x3A29BC8
	0x03A292C8 LDR X27, [X0 + 0x28]
	0x03A292CC CBZ X27, 0x3A29354
	0x03A292D0 LDR W8, [X27 + 0x18]
	0x03A292D4 CMP W8, 0x1
	0x03A292D8 B.LT 0x3A29354
	0x03A292DC MOV W28, W31
	0x03A292E0 LDR X2, [X21]
	0x03A292E4 MOV X0, X27
	0x03A292E8 MOV W1, W28
	0x03A292EC BL 0x301BCCC
	0x03A292F0 MOV X29, X0
	0x03A292F4 LDR X0, [X22]
	0x03A292F8 LDR W8, [X0 + 0xE0]
	0x03A292FC CBNZ W8, 0x3A29304
	0x03A29300 BL 0x1C16DFC
	0x03A29304 MOV X0, X29
	0x03A29308 MOV X1, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x9BA000
	006 Move X20, 0x72C000
	007 Move W8, [X21+60]
	008 Move X20, [X20+1696]
	009 Move W19, W0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x72C000
	015 Move X0, [X0+1696]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+60], W8
	019 Move X0, [X20]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {25}
	023 Call 0x1C17DFC
	024 Move X0, [X20]
	025 Move X8, [X0+184]
	026 Move [X8+120], W19
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]
	031 Return 

Method: System.Void InitializeBudget(System.UInt32 maxTextureCount)

Disassembly:
	0x03A2930C MOV X2, X31
	0x03A29310 BL 0x3C354F8
	0x03A29314 TBZ X0, 0x0, 0x3A2933C
	0x03A29318 CBZ X29, 0x3A29BB8
	0x03A2931C MOV X0, X29
	0x03A29320 MOV X1, X19
	0x03A29324 BL 0x3A268E4
	0x03A29328 TBZ X0, 0x0, 0x3A2933C
	0x03A2932C LDR W1, [X31 + 0x23C]
	0x03A29330 MOV X0, X29
	0x03A29334 BL 0x3A2693C
	0x03A29338 TBNZ X0, 0x0, 0x3A29350
	0x03A2933C LDR W8, [X27 + 0x18]
	0x03A29340 ADD W28, W28, 0x1
	0x03A29344 CMP W28, W8
	0x03A29348 B.LT 0x3A292E0
	0x03A2934C B 0x3A29354
	0x03A29350 MOVZ W25, 0x1
	0x03A29354 LDR W8, [X20 + 0x18]
	0x03A29358 ADD W24, W24, 0x1
	0x03A2935C MOV X0, X20
	0x03A29360 CMP W24, W8
	0x03A29364 B.LT 0x3A292AC
	0x03A29368 TBNZ X25, 0x0, 0x3A2937C
	0x03A2936C AND W19, W25, 0x1
	0x03A29370 B 0x3A29B84
	0x03A29374 MOV W19, W31
	0x03A29378 B 0x3A29B84
	0x03A2937C LDR X8, [X23 + 0x20]
	0x03A29380 LDP V1, V0, [X23]
	0x03A29384 LDR X25, [X31 + 0x28]
	0x03A29388 STR X8, [X31 + 0x1D0]
	0x03A2938C STP V1, V0, [X31 + 0x1B0]
	0x03A29390 CBZ X25, 0x3A29BD0
	0x03A29394 LDP V0, V1, [X31 + 0x1B0]
	0x03A29398 LDR X8, [X31 + 0x1D0]
	0x03A2939C STP V0, V1, [X31 + 0x180]
	0x03A293A0 STR X8, [X31 + 0x1A0]
	0x03A293A4 ADD X1, X31, 0x180
	0x03A293A8 MOVZ W2, 0x2
	0x03A293AC MOVZ W4, 0x2
	0x03A293B0 MOVZ W5, 0x3
	0x03A293B4 MOV X0, X25
	0x03A293B8 MOV W3, W31
	0x03A293BC MOV X6, X31
	0x03A293C0 BL 0x3C4DBAC
	0x03A293C4 ADRP X23, 0x72B000
	0x03A293C8 LDR X23, [X23 + 0x6A0]
	0x03A293CC LDR X24, [X31 + 0x8]
	0x03A293D0 LDR X0, [X23]
	0x03A293D4 LDR W8, [X0 + 0xE0]
	0x03A293D8 CBNZ W8, 0x3A293E4
	0x03A293DC BL 0x1C16DFC
	0x03A293E0 LDR X0, [X23]
	0x03A293E4 LDR X8, [X0 + 0xB8]
	0x03A293E8 LDR X8, [X8 + 0x70]
	0x03A293EC CBZ X8, 0x3A29BD4
	0x03A293F0 LDR W9, [X8 + 0x18]
	0x03A293F4 CMP W9, W24
	0x03A293F8 B.LS 0x3A29BD8
	0x03A293FC MOV X23, X24
	0x03A29400 SXTW X24, W24
	0x03A29404 ADD X8, X8, X24, 0x3, LSL
	0x03A29408 LDR X2, [X8 + 0x20]
	0x03A2940C STRB W31, [X31 + 0x178]
	0x03A29410 ADD X0, X31, 0x178
	0x03A29414 MOV X1, X25
	0x03A29418 MOV X3, X31
	0x03A2941C BL 0x39B1DB0
	0x03A29420 LDRB W8, [X31 + 0x178]
	0x03A29424 STRB W8, [X31 + 0x228]
	0x03A29428 CBZ W23, 0x3A29454
	0x03A2942C FMOV S0, W31
	0x03A29430 FMOV S1, W31
	0x03A29434 FMOV S2, W31
	0x03A29438 FMOV S3, W31
	0x03A2943C MOVZ W1, 0x1
	0x03A29440 MOV X0, X25
	0x03A29444 MOV W2, W31
	0x03A29448 MOV X3, X31
	0x03A2944C BL 0x3C4CCDC
	0x03A29450 B 0x3A29478
	0x03A29454 FMOV S0, W31
	0x03A29458 FMOV S1, W31
	0x03A2945C FMOV S2, W31
	0x03A29460 FMOV S3, W31
	0x03A29464 MOVZ W1, 0x1
	0x03A29468 MOVZ W2, 0x1
	0x03A2946C MOV X0, X25
	0x03A29470 MOV X3, X31
	0x03A29474 BL 0x3C4CCDC
	0x03A29478 CBZ X19, 0x3A29BDC
	0x03A2947C ADRP X8, 0x72B000
	0x03A29480 LDR X8, [X8 + 0x6A0]
	0x03A29484 LDR V8, [X19 + 0xDC]
	0x03A29488 LDR X0, [X8]
	0x03A2948C LDR W8, [X0 + 0xE0]
	0x03A29490 CBNZ W8, 0x3A294A4
	0x03A29494 BL 0x1C16DFC
	0x03A29498 ADRP X8, 0x72B000
	0x03A2949C LDR X8, [X8 + 0x6A0]
	0x03A294A0 LDR X0, [X8]
	0x03A294A4 LDR X8, [X0 + 0xB8]
	0x03A294A8 LDR W23, [X8]
	0x03A294AC MOV X0, X19
	0x03A294B0 MOV X1, X31
	0x03A294B4 BL 0x3C32E90
	0x03A294B8 CBZ X0, 0x3A29BE0
	0x03A294BC MOV X1, X31
	0x03A294C0 BL 0x3C3F58C
	0x03A294C4 FMOV S3, W31
	0x03A294C8 MOV X0, X25
	0x03A294CC MOV W1, W23
	0x03A294D0 MOV X2, X31
	0x03A294D4 BL 0x3C4CED8
	0x03A294D8 ADRP X23, 0x72B000
	0x03A294DC LDR X23, [X23 + 0x6A0]
	0x03A294E0 LDR X8, [X23]
	0x03A294E4 LDR X8, [X8 + 0xB8]
	0x03A294E8 LDR W1, [X8 + 0x14]
	0x03A294EC MOV X0, X25
	0x03A294F0 MOV V0.16B, V8.16B
	0x03A294F4 MOV X2, X31
	0x03A294F8 BL 0x3C4CDDC
	0x03A294FC LDR X8, [X23]
	0x03A29500 LDR X9, [X8 + 0xB8]
	0x03A29504 LDR X8, [X9 + 0x68]
	0x03A29508 CBZ X8, 0x3A29BE4
	0x03A2950C LDR W10, [X8 + 0x18]
	0x03A29510 LDR X11, [X31 + 0x8]
	0x03A29514 CMP W10, W11
	0x03A29518 B.LS 0x3A29BE8
	0x03A2951C LDR W1, [X9 + 0x18]
	0x03A29520 ADD X8, X8, X24, 0x4, LSL
	0x03A29524 LDP S0, S1, [X8 + 0x20]
	0x03A29528 LDP S2, S3, [X8 + 0x28]
	0x03A2952C MOV X0, X25
	0x03A29530 MOV X2, X31
	0x03A29534 BL 0x3C4CF88
	0x03A29538 LDR X24, [X31 + 0x8]
	0x03A2953C CBZ X26, 0x3A29BEC
	0x03A29540 ADRP X23, 0x72B000
	0x03A29544 LDR X8, [X26]
	0x03A29548 LDR X23, [X23 + 0x660]
	0x03A2954C MOV X25, X20
	0x03A29550 LDRH W9, [X8 + 0x12E]
	0x03A29554 LDR X1, [X23]
	0x03A29558 CBZ X9, 0x3A2957C
	0x03A2955C LDR X10, [X8 + 0xB0]
	0x03A29560 ADD X10, X10, 0x8
	0x03A29564 LDUR X11, [X10 - 0x8]
	0x03A29568 CMP X11, X1
	0x03A2956C B.EQ 0x3A2958C
	0x03A29570 SUBS X9, X9, 0x1
	0x03A29574 ADD X10, X10, 0x10
	0x03A29578 B.NE 0x3A29564
	0x03A2957C MOV X0, X26
	0x03A29580 MOV W2, W31
	0x03A29584 BL 0x1C5C788
	0x03A29588 B 0x3A29598
	0x03A2958C LDRSW X9, [X10]
	0x03A29590 ADD X8, X8, X9, 0x4, LSL
	0x03A29594 ADD X0, X8, 0x138
	0x03A29598 LDP X8, X1, [X0]
	0x03A2959C MOV X0, X26
	0x03A295A0 BLR X8
	0x03A295A4 MOV W1, W24
	0x03A295A8 BL 0x3A28BFC
	0x03A295AC STR X0, [X31 + 0x20]
	0x03A295B0 LDR X8, [X26]
	0x03A295B4 LDR X1, [X23]
	0x03A295B8 LDRH W9, [X8 + 0x12E]
	0x03A295BC CBZ X9, 0x3A295E0
	0x03A295C0 LDR X10, [X8 + 0xB0]
	0x03A295C4 ADD X10, X10, 0x8
	0x03A295C8 LDUR X11, [X10 - 0x8]
	0x03A295CC CMP X11, X1
	0x03A295D0 B.EQ 0x3A295F0
	0x03A295D4 SUBS X9, X9, 0x1
	0x03A295D8 ADD X10, X10, 0x10
	0x03A295DC B.NE 0x3A295C8
	0x03A295E0 MOV X0, X26
	0x03A295E4 MOV W2, W31
	0x03A295E8 BL 0x1C5C788
	0x03A295EC B 0x3A295FC
	0x03A295F0 LDRSW X9, [X10]
	0x03A295F4 ADD X8, X8, X9, 0x4, LSL
	0x03A295F8 ADD X0, X8, 0x138
	0x03A295FC LDP X8, X1, [X0]
	0x03A29600 MOV X0, X26
	0x03A29604 BLR X8
	0x03A29608 MOV W1, W24
	0x03A2960C BL 0x3A287EC
	0x03A29610 LDR X8, [X26]
	0x03A29614 LDR X1, [X23]
	0x03A29618 MOV X24, X0
	0x03A2961C LDRH W9, [X8 + 0x12E]
	0x03A29620 CBZ X9, 0x3A29644
	0x03A29624 LDR X10, [X8 + 0xB0]
	0x03A29628 ADD X10, X10, 0x8
	0x03A2962C LDUR X11, [X10 - 0x8]
	0x03A29630 CMP X11, X1
	0x03A29634 B.EQ 0x3A29654
	0x03A29638 SUBS X9, X9, 0x1
	0x03A2963C ADD X10, X10, 0x10
	0x03A29640 B.NE 0x3A2962C
	0x03A29644 MOV X0, X26
	0x03A29648 MOV W2, W31
	0x03A2964C BL 0x1C5C788
	0x03A29650 B 0x3A29660
	0x03A29654 LDRSW X9, [X10]
	0x03A29658 ADD X8, X8, X9, 0x4, LSL
	0x03A2965C ADD X0, X8, 0x138
	0x03A29660 LDP X8, X1, [X0]
	0x03A29664 MOV X0, X26
	0x03A29668 BLR X8
	0x03A2966C LDR X1, [X31 + 0x8]
	0x03A29670 BL 0x3A289F4
	0x03A29674 STR X0, [X31 + 0x18]
	0x03A29678 LDR X8, [X26]
	0x03A2967C LDR X1, [X23]
	0x03A29680 LDRH W9, [X8 + 0x12E]
	0x03A29684 CBZ X9, 0x3A296A8
	0x03A29688 LDR X10, [X8 + 0xB0]

ISIL:
	001 Subtract X31, X31, 208
	002 Move [X31+128], X30
	003 Move [X31+136], X27
	004 Move [X31+144], X26
	005 Move [X31+152], X25
	006 Move [X31+160], X24
	007 Move [X31+168], X23
	008 Move [X31+176], X22
	009 Move [X31+184], X21
	010 Move [X31+192], X20
	011 Move [X31+200], X19
	012 Move X21, 0x9BA000
	013 Move X19, 0x72C000
	014 Move W8, [X21+61]
	015 Move X19, [X19+1696]
	016 Move W20, W0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {44}
	021 Move X0, 0x6CC000
	022 Move X0, [X0+3672]
	023 Call 0x1C17CF4
	024 Move X0, 0x6CB000
	025 Move X0, [X0+1880]
	026 Call 0x1C17CF4
	027 Move X0, 0x72A000
	028 Move X0, [X0+3888]
	029 Call 0x1C17CF4
	030 Move X0, 0x728000
	031 Move X0, [X0+2480]
	032 Call 0x1C17CF4
	033 Move X0, 0x72C000
	034 Move X0, [X0+2840]
	035 Call 0x1C17CF4
	036 Move X0, 0x72C000
	037 Move X0, [X0+1696]
	038 Call 0x1C17CF4
	039 Move X0, 0x72C000
	040 Move X0, [X0+2848]
	041 Call 0x1C17CF4
	042 Move W8, 1
	043 Move [X21+61], W8
	044 Move X0, [X19]
	045 Move W8, [X0+224]
	046 Compare W8, 0
	047 JumpIfNotEqual {50}
	048 Call 0x1C17DFC
	049 Move X0, [X19]
	050 Move X8, [X0+184]
	051 Move X8, [X8+80]
	052 Compare X8, 0
	053 JumpIfEqual {65}
	054 Move W9, [X0+224]
	055 Compare W9, 0
	056 JumpIfNotEqual {63}
	057 Call 0x1C17DFC
	058 Move X0, [X19]
	059 Move X8, [X0+184]
	060 Move X8, [X8+80]
	061 Compare X8, 0
	062 JumpIfEqual {251}
	063 NotImplemented "Instruction LDRSW not yet implemented."
	064 NotImplemented "Instruction CMP not yet implemented."
	065 Move X8, 0x72A000
	066 Move X8, [X8+3888]
	067 Move X22, 0x6CC000
	068 Move W1, W20
	069 Move X0, [X8]
	070 Move X22, [X22+3672]
	071 Call 0x1C17D6C
	072 Move X8, [X19]
	073 Move X21, X0
	074 Move W9, [X8+224]
	075 Compare W9, 0
	076 JumpIfNotEqual {80}
	077 Move X0, X8
	078 Call 0x1C17DFC
	079 Move X8, [X19]
	080 Move X8, [X8+184]
	081 Move W1, W20
	082 Move [X8+80], X21
	083 Move X0, [X22]
	084 Call 0x1C17D6C
	085 Move X8, X0
	086 Move X0, [X19]
	087 Move X21, 0x9BA000
	088 Move X9, [X0+184]
	089 Move [X9+88], X8
	090 Move W8, [X21+305]
	091 Compare W8, 0
	092 JumpIfNotEqual {98}
	093 Move X0, X19
	094 Call 0x1C17CF4
	095 Move X0, [X19]
	096 Move W8, 1
	097 Move [X21+305], W8
	098 Move W8, [X0+224]
	099 Compare W8, 0
	100 JumpIfNotEqual {103}
	101 Call 0x1C17DFC
	102 Move X0, [X19]
	103 Move X8, [X0+184]
	104 Move [X8+120], W20
	105 Compare W20, 0
	106 JumpIfEqual {203}
	107 Move X24, 0x6CB000
	108 Move X25, 0x72C000
	109 Move X26, 0x728000
	110 Move X24, [X24+1880]
	111 Move X25, [X25+2848]
	112 Move X26, [X26+2480]
	113 Move X23, X31
	114 Move W22, W20
	115 Move W8, [X0+224]
	116 Compare W8, 0
	117 JumpIfNotEqual {120}
	118 Call 0x1C17DFC
	119 Move X0, [X19]
	120 Move X8, [X0+184]
	121 Move X0, [X24]
	122 Add X1, X31, 124
	123 Move X21, [X8+88]
	124 Move [X31+124], W23
	125 Call 0x1C17E04
	126 Move X8, [X25]
	127 Move X1, X0
	128 Move X2, X31
	129 Move X0, X8
	130 Call String.Format, X0, X1
	131 Move X1, X31
	132 Call Shader.PropertyToID, X0
	133 Compare X21, 0
	134 JumpIfEqual {251}
	135 Move W8, [X21+24]
	136 NotImplemented "Instruction CMP not yet implemented."
	137 Add X8, X21, X23
	138 Move [X8+32], W0
	139 Move X8, [X19]
	140 Move X8, [X8+184]
	141 Move X9, [X8+88]
	142 Compare X9, 0
	143 JumpIfEqual {251}
	144 Move W10, [X9+24]
	145 NotImplemented "Instruction CMP not yet implemented."
	146 Move X27, [X8+80]
	147 Add X8, X9, X23
	148 Move W0, [X8+32]
	149 Add X8, X31, 40
	150 Move X1, X31
	151 Call RenderTargetIdentifier.op_Implicit, X0
	152 NotImplemented "Instruction LDUR not yet implemented."
	153 NotImplemented "Instruction LDUR not yet implemented."
	154 Move X8, [X31+72]
	155 Move X0, [X24]
	156 Add X1, X31, 40
	157 Move [X31+80], V0
	158 Move [X31+88], V1
	159 Move [X31+112], X8
	160 Move [X31+40], W23
	161 Call 0x1C17E04
	162 Move X8, [X25]
	163 Move X1, X0
	164 Move X2, X31
	165 Move X0, X8
	166 Call String.Format, X0, X1
	167 Move X8, [X26]
	168 Move X21, X0
	169 Move W9, [X8+224]
	170 Compare W9, 0
	171 JumpIfNotEqual {174}
	172 Move X0, X8
	173 Call 0x1C17DFC
	174 Move V0, [X31+80]
	175 Move V1, [X31+96]
	176 Move X8, [X31+112]
	177 Add X0, X31, 0
	178 Move X1, X21
	179 Move X2, X31
	180 Move [X31], V0
	181 Move [X31+8], V1
	182 Move [X31+32], X8
	183 Call RTHandles.Alloc, X0, X1
	184 Compare X27, 0
	185 JumpIfEqual {251}
	186 Move X21, X0
	187 Compare X0, 0
	188 JumpIfEqual {195}
	189 Move X8, [X27]
	190 Move X0, X21
	191 Move X1, [X8+64]
	192 Call 0x1C17E00
	193 Compare X0, 0
	194 JumpIfEqual {252}
	195 Move W8, [X27+24]
	196 NotImplemented "Instruction CMP not yet implemented."
	197 Add X8, X27, X23
	198 Move [X8+32], X21
	199 Move X0, [X19]
	200 Add W8, W23, 1
	201 Move X23, W8
	202 NotImplemented "Instruction CMP not yet implemented."
	203 Move W8, [X0+224]
	204 Compare W8, 0
	205 JumpIfNotEqual {208}
	206 Call 0x1C17DFC
	207 Move X0, [X19]
	208 Move X8, [X0+184]
	209 Move X8, [X8+96]
	210 Compare X8, 0
	211 JumpIfEqual {223}
	212 Move W9, [X0+224]
	213 Compare W9, 0
	214 JumpIfNotEqual {221}
	215 Call 0x1C17DFC
	216 Move X8, [X19]
	217 Move X8, [X8+184]
	218 Move X8, [X8+96]
	219 Compare X8, 0
	220 JumpIfEqual {251}
	221 NotImplemented "Instruction LDRSW not yet implemented."
	222 NotImplemented "Instruction CMP not yet implemented."
	223 Move X8, 0x72C000
	224 Move X8, [X8+2840]
	225 Move W1, W20
	226 Move X0, [X8]
	227 Call 0x1C17D6C
	228 Move X8, [X19]
	229 Move X20, X0
	230 Move W9, [X8+224]
	231 Compare W9, 0
	232 JumpIfNotEqual {236}
	233 Move X0, X8
	234 Call 0x1C17DFC
	235 Move X8, [X19]
	236 Move X8, [X8+184]
	237 Move [X8+96], X20
	238 Move X20, [X31+192]
	239 Move X19, [X31+200]
	240 Move X22, [X31+176]
	241 Move X21, [X31+184]
	242 Move X24, [X31+160]
	243 Move X23, [X31+168]
	244 Move X26, [X31+144]
	245 Move X25, [X31+152]
	246 Move X30, [X31+128]
	247 Move X27, [X31+136]
	248 Add X31, X31, 208
	249 Return 
	250 Call 0x1C17F28
	251 Call 0x1C17F20
	252 Call 0x1C17F44
	253 Move X1, X31
	254 Call 0x1C17DEC

Method: UnityEngine.Material[] CreateMaterials(UnityEngine.Shader shader, System.Int32 pass = 0)

Disassembly:
	0x03A2968C ADD X10, X10, 0x8
	0x03A29690 LDUR X11, [X10 - 0x8]
	0x03A29694 CMP X11, X1
	0x03A29698 B.EQ 0x3A296B8
	0x03A2969C SUBS X9, X9, 0x1
	0x03A296A0 ADD X10, X10, 0x10
	0x03A296A4 B.NE 0x3A29690
	0x03A296A8 MOV X0, X26
	0x03A296AC MOV W2, W31
	0x03A296B0 BL 0x1C5C788
	0x03A296B4 B 0x3A296C4
	0x03A296B8 LDRSW X9, [X10]
	0x03A296BC ADD X8, X8, X9, 0x4, LSL
	0x03A296C0 ADD X0, X8, 0x138
	0x03A296C4 LDP X8, X1, [X0]
	0x03A296C8 MOV X0, X26
	0x03A296CC BLR X8
	0x03A296D0 LDR X1, [X31 + 0x8]
	0x03A296D4 BL 0x3A28AF8
	0x03A296D8 STR X0, [X31 + 0x10]
	0x03A296DC LDR X8, [X26]
	0x03A296E0 LDR X1, [X23]
	0x03A296E4 LDRH W9, [X8 + 0x12E]
	0x03A296E8 CBZ X9, 0x3A2970C
	0x03A296EC LDR X10, [X8 + 0xB0]
	0x03A296F0 ADD X10, X10, 0x8
	0x03A296F4 LDUR X11, [X10 - 0x8]
	0x03A296F8 CMP X11, X1
	0x03A296FC B.EQ 0x3A2971C
	0x03A29700 SUBS X9, X9, 0x1
	0x03A29704 ADD X10, X10, 0x10
	0x03A29708 B.NE 0x3A296F4
	0x03A2970C MOV X0, X26
	0x03A29710 MOV W2, W31
	0x03A29714 BL 0x1C5C788
	0x03A29718 B 0x3A29728
	0x03A2971C LDRSW X9, [X10]
	0x03A29720 ADD X8, X8, X9, 0x4, LSL
	0x03A29724 ADD X0, X8, 0x138
	0x03A29728 LDP X8, X1, [X0]
	0x03A2972C MOV X0, X26
	0x03A29730 BLR X8
	0x03A29734 LDR X1, [X31 + 0x8]
	0x03A29738 BL 0x3A288F0
	0x03A2973C LDR W8, [X25 + 0x18]
	0x03A29740 CMP W8, 0x1
	0x03A29744 B.LT 0x3A29B6C
	0x03A29748 LDR X28, [X31 + 0x28]
	0x03A2974C MOV X0, X25
	0x03A29750 MOV W25, W31
	0x03A29754 ADRP X8, 0x72B000
	0x03A29758 LDR X8, [X8 + 0xAF8]
	0x03A2975C LDR X2, [X8]
	0x03A29760 MOV W1, W25
	0x03A29764 BL 0x301BCCC
	0x03A29768 CBZ X0, 0x3A29BCC
	0x03A2976C LDR X26, [X0 + 0x28]
	0x03A29770 CBZ X26, 0x3A29B58
	0x03A29774 LDR W8, [X26 + 0x18]
	0x03A29778 CMP W8, 0x1
	0x03A2977C B.LT 0x3A29B58
	0x03A29780 MOV W29, W31
	0x03A29784 LDR X2, [X21]
	0x03A29788 MOV X0, X26
	0x03A2978C MOV W1, W29
	0x03A29790 BL 0x301BCCC
	0x03A29794 MOV X27, X0
	0x03A29798 CBZ X0, 0x3A29BBC
	0x03A2979C MOV X0, X27
	0x03A297A0 MOV X1, X19
	0x03A297A4 BL 0x3A268E4
	0x03A297A8 TBZ X0, 0x0, 0x3A298C4
	0x03A297AC LDR X0, [X22]
	0x03A297B0 LDR W8, [X0 + 0xE0]
	0x03A297B4 CBNZ W8, 0x3A297BC
	0x03A297B8 BL 0x1C16DFC
	0x03A297BC MOV X0, X27
	0x03A297C0 MOV X1, X31
	0x03A297C4 MOV X2, X31
	0x03A297C8 BL 0x3C354F8
	0x03A297CC TBZ X0, 0x0, 0x3A298C4
	0x03A297D0 LDR X0, [X22]
	0x03A297D4 LDR W8, [X0 + 0xE0]
	0x03A297D8 CBNZ W8, 0x3A297E0
	0x03A297DC BL 0x1C16DFC
	0x03A297E0 MOV X0, X24
	0x03A297E4 MOV X1, X31
	0x03A297E8 MOV X2, X31

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X22, 0x9BA000
	012 Move X21, 0x6D2000
	013 Move W8, [X22+62]
	014 Move X21, [X21+1952]
	015 Move W19, W1
	016 Move X20, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {32}
	021 Move X0, 0x6F3000
	022 Move X0, [X0+2296]
	023 Call 0x1C17CF4
	024 Move X0, 0x6D2000
	025 Move X0, [X0+1952]
	026 Call 0x1C17CF4
	027 Move X0, 0x72C000
	028 Move X0, [X0+1696]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X22+62], W8
	032 Move X0, [X21]
	033 Move X23, 0x6F3000
	034 Move X24, 0x72C000
	035 Move X23, [X23+2296]
	036 Move X24, [X24+1696]
	037 Move W1, 4
	038 Call 0x1C17D6C
	039 Move X21, X0
	040 Move X25, X31
	041 Add X26, X0, 32
	042 Move W27, 1
	043 Move X0, [X23]
	044 Move W8, [X0+224]
	045 Compare W8, 0
	046 JumpIfNotEqual {48}
	047 Call 0x1C17DFC
	048 Move X0, X20
	049 Move X1, X31
	050 Call CoreUtils.CreateEngineMaterial, X0
	051 Compare X21, 0
	052 JumpIfEqual {101}
	053 Move X22, X0
	054 Compare X0, 0
	055 JumpIfEqual {62}
	056 Move X8, [X21]
	057 Move X0, X22
	058 Move X1, [X8+64]
	059 Call 0x1C17E00
	060 Compare X0, 0
	061 JumpIfEqual {103}
	062 Move W8, [X21+24]
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Move [X26], X22
	065 Move X0, [X24]
	066 Move W8, [X0+224]
	067 Compare W8, 0
	068 JumpIfNotEqual {70}
	069 Call 0x1C17DFC
	070 Compare X22, 0
	071 JumpIfEqual {101}
	072 Move X8, [X24]
	073 NotImplemented "Instruction LSLV not yet implemented."
	074 Move X0, X22
	075 Move X3, X31
	076 Move X8, [X8+184]
	077 Move W1, [X8+24]
	078 Call Material.SetInt, X0, X1, X2
	079 Move W8, [X21+24]
	080 NotImplemented "Instruction CMP not yet implemented."
	081 Move X0, [X26]
	082 Compare X0, 0
	083 JumpIfEqual {101}
	084 Move W1, W19
	085 Move X2, X31
	086 Call Material.SetPass, X0, X1
	087 Add X25, X25, 1
	088 NotImplemented "Instruction CMP not yet implemented."
	089 Move X0, X21
	090 Move X20, [X31+64]
	091 Move X19, [X31+72]
	092 Move X22, [X31+48]
	093 Move X21, [X31+56]
	094 Move X24, [X31+32]
	095 Move X23, [X31+40]
	096 Move X26, [X31+16]
	097 Move X25, [X31+24]
	098 Move X30, [X31+80]
	099 Move X27, [X31+88]
	100 Return X0
	101 Call 0x1C17F20
	102 Call 0x1C17F28
	103 Call 0x1C17F44
	104 Move X1, X31
	105 Call 0x1C17DEC

Method: UnityEngine.Material GetProjectedShadowMaterial(UnityEngine.Rendering.Universal.Renderer2DData rendererData, System.Int32 colorIndex)

Disassembly:
	0x03A297EC BL 0x3C354F8
	0x03A297F0 TBZ X0, 0x0, 0x3A298C4
	0x03A297F4 LDR W1, [X31 + 0x23C]
	0x03A297F8 MOV X0, X27
	0x03A297FC BL 0x3A2693C
	0x03A29800 TBZ X0, 0x0, 0x3A298C4
	0x03A29804 LDRB W8, [X27 + 0x36]
	0x03A29808 CBZ W8, 0x3A298C4
	0x03A2980C ADRP X8, 0x72B000
	0x03A29810 LDR X8, [X8 + 0x6A0]
	0x03A29814 LDR X0, [X8]
	0x03A29818 LDR W8, [X0 + 0xE0]
	0x03A2981C CBNZ W8, 0x3A29824
	0x03A29820 BL 0x1C16DFC
	0x03A29824 LDR X0, [X31 + 0x28]
	0x03A29828 MOV X1, X27
	0x03A2982C BL 0x3A2A090
	0x03A29830 ADD X23, X27, 0x14C
	0x03A29834 LDP V0, V1, [X23 + 0x20]
	0x03A29838 LDP V2, V3, [X23]
	0x03A2983C LDR X1, [X27 + 0x50]
	0x03A29840 STP V0, V1, [X31 + 0x150]
	0x03A29844 STP V2, V3, [X31 + 0x130]
	0x03A29848 LDR X3, [X31 + 0x20]
	0x03A2984C ADD X2, X31, 0x130
	0x03A29850 MOV X0, X28
	0x03A29854 MOV W4, W31
	0x03A29858 MOV W5, W31
	0x03A2985C MOV X6, X31
	0x03A29860 BL 0x3C4F070
	0x03A29864 LDP V0, V1, [X23 + 0x20]
	0x03A29868 LDP V2, V3, [X23]
	0x03A2986C LDR X1, [X27 + 0x50]
	0x03A29870 STP V0, V1, [X31 + 0x110]
	0x03A29874 STP V2, V3, [X31 + 0xF0]
	0x03A29878 ADD X2, X31, 0xF0
	0x03A2987C MOV X0, X28
	0x03A29880 MOV X3, X24
	0x03A29884 MOV W4, W31
	0x03A29888 MOV W5, W31
	0x03A2988C MOV X6, X31
	0x03A29890 BL 0x3C4F070
	0x03A29894 LDP V0, V1, [X23 + 0x20]
	0x03A29898 LDP V2, V3, [X23]
	0x03A2989C LDR X1, [X27 + 0x50]
	0x03A298A0 STP V0, V1, [X31 + 0xD0]
	0x03A298A4 STP V2, V3, [X31 + 0xB0]
	0x03A298A8 LDR X3, [X31 + 0x20]
	0x03A298AC ADD X2, X31, 0xB0
	0x03A298B0 MOVZ W5, 0x1
	0x03A298B4 MOV X0, X28
	0x03A298B8 MOV W4, W31
	0x03A298BC MOV X6, X31
	0x03A298C0 BL 0x3C4F070
	0x03A298C4 LDR W8, [X26 + 0x18]
	0x03A298C8 ADD W29, W29, 0x1
	0x03A298CC CMP W29, W8
	0x03A298D0 B.LT 0x3A29784
	0x03A298D4 CMP W8, 0x1
	0x03A298D8 B.LT 0x3A29B58
	0x03A298DC MOV W29, W31
	0x03A298E0 LDR X2, [X21]
	0x03A298E4 MOV X0, X26
	0x03A298E8 MOV W1, W29
	0x03A298EC BL 0x301BCCC

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x9BA000
	007 Move W8, [X21+63]
	008 Move W19, W1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x6CB000
	015 Move X0, [X0+1432]
	016 Call 0x1C17CF4
	017 Move X0, 0x72C000
	018 Move X0, [X0+1696]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+63], W8
	022 Compare X20, 0
	023 JumpIfEqual {82}
	024 Move X8, [X20+272]
	025 Compare X8, 0
	026 JumpIfEqual {55}
	027 Move X9, [X8+24]
	028 Compare X9, 0
	029 JumpIfEqual {55}
	030 Compare W9, 0
	031 JumpIfEqual {83}
	032 Move X0, [X8+32]
	033 Compare X0, 0
	034 JumpIfEqual {82}
	035 Move X21, [X20+184]
	036 Move X1, X31
	037 Call Material.get_shader, X0
	038 Move X8, 0x6CB000
	039 Move X8, [X8+1432]
	040 Move X22, X0
	041 Move X8, [X8]
	042 Move W9, [X8+224]
	043 Compare W9, 0
	044 JumpIfNotEqual {47}
	045 Move X0, X8
	046 Call 0x1C17DFC
	047 Move X0, X21
	048 Move X1, X22
	049 Move X2, X31
	050 Call Object.op_Inequality, X0, X1
	051 Move TEMP, X0
	052 And TEMP, TEMP, 1
	053 Compare TEMP, 1
	054 JumpIfNotEqual {79}
	055 Move X8, 0x72C000
	056 Move X8, [X8+1696]
	057 Move X21, [X20+184]
	058 Move X0, [X8]
	059 Move W8, [X0+224]
	060 Compare W8, 0
	061 JumpIfNotEqual {63}
	062 Call 0x1C17DFC
	063 Move X0, X21
	064 Move W1, W31
	065 Call ShadowRendering.CreateMaterials, X0, X1
	066 Move [X20+272], X0
	067 Compare X0, 0
	068 JumpIfEqual {82}
	069 Move W8, [X0+24]
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Add X8, X0, W19
	072 Move X0, [X8+32]
	073 Move X20, [X31+32]
	074 Move X19, [X31+40]
	075 Move X22, [X31+16]
	076 Move X21, [X31+24]
	077 Move X30, [X31+48]
	078 Return X0
	079 Move X0, [X20+272]
	080 Compare X0, 0
	081 JumpIfNotEqual {69}
	082 Call 0x1C17F20
	083 Call 0x1C17F28

Method: UnityEngine.Material GetStencilOnlyShadowMaterial(UnityEngine.Rendering.Universal.Renderer2DData rendererData, System.Int32 colorIndex)

Disassembly:
	0x03A298F0 MOV X27, X0
	0x03A298F4 CBZ X0, 0x3A29BC0
	0x03A298F8 MOV X0, X27
	0x03A298FC MOV X1, X19
	0x03A29900 BL 0x3A268E4
	0x03A29904 TBZ X0, 0x0, 0x3A29A4C
	0x03A29908 LDR X0, [X22]
	0x03A2990C LDR W8, [X0 + 0xE0]
	0x03A29910 CBNZ W8, 0x3A29918
	0x03A29914 BL 0x1C16DFC
	0x03A29918 MOV X0, X27
	0x03A2991C MOV X1, X31
	0x03A29920 MOV X2, X31
	0x03A29924 BL 0x3C354F8
	0x03A29928 TBZ X0, 0x0, 0x3A29A4C
	0x03A2992C LDR W1, [X31 + 0x23C]
	0x03A29930 MOV X0, X27
	0x03A29934 BL 0x3A2693C
	0x03A29938 TBZ X0, 0x0, 0x3A29A4C
	0x03A2993C LDRB W8, [X27 + 0x35]
	0x03A29940 CBZ W8, 0x3A299DC
	0x03A29944 LDRB W8, [X27 + 0x34]
	0x03A29948 CBZ W8, 0x3A299DC
	0x03A2994C ADRP X8, 0x6D0000
	0x03A29950 LDR X8, [X8 + 0x7A0]
	0x03A29954 STR X31, [X31 + 0x220]
	0x03A29958 LDR X2, [X8]
	0x03A2995C ADD X1, X31, 0x220
	0x03A29960 MOV X0, X27
	0x03A29964 BL 0x21A4990
	0x03A29968 LDR X0, [X22]
	0x03A2996C LDR X23, [X31 + 0x220]
	0x03A29970 LDR W8, [X0 + 0xE0]
	0x03A29974 CBNZ W8, 0x3A2997C
	0x03A29978 BL 0x1C16DFC
	0x03A2997C MOV X0, X23
	0x03A29980 MOV X1, X31
	0x03A29984 MOV X2, X31
	0x03A29988 BL 0x3C354F8
	0x03A2998C TBZ X0, 0x0, 0x3A29A4C
	0x03A29990 LDRB W8, [X27 + 0x37]
	0x03A29994 LDR X0, [X22]
	0x03A29998 CMP W8, 0x0
	0x03A2999C LDP X10, X8, [X31 + 0x10]
	0x03A299A0 LDR W9, [X0 + 0xE0]
	0x03A299A4 CSEL X23, X10, X8, EQ
	0x03A299A8 CBNZ W9, 0x3A299B0
	0x03A299AC BL 0x1C16DFC
	0x03A299B0 MOV X0, X23
	0x03A299B4 MOV X1, X31
	0x03A299B8 MOV X2, X31
	0x03A299BC BL 0x3C354F8
	0x03A299C0 TBZ X0, 0x0, 0x3A29A4C
	0x03A299C4 LDR X1, [X31 + 0x220]
	0x03A299C8 LDR X0, [X31 + 0x28]
	0x03A299CC MOV X2, X23
	0x03A299D0 MOV X3, X31
	0x03A299D4 BL 0x3C4F320
	0x03A299D8 B 0x3A29A4C
	0x03A299DC ADD X8, X27, 0x14C
	0x03A299E0 LDP V0, V1, [X8 + 0x20]
	0x03A299E4 LDP V2, V3, [X8]
	0x03A299E8 LDR X0, [X22]
	0x03A299EC STP V0, V1, [X31 + 0x200]
	0x03A299F0 STP V2, V3, [X31 + 0x1E0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x9BA000
	007 Move W8, [X21+64]
	008 Move W19, W1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x6CB000
	015 Move X0, [X0+1432]
	016 Call 0x1C17CF4
	017 Move X0, 0x72C000
	018 Move X0, [X0+1696]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+64], W8
	022 Compare X20, 0
	023 JumpIfEqual {82}
	024 Move X8, [X20+280]
	025 Compare X8, 0
	026 JumpIfEqual {55}
	027 Move X9, [X8+24]
	028 Compare X9, 0
	029 JumpIfEqual {55}
	030 Compare W9, 0
	031 JumpIfEqual {83}
	032 Move X0, [X8+32]
	033 Compare X0, 0
	034 JumpIfEqual {82}
	035 Move X21, [X20+184]
	036 Move X1, X31
	037 Call Material.get_shader, X0
	038 Move X8, 0x6CB000
	039 Move X8, [X8+1432]
	040 Move X22, X0
	041 Move X8, [X8]
	042 Move W9, [X8+224]
	043 Compare W9, 0
	044 JumpIfNotEqual {47}
	045 Move X0, X8
	046 Call 0x1C17DFC
	047 Move X0, X21
	048 Move X1, X22
	049 Move X2, X31
	050 Call Object.op_Inequality, X0, X1
	051 Move TEMP, X0
	052 And TEMP, TEMP, 1
	053 Compare TEMP, 1
	054 JumpIfNotEqual {79}
	055 Move X8, 0x72C000
	056 Move X8, [X8+1696]
	057 Move X21, [X20+184]
	058 Move X0, [X8]
	059 Move W8, [X0+224]
	060 Compare W8, 0
	061 JumpIfNotEqual {63}
	062 Call 0x1C17DFC
	063 Move W1, 1
	064 Move X0, X21
	065 Call ShadowRendering.CreateMaterials, X0, X1
	066 Move [X20+280], X0
	067 Compare X0, 0
	068 JumpIfEqual {82}
	069 Move W8, [X0+24]
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Add X8, X0, W19
	072 Move X0, [X8+32]
	073 Move X20, [X31+32]
	074 Move X19, [X31+40]
	075 Move X22, [X31+16]
	076 Move X21, [X31+24]
	077 Move X30, [X31+48]
	078 Return X0
	079 Move X0, [X20+280]
	080 Compare X0, 0
	081 JumpIfNotEqual {69}
	082 Call 0x1C17F20
	083 Call 0x1C17F28

Method: UnityEngine.Material GetSpriteSelfShadowMaterial(UnityEngine.Rendering.Universal.Renderer2DData rendererData, System.Int32 colorIndex)

Disassembly:
	0x03A299F4 LDRB W8, [X27 + 0x37]
	0x03A299F8 LDR W9, [X0 + 0xE0]
	0x03A299FC CMP W8, 0x0
	0x03A29A00 LDP X10, X8, [X31 + 0x10]
	0x03A29A04 CSEL X23, X10, X8, EQ
	0x03A29A08 CBNZ W9, 0x3A29A10
	0x03A29A0C BL 0x1C16DFC
	0x03A29A10 MOV X0, X23
	0x03A29A14 MOV X1, X31
	0x03A29A18 MOV X2, X31
	0x03A29A1C BL 0x3C354F8
	0x03A29A20 TBZ X0, 0x0, 0x3A29A4C
	0x03A29A24 LDR X1, [X27 + 0x50]
	0x03A29A28 LDP V0, V1, [X31 + 0x1E0]
	0x03A29A2C LDP V2, V3, [X31 + 0x200]
	0x03A29A30 STP V0, V1, [X31 + 0x70]
	0x03A29A34 STP V2, V3, [X31 + 0x90]
	0x03A29A38 LDR X0, [X31 + 0x28]
	0x03A29A3C ADD X2, X31, 0x70
	0x03A29A40 MOV X3, X23
	0x03A29A44 MOV X4, X31
	0x03A29A48 BL 0x3C4F0D4
	0x03A29A4C LDR W8, [X26 + 0x18]
	0x03A29A50 ADD W29, W29, 0x1
	0x03A29A54 CMP W29, W8
	0x03A29A58 B.LT 0x3A298E0
	0x03A29A5C CMP W8, 0x1
	0x03A29A60 B.LT 0x3A29B58
	0x03A29A64 MOV W27, W31
	0x03A29A68 LDR X2, [X21]
	0x03A29A6C MOV X0, X26
	0x03A29A70 MOV W1, W27
	0x03A29A74 BL 0x301BCCC
	0x03A29A78 MOV X29, X0
	0x03A29A7C CBZ X0, 0x3A29BC4
	0x03A29A80 MOV X0, X29
	0x03A29A84 MOV X1, X19
	0x03A29A88 BL 0x3A268E4
	0x03A29A8C TBZ X0, 0x0, 0x3A29B48
	0x03A29A90 LDR X0, [X22]
	0x03A29A94 LDR W8, [X0 + 0xE0]
	0x03A29A98 CBNZ W8, 0x3A29AA0
	0x03A29A9C BL 0x1C16DFC
	0x03A29AA0 MOV X0, X29
	0x03A29AA4 MOV X1, X31
	0x03A29AA8 MOV X2, X31
	0x03A29AAC BL 0x3C354F8
	0x03A29AB0 TBZ X0, 0x0, 0x3A29B48
	0x03A29AB4 LDR X0, [X22]
	0x03A29AB8 LDR W8, [X0 + 0xE0]
	0x03A29ABC CBNZ W8, 0x3A29AC4
	0x03A29AC0 BL 0x1C16DFC
	0x03A29AC4 MOV X0, X24
	0x03A29AC8 MOV X1, X31
	0x03A29ACC MOV X2, X31
	0x03A29AD0 BL 0x3C354F8
	0x03A29AD4 TBZ X0, 0x0, 0x3A29B48
	0x03A29AD8 LDR W1, [X31 + 0x23C]
	0x03A29ADC MOV X0, X29
	0x03A29AE0 BL 0x3A2693C
	0x03A29AE4 TBZ X0, 0x0, 0x3A29B48
	0x03A29AE8 LDRB W8, [X29 + 0x36]
	0x03A29AEC CBZ W8, 0x3A29B48
	0x03A29AF0 ADRP X8, 0x72B000
	0x03A29AF4 LDR X8, [X8 + 0x6A0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x9BA000
	007 Move W8, [X21+65]
	008 Move W19, W1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x6CB000
	015 Move X0, [X0+1432]
	016 Call 0x1C17CF4
	017 Move X0, 0x72C000
	018 Move X0, [X0+1696]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+65], W8
	022 Compare X20, 0
	023 JumpIfEqual {82}
	024 Move X8, [X20+248]
	025 Compare X8, 0
	026 JumpIfEqual {55}
	027 Move X9, [X8+24]
	028 Compare X9, 0
	029 JumpIfEqual {55}
	030 Compare W9, 0
	031 JumpIfEqual {83}
	032 Move X0, [X8+32]
	033 Compare X0, 0
	034 JumpIfEqual {82}
	035 Move X21, [X20+192]
	036 Move X1, X31
	037 Call Material.get_shader, X0
	038 Move X8, 0x6CB000
	039 Move X8, [X8+1432]
	040 Move X22, X0
	041 Move X8, [X8]
	042 Move W9, [X8+224]
	043 Compare W9, 0
	044 JumpIfNotEqual {47}
	045 Move X0, X8
	046 Call 0x1C17DFC
	047 Move X0, X21
	048 Move X1, X22
	049 Move X2, X31
	050 Call Object.op_Inequality, X0, X1
	051 Move TEMP, X0
	052 And TEMP, TEMP, 1
	053 Compare TEMP, 1
	054 JumpIfNotEqual {79}
	055 Move X8, 0x72C000
	056 Move X8, [X8+1696]
	057 Move X21, [X20+192]
	058 Move X0, [X8]
	059 Move W8, [X0+224]
	060 Compare W8, 0
	061 JumpIfNotEqual {63}
	062 Call 0x1C17DFC
	063 Move X0, X21
	064 Move W1, W31
	065 Call ShadowRendering.CreateMaterials, X0, X1
	066 Move [X20+248], X0
	067 Compare X0, 0
	068 JumpIfEqual {82}
	069 Move W8, [X0+24]
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Add X8, X0, W19
	072 Move X0, [X8+32]
	073 Move X20, [X31+32]
	074 Move X19, [X31+40]
	075 Move X22, [X31+16]
	076 Move X21, [X31+24]
	077 Move X30, [X31+48]
	078 Return X0
	079 Move X0, [X20+248]
	080 Compare X0, 0
	081 JumpIfNotEqual {69}
	082 Call 0x1C17F20
	083 Call 0x1C17F28

Method: UnityEngine.Material GetSpriteUnshadowMaterial(UnityEngine.Rendering.Universal.Renderer2DData rendererData, System.Int32 colorIndex)

Disassembly:
	0x03A29AF8 LDR X0, [X8]
	0x03A29AFC LDR W8, [X0 + 0xE0]
	0x03A29B00 CBNZ W8, 0x3A29B08
	0x03A29B04 BL 0x1C16DFC
	0x03A29B08 LDR X0, [X31 + 0x28]
	0x03A29B0C MOV X1, X29
	0x03A29B10 BL 0x3A2A090
	0x03A29B14 ADD X8, X29, 0x14C
	0x03A29B18 LDP V0, V1, [X8 + 0x20]
	0x03A29B1C LDP V2, V3, [X8]
	0x03A29B20 LDR X1, [X29 + 0x50]
	0x03A29B24 STP V0, V1, [X31 + 0x50]
	0x03A29B28 STP V2, V3, [X31 + 0x30]
	0x03A29B2C LDR X0, [X31 + 0x28]
	0x03A29B30 ADD X2, X31, 0x30
	0x03A29B34 MOVZ W5, 0x1
	0x03A29B38 MOV X3, X24
	0x03A29B3C MOV W4, W31
	0x03A29B40 MOV X6, X31
	0x03A29B44 BL 0x3C4F070
	0x03A29B48 LDR W8, [X26 + 0x18]
	0x03A29B4C ADD W27, W27, 0x1
	0x03A29B50 CMP W27, W8
	0x03A29B54 B.LT 0x3A29A68
	0x03A29B58 LDR W8, [X20 + 0x18]
	0x03A29B5C ADD W25, W25, 0x1
	0x03A29B60 MOV X0, X20
	0x03A29B64 CMP W25, W8
	0x03A29B68 B.LT 0x3A29754
	0x03A29B6C MOV X21, X31
	0x03A29B70 ADD X0, X31, 0x228
	0x03A29B74 MOV X1, X31
	0x03A29B78 BL 0x39B1DB4
	0x03A29B7C CBNZ X21, 0x3A29BF0
	0x03A29B80 MOVZ W19, 0x1
	0x03A29B84 ADD X0, X31, 0x238
	0x03A29B88 MOV X1, X31
	0x03A29B8C BL 0x39B1DB4
	0x03A29B90 MOV W0, W19
	0x03A29B94 ADD X31, X31, 0x230
	0x03A29B98 LDP X20, X19, [X31 + 0x60]
	0x03A29B9C LDP X22, X21, [X31 + 0x50]
	0x03A29BA0 LDP X24, X23, [X31 + 0x40]
	0x03A29BA4 LDP X26, X25, [X31 + 0x30]
	0x03A29BA8 LDP X28, X27, [X31 + 0x20]
	0x03A29BAC LDP X29, X30, [X31 + 0x10]
	0x03A29BB0 LDR V8, [X31], #0x70
	0x03A29BB4 RET
	0x03A29BB8 BL 0x1C16F20
	0x03A29BBC BL 0x1C16F20
	0x03A29BC0 BL 0x1C16F20
	0x03A29BC4 BL 0x1C16F20
	0x03A29BC8 BL 0x1C16F20
	0x03A29BCC BL 0x1C16F20
	0x03A29BD0 BL 0x1C16F20
	0x03A29BD4 BL 0x1C16F20
	0x03A29BD8 BL 0x1C16F28
	0x03A29BDC BL 0x1C16F20
	0x03A29BE0 BL 0x1C16F20
	0x03A29BE4 BL 0x1C16F20
	0x03A29BE8 BL 0x1C16F28
	0x03A29BEC BL 0x1C16F20
	0x03A29BF0 MOV X0, X21
	0x03A29BF4 BL 0x1C16F18
	0x03A29BF8 B 0x3A29D10

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x9BA000
	007 Move W8, [X21+66]
	008 Move W19, W1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x6CB000
	015 Move X0, [X0+1432]
	016 Call 0x1C17CF4
	017 Move X0, 0x72C000
	018 Move X0, [X0+1696]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+66], W8
	022 Compare X20, 0
	023 JumpIfEqual {82}
	024 Move X8, [X20+256]
	025 Compare X8, 0
	026 JumpIfEqual {55}
	027 Move X9, [X8+24]
	028 Compare X9, 0
	029 JumpIfEqual {55}
	030 Compare W9, 0
	031 JumpIfEqual {83}
	032 Move X0, [X8+32]
	033 Compare X0, 0
	034 JumpIfEqual {82}
	035 Move X21, [X20+200]
	036 Move X1, X31
	037 Call Material.get_shader, X0
	038 Move X8, 0x6CB000
	039 Move X8, [X8+1432]
	040 Move X22, X0
	041 Move X8, [X8]
	042 Move W9, [X8+224]
	043 Compare W9, 0
	044 JumpIfNotEqual {47}
	045 Move X0, X8
	046 Call 0x1C17DFC
	047 Move X0, X21
	048 Move X1, X22
	049 Move X2, X31
	050 Call Object.op_Inequality, X0, X1
	051 Move TEMP, X0
	052 And TEMP, TEMP, 1
	053 Compare TEMP, 1
	054 JumpIfNotEqual {79}
	055 Move X8, 0x72C000
	056 Move X8, [X8+1696]
	057 Move X21, [X20+200]
	058 Move X0, [X8]
	059 Move W8, [X0+224]
	060 Compare W8, 0
	061 JumpIfNotEqual {63}
	062 Call 0x1C17DFC
	063 Move X0, X21
	064 Move W1, W31
	065 Call ShadowRendering.CreateMaterials, X0, X1
	066 Move [X20+256], X0
	067 Compare X0, 0
	068 JumpIfEqual {82}
	069 Move W8, [X0+24]
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Add X8, X0, W19
	072 Move X0, [X8+32]
	073 Move X20, [X31+32]
	074 Move X19, [X31+40]
	075 Move X22, [X31+16]
	076 Move X21, [X31+24]
	077 Move X30, [X31+48]
	078 Return X0
	079 Move X0, [X20+256]
	080 Compare X0, 0
	081 JumpIfNotEqual {69}
	082 Call 0x1C17F20
	083 Call 0x1C17F28

Method: UnityEngine.Material GetGeometryUnshadowMaterial(UnityEngine.Rendering.Universal.Renderer2DData rendererData, System.Int32 colorIndex)

Disassembly:
	0x03A29BFC B 0x3A29D10
	0x03A29C00 B 0x3A29D68
	0x03A29C04 B 0x3A29D10
	0x03A29C08 B 0x3A29D10
	0x03A29C0C B 0x3A29D10
	0x03A29C10 B 0x3A29D10
	0x03A29C14 B 0x3A29D10
	0x03A29C18 B 0x3A29D10
	0x03A29C1C B 0x3A29D10
	0x03A29C20 B 0x3A29D10
	0x03A29C24 B 0x3A29D10
	0x03A29C28 B 0x3A29D10
	0x03A29C2C B 0x3A29D10
	0x03A29C30 B 0x3A29D10
	0x03A29C34 B 0x3A29D68
	0x03A29C38 B 0x3A29D68
	0x03A29C3C B 0x3A29D68
	0x03A29C40 B 0x3A29D10
	0x03A29C44 B 0x3A29D10
	0x03A29C48 B 0x3A29D10
	0x03A29C4C B 0x3A29D10
	0x03A29C50 B 0x3A29D10
	0x03A29C54 B 0x3A29D10
	0x03A29C58 B 0x3A29D10
	0x03A29C5C B 0x3A29D68
	0x03A29C60 B 0x3A29D68
	0x03A29C64 B 0x3A29D10
	0x03A29C68 B 0x3A29D10
	0x03A29C6C B 0x3A29D68
	0x03A29C70 B 0x3A29D10
	0x03A29C74 B 0x3A29D10
	0x03A29C78 B 0x3A29D10
	0x03A29C7C B 0x3A29D10
	0x03A29C80 B 0x3A29D10
	0x03A29C84 B 0x3A29D10
	0x03A29C88 B 0x3A29D10
	0x03A29C8C B 0x3A29D10
	0x03A29C90 B 0x3A29D10
	0x03A29C94 B 0x3A29D10
	0x03A29C98 B 0x3A29D10
	0x03A29C9C B 0x3A29D10
	0x03A29CA0 B 0x3A29D10
	0x03A29CA4 B 0x3A29D10
	0x03A29CA8 B 0x3A29D10
	0x03A29CAC B 0x3A29D10
	0x03A29CB0 B 0x3A29D10
	0x03A29CB4 B 0x3A29D10
	0x03A29CB8 B 0x3A29D10
	0x03A29CBC B 0x3A29D10
	0x03A29CC0 B 0x3A29D10
	0x03A29CC4 B 0x3A29D10
	0x03A29CC8 B 0x3A29D10
	0x03A29CCC B 0x3A29D10
	0x03A29CD0 B 0x3A29D10
	0x03A29CD4 B 0x3A29D10
	0x03A29CD8 B 0x3A29D68
	0x03A29CDC B 0x3A29D68
	0x03A29CE0 B 0x3A29D10
	0x03A29CE4 B 0x3A29D10
	0x03A29CE8 B 0x3A29D10
	0x03A29CEC B 0x3A29D10
	0x03A29CF0 B 0x3A29D10
	0x03A29CF4 B 0x3A29D10
	0x03A29CF8 B 0x3A29D10
	0x03A29CFC B 0x3A29D10

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x9BA000
	007 Move W8, [X21+67]
	008 Move W19, W1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x6CB000
	015 Move X0, [X0+1432]
	016 Call 0x1C17CF4
	017 Move X0, 0x72C000
	018 Move X0, [X0+1696]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+67], W8
	022 Compare X20, 0
	023 JumpIfEqual {82}
	024 Move X8, [X20+264]
	025 Compare X8, 0
	026 JumpIfEqual {55}
	027 Move X9, [X8+24]
	028 Compare X9, 0
	029 JumpIfEqual {55}
	030 Compare W9, 0
	031 JumpIfEqual {83}
	032 Move X0, [X8+32]
	033 Compare X0, 0
	034 JumpIfEqual {82}
	035 Move X21, [X20+208]
	036 Move X1, X31
	037 Call Material.get_shader, X0
	038 Move X8, 0x6CB000
	039 Move X8, [X8+1432]
	040 Move X22, X0
	041 Move X8, [X8]
	042 Move W9, [X8+224]
	043 Compare W9, 0
	044 JumpIfNotEqual {47}
	045 Move X0, X8
	046 Call 0x1C17DFC
	047 Move X0, X21
	048 Move X1, X22
	049 Move X2, X31
	050 Call Object.op_Inequality, X0, X1
	051 Move TEMP, X0
	052 And TEMP, TEMP, 1
	053 Compare TEMP, 1
	054 JumpIfNotEqual {79}
	055 Move X8, 0x72C000
	056 Move X8, [X8+1696]
	057 Move X21, [X20+208]
	058 Move X0, [X8]
	059 Move W8, [X0+224]
	060 Compare W8, 0
	061 JumpIfNotEqual {63}
	062 Call 0x1C17DFC
	063 Move X0, X21
	064 Move W1, W31
	065 Call ShadowRendering.CreateMaterials, X0, X1
	066 Move [X20+264], X0
	067 Compare X0, 0
	068 JumpIfEqual {82}
	069 Move W8, [X0+24]
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Add X8, X0, W19
	072 Move X0, [X8+32]
	073 Move X20, [X31+32]
	074 Move X19, [X31+40]
	075 Move X22, [X31+16]
	076 Move X21, [X31+24]
	077 Move X30, [X31+48]
	078 Return X0
	079 Move X0, [X20+264]
	080 Compare X0, 0
	081 JumpIfNotEqual {69}
	082 Call 0x1C17F20
	083 Call 0x1C17F28

Method: System.Void CreateShadowRenderTexture(UnityEngine.Rendering.Universal.IRenderPass2D pass, UnityEngine.Rendering.Universal.RenderingData renderingData, UnityEngine.Rendering.CommandBuffer cmdBuffer, System.Int32 shadowIndex)

Disassembly:
	0x03A29D00 B 0x3A29D68
	0x03A29D04 B 0x3A29D68
	0x03A29D08 B 0x3A29D10
	0x03A29D0C B 0x3A29D10
	0x03A29D10 MOV X19, X1
	0x03A29D14 MOV X20, X0
	0x03A29D18 CMP W19, 0x1
	0x03A29D1C B.NE 0x3A29D34
	0x03A29D20 MOV X0, X20
	0x03A29D24 BL 0x3EB1AD0
	0x03A29D28 LDR X21, [X0]
	0x03A29D2C BL 0x3EB1AE0
	0x03A29D30 B 0x3A29B70
	0x03A29D34 MOV X21, X31
	0x03A29D38 ADD X0, X31, 0x228
	0x03A29D3C MOV X1, X31
	0x03A29D40 BL 0x39B1DB4
	0x03A29D44 CBZ X21, 0x3A29D70
	0x03A29D48 MOV X0, X21
	0x03A29D4C BL 0x1C16F18
	0x03A29D50 MOV X19, X1
	0x03A29D54 MOV X20, X0
	0x03A29D58 B 0x3A29D38
	0x03A29D5C B 0x3A29D68
	0x03A29D60 B 0x3A29D68
	0x03A29D64 B 0x3A29D68
	0x03A29D68 MOV X19, X1
	0x03A29D6C MOV X20, X0
	0x03A29D70 CMP W19, 0x1
	0x03A29D74 B.NE 0x3A29DA0
	0x03A29D78 MOV X0, X20
	0x03A29D7C BL 0x3EB1AD0
	0x03A29D80 LDR X19, [X0]
	0x03A29D84 BL 0x3EB1AE0
	0x03A29D88 ADD X0, X31, 0x238
	0x03A29D8C MOV X1, X31
	0x03A29D90 BL 0x39B1DB4
	0x03A29D94 CBZ X19, 0x3A29B90
	0x03A29D98 MOV X0, X19
	0x03A29D9C BL 0x1C16F18
	0x03A29DA0 MOV X19, X31
	0x03A29DA4 B 0x3A29DAC
	0x03A29DA8 MOV X20, X0
	0x03A29DAC ADD X0, X31, 0x238
	0x03A29DB0 MOV X1, X31
	0x03A29DB4 BL 0x39B1DB4
	0x03A29DB8 CBNZ X19, 0x3A29DC4
	0x03A29DBC MOV X0, X20
	0x03A29DC0 BL 0x1D2C690

ISIL:
	001 Move [X31-64], X29
	002 Move [X31-56], X30
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Subtract X31, X31, 704
	010 Move X24, 0x9BA000
	011 Move X23, 0x72C000
	012 Move W8, [X24+68]
	013 Move X23, [X23+1696]
	014 Move W22, W3
	015 Move X19, X2
	016 Move X21, X1
	017 Move X20, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {27}
	022 Move X0, 0x72C000
	023 Move X0, [X0+1696]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X24+68], W8
	027 Move X0, [X23]
	028 Move W8, [X0+224]
	029 Compare W8, 0
	030 JumpIfNotEqual {33}
	031 Call 0x1C17DFC
	032 Move X0, [X23]
	033 Move X8, [X0+184]
	034 Move X8, [X8+88]
	035 Compare X8, 0
	036 JumpIfEqual {60}
	037 Move W9, [X8+24]
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Add X8, X8, W22
	040 Move W22, [X8+32]
	041 Add X0, X31, 8
	042 Move W2, 696
	043 Move X1, X21
	044 Call 0x3EB2AC0
	045 Add X2, X31, 8
	046 Move X0, X20
	047 Move W1, W22
	048 Move X3, X19
	049 Call ShadowRendering.CreateShadowRenderTexture, X0, X1, X2, X3
	050 Add X31, X31, 704
	051 Move X20, [X31+48]
	052 Move X19, [X31+56]
	053 Move X22, [X31+32]
	054 Move X21, [X31+40]
	055 Move X24, [X31+16]
	056 Move X23, [X31+24]
	057 Move X29, [X31+64]
	058 Move X30, [X31+72]
	059 Return 
	060 Call 0x1C17F20
	061 Call 0x1C17F28

Method: System.Boolean PrerenderShadows(UnityEngine.Rendering.Universal.IRenderPass2D pass, UnityEngine.Rendering.Universal.RenderingData renderingData, UnityEngine.Rendering.CommandBuffer cmdBuffer, System.Int32 layerToRender, UnityEngine.Rendering.Universal.Light2D light, System.Int32 shadowIndex, System.Single shadowIntensity)

Disassembly:
	0x03A29F90 CBNZ W8, 0x3A29F98
	0x03A29F94 BL 0x1C16DFC
	0x03A29F98 CBZ X19, 0x3A29FDC
	0x03A29F9C LDR X8, [X20]
	0x03A29FA0 FMOV S0, 1
	0x03A29FA4 MOV X0, X19
	0x03A29FA8 MOV X2, X31
	0x03A29FAC LDR X8, [X8 + 0xB8]
	0x03A29FB0 LDR W1, [X8 + 0xC]
	0x03A29FB4 BL 0x3C4CDDC
	0x03A29FB8 LDR X8, [X20]
	0x03A29FBC MOV X0, X19
	0x03A29FC0 LDP X20, X19, [X31 + 0x10]
	0x03A29FC4 FMOV S0, 1
	0x03A29FC8 LDR X8, [X8 + 0xB8]
	0x03A29FCC MOV X2, X31
	0x03A29FD0 LDR W1, [X8 + 0x10]
	0x03A29FD4 LDP X30, X21, [X31], #0x20
	0x03A29FD8 B 0x3C4CDDC
	0x03A29FDC BL 0x1C16F20
	0x03A29FE0 STP X30, X21, [X31 - 0x20]!
	0x03A29FE4 STP X20, X19, [X31 + 0x10]
	0x03A29FE8 ADRP X21, 0x9B9000
	0x03A29FEC LDRB W8, [X21 + 0x49]
	0x03A29FF0 MOV W20, W1
	0x03A29FF4 MOV X19, X0
	0x03A29FF8 TBNZ X8, 0x0, 0x3A2A010
	0x03A29FFC ADRP X0, 0x72B000
	0x03A2A000 LDR X0, [X0 + 0x6A0]
	0x03A2A004 BL 0x1C16CF4
	0x03A2A008 MOVZ W8, 0x1
	0x03A2A00C STRB W8, [X21 + 0x49]
	0x03A2A010 ADD W8, W20, 0x3
	0x03A2A014 CMP W20, 0x0
	0x03A2A018 CSEL W21, W8, W20, LT
	0x03A2A01C ANDS W31, W20, 0x3
	0x03A2A020 B.EQ 0x3A2A030
	0x03A2A024 LDP X20, X19, [X31 + 0x10]
	0x03A2A028 LDP X30, X21, [X31], #0x20
	0x03A2A02C RET
	0x03A2A030 ADRP X20, 0x72A000
	0x03A2A034 LDR X20, [X20 + 0x6A0]
	0x03A2A038 LDR X0, [X20]
	0x03A2A03C LDR W8, [X0 + 0xE0]
	0x03A2A040 CBNZ W8, 0x3A2A04C
	0x03A2A044 BL 0x1C16DFC
	0x03A2A048 LDR X0, [X20]
	0x03A2A04C LDR X8, [X0 + 0xB8]
	0x03A2A050 LDR X8, [X8 + 0x58]
	0x03A2A054 CBZ X8, 0x3A2A088
	0x03A2A058 LDR W10, [X8 + 0x18]
	0x03A2A05C SBFM W9, W21, 0x2, 0x1F
	0x03A2A060 CMP W9, W10
	0x03A2A064 B.CS 0x3A2A08C
	0x03A2A068 CBZ X19, 0x3A2A088
	0x03A2A06C ADD X8, X8, W9, 0x2, SXTW
	0x03A2A070 LDR W1, [X8 + 0x20]
	0x03A2A074 MOV X0, X19
	0x03A2A078 LDP X20, X19, [X31 + 0x10]
	0x03A2A07C MOV X2, X31
	0x03A2A080 LDP X30, X21, [X31], #0x20
	0x03A2A084 B 0x3C4CBB0
	0x03A2A088 BL 0x1C16F20
	0x03A2A08C BL 0x1C16F28
	0x03A2A090 SUB X31, X31, 0xB0
	0x03A2A094 STR X30, [X31 + 0x80]
	0x03A2A098 STP X22, X21, [X31 + 0x90]
	0x03A2A09C STP X20, X19, [X31 + 0xA0]
	0x03A2A0A0 ADRP X22, 0x9B8000
	0x03A2A0A4 ADRP X21, 0x72A000
	0x03A2A0A8 LDRB W8, [X22 + 0x4A]
	0x03A2A0AC LDR X21, [X21 + 0x6A0]
	0x03A2A0B0 MOV X20, X1
	0x03A2A0B4 MOV X19, X0
	0x03A2A0B8 TBNZ X8, 0x0, 0x3A2A0D0
	0x03A2A0BC ADRP X0, 0x72A000
	0x03A2A0C0 LDR X0, [X0 + 0x6A0]
	0x03A2A0C4 BL 0x1C16CF4
	0x03A2A0C8 MOVZ W8, 0x1
	0x03A2A0CC STRB W8, [X22 + 0x4A]
	0x03A2A0D0 LDR X0, [X21]
	0x03A2A0D4 LDR W8, [X0 + 0xE0]
	0x03A2A0D8 CBNZ W8, 0x3A2A0E4
	0x03A2A0DC BL 0x1C16DFC
	0x03A2A0E0 LDR X0, [X21]
	0x03A2A0E4 CBZ X20, 0x3A2A184
	0x03A2A0E8 CBZ X19, 0x3A2A184
	0x03A2A0EC LDR X8, [X0 + 0xB8]
	0x03A2A0F0 LDP S1, S2, [X20 + 0xB4]
	0x03A2A0F4 LDR V0, [X20 + 0xB0]
	0x03A2A0F8 FMOV S3, W31
	0x03A2A0FC LDR W1, [X8 + 0x24]
	0x03A2A100 MOV X0, X19
	0x03A2A104 MOV X2, X31
	0x03A2A108 BL 0x3C4CED8
	0x03A2A10C LDR X8, [X21]
	0x03A2A110 LDUR V0, [X20 + 0xDC]
	0x03A2A114 LDUR V1, [X20 + 0xFC]
	0x03A2A118 LDUR V2, [X20 + 0xEC]
	0x03A2A11C LDR X8, [X8 + 0xB8]
	0x03A2A120 LDUR V3, [X20 + 0xCC]
	0x03A2A124 ADD X2, X31, 0x40
	0x03A2A128 MOV X0, X19
	0x03A2A12C LDR W1, [X8 + 0x1C]
	0x03A2A130 MOV X3, X31
	0x03A2A134 STP V2, V1, [X31 + 0x60]
	0x03A2A138 STP V3, V0, [X31 + 0x40]
	0x03A2A13C BL 0x3C4D038
	0x03A2A140 LDR X8, [X21]
	0x03A2A144 ADD X9, X20, 0x10C
	0x03A2A148 LDP V0, V1, [X9 + 0x20]
	0x03A2A14C LDP V3, V2, [X9]
	0x03A2A150 LDR X8, [X8 + 0xB8]

ISIL:
	001 Move [X31-80], X29
	002 Move [X31-72], X30
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Subtract X31, X31, 1488
	012 Move X24, 0x9BA000
	013 Move W8, [X24+69]
	014 Move W19, W5
	015 Move X20, X4
	016 Move W21, W3
	017 Move X22, X2
	018 Move X25, X1
	019 Move X23, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {29}
	024 Move X0, 0x72C000
	025 Move X0, [X0+1696]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X24+69], W8
	029 Move X26, 0x72C000
	030 Move X26, [X26+1696]
	031 Add W8, W19, 3
	032 NotImplemented "Instruction CMP not yet implemented."
	033 NotImplemented "Instruction CSEL not yet implemented."
	034 And W9, W8, 0xFFFFFFFC
	035 Subtract W24, W19, W9
	036 NotImplemented "Instruction SBFM not yet implemented."
	037 Add X0, X31, 784
	038 Move W2, 696
	039 Move X1, X25
	040 Call 0x3EB2AC0
	041 Move X0, [X26]
	042 Move W8, [X0+224]
	043 Compare W8, 0
	044 JumpIfNotEqual {46}
	045 Call 0x1C17DFC
	046 Add X0, X31, 88
	047 Add X1, X31, 784
	048 Move W2, 696
	049 Call 0x3EB2AC0
	050 Add X1, X31, 88
	051 Move X0, X23
	052 Move X2, X22
	053 Move W3, W19
	054 Call ShadowRendering.CreateShadowRenderTexture, X0, X1, X2, X3
	055 Move X0, [X26]
	056 Move W8, [X0+224]
	057 Compare W8, 0
	058 JumpIfNotEqual {61}
	059 Call 0x1C17DFC
	060 Move X0, [X26]
	061 Move X8, [X0+184]
	062 Move X8, [X8+80]
	063 Compare X8, 0
	064 JumpIfEqual {134}
	065 Move W9, [X8+24]
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Move X25, W19
	068 Add X8, X8, X25
	069 Move X8, [X8+32]
	070 Compare X8, 0
	071 JumpIfEqual {134}
	072 Move X9, [X8+72]
	073 NotImplemented "Instruction LDUR not yet implemented."
	074 NotImplemented "Instruction LDUR not yet implemented."
	075 Add X5, X31, 48
	076 Move X0, X23
	077 Move X2, X22
	078 Move W3, W21
	079 Move X4, X20
	080 Move W6, W24
	081 Move [X31+80], X9
	082 Move [X31+48], V1
	083 Move [X31+56], V0
	084 Call ShadowRendering.RenderShadows, X0, X1, X2, X3, X4, V0, X5, X6
	085 Move X8, [X26]
	086 Move X8, [X8+184]
	087 Move X9, [X8+80]
	088 Compare X9, 0
	089 JumpIfEqual {134}
	090 Move W10, [X9+24]
	091 NotImplemented "Instruction CMP not yet implemented."
	092 Add X9, X9, X25
	093 Move X9, [X9+32]
	094 Compare X9, 0
	095 JumpIfEqual {134}
	096 Move X8, [X8+96]
	097 Move X10, [X9+72]
	098 NotImplemented "Instruction LDUR not yet implemented."
	099 NotImplemented "Instruction LDUR not yet implemented."
	100 Move [X31+816], X10
	101 Move [X31+784], V1
	102 Move [X31+792], V0
	103 Compare X8, 0
	104 JumpIfEqual {134}
	105 Move V0, [X31+784]
	106 Move V1, [X31+800]
	107 Move X9, [X31+816]
	108 Move [X31], V0
	109 Move [X31+8], V1
	110 Move [X31+32], X9
	111 Move W9, [X8+24]
	112 NotImplemented "Instruction CMP not yet implemented."
	113 Move X10, [X31+32]
	114 Move V0, [X31]
	115 Move V1, [X31+16]
	116 Move W9, 40
	117 NotImplemented "Instruction MADD not yet implemented."
	118 And W0, W0, 1
	119 Move [X8+64], X10
	120 Move [X8+32], V0
	121 Move [X8+40], V1
	122 Add X31, X31, 1488
	123 Move X20, [X31+64]
	124 Move X19, [X31+72]
	125 Move X22, [X31+48]
	126 Move X21, [X31+56]
	127 Move X24, [X31+32]
	128 Move X23, [X31+40]
	129 Move X26, [X31+16]
	130 Move X25, [X31+24]
	131 Move X29, [X31+80]
	132 Move X30, [X31+88]
	133 Return X0
	134 Call 0x1C17F20
	135 Call 0x1C17F28

Method: System.Void SetGlobalShadowTexture(UnityEngine.Rendering.CommandBuffer cmdBuffer, UnityEngine.Rendering.Universal.Light2D light, System.Int32 shadowIndex)

Disassembly:
	0x03A2ADD0 ADRP X8, 0x72A000
	0x03A2ADD4 LDR X8, [X8 + 0xBB8]
	0x03A2ADD8 MOV X0, X19
	0x03A2ADDC MOV W1, W24
	0x03A2ADE0 LDR X2, [X8]
	0x03A2ADE4 ADD X8, X31, 0x10
	0x03A2ADE8 BL 0x3140568
	0x03A2ADEC CBZ X20, 0x3A2B0DC
	0x03A2ADF0 ADRP X8, 0x72A000
	0x03A2ADF4 LDUR V0, [X31 + 0x18]
	0x03A2ADF8 LDP W27, W25, [X31 + 0x10]
	0x03A2ADFC LDR X8, [X8 + 0xBC8]
	0x03A2AE00 MOV X0, X20
	0x03A2AE04 UNIMPLEMENTED
	0x03A2AE08 MOV S8, V0.S[1]
	0x03A2AE0C LDR X2, [X8]
	0x03A2AE10 MOV S9, V0.S[2]
	0x03A2AE14 MOV S10, V0.S[3]
	0x03A2AE18 MOV W1, W25
	0x03A2AE1C MOV V1.16B, V8.16B
	0x03A2AE20 MOV V2.16B, V9.16B
	0x03A2AE24 MOV V3.16B, V10.16B
	0x03A2AE28 STR V0, [X31]
	0x03A2AE2C BL 0x30CEB58
	0x03A2AE30 CBZ X23, 0x3A2B0DC
	0x03A2AE34 ADRP X8, 0x6CD000
	0x03A2AE38 LDR W26, [X23 + 0x18]
	0x03A2AE3C LDR X8, [X8 + 0x980]
	0x03A2AE40 MOV X0, X23
	0x03A2AE44 MOV W1, W27
	0x03A2AE48 LDR X2, [X8]
	0x03A2AE4C BL 0x30CBE84
	0x03A2AE50 ADRP X9, 0x6CD000
	0x03A2AE54 LDR W10, [X23 + 0x1C]
	0x03A2AE58 LDR X8, [X23 + 0x10]
	0x03A2AE5C LDR X9, [X9 + 0x3B8]
	0x03A2AE60 ADD W10, W10, 0x1
	0x03A2AE64 LDR X9, [X9]
	0x03A2AE68 STR W10, [X23 + 0x1C]
	0x03A2AE6C CBZ X8, 0x3A2B0DC
	0x03A2AE70 LDRSW X10, [X23 + 0x18]
	0x03A2AE74 LDR W11, [X8 + 0x18]
	0x03A2AE78 CMP W10, W11
	0x03A2AE7C B.CS 0x3A2AE9C
	0x03A2AE80 MOVZ W11, 0xC
	0x03A2AE84 ADD W9, W10, 0x1
	0x03A2AE88 MADD X8, X10, X11, X8
	0x03A2AE8C STR W9, [X23 + 0x18]
	0x03A2AE90 STP S0, S1, [X8 + 0x20]
	0x03A2AE94 STR S2, [X8 + 0x28]
	0x03A2AE98 B 0x3A2AEB0
	0x03A2AE9C LDR X8, [X9 + 0x20]
	0x03A2AEA0 MOV X0, X23
	0x03A2AEA4 LDR X8, [X8 + 0xC0]
	0x03A2AEA8 LDR X1, [X8 + 0x70]
	0x03A2AEAC BL 0x30CC1B4
	0x03A2AEB0 CBZ X22, 0x3A2B0DC
	0x03A2AEB4 ADRP X8, 0x723000
	0x03A2AEB8 LDR X8, [X8 + 0xC18]
	0x03A2AEBC MOV X0, X22
	0x03A2AEC0 MOV W1, W27
	0x03A2AEC4 LDR X2, [X8]
	0x03A2AEC8 BL 0x2F6D100
	0x03A2AECC ADRP X9, 0x723000
	0x03A2AED0 LDR W10, [X22 + 0x1C]
	0x03A2AED4 LDR X8, [X22 + 0x10]
	0x03A2AED8 LDR X9, [X9 + 0xC10]
	0x03A2AEDC ADD W10, W10, 0x1
	0x03A2AEE0 LDR X9, [X9]
	0x03A2AEE4 STR W10, [X22 + 0x1C]
	0x03A2AEE8 CBZ X8, 0x3A2B0DC
	0x03A2AEEC LDRSW X10, [X22 + 0x18]
	0x03A2AEF0 LDR W11, [X8 + 0x18]
	0x03A2AEF4 CMP W10, W11
	0x03A2AEF8 B.CS 0x3A2AF14
	0x03A2AEFC ADD W9, W10, 0x1
	0x03A2AF00 ADD X8, X8, X10, 0x4, LSL
	0x03A2AF04 STR W9, [X22 + 0x18]
	0x03A2AF08 STP S0, S1, [X8 + 0x20]
	0x03A2AF0C STP S2, S3, [X8 + 0x28]
	0x03A2AF10 B 0x3A2AF28
	0x03A2AF14 LDR X8, [X9 + 0x20]
	0x03A2AF18 MOV X0, X22
	0x03A2AF1C LDR X8, [X8 + 0xC0]
	0x03A2AF20 LDR X1, [X8 + 0x70]
	0x03A2AF24 BL 0x2F6D428
	0x03A2AF28 LDR W10, [X20 + 0x1C]
	0x03A2AF2C LDR X8, [X20 + 0x10]
	0x03A2AF30 LDR X9, [X28]
	0x03A2AF34 ADD W10, W10, 0x1
	0x03A2AF38 STR W10, [X20 + 0x1C]
	0x03A2AF3C CBZ X8, 0x3A2B0DC
	0x03A2AF40 LDRSW X10, [X20 + 0x18]
	0x03A2AF44 LDR W11, [X8 + 0x18]
	0x03A2AF48 CMP W10, W11
	0x03A2AF4C B.CS 0x3A2AF68
	0x03A2AF50 LDR V0, [X31]

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+96], D8
	003 Move [X31+112], X30
	004 Move [X31+120], X23
	005 Move [X31+128], X22
	006 Move [X31+136], X21
	007 Move [X31+144], X20
	008 Move [X31+152], X19
	009 Move X23, 0x9B9000
	010 Move X22, 0x72B000
	011 Move W8, [X23+70]
	012 Move X22, [X22+1696]
	013 Move W21, W2
	014 Move X20, X1
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {28}
	020 Move X0, 0x72B000
	021 Move X0, [X0+1696]
	022 Call 0x1C17CF4
	023 Move X0, 0x72B000
	024 Move X0, [X0+2592]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X23+70], W8
	028 Move X0, [X22]
	029 Add W9, W21, 3
	030 NotImplemented "Instruction CMP not yet implemented."
	031 NotImplemented "Instruction CSEL not yet implemented."
	032 Move W8, [X0+224]
	033 Compare W8, 0
	034 JumpIfNotEqual {37}
	035 Call 0x1C17DFC
	036 Move X0, [X22]
	037 Move X8, [X0+184]
	038 Move X8, [X8+96]
	039 Compare X8, 0
	040 JumpIfEqual {114}
	041 Move W10, [X8+24]
	042 NotImplemented "Instruction SBFM not yet implemented."
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Move W10, 40
	045 NotImplemented "Instruction SMADDL not yet implemented."
	046 Move X9, [X8+64]
	047 Move V1, [X8+32]
	048 Move V0, [X8+48]
	049 Move [X31+80], X9
	050 Move [X31+48], V1
	051 Move [X31+56], V0
	052 Compare X19, 0
	053 JumpIfEqual {114}
	054 Move X8, 0x72B000
	055 Move X8, [X8+2592]
	056 Move V0, [X31+48]
	057 Move V1, [X31+64]
	058 Move X9, [X31+80]
	059 Add X2, X31, 0
	060 Move X1, [X8]
	061 Move X0, X19
	062 Move X3, X31
	063 Move [X31], V0
	064 Move [X31+8], V1
	065 Move [X31+32], X9
	066 Call CommandBuffer.SetGlobalTexture, X0, X1, X2
	067 Move X8, [X22]
	068 Move X9, [X8+184]
	069 Move X8, [X9+104]
	070 Compare X8, 0
	071 JumpIfEqual {114}
	072 Move W11, [X8+24]
	073 And W10, W23, 0xFFFFFFFC
	074 Subtract W10, W21, W10
	075 NotImplemented "Instruction CMP not yet implemented."
	076 Move W1, [X9+24]
	077 Move X9, W10
	078 Add X8, X8, X9
	079 Move S0, [X8+32]
	080 Move S1, [X8+36]
	081 Move S2, [X8+40]
	082 Move S3, [X8+44]
	083 Move X0, X19
	084 Move X2, X31
	085 Call CommandBuffer.SetGlobalColor, X0, X1, X2
	086 Compare X20, 0
	087 JumpIfEqual {114}
	088 Move X8, [X22]
	089 Move V0, [X20+128]
	090 Move S8, 1
	091 Move X0, X19
	092 Move X8, [X8+184]
	093 Subtract S0, S8, S0
	094 Move X2, X31
	095 Move W1, [X8+12]
	096 Call CommandBuffer.SetGlobalFloat, X0, X1, V0
	097 Move X8, [X22]
	098 Move V0, [X20+136]
	099 Move X0, X19
	100 Move X2, X31
	101 Move X8, [X8+184]
	102 Subtract S0, S8, S0
	103 Move W1, [X8+16]
	104 Call CommandBuffer.SetGlobalFloat, X0, X1, V0
	105 Move X20, [X31+144]
	106 Move X19, [X31+152]
	107 Move X22, [X31+128]
	108 Move X21, [X31+136]
	109 Move X30, [X31+112]
	110 Move X23, [X31+120]
	111 Move V8, [X31+96]
	112 Add X31, X31, 160
	113 Return 
	114 Call 0x1C17F20
	115 Call 0x1C17F28

Method: System.Void DisableGlobalShadowTexture(UnityEngine.Rendering.CommandBuffer cmdBuffer)

Disassembly:
	0x03A2AF54 ADD W9, W10, 0x1
	0x03A2AF58 ADD X8, X8, X10, 0x4, LSL
	0x03A2AF5C STR W9, [X20 + 0x18]
	0x03A2AF60 STR V0, [X8 + 0x2]
	0x03A2AF64 B 0x3A2AF8C
	0x03A2AF68 LDR X8, [X9 + 0x20]
	0x03A2AF6C MOV X0, X20
	0x03A2AF70 LDR V0, [X31]
	0x03A2AF74 MOV V1.16B, V8.16B
	0x03A2AF78 LDR X8, [X8 + 0xC0]
	0x03A2AF7C MOV V2.16B, V9.16B
	0x03A2AF80 MOV V3.16B, V10.16B
	0x03A2AF84 LDR X1, [X8 + 0x70]
	0x03A2AF88 BL 0x30CEE24
	0x03A2AF8C CBZ X21, 0x3A2B0DC
	0x03A2AF90 LDR W10, [X21 + 0x1C]
	0x03A2AF94 LDR X8, [X21 + 0x10]
	0x03A2AF98 LDR X9, [X29]
	0x03A2AF9C ADD W10, W10, 0x1
	0x03A2AFA0 STR W10, [X21 + 0x1C]
	0x03A2AFA4 CBZ X8, 0x3A2B0DC
	0x03A2AFA8 LDRSW X10, [X21 + 0x18]
	0x03A2AFAC LDR W11, [X8 + 0x18]
	0x03A2AFB0 CMP W10, W11
	0x03A2AFB4 B.CS 0x3A2AFD8
	0x03A2AFB8 ADD W11, W10, 0x1
	0x03A2AFBC ADD X10, X8, X10, 0x2, LSL
	0x03A2AFC0 STR W11, [X21 + 0x18]
	0x03A2AFC4 STR W27, [X10 + 0x20]
	0x03A2AFC8 LDR W10, [X21 + 0x1C]
	0x03A2AFCC ADD W10, W10, 0x1
	0x03A2AFD0 STR W10, [X21 + 0x1C]
	0x03A2AFD4 B 0x3A2B008
	0x03A2AFD8 LDR X8, [X9 + 0x20]
	0x03A2AFDC MOV X0, X21

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x9B9000
	006 Move X20, 0x72B000
	007 Move W8, [X21+71]
	008 Move X20, [X20+1696]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x72B000
	015 Move X0, [X0+1696]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+71], W8
	019 Move X0, [X20]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Compare X19, 0
	025 JumpIfEqual {45}
	026 Move X8, [X20]
	027 Move S0, 1
	028 Move X0, X19
	029 Move X2, X31
	030 Move X8, [X8+184]
	031 Move W1, [X8+12]
	032 Call CommandBuffer.SetGlobalFloat, X0, X1, V0
	033 Move X8, [X20]
	034 Move X0, X19
	035 Move X20, [X31+16]
	036 Move X19, [X31+24]
	037 Move S0, 1
	038 Move X8, [X8+184]
	039 Move X2, X31
	040 Move W1, [X8+16]
	041 Move X30, [X31+32]
	042 Move X21, [X31+40]
	043 Call CommandBuffer.SetGlobalFloat, X0, X1, V0
	044 Return 
	045 Call 0x1C17F20

Method: System.Void CreateShadowRenderTexture(UnityEngine.Rendering.Universal.IRenderPass2D pass, System.Int32 handleId, UnityEngine.Rendering.Universal.RenderingData renderingData, UnityEngine.Rendering.CommandBuffer cmdBuffer)

Disassembly:
	0x03A29DC4 MOV X0, X19
	0x03A29DC8 BL 0x1C16F18
	0x03A29DCC BL 0x1990590
	0x03A29DD0 SUB X31, X31, 0xA0
	0x03A29DD4 STR D8, [X31 + 0x60]
	0x03A29DD8 STP X30, X23, [X31 + 0x70]
	0x03A29DDC STP X22, X21, [X31 + 0x80]
	0x03A29DE0 STP X20, X19, [X31 + 0x90]
	0x03A29DE4 ADRP X23, 0x9B9000
	0x03A29DE8 ADRP X22, 0x72B000
	0x03A29DEC LDRB W8, [X23 + 0x46]
	0x03A29DF0 LDR X22, [X22 + 0x6A0]
	0x03A29DF4 MOV W21, W2
	0x03A29DF8 MOV X20, X1
	0x03A29DFC MOV X19, X0
	0x03A29E00 TBNZ X8, 0x0, 0x3A29E24
	0x03A29E04 ADRP X0, 0x72B000
	0x03A29E08 LDR X0, [X0 + 0x6A0]
	0x03A29E0C BL 0x1C16CF4
	0x03A29E10 ADRP X0, 0x72B000
	0x03A29E14 LDR X0, [X0 + 0xA20]
	0x03A29E18 BL 0x1C16CF4
	0x03A29E1C MOVZ W8, 0x1
	0x03A29E20 STRB W8, [X23 + 0x46]
	0x03A29E24 LDR X0, [X22]
	0x03A29E28 ADD W9, W21, 0x3
	0x03A29E2C CMP W21, 0x0
	0x03A29E30 CSEL W23, W9, W21, LT
	0x03A29E34 LDR W8, [X0 + 0xE0]
	0x03A29E38 CBNZ W8, 0x3A29E44
	0x03A29E3C BL 0x1C16DFC
	0x03A29E40 LDR X0, [X22]
	0x03A29E44 LDR X8, [X0 + 0xB8]
	0x03A29E48 LDR X8, [X8 + 0x60]
	0x03A29E4C CBZ X8, 0x3A29F4C
	0x03A29E50 LDR W10, [X8 + 0x18]
	0x03A29E54 SBFM W9, W23, 0x2, 0x1F
	0x03A29E58 CMP W9, W10
	0x03A29E5C B.CS 0x3A29F50
	0x03A29E60 MOVZ W10, 0x28
	0x03A29E64 SMADDL X8, X9, X10, X8
	0x03A29E68 LDR X9, [X8 + 0x40]
	0x03A29E6C LDP V1, V0, [X8 + 0x20]
	0x03A29E70 STR X9, [X31 + 0x50]
	0x03A29E74 STP V1, V0, [X31 + 0x30]
	0x03A29E78 CBZ X19, 0x3A29F4C
	0x03A29E7C ADRP X8, 0x72B000
	0x03A29E80 LDR X8, [X8 + 0xA20]
	0x03A29E84 LDP V0, V1, [X31 + 0x30]
	0x03A29E88 LDR X9, [X31 + 0x50]
	0x03A29E8C ADD X2, X31, 0x0
	0x03A29E90 LDR X1, [X8]
	0x03A29E94 MOV X0, X19
	0x03A29E98 MOV X3, X31
	0x03A29E9C STP V0, V1, [X31]
	0x03A29EA0 STR X9, [X31 + 0x20]
	0x03A29EA4 BL 0x3C4FC28
	0x03A29EA8 LDR X8, [X22]
	0x03A29EAC LDR X9, [X8 + 0xB8]
	0x03A29EB0 LDR X8, [X9 + 0x68]
	0x03A29EB4 CBZ X8, 0x3A29F4C
	0x03A29EB8 LDR W11, [X8 + 0x18]
	0x03A29EBC AND W10, W23, 0xFFFFFFFC
	0x03A29EC0 SUB W10, W21, W10
	0x03A29EC4 CMP W10, W11
	0x03A29EC8 B.CS 0x3A29F50
	0x03A29ECC LDR W1, [X9 + 0x18]
	0x03A29ED0 SXTW X9, W10
	0x03A29ED4 ADD X8, X8, X9, 0x4, LSL
	0x03A29ED8 LDP S0, S1, [X8 + 0x20]
	0x03A29EDC LDP S2, S3, [X8 + 0x28]
	0x03A29EE0 MOV X0, X19
	0x03A29EE4 MOV X2, X31
	0x03A29EE8 BL 0x3C4CF88
	0x03A29EEC CBZ X20, 0x3A29F4C
	0x03A29EF0 LDR X8, [X22]
	0x03A29EF4 LDR V0, [X20 + 0x80]
	0x03A29EF8 FMOV S8, 1
	0x03A29EFC MOV X0, X19
	0x03A29F00 LDR X8, [X8 + 0xB8]
	0x03A29F04 FSUB S0, S8, S0
	0x03A29F08 MOV X2, X31
	0x03A29F0C LDR W1, [X8 + 0xC]
	0x03A29F10 BL 0x3C4CDDC
	0x03A29F14 LDR X8, [X22]
	0x03A29F18 LDR V0, [X20 + 0x88]
	0x03A29F1C MOV X0, X19
	0x03A29F20 MOV X2, X31
	0x03A29F24 LDR X8, [X8 + 0xB8]
	0x03A29F28 FSUB S0, S8, S0
	0x03A29F2C LDR W1, [X8 + 0x10]
	0x03A29F30 BL 0x3C4CDDC
	0x03A29F34 LDP X20, X19, [X31 + 0x90]
	0x03A29F38 LDP X22, X21, [X31 + 0x80]
	0x03A29F3C LDP X30, X23, [X31 + 0x70]
	0x03A29F40 LDR V8, [X31 + 0x60]
	0x03A29F44 ADD X31, X31, 0xA0
	0x03A29F48 RET
	0x03A29F4C BL 0x1C16F20
	0x03A29F50 BL 0x1C16F28
	0x03A29F54 STP X30, X21, [X31 - 0x20]!
	0x03A29F58 STP X20, X19, [X31 + 0x10]
	0x03A29F5C ADRP X21, 0x9B9000
	0x03A29F60 ADRP X20, 0x72B000
	0x03A29F64 LDRB W8, [X21 + 0x47]
	0x03A29F68 LDR X20, [X20 + 0x6A0]
	0x03A29F6C MOV X19, X0
	0x03A29F70 TBNZ X8, 0x0, 0x3A29F88
	0x03A29F74 ADRP X0, 0x72B000
	0x03A29F78 LDR X0, [X0 + 0x6A0]
	0x03A29F7C BL 0x1C16CF4
	0x03A29F80 MOVZ W8, 0x1
	0x03A29F84 STRB W8, [X21 + 0x47]
	0x03A29F88 LDR X0, [X20]
	0x03A29F8C LDR W8, [X0 + 0xE0]

ISIL:
	001 Subtract X31, X31, 240
	002 Move [X31+192], X30
	003 Move [X31+200], X23
	004 Move [X31+208], X22
	005 Move [X31+216], X21
	006 Move [X31+224], X20
	007 Move [X31+232], X19
	008 Move X23, 0x9BA000
	009 Move W8, [X23+72]
	010 Move X19, X3
	011 Move X21, X2
	012 Move W20, W1
	013 Move X22, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0x72C000
	019 Move X0, [X0+1632]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X23+72], W8
	023 NotImplemented "Instruction MOVI not yet implemented."
	024 Move [X31+176], W31
	025 Move [X31+144], V0
	026 Move [X31+152], V0
	027 Move [X31+8], V0
	028 Compare X22, 0
	029 JumpIfEqual {132}
	030 Move X10, 0x72C000
	031 Move X8, [X22]
	032 Move X10, [X10+1632]
	033 NotImplemented "Instruction LDRH not yet implemented."
	034 Move X1, [X10]
	035 Compare X9, 0
	036 JumpIfEqual {43}
	037 Move X10, [X8+176]
	038 Add X10, X10, 8
	039 NotImplemented "Instruction LDUR not yet implemented."
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Subtract X9, X9, 1
	042 Add X10, X10, 16
	043 Move X0, X22
	044 Move W2, W31
	045 Call 0x1C5D788
	046 NotImplemented "Instruction LDRSW not yet implemented."
	047 Add X8, X8, X9
	048 Add X0, X8, 312
	049 Move X8, [X0]
	050 Move X1, [X0+8]
	051 Move X0, X22
	052 NotImplemented "Instruction BLR not yet implemented."
	053 Compare X0, 0
	054 JumpIfEqual {132}
	055 Move X8, -49537024
	056 Move V0, [X0+80]
	057 Move V1, [X8+816]
	058 Move S2, 1
	059 Move W8, 0x7F800000
	060 NotImplemented "Instruction FMIN not yet implemented."
	061 NotImplemented "Instruction FCMP not yet implemented."
	062 NotImplemented "Instruction FCSEL not yet implemented."
	063 Move S1, [X21+240]
	064 Move S2, [X21+244]
	065 Move W9, 0x80000000
	066 Add X0, X31, 128
	067 Move X3, X31
	068 NotImplemented "Instruction SCVTF not yet implemented."
	069 NotImplemented "Instruction SCVTF not yet implemented."
	070 Multiply S1, S0, S1
	071 Multiply S0, S0, S2
	072 Move S2, W8
	073 NotImplemented "Instruction FCVTZS not yet implemented."
	074 NotImplemented "Instruction FCMP not yet implemented."
	075 NotImplemented "Instruction FCVTZS not yet implemented."
	076 NotImplemented "Instruction CSEL not yet implemented."
	077 NotImplemented "Instruction FCMP not yet implemented."
	078 NotImplemented "Instruction CSEL not yet implemented."
	079 Call RenderTextureDescriptor..ctor, X0, X1, X2
	080 Add X0, X31, 128
	081 Move W1, W31
	082 Move X2, X31
	083 Call RenderTextureDescriptor.set_useMipMap, X0, X1
	084 Add X0, X31, 128
	085 Move W1, W31
	086 Move X2, X31
	087 Call RenderTextureDescriptor.set_autoGenerateMips, X0, X1
	088 Add X0, X31, 128
	089 Move W1, 24
	090 Move X2, X31
	091 Call RenderTextureDescriptor.set_depthBufferBits, X0, X1
	092 Add X0, X31, 128
	093 Move W1, 8
	094 Move X2, X31
	095 Call RenderTextureDescriptor.set_graphicsFormat, X0, X1
	096 Move W8, 1
	097 Move W9, 2
	098 Move [X31+136], W8
	099 Move [X31+160], W9
	100 Move V0, [X31+128]
	101 Move V1, [X31+144]
	102 Move V2, [X31+10]
	103 Move W8, [X31+176]
	104 Move [X31+64], V0
	105 Move [X31+72], V1
	106 Move [X31+6], V2
	107 Move [X31+112], W8
	108 Compare X19, 0
	109 JumpIfEqual {132}
	110 Move V0, [X31+64]
	111 Move V1, [X31+80]
	112 Move V2, [X31+6]
	113 Move W8, [X31+112]
	114 Add X2, X31, 0
	115 Move W3, 1
	116 Move X0, X19
	117 Move W1, W20
	118 Move X4, X31
	119 Move [X31], V0
	120 Move [X31+8], V1
	121 Move [X31+2], V2
	122 Move [X31+48], W8
	123 Call CommandBuffer.GetTemporaryRT, X0, X1, X2, X3
	124 Move X20, [X31+224]
	125 Move X19, [X31+232]
	126 Move X22, [X31+208]
	127 Move X21, [X31+216]
	128 Move X30, [X31+192]
	129 Move X23, [X31+200]
	130 Add X31, X31, 240
	131 Return 
	132 Call 0x1C17F20

Method: System.Void ReleaseShadowRenderTexture(UnityEngine.Rendering.CommandBuffer cmdBuffer, System.Int32 shadowIndex)

Disassembly:
	0x03A2AFE0 MOV W1, W27
	0x03A2AFE4 LDR X8, [X8 + 0xC0]
	0x03A2AFE8 LDR X2, [X8 + 0x70]
	0x03A2AFEC BL 0x2FDC70C
	0x03A2AFF0 LDR W10, [X21 + 0x1C]
	0x03A2AFF4 LDR X8, [X21 + 0x10]
	0x03A2AFF8 LDR X9, [X29]
	0x03A2AFFC ADD W10, W10, 0x1
	0x03A2B000 STR W10, [X21 + 0x1C]
	0x03A2B004 CBZ X8, 0x3A2B0DC
	0x03A2B008 LDRSW X10, [X21 + 0x18]
	0x03A2B00C LDR W11, [X8 + 0x18]
	0x03A2B010 CMP W10, W11
	0x03A2B014 B.CS 0x3A2B038
	0x03A2B018 ADD W11, W10, 0x1
	0x03A2B01C ADD X10, X8, X10, 0x2, LSL
	0x03A2B020 STR W11, [X21 + 0x18]
	0x03A2B024 STR W26, [X10 + 0x20]
	0x03A2B028 LDR W10, [X21 + 0x1C]
	0x03A2B02C ADD W10, W10, 0x1
	0x03A2B030 STR W10, [X21 + 0x1C]
	0x03A2B034 B 0x3A2B068
	0x03A2B038 LDR X8, [X9 + 0x20]
	0x03A2B03C MOV X0, X21
	0x03A2B040 MOV W1, W26
	0x03A2B044 LDR X8, [X8 + 0xC0]
	0x03A2B048 LDR X2, [X8 + 0x70]
	0x03A2B04C BL 0x2FDC70C
	0x03A2B050 LDR W10, [X21 + 0x1C]
	0x03A2B054 LDR X8, [X21 + 0x10]
	0x03A2B058 LDR X9, [X29]
	0x03A2B05C ADD W10, W10, 0x1
	0x03A2B060 STR W10, [X21 + 0x1C]
	0x03A2B064 CBZ X8, 0x3A2B0DC
	0x03A2B068 LDRSW X10, [X21 + 0x18]
	0x03A2B06C LDR W11, [X8 + 0x18]
	0x03A2B070 CMP W10, W11
	0x03A2B074 B.CS 0x3A2B08C
	0x03A2B078 ADD W9, W10, 0x1
	0x03A2B07C ADD X8, X8, X10, 0x2, LSL
	0x03A2B080 STR W9, [X21 + 0x18]
	0x03A2B084 STR W25, [X8 + 0x20]
	0x03A2B088 B 0x3A2B0A4
	0x03A2B08C LDR X8, [X9 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x9B9000
	006 Move W8, [X21+73]
	007 Move W20, W1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x72B000
	014 Move X0, [X0+1696]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+73], W8
	018 Add W8, W20, 3
	019 NotImplemented "Instruction CMP not yet implemented."
	020 NotImplemented "Instruction CSEL not yet implemented."
	021 And W31, W20, 3
	022 Move X20, [X31+16]
	023 Move X19, [X31+24]
	024 Move X30, [X31+32]
	025 Move X21, [X31+40]
	026 Return 
	027 Move X20, 0x72A000
	028 Move X20, [X20+1696]
	029 Move X0, [X20]
	030 Move W8, [X0+224]
	031 Compare W8, 0
	032 JumpIfNotEqual {35}
	033 Call 0x1C17DFC
	034 Move X0, [X20]
	035 Move X8, [X0+184]
	036 Move X8, [X8+88]
	037 Compare X8, 0
	038 JumpIfEqual {54}
	039 Move W10, [X8+24]
	040 NotImplemented "Instruction SBFM not yet implemented."
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Compare X19, 0
	043 JumpIfEqual {54}
	044 Add X8, X8, W9
	045 Move W1, [X8+32]
	046 Move X0, X19
	047 Move X20, [X31+16]
	048 Move X19, [X31+24]
	049 Move X2, X31
	050 Move X30, [X31+32]
	051 Move X21, [X31+40]
	052 Call CommandBuffer.ReleaseTemporaryRT, X0, X1
	053 Return 
	054 Call 0x1C17F20
	055 Call 0x1C17F28

Method: System.Void SetShadowProjectionGlobals(UnityEngine.Rendering.CommandBuffer cmdBuffer, UnityEngine.Rendering.Universal.ShadowCaster2D shadowCaster)

Disassembly:
	0x03A2B090 MOV X0, X21
	0x03A2B094 MOV W1, W25
	0x03A2B098 LDR X8, [X8 + 0xC0]
	0x03A2B09C LDR X2, [X8 + 0x70]
	0x03A2B0A0 BL 0x2FDC70C
	0x03A2B0A4 LDR W8, [X19 + 0x18]
	0x03A2B0A8 ADD W24, W24, 0x1
	0x03A2B0AC CMP W24, W8
	0x03A2B0B0 B.LT 0x3A2ADC0
	0x03A2B0B4 LDP X20, X19, [X31 + 0xA0]
	0x03A2B0B8 LDP X22, X21, [X31 + 0x90]
	0x03A2B0BC LDP X24, X23, [X31 + 0x80]
	0x03A2B0C0 LDP X26, X25, [X31 + 0x70]
	0x03A2B0C4 LDP X28, X27, [X31 + 0x60]
	0x03A2B0C8 LDP X29, X30, [X31 + 0x50]
	0x03A2B0CC LDP D9, D8, [X31 + 0x40]
	0x03A2B0D0 LDR V10, [X31 + 0x30]
	0x03A2B0D4 ADD X31, X31, 0xB0
	0x03A2B0D8 RET
	0x03A2B0DC BL 0x1C16F20
	0x03A2B0E0 STR X30, [X31 - 0x10]!
	0x03A2B0E4 CBZ X0, 0x3A2B0FC
	0x03A2B0E8 LDR W8, [X0 + 0x18]
	0x03A2B0EC CBZ W8, 0x3A2B100
	0x03A2B0F0 LDR X0, [X0 + 0x20]
	0x03A2B0F4 LDR X30, [X31], #0x10
	0x03A2B0F8 RET
	0x03A2B0FC BL 0x1C16F20
	0x03A2B100 BL 0x1C16F28
	0x03A2B104 STR X30, [X31 - 0x40]!
	0x03A2B108 STP X24, X23, [X31 + 0x10]
	0x03A2B10C STP X22, X21, [X31 + 0x20]
	0x03A2B110 STP X20, X19, [X31 + 0x30]
	0x03A2B114 ADRP X21, 0x9B7000
	0x03A2B118 LDRB W8, [X21 + 0x52]
	0x03A2B11C MOV X19, X1
	0x03A2B120 MOV W20, W0
	0x03A2B124 TBNZ X8, 0x0, 0x3A2B13C
	0x03A2B128 ADRP X0, 0x722000
	0x03A2B12C LDR X0, [X0 + 0xFF0]
	0x03A2B130 BL 0x1C16CF4
	0x03A2B134 MOVZ W8, 0x1
	0x03A2B138 STRB W8, [X21 + 0x52]
	0x03A2B13C CMP W20, 0x1
	0x03A2B140 B.LT 0x3A2B1E0
	0x03A2B144 ADRP X22, 0x722000
	0x03A2B148 ADRP X21, 0x6CF000
	0x03A2B14C LDR X22, [X22 + 0xFF0]
	0x03A2B150 LDR X21, [X21 + 0x9A0]
	0x03A2B154 ADRP X23, 0x9AD000
	0x03A2B158 MOVZ W24, 0x1
	0x03A2B15C LDRB W8, [X23 + 0xE5A]
	0x03A2B160 CBNZ W8, 0x3A2B170
	0x03A2B164 MOV X0, X21
	0x03A2B168 BL 0x1C16CF4
	0x03A2B16C STRB W24, [X23 + 0xE5A]
	0x03A2B170 CBZ X19, 0x3A2B1F4
	0x03A2B174 LDR X8, [X21]
	0x03A2B178 LDR W10, [X19 + 0x1C]
	0x03A2B17C LDR X9, [X8 + 0xB8]
	0x03A2B180 LDR X8, [X19 + 0x10]
	0x03A2B184 ADD W10, W10, 0x1

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+128], X30
	003 Move [X31+144], X22
	004 Move [X31+152], X21
	005 Move [X31+160], X20
	006 Move [X31+168], X19
	007 Move X22, 0x9B8000
	008 Move X21, 0x72A000
	009 Move W8, [X22+74]
	010 Move X21, [X21+1696]
	011 Move X20, X1
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0x72A000
	018 Move X0, [X0+1696]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X22+74], W8
	022 Move X0, [X21]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {28}
	026 Call 0x1C17DFC
	027 Move X0, [X21]
	028 Compare X20, 0
	029 JumpIfEqual {79}
	030 Compare X19, 0
	031 JumpIfEqual {79}
	032 Move X8, [X0+184]
	033 Move S1, [X20+180]
	034 Move S2, [X20+184]
	035 Move V0, [X20+176]
	036 Move S3, W31
	037 Move W1, [X8+36]
	038 Move X0, X19
	039 Move X2, X31
	040 Call CommandBuffer.SetGlobalVector, X0, X1, X2
	041 Move X8, [X21]
	042 NotImplemented "Instruction LDUR not yet implemented."
	043 NotImplemented "Instruction LDUR not yet implemented."
	044 NotImplemented "Instruction LDUR not yet implemented."
	045 Move X8, [X8+184]
	046 NotImplemented "Instruction LDUR not yet implemented."
	047 Add X2, X31, 64
	048 Move X0, X19
	049 Move W1, [X8+28]
	050 Move X3, X31
	051 Move [X31+96], V2
	052 Move [X31+104], V1
	053 Move [X31+64], V3
	054 Move [X31+72], V0
	055 Call CommandBuffer.SetGlobalMatrix, X0, X1, X2
	056 Move X8, [X21]
	057 Add X9, X20, 268
	058 Move V0, [X9+32]
	059 Move V1, [X9+48]
	060 Move V3, [X9]
	061 Move V2, [X9+16]
	062 Move X8, [X8+184]
	063 Add X2, X31, 0
	064 Move X0, X19
	065 Move X3, X31
	066 Move W1, [X8+32]
	067 Move [X31+32], V0
	068 Move [X31+40], V1
	069 Move [X31], V3
	070 Move [X31+8], V2
	071 Call CommandBuffer.SetGlobalMatrix, X0, X1, X2
	072 Move X20, [X31+160]
	073 Move X19, [X31+168]
	074 Move X22, [X31+144]
	075 Move X21, [X31+152]
	076 Move X30, [X31+128]
	077 Add X31, X31, 176
	078 Return 
	079 Call 0x1C17F20

Method: System.Boolean RenderShadows(UnityEngine.Rendering.Universal.IRenderPass2D pass, UnityEngine.Rendering.Universal.RenderingData renderingData, UnityEngine.Rendering.CommandBuffer cmdBuffer, System.Int32 layerToRender, UnityEngine.Rendering.Universal.Light2D light, System.Single shadowIntensity, UnityEngine.Rendering.RenderTargetIdentifier renderTexture, System.Int32 colorBit)

Disassembly:
	0x03A2A154 ADD X2, X31, 0x0
	0x03A2A158 MOV X0, X19
	0x03A2A15C MOV X3, X31
	0x03A2A160 LDR W1, [X8 + 0x20]
	0x03A2A164 STP V0, V1, [X31 + 0x20]
	0x03A2A168 STP V3, V2, [X31]
	0x03A2A16C BL 0x3C4D038
	0x03A2A170 LDP X20, X19, [X31 + 0xA0]
	0x03A2A174 LDP X22, X21, [X31 + 0x90]
	0x03A2A178 LDR X30, [X31 + 0x80]
	0x03A2A17C ADD X31, X31, 0xB0
	0x03A2A180 RET
	0x03A2A184 BL 0x1C16F20
	0x03A2A188 STP X29, X30, [X31 - 0x60]!
	0x03A2A18C STP X28, X27, [X31 + 0x10]
	0x03A2A190 STP X26, X25, [X31 + 0x20]
	0x03A2A194 STP X24, X23, [X31 + 0x30]
	0x03A2A198 STP X22, X21, [X31 + 0x40]
	0x03A2A19C STP X20, X19, [X31 + 0x50]
	0x03A2A1A0 ADRP X27, 0x9B8000
	0x03A2A1A4 ADRP X28, 0x72A000
	0x03A2A1A8 ADRP X21, 0x72A000
	0x03A2A1AC ADRP X19, 0x72A000
	0x03A2A1B0 ADRP X26, 0x72A000
	0x03A2A1B4 ADRP X25, 0x72A000
	0x03A2A1B8 ADRP X24, 0x72A000
	0x03A2A1BC ADRP X22, 0x72A000
	0x03A2A1C0 ADRP X20, 0x72A000
	0x03A2A1C4 ADRP X29, 0x72A000
	0x03A2A1C8 ADRP X23, 0x726000
	0x03A2A1CC LDR X28, [X28 + 0xB28]
	0x03A2A1D0 LDR X21, [X21 + 0x6A0]
	0x03A2A1D4 LDR X19, [X19 + 0xB30]
	0x03A2A1D8 LDR X26, [X26 + 0xB38]
	0x03A2A1DC LDR X25, [X25 + 0xB40]
	0x03A2A1E0 LDR X24, [X24 + 0xB48]
	0x03A2A1E4 LDR X22, [X22 + 0xB50]
	0x03A2A1E8 LDR X20, [X20 + 0xB58]
	0x03A2A1EC LDR X29, [X29 + 0xB60]
	0x03A2A1F0 LDR X23, [X23 + 0x598]
	0x03A2A1F4 LDRB W8, [X27 + 0x4C]
	0x03A2A1F8 TBNZ X8, 0x0, 0x3A2A2E8
	0x03A2A1FC ADRP X0, 0x6CE000
	0x03A2A200 LDR X0, [X0 + 0x140]
	0x03A2A204 BL 0x1C16CF4
	0x03A2A208 ADRP X0, 0x72A000
	0x03A2A20C LDR X0, [X0 + 0xB68]
	0x03A2A210 BL 0x1C16CF4
	0x03A2A214 ADRP X0, 0x726000
	0x03A2A218 LDR X0, [X0 + 0x598]
	0x03A2A21C BL 0x1C16CF4
	0x03A2A220 ADRP X0, 0x72A000
	0x03A2A224 LDR X0, [X0 + 0x6A0]
	0x03A2A228 BL 0x1C16CF4
	0x03A2A22C ADRP X0, 0x72A000
	0x03A2A230 LDR X0, [X0 + 0xB30]
	0x03A2A234 BL 0x1C16CF4
	0x03A2A238 ADRP X0, 0x72A000
	0x03A2A23C LDR X0, [X0 + 0xB38]
	0x03A2A240 BL 0x1C16CF4
	0x03A2A244 ADRP X0, 0x72A000
	0x03A2A248 LDR X0, [X0 + 0xB70]
	0x03A2A24C BL 0x1C16CF4
	0x03A2A250 ADRP X0, 0x72A000
	0x03A2A254 LDR X0, [X0 + 0xB48]
	0x03A2A258 BL 0x1C16CF4
	0x03A2A25C ADRP X0, 0x72A000
	0x03A2A260 LDR X0, [X0 + 0xB78]
	0x03A2A264 BL 0x1C16CF4
	0x03A2A268 ADRP X0, 0x72A000
	0x03A2A26C LDR X0, [X0 + 0xB80]
	0x03A2A270 BL 0x1C16CF4
	0x03A2A274 ADRP X0, 0x72A000
	0x03A2A278 LDR X0, [X0 + 0xB88]
	0x03A2A27C BL 0x1C16CF4
	0x03A2A280 ADRP X0, 0x72A000
	0x03A2A284 LDR X0, [X0 + 0xB28]
	0x03A2A288 BL 0x1C16CF4
	0x03A2A28C ADRP X0, 0x72A000
	0x03A2A290 LDR X0, [X0 + 0xB90]
	0x03A2A294 BL 0x1C16CF4
	0x03A2A298 ADRP X0, 0x72A000
	0x03A2A29C LDR X0, [X0 + 0xB60]
	0x03A2A2A0 BL 0x1C16CF4
	0x03A2A2A4 ADRP X0, 0x72A000
	0x03A2A2A8 LDR X0, [X0 + 0xB98]
	0x03A2A2AC BL 0x1C16CF4
	0x03A2A2B0 ADRP X0, 0x72A000
	0x03A2A2B4 LDR X0, [X0 + 0xB50]
	0x03A2A2B8 BL 0x1C16CF4
	0x03A2A2BC ADRP X0, 0x72A000
	0x03A2A2C0 LDR X0, [X0 + 0xB58]
	0x03A2A2C4 BL 0x1C16CF4
	0x03A2A2C8 ADRP X0, 0x72A000
	0x03A2A2CC LDR X0, [X0 + 0xBA0]
	0x03A2A2D0 BL 0x1C16CF4
	0x03A2A2D4 ADRP X0, 0x72A000
	0x03A2A2D8 LDR X0, [X0 + 0xB40]
	0x03A2A2DC BL 0x1C16CF4
	0x03A2A2E0 MOVZ W8, 0x1
	0x03A2A2E4 STRB W8, [X27 + 0x4C]
	0x03A2A2E8 LDR X0, [X28]
	0x03A2A2EC MOV X1, X31
	0x03A2A2F0 BL 0x3C124EC
	0x03A2A2F4 LDR X8, [X21]
	0x03A2A2F8 MOV X1, X31
	0x03A2A2FC LDR X8, [X8 + 0xB8]
	0x03A2A300 STR W0, [X8]
	0x03A2A304 LDR X0, [X19]
	0x03A2A308 BL 0x3C124EC
	0x03A2A30C LDR X8, [X21]
	0x03A2A310 MOV X1, X31
	0x03A2A314 LDR X8, [X8 + 0xB8]
	0x03A2A318 STR W0, [X8 + 0x4]
	0x03A2A31C LDR X0, [X26]
	0x03A2A320 BL 0x3C124EC
	0x03A2A324 LDR X8, [X21]
	0x03A2A328 MOV X1, X31
	0x03A2A32C LDR X8, [X8 + 0xB8]
	0x03A2A330 STR W0, [X8 + 0x8]
	0x03A2A334 LDR X0, [X25]
	0x03A2A338 BL 0x3C124EC
	0x03A2A33C LDR X8, [X21]
	0x03A2A340 MOV X1, X31
	0x03A2A344 LDR X8, [X8 + 0xB8]
	0x03A2A348 STR W0, [X8 + 0xC]
	0x03A2A34C LDR X0, [X24]
	0x03A2A350 BL 0x3C124EC
	0x03A2A354 LDR X8, [X21]
	0x03A2A358 MOV X1, X31
	0x03A2A35C LDR X8, [X8 + 0xB8]
	0x03A2A360 STR W0, [X8 + 0x10]
	0x03A2A364 LDR X0, [X22]
	0x03A2A368 BL 0x3C124EC
	0x03A2A36C LDR X8, [X21]
	0x03A2A370 MOV X1, X31
	0x03A2A374 LDR X8, [X8 + 0xB8]
	0x03A2A378 STR W0, [X8 + 0x14]
	0x03A2A37C LDR X0, [X20]
	0x03A2A380 BL 0x3C124EC
	0x03A2A384 LDR X8, [X21]
	0x03A2A388 MOV X1, X31
	0x03A2A38C LDR X8, [X8 + 0xB8]
	0x03A2A390 STR W0, [X8 + 0x18]
	0x03A2A394 LDR X0, [X29]
	0x03A2A398 BL 0x3C124EC
	0x03A2A39C LDR X8, [X21]
	0x03A2A3A0 MOV X1, X31
	0x03A2A3A4 LDR X8, [X8 + 0xB8]
	0x03A2A3A8 STR W0, [X8 + 0x1C]
	0x03A2A3AC ADRP X8, 0x72A000
	0x03A2A3B0 LDR X8, [X8 + 0xB80]
	0x03A2A3B4 LDR X0, [X8]
	0x03A2A3B8 BL 0x3C124EC
	0x03A2A3BC LDR X8, [X21]
	0x03A2A3C0 MOV X1, X31
	0x03A2A3C4 LDR X8, [X8 + 0xB8]
	0x03A2A3C8 STR W0, [X8 + 0x20]
	0x03A2A3CC ADRP X8, 0x72A000
	0x03A2A3D0 LDR X8, [X8 + 0xB70]
	0x03A2A3D4 LDR X0, [X8]
	0x03A2A3D8 BL 0x3C124EC
	0x03A2A3DC LDR X8, [X21]
	0x03A2A3E0 LDR X8, [X8 + 0xB8]
	0x03A2A3E4 STR W0, [X8 + 0x24]
	0x03A2A3E8 LDR X0, [X23]
	0x03A2A3EC BL 0x1C16F10
	0x03A2A3F0 ADRP X8, 0x72A000
	0x03A2A3F4 LDR X8, [X8 + 0xB78]
	0x03A2A3F8 MOV X2, X31
	0x03A2A3FC MOV X19, X0
	0x03A2A400 LDR X1, [X8]
	0x03A2A404 BL 0x39B19AC
	0x03A2A408 LDR X8, [X21]
	0x03A2A40C LDR X8, [X8 + 0xB8]
	0x03A2A410 STR X19, [X8 + 0x28]
	0x03A2A414 LDR X0, [X23]
	0x03A2A418 BL 0x1C16F10
	0x03A2A41C ADRP X8, 0x72A000
	0x03A2A420 LDR X8, [X8 + 0xB98]
	0x03A2A424 MOV X2, X31
	0x03A2A428 MOV X19, X0
	0x03A2A42C LDR X1, [X8]
	0x03A2A430 BL 0x39B19AC
	0x03A2A434 LDR X8, [X21]
	0x03A2A438 LDR X8, [X8 + 0xB8]
	0x03A2A43C STR X19, [X8 + 0x30]
	0x03A2A440 LDR X0, [X23]
	0x03A2A444 BL 0x1C16F10
	0x03A2A448 ADRP X8, 0x72A000
	0x03A2A44C LDR X8, [X8 + 0xBA0]
	0x03A2A450 MOV X2, X31
	0x03A2A454 MOV X19, X0
	0x03A2A458 LDR X1, [X8]
	0x03A2A45C BL 0x39B19AC
	0x03A2A460 LDR X8, [X21]
	0x03A2A464 LDR X8, [X8 + 0xB8]
	0x03A2A468 STR X19, [X8 + 0x38]
	0x03A2A46C LDR X0, [X23]
	0x03A2A470 BL 0x1C16F10
	0x03A2A474 ADRP X8, 0x72A000
	0x03A2A478 LDR X8, [X8 + 0xB90]
	0x03A2A47C MOV X2, X31
	0x03A2A480 MOV X19, X0
	0x03A2A484 LDR X1, [X8]
	0x03A2A488 BL 0x39B19AC
	0x03A2A48C LDR X8, [X21]
	0x03A2A490 LDR X8, [X8 + 0xB8]
	0x03A2A494 STR X19, [X8 + 0x40]
	0x03A2A498 LDR X0, [X23]
	0x03A2A49C BL 0x1C16F10
	0x03A2A4A0 ADRP X8, 0x72A000
	0x03A2A4A4 LDR X8, [X8 + 0xB88]
	0x03A2A4A8 MOV X2, X31
	0x03A2A4AC MOV X19, X0
	0x03A2A4B0 LDR X1, [X8]
	0x03A2A4B4 BL 0x39B19AC
	0x03A2A4B8 LDR X8, [X21]
	0x03A2A4BC MOVZ W1, 0x4
	0x03A2A4C0 LDR X8, [X8 + 0xB8]
	0x03A2A4C4 STP X19, X31, [X8 + 0x48]
	0x03A2A4C8 STP X31, X31, [X8 + 0x58]
	0x03A2A4CC ADRP X8, 0x6CE000
	0x03A2A4D0 LDR X8, [X8 + 0x140]
	0x03A2A4D4 LDR X0, [X8]
	0x03A2A4D8 BL 0x1C16D6C
	0x03A2A4DC CBZ X0, 0x3A2A65C
	0x03A2A4E0 LDR W8, [X0 + 0x18]
	0x03A2A4E4 CBZ W8, 0x3A2A64C
	0x03A2A4E8 ADRP X9, 0xFFFFFFFFFD0C2000
	0x03A2A4EC LDR V0, [X9 + 0xBB]
	0x03A2A4F0 CMP W8, 0x1
	0x03A2A4F4 STR V0, [X0 + 0x2]
	0x03A2A4F8 B.EQ 0x3A2A64C
	0x03A2A4FC ADRP X9, 0xFFFFFFFFFD0C0000
	0x03A2A500 LDR V0, [X9 + 0x47]
	0x03A2A504 CMP W8, 0x2
	0x03A2A508 STR V0, [X0 + 0x3]
	0x03A2A50C B.LS 0x3A2A64C
	0x03A2A510 ADRP X9, 0xFFFFFFFFFD0C2000
	0x03A2A514 LDR V0, [X9 + 0xD0]
	0x03A2A518 CMP W8, 0x3
	0x03A2A51C STR V0, [X0 + 0x4]
	0x03A2A520 B.EQ 0x3A2A64C
	0x03A2A524 ADRP X8, 0xFFFFFFFFFD0C2000
	0x03A2A528 LDR V0, [X8 + 0x11]
	0x03A2A52C ADRP X9, 0x72A000
	0x03A2A530 MOVZ W1, 0x4
	0x03A2A534 STR V0, [X0 + 0x5]
	0x03A2A538 LDR X8, [X21]
	0x03A2A53C LDR X8, [X8 + 0xB8]
	0x03A2A540 LDR X9, [X9 + 0xB68]
	0x03A2A544 STR X0, [X8 + 0x68]
	0x03A2A548 LDR X0, [X9]
	0x03A2A54C BL 0x1C16D6C
	0x03A2A550 CBZ X0, 0x3A2A65C
	0x03A2A554 LDR X8, [X21]
	0x03A2A558 MOV X19, X0
	0x03A2A55C LDR X8, [X8 + 0xB8]
	0x03A2A560 LDR X20, [X8 + 0x30]
	0x03A2A564 CBZ X20, 0x3A2A57C
	0x03A2A568 LDR X8, [X19]
	0x03A2A56C MOV X0, X20
	0x03A2A570 LDR X1, [X8 + 0x40]
	0x03A2A574 BL 0x1C16E00
	0x03A2A578 CBZ X0, 0x3A2A650
	0x03A2A57C LDR W8, [X19 + 0x18]
	0x03A2A580 CBZ W8, 0x3A2A64C
	0x03A2A584 STR X20, [X19 + 0x20]
	0x03A2A588 LDR X9, [X21]
	0x03A2A58C LDR X9, [X9 + 0xB8]
	0x03A2A590 LDR X20, [X9 + 0x48]
	0x03A2A594 CBZ X20, 0x3A2A5B0
	0x03A2A598 LDR X8, [X19]
	0x03A2A59C MOV X0, X20
	0x03A2A5A0 LDR X1, [X8 + 0x40]
	0x03A2A5A4 BL 0x1C16E00
	0x03A2A5A8 CBZ X0, 0x3A2A650
	0x03A2A5AC LDR W8, [X19 + 0x18]
	0x03A2A5B0 CMP W8, 0x1
	0x03A2A5B4 B.LS 0x3A2A64C
	0x03A2A5B8 STR X20, [X19 + 0x28]
	0x03A2A5BC LDR X9, [X21]
	0x03A2A5C0 LDR X9, [X9 + 0xB8]
	0x03A2A5C4 LDR X20, [X9 + 0x40]
	0x03A2A5C8 CBZ X20, 0x3A2A5E4
	0x03A2A5CC LDR X8, [X19]
	0x03A2A5D0 MOV X0, X20
	0x03A2A5D4 LDR X1, [X8 + 0x40]
	0x03A2A5D8 BL 0x1C16E00
	0x03A2A5DC CBZ X0, 0x3A2A650
	0x03A2A5E0 LDR W8, [X19 + 0x18]
	0x03A2A5E4 CMP W8, 0x2
	0x03A2A5E8 B.LS 0x3A2A64C
	0x03A2A5EC STR X20, [X19 + 0x30]
	0x03A2A5F0 LDR X9, [X21]
	0x03A2A5F4 LDR X9, [X9 + 0xB8]
	0x03A2A5F8 LDR X20, [X9 + 0x38]
	0x03A2A5FC CBZ X20, 0x3A2A618
	0x03A2A600 LDR X8, [X19]
	0x03A2A604 MOV X0, X20
	0x03A2A608 LDR X1, [X8 + 0x40]
	0x03A2A60C BL 0x1C16E00
	0x03A2A610 CBZ X0, 0x3A2A650
	0x03A2A614 LDR W8, [X19 + 0x18]
	0x03A2A618 CMP W8, 0x3
	0x03A2A61C B.LS 0x3A2A64C
	0x03A2A620 STR X20, [X19 + 0x38]
	0x03A2A624 LDR X8, [X21]
	0x03A2A628 LDP X22, X21, [X31 + 0x40]
	0x03A2A62C LDP X24, X23, [X31 + 0x30]
	0x03A2A630 LDP X26, X25, [X31 + 0x20]
	0x03A2A634 LDR X8, [X8 + 0xB8]
	0x03A2A638 LDP X28, X27, [X31 + 0x10]
	0x03A2A63C STR X19, [X8 + 0x70]
	0x03A2A640 LDP X20, X19, [X31 + 0x50]
	0x03A2A644 LDP X29, X30, [X31], #0x60
	0x03A2A648 RET
	0x03A2A64C BL 0x1C16F28
	0x03A2A650 BL 0x1C16F44
	0x03A2A654 MOV X1, X31
	0x03A2A658 BL 0x1C16DEC
	0x03A2A65C BL 0x1C16F20
	0x03A2A660 STP D11, D10, [X31 - 0x60]!
	0x03A2A664 STP D9, D8, [X31 + 0x10]
	0x03A2A668 STR X30, [X31 + 0x20]
	0x03A2A66C STP X24, X23, [X31 + 0x30]
	0x03A2A670 STP X22, X21, [X31 + 0x40]
	0x03A2A674 STP X20, X19, [X31 + 0x50]
	0x03A2A678 ADRP X24, 0x9B8000
	0x03A2A67C LDRB W9, [X24 + 0x4D]
	0x03A2A680 MOV X21, X3
	0x03A2A684 MOV X22, X2
	0x03A2A688 MOV W23, W1
	0x03A2A68C MOV W20, W0
	0x03A2A690 MOV X19, X8
	0x03A2A694 TBNZ X9, 0x0, 0x3A2A6B8
	0x03A2A698 ADRP X0, 0x6CD000
	0x03A2A69C LDR X0, [X0 + 0x980]
	0x03A2A6A0 BL 0x1C16CF4
	0x03A2A6A4 ADRP X0, 0x6F3000
	0x03A2A6A8 LDR X0, [X0 + 0xF38]
	0x03A2A6AC BL 0x1C16CF4
	0x03A2A6B0 MOVZ W8, 0x1
	0x03A2A6B4 STRB W8, [X24 + 0x4D]
	0x03A2A6B8 STRB W31, [X31 + 0x2E]
	0x03A2A6BC STRH W31, [X31 + 0x2C]
	0x03A2A6C0 CBZ X21, 0x3A2A87C
	0x03A2A6C4 ADRP X24, 0x6F3000
	0x03A2A6C8 LDR X24, [X24 + 0xF38]
	0x03A2A6CC MOV X0, X21
	0x03A2A6D0 MOV W1, W20
	0x03A2A6D4 LDR X2, [X24]
	0x03A2A6D8 BL 0x2FDC41C
	0x03A2A6DC LDR X2, [X24]
	0x03A2A6E0 MOV W20, W0
	0x03A2A6E4 MOV X0, X21
	0x03A2A6E8 MOV W1, W23
	0x03A2A6EC BL 0x2FDC41C
	0x03A2A6F0 CBZ X22, 0x3A2A87C
	0x03A2A6F4 ADRP X23, 0x6CD000
	0x03A2A6F8 LDR X23, [X23 + 0x980]
	0x03A2A6FC MOV W21, W0
	0x03A2A700 MOV X0, X22
	0x03A2A704 MOV W1, W20
	0x03A2A708 LDR X2, [X23]
	0x03A2A70C BL 0x30CBE84
	0x03A2A710 LDR X2, [X23]
	0x03A2A714 MOV X0, X22
	0x03A2A718 MOV W1, W21
	0x03A2A71C MOV V8.16B, V0.16B
	0x03A2A720 MOV V9.16B, V1.16B
	0x03A2A724 BL 0x30CBE84
	0x03A2A728 ADRP X22, 0x9AE000
	0x03A2A72C LDRB W8, [X22 + 0x785]
	0x03A2A730 MOV V10.16B, V0.16B
	0x03A2A734 MOV V11.16B, V1.16B
	0x03A2A738 CBNZ W8, 0x3A2A750
	0x03A2A73C ADRP X0, 0x6C9000
	0x03A2A740 LDR X0, [X0 + 0x5A8]
	0x03A2A744 BL 0x1C16CF4
	0x03A2A748 MOVZ W8, 0x1
	0x03A2A74C STRB W8, [X22 + 0x785]
	0x03A2A750 ADRP X8, 0x6C9000
	0x03A2A754 LDR X8, [X8 + 0x5A8]
	0x03A2A758 FSUB S8, S10, S8
	0x03A2A75C FSUB S9, S11, S9
	0x03A2A760 LDR X0, [X8]
	0x03A2A764 LDR W8, [X0 + 0xE0]
	0x03A2A768 CBNZ W8, 0x3A2A770
	0x03A2A76C BL 0x1C16DFC
	0x03A2A770 ADRP X8, 0xFFFFFFFFFD0C0000
	0x03A2A774 FMUL S0, S8, S8
	0x03A2A778 FMUL S1, S9, S9
	0x03A2A77C LDR V2, [X8 + 0x17C]
	0x03A2A780 ADRP X22, 0x6C9000
	0x03A2A784 FADD S1, S0, S1
	0x03A2A788 FMOV S0, W31
	0x03A2A78C LDR X22, [X22 + 0x5A0]
	0x03A2A790 FADD S1, S1, S0
	0x03A2A794 FSQRT S1, S1
	0x03A2A798 FCMP S1, S2
	0x03A2A79C B.LE 0x3A2A7B0
	0x03A2A7A0 FDIV S8, S8, S1
	0x03A2A7A4 FDIV S9, S9, S1
	0x03A2A7A8 FDIV S10, S0, S1
	0x03A2A7AC B 0x3A2A7E0
	0x03A2A7B0 ADRP X23, 0x9AE000
	0x03A2A7B4 LDRB W8, [X23 + 0x783]
	0x03A2A7B8 CBNZ W8, 0x3A2A7D0
	0x03A2A7BC ADRP X0, 0x6C9000
	0x03A2A7C0 LDR X0, [X0 + 0x5A0]
	0x03A2A7C4 BL 0x1C16CF4
	0x03A2A7C8 MOVZ W8, 0x1
	0x03A2A7CC STRB W8, [X23 + 0x783]
	0x03A2A7D0 LDR X8, [X22]
	0x03A2A7D4 LDR X8, [X8 + 0xB8]
	0x03A2A7D8 LDP S8, S9, [X8]
	0x03A2A7DC LDR V10, [X8 + 0x8]
	0x03A2A7E0 ADRP X23, 0x9AE000
	0x03A2A7E4 LDRB W8, [X23 + 0xA1F]
	0x03A2A7E8 CBNZ W8, 0x3A2A800
	0x03A2A7EC ADRP X0, 0x6C9000
	0x03A2A7F0 LDR X0, [X0 + 0x5A0]
	0x03A2A7F4 BL 0x1C16CF4
	0x03A2A7F8 MOVZ W8, 0x1
	0x03A2A7FC STRB W8, [X23 + 0xA1F]
	0x03A2A800 LDR X8, [X22]
	0x03A2A804 LDRH W9, [X31 + 0x2C]
	0x03A2A808 LDRB W10, [X31 + 0x2E]
	0x03A2A80C CMP W20, W21
	0x03A2A810 LDR X8, [X8 + 0xB8]
	0x03A2A814 LDP X24, X23, [X31 + 0x30]
	0x03A2A818 LDR X30, [X31 + 0x20]
	0x03A2A81C LDP S0, S1, [X8 + 0x48]
	0x03A2A820 LDR V2, [X8 + 0x50]
	0x03A2A824 CSET W8, GT
	0x03A2A828 STP W20, W21, [X19]
	0x03A2A82C FMUL S4, S10, S1
	0x03A2A830 FMUL S3, S9, S2
	0x03A2A834 FMUL S5, S10, S0
	0x03A2A838 FMUL S2, S8, S2
	0x03A2A83C FMUL S1, S8, S1
	0x03A2A840 FMUL S0, S9, S0
	0x03A2A844 FSUB S3, S3, S4
	0x03A2A848 FSUB S2, S5, S2
	0x03A2A84C FSUB S0, S1, S0
	0x03A2A850 STR W31, [X19 + 0x14]
	0x03A2A854 STRB W8, [X19 + 0x18]
	0x03A2A858 STRB W10, [X19 + 0x1B]
	0x03A2A85C STP S3, S2, [X19 + 0x8]
	0x03A2A860 STR S0, [X19 + 0x10]
	0x03A2A864 STURH W9, [X19 + 0x19]
	0x03A2A868 LDP X20, X19, [X31 + 0x50]
	0x03A2A86C LDP X22, X21, [X31 + 0x40]
	0x03A2A870 LDP D9, D8, [X31 + 0x10]
	0x03A2A874 LDP D11, D10, [X31], #0x60
	0x03A2A878 RET
	0x03A2A87C BL 0x1C16F20
	0x03A2A880 CMP W1, W2
	0x03A2A884 CSET W8, GT
	0x03A2A888 STP W1, W2, [X0]
	0x03A2A88C STRB W8, [X0 + 0x18]
	0x03A2A890 RET
	0x03A2A894 SUB X31, X31, 0xF0
	0x03A2A898 STR X30, [X31 + 0xA0]
	0x03A2A89C STP X26, X25, [X31 + 0xB0]
	0x03A2A8A0 STP X24, X23, [X31 + 0xC0]
	0x03A2A8A4 STP X22, X21, [X31 + 0xD0]
	0x03A2A8A8 STP X20, X19, [X31 + 0xE0]
	0x03A2A8AC ADRP X22, 0x9B8000
	0x03A2A8B0 LDRB W8, [X22 + 0x4E]
	0x03A2A8B4 MOV X19, X2
	0x03A2A8B8 MOV X20, X1
	0x03A2A8BC MOV X21, X0
	0x03A2A8C0 TBNZ X8, 0x0, 0x3A2A8E4
	0x03A2A8C4 ADRP X0, 0x72A000
	0x03A2A8C8 LDR X0, [X0 + 0xBA8]
	0x03A2A8CC BL 0x1C16CF4
	0x03A2A8D0 ADRP X0, 0x6CA000
	0x03A2A8D4 LDR X0, [X0 + 0xE28]
	0x03A2A8D8 BL 0x1C16CF4
	0x03A2A8DC MOVZ W8, 0x1
	0x03A2A8E0 STRB W8, [X22 + 0x4E]
	0x03A2A8E4 CBZ X20, 0x3A2AB14
	0x03A2A8E8 LDR W8, [X20 + 0x18]
	0x03A2A8EC CMP W8, 0x1
	0x03A2A8F0 B.LT 0x3A2AAF8
	0x03A2A8F4 ADRP X25, 0x72A000
	0x03A2A8F8 LDR X25, [X25 + 0xBA8]
	0x03A2A8FC MOV W0, W31
	0x03A2A900 ADD X24, X31, 0x80
	0x03A2A904 MOVZ W26, 0x1C
	0x03A2A908 ADD W22, W0, 0x1
	0x03A2A90C ADD X8, X31, 0x40
	0x03A2A910 MOV W1, W22
	0x03A2A914 MOV X2, X21
	0x03A2A918 MOV X3, X20
	0x03A2A91C BL 0x3A2A660
	0x03A2A920 CBZ X19, 0x3A2AB14
	0x03A2A924 LDR V0, [X31 + 0x4]
	0x03A2A928 LDUR V1, [X31 + 0x4C]
	0x03A2A92C LDR X10, [X25]
	0x03A2A930 STR V0, [X31 + 0x6]
	0x03A2A934 STUR V1, [X31 + 0x6C]
	0x03A2A938 LDR W9, [X19 + 0x1C]
	0x03A2A93C LDR X8, [X19 + 0x10]
	0x03A2A940 ADD W9, W9, 0x1
	0x03A2A944 STR W9, [X19 + 0x1C]
	0x03A2A948 CBZ X8, 0x3A2AB14
	0x03A2A94C LDRSW X9, [X19 + 0x18]
	0x03A2A950 LDR W11, [X8 + 0x18]
	0x03A2A954 CMP W9, W11
	0x03A2A958 B.CS 0x3A2A980
	0x03A2A95C ADD W10, W9, 0x1
	0x03A2A960 STR W10, [X19 + 0x18]
	0x03A2A964 LDUR V0, [X31 + 0x6C]
	0x03A2A968 LDR V1, [X31 + 0x6]
	0x03A2A96C NOP
	0x03A2A970 MADD X8, X9, X26, X8
	0x03A2A974 STUR V0, [X8 + 0x2C]
	0x03A2A978 STR V1, [X8 + 0x2]
	0x03A2A97C B 0x3A2A9A8
	0x03A2A980 LDR X8, [X10 + 0x20]
	0x03A2A984 LDR V0, [X31 + 0x6]
	0x03A2A988 LDUR V1, [X31 + 0x6C]
	0x03A2A98C ADD X1, X31, 0x80
	0x03A2A990 LDR X8, [X8 + 0xC0]
	0x03A2A994 MOV X0, X19
	0x03A2A998 LDR X2, [X8 + 0x70]
	0x03A2A99C STR V0, [X31 + 0x8]
	0x03A2A9A0 STUR V1, [X24 + 0xC]
	0x03A2A9A4 BL 0x3140914
	0x03A2A9A8 ADD W23, W22, 0x1
	0x03A2A9AC ADD X8, X31, 0x20
	0x03A2A9B0 MOV W0, W22
	0x03A2A9B4 MOV W1, W23
	0x03A2A9B8 MOV X2, X21
	0x03A2A9BC MOV X3, X20
	0x03A2A9C0 BL 0x3A2A660
	0x03A2A9C4 LDR V0, [X31 + 0x2]
	0x03A2A9C8 LDUR V1, [X31 + 0x2C]
	0x03A2A9CC LDR X10, [X25]
	0x03A2A9D0 STR V0, [X31 + 0x6]
	0x03A2A9D4 STUR V1, [X31 + 0x6C]
	0x03A2A9D8 LDR W9, [X19 + 0x1C]
	0x03A2A9DC LDR X8, [X19 + 0x10]
	0x03A2A9E0 ADD W9, W9, 0x1
	0x03A2A9E4 STR W9, [X19 + 0x1C]
	0x03A2A9E8 CBZ X8, 0x3A2AB14
	0x03A2A9EC LDRSW X9, [X19 + 0x18]
	0x03A2A9F0 LDR W11, [X8 + 0x18]
	0x03A2A9F4 CMP W9, W11
	0x03A2A9F8 B.CS 0x3A2AA20
	0x03A2A9FC ADD W10, W9, 0x1
	0x03A2AA00 STR W10, [X19 + 0x18]
	0x03A2AA04 LDUR V0, [X31 + 0x6C]
	0x03A2AA08 LDR V1, [X31 + 0x6]
	0x03A2AA0C NOP
	0x03A2AA10 MADD X8, X9, X26, X8
	0x03A2AA14 STUR V0, [X8 + 0x2C]
	0x03A2AA18 STR V1, [X8 + 0x2]
	0x03A2AA1C B 0x3A2AA48
	0x03A2AA20 LDR X8, [X10 + 0x20]
	0x03A2AA24 LDR V0, [X31 + 0x6]
	0x03A2AA28 LDUR V1, [X31 + 0x6C]
	0x03A2AA2C ADD X1, X31, 0x80
	0x03A2AA30 LDR X8, [X8 + 0xC0]
	0x03A2AA34 MOV X0, X19
	0x03A2AA38 LDR X2, [X8 + 0x70]
	0x03A2AA3C STR V0, [X31 + 0x8]
	0x03A2AA40 STUR V1, [X24 + 0xC]
	0x03A2AA44 BL 0x3140914
	0x03A2AA48 SUB W22, W23, 0x2
	0x03A2AA4C ADD X8, X31, 0x0
	0x03A2AA50 MOV W0, W23
	0x03A2AA54 MOV W1, W22
	0x03A2AA58 MOV X2, X21
	0x03A2AA5C MOV X3, X20
	0x03A2AA60 BL 0x3A2A660
	0x03A2AA64 LDR V0, [X31]
	0x03A2AA68 LDUR V1, [X31 + 0xC]
	0x03A2AA6C LDR X10, [X25]
	0x03A2AA70 STR V0, [X31 + 0x6]
	0x03A2AA74 STUR V1, [X31 + 0x6C]
	0x03A2AA78 LDR W9, [X19 + 0x1C]
	0x03A2AA7C LDR X8, [X19 + 0x10]
	0x03A2AA80 ADD W9, W9, 0x1
	0x03A2AA84 STR W9, [X19 + 0x1C]
	0x03A2AA88 CBZ X8, 0x3A2AB14
	0x03A2AA8C LDRSW X9, [X19 + 0x18]
	0x03A2AA90 LDR W11, [X8 + 0x18]
	0x03A2AA94 CMP W9, W11
	0x03A2AA98 B.CS 0x3A2AAC0
	0x03A2AA9C ADD W10, W9, 0x1
	0x03A2AAA0 STR W10, [X19 + 0x18]
	0x03A2AAA4 LDUR V0, [X31 + 0x6C]
	0x03A2AAA8 LDR V1, [X31 + 0x6]
	0x03A2AAAC NOP
	0x03A2AAB0 MADD X8, X9, X26, X8
	0x03A2AAB4 STUR V0, [X8 + 0x2C]
	0x03A2AAB8 STR V1, [X8 + 0x2]
	0x03A2AABC B 0x3A2AAE8
	0x03A2AAC0 LDR X8, [X10 + 0x20]
	0x03A2AAC4 LDR V0, [X31 + 0x6]
	0x03A2AAC8 LDUR V1, [X31 + 0x6C]
	0x03A2AACC ADD X1, X31, 0x80
	0x03A2AAD0 LDR X8, [X8 + 0xC0]
	0x03A2AAD4 MOV X0, X19
	0x03A2AAD8 LDR X2, [X8 + 0x70]
	0x03A2AADC STR V0, [X31 + 0x8]
	0x03A2AAE0 STUR V1, [X24 + 0xC]
	0x03A2AAE4 BL 0x3140914
	0x03A2AAE8 LDR W8, [X20 + 0x18]
	0x03A2AAEC ADD W0, W22, 0x3
	0x03A2AAF0 CMP W0, W8
	0x03A2AAF4 B.LT 0x3A2A908
	0x03A2AAF8 LDP X20, X19, [X31 + 0xE0]
	0x03A2AAFC LDP X22, X21, [X31 + 0xD0]
	0x03A2AB00 LDP X24, X23, [X31 + 0xC0]
	0x03A2AB04 LDP X26, X25, [X31 + 0xB0]
	0x03A2AB08 LDR X30, [X31 + 0xA0]
	0x03A2AB0C ADD X31, X31, 0xF0
	0x03A2AB10 RET
	0x03A2AB14 BL 0x1C16F20
	0x03A2AB18 SUB X31, X31, 0x60
	0x03A2AB1C STP X30, X25, [X31 + 0x20]
	0x03A2AB20 STP X24, X23, [X31 + 0x30]
	0x03A2AB24 STP X22, X21, [X31 + 0x40]
	0x03A2AB28 STP X20, X19, [X31 + 0x50]
	0x03A2AB2C ADRP X21, 0x9B8000
	0x03A2AB30 LDRB W8, [X21 + 0x4F]
	0x03A2AB34 MOV X19, X1
	0x03A2AB38 MOV W20, W0
	0x03A2AB3C TBNZ X8, 0x0, 0x3A2AB60
	0x03A2AB40 ADRP X0, 0x72A000
	0x03A2AB44 LDR X0, [X0 + 0xBB0]
	0x03A2AB48 BL 0x1C16CF4
	0x03A2AB4C ADRP X0, 0x72A000
	0x03A2AB50 LDR X0, [X0 + 0xBB8]
	0x03A2AB54 BL 0x1C16CF4
	0x03A2AB58 MOVZ W8, 0x1
	0x03A2AB5C STRB W8, [X21 + 0x4F]
	0x03A2AB60 CBZ X19, 0x3A2AC4C
	0x03A2AB64 ADRP X23, 0x72A000
	0x03A2AB68 LDR X23, [X23 + 0xBB8]
	0x03A2AB6C LDR W25, [X19 + 0x18]
	0x03A2AB70 ADD X8, X31, 0x0
	0x03A2AB74 MOV X0, X19
	0x03A2AB78 LDR X2, [X23]
	0x03A2AB7C MOV W1, W20
	0x03A2AB80 BL 0x3140568
	0x03A2AB84 LDP W21, W22, [X31]
	0x03A2AB88 LDRB W24, [X31 + 0x18]
	0x03A2AB8C SUBS W1, W20, 0x1
	0x03A2AB90 B.MI 0x3A2ABD4
	0x03A2AB94 LDR X2, [X23]
	0x03A2AB98 ADD X8, X31, 0x0
	0x03A2AB9C MOV X0, X19
	0x03A2ABA0 BL 0x3140568
	0x03A2ABA4 LDRB W10, [X31 + 0x18]
	0x03A2ABA8 LDP W8, W9, [X31]
	0x03A2ABAC ANDS W31, W24, 0x1
	0x03A2ABB0 CSEL W11, W21, W22, EQ
	0x03A2ABB4 CSEL W12, W22, W21, EQ
	0x03A2ABB8 ANDS W31, W10, 0x1
	0x03A2ABBC CSEL W10, W8, W9, EQ
	0x03A2ABC0 CSEL W8, W9, W8, EQ
	0x03A2ABC4 SUBS W9, W11, W10
	0x03A2ABC8 SUB W8, W12, W8
	0x03A2ABCC CSEL W8, W8, W9, EQ
	0x03A2ABD0 CBZ W8, 0x3A2AC30
	0x03A2ABD4 ADD W1, W20, 0x1
	0x03A2ABD8 CMP W1, W25
	0x03A2ABDC B.GE 0x3A2AC28
	0x03A2ABE0 LDR X2, [X23]
	0x03A2ABE4 ADD X8, X31, 0x0
	0x03A2ABE8 MOV X0, X19
	0x03A2ABEC BL 0x3140568
	0x03A2ABF0 LDRB W10, [X31 + 0x18]
	0x03A2ABF4 LDP W8, W9, [X31]
	0x03A2ABF8 ANDS W31, W24, 0x1
	0x03A2ABFC CSEL W11, W21, W22, EQ
	0x03A2AC00 CSEL W12, W22, W21, EQ
	0x03A2AC04 ANDS W31, W10, 0x1
	0x03A2AC08 CSEL W10, W8, W9, EQ
	0x03A2AC0C CSEL W8, W9, W8, EQ
	0x03A2AC10 SUBS W9, W11, W10
	0x03A2AC14 SUB W8, W12, W8
	0x03A2AC18 CSEL W8, W8, W9, EQ
	0x03A2AC1C CMP W8, 0x0
	0x03A2AC20 CSET W0, NE
	0x03A2AC24 B 0x3A2AC34
	0x03A2AC28 MOVZ W0, 0x1
	0x03A2AC2C B 0x3A2AC34
	0x03A2AC30 MOV W0, W31
	0x03A2AC34 LDP X20, X19, [X31 + 0x50]
	0x03A2AC38 LDP X22, X21, [X31 + 0x40]
	0x03A2AC3C LDP X24, X23, [X31 + 0x30]
	0x03A2AC40 LDP X30, X25, [X31 + 0x20]
	0x03A2AC44 ADD X31, X31, 0x60
	0x03A2AC48 RET
	0x03A2AC4C BL 0x1C16F20
	0x03A2AC50 LDRB W10, [X0 + 0x18]
	0x03A2AC54 LDP W8, W9, [X0]
	0x03A2AC58 LDRB W13, [X1 + 0x18]
	0x03A2AC5C LDP W11, W12, [X1]
	0x03A2AC60 ANDS W31, W10, 0x1
	0x03A2AC64 CSEL W10, W8, W9, EQ
	0x03A2AC68 CSEL W8, W9, W8, EQ
	0x03A2AC6C ANDS W31, W13, 0x1
	0x03A2AC70 CSEL W9, W11, W12, EQ
	0x03A2AC74 CSEL W11, W12, W11, EQ
	0x03A2AC78 SUBS W9, W10, W9
	0x03A2AC7C SUB W8, W8, W11
	0x03A2AC80 CSEL W0, W8, W9, EQ
	0x03A2AC84 RET
	0x03A2AC88 STR X30, [X31 - 0x20]!
	0x03A2AC8C STP X20, X19, [X31 + 0x10]
	0x03A2AC90 ADRP X20, 0x9B8000
	0x03A2AC94 LDRB W8, [X20 + 0x50]
	0x03A2AC98 MOV X19, X0
	0x03A2AC9C TBNZ X8, 0x0, 0x3A2ACB4
	0x03A2ACA0 ADRP X0, 0x72A000
	0x03A2ACA4 LDR X0, [X0 + 0xBC0]
	0x03A2ACA8 BL 0x1C16CF4
	0x03A2ACAC MOVZ W8, 0x1
	0x03A2ACB0 STRB W8, [X20 + 0x50]
	0x03A2ACB4 CBZ X19, 0x3A2ACD4
	0x03A2ACB8 ADRP X8, 0x72A000
	0x03A2ACBC LDR X8, [X8 + 0xBC0]
	0x03A2ACC0 MOV X0, X19
	0x03A2ACC4 LDP X20, X19, [X31 + 0x10]
	0x03A2ACC8 LDR X1, [X8]
	0x03A2ACCC LDR X30, [X31], #0x20
	0x03A2ACD0 B 0x3142B0C
	0x03A2ACD4 BL 0x1C16F20
	0x03A2ACD8 SUB X31, X31, 0xB0
	0x03A2ACDC STR D10, [X31 + 0x30]
	0x03A2ACE0 STP D9, D8, [X31 + 0x40]
	0x03A2ACE4 STP X29, X30, [X31 + 0x50]
	0x03A2ACE8 STP X28, X27, [X31 + 0x60]
	0x03A2ACEC STP X26, X25, [X31 + 0x70]
	0x03A2ACF0 STP X24, X23, [X31 + 0x80]
	0x03A2ACF4 STP X22, X21, [X31 + 0x90]
	0x03A2ACF8 STP X20, X19, [X31 + 0xA0]
	0x03A2ACFC ADRP X24, 0x9B8000
	0x03A2AD00 LDRB W8, [X24 + 0x51]
	0x03A2AD04 MOV X19, X4
	0x03A2AD08 MOV X20, X3
	0x03A2AD0C MOV X21, X2
	0x03A2AD10 MOV X22, X1
	0x03A2AD14 MOV X23, X0
	0x03A2AD18 TBNZ X8, 0x0, 0x3A2AD9C
	0x03A2AD1C ADRP X0, 0x6CA000
	0x03A2AD20 LDR X0, [X0 + 0xE10]
	0x03A2AD24 BL 0x1C16CF4
	0x03A2AD28 ADRP X0, 0x723000
	0x03A2AD2C LDR X0, [X0 + 0xC10]
	0x03A2AD30 BL 0x1C16CF4
	0x03A2AD34 ADRP X0, 0x723000
	0x03A2AD38 LDR X0, [X0 + 0xFF0]
	0x03A2AD3C BL 0x1C16CF4
	0x03A2AD40 ADRP X0, 0x6CD000
	0x03A2AD44 LDR X0, [X0 + 0x3B8]
	0x03A2AD48 BL 0x1C16CF4
	0x03A2AD4C ADRP X0, 0x6CD000
	0x03A2AD50 LDR X0, [X0 + 0x978]
	0x03A2AD54 BL 0x1C16CF4
	0x03A2AD58 ADRP X0, 0x72A000
	0x03A2AD5C LDR X0, [X0 + 0xBB0]
	0x03A2AD60 BL 0x1C16CF4
	0x03A2AD64 ADRP X0, 0x6CD000
	0x03A2AD68 LDR X0, [X0 + 0x980]
	0x03A2AD6C BL 0x1C16CF4
	0x03A2AD70 ADRP X0, 0x72A000
	0x03A2AD74 LDR X0, [X0 + 0xBB8]
	0x03A2AD78 BL 0x1C16CF4
	0x03A2AD7C ADRP X0, 0x723000
	0x03A2AD80 LDR X0, [X0 + 0xC18]
	0x03A2AD84 BL 0x1C16CF4
	0x03A2AD88 ADRP X0, 0x72A000
	0x03A2AD8C LDR X0, [X0 + 0xBC8]
	0x03A2AD90 BL 0x1C16CF4
	0x03A2AD94 MOVZ W8, 0x1
	0x03A2AD98 STRB W8, [X24 + 0x51]
	0x03A2AD9C CBZ X19, 0x3A2B0DC
	0x03A2ADA0 LDR W8, [X19 + 0x18]
	0x03A2ADA4 CMP W8, 0x1
	0x03A2ADA8 B.LT 0x3A2B0B4
	0x03A2ADAC ADRP X28, 0x723000
	0x03A2ADB0 ADRP X29, 0x6CA000
	0x03A2ADB4 LDR X28, [X28 + 0xFF0]
	0x03A2ADB8 LDR X29, [X29 + 0xE10]
	0x03A2ADBC MOV W24, W31
	0x03A2ADC0 MOV W0, W24
	0x03A2ADC4 MOV X1, X19
	0x03A2ADC8 BL 0x3A2AB18
	0x03A2ADCC TBZ X0, 0x0, 0x3A2B0A4

ISIL:
	001 Move [X31-112], D8
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Subtract X31, X31, 560
	015 Move [X31+8], X6
	016 Move [X31+572], W3
	017 Move X21, 0x9B9000
	018 Move X24, 0x72B000
	019 Move W8, [X21+75]
	020 Move X24, [X24+1696]
	021 Move X23, X5
	022 Move X19, X4
	023 Move X22, X2
	024 Move X26, X0
	025 Move TEMP, X8
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {55}
	029 Move X0, 0x6D0000
	030 Move X0, [X0+1952]
	031 Call 0x1C17CF4
	032 Move X0, 0x72B000
	033 Move X0, [X0+1632]
	034 Call 0x1C17CF4
	035 Move X0, 0x72B000
	036 Move X0, [X0+2800]
	037 Call 0x1C17CF4
	038 Move X0, 0x72B000
	039 Move X0, [X0+2752]
	040 Call 0x1C17CF4
	041 Move X0, 0x72B000
	042 Move X0, [X0+2808]
	043 Call 0x1C17CF4
	044 Move X0, 0x72B000
	045 Move X0, [X0+2760]
	046 Call 0x1C17CF4
	047 Move X0, 0x6CA000
	048 Move X0, [X0+1432]
	049 Call 0x1C17CF4
	050 Move X0, 0x72B000
	051 Move X0, [X0+1696]
	052 Call 0x1C17CF4
	053 Move W8, 1
	054 Move [X21+75], W8
	055 Move X0, [X24]
	056 NotImplemented "Instruction MOVI not yet implemented."
	057 Move [X31+568], W31
	058 Move [X31+552], W31
	059 Move [X31+544], X31
	060 Move [X31+512], V0
	061 Move [X31+520], V0
	062 Move [X31+480], V0
	063 Move [X31+488], V0
	064 Move W8, [X0+224]
	065 Compare W8, 0
	066 JumpIfNotEqual {69}
	067 Call 0x1C17DFC
	068 Move X0, [X24]
	069 Move X8, [X0+184]
	070 Add X0, X31, 568
	071 Move X1, X22
	072 Move X3, X31
	073 Move X2, [X8+40]
	074 Call ProfilingScope..ctor, X0, X1, X2
	075 Move X21, 0x9B9000
	076 Move W8, [X21+14]
	077 Compare W8, 0
	078 JumpIfNotEqual {84}
	079 Move X0, 0x72B000
	080 Move X0, [X0+1520]
	081 Call 0x1C17CF4
	082 Move W8, 1
	083 Move [X21+14], W8
	084 Move X8, 0x72B000
	085 Move X8, [X8+1520]
	086 Move X8, [X8]
	087 Move X8, [X8+184]
	088 Move X0, [X8]
	089 Compare X0, 0
	090 JumpIfEqual {161}
	091 Move W8, [X0+24]
	092 NotImplemented "Instruction CMP not yet implemented."
	093 Move [X31+40], X22
	094 Move X21, 0x72B000
	095 Move X22, 0x6CA000
	096 Move X21, [X21+2760]
	097 Move X22, [X22+1432]
	098 Move W25, W31
	099 Move W24, W31
	100 Move X8, 0x72B000
	101 Move X8, [X8+2808]
	102 Move X2, [X8]
	103 Move W1, W24
	104 Move X20, X0
	105 Call List`1<Object>.get_Item, X0, X1
	106 Compare X0, 0
	107 JumpIfEqual {785}
	108 Move X27, [X0+40]
	109 Compare X27, 0
	110 JumpIfEqual {152}
	111 Move W8, [X27+24]
	112 NotImplemented "Instruction CMP not yet implemented."
	113 Move W28, W31
	114 Move X2, [X21]
	115 Move X0, X27
	116 Move W1, W28
	117 Call List`1<Object>.get_Item, X0, X1
	118 Move X29, X0
	119 Move X0, [X22]
	120 Move W8, [X0+224]
	121 Compare W8, 0
	122 JumpIfNotEqual {124}
	123 Call 0x1C17DFC
	124 Move X0, X29
	125 Move X1, X31
	126 Move X2, X31
	127 Call Object.op_Inequality, X0, X1
	128 Move TEMP, X0
	129 And TEMP, TEMP, 1
	130 Compare TEMP, 1
	131 JumpIfNotEqual {148}
	132 Compare X29, 0
	133 JumpIfEqual {781}
	134 Move X0, X29
	135 Move X1, X19
	136 Call ShadowCaster2D.IsLit, X0, X1
	137 Move TEMP, X0
	138 And TEMP, TEMP, 1
	139 Compare TEMP, 1
	140 JumpIfNotEqual {148}
	141 Move W1, [X31+572]
	142 Move X0, X29
	143 Call ShadowCaster2D.IsShadowedLayer, X0, X1
	144 Move TEMP, X0
	145 And TEMP, TEMP, 1
	146 Compare TEMP, 1
	147 JumpIfEqual {151}
	148 Move W8, [X27+24]
	149 Add W28, W28, 1
	150 NotImplemented "Instruction CMP not yet implemented."
	151 Move W25, 1
	152 Move W8, [X20+24]
	153 Add W24, W24, 1
	154 Move X0, X20
	155 NotImplemented "Instruction CMP not yet implemented."
	156 Move TEMP, X25
	157 And TEMP, TEMP, 1
	158 Compare TEMP, 1
	159 JumpIfEqual {162}
	160 And W19, W25, 1
	161 Move W19, W31
	162 Move X8, [X23+32]
	163 Move V1, [X23]
	164 Move V0, [X23+16]
	165 Move X25, [X31+40]
	166 Move [X31+464], X8
	167 Move [X31+432], V1
	168 Move [X31+440], V0
	169 Compare X25, 0
	170 JumpIfEqual {787}
	171 Move V0, [X31+432]
	172 Move V1, [X31+448]
	173 Move X8, [X31+464]
	174 Move [X31+384], V0
	175 Move [X31+392], V1
	176 Move [X31+416], X8
	177 Add X1, X31, 384
	178 Move W2, 2
	179 Move W4, 2
	180 Move W5, 3
	181 Move X0, X25
	182 Move W3, W31
	183 Move X6, X31
	184 Call CommandBuffer.SetRenderTarget, X0, X1, X2, X3, X4, X5
	185 Move X23, 0x72B000
	186 Move X23, [X23+1696]
	187 Move X24, [X31+8]
	188 Move X0, [X23]
	189 Move W8, [X0+224]
	190 Compare W8, 0
	191 JumpIfNotEqual {194}
	192 Call 0x1C17DFC
	193 Move X0, [X23]
	194 Move X8, [X0+184]
	195 Move X8, [X8+112]
	196 Compare X8, 0
	197 JumpIfEqual {788}
	198 Move W9, [X8+24]
	199 NotImplemented "Instruction CMP not yet implemented."
	200 Move X23, X24
	201 Move X24, W24
	202 Add X8, X8, X24
	203 Move X2, [X8+32]
	204 Move [X31+376], W31
	205 Add X0, X31, 376
	206 Move X1, X25
	207 Move X3, X31
	208 Call ProfilingScope..ctor, X0, X1, X2
	209 Move W8, [X31+376]
	210 Move [X31+552], W8
	211 Compare W23, 0
	212 JumpIfEqual {222}
	213 Move S0, W31
	214 Move S1, W31
	215 Move S2, W31
	216 Move S3, W31
	217 Move W1, 1
	218 Move X0, X25
	219 Move W2, W31
	220 Move X3, X31
	221 Call CommandBuffer.ClearRenderTarget, X0, X1, X2, X3
	222 Move S0, W31
	223 Move S1, W31
	224 Move S2, W31
	225 Move S3, W31
	226 Move W1, 1
	227 Move W2, 1
	228 Move X0, X25
	229 Move X3, X31
	230 Call CommandBuffer.ClearRenderTarget, X0, X1, X2, X3
	231 Compare X19, 0
	232 JumpIfEqual {790}
	233 Move X8, 0x72B000
	234 Move X8, [X8+1696]
	235 Move V8, [X19+220]
	236 Move X0, [X8]
	237 Move W8, [X0+224]
	238 Compare W8, 0
	239 JumpIfNotEqual {244}
	240 Call 0x1C17DFC
	241 Move X8, 0x72B000
	242 Move X8, [X8+1696]
	243 Move X0, [X8]
	244 Move X8, [X0+184]
	245 Move W23, [X8]
	246 Move X0, X19
	247 Move X1, X31
	248 Call Component.get_transform, X0
	249 Compare X0, 0
	250 JumpIfEqual {791}
	251 Move X1, X31
	252 Call Transform.get_position, X0
	253 Move S3, W31
	254 Move X0, X25
	255 Move W1, W23
	256 Move X2, X31
	257 Call CommandBuffer.SetGlobalVector, X0, X1, X2
	258 Move X23, 0x72B000
	259 Move X23, [X23+1696]
	260 Move X8, [X23]
	261 Move X8, [X8+184]
	262 Move W1, [X8+20]
	263 Move X0, X25
	264 Move V0, V8
	265 Move X2, X31
	266 Call CommandBuffer.SetGlobalFloat, X0, X1, V0
	267 Move X8, [X23]
	268 Move X9, [X8+184]
	269 Move X8, [X9+104]
	270 Compare X8, 0
	271 JumpIfEqual {792}
	272 Move W10, [X8+24]
	273 Move X11, [X31+8]
	274 NotImplemented "Instruction CMP not yet implemented."
	275 Move W1, [X9+24]
	276 Add X8, X8, X24
	277 Move S0, [X8+32]
	278 Move S1, [X8+36]
	279 Move S2, [X8+40]
	280 Move S3, [X8+44]
	281 Move X0, X25
	282 Move X2, X31
	283 Call CommandBuffer.SetGlobalColor, X0, X1, X2
	284 Move X24, [X31+8]
	285 Compare X26, 0
	286 JumpIfEqual {794}
	287 Move X23, 0x72B000
	288 Move X8, [X26]
	289 Move X23, [X23+1632]
	290 Move X25, X20
	291 NotImplemented "Instruction LDRH not yet implemented."
	292 Move X1, [X23]
	293 Compare X9, 0
	294 JumpIfEqual {301}
	295 Move X10, [X8+176]
	296 Add X10, X10, 8
	297 NotImplemented "Instruction LDUR not yet implemented."
	298 NotImplemented "Instruction CMP not yet implemented."
	299 Subtract X9, X9, 1
	300 Add X10, X10, 16
	301 Move X0, X26
	302 Move W2, W31
	303 Call 0x1C5D788
	304 NotImplemented "Instruction LDRSW not yet implemented."
	305 Add X8, X8, X9
	306 Add X0, X8, 312
	307 Move X8, [X0]
	308 Move X1, [X0+8]
	309 Move X0, X26
	310 NotImplemented "Instruction BLR not yet implemented."
	311 Move W1, W24
	312 Call ShadowRendering.GetGeometryUnshadowMaterial, X0, X1
	313 Move [X31+32], X0
	314 Move X8, [X26]
	315 Move X1, [X23]
	316 NotImplemented "Instruction LDRH not yet implemented."
	317 Compare X9, 0
	318 JumpIfEqual {325}
	319 Move X10, [X8+176]
	320 Add X10, X10, 8
	321 NotImplemented "Instruction LDUR not yet implemented."
	322 NotImplemented "Instruction CMP not yet implemented."
	323 Subtract X9, X9, 1
	324 Add X10, X10, 16
	325 Move X0, X26
	326 Move W2, W31
	327 Call 0x1C5D788
	328 NotImplemented "Instruction LDRSW not yet implemented."
	329 Add X8, X8, X9
	330 Add X0, X8, 312
	331 Move X8, [X0]
	332 Move X1, [X0+8]
	333 Move X0, X26
	334 NotImplemented "Instruction BLR not yet implemented."
	335 Move W1, W24
	336 Call ShadowRendering.GetProjectedShadowMaterial, X0, X1
	337 Move X8, [X26]
	338 Move X1, [X23]
	339 Move X24, X0
	340 NotImplemented "Instruction LDRH not yet implemented."
	341 Compare X9, 0
	342 JumpIfEqual {349}
	343 Move X10, [X8+176]
	344 Add X10, X10, 8
	345 NotImplemented "Instruction LDUR not yet implemented."
	346 NotImplemented "Instruction CMP not yet implemented."
	347 Subtract X9, X9, 1
	348 Add X10, X10, 16
	349 Move X0, X26
	350 Move W2, W31
	351 Call 0x1C5D788
	352 NotImplemented "Instruction LDRSW not yet implemented."
	353 Add X8, X8, X9
	354 Add X0, X8, 312
	355 Move X8, [X0]
	356 Move X1, [X0+8]
	357 Move X0, X26
	358 NotImplemented "Instruction BLR not yet implemented."
	359 Move X1, [X31+8]
	360 Call ShadowRendering.GetSpriteSelfShadowMaterial, X0, X1
	361 Move [X31+24], X0
	362 Move X8, [X26]
	363 Move X1, [X23]
	364 NotImplemented "Instruction LDRH not yet implemented."
	365 Compare X9, 0
	366 JumpIfEqual {373}
	367 Move X10, [X8+176]
	368 Add X10, X10, 8
	369 NotImplemented "Instruction LDUR not yet implemented."
	370 NotImplemented "Instruction CMP not yet implemented."
	371 Subtract X9, X9, 1
	372 Add X10, X10, 16
	373 Move X0, X26
	374 Move W2, W31
	375 Call 0x1C5D788
	376 NotImplemented "Instruction LDRSW not yet implemented."
	377 Add X8, X8, X9
	378 Add X0, X8, 312
	379 Move X8, [X0]
	380 Move X1, [X0+8]
	381 Move X0, X26
	382 NotImplemented "Instruction BLR not yet implemented."
	383 Move X1, [X31+8]
	384 Call ShadowRendering.GetSpriteUnshadowMaterial, X0, X1
	385 Move [X31+16], X0
	386 Move X8, [X26]
	387 Move X1, [X23]
	388 NotImplemented "Instruction LDRH not yet implemented."
	389 Compare X9, 0
	390 JumpIfEqual {397}
	391 Move X10, [X8+176]
	392 Add X10, X10, 8
	393 NotImplemented "Instruction LDUR not yet implemented."
	394 NotImplemented "Instruction CMP not yet implemented."
	395 Subtract X9, X9, 1
	396 Add X10, X10, 16
	397 Move X0, X26
	398 Move W2, W31
	399 Call 0x1C5D788
	400 NotImplemented "Instruction LDRSW not yet implemented."
	401 Add X8, X8, X9
	402 Add X0, X8, 312
	403 Move X8, [X0]
	404 Move X1, [X0+8]
	405 Move X0, X26
	406 NotImplemented "Instruction BLR not yet implemented."
	407 Move X1, [X31+8]
	408 Call ShadowRendering.GetStencilOnlyShadowMaterial, X0, X1
	409 Move W8, [X25+24]
	410 NotImplemented "Instruction CMP not yet implemented."
	411 Move X28, [X31+40]
	412 Move X0, X25
	413 Move W25, W31
	414 Move X8, 0x72B000
	415 Move X8, [X8+2808]
	416 Move X2, [X8]
	417 Move W1, W25
	418 Call List`1<Object>.get_Item, X0, X1
	419 Compare X0, 0
	420 JumpIfEqual {786}
	421 Move X26, [X0+40]
	422 Compare X26, 0
	423 JumpIfEqual {751}
	424 Move W8, [X26+24]
	425 NotImplemented "Instruction CMP not yet implemented."
	426 Move W29, W31
	427 Move X2, [X21]
	428 Move X0, X26
	429 Move W1, W29
	430 Call List`1<Object>.get_Item, X0, X1
	431 Move X27, X0
	432 Compare X0, 0
	433 JumpIfEqual {782}
	434 Move X0, X27
	435 Move X1, X19
	436 Call ShadowCaster2D.IsLit, X0, X1
	437 Move TEMP, X0
	438 And TEMP, TEMP, 1
	439 Compare TEMP, 1
	440 JumpIfNotEqual {536}
	441 Move X0, [X22]
	442 Move W8, [X0+224]
	443 Compare W8, 0
	444 JumpIfNotEqual {446}
	445 Call 0x1C17DFC
	446 Move X0, X27
	447 Move X1, X31
	448 Move X2, X31
	449 Call Object.op_Inequality, X0, X1
	450 Move TEMP, X0
	451 And TEMP, TEMP, 1
	452 Compare TEMP, 1
	453 JumpIfNotEqual {536}
	454 Move X0, [X22]
	455 Move W8, [X0+224]
	456 Compare W8, 0
	457 JumpIfNotEqual {459}
	458 Call 0x1C17DFC
	459 Move X0, X24
	460 Move X1, X31
	461 Move X2, X31
	462 Call Object.op_Inequality, X0, X1
	463 Move TEMP, X0
	464 And TEMP, TEMP, 1
	465 Compare TEMP, 1
	466 JumpIfNotEqual {536}
	467 Move W1, [X31+572]
	468 Move X0, X27
	469 Call ShadowCaster2D.IsShadowedLayer, X0, X1
	470 Move TEMP, X0
	471 And TEMP, TEMP, 1
	472 Compare TEMP, 1
	473 JumpIfNotEqual {536}
	474 Move W8, [X27+54]
	475 Compare W8, 0
	476 JumpIfEqual {536}
	477 Move X8, 0x72B000
	478 Move X8, [X8+1696]
	479 Move X0, [X8]
	480 Move W8, [X0+224]
	481 Compare W8, 0
	482 JumpIfNotEqual {484}
	483 Call 0x1C17DFC
	484 Move X0, [X31+40]
	485 Move X1, X27
	486 Call ShadowRendering.SetShadowProjectionGlobals, X0, X1
	487 Add X23, X27, 332
	488 Move V0, [X23+32]
	489 Move V1, [X23+48]
	490 Move V2, [X23]
	491 Move V3, [X23+16]
	492 Move X1, [X27+80]
	493 Move [X31+336], V0
	494 Move [X31+344], V1
	495 Move [X31+304], V2
	496 Move [X31+312], V3
	497 Move X3, [X31+32]
	498 Add X2, X31, 304
	499 Move X0, X28
	500 Move W4, W31
	501 Move W5, W31
	502 Move X6, X31
	503 Call CommandBuffer.DrawMesh, X0, X1, X2, X3, X4, X5
	504 Move V0, [X23+32]
	505 Move V1, [X23+48]
	506 Move V2, [X23]
	507 Move V3, [X23+16]
	508 Move X1, [X27+80]
	509 Move [X31+272], V0
	510 Move [X31+280], V1
	511 Move [X31+240], V2
	512 Move [X31+248], V3
	513 Add X2, X31, 240
	514 Move X0, X28
	515 Move X3, X24
	516 Move W4, W31
	517 Move W5, W31
	518 Move X6, X31
	519 Call CommandBuffer.DrawMesh, X0, X1, X2, X3, X4, X5
	520 Move V0, [X23+32]
	521 Move V1, [X23+48]
	522 Move V2, [X23]
	523 Move V3, [X23+16]
	524 Move X1, [X27+80]
	525 Move [X31+208], V0
	526 Move [X31+216], V1
	527 Move [X31+176], V2
	528 Move [X31+184], V3
	529 Move X3, [X31+32]
	530 Add X2, X31, 176
	531 Move W5, 1
	532 Move X0, X28
	533 Move W4, W31
	534 Move X6, X31
	535 Call CommandBuffer.DrawMesh, X0, X1, X2, X3, X4, X5
	536 Move W8, [X26+24]
	537 Add W29, W29, 1
	538 NotImplemented "Instruction CMP not yet implemented."
	539 NotImplemented "Instruction CMP not yet implemented."
	540 Move W29, W31
	541 Move X2, [X21]
	542 Move X0, X26
	543 Move W1, W29
	544 Call List`1<Object>.get_Item, X0, X1
	545 Move X27, X0
	546 Compare X0, 0
	547 JumpIfEqual {783}
	548 Move X0, X27
	549 Move X1, X19
	550 Call ShadowCaster2D.IsLit, X0, X1
	551 Move TEMP, X0
	552 And TEMP, TEMP, 1
	553 Compare TEMP, 1
	554 JumpIfNotEqual {666}
	555 Move X0, [X22]
	556 Move W8, [X0+224]
	557 Compare W8, 0
	558 JumpIfNotEqual {560}
	559 Call 0x1C17DFC
	560 Move X0, X27
	561 Move X1, X31
	562 Move X2, X31
	563 Call Object.op_Inequality, X0, X1
	564 Move TEMP, X0
	565 And TEMP, TEMP, 1
	566 Compare TEMP, 1
	567 JumpIfNotEqual {666}
	568 Move W1, [X31+572]
	569 Move X0, X27
	570 Call ShadowCaster2D.IsShadowedLayer, X0, X1
	571 Move TEMP, X0
	572 And TEMP, TEMP, 1
	573 Compare TEMP, 1
	574 JumpIfNotEqual {666}
	575 Move W8, [X27+53]
	576 Compare W8, 0
	577 JumpIfEqual {625}
	578 Move W8, [X27+52]
	579 Compare W8, 0
	580 JumpIfEqual {625}
	581 Move X8, 0x6D0000
	582 Move X8, [X8+1952]
	583 Move [X31+544], X31
	584 Move X2, [X8]
	585 Add X1, X31, 544
	586 Move X0, X27
	587 Call 0x21A5990, X0, X1
	588 Move X0, [X22]
	589 Move X23, [X31+544]
	590 Move W8, [X0+224]
	591 Compare W8, 0
	592 JumpIfNotEqual {594}
	593 Call 0x1C17DFC
	594 Move X0, X23
	595 Move X1, X31
	596 Move X2, X31
	597 Call Object.op_Inequality, X0, X1
	598 Move TEMP, X0
	599 And TEMP, TEMP, 1
	600 Compare TEMP, 1
	601 JumpIfNotEqual {666}
	602 Move W8, [X27+55]
	603 Move X0, [X22]
	604 NotImplemented "Instruction CMP not yet implemented."
	605 Move X10, [X31+16]
	606 Move X8, [X31+24]
	607 Move W9, [X0+224]
	608 NotImplemented "Instruction CSEL not yet implemented."
	609 Compare W9, 0
	610 JumpIfNotEqual {612}
	611 Call 0x1C17DFC
	612 Move X0, X23
	613 Move X1, X31
	614 Move X2, X31
	615 Call Object.op_Inequality, X0, X1
	616 Move TEMP, X0
	617 And TEMP, TEMP, 1
	618 Compare TEMP, 1
	619 JumpIfNotEqual {666}
	620 Move X1, [X31+544]
	621 Move X0, [X31+40]
	622 Move X2, X23
	623 Move X3, X31
	624 Call CommandBuffer.DrawRenderer, X0, X1, X2
	625 Add X8, X27, 332
	626 Move V0, [X8+32]
	627 Move V1, [X8+48]
	628 Move V2, [X8]
	629 Move V3, [X8+16]
	630 Move X0, [X22]
	631 Move [X31+512], V0
	632 Move [X31+520], V1
	633 Move [X31+480], V2
	634 Move [X31+488], V3
	635 Move W8, [X27+55]
	636 Move W9, [X0+224]
	637 NotImplemented "Instruction CMP not yet implemented."
	638 Move X10, [X31+16]
	639 Move X8, [X31+24]
	640 NotImplemented "Instruction CSEL not yet implemented."
	641 Compare W9, 0
	642 JumpIfNotEqual {644}
	643 Call 0x1C17DFC
	644 Move X0, X23
	645 Move X1, X31
	646 Move X2, X31
	647 Call Object.op_Inequality, X0, X1
	648 Move TEMP, X0
	649 And TEMP, TEMP, 1
	650 Compare TEMP, 1
	651 JumpIfNotEqual {666}
	652 Move X1, [X27+80]
	653 Move V0, [X31+480]
	654 Move V1, [X31+496]
	655 Move V2, [X31+512]
	656 Move V3, [X31+528]
	657 Move [X31+112], V0
	658 Move [X31+120], V1
	659 Move [X31+144], V2
	660 Move [X31+152], V3
	661 Move X0, [X31+40]
	662 Add X2, X31, 112
	663 Move X3, X23
	664 Move X4, X31
	665 Call CommandBuffer.DrawMesh, X0, X1, X2, X3
	666 Move W8, [X26+24]
	667 Add W29, W29, 1
	668 NotImplemented "Instruction CMP not yet implemented."
	669 NotImplemented "Instruction CMP not yet implemented."
	670 Move W27, W31
	671 Move X2, [X21]
	672 Move X0, X26
	673 Move W1, W27
	674 Call List`1<Object>.get_Item, X0, X1
	675 Move X29, X0
	676 Compare X0, 0
	677 JumpIfEqual {784}
	678 Move X0, X29
	679 Move X1, X19
	680 Call ShadowCaster2D.IsLit, X0, X1
	681 Move TEMP, X0
	682 And TEMP, TEMP, 1
	683 Compare TEMP, 1
	684 JumpIfNotEqual {748}
	685 Move X0, [X22]
	686 Move W8, [X0+224]
	687 Compare W8, 0
	688 JumpIfNotEqual {690}
	689 Call 0x1C17DFC
	690 Move X0, X29
	691 Move X1, X31
	692 Move X2, X31
	693 Call Object.op_Inequality, X0, X1
	694 Move TEMP, X0
	695 And TEMP, TEMP, 1
	696 Compare TEMP, 1
	697 JumpIfNotEqual {748}
	698 Move X0, [X22]
	699 Move W8, [X0+224]
	700 Compare W8, 0
	701 JumpIfNotEqual {703}
	702 Call 0x1C17DFC
	703 Move X0, X24
	704 Move X1, X31
	705 Move X2, X31
	706 Call Object.op_Inequality, X0, X1
	707 Move TEMP, X0
	708 And TEMP, TEMP, 1
	709 Compare TEMP, 1
	710 JumpIfNotEqual {748}
	711 Move W1, [X31+572]
	712 Move X0, X29
	713 Call ShadowCaster2D.IsShadowedLayer, X0, X1
	714 Move TEMP, X0
	715 And TEMP, TEMP, 1
	716 Compare TEMP, 1
	717 JumpIfNotEqual {748}
	718 Move W8, [X29+54]
	719 Compare W8, 0
	720 JumpIfEqual {748}
	721 Move X8, 0x72B000
	722 Move X8, [X8+1696]
	723 Move X0, [X8]
	724 Move W8, [X0+224]
	725 Compare W8, 0
	726 JumpIfNotEqual {728}
	727 Call 0x1C17DFC
	728 Move X0, [X31+40]
	729 Move X1, X29
	730 Call ShadowRendering.SetShadowProjectionGlobals, X0, X1
	731 Add X8, X29, 332
	732 Move V0, [X8+32]
	733 Move V1, [X8+48]
	734 Move V2, [X8]
	735 Move V3, [X8+16]
	736 Move X1, [X29+80]
	737 Move [X31+80], V0
	738 Move [X31+88], V1
	739 Move [X31+48], V2
	740 Move [X31+56], V3
	741 Move X0, [X31+40]
	742 Add X2, X31, 48
	743 Move W5, 1
	744 Move X3, X24
	745 Move W4, W31
	746 Move X6, X31
	747 Call CommandBuffer.DrawMesh, X0, X1, X2, X3, X4, X5
	748 Move W8, [X26+24]
	749 Add W27, W27, 1
	750 NotImplemented "Instruction CMP not yet implemented."
	751 Move W8, [X20+24]
	752 Add W25, W25, 1
	753 Move X0, X20
	754 NotImplemented "Instruction CMP not yet implemented."
	755 Move X21, X31
	756 Add X0, X31, 552
	757 Move X1, X31
	758 Call ProfilingScope.Dispose, X0
	759 Compare X21, 0
	760 JumpIfNotEqual {795}
	761 Move W19, 1
	762 Add X0, X31, 568
	763 Move X1, X31
	764 Call ProfilingScope.Dispose, X0
	765 Move W0, W19
	766 Add X31, X31, 560
	767 Move X20, [X31+96]
	768 Move X19, [X31+104]
	769 Move X22, [X31+80]
	770 Move X21, [X31+88]
	771 Move X24, [X31+64]
	772 Move X23, [X31+72]
	773 Move X26, [X31+48]
	774 Move X25, [X31+56]
	775 Move X28, [X31+32]
	776 Move X27, [X31+40]
	777 Move X29, [X31+16]
	778 Move X30, [X31+24]
	779 Move V8, [X31+112]
	780 Return X0
	781 Call 0x1C17F20
	782 Call 0x1C17F20
	783 Call 0x1C17F20
	784 Call 0x1C17F20
	785 Call 0x1C17F20
	786 Call 0x1C17F20
	787 Call 0x1C17F20
	788 Call 0x1C17F20
	789 Call 0x1C17F28
	790 Call 0x1C17F20
	791 Call 0x1C17F20
	792 Call 0x1C17F20
	793 Call 0x1C17F28
	794 Call 0x1C17F20
	795 Move X0, X21
	796 Call 0x1C17F18
	797 Move X19, X1
	798 Move X20, X0
	799 NotImplemented "Instruction CMP not yet implemented."
	800 Move X0, X20
	801 Call 0x3EB2AD0
	802 Move X21, [X0]
	803 Call 0x3EB2AE0
	804 Move X21, X31
	805 Add X0, X31, 552
	806 Move X1, X31
	807 Call ProfilingScope.Dispose, X0
	808 Compare X21, 0
	809 JumpIfEqual {816}
	810 Move X0, X21
	811 Call 0x1C17F18
	812 Move X19, X1
	813 Move X20, X0
	814 Move X19, X1
	815 Move X20, X0
	816 NotImplemented "Instruction CMP not yet implemented."
	817 Move X0, X20
	818 Call 0x3EB2AD0
	819 Move X19, [X0]
	820 Call 0x3EB2AE0
	821 Add X0, X31, 568
	822 Move X1, X31
	823 Call ProfilingScope.Dispose, X0
	824 Compare X19, 0
	825 JumpIfEqual {765}
	826 Move X0, X19
	827 Call 0x1C17F18
	828 Move X19, X31
	829 Move X20, X0
	830 Add X0, X31, 568
	831 Move X1, X31
	832 Call ProfilingScope.Dispose, X0
	833 Compare X19, 0
	834 JumpIfNotEqual {837}
	835 Move X0, X20
	836 Call 0x1D2D690
	837 Move X0, X19
	838 Call 0x1C17F18
	839 Call 0x1991590

Method: System.Void .cctor()

Disassembly:
	0x03A2B188 LDP S0, S1, [X9]
	0x03A2B18C LDP S2, S3, [X9 + 0x8]
	0x03A2B190 LDR X9, [X22]
	0x03A2B194 STR W10, [X19 + 0x1C]
	0x03A2B198 CBZ X8, 0x3A2B1F4
	0x03A2B19C LDRSW X10, [X19 + 0x18]
	0x03A2B1A0 LDR W11, [X8 + 0x18]
	0x03A2B1A4 CMP W10, W11
	0x03A2B1A8 B.CS 0x3A2B1C4
	0x03A2B1AC ADD W9, W10, 0x1
	0x03A2B1B0 ADD X8, X8, X10, 0x4, LSL
	0x03A2B1B4 STR W9, [X19 + 0x18]
	0x03A2B1B8 STP S0, S1, [X8 + 0x20]
	0x03A2B1BC STP S2, S3, [X8 + 0x28]
	0x03A2B1C0 B 0x3A2B1D8
	0x03A2B1C4 LDR X8, [X9 + 0x20]
	0x03A2B1C8 MOV X0, X19
	0x03A2B1CC LDR X8, [X8 + 0xC0]
	0x03A2B1D0 LDR X1, [X8 + 0x70]
	0x03A2B1D4 BL 0x30CEE24
	0x03A2B1D8 SUBS W20, W20, 0x1
	0x03A2B1DC B.NE 0x3A2B15C
	0x03A2B1E0 LDP X20, X19, [X31 + 0x30]
	0x03A2B1E4 LDP X22, X21, [X31 + 0x20]
	0x03A2B1E8 LDP X24, X23, [X31 + 0x10]
	0x03A2B1EC LDR X30, [X31], #0x40
	0x03A2B1F0 RET
	0x03A2B1F4 BL 0x1C16F20
	0x03A2B1F8 MOV X1, X31
	0x03A2B1FC B 0x33BDD8C
	0x03A2B200 LDRB W8, [X1 + 0x18]
	0x03A2B204 LDRB W9, [X2 + 0x18]
	0x03A2B208 AND X8, X8, 0x1
	0x03A2B20C AND X9, X9, 0x1
	0x03A2B210 CMP W8, 0x0
	0x03A2B214 CSET W10, EQ
	0x03A2B218 CMP W9, 0x0
	0x03A2B21C CSET W11, EQ
	0x03A2B220 LDR W8, [X1, X8, LSL #2]
	0x03A2B224 LDR W10, [X1, W10, UXTW]
	0x03A2B228 LDR W9, [X2, X9, LSL #2]
	0x03A2B22C LDR W11, [X2, W11, UXTW]
	0x03A2B230 SUBS W8, W8, W9
	0x03A2B234 SUB W9, W10, W11
	0x03A2B238 CSEL W0, W9, W8, EQ
	0x03A2B23C RET
	0x03A2B240 STR X30, [X31 - 0x20]!
	0x03A2B244 STP X20, X19, [X31 + 0x10]
	0x03A2B248 ADRP X19, 0x9B7000
	0x03A2B24C ADRP X20, 0x729000
	0x03A2B250 LDRB W8, [X19 + 0x54]
	0x03A2B254 LDR X20, [X20 + 0xAB0]
	0x03A2B258 TBNZ X8, 0x0, 0x3A2B270
	0x03A2B25C ADRP X0, 0x729000
	0x03A2B260 LDR X0, [X0 + 0xAB0]
	0x03A2B264 BL 0x1C16CF4
	0x03A2B268 MOVZ W8, 0x1
	0x03A2B26C STRB W8, [X19 + 0x54]
	0x03A2B270 LDR X0, [X20]
	0x03A2B274 BL 0x1C16F10
	0x03A2B278 MOV X1, X31
	0x03A2B27C MOV X19, X0
	0x03A2B280 BL 0x33BDD8C
	0x03A2B284 LDR X8, [X20]
	0x03A2B288 LDR X8, [X8 + 0xB8]
	0x03A2B28C STR X19, [X8]
	0x03A2B290 LDP X20, X19, [X31 + 0x10]
	0x03A2B294 LDR X30, [X31], #0x20
	0x03A2B298 RET
	0x03A2B29C MOV X1, X31
	0x03A2B2A0 B 0x33BDD8C
	0x03A2B2A4 MOV W0, W1
	0x03A2B2A8 RET
	0x03A2B2AC LDP S0, S1, [X1]
	0x03A2B2B0 FMOV S2, W31
	0x03A2B2B4 RET
	0x03A2B2B8 STR D10, [X31 - 0x30]!
	0x03A2B2BC STP D9, D8, [X31 + 0x8]
	0x03A2B2C0 STR X30, [X31 + 0x18]
	0x03A2B2C4 STP X20, X19, [X31 + 0x20]
	0x03A2B2C8 ADRP X20, 0x9B7000
	0x03A2B2CC LDRB W8, [X20 + 0x55]
	0x03A2B2D0 MOV X19, X1
	0x03A2B2D4 TBNZ X8, 0x0, 0x3A2B2EC
	0x03A2B2D8 ADRP X0, 0x6F0000
	0x03A2B2DC LDR X0, [X0 + 0x5E0]
	0x03A2B2E0 BL 0x1C16CF4
	0x03A2B2E4 MOVZ W8, 0x1
	0x03A2B2E8 STRB W8, [X20 + 0x55]
	0x03A2B2EC LDR X0, [X19 + 0x10]
	0x03A2B2F0 CBZ X0, 0x3A2B3C0
	0x03A2B2F4 ADRP X20, 0x6F0000
	0x03A2B2F8 LDR X20, [X20 + 0x5E0]
	0x03A2B2FC LDR X8, [X0]
	0x03A2B300 LDR X1, [X20]
	0x03A2B304 LDR X8, [X8 + 0x40]
	0x03A2B308 LDR X9, [X1 + 0x40]
	0x03A2B30C CMP X8, X9
	0x03A2B310 B.NE 0x3A2B3C8
	0x03A2B314 BL 0x1C16E08
	0x03A2B318 LDR X8, [X19 + 0x10]
	0x03A2B31C CBZ X8, 0x3A2B3C0
	0x03A2B320 LDR X9, [X8]
	0x03A2B324 LDR X1, [X20]
	0x03A2B328 LDR X9, [X9 + 0x40]
	0x03A2B32C LDR X10, [X1 + 0x40]
	0x03A2B330 CMP X9, X10
	0x03A2B334 B.NE 0x3A2B3C4
	0x03A2B338 LDR V8, [X0]
	0x03A2B33C MOV X0, X8
	0x03A2B340 BL 0x1C16E08
	0x03A2B344 LDR X8, [X19 + 0x10]
	0x03A2B348 CBZ X8, 0x3A2B3C0
	0x03A2B34C LDR X9, [X8]
	0x03A2B350 LDR X1, [X20]
	0x03A2B354 LDR X9, [X9 + 0x40]
	0x03A2B358 LDR X10, [X1 + 0x40]
	0x03A2B35C CMP X9, X10
	0x03A2B360 B.NE 0x3A2B3C4
	0x03A2B364 LDR V9, [X0 + 0x4]
	0x03A2B368 MOV X0, X8
	0x03A2B36C BL 0x1C16E08
	0x03A2B370 LDR X8, [X19 + 0x10]
	0x03A2B374 CBZ X8, 0x3A2B3C0
	0x03A2B378 LDR X9, [X8]
	0x03A2B37C LDR X1, [X20]
	0x03A2B380 LDR X9, [X9 + 0x40]
	0x03A2B384 LDR X10, [X1 + 0x40]
	0x03A2B388 CMP X9, X10
	0x03A2B38C B.NE 0x3A2B3C4
	0x03A2B390 LDR V10, [X0 + 0x8]
	0x03A2B394 MOV X0, X8
	0x03A2B398 BL 0x1C16E08
	0x03A2B39C LDR V3, [X0 + 0xC]
	0x03A2B3A0 MOV V0.16B, V8.16B
	0x03A2B3A4 MOV V1.16B, V9.16B
	0x03A2B3A8 LDP X20, X19, [X31 + 0x20]
	0x03A2B3AC LDR X30, [X31 + 0x18]
	0x03A2B3B0 LDP D9, D8, [X31 + 0x8]
	0x03A2B3B4 MOV V2.16B, V10.16B
	0x03A2B3B8 LDR V10, [X31], #0x30
	0x03A2B3BC RET
	0x03A2B3C0 BL 0x1C16F20
	0x03A2B3C4 MOV X0, X8
	0x03A2B3C8 BL 0x1C171E0
	0x03A2B3CC STR X30, [X31 - 0x20]!
	0x03A2B3D0 STP X20, X19, [X31 + 0x10]
	0x03A2B3D4 ADRP X20, 0x9B7000
	0x03A2B3D8 LDRB W8, [X20 + 0x56]
	0x03A2B3DC MOV X19, X0
	0x03A2B3E0 TBNZ X8, 0x0, 0x3A2B404
	0x03A2B3E4 ADRP X0, 0x729000
	0x03A2B3E8 LDR X0, [X0 + 0xBD0]
	0x03A2B3EC BL 0x1C16CF4
	0x03A2B3F0 ADRP X0, 0x6C8000
	0x03A2B3F4 LDR X0, [X0 + 0x598]
	0x03A2B3F8 BL 0x1C16CF4
	0x03A2B3FC MOVZ W8, 0x1
	0x03A2B400 STRB W8, [X20 + 0x56]
	0x03A2B404 CBZ X19, 0x3A2B454
	0x03A2B408 ADRP X8, 0x729000
	0x03A2B40C LDR X8, [X8 + 0xBD0]
	0x03A2B410 ADRP X20, 0x6C8000
	0x03A2B414 MOV X0, X19
	0x03A2B418 LDR X1, [X8]
	0x03A2B41C LDR X20, [X20 + 0x598]
	0x03A2B420 BL 0x21A3894
	0x03A2B424 LDR X8, [X20]
	0x03A2B428 MOV X19, X0
	0x03A2B42C LDR W9, [X8 + 0xE0]
	0x03A2B430 CBNZ W9, 0x3A2B43C
	0x03A2B434 MOV X0, X8
	0x03A2B438 BL 0x1C16DFC
	0x03A2B43C MOV X0, X19
	0x03A2B440 LDP X20, X19, [X31 + 0x10]
	0x03A2B444 MOV X1, X31
	0x03A2B448 MOV X2, X31
	0x03A2B44C LDR X30, [X31], #0x20
	0x03A2B450 B 0x3C354F8
	0x03A2B454 BL 0x1C16F20
	0x03A2B458 STR X30, [X31 - 0x20]!
	0x03A2B45C STP X20, X19, [X31 + 0x10]
	0x03A2B460 ADRP X20, 0x9B7000
	0x03A2B464 LDRB W8, [X20 + 0x57]
	0x03A2B468 MOV X19, X0
	0x03A2B46C TBNZ X8, 0x0, 0x3A2B490
	0x03A2B470 ADRP X0, 0x729000
	0x03A2B474 LDR X0, [X0 + 0xBD8]
	0x03A2B478 BL 0x1C16CF4
	0x03A2B47C ADRP X0, 0x6C8000
	0x03A2B480 LDR X0, [X0 + 0x598]
	0x03A2B484 BL 0x1C16CF4
	0x03A2B488 MOVZ W8, 0x1
	0x03A2B48C STRB W8, [X20 + 0x57]
	0x03A2B490 CBZ X19, 0x3A2B4E0
	0x03A2B494 ADRP X8, 0x729000
	0x03A2B498 LDR X8, [X8 + 0xBD8]
	0x03A2B49C ADRP X20, 0x6C8000
	0x03A2B4A0 MOV X0, X19
	0x03A2B4A4 LDR X1, [X8]
	0x03A2B4A8 LDR X20, [X20 + 0x598]
	0x03A2B4AC BL 0x21A3894
	0x03A2B4B0 LDR X8, [X20]
	0x03A2B4B4 MOV X19, X0
	0x03A2B4B8 LDR W9, [X8 + 0xE0]
	0x03A2B4BC CBNZ W9, 0x3A2B4C8
	0x03A2B4C0 MOV X0, X8
	0x03A2B4C4 BL 0x1C16DFC
	0x03A2B4C8 MOV X0, X19
	0x03A2B4CC LDP X20, X19, [X31 + 0x10]
	0x03A2B4D0 MOV X1, X31
	0x03A2B4D4 MOV X2, X31
	0x03A2B4D8 LDR X30, [X31], #0x20
	0x03A2B4DC B 0x3C354F8
	0x03A2B4E0 BL 0x1C16F20
	0x03A2B4E4 MOV X1, X31
	0x03A2B4E8 B 0x3C36D2C
	0x03A2B4EC MOV X1, X31
	0x03A2B4F0 B 0x33BDD8C
	0x03A2B4F4 MOV X1, X31
	0x03A2B4F8 B 0x33BDD8C
	0x03A2B4FC MOVZ W8, 0x8
	0x03A2B500 MOV X1, X31
	0x03A2B504 STR W8, [X0 + 0x18]
	0x03A2B508 B 0x33BDD8C
	0x03A2B50C STR X30, [X31 - 0x10]!
	0x03A2B510 LDR X8, [X0 + 0x40]
	0x03A2B514 CBZ X8, 0x3A2B540
	0x03A2B518 LDR W9, [X8 + 0x18]
	0x03A2B51C CBZ W9, 0x3A2B544
	0x03A2B520 STR X31, [X8 + 0x20]
	0x03A2B524 LDR X8, [X0 + 0x40]
	0x03A2B528 CBZ X8, 0x3A2B540
	0x03A2B52C LDR W9, [X8 + 0x18]
	0x03A2B530 CBZ W9, 0x3A2B544
	0x03A2B534 LDR X0, [X8 + 0x20]
	0x03A2B538 LDR X30, [X31], #0x10
	0x03A2B53C RET
	0x03A2B540 BL 0x1C16F20
	0x03A2B544 BL 0x1C16F28
	0x03A2B548 STP X30, X21, [X31 - 0x20]!
	0x03A2B54C STP X20, X19, [X31 + 0x10]
	0x03A2B550 ADRP X20, 0x9B7000
	0x03A2B554 LDRB W8, [X20 + 0x58]
	0x03A2B558 MOV X19, X0
	0x03A2B55C TBNZ X8, 0x0, 0x3A2B5C8
	0x03A2B560 ADRP X0, 0x727000
	0x03A2B564 LDR X0, [X0 + 0xE28]
	0x03A2B568 BL 0x1C16CF4
	0x03A2B56C ADRP X0, 0x6C8000
	0x03A2B570 LDR X0, [X0 + 0xA28]
	0x03A2B574 BL 0x1C16CF4
	0x03A2B578 ADRP X0, 0x6C8000
	0x03A2B57C LDR X0, [X0 + 0x598]
	0x03A2B580 BL 0x1C16CF4
	0x03A2B584 ADRP X0, 0x729000
	0x03A2B588 LDR X0, [X0 + 0xBE0]
	0x03A2B58C BL 0x1C16CF4
	0x03A2B590 ADRP X0, 0x6F1000
	0x03A2B594 LDR X0, [X0 + 0x8A8]
	0x03A2B598 BL 0x1C16CF4
	0x03A2B59C ADRP X0, 0x729000
	0x03A2B5A0 LDR X0, [X0 + 0x8F8]
	0x03A2B5A4 BL 0x1C16CF4
	0x03A2B5A8 ADRP X0, 0x729000
	0x03A2B5AC LDR X0, [X0 + 0xBE8]
	0x03A2B5B0 BL 0x1C16CF4
	0x03A2B5B4 ADRP X0, 0x729000
	0x03A2B5B8 LDR X0, [X0 + 0xBF0]
	0x03A2B5BC BL 0x1C16CF4
	0x03A2B5C0 MOVZ W8, 0x1
	0x03A2B5C4 STRB W8, [X20 + 0x58]
	0x03A2B5C8 LDR X0, [X19 + 0x40]
	0x03A2B5CC CBNZ X0, 0x3A2B5EC
	0x03A2B5D0 ADRP X8, 0x729000
	0x03A2B5D4 LDR X8, [X8 + 0xBE0]
	0x03A2B5D8 MOVZ W1, 0x1
	0x03A2B5DC LDR X0, [X8]
	0x03A2B5E0 BL 0x1C16D6C
	0x03A2B5E4 STR X0, [X19 + 0x40]
	0x03A2B5E8 CBZ X0, 0x3A2B804
	0x03A2B5EC LDRSW X9, [X19 + 0x48]
	0x03A2B5F0 LDR W8, [X0 + 0x18]
	0x03A2B5F4 CMP W9, W8
	0x03A2B5F8 B.CS 0x3A2B800
	0x03A2B5FC ADRP X8, 0x6C8000
	0x03A2B600 LDR X8, [X8 + 0x598]
	0x03A2B604 ADD X9, X0, X9, 0x3, LSL
	0x03A2B608 LDR X20, [X9 + 0x20]
	0x03A2B60C LDR X8, [X8]
	0x03A2B610 LDR W10, [X8 + 0xE0]
	0x03A2B614 CBNZ W10, 0x3A2B620
	0x03A2B618 MOV X0, X8
	0x03A2B61C BL 0x1C16DFC
	0x03A2B620 MOV X0, X20
	0x03A2B624 MOV X1, X31
	0x03A2B628 MOV X2, X31
	0x03A2B62C BL 0x3C3883C
	0x03A2B630 TBZ X0, 0x0, 0x3A2B71C
	0x03A2B634 LDP W9, W8, [X19 + 0x28]
	0x03A2B638 CMP W8, W9
	0x03A2B63C B.NE 0x3A2B714
	0x03A2B640 LDR X8, [X19 + 0x40]
	0x03A2B644 CBZ X8, 0x3A2B804
	0x03A2B648 LDRSW X9, [X19 + 0x48]
	0x03A2B64C LDR W10, [X8 + 0x18]
	0x03A2B650 CMP W9, W10
	0x03A2B654 B.CS 0x3A2B800
	0x03A2B658 ADD X8, X8, X9, 0x3, LSL
	0x03A2B65C LDR X0, [X8 + 0x20]

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X27, 0x9B8000
	014 Move X28, 0x72A000
	015 Move X21, 0x72A000
	016 Move X19, 0x72A000
	017 Move X26, 0x72A000
	018 Move X25, 0x72A000
	019 Move X24, 0x72A000
	020 Move X22, 0x72A000
	021 Move X20, 0x72A000
	022 Move X29, 0x72A000
	023 Move X23, 0x726000
	024 Move X28, [X28+2856]
	025 Move X21, [X21+1696]
	026 Move X19, [X19+2864]
	027 Move X26, [X26+2872]
	028 Move X25, [X25+2880]
	029 Move X24, [X24+2888]
	030 Move X22, [X22+2896]
	031 Move X20, [X20+2904]
	032 Move X29, [X29+2912]
	033 Move X23, [X23+1432]
	034 Move W8, [X27+76]
	035 Move TEMP, X8
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfEqual {98}
	039 Move X0, 0x6CE000
	040 Move X0, [X0+320]
	041 Call 0x1C17CF4
	042 Move X0, 0x72A000
	043 Move X0, [X0+2920]
	044 Call 0x1C17CF4
	045 Move X0, 0x726000
	046 Move X0, [X0+1432]
	047 Call 0x1C17CF4
	048 Move X0, 0x72A000
	049 Move X0, [X0+1696]
	050 Call 0x1C17CF4
	051 Move X0, 0x72A000
	052 Move X0, [X0+2864]
	053 Call 0x1C17CF4
	054 Move X0, 0x72A000
	055 Move X0, [X0+2872]
	056 Call 0x1C17CF4
	057 Move X0, 0x72A000
	058 Move X0, [X0+2928]
	059 Call 0x1C17CF4
	060 Move X0, 0x72A000
	061 Move X0, [X0+2888]
	062 Call 0x1C17CF4
	063 Move X0, 0x72A000
	064 Move X0, [X0+2936]
	065 Call 0x1C17CF4
	066 Move X0, 0x72A000
	067 Move X0, [X0+2944]
	068 Call 0x1C17CF4
	069 Move X0, 0x72A000
	070 Move X0, [X0+2952]
	071 Call 0x1C17CF4
	072 Move X0, 0x72A000
	073 Move X0, [X0+2856]
	074 Call 0x1C17CF4
	075 Move X0, 0x72A000
	076 Move X0, [X0+2960]
	077 Call 0x1C17CF4
	078 Move X0, 0x72A000
	079 Move X0, [X0+2912]
	080 Call 0x1C17CF4
	081 Move X0, 0x72A000
	082 Move X0, [X0+2968]
	083 Call 0x1C17CF4
	084 Move X0, 0x72A000
	085 Move X0, [X0+2896]
	086 Call 0x1C17CF4
	087 Move X0, 0x72A000
	088 Move X0, [X0+2904]
	089 Call 0x1C17CF4
	090 Move X0, 0x72A000
	091 Move X0, [X0+2976]
	092 Call 0x1C17CF4
	093 Move X0, 0x72A000
	094 Move X0, [X0+2880]
	095 Call 0x1C17CF4
	096 Move W8, 1
	097 Move [X27+76], W8
	098 Move X0, [X28]
	099 Move X1, X31
	100 Call Shader.PropertyToID, X0
	101 Move X8, [X21]
	102 Move X1, X31
	103 Move X8, [X8+184]
	104 Move [X8], W0
	105 Move X0, [X19]
	106 Call Shader.PropertyToID, X0
	107 Move X8, [X21]
	108 Move X1, X31
	109 Move X8, [X8+184]
	110 Move [X8+4], W0
	111 Move X0, [X26]
	112 Call Shader.PropertyToID, X0
	113 Move X8, [X21]
	114 Move X1, X31
	115 Move X8, [X8+184]
	116 Move [X8+8], W0
	117 Move X0, [X25]
	118 Call Shader.PropertyToID, X0
	119 Move X8, [X21]
	120 Move X1, X31
	121 Move X8, [X8+184]
	122 Move [X8+12], W0
	123 Move X0, [X24]
	124 Call Shader.PropertyToID, X0
	125 Move X8, [X21]
	126 Move X1, X31
	127 Move X8, [X8+184]
	128 Move [X8+16], W0
	129 Move X0, [X22]
	130 Call Shader.PropertyToID, X0
	131 Move X8, [X21]
	132 Move X1, X31
	133 Move X8, [X8+184]
	134 Move [X8+20], W0
	135 Move X0, [X20]
	136 Call Shader.PropertyToID, X0
	137 Move X8, [X21]
	138 Move X1, X31
	139 Move X8, [X8+184]
	140 Move [X8+24], W0
	141 Move X0, [X29]
	142 Call Shader.PropertyToID, X0
	143 Move X8, [X21]
	144 Move X1, X31
	145 Move X8, [X8+184]
	146 Move [X8+28], W0
	147 Move X8, 0x72A000
	148 Move X8, [X8+2944]
	149 Move X0, [X8]
	150 Call Shader.PropertyToID, X0
	151 Move X8, [X21]
	152 Move X1, X31
	153 Move X8, [X8+184]
	154 Move [X8+32], W0
	155 Move X8, 0x72A000
	156 Move X8, [X8+2928]
	157 Move X0, [X8]
	158 Call Shader.PropertyToID, X0
	159 Move X8, [X21]
	160 Move X8, [X8+184]
	161 Move [X8+36], W0
	162 Move X0, [X23]
	163 Call 0x1C17F10
	164 Move X8, 0x72A000
	165 Move X8, [X8+2936]
	166 Move X2, X31
	167 Move X19, X0
	168 Move X1, [X8]
	169 Call ProfilingSampler..ctor, X0, X1
	170 Move X8, [X21]
	171 Move X8, [X8+184]
	172 Move [X8+40], X19
	173 Move X0, [X23]
	174 Call 0x1C17F10
	175 Move X8, 0x72A000
	176 Move X8, [X8+2968]
	177 Move X2, X31
	178 Move X19, X0
	179 Move X1, [X8]
	180 Call ProfilingSampler..ctor, X0, X1
	181 Move X8, [X21]
	182 Move X8, [X8+184]
	183 Move [X8+48], X19
	184 Move X0, [X23]
	185 Call 0x1C17F10
	186 Move X8, 0x72A000
	187 Move X8, [X8+2976]
	188 Move X2, X31
	189 Move X19, X0
	190 Move X1, [X8]
	191 Call ProfilingSampler..ctor, X0, X1
	192 Move X8, [X21]
	193 Move X8, [X8+184]
	194 Move [X8+56], X19
	195 Move X0, [X23]
	196 Call 0x1C17F10
	197 Move X8, 0x72A000
	198 Move X8, [X8+2960]
	199 Move X2, X31
	200 Move X19, X0
	201 Move X1, [X8]
	202 Call ProfilingSampler..ctor, X0, X1
	203 Move X8, [X21]
	204 Move X8, [X8+184]
	205 Move [X8+64], X19
	206 Move X0, [X23]
	207 Call 0x1C17F10
	208 Move X8, 0x72A000
	209 Move X8, [X8+2952]
	210 Move X2, X31
	211 Move X19, X0
	212 Move X1, [X8]
	213 Call ProfilingSampler..ctor, X0, X1
	214 Move X8, [X21]
	215 Move W1, 4
	216 Move X8, [X8+184]
	217 Move [X8+72], X19
	218 Move [X8+80], X31
	219 Move [X8+88], X31
	220 Move [X8+96], X31
	221 Move X8, 0x6CE000
	222 Move X8, [X8+320]
	223 Move X0, [X8]
	224 Call 0x1C17D6C
	225 Compare X0, 0
	226 JumpIfEqual {333}
	227 Move W8, [X0+24]
	228 Compare W8, 0
	229 JumpIfEqual {329}
	230 Move X9, -49537024
	231 Move V0, [X9+187]
	232 NotImplemented "Instruction CMP not yet implemented."
	233 Move [X0+2], V0
	234 Move X9, -49545216
	235 Move V0, [X9+71]
	236 NotImplemented "Instruction CMP not yet implemented."
	237 Move [X0+3], V0
	238 Move X9, -49537024
	239 Move V0, [X9+208]
	240 NotImplemented "Instruction CMP not yet implemented."
	241 Move [X0+4], V0
	242 Move X8, -49537024
	243 Move V0, [X8+17]
	244 Move X9, 0x72A000
	245 Move W1, 4
	246 Move [X0+5], V0
	247 Move X8, [X21]
	248 Move X8, [X8+184]
	249 Move X9, [X9+2920]
	250 Move [X8+104], X0
	251 Move X0, [X9]
	252 Call 0x1C17D6C
	253 Compare X0, 0
	254 JumpIfEqual {333}
	255 Move X8, [X21]
	256 Move X19, X0
	257 Move X8, [X8+184]
	258 Move X20, [X8+48]
	259 Compare X20, 0
	260 JumpIfEqual {267}
	261 Move X8, [X19]
	262 Move X0, X20
	263 Move X1, [X8+64]
	264 Call 0x1C17E00
	265 Compare X0, 0
	266 JumpIfEqual {330}
	267 Move W8, [X19+24]
	268 Compare W8, 0
	269 JumpIfEqual {329}
	270 Move [X19+32], X20
	271 Move X9, [X21]
	272 Move X9, [X9+184]
	273 Move X20, [X9+72]
	274 Compare X20, 0
	275 JumpIfEqual {283}
	276 Move X8, [X19]
	277 Move X0, X20
	278 Move X1, [X8+64]
	279 Call 0x1C17E00
	280 Compare X0, 0
	281 JumpIfEqual {330}
	282 Move W8, [X19+24]
	283 NotImplemented "Instruction CMP not yet implemented."
	284 Move [X19+40], X20
	285 Move X9, [X21]
	286 Move X9, [X9+184]
	287 Move X20, [X9+64]
	288 Compare X20, 0
	289 JumpIfEqual {297}
	290 Move X8, [X19]
	291 Move X0, X20
	292 Move X1, [X8+64]
	293 Call 0x1C17E00
	294 Compare X0, 0
	295 JumpIfEqual {330}
	296 Move W8, [X19+24]
	297 NotImplemented "Instruction CMP not yet implemented."
	298 Move [X19+48], X20
	299 Move X9, [X21]
	300 Move X9, [X9+184]
	301 Move X20, [X9+56]
	302 Compare X20, 0
	303 JumpIfEqual {311}
	304 Move X8, [X19]
	305 Move X0, X20
	306 Move X1, [X8+64]
	307 Call 0x1C17E00
	308 Compare X0, 0
	309 JumpIfEqual {330}
	310 Move W8, [X19+24]
	311 NotImplemented "Instruction CMP not yet implemented."
	312 Move [X19+56], X20
	313 Move X8, [X21]
	314 Move X22, [X31+64]
	315 Move X21, [X31+72]
	316 Move X24, [X31+48]
	317 Move X23, [X31+56]
	318 Move X26, [X31+32]
	319 Move X25, [X31+40]
	320 Move X8, [X8+184]
	321 Move X28, [X31+16]
	322 Move X27, [X31+24]
	323 Move [X8+112], X19
	324 Move X20, [X31+80]
	325 Move X19, [X31+88]
	326 Move X29, [X31+96]
	327 Move X30, [X31+104]
	328 Return 
	329 Call 0x1C17F28
	330 Call 0x1C17F44
	331 Move X1, X31
	332 Call 0x1C17DEC
	333 Call 0x1C17F20

