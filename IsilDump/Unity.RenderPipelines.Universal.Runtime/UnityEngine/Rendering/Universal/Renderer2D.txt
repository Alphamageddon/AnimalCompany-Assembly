Type: UnityEngine.Rendering.Universal.Renderer2D

Method: System.Boolean get_createColorTexture()

Disassembly:
	0x03A2246C LDR X0, [X19 + 0xE0]
	0x03A22470 CBZ X0, 0x3A22FC8

ISIL:
	001 Move W0, [X0+489]
	002 Return X0

Method: System.Boolean get_createDepthTexture()

Disassembly:
	0x03A22474 MOV X1, X31
	0x03A22478 BL 0x3A35934

ISIL:
	001 Move W0, [X0+490]
	002 Return X0

Method: UnityEngine.Rendering.Universal.Internal.ColorGradingLutPass get_colorGradingLutPass()

Disassembly:
	0x03A2247C AND W24, W0, 0x1
	0x03A22480 LDR X0, [X19 + 0xE0]

ISIL:
	001 Move X0, [X0+544]
	002 Return X0

Method: UnityEngine.Rendering.Universal.PostProcessPass get_postProcessPass()

Disassembly:
	0x03A22484 CBZ X0, 0x3A22FC8
	0x03A22488 MOV X1, X22

ISIL:
	001 Move X0, [X0+552]
	002 Return X0

Method: UnityEngine.Rendering.Universal.PostProcessPass get_finalPostProcessPass()

Disassembly:
	0x03A2248C MOV X2, X31
	0x03A22490 BL 0x3A35D04

ISIL:
	001 Move X0, [X0+560]
	002 Return X0

Method: UnityEngine.Rendering.RTHandle get_afterPostProcessColorHandle()

Disassembly:
	0x03A22494 CMP W24, 0x0
	0x03A22498 CSET W8, NE

ISIL:
	001 Move X0, [X0+568]
	002 Return X0

Method: UnityEngine.Rendering.RTHandle get_colorGradingLutHandle()

Disassembly:
	0x03A2249C CMP W23, 0x0
	0x03A224A0 CSET W27, NE

ISIL:
	001 Move X0, [X0+576]
	002 Return X0

Method: System.Int32 SupportedCameraStackingTypes()

Disassembly:
	0x03A224A4 STR W8, [X31 + 0x28]
	0x03A224A8 TBZ X0, 0x0, 0x3A2264C

ISIL:
	001 Move W0, 3
	002 Return X0

Method: System.Void .ctor(UnityEngine.Rendering.Universal.Renderer2DData data)

Disassembly:
	0x03A224AC LDR X0, [X19 + 0xE0]
	0x03A224B0 CBZ X0, 0x3A22FC8
	0x03A224B4 MOV X1, X22
	0x03A224B8 MOV X2, X31
	0x03A224BC BL 0x3A35A68
	0x03A224C0 TBZ X0, 0x0, 0x3A225E4
	0x03A224C4 LDR X9, [X31 + 0x20]
	0x03A224C8 LDP V0, V1, [X9]
	0x03A224CC LDR W8, [X9 + 0x30]
	0x03A224D0 LDR V2, [X9 + 0x2]
	0x03A224D4 ADRP X9, 0x732000
	0x03A224D8 LDR X9, [X9 + 0x948]
	0x03A224DC STR W8, [X31 + 0x2D0]
	0x03A224E0 STP V1, V2, [X31 + 0x2B0]
	0x03A224E4 STR V0, [X31 + 0x2A]
	0x03A224E8 LDR X0, [X9]
	0x03A224EC LDR W23, [X20 + 0x158]
	0x03A224F0 LDR W24, [X20 + 0x15C]
	0x03A224F4 LDR W8, [X0 + 0xE0]
	0x03A224F8 CBNZ W8, 0x3A22500
	0x03A224FC BL 0x1C16DFC
	0x03A22500 ADD X0, X31, 0x2A0
	0x03A22504 MOV W1, W23
	0x03A22508 MOV W2, W24
	0x03A2250C MOV X3, X31
	0x03A22510 BL 0x3A35D9C
	0x03A22514 LDR X0, [X19 + 0xE0]
	0x03A22518 CBZ X0, 0x3A22FC8
	0x03A2251C MOV X1, X31
	0x03A22520 BL 0x3A35A14
	0x03A22524 ADRP X8, 0x732000
	0x03A22528 LDR X8, [X8 + 0x10]
	0x03A2252C MOV X23, X0
	0x03A22530 LDR X8, [X8]
	0x03A22534 LDR W9, [X8 + 0xE0]
	0x03A22538 CBNZ W9, 0x3A22544
	0x03A2253C MOV X0, X8
	0x03A22540 BL 0x1C16DFC
	0x03A22544 ADRP X8, 0x732000
	0x03A22548 LDR X8, [X8 + 0x990]
	0x03A2254C ADD X1, X31, 0x2A0
	0x03A22550 FMOV S0, W31
	0x03A22554 MOVZ W5, 0x1
	0x03A22558 LDR X6, [X8]
	0x03A2255C MOV X0, X23
	0x03A22560 MOV W2, W31
	0x03A22564 MOV W3, W31
	0x03A22568 MOV W4, W31
	0x03A2256C MOV X7, X31
	0x03A22570 BL 0x3A6D184
	0x03A22574 LDR X9, [X31 + 0x20]
	0x03A22578 ADD X0, X31, 0x260
	0x03A2257C MOVZ W1, 0x20
	0x03A22580 MOV X4, X31
	0x03A22584 LDR W8, [X9 + 0x30]
	0x03A22588 LDP V2, V0, [X9 + 0x10]
	0x03A2258C LDR V1, [X9]
	0x03A22590 STR W8, [X31 + 0x290]
	0x03A22594 STP V2, V0, [X31 + 0x270]
	0x03A22598 STR V1, [X31 + 0x26]
	0x03A2259C LDR W2, [X20 + 0x158]
	0x03A225A0 LDR W3, [X20 + 0x15C]
	0x03A225A4 BL 0x3A35DE8
	0x03A225A8 LDR X0, [X19 + 0xE0]
	0x03A225AC CBZ X0, 0x3A22FC8
	0x03A225B0 MOV X1, X31
	0x03A225B4 BL 0x3A35A1C
	0x03A225B8 ADRP X8, 0x732000
	0x03A225BC LDR X8, [X8 + 0x980]
	0x03A225C0 ADD X1, X31, 0x260
	0x03A225C4 FMOV S0, W31
	0x03A225C8 MOVZ W5, 0x1
	0x03A225CC LDR X6, [X8]
	0x03A225D0 MOV W2, W31
	0x03A225D4 MOV W3, W31
	0x03A225D8 MOV W4, W31
	0x03A225DC MOV X7, X31
	0x03A225E0 BL 0x3A6D184
	0x03A225E4 LDR X0, [X19 + 0xE0]
	0x03A225E8 CBZ X0, 0x3A22FC8
	0x03A225EC MOV X1, X22
	0x03A225F0 MOV X2, X31
	0x03A225F4 BL 0x3A35A2C
	0x03A225F8 TBZ X0, 0x0, 0x3A2264C
	0x03A225FC LDR X8, [X19 + 0xE0]
	0x03A22600 CBZ X8, 0x3A22FC8
	0x03A22604 LDR X9, [X8 + 0x78]
	0x03A22608 CBZ X9, 0x3A22FC8
	0x03A2260C LDR X9, [X9 + 0x30]
	0x03A22610 CBZ X9, 0x3A22FC8
	0x03A22614 LDR X0, [X8 + 0x20]
	0x03A22618 CBZ X0, 0x3A22FC8
	0x03A2261C LDR W2, [X9 + 0x18]
	0x03A22620 MOV X1, X22
	0x03A22624 MOV X3, X31
	0x03A22628 BL 0x3A5D334
	0x03A2262C LDR X8, [X19 + 0xE0]
	0x03A22630 CBZ X8, 0x3A22FC8
	0x03A22634 LDR X1, [X8 + 0x20]
	0x03A22638 MOV X0, X19
	0x03A2263C MOV X2, X31
	0x03A22640 BL 0x3A4E96C
	0x03A22644 B 0x3A2264C
	0x03A22648 STR W8, [X31 + 0x28]
	0x03A2264C LDR W8, [X20 + 0xE0]
	0x03A22650 LDR W9, [X31 + 0x2C]
	0x03A22654 CMP W8, 0x0
	0x03A22658 CSET W8, EQ
	0x03A2265C ANDS W31, W8, W9, 0x0
	0x03A22660 B.EQ 0x3A2272C
	0x03A22664 LDR X0, [X20 + 0xD8]
	0x03A22668 CBZ X0, 0x3A22FC8
	0x03A2266C ADRP X8, 0x732000
	0x03A22670 LDR X8, [X8 + 0x940]
	0x03A22674 ADD X1, X31, 0x300
	0x03A22678 LDR X2, [X8]
	0x03A2267C BL 0x21A4990
	0x03A22680 ADRP X8, 0x6D1000
	0x03A22684 LDR X8, [X8 + 0x598]
	0x03A22688 LDR X23, [X31 + 0x300]
	0x03A2268C LDR X0, [X8]
	0x03A22690 LDR W8, [X0 + 0xE0]
	0x03A22694 CBNZ W8, 0x3A2269C
	0x03A22698 BL 0x1C16DFC
	0x03A2269C MOV X0, X23
	0x03A226A0 MOV X1, X31
	0x03A226A4 MOV X2, X31
	0x03A226A8 BL 0x3C354F8
	0x03A226AC TBZ X0, 0x0, 0x3A2272C
	0x03A226B0 LDR X0, [X31 + 0x300]
	0x03A226B4 CBZ X0, 0x3A22FC8
	0x03A226B8 MOV X1, X31
	0x03A226BC BL 0x3C323D4
	0x03A226C0 TBZ X0, 0x0, 0x3A2272C
	0x03A226C4 LDR X0, [X31 + 0x300]
	0x03A226C8 CBZ X0, 0x3A22FC8
	0x03A226CC MOV X1, X31
	0x03A226D0 BL 0x3A01C68
	0x03A226D4 ADRP X21, 0x9C0000
	0x03A226D8 LDRB W8, [X21 + 0x12]
	0x03A226DC MOV X23, X0
	0x03A226E0 CBNZ W8, 0x3A226F8
	0x03A226E4 ADRP X0, 0x6F9000
	0x03A226E8 LDR X0, [X0 + 0x630]
	0x03A226EC BL 0x1C16CF4
	0x03A226F0 MOVZ W8, 0x1
	0x03A226F4 STRB W8, [X21 + 0x12]
	0x03A226F8 ADRP X8, 0x6F9000
	0x03A226FC LDR X8, [X8 + 0x630]
	0x03A22700 LDR X8, [X8]
	0x03A22704 LDR X8, [X8 + 0xB8]
	0x03A22708 LDR W9, [X8]
	0x03A2270C CMP W23, W9
	0x03A22710 B.NE 0x3A22E4C
	0x03A22714 LDR W8, [X8 + 0x4]
	0x03A22718 UBFM X9, X23, 0x20, 0x3F
	0x03A2271C CMP W9, W8
	0x03A22720 B.NE 0x3A22E4C
	0x03A22724 MOV W24, W31
	0x03A22728 B 0x3A22F8C
	0x03A2272C STR W31, [X31 + 0x1C]
	0x03A22730 MOV W24, W31
	0x03A22734 MOVZ W26, 0x1
	0x03A22738 ADRP X21, 0x732000
	0x03A2273C LDR X21, [X21 + 0x920]
	0x03A22740 MOV X0, X19
	0x03A22744 MOV X2, X22
	0x03A22748 BL 0x3A21AF8
	0x03A2274C LDR X8, [X21]
	0x03A22750 MOV X23, X0
	0x03A22754 STRH W23, [X31 + 0x2FC]
	0x03A22758 LDR X25, [X20]
	0x03A2275C LDR W9, [X8 + 0xE0]
	0x03A22760 CBNZ W9, 0x3A22770
	0x03A22764 MOV X0, X8
	0x03A22768 BL 0x1C16DFC
	0x03A2276C LDR X8, [X21]
	0x03A22770 LDR X8, [X8 + 0xB8]
	0x03A22774 ADD X0, X31, 0x258
	0x03A22778 MOV X1, X25
	0x03A2277C MOV X3, X31
	0x03A22780 LDR X2, [X8]
	0x03A22784 BL 0x39B1DB0
	0x03A22788 ADD X1, X31, 0x2FC
	0x03A2278C ADD X6, X31, 0x2F0
	0x03A22790 ADD X7, X31, 0x2E8
	0x03A22794 MOV X0, X19
	0x03A22798 MOV X2, X25
	0x03A2279C MOV X3, X22
	0x03A227A0 MOV W4, W24
	0x03A227A4 MOV W5, W26
	0x03A227A8 BL 0x3A21DA4
	0x03A227AC ADD X0, X31, 0x258
	0x03A227B0 MOV X1, X31
	0x03A227B4 BL 0x39B1DB4
	0x03A227B8 ADRP X8, 0x72E000
	0x03A227BC LDR X8, [X8 + 0xC80]
	0x03A227C0 LDR X0, [X8]
	0x03A227C4 LDR W8, [X0 + 0xE0]
	0x03A227C8 CBNZ W8, 0x3A227D0
	0x03A227CC BL 0x1C16DFC
	0x03A227D0 ADD X0, X31, 0x308
	0x03A227D4 MOV X1, X25
	0x03A227D8 MOV X2, X31
	0x03A227DC BL 0x3C58FE4
	0x03A227E0 CBZ X25, 0x3A22FC8
	0x03A227E4 MOV X0, X25
	0x03A227E8 MOV X1, X31
	0x03A227EC BL 0x3C4C310
	0x03A227F0 LDR X1, [X31 + 0x2F0]
	0x03A227F4 LDR X2, [X31 + 0x2E8]
	0x03A227F8 MOV X0, X19
	0x03A227FC MOV X3, X31
	0x03A22800 BL 0x3A4B4D8
	0x03A22804 LDR W8, [X31 + 0x28]
	0x03A22808 TBZ X8, 0x0, 0x3A228A4
	0x03A2280C LDR X0, [X19 + 0x220]
	0x03A22810 CBZ X0, 0x3A22FC8
	0x03A22814 ADD X1, X20, 0x2A0
	0x03A22818 ADD X2, X31, 0x220
	0x03A2281C ADD X3, X31, 0x21C
	0x03A22820 MOV X4, X31
	0x03A22824 BL 0x3AA88B0
	0x03A22828 ADRP X8, 0x732000
	0x03A2282C LDR X8, [X8 + 0x10]
	0x03A22830 LDR W24, [X31 + 0x21C]
	0x03A22834 ADD X25, X19, 0x240
	0x03A22838 LDR X0, [X8]
	0x03A2283C LDR W8, [X0 + 0xE0]
	0x03A22840 CBNZ W8, 0x3A22848
	0x03A22844 BL 0x1C16DFC
	0x03A22848 ADRP X8, 0x732000
	0x03A2284C LDR X8, [X8 + 0x988]
	0x03A22850 ADD X1, X31, 0x220
	0x03A22854 FMOV S0, W31
	0x03A22858 MOVZ W3, 0x1
	0x03A2285C LDR X6, [X8]
	0x03A22860 MOVZ W5, 0x1
	0x03A22864 MOV X0, X25
	0x03A22868 MOV W2, W24
	0x03A2286C MOV W4, W31
	0x03A22870 MOV X7, X31
	0x03A22874 BL 0x3A6D184
	0x03A22878 LDR X0, [X19 + 0x220]
	0x03A2287C LDR X8, [X19 + 0x240]
	0x03A22880 STR X8, [X31 + 0x210]
	0x03A22884 CBZ X0, 0x3A22FC8
	0x03A22888 ADD X1, X31, 0x210
	0x03A2288C MOV X2, X31
	0x03A22890 BL 0x3AA88A4
	0x03A22894 LDR X1, [X19 + 0x220]
	0x03A22898 MOV X0, X19
	0x03A2289C MOV X2, X31
	0x03A228A0 BL 0x3A4E96C
	0x03A228A4 LDR X0, [X19 + 0x1A8]
	0x03A228A8 TBNZ X23, 0x0, 0x3A228B4
	0x03A228AC LDRB W8, [X19 + 0x1E8]
	0x03A228B0 B 0x3A228B8
	0x03A228B4 MOVZ W8, 0x1
	0x03A228B8 CBZ X0, 0x3A22FC8
	0x03A228BC CMP W8, 0x0
	0x03A228C0 CSET W8, NE
	0x03A228C4 STRB W8, [X0 + 0xF8]
	0x03A228C8 LDR X2, [X31 + 0x2E8]
	0x03A228CC LDR X1, [X31 + 0x2F0]
	0x03A228D0 MOV X3, X31
	0x03A228D4 BL 0x3A44078
	0x03A228D8 LDR X1, [X19 + 0x1A8]
	0x03A228DC MOV X0, X19
	0x03A228E0 MOV X2, X31
	0x03A228E4 BL 0x3A4E96C
	0x03A228E8 MOV X0, X22
	0x03A228EC MOV X1, X31
	0x03A228F0 BL 0x3A934DC
	0x03A228F4 MOV W23, W0
	0x03A228F8 MOV X0, X22
	0x03A228FC MOV X1, X31
	0x03A22900 BL 0x3A9006C
	0x03A22904 MOV W24, W0
	0x03A22908 TBZ X23, 0x0, 0x3A22938
	0x03A2290C TBZ X24, 0x0, 0x3A22938
	0x03A22910 LDR X0, [X19 + 0x1C8]
	0x03A22914 CBZ X0, 0x3A22FC8
	0x03A22918 MOVZ W2, 0x20
	0x03A2291C MOV X1, X22
	0x03A22920 MOV X3, X31
	0x03A22924 BL 0x3A5B468
	0x03A22928 LDR X1, [X19 + 0x1C8]
	0x03A2292C MOV X0, X19
	0x03A22930 MOV X2, X31
	0x03A22934 BL 0x3A4E96C
	0x03A22938 ADRP X8, 0x732000
	0x03A2293C LDR X8, [X8 + 0x978]
	0x03A22940 LDR X25, [X19 + 0x100]
	0x03A22944 LDR X0, [X8]
	0x03A22948 LDR W8, [X31 + 0x2C]
	0x03A2294C LDR W9, [X0 + 0xE0]
	0x03A22950 CMP W8, 0x0
	0x03A22954 LDR W8, [X20 + 0x1C4]
	0x03A22958 CSET W21, NE
	0x03A2295C CMP W8, 0x1
	0x03A22960 CSET W28, EQ
	0x03A22964 CBNZ W9, 0x3A22978
	0x03A22968 BL 0x1C16DFC
	0x03A2296C ADRP X8, 0x732000

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+80], X29
	003 Move [X31+88], X30
	004 Move [X31+96], X28
	005 Move [X31+104], X27
	006 Move [X31+112], X26
	007 Move [X31+120], X25
	008 Move [X31+128], X24
	009 Move [X31+136], X23
	010 Move [X31+144], X22
	011 Move [X31+152], X21
	012 Move [X31+160], X20
	013 Move [X31+168], X19
	014 Move X22, 0x9C1000
	015 Move X21, 0x733000
	016 Move W8, [X22+5]
	017 Move X21, [X21+2248]
	018 Move X19, X1
	019 Move X20, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {74}
	024 Move X0, 0x731000
	025 Move X0, [X0+3624]
	026 Call 0x1C17CF4
	027 Move X0, 0x6FA000
	028 Move X0, [X0+2296]
	029 Call 0x1C17CF4
	030 Move X0, 0x733000
	031 Move X0, [X0+2256]
	032 Call 0x1C17CF4
	033 Move X0, 0x733000
	034 Move X0, [X0+2264]
	035 Call 0x1C17CF4
	036 Move X0, 0x731000
	037 Move X0, [X0+3480]
	038 Call 0x1C17CF4
	039 Move X0, 0x733000
	040 Move X0, [X0+2272]
	041 Call 0x1C17CF4
	042 Move X0, 0x6D2000
	043 Move X0, [X0+1432]
	044 Call 0x1C17CF4
	045 Move X0, 0x733000
	046 Move X0, [X0+1608]
	047 Call 0x1C17CF4
	048 Move X0, 0x733000
	049 Move X0, [X0+1672]
	050 Call 0x1C17CF4
	051 Move X0, 0x733000
	052 Move X0, [X0+2280]
	053 Call 0x1C17CF4
	054 Move X0, 0x733000
	055 Move X0, [X0+2288]
	056 Call 0x1C17CF4
	057 Move X0, 0x733000
	058 Move X0, [X0+2248]
	059 Call 0x1C17CF4
	060 Move X0, 0x6FB000
	061 Move X0, [X0+2216]
	062 Call 0x1C17CF4
	063 Move X0, 0x733000
	064 Move X0, [X0+2296]
	065 Call 0x1C17CF4
	066 Move X0, 0x733000
	067 Move X0, [X0+1848]
	068 Call 0x1C17CF4
	069 Move X0, 0x733000
	070 Move X0, [X0+2304]
	071 Call 0x1C17CF4
	072 Move W8, 1
	073 Move [X22+5], W8
	074 Move W8, 1
	075 Move [X20+488], W8
	076 Move X0, [X21]
	077 Move W8, [X0+224]
	078 Compare W8, 0
	079 JumpIfNotEqual {81}
	080 Call 0x1C17DFC
	081 Move X0, X20
	082 Move X1, X19
	083 Move X2, X31
	084 Call ScriptableRenderer..ctor, X0, X1
	085 Compare X19, 0
	086 JumpIfEqual {342}
	087 Move X8, 0x6FA000
	088 Move X8, [X8+2296]
	089 Move X23, 0x733000
	090 Move X25, 0x733000
	091 Move X24, 0x733000
	092 Move X23, [X23+1672]
	093 Move X25, [X25+1608]
	094 Move X24, [X24+1848]
	095 Move X0, [X8]
	096 Move X29, 0x733000
	097 Move X28, 0x733000
	098 Move X27, 0x733000
	099 Move X26, 0x733000
	100 Move X29, [X29+2264]
	101 Move X28, [X28+2256]
	102 Move X27, [X27+2280]
	103 Move W8, [X0+224]
	104 Move X21, [X19+152]
	105 Move X26, [X26+2304]
	106 Compare W8, 0
	107 JumpIfNotEqual {109}
	108 Call 0x1C17DFC
	109 Move X0, X21
	110 Move X1, X31
	111 Call CoreUtils.CreateEngineMaterial, X0
	112 Move [X20+512], X0
	113 Move X0, [X19+160]
	114 Move X1, X31
	115 Call CoreUtils.CreateEngineMaterial, X0
	116 Move [X20+520], X0
	117 Move X0, [X19+176]
	118 Move X1, X31
	119 Call CoreUtils.CreateEngineMaterial, X0
	120 Move [X20+528], X0
	121 Move X21, X0
	122 Move X0, [X23]
	123 Move X22, [X20+512]
	124 Call 0x1C17F10
	125 Move X1, X19
	126 Move X2, X22
	127 Move X3, X21
	128 Move X23, X0
	129 Call Render2DLightingPass..ctor, X0, X1, X2, X3
	130 Move [X20+424], X23
	131 Move X0, [X25]
	132 Call 0x1C17F10
	133 Move W1, 500
	134 Move X21, X0
	135 Call PixelPerfectBackgroundPass..ctor, X0, X1
	136 Move [X20+432], X21
	137 Move X0, [X24]
	138 Move X21, [X20+512]
	139 Call 0x1C17F10
	140 Move W1, 600
	141 Move X2, X21
	142 Move X22, X0
	143 Call UpscalePass..ctor, X0, X1, X2
	144 Move [X20+440], X22
	145 Move X0, [X29]
	146 Move X21, [X20+512]
	147 Move X22, [X20+520]
	148 Call 0x1C17F10
	149 Move W1, 1001
	150 Move X2, X21
	151 Move X3, X22
	152 Move X4, X31
	153 Move X23, X0
	154 Call FinalBlitPass..ctor, X0, X1, X2, X3
	155 Move [X20+448], X23
	156 Move X0, [X28]
	157 Call 0x1C17F10
	158 Move W1, 550
	159 Move W2, 1
	160 Move X3, X31
	161 Move X21, X0
	162 Call DrawScreenSpaceUIPass..ctor, X0, X1, X2
	163 Move [X20+456], X21
	164 Move X0, [X28]
	165 Call 0x1C17F10
	166 Move W1, 1002
	167 Move W2, W31
	168 Move X3, X31
	169 Move X21, X0
	170 Call DrawScreenSpaceUIPass..ctor, X0, X1, X2
	171 Move [X20+464], X21
	172 Move X0, [X27]
	173 Call 0x1C17F10
	174 Move X1, [X26]
	175 Move X2, X31
	176 Move X21, X0
	177 Call RenderTargetBufferSystem..ctor, X0, X1
	178 Move X0, X31
	179 Move [X20+480], X21
	180 Call PostProcessParams.Create
	181 Move [X31+72], X1
	182 Move X8, [X20+512]
	183 Move W9, 74
	184 Move [X31+72], W9
	185 NotImplemented "Instruction MOVI not yet implemented."
	186 Move [X31+64], X8
	187 Move X1, [X19+224]
	188 Add X0, X31, 0
	189 Add X2, X31, 64
	190 Move X3, X31
	191 Move [X31+32], V0
	192 Move [X31+40], V0
	193 Move [X31], V0
	194 Move [X31+8], V0
	195 Call PostProcessPasses..ctor, X0, X1, X2
	196 Move V1, [X31+32]
	197 Move V0, [X31+48]
	198 Move V3, [X31]
	199 Move V2, [X31+16]
	200 Move [X20+576], V1
	201 Move [X20+584], V0
	202 Move [X20+544], V3
	203 Move [X20+552], V2
	204 Move W8, [X19+96]
	205 Move [X20+536], X19
	206 Move [X20+488], W8
	207 Move X8, 0x733000
	208 Move X8, [X8+2288]
	209 Move X0, [X8]
	210 Call 0x1C17F10
	211 Move X1, X31
	212 Move X21, X0
	213 Call RenderingFeatures..ctor, X0
	214 Move [X20+232], X21
	215 Move X8, 0x733000
	216 Move X8, [X8+2272]
	217 Move X0, [X8]
	218 Call 0x1C17F10
	219 Move X21, X0
	220 Call Light2DCullResult..ctor, X0
	221 Move X8, [X20+536]
	222 Move [X20+472], X21
	223 Compare X8, 0
	224 JumpIfEqual {342}
	225 Move X22, 0x731000
	226 Move X22, [X22+3624]
	227 Move [X8+344], X21
	228 Move X20, 0x6D2000
	229 Move X0, [X22]
	230 Move W8, [X0+224]
	231 Move X20, [X20+1432]
	232 Compare W8, 0
	233 JumpIfNotEqual {235}
	234 Call 0x1C17DFC
	235 Move X21, 0x6FB000
	236 Move X21, [X21+2216]
	237 Move W0, 2
	238 Move W1, W31
	239 Move X2, X31
	240 Call Blitter.GetBlitMaterial, X0, X1
	241 Move X8, [X20]
	242 Move X20, X0
	243 Move W9, [X8+224]
	244 Compare W9, 0
	245 JumpIfNotEqual {248}
	246 Move X0, X8
	247 Call 0x1C17DFC
	248 Move X0, X20
	249 Move X1, X31
	250 Move X2, X31
	251 Call Object.op_Equality, X0, X1
	252 Move X8, [X21]
	253 Move W20, W0
	254 Move W9, [X8+224]
	255 Compare W9, 0
	256 JumpIfNotEqual {259}
	257 Move X0, X8
	258 Call 0x1C17DFC
	259 Move X0, X31
	260 Call UniversalRenderPipeline.get_asset
	261 Move X1, X31
	262 Move X2, X31
	263 Move X21, X0
	264 Call Object.op_Inequality, X0, X1
	265 Move TEMP, X0
	266 And TEMP, TEMP, 1
	267 Compare TEMP, 1
	268 JumpIfNotEqual {298}
	269 Compare X21, 0
	270 JumpIfEqual {342}
	271 Move X10, [X21+64]
	272 Compare X10, 0
	273 JumpIfEqual {342}
	274 Move X8, [X10+24]
	275 NotImplemented "Instruction CMP not yet implemented."
	276 And X8, X8, 0
	277 Compare X8, 0
	278 JumpIfEqual {298}
	279 Move X9, 0x733000
	280 Move X9, [X9+2296]
	281 Add X10, X10, 32
	282 Move X9, [X9]
	283 Compare X8, 0
	284 JumpIfEqual {341}
	285 Move X11, [X10]
	286 Compare X11, 0
	287 JumpIfEqual {296}
	288 Move X11, [X11]
	289 Move W12, [X9+304]
	290 Move W13, [X11+304]
	291 NotImplemented "Instruction CMP not yet implemented."
	292 Move X11, [X11+200]
	293 Add X11, X11, X12
	294 NotImplemented "Instruction LDUR not yet implemented."
	295 NotImplemented "Instruction CMP not yet implemented."
	296 Subtract X8, X8, 1
	297 Add X10, X10, 8
	298 Move TEMP, X20
	299 And TEMP, TEMP, 1
	300 Compare TEMP, 1
	301 JumpIfNotEqual {313}
	302 Move X0, [X22]
	303 Move X20, [X19+152]
	304 Move X19, [X19+168]
	305 Move W8, [X0+224]
	306 Compare W8, 0
	307 JumpIfNotEqual {309}
	308 Call 0x1C17DFC
	309 Move X0, X20
	310 Move X1, X19
	311 Move X2, X31
	312 Call Blitter.Initialize, X0, X1
	313 Move X19, 0x731000
	314 Move X19, [X19+3480]
	315 Move X0, [X19]
	316 Move W8, [X0+224]
	317 Compare W8, 0
	318 JumpIfNotEqual {321}
	319 Call 0x1C17DFC
	320 Move X0, [X19]
	321 Move X9, -49496064
	322 Move X8, [X0+184]
	323 Move V0, [X9+3776]
	324 Move X0, X31
	325 Move [X8+36], D0
	326 Call LensFlareCommonSRP.Initialize
	327 Move X20, [X31+160]
	328 Move X19, [X31+168]
	329 Move X22, [X31+144]
	330 Move X21, [X31+152]
	331 Move X24, [X31+128]
	332 Move X23, [X31+136]
	333 Move X26, [X31+112]
	334 Move X25, [X31+120]
	335 Move X28, [X31+96]
	336 Move X27, [X31+104]
	337 Move X29, [X31+80]
	338 Move X30, [X31+88]
	339 Add X31, X31, 176
	340 Return 
	341 Call 0x1C17F28
	342 Call 0x1C17F20

Method: System.Void Dispose(System.Boolean disposing)

Disassembly:
	0x03A22970 LDR X8, [X8 + 0x978]
	0x03A22974 LDR X0, [X8]
	0x03A22978 LDR X8, [X0 + 0xB8]
	0x03A2297C LDR X26, [X8 + 0x10]
	0x03A22980 CBNZ X26, 0x3A22A0C
	0x03A22984 LDR W8, [X0 + 0xE0]
	0x03A22988 STR W23, [X31 + 0x18]
	0x03A2298C MOV X23, X20
	0x03A22990 MOV X20, X22
	0x03A22994 CBZ W8, 0x3A229A8
	0x03A22998 ADRP X22, 0x732000
	0x03A2299C LDR X22, [X22 + 0x978]
	0x03A229A0 MOV W29, W27
	0x03A229A4 B 0x3A229BC
	0x03A229A8 MOV W29, W27
	0x03A229AC BL 0x1C16DFC
	0x03A229B0 ADRP X22, 0x732000
	0x03A229B4 LDR X22, [X22 + 0x978]
	0x03A229B8 LDR X0, [X22]
	0x03A229BC ADRP X9, 0x732000
	0x03A229C0 LDR X8, [X0 + 0xB8]
	0x03A229C4 LDR X9, [X9 + 0x960]
	0x03A229C8 LDR X27, [X8]
	0x03A229CC LDR X0, [X9]
	0x03A229D0 BL 0x1C16F10
	0x03A229D4 ADRP X8, 0x732000
	0x03A229D8 LDR X8, [X8 + 0x968]
	0x03A229DC MOV X1, X27
	0x03A229E0 MOV X3, X31
	0x03A229E4 MOV X26, X0
	0x03A229E8 LDR X2, [X8]
	0x03A229EC BL 0x24AD1FC
	0x03A229F0 LDR X8, [X22]
	0x03A229F4 MOV X22, X20
	0x03A229F8 MOV X20, X23
	0x03A229FC LDR W23, [X31 + 0x18]
	0x03A22A00 LDR X8, [X8 + 0xB8]
	0x03A22A04 MOV W27, W29
	0x03A22A08 STR X26, [X8 + 0x10]
	0x03A22A0C CBZ X25, 0x3A22FC8
	0x03A22A10 ADRP X8, 0x732000
	0x03A22A14 LDR X8, [X8 + 0x950]
	0x03A22A18 EOR W29, W24, 0x1
	0x03A22A1C MOV X0, X25
	0x03A22A20 MOV X1, X26
	0x03A22A24 LDR X2, [X8]
	0x03A22A28 LDR W8, [X31 + 0x1C]
	0x03A22A2C BIC W8, W21, W8, 0x0
	0x03A22A30 AND W21, W28, W29, 0x0
	0x03A22A34 AND W27, W27, W8, 0x0
	0x03A22A38 BL 0x301C5F0
	0x03A22A3C LDR X8, [X19 + 0xE0]
	0x03A22A40 MOV X24, X0
	0x03A22A44 CBZ X8, 0x3A22A64
	0x03A22A48 MOV X0, X8
	0x03A22A4C MOV X1, X22
	0x03A22A50 MOV X2, X31
	0x03A22A54 BL 0x3A35A2C
	0x03A22A58 ORN W8, W31, W0, 0x0
	0x03A22A5C AND W22, W8, 0x1
	0x03A22A60 B 0x3A22A68
	0x03A22A64 MOVZ W22, 0x1
	0x03A22A68 LDR W8, [X31 + 0x28]
	0x03A22A6C AND W25, W27, W21, 0x0
	0x03A22A70 CBZ W8, 0x3A22C18
	0x03A22A74 LDR X0, [X31 + 0x20]
	0x03A22A78 MOV X1, X31
	0x03A22A7C LDR W8, [X0 + 0x30]
	0x03A22A80 LDP V1, V0, [X0 + 0x10]
	0x03A22A84 LDR V2, [X0]
	0x03A22A88 STR W8, [X31 + 0x180]
	0x03A22A8C STP V1, V0, [X31 + 0x160]
	0x03A22A90 STR V2, [X31 + 0x15]
	0x03A22A94 LDP W26, W27, [X20 + 0xF0]
	0x03A22A98 BL 0x3C22060
	0x03A22A9C ADRP X8, 0x732000
	0x03A22AA0 LDR X8, [X8 + 0x958]
	0x03A22AA4 MOV W28, W0
	0x03A22AA8 LDR X8, [X8]
	0x03A22AAC LDR W9, [X8 + 0xE0]
	0x03A22AB0 CBNZ W9, 0x3A22ABC
	0x03A22AB4 MOV X0, X8
	0x03A22AB8 BL 0x1C16DFC
	0x03A22ABC LDR W8, [X31 + 0x180]
	0x03A22AC0 LDP V0, V1, [X31 + 0x150]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x9C1000
	007 Move W8, [X21+6]
	008 Move W19, W1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x731000
	015 Move X0, [X0+3624]
	016 Call 0x1C17CF4
	017 Move X0, 0x6FA000
	018 Move X0, [X0+2296]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+6], W8
	022 Move X0, [X20+536]
	023 Compare X0, 0
	024 JumpIfEqual {104}
	025 Move X1, X31
	026 Call Renderer2DData.Dispose, X0
	027 Add X0, X20, 544
	028 Move X1, X31
	029 Call PostProcessPasses.Dispose, X0
	030 Move X0, [X20+496]
	031 Compare X0, 0
	032 JumpIfEqual {35}
	033 Move X1, X31
	034 Call RTHandle.Release, X0
	035 Move X0, [X20+504]
	036 Compare X0, 0
	037 JumpIfEqual {40}
	038 Move X1, X31
	039 Call RTHandle.Release, X0
	040 Move X8, [X20]
	041 Move X0, X20
	042 Move X9, [X8+456]
	043 Move X1, [X8+464]
	044 NotImplemented "Instruction BLR not yet implemented."
	045 Move X8, [X20+440]
	046 Compare X8, 0
	047 JumpIfEqual {104}
	048 Move X0, [X8+232]
	049 Compare X0, 0
	050 JumpIfEqual {53}
	051 Move X1, X31
	052 Call RTHandle.Release, X0
	053 Move X0, [X20+448]
	054 Compare X0, 0
	055 JumpIfEqual {58}
	056 Move X1, X31
	057 Call FinalBlitPass.Dispose, X0
	058 Move X0, [X20+456]
	059 Compare X0, 0
	060 JumpIfEqual {63}
	061 Move X1, X31
	062 Call DrawScreenSpaceUIPass.Dispose, X0
	063 Move X21, 0x6FA000
	064 Move X0, [X20+464]
	065 Move X21, [X21+2296]
	066 Compare X0, 0
	067 JumpIfEqual {70}
	068 Move X1, X31
	069 Call DrawScreenSpaceUIPass.Dispose, X0
	070 Move X0, [X21]
	071 Move X22, 0x731000
	072 Move X21, [X20+512]
	073 Move W8, [X0+224]
	074 Move X22, [X22+3624]
	075 Compare W8, 0
	076 JumpIfNotEqual {78}
	077 Call 0x1C17DFC
	078 Move X0, X21
	079 Move X1, X31
	080 Call CoreUtils.Destroy, X0
	081 Move X0, [X20+520]
	082 Move X1, X31
	083 Call CoreUtils.Destroy, X0
	084 Move X0, [X20+528]
	085 Move X1, X31
	086 Call CoreUtils.Destroy, X0
	087 Move X0, [X22]
	088 Move W8, [X0+224]
	089 Compare W8, 0
	090 JumpIfNotEqual {92}
	091 Call 0x1C17DFC
	092 Move X0, X31
	093 Call Blitter.Cleanup
	094 And W1, W19, 1
	095 Move X0, X20
	096 Move X20, [X31+32]
	097 Move X19, [X31+40]
	098 Move X22, [X31+16]
	099 Move X21, [X31+24]
	100 Move X2, X31
	101 Move X30, [X31+48]
	102 Call ScriptableRenderer.Dispose, X0, X1
	103 Return 
	104 Call 0x1C17F20

Method: System.Void ReleaseRenderTargets()

Disassembly:
	0x03A22AC4 LDR V2, [X31 + 0x17]
	0x03A22AC8 ADD X0, X31, 0xD0
	0x03A22ACC STR W8, [X31 + 0x100]
	0x03A22AD0 ADD X8, X31, 0x110
	0x03A22AD4 MOV W1, W26
	0x03A22AD8 MOV W2, W27
	0x03A22ADC MOV W3, W28
	0x03A22AE0 MOV W4, W31
	0x03A22AE4 MOV X5, X31
	0x03A22AE8 STP V0, V1, [X31 + 0xD0]
	0x03A22AEC STR V2, [X31 + 0xF]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move X0, [X0+480]
	005 Compare X0, 0
	006 JumpIfEqual {15}
	007 Move X1, X31
	008 Call RenderTargetBufferSystem.Dispose, X0
	009 Add X0, X19, 544
	010 Move X1, X31
	011 Move X30, [X31+16]
	012 Move X19, [X31+24]
	013 Call PostProcessPasses.ReleaseRenderTargets, X0
	014 Return 
	015 Call 0x1C17F20

Method: UnityEngine.Rendering.Universal.Renderer2DData GetRenderer2DData()

Disassembly:
	0x03A22AF0 BL 0x3A61C24
	0x03A22AF4 ADRP X9, 0x732000

ISIL:
	001 Move X0, [X0+536]
	002 Return X0

Method: UnityEngine.Rendering.Universal.Renderer2D/RenderPassInputSummary GetRenderPassInputs(ref UnityEngine.Rendering.Universal.RenderingData renderingData, ref UnityEngine.Rendering.Universal.CameraData cameraData)

Disassembly:
	0x03A22AF8 LDP V0, V1, [X31 + 0x110]
	0x03A22AFC LDR V2, [X31 + 0x13]
	0x03A22B00 LDR W8, [X31 + 0x140]
	0x03A22B04 LDR X9, [X9 + 0x10]
	0x03A22B08 STP V0, V1, [X31 + 0x1D0]
	0x03A22B0C STR V2, [X31 + 0x1F]
	0x03A22B10 STR W8, [X31 + 0x200]
	0x03A22B14 LDR X0, [X9]
	0x03A22B18 ADD X26, X19, 0x238
	0x03A22B1C LDR W8, [X0 + 0xE0]
	0x03A22B20 CBNZ W8, 0x3A22B28
	0x03A22B24 BL 0x1C16DFC
	0x03A22B28 ADRP X8, 0x732000
	0x03A22B2C LDR X8, [X8 + 0x930]
	0x03A22B30 ADD X1, X31, 0x1D0
	0x03A22B34 FMOV S0, W31
	0x03A22B38 MOVZ W3, 0x1
	0x03A22B3C LDR X6, [X8]
	0x03A22B40 MOVZ W5, 0x1
	0x03A22B44 MOV X0, X26
	0x03A22B48 MOV W2, W31
	0x03A22B4C MOV W4, W31
	0x03A22B50 MOV X7, X31
	0x03A22B54 BL 0x3A6D184
	0x03A22B58 LDR X26, [X19 + 0x238]
	0x03A22B5C LDR X8, [X19 + 0x240]
	0x03A22B60 LDR X27, [X19 + 0x228]
	0x03A22B64 STR X8, [X31 + 0x210]
	0x03A22B68 CBZ X26, 0x3A22FC8
	0x03A22B6C ADRP X21, 0x732000
	0x03A22B70 LDUR V0, [X26 + 0x28]
	0x03A22B74 LDR X8, [X26 + 0x48]
	0x03A22B78 LDUR V1, [X26 + 0x38]
	0x03A22B7C LDR X21, [X21 + 0x8C8]
	0x03A22B80 STR X8, [X31 + 0x130]
	0x03A22B84 STP V0, V1, [X31 + 0x110]
	0x03A22B88 LDR X0, [X21]
	0x03A22B8C LDR W8, [X0 + 0xE0]
	0x03A22B90 CBNZ W8, 0x3A22B9C
	0x03A22B94 BL 0x1C16DFC
	0x03A22B98 LDR X0, [X21]
	0x03A22B9C LDR X8, [X0 + 0xB8]
	0x03A22BA0 LDR X8, [X8 + 0x10]
	0x03A22BA4 CBZ X8, 0x3A22FC8
	0x03A22BA8 LDUR V0, [X8 + 0x28]
	0x03A22BAC LDUR V1, [X8 + 0x38]
	0x03A22BB0 LDR X8, [X8 + 0x48]
	0x03A22BB4 LDP V2, V3, [X31 + 0x110]
	0x03A22BB8 LDR X9, [X31 + 0x130]
	0x03A22BBC ADD X0, X31, 0xA0
	0x03A22BC0 ADD X1, X31, 0x70
	0x03A22BC4 MOV X2, X31
	0x03A22BC8 STR X8, [X31 + 0x90]
	0x03A22BCC STP V0, V1, [X31 + 0x70]
	0x03A22BD0 STP V2, V3, [X31 + 0xA0]
	0x03A22BD4 STR X9, [X31 + 0xC0]
	0x03A22BD8 BL 0x3C4B6D8
	0x03A22BDC CBZ X27, 0x3A22FC8
	0x03A22BE0 LDR X1, [X31 + 0x20]
	0x03A22BE4 AND W7, W0, W22, 0x0
	0x03A22BE8 ADD X2, X31, 0x2F0
	0x03A22BEC ADD X4, X31, 0x2E8
	0x03A22BF0 ADD X5, X31, 0x210
	0x03A22BF4 MOV X0, X27
	0x03A22BF8 MOV X3, X26
	0x03A22BFC MOV W6, W25
	0x03A22C00 STR X31, [X31]
	0x03A22C04 BL 0x3A5F674
	0x03A22C08 LDR X1, [X19 + 0x228]
	0x03A22C0C MOV X0, X19
	0x03A22C10 MOV X2, X31
	0x03A22C14 BL 0x3A4E96C
	0x03A22C18 ADRP X9, 0x6D1000
	0x03A22C1C LDR X8, [X31 + 0x2F0]
	0x03A22C20 LDR X9, [X9 + 0x598]
	0x03A22C24 LDR X26, [X31 + 0x300]
	0x03A22C28 STR X8, [X31 + 0x2E0]
	0x03A22C2C LDR X0, [X9]
	0x03A22C30 LDR W8, [X0 + 0xE0]
	0x03A22C34 CBNZ W8, 0x3A22C3C
	0x03A22C38 BL 0x1C16DFC
	0x03A22C3C MOV X0, X26
	0x03A22C40 MOV X1, X31
	0x03A22C44 MOV X2, X31
	0x03A22C48 BL 0x3C354F8
	0x03A22C4C TBZ X0, 0x0, 0x3A22D40
	0x03A22C50 LDR X8, [X31 + 0x300]
	0x03A22C54 CBZ X8, 0x3A22FC8
	0x03A22C58 AND W23, W23, W0, 0x0
	0x03A22C5C MOV X0, X8
	0x03A22C60 MOV X1, X31
	0x03A22C64 BL 0x3C323D4
	0x03A22C68 TBZ X0, 0x0, 0x3A22D40
	0x03A22C6C LDR X8, [X31 + 0x300]
	0x03A22C70 CBZ X8, 0x3A22FC8
	0x03A22C74 LDR W8, [X8 + 0x2C]
	0x03A22C78 AND W23, W23, W0, 0x0
	0x03A22C7C CMP W8, 0x0
	0x03A22C80 CSET W21, NE
	0x03A22C84 CBZ W8, 0x3A22D40
	0x03A22C88 LDR X1, [X19 + 0x1B0]
	0x03A22C8C MOV X0, X19
	0x03A22C90 MOV X2, X31
	0x03A22C94 BL 0x3A4E96C
	0x03A22C98 LDR X0, [X31 + 0x300]
	0x03A22C9C CBZ X0, 0x3A22FC8
	0x03A22CA0 MOV X1, X31
	0x03A22CA4 AND W23, W23, W21, 0x0
	0x03A22CA8 BL 0x3A01A64
	0x03A22CAC TBZ X0, 0x0, 0x3A22D40
	0x03A22CB0 LDR X0, [X31 + 0x300]
	0x03A22CB4 CBZ X0, 0x3A22FC8
	0x03A22CB8 LDR W21, [X0 + 0x24]
	0x03A22CBC MOV X1, X31
	0x03A22CC0 BL 0x3A01A18
	0x03A22CC4 LDR X8, [X31 + 0x300]
	0x03A22CC8 CBZ X8, 0x3A22FC8
	0x03A22CCC LDR W9, [X8 + 0x28]
	0x03A22CD0 STR W0, [X31 + 0x28]
	0x03A22CD4 MOV X0, X8
	0x03A22CD8 MOV X1, X31
	0x03A22CDC STR W9, [X31 + 0x1C]
	0x03A22CE0 BL 0x3A01A18
	0x03A22CE4 LDR X8, [X31 + 0x300]
	0x03A22CE8 CBZ X8, 0x3A22FC8
	0x03A22CEC LDR X27, [X19 + 0x1B8]
	0x03A22CF0 LDR X28, [X31 + 0x2F0]
	0x03A22CF4 MOV W26, W0
	0x03A22CF8 MOV X0, X8
	0x03A22CFC MOV X1, X31
	0x03A22D00 BL 0x3A01C58
	0x03A22D04 CBZ X27, 0x3A22FC8
	0x03A22D08 LDR W8, [X31 + 0x28]
	0x03A22D0C MOV W4, W0
	0x03A22D10 ADD X6, X31, 0x2E0
	0x03A22D14 MOV X0, X27
	0x03A22D18 MUL W2, W8, W21
	0x03A22D1C LDR W8, [X31 + 0x1C]
	0x03A22D20 MOV X1, X28
	0x03A22D24 MOV X5, X20
	0x03A22D28 MUL W3, W26, W8
	0x03A22D2C BL 0x3A1CF60
	0x03A22D30 LDR X1, [X19 + 0x1B8]
	0x03A22D34 MOV X0, X19
	0x03A22D38 MOV X2, X31
	0x03A22D3C BL 0x3A4E96C
	0x03A22D40 EOR W8, W25, 0x1
	0x03A22D44 TBNZ X8, 0x0, 0x3A22D70
	0x03A22D48 LDR X0, [X19 + 0x230]
	0x03A22D4C CBZ X0, 0x3A22FC8
	0x03A22D50 CMP X24, 0x0
	0x03A22D54 CSET W2, NE
	0x03A22D58 ADD X1, X31, 0x2E0
	0x03A22D5C MOV W3, W22
	0x03A22D60 MOV X4, X31
	0x03A22D64 BL 0x3A5F724
	0x03A22D68 LDR X1, [X19 + 0x230]
	0x03A22D6C B 0x3A22E08
	0x03A22D70 LDR W9, [X31 + 0x2C]
	0x03A22D74 AND W23, W23, W8, 0x0
	0x03A22D78 CMP W9, 0x0
	0x03A22D7C CSET W8, NE
	0x03A22D80 CBZ W9, 0x3A22E14
	0x03A22D84 ADRP X21, 0x732000
	0x03A22D88 LDR X21, [X21 + 0x8C8]
	0x03A22D8C LDR X20, [X31 + 0x2E0]
	0x03A22D90 AND W23, W23, W8, 0x0
	0x03A22D94 LDR X0, [X21]
	0x03A22D98 LDR W9, [X0 + 0xE0]
	0x03A22D9C CBNZ W9, 0x3A22DA8
	0x03A22DA0 BL 0x1C16DFC

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], D8
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X21, 0x9C1000
	015 Move W8, [X21+7]
	016 Move X19, X2
	017 Move X20, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {30}
	022 Move X0, 0x733000
	023 Move X0, [X0+2312]
	024 Call 0x1C17CF4
	025 Move X0, 0x733000
	026 Move X0, [X0+2320]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X21+7], W8
	030 Move X0, [X20+256]
	031 Compare X0, 0
	032 JumpIfEqual {57}
	033 Move X24, 0x733000
	034 Move X24, [X24+2320]
	035 Move W23, W31
	036 Move W22, W31
	037 Move W21, W31
	038 Move W8, [X0+24]
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Move X2, [X24]
	041 Move W1, W21
	042 Call List`1<Object>.get_Item, X0, X1
	043 Compare X0, 0
	044 JumpIfEqual {57}
	045 Move W8, [X0+200]
	046 Move X0, [X20+256]
	047 Add W21, W21, 1
	048 And W9, W8, 1
	049 Move W8, W8
	050 ShiftRight W8, 2
	051 And W8, W8, 3
	052 Or W22, W9, W22
	053 Or W23, W8, W23
	054 Compare X0, 0
	055 JumpIfNotEqual {38}
	056 Move [X31+12], W23
	057 Call 0x1C17F20
	058 Move [X31+12], W23
	059 Move W8, [X19+392]
	060 And W21, W23, 255
	061 Add X23, X31, 12
	062 NotImplemented "Instruction CMP not yet implemented."
	063 NotImplemented "Instruction CSEL not yet implemented."
	064 NotImplemented "Instruction CSEL not yet implemented."
	065 Compare W8, 0
	066 JumpIfEqual {68}
	067 Move W8, 1
	068 Move W8, [X19+365]
	069 NotImplemented "Instruction CMP not yet implemented."
	070 NotImplemented "Instruction CSEL not yet implemented."
	071 NotImplemented "Instruction CSEL not yet implemented."
	072 Compare W8, 0
	073 JumpIfEqual {76}
	074 Move W8, 1
	075 Add X23, X31, 12
	076 Move X0, X19
	077 Move X1, X31
	078 Call CameraData.get_isSceneViewCamera, X0
	079 And W8, W0, 1
	080 NotImplemented "Instruction CSEL not yet implemented."
	081 NotImplemented "Instruction CSEL not yet implemented."
	082 Compare W8, 0
	083 JumpIfEqual {87}
	084 Move W8, 1
	085 Move X23, X24
	086 Move W21, W26
	087 Move W8, [X19+364]
	088 NotImplemented "Instruction CMP not yet implemented."
	089 NotImplemented "Instruction CSEL not yet implemented."
	090 NotImplemented "Instruction CSEL not yet implemented."
	091 Compare W8, 0
	092 JumpIfEqual {103}
	093 Move X0, X19
	094 Move X1, X31
	095 Call CameraData.get_requireSrgbConversion, X0
	096 And W8, W0, 1
	097 NotImplemented "Instruction CSEL not yet implemented."
	098 NotImplemented "Instruction CSEL not yet implemented."
	099 Compare W8, 0
	100 JumpIfEqual {105}
	101 Move W8, 1
	102 Move X23, X25
	103 Move W8, 1
	104 Move W21, W27
	105 Move W8, [X19+448]
	106 NotImplemented "Instruction CMP not yet implemented."
	107 NotImplemented "Instruction CSEL not yet implemented."
	108 NotImplemented "Instruction CSEL not yet implemented."
	109 Compare W8, 0
	110 JumpIfEqual {123}
	111 Move X8, [X20+536]
	112 Compare X8, 0
	113 JumpIfEqual {57}
	114 Move W8, [X8+97]
	115 NotImplemented "Instruction CMP not yet implemented."
	116 NotImplemented "Instruction CSEL not yet implemented."
	117 NotImplemented "Instruction CSEL not yet implemented."
	118 Compare W8, 0
	119 JumpIfEqual {126}
	120 Move W8, 1
	121 Move X23, X9
	122 Move W21, W10
	123 Move W8, 1
	124 Move X23, X26
	125 Move W21, W28
	126 Move X26, 0x9B8000
	127 Move W8, [X26+1450]
	128 Move V8, [X19+332]
	129 Compare W8, 0
	130 JumpIfNotEqual {136}
	131 Move X0, 0x6D9000
	132 Move X0, [X0+1208]
	133 Call 0x1C17CF4
	134 Move W8, 1
	135 Move [X26+1450], W8
	136 Move X8, 0x6D9000
	137 Move X8, [X8+1208]
	138 Move X9, -49508352
	139 Move V0, [X9+576]
	140 NotImplemented "Instruction FABS not yet implemented."
	141 Move X8, [X8]
	142 Move S2, 1
	143 NotImplemented "Instruction FMAXNM not yet implemented."
	144 Multiply S0, S1, S0
	145 Move X8, [X8+184]
	146 Move S1, 8
	147 Move V3, [X8]
	148 Multiply S1, S3, S1
	149 NotImplemented "Instruction FCMP not yet implemented."
	150 NotImplemented "Instruction FCSEL not yet implemented."
	151 NotImplemented "Instruction FABD not yet implemented."
	152 NotImplemented "Instruction FCMP not yet implemented."
	153 Move X0, [X20+224]
	154 Compare X0, 0
	155 JumpIfEqual {163}
	156 Move X1, X19
	157 Move X2, X31
	158 Call DebugHandler.WriteToDebugScreenTexture, X0, X1
	159 And W8, W0, 1
	160 Move W8, 1
	161 Move X23, X24
	162 Move W21, W25
	163 Move W8, W31
	164 Or W8, W8, W21
	165 Move [X23], W8
	166 Move W8, [X19+448]
	167 Compare W8, 0
	168 JumpIfEqual {170}
	169 Move W8, W31
	170 Move W8, [X20+488]
	171 Move W9, [X31+12]
	172 Or W8, W8, W22
	173 Move X20, [X31+96]
	174 Move X19, [X31+104]
	175 Move X22, [X31+80]
	176 Move X21, [X31+88]
	177 Move X24, [X31+64]
	178 Move X23, [X31+72]
	179 Move X26, [X31+48]
	180 Move X25, [X31+56]
	181 Move X28, [X31+32]
	182 Move X27, [X31+40]
	183 Move X30, [X31+24]
	184 Move V8, [X31+16]
	185 And X0, X8, 255
	186 NotImplemented "Instruction BFM not yet implemented."
	187 Add X31, X31, 112
	188 Return X0

Method: System.Void CreateRenderTextures(ref UnityEngine.Rendering.Universal.Renderer2D/RenderPassInputSummary renderPassInputs, UnityEngine.Rendering.CommandBuffer cmd, ref UnityEngine.Rendering.Universal.CameraData cameraData, System.Boolean forceCreateColorTexture, UnityEngine.FilterMode colorTextureFilterMode, out UnityEngine.Rendering.RTHandle colorTargetHandle, out UnityEngine.Rendering.RTHandle depthTargetHandle)

Disassembly:
	0x03A22DA4 LDR X0, [X21]
	0x03A22DA8 LDR X8, [X0 + 0xB8]
	0x03A22DAC LDR X8, [X8 + 0x10]
	0x03A22DB0 CMP X20, X8
	0x03A22DB4 B.EQ 0x3A22E14
	0x03A22DB8 LDR X9, [X31 + 0x20]
	0x03A22DBC LDR X0, [X19 + 0x1C0]
	0x03A22DC0 LDP V2, V0, [X9 + 0x10]
	0x03A22DC4 LDR W8, [X9 + 0x30]
	0x03A22DC8 LDR V1, [X9]
	0x03A22DCC STP V2, V0, [X31 + 0x160]
	0x03A22DD0 STR W8, [X31 + 0x180]
	0x03A22DD4 STR V1, [X31 + 0x15]
	0x03A22DD8 CBZ X0, 0x3A22FC8
	0x03A22DDC LDR X2, [X31 + 0x2E0]
	0x03A22DE0 LDP V0, V1, [X31 + 0x150]
	0x03A22DE4 LDR V2, [X31 + 0x17]
	0x03A22DE8 LDR W8, [X31 + 0x180]
	0x03A22DEC ADD X1, X31, 0x30
	0x03A22DF0 MOV X3, X31
	0x03A22DF4 STP V0, V1, [X31 + 0x30]
	0x03A22DF8 STR V2, [X31 + 0x5]
	0x03A22DFC STR W8, [X31 + 0x60]
	0x03A22E00 BL 0x3AB0920
	0x03A22E04 LDR X1, [X19 + 0x1C0]
	0x03A22E08 MOV X0, X19
	0x03A22E0C MOV X2, X31
	0x03A22E10 BL 0x3A4E96C
	0x03A22E14 AND W8, W23, W29, 0x0
	0x03A22E18 TBZ X8, 0x0, 0x3A22E2C
	0x03A22E1C LDR X1, [X19 + 0x1D0]
	0x03A22E20 MOV X0, X19
	0x03A22E24 MOV X2, X31
	0x03A22E28 BL 0x3A4E96C
	0x03A22E2C ADD X31, X31, 0x310
	0x03A22E30 LDP X20, X19, [X31 + 0x50]
	0x03A22E34 LDP X22, X21, [X31 + 0x40]
	0x03A22E38 LDP X24, X23, [X31 + 0x30]
	0x03A22E3C LDP X26, X25, [X31 + 0x20]
	0x03A22E40 LDP X28, X27, [X31 + 0x10]
	0x03A22E44 LDP X29, X30, [X31], #0x60
	0x03A22E48 RET
	0x03A22E4C LDR X0, [X31 + 0x300]
	0x03A22E50 CBZ X0, 0x3A22FC8
	0x03A22E54 MOV X1, X31
	0x03A22E58 BL 0x3A01C68
	0x03A22E5C LDR X8, [X31 + 0x20]
	0x03A22E60 STR W0, [X8]
	0x03A22E64 LDR X0, [X31 + 0x300]
	0x03A22E68 CBZ X0, 0x3A22FC8
	0x03A22E6C MOV X1, X31
	0x03A22E70 BL 0x3A01C68
	0x03A22E74 UBFM X8, X0, 0x20, 0x3F
	0x03A22E78 STR W8, [X20 + 0xF4]
	0x03A22E7C ADRP X21, 0x732000
	0x03A22E80 LDR X21, [X21 + 0x978]
	0x03A22E84 LDR X23, [X19 + 0x100]
	0x03A22E88 LDR X0, [X21]
	0x03A22E8C LDR W8, [X0 + 0xE0]
	0x03A22E90 CBNZ W8, 0x3A22E9C
	0x03A22E94 BL 0x1C16DFC
	0x03A22E98 LDR X0, [X21]
	0x03A22E9C LDR X8, [X0 + 0xB8]
	0x03A22EA0 LDR X24, [X8 + 0x8]
	0x03A22EA4 CBNZ X24, 0x3A22F0C
	0x03A22EA8 LDR W8, [X0 + 0xE0]
	0x03A22EAC CBZ W8, 0x3A22EBC
	0x03A22EB0 ADRP X21, 0x732000
	0x03A22EB4 LDR X21, [X21 + 0x978]
	0x03A22EB8 B 0x3A22ECC
	0x03A22EBC BL 0x1C16DFC
	0x03A22EC0 ADRP X21, 0x732000
	0x03A22EC4 LDR X21, [X21 + 0x978]
	0x03A22EC8 LDR X0, [X21]
	0x03A22ECC ADRP X9, 0x732000
	0x03A22ED0 LDR X8, [X0 + 0xB8]
	0x03A22ED4 LDR X9, [X9 + 0x960]
	0x03A22ED8 LDR X25, [X8]
	0x03A22EDC LDR X0, [X9]
	0x03A22EE0 BL 0x1C16F10
	0x03A22EE4 ADRP X8, 0x732000
	0x03A22EE8 LDR X8, [X8 + 0x970]
	0x03A22EEC MOV X1, X25
	0x03A22EF0 MOV X3, X31
	0x03A22EF4 MOV X24, X0
	0x03A22EF8 LDR X2, [X8]
	0x03A22EFC BL 0x24AD1FC
	0x03A22F00 LDR X8, [X21]
	0x03A22F04 LDR X8, [X8 + 0xB8]
	0x03A22F08 STR X24, [X8 + 0x8]
	0x03A22F0C CBZ X23, 0x3A22FC8
	0x03A22F10 ADRP X8, 0x732000
	0x03A22F14 LDR X8, [X8 + 0x950]
	0x03A22F18 MOV X0, X23
	0x03A22F1C MOV X1, X24
	0x03A22F20 LDR X2, [X8]
	0x03A22F24 BL 0x301C5F0
	0x03A22F28 CBZ X0, 0x3A22F88
	0x03A22F2C ADRP X8, 0x731000
	0x03A22F30 LDR X8, [X8 + 0xFE8]
	0x03A22F34 LDR X9, [X0]
	0x03A22F38 LDR X8, [X8]
	0x03A22F3C LDRB W11, [X9 + 0x130]
	0x03A22F40 LDRB W10, [X8 + 0x130]
	0x03A22F44 CMP W11, W10
	0x03A22F48 B.CC 0x3A22F88
	0x03A22F4C LDR X9, [X9 + 0xC8]
	0x03A22F50 ADD X9, X9, X10, 0x3, LSL
	0x03A22F54 LDUR X9, [X9 - 0x8]
	0x03A22F58 CMP X9, X8
	0x03A22F5C B.NE 0x3A22F88
	0x03A22F60 LDR X9, [X31 + 0x20]
	0x03A22F64 ADD X1, X31, 0x190
	0x03A22F68 MOV X2, X31
	0x03A22F6C LDR W8, [X9 + 0x30]
	0x03A22F70 LDP V1, V0, [X9 + 0x10]
	0x03A22F74 LDR V2, [X9]
	0x03A22F78 STR W8, [X31 + 0x1C0]
	0x03A22F7C STP V1, V0, [X31 + 0x1A0]
	0x03A22F80 STR V2, [X31 + 0x19]
	0x03A22F84 BL 0x3A01138
	0x03A22F88 MOVZ W24, 0x1
	0x03A22F8C LDR X0, [X31 + 0x300]
	0x03A22F90 CBZ X0, 0x3A22FC8
	0x03A22F94 LDR W8, [X0 + 0x30]
	0x03A22F98 CMP W8, 0x2
	0x03A22F9C B.NE 0x3A22FA8
	0x03A22FA0 MOVZ W8, 0x1
	0x03A22FA4 B 0x3A22FB4
	0x03A22FA8 MOV X1, X31
	0x03A22FAC BL 0x3A01A64
	0x03A22FB0 AND W8, W0, 0x1
	0x03A22FB4 CMP W8, 0x0
	0x03A22FB8 MOV W26, W31
	0x03A22FBC CSET W8, NE
	0x03A22FC0 STR W8, [X31 + 0x1C]
	0x03A22FC4 B 0x3A22738
	0x03A22FC8 BL 0x1C16F20
	0x03A22FCC CMP W1, 0x1
	0x03A22FD0 MOV X26, X0
	0x03A22FD4 B.NE 0x3A23000
	0x03A22FD8 MOV X0, X26
	0x03A22FDC BL 0x3EB1AD0
	0x03A22FE0 LDR X24, [X0]
	0x03A22FE4 BL 0x3EB1AE0
	0x03A22FE8 ADD X0, X31, 0x258
	0x03A22FEC MOV X1, X31
	0x03A22FF0 BL 0x39B1DB4
	0x03A22FF4 CBZ X24, 0x3A227B8
	0x03A22FF8 MOV X0, X24
	0x03A22FFC BL 0x1C16F18
	0x03A23000 MOV X24, X31
	0x03A23004 B 0x3A2300C
	0x03A23008 MOV X26, X0
	0x03A2300C ADD X0, X31, 0x258
	0x03A23010 MOV X1, X31
	0x03A23014 BL 0x39B1DB4
	0x03A23018 CBNZ X24, 0x3A23024
	0x03A2301C MOV X0, X26
	0x03A23020 BL 0x1D2C690
	0x03A23024 MOV X0, X24
	0x03A23028 BL 0x1C16F18
	0x03A2302C BL 0x1990590
	0x03A23030 STP X30, X23, [X31 - 0x30]!
	0x03A23034 STP X22, X21, [X31 + 0x10]
	0x03A23038 STP X20, X19, [X31 + 0x20]
	0x03A2303C ADRP X22, 0x9BF000
	0x03A23040 ADRP X23, 0x72D000
	0x03A23044 LDRB W8, [X22 + 0xA]
	0x03A23048 LDR X23, [X23 + 0x680]
	0x03A2304C MOV X20, X2
	0x03A23050 MOV X19, X1
	0x03A23054 MOV X21, X0
	0x03A23058 TBNZ X8, 0x0, 0x3A23070
	0x03A2305C ADRP X0, 0x72D000
	0x03A23060 LDR X0, [X0 + 0x680]
	0x03A23064 BL 0x1C16CF4
	0x03A23068 MOVZ W8, 0x1
	0x03A2306C STRB W8, [X22 + 0xA]
	0x03A23070 LDR X0, [X23]
	0x03A23074 LDR W8, [X0 + 0xE0]
	0x03A23078 CBNZ W8, 0x3A23080
	0x03A2307C BL 0x1C16DFC
	0x03A23080 MOV X0, X19
	0x03A23084 MOV W1, W31
	0x03A23088 MOV X2, X31
	0x03A2308C BL 0x3C51EB4
	0x03A23090 LDR X0, [X20 + 0xC0]
	0x03A23094 CBZ X0, 0x3A230E0
	0x03A23098 MOV X1, X31
	0x03A2309C BL 0x3C03928
	0x03A230A0 AND W1, W0, 0x1
	0x03A230A4 MOV X0, X19
	0x03A230A8 MOV X2, X31
	0x03A230AC BL 0x3C51E38
	0x03A230B0 FMOV S0, W31
	0x03A230B4 MOV X0, X19
	0x03A230B8 MOV X1, X31
	0x03A230BC BL 0x3C51EA4
	0x03A230C0 LDR X0, [X21 + 0x1D8]
	0x03A230C4 CBZ X0, 0x3A230E0
	0x03A230C8 LDR X2, [X20 + 0xC0]
	0x03A230CC MOV X1, X19
	0x03A230D0 LDP X20, X19, [X31 + 0x20]
	0x03A230D4 LDP X22, X21, [X31 + 0x10]
	0x03A230D8 LDP X30, X23, [X31], #0x30
	0x03A230DC B 0x3A15DC4
	0x03A230E0 BL 0x1C16F20
	0x03A230E4 SUB X31, X31, 0x140
	0x03A230E8 STR X29, [X31 + 0x110]
	0x03A230EC STP X30, X21, [X31 + 0x120]
	0x03A230F0 STP X20, X19, [X31 + 0x130]
	0x03A230F4 ADRP X21, 0x9BF000
	0x03A230F8 LDRB W8, [X21 + 0xB]
	0x03A230FC MOV X19, X1
	0x03A23100 MOV X20, X0
	0x03A23104 TBNZ X8, 0x0, 0x3A23128
	0x03A23108 ADRP X0, 0x731000
	0x03A2310C LDR X0, [X0 + 0x928]
	0x03A23110 BL 0x1C16CF4
	0x03A23114 ADRP X0, 0x731000
	0x03A23118 LDR X0, [X0 + 0x930]
	0x03A2311C BL 0x1C16CF4
	0x03A23120 MOVZ W8, 0x1
	0x03A23124 STRB W8, [X21 + 0xB]
	0x03A23128 LDR X0, [X20 + 0x1E0]
	0x03A2312C CBZ X0, 0x3A23288
	0x03A23130 MOV X1, X31
	0x03A23134 BL 0x3AB5CE8
	0x03A23138 LDR X8, [X20 + 0x1F8]
	0x03A2313C CBZ X8, 0x3A23288
	0x03A23140 LDR X9, [X8 + 0x48]
	0x03A23144 LDUR V0, [X8 + 0x38]
	0x03A23148 LDUR V1, [X8 + 0x28]
	0x03A2314C ADD X8, X31, 0xB8
	0x03A23150 MOVZ W0, 0x2
	0x03A23154 MOV X1, X31
	0x03A23158 ADD X21, X31, 0xB8
	0x03A2315C STR X9, [X31 + 0x100]
	0x03A23160 STP V1, V0, [X31 + 0xE0]
	0x03A23164 BL 0x3C4B204
	0x03A23168 LDP V0, V1, [X21]
	0x03A2316C LDR X8, [X31 + 0xD8]
	0x03A23170 LDP V2, V3, [X31 + 0xE0]
	0x03A23174 LDR X9, [X31 + 0x100]
	0x03A23178 ADD X0, X31, 0x90
	0x03A2317C ADD X1, X31, 0x60
	0x03A23180 MOV X2, X31
	0x03A23184 STP V0, V1, [X31 + 0x60]
	0x03A23188 STR X8, [X31 + 0x80]
	0x03A2318C STP V2, V3, [X31 + 0x90]
	0x03A23190 STR X9, [X31 + 0xB0]
	0x03A23194 BL 0x3C4B708
	0x03A23198 LDR X8, [X20 + 0x1E0]
	0x03A2319C CBZ X8, 0x3A23288
	0x03A231A0 MOV W21, W0
	0x03A231A4 MOV X0, X8
	0x03A231A8 MOV X1, X19
	0x03A231AC MOV X2, X31
	0x03A231B0 BL 0x3AB59EC
	0x03A231B4 MOV X1, X0
	0x03A231B8 TBZ X21, 0x0, 0x3A231D0
	0x03A231BC LDR X2, [X20 + 0x1F8]
	0x03A231C0 MOV X0, X20
	0x03A231C4 MOV X3, X31
	0x03A231C8 BL 0x3A4B4D8
	0x03A231CC B 0x3A231DC
	0x03A231D0 MOV X0, X20
	0x03A231D4 MOV X2, X31
	0x03A231D8 BL 0x3A4B604
	0x03A231DC LDR X0, [X20 + 0x1E0]
	0x03A231E0 CBZ X0, 0x3A23288
	0x03A231E4 MOV X1, X19
	0x03A231E8 MOV X2, X31
	0x03A231EC BL 0x3AB59EC
	0x03A231F0 STR X0, [X20 + 0x1F0]
	0x03A231F4 CBZ X0, 0x3A23288
	0x03A231F8 LDR X8, [X0 + 0x48]
	0x03A231FC LDUR V0, [X0 + 0x38]
	0x03A23200 LDUR V1, [X0 + 0x28]
	0x03A23204 STR X8, [X31 + 0x100]
	0x03A23208 STP V1, V0, [X31 + 0xE0]
	0x03A2320C CBZ X19, 0x3A23288
	0x03A23210 ADRP X8, 0x731000
	0x03A23214 LDR X8, [X8 + 0x928]
	0x03A23218 LDP V0, V1, [X31 + 0xE0]
	0x03A2321C LDR X9, [X31 + 0x100]
	0x03A23220 ADD X2, X31, 0x30
	0x03A23224 LDR X1, [X8]
	0x03A23228 MOV X0, X19
	0x03A2322C MOV X3, X31
	0x03A23230 STP V0, V1, [X31 + 0x30]
	0x03A23234 STR X9, [X31 + 0x50]
	0x03A23238 BL 0x3C4FC28
	0x03A2323C LDR X8, [X20 + 0x1F0]
	0x03A23240 CBZ X8, 0x3A23288
	0x03A23244 ADRP X9, 0x731000
	0x03A23248 LDR X9, [X9 + 0x930]
	0x03A2324C LDR X10, [X8 + 0x48]
	0x03A23250 LDUR V0, [X8 + 0x38]
	0x03A23254 LDUR V1, [X8 + 0x28]
	0x03A23258 LDR X1, [X9]
	0x03A2325C ADD X2, X31, 0x0
	0x03A23260 MOV X0, X19
	0x03A23264 MOV X3, X31
	0x03A23268 STR X10, [X31 + 0x20]

ISIL:
	001 Move [X31-96], X29
	002 Move [X31+16], X30
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Subtract X31, X31, 480
	013 Move X27, 0x9C1000
	014 Move W8, [X27+8]
	015 Move X19, X7
	016 Move X20, X6
	017 Move W26, W5
	018 Move W24, W4
	019 Move X22, X3
	020 Move X23, X2
	021 Move X25, X1
	022 Move X21, X0
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {50}
	027 Move X0, 0x733000
	028 Move X0, [X0+2328]
	029 Call 0x1C17CF4
	030 Move X0, 0x733000
	031 Move X0, [X0+2336]
	032 Call 0x1C17CF4
	033 Move X0, 0x733000
	034 Move X0, [X0+16]
	035 Call 0x1C17CF4
	036 Move X0, 0x733000
	037 Move X0, [X0+2248]
	038 Call 0x1C17CF4
	039 Move X0, 0x733000
	040 Move X0, [X0+2344]
	041 Call 0x1C17CF4
	042 Move X0, 0x733000
	043 Move X0, [X0+2352]
	044 Call 0x1C17CF4
	045 Move X0, 0x733000
	046 Move X0, [X0+2360]
	047 Call 0x1C17CF4
	048 Move W8, 1
	049 Move [X27+8], W8
	050 NotImplemented "Instruction MOVI not yet implemented."
	051 Move [X31+400], W31
	052 Move [X31+344], X31
	053 Add X27, X22, 216
	054 Move [X31+368], V0
	055 Move [X31+376], V0
	056 Move [X31+22], V0
	057 Move W8, [X27+48]
	058 NotImplemented "Instruction LDUR not yet implemented."
	059 NotImplemented "Instruction LDUR not yet implemented."
	060 NotImplemented "Instruction LDUR not yet implemented."
	061 Add X0, X31, 416
	062 Move W1, W31
	063 Move X2, X31
	064 Move [X31+464], W8
	065 Move [X31+432], V1
	066 Move [X31+440], V0
	067 Move [X31+26], V2
	068 Call RenderTextureDescriptor.set_depthBufferBits, X0, X1
	069 Move X0, [X21+480]
	070 Move V0, [X31+416]
	071 Move V1, [X31+432]
	072 Move V2, [X31+28]
	073 Move W8, [X31+464]
	074 Move [X31+288], V0
	075 Move [X31+296], V1
	076 Move [X31+20], V2
	077 Move [X31+336], W8
	078 Compare X0, 0
	079 JumpIfEqual {352}
	080 Move V0, [X31+288]
	081 Move V1, [X31+304]
	082 Move V2, [X31+20]
	083 Move W8, [X31+336]
	084 Add X1, X31, 224
	085 Move W2, W26
	086 Move X3, X31
	087 Move [X31+224], V0
	088 Move [X31+232], V1
	089 Move [X31+16], V2
	090 Move [X31+272], W8
	091 Call RenderTargetBufferSystem.SetCameraSettings, X0, X1, X2
	092 Move W8, [X22+200]
	093 Compare W8, 0
	094 JumpIfEqual {138}
	095 Move X0, [X22+520]
	096 Compare X0, 0
	097 JumpIfEqual {352}
	098 Move X8, 0x733000
	099 Move X8, [X8+2328]
	100 Add X1, X31, 344
	101 Move X2, [X8]
	102 Call 0x21A5990, X0, X1
	103 Move X0, [X31+344]
	104 Compare X0, 0
	105 JumpIfEqual {352}
	106 Move X1, X31
	107 Call UniversalAdditionalCameraData.get_scriptableRenderer, X0
	108 Compare X0, 0
	109 JumpIfEqual {352}
	110 Move X9, 0x733000
	111 Move X9, [X9+2336]
	112 Move X8, [X0]
	113 Move X22, X0
	114 Move X1, [X9]
	115 Move W10, [X8+304]
	116 Move W9, [X1+304]
	117 NotImplemented "Instruction CMP not yet implemented."
	118 Move X8, [X8+200]
	119 Add X8, X8, X9
	120 NotImplemented "Instruction LDUR not yet implemented."
	121 NotImplemented "Instruction CMP not yet implemented."
	122 Move X0, [X21+480]
	123 Move X8, [X22+480]
	124 NotImplemented "Instruction CMP not yet implemented."
	125 Compare X0, 0
	126 JumpIfEqual {352}
	127 Move X1, X31
	128 Call RenderTargetBufferSystem.Dispose, X0
	129 Move X8, [X22+480]
	130 Move [X21+480], X8
	131 Add X8, X21, 489
	132 Move W9, 257
	133 NotImplemented "Instruction STRH not yet implemented."
	134 Move V0, [X22+31]
	135 Add X8, X21, 504
	136 Move [X21+31], V0
	137 Move [X20], D0
	138 Move W8, [X25+1]
	139 Move W9, [X25]
	140 And W10, W24, 1
	141 Or W8, W8, W10
	142 And W31, W8, 255
	143 Move [X21+489], W8
	144 Or W8, W9, W8
	145 Move [X21+490], W8
	146 Move X0, [X21+480]
	147 Compare X0, 0
	148 JumpIfEqual {352}
	149 Move X1, X31
	150 Call RenderTargetBufferSystem.PeekBackBuffer, X0
	151 Compare X0, 0
	152 JumpIfEqual {191}
	153 Move X0, [X21+480]
	154 Compare X0, 0
	155 JumpIfEqual {352}
	156 Move X1, X31
	157 Call RenderTargetBufferSystem.PeekBackBuffer, X0
	158 Compare X0, 0
	159 JumpIfEqual {352}
	160 Move X8, [X0+72]
	161 NotImplemented "Instruction LDUR not yet implemented."
	162 NotImplemented "Instruction LDUR not yet implemented."
	163 Move W0, 2
	164 Move [X31+320], X8
	165 Add X8, X31, 184
	166 Move X1, X31
	167 Add X24, X31, 184
	168 Move [X31+288], V1
	169 Move [X31+296], V0
	170 Call RenderTargetIdentifier.op_Implicit, X0
	171 Move V0, [X24]
	172 Move V1, [X24+16]
	173 Move X8, [X31+216]
	174 Move V2, [X31+288]
	175 Move V3, [X31+304]
	176 Move X9, [X31+320]
	177 Add X0, X31, 144
	178 Add X1, X31, 96
	179 Move X2, X31
	180 Move [X31+96], V0
	181 Move [X31+104], V1
	182 Move [X31+128], X8
	183 Move [X31+144], V2
	184 Move [X31+152], V3
	185 Move [X31+176], X9
	186 Call RenderTargetIdentifier.op_Inequality, X0, X1
	187 Move TEMP, X0
	188 And TEMP, TEMP, 1
	189 Compare TEMP, 1
	190 JumpIfNotEqual {237}
	191 Move X0, [X21+480]
	192 Compare X0, 0
	193 JumpIfEqual {352}
	194 Move X1, X23
	195 Move X2, X31
	196 Call RenderTargetBufferSystem.GetBackBuffer, X0, X1
	197 Move [X21+496], X0
	198 Compare X0, 0
	199 JumpIfEqual {352}
	200 Move X8, [X0+72]
	201 NotImplemented "Instruction LDUR not yet implemented."
	202 NotImplemented "Instruction LDUR not yet implemented."
	203 Move [X31+320], X8
	204 Move [X31+288], V1
	205 Move [X31+296], V0
	206 Compare X23, 0
	207 JumpIfEqual {352}
	208 Move X8, 0x732000
	209 Move X8, [X8+2344]
	210 Move V0, [X31+288]
	211 Move V1, [X31+304]
	212 Move X9, [X31+320]
	213 Add X2, X31, 48
	214 Move X1, [X8]
	215 Move X0, X23
	216 Move X3, X31
	217 Move [X31+48], V0
	218 Move [X31+56], V1
	219 Move [X31+80], X9
	220 Call CommandBuffer.SetGlobalTexture, X0, X1, X2
	221 Move X8, [X21+496]
	222 Compare X8, 0
	223 JumpIfEqual {352}
	224 NotImplemented "Instruction LDUR not yet implemented."
	225 Move X9, [X8+72]
	226 NotImplemented "Instruction LDUR not yet implemented."
	227 Move X8, 0x732000
	228 Move X8, [X8+2352]
	229 Add X2, X31, 0
	230 Move X0, X23
	231 Move X3, X31
	232 Move X1, [X8]
	233 Move [X31+32], X9
	234 Move [X31], V0
	235 Move [X31+8], V1
	236 Call CommandBuffer.SetGlobalTexture, X0, X1, X2
	237 Move X0, [X21+480]
	238 Compare X0, 0
	239 JumpIfEqual {352}
	240 Move X1, X31
	241 Call RenderTargetBufferSystem.PeekBackBuffer, X0
	242 Move W8, [X21+490]
	243 Move [X21+496], X0
	244 And W31, W8, 255
	245 Move W8, [X27+48]
	246 Move V1, [X27+16]
	247 Move V0, [X27+32]
	248 Move V2, [X27]
	249 Add X0, X31, 352
	250 Move W1, 1
	251 Move X2, X31
	252 Move [X31+400], W8
	253 Move [X31+368], V1
	254 Move [X31+376], V0
	255 Move [X31+22], V2
	256 Call RenderTextureDescriptor.set_colorFormat, X0, X1
	257 Add X0, X31, 352
	258 Move W1, W31
	259 Move X2, X31
	260 Call RenderTextureDescriptor.set_graphicsFormat, X0, X1
	261 Add X0, X31, 352
	262 Move W1, 32
	263 Move X2, X31
	264 Call RenderTextureDescriptor.set_depthBufferBits, X0, X1
	265 Move W8, [X22+448]
	266 Compare W8, 0
	267 JumpIfNotEqual {287}
	268 Move W8, [X21+488]
	269 Compare W8, 0
	270 JumpIfEqual {287}
	271 Move W8, [X31+360]
	272 NotImplemented "Instruction CMP not yet implemented."
	273 Move X0, X31
	274 Call SystemInfo.get_supportsMultisampleAutoResolve
	275 Move TEMP, X0
	276 And TEMP, TEMP, 1
	277 Compare TEMP, 1
	278 JumpIfNotEqual {280}
	279 Move W1, W31
	280 Move X0, X31
	281 Call SystemInfo.get_supportsMultisampledTextures
	282 NotImplemented "Instruction CMP not yet implemented."
	283 NotImplemented "Instruction CSET not yet implemented."
	284 Add X0, X31, 352
	285 Move X2, X31
	286 Call RenderTextureDescriptor.set_bindMS, X0, X1
	287 Move X8, 0x732000
	288 Move X8, [X8+16]
	289 Add X22, X21, 504
	290 Move X0, [X8]
	291 Move W8, [X0+224]
	292 Compare W8, 0
	293 JumpIfNotEqual {295}
	294 Call 0x1C17DFC
	295 Move X8, 0x732000
	296 Move X8, [X8+2360]
	297 Add X1, X31, 352
	298 Move S0, W31
	299 Move W3, 1
	300 Move X6, [X8]
	301 Move W5, 1
	302 Move X0, X22
	303 Move W2, W31
	304 Move W4, W31
	305 Move X7, X31
	306 Call RenderingUtils.ReAllocateIfNeeded, X0, X1, X2, X3, X4, X5, V0, X6
	307 Move W8, [X21+489]
	308 Compare W8, 0
	309 JumpIfEqual {311}
	310 Add X8, X21, 496
	311 Move X22, 0x732000
	312 Move X22, [X22+2248]
	313 Move X0, [X22]
	314 Move W8, [X0+224]
	315 Compare W8, 0
	316 JumpIfNotEqual {319}
	317 Call 0x1C17DFC
	318 Move X0, [X22]
	319 Move X8, [X0+184]
	320 Add X8, X8, 16
	321 Move X8, [X8]
	322 Move [X20], X8
	323 Move W8, [X21+490]
	324 Compare W8, 0
	325 JumpIfEqual {327}
	326 Add X8, X21, 504
	327 Move X20, 0x732000
	328 Move X20, [X20+2248]
	329 Move X0, [X20]
	330 Move W8, [X0+224]
	331 Compare W8, 0
	332 JumpIfNotEqual {335}
	333 Call 0x1C17DFC
	334 Move X0, [X20]
	335 Move X8, [X0+184]
	336 Add X8, X8, 16
	337 Move X8, [X8]
	338 Move [X19], X8
	339 Add X31, X31, 480
	340 Move X20, [X31+80]
	341 Move X19, [X31+88]
	342 Move X22, [X31+64]
	343 Move X21, [X31+72]
	344 Move X24, [X31+48]
	345 Move X23, [X31+56]
	346 Move X26, [X31+32]
	347 Move X25, [X31+40]
	348 Move X30, [X31+16]
	349 Move X27, [X31+24]
	350 Move X29, [X31+96]
	351 Return 
	352 Call 0x1C17F20
	353 Move X0, X22
	354 Call 0x1C181E0

Method: System.Void Setup(UnityEngine.Rendering.ScriptableRenderContext context, ref UnityEngine.Rendering.Universal.RenderingData renderingData)

Disassembly:
	0x03A2326C STP V1, V0, [X31]
	0x03A23270 BL 0x3C4FC28
	0x03A23274 LDP X20, X19, [X31 + 0x130]
	0x03A23278 LDP X30, X21, [X31 + 0x120]
	0x03A2327C LDR X29, [X31 + 0x110]
	0x03A23280 ADD X31, X31, 0x140
	0x03A23284 RET
	0x03A23288 BL 0x1C16F20
	0x03A2328C STR X30, [X31 - 0x10]!
	0x03A23290 LDR X0, [X0 + 0x1E0]
	0x03A23294 CBZ X0, 0x3A232A4
	0x03A23298 MOV X2, X31
	0x03A2329C LDR X30, [X31], #0x10
	0x03A232A0 B 0x3AB5C5C
	0x03A232A4 BL 0x1C16F20
	0x03A232A8 STR X30, [X31 - 0x10]!
	0x03A232AC LDR X0, [X0 + 0x1E0]
	0x03A232B0 CBZ X0, 0x3A232C0
	0x03A232B4 MOV X2, X31
	0x03A232B8 LDR X30, [X31], #0x10
	0x03A232BC B 0x3AB59EC
	0x03A232C0 BL 0x1C16F20
	0x03A232C4 STR X30, [X31 - 0x10]!
	0x03A232C8 LDR X0, [X0 + 0x1E0]
	0x03A232CC CBZ X0, 0x3A232E0
	0x03A232D0 AND W1, W1, 0x1
	0x03A232D4 MOV X2, X31
	0x03A232D8 LDR X30, [X31], #0x10
	0x03A232DC B 0x3AB5EB4
	0x03A232E0 BL 0x1C16F20
	0x03A232E4 STR X30, [X31 - 0x30]!
	0x03A232E8 STP X22, X21, [X31 + 0x10]
	0x03A232EC STP X20, X19, [X31 + 0x20]
	0x03A232F0 ADRP X21, 0x9BF000
	0x03A232F4 ADRP X22, 0x72D000
	0x03A232F8 ADRP X19, 0x731000
	0x03A232FC ADRP X20, 0x731000
	0x03A23300 LDRB W8, [X21 + 0xC]
	0x03A23304 LDR X22, [X22 + 0x598]
	0x03A23308 LDR X19, [X19 + 0x998]
	0x03A2330C LDR X20, [X20 + 0x920]
	0x03A23310 TBNZ X8, 0x0, 0x3A23340
	0x03A23314 ADRP X0, 0x72D000
	0x03A23318 LDR X0, [X0 + 0x598]
	0x03A2331C BL 0x1C16CF4
	0x03A23320 ADRP X0, 0x731000
	0x03A23324 LDR X0, [X0 + 0x920]
	0x03A23328 BL 0x1C16CF4
	0x03A2332C ADRP X0, 0x731000
	0x03A23330 LDR X0, [X0 + 0x998]
	0x03A23334 BL 0x1C16CF4
	0x03A23338 MOVZ W8, 0x1
	0x03A2333C STRB W8, [X21 + 0xC]
	0x03A23340 LDR X0, [X22]
	0x03A23344 BL 0x1C16F10
	0x03A23348 LDR X1, [X19]
	0x03A2334C MOV X2, X31
	0x03A23350 MOV X19, X0
	0x03A23354 BL 0x39B19AC
	0x03A23358 LDR X8, [X20]
	0x03A2335C LDP X22, X21, [X31 + 0x10]
	0x03A23360 LDR X8, [X8 + 0xB8]
	0x03A23364 STR X19, [X8]
	0x03A23368 LDP X20, X19, [X31 + 0x20]
	0x03A2336C LDR X30, [X31], #0x30
	0x03A23370 RET
	0x03A23374 STP D13, D12, [X31 - 0x50]!
	0x03A23378 STP D11, D10, [X31 + 0x10]
	0x03A2337C STP D9, D8, [X31 + 0x20]
	0x03A23380 STP X30, X21, [X31 + 0x30]
	0x03A23384 STP X20, X19, [X31 + 0x40]
	0x03A23388 ADRP X21, 0x9BF000
	0x03A2338C LDRB W8, [X21 + 0x13]
	0x03A23390 MOV X19, X2
	0x03A23394 MOV X20, X1
	0x03A23398 TBNZ X8, 0x0, 0x3A233B0
	0x03A2339C ADRP X0, 0x6F9000
	0x03A233A0 LDR X0, [X0 + 0xD8]
	0x03A233A4 BL 0x1C16CF4
	0x03A233A8 MOVZ W8, 0x1
	0x03A233AC STRB W8, [X21 + 0x13]
	0x03A233B0 LDR V8, [X20]
	0x03A233B4 LDR V0, [X19]
	0x03A233B8 FSUB S0, S8, S0
	0x03A233BC FCMP S0, 0x0
	0x03A233C0 B.NE 0x3A23458
	0x03A233C4 LDR V9, [X20 + 0x4]
	0x03A233C8 LDR V0, [X19 + 0x4]
	0x03A233CC FSUB S0, S9, S0
	0x03A233D0 FCMP S0, 0x0
	0x03A233D4 B.NE 0x3A23458
	0x03A233D8 LDR W8, [X20 + 0x14]
	0x03A233DC LDR W9, [X19 + 0x14]
	0x03A233E0 SUBS W0, W8, W9
	0x03A233E4 B.NE 0x3A23460
	0x03A233E8 CBZ W8, 0x3A23448
	0x03A233EC ADRP X8, 0x6F9000
	0x03A233F0 LDR X8, [X8 + 0xD8]
	0x03A233F4 LDP S11, S10, [X20 + 0x8]
	0x03A233F8 LDP S13, S12, [X19 + 0x8]
	0x03A233FC LDR X0, [X8]
	0x03A23400 LDR W8, [X0 + 0xE0]
	0x03A23404 CBNZ W8, 0x3A2340C
	0x03A23408 BL 0x1C16DFC
	0x03A2340C FSUB S0, S10, S9
	0x03A23410 FSUB S1, S13, S11
	0x03A23414 FSUB S2, S11, S8
	0x03A23418 FSUB S3, S12, S10
	0x03A2341C MOVZ W8, 0x25000000
	0x03A23420 FMUL S0, S0, S1
	0x03A23424 FMUL S1, S2, S3
	0x03A23428 FMOV S2, W8
	0x03A2342C FSUB S3, S0, S1
	0x03A23430 FABD S0, S0, S0
	0x03A23434 FCMP S0, S2
	0x03A23438 FMOV S0, W31
	0x03A2343C FCSEL S0, S3, S0, PL
	0x03A23440 FCMP S0, 0x0
	0x03A23444 B.NE 0x3A23458
	0x03A23448 LDR W8, [X20 + 0x10]
	0x03A2344C LDR W9, [X19 + 0x10]
	0x03A23450 SUB W0, W8, W9
	0x03A23454 B 0x3A23460
	0x03A23458 MOVN W8, 0x0
	0x03A2345C CSINC W0, W8, W31, LE
	0x03A23460 LDP X20, X19, [X31 + 0x40]
	0x03A23464 LDP X30, X21, [X31 + 0x30]
	0x03A23468 LDP D9, D8, [X31 + 0x20]
	0x03A2346C LDP D11, D10, [X31 + 0x10]
	0x03A23470 LDP D13, D12, [X31], #0x50
	0x03A23474 RET
	0x03A23478 FSUB S1, S3, S1
	0x03A2347C FSUB S4, S4, S2
	0x03A23480 FSUB S0, S2, S0
	0x03A23484 FSUB S2, S5, S3
	0x03A23488 MOVZ W8, 0x25000000
	0x03A2348C FMUL S1, S1, S4
	0x03A23490 FMUL S0, S0, S2
	0x03A23494 FMOV S2, W8
	0x03A23498 FSUB S3, S1, S0
	0x03A2349C FABD S0, S1, S1
	0x03A234A0 FCMP S0, S2
	0x03A234A4 FMOV S0, W31
	0x03A234A8 FCSEL S0, S3, S0, PL
	0x03A234AC RET
	0x03A234B0 UBFM X8, X1, 0x20, 0x3F
	0x03A234B4 UBFM X9, X2, 0x20, 0x3F
	0x03A234B8 SUBS W10, W1, W2
	0x03A234BC SUB W8, W8, W9
	0x03A234C0 CSEL W0, W8, W10, EQ
	0x03A234C4 RET
	0x03A234C8 SUBS W0, W1, W3
	0x03A234CC B.EQ 0x3A234D4
	0x03A234D0 RET
	0x03A234D4 UBFM X8, X3, 0x20, 0x3F
	0x03A234D8 UBFM X9, X1, 0x20, 0x3F
	0x03A234DC SUBS W8, W9, W8
	0x03A234E0 SUB W9, W2, W4
	0x03A234E4 CSEL W0, W9, W8, EQ
	0x03A234E8 RET
	0x03A234EC UBFM X8, X1, 0x20, 0x3F
	0x03A234F0 UBFM X9, X2, 0x20, 0x3F
	0x03A234F4 SUBS W10, W1, W2
	0x03A234F8 SUB W8, W8, W9
	0x03A234FC CSEL W0, W8, W10, EQ
	0x03A23500 RET
	0x03A23504 SUBS W0, W1, W3
	0x03A23508 B.EQ 0x3A23510
	0x03A2350C RET
	0x03A23510 UBFM X8, X3, 0x20, 0x3F
	0x03A23514 UBFM X9, X1, 0x20, 0x3F
	0x03A23518 SUBS W0, W9, W8
	0x03A2351C B.NE 0x3A2350C
	0x03A23520 SUBS W0, W2, W4
	0x03A23524 B.NE 0x3A2350C
	0x03A23528 UBFM X8, X4, 0x20, 0x3F
	0x03A2352C UBFM X9, X2, 0x20, 0x3F
	0x03A23530 SUB W0, W9, W8
	0x03A23534 RET
	0x03A23538 SUB X31, X31, 0x60
	0x03A2353C STR X30, [X31 + 0x20]
	0x03A23540 STP X24, X23, [X31 + 0x30]
	0x03A23544 STP X22, X21, [X31 + 0x40]
	0x03A23548 STP X20, X19, [X31 + 0x50]
	0x03A2354C ADRP X22, 0x9BF000
	0x03A23550 ADRP X24, 0x6FA000
	0x03A23554 MOV X19, X8
	0x03A23558 LDRB W8, [X22 + 0x14]
	0x03A2355C LDR X24, [X24 + 0x138]
	0x03A23560 MOV W21, W1
	0x03A23564 MOV W20, W0
	0x03A23568 TBNZ X8, 0x0, 0x3A23580
	0x03A2356C ADRP X0, 0x6FA000
	0x03A23570 LDR X0, [X0 + 0x138]
	0x03A23574 BL 0x1C16CF4
	0x03A23578 MOVZ W8, 0x1
	0x03A2357C STRB W8, [X22 + 0x14]
	0x03A23580 LDR X4, [X24]
	0x03A23584 ADD X0, X31, 0x10
	0x03A23588 MOVZ W3, 0x1
	0x03A2358C MOV W1, W20
	0x03A23590 MOV W2, W21
	0x03A23594 STP X31, X31, [X31 + 0x10]
	0x03A23598 BL 0x23D58AC
	0x03A2359C LDR X4, [X24]
	0x03A235A0 LDP X22, X23, [X31 + 0x10]
	0x03A235A4 ADD X0, X31, 0x0
	0x03A235A8 MOVZ W3, 0x1
	0x03A235AC MOV W1, W20
	0x03A235B0 MOV W2, W21
	0x03A235B4 STP X31, X31, [X31]
	0x03A235B8 BL 0x23D58AC
	0x03A235BC LDP X8, X9, [X31]
	0x03A235C0 CMP W20, 0x1
	0x03A235C4 B.LT 0x3A235E4
	0x03A235C8 MOV X10, X31
	0x03A235CC MOV W11, W20
	0x03A235D0 STR W10, [X22, X10, LSL #2]
	0x03A235D4 STR W31, [X8, X10, LSL #2]
	0x03A235D8 ADD X10, X10, 0x1
	0x03A235DC CMP X11, X10
	0x03A235E0 B.NE 0x3A235D0
	0x03A235E4 STP X22, X23, [X19]
	0x03A235E8 STP X8, X9, [X19 + 0x10]
	0x03A235EC LDP X20, X19, [X31 + 0x50]
	0x03A235F0 LDP X22, X21, [X31 + 0x40]
	0x03A235F4 LDP X24, X23, [X31 + 0x30]
	0x03A235F8 LDR X30, [X31 + 0x20]
	0x03A235FC ADD X31, X31, 0x60
	0x03A23600 RET
	0x03A23604 STP X30, X21, [X31 - 0x20]!
	0x03A23608 STP X20, X19, [X31 + 0x10]
	0x03A2360C ADRP X21, 0x9BF000
	0x03A23610 ADRP X20, 0x6FA000
	0x03A23614 LDRB W8, [X21 + 0x15]
	0x03A23618 LDR X20, [X20 + 0x148]
	0x03A2361C MOV X19, X0
	0x03A23620 TBNZ X8, 0x0, 0x3A23638
	0x03A23624 ADRP X0, 0x6FA000
	0x03A23628 LDR X0, [X0 + 0x148]
	0x03A2362C BL 0x1C16CF4
	0x03A23630 MOVZ W8, 0x1
	0x03A23634 STRB W8, [X21 + 0x15]
	0x03A23638 LDR X1, [X20]
	0x03A2363C ADD X0, X19, 0x10
	0x03A23640 BL 0x23D5AD4
	0x03A23644 LDR X1, [X20]
	0x03A23648 MOV X0, X19
	0x03A2364C LDP X20, X19, [X31 + 0x10]
	0x03A23650 LDP X30, X21, [X31], #0x20
	0x03A23654 B 0x23D5AD4
	0x03A23658 LDR X8, [X0]
	0x03A2365C MOV W9, W1
	0x03A23660 MOV W0, W9
	0x03A23664 LDR W9, [X8, W9, SXTW]
	0x03A23668 CMP W9, W0
	0x03A2366C B.NE 0x3A23660
	0x03A23670 ADD X9, X8, W1, 0x2, SXTW
	0x03A23674 LDR W10, [X9]
	0x03A23678 CMP W10, W0
	0x03A2367C B.EQ 0x3A2368C
	0x03A23680 STR W0, [X9]
	0x03A23684 ADD X9, X8, W10, 0x2, SXTW
	0x03A23688 B 0x3A23674
	0x03A2368C RET
	0x03A23690 LDR X8, [X0]
	0x03A23694 MOV W10, W1
	0x03A23698 MOV W9, W10
	0x03A2369C LDR W10, [X8, W10, SXTW]
	0x03A236A0 CMP W10, W9
	0x03A236A4 B.NE 0x3A23698
	0x03A236A8 ADD X10, X8, W1, 0x2, SXTW
	0x03A236AC LDR W11, [X10]
	0x03A236B0 CMP W11, W9
	0x03A236B4 B.EQ 0x3A236C4
	0x03A236B8 STR W9, [X10]
	0x03A236BC ADD X10, X8, W11, 0x2, SXTW
	0x03A236C0 B 0x3A236AC
	0x03A236C4 SXTW X10, W9
	0x03A236C8 MOV W12, W2
	0x03A236CC MOV W11, W12
	0x03A236D0 LDR W12, [X8, W12, SXTW]
	0x03A236D4 CMP W12, W11
	0x03A236D8 B.NE 0x3A236CC
	0x03A236DC ADD X12, X8, W2, 0x2, SXTW
	0x03A236E0 LDR W13, [X12]
	0x03A236E4 CMP W13, W11
	0x03A236E8 B.EQ 0x3A236F8
	0x03A236EC STR W11, [X12]
	0x03A236F0 ADD X12, X8, W13, 0x2, SXTW
	0x03A236F4 B 0x3A236E0
	0x03A236F8 CMP W9, W11
	0x03A236FC B.EQ 0x3A23738
	0x03A23700 LDR X12, [X0 + 0x10]
	0x03A23704 SXTW X13, W11
	0x03A23708 LDR W14, [X12, X10, LSL #2]
	0x03A2370C LDR W15, [X12, X13, LSL #2]
	0x03A23710 CMP W14, W15
	0x03A23714 B.GE 0x3A23720
	0x03A23718 STR W11, [X8, X10, LSL #2]
	0x03A2371C RET
	0x03A23720 CMP W15, W14
	0x03A23724 STR W9, [X8, X13, LSL #2]
	0x03A23728 B.LT 0x3A23738
	0x03A2372C LDR W8, [X12, X10, LSL #2]
	0x03A23730 ADD W8, W8, 0x1
	0x03A23734 STR W8, [X12, X10, LSL #2]
	0x03A23738 RET
	0x03A2373C FSUB D1, D3, D1
	0x03A23740 FSUB D4, D4, D2
	0x03A23744 FSUB D0, D2, D0
	0x03A23748 FSUB D2, D5, D3
	0x03A2374C MOVZ X8, 0x3CA00000
	0x03A23750 FMUL D1, D1, D4
	0x03A23754 FMUL D0, D0, D2
	0x03A23758 FMOV D2, X8
	0x03A2375C FSUB D3, D1, D0
	0x03A23760 FABD D0, D1, D1
	0x03A23764 FCMP D0, D2
	0x03A23768 FMOV D0, X31
	0x03A2376C FCSEL D0, D3, D0, PL
	0x03A23770 RET
	0x03A23774 STP D11, D10, [X31 - 0x30]!
	0x03A23778 STP D9, D8, [X31 + 0x10]
	0x03A2377C STP X30, X19, [X31 + 0x20]
	0x03A23780 LDP S10, S11, [X0]
	0x03A23784 LDP S0, S1, [X0 + 0x8]
	0x03A23788 LDP S2, S3, [X0 + 0x10]
	0x03A2378C ADRP X19, 0x9BE000
	0x03A23790 FMUL S4, S10, S10
	0x03A23794 FMUL S5, S0, S0
	0x03A23798 FMUL S6, S2, S2
	0x03A2379C FMUL S16, S1, S1
	0x03A237A0 FMUL S17, S3, S3
	0x03A237A4 FSUB S5, S5, S4
	0x03A237A8 FSUB S4, S6, S4
	0x03A237AC FMUL S7, S11, S11
	0x03A237B0 FSUB S0, S0, S10
	0x03A237B4 FSUB S3, S3, S11
	0x03A237B8 FSUB S18, S1, S11
	0x03A237BC FSUB S19, S2, S10
	0x03A237C0 FADD S5, S5, S16
	0x03A237C4 FADD S4, S4, S17
	0x03A237C8 LDRB W8, [X19 + 0x585]
	0x03A237CC FSUB S1, S11, S1
	0x03A237D0 FSUB S2, S10, S2
	0x03A237D4 FMUL S20, S0, S3
	0x03A237D8 FMUL S18, S19, S18
	0x03A237DC FSUB S5, S5, S7
	0x03A237E0 FSUB S4, S4, S7
	0x03A237E4 FSUB S6, S20, S18
	0x03A237E8 FMUL S3, S3, S5
	0x03A237EC FMUL S1, S1, S4
	0x03A237F0 FMUL S2, S2, S5
	0x03A237F4 FMUL S0, S0, S4
	0x03A237F8 FADD S6, S6, S6
	0x03A237FC FADD S1, S3, S1
	0x03A23800 FADD S0, S2, S0
	0x03A23804 FDIV S8, S1, S6
	0x03A23808 FDIV S9, S0, S6
	0x03A2380C CBNZ W8, 0x3A23824
	0x03A23810 ADRP X0, 0x6D0000
	0x03A23814 LDR X0, [X0 + 0x5A8]
	0x03A23818 BL 0x1C16CF4
	0x03A2381C MOVZ W8, 0x1
	0x03A23820 STRB W8, [X19 + 0x585]
	0x03A23824 ADRP X8, 0x6D0000
	0x03A23828 LDR X8, [X8 + 0x5A8]
	0x03A2382C FSUB S10, S10, S8
	0x03A23830 FSUB S11, S11, S9
	0x03A23834 LDR X0, [X8]
	0x03A23838 LDR W8, [X0 + 0xE0]
	0x03A2383C CBNZ W8, 0x3A23844
	0x03A23840 BL 0x1C16DFC
	0x03A23844 FMUL S0, S10, S10
	0x03A23848 FMUL S1, S11, S11
	0x03A2384C FADD S0, S0, S1
	0x03A23850 FSQRT S2, S0
	0x03A23854 MOV V0.16B, V8.16B
	0x03A23858 MOV V1.16B, V9.16B
	0x03A2385C LDP X30, X19, [X31 + 0x20]
	0x03A23860 LDP D9, D8, [X31 + 0x10]
	0x03A23864 LDP D11, D10, [X31], #0x30
	0x03A23868 RET
	0x03A2386C STR D12, [X31 - 0x40]!
	0x03A23870 STP D11, D10, [X31 + 0x10]
	0x03A23874 STP D9, D8, [X31 + 0x20]
	0x03A23878 STP X30, X19, [X31 + 0x30]
	0x03A2387C ADRP X19, 0x9BE000
	0x03A23880 LDRB W8, [X19 + 0x585]
	0x03A23884 MOV V9.16B, V4.16B
	0x03A23888 MOV V10.16B, V3.16B
	0x03A2388C MOV V8.16B, V2.16B
	0x03A23890 MOV V11.16B, V1.16B
	0x03A23894 MOV V12.16B, V0.16B
	0x03A23898 CBNZ W8, 0x3A238B0
	0x03A2389C ADRP X0, 0x6D0000
	0x03A238A0 LDR X0, [X0 + 0x5A8]
	0x03A238A4 BL 0x1C16CF4
	0x03A238A8 MOVZ W8, 0x1
	0x03A238AC STRB W8, [X19 + 0x585]
	0x03A238B0 ADRP X8, 0x6D0000
	0x03A238B4 LDR X8, [X8 + 0x5A8]
	0x03A238B8 FSUB S10, S12, S10
	0x03A238BC FSUB S9, S11, S9
	0x03A238C0 LDR X0, [X8]
	0x03A238C4 LDR W8, [X0 + 0xE0]
	0x03A238C8 CBNZ W8, 0x3A238D0
	0x03A238CC BL 0x1C16DFC
	0x03A238D0 FMUL S0, S10, S10
	0x03A238D4 FMUL S1, S9, S9
	0x03A238D8 FADD S0, S0, S1
	0x03A238DC FSQRT S0, S0
	0x03A238E0 FCMP S0, S8
	0x03A238E4 LDP X30, X19, [X31 + 0x30]
	0x03A238E8 LDP D9, D8, [X31 + 0x20]
	0x03A238EC LDP D11, D10, [X31 + 0x10]
	0x03A238F0 CSET W0, MI
	0x03A238F4 LDR V12, [X31], #0x40
	0x03A238F8 RET
	0x03A238FC FSUB S2, S0, S2
	0x03A23900 FSUB S3, S1, S3
	0x03A23904 FSUB S0, S0, S4
	0x03A23908 FSUB S1, S1, S5
	0x03A2390C FMUL S1, S2, S1
	0x03A23910 FMUL S0, S3, S0
	0x03A23914 FABD S0, S1, S1
	0x03A23918 FMOV S1, 0.5
	0x03A2391C FMUL S0, S0, S1
	0x03A23920 RET
	0x03A23924 FSUB S0, S0, S4
	0x03A23928 FSUB S3, S3, S5
	0x03A2392C FSUB S2, S2, S4
	0x03A23930 FSUB S1, S1, S5
	0x03A23934 FMUL S0, S0, S3
	0x03A23938 FMUL S1, S2, S1
	0x03A2393C FSUB S0, S0, S1
	0x03A23940 RET
	0x03A23944 STP D15, D14, [X31 - 0x60]!
	0x03A23948 STP D13, D12, [X31 + 0x10]
	0x03A2394C STP D11, D10, [X31 + 0x20]
	0x03A23950 STP D9, D8, [X31 + 0x30]
	0x03A23954 STR X30, [X31 + 0x40]
	0x03A23958 STP X20, X19, [X31 + 0x50]
	0x03A2395C ADRP X19, 0x9BF000
	0x03A23960 ADRP X20, 0x6F9000
	0x03A23964 LDRB W8, [X19 + 0x16]
	0x03A23968 LDR X20, [X20 + 0xD8]
	0x03A2396C MOV V8.16B, V7.16B
	0x03A23970 MOV V9.16B, V6.16B
	0x03A23974 MOV V15.16B, V5.16B
	0x03A23978 MOV V14.16B, V4.16B
	0x03A2397C MOV V10.16B, V3.16B
	0x03A23980 MOV V12.16B, V2.16B
	0x03A23984 MOV V11.16B, V1.16B
	0x03A23988 MOV V13.16B, V0.16B
	0x03A2398C TBNZ X8, 0x0, 0x3A239A4
	0x03A23990 ADRP X0, 0x6F9000
	0x03A23994 LDR X0, [X0 + 0xD8]
	0x03A23998 BL 0x1C16CF4
	0x03A2399C MOVZ W8, 0x1
	0x03A239A0 STRB W8, [X19 + 0x16]
	0x03A239A4 LDR X0, [X20]
	0x03A239A8 LDR W8, [X0 + 0xE0]
	0x03A239AC CBNZ W8, 0x3A239B4
	0x03A239B0 BL 0x1C16DFC
	0x03A239B4 FSUB S0, S13, S14
	0x03A239B8 FSUB S1, S10, S15
	0x03A239BC FSUB S2, S12, S14
	0x03A239C0 FSUB S3, S11, S15
	0x03A239C4 FSUB S4, S13, S9
	0x03A239C8 FSUB S5, S15, S8
	0x03A239CC FSUB S6, S14, S9
	0x03A239D0 FSUB S17, S11, S8
	0x03A239D4 FMUL S0, S0, S1
	0x03A239D8 FMUL S1, S2, S3
	0x03A239DC FSUB S7, S13, S12
	0x03A239E0 FSUB S16, S9, S12
	0x03A239E4 FSUB S18, S8, S10
	0x03A239E8 FSUB S19, S11, S10
	0x03A239EC FMUL S2, S4, S5
	0x03A239F0 FMUL S3, S6, S17
	0x03A239F4 FSUB S0, S0, S1
	0x03A239F8 FMUL S4, S7, S18
	0x03A239FC FMUL S5, S19, S16
	0x03A23A00 FSUB S1, S2, S3
	0x03A23A04 FCMP S0, 0x0
	0x03A23A08 FSUB S2, S4, S5
	0x03A23A0C CSET W8, MI
	0x03A23A10 CSET W9, GT
	0x03A23A14 FCMP S1, 0x0
	0x03A23A18 CSET W10, MI
	0x03A23A1C CSET W11, GT
	0x03A23A20 FCMP S2, 0x0
	0x03A23A24 ORR W8, W8, W10, 0x0
	0x03A23A28 CSET W10, MI
	0x03A23A2C ORR W9, W11, W9, 0x0
	0x03A23A30 CSET W11, GT
	0x03A23A34 LDP X20, X19, [X31 + 0x50]
	0x03A23A38 LDR X30, [X31 + 0x40]
	0x03A23A3C LDP D9, D8, [X31 + 0x30]
	0x03A23A40 LDP D11, D10, [X31 + 0x20]
	0x03A23A44 LDP D13, D12, [X31 + 0x10]
	0x03A23A48 ORR W8, W8, W10, 0x0
	0x03A23A4C ORR W9, W11, W9, 0x0
	0x03A23A50 AND W8, W8, W9, 0x0
	0x03A23A54 EOR W0, W8, 0x1
	0x03A23A58 LDP D15, D14, [X31], #0x60
	0x03A23A5C RET
	0x03A23A60 STP D15, D14, [X31 - 0x60]!
	0x03A23A64 STP D13, D12, [X31 + 0x10]
	0x03A23A68 STP D11, D10, [X31 + 0x20]
	0x03A23A6C STP D9, D8, [X31 + 0x30]
	0x03A23A70 STR X30, [X31 + 0x40]
	0x03A23A74 STP X20, X19, [X31 + 0x50]
	0x03A23A78 ADRP X19, 0x9BF000
	0x03A23A7C ADRP X20, 0x6F9000
	0x03A23A80 LDRB W8, [X19 + 0x17]
	0x03A23A84 LDR X20, [X20 + 0xD8]
	0x03A23A88 MOV V8.16B, V7.16B
	0x03A23A8C MOV V10.16B, V6.16B
	0x03A23A90 MOV V9.16B, V5.16B
	0x03A23A94 MOV V14.16B, V4.16B
	0x03A23A98 MOV V11.16B, V3.16B
	0x03A23A9C MOV V15.16B, V2.16B
	0x03A23AA0 MOV V12.16B, V1.16B
	0x03A23AA4 MOV V13.16B, V0.16B
	0x03A23AA8 TBNZ X8, 0x0, 0x3A23AC0
	0x03A23AAC ADRP X0, 0x6F9000
	0x03A23AB0 LDR X0, [X0 + 0xD8]
	0x03A23AB4 BL 0x1C16CF4
	0x03A23AB8 MOVZ W8, 0x1
	0x03A23ABC STRB W8, [X19 + 0x17]
	0x03A23AC0 LDR X0, [X20]
	0x03A23AC4 LDR W8, [X0 + 0xE0]
	0x03A23AC8 CBNZ W8, 0x3A23AD0
	0x03A23ACC BL 0x1C16DFC
	0x03A23AD0 FSUB S0, S15, S14
	0x03A23AD4 FSUB S1, S11, S9
	0x03A23AD8 FSUB S2, S15, S10
	0x03A23ADC FSUB S3, S11, S8
	0x03A23AE0 FSUB S4, S13, S15
	0x03A23AE4 FSUB S5, S13, S14
	0x03A23AE8 FSUB S6, S13, S10
	0x03A23AEC FSUB S16, S12, S11
	0x03A23AF0 FSUB S17, S12, S9
	0x03A23AF4 FSUB S18, S12, S8
	0x03A23AF8 FMUL S0, S0, S3
	0x03A23AFC FMUL S1, S1, S2
	0x03A23B00 FMUL S2, S4, S17
	0x03A23B04 FMUL S3, S16, S5
	0x03A23B08 FMUL S5, S5, S18
	0x03A23B0C FMUL S17, S17, S6
	0x03A23B10 FMOV S7, 0.5
	0x03A23B14 FMUL S6, S16, S6
	0x03A23B18 FMUL S4, S4, S18
	0x03A23B1C FABD S0, S0, S0
	0x03A23B20 FABD S1, S2, S2
	0x03A23B24 FABD S2, S5, S5
	0x03A23B28 FABD S3, S6, S6
	0x03A23B2C FMUL S1, S1, S7
	0x03A23B30 FMUL S2, S2, S7
	0x03A23B34 FMUL S3, S3, S7
	0x03A23B38 FADD S1, S1, S2
	0x03A23B3C FMUL S0, S0, S7
	0x03A23B40 FADD S1, S3, S1
	0x03A23B44 MOVZ W8, 0x25000000
	0x03A23B48 LDP X20, X19, [X31 + 0x50]
	0x03A23B4C LDR X30, [X31 + 0x40]
	0x03A23B50 LDP D9, D8, [X31 + 0x30]
	0x03A23B54 LDP D11, D10, [X31 + 0x20]
	0x03A23B58 LDP D13, D12, [X31 + 0x10]
	0x03A23B5C FABD S0, S0, S0
	0x03A23B60 FMOV S1, W8
	0x03A23B64 FCMP S0, S1
	0x03A23B68 CSET W0, MI
	0x03A23B6C LDP D15, D14, [X31], #0x60
	0x03A23B70 RET
	0x03A23B74 SUB X31, X31, 0x60
	0x03A23B78 STP D9, D8, [X31 + 0x30]
	0x03A23B7C STR X30, [X31 + 0x40]
	0x03A23B80 STP X20, X19, [X31 + 0x50]
	0x03A23B84 FMUL S22, S0, S0
	0x03A23B88 FMUL S21, S1, S1
	0x03A23B8C FMUL S20, S2, S2
	0x03A23B90 FMUL S16, S3, S3
	0x03A23B94 MOV V19.16B, V5.16B
	0x03A23B98 FADD S22, S22, S21
	0x03A23B9C MOV V21.16B, V3.16B
	0x03A23BA0 FADD S20, S20, S16
	0x03A23BA4 MOV V16.16B, V1.16B
	0x03A23BA8 MOV V19.S[1], V4.S[0]
	0x03A23BAC MOV V21.S[1], V2.S[0]
	0x03A23BB0 MOV V16.S[1], V0.S[0]
	0x03A23BB4 FMUL S17, S4, S4
	0x03A23BB8 FMUL S18, S5, S5
	0x03A23BBC ADRP X19, 0x9BE000
	0x03A23BC0 MOV V0.S[1], V1.S[0]
	0x03A23BC4 MOV V2.S[1], V3.S[0]
	0x03A23BC8 FSUB V1.2S, V19.2S, V21.2S
	0x03A23BCC FSUB V3.2S, V16.2S, V19.2S
	0x03A23BD0 FADD S17, S17, S18
	0x03A23BD4 MOV V4.S[1], V5.S[0]
	0x03A23BD8 LDRB W8, [X19 + 0x585]
	0x03A23BDC FSUB V5.2S, V21.2S, V16.2S
	0x00000000 INVALID
	0x00000000 INVALID
	0x00000000 INVALID
	0x00000000 INVALID
	0x00000000 INVALID
	0x00000000 INVALID
	0x03A23BF8 FADD V4.2S, V19.2S, V18.2S
	0x03A23BFC FADD V1.2S, V1.2S, V2.2S
	0x03A23C00 FADD V2.2S, V4.2S, V16.2S
	0x03A23C04 FADD V1.2S, V3.2S, V1.2S
	0x00000000 INVALID
	0x03A23C0C MOVI V9.2S, 0x3F, 0x18
	0x03A23C10 CBNZ W8, 0x3A23C38
	0x03A23C14 ADRP X0, 0x6D0000
	0x03A23C18 LDR X0, [X0 + 0x5A8]
	0x03A23C1C STP V6, V7, [X31 + 0x10]
	0x03A23C20 STR V0, [X31]
	0x03A23C24 BL 0x1C16CF4
	0x03A23C28 LDP V0, V6, [X31]
	0x03A23C2C LDR V7, [X31 + 0x2]
	0x03A23C30 MOVZ W8, 0x1
	0x03A23C34 STRB W8, [X19 + 0x585]
	0x03A23C38 ADRP X20, 0x6D0000
	0x03A23C3C LDR X20, [X20 + 0x5A8]
	0x00000000 INVALID
	0x03A23C44 LDR X0, [X20]
	0x03A23C48 LDR W8, [X0 + 0xE0]
	0x03A23C4C CBNZ W8, 0x3A23C88
	0x03A23C50 STP V6, V7, [X31 + 0x10]
	0x03A23C54 STR V0, [X31]
	0x03A23C58 BL 0x1C16DFC
	0x03A23C5C LDP V0, V6, [X31]
	0x03A23C60 LDR V7, [X31 + 0x2]
	0x03A23C64 LDRB W8, [X19 + 0x585]
	0x03A23C68 CBNZ W8, 0x3A23C88
	0x03A23C6C ADRP X0, 0x6D0000
	0x03A23C70 LDR X0, [X0 + 0x5A8]
	0x03A23C74 BL 0x1C16CF4
	0x03A23C78 LDP V0, V6, [X31]
	0x03A23C7C LDR V7, [X31 + 0x2]
	0x03A23C80 MOVZ W8, 0x1
	0x03A23C84 STRB W8, [X19 + 0x585]
	0x03A23C88 LDR X0, [X20]
	0x03A23C8C MOV V6.S[1], V7.S[0]
	0x03A23C90 FSUB V9.2S, V8.2S, V0.2S
	0x03A23C94 FSUB V8.2S, V8.2S, V6.2S
	0x03A23C98 LDR W8, [X0 + 0xE0]
	0x03A23C9C CBNZ W8, 0x3A23CA4
	0x03A23CA0 BL 0x1C16DFC
	0x03A23CA4 ADRP X8, 0xFFFFFFFFFD0C7000
	0x00000000 INVALID
	0x00000000 INVALID
	0x03A23CB0 LDR V2, [X8 + 0x17C]
	0x03A23CB4 FADDP S0, V0.2S
	0x03A23CB8 FADDP S1, V1.2S
	0x03A23CBC FSQRT S0, S0
	0x03A23CC0 FSQRT S1, S1
	0x03A23CC4 LDP X20, X19, [X31 + 0x50]
	0x03A23CC8 LDR X30, [X31 + 0x40]
	0x03A23CCC LDP D9, D8, [X31 + 0x30]
	0x03A23CD0 FSUB S0, S0, S1
	0x03A23CD4 FCMP S0, S2
	0x03A23CD8 CSET W0, GT
	0x03A23CDC ADD X31, X31, 0x60
	0x03A23CE0 RET
	0x03A23CE4 SUB X31, X31, 0x100
	0x03A23CE8 STR D14, [X31 + 0x60]
	0x03A23CEC STP D13, D12, [X31 + 0x70]
	0x03A23CF0 STP D11, D10, [X31 + 0x80]
	0x03A23CF4 STP D9, D8, [X31 + 0x90]
	0x03A23CF8 STP X29, X30, [X31 + 0xA0]
	0x03A23CFC STP X28, X27, [X31 + 0xB0]
	0x03A23D00 STP X26, X25, [X31 + 0xC0]
	0x03A23D04 STP X24, X23, [X31 + 0xD0]
	0x03A23D08 STP X22, X21, [X31 + 0xE0]
	0x03A23D0C STP X20, X19, [X31 + 0xF0]
	0x03A23D10 ADRP X20, 0x9BF000
	0x03A23D14 LDRB W8, [X20 + 0x18]
	0x03A23D18 LDR X24, [X31 + 0x108]
	0x03A23D1C MOV X19, X7
	0x03A23D20 MOV W21, W5
	0x03A23D24 MOV X22, X3
	0x03A23D28 MOV X23, X0
	0x03A23D2C STR X6, [X31 + 0x68]
	0x03A23D30 TBNZ X8, 0x0, 0x3A23D48
	0x03A23D34 ADRP X0, 0x6F9000
	0x03A23D38 LDR X0, [X0 + 0xD8]
	0x03A23D3C BL 0x1C16CF4
	0x03A23D40 MOVZ W8, 0x1
	0x03A23D44 STRB W8, [X20 + 0x18]
	0x03A23D48 CMP W21, 0x1
	0x03A23D4C B.LT 0x3A23EA0
	0x03A23D50 LDR X26, [X31 + 0x110]
	0x03A23D54 LDR X27, [X31 + 0x100]
	0x03A23D58 ADD X8, X31, 0x8
	0x03A23D5C MOV W25, W31
	0x03A23D60 ADD X29, X8, 0x18
	0x03A23D64 ADD X28, X8, 0x28
	0x03A23D68 FMOV S8, 0.5
	0x03A23D6C MOVZ W20, 0x7F800000
	0x03A23D70 STR W31, [X31 + 0x58]
	0x03A23D74 STR X31, [X31 + 0x50]
	0x03A23D78 LDRSW X9, [X22, W25, SXTW]
	0x03A23D7C ADD W8, W25, 0x1
	0x03A23D80 ADD W10, W25, 0x2
	0x03A23D84 LDRSW X8, [X22, W8, SXTW]
	0x03A23D88 ADD X9, X23, X9, 0x3, LSL
	0x03A23D8C LDP S9, S10, [X9]
	0x03A23D90 ADRP X9, 0x6F9000
	0x03A23D94 LDRSW X10, [X22, W10, SXTW]
	0x03A23D98 LDR X9, [X9 + 0xD8]
	0x03A23D9C ADD X8, X23, X8, 0x3, LSL
	0x03A23DA0 LDP S14, S13, [X8]
	0x03A23DA4 LDR X0, [X9]
	0x03A23DA8 ADD X9, X23, X10, 0x3, LSL
	0x03A23DAC LDP S12, S11, [X9]
	0x03A23DB0 STR W31, [X31 + 0x48]
	0x03A23DB4 STR X31, [X31 + 0x40]
	0x03A23DB8 LDR W8, [X0 + 0xE0]
	0x03A23DBC CBNZ W8, 0x3A23DC4
	0x03A23DC0 BL 0x1C16DFC
	0x03A23DC4 LDR W8, [X31 + 0x48]
	0x03A23DC8 LDR X9, [X31 + 0x40]
	0x03A23DCC ADD X0, X31, 0x8
	0x03A23DD0 STP S9, S10, [X31 + 0x8]
	0x03A23DD4 STP S14, S13, [X31 + 0x10]
	0x03A23DD8 STP S12, S11, [X31 + 0x18]
	0x03A23DDC STP X31, X31, [X29]
	0x03A23DE0 STR W8, [X28 + 0x8]
	0x03A23DE4 STR X9, [X28]
	0x03A23DE8 BL 0x3A23774
	0x03A23DEC LDR V6, [X27]
	0x03A23DF0 FSUB S3, S9, S14
	0x03A23DF4 FSUB S5, S10, S11
	0x03A23DF8 FSUB S4, S10, S13
	0x03A23DFC FMUL S3, S3, S5
	0x03A23E00 FSUB S5, S9, S12
	0x03A23E04 FMUL S4, S4, S5
	0x03A23E08 FMOV W8, S6
	0x03A23E0C FABD S3, S3, S3
	0x03A23E10 AND W8, W8, 0x7FFFFFFF
	0x03A23E14 FMUL S3, S3, S8
	0x03A23E18 CMP W8, W20
	0x03A23E1C FCCMP S3, S6, 0x0, LS
	0x03A23E20 FCSEL S4, S3, S6, GT
	0x03A23E24 STR S4, [X27]
	0x03A23E28 LDR V4, [X26]
	0x03A23E2C MOVZ W10, 0x34
	0x03A23E30 ADD W25, W25, 0x3
	0x03A23E34 FMOV W8, S4
	0x03A23E38 AND W8, W8, 0x7FFFFFFF
	0x03A23E3C CMP W8, W20
	0x03A23E40 FCCMP S3, S4, 0x8, LS
	0x03A23E44 FCSEL S4, S3, S4, MI
	0x03A23E48 STR S4, [X26]
	0x03A23E4C LDR V4, [X24]
	0x03A23E50 CMP W25, W21
	0x03A23E54 FADD S4, S3, S4
	0x03A23E58 STR S4, [X24]
	0x03A23E5C LDRSW X8, [X19]
	0x03A23E60 ADD W9, W8, 0x1
	0x03A23E64 STR W9, [X19]
	0x03A23E68 LDR X9, [X31 + 0x68]
	0x03A23E6C LDR X9, [X9]
	0x03A23E70 NOP
	0x03A23E74 MADD X8, X8, X10, X9
	0x03A23E78 STP S9, S10, [X8]
	0x03A23E7C STP S14, S13, [X8 + 0x8]
	0x03A23E80 STP S12, S11, [X8 + 0x10]
	0x03A23E84 STP S0, S1, [X8 + 0x18]
	0x03A23E88 STP S2, S3, [X8 + 0x20]
	0x03A23E8C LDR X9, [X31 + 0x50]
	0x03A23E90 LDR W10, [X31 + 0x58]
	0x03A23E94 STR X9, [X8 + 0x28]
	0x03A23E98 STR W10, [X8 + 0x30]
	0x03A23E9C B.LT 0x3A23D70
	0x03A23EA0 LDR V0, [X19]
	0x03A23EA4 LDR V1, [X24]
	0x03A23EA8 LDP X20, X19, [X31 + 0xF0]
	0x03A23EAC LDP X22, X21, [X31 + 0xE0]
	0x03A23EB0 SCVTF S0, S0
	0x03A23EB4 FDIV S0, S1, S0
	0x03A23EB8 STR S0, [X24]
	0x03A23EBC LDP X24, X23, [X31 + 0xD0]
	0x03A23EC0 LDP X26, X25, [X31 + 0xC0]
	0x03A23EC4 LDP X28, X27, [X31 + 0xB0]
	0x03A23EC8 LDP X29, X30, [X31 + 0xA0]
	0x03A23ECC LDP D9, D8, [X31 + 0x90]
	0x03A23ED0 LDP D11, D10, [X31 + 0x80]
	0x03A23ED4 LDP D13, D12, [X31 + 0x70]
	0x03A23ED8 LDR V14, [X31 + 0x60]
	0x03A23EDC ADD X31, X31, 0x100
	0x03A23EE0 RET
	0x03A23EE4 SUB X31, X31, 0x140
	0x03A23EE8 STP D15, D14, [X31 + 0xA0]
	0x03A23EEC STP D13, D12, [X31 + 0xB0]
	0x03A23EF0 STP D11, D10, [X31 + 0xC0]
	0x03A23EF4 STP D9, D8, [X31 + 0xD0]
	0x03A23EF8 STP X29, X30, [X31 + 0xE0]
	0x03A23EFC STP X28, X27, [X31 + 0xF0]
	0x03A23F00 STP X26, X25, [X31 + 0x100]
	0x03A23F04 STP X24, X23, [X31 + 0x110]
	0x03A23F08 STP X22, X21, [X31 + 0x120]
	0x03A23F0C STP X20, X19, [X31 + 0x130]
	0x03A23F10 LDR X8, [X31 + 0x160]
	0x03A23F14 ADRP X19, 0x9BF000
	0x03A23F18 LDR X9, [X31 + 0x148]
	0x03A23F1C MOV X22, X3
	0x03A23F20 STP X7, X8, [X31 + 0x18]
	0x03A23F24 LDRB W8, [X19 + 0x19]
	0x03A23F28 MOV X23, X0
	0x03A23F2C STR W5, [X31 + 0x2C]
	0x03A23F30 STP X6, X9, [X31 + 0x8]
	0x03A23F34 TBNZ X8, 0x0, 0x3A23F4C
	0x03A23F38 ADRP X0, 0x6F9000
	0x03A23F3C LDR X0, [X0 + 0xD8]
	0x03A23F40 BL 0x1C16CF4
	0x03A23F44 MOVZ W8, 0x1
	0x03A23F48 STRB W8, [X19 + 0x19]
	0x03A23F4C LDR W8, [X31 + 0x2C]
	0x03A23F50 CMP W8, 0x1
	0x03A23F54 B.LT 0x3A2427C
	0x03A23F58 ADRP X24, 0x6D0000
	0x03A23F5C LDR X28, [X31 + 0x168]
	0x03A23F60 LDP X21, X29, [X31 + 0x150]
	0x03A23F64 LDR X19, [X31 + 0x140]
	0x03A23F68 LDR X24, [X24 + 0x5A8]
	0x03A23F6C ADD X8, X31, 0x48
	0x03A23F70 MOV W27, W31
	0x03A23F74 MOVZ W20, 0x7F800000
	0x03A23F78 ADD X25, X8, 0x18
	0x03A23F7C ADD X26, X8, 0x28
	0x03A23F80 STR W31, [X31 + 0x98]
	0x03A23F84 STR X31, [X31 + 0x90]
	0x03A23F88 LDRSW X9, [X22, W27, SXTW]
	0x03A23F8C ADD W8, W27, 0x1
	0x03A23F90 ADD W10, W27, 0x2
	0x03A23F94 LDRSW X8, [X22, W8, SXTW]
	0x03A23F98 ADD X9, X23, X9, 0x3, LSL
	0x03A23F9C LDP S12, S13, [X9]
	0x03A23FA0 ADRP X9, 0x6F9000
	0x03A23FA4 LDRSW X10, [X22, W10, SXTW]
	0x03A23FA8 LDR X9, [X9 + 0xD8]
	0x03A23FAC ADD X8, X23, X8, 0x3, LSL
	0x03A23FB0 LDP S8, S11, [X8]
	0x03A23FB4 LDR X0, [X9]
	0x03A23FB8 ADD X9, X23, X10, 0x3, LSL
	0x03A23FBC LDP S15, S10, [X9]
	0x03A23FC0 STR W31, [X31 + 0x88]
	0x03A23FC4 STR X31, [X31 + 0x80]
	0x03A23FC8 LDR W8, [X0 + 0xE0]
	0x03A23FCC CBNZ W8, 0x3A23FD4
	0x03A23FD0 BL 0x1C16DFC
	0x03A23FD4 LDR W8, [X31 + 0x88]
	0x03A23FD8 LDR X9, [X31 + 0x80]
	0x03A23FDC ADD X0, X31, 0x48
	0x03A23FE0 STP S12, S13, [X31 + 0x48]
	0x03A23FE4 STP S8, S11, [X31 + 0x50]
	0x03A23FE8 STP S15, S10, [X31 + 0x58]
	0x03A23FEC STP X31, X31, [X25]
	0x03A23FF0 STR W8, [X26 + 0x8]
	0x03A23FF4 STR X9, [X26]
	0x03A23FF8 BL 0x3A23774
	0x03A23FFC LDR V3, [X19]
	0x03A24000 MOV V14.16B, V0.16B
	0x03A24004 STR S1, [X31 + 0x40]
	0x03A24008 FSUB S0, S12, S8
	0x03A2400C FSUB S1, S13, S11
	0x03A24010 FSUB S4, S12, S15
	0x03A24014 FSUB S5, S13, S10
	0x03A24018 FMUL S0, S0, S5
	0x03A2401C FMUL S1, S1, S4
	0x03A24020 FMOV W8, S3
	0x03A24024 FABD S0, S0, S0
	0x03A24028 FMOV S1, 0.5
	0x03A2402C AND W8, W8, 0x7FFFFFFF

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Subtract X31, X31, 784
	014 Move X21, 0x9C0000
	015 Move W8, [X21+9]
	016 Move X20, X2
	017 Move X19, X0
	018 Move [X31+776], X1
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {79}
	023 Move X0, 0x732000
	024 Move X0, [X0+2368]
	025 Call 0x1C17CF4
	026 Move X0, 0x732000
	027 Move X0, [X0+2376]
	028 Call 0x1C17CF4
	029 Move X0, 0x731000
	030 Move X0, [X0+4072]
	031 Call 0x1C17CF4
	032 Move X0, 0x732000
	033 Move X0, [X0+2384]
	034 Call 0x1C17CF4
	035 Move X0, 0x6D1000
	036 Move X0, [X0+1432]
	037 Call 0x1C17CF4
	038 Move X0, 0x732000
	039 Move X0, [X0+2392]
	040 Call 0x1C17CF4
	041 Move X0, 0x732000
	042 Move X0, [X0+2400]
	043 Call 0x1C17CF4
	044 Move X0, 0x732000
	045 Move X0, [X0+2336]
	046 Call 0x1C17CF4
	047 Move X0, 0x732000
	048 Move X0, [X0+16]
	049 Call 0x1C17CF4
	050 Move X0, 0x72E000
	051 Move X0, [X0+3200]
	052 Call 0x1C17CF4
	053 Move X0, 0x732000
	054 Move X0, [X0+2248]
	055 Call 0x1C17CF4
	056 Move X0, 0x732000
	057 Move X0, [X0+2408]
	058 Call 0x1C17CF4
	059 Move X0, 0x732000
	060 Move X0, [X0+2416]
	061 Call 0x1C17CF4
	062 Move X0, 0x732000
	063 Move X0, [X0+2424]
	064 Call 0x1C17CF4
	065 Move X0, 0x732000
	066 Move X0, [X0+2352]
	067 Call 0x1C17CF4
	068 Move X0, 0x732000
	069 Move X0, [X0+2432]
	070 Call 0x1C17CF4
	071 Move X0, 0x732000
	072 Move X0, [X0+2440]
	073 Call 0x1C17CF4
	074 Move X0, 0x732000
	075 Move X0, [X0+2448]
	076 Call 0x1C17CF4
	077 Move W8, 1
	078 Move [X21+9], W8
	079 NotImplemented "Instruction MOVI not yet implemented."
	080 Move [X31+768], X31
	081 NotImplemented "Instruction STRH not yet implemented."
	082 Move [X31+752], X31
	083 Move [X31+744], X31
	084 Move [X31+736], X31
	085 Move [X31+720], W31
	086 Move [X31+656], W31
	087 Move [X31+600], W31
	088 Move [X31+592], W31
	089 Move [X31+540], W31
	090 Move [X31+528], X31
	091 Move [X31+512], W31
	092 Move [X31+688], V0
	093 Move [X31+696], V0
	094 Move [X31+42], V0
	095 Move [X31+624], V0
	096 Move [X31+632], V0
	097 Move [X31+38], V0
	098 Move [X31+560], V0
	099 Move [X31+568], V0
	100 Move [X31+34], V0
	101 Move [X31+480], V0
	102 Move [X31+488], V0
	103 Move [X31+29], V0
	104 Move W8, [X20+692]
	105 Compare W8, 0
	106 JumpIfEqual {111}
	107 Add X0, X19, 544
	108 Move X1, X31
	109 Call PostProcessPasses.get_isCreated, X0
	110 And W23, W0, 1
	111 Move W23, W31
	112 Move W8, [X20+416]
	113 Add X22, X20, 24
	114 Compare W8, 0
	115 JumpIfEqual {120}
	116 Add X0, X19, 544
	117 Move X1, X31
	118 Call PostProcessPasses.get_isCreated, X0
	119 And W24, W0, 1
	120 Move W24, W31
	121 Add X8, X20, 240
	122 Move [X31+32], X8
	123 Move W8, [X20+472]
	124 Move [X31+768], X31
	125 Move X0, [X19+224]
	126 NotImplemented "Instruction CMP not yet implemented."
	127 Move [X31+44], W8
	128 NotImplemented "Instruction CSET not yet implemented."
	129 NotImplemented "Instruction CMP not yet implemented."
	130 NotImplemented "Instruction CSET not yet implemented."
	131 Compare X0, 0
	132 JumpIfEqual {293}
	133 Move X1, X31
	134 Call DebugHandler.get_AreAnySettingsActive, X0
	135 Move TEMP, X0
	136 And TEMP, TEMP, 1
	137 Compare TEMP, 1
	138 JumpIfNotEqual {155}
	139 Compare W23, 0
	140 JumpIfEqual {147}
	141 Move X0, [X19+224]
	142 Compare X0, 0
	143 JumpIfEqual {992}
	144 Move X1, X31
	145 Call DebugHandler.get_IsPostProcessingAllowed, X0
	146 And W23, W0, 1
	147 Compare W24, 0
	148 JumpIfEqual {155}
	149 Move X0, [X19+224]
	150 Compare X0, 0
	151 JumpIfEqual {992}
	152 Move X1, X31
	153 Call DebugHandler.get_IsPostProcessingAllowed, X0
	154 And W24, W0, 1
	155 Move X0, [X19+224]
	156 Compare X0, 0
	157 JumpIfEqual {992}
	158 Move X1, X22
	159 Move X2, X31
	160 Call DebugHandler.IsActiveForCamera, X0, X1
	161 NotImplemented "Instruction CMP not yet implemented."
	162 NotImplemented "Instruction CSET not yet implemented."
	163 NotImplemented "Instruction CMP not yet implemented."
	164 NotImplemented "Instruction CSET not yet implemented."
	165 Move [X31+40], W8
	166 Move TEMP, X0
	167 And TEMP, TEMP, 1
	168 Compare TEMP, 1
	169 JumpIfNotEqual {294}
	170 Move X0, [X19+224]
	171 Compare X0, 0
	172 JumpIfEqual {992}
	173 Move X1, X22
	174 Move X2, X31
	175 Call DebugHandler.WriteToDebugScreenTexture, X0, X1
	176 Move TEMP, X0
	177 And TEMP, TEMP, 1
	178 Compare TEMP, 1
	179 JumpIfNotEqual {260}
	180 Move X9, [X31+32]
	181 Move V0, [X9]
	182 Move V1, [X9+16]
	183 Move W8, [X9+48]
	184 Move V2, [X9+2]
	185 Move X9, 0x732000
	186 Move X9, [X9+2376]
	187 Move [X31+720], W8
	188 Move [X31+688], V1
	189 Move [X31+696], V2
	190 Move [X31+42], V0
	191 Move X0, [X9]
	192 Move W23, [X20+344]
	193 Move W24, [X20+348]
	194 Move W8, [X0+224]
	195 Compare W8, 0
	196 JumpIfNotEqual {198}
	197 Call 0x1C17DFC
	198 Add X0, X31, 672
	199 Move W1, W23
	200 Move W2, W24
	201 Move X3, X31
	202 Call DebugHandler.ConfigureColorDescriptorForDebugScreen, X0, X1, X2
	203 Move X0, [X19+224]
	204 Compare X0, 0
	205 JumpIfEqual {992}
	206 Move X1, X31
	207 Call DebugHandler.get_DebugScreenColorHandle, X0
	208 Move X8, 0x732000
	209 Move X8, [X8+16]
	210 Move X23, X0
	211 Move X8, [X8]
	212 Move W9, [X8+224]
	213 Compare W9, 0
	214 JumpIfNotEqual {217}
	215 Move X0, X8
	216 Call 0x1C17DFC
	217 Move X8, 0x732000
	218 Move X8, [X8+2448]
	219 Add X1, X31, 672
	220 Move S0, W31
	221 Move W5, 1
	222 Move X6, [X8]
	223 Move X0, X23
	224 Move W2, W31
	225 Move W3, W31
	226 Move W4, W31
	227 Move X7, X31
	228 Call RenderingUtils.ReAllocateIfNeeded, X0, X1, X2, X3, X4, X5, V0, X6
	229 Move X9, [X31+32]
	230 Add X0, X31, 608
	231 Move W1, 32
	232 Move X4, X31
	233 Move W8, [X9+48]
	234 Move V2, [X9+16]
	235 Move V0, [X9+32]
	236 Move V1, [X9]
	237 Move [X31+656], W8
	238 Move [X31+624], V2
	239 Move [X31+632], V0
	240 Move [X31+38], V1
	241 Move W2, [X20+344]
	242 Move W3, [X20+348]
	243 Call DebugHandler.ConfigureDepthDescriptorForDebugScreen, X0, X1, X2, X3
	244 Move X0, [X19+224]
	245 Compare X0, 0
	246 JumpIfEqual {992}
	247 Move X1, X31
	248 Call DebugHandler.get_DebugScreenDepthHandle, X0
	249 Move X8, 0x732000
	250 Move X8, [X8+2432]
	251 Add X1, X31, 608
	252 Move S0, W31
	253 Move W5, 1
	254 Move X6, [X8]
	255 Move W2, W31
	256 Move W3, W31
	257 Move W4, W31
	258 Move X7, X31
	259 Call RenderingUtils.ReAllocateIfNeeded, X0, X1, X2, X3, X4, X5, V0, X6
	260 Move X0, [X19+224]
	261 Compare X0, 0
	262 JumpIfEqual {992}
	263 Move X1, X22
	264 Move X2, X31
	265 Call DebugHandler.HDRDebugViewIsActive, X0, X1
	266 Move TEMP, X0
	267 And TEMP, TEMP, 1
	268 Compare TEMP, 1
	269 JumpIfNotEqual {294}
	270 Move X8, [X19+224]
	271 Compare X8, 0
	272 JumpIfEqual {992}
	273 Move X9, [X8+120]
	274 Compare X9, 0
	275 JumpIfEqual {992}
	276 Move X9, [X9+48]
	277 Compare X9, 0
	278 JumpIfEqual {992}
	279 Move X0, [X8+32]
	280 Compare X0, 0
	281 JumpIfEqual {992}
	282 Move W2, [X9+24]
	283 Move X1, X22
	284 Move X3, X31
	285 Call HDRDebugViewPass.Setup, X0, X1, X2
	286 Move X8, [X19+224]
	287 Compare X8, 0
	288 JumpIfEqual {992}
	289 Move X1, [X8+32]
	290 Move X0, X19
	291 Move X2, X31
	292 Call ScriptableRenderer.EnqueuePass, X0, X1
	293 Move [X31+40], W8
	294 Move W8, [X20+224]
	295 Move W9, [X31+44]
	296 NotImplemented "Instruction CMP not yet implemented."
	297 NotImplemented "Instruction CSET not yet implemented."
	298 And W31, W8, W9
	299 Move X0, [X20+216]
	300 Compare X0, 0
	301 JumpIfEqual {992}
	302 Move X8, 0x732000
	303 Move X8, [X8+2368]
	304 Add X1, X31, 768
	305 Move X2, [X8]
	306 Call 0x21A5990, X0, X1
	307 Move X8, 0x6D1000
	308 Move X8, [X8+1432]
	309 Move X23, [X31+768]
	310 Move X0, [X8]
	311 Move W8, [X0+224]
	312 Compare W8, 0
	313 JumpIfNotEqual {315}
	314 Call 0x1C17DFC
	315 Move X0, X23
	316 Move X1, X31
	317 Move X2, X31
	318 Call Object.op_Inequality, X0, X1
	319 Move TEMP, X0
	320 And TEMP, TEMP, 1
	321 Compare TEMP, 1
	322 JumpIfNotEqual {359}
	323 Move X0, [X31+768]
	324 Compare X0, 0
	325 JumpIfEqual {992}
	326 Move X1, X31
	327 Call Behaviour.get_enabled, X0
	328 Move TEMP, X0
	329 And TEMP, TEMP, 1
	330 Compare TEMP, 1
	331 JumpIfNotEqual {359}
	332 Move X0, [X31+768]
	333 Compare X0, 0
	334 JumpIfEqual {992}
	335 Move X1, X31
	336 Call PixelPerfectCamera.get_offscreenRTSize, X0
	337 Move X21, 0x9C0000
	338 Move W8, [X21+18]
	339 Move X23, X0
	340 Compare W8, 0
	341 JumpIfNotEqual {347}
	342 Move X0, 0x6F9000
	343 Move X0, [X0+1584]
	344 Call 0x1C17CF4
	345 Move W8, 1
	346 Move [X21+18], W8
	347 Move X8, 0x6F9000
	348 Move X8, [X8+1584]
	349 Move X8, [X8]
	350 Move X8, [X8+184]
	351 Move W9, [X8]
	352 NotImplemented "Instruction CMP not yet implemented."
	353 Move W8, [X8+4]
	354 Move X9, X23
	355 ShiftRight X9, 32
	356 And X9, X9, 0x7FFFFFFF
	357 NotImplemented "Instruction CMP not yet implemented."
	358 Move W24, W31
	359 Move [X31+28], W31
	360 Move W24, W31
	361 Move W26, 1
	362 Move X21, 0x732000
	363 Move X21, [X21+2336]
	364 Move X0, X19
	365 Move X2, X22
	366 Call Renderer2D.GetRenderPassInputs, X0, X1, X2
	367 Move X8, [X21]
	368 Move X23, X0
	369 NotImplemented "Instruction STRH not yet implemented."
	370 Move X25, [X20]
	371 Move W9, [X8+224]
	372 Compare W9, 0
	373 JumpIfNotEqual {377}
	374 Move X0, X8
	375 Call 0x1C17DFC
	376 Move X8, [X21]
	377 Move X8, [X8+184]
	378 Add X0, X31, 600
	379 Move X1, X25
	380 Move X3, X31
	381 Move X2, [X8]
	382 Call ProfilingScope..ctor, X0, X1, X2
	383 Add X1, X31, 764
	384 Add X6, X31, 752
	385 Add X7, X31, 744
	386 Move X0, X19
	387 Move X2, X25
	388 Move X3, X22
	389 Move W4, W24
	390 Move W5, W26
	391 Call Renderer2D.CreateRenderTextures, X0, X1, X2, X3, X4, X5, X6, X7
	392 Add X0, X31, 600
	393 Move X1, X31
	394 Call ProfilingScope.Dispose, X0
	395 Move X8, 0x72E000
	396 Move X8, [X8+3200]
	397 Move X0, [X8]
	398 Move W8, [X0+224]
	399 Compare W8, 0
	400 JumpIfNotEqual {402}
	401 Call 0x1C17DFC
	402 Add X0, X31, 776
	403 Move X1, X25
	404 Move X2, X31
	405 Call ScriptableRenderContext.ExecuteCommandBuffer, X0, X1
	406 Compare X25, 0
	407 JumpIfEqual {992}
	408 Move X0, X25
	409 Move X1, X31
	410 Call CommandBuffer.Clear, X0
	411 Move X1, [X31+752]
	412 Move X2, [X31+744]
	413 Move X0, X19
	414 Move X3, X31
	415 Call ScriptableRenderer.ConfigureCameraTarget, X0, X1, X2
	416 Move W8, [X31+40]
	417 Move TEMP, X8
	418 And TEMP, TEMP, 1
	419 Compare TEMP, 1
	420 JumpIfNotEqual {462}
	421 Move X0, [X19+544]
	422 Compare X0, 0
	423 JumpIfEqual {992}
	424 Add X1, X20, 672
	425 Add X2, X31, 544
	426 Add X3, X31, 540
	427 Move X4, X31
	428 Call ColorGradingLutPass.ConfigureDescriptor, X0, X1, X2, X3
	429 Move X8, 0x732000
	430 Move X8, [X8+16]
	431 Move W24, [X31+540]
	432 Add X25, X19, 576
	433 Move X0, [X8]
	434 Move W8, [X0+224]
	435 Compare W8, 0
	436 JumpIfNotEqual {438}
	437 Call 0x1C17DFC
	438 Move X8, 0x732000
	439 Move X8, [X8+2440]
	440 Add X1, X31, 544
	441 Move S0, W31
	442 Move W3, 1
	443 Move X6, [X8]
	444 Move W5, 1
	445 Move X0, X25
	446 Move W2, W24
	447 Move W4, W31
	448 Move X7, X31
	449 Call RenderingUtils.ReAllocateIfNeeded, X0, X1, X2, X3, X4, X5, V0, X6
	450 Move X0, [X19+544]
	451 Move X8, [X19+576]
	452 Move [X31+528], X8
	453 Compare X0, 0
	454 JumpIfEqual {992}
	455 Add X1, X31, 528
	456 Move X2, X31
	457 Call ColorGradingLutPass.Setup, X0, X1
	458 Move X1, [X19+544]
	459 Move X0, X19
	460 Move X2, X31
	461 Call ScriptableRenderer.EnqueuePass, X0, X1
	462 Move X0, [X19+424]
	463 Move TEMP, X23
	464 And TEMP, TEMP, 1
	465 Compare TEMP, 1
	466 JumpIfEqual {468}
	467 Move W8, [X19+488]
	468 Move W8, 1
	469 Compare X0, 0
	470 JumpIfEqual {992}
	471 NotImplemented "Instruction CMP not yet implemented."
	472 NotImplemented "Instruction CSET not yet implemented."
	473 Move [X0+248], W8
	474 Move X2, [X31+744]
	475 Move X1, [X31+752]
	476 Move X3, X31
	477 Call ScriptableRenderPass.ConfigureTarget, X0, X1, X2
	478 Move X1, [X19+424]
	479 Move X0, X19
	480 Move X2, X31
	481 Call ScriptableRenderer.EnqueuePass, X0, X1
	482 Move X0, X22
	483 Move X1, X31
	484 Call CameraData.get_rendersOverlayUI, X0
	485 Move W23, W0
	486 Move X0, X22
	487 Move X1, X31
	488 Call CameraData.get_isHDROutputActive, X0
	489 Move W24, W0
	490 Move TEMP, X23
	491 And TEMP, TEMP, 1
	492 Compare TEMP, 1
	493 JumpIfNotEqual {509}
	494 Move TEMP, X24
	495 And TEMP, TEMP, 1
	496 Compare TEMP, 1
	497 JumpIfNotEqual {509}
	498 Move X0, [X19+456]
	499 Compare X0, 0
	500 JumpIfEqual {992}
	501 Move W2, 32
	502 Move X1, X22
	503 Move X3, X31
	504 Call DrawScreenSpaceUIPass.Setup, X0, X1, X2
	505 Move X1, [X19+456]
	506 Move X0, X19
	507 Move X2, X31
	508 Call ScriptableRenderer.EnqueuePass, X0, X1
	509 Move X8, 0x732000
	510 Move X8, [X8+2424]
	511 Move X25, [X19+256]
	512 Move X0, [X8]
	513 Move W8, [X31+44]
	514 Move W9, [X0+224]
	515 NotImplemented "Instruction CMP not yet implemented."
	516 Move W8, [X20+452]
	517 NotImplemented "Instruction CSET not yet implemented."
	518 NotImplemented "Instruction CMP not yet implemented."
	519 NotImplemented "Instruction CSET not yet implemented."
	520 Compare W9, 0
	521 JumpIfNotEqual {526}
	522 Call 0x1C17DFC
	523 Move X8, 0x732000
	524 Move X8, [X8+2424]
	525 Move X0, [X8]
	526 Move X8, [X0+184]
	527 Move X26, [X8+16]
	528 Compare X26, 0
	529 JumpIfNotEqual {564}
	530 Move W8, [X0+224]
	531 Move [X31+24], W23
	532 Move X23, X20
	533 Move X20, X22
	534 Compare W8, 0
	535 JumpIfEqual {539}
	536 Move X22, 0x732000
	537 Move X22, [X22+2424]
	538 Move W29, W27
	539 Move W29, W27
	540 Call 0x1C17DFC
	541 Move X22, 0x732000
	542 Move X22, [X22+2424]
	543 Move X0, [X22]
	544 Move X9, 0x732000
	545 Move X8, [X0+184]
	546 Move X9, [X9+2400]
	547 Move X27, [X8]
	548 Move X0, [X9]
	549 Call 0x1C17F10
	550 Move X8, 0x732000
	551 Move X8, [X8+2408]
	552 Move X1, X27
	553 Move X3, X31
	554 Move X26, X0
	555 Move X2, [X8]
	556 Call Predicate`1<Object>..ctor, X0, X1, X2
	557 Move X8, [X22]
	558 Move X22, X20
	559 Move X20, X23
	560 Move W23, [X31+24]
	561 Move X8, [X8+184]
	562 Move W27, W29
	563 Move [X8+16], X26
	564 Compare X25, 0
	565 JumpIfEqual {992}
	566 Move X8, 0x732000
	567 Move X8, [X8+2384]
	568 Xor W29, W24, 1
	569 Move X0, X25
	570 Move X1, X26
	571 Move X2, [X8]
	572 Move W8, [X31+28]
	573 NotImplemented "Instruction BIC not yet implemented."
	574 And W21, W28, W29
	575 And W27, W27, W8
	576 Call List`1<Object>.Find, X0, X1
	577 Move X8, [X19+224]
	578 Move X24, X0
	579 Compare X8, 0
	580 JumpIfEqual {587}
	581 Move X0, X8
	582 Move X1, X22
	583 Move X2, X31
	584 Call DebugHandler.HDRDebugViewIsActive, X0, X1
	585 NotImplemented "Instruction ORN not yet implemented."
	586 And W22, W8, 1
	587 Move W22, 1
	588 Move W8, [X31+40]
	589 And W25, W27, W21
	590 Compare W8, 0
	591 JumpIfEqual {714}
	592 Move X0, [X31+32]
	593 Move X1, X31
	594 Move W8, [X0+48]
	595 Move V1, [X0+16]
	596 Move V0, [X0+32]
	597 Move V2, [X0]
	598 Move [X31+384], W8
	599 Move [X31+352], V1
	600 Move [X31+360], V0
	601 Move [X31+21], V2
	602 Move W26, [X20+240]
	603 Move W27, [X20+244]
	604 Call RenderTextureDescriptor.get_graphicsFormat, X0
	605 Move X8, 0x732000
	606 Move X8, [X8+2392]
	607 Move W28, W0
	608 Move X8, [X8]
	609 Move W9, [X8+224]
	610 Compare W9, 0
	611 JumpIfNotEqual {614}
	612 Move X0, X8
	613 Call 0x1C17DFC
	614 Move W8, [X31+384]
	615 Move V0, [X31+336]
	616 Move V1, [X31+352]
	617 Move V2, [X31+23]
	618 Add X0, X31, 208
	619 Move [X31+256], W8
	620 Add X8, X31, 272
	621 Move W1, W26
	622 Move W2, W27
	623 Move W3, W28
	624 Move W4, W31
	625 Move X5, X31
	626 Move [X31+208], V0
	627 Move [X31+216], V1
	628 Move [X31+15], V2
	629 Call PostProcessPass.GetCompatibleDescriptor, X0, X1, X2, X3, X4
	630 Move X9, 0x732000
	631 Move V0, [X31+272]
	632 Move V1, [X31+288]
	633 Move V2, [X31+19]
	634 Move W8, [X31+320]
	635 Move X9, [X9+16]
	636 Move [X31+464], V0
	637 Move [X31+472], V1
	638 Move [X31+31], V2
	639 Move [X31+512], W8
	640 Move X0, [X9]
	641 Add X26, X19, 568
	642 Move W8, [X0+224]
	643 Compare W8, 0
	644 JumpIfNotEqual {646}
	645 Call 0x1C17DFC
	646 Move X8, 0x732000
	647 Move X8, [X8+2352]
	648 Add X1, X31, 464
	649 Move S0, W31
	650 Move W3, 1
	651 Move X6, [X8]
	652 Move W5, 1
	653 Move X0, X26
	654 Move W2, W31
	655 Move W4, W31
	656 Move X7, X31
	657 Call RenderingUtils.ReAllocateIfNeeded, X0, X1, X2, X3, X4, X5, V0, X6
	658 Move X26, [X19+568]
	659 Move X8, [X19+576]
	660 Move X27, [X19+552]
	661 Move [X31+528], X8
	662 Compare X26, 0
	663 JumpIfEqual {992}
	664 Move X21, 0x732000
	665 NotImplemented "Instruction LDUR not yet implemented."
	666 Move X8, [X26+72]
	667 NotImplemented "Instruction LDUR not yet implemented."
	668 Move X21, [X21+2248]
	669 Move [X31+304], X8
	670 Move [X31+272], V0
	671 Move [X31+280], V1
	672 Move X0, [X21]
	673 Move W8, [X0+224]
	674 Compare W8, 0
	675 JumpIfNotEqual {678}
	676 Call 0x1C17DFC
	677 Move X0, [X21]
	678 Move X8, [X0+184]
	679 Move X8, [X8+16]
	680 Compare X8, 0
	681 JumpIfEqual {992}
	682 NotImplemented "Instruction LDUR not yet implemented."
	683 NotImplemented "Instruction LDUR not yet implemented."
	684 Move X8, [X8+72]
	685 Move V2, [X31+272]
	686 Move V3, [X31+288]
	687 Move X9, [X31+304]
	688 Add X0, X31, 160
	689 Add X1, X31, 112
	690 Move X2, X31
	691 Move [X31+144], X8
	692 Move [X31+112], V0
	693 Move [X31+120], V1
	694 Move [X31+160], V2
	695 Move [X31+168], V3
	696 Move [X31+192], X9
	697 Call RenderTargetIdentifier.op_Equality, X0, X1
	698 Compare X27, 0
	699 JumpIfEqual {992}
	700 Move X1, [X31+32]
	701 And W7, W0, W22
	702 Add X2, X31, 752
	703 Add X4, X31, 744
	704 Add X5, X31, 528
	705 Move X0, X27
	706 Move X3, X26
	707 Move W6, W25
	708 Move [X31], X31
	709 Call PostProcessPass.Setup, X0, X1, X2, X3, X4, X5, X6, X7
	710 Move X1, [X19+552]
	711 Move X0, X19
	712 Move X2, X31
	713 Call ScriptableRenderer.EnqueuePass, X0, X1
	714 Move X9, 0x6D1000
	715 Move X8, [X31+752]
	716 Move X9, [X9+1432]
	717 Move X26, [X31+768]
	718 Move [X31+736], X8
	719 Move X0, [X9]
	720 Move W8, [X0+224]
	721 Compare W8, 0
	722 JumpIfNotEqual {724}
	723 Call 0x1C17DFC
	724 Move X0, X26
	725 Move X1, X31
	726 Move X2, X31
	727 Call Object.op_Inequality, X0, X1
	728 Move TEMP, X0
	729 And TEMP, TEMP, 1
	730 Compare TEMP, 1
	731 JumpIfNotEqual {806}
	732 Move X8, [X31+768]
	733 Compare X8, 0
	734 JumpIfEqual {992}
	735 And W23, W23, W0
	736 Move X0, X8
	737 Move X1, X31
	738 Call Behaviour.get_enabled, X0
	739 Move TEMP, X0
	740 And TEMP, TEMP, 1
	741 Compare TEMP, 1
	742 JumpIfNotEqual {806}
	743 Move X8, [X31+768]
	744 Compare X8, 0
	745 JumpIfEqual {992}
	746 Move W8, [X8+44]
	747 And W23, W23, W0
	748 NotImplemented "Instruction CMP not yet implemented."
	749 NotImplemented "Instruction CSET not yet implemented."
	750 Compare W8, 0
	751 JumpIfEqual {806}
	752 Move X1, [X19+432]
	753 Move X0, X19
	754 Move X2, X31
	755 Call ScriptableRenderer.EnqueuePass, X0, X1
	756 Move X0, [X31+768]
	757 Compare X0, 0
	758 JumpIfEqual {992}
	759 Move X1, X31
	760 And W23, W23, W21
	761 Call PixelPerfectCamera.get_requiresUpscalePass, X0
	762 Move TEMP, X0
	763 And TEMP, TEMP, 1
	764 Compare TEMP, 1
	765 JumpIfNotEqual {806}
	766 Move X0, [X31+768]
	767 Compare X0, 0
	768 JumpIfEqual {992}
	769 Move W21, [X0+36]
	770 Move X1, X31
	771 Call PixelPerfectCamera.get_pixelRatio, X0
	772 Move X8, [X31+768]
	773 Compare X8, 0
	774 JumpIfEqual {992}
	775 Move W9, [X8+40]
	776 Move [X31+40], W0
	777 Move X0, X8
	778 Move X1, X31
	779 Move [X31+28], W9
	780 Call PixelPerfectCamera.get_pixelRatio, X0
	781 Move X8, [X31+768]
	782 Compare X8, 0
	783 JumpIfEqual {992}
	784 Move X27, [X19+440]
	785 Move X28, [X31+752]
	786 Move W26, W0
	787 Move X0, X8
	788 Move X1, X31
	789 Call PixelPerfectCamera.get_finalBlitFilterMode, X0
	790 Compare X27, 0
	791 JumpIfEqual {992}
	792 Move W8, [X31+40]
	793 Move W4, W0
	794 Add X6, X31, 736
	795 Move X0, X27
	796 Multiply W2, W8, W21
	797 Move W8, [X31+28]
	798 Move X1, X28
	799 Move X5, X20
	800 Multiply W3, W26, W8
	801 Call UpscalePass.Setup, X0, X1, X2, X3, X4, X5, X6
	802 Move X1, [X19+440]
	803 Move X0, X19
	804 Move X2, X31
	805 Call ScriptableRenderer.EnqueuePass, X0, X1
	806 Xor W8, W25, 1
	807 Move TEMP, X8
	808 And TEMP, TEMP, 1
	809 Compare TEMP, 1
	810 JumpIfEqual {821}
	811 Move X0, [X19+560]
	812 Compare X0, 0
	813 JumpIfEqual {992}
	814 NotImplemented "Instruction CMP not yet implemented."
	815 NotImplemented "Instruction CSET not yet implemented."
	816 Add X1, X31, 736
	817 Move W3, W22
	818 Move X4, X31
	819 Call PostProcessPass.SetupFinalPass, X0, X1, X2, X3
	820 Move X1, [X19+560]
	821 Move W9, [X31+44]
	822 And W23, W23, W8
	823 NotImplemented "Instruction CMP not yet implemented."
	824 NotImplemented "Instruction CSET not yet implemented."
	825 Compare W9, 0
	826 JumpIfEqual {868}
	827 Move X21, 0x732000
	828 Move X21, [X21+2248]
	829 Move X20, [X31+736]
	830 And W23, W23, W8
	831 Move X0, [X21]
	832 Move W9, [X0+224]
	833 Compare W9, 0
	834 JumpIfNotEqual {837}
	835 Call 0x1C17DFC
	836 Move X0, [X21]
	837 Move X8, [X0+184]
	838 Move X8, [X8+16]
	839 NotImplemented "Instruction CMP not yet implemented."
	840 Move X9, [X31+32]
	841 Move X0, [X19+448]
	842 Move V2, [X9+16]
	843 Move V0, [X9+32]
	844 Move W8, [X9+48]
	845 Move V1, [X9]
	846 Move [X31+352], V2
	847 Move [X31+360], V0
	848 Move [X31+384], W8
	849 Move [X31+21], V1
	850 Compare X0, 0
	851 JumpIfEqual {992}
	852 Move X2, [X31+736]
	853 Move V0, [X31+336]
	854 Move V1, [X31+352]
	855 Move V2, [X31+23]
	856 Move W8, [X31+384]
	857 Add X1, X31, 48
	858 Move X3, X31
	859 Move [X31+48], V0
	860 Move [X31+56], V1
	861 Move [X31+5], V2
	862 Move [X31+96], W8
	863 Call FinalBlitPass.Setup, X0, X1, X2
	864 Move X1, [X19+448]
	865 Move X0, X19
	866 Move X2, X31
	867 Call ScriptableRenderer.EnqueuePass, X0, X1
	868 And W8, W23, W29
	869 Move TEMP, X8
	870 And TEMP, TEMP, 1
	871 Compare TEMP, 1
	872 JumpIfNotEqual {877}
	873 Move X1, [X19+464]
	874 Move X0, X19
	875 Move X2, X31
	876 Call ScriptableRenderer.EnqueuePass, X0, X1
	877 Add X31, X31, 784
	878 Move X20, [X31+80]
	879 Move X19, [X31+88]
	880 Move X22, [X31+64]
	881 Move X21, [X31+72]
	882 Move X24, [X31+48]
	883 Move X23, [X31+56]
	884 Move X26, [X31+32]
	885 Move X25, [X31+40]
	886 Move X28, [X31+16]
	887 Move X27, [X31+24]
	888 Move X29, [X31+96]
	889 Move X30, [X31+104]
	890 Return 
	891 Move X0, [X31+768]
	892 Compare X0, 0
	893 JumpIfEqual {992}
	894 Move X1, X31
	895 Call PixelPerfectCamera.get_offscreenRTSize, X0
	896 Move X8, [X31+32]
	897 Move [X8], W0
	898 Move X0, [X31+768]
	899 Compare X0, 0
	900 JumpIfEqual {992}
	901 Move X1, X31
	902 Call PixelPerfectCamera.get_offscreenRTSize, X0
	903 Move X8, X0
	904 ShiftRight X8, 32
	905 And X8, X8, 0x7FFFFFFF
	906 Move [X20+244], W8
	907 Move X21, 0x732000
	908 Move X21, [X21+2424]
	909 Move X23, [X19+256]
	910 Move X0, [X21]
	911 Move W8, [X0+224]
	912 Compare W8, 0
	913 JumpIfNotEqual {916}
	914 Call 0x1C17DFC
	915 Move X0, [X21]
	916 Move X8, [X0+184]
	917 Move X24, [X8+8]
	918 Compare X24, 0
	919 JumpIfNotEqual {945}
	920 Move W8, [X0+224]
	921 Compare W8, 0
	922 JumpIfEqual {925}
	923 Move X21, 0x732000
	924 Move X21, [X21+2424]
	925 Call 0x1C17DFC
	926 Move X21, 0x732000
	927 Move X21, [X21+2424]
	928 Move X0, [X21]
	929 Move X9, 0x732000
	930 Move X8, [X0+184]
	931 Move X9, [X9+2400]
	932 Move X25, [X8]
	933 Move X0, [X9]
	934 Call 0x1C17F10
	935 Move X8, 0x732000
	936 Move X8, [X8+2416]
	937 Move X1, X25
	938 Move X3, X31
	939 Move X24, X0
	940 Move X2, [X8]
	941 Call Predicate`1<Object>..ctor, X0, X1, X2
	942 Move X8, [X21]
	943 Move X8, [X8+184]
	944 Move [X8+8], X24
	945 Compare X23, 0
	946 JumpIfEqual {992}
	947 Move X8, 0x732000
	948 Move X8, [X8+2384]
	949 Move X0, X23
	950 Move X1, X24
	951 Move X2, [X8]
	952 Call List`1<Object>.Find, X0, X1
	953 Compare X0, 0
	954 JumpIfEqual {978}
	955 Move X8, 0x731000
	956 Move X8, [X8+4072]
	957 Move X9, [X0]
	958 Move X8, [X8]
	959 Move W11, [X9+304]
	960 Move W10, [X8+304]
	961 NotImplemented "Instruction CMP not yet implemented."
	962 Move X9, [X9+200]
	963 Add X9, X9, X10
	964 NotImplemented "Instruction LDUR not yet implemented."
	965 NotImplemented "Instruction CMP not yet implemented."
	966 Move X9, [X31+32]
	967 Add X1, X31, 400
	968 Move X2, X31
	969 Move W8, [X9+48]
	970 Move V1, [X9+16]
	971 Move V0, [X9+32]
	972 Move V2, [X9]
	973 Move [X31+448], W8
	974 Move [X31+416], V1
	975 Move [X31+424], V0
	976 Move [X31+25], V2
	977 Call FullScreenRenderPass.ReAllocate, X0, X1
	978 Move W24, 1
	979 Move X0, [X31+768]
	980 Compare X0, 0
	981 JumpIfEqual {992}
	982 Move W8, [X0+48]
	983 NotImplemented "Instruction CMP not yet implemented."
	984 Move W8, 1
	985 Move X1, X31
	986 Call PixelPerfectCamera.get_requiresUpscalePass, X0
	987 And W8, W0, 1
	988 NotImplemented "Instruction CMP not yet implemented."
	989 Move W26, W31
	990 NotImplemented "Instruction CSET not yet implemented."
	991 Move [X31+28], W8
	992 Call 0x1C17F20
	993 NotImplemented "Instruction CMP not yet implemented."
	994 Move X26, X0
	995 Move X0, X26
	996 Call 0x3EB2AD0
	997 Move X24, [X0]
	998 Call 0x3EB2AE0
	999 Add X0, X31, 600
	1000 Move X1, X31
	1001 Call ProfilingScope.Dispose, X0
	1002 Compare X24, 0
	1003 JumpIfEqual {395}
	1004 Move X0, X24
	1005 Call 0x1C17F18
	1006 Move X24, X31
	1007 Move X26, X0
	1008 Add X0, X31, 600
	1009 Move X1, X31
	1010 Call ProfilingScope.Dispose, X0
	1011 Compare X24, 0
	1012 JumpIfNotEqual {1015}
	1013 Move X0, X26
	1014 Call 0x1D2D690
	1015 Move X0, X24
	1016 Call 0x1C17F18
	1017 Call 0x1991590

Method: System.Void SetupCullingParameters(ref UnityEngine.Rendering.ScriptableCullingParameters cullingParameters, ref UnityEngine.Rendering.Universal.CameraData cameraData)

Disassembly:
	0x03A24030 FMUL S9, S0, S1
	0x03A24034 CMP W8, W20
	0x03A24038 FCCMP S9, S3, 0x0, LS
	0x03A2403C FCSEL S0, S9, S3, GT
	0x03A24040 STR S0, [X19]
	0x03A24044 LDR V0, [X21]
	0x03A24048 STP S5, S4, [X31 + 0x34]
	0x03A2404C STR S2, [X31 + 0x3C]
	0x03A24050 FMOV W8, S0
	0x03A24054 AND W8, W8, 0x7FFFFFFF
	0x03A24058 CMP W8, W20
	0x03A2405C LDR X8, [X31 + 0x10]
	0x03A24060 FCCMP S9, S0, 0x8, LS
	0x03A24064 FCSEL S0, S9, S0, MI
	0x03A24068 STR S0, [X21]
	0x03A2406C LDR V0, [X8]
	0x03A24070 FADD S0, S9, S0
	0x03A24074 STR S0, [X8]
	0x03A24078 ADRP X8, 0x9BD000
	0x03A2407C LDRB W8, [X8 + 0x585]
	0x03A24080 CBNZ W8, 0x3A24098
	0x03A24084 MOV X0, X24
	0x03A24088 BL 0x1C16CF4
	0x03A2408C ADRP X8, 0x9BD000
	0x03A24090 MOVZ W9, 0x1
	0x03A24094 STRB W9, [X8 + 0x585]
	0x03A24098 LDR X0, [X24]
	0x03A2409C STR S12, [X31 + 0x30]
	0x03A240A0 LDR W8, [X0 + 0xE0]
	0x03A240A4 CBZ W8, 0x3A240B0
	0x03A240A8 MOVZ W8, 0x1
	0x03A240AC B 0x3A240BC
	0x03A240B0 BL 0x1C16DFC
	0x03A240B4 ADRP X8, 0x9BD000
	0x03A240B8 LDRB W8, [X8 + 0x585]
	0x03A240BC MOV V12.16B, V14.16B
	0x03A240C0 CBNZ W8, 0x3A240D8
	0x03A240C4 MOV X0, X24
	0x03A240C8 BL 0x1C16CF4
	0x03A240CC ADRP X8, 0x9BD000
	0x03A240D0 MOVZ W9, 0x1
	0x03A240D4 STRB W9, [X8 + 0x585]
	0x03A240D8 LDR X0, [X24]
	0x03A240DC FSUB S14, S15, S8
	0x03A240E0 STR S10, [X31 + 0x44]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x9BF000
	008 Move X23, 0x72D000
	009 Move W8, [X22+10]
	010 Move X23, [X23+1664]
	011 Move X20, X2
	012 Move X19, X1
	013 Move X21, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0x72D000
	019 Move X0, [X0+1664]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+10], W8
	023 Move X0, [X23]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Move X0, X19
	029 Move W1, W31
	030 Move X2, X31
	031 Call ScriptableCullingParameters.set_cullingOptions, X0, X1
	032 Move X0, [X20+192]
	033 Compare X0, 0
	034 JumpIfEqual {58}
	035 Move X1, X31
	036 Call Camera.get_orthographic, X0
	037 And W1, W0, 1
	038 Move X0, X19
	039 Move X2, X31
	040 Call ScriptableCullingParameters.set_isOrthographic, X0, X1
	041 Move S0, W31
	042 Move X0, X19
	043 Move X1, X31
	044 Call ScriptableCullingParameters.set_shadowDistance, X0, V0
	045 Move X0, [X21+472]
	046 Compare X0, 0
	047 JumpIfEqual {58}
	048 Move X2, [X20+192]
	049 Move X1, X19
	050 Move X20, [X31+32]
	051 Move X19, [X31+40]
	052 Move X22, [X31+16]
	053 Move X21, [X31+24]
	054 Move X30, [X31+48]
	055 Move X23, [X31+56]
	056 Call Light2DCullResult.SetupCulling, X0, X1, X2
	057 Return 
	058 Call 0x1C17F20

Method: System.Void SwapColorBuffer(UnityEngine.Rendering.CommandBuffer cmd)

Disassembly:
	0x03A240E4 FSUB S10, S10, S11
	0x03A240E8 LDR W8, [X0 + 0xE0]
	0x03A240EC CBZ W8, 0x3A24104
	0x03A240F0 FMUL S0, S14, S14
	0x03A240F4 FMUL S1, S10, S10
	0x03A240F8 FADD S0, S0, S1
	0x03A240FC FSQRT S10, S0
	0x03A24100 B 0x3A24138
	0x03A24104 BL 0x1C16DFC
	0x03A24108 ADRP X8, 0x9BD000
	0x03A2410C LDRB W8, [X8 + 0x585]
	0x03A24110 FMUL S0, S14, S14
	0x03A24114 FMUL S1, S10, S10
	0x03A24118 FADD S0, S0, S1
	0x03A2411C FSQRT S10, S0
	0x03A24120 CBNZ W8, 0x3A24138
	0x03A24124 MOV X0, X24
	0x03A24128 BL 0x1C16CF4
	0x03A2412C MOVZ W8, 0x1
	0x03A24130 ADRP X9, 0x9BD000
	0x03A24134 STRB W8, [X9 + 0x585]
	0x03A24138 LDR X0, [X24]
	0x03A2413C MOV V14.16B, V12.16B
	0x03A24140 LDR V12, [X31 + 0x30]
	0x03A24144 LDR W8, [X0 + 0xE0]
	0x03A24148 CBNZ W8, 0x3A24150
	0x03A2414C BL 0x1C16DFC
	0x03A24150 LDR V2, [X29]
	0x03A24154 FSUB S0, S8, S12
	0x03A24158 FSUB S1, S11, S13
	0x03A2415C FMUL S0, S0, S0
	0x03A24160 FMUL S1, S1, S1
	0x03A24164 FMOV W8, S2
	0x03A24168 FADD S0, S0, S1
	0x03A2416C AND W8, W8, 0x7FFFFFFF
	0x03A24170 FSQRT S0, S0
	0x03A24174 CMP W8, W20
	0x03A24178 FCCMP S0, S2, 0x0, LS
	0x03A2417C FCSEL S2, S0, S2, GT
	0x03A24180 FMOV W8, S2
	0x03A24184 LDP S3, S1, [X31 + 0x34]
	0x03A24188 AND W8, W8, 0x7FFFFFFF
	0x03A2418C CMP W8, W20
	0x03A24190 FCCMP S10, S2, 0x0, LS
	0x03A24194 FCSEL S2, S10, S2, GT
	0x03A24198 FMUL S1, S1, S1
	0x03A2419C FMUL S3, S3, S3
	0x03A241A0 FMOV W8, S2
	0x03A241A4 FADD S1, S1, S3
	0x03A241A8 AND W8, W8, 0x7FFFFFFF
	0x03A241AC FSQRT S1, S1
	0x03A241B0 CMP W8, W20
	0x03A241B4 FCCMP S1, S2, 0x0, LS
	0x03A241B8 FCSEL S2, S1, S2, GT
	0x03A241BC STR S2, [X29]
	0x03A241C0 LDR V2, [X28]
	0x03A241C4 LDR W11, [X31 + 0x2C]
	0x03A241C8 ADD W27, W27, 0x3
	0x03A241CC FMOV W8, S2
	0x03A241D0 AND W8, W8, 0x7FFFFFFF
	0x03A241D4 CMP W8, W20
	0x03A241D8 FCCMP S0, S2, 0x8, LS
	0x03A241DC FCSEL S2, S0, S2, MI
	0x03A241E0 FMOV W8, S2
	0x03A241E4 AND W8, W8, 0x7FFFFFFF
	0x03A241E8 CMP W8, W20
	0x03A241EC FCCMP S10, S2, 0x8, LS
	0x03A241F0 FCSEL S2, S10, S2, MI
	0x03A241F4 FMOV W8, S2
	0x03A241F8 AND W8, W8, 0x7FFFFFFF
	0x03A241FC CMP W8, W20
	0x03A24200 LDP X10, X8, [X31 + 0x18]
	0x03A24204 FCCMP S1, S2, 0x8, LS
	0x03A24208 FCSEL S2, S1, S2, MI
	0x03A2420C STR S2, [X28]
	0x03A24210 LDR V2, [X8]
	0x03A24214 CMP W27, W11
	0x03A24218 FADD S0, S0, S2
	0x03A2421C FADD S0, S10, S0
	0x03A24220 FADD S0, S1, S0
	0x03A24224 STR S0, [X8]
	0x03A24228 LDRSW X8, [X10]
	0x03A2422C LDR V0, [X31 + 0x44]
	0x03A24230 ADD W9, W8, 0x1
	0x03A24234 STR W9, [X10]
	0x03A24238 LDR X9, [X31 + 0x8]
	0x03A2423C MOVZ W10, 0x34
	0x03A24240 LDR X9, [X9]
	0x03A24244 NOP
	0x03A24248 MADD X8, X8, X10, X9
	0x03A2424C STP S15, S0, [X8 + 0x10]
	0x03A24250 LDR V0, [X31 + 0x40]
	0x03A24254 STP S12, S13, [X8]
	0x03A24258 STP S8, S11, [X8 + 0x8]
	0x03A2425C STP S14, S0, [X8 + 0x18]
	0x03A24260 LDR V0, [X31 + 0x3C]
	0x03A24264 STP S0, S9, [X8 + 0x20]
	0x03A24268 LDR W9, [X31 + 0x98]
	0x03A2426C LDR X10, [X31 + 0x90]
	0x03A24270 STR W9, [X8 + 0x30]
	0x03A24274 STR X10, [X8 + 0x28]
	0x03A24278 B.LT 0x3A23F80
	0x03A2427C LDP X8, X9, [X31 + 0x18]
	0x03A24280 LDP X20, X19, [X31 + 0x130]
	0x03A24284 LDP X22, X21, [X31 + 0x120]
	0x03A24288 LDP X24, X23, [X31 + 0x110]

ISIL:
	001 Subtract X31, X31, 320
	002 Move [X31+272], X29
	003 Move [X31+288], X30
	004 Move [X31+296], X21
	005 Move [X31+304], X20
	006 Move [X31+312], X19
	007 Move X21, 0x9BF000
	008 Move W8, [X21+11]
	009 Move X19, X1
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x731000
	016 Move X0, [X0+2344]
	017 Call 0x1C17CF4
	018 Move X0, 0x731000
	019 Move X0, [X0+2352]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X21+11], W8
	023 Move X0, [X20+480]
	024 Compare X0, 0
	025 JumpIfEqual {131}
	026 Move X1, X31
	027 Call RenderTargetBufferSystem.Swap, X0
	028 Move X8, [X20+504]
	029 Compare X8, 0
	030 JumpIfEqual {131}
	031 Move X9, [X8+72]
	032 NotImplemented "Instruction LDUR not yet implemented."
	033 NotImplemented "Instruction LDUR not yet implemented."
	034 Add X8, X31, 184
	035 Move W0, 2
	036 Move X1, X31
	037 Add X21, X31, 184
	038 Move [X31+256], X9
	039 Move [X31+224], V1
	040 Move [X31+232], V0
	041 Call RenderTargetIdentifier.op_Implicit, X0
	042 Move V0, [X21]
	043 Move V1, [X21+16]
	044 Move X8, [X31+216]
	045 Move V2, [X31+224]
	046 Move V3, [X31+240]
	047 Move X9, [X31+256]
	048 Add X0, X31, 144
	049 Add X1, X31, 96
	050 Move X2, X31
	051 Move [X31+96], V0
	052 Move [X31+104], V1
	053 Move [X31+128], X8
	054 Move [X31+144], V2
	055 Move [X31+152], V3
	056 Move [X31+176], X9
	057 Call RenderTargetIdentifier.op_Inequality, X0, X1
	058 Move X8, [X20+480]
	059 Compare X8, 0
	060 JumpIfEqual {131}
	061 Move W21, W0
	062 Move X0, X8
	063 Move X1, X19
	064 Move X2, X31
	065 Call RenderTargetBufferSystem.GetBackBuffer, X0, X1
	066 Move X1, X0
	067 Move TEMP, X21
	068 And TEMP, TEMP, 1
	069 Compare TEMP, 1
	070 JumpIfNotEqual {75}
	071 Move X2, [X20+504]
	072 Move X0, X20
	073 Move X3, X31
	074 Call ScriptableRenderer.ConfigureCameraTarget, X0, X1, X2
	075 Move X0, X20
	076 Move X2, X31
	077 Call ScriptableRenderer.ConfigureCameraColorTarget, X0, X1
	078 Move X0, [X20+480]
	079 Compare X0, 0
	080 JumpIfEqual {131}
	081 Move X1, X19
	082 Move X2, X31
	083 Call RenderTargetBufferSystem.GetBackBuffer, X0, X1
	084 Move [X20+496], X0
	085 Compare X0, 0
	086 JumpIfEqual {131}
	087 Move X8, [X0+72]
	088 NotImplemented "Instruction LDUR not yet implemented."
	089 NotImplemented "Instruction LDUR not yet implemented."
	090 Move [X31+256], X8
	091 Move [X31+224], V1
	092 Move [X31+232], V0
	093 Compare X19, 0
	094 JumpIfEqual {131}
	095 Move X8, 0x731000
	096 Move X8, [X8+2344]
	097 Move V0, [X31+224]
	098 Move V1, [X31+240]
	099 Move X9, [X31+256]
	100 Add X2, X31, 48
	101 Move X1, [X8]
	102 Move X0, X19
	103 Move X3, X31
	104 Move [X31+48], V0
	105 Move [X31+56], V1
	106 Move [X31+80], X9
	107 Call CommandBuffer.SetGlobalTexture, X0, X1, X2
	108 Move X8, [X20+496]
	109 Compare X8, 0
	110 JumpIfEqual {131}
	111 Move X9, 0x731000
	112 Move X9, [X9+2352]
	113 Move X10, [X8+72]
	114 NotImplemented "Instruction LDUR not yet implemented."
	115 NotImplemented "Instruction LDUR not yet implemented."
	116 Move X1, [X9]
	117 Add X2, X31, 0
	118 Move X0, X19
	119 Move X3, X31
	120 Move [X31+32], X10
	121 Move [X31], V1
	122 Move [X31+8], V0
	123 Call CommandBuffer.SetGlobalTexture, X0, X1, X2
	124 Move X20, [X31+304]
	125 Move X19, [X31+312]
	126 Move X30, [X31+288]
	127 Move X21, [X31+296]
	128 Move X29, [X31+272]
	129 Add X31, X31, 320
	130 Return 
	131 Call 0x1C17F20

Method: UnityEngine.Rendering.RTHandle GetCameraColorFrontBuffer(UnityEngine.Rendering.CommandBuffer cmd)

Disassembly:
	0x03A2428C LDR V0, [X8]
	0x03A24290 LDR X8, [X31 + 0x10]
	0x03A24294 LDP X26, X25, [X31 + 0x100]
	0x03A24298 LDP X28, X27, [X31 + 0xF0]
	0x03A2429C SCVTF S0, S0
	0x03A242A0 LDR V1, [X8]
	0x03A242A4 LDP X29, X30, [X31 + 0xE0]

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+480]
	003 Compare X0, 0
	004 JumpIfEqual {9}
	005 Move X2, X31
	006 Move X30, [X31+16]
	007 Call RenderTargetBufferSystem.GetFrontBuffer, X0, X1
	008 Return X0
	009 Call 0x1C17F20

Method: UnityEngine.Rendering.RTHandle GetCameraColorBackBuffer(UnityEngine.Rendering.CommandBuffer cmd)

Disassembly:
	0x03A242A8 LDP D9, D8, [X31 + 0xD0]
	0x03A242AC LDP D11, D10, [X31 + 0xC0]
	0x03A242B0 FDIV S0, S1, S0
	0x03A242B4 STR S0, [X8]
	0x03A242B8 LDR W8, [X31 + 0x2C]
	0x03A242BC LDR V0, [X9]
	0x03A242C0 LDP D13, D12, [X31 + 0xB0]

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+480]
	003 Compare X0, 0
	004 JumpIfEqual {9}
	005 Move X2, X31
	006 Move X30, [X31+16]
	007 Call RenderTargetBufferSystem.GetBackBuffer, X0, X1
	008 Return X0
	009 Call 0x1C17F20

Method: System.Void EnableSwapBufferMSAA(System.Boolean enable)

Disassembly:
	0x03A242C4 LDP D15, D14, [X31 + 0xA0]
	0x03A242C8 SCVTF S1, W8
	0x03A242CC FDIV S0, S0, S1
	0x03A242D0 STR S0, [X9]
	0x03A242D4 ADD X31, X31, 0x140
	0x03A242D8 RET
	0x03A242DC SUB X31, X31, 0xF0
	0x03A242E0 STR D14, [X31 + 0x50]

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+480]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 And W1, W1, 1
	006 Move X2, X31
	007 Move X30, [X31+16]
	008 Call RenderTargetBufferSystem.EnableMSAA, X0, X1
	009 Return 
	010 Call 0x1C17F20

Method: System.Void .cctor()

Disassembly:
	0x03A242E4 STP D13, D12, [X31 + 0x60]
	0x03A242E8 STP D11, D10, [X31 + 0x70]
	0x03A242EC STP D9, D8, [X31 + 0x80]
	0x03A242F0 STP X29, X30, [X31 + 0x90]
	0x03A242F4 STP X28, X27, [X31 + 0xA0]
	0x03A242F8 STP X26, X25, [X31 + 0xB0]
	0x03A242FC STP X24, X23, [X31 + 0xC0]
	0x03A24300 STP X22, X21, [X31 + 0xD0]
	0x03A24304 STP X20, X19, [X31 + 0xE0]
	0x03A24308 ADRP X20, 0x9BE000
	0x03A2430C LDRB W8, [X20 + 0x1A]
	0x03A24310 LDR X9, [X31 + 0x108]
	0x03A24314 MOV X19, X7
	0x03A24318 MOV X22, X3
	0x03A2431C MOV X23, X0
	0x03A24320 STR W5, [X31 + 0x5C]
	0x03A24324 STP X6, X9, [X31 + 0x8]
	0x03A24328 TBNZ X8, 0x0, 0x3A24340
	0x03A2432C ADRP X0, 0x6F8000
	0x03A24330 LDR X0, [X0 + 0xD8]
	0x03A24334 BL 0x1C16CF4
	0x03A24338 MOVZ W8, 0x1
	0x03A2433C STRB W8, [X20 + 0x1A]
	0x03A24340 LDR W8, [X31 + 0x5C]
	0x03A24344 CMP W8, 0x1
	0x03A24348 B.LT 0x3A24514
	0x03A2434C LDR X8, [X31 + 0x110]
	0x03A24350 LDP X28, X27, [X31 + 0xF8]
	0x03A24354 LDR X29, [X31 + 0xF0]
	0x03A24358 MOV W25, W31
	0x03A2435C STR X8, [X31]
	0x03A24360 ADD X8, X31, 0x18
	0x03A24364 FMOV S8, 0.5
	0x03A24368 ADD X20, X8, 0x18
	0x03A2436C ADRP X10, 0x6F8000
	0x03A24370 LDRSW X21, [X22, W25, SXTW]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x9BF000
	007 Move X22, 0x72D000
	008 Move X19, 0x731000
	009 Move X20, 0x731000
	010 Move W8, [X21+12]
	011 Move X22, [X22+1432]
	012 Move X19, [X19+2456]
	013 Move X20, [X20+2336]
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {29}
	018 Move X0, 0x72D000
	019 Move X0, [X0+1432]
	020 Call 0x1C17CF4
	021 Move X0, 0x731000
	022 Move X0, [X0+2336]
	023 Call 0x1C17CF4
	024 Move X0, 0x731000
	025 Move X0, [X0+2456]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X21+12], W8
	029 Move X0, [X22]
	030 Call 0x1C17F10
	031 Move X1, [X19]
	032 Move X2, X31
	033 Move X19, X0
	034 Call ProfilingSampler..ctor, X0, X1
	035 Move X8, [X20]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X8, [X8+184]
	039 Move [X8], X19
	040 Move X20, [X31+32]
	041 Move X19, [X31+40]
	042 Move X30, [X31+48]
	043 Return 

