Type: UnityEngine.Rendering.Universal.DebugDisplaySettingsMaterial/WidgetFactory/<>c__DisplayClass4_0

Method: System.Void .ctor()

Disassembly:
	0x03A31424 BL 0x1C16CF4
	0x03A31428 MOVZ W8, 0x1

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: UnityEngine.Color <CreateAlbedoCustomColor>b__0()

Disassembly:
	0x03A3254C LDR X10, [X10 + 0x220]
	0x03A32550 ADRP X11, 0x723000
	0x03A32554 LDR X10, [X10]
	0x03A32558 LDR X11, [X11 + 0x218]
	0x03A3255C LDR X11, [X11]
	0x03A32560 STP X10, X11, [X9 + 0x50]
	0x03A32564 ADRP X11, 0x723000
	0x03A32568 LDR X9, [X8 + 0xB8]
	0x03A3256C LDR X10, [X30]
	0x03A32570 LDR X11, [X11 + 0x230]
	0x03A32574 LDP X20, X19, [X31 + 0x50]
	0x03A32578 LDP X22, X21, [X31 + 0x40]
	0x03A3257C LDP X24, X23, [X31 + 0x30]
	0x03A32580 LDR X11, [X11]
	0x03A32584 LDP X26, X25, [X31 + 0x20]
	0x03A32588 LDP X28, X27, [X31 + 0x10]
	0x03A3258C STP X10, X11, [X9 + 0x60]
	0x03A32590 LDR X9, [X8 + 0xB8]
	0x03A32594 LDR X10, [X6]
	0x03A32598 LDR X11, [X7]
	0x03A3259C STP X10, X11, [X9 + 0x70]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x9B1000
	005 Move W8, [X20+168]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x724000
	012 Move X0, [X0+256]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+168], W8
	016 Move X8, [X19+16]
	017 Compare X8, 0
	018 JumpIfEqual {30}
	019 Move X8, [X8+32]
	020 Compare X8, 0
	021 JumpIfEqual {30}
	022 Move S0, [X8+44]
	023 Move S1, [X8+48]
	024 Move S2, [X8+52]
	025 Move S3, [X8+56]
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Return X0
	030 Call 0x1C17F20

Method: System.Void <CreateAlbedoCustomColor>b__1(UnityEngine.Color value)

Disassembly:
	0x03A325A0 LDR X9, [X8 + 0xB8]
	0x03A325A4 LDR X10, [X4]
	0x03A325A8 LDR X11, [X5]
	0x03A325AC STP X10, X11, [X9 + 0x80]
	0x03A325B0 LDR X9, [X8 + 0xB8]
	0x03A325B4 LDR X10, [X2]
	0x03A325B8 LDR X11, [X3]
	0x03A325BC STP X10, X11, [X9 + 0x90]
	0x03A325C0 LDR X9, [X8 + 0xB8]
	0x03A325C4 LDR X10, [X0]
	0x03A325C8 LDR X11, [X1]
	0x03A325CC STP X10, X11, [X9 + 0xA0]
	0x03A325D0 LDR X9, [X8 + 0xB8]
	0x03A325D4 LDR X10, [X16]
	0x03A325D8 LDR X11, [X17]
	0x03A325DC STP X10, X11, [X9 + 0xB0]
	0x03A325E0 LDR X9, [X8 + 0xB8]
	0x03A325E4 LDR X10, [X14]
	0x03A325E8 LDR X11, [X15]
	0x03A325EC STP X10, X11, [X9 + 0xC0]
	0x03A325F0 LDR X8, [X8 + 0xB8]
	0x03A325F4 LDR X9, [X12]
	0x03A325F8 LDR X10, [X13]
	0x03A325FC STP X9, X10, [X8 + 0xD0]
	0x03A32600 LDP X29, X30, [X31], #0x60
	0x03A32604 RET
	0x03A32608 STR X30, [X31 - 0x60]!
	0x03A3260C STP X28, X27, [X31 + 0x10]
	0x03A32610 STP X26, X25, [X31 + 0x20]

ISIL:
	001 Move [X31-64], D11
	002 Move [X31-56], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X30
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0x9B1000
	009 Move W8, [X20+169]
	010 Move V8, V3
	011 Move V9, V2
	012 Move V10, V1
	013 Move V11, V0
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {24}
	019 Move X0, 0x724000
	020 Move X0, [X0+256]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X20+169], W8
	024 Move X8, [X19+16]
	025 Compare X8, 0
	026 JumpIfEqual {42}
	027 Move X8, [X8+32]
	028 Compare X8, 0
	029 JumpIfEqual {42}
	030 Move [X8+52], S9
	031 Move [X8+60], S8
	032 Move X20, [X31+48]
	033 Move X19, [X31+56]
	034 Move X30, [X31+32]
	035 Move D9, [X31+16]
	036 Move D8, [X31+24]
	037 Move [X8+44], S11
	038 Move [X8+52], S10
	039 Move D11, [X31+64]
	040 Move D10, [X31+72]
	041 Return 
	042 Call 0x1C17F20

Method: System.Boolean <CreateAlbedoCustomColor>b__2()

Disassembly:
	0x03A32614 STP X24, X23, [X31 + 0x30]
	0x03A32618 STP X22, X21, [X31 + 0x40]
	0x03A3261C STP X20, X19, [X31 + 0x50]
	0x03A32620 ADRP X19, 0x9B0000
	0x03A32624 ADRP X21, 0x723000
	0x03A32628 LDRB W8, [X19 + 0xBA]
	0x03A3262C LDR X21, [X21 + 0x238]
	0x03A32630 MOV X20, X0
	0x03A32634 TBNZ X8, 0x0, 0x3A326DC
	0x03A32638 ADRP X0, 0x6C5000
	0x03A3263C LDR X0, [X0 + 0xB00]
	0x03A32640 BL 0x1C16CF4
	0x03A32644 ADRP X0, 0x723000
	0x03A32648 LDR X0, [X0 + 0x240]
	0x03A3264C BL 0x1C16CF4
	0x03A32650 ADRP X0, 0x71F000
	0x03A32654 LDR X0, [X0 + 0xE8]
	0x03A32658 BL 0x1C16CF4
	0x03A3265C ADRP X0, 0x71F000
	0x03A32660 LDR X0, [X0 + 0xF0]
	0x03A32664 BL 0x1C16CF4
	0x03A32668 ADRP X0, 0x71F000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x9B1000
	005 Move W8, [X20+170]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x724000
	012 Move X0, [X0+256]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+170], W8
	016 Move X8, [X19+16]
	017 Compare X8, 0
	018 JumpIfEqual {29}
	019 Move X8, [X8+32]
	020 Compare X8, 0
	021 JumpIfEqual {29}
	022 Move W8, [X8+24]
	023 Move X20, [X31+16]
	024 Move X19, [X31+24]
	025 NotImplemented "Instruction CMP not yet implemented."
	026 NotImplemented "Instruction CSET not yet implemented."
	027 Move X30, [X31+32]
	028 Return X0
	029 Call 0x1C17F20

