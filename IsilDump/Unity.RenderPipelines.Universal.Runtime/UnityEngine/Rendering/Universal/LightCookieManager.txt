Type: UnityEngine.Rendering.Universal.LightCookieManager

Method: System.Boolean get_IsKeywordLightCookieEnabled()

Disassembly:
	0x03A55498 BL 0x1C16CF4
	0x03A5549C ADRP X0, 0x701000

ISIL:
	001 Move W0, [X0+92]
	002 Return X0

Method: System.Void set_IsKeywordLightCookieEnabled(System.Boolean value)

Disassembly:
	0x03A554A0 LDR X0, [X0 + 0x1D0]
	0x03A554A4 BL 0x1C16CF4
	0x03A554A8 ADRP X0, 0x701000

ISIL:
	001 And W8, W1, 1
	002 Move [X0+92], W8
	003 Return 

Method: System.Void .ctor(ref UnityEngine.Rendering.Universal.LightCookieManager/Settings settings)

Disassembly:
	0x03A554AC LDR X0, [X0 + 0x1D8]
	0x03A554B0 BL 0x1C16CF4
	0x03A554B4 ADRP X0, 0x701000
	0x03A554B8 LDR X0, [X0 + 0x1E0]
	0x03A554BC BL 0x1C16CF4
	0x03A554C0 ADRP X0, 0x701000
	0x03A554C4 LDR X0, [X0 + 0x1E8]
	0x03A554C8 BL 0x1C16CF4
	0x03A554CC MOVZ W8, 0x1
	0x03A554D0 STRB W8, [X19 + 0x1DA]
	0x03A554D4 STR W31, [X31 + 0x2C]
	0x03A554D8 LDR W28, [X22 + 0x18]
	0x03A554DC CMP W28, 0x1
	0x03A554E0 B.LT 0x3A556D0
	0x03A554E4 STR X21, [X31 + 0x8]
	0x03A554E8 ADRP X21, 0x69E000
	0x03A554EC LDR X21, [X21 + 0x598]
	0x03A554F0 LDR W29, [X22]
	0x03A554F4 MOV W27, W31
	0x03A554F8 MOV W19, W31
	0x03A554FC MOV W23, W31
	0x03A55500 CMP W29, W23
	0x03A55504 B.NE 0x3A55510
	0x03A55508 SUB W27, W27, 0x1
	0x03A5550C B 0x3A556C0
	0x03A55510 ADRP X8, 0x701000
	0x03A55514 LDP X0, X1, [X22 + 0x10]
	0x03A55518 LDR X8, [X8 + 0x1B8]
	0x03A5551C MOV W2, W23
	0x03A55520 LDR X3, [X8]
	0x03A55524 BL 0x22222C0
	0x03A55528 MOV X1, X31
	0x03A5552C MOV X25, X0
	0x03A55530 BL 0x3C5BBF0
	0x03A55534 CBZ X0, 0x3A55820
	0x03A55538 MOV X1, X31
	0x03A5553C MOV X24, X0
	0x03A55540 BL 0x3C16C80
	0x03A55544 LDR X8, [X21]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x98E000
	007 Move X21, 0x702000
	008 Move W8, [X22+469]
	009 Move X21, [X21+328]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x702000
	017 Move X0, [X0+328]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+469], W8
	021 Move X8, -49704960
	022 Move V0, [X8+2816]
	023 Move TEMP, 0
	024 Not TEMP
	025 Move W8, TEMP
	026 Move X0, X19
	027 Move X1, X31
	028 Move [X19+80], D0
	029 Move [X19+88], W8
	030 Call Object..ctor, X0
	031 Move W8, [X20+24]
	032 Move X9, [X20+16]
	033 Move V0, [X20]
	034 Move [X19+56], W8
	035 Move [X19+48], X9
	036 Move [X19+2], V0
	037 Move X0, [X21]
	038 Call 0x1C17F10
	039 Move X1, X31
	040 Move X20, X0
	041 Call Object..ctor, X0
	042 Move [X19+64], X20
	043 Move X20, [X31+32]
	044 Move X19, [X31+40]
	045 Move X22, [X31+16]
	046 Move X21, [X31+24]
	047 Move X30, [X31+48]
	048 Return 

Method: System.Void InitAdditionalLights(System.Int32 size)

Disassembly:
	0x03A55550 CBNZ W9, 0x3A5555C
	0x03A55554 MOV X0, X8
	0x03A55558 BL 0x1C16DFC
	0x03A5555C MOV X0, X26
	0x03A55560 MOV X1, X31
	0x03A55564 MOV X2, X31
	0x03A55568 BL 0x3C3883C
	0x03A5556C TBNZ X0, 0x0, 0x3A556C0
	0x03A55570 MOV X0, X25
	0x03A55574 MOV X1, X31
	0x03A55578 BL 0x3C5BC7C
	0x03A5557C ORR W8, W0, 0x2
	0x03A55580 CMP W8, 0x2
	0x03A55584 B.NE 0x3A555CC
	0x03A55588 CBZ X20, 0x3A55820
	0x03A5558C LDR W10, [X20 + 0x18]
	0x03A55590 ADD W9, W27, W23
	0x03A55594 CMP W10, W9, UXTH
	0x03A55598 B.LE 0x3A556F8
	0x03A5559C ADD W8, W19, 0x1
	0x03A555A0 CMP W8, W10
	0x03A555A4 B.GE 0x3A556F8
	0x03A555A8 CMP W19, W10
	0x03A555AC B.CS 0x3A55824
	0x03A555B0 SXTW X10, W19
	0x03A555B4 MOV W11, W23
	0x03A555B8 BFM W11, W9, 0x10, 0xF
	0x03A555BC ADD X9, X20, X10, 0x4, LSL
	0x03A555C0 MOV W19, W8
	0x03A555C4 STP X11, X24, [X9 + 0x20]
	0x03A555C8 B 0x3A556C0
	0x03A555CC ADRP X8, 0x69E000
	0x03A555D0 LDR X8, [X8 + 0xAC8]
	0x03A555D4 MOV W26, W0
	0x03A555D8 MOVZ W1, 0x5
	0x03A555DC LDR X0, [X8]
	0x03A555E0 BL 0x1C16D6C
	0x03A555E4 CBZ X0, 0x3A55820
	0x03A555E8 LDR W8, [X0 + 0x18]
	0x03A555EC MOV X25, X0
	0x03A555F0 CBZ W8, 0x3A55824
	0x03A555F4 ADRP X8, 0x701000
	0x03A555F8 LDR X8, [X8 + 0x1E0]
	0x03A555FC ADD X0, X31, 0x10
	0x03A55600 MOV X1, X31
	0x03A55604 LDR X8, [X8]
	0x03A55608 STR X8, [X25 + 0x20]
	0x03A5560C ADRP X8, 0x701000
	0x03A55610 LDR X8, [X8 + 0x1B0]
	0x03A55614 STR W26, [X31 + 0x20]
	0x03A55618 LDR X9, [X8]
	0x03A5561C MOVN X8, 0x0
	0x03A55620 STP X9, X8, [X31 + 0x10]
	0x03A55624 BL 0x33B162C
	0x03A55628 LDR W8, [X25 + 0x18]
	0x03A5562C CMP W8, 0x1
	0x03A55630 B.LS 0x3A55824
	0x03A55634 CMP W8, 0x2
	0x03A55638 STR X0, [X25 + 0x28]
	0x03A5563C B.EQ 0x3A55824
	0x03A55640 ADRP X8, 0x701000
	0x03A55644 LDR X8, [X8 + 0x1D8]
	0x03A55648 MOV X0, X24
	0x03A5564C MOV X1, X31
	0x03A55650 LDR X8, [X8]
	0x03A55654 STR X8, [X25 + 0x30]
	0x03A55658 BL 0x3C389D4
	0x03A5565C LDR W8, [X25 + 0x18]
	0x03A55660 CMP W8, 0x3
	0x03A55664 B.LS 0x3A55824
	0x03A55668 CMP W8, 0x4
	0x03A5566C STR X0, [X25 + 0x38]
	0x03A55670 B.EQ 0x3A55824
	0x03A55674 ADRP X8, 0x701000
	0x03A55678 LDR X8, [X8 + 0x1C0]
	0x03A5567C MOV X0, X25
	0x03A55680 MOV X1, X31
	0x03A55684 LDR X8, [X8]
	0x03A55688 STR X8, [X25 + 0x40]
	0x03A5568C BL 0x32278CC
	0x03A55690 ADRP X8, 0x69E000
	0x03A55694 LDR X8, [X8 + 0xA28]
	0x03A55698 MOV X25, X0
	0x03A5569C LDR X8, [X8]
	0x03A556A0 LDR W9, [X8 + 0xE0]
	0x03A556A4 CBNZ W9, 0x3A556B0
	0x03A556A8 MOV X0, X8
	0x03A556AC BL 0x1C16DFC
	0x03A556B0 MOV X0, X25
	0x03A556B4 MOV X1, X24
	0x03A556B8 MOV X2, X31
	0x03A556BC BL 0x3C06B0C
	0x03A556C0 ADD W23, W23, 0x1
	0x03A556C4 CMP W28, W23
	0x03A556C8 B.NE 0x3A55500
	0x03A556CC B 0x3A556D4
	0x03A556D0 MOV W19, W31
	0x03A556D4 MOV W0, W19
	0x03A556D8 LDP X20, X19, [X31 + 0x80]
	0x03A556DC LDP X22, X21, [X31 + 0x70]
	0x03A556E0 LDP X24, X23, [X31 + 0x60]
	0x03A556E4 LDP X26, X25, [X31 + 0x50]
	0x03A556E8 LDP X28, X27, [X31 + 0x40]
	0x03A556EC LDP X29, X30, [X31 + 0x30]
	0x03A556F0 ADD X31, X31, 0x90
	0x03A556F4 RET
	0x03A556F8 LDR X21, [X31 + 0x8]
	0x03A556FC LDR W8, [X21 + 0x30]

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+16], X30
	003 Move [X31+32], X26
	004 Move [X31+40], X25
	005 Move [X31+48], X24
	006 Move [X31+56], X23
	007 Move [X31+64], X22
	008 Move [X31+72], X21
	009 Move [X31+80], X20
	010 Move [X31+88], X19
	011 Move X21, 0x98E000
	012 Move W8, [X21+470]
	013 Move W20, W1
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {39}
	019 Move X0, 0x6A0000
	020 Move X0, [X0+3672]
	021 Call 0x1C17CF4
	022 Move X0, 0x702000
	023 Move X0, [X0+336]
	024 Call 0x1C17CF4
	025 Move X0, 0x702000
	026 Move X0, [X0+344]
	027 Call 0x1C17CF4
	028 Move X0, 0x6FE000
	029 Move X0, [X0+4048]
	030 Call 0x1C17CF4
	031 Move X0, 0x702000
	032 Move X0, [X0+352]
	033 Call 0x1C17CF4
	034 Move X0, 0x702000
	035 Move X0, [X0+360]
	036 Call 0x1C17CF4
	037 Move W8, 1
	038 Move [X21+470], W8
	039 Move X26, 0x702000
	040 Move X25, 0x6A0000
	041 Move W8, [X19+44]
	042 Move X26, [X26+336]
	043 Move X25, [X25+3672]
	044 Compare W8, 0
	045 JumpIfEqual {78}
	046 Move W0, [X19+32]
	047 Move W21, [X19+36]
	048 Move X1, X31
	049 Call Mathf.IsPowerOfTwo, X0
	050 Move TEMP, X0
	051 And TEMP, TEMP, 1
	052 Compare TEMP, 1
	053 JumpIfNotEqual {78}
	054 Move W0, W21
	055 Move X1, X31
	056 Call Mathf.IsPowerOfTwo, X0
	057 Move TEMP, X0
	058 And TEMP, TEMP, 1
	059 Compare TEMP, 1
	060 JumpIfNotEqual {78}
	061 Move X8, 0x702000
	062 Move W22, [X19+32]
	063 Move W23, [X19+40]
	064 Move X8, [X8+344]
	065 Move X0, [X8]
	066 Call 0x1C17F10
	067 Move X8, 0x702000
	068 Move X8, [X8+360]
	069 Move W2, 4
	070 Move W4, 1
	071 Move W6, 1
	072 Move X5, [X8]
	073 Move W1, W22
	074 Move W3, W23
	075 Move X7, X31
	076 Move X21, X0
	077 Call PowerOfTwoTextureAtlas..ctor, X0, X1, X2, X3, X4, X5, X6
	078 Move X8, 0x6FE000
	079 Move X8, [X8+4048]
	080 Move X21, 0x702000
	081 Move W23, [X19+32]
	082 Move W22, [X19+36]
	083 Move W24, [X19+40]
	084 Move X0, [X8]
	085 Move X21, [X21+352]
	086 Call 0x1C17F10
	087 Move X6, [X21]
	088 Move W4, 1
	089 Move W1, W23
	090 Move W2, W22
	091 Move W3, W24
	092 Move W5, W31
	093 Move W7, W31
	094 Move X21, X0
	095 Move [X31], X31
	096 Call Texture2DAtlas..ctor, X0, X1, X2, X3, X4, X5, X6, X7
	097 Move [X19+16], X21
	098 Move X0, [X26]
	099 Move W22, [X19+56]
	100 Call 0x1C17F10
	101 Move X1, X31
	102 Move X21, X0
	103 Call Object..ctor, X0
	104 Move X0, X21
	105 Move W1, W20
	106 Move [X21+20], W22
	107 Call LightCookieShaderData.Resize, X0, X1
	108 Move [X19+24], X21
	109 Move W8, [X19+48]
	110 Move X0, [X25]
	111 Add W1, W8, 1
	112 Call 0x1C17D6C
	113 Move X8, -49704960
	114 Move V0, [X8+2816]
	115 Move [X19+72], X0
	116 Move X22, [X31+64]
	117 Move X21, [X31+72]
	118 Move X24, [X31+48]
	119 Move X23, [X31+56]
	120 Move [X19+80], D0
	121 Move X20, [X31+80]
	122 Move X19, [X31+88]
	123 Move X26, [X31+32]
	124 Move X25, [X31+40]
	125 Move X30, [X31+16]
	126 Add X31, X31, 96
	127 Return 

Method: System.Boolean isInitialized()

Disassembly:
	0x03A55768 LDR X8, [X8]
	0x03A5576C STR X8, [X21 + 0x20]
	0x03A55770 LDR X8, [X20 + 0x18]
	0x03A55774 STR W8, [X31 + 0x2C]
	0x03A55778 BL 0x337B6E0
	0x03A5577C LDR W8, [X21 + 0x18]
	0x03A55780 CMP W8, 0x1
	0x03A55784 B.LS 0x3A55824

ISIL:
	001 Move X8, [X0+16]
	002 Compare X8, 0
	003 JumpIfEqual {8}
	004 Move X8, [X0+24]
	005 NotImplemented "Instruction CMP not yet implemented."
	006 NotImplemented "Instruction CSET not yet implemented."
	007 Return X0
	008 Move W0, W31
	009 Return X0

Method: System.Void Dispose()

Disassembly:
	0x03A55788 CMP W8, 0x2
	0x03A5578C STR X0, [X21 + 0x28]
	0x03A55790 B.EQ 0x3A55824
	0x03A55794 ADRP X8, 0x701000
	0x03A55798 LDR X8, [X8 + 0x1C8]
	0x03A5579C ORN W9, W31, W23, 0x0
	0x03A557A0 ADD W9, W9, W28
	0x03A557A4 ADD X0, X31, 0x2C
	0x03A557A8 LDR X8, [X8]
	0x03A557AC MOV X1, X31
	0x03A557B0 STR X8, [X21 + 0x30]
	0x03A557B4 STR W9, [X31 + 0x2C]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move X0, [X0+16]
	005 Compare X0, 0
	006 JumpIfEqual {9}
	007 Move X1, X31
	008 Call Texture2DAtlas.Release, X0
	009 Move X0, [X19+24]
	010 Compare X0, 0
	011 JumpIfEqual {14}
	012 Move X30, [X31+16]
	013 Move X19, [X31+24]
	014 Move X30, [X31+16]
	015 Move X19, [X31+24]
	016 Return 

Method: System.Int32 GetLightCookieShaderDataIndex(System.Int32 visibleLightIndex)

Disassembly:
	0x03A55804 CBNZ W9, 0x3A55810
	0x03A55808 MOV X0, X8
	0x03A5580C BL 0x1C16DFC
	0x03A55810 MOV X0, X20
	0x03A55814 MOV X1, X31
	0x03A55818 BL 0x3C06A04
	0x03A5581C B 0x3A556D4
	0x03A55820 BL 0x1C16F20
	0x03A55824 BL 0x1C16F28
	0x03A55828 STR X30, [X31 - 0x40]!
	0x03A5582C STP X24, X23, [X31 + 0x10]
	0x03A55830 STP X22, X21, [X31 + 0x20]
	0x03A55834 STP X20, X19, [X31 + 0x30]
	0x03A55838 ADRP X24, 0x98D000
	0x03A5583C ADRP X23, 0x6C9000
	0x03A55840 LDRB W8, [X24 + 0x1DB]
	0x03A55844 LDR X23, [X23 + 0xE40]
	0x03A55848 MOV X19, X3

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+16]
	003 Compare X8, 0
	004 JumpIfEqual {15}
	005 Move X8, [X0+24]
	006 Compare X8, 0
	007 JumpIfEqual {15}
	008 Move X8, [X0+72]
	009 Compare X8, 0
	010 JumpIfEqual {20}
	011 Move W9, [X8+24]
	012 NotImplemented "Instruction CMP not yet implemented."
	013 Add X8, X8, W1
	014 Move W0, [X8+32]
	015 Move TEMP, 0
	016 Not TEMP
	017 Move W0, TEMP
	018 Move X30, [X31+16]
	019 Return X0
	020 Call 0x1C17F20
	021 Call 0x1C17F28

Method: System.Void Setup(UnityEngine.Rendering.ScriptableRenderContext ctx, UnityEngine.Rendering.CommandBuffer cmd, ref UnityEngine.Rendering.Universal.LightData lightData)

Disassembly:
	0x03A5584C MOV X20, X2
	0x03A55850 MOV X21, X1
	0x03A55854 MOV X22, X0
	0x03A55858 TBNZ X8, 0x0, 0x3A5587C
	0x03A5585C ADRP X0, 0x6C9000
	0x03A55860 LDR X0, [X0 + 0xE40]
	0x03A55864 BL 0x1C16CF4
	0x03A55868 ADRP X0, 0x701000
	0x03A5586C LDR X0, [X0 + 0x1F0]
	0x03A55870 BL 0x1C16CF4
	0x03A55874 MOVZ W8, 0x1
	0x03A55878 STRB W8, [X24 + 0x1DB]
	0x03A5587C LDR X0, [X23]
	0x03A55880 ADRP X24, 0x701000
	0x03A55884 LDR W8, [X0 + 0xE0]
	0x03A55888 LDR X24, [X24 + 0x1F0]
	0x03A5588C CBNZ W8, 0x3A55898
	0x03A55890 BL 0x1C16DFC
	0x03A55894 LDR X0, [X23]
	0x03A55898 LDR X8, [X0 + 0xB8]
	0x03A5589C LDR X2, [X24]
	0x03A558A0 MOV X0, X20
	0x03A558A4 LDR X1, [X8]
	0x03A558A8 BL 0x28996BC
	0x03A558AC MOV X1, X20
	0x03A558B0 BL 0x3A55F08
	0x03A558B4 LDR X8, [X22 + 0x10]
	0x03A558B8 CBZ X8, 0x3A559A0
	0x03A558BC LDR X9, [X8 + 0x10]
	0x03A558C0 CBZ X9, 0x3A559A0
	0x03A558C4 LDP W10, W9, [X9 + 0xAC]
	0x03A558C8 UCVTF S0, W0
	0x03A558CC LDR W4, [X22 + 0x50]
	0x03A558D0 MOV W23, W0
	0x03A558D4 MUL W9, W9, W10
	0x03A558D8 SCVTF S1, W9
	0x03A558DC FDIV S0, S0, S1
	0x03A558E0 FSQRT S0, S0
	0x03A558E4 FMOV S1, 1
	0x03A558E8 MOVZ W9, 0x7F800000
	0x03A558EC FRINTP S0, S0
	0x03A558F0 FMAXNM S0, S0, S1
	0x03A558F4 FMOV S1, W9
	0x03A558F8 FCVTZS W9, S0
	0x03A558FC FCMP S0, S1
	0x03A55900 MOVZ W10, 0x80000000
	0x03A55904 CSEL W24, W10, W9, EQ
	0x03A55908 CMP W24, W4
	0x03A5590C B.GE 0x3A55930
	0x03A55910 LDR W9, [X22 + 0x54]
	0x03A55914 CMP W23, W9
	0x03A55918 B.CS 0x3A55930
	0x03A5591C MOV X0, X8
	0x03A55920 MOV X1, X31
	0x03A55924 BL 0x39D90C4
	0x03A55928 MOV W4, W24
	0x03A5592C STR W24, [X22 + 0x50]
	0x03A55930 MOV X0, X22
	0x03A55934 MOV X1, X21
	0x03A55938 MOV X2, X20
	0x03A5593C MOV X3, X19
	0x03A55940 BL 0x3A56030
	0x03A55944 CMP W0, 0x0
	0x03A55948 B.GT 0x3A5598C
	0x03A5594C LDR X0, [X22 + 0x10]
	0x03A55950 CBZ X0, 0x3A559A0
	0x03A55954 MOV X1, X31
	0x03A55958 BL 0x39D90C4
	0x03A5595C LDR W8, [X22 + 0x50]
	0x03A55960 MOV X0, X22
	0x03A55964 MOV X1, X21
	0x03A55968 MOV X2, X20
	0x03A5596C ADD W9, W8, 0x1
	0x03A55970 CMP W9, W24
	0x03A55974 CSINC W4, W24, W8, LE
	0x03A55978 MOV X3, X19
	0x03A5597C STP W4, W23, [X22 + 0x50]
	0x03A55980 BL 0x3A56030
	0x03A55984 CMP W0, 0x1
	0x03A55988 B.LT 0x3A5594C
	0x03A5598C LDP X20, X19, [X31 + 0x30]
	0x03A55990 LDP X22, X21, [X31 + 0x20]
	0x03A55994 LDP X24, X23, [X31 + 0x10]
	0x03A55998 LDR X30, [X31], #0x40
	0x03A5599C RET
	0x03A559A0 BL 0x1C16F20
	0x03A559A4 STP D9, D8, [X31 - 0x70]!
	0x03A559A8 STP X29, X30, [X31 + 0x10]
	0x03A559AC STP X28, X27, [X31 + 0x20]
	0x03A559B0 STP X26, X25, [X31 + 0x30]
	0x03A559B4 STP X24, X23, [X31 + 0x40]
	0x03A559B8 STP X22, X21, [X31 + 0x50]
	0x03A559BC STP X20, X19, [X31 + 0x60]
	0x03A559C0 SUB X31, X31, 0x2B0
	0x03A559C4 STP X2, X4, [X31 + 0x20]
	0x03A559C8 STR X3, [X31 + 0x18]
	0x03A559CC ADRP X20, 0x98D000
	0x03A559D0 ADRP X19, 0x701000
	0x03A559D4 LDRB W8, [X20 + 0x1E0]
	0x03A559D8 LDR X19, [X19 + 0x188]
	0x03A559DC MOV X21, X1
	0x03A559E0 MOV X22, X0
	0x03A559E4 TBNZ X8, 0x0, 0x3A55A44
	0x03A559E8 ADRP X0, 0x69F000
	0x03A559EC LDR X0, [X0 + 0xE58]
	0x03A559F0 BL 0x1C16CF4
	0x03A559F4 ADRP X0, 0x69E000
	0x03A559F8 LDR X0, [X0 + 0x5A8]
	0x03A559FC BL 0x1C16CF4
	0x03A55A00 ADRP X0, 0x701000
	0x03A55A04 LDR X0, [X0 + 0x1B8]
	0x03A55A08 BL 0x1C16CF4
	0x03A55A0C ADRP X0, 0x701000
	0x03A55A10 LDR X0, [X0 + 0x188]
	0x03A55A14 BL 0x1C16CF4
	0x03A55A18 ADRP X0, 0x701000
	0x03A55A1C LDR X0, [X0 + 0x1F8]
	0x03A55A20 BL 0x1C16CF4
	0x03A55A24 ADRP X0, 0x701000
	0x03A55A28 LDR X0, [X0 + 0x200]
	0x03A55A2C BL 0x1C16CF4
	0x03A55A30 ADRP X0, 0x701000
	0x03A55A34 LDR X0, [X0 + 0x1A0]
	0x03A55A38 BL 0x1C16CF4
	0x03A55A3C MOVZ W8, 0x1
	0x03A55A40 STRB W8, [X20 + 0x1E0]
	0x03A55A44 LDR X0, [X19]
	0x03A55A48 MOVI V0.2D, 0x0
	0x03A55A4C STR X31, [X31 + 0x2A8]
	0x03A55A50 STP V0, V0, [X31 + 0x280]
	0x03A55A54 STP V0, V0, [X31 + 0x260]
	0x03A55A58 STP V0, V0, [X31 + 0x240]
	0x03A55A5C STP V0, V0, [X31 + 0x220]
	0x03A55A60 LDR W8, [X0 + 0xE0]
	0x03A55A64 CBNZ W8, 0x3A55A70
	0x03A55A68 BL 0x1C16DFC
	0x03A55A6C LDR X0, [X19]
	0x03A55A70 LDR X8, [X22 + 0x10]
	0x03A55A74 CBZ X8, 0x3A55F04
	0x03A55A78 LDR X9, [X0 + 0xB8]
	0x03A55A7C LDR X0, [X8 + 0x10]
	0x03A55A80 ADD X8, X31, 0x170
	0x03A55A84 MOV X1, X31
	0x03A55A88 LDR W24, [X9 + 0xC]
	0x03A55A8C BL 0x39CDF64
	0x03A55A90 LDP V0, V1, [X31 + 0x170]
	0x03A55A94 LDR X8, [X31 + 0x190]
	0x03A55A98 STP V0, V1, [X31 + 0x1B0]
	0x03A55A9C STR X8, [X31 + 0x1D0]
	0x03A55AA0 CBZ X21, 0x3A55F04
	0x03A55AA4 LDP V0, V1, [X31 + 0x1B0]
	0x03A55AA8 LDR X8, [X31 + 0x1D0]
	0x03A55AAC ADD X2, X31, 0x1F0
	0x03A55AB0 MOV X0, X21

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+128], X30
	003 Move [X31+136], X23
	004 Move [X31+144], X22
	005 Move [X31+152], X21
	006 Move [X31+160], X20
	007 Move [X31+168], X19
	008 Move X23, 0x98E000
	009 Move X21, 0x700000
	010 Move W8, [X23+471]
	011 Move X21, [X21+168]
	012 Move X22, X3
	013 Move X19, X2
	014 Move X20, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {30}
	019 Move X0, 0x6C7000
	020 Move X0, [X0+2296]
	021 Call 0x1C17CF4
	022 Move X0, 0x700000
	023 Move X0, [X0+168]
	024 Call 0x1C17CF4
	025 Move X0, 0x702000
	026 Move X0, [X0+368]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X23+471], W8
	030 Move X1, [X21]
	031 NotImplemented "Instruction MOVI not yet implemented."
	032 Move W0, 13
	033 Move [X31+120], W31
	034 Move [X31+112], W31
	035 Move [X31+80], V0
	036 Move [X31+88], V0
	037 Move [X31+48], V0
	038 Move [X31+56], V0
	039 Move [X31+16], V0
	040 Move [X31+24], V0
	041 Move [X31], V0
	042 Call 0x2236BC0, X0
	043 Move X2, X0
	044 Add X0, X31, 120
	045 Move X1, X19
	046 Move X3, X31
	047 Call ProfilingScope..ctor, X0, X1, X2
	048 Move W8, [X22]
	049 Move TEMP, X8
	050 And TEMP, TEMP, -2147483648
	051 Compare TEMP, -2147483648
	052 JumpIfEqual {64}
	053 Move X9, [X22+16]
	054 Move W10, 116
	055 Add X0, X31, 0
	056 Move W2, 116
	057 NotImplemented "Instruction MADD not yet implemented."
	058 Call 0x3EB2B30
	059 Add X2, X31, 0
	060 Move X0, X20
	061 Move X1, X19
	062 Call LightCookieManager.SetupMainLight, X0, X1, X2
	063 Move W21, W0
	064 Move W21, W31
	065 Move W8, [X22+4]
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Move X0, X20
	068 Move X1, X19
	069 Move X2, X22
	070 Call LightCookieManager.SetupAdditionalLights, X0, X1, X2
	071 Move TEMP, X0
	072 And TEMP, TEMP, 1
	073 Compare TEMP, 1
	074 JumpIfNotEqual {76}
	075 Move W8, 1
	076 Move X9, [X20+72]
	077 Move X8, [X20+24]
	078 Compare X9, 0
	079 JumpIfEqual {117}
	080 Compare X8, 0
	081 JumpIfEqual {151}
	082 Move W10, [X8+80]
	083 Compare W10, 0
	084 JumpIfEqual {119}
	085 Move X10, [X9+24]
	086 NotImplemented "Instruction CMP not yet implemented."
	087 Move X11, -49717248
	088 And X10, X10, 0
	089 Move V0, [X11+121]
	090 Add X12, X10, 1
	091 Subtract X13, X10, 1
	092 And X10, X12, 0
	093 Move W12, 2
	094 Add X9, X9, 36
	095 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	096 Move TEMP, 0
	097 Not TEMP
	098 Move W11, TEMP
	099 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	100 NotImplemented "Instruction INVALID not yet implemented."
	101 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	102 Move W12, S3
	103 Move TEMP, X12
	104 And TEMP, TEMP, 1
	105 Compare TEMP, 1
	106 JumpIfNotEqual {108}
	107 Move [X9-4], W11
	108 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	109 Move TEMP, X12
	110 And TEMP, TEMP, 1
	111 Compare TEMP, 1
	112 Invalid "Jump target not found in method."
	113 Move [X9], W11
	114 NotImplemented "Instruction INVALID not yet implemented."
	115 Subtract X10, X10, 2
	116 Add X9, X9, 8
	117 Compare X8, 0
	118 JumpIfEqual {123}
	119 Move X0, X8
	120 Move X1, X19
	121 Call LightCookieShaderData.Clear, X0, X1
	122 Move W8, W31
	123 Move X9, 0x6C7000
	124 Move X9, [X9+2296]
	125 Or W8, W21, W8
	126 And W21, W8, 1
	127 Move [X20+92], W21
	128 Move X0, [X9]
	129 Move W8, [X0+224]
	130 Compare W8, 0
	131 JumpIfNotEqual {133}
	132 Call 0x1C17DFC
	133 Move X8, 0x702000
	134 Move X8, [X8+368]
	135 Move X1, [X8]
	136 Move X0, X19
	137 Move W2, W21
	138 Move X3, X31
	139 Call CoreUtils.SetKeyword, X0, X1, X2
	140 Add X0, X31, 120
	141 Move X1, X31
	142 Call ProfilingScope.Dispose, X0
	143 Move X20, [X31+160]
	144 Move X19, [X31+168]
	145 Move X22, [X31+144]
	146 Move X21, [X31+152]
	147 Move X30, [X31+128]
	148 Move X23, [X31+136]
	149 Add X31, X31, 176
	150 Return 
	151 Call 0x1C17F20
	152 Move X19, X0
	153 NotImplemented "Instruction CMP not yet implemented."
	154 Move X0, X19
	155 Call 0x3EB2AD0
	156 Move X20, [X0]
	157 Call 0x3EB2AE0
	158 Add X0, X31, 120
	159 Move X1, X31
	160 Call ProfilingScope.Dispose, X0
	161 Compare X20, 0
	162 JumpIfEqual {143}
	163 Move X0, X20
	164 Call 0x1C17F18
	165 Move X20, X31
	166 Move X19, X0
	167 Add X0, X31, 120
	168 Move X1, X31
	169 Call ProfilingScope.Dispose, X0
	170 Compare X20, 0
	171 JumpIfNotEqual {174}
	172 Move X0, X19
	173 Call 0x1D2D690
	174 Move X0, X20
	175 Call 0x1C17F18
	176 Call 0x1991590

Method: System.Boolean SetupMainLight(UnityEngine.Rendering.CommandBuffer cmd, ref UnityEngine.Rendering.VisibleLight visibleMainLight)

Disassembly:
	0x03A55AB4 MOV W1, W24
	0x03A55AB8 MOV X3, X31
	0x03A55ABC STP V0, V1, [X31 + 0x1F0]
	0x03A55AC0 STR X8, [X31 + 0x210]
	0x03A55AC4 BL 0x3C4FCFC
	0x03A55AC8 LDR X8, [X22 + 0x10]
	0x03A55ACC CBZ X8, 0x3A55F04
	0x03A55AD0 LDR X8, [X8 + 0x10]
	0x03A55AD4 CBZ X8, 0x3A55F04
	0x03A55AD8 LDR X0, [X8 + 0x18]
	0x03A55ADC CBZ X0, 0x3A55F04
	0x03A55AE0 LDR X8, [X19]
	0x03A55AE4 MOV X1, X31
	0x03A55AE8 LDR X8, [X8 + 0xB8]
	0x03A55AEC LDR W24, [X8 + 0x10]
	0x03A55AF0 BL 0x3C201A0
	0x03A55AF4 MOV W1, W0
	0x03A55AF8 BL 0x3A550E4
	0x03A55AFC SCVTF S0, W0
	0x03A55B00 MOV X0, X21
	0x03A55B04 MOV W1, W24
	0x03A55B08 MOV X2, X31
	0x03A55B0C BL 0x3C4CDDC
	0x03A55B10 LDR X24, [X22 + 0x48]
	0x03A55B14 CBZ X24, 0x3A55F04
	0x03A55B18 LDR X8, [X31 + 0x20]
	0x03A55B1C LDR W1, [X8 + 0x18]
	0x03A55B20 LDR W8, [X24 + 0x18]
	0x03A55B24 CMP W1, W8
	0x03A55B28 B.LE 0x3A55B48
	0x03A55B2C ADRP X8, 0x69F000
	0x03A55B30 LDR X8, [X8 + 0xE58]
	0x03A55B34 LDR X0, [X8]
	0x03A55B38 BL 0x1C16D6C
	0x03A55B3C MOV X24, X0
	0x03A55B40 STR X0, [X22 + 0x48]
	0x03A55B44 CBZ X0, 0x3A55F04
	0x03A55B48 ADRP X8, 0x69E000
	0x03A55B4C LDR X8, [X8 + 0x5A8]
	0x03A55B50 LDR X9, [X31 + 0x20]
	0x03A55B54 LDR X0, [X8]
	0x03A55B58 LDR W25, [X9 + 0x18]
	0x03A55B5C LDR W8, [X0 + 0xE0]
	0x03A55B60 CBNZ W8, 0x3A55B68
	0x03A55B64 BL 0x1C16DFC
	0x03A55B68 LDR W0, [X24 + 0x18]
	0x03A55B6C MOV W1, W25
	0x03A55B70 MOV X2, X31
	0x03A55B74 BL 0x337EE94
	0x03A55B78 CMP W0, 0x1
	0x03A55B7C B.LT 0x3A55BB4
	0x03A55B80 LDR X11, [X22 + 0x48]
	0x03A55B84 CBZ X11, 0x3A55F04
	0x03A55B88 LDR W9, [X11 + 0x18]
	0x03A55B8C MOV X8, X31
	0x03A55B90 MOV W10, W0
	0x03A55B94 ADD X11, X11, 0x20
	0x03A55B98 MOVN W12, 0x0
	0x03A55B9C CMP X8, X9
	0x03A55BA0 B.CS 0x3A55F00
	0x03A55BA4 STR W12, [X11, X8, LSL #2]
	0x03A55BA8 ADD X8, X8, 0x1
	0x03A55BAC CMP X10, X8
	0x03A55BB0 B.NE 0x3A55B9C
	0x03A55BB4 LDR X0, [X22 + 0x18]
	0x03A55BB8 CBZ X0, 0x3A55F04
	0x03A55BBC LDR W1, [X22 + 0x30]
	0x03A55BC0 BL 0x3A5689C
	0x03A55BC4 LDR X8, [X22 + 0x18]
	0x03A55BC8 CBZ X8, 0x3A55F04
	0x03A55BCC LDR X28, [X8 + 0x30]
	0x03A55BD0 LDP X29, X24, [X8 + 0x18]
	0x03A55BD4 STR X21, [X31 + 0x8]
	0x03A55BD8 STR X28, [X31 + 0x2A8]
	0x03A55BDC CBZ X24, 0x3A55F04
	0x03A55BE0 LDR W2, [X24 + 0x18]
	0x03A55BE4 LDR X19, [X8 + 0x28]
	0x03A55BE8 MOV X0, X24
	0x03A55BEC MOV W1, W31
	0x03A55BF0 MOV X3, X31
	0x03A55BF4 BL 0x339FA34
	0x03A55BF8 ADD X0, X31, 0x2A8
	0x03A55BFC BL 0x3A56A78
	0x03A55C00 LDR X8, [X31 + 0x28]
	0x03A55C04 LDR W8, [X8 + 0xC]
	0x03A55C08 CMP W8, 0x1
	0x03A55C0C B.LT 0x3A55ECC
	0x03A55C10 ADRP X8, 0xFFFFFFFFFD095000
	0x03A55C14 LDR V8, [X8 + 0x410]
	0x03A55C18 MOV W25, W31
	0x03A55C1C ADD X8, X28, 0x20
	0x03A55C20 STR X8, [X31 + 0x10]
	0x03A55C24 ADRP X21, 0x701000
	0x03A55C28 LDR X21, [X21 + 0x200]
	0x03A55C2C LDR X20, [X31 + 0x18]
	0x03A55C30 MOV W1, W25
	0x03A55C34 LDR X2, [X21]
	0x03A55C38 MOV X0, X20
	0x03A55C3C BL 0x2899620
	0x03A55C40 LDR X2, [X21]
	0x03A55C44 MOV X27, X0
	0x03A55C48 MOV X0, X20
	0x03A55C4C MOV W1, W25
	0x03A55C50 BL 0x2899620
	0x03A55C54 LDR X8, [X22 + 0x48]
	0x03A55C58 CBZ X8, 0x3A55F04
	0x03A55C5C LDR W9, [X8 + 0x18]
	0x03A55C60 AND W2, W27, 0xFFFF
	0x03A55C64 CMP W2, W9
	0x03A55C68 B.CS 0x3A55F00
	0x03A55C6C UBFM X23, X0, 0x10, 0x1F
	0x03A55C70 ADD X8, X8, W2, 0x2, UXTW
	0x03A55C74 STR W23, [X8 + 0x20]
	0x03A55C78 LDR X8, [X31 + 0x20]
	0x03A55C7C MOV X26, X0
	0x03A55C80 LDP X0, X1, [X8 + 0x10]
	0x03A55C84 ADRP X8, 0x701000
	0x03A55C88 LDR X8, [X8 + 0x1B8]
	0x03A55C8C LDR X3, [X8]
	0x03A55C90 BL 0x22222C0
	0x03A55C94 MOV X1, X31
	0x03A55C98 MOV X27, X0
	0x03A55C9C BL 0x3C5BC7C
	0x03A55CA0 CBZ X19, 0x3A55F04
	0x03A55CA4 LDR W8, [X19 + 0x18]
	0x03A55CA8 CMP W23, W8
	0x03A55CAC B.CS 0x3A55F00
	0x03A55CB0 MOV W20, W23
	0x03A55CB4 SCVTF S0, W0
	0x03A55CB8 ADD X8, X19, X20, 0x2, LSL
	0x03A55CBC STR S0, [X8 + 0x20]
	0x03A55CC0 ADD X8, X31, 0x1B0
	0x03A55CC4 MOV X0, X27
	0x03A55CC8 MOV X1, X31
	0x03A55CCC BL 0x3C5BC90
	0x03A55CD0 LDP V0, V1, [X31 + 0x1B0]
	0x03A55CD4 LDP V2, V3, [X31 + 0x1D0]
	0x03A55CD8 ADD X8, X31, 0x170
	0x03A55CDC ADD X0, X31, 0x260
	0x03A55CE0 MOV X1, X31
	0x03A55CE4 STP V0, V1, [X31 + 0x260]
	0x03A55CE8 STP V2, V3, [X31 + 0x280]
	0x03A55CEC BL 0x3C271CC
	0x03A55CF0 LDP V0, V1, [X31 + 0x170]
	0x03A55CF4 LDP V2, V3, [X31 + 0x190]
	0x03A55CF8 STP V0, V1, [X31 + 0x1B0]
	0x03A55CFC STP V2, V3, [X31 + 0x1D0]
	0x03A55D00 CBZ X29, 0x3A55F04
	0x03A55D04 LDP V0, V1, [X31 + 0x1B0]
	0x03A55D08 LDP V2, V3, [X31 + 0x1D0]
	0x03A55D0C STP V0, V1, [X31 + 0x130]
	0x03A55D10 STP V2, V3, [X31 + 0x150]
	0x03A55D14 LDR W8, [X29 + 0x18]
	0x03A55D18 CMP W23, W8
	0x03A55D1C B.CS 0x3A55F00
	0x03A55D20 LDP V0, V1, [X31 + 0x150]
	0x03A55D24 LDP V2, V3, [X31 + 0x130]
	0x03A55D28 ADD X21, X29, X20, 0x6, LSL
	0x03A55D2C ADRP X8, 0x701000
	0x03A55D30 STP V0, V1, [X21 + 0x40]
	0x03A55D34 STP V2, V3, [X21 + 0x20]
	0x03A55D38 LDR X8, [X8 + 0x1F8]
	0x03A55D3C LDR X0, [X31 + 0x28]
	0x03A55D40 MOV W1, W25
	0x03A55D44 LDR X2, [X8]
	0x03A55D48 BL 0x2898FC8
	0x03A55D4C LDR W8, [X24 + 0x18]
	0x03A55D50 CMP W23, W8
	0x03A55D54 B.CS 0x3A55F00
	0x03A55D58 ADD X8, X24, X20, 0x4, LSL
	0x03A55D5C STP S0, S1, [X8 + 0x20]
	0x03A55D60 STP S2, S3, [X8 + 0x28]
	0x03A55D64 CBZ X28, 0x3A55D7C
	0x03A55D68 LDR W8, [X28 + 0x18]
	0x03A55D6C CMP W8, 0x0
	0x03A55D70 LDR X8, [X31 + 0x10]
	0x03A55D74 CSEL X8, X31, X8, EQ
	0x03A55D78 B 0x3A55D80
	0x03A55D7C MOV X8, X31
	0x03A55D80 UBFM X9, X26, 0x13, 0x3F
	0x03A55D84 AND X9, X9, 0x1FFF
	0x03A55D88 LDR W10, [X8, X9, LSL]
	0x03A55D8C UBFM X11, X26, 0x10, 0x3F
	0x03A55D90 MOVZ W12, 0x1
	0x03A55D94 LSLV W11, W12, W11
	0x03A55D98 ORR W10, W10, W11, 0x0
	0x03A55D9C MOV X0, X27
	0x03A55DA0 MOV X1, X31
	0x03A55DA4 STR W10, [X8, X9, LSL]
	0x03A55DA8 BL 0x3C5BC7C
	0x03A55DAC CBNZ W0, 0x3A55EB8
	0x03A55DB0 MOV X0, X27
	0x03A55DB4 MOV X1, X31
	0x03A55DB8 BL 0x3C5BCB4
	0x03A55DBC MOV X0, X27
	0x03A55DC0 MOV X1, X31
	0x03A55DC4 MOV V9.16B, V0.16B
	0x03A55DC8 BL 0x3C5BCAC
	0x03A55DCC MOV V3.16B, V0.16B
	0x03A55DD0 ADD X8, X31, 0x1B0
	0x03A55DD4 FMOV S1, 1
	0x03A55DD8 MOV V0.16B, V9.16B
	0x03A55DDC MOV V2.16B, V8.16B
	0x03A55DE0 MOV X0, X31
	0x03A55DE4 BL 0x3C274AC
	0x03A55DE8 LDP V0, V1, [X31 + 0x1B0]
	0x03A55DEC LDP V2, V3, [X31 + 0x1D0]
	0x03A55DF0 ADD X0, X31, 0x220
	0x03A55DF4 MOVZ W1, 0x2
	0x03A55DF8 MOV X2, X31
	0x03A55DFC STP V0, V1, [X31 + 0x220]
	0x03A55E00 STP V2, V3, [X31 + 0x240]
	0x03A55E04 BL 0x3C27C24
	0x03A55E08 FNEG S0, S0
	0x03A55E0C FNEG S1, S1
	0x03A55E10 FNEG S2, S2
	0x03A55E14 FNEG S3, S3
	0x03A55E18 ADD X0, X31, 0x220
	0x03A55E1C MOVZ W1, 0x2
	0x03A55E20 MOV X2, X31
	0x03A55E24 BL 0x3C28180
	0x03A55E28 LDP V0, V1, [X31 + 0x220]
	0x03A55E2C LDP V2, V3, [X31 + 0x240]
	0x03A55E30 STP V0, V1, [X31 + 0x1B0]
	0x03A55E34 STP V2, V3, [X31 + 0x1D0]
	0x03A55E38 LDR W8, [X29 + 0x18]
	0x03A55E3C CMP W23, W8
	0x03A55E40 B.CS 0x3A55F00
	0x03A55E44 ADD X20, X21, 0x20
	0x03A55E48 LDP V2, V3, [X20]
	0x03A55E4C LDP V4, V5, [X20 + 0x20]
	0x03A55E50 LDP V0, V1, [X31 + 0x1B0]
	0x03A55E54 ADD X8, X31, 0xF0
	0x03A55E58 STP V2, V3, [X31 + 0x170]
	0x03A55E5C STP V4, V5, [X31 + 0x190]
	0x03A55E60 STP V0, V1, [X31 + 0xB0]
	0x03A55E64 LDP V0, V1, [X31 + 0x1D0]
	0x03A55E68 LDP V2, V3, [X31 + 0x190]
	0x03A55E6C LDP V4, V5, [X31 + 0x170]
	0x03A55E70 ADD X0, X31, 0xB0
	0x03A55E74 ADD X1, X31, 0x70
	0x03A55E78 MOV X2, X31
	0x03A55E7C STP V0, V1, [X31 + 0xD0]
	0x03A55E80 STP V2, V3, [X31 + 0x90]
	0x03A55E84 STP V4, V5, [X31 + 0x70]
	0x03A55E88 BL 0x3C27F74
	0x03A55E8C LDP V0, V1, [X31 + 0xF0]
	0x03A55E90 LDP V2, V3, [X31 + 0x110]
	0x03A55E94 STP V0, V1, [X31 + 0x30]
	0x03A55E98 STP V2, V3, [X31 + 0x50]
	0x03A55E9C LDR W8, [X29 + 0x18]
	0x03A55EA0 CMP W23, W8
	0x03A55EA4 B.CS 0x3A55F00
	0x03A55EA8 LDP V1, V0, [X31 + 0x50]
	0x03A55EAC LDP V3, V2, [X31 + 0x30]
	0x03A55EB0 STP V1, V0, [X20 + 0x20]
	0x03A55EB4 STP V3, V2, [X20]
	0x03A55EB8 LDR X8, [X31 + 0x28]
	0x03A55EBC ADD W25, W25, 0x1
	0x03A55EC0 LDR W8, [X8 + 0xC]

ISIL:
	001 Move [X31-80], D8
	002 Move [X31+8], X29
	003 Move [X31+16], X30
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Subtract X31, X31, 912
	012 Move X20, 0x98E000
	013 Move W8, [X20+472]
	014 Move X22, X2
	015 Move X19, X1
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {34}
	020 Move X0, 0x702000
	021 Move X0, [X0+376]
	022 Call 0x1C17CF4
	023 Move X0, 0x702000
	024 Move X0, [X0+384]
	025 Call 0x1C17CF4
	026 Move X0, 0x69F000
	027 Move X0, [X0+1432]
	028 Call 0x1C17CF4
	029 Move X0, 0x702000
	030 Move X0, [X0+392]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X20+472], W8
	034 NotImplemented "Instruction MOVI not yet implemented."
	035 Move X0, X22
	036 Move X1, X31
	037 Move [X31+840], X31
	038 Move [X31+880], V0
	039 Move [X31+888], V0
	040 Move [X31+848], V0
	041 Move [X31+856], V0
	042 Move [X31+800], V0
	043 Move [X31+808], V0
	044 Move [X31+768], V0
	045 Move [X31+776], V0
	046 Move [X31+736], V0
	047 Move [X31+744], V0
	048 Move [X31+704], V0
	049 Move [X31+712], V0
	050 Call VisibleLight.get_light, X0
	051 Compare X0, 0
	052 JumpIfEqual {345}
	053 Move X20, 0x69F000
	054 Move X20, [X20+1432]
	055 Move X1, X31
	056 Move X24, X0
	057 Call Light.get_cookie, X0
	058 Move X8, [X20]
	059 Move X21, X0
	060 Move W9, [X8+224]
	061 Compare W9, 0
	062 JumpIfNotEqual {65}
	063 Move X0, X8
	064 Call 0x1C17DFC
	065 Move X0, X21
	066 Move X1, X31
	067 Move X2, X31
	068 Call Object.op_Inequality, X0, X1
	069 Move W20, W0
	070 Move TEMP, X0
	071 And TEMP, TEMP, 1
	072 Compare TEMP, 1
	073 JumpIfNotEqual {262}
	074 Move X23, 0x984000
	075 Move W8, [X23+2752]
	076 Compare W8, 0
	077 JumpIfNotEqual {83}
	078 Move X0, 0x6A3000
	079 Move X0, [X0+624]
	080 Call 0x1C17CF4
	081 Move W8, 1
	082 Move [X23+2752], W8
	083 Move X8, 0x6A3000
	084 Move X8, [X8+624]
	085 Move X8, [X8]
	086 Move X8, [X8+184]
	087 Move V1, [X8+96]
	088 Move V0, [X8+112]
	089 Move V2, [X8+64]
	090 Move V3, [X8+80]
	091 Move [X31+880], V1
	092 Move [X31+888], V0
	093 Move [X31+848], V2
	094 Move [X31+856], V3
	095 Compare X21, 0
	096 JumpIfEqual {345}
	097 Move X8, [X21]
	098 Move X0, X21
	099 Move X9, [X8+376]
	100 Move X1, [X8+384]
	101 NotImplemented "Instruction BLR not yet implemented."
	102 Move W1, W0
	103 Call LightCookieManager.GetLightCookieShaderFormat, X0, X1
	104 Move X8, 0x702000
	105 Move X8, [X8+376]
	106 Move W23, W0
	107 Add X1, X31, 840
	108 Move X0, X24
	109 Move X2, [X8]
	110 Call 0x21A5990, X0, X1
	111 Move TEMP, X0
	112 And TEMP, TEMP, 1
	113 Compare TEMP, 1
	114 JumpIfNotEqual {118}
	115 Add X1, X31, 840
	116 Add X2, X31, 848
	117 Call LightCookieManager.GetLightUVScaleOffset, X0, X1, X2
	118 Move X24, 0x702000
	119 Move X24, [X24+384]
	120 Move X0, [X24]
	121 Move W8, [X0+224]
	122 Compare W8, 0
	123 JumpIfNotEqual {126}
	124 Call 0x1C17DFC
	125 Move X0, [X24]
	126 Move X8, [X0+184]
	127 Move V0, [X31+848]
	128 Move V1, [X31+864]
	129 Move V2, [X31+880]
	130 Move V3, [X31+896]
	131 Add X0, X31, 448
	132 Move V4, [X8]
	133 Move V5, [X8+16]
	134 Move V6, [X8+32]
	135 Move V7, [X8+48]
	136 Move [X31+384], V0
	137 Move [X31+392], V1
	138 Move [X31+416], V2
	139 Move [X31+424], V3
	140 Move [X31+640], V4
	141 Move [X31+648], V5
	142 Move [X31+672], V6
	143 Move [X31+680], V7
	144 Move V0, [X31+672]
	145 Move V1, [X31+688]
	146 Move V2, [X31+640]
	147 Move V3, [X31+656]
	148 Add X8, X31, 512
	149 Add X1, X31, 384
	150 Move X2, X31
	151 Add X24, X31, 216
	152 Move [X31+480], V0
	153 Move [X31+488], V1
	154 Move [X31+448], V2
	155 Move [X31+456], V3
	156 Call Matrix4x4.op_Multiply, X0, X1
	157 Move V0, [X31+512]
	158 Move V1, [X31+528]
	159 Move V2, [X31+544]
	160 Move V3, [X31+560]
	161 Add X8, X31, 512
	162 Move X0, X22
	163 Move X1, X31
	164 Move [X31+576], V0
	165 Move [X31+584], V1
	166 Move [X31+608], V2
	167 Move [X31+616], V3
	168 Call VisibleLight.get_localToWorldMatrix, X0
	169 Move V0, [X31+512]
	170 Move V1, [X31+528]
	171 Move V2, [X31+544]
	172 Move V3, [X31+560]
	173 Add X8, X31, 512
	174 Add X0, X31, 704
	175 Move X1, X31
	176 Move [X31+704], V0
	177 Move [X31+712], V1
	178 Move [X31+736], V2
	179 Move [X31+744], V3
	180 Call Matrix4x4.get_inverse, X0
	181 Move V0, [X31+512]
	182 Move V1, [X31+528]
	183 Move V2, [X31+544]
	184 Move V3, [X31+560]
	185 Add X8, X31, 512
	186 Add X0, X31, 320
	187 Move [X31+256], V0
	188 Move [X31+264], V1
	189 Move V0, [X31+576]
	190 Move V1, [X31+592]
	191 Move [X31+288], V2
	192 Move [X31+296], V3
	193 Move V2, [X31+608]
	194 Move V3, [X31+624]
	195 Add X1, X31, 256
	196 Move X2, X31
	197 Move [X31+320], V0
	198 Move [X31+328], V1
	199 Move [X31+352], V2
	200 Move [X31+360], V3
	201 Call Matrix4x4.op_Multiply, X0, X1
	202 Move X25, 0x702000
	203 Move V0, [X31+512]
	204 Move V1, [X31+528]
	205 Move V2, [X31+544]
	206 Move V3, [X31+560]
	207 Move X25, [X25+392]
	208 Move [X31+768], V0
	209 Move [X31+776], V1
	210 Move [X31+800], V2
	211 Move [X31+808], V3
	212 Move X0, [X25]
	213 Move W8, [X0+224]
	214 Compare W8, 0
	215 JumpIfNotEqual {218}
	216 Call 0x1C17DFC
	217 Move X0, [X25]
	218 Move X8, [X0+184]
	219 Move X0, X21
	220 Move X1, X31
	221 Move W22, [X8]
	222 Add X8, X31, 216
	223 Call RenderTargetIdentifier.op_Implicit, X0
	224 Move V0, [X24]
	225 Move V1, [X24+16]
	226 Move X8, [X31+248]
	227 Move [X31+512], V0
	228 Move [X31+520], V1
	229 Move [X31+544], X8
	230 Compare X19, 0
	231 JumpIfEqual {345}
	232 Move V0, [X31+512]
	233 Move V1, [X31+528]
	234 Move X8, [X31+544]
	235 Add X2, X31, 176
	236 Move X0, X19
	237 Move W1, W22
	238 Move X3, X31
	239 NotImplemented "Instruction SCVTF not yet implemented."
	240 Move [X31+176], V0
	241 Move [X31+184], V1
	242 Move [X31+208], X8
	243 Call CommandBuffer.SetGlobalTexture, X0, X1, X2
	244 Move X8, [X25]
	245 Move V0, [X31+768]
	246 Move V1, [X31+784]
	247 Move V2, [X31+800]
	248 Move V3, [X31+816]
	249 Add X2, X31, 112
	250 Move X8, [X8+184]
	251 Move X0, X19
	252 Move X3, X31
	253 Move W1, [X8+4]
	254 Move [X31+112], V0
	255 Move [X31+120], V1
	256 Move [X31+144], V2
	257 Move [X31+152], V3
	258 Call CommandBuffer.SetGlobalMatrix, X0, X1, X2
	259 Move X8, [X25]
	260 Move X0, X19
	261 Move V0, V8
	262 Move X22, 0x702000
	263 Move X22, [X22+392]
	264 Move X0, [X22]
	265 Move W8, [X0+224]
	266 Compare W8, 0
	267 JumpIfNotEqual {270}
	268 Call 0x1C17DFC
	269 Move X0, [X22]
	270 Move X8, [X0+184]
	271 Move X0, X31
	272 Move W21, [X8]
	273 Call Texture2D.get_whiteTexture
	274 Add X8, X31, 576
	275 Move X1, X31
	276 Call RenderTargetIdentifier.op_Implicit, X0
	277 Move V0, [X31+576]
	278 Move V1, [X31+592]
	279 Move X8, [X31+608]
	280 Move [X31+640], V0
	281 Move [X31+648], V1
	282 Move [X31+672], X8
	283 Compare X19, 0
	284 JumpIfEqual {345}
	285 Move V0, [X31+640]
	286 Move V1, [X31+656]
	287 Move X8, [X31+672]
	288 Add X2, X31, 64
	289 Move X0, X19
	290 Move W1, W21
	291 Move X3, X31
	292 Move [X31+64], V0
	293 Move [X31+72], V1
	294 Move [X31+96], X8
	295 Call CommandBuffer.SetGlobalTexture, X0, X1, X2
	296 Move X8, [X22]
	297 Move X23, 0x984000
	298 Move W9, [X23+2752]
	299 Move X8, [X8+184]
	300 Move W21, [X8+4]
	301 Compare W9, 0
	302 JumpIfNotEqual {308}
	303 Move X0, 0x6A3000
	304 Move X0, [X0+624]
	305 Call 0x1C17CF4
	306 Move W8, 1
	307 Move [X23+2752], W8
	308 Move X8, 0x6A3000
	309 Move X8, [X8+624]
	310 Add X2, X31, 0
	311 Move X0, X19
	312 Move W1, W21
	313 Move X8, [X8]
	314 Move X3, X31
	315 Move X8, [X8+184]
	316 Move V1, [X8+96]
	317 Move V0, [X8+112]
	318 Move V2, [X8+64]
	319 Move V3, [X8+80]
	320 Move [X31+32], V1
	321 Move [X31+40], V0
	322 Move [X31], V2
	323 Move [X31+8], V3
	324 Call CommandBuffer.SetGlobalMatrix, X0, X1, X2
	325 Move X8, [X22]
	326 Move S0, -1
	327 Move X0, X19
	328 Move X8, [X8+184]
	329 Move W1, [X8+8]
	330 Move X2, X31
	331 Call CommandBuffer.SetGlobalFloat, X0, X1, V0
	332 And W0, W20, 1
	333 Add X31, X31, 912
	334 Move X20, [X31+64]
	335 Move X19, [X31+72]
	336 Move X22, [X31+48]
	337 Move X21, [X31+56]
	338 Move X24, [X31+32]
	339 Move X23, [X31+40]
	340 Move X30, [X31+16]
	341 Move X25, [X31+24]
	342 Move X29, [X31+8]
	343 Move V8, [X31+80]
	344 Return X0
	345 Call 0x1C17F20

Method: UnityEngine.Rendering.Universal.LightCookieManager/LightCookieShaderFormat GetLightCookieShaderFormat(UnityEngine.Experimental.Rendering.GraphicsFormat cookieFormat)

Disassembly:
	0x03A560E4 MOV X0, X22
	0x03A560E8 MOV W1, W20
	0x03A560EC BL 0x2899620
	0x03A560F0 CBZ X1, 0x3A56280
	0x03A560F4 MOV X0, X1
	0x03A560F8 MOV X1, X31
	0x03A560FC BL 0x3C16C80
	0x03A56100 LDRB W8, [X29 + 0xE5A]
	0x03A56104 MOV X26, X0
	0x03A56108 CBNZ W8, 0x3A5611C
	0x03A5610C MOV X0, X25
	0x03A56110 BL 0x1C16CF4
	0x03A56114 MOVZ W8, 0x1
	0x03A56118 STRB W8, [X29 + 0xE5A]
	0x03A5611C CBZ X26, 0x3A56280
	0x03A56120 LDR X8, [X26]
	0x03A56124 MOV X0, X26
	0x03A56128 LDP X9, X1, [X8 + 0x1C8]
	0x03A5612C BLR X9
	0x03A56130 CMP W0, 0x4
	0x03A56134 B.NE 0x3A56150
	0x03A56138 MOV X0, X24
	0x03A5613C MOV X1, X23
	0x03A56140 MOV X2, X26
	0x03A56144 MOV W3, W19
	0x03A56148 BL 0x3A56288
	0x03A5614C B 0x3A56164
	0x03A56150 MOV X0, X24
	0x03A56154 MOV X1, X23
	0x03A56158 MOV X2, X26
	0x03A5615C MOV W3, W19
	0x03A56160 BL 0x3A563EC
	0x03A56164 LDRB W8, [X29 + 0xE5A]
	0x03A56168 MOV V8.16B, V0.16B
	0x03A5616C MOV V9.16B, V1.16B
	0x03A56170 MOV V10.16B, V2.16B
	0x03A56174 MOV V11.16B, V3.16B
	0x03A56178 CBNZ W8, 0x3A5618C
	0x03A5617C MOV X0, X25
	0x03A56180 BL 0x1C16CF4
	0x03A56184 MOVZ W8, 0x1
	0x03A56188 STRB W8, [X29 + 0xE5A]
	0x03A5618C LDR X8, [X25]
	0x03A56190 LDR X8, [X8 + 0xB8]
	0x03A56194 LDP S0, S1, [X8]
	0x03A56198 LDP S2, S3, [X8 + 0x8]
	0x03A5619C FSUB S0, S8, S0
	0x03A561A0 FSUB S1, S9, S1
	0x03A561A4 FSUB S2, S10, S2
	0x03A561A8 FMUL S0, S0, S0
	0x03A561AC FMUL S1, S1, S1
	0x03A561B0 FSUB S3, S11, S3
	0x03A561B4 FMUL S2, S2, S2

ISIL:
	001 NotImplemented "Instruction CMP not yet implemented."
	002 NotImplemented "Instruction CMP not yet implemented."
	003 NotImplemented "Instruction CMP not yet implemented."
	004 Subtract W8, W1, 102
	005 NotImplemented "Instruction CMP not yet implemented."
	006 Move W0, W31
	007 Move W9, 1
	008 NotImplemented "Instruction LSLV not yet implemented."
	009 Move W9, 3
	010 NotImplemented "Instruction MOVK not yet implemented."
	011 And W31, W8, W9
	012 Or W8, W1, 4
	013 NotImplemented "Instruction CMP not yet implemented."
	014 NotImplemented "Instruction CMP not yet implemented."
	015 NotImplemented "Instruction CMP not yet implemented."
	016 Or W8, W1, 4
	017 NotImplemented "Instruction CMP not yet implemented."
	018 NotImplemented "Instruction CMP not yet implemented."
	019 NotImplemented "Instruction CMP not yet implemented."
	020 NotImplemented "Instruction CMP not yet implemented."
	021 NotImplemented "Instruction CMP not yet implemented."
	022 And W8, W1, 0xFFFFFFFE
	023 NotImplemented "Instruction CMP not yet implemented."
	024 NotImplemented "Instruction CSET not yet implemented."
	025 Return X0
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move W0, W31
	028 Return X0
	029 NotImplemented "Instruction CMP not yet implemented."
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move W0, 2
	032 Return X0

Method: System.Void GetLightUVScaleOffset(ref UnityEngine.Rendering.Universal.UniversalAdditionalLightData additionalLightData, ref UnityEngine.Matrix4x4 uvTransform)

Disassembly:
	0x03A561B8 FADD S0, S0, S1
	0x03A561BC FADD S0, S2, S0
	0x03A561C0 FMUL S1, S3, S3
	0x03A561C4 FADD S0, S1, S0
	0x03A561C8 FCMP S0, S12
	0x03A561CC B.MI 0x3A56218
	0x03A561D0 MOV X0, X31
	0x03A561D4 BL 0x3C3BB1C
	0x03A561D8 FSUB S0, S13, S11
	0x03A561DC FSUB S0, S0, S9
	0x03A561E0 ANDS W31, W0, 0x1
	0x03A561E4 FCSEL S0, S11, S0, NE
	0x03A561E8 CBZ X21, 0x3A56280
	0x03A561EC LDR W8, [X21 + 0x18]
	0x03A561F0 CMP X20, X8
	0x03A561F4 B.CS 0x3A56284
	0x03A561F8 STP S8, S9, [X28 - 0xC]
	0x03A561FC STP S10, S0, [X28 - 0x4]
	0x03A56200 LDR W8, [X22 + 0xC]
	0x03A56204 ADD X20, X20, 0x1
	0x03A56208 ADD X28, X28, 0x10
	0x03A5620C CMP W20, W8
	0x03A56210 B.LT 0x3A560E0
	0x03A56214 B 0x3A56254
	0x03A56218 CMP W19, 0x11
	0x03A5621C B.LT 0x3A56250
	0x03A56220 ADRP X8, 0x69D000
	0x03A56224 LDR X8, [X8 + 0xA28]
	0x03A56228 LDR X0, [X8]
	0x03A5622C LDR W8, [X0 + 0xE0]
	0x03A56230 CBNZ W8, 0x3A56238
	0x03A56234 BL 0x1C16DFC
	0x03A56238 ADRP X8, 0x700000
	0x03A5623C LDR X8, [X8 + 0x210]
	0x03A56240 MOV X1, X31
	0x03A56244 LDR X0, [X8]
	0x03A56248 BL 0x3C06A04
	0x03A5624C B 0x3A56254
	0x03A56250 MOV W20, W31
	0x03A56254 MOV W0, W20
	0x03A56258 LDP X20, X19, [X31 + 0x80]
	0x03A5625C LDP X22, X21, [X31 + 0x70]
	0x03A56260 LDP X24, X23, [X31 + 0x60]
	0x03A56264 LDP X26, X25, [X31 + 0x50]
	0x03A56268 LDP X28, X27, [X31 + 0x40]
	0x03A5626C LDP X29, X30, [X31 + 0x30]
	0x03A56270 LDP D9, D8, [X31 + 0x20]
	0x03A56274 LDP D11, D10, [X31 + 0x10]
	0x03A56278 LDP D13, D12, [X31], #0x90
	0x03A5627C RET
	0x03A56280 BL 0x1C16F20
	0x03A56284 BL 0x1C16F28
	0x03A56288 SUB X31, X31, 0x50
	0x03A5628C STP X30, X23, [X31 + 0x20]
	0x03A56290 STP X22, X21, [X31 + 0x30]
	0x03A56294 STP X20, X19, [X31 + 0x40]
	0x03A56298 ADRP X23, 0x982000
	0x03A5629C LDRB W8, [X23 + 0xE5A]
	0x03A562A0 MOV W22, W3
	0x03A562A4 MOV X20, X2
	0x03A562A8 MOV X21, X1
	0x03A562AC MOV X19, X0
	0x03A562B0 STP X31, X31, [X31 + 0x10]
	0x03A562B4 STR X31, [X31 + 0x8]
	0x03A562B8 CBNZ W8, 0x3A562D0
	0x03A562BC ADRP X0, 0x6A4000
	0x03A562C0 LDR X0, [X0 + 0x9A0]
	0x03A562C4 BL 0x1C16CF4
	0x03A562C8 MOVZ W8, 0x1
	0x03A562CC STRB W8, [X23 + 0xE5A]
	0x03A562D0 ADRP X8, 0x6A4000
	0x03A562D4 LDR X8, [X8 + 0x9A0]
	0x03A562D8 MOV X0, X19
	0x03A562DC MOV X1, X20
	0x03A562E0 LDR X8, [X8]
	0x03A562E4 LDR X8, [X8 + 0xB8]
	0x03A562E8 LDR V0, [X8]

ISIL:
	001 Subtract X31, X31, 208
	002 Move [X31+128], D12
	003 Move [X31+144], D11
	004 Move [X31+152], D10
	005 Move [X31+160], D9
	006 Move [X31+168], D8
	007 Move [X31+176], X30
	008 Move [X31+184], X21
	009 Move [X31+192], X20
	010 Move [X31+200], X19
	011 Move X21, 0x98C000
	012 Move W8, [X21+2632]
	013 Move X19, X2
	014 Move X20, X1
	015 Compare W8, 0
	016 JumpIfNotEqual {22}
	017 Move X0, 0x6A6000
	018 Move X0, [X0+3848]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+2632], W8
	022 Move X8, [X20]
	023 Compare X8, 0
	024 JumpIfEqual {94}
	025 Move X9, 0x6A6000
	026 Move X9, [X9+3848]
	027 Move S2, [X8+72]
	028 Move S3, [X8+76]
	029 Move S11, [X8+80]
	030 Move S10, [X8+84]
	031 Move X0, X31
	032 Move X9, [X9]
	033 Move X9, [X9+184]
	034 Move S1, [X9+8]
	035 Move S0, [X9+12]
	036 NotImplemented "Instruction FDIV not yet implemented."
	037 NotImplemented "Instruction FDIV not yet implemented."
	038 NotImplemented "Instruction FABS not yet implemented."
	039 Call half.get_MinValue
	040 NotImplemented "Instruction FCMP not yet implemented."
	041 Move X0, X31
	042 Call half.get_MinValue
	043 NotImplemented "Instruction FNEG not yet implemented."
	044 NotImplemented "Instruction FCMP not yet implemented."
	045 NotImplemented "Instruction FCSEL not yet implemented."
	046 Move X0, X31
	047 NotImplemented "Instruction FABS not yet implemented."
	048 Call half.get_MinValue
	049 NotImplemented "Instruction FCMP not yet implemented."
	050 Move X0, X31
	051 Call half.get_MinValue
	052 NotImplemented "Instruction FNEG not yet implemented."
	053 NotImplemented "Instruction FCMP not yet implemented."
	054 NotImplemented "Instruction FCSEL not yet implemented."
	055 Add X8, X31, 0
	056 Move S2, 1
	057 Move V0, V9
	058 Move V1, V8
	059 Move X0, X31
	060 Call Matrix4x4.Scale, X0
	061 Move V2, [X31+32]
	062 Move V1, [X31+48]
	063 Move V4, [X31]
	064 Move V3, [X31+16]
	065 NotImplemented "Instruction FNEG not yet implemented."
	066 NotImplemented "Instruction FNEG not yet implemented."
	067 Multiply S0, S9, S0
	068 Move [X31+96], V2
	069 Move [X31+104], V1
	070 Move [X31+64], V4
	071 Move [X31+72], V3
	072 Move [X19+32], V2
	073 Move [X19+40], V1
	074 Move [X19], V4
	075 Move [X19+8], V3
	076 Multiply S1, S8, S5
	077 Move S2, W31
	078 Move S3, 1
	079 Move W1, 3
	080 Move X0, X19
	081 Move X2, X31
	082 Call Matrix4x4.SetColumn, X0, X1, X2
	083 Move X20, [X31+192]
	084 Move X19, [X31+200]
	085 Move X30, [X31+176]
	086 Move X21, [X31+184]
	087 Move D9, [X31+160]
	088 Move D8, [X31+168]
	089 Move D11, [X31+144]
	090 Move D10, [X31+152]
	091 Move V12, [X31+128]
	092 Add X31, X31, 208
	093 Return 
	094 Call 0x1C17F20

Method: System.Boolean SetupAdditionalLights(UnityEngine.Rendering.CommandBuffer cmd, ref UnityEngine.Rendering.Universal.LightData lightData)

Disassembly:
	0x03A55EC4 CMP W25, W8
	0x03A55EC8 B.LT 0x3A55C24
	0x03A55ECC LDR X0, [X22 + 0x18]
	0x03A55ED0 CBZ X0, 0x3A55F04
	0x03A55ED4 LDR X1, [X31 + 0x8]
	0x03A55ED8 BL 0x3A56B0C
	0x03A55EDC ADD X31, X31, 0x2B0
	0x03A55EE0 LDP X20, X19, [X31 + 0x60]
	0x03A55EE4 LDP X22, X21, [X31 + 0x50]
	0x03A55EE8 LDP X24, X23, [X31 + 0x40]
	0x03A55EEC LDP X26, X25, [X31 + 0x30]
	0x03A55EF0 LDP X28, X27, [X31 + 0x20]
	0x03A55EF4 LDP X29, X30, [X31 + 0x10]
	0x03A55EF8 LDP D9, D8, [X31], #0x70
	0x03A55EFC RET
	0x03A55F00 BL 0x1C16F28
	0x03A55F04 BL 0x1C16F20
	0x03A55F08 STP X30, X25, [X31 - 0x40]!
	0x03A55F0C STP X24, X23, [X31 + 0x10]
	0x03A55F10 STP X22, X21, [X31 + 0x20]
	0x03A55F14 STP X20, X19, [X31 + 0x30]
	0x03A55F18 ADRP X20, 0x98D000
	0x03A55F1C LDRB W8, [X20 + 0x1DD]
	0x03A55F20 MOV X19, X1
	0x03A55F24 TBNZ X8, 0x0, 0x3A55F48
	0x03A55F28 ADRP X0, 0x701000
	0x03A55F2C LDR X0, [X0 + 0x200]
	0x03A55F30 BL 0x1C16CF4
	0x03A55F34 ADRP X0, 0x701000
	0x03A55F38 LDR X0, [X0 + 0x208]
	0x03A55F3C BL 0x1C16CF4
	0x03A55F40 MOVZ W8, 0x1
	0x03A55F44 STRB W8, [X20 + 0x1DD]
	0x03A55F48 LDR W8, [X19 + 0xC]
	0x03A55F4C CMP W8, 0x1
	0x03A55F50 B.LT 0x3A55FE4
	0x03A55F54 ADRP X25, 0x701000
	0x03A55F58 LDR X25, [X25 + 0x200]
	0x03A55F5C MOV W20, W31
	0x03A55F60 MOV W24, W31
	0x03A55F64 MOV W21, W31
	0x03A55F68 LDR X2, [X25]
	0x03A55F6C MOV X0, X19
	0x03A55F70 MOV W1, W21
	0x03A55F74 BL 0x2899620
	0x03A55F78 CBZ X1, 0x3A56000
	0x03A55F7C MOV X0, X1
	0x03A55F80 MOV X1, X31
	0x03A55F84 BL 0x3C16C80
	0x03A55F88 CBZ X0, 0x3A56000
	0x03A55F8C MOV X1, X31
	0x03A55F90 MOV X22, X0
	0x03A55F94 BL 0x3C385F8
	0x03A55F98 CMP W0, W24
	0x03A55F9C B.EQ 0x3A55FD0
	0x03A55FA0 LDR X8, [X22]
	0x03A55FA4 MOV W23, W0
	0x03A55FA8 MOV X0, X22
	0x03A55FAC LDP X9, X1, [X8 + 0x188]
	0x03A55FB0 BLR X9
	0x03A55FB4 LDR X8, [X22]
	0x03A55FB8 MOV W24, W0
	0x03A55FBC MOV X0, X22
	0x03A55FC0 LDP X9, X1, [X8 + 0x1A8]
	0x03A55FC4 BLR X9
	0x03A55FC8 MADD W20, W0, W24, W20
	0x03A55FCC MOV W24, W23
	0x03A55FD0 LDR W8, [X19 + 0xC]
	0x03A55FD4 ADD W21, W21, 0x1
	0x03A55FD8 CMP W21, W8
	0x03A55FDC B.LT 0x3A55F68
	0x03A55FE0 B 0x3A55FE8
	0x03A55FE4 MOV W20, W31
	0x03A55FE8 MOV W0, W20
	0x03A55FEC LDP X20, X19, [X31 + 0x30]
	0x03A55FF0 LDP X22, X21, [X31 + 0x20]
	0x03A55FF4 LDP X24, X23, [X31 + 0x10]
	0x03A55FF8 LDP X30, X25, [X31], #0x40
	0x03A55FFC RET
	0x03A56000 BL 0x1C16F20
	0x03A56004 FSQRT S0, S0
	0x03A56008 FMOV S1, 1
	0x03A5600C MOVZ W8, 0x7F800000
	0x03A56010 FRINTP S0, S0
	0x03A56014 FMOV S2, W8
	0x03A56018 FMAXNM S0, S0, S1
	0x03A5601C FCVTZS W8, S0
	0x03A56020 FCMP S0, S2
	0x03A56024 MOVZ W9, 0x80000000
	0x03A56028 CSEL W0, W9, W8, EQ
	0x03A5602C RET
	0x03A56030 STP D13, D12, [X31 - 0x90]!
	0x03A56034 STP D11, D10, [X31 + 0x10]
	0x03A56038 STP D9, D8, [X31 + 0x20]
	0x03A5603C STP X29, X30, [X31 + 0x30]
	0x03A56040 STP X28, X27, [X31 + 0x40]
	0x03A56044 STP X26, X25, [X31 + 0x50]
	0x03A56048 STP X24, X23, [X31 + 0x60]
	0x03A5604C STP X22, X21, [X31 + 0x70]
	0x03A56050 STP X20, X19, [X31 + 0x80]
	0x03A56054 ADRP X20, 0x98C000

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+32], X30
	003 Move [X31+40], X23
	004 Move [X31+48], X22
	005 Move [X31+56], X21
	006 Move [X31+64], X20
	007 Move [X31+72], X19
	008 Move X23, 0x98E000
	009 Move X22, 0x69F000
	010 Move W8, [X23+473]
	011 Move X22, [X22+1448]
	012 Move X19, X2
	013 Move X20, X1
	014 Move X21, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {33}
	019 Move X0, 0x69F000
	020 Move X0, [X0+1448]
	021 Call 0x1C17CF4
	022 Move X0, 0x702000
	023 Move X0, [X0+400]
	024 Call 0x1C17CF4
	025 Move X0, 0x702000
	026 Move X0, [X0+408]
	027 Call 0x1C17CF4
	028 Move X0, 0x702000
	029 Move X0, [X0+416]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X23+473], W8
	033 Move X0, [X22]
	034 Move [X31+16], X31
	035 Move [X31+24], X31
	036 Move [X31], X31
	037 Move [X31+8], X31
	038 Move W22, [X21+48]
	039 Move W8, [X0+224]
	040 Move W23, [X19+24]
	041 Compare W8, 0
	042 JumpIfNotEqual {44}
	043 Call 0x1C17DFC
	044 Move W0, W22
	045 Move W1, W23
	046 Move X2, X31
	047 Call Math.Min, X0, X1
	048 Move X8, [X21+64]
	049 Compare X8, 0
	050 JumpIfEqual {118}
	051 Move W1, W0
	052 Move X0, X8
	053 Call WorkMemory.Resize, X0, X1
	054 Move X8, [X21+64]
	055 Compare X8, 0
	056 JumpIfEqual {118}
	057 Move X2, [X8+16]
	058 Move X0, X21
	059 Move X1, X19
	060 Call LightCookieManager.FilterAndValidateAdditionalLights, X0, X1, X2
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Move X8, [X21+16]
	063 Move W22, W0
	064 Compare X8, 0
	065 JumpIfEqual {69}
	066 Move X8, [X21+24]
	067 Compare X8, 0
	068 JumpIfNotEqual {72}
	069 Move X0, X21
	070 Move W1, W22
	071 Call LightCookieManager.InitAdditionalLights, X0, X1
	072 Move X8, [X21+64]
	073 Compare X8, 0
	074 JumpIfEqual {118}
	075 Move X9, 0x702000
	076 Move X9, [X9+400]
	077 Move X1, [X8+16]
	078 Add X0, X31, 16
	079 Move W2, W22
	080 Move X3, [X9]
	081 Call WorkSlice`1<LightCookieMapping>..ctor, X0, X1, X2
	082 Move X8, [X21+64]
	083 Compare X8, 0
	084 JumpIfEqual {118}
	085 Move X3, [X8+24]
	086 Add X2, X31, 16
	087 Move X0, X21
	088 Move X1, X20
	089 Call LightCookieManager.UpdateAdditionalLightsAtlas, X0, X1, X2, X3
	090 Move X8, [X21+64]
	091 Compare X8, 0
	092 JumpIfEqual {118}
	093 Move X9, 0x702000
	094 Move X9, [X9+408]
	095 Move X1, [X8+24]
	096 Move W2, W0
	097 Add X0, X31, 0
	098 Move X3, [X9]
	099 Call 0x2899EF0, X0, X1, X2
	100 Add X3, X31, 16
	101 Add X4, X31, 0
	102 Move X0, X21
	103 Move X1, X20
	104 Move X2, X19
	105 Call LightCookieManager.UploadAdditionalLights, X0, X1, X2, X3, X4
	106 Move W8, [X31+12]
	107 NotImplemented "Instruction CMP not yet implemented."
	108 NotImplemented "Instruction CSET not yet implemented."
	109 Move W0, W31
	110 Move X20, [X31+64]
	111 Move X19, [X31+72]
	112 Move X22, [X31+48]
	113 Move X21, [X31+56]
	114 Move X30, [X31+32]
	115 Move X23, [X31+40]
	116 Add X31, X31, 80
	117 Return X0
	118 Call 0x1C17F20

Method: System.Int32 FilterAndValidateAdditionalLights(ref UnityEngine.Rendering.Universal.LightData lightData, UnityEngine.Rendering.Universal.LightCookieManager/LightCookieMapping[] validLightMappings)

Disassembly:
	0x03A56414 MOV X19, X0
	0x03A56418 STR X31, [X31]
	0x03A5641C STR X31, [X31 + 0x18]
	0x03A56420 CBNZ W8, 0x3A56438
	0x03A56424 ADRP X0, 0x6A4000
	0x03A56428 LDR X0, [X0 + 0x9A0]
	0x03A5642C BL 0x1C16CF4
	0x03A56430 MOVZ W8, 0x1
	0x03A56434 STRB W8, [X22 + 0xE5A]
	0x03A56438 ADRP X8, 0x6A4000
	0x03A5643C LDR X8, [X8 + 0x9A0]
	0x03A56440 LDR X8, [X8]
	0x03A56444 LDR X8, [X8 + 0xB8]
	0x03A56448 LDR V0, [X8]
	0x03A5644C STR V0, [X31]
	0x03A56450 CBZ X20, 0x3A56540
	0x03A56454 LDR X8, [X20]
	0x03A56458 MOV X0, X20
	0x03A5645C LDP X9, X1, [X8 + 0x188]
	0x03A56460 BLR X9
	0x03A56464 LDR X8, [X20]
	0x03A56468 SDIV W9, W0, W23
	0x03A5646C CMP W9, 0x4
	0x03A56470 MOVZ W24, 0x4
	0x03A56474 LDP X10, X1, [X8 + 0x1A8]
	0x03A56478 MOV X0, X20
	0x03A5647C CSEL W22, W9, W24, GT
	0x03A56480 BLR X10
	0x03A56484 SDIV W8, W0, W23
	0x03A56488 CMP W8, 0x4
	0x03A5648C CSEL W23, W8, W24, GT
	0x03A56490 SCVTF S0, W22
	0x03A56494 SCVTF S1, W23
	0x03A56498 STP S0, S1, [X31 + 0x18]
	0x03A5649C LDR X0, [X19 + 0x10]
	0x03A564A0 CBZ X0, 0x3A56540
	0x03A564A4 ADD X1, X31, 0x0
	0x03A564A8 MOV X2, X20
	0x03A564AC MOV X3, X31
	0x03A564B0 BL 0x39DAB90
	0x03A564B4 LDR X8, [X19 + 0x10]
	0x03A564B8 CBZ X8, 0x3A56540
	0x03A564BC LDR X9, [X8]
	0x03A564C0 TBZ X0, 0x0, 0x3A564EC
	0x03A564C4 LDR X10, [X9 + 0x208]
	0x03A564C8 LDR X6, [X9 + 0x210]
	0x03A564CC ADD X3, X31, 0x0
	0x03A564D0 MOVZ W4, 0x1
	0x03A564D4 MOVZ W5, 0x1
	0x03A564D8 MOV X0, X8
	0x03A564DC MOV X1, X21
	0x03A564E0 MOV X2, X20
	0x03A564E4 BLR X10
	0x03A564E8 B 0x3A56510
	0x03A564EC LDP X10, X7, [X9 + 0x1A8]
	0x03A564F0 ADD X2, X31, 0x0
	0x03A564F4 MOVN W6, 0x0
	0x03A564F8 MOV X0, X8
	0x03A564FC MOV X1, X21
	0x03A56500 MOV X3, X20
	0x03A56504 MOV W4, W22
	0x03A56508 MOV W5, W23
	0x03A5650C BLR X10
	0x03A56510 ADD X1, X31, 0x0
	0x03A56514 ADD X3, X31, 0x18
	0x03A56518 MOV X0, X19
	0x03A5651C BL 0x3A56544
	0x03A56520 LDP S0, S1, [X31]
	0x03A56524 LDP S2, S3, [X31 + 0x8]
	0x03A56528 LDP X20, X19, [X31 + 0x40]
	0x03A5652C LDP X22, X21, [X31 + 0x30]
	0x03A56530 LDP X24, X23, [X31 + 0x20]
	0x03A56534 LDR X30, [X31 + 0x10]
	0x03A56538 ADD X31, X31, 0x50
	0x03A5653C RET
	0x03A56540 BL 0x1C16F20
	0x03A56544 STP D9, D8, [X31 - 0x40]!
	0x03A56548 STR X30, [X31 + 0x10]
	0x03A5654C STP X22, X21, [X31 + 0x20]
	0x03A56550 STP X20, X19, [X31 + 0x30]
	0x03A56554 ADRP X22, 0x98C000
	0x03A56558 LDRB W8, [X22 + 0x1DF]
	0x03A5655C MOV X20, X3
	0x03A56560 MOV X19, X1
	0x03A56564 MOV X21, X0
	0x03A56568 TBNZ X8, 0x0, 0x3A56580
	0x03A5656C ADRP X0, 0x700000
	0x03A56570 LDR X0, [X0 + 0x158]
	0x03A56574 BL 0x1C16CF4
	0x03A56578 MOVZ W8, 0x1
	0x03A5657C STRB W8, [X22 + 0x1DF]
	0x03A56580 STR X31, [X31 + 0x18]
	0x03A56584 ADRP X22, 0x982000
	0x03A56588 LDRB W8, [X22 + 0xE5A]
	0x03A5658C LDP D9, D8, [X19]
	0x03A56590 CBNZ W8, 0x3A565A8
	0x03A56594 ADRP X0, 0x6A4000
	0x03A56598 LDR X0, [X0 + 0x9A0]
	0x03A5659C BL 0x1C16CF4
	0x03A565A0 MOVZ W8, 0x1
	0x03A565A4 STRB W8, [X22 + 0xE5A]
	0x03A565A8 ADRP X8, 0x6A4000
	0x03A565AC LDR X8, [X8 + 0x9A0]
	0x03A565B0 LDR X8, [X8]
	0x03A565B4 LDR X8, [X8 + 0xB8]
	0x03A565B8 LDP D0, D1, [X8]
	0x03A565BC ADRP X8, 0xFFFFFFFFFD093000
	0x03A565C0 LDR V2, [X8 + 0xF20]
	0x03A565C4 FSUB V0.2S, V9.2S, V0.2S
	0x00000000 INVALID
	0x03A565CC FSUB V1.2S, V8.2S, V1.2S
	0x03A565D0 UNIMPLEMENTED
	0x00000000 INVALID
	0x03A565D8 FADD V0.2S, V0.2S, V3.2S
	0x03A565DC FADD V0.2S, V1.2S, V0.2S
	0x03A565E0 UNIMPLEMENTED
	0x03A565E4 FADD V0.2S, V1.2S, V0.2S
	0x03A565E8 FCMP S0, S2
	0x03A565EC B.MI 0x3A566D8
	0x03A565F0 LDRB W8, [X21 + 0x2C]
	0x03A565F4 CBZ W8, 0x3A566C8
	0x03A565F8 LDR X8, [X21 + 0x10]
	0x03A565FC FMOV S8, 1
	0x03A56600 CBZ X8, 0x3A56640
	0x03A56604 ADRP X9, 0x700000
	0x03A56608 LDR X9, [X9 + 0x158]
	0x03A5660C LDR X10, [X8]
	0x03A56610 LDR X9, [X9]
	0x03A56614 LDRB W12, [X10 + 0x130]
	0x03A56618 LDRB W11, [X9 + 0x130]
	0x03A5661C CMP W12, W11
	0x03A56620 B.CC 0x3A56640
	0x03A56624 LDR X10, [X10 + 0xC8]
	0x03A56628 ADD X10, X10, X11, 0x3, LSL
	0x03A5662C LDUR X10, [X10 - 0x8]
	0x03A56630 CMP X10, X9
	0x03A56634 B.NE 0x3A56640
	0x03A56638 LDR V0, [X8 + 0x48]
	0x03A5663C SCVTF S8, S0
	0x03A56640 ADRP X21, 0x98B000
	0x03A56644 LDRB W8, [X21 + 0xA48]
	0x03A56648 CBNZ W8, 0x3A56660
	0x03A5664C ADRP X0, 0x6A5000
	0x03A56650 LDR X0, [X0 + 0xF08]
	0x03A56654 BL 0x1C16CF4
	0x03A56658 MOVZ W8, 0x1
	0x03A5665C STRB W8, [X21 + 0xA48]
	0x03A56660 ADRP X8, 0x6A5000
	0x03A56664 LDR X8, [X8 + 0xF08]
	0x03A56668 MOV V0.16B, V8.16B
	0x03A5666C LDR X8, [X8]
	0x03A56670 LDR X8, [X8 + 0xB8]
	0x03A56674 LDR V9, [X8 + 0x8]
	0x03A56678 BL 0x3EB1B90
	0x03A5667C MOVZ W9, 0x7F800000
	0x03A56680 FCVTZS W8, S0
	0x03A56684 MOVZ W10, 0xCF000000
	0x03A56688 FMOV S2, W9
	0x03A5668C SCVTF S1, W8
	0x03A56690 FCMP S0, S2
	0x03A56694 FMOV S0, W10
	0x03A56698 FCSEL S0, S0, S1, EQ
	0x00000000 INVALID
	0x03A566A0 FADD V0.2S, V0.2S, V0.2S
	0x03A566A4 ADD X1, X31, 0x18
	0x03A566A8 MOV X0, X20
	0x03A566AC MOV X2, X19
	0x03A566B0 MOV X3, X31
	0x03A566B4 STR D0, [X31 + 0x18]
	0x03A566B8 BL 0x39D3198
	0x03A566BC STP S0, S1, [X19]
	0x03A566C0 STP S2, S3, [X19 + 0x8]
	0x03A566C4 B 0x3A566D8
	0x03A566C8 FMOV S0, 0.5
	0x03A566CC MOV X1, X19
	0x03A566D0 MOV X2, X20
	0x03A566D4 BL 0x3A5680C
	0x03A566D8 LDP X20, X19, [X31 + 0x30]
	0x03A566DC LDP X22, X21, [X31 + 0x20]
	0x03A566E0 LDR X30, [X31 + 0x10]
	0x03A566E4 LDP D9, D8, [X31], #0x40
	0x03A566E8 RET
	0x03A566EC STR X30, [X31 - 0x30]!
	0x03A566F0 STP X22, X21, [X31 + 0x10]
	0x03A566F4 STP X20, X19, [X31 + 0x20]
	0x03A566F8 ADRP X21, 0x98C000
	0x03A566FC LDRB W8, [X21 + 0x1DE]
	0x03A56700 MOV X20, X1
	0x03A56704 MOV X19, X0
	0x03A56708 TBNZ X8, 0x0, 0x3A56720
	0x03A5670C ADRP X0, 0x69D000
	0x03A56710 LDR X0, [X0 + 0x5A8]
	0x03A56714 BL 0x1C16CF4
	0x03A56718 MOVZ W8, 0x1
	0x03A5671C STRB W8, [X21 + 0x1DE]
	0x03A56720 CBZ X20, 0x3A56808
	0x03A56724 LDR X8, [X20]
	0x03A56728 ADRP X22, 0x69D000
	0x03A5672C MOV X0, X20
	0x03A56730 LDP X9, X1, [X8 + 0x188]
	0x03A56734 LDR X22, [X22 + 0x5A8]
	0x03A56738 BLR X9
	0x03A5673C LDR X8, [X20]
	0x03A56740 MOV W21, W0
	0x03A56744 MOV X0, X20
	0x03A56748 LDP X9, X1, [X8 + 0x1A8]
	0x03A5674C BLR X9
	0x03A56750 LDR X8, [X22]
	0x03A56754 MOV W20, W0
	0x03A56758 LDR W9, [X8 + 0xE0]
	0x03A5675C CBNZ W9, 0x3A56768
	0x03A56760 MOV X0, X8
	0x03A56764 BL 0x1C16DFC
	0x03A56768 MOV W0, W21
	0x03A5676C MOV W1, W20
	0x03A56770 MOV X2, X31
	0x03A56774 BL 0x337EDF0
	0x03A56778 LDP W8, W21, [X19 + 0x20]
	0x03A5677C MOV W20, W0
	0x03A56780 MOV X1, X31
	0x03A56784 MOV W0, W8
	0x03A56788 BL 0x3C1ED70
	0x03A5678C TBZ X0, 0x0, 0x3A567CC
	0x03A56790 MOV W0, W21
	0x03A56794 MOV X1, X31
	0x03A56798 BL 0x3C1ED70
	0x03A5679C LDR V0, [X19 + 0x34]
	0x03A567A0 TBZ X0, 0x0, 0x3A567D0
	0x03A567A4 MOVZ W8, 0x7F800000
	0x03A567A8 FMOV S1, W8
	0x03A567AC FCVTZS W9, S0
	0x03A567B0 FCMP S0, S1
	0x03A567B4 MOVZ W8, 0x80000000
	0x03A567B8 CSEL W0, W8, W9, EQ
	0x03A567BC MOV X1, X31
	0x03A567C0 BL 0x3C2B340
	0x03A567C4 MUL W0, W0, W20
	0x03A567C8 B 0x3A567F8
	0x03A567CC LDR V0, [X19 + 0x34]
	0x03A567D0 SCVTF S1, W20
	0x03A567D4 FMOV S2, 0.5
	0x03A567D8 MOVZ W8, 0x7F800000
	0x03A567DC FMUL S0, S0, S1
	0x03A567E0 FMOV S1, W8
	0x03A567E4 FADD S0, S0, S2
	0x03A567E8 FCVTZS W8, S0
	0x03A567EC FCMP S0, S1
	0x03A567F0 MOVZ W9, 0x80000000
	0x03A567F4 CSEL W0, W9, W8, EQ
	0x03A567F8 LDP X20, X19, [X31 + 0x20]
	0x03A567FC LDP X22, X21, [X31 + 0x10]
	0x03A56800 LDR X30, [X31], #0x30
	0x03A56804 RET
	0x03A56808 BL 0x1C16F20
	0x03A5680C SUB X31, X31, 0x30
	0x03A56810 STP X30, X21, [X31 + 0x10]
	0x03A56814 STP X20, X19, [X31 + 0x20]
	0x03A56818 ADRP X21, 0x98B000
	0x03A5681C LDRB W8, [X21 + 0xA48]
	0x03A56820 MOV X20, X2
	0x03A56824 MOV X19, X1

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+48], X29
	003 Move [X31+56], X30
	004 Move [X31+64], X28
	005 Move [X31+72], X27
	006 Move [X31+80], X26
	007 Move [X31+88], X25
	008 Move [X31+96], X24
	009 Move [X31+104], X23
	010 Move [X31+112], X22
	011 Move [X31+120], X21
	012 Move [X31+128], X20
	013 Move [X31+136], X19
	014 Move X19, 0x98D000
	015 Move W8, [X19+474]
	016 Move X20, X2
	017 Move X22, X1
	018 Move X21, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {58}
	023 Move X0, 0x69E000
	024 Move X0, [X0+2600]
	025 Call 0x1C17CF4
	026 Move X0, 0x701000
	027 Move X0, [X0+432]
	028 Call 0x1C17CF4
	029 Move X0, 0x701000
	030 Move X0, [X0+440]
	031 Call 0x1C17CF4
	032 Move X0, 0x69E000
	033 Move X0, [X0+1432]
	034 Call 0x1C17CF4
	035 Move X0, 0x69E000
	036 Move X0, [X0+2760]
	037 Call 0x1C17CF4
	038 Move X0, 0x701000
	039 Move X0, [X0+448]
	040 Call 0x1C17CF4
	041 Move X0, 0x701000
	042 Move X0, [X0+456]
	043 Call 0x1C17CF4
	044 Move X0, 0x701000
	045 Move X0, [X0+464]
	046 Call 0x1C17CF4
	047 Move X0, 0x701000
	048 Move X0, [X0+472]
	049 Call 0x1C17CF4
	050 Move X0, 0x701000
	051 Move X0, [X0+480]
	052 Call 0x1C17CF4
	053 Move X0, 0x701000
	054 Move X0, [X0+488]
	055 Call 0x1C17CF4
	056 Move W8, 1
	057 Move [X19+474], W8
	058 Move [X31+44], W31
	059 Move W28, [X22+24]
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Move [X31+8], X21
	062 Move X21, 0x69E000
	063 Move X21, [X21+1432]
	064 Move W29, [X22]
	065 Move W27, W31
	066 Move W19, W31
	067 Move W23, W31
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Subtract W27, W27, 1
	070 Move X8, 0x701000
	071 Move X0, [X22+16]
	072 Move X1, [X22+24]
	073 Move X8, [X8+440]
	074 Move W2, W23
	075 Move X3, [X8]
	076 Call 0x22232C0, X0, X1
	077 Move X1, X31
	078 Move X25, X0
	079 Call VisibleLight.get_light, X0
	080 Compare X0, 0
	081 JumpIfEqual {271}
	082 Move X1, X31
	083 Move X24, X0
	084 Call Light.get_cookie, X0
	085 Move X8, [X21]
	086 Move X26, X0
	087 Move W9, [X8+224]
	088 Compare W9, 0
	089 JumpIfNotEqual {92}
	090 Move X0, X8
	091 Call 0x1C17DFC
	092 Move X0, X26
	093 Move X1, X31
	094 Move X2, X31
	095 Call Object.op_Equality, X0, X1
	096 Move TEMP, X0
	097 And TEMP, TEMP, 1
	098 Compare TEMP, 1
	099 JumpIfEqual {183}
	100 Move X0, X25
	101 Move X1, X31
	102 Call VisibleLight.get_lightType, X0
	103 Or W8, W0, 2
	104 NotImplemented "Instruction CMP not yet implemented."
	105 Compare X20, 0
	106 JumpIfEqual {271}
	107 Move W10, [X20+24]
	108 Add W9, W27, W23
	109 NotImplemented "Instruction CMP not yet implemented."
	110 Add W8, W19, 1
	111 NotImplemented "Instruction CMP not yet implemented."
	112 NotImplemented "Instruction CMP not yet implemented."
	113 Move X10, W19
	114 Move W11, W23
	115 NotImplemented "Instruction BFM not yet implemented."
	116 Add X9, X20, X10
	117 Move W19, W8
	118 Move [X9+32], X11
	119 Move [X9+40], X24
	120 Move X8, 0x69E000
	121 Move X8, [X8+2760]
	122 Move W26, W0
	123 Move W1, 5
	124 Move X0, [X8]
	125 Call 0x1C17D6C
	126 Compare X0, 0
	127 JumpIfEqual {271}
	128 Move W8, [X0+24]
	129 Move X25, X0
	130 Compare W8, 0
	131 JumpIfEqual {272}
	132 Move X8, 0x701000
	133 Move X8, [X8+480]
	134 Add X0, X31, 16
	135 Move X1, X31
	136 Move X8, [X8]
	137 Move [X25+32], X8
	138 Move X8, 0x701000
	139 Move X8, [X8+432]
	140 Move [X31+32], W26
	141 Move X9, [X8]
	142 Move TEMP, 0
	143 Not TEMP
	144 Move X8, TEMP
	145 Move [X31+16], X9
	146 Move [X31+24], X8
	147 Call Enum.ToString, X0
	148 Move W8, [X25+24]
	149 NotImplemented "Instruction CMP not yet implemented."
	150 NotImplemented "Instruction CMP not yet implemented."
	151 Move [X25+40], X0
	152 Move X8, 0x701000
	153 Move X8, [X8+472]
	154 Move X0, X24
	155 Move X1, X31
	156 Move X8, [X8]
	157 Move [X25+48], X8
	158 Call Object.get_name, X0
	159 Move W8, [X25+24]
	160 NotImplemented "Instruction CMP not yet implemented."
	161 NotImplemented "Instruction CMP not yet implemented."
	162 Move [X25+56], X0
	163 Move X8, 0x701000
	164 Move X8, [X8+448]
	165 Move X0, X25
	166 Move X1, X31
	167 Move X8, [X8]
	168 Move [X25+64], X8
	169 Call String.Concat, X0
	170 Move X8, 0x69E000
	171 Move X8, [X8+2600]
	172 Move X25, X0
	173 Move X8, [X8]
	174 Move W9, [X8+224]
	175 Compare W9, 0
	176 JumpIfNotEqual {179}
	177 Move X0, X8
	178 Call 0x1C17DFC
	179 Move X0, X25
	180 Move X1, X24
	181 Move X2, X31
	182 Call Debug.LogWarning, X0, X1
	183 Add W23, W23, 1
	184 NotImplemented "Instruction CMP not yet implemented."
	185 Move W19, W31
	186 Move W0, W19
	187 Move X20, [X31+128]
	188 Move X19, [X31+136]
	189 Move X22, [X31+112]
	190 Move X21, [X31+120]
	191 Move X24, [X31+96]
	192 Move X23, [X31+104]
	193 Move X26, [X31+80]
	194 Move X25, [X31+88]
	195 Move X28, [X31+64]
	196 Move X27, [X31+72]
	197 Move X29, [X31+48]
	198 Move X30, [X31+56]
	199 Add X31, X31, 144
	200 Return X0
	201 Move X21, [X31+8]
	202 Move W8, [X21+48]
	203 NotImplemented "Instruction CMP not yet implemented."
	204 Move X0, X31
	205 Call Time.get_frameCount
	206 Move W8, [X21+88]
	207 Move W9, 0xA5E1
	208 NotImplemented "Instruction MOVK not yet implemented."
	209 Subtract W8, W0, W8
	210 NotImplemented "Instruction CMP not yet implemented."
	211 Move X0, X31
	212 Call Time.get_frameCount
	213 Move [X21+88], W0
	214 Move X8, 0x69E000
	215 Move X8, [X8+2760]
	216 Move W1, 5
	217 Move X0, [X8]
	218 Call 0x1C17D6C
	219 Compare X0, 0
	220 JumpIfEqual {271}
	221 Move W8, [X0+24]
	222 Move X21, X0
	223 Compare W8, 0
	224 JumpIfEqual {272}
	225 Move X8, 0x701000
	226 Move X8, [X8+464]
	227 Add X0, X31, 44
	228 Move X1, X31
	229 Move X8, [X8]
	230 Move [X21+32], X8
	231 Move X8, [X20+24]
	232 Move [X31+44], W8
	233 Call Int32.ToString, X0
	234 Move W8, [X21+24]
	235 NotImplemented "Instruction CMP not yet implemented."
	236 NotImplemented "Instruction CMP not yet implemented."
	237 Move [X21+40], X0
	238 Move X8, 0x701000
	239 Move X8, [X8+456]
	240 NotImplemented "Instruction ORN not yet implemented."
	241 Add W9, W9, W28
	242 Add X0, X31, 44
	243 Move X8, [X8]
	244 Move X1, X31
	245 Move [X21+48], X8
	246 Move [X31+44], W9
	247 Call Int32.ToString, X0
	248 Move W8, [X21+24]
	249 NotImplemented "Instruction CMP not yet implemented."
	250 NotImplemented "Instruction CMP not yet implemented."
	251 Move [X21+56], X0
	252 Move X8, 0x701000
	253 Move X8, [X8+488]
	254 Move X0, X21
	255 Move X1, X31
	256 Move X8, [X8]
	257 Move [X21+64], X8
	258 Call String.Concat, X0
	259 Move X8, 0x69E000
	260 Move X8, [X8+2600]
	261 Move X20, X0
	262 Move X8, [X8]
	263 Move W9, [X8+224]
	264 Compare W9, 0
	265 JumpIfNotEqual {268}
	266 Move X0, X8
	267 Call 0x1C17DFC
	268 Move X0, X20
	269 Move X1, X31
	270 Call Debug.LogWarning, X0
	271 Call 0x1C17F20
	272 Call 0x1C17F28

Method: System.Int32 UpdateAdditionalLightsAtlas(UnityEngine.Rendering.CommandBuffer cmd, ref UnityEngine.Rendering.Universal.LightCookieManager/WorkSlice`1<UnityEngine.Rendering.Universal.LightCookieManager/LightCookieMapping> validLightMappings, UnityEngine.Vector4[] textureAtlasUVRects)

Disassembly:
	0x03A56828 CBNZ W8, 0x3A56848
	0x03A5682C ADRP X0, 0x6A5000
	0x03A56830 LDR X0, [X0 + 0xF08]
	0x03A56834 STR V0, [X31]
	0x03A56838 BL 0x1C16CF4
	0x03A5683C LDR V0, [X31]
	0x03A56840 MOVZ W8, 0x1
	0x03A56844 STRB W8, [X21 + 0xA48]
	0x03A56848 ADRP X8, 0x6A5000
	0x03A5684C LDR X8, [X8 + 0xF08]
	0x03A56850 LDR V1, [X20]
	0x03A56854 FADD S2, S0, S0
	0x03A56858 LDP X30, X21, [X31 + 0x10]
	0x03A5685C LDR X8, [X8]
	0x03A56860 LDR X8, [X8 + 0xB8]
	0x03A56864 LDR V4, [X8 + 0x8]
	0x00000000 INVALID
	0x00000000 INVALID
	0x03A56870 LDP D2, D4, [X19]
	0x00000000 INVALID
	0x03A56878 FSUB V0.2S, V1.2S, V0.2S
	0x00000000 INVALID
	0x00000000 INVALID
	0x03A56884 FADD V1.2S, V4.2S, V1.2S
	0x00000000 INVALID
	0x03A5688C STP D0, D1, [X19]
	0x03A56890 LDP X20, X19, [X31 + 0x20]
	0x03A56894 ADD X31, X31, 0x30
	0x03A56898 RET
	0x03A5689C STP X30, X23, [X31 - 0x30]!
	0x03A568A0 STP X22, X21, [X31 + 0x10]
	0x03A568A4 STP X20, X19, [X31 + 0x20]
	0x03A568A8 ADRP X21, 0x98C000
	0x03A568AC LDRB W8, [X21 + 0x1EA]
	0x03A568B0 MOV W19, W1
	0x03A568B4 MOV X20, X0
	0x03A568B8 TBNZ X8, 0x0, 0x3A56924
	0x03A568BC ADRP X0, 0x6C6000
	0x03A568C0 LDR X0, [X0 + 0x4F0]
	0x03A568C4 BL 0x1C16CF4
	0x03A568C8 ADRP X0, 0x700000
	0x03A568CC LDR X0, [X0 + 0x218]
	0x03A568D0 BL 0x1C16CF4
	0x03A568D4 ADRP X0, 0x700000
	0x03A568D8 LDR X0, [X0 + 0x220]
	0x03A568DC BL 0x1C16CF4
	0x03A568E0 ADRP X0, 0x700000
	0x03A568E4 LDR X0, [X0 + 0x228]
	0x03A568E8 BL 0x1C16CF4
	0x03A568EC ADRP X0, 0x6C5000
	0x03A568F0 LDR X0, [X0 + 0x850]
	0x03A568F4 BL 0x1C16CF4
	0x03A568F8 ADRP X0, 0x6A1000
	0x03A568FC LDR X0, [X0 + 0x988]
	0x03A56900 BL 0x1C16CF4
	0x03A56904 ADRP X0, 0x69D000
	0x03A56908 LDR X0, [X0 + 0x638]
	0x03A5690C BL 0x1C16CF4
	0x03A56910 ADRP X0, 0x6F8000
	0x03A56914 LDR X0, [X0 + 0x48]
	0x03A56918 BL 0x1C16CF4
	0x03A5691C MOVZ W8, 0x1
	0x03A56920 STRB W8, [X21 + 0x1EA]
	0x03A56924 LDR W8, [X20 + 0x10]
	0x03A56928 CMP W8, W19
	0x03A5692C B.GE 0x3A56A68
	0x03A56930 ADRP X23, 0x6A1000
	0x03A56934 ADRP X22, 0x6F8000
	0x03A56938 ADRP X21, 0x69D000
	0x03A5693C LDR X23, [X23 + 0x988]
	0x03A56940 LDR X22, [X22 + 0x48]
	0x03A56944 LDR X21, [X21 + 0x638]
	0x03A56948 CMP W8, 0x1
	0x03A5694C B.LT 0x3A56958
	0x03A56950 MOV X0, X20
	0x03A56954 BL 0x3A547B8
	0x03A56958 LDR X0, [X23]
	0x03A5695C MOV W1, W19
	0x03A56960 BL 0x1C16D6C
	0x03A56964 STR X0, [X20 + 0x18]
	0x03A56968 LDR X0, [X22]
	0x03A5696C MOV W1, W19
	0x03A56970 BL 0x1C16D6C
	0x03A56974 STR X0, [X20 + 0x20]
	0x03A56978 LDR X0, [X21]
	0x03A5697C MOV W1, W19
	0x03A56980 BL 0x1C16D6C
	0x03A56984 STR X0, [X20 + 0x28]
	0x03A56988 ADD X0, X20, 0x30
	0x03A5698C MOV W1, W19
	0x03A56990 BL 0x3A57318
	0x03A56994 LDRB W8, [X20 + 0x14]
	0x03A56998 CBZ W8, 0x3A56A64
	0x03A5699C ADRP X8, 0x6C5000
	0x03A569A0 LDR X8, [X8 + 0x850]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0x98D000
	009 Move X23, 0x6C9000
	010 Move W8, [X24+475]
	011 Move X23, [X23+3648]
	012 Move X19, X3
	013 Move X20, X2
	014 Move X21, X1
	015 Move X22, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {28}
	020 Move X0, 0x6C9000
	021 Move X0, [X0+3648]
	022 Call 0x1C17CF4
	023 Move X0, 0x701000
	024 Move X0, [X0+496]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X24+475], W8
	028 Move X0, [X23]
	029 Move X24, 0x701000
	030 Move W8, [X0+224]
	031 Move X24, [X24+496]
	032 Compare W8, 0
	033 JumpIfNotEqual {36}
	034 Call 0x1C17DFC
	035 Move X0, [X23]
	036 Move X8, [X0+184]
	037 Move X2, [X24]
	038 Move X0, X20
	039 Move X1, [X8]
	040 Call WorkSlice`1<LightCookieMapping>.Sort, X0, X1
	041 Move X1, X20
	042 Call LightCookieManager.ComputeCookieRequestPixelCount, X0, X1
	043 Move X8, [X22+16]
	044 Compare X8, 0
	045 JumpIfEqual {106}
	046 Move X9, [X8+16]
	047 Compare X9, 0
	048 JumpIfEqual {106}
	049 Move W10, [X9+172]
	050 Move W9, [X9+176]
	051 NotImplemented "Instruction UCVTF not yet implemented."
	052 Move W4, [X22+80]
	053 Move W23, W0
	054 Multiply W9, W9, W10
	055 NotImplemented "Instruction SCVTF not yet implemented."
	056 NotImplemented "Instruction FDIV not yet implemented."
	057 NotImplemented "Instruction FSQRT not yet implemented."
	058 Move S1, 1
	059 Move W9, 0x7F800000
	060 NotImplemented "Instruction FRINTP not yet implemented."
	061 NotImplemented "Instruction FMAXNM not yet implemented."
	062 Move S1, W9
	063 NotImplemented "Instruction FCVTZS not yet implemented."
	064 NotImplemented "Instruction FCMP not yet implemented."
	065 Move W10, 0x80000000
	066 NotImplemented "Instruction CSEL not yet implemented."
	067 NotImplemented "Instruction CMP not yet implemented."
	068 Move W9, [X22+84]
	069 NotImplemented "Instruction CMP not yet implemented."
	070 Move X0, X8
	071 Move X1, X31
	072 Call Texture2DAtlas.ResetAllocator, X0
	073 Move W4, W24
	074 Move [X22+80], W24
	075 Move X0, X22
	076 Move X1, X21
	077 Move X2, X20
	078 Move X3, X19
	079 Call LightCookieManager.FetchUVRects, X0, X1, X2, X3, X4
	080 NotImplemented "Instruction CMP not yet implemented."
	081 Move X0, [X22+16]
	082 Compare X0, 0
	083 JumpIfEqual {106}
	084 Move X1, X31
	085 Call Texture2DAtlas.ResetAllocator, X0
	086 Move W8, [X22+80]
	087 Move X0, X22
	088 Move X1, X21
	089 Move X2, X20
	090 Add W9, W8, 1
	091 NotImplemented "Instruction CMP not yet implemented."
	092 NotImplemented "Instruction CSINC not yet implemented."
	093 Move X3, X19
	094 Move [X22+80], W4
	095 Move [X22+84], W23
	096 Call LightCookieManager.FetchUVRects, X0, X1, X2, X3, X4
	097 NotImplemented "Instruction CMP not yet implemented."
	098 Move X20, [X31+48]
	099 Move X19, [X31+56]
	100 Move X22, [X31+32]
	101 Move X21, [X31+40]
	102 Move X24, [X31+16]
	103 Move X23, [X31+24]
	104 Move X30, [X31+64]
	105 Return X0
	106 Call 0x1C17F20

Method: System.Int32 FetchUVRects(UnityEngine.Rendering.CommandBuffer cmd, ref UnityEngine.Rendering.Universal.LightCookieManager/WorkSlice`1<UnityEngine.Rendering.Universal.LightCookieManager/LightCookieMapping> validLightMappings, UnityEngine.Vector4[] textureAtlasUVRects, System.Int32 cookieSizeDivisor)

Disassembly:
	0x03A57030 ORR X9, X31, 0x40000000400
	0x03A57034 STR W10, [X19 + 0x8]
	0x03A57038 MOVZ W10, 0x40200000
	0x03A5703C LDRB W11, [X31 + 0xE]
	0x03A57040 STR X9, [X19]
	0x03A57044 LDRH W9, [X31 + 0xC]
	0x03A57048 STP W20, W10, [X19 + 0x10]
	0x03A5704C LDRB W10, [X31 + 0xA]
	0x03A57050 STRB W8, [X19 + 0x18]
	0x03A57054 LDRH W8, [X31 + 0x8]
	0x03A57058 STRB W31, [X19 + 0xC]
	0x03A5705C STURH W9, [X19 + 0xD]
	0x03A57060 STRB W11, [X19 + 0xF]
	0x03A57064 STRB W10, [X19 + 0x1B]
	0x03A57068 STURH W8, [X19 + 0x19]
	0x03A5706C LDP X20, X19, [X31 + 0x20]
	0x03A57070 LDP X30, X21, [X31 + 0x10]
	0x03A57074 ADD X31, X31, 0x30
	0x03A57078 RET
	0x03A5707C LDP W8, W9, [X0]
	0x03A57080 CMP W8, W9
	0x03A57084 CSET W0, EQ
	0x03A57088 RET
	0x03A5708C STR X30, [X31 - 0x40]!
	0x03A57090 STP X24, X23, [X31 + 0x10]
	0x03A57094 STP X22, X21, [X31 + 0x20]
	0x03A57098 STP X20, X19, [X31 + 0x30]
	0x03A5709C ADRP X19, 0x98B000
	0x03A570A0 ADRP X21, 0x6FF000
	0x03A570A4 LDRB W8, [X19 + 0x1E4]
	0x03A570A8 LDR X21, [X21 + 0x290]
	0x03A570AC TBNZ X8, 0x0, 0x3A570F4
	0x03A570B0 ADRP X0, 0x6FF000
	0x03A570B4 LDR X0, [X0 + 0x298]
	0x03A570B8 BL 0x1C16CF4
	0x03A570BC ADRP X0, 0x6C7000
	0x03A570C0 LDR X0, [X0 + 0xE40]
	0x03A570C4 BL 0x1C16CF4
	0x03A570C8 ADRP X0, 0x6FF000
	0x03A570CC LDR X0, [X0 + 0x2A0]
	0x03A570D0 BL 0x1C16CF4
	0x03A570D4 ADRP X0, 0x6FF000
	0x03A570D8 LDR X0, [X0 + 0x2A8]
	0x03A570DC BL 0x1C16CF4
	0x03A570E0 ADRP X0, 0x6FF000
	0x03A570E4 LDR X0, [X0 + 0x290]
	0x03A570E8 BL 0x1C16CF4
	0x03A570EC MOVZ W8, 0x1
	0x03A570F0 STRB W8, [X19 + 0x1E4]
	0x03A570F4 LDR X0, [X21]
	0x03A570F8 ADRP X24, 0x6FF000
	0x03A570FC ADRP X20, 0x6FF000
	0x03A57100 ADRP X22, 0x6C7000
	0x03A57104 ADRP X23, 0x6FF000
	0x03A57108 LDR W8, [X0 + 0xE0]
	0x03A5710C LDR X24, [X24 + 0x298]
	0x03A57110 LDR X20, [X20 + 0x2A0]
	0x03A57114 LDR X22, [X22 + 0xE40]
	0x03A57118 LDR X23, [X23 + 0x2A8]
	0x03A5711C CBNZ W8, 0x3A57128
	0x03A57120 BL 0x1C16DFC
	0x03A57124 LDR X0, [X21]
	0x03A57128 LDR X8, [X0 + 0xB8]
	0x03A5712C LDR X0, [X24]
	0x03A57130 LDR X19, [X8]
	0x03A57134 BL 0x1C16F10
	0x03A57138 LDR X2, [X20]
	0x03A5713C MOV X1, X19
	0x03A57140 MOV X3, X31
	0x03A57144 MOV X20, X0
	0x03A57148 BL 0x2D404E4
	0x03A5714C LDR X8, [X22]
	0x03A57150 LDR X8, [X8 + 0xB8]
	0x03A57154 STR X20, [X8]
	0x03A57158 LDR X8, [X21]
	0x03A5715C LDR X0, [X24]
	0x03A57160 LDR X8, [X8 + 0xB8]
	0x03A57164 LDR X19, [X8]
	0x03A57168 BL 0x1C16F10
	0x03A5716C LDR X2, [X23]
	0x03A57170 MOV X1, X19
	0x03A57174 MOV X3, X31
	0x03A57178 MOV X20, X0
	0x03A5717C BL 0x2D404E4
	0x03A57180 LDR X8, [X22]
	0x03A57184 LDP X22, X21, [X31 + 0x20]
	0x03A57188 LDP X24, X23, [X31 + 0x10]
	0x03A5718C LDR X8, [X8 + 0xB8]
	0x03A57190 STR X20, [X8 + 0x8]
	0x03A57194 LDP X20, X19, [X31 + 0x30]
	0x03A57198 LDR X30, [X31], #0x40
	0x03A5719C RET
	0x03A571A0 STR X30, [X31 - 0x20]!
	0x03A571A4 STP X20, X19, [X31 + 0x10]
	0x03A571A8 ADRP X19, 0x98B000
	0x03A571AC ADRP X20, 0x6FF000
	0x03A571B0 LDRB W8, [X19 + 0x1E5]
	0x03A571B4 LDR X20, [X20 + 0x290]
	0x03A571B8 TBNZ X8, 0x0, 0x3A571D0
	0x03A571BC ADRP X0, 0x6FF000
	0x03A571C0 LDR X0, [X0 + 0x290]
	0x03A571C4 BL 0x1C16CF4
	0x03A571C8 MOVZ W8, 0x1
	0x03A571CC STRB W8, [X19 + 0x1E5]
	0x03A571D0 LDR X0, [X20]
	0x03A571D4 BL 0x1C16F10
	0x03A571D8 MOV X1, X31
	0x03A571DC MOV X19, X0
	0x03A571E0 BL 0x33BDD8C
	0x03A571E4 LDR X8, [X20]
	0x03A571E8 LDR X8, [X8 + 0xB8]
	0x03A571EC STR X19, [X8]
	0x03A571F0 LDP X20, X19, [X31 + 0x10]
	0x03A571F4 LDR X30, [X31], #0x20
	0x03A571F8 RET
	0x03A571FC MOV X1, X31
	0x03A57200 B 0x33BDD8C
	0x03A57204 STR X30, [X31 - 0x30]!
	0x03A57208 STP X22, X21, [X31 + 0x10]
	0x03A5720C STP X20, X19, [X31 + 0x20]
	0x03A57210 CBZ X2, 0x3A572CC
	0x03A57214 MOV X0, X2
	0x03A57218 MOV X1, X31
	0x03A5721C MOV X20, X4
	0x03A57220 BL 0x3C16C80
	0x03A57224 CBZ X20, 0x3A572CC
	0x03A57228 MOV X19, X0
	0x03A5722C MOV X0, X20
	0x03A57230 MOV X1, X31
	0x03A57234 BL 0x3C16C80
	0x03A57238 CBZ X19, 0x3A572CC
	0x03A5723C LDR X8, [X19]
	0x03A57240 MOV X20, X0
	0x03A57244 MOV X0, X19
	0x03A57248 LDP X9, X1, [X8 + 0x188]
	0x03A5724C BLR X9
	0x03A57250 LDR X8, [X19]
	0x03A57254 MOV W21, W0
	0x03A57258 MOV X0, X19
	0x03A5725C LDP X9, X1, [X8 + 0x1A8]
	0x03A57260 BLR X9
	0x03A57264 CBZ X20, 0x3A572CC
	0x03A57268 LDR X8, [X20]
	0x03A5726C MUL W22, W0, W21
	0x03A57270 MOV X0, X20
	0x03A57274 LDP X9, X1, [X8 + 0x188]
	0x03A57278 BLR X9
	0x03A5727C LDR X8, [X20]
	0x03A57280 MOV W21, W0
	0x03A57284 MOV X0, X20

ISIL:
	001 Move [X31-144], D13
	002 Move [X31-136], D12
	003 Move [X31+16], D11
	004 Move [X31+24], D10
	005 Move [X31+32], D9
	006 Move [X31+40], D8
	007 Move [X31+48], X29
	008 Move [X31+56], X30
	009 Move [X31+64], X28
	010 Move [X31+72], X27
	011 Move [X31+80], X26
	012 Move [X31+88], X25
	013 Move [X31+96], X24
	014 Move [X31+104], X23
	015 Move [X31+112], X22
	016 Move [X31+120], X21
	017 Move [X31+128], X20
	018 Move [X31+136], X19
	019 Move X20, 0x98C000
	020 Move W8, [X20+476]
	021 Move W19, W4
	022 Move X21, X3
	023 Move X22, X2
	024 Move X23, X1
	025 Move X24, X0
	026 Move TEMP, X8
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {44}
	030 Move X0, 0x69D000
	031 Move X0, [X0+2600]
	032 Call 0x1C17CF4
	033 Move X0, 0x700000
	034 Move X0, [X0+512]
	035 Call 0x1C17CF4
	036 Move X0, 0x700000
	037 Move X0, [X0+520]
	038 Call 0x1C17CF4
	039 Move X0, 0x700000
	040 Move X0, [X0+528]
	041 Call 0x1C17CF4
	042 Move W8, 1
	043 Move [X20+476], W8
	044 Move W8, [X22+12]
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Move X27, 0x700000
	047 Move X8, -49729536
	048 Move X25, 0x6A4000
	049 Move X27, [X27+512]
	050 Move V12, [X8+3872]
	051 Move X25, [X25+2464]
	052 Move X20, X31
	053 Add X28, X21, 44
	054 Move X29, 0x982000
	055 Move S13, 1
	056 Move X2, [X27]
	057 Move X0, X22
	058 Move W1, W20
	059 Call WorkSlice`1<LightCookieMapping>.get_Item, X0, X1
	060 Compare X1, 0
	061 JumpIfEqual {172}
	062 Move X0, X1
	063 Move X1, X31
	064 Call Light.get_cookie, X0
	065 Move W8, [X29+3674]
	066 Move X26, X0
	067 Compare W8, 0
	068 JumpIfNotEqual {73}
	069 Move X0, X25
	070 Call 0x1C17CF4
	071 Move W8, 1
	072 Move [X29+3674], W8
	073 Compare X26, 0
	074 JumpIfEqual {172}
	075 Move X8, [X26]
	076 Move X0, X26
	077 Move X9, [X8+456]
	078 Move X1, [X8+464]
	079 NotImplemented "Instruction BLR not yet implemented."
	080 NotImplemented "Instruction CMP not yet implemented."
	081 Move X0, X24
	082 Move X1, X23
	083 Move X2, X26
	084 Move W3, W19
	085 Call LightCookieManager.FetchCube, X0, X1, X2, X3
	086 Move X0, X24
	087 Move X1, X23
	088 Move X2, X26
	089 Move W3, W19
	090 Call LightCookieManager.Fetch2D, X0, X1, X2, X3
	091 Move W8, [X29+3674]
	092 Move V8, V0
	093 Move V9, V1
	094 Move V10, V2
	095 Move V11, V3
	096 Compare W8, 0
	097 JumpIfNotEqual {102}
	098 Move X0, X25
	099 Call 0x1C17CF4
	100 Move W8, 1
	101 Move [X29+3674], W8
	102 Move X8, [X25]
	103 Move X8, [X8+184]
	104 Move S0, [X8]
	105 Move S1, [X8+4]
	106 Move S2, [X8+8]
	107 Move S3, [X8+12]
	108 Subtract S0, S8, S0
	109 Subtract S1, S9, S1
	110 Subtract S2, S10, S2
	111 Multiply S0, S0, S0
	112 Multiply S1, S1, S1
	113 Subtract S3, S11, S3
	114 Multiply S2, S2, S2
	115 Add S0, S0, S1
	116 Add S0, S2, S0
	117 Multiply S1, S3, S3
	118 Add S0, S1, S0
	119 NotImplemented "Instruction FCMP not yet implemented."
	120 Move X0, X31
	121 Call SystemInfo.get_graphicsUVStartsAtTop
	122 Subtract S0, S13, S11
	123 Subtract S0, S0, S9
	124 And W31, W0, 1
	125 NotImplemented "Instruction FCSEL not yet implemented."
	126 Compare X21, 0
	127 JumpIfEqual {172}
	128 Move W8, [X21+24]
	129 NotImplemented "Instruction CMP not yet implemented."
	130 Move [X28-12], S8
	131 Move [X28-4], S9
	132 Move [X28-4], S10
	133 Move [X28+4], S0
	134 Move W8, [X22+12]
	135 Add X20, X20, 1
	136 Add X28, X28, 16
	137 NotImplemented "Instruction CMP not yet implemented."
	138 NotImplemented "Instruction CMP not yet implemented."
	139 Move X8, 0x69D000
	140 Move X8, [X8+2600]
	141 Move X0, [X8]
	142 Move W8, [X0+224]
	143 Compare W8, 0
	144 JumpIfNotEqual {146}
	145 Call 0x1C17DFC
	146 Move X8, 0x700000
	147 Move X8, [X8+528]
	148 Move X1, X31
	149 Move X0, [X8]
	150 Call Debug.LogWarning, X0
	151 Move W20, W31
	152 Move W0, W20
	153 Move X20, [X31+128]
	154 Move X19, [X31+136]
	155 Move X22, [X31+112]
	156 Move X21, [X31+120]
	157 Move X24, [X31+96]
	158 Move X23, [X31+104]
	159 Move X26, [X31+80]
	160 Move X25, [X31+88]
	161 Move X28, [X31+64]
	162 Move X27, [X31+72]
	163 Move X29, [X31+48]
	164 Move X30, [X31+56]
	165 Move D9, [X31+32]
	166 Move D8, [X31+40]
	167 Move D11, [X31+16]
	168 Move D10, [X31+24]
	169 Move D13, [X31+144]
	170 Move D12, [X31+152]
	171 Return X0
	172 Call 0x1C17F20
	173 Call 0x1C17F28

Method: System.UInt32 ComputeCookieRequestPixelCount(ref UnityEngine.Rendering.Universal.LightCookieManager/WorkSlice`1<UnityEngine.Rendering.Universal.LightCookieManager/LightCookieMapping> validLightMappings)

Disassembly:
	0x03A56F08 BL 0x3C124EC
	0x03A56F0C LDR X8, [X19]
	0x03A56F10 MOV X1, X31
	0x03A56F14 LDR X8, [X8 + 0xB8]
	0x03A56F18 STR W0, [X8 + 0x20]
	0x03A56F1C ADRP X8, 0x700000
	0x03A56F20 LDR X8, [X8 + 0x280]
	0x03A56F24 LDR X0, [X8]
	0x03A56F28 BL 0x3C124EC
	0x03A56F2C LDR X8, [X19]
	0x03A56F30 MOV X1, X31
	0x03A56F34 LDR X8, [X8 + 0xB8]
	0x03A56F38 STR W0, [X8 + 0x24]
	0x03A56F3C ADRP X8, 0x700000
	0x03A56F40 LDR X8, [X8 + 0x278]
	0x03A56F44 LDR X0, [X8]
	0x03A56F48 BL 0x3C124EC
	0x03A56F4C LDR X8, [X19]
	0x03A56F50 MOV X1, X31
	0x03A56F54 LDR X8, [X8 + 0xB8]
	0x03A56F58 STR W0, [X8 + 0x28]
	0x03A56F5C ADRP X8, 0x700000
	0x03A56F60 LDR X8, [X8 + 0x288]
	0x03A56F64 LDR X0, [X8]
	0x03A56F68 BL 0x3C124EC
	0x03A56F6C LDR X8, [X19]
	0x03A56F70 LDP X20, X19, [X31 + 0x50]
	0x03A56F74 LDP X22, X21, [X31 + 0x40]
	0x03A56F78 LDP X24, X23, [X31 + 0x30]
	0x03A56F7C LDR X8, [X8 + 0xB8]
	0x03A56F80 LDP X26, X25, [X31 + 0x20]
	0x03A56F84 LDP X28, X27, [X31 + 0x10]
	0x03A56F88 STR W0, [X8 + 0x2C]
	0x03A56F8C LDP X29, X30, [X31], #0x60
	0x03A56F90 RET
	0x03A56F94 SUB X31, X31, 0x30
	0x03A56F98 STP X30, X21, [X31 + 0x10]
	0x03A56F9C STP X20, X19, [X31 + 0x20]
	0x03A56FA0 ADRP X21, 0x98C000
	0x03A56FA4 ADRP X20, 0x6C6000
	0x03A56FA8 MOV X19, X8
	0x03A56FAC LDRB W8, [X21 + 0x1E3]
	0x03A56FB0 LDR X20, [X20 + 0x8A8]
	0x03A56FB4 TBNZ X8, 0x0, 0x3A56FD8
	0x03A56FB8 ADRP X0, 0x6FE000
	0x03A56FBC LDR X0, [X0 + 0x10]
	0x03A56FC0 BL 0x1C16CF4
	0x03A56FC4 ADRP X0, 0x6C6000
	0x03A56FC8 LDR X0, [X0 + 0x8A8]
	0x03A56FCC BL 0x1C16CF4
	0x03A56FD0 MOVZ W8, 0x1
	0x03A56FD4 STRB W8, [X21 + 0x1E3]
	0x03A56FD8 LDR X0, [X20]
	0x03A56FDC STRH W31, [X31 + 0xC]
	0x03A56FE0 STRB W31, [X31 + 0xE]
	0x03A56FE4 STRH W31, [X31 + 0x8]
	0x03A56FE8 STRB W31, [X31 + 0xA]
	0x03A56FEC ADRP X20, 0x6FE000
	0x03A56FF0 LDR W8, [X0 + 0xE0]
	0x03A56FF4 LDR X20, [X20 + 0x10]
	0x03A56FF8 CBNZ W8, 0x3A57000
	0x03A56FFC BL 0x1C16DFC
	0x03A57000 MOV X0, X31

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X20, 0x98D000
	010 Move W8, [X20+477]
	011 Move X19, X1
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x701000
	017 Move X0, [X0+512]
	018 Call 0x1C17CF4
	019 Move X0, 0x701000
	020 Move X0, [X0+520]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X20+477], W8
	024 Move W8, [X19+12]
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move X25, 0x701000
	027 Move X25, [X25+512]
	028 Move W20, W31
	029 Move W24, W31
	030 Move W21, W31
	031 Move X2, [X25]
	032 Move X0, X19
	033 Move W1, W21
	034 Call WorkSlice`1<LightCookieMapping>.get_Item, X0, X1
	035 Compare X1, 0
	036 JumpIfEqual {74}
	037 Move X0, X1
	038 Move X1, X31
	039 Call Light.get_cookie, X0
	040 Compare X0, 0
	041 JumpIfEqual {74}
	042 Move X1, X31
	043 Move X22, X0
	044 Call Object.GetInstanceID, X0
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Move X8, [X22]
	047 Move W23, W0
	048 Move X0, X22
	049 Move X9, [X8+392]
	050 Move X1, [X8+400]
	051 NotImplemented "Instruction BLR not yet implemented."
	052 Move X8, [X22]
	053 Move W24, W0
	054 Move X0, X22
	055 Move X9, [X8+424]
	056 Move X1, [X8+432]
	057 NotImplemented "Instruction BLR not yet implemented."
	058 NotImplemented "Instruction MADD not yet implemented."
	059 Move W24, W23
	060 Move W8, [X19+12]
	061 Add W21, W21, 1
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Move W20, W31
	064 Move W0, W20
	065 Move X20, [X31+48]
	066 Move X19, [X31+56]
	067 Move X22, [X31+32]
	068 Move X21, [X31+40]
	069 Move X24, [X31+16]
	070 Move X23, [X31+24]
	071 Move X30, [X31+64]
	072 Move X25, [X31+72]
	073 Return X0
	074 Call 0x1C17F20

Method: System.Int32 ApproximateCookieSizeDivisor(System.Single requestAtlasRatio)

Disassembly:
	0x03A57004 BL 0x3A89318
	0x03A57008 LDR X8, [X20]
	0x03A5700C MOV W20, W0
	0x03A57010 LDR W9, [X8 + 0xE0]
	0x03A57014 CBNZ W9, 0x3A57020
	0x03A57018 MOV X0, X8
	0x03A5701C BL 0x1C16DFC
	0x03A57020 MOV X0, X31
	0x03A57024 BL 0x3A70480
	0x03A57028 MOVZ W10, 0x4
	0x03A5702C AND W8, W0, 0x1

ISIL:
	001 NotImplemented "Instruction FSQRT not yet implemented."
	002 Move S1, 1
	003 Move W8, 0x7F800000
	004 NotImplemented "Instruction FRINTP not yet implemented."
	005 Move S2, W8
	006 NotImplemented "Instruction FMAXNM not yet implemented."
	007 NotImplemented "Instruction FCVTZS not yet implemented."
	008 NotImplemented "Instruction FCMP not yet implemented."
	009 Move W9, 0x80000000
	010 NotImplemented "Instruction CSEL not yet implemented."
	011 Return X0

Method: UnityEngine.Vector4 Fetch2D(UnityEngine.Rendering.CommandBuffer cmd, UnityEngine.Texture cookie, System.Int32 cookieSizeDivisor = 1)

Disassembly:
	0x03A573EC MOV W1, W20
	0x03A573F0 LDR X0, [X8]
	0x03A573F4 BL 0x1C16D6C
	0x03A573F8 LDR X12, [X19]
	0x03A573FC CBZ X12, 0x3A5744C
	0x03A57400 LDR X9, [X12 + 0x18]
	0x03A57404 CMP W9, 0x1
	0x03A57408 B.LT 0x3A5744C
	0x03A5740C AND X9, X9, 0x0
	0x03A57410 MOV X8, X31
	0x03A57414 ADD X10, X0, 0x20
	0x03A57418 SXTW X11, W9
	0x03A5741C ADD X12, X12, 0x20
	0x03A57420 CMP X8, X9
	0x03A57424 B.CS 0x3A57460
	0x03A57428 CBZ X0, 0x3A57464
	0x03A5742C LDR W13, [X0 + 0x18]
	0x03A57430 CMP X8, X13
	0x03A57434 B.CS 0x3A57460
	0x03A57438 LDR V0, [X12, X8, LSL #2]
	0x03A5743C STR S0, [X10, X8, LSL #2]
	0x03A57440 ADD X8, X8, 0x1
	0x03A57444 CMP X8, X11
	0x03A57448 B.LT 0x3A57420
	0x03A5744C STR X0, [X19]
	0x03A57450 LDP X20, X19, [X31 + 0x20]
	0x03A57454 LDP X30, X21, [X31 + 0x10]
	0x03A57458 ADD X31, X31, 0x30
	0x03A5745C RET
	0x03A57460 BL 0x1C16F28
	0x03A57464 BL 0x1C16F20
	0x03A57468 SBFM W8, W1, 0x5, 0x1F
	0x03A5746C AND W9, W1, 0x1F
	0x03A57470 STR W8, [X2]
	0x03A57474 STR W9, [X3]
	0x03A57478 RET
	0x03A5747C LDR X8, [X0]
	0x03A57480 CBZ X8, 0x3A57498
	0x03A57484 LDR W9, [X8 + 0x18]
	0x03A57488 CBZ W9, 0x3A57494
	0x03A5748C ADD X8, X8, 0x20
	0x03A57490 B 0x3A57498
	0x03A57494 MOV X8, X31
	0x03A57498 SBFM W9, W1, 0x5, 0x1F
	0x03A5749C LDR W8, [X8, W9, SXTW]
	0x03A574A0 LSRV W8, W8, W1
	0x03A574A4 AND W0, W8, 0x1
	0x03A574A8 RET
	0x03A574AC STP X29, X30, [X31 - 0x30]!
	0x03A574B0 STP X22, X21, [X31 + 0x10]
	0x03A574B4 STP X20, X19, [X31 + 0x20]
	0x03A574B8 ADD X29, X31, 0x0
	0x03A574BC SUB X31, X31, 0x10
	0x03A574C0 MRS X22, 0xC000
	0x03A574C4 LDR X8, [X22 + 0x28]
	0x03A574C8 ADRP X20, 0x98B000
	0x03A574CC MOV X19, X0
	0x03A574D0 STUR X8, [X29 - 0x8]
	0x03A574D4 LDRB W8, [X20 + 0x1E9]
	0x03A574D8 TBNZ X8, 0x0, 0x3A574F0
	0x03A574DC ADRP X0, 0x69C000
	0x03A574E0 LDR X0, [X0 + 0x5A8]
	0x03A574E4 BL 0x1C16CF4
	0x03A574E8 MOVZ W8, 0x1
	0x03A574EC STRB W8, [X20 + 0x1E9]
	0x03A574F0 ADRP X8, 0x69C000
	0x03A574F4 LDR X9, [X19]
	0x03A574F8 LDR X8, [X8 + 0x5A8]
	0x03A574FC CBZ X9, 0x3A5750C
	0x03A57500 LDR W9, [X9 + 0x18]
	0x03A57504 UBFM W20, W9, 0x1B, 0x1A
	0x03A57508 B 0x3A57510
	0x03A5750C MOV W20, W31
	0x03A57510 LDR X0, [X8]
	0x03A57514 LDR W8, [X0 + 0xE0]
	0x03A57518 CBNZ W8, 0x3A57520
	0x03A5751C BL 0x1C16DFC
	0x03A57520 MOVZ W1, 0x1000
	0x03A57524 MOV W0, W20
	0x03A57528 MOV X2, X31
	0x03A5752C BL 0x337EE94
	0x03A57530 SXTW X20, W0
	0x03A57534 CBZ W0, 0x3A575B8
	0x03A57538 ADD X9, X20, 0xF
	0x03A5753C ADD X8, X31, 0x0
	0x03A57540 AND X9, X9, 0xFFFFFFFF

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+8], X31
	003 Move [X31+16], X30
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X22, 0x982000
	011 Move W8, [X22+3674]
	012 Move W23, W3
	013 Move X20, X2
	014 Move X21, X1
	015 Move X19, X0
	016 Move [X31], X31
	017 Move [X31+24], X31
	018 Compare W8, 0
	019 JumpIfNotEqual {25}
	020 Move X0, 0x6A4000
	021 Move X0, [X0+2464]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X22+3674], W8
	025 Move X8, 0x6A4000
	026 Move X8, [X8+2464]
	027 Move X8, [X8]
	028 Move X8, [X8+184]
	029 Move V0, [X8]
	030 Move [X31], V0
	031 Compare X20, 0
	032 JumpIfEqual {107}
	033 Move X8, [X20]
	034 Move X0, X20
	035 Move X9, [X8+392]
	036 Move X1, [X8+400]
	037 NotImplemented "Instruction BLR not yet implemented."
	038 Move X8, [X20]
	039 NotImplemented "Instruction SDIV not yet implemented."
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Move W24, 4
	042 Move X10, [X8+424]
	043 Move X1, [X8+432]
	044 Move X0, X20
	045 NotImplemented "Instruction CSEL not yet implemented."
	046 NotImplemented "Instruction BLR not yet implemented."
	047 NotImplemented "Instruction SDIV not yet implemented."
	048 NotImplemented "Instruction CMP not yet implemented."
	049 NotImplemented "Instruction CSEL not yet implemented."
	050 NotImplemented "Instruction SCVTF not yet implemented."
	051 NotImplemented "Instruction SCVTF not yet implemented."
	052 Move [X31+24], S0
	053 Move [X31+32], S1
	054 Move X0, [X19+16]
	055 Compare X0, 0
	056 JumpIfEqual {107}
	057 Add X1, X31, 0
	058 Move X2, X20
	059 Move X3, X31
	060 Call Texture2DAtlas.IsCached, X0, X1, X2
	061 Move X8, [X19+16]
	062 Compare X8, 0
	063 JumpIfEqual {107}
	064 Move X9, [X8]
	065 Move TEMP, X0
	066 And TEMP, TEMP, 1
	067 Compare TEMP, 1
	068 JumpIfNotEqual {78}
	069 Move X10, [X9+520]
	070 Move X6, [X9+528]
	071 Add X3, X31, 0
	072 Move W4, 1
	073 Move W5, 1
	074 Move X0, X8
	075 Move X1, X21
	076 Move X2, X20
	077 NotImplemented "Instruction BLR not yet implemented."
	078 Move X10, [X9+424]
	079 Move X7, [X9+432]
	080 Add X2, X31, 0
	081 Move TEMP, 0
	082 Not TEMP
	083 Move W6, TEMP
	084 Move X0, X8
	085 Move X1, X21
	086 Move X3, X20
	087 Move W4, W22
	088 Move W5, W23
	089 NotImplemented "Instruction BLR not yet implemented."
	090 Add X1, X31, 0
	091 Add X3, X31, 24
	092 Move X0, X19
	093 Call LightCookieManager.AdjustUVRect, X0, X1, X2, X3
	094 Move S0, [X31]
	095 Move S1, [X31+4]
	096 Move S2, [X31+8]
	097 Move S3, [X31+12]
	098 Move X20, [X31+64]
	099 Move X19, [X31+72]
	100 Move X22, [X31+48]
	101 Move X21, [X31+56]
	102 Move X24, [X31+32]
	103 Move X23, [X31+40]
	104 Move X30, [X31+16]
	105 Add X31, X31, 80
	106 Return X0
	107 Call 0x1C17F20

Method: UnityEngine.Vector4 FetchCube(UnityEngine.Rendering.CommandBuffer cmd, UnityEngine.Texture cookie, System.Int32 cookieSizeDivisor = 1)

Disassembly:
	0x03A57288 LDP X9, X1, [X8 + 0x1A8]
	0x03A5728C BLR X9
	0x03A57290 SUB W8, W31, W22
	0x03A57294 MADD W0, W0, W21, W8
	0x03A57298 CBNZ W0, 0x3A572BC
	0x03A5729C MOV X0, X19
	0x03A572A0 MOV X1, X31
	0x03A572A4 BL 0x3C385F8
	0x03A572A8 MOV W19, W0
	0x03A572AC MOV X0, X20
	0x03A572B0 MOV X1, X31
	0x03A572B4 BL 0x3C385F8
	0x03A572B8 SUB W0, W19, W0
	0x03A572BC LDP X20, X19, [X31 + 0x20]
	0x03A572C0 LDP X22, X21, [X31 + 0x10]
	0x03A572C4 LDR X30, [X31], #0x30
	0x03A572C8 RET
	0x03A572CC BL 0x1C16F20
	0x03A572D0 UBFM X8, X1, 0x10, 0x1F
	0x03A572D4 SUB W0, W8, W3, 0x10, LSR
	0x03A572D8 RET
	0x03A572DC LDR X8, [X0]
	0x03A572E0 CBZ X8, 0x3A572EC
	0x03A572E4 LDR W0, [X8 + 0x18]
	0x03A572E8 RET
	0x03A572EC MOV W0, W31
	0x03A572F0 RET
	0x03A572F4 LDR X8, [X0]
	0x03A572F8 CBZ X8, 0x3A57308
	0x03A572FC LDR W8, [X8 + 0x18]
	0x03A57300 UBFM W0, W8, 0x1B, 0x1A
	0x03A57304 RET
	0x03A57308 MOV W0, W31
	0x03A5730C RET
	0x03A57310 LDR X0, [X0]
	0x03A57314 RET
	0x03A57318 SUB X31, X31, 0x30
	0x03A5731C STP X30, X21, [X31 + 0x10]
	0x03A57320 STP X20, X19, [X31 + 0x20]
	0x03A57324 ADRP X21, 0x98B000
	0x03A57328 LDRB W8, [X21 + 0x1E8]
	0x03A5732C MOV W20, W1
	0x03A57330 MOV X19, X0
	0x03A57334 TBNZ X8, 0x0, 0x3A57370
	0x03A57338 ADRP X0, 0x6A3000
	0x03A5733C LDR X0, [X0 + 0x5F0]
	0x03A57340 BL 0x1C16CF4
	0x03A57344 ADRP X0, 0x69D000
	0x03A57348 LDR X0, [X0 + 0x470]
	0x03A5734C BL 0x1C16CF4
	0x03A57350 ADRP X0, 0x69F000
	0x03A57354 LDR X0, [X0 + 0xEF8]
	0x03A57358 BL 0x1C16CF4
	0x03A5735C ADRP X0, 0x69C000
	0x03A57360 LDR X0, [X0 + 0x638]
	0x03A57364 BL 0x1C16CF4
	0x03A57368 MOVZ W8, 0x1
	0x03A5736C STRB W8, [X21 + 0x1E8]
	0x03A57370 LDR X8, [X19]
	0x03A57374 CBZ X8, 0x3A573CC
	0x03A57378 LDR W9, [X8 + 0x18]
	0x03A5737C CMP W20, W9, LSL
	0x03A57380 B.LT 0x3A57450
	0x03A57384 STR X31, [X31 + 0x8]
	0x03A57388 ADRP X11, 0x69D000
	0x03A5738C LDR X11, [X11 + 0x470]
	0x03A57390 LDR W1, [X8 + 0x18]
	0x03A57394 ADD W9, W20, 0x1F
	0x03A57398 ADD W10, W20, 0x3E
	0x03A5739C LDR X2, [X11]
	0x03A573A0 CMP W9, 0x0
	0x03A573A4 CSEL W8, W10, W9, LT
	0x03A573A8 ADD X0, X31, 0x8
	0x03A573AC SBFM W20, W8, 0x5, 0x1F
	0x03A573B0 BL 0x24341FC
	0x03A573B4 LDRB W8, [X31 + 0x8]
	0x03A573B8 CBZ W8, 0x3A573E4
	0x03A573BC LDR W8, [X31 + 0xC]
	0x03A573C0 CMP W20, W8
	0x03A573C4 B.EQ 0x3A57450
	0x03A573C8 B 0x3A573E4
	0x03A573CC TBNZ X20, 0x1F, 0x3A57450
	0x03A573D0 ADD W8, W20, 0x1F
	0x03A573D4 ADD W9, W20, 0x3E
	0x03A573D8 CMP W8, 0x0
	0x03A573DC CSEL W8, W9, W8, LT
	0x03A573E0 SBFM W20, W8, 0x5, 0x1F
	0x03A573E4 ADRP X8, 0x69C000
	0x03A573E8 LDR X8, [X8 + 0x638]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+32], X30
	003 Move [X31+40], X23
	004 Move [X31+48], X22
	005 Move [X31+56], X21
	006 Move [X31+64], X20
	007 Move [X31+72], X19
	008 Move X23, 0x982000
	009 Move W8, [X23+3674]
	010 Move W22, W3
	011 Move X20, X2
	012 Move X21, X1
	013 Move X19, X0
	014 Move [X31+16], X31
	015 Move [X31+24], X31
	016 Move [X31+8], X31
	017 Compare W8, 0
	018 JumpIfNotEqual {24}
	019 Move X0, 0x6A4000
	020 Move X0, [X0+2464]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X23+3674], W8
	024 Move X8, 0x6A4000
	025 Move X8, [X8+2464]
	026 Move X0, X19
	027 Move X1, X20
	028 Move X8, [X8]
	029 Move X8, [X8+184]
	030 Move V0, [X8]
	031 Move [X31+1], V0
	032 Call LightCookieManager.ComputeOctahedralCookieSize, X0, X1
	033 Move W8, W0
	034 Move X0, [X19+16]
	035 NotImplemented "Instruction SDIV not yet implemented."
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Move W9, 4
	038 NotImplemented "Instruction CSEL not yet implemented."
	039 Compare X0, 0
	040 JumpIfEqual {107}
	041 Add X1, X31, 16
	042 Move X2, X20
	043 Move X3, X31
	044 Call Texture2DAtlas.IsCached, X0, X1, X2
	045 Move X8, [X19+16]
	046 Compare X8, 0
	047 JumpIfEqual {107}
	048 Move X9, [X8]
	049 Move TEMP, X0
	050 And TEMP, TEMP, 1
	051 Compare TEMP, 1
	052 JumpIfNotEqual {62}
	053 Move X10, [X9+520]
	054 Move X6, [X9+528]
	055 Add X3, X31, 16
	056 Move W4, 1
	057 Move W5, 1
	058 Move X0, X8
	059 Move X1, X21
	060 Move X2, X20
	061 NotImplemented "Instruction BLR not yet implemented."
	062 Move X10, [X9+424]
	063 Move X7, [X9+432]
	064 Add X2, X31, 16
	065 Move TEMP, 0
	066 Not TEMP
	067 Move W6, TEMP
	068 Move X0, X8
	069 Move X1, X21
	070 Move X3, X20
	071 Move W4, W22
	072 Move W5, W22
	073 NotImplemented "Instruction BLR not yet implemented."
	074 Move X20, 0x98B000
	075 Move W8, [X20+2632]
	076 Compare W8, 0
	077 JumpIfNotEqual {83}
	078 Move X0, 0x6A5000
	079 Move X0, [X0+3848]
	080 Call 0x1C17CF4
	081 Move W8, 1
	082 Move [X20+2632], W8
	083 Move X8, 0x6A5000
	084 Move X8, [X8+3848]
	085 NotImplemented "Instruction SCVTF not yet implemented."
	086 Add X1, X31, 16
	087 Add X3, X31, 8
	088 Move X8, [X8]
	089 Move X0, X19
	090 Move X8, [X8+184]
	091 Move V0, [X8+8]
	092 NotImplemented "Instruction INVALID not yet implemented."
	093 Move [X31+8], D0
	094 Call LightCookieManager.AdjustUVRect, X0, X1, X2, X3
	095 Move S0, [X31+16]
	096 Move S1, [X31+20]
	097 Move S2, [X31+24]
	098 Move S3, [X31+28]
	099 Move X20, [X31+64]
	100 Move X19, [X31+72]
	101 Move X22, [X31+48]
	102 Move X21, [X31+56]
	103 Move X30, [X31+32]
	104 Move X23, [X31+40]
	105 Add X31, X31, 80
	106 Return X0
	107 Call 0x1C17F20

Method: System.Int32 ComputeOctahedralCookieSize(UnityEngine.Texture cookie)

Disassembly:
	0x03A576EC STP X20, X19, [X31 + 0x10]
	0x03A576F0 ADRP X21, 0x98B000
	0x03A576F4 ADRP X20, 0x6FF000
	0x03A576F8 LDRB W8, [X21 + 0x1EF]
	0x03A576FC LDR X20, [X20 + 0x2C0]
	0x03A57700 MOV X19, X0
	0x03A57704 TBNZ X8, 0x0, 0x3A5771C
	0x03A57708 ADRP X0, 0x6FF000
	0x03A5770C LDR X0, [X0 + 0x2C0]
	0x03A57710 BL 0x1C16CF4
	0x03A57714 MOVZ W8, 0x1
	0x03A57718 STRB W8, [X21 + 0x1EF]
	0x03A5771C LDP W1, W2, [X19 + 0x10]
	0x03A57720 LDR X3, [X20]
	0x03A57724 MOV X0, X19
	0x03A57728 LDP X20, X19, [X31 + 0x10]
	0x03A5772C LDP X30, X21, [X31], #0x20
	0x03A57730 B 0x21A0664
	0x03A57734 SUB X31, X31, 0x40
	0x03A57738 STR X30, [X31 + 0x10]
	0x03A5773C STP X22, X21, [X31 + 0x20]
	0x03A57740 STP X20, X19, [X31 + 0x30]
	0x03A57744 ADRP X21, 0x98B000
	0x03A57748 LDRB W8, [X21 + 0x1F0]
	0x03A5774C MOV W19, W1
	0x03A57750 MOV X20, X0
	0x03A57754 TBNZ X8, 0x0, 0x3A5776C
	0x03A57758 ADRP X0, 0x6FF000
	0x03A5775C LDR X0, [X0 + 0x2C8]
	0x03A57760 BL 0x1C16CF4
	0x03A57764 MOVZ W8, 0x1
	0x03A57768 STRB W8, [X21 + 0x1F0]
	0x03A5776C ADRP X21, 0x6FF000
	0x03A57770 LDR X21, [X21 + 0x2C8]
	0x03A57774 MOV X0, X20
	0x03A57778 BL 0x3A576E8
	0x03A5777C ADRP X22, 0x98B000
	0x03A57780 LDRB W8, [X22 + 0x1ED]
	0x03A57784 STP X0, X1, [X31]
	0x03A57788 TBNZ X8, 0x0, 0x3A577A0
	0x03A5778C ADRP X0, 0x6FF000
	0x03A57790 LDR X0, [X0 + 0x2B0]
	0x03A57794 BL 0x1C16CF4
	0x03A57798 MOVZ W8, 0x1
	0x03A5779C STRB W8, [X22 + 0x1ED]
	0x03A577A0 LDR X8, [X20]
	0x03A577A4 MOVZ W9, 0x6
	0x03A577A8 MOVN W10, 0x0
	0x03A577AC LDR X3, [X21]
	0x03A577B0 LDR W8, [X8]
	0x03A577B4 ADD X0, X31, 0x0
	0x03A577B8 SDIV W9, W9, W8
	0x03A577BC SUBS W11, W19, W9
	0x03A577C0 BIC W12, W11, W11, 0x1F
	0x03A577C4 MUL W12, W12, W8
	0x03A577C8 LSLV W12, W10, W12
	0x03A577CC ADD W11, W11, 0x1
	0x03A577D0 LSLV W10, W10, W8
	0x03A577D4 BIC W11, W11, W11, 0x1F
	0x03A577D8 ORN W12, W31, W12, 0x0
	0x03A577DC MUL W11, W11, W8
	0x03A577E0 LSLV W8, W12, W8
	0x03A577E4 ORN W10, W31, W10, 0x0
	0x03A577E8 CSEL W9, W19, W9, LT
	0x03A577EC MOVZ W12, 0x1
	0x03A577F0 SDIV W8, W8, W10
	0x03A577F4 ADD W1, W8, W9
	0x03A577F8 LSLV W2, W12, W11
	0x03A577FC BL 0x23EE2C0
	0x03A57800 LDP X20, X19, [X31 + 0x30]
	0x03A57804 LDP X22, X21, [X31 + 0x20]
	0x03A57808 LDR X30, [X31 + 0x10]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x98C000
	007 Move W8, [X21+478]
	008 Move X20, X1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x69D000
	015 Move X0, [X0+1448]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+478], W8
	019 Compare X20, 0
	020 JumpIfEqual {89}
	021 Move X8, [X20]
	022 Move X22, 0x69D000
	023 Move X0, X20
	024 Move X9, [X8+392]
	025 Move X1, [X8+400]
	026 Move X22, [X22+1448]
	027 NotImplemented "Instruction BLR not yet implemented."
	028 Move X8, [X20]
	029 Move W21, W0
	030 Move X0, X20
	031 Move X9, [X8+424]
	032 Move X1, [X8+432]
	033 NotImplemented "Instruction BLR not yet implemented."
	034 Move X8, [X22]
	035 Move W20, W0
	036 Move W9, [X8+224]
	037 Compare W9, 0
	038 JumpIfNotEqual {41}
	039 Move X0, X8
	040 Call 0x1C17DFC
	041 Move W0, W21
	042 Move W1, W20
	043 Move X2, X31
	044 Call Math.Max, X0, X1
	045 Move W8, [X19+32]
	046 Move W21, [X19+36]
	047 Move W20, W0
	048 Move X1, X31
	049 Move W0, W8
	050 Call Mathf.IsPowerOfTwo, X0
	051 Move TEMP, X0
	052 And TEMP, TEMP, 1
	053 Compare TEMP, 1
	054 JumpIfNotEqual {72}
	055 Move W0, W21
	056 Move X1, X31
	057 Call Mathf.IsPowerOfTwo, X0
	058 Move V0, [X19+52]
	059 Move TEMP, X0
	060 And TEMP, TEMP, 1
	061 Compare TEMP, 1
	062 JumpIfNotEqual {73}
	063 Move W8, 0x7F800000
	064 Move S1, W8
	065 NotImplemented "Instruction FCVTZS not yet implemented."
	066 NotImplemented "Instruction FCMP not yet implemented."
	067 Move W8, 0x80000000
	068 NotImplemented "Instruction CSEL not yet implemented."
	069 Move X1, X31
	070 Call Mathf.NextPowerOfTwo, X0
	071 Multiply W0, W0, W20
	072 Move V0, [X19+52]
	073 NotImplemented "Instruction SCVTF not yet implemented."
	074 Move S2, 0.5
	075 Move W8, 0x7F800000
	076 Multiply S0, S0, S1
	077 Move S1, W8
	078 Add S0, S0, S2
	079 NotImplemented "Instruction FCVTZS not yet implemented."
	080 NotImplemented "Instruction FCMP not yet implemented."
	081 Move W9, 0x80000000
	082 NotImplemented "Instruction CSEL not yet implemented."
	083 Move X20, [X31+32]
	084 Move X19, [X31+40]
	085 Move X22, [X31+16]
	086 Move X21, [X31+24]
	087 Move X30, [X31+48]
	088 Return X0
	089 Call 0x1C17F20

Method: System.Void AdjustUVRect(ref UnityEngine.Vector4 uvScaleOffset, UnityEngine.Texture cookie, ref UnityEngine.Vector2 cookieSize)

Disassembly:
	0x03A57544 SUB X21, X8, X9
	0x03A57548 ADD X31, X21, 0x0
	0x03A5754C MOV X0, X21
	0x03A57550 MOV W1, W31
	0x03A57554 MOV X2, X20
	0x03A57558 BL 0x3EB1B10
	0x03A5755C CMP W20, 0x1
	0x03A57560 B.LT 0x3A575CC
	0x03A57564 MOV X8, X31
	0x03A57568 AND X9, X20, 0x0
	0x03A5756C MOVZ W10, 0x30
	0x03A57570 LDR X11, [X19]
	0x03A57574 CBZ X11, 0x3A5758C
	0x03A57578 LDR W12, [X11 + 0x18]
	0x03A5757C CBZ W12, 0x3A57588
	0x03A57580 ADD X11, X11, 0x20
	0x03A57584 B 0x3A5758C
	0x03A57588 MOV X11, X31
	0x03A5758C UBFM X12, X8, 0x3, 0x3F
	0x03A57590 AND X12, X12, 0xFFFFFFF
	0x03A57594 LDR W11, [X11, X12, LSL]
	0x03A57598 LSRV W11, W11, W8
	0x03A5759C ANDS W31, W11, 0x1
	0x03A575A0 CINC W11, W10, NE
	0x03A575A4 STRB W11, [X21, X8, LSL]
	0x03A575A8 ADD X8, X8, 0x1
	0x03A575AC CMP X9, X8
	0x03A575B0 B.NE 0x3A57570
	0x03A575B4 B 0x3A575CC
	0x03A575B8 MOV X0, X31
	0x03A575BC MOV W1, W31
	0x03A575C0 MOV X2, X20
	0x03A575C4 BL 0x3EB1B10
	0x03A575C8 MOV X21, X31
	0x03A575CC MOV X0, X31
	0x03A575D0 BL 0x3241948
	0x03A575D4 MOV X4, X0
	0x03A575D8 MOV X0, X31
	0x03A575DC MOV X1, X21
	0x03A575E0 MOV W2, W31
	0x03A575E4 MOV W3, W20
	0x03A575E8 MOV X5, X31
	0x03A575EC BL 0x322EB00
	0x03A575F0 LDR X8, [X22 + 0x28]
	0x03A575F4 LDUR X9, [X29 - 0x8]
	0x03A575F8 CMP X8, X9
	0x03A575FC B.NE 0x3A57614
	0x03A57600 ADD X31, X29, 0x0
	0x03A57604 LDP X20, X19, [X31 + 0x20]
	0x03A57608 LDP X22, X21, [X31 + 0x10]
	0x03A5760C LDP X29, X30, [X31], #0x30
	0x03A57610 RET
	0x03A57614 BL 0x3EB1B20
	0x03A57618 LDR X0, [X0 + 0x18]
	0x03A5761C RET
	0x03A57620 LDR X0, [X0 + 0x30]
	0x03A57624 RET
	0x03A57628 LDR X0, [X0 + 0x20]
	0x03A5762C RET
	0x03A57630 LDR X0, [X0 + 0x28]
	0x03A57634 RET
	0x03A57638 LDRB W0, [X0 + 0x50]
	0x03A5763C RET
	0x03A57640 AND W8, W1, 0x1
	0x03A57644 STRB W8, [X0 + 0x50]
	0x03A57648 RET
	0x03A5764C STP W1, W2, [X0]
	0x03A57650 RET
	0x03A57654 LDR W0, [X0 + 0x4]
	0x03A57658 MOV X1, X31
	0x03A5765C B 0x3A6A048
	0x03A57660 STR X30, [X31 - 0x20]!
	0x03A57664 STP X20, X19, [X31 + 0x10]
	0x03A57668 ADRP X20, 0x98B000
	0x03A5766C LDRB W8, [X20 + 0x1ED]
	0x03A57670 MOV X19, X0
	0x03A57674 TBNZ X8, 0x0, 0x3A5768C
	0x03A57678 ADRP X0, 0x6FF000
	0x03A5767C LDR X0, [X0 + 0x2B0]
	0x03A57680 BL 0x1C16CF4
	0x03A57684 MOVZ W8, 0x1
	0x03A57688 STRB W8, [X20 + 0x1ED]
	0x03A5768C LDR X0, [X19]
	0x03A57690 LDP X20, X19, [X31 + 0x10]
	0x03A57694 LDR X30, [X31], #0x20
	0x03A57698 RET
	0x03A5769C STP X30, X21, [X31 - 0x20]!
	0x03A576A0 STP X20, X19, [X31 + 0x10]
	0x03A576A4 ADRP X21, 0x98B000
	0x03A576A8 ADRP X20, 0x6FF000
	0x03A576AC LDRB W8, [X21 + 0x1EE]
	0x03A576B0 LDR X20, [X20 + 0x2B8]
	0x03A576B4 MOV X19, X0
	0x03A576B8 TBNZ X8, 0x0, 0x3A576D0
	0x03A576BC ADRP X0, 0x6FF000
	0x03A576C0 LDR X0, [X0 + 0x2B8]
	0x03A576C4 BL 0x1C16CF4
	0x03A576C8 MOVZ W8, 0x1
	0x03A576CC STRB W8, [X21 + 0x1EE]
	0x03A576D0 LDP W1, W2, [X19 + 0x8]
	0x03A576D4 LDR X3, [X20]
	0x03A576D8 MOV X0, X19
	0x03A576DC LDP X20, X19, [X31 + 0x10]
	0x03A576E0 LDP X30, X21, [X31], #0x20
	0x03A576E4 B 0x21A0608
	0x03A576E8 STP X30, X21, [X31 - 0x20]!

ISIL:
	001 Move [X31-64], D9
	002 Move [X31-56], D8
	003 Move [X31+16], X30
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X22, 0x98C000
	009 Move W8, [X22+479]
	010 Move X20, X3
	011 Move X19, X1
	012 Move X21, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0x700000
	018 Move X0, [X0+344]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X22+479], W8
	022 Move [X31+24], X31
	023 Move X22, 0x982000
	024 Move W8, [X22+3674]
	025 Move D9, [X19]
	026 Move D8, [X19+8]
	027 Compare W8, 0
	028 JumpIfNotEqual {34}
	029 Move X0, 0x6A4000
	030 Move X0, [X0+2464]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X22+3674], W8
	034 Move X8, 0x6A4000
	035 Move X8, [X8+2464]
	036 Move X8, [X8]
	037 Move X8, [X8+184]
	038 Move D0, [X8]
	039 Move D1, [X8+8]
	040 Move X8, -49729536
	041 Move V2, [X8+3872]
	042 Subtract V0, V9, V0
	043 NotImplemented "Instruction INVALID not yet implemented."
	044 Subtract V1, V8, V1
	045 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	046 NotImplemented "Instruction INVALID not yet implemented."
	047 Add V0, V0, V3
	048 Add V0, V1, V0
	049 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	050 Add V0, V1, V0
	051 NotImplemented "Instruction FCMP not yet implemented."
	052 Move W8, [X21+44]
	053 Compare W8, 0
	054 JumpIfEqual {108}
	055 Move X8, [X21+16]
	056 Move S8, 1
	057 Compare X8, 0
	058 JumpIfEqual {72}
	059 Move X9, 0x700000
	060 Move X9, [X9+344]
	061 Move X10, [X8]
	062 Move X9, [X9]
	063 Move W12, [X10+304]
	064 Move W11, [X9+304]
	065 NotImplemented "Instruction CMP not yet implemented."
	066 Move X10, [X10+200]
	067 Add X10, X10, X11
	068 NotImplemented "Instruction LDUR not yet implemented."
	069 NotImplemented "Instruction CMP not yet implemented."
	070 Move V0, [X8+72]
	071 NotImplemented "Instruction SCVTF not yet implemented."
	072 Move X21, 0x98B000
	073 Move W8, [X21+2632]
	074 Compare W8, 0
	075 JumpIfNotEqual {81}
	076 Move X0, 0x6A5000
	077 Move X0, [X0+3848]
	078 Call 0x1C17CF4
	079 Move W8, 1
	080 Move [X21+2632], W8
	081 Move X8, 0x6A5000
	082 Move X8, [X8+3848]
	083 Move V0, V8
	084 Move X8, [X8]
	085 Move X8, [X8+184]
	086 Move V9, [X8+8]
	087 Call 0x3EB2B90
	088 Move W9, 0x7F800000
	089 NotImplemented "Instruction FCVTZS not yet implemented."
	090 Move W10, 0xCF000000
	091 Move S2, W9
	092 NotImplemented "Instruction SCVTF not yet implemented."
	093 NotImplemented "Instruction FCMP not yet implemented."
	094 Move S0, W10
	095 NotImplemented "Instruction FCSEL not yet implemented."
	096 NotImplemented "Instruction INVALID not yet implemented."
	097 Add V0, V0, V0
	098 Add X1, X31, 24
	099 Move X0, X20
	100 Move X2, X19
	101 Move X3, X31
	102 Move [X31+24], D0
	103 Call PowerOfTwoTextureAtlas.GetPayloadScaleOffset, X0, X1, X2
	104 Move [X19], S0
	105 Move [X19+8], S1
	106 Move [X19+8], S2
	107 Move [X19+16], S3
	108 Move S0, 0.5
	109 Move X1, X19
	110 Move X2, X20
	111 Call LightCookieManager.ShrinkUVRect, X0, X1, V0, X2
	112 Move X20, [X31+48]
	113 Move X19, [X31+56]
	114 Move X22, [X31+32]
	115 Move X21, [X31+40]
	116 Move X30, [X31+16]
	117 Move D9, [X31+64]
	118 Move D8, [X31+72]
	119 Return 

Method: System.Void ShrinkUVRect(ref UnityEngine.Vector4 uvScaleOffset, System.Single amountPixels, ref UnityEngine.Vector2 cookieSize)

Disassembly:
	0x03A5780C ADD X31, X31, 0x40
	0x03A57810 RET
	0x03A57814 MOVZ W8, 0x6
	0x03A57818 SDIV W8, W8, W1
	0x03A5781C SUBS W9, W0, W8
	0x03A57820 BIC W9, W9, W9, 0x1F
	0x03A57824 MOVN W10, 0x0
	0x03A57828 MUL W9, W9, W1
	0x03A5782C LSLV W9, W10, W9
	0x03A57830 LSLV W10, W10, W1
	0x03A57834 ORN W9, W31, W9, 0x0
	0x03A57838 LSLV W9, W9, W1
	0x03A5783C ORN W10, W31, W10, 0x0
	0x03A57840 CSEL W8, W0, W8, LT
	0x03A57844 SDIV W9, W9, W10
	0x03A57848 ADD W0, W8, W9
	0x03A5784C RET
	0x03A57850 MOVZ W8, 0x6
	0x03A57854 SDIV W8, W8, W1
	0x03A57858 SUB W8, W0, W8
	0x03A5785C ADD W8, W8, 0x1
	0x03A57860 BIC W8, W8, W8, 0x1F
	0x03A57864 MUL W8, W8, W1
	0x03A57868 MOVZ W9, 0x1
	0x03A5786C LSLV W0, W9, W8
	0x03A57870 RET
	0x03A57874 STP X30, X21, [X31 - 0x20]!
	0x03A57878 STP X20, X19, [X31 + 0x10]
	0x03A5787C ADRP X21, 0x98B000
	0x03A57880 ADRP X20, 0x6FF000
	0x03A57884 LDRB W8, [X21 + 0x1F1]
	0x03A57888 LDR X20, [X20 + 0x2B8]
	0x03A5788C MOV X19, X0
	0x03A57890 TBNZ X8, 0x0, 0x3A578A8
	0x03A57894 ADRP X0, 0x6FF000
	0x03A57898 LDR X0, [X0 + 0x2B8]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x98B000
	007 Move W8, [X21+2632]
	008 Move X20, X2
	009 Move X19, X1
	010 Compare W8, 0
	011 JumpIfNotEqual {19}
	012 Move X0, 0x6A5000
	013 Move X0, [X0+3848]
	014 Move [X31], V0
	015 Call 0x1C17CF4
	016 Move V0, [X31]
	017 Move W8, 1
	018 Move [X21+2632], W8
	019 Move X8, 0x6A5000
	020 Move X8, [X8+3848]
	021 Move V1, [X20]
	022 Add S2, S0, S0
	023 Move X30, [X31+16]
	024 Move X21, [X31+24]
	025 Move X8, [X8]
	026 Move X8, [X8+184]
	027 Move V4, [X8+8]
	028 NotImplemented "Instruction INVALID not yet implemented."
	029 NotImplemented "Instruction INVALID not yet implemented."
	030 Move D2, [X19]
	031 Move D4, [X19+8]
	032 NotImplemented "Instruction INVALID not yet implemented."
	033 Subtract V0, V1, V0
	034 NotImplemented "Instruction INVALID not yet implemented."
	035 NotImplemented "Instruction INVALID not yet implemented."
	036 Add V1, V4, V1
	037 NotImplemented "Instruction INVALID not yet implemented."
	038 Move [X19], D0
	039 Move [X19+8], D1
	040 Move X20, [X31+32]
	041 Move X19, [X31+40]
	042 Add X31, X31, 48
	043 Return 

Method: System.Void UploadAdditionalLights(UnityEngine.Rendering.CommandBuffer cmd, ref UnityEngine.Rendering.Universal.LightData lightData, ref UnityEngine.Rendering.Universal.LightCookieManager/WorkSlice`1<UnityEngine.Rendering.Universal.LightCookieManager/LightCookieMapping> validLightMappings, ref UnityEngine.Rendering.Universal.LightCookieManager/WorkSlice`1<UnityEngine.Vector4> validUvRects)

Disassembly:
	0x03A569A4 LDR X0, [X8]
	0x03A569A8 LDR W8, [X0 + 0xE0]
	0x03A569AC CBNZ W8, 0x3A569B4
	0x03A569B0 BL 0x1C16DFC
	0x03A569B4 ADRP X8, 0x700000
	0x03A569B8 LDR X8, [X8 + 0x218]
	0x03A569BC LDR X0, [X8]
	0x03A569C0 BL 0x2215AA0
	0x03A569C4 ADRP X23, 0x6C6000
	0x03A569C8 LDR X23, [X23 + 0x4F0]
	0x03A569CC MOV W21, W0
	0x03A569D0 LDR X8, [X23]
	0x03A569D4 MOV X0, X8
	0x03A569D8 BL 0x1C16F10
	0x03A569DC MOV W1, W19
	0x03A569E0 MOV W2, W21
	0x03A569E4 MOV X3, X31
	0x03A569E8 MOV X22, X0
	0x03A569EC BL 0x3C3AA2C
	0x03A569F0 STR X22, [X20 + 0x38]
	0x03A569F4 ADRP X8, 0x700000
	0x03A569F8 LDR X8, [X8 + 0x228]
	0x03A569FC LDR X0, [X8]
	0x03A56A00 BL 0x2215BC8
	0x03A56A04 LDR X8, [X23]
	0x03A56A08 MOV W21, W0
	0x03A56A0C MOV X0, X8
	0x03A56A10 BL 0x1C16F10
	0x03A56A14 MOV W1, W19
	0x03A56A18 MOV W2, W21
	0x03A56A1C MOV X3, X31
	0x03A56A20 MOV X22, X0
	0x03A56A24 BL 0x3C3AA2C
	0x03A56A28 STR X22, [X20 + 0x40]
	0x03A56A2C ADRP X8, 0x700000
	0x03A56A30 LDR X8, [X8 + 0x220]
	0x03A56A34 LDR X0, [X8]
	0x03A56A38 BL 0x2215B34
	0x03A56A3C LDR X8, [X23]
	0x03A56A40 MOV W21, W0
	0x03A56A44 MOV X0, X8
	0x03A56A48 BL 0x1C16F10
	0x03A56A4C MOV W1, W19
	0x03A56A50 MOV W2, W21
	0x03A56A54 MOV X3, X31
	0x03A56A58 MOV X22, X0
	0x03A56A5C BL 0x3C3AA2C
	0x03A56A60 STR X22, [X20 + 0x48]
	0x03A56A64 STR W19, [X20 + 0x10]
	0x03A56A68 LDP X20, X19, [X31 + 0x20]
	0x03A56A6C LDP X22, X21, [X31 + 0x10]
	0x03A56A70 LDP X30, X23, [X31], #0x30
	0x03A56A74 RET
	0x03A56A78 STR X30, [X31 - 0x10]!
	0x03A56A7C LDR X11, [X0]
	0x03A56A80 CBZ X11, 0x3A56AC4
	0x03A56A84 LDR W8, [X11 + 0x18]
	0x03A56A88 UBFM X9, X8, 0x20, 0x1F
	0x03A56A8C CMP X9, 0x1
	0x03A56A90 B.LT 0x3A56AB8
	0x03A56A94 MOV X9, X31
	0x03A56A98 SXTW X10, W8
	0x03A56A9C ADD X11, X11, 0x20
	0x03A56AA0 CMP X9, X8
	0x03A56AA4 B.CS 0x3A56AC0
	0x03A56AA8 STR W31, [X11, X9, LSL #2]
	0x03A56AAC ADD X9, X9, 0x1
	0x03A56AB0 CMP X9, X10
	0x03A56AB4 B.LT 0x3A56AA0
	0x03A56AB8 LDR X30, [X31], #0x10
	0x03A56ABC RET
	0x03A56AC0 BL 0x1C16F28
	0x03A56AC4 BL 0x1C16F20
	0x03A56AC8 LDR X8, [X0]
	0x03A56ACC CBZ X8, 0x3A56AE4
	0x03A56AD0 LDR W9, [X8 + 0x18]
	0x03A56AD4 CBZ W9, 0x3A56AE0
	0x03A56AD8 ADD X8, X8, 0x20
	0x03A56ADC B 0x3A56AE4
	0x03A56AE0 MOV X8, X31
	0x03A56AE4 SBFM W9, W1, 0x5, 0x1F
	0x03A56AE8 LDR W10, [X8, W9, SXTW]
	0x03A56AEC MOVZ W11, 0x1
	0x03A56AF0 LSLV W11, W11, W1
	0x03A56AF4 ANDS W31, W2, 0x1
	0x03A56AF8 BIC W12, W10, W11, 0x0
	0x03A56AFC ORR W10, W10, W11, 0x0
	0x03A56B00 CSEL W10, W10, W12, NE
	0x03A56B04 STR W10, [X8, W9, SXTW]
	0x03A56B08 RET
	0x03A56B0C STP X30, X21, [X31 - 0x20]!
	0x03A56B10 STP X20, X19, [X31 + 0x10]
	0x03A56B14 ADRP X21, 0x98C000
	0x03A56B18 LDRB W8, [X21 + 0x1EB]
	0x03A56B1C MOV X20, X1
	0x03A56B20 MOV X19, X0
	0x03A56B24 TBNZ X8, 0x0, 0x3A56B3C
	0x03A56B28 ADRP X0, 0x700000
	0x03A56B2C LDR X0, [X0 + 0x188]
	0x03A56B30 BL 0x1C16CF4
	0x03A56B34 MOVZ W8, 0x1
	0x03A56B38 STRB W8, [X21 + 0x1EB]
	0x03A56B3C ADRP X21, 0x700000
	0x03A56B40 LDRB W8, [X19 + 0x14]
	0x03A56B44 LDR X21, [X21 + 0x188]
	0x03A56B48 CBZ W8, 0x3A56BF4
	0x03A56B4C LDR X0, [X19 + 0x38]
	0x03A56B50 CBZ X0, 0x3A56C9C
	0x03A56B54 LDR X1, [X19 + 0x18]
	0x03A56B58 MOV X2, X31
	0x03A56B5C BL 0x3C3ACC4
	0x03A56B60 LDR X0, [X19 + 0x40]
	0x03A56B64 CBZ X0, 0x3A56C9C
	0x03A56B68 LDR X1, [X19 + 0x20]
	0x03A56B6C MOV X2, X31
	0x03A56B70 BL 0x3C3ACC4
	0x03A56B74 LDR X0, [X19 + 0x48]
	0x03A56B78 CBZ X0, 0x3A56C9C
	0x03A56B7C LDR X1, [X19 + 0x28]
	0x03A56B80 MOV X2, X31
	0x03A56B84 BL 0x3C3ACC4
	0x03A56B88 LDR X0, [X21]
	0x03A56B8C LDR W8, [X0 + 0xE0]
	0x03A56B90 CBNZ W8, 0x3A56B98
	0x03A56B94 BL 0x1C16DFC
	0x03A56B98 CBZ X20, 0x3A56C9C
	0x03A56B9C LDR X8, [X21]
	0x03A56BA0 LDR X2, [X19 + 0x38]
	0x03A56BA4 MOV X0, X20
	0x03A56BA8 MOV X3, X31
	0x03A56BAC LDR X8, [X8 + 0xB8]
	0x03A56BB0 LDR W1, [X8 + 0x20]
	0x03A56BB4 BL 0x3C4FD54
	0x03A56BB8 LDR X8, [X21]
	0x03A56BBC LDR X2, [X19 + 0x40]
	0x03A56BC0 MOV X0, X20
	0x03A56BC4 MOV X3, X31
	0x03A56BC8 LDR X8, [X8 + 0xB8]
	0x03A56BCC LDR W1, [X8 + 0x18]
	0x03A56BD0 BL 0x3C4FD54
	0x03A56BD4 LDR X8, [X21]
	0x03A56BD8 LDR X2, [X19 + 0x48]
	0x03A56BDC MOV X0, X20
	0x03A56BE0 MOV X3, X31
	0x03A56BE4 LDR X8, [X8 + 0xB8]
	0x03A56BE8 LDR W1, [X8 + 0x24]
	0x03A56BEC BL 0x3C4FD54
	0x03A56BF0 B 0x3A56C5C
	0x03A56BF4 LDR X0, [X21]
	0x03A56BF8 LDR W8, [X0 + 0xE0]
	0x03A56BFC CBNZ W8, 0x3A56C04
	0x03A56C00 BL 0x1C16DFC
	0x03A56C04 CBZ X20, 0x3A56C9C
	0x03A56C08 LDR X8, [X21]
	0x03A56C0C LDR X2, [X19 + 0x18]
	0x03A56C10 MOV X0, X20
	0x03A56C14 MOV X3, X31
	0x03A56C18 LDR X8, [X8 + 0xB8]
	0x03A56C1C LDR W1, [X8 + 0x28]
	0x03A56C20 BL 0x3C4D47C
	0x03A56C24 LDR X8, [X21]
	0x03A56C28 LDR X2, [X19 + 0x20]
	0x03A56C2C MOV X0, X20
	0x03A56C30 MOV X3, X31
	0x03A56C34 LDR X8, [X8 + 0xB8]
	0x03A56C38 LDR W1, [X8 + 0x1C]
	0x03A56C3C BL 0x3C4D428
	0x03A56C40 LDR X8, [X21]
	0x03A56C44 LDR X2, [X19 + 0x28]
	0x03A56C48 MOV X0, X20
	0x03A56C4C MOV X3, X31
	0x03A56C50 LDR X8, [X8 + 0xB8]
	0x03A56C54 LDR W1, [X8 + 0x2C]
	0x03A56C58 BL 0x3C4D3D4
	0x03A56C5C LDR X0, [X21]
	0x03A56C60 LDR W8, [X0 + 0xE0]
	0x03A56C64 CBNZ W8, 0x3A56C6C
	0x03A56C68 BL 0x1C16DFC
	0x03A56C6C LDR X8, [X21]
	0x03A56C70 LDR X2, [X19 + 0x30]
	0x03A56C74 MOV X0, X20
	0x03A56C78 MOV X3, X31
	0x03A56C7C LDR X8, [X8 + 0xB8]
	0x03A56C80 LDR W1, [X8 + 0x14]
	0x03A56C84 BL 0x3C4D3D4
	0x03A56C88 MOVZ W8, 0x1
	0x03A56C8C STRB W8, [X19 + 0x50]
	0x03A56C90 LDP X20, X19, [X31 + 0x10]
	0x03A56C94 LDP X30, X21, [X31], #0x20
	0x03A56C98 RET
	0x03A56C9C BL 0x1C16F20
	0x03A56CA0 SUB X31, X31, 0xA0
	0x03A56CA4 STR X30, [X31 + 0x80]
	0x03A56CA8 STP X20, X19, [X31 + 0x90]
	0x03A56CAC ADRP X20, 0x98C000
	0x03A56CB0 ADRP X19, 0x700000
	0x03A56CB4 LDRB W8, [X20 + 0x1E1]
	0x03A56CB8 LDR X19, [X19 + 0x180]
	0x03A56CBC TBNZ X8, 0x0, 0x3A56CD4
	0x03A56CC0 ADRP X0, 0x700000
	0x03A56CC4 LDR X0, [X0 + 0x180]
	0x03A56CC8 BL 0x1C16CF4
	0x03A56CCC MOVZ W8, 0x1
	0x03A56CD0 STRB W8, [X20 + 0x1E1]
	0x03A56CD4 ADD X8, X31, 0x0
	0x03A56CD8 FMOV S0, -0.5
	0x03A56CDC FMOV S1, 0.5
	0x03A56CE0 FMOV S2, -0.5
	0x03A56CE4 FMOV S3, 0.5
	0x03A56CE8 FMOV S4, -0.5
	0x03A56CEC FMOV S5, 0.5
	0x03A56CF0 MOV X0, X31
	0x03A56CF4 BL 0x3C2737C
	0x03A56CF8 LDP V1, V0, [X31 + 0x20]
	0x03A56CFC LDP V3, V2, [X31]
	0x03A56D00 LDR X8, [X19]
	0x03A56D04 LDP X20, X19, [X31 + 0x90]
	0x03A56D08 STP V1, V0, [X31 + 0x60]
	0x03A56D0C STP V3, V2, [X31 + 0x40]
	0x03A56D10 LDR X8, [X8 + 0xB8]
	0x03A56D14 LDR X30, [X31 + 0x80]
	0x03A56D18 STP V1, V0, [X8 + 0x20]
	0x03A56D1C STP V3, V2, [X8]
	0x03A56D20 ADD X31, X31, 0xA0
	0x03A56D24 RET
	0x03A56D28 STP X29, X30, [X31 - 0x60]!
	0x03A56D2C STP X28, X27, [X31 + 0x10]
	0x03A56D30 STP X26, X25, [X31 + 0x20]
	0x03A56D34 STP X24, X23, [X31 + 0x30]
	0x03A56D38 STP X22, X21, [X31 + 0x40]
	0x03A56D3C STP X20, X19, [X31 + 0x50]
	0x03A56D40 ADRP X21, 0x98C000
	0x03A56D44 ADRP X22, 0x700000
	0x03A56D48 ADRP X19, 0x700000
	0x03A56D4C ADRP X20, 0x700000
	0x03A56D50 ADRP X29, 0x700000
	0x03A56D54 ADRP X28, 0x700000
	0x03A56D58 ADRP X27, 0x700000
	0x03A56D5C ADRP X26, 0x700000
	0x03A56D60 ADRP X25, 0x700000
	0x03A56D64 ADRP X24, 0x700000
	0x03A56D68 ADRP X23, 0x700000
	0x03A56D6C LDR X22, [X22 + 0x230]
	0x03A56D70 LDR X19, [X19 + 0x188]
	0x03A56D74 LDR X20, [X20 + 0x238]
	0x03A56D78 LDR X29, [X29 + 0x240]
	0x03A56D7C LDR X28, [X28 + 0x248]
	0x03A56D80 LDR X27, [X27 + 0x250]
	0x03A56D84 LDR X26, [X26 + 0x258]
	0x03A56D88 LDR X25, [X25 + 0x260]
	0x03A56D8C LDRB W8, [X21 + 0x1E2]
	0x03A56D90 LDR X24, [X24 + 0x268]
	0x03A56D94 LDR X23, [X23 + 0x270]
	0x03A56D98 TBNZ X8, 0x0, 0x3A56E40
	0x03A56D9C ADRP X0, 0x700000
	0x03A56DA0 LDR X0, [X0 + 0x188]
	0x03A56DA4 BL 0x1C16CF4
	0x03A56DA8 ADRP X0, 0x700000
	0x03A56DAC LDR X0, [X0 + 0x278]
	0x03A56DB0 BL 0x1C16CF4
	0x03A56DB4 ADRP X0, 0x700000
	0x03A56DB8 LDR X0, [X0 + 0x258]
	0x03A56DBC BL 0x1C16CF4
	0x03A56DC0 ADRP X0, 0x700000
	0x03A56DC4 LDR X0, [X0 + 0x280]
	0x03A56DC8 BL 0x1C16CF4
	0x03A56DCC ADRP X0, 0x700000
	0x03A56DD0 LDR X0, [X0 + 0x238]
	0x03A56DD4 BL 0x1C16CF4
	0x03A56DD8 ADRP X0, 0x700000
	0x03A56DDC LDR X0, [X0 + 0x268]
	0x03A56DE0 BL 0x1C16CF4
	0x03A56DE4 ADRP X0, 0x700000
	0x03A56DE8 LDR X0, [X0 + 0x250]
	0x03A56DEC BL 0x1C16CF4
	0x03A56DF0 ADRP X0, 0x700000
	0x03A56DF4 LDR X0, [X0 + 0x270]
	0x03A56DF8 BL 0x1C16CF4
	0x03A56DFC ADRP X0, 0x700000
	0x03A56E00 LDR X0, [X0 + 0x230]
	0x03A56E04 BL 0x1C16CF4
	0x03A56E08 ADRP X0, 0x700000
	0x03A56E0C LDR X0, [X0 + 0x260]
	0x03A56E10 BL 0x1C16CF4
	0x03A56E14 ADRP X0, 0x700000
	0x03A56E18 LDR X0, [X0 + 0x288]
	0x03A56E1C BL 0x1C16CF4
	0x03A56E20 ADRP X0, 0x700000
	0x03A56E24 LDR X0, [X0 + 0x240]
	0x03A56E28 BL 0x1C16CF4
	0x03A56E2C ADRP X0, 0x700000
	0x03A56E30 LDR X0, [X0 + 0x248]
	0x03A56E34 BL 0x1C16CF4
	0x03A56E38 MOVZ W8, 0x1
	0x03A56E3C STRB W8, [X21 + 0x1E2]
	0x03A56E40 LDR X0, [X22]
	0x03A56E44 MOV X1, X31
	0x03A56E48 BL 0x3C124EC
	0x03A56E4C LDR X8, [X19]
	0x03A56E50 MOV X1, X31
	0x03A56E54 LDR X8, [X8 + 0xB8]
	0x03A56E58 STR W0, [X8]
	0x03A56E5C LDR X0, [X20]
	0x03A56E60 BL 0x3C124EC
	0x03A56E64 LDR X8, [X19]
	0x03A56E68 MOV X1, X31
	0x03A56E6C LDR X8, [X8 + 0xB8]
	0x03A56E70 STR W0, [X8 + 0x4]
	0x03A56E74 LDR X0, [X29]
	0x03A56E78 BL 0x3C124EC
	0x03A56E7C LDR X8, [X19]
	0x03A56E80 MOV X1, X31
	0x03A56E84 LDR X8, [X8 + 0xB8]
	0x03A56E88 STR W0, [X8 + 0x8]
	0x03A56E8C LDR X0, [X28]
	0x03A56E90 BL 0x3C124EC
	0x03A56E94 LDR X8, [X19]
	0x03A56E98 MOV X1, X31
	0x03A56E9C LDR X8, [X8 + 0xB8]
	0x03A56EA0 STR W0, [X8 + 0xC]
	0x03A56EA4 LDR X0, [X27]
	0x03A56EA8 BL 0x3C124EC
	0x03A56EAC LDR X8, [X19]
	0x03A56EB0 MOV X1, X31
	0x03A56EB4 LDR X8, [X8 + 0xB8]
	0x03A56EB8 STR W0, [X8 + 0x10]
	0x03A56EBC LDR X0, [X26]
	0x03A56EC0 BL 0x3C124EC
	0x03A56EC4 LDR X8, [X19]
	0x03A56EC8 MOV X1, X31
	0x03A56ECC LDR X8, [X8 + 0xB8]
	0x03A56ED0 STR W0, [X8 + 0x14]
	0x03A56ED4 LDR X0, [X25]
	0x03A56ED8 BL 0x3C124EC
	0x03A56EDC LDR X8, [X19]
	0x03A56EE0 MOV X1, X31
	0x03A56EE4 LDR X8, [X8 + 0xB8]
	0x03A56EE8 STR W0, [X8 + 0x18]
	0x03A56EEC LDR X0, [X24]
	0x03A56EF0 BL 0x3C124EC
	0x03A56EF4 LDR X8, [X19]
	0x03A56EF8 MOV X1, X31
	0x03A56EFC LDR X8, [X8 + 0xB8]
	0x03A56F00 STR W0, [X8 + 0x1C]
	0x03A56F04 LDR X0, [X23]

ISIL:
	001 Move [X31-112], D9
	002 Move [X31-104], D8
	003 Move [X31+16], X29
	004 Move [X31+24], X30
	005 Move [X31+32], X28
	006 Move [X31+40], X27
	007 Move [X31+48], X26
	008 Move [X31+56], X25
	009 Move [X31+64], X24
	010 Move [X31+72], X23
	011 Move [X31+80], X22
	012 Move [X31+88], X21
	013 Move [X31+96], X20
	014 Move [X31+104], X19
	015 Subtract X31, X31, 688
	016 Move [X31+32], X2
	017 Move [X31+40], X4
	018 Move [X31+24], X3
	019 Move X20, 0x98D000
	020 Move X19, 0x701000
	021 Move W8, [X20+480]
	022 Move X19, [X19+392]
	023 Move X21, X1
	024 Move X22, X0
	025 Move TEMP, X8
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {52}
	029 Move X0, 0x69F000
	030 Move X0, [X0+3672]
	031 Call 0x1C17CF4
	032 Move X0, 0x69E000
	033 Move X0, [X0+1448]
	034 Call 0x1C17CF4
	035 Move X0, 0x701000
	036 Move X0, [X0+440]
	037 Call 0x1C17CF4
	038 Move X0, 0x701000
	039 Move X0, [X0+392]
	040 Call 0x1C17CF4
	041 Move X0, 0x701000
	042 Move X0, [X0+504]
	043 Call 0x1C17CF4
	044 Move X0, 0x701000
	045 Move X0, [X0+512]
	046 Call 0x1C17CF4
	047 Move X0, 0x701000
	048 Move X0, [X0+416]
	049 Call 0x1C17CF4
	050 Move W8, 1
	051 Move [X20+480], W8
	052 Move X0, [X19]
	053 NotImplemented "Instruction MOVI not yet implemented."
	054 Move [X31+680], X31
	055 Move [X31+640], V0
	056 Move [X31+648], V0
	057 Move [X31+608], V0
	058 Move [X31+616], V0
	059 Move [X31+576], V0
	060 Move [X31+584], V0
	061 Move [X31+544], V0
	062 Move [X31+552], V0
	063 Move W8, [X0+224]
	064 Compare W8, 0
	065 JumpIfNotEqual {68}
	066 Call 0x1C17DFC
	067 Move X0, [X19]
	068 Move X8, [X22+16]
	069 Compare X8, 0
	070 JumpIfEqual {433}
	071 Move X9, [X0+184]
	072 Move X0, [X8+16]
	073 Add X8, X31, 368
	074 Move X1, X31
	075 Move W24, [X9+12]
	076 Call RTHandle.op_Implicit, X0
	077 Move V0, [X31+368]
	078 Move V1, [X31+384]
	079 Move X8, [X31+400]
	080 Move [X31+432], V0
	081 Move [X31+440], V1
	082 Move [X31+464], X8
	083 Compare X21, 0
	084 JumpIfEqual {433}
	085 Move V0, [X31+432]
	086 Move V1, [X31+448]
	087 Move X8, [X31+464]
	088 Add X2, X31, 496
	089 Move X0, X21
	090 Move W1, W24
	091 Move X3, X31
	092 Move [X31+496], V0
	093 Move [X31+504], V1
	094 Move [X31+528], X8
	095 Call CommandBuffer.SetGlobalTexture, X0, X1, X2
	096 Move X8, [X22+16]
	097 Compare X8, 0
	098 JumpIfEqual {433}
	099 Move X8, [X8+16]
	100 Compare X8, 0
	101 JumpIfEqual {433}
	102 Move X0, [X8+24]
	103 Compare X0, 0
	104 JumpIfEqual {433}
	105 Move X8, [X19]
	106 Move X1, X31
	107 Move X8, [X8+184]
	108 Move W24, [X8+16]
	109 Call RenderTexture.get_graphicsFormat, X0
	110 Move W1, W0
	111 Call LightCookieManager.GetLightCookieShaderFormat, X0, X1
	112 NotImplemented "Instruction SCVTF not yet implemented."
	113 Move X0, X21
	114 Move W1, W24
	115 Move X2, X31
	116 Call CommandBuffer.SetGlobalFloat, X0, X1, V0
	117 Move X24, [X22+72]
	118 Compare X24, 0
	119 JumpIfEqual {433}
	120 Move X8, [X31+32]
	121 Move W1, [X8+24]
	122 Move W8, [X24+24]
	123 NotImplemented "Instruction CMP not yet implemented."
	124 Move X8, 0x69F000
	125 Move X8, [X8+3672]
	126 Move X0, [X8]
	127 Call 0x1C17D6C
	128 Move X24, X0
	129 Move [X22+72], X0
	130 Compare X0, 0
	131 JumpIfEqual {433}
	132 Move X8, 0x69E000
	133 Move X8, [X8+1448]
	134 Move X9, [X31+32]
	135 Move X0, [X8]
	136 Move W25, [X9+24]
	137 Move W8, [X0+224]
	138 Compare W8, 0
	139 JumpIfNotEqual {141}
	140 Call 0x1C17DFC
	141 Move W0, [X24+24]
	142 Move W1, W25
	143 Move X2, X31
	144 Call Math.Min, X0, X1
	145 NotImplemented "Instruction CMP not yet implemented."
	146 Move X11, [X22+72]
	147 Compare X11, 0
	148 JumpIfEqual {433}
	149 Move W9, [X11+24]
	150 Move X8, X31
	151 Move W10, W0
	152 Add X11, X11, 32
	153 Move TEMP, 0
	154 Not TEMP
	155 Move W12, TEMP
	156 NotImplemented "Instruction CMP not yet implemented."
	157 Move [X11], W12
	158 Add X8, X8, 1
	159 NotImplemented "Instruction CMP not yet implemented."
	160 Move X0, [X22+24]
	161 Compare X0, 0
	162 JumpIfEqual {433}
	163 Move W1, [X22+48]
	164 Call LightCookieShaderData.Resize, X0, X1
	165 Move X8, [X22+24]
	166 Compare X8, 0
	167 JumpIfEqual {433}
	168 Move X28, [X8+48]
	169 Move X29, [X8+24]
	170 Move X24, [X8+32]
	171 Move [X31+8], X21
	172 Move [X31+680], X28
	173 Compare X24, 0
	174 JumpIfEqual {433}
	175 Move W2, [X24+24]
	176 Move X19, [X8+40]
	177 Move X0, X24
	178 Move W1, W31
	179 Move X3, X31
	180 Call Array.Clear, X0, X1, X2
	181 Add X0, X31, 680
	182 Call ShaderBitArray.Clear, X0
	183 Move X8, [X31+40]
	184 Move W8, [X8+12]
	185 NotImplemented "Instruction CMP not yet implemented."
	186 Move X8, -49721344
	187 Move V8, [X8+1040]
	188 Move W25, W31
	189 Add X8, X28, 32
	190 Move [X31+16], X8
	191 Move X21, 0x701000
	192 Move X21, [X21+512]
	193 Move X20, [X31+24]
	194 Move W1, W25
	195 Move X2, [X21]
	196 Move X0, X20
	197 Call WorkSlice`1<LightCookieMapping>.get_Item, X0, X1
	198 Move X2, [X21]
	199 Move X27, X0
	200 Move X0, X20
	201 Move W1, W25
	202 Call WorkSlice`1<LightCookieMapping>.get_Item, X0, X1
	203 Move X8, [X22+72]
	204 Compare X8, 0
	205 JumpIfEqual {433}
	206 Move W9, [X8+24]
	207 And W2, W27, 0xFFFF
	208 NotImplemented "Instruction CMP not yet implemented."
	209 Move X23, X0
	210 ShiftRight X23, 16
	211 And X23, X23, 0x7FFFFFFF
	212 Add X8, X8, W2
	213 Move [X8+32], W23
	214 Move X8, [X31+32]
	215 Move X26, X0
	216 Move X0, [X8+16]
	217 Move X1, [X8+24]
	218 Move X8, 0x701000
	219 Move X8, [X8+440]
	220 Move X3, [X8]
	221 Call 0x22232C0, X0, X1
	222 Move X1, X31
	223 Move X27, X0
	224 Call VisibleLight.get_lightType, X0
	225 Compare X19, 0
	226 JumpIfEqual {433}
	227 Move W8, [X19+24]
	228 NotImplemented "Instruction CMP not yet implemented."
	229 Move W20, W23
	230 NotImplemented "Instruction SCVTF not yet implemented."
	231 Add X8, X19, X20
	232 Move [X8+32], S0
	233 Add X8, X31, 432
	234 Move X0, X27
	235 Move X1, X31
	236 Call VisibleLight.get_localToWorldMatrix, X0
	237 Move V0, [X31+432]
	238 Move V1, [X31+448]
	239 Move V2, [X31+464]
	240 Move V3, [X31+480]
	241 Add X8, X31, 368
	242 Add X0, X31, 608
	243 Move X1, X31
	244 Move [X31+608], V0
	245 Move [X31+616], V1
	246 Move [X31+640], V2
	247 Move [X31+648], V3
	248 Call Matrix4x4.get_inverse, X0
	249 Move V0, [X31+368]
	250 Move V1, [X31+384]
	251 Move V2, [X31+400]
	252 Move V3, [X31+416]
	253 Move [X31+432], V0
	254 Move [X31+440], V1
	255 Move [X31+464], V2
	256 Move [X31+472], V3
	257 Compare X29, 0
	258 JumpIfEqual {433}
	259 Move V0, [X31+432]
	260 Move V1, [X31+448]
	261 Move V2, [X31+464]
	262 Move V3, [X31+480]
	263 Move [X31+304], V0
	264 Move [X31+312], V1
	265 Move [X31+336], V2
	266 Move [X31+344], V3
	267 Move W8, [X29+24]
	268 NotImplemented "Instruction CMP not yet implemented."
	269 Move V0, [X31+336]
	270 Move V1, [X31+352]
	271 Move V2, [X31+304]
	272 Move V3, [X31+320]
	273 Add X21, X29, X20
	274 Move X8, 0x701000
	275 Move [X21+64], V0
	276 Move [X21+72], V1
	277 Move [X21+32], V2
	278 Move [X21+40], V3
	279 Move X8, [X8+504]
	280 Move X0, [X31+40]
	281 Move W1, W25
	282 Move X2, [X8]
	283 Call 0x2899FC8, X0, X1
	284 Move W8, [X24+24]
	285 NotImplemented "Instruction CMP not yet implemented."
	286 Add X8, X24, X20
	287 Move [X8+32], S0
	288 Move [X8+40], S1
	289 Move [X8+40], S2
	290 Move [X8+48], S3
	291 Compare X28, 0
	292 JumpIfEqual {297}
	293 Move W8, [X28+24]
	294 NotImplemented "Instruction CMP not yet implemented."
	295 Move X8, [X31+16]
	296 NotImplemented "Instruction CSEL not yet implemented."
	297 Move X8, X31
	298 Move X9, X26
	299 ShiftRight X9, 19
	300 And X9, X9, 0x7FFFFFFF
	301 And X9, X9, 0x1FFF
	302 Move W10, [X8]
	303 Move X11, X26
	304 ShiftRight X11, 16
	305 And X11, X11, 0x7FFFFFFF
	306 Move W12, 1
	307 NotImplemented "Instruction LSLV not yet implemented."
	308 Or W10, W10, W11
	309 Move X0, X27
	310 Move X1, X31
	311 Move [X8], W10
	312 Call VisibleLight.get_lightType, X0
	313 Compare W0, 0
	314 JumpIfNotEqual {407}
	315 Move X0, X27
	316 Move X1, X31
	317 Call VisibleLight.get_spotAngle, X0
	318 Move X0, X27
	319 Move X1, X31
	320 Move V9, V0
	321 Call VisibleLight.get_range, X0
	322 Move V3, V0
	323 Add X8, X31, 432
	324 Move S1, 1
	325 Move V0, V9
	326 Move V2, V8
	327 Move X0, X31
	328 Call Matrix4x4.Perspective, V0, V1, V2, V3
	329 Move V0, [X31+432]
	330 Move V1, [X31+448]
	331 Move V2, [X31+464]
	332 Move V3, [X31+480]
	333 Add X0, X31, 544
	334 Move W1, 2
	335 Move X2, X31
	336 Move [X31+544], V0
	337 Move [X31+552], V1
	338 Move [X31+576], V2
	339 Move [X31+584], V3
	340 Call Matrix4x4.GetColumn, X0, X1
	341 NotImplemented "Instruction FNEG not yet implemented."
	342 NotImplemented "Instruction FNEG not yet implemented."
	343 NotImplemented "Instruction FNEG not yet implemented."
	344 NotImplemented "Instruction FNEG not yet implemented."
	345 Add X0, X31, 544
	346 Move W1, 2
	347 Move X2, X31
	348 Call Matrix4x4.SetColumn, X0, X1, X2
	349 Move V0, [X31+544]
	350 Move V1, [X31+560]
	351 Move V2, [X31+576]
	352 Move V3, [X31+592]
	353 Move [X31+432], V0
	354 Move [X31+440], V1
	355 Move [X31+464], V2
	356 Move [X31+472], V3
	357 Move W8, [X29+24]
	358 NotImplemented "Instruction CMP not yet implemented."
	359 Add X20, X21, 32
	360 Move V2, [X20]
	361 Move V3, [X20+16]
	362 Move V4, [X20+32]
	363 Move V5, [X20+48]
	364 Move V0, [X31+432]
	365 Move V1, [X31+448]
	366 Add X8, X31, 240
	367 Move [X31+368], V2
	368 Move [X31+376], V3
	369 Move [X31+400], V4
	370 Move [X31+408], V5
	371 Move [X31+176], V0
	372 Move [X31+184], V1
	373 Move V0, [X31+464]
	374 Move V1, [X31+480]
	375 Move V2, [X31+400]
	376 Move V3, [X31+416]
	377 Move V4, [X31+368]
	378 Move V5, [X31+384]
	379 Add X0, X31, 176
	380 Add X1, X31, 112
	381 Move X2, X31
	382 Move [X31+208], V0
	383 Move [X31+216], V1
	384 Move [X31+144], V2
	385 Move [X31+152], V3
	386 Move [X31+112], V4
	387 Move [X31+120], V5
	388 Call Matrix4x4.op_Multiply, X0, X1
	389 Move V0, [X31+240]
	390 Move V1, [X31+256]
	391 Move V2, [X31+272]
	392 Move V3, [X31+288]
	393 Move [X31+48], V0
	394 Move [X31+56], V1
	395 Move [X31+80], V2
	396 Move [X31+88], V3
	397 Move W8, [X29+24]
	398 NotImplemented "Instruction CMP not yet implemented."
	399 Move V1, [X31+80]
	400 Move V0, [X31+96]
	401 Move V3, [X31+48]
	402 Move V2, [X31+64]
	403 Move [X20+32], V1
	404 Move [X20+40], V0
	405 Move [X20], V3
	406 Move [X20+8], V2
	407 Move X8, [X31+40]
	408 Add W25, W25, 1
	409 Move W8, [X8+12]
	410 NotImplemented "Instruction CMP not yet implemented."
	411 Move X0, [X22+24]
	412 Compare X0, 0
	413 JumpIfEqual {433}
	414 Move X1, [X31+8]
	415 Call LightCookieShaderData.Upload, X0, X1
	416 Add X31, X31, 688
	417 Move X20, [X31+96]
	418 Move X19, [X31+104]
	419 Move X22, [X31+80]
	420 Move X21, [X31+88]
	421 Move X24, [X31+64]
	422 Move X23, [X31+72]
	423 Move X26, [X31+48]
	424 Move X25, [X31+56]
	425 Move X28, [X31+32]
	426 Move X27, [X31+40]
	427 Move X29, [X31+16]
	428 Move X30, [X31+24]
	429 Move D9, [X31+112]
	430 Move D8, [X31+120]
	431 Return 
	432 Call 0x1C17F28
	433 Call 0x1C17F20

Method: System.Void .cctor()

Disassembly:
	0x03A57CA0 STRB W8, [X27 + 0x1ED]
	0x03A57CA4 LDR X8, [X20]
	0x03A57CA8 ADD X23, X25, X26
	0x03A57CAC MOV X0, X20
	0x03A57CB0 MOV W1, W23
	0x03A57CB4 LDR W8, [X8]
	0x03A57CB8 LSLV W24, W24, W8
	0x03A57CBC SBFM W29, W24, 0x6, 0x1F
	0x03A57CC0 BL 0x3A57734
	0x03A57CC4 LDR X19, [X0, W29, SXTW]
	0x03A57CC8 MOV X22, X0
	0x03A57CCC CBNZ X19, 0x3A57CEC
	0x03A57CD0 MOV X0, X20
	0x03A57CD4 MOV W1, W23
	0x03A57CD8 BL 0x3A578C0
	0x03A57CDC LDRSW X8, [X28, X26, LSL #2]
	0x03A57CE0 ADD W9, W8, 0x1
	0x03A57CE4 STR W9, [X28, X26, LSL #2]
	0x03A57CE8 STR W29, [X0, X8, LSL #2]
	0x03A57CEC LDRB W8, [X27 + 0x1ED]
	0x03A57CF0 TBNZ X8, 0x0, 0x3A57D04
	0x03A57CF4 MOV X0, X21
	0x03A57CF8 BL 0x1C16CF4
	0x03A57CFC MOVZ W8, 0x1
	0x03A57D00 STRB W8, [X27 + 0x1ED]
	0x03A57D04 LDR X8, [X20]
	0x03A57D08 AND W9, W24, 0x3F
	0x03A57D0C ADD X26, X26, 0x1
	0x03A57D10 SBFM X11, X24, 0x6, 0x1F
	0x03A57D14 LDR W10, [X8]
	0x03A57D18 MOVZ W8, 0x1
	0x03A57D1C CMP X26, 0x1
	0x03A57D20 AND X10, X10, 0x1F
	0x03A57D24 LSLV X10, X8, X10

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+128], X30
	003 Move [X31+144], X20
	004 Move [X31+152], X19
	005 Move X20, 0x98C000
	006 Move X19, 0x700000
	007 Move W8, [X20+481]
	008 Move X19, [X19+384]
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x700000
	014 Move X0, [X0+384]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X20+481], W8
	018 Add X8, X31, 0
	019 Move S0, -0.5
	020 Move S1, 0.5
	021 Move S2, -0.5
	022 Move S3, 0.5
	023 Move S4, -0.5
	024 Move S5, 0.5
	025 Move X0, X31
	026 Call Matrix4x4.Ortho, V0, V1, V2, V3, V4, V5
	027 Move V1, [X31+32]
	028 Move V0, [X31+48]
	029 Move V3, [X31]
	030 Move V2, [X31+16]
	031 Move X8, [X19]
	032 Move X20, [X31+144]
	033 Move X19, [X31+152]
	034 Move [X31+96], V1
	035 Move [X31+104], V0
	036 Move [X31+64], V3
	037 Move [X31+72], V2
	038 Move X8, [X8+184]
	039 Move X30, [X31+128]
	040 Move [X8+32], V1
	041 Move [X8+40], V0
	042 Move [X8], V3
	043 Move [X8+8], V2
	044 Add X31, X31, 160
	045 Return 

