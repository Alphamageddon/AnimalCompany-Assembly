Type: UnityEngine.Rendering.Universal.ShadowsMidtonesHighlights

Method: System.Boolean IsActive()

Disassembly:
	0x03A5B440 CBZ X0, 0x3A5B44C
	0x03A5B444 MOV X1, X31
	0x03A5B448 BL 0x39D4B1C
	0x03A5B44C LDR X0, [X19 + 0xF0]
	0x03A5B450 CBZ X0, 0x3A5B460
	0x03A5B454 MOV X1, X31
	0x03A5B458 LDP X30, X19, [X31], #0x10
	0x03A5B45C B 0x39D4B1C
	0x03A5B460 LDP X30, X19, [X31], #0x10
	0x03A5B464 RET
	0x03A5B468 SUB X31, X31, 0xD0
	0x03A5B46C STR D8, [X31 + 0x80]
	0x03A5B470 STP X30, X25, [X31 + 0x90]
	0x03A5B474 STP X24, X23, [X31 + 0xA0]
	0x03A5B478 STP X22, X21, [X31 + 0xB0]
	0x03A5B47C STP X20, X19, [X31 + 0xC0]
	0x03A5B480 ADRP X22, 0x987000
	0x03A5B484 LDRB W8, [X22 + 0x218]
	0x03A5B488 MOV W20, W2
	0x03A5B48C MOV X21, X1
	0x03A5B490 MOV X19, X0
	0x03A5B494 TBNZ X8, 0x0, 0x3A5B4C4
	0x03A5B498 ADRP X0, 0x6F9000
	0x03A5B49C LDR X0, [X0 + 0x10]
	0x03A5B4A0 BL 0x1C16CF4
	0x03A5B4A4 ADRP X0, 0x6FB000
	0x03A5B4A8 LDR X0, [X0 + 0x3C8]
	0x03A5B4AC BL 0x1C16CF4
	0x03A5B4B0 ADRP X0, 0x6FB000
	0x03A5B4B4 LDR X0, [X0 + 0x3D0]
	0x03A5B4B8 BL 0x1C16CF4
	0x03A5B4BC MOVZ W8, 0x1
	0x03A5B4C0 STRB W8, [X22 + 0x218]
	0x03A5B4C4 MOVI V0.2D, 0x0
	0x03A5B4C8 STR W31, [X31 + 0x30]
	0x03A5B4CC STP V0, V0, [X31 + 0x10]
	0x03A5B4D0 STR V0, [X31]
	0x03A5B4D4 LDRB W8, [X19 + 0xF8]
	0x03A5B4D8 CBZ W8, 0x3A5B5E0
	0x03A5B4DC ADD X24, X21, 0xD8
	0x03A5B4E0 LDUR V0, [X21 + 0xF8]
	0x03A5B4E4 LDR W8, [X24 + 0x30]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x988000
	006 Move X20, 0x6FC000
	007 Move W8, [X21+521]
	008 Move X20, [X20+824]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x6FC000
	015 Move X0, [X0+824]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+521], W8
	019 Move X0, [X19+56]
	020 Move X1, [X20]
	021 Move S0, 1
	022 Move S1, 1
	023 Move S2, 1
	024 Move S3, W31
	025 Call VolumeParameter`1<Vector4>.op_Inequality, X0, X1
	026 Move TEMP, X0
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {41}
	030 Move X0, [X19+64]
	031 Move X1, [X20]
	032 Move S0, 1
	033 Move S1, 1
	034 Move S2, 1
	035 Move S3, W31
	036 Call VolumeParameter`1<Vector4>.op_Inequality, X0, X1
	037 Move TEMP, X0
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfNotEqual {47}
	041 Move X20, [X31+16]
	042 Move X19, [X31+24]
	043 Move W0, 1
	044 Move X30, [X31+32]
	045 Move X21, [X31+40]
	046 Return X0
	047 Move X0, [X19+72]
	048 Move X1, [X20]
	049 Move X20, [X31+16]
	050 Move X19, [X31+24]
	051 Move S0, 1
	052 Move S1, 1
	053 Move S2, 1
	054 Move S3, W31
	055 Move X30, [X31+32]
	056 Move X21, [X31+40]
	057 Call VolumeParameter`1<Vector4>.op_Inequality, X0, X1
	058 Return X0

Method: System.Boolean IsTileCompatible()

Disassembly:
	0x03A5B4E8 LDUR V1, [X21 + 0xE8]
	0x03A5B4EC LDUR V2, [X21 + 0xD8]

ISIL:
	001 Move W0, 1
	002 Return X0

Method: System.Void .ctor()

Disassembly:
	0x03A5B4F0 ADRP X22, 0x6F9000
	0x03A5B4F4 STR W8, [X31 + 0x70]
	0x03A5B4F8 STP V1, V0, [X31 + 0x50]
	0x03A5B4FC STR V2, [X31 + 0x4]
	0x03A5B500 ADRP X25, 0x6FB000
	0x03A5B504 ADRP X23, 0x6FB000
	0x03A5B508 LDR V8, [X21 + 0x140]
	0x03A5B50C LDR X22, [X22 + 0x10]
	0x03A5B510 LDR X25, [X25 + 0x3D0]
	0x03A5B514 LDR X23, [X23 + 0x3C8]
	0x03A5B518 ADD X0, X31, 0x40
	0x03A5B51C MOVZ W1, 0x4
	0x03A5B520 MOV X2, X31
	0x03A5B524 BL 0x3C2240C
	0x03A5B528 ADD X0, X31, 0x40
	0x03A5B52C MOV W1, W31
	0x03A5B530 MOV X2, X31
	0x03A5B534 BL 0x3C22520
	0x03A5B538 LDR X0, [X22]
	0x03A5B53C STR D8, [X31 + 0x40]
	0x03A5B540 ADD X22, X19, 0xE8
	0x03A5B544 LDR W8, [X0 + 0xE0]
	0x03A5B548 CBNZ W8, 0x3A5B550
	0x03A5B54C BL 0x1C16DFC
	0x03A5B550 LDR X6, [X25]
	0x03A5B554 ADD X1, X31, 0x40
	0x03A5B558 FMOV S0, W31
	0x03A5B55C MOVZ W5, 0x1
	0x03A5B560 MOV X0, X22
	0x03A5B564 MOV W2, W31
	0x03A5B568 MOV W3, W31
	0x03A5B56C MOV W4, W31
	0x03A5B570 MOV X7, X31
	0x03A5B574 BL 0x3A6D184
	0x03A5B578 LDR W8, [X24 + 0x30]
	0x03A5B57C LDP V2, V0, [X24 + 0x10]
	0x03A5B580 LDR V1, [X24]
	0x03A5B584 ADD X0, X31, 0x0
	0x03A5B588 STR W8, [X31 + 0x30]
	0x03A5B58C STP V2, V0, [X31 + 0x10]
	0x03A5B590 STR V1, [X31]
	0x03A5B594 LDR V8, [X21 + 0x140]
	0x03A5B598 MOV W1, W31
	0x03A5B59C MOV X2, X31
	0x03A5B5A0 BL 0x3C2240C
	0x03A5B5A4 ADD X0, X31, 0x0
	0x03A5B5A8 MOV W1, W20
	0x03A5B5AC MOV X2, X31
	0x03A5B5B0 BL 0x3C22520
	0x03A5B5B4 LDR X6, [X23]
	0x03A5B5B8 ADD X0, X19, 0xF0
	0x03A5B5BC ADD X1, X31, 0x0
	0x03A5B5C0 FMOV S0, W31
	0x03A5B5C4 MOVZ W5, 0x1
	0x03A5B5C8 MOV W2, W31
	0x03A5B5CC MOV W3, W31
	0x03A5B5D0 MOV W4, W31
	0x03A5B5D4 MOV X7, X31
	0x03A5B5D8 STR D8, [X31]
	0x03A5B5DC BL 0x3A6D184
	0x03A5B5E0 LDP X20, X19, [X31 + 0xC0]
	0x03A5B5E4 LDP X22, X21, [X31 + 0xB0]
	0x03A5B5E8 LDP X24, X23, [X31 + 0xA0]
	0x03A5B5EC LDP X30, X25, [X31 + 0x90]
	0x03A5B5F0 LDR V8, [X31 + 0x80]
	0x03A5B5F4 ADD X31, X31, 0xD0
	0x03A5B5F8 RET
	0x03A5B5FC SUB X31, X31, 0x130
	0x03A5B600 STR X29, [X31 + 0xE0]
	0x03A5B604 STP X30, X25, [X31 + 0xF0]
	0x03A5B608 STP X24, X23, [X31 + 0x100]
	0x03A5B60C STP X22, X21, [X31 + 0x110]
	0x03A5B610 STP X20, X19, [X31 + 0x120]
	0x03A5B614 ADRP X22, 0x987000
	0x03A5B618 LDRB W8, [X22 + 0x219]
	0x03A5B61C MOV X21, X2
	0x03A5B620 MOV X19, X1
	0x03A5B624 MOV X20, X0
	0x03A5B628 TBNZ X8, 0x0, 0x3A5B67C
	0x03A5B62C ADRP X0, 0x6C0000
	0x03A5B630 LDR X0, [X0 + 0x8F8]
	0x03A5B634 BL 0x1C16CF4
	0x03A5B638 ADRP X0, 0x6F9000
	0x03A5B63C LDR X0, [X0 + 0xA8]
	0x03A5B640 BL 0x1C16CF4
	0x03A5B644 ADRP X0, 0x6F8000
	0x03A5B648 LDR X0, [X0 + 0x98]
	0x03A5B64C BL 0x1C16CF4
	0x03A5B650 ADRP X0, 0x6F9000
	0x03A5B654 LDR X0, [X0 + 0x10]
	0x03A5B658 BL 0x1C16CF4
	0x03A5B65C ADRP X0, 0x6F8000
	0x03A5B660 LDR X0, [X0 + 0xFF0]
	0x03A5B664 BL 0x1C16CF4
	0x03A5B668 ADRP X0, 0x6F9000
	0x03A5B66C LDR X0, [X0 + 0x20]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x988000
	007 Move X22, 0x6FC000
	008 Move X21, 0x6FC000
	009 Move W8, [X20+522]
	010 Move X22, [X22+832]
	011 Move X21, [X21+160]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x6FC000
	018 Move X0, [X0+160]
	019 Call 0x1C17CF4
	020 Move X0, 0x6FC000
	021 Move X0, [X0+832]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X20+522], W8
	025 Move X0, [X22]
	026 Call 0x1C17F10
	027 Move S0, 1
	028 Move S1, 1
	029 Move S2, 1
	030 Move S3, W31
	031 Move W1, W31
	032 Move X2, X31
	033 Move X20, X0
	034 Call Vector4Parameter..ctor, X0, X1, X2
	035 Move [X19+56], X20
	036 Move X0, [X22]
	037 Call 0x1C17F10
	038 Move S0, 1
	039 Move S1, 1
	040 Move S2, 1
	041 Move S3, W31
	042 Move W1, W31
	043 Move X2, X31
	044 Move X20, X0
	045 Call Vector4Parameter..ctor, X0, X1, X2
	046 Move [X19+64], X20
	047 Move X0, [X22]
	048 Call 0x1C17F10
	049 Move S0, 1
	050 Move S1, 1
	051 Move S2, 1
	052 Move S3, W31
	053 Move W1, W31
	054 Move X2, X31
	055 Move X20, X0
	056 Call Vector4Parameter..ctor, X0, X1, X2
	057 Move [X19+72], X20
	058 Move X0, [X21]
	059 Call 0x1C17F10
	060 Move S0, W31
	061 Move S1, W31
	062 Move W1, W31
	063 Move X2, X31
	064 Move X20, X0
	065 Call MinFloatParameter..ctor, X0, V0, V1, X1
	066 Move [X19+80], X20
	067 Move X0, [X21]
	068 Call 0x1C17F10
	069 Move X8, -49741824
	070 Move V0, [X8+1100]
	071 Move S1, W31
	072 Move W1, W31
	073 Move X2, X31
	074 Move X20, X0
	075 Call MinFloatParameter..ctor, X0, V0, V1, X1
	076 Move [X19+88], X20
	077 Move X0, [X21]
	078 Call 0x1C17F10
	079 Move X8, -49741824
	080 Move V0, [X8+1088]
	081 Move S1, W31
	082 Move W1, W31
	083 Move X2, X31
	084 Move X20, X0
	085 Call MinFloatParameter..ctor, X0, V0, V1, X1
	086 Move [X19+96], X20
	087 Move X0, [X21]
	088 Call 0x1C17F10
	089 Move S0, 1
	090 Move S1, W31
	091 Move W1, W31
	092 Move X2, X31
	093 Move X20, X0
	094 Call MinFloatParameter..ctor, X0, V0, V1, X1
	095 Move [X19+104], X20
	096 Move X0, X19
	097 Move X20, [X31+32]
	098 Move X19, [X31+40]
	099 Move X22, [X31+16]
	100 Move X21, [X31+24]
	101 Move X1, X31
	102 Move X30, [X31+48]
	103 Call VolumeComponent..ctor, X0
	104 Return 

