Type: UnityEngine.Rendering.Universal.ScriptableRendererData

Method: System.Boolean get_isInvalidated()

Disassembly:
	0x03A76788 LDR V3, [X8 + 0x6C]
	0x03A7678C LDR V4, [X8 + 0x7C]

ISIL:
	001 Move W0, [X0+24]
	002 Return X0

Method: System.Void set_isInvalidated(System.Boolean value)

Disassembly:
	0x03A76790 STP V5, V0, [X31]
	0x03A76794 MOVI V0.2S, 0x3F, 0x18
	0x03A76798 STP V2, V1, [X31 + 0x20]

ISIL:
	001 And W8, W1, 1
	002 Move [X0+24], W8
	003 Return 

Method: UnityEngine.Rendering.Universal.ScriptableRenderer Create()

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Collections.Generic.List`1<UnityEngine.Rendering.Universal.ScriptableRendererFeature> get_rendererFeatures()

Disassembly:
	0x03A7679C LDUR V1, [X20 + 0x4]
	0x03A767A0 STR D0, [X31 + 0x70]

ISIL:
	001 Move X0, [X0+40]
	002 Return X0

Method: System.Void SetDirty()

Disassembly:
	0x03A767A4 LDUR V0, [X20 + 0x18]
	0x03A767A8 MOVZ W8, 0x3F000000
	0x03A767AC STR W8, [X31 + 0x40]

ISIL:
	001 Move W8, 1
	002 Move [X0+24], W8
	003 Return 

Method: UnityEngine.Rendering.Universal.ScriptableRenderer InternalCreateRenderer()

Disassembly:
	0x03A767B0 STR W8, [X31 + 0x54]
	0x03A767B4 STP V0, V1, [X31 + 0x140]
	0x03A767B8 LDP V1, V0, [X31 + 0x140]
	0x03A767BC STR W8, [X31 + 0x68]

ISIL:
	001 Move X8, [X0]
	002 Move [X0+24], W31
	003 Move X2, [X8+376]
	004 Move X1, [X8+384]
	005 CallNoReturn X2

Method: System.Void OnValidate()

Disassembly:
	0x03A767C0 STR W8, [X31 + 0x78]
	0x03A767C4 ADD X8, X31, 0x100
	0x03A767C8 STR S3, [X31 + 0x6C]

ISIL:
	001 Move W8, 1
	002 Move [X0+24], W8
	003 Return 

Method: System.Void OnEnable()

Disassembly:
	0x03A767CC STUR V0, [X31 + 0x44]
	0x03A767D0 STUR V1, [X31 + 0x58]
	0x03A767D4 STR S4, [X31 + 0x7C]

ISIL:
	001 Move W8, 1
	002 Move [X0+24], W8
	003 Return 

Method: System.Boolean get_useNativeRenderPass()

Disassembly:
	0x03A767D8 BL 0x3C27F74
	0x03A767DC LDP V1, V0, [X31 + 0x120]

ISIL:
	001 Move W0, [X0+56]
	002 Return X0

Method: System.Void set_useNativeRenderPass(System.Boolean value)

Disassembly:
	0x03A767E0 LDP V3, V2, [X31 + 0x100]
	0x03A767E4 LDP X30, X21, [X31 + 0x1B0]
	0x03A767E8 LDR X29, [X31 + 0x1A0]
	0x03A767EC STP V1, V0, [X19 + 0x20]
	0x03A767F0 STP V3, V2, [X19]

ISIL:
	001 And W8, W1, 1
	002 Move W9, 1
	003 Move [X0+24], W9
	004 Move [X0+56], W8
	005 Return 

Method: System.Boolean TryGetRendererFeature(out T rendererFeature)

Disassembly:
	0x02254854 LDR X8, [X3 + 0x38]
	0x02254858 MOV X21, X3
	0x0225485C MOV W20, W2
	0x02254860 MOV X19, X1
	0x02254864 CBNZ X8, 0x2254890
	0x02254868 ADRP X0, 0x1EC8000
	0x0225486C LDR X0, [X0 + 0x4F0]
	0x02254870 BL 0x1C16CF4
	0x02254874 ADRP X0, 0x1EC7000
	0x02254878 LDR X0, [X0 + 0x850]
	0x0225487C BL 0x1C16CF4
	0x02254880 LDR X8, [X21 + 0x38]
	0x02254884 CBNZ X8, 0x2254890
	0x02254888 MOV X0, X21
	0x0225488C BL 0x1C5C6E0
	0x02254890 LDR X0, [X19]
	0x02254894 CBZ X0, 0x22548BC
	0x02254898 MOV X1, X31
	0x0225489C BL 0x3C3AC4C
	0x022548A0 LDR X22, [X19]
	0x022548A4 CMP W0, W20
	0x022548A8 B.GE 0x2254910
	0x022548AC CBZ X22, 0x2254924
	0x022548B0 MOV X0, X22
	0x022548B4 MOV X1, X31
	0x022548B8 BL 0x3C3A930
	0x022548BC ADRP X8, 0x1EC7000
	0x022548C0 LDR X8, [X8 + 0x850]
	0x022548C4 LDR X0, [X8]
	0x022548C8 LDR W8, [X0 + 0xE0]
	0x022548CC CBNZ W8, 0x22548D4
	0x022548D0 BL 0x1C16DFC
	0x022548D4 LDR X8, [X21 + 0x38]
	0x022548D8 LDR X0, [X8]
	0x022548DC BL 0x2215AA0
	0x022548E0 ADRP X8, 0x1EC8000
	0x022548E4 LDR X8, [X8 + 0x4F0]
	0x022548E8 MOV W21, W0
	0x022548EC LDR X8, [X8]
	0x022548F0 MOV X0, X8
	0x022548F4 BL 0x1C16F10
	0x022548F8 MOV W1, W20
	0x022548FC MOV W2, W21
	0x02254900 MOV X3, X31
	0x02254904 MOV X22, X0
	0x02254908 BL 0x3C3AA2C
	0x0225490C STR X22, [X19]
	0x02254910 MOV X0, X22
	0x02254914 LDP X20, X19, [X31 + 0x20]
	0x02254918 LDP X22, X21, [X31 + 0x10]
	0x0225491C LDR X30, [X31], #0x30
	0x02254920 RET
	0x02254924 BL 0x1C16F20
	0x02254928 STR X30, [X31 - 0x30]!
	0x0225492C STP X22, X21, [X31 + 0x10]
	0x02254930 STP X20, X19, [X31 + 0x20]
	0x02254934 LDR X8, [X3 + 0x38]
	0x02254938 MOV X21, X3
	0x0225493C MOV W20, W2
	0x02254940 MOV X19, X1
	0x02254944 CBNZ X8, 0x2254970
	0x02254948 ADRP X0, 0x1EC8000
	0x0225494C LDR X0, [X0 + 0x4F0]
	0x02254950 BL 0x1C16CF4
	0x02254954 ADRP X0, 0x1EC7000
	0x02254958 LDR X0, [X0 + 0x850]
	0x0225495C BL 0x1C16CF4
	0x02254960 LDR X8, [X21 + 0x38]
	0x02254964 CBNZ X8, 0x2254970
	0x02254968 MOV X0, X21
	0x0225496C BL 0x1C5C6E0
	0x02254970 LDR X0, [X19]
	0x02254974 CBZ X0, 0x225499C
	0x02254978 MOV X1, X31
	0x0225497C BL 0x3C3AC4C
	0x02254980 LDR X22, [X19]
	0x02254984 CMP W0, W20
	0x02254988 B.GE 0x22549F0
	0x0225498C CBZ X22, 0x2254A04
	0x02254990 MOV X0, X22
	0x02254994 MOV X1, X31
	0x02254998 BL 0x3C3A930
	0x0225499C ADRP X8, 0x1EC7000
	0x022549A0 LDR X8, [X8 + 0x850]
	0x022549A4 LDR X0, [X8]
	0x022549A8 LDR W8, [X0 + 0xE0]
	0x022549AC CBNZ W8, 0x22549B4
	0x022549B0 BL 0x1C16DFC
	0x022549B4 LDR X8, [X21 + 0x38]
	0x022549B8 LDR X0, [X8]
	0x022549BC BL 0x2215BC8
	0x022549C0 ADRP X8, 0x1EC8000
	0x022549C4 LDR X8, [X8 + 0x4F0]
	0x022549C8 MOV W21, W0
	0x022549CC LDR X8, [X8]
	0x022549D0 MOV X0, X8
	0x022549D4 BL 0x1C16F10
	0x022549D8 MOV W1, W20
	0x022549DC MOV W2, W21
	0x022549E0 MOV X3, X31
	0x022549E4 MOV X22, X0
	0x022549E8 BL 0x3C3AA2C
	0x022549EC STR X22, [X19]
	0x022549F0 MOV X0, X22
	0x022549F4 LDP X20, X19, [X31 + 0x20]
	0x022549F8 LDP X22, X21, [X31 + 0x10]
	0x022549FC LDR X30, [X31], #0x30
	0x02254A00 RET
	0x02254A04 BL 0x1C16F20
	0x02254A08 STR X30, [X31 - 0x30]!
	0x02254A0C STP X22, X21, [X31 + 0x10]
	0x02254A10 STP X20, X19, [X31 + 0x20]
	0x02254A14 LDR X8, [X3 + 0x38]
	0x02254A18 MOV X21, X3
	0x02254A1C MOV W20, W2
	0x02254A20 MOV X19, X1
	0x02254A24 CBNZ X8, 0x2254A50
	0x02254A28 ADRP X0, 0x1EC8000
	0x02254A2C LDR X0, [X0 + 0x4F0]
	0x02254A30 BL 0x1C16CF4
	0x02254A34 ADRP X0, 0x1EC7000
	0x02254A38 LDR X0, [X0 + 0x850]
	0x02254A3C BL 0x1C16CF4
	0x02254A40 LDR X8, [X21 + 0x38]
	0x02254A44 CBNZ X8, 0x2254A50
	0x02254A48 MOV X0, X21
	0x02254A4C BL 0x1C5C6E0
	0x02254A50 LDR X0, [X19]
	0x02254A54 CBZ X0, 0x2254A7C
	0x02254A58 MOV X1, X31
	0x02254A5C BL 0x3C3AC4C
	0x02254A60 LDR X22, [X19]
	0x02254A64 CMP W0, W20
	0x02254A68 B.GE 0x2254AD4
	0x02254A6C CBZ X22, 0x2254AE8
	0x02254A70 MOV X0, X22
	0x02254A74 MOV X1, X31
	0x02254A78 BL 0x3C3A930
	0x02254A7C ADRP X8, 0x1EC7000
	0x02254A80 LDR X8, [X8 + 0x850]
	0x02254A84 LDR X0, [X8]
	0x02254A88 LDR W8, [X0 + 0xE0]
	0x02254A8C CBNZ W8, 0x2254A94
	0x02254A90 BL 0x1C16DFC
	0x02254A94 LDR X8, [X21 + 0x38]
	0x02254A98 LDR X0, [X8]
	0x02254A9C LDR X8, [X0]
	0x02254AA0 BLR X8
	0x02254AA4 ADRP X8, 0x1EC8000
	0x02254AA8 LDR X8, [X8 + 0x4F0]
	0x02254AAC MOV W21, W0
	0x02254AB0 LDR X8, [X8]
	0x02254AB4 MOV X0, X8
	0x02254AB8 BL 0x1C16F10
	0x02254ABC MOV W1, W20
	0x02254AC0 MOV W2, W21
	0x02254AC4 MOV X3, X31
	0x02254AC8 MOV X22, X0
	0x02254ACC BL 0x3C3AA2C
	0x02254AD0 STR X22, [X19]
	0x02254AD4 MOV X0, X22
	0x02254AD8 LDP X20, X19, [X31 + 0x20]
	0x02254ADC LDP X22, X21, [X31 + 0x10]
	0x02254AE0 LDR X30, [X31], #0x30
	0x02254AE4 RET
	0x02254AE8 BL 0x1C16F20
	0x02254AEC STR X30, [X31 - 0x30]!
	0x02254AF0 STP X22, X21, [X31 + 0x10]
	0x02254AF4 STP X20, X19, [X31 + 0x20]
	0x02254AF8 LDR X8, [X3 + 0x38]
	0x02254AFC MOV X21, X3
	0x02254B00 MOV W20, W2
	0x02254B04 MOV X19, X1
	0x02254B08 CBNZ X8, 0x2254B34
	0x02254B0C ADRP X0, 0x1EC8000
	0x02254B10 LDR X0, [X0 + 0x4F0]
	0x02254B14 BL 0x1C16CF4
	0x02254B18 ADRP X0, 0x1EC7000
	0x02254B1C LDR X0, [X0 + 0x850]

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+64], X30
	003 Move [X31+72], X25
	004 Move [X31+80], X24
	005 Move [X31+88], X23
	006 Move [X31+96], X22
	007 Move [X31+104], X21
	008 Move [X31+112], X20
	009 Move [X31+120], X19
	010 Move X8, [X2+56]
	011 Move X20, X2
	012 Move X19, X1
	013 Move X21, X0
	014 Compare X8, 0
	015 JumpIfNotEqual {36}
	016 Move X0, 0x1EA6000
	017 Move X0, [X0+1680]
	018 Call 0x1C17CF4
	019 Move X0, 0x1EA6000
	020 Move X0, [X0+1688]
	021 Call 0x1C17CF4
	022 Move X0, 0x1EA6000
	023 Move X0, [X0+1696]
	024 Call 0x1C17CF4
	025 Move X0, 0x1EA6000
	026 Move X0, [X0+1712]
	027 Call 0x1C17CF4
	028 Move X0, 0x1EA0000
	029 Move X0, [X0+1728]
	030 Call 0x1C17CF4
	031 Move X8, [X20+56]
	032 Compare X8, 0
	033 JumpIfNotEqual {36}
	034 Move X0, X20
	035 Call 0x1C5D6E0
	036 Move [X31+32], X31
	037 Move [X31+40], X31
	038 Move [X31+48], X31
	039 Move X0, [X21+40]
	040 Compare X0, 0
	041 JumpIfEqual {176}
	042 Move X8, 0x1EA6000
	043 Move X8, [X8+1712]
	044 Move X1, [X8]
	045 Add X8, X31, 8
	046 Call List`1<Object>.GetEnumerator, X0
	047 NotImplemented "Instruction LDUR not yet implemented."
	048 Move X8, [X31+24]
	049 Move X24, 0x1EA6000
	050 Move X24, [X24+1688]
	051 Move [X31+2], V0
	052 Move [X31+48], X8
	053 Move X25, 0x1EA0000
	054 Move X25, [X25+1728]
	055 Move X1, [X24]
	056 Add X0, X31, 32
	057 Call Enumerator<Object>.MoveNext, X0
	058 Move TEMP, X0
	059 And TEMP, TEMP, 1
	060 Compare TEMP, 1
	061 JumpIfNotEqual {120}
	062 Move X21, [X31+48]
	063 Compare X21, 0
	064 JumpIfEqual {175}
	065 Move X0, X21
	066 Move X1, X31
	067 Call "il2cpp_vm_object_is_inst", X0
	068 Move X22, X0
	069 Move X0, [X25]
	070 Move X8, [X20+56]
	071 Move W9, [X0+224]
	072 Move X23, [X8]
	073 Compare W9, 0
	074 JumpIfNotEqual {76}
	075 Call 0x1C17DFC
	076 Move X0, X23
	077 Move X1, X31
	078 Call Type.GetTypeFromHandle, X0
	079 Move X1, X0
	080 Move X0, X22
	081 Move X2, X31
	082 Call Type.op_Equality, X0, X1
	083 Move TEMP, X0
	084 And TEMP, TEMP, 1
	085 Compare TEMP, 1
	086 JumpIfNotEqual {55}
	087 Move X8, [X20+56]
	088 Move X1, [X8+16]
	089 Move W8, [X1+309]
	090 Move TEMP, X8
	091 And TEMP, TEMP, 1
	092 Compare TEMP, 1
	093 JumpIfEqual {97}
	094 Move X0, X1
	095 Call 0x1C5D684
	096 Move X1, X0
	097 Move X0, X21
	098 Call 0x1C17E00
	099 Move X8, [X20+56]
	100 Move X22, X0
	101 Move X23, [X8+16]
	102 Move W8, [X23+309]
	103 Move TEMP, X8
	104 And TEMP, TEMP, 1
	105 Compare TEMP, 1
	106 JumpIfEqual {110}
	107 Move X0, X23
	108 Call 0x1C5D684
	109 Move X23, X0
	110 Compare X22, 0
	111 JumpIfEqual {127}
	112 Move X0, X22
	113 Move X1, X23
	114 Call 0x1C17E00
	115 Compare X0, 0
	116 JumpIfNotEqual {128}
	117 Move X0, X22
	118 Move X1, X23
	119 Call 0x1C181E0
	120 Move X8, 0x1EA6000
	121 Move X8, [X8+1680]
	122 Add X0, X31, 32
	123 Move X1, [X8]
	124 Call Enumerator<Object>.Dispose, X0
	125 Move W0, W31
	126 Move [X19], X31
	127 Move X0, X31
	128 Move [X19], X0
	129 Move X8, [X20+56]
	130 Move X1, [X8+16]
	131 Move W8, [X1+309]
	132 Move TEMP, X8
	133 And TEMP, TEMP, 1
	134 Compare TEMP, 1
	135 JumpIfEqual {139}
	136 Move X0, X1
	137 Call 0x1C5D684
	138 Move X1, X0
	139 Move X0, X21
	140 Call 0x1C17E00
	141 Move X8, [X20+56]
	142 Move X21, X0
	143 Move X20, [X8+16]
	144 Move W8, [X20+309]
	145 Move TEMP, X8
	146 And TEMP, TEMP, 1
	147 Compare TEMP, 1
	148 JumpIfEqual {152}
	149 Move X0, X20
	150 Call 0x1C5D684
	151 Move X20, X0
	152 Compare X21, 0
	153 JumpIfEqual {159}
	154 Move X0, X21
	155 Move X1, X20
	156 Call 0x1C17E00
	157 Compare X0, 0
	158 JumpIfEqual {177}
	159 Move X8, 0x1EA6000
	160 Move X8, [X8+1680]
	161 Add X0, X31, 32
	162 Move X1, [X8]
	163 Call Enumerator<Object>.Dispose, X0
	164 Move W0, 1
	165 Move X20, [X31+112]
	166 Move X19, [X31+120]
	167 Move X22, [X31+96]
	168 Move X21, [X31+104]
	169 Move X24, [X31+80]
	170 Move X23, [X31+88]
	171 Move X30, [X31+64]
	172 Move X25, [X31+72]
	173 Add X31, X31, 128
	174 Return X0
	175 Call 0x1C17F20
	176 Call 0x1C17F20
	177 Move X0, X21
	178 Move X1, X20
	179 Call 0x1C181E0
	180 Move X20, X0
	181 NotImplemented "Instruction CMP not yet implemented."
	182 Move X0, X20
	183 Call 0x3EB2AD0
	184 Move X21, [X0]
	185 Call 0x3EB2AE0
	186 Move X8, 0x1EA6000
	187 Move X8, [X8+1680]
	188 Add X0, X31, 32
	189 Move X1, [X8]
	190 Call Enumerator<Object>.Dispose, X0
	191 Compare X21, 0
	192 JumpIfEqual {125}
	193 Move X0, X21
	194 Call 0x1C17F18
	195 Move X21, X31
	196 Move X20, X0
	197 Move X8, 0x1EA6000
	198 Move X8, [X8+1680]
	199 Move X1, [X8]
	200 Add X0, X31, 32
	201 Call Enumerator<Object>.Dispose, X0
	202 Compare X21, 0
	203 JumpIfNotEqual {206}
	204 Move X0, X20
	205 Call 0x1D2D690
	206 Move X0, X21
	207 Call 0x1C17F18
	208 Call 0x1991590

Method: System.Void .ctor()

Disassembly:
	0x03A767F4 LDP X20, X19, [X31 + 0x1C0]
	0x03A767F8 ADD X31, X31, 0x1D0
	0x03A767FC RET
	0x03A76800 SUB X31, X31, 0x170
	0x03A76804 STR X29, [X31 + 0x130]
	0x03A76808 STP X30, X23, [X31 + 0x140]
	0x03A7680C STP X22, X21, [X31 + 0x150]
	0x03A76810 STP X20, X19, [X31 + 0x160]
	0x03A76814 ADRP X23, 0x962000
	0x03A76818 LDRB W8, [X23 + 0xAC0]
	0x03A7681C MOV W20, W2
	0x03A76820 MOV W21, W1
	0x03A76824 MOV X19, X0
	0x03A76828 ADD X22, X31, 0xC0
	0x03A7682C CBNZ W8, 0x3A76844
	0x03A76830 ADRP X0, 0x681000
	0x03A76834 LDR X0, [X0 + 0x270]
	0x03A76838 BL 0x1C16CF4
	0x03A7683C MOVZ W8, 0x1
	0x03A76840 STRB W8, [X23 + 0xAC0]
	0x03A76844 ADRP X8, 0x681000
	0x03A76848 LDR X8, [X8 + 0x270]
	0x03A7684C FMOV S0, W21
	0x03A76850 UNIMPLEMENTED
	0x03A76854 FMOV V1.2S, 0x0
	0x03A76858 LDR X8, [X8]
	0x03A7685C UNIMPLEMENTED
	0x00000000 INVALID
	0x03A76864 ADD X0, X31, 0x40
	0x03A76868 LDR X8, [X8 + 0xB8]
	0x03A7686C ADD X1, X31, 0x0
	0x03A76870 MOV X2, X31
	0x03A76874 LDP V4, V2, [X8 + 0x50]
	0x03A76878 LDR X9, [X8 + 0x70]
	0x03A7687C LDR V3, [X8 + 0x4]
	0x03A76880 STP V4, V2, [X31 + 0xD0]
	0x03A76884 STR X9, [X31 + 0xF0]
	0x03A76888 STR V3, [X31 + 0xC]
	0x03A7688C LDUR V1, [X22 + 0x4]
	0x03A76890 LDR X9, [X31 + 0xE8]
	0x03A76894 LDUR V2, [X22 + 0x18]
	0x03A76898 LDR X8, [X8 + 0x78]
	0x03A7689C STR V1, [X31 + 0x12]
	0x03A768A0 STR X9, [X31 + 0x110]
	0x03A768A4 STR V2, [X31 + 0x10]
	0x03A768A8 LDP V3, V4, [X19 + 0xA0]
	0x03A768AC LDR V1, [X19 + 0xC8]
	0x03A768B0 LDR V2, [X19 + 0xC0]
	0x03A768B4 LDP V5, V6, [X19 + 0x80]
	0x03A768B8 STP V3, V4, [X31 + 0x20]
	0x03A768BC LDR V3, [X31 + 0x10]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0x96D000
	009 Move X24, 0x684000
	010 Move X20, 0x6E0000
	011 Move X22, 0x6E1000
	012 Move X21, 0x6E1000
	013 Move W8, [X23+719]
	014 Move X24, [X24+1720]
	015 Move X20, [X20+3296]
	016 Move X22, [X22+3592]
	017 Move X21, [X21+3600]
	018 Move X19, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {37}
	023 Move X0, 0x6E0000
	024 Move X0, [X0+3296]
	025 Call 0x1C17CF4
	026 Move X0, 0x6E1000
	027 Move X0, [X0+3600]
	028 Call 0x1C17CF4
	029 Move X0, 0x684000
	030 Move X0, [X0+1720]
	031 Call 0x1C17CF4
	032 Move X0, 0x6E1000
	033 Move X0, [X0+3592]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X23+719], W8
	037 Move X0, [X24]
	038 Call 0x1C17F10
	039 Move X2, [X20]
	040 Move W1, 10
	041 Move X20, X0
	042 Call List`1<Object>..ctor, X0, X1
	043 Move [X19+40], X20
	044 Move X0, [X22]
	045 Call 0x1C17F10
	046 Move X2, [X21]
	047 Move W1, 10
	048 Move X20, X0
	049 Call List`1<Int64>..ctor, X0, X1
	050 Move [X19+48], X20
	051 Move X0, X19
	052 Move X20, [X31+48]
	053 Move X19, [X31+56]
	054 Move X22, [X31+32]
	055 Move X21, [X31+40]
	056 Move X24, [X31+16]
	057 Move X23, [X31+24]
	058 Move X1, X31
	059 Move X30, [X31+64]
	060 Call ScriptableObject..ctor, X0
	061 Return 

