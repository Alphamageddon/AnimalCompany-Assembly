Type: UnityEngine.Rendering.Universal.RTHandleResourcePool

Method: System.Int32 get_staleResourceCapacity()

Disassembly:
	0x03A755B0 B 0x3A755F4
	0x03A755B4 B 0x3A755F4
	0x03A755B8 B 0x3A755F4
	0x03A755BC B 0x3A755F4
	0x03A755C0 B 0x3A755F4
	0x03A755C4 B 0x3A755F4
	0x03A755C8 B 0x3A755F4
	0x03A755CC B 0x3A755F4
	0x03A755D0 B 0x3A755F4
	0x03A755D4 B 0x3A755F4
	0x03A755D8 B 0x3A755F4
	0x03A755DC B 0x3A755F4
	0x03A755E0 B 0x3A755F4
	0x03A755E4 B 0x3A755F4
	0x03A755E8 B 0x3A755F4
	0x03A755EC B 0x3A755F4
	0x03A755F0 B 0x3A755F4
	0x03A755F4 MOV X20, X0
	0x03A755F8 CMP W1, 0x1
	0x03A755FC B.NE 0x3A75630
	0x03A75600 MOV X0, X20
	0x03A75604 BL 0x3EB1AD0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x96E000
	005 Move X19, 0x6E2000
	006 Move W8, [X20+709]
	007 Move X19, [X19+2968]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x6E2000
	013 Move X0, [X0+2968]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+709], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {23}
	021 Call 0x1C17DFC
	022 Move X0, [X19]
	023 Move X8, [X0+184]
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move W0, [X8+8]
	027 Move X30, [X31+32]
	028 Return X0

Method: System.Void set_staleResourceCapacity(System.Int32 value)

Disassembly:
	0x03A74158 B.EQ 0x3A740F4
	0x03A7415C MOVI V0.2D, 0x0
	0x03A74160 LDR W1, [X20]
	0x03A74164 STR X31, [X19 + 0x20]
	0x03A74168 STP V0, V0, [X19]
	0x03A7416C MOV X0, X19
	0x03A74170 LDP X20, X19, [X31 + 0x50]
	0x03A74174 LDP X22, X21, [X31 + 0x40]
	0x03A74178 LDR X30, [X31 + 0x30]
	0x03A7417C MOVN W3, 0x0
	0x03A74180 MOVN W4, 0x0
	0x03A74184 MOV W2, W31
	0x03A74188 MOV X5, X31
	0x03A7418C ADD X31, X31, 0x60
	0x03A74190 B 0x3C4B07C
	0x03A74194 STP X30, X21, [X31 - 0x20]!
	0x03A74198 STP X20, X19, [X31 + 0x10]
	0x03A7419C ADRP X20, 0x96E000
	0x03A741A0 ADRP X21, 0x6E2000
	0x03A741A4 LDRB W8, [X20 + 0x2BE]
	0x03A741A8 LDR X21, [X21 + 0xDC0]
	0x03A741AC MOV X19, X0
	0x03A741B0 TBNZ X8, 0x0, 0x3A741C8
	0x03A741B4 ADRP X0, 0x6E2000
	0x03A741B8 LDR X0, [X0 + 0xDC0]
	0x03A741BC BL 0x1C16CF4
	0x03A741C0 MOVZ W8, 0x1
	0x03A741C4 STRB W8, [X20 + 0x2BE]
	0x03A741C8 LDR X0, [X21]
	0x03A741CC LDR W8, [X0 + 0xE0]
	0x03A741D0 CBNZ W8, 0x3A741D8
	0x03A741D4 BL 0x1C16DFC
	0x03A741D8 LDR W8, [X19]
	0x03A741DC LDP X20, X19, [X31 + 0x10]
	0x03A741E0 ADDS W31, W8, 0x2
	0x03A741E4 CSET W0, EQ
	0x03A741E8 LDP X30, X21, [X31], #0x20
	0x03A741EC RET
	0x03A741F0 SUB X31, X31, 0xE0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x96F000
	007 Move X21, 0x6E3000
	008 Move W8, [X22+710]
	009 Move X21, [X21+2968]
	010 Move W20, W1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x6E3000
	017 Move X0, [X0+2968]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+710], W8
	021 Move X0, [X21]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {27}
	025 Call 0x1C17DFC
	026 Move X0, [X21]
	027 Move X8, [X0+184]
	028 Move W9, [X8+8]
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move X20, [X31+32]
	031 Move X19, [X31+40]
	032 Move X22, [X31+16]
	033 Move X21, [X31+24]
	034 Move X30, [X31+48]
	035 Return 
	036 Move W9, [X0+224]
	037 Compare W9, 0
	038 JumpIfNotEqual {42}
	039 Call 0x1C17DFC
	040 Move X8, [X21]
	041 Move X8, [X8+184]
	042 Move [X8+8], W20
	043 Move X0, X19
	044 Move X20, [X31+32]
	045 Move X19, [X31+40]
	046 Move X22, [X31+16]
	047 Move X21, [X31+24]
	048 Move X30, [X31+48]
	049 Call RTHandleResourcePool.Cleanup, X0
	050 Return 

Method: System.Boolean AddResourceToPool(in UnityEngine.Experimental.Rendering.RenderGraphModule.TextureDesc texDesc, UnityEngine.Rendering.RTHandle resource, System.Int32 currentFrameIndex)

Disassembly:
	0x03A741F4 STR X30, [X31 + 0xB0]
	0x03A741F8 STP X22, X21, [X31 + 0xC0]
	0x03A741FC STP X20, X19, [X31 + 0xD0]
	0x03A74200 ADRP X22, 0x96E000
	0x03A74204 ADRP X21, 0x6E2000
	0x03A74208 LDRB W8, [X22 + 0x2BF]
	0x03A7420C LDR X21, [X21 + 0xDC0]
	0x03A74210 MOV X19, X1
	0x03A74214 MOV X20, X0
	0x03A74218 TBNZ X8, 0x0, 0x3A74230
	0x03A7421C ADRP X0, 0x6E2000
	0x03A74220 LDR X0, [X0 + 0xDC0]
	0x03A74224 BL 0x1C16CF4
	0x03A74228 MOVZ W8, 0x1
	0x03A7422C STRB W8, [X22 + 0x2BF]
	0x03A74230 LDR X0, [X21]
	0x03A74234 LDR W8, [X0 + 0xE0]
	0x03A74238 CBNZ W8, 0x3A74240
	0x03A7423C BL 0x1C16DFC
	0x03A74240 LDR W8, [X20]
	0x03A74244 ADDS W31, W8, 0x2
	0x03A74248 B.EQ 0x3A74268
	0x03A7424C LDR X0, [X21]
	0x03A74250 LDR W8, [X0 + 0xE0]
	0x03A74254 CBNZ W8, 0x3A7425C
	0x03A74258 BL 0x1C16DFC
	0x03A7425C LDR W8, [X19]
	0x03A74260 ADDS W31, W8, 0x2
	0x03A74264 B.NE 0x3A742DC
	0x03A74268 LDR X0, [X21]
	0x03A7426C LDR W8, [X0 + 0xE0]
	0x03A74270 CBNZ W8, 0x3A74278
	0x03A74274 BL 0x1C16DFC
	0x03A74278 ADD X8, X31, 0x58
	0x03A7427C MOV X0, X20
	0x03A74280 BL 0x3A74084
	0x03A74284 LDR X8, [X31 + 0x78]
	0x03A74288 LDUR V0, [X31 + 0x58]
	0x03A7428C LDUR V1, [X31 + 0x68]
	0x03A74290 MOV X0, X19
	0x03A74294 STR X8, [X31 + 0xA0]
	0x03A74298 ADD X8, X31, 0x58
	0x03A7429C STP V0, V1, [X31 + 0x80]
	0x03A742A0 BL 0x3A74084
	0x03A742A4 LDUR V0, [X31 + 0x58]
	0x03A742A8 LDUR V1, [X31 + 0x68]
	0x03A742AC LDR X8, [X31 + 0x78]
	0x03A742B0 LDP V2, V3, [X31 + 0x80]
	0x03A742B4 LDR X9, [X31 + 0xA0]
	0x03A742B8 ADD X0, X31, 0x30
	0x03A742BC ADD X1, X31, 0x0
	0x03A742C0 MOV X2, X31
	0x03A742C4 STP V0, V1, [X31]
	0x03A742C8 STR X8, [X31 + 0x20]
	0x03A742CC STP V2, V3, [X31 + 0x30]
	0x03A742D0 STR X9, [X31 + 0x50]
	0x03A742D4 BL 0x3C4B6D8
	0x03A742D8 B 0x3A742FC
	0x03A742DC LDR X0, [X21]
	0x03A742E0 LDR W9, [X0 + 0xE0]
	0x03A742E4 CBNZ W9, 0x3A742F0
	0x03A742E8 BL 0x1C16DFC
	0x03A742EC LDR W8, [X19]
	0x03A742F0 LDR W9, [X20]
	0x03A742F4 CMP W9, W8
	0x03A742F8 CSET W0, EQ
	0x03A742FC LDP X20, X19, [X31 + 0xD0]
	0x03A74300 LDP X22, X21, [X31 + 0xC0]
	0x03A74304 LDR X30, [X31 + 0xB0]
	0x03A74308 AND W0, W0, 0x1
	0x03A7430C ADD X31, X31, 0xE0
	0x03A74310 RET
	0x03A74314 SUB X31, X31, 0x50
	0x03A74318 STP X30, X21, [X31 + 0x30]
	0x03A7431C STP X20, X19, [X31 + 0x40]
	0x03A74320 ADRP X21, 0x96E000
	0x03A74324 LDRB W8, [X21 + 0x2C0]
	0x03A74328 MOV X20, X1
	0x03A7432C MOV X19, X0
	0x03A74330 TBNZ X8, 0x0, 0x3A74348
	0x03A74334 ADRP X0, 0x6E2000
	0x03A74338 LDR X0, [X0 + 0xDC0]
	0x03A7433C BL 0x1C16CF4
	0x03A74340 MOVZ W8, 0x1
	0x03A74344 STRB W8, [X21 + 0x2C0]
	0x03A74348 CBZ X20, 0x3A74364
	0x03A7434C ADRP X21, 0x6E2000
	0x03A74350 LDR X21, [X21 + 0xDC0]
	0x03A74354 LDR X8, [X20]
	0x03A74358 LDR X0, [X21]
	0x03A7435C CMP X8, X0
	0x03A74360 B.EQ 0x3A7436C
	0x03A74364 MOV W0, W31
	0x03A74368 B 0x3A743BC
	0x03A7436C LDR W8, [X0 + 0xE0]
	0x03A74370 CBZ W8, 0x3A7437C
	0x03A74374 MOV X1, X0
	0x03A74378 B 0x3A74388
	0x03A7437C BL 0x1C16DFC
	0x03A74380 LDR X1, [X21]
	0x03A74384 LDR X0, [X20]
	0x03A74388 LDR X8, [X0 + 0x40]
	0x03A7438C LDR X9, [X1 + 0x40]
	0x03A74390 MOV X0, X20
	0x03A74394 CMP X8, X9
	0x03A74398 B.NE 0x3A743D0
	0x03A7439C BL 0x1C16E08
	0x03A743A0 LDP V0, V1, [X0]
	0x03A743A4 LDR V2, [X0 + 0x2]
	0x03A743A8 ADD X1, X31, 0x0
	0x03A743AC MOV X0, X19
	0x03A743B0 STP V0, V1, [X31]
	0x03A743B4 STR V2, [X31 + 0x2]
	0x03A743B8 BL 0x3A741F0
	0x03A743BC LDP X20, X19, [X31 + 0x40]
	0x03A743C0 LDP X30, X21, [X31 + 0x30]
	0x03A743C4 AND W0, W0, 0x1
	0x03A743C8 ADD X31, X31, 0x50
	0x03A743CC RET
	0x03A743D0 BL 0x1C171E0
	0x03A743D4 STP X30, X21, [X31 - 0x20]!
	0x03A743D8 STP X20, X19, [X31 + 0x10]
	0x03A743DC ADRP X20, 0x96E000
	0x03A743E0 ADRP X21, 0x6E2000
	0x03A743E4 LDRB W8, [X20 + 0x2C1]
	0x03A743E8 LDR X21, [X21 + 0xDC0]
	0x03A743EC MOV X19, X0
	0x03A743F0 TBNZ X8, 0x0, 0x3A74408
	0x03A743F4 ADRP X0, 0x6E2000

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+32], X30
	003 Move [X31+40], X27
	004 Move [X31+48], X26
	005 Move [X31+56], X25
	006 Move [X31+64], X24
	007 Move [X31+72], X23
	008 Move [X31+80], X22
	009 Move [X31+88], X21
	010 Move [X31+96], X20
	011 Move [X31+104], X19
	012 Move X23, 0x96F000
	013 Move X25, 0x6E3000
	014 Move W8, [X23+711]
	015 Move X25, [X25+2968]
	016 Move W19, W3
	017 Move X20, X2
	018 Move X22, X1
	019 Move X21, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {47}
	024 Move X0, 0x6E3000
	025 Move X0, [X0+3384]
	026 Call 0x1C17CF4
	027 Move X0, 0x6E3000
	028 Move X0, [X0+3368]
	029 Call 0x1C17CF4
	030 Move X0, 0x6E3000
	031 Move X0, [X0+2968]
	032 Call 0x1C17CF4
	033 Move X0, 0x6E3000
	034 Move X0, [X0+3392]
	035 Call 0x1C17CF4
	036 Move X0, 0x6E3000
	037 Move X0, [X0+3400]
	038 Call 0x1C17CF4
	039 Move X0, 0x6E3000
	040 Move X0, [X0+3408]
	041 Call 0x1C17CF4
	042 Move X0, 0x6E3000
	043 Move X0, [X0+3416]
	044 Call 0x1C17CF4
	045 Move W8, 1
	046 Move [X23+711], W8
	047 Move X0, [X25]
	048 Move [X31+24], X31
	049 Move W8, [X0+224]
	050 Compare W8, 0
	051 JumpIfNotEqual {54}
	052 Call 0x1C17DFC
	053 Move X0, [X25]
	054 Move X8, [X0+184]
	055 Move W26, [X8]
	056 Move W27, [X8+8]
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Move X1, X22
	059 Call RTHandleResourcePool.GetHashCodeWithNameHash, X0, X1
	060 Move X8, [X21+16]
	061 Compare X8, 0
	062 JumpIfEqual {153}
	063 Move X9, 0x6E3000
	064 Move X9, [X9+3368]
	065 Move W22, W0
	066 Add X2, X31, 24
	067 Move X0, X8
	068 Move X3, [X9]
	069 Move W1, W22
	070 Call Dictionary`2<Int32, Object>.TryGetValue, X0, X1, X2
	071 Move TEMP, X0
	072 And TEMP, TEMP, 1
	073 Compare TEMP, 1
	074 JumpIfEqual {103}
	075 Move X0, [X25]
	076 Move W8, [X0+224]
	077 Compare W8, 0
	078 JumpIfNotEqual {81}
	079 Call 0x1C17DFC
	080 Move X0, [X25]
	081 Move X9, 0x6E3000
	082 Move X8, [X0+184]
	083 Move X9, [X9+3408]
	084 Move W24, [X8+8]
	085 Move X0, [X9]
	086 Call 0x1C17F10
	087 Move X8, 0x6E3000
	088 Move X8, [X8+3400]
	089 Move W1, W24
	090 Move X23, X0
	091 Move X2, [X8]
	092 Call 0x25EDCDC, X0, X1
	093 Move [X31+24], X23
	094 Move X0, [X21+16]
	095 Compare X0, 0
	096 JumpIfEqual {153}
	097 Move X8, 0x6E3000
	098 Move X8, [X8+3384]
	099 Move W1, W22
	100 Move X2, X23
	101 Move X3, [X8]
	102 Call Dictionary`2<Int32, Object>.Add, X0, X1, X2
	103 Compare X20, 0
	104 JumpIfEqual {153}
	105 Move X21, [X31+24]
	106 Move X0, X20
	107 Move X1, X31
	108 Call RTHandle.GetInstanceID, X0
	109 Move X8, 0x6E3000
	110 Move X8, [X8+3416]
	111 Move W22, W0
	112 Add X0, X31, 8
	113 Move X1, X20
	114 Move X3, [X8]
	115 Move W2, W19
	116 Move [X31+8], X31
	117 Move [X31+16], X31
	118 Call ValueTuple`2<Object, Int32>..ctor, X0, X1, X2
	119 Compare X21, 0
	120 JumpIfEqual {153}
	121 Move X8, 0x6E3000
	122 Move X2, [X31+8]
	123 Move X3, [X31+16]
	124 Move X8, [X8+3392]
	125 Move X0, X21
	126 Move W1, W22
	127 Move X4, [X8]
	128 Call 0x25EDDDC, X0, X1, X2
	129 Move X0, [X25]
	130 Move W8, [X0+224]
	131 Compare W8, 0
	132 JumpIfNotEqual {135}
	133 Call 0x1C17DFC
	134 Move X0, [X25]
	135 Move X8, [X0+184]
	136 Move W9, [X8]
	137 Add W9, W9, 1
	138 Move [X8], W9
	139 NotImplemented "Instruction CMP not yet implemented."
	140 Move X20, [X31+96]
	141 Move X19, [X31+104]
	142 Move X22, [X31+80]
	143 Move X21, [X31+88]
	144 Move X24, [X31+64]
	145 Move X23, [X31+72]
	146 Move X26, [X31+48]
	147 Move X25, [X31+56]
	148 Move X30, [X31+32]
	149 Move X27, [X31+40]
	150 NotImplemented "Instruction CSET not yet implemented."
	151 Add X31, X31, 112
	152 Return X0
	153 Call 0x1C17F20

Method: System.Boolean TryGetResource(in UnityEngine.Experimental.Rendering.RenderGraphModule.TextureDesc texDesc, out UnityEngine.Rendering.RTHandle resource, System.Boolean usepool = True)

Disassembly:
	0x03A73710 LDR W8, [X0 + 0xE0]
	0x03A73714 LDR X25, [X25 + 0xD60]
	0x03A73718 LDR X21, [X21 + 0xD68]
	0x03A7371C CBNZ W8, 0x3A73724
	0x03A73720 BL 0x1C16DFC
	0x03A73724 LDR X0, [X25]
	0x03A73728 MOV X1, X31
	0x03A7372C BL 0x3C06A04
	0x03A73730 LDR X1, [X21]
	0x03A73734 ADD X0, X31, 0x0
	0x03A73738 MOV X2, X31
	0x03A7373C STR W31, [X31]
	0x03A73740 BL 0x3C5A49C
	0x03A73744 LDR X0, [X23]
	0x03A73748 LDR W8, [X0 + 0xE0]
	0x03A7374C CBNZ W8, 0x3A73754
	0x03A73750 BL 0x1C16DFC
	0x03A73754 LDR W0, [X31]
	0x03A73758 ADD X8, X31, 0x8
	0x03A7375C MOV X1, X22
	0x03A73760 MOV W2, W20
	0x03A73764 BL 0x3A733F8
	0x03A73768 ADD X1, X31, 0x8
	0x03A7376C MOVZ W2, 0xC4
	0x03A73770 MOV X0, X19
	0x03A73774 BL 0x3EB1AC0
	0x03A73778 LDR X8, [X24 + 0x28]
	0x03A7377C LDR X9, [X31 + 0x198]
	0x03A73780 CMP X8, X9
	0x03A73784 B.NE 0x3A737A4
	0x03A73788 LDP X20, X19, [X31 + 0x1E0]
	0x03A7378C LDP X22, X21, [X31 + 0x1D0]
	0x03A73790 LDP X24, X23, [X31 + 0x1C0]
	0x03A73794 LDP X30, X25, [X31 + 0x1B0]
	0x03A73798 LDR X29, [X31 + 0x1A0]
	0x03A7379C ADD X31, X31, 0x1F0
	0x03A737A0 RET
	0x03A737A4 BL 0x3EB1B20
	0x03A737A8 SUB X31, X31, 0xE0
	0x03A737AC STR X30, [X31 + 0xA0]
	0x03A737B0 STP X24, X23, [X31 + 0xB0]
	0x03A737B4 STP X22, X21, [X31 + 0xC0]
	0x03A737B8 STP X20, X19, [X31 + 0xD0]
	0x03A737BC ADRP X21, 0x96F000
	0x03A737C0 ADRP X22, 0x6E1000
	0x03A737C4 ADRP X19, 0x6E1000
	0x03A737C8 ADRP X20, 0x6E3000
	0x03A737CC LDRB W8, [X21 + 0x2B7]
	0x03A737D0 LDR X22, [X22 + 0x60]
	0x03A737D4 LDR X19, [X19 + 0x68]
	0x03A737D8 LDR X20, [X20 + 0xD70]
	0x03A737DC TBNZ X8, 0x0, 0x3A73890
	0x03A737E0 ADRP X0, 0x6E3000
	0x03A737E4 LDR X0, [X0 + 0xD78]
	0x03A737E8 BL 0x1C16CF4
	0x03A737EC ADRP X0, 0x6E3000
	0x03A737F0 LDR X0, [X0 + 0xD80]
	0x03A737F4 BL 0x1C16CF4
	0x03A737F8 ADRP X0, 0x6E3000
	0x03A737FC LDR X0, [X0 + 0xD88]
	0x03A73800 BL 0x1C16CF4
	0x03A73804 ADRP X0, 0x6E3000
	0x03A73808 LDR X0, [X0 + 0xD90]
	0x03A7380C BL 0x1C16CF4
	0x03A73810 ADRP X0, 0x6E1000
	0x03A73814 LDR X0, [X0 + 0x70]
	0x03A73818 BL 0x1C16CF4
	0x03A7381C ADRP X0, 0x6E1000
	0x03A73820 LDR X0, [X0 + 0x68]
	0x03A73824 BL 0x1C16CF4
	0x03A73828 ADRP X0, 0x6E1000
	0x03A7382C LDR X0, [X0 + 0x60]
	0x03A73830 BL 0x1C16CF4
	0x03A73834 ADRP X0, 0x6E1000
	0x03A73838 LDR X0, [X0 + 0x10]
	0x03A7383C BL 0x1C16CF4
	0x03A73840 ADRP X0, 0x6E3000
	0x03A73844 LDR X0, [X0 + 0xD98]
	0x03A73848 BL 0x1C16CF4
	0x03A7384C ADRP X0, 0x6E3000
	0x03A73850 LDR X0, [X0 + 0xDA0]
	0x03A73854 BL 0x1C16CF4
	0x03A73858 ADRP X0, 0x6E3000
	0x03A7385C LDR X0, [X0 + 0xDA8]
	0x03A73860 BL 0x1C16CF4
	0x03A73864 ADRP X0, 0x6E3000
	0x03A73868 LDR X0, [X0 + 0xDB0]
	0x03A7386C BL 0x1C16CF4
	0x03A73870 ADRP X0, 0x6E3000
	0x03A73874 LDR X0, [X0 + 0xD70]
	0x03A73878 BL 0x1C16CF4
	0x03A7387C ADRP X0, 0x6E3000
	0x03A73880 LDR X0, [X0 + 0xDB8]
	0x03A73884 BL 0x1C16CF4
	0x03A73888 MOVZ W8, 0x1
	0x03A7388C STRB W8, [X21 + 0x2B7]
	0x03A73890 LDR X0, [X22]
	0x03A73894 BL 0x1C16F10
	0x03A73898 LDR X1, [X19]
	0x03A7389C MOV X19, X0
	0x03A738A0 BL 0x305C9FC
	0x03A738A4 LDR X1, [X20]
	0x03A738A8 ADD X0, X31, 0xA8
	0x03A738AC MOV X2, X31
	0x03A738B0 STR W31, [X31 + 0xA8]
	0x03A738B4 BL 0x3C5A49C
	0x03A738B8 CBZ X19, 0x3A73C1C
	0x03A738BC ADRP X20, 0x6E1000
	0x03A738C0 LDR X20, [X20 + 0x70]
	0x03A738C4 LDR W10, [X19 + 0x1C]
	0x03A738C8 LDR W1, [X31 + 0xA8]
	0x03A738CC LDR X8, [X19 + 0x10]
	0x03A738D0 LDR X9, [X20]
	0x03A738D4 ADD W10, W10, 0x1

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0x970000
	009 Move W8, [X23+712]
	010 Move W20, W3
	011 Move X19, X2
	012 Move X22, X1
	013 Move X21, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {38}
	018 Move X0, 0x6E4000
	019 Move X0, [X0+3368]
	020 Call 0x1C17CF4
	021 Move X0, 0x6DF000
	022 Move X0, [X0+128]
	023 Call 0x1C17CF4
	024 Move X0, 0x6E4000
	025 Move X0, [X0+2968]
	026 Call 0x1C17CF4
	027 Move X0, 0x6E4000
	028 Move X0, [X0+3376]
	029 Call 0x1C17CF4
	030 Move X0, 0x6DF000
	031 Move X0, [X0+160]
	032 Call 0x1C17CF4
	033 Move X0, 0x6DF000
	034 Move X0, [X0+176]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X23+712], W8
	038 Move X1, X22
	039 Move [X31+8], X31
	040 Call RTHandleResourcePool.GetHashCodeWithNameHash, X0, X1
	041 Move TEMP, X20
	042 And TEMP, TEMP, 1
	043 Compare TEMP, 1
	044 JumpIfNotEqual {91}
	045 Move W1, W0
	046 Move X0, [X21+16]
	047 Compare X0, 0
	048 JumpIfEqual {132}
	049 Move X8, 0x6E4000
	050 Move X8, [X8+3368]
	051 Add X2, X31, 8
	052 Move X3, [X8]
	053 Call Dictionary`2<Int32, Object>.TryGetValue, X0, X1, X2
	054 Move TEMP, X0
	055 And TEMP, TEMP, 1
	056 Compare TEMP, 1
	057 JumpIfNotEqual {91}
	058 Move X0, [X31+8]
	059 Compare X0, 0
	060 JumpIfEqual {132}
	061 Move W8, [X0+32]
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Move X8, 0x6DF000
	064 Move X8, [X8+176]
	065 Move X1, [X8]
	066 Call 0x25EE534, X0
	067 Move X9, [X31+8]
	068 Compare X9, 0
	069 JumpIfEqual {132}
	070 Move X20, X0
	071 Compare X0, 0
	072 JumpIfEqual {132}
	073 Move X11, 0x6DF000
	074 Move X8, [X20]
	075 Move W10, [X9+32]
	076 Move X11, [X11+128]
	077 NotImplemented "Instruction LDRH not yet implemented."
	078 Subtract W21, W10, 1
	079 Move X1, [X11]
	080 Compare X9, 0
	081 JumpIfEqual {88}
	082 Move X10, [X8+176]
	083 Add X10, X10, 8
	084 NotImplemented "Instruction LDUR not yet implemented."
	085 NotImplemented "Instruction CMP not yet implemented."
	086 Subtract X9, X9, 1
	087 Add X10, X10, 16
	088 Move X0, X20
	089 Move W2, W31
	090 Call 0x1C5D788
	091 Move W0, W31
	092 Move [X19], X31
	093 Move X20, [X31+48]
	094 Move X19, [X31+56]
	095 Move X22, [X31+32]
	096 Move X21, [X31+40]
	097 Move X30, [X31+16]
	098 Move X23, [X31+24]
	099 Add X31, X31, 64
	100 Return X0
	101 NotImplemented "Instruction LDRSW not yet implemented."
	102 Add X8, X8, X9
	103 Add X0, X8, 312
	104 Move X8, [X0]
	105 Move X2, [X0+8]
	106 Move X0, X20
	107 Move W1, W21
	108 NotImplemented "Instruction BLR not yet implemented."
	109 Move [X19], X0
	110 Move X0, [X31+8]
	111 Compare X0, 0
	112 JumpIfEqual {132}
	113 Move X9, 0x6E4000
	114 Move W8, [X0+32]
	115 Move X9, [X9+3376]
	116 Subtract W1, W8, 1
	117 Move X2, [X9]
	118 Call 0x25EF954, X0, X1
	119 Move X19, 0x6E4000
	120 Move X19, [X19+2968]
	121 Move X0, [X19]
	122 Move W8, [X0+224]
	123 Compare W8, 0
	124 JumpIfNotEqual {127}
	125 Call 0x1C17DFC
	126 Move X0, [X19]
	127 Move X8, [X0+184]
	128 Move W0, 1
	129 Move W9, [X8]
	130 Subtract W9, W9, 1
	131 Move [X8], W9
	132 Call 0x1C17F20

Method: System.Void Cleanup()

Disassembly:
	0x03A75608 LDR X21, [X0]
	0x03A7560C BL 0x3EB1AE0
	0x03A75610 ADRP X8, 0x6DC000
	0x03A75614 LDR X8, [X8 + 0x68]
	0x03A75618 ADD X0, X31, 0x50
	0x03A7561C LDR X1, [X8]
	0x03A75620 BL 0x2BF5448
	0x03A75624 CBZ X21, 0x3A754DC
	0x03A75628 MOV X0, X21
	0x03A7562C BL 0x1C16F18
	0x03A75630 MOV X21, X31
	0x03A75634 B 0x3A7563C
	0x03A75638 MOV X20, X0
	0x03A7563C ADRP X8, 0x6DC000
	0x03A75640 LDR X8, [X8 + 0x68]
	0x03A75644 LDR X1, [X8]
	0x03A75648 ADD X0, X31, 0x50
	0x03A7564C BL 0x2BF5448
	0x03A75650 CBNZ X21, 0x3A7565C
	0x03A75654 MOV X0, X20
	0x03A75658 BL 0x1D2C690
	0x03A7565C MOV X0, X21
	0x03A75660 BL 0x1C16F18
	0x03A75664 BL 0x1990590
	0x03A75668 STR X30, [X31 - 0x40]!
	0x03A7566C STP X24, X23, [X31 + 0x10]
	0x03A75670 STP X22, X21, [X31 + 0x20]
	0x03A75674 STP X20, X19, [X31 + 0x30]
	0x03A75678 ADRP X23, 0x96D000
	0x03A7567C ADRP X24, 0x6E1000
	0x03A75680 ADRP X20, 0x6E1000
	0x03A75684 ADRP X22, 0x67F000
	0x03A75688 ADRP X21, 0x67F000
	0x03A7568C LDRB W8, [X23 + 0x2CD]
	0x03A75690 LDR X24, [X24 + 0xDF8]
	0x03A75694 LDR X20, [X20 + 0xE00]
	0x03A75698 LDR X22, [X22 + 0xE30]
	0x03A7569C LDR X21, [X21 + 0xE20]
	0x03A756A0 MOV X19, X0
	0x03A756A4 TBNZ X8, 0x0, 0x3A756E0
	0x03A756A8 ADRP X0, 0x6E1000
	0x03A756AC LDR X0, [X0 + 0xE00]
	0x03A756B0 BL 0x1C16CF4
	0x03A756B4 ADRP X0, 0x6E1000
	0x03A756B8 LDR X0, [X0 + 0xDF8]
	0x03A756BC BL 0x1C16CF4
	0x03A756C0 ADRP X0, 0x67F000
	0x03A756C4 LDR X0, [X0 + 0xE20]
	0x03A756C8 BL 0x1C16CF4
	0x03A756CC ADRP X0, 0x67F000
	0x03A756D0 LDR X0, [X0 + 0xE30]
	0x03A756D4 BL 0x1C16CF4
	0x03A756D8 MOVZ W8, 0x1
	0x03A756DC STRB W8, [X23 + 0x2CD]
	0x03A756E0 LDR X0, [X24]
	0x03A756E4 BL 0x1C16F10
	0x03A756E8 LDR X1, [X20]
	0x03A756EC MOV X20, X0
	0x03A756F0 BL 0x2A12DD4
	0x03A756F4 STR X20, [X19 + 0x10]
	0x03A756F8 LDR X0, [X22]
	0x03A756FC BL 0x1C16F10
	0x03A75700 LDR X2, [X21]
	0x03A75704 MOVZ W1, 0x20
	0x03A75708 MOV X20, X0
	0x03A7570C BL 0x2FDBF80
	0x03A75710 STR X20, [X19 + 0x18]
	0x03A75714 MOV X0, X19
	0x03A75718 LDP X20, X19, [X31 + 0x30]
	0x03A7571C LDP X22, X21, [X31 + 0x20]
	0x03A75720 LDP X24, X23, [X31 + 0x10]
	0x03A75724 MOV X1, X31
	0x03A75728 LDR X30, [X31], #0x40
	0x03A7572C B 0x33BDD8C
	0x03A75730 STR X30, [X31 - 0x20]!
	0x03A75734 STP X20, X19, [X31 + 0x10]
	0x03A75738 ADRP X19, 0x96D000
	0x03A7573C ADRP X20, 0x6E1000
	0x03A75740 LDRB W8, [X19 + 0x2CE]
	0x03A75744 LDR X20, [X20 + 0xB98]
	0x03A75748 TBNZ X8, 0x0, 0x3A75760
	0x03A7574C ADRP X0, 0x6E1000
	0x03A75750 LDR X0, [X0 + 0xB98]
	0x03A75754 BL 0x1C16CF4
	0x03A75758 MOVZ W8, 0x1
	0x03A7575C STRB W8, [X19 + 0x2CE]
	0x03A75760 LDR X8, [X20]
	0x03A75764 ADRP X9, 0xFFFFFFFFFD078000
	0x03A75768 LDR V0, [X9 + 0xB60]
	0x03A7576C LDP X20, X19, [X31 + 0x10]
	0x03A75770 LDR X8, [X8 + 0xB8]
	0x03A75774 MOVZ W9, 0x20
	0x03A75778 STR D0, [X8]
	0x03A7577C STR W9, [X8 + 0x8]
	0x03A75780 LDR X30, [X31], #0x20
	0x03A75784 RET
	0x03A75788 LDRB W0, [X0 + 0x18]
	0x03A7578C RET
	0x03A75790 AND W8, W1, 0x1
	0x03A75794 STRB W8, [X0 + 0x18]
	0x03A75798 RET
	0x03A7579C LDR X0, [X0 + 0x28]
	0x03A757A0 RET
	0x03A757A4 MOVZ W8, 0x1
	0x03A757A8 STRB W8, [X0 + 0x18]
	0x03A757AC RET
	0x03A757B0 LDR X8, [X0]
	0x03A757B4 STRB W31, [X0 + 0x18]
	0x03A757B8 LDP X2, X1, [X8 + 0x178]
	0x03A757BC BR X2
	0x03A757C0 MOVZ W8, 0x1
	0x03A757C4 STRB W8, [X0 + 0x18]
	0x03A757C8 RET
	0x03A757CC MOVZ W8, 0x1
	0x03A757D0 STRB W8, [X0 + 0x18]
	0x03A757D4 RET
	0x03A757D8 LDRB W0, [X0 + 0x38]
	0x03A757DC RET
	0x03A757E0 AND W8, W1, 0x1
	0x03A757E4 MOVZ W9, 0x1
	0x03A757E8 STRB W9, [X0 + 0x18]
	0x03A757EC STRB W8, [X0 + 0x38]
	0x03A757F0 RET
	0x03A757F4 STR X30, [X31 - 0x40]!
	0x03A757F8 STP X24, X23, [X31 + 0x10]
	0x03A757FC STP X22, X21, [X31 + 0x20]
	0x03A75800 STP X20, X19, [X31 + 0x30]
	0x03A75804 ADRP X23, 0x96D000
	0x03A75808 ADRP X24, 0x684000
	0x03A7580C ADRP X20, 0x6E0000
	0x03A75810 ADRP X22, 0x6E1000
	0x03A75814 ADRP X21, 0x6E1000
	0x03A75818 LDRB W8, [X23 + 0x2CF]
	0x03A7581C LDR X24, [X24 + 0x6B8]
	0x03A75820 LDR X20, [X20 + 0xCE0]
	0x03A75824 LDR X22, [X22 + 0xE08]
	0x03A75828 LDR X21, [X21 + 0xE10]
	0x03A7582C MOV X19, X0
	0x03A75830 TBNZ X8, 0x0, 0x3A7586C
	0x03A75834 ADRP X0, 0x6E0000
	0x03A75838 LDR X0, [X0 + 0xCE0]
	0x03A7583C BL 0x1C16CF4
	0x03A75840 ADRP X0, 0x6E1000
	0x03A75844 LDR X0, [X0 + 0xE10]
	0x03A75848 BL 0x1C16CF4
	0x03A7584C ADRP X0, 0x684000
	0x03A75850 LDR X0, [X0 + 0x6B8]
	0x03A75854 BL 0x1C16CF4
	0x03A75858 ADRP X0, 0x6E1000
	0x03A7585C LDR X0, [X0 + 0xE08]
	0x03A75860 BL 0x1C16CF4
	0x03A75864 MOVZ W8, 0x1
	0x03A75868 STRB W8, [X23 + 0x2CF]
	0x03A7586C LDR X0, [X24]
	0x03A75870 BL 0x1C16F10
	0x03A75874 LDR X2, [X20]
	0x03A75878 MOVZ W1, 0xA
	0x03A7587C MOV X20, X0
	0x03A75880 BL 0x301B830
	0x03A75884 STR X20, [X19 + 0x28]
	0x03A75888 LDR X0, [X22]
	0x03A7588C BL 0x1C16F10
	0x03A75890 LDR X2, [X21]
	0x03A75894 MOVZ W1, 0xA
	0x03A75898 MOV X20, X0
	0x03A7589C BL 0x2FE1458
	0x03A758A0 STR X20, [X19 + 0x30]
	0x03A758A4 MOV X0, X19
	0x03A758A8 LDP X20, X19, [X31 + 0x30]
	0x03A758AC LDP X22, X21, [X31 + 0x20]
	0x03A758B0 LDP X24, X23, [X31 + 0x10]
	0x03A758B4 MOV X1, X31
	0x03A758B8 LDR X30, [X31], #0x40
	0x03A758BC B 0x3C36D2C
	0x03A758C0 MOV X1, X31
	0x03A758C4 B 0x33BDD8C
	0x03A758C8 LDRB W0, [X0 + 0x18]
	0x03A758CC RET
	0x03A758D0 RET
	0x03A758D4 RET
	0x03A758D8 LDR X8, [X0]
	0x03A758DC LDP X2, X1, [X8 + 0x188]
	0x03A758E0 BR X2
	0x03A758E4 LDR X8, [X0]
	0x03A758E8 LDP X2, X1, [X8 + 0x188]
	0x03A758EC BR X2
	0x03A758F0 MOV W0, W31
	0x03A758F4 RET
	0x03A758F8 MOV W0, W31
	0x03A758FC STR W31, [X3]
	0x03A75900 STR W31, [X4]
	0x03A75904 RET
	0x03A75908 AND W8, W1, 0x1
	0x03A7590C STRB W8, [X0 + 0x18]
	0x03A75910 RET
	0x03A75914 STP X30, X21, [X31 - 0x20]!
	0x03A75918 STP X20, X19, [X31 + 0x10]
	0x03A7591C ADRP X21, 0x96D000
	0x03A75920 ADRP X20, 0x685000
	0x03A75924 LDRB W8, [X21 + 0x2D0]
	0x03A75928 LDR X20, [X20 + 0xC10]
	0x03A7592C MOV X19, X0
	0x03A75930 TBNZ X8, 0x0, 0x3A75948
	0x03A75934 ADRP X0, 0x685000
	0x03A75938 LDR X0, [X0 + 0xC10]
	0x03A7593C BL 0x1C16CF4
	0x03A75940 MOVZ W8, 0x1
	0x03A75944 STRB W8, [X21 + 0x2D0]
	0x03A75948 LDR X8, [X19]
	0x03A7594C MOVZ W1, 0x1
	0x03A75950 MOV X0, X19
	0x03A75954 LDP X9, X2, [X8 + 0x1E8]
	0x03A75958 BLR X9
	0x03A7595C LDR X0, [X20]
	0x03A75960 LDR W8, [X0 + 0xE0]
	0x03A75964 CBNZ W8, 0x3A7596C
	0x03A75968 BL 0x1C16DFC
	0x03A7596C MOV X0, X19
	0x03A75970 LDP X20, X19, [X31 + 0x10]
	0x03A75974 MOV X1, X31
	0x03A75978 LDP X30, X21, [X31], #0x20
	0x03A7597C B 0x33B3E9C
	0x03A75980 RET
	0x03A75984 MOV X1, X31
	0x03A75988 B 0x33BDD8C
	0x03A7598C STR X30, [X31 - 0x20]!
	0x03A75990 STP X20, X19, [X31 + 0x10]
	0x03A75994 ADRP X19, 0x96D000
	0x03A75998 ADRP X20, 0x6E1000
	0x03A7599C LDRB W8, [X19 + 0x2D1]
	0x03A759A0 LDR X20, [X20 + 0xE18]
	0x03A759A4 TBNZ X8, 0x0, 0x3A759BC
	0x03A759A8 ADRP X0, 0x6E1000
	0x03A759AC LDR X0, [X0 + 0xE18]
	0x03A759B0 BL 0x1C16CF4
	0x03A759B4 MOVZ W8, 0x1
	0x03A759B8 STRB W8, [X19 + 0x2D1]
	0x03A759BC LDR X0, [X20]
	0x03A759C0 LDR X8, [X0 + 0xB8]
	0x03A759C4 LDR X8, [X8]
	0x03A759C8 CBNZ X8, 0x3A759F4
	0x03A759CC BL 0x1C16F10
	0x03A759D0 MOV X1, X31
	0x03A759D4 MOV X19, X0
	0x03A759D8 BL 0x33BDD8C
	0x03A759DC LDR X8, [X20]
	0x03A759E0 LDR X8, [X8 + 0xB8]
	0x03A759E4 STR X19, [X8]
	0x03A759E8 LDR X8, [X20]
	0x03A759EC LDR X8, [X8 + 0xB8]
	0x03A759F0 LDR X8, [X8]
	0x03A759F4 LDP X20, X19, [X31 + 0x10]
	0x03A759F8 MOV X0, X8
	0x03A759FC LDR X30, [X31], #0x20
	0x03A75A00 RET
	0x03A75A04 STP X30, X19, [X31 - 0x10]!
	0x03A75A08 MOV X19, X0
	0x03A75A0C LDR X0, [X0 + 0x10]
	0x03A75A10 CBZ X0, 0x3A75A20
	0x03A75A14 MOV X1, X31
	0x03A75A18 BL 0x3C3A930
	0x03A75A1C STR X31, [X19 + 0x10]
	0x03A75A20 LDR X0, [X19 + 0x18]
	0x03A75A24 CBZ X0, 0x3A75A34
	0x03A75A28 MOV X1, X31
	0x03A75A2C BL 0x3C3A930
	0x03A75A30 STR X31, [X19 + 0x18]
	0x03A75A34 LDR X0, [X19 + 0x20]
	0x03A75A38 CBZ X0, 0x3A75A48
	0x03A75A3C MOV X1, X31

ISIL:
	001 Subtract X31, X31, 192
	002 Move [X31+96], X29
	003 Move [X31+104], X30
	004 Move [X31+112], X28
	005 Move [X31+120], X27
	006 Move [X31+128], X26
	007 Move [X31+136], X25
	008 Move [X31+144], X24
	009 Move [X31+152], X23
	010 Move [X31+160], X22
	011 Move [X31+168], X21
	012 Move [X31+176], X20
	013 Move [X31+184], X19
	014 Move X20, 0x96E000
	015 Move W8, [X20+713]
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {59}
	021 Move X0, 0x6E2000
	022 Move X0, [X0+3528]
	023 Call 0x1C17CF4
	024 Move X0, 0x6DD000
	025 Move X0, [X0+96]
	026 Call 0x1C17CF4
	027 Move X0, 0x6DD000
	028 Move X0, [X0+104]
	029 Call 0x1C17CF4
	030 Move X0, 0x6DD000
	031 Move X0, [X0+112]
	032 Call 0x1C17CF4
	033 Move X0, 0x6DD000
	034 Move X0, [X0+120]
	035 Call 0x1C17CF4
	036 Move X0, 0x67F000
	037 Move X0, [X0+3584]
	038 Call 0x1C17CF4
	039 Move X0, 0x6E2000
	040 Move X0, [X0+3536]
	041 Call 0x1C17CF4
	042 Move X0, 0x67F000
	043 Move X0, [X0+3608]
	044 Call 0x1C17CF4
	045 Move X0, 0x6DD000
	046 Move X0, [X0+136]
	047 Call 0x1C17CF4
	048 Move X0, 0x6E2000
	049 Move X0, [X0+3544]
	050 Call 0x1C17CF4
	051 Move X0, 0x6E2000
	052 Move X0, [X0+2968]
	053 Call 0x1C17CF4
	054 Move X0, 0x6E2000
	055 Move X0, [X0+3552]
	056 Call 0x1C17CF4
	057 Move W8, 1
	058 Move [X20+713], W8
	059 NotImplemented "Instruction MOVI not yet implemented."
	060 Move [X31+80], X31
	061 Move [X31+48], V0
	062 Move [X31+56], V0
	063 Move X0, [X19+16]
	064 Compare X0, 0
	065 JumpIfEqual {255}
	066 Move X8, 0x6DD000
	067 Move X8, [X8+96]
	068 Move X28, 0x6DD000
	069 Move X29, 0x6E2000
	070 Move X27, 0x67F000
	071 Move X21, 0x67F000
	072 Move X23, 0x6E2000
	073 Move X28, [X28+112]
	074 Move X29, [X29+3552]
	075 Move X27, [X27+3584]
	076 Move X21, [X21+3608]
	077 Move X23, [X23+3536]
	078 Move X1, [X8]
	079 Move X25, 0x6E2000
	080 Move X24, 0x6E2000
	081 Move X26, 0x6DD000
	082 Move X25, [X25+3528]
	083 Move X24, [X24+2968]
	084 Move X26, [X26+104]
	085 Add X8, X31, 8
	086 Call Dictionary`2<Int32, Object>.GetEnumerator, X0
	087 NotImplemented "Instruction LDUR not yet implemented."
	088 NotImplemented "Instruction LDUR not yet implemented."
	089 Move X8, [X31+40]
	090 Move [X31+48], V0
	091 Move [X31+56], V1
	092 Move [X31+80], X8
	093 Move X1, [X28]
	094 Add X0, X31, 48
	095 Call Enumerator<Int32, Object>.MoveNext, X0
	096 Move TEMP, X0
	097 And TEMP, TEMP, 1
	098 Compare TEMP, 1
	099 JumpIfNotEqual {192}
	100 Move X0, [X31+72]
	101 Compare X0, 0
	102 JumpIfEqual {254}
	103 Move X1, [X29]
	104 Call 0x25EF01C, X0
	105 Move X20, X0
	106 Compare X0, 0
	107 JumpIfEqual {187}
	108 Move X8, [X20]
	109 Move X1, [X21]
	110 NotImplemented "Instruction LDRH not yet implemented."
	111 Compare X9, 0
	112 JumpIfEqual {119}
	113 Move X10, [X8+176]
	114 Add X10, X10, 8
	115 NotImplemented "Instruction LDUR not yet implemented."
	116 NotImplemented "Instruction CMP not yet implemented."
	117 Subtract X9, X9, 1
	118 Add X10, X10, 16
	119 Move X0, X20
	120 Move W2, W31
	121 Call 0x1C5D788
	122 NotImplemented "Instruction LDRSW not yet implemented."
	123 Add X8, X8, X9
	124 Add X0, X8, 312
	125 Move X8, [X0]
	126 Move X1, [X0+8]
	127 Move X0, X20
	128 NotImplemented "Instruction BLR not yet implemented."
	129 Move TEMP, X0
	130 And TEMP, TEMP, 1
	131 Compare TEMP, 1
	132 JumpIfNotEqual {160}
	133 Move X8, [X20]
	134 Move X1, [X23]
	135 NotImplemented "Instruction LDRH not yet implemented."
	136 Compare X9, 0
	137 JumpIfEqual {144}
	138 Move X10, [X8+176]
	139 Add X10, X10, 8
	140 NotImplemented "Instruction LDUR not yet implemented."
	141 NotImplemented "Instruction CMP not yet implemented."
	142 Subtract X9, X9, 1
	143 Add X10, X10, 16
	144 Move X0, X20
	145 Move W2, W31
	146 Call 0x1C5D788
	147 NotImplemented "Instruction LDRSW not yet implemented."
	148 Add X8, X8, X9
	149 Add X0, X8, 312
	150 Move X9, [X0]
	151 Move X1, [X0+8]
	152 Add X8, X31, 8
	153 Move X0, X20
	154 NotImplemented "Instruction BLR not yet implemented."
	155 Move X0, [X31+16]
	156 Compare X0, 0
	157 JumpIfEqual {186}
	158 Move X1, X31
	159 Call RTHandle.Release, X0
	160 Move X22, X31
	161 Compare X20, 0
	162 JumpIfEqual {184}
	163 Move X8, [X20]
	164 Move X1, [X27]
	165 NotImplemented "Instruction LDRH not yet implemented."
	166 Compare X9, 0
	167 JumpIfEqual {174}
	168 Move X10, [X8+176]
	169 Add X10, X10, 8
	170 NotImplemented "Instruction LDUR not yet implemented."
	171 NotImplemented "Instruction CMP not yet implemented."
	172 Subtract X9, X9, 1
	173 Add X10, X10, 16
	174 Move X0, X20
	175 Move W2, W31
	176 Call 0x1C5D788
	177 NotImplemented "Instruction LDRSW not yet implemented."
	178 Add X8, X8, X9
	179 Add X0, X8, 312
	180 Move X8, [X0]
	181 Move X1, [X0+8]
	182 Move X0, X20
	183 NotImplemented "Instruction BLR not yet implemented."
	184 Compare X22, 0
	185 JumpIfEqual {93}
	186 Call 0x1C17F20
	187 Call 0x1C17F20
	188 NotImplemented "Instruction CMP not yet implemented."
	189 Call 0x3EB2AD0
	190 Move X22, [X0]
	191 Call 0x3EB2AE0
	192 Move X1, [X26]
	193 Add X0, X31, 48
	194 Call Enumerator<Int32, Object>.Dispose, X0
	195 Move X0, [X19+16]
	196 Compare X0, 0
	197 JumpIfEqual {255}
	198 Move X1, [X25]
	199 Call Dictionary`2<Int32, Object>.Clear, X0
	200 Move X0, [X24]
	201 Move W8, [X0+224]
	202 Compare W8, 0
	203 JumpIfNotEqual {206}
	204 Call 0x1C17DFC
	205 Move X0, [X24]
	206 Move X8, [X0+184]
	207 Move X20, [X31+176]
	208 Move X19, [X31+184]
	209 Move X22, [X31+160]
	210 Move X21, [X31+168]
	211 Move X24, [X31+144]
	212 Move X23, [X31+152]
	213 Move X26, [X31+128]
	214 Move X25, [X31+136]
	215 Move X28, [X31+112]
	216 Move X27, [X31+120]
	217 Move X29, [X31+96]
	218 Move X30, [X31+104]
	219 Move [X8], W31
	220 Add X31, X31, 192
	221 Return 
	222 Move X23, X1
	223 Move X21, X0
	224 Move X22, X31
	225 Compare X20, 0
	226 JumpIfEqual {248}
	227 Move X8, [X20]
	228 Move X1, [X27]
	229 NotImplemented "Instruction LDRH not yet implemented."
	230 Compare X9, 0
	231 JumpIfEqual {238}
	232 Move X10, [X8+176]
	233 Add X10, X10, 8
	234 NotImplemented "Instruction LDUR not yet implemented."
	235 NotImplemented "Instruction CMP not yet implemented."
	236 Subtract X9, X9, 1
	237 Add X10, X10, 16
	238 Move X0, X20
	239 Move W2, W31
	240 Call 0x1C5D788
	241 NotImplemented "Instruction LDRSW not yet implemented."
	242 Add X8, X8, X9
	243 Add X0, X8, 312
	244 Move X8, [X0]
	245 Move X1, [X0+8]
	246 Move X0, X20
	247 NotImplemented "Instruction BLR not yet implemented."
	248 Compare X22, 0
	249 JumpIfEqual {262}
	250 Move X0, X22
	251 Call 0x1C17F18
	252 Move X0, X22
	253 Call 0x1C17F18
	254 Call 0x1C17F20
	255 Call 0x1C17F20
	256 Move X23, X1
	257 Move X21, X0
	258 Compare X20, 0
	259 JumpIfNotEqual {227}
	260 Move X23, X1
	261 Move X21, X0
	262 NotImplemented "Instruction CMP not yet implemented."
	263 Move X0, X21
	264 Call 0x3EB2AD0
	265 Move X20, [X0]
	266 Call 0x3EB2AE0
	267 Move X1, [X26]
	268 Add X0, X31, 48
	269 Call Enumerator<Int32, Object>.Dispose, X0
	270 Compare X20, 0
	271 JumpIfEqual {195}
	272 Move X0, X20
	273 Call 0x1C17F18
	274 Move X20, X31
	275 Move X21, X0
	276 Move X1, [X26]
	277 Add X0, X31, 48
	278 Call Enumerator<Int32, Object>.Dispose, X0
	279 Compare X20, 0
	280 JumpIfNotEqual {283}
	281 Move X0, X21
	282 Call 0x1D2D690
	283 Move X0, X20
	284 Call 0x1C17F18
	285 Call 0x1991590

Method: System.Boolean ShouldReleaseResource(System.Int32 lastUsedFrameIndex, System.Int32 currentFrameIndex)

Disassembly:
	0x03A75A98 ADRP X21, 0x6E1000
	0x03A75A9C LDRB W8, [X22 + 0x2D2]
	0x03A75AA0 LDR X21, [X21 + 0xE20]
	0x03A75AA4 MOV W19, W1
	0x03A75AA8 MOV X20, X0
	0x03A75AAC TBNZ X8, 0x0, 0x3A75AC4
	0x03A75AB0 ADRP X0, 0x6E1000
	0x03A75AB4 LDR X0, [X0 + 0xE20]
	0x03A75AB8 BL 0x1C16CF4
	0x03A75ABC MOVZ W8, 0x1
	0x03A75AC0 STRB W8, [X22 + 0x2D2]
	0x03A75AC4 LDR X3, [X21]
	0x03A75AC8 ADD X1, X20, 0x10
	0x03A75ACC MOV X0, X20
	0x03A75AD0 MOV W2, W19
	0x03A75AD4 LDP X20, X19, [X31 + 0x20]
	0x03A75AD8 LDP X22, X21, [X31 + 0x10]
	0x03A75ADC LDR X30, [X31], #0x30
	0x03A75AE0 B 0x2254AEC
	0x03A75AE4 STR X30, [X31 - 0x30]!
	0x03A75AE8 STP X22, X21, [X31 + 0x10]
	0x03A75AEC STP X20, X19, [X31 + 0x20]
	0x03A75AF0 ADRP X22, 0x96D000
	0x03A75AF4 ADRP X21, 0x6E1000
	0x03A75AF8 LDRB W8, [X22 + 0x2D3]
	0x03A75AFC LDR X21, [X21 + 0xE28]
	0x03A75B00 MOV W19, W1
	0x03A75B04 MOV X20, X0
	0x03A75B08 TBNZ X8, 0x0, 0x3A75B20

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x96E000
	007 Move X21, 0x6E2000
	008 Move W8, [X22+714]
	009 Move X21, [X21+2968]
	010 Move W19, W1
	011 Move W20, W0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x6E2000
	017 Move X0, [X0+2968]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+714], W8
	021 Move X0, [X21]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {27}
	025 Call 0x1C17DFC
	026 Move X0, [X21]
	027 Move X8, [X0+184]
	028 Move X22, [X31+16]
	029 Move X21, [X31+24]
	030 Move W8, [X8+4]
	031 Add W8, W8, W20
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move X20, [X31+32]
	034 Move X19, [X31+40]
	035 NotImplemented "Instruction CSET not yet implemented."
	036 Move X30, [X31+48]
	037 Return X0

Method: System.Void PurgeUnusedResources(System.Int32 currentFrameIndex)

Disassembly:
	0x03A75B0C ADRP X0, 0x6E1000
	0x03A75B10 LDR X0, [X0 + 0xE28]
	0x03A75B14 BL 0x1C16CF4
	0x03A75B18 MOVZ W8, 0x1
	0x03A75B1C STRB W8, [X22 + 0x2D3]
	0x03A75B20 LDR X3, [X21]
	0x03A75B24 ADD X1, X20, 0x18
	0x03A75B28 MOV X0, X20
	0x03A75B2C MOV W2, W19
	0x03A75B30 LDP X20, X19, [X31 + 0x20]
	0x03A75B34 LDP X22, X21, [X31 + 0x10]
	0x03A75B38 LDR X30, [X31], #0x30
	0x03A75B3C B 0x2254768
	0x03A75B40 STR X30, [X31 - 0x30]!
	0x03A75B44 STP X22, X21, [X31 + 0x10]
	0x03A75B48 STP X20, X19, [X31 + 0x20]
	0x03A75B4C ADRP X22, 0x96D000
	0x03A75B50 ADRP X21, 0x6E1000
	0x03A75B54 LDRB W8, [X22 + 0x2D4]
	0x03A75B58 LDR X21, [X21 + 0xE30]
	0x03A75B5C MOV W19, W1
	0x03A75B60 MOV X20, X0
	0x03A75B64 TBNZ X8, 0x0, 0x3A75B7C
	0x03A75B68 ADRP X0, 0x6E1000
	0x03A75B6C LDR X0, [X0 + 0xE30]
	0x03A75B70 BL 0x1C16CF4
	0x03A75B74 MOVZ W8, 0x1
	0x03A75B78 STRB W8, [X22 + 0x2D4]
	0x03A75B7C LDR X3, [X21]
	0x03A75B80 ADD X1, X20, 0x20
	0x03A75B84 MOV X0, X20
	0x03A75B88 MOV W2, W19
	0x03A75B8C LDP X20, X19, [X31 + 0x20]
	0x03A75B90 LDP X22, X21, [X31 + 0x10]
	0x03A75B94 LDR X30, [X31], #0x30
	0x03A75B98 B 0x2254928
	0x03A75B9C STR X30, [X31 - 0x30]!
	0x03A75BA0 STP X22, X21, [X31 + 0x10]
	0x03A75BA4 STP X20, X19, [X31 + 0x20]
	0x03A75BA8 ADRP X22, 0x96D000
	0x03A75BAC ADRP X21, 0x6E1000
	0x03A75BB0 LDRB W8, [X22 + 0x2D5]
	0x03A75BB4 LDR X21, [X21 + 0xE38]
	0x03A75BB8 MOV W19, W1
	0x03A75BBC MOV X20, X0
	0x03A75BC0 TBNZ X8, 0x0, 0x3A75BD8
	0x03A75BC4 ADRP X0, 0x6E1000
	0x03A75BC8 LDR X0, [X0 + 0xE38]
	0x03A75BCC BL 0x1C16CF4
	0x03A75BD0 MOVZ W8, 0x1
	0x03A75BD4 STRB W8, [X22 + 0x2D5]
	0x03A75BD8 LDR X3, [X21]
	0x03A75BDC ADD X1, X20, 0x28
	0x03A75BE0 MOV X0, X20
	0x03A75BE4 MOV W2, W19
	0x03A75BE8 LDP X20, X19, [X31 + 0x20]
	0x03A75BEC LDP X22, X21, [X31 + 0x10]
	0x03A75BF0 LDR X30, [X31], #0x30
	0x03A75BF4 B 0x2254848
	0x03A75BF8 SUB X31, X31, 0x40
	0x03A75BFC STP X30, X21, [X31 + 0x20]
	0x03A75C00 STP X20, X19, [X31 + 0x30]
	0x03A75C04 ADRP X21, 0x96D000
	0x03A75C08 ADRP X20, 0x6DF000
	0x03A75C0C LDRB W8, [X21 + 0x2D6]
	0x03A75C10 LDR X20, [X20 + 0xC48]
	0x03A75C14 MOV W19, W0
	0x03A75C18 TBNZ X8, 0x0, 0x3A75C84
	0x03A75C1C ADRP X0, 0x67E000
	0x03A75C20 LDR X0, [X0 + 0xA28]
	0x03A75C24 BL 0x1C16CF4
	0x03A75C28 ADRP X0, 0x6E1000
	0x03A75C2C LDR X0, [X0 + 0xE40]
	0x03A75C30 BL 0x1C16CF4
	0x03A75C34 ADRP X0, 0x6DF000
	0x03A75C38 LDR X0, [X0 + 0xC48]
	0x03A75C3C BL 0x1C16CF4
	0x03A75C40 ADRP X0, 0x67E000
	0x03A75C44 LDR X0, [X0 + 0xAC8]
	0x03A75C48 BL 0x1C16CF4
	0x03A75C4C ADRP X0, 0x682000
	0x03A75C50 LDR X0, [X0 + 0x928]
	0x03A75C54 BL 0x1C16CF4
	0x03A75C58 ADRP X0, 0x67F000
	0x03A75C5C LDR X0, [X0 + 0x608]
	0x03A75C60 BL 0x1C16CF4
	0x03A75C64 ADRP X0, 0x67E000
	0x03A75C68 LDR X0, [X0 + 0x988]
	0x03A75C6C BL 0x1C16CF4
	0x03A75C70 ADRP X0, 0x6E1000
	0x03A75C74 LDR X0, [X0 + 0xE48]
	0x03A75C78 BL 0x1C16CF4
	0x03A75C7C MOVZ W8, 0x1
	0x03A75C80 STRB W8, [X21 + 0x2D6]
	0x03A75C84 LDR X0, [X20]
	0x03A75C88 STR W19, [X31 + 0x1C]
	0x03A75C8C LDR W8, [X0 + 0xE0]
	0x03A75C90 CBNZ W8, 0x3A75C9C
	0x03A75C94 BL 0x1C16DFC
	0x03A75C98 LDR X0, [X20]
	0x03A75C9C LDR X8, [X0 + 0xB8]
	0x03A75CA0 LDR X8, [X8]
	0x03A75CA4 CBZ X8, 0x3A75E00
	0x03A75CA8 LDR W9, [X8 + 0x18]
	0x03A75CAC CMP W9, W19
	0x03A75CB0 B.LE 0x3A75CF4
	0x03A75CB4 CMP W9, 0x1
	0x03A75CB8 B.LT 0x3A75CF4
	0x03A75CBC TBNZ X19, 0x1F, 0x3A75CF4
	0x03A75CC0 LDR W9, [X0 + 0xE0]
	0x03A75CC4 CBNZ W9, 0x3A75CDC
	0x03A75CC8 BL 0x1C16DFC
	0x03A75CCC LDR X8, [X20]
	0x03A75CD0 LDR X8, [X8 + 0xB8]
	0x03A75CD4 LDR X8, [X8]
	0x03A75CD8 CBZ X8, 0x3A75E00
	0x03A75CDC LDR W9, [X8 + 0x18]
	0x03A75CE0 CMP W9, W19
	0x03A75CE4 B.LS 0x3A75DFC
	0x03A75CE8 ADD X8, X8, W19, 0x3, UXTW
	0x03A75CEC LDR X0, [X8 + 0x20]
	0x03A75CF0 B 0x3A75DEC
	0x03A75CF4 ADRP X8, 0x67E000
	0x03A75CF8 LDR X8, [X8 + 0xAC8]
	0x03A75CFC MOVZ W1, 0x5
	0x03A75D00 LDR X0, [X8]
	0x03A75D04 BL 0x1C16D6C
	0x03A75D08 CBZ X0, 0x3A75E00
	0x03A75D0C LDR W8, [X0 + 0x18]
	0x03A75D10 MOV X20, X0
	0x03A75D14 CBZ W8, 0x3A75DFC
	0x03A75D18 ADRP X8, 0x6E1000
	0x03A75D1C LDR X8, [X8 + 0xE48]
	0x03A75D20 ADRP X9, 0x6E1000
	0x03A75D24 ADD X0, X31, 0x0
	0x03A75D28 MOV X1, X31
	0x03A75D2C LDR X8, [X8]
	0x03A75D30 LDR X9, [X9 + 0xE40]
	0x03A75D34 STR X8, [X20 + 0x20]
	0x03A75D38 LDR X8, [X9]
	0x03A75D3C MOVN X9, 0x0
	0x03A75D40 STR W19, [X31 + 0x10]
	0x03A75D44 STP X8, X9, [X31]
	0x03A75D48 BL 0x33B162C
	0x03A75D4C LDR W8, [X20 + 0x18]
	0x03A75D50 CMP W8, 0x1
	0x03A75D54 B.LS 0x3A75DFC
	0x03A75D58 CMP W8, 0x2
	0x03A75D5C STR X0, [X20 + 0x28]
	0x03A75D60 B.EQ 0x3A75DFC
	0x03A75D64 ADRP X8, 0x682000
	0x03A75D68 LDR X8, [X8 + 0x928]
	0x03A75D6C ADD X0, X31, 0x1C
	0x03A75D70 MOV X1, X31
	0x03A75D74 LDR X8, [X8]
	0x03A75D78 STR X8, [X20 + 0x30]
	0x03A75D7C BL 0x337B6E0
	0x03A75D80 LDR W8, [X20 + 0x18]
	0x03A75D84 CMP W8, 0x3
	0x03A75D88 B.LS 0x3A75DFC
	0x03A75D8C CMP W8, 0x4
	0x03A75D90 STR X0, [X20 + 0x38]
	0x03A75D94 B.EQ 0x3A75DFC
	0x03A75D98 ADRP X8, 0x67F000
	0x03A75D9C LDR X8, [X8 + 0x608]
	0x03A75DA0 MOV X0, X20
	0x03A75DA4 MOV X1, X31
	0x03A75DA8 LDR X8, [X8]
	0x03A75DAC STR X8, [X20 + 0x40]
	0x03A75DB0 BL 0x32278CC
	0x03A75DB4 ADRP X8, 0x67E000
	0x03A75DB8 LDR X8, [X8 + 0xA28]
	0x03A75DBC MOV X19, X0
	0x03A75DC0 LDR X8, [X8]
	0x03A75DC4 LDR W9, [X8 + 0xE0]
	0x03A75DC8 CBNZ W9, 0x3A75DD4
	0x03A75DCC MOV X0, X8
	0x03A75DD0 BL 0x1C16DFC
	0x03A75DD4 MOV X0, X19
	0x03A75DD8 MOV X1, X31
	0x03A75DDC BL 0x3C0649C
	0x03A75DE0 ADRP X8, 0x67E000
	0x03A75DE4 LDR X8, [X8 + 0x988]
	0x03A75DE8 LDR X0, [X8]
	0x03A75DEC LDP X20, X19, [X31 + 0x30]
	0x03A75DF0 LDP X30, X21, [X31 + 0x20]
	0x03A75DF4 ADD X31, X31, 0x40
	0x03A75DF8 RET
	0x03A75DFC BL 0x1C16F28
	0x03A75E00 BL 0x1C16F20
	0x03A75E04 STR X30, [X31 - 0x40]!
	0x03A75E08 STP X24, X23, [X31 + 0x10]
	0x03A75E0C STP X22, X21, [X31 + 0x20]
	0x03A75E10 STP X20, X19, [X31 + 0x30]
	0x03A75E14 ADRP X20, 0x96D000
	0x03A75E18 ADRP X21, 0x6E1000
	0x03A75E1C LDRB W8, [X20 + 0x2D7]
	0x03A75E20 LDR X21, [X21 + 0xE50]
	0x03A75E24 MOV X19, X0
	0x03A75E28 TBNZ X8, 0x0, 0x3A75E70
	0x03A75E2C ADRP X0, 0x6E1000
	0x03A75E30 LDR X0, [X0 + 0xE58]
	0x03A75E34 BL 0x1C16CF4
	0x03A75E38 ADRP X0, 0x6B2000
	0x03A75E3C LDR X0, [X0 + 0xAE0]
	0x03A75E40 BL 0x1C16CF4
	0x03A75E44 ADRP X0, 0x6DF000
	0x03A75E48 LDR X0, [X0 + 0xC48]
	0x03A75E4C BL 0x1C16CF4
	0x03A75E50 ADRP X0, 0x6E1000
	0x03A75E54 LDR X0, [X0 + 0xE60]
	0x03A75E58 BL 0x1C16CF4
	0x03A75E5C ADRP X0, 0x6E1000
	0x03A75E60 LDR X0, [X0 + 0xE50]
	0x03A75E64 BL 0x1C16CF4
	0x03A75E68 MOVZ W8, 0x1
	0x03A75E6C STRB W8, [X20 + 0x2D7]
	0x03A75E70 LDR X0, [X21]
	0x03A75E74 BL 0x1C16F10
	0x03A75E78 MOV X1, X31
	0x03A75E7C MOV X20, X0
	0x03A75E80 BL 0x33BDD8C
	0x03A75E84 CBZ X20, 0x3A75F04
	0x03A75E88 ADRP X24, 0x6DF000
	0x03A75E8C LDR X24, [X24 + 0xC48]
	0x03A75E90 STR X19, [X20 + 0x10]
	0x03A75E94 ADRP X23, 0x6B2000
	0x03A75E98 ADRP X21, 0x6E1000
	0x03A75E9C LDR X0, [X24]
	0x03A75EA0 ADRP X22, 0x6E1000
	0x03A75EA4 LDR W8, [X0 + 0xE0]
	0x03A75EA8 LDR X23, [X23 + 0xAE0]
	0x03A75EAC LDR X21, [X21 + 0xE60]
	0x03A75EB0 LDR X22, [X22 + 0xE58]
	0x03A75EB4 CBNZ W8, 0x3A75EC0
	0x03A75EB8 BL 0x1C16DFC
	0x03A75EBC LDR X0, [X24]
	0x03A75EC0 LDR X8, [X0 + 0xB8]
	0x03A75EC4 LDR X0, [X23]
	0x03A75EC8 LDR X19, [X8]
	0x03A75ECC BL 0x1C16F10
	0x03A75ED0 LDR X2, [X21]
	0x03A75ED4 MOV X1, X20
	0x03A75ED8 MOV X3, X31
	0x03A75EDC MOV X21, X0
	0x03A75EE0 BL 0x24AD1FC
	0x03A75EE4 LDR X2, [X22]
	0x03A75EE8 MOV X0, X19
	0x03A75EEC MOV X1, X21
	0x03A75EF0 LDP X20, X19, [X31 + 0x30]
	0x03A75EF4 LDP X22, X21, [X31 + 0x20]
	0x03A75EF8 LDP X24, X23, [X31 + 0x10]
	0x03A75EFC LDR X30, [X31], #0x40
	0x03A75F00 B 0x22E6638
	0x03A75F04 BL 0x1C16F20
	0x03A75F08 MOV X1, X31
	0x03A75F0C B 0x33BDD8C
	0x03A75F10 STP X30, X21, [X31 - 0x20]!
	0x03A75F14 STP X20, X19, [X31 + 0x10]
	0x03A75F18 ADRP X21, 0x96D000
	0x03A75F1C ADRP X20, 0x6DF000
	0x03A75F20 LDRB W8, [X21 + 0x2D8]
	0x03A75F24 LDR X20, [X20 + 0xC48]
	0x03A75F28 MOV X19, X0
	0x03A75F2C TBNZ X8, 0x0, 0x3A75F50
	0x03A75F30 ADRP X0, 0x67F000
	0x03A75F34 LDR X0, [X0 + 0xC50]
	0x03A75F38 BL 0x1C16CF4
	0x03A75F3C ADRP X0, 0x6DF000
	0x03A75F40 LDR X0, [X0 + 0xC48]
	0x03A75F44 BL 0x1C16CF4
	0x03A75F48 MOVZ W8, 0x1
	0x03A75F4C STRB W8, [X21 + 0x2D8]
	0x03A75F50 LDR X0, [X20]
	0x03A75F54 LDR W8, [X0 + 0xE0]
	0x03A75F58 CBNZ W8, 0x3A75F60
	0x03A75F5C BL 0x1C16DFC
	0x03A75F60 CBZ X19, 0x3A75F9C
	0x03A75F64 LDR X8, [X20]
	0x03A75F68 ADRP X21, 0x67F000
	0x03A75F6C MOV X0, X19
	0x03A75F70 MOV X1, X31
	0x03A75F74 LDR X8, [X8 + 0xB8]
	0x03A75F78 LDR X20, [X8]
	0x03A75F7C LDR X21, [X21 + 0xC50]
	0x03A75F80 BL 0x3C389D4
	0x03A75F84 LDR X2, [X21]
	0x03A75F88 MOV X1, X0
	0x03A75F8C MOV X0, X20
	0x03A75F90 LDP X20, X19, [X31 + 0x10]
	0x03A75F94 LDP X30, X21, [X31], #0x20
	0x03A75F98 B 0x21BA5B0
	0x03A75F9C BL 0x1C16F20
	0x03A75FA0 STR X30, [X31 - 0x20]!
	0x03A75FA4 STP X20, X19, [X31 + 0x10]
	0x03A75FA8 ADRP X19, 0x96D000
	0x03A75FAC ADRP X20, 0x67E000
	0x03A75FB0 LDRB W8, [X19 + 0x2D9]
	0x03A75FB4 LDR X20, [X20 + 0xAC8]
	0x03A75FB8 TBNZ X8, 0x0, 0x3A76060
	0x03A75FBC ADRP X0, 0x6DF000
	0x03A75FC0 LDR X0, [X0 + 0xC48]
	0x03A75FC4 BL 0x1C16CF4
	0x03A75FC8 ADRP X0, 0x67E000
	0x03A75FCC LDR X0, [X0 + 0xAC8]
	0x03A75FD0 BL 0x1C16CF4
	0x03A75FD4 ADRP X0, 0x6E1000
	0x03A75FD8 LDR X0, [X0 + 0xE68]
	0x03A75FDC BL 0x1C16CF4
	0x03A75FE0 ADRP X0, 0x6E1000
	0x03A75FE4 LDR X0, [X0 + 0xE70]
	0x03A75FE8 BL 0x1C16CF4
	0x03A75FEC ADRP X0, 0x685000
	0x03A75FF0 LDR X0, [X0 + 0x718]
	0x03A75FF4 BL 0x1C16CF4
	0x03A75FF8 ADRP X0, 0x6E1000
	0x03A75FFC LDR X0, [X0 + 0xE78]
	0x03A76000 BL 0x1C16CF4
	0x03A76004 ADRP X0, 0x6E0000
	0x03A76008 LDR X0, [X0 + 0xE80]
	0x03A7600C BL 0x1C16CF4
	0x03A76010 ADRP X0, 0x6E0000
	0x03A76014 LDR X0, [X0 + 0xE88]
	0x03A76018 BL 0x1C16CF4
	0x03A7601C ADRP X0, 0x6E0000
	0x03A76020 LDR X0, [X0 + 0xE90]
	0x03A76024 BL 0x1C16CF4
	0x03A76028 ADRP X0, 0x6E0000
	0x03A7602C LDR X0, [X0 + 0xE98]
	0x03A76030 BL 0x1C16CF4
	0x03A76034 ADRP X0, 0x6E0000
	0x03A76038 LDR X0, [X0 + 0xEA0]
	0x03A7603C BL 0x1C16CF4
	0x03A76040 ADRP X0, 0x6E0000
	0x03A76044 LDR X0, [X0 + 0xEA8]
	0x03A76048 BL 0x1C16CF4
	0x03A7604C ADRP X0, 0x6E0000
	0x03A76050 LDR X0, [X0 + 0xEB0]
	0x03A76054 BL 0x1C16CF4
	0x03A76058 MOVZ W8, 0x1
	0x03A7605C STRB W8, [X19 + 0x2D9]
	0x03A76060 LDR X0, [X20]
	0x03A76064 MOVZ W1, 0xB

ISIL:
	001 Subtract X31, X31, 224
	002 Move [X31+128], X29
	003 Move [X31+136], X30
	004 Move [X31+144], X28
	005 Move [X31+152], X27
	006 Move [X31+160], X26
	007 Move [X31+168], X25
	008 Move [X31+176], X24
	009 Move [X31+184], X23
	010 Move [X31+192], X22
	011 Move [X31+200], X21
	012 Move [X31+208], X20
	013 Move [X31+216], X19
	014 Move X20, 0x96E000
	015 Move W8, [X20+715]
	016 Move W19, W1
	017 Move X27, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {78}
	022 Move X0, 0x6DD000
	023 Move X0, [X0+96]
	024 Call 0x1C17CF4
	025 Move X0, 0x6DD000
	026 Move X0, [X0+104]
	027 Call 0x1C17CF4
	028 Move X0, 0x6AA000
	029 Move X0, [X0+2840]
	030 Call 0x1C17CF4
	031 Move X0, 0x6AA000
	032 Move X0, [X0+2856]
	033 Call 0x1C17CF4
	034 Move X0, 0x6DD000
	035 Move X0, [X0+112]
	036 Call 0x1C17CF4
	037 Move X0, 0x6DD000
	038 Move X0, [X0+120]
	039 Call 0x1C17CF4
	040 Move X0, 0x6AA000
	041 Move X0, [X0+2872]
	042 Call 0x1C17CF4
	043 Move X0, 0x6DD000
	044 Move X0, [X0+128]
	045 Call 0x1C17CF4
	046 Move X0, 0x6A7000
	047 Move X0, [X0+1960]
	048 Call 0x1C17CF4
	049 Move X0, 0x6DD000
	050 Move X0, [X0+136]
	051 Call 0x1C17CF4
	052 Move X0, 0x680000
	053 Move X0, [X0+3600]
	054 Call 0x1C17CF4
	055 Move X0, 0x686000
	056 Move X0, [X0+2136]
	057 Call 0x1C17CF4
	058 Move X0, 0x6AA000
	059 Move X0, [X0+2896]
	060 Call 0x1C17CF4
	061 Move X0, 0x6E2000
	062 Move X0, [X0+2968]
	063 Call 0x1C17CF4
	064 Move X0, 0x6DD000
	065 Move X0, [X0+152]
	066 Call 0x1C17CF4
	067 Move X0, 0x6DD000
	068 Move X0, [X0+160]
	069 Call 0x1C17CF4
	070 Move X0, 0x6DD000
	071 Move X0, [X0+168]
	072 Call 0x1C17CF4
	073 Move X0, 0x6DD000
	074 Move X0, [X0+176]
	075 Call 0x1C17CF4
	076 Move W8, 1
	077 Move [X20+715], W8
	078 NotImplemented "Instruction MOVI not yet implemented."
	079 Move [X31+112], X31
	080 Move [X31+48], X31
	081 Move [X31+56], X31
	082 Move [X31+80], V0
	083 Move [X31+88], V0
	084 Move [X31+64], X31
	085 Move X8, [X27+24]
	086 Compare X8, 0
	087 JumpIfEqual {324}
	088 Move W9, [X8+28]
	089 Add W9, W9, 1
	090 Move [X8+24], W31
	091 Move [X8+28], W9
	092 Move X0, [X27+16]
	093 Compare X0, 0
	094 JumpIfEqual {324}
	095 Move X8, 0x6DD000
	096 Move X8, [X8+96]
	097 Move X28, 0x6E2000
	098 Move X29, 0x6AA000
	099 Move X28, [X28+2968]
	100 Move X29, [X29+2856]
	101 Move X1, [X8]
	102 Move X20, 0x6DD000
	103 Move X20, [X20+152]
	104 Add X8, X31, 8
	105 Call Dictionary`2<Int32, Object>.GetEnumerator, X0
	106 NotImplemented "Instruction LDUR not yet implemented."
	107 NotImplemented "Instruction LDUR not yet implemented."
	108 Move X8, [X31+40]
	109 Move [X31+80], V0
	110 Move [X31+88], V1
	111 Move [X31+112], X8
	112 Move X8, 0x6DD000
	113 Move X8, [X8+112]
	114 Move X1, [X8]
	115 Add X0, X31, 80
	116 Call Enumerator<Int32, Object>.MoveNext, X0
	117 Move TEMP, X0
	118 And TEMP, TEMP, 1
	119 Compare TEMP, 1
	120 JumpIfNotEqual {286}
	121 Move X21, [X31+104]
	122 Compare X21, 0
	123 JumpIfEqual {320}
	124 Move X8, 0x6DD000
	125 Move X8, [X8+168]
	126 Move X1, [X8]
	127 Move X0, X21
	128 Call 0x25EE504, X0
	129 Move X8, 0x6DD000
	130 Move X8, [X8+176]
	131 Move X22, X0
	132 Move X1, [X8]
	133 Move X0, X21
	134 Call 0x25EE534, X0
	135 Move W8, [X21+32]
	136 NotImplemented "Instruction CMP not yet implemented."
	137 Move X23, X0
	138 Move W24, W31
	139 Compare X23, 0
	140 JumpIfEqual {305}
	141 Move X8, [X23]
	142 Move X10, 0x6DD000
	143 NotImplemented "Instruction LDRH not yet implemented."
	144 Move X10, [X10+128]
	145 Move X1, [X10]
	146 Compare X9, 0
	147 JumpIfEqual {154}
	148 Move X10, [X8+176]
	149 Add X10, X10, 8
	150 NotImplemented "Instruction LDUR not yet implemented."
	151 NotImplemented "Instruction CMP not yet implemented."
	152 Subtract X9, X9, 1
	153 Add X10, X10, 16
	154 Move X0, X23
	155 Move W2, W31
	156 Call 0x1C5D788
	157 NotImplemented "Instruction LDRSW not yet implemented."
	158 Add X8, X8, X9
	159 Add X0, X8, 312
	160 Move X8, [X0]
	161 Move X2, [X0+8]
	162 Move X0, X23
	163 Move W1, W24
	164 NotImplemented "Instruction BLR not yet implemented."
	165 Move X25, X0
	166 Move X0, [X28]
	167 Move X26, X1
	168 Move W8, [X0+224]
	169 Compare W8, 0
	170 JumpIfNotEqual {172}
	171 Call 0x1C17DFC
	172 Move W0, W26
	173 Move W1, W19
	174 Call RTHandleResourcePool.ShouldReleaseResource, X0, X1
	175 Move TEMP, X0
	176 And TEMP, TEMP, 1
	177 Compare TEMP, 1
	178 JumpIfNotEqual {245}
	179 Compare X25, 0
	180 JumpIfEqual {307}
	181 Move X0, X25
	182 Move X1, X31
	183 Call RTHandle.Release, X0
	184 Compare X22, 0
	185 JumpIfEqual {308}
	186 Move X8, [X22]
	187 Move X10, 0x6A7000
	188 Move X25, [X27+24]
	189 NotImplemented "Instruction LDRH not yet implemented."
	190 Move X10, [X10+1960]
	191 Move X1, [X10]
	192 Compare X9, 0
	193 JumpIfEqual {200}
	194 Move X10, [X8+176]
	195 Add X10, X10, 8
	196 NotImplemented "Instruction LDUR not yet implemented."
	197 NotImplemented "Instruction CMP not yet implemented."
	198 Subtract X9, X9, 1
	199 Add X10, X10, 16
	200 Move X0, X22
	201 Move W2, W31
	202 Call 0x1C5D788
	203 NotImplemented "Instruction LDRSW not yet implemented."
	204 Add X8, X8, X9
	205 Add X0, X8, 312
	206 Move X8, [X0]
	207 Move X2, [X0+8]
	208 Move X0, X22
	209 Move W1, W24
	210 NotImplemented "Instruction BLR not yet implemented."
	211 Move W1, W0
	212 Compare X25, 0
	213 JumpIfEqual {309}
	214 Move X9, 0x680000
	215 Move W10, [X25+28]
	216 Move X8, [X25+16]
	217 Move X9, [X9+3600]
	218 Add W10, W10, 1
	219 Move X9, [X9]
	220 Move [X25+28], W10
	221 Compare X8, 0
	222 JumpIfEqual {306}
	223 NotImplemented "Instruction LDRSW not yet implemented."
	224 Move W11, [X8+24]
	225 NotImplemented "Instruction CMP not yet implemented."
	226 Add W9, W10, 1
	227 Add X8, X8, X10
	228 Move [X25+24], W9
	229 Move [X8+32], W1
	230 Move X8, [X9+32]
	231 Move X8, [X8+192]
	232 Move X2, [X8+112]
	233 Move X0, X25
	234 Call List`1<Int32>.AddWithResize, X0, X1
	235 Move X0, [X28]
	236 Move W8, [X0+224]
	237 Compare W8, 0
	238 JumpIfNotEqual {241}
	239 Call 0x1C17DFC
	240 Move X0, [X28]
	241 Move X8, [X0+184]
	242 Move W9, [X8]
	243 Subtract W9, W9, 1
	244 Move [X8], W9
	245 Move W8, [X21+32]
	246 Add W24, W24, 1
	247 NotImplemented "Instruction CMP not yet implemented."
	248 Move X0, [X27+24]
	249 Compare X0, 0
	250 JumpIfEqual {321}
	251 Move X8, 0x6AA000
	252 Move X8, [X8+2896]
	253 Move X1, [X8]
	254 Add X8, X31, 8
	255 Call List`1<Int32>.GetEnumerator, X0
	256 NotImplemented "Instruction LDUR not yet implemented."
	257 Move X8, [X31+24]
	258 Move [X31+3], V0
	259 Move [X31+64], X8
	260 Move X1, [X29]
	261 Add X0, X31, 48
	262 Call Enumerator<Int32>.MoveNext, X0
	263 Move TEMP, X0
	264 And TEMP, TEMP, 1
	265 Compare TEMP, 1
	266 JumpIfNotEqual {271}
	267 Move W1, [X31+64]
	268 Move X2, [X20]
	269 Move X0, X21
	270 Call 0x25EFA7C, X0, X1
	271 Move X23, X31
	272 Move X8, 0x6AA000
	273 Move X8, [X8+2840]
	274 Move X1, [X8]
	275 Add X0, X31, 48
	276 Call Enumerator<Int32>.Dispose, X0
	277 Compare X23, 0
	278 JumpIfEqual {112}
	279 Move X22, X1
	280 Move X21, X0
	281 NotImplemented "Instruction CMP not yet implemented."
	282 Move X0, X21
	283 Call 0x3EB2AD0
	284 Move X23, [X0]
	285 Call 0x3EB2AE0
	286 Move X8, 0x6DD000
	287 Move X8, [X8+104]
	288 Add X0, X31, 80
	289 Move X1, [X8]
	290 Call Enumerator<Int32, Object>.Dispose, X0
	291 Move X20, [X31+208]
	292 Move X19, [X31+216]
	293 Move X22, [X31+192]
	294 Move X21, [X31+200]
	295 Move X24, [X31+176]
	296 Move X23, [X31+184]
	297 Move X26, [X31+160]
	298 Move X25, [X31+168]
	299 Move X28, [X31+144]
	300 Move X27, [X31+152]
	301 Move X29, [X31+128]
	302 Move X30, [X31+136]
	303 Add X31, X31, 224
	304 Return 
	305 Call 0x1C17F20
	306 Call 0x1C17F20
	307 Call 0x1C17F20
	308 Call 0x1C17F20
	309 Call 0x1C17F20
	310 Move X23, X31
	311 Move X8, 0x6AA000
	312 Move X8, [X8+2840]
	313 Move X1, [X8]
	314 Add X0, X31, 48
	315 Call Enumerator<Int32>.Dispose, X0
	316 Compare X23, 0
	317 JumpIfEqual {329}
	318 Move X0, X23
	319 Call 0x1C17F18
	320 Call 0x1C17F20
	321 Call 0x1C17F20
	322 Move X0, X23
	323 Call 0x1C17F18
	324 Call 0x1C17F20
	325 Move X22, X1
	326 Move X21, X0
	327 Move X22, X1
	328 Move X21, X0
	329 NotImplemented "Instruction CMP not yet implemented."
	330 Move X0, X21
	331 Call 0x3EB2AD0
	332 Move X19, [X0]
	333 Call 0x3EB2AE0
	334 Move X8, 0x6DC000
	335 Move X8, [X8+104]
	336 Add X0, X31, 80
	337 Move X1, [X8]
	338 Call Enumerator<Int32, Object>.Dispose, X0
	339 Compare X19, 0
	340 JumpIfEqual {291}
	341 Move X0, X19
	342 Call 0x1C17F18
	343 Move X19, X31
	344 Move X21, X0
	345 Move X8, 0x6DC000
	346 Move X8, [X8+104]
	347 Move X1, [X8]
	348 Add X0, X31, 80
	349 Call Enumerator<Int32, Object>.Dispose, X0
	350 Compare X19, 0
	351 JumpIfNotEqual {354}
	352 Move X0, X21
	353 Call 0x1D2D690
	354 Move X0, X19
	355 Call 0x1C17F18
	356 Call 0x1991590

Method: System.Void LogDebugInfo()

Disassembly:
	0x03A76068 BL 0x1C16D6C
	0x03A7606C CBZ X0, 0x3A7619C
	0x03A76070 LDR W8, [X0 + 0x18]
	0x03A76074 CBZ W8, 0x3A76198
	0x03A76078 ADRP X9, 0x6E0000
	0x03A7607C LDR X9, [X9 + 0xE98]
	0x03A76080 CMP W8, 0x1
	0x03A76084 LDR X9, [X9]
	0x03A76088 STR X9, [X0 + 0x20]
	0x03A7608C B.EQ 0x3A76198
	0x03A76090 ADRP X9, 0x6E0000
	0x03A76094 LDR X9, [X9 + 0xE70]
	0x03A76098 CMP W8, 0x2
	0x03A7609C LDR X9, [X9]
	0x03A760A0 STR X9, [X0 + 0x28]
	0x03A760A4 B.LS 0x3A76198
	0x03A760A8 ADRP X9, 0x684000
	0x03A760AC LDR X9, [X9 + 0x718]
	0x03A760B0 CMP W8, 0x3
	0x03A760B4 LDR X9, [X9]
	0x03A760B8 STR X9, [X0 + 0x30]
	0x03A760BC B.EQ 0x3A76198
	0x03A760C0 ADRP X9, 0x6E0000
	0x03A760C4 LDR X9, [X9 + 0xE90]
	0x03A760C8 CMP W8, 0x4
	0x03A760CC LDR X9, [X9]
	0x03A760D0 STR X9, [X0 + 0x38]
	0x03A760D4 B.LS 0x3A76198
	0x03A760D8 ADRP X9, 0x6E0000
	0x03A760DC LDR X9, [X9 + 0xEB0]
	0x03A760E0 CMP W8, 0x5
	0x03A760E4 LDR X9, [X9]
	0x03A760E8 STR X9, [X0 + 0x40]
	0x03A760EC B.EQ 0x3A76198
	0x03A760F0 ADRP X9, 0x6E0000
	0x03A760F4 LDR X9, [X9 + 0xEA0]
	0x03A760F8 CMP W8, 0x6
	0x03A760FC LDR X9, [X9]
	0x03A76100 STR X9, [X0 + 0x48]
	0x03A76104 B.LS 0x3A76198
	0x03A76108 ADRP X9, 0x6E0000
	0x03A7610C LDR X9, [X9 + 0xE78]
	0x03A76110 CMP W8, 0x7
	0x03A76114 LDR X9, [X9]
	0x03A76118 STR X9, [X0 + 0x50]
	0x03A7611C B.EQ 0x3A76198
	0x03A76120 ADRP X9, 0x6E0000
	0x03A76124 LDR X9, [X9 + 0xE68]
	0x03A76128 CMP W8, 0x8
	0x03A7612C LDR X9, [X9]
	0x03A76130 STR X9, [X0 + 0x58]
	0x03A76134 B.LS 0x3A76198
	0x03A76138 ADRP X9, 0x6E0000
	0x03A7613C LDR X9, [X9 + 0xE88]
	0x03A76140 CMP W8, 0x9
	0x03A76144 LDR X9, [X9]
	0x03A76148 STR X9, [X0 + 0x60]
	0x03A7614C B.EQ 0x3A76198
	0x03A76150 ADRP X9, 0x6E0000
	0x03A76154 LDR X9, [X9 + 0xEA8]
	0x03A76158 CMP W8, 0xA
	0x03A7615C LDR X9, [X9]
	0x03A76160 STR X9, [X0 + 0x68]
	0x03A76164 B.LS 0x3A76198
	0x03A76168 ADRP X8, 0x6E0000
	0x03A7616C LDR X8, [X8 + 0xE80]
	0x03A76170 ADRP X9, 0x6DE000
	0x03A76174 LDR X8, [X8]
	0x03A76178 LDR X9, [X9 + 0xC48]
	0x03A7617C LDP X20, X19, [X31 + 0x10]
	0x03A76180 STR X8, [X0 + 0x70]
	0x03A76184 LDR X8, [X9]
	0x03A76188 LDR X8, [X8 + 0xB8]
	0x03A7618C STR X0, [X8]
	0x03A76190 LDR X30, [X31], #0x20
	0x03A76194 RET
	0x03A76198 BL 0x1C16F28
	0x03A7619C BL 0x1C16F20
	0x03A761A0 LDR X8, [X0 + 0x10]
	0x03A761A4 MOV X0, X1
	0x03A761A8 MOV X2, X31
	0x03A761AC MOV X1, X8
	0x03A761B0 B 0x321BA08
	0x03A761B4 STR X30, [X31 - 0x20]!
	0x03A761B8 STP X20, X19, [X31 + 0x10]
	0x03A761BC ADRP X20, 0x962000
	0x03A761C0 LDRB W8, [X20 + 0xAC0]
	0x03A761C4 MOV X19, X0
	0x03A761C8 CBNZ W8, 0x3A761E0
	0x03A761CC ADRP X0, 0x681000
	0x03A761D0 LDR X0, [X0 + 0x270]
	0x03A761D4 BL 0x1C16CF4
	0x03A761D8 MOVZ W8, 0x1
	0x03A761DC STRB W8, [X20 + 0xAC0]
	0x03A761E0 ADRP X8, 0x681000
	0x03A761E4 LDR X8, [X8 + 0x270]
	0x03A761E8 LDR X9, [X8]
	0x03A761EC LDR X9, [X9 + 0xB8]
	0x03A761F0 LDP V1, V0, [X9 + 0x60]
	0x03A761F4 LDP V3, V2, [X9 + 0x40]
	0x03A761F8 STP V1, V0, [X19 + 0x20]
	0x03A761FC STP V3, V2, [X19]
	0x03A76200 LDR X8, [X8]
	0x03A76204 LDR X9, [X8 + 0xB8]
	0x03A76208 LDP V1, V0, [X9 + 0x60]
	0x03A7620C LDP V3, V2, [X9 + 0x40]
	0x03A76210 MOVZ W9, 0x400
	0x03A76214 STP V1, V0, [X19 + 0x60]
	0x03A76218 STP V3, V2, [X19 + 0x40]
	0x03A7621C LDR X8, [X8 + 0xB8]
	0x03A76220 LDP V0, V1, [X8 + 0x60]
	0x03A76224 LDP V2, V3, [X8 + 0x40]
	0x03A76228 STR X31, [X19 + 0xC0]
	0x03A7622C STR W9, [X19 + 0xC8]
	0x03A76230 STP V0, V1, [X19 + 0xA0]
	0x03A76234 STP V2, V3, [X19 + 0x80]
	0x03A76238 LDP X20, X19, [X31 + 0x10]
	0x03A7623C LDR X30, [X31], #0x20
	0x03A76240 RET
	0x03A76244 STP X30, X23, [X31 - 0x30]!
	0x03A76248 STP X22, X21, [X31 + 0x10]
	0x03A7624C STP X20, X19, [X31 + 0x20]
	0x03A76250 ADRP X22, 0x96C000
	0x03A76254 ADRP X23, 0x6E0000
	0x03A76258 ADRP X19, 0x6E0000
	0x03A7625C ADRP X21, 0x6E0000
	0x03A76260 ADRP X20, 0x6DE000
	0x03A76264 LDRB W8, [X22 + 0x2DA]
	0x03A76268 LDR X23, [X23 + 0xEB8]
	0x03A7626C LDR X19, [X19 + 0xEC0]
	0x03A76270 LDR X21, [X21 + 0xEC8]
	0x03A76274 LDR X20, [X20 + 0x820]
	0x03A76278 TBNZ X8, 0x0, 0x3A762C0
	0x03A7627C ADRP X0, 0x681000
	0x03A76280 LDR X0, [X0 + 0x2C8]
	0x03A76284 BL 0x1C16CF4
	0x03A76288 ADRP X0, 0x6E0000
	0x03A7628C LDR X0, [X0 + 0xEC0]
	0x03A76290 BL 0x1C16CF4
	0x03A76294 ADRP X0, 0x6E0000
	0x03A76298 LDR X0, [X0 + 0xEB8]
	0x03A7629C BL 0x1C16CF4
	0x03A762A0 ADRP X0, 0x6DE000
	0x03A762A4 LDR X0, [X0 + 0x820]
	0x03A762A8 BL 0x1C16CF4
	0x03A762AC ADRP X0, 0x6E0000
	0x03A762B0 LDR X0, [X0 + 0xEC8]
	0x03A762B4 BL 0x1C16CF4
	0x03A762B8 MOVZ W8, 0x1
	0x03A762BC STRB W8, [X22 + 0x2DA]
	0x03A762C0 LDR X0, [X23]
	0x03A762C4 MOV X1, X31
	0x03A762C8 BL 0x3C124EC
	0x03A762CC LDR X8, [X19]
	0x03A762D0 MOV X1, X31
	0x03A762D4 LDR X8, [X8 + 0xB8]
	0x03A762D8 STR W0, [X8 + 0x4]
	0x03A762DC LDR X0, [X21]
	0x03A762E0 BL 0x3C124EC
	0x03A762E4 LDR X8, [X19]
	0x03A762E8 MOV X1, X31
	0x03A762EC LDR X8, [X8 + 0xB8]
	0x03A762F0 STR W0, [X8 + 0x8]
	0x03A762F4 LDR X0, [X20]
	0x03A762F8 BL 0x3C124EC
	0x03A762FC LDR X8, [X19]
	0x03A76300 LDR X8, [X8 + 0xB8]
	0x03A76304 STR W0, [X8 + 0xC]
	0x03A76308 MOV X0, X31
	0x03A7630C BL 0x3C3BACC
	0x03A76310 CMP W0, 0x10
	0x03A76314 B.NE 0x3A76348
	0x03A76318 ADRP X8, 0x681000
	0x03A7631C LDR X8, [X8 + 0x2C8]
	0x03A76320 LDR X0, [X8]
	0x03A76324 LDR W8, [X0 + 0xE0]
	0x03A76328 CBNZ W8, 0x3A76330
	0x03A7632C BL 0x1C16DFC
	0x03A76330 MOV X0, X31
	0x03A76334 BL 0x3C0E24C
	0x03A76338 MOVZ W1, 0x6
	0x03A7633C MOV X2, X31
	0x03A76340 BL 0x3C4BA44
	0x03A76344 B 0x3A7634C
	0x03A76348 MOV W0, W31
	0x03A7634C LDR X8, [X19]
	0x03A76350 LDP X20, X19, [X31 + 0x20]
	0x03A76354 LDP X22, X21, [X31 + 0x10]
	0x03A76358 AND W9, W0, 0x1
	0x03A7635C LDR X8, [X8 + 0xB8]
	0x03A76360 STRB W9, [X8]
	0x03A76364 LDP X30, X23, [X31], #0x30
	0x03A76368 RET
	0x03A7636C SUB X31, X31, 0x80
	0x03A76370 STR D8, [X31 + 0x10]
	0x03A76374 STP X29, X30, [X31 + 0x20]
	0x03A76378 STP X28, X27, [X31 + 0x30]
	0x03A7637C STP X26, X25, [X31 + 0x40]
	0x03A76380 STP X24, X23, [X31 + 0x50]
	0x03A76384 STP X22, X21, [X31 + 0x60]
	0x03A76388 STP X20, X19, [X31 + 0x70]
	0x03A7638C ADRP X8, 0x96C000
	0x03A76390 ADRP X10, 0x6E0000
	0x03A76394 LDP X29, X27, [X31 + 0x88]
	0x03A76398 LDRB W8, [X8 + 0x2DB]
	0x03A7639C LDR X28, [X31 + 0x80]
	0x03A763A0 LDR X10, [X10 + 0xEC0]
	0x03A763A4 MOV V8.16B, V0.16B
	0x03A763A8 MOV W20, W6
	0x03A763AC MOV X25, X1
	0x03A763B0 MOV X26, X0
	0x03A763B4 TBNZ X8, 0x0, 0x3A76410
	0x03A763B8 ADRP X0, 0x6E0000
	0x03A763BC LDR X0, [X0 + 0xEC0]
	0x03A763C0 MOV W21, W20
	0x03A763C4 MOV X20, X7
	0x03A763C8 MOV W22, W5
	0x03A763CC MOV W23, W4
	0x03A763D0 MOV W24, W3
	0x03A763D4 MOV X19, X25
	0x03A763D8 MOV W25, W2
	0x03A763DC BL 0x1C16CF4
	0x03A763E0 ADRP X10, 0x6E0000
	0x03A763E4 LDR X10, [X10 + 0xEC0]
	0x03A763E8 MOV W2, W25
	0x03A763EC MOV X25, X19
	0x03A763F0 MOV W3, W24
	0x03A763F4 MOV W4, W23
	0x03A763F8 MOV W5, W22
	0x03A763FC MOV X7, X20
	0x03A76400 MOV W20, W21
	0x03A76404 MOVZ W8, 0x1
	0x03A76408 ADRP X9, 0x96C000
	0x03A7640C STRB W8, [X9 + 0x2DB]
	0x03A76410 LDR X0, [X10]
	0x03A76414 LDR W8, [X0 + 0xE0]
	0x03A76418 CBNZ W8, 0x3A76448
	0x03A7641C MOV X19, X7
	0x03A76420 MOV W21, W5
	0x03A76424 MOV W22, W4
	0x03A76428 MOV W23, W3
	0x03A7642C MOV W24, W2
	0x03A76430 BL 0x1C16DFC
	0x03A76434 MOV W2, W24
	0x03A76438 MOV W3, W23
	0x03A7643C MOV W4, W22
	0x03A76440 MOV W5, W21
	0x03A76444 MOV X7, X19
	0x03A76448 MOV X0, X26
	0x03A7644C MOV X1, X25
	0x03A76450 MOV W6, W20
	0x03A76454 MOV V0.16B, V8.16B
	0x03A76458 STR X28, [X31]
	0x03A7645C BL 0x3A764A8
	0x03A76460 LDP V1, V0, [X28 + 0x20]
	0x03A76464 LDP V2, V3, [X28]
	0x03A76468 LDP X20, X19, [X31 + 0x70]
	0x03A7646C LDP X22, X21, [X31 + 0x60]
	0x03A76470 STP V1, V0, [X29 + 0x20]
	0x03A76474 STP V2, V3, [X29]
	0x03A76478 LDP V0, V1, [X28 + 0x60]
	0x03A7647C LDP V2, V3, [X28 + 0x40]
	0x03A76480 LDP X24, X23, [X31 + 0x50]
	0x03A76484 LDP X26, X25, [X31 + 0x40]
	0x03A76488 STP V0, V1, [X27 + 0x20]
	0x03A7648C STP V2, V3, [X27]
	0x03A76490 LDP X28, X27, [X31 + 0x30]
	0x03A76494 LDP X29, X30, [X31 + 0x20]
	0x03A76498 LDR V8, [X31 + 0x10]
	0x03A7649C AND W0, W0, 0x1
	0x03A764A0 ADD X31, X31, 0x80
	0x03A764A4 RET
	0x03A764A8 SUB X31, X31, 0x1C0
	0x03A764AC STR D8, [X31 + 0x150]
	0x03A764B0 STP X29, X30, [X31 + 0x160]
	0x03A764B4 STP X28, X27, [X31 + 0x170]
	0x03A764B8 STP X26, X25, [X31 + 0x180]
	0x03A764BC STP X24, X23, [X31 + 0x190]
	0x03A764C0 STP X22, X21, [X31 + 0x1A0]
	0x03A764C4 STP X20, X19, [X31 + 0x1B0]
	0x03A764C8 STR W5, [X31 + 0x15C]
	0x03A764CC STR W4, [X31 + 0x158]
	0x03A764D0 ADRP X19, 0x96C000
	0x03A764D4 ADRP X20, 0x6E0000
	0x03A764D8 LDRB W8, [X19 + 0x2DC]
	0x03A764DC LDR X21, [X31 + 0x1C0]
	0x03A764E0 LDR X20, [X20 + 0xED0]
	0x03A764E4 MOV X27, X7
	0x03A764E8 MOV V8.16B, V0.16B
	0x03A764EC MOV W25, W6
	0x03A764F0 MOV W26, W3
	0x03A764F4 MOV W23, W2
	0x03A764F8 MOV X22, X1
	0x03A764FC MOV X29, X0
	0x03A76500 TBNZ X8, 0x0, 0x3A76524
	0x03A76504 ADRP X0, 0x6E0000
	0x03A76508 LDR X0, [X0 + 0xED0]
	0x03A7650C BL 0x1C16CF4
	0x03A76510 ADRP X0, 0x6E0000
	0x03A76514 LDR X0, [X0 + 0xEC0]
	0x03A76518 BL 0x1C16CF4
	0x03A7651C MOVZ W8, 0x1
	0x03A76520 STRB W8, [X19 + 0x2DC]
	0x03A76524 LDR W3, [X22 + 0xC]
	0x03A76528 LDP S0, S1, [X22 + 0x10]
	0x03A7652C LDR V2, [X22 + 0x18]
	0x03A76530 ADRP X19, 0x6E0000
	0x03A76534 LDR X19, [X19 + 0xEC0]
	0x03A76538 ADD X28, X21, 0x40
	0x03A7653C ADD X24, X21, 0xCC
	0x03A76540 MOV X0, X29
	0x03A76544 MOV W1, W23
	0x03A76548 MOV W2, W26
	0x03A7654C MOV W4, W25
	0x03A76550 MOV V3.16B, V8.16B
	0x03A76554 MOV X5, X21
	0x03A76558 MOV X6, X28
	0x03A7655C MOV X7, X24
	0x03A76560 STR X31, [X31]
	0x03A76564 BL 0x3C532D0
	0x03A76568 LDR X8, [X20]
	0x03A7656C MOV W23, W0
	0x03A76570 LDR W9, [X8 + 0xE0]
	0x03A76574 CBNZ W9, 0x3A76580
	0x03A76578 MOV X0, X8
	0x03A7657C BL 0x1C16DFC
	0x03A76580 MOV X0, X24
	0x03A76584 MOV X1, X31
	0x03A76588 BL 0x3C5ABB8
	0x03A7658C CMP W26, 0x0
	0x03A76590 CINC W8, W26, LT
	0x03A76594 SBFM W9, W8, 0x1, 0x1F
	0x03A76598 AND W8, W8, 0xFFFFFFFE
	0x03A7659C SUB W8, W26, W8
	0x03A765A0 MUL W9, W9, W25
	0x03A765A4 MUL W8, W8, W25
	0x03A765A8 STP S0, S1, [X27]
	0x03A765AC STP S2, S3, [X27 + 0x8]
	0x03A765B0 STR W8, [X21 + 0xC0]
	0x03A765B4 STP W9, W25, [X21 + 0xC4]
	0x03A765B8 LDP V1, V0, [X28 + 0x20]
	0x03A765BC LDP V3, V2, [X28]
	0x03A765C0 LDR X0, [X19]
	0x03A765C4 STP V1, V0, [X31 + 0x130]
	0x03A765C8 STP V3, V2, [X31 + 0x110]
	0x03A765CC LDP V0, V1, [X21 + 0x20]
	0x03A765D0 LDP V2, V3, [X21]
	0x03A765D4 STP V0, V1, [X31 + 0xF0]
	0x03A765D8 STP V2, V3, [X31 + 0xD0]
	0x03A765DC LDR W8, [X0 + 0xE0]
	0x03A765E0 CBNZ W8, 0x3A765E8
	0x03A765E4 BL 0x1C16DFC
	0x03A765E8 LDP V0, V1, [X31 + 0x110]
	0x03A765EC LDP V2, V3, [X31 + 0x130]
	0x03A765F0 ADD X8, X31, 0x90
	0x03A765F4 ADD X0, X31, 0x50
	0x03A765F8 STP V0, V1, [X31 + 0x50]
	0x03A765FC LDP V0, V1, [X31 + 0xD0]
	0x03A76600 STP V2, V3, [X31 + 0x70]
	0x03A76604 LDP V2, V3, [X31 + 0xF0]
	0x03A76608 ADD X1, X31, 0x10
	0x03A7660C STP V0, V1, [X31 + 0x10]
	0x03A76610 STP V2, V3, [X31 + 0x30]
	0x03A76614 BL 0x3A7668C
	0x03A76618 LDP V1, V0, [X31 + 0xB0]
	0x03A7661C LDP V3, V2, [X31 + 0x90]
	0x03A76620 MOV X0, X24
	0x03A76624 MOV X1, X31
	0x03A76628 STP V1, V0, [X21 + 0xA0]
	0x03A7662C FMOV S0, 1
	0x03A76630 STP V3, V2, [X21 + 0x80]
	0x03A76634 BL 0x3C5A5FC
	0x03A76638 LDR W8, [X22 + 0xC]
	0x03A7663C CMP W8, 0x2
	0x03A76640 B.LT 0x3A76664
	0x03A76644 LDR X0, [X19]
	0x03A76648 LDR W8, [X0 + 0xE0]
	0x03A7664C CBNZ W8, 0x3A76654
	0x03A76650 BL 0x1C16DFC
	0x03A76654 LDR W1, [X31 + 0x158]
	0x03A76658 LDR W2, [X31 + 0x15C]
	0x03A7665C MOV X0, X21
	0x03A76660 BL 0x3A76800
	0x03A76664 AND W0, W23, 0x1

ISIL:
	001 Subtract X31, X31, 224
	002 Move [X31+128], X29
	003 Move [X31+136], X30
	004 Move [X31+144], X28
	005 Move [X31+152], X27
	006 Move [X31+160], X26
	007 Move [X31+168], X25
	008 Move [X31+176], X24
	009 Move [X31+184], X23
	010 Move [X31+192], X22
	011 Move [X31+200], X21
	012 Move [X31+208], X20
	013 Move [X31+216], X19
	014 Move X21, 0x96D000
	015 Move X19, 0x67E000
	016 Move X29, 0x67E000
	017 Move X22, 0x6E1000
	018 Move W8, [X21+716]
	019 Move X19, [X19+2288]
	020 Move X29, [X29+1880]
	021 Move X22, [X22+2968]
	022 Move X20, X0
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {77}
	027 Move X0, 0x67E000
	028 Move X0, [X0+2600]
	029 Call 0x1C17CF4
	030 Move X0, 0x6DC000
	031 Move X0, [X0+96]
	032 Call 0x1C17CF4
	033 Move X0, 0x6DC000
	034 Move X0, [X0+104]
	035 Call 0x1C17CF4
	036 Move X0, 0x6DC000
	037 Move X0, [X0+112]
	038 Call 0x1C17CF4
	039 Move X0, 0x6DC000
	040 Move X0, [X0+120]
	041 Call 0x1C17CF4
	042 Move X0, 0x6DC000
	043 Move X0, [X0+128]
	044 Call 0x1C17CF4
	045 Move X0, 0x67E000
	046 Move X0, [X0+1880]
	047 Call 0x1C17CF4
	048 Move X0, 0x6DC000
	049 Move X0, [X0+136]
	050 Call 0x1C17CF4
	051 Move X0, 0x67E000
	052 Move X0, [X0+2512]
	053 Call 0x1C17CF4
	054 Move X0, 0x6E1000
	055 Move X0, [X0+2968]
	056 Call 0x1C17CF4
	057 Move X0, 0x6DC000
	058 Move X0, [X0+160]
	059 Call 0x1C17CF4
	060 Move X0, 0x6DC000
	061 Move X0, [X0+168]
	062 Call 0x1C17CF4
	063 Move X0, 0x6DC000
	064 Move X0, [X0+176]
	065 Call 0x1C17CF4
	066 Move X0, 0x67E000
	067 Move X0, [X0+2288]
	068 Call 0x1C17CF4
	069 Move X0, 0x6E1000
	070 Move X0, [X0+3560]
	071 Call 0x1C17CF4
	072 Move X0, 0x6E1000
	073 Move X0, [X0+3568]
	074 Call 0x1C17CF4
	075 Move W8, 1
	076 Move [X21+716], W8
	077 Move X0, [X19]
	078 NotImplemented "Instruction MOVI not yet implemented."
	079 Move [X31+112], X31
	080 Move [X31+80], V0
	081 Move [X31+88], V0
	082 Call 0x1C17F10
	083 Move X1, X31
	084 Move X19, X0
	085 Call StringBuilder..ctor, X0
	086 Move X0, X31
	087 Call Time.get_frameCount
	088 Move X8, [X29]
	089 Move [X31+76], W0
	090 Add X1, X31, 76
	091 Move X0, X8
	092 Call 0x1C17E04
	093 Move X8, [X22]
	094 Move X21, X0
	095 Move W9, [X8+224]
	096 Compare W9, 0
	097 JumpIfNotEqual {101}
	098 Move X0, X8
	099 Call 0x1C17DFC
	100 Move X8, [X22]
	101 Move X8, [X8+184]
	102 Move X0, [X29]
	103 Add X1, X31, 72
	104 Move W8, [X8]
	105 Move [X31+72], W8
	106 Call 0x1C17E04
	107 Compare X19, 0
	108 JumpIfEqual {365}
	109 Move X8, 0x6E1000
	110 Move X8, [X8+3568]
	111 Move X3, X0
	112 Move X0, X19
	113 Move X2, X21
	114 Move X1, [X8]
	115 Move X4, X31
	116 Call StringBuilder.AppendFormat, X0, X1, X2, X3
	117 Move X0, X19
	118 Move X1, X31
	119 Call StringBuilder.AppendLine, X0
	120 Move X0, [X20+16]
	121 Compare X0, 0
	122 JumpIfEqual {365}
	123 Move X8, 0x6DC000
	124 Move X8, [X8+96]
	125 Move X27, 0x67E000
	126 Move X27, [X27+2512]
	127 Move X28, 0x6E1000
	128 Move X1, [X8]
	129 Move X28, [X28+3560]
	130 Add X8, X31, 16
	131 Call Dictionary`2<Int32, Object>.GetEnumerator, X0
	132 Move V0, [X31+16]
	133 Move V1, [X31+32]
	134 Move X8, [X31+48]
	135 Move [X31+80], V0
	136 Move [X31+88], V1
	137 Move [X31+112], X8
	138 Move X8, 0x6DC000
	139 Move X8, [X8+112]
	140 Move X1, [X8]
	141 Add X0, X31, 80
	142 Call Enumerator<Int32, Object>.MoveNext, X0
	143 Move TEMP, X0
	144 And TEMP, TEMP, 1
	145 Compare TEMP, 1
	146 JumpIfNotEqual {309}
	147 Move X20, [X31+104]
	148 Compare X20, 0
	149 JumpIfEqual {364}
	150 Move X8, 0x6DC000
	151 Move X8, [X8+168]
	152 Move X1, [X8]
	153 Move X0, X20
	154 Call 0x25EE504, X0
	155 Move X8, 0x6DC000
	156 Move X8, [X8+176]
	157 Move X1, [X8]
	158 Move X0, X20
	159 Call 0x25EE534, X0
	160 Move W8, [X20+32]
	161 NotImplemented "Instruction CMP not yet implemented."
	162 Move X21, X0
	163 Move W22, W31
	164 Compare X21, 0
	165 JumpIfEqual {341}
	166 Move X8, [X21]
	167 Move X10, 0x6DC000
	168 NotImplemented "Instruction LDRH not yet implemented."
	169 Move X10, [X10+128]
	170 Move X1, [X10]
	171 Compare X9, 0
	172 JumpIfEqual {179}
	173 Move X10, [X8+176]
	174 Add X10, X10, 8
	175 NotImplemented "Instruction LDUR not yet implemented."
	176 NotImplemented "Instruction CMP not yet implemented."
	177 Subtract X9, X9, 1
	178 Add X10, X10, 16
	179 Move X0, X21
	180 Move W2, W31
	181 Call 0x1C5D788
	182 NotImplemented "Instruction LDRSW not yet implemented."
	183 Add X8, X8, X9
	184 Add X0, X8, 312
	185 Move X8, [X0]
	186 Move X2, [X0+8]
	187 Move X0, X21
	188 Move W1, W22
	189 NotImplemented "Instruction BLR not yet implemented."
	190 Move X24, X0
	191 Move X0, [X27]
	192 Move X25, X1
	193 Move W1, 5
	194 Call 0x1C17D6C
	195 Compare X24, 0
	196 JumpIfEqual {340}
	197 Move X23, X0
	198 Compare X0, 0
	199 JumpIfEqual {338}
	200 Move X26, [X24+88]
	201 Compare X26, 0
	202 JumpIfEqual {209}
	203 Move X8, [X23]
	204 Move X1, [X8+64]
	205 Move X0, X26
	206 Call 0x1C17E00
	207 Compare X0, 0
	208 JumpIfEqual {358}
	209 Move W8, [X23+24]
	210 Compare W8, 0
	211 JumpIfEqual {339}
	212 Move [X23+32], X26
	213 Move X0, [X29]
	214 Move [X31+76], W25
	215 Add X1, X31, 76
	216 Call 0x1C17E04
	217 Move X25, X0
	218 Compare X0, 0
	219 JumpIfEqual {226}
	220 Move X8, [X23]
	221 Move X1, [X8+64]
	222 Move X0, X25
	223 Call 0x1C17E00
	224 Compare X0, 0
	225 JumpIfEqual {349}
	226 Move W8, [X23+24]
	227 NotImplemented "Instruction CMP not yet implemented."
	228 Move [X23+40], X25
	229 Move X0, [X24+24]
	230 Compare X0, 0
	231 JumpIfEqual {342}
	232 Add X8, X31, 16
	233 Move X1, X31
	234 Call RenderTexture.get_descriptor, X0
	235 Move W8, [X31+16]
	236 Move X0, [X29]
	237 Move [X31+72], W8
	238 Add X1, X31, 72
	239 Call 0x1C17E04
	240 Move X25, X0
	241 Compare X0, 0
	242 JumpIfEqual {249}
	243 Move X8, [X23]
	244 Move X1, [X8+64]
	245 Move X0, X25
	246 Call 0x1C17E00
	247 Compare X0, 0
	248 JumpIfEqual {355}
	249 Move W8, [X23+24]
	250 NotImplemented "Instruction CMP not yet implemented."
	251 Move [X23+48], X25
	252 Move X0, [X24+24]
	253 Compare X0, 0
	254 JumpIfEqual {347}
	255 Add X8, X31, 16
	256 Move X1, X31
	257 Call RenderTexture.get_descriptor, X0
	258 Move W8, [X31+20]
	259 Move X0, [X29]
	260 Move [X31+12], W8
	261 Add X1, X31, 12
	262 Call 0x1C17E04
	263 Move X25, X0
	264 Compare X0, 0
	265 JumpIfEqual {272}
	266 Move X8, [X23]
	267 Move X1, [X8+64]
	268 Move X0, X25
	269 Call 0x1C17E00
	270 Compare X0, 0
	271 JumpIfEqual {352}
	272 Move W8, [X23+24]
	273 NotImplemented "Instruction CMP not yet implemented."
	274 Move [X23+56], X25
	275 Move X0, [X24+24]
	276 Compare X0, 0
	277 JumpIfEqual {348}
	278 Add X8, X31, 16
	279 Move X1, X31
	280 Call RenderTexture.get_descriptor, X0
	281 Move W8, [X31+28]
	282 Move X0, [X29]
	283 Move [X31+16], W8
	284 Add X1, X31, 16
	285 Call 0x1C17E04
	286 Move X24, X0
	287 Compare X0, 0
	288 JumpIfEqual {295}
	289 Move X8, [X23]
	290 Move X1, [X8+64]
	291 Move X0, X24
	292 Call 0x1C17E00
	293 Compare X0, 0
	294 JumpIfEqual {361}
	295 Move W8, [X23+24]
	296 NotImplemented "Instruction CMP not yet implemented."
	297 Move [X23+64], X24
	298 Move X1, [X28]
	299 Move X0, X19
	300 Move X2, X23
	301 Move X3, X31
	302 Call StringBuilder.AppendFormat, X0, X1, X2
	303 Move X0, X19
	304 Move X1, X31
	305 Call StringBuilder.AppendLine, X0
	306 Move W8, [X20+32]
	307 Add W22, W22, 1
	308 NotImplemented "Instruction CMP not yet implemented."
	309 Move X8, 0x6DC000
	310 Move X8, [X8+104]
	311 Add X0, X31, 80
	312 Move X1, [X8]
	313 Call Enumerator<Int32, Object>.Dispose, X0
	314 Move X8, 0x67E000
	315 Move X8, [X8+2600]
	316 Move X0, [X8]
	317 Move W8, [X0+224]
	318 Compare W8, 0
	319 JumpIfNotEqual {321}
	320 Call 0x1C17DFC
	321 Move X0, X19
	322 Move X1, X31
	323 Call Debug.Log, X0
	324 Move X20, [X31+208]
	325 Move X19, [X31+216]
	326 Move X22, [X31+192]
	327 Move X21, [X31+200]
	328 Move X24, [X31+176]
	329 Move X23, [X31+184]
	330 Move X26, [X31+160]
	331 Move X25, [X31+168]
	332 Move X28, [X31+144]
	333 Move X27, [X31+152]
	334 Move X29, [X31+128]
	335 Move X30, [X31+136]
	336 Add X31, X31, 224
	337 Return 
	338 Call 0x1C17F20
	339 Call 0x1C17F28
	340 Call 0x1C17F20
	341 Call 0x1C17F20
	342 Call 0x1C17F20
	343 Call 0x1C17F28
	344 Call 0x1C17F28
	345 Call 0x1C17F28
	346 Call 0x1C17F28
	347 Call 0x1C17F20
	348 Call 0x1C17F20
	349 Call 0x1C17F44
	350 Move X1, X31
	351 Call 0x1C17DEC
	352 Call 0x1C17F44
	353 Move X1, X31
	354 Call 0x1C17DEC
	355 Call 0x1C17F44
	356 Move X1, X31
	357 Call 0x1C17DEC
	358 Call 0x1C17F44
	359 Move X1, X31
	360 Call 0x1C17DEC
	361 Call 0x1C17F44
	362 Move X1, X31
	363 Call 0x1C17DEC
	364 Call 0x1C17F20
	365 Call 0x1C17F20
	366 Move X20, X0
	367 NotImplemented "Instruction CMP not yet implemented."
	368 Move X0, X20
	369 Call 0x3EB2AD0
	370 Move X21, [X0]
	371 Call 0x3EB2AE0
	372 Move X8, 0x6DC000
	373 Move X8, [X8+104]
	374 Add X0, X31, 80
	375 Move X1, [X8]
	376 Call Enumerator<Int32, Object>.Dispose, X0
	377 Compare X21, 0
	378 JumpIfEqual {314}
	379 Move X0, X21
	380 Call 0x1C17F18
	381 Move X21, X31
	382 Move X20, X0
	383 Move X8, 0x6DC000
	384 Move X8, [X8+104]
	385 Move X1, [X8]
	386 Add X0, X31, 80
	387 Call Enumerator<Int32, Object>.Dispose, X0
	388 Compare X21, 0
	389 JumpIfNotEqual {392}
	390 Move X0, X20
	391 Call 0x1D2D690
	392 Move X0, X21
	393 Call 0x1C17F18
	394 Call 0x1991590

Method: System.Int32 GetHashCodeWithNameHash(in UnityEngine.Experimental.Rendering.RenderGraphModule.TextureDesc texDesc)

Disassembly:
	0x03A75A40 BL 0x3C3A930
	0x03A75A44 STR X31, [X19 + 0x20]
	0x03A75A48 LDR X0, [X19 + 0x28]
	0x03A75A4C CBZ X0, 0x3A75A5C
	0x03A75A50 MOV X1, X31
	0x03A75A54 BL 0x3C3A930
	0x03A75A58 STR X31, [X19 + 0x28]
	0x03A75A5C LDP X30, X19, [X31], #0x10
	0x03A75A60 RET
	0x03A75A64 STP X30, X19, [X31 - 0x10]!
	0x03A75A68 LDR X0, [X1]
	0x03A75A6C CBZ X0, 0x3A75A80
	0x03A75A70 MOV X19, X1
	0x03A75A74 MOV X1, X31
	0x03A75A78 BL 0x3C3A930
	0x03A75A7C STR X31, [X19]
	0x03A75A80 LDP X30, X19, [X31], #0x10
	0x03A75A84 RET
	0x03A75A88 STR X30, [X31 - 0x30]!
	0x03A75A8C STP X22, X21, [X31 + 0x10]
	0x03A75A90 STP X20, X19, [X31 + 0x20]
	0x03A75A94 ADRP X22, 0x96D000

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+128], X30
	003 Move [X31+136], X19
	004 Add X0, X31, 8
	005 Move W2, 120
	006 Move X19, X1
	007 Call 0x3EB2AC0
	008 Add X0, X31, 8
	009 Move X1, X31
	010 Call TextureDesc.GetHashCode, X0
	011 Move X8, [X19+80]
	012 Compare X8, 0
	013 JumpIfEqual {26}
	014 Move X9, [X8]
	015 Move W19, W0
	016 Move X0, X8
	017 Move X10, [X9+344]
	018 Move X1, [X9+352]
	019 NotImplemented "Instruction BLR not yet implemented."
	020 Move W8, 23
	021 NotImplemented "Instruction MADD not yet implemented."
	022 Move X30, [X31+128]
	023 Move X19, [X31+136]
	024 Add X31, X31, 144
	025 Return X0
	026 Call 0x1C17F20

Method: UnityEngine.Experimental.Rendering.RenderGraphModule.TextureDesc CreateTextureDesc(UnityEngine.RenderTextureDescriptor desc, UnityEngine.Experimental.Rendering.RenderGraphModule.TextureSizeMode textureSizeMode = 0, System.Int32 anisoLevel = 1, System.Single mipMapBias = 0, UnityEngine.FilterMode filterMode = 0, UnityEngine.TextureWrapMode wrapMode = 1, System.String name = )

Disassembly:
	0x03A734F4 MOV X2, X31
	0x03A734F8 BL 0x3C53780
	0x03A734FC LDRB W1, [X20 + 0x2AC]
	0x03A73500 ADD X0, X31, 0x120
	0x03A73504 MOV X2, X31
	0x03A73508 BL 0x3C536BC
	0x03A7350C CBZ X21, 0x3A73584
	0x03A73510 MOV X0, X21
	0x03A73514 MOV X1, X31
	0x03A73518 BL 0x3C03AD4
	0x03A7351C LDR X8, [X25]
	0x03A73520 MOV W20, W0
	0x03A73524 LDR W9, [X8 + 0xE0]
	0x03A73528 CBNZ W9, 0x3A73534
	0x03A7352C MOV X0, X8
	0x03A73530 BL 0x1C16DFC
	0x03A73534 CMP W20, 0x4
	0x03A73538 CSET W1, NE
	0x03A7353C ADD X0, X31, 0x120
	0x03A73540 MOV X2, X31
	0x03A73544 BL 0x3C536CC
	0x03A73548 ADD X1, X31, 0x120
	0x03A7354C MOVZ W2, 0xC4
	0x03A73550 MOV X0, X19
	0x03A73554 BL 0x3EB1AC0
	0x03A73558 LDR X8, [X24 + 0x28]
	0x03A7355C LDR X9, [X31 + 0x1E8]
	0x03A73560 CMP X8, X9
	0x03A73564 B.NE 0x3A73588
	0x03A73568 ADD X31, X31, 0x1F0
	0x03A7356C LDP X20, X19, [X31 + 0x40]
	0x03A73570 LDP X22, X21, [X31 + 0x30]
	0x03A73574 LDP X24, X23, [X31 + 0x20]
	0x03A73578 LDP X30, X25, [X31 + 0x10]
	0x03A7357C LDR X29, [X31], #0x50
	0x03A73580 RET
	0x03A73584 BL 0x1C16F20
	0x03A73588 BL 0x3EB1B20
	0x03A7358C SUB X31, X31, 0x1F0
	0x03A73590 STR X29, [X31 + 0x1A0]
	0x03A73594 STP X30, X25, [X31 + 0x1B0]
	0x03A73598 STP X24, X23, [X31 + 0x1C0]
	0x03A7359C STP X22, X21, [X31 + 0x1D0]
	0x03A735A0 STP X20, X19, [X31 + 0x1E0]
	0x03A735A4 MRS X24, 0xC000
	0x03A735A8 LDR X9, [X24 + 0x28]
	0x03A735AC ADRP X23, 0x96F000
	0x03A735B0 MOV W20, W2
	0x03A735B4 MOV X22, X1
	0x03A735B8 STR X9, [X31 + 0x198]
	0x03A735BC LDRB W9, [X23 + 0x2B6]
	0x03A735C0 MOV X21, X0
	0x03A735C4 MOV X19, X8
	0x03A735C8 TBNZ X9, 0x0, 0x3A73628
	0x03A735CC ADRP X0, 0x680000
	0x03A735D0 LDR X0, [X0 + 0xA28]
	0x03A735D4 BL 0x1C16CF4
	0x03A735D8 ADRP X0, 0x6E1000
	0x03A735DC LDR X0, [X0 + 0xB8]
	0x03A735E0 BL 0x1C16CF4
	0x03A735E4 ADRP X0, 0x6E3000
	0x03A735E8 LDR X0, [X0 + 0xCF8]
	0x03A735EC BL 0x1C16CF4
	0x03A735F0 ADRP X0, 0x6E3000
	0x03A735F4 LDR X0, [X0 + 0xD00]
	0x03A735F8 BL 0x1C16CF4
	0x03A735FC ADRP X0, 0x6E1000
	0x03A73600 LDR X0, [X0 + 0x10]
	0x03A73604 BL 0x1C16CF4
	0x03A73608 ADRP X0, 0x6E3000
	0x03A7360C LDR X0, [X0 + 0xD60]
	0x03A73610 BL 0x1C16CF4
	0x03A73614 ADRP X0, 0x6E3000
	0x03A73618 LDR X0, [X0 + 0xD68]
	0x03A7361C BL 0x1C16CF4
	0x03A73620 MOVZ W8, 0x1
	0x03A73624 STRB W8, [X23 + 0x2B6]
	0x03A73628 ADRP X23, 0x6E1000
	0x03A7362C LDR X23, [X23 + 0x10]
	0x03A73630 ADD X0, X31, 0xD0
	0x03A73634 MOVZ W2, 0xC4
	0x03A73638 MOV W1, W31
	0x03A7363C BL 0x3EB1B10
	0x03A73640 CBZ X21, 0x3A736FC

ISIL:
	001 Subtract X31, X31, 208
	002 Move [X31+128], D8
	003 Move [X31+144], X30
	004 Move [X31+152], X25
	005 Move [X31+160], X24
	006 Move [X31+168], X23
	007 Move [X31+176], X22
	008 Move [X31+184], X21
	009 Move [X31+192], X20
	010 Move [X31+200], X19
	011 Move V8, V0
	012 NotImplemented "Instruction MOVI not yet implemented."
	013 Move [X31+112], X31
	014 Move [X31+80], V0
	015 Move [X31+88], V0
	016 Move [X31+48], V0
	017 Move [X31+56], V0
	018 Move [X31+16], V0
	019 Move [X31+24], V0
	020 Move [X31], V0
	021 Move W22, W2
	022 Move W25, W1
	023 Move W1, [X0]
	024 Move W2, [X0+4]
	025 Move X19, X5
	026 Move W23, W4
	027 Move W24, W3
	028 Move X21, X0
	029 Add X0, X31, 0
	030 Move W3, W31
	031 Move W4, W31
	032 Move X5, X31
	033 Move X20, X8
	034 Call TextureDesc..ctor, X0, X1, X2, X3, X4
	035 Move [X31], W25
	036 Move W8, [X21+12]
	037 Move X0, X21
	038 Move X1, X31
	039 Move [X31+12], W8
	040 Call RenderTextureDescriptor.get_depthBufferBits, X0
	041 Move [X31+32], W0
	042 Move X0, X21
	043 Move X1, X31
	044 Call RenderTextureDescriptor.get_graphicsFormat, X0
	045 Move [X31+36], W0
	046 Move [X31+40], W24
	047 Move W8, [X21+32]
	048 Move X0, X21
	049 Move X1, X31
	050 Move [X31+44], W23
	051 Move [X31+48], W8
	052 Call RenderTextureDescriptor.get_enableRandomWrite, X0
	053 And W8, W0, 1
	054 Move X0, X21
	055 Move X1, X31
	056 Move [X31+52], W8
	057 Call RenderTextureDescriptor.get_useMipMap, X0
	058 And W8, W0, 1
	059 Move X0, X21
	060 Move X1, X31
	061 Move [X31+53], W8
	062 Call RenderTextureDescriptor.get_autoGenerateMips, X0
	063 And W8, W0, 1
	064 Move [X31+54], W8
	065 Move W8, [X21+36]
	066 Move [X31+56], W22
	067 Move [X31+60], S8
	068 Move X0, X21
	069 NotImplemented "Instruction CMP not yet implemented."
	070 NotImplemented "Instruction CSET not yet implemented."
	071 Move [X31+55], W8
	072 Move W8, [X21+8]
	073 Move X1, X31
	074 Move [X31+64], W8
	075 Call RenderTextureDescriptor.get_bindMS, X0
	076 And W8, W0, 1
	077 Move X0, X21
	078 Move X1, X31
	079 Move [X31+68], W8
	080 Call RenderTextureDescriptor.get_useDynamicScale, X0
	081 And W8, W0, 1
	082 Add X1, X31, 0
	083 Move W2, 120
	084 Move X0, X20
	085 Move [X31+72], X31
	086 Move [X31+80], X19
	087 Move [X31+69], W8
	088 Call 0x3EB2AC0
	089 Move X20, [X31+192]
	090 Move X19, [X31+200]
	091 Move X22, [X31+176]
	092 Move X21, [X31+184]
	093 Move X24, [X31+160]
	094 Move X23, [X31+168]
	095 Move X30, [X31+144]
	096 Move X25, [X31+152]
	097 Move V8, [X31+128]
	098 Add X31, X31, 208
	099 Return X0

Method: System.Void .ctor()

Disassembly:
	0x03A76668 LDP X20, X19, [X31 + 0x1B0]
	0x03A7666C LDP X22, X21, [X31 + 0x1A0]
	0x03A76670 LDP X24, X23, [X31 + 0x190]
	0x03A76674 LDP X26, X25, [X31 + 0x180]
	0x03A76678 LDP X28, X27, [X31 + 0x170]
	0x03A7667C LDP X29, X30, [X31 + 0x160]
	0x03A76680 LDR V8, [X31 + 0x150]
	0x03A76684 ADD X31, X31, 0x1C0
	0x03A76688 RET
	0x03A7668C SUB X31, X31, 0x1D0
	0x03A76690 STR X29, [X31 + 0x1A0]
	0x03A76694 STP X30, X21, [X31 + 0x1B0]
	0x03A76698 STP X20, X19, [X31 + 0x1C0]
	0x03A7669C MOV X21, X0
	0x03A766A0 MOV X0, X31
	0x03A766A4 MOV X20, X1
	0x03A766A8 MOV X19, X8
	0x03A766AC STP X31, X31, [X31 + 0x150]
	0x03A766B0 STP X31, X31, [X31 + 0x140]
	0x03A766B4 BL 0x3C3BEDC
	0x03A766B8 TBZ X0, 0x0, 0x3A766EC
	0x03A766BC LDR V0, [X21 + 0x8]
	0x03A766C0 LDR V1, [X21 + 0x18]
	0x03A766C4 LDR V2, [X21 + 0x28]
	0x03A766C8 LDR V3, [X21 + 0x38]
	0x03A766CC FNEG S0, S0
	0x03A766D0 FNEG S1, S1
	0x03A766D4 FNEG S2, S2
	0x03A766D8 FNEG S3, S3
	0x03A766DC STR S0, [X21 + 0x8]
	0x03A766E0 STR S1, [X21 + 0x18]
	0x03A766E4 STR S2, [X21 + 0x28]
	0x03A766E8 STR S3, [X21 + 0x38]
	0x03A766EC LDP V1, V0, [X21 + 0x20]
	0x03A766F0 LDP V3, V2, [X21]
	0x03A766F4 ADD X8, X31, 0x100
	0x03A766F8 ADD X0, X31, 0xC0
	0x03A766FC STP V1, V0, [X31 + 0xE0]
	0x03A76700 STP V3, V2, [X31 + 0xC0]
	0x03A76704 LDP V0, V1, [X20 + 0x20]
	0x03A76708 LDP V2, V3, [X20]
	0x03A7670C ADD X1, X31, 0x80
	0x03A76710 MOV X2, X31
	0x03A76714 ADD X20, X31, 0x100
	0x03A76718 STP V0, V1, [X31 + 0xA0]
	0x03A7671C STP V2, V3, [X31 + 0x80]
	0x03A76720 BL 0x3C27F74
	0x03A76724 ADRP X21, 0x962000
	0x03A76728 LDP V0, V1, [X31 + 0x100]
	0x03A7672C LDP V2, V3, [X31 + 0x120]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0x96D000
	009 Move X24, 0x6E1000
	010 Move X20, 0x6E1000
	011 Move X22, 0x67F000
	012 Move X21, 0x67F000
	013 Move W8, [X23+717]
	014 Move X24, [X24+3576]
	015 Move X20, [X20+3584]
	016 Move X22, [X22+3632]
	017 Move X21, [X21+3616]
	018 Move X19, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {37}
	023 Move X0, 0x6E1000
	024 Move X0, [X0+3584]
	025 Call 0x1C17CF4
	026 Move X0, 0x6E1000
	027 Move X0, [X0+3576]
	028 Call 0x1C17CF4
	029 Move X0, 0x67F000
	030 Move X0, [X0+3616]
	031 Call 0x1C17CF4
	032 Move X0, 0x67F000
	033 Move X0, [X0+3632]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X23+717], W8
	037 Move X0, [X24]
	038 Call 0x1C17F10
	039 Move X1, [X20]
	040 Move X20, X0
	041 Call Dictionary`2<Int32, Object>..ctor, X0
	042 Move [X19+16], X20
	043 Move X0, [X22]
	044 Call 0x1C17F10
	045 Move X2, [X21]
	046 Move W1, 32
	047 Move X20, X0
	048 Call List`1<Int32>..ctor, X0, X1
	049 Move [X19+24], X20
	050 Move X0, X19
	051 Move X20, [X31+48]
	052 Move X19, [X31+56]
	053 Move X22, [X31+32]
	054 Move X21, [X31+40]
	055 Move X24, [X31+16]
	056 Move X23, [X31+24]
	057 Move X1, X31
	058 Move X30, [X31+64]
	059 Call Object..ctor, X0
	060 Return 

Method: System.Void .cctor()

Disassembly:
	0x03A76730 LDRB W8, [X21 + 0xAC0]
	0x03A76734 STP V0, V1, [X31 + 0x160]
	0x03A76738 STP V2, V3, [X31 + 0x180]
	0x03A7673C CBNZ W8, 0x3A76754
	0x03A76740 ADRP X0, 0x681000
	0x03A76744 LDR X0, [X0 + 0x270]
	0x03A76748 BL 0x1C16CF4
	0x03A7674C MOVZ W8, 0x1
	0x03A76750 STRB W8, [X21 + 0xAC0]
	0x03A76754 ADRP X8, 0x681000
	0x03A76758 LDR X8, [X8 + 0x270]
	0x03A7675C LDP V2, V1, [X31 + 0x180]
	0x03A76760 ADD X0, X31, 0x40
	0x03A76764 ADD X1, X31, 0x0
	0x03A76768 LDR X8, [X8]
	0x03A7676C MOV X2, X31
	0x03A76770 LDR X8, [X8 + 0xB8]
	0x03A76774 LDUR V0, [X8 + 0x5C]
	0x03A76778 LDP V3, V4, [X8 + 0x40]
	0x03A7677C STUR V0, [X20 + 0x1C]
	0x03A76780 LDP V5, V0, [X31 + 0x160]
	0x03A76784 STP V3, V4, [X31 + 0x100]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x96D000
	005 Move X20, 0x6E1000
	006 Move W8, [X19+718]
	007 Move X20, [X20+2968]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x6E1000
	013 Move X0, [X0+2968]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+718], W8
	017 Move X8, [X20]
	018 Move X9, -49840128
	019 Move V0, [X9+2912]
	020 Move X20, [X31+16]
	021 Move X19, [X31+24]
	022 Move X8, [X8+184]
	023 Move W9, 32
	024 Move [X8], D0
	025 Move [X8+8], W9
	026 Move X30, [X31+32]
	027 Return 

