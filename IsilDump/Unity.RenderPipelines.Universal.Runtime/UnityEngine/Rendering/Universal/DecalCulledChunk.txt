Type: UnityEngine.Rendering.Universal.DecalCulledChunk

Method: System.Void RemoveAtSwapBack(System.Int32 entityIndex)

Disassembly:
	0x03A42964 ADRP X8, 0x6B3000
	0x03A42968 LDR X8, [X8 + 0x9B8]
	0x03A4296C MOVZ W1, 0x2
	0x03A42970 B 0x3A429E4
	0x03A42974 MOVZ W1, 0x1
	0x03A42978 BL 0x1C16D6C
	0x03A4297C LDR X8, [X19 + 0x118]
	0x03A42980 CBZ X8, 0x3A42A28
	0x03A42984 LDR X21, [X8 + 0x30]
	0x03A42988 MOV X20, X0
	0x03A4298C MOV X0, X8
	0x03A42990 MOV X1, X31
	0x03A42994 BL 0x3A9AD34
	0x03A42998 CBZ X21, 0x3A42A28
	0x03A4299C LDR W8, [X21 + 0x18]
	0x03A429A0 CMP W0, W8
	0x03A429A4 B.CS 0x3A42A2C
	0x03A429A8 CBZ X20, 0x3A42A28
	0x03A429AC ADD X8, X21, W0, 0x3, SXTW
	0x03A429B0 LDR X21, [X8 + 0x20]
	0x03A429B4 CBZ X21, 0x3A429CC
	0x03A429B8 LDR X8, [X20]
	0x03A429BC MOV X0, X21
	0x03A429C0 LDR X1, [X8 + 0x40]
	0x03A429C4 BL 0x1C16E00
	0x03A429C8 CBZ X0, 0x3A42A30
	0x03A429CC LDR W8, [X20 + 0x18]
	0x03A429D0 CBZ W8, 0x3A42A2C
	0x03A429D4 STR X21, [X20 + 0x20]
	0x03A429D8 ADRP X8, 0x6B3000
	0x03A429DC LDR X8, [X8 + 0x9B8]
	0x03A429E0 MOVZ W1, 0x1
	0x03A429E4 LDR X0, [X8]
	0x03A429E8 BL 0x1C16D6C
	0x03A429EC CBZ X0, 0x3A42A28
	0x03A429F0 LDR W8, [X0 + 0x18]
	0x03A429F4 CBZ W8, 0x3A42A2C
	0x03A429F8 MOVZ W8, 0x1
	0x03A429FC STRB W8, [X0 + 0x20]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x9A1000
	008 Move X22, 0x714000
	009 Move X21, 0x714000
	010 Move W8, [X23+357]
	011 Move X22, [X22+3000]
	012 Move X21, [X21+2752]
	013 Move W20, W1
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {27}
	019 Move X0, 0x714000
	020 Move X0, [X0+2752]
	021 Call 0x1C17CF4
	022 Move X0, 0x714000
	023 Move X0, [X0+3000]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X23+357], W8
	027 Move W3, [X19+16]
	028 Move X4, [X22]
	029 Add X1, X19, 80
	030 Move X0, X19
	031 Move W2, W20
	032 Call DecalChunk.RemoveAtSwapBack, X0, X1, X2, X3
	033 Move W3, [X19+16]
	034 Move X4, [X21]
	035 Add X1, X19, 88
	036 Move X0, X19
	037 Move W2, W20
	038 Call DecalChunk.RemoveAtSwapBack, X0, X1, X2, X3
	039 Move W8, [X19+16]
	040 Move X22, [X31+16]
	041 Move X21, [X31+24]
	042 Subtract W8, W8, 1
	043 Move [X19+16], W8
	044 Move X20, [X31+32]
	045 Move X19, [X31+40]
	046 Move X30, [X31+48]
	047 Move X23, [X31+56]
	048 Return 

Method: System.Void SetCapacity(System.Int32 newCapacity)

Disassembly:
	0x03A42A00 STP X20, X0, [X19 + 0x88]
	0x03A42A04 LDR X8, [X19 + 0x118]
	0x03A42A08 CBZ X8, 0x3A42A28
	0x03A42A0C LDR X1, [X19 + 0x120]
	0x03A42A10 LDR X2, [X8 + 0x70]
	0x03A42A14 MOV X0, X19
	0x03A42A18 LDP X20, X19, [X31 + 0x20]
	0x03A42A1C LDP X22, X21, [X31 + 0x10]
	0x03A42A20 LDR X30, [X31], #0x30
	0x03A42A24 B 0x3A42A44
	0x03A42A28 BL 0x1C16F20
	0x03A42A2C BL 0x1C16F28
	0x03A42A30 BL 0x1C16F44
	0x03A42A34 MOV X1, X31
	0x03A42A38 BL 0x1C16DEC
	0x03A42A3C STP X1, X2, [X0 + 0x88]
	0x03A42A40 RET
	0x03A42A44 SUB X31, X31, 0xD0
	0x03A42A48 STP X30, X25, [X31 + 0x90]
	0x03A42A4C STP X24, X23, [X31 + 0xA0]
	0x03A42A50 STP X22, X21, [X31 + 0xB0]
	0x03A42A54 STP X20, X19, [X31 + 0xC0]
	0x03A42A58 ADRP X23, 0x9A0000
	0x03A42A5C ADRP X22, 0x712000
	0x03A42A60 LDRB W8, [X23 + 0x177]
	0x03A42A64 LDR X22, [X22 + 0x10]
	0x03A42A68 MOV X19, X2
	0x03A42A6C MOV X21, X1
	0x03A42A70 MOV X20, X0
	0x03A42A74 TBNZ X8, 0x0, 0x3A42ABC
	0x03A42A78 ADRP X0, 0x6B1000
	0x03A42A7C LDR X0, [X0 + 0xA28]
	0x03A42A80 BL 0x1C16CF4
	0x03A42A84 ADRP X0, 0x712000
	0x03A42A88 LDR X0, [X0 + 0xB18]
	0x03A42A8C BL 0x1C16CF4
	0x03A42A90 ADRP X0, 0x712000
	0x03A42A94 LDR X0, [X0 + 0x10]
	0x03A42A98 BL 0x1C16CF4
	0x03A42A9C ADRP X0, 0x713000
	0x03A42AA0 LDR X0, [X0 + 0xC00]
	0x03A42AA4 BL 0x1C16CF4
	0x03A42AA8 ADRP X0, 0x713000
	0x03A42AAC LDR X0, [X0 + 0xC08]
	0x03A42AB0 BL 0x1C16CF4
	0x03A42AB4 MOVZ W8, 0x1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x9A1000
	008 Move X22, 0x711000
	009 Move X21, 0x714000
	010 Move W8, [X23+358]
	011 Move X22, [X22+2520]
	012 Move X21, [X21+2840]
	013 Move W19, W1
	014 Move X20, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {30}
	019 Move X0, 0x714000
	020 Move X0, [X0+2840]
	021 Call 0x1C17CF4
	022 Move X0, 0x711000
	023 Move X0, [X0+2520]
	024 Call 0x1C17CF4
	025 Move X0, 0x714000
	026 Move X0, [X0+3008]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X23+358], W8
	030 Move X2, [X22]
	031 Add X0, X20, 80
	032 Move W1, W19
	033 Call ArrayExtensions.ResizeArray, X0, X1
	034 Move X2, [X21]
	035 Add X0, X20, 88
	036 Move W1, W19
	037 Call ArrayExtensions.ResizeArray, X0, X1
	038 Move X8, [X20+72]
	039 Compare X8, 0
	040 JumpIfNotEqual {49}
	041 Move X8, 0x714000
	042 Move X8, [X8+3008]
	043 Move X0, [X8]
	044 Call 0x1C17F10
	045 Move X1, X31
	046 Move X21, X0
	047 Call CullingGroup..ctor, X0
	048 Move [X20+72], X21
	049 Move [X20+20], W19
	050 Move X20, [X31+32]
	051 Move X19, [X31+40]
	052 Move X22, [X31+16]
	053 Move X21, [X31+24]
	054 Move X30, [X31+48]
	055 Move X23, [X31+56]
	056 Return 

Method: System.Void Dispose()

Disassembly:
	0x03A42AB8 STRB W8, [X23 + 0x177]
	0x03A42ABC MOVZ W8, 0x1
	0x03A42AC0 STR W31, [X31 + 0x88]
	0x03A42AC4 STRB W8, [X20 + 0x70]
	0x03A42AC8 STRB W8, [X20 + 0x40]
	0x03A42ACC LDR X0, [X22]
	0x03A42AD0 LDR W8, [X0 + 0xE0]
	0x03A42AD4 CBNZ W8, 0x3A42ADC
	0x03A42AD8 BL 0x1C16DFC
	0x03A42ADC MOV X0, X21
	0x03A42AE0 MOV X1, X31
	0x03A42AE4 BL 0x3A718A4
	0x03A42AE8 MOV W22, W0
	0x03A42AEC STR W0, [X31 + 0x8C]
	0x03A42AF0 MOV X0, X31
	0x03A42AF4 BL 0x3C3BDEC
	0x03A42AF8 MOV W8, W22
	0x03A42AFC CMP X8, W0, SXTW
	0x03A42B00 B.LE 0x3A42B84
	0x03A42B04 ADRP X23, 0x713000
	0x03A42B08 ADRP X24, 0x713000
	0x03A42B0C ADRP X25, 0x6B1000
	0x03A42B10 LDR X23, [X23 + 0xC08]
	0x03A42B14 LDR X24, [X24 + 0xC00]
	0x03A42B18 LDR X25, [X25 + 0xA28]
	0x03A42B1C ADD X0, X31, 0x8C
	0x03A42B20 MOV X1, X31
	0x03A42B24 BL 0x3399B00
	0x03A42B28 MOV X22, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x9A1000
	005 Move W8, [X20+359]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x6DC000
	012 Move X0, [X0+328]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+359], W8
	016 Move W8, [X19+20]
	017 Compare W8, 0
	018 JumpIfEqual {32}
	019 Move X8, 0x6DC000
	020 Move X8, [X8+328]
	021 Add X0, X19, 88
	022 Move X1, [X8]
	023 Call NativeArray`1<Int32>.Dispose, X0
	024 Move X0, [X19+72]
	025 Move [X19+80], X31
	026 Move [X19+16], X31
	027 Compare X0, 0
	028 JumpIfEqual {36}
	029 Move X1, X31
	030 Call CullingGroup.Dispose, X0
	031 Move [X19+72], X31
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move X30, [X31+32]
	035 Return 
	036 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x03A3F634 B 0x3A3F608
	0x03A3F638 LDR X1, [X22]

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

