Type: UnityEngine.Rendering.Universal.TaaPersistentData

Method: UnityEngine.RenderTextureDescriptor get_rtd()

Disassembly:
	0x03A79478 LDR W29, [X8, X9, LSL]
	0x03A7947C BL 0x3C3C88C
	0x03A79480 LDR W8, [X23 + 0x200]
	0x03A79484 MOV W22, W0
	0x03A79488 FMOV S8, 1
	0x03A7948C CBNZ W8, 0x3A79494
	0x03A79490 LDR V8, [X23 + 0x1EC]

ISIL:
	001 Move W9, [X0+64]
	002 Move V1, [X0+32]
	003 Move V0, [X0+48]
	004 Move V2, [X0+1]
	005 Move [X8+48], W9
	006 Move [X8+16], V1
	007 Move [X8+24], V0
	008 Move [X8], V2
	009 Return X0

Method: UnityEngine.Rendering.RTHandle accumulationTexture(System.Int32 index)

Disassembly:
	0x03A79494 LDR X8, [X23 + 0x1E0]
	0x03A79498 CBZ X8, 0x3A798DC
	0x03A7949C CMP W25, 0x0
	0x03A794A0 MOVZ W9, 0x50
	0x03A794A4 MOVZ W10, 0x48
	0x03A794A8 CSEL X9, X10, X9, EQ

ISIL:
	001 NotImplemented "Instruction CMP not yet implemented."
	002 Move W8, 80
	003 Move W9, 72
	004 NotImplemented "Instruction CSEL not yet implemented."
	005 Move X0, [X0]
	006 Return X0

Method: System.Int32 GetLastAccumFrameIndex(System.Int32 index)

Disassembly:
	0x03A794AC CBZ X21, 0x3A798DC
	0x03A794B0 LDR X25, [X8, X9, LSL]
	0x03A794B4 MOV X0, X21
	0x03A794B8 MOV X2, X31
	0x03A794BC MOV X1, X25
	0x03A794C0 BL 0x398C894

ISIL:
	001 NotImplemented "Instruction CMP not yet implemented."
	002 Move W8, 92
	003 Move W9, 88
	004 NotImplemented "Instruction CSEL not yet implemented."
	005 Move W0, [X0]
	006 Return X0

Method: System.Void SetLastAccumFrameIndex(System.Int32 index, System.Int32 value)

Disassembly:
	0x03A794C4 CMP W29, W22
	0x03A794C8 STR X0, [X31 + 0x98]
	0x03A794CC B.NE 0x3A794DC
	0x03A794D0 LDR X8, [X21 + 0x40]
	0x03A794D4 CBZ X8, 0x3A798DC

ISIL:
	001 Compare W1, 0
	002 JumpIfEqual {5}
	003 Move [X0+92], W2
	004 Return 
	005 Move [X0+88], W2
	006 Return 

Method: System.Void .ctor()

Disassembly:
	0x03A794D8 ADD X27, X8, 0x30
	0x03A794DC ADRP X8, 0x6DB000

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: System.Void Init(System.Int32 sizeX, System.Int32 sizeY, System.Int32 volumeDepth, UnityEngine.Experimental.Rendering.GraphicsFormat format, UnityEngine.VRTextureUsage vrUsage, UnityEngine.Rendering.TextureDimension texDim)

Disassembly:
	0x03A794E0 LDR X8, [X8 + 0xA8]
	0x03A794E4 ADRP X28, 0x6DD000
	0x03A794E8 ADRP X20, 0x6DD000
	0x03A794EC LDR X28, [X28 + 0xFB0]
	0x03A794F0 LDR X20, [X20 + 0xF80]
	0x03A794F4 LDR X9, [X27]
	0x03A794F8 LDR X1, [X8]
	0x03A794FC MOVZ W0, 0x15
	0x03A79500 STR X9, [X31 + 0x88]
	0x03A79504 BL 0x2235BC0
	0x03A79508 LDR X1, [X28]
	0x03A7950C LDR X4, [X20]
	0x03A79510 MOV X3, X0
	0x03A79514 ADD X8, X31, 0x8
	0x03A79518 ADD X2, X31, 0x58
	0x03A7951C MOV X0, X21
	0x03A79520 BL 0x2240F24
	0x03A79524 LDUR V0, [X31 + 0x8]
	0x03A79528 LDUR V1, [X31 + 0x18]
	0x03A7952C LDR X27, [X31 + 0x58]
	0x03A79530 STP V0, V1, [X31 + 0x60]
	0x03A79534 LDR X1, [X31]
	0x03A79538 ADD X0, X31, 0x60
	0x03A7953C MOV W2, W31
	0x03A79540 MOV X3, X31
	0x03A79544 BL 0x3996828
	0x03A79548 CBZ X27, 0x3A798E0
	0x03A7954C STR X0, [X27 + 0x10]
	0x03A79550 LDR X27, [X31 + 0x58]
	0x03A79554 ADD X0, X31, 0x60
	0x03A79558 MOV X1, X26
	0x03A7955C MOV X2, X31
	0x03A79560 BL 0x3996BA8
	0x03A79564 CBZ X27, 0x3A798E4
	0x03A79568 STR X0, [X27 + 0x18]
	0x03A7956C LDR X26, [X31 + 0x58]
	0x03A79570 ADD X0, X31, 0x60
	0x03A79574 MOV X1, X24
	0x03A79578 MOV X2, X31
	0x03A7957C BL 0x3996BA8
	0x03A79580 CBZ X26, 0x3A798E8
	0x03A79584 STR X0, [X26 + 0x20]
	0x03A79588 LDR X24, [X31 + 0x58]
	0x03A7958C ADD X0, X31, 0x60
	0x03A79590 ADD X1, X31, 0x88
	0x03A79594 MOV X2, X31
	0x03A79598 BL 0x3996BA8
	0x03A7959C CBZ X24, 0x3A798EC
	0x03A795A0 STR X0, [X24 + 0x28]
	0x03A795A4 LDR X24, [X31 + 0x58]
	0x03A795A8 ADD X0, X31, 0x60
	0x03A795AC ADD X1, X31, 0x98
	0x03A795B0 MOV X2, X31
	0x03A795B4 BL 0x3996BA8
	0x03A795B8 CBZ X24, 0x3A798F0
	0x03A795BC STR X0, [X24 + 0x30]
	0x03A795C0 LDR X24, [X31 + 0x58]
	0x03A795C4 CBZ X24, 0x3A798F4
	0x03A795C8 STR X19, [X24 + 0x38]
	0x03A795CC LDR W8, [X23 + 0x1E8]
	0x03A795D0 STR S8, [X24 + 0x44]
	0x03A795D4 STR W8, [X24 + 0x40]
	0x03A795D8 LDR V0, [X23 + 0x1F8]
	0x03A795DC CMP W8, 0x4
	0x03A795E0 STR S0, [X24 + 0x48]
	0x03A795E4 B.NE 0x3A79610
	0x03A795E8 ADRP X8, 0x6DD000
	0x03A795EC LDR X8, [X8 + 0x608]
	0x03A795F0 LDR V8, [X23 + 0x1F0]
	0x03A795F4 LDR X0, [X8]
	0x03A795F8 LDR W8, [X0 + 0xE0]
	0x03A795FC CBNZ W8, 0x3A79604
	0x03A79600 BL 0x1C16DFC
	0x03A79604 MOV V0.16B, V8.16B
	0x03A79608 BL 0x3A78B84
	0x03A7960C B 0x3A79614
	0x03A79610 MOV X0, X31
	0x03A79614 STR X0, [X24 + 0x50]
	0x03A79618 CBZ X25, 0x3A798F8
	0x03A7961C LDR X0, [X25 + 0x18]
	0x03A79620 CBZ X0, 0x3A798FC
	0x03A79624 MOV X1, X31
	0x03A79628 BL 0x3C201A0
	0x03A7962C CMP W0, 0x8
	0x03A79630 B.EQ 0x3A79644
	0x03A79634 CMP W0, 0x3B
	0x03A79638 B.EQ 0x3A79644
	0x03A7963C CMP W0, 0x4A
	0x03A79640 B.NE 0x3A79654
	0x03A79644 LDR X8, [X31 + 0x58]
	0x03A79648 CBZ X8, 0x3A79900
	0x03A7964C MOVZ W9, 0x1
	0x03A79650 B 0x3A79660
	0x03A79654 LDR X8, [X31 + 0x58]
	0x03A79658 CBZ X8, 0x3A79910
	0x03A7965C MOV W9, W31
	0x03A79660 STRB W9, [X8 + 0x58]
	0x03A79664 ADRP X8, 0x6DD000
	0x03A79668 LDR X8, [X8 + 0xF98]
	0x03A7966C LDR X8, [X8]
	0x03A79670 LDR W9, [X8 + 0xE0]
	0x03A79674 CBNZ W9, 0x3A7968C
	0x03A79678 MOV X0, X8
	0x03A7967C BL 0x1C16DFC
	0x03A79680 ADRP X8, 0x6DD000
	0x03A79684 LDR X8, [X8 + 0xF98]
	0x03A79688 LDR X8, [X8]
	0x03A7968C LDR X9, [X8 + 0xB8]
	0x03A79690 LDR X23, [X9 + 0x8]

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+64], X30
	003 Move [X31+80], X26
	004 Move [X31+88], X25
	005 Move [X31+96], X24
	006 Move [X31+104], X23
	007 Move [X31+112], X22
	008 Move [X31+120], X21
	009 Move [X31+128], X20
	010 Move [X31+136], X19
	011 Move X26, 0x96A000
	012 Move W8, [X26+754]
	013 Move W21, W6
	014 Move W20, W5
	015 Move W22, W4
	016 Move W23, W3
	017 Move W24, W2
	018 Move W25, W1
	019 Move X19, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {29}
	024 Move X0, 0x6DE000
	025 Move X0, [X0+3848]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X26+754], W8
	029 Move X26, X19
	030 Add X26, X26, 16
	031 Move W8, [X26]
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move W8, [X19+20]
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Move W8, [X19+28]
	036 NotImplemented "Instruction CMP not yet implemented."
	037 NotImplemented "Instruction CMP not yet implemented."
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Move X8, [X19+72]
	040 Compare X8, 0
	041 JumpIfEqual {44}
	042 NotImplemented "Instruction CMP not yet implemented."
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Move X8, 0x6DE000
	045 Move X8, [X8+3848]
	046 NotImplemented "Instruction MOVI not yet implemented."
	047 Move W9, 1
	048 Move [X31+8], W25
	049 Move [X31+12], W24
	050 Move X0, [X8]
	051 Move [X31+44], V0
	052 Move [X31+28], V0
	053 Move [X31+16], W9
	054 Move [X31+20], W23
	055 Move [X31+24], W31
	056 Move W8, [X0+224]
	057 Compare W8, 0
	058 JumpIfNotEqual {60}
	059 Call 0x1C17DFC
	060 Move W1, 4
	061 Move W0, W22
	062 Call TaaPersistentData.<Init>g__CheckFormat|12_0, X0, X1
	063 Move W1, W0
	064 Add X0, X31, 8
	065 Move X2, X31
	066 Call RenderTextureDescriptor.set_graphicsFormat, X0, X1
	067 Add X0, X31, 8
	068 Move W1, W31
	069 Move X2, X31
	070 Call RenderTextureDescriptor.set_sRGB, X0, X1
	071 Add X0, X31, 8
	072 Move W1, W31
	073 Move X2, X31
	074 Call RenderTextureDescriptor.set_depthBufferBits, X0, X1
	075 Add X0, X31, 8
	076 Move W1, W31
	077 Move X2, X31
	078 Move [X31+40], W21
	079 Move [X31+48], W20
	080 Move [X31+56], W31
	081 Call RenderTextureDescriptor.set_useMipMap, X0, X1
	082 Add X0, X31, 8
	083 Move W1, W31
	084 Move X2, X31
	085 Call RenderTextureDescriptor.set_autoGenerateMips, X0, X1
	086 Add X0, X31, 8
	087 Move W1, W31
	088 Move X2, X31
	089 Call RenderTextureDescriptor.set_enableRandomWrite, X0, X1
	090 Add X0, X31, 8
	091 Move W1, W31
	092 Move X2, X31
	093 Call RenderTextureDescriptor.set_bindMS, X0, X1
	094 Add X0, X31, 8
	095 Move W1, W31
	096 Move X2, X31
	097 Call RenderTextureDescriptor.set_useDynamicScale, X0, X1
	098 Move W8, [X31+56]
	099 NotImplemented "Instruction LDUR not yet implemented."
	100 NotImplemented "Instruction LDUR not yet implemented."
	101 NotImplemented "Instruction LDUR not yet implemented."
	102 Move X0, X19
	103 Move [X26+48], W8
	104 Move [X26+16], V1
	105 Move [X26+24], V0
	106 Move [X26], V2
	107 Call TaaPersistentData.DeallocateTargets, X0
	108 Move X20, [X31+128]
	109 Move X19, [X31+136]
	110 Move X22, [X31+112]
	111 Move X21, [X31+120]
	112 Move X24, [X31+96]
	113 Move X23, [X31+104]
	114 Move X26, [X31+80]
	115 Move X25, [X31+88]
	116 Move X30, [X31+64]
	117 Add X31, X31, 144
	118 Return 

Method: System.Boolean AllocateTargets(System.Boolean xrMultipassEnabled = False)

Disassembly:
	0x03A79758 BL 0x1C16F10
	0x03A7975C ADRP X8, 0x6DD000
	0x03A79760 LDR X8, [X8 + 0xFA0]
	0x03A79764 MOV X2, X31
	0x03A79768 MOV X23, X0
	0x03A7976C LDR X1, [X8]
	0x03A79770 BL 0x39B19AC
	0x03A79774 ADRP X8, 0x6DD000
	0x03A79778 LDR X8, [X8 + 0xFA8]
	0x03A7977C ADD X2, X31, 0x28
	0x03A79780 MOV X0, X21
	0x03A79784 MOV X3, X23
	0x03A79788 LDR X1, [X8]
	0x03A7978C ADRP X8, 0x6DD000
	0x03A79790 LDR X8, [X8 + 0xF80]
	0x03A79794 LDR X4, [X8]
	0x03A79798 ADD X8, X31, 0x8
	0x03A7979C BL 0x2240F24
	0x03A797A0 LDUR V0, [X31 + 0x8]
	0x03A797A4 LDUR V1, [X31 + 0x18]
	0x03A797A8 LDR X21, [X31 + 0x28]
	0x03A797AC STP V0, V1, [X31 + 0x30]
	0x03A797B0 ADD X0, X31, 0x30
	0x03A797B4 ADD X1, X31, 0x98
	0x03A797B8 MOV W2, W31
	0x03A797BC MOV X3, X31
	0x03A797C0 BL 0x3996828
	0x03A797C4 CBZ X21, 0x3A79904
	0x03A797C8 STR X0, [X21 + 0x10]
	0x03A797CC LDR X21, [X31 + 0x28]
	0x03A797D0 LDR X1, [X31]
	0x03A797D4 ADD X0, X31, 0x30
	0x03A797D8 MOV X2, X31
	0x03A797DC BL 0x3996BA8
	0x03A797E0 CBZ X21, 0x3A79908
	0x03A797E4 STR X0, [X21 + 0x18]
	0x03A797E8 LDR X8, [X31 + 0x28]
	0x03A797EC CBZ X8, 0x3A7990C
	0x03A797F0 SUB W9, W22, 0x1
	0x03A797F4 STR X19, [X8 + 0x38]
	0x03A797F8 STR W9, [X8 + 0x40]
	0x03A797FC ADRP X8, 0x6DD000
	0x03A79800 LDR X8, [X8 + 0xF98]
	0x03A79804 LDR X8, [X8]
	0x03A79808 LDR W9, [X8 + 0xE0]
	0x03A7980C CBNZ W9, 0x3A79824
	0x03A79810 MOV X0, X8
	0x03A79814 BL 0x1C16DFC
	0x03A79818 ADRP X8, 0x6DD000
	0x03A7981C LDR X8, [X8 + 0xF98]
	0x03A79820 LDR X8, [X8]
	0x03A79824 LDR X9, [X8 + 0xB8]
	0x03A79828 LDR X19, [X9 + 0x10]
	0x03A7982C CBNZ X19, 0x3A79894
	0x03A79830 LDR W9, [X8 + 0xE0]
	0x03A79834 CBNZ W9, 0x3A7984C
	0x03A79838 MOV X0, X8
	0x03A7983C BL 0x1C16DFC
	0x03A79840 ADRP X8, 0x6DD000
	0x03A79844 LDR X8, [X8 + 0xF98]
	0x03A79848 LDR X8, [X8]
	0x03A7984C ADRP X9, 0x6DD000
	0x03A79850 LDR X8, [X8 + 0xB8]
	0x03A79854 LDR X9, [X9 + 0xF70]
	0x03A79858 LDR X20, [X8]
	0x03A7985C LDR X0, [X9]
	0x03A79860 BL 0x1C16F10
	0x03A79864 ADRP X8, 0x6DD000
	0x03A79868 LDR X8, [X8 + 0xF90]
	0x03A7986C MOV X19, X0
	0x03A79870 LDR X2, [X8]
	0x03A79874 MOV X1, X20

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x96A000
	007 Move W8, [X21+755]
	008 Move W20, W1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {25}
	014 Move X0, 0x6D8000
	015 Move X0, [X0+2480]
	016 Call 0x1C17CF4
	017 Move X0, 0x6DE000
	018 Move X0, [X0+3856]
	019 Call 0x1C17CF4
	020 Move X0, 0x6DE000
	021 Move X0, [X0+3864]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+755], W8
	025 Move X8, [X19+72]
	026 NotImplemented "Instruction CMP not yet implemented."
	027 NotImplemented "Instruction CSET not yet implemented."
	028 Compare X8, 0
	029 JumpIfEqual {34}
	030 Move TEMP, X20
	031 And TEMP, TEMP, 1
	032 Compare TEMP, 1
	033 JumpIfEqual {58}
	034 Move X8, 0x6D8000
	035 Move X8, [X8+2480]
	036 Add X22, X19, 16
	037 Move X0, [X8]
	038 Move W8, [X0+224]
	039 Compare W8, 0
	040 JumpIfNotEqual {42}
	041 Call 0x1C17DFC
	042 Move X8, 0x6DE000
	043 Move X8, [X8+3864]
	044 Move S0, W31
	045 Move W1, 1
	046 Move W2, 1
	047 Move X5, [X8]
	048 Move W4, 1
	049 Move X0, X22
	050 Move W3, W31
	051 Move X6, X31
	052 Call RTHandles.Alloc, X0, X1, X2, X3, X4, V0, X5
	053 Move [X19+72], X0
	054 Move TEMP, X20
	055 And TEMP, TEMP, 1
	056 Compare TEMP, 1
	057 JumpIfNotEqual {82}
	058 Move X8, [X19+80]
	059 Compare X8, 0
	060 JumpIfNotEqual {82}
	061 Move X8, 0x6D8000
	062 Move X8, [X8+2480]
	063 Add X20, X19, 16
	064 Move X0, [X8]
	065 Move W8, [X0+224]
	066 Compare W8, 0
	067 JumpIfNotEqual {69}
	068 Call 0x1C17DFC
	069 Move X8, 0x6DE000
	070 Move X8, [X8+3856]
	071 Move S0, W31
	072 Move W1, 1
	073 Move W2, 1
	074 Move X5, [X8]
	075 Move W4, 1
	076 Move X0, X20
	077 Move W3, W31
	078 Move X6, X31
	079 Move W21, 1
	080 Call RTHandles.Alloc, X0, X1, X2, X3, X4, V0, X5
	081 Move [X19+80], X0
	082 Move W0, W21
	083 Move X20, [X31+32]
	084 Move X19, [X31+40]
	085 Move X22, [X31+16]
	086 Move X21, [X31+24]
	087 Move X30, [X31+48]
	088 Return X0

Method: System.Void DeallocateTargets()

Disassembly:
	0x03A79710 BL 0x224107C
	0x03A79714 ADD X0, X31, 0x60
	0x03A79718 MOV X1, X31
	0x03A7971C BL 0x39972C0
	0x03A79720 CMP W29, W22
	0x03A79724 B.EQ 0x3A798B8
	0x03A79728 CBZ X19, 0x3A798DC
	0x03A7972C MOV X0, X19
	0x03A79730 MOV X1, X31
	0x03A79734 BL 0x3C14714
	0x03A79738 CBZ X0, 0x3A798DC
	0x03A7973C MOV X1, X31
	0x03A79740 BL 0x3C14110
	0x03A79744 ADRP X8, 0x6D7000
	0x03A79748 LDR X8, [X8 + 0x598]
	0x03A7974C MOV W22, W0
	0x03A79750 LDR X8, [X8]
	0x03A79754 MOV X0, X8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, X0
	005 Move X19, X0
	006 Add X20, X20, 72
	007 Move X0, [X20]
	008 Compare X0, 0
	009 JumpIfEqual {12}
	010 Move X1, X31
	011 Call RTHandle.Release, X0
	012 Move X0, [X19+80]
	013 Compare X0, 0
	014 JumpIfEqual {17}
	015 Move X1, X31
	016 Call RTHandle.Release, X0
	017 NotImplemented "Instruction MOVI not yet implemented."
	018 Move [X20], X31
	019 Move [X20+8], X31
	020 Move [X19+88], D0
	021 Move X20, [X31+16]
	022 Move X19, [X31+24]
	023 Move X30, [X31+32]
	024 Return 

Method: System.Void .cctor()

Disassembly:
	0x03A79878 MOV X3, X31
	0x03A7987C BL 0x25C78AC
	0x03A79880 ADRP X8, 0x6DD000
	0x03A79884 LDR X8, [X8 + 0xF98]
	0x03A79888 LDR X8, [X8]
	0x03A7988C LDR X8, [X8 + 0xB8]
	0x03A79890 STR X19, [X8 + 0x10]
	0x03A79894 ADRP X8, 0x6DD000
	0x03A79898 LDR X8, [X8 + 0xF78]
	0x03A7989C LDR X2, [X8]
	0x03A798A0 ADD X0, X31, 0x30
	0x03A798A4 MOV X1, X19
	0x03A798A8 BL 0x224107C
	0x03A798AC ADD X0, X31, 0x30
	0x03A798B0 MOV X1, X31
	0x03A798B4 BL 0x39972C0
	0x03A798B8 LDP X20, X19, [X31 + 0xF0]
	0x03A798BC LDP X22, X21, [X31 + 0xE0]
	0x03A798C0 LDP X24, X23, [X31 + 0xD0]
	0x03A798C4 LDP X26, X25, [X31 + 0xC0]
	0x03A798C8 LDP X28, X27, [X31 + 0xB0]
	0x03A798CC LDP X29, X30, [X31 + 0xA0]
	0x03A798D0 LDR V8, [X31 + 0x90]
	0x03A798D4 ADD X31, X31, 0x100
	0x03A798D8 RET
	0x03A798DC BL 0x1C16F20
	0x03A798E0 BL 0x1C16F20
	0x03A798E4 BL 0x1C16F20
	0x03A798E8 BL 0x1C16F20
	0x03A798EC BL 0x1C16F20
	0x03A798F0 BL 0x1C16F20
	0x03A798F4 BL 0x1C16F20
	0x03A798F8 BL 0x1C16F20
	0x03A798FC BL 0x1C16F20
	0x03A79900 BL 0x1C16F20
	0x03A79904 BL 0x1C16F20
	0x03A79908 BL 0x1C16F20

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x96A000
	007 Move X22, 0x6DC000
	008 Move X19, 0x6DE000
	009 Move X20, 0x6DE000
	010 Move W8, [X21+756]
	011 Move X22, [X22+3200]
	012 Move X19, [X19+3872]
	013 Move X20, [X20+3848]
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {29}
	018 Move X0, 0x6DC000
	019 Move X0, [X0+3200]
	020 Call 0x1C17CF4
	021 Move X0, 0x6DE000
	022 Move X0, [X0+3848]
	023 Call 0x1C17CF4
	024 Move X0, 0x6DE000
	025 Move X0, [X0+3872]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X21+756], W8
	029 Move X0, [X22]
	030 Move W1, 4
	031 Call 0x1C17D6C
	032 Move X1, [X19]
	033 Move X2, X31
	034 Move X19, X0
	035 Call RuntimeHelpers.InitializeArray, X0, X1
	036 Move X8, [X20]
	037 Move X22, [X31+16]
	038 Move X21, [X31+24]
	039 Move X8, [X8+184]
	040 Move [X8], X19
	041 Move X20, [X31+32]
	042 Move X19, [X31+40]
	043 Move X30, [X31+48]
	044 Return 

Method: UnityEngine.Experimental.Rendering.GraphicsFormat <Init>g__CheckFormat|12_0(UnityEngine.Experimental.Rendering.GraphicsFormat format, UnityEngine.Experimental.Rendering.FormatUsage usage)

Disassembly:
	0x03A79694 CBNZ X23, 0x3A796FC
	0x03A79698 LDR W9, [X8 + 0xE0]
	0x03A7969C CBNZ W9, 0x3A796B4
	0x03A796A0 MOV X0, X8
	0x03A796A4 BL 0x1C16DFC
	0x03A796A8 ADRP X8, 0x6DD000
	0x03A796AC LDR X8, [X8 + 0xF98]
	0x03A796B0 LDR X8, [X8]
	0x03A796B4 ADRP X9, 0x6DD000
	0x03A796B8 LDR X8, [X8 + 0xB8]
	0x03A796BC LDR X9, [X9 + 0xF70]
	0x03A796C0 LDR X24, [X8]
	0x03A796C4 LDR X0, [X9]
	0x03A796C8 BL 0x1C16F10
	0x03A796CC ADRP X8, 0x6DD000
	0x03A796D0 LDR X8, [X8 + 0xF88]
	0x03A796D4 MOV X23, X0
	0x03A796D8 LDR X2, [X8]
	0x03A796DC MOV X1, X24
	0x03A796E0 MOV X3, X31
	0x03A796E4 BL 0x25C78AC
	0x03A796E8 ADRP X8, 0x6DD000
	0x03A796EC LDR X8, [X8 + 0xF98]
	0x03A796F0 LDR X8, [X8]
	0x03A796F4 LDR X8, [X8 + 0xB8]
	0x03A796F8 STR X23, [X8 + 0x8]
	0x03A796FC ADRP X8, 0x6DD000
	0x03A79700 LDR X8, [X8 + 0xF78]
	0x03A79704 LDR X2, [X8]
	0x03A79708 ADD X0, X31, 0x60
	0x03A7970C MOV X1, X23

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x96A000
	006 Move W8, [X21+757]
	007 Move W19, W1
	008 Move W20, W0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x6DE000
	014 Move X0, [X0+3848]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+757], W8
	018 Move W0, W20
	019 Move W1, W19
	020 Move X2, X31
	021 Call SystemInfo.IsFormatSupported, X0, X1
	022 Move TEMP, X0
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfNotEqual {32}
	026 Move W0, W20
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]
	031 Return X0
	032 Move X8, 0x6DE000
	033 Move X8, [X8+3848]
	034 Move X0, [X8]
	035 Move W8, [X0+224]
	036 Compare W8, 0
	037 JumpIfNotEqual {39}
	038 Call 0x1C17DFC
	039 Move W0, W19
	040 Move X20, [X31+16]
	041 Move X19, [X31+24]
	042 Move X30, [X31+32]
	043 Move X21, [X31+40]
	044 Call TaaPersistentData.<Init>g__FindFormat|12_1, X0
	045 Return X0

Method: UnityEngine.Experimental.Rendering.GraphicsFormat <Init>g__FindFormat|12_1(UnityEngine.Experimental.Rendering.FormatUsage usage)

Disassembly:
	0x03A7990C BL 0x1C16F20
	0x03A79910 BL 0x1C16F20
	0x03A79914 B 0x3A799D4
	0x03A79918 B 0x3A7993C
	0x03A7991C B 0x3A799D4
	0x03A79920 B 0x3A7993C
	0x03A79924 B 0x3A799D4
	0x03A79928 B 0x3A7993C
	0x03A7992C B 0x3A7993C
	0x03A79930 B 0x3A7993C
	0x03A79934 B 0x3A7993C
	0x03A79938 B 0x3A7993C
	0x03A7993C MOV X23, X0
	0x03A79940 CMP W1, 0x1
	0x03A79944 B.NE 0x3A79970
	0x03A79948 MOV X0, X23
	0x03A7994C BL 0x3EB1AD0
	0x03A79950 LDR X19, [X0]
	0x03A79954 BL 0x3EB1AE0
	0x03A79958 ADD X0, X31, 0x30
	0x03A7995C MOV X1, X31
	0x03A79960 BL 0x39972C0
	0x03A79964 CBZ X19, 0x3A798B8
	0x03A79968 MOV X0, X19
	0x03A7996C BL 0x1C16F18
	0x03A79970 MOV X19, X31
	0x03A79974 B 0x3A7997C
	0x03A79978 MOV X23, X0
	0x03A7997C ADD X0, X31, 0x30
	0x03A79980 MOV X1, X31
	0x03A79984 BL 0x39972C0
	0x03A79988 CBZ X19, 0x3A79A24
	0x03A7998C MOV X0, X19
	0x03A79990 BL 0x1C16F18
	0x03A79994 B 0x3A799D4
	0x03A79998 B 0x3A799D4
	0x03A7999C B 0x3A799D4
	0x03A799A0 B 0x3A799D4
	0x03A799A4 B 0x3A799D4
	0x03A799A8 B 0x3A799D4
	0x03A799AC B 0x3A799D4
	0x03A799B0 B 0x3A799D4
	0x03A799B4 B 0x3A799D4
	0x03A799B8 B 0x3A799D4
	0x03A799BC B 0x3A799D4
	0x03A799C0 B 0x3A799D4
	0x03A799C4 B 0x3A799D4
	0x03A799C8 B 0x3A799D4
	0x03A799CC B 0x3A799D4
	0x03A799D0 B 0x3A799D4
	0x03A799D4 MOV X23, X0
	0x03A799D8 CMP W1, 0x1
	0x03A799DC B.NE 0x3A79A08
	0x03A799E0 MOV X0, X23
	0x03A799E4 BL 0x3EB1AD0
	0x03A799E8 LDR X24, [X0]
	0x03A799EC BL 0x3EB1AE0
	0x03A799F0 ADD X0, X31, 0x60
	0x03A799F4 MOV X1, X31
	0x03A799F8 BL 0x39972C0
	0x03A799FC CBZ X24, 0x3A79720
	0x03A79A00 MOV X0, X24
	0x03A79A04 BL 0x1C16F18

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x96A000
	006 Move W8, [X20+758]
	007 Move W19, W0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x6DE000
	013 Move X0, [X0+3848]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+758], W8
	017 Move X21, 0x6DE000
	018 Move X21, [X21+3848]
	019 Move X20, X31
	020 Move X0, [X21]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {26}
	024 Call 0x1C17DFC
	025 Move X0, [X21]
	026 Move X8, [X0+184]
	027 Move X8, [X8]
	028 Compare X8, 0
	029 JumpIfEqual {73}
	030 NotImplemented "Instruction LDRSW not yet implemented."
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Move W9, [X0+224]
	033 Compare W9, 0
	034 JumpIfNotEqual {41}
	035 Call 0x1C17DFC
	036 Move X8, [X21]
	037 Move X8, [X8+184]
	038 Move X8, [X8]
	039 Compare X8, 0
	040 JumpIfEqual {73}
	041 Move W9, [X8+24]
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Add X8, X8, X20
	044 Move W0, [X8+32]
	045 Move W1, W19
	046 Move X2, X31
	047 Call SystemInfo.IsFormatSupported, X0, X1
	048 Move TEMP, X0
	049 And TEMP, TEMP, 1
	050 Compare TEMP, 1
	051 JumpIfEqual {54}
	052 Add X20, X20, 1
	053 Move W0, 59
	054 Move X0, [X21]
	055 Move W8, [X0+224]
	056 Compare W8, 0
	057 JumpIfNotEqual {60}
	058 Call 0x1C17DFC
	059 Move X0, [X21]
	060 Move X8, [X0+184]
	061 Move X8, [X8]
	062 Compare X8, 0
	063 JumpIfEqual {73}
	064 Move W9, [X8+24]
	065 NotImplemented "Instruction CMP not yet implemented."
	066 Add X8, X8, X20
	067 Move W0, [X8+32]
	068 Move X20, [X31+16]
	069 Move X19, [X31+24]
	070 Move X30, [X31+32]
	071 Move X21, [X31+40]
	072 Return X0
	073 Call 0x1C17F20
	074 Call 0x1C17F28

