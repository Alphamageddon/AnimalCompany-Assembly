Type: UnityEngine.Rendering.Universal.Bloom

Method: System.Boolean IsActive()

Disassembly:
	0x03A54CB8 STP V2, V3, [X31 + 0x2E0]
	0x03A54CBC BL 0x3C271CC
	0x03A54CC0 LDP V0, V1, [X31 + 0x200]
	0x03A54CC4 LDP V2, V3, [X31 + 0x220]
	0x03A54CC8 ADD X8, X31, 0x200
	0x03A54CCC ADD X0, X31, 0x140
	0x03A54CD0 STP V0, V1, [X31 + 0x100]
	0x03A54CD4 LDP V0, V1, [X31 + 0x240]
	0x03A54CD8 STP V2, V3, [X31 + 0x120]
	0x03A54CDC LDP V2, V3, [X31 + 0x260]
	0x03A54CE0 ADD X1, X31, 0x100
	0x03A54CE4 MOV X2, X31

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+72]
	003 Compare X0, 0
	004 JumpIfEqual {13}
	005 Move X8, [X0]
	006 Move X9, [X8+536]
	007 Move X1, [X8+544]
	008 NotImplemented "Instruction BLR not yet implemented."
	009 NotImplemented "Instruction FCMP not yet implemented."
	010 NotImplemented "Instruction CSET not yet implemented."
	011 Move X30, [X31+16]
	012 Return X0
	013 Call 0x1C17F20

Method: System.Boolean IsTileCompatible()

Disassembly:
	0x03A54CE8 STP V0, V1, [X31 + 0x140]
	0x03A54CEC STP V2, V3, [X31 + 0x160]

ISIL:
	001 Move W0, W31
	002 Return X0

Method: System.Void .ctor()

Disassembly:
	0x03A54CF0 BL 0x3C27F74
	0x03A54CF4 ADRP X25, 0x702000
	0x03A54CF8 LDP V0, V1, [X31 + 0x200]
	0x03A54CFC LDP V2, V3, [X31 + 0x220]
	0x03A54D00 LDR X25, [X25 + 0x188]
	0x03A54D04 STP V0, V1, [X31 + 0x300]
	0x03A54D08 STP V2, V3, [X31 + 0x320]
	0x03A54D0C LDR X0, [X25]
	0x03A54D10 LDR W8, [X0 + 0xE0]
	0x03A54D14 CBNZ W8, 0x3A54D20
	0x03A54D18 BL 0x1C16DFC
	0x03A54D1C LDR X0, [X25]
	0x03A54D20 LDR X8, [X0 + 0xB8]
	0x03A54D24 MOV X0, X21
	0x03A54D28 MOV X1, X31
	0x03A54D2C LDR W22, [X8]
	0x03A54D30 ADD X8, X31, 0xD8
	0x03A54D34 BL 0x3C4B274
	0x03A54D38 LDP V0, V1, [X24]
	0x03A54D3C LDR X8, [X31 + 0xF8]
	0x03A54D40 STP V0, V1, [X31 + 0x200]
	0x03A54D44 STR X8, [X31 + 0x220]
	0x03A54D48 CBZ X19, 0x3A54EC0
	0x03A54D4C LDP V0, V1, [X31 + 0x200]
	0x03A54D50 LDR X8, [X31 + 0x220]
	0x03A54D54 ADD X2, X31, 0xB0
	0x03A54D58 MOV X0, X19
	0x03A54D5C MOV W1, W22
	0x03A54D60 MOV X3, X31
	0x03A54D64 SCVTF S8, W23
	0x03A54D68 STP V0, V1, [X31 + 0xB0]
	0x03A54D6C STR X8, [X31 + 0xD0]
	0x03A54D70 BL 0x3C4FCFC
	0x03A54D74 LDR X8, [X25]
	0x03A54D78 LDP V0, V1, [X31 + 0x300]
	0x03A54D7C LDP V2, V3, [X31 + 0x320]
	0x03A54D80 ADD X2, X31, 0x70
	0x03A54D84 LDR X8, [X8 + 0xB8]
	0x03A54D88 MOV X0, X19
	0x03A54D8C MOV X3, X31
	0x03A54D90 LDR W1, [X8 + 0x4]
	0x03A54D94 STP V0, V1, [X31 + 0x70]
	0x03A54D98 STP V2, V3, [X31 + 0x90]
	0x03A54D9C BL 0x3C4D038
	0x03A54DA0 LDR X8, [X25]
	0x03A54DA4 MOV X0, X19
	0x03A54DA8 MOV V0.16B, V8.16B
	0x03A54DAC B 0x3A54E8C
	0x03A54DB0 ADRP X22, 0x702000
	0x03A54DB4 LDR X22, [X22 + 0x188]
	0x03A54DB8 LDR X0, [X22]
	0x03A54DBC LDR W8, [X0 + 0xE0]
	0x03A54DC0 CBNZ W8, 0x3A54DCC
	0x03A54DC4 BL 0x1C16DFC
	0x03A54DC8 LDR X0, [X22]
	0x03A54DCC LDR X8, [X0 + 0xB8]
	0x03A54DD0 MOV X0, X31
	0x03A54DD4 LDR W21, [X8]
	0x03A54DD8 BL 0x3C1B370
	0x03A54DDC ADD X8, X31, 0x240
	0x03A54DE0 MOV X1, X31
	0x03A54DE4 BL 0x3C4B274
	0x03A54DE8 LDP V0, V1, [X31 + 0x240]
	0x03A54DEC LDR X8, [X31 + 0x260]
	0x03A54DF0 STP V0, V1, [X31 + 0x280]
	0x03A54DF4 STR X8, [X31 + 0x2A0]
	0x03A54DF8 CBZ X19, 0x3A54EC0
	0x03A54DFC LDP V0, V1, [X31 + 0x280]
	0x03A54E00 LDR X8, [X31 + 0x2A0]
	0x03A54E04 ADD X2, X31, 0x40
	0x03A54E08 MOV X0, X19
	0x03A54E0C MOV W1, W21
	0x03A54E10 MOV X3, X31
	0x03A54E14 STP V0, V1, [X31 + 0x40]
	0x03A54E18 STR X8, [X31 + 0x60]
	0x03A54E1C BL 0x3C4FCFC
	0x03A54E20 LDR X8, [X22]
	0x03A54E24 ADRP X23, 0x984000
	0x03A54E28 LDRB W9, [X23 + 0xAC0]
	0x03A54E2C LDR X8, [X8 + 0xB8]
	0x03A54E30 LDR W21, [X8 + 0x4]
	0x03A54E34 CBNZ W9, 0x3A54E4C
	0x03A54E38 ADRP X0, 0x6A3000
	0x03A54E3C LDR X0, [X0 + 0x270]
	0x03A54E40 BL 0x1C16CF4
	0x03A54E44 MOVZ W8, 0x1
	0x03A54E48 STRB W8, [X23 + 0xAC0]
	0x03A54E4C ADRP X8, 0x6A3000
	0x03A54E50 LDR X8, [X8 + 0x270]
	0x03A54E54 ADD X2, X31, 0x0
	0x03A54E58 MOV X0, X19
	0x03A54E5C MOV W1, W21
	0x03A54E60 LDR X8, [X8]
	0x03A54E64 MOV X3, X31
	0x03A54E68 LDR X8, [X8 + 0xB8]
	0x03A54E6C LDP V1, V0, [X8 + 0x60]
	0x03A54E70 LDP V2, V3, [X8 + 0x40]
	0x03A54E74 STP V1, V0, [X31 + 0x20]
	0x03A54E78 STP V2, V3, [X31]
	0x03A54E7C BL 0x3C4D038
	0x03A54E80 LDR X8, [X22]
	0x03A54E84 FMOV S0, -1
	0x03A54E88 MOV X0, X19
	0x03A54E8C LDR X8, [X8 + 0xB8]
	0x03A54E90 LDR W1, [X8 + 0x8]
	0x03A54E94 MOV X2, X31
	0x03A54E98 BL 0x3C4CDDC
	0x03A54E9C AND W0, W20, 0x1
	0x03A54EA0 ADD X31, X31, 0x390
	0x03A54EA4 LDP X20, X19, [X31 + 0x40]
	0x03A54EA8 LDP X22, X21, [X31 + 0x30]
	0x03A54EAC LDP X24, X23, [X31 + 0x20]
	0x03A54EB0 LDP X30, X25, [X31 + 0x10]
	0x03A54EB4 LDR X29, [X31 + 0x8]
	0x03A54EB8 LDR V8, [X31], #0x50
	0x03A54EBC RET
	0x03A54EC0 BL 0x1C16F20
	0x03A54EC4 SUB X31, X31, 0x50
	0x03A54EC8 STP X30, X23, [X31 + 0x20]
	0x03A54ECC STP X22, X21, [X31 + 0x30]
	0x03A54ED0 STP X20, X19, [X31 + 0x40]
	0x03A54ED4 ADRP X23, 0x98E000
	0x03A54ED8 ADRP X22, 0x69F000
	0x03A54EDC LDRB W8, [X23 + 0x1D9]
	0x03A54EE0 LDR X22, [X22 + 0x5A8]
	0x03A54EE4 MOV X19, X2
	0x03A54EE8 MOV X20, X1
	0x03A54EEC MOV X21, X0
	0x03A54EF0 TBNZ X8, 0x0, 0x3A54F2C
	0x03A54EF4 ADRP X0, 0x69F000
	0x03A54EF8 LDR X0, [X0 + 0x5A8]
	0x03A54EFC BL 0x1C16CF4
	0x03A54F00 ADRP X0, 0x702000
	0x03A54F04 LDR X0, [X0 + 0x190]
	0x03A54F08 BL 0x1C16CF4
	0x03A54F0C ADRP X0, 0x702000
	0x03A54F10 LDR X0, [X0 + 0x198]
	0x03A54F14 BL 0x1C16CF4
	0x03A54F18 ADRP X0, 0x702000
	0x03A54F1C LDR X0, [X0 + 0x1A0]
	0x03A54F20 BL 0x1C16CF4
	0x03A54F24 MOVZ W8, 0x1
	0x03A54F28 STRB W8, [X23 + 0x1D9]
	0x03A54F2C LDR X0, [X22]
	0x03A54F30 STP X31, X31, [X31 + 0x10]
	0x03A54F34 STP X31, X31, [X31]
	0x03A54F38 LDR W22, [X21 + 0x30]
	0x03A54F3C LDR W8, [X0 + 0xE0]
	0x03A54F40 LDR W23, [X19 + 0x18]
	0x03A54F44 CBNZ W8, 0x3A54F4C
	0x03A54F48 BL 0x1C16DFC
	0x03A54F4C MOV W0, W22
	0x03A54F50 MOV W1, W23
	0x03A54F54 MOV X2, X31
	0x03A54F58 BL 0x337EE94
	0x03A54F5C LDR X8, [X21 + 0x40]
	0x03A54F60 CBZ X8, 0x3A55054
	0x03A54F64 MOV W1, W0
	0x03A54F68 MOV X0, X8
	0x03A54F6C BL 0x3A552EC

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X20, 0x98F000
	012 Move X23, 0x703000
	013 Move X21, 0x703000
	014 Move X27, 0x703000
	015 Move X26, 0x6FE000
	016 Move X25, 0x6FE000
	017 Move X24, 0x703000
	018 Move X22, 0x703000
	019 Move X23, [X23+152]
	020 Move X21, [X21+160]
	021 Move W8, [X20+466]
	022 Move X27, [X27+168]
	023 Move X26, [X26+1456]
	024 Move X25, [X25+1432]
	025 Move X24, [X24+176]
	026 Move X22, [X22+184]
	027 Move X19, X0
	028 Move TEMP, X8
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfEqual {55}
	032 Move X0, 0x6FE000
	033 Move X0, [X0+1432]
	034 Call 0x1C17CF4
	035 Move X0, 0x703000
	036 Move X0, [X0+168]
	037 Call 0x1C17CF4
	038 Move X0, 0x703000
	039 Move X0, [X0+152]
	040 Call 0x1C17CF4
	041 Move X0, 0x6FE000
	042 Move X0, [X0+1456]
	043 Call 0x1C17CF4
	044 Move X0, 0x703000
	045 Move X0, [X0+176]
	046 Call 0x1C17CF4
	047 Move X0, 0x703000
	048 Move X0, [X0+160]
	049 Call 0x1C17CF4
	050 Move X0, 0x703000
	051 Move X0, [X0+184]
	052 Call 0x1C17CF4
	053 Move W8, 1
	054 Move [X20+466], W8
	055 Move X0, [X23]
	056 Call 0x1C17F10
	057 Move W1, 1
	058 Move W3, 16
	059 Move W2, W31
	060 Move W4, W31
	061 Move X5, X31
	062 Move X20, X0
	063 Call ClampedIntParameter..ctor, X0, X1, X2, X3, X4
	064 Move [X19+56], X20
	065 Move X0, [X21]
	066 Call 0x1C17F10
	067 Move X8, -49713152
	068 Move V0, [X8+196]
	069 Move S1, W31
	070 Move W1, W31
	071 Move X2, X31
	072 Move X20, X0
	073 Call MinFloatParameter..ctor, X0, V0, V1, X1
	074 Move [X19+64], X20
	075 Move X0, [X21]
	076 Call 0x1C17F10
	077 Move S0, W31
	078 Move S1, W31
	079 Move W1, W31
	080 Move X2, X31
	081 Move X20, X0
	082 Call MinFloatParameter..ctor, X0, V0, V1, X1
	083 Move [X19+72], X20
	084 Move X0, [X27]
	085 Call 0x1C17F10
	086 Move X8, -49713152
	087 Move V0, [X8+268]
	088 Move S1, W31
	089 Move S2, 1
	090 Move W1, W31
	091 Move X2, X31
	092 Move X20, X0
	093 Call ClampedFloatParameter..ctor, X0, V0, V1, V2, X1
	094 Move [X19+80], X20
	095 Move X0, [X21]
	096 Call 0x1C17F10
	097 Move X8, -49713152
	098 Move V0, [X8+1084]
	099 Move S1, W31
	100 Move W1, W31
	101 Move X2, X31
	102 Move X20, X0
	103 Call MinFloatParameter..ctor, X0, V0, V1, X1
	104 Move [X19+88], X20
	105 Move X0, [X26]
	106 Call 0x1C17F10
	107 Move S0, 1
	108 Move S1, 1
	109 Move S2, 1
	110 Move S3, 1
	111 Move W3, 1
	112 Move W1, W31
	113 Move W2, W31
	114 Move W4, W31
	115 Move X5, X31
	116 Move X20, X0
	117 Call ColorParameter..ctor, X0, X1, X2, X3, X4, X5
	118 Move [X19+96], X20
	119 Move X0, [X25]
	120 Call 0x1C17F10
	121 Move W1, W31
	122 Move W2, W31
	123 Move X3, X31
	124 Move X20, X0
	125 Call BoolParameter..ctor, X0, X1, X2
	126 Move [X19+104], X20
	127 Move X0, [X24]
	128 Call 0x1C17F10
	129 Move W1, W31
	130 Move W2, W31
	131 Move X20, X0
	132 Call DownscaleParameter..ctor, X0, X1, X2
	133 Move [X19+112], X20
	134 Move X0, [X23]
	135 Call 0x1C17F10
	136 Move W1, 6
	137 Move W2, 2
	138 Move W3, 8
	139 Move W4, W31
	140 Move X5, X31
	141 Move X20, X0
	142 Call ClampedIntParameter..ctor, X0, X1, X2, X3, X4
	143 Move [X19+120], X20
	144 Move X0, [X22]
	145 Call 0x1C17F10
	146 Move X1, X31
	147 Move W2, W31
	148 Move X3, X31
	149 Move X20, X0
	150 Call TextureParameter..ctor, X0, X1, X2
	151 Move [X19+128], X20
	152 Move X0, [X21]
	153 Call 0x1C17F10
	154 Move S0, W31
	155 Move S1, W31
	156 Move W1, W31
	157 Move X2, X31
	158 Move X20, X0
	159 Call MinFloatParameter..ctor, X0, V0, V1, X1
	160 Move [X19+136], X20
	161 Move X0, X19
	162 Move X20, [X31+64]
	163 Move X19, [X31+72]
	164 Move X22, [X31+48]
	165 Move X21, [X31+56]
	166 Move X24, [X31+32]
	167 Move X23, [X31+40]
	168 Move X26, [X31+16]
	169 Move X25, [X31+24]
	170 Move X1, X31
	171 Move X30, [X31+80]
	172 Move X27, [X31+88]
	173 Call VolumeComponent..ctor, X0
	174 Return 

