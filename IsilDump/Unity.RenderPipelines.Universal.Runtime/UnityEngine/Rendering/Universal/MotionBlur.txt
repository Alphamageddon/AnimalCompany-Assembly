Type: UnityEngine.Rendering.Universal.MotionBlur

Method: System.Boolean IsActive()

Disassembly:
	0x03A5B144 ADD X0, X31, 0x98
	0x03A5B148 MOV X1, X31
	0x03A5B14C BL 0x39B1DB4
	0x03A5B150 CBZ X20, 0x3A5B0F0
	0x03A5B154 MOV X0, X20
	0x03A5B158 BL 0x1C16F18
	0x03A5B15C MOV X20, X31
	0x03A5B160 B 0x3A5B168
	0x03A5B164 MOV X19, X0
	0x03A5B168 ADD X0, X31, 0x98
	0x03A5B16C MOV X1, X31
	0x03A5B170 BL 0x39B1DB4
	0x03A5B174 CBNZ X20, 0x3A5B180
	0x03A5B178 MOV X0, X19
	0x03A5B17C BL 0x1D2C690
	0x03A5B180 MOV X0, X20
	0x03A5B184 BL 0x1C16F18
	0x03A5B188 BL 0x1990590
	0x03A5B18C STR X30, [X31 - 0x30]!
	0x03A5B190 STP X22, X21, [X31 + 0x10]
	0x03A5B194 STP X20, X19, [X31 + 0x20]
	0x03A5B198 ADRP X21, 0x987000
	0x03A5B19C ADRP X22, 0x6F5000

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move X0, [X0+72]
	005 Compare X0, 0
	006 JumpIfEqual {25}
	007 Move X8, [X0]
	008 Move X9, [X8+536]
	009 Move X1, [X8+544]
	010 NotImplemented "Instruction BLR not yet implemented."
	011 NotImplemented "Instruction FCMP not yet implemented."
	012 Move X0, [X19+56]
	013 Compare X0, 0
	014 JumpIfEqual {25}
	015 Move X8, [X0]
	016 Move X9, [X8+536]
	017 Move X1, [X8+544]
	018 NotImplemented "Instruction BLR not yet implemented."
	019 NotImplemented "Instruction CMP not yet implemented."
	020 NotImplemented "Instruction CSET not yet implemented."
	021 Move W0, W31
	022 Move X30, [X31+16]
	023 Move X19, [X31+24]
	024 Return X0
	025 Call 0x1C17F20

Method: System.Boolean IsTileCompatible()

Disassembly:
	0x03A5B1A0 ADRP X19, 0x6FB000
	0x03A5B1A4 ADRP X20, 0x6FB000

ISIL:
	001 Move W0, W31
	002 Return X0

Method: System.Void .ctor()

Disassembly:
	0x03A5B1A8 LDRB W8, [X21 + 0x215]
	0x03A5B1AC LDR X22, [X22 + 0x598]
	0x03A5B1B0 LDR X19, [X19 + 0x3B0]
	0x03A5B1B4 LDR X20, [X20 + 0x3A0]
	0x03A5B1B8 TBNZ X8, 0x0, 0x3A5B1E8
	0x03A5B1BC ADRP X0, 0x6FB000
	0x03A5B1C0 LDR X0, [X0 + 0x3A0]
	0x03A5B1C4 BL 0x1C16CF4
	0x03A5B1C8 ADRP X0, 0x6F5000
	0x03A5B1CC LDR X0, [X0 + 0x598]
	0x03A5B1D0 BL 0x1C16CF4
	0x03A5B1D4 ADRP X0, 0x6FB000
	0x03A5B1D8 LDR X0, [X0 + 0x3B0]
	0x03A5B1DC BL 0x1C16CF4
	0x03A5B1E0 MOVZ W8, 0x1
	0x03A5B1E4 STRB W8, [X21 + 0x215]
	0x03A5B1E8 LDR X0, [X22]
	0x03A5B1EC BL 0x1C16F10
	0x03A5B1F0 LDR X1, [X19]
	0x03A5B1F4 MOV X2, X31
	0x03A5B1F8 MOV X19, X0
	0x03A5B1FC BL 0x39B19AC
	0x03A5B200 LDR X8, [X20]
	0x03A5B204 LDP X22, X21, [X31 + 0x10]
	0x03A5B208 LDR X8, [X8 + 0xB8]
	0x03A5B20C STR X19, [X8]
	0x03A5B210 LDP X20, X19, [X31 + 0x20]
	0x03A5B214 LDR X30, [X31], #0x30
	0x03A5B218 RET
	0x03A5B21C STP X30, X25, [X31 - 0x40]!
	0x03A5B220 STP X24, X23, [X31 + 0x10]
	0x03A5B224 STP X22, X21, [X31 + 0x20]
	0x03A5B228 STP X20, X19, [X31 + 0x30]
	0x03A5B22C ADRP X23, 0x987000
	0x03A5B230 ADRP X22, 0x6F8000
	0x03A5B234 LDRB W8, [X23 + 0x216]
	0x03A5B238 LDR X22, [X22 + 0xFF0]
	0x03A5B23C MOV W21, W2
	0x03A5B240 MOV W20, W1
	0x03A5B244 MOV X19, X0
	0x03A5B248 TBNZ X8, 0x0, 0x3A5B284
	0x03A5B24C ADRP X0, 0x6FB000
	0x03A5B250 LDR X0, [X0 + 0x3B8]
	0x03A5B254 BL 0x1C16CF4
	0x03A5B258 ADRP X0, 0x6F5000
	0x03A5B25C LDR X0, [X0 + 0x598]
	0x03A5B260 BL 0x1C16CF4
	0x03A5B264 ADRP X0, 0x6F8000
	0x03A5B268 LDR X0, [X0 + 0xFF0]
	0x03A5B26C BL 0x1C16CF4
	0x03A5B270 ADRP X0, 0x6FB000
	0x03A5B274 LDR X0, [X0 + 0x3C0]
	0x03A5B278 BL 0x1C16CF4
	0x03A5B27C MOVZ W8, 0x1
	0x03A5B280 STRB W8, [X23 + 0x216]
	0x03A5B284 LDR X0, [X22]
	0x03A5B288 ADRP X24, 0x6F5000
	0x03A5B28C ADRP X23, 0x6FB000
	0x03A5B290 ADRP X22, 0x6FB000
	0x03A5B294 LDR W8, [X0 + 0xE0]
	0x03A5B298 LDR X24, [X24 + 0x598]
	0x03A5B29C LDR X23, [X23 + 0x3C0]
	0x03A5B2A0 LDR X22, [X22 + 0x3B8]
	0x03A5B2A4 CBNZ W8, 0x3A5B2AC
	0x03A5B2A8 BL 0x1C16DFC
	0x03A5B2AC MOV X0, X19

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x988000
	008 Move X23, 0x6FC000
	009 Move X22, 0x6FC000
	010 Move X21, 0x6FC000
	011 Move W8, [X20+517]
	012 Move X23, [X23+840]
	013 Move X22, [X22+848]
	014 Move X21, [X21+168]
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {31}
	020 Move X0, 0x6FC000
	021 Move X0, [X0+168]
	022 Call 0x1C17CF4
	023 Move X0, 0x6FC000
	024 Move X0, [X0+840]
	025 Call 0x1C17CF4
	026 Move X0, 0x6FC000
	027 Move X0, [X0+848]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X20+517], W8
	031 Move X0, [X23]
	032 Call 0x1C17F10
	033 Move W1, W31
	034 Move W2, W31
	035 Move X20, X0
	036 Call MotionBlurModeParameter..ctor, X0, X1, X2
	037 Move [X19+56], X20
	038 Move X0, [X22]
	039 Call 0x1C17F10
	040 Move W1, W31
	041 Move W2, W31
	042 Move X20, X0
	043 Call MotionBlurQualityParameter..ctor, X0, X1, X2
	044 Move [X19+64], X20
	045 Move X0, [X21]
	046 Call 0x1C17F10
	047 Move S0, W31
	048 Move S1, W31
	049 Move S2, 1
	050 Move W1, W31
	051 Move X2, X31
	052 Move X20, X0
	053 Call ClampedFloatParameter..ctor, X0, V0, V1, V2, X1
	054 Move [X19+72], X20
	055 Move X0, [X21]
	056 Call 0x1C17F10
	057 Move X8, -49741824
	058 Move X9, -49741824
	059 Move V0, [X8+512]
	060 Move V2, [X9+860]
	061 Move S1, W31
	062 Move W1, W31
	063 Move X2, X31
	064 Move X20, X0
	065 Call ClampedFloatParameter..ctor, X0, V0, V1, V2, X1
	066 Move [X19+80], X20
	067 Move X0, X19
	068 Move X20, [X31+32]
	069 Move X19, [X31+40]
	070 Move X22, [X31+16]
	071 Move X21, [X31+24]
	072 Move X1, X31
	073 Move X30, [X31+48]
	074 Move X23, [X31+56]
	075 Call VolumeComponent..ctor, X0
	076 Return 

