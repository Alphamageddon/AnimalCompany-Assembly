Type: UnityEngine.Rendering.Universal.ChannelMixer

Method: System.Boolean IsActive()

Disassembly:
	0x03A598E0 CMP W0, 0x1
	0x03A598E4 CSET W0, GT
	0x03A598E8 B 0x3A598F8
	0x03A598EC MOV W0, W31
	0x03A598F0 B 0x3A598F8
	0x03A598F4 MOVZ W0, 0x1
	0x03A598F8 LDP X30, X19, [X31], #0x10
	0x03A598FC RET
	0x03A59900 BL 0x1C16F20
	0x03A59904 MOV W0, W31
	0x03A59908 RET
	0x03A5990C STP X30, X25, [X31 - 0x40]!
	0x03A59910 STP X24, X23, [X31 + 0x10]
	0x03A59914 STP X22, X21, [X31 + 0x20]
	0x03A59918 STP X20, X19, [X31 + 0x30]
	0x03A5991C ADRP X20, 0x989000
	0x03A59920 ADRP X25, 0x6FD000
	0x03A59924 ADRP X23, 0x6FD000
	0x03A59928 ADRP X21, 0x6FD000
	0x03A5992C ADRP X24, 0x6F8000
	0x03A59930 ADRP X22, 0x6FD000
	0x03A59934 LDRB W8, [X20 + 0x1FD]
	0x03A59938 LDR X25, [X25 + 0x308]
	0x03A5993C LDR X23, [X23 + 0xA0]
	0x03A59940 LDR X21, [X21 + 0xA8]
	0x03A59944 LDR X24, [X24 + 0x598]
	0x03A59948 LDR X22, [X22 + 0x98]
	0x03A5994C MOV X19, X0
	0x03A59950 TBNZ X8, 0x0, 0x3A59998
	0x03A59954 ADRP X0, 0x6F8000
	0x03A59958 LDR X0, [X0 + 0x598]
	0x03A5995C BL 0x1C16CF4
	0x03A59960 ADRP X0, 0x6FD000
	0x03A59964 LDR X0, [X0 + 0xA8]
	0x03A59968 BL 0x1C16CF4
	0x03A5996C ADRP X0, 0x6FD000
	0x03A59970 LDR X0, [X0 + 0x98]
	0x03A59974 BL 0x1C16CF4
	0x03A59978 ADRP X0, 0x6FD000
	0x03A5997C LDR X0, [X0 + 0x308]
	0x03A59980 BL 0x1C16CF4
	0x03A59984 ADRP X0, 0x6FD000
	0x03A59988 LDR X0, [X0 + 0xA0]
	0x03A5998C BL 0x1C16CF4
	0x03A59990 MOVZ W8, 0x1
	0x03A59994 STRB W8, [X20 + 0x1FD]
	0x03A59998 LDR X0, [X25]
	0x03A5999C BL 0x1C16F10
	0x03A599A0 MOV W1, W31
	0x03A599A4 MOV W2, W31
	0x03A599A8 MOV X20, X0
	0x03A599AC BL 0x3A59B68
	0x03A599B0 STR X20, [X19 + 0x38]
	0x03A599B4 LDR X0, [X23]
	0x03A599B8 BL 0x1C16F10
	0x03A599BC FMOV S0, 10
	0x03A599C0 FMOV S1, W31
	0x03A599C4 MOV W1, W31
	0x03A599C8 MOV X2, X31
	0x03A599CC MOV X20, X0
	0x03A599D0 BL 0x39F2F34
	0x03A599D4 STR X20, [X19 + 0x40]
	0x03A599D8 LDR X0, [X23]
	0x03A599DC BL 0x1C16F10
	0x03A599E0 FMOV S0, 30
	0x03A599E4 FMOV S1, W31
	0x03A599E8 MOV W1, W31
	0x03A599EC MOV X2, X31
	0x03A599F0 MOV X20, X0
	0x03A599F4 BL 0x39F2F34
	0x03A599F8 STR X20, [X19 + 0x48]
	0x03A599FC LDR X0, [X21]
	0x03A59A00 BL 0x1C16F10
	0x03A59A04 FMOV S0, 1
	0x03A59A08 FMOV S1, 0.5
	0x03A59A0C FMOV S2, 1.5
	0x03A59A10 MOV W1, W31
	0x03A59A14 MOV X2, X31
	0x03A59A18 MOV X20, X0
	0x03A59A1C BL 0x39F30E4
	0x03A59A20 STR X20, [X19 + 0x50]
	0x03A59A24 LDR X0, [X24]
	0x03A59A28 BL 0x1C16F10
	0x03A59A2C MOV W1, W31
	0x03A59A30 MOV W2, W31

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move X0, [X0+56]
	005 Compare X0, 0
	006 JumpIfEqual {87}
	007 Move X8, [X0]
	008 Move X9, [X8+536]
	009 Move X1, [X8+544]
	010 NotImplemented "Instruction BLR not yet implemented."
	011 Move W8, 0x42C80000
	012 Move S1, W8
	013 NotImplemented "Instruction FCMP not yet implemented."
	014 Move X0, [X19+64]
	015 Compare X0, 0
	016 JumpIfEqual {87}
	017 Move X8, [X0]
	018 Move X9, [X8+536]
	019 Move X1, [X8+544]
	020 NotImplemented "Instruction BLR not yet implemented."
	021 NotImplemented "Instruction FCMP not yet implemented."
	022 Move X0, [X19+72]
	023 Compare X0, 0
	024 JumpIfEqual {87}
	025 Move X8, [X0]
	026 Move X9, [X8+536]
	027 Move X1, [X8+544]
	028 NotImplemented "Instruction BLR not yet implemented."
	029 NotImplemented "Instruction FCMP not yet implemented."
	030 Move X0, [X19+80]
	031 Compare X0, 0
	032 JumpIfEqual {87}
	033 Move X8, [X0]
	034 Move X9, [X8+536]
	035 Move X1, [X8+544]
	036 NotImplemented "Instruction BLR not yet implemented."
	037 NotImplemented "Instruction FCMP not yet implemented."
	038 Move X0, [X19+88]
	039 Compare X0, 0
	040 JumpIfEqual {87}
	041 Move X8, [X0]
	042 Move X9, [X8+536]
	043 Move X1, [X8+544]
	044 NotImplemented "Instruction BLR not yet implemented."
	045 Move W8, 0x42C80000
	046 Move S1, W8
	047 NotImplemented "Instruction FCMP not yet implemented."
	048 Move X0, [X19+96]
	049 Compare X0, 0
	050 JumpIfEqual {87}
	051 Move X8, [X0]
	052 Move X9, [X8+536]
	053 Move X1, [X8+544]
	054 NotImplemented "Instruction BLR not yet implemented."
	055 NotImplemented "Instruction FCMP not yet implemented."
	056 Move X0, [X19+104]
	057 Compare X0, 0
	058 JumpIfEqual {87}
	059 Move X8, [X0]
	060 Move X9, [X8+536]
	061 Move X1, [X8+544]
	062 NotImplemented "Instruction BLR not yet implemented."
	063 NotImplemented "Instruction FCMP not yet implemented."
	064 Move X0, [X19+112]
	065 Compare X0, 0
	066 JumpIfEqual {87}
	067 Move X8, [X0]
	068 Move X9, [X8+536]
	069 Move X1, [X8+544]
	070 NotImplemented "Instruction BLR not yet implemented."
	071 NotImplemented "Instruction FCMP not yet implemented."
	072 Move X0, [X19+120]
	073 Compare X0, 0
	074 JumpIfEqual {87}
	075 Move X8, [X0]
	076 Move X9, [X8+536]
	077 Move X1, [X8+544]
	078 NotImplemented "Instruction BLR not yet implemented."
	079 Move W8, 0x42C80000
	080 Move S1, W8
	081 NotImplemented "Instruction FCMP not yet implemented."
	082 NotImplemented "Instruction CSET not yet implemented."
	083 Move W0, 1
	084 Move X30, [X31+16]
	085 Move X19, [X31+24]
	086 Return X0
	087 Call 0x1C17F20

Method: System.Boolean IsTileCompatible()

Disassembly:
	0x03A59A34 MOV X3, X31
	0x03A59A38 MOV X20, X0

ISIL:
	001 Move W0, 1
	002 Return X0

Method: System.Void .ctor()

Disassembly:
	0x03A59A3C BL 0x39F2978
	0x03A59A40 STR X20, [X19 + 0x58]
	0x03A59A44 LDR X0, [X23]
	0x03A59A48 BL 0x1C16F10
	0x03A59A4C ADRP X8, 0xFFFFFFFFFD091000
	0x03A59A50 LDR V1, [X8 + 0xBC]
	0x03A59A54 FMOV S0, 10
	0x03A59A58 MOV W1, W31
	0x03A59A5C MOV X2, X31
	0x03A59A60 MOV X20, X0
	0x03A59A64 BL 0x39F2F34
	0x03A59A68 STR X20, [X19 + 0x60]
	0x03A59A6C LDR X0, [X21]
	0x03A59A70 BL 0x1C16F10
	0x03A59A74 ADRP X8, 0xFFFFFFFFFD091000
	0x03A59A78 LDR V0, [X8 + 0x29C]
	0x03A59A7C MOVZ W8, 0x42000000
	0x03A59A80 FMOV S1, 1
	0x03A59A84 FMOV S2, W8
	0x03A59A88 MOV W1, W31
	0x03A59A8C MOV X2, X31
	0x03A59A90 MOV X20, X0
	0x03A59A94 BL 0x39F30E4
	0x03A59A98 STR X20, [X19 + 0x68]
	0x03A59A9C LDR X0, [X21]
	0x03A59AA0 BL 0x1C16F10
	0x03A59AA4 MOVZ W8, 0x42480000
	0x03A59AA8 MOVZ W9, 0x43960000
	0x03A59AAC FMOV S1, 1
	0x03A59AB0 FMOV S0, W8
	0x03A59AB4 FMOV S2, W9
	0x03A59AB8 MOV W1, W31
	0x03A59ABC MOV X2, X31
	0x03A59AC0 MOV X20, X0
	0x03A59AC4 BL 0x39F30E4
	0x03A59AC8 STR X20, [X19 + 0x70]
	0x03A59ACC LDR X0, [X22]
	0x03A59AD0 BL 0x1C16F10
	0x03A59AD4 MOVZ W1, 0x5
	0x03A59AD8 MOVZ W2, 0x3
	0x03A59ADC MOVZ W3, 0x9
	0x03A59AE0 MOV W4, W31
	0x03A59AE4 MOV X5, X31
	0x03A59AE8 MOV X20, X0
	0x03A59AEC BL 0x39F2D6C
	0x03A59AF0 STR X20, [X19 + 0x78]
	0x03A59AF4 LDR X0, [X21]
	0x03A59AF8 BL 0x1C16F10
	0x03A59AFC FMOV S0, 1
	0x03A59B00 FMOV S1, W31
	0x03A59B04 FMOV S2, 1
	0x03A59B08 MOV W1, W31
	0x03A59B0C MOV X2, X31
	0x03A59B10 MOV X20, X0
	0x03A59B14 BL 0x39F30E4
	0x03A59B18 STR X20, [X19 + 0x80]
	0x03A59B1C LDR X0, [X21]
	0x03A59B20 BL 0x1C16F10
	0x03A59B24 MOVZ W8, 0xC3340000
	0x03A59B28 MOVZ W9, 0x43340000
	0x03A59B2C FMOV S0, W31
	0x03A59B30 FMOV S1, W8
	0x03A59B34 FMOV S2, W9
	0x03A59B38 MOV W1, W31
	0x03A59B3C MOV X2, X31
	0x03A59B40 MOV X20, X0
	0x03A59B44 BL 0x39F30E4
	0x03A59B48 STR X20, [X19 + 0x88]
	0x03A59B4C MOV X0, X19
	0x03A59B50 LDP X20, X19, [X31 + 0x30]
	0x03A59B54 LDP X22, X21, [X31 + 0x20]
	0x03A59B58 LDP X24, X23, [X31 + 0x10]
	0x03A59B5C MOV X1, X31
	0x03A59B60 LDP X30, X25, [X31], #0x40
	0x03A59B64 B 0x39F05AC
	0x03A59B68 STP X30, X23, [X31 - 0x30]!
	0x03A59B6C STP X22, X21, [X31 + 0x10]
	0x03A59B70 STP X20, X19, [X31 + 0x20]
	0x03A59B74 ADRP X22, 0x989000
	0x03A59B78 ADRP X23, 0x6FD000
	0x03A59B7C LDRB W8, [X22 + 0x1FE]
	0x03A59B80 LDR X23, [X23 + 0x310]
	0x03A59B84 MOV W20, W2
	0x03A59B88 MOV W19, W1
	0x03A59B8C MOV X21, X0
	0x03A59B90 TBNZ X8, 0x0, 0x3A59BA8
	0x03A59B94 ADRP X0, 0x6FD000
	0x03A59B98 LDR X0, [X0 + 0x310]
	0x03A59B9C BL 0x1C16CF4
	0x03A59BA0 MOVZ W8, 0x1
	0x03A59BA4 STRB W8, [X22 + 0x1FE]
	0x03A59BA8 LDR X3, [X23]
	0x03A59BAC AND W2, W20, 0x1
	0x03A59BB0 MOV X0, X21
	0x03A59BB4 MOV W1, W19
	0x03A59BB8 LDP X20, X19, [X31 + 0x20]
	0x03A59BBC LDP X22, X21, [X31 + 0x10]
	0x03A59BC0 LDP X30, X23, [X31], #0x30
	0x03A59BC4 B 0x284A888
	0x03A59BC8 STR X30, [X31 - 0x20]!
	0x03A59BCC STP X20, X19, [X31 + 0x10]
	0x03A59BD0 ADRP X20, 0x989000
	0x03A59BD4 LDRB W8, [X20 + 0x1FF]
	0x03A59BD8 MOV X19, X0
	0x03A59BDC TBNZ X8, 0x0, 0x3A59BF4
	0x03A59BE0 ADRP X0, 0x69A000
	0x03A59BE4 LDR X0, [X0 + 0x598]
	0x03A59BE8 BL 0x1C16CF4
	0x03A59BEC MOVZ W8, 0x1
	0x03A59BF0 STRB W8, [X20 + 0x1FF]
	0x03A59BF4 LDR X0, [X19 + 0x40]
	0x03A59BF8 CBZ X0, 0x3A59C9C
	0x03A59BFC LDR X8, [X0]
	0x03A59C00 LDR X9, [X8 + 0x218]
	0x03A59C04 LDR X1, [X8 + 0x220]
	0x03A59C08 BLR X9
	0x03A59C0C FCMP S0, 0x0
	0x03A59C10 B.LE 0x3A59C84

ISIL:
	001 Move [X31-64], D10
	002 Move [X31+16], D9
	003 Move [X31+24], D8
	004 Move [X31+32], X30
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0x98A000
	009 Move X21, 0x6FE000
	010 Move W8, [X20+502]
	011 Move X21, [X21+168]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0x6FE000
	018 Move X0, [X0+168]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X20+502], W8
	022 Move X0, [X21]
	023 Call 0x1C17F10
	024 Move W8, 0x42C80000
	025 Move W9, 0xC3480000
	026 Move W10, 0x43480000
	027 Move S10, W8
	028 Move S9, W9
	029 Move S8, W10
	030 Move V0, V10
	031 Move V1, V9
	032 Move V2, V8
	033 Move W1, W31
	034 Move X2, X31
	035 Move X20, X0
	036 Call ClampedFloatParameter..ctor, X0, V0, V1, V2, X1
	037 Move [X19+56], X20
	038 Move X0, [X21]
	039 Call 0x1C17F10
	040 Move S0, W31
	041 Move V1, V9
	042 Move V2, V8
	043 Move W1, W31
	044 Move X2, X31
	045 Move X20, X0
	046 Call ClampedFloatParameter..ctor, X0, V0, V1, V2, X1
	047 Move [X19+64], X20
	048 Move X0, [X21]
	049 Call 0x1C17F10
	050 Move S0, W31
	051 Move V1, V9
	052 Move V2, V8
	053 Move W1, W31
	054 Move X2, X31
	055 Move X20, X0
	056 Call ClampedFloatParameter..ctor, X0, V0, V1, V2, X1
	057 Move [X19+72], X20
	058 Move X0, [X21]
	059 Call 0x1C17F10
	060 Move S0, W31
	061 Move V1, V9
	062 Move V2, V8
	063 Move W1, W31
	064 Move X2, X31
	065 Move X20, X0
	066 Call ClampedFloatParameter..ctor, X0, V0, V1, V2, X1
	067 Move [X19+80], X20
	068 Move X0, [X21]
	069 Call 0x1C17F10
	070 Move V0, V10
	071 Move V1, V9
	072 Move V2, V8
	073 Move W1, W31
	074 Move X2, X31
	075 Move X20, X0
	076 Call ClampedFloatParameter..ctor, X0, V0, V1, V2, X1
	077 Move [X19+88], X20
	078 Move X0, [X21]
	079 Call 0x1C17F10
	080 Move S0, W31
	081 Move V1, V9
	082 Move V2, V8
	083 Move W1, W31
	084 Move X2, X31
	085 Move X20, X0
	086 Call ClampedFloatParameter..ctor, X0, V0, V1, V2, X1
	087 Move [X19+96], X20
	088 Move X0, [X21]
	089 Call 0x1C17F10
	090 Move S0, W31
	091 Move V1, V9
	092 Move V2, V8
	093 Move W1, W31
	094 Move X2, X31
	095 Move X20, X0
	096 Call ClampedFloatParameter..ctor, X0, V0, V1, V2, X1
	097 Move [X19+104], X20
	098 Move X0, [X21]
	099 Call 0x1C17F10
	100 Move S0, W31
	101 Move V1, V9
	102 Move V2, V8
	103 Move W1, W31
	104 Move X2, X31
	105 Move X20, X0
	106 Call ClampedFloatParameter..ctor, X0, V0, V1, V2, X1
	107 Move [X19+112], X20
	108 Move X0, [X21]
	109 Call 0x1C17F10
	110 Move V0, V10
	111 Move V1, V9
	112 Move V2, V8
	113 Move W1, W31
	114 Move X2, X31
	115 Move X20, X0
	116 Call ClampedFloatParameter..ctor, X0, V0, V1, V2, X1
	117 Move [X19+120], X20
	118 Move X0, X19
	119 Move X20, [X31+48]
	120 Move X19, [X31+56]
	121 Move X30, [X31+32]
	122 Move X21, [X31+40]
	123 Move D9, [X31+16]
	124 Move D8, [X31+24]
	125 Move X1, X31
	126 Move V10, [X31+64]
	127 Call VolumeComponent..ctor, X0
	128 Return 

