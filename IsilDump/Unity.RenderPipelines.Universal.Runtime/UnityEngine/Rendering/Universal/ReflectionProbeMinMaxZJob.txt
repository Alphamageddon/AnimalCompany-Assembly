Type: UnityEngine.Rendering.Universal.ReflectionProbeMinMaxZJob

Method: System.Void Execute(System.Int32 index)

Disassembly:
	0x03A7BA34 FMUL S2, S9, S9
	0x03A7BA38 LDR V4, [X31 + 0x48]
	0x03A7BA3C FMOV S5, W31
	0x03A7BA40 FMUL S1, S15, S15
	0x03A7BA44 FADD S2, S2, S5
	0x03A7BA48 LDR V5, [X31 + 0x4C]
	0x03A7BA4C FADD S1, S1, S2
	0x03A7BA50 FNEG S0, S9
	0x03A7BA54 FSUB S3, S3, S12
	0x03A7BA58 FSQRT S1, S1
	0x03A7BA5C FMUL S4, S4, S11
	0x03A7BA60 FSQRT S3, S3
	0x03A7BA64 FDIV S0, S0, S1
	0x03A7BA68 FADD S4, S5, S4
	0x03A7BA6C FMUL S1, S0, S3
	0x03A7BA70 FSUB S0, S4, S1
	0x03A7BA74 ADD X1, X31, 0x13C
	0x03A7BA78 MOV X0, X19
	0x03A7BA7C FADD S11, S4, S1
	0x03A7BA80 BL 0x3A8018C
	0x03A7BA84 ADD X1, X31, 0x13C
	0x03A7BA88 MOV X0, X19
	0x03A7BA8C MOV V0.16B, V11.16B
	0x03A7BA90 BL 0x3A8018C
	0x03A7BA94 LDR V0, [X31 + 0x1B8]
	0x03A7BA98 FSUB S9, S10, S0
	0x03A7BA9C FMUL S10, S14, S9
	0x03A7BAA0 FCMP S10, 0x0
	0x03A7BAA4 B.LT 0x3A7BAE0
	0x03A7BAA8 FMOV S0, 1
	0x03A7BAAC FCMP S10, S0
	0x03A7BAB0 B.HI 0x3A7BAE0
	0x03A7BAB4 LDR X0, [X28]
	0x03A7BAB8 LDR V11, [X31 + 0x1B4]
	0x03A7BABC LDR W8, [X0 + 0xE0]
	0x03A7BAC0 CBNZ W8, 0x3A7BAC8
	0x03A7BAC4 BL 0x1C16DFC
	0x03A7BAC8 LDR V0, [X31 + 0x20]
	0x03A7BACC ADD X1, X31, 0x13C
	0x03A7BAD0 MOV X0, X19
	0x03A7BAD4 FMUL S0, S0, S10
	0x03A7BAD8 FADD S0, S0, S11
	0x03A7BADC BL 0x3A8018C
	0x03A7BAE0 FMUL S9, S13, S9
	0x03A7BAE4 FCMP S9, 0x0
	0x03A7BAE8 B.LT 0x3A7BB24
	0x03A7BAEC FMOV S0, 1
	0x03A7BAF0 FCMP S9, S0
	0x03A7BAF4 B.HI 0x3A7BB24
	0x03A7BAF8 LDR X0, [X28]
	0x03A7BAFC LDR V10, [X31 + 0x1B4]
	0x03A7BB00 LDR W8, [X0 + 0xE0]
	0x03A7BB04 CBNZ W8, 0x3A7BB0C
	0x03A7BB08 BL 0x1C16DFC
	0x03A7BB0C LDR V0, [X31 + 0x30]
	0x03A7BB10 ADD X1, X31, 0x13C
	0x03A7BB14 MOV X0, X19
	0x03A7BB18 FMUL S0, S0, S9
	0x03A7BB1C FADD S0, S0, S10
	0x03A7BB20 BL 0x3A8018C
	0x03A7BB24 LDR W8, [X19 + 0x10C]
	0x03A7BB28 LDR X9, [X19 + 0x20]
	0x03A7BB2C MOV X22, X20
	0x03A7BB30 MOV X21, X28
	0x03A7BB34 ADD W20, W29, W8
	0x03A7BB38 ADD W28, W20, 0x1
	0x03A7BB3C LDR W8, [X9, W28, SXTW]
	0x03A7BB40 LDR W9, [X31 + 0x13C]
	0x03A7BB44 AND X10, X27, 0x0
	0x03A7BB48 AND X11, X25, 0x0
	0x03A7BB4C ORR X27, X10, X8, 0x0
	0x03A7BB50 ORR X25, X11, X9, 0x0
	0x03A7BB54 MOV X0, X27
	0x03A7BB58 MOV X1, X25
	0x03A7BB5C MOV X2, X31
	0x03A7BB60 BL 0x3A7A410
	0x03A7BB64 LDR X8, [X19 + 0x20]
	0x03A7BB68 AND X10, X26, 0x0
	0x03A7BB6C AND X11, X24, 0x0
	0x03A7BB70 MOV X2, X31
	0x03A7BB74 STR W0, [X8, W28, SXTW]
	0x03A7BB78 LDR X8, [X19 + 0x20]
	0x03A7BB7C LDR W9, [X31 + 0x13C]
	0x03A7BB80 MOV X28, X21
	0x03A7BB84 LDR W8, [X8, W20, SXTW]
	0x03A7BB88 ORR X24, X11, X9, 0x0
	0x03A7BB8C MOV X1, X24
	0x03A7BB90 ORR X26, X10, X8, 0x0
	0x03A7BB94 MOV X0, X26
	0x03A7BB98 BL 0x3A7A410
	0x03A7BB9C LDR X8, [X19 + 0x20]
	0x03A7BBA0 STR W0, [X8, W20, SXTW]
	0x03A7BBA4 MOV X20, X22
	0x03A7BBA8 ADRP X22, 0x678000
	0x03A7BBAC LDR X22, [X22 + 0x5A8]
	0x03A7BBB0 LDRSH W8, [X19 + 0x108]
	0x03A7BBB4 CMP W29, W8
	0x03A7BBB8 ADD W29, W29, 0x1
	0x03A7BBBC B.LT 0x3A7B850
	0x03A7BBC0 LDR X9, [X31 + 0x18]
	0x03A7BBC4 LDRSW X8, [X19 + 0x10C]
	0x03A7BBC8 LDR X10, [X19 + 0x20]
	0x03A7BBCC LDR W9, [X9]
	0x03A7BBD0 STR W9, [X10, X8, LSL #2]
	0x03A7BBD4 ADD X31, X31, 0x1D0
	0x03A7BBD8 LDP X20, X19, [X31 + 0x90]
	0x03A7BBDC LDP X22, X21, [X31 + 0x80]
	0x03A7BBE0 LDP X24, X23, [X31 + 0x70]
	0x03A7BBE4 LDP X26, X25, [X31 + 0x60]
	0x03A7BBE8 LDP X28, X27, [X31 + 0x50]
	0x03A7BBEC LDP X29, X30, [X31 + 0x40]
	0x03A7BBF0 LDP D9, D8, [X31 + 0x30]
	0x03A7BBF4 LDP D11, D10, [X31 + 0x20]
	0x03A7BBF8 LDP D13, D12, [X31 + 0x10]
	0x03A7BBFC LDP D15, D14, [X31], #0xA0
	0x03A7BC00 RET
	0x03A7BC04 STP D15, D14, [X31 - 0xA0]!
	0x03A7BC08 STP D13, D12, [X31 + 0x10]
	0x03A7BC0C STP D11, D10, [X31 + 0x20]
	0x03A7BC10 STP D9, D8, [X31 + 0x30]
	0x03A7BC14 STP X29, X30, [X31 + 0x40]
	0x03A7BC18 STP X28, X27, [X31 + 0x50]
	0x03A7BC1C STP X26, X25, [X31 + 0x60]

ISIL:
	001 Subtract X31, X31, 320
	002 Move [X31+208], D14
	003 Move [X31+216], D13
	004 Move [X31+224], D12
	005 Move [X31+232], D11
	006 Move [X31+240], D10
	007 Move [X31+248], D9
	008 Move [X31+256], D8
	009 Move [X31+264], X29
	010 Move [X31+272], X30
	011 Move [X31+280], X23
	012 Move [X31+288], X22
	013 Move [X31+296], X21
	014 Move [X31+304], X20
	015 Move [X31+312], X19
	016 Move X21, 0x968000
	017 Move X22, 0x6DC000
	018 Move W8, [X21+775]
	019 Move X22, [X22+4072]
	020 Move W19, W1
	021 Move X20, X0
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {31}
	026 Move X0, 0x6DC000
	027 Move X0, [X0+4072]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X21+775], W8
	031 Add X0, X31, 72
	032 Move W2, 136
	033 Move W1, W31
	034 Move W23, 136
	035 Call 0x3EB2B10
	036 Move W8, [X20+136]
	037 Move X9, [X20+128]
	038 Add X0, X31, 72
	039 Move W2, 136
	040 NotImplemented "Instruction SDIV not yet implemented."
	041 NotImplemented "Instruction MSUB not yet implemented."
	042 NotImplemented "Instruction SMADDL not yet implemented."
	043 Call 0x3EB2B30
	044 Move X2, [X22]
	045 Add X8, X31, 8
	046 Move X0, X20
	047 Move W1, W21
	048 Call Fixed2`1<float4x4>.get_Item, X0, X1
	049 Move V11, [X31+16]
	050 Move V12, [X31+32]
	051 Move V13, [X31+48]
	052 Move V14, [X31+64]
	053 Add X8, X31, 8
	054 Add X0, X31, 72
	055 Move X1, X31
	056 Call VisibleReflectionProbe.get_bounds, X0
	057 Move S0, [X31+8]
	058 Move S1, [X31+12]
	059 Move V2, [X31+16]
	060 Move X0, X31
	061 Call float3.op_Implicit, X0
	062 Add X8, X31, 8
	063 Add X0, X31, 72
	064 Move X1, X31
	065 Move V8, V0
	066 Move V9, V1
	067 Move V10, V2
	068 Call VisibleReflectionProbe.get_bounds, X0
	069 Move S0, [X31+20]
	070 Move S1, [X31+24]
	071 Move V2, [X31+28]
	072 Move X0, X31
	073 Call float3.op_Implicit, X0
	074 Move TEMP, 0x800000
	075 Not TEMP
	076 Move W10, TEMP
	077 Move TEMP, 0x80800000
	078 Not TEMP
	079 Move W11, TEMP
	080 Move W8, W31
	081 Move W9, W31
	082 Move S3, W10
	083 Move S4, W11
	084 Move W10, 0x7F800000
	085 And W11, W8, 2
	086 And W12, W9, 2
	087 Move W13, W9
	088 ShiftRight W13, 1
	089 And W13, W13, 0x7FFFFFFF
	090 Subtract W11, W11, 1
	091 Subtract W12, W12, 1
	092 And W13, W13, 2
	093 Subtract W13, W13, 1
	094 NotImplemented "Instruction SCVTF not yet implemented."
	095 NotImplemented "Instruction SCVTF not yet implemented."
	096 NotImplemented "Instruction SCVTF not yet implemented."
	097 Multiply S5, S0, S5
	098 Multiply S6, S1, S6
	099 Multiply S7, S2, S7
	100 Add S5, S8, S5
	101 Add S6, S9, S6
	102 Add S7, S10, S7
	103 Multiply S5, S11, S5
	104 Multiply S6, S12, S6
	105 Add S5, S6, S5
	106 Multiply S6, S13, S7
	107 Add S5, S6, S5
	108 Add S5, S14, S5
	109 NotImplemented "Instruction FNEG not yet implemented."
	110 Move W11, S5
	111 And W11, W11, 0x7FFFFFFF
	112 NotImplemented "Instruction CMP not yet implemented."
	113 NotImplemented "Instruction CSET not yet implemented."
	114 NotImplemented "Instruction FCMP not yet implemented."
	115 NotImplemented "Instruction CSET not yet implemented."
	116 Or W12, W12, W11
	117 NotImplemented "Instruction CMP not yet implemented."
	118 NotImplemented "Instruction FCSEL not yet implemented."
	119 NotImplemented "Instruction FCMP not yet implemented."
	120 NotImplemented "Instruction CSET not yet implemented."
	121 Or W11, W12, W11
	122 Add W9, W9, 1
	123 NotImplemented "Instruction CMP not yet implemented."
	124 NotImplemented "Instruction FCSEL not yet implemented."
	125 NotImplemented "Instruction CMP not yet implemented."
	126 Add W8, W8, 2
	127 Move X8, [X20+144]
	128 Move X22, [X31+288]
	129 Move X21, [X31+296]
	130 Move X30, [X31+272]
	131 Move X23, [X31+280]
	132 Move X29, [X31+264]
	133 Add X8, X8, W19
	134 Move X20, [X31+304]
	135 Move X19, [X31+312]
	136 Move D9, [X31+248]
	137 Move D8, [X31+256]
	138 Move D11, [X31+232]
	139 Move D10, [X31+240]
	140 Move D13, [X31+216]
	141 Move D12, [X31+224]
	142 Move V14, [X31+208]
	143 Move [X8], S4
	144 Move [X8+8], S3
	145 Add X31, X31, 320
	146 Return 

