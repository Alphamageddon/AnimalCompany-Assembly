Type: UnityEngine.Rendering.Universal.DebugDisplaySettingsRendering/WidgetFactory/<>c__DisplayClass11_0

Method: System.Void .ctor()

Disassembly:
	0x03A352D8 LDR X0, [X0 + 0x470]
	0x03A352DC BL 0x1C16CF4

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: System.Int32 <CreatePixelValidationChannels>b__0()

Disassembly:
	0x03A35A44 CBZ W8, 0x3A35A58
	0x03A35A48 LDRB W8, [X1 + 0x1C0]
	0x03A35A4C CMP W8, 0x0
	0x03A35A50 CSET W0, NE
	0x03A35A54 B 0x3A35A5C
	0x03A35A58 MOV W0, W31
	0x03A35A5C LDR X30, [X31], #0x10
	0x03A35A60 RET
	0x03A35A64 BL 0x1C16F20
	0x03A35A68 B 0x3A35A2C
	0x03A35A6C MOVZ X8, 0x3F800000
	0x03A35A70 STR X31, [X31 - 0x20]!
	0x03A35A74 STP X8, X30, [X31 + 0x8]
	0x03A35A78 LDR X0, [X0 + 0x78]
	0x03A35A7C CBZ X0, 0x3A35AA4
	0x03A35A80 LDR X8, [X0]
	0x03A35A84 ADD X1, X31, 0x0
	0x03A35A88 LDR X9, [X8 + 0x218]
	0x03A35A8C LDR X2, [X8 + 0x220]
	0x03A35A90 BLR X9

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x9AE000
	005 Move W8, [X20+212]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x721000
	012 Move X0, [X0+1136]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+212], W8
	016 Move X8, [X19+16]
	017 Compare X8, 0
	018 JumpIfEqual {27}
	019 Move X8, [X8+32]
	020 Compare X8, 0
	021 JumpIfEqual {27}
	022 Move W0, [X8+64]
	023 Move X20, [X31+16]
	024 Move X19, [X31+24]
	025 Move X30, [X31+32]
	026 Return X0
	027 Call 0x1C17F20

Method: System.Void <CreatePixelValidationChannels>b__1(System.Int32 value)

Disassembly:
	0x03A35A94 LDR X30, [X31 + 0x10]
	0x03A35A98 AND W0, W0, 0x1
	0x03A35A9C ADD X31, X31, 0x20
	0x03A35AA0 RET
	0x03A35AA4 BL 0x1C16F20
	0x03A35AA8 STR X30, [X31 - 0x10]!
	0x03A35AAC LDR X8, [X0 + 0x78]
	0x03A35AB0 CBZ X8, 0x3A35AD0
	0x03A35AB4 LDR X8, [X8 + 0x28]
	0x03A35AB8 CBZ X8, 0x3A35AD0
	0x03A35ABC LDR W8, [X8 + 0x28]
	0x03A35AC0 CMP W8, 0x2
	0x03A35AC4 CSET W0, CC
	0x03A35AC8 LDR X30, [X31], #0x10
	0x03A35ACC RET
	0x03A35AD0 BL 0x1C16F20
	0x03A35AD4 STP X30, X23, [X31 - 0x30]!
	0x03A35AD8 STP X22, X21, [X31 + 0x10]
	0x03A35ADC STP X20, X19, [X31 + 0x20]
	0x03A35AE0 ADRP X21, 0x9AD000
	0x03A35AE4 LDRB W8, [X21 + 0xFA]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x9AE000
	006 Move W8, [X21+213]
	007 Move W19, W1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x721000
	014 Move X0, [X0+1136]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+213], W8
	018 Move X8, [X20+16]
	019 Compare X8, 0
	020 JumpIfEqual {30}
	021 Move X8, [X8+32]
	022 Compare X8, 0
	023 JumpIfEqual {30}
	024 Move [X8+64], W19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Move X21, [X31+40]
	029 Return 
	030 Call 0x1C17F20

Method: System.Int32 <CreatePixelValidationChannels>b__2()

Disassembly:
	0x03A35AE8 MOV X20, X1
	0x03A35AEC MOV X19, X0
	0x03A35AF0 TBNZ X8, 0x0, 0x3A35B38
	0x03A35AF4 ADRP X0, 0x6E6000
	0x03A35AF8 LDR X0, [X0 + 0x8F8]
	0x03A35AFC BL 0x1C16CF4
	0x03A35B00 ADRP X0, 0x720000
	0x03A35B04 LDR X0, [X0 + 0x4A8]
	0x03A35B08 BL 0x1C16CF4
	0x03A35B0C ADRP X0, 0x720000
	0x03A35B10 LDR X0, [X0 + 0x4B0]
	0x03A35B14 BL 0x1C16CF4
	0x03A35B18 ADRP X0, 0x720000
	0x03A35B1C LDR X0, [X0 + 0x4B8]
	0x03A35B20 BL 0x1C16CF4
	0x03A35B24 ADRP X0, 0x6BE000
	0x03A35B28 LDR X0, [X0 + 0x598]
	0x03A35B2C BL 0x1C16CF4
	0x03A35B30 MOVZ W8, 0x1
	0x03A35B34 STRB W8, [X21 + 0xFA]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x9AE000
	005 Move W8, [X20+214]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x721000
	012 Move X0, [X0+1136]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+214], W8
	016 Move X8, [X19+16]
	017 Compare X8, 0
	018 JumpIfEqual {27}
	019 Move X8, [X8+32]
	020 Compare X8, 0
	021 JumpIfEqual {27}
	022 Move W0, [X8+64]
	023 Move X20, [X31+16]
	024 Move X19, [X31+24]
	025 Move X30, [X31+32]
	026 Return X0
	027 Call 0x1C17F20

Method: System.Void <CreatePixelValidationChannels>b__3(System.Int32 value)

Disassembly:
	0x03A35B38 MOV X0, X19
	0x03A35B3C MOV X1, X31
	0x03A35B40 BL 0x33BDD8C
	0x03A35B44 CBZ X20, 0x3A35C64
	0x03A35B48 LDR X8, [X20 + 0x20]
	0x03A35B4C CBZ X8, 0x3A35C64
	0x03A35B50 ADRP X9, 0x720000
	0x03A35B54 LDR X9, [X9 + 0x4B0]
	0x03A35B58 ADRP X23, 0x720000
	0x03A35B5C ADRP X22, 0x6BE000
	0x03A35B60 LDP X21, X20, [X8 + 0x10]
	0x03A35B64 LDR X0, [X9]
	0x03A35B68 LDR W9, [X0 + 0xE0]
	0x03A35B6C LDR X23, [X23 + 0x4A8]
	0x03A35B70 LDR X22, [X22 + 0x598]
	0x03A35B74 CBNZ W9, 0x3A35B7C
	0x03A35B78 BL 0x1C16DFC
	0x03A35B7C LDR X0, [X23]
	0x03A35B80 BL 0x29AF0A8
	0x03A35B84 STR X0, [X19 + 0x78]
	0x03A35B88 LDR X0, [X22]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x9AE000
	006 Move W8, [X21+215]
	007 Move W19, W1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x721000
	014 Move X0, [X0+1136]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+215], W8
	018 Move X8, [X20+16]
	019 Compare X8, 0
	020 JumpIfEqual {30}
	021 Move X8, [X8+32]
	022 Compare X8, 0
	023 JumpIfEqual {30}
	024 Move [X8+64], W19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Move X21, [X31+40]
	029 Return 
	030 Call 0x1C17F20

