Type: UnityEngine.Rendering.Universal.ZBinningJob

Method: System.UInt32 EncodeHeader(System.UInt32 min, System.UInt32 max)

Disassembly:
	0x03A8160C LDR X22, [X22 + 0xA8]
	0x03A81610 LDR X23, [X23 + 0xC0]

ISIL:
	001 NotImplemented "Instruction BFM not yet implemented."
	002 Return X0

Method: System.ValueTuple`2<System.UInt32, System.UInt32> DecodeHeader(System.UInt32 zBin)

Disassembly:
	0x03A81614 MOV X1, X31
	0x03A81618 BL 0x3C389D4
	0x03A8161C MOV X20, X0
	0x03A81620 LDR W8, [X19 + 0x2C]
	0x03A81624 LDR X0, [X22]
	0x03A81628 ADD X1, X31, 0xC
	0x03A8162C STR W8, [X31 + 0xC]
	0x03A81630 BL 0x1C16E04
	0x03A81634 LDR X8, [X23]
	0x03A81638 MOV X2, X0
	0x03A8163C MOV X1, X20
	0x03A81640 MOV X3, X31
	0x03A81644 MOV X0, X8
	0x03A81648 BL 0x3227BD4
	0x03A8164C B 0x3A816B0
	0x03A81650 BL 0x3A816F0
	0x03A81654 CBZ X0, 0x3A816EC
	0x03A81658 MOV W1, W31
	0x03A8165C MOV X2, X31
	0x03A81660 BL 0x3A49704
	0x03A81664 TBZ X0, 0x0, 0x3A81670
	0x03A81668 LDR X0, [X19 + 0x30]
	0x03A8166C B 0x3A816D8
	0x03A81670 MOV X0, X19
	0x03A81674 MOV X1, X31

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x962000
	007 Move X20, 0x6D7000
	008 Move W8, [X21+797]
	009 Move X20, [X20+64]
	010 Move W19, W0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x6D7000
	016 Move X0, [X0+64]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X21+797], W8
	020 Move X3, [X20]
	021 And W1, W19, 0xFFFF
	022 Move W2, W19
	023 ShiftRight W2, 16
	024 And W2, W2, 0x7FFFFFFF
	025 Add X0, X31, 8
	026 Move [X31+8], X31
	027 Call ValueTuple`2<UInt32, UInt32>..ctor, X0, X1, X2
	028 Move X0, [X31+8]
	029 Move X20, [X31+32]
	030 Move X19, [X31+40]
	031 Move X30, [X31+16]
	032 Move X21, [X31+24]
	033 Add X31, X31, 48
	034 Return X0

Method: System.Void Execute(System.Int32 jobIndex)

Disassembly:
	0x03A81678 BL 0x3C32ECC
	0x03A8167C CBZ X0, 0x3A816EC
	0x03A81680 LDR X1, [X20]
	0x03A81684 BL 0x21E52E4
	0x03A81688 CBZ X0, 0x3A816EC
	0x03A8168C MOV X1, X31
	0x03A81690 BL 0x3C389D4
	0x03A81694 ADRP X8, 0x6D6000
	0x03A81698 LDR X8, [X8 + 0xB8]
	0x03A8169C MOV X1, X0
	0x03A816A0 MOV X2, X31
	0x03A816A4 LDR X8, [X8]
	0x03A816A8 MOV X0, X8
	0x03A816AC BL 0x321EFD0
	0x03A816B0 LDR X8, [X21]
	0x03A816B4 MOV X19, X0
	0x03A816B8 LDR W9, [X8 + 0xE0]
	0x03A816BC CBNZ W9, 0x3A816C8
	0x03A816C0 MOV X0, X8
	0x03A816C4 BL 0x1C16DFC
	0x03A816C8 MOV X0, X19
	0x03A816CC MOV X1, X31
	0x03A816D0 BL 0x3C06A04
	0x03A816D4 MOV X0, X31
	0x03A816D8 LDP X20, X19, [X31 + 0x30]
	0x03A816DC LDP X22, X21, [X31 + 0x20]
	0x03A816E0 LDP X30, X23, [X31 + 0x10]
	0x03A816E4 ADD X31, X31, 0x40
	0x03A816E8 RET
	0x03A816EC BL 0x1C16F20
	0x03A816F0 STR X30, [X31 - 0x30]!
	0x03A816F4 STP X22, X21, [X31 + 0x10]
	0x03A816F8 STP X20, X19, [X31 + 0x20]
	0x03A816FC ADRP X21, 0x961000
	0x03A81700 ADRP X19, 0x69B000
	0x03A81704 LDRB W8, [X21 + 0x32A]
	0x03A81708 LDR X19, [X19 + 0x8A8]
	0x03A8170C MOV X20, X0
	0x03A81710 TBNZ X8, 0x0, 0x3A81770
	0x03A81714 ADRP X0, 0x672000
	0x03A81718 LDR X0, [X0 + 0xA28]
	0x03A8171C BL 0x1C16CF4
	0x03A81720 ADRP X0, 0x672000
	0x03A81724 LDR X0, [X0 + 0xAC8]
	0x03A81728 BL 0x1C16CF4
	0x03A8172C ADRP X0, 0x69B000
	0x03A81730 LDR X0, [X0 + 0x8A8]
	0x03A81734 BL 0x1C16CF4
	0x03A81738 ADRP X0, 0x69E000
	0x03A8173C LDR X0, [X0 + 0x2C8]
	0x03A81740 BL 0x1C16CF4
	0x03A81744 ADRP X0, 0x6D6000
	0x03A81748 LDR X0, [X0 + 0xC8]
	0x03A8174C BL 0x1C16CF4
	0x03A81750 ADRP X0, 0x6D6000
	0x03A81754 LDR X0, [X0 + 0xD0]
	0x03A81758 BL 0x1C16CF4
	0x03A8175C ADRP X0, 0x6D6000
	0x03A81760 LDR X0, [X0 + 0xD8]
	0x03A81764 BL 0x1C16CF4
	0x03A81768 MOVZ W8, 0x1
	0x03A8176C STRB W8, [X21 + 0x32A]
	0x03A81770 LDR X0, [X19]
	0x03A81774 LDR W8, [X0 + 0xE0]
	0x03A81778 CBNZ W8, 0x3A81780
	0x03A8177C BL 0x1C16DFC
	0x03A81780 MOV X0, X31
	0x03A81784 BL 0x3A8AB60
	0x03A81788 CBZ X0, 0x3A817E8

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+16], X30
	003 Move [X31+32], X26
	004 Move [X31+40], X25
	005 Move [X31+48], X24
	006 Move [X31+56], X23
	007 Move [X31+64], X22
	008 Move [X31+72], X21
	009 Move [X31+80], X20
	010 Move [X31+88], X19
	011 Move W25, [X0+56]
	012 Move W26, [X0+40]
	013 Move W23, W1
	014 Move X19, X0
	015 NotImplemented "Instruction SDIV not yet implemented."
	016 NotImplemented "Instruction MSUB not yet implemented."
	017 Move W20, W8
	018 ShiftRight W20, 25
	019 And W20, W20, 0xFFFFFF
	020 Add W8, W20, 128
	021 NotImplemented "Instruction CMP not yet implemented."
	022 NotImplemented "Instruction CSEL not yet implemented."
	023 Move W0, 0xFFFF
	024 Move W1, W31
	025 Subtract W21, W8, 1
	026 Multiply W22, W26, W24
	027 Call ZBinningJob.EncodeHeader, X0, X1
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Move X8, [X19]
	030 Subtract W9, W26, W25
	031 Multiply W9, W24, W9
	032 Add W9, W9, W23
	033 Or W10, W31, 1
	034 Move W11, W20
	035 Move W12, [X19+44]
	036 Add W11, W11, 1
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Add W12, W12, 2
	039 Multiply W12, W12, W9
	040 Move [X8], W0
	041 Move W12, [X19+44]
	042 Add W12, W12, 2
	043 NotImplemented "Instruction MADD not yet implemented."
	044 Add W9, W9, 1
	045 Move [X8], W0
	046 Move W4, [X19+48]
	047 Move X0, X19
	048 Move W1, W20
	049 Move W2, W21
	050 Multiply W6, W4, W24
	051 Move W3, W31
	052 Move W5, W31
	053 Move W7, W22
	054 Call ZBinningJob.FillZBins, X0, X1, X2, X3, X4, X5, X6, X7
	055 Move W3, [X19+48]
	056 Move W8, [X19+52]
	057 Move W9, [X19+60]
	058 Move W5, 1
	059 Move X0, X19
	060 Add W4, W8, W3
	061 Subtract W9, W9, 1
	062 Multiply W8, W8, W24
	063 NotImplemented "Instruction MADD not yet implemented."
	064 Move W1, W20
	065 Move W2, W21
	066 Move W7, W22
	067 Call ZBinningJob.FillZBins, X0, X1, X2, X3, X4, X5, X6, X7
	068 Move X20, [X31+80]
	069 Move X19, [X31+88]
	070 Move X22, [X31+64]
	071 Move X21, [X31+72]
	072 Move X24, [X31+48]
	073 Move X23, [X31+56]
	074 Move X26, [X31+32]
	075 Move X25, [X31+40]
	076 Move X30, [X31+16]
	077 Add X31, X31, 96
	078 Return 

Method: System.Void FillZBins(System.Int32 binStart, System.Int32 binEnd, System.Int32 itemStart, System.Int32 itemEnd, System.Int32 headerIndex, System.Int32 itemOffset, System.Int32 binOffset)

Disassembly:
	0x03A8178C LDR X0, [X19]
	0x03A81790 LDR W8, [X0 + 0xE0]
	0x03A81794 CBNZ W8, 0x3A8179C
	0x03A81798 BL 0x1C16DFC
	0x03A8179C MOV X0, X31
	0x03A817A0 BL 0x3A8AB60
	0x03A817A4 CBZ X0, 0x3A8196C
	0x03A817A8 ADD X22, X20, 0x38
	0x03A817AC LDR W1, [X22]
	0x03A817B0 MOV X2, X31
	0x03A817B4 BL 0x3A2CF20
	0x03A817B8 LDR X8, [X19]
	0x03A817BC MOV W19, W0
	0x03A817C0 LDR W9, [X8 + 0xE0]
	0x03A817C4 CBNZ W9, 0x3A817D0
	0x03A817C8 MOV X0, X8
	0x03A817CC BL 0x1C16DFC
	0x03A817D0 MOV X0, X31
	0x03A817D4 BL 0x3A8AB60
	0x03A817D8 TBZ X19, 0x0, 0x3A817F8
	0x03A817DC CBZ X0, 0x3A8196C
	0x03A817E0 LDR W1, [X22]
	0x03A817E4 B 0x3A81958
	0x03A817E8 LDP X20, X19, [X31 + 0x20]
	0x03A817EC LDP X22, X21, [X31 + 0x10]
	0x03A817F0 LDR X30, [X31], #0x30
	0x03A817F4 RET
	0x03A817F8 CBZ X0, 0x3A8196C
	0x03A817FC ADRP X8, 0x672000
	0x03A81800 LDRSW X19, [X0 + 0x48]
	0x03A81804 LDR X8, [X8 + 0xAC8]
	0x03A81808 MOVZ W1, 0x7
	0x03A8180C LDR X0, [X8]
	0x03A81810 BL 0x1C16D6C
	0x03A81814 CBZ X0, 0x3A8196C
	0x03A81818 LDR W8, [X0 + 0x18]
	0x03A8181C MOV X21, X0
	0x03A81820 CBZ W8, 0x3A81970
	0x03A81824 ADRP X8, 0x6D6000
	0x03A81828 LDR X8, [X8 + 0xD0]
	0x03A8182C MOV X0, X22
	0x03A81830 MOV X1, X31
	0x03A81834 LDR X8, [X8]
	0x03A81838 STR X8, [X21 + 0x20]
	0x03A8183C BL 0x337B6E0
	0x03A81840 LDR W8, [X21 + 0x18]
	0x03A81844 CMP W8, 0x1
	0x03A81848 B.LS 0x3A81970
	0x03A8184C CMP W8, 0x2
	0x03A81850 STR X0, [X21 + 0x28]
	0x03A81854 B.EQ 0x3A81970
	0x03A81858 ADRP X8, 0x6D6000
	0x03A8185C LDR X8, [X8 + 0xC8]
	0x03A81860 MOV X0, X20
	0x03A81864 LDR X8, [X8]
	0x03A81868 STR X8, [X21 + 0x30]
	0x03A8186C BL 0x3A81480
	0x03A81870 CBZ X0, 0x3A8196C
	0x03A81874 MOV X1, X31
	0x03A81878 BL 0x3C389D4
	0x03A8187C LDR W8, [X21 + 0x18]
	0x03A81880 CMP W8, 0x3
	0x03A81884 B.LS 0x3A81970
	0x03A81888 CMP W8, 0x4
	0x03A8188C STR X0, [X21 + 0x38]
	0x03A81890 B.EQ 0x3A81970
	0x03A81894 ADRP X8, 0x6D6000
	0x03A81898 LDR X8, [X8 + 0xD8]
	0x03A8189C MOV X0, X31
	0x03A818A0 LDR X8, [X8]
	0x03A818A4 STR X8, [X21 + 0x40]
	0x03A818A8 BL 0x3A8AB60
	0x03A818AC CBZ X0, 0x3A8196C
	0x03A818B0 LDR X8, [X0 + 0x40]
	0x03A818B4 CBZ X8, 0x3A8196C
	0x03A818B8 LDR W9, [X8 + 0x18]
	0x03A818BC CMP W19, W9
	0x03A818C0 B.CS 0x3A81970
	0x03A818C4 ADD X8, X8, X19, 0x3, LSL
	0x03A818C8 LDR X0, [X8 + 0x20]
	0x03A818CC CBZ X0, 0x3A8196C
	0x03A818D0 MOV X1, X31
	0x03A818D4 BL 0x3C389D4
	0x03A818D8 LDR W8, [X21 + 0x18]
	0x03A818DC CMP W8, 0x5
	0x03A818E0 B.LS 0x3A81970
	0x03A818E4 CMP W8, 0x6
	0x03A818E8 STR X0, [X21 + 0x48]
	0x03A818EC B.EQ 0x3A81970
	0x03A818F0 ADRP X8, 0x69E000
	0x03A818F4 LDR X8, [X8 + 0x2C8]
	0x03A818F8 MOV X0, X21
	0x03A818FC MOV X1, X31
	0x03A81900 LDR X8, [X8]
	0x03A81904 STR X8, [X21 + 0x50]
	0x03A81908 BL 0x32278CC
	0x03A8190C MOV X20, X0
	0x03A81910 MOV X0, X31
	0x03A81914 BL 0x3A8AB60
	0x03A81918 ADRP X8, 0x672000
	0x03A8191C LDR X8, [X8 + 0xA28]
	0x03A81920 MOV X21, X0
	0x03A81924 LDR X8, [X8]
	0x03A81928 LDR W9, [X8 + 0xE0]
	0x03A8192C CBNZ W9, 0x3A81938
	0x03A81930 MOV X0, X8
	0x03A81934 BL 0x1C16DFC
	0x03A81938 MOV X0, X20
	0x03A8193C MOV X1, X21
	0x03A81940 MOV X2, X31
	0x03A81944 BL 0x3C06B0C
	0x03A81948 MOV X0, X31
	0x03A8194C BL 0x3A8AB60
	0x03A81950 CBZ X0, 0x3A8196C
	0x03A81954 MOV W1, W19
	0x03A81958 LDP X20, X19, [X31 + 0x20]
	0x03A8195C LDP X22, X21, [X31 + 0x10]
	0x03A81960 MOV X2, X31
	0x03A81964 LDR X30, [X31], #0x30
	0x03A81968 B 0x3A2BDB4
	0x03A8196C BL 0x1C16F20
	0x03A81970 BL 0x1C16F28
	0x03A81974 SUB X31, X31, 0x50
	0x03A81978 STP X30, X25, [X31 + 0x10]
	0x03A8197C STP X24, X23, [X31 + 0x20]
	0x03A81980 STP X22, X21, [X31 + 0x30]
	0x03A81984 STP X20, X19, [X31 + 0x40]
	0x03A81988 ADRP X20, 0x961000
	0x03A8198C LDRB W8, [X20 + 0x327]
	0x03A81990 MOV X19, X0
	0x03A81994 TBNZ X8, 0x0, 0x3A81A30
	0x03A81998 ADRP X0, 0x672000
	0x03A8199C LDR X0, [X0 + 0xA28]
	0x03A819A0 BL 0x1C16CF4
	0x03A819A4 ADRP X0, 0x6D6000
	0x03A819A8 LDR X0, [X0 + 0xE0]
	0x03A819AC BL 0x1C16CF4

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+16], D9
	003 Move [X31+24], D8
	004 Move [X31+32], X29
	005 Move [X31+40], X30
	006 Move [X31+48], X28
	007 Move [X31+56], X27
	008 Move [X31+64], X26
	009 Move [X31+72], X25
	010 Move [X31+80], X24
	011 Move [X31+88], X23
	012 Move [X31+96], X22
	013 Move [X31+104], X21
	014 Move [X31+112], X20
	015 Move [X31+120], X19
	016 NotImplemented "Instruction CMP not yet implemented."
	017 Move [X31+8], W2
	018 Move [X31+12], W6
	019 Move W19, W7
	020 Move W21, W5
	021 Move W23, W1
	022 Move X24, X0
	023 Move X26, W3
	024 Move X8, W4
	025 Move W20, 0x7F800000
	026 Move W22, 0x80000000
	027 Move [X31], X8
	028 Move W9, [X31+12]
	029 Move X8, [X24+16]
	030 Move W10, [X24+64]
	031 Add W9, W26, W9
	032 Add X8, X8, W9
	033 Move S9, [X8]
	034 Move S8, [X8+4]
	035 Compare W10, 0
	036 JumpIfEqual {38}
	037 Move W8, 1
	038 Move X8, 0x961000
	039 Move W8, [X8+1409]
	040 Compare W8, 0
	041 JumpIfNotEqual {48}
	042 Move X0, 0x673000
	043 Move X0, [X0+1448]
	044 Call 0x1C17CF4
	045 Move X8, 0x961000
	046 Move W9, 1
	047 Move [X8+1409], W9
	048 Move X8, 0x673000
	049 Move X8, [X8+1448]
	050 Move X0, [X8]
	051 Move W8, [X0+224]
	052 Compare W8, 0
	053 JumpIfNotEqual {55}
	054 Call 0x1C17DFC
	055 NotImplemented "Instruction FCVT not yet implemented."
	056 Move D1, 2
	057 Move X0, X31
	058 Call Math.Log, V0, V1
	059 Move W8, [X24+64]
	060 NotImplemented "Instruction INVALID not yet implemented."
	061 Move S2, [X24+32]
	062 Move S1, [X24+36]
	063 Move S0, W20
	064 Multiply S3, S9, S2
	065 Add S3, S3, S1
	066 NotImplemented "Instruction FCVTZS not yet implemented."
	067 NotImplemented "Instruction FCMP not yet implemented."
	068 NotImplemented "Instruction CSEL not yet implemented."
	069 NotImplemented "Instruction CMP not yet implemented."
	070 NotImplemented "Instruction CSEL not yet implemented."
	071 Compare W8, 0
	072 JumpIfNotEqual {97}
	073 Move X8, 0x961000
	074 Move W8, [X8+1409]
	075 Compare W8, 0
	076 JumpIfNotEqual {83}
	077 Move X0, 0x673000
	078 Move X0, [X0+1448]
	079 Call 0x1C17CF4
	080 Move X8, 0x961000
	081 Move W9, 1
	082 Move [X8+1409], W9
	083 Move X8, 0x673000
	084 Move X8, [X8+1448]
	085 Move X0, [X8]
	086 Move W8, [X0+224]
	087 Compare W8, 0
	088 JumpIfNotEqual {90}
	089 Call 0x1C17DFC
	090 NotImplemented "Instruction FCVT not yet implemented."
	091 Move D1, 2
	092 Move X0, X31
	093 Call Math.Log, V0, V1
	094 Move S2, [X24+32]
	095 Move S1, [X24+36]
	096 NotImplemented "Instruction INVALID not yet implemented."
	097 Multiply S0, S8, S2
	098 Move W9, [X31+8]
	099 Move S2, W20
	100 Add S0, S0, S1
	101 NotImplemented "Instruction FCVTZS not yet implemented."
	102 NotImplemented "Instruction FCMP not yet implemented."
	103 NotImplemented "Instruction CSEL not yet implemented."
	104 NotImplemented "Instruction CMP not yet implemented."
	105 NotImplemented "Instruction CSEL not yet implemented."
	106 NotImplemented "Instruction CMP not yet implemented."
	107 Move W8, 1
	108 NotImplemented "Instruction LSLV not yet implemented."
	109 Add W9, W26, 31
	110 NotImplemented "Instruction CMP not yet implemented."
	111 Move X8, [X24]
	112 NotImplemented "Instruction CSEL not yet implemented."
	113 NotImplemented "Instruction SBFM not yet implemented."
	114 Add W28, W9, 2
	115 Move W9, [X24+44]
	116 Add W10, W19, W25
	117 Add W9, W9, 2
	118 Multiply W29, W9, W10
	119 Add W22, W29, W21
	120 Move W0, [X8]
	121 Call ZBinningJob.DecodeHeader, X0
	122 Move X8, X0
	123 ShiftRight X8, 32
	124 And X8, X8, 0x7FFFFFFF
	125 NotImplemented "Instruction CMP not yet implemented."
	126 NotImplemented "Instruction CSEL not yet implemented."
	127 NotImplemented "Instruction CMP not yet implemented."
	128 NotImplemented "Instruction CSEL not yet implemented."
	129 Call ZBinningJob.EncodeHeader, X0, X1
	130 Move X8, [X24]
	131 Add W9, W28, W29
	132 Add W25, W25, 1
	133 NotImplemented "Instruction CMP not yet implemented."
	134 Move [X8], W0
	135 Move W10, [X8]
	136 Or W10, W10, W27
	137 Move [X8], W10
	138 Move X8, [X31]
	139 Add X26, X26, 1
	140 Move W20, 0x7F800000
	141 Move W22, 0x80000000
	142 NotImplemented "Instruction CMP not yet implemented."
	143 Move X20, [X31+112]
	144 Move X19, [X31+120]
	145 Move X22, [X31+96]
	146 Move X21, [X31+104]
	147 Move X24, [X31+80]
	148 Move X23, [X31+88]
	149 Move X26, [X31+64]
	150 Move X25, [X31+72]
	151 Move X28, [X31+48]
	152 Move X27, [X31+56]
	153 Move X29, [X31+32]
	154 Move X30, [X31+40]
	155 Move D9, [X31+16]
	156 Move D8, [X31+24]
	157 Add X31, X31, 128
	158 Return 

