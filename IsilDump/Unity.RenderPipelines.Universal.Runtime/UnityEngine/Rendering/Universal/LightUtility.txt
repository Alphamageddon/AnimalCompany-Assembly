Type: UnityEngine.Rendering.Universal.LightUtility

Method: System.Boolean CheckForChange(UnityEngine.Rendering.Universal.Light2D/LightType a, ref UnityEngine.Rendering.Universal.Light2D/LightType b)

Disassembly:
	0x03A14FF0 FCMP S15, S1
	0x03A14FF4 LDR V8, [X31 + 0x64]
	0x03A14FF8 STRH W10, [X8, W12, SXTW]
	0x03A14FFC CSET W8, MI
	0x03A15000 ORR W8, W8, W11, 0x0
	0x03A15004 CMP W8, 0x0

ISIL:
	001 Move W8, [X1]
	002 Move [X1], W0
	003 NotImplemented "Instruction CMP not yet implemented."
	004 NotImplemented "Instruction CSET not yet implemented."
	005 Move W0, W8
	006 Return X0

Method: System.Boolean CheckForChange(System.Int32 a, ref System.Int32 b)

Disassembly:
	0x03A14FD8 ADD W11, W29, 0x7
	0x03A14FDC FCSEL S14, S14, S0, NE
	0x03A14FE0 CMP W12, W23
	0x03A14FE4 ADD W12, W29, 0x8
	0x03A14FE8 STRH W27, [X8, W11, SXTW]
	0x03A14FEC CSET W11, HI

ISIL:
	001 Move W8, [X1]
	002 Move [X1], W0
	003 NotImplemented "Instruction CMP not yet implemented."
	004 NotImplemented "Instruction CSET not yet implemented."
	005 Move W0, W8
	006 Return X0

Method: System.Boolean CheckForChange(System.Single a, ref System.Single b)

Disassembly:
	0x03A14FC0 CSET W12, MI
	0x03A14FC4 FADD S1, S9, S1
	0x03A14FC8 ORR W12, W12, W9, 0x0
	0x03A14FCC CMP W12, 0x0
	0x03A14FD0 FMOV W12, S1
	0x03A14FD4 AND W12, W12, 0x7FFFFFFF

ISIL:
	001 Move V1, [X0]
	002 Move [X0], S0
	003 NotImplemented "Instruction FCMP not yet implemented."
	004 NotImplemented "Instruction CSET not yet implemented."
	005 Move W0, W8
	006 Return X0

Method: System.Boolean CheckForChange(System.Boolean a, ref System.Boolean b)

Disassembly:
	0x03A17DA4 BL 0x1C16F20
	0x03A17DA8 SUB X31, X31, 0x50
	0x03A17DAC STR X30, [X31 + 0x30]
	0x03A17DB0 STP X20, X19, [X31 + 0x40]
	0x03A17DB4 ADRP X19, 0x9CA000
	0x03A17DB8 ADRP X20, 0x73D000

ISIL:
	001 Move W8, [X1]
	002 And W9, W0, 1
	003 Move [X1], W9
	004 NotImplemented "Instruction CMP not yet implemented."
	005 NotImplemented "Instruction CSET not yet implemented."
	006 Return X0

Method: System.Boolean TestPivot(System.Collections.Generic.List`1<UnityEngine.Rendering.Universal.IntPoint> path, System.Int32 activePoint, System.Int64 lastPoint)

Disassembly:
	0x03A17DBC LDRB W8, [X19 + 0xFD1]
	0x03A17DC0 LDR X20, [X20 + 0x640]
	0x03A17DC4 TBNZ X8, 0x0, 0x3A17DE8
	0x03A17DC8 ADRP X0, 0x73D000
	0x03A17DCC LDR X0, [X0 + 0x4B8]
	0x03A17DD0 BL 0x1C16CF4
	0x03A17DD4 ADRP X0, 0x73D000
	0x03A17DD8 LDR X0, [X0 + 0x640]
	0x03A17DDC BL 0x1C16CF4
	0x03A17DE0 MOVZ W8, 0x1
	0x03A17DE4 STRB W8, [X19 + 0xFD1]
	0x03A17DE8 LDR X0, [X20]
	0x03A17DEC MOVZ W1, 0x3
	0x03A17DF0 BL 0x1C16D6C
	0x03A17DF4 MOV X19, X0
	0x03A17DF8 ADD X0, X31, 0x20
	0x03A17DFC MOVZ W3, 0x3
	0x03A17E00 MOV W1, W31
	0x03A17E04 MOV W2, W31
	0x03A17E08 MOV W4, W31
	0x03A17E0C MOV X5, X31
	0x03A17E10 STP X31, X31, [X31 + 0x20]
	0x03A17E14 BL 0x3C4AD10
	0x03A17E18 CBZ X19, 0x3A17EBC
	0x03A17E1C LDR W8, [X19 + 0x18]
	0x03A17E20 CBZ W8, 0x3A17EB8
	0x03A17E24 LDR V0, [X31 + 0x2]
	0x03A17E28 ADD X0, X31, 0x10
	0x03A17E2C MOVZ W1, 0x3
	0x03A17E30 MOVZ W3, 0x4
	0x03A17E34 MOV W2, W31
	0x03A17E38 MOV W4, W31
	0x03A17E3C MOV X5, X31
	0x03A17E40 STR V0, [X19 + 0x2]
	0x03A17E44 STP X31, X31, [X31 + 0x10]
	0x03A17E48 BL 0x3C4AD10
	0x03A17E4C LDR W8, [X19 + 0x18]
	0x03A17E50 CMP W8, 0x1
	0x03A17E54 B.LS 0x3A17EB8
	0x03A17E58 LDR V0, [X31 + 0x1]
	0x03A17E5C ADD X0, X31, 0x0
	0x03A17E60 MOVZ W1, 0x4
	0x03A17E64 MOVZ W3, 0x2
	0x03A17E68 MOV W2, W31
	0x03A17E6C MOV W4, W31
	0x03A17E70 MOV X5, X31
	0x03A17E74 STR V0, [X19 + 0x3]
	0x03A17E78 STP X31, X31, [X31]
	0x03A17E7C BL 0x3C4AD10
	0x03A17E80 LDR W8, [X19 + 0x18]
	0x03A17E84 CMP W8, 0x2
	0x03A17E88 B.LS 0x3A17EB8
	0x03A17E8C LDR V0, [X31]

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+48], X30
	003 Move [X31+56], X23
	004 Move [X31+64], X22
	005 Move [X31+72], X21
	006 Move [X31+80], X20
	007 Move [X31+88], X19
	008 Move X22, 0x9CB000
	009 Move W8, [X22+4040]
	010 Move X21, X2
	011 Move W19, W1
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x73E000
	018 Move X0, [X0+512]
	019 Call 0x1C17CF4
	020 Move X0, 0x73E000
	021 Move X0, [X0+528]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X22+4040], W8
	025 Compare X20, 0
	026 JumpIfEqual {59}
	027 Move W8, [X20+24]
	028 Move X23, 0x73E000
	029 Move X23, [X23+528]
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move W22, W19
	032 Move X2, [X23]
	033 Add X8, X31, 0
	034 Move X0, X20
	035 Move W1, W22
	036 Call List`1<IntPoint>.get_Item, X0, X1
	037 Move X8, [X31]
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Move W8, [X20+24]
	040 Add W22, W22, 1
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Move X2, [X23]
	043 Add X8, X31, 0
	044 Move X0, X20
	045 Move W1, W19
	046 Call List`1<IntPoint>.get_Item, X0, X1
	047 Move X8, [X31]
	048 Add X31, X8, 1
	049 NotImplemented "Instruction CSET not yet implemented."
	050 Move W0, 1
	051 Move X20, [X31+80]
	052 Move X19, [X31+88]
	053 Move X22, [X31+64]
	054 Move X21, [X31+72]
	055 Move X30, [X31+48]
	056 Move X23, [X31+56]
	057 Add X31, X31, 96
	058 Return X0
	059 Call 0x1C17F20

Method: System.Collections.Generic.List`1<UnityEngine.Rendering.Universal.IntPoint> DegeneratePivots(System.Collections.Generic.List`1<UnityEngine.Rendering.Universal.IntPoint> path, System.Collections.Generic.List`1<UnityEngine.Rendering.Universal.IntPoint> inPath, ref System.Int32 interiorStart)

Disassembly:
	0x03A17E90 ADRP X8, 0x73D000
	0x03A17E94 LDR X8, [X8 + 0x4B8]
	0x03A17E98 LDR X30, [X31 + 0x30]
	0x03A17E9C STR V0, [X19 + 0x4]
	0x03A17EA0 LDR X8, [X8]
	0x03A17EA4 LDR X8, [X8 + 0xB8]
	0x03A17EA8 STR X19, [X8]
	0x03A17EAC LDP X20, X19, [X31 + 0x40]
	0x03A17EB0 ADD X31, X31, 0x50
	0x03A17EB4 RET
	0x03A17EB8 BL 0x1C16F28
	0x03A17EBC BL 0x1C16F20
	0x03A17EC0 STR X30, [X31 - 0x30]!
	0x03A17EC4 STP X22, X21, [X31 + 0x10]
	0x03A17EC8 STP X20, X19, [X31 + 0x20]
	0x03A17ECC ADRP X21, 0x9CA000
	0x03A17ED0 ADRP X22, 0x73C000
	0x03A17ED4 LDRB W8, [X21 + 0xFD2]
	0x03A17ED8 LDR X22, [X22 + 0xFF0]
	0x03A17EDC MOV W19, W1
	0x03A17EE0 MOV X20, X0
	0x03A17EE4 TBNZ X8, 0x0, 0x3A17EFC
	0x03A17EE8 ADRP X0, 0x73C000
	0x03A17EEC LDR X0, [X0 + 0xFF0]
	0x03A17EF0 BL 0x1C16CF4
	0x03A17EF4 MOVZ W8, 0x1
	0x03A17EF8 STRB W8, [X21 + 0xFD2]
	0x03A17EFC LDR X0, [X22]
	0x03A17F00 LDR W8, [X0 + 0xE0]
	0x03A17F04 CBNZ W8, 0x3A17F0C
	0x03A17F08 BL 0x1C16DFC
	0x03A17F0C MOV X0, X20
	0x03A17F10 MOV X1, X31
	0x03A17F14 BL 0x3A4225C
	0x03A17F18 STR W19, [X20 + 0x10]
	0x03A17F1C LDP X20, X19, [X31 + 0x20]
	0x03A17F20 LDP X22, X21, [X31 + 0x10]
	0x03A17F24 LDR X30, [X31], #0x30
	0x03A17F28 RET
	0x03A17F2C SUB X31, X31, 0xA0
	0x03A17F30 STP X30, X21, [X31 + 0x80]
	0x03A17F34 STP X20, X19, [X31 + 0x90]
	0x03A17F38 ADRP X21, 0x9CA000
	0x03A17F3C ADRP X20, 0x73D000
	0x03A17F40 LDRB W8, [X21 + 0xFD3]
	0x03A17F44 LDR X20, [X20 + 0x648]
	0x03A17F48 MOV X19, X2
	0x03A17F4C TBNZ X8, 0x0, 0x3A17F70
	0x03A17F50 ADRP X0, 0x704000
	0x03A17F54 LDR X0, [X0 + 0x8F8]
	0x03A17F58 BL 0x1C16CF4
	0x03A17F5C ADRP X0, 0x73D000
	0x03A17F60 LDR X0, [X0 + 0x648]
	0x03A17F64 BL 0x1C16CF4
	0x03A17F68 MOVZ W8, 0x1
	0x03A17F6C STRB W8, [X21 + 0xFD3]
	0x03A17F70 LDR X0, [X20]
	0x03A17F74 STRB W31, [X31 + 0x78]
	0x03A17F78 LDR X19, [X19]
	0x03A17F7C LDR W8, [X0 + 0xE0]
	0x03A17F80 CBNZ W8, 0x3A17F8C
	0x03A17F84 BL 0x1C16DFC
	0x03A17F88 LDR X0, [X20]
	0x03A17F8C LDR X8, [X0 + 0xB8]
	0x03A17F90 ADD X0, X31, 0x78
	0x03A17F94 MOV X1, X19
	0x03A17F98 MOV X3, X31
	0x03A17F9C LDR X2, [X8]
	0x03A17FA0 BL 0x39B1DB0
	0x03A17FA4 ADD X8, X31, 0x28
	0x03A17FA8 MOVZ W0, 0x2
	0x03A17FAC MOV X1, X31
	0x03A17FB0 BL 0x3C4B204
	0x03A17FB4 ADRP X8, 0x704000
	0x03A17FB8 LDR X8, [X8 + 0x8F8]
	0x03A17FBC LDUR V0, [X31 + 0x28]
	0x03A17FC0 LDUR V1, [X31 + 0x38]
	0x03A17FC4 LDR X9, [X31 + 0x48]
	0x03A17FC8 LDR X0, [X8]
	0x03A17FCC STP V0, V1, [X31 + 0x50]
	0x03A17FD0 STR X9, [X31 + 0x70]
	0x03A17FD4 LDR W8, [X0 + 0xE0]
	0x03A17FD8 CBNZ W8, 0x3A17FE0
	0x03A17FDC BL 0x1C16DFC
	0x03A17FE0 LDP V0, V1, [X31 + 0x50]
	0x03A17FE4 LDR X8, [X31 + 0x70]
	0x03A17FE8 STP V0, V1, [X31]
	0x03A17FEC STR X8, [X31 + 0x20]
	0x03A17FF0 ADD X1, X31, 0x0
	0x03A17FF4 FMOV S0, W31
	0x03A17FF8 FMOV S1, W31
	0x03A17FFC FMOV S2, W31
	0x03A18000 FMOV S3, 1
	0x03A18004 MOVZ W2, 0x2
	0x03A18008 MOVZ W4, 0x1
	0x03A1800C MOV X0, X19
	0x03A18010 MOV W3, W31
	0x03A18014 MOV X5, X31
	0x03A18018 BL 0x39E6D34
	0x03A1801C ADD X0, X31, 0x78
	0x03A18020 MOV X1, X31
	0x03A18024 BL 0x39B1DB4
	0x03A18028 LDP X20, X19, [X31 + 0x90]
	0x03A1802C LDP X30, X21, [X31 + 0x80]
	0x03A18030 ADD X31, X31, 0xA0
	0x03A18034 RET
	0x03A18038 B 0x3A1803C
	0x03A1803C MOV X20, X0
	0x03A18040 CMP W1, 0x1
	0x03A18044 B.NE 0x3A18070
	0x03A18048 MOV X0, X20
	0x03A1804C BL 0x3EB1AD0
	0x03A18050 LDR X19, [X0]
	0x03A18054 BL 0x3EB1AE0
	0x03A18058 ADD X0, X31, 0x78
	0x03A1805C MOV X1, X31
	0x03A18060 BL 0x39B1DB4
	0x03A18064 CBZ X19, 0x3A18028
	0x03A18068 MOV X0, X19
	0x03A1806C BL 0x1C16F18
	0x03A18070 MOV X19, X31
	0x03A18074 B 0x3A1807C
	0x03A18078 MOV X20, X0
	0x03A1807C ADD X0, X31, 0x78
	0x03A18080 MOV X1, X31
	0x03A18084 BL 0x39B1DB4
	0x03A18088 CBNZ X19, 0x3A18094
	0x03A1808C MOV X0, X20
	0x03A18090 BL 0x1D2C690
	0x03A18094 MOV X0, X19
	0x03A18098 BL 0x1C16F18
	0x03A1809C BL 0x1990590
	0x03A180A0 STR X30, [X31 - 0x30]!
	0x03A180A4 STP X22, X21, [X31 + 0x10]
	0x03A180A8 STP X20, X19, [X31 + 0x20]
	0x03A180AC ADRP X21, 0x9C9000
	0x03A180B0 ADRP X22, 0x738000
	0x03A180B4 ADRP X19, 0x73C000
	0x03A180B8 ADRP X20, 0x73C000
	0x03A180BC LDRB W8, [X21 + 0xFD4]
	0x03A180C0 LDR X22, [X22 + 0x598]
	0x03A180C4 LDR X19, [X19 + 0x650]
	0x03A180C8 LDR X20, [X20 + 0x648]
	0x03A180CC TBNZ X8, 0x0, 0x3A180FC
	0x03A180D0 ADRP X0, 0x73C000
	0x03A180D4 LDR X0, [X0 + 0x648]
	0x03A180D8 BL 0x1C16CF4
	0x03A180DC ADRP X0, 0x738000
	0x03A180E0 LDR X0, [X0 + 0x598]
	0x03A180E4 BL 0x1C16CF4
	0x03A180E8 ADRP X0, 0x73C000
	0x03A180EC LDR X0, [X0 + 0x650]
	0x03A180F0 BL 0x1C16CF4
	0x03A180F4 MOVZ W8, 0x1
	0x03A180F8 STRB W8, [X21 + 0xFD4]
	0x03A180FC LDR X0, [X22]
	0x03A18100 BL 0x1C16F10
	0x03A18104 LDR X1, [X19]
	0x03A18108 MOV X2, X31
	0x03A1810C MOV X19, X0
	0x03A18110 BL 0x39B19AC
	0x03A18114 LDR X8, [X20]
	0x03A18118 LDP X22, X21, [X31 + 0x10]
	0x03A1811C LDR X8, [X8 + 0xB8]
	0x03A18120 STR X19, [X8]
	0x03A18124 LDP X20, X19, [X31 + 0x20]
	0x03A18128 LDR X30, [X31], #0x30
	0x03A1812C RET
	0x03A18130 STR X30, [X31 - 0x40]!
	0x03A18134 STP X24, X23, [X31 + 0x10]
	0x03A18138 STP X22, X21, [X31 + 0x20]
	0x03A1813C STP X20, X19, [X31 + 0x30]
	0x03A18140 ADRP X23, 0x9C9000
	0x03A18144 ADRP X24, 0x73B000
	0x03A18148 LDRB W8, [X23 + 0xFD5]
	0x03A1814C LDR X24, [X24 + 0xFF0]
	0x03A18150 MOV X20, X3
	0x03A18154 MOV X21, X2
	0x03A18158 MOV X22, X1
	0x03A1815C MOV X19, X0
	0x03A18160 TBNZ X8, 0x0, 0x3A18178
	0x03A18164 ADRP X0, 0x73B000
	0x03A18168 LDR X0, [X0 + 0xFF0]
	0x03A1816C BL 0x1C16CF4
	0x03A18170 MOVZ W8, 0x1
	0x03A18174 STRB W8, [X23 + 0xFD5]
	0x03A18178 LDR X0, [X24]
	0x03A1817C LDR W8, [X0 + 0xE0]
	0x03A18180 CBNZ W8, 0x3A18188
	0x03A18184 BL 0x1C16DFC
	0x03A18188 MOV X0, X19
	0x03A1818C MOV X1, X31
	0x03A18190 BL 0x3A4225C
	0x03A18194 MOV X0, X19
	0x03A18198 STP X20, X22, [X19 + 0xE8]
	0x03A1819C STR X21, [X19 + 0xE0]
	0x03A181A0 BL 0x3A181BC
	0x03A181A4 STRH W0, [X19 + 0xFA]
	0x03A181A8 LDP X20, X19, [X31 + 0x30]
	0x03A181AC LDP X22, X21, [X31 + 0x20]
	0x03A181B0 LDP X24, X23, [X31 + 0x10]
	0x03A181B4 LDR X30, [X31], #0x40
	0x03A181B8 RET
	0x03A181BC STR X30, [X31 - 0x30]!
	0x03A181C0 STP X22, X21, [X31 + 0x10]
	0x03A181C4 STP X20, X19, [X31 + 0x20]
	0x03A181C8 ADRP X20, 0x9C9000
	0x03A181CC ADRP X21, 0x73C000
	0x03A181D0 LDRB W8, [X20 + 0xFD7]
	0x03A181D4 LDR X21, [X21 + 0x498]
	0x03A181D8 MOV X19, X0
	0x03A181DC TBNZ X8, 0x0, 0x3A181F4
	0x03A181E0 ADRP X0, 0x73C000
	0x03A181E4 LDR X0, [X0 + 0x498]
	0x03A181E8 BL 0x1C16CF4
	0x03A181EC MOVZ W8, 0x1
	0x03A181F0 STRB W8, [X20 + 0xFD7]
	0x03A181F4 LDR X0, [X21]
	0x03A181F8 LDR W8, [X0 + 0xE0]
	0x03A181FC CBNZ W8, 0x3A18204
	0x03A18200 BL 0x1C16DFC
	0x03A18204 BL 0x3A138DC
	0x03A18208 CBZ X0, 0x3A18294
	0x03A1820C LDR W8, [X0 + 0x18]
	0x03A18210 MOV X20, X0
	0x03A18214 CMP W8, 0x1
	0x03A18218 B.LT 0x3A18264
	0x03A1821C MOV W22, W31
	0x03A18220 CMP W22, W8
	0x03A18224 B.CS 0x3A18298
	0x03A18228 ADD X8, X20, W22, 0x2, SXTH
	0x03A1822C ADD X21, X8, 0x20
	0x03A18230 MOV X0, X21
	0x03A18234 MOV X1, X31
	0x03A18238 BL 0x3C008D0
	0x03A1823C LDR X8, [X19 + 0xF0]
	0x03A18240 CBZ X8, 0x3A18294
	0x03A18244 LDR W8, [X8 + 0x64]
	0x03A18248 CMP W0, W8
	0x03A1824C B.EQ 0x3A1826C
	0x03A18250 LDR W8, [X20 + 0x18]
	0x03A18254 ADD W9, W22, 0x1
	0x03A18258 SXTH W22, W9
	0x03A1825C CMP W22, W8
	0x03A18260 B.LT 0x3A18220
	0x03A18264 MOVZ W0, 0x8000
	0x03A18268 B 0x3A18284
	0x03A1826C LDR W8, [X20 + 0x18]
	0x03A18270 CMP W22, W8
	0x03A18274 B.CS 0x3A18298
	0x03A18278 MOV X0, X21
	0x03A1827C MOV X1, X31
	0x03A18280 BL 0x3C008D8
	0x03A18284 LDP X20, X19, [X31 + 0x20]
	0x03A18288 LDP X22, X21, [X31 + 0x10]
	0x03A1828C LDR X30, [X31], #0x30
	0x03A18290 RET
	0x03A18294 BL 0x1C16F20
	0x03A18298 BL 0x1C16F28

ISIL:
	001 Subtract X31, X31, 352
	002 Move [X31+256], X29
	003 Move [X31+264], X30
	004 Move [X31+272], X28
	005 Move [X31+280], X27
	006 Move [X31+288], X26
	007 Move [X31+296], X25
	008 Move [X31+304], X24
	009 Move [X31+312], X23
	010 Move [X31+320], X22
	011 Move [X31+328], X21
	012 Move [X31+336], X20
	013 Move [X31+344], X19
	014 Move X23, 0x9CB000
	015 Move X21, 0x73E000
	016 Move X20, 0x73E000
	017 Move W8, [X23+4041]
	018 Move X21, [X21+360]
	019 Move X20, [X20+368]
	020 Move X28, X2
	021 Move X19, X1
	022 Move X22, X0
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {53}
	027 Move X0, 0x73E000
	028 Move X0, [X0+1560]
	029 Call 0x1C17CF4
	030 Move X0, 0x73E000
	031 Move X0, [X0+784]
	032 Call 0x1C17CF4
	033 Move X0, 0x73E000
	034 Move X0, [X0+1568]
	035 Call 0x1C17CF4
	036 Move X0, 0x73E000
	037 Move X0, [X0+368]
	038 Call 0x1C17CF4
	039 Move X0, 0x73E000
	040 Move X0, [X0+512]
	041 Call 0x1C17CF4
	042 Move X0, 0x73E000
	043 Move X0, [X0+528]
	044 Call 0x1C17CF4
	045 Move X0, 0x73E000
	046 Move X0, [X0+360]
	047 Call 0x1C17CF4
	048 Move X0, 0x6DD000
	049 Move X0, [X0+1448]
	050 Call 0x1C17CF4
	051 Move W8, 1
	052 Move [X23+4041], W8
	053 Move X0, [X21]
	054 NotImplemented "Instruction MOVI not yet implemented."
	055 Move [X31+96], X31
	056 Move [X31+64], V0
	057 Move [X31+72], V0
	058 Call 0x1C17F10
	059 Move X1, [X20]
	060 Move X20, X0
	061 Call List`1<IntPoint>..ctor, X0
	062 Compare X22, 0
	063 JumpIfEqual {286}
	064 Move X27, 0x73E000
	065 Move X27, [X27+528]
	066 Add X8, X31, 208
	067 Move X0, X22
	068 Move W1, W31
	069 Move X2, [X27]
	070 Call List`1<IntPoint>.get_Item, X0, X1
	071 Move X2, [X27]
	072 Move X24, [X31+208]
	073 Add X8, X31, 208
	074 Move X0, X22
	075 Move W1, W31
	076 Call List`1<IntPoint>.get_Item, X0, X1
	077 Move W2, [X22+24]
	078 Move X23, [X31+208]
	079 NotImplemented "Instruction CMP not yet implemented."
	080 Move X21, 0x6DD000
	081 Move X21, [X21+1448]
	082 Move W25, 1
	083 Move X2, [X27]
	084 Add X8, X31, 208
	085 Move X0, X22
	086 Move W1, W25
	087 Call List`1<IntPoint>.get_Item, X0, X1
	088 Move X8, [X31+208]
	089 Add X31, X8, 1
	090 Move X2, [X27]
	091 Add X8, X31, 208
	092 Move X0, X22
	093 Move W1, W25
	094 Call List`1<IntPoint>.get_Item, X0, X1
	095 Move X0, [X21]
	096 Move X26, [X31+208]
	097 Move W8, [X0+224]
	098 Compare W8, 0
	099 JumpIfNotEqual {101}
	100 Call 0x1C17DFC
	101 Move X0, X24
	102 Move X1, X26
	103 Move X2, X31
	104 Call Math.Min, X0, X1
	105 Move X2, [X27]
	106 Move X24, X0
	107 Add X8, X31, 208
	108 Move X0, X22
	109 Move W1, W25
	110 Call List`1<IntPoint>.get_Item, X0, X1
	111 Move X1, [X31+208]
	112 Move X0, X23
	113 Move X2, X31
	114 Call Math.Max, X0, X1
	115 Move X23, X0
	116 Move W2, [X22+24]
	117 Add W25, W25, 1
	118 NotImplemented "Instruction CMP not yet implemented."
	119 Move X25, 0x73D000
	120 Move X8, 0x73D000
	121 Move X25, [X25+784]
	122 Move X8, [X8+1568]
	123 NotImplemented "Instruction CMP not yet implemented."
	124 Add X8, X31, 208
	125 Move X26, X28
	126 Move X28, X31
	127 Add X29, X8, 8
	128 Move W21, 48
	129 Move X2, [X27]
	130 Add X8, X31, 208
	131 Move X0, X22
	132 Move W1, W24
	133 Call List`1<IntPoint>.get_Item, X0, X1
	134 Move V1, [X29]
	135 Move V0, [X29+16]
	136 Move X8, [X29+32]
	137 Move [X31+112], V1
	138 Move [X31+120], V0
	139 Move V0, [X31+112]
	140 Move V1, [X31+128]
	141 Move [X31+144], X8
	142 Move [X31+48], X8
	143 Move [X31+16], V0
	144 Move [X31+24], V1
	145 Compare X20, 0
	146 JumpIfEqual {286}
	147 Move V0, [X31+16]
	148 Move V1, [X31+32]
	149 Move X8, [X31+48]
	150 Move X9, [X25]
	151 Move [X31+160], V0
	152 Move [X31+168], V1
	153 Move [X31+192], X8
	154 Move W10, [X20+28]
	155 Move X8, [X20+16]
	156 Add W10, W10, 1
	157 Move [X20+28], W10
	158 Compare X8, 0
	159 JumpIfEqual {286}
	160 NotImplemented "Instruction LDRSW not yet implemented."
	161 Move W11, [X8+24]
	162 NotImplemented "Instruction CMP not yet implemented."
	163 Add W9, W10, 1
	164 NotImplemented "Instruction MADD not yet implemented."
	165 Move [X20+24], W9
	166 Move [X8+32], X28
	167 Move X9, [X31+192]
	168 Move V1, [X31+160]
	169 Move V0, [X31+176]
	170 Move [X8+72], X9
	171 Move [X8+56], V0
	172 Move [X8+40], V1
	173 Move X8, [X9+32]
	174 Move X9, [X31+192]
	175 Move V0, [X31+160]
	176 Move V1, [X31+176]
	177 Add X1, X31, 208
	178 Move X8, [X8+192]
	179 Move X0, X20
	180 Move X2, [X8+112]
	181 Move [X31+208], X28
	182 Move [X29+32], X9
	183 Move [X29], V0
	184 Move [X29+8], V1
	185 Call List`1<IntPoint>.AddWithResize, X0, X1
	186 Add X28, X28, 1
	187 NotImplemented "Instruction CMP not yet implemented."
	188 Move X8, 0x73D000
	189 Move W2, [X22+24]
	190 Move X8, [X8+1568]
	191 Move X0, X22
	192 Move W1, W31
	193 Move X3, [X8]
	194 Call List`1<IntPoint>.GetRange, X0, X1, X2
	195 Move X1, X0
	196 Move X28, X26
	197 Move X3, [X8]
	198 Move X0, X22
	199 Move W1, W31
	200 Call List`1<IntPoint>.GetRange, X0, X1, X2
	201 Compare X20, 0
	202 JumpIfEqual {286}
	203 Move X1, X0
	204 Move X8, 0x73D000
	205 Move X8, [X8+1560]
	206 Move X0, X20
	207 Move X2, [X8]
	208 Call List`1<IntPoint>.AddRange, X0, X1
	209 Move W8, [X20+24]
	210 Move [X28], W8
	211 Compare X19, 0
	212 JumpIfEqual {286}
	213 NotImplemented "Instruction LDRSW not yet implemented."
	214 Add X21, X23, 1
	215 NotImplemented "Instruction CMP not yet implemented."
	216 Add X8, X31, 208
	217 Add X22, X8, 8
	218 Move W23, 48
	219 Move X2, [X27]
	220 Add X8, X31, 208
	221 Move X0, X19
	222 Move W1, W21
	223 Call List`1<IntPoint>.get_Item, X0, X1
	224 Move V1, [X22]
	225 Move V0, [X22+16]
	226 Move X8, [X22+32]
	227 Move X9, [X25]
	228 Move [X31+64], V1
	229 Move [X31+72], V0
	230 Move V0, [X31+64]
	231 Move V1, [X31+80]
	232 Move [X31+96], X8
	233 Move [X31+192], X8
	234 Move [X31+160], V0
	235 Move [X31+168], V1
	236 Move W10, [X20+28]
	237 Move X8, [X20+16]
	238 Add W10, W10, 1
	239 Move [X20+28], W10
	240 Compare X8, 0
	241 JumpIfEqual {286}
	242 NotImplemented "Instruction LDRSW not yet implemented."
	243 Move W11, [X8+24]
	244 NotImplemented "Instruction CMP not yet implemented."
	245 Add W9, W10, 1
	246 NotImplemented "Instruction MADD not yet implemented."
	247 Move [X20+24], W9
	248 Move [X8+32], X21
	249 Move X9, [X31+192]
	250 Move V1, [X31+160]
	251 Move V0, [X31+176]
	252 Move [X8+72], X9
	253 Move [X8+56], V0
	254 Move [X8+40], V1
	255 Move X8, [X9+32]
	256 Move X9, [X31+192]
	257 Move V0, [X31+160]
	258 Move V1, [X31+176]
	259 Add X1, X31, 208
	260 Move X8, [X8+192]
	261 Move X0, X20
	262 Move X2, [X8+112]
	263 Move [X31+208], X21
	264 Move [X22+32], X9
	265 Move [X22], V0
	266 Move [X22+8], V1
	267 Call List`1<IntPoint>.AddWithResize, X0, X1
	268 NotImplemented "Instruction LDRSW not yet implemented."
	269 Add X21, X21, 1
	270 NotImplemented "Instruction CMP not yet implemented."
	271 Move X0, X20
	272 Move X20, [X31+336]
	273 Move X19, [X31+344]
	274 Move X22, [X31+320]
	275 Move X21, [X31+328]
	276 Move X24, [X31+304]
	277 Move X23, [X31+312]
	278 Move X26, [X31+288]
	279 Move X25, [X31+296]
	280 Move X28, [X31+272]
	281 Move X27, [X31+280]
	282 Move X29, [X31+256]
	283 Move X30, [X31+264]
	284 Add X31, X31, 352
	285 Return X0
	286 Call 0x1C17F20

Method: System.Collections.Generic.List`1<UnityEngine.Rendering.Universal.IntPoint> SortPivots(System.Collections.Generic.List`1<UnityEngine.Rendering.Universal.IntPoint> outPath, System.Collections.Generic.List`1<UnityEngine.Rendering.Universal.IntPoint> inPath)

Disassembly:
	0x03A1829C AND W8, W1, 0x1
	0x03A182A0 STRB W8, [X0 + 0xF8]
	0x03A182A4 RET
	0x03A182A8 STR X30, [X31 - 0x20]!
	0x03A182AC STP X20, X19, [X31 + 0x10]
	0x03A182B0 LDR X8, [X0 + 0xF0]
	0x03A182B4 CBZ X8, 0x3A18344
	0x03A182B8 LDR W8, [X8 + 0x3C]
	0x03A182BC MOV X19, X2
	0x03A182C0 CMP W8, 0x2
	0x03A182C4 B.EQ 0x3A182E8
	0x03A182C8 CMP W8, 0x1
	0x03A182CC B.EQ 0x3A182F4
	0x03A182D0 CBNZ W8, 0x3A1830C
	0x03A182D4 CBZ X1, 0x3A18344
	0x03A182D8 MOV X0, X1
	0x03A182DC MOV X1, X31
	0x03A182E0 BL 0x3C03928
	0x03A182E4 TBZ X0, 0x0, 0x3A182F4
	0x03A182E8 MOVZ W1, 0x1
	0x03A182EC MOV X0, X19
	0x03A182F0 B 0x3A182FC
	0x03A182F4 MOV X0, X19
	0x03A182F8 MOV W1, W31
	0x03A182FC LDP X20, X19, [X31 + 0x10]
	0x03A18300 MOV X2, X31
	0x03A18304 LDR X30, [X31], #0x20
	0x03A18308 B 0x3C5AFB8
	0x03A1830C MOV X20, X0
	0x03A18310 MOVZ W1, 0x2
	0x03A18314 MOV X0, X19
	0x03A18318 MOV X2, X31
	0x03A1831C BL 0x3C5AFB8
	0x03A18320 LDR X8, [X20 + 0xF0]
	0x03A18324 CBZ X8, 0x3A18344
	0x03A18328 LDP S0, S1, [X8 + 0x40]
	0x03A1832C LDR V2, [X8 + 0x48]
	0x03A18330 MOV X0, X19
	0x03A18334 LDP X20, X19, [X31 + 0x10]
	0x03A18338 MOV X1, X31
	0x03A1833C LDR X30, [X31], #0x20
	0x03A18340 B 0x3C5AFA4
	0x03A18344 BL 0x1C16F20
	0x03A18348 STP X29, X30, [X31 - 0x50]!
	0x03A1834C STP X26, X25, [X31 + 0x10]
	0x03A18350 STP X24, X23, [X31 + 0x20]
	0x03A18354 STP X22, X21, [X31 + 0x30]
	0x03A18358 STP X20, X19, [X31 + 0x40]
	0x03A1835C SUB X31, X31, 0x5C0
	0x03A18360 ADRP X19, 0x9C9000
	0x03A18364 LDRB W8, [X19 + 0xFD6]
	0x03A18368 MOV W20, W3
	0x03A1836C MOV X22, X2
	0x03A18370 MOV X21, X0
	0x03A18374 STR X1, [X31 + 0x5B8]
	0x03A18378 TBNZ X8, 0x0, 0x3A183B4
	0x03A1837C ADRP X0, 0x73A000
	0x03A18380 LDR X0, [X0 + 0xE28]
	0x03A18384 BL 0x1C16CF4
	0x03A18388 ADRP X0, 0x703000
	0x03A1838C LDR X0, [X0 + 0x8F8]
	0x03A18390 BL 0x1C16CF4
	0x03A18394 ADRP X0, 0x73C000
	0x03A18398 LDR X0, [X0 + 0x658]
	0x03A1839C BL 0x1C16CF4
	0x03A183A0 ADRP X0, 0x738000
	0x03A183A4 LDR X0, [X0 + 0xC80]
	0x03A183A8 BL 0x1C16CF4
	0x03A183AC MOVZ W8, 0x1
	0x03A183B0 STRB W8, [X19 + 0xFD6]
	0x03A183B4 LDR X19, [X22]
	0x03A183B8 ADD X0, X31, 0x300
	0x03A183BC MOVZ W2, 0x2B8
	0x03A183C0 MOV X1, X22
	0x03A183C4 BL 0x3EB1AC0
	0x03A183C8 LDR X8, [X21 + 0xF0]
	0x03A183CC CBZ X8, 0x3A185C8
	0x03A183D0 ADRP X9, 0x73C000
	0x03A183D4 LDR X9, [X9 + 0x658]
	0x03A183D8 LDR W22, [X8 + 0x68]
	0x03A183DC LDR X0, [X9]
	0x03A183E0 LDR W9, [X0 + 0xE0]
	0x03A183E4 CBNZ W9, 0x3A183EC
	0x03A183E8 BL 0x1C16DFC
	0x03A183EC ADD X0, X31, 0x48
	0x03A183F0 ADD X1, X31, 0x300
	0x03A183F4 MOVZ W2, 0x2B8
	0x03A183F8 BL 0x3EB1AC0
	0x03A183FC ADD X1, X31, 0x48
	0x03A18400 MOV X0, X21
	0x03A18404 MOV X2, X19
	0x03A18408 MOV W3, W22
	0x03A1840C BL 0x3A185CC
	0x03A18410 LDR X8, [X21 + 0xF0]
	0x03A18414 CBZ X8, 0x3A185C8
	0x03A18418 LDR W8, [X8 + 0x68]
	0x03A1841C CMP W8, 0x2
	0x03A18420 B.NE 0x3A18430
	0x03A18424 LDR X22, [X21 + 0xE8]
	0x03A18428 MOV W23, W31
	0x03A1842C B 0x3A1845C
	0x03A18430 LDR X22, [X21 + 0xE0]
	0x03A18434 MOV X0, X21
	0x03A18438 MOV X1, X31
	0x03A1843C BL 0x3A43A98
	0x03A18440 CBZ X0, 0x3A185C8
	0x03A18444 LDR X0, [X0 + 0x18]
	0x03A18448 CBZ X0, 0x3A185C8
	0x03A1844C MOV X1, X31
	0x03A18450 BL 0x3C1AB20
	0x03A18454 CMP W0, 0x1
	0x03A18458 CSET W23, EQ
	0x03A1845C MOV X0, X21
	0x03A18460 MOV X1, X31
	0x03A18464 BL 0x3A43A98
	0x03A18468 LDR X8, [X21 + 0xF0]
	0x03A1846C CBZ X8, 0x3A185C8
	0x03A18470 ADRP X9, 0x73A000
	0x03A18474 LDR X9, [X9 + 0xE28]
	0x03A18478 MOV X24, X0
	0x03A1847C ADRP X26, 0x703000
	0x03A18480 LDR X25, [X8 + 0x148]
	0x03A18484 LDR X0, [X9]
	0x03A18488 LDR W9, [X0 + 0xE0]
	0x03A1848C LDR X26, [X26 + 0x8F8]
	0x03A18490 CBNZ W9, 0x3A18498
	0x03A18494 BL 0x1C16DFC
	0x03A18498 MOVZ W3, 0x2
	0x03A1849C MOV X0, X19
	0x03A184A0 MOV X1, X24
	0x03A184A4 MOV X2, X25
	0x03A184A8 MOV W4, W31
	0x03A184AC MOV X5, X22
	0x03A184B0 MOV W6, W23
	0x03A184B4 MOV X7, X31
	0x03A184B8 BL 0x39E3120
	0x03A184BC MOV X0, X21
	0x03A184C0 MOV X1, X31

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+48], X30
	003 Move [X31+64], X26
	004 Move [X31+72], X25
	005 Move [X31+80], X24
	006 Move [X31+88], X23
	007 Move [X31+96], X22
	008 Move [X31+104], X21
	009 Move [X31+112], X20
	010 Move [X31+120], X19
	011 Move X21, 0x9CA000
	012 Move X22, 0x73D000
	013 Move X20, 0x73D000
	014 Move W8, [X21+4042]
	015 Move X22, [X22+360]
	016 Move X20, [X20+368]
	017 Move X19, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {42}
	022 Move X0, 0x73D000
	023 Move X0, [X0+1560]
	024 Call 0x1C17CF4
	025 Move X0, 0x73D000
	026 Move X0, [X0+1568]
	027 Call 0x1C17CF4
	028 Move X0, 0x73D000
	029 Move X0, [X0+368]
	030 Call 0x1C17CF4
	031 Move X0, 0x73D000
	032 Move X0, [X0+512]
	033 Call 0x1C17CF4
	034 Move X0, 0x73D000
	035 Move X0, [X0+528]
	036 Call 0x1C17CF4
	037 Move X0, 0x73D000
	038 Move X0, [X0+360]
	039 Call 0x1C17CF4
	040 Move W8, 1
	041 Move [X21+4042], W8
	042 Move X0, [X22]
	043 Call 0x1C17F10
	044 Move X1, [X20]
	045 Move X20, X0
	046 Call List`1<IntPoint>..ctor, X0
	047 Compare X19, 0
	048 JumpIfEqual {147}
	049 Move X24, 0x73D000
	050 Move X24, [X24+528]
	051 Move X23, 0x73D000
	052 Add X8, X31, 0
	053 Move X0, X19
	054 Move X2, [X24]
	055 Move X23, [X23+1568]
	056 Move W1, W31
	057 Call List`1<IntPoint>.get_Item, X0, X1
	058 Move X2, [X24]
	059 Add X8, X31, 0
	060 Move X0, X19
	061 Move W1, W31
	062 Call List`1<IntPoint>.get_Item, X0, X1
	063 Move W8, [X19+24]
	064 NotImplemented "Instruction CMP not yet implemented."
	065 Move X25, [X31]
	066 Move W21, W31
	067 Move W26, 1
	068 Move W22, 1
	069 Move X2, [X24]
	070 Add X8, X31, 0
	071 Move X0, X19
	072 Move W1, W22
	073 Call List`1<IntPoint>.get_Item, X0, X1
	074 Move TEMP, X26
	075 And TEMP, TEMP, 1
	076 Compare TEMP, 1
	077 JumpIfNotEqual {95}
	078 Move X8, [X31]
	079 NotImplemented "Instruction CMP not yet implemented."
	080 Move X2, [X24]
	081 Add X8, X31, 0
	082 Move X0, X19
	083 Move W1, W22
	084 Call List`1<IntPoint>.get_Item, X0, X1
	085 Move X8, [X31]
	086 Add X31, X8, 1
	087 Move X2, [X24]
	088 Add X8, X31, 0
	089 Move X0, X19
	090 Move W1, W22
	091 Call List`1<IntPoint>.get_Item, X0, X1
	092 Move X25, [X31]
	093 Move W26, W31
	094 Move W21, W22
	095 Move X2, [X24]
	096 Add X8, X31, 0
	097 Move X0, X19
	098 Move W1, W22
	099 Call List`1<IntPoint>.get_Item, X0, X1
	100 Move X8, [X31]
	101 NotImplemented "Instruction CMP not yet implemented."
	102 Move X2, [X24]
	103 Add X8, X31, 0
	104 Move X0, X19
	105 Move W1, W22
	106 Call List`1<IntPoint>.get_Item, X0, X1
	107 Move X25, [X31]
	108 Move W26, 1
	109 Move W8, [X19+24]
	110 Add W22, W22, 1
	111 NotImplemented "Instruction CMP not yet implemented."
	112 Move W21, W31
	113 Move X3, [X23]
	114 Subtract W2, W8, W21
	115 Move X0, X19
	116 Move W1, W21
	117 Call List`1<IntPoint>.GetRange, X0, X1, X2
	118 Compare X20, 0
	119 JumpIfEqual {147}
	120 Move X22, 0x73D000
	121 Move X22, [X22+1560]
	122 Move X1, X0
	123 Move X0, X20
	124 Move X2, [X22]
	125 Call List`1<IntPoint>.AddRange, X0, X1
	126 Move X3, [X23]
	127 Move X0, X19
	128 Move W1, W31
	129 Move W2, W21
	130 Call List`1<IntPoint>.GetRange, X0, X1, X2
	131 Move X2, [X22]
	132 Move X1, X0
	133 Move X0, X20
	134 Call List`1<IntPoint>.AddRange, X0, X1
	135 Move X0, X20
	136 Move X20, [X31+112]
	137 Move X19, [X31+120]
	138 Move X22, [X31+96]
	139 Move X21, [X31+104]
	140 Move X24, [X31+80]
	141 Move X23, [X31+88]
	142 Move X26, [X31+64]
	143 Move X25, [X31+72]
	144 Move X30, [X31+48]
	145 Add X31, X31, 128
	146 Return X0
	147 Call 0x1C17F20

Method: System.Collections.Generic.List`1<UnityEngine.Rendering.Universal.IntPoint> FixPivots(System.Collections.Generic.List`1<UnityEngine.Rendering.Universal.IntPoint> outPath, System.Collections.Generic.List`1<UnityEngine.Rendering.Universal.IntPoint> inPath, ref System.Int32 interiorStart)

Disassembly:
	0x03A184C4 BL 0x3A43A98
	0x03A184C8 LDR X8, [X26]
	0x03A184CC LDR X22, [X21 + 0x98]
	0x03A184D0 MOV X23, X0
	0x03A184D4 LDR W9, [X8 + 0xE0]
	0x03A184D8 CBNZ W9, 0x3A184E4
	0x03A184DC MOV X0, X8
	0x03A184E0 BL 0x1C16DFC
	0x03A184E4 MOVN W8, 0x0
	0x03A184E8 FMOV S0, W31
	0x03A184EC FMOV S1, W31
	0x03A184F0 FMOV S2, W31
	0x03A184F4 FMOV S3, W31
	0x03A184F8 MOV X0, X19
	0x03A184FC MOV X1, X23
	0x03A18500 MOV W2, W31
	0x03A18504 MOV W3, W20
	0x03A18508 MOV X4, X22
	0x03A1850C MOV W5, W31
	0x03A18510 MOV W6, W20
	0x03A18514 MOV W7, W31
	0x03A18518 STR X31, [X31 + 0x18]
	0x03A1851C STR W8, [X31 + 0x10]
	0x03A18520 STR W8, [X31 + 0x8]
	0x03A18524 STR W31, [X31]
	0x03A18528 BL 0x39E7E68
	0x03A1852C LDR X8, [X21 + 0xF0]
	0x03A18530 CBZ X8, 0x3A185C8
	0x03A18534 LDR X9, [X8 + 0x148]
	0x03A18538 CBZ X9, 0x3A185C8
	0x03A1853C LDR X10, [X9 + 0x48]
	0x03A18540 LDUR V0, [X9 + 0x38]
	0x03A18544 LDUR V1, [X9 + 0x28]
	0x03A18548 LDR W1, [X8 + 0x150]
	0x03A1854C STR X10, [X31 + 0x320]
	0x03A18550 STP V1, V0, [X31 + 0x300]
	0x03A18554 CBZ X19, 0x3A185C8
	0x03A18558 LDP V0, V1, [X31 + 0x300]
	0x03A1855C LDR X8, [X31 + 0x320]
	0x03A18560 ADRP X20, 0x738000
	0x03A18564 LDR X20, [X20 + 0xC80]
	0x03A18568 ADD X2, X31, 0x20
	0x03A1856C MOV X0, X19
	0x03A18570 MOV X3, X31
	0x03A18574 STP V0, V1, [X31 + 0x20]
	0x03A18578 STR X8, [X31 + 0x40]
	0x03A1857C BL 0x3C4FCFC
	0x03A18580 LDR X0, [X20]
	0x03A18584 LDR W8, [X0 + 0xE0]
	0x03A18588 CBNZ W8, 0x3A18590
	0x03A1858C BL 0x1C16DFC
	0x03A18590 ADD X0, X31, 0x5B8
	0x03A18594 MOV X1, X19
	0x03A18598 MOV X2, X31
	0x03A1859C BL 0x3C58FE4
	0x03A185A0 MOV X0, X19
	0x03A185A4 MOV X1, X31
	0x03A185A8 BL 0x3C4C310
	0x03A185AC ADD X31, X31, 0x5C0
	0x03A185B0 LDP X20, X19, [X31 + 0x40]
	0x03A185B4 LDP X22, X21, [X31 + 0x30]
	0x03A185B8 LDP X24, X23, [X31 + 0x20]
	0x03A185BC LDP X26, X25, [X31 + 0x10]
	0x03A185C0 LDP X29, X30, [X31], #0x50
	0x03A185C4 RET
	0x03A185C8 BL 0x1C16F20
	0x03A185CC SUB X31, X31, 0xF0
	0x03A185D0 STP X30, X23, [X31 + 0xC0]
	0x03A185D4 STP X22, X21, [X31 + 0xD0]
	0x03A185D8 STP X20, X19, [X31 + 0xE0]
	0x03A185DC ADRP X23, 0x9C9000
	0x03A185E0 LDRB W8, [X23 + 0xFEE]
	0x03A185E4 MOV W22, W3
	0x03A185E8 MOV X19, X2
	0x03A185EC MOV X21, X1
	0x03A185F0 MOV X20, X0
	0x03A185F4 TBNZ X8, 0x0, 0x3A1860C
	0x03A185F8 ADRP X0, 0x73C000
	0x03A185FC LDR X0, [X0 + 0x660]
	0x03A18600 BL 0x1C16CF4
	0x03A18604 MOVZ W8, 0x1
	0x03A18608 STRB W8, [X23 + 0xFEE]
	0x03A1860C MOVI V0.2D, 0x0
	0x03A18610 SUB W8, W22, 0x1
	0x03A18614 STP V0, V0, [X31 + 0x90]
	0x03A18618 STR V0, [X31 + 0x8]
	0x03A1861C CMP W8, 0x2
	0x03A18620 FMOV S0, 1
	0x03A18624 STR W31, [X31 + 0xB0]
	0x03A18628 B.HI 0x3A18638
	0x03A1862C ADRP X9, 0xFFFFFFFFFD17F000
	0x03A18630 ADD X9, X9, 0xAE0
	0x03A18634 LDR V0, [X9, W8, SXTW]
	0x03A18638 LDR V1, [X21 + 0xF0]!
	0x03A1863C MOVZ W8, 0x7F800000
	0x03A18640 FMOV S2, W8
	0x03A18644 MOVZ W9, 0x80000000
	0x03A18648 LDR V3, [X21 + 0x4]
	0x03A1864C SCVTF S1, S1
	0x03A18650 FMUL S1, S0, S1
	0x03A18654 FCVTZS W8, S1
	0x03A18658 FCMP S1, S2
	0x03A1865C SCVTF S1, S3
	0x03A18660 FMUL S0, S0, S1
	0x03A18664 CSEL W1, W9, W8, EQ
	0x03A18668 FCVTZS W8, S0
	0x03A1866C FCMP S0, S2
	0x03A18670 CSEL W2, W9, W8, EQ
	0x03A18674 ADD X0, X31, 0x80
	0x03A18678 MOV X3, X31
	0x03A1867C BL 0x3C227F4
	0x03A18680 MOV X0, X21
	0x03A18684 MOV X1, X31
	0x03A18688 BL 0x3C22060
	0x03A1868C MOV W1, W0
	0x03A18690 ADD X0, X31, 0x80
	0x03A18694 MOV X2, X31
	0x03A18698 BL 0x3C2240C
	0x03A1869C ADD X0, X31, 0x80
	0x03A186A0 MOV W1, W31
	0x03A186A4 MOV X2, X31
	0x03A186A8 BL 0x3C22B28
	0x03A186AC ADD X0, X31, 0x80
	0x03A186B0 MOV W1, W31
	0x03A186B4 MOV X2, X31
	0x03A186B8 BL 0x3C22B44
	0x03A186BC ADD X0, X31, 0x80
	0x03A186C0 MOV W1, W31
	0x03A186C4 MOV X2, X31
	0x03A186C8 BL 0x3C22520
	0x03A186CC MOVZ W8, 0x1
	0x03A186D0 MOVZ W9, 0x2
	0x03A186D4 STR W8, [X31 + 0x88]
	0x03A186D8 STR W9, [X31 + 0xA0]
	0x03A186DC CBZ X20, 0x3A187A4
	0x03A186E0 ADRP X10, 0x73C000
	0x03A186E4 LDR X8, [X20]
	0x03A186E8 LDR X10, [X10 + 0x660]
	0x03A186EC LDRH W9, [X8 + 0x12E]
	0x03A186F0 LDR X1, [X10]
	0x03A186F4 CBZ X9, 0x3A18718
	0x03A186F8 LDR X10, [X8 + 0xB0]
	0x03A186FC ADD X10, X10, 0x8
	0x03A18700 LDUR X11, [X10 - 0x8]
	0x03A18704 CMP X11, X1
	0x03A18708 B.EQ 0x3A18728
	0x03A1870C SUBS X9, X9, 0x1
	0x03A18710 ADD X10, X10, 0x10
	0x03A18714 B.NE 0x3A18700
	0x03A18718 MOV X0, X20
	0x03A1871C MOV W2, W31
	0x03A18720 BL 0x1C5C788
	0x03A18724 B 0x3A18734
	0x03A18728 LDRSW X9, [X10]
	0x03A1872C ADD X8, X8, X9, 0x4, LSL
	0x03A18730 ADD X0, X8, 0x138
	0x03A18734 LDP X8, X1, [X0]
	0x03A18738 MOV X0, X20
	0x03A1873C BLR X8
	0x03A18740 CBZ X0, 0x3A187A4
	0x03A18744 LDR W1, [X0 + 0x150]
	0x03A18748 LDP V0, V1, [X31 + 0x80]
	0x03A1874C LDR V2, [X31 + 0xA]
	0x03A18750 LDR W8, [X31 + 0xB0]
	0x03A18754 STP V0, V1, [X31 + 0x40]
	0x03A18758 STR V2, [X31 + 0x6]
	0x03A1875C STR W8, [X31 + 0x70]
	0x03A18760 CBZ X19, 0x3A187A4
	0x03A18764 LDP V0, V1, [X31 + 0x40]
	0x03A18768 LDR V2, [X31 + 0x6]
	0x03A1876C LDR W8, [X31 + 0x70]
	0x03A18770 ADD X2, X31, 0x0
	0x03A18774 MOVZ W3, 0x1
	0x03A18778 MOV X0, X19
	0x03A1877C MOV X4, X31
	0x03A18780 STP V0, V1, [X31]
	0x03A18784 STR V2, [X31 + 0x2]
	0x03A18788 STR W8, [X31 + 0x30]
	0x03A1878C BL 0x3C4CB34
	0x03A18790 LDP X20, X19, [X31 + 0xE0]
	0x03A18794 LDP X22, X21, [X31 + 0xD0]
	0x03A18798 LDP X30, X23, [X31 + 0xC0]
	0x03A1879C ADD X31, X31, 0xF0
	0x03A187A0 RET
	0x03A187A4 BL 0x1C16F20
	0x03A187A8 SUB X31, X31, 0xA0
	0x03A187AC STR X30, [X31 + 0x40]
	0x03A187B0 STP X28, X27, [X31 + 0x50]
	0x03A187B4 STP X26, X25, [X31 + 0x60]
	0x03A187B8 STP X24, X23, [X31 + 0x70]
	0x03A187BC STP X22, X21, [X31 + 0x80]
	0x03A187C0 STP X20, X19, [X31 + 0x90]
	0x03A187C4 MRS X27, 0xC000
	0x03A187C8 LDR X8, [X27 + 0x28]
	0x03A187CC ADRP X25, 0x9C9000
	0x03A187D0 MOV X19, X6

ISIL:
	001 Subtract X31, X31, 256
	002 Move [X31+160], X29
	003 Move [X31+168], X30
	004 Move [X31+176], X28
	005 Move [X31+184], X27
	006 Move [X31+192], X26
	007 Move [X31+200], X25
	008 Move [X31+208], X24
	009 Move [X31+216], X23
	010 Move [X31+224], X22
	011 Move [X31+232], X21
	012 Move [X31+240], X20
	013 Move [X31+248], X19
	014 Move X19, 0x9CA000
	015 Move W8, [X19+4043]
	016 Move X22, X2
	017 Move X20, X1
	018 Move X21, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {37}
	023 Move X0, 0x73D000
	024 Move X0, [X0+1576]
	025 Call 0x1C17CF4
	026 Move X0, 0x73D000
	027 Move X0, [X0+512]
	028 Call 0x1C17CF4
	029 Move X0, 0x73D000
	030 Move X0, [X0+528]
	031 Call 0x1C17CF4
	032 Move X0, 0x73D000
	033 Move X0, [X0+1584]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X19+4043], W8
	037 Move X0, X21
	038 Move [X31+104], X31
	039 Call LightUtility.SortPivots, X0, X1
	040 Compare X0, 0
	041 JumpIfEqual {214}
	042 Move X25, 0x73D000
	043 Move X25, [X25+528]
	044 Add X8, X31, 112
	045 Move W1, W31
	046 Move X21, X0
	047 Move X2, [X25]
	048 Add X19, X31, 112
	049 Call List`1<IntPoint>.get_Item, X0, X1
	050 Move W8, [X21+24]
	051 Move [X31+8], X22
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Move X28, [X31+104]
	054 Move X23, [X31+112]
	055 Add X26, X19, 8
	056 Add X27, X19, 32
	057 Move W22, 1
	058 Move X2, [X25]
	059 Subtract W8, W8, 1
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Subtract W1, W22, 1
	062 Add X8, X31, 112
	063 Move X0, X21
	064 NotImplemented "Instruction CSINC not yet implemented."
	065 Call List`1<IntPoint>.get_Item, X0, X1
	066 Move X2, [X25]
	067 Move X19, [X31+112]
	068 Add X8, X31, 112
	069 Move X0, X21
	070 Move W1, W22
	071 Call List`1<IntPoint>.get_Item, X0, X1
	072 Move V0, [X26]
	073 Move V1, [X27]
	074 Move X2, [X25]
	075 Move X29, [X31+112]
	076 Add X8, X31, 112
	077 Move X0, X21
	078 Move W1, W24
	079 Move [X31+64], V1
	080 Move [X31+72], V0
	081 Call List`1<IntPoint>.get_Item, X0, X1
	082 NotImplemented "Instruction CMP not yet implemented."
	083 Move X24, [X31+112]
	084 Move X0, X21
	085 Move W1, W22
	086 Move X2, X23
	087 Call LightUtility.TestPivot, X0, X1, X2
	088 Move TEMP, X0
	089 And TEMP, TEMP, 1
	090 Compare TEMP, 1
	091 JumpIfNotEqual {114}
	092 NotImplemented "Instruction CMP not yet implemented."
	093 Compare X20, 0
	094 JumpIfEqual {213}
	095 NotImplemented "Instruction LDRSW not yet implemented."
	096 Add X9, X23, 1
	097 NotImplemented "Instruction CMP not yet implemented."
	098 NotImplemented "Instruction CSINC not yet implemented."
	099 Move X8, 0x73D000
	100 Move V1, [X31+64]
	101 Move V0, [X31+80]
	102 Move X8, [X8+1584]
	103 Add X2, X31, 112
	104 Move X0, X21
	105 Move W1, W22
	106 Move X3, [X8]
	107 Move W8, 3
	108 Move [X31+112], X19
	109 Move [X26], V0
	110 Move [X31+136], X8
	111 Move [X27], V1
	112 Call List`1<IntPoint>.set_Item, X0, X1, X2
	113 Move X28, X19
	114 Move X2, [X25]
	115 Add X8, X31, 112
	116 Move X0, X21
	117 Move W1, W22
	118 Add W19, W22, 1
	119 Call List`1<IntPoint>.get_Item, X0, X1
	120 Move W8, [X21+24]
	121 Move X23, [X31+112]
	122 Move W22, W19
	123 NotImplemented "Instruction CMP not yet implemented."
	124 Move [X31+104], X28
	125 Subtract W8, W8, 1
	126 NotImplemented "Instruction CMP not yet implemented."
	127 Move X19, 0x73D000
	128 Move X27, 0x73D000
	129 Move X19, [X19+1584]
	130 Move X27, [X27+1576]
	131 Add X8, X31, 112
	132 Move W22, 1
	133 Add X26, X8, 8
	134 Move W23, W22
	135 Subtract W24, W22, 1
	136 Add W22, W22, 1
	137 Move X2, [X25]
	138 Add X8, X31, 112
	139 Move X0, X21
	140 Move W1, W24
	141 Call List`1<IntPoint>.get_Item, X0, X1
	142 Move X2, [X25]
	143 Move X29, [X31+112]
	144 Add X8, X31, 112
	145 Move X0, X21
	146 Move W1, W23
	147 Call List`1<IntPoint>.get_Item, X0, X1
	148 Move X8, [X26+32]
	149 Move V1, [X26]
	150 Move V0, [X26+16]
	151 Move X2, [X25]
	152 Move X28, [X31+112]
	153 Move [X31+48], X8
	154 Add X8, X31, 112
	155 Move X0, X21
	156 Move W1, W22
	157 Move [X31+16], V1
	158 Move [X31+24], V0
	159 Call List`1<IntPoint>.get_Item, X0, X1
	160 Subtract X8, X28, X29
	161 NotImplemented "Instruction CMP not yet implemented."
	162 Move X8, [X31+112]
	163 NotImplemented "Instruction CMP not yet implemented."
	164 Subtract X8, X28, 1
	165 Move X9, [X31+48]
	166 Move V0, [X31+16]
	167 Move V1, [X31+32]
	168 Move X3, [X19]
	169 Add X2, X31, 112
	170 Move X0, X21
	171 Move W1, W23
	172 Move [X31+112], X8
	173 Move [X26+32], X9
	174 Move [X26], V0
	175 Move [X26+8], V1
	176 Call List`1<IntPoint>.set_Item, X0, X1, X2
	177 Move X9, [X31+48]
	178 Move V0, [X31+16]
	179 Move V1, [X31+32]
	180 Move X3, [X27]
	181 Add X2, X31, 112
	182 Move X0, X21
	183 Move W1, W23
	184 Move [X31+112], X8
	185 Move [X26+32], X9
	186 Move [X26], V0
	187 Move [X26+8], V1
	188 Call List`1<IntPoint>.Insert, X0, X1, X2
	189 Move W8, [X21+24]
	190 Subtract W8, W8, 1
	191 NotImplemented "Instruction CMP not yet implemented."
	192 Move W8, [X21+24]
	193 Subtract W8, W8, 1
	194 NotImplemented "Instruction CMP not yet implemented."
	195 Move X2, [X31+8]
	196 Move X0, X21
	197 Move X1, X20
	198 Call LightUtility.DegeneratePivots, X0, X1, X2
	199 Move X20, [X31+240]
	200 Move X19, [X31+248]
	201 Move X22, [X31+224]
	202 Move X21, [X31+232]
	203 Move X24, [X31+208]
	204 Move X23, [X31+216]
	205 Move X26, [X31+192]
	206 Move X25, [X31+200]
	207 Move X28, [X31+176]
	208 Move X27, [X31+184]
	209 Move X29, [X31+160]
	210 Move X30, [X31+168]
	211 Add X31, X31, 256
	212 Return X0
	213 Move [X31+104], X28
	214 Call 0x1C17F20

Method: System.Collections.Generic.List`1<UnityEngine.Vector2> GetOutlinePath(UnityEngine.Vector3[] shapePath, System.Single offsetDistance)

Disassembly:
	0x03A187D4 MOV X20, X5
	0x03A187D8 STR X8, [X31 + 0x38]
	0x03A187DC LDRB W8, [X25 + 0xFD8]
	0x03A187E0 MOV X22, X4
	0x03A187E4 MOV W23, W2
	0x03A187E8 MOV W21, W1
	0x03A187EC MOV X24, X0
	0x03A187F0 TBNZ X8, 0x0, 0x3A18820
	0x03A187F4 ADRP X0, 0x73C000
	0x03A187F8 LDR X0, [X0 + 0x668]
	0x03A187FC BL 0x1C16CF4
	0x03A18800 ADRP X0, 0x73C000
	0x03A18804 LDR X0, [X0 + 0x548]
	0x03A18808 BL 0x1C16CF4
	0x03A1880C ADRP X0, 0x73C000
	0x03A18810 LDR X0, [X0 + 0x670]
	0x03A18814 BL 0x1C16CF4
	0x03A18818 MOVZ W8, 0x1
	0x03A1881C STRB W8, [X25 + 0xFD8]
	0x03A18820 MOVI V0.2D, 0x0
	0x03A18824 STR W31, [X31 + 0x30]
	0x03A18828 STP V0, V0, [X31 + 0x10]
	0x03A1882C STR V0, [X31]
	0x03A18830 LDR X8, [X24 + 0xF0]
	0x03A18834 CBZ X8, 0x3A18A2C
	0x03A18838 LDR X25, [X8 + 0x158]
	0x03A1883C CBZ X25, 0x3A18A2C
	0x03A18840 ADRP X10, 0x73C000
	0x03A18844 LDR X8, [X25]
	0x03A18848 LDR X10, [X10 + 0x668]
	0x03A1884C LDRH W9, [X8 + 0x12E]
	0x03A18850 LDR X1, [X10]
	0x03A18854 CBZ X9, 0x3A18878
	0x03A18858 LDR X10, [X8 + 0xB0]
	0x03A1885C ADD X10, X10, 0x8
	0x03A18860 LDUR X11, [X10 - 0x8]
	0x03A18864 CMP X11, X1
	0x03A18868 B.EQ 0x3A18888
	0x03A1886C SUBS X9, X9, 0x1
	0x03A18870 ADD X10, X10, 0x10
	0x03A18874 B.NE 0x3A18860
	0x03A18878 MOV X0, X25
	0x03A1887C MOV W2, W31
	0x03A18880 BL 0x1C5C788
	0x03A18884 B 0x3A18894
	0x03A18888 LDRSW X9, [X10]
	0x03A1888C ADD X8, X8, X9, 0x4, LSL
	0x03A18890 ADD X0, X8, 0x138
	0x03A18894 LDP X8, X1, [X0]
	0x03A18898 MOV X0, X25
	0x03A1889C BLR X8
	0x03A188A0 CBZ X0, 0x3A18A2C
	0x03A188A4 LDR W8, [X0 + 0x18]
	0x03A188A8 MOV X25, X0
	0x03A188AC CMP W8, 0x1
	0x03A188B0 B.LT 0x3A188F8
	0x03A188B4 ADRP X28, 0x73C000
	0x03A188B8 LDR X28, [X28 + 0x670]
	0x03A188BC MOV W26, W31
	0x03A188C0 LDR X2, [X28]
	0x03A188C4 MOV X0, X25
	0x03A188C8 MOV W1, W26
	0x03A188CC BL 0x301BCCC
	0x03A188D0 CBZ X0, 0x3A18A2C
	0x03A188D4 LDRB W8, [X0 + 0x84]
	0x03A188D8 CBZ W8, 0x3A188E8
	0x03A188DC LDR V0, [X0 + 0x88]
	0x03A188E0 FCMP S0, 0x0
	0x03A188E4 B.GT 0x3A189F4
	0x03A188E8 LDR W8, [X25 + 0x18]
	0x03A188EC ADD W26, W26, 0x1
	0x03A188F0 CMP W26, W8
	0x03A188F4 B.LT 0x3A188C0
	0x03A188F8 MOVN W25, 0x0
	0x03A188FC LDR X8, [X24 + 0xF0]
	0x03A18900 CBZ X8, 0x3A18A2C
	0x03A18904 LDRB W8, [X8 + 0x61]
	0x03A18908 CBZ W8, 0x3A189BC
	0x03A1890C MOV X0, X24
	0x03A18910 BL 0x3A181BC
	0x03A18914 ADD W8, W23, W21
	0x03A18918 CMP W8, W21
	0x03A1891C B.LE 0x3A189A0
	0x03A18920 CBZ X22, 0x3A18A2C
	0x03A18924 ADD X9, X31, 0x0
	0x03A18928 MOVZ W10, 0x34
	0x03A1892C SXTW X8, W8
	0x03A18930 ORR X23, X9, 0xF
	0x03A18934 SMADDL X9, X21, X10, X22
	0x03A18938 SXTH W24, W0
	0x03A1893C ADD X26, X9, 0x20
	0x03A18940 SUB X28, X8, W21, SXTW
	0x03A18944 LDR W8, [X22 + 0x18]
	0x03A18948 CMP W21, W8
	0x03A1894C B.CS 0x3A18A30
	0x03A18950 LDR W8, [X26 + 0x30]
	0x03A18954 LDP V1, V0, [X26 + 0x10]
	0x03A18958 LDR V2, [X26]
	0x03A1895C MOV X0, X23
	0x03A18960 MOV X1, X31
	0x03A18964 STR W8, [X31 + 0x30]
	0x03A18968 STP V1, V0, [X31 + 0x10]
	0x03A1896C STR V2, [X31]
	0x03A18970 BL 0x3C5AE58
	0x03A18974 CMP W24, W0, SXTH
	0x03A18978 B.LT 0x3A18990
	0x03A1897C MOV X0, X23
	0x03A18980 MOV X1, X31
	0x03A18984 BL 0x3C5AE60
	0x03A18988 CMP W24, W0, SXTH
	0x03A1898C B.LE 0x3A189A4
	0x03A18990 ADD W21, W21, 0x1
	0x03A18994 SUBS X28, X28, 0x1
	0x03A18998 ADD X26, X26, 0x34
	0x03A1899C B.NE 0x3A18944
	0x03A189A0 MOVN W21, 0x0
	0x03A189A4 CMP W21, W25
	0x03A189A8 CSET W8, GT
	0x03A189AC CSEL W9, W21, W25, GT
	0x03A189B0 STRB W8, [X19]
	0x03A189B4 STR W9, [X20]
	0x03A189B8 B 0x3A189C4
	0x03A189BC STR W25, [X20]
	0x03A189C0 STRB W31, [X19]
	0x03A189C4 LDR X8, [X27 + 0x28]
	0x03A189C8 LDR X9, [X31 + 0x38]
	0x03A189CC CMP X8, X9
	0x03A189D0 B.NE 0x3A18A34
	0x03A189D4 LDP X20, X19, [X31 + 0x90]
	0x03A189D8 LDP X22, X21, [X31 + 0x80]
	0x03A189DC LDP X24, X23, [X31 + 0x70]
	0x03A189E0 LDP X26, X25, [X31 + 0x60]
	0x03A189E4 LDP X28, X27, [X31 + 0x50]
	0x03A189E8 LDR X30, [X31 + 0x40]
	0x03A189EC ADD X31, X31, 0xA0
	0x03A189F0 RET
	0x03A189F4 ADD W25, W23, W21
	0x03A189F8 MOVZ W8, 0x34
	0x03A189FC SUB W25, W25, 0x1
	0x03A18A00 CMP W25, W21
	0x03A18A04 B.LT 0x3A188F8
	0x03A18A08 CBZ X22, 0x3A18A2C
	0x03A18A0C LDR W9, [X22 + 0x18]
	0x03A18A10 CMP W25, W9
	0x03A18A14 B.CS 0x3A18A30
	0x03A18A18 SMADDL X9, X25, X8, X22
	0x03A18A1C LDR W9, [X9 + 0x34]
	0x03A18A20 CMP W9, 0x0
	0x03A18A24 B.LE 0x3A189FC
	0x03A18A28 B 0x3A188FC
	0x03A18A2C BL 0x1C16F20
	0x03A18A30 BL 0x1C16F28
	0x03A18A34 BL 0x3EB1B20
	0x03A18A38 SUB X31, X31, 0xE0
	0x03A18A3C STP X30, X27, [X31 + 0x90]
	0x03A18A40 STP X26, X25, [X31 + 0xA0]
	0x03A18A44 STP X24, X23, [X31 + 0xB0]
	0x03A18A48 STP X22, X21, [X31 + 0xC0]
	0x03A18A4C STP X20, X19, [X31 + 0xD0]
	0x03A18A50 ADRP X25, 0x9C9000
	0x03A18A54 STR X1, [X31 + 0x88]
	0x03A18A58 ADRP X24, 0x73B000
	0x03A18A5C LDRB W8, [X25 + 0xFD9]
	0x03A18A60 LDR X24, [X24 + 0xFF0]
	0x03A18A64 MOV X20, X5
	0x03A18A68 MOV X19, X4
	0x03A18A6C MOV X21, X3
	0x03A18A70 MOV X22, X2
	0x03A18A74 MOV X23, X1
	0x03A18A78 TBNZ X8, 0x0, 0x3A18AC0
	0x03A18A7C ADRP X0, 0x73C000
	0x03A18A80 LDR X0, [X0 + 0xB0]
	0x03A18A84 BL 0x1C16CF4
	0x03A18A88 ADRP X0, 0x738000
	0x03A18A8C LDR X0, [X0 + 0xC80]
	0x03A18A90 BL 0x1C16CF4
	0x03A18A94 ADRP X0, 0x73B000
	0x03A18A98 LDR X0, [X0 + 0xFF0]
	0x03A18A9C BL 0x1C16CF4
	0x03A18AA0 ADRP X0, 0x73C000
	0x03A18AA4 LDR X0, [X0 + 0x678]
	0x03A18AA8 BL 0x1C16CF4
	0x03A18AAC ADRP X0, 0x73C000
	0x03A18AB0 LDR X0, [X0 + 0x680]
	0x03A18AB4 BL 0x1C16CF4
	0x03A18AB8 MOVZ W8, 0x1
	0x03A18ABC STRB W8, [X25 + 0xFD9]
	0x03A18AC0 LDR X0, [X24]
	0x03A18AC4 MOVI V0.2D, 0x0
	0x03A18AC8 STUR V0, [X31 + 0x6C]
	0x03A18ACC STP V0, V0, [X31 + 0x50]
	0x03A18AD0 STP V0, V0, [X31 + 0x30]
	0x03A18AD4 STP V0, V0, [X31 + 0x10]
	0x03A18AD8 LDR W8, [X0 + 0xE0]
	0x03A18ADC CBNZ W8, 0x3A18AE4
	0x03A18AE0 BL 0x1C16DFC
	0x03A18AE4 MOV X0, X21
	0x03A18AE8 MOV X1, X31
	0x03A18AEC BL 0x3A43B70
	0x03A18AF0 CBZ X0, 0x3A18BB0
	0x03A18AF4 ADRP X27, 0x73C000
	0x03A18AF8 LDR X27, [X27 + 0x680]
	0x03A18AFC MOV X24, X0
	0x03A18B00 MOVI V0.2D, 0x0
	0x03A18B04 STUR V0, [X31 + 0x6C]
	0x03A18B08 LDR X0, [X27]
	0x03A18B0C STP V0, V0, [X31 + 0x50]
	0x03A18B10 STP V0, V0, [X31 + 0x30]
	0x03A18B14 STP V0, V0, [X31 + 0x10]
	0x03A18B18 LDR W8, [X0 + 0xE0]
	0x03A18B1C CBNZ W8, 0x3A18B28
	0x03A18B20 BL 0x1C16DFC
	0x03A18B24 LDR X0, [X27]
	0x03A18B28 LDR X8, [X0 + 0xB8]
	0x03A18B2C LDR X25, [X8 + 0x8]
	0x03A18B30 CBNZ X25, 0x3A18B84
	0x03A18B34 LDR W8, [X0 + 0xE0]
	0x03A18B38 CBNZ W8, 0x3A18B44
	0x03A18B3C BL 0x1C16DFC
	0x03A18B40 LDR X0, [X27]
	0x03A18B44 ADRP X9, 0x73C000
	0x03A18B48 LDR X8, [X0 + 0xB8]
	0x03A18B4C LDR X9, [X9 + 0xB0]
	0x03A18B50 LDR X26, [X8]
	0x03A18B54 LDR X0, [X9]
	0x03A18B58 BL 0x1C16F10
	0x03A18B5C ADRP X8, 0x73C000
	0x03A18B60 LDR X8, [X8 + 0x678]
	0x03A18B64 MOV X1, X26
	0x03A18B68 MOV X3, X31
	0x03A18B6C MOV X25, X0
	0x03A18B70 LDR X2, [X8]
	0x03A18B74 BL 0x3A37934
	0x03A18B78 LDR X8, [X27]
	0x03A18B7C LDR X8, [X8 + 0xB8]
	0x03A18B80 STR X25, [X8 + 0x8]
	0x03A18B84 ADD X6, X31, 0x10
	0x03A18B88 MOV X0, X24
	0x03A18B8C MOV X1, X23
	0x03A18B90 MOV X2, X22
	0x03A18B94 MOV X3, X21
	0x03A18B98 MOV X4, X20
	0x03A18B9C MOV X5, X19
	0x03A18BA0 MOV X7, X25
	0x03A18BA4 STR X31, [X31]
	0x03A18BA8 BL 0x3A36908
	0x03A18BAC B 0x3A18BE8
	0x03A18BB0 ADRP X8, 0x738000
	0x03A18BB4 LDR X8, [X8 + 0xC80]
	0x03A18BB8 LDP X22, X21, [X21 + 0x8]
	0x03A18BBC LDR X0, [X8]

ISIL:
	001 Subtract X31, X31, 256
	002 Move [X31+144], D9
	003 Move [X31+152], D8
	004 Move [X31+160], X30
	005 Move [X31+176], X28
	006 Move [X31+184], X27
	007 Move [X31+192], X26
	008 Move [X31+200], X25
	009 Move [X31+208], X24
	010 Move [X31+216], X23
	011 Move [X31+224], X22
	012 Move [X31+232], X21
	013 Move [X31+240], X20
	014 Move [X31+248], X19
	015 Move X23, 0x9CA000
	016 Move X24, 0x73D000
	017 Move X21, 0x73D000
	018 Move X22, 0x737000
	019 Move X19, 0x738000
	020 Move W8, [X23+4044]
	021 Move X24, [X24+360]
	022 Move X21, [X21+368]
	023 Move X22, [X22+1816]
	024 Move X19, [X19+3848]
	025 Move V8, V0
	026 Move X20, X0
	027 Move TEMP, X8
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfEqual {72}
	031 Move X0, 0x73D000
	032 Move X0, [X0+1296]
	033 Call 0x1C17CF4
	034 Move X0, 0x737000
	035 Move X0, [X0+1824]
	036 Call 0x1C17CF4
	037 Move X0, 0x73D000
	038 Move X0, [X0+784]
	039 Call 0x1C17CF4
	040 Move X0, 0x73D000
	041 Move X0, [X0+368]
	042 Call 0x1C17CF4
	043 Move X0, 0x73D000
	044 Move X0, [X0+1016]
	045 Call 0x1C17CF4
	046 Move X0, 0x738000
	047 Move X0, [X0+3848]
	048 Call 0x1C17CF4
	049 Move X0, 0x73D000
	050 Move X0, [X0+512]
	051 Call 0x1C17CF4
	052 Move X0, 0x73D000
	053 Move X0, [X0+568]
	054 Call 0x1C17CF4
	055 Move X0, 0x73D000
	056 Move X0, [X0+576]
	057 Call 0x1C17CF4
	058 Move X0, 0x73D000
	059 Move X0, [X0+528]
	060 Call 0x1C17CF4
	061 Move X0, 0x737000
	062 Move X0, [X0+1816]
	063 Call 0x1C17CF4
	064 Move X0, 0x73D000
	065 Move X0, [X0+360]
	066 Call 0x1C17CF4
	067 Move X0, 0x73D000
	068 Move X0, [X0+1008]
	069 Call 0x1C17CF4
	070 Move W8, 1
	071 Move [X23+4044], W8
	072 Move X0, [X24]
	073 Call 0x1C17F10
	074 Move X1, [X21]
	075 Move X21, X0
	076 Call List`1<IntPoint>..ctor, X0
	077 Move X0, [X22]
	078 Call 0x1C17F10
	079 Move X1, [X19]
	080 Move X19, X0
	081 Call List`1<Vector2>..ctor, X0
	082 Compare X20, 0
	083 JumpIfEqual {273}
	084 Move X8, [X20+24]
	085 Move X23, -49467392
	086 NotImplemented "Instruction CMP not yet implemented."
	087 Move X24, 0x73D000
	088 Move X24, [X24+784]
	089 Move V9, [X23+396]
	090 Move X22, X31
	091 And X8, X8, 0
	092 Add X25, X20, 36
	093 Move W26, 0x7F800000
	094 Move X27, 0x80000000
	095 Move W28, 48
	096 NotImplemented "Instruction CMP not yet implemented."
	097 Move S0, [X25-4]
	098 Move S1, [X25]
	099 NotImplemented "Instruction MOVI not yet implemented."
	100 Move [X31+16], V2
	101 Move [X31+24], V2
	102 Move [X31], V2
	103 Move S2, W26
	104 Multiply S0, S0, S9
	105 Multiply S1, S1, S9
	106 NotImplemented "Instruction FCVTZS not yet implemented."
	107 NotImplemented "Instruction FCMP not yet implemented."
	108 NotImplemented "Instruction FCVTZS not yet implemented."
	109 NotImplemented "Instruction CSEL not yet implemented."
	110 NotImplemented "Instruction FCMP not yet implemented."
	111 NotImplemented "Instruction CSEL not yet implemented."
	112 Add X0, X31, 0
	113 Move X3, X31
	114 Call IntPoint..ctor, X0, X1, X2
	115 Compare X21, 0
	116 JumpIfEqual {273}
	117 Move V0, [X31]
	118 Move V1, [X31+16]
	119 Move V2, [X31+2]
	120 Move X10, [X24]
	121 Move [X31+48], V0
	122 Move [X31+56], V1
	123 Move [X31+5], V2
	124 Move W9, [X21+28]
	125 Move X8, [X21+16]
	126 Add W9, W9, 1
	127 Move [X21+28], W9
	128 Compare X8, 0
	129 JumpIfEqual {273}
	130 NotImplemented "Instruction LDRSW not yet implemented."
	131 Move W11, [X8+24]
	132 NotImplemented "Instruction CMP not yet implemented."
	133 Add W10, W9, 1
	134 Move [X21+24], W10
	135 Move V1, [X31+64]
	136 Move V0, [X31+80]
	137 Move V2, [X31+3]
	138 NotImplemented "Instruction NOP not yet implemented."
	139 NotImplemented "Instruction MADD not yet implemented."
	140 Move [X8+48], V1
	141 Move [X8+56], V0
	142 Move [X8+2], V2
	143 Move X8, [X10+32]
	144 Move V0, [X31+48]
	145 Move V1, [X31+64]
	146 Move V2, [X31+5]
	147 Add X1, X31, 96
	148 Move X8, [X8+192]
	149 Move X0, X21
	150 Move X2, [X8+112]
	151 Move [X31+96], V0
	152 Move [X31+104], V1
	153 Move [X31+8], V2
	154 Call List`1<IntPoint>.AddWithResize, X0, X1
	155 Move W8, [X20+24]
	156 Add X22, X22, 1
	157 Add X25, X25, 12
	158 NotImplemented "Instruction CMP not yet implemented."
	159 Move X8, 0x73D000
	160 Move X8, [X8+1008]
	161 Move X20, 0x73D000
	162 Move X22, 0x73D000
	163 Move X0, [X8]
	164 Move X20, [X20+1016]
	165 Move X22, [X22+1296]
	166 Call 0x1C17F10
	167 Move X1, [X20]
	168 Move X20, X0
	169 Call List`1<Object>..ctor, X0
	170 Move X0, [X22]
	171 Move [X31+48], X20
	172 Call 0x1C17F10
	173 Move D0, 16.000000001862645
	174 Move X22, X0
	175 Call ClipperOffset..ctor, X0, V0
	176 Compare X22, 0
	177 JumpIfEqual {273}
	178 Move X0, X22
	179 Move X1, X21
	180 Move W2, W31
	181 Move W3, W31
	182 Call ClipperOffset.AddPath, X0, X1, X2, X3
	183 Compare X21, 0
	184 JumpIfEqual {273}
	185 Move V9, [X23+396]
	186 Move W2, [X21+24]
	187 Add X1, X31, 48
	188 Move X0, X22
	189 Multiply S0, S8, S9
	190 NotImplemented "Instruction FCVT not yet implemented."
	191 Call ClipperOffset.Execute, X0, X1, V0, X2
	192 Compare X20, 0
	193 JumpIfEqual {273}
	194 Move W8, [X20+24]
	195 NotImplemented "Instruction CMP not yet implemented."
	196 Move X8, 0x73D000
	197 Move X8, [X8+576]
	198 Move X0, X20
	199 Move W1, W31
	200 Move [X31], W31
	201 Move X2, [X8]
	202 Call List`1<Object>.get_Item, X0, X1
	203 Add X2, X31, 0
	204 Move X1, X21
	205 Call LightUtility.FixPivots, X0, X1, X2
	206 Compare X0, 0
	207 JumpIfEqual {273}
	208 Move W8, [X0+24]
	209 Move X20, X0
	210 NotImplemented "Instruction CMP not yet implemented."
	211 Move X22, 0x73D000
	212 Move X23, 0x737000
	213 Move X22, [X22+528]
	214 Move X23, [X23+1824]
	215 Move W21, W31
	216 Move X2, [X22]
	217 Add X8, X31, 96
	218 Move X0, X20
	219 Move W1, W21
	220 Call List`1<IntPoint>.get_Item, X0, X1
	221 Move X2, [X22]
	222 Move X24, [X31+104]
	223 Add X8, X31, 96
	224 Move X0, X20
	225 Move W1, W21
	226 Call List`1<IntPoint>.get_Item, X0, X1
	227 Compare X19, 0
	228 JumpIfEqual {273}
	229 Move W11, [X19+28]
	230 Move X10, [X31+112]
	231 Move X8, [X19+16]
	232 Move X9, [X23]
	233 Add W11, W11, 1
	234 Move [X19+28], W11
	235 Compare X8, 0
	236 JumpIfEqual {273}
	237 NotImplemented "Instruction LDRSW not yet implemented."
	238 Move W12, [X8+24]
	239 NotImplemented "Instruction SCVTF not yet implemented."
	240 NotImplemented "Instruction SCVTF not yet implemented."
	241 NotImplemented "Instruction FDIV not yet implemented."
	242 NotImplemented "Instruction CMP not yet implemented."
	243 NotImplemented "Instruction FDIV not yet implemented."
	244 Add W9, W11, 1
	245 Add X8, X8, X11
	246 Move [X19+24], W9
	247 Move [X8+32], S0
	248 Move [X8+40], S1
	249 Move X8, [X9+32]
	250 Move X0, X19
	251 Move X8, [X8+192]
	252 Move X1, [X8+112]
	253 Call List`1<Vector2>.AddWithResize, X0, X1
	254 Move W8, [X20+24]
	255 Add W21, W21, 1
	256 NotImplemented "Instruction CMP not yet implemented."
	257 Move X0, X19
	258 Move X20, [X31+240]
	259 Move X19, [X31+248]
	260 Move X22, [X31+224]
	261 Move X21, [X31+232]
	262 Move X24, [X31+208]
	263 Move X23, [X31+216]
	264 Move X26, [X31+192]
	265 Move X25, [X31+200]
	266 Move X28, [X31+176]
	267 Move X27, [X31+184]
	268 Move X30, [X31+160]
	269 Move D9, [X31+144]
	270 Move D8, [X31+152]
	271 Add X31, X31, 256
	272 Return X0
	273 Call 0x1C17F20
	274 Call 0x1C17F28

Method: System.Void TransferToMesh(Unity.Collections.NativeArray`1<UnityEngine.Rendering.Universal.LightUtility/LightMeshVertex> vertices, System.Int32 vertexCount, Unity.Collections.NativeArray`1<System.UInt16> indices, System.Int32 indexCount, UnityEngine.Rendering.Universal.Light2D light)

Disassembly:
	0x03A18BC0 LDR W8, [X0 + 0xE0]
	0x03A18BC4 CBNZ W8, 0x3A18BCC
	0x03A18BC8 BL 0x1C16DFC
	0x03A18BCC ADD X0, X31, 0x88
	0x03A18BD0 MOV X1, X22
	0x03A18BD4 MOV X2, X21
	0x03A18BD8 MOV X3, X20
	0x03A18BDC MOV X4, X19
	0x03A18BE0 MOV X5, X31
	0x03A18BE4 BL 0x3C58AC8
	0x03A18BE8 LDP X20, X19, [X31 + 0xD0]
	0x03A18BEC LDP X22, X21, [X31 + 0xC0]
	0x03A18BF0 LDP X24, X23, [X31 + 0xB0]
	0x03A18BF4 LDP X26, X25, [X31 + 0xA0]
	0x03A18BF8 LDP X30, X27, [X31 + 0x90]
	0x03A18BFC ADD X31, X31, 0xE0
	0x03A18C00 RET
	0x03A18C04 STP X29, X30, [X31 - 0x60]!
	0x03A18C08 STP X28, X27, [X31 + 0x10]
	0x03A18C0C STP X26, X25, [X31 + 0x20]
	0x03A18C10 STP X24, X23, [X31 + 0x30]
	0x03A18C14 STP X22, X21, [X31 + 0x40]
	0x03A18C18 STP X20, X19, [X31 + 0x50]
	0x03A18C1C SUB X31, X31, 0x1000
	0x03A18C20 SUB X31, X31, 0x750
	0x03A18C24 STR X2, [X31 + 0x78]
	0x03A18C28 MRS X8, 0xC000
	0x03A18C2C STR X8, [X31 + 0x30]
	0x03A18C30 LDR X8, [X8 + 0x28]
	0x03A18C34 ADRP X21, 0x9C9000
	0x03A18C38 ADRP X20, 0x73B000
	0x03A18C3C MOV X23, X7
	0x03A18C40 STR X8, [X31 + 0x1748]
	0x03A18C44 STR X5, [X31 + 0x1318]
	0x03A18C48 LDRB W8, [X21 + 0xFDA]
	0x03A18C4C LDR X20, [X20 + 0xFF0]
	0x03A18C50 MOV X24, X6
	0x03A18C54 MOV X19, X4
	0x03A18C58 MOV W25, W3
	0x03A18C5C MOV X22, X1
	0x03A18C60 MOV X27, X0
	0x03A18C64 TBNZ X8, 0x0, 0x3A18CC4
	0x03A18C68 ADRP X0, 0x703000
	0x03A18C6C LDR X0, [X0 + 0x8F8]
	0x03A18C70 BL 0x1C16CF4
	0x03A18C74 ADRP X0, 0x73C000
	0x03A18C78 LDR X0, [X0 + 0x668]
	0x03A18C7C BL 0x1C16CF4
	0x03A18C80 ADRP X0, 0x73C000
	0x03A18C84 LDR X0, [X0 + 0x688]
	0x03A18C88 BL 0x1C16CF4
	0x03A18C8C ADRP X0, 0x73C000
	0x03A18C90 LDR X0, [X0 + 0x658]
	0x03A18C94 BL 0x1C16CF4
	0x03A18C98 ADRP X0, 0x738000
	0x03A18C9C LDR X0, [X0 + 0xC80]
	0x03A18CA0 BL 0x1C16CF4
	0x03A18CA4 ADRP X0, 0x73B000
	0x03A18CA8 LDR X0, [X0 + 0xFF0]
	0x03A18CAC BL 0x1C16CF4
	0x03A18CB0 ADRP X0, 0x73C000
	0x03A18CB4 LDR X0, [X0 + 0x690]
	0x03A18CB8 BL 0x1C16CF4
	0x03A18CBC MOVZ W8, 0x1
	0x03A18CC0 STRB W8, [X21 + 0xFDA]
	0x03A18CC4 LDR X0, [X20]
	0x03A18CC8 ADD X8, X31, 0x1000
	0x03A18CCC ADD X8, X8, 0x300
	0x03A18CD0 MOVI V0.2D, 0x0
	0x03A18CD4 STRB W31, [X8 + 0x14]
	0x03A18CD8 STR W31, [X31 + 0x1310]
	0x03A18CDC STRB W31, [X8 + 0xC]
	0x03A18CE0 STRB W31, [X8 + 0x8]
	0x03A18CE4 STRB W31, [X8]
	0x03A18CE8 STR W31, [X31 + 0x1740]
	0x03A18CEC STR X31, [X31 + 0x12F0]
	0x03A18CF0 STR V0, [X31 + 0x173]
	0x03A18CF4 STR V0, [X31 + 0x172]
	0x03A18CF8 STR V0, [X31 + 0x171]
	0x03A18CFC STR V0, [X31 + 0x12E]
	0x03A18D00 STR V0, [X31 + 0x12D]
	0x03A18D04 STR X31, [X31 + 0x12C0]
	0x03A18D08 STR V0, [X31 + 0x12B]
	0x03A18D0C STR V0, [X31 + 0x12A]
	0x03A18D10 LDR W8, [X0 + 0xE0]
	0x03A18D14 CBNZ W8, 0x3A18D1C
	0x03A18D18 BL 0x1C16DFC
	0x03A18D1C ADRP X29, 0x73C000
	0x03A18D20 LDR X29, [X29 + 0x688]
	0x03A18D24 MOV X0, X24
	0x03A18D28 MOV X1, X31
	0x03A18D2C BL 0x3A43B70
	0x03A18D30 MOVZ W20, 0x1
	0x03A18D34 STR X23, [X31 + 0x90]
	0x03A18D38 STR X24, [X31 + 0xA0]
	0x03A18D3C CBZ X0, 0x3A18D50
	0x03A18D40 MOV X1, X31
	0x03A18D44 BL 0x3A35954
	0x03A18D48 AND W8, W0, 0x1
	0x03A18D4C B 0x3A18D54
	0x03A18D50 MOVZ W8, 0x1
	0x03A18D54 LDR X26, [X31 + 0x17C0]
	0x03A18D58 MOV X0, X31
	0x03A18D5C STR W8, [X31 + 0x74]
	0x03A18D60 BL 0x3C986A8
	0x03A18D64 LDR X8, [X29]
	0x03A18D68 ADD X9, X31, 0x1000
	0x03A18D6C ADD X9, X9, 0x300
	0x03A18D70 STRB W20, [X9 + 0x14]
	0x03A18D74 LDR W9, [X8 + 0xE0]
	0x03A18D78 MOV W28, W0
	0x03A18D7C CBNZ W9, 0x3A18D8C
	0x03A18D80 MOV X0, X8
	0x03A18D84 BL 0x1C16DFC
	0x03A18D88 LDR X8, [X29]
	0x03A18D8C LDR X8, [X8 + 0xB8]
	0x03A18D90 ADD X0, X31, 0x1000
	0x03A18D94 ADD X0, X0, 0x308
	0x03A18D98 MOV X1, X19
	0x03A18D9C LDR X2, [X8 + 0x30]
	0x03A18DA0 MOV X3, X31
	0x03A18DA4 STR X22, [X31 + 0xB0]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X26, 0x9CA000
	015 Move W8, [X26+4045]
	016 Move X21, X6
	017 Move W19, W5
	018 Move X20, X4
	019 Move X22, X3
	020 Move W23, W2
	021 Move X24, X1
	022 Move X25, X0
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {50}
	027 Move X0, 0x73D000
	028 Move X0, [X0+1200]
	029 Call 0x1C17CF4
	030 Move X0, 0x73D000
	031 Move X0, [X0+1208]
	032 Call 0x1C17CF4
	033 Move X0, 0x73D000
	034 Move X0, [X0+1592]
	035 Call 0x1C17CF4
	036 Move X0, 0x73D000
	037 Move X0, [X0+1224]
	038 Call 0x1C17CF4
	039 Move X0, 0x73D000
	040 Move X0, [X0+1232]
	041 Call 0x1C17CF4
	042 Move X0, 0x73D000
	043 Move X0, [X0+1240]
	044 Call 0x1C17CF4
	045 Move X0, 0x70C000
	046 Move X0, [X0+2256]
	047 Call 0x1C17CF4
	048 Move W8, 1
	049 Move [X26+4045], W8
	050 Compare X21, 0
	051 JumpIfEqual {141}
	052 Move X27, 0x73D000
	053 Move X27, [X27+1208]
	054 Move X0, X21
	055 Call Light2D.get_lightMesh, X0
	056 Move X8, [X27]
	057 Move X26, X0
	058 Move W9, [X8+224]
	059 Compare W9, 0
	060 JumpIfNotEqual {63}
	061 Move X0, X8
	062 Call 0x1C17DFC
	063 Compare X26, 0
	064 JumpIfEqual {141}
	065 Move X8, [X27]
	066 Move X27, 0x73D000
	067 Move X28, 0x73D000
	068 Move X29, 0x73D000
	069 Move X8, [X8+184]
	070 Move X27, [X27+1224]
	071 Move X28, [X28+1592]
	072 Move X29, [X29+1200]
	073 Move X2, [X8]
	074 Move X0, X26
	075 Move W1, W23
	076 Move X3, X31
	077 Call Mesh.SetVertexBufferParams, X0, X1, X2
	078 Move X8, [X27]
	079 Move X0, X26
	080 Move X1, X25
	081 Move X2, X24
	082 Move W3, W31
	083 Move W4, W31
	084 Move W5, W23
	085 Move W6, W31
	086 Move W7, W31
	087 Move [X31], X8
	088 Call Mesh.SetVertexBufferData, X0, X1, X2, X3, X4, X5, X6
	089 Move X8, [X28]
	090 Move W7, 1
	091 Move X0, X26
	092 Move X1, X22
	093 Move X2, X20
	094 Move W3, W31
	095 Move W4, W19
	096 Move W5, W31
	097 Move W6, W31
	098 Move [X31+8], X8
	099 Move [X31], W31
	100 Call 0x221B284, X0, X1, X2, X3, X4, X5, X6, X7
	101 Move X0, [X29]
	102 Move W1, W23
	103 Call 0x1C17D6C
	104 Move [X21+152], X0
	105 Move X8, 0x73D000
	106 Move X8, [X8+1240]
	107 Move X2, X0
	108 Move X0, X25
	109 Move X1, X24
	110 Move X4, [X8]
	111 Move W3, W23
	112 Call NativeArray`1<LightMeshVertex>.Copy, X0, X1, X2
	113 Move X8, 0x70C000
	114 Move X8, [X8+2256]
	115 Move W1, W19
	116 Move X0, [X8]
	117 Call 0x1C17D6C
	118 Move [X21+160], X0
	119 Move X8, 0x73D000
	120 Move X8, [X8+1232]
	121 Move X2, X0
	122 Move X0, X22
	123 Move X1, X20
	124 Move X4, [X8]
	125 Move W3, W19
	126 Move X20, [X31+96]
	127 Move X19, [X31+104]
	128 Move X22, [X31+80]
	129 Move X21, [X31+88]
	130 Move X24, [X31+64]
	131 Move X23, [X31+72]
	132 Move X26, [X31+48]
	133 Move X25, [X31+56]
	134 Move X28, [X31+32]
	135 Move X27, [X31+40]
	136 Move X29, [X31+16]
	137 Move X30, [X31+24]
	138 Add X31, X31, 112
	139 Call NativeArray`1<UInt16>.Copy, X0, X1, X2
	140 Return 
	141 Call 0x1C17F20

Method: UnityEngine.Bounds GenerateShapeMesh(UnityEngine.Rendering.Universal.Light2D light, UnityEngine.Vector3[] shapePath, System.Single falloffDistance)

Disassembly:
	0x03A15008 FCSEL S15, S15, S1, NE
	0x03A1500C FCMP S8, S3
	0x03A15010 LDR V2, [X31 + 0x6C]
	0x03A15014 CSET W8, MI
	0x03A15018 ORR W8, W20, W8, 0x0
	0x03A1501C CMP W8, 0x0
	0x03A15020 FCSEL S8, S8, S3, NE
	0x03A15024 FCMP S2, S0
	0x03A15028 CSET W8, GT
	0x03A1502C ORR W8, W8, W9, 0x0
	0x03A15030 CMP W8, 0x0
	0x03A15034 FCSEL S2, S2, S0, NE
	0x03A15038 LDR V0, [X31 + 0x68]
	0x03A1503C ADD W29, W29, 0x9
	0x03A15040 MOV X21, X22
	0x03A15044 FCMP S0, S1
	0x03A15048 CSET W8, GT
	0x03A1504C ORR W8, W8, W11, 0x0
	0x03A15050 CMP W8, 0x0
	0x03A15054 FCSEL S0, S0, S1, NE
	0x03A15058 FCMP S13, S3
	0x03A1505C CSET W8, GT
	0x03A15060 ORR W8, W20, W8, 0x0
	0x03A15064 CMP W8, 0x0
	0x03A15068 LDR X8, [X31 + 0x50]
	0x03A1506C FCSEL S13, S13, S3, NE
	0x03A15070 STP S0, S2, [X31 + 0x68]
	0x03A15074 CMP X8, X26
	0x03A15078 B.NE 0x3A14E3C
	0x03A1507C ADRP X20, 0x73F000
	0x03A15080 LDR X20, [X20 + 0x4B8]
	0x03A15084 LDR X0, [X20]
	0x03A15088 LDR W8, [X0 + 0xE0]
	0x03A1508C CBNZ W8, 0x3A15094
	0x03A15090 BL 0x1C16DFC
	0x03A15094 LDP X21, X19, [X31 + 0x10]
	0x03A15098 CBZ X21, 0x3A15238
	0x03A1509C LDR X8, [X20]
	0x03A150A0 LDR W20, [X31 + 0x20]
	0x03A150A4 MOV X0, X21
	0x03A150A8 MOV X3, X31
	0x03A150AC LDR X8, [X8 + 0xB8]
	0x03A150B0 MOV W1, W20
	0x03A150B4 LDR X2, [X8]
	0x03A150B8 BL 0x3C18D00
	0x03A150BC ADRP X8, 0x73F000
	0x03A150C0 LDP X1, X2, [X31 + 0x80]
	0x03A150C4 LDR X8, [X8 + 0x4C8]
	0x03A150C8 MOV X0, X21
	0x03A150CC MOV W3, W31
	0x03A150D0 MOV W4, W31
	0x03A150D4 LDR X8, [X8]
	0x03A150D8 MOV W5, W20
	0x03A150DC MOV W6, W31
	0x03A150E0 MOV W7, W31
	0x03A150E4 STR X8, [X31]
	0x03A150E8 BL 0x221B178
	0x03A150EC ADRP X8, 0x73F000
	0x03A150F0 LDP X1, X2, [X31 + 0x70]
	0x03A150F4 LDR X8, [X8 + 0x4C0]
	0x03A150F8 MOV X0, X21
	0x03A150FC MOV W3, W31
	0x03A15100 MOV W4, W31
	0x03A15104 LDR X7, [X8]
	0x03A15108 MOV W5, W31
	0x03A1510C MOV W6, W31
	0x03A15110 BL 0x221A138
	0x03A15114 ADRP X8, 0x73F000
	0x03A15118 LDR X8, [X8 + 0x4B0]
	0x03A1511C MOV W1, W20
	0x03A15120 LDR X0, [X8]
	0x03A15124 BL 0x1C16D6C
	0x03A15128 STR X0, [X19 + 0x98]
	0x03A1512C ADRP X8, 0x73F000
	0x03A15130 MOV X2, X0
	0x03A15134 LDP X0, X1, [X31 + 0x80]
	0x03A15138 LDR X8, [X8 + 0x4D8]
	0x03A1513C MOV W3, W20
	0x03A15140 LDR X4, [X8]
	0x03A15144 BL 0x2400390
	0x03A15148 ADRP X8, 0x70E000
	0x03A1514C LDR X8, [X8 + 0x8D0]
	0x03A15150 LDR W20, [X31 + 0x24]
	0x03A15154 LDR X0, [X8]
	0x03A15158 MOV W1, W20
	0x03A1515C BL 0x1C16D6C
	0x03A15160 STR X0, [X19 + 0xA0]
	0x03A15164 ADRP X8, 0x73F000
	0x03A15168 MOV X2, X0
	0x03A1516C LDP X0, X1, [X31 + 0x70]
	0x03A15170 LDR X8, [X8 + 0x4D0]
	0x03A15174 MOV W3, W20
	0x03A15178 LDR X4, [X8]
	0x03A1517C BL 0x23EC284
	0x03A15180 MOV V0.16B, V14.16B
	0x03A15184 MOV V1.16B, V15.16B
	0x03A15188 MOV V2.16B, V8.16B
	0x03A1518C MOV X0, X31
	0x03A15190 BL 0x3887BE0
	0x03A15194 MOVI D3, 0x0
	0x03A15198 MOV V0.S[1], V1.S[0]
	0x03A1519C FMOV S4, W31
	0x03A151A0 MOVI V8.2S, 0x3F, 0x18
	0x03A151A4 FSUB V3.2S, V3.2S, V0.2S
	0x03A151A8 FMOV S9, 0.5
	0x03A151AC FSUB S1, S4, S2
	0x00000000 INVALID
	0x03A151B4 FMUL S10, S1, S9
	0x03A151B8 FADD V12.2S, V0.2S, V11.2S
	0x03A151BC LDP S1, S0, [X31 + 0x68]
	0x03A151C0 FADD S14, S2, S10
	0x03A151C4 MOV V2.16B, V13.16B
	0x03A151C8 MOV X0, X31
	0x03A151CC BL 0x3887BE0
	0x03A151D0 FSUB V3.2S, V12.2S, V11.2S
	0x03A151D4 FSUB S4, S14, S10
	0x03A151D8 MOV V0.S[1], V1.S[0]
	0x03A151DC FSUB S1, S2, S4
	0x03A151E0 FSUB V0.2S, V0.2S, V3.2S
	0x03A151E4 LDR X8, [X31 + 0x28]
	0x03A151E8 FMUL S1, S1, S9
	0x00000000 INVALID
	0x03A151F0 LDP X20, X19, [X31 + 0x120]
	0x03A151F4 LDP X22, X21, [X31 + 0x110]
	0x03A151F8 LDP X24, X23, [X31 + 0x100]
	0x03A151FC LDP X26, X25, [X31 + 0xF0]
	0x03A15200 LDP X28, X27, [X31 + 0xE0]
	0x03A15204 LDP X29, X30, [X31 + 0xD0]
	0x03A15208 LDP D9, D8, [X31 + 0xC0]
	0x03A1520C LDP D11, D10, [X31 + 0xB0]
	0x03A15210 LDP D13, D12, [X31 + 0xA0]
	0x03A15214 LDP D15, D14, [X31 + 0x90]
	0x03A15218 FADD S2, S4, S1
	0x03A1521C FADD V3.2S, V3.2S, V0.2S
	0x03A15220 STR S2, [X8 + 0x8]
	0x03A15224 STUR D0, [X8 + 0xC]
	0x03A15228 STR D3, [X8]
	0x03A1522C STR S1, [X8 + 0x14]
	0x03A15230 ADD X31, X31, 0x130
	0x03A15234 RET
	0x03A15238 BL 0x1C16F20
	0x03A1523C SUB X31, X31, 0x60
	0x03A15240 STR D14, [X31 + 0x10]
	0x03A15244 STP D13, D12, [X31 + 0x18]
	0x03A15248 STP D11, D10, [X31 + 0x28]
	0x03A1524C STP D9, D8, [X31 + 0x38]
	0x03A15250 STR X30, [X31 + 0x48]
	0x03A15254 STP X20, X19, [X31 + 0x50]
	0x03A15258 LDR W20, [X0 + 0x24]
	0x03A1525C MOV X1, X31
	0x03A15260 MOV X19, X0
	0x03A15264 BL 0x3C32E90
	0x03A15268 CMP W20, 0x3
	0x03A1526C B.NE 0x3A1528C
	0x03A15270 CBZ X0, 0x3A153F0
	0x03A15274 MOV X1, X31
	0x03A15278 BL 0x3C3F58C
	0x03A1527C LDR V3, [X19 + 0xF0]
	0x03A15280 STP X31, X31, [X31]
	0x03A15284 ADD X0, X31, 0x0
	0x03A15288 B 0x3A153C0
	0x03A1528C CBZ X0, 0x3A153F0
	0x03A15290 LDR V1, [X19 + 0xC0]
	0x03A15294 LDR V3, [X19 + 0xCC]
	0x03A15298 LDR V0, [X19 + 0xB8]
	0x03A1529C LDUR V2, [X19 + 0xC4]
	0x03A152A0 ADD X20, X19, 0x104
	0x03A152A4 LDR V4, [X20]
	0x03A152A8 FMOV S11, W31
	0x03A152AC FADD S1, S1, S3
	0x03A152B0 FADD V0.2S, V0.2S, V2.2S
	0x03A152B4 FADD S2, S1, S11
	0x03A152B8 FADD V3.2S, V0.2S, V4.2S
	0x03A152BC FCMP S1, S2
	0x03A152C0 FCSEL S2, S1, S2, GT
	0x00000000 INVALID
	0x00000000 INVALID
	0x03A152CC MOV S1, V0.S[1]
	0x03A152D0 MOV X1, X31
	0x03A152D4 BL 0x3C3DE4C
	0x03A152D8 MOV X0, X19
	0x03A152DC MOV X1, X31
	0x03A152E0 MOV V8.16B, V0.16B
	0x03A152E4 MOV V9.16B, V1.16B
	0x03A152E8 MOV V10.16B, V2.16B
	0x03A152EC BL 0x3C32E90
	0x03A152F0 CBZ X0, 0x3A153F0
	0x03A152F4 LDR V0, [X19 + 0xB8]
	0x03A152F8 LDUR V2, [X19 + 0xC4]
	0x03A152FC LDR V1, [X19 + 0xC0]
	0x03A15300 LDR V3, [X19 + 0xCC]
	0x03A15304 LDR V4, [X20]
	0x03A15308 FSUB V0.2S, V0.2S, V2.2S
	0x03A1530C MOV X1, X31
	0x03A15310 FSUB S1, S1, S3
	0x03A15314 FADD V3.2S, V0.2S, V4.2S
	0x03A15318 FADD S2, S1, S11
	0x00000000 INVALID
	0x03A15320 FCMP S1, S2
	0x00000000 INVALID
	0x03A15328 FCSEL S2, S1, S2, MI
	0x03A1532C MOV S1, V0.S[1]
	0x03A15330 BL 0x3C3DE4C
	0x03A15334 ADRP X20, 0x9C3000
	0x03A15338 LDRB W8, [X20 + 0x785]
	0x03A1533C FADD S0, S8, S0
	0x03A15340 FADD S1, S9, S1
	0x03A15344 FADD S2, S10, S2
	0x03A15348 FMOV S3, 0.5
	0x03A1534C FMUL S13, S0, S3
	0x03A15350 FMUL S12, S1, S3
	0x03A15354 FMUL S11, S2, S3
	0x03A15358 CBNZ W8, 0x3A15370
	0x03A1535C ADRP X0, 0x6DE000
	0x03A15360 LDR X0, [X0 + 0x5A8]
	0x03A15364 BL 0x1C16CF4
	0x03A15368 MOVZ W8, 0x1
	0x03A1536C STRB W8, [X20 + 0x785]
	0x03A15370 ADRP X8, 0x6DE000
	0x03A15374 LDR X8, [X8 + 0x5A8]
	0x03A15378 FSUB S14, S8, S13
	0x03A1537C FSUB S9, S9, S12
	0x03A15380 FSUB S8, S10, S11
	0x03A15384 LDR X0, [X8]
	0x03A15388 LDR W8, [X0 + 0xE0]
	0x03A1538C CBNZ W8, 0x3A15394
	0x03A15390 BL 0x1C16DFC
	0x03A15394 FMUL S0, S14, S14
	0x03A15398 FMUL S1, S9, S9
	0x03A1539C FMUL S2, S8, S8
	0x03A153A0 FADD S0, S0, S1
	0x03A153A4 FADD S0, S2, S0
	0x03A153A8 FSQRT S3, S0
	0x03A153AC ADD X0, X31, 0x0
	0x03A153B0 MOV V0.16B, V13.16B
	0x03A153B4 MOV V1.16B, V12.16B
	0x03A153B8 MOV V2.16B, V11.16B
	0x03A153BC STP X31, X31, [X31]
	0x03A153C0 MOV X1, X31
	0x03A153C4 BL 0x3C05044
	0x03A153C8 LDR V0, [X31]
	0x03A153CC LDR X30, [X31 + 0x48]
	0x03A153D0 LDP D9, D8, [X31 + 0x38]
	0x03A153D4 LDP D11, D10, [X31 + 0x28]
	0x03A153D8 STR V0, [X19 + 0xD]
	0x03A153DC LDP X20, X19, [X31 + 0x50]
	0x03A153E0 LDP D13, D12, [X31 + 0x18]
	0x03A153E4 LDR V14, [X31 + 0x10]
	0x03A153E8 ADD X31, X31, 0x60
	0x03A153EC RET
	0x03A153F0 BL 0x1C16F20
	0x03A153F4 LDR W8, [X0 + 0x24]
	0x03A153F8 CMP W8, 0x3
	0x03A153FC CSET W0, EQ
	0x03A15400 RET
	0x03A15404 STR X30, [X31 - 0x10]!
	0x03A15408 LDR X10, [X0 + 0x50]
	0x03A1540C CBZ X10, 0x3A15450
	0x03A15410 LDR W8, [X10 + 0x18]
	0x03A15414 CMP W8, 0x1
	0x03A15418 B.LT 0x3A15450
	0x03A1541C MOV X9, X31
	0x03A15420 ADD X10, X10, 0x20
	0x03A15424 CMP W9, W8
	0x03A15428 B.CS 0x3A1545C
	0x03A1542C LDR W11, [X10, X9, LSL #2]
	0x03A15430 ADD X9, X9, 0x1
	0x03A15434 CMP W11, W1
	0x03A15438 CSET W0, EQ
	0x03A1543C CMP W9, W8
	0x03A15440 B.GE 0x3A15454
	0x03A15444 CMP W11, W1
	0x03A15448 B.NE 0x3A15424
	0x03A1544C B 0x3A15454
	0x03A15450 MOV W0, W31
	0x03A15454 LDR X30, [X31], #0x10
	0x03A15458 RET
	0x03A1545C BL 0x1C16F28
	0x03A15460 RET
	0x03A15464 STR X30, [X31 - 0x20]!
	0x03A15468 STP X20, X19, [X31 + 0x10]
	0x03A1546C ADRP X20, 0x9CC000
	0x03A15470 LDRB W8, [X20 + 0xFB8]
	0x03A15474 MOV X19, X0
	0x03A15478 TBNZ X8, 0x0, 0x3A15490
	0x03A1547C ADRP X0, 0x73F000
	0x03A15480 LDR X0, [X0 + 0x498]
	0x03A15484 BL 0x1C16CF4
	0x03A15488 MOVZ W8, 0x1
	0x03A1548C STRB W8, [X20 + 0xFB8]
	0x03A15490 ADRP X20, 0x73F000
	0x03A15494 LDR X0, [X19 + 0x58]
	0x03A15498 LDR X20, [X20 + 0x498]
	0x03A1549C CBZ X0, 0x3A154A8
	0x03A154A0 MOV X1, X31
	0x03A154A4 BL 0x3C385F8
	0x03A154A8 STR W0, [X19 + 0xA8]
	0x03A154AC LDR X0, [X20]
	0x03A154B0 LDR W8, [X0 + 0xE0]
	0x03A154B4 CBNZ W8, 0x3A154BC
	0x03A154B8 BL 0x1C16DFC
	0x03A154BC MOV X0, X19
	0x03A154C0 LDP X20, X19, [X31 + 0x10]
	0x03A154C4 LDR X30, [X31], #0x20
	0x03A154C8 B 0x3A154CC
	0x03A154CC STP X30, X21, [X31 - 0x20]!
	0x03A154D0 STP X20, X19, [X31 + 0x10]
	0x03A154D4 ADRP X21, 0x9CC000
	0x03A154D8 ADRP X20, 0x73F000
	0x03A154DC LDRB W8, [X21 + 0xFC1]
	0x03A154E0 LDR X20, [X20 + 0x498]
	0x03A154E4 MOV X19, X0
	0x03A154E8 TBNZ X8, 0x0, 0x3A1550C
	0x03A154EC ADRP X0, 0x73F000
	0x03A154F0 LDR X0, [X0 + 0x498]
	0x03A154F4 BL 0x1C16CF4
	0x03A154F8 ADRP X0, 0x73F000
	0x03A154FC LDR X0, [X0 + 0x538]
	0x03A15500 BL 0x1C16CF4
	0x03A15504 MOVZ W8, 0x1
	0x03A15508 STRB W8, [X21 + 0xFC1]
	0x03A1550C LDR X0, [X20]
	0x03A15510 LDR W8, [X0 + 0xE0]
	0x03A15514 CBNZ W8, 0x3A1551C
	0x03A15518 BL 0x1C16DFC
	0x03A1551C ADRP X21, 0x9CD000
	0x03A15520 LDRB W8, [X21 + 0xD]
	0x03A15524 CBNZ W8, 0x3A1553C
	0x03A15528 ADRP X0, 0x73F000
	0x03A1552C LDR X0, [X0 + 0x498]
	0x03A15530 BL 0x1C16CF4
	0x03A15534 MOVZ W8, 0x1
	0x03A15538 STRB W8, [X21 + 0xD]
	0x03A1553C LDR X0, [X20]
	0x03A15540 LDR W8, [X0 + 0xE0]
	0x03A15544 CBNZ W8, 0x3A15550
	0x03A15548 BL 0x1C16DFC
	0x03A1554C LDR X0, [X20]
	0x03A15550 LDR X8, [X0 + 0xB8]
	0x03A15554 LDR X0, [X8 + 0x8]
	0x03A15558 CBZ X0, 0x3A155C4
	0x03A1555C ADRP X9, 0x73F000
	0x03A15560 LDR X9, [X9 + 0x538]
	0x03A15564 LDR W10, [X0 + 0x1C]
	0x03A15568 LDR X8, [X0 + 0x10]
	0x03A1556C LDR X9, [X9]
	0x03A15570 ADD W10, W10, 0x1
	0x03A15574 STR W10, [X0 + 0x1C]
	0x03A15578 CBZ X8, 0x3A155C4
	0x03A1557C LDRSW X10, [X0 + 0x18]
	0x03A15580 LDR W11, [X8 + 0x18]
	0x03A15584 CMP W10, W11
	0x03A15588 B.CS 0x3A155A0
	0x03A1558C ADD W9, W10, 0x1
	0x03A15590 ADD X8, X8, X10, 0x3, LSL
	0x03A15594 STR W9, [X0 + 0x18]
	0x03A15598 STR X19, [X8 + 0x20]
	0x03A1559C B 0x3A155B4
	0x03A155A0 LDR X8, [X9 + 0x20]
	0x03A155A4 MOV X1, X19
	0x03A155A8 LDR X8, [X8 + 0xC0]
	0x03A155AC LDR X2, [X8 + 0x70]
	0x03A155B0 BL 0x301BF90
	0x03A155B4 MOV X0, X19
	0x03A155B8 LDP X20, X19, [X31 + 0x10]
	0x03A155BC LDP X30, X21, [X31], #0x20
	0x03A155C0 B 0x3A13478
	0x03A155C4 BL 0x1C16F20
	0x03A155C8 STP X30, X21, [X31 - 0x20]!
	0x03A155CC STP X20, X19, [X31 + 0x10]
	0x03A155D0 ADRP X20, 0x9CC000
	0x03A155D4 ADRP X21, 0x73F000
	0x03A155D8 LDRB W8, [X20 + 0xFB9]
	0x03A155DC LDR X21, [X21 + 0x498]
	0x03A155E0 MOV X19, X0
	0x03A155E4 TBNZ X8, 0x0, 0x3A155FC
	0x03A155E8 ADRP X0, 0x73F000
	0x03A155EC LDR X0, [X0 + 0x498]
	0x03A155F0 BL 0x1C16CF4
	0x03A155F4 MOVZ W8, 0x1
	0x03A155F8 STRB W8, [X20 + 0xFB9]
	0x03A155FC LDR X0, [X21]
	0x03A15600 LDR W8, [X0 + 0xE0]
	0x03A15604 CBNZ W8, 0x3A1560C
	0x03A15608 BL 0x1C16DFC
	0x03A1560C MOV X0, X19
	0x03A15610 LDP X20, X19, [X31 + 0x10]
	0x03A15614 LDP X30, X21, [X31], #0x20
	0x03A15618 B 0x3A1561C
	0x03A1561C STP X30, X21, [X31 - 0x20]!
	0x03A15620 STP X20, X19, [X31 + 0x10]
	0x03A15624 ADRP X21, 0x9CC000
	0x03A15628 ADRP X20, 0x73F000
	0x03A1562C LDRB W8, [X21 + 0xFC2]
	0x03A15630 LDR X20, [X20 + 0x498]
	0x03A15634 MOV X19, X0
	0x03A15638 TBNZ X8, 0x0, 0x3A1565C
	0x03A1563C ADRP X0, 0x73F000
	0x03A15640 LDR X0, [X0 + 0x498]
	0x03A15644 BL 0x1C16CF4
	0x03A15648 ADRP X0, 0x73F000
	0x03A1564C LDR X0, [X0 + 0x540]
	0x03A15650 BL 0x1C16CF4
	0x03A15654 MOVZ W8, 0x1
	0x03A15658 STRB W8, [X21 + 0xFC2]
	0x03A1565C LDR X0, [X20]
	0x03A15660 LDR W8, [X0 + 0xE0]
	0x03A15664 CBNZ W8, 0x3A1566C
	0x03A15668 BL 0x1C16DFC
	0x03A1566C ADRP X21, 0x9CD000
	0x03A15670 LDRB W8, [X21 + 0xD]
	0x03A15674 CBNZ W8, 0x3A1568C
	0x03A15678 ADRP X0, 0x73F000
	0x03A1567C LDR X0, [X0 + 0x498]
	0x03A15680 BL 0x1C16CF4
	0x03A15684 MOVZ W8, 0x1
	0x03A15688 STRB W8, [X21 + 0xD]
	0x03A1568C LDR X0, [X20]
	0x03A15690 LDR W8, [X0 + 0xE0]
	0x03A15694 CBNZ W8, 0x3A156A0
	0x03A15698 BL 0x1C16DFC
	0x03A1569C LDR X0, [X20]
	0x03A156A0 LDR X8, [X0 + 0xB8]
	0x03A156A4 LDR X0, [X8 + 0x8]
	0x03A156A8 CBZ X0, 0x3A156C8
	0x03A156AC ADRP X8, 0x73F000
	0x03A156B0 LDR X8, [X8 + 0x540]
	0x03A156B4 MOV X1, X19
	0x03A156B8 LDP X20, X19, [X31 + 0x10]
	0x03A156BC LDR X2, [X8]
	0x03A156C0 LDP X30, X21, [X31], #0x20
	0x03A156C4 B 0x301D7A8
	0x03A156C8 BL 0x1C16F20
	0x03A156CC STP X30, X19, [X31 - 0x10]!
	0x03A156D0 LDR W8, [X0 + 0x24]
	0x03A156D4 CMP W8, 0x4
	0x03A156D8 B.EQ 0x3A156F4
	0x03A156DC LDRB W1, [X0 + 0xE0]
	0x03A156E0 MOV X19, X0
	0x03A156E4 BL 0x3A13304
	0x03A156E8 MOV X0, X19
	0x03A156EC BL 0x3A1523C
	0x03A156F0 STRB W31, [X19 + 0xE0]
	0x03A156F4 LDP X30, X19, [X31], #0x10
	0x03A156F8 RET
	0x03A156FC MOVZ W8, 0x1
	0x03A15700 STR W8, [X0 + 0x20]
	0x03A15704 RET
	0x03A15708 LDR W8, [X0 + 0x20]
	0x03A1570C CBZ W8, 0x3A15714
	0x03A15710 RET
	0x03A15714 LDR V0, [X0 + 0x88]
	0x03A15718 LDR V1, [X0 + 0x80]
	0x03A1571C LDR V2, [X0 + 0x44]
	0x03A15720 LDRB W8, [X0 + 0x7C]
	0x03A15724 FCMP S0, 0x0
	0x03A15728 CSET W9, GT
	0x03A1572C FCMP S1, 0x0
	0x03A15730 STRB W9, [X0 + 0x84]
	0x03A15734 CSET W9, GT
	0x03A15738 FCMP S2, 0x0
	0x03A1573C STRB W9, [X0 + 0x7D]
	0x03A15740 CSET W9, GT
	0x03A15744 STRB W9, [X0 + 0x48]
	0x03A15748 CBZ W8, 0x3A15754
	0x03A1574C LDR W8, [X0 + 0x78]
	0x03A15750 B 0x3A15758
	0x03A15754 MOVZ W8, 0x2
	0x03A15758 LDRB W10, [X0 + 0x6C]
	0x03A1575C STR W8, [X0 + 0x78]
	0x03A15760 MOVZ W8, 0x1
	0x03A15764 MOVZ W9, 0x1
	0x03A15768 CBNZ W10, 0x3A15770
	0x03A1576C LDR W9, [X0 + 0x70]
	0x03A15770 STR W9, [X0 + 0x70]
	0x03A15774 STR W8, [X0 + 0x20]
	0x03A15778 RET
	0x03A1577C LDR V0, [X0 + 0xE4]
	0x03A15780 RET
	0x03A15784 STR S0, [X0 + 0xE4]
	0x03A15788 RET
	0x03A1578C LDR V0, [X0 + 0xE8]
	0x03A15790 RET
	0x03A15794 STR S0, [X0 + 0xE8]
	0x03A15798 RET
	0x03A1579C LDR V0, [X0 + 0xEC]
	0x03A157A0 RET
	0x03A157A4 STR S0, [X0 + 0xEC]
	0x03A157A8 RET
	0x03A157AC LDR V0, [X0 + 0xF0]
	0x03A157B0 RET
	0x03A157B4 STR S0, [X0 + 0xF0]
	0x03A157B8 RET
	0x03A157BC LDR V0, [X0 + 0x74]
	0x03A157C0 RET
	0x03A157C4 LDR W0, [X0 + 0x78]
	0x03A157C8 RET
	0x03A157CC LDR W0, [X0 + 0xF4]
	0x03A157D0 RET
	0x03A157D4 LDR V0, [X0 + 0xF8]
	0x03A157D8 RET
	0x03A157DC LDR V0, [X0 + 0xFC]
	0x03A157E0 RET
	0x03A157E4 STR S0, [X0 + 0xFC]
	0x03A157E8 RET
	0x03A157EC LDR V0, [X0 + 0x100]
	0x03A157F0 RET
	0x03A157F4 FMOV S1, W31
	0x03A157F8 FMAX S0, S0, S1
	0x03A157FC STR S0, [X0 + 0x100]
	0x03A15800 RET
	0x03A15804 LDR X0, [X0 + 0x110]
	0x03A15808 RET
	0x03A1580C STR X1, [X0 + 0x110]
	0x03A15810 RET
	0x03A15814 STR X1, [X0 + 0x110]
	0x03A15818 RET
	0x03A1581C STR X30, [X31 - 0x30]!
	0x03A15820 STP X22, X21, [X31 + 0x10]
	0x03A15824 STP X20, X19, [X31 + 0x20]
	0x03A15828 ADRP X22, 0x9CC000
	0x03A1582C ADRP X21, 0x73F000
	0x03A15830 ADRP X20, 0x70E000
	0x03A15834 LDRB W8, [X22 + 0xFBA]
	0x03A15838 LDR X21, [X21 + 0x4B0]
	0x03A1583C LDR X20, [X20 + 0x8D0]
	0x03A15840 MOV X19, X0
	0x03A15844 TBNZ X8, 0x0, 0x3A15868
	0x03A15848 ADRP X0, 0x73F000
	0x03A1584C LDR X0, [X0 + 0x4B0]
	0x03A15850 BL 0x1C16CF4
	0x03A15854 ADRP X0, 0x70E000
	0x03A15858 LDR X0, [X0 + 0x8D0]
	0x03A1585C BL 0x1C16CF4
	0x03A15860 MOVZ W8, 0x1
	0x03A15864 STRB W8, [X22 + 0xFBA]
	0x03A15868 ADRP X9, 0xFFFFFFFFFD0D7000
	0x03A1586C LDR V1, [X9 + 0x12]
	0x03A15870 MOVZ X11, 0x40400000
	0x03A15874 MOVZ W8, 0x3
	0x03A15878 FMOV V0.2S, 0x0
	0x03A1587C MOVZ W10, 0x3F800000
	0x03A15880 MOVK X11, 0x2
	0x03A15884 MOVZ W12, 0x3F400000
	0x03A15888 STR W8, [X19 + 0x24]
	0x03A1588C STUR D0, [X19 + 0x3C]
	0x03A15890 STR W10, [X19 + 0x44]
	0x03A15894 STUR X11, [X19 + 0x74]
	0x03A15898 STR W12, [X19 + 0x80]
	0x03A1589C STUR V1, [X19 + 0x2C]
	0x03A158A0 STR W12, [X19 + 0x88]
	0x03A158A4 LDR X0, [X21]
	0x03A158A8 MOVZ W1, 0x1
	0x03A158AC MOVZ W21, 0x1
	0x03A158B0 BL 0x1C16D6C
	0x03A158B4 STR X0, [X19 + 0x98]
	0x03A158B8 LDR X0, [X20]
	0x03A158BC MOVZ W1, 0x1
	0x03A158C0 BL 0x1C16D6C
	0x03A158C4 ADRP X10, 0xFFFFFFFFFD0D8000
	0x03A158C8 LDR V0, [X10 + 0x4F0]
	0x03A158CC MOVZ W8, 0x43B40000
	0x03A158D0 MOVZ X9, 0x3F800000
	0x03A158D4 MOVK X9, 0x5
	0x03A158D8 UNIMPLEMENTED
	0x03A158DC STR X0, [X19 + 0xA0]
	0x03A158E0 STR X9, [X19 + 0xF0]
	0x03A158E4 STUR D1, [X19 + 0xE4]
	0x03A158E8 STUR D0, [X19 + 0xFC]
	0x03A158EC ADRP X20, 0x9C4000
	0x03A158F0 LDRB W8, [X20 + 0x78F]
	0x03A158F4 CBNZ W8, 0x3A15908
	0x03A158F8 ADRP X0, 0x6E6000
	0x03A158FC LDR X0, [X0 + 0xF08]
	0x03A15900 BL 0x1C16CF4
	0x03A15904 STRB W21, [X20 + 0x78F]
	0x03A15908 ADRP X8, 0x6E6000
	0x03A1590C LDR X8, [X8 + 0xF08]
	0x03A15910 ADD X9, X19, 0x104
	0x03A15914 FMOV V1.2S, 0x0
	0x03A15918 MOVN W10, 0x0
	0x03A1591C LDR X8, [X8]
	0x03A15920 MOV X0, X19
	0x03A15924 LDP X22, X21, [X31 + 0x10]
	0x03A15928 MOV X1, X31
	0x03A1592C LDR X8, [X8 + 0xB8]
	0x03A15930 LDR V0, [X8]
	0x03A15934 MOVN X8, 0xFFFF
	0x03A15938 MOVK X8, 0xBF800000
	0x03A1593C STR D0, [X9]
	0x03A15940 STR X8, [X19 + 0x118]
	0x03A15944 STR D1, [X19 + 0x120]
	0x03A15948 STR W10, [X19 + 0x128]
	0x03A1594C LDP X20, X19, [X31 + 0x20]
	0x03A15950 LDR X30, [X31], #0x30
	0x03A15954 B 0x3C42634
	0x03A15958 LDRSW X8, [X0 + 0xC]
	0x03A1595C CMP W8, 0x2
	0x03A15960 B.HI 0x3A15980
	0x03A15964 ADRP X9, 0xFFFFFFFFFD182000
	0x03A15968 ADRP X10, 0xFFFFFFFFFD182000
	0x03A1596C ADD X9, X9, 0xAEC
	0x03A15970 ADD X10, X10, 0xAF8
	0x03A15974 LDR V0, [X9, X8, LSL #2]
	0x03A15978 LDR V1, [X10, X8, LSL #2]
	0x03A1597C RET
	0x03A15980 FMOV S1, W31
	0x03A15984 FMOV S0, 1
	0x03A15988 RET
	0x03A1598C STR X30, [X31 - 0x20]!
	0x03A15990 STP X20, X19, [X31 + 0x10]
	0x03A15994 LDR W9, [X0 + 0x8]
	0x03A15998 MOV X19, X8
	0x03A1599C SUB W9, W9, 0x1
	0x03A159A0 CMP W9, 0x7
	0x03A159A4 B.HI 0x3A159D8
	0x03A159A8 ADRP X8, 0xFFFFFFFFFD182000
	0x03A159AC ADD X8, X8, 0xAD5
	0x03A159B0 ADR X10, 0x10
	0x03A159B4 LDRB W11, [X8, X9, LSL]
	0x03A159B8 ADD X10, X10, X11, 0x2, LSL
	0x03A159BC BR X10
	0x03A159C0 MOVZ W8, 0x3F800000
	0x03A159C4 STUR X31, [X19 + 0x4]
	0x03A159C8 STUR X31, [X19 + 0x14]
	0x03A159CC STUR X31, [X19 + 0xC]
	0x03A159D0 STR W8, [X19]
	0x03A159D4 B 0x3A15A44
	0x03A159D8 ADRP X20, 0x9C3000
	0x03A159DC LDRB W8, [X20 + 0xE5A]
	0x03A159E0 CBNZ W8, 0x3A159F8
	0x03A159E4 ADRP X0, 0x6E5000
	0x03A159E8 LDR X0, [X0 + 0x9A0]
	0x03A159EC BL 0x1C16CF4
	0x03A159F0 MOVZ W8, 0x1
	0x03A159F4 STRB W8, [X20 + 0xE5A]
	0x03A159F8 ADRP X8, 0x6E5000
	0x03A159FC LDR X8, [X8 + 0x9A0]
	0x03A15A00 LDR X8, [X8]
	0x03A15A04 LDR X8, [X8 + 0xB8]
	0x03A15A08 LDP S0, S1, [X8]
	0x03A15A0C LDP S2, S3, [X8 + 0x8]
	0x03A15A10 STP S0, S1, [X19]
	0x03A15A14 STP S2, S3, [X19 + 0x8]
	0x03A15A18 STP S0, S1, [X19 + 0x10]
	0x03A15A1C STP S2, S3, [X19 + 0x18]
	0x03A15A20 B 0x3A15ACC
	0x03A15A24 MOVZ X8, 0x3F800000
	0x03A15A28 STP X8, X31, [X19]
	0x03A15A2C B 0x3A15A54
	0x03A15A30 MOVZ W8, 0x3F800000
	0x03A15A34 STR X31, [X19]
	0x03A15A38 STUR X31, [X19 + 0x14]
	0x03A15A3C STUR X31, [X19 + 0xC]
	0x03A15A40 STR W8, [X19 + 0x8]
	0x03A15A44 STR W31, [X19 + 0x1C]
	0x03A15A48 B 0x3A15ACC
	0x03A15A4C MOVZ X8, 0x3F800000
	0x03A15A50 STP X31, X8, [X19]
	0x03A15A54 STP X31, X31, [X19 + 0x10]
	0x03A15A58 B 0x3A15ACC
	0x03A15A5C ADRP X8, 0xFFFFFFFFFD0D7000
	0x03A15A60 LDR V0, [X8 + 0x11]
	0x03A15A64 STP V0, V0, [X19]
	0x03A15A68 B 0x3A15ACC
	0x03A15A6C ADRP X8, 0xFFFFFFFFFD0D7000
	0x03A15A70 ADRP X9, 0xFFFFFFFFFD0D8000
	0x03A15A74 LDR V0, [X8 + 0x11]
	0x03A15A78 LDR V1, [X9 + 0x648]
	0x03A15A7C STR W31, [X19]
	0x03A15A80 STR W31, [X19 + 0x1C]
	0x03A15A84 STUR V0, [X19 + 0x4]
	0x03A15A88 STUR D1, [X19 + 0x14]
	0x03A15A8C B 0x3A15ACC
	0x03A15A90 ADRP X8, 0xFFFFFFFFFD0D7000
	0x03A15A94 ADRP X9, 0xFFFFFFFFFD0D8000
	0x03A15A98 LDR V0, [X8 + 0x11]
	0x03A15A9C LDR V1, [X9 + 0x648]
	0x03A15AA0 STR X31, [X19]
	0x03A15AA4 STUR V0, [X19 + 0x8]
	0x03A15AA8 STR D1, [X19 + 0x18]
	0x03A15AAC B 0x3A15ACC
	0x03A15AB0 ADRP X8, 0xFFFFFFFFFD0D7000
	0x03A15AB4 LDR V0, [X8 + 0x11]
	0x03A15AB8 MOVZ W8, 0x3F800000
	0x03A15ABC STR W31, [X19 + 0x8]
	0x03A15AC0 STR X31, [X19]
	0x03A15AC4 STUR V0, [X19 + 0xC]
	0x03A15AC8 STR W8, [X19 + 0x1C]
	0x03A15ACC LDP X20, X19, [X31 + 0x10]
	0x03A15AD0 LDR X30, [X31], #0x20
	0x03A15AD4 RET
	0x03A15AD8 STP S0, S1, [X0]
	0x03A15ADC STP S2, S3, [X0 + 0x8]
	0x03A15AE0 STP S4, S5, [X0 + 0x10]
	0x03A15AE4 STP S6, S7, [X0 + 0x18]
	0x03A15AE8 RET
	0x03A15AEC LDRB W0, [X0 + 0x10]
	0x03A15AF0 RET
	0x03A15AF4 AND W8, W1, 0x1
	0x03A15AF8 STRB W8, [X0 + 0x10]
	0x03A15AFC RET
	0x03A15B00 LDRB W0, [X0 + 0x11]
	0x03A15B04 RET
	0x03A15B08 AND W8, W1, 0x1
	0x03A15B0C STRB W8, [X0 + 0x11]
	0x03A15B10 RET
	0x03A15B14 LDP S0, S1, [X0]
	0x03A15B18 LDP S2, S3, [X0 + 0x8]
	0x03A15B1C RET
	0x03A15B20 STP S0, S1, [X0]
	0x03A15B24 STP S2, S3, [X0 + 0x8]
	0x03A15B28 RET
	0x03A15B2C LDP S0, S1, [X0 + 0x10]
	0x03A15B30 LDP S2, S3, [X0 + 0x18]
	0x03A15B34 RET
	0x03A15B38 STP S0, S1, [X0 + 0x10]
	0x03A15B3C STP S2, S3, [X0 + 0x18]
	0x03A15B40 RET
	0x03A15B44 LDR X0, [X0 + 0x10]
	0x03A15B48 RET
	0x03A15B4C LDR X0, [X0 + 0x18]
	0x03A15B50 RET
	0x03A15B54 STR X30, [X31 - 0x20]!
	0x03A15B58 STP X20, X19, [X31 + 0x10]
	0x03A15B5C ADRP X20, 0x9CC000
	0x03A15B60 ADRP X19, 0x73F000
	0x03A15B64 LDRB W8, [X20 + 0xFBB]
	0x03A15B68 LDR X19, [X19 + 0x498]
	0x03A15B6C TBNZ X8, 0x0, 0x3A15B90
	0x03A15B70 ADRP X0, 0x73F000
	0x03A15B74 LDR X0, [X0 + 0x498]
	0x03A15B78 BL 0x1C16CF4
	0x03A15B7C ADRP X0, 0x73F000
	0x03A15B80 LDR X0, [X0 + 0x548]
	0x03A15B84 BL 0x1C16CF4
	0x03A15B88 MOVZ W8, 0x1
	0x03A15B8C STRB W8, [X20 + 0xFBB]
	0x03A15B90 LDR X0, [X19]
	0x03A15B94 LDR W8, [X0 + 0xE0]
	0x03A15B98 CBNZ W8, 0x3A15BA0
	0x03A15B9C BL 0x1C16DFC
	0x03A15BA0 ADRP X20, 0x9CD000
	0x03A15BA4 LDRB W8, [X20 + 0xD]
	0x03A15BA8 CBNZ W8, 0x3A15BC0
	0x03A15BAC ADRP X0, 0x73F000
	0x03A15BB0 LDR X0, [X0 + 0x498]
	0x03A15BB4 BL 0x1C16CF4
	0x03A15BB8 MOVZ W8, 0x1
	0x03A15BBC STRB W8, [X20 + 0xD]
	0x03A15BC0 LDR X0, [X19]
	0x03A15BC4 LDR W8, [X0 + 0xE0]
	0x03A15BC8 CBNZ W8, 0x3A15BD4
	0x03A15BCC BL 0x1C16DFC
	0x03A15BD0 LDR X0, [X19]
	0x03A15BD4 LDR X8, [X0 + 0xB8]
	0x03A15BD8 LDR X8, [X8 + 0x8]
	0x03A15BDC CBZ X8, 0x3A15BF8
	0x03A15BE0 LDR W8, [X8 + 0x18]

ISIL:
	001 Move [X31-128], D10
	002 Move [X31+16], D9
	003 Move [X31+24], D8
	004 Move [X31+32], X29
	005 Move [X31+40], X30
	006 Move [X31+48], X28
	007 Move [X31+56], X27
	008 Move [X31+64], X26
	009 Move [X31+72], X25
	010 Move [X31+80], X24
	011 Move [X31+88], X23
	012 Move [X31+96], X22
	013 Move [X31+104], X21
	014 Move [X31+112], X20
	015 Move [X31+120], X19
	016 Subtract X31, X31, 496
	017 Move X19, 0x9CD000
	018 Move W9, [X19+4046]
	019 Move V8, V0
	020 Move X24, X1
	021 Move X22, X0
	022 Move X20, X8
	023 Move TEMP, X9
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {89}
	027 Move X0, 0x740000
	028 Move X0, [X0+1296]
	029 Call 0x1C17CF4
	030 Move X0, 0x740000
	031 Move X0, [X0+1304]
	032 Call 0x1C17CF4
	033 Move X0, 0x740000
	034 Move X0, [X0+784]
	035 Call 0x1C17CF4
	036 Move X0, 0x740000
	037 Move X0, [X0+368]
	038 Call 0x1C17CF4
	039 Move X0, 0x740000
	040 Move X0, [X0+1016]
	041 Call 0x1C17CF4
	042 Move X0, 0x740000
	043 Move X0, [X0+512]
	044 Call 0x1C17CF4
	045 Move X0, 0x740000
	046 Move X0, [X0+568]
	047 Call 0x1C17CF4
	048 Move X0, 0x740000
	049 Move X0, [X0+576]
	050 Call 0x1C17CF4
	051 Move X0, 0x740000
	052 Move X0, [X0+528]
	053 Call 0x1C17CF4
	054 Move X0, 0x740000
	055 Move X0, [X0+360]
	056 Call 0x1C17CF4
	057 Move X0, 0x740000
	058 Move X0, [X0+1008]
	059 Call 0x1C17CF4
	060 Move X0, 0x716000
	061 Move X0, [X0+3928]
	062 Call 0x1C17CF4
	063 Move X0, 0x6DF000
	064 Move X0, [X0+1448]
	065 Call 0x1C17CF4
	066 Move X0, 0x708000
	067 Move X0, [X0+216]
	068 Call 0x1C17CF4
	069 Move X0, 0x740000
	070 Move X0, [X0+1312]
	071 Call 0x1C17CF4
	072 Move X0, 0x740000
	073 Move X0, [X0+1320]
	074 Call 0x1C17CF4
	075 Move X0, 0x740000
	076 Move X0, [X0+1328]
	077 Call 0x1C17CF4
	078 Move X0, 0x709000
	079 Move X0, [X0+312]
	080 Call 0x1C17CF4
	081 Move X0, 0x740000
	082 Move X0, [X0+1248]
	083 Call 0x1C17CF4
	084 Move X0, 0x70F000
	085 Move X0, [X0+2256]
	086 Call 0x1C17CF4
	087 Move W8, 1
	088 Move [X19+4046], W8
	089 NotImplemented "Instruction MOVI not yet implemented."
	090 Move X0, X31
	091 Move [X31+384], X31
	092 Move [X31+392], X31
	093 Move [X31+368], X31
	094 Move [X31+376], X31
	095 Move [X31+352], X31
	096 Move [X31+360], X31
	097 Move [X31+336], X31
	098 Move [X31+344], X31
	099 Move [X31+320], X31
	100 Move [X31+328], X31
	101 Move [X31+504], X31
	102 Move [X31+304], X31
	103 Move [X31+312], X31
	104 Move [X31+240], X31
	105 Move [X31+248], X31
	106 Move [X31+224], X31
	107 Move [X31+232], X31
	108 Move [X31+272], V0
	109 Move [X31+280], V0
	110 Move [X31+16], V0
	111 Move [X31+192], V0
	112 Move [X31+200], V0
	113 Move [X31+11], V0
	114 Call Random.get_state
	115 Move X25, X0
	116 Move W0, 0xE240
	117 Move X26, X1
	118 NotImplemented "Instruction MOVK not yet implemented."
	119 Move X1, X31
	120 Call Random.InitState, X0
	121 Compare X24, 0
	122 JumpIfEqual {808}
	123 Move X19, 0x740000
	124 Move X19, [X19+1320]
	125 Move X23, [X24+24]
	126 Move X21, 0x740000
	127 Add X0, X31, 384
	128 Move X4, [X19]
	129 Move X21, [X21+1328]
	130 Move W2, 2
	131 Move W3, 1
	132 Move W1, W23
	133 Call NativeArray`1<int2>..ctor, X0, X1, X2, X3
	134 Move X4, [X21]
	135 Add X0, X31, 368
	136 Move W2, 2
	137 Move W3, 1
	138 Move W1, W23
	139 Call NativeArray`1<float2>..ctor, X0, X1, X2, X3
	140 NotImplemented "Instruction CMP not yet implemented."
	141 And X8, X23, 0
	142 Move X11, X31
	143 Add X9, X24, 32
	144 Move X10, 1
	145 Subtract X12, X8, 1
	146 Move X13, 1
	147 Move X14, [X31+384]
	148 NotImplemented "Instruction CMP not yet implemented."
	149 NotImplemented "Instruction CSEL not yet implemented."
	150 Or X15, X15, X11
	151 Move [X14], X15
	152 Move W14, [X24+24]
	153 NotImplemented "Instruction CMP not yet implemented."
	154 Move V0, [X9+12]
	155 Move X14, [X31+368]
	156 Add X13, X13, X10
	157 Move [X14], D0
	158 Add X11, X11, 1
	159 NotImplemented "Instruction CMP not yet implemented."
	160 Move [X31+64], X26
	161 Move [X31+72], X25
	162 Move [X31+88], X22
	163 Move [X31+56], X20
	164 Move X8, 0x709000
	165 Move X8, [X8+312]
	166 Move X23, 0x708000
	167 Move X23, [X23+216]
	168 Move W9, [X31+392]
	169 Move X4, [X8]
	170 Move X22, 0x740000
	171 Move X20, 0x740000
	172 Move X22, [X22+360]
	173 Move X20, [X20+368]
	174 Move W1, W9
	175 ShiftRight W1, 29
	176 And W1, W1, 0xFFFFFFF
	177 Add X0, X31, 352
	178 Move W2, 2
	179 Move W3, 1
	180 Call NativeArray`1<Int32>..ctor, X0, X1, X2, X3
	181 Move W8, [X31+392]
	182 Move X4, [X21]
	183 Add X0, X31, 336
	184 Move W2, 2
	185 Move W1, W8
	186 ShiftRight W1, 29
	187 And W1, W1, 0xFFFFFFF
	188 Move W3, 1
	189 Call NativeArray`1<float2>..ctor, X0, X1, X2, X3
	190 Move W8, [X31+392]
	191 Move X4, [X19]
	192 Add X0, X31, 320
	193 Move W2, 2
	194 Move W1, W8
	195 ShiftRight W1, 29
	196 And W1, W1, 0xFFFFFFF
	197 Move W3, 1
	198 Add X19, X31, 320
	199 Call NativeArray`1<int2>..ctor, X0, X1, X2, X3
	200 Move X0, [X23]
	201 Move [X31+504], X31
	202 Move [X31+316], W31
	203 Move X23, [X31+368]
	204 Move X25, [X31+376]
	205 Move W8, [X0+224]
	206 Move X26, [X31+384]
	207 Move X27, [X31+392]
	208 Compare W8, 0
	209 JumpIfNotEqual {211}
	210 Call 0x1C17DFC
	211 Add X8, X31, 316
	212 Add X9, X31, 504
	213 Add X5, X31, 336
	214 Add X6, X31, 508
	215 Add X7, X31, 352
	216 Move W0, 2
	217 Move X1, X23
	218 Move X2, X25
	219 Move X3, X26
	220 Move X4, X27
	221 Move [X31+16], X8
	222 Move [X31+24], X31
	223 Move [X31], X9
	224 Move [X31+8], X19
	225 Call ModuleHandle.Tessellate, X0, X1, X2, X3, X4, X5, X6, X7, X8
	226 Move X19, [X24+24]
	227 Move X0, [X22]
	228 And X8, X19, 0
	229 Move [X31+120], X8
	230 Call 0x1C17F10
	231 Move X1, [X20]
	232 Move X26, X0
	233 Call List`1<IntPoint>..ctor, X0
	234 Subtract W8, W19, 1
	235 Move [X31+80], X19
	236 Move [X31+52], W8
	237 Move X21, 0x740000
	238 Move X8, -49442816
	239 Move X21, [X21+784]
	240 Move V9, [X8+2704]
	241 Move X19, X31
	242 Add X27, X24, 36
	243 Move X20, 0x7FF00000
	244 Move X23, 0x80000000
	245 Move TEMP, 0
	246 Not TEMP
	247 Move X28, TEMP
	248 Move W8, [X24+24]
	249 NotImplemented "Instruction CMP not yet implemented."
	250 Move S0, [X27-4]
	251 Move S1, [X27]
	252 Move D2, X20
	253 Move TEMP, 9
	254 Not TEMP
	255 Move W0, TEMP
	256 Move W1, 10
	257 NotImplemented "Instruction FCVT not yet implemented."
	258 NotImplemented "Instruction FCVT not yet implemented."
	259 Multiply D0, D0, D9
	260 Multiply D1, D1, D9
	261 NotImplemented "Instruction FCVTZS not yet implemented."
	262 NotImplemented "Instruction FCMP not yet implemented."
	263 NotImplemented "Instruction FCVTZS not yet implemented."
	264 NotImplemented "Instruction CSEL not yet implemented."
	265 NotImplemented "Instruction FCMP not yet implemented."
	266 Move X2, X31
	267 NotImplemented "Instruction CSEL not yet implemented."
	268 Call Random.Range, X0, X1
	269 Move W25, W0
	270 Move TEMP, 9
	271 Not TEMP
	272 Move W0, TEMP
	273 Move W1, 10
	274 Move X2, X31
	275 Call Random.Range, X0, X1
	276 Add X1, X22, W25
	277 Add X2, X29, W0
	278 Add X0, X31, 256
	279 Move X3, X31
	280 Call IntPoint..ctor, X0, X1, X2
	281 Move [X31+256], X19
	282 Move [X31+280], X28
	283 Move V0, [X31+256]
	284 Move V1, [X31+272]
	285 Move V2, [X31+18]
	286 Move [X31+128], V0
	287 Move [X31+136], V1
	288 Move [X31+10], V2
	289 Compare X26, 0
	290 JumpIfEqual {808}
	291 Move V0, [X31+128]
	292 Move V1, [X31+144]
	293 Move V2, [X31+10]
	294 Move X10, [X21]
	295 Move [X31+400], V0
	296 Move [X31+408], V1
	297 Move [X31+27], V2
	298 Move W9, [X26+28]
	299 Move X8, [X26+16]
	300 Add W9, W9, 1
	301 Move [X26+28], W9
	302 Compare X8, 0
	303 JumpIfEqual {808}
	304 NotImplemented "Instruction LDRSW not yet implemented."
	305 Move W11, [X8+24]
	306 NotImplemented "Instruction CMP not yet implemented."
	307 Add W10, W9, 1
	308 Move [X26+24], W10
	309 Move V1, [X31+416]
	310 Move V0, [X31+432]
	311 Move V2, [X31+25]
	312 Move W10, 48
	313 NotImplemented "Instruction MADD not yet implemented."
	314 Move [X8+48], V1
	315 Move [X8+56], V0
	316 Move [X8+2], V2
	317 Move X8, [X10+32]
	318 Move V0, [X31+400]
	319 Move V1, [X31+416]
	320 Move V2, [X31+27]
	321 Add X1, X31, 448
	322 Move X8, [X8+192]
	323 Move X0, X26
	324 Move X2, [X8+112]
	325 Move [X31+448], V0
	326 Move [X31+456], V1
	327 Move [X31+30], V2
	328 Call List`1<IntPoint>.AddWithResize, X0, X1
	329 Move X8, [X31+120]
	330 Add X19, X19, 1
	331 Add X27, X27, 12
	332 NotImplemented "Instruction CMP not yet implemented."
	333 Move X8, 0x740000
	334 Move X8, [X8+1008]
	335 Move X19, 0x740000
	336 Move X20, 0x740000
	337 Move X0, [X8]
	338 Move X19, [X19+1016]
	339 Move X20, [X20+1296]
	340 Move [X31+312], W31
	341 Call 0x1C17F10
	342 Move X1, [X19]
	343 Move X25, X0
	344 Call List`1<Object>..ctor, X0
	345 Move X0, [X20]
	346 Move [X31+304], X25
	347 Call 0x1C17F10
	348 Move D0, 16.000000001862645
	349 Move X27, X0
	350 Call ClipperOffset..ctor, X0, V0
	351 Compare X27, 0
	352 JumpIfEqual {808}
	353 Move X0, X27
	354 Move X1, X26
	355 Move W2, W31
	356 Move W3, W31
	357 Call ClipperOffset.AddPath, X0, X1, X2, X3
	358 Compare X26, 0
	359 JumpIfEqual {808}
	360 Move X8, -49455104
	361 Move V9, [X8+396]
	362 Move W2, [X26+24]
	363 Add X1, X31, 304
	364 Move X0, X27
	365 Multiply S0, S8, S9
	366 NotImplemented "Instruction FCVT not yet implemented."
	367 Call ClipperOffset.Execute, X0, X1, V0, X2
	368 Compare X25, 0
	369 JumpIfEqual {808}
	370 Move W8, [X25+24]
	371 NotImplemented "Instruction CMP not yet implemented."
	372 Move X8, 0x740000
	373 Move X8, [X8+576]
	374 Move X0, X25
	375 Move W1, W31
	376 Move X2, [X8]
	377 Call List`1<Object>.get_Item, X0, X1
	378 Compare X0, 0
	379 JumpIfEqual {808}
	380 Move W8, [X0+24]
	381 Move X22, 0x740000
	382 Move X22, [X22+528]
	383 Move X27, X0
	384 NotImplemented "Instruction CMP not yet implemented."
	385 Move X8, [X31+120]
	386 Move X20, W8
	387 Move X19, 0x6DF000
	388 Move X19, [X19+1448]
	389 Move W28, W31
	390 Move X2, [X22]
	391 Add X8, X31, 448
	392 Move X0, X27
	393 Move W1, W28
	394 Call List`1<IntPoint>.get_Item, X0, X1
	395 Move X8, [X31+448]
	396 Add X31, X8, 1
	397 Move X2, [X22]
	398 Add X8, X31, 448
	399 Move X0, X27
	400 Move W1, W28
	401 Call List`1<IntPoint>.get_Item, X0, X1
	402 Move X0, [X19]
	403 Move X29, [X31+448]
	404 Move W8, [X0+224]
	405 Compare W8, 0
	406 JumpIfNotEqual {408}
	407 Call 0x1C17DFC
	408 Move X0, X20
	409 Move X1, X29
	410 Move X2, X31
	411 Call Math.Min, X0, X1
	412 Move X20, X0
	413 Move W8, [X27+24]
	414 Add W28, W28, 1
	415 NotImplemented "Instruction CMP not yet implemented."
	416 Add X2, X31, 312
	417 Move X0, X27
	418 Move X1, X26
	419 Call LightUtility.FixPivots, X0, X1, X2
	420 Compare X0, 0
	421 JumpIfEqual {808}
	422 Move [X31+40], X20
	423 Move X8, 0x740000
	424 Move X8, [X8+1248]
	425 Move X19, 0x740000
	426 Move X19, [X19+1312]
	427 Move W9, [X31+508]
	428 Move X4, [X8]
	429 Move X8, [X31+80]
	430 Move W10, [X0+24]
	431 Move W11, [X31+504]
	432 Move W12, 6
	433 Add W8, W9, W8
	434 Move X26, X0
	435 NotImplemented "Instruction MADD not yet implemented."
	436 Add W1, W8, W10
	437 Add X0, X31, 240
	438 Move W2, 2
	439 Move W3, 1
	440 Add W27, W9, 6
	441 Call NativeArray`1<LightMeshVertex>..ctor, X0, X1, X2, X3
	442 Move X4, [X19]
	443 Add X0, X31, 224
	444 Move W2, 2
	445 Move W3, 1
	446 Move W1, W27
	447 Call NativeArray`1<UInt16>..ctor, X0, X1, X2, X3
	448 Move W29, [X31+504]
	449 NotImplemented "Instruction CMP not yet implemented."
	450 Move X8, [X31+352]
	451 Move X9, [X31+224]
	452 Move X10, X29
	453 Move W11, [X8+4]
	454 Subtract X10, X10, 1
	455 NotImplemented "Instruction STRH not yet implemented."
	456 Move W21, [X31+508]
	457 Move X20, 0x70F000
	458 Move X20, [X20+2256]
	459 Move X19, -49446912
	460 NotImplemented "Instruction CMP not yet implemented."
	461 Move V0, [X19+187]
	462 Move X23, X31
	463 Move X25, X31
	464 Move X27, X31
	465 Move [X31+6], V0
	466 Move X8, [X31+336]
	467 Move S2, W31
	468 Move X0, X31
	469 Add X8, X8, X23
	470 Move S0, [X8]
	471 Move S1, [X8+4]
	472 Call float3.op_Implicit, X0
	473 Move X8, [X31+240]
	474 Add X27, X27, 1
	475 Add X23, X23, 8
	476 Add X8, X8, X25
	477 Move [X8], S0
	478 Move [X8+8], S1
	479 Move V0, [X31+6]
	480 Move [X8+8], S2
	481 Move [X8+28], X31
	482 Add X25, X25, 36
	483 Move [X8+12], V0
	484 NotImplemented "Instruction LDRSW not yet implemented."
	485 NotImplemented "Instruction CMP not yet implemented."
	486 Move W29, [X31+504]
	487 Move X0, [X20]
	488 Move X20, [X31+80]
	489 Move W1, W20
	490 Call 0x1C17D6C
	491 NotImplemented "Instruction CMP not yet implemented."
	492 Move X27, X0
	493 Move V0, [X19+187]
	494 Move X20, X31
	495 Add X23, X27, 32
	496 Add X19, X24, 36
	497 Move W25, W21
	498 Move W28, 36
	499 Move [X31+6], V0
	500 Move W8, [X24+24]
	501 NotImplemented "Instruction CMP not yet implemented."
	502 Move S0, [X19-4]
	503 Move S1, [X19]
	504 Move S2, W31
	505 Move X0, X31
	506 Add X22, X25, X20
	507 Call float3.op_Implicit, X0
	508 Move X8, [X31+240]
	509 NotImplemented "Instruction NOP not yet implemented."
	510 NotImplemented "Instruction SMADDL not yet implemented."
	511 Move [X8], S0
	512 Move [X8+8], S1
	513 Move V0, [X31+6]
	514 Move [X8+8], S2
	515 Move [X8+28], X31
	516 Move [X8+12], V0
	517 Compare X27, 0
	518 JumpIfEqual {808}
	519 Move W8, [X27+24]
	520 NotImplemented "Instruction CMP not yet implemented."
	521 Move X8, [X31+120]
	522 NotImplemented "Instruction STRH not yet implemented."
	523 Add X20, X20, 1
	524 Add X19, X19, 12
	525 NotImplemented "Instruction CMP not yet implemented."
	526 Move X22, 0x740000
	527 Move X22, [X22+528]
	528 Add W21, W21, W20
	529 Move X2, [X22]
	530 Add X8, X31, 448
	531 Move X0, X26
	532 Move W1, W31
	533 Call List`1<IntPoint>.get_Item, X0, X1
	534 Move X8, [X31+448]
	535 Add X31, X8, 1
	536 Move X2, [X22]
	537 Add X8, X31, 448
	538 Move X0, X26
	539 Move W1, W31
	540 Call List`1<IntPoint>.get_Item, X0, X1
	541 Move X20, [X31+448]
	542 Move X20, X31
	543 Move W8, [X26+24]
	544 NotImplemented "Instruction CMP not yet implemented."
	545 Move W22, [X31+312]
	546 Move W28, W31
	547 Move S8, W31
	548 Move S10, 1
	549 Move W24, W21
	550 Move W19, W21
	551 Move X23, X26
	552 Move X8, 0x740000
	553 Move X8, [X8+528]
	554 Move X0, X23
	555 Move W1, W28
	556 Move X2, [X8]
	557 Add X8, X31, 448
	558 Call List`1<IntPoint>.get_Item, X0, X1
	559 Move X8, [X31+456]
	560 Move X9, [X31+464]
	561 Move X10, [X31+448]
	562 Move S2, W31
	563 Move X0, X31
	564 NotImplemented "Instruction SCVTF not yet implemented."
	565 NotImplemented "Instruction SCVTF not yet implemented."
	566 Add X31, X10, 1
	567 NotImplemented "Instruction FDIV not yet implemented."
	568 NotImplemented "Instruction FDIV not yet implemented."
	569 NotImplemented "Instruction CSEL not yet implemented."
	570 Call float3.op_Implicit, X0
	571 Move X8, [X31+240]
	572 NotImplemented "Instruction CMP not yet implemented."
	573 Move W9, 36
	574 NotImplemented "Instruction FCSEL not yet implemented."
	575 NotImplemented "Instruction CMP not yet implemented."
	576 NotImplemented "Instruction SMADDL not yet implemented."
	577 Add W9, W29, 1
	578 Move [X8], S0
	579 Move [X8+8], S1
	580 Move [X8+8], S2
	581 Move [X8+12], W31
	582 Move [X8+16], X31
	583 Move [X8+24], S3
	584 Move [X8+28], X31
	585 Compare X27, 0
	586 JumpIfNotEqual {604}
	587 Compare X27, 0
	588 JumpIfEqual {808}
	589 Move W10, [X27+24]
	590 NotImplemented "Instruction CMP not yet implemented."
	591 Add X8, X27, X20
	592 NotImplemented "Instruction LDRH not yet implemented."
	593 Move X8, [X31+224]
	594 NotImplemented "Instruction CMP not yet implemented."
	595 NotImplemented "Instruction STRH not yet implemented."
	596 Add X10, X27, X26
	597 NotImplemented "Instruction LDRH not yet implemented."
	598 Add W11, W29, 2
	599 NotImplemented "Instruction STRH not yet implemented."
	600 Add W10, W29, 3
	601 Add W9, W29, 4
	602 NotImplemented "Instruction STRH not yet implemented."
	603 Move W29, W10
	604 Move W8, [X27+24]
	605 NotImplemented "Instruction CMP not yet implemented."
	606 Add X10, X27, X20
	607 Move X8, [X31+224]
	608 NotImplemented "Instruction LDRH not yet implemented."
	609 Add W11, W29, 2
	610 Add W25, W24, 1
	611 Add W28, W28, 1
	612 NotImplemented "Instruction STRH not yet implemented."
	613 NotImplemented "Instruction STRH not yet implemented."
	614 NotImplemented "Instruction STRH not yet implemented."
	615 Move W9, [X23+24]
	616 Add W29, W29, 3
	617 Move W19, W24
	618 Move W24, W25
	619 NotImplemented "Instruction CMP not yet implemented."
	620 Move X20, X26
	621 Move W17, [X31+52]
	622 Move X0, [X31+40]
	623 Add X9, X31, 224
	624 Subtract W10, W25, 1
	625 NotImplemented "Instruction STRH not yet implemented."
	626 Move X8, [X31+224]
	627 Move X0, [X31+40]
	628 NotImplemented "Instruction STRH not yet implemented."
	629 Compare X27, 0
	630 JumpIfEqual {808}
	631 Move W17, [X31+52]
	632 Add X9, X31, 224
	633 Move W25, W21
	634 Move W10, W21
	635 Move W11, [X27+24]
	636 NotImplemented "Instruction CMP not yet implemented."
	637 Add X12, X27, X0
	638 NotImplemented "Instruction LDRH not yet implemented."
	639 Add W14, W29, 1
	640 NotImplemented "Instruction STRH not yet implemented."
	641 Compare X0, 0
	642 JumpIfEqual {647}
	643 Move X9, X31
	644 Add X13, X31, 224
	645 Move W21, W10
	646 Move W15, W10
	647 NotImplemented "Instruction CMP not yet implemented."
	648 Add X13, X27, W17
	649 NotImplemented "Instruction LDRH not yet implemented."
	650 Move X13, X31
	651 Add W16, W29, 2
	652 Add W22, W29, 3
	653 Add W14, W29, 4
	654 NotImplemented "Instruction STRH not yet implemented."
	655 NotImplemented "Instruction STRH not yet implemented."
	656 Compare X0, 0
	657 JumpIfEqual {665}
	658 NotImplemented "Instruction LDRH not yet implemented."
	659 Move X12, [X13]
	660 Subtract X9, X0, 1
	661 NotImplemented "Instruction CMP not yet implemented."
	662 NotImplemented "Instruction STRH not yet implemented."
	663 Add X9, X27, X9
	664 NotImplemented "Instruction LDRH not yet implemented."
	665 Move X9, [X9]
	666 NotImplemented "Instruction CMP not yet implemented."
	667 NotImplemented "Instruction STRH not yet implemented."
	668 Move X20, 0x716000
	669 Move X10, [X31+240]
	670 Move X20, [X20+3928]
	671 Move X21, W14
	672 Add X9, X27, W17
	673 NotImplemented "Instruction LDRH not yet implemented."
	674 NotImplemented "Instruction LDRH not yet implemented."
	675 Move X0, [X20]
	676 Move W9, 36
	677 Multiply X11, X19, X9
	678 Multiply X8, X8, X9
	679 Move W9, [X0+224]
	680 Move V9, [X10]
	681 Move V10, [X10]
	682 Compare W9, 0
	683 JumpIfNotEqual {685}
	684 Call 0x1C17DFC
	685 Move X8, -49455104
	686 Move V8, [X8+1040]
	687 NotImplemented "Instruction FABD not yet implemented."
	688 Move X22, W22
	689 NotImplemented "Instruction FCMP not yet implemented."
	690 Move W21, 1
	691 Move X8, [X31+224]
	692 Move X9, [X31+240]
	693 Move X0, [X20]
	694 Move W10, 36
	695 NotImplemented "Instruction LDRH not yet implemented."
	696 NotImplemented "Instruction NOP not yet implemented."
	697 NotImplemented "Instruction MADD not yet implemented."
	698 Move V9, [X11+4]
	699 NotImplemented "Instruction NOP not yet implemented."
	700 NotImplemented "Instruction MADD not yet implemented."
	701 Move W9, [X0+224]
	702 Move V10, [X8+4]
	703 Compare W9, 0
	704 JumpIfNotEqual {706}
	705 Call 0x1C17DFC
	706 NotImplemented "Instruction FABD not yet implemented."
	707 NotImplemented "Instruction FCMP not yet implemented."
	708 NotImplemented "Instruction CSET not yet implemented."
	709 Move X8, [X31+224]
	710 Move X9, [X31+240]
	711 Move X0, [X20]
	712 Move W10, 36
	713 NotImplemented "Instruction LDRH not yet implemented."
	714 Multiply X11, X19, X10
	715 Move V9, [X9]
	716 Multiply X8, X8, X10
	717 Move W10, [X0+224]
	718 Move V10, [X9]
	719 Compare W10, 0
	720 JumpIfNotEqual {722}
	721 Call 0x1C17DFC
	722 NotImplemented "Instruction FABD not yet implemented."
	723 NotImplemented "Instruction FCMP not yet implemented."
	724 Move W8, W31
	725 Compare W21, 0
	726 JumpIfNotEqual {747}
	727 Move X8, [X31+224]
	728 Move X9, [X31+240]
	729 Move X0, [X20]
	730 Move W10, 36
	731 NotImplemented "Instruction LDRH not yet implemented."
	732 NotImplemented "Instruction NOP not yet implemented."
	733 NotImplemented "Instruction MADD not yet implemented."
	734 Move V9, [X11+4]
	735 NotImplemented "Instruction NOP not yet implemented."
	736 NotImplemented "Instruction MADD not yet implemented."
	737 Move W9, [X0+224]
	738 Move V10, [X8+4]
	739 Compare W9, 0
	740 JumpIfNotEqual {742}
	741 Call 0x1C17DFC
	742 NotImplemented "Instruction FABD not yet implemented."
	743 NotImplemented "Instruction FCMP not yet implemented."
	744 NotImplemented "Instruction CSET not yet implemented."
	745 Compare W21, 0
	746 JumpIfEqual {749}
	747 Compare W8, 0
	748 JumpIfEqual {755}
	749 Move W8, [X31+312]
	750 Move X10, [X31+80]
	751 Move W9, [X31+508]
	752 Add W8, W8, W10
	753 Add W8, W8, W9
	754 Subtract W19, W8, 1
	755 Move X8, [X31+224]
	756 Add W9, W29, 5
	757 NotImplemented "Instruction STRH not yet implemented."
	758 Move X0, [X31+240]
	759 Move X1, [X31+248]
	760 Move X3, [X31+224]
	761 Move X4, [X31+232]
	762 Move X6, [X31+88]
	763 Add W5, W29, 6
	764 Move W2, W25
	765 Call LightUtility.TransferToMesh, X0, X1, X2, X3, X4
	766 Move X1, [X31+64]
	767 Move X0, [X31+72]
	768 Move X2, X31
	769 Call Random.set_state, X0
	770 Move X0, [X31+88]
	771 Compare X0, 0
	772 JumpIfEqual {808}
	773 Call Light2D.get_lightMesh, X0
	774 Move X19, [X31+56]
	775 Compare X0, 0
	776 JumpIfEqual {808}
	777 Add X8, X31, 448
	778 Move W1, W31
	779 Move X2, X31
	780 Call Mesh.GetSubMesh, X0, X1
	781 Move V1, [X31+448]
	782 Move V0, [X31+464]
	783 Move V2, [X31+30]
	784 Move [X31+176], V1
	785 Move [X31+184], V0
	786 Move X8, [X31+192]
	787 Move [X31+13], V2
	788 Move [X19], V1
	789 Move [X19+16], X8
	790 Add X31, X31, 496
	791 Move X20, [X31+112]
	792 Move X19, [X31+120]
	793 Move X22, [X31+96]
	794 Move X21, [X31+104]
	795 Move X24, [X31+80]
	796 Move X23, [X31+88]
	797 Move X26, [X31+64]
	798 Move X25, [X31+72]
	799 Move X28, [X31+48]
	800 Move X27, [X31+56]
	801 Move X29, [X31+32]
	802 Move X30, [X31+40]
	803 Move D9, [X31+16]
	804 Move D8, [X31+24]
	805 Move V10, [X31+128]
	806 Return X0
	807 Call 0x1C17F28
	808 Call 0x1C17F20

Method: UnityEngine.Bounds GenerateParametricMesh(UnityEngine.Rendering.Universal.Light2D light, System.Single radius, System.Single falloffDistance, System.Single angle, System.Int32 sides)

Disassembly:
	0x03A15BE4 LDP X20, X19, [X31 + 0x10]
	0x03A15BE8 CMP W8, 0x0
	0x03A15BEC CSET W0, GT
	0x03A15BF0 LDR X30, [X31], #0x20
	0x03A15BF4 RET
	0x03A15BF8 BL 0x1C16F20
	0x03A15BFC SUB X31, X31, 0x80
	0x03A15C00 STP X29, X30, [X31 + 0x20]
	0x03A15C04 STP X28, X27, [X31 + 0x30]
	0x03A15C08 STP X26, X25, [X31 + 0x40]
	0x03A15C0C STP X24, X23, [X31 + 0x50]
	0x03A15C10 STP X22, X21, [X31 + 0x60]
	0x03A15C14 STP X20, X19, [X31 + 0x70]
	0x03A15C18 ADRP X22, 0x9CC000
	0x03A15C1C LDRB W9, [X22 + 0xFBC]
	0x03A15C20 MOV W20, W1
	0x03A15C24 MOV X21, X0
	0x03A15C28 MOV X19, X8
	0x03A15C2C TBNZ X9, 0x0, 0x3A15C68
	0x03A15C30 ADRP X0, 0x73F000
	0x03A15C34 LDR X0, [X0 + 0x550]
	0x03A15C38 BL 0x1C16CF4
	0x03A15C3C ADRP X0, 0x73F000
	0x03A15C40 LDR X0, [X0 + 0x558]
	0x03A15C44 BL 0x1C16CF4
	0x03A15C48 ADRP X0, 0x73F000
	0x03A15C4C LDR X0, [X0 + 0x560]
	0x03A15C50 BL 0x1C16CF4
	0x03A15C54 ADRP X0, 0x73F000
	0x03A15C58 LDR X0, [X0 + 0x568]
	0x03A15C5C BL 0x1C16CF4
	0x03A15C60 MOVZ W8, 0x1
	0x03A15C64 STRB W8, [X22 + 0xFBC]
	0x03A15C68 STP X31, X31, [X31 + 0x8]
	0x03A15C6C STR X31, [X31 + 0x18]
	0x03A15C70 LDR X0, [X21 + 0x10]
	0x03A15C74 CBZ X0, 0x3A15D54
	0x03A15C78 ADRP X8, 0x73F000
	0x03A15C7C LDR X8, [X8 + 0x568]
	0x03A15C80 ADRP X28, 0x73F000
	0x03A15C84 ADRP X22, 0x73F000
	0x03A15C88 LDR X1, [X8]
	0x03A15C8C LDR X28, [X28 + 0x558]
	0x03A15C90 LDR X22, [X22 + 0x550]
	0x03A15C94 ADD X8, X31, 0x8
	0x03A15C98 BL 0x301CB58
	0x03A15C9C MOV W25, W31
	0x03A15CA0 MOV W24, W31
	0x03A15CA4 MOV W23, W31
	0x03A15CA8 MOV W26, W31
	0x03A15CAC MOV W27, W31
	0x03A15CB0 MOVZ W29, 0x1
	0x03A15CB4 LDR X1, [X28]
	0x03A15CB8 ADD X0, X31, 0x8
	0x03A15CBC BL 0x2BC4350
	0x03A15CC0 TBZ X0, 0x0, 0x3A15D18
	0x03A15CC4 LDR X21, [X31 + 0x18]
	0x03A15CC8 CBZ X21, 0x3A15D50
	0x03A15CCC MOV X0, X21
	0x03A15CD0 MOV W1, W20
	0x03A15CD4 BL 0x3A15404
	0x03A15CD8 TBZ X0, 0x0, 0x3A15CB4
	0x03A15CDC LDR W8, [X21 + 0x78]
	0x03A15CE0 LDR V0, [X21 + 0x44]
	0x03A15CE4 LDP W10, W9, [X21 + 0x24]
	0x03A15CE8 ADD W27, W27, 0x1
	0x03A15CEC CMP W8, 0x2
	0x03A15CF0 CINC W26, W26, NE
	0x03A15CF4 FCMP S0, 0x0
	0x03A15CF8 LSLV W8, W29, W9
	0x03A15CFC CSET W9, GT
	0x03A15D00 CMP W10, 0x4
	0x03A15D04 ORR W24, W8, W24, 0x0
	0x03A15D08 CSEL W8, W31, W8, EQ
	0x03A15D0C ADD W25, W25, W9
	0x03A15D10 ORR W23, W8, W23, 0x0
	0x03A15D14 B 0x3A15CB4
	0x03A15D18 LDR X1, [X22]
	0x03A15D1C ADD X0, X31, 0x8
	0x03A15D20 BL 0x2BC434C
	0x03A15D24 STP W27, W26, [X19]
	0x03A15D28 STP W25, W24, [X19 + 0x8]
	0x03A15D2C STR W23, [X19 + 0x10]
	0x03A15D30 LDP X20, X19, [X31 + 0x70]
	0x03A15D34 LDP X22, X21, [X31 + 0x60]
	0x03A15D38 LDP X24, X23, [X31 + 0x50]
	0x03A15D3C LDP X26, X25, [X31 + 0x40]
	0x03A15D40 LDP X28, X27, [X31 + 0x30]
	0x03A15D44 LDP X29, X30, [X31 + 0x20]
	0x03A15D48 ADD X31, X31, 0x80
	0x03A15D4C RET
	0x03A15D50 BL 0x1C16F20
	0x03A15D54 BL 0x1C16F20
	0x03A15D58 B 0x3A15D60
	0x03A15D5C B 0x3A15D60
	0x03A15D60 MOV X20, X0
	0x03A15D64 CMP W1, 0x1
	0x03A15D68 B.NE 0x3A15D94
	0x03A15D6C MOV X0, X20
	0x03A15D70 BL 0x3EB1AD0
	0x03A15D74 LDR X21, [X0]
	0x03A15D78 BL 0x3EB1AE0
	0x03A15D7C LDR X1, [X22]
	0x03A15D80 ADD X0, X31, 0x8
	0x03A15D84 BL 0x2BC434C
	0x03A15D88 CBZ X21, 0x3A15D24
	0x03A15D8C MOV X0, X21
	0x03A15D90 BL 0x1C16F18
	0x03A15D94 MOV X21, X31
	0x03A15D98 B 0x3A15DA0
	0x03A15D9C MOV X20, X0
	0x03A15DA0 LDR X1, [X22]
	0x03A15DA4 ADD X0, X31, 0x8
	0x03A15DA8 BL 0x2BC434C
	0x03A15DAC CBNZ X21, 0x3A15DB8
	0x03A15DB0 MOV X0, X20
	0x03A15DB4 BL 0x1D2C690
	0x03A15DB8 MOV X0, X21
	0x03A15DBC BL 0x1C16F18
	0x03A15DC0 BL 0x1990590
	0x03A15DC4 SUB X31, X31, 0x130
	0x03A15DC8 STP D15, D14, [X31 + 0x90]
	0x03A15DCC STP D13, D12, [X31 + 0xA0]
	0x03A15DD0 STP D11, D10, [X31 + 0xB0]
	0x03A15DD4 STP D9, D8, [X31 + 0xC0]
	0x03A15DD8 STP X29, X30, [X31 + 0xD0]
	0x03A15DDC STP X28, X27, [X31 + 0xE0]
	0x03A15DE0 STP X26, X25, [X31 + 0xF0]
	0x03A15DE4 STP X24, X23, [X31 + 0x100]
	0x03A15DE8 STP X22, X21, [X31 + 0x110]
	0x03A15DEC STP X20, X19, [X31 + 0x120]
	0x03A15DF0 ADRP X22, 0x9CC000
	0x03A15DF4 LDRB W8, [X22 + 0xFBD]
	0x03A15DF8 MOV X20, X2
	0x03A15DFC MOV X21, X1
	0x03A15E00 MOV X19, X0
	0x03A15E04 TBNZ X8, 0x0, 0x3A15F24
	0x03A15E08 ADRP X0, 0x73F000
	0x03A15E0C LDR X0, [X0 + 0x570]
	0x03A15E10 BL 0x1C16CF4
	0x03A15E14 ADRP X0, 0x73F000
	0x03A15E18 LDR X0, [X0 + 0x578]
	0x03A15E1C BL 0x1C16CF4
	0x03A15E20 ADRP X0, 0x73F000
	0x03A15E24 LDR X0, [X0 + 0x550]
	0x03A15E28 BL 0x1C16CF4
	0x03A15E2C ADRP X0, 0x73F000
	0x03A15E30 LDR X0, [X0 + 0x580]
	0x03A15E34 BL 0x1C16CF4
	0x03A15E38 ADRP X0, 0x73F000
	0x03A15E3C LDR X0, [X0 + 0x588]
	0x03A15E40 BL 0x1C16CF4
	0x03A15E44 ADRP X0, 0x73F000
	0x03A15E48 LDR X0, [X0 + 0x558]
	0x03A15E4C BL 0x1C16CF4
	0x03A15E50 ADRP X0, 0x73F000
	0x03A15E54 LDR X0, [X0 + 0x590]
	0x03A15E58 BL 0x1C16CF4
	0x03A15E5C ADRP X0, 0x73F000
	0x03A15E60 LDR X0, [X0 + 0x598]
	0x03A15E64 BL 0x1C16CF4
	0x03A15E68 ADRP X0, 0x73F000
	0x03A15E6C LDR X0, [X0 + 0x560]
	0x03A15E70 BL 0x1C16CF4
	0x03A15E74 ADRP X0, 0x73F000
	0x03A15E78 LDR X0, [X0 + 0x5A0]
	0x03A15E7C BL 0x1C16CF4
	0x03A15E80 ADRP X0, 0x73F000
	0x03A15E84 LDR X0, [X0 + 0x498]
	0x03A15E88 BL 0x1C16CF4
	0x03A15E8C ADRP X0, 0x73F000
	0x03A15E90 LDR X0, [X0 + 0x5A8]
	0x03A15E94 BL 0x1C16CF4
	0x03A15E98 ADRP X0, 0x73F000
	0x03A15E9C LDR X0, [X0 + 0x538]
	0x03A15EA0 BL 0x1C16CF4
	0x03A15EA4 ADRP X0, 0x73F000
	0x03A15EA8 LDR X0, [X0 + 0x5B0]
	0x03A15EAC BL 0x1C16CF4
	0x03A15EB0 ADRP X0, 0x73F000
	0x03A15EB4 LDR X0, [X0 + 0x5B8]
	0x03A15EB8 BL 0x1C16CF4
	0x03A15EBC ADRP X0, 0x73F000
	0x03A15EC0 LDR X0, [X0 + 0x5C0]
	0x03A15EC4 BL 0x1C16CF4
	0x03A15EC8 ADRP X0, 0x73F000
	0x03A15ECC LDR X0, [X0 + 0x5C8]
	0x03A15ED0 BL 0x1C16CF4
	0x03A15ED4 ADRP X0, 0x73F000
	0x03A15ED8 LDR X0, [X0 + 0x5D0]
	0x03A15EDC BL 0x1C16CF4
	0x03A15EE0 ADRP X0, 0x73F000
	0x03A15EE4 LDR X0, [X0 + 0x568]
	0x03A15EE8 BL 0x1C16CF4
	0x03A15EEC ADRP X0, 0x73F000
	0x03A15EF0 LDR X0, [X0 + 0x5D8]
	0x03A15EF4 BL 0x1C16CF4
	0x03A15EF8 ADRP X0, 0x73B000
	0x03A15EFC LDR X0, [X0 + 0x680]
	0x03A15F00 BL 0x1C16CF4
	0x03A15F04 ADRP X0, 0x73F000
	0x03A15F08 LDR X0, [X0 + 0x5E0]
	0x03A15F0C BL 0x1C16CF4
	0x03A15F10 ADRP X0, 0x73F000
	0x03A15F14 LDR X0, [X0 + 0x5E8]
	0x03A15F18 BL 0x1C16CF4
	0x03A15F1C MOVZ W8, 0x1
	0x03A15F20 STRB W8, [X22 + 0xFBD]
	0x03A15F24 STP X31, X31, [X31 + 0x70]
	0x03A15F28 STR X31, [X31 + 0x80]
	0x03A15F2C STP X31, X31, [X31 + 0x50]
	0x03A15F30 STR X31, [X31 + 0x60]
	0x03A15F34 STP X31, X31, [X31 + 0x30]
	0x03A15F38 STR X31, [X31 + 0x40]
	0x03A15F3C LDR X8, [X19 + 0x10]
	0x03A15F40 CBZ X8, 0x3A16628
	0x03A15F44 LDP W2, W9, [X8 + 0x18]
	0x03A15F48 ADRP X22, 0x73F000
	0x03A15F4C LDR X22, [X22 + 0x498]
	0x03A15F50 ADD W9, W9, 0x1
	0x03A15F54 CMP W2, 0x1
	0x03A15F58 STP W31, W9, [X8 + 0x18]
	0x03A15F5C B.LT 0x3A15F70
	0x03A15F60 LDR X0, [X8 + 0x10]
	0x03A15F64 MOV W1, W31
	0x03A15F68 MOV X3, X31
	0x03A15F6C BL 0x339FA34
	0x03A15F70 LDR X0, [X22]
	0x03A15F74 LDR W8, [X0 + 0xE0]
	0x03A15F78 CBNZ W8, 0x3A15F80
	0x03A15F7C BL 0x1C16DFC
	0x03A15F80 ADRP X23, 0x9CD000
	0x03A15F84 LDRB W8, [X23 + 0xD]
	0x03A15F88 CBNZ W8, 0x3A15FA0
	0x03A15F8C ADRP X0, 0x73F000
	0x03A15F90 LDR X0, [X0 + 0x498]
	0x03A15F94 BL 0x1C16CF4
	0x03A15F98 MOVZ W8, 0x1
	0x03A15F9C STRB W8, [X23 + 0xD]
	0x03A15FA0 LDR X0, [X22]
	0x03A15FA4 LDR W8, [X0 + 0xE0]
	0x03A15FA8 CBNZ W8, 0x3A15FB4
	0x03A15FAC BL 0x1C16DFC
	0x03A15FB0 LDR X0, [X22]
	0x03A15FB4 LDR X8, [X0 + 0xB8]
	0x03A15FB8 LDR X0, [X8 + 0x8]
	0x03A15FBC CBZ X0, 0x3A16628
	0x03A15FC0 ADRP X26, 0x73F000
	0x03A15FC4 LDR X26, [X26 + 0x568]
	0x03A15FC8 ADRP X27, 0x73F000
	0x03A15FCC ADRP X29, 0x73B000
	0x03A15FD0 ADRP X25, 0x73F000
	0x03A15FD4 ADRP X24, 0x73F000
	0x03A15FD8 LDR X27, [X27 + 0x558]
	0x03A15FDC LDR X29, [X29 + 0x680]
	0x03A15FE0 LDR X25, [X25 + 0x590]
	0x03A15FE4 LDR X24, [X24 + 0x5C0]
	0x03A15FE8 LDR X1, [X26]
	0x03A15FEC ADRP X28, 0x73F000
	0x03A15FF0 LDR X28, [X28 + 0x550]
	0x03A15FF4 ADD X8, X31, 0x18
	0x03A15FF8 BL 0x301CB58
	0x03A15FFC LDUR V0, [X31 + 0x18]
	0x03A16000 LDR X8, [X31 + 0x28]
	0x03A16004 STR V0, [X31 + 0x7]
	0x03A16008 STR X8, [X31 + 0x80]
	0x03A1600C LDR X1, [X27]
	0x03A16010 ADD X0, X31, 0x70
	0x03A16014 BL 0x2BC4350
	0x03A16018 TBZ X0, 0x0, 0x3A161DC
	0x03A1601C CBZ X20, 0x3A16604
	0x03A16020 LDR X22, [X31 + 0x80]
	0x03A16024 MOV X0, X20
	0x03A16028 MOV X1, X31
	0x03A1602C BL 0x3C03A18
	0x03A16030 CBZ X22, 0x3A16608
	0x03A16034 MOV W23, W0
	0x03A16038 MOV X0, X22
	0x03A1603C MOV X1, X31
	0x03A16040 BL 0x3C32ECC
	0x03A16044 CBZ X0, 0x3A16600
	0x03A16048 MOV X1, X31
	0x03A1604C BL 0x3C35734
	0x03A16050 LSRV W8, W23, W0
	0x03A16054 TBZ X8, 0x0, 0x3A1600C
	0x03A16058 LDR W8, [X22 + 0x24]
	0x03A1605C CMP W8, 0x4
	0x03A16060 B.NE 0x3A160B4
	0x03A16064 LDR X0, [X19 + 0x10]
	0x03A16068 CBZ X0, 0x3A16614
	0x03A1606C ADRP X9, 0x73E000
	0x03A16070 LDR W10, [X0 + 0x1C]
	0x03A16074 LDR X8, [X0 + 0x10]
	0x03A16078 LDR X9, [X9 + 0x538]
	0x03A1607C ADD W10, W10, 0x1
	0x03A16080 LDR X9, [X9]
	0x03A16084 STR W10, [X0 + 0x1C]
	0x03A16088 CBZ X8, 0x3A16610
	0x03A1608C LDRSW X10, [X0 + 0x18]
	0x03A16090 LDR W11, [X8 + 0x18]
	0x03A16094 CMP W10, W11
	0x03A16098 B.CC 0x3A161B0
	0x03A1609C LDR X8, [X9 + 0x20]
	0x03A160A0 LDR X8, [X8 + 0xC0]
	0x03A160A4 LDR X2, [X8 + 0x70]
	0x03A160A8 MOV X1, X22
	0x03A160AC BL 0x301BF90
	0x03A160B0 B 0x3A1600C
	0x03A160B4 LDR V1, [X22 + 0xD0]
	0x03A160B8 LDP S0, S10, [X22 + 0xD4]
	0x03A160BC MOV W23, W31
	0x03A160C0 STP S0, S1, [X31 + 0x10]
	0x03A160C4 LDR X0, [X29]
	0x03A160C8 LDR W8, [X0 + 0xE0]
	0x03A160CC CBNZ W8, 0x3A160D4
	0x03A160D0 BL 0x1C16DFC
	0x03A160D4 MOV X0, X21
	0x03A160D8 MOV X1, X31
	0x03A160DC BL 0x3C51E30
	0x03A160E0 CMP W23, W0
	0x03A160E4 B.GE 0x3A16178
	0x03A160E8 LDR X0, [X29]
	0x03A160EC LDR W8, [X0 + 0xE0]
	0x03A160F0 CBNZ W8, 0x3A160F8
	0x03A160F4 BL 0x1C16DFC
	0x03A160F8 MOV X0, X21
	0x03A160FC MOV W1, W23
	0x03A16100 MOV X2, X31
	0x03A16104 BL 0x3C51FF8
	0x03A16108 MOV V13.16B, V0.16B
	0x03A1610C MOV V14.16B, V1.16B
	0x03A16110 MOV V15.16B, V2.16B
	0x03A16114 MOV V11.16B, V3.16B
	0x03A16118 LDP S1, S0, [X31 + 0x10]
	0x03A1611C MOV V2.16B, V10.16B
	0x03A16120 MOV X0, X31
	0x03A16124 BL 0x3887BE4
	0x03A16128 MOV V8.16B, V0.16B
	0x03A1612C MOV V9.16B, V1.16B
	0x03A16130 MOV V12.16B, V2.16B
	0x03A16134 MOV V0.16B, V13.16B
	0x03A16138 MOV V1.16B, V14.16B
	0x03A1613C MOV V2.16B, V15.16B
	0x03A16140 MOV X0, X31
	0x03A16144 BL 0x3887BE4
	0x03A16148 LDR V3, [X22 + 0xDC]
	0x03A1614C FMUL S0, S8, S0
	0x03A16150 FMUL S1, S9, S1
	0x03A16154 FADD S0, S0, S1
	0x03A16158 FMUL S1, S12, S2
	0x03A1615C FADD S0, S1, S0
	0x03A16160 FADD S0, S11, S0
	0x03A16164 FNEG S1, S3
	0x03A16168 FCMP S0, S1
	0x03A1616C ADD W23, W23, 0x1
	0x03A16170 B.PL 0x3A160C4
	0x03A16174 B 0x3A1600C
	0x03A16178 LDR X0, [X19 + 0x10]
	0x03A1617C CBZ X0, 0x3A16620
	0x03A16180 ADRP X9, 0x73E000
	0x03A16184 LDR W10, [X0 + 0x1C]
	0x03A16188 LDR X8, [X0 + 0x10]
	0x03A1618C LDR X9, [X9 + 0x538]
	0x03A16190 ADD W10, W10, 0x1
	0x03A16194 LDR X9, [X9]
	0x03A16198 STR W10, [X0 + 0x1C]
	0x03A1619C CBZ X8, 0x3A16624
	0x03A161A0 LDRSW X10, [X0 + 0x18]
	0x03A161A4 LDR W11, [X8 + 0x18]
	0x03A161A8 CMP W10, W11
	0x03A161AC B.CS 0x3A161C4
	0x03A161B0 ADD W9, W10, 0x1
	0x03A161B4 ADD X8, X8, X10, 0x3, LSL
	0x03A161B8 STR W9, [X0 + 0x18]
	0x03A161BC STR X22, [X8 + 0x20]
	0x03A161C0 B 0x3A1600C
	0x03A161C4 LDR X8, [X9 + 0x20]
	0x03A161C8 LDR X8, [X8 + 0xC0]
	0x03A161CC LDR X2, [X8 + 0x70]
	0x03A161D0 MOV X1, X22
	0x03A161D4 BL 0x301BF90
	0x03A161D8 B 0x3A1600C
	0x03A161DC LDR X1, [X28]
	0x03A161E0 ADD X0, X31, 0x70
	0x03A161E4 BL 0x2BC434C
	0x03A161E8 ADRP X21, 0x73E000
	0x03A161EC LDR X21, [X21 + 0x5E8]
	0x03A161F0 LDR X20, [X19 + 0x10]
	0x03A161F4 LDR X0, [X21]
	0x03A161F8 LDR W8, [X0 + 0xE0]
	0x03A161FC CBNZ W8, 0x3A16208
	0x03A16200 BL 0x1C16DFC
	0x03A16204 LDR X0, [X21]
	0x03A16208 LDR X8, [X0 + 0xB8]
	0x03A1620C LDR X21, [X8 + 0x8]
	0x03A16210 CBNZ X21, 0x3A16278
	0x03A16214 LDR W8, [X0 + 0xE0]
	0x03A16218 CBZ W8, 0x3A16228
	0x03A1621C ADRP X23, 0x73E000
	0x03A16220 LDR X23, [X23 + 0x5E8]
	0x03A16224 B 0x3A16238
	0x03A16228 BL 0x1C16DFC
	0x03A1622C ADRP X23, 0x73E000
	0x03A16230 LDR X23, [X23 + 0x5E8]
	0x03A16234 LDR X0, [X23]
	0x03A16238 ADRP X9, 0x73E000

ISIL:
	001 Subtract X31, X31, 304
	002 Move [X31+144], D15
	003 Move [X31+152], D14
	004 Move [X31+160], D13
	005 Move [X31+168], D12
	006 Move [X31+176], D11
	007 Move [X31+184], D10
	008 Move [X31+192], D9
	009 Move [X31+200], D8
	010 Move [X31+208], X29
	011 Move [X31+216], X30
	012 Move [X31+224], X28
	013 Move [X31+232], X27
	014 Move [X31+240], X26
	015 Move [X31+248], X25
	016 Move [X31+256], X24
	017 Move [X31+264], X23
	018 Move [X31+272], X22
	019 Move [X31+280], X21
	020 Move [X31+288], X20
	021 Move [X31+296], X19
	022 Move X19, 0x9CD000
	023 Move W9, [X19+4047]
	024 Move W24, W1
	025 Move V8, V2
	026 Move X21, X0
	027 Move [X31+92], S1
	028 Move [X31+100], S0
	029 Move [X31+40], X8
	030 Move TEMP, X9
	031 And TEMP, TEMP, 1
	032 Compare TEMP, 1
	033 JumpIfEqual {66}
	034 Move X0, 0x740000
	035 Move X0, [X0+1200]
	036 Call 0x1C17CF4
	037 Move X0, 0x740000
	038 Move X0, [X0+1208]
	039 Call 0x1C17CF4
	040 Move X0, 0x740000
	041 Move X0, [X0+1216]
	042 Call 0x1C17CF4
	043 Move X0, 0x740000
	044 Move X0, [X0+1224]
	045 Call 0x1C17CF4
	046 Move X0, 0x740000
	047 Move X0, [X0+1232]
	048 Call 0x1C17CF4
	049 Move X0, 0x740000
	050 Move X0, [X0+1240]
	051 Call 0x1C17CF4
	052 Move X0, 0x740000
	053 Move X0, [X0+1312]
	054 Call 0x1C17CF4
	055 Move X0, 0x740000
	056 Move X0, [X0+1248]
	057 Call 0x1C17CF4
	058 Move X0, 0x70F000
	059 Move X0, [X0+2256]
	060 Call 0x1C17CF4
	061 Move X0, 0x70A000
	062 Move X0, [X0+2104]
	063 Call 0x1C17CF4
	064 Move W8, 1
	065 Move [X19+4047], W8
	066 Move X9, -49455104
	067 Move X8, 0x740000
	068 Move X19, 0x740000
	069 Move V0, [X9+260]
	070 Move X8, [X8+1248]
	071 Move X19, [X19+1312]
	072 NotImplemented "Instruction CMP not yet implemented."
	073 Multiply S0, S8, S0
	074 Move [X31+128], X31
	075 Move [X31+136], X31
	076 Move [X31+112], X31
	077 Move [X31+120], X31
	078 NotImplemented "Instruction CMP not yet implemented."
	079 Move X9, -49455104
	080 Move V1, [X9+384]
	081 Move X9, -49455104
	082 Move V1, [X9+364]
	083 Move V2, [X31+96]
	084 Multiply S2, S2, S1
	085 Move [X31+96], S2
	086 Move X9, -49455104
	087 Move V1, [X9+428]
	088 Move W24, 4
	089 Add S0, S0, S1
	090 Move [X31+88], S0
	091 Move X4, [X8]
	092 Move W1, 1
	093 NotImplemented "Instruction BFM not yet implemented."
	094 Add X0, X31, 128
	095 Move W2, 2
	096 Move W3, 1
	097 Add W20, W24, W24
	098 Move [X31+32], W1
	099 Call NativeArray`1<LightMeshVertex>..ctor, X0, X1, X2, X3
	100 Move X4, [X19]
	101 Add X0, X31, 112
	102 Move W2, 2
	103 Move W3, 1
	104 Move W1, W20
	105 Move [X31+36], W20
	106 Call NativeArray`1<UInt16>..ctor, X0, X1, X2, X3
	107 Compare X21, 0
	108 JumpIfEqual {455}
	109 Move X19, 0x70A000
	110 Move X19, [X19+2104]
	111 Move W28, W24
	112 ShiftRight W28, 31
	113 And W28, W28, 0x3FFFFFFF
	114 Move X0, X21
	115 And W20, W28, 0xFFFE
	116 Move [X31+24], X21
	117 Call Light2D.get_lightMesh, X0
	118 Move X8, [X19]
	119 Move [X31+16], X0
	120 Move X0, X31
	121 Move X8, [X8+184]
	122 Move S0, [X8]
	123 Move S1, [X8+4]
	124 Move V2, [X8+8]
	125 Call float3.op_Implicit, X0
	126 Move W11, W24
	127 NotImplemented "Instruction SCVTF not yet implemented."
	128 Move [X31+80], X11
	129 Move X24, 0x6DF000
	130 Move X8, [X31+128]
	131 Move X24, [X24+1448]
	132 Move V5, [X31+96]
	133 Move S8, W31
	134 Move W12, 36
	135 Move X9, -49446912
	136 Multiply S16, S5, S8
	137 Move V5, [X31+92]
	138 NotImplemented "Instruction NOP not yet implemented."
	139 NotImplemented "Instruction UMADDL not yet implemented."
	140 Move X10, -49455104
	141 Move V7, [X9+187]
	142 Multiply S5, S5, S8
	143 Move [X8], S0
	144 Move [X8+8], S1
	145 Add S0, S5, S16
	146 Move V4, [X10+108]
	147 Move [X31+56], S0
	148 Move [X31+64], S16
	149 Move V11, [X31+60]
	150 Move TEMP, 0x80800000
	151 Not TEMP
	152 Move W9, TEMP
	153 Move TEMP, 0x800000
	154 Not TEMP
	155 Move W11, TEMP
	156 Move S14, W9
	157 Move [X8+8], S2
	158 Move [X8+12], V7
	159 Move [X8+28], X31
	160 Move W8, S0
	161 Move X21, X31
	162 Move W29, W31
	163 Move X26, X31
	164 Move S6, W11
	165 Move W23, 0x7F800000
	166 Move V15, V14
	167 And W25, W8, 0x7FFFFFFF
	168 NotImplemented "Instruction FDIV not yet implemented."
	169 Move S13, W31
	170 Move W19, 36
	171 Move [X31+104], S6
	172 Move [X31+112], S6
	173 Move [X31+4], V7
	174 Move [X31+52], S0
	175 Move X8, 0x9CD000
	176 Move W8, [X8+1380]
	177 Compare W8, 0
	178 JumpIfNotEqual {184}
	179 Move X0, X24
	180 Call 0x1C17CF4
	181 Move W8, 1
	182 Move X9, 0x9CD000
	183 Move [X9+1380], W8
	184 Move X0, [X24]
	185 Move [X31+100], S8
	186 Move W8, [X0+224]
	187 Compare W8, 0
	188 JumpIfNotEqual {190}
	189 Call 0x1C17DFC
	190 Move V1, [X31+52]
	191 Add X26, X26, 1
	192 NotImplemented "Instruction SCVTF not yet implemented."
	193 Multiply S0, S1, S0
	194 Move V1, [X31+88]
	195 Add S0, S1, S0
	196 NotImplemented "Instruction FCVT not yet implemented."
	197 Move V0, V8
	198 Call 0x3EB2BF0
	199 Move X8, 0x9CD000
	200 Move W8, [X8+1386]
	201 Move V9, V0
	202 Compare W8, 0
	203 JumpIfNotEqual {209}
	204 Move X0, X24
	205 Call 0x1C17CF4
	206 Move W8, 1
	207 Move X9, 0x9CD000
	208 Move [X9+1386], W8
	209 Move X0, [X24]
	210 Move W8, [X0+224]
	211 Compare W8, 0
	212 JumpIfNotEqual {214}
	213 Call 0x1C17DFC
	214 NotImplemented "Instruction CMP not yet implemented."
	215 Move V0, V8
	216 NotImplemented "Instruction INVALID not yet implemented."
	217 NotImplemented "Instruction CSET not yet implemented."
	218 Call 0x3EB2C30
	219 NotImplemented "Instruction INVALID not yet implemented."
	220 Move V0, [X31+96]
	221 Add X22, X21, 2
	222 NotImplemented "Instruction SDIV not yet implemented."
	223 Move V2, V11
	224 Multiply S8, S0, S10
	225 Multiply S9, S0, S12
	226 Move V0, V8
	227 Move V1, V9
	228 Move X0, X31
	229 NotImplemented "Instruction MSUB not yet implemented."
	230 Call float3.op_Implicit, X0
	231 Move X8, [X31+128]
	232 Move X0, X31
	233 NotImplemented "Instruction SMADDL not yet implemented."
	234 Move [X8], S0
	235 Move [X8+8], S1
	236 Move [X8+8], S2
	237 Move [X8+16], S10
	238 Move V0, V8
	239 Move V1, V9
	240 Move V2, V11
	241 Move [X8+16], S12
	242 Move [X8+20], X31
	243 Move [X8+28], X31
	244 Call float3.op_Implicit, X0
	245 Move X8, [X31+128]
	246 Add W9, W27, 1
	247 Or W10, W21, 1
	248 Add W11, W29, 1
	249 NotImplemented "Instruction SMADDL not yet implemented."
	250 Move [X8], S0
	251 Move [X8+8], S1
	252 Move V0, [X31+4]
	253 Move [X8+8], S2
	254 Move [X8+28], X31
	255 Move V1, [X31+92]
	256 Move [X8+12], V0
	257 Move X8, [X31+112]
	258 Move V3, [X31+56]
	259 Multiply S0, S10, S1
	260 Add S0, S8, S0
	261 NotImplemented "Instruction STRH not yet implemented."
	262 NotImplemented "Instruction STRH not yet implemented."
	263 Add W11, W29, 2
	264 NotImplemented "Instruction STRH not yet implemented."
	265 Add W11, W29, 3
	266 Move W12, S0
	267 NotImplemented "Instruction STRH not yet implemented."
	268 Add W11, W29, 4
	269 And W12, W12, 0x7FFFFFFF
	270 NotImplemented "Instruction STRH not yet implemented."
	271 Add W11, W29, 5
	272 NotImplemented "Instruction CMP not yet implemented."
	273 Add W12, W29, 6
	274 NotImplemented "Instruction STRH not yet implemented."
	275 NotImplemented "Instruction STRH not yet implemented."
	276 NotImplemented "Instruction CSET not yet implemented."
	277 NotImplemented "Instruction FCMP not yet implemented."
	278 Multiply S1, S12, S1
	279 NotImplemented "Instruction CSET not yet implemented."
	280 Add S1, S9, S1
	281 Or W12, W12, W9
	282 NotImplemented "Instruction CMP not yet implemented."
	283 Move W12, S1
	284 And W12, W12, 0x7FFFFFFF
	285 Add W11, W29, 7
	286 NotImplemented "Instruction FCSEL not yet implemented."
	287 NotImplemented "Instruction CMP not yet implemented."
	288 Add W12, W29, 8
	289 NotImplemented "Instruction STRH not yet implemented."
	290 NotImplemented "Instruction CSET not yet implemented."
	291 NotImplemented "Instruction FCMP not yet implemented."
	292 Move V8, [X31+100]
	293 NotImplemented "Instruction STRH not yet implemented."
	294 NotImplemented "Instruction CSET not yet implemented."
	295 Or W8, W8, W11
	296 NotImplemented "Instruction CMP not yet implemented."
	297 NotImplemented "Instruction FCSEL not yet implemented."
	298 NotImplemented "Instruction FCMP not yet implemented."
	299 Move V2, [X31+108]
	300 NotImplemented "Instruction CSET not yet implemented."
	301 Or W8, W20, W8
	302 NotImplemented "Instruction CMP not yet implemented."
	303 NotImplemented "Instruction FCSEL not yet implemented."
	304 NotImplemented "Instruction FCMP not yet implemented."
	305 NotImplemented "Instruction CSET not yet implemented."
	306 Or W8, W8, W9
	307 NotImplemented "Instruction CMP not yet implemented."
	308 NotImplemented "Instruction FCSEL not yet implemented."
	309 Move V0, [X31+104]
	310 Add W29, W29, 9
	311 Move X21, X22
	312 NotImplemented "Instruction FCMP not yet implemented."
	313 NotImplemented "Instruction CSET not yet implemented."
	314 Or W8, W8, W11
	315 NotImplemented "Instruction CMP not yet implemented."
	316 NotImplemented "Instruction FCSEL not yet implemented."
	317 NotImplemented "Instruction FCMP not yet implemented."
	318 NotImplemented "Instruction CSET not yet implemented."
	319 Or W8, W20, W8
	320 NotImplemented "Instruction CMP not yet implemented."
	321 Move X8, [X31+80]
	322 NotImplemented "Instruction FCSEL not yet implemented."
	323 Move [X31+104], S0
	324 Move [X31+112], S2
	325 NotImplemented "Instruction CMP not yet implemented."
	326 Move X20, 0x73F000
	327 Move X20, [X20+1208]
	328 Move X0, [X20]
	329 Move W8, [X0+224]
	330 Compare W8, 0
	331 JumpIfNotEqual {333}
	332 Call 0x1C17DFC
	333 Move X21, [X31+16]
	334 Move X19, [X31+24]
	335 Compare X21, 0
	336 JumpIfEqual {455}
	337 Move X8, [X20]
	338 Move W20, [X31+32]
	339 Move X0, X21
	340 Move X3, X31
	341 Move X8, [X8+184]
	342 Move W1, W20
	343 Move X2, [X8]
	344 Call Mesh.SetVertexBufferParams, X0, X1, X2
	345 Move X8, 0x73F000
	346 Move X1, [X31+128]
	347 Move X2, [X31+136]
	348 Move X8, [X8+1224]
	349 Move X0, X21
	350 Move W3, W31
	351 Move W4, W31
	352 Move X8, [X8]
	353 Move W5, W20
	354 Move W6, W31
	355 Move W7, W31
	356 Move [X31], X8
	357 Call Mesh.SetVertexBufferData, X0, X1, X2, X3, X4, X5, X6
	358 Move X8, 0x73F000
	359 Move X1, [X31+112]
	360 Move X2, [X31+120]
	361 Move X8, [X8+1216]
	362 Move X0, X21
	363 Move W3, W31
	364 Move W4, W31
	365 Move X7, [X8]
	366 Move W5, W31
	367 Move W6, W31
	368 Call 0x221B138, X0, X1, X2, X3, X4, X5
	369 Move X8, 0x73F000
	370 Move X8, [X8+1200]
	371 Move W1, W20
	372 Move X0, [X8]
	373 Call 0x1C17D6C
	374 Move [X19+152], X0
	375 Move X8, 0x73F000
	376 Move X2, X0
	377 Move X0, [X31+128]
	378 Move X1, [X31+136]
	379 Move X8, [X8+1240]
	380 Move W3, W20
	381 Move X4, [X8]
	382 Call NativeArray`1<LightMeshVertex>.Copy, X0, X1, X2
	383 Move X8, 0x70E000
	384 Move X8, [X8+2256]
	385 Move W20, [X31+36]
	386 Move X0, [X8]
	387 Move W1, W20
	388 Call 0x1C17D6C
	389 Move [X19+160], X0
	390 Move X8, 0x73F000
	391 Move X2, X0
	392 Move X0, [X31+112]
	393 Move X1, [X31+120]
	394 Move X8, [X8+1232]
	395 Move W3, W20
	396 Move X4, [X8]
	397 Call NativeArray`1<UInt16>.Copy, X0, X1, X2
	398 Move V0, V14
	399 Move V1, V15
	400 Move V2, V8
	401 Move X0, X31
	402 Call float3.op_Implicit, X0
	403 NotImplemented "Instruction MOVI not yet implemented."
	404 Move V0.S[1], V1.S[0]
	405 Move S4, W31
	406 NotImplemented "Instruction MOVI not yet implemented."
	407 Subtract V3, V3, V0
	408 Move S9, 0.5
	409 Subtract S1, S4, S2
	410 NotImplemented "Instruction INVALID not yet implemented."
	411 Multiply S10, S1, S9
	412 Add V12, V0, V11
	413 Move S1, [X31+104]
	414 Move S0, [X31+108]
	415 Add S14, S2, S10
	416 Move V2, V13
	417 Move X0, X31
	418 Call float3.op_Implicit, X0
	419 Subtract V3, V12, V11
	420 Subtract S4, S14, S10
	421 Move V0.S[1], V1.S[0]
	422 Subtract S1, S2, S4
	423 Subtract V0, V0, V3
	424 Move X8, [X31+40]
	425 Multiply S1, S1, S9
	426 NotImplemented "Instruction INVALID not yet implemented."
	427 Move X20, [X31+288]
	428 Move X19, [X31+296]
	429 Move X22, [X31+272]
	430 Move X21, [X31+280]
	431 Move X24, [X31+256]
	432 Move X23, [X31+264]
	433 Move X26, [X31+240]
	434 Move X25, [X31+248]
	435 Move X28, [X31+224]
	436 Move X27, [X31+232]
	437 Move X29, [X31+208]
	438 Move X30, [X31+216]
	439 Move D9, [X31+192]
	440 Move D8, [X31+200]
	441 Move D11, [X31+176]
	442 Move D10, [X31+184]
	443 Move D13, [X31+160]
	444 Move D12, [X31+168]
	445 Move D15, [X31+144]
	446 Move D14, [X31+152]
	447 Add S2, S4, S1
	448 Add V3, V3, V0
	449 Move [X8+8], S2
	450 Move [X8+12], D0
	451 Move [X8], D3
	452 Move [X8+20], S1
	453 Add X31, X31, 304
	454 Return X0
	455 Call 0x1C17F20

Method: UnityEngine.Bounds GenerateSpriteMesh(UnityEngine.Rendering.Universal.Light2D light, UnityEngine.Sprite sprite)

Disassembly:
	0x03A14A8C FABD S0, S9, S9
	0x03A14A90 FCMP S0, S8
	0x03A14A94 CSET W21, GT
	0x03A14A98 LDR X8, [X31 + 0xE0]
	0x03A14A9C LDR X9, [X31 + 0xF0]
	0x03A14AA0 LDR X0, [X20]
	0x03A14AA4 MOVZ W10, 0x24
	0x03A14AA8 LDRH W8, [X8, X22, LSL #1]
	0x03A14AAC MUL X11, X19, X10
	0x03A14AB0 LDR V9, [X9, X11, LSL]
	0x03A14AB4 MUL X8, X8, X10
	0x03A14AB8 LDR W10, [X0 + 0xE0]
	0x03A14ABC LDR V10, [X9, X8, LSL]
	0x03A14AC0 CBNZ W10, 0x3A14AC8
	0x03A14AC4 BL 0x1C16DFC
	0x03A14AC8 FABD S0, S9, S9
	0x03A14ACC FCMP S0, S8
	0x03A14AD0 B.LE 0x3A14AE0
	0x03A14AD4 MOV W8, W31
	0x03A14AD8 CBNZ W21, 0x3A14B28
	0x03A14ADC B 0x3A14B2C
	0x03A14AE0 LDR X8, [X31 + 0xE0]
	0x03A14AE4 LDR X9, [X31 + 0xF0]
	0x03A14AE8 LDR X0, [X20]
	0x03A14AEC MOVZ W10, 0x24
	0x03A14AF0 LDRH W8, [X8, X22, LSL #1]
	0x03A14AF4 NOP
	0x03A14AF8 MADD X11, X19, X10, X9
	0x03A14AFC LDR V9, [X11 + 0x4]
	0x03A14B00 NOP
	0x03A14B04 MADD X8, X8, X10, X9
	0x03A14B08 LDR W9, [X0 + 0xE0]
	0x03A14B0C LDR V10, [X8 + 0x4]
	0x03A14B10 CBNZ W9, 0x3A14B18
	0x03A14B14 BL 0x1C16DFC
	0x03A14B18 FABD S0, S9, S9
	0x03A14B1C FCMP S0, S8
	0x03A14B20 CSET W8, LE
	0x03A14B24 CBZ W21, 0x3A14B2C
	0x03A14B28 CBZ W8, 0x3A14B44
	0x03A14B2C LDR W8, [X31 + 0x138]
	0x03A14B30 LDR X10, [X31 + 0x50]
	0x03A14B34 LDR W9, [X31 + 0x1FC]
	0x03A14B38 ADD W8, W8, W10
	0x03A14B3C ADD W8, W8, W9
	0x03A14B40 SUB W19, W8, 0x1
	0x03A14B44 LDR X8, [X31 + 0xE0]
	0x03A14B48 ADD W9, W29, 0x5
	0x03A14B4C STRH W19, [X8, W9, SXTW]
	0x03A14B50 LDP X0, X1, [X31 + 0xF0]
	0x03A14B54 LDP X3, X4, [X31 + 0xE0]
	0x03A14B58 LDR X6, [X31 + 0x58]
	0x03A14B5C ADD W5, W29, 0x6
	0x03A14B60 MOV W2, W25
	0x03A14B64 BL 0x3A17BC0
	0x03A14B68 LDP X1, X0, [X31 + 0x40]
	0x03A14B6C MOV X2, X31
	0x03A14B70 BL 0x3C308EC
	0x03A14B74 LDR X0, [X31 + 0x58]
	0x03A14B78 CBZ X0, 0x3A14BE0
	0x03A14B7C BL 0x3A131A8
	0x03A14B80 LDR X19, [X31 + 0x38]
	0x03A14B84 CBZ X0, 0x3A14BE0
	0x03A14B88 ADD X8, X31, 0x1C0
	0x03A14B8C MOV W1, W31
	0x03A14B90 MOV X2, X31
	0x03A14B94 BL 0x3C17698
	0x03A14B98 LDP V1, V0, [X31 + 0x1C0]
	0x03A14B9C LDR V2, [X31 + 0x1E]
	0x03A14BA0 STP V1, V0, [X31 + 0xB0]
	0x03A14BA4 LDR X8, [X31 + 0xC0]
	0x03A14BA8 STR V2, [X31 + 0xD]
	0x03A14BAC STR V1, [X19]
	0x03A14BB0 STR X8, [X19 + 0x10]
	0x03A14BB4 ADD X31, X31, 0x1F0
	0x03A14BB8 LDP X20, X19, [X31 + 0x70]
	0x03A14BBC LDP X22, X21, [X31 + 0x60]
	0x03A14BC0 LDP X24, X23, [X31 + 0x50]
	0x03A14BC4 LDP X26, X25, [X31 + 0x40]
	0x03A14BC8 LDP X28, X27, [X31 + 0x30]
	0x03A14BCC LDP X29, X30, [X31 + 0x20]
	0x03A14BD0 LDP D9, D8, [X31 + 0x10]
	0x03A14BD4 LDR V10, [X31], #0x80
	0x03A14BD8 RET
	0x03A14BDC BL 0x1C16F28
	0x03A14BE0 BL 0x1C16F20
	0x03A14BE4 SUB X31, X31, 0x130
	0x03A14BE8 STP D15, D14, [X31 + 0x90]
	0x03A14BEC STP D13, D12, [X31 + 0xA0]
	0x03A14BF0 STP D11, D10, [X31 + 0xB0]
	0x03A14BF4 STP D9, D8, [X31 + 0xC0]
	0x03A14BF8 STP X29, X30, [X31 + 0xD0]
	0x03A14BFC STP X28, X27, [X31 + 0xE0]
	0x03A14C00 STP X26, X25, [X31 + 0xF0]
	0x03A14C04 STP X24, X23, [X31 + 0x100]
	0x03A14C08 STP X22, X21, [X31 + 0x110]
	0x03A14C0C STP X20, X19, [X31 + 0x120]
	0x03A14C10 ADRP X19, 0x9CD000
	0x03A14C14 LDRB W9, [X19 + 0xFCF]
	0x03A14C18 MOV W24, W1
	0x03A14C1C MOV V8.16B, V2.16B
	0x03A14C20 MOV X21, X0
	0x03A14C24 STP S1, S0, [X31 + 0x5C]
	0x03A14C28 STR X8, [X31 + 0x28]
	0x03A14C2C TBNZ X9, 0x0, 0x3A14CB0
	0x03A14C30 ADRP X0, 0x740000
	0x03A14C34 LDR X0, [X0 + 0x4B0]
	0x03A14C38 BL 0x1C16CF4
	0x03A14C3C ADRP X0, 0x740000
	0x03A14C40 LDR X0, [X0 + 0x4B8]
	0x03A14C44 BL 0x1C16CF4
	0x03A14C48 ADRP X0, 0x740000
	0x03A14C4C LDR X0, [X0 + 0x4C0]
	0x03A14C50 BL 0x1C16CF4
	0x03A14C54 ADRP X0, 0x740000
	0x03A14C58 LDR X0, [X0 + 0x4C8]
	0x03A14C5C BL 0x1C16CF4
	0x03A14C60 ADRP X0, 0x740000
	0x03A14C64 LDR X0, [X0 + 0x4D0]
	0x03A14C68 BL 0x1C16CF4
	0x03A14C6C ADRP X0, 0x740000
	0x03A14C70 LDR X0, [X0 + 0x4D8]
	0x03A14C74 BL 0x1C16CF4
	0x03A14C78 ADRP X0, 0x740000
	0x03A14C7C LDR X0, [X0 + 0x520]
	0x03A14C80 BL 0x1C16CF4
	0x03A14C84 ADRP X0, 0x740000
	0x03A14C88 LDR X0, [X0 + 0x4E0]
	0x03A14C8C BL 0x1C16CF4
	0x03A14C90 ADRP X0, 0x70F000
	0x03A14C94 LDR X0, [X0 + 0x8D0]
	0x03A14C98 BL 0x1C16CF4
	0x03A14C9C ADRP X0, 0x70A000
	0x03A14CA0 LDR X0, [X0 + 0x838]
	0x03A14CA4 BL 0x1C16CF4
	0x03A14CA8 MOVZ W8, 0x1
	0x03A14CAC STRB W8, [X19 + 0xFCF]
	0x03A14CB0 ADRP X9, 0xFFFFFFFFFD0D6000
	0x03A14CB4 ADRP X8, 0x740000
	0x03A14CB8 ADRP X19, 0x740000
	0x03A14CBC LDR V0, [X9 + 0x104]
	0x03A14CC0 LDR X8, [X8 + 0x4E0]
	0x03A14CC4 LDR X19, [X19 + 0x520]
	0x03A14CC8 CMP W24, 0x2
	0x03A14CCC FMUL S0, S8, S0
	0x03A14CD0 STP X31, X31, [X31 + 0x80]
	0x03A14CD4 STP X31, X31, [X31 + 0x70]
	0x03A14CD8 B.LE 0x3A14CF0
	0x03A14CDC CMP W24, 0x4
	0x03A14CE0 B.EQ 0x3A14D04
	0x03A14CE4 ADRP X9, 0xFFFFFFFFFD0D6000
	0x03A14CE8 LDR V1, [X9 + 0x180]
	0x03A14CEC B 0x3A14D10
	0x03A14CF0 ADRP X9, 0xFFFFFFFFFD0D6000
	0x03A14CF4 LDR V1, [X9 + 0x16C]
	0x03A14CF8 LDR V2, [X31 + 0x60]
	0x03A14CFC FMUL S2, S2, S1
	0x03A14D00 STR S2, [X31 + 0x60]
	0x03A14D04 ADRP X9, 0xFFFFFFFFFD0D6000
	0x03A14D08 LDR V1, [X9 + 0x1AC]
	0x03A14D0C MOVZ W24, 0x4
	0x03A14D10 FADD S0, S0, S1
	0x03A14D14 STR S0, [X31 + 0x58]
	0x03A14D18 LDR X4, [X8]
	0x03A14D1C MOVZ W1, 0x1
	0x03A14D20 BFM W1, W24, 0x1F, 0x1E
	0x03A14D24 ADD X0, X31, 0x80
	0x03A14D28 MOVZ W2, 0x2
	0x03A14D2C MOVZ W3, 0x1
	0x03A14D30 ADD W20, W24, W24, 0x3, LSL
	0x03A14D34 STR W1, [X31 + 0x20]
	0x03A14D38 BL 0x23FF924
	0x03A14D3C LDR X4, [X19]
	0x03A14D40 ADD X0, X31, 0x70
	0x03A14D44 MOVZ W2, 0x2
	0x03A14D48 MOVZ W3, 0x1
	0x03A14D4C MOV W1, W20
	0x03A14D50 STR W20, [X31 + 0x24]
	0x03A14D54 BL 0x23EB8B4
	0x03A14D58 CBZ X21, 0x3A15238
	0x03A14D5C ADRP X19, 0x70A000
	0x03A14D60 LDR X19, [X19 + 0x838]
	0x03A14D64 UBFM W28, W24, 0x1F, 0x1E
	0x03A14D68 MOV X0, X21
	0x03A14D6C AND W20, W28, 0xFFFE
	0x03A14D70 STR X21, [X31 + 0x18]
	0x03A14D74 BL 0x3A131A8
	0x03A14D78 LDR X8, [X19]
	0x03A14D7C STR X0, [X31 + 0x10]
	0x03A14D80 MOV X0, X31
	0x03A14D84 LDR X8, [X8 + 0xB8]
	0x03A14D88 LDP S0, S1, [X8]
	0x03A14D8C LDR V2, [X8 + 0x8]
	0x03A14D90 BL 0x3887BE0
	0x03A14D94 MOV W11, W24
	0x03A14D98 SCVTF S3, W24
	0x03A14D9C STR X11, [X31 + 0x50]
	0x03A14DA0 ADRP X24, 0x6DF000
	0x03A14DA4 LDR X8, [X31 + 0x80]
	0x03A14DA8 LDR X24, [X24 + 0x5A8]
	0x03A14DAC LDR V5, [X31 + 0x60]
	0x03A14DB0 FMOV S8, W31
	0x03A14DB4 MOVZ W12, 0x24
	0x03A14DB8 ADRP X9, 0xFFFFFFFFFD0D8000
	0x03A14DBC FMUL S16, S5, S8
	0x03A14DC0 LDR V5, [X31 + 0x5C]
	0x03A14DC4 NOP
	0x03A14DC8 UMADDL X8, X20, X12, X8
	0x03A14DCC ADRP X10, 0xFFFFFFFFFD0D6000
	0x03A14DD0 LDR V7, [X9 + 0xBB]
	0x03A14DD4 FMUL S5, S5, S8
	0x03A14DD8 STP S0, S1, [X8]
	0x03A14DDC FADD S0, S5, S16
	0x03A14DE0 LDR V4, [X10 + 0x6C]
	0x03A14DE4 STP S0, S16, [X31 + 0x38]
	0x03A14DE8 LDR V11, [X31 + 0x3C]
	0x03A14DEC MOVN W9, 0x80800000
	0x03A14DF0 MOVN W11, 0x800000
	0x03A14DF4 FMOV S14, W9
	0x03A14DF8 STR S2, [X8 + 0x8]
	0x03A14DFC STUR V7, [X8 + 0xC]
	0x03A14E00 STUR X31, [X8 + 0x1C]
	0x03A14E04 FMOV W8, S0
	0x03A14E08 MOV X21, X31
	0x03A14E0C MOV W29, W31
	0x03A14E10 MOV X26, X31
	0x03A14E14 FMOV S6, W11
	0x03A14E18 MOVZ W23, 0x7F800000
	0x03A14E1C MOV V15.16B, V14.16B
	0x03A14E20 AND W25, W8, 0x7FFFFFFF
	0x03A14E24 FDIV S0, S4, S3
	0x03A14E28 FMOV S13, W31
	0x03A14E2C MOVZ W19, 0x24
	0x03A14E30 STP S6, S6, [X31 + 0x68]
	0x03A14E34 STR V7, [X31 + 0x4]
	0x03A14E38 STR S0, [X31 + 0x34]
	0x03A14E3C ADRP X8, 0x9CD000
	0x03A14E40 LDRB W8, [X8 + 0x564]
	0x03A14E44 CBNZ W8, 0x3A14E5C
	0x03A14E48 MOV X0, X24
	0x03A14E4C BL 0x1C16CF4
	0x03A14E50 MOVZ W8, 0x1
	0x03A14E54 ADRP X9, 0x9CD000
	0x03A14E58 STRB W8, [X9 + 0x564]
	0x03A14E5C LDR X0, [X24]
	0x03A14E60 STR S8, [X31 + 0x64]
	0x03A14E64 LDR W8, [X0 + 0xE0]
	0x03A14E68 CBNZ W8, 0x3A14E70
	0x03A14E6C BL 0x1C16DFC
	0x03A14E70 LDR V1, [X31 + 0x34]
	0x03A14E74 ADD X26, X26, 0x1
	0x03A14E78 SCVTF S0, W26
	0x03A14E7C FMUL S0, S1, S0
	0x03A14E80 LDR V1, [X31 + 0x58]
	0x03A14E84 FADD S0, S1, S0
	0x03A14E88 FCVT S8, S0
	0x03A14E8C MOV V0.16B, V8.16B
	0x03A14E90 BL 0x3EB1BF0
	0x03A14E94 ADRP X8, 0x9CD000
	0x03A14E98 LDRB W8, [X8 + 0x56A]
	0x03A14E9C MOV V9.16B, V0.16B
	0x03A14EA0 CBNZ W8, 0x3A14EB8
	0x03A14EA4 MOV X0, X24
	0x03A14EA8 BL 0x1C16CF4
	0x03A14EAC MOVZ W8, 0x1
	0x03A14EB0 ADRP X9, 0x9CD000
	0x03A14EB4 STRB W8, [X9 + 0x56A]
	0x03A14EB8 LDR X0, [X24]
	0x03A14EBC LDR W8, [X0 + 0xE0]
	0x03A14EC0 CBNZ W8, 0x3A14EC8
	0x03A14EC4 BL 0x1C16DFC
	0x03A14EC8 CMP W25, W23
	0x03A14ECC MOV V0.16B, V8.16B
	0x00000000 INVALID

ISIL:
	001 Subtract X31, X31, 272
	002 Move [X31+160], D9
	003 Move [X31+168], D8
	004 Move [X31+176], X29
	005 Move [X31+184], X30
	006 Move [X31+192], X28
	007 Move [X31+200], X27
	008 Move [X31+208], X26
	009 Move [X31+216], X25
	010 Move [X31+224], X24
	011 Move [X31+232], X23
	012 Move [X31+240], X22
	013 Move [X31+248], X21
	014 Move [X31+256], X20
	015 Move [X31+264], X19
	016 Move X21, 0x9CE000
	017 Move W9, [X21+4048]
	018 Move X24, X1
	019 Move X20, X0
	020 Move X19, X8
	021 Move TEMP, X9
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {69}
	025 Move X0, 0x741000
	026 Move X0, [X0+1200]
	027 Call 0x1C17CF4
	028 Move X0, 0x741000
	029 Move X0, [X0+1208]
	030 Call 0x1C17CF4
	031 Move X0, 0x741000
	032 Move X0, [X0+1216]
	033 Call 0x1C17CF4
	034 Move X0, 0x741000
	035 Move X0, [X0+1224]
	036 Call 0x1C17CF4
	037 Move X0, 0x741000
	038 Move X0, [X0+1232]
	039 Call 0x1C17CF4
	040 Move X0, 0x741000
	041 Move X0, [X0+1240]
	042 Call 0x1C17CF4
	043 Move X0, 0x741000
	044 Move X0, [X0+1248]
	045 Call 0x1C17CF4
	046 Move X0, 0x741000
	047 Move X0, [X0+1256]
	048 Call 0x1C17CF4
	049 Move X0, 0x741000
	050 Move X0, [X0+1264]
	051 Call 0x1C17CF4
	052 Move X0, 0x741000
	053 Move X0, [X0+1272]
	054 Call 0x1C17CF4
	055 Move X0, 0x6E0000
	056 Move X0, [X0+1432]
	057 Call 0x1C17CF4
	058 Move X0, 0x741000
	059 Move X0, [X0+1280]
	060 Call 0x1C17CF4
	061 Move X0, 0x741000
	062 Move X0, [X0+1288]
	063 Call 0x1C17CF4
	064 Move X0, 0x710000
	065 Move X0, [X0+2256]
	066 Call 0x1C17CF4
	067 Move W8, 1
	068 Move [X21+4048], W8
	069 NotImplemented "Instruction MOVI not yet implemented."
	070 Move [X31+144], X31
	071 Move [X31+152], X31
	072 Move [X31+128], X31
	073 Move [X31+136], X31
	074 Move [X31+112], X31
	075 Move [X31+120], X31
	076 Move [X31+80], V0
	077 Move [X31+88], V0
	078 Move [X31+4], V0
	079 Compare X20, 0
	080 JumpIfEqual {311}
	081 Move X21, 0x6E0000
	082 Move X21, [X21+1432]
	083 Move X0, X20
	084 Call Light2D.get_lightMesh, X0
	085 Move X8, [X21]
	086 Move X21, X0
	087 Move W9, [X8+224]
	088 Compare W9, 0
	089 JumpIfNotEqual {92}
	090 Move X0, X8
	091 Call 0x1C17DFC
	092 Move X0, X24
	093 Move X1, X31
	094 Move X2, X31
	095 Call Object.op_Equality, X0, X1
	096 Move TEMP, X0
	097 And TEMP, TEMP, 1
	098 Compare TEMP, 1
	099 JumpIfNotEqual {128}
	100 Compare X21, 0
	101 JumpIfEqual {311}
	102 Move X0, X21
	103 Move X1, X31
	104 Call Mesh.Clear, X0
	105 Move X20, 0x9C5000
	106 Move W8, [X20+1923]
	107 Compare W8, 0
	108 JumpIfNotEqual {114}
	109 Move X0, 0x6E0000
	110 Move X0, [X0+1440]
	111 Call 0x1C17CF4
	112 Move W8, 1
	113 Move [X20+1923], W8
	114 Move X8, 0x6E0000
	115 Move X8, [X8+1440]
	116 NotImplemented "Instruction MOVI not yet implemented."
	117 Move S3, 0.5
	118 Move X8, [X8]
	119 Move X8, [X8+184]
	120 Move V0, [X8]
	121 Move V1, [X8+8]
	122 Move [X19], D0
	123 Move [X19+8], S1
	124 NotImplemented "Instruction INVALID not yet implemented."
	125 Multiply S1, S1, S3
	126 Move [X19+12], D0
	127 Move [X19+20], S1
	128 Compare X24, 0
	129 JumpIfEqual {311}
	130 Move X0, X24
	131 Move X1, X31
	132 Call Sprite.get_uv, X0
	133 Move X8, 0x741000
	134 Move X8, [X8+1288]
	135 Move X0, X24
	136 Move W1, W31
	137 Move X2, [X8]
	138 Call SpriteDataAccessExtensions.GetVertexAttribute, X0, X1
	139 Move X8, 0x741000
	140 Move X8, [X8+1280]
	141 Move [X31+144], X0
	142 Move [X31+152], X1
	143 Move W1, 4
	144 Move X0, X24
	145 Move X2, [X8]
	146 Call 0x225B22C, X0, X1
	147 Move [X31+128], X0
	148 Move [X31+136], X1
	149 Move X0, X24
	150 Move X1, X31
	151 Call SpriteDataAccessExtensions.GetIndices, X0
	152 Move X23, X0
	153 Move X22, X1
	154 Add X8, X31, 16
	155 Move X0, X24
	156 Move X1, X31
	157 Call Sprite.get_bounds, X0
	158 Add X8, X31, 16
	159 Move X0, X24
	160 Move X1, X31
	161 Call Sprite.get_bounds, X0
	162 Move X8, 0x741000
	163 Move X8, [X8+1248]
	164 Add X0, X31, 112
	165 Move W2, 2
	166 Move W3, 1
	167 Move X4, [X8]
	168 Move W1, W22
	169 Call NativeArray`1<LightMeshVertex>..ctor, X0, X1, X2, X3
	170 Move X25, 0x741000
	171 Move X25, [X25+1272]
	172 Add X0, X31, 144
	173 Move X1, [X25]
	174 Call NativeSlice`1<Vector3>.get_Length, X0
	175 NotImplemented "Instruction CMP not yet implemented."
	176 Move X27, 0x741000
	177 Move X28, 0x741000
	178 Move X27, [X27+1264]
	179 Move X28, [X28+1256]
	180 Move X26, X31
	181 Move X24, X31
	182 Move W29, 0x3F800000
	183 Move X2, [X27]
	184 Add X0, X31, 144
	185 Move W1, W24
	186 Call NativeSlice`1<Vector3>.get_Item, X0, X1
	187 Move X2, [X27]
	188 Add X0, X31, 144
	189 Move W1, W24
	190 Move V8, V0
	191 Call NativeSlice`1<Vector3>.get_Item, X0, X1
	192 Move X2, [X28]
	193 Add X0, X31, 128
	194 Move W1, W24
	195 Move V9, V1
	196 Call NativeSlice`1<Vector2>.get_Item, X0, X1
	197 Move X8, [X31+112]
	198 Add X0, X31, 144
	199 Add X24, X24, 1
	200 Add X8, X8, X26
	201 Move [X8], S8
	202 Move [X8+8], S9
	203 Move [X8+8], X31
	204 Move [X8+16], X31
	205 Move [X8+24], W29
	206 Move [X8+28], S0
	207 Move [X8+36], S1
	208 Move X1, [X25]
	209 Call NativeSlice`1<Vector3>.get_Length, X0
	210 NotImplemented "Instruction CMP not yet implemented."
	211 Add X26, X26, 36
	212 Move X25, 0x741000
	213 Move X25, [X25+1208]
	214 Move W24, [X31+120]
	215 Move X0, [X25]
	216 Move W8, [X0+224]
	217 Compare W8, 0
	218 JumpIfNotEqual {220}
	219 Call 0x1C17DFC
	220 Compare X21, 0
	221 JumpIfEqual {311}
	222 Move X8, [X25]
	223 Move X0, X21
	224 Move W1, W24
	225 Move X3, X31
	226 Move X8, [X8+184]
	227 Move X2, [X8]
	228 Call Mesh.SetVertexBufferParams, X0, X1, X2
	229 Move X8, 0x741000
	230 Move X1, [X31+112]
	231 Move X2, [X31+120]
	232 Move X8, [X8+1224]
	233 Move X0, X21
	234 Move W3, W31
	235 Move W4, W31
	236 Move X8, [X8]
	237 Move W5, W2
	238 Move W6, W31
	239 Move W7, W31
	240 Move [X31], X8
	241 Call Mesh.SetVertexBufferData, X0, X1, X2, X3, X4, X5, X6
	242 Move X8, 0x741000
	243 Move X8, [X8+1216]
	244 Move W5, 1
	245 Move X0, X21
	246 Move X1, X23
	247 Move X7, [X8]
	248 Move X2, X22
	249 Move W3, W31
	250 Move W4, W31
	251 Move W6, W31
	252 Call 0x221B138, X0, X1, X2, X3, X4, X5
	253 Move X8, 0x741000
	254 Move W1, [X31+120]
	255 Move X8, [X8+1200]
	256 Move X0, [X8]
	257 Call 0x1C17D6C
	258 Move [X20+152], X0
	259 Move X8, 0x741000
	260 Move X8, [X8+1240]
	261 Move X2, X0
	262 Move X0, [X31+112]
	263 Move X1, [X31+120]
	264 Move X4, [X8]
	265 Move W3, W1
	266 Call NativeArray`1<LightMeshVertex>.Copy, X0, X1, X2
	267 Move X8, 0x710000
	268 Move X8, [X8+2256]
	269 Move W1, W22
	270 Move X0, [X8]
	271 Call 0x1C17D6C
	272 Move [X20+160], X0
	273 Move X8, 0x741000
	274 Move X8, [X8+1232]
	275 Move X2, X0
	276 Move X0, X23
	277 Move X1, X22
	278 Move X4, [X8]
	279 Move W3, W22
	280 Call NativeArray`1<UInt16>.Copy, X0, X1, X2
	281 Add X8, X31, 16
	282 Move X0, X21
	283 Move W1, W31
	284 Move X2, X31
	285 Call Mesh.GetSubMesh, X0, X1
	286 Move V1, [X31+16]
	287 Move V0, [X31+32]
	288 Move V2, [X31+3]
	289 Move [X31+64], V1
	290 Move [X31+72], V0
	291 Move X8, [X31+80]
	292 Move [X31+6], V2
	293 Move [X19], V1
	294 Move [X19+16], X8
	295 Move X20, [X31+256]
	296 Move X19, [X31+264]
	297 Move X22, [X31+240]
	298 Move X21, [X31+248]
	299 Move X24, [X31+224]
	300 Move X23, [X31+232]
	301 Move X26, [X31+208]
	302 Move X25, [X31+216]
	303 Move X28, [X31+192]
	304 Move X27, [X31+200]
	305 Move X29, [X31+176]
	306 Move X30, [X31+184]
	307 Move D9, [X31+160]
	308 Move D8, [X31+168]
	309 Add X31, X31, 272
	310 Return X0
	311 Call 0x1C17F20

Method: System.Int32 GetShapePathHash(UnityEngine.Vector3[] path)

Disassembly:
	0x03A14ED4 CSET W20, HI
	0x03A14ED8 BL 0x3EB1C30
	0x00000000 INVALID
	0x03A14EE0 LDR V0, [X31 + 0x60]
	0x03A14EE4 ADD X22, X21, 0x2
	0x03A14EE8 SDIV W8, W22, W28
	0x03A14EEC MOV V2.16B, V11.16B
	0x03A14EF0 FMUL S8, S0, S10
	0x03A14EF4 FMUL S9, S0, S12
	0x03A14EF8 MOV V0.16B, V8.16B
	0x03A14EFC MOV V1.16B, V9.16B
	0x03A14F00 MOV X0, X31
	0x03A14F04 MSUB W27, W8, W28, W22
	0x03A14F08 BL 0x3887BE0
	0x03A14F0C LDR X8, [X31 + 0x80]
	0x03A14F10 MOV X0, X31
	0x03A14F14 SMADDL X8, X27, X19, X8
	0x03A14F18 STP S0, S1, [X8]
	0x03A14F1C STP S2, S10, [X8 + 0x8]
	0x03A14F20 MOV V0.16B, V8.16B
	0x03A14F24 MOV V1.16B, V9.16B
	0x03A14F28 MOV V2.16B, V11.16B
	0x03A14F2C STR S12, [X8 + 0x10]
	0x03A14F30 STUR X31, [X8 + 0x14]
	0x03A14F34 STUR X31, [X8 + 0x1C]
	0x03A14F38 BL 0x3887BE0
	0x03A14F3C LDR X8, [X31 + 0x80]
	0x03A14F40 ADD W9, W27, 0x1
	0x03A14F44 ORR W10, W21, 0x1
	0x03A14F48 ADD W11, W29, 0x1
	0x03A14F4C SMADDL X8, X9, X19, X8
	0x03A14F50 STP S0, S1, [X8]
	0x03A14F54 LDR V0, [X31 + 0x4]
	0x03A14F58 STR S2, [X8 + 0x8]
	0x03A14F5C STUR X31, [X8 + 0x1C]
	0x03A14F60 LDR V1, [X31 + 0x5C]
	0x03A14F64 STUR V0, [X8 + 0xC]
	0x03A14F68 LDR X8, [X31 + 0x70]
	0x03A14F6C LDR V3, [X31 + 0x38]
	0x03A14F70 FMUL S0, S10, S1
	0x03A14F74 FADD S0, S8, S0
	0x03A14F78 STRH W9, [X8, W29, SXTW]
	0x03A14F7C STRH W10, [X8, W11, SXTW]
	0x03A14F80 ADD W11, W29, 0x2
	0x03A14F84 STRH W28, [X8, W11, SXTW]
	0x03A14F88 ADD W11, W29, 0x3
	0x03A14F8C FMOV W12, S0
	0x03A14F90 STRH W27, [X8, W11, SXTW]
	0x03A14F94 ADD W11, W29, 0x4
	0x03A14F98 AND W12, W12, 0x7FFFFFFF
	0x03A14F9C STRH W21, [X8, W11, SXTW]
	0x03A14FA0 ADD W11, W29, 0x5
	0x03A14FA4 CMP W12, W23
	0x03A14FA8 ADD W12, W29, 0x6
	0x03A14FAC STRH W10, [X8, W11, SXTW]
	0x03A14FB0 STRH W9, [X8, W12, SXTW]
	0x03A14FB4 CSET W9, HI
	0x03A14FB8 FCMP S14, S0
	0x03A14FBC FMUL S1, S12, S1

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+16], X30
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move [X31+8], W31
	013 Move [X31], X31
	014 Compare X0, 0
	015 JumpIfEqual {52}
	016 Move X8, [X0+24]
	017 Move W20, 0x9DC5
	018 Move X19, X0
	019 NotImplemented "Instruction MOVK not yet implemented."
	020 NotImplemented "Instruction CMP not yet implemented."
	021 Add X9, X31, 0
	022 Move W27, 403
	023 Move X25, X31
	024 And X8, X8, 0
	025 Add X26, X19, 40
	026 Or X21, X9, 7
	027 Add X22, X9, 8
	028 NotImplemented "Instruction MOVK not yet implemented."
	029 NotImplemented "Instruction CMP not yet implemented."
	030 NotImplemented "Instruction LDUR not yet implemented."
	031 Move V1, [X26+12]
	032 Add X0, X31, 0
	033 Move X1, X31
	034 Move [X31], D0
	035 Move [X31+8], S1
	036 Call Single.GetHashCode, X0
	037 Move W23, W0
	038 Move X0, X21
	039 Move X1, X31
	040 Call Single.GetHashCode, X0
	041 Move W24, W0
	042 Move X0, X22
	043 Move X1, X31
	044 Call Single.GetHashCode, X0
	045 Move W8, [X19+24]
	046 Multiply W9, W20, W27
	047 Xor W9, W23, W9
	048 Xor W9, W9, W24
	049 Add X25, X25, 1
	050 Xor W20, W9, W0
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Move W20, W31
	053 Move W0, W20
	054 Move X20, [X31+80]
	055 Move X19, [X31+88]
	056 Move X22, [X31+64]
	057 Move X21, [X31+72]
	058 Move X24, [X31+48]
	059 Move X23, [X31+56]
	060 Move X26, [X31+32]
	061 Move X25, [X31+40]
	062 Move X30, [X31+16]
	063 Move X27, [X31+24]
	064 Add X31, X31, 96
	065 Return X0
	066 Call 0x1C17F28

