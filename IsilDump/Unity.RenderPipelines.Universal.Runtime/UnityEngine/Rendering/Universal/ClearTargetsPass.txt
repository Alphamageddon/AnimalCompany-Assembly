Type: UnityEngine.Rendering.Universal.ClearTargetsPass

Method: System.Void Render(UnityEngine.Experimental.Rendering.RenderGraphModule.RenderGraph graph, UnityEngine.Rendering.Universal.UniversalRenderer renderer, UnityEngine.Rendering.RTClearFlags clearFlags, UnityEngine.Color clearColor)

Disassembly:
	0x03A89EAC ADD W20, W20, 0x1
	0x03A89EB0 CMP W20, W8
	0x03A89EB4 B.LT 0x3A89E5C
	0x03A89EB8 LDP X20, X19, [X31 + 0x30]
	0x03A89EBC LDP X22, X21, [X31 + 0x20]
	0x03A89EC0 LDP X30, X23, [X31 + 0x10]
	0x03A89EC4 ADD X31, X31, 0x40
	0x03A89EC8 RET
	0x03A89ECC BL 0x1C16F20
	0x03A89ED0 BL 0x1C16F28
	0x03A89ED4 STR X30, [X31 - 0x40]!
	0x03A89ED8 STP X24, X23, [X31 + 0x10]
	0x03A89EDC STP X22, X21, [X31 + 0x20]
	0x03A89EE0 STP X20, X19, [X31 + 0x30]
	0x03A89EE4 ADRP X23, 0x959000
	0x03A89EE8 ADRP X24, 0x695000
	0x03A89EEC ADRP X22, 0x6CE000
	0x03A89EF0 LDRB W8, [X23 + 0x358]
	0x03A89EF4 LDR X24, [X24 + 0x50]
	0x03A89EF8 LDR X22, [X22 + 0x2B8]
	0x03A89EFC MOV X21, X2
	0x03A89F00 MOV X19, X1
	0x03A89F04 MOV X20, X0
	0x03A89F08 TBNZ X8, 0x0, 0x3A89F2C
	0x03A89F0C ADRP X0, 0x6CE000
	0x03A89F10 LDR X0, [X0 + 0x2B8]
	0x03A89F14 BL 0x1C16CF4
	0x03A89F18 ADRP X0, 0x695000
	0x03A89F1C LDR X0, [X0 + 0x50]
	0x03A89F20 BL 0x1C16CF4
	0x03A89F24 MOVZ W8, 0x1
	0x03A89F28 STRB W8, [X23 + 0x358]
	0x03A89F2C LDR X0, [X24]
	0x03A89F30 BL 0x1C16F10
	0x03A89F34 LDR X2, [X22]
	0x03A89F38 MOV X1, X21
	0x03A89F3C MOV X22, X0
	0x03A89F40 BL 0x301B8E0
	0x03A89F44 LDR X8, [X20]
	0x03A89F48 MOV X0, X20
	0x03A89F4C MOV X1, X19
	0x03A89F50 MOV X2, X22
	0x03A89F54 LDP X4, X3, [X8 + 0x1A8]
	0x03A89F58 LDP X20, X19, [X31 + 0x30]
	0x03A89F5C LDP X22, X21, [X31 + 0x20]
	0x03A89F60 LDP X24, X23, [X31 + 0x10]
	0x03A89F64 LDR X30, [X31], #0x40
	0x03A89F68 BR X4
	0x03A89F6C SUB X31, X31, 0x90
	0x03A89F70 STP X30, X27, [X31 + 0x40]
	0x03A89F74 STP X26, X25, [X31 + 0x50]
	0x03A89F78 STP X24, X23, [X31 + 0x60]
	0x03A89F7C STP X22, X21, [X31 + 0x70]
	0x03A89F80 STP X20, X19, [X31 + 0x80]
	0x03A89F84 ADRP X21, 0x959000
	0x03A89F88 ADRP X24, 0x693000
	0x03A89F8C LDRB W8, [X21 + 0x359]
	0x03A89F90 LDR X24, [X24 + 0x8A8]
	0x03A89F94 MOV X19, X2
	0x03A89F98 MOV X20, X1
	0x03A89F9C MOV X22, X0
	0x03A89FA0 TBNZ X8, 0x0, 0x3A8A00C
	0x03A89FA4 ADRP X0, 0x6CD000
	0x03A89FA8 LDR X0, [X0 + 0xF28]
	0x03A89FAC BL 0x1C16CF4
	0x03A89FB0 ADRP X0, 0x6CE000
	0x03A89FB4 LDR X0, [X0 + 0x2C0]
	0x03A89FB8 BL 0x1C16CF4
	0x03A89FBC ADRP X0, 0x693000
	0x03A89FC0 LDR X0, [X0 + 0x898]
	0x03A89FC4 BL 0x1C16CF4
	0x03A89FC8 ADRP X0, 0x6CB000
	0x03A89FCC LDR X0, [X0 + 0xA8]
	0x03A89FD0 BL 0x1C16CF4
	0x03A89FD4 ADRP X0, 0x6C7000
	0x03A89FD8 LDR X0, [X0 + 0x9B0]
	0x03A89FDC BL 0x1C16CF4
	0x03A89FE0 ADRP X0, 0x6CE000
	0x03A89FE4 LDR X0, [X0 + 0x220]
	0x03A89FE8 BL 0x1C16CF4
	0x03A89FEC ADRP X0, 0x693000
	0x03A89FF0 LDR X0, [X0 + 0x8A8]
	0x03A89FF4 BL 0x1C16CF4
	0x03A89FF8 ADRP X0, 0x6C7000
	0x03A89FFC LDR X0, [X0 + 0x500]
	0x03A8A000 BL 0x1C16CF4
	0x03A8A004 MOVZ W8, 0x1
	0x03A8A008 STRB W8, [X21 + 0x359]
	0x03A8A00C LDR X0, [X24]
	0x03A8A010 STRB W31, [X31 + 0x38]
	0x03A8A014 STRB W31, [X31 + 0x30]
	0x03A8A018 ADRP X21, 0x6CD000
	0x03A8A01C LDR W8, [X0 + 0xE0]
	0x03A8A020 LDR X21, [X21 + 0x220]
	0x03A8A024 CBNZ W8, 0x3A8A030
	0x03A8A028 BL 0x1C16DFC
	0x03A8A02C LDR X0, [X24]
	0x03A8A030 LDR X8, [X0 + 0xB8]
	0x03A8A034 STRB W31, [X8 + 0x18]
	0x03A8A038 BL 0x3A8A638
	0x03A8A03C LDR X0, [X21]
	0x03A8A040 LDR W8, [X0 + 0xE0]
	0x03A8A044 CBNZ W8, 0x3A8A04C
	0x03A8A048 BL 0x1C16DFC
	0x03A8A04C MOV X0, X31
	0x03A8A050 BL 0x3C5B374
	0x03A8A054 MOV X21, X0
	0x03A8A058 BL 0x3A8A77C
	0x03A8A05C CBZ X21, 0x3A8A458
	0x03A8A060 ADRP X8, 0x6CA000
	0x03A8A064 LDR X8, [X8 + 0xA8]
	0x03A8A068 AND W9, W0, 0x1
	0x03A8A06C STRB W9, [X21 + 0x2C]
	0x03A8A070 ADRP X25, 0x692000
	0x03A8A074 LDR X1, [X8]
	0x03A8A078 LDR X25, [X25 + 0x898]
	0x03A8A07C MOV W0, W31
	0x03A8A080 BL 0x2235BC0
	0x03A8A084 MOV X2, X0
	0x03A8A088 ADD X0, X31, 0x38
	0x03A8A08C MOV X1, X31
	0x03A8A090 MOV X3, X31
	0x03A8A094 BL 0x39B1DB0
	0x03A8A098 LDR X0, [X25]
	0x03A8A09C LDR W8, [X0 + 0xE0]
	0x03A8A0A0 CBNZ W8, 0x3A8A0AC
	0x03A8A0A4 BL 0x1C16DFC
	0x03A8A0A8 LDR X0, [X25]
	0x03A8A0AC LDR X8, [X0 + 0xB8]
	0x03A8A0B0 LDR X2, [X8]
	0x03A8A0B4 STRB W31, [X31 + 0x28]
	0x03A8A0B8 ADD X0, X31, 0x28
	0x03A8A0BC MOV X1, X31
	0x03A8A0C0 MOV X3, X31
	0x03A8A0C4 BL 0x39B1DB0
	0x03A8A0C8 LDRB W8, [X31 + 0x28]
	0x03A8A0CC STRB W8, [X31 + 0x30]
	0x03A8A0D0 MOV X0, X20
	0x03A8A0D4 MOV X1, X19
	0x03A8A0D8 MOV X2, X31
	0x03A8A0DC BL 0x3C5459C
	0x03A8A0E0 MOV X23, X31
	0x03A8A0E4 ADD X0, X31, 0x30
	0x03A8A0E8 MOV X1, X31
	0x03A8A0EC BL 0x39B1DB4
	0x03A8A0F0 CBNZ X23, 0x3A8A45C
	0x03A8A0F4 MOV X0, X31
	0x03A8A0F8 BL 0x3C113A8
	0x03A8A0FC CMP W0, 0x1
	0x03A8A100 CSET W0, EQ
	0x03A8A104 MOV X1, X31
	0x03A8A108 BL 0x3C4B954
	0x03A8A10C MOVZ W0, 0x1
	0x03A8A110 MOV X1, X31
	0x03A8A114 BL 0x3C4B990
	0x03A8A118 MOVZ W0, 0x1
	0x03A8A11C MOV X1, X31
	0x03A8A120 BL 0x3C4B9CC
	0x03A8A124 LDR X0, [X24]
	0x03A8A128 LDR W8, [X0 + 0xE0]
	0x03A8A12C CBNZ W8, 0x3A8A134
	0x03A8A130 BL 0x1C16DFC
	0x03A8A134 BL 0x3A8A824
	0x03A8A138 BL 0x3A8AB60
	0x03A8A13C CBZ X0, 0x3A8A464
	0x03A8A140 ADRP X8, 0x6C6000
	0x03A8A144 LDR X8, [X8 + 0x500]
	0x03A8A148 LDR W21, [X0 + 0x5C]
	0x03A8A14C LDR X8, [X8]
	0x03A8A150 LDR W9, [X8 + 0xE0]
	0x03A8A154 CBNZ W9, 0x3A8A160
	0x03A8A158 MOV X0, X8
	0x03A8A15C BL 0x1C16DFC
	0x03A8A160 MOV W0, W21
	0x03A8A164 MOV X1, X31
	0x03A8A168 BL 0x398979C
	0x03A8A16C ADRP X8, 0x6C6000
	0x03A8A170 LDR X8, [X8 + 0x9B0]
	0x03A8A174 LDR X0, [X8]
	0x03A8A178 LDR W8, [X0 + 0xE0]
	0x03A8A17C CBNZ W8, 0x3A8A184
	0x03A8A180 BL 0x1C16DFC
	0x03A8A184 MOVZ W0, 0x1
	0x03A8A188 MOV X1, X31
	0x03A8A18C BL 0x39D706C
	0x03A8A190 MOV X0, X22

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+64], D11
	003 Move [X31+72], D10
	004 Move [X31+80], D9
	005 Move [X31+88], D8
	006 Move [X31+96], X30
	007 Move [X31+112], X22
	008 Move [X31+120], X21
	009 Move [X31+128], X20
	010 Move [X31+136], X19
	011 Move X22, 0x95A000
	012 Move X21, 0x6CF000
	013 Move W8, [X22+846]
	014 Move X21, [X21+560]
	015 Move V8, V3
	016 Move V9, V2
	017 Move V10, V1
	018 Move V11, V0
	019 Move W19, W2
	020 Move X20, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {51}
	025 Move X0, 0x6CF000
	026 Move X0, [X0+560]
	027 Call 0x1C17CF4
	028 Move X0, 0x6CF000
	029 Move X0, [X0+584]
	030 Call 0x1C17CF4
	031 Move X0, 0x6CF000
	032 Move X0, [X0+592]
	033 Call 0x1C17CF4
	034 Move X0, 0x6CF000
	035 Move X0, [X0+600]
	036 Call 0x1C17CF4
	037 Move X0, 0x6CF000
	038 Move X0, [X0+608]
	039 Call 0x1C17CF4
	040 Move X0, 0x6CF000
	041 Move X0, [X0+616]
	042 Call 0x1C17CF4
	043 Move X0, 0x6CB000
	044 Move X0, [X0+4088]
	045 Call 0x1C17CF4
	046 Move X0, 0x6CF000
	047 Move X0, [X0+624]
	048 Call 0x1C17CF4
	049 Move W8, 1
	050 Move [X22+846], W8
	051 Move X0, [X21]
	052 NotImplemented "Instruction MOVI not yet implemented."
	053 Move [X31+32], V0
	054 Move [X31+40], V0
	055 Move [X31+104], X31
	056 Move W8, [X0+224]
	057 Compare W8, 0
	058 JumpIfNotEqual {60}
	059 Call 0x1C17DFC
	060 Compare X20, 0
	061 JumpIfEqual {175}
	062 Move X8, [X21]
	063 Move X9, 0x6CF000
	064 Move X10, 0x6CF000
	065 Move X21, 0x6CB000
	066 Move X8, [X8+184]
	067 Move X9, [X9+624]
	068 Move X10, [X10+600]
	069 Add X2, X31, 104
	070 Move X3, [X8]
	071 Move X1, [X9]
	072 Move X4, [X10]
	073 Move X21, [X21+4088]
	074 Add X8, X31, 0
	075 Move X0, X20
	076 Call 0x2241F24, X0, X1, X2, X3
	077 Move V0, [X31]
	078 Move V1, [X31+16]
	079 Move X0, [X21]
	080 Move X20, [X31+104]
	081 Move [X31+32], V0
	082 Move [X31+40], V1
	083 Move W8, [X0+224]
	084 Compare W8, 0
	085 JumpIfNotEqual {88}
	086 Call 0x1C17DFC
	087 Move X0, [X21]
	088 Move X8, [X0+184]
	089 Add X1, X8, 24
	090 Add X0, X31, 32
	091 Move W2, W31
	092 Move X3, X31
	093 Call RenderGraphBuilder.UseColorBuffer, X0, X1, X2
	094 Compare X20, 0
	095 JumpIfEqual {176}
	096 Move [X20+16], X0
	097 Move X8, [X21]
	098 Move X20, [X31+104]
	099 Move X8, [X8+184]
	100 Add X1, X8, 32
	101 Add X0, X31, 32
	102 Move W2, 2
	103 Move X3, X31
	104 Call RenderGraphBuilder.UseDepthBuffer, X0, X1, X2
	105 Compare X20, 0
	106 JumpIfEqual {177}
	107 Move [X20+24], X0
	108 Move X8, [X31+104]
	109 Compare X8, 0
	110 JumpIfEqual {178}
	111 Move [X8+32], W19
	112 Move [X8+36], S11
	113 Move [X8+44], S10
	114 Move [X8+44], S9
	115 Move [X8+52], S8
	116 Add X0, X31, 32
	117 Move W1, W31
	118 Move X2, X31
	119 Call RenderGraphBuilder.AllowPassCulling, X0, X1
	120 Move X21, 0x6CE000
	121 Move X21, [X21+616]
	122 Move X8, [X21]
	123 Move W9, [X8+224]
	124 Compare W9, 0
	125 JumpIfNotEqual {129}
	126 Move X0, X8
	127 Call 0x1C17DFC
	128 Move X8, [X21]
	129 Move X9, [X8+184]
	130 Move X19, [X9+8]
	131 Compare X19, 0
	132 JumpIfNotEqual {155}
	133 Move W9, [X8+224]
	134 Compare W9, 0
	135 JumpIfNotEqual {139}
	136 Move X0, X8
	137 Call 0x1C17DFC
	138 Move X8, [X21]
	139 Move X9, 0x6CE000
	140 Move X8, [X8+184]
	141 Move X9, [X9+584]
	142 Move X20, [X8]
	143 Move X0, [X9]
	144 Call 0x1C17F10
	145 Move X8, 0x6CE000
	146 Move X8, [X8+608]
	147 Move X19, X0
	148 Move X2, [X8]
	149 Move X1, X20
	150 Move X3, X31
	151 Call 0x25C88AC, X0, X1, X2
	152 Move X8, [X21]
	153 Move X8, [X8+184]
	154 Move [X8+8], X19
	155 Move X8, 0x6CE000
	156 Move X8, [X8+592]
	157 Move X2, [X8]
	158 Add X0, X31, 32
	159 Move X1, X19
	160 Call 0x224207C, X0, X1
	161 Add X0, X31, 32
	162 Move X1, X31
	163 Call RenderGraphBuilder.Dispose, X0
	164 Move X20, [X31+128]
	165 Move X19, [X31+136]
	166 Move X22, [X31+112]
	167 Move X21, [X31+120]
	168 Move X30, [X31+96]
	169 Move D9, [X31+80]
	170 Move D8, [X31+88]
	171 Move D11, [X31+64]
	172 Move D10, [X31+72]
	173 Add X31, X31, 144
	174 Return 
	175 Call 0x1C17F20
	176 Call 0x1C17F20
	177 Call 0x1C17F20
	178 Call 0x1C17F20
	179 Move X19, X0
	180 NotImplemented "Instruction CMP not yet implemented."
	181 Move X0, X19
	182 Call 0x3EB2AD0
	183 Move X20, [X0]
	184 Call 0x3EB2AE0
	185 Add X0, X31, 32
	186 Move X1, X31
	187 Call RenderGraphBuilder.Dispose, X0
	188 Compare X20, 0
	189 JumpIfEqual {164}
	190 Move X0, X20
	191 Call 0x1C17F18
	192 Move X20, X31
	193 Move X19, X0
	194 Add X0, X31, 32
	195 Move X1, X31
	196 Call RenderGraphBuilder.Dispose, X0
	197 Compare X20, 0
	198 JumpIfNotEqual {201}
	199 Move X0, X19
	200 Call 0x1D2D690
	201 Move X0, X20
	202 Call 0x1C17F18
	203 Call 0x1991590

Method: System.Void .ctor()

Disassembly:
	0x03A8A194 MOV X1, X19
	0x03A8A198 BL 0x3A8ABD4

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: System.Void .cctor()

Disassembly:
	0x03A8A19C CBZ X19, 0x3A8A468
	0x03A8A1A0 LDR W8, [X19 + 0x18]
	0x03A8A1A4 CMP W8, 0x1
	0x03A8A1A8 B.LT 0x3A8A374
	0x03A8A1AC ADRP X26, 0x6CD000
	0x03A8A1B0 LDR X26, [X26 + 0x2C0]
	0x03A8A1B4 MOV W22, W31
	0x03A8A1B8 LDR X2, [X26]
	0x03A8A1BC MOV X0, X19
	0x03A8A1C0 MOV W1, W22
	0x03A8A1C4 BL 0x301BCCC
	0x03A8A1C8 MOV X23, X0
	0x03A8A1CC LDR X0, [X24]
	0x03A8A1D0 LDR W8, [X0 + 0xE0]
	0x03A8A1D4 CBNZ W8, 0x3A8A1DC
	0x03A8A1D8 BL 0x1C16DFC
	0x03A8A1DC MOV X0, X23
	0x03A8A1E0 BL 0x3A8AC50
	0x03A8A1E4 TBZ X0, 0x0, 0x3A8A208
	0x03A8A1E8 LDR X0, [X24]
	0x03A8A1EC LDR W8, [X0 + 0xE0]
	0x03A8A1F0 CBNZ W8, 0x3A8A1F8
	0x03A8A1F4 BL 0x1C16DFC
	0x03A8A1F8 MOV X0, X20
	0x03A8A1FC MOV X1, X23
	0x03A8A200 BL 0x3A8AD2C
	0x03A8A204 B 0x3A8A308
	0x03A8A208 LDR X0, [X25]
	0x03A8A20C LDR W8, [X0 + 0xE0]
	0x03A8A210 CBNZ W8, 0x3A8A21C
	0x03A8A214 BL 0x1C16DFC
	0x03A8A218 LDR X0, [X25]
	0x03A8A21C LDR X8, [X0 + 0xB8]
	0x03A8A220 LDR X2, [X8 + 0x10]
	0x03A8A224 STRB W31, [X31 + 0x20]
	0x03A8A228 ADD X0, X31, 0x20

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x959000
	007 Move X22, 0x6C7000
	008 Move X19, 0x6CE000
	009 Move X20, 0x6CE000
	010 Move W8, [X21+847]
	011 Move X22, [X22+1432]
	012 Move X19, [X19+632]
	013 Move X20, [X20+560]
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {29}
	018 Move X0, 0x6CE000
	019 Move X0, [X0+560]
	020 Call 0x1C17CF4
	021 Move X0, 0x6C7000
	022 Move X0, [X0+1432]
	023 Call 0x1C17CF4
	024 Move X0, 0x6CE000
	025 Move X0, [X0+632]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X21+847], W8
	029 Move X0, [X22]
	030 Call 0x1C17F10
	031 Move X1, [X19]
	032 Move X2, X31
	033 Move X19, X0
	034 Call ProfilingSampler..ctor, X0, X1
	035 Move X8, [X20]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X8, [X8+184]
	039 Move [X8], X19
	040 Move X20, [X31+32]
	041 Move X19, [X31+40]
	042 Move X30, [X31+48]
	043 Return 

