Type: UnityEngine.Rendering.Universal.DecalDrawSystem

Method: UnityEngine.Material get_overrideMaterial()

Disassembly:
	0x03A3CAB0 ADRP X22, 0x9A6000
	0x03A3CAB4 LDRB W8, [X22 + 0x140]

ISIL:
	001 Move X0, [X0+56]
	002 Return X0

Method: System.Void set_overrideMaterial(UnityEngine.Material value)

Disassembly:
	0x03A3CAB8 MOV X19, X4
	0x03A3CABC MOV X20, X3

ISIL:
	001 Move [X0+56], X1
	002 Return 

Method: System.Void .ctor(System.String sampler, UnityEngine.Rendering.Universal.DecalEntityManager entityManager)

Disassembly:
	0x03A3CAC0 MOV X23, X2
	0x03A3CAC4 MOV X21, X1
	0x03A3CAC8 MOV X24, X0
	0x03A3CACC TBNZ X8, 0x0, 0x3A3CAFC
	0x03A3CAD0 ADRP X0, 0x6BB000
	0x03A3CAD4 LDR X0, [X0 + 0x2C8]
	0x03A3CAD8 BL 0x1C16CF4
	0x03A3CADC ADRP X0, 0x719000
	0x03A3CAE0 LDR X0, [X0 + 0x820]
	0x03A3CAE4 BL 0x1C16CF4
	0x03A3CAE8 ADRP X0, 0x719000
	0x03A3CAEC LDR X0, [X0 + 0x828]
	0x03A3CAF0 BL 0x1C16CF4
	0x03A3CAF4 MOVZ W8, 0x1
	0x03A3CAF8 STRB W8, [X22 + 0x140]
	0x03A3CAFC LDR X0, [X24 + 0x10]
	0x03A3CB00 CBZ X0, 0x3A3CCD0
	0x03A3CB04 BL 0x3A3C3E4
	0x03A3CB08 LDR X8, [X24]
	0x03A3CB0C MOV X22, X0
	0x03A3CB10 MOV X0, X24
	0x03A3CB14 MOV X1, X23
	0x03A3CB18 LDP X9, X2, [X8 + 0x178]
	0x03A3CB1C BLR X9
	0x03A3CB20 CBZ X19, 0x3A3CCD0
	0x03A3CB24 LDR X8, [X19 + 0x68]
	0x03A3CB28 LDR W8, [X8]
	0x03A3CB2C CMP W8, 0x1
	0x03A3CB30 STR X8, [X31 + 0x10]
	0x03A3CB34 B.LT 0x3A3CCB0
	0x03A3CB38 MOV X23, X0
	0x03A3CB3C MOV X9, X31
	0x03A3CB40 LDR X8, [X19 + 0x58]
	0x03A3CB44 STR X9, [X31 + 0x18]
	0x03A3CB48 ADD X9, X8, X9, 0x3, LSL
	0x03A3CB4C LDP W8, W9, [X9]
	0x03A3CB50 SXTW X8, W8
	0x03A3CB54 CMP W8, W9
	0x03A3CB58 B.GE 0x3A3CCA0
	0x03A3CB5C CBZ X20, 0x3A3CCD0
	0x03A3CB60 UBFM X29, X8, 0x3A, 0x39
	0x03A3CB64 UBFM X27, X8, 0x3E, 0x3D
	0x03A3CB68 SUB W28, W9, W8
	0x03A3CB6C LDR X8, [X19 + 0x38]
	0x03A3CB70 LDR X24, [X20 + 0x28]
	0x03A3CB74 ADD X0, X31, 0x120
	0x03A3CB78 MOV X1, X31
	0x03A3CB7C ADD X8, X8, X29
	0x03A3CB80 LDP V0, V1, [X8 + 0x20]
	0x03A3CB84 LDP V2, V3, [X8]
	0x03A3CB88 ADD X8, X31, 0x160
	0x03A3CB8C STP V0, V1, [X31 + 0x140]
	0x03A3CB90 STP V2, V3, [X31 + 0x120]
	0x03A3CB94 BL 0x38990D4
	0x03A3CB98 LDP V0, V1, [X31 + 0x160]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X25, 0x9A7000
	010 Move X24, 0x6BC000
	011 Move X23, 0x6B8000
	012 Move X22, 0x715000
	013 Move W8, [X25+313]
	014 Move X24, [X24+2440]
	015 Move X23, [X23+1592]
	016 Move X22, [X22+1432]
	017 Move X21, X2
	018 Move X20, X1
	019 Move X19, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {35}
	024 Move X0, 0x6BC000
	025 Move X0, [X0+2440]
	026 Call 0x1C17CF4
	027 Move X0, 0x715000
	028 Move X0, [X0+1432]
	029 Call 0x1C17CF4
	030 Move X0, 0x6B8000
	031 Move X0, [X0+1592]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X25+313], W8
	035 Move X0, X19
	036 Move X1, X31
	037 Call Object..ctor, X0
	038 Move [X19+16], X21
	039 Move X0, [X24]
	040 Move W1, 250
	041 Call 0x1C17D6C
	042 Move [X19+24], X0
	043 Move X0, [X24]
	044 Move W1, 250
	045 Call 0x1C17D6C
	046 Move [X19+32], X0
	047 Move X0, [X23]
	048 Move W1, 250
	049 Call 0x1C17D6C
	050 Move [X19+40], X0
	051 Move X0, [X22]
	052 Call 0x1C17F10
	053 Move X1, X20
	054 Move X2, X31
	055 Move X21, X0
	056 Call ProfilingSampler..ctor, X0, X1
	057 Move [X19+48], X21
	058 Move X20, [X31+48]
	059 Move X19, [X31+56]
	060 Move X22, [X31+32]
	061 Move X21, [X31+40]
	062 Move X24, [X31+16]
	063 Move X23, [X31+24]
	064 Move X30, [X31+64]
	065 Move X25, [X31+72]
	066 Return 

Method: System.Void Execute(UnityEngine.Rendering.CommandBuffer cmd)

Disassembly:
	0x03A3CB9C LDP V2, V3, [X31 + 0x180]
	0x03A3CBA0 STP V0, V1, [X31 + 0x1A0]
	0x03A3CBA4 STP V2, V3, [X31 + 0x1C0]
	0x03A3CBA8 CBZ X24, 0x3A3CCD0
	0x03A3CBAC ADRP X8, 0x719000
	0x03A3CBB0 LDR X8, [X8 + 0x828]
	0x03A3CBB4 LDP V0, V1, [X31 + 0x1A0]
	0x03A3CBB8 LDP V2, V3, [X31 + 0x1C0]
	0x03A3CBBC ADD X2, X31, 0xE0
	0x03A3CBC0 LDR X1, [X8]
	0x03A3CBC4 MOV X0, X24
	0x03A3CBC8 MOV X3, X31
	0x03A3CBCC STP V0, V1, [X31 + 0xE0]
	0x03A3CBD0 STP V2, V3, [X31 + 0x100]
	0x03A3CBD4 BL 0x3C12728
	0x03A3CBD8 LDR X0, [X20 + 0x28]
	0x03A3CBDC CBZ X0, 0x3A3CCD0
	0x03A3CBE0 LDR X8, [X19 + 0x48]
	0x03A3CBE4 MOV X2, X31
	0x03A3CBE8 LDR V0, [X8, X27, LSL]
	0x03A3CBEC ADRP X8, 0x719000
	0x03A3CBF0 LDR X8, [X8 + 0x820]
	0x03A3CBF4 LDR X1, [X8]
	0x03A3CBF8 BL 0x3C1257C
	0x03A3CBFC LDR X8, [X19 + 0x28]
	0x03A3CC00 ADD X0, X31, 0x60
	0x03A3CC04 MOV X1, X31
	0x03A3CC08 ADD X8, X8, X29
	0x03A3CC0C LDP V1, V0, [X8 + 0x20]
	0x03A3CC10 LDP V3, V2, [X8]
	0x03A3CC14 ADD X8, X31, 0xA0
	0x03A3CC18 STP V1, V0, [X31 + 0x80]
	0x03A3CC1C STP V3, V2, [X31 + 0x60]
	0x03A3CC20 BL 0x38990D4
	0x03A3CC24 LDP V0, V1, [X31 + 0xA0]
	0x03A3CC28 LDP V2, V3, [X31 + 0xC0]
	0x03A3CC2C ADRP X8, 0x6BB000
	0x03A3CC30 LDR X8, [X8 + 0x2C8]
	0x03A3CC34 STP V0, V1, [X31 + 0x160]
	0x03A3CC38 STP V2, V3, [X31 + 0x180]
	0x03A3CC3C LDR X25, [X21 + 0xC0]
	0x03A3CC40 LDR X0, [X8]
	0x03A3CC44 LDR X8, [X20 + 0xA8]
	0x03A3CC48 LDR X24, [X20 + 0x28]
	0x03A3CC4C LDR W9, [X0 + 0xE0]
	0x03A3CC50 LDR W26, [X8, X27, LSL]
	0x03A3CC54 CBNZ W9, 0x3A3CC5C
	0x03A3CC58 BL 0x1C16DFC
	0x03A3CC5C LDP V0, V1, [X31 + 0x160]
	0x03A3CC60 LDP V2, V3, [X31 + 0x180]
	0x03A3CC64 ADD X1, X31, 0x20
	0x03A3CC68 MOV X0, X22
	0x03A3CC6C MOV X2, X23
	0x03A3CC70 MOV W3, W26
	0x03A3CC74 MOV X4, X25
	0x03A3CC78 MOV W5, W31
	0x03A3CC7C MOV X6, X24
	0x03A3CC80 MOV X7, X31
	0x03A3CC84 STP V0, V1, [X31 + 0x20]
	0x03A3CC88 STP V2, V3, [X31 + 0x40]
	0x03A3CC8C BL 0x3C0F948
	0x03A3CC90 ADD X29, X29, 0x40
	0x03A3CC94 SUBS W28, W28, 0x1
	0x03A3CC98 ADD X27, X27, 0x4
	0x03A3CC9C B.NE 0x3A3CB6C
	0x03A3CCA0 LDP X8, X9, [X31 + 0x10]
	0x03A3CCA4 ADD X9, X9, 0x1
	0x03A3CCA8 CMP X9, X8
	0x03A3CCAC B.NE 0x3A3CB40
	0x03A3CCB0 ADD X31, X31, 0x1E0
	0x03A3CCB4 LDP X20, X19, [X31 + 0x50]
	0x03A3CCB8 LDP X22, X21, [X31 + 0x40]
	0x03A3CCBC LDP X24, X23, [X31 + 0x30]
	0x03A3CCC0 LDP X26, X25, [X31 + 0x20]
	0x03A3CCC4 LDP X28, X27, [X31 + 0x10]
	0x03A3CCC8 LDP X29, X30, [X31], #0x60
	0x03A3CCCC RET
	0x03A3CCD0 BL 0x1C16F20
	0x03A3CCD4 STP X30, X21, [X31 - 0x20]!
	0x03A3CCD8 STP X20, X19, [X31 + 0x10]
	0x03A3CCDC ADRP X21, 0x9A6000
	0x03A3CCE0 LDRB W8, [X21 + 0x142]
	0x03A3CCE4 MOV X19, X1
	0x03A3CCE8 MOV X20, X0
	0x03A3CCEC TBNZ X8, 0x0, 0x3A3CD10
	0x03A3CCF0 ADRP X0, 0x719000
	0x03A3CCF4 LDR X0, [X0 + 0x830]
	0x03A3CCF8 BL 0x1C16CF4
	0x03A3CCFC ADRP X0, 0x719000
	0x03A3CD00 LDR X0, [X0 + 0x838]
	0x03A3CD04 BL 0x1C16CF4
	0x03A3CD08 MOVZ W8, 0x1
	0x03A3CD0C STRB W8, [X21 + 0x142]
	0x03A3CD10 LDR X0, [X20 + 0x10]
	0x03A3CD14 CBZ X0, 0x3A3CD58
	0x03A3CD18 LDR W8, [X0 + 0x18]
	0x03A3CD1C CMP W8, W19
	0x03A3CD20 B.LE 0x3A3CD48
	0x03A3CD24 ADRP X8, 0x719000
	0x03A3CD28 LDR X8, [X8 + 0x838]
	0x03A3CD2C MOV W1, W19
	0x03A3CD30 UBFM X20, X19, 0x20, 0x3F
	0x03A3CD34 LDR X2, [X8]
	0x03A3CD38 BL 0x30EFEBC
	0x03A3CD3C CMP W1, W20
	0x03A3CD40 CSET W0, EQ
	0x03A3CD44 B 0x3A3CD4C
	0x03A3CD48 MOV W0, W31
	0x03A3CD4C LDP X20, X19, [X31 + 0x10]
	0x03A3CD50 LDP X30, X21, [X31], #0x20
	0x03A3CD54 RET
	0x03A3CD58 BL 0x1C16F20
	0x03A3CD5C STR X30, [X31 - 0x30]!
	0x03A3CD60 STP X22, X21, [X31 + 0x10]
	0x03A3CD64 STP X20, X19, [X31 + 0x20]
	0x03A3CD68 ADRP X22, 0x9A6000
	0x03A3CD6C LDRB W8, [X22 + 0x143]
	0x03A3CD70 MOV W19, W2
	0x03A3CD74 MOV W20, W1
	0x03A3CD78 MOV X21, X0
	0x03A3CD7C TBNZ X8, 0x0, 0x3A3CDD0
	0x03A3CD80 ADRP X0, 0x719000
	0x03A3CD84 LDR X0, [X0 + 0x840]
	0x03A3CD88 BL 0x1C16CF4
	0x03A3CD8C ADRP X0, 0x719000
	0x03A3CD90 LDR X0, [X0 + 0x830]
	0x03A3CD94 BL 0x1C16CF4
	0x03A3CD98 ADRP X0, 0x719000
	0x03A3CD9C LDR X0, [X0 + 0x838]
	0x03A3CDA0 BL 0x1C16CF4
	0x03A3CDA4 ADRP X0, 0x719000
	0x03A3CDA8 LDR X0, [X0 + 0x848]
	0x03A3CDAC BL 0x1C16CF4
	0x03A3CDB0 ADRP X0, 0x6BB000
	0x03A3CDB4 LDR X0, [X0 + 0x790]
	0x03A3CDB8 BL 0x1C16CF4
	0x03A3CDBC ADRP X0, 0x6F7000

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+16], X30
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X21, 0x9A7000
	013 Move W8, [X21+314]
	014 Move X19, X1
	015 Move X20, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {31}
	020 Move X0, 0x71A000
	021 Move X0, [X0+2008]
	022 Call 0x1C17CF4
	023 Move X0, 0x71A000
	024 Move X0, [X0+2016]
	025 Call 0x1C17CF4
	026 Move X0, 0x71A000
	027 Move X0, [X0+2032]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X21+314], W8
	031 Move [X31+8], W31
	032 Move X2, [X20+48]
	033 Add X0, X31, 8
	034 Move X1, X19
	035 Move X3, X31
	036 Call ProfilingScope..ctor, X0, X1, X2
	037 Move X8, [X20+16]
	038 Compare X8, 0
	039 JumpIfEqual {98}
	040 Move X25, 0x71A000
	041 Move X26, 0x71A000
	042 Move X27, 0x71A000
	043 Move X25, [X25+2032]
	044 Move X26, [X26+2016]
	045 Move X27, [X27+2008]
	046 Move W21, W31
	047 Move W9, [X8+48]
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Move X0, [X8+16]
	050 Compare X0, 0
	051 JumpIfEqual {118}
	052 Move X2, [X25]
	053 Move W1, W21
	054 Call List`1<Object>.get_Item, X0, X1
	055 Move X8, [X20+16]
	056 Compare X8, 0
	057 JumpIfEqual {115}
	058 Move X22, X0
	059 Move X0, [X8+24]
	060 Compare X0, 0
	061 JumpIfEqual {116}
	062 Move X2, [X26]
	063 Move W1, W21
	064 Call List`1<Object>.get_Item, X0, X1
	065 Move X8, [X20+16]
	066 Compare X8, 0
	067 JumpIfEqual {114}
	068 Move X23, X0
	069 Move X0, [X8+40]
	070 Compare X0, 0
	071 JumpIfEqual {119}
	072 Move X2, [X27]
	073 Move W1, W21
	074 Call List`1<Object>.get_Item, X0, X1
	075 Move X8, [X20+16]
	076 Compare X8, 0
	077 JumpIfEqual {120}
	078 Move X24, X0
	079 Move X0, [X8+16]
	080 Compare X0, 0
	081 JumpIfEqual {117}
	082 Move X2, [X25]
	083 Move W1, W21
	084 Call List`1<Object>.get_Item, X0, X1
	085 Compare X0, 0
	086 JumpIfEqual {121}
	087 Move W5, [X0+16]
	088 Move X0, X20
	089 Move X1, X19
	090 Move X2, X22
	091 Move X3, X23
	092 Move X4, X24
	093 Call DecalDrawSystem.Execute, X0, X1, X2, X3, X4, X5
	094 Move X8, [X20+16]
	095 Add W21, W21, 1
	096 Compare X8, 0
	097 JumpIfNotEqual {47}
	098 Call 0x1C17F20
	099 Add X0, X31, 8
	100 Move X1, X31
	101 Call ProfilingScope.Dispose, X0
	102 Move X20, [X31+80]
	103 Move X19, [X31+88]
	104 Move X22, [X31+64]
	105 Move X21, [X31+72]
	106 Move X24, [X31+48]
	107 Move X23, [X31+56]
	108 Move X26, [X31+32]
	109 Move X25, [X31+40]
	110 Move X30, [X31+16]
	111 Move X27, [X31+24]
	112 Add X31, X31, 96
	113 Return 
	114 Call 0x1C17F20
	115 Call 0x1C17F20
	116 Call 0x1C17F20
	117 Call 0x1C17F20
	118 Call 0x1C17F20
	119 Call 0x1C17F20
	120 Call 0x1C17F20
	121 Call 0x1C17F20
	122 Move X19, X0
	123 NotImplemented "Instruction CMP not yet implemented."
	124 Move X0, X19
	125 Call 0x3EB2AD0
	126 Move X20, [X0]
	127 Call 0x3EB2AE0
	128 Add X0, X31, 8
	129 Move X1, X31
	130 Call ProfilingScope.Dispose, X0
	131 Compare X20, 0
	132 JumpIfEqual {102}
	133 Move X0, X20
	134 Call 0x1C17F18
	135 Move X20, X31
	136 Move X19, X0
	137 Add X0, X31, 8
	138 Move X1, X31
	139 Call ProfilingScope.Dispose, X0
	140 Compare X20, 0
	141 JumpIfNotEqual {144}
	142 Move X0, X19
	143 Call 0x1D2D690
	144 Move X0, X20
	145 Call 0x1C17F18
	146 Call 0x1991590

Method: UnityEngine.Material GetMaterial(UnityEngine.Rendering.Universal.DecalEntityChunk decalEntityChunk)

Disassembly:
	0x03A3CF24 STRB W8, [X21 + 0x144]
	0x03A3CF28 LDR X0, [X20 + 0x18]
	0x03A3CF2C CBZ X0, 0x3A3CF8C
	0x03A3CF30 ADRP X8, 0x6BB000
	0x03A3CF34 LDR X8, [X8 + 0x798]
	0x03A3CF38 MOV W1, W19

ISIL:
	001 Move [X31-16], X30
	002 Compare X1, 0
	003 JumpIfEqual {7}
	004 Move X0, [X1+40]
	005 Move X30, [X31+16]
	006 Return X0
	007 Call 0x1C17F20

Method: System.Int32 GetPassIndex(UnityEngine.Rendering.Universal.DecalCachedChunk decalCachedChunk)

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Void Execute(UnityEngine.Rendering.CommandBuffer cmd, UnityEngine.Rendering.Universal.DecalEntityChunk decalEntityChunk, UnityEngine.Rendering.Universal.DecalCachedChunk decalCachedChunk, UnityEngine.Rendering.Universal.DecalDrawCallChunk decalDrawCallChunk, System.Int32 count)

Disassembly:
	0x03A3CDC0 LDR X0, [X0 + 0x8B0]
	0x03A3CDC4 BL 0x1C16CF4
	0x03A3CDC8 MOVZ W8, 0x1
	0x03A3CDCC STRB W8, [X22 + 0x143]
	0x03A3CDD0 LDR X0, [X21 + 0x18]
	0x03A3CDD4 CBZ X0, 0x3A3CEDC
	0x03A3CDD8 LDR W8, [X0 + 0x20]
	0x03A3CDDC CBZ W8, 0x3A3CE4C
	0x03A3CDE0 ADRP X8, 0x6BB000
	0x03A3CDE4 LDR X8, [X8 + 0x790]
	0x03A3CDE8 LDR X1, [X8]
	0x03A3CDEC BL 0x24F0518
	0x03A3CDF0 LDR X8, [X21 + 0x10]
	0x03A3CDF4 CBZ X8, 0x3A3CEDC
	0x03A3CDF8 ADRP X9, 0x719000
	0x03A3CDFC LDR X9, [X9 + 0x838]
	0x03A3CE00 MOV W22, W0
	0x03A3CE04 MOV X0, X8
	0x03A3CE08 MOV W1, W22
	0x03A3CE0C LDR X2, [X9]
	0x03A3CE10 BL 0x30EFEBC
	0x03A3CE14 LDR X0, [X21 + 0x10]
	0x03A3CE18 CBZ X0, 0x3A3CEDC
	0x03A3CE1C ADRP X8, 0x719000
	0x03A3CE20 LDR X8, [X8 + 0x848]
	0x03A3CE24 MOV W2, W19
	0x03A3CE28 ADD W19, W1, 0x1
	0x03A3CE2C BFM X2, X20, 0x20, 0x1F
	0x03A3CE30 LDR X4, [X8]
	0x03A3CE34 MOV W1, W22
	0x03A3CE38 MOV X3, X19
	0x03A3CE3C BL 0x30EFF1C
	0x03A3CE40 UBFM X21, X19, 0x20, 0x1F
	0x03A3CE44 MOV W8, W22
	0x03A3CE48 B 0x3A3CEC8
	0x03A3CE4C LDR X0, [X21 + 0x10]
	0x03A3CE50 CBZ X0, 0x3A3CEDC
	0x03A3CE54 ADRP X10, 0x719000
	0x03A3CE58 LDR X10, [X10 + 0x840]
	0x03A3CE5C LDP W8, W11, [X0 + 0x18]
	0x03A3CE60 LDR X9, [X0 + 0x10]
	0x03A3CE64 LDR X10, [X10]
	0x03A3CE68 SXTW X8, W8
	0x03A3CE6C ADD W11, W11, 0x1
	0x03A3CE70 STR W11, [X0 + 0x1C]
	0x03A3CE74 CBZ X9, 0x3A3CEDC
	0x03A3CE78 LDR W11, [X9 + 0x18]
	0x03A3CE7C MOV W1, W19
	0x03A3CE80 AND X21, X8, 0x0
	0x03A3CE84 BFM X1, X20, 0x20, 0x1F
	0x03A3CE88 CMP W8, W11
	0x03A3CE8C B.CS 0x3A3CEB0
	0x03A3CE90 MOVZ W11, 0xC
	0x03A3CE94 ADD W10, W21, 0x1
	0x03A3CE98 MOVZ W12, 0x1
	0x03A3CE9C MADD X8, X8, X11, X9
	0x03A3CEA0 STR W10, [X0 + 0x18]
	0x03A3CEA4 STR X1, [X8 + 0x20]
	0x03A3CEA8 STR W12, [X8 + 0x28]
	0x03A3CEAC B 0x3A3CEC4
	0x03A3CEB0 LDR X8, [X10 + 0x20]
	0x03A3CEB4 MOVZ W2, 0x1
	0x03A3CEB8 LDR X8, [X8 + 0xC0]
	0x03A3CEBC LDR X3, [X8 + 0x70]
	0x03A3CEC0 BL 0x30F01E4
	0x03A3CEC4 MOVZ X8, 0x1
	0x03A3CEC8 ORR X0, X21, X8, 0x0
	0x03A3CECC LDP X20, X19, [X31 + 0x20]
	0x03A3CED0 LDP X22, X21, [X31 + 0x10]
	0x03A3CED4 LDR X30, [X31], #0x30
	0x03A3CED8 RET
	0x03A3CEDC BL 0x1C16F20
	0x03A3CEE0 STP X30, X21, [X31 - 0x20]!
	0x03A3CEE4 STP X20, X19, [X31 + 0x10]
	0x03A3CEE8 ADRP X21, 0x9A6000
	0x03A3CEEC LDRB W8, [X21 + 0x144]
	0x03A3CEF0 MOV X19, X1
	0x03A3CEF4 MOV X20, X0
	0x03A3CEF8 TBNZ X8, 0x0, 0x3A3CF28
	0x03A3CEFC ADRP X0, 0x719000
	0x03A3CF00 LDR X0, [X0 + 0x838]
	0x03A3CF04 BL 0x1C16CF4
	0x03A3CF08 ADRP X0, 0x719000
	0x03A3CF0C LDR X0, [X0 + 0x848]
	0x03A3CF10 BL 0x1C16CF4
	0x03A3CF14 ADRP X0, 0x6BB000
	0x03A3CF18 LDR X0, [X0 + 0x798]
	0x03A3CF1C BL 0x1C16CF4
	0x03A3CF20 MOVZ W8, 0x1

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+16], X30
	003 Move [X31+32], X26
	004 Move [X31+40], X25
	005 Move [X31+48], X24
	006 Move [X31+56], X23
	007 Move [X31+64], X22
	008 Move [X31+72], X21
	009 Move [X31+80], X20
	010 Move [X31+88], X19
	011 Move X24, 0x9A7000
	012 Move W8, [X24+315]
	013 Move W25, W5
	014 Move X19, X4
	015 Move X20, X3
	016 Move X21, X2
	017 Move X22, X1
	018 Move X23, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {28}
	023 Move X0, 0x6B8000
	024 Move X0, [X0+1432]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X24+315], W8
	028 Compare X20, 0
	029 JumpIfEqual {114}
	030 NotImplemented "Instruction LDUR not yet implemented."
	031 Add X0, X31, 0
	032 Move X1, X31
	033 Move [X31], V0
	034 Call JobHandle.Complete, X0
	035 Compare X19, 0
	036 JumpIfEqual {114}
	037 NotImplemented "Instruction LDUR not yet implemented."
	038 Add X0, X31, 0
	039 Move X1, X31
	040 Move [X31], V0
	041 Call JobHandle.Complete, X0
	042 Move X8, [X23]
	043 Move X0, X23
	044 Move X1, X21
	045 Move X9, [X8+376]
	046 Move X2, [X8+384]
	047 NotImplemented "Instruction BLR not yet implemented."
	048 Move X8, [X23]
	049 Move X26, X0
	050 Move X0, X23
	051 Move X1, X20
	052 Move X9, [X8+392]
	053 Move X2, [X8+400]
	054 NotImplemented "Instruction BLR not yet implemented."
	055 Compare W25, 0
	056 JumpIfEqual {103}
	057 Move W24, W0
	058 Add W31, W0, 1
	059 Move X8, 0x6B8000
	060 Move X8, [X8+1432]
	061 Move X0, [X8]
	062 Move W8, [X0+224]
	063 Compare W8, 0
	064 JumpIfNotEqual {66}
	065 Call 0x1C17DFC
	066 Move X0, X26
	067 Move X1, X31
	068 Move X2, X31
	069 Call Object.op_Equality, X0, X1
	070 Move TEMP, X0
	071 And TEMP, TEMP, 1
	072 Compare TEMP, 1
	073 JumpIfEqual {103}
	074 Move X0, X31
	075 Call SystemInfo.get_supportsInstancing
	076 Move TEMP, X0
	077 And TEMP, TEMP, 1
	078 Compare TEMP, 1
	079 JumpIfNotEqual {96}
	080 Compare X26, 0
	081 JumpIfEqual {114}
	082 Move X0, X26
	083 Move X1, X31
	084 Call Material.get_enableInstancing, X0
	085 Move TEMP, X0
	086 And TEMP, TEMP, 1
	087 Compare TEMP, 1
	088 JumpIfNotEqual {96}
	089 Move X0, X23
	090 Move X1, X22
	091 Move X2, X21
	092 Move X3, X20
	093 Move X4, X19
	094 Move W5, W24
	095 Call DecalDrawSystem.DrawInstanced, X0, X1, X2, X3, X4, X5
	096 Move X0, X23
	097 Move X1, X22
	098 Move X2, X21
	099 Move X3, X20
	100 Move X4, X19
	101 Move W5, W24
	102 Call DecalDrawSystem.Draw, X0, X1, X2, X3, X4, X5
	103 Move X20, [X31+80]
	104 Move X19, [X31+88]
	105 Move X22, [X31+64]
	106 Move X21, [X31+72]
	107 Move X24, [X31+48]
	108 Move X23, [X31+56]
	109 Move X26, [X31+32]
	110 Move X25, [X31+40]
	111 Move X30, [X31+16]
	112 Add X31, X31, 96
	113 Return 
	114 Call 0x1C17F20

Method: System.Void Draw(UnityEngine.Rendering.CommandBuffer cmd, UnityEngine.Rendering.Universal.DecalEntityChunk decalEntityChunk, UnityEngine.Rendering.Universal.DecalCachedChunk decalCachedChunk, UnityEngine.Rendering.Universal.DecalDrawCallChunk decalDrawCallChunk, System.Int32 passIndex)

Disassembly:
	0x03A3D198 LDP X30, X25, [X31], #0x40
	0x03A3D19C RET
	0x03A3D1A0 STR X30, [X31 - 0x20]!
	0x03A3D1A4 STP X20, X19, [X31 + 0x10]
	0x03A3D1A8 ADRP X20, 0x9A5000
	0x03A3D1AC LDRB W8, [X20 + 0x148]
	0x03A3D1B0 MOV X19, X0
	0x03A3D1B4 TBNZ X8, 0x0, 0x3A3D1D8
	0x03A3D1B8 ADRP X0, 0x718000
	0x03A3D1BC LDR X0, [X0 + 0x850]
	0x03A3D1C0 BL 0x1C16CF4
	0x03A3D1C4 ADRP X0, 0x718000
	0x03A3D1C8 LDR X0, [X0 + 0x858]
	0x03A3D1CC BL 0x1C16CF4
	0x03A3D1D0 MOVZ W8, 0x1
	0x03A3D1D4 STRB W8, [X20 + 0x148]
	0x03A3D1D8 LDR X8, [X19 + 0x10]
	0x03A3D1DC CBZ X8, 0x3A3D20C
	0x03A3D1E0 LDR W9, [X8 + 0x1C]
	0x03A3D1E4 ADD W9, W9, 0x1
	0x03A3D1E8 STP W31, W9, [X8 + 0x18]
	0x03A3D1EC LDR X0, [X19 + 0x18]
	0x03A3D1F0 CBZ X0, 0x3A3D20C
	0x03A3D1F4 ADRP X8, 0x718000
	0x03A3D1F8 LDR X8, [X8 + 0x858]
	0x03A3D1FC LDP X20, X19, [X31 + 0x10]
	0x03A3D200 LDR X1, [X8]
	0x03A3D204 LDR X30, [X31], #0x20
	0x03A3D208 B 0x24F00AC
	0x03A3D20C BL 0x1C16F20
	0x03A3D210 STR X30, [X31 - 0x40]!
	0x03A3D214 STP X24, X23, [X31 + 0x10]
	0x03A3D218 STP X22, X21, [X31 + 0x20]
	0x03A3D21C STP X20, X19, [X31 + 0x30]
	0x03A3D220 ADRP X23, 0x9A5000
	0x03A3D224 ADRP X24, 0x718000
	0x03A3D228 ADRP X20, 0x718000
	0x03A3D22C ADRP X22, 0x6BA000
	0x03A3D230 ADRP X21, 0x6BA000
	0x03A3D234 LDRB W8, [X23 + 0x149]
	0x03A3D238 LDR X24, [X24 + 0x860]
	0x03A3D23C LDR X20, [X20 + 0x868]
	0x03A3D240 LDR X22, [X22 + 0x7A8]
	0x03A3D244 LDR X21, [X21 + 0x7A0]
	0x03A3D248 MOV X19, X0
	0x03A3D24C TBNZ X8, 0x0, 0x3A3D288
	0x03A3D250 ADRP X0, 0x718000
	0x03A3D254 LDR X0, [X0 + 0x868]
	0x03A3D258 BL 0x1C16CF4
	0x03A3D25C ADRP X0, 0x718000
	0x03A3D260 LDR X0, [X0 + 0x860]
	0x03A3D264 BL 0x1C16CF4
	0x03A3D268 ADRP X0, 0x6BA000
	0x03A3D26C LDR X0, [X0 + 0x7A0]
	0x03A3D270 BL 0x1C16CF4
	0x03A3D274 ADRP X0, 0x6BA000
	0x03A3D278 LDR X0, [X0 + 0x7A8]
	0x03A3D27C BL 0x1C16CF4
	0x03A3D280 MOVZ W8, 0x1
	0x03A3D284 STRB W8, [X23 + 0x149]
	0x03A3D288 LDR X0, [X24]
	0x03A3D28C BL 0x1C16F10
	0x03A3D290 LDR X1, [X20]
	0x03A3D294 MOV X20, X0
	0x03A3D298 BL 0x30EF9B4
	0x03A3D29C STR X20, [X19 + 0x10]
	0x03A3D2A0 LDR X0, [X22]
	0x03A3D2A4 BL 0x1C16F10
	0x03A3D2A8 LDR X1, [X21]
	0x03A3D2AC MOV X20, X0
	0x03A3D2B0 BL 0x24EFEE4
	0x03A3D2B4 STR X20, [X19 + 0x18]
	0x03A3D2B8 MOV X0, X19
	0x03A3D2BC LDP X20, X19, [X31 + 0x30]
	0x03A3D2C0 LDP X22, X21, [X31 + 0x20]
	0x03A3D2C4 LDP X24, X23, [X31 + 0x10]
	0x03A3D2C8 MOV X1, X31
	0x03A3D2CC LDR X30, [X31], #0x40
	0x03A3D2D0 B 0x33BDD8C
	0x03A3D2D4 LDR W8, [X0 + 0x10]
	0x03A3D2D8 ADD W8, W8, 0x1
	0x03A3D2DC STR W8, [X0 + 0x10]
	0x03A3D2E0 RET
	0x03A3D2E4 STP X30, X23, [X31 - 0x30]!
	0x03A3D2E8 STP X22, X21, [X31 + 0x10]
	0x03A3D2EC STP X20, X19, [X31 + 0x20]
	0x03A3D2F0 ADRP X23, 0x9A5000
	0x03A3D2F4 ADRP X22, 0x718000
	0x03A3D2F8 ADRP X21, 0x718000
	0x03A3D2FC LDRB W8, [X23 + 0x14A]
	0x03A3D300 LDR X22, [X22 + 0x870]
	0x03A3D304 LDR X21, [X21 + 0x878]
	0x03A3D308 MOV W20, W1
	0x03A3D30C MOV X19, X0
	0x03A3D310 TBNZ X8, 0x0, 0x3A3D334
	0x03A3D314 ADRP X0, 0x718000
	0x03A3D318 LDR X0, [X0 + 0x870]
	0x03A3D31C BL 0x1C16CF4
	0x03A3D320 ADRP X0, 0x718000
	0x03A3D324 LDR X0, [X0 + 0x878]
	0x03A3D328 BL 0x1C16CF4
	0x03A3D32C MOVZ W8, 0x1
	0x03A3D330 STRB W8, [X23 + 0x14A]
	0x03A3D334 LDR W3, [X19 + 0x10]
	0x03A3D338 LDR X4, [X22]
	0x03A3D33C ADD X1, X19, 0x30
	0x03A3D340 MOV X0, X19
	0x03A3D344 MOV W2, W20
	0x03A3D348 BL 0x21A8F1C
	0x03A3D34C LDR W3, [X19 + 0x10]
	0x03A3D350 LDR X4, [X21]
	0x03A3D354 ADD X1, X19, 0x40
	0x03A3D358 MOV X0, X19
	0x03A3D35C MOV W2, W20
	0x03A3D360 BL 0x21A8FAC
	0x03A3D364 ADD X0, X19, 0x48
	0x03A3D368 MOV W1, W20
	0x03A3D36C MOV X2, X31
	0x03A3D370 BL 0x3C43968
	0x03A3D374 LDR W8, [X19 + 0x10]
	0x03A3D378 LDP X22, X21, [X31 + 0x10]
	0x03A3D37C SUB W8, W8, 0x1
	0x03A3D380 STR W8, [X19 + 0x10]
	0x03A3D384 LDP X20, X19, [X31 + 0x20]
	0x03A3D388 LDP X30, X23, [X31], #0x30
	0x03A3D38C RET
	0x03A3D390 STP X30, X23, [X31 - 0x30]!
	0x03A3D394 STP X22, X21, [X31 + 0x10]
	0x03A3D398 STP X20, X19, [X31 + 0x20]
	0x03A3D39C ADRP X23, 0x9A5000
	0x03A3D3A0 ADRP X22, 0x718000
	0x03A3D3A4 ADRP X21, 0x718000
	0x03A3D3A8 LDRB W8, [X23 + 0x14B]
	0x03A3D3AC LDR X22, [X22 + 0x880]
	0x03A3D3B0 LDR X21, [X21 + 0x888]
	0x03A3D3B4 MOV W19, W1
	0x03A3D3B8 MOV X20, X0
	0x03A3D3BC TBNZ X8, 0x0, 0x3A3D3E0
	0x03A3D3C0 ADRP X0, 0x718000
	0x03A3D3C4 LDR X0, [X0 + 0x880]
	0x03A3D3C8 BL 0x1C16CF4
	0x03A3D3CC ADRP X0, 0x718000
	0x03A3D3D0 LDR X0, [X0 + 0x888]
	0x03A3D3D4 BL 0x1C16CF4
	0x03A3D3D8 MOVZ W8, 0x1
	0x03A3D3DC STRB W8, [X23 + 0x14B]
	0x03A3D3E0 LDR X2, [X22]

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Subtract X31, X31, 480
	014 Move X23, 0x9A6000
	015 Move W8, [X23+316]
	016 Move W19, W5
	017 Move X20, X4
	018 Move X21, X3
	019 Move X24, X2
	020 Move X22, X1
	021 Move X25, X0
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {37}
	026 Move X0, 0x719000
	027 Move X0, [X0+2072]
	028 Call 0x1C17CF4
	029 Move X0, 0x719000
	030 Move X0, [X0+2080]
	031 Call 0x1C17CF4
	032 Move X0, 0x719000
	033 Move X0, [X0+2088]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X23+316], W8
	037 Move X0, [X25+16]
	038 Compare X0, 0
	039 JumpIfEqual {196}
	040 Call DecalEntityManager.get_decalProjectorMesh, X0
	041 Move X8, [X25]
	042 Move X23, X0
	043 Move X0, X25
	044 Move X1, X24
	045 Move X9, [X8+376]
	046 Move X2, [X8+384]
	047 NotImplemented "Instruction BLR not yet implemented."
	048 Compare X21, 0
	049 JumpIfEqual {196}
	050 Move X24, X0
	051 Move X0, [X21+40]
	052 Compare X0, 0
	053 JumpIfEqual {196}
	054 Move X8, 0x719000
	055 Move X8, [X8+2072]
	056 Move S0, 1
	057 Move S1, 1
	058 Move S2, 1
	059 Move X1, [X8]
	060 Move S3, W31
	061 Move X2, X31
	062 Call MaterialPropertyBlock.SetVector, X0, X1, X2
	063 Compare X20, 0
	064 JumpIfEqual {196}
	065 Move X8, [X20+104]
	066 Move W8, [X8]
	067 NotImplemented "Instruction CMP not yet implemented."
	068 Move [X31+16], X8
	069 Move X29, 0x719000
	070 Move X29, [X29+2080]
	071 Move X9, X31
	072 Move X8, [X20+88]
	073 Move [X31+24], X9
	074 Add X9, X8, X9
	075 Move W8, [X9]
	076 Move W9, [X9+4]
	077 Move X8, W8
	078 NotImplemented "Instruction CMP not yet implemented."
	079 Move X26, X8
	080 ShiftRight X26, 58
	081 And X26, X26, 0x1FFFFFF
	082 Move X27, X8
	083 ShiftRight X27, 62
	084 And X27, X27, 0x1FFFFFFF
	085 Subtract W28, W9, W8
	086 Move X8, [X20+56]
	087 Move X25, [X21+40]
	088 Add X0, X31, 288
	089 Move X1, X31
	090 Add X8, X8, X26
	091 Move V0, [X8+32]
	092 Move V1, [X8+48]
	093 Move V2, [X8]
	094 Move V3, [X8+16]
	095 Add X8, X31, 352
	096 Move [X31+320], V0
	097 Move [X31+328], V1
	098 Move [X31+288], V2
	099 Move [X31+296], V3
	100 Call float4x4.op_Implicit, X0
	101 Move V0, [X31+352]
	102 Move V1, [X31+368]
	103 Move V2, [X31+384]
	104 Move V3, [X31+400]
	105 Move [X31+416], V0
	106 Move [X31+424], V1
	107 Move [X31+448], V2
	108 Move [X31+456], V3
	109 Compare X25, 0
	110 JumpIfEqual {196}
	111 Move X8, 0x719000
	112 Move X8, [X8+2088]
	113 Move V0, [X31+416]
	114 Move V1, [X31+432]
	115 Move V2, [X31+448]
	116 Move V3, [X31+464]
	117 Add X2, X31, 224
	118 Move X1, [X8]
	119 Move X0, X25
	120 Move X3, X31
	121 Move [X31+224], V0
	122 Move [X31+232], V1
	123 Move [X31+256], V2
	124 Move [X31+264], V3
	125 Call MaterialPropertyBlock.SetMatrix, X0, X1, X2
	126 Move X0, [X21+40]
	127 Compare X0, 0
	128 JumpIfEqual {196}
	129 Move X8, [X20+72]
	130 Move X1, [X29]
	131 Move X2, X31
	132 Move V0, [X8]
	133 Call MaterialPropertyBlock.SetFloat, X0, X1, V0
	134 Move X8, [X20+40]
	135 Add X0, X31, 96
	136 Move X1, X31
	137 Add X8, X8, X26
	138 Move V1, [X8+32]
	139 Move V0, [X8+48]
	140 Move V3, [X8]
	141 Move V2, [X8+16]
	142 Add X8, X31, 160
	143 Move [X31+128], V1
	144 Move [X31+136], V0
	145 Move [X31+96], V3
	146 Move [X31+104], V2
	147 Call float4x4.op_Implicit, X0
	148 Move V0, [X31+160]
	149 Move V1, [X31+176]
	150 Move V2, [X31+192]
	151 Move V3, [X31+208]
	152 Move [X31+352], V0
	153 Move [X31+360], V1
	154 Move [X31+384], V2
	155 Move [X31+392], V3
	156 Compare X22, 0
	157 JumpIfEqual {196}
	158 Move X6, [X21+40]
	159 Move V0, [X31+352]
	160 Move V1, [X31+368]
	161 Move V2, [X31+384]
	162 Move V3, [X31+400]
	163 Add X2, X31, 32
	164 Move X0, X22
	165 Move X1, X23
	166 Move X3, X24
	167 Move W4, W31
	168 Move W5, W19
	169 Move X7, X31
	170 Move [X31+32], V0
	171 Move [X31+40], V1
	172 Move [X31+64], V2
	173 Move [X31+72], V3
	174 Call CommandBuffer.DrawMesh, X0, X1, X2, X3, X4, X5, X6
	175 Add X26, X26, 64
	176 Subtract W28, W28, 1
	177 Add X27, X27, 4
	178 Move X8, [X31+16]
	179 Move X9, [X31+24]
	180 Add X9, X9, 1
	181 NotImplemented "Instruction CMP not yet implemented."
	182 Add X31, X31, 480
	183 Move X20, [X31+80]
	184 Move X19, [X31+88]
	185 Move X22, [X31+64]
	186 Move X21, [X31+72]
	187 Move X24, [X31+48]
	188 Move X23, [X31+56]
	189 Move X26, [X31+32]
	190 Move X25, [X31+40]
	191 Move X28, [X31+16]
	192 Move X27, [X31+24]
	193 Move X29, [X31+96]
	194 Move X30, [X31+104]
	195 Return 
	196 Call 0x1C17F20

Method: System.Void DrawInstanced(UnityEngine.Rendering.CommandBuffer cmd, UnityEngine.Rendering.Universal.DecalEntityChunk decalEntityChunk, UnityEngine.Rendering.Universal.DecalCachedChunk decalCachedChunk, UnityEngine.Rendering.Universal.DecalDrawCallChunk decalDrawCallChunk, System.Int32 passIndex)

Disassembly:
	0x03A3CF3C LDR X2, [X8]
	0x03A3CF40 BL 0x24F039C
	0x03A3CF44 LDR X0, [X20 + 0x10]
	0x03A3CF48 CBZ X0, 0x3A3CF8C
	0x03A3CF4C ADRP X8, 0x719000
	0x03A3CF50 LDR X8, [X8 + 0x838]
	0x03A3CF54 MOV W1, W19
	0x03A3CF58 LDR X2, [X8]
	0x03A3CF5C BL 0x30EFEBC
	0x03A3CF60 MOV X2, X0
	0x03A3CF64 LDR X0, [X20 + 0x10]
	0x03A3CF68 CBZ X0, 0x3A3CF8C
	0x03A3CF6C ADRP X8, 0x719000
	0x03A3CF70 LDR X8, [X8 + 0x848]
	0x03A3CF74 ADD W3, W1, 0x1
	0x03A3CF78 MOV W1, W19
	0x03A3CF7C LDP X20, X19, [X31 + 0x10]
	0x03A3CF80 LDR X4, [X8]
	0x03A3CF84 LDP X30, X21, [X31], #0x20
	0x03A3CF88 B 0x30EFF1C
	0x03A3CF8C BL 0x1C16F20
	0x03A3CF90 STP X30, X21, [X31 - 0x20]!
	0x03A3CF94 STP X20, X19, [X31 + 0x10]
	0x03A3CF98 ADRP X21, 0x9A6000
	0x03A3CF9C LDRB W8, [X21 + 0x145]
	0x03A3CFA0 MOV X19, X1
	0x03A3CFA4 MOV X20, X0
	0x03A3CFA8 TBNZ X8, 0x0, 0x3A3CFC0
	0x03A3CFAC ADRP X0, 0x719000
	0x03A3CFB0 LDR X0, [X0 + 0x838]
	0x03A3CFB4 BL 0x1C16CF4
	0x03A3CFB8 MOVZ W8, 0x1
	0x03A3CFBC STRB W8, [X21 + 0x145]
	0x03A3CFC0 LDR X0, [X20 + 0x10]
	0x03A3CFC4 CBZ X0, 0x3A3CFEC
	0x03A3CFC8 ADRP X8, 0x719000
	0x03A3CFCC LDR X8, [X8 + 0x838]
	0x03A3CFD0 MOV W1, W19
	0x03A3CFD4 LDR X2, [X8]
	0x03A3CFD8 BL 0x30EFEBC
	0x03A3CFDC LDP X20, X19, [X31 + 0x10]
	0x03A3CFE0 AND X1, X1, 0x0
	0x03A3CFE4 LDP X30, X21, [X31], #0x20
	0x03A3CFE8 RET
	0x03A3CFEC BL 0x1C16F20
	0x03A3CFF0 STR X30, [X31 - 0x30]!
	0x03A3CFF4 STP X22, X21, [X31 + 0x10]
	0x03A3CFF8 STP X20, X19, [X31 + 0x20]
	0x03A3CFFC ADRP X22, 0x9A6000
	0x03A3D000 LDRB W8, [X22 + 0x146]
	0x03A3D004 MOV W20, W2
	0x03A3D008 MOV X19, X1
	0x03A3D00C MOV X21, X0
	0x03A3D010 TBNZ X8, 0x0, 0x3A3D034
	0x03A3D014 ADRP X0, 0x718000
	0x03A3D018 LDR X0, [X0 + 0x838]
	0x03A3D01C BL 0x1C16CF4
	0x03A3D020 ADRP X0, 0x718000
	0x03A3D024 LDR X0, [X0 + 0x848]
	0x03A3D028 BL 0x1C16CF4
	0x03A3D02C MOVZ W8, 0x1
	0x03A3D030 STRB W8, [X22 + 0x146]
	0x03A3D034 LDR X0, [X21 + 0x10]
	0x03A3D038 CBZ X0, 0x3A3D088
	0x03A3D03C ADRP X8, 0x718000
	0x03A3D040 LDR X8, [X8 + 0x838]
	0x03A3D044 MOV W1, W19
	0x03A3D048 LDR X2, [X8]
	0x03A3D04C BL 0x30EFEBC
	0x03A3D050 LDR X8, [X21 + 0x10]
	0x03A3D054 CBZ X8, 0x3A3D088
	0x03A3D058 ADRP X9, 0x718000
	0x03A3D05C LDR X9, [X9 + 0x848]
	0x03A3D060 MOV X2, X0
	0x03A3D064 UBFM X3, X19, 0x20, 0x3F
	0x03A3D068 BFM X2, X20, 0x20, 0x1F
	0x03A3D06C LDR X4, [X9]
	0x03A3D070 MOV W1, W19
	0x03A3D074 LDP X20, X19, [X31 + 0x20]
	0x03A3D078 LDP X22, X21, [X31 + 0x10]
	0x03A3D07C MOV X0, X8
	0x03A3D080 LDR X30, [X31], #0x30
	0x03A3D084 B 0x30EFF1C
	0x03A3D088 BL 0x1C16F20
	0x03A3D08C STP X30, X25, [X31 - 0x40]!
	0x03A3D090 STP X24, X23, [X31 + 0x10]
	0x03A3D094 STP X22, X21, [X31 + 0x20]
	0x03A3D098 STP X20, X19, [X31 + 0x30]
	0x03A3D09C ADRP X21, 0x9A5000
	0x03A3D0A0 LDRB W8, [X21 + 0x147]
	0x03A3D0A4 MOV X19, X1
	0x03A3D0A8 MOV X20, X0
	0x03A3D0AC TBNZ X8, 0x0, 0x3A3D0E8
	0x03A3D0B0 ADRP X0, 0x718000
	0x03A3D0B4 LDR X0, [X0 + 0x830]
	0x03A3D0B8 BL 0x1C16CF4
	0x03A3D0BC ADRP X0, 0x718000
	0x03A3D0C0 LDR X0, [X0 + 0x838]
	0x03A3D0C4 BL 0x1C16CF4
	0x03A3D0C8 ADRP X0, 0x6E0000
	0x03A3D0CC LDR X0, [X0 + 0xF38]
	0x03A3D0D0 BL 0x1C16CF4
	0x03A3D0D4 ADRP X0, 0x718000
	0x03A3D0D8 LDR X0, [X0 + 0x848]
	0x03A3D0DC BL 0x1C16CF4
	0x03A3D0E0 MOVZ W8, 0x1
	0x03A3D0E4 STRB W8, [X21 + 0x147]
	0x03A3D0E8 LDR X0, [X20 + 0x10]
	0x03A3D0EC CBZ X0, 0x3A3D188
	0x03A3D0F0 ADRP X23, 0x718000
	0x03A3D0F4 ADRP X24, 0x6E0000
	0x03A3D0F8 ADRP X25, 0x718000
	0x03A3D0FC LDR X23, [X23 + 0x838]
	0x03A3D100 LDR X24, [X24 + 0xF38]
	0x03A3D104 LDR X25, [X25 + 0x848]
	0x03A3D108 MOV W21, W31
	0x03A3D10C LDR W8, [X0 + 0x18]
	0x03A3D110 CMP W21, W8
	0x03A3D114 B.GE 0x3A3D18C
	0x03A3D118 LDR X2, [X23]
	0x03A3D11C MOV W1, W21
	0x03A3D120 BL 0x30EFEBC
	0x03A3D124 CBZ X19, 0x3A3D188
	0x03A3D128 LDR X2, [X24]
	0x03A3D12C MOV X1, X0
	0x03A3D130 MOV X0, X19
	0x03A3D134 BL 0x2FDC41C
	0x03A3D138 LDR X8, [X20 + 0x10]
	0x03A3D13C CBZ X8, 0x3A3D188
	0x03A3D140 LDR X2, [X23]
	0x03A3D144 MOV W22, W0
	0x03A3D148 MOV X0, X8
	0x03A3D14C MOV W1, W21
	0x03A3D150 BL 0x30EFEBC
	0x03A3D154 LDR X8, [X20 + 0x10]
	0x03A3D158 CBZ X8, 0x3A3D188
	0x03A3D15C LDR X4, [X25]
	0x03A3D160 AND X9, X0, 0x0
	0x03A3D164 MOV W10, W22
	0x03A3D168 AND X3, X1, 0x0
	0x03A3D16C ORR X2, X9, X10, 0x0
	0x03A3D170 MOV X0, X8
	0x03A3D174 MOV W1, W21
	0x03A3D178 BL 0x30EFF1C
	0x03A3D17C LDR X0, [X20 + 0x10]
	0x03A3D180 ADD W21, W21, 0x1
	0x03A3D184 CBNZ X0, 0x3A3D10C
	0x03A3D188 BL 0x1C16F20
	0x03A3D18C LDP X20, X19, [X31 + 0x30]
	0x03A3D190 LDP X22, X21, [X31 + 0x20]
	0x03A3D194 LDP X24, X23, [X31 + 0x10]

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+48], X29
	003 Move [X31+56], X30
	004 Move [X31+64], X28
	005 Move [X31+72], X27
	006 Move [X31+80], X26
	007 Move [X31+88], X25
	008 Move [X31+96], X24
	009 Move [X31+104], X23
	010 Move [X31+112], X22
	011 Move [X31+120], X21
	012 Move [X31+128], X20
	013 Move [X31+136], X19
	014 Move X19, 0x9A7000
	015 Move W8, [X19+317]
	016 Move X29, X4
	017 Move X21, X3
	018 Move X25, X2
	019 Move X22, X1
	020 Move X23, X0
	021 Move [X31+44], W5
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {49}
	026 Move X0, 0x71A000
	027 Move X0, [X0+2040]
	028 Call 0x1C17CF4
	029 Move X0, 0x71A000
	030 Move X0, [X0+2048]
	031 Call 0x1C17CF4
	032 Move X0, 0x71A000
	033 Move X0, [X0+2056]
	034 Call 0x1C17CF4
	035 Move X0, 0x71A000
	036 Move X0, [X0+2064]
	037 Call 0x1C17CF4
	038 Move X0, 0x71A000
	039 Move X0, [X0+2072]
	040 Call 0x1C17CF4
	041 Move X0, 0x71A000
	042 Move X0, [X0+2080]
	043 Call 0x1C17CF4
	044 Move X0, 0x71A000
	045 Move X0, [X0+2088]
	046 Call 0x1C17CF4
	047 Move W8, 1
	048 Move [X19+317], W8
	049 Move X0, [X23+16]
	050 Compare X0, 0
	051 JumpIfEqual {177}
	052 Call DecalEntityManager.get_decalProjectorMesh, X0
	053 Move X8, [X23]
	054 Move [X31+32], X0
	055 Move X0, X23
	056 Move X1, X25
	057 Move X9, [X8+376]
	058 Move X2, [X8+384]
	059 NotImplemented "Instruction BLR not yet implemented."
	060 Move [X31+24], X0
	061 Compare X21, 0
	062 JumpIfEqual {177}
	063 Move X0, [X21+40]
	064 Compare X0, 0
	065 JumpIfEqual {177}
	066 Move X8, 0x719000
	067 Move X8, [X8+2072]
	068 Move S0, 1
	069 Move S1, 1
	070 Move S2, 1
	071 Move X1, [X8]
	072 Move S3, W31
	073 Move X2, X31
	074 Call MaterialPropertyBlock.SetVector, X0, X1, X2
	075 Compare X29, 0
	076 JumpIfEqual {177}
	077 Move X8, [X29+104]
	078 Move W8, [X8]
	079 NotImplemented "Instruction CMP not yet implemented."
	080 Add X10, X29, 40
	081 Add X9, X29, 56
	082 Move [X31+8], X9
	083 Move [X31+16], X10
	084 Move X26, 0x719000
	085 Move X27, 0x719000
	086 Move X26, [X26+2056]
	087 Move X27, [X27+2040]
	088 Move X20, X31
	089 Add X28, X29, 72
	090 Move X24, X8
	091 ShiftRight X24, 61
	092 And X24, X24, 0xFFFFFFF
	093 Move X8, [X29+88]
	094 Move X1, [X26]
	095 Move X0, [X31+16]
	096 Move X25, X29
	097 Add X8, X8, X20
	098 Move W19, [X8]
	099 Move W29, [X8+4]
	100 Call NativeArray`1<float4x4>.Reinterpret, X0
	101 Move X3, [X23+24]
	102 Move X6, [X27]
	103 Subtract W29, W29, W19
	104 Move W2, W19
	105 Move W4, W31
	106 Move W5, W29
	107 Call NativeArray`1<Matrix4x4>.Copy, X0, X1, X2, X3, X4
	108 Move X1, [X26]
	109 Move X0, [X31+8]
	110 Call NativeArray`1<float4x4>.Reinterpret, X0
	111 Move X3, [X23+32]
	112 Move X6, [X27]
	113 Move W2, W19
	114 Move W4, W31
	115 Move W5, W29
	116 Call NativeArray`1<Matrix4x4>.Copy, X0, X1, X2, X3, X4
	117 Move X8, 0x719000
	118 Move X8, [X8+2064]
	119 Move X0, X28
	120 Move X1, [X8]
	121 Call 0x2134458, X0
	122 Move X8, 0x719000
	123 Move X3, [X23+40]
	124 Move X8, [X8+2048]
	125 Move W2, W19
	126 Move W4, W31
	127 Move W5, W29
	128 Move X6, [X8]
	129 Call NativeArray`1<Single>.Copy, X0, X1, X2, X3, X4
	130 Move X0, [X21+40]
	131 Compare X0, 0
	132 JumpIfEqual {177}
	133 Move X8, 0x719000
	134 Move X2, [X23+32]
	135 Move X8, [X8+2088]
	136 Move X3, X31
	137 Move X1, [X8]
	138 Call MaterialPropertyBlock.SetMatrixArray, X0, X1, X2
	139 Move X0, [X21+40]
	140 Compare X0, 0
	141 JumpIfEqual {177}
	142 Move X8, 0x719000
	143 Move X2, [X23+40]
	144 Move X8, [X8+2080]
	145 Move X3, X31
	146 Move X1, [X8]
	147 Call MaterialPropertyBlock.SetFloatArray, X0, X1, X2
	148 Compare X22, 0
	149 JumpIfEqual {177}
	150 Move X7, [X21+40]
	151 Move X5, [X23+24]
	152 Move X3, [X31+24]
	153 Move X1, [X31+32]
	154 Move W4, [X31+44]
	155 Move X0, X22
	156 Move W2, W31
	157 Move W6, W29
	158 Move [X31], X31
	159 Call CommandBuffer.DrawMeshInstanced, X0, X1, X2, X3, X4, X5, X6, X7
	160 Add X20, X20, 8
	161 NotImplemented "Instruction CMP not yet implemented."
	162 Move X29, X25
	163 Move X20, [X31+128]
	164 Move X19, [X31+136]
	165 Move X22, [X31+112]
	166 Move X21, [X31+120]
	167 Move X24, [X31+96]
	168 Move X23, [X31+104]
	169 Move X26, [X31+80]
	170 Move X25, [X31+88]
	171 Move X28, [X31+64]
	172 Move X27, [X31+72]
	173 Move X29, [X31+48]
	174 Move X30, [X31+56]
	175 Add X31, X31, 144
	176 Return 
	177 Call 0x1C17F20

Method: System.Void Execute(in UnityEngine.Rendering.Universal.CameraData cameraData)

Disassembly:
	0x03A3D49C ADRP X21, 0x9A5000
	0x03A3D4A0 ADRP X20, 0x6B6000
	0x03A3D4A4 LDRB W8, [X21 + 0x14D]
	0x03A3D4A8 LDR X20, [X20 + 0x598]
	0x03A3D4AC MOV X19, X0
	0x03A3D4B0 TBNZ X8, 0x0, 0x3A3D4E0
	0x03A3D4B4 ADRP X0, 0x6DE000
	0x03A3D4B8 LDR X0, [X0 + 0x8F8]
	0x03A3D4BC BL 0x1C16CF4
	0x03A3D4C0 ADRP X0, 0x6B6000
	0x03A3D4C4 LDR X0, [X0 + 0x598]
	0x03A3D4C8 BL 0x1C16CF4
	0x03A3D4CC ADRP X0, 0x718000
	0x03A3D4D0 LDR X0, [X0 + 0x898]
	0x03A3D4D4 BL 0x1C16CF4
	0x03A3D4D8 MOVZ W8, 0x1
	0x03A3D4DC STRB W8, [X21 + 0x14D]
	0x03A3D4E0 LDR X0, [X20]
	0x03A3D4E4 LDR X20, [X19 + 0x70]
	0x03A3D4E8 LDR W8, [X0 + 0xE0]
	0x03A3D4EC CBNZ W8, 0x3A3D4F4
	0x03A3D4F0 BL 0x1C16DFC
	0x03A3D4F4 MOV X0, X20
	0x03A3D4F8 MOV X1, X31
	0x03A3D4FC MOV X2, X31
	0x03A3D500 BL 0x3C3883C
	0x03A3D504 TBZ X0, 0x0, 0x3A3D550
	0x03A3D508 ADRP X8, 0x718000
	0x03A3D50C LDR X8, [X8 + 0x898]
	0x03A3D510 ADRP X20, 0x6DE000
	0x03A3D514 MOV X1, X31
	0x03A3D518 LDR X0, [X8]
	0x03A3D51C LDR X20, [X20 + 0x8F8]
	0x03A3D520 BL 0x3C13E40
	0x03A3D524 LDR X8, [X20]
	0x03A3D528 MOV X20, X0
	0x03A3D52C LDR W9, [X8 + 0xE0]
	0x03A3D530 CBNZ W9, 0x3A3D53C
	0x03A3D534 MOV X0, X8
	0x03A3D538 BL 0x1C16DFC
	0x03A3D53C MOV X0, X20
	0x03A3D540 MOV X1, X31
	0x03A3D544 BL 0x39E1920
	0x03A3D548 STR X0, [X19 + 0x70]
	0x03A3D54C B 0x3A3D554
	0x03A3D550 LDR X0, [X19 + 0x70]
	0x03A3D554 LDP X20, X19, [X31 + 0x10]
	0x03A3D558 LDP X30, X21, [X31], #0x20
	0x03A3D55C RET
	0x03A3D560 STP X29, X30, [X31 - 0x60]!
	0x03A3D564 STP X28, X27, [X31 + 0x10]
	0x03A3D568 STP X26, X25, [X31 + 0x20]
	0x03A3D56C STP X24, X23, [X31 + 0x30]
	0x03A3D570 STP X22, X21, [X31 + 0x40]
	0x03A3D574 STP X20, X19, [X31 + 0x50]
	0x03A3D578 ADRP X21, 0x9A5000
	0x03A3D57C ADRP X23, 0x718000
	0x03A3D580 ADRP X20, 0x718000
	0x03A3D584 ADRP X29, 0x718000
	0x03A3D588 ADRP X28, 0x718000
	0x03A3D58C ADRP X27, 0x718000
	0x03A3D590 ADRP X26, 0x718000
	0x03A3D594 ADRP X25, 0x718000
	0x03A3D598 ADRP X24, 0x718000
	0x03A3D59C ADRP X22, 0x713000
	0x03A3D5A0 LDR X23, [X23 + 0x8A0]
	0x03A3D5A4 LDR X20, [X20 + 0x8A8]
	0x03A3D5A8 LDR X29, [X29 + 0x8B0]
	0x03A3D5AC LDR X28, [X28 + 0x8B8]
	0x03A3D5B0 LDR X27, [X27 + 0x8C0]
	0x03A3D5B4 LDR X26, [X26 + 0x8C8]
	0x03A3D5B8 LDR X25, [X25 + 0x8D0]
	0x03A3D5BC LDR X24, [X24 + 0x8D8]
	0x03A3D5C0 LDRB W8, [X21 + 0x14F]
	0x03A3D5C4 LDR X22, [X22 + 0x598]
	0x03A3D5C8 MOV X19, X0
	0x03A3D5CC TBNZ X8, 0x0, 0x3A3D6BC
	0x03A3D5D0 ADRP X0, 0x718000
	0x03A3D5D4 LDR X0, [X0 + 0x8E0]
	0x03A3D5D8 BL 0x1C16CF4
	0x03A3D5DC ADRP X0, 0x718000
	0x03A3D5E0 LDR X0, [X0 + 0x8E8]
	0x03A3D5E4 BL 0x1C16CF4
	0x03A3D5E8 ADRP X0, 0x718000
	0x03A3D5EC LDR X0, [X0 + 0x8F0]
	0x03A3D5F0 BL 0x1C16CF4
	0x03A3D5F4 ADRP X0, 0x6BA000
	0x03A3D5F8 LDR X0, [X0 + 0xB70]
	0x03A3D5FC BL 0x1C16CF4
	0x03A3D600 ADRP X0, 0x718000
	0x03A3D604 LDR X0, [X0 + 0x8A8]
	0x03A3D608 BL 0x1C16CF4
	0x03A3D60C ADRP X0, 0x718000
	0x03A3D610 LDR X0, [X0 + 0x8F8]
	0x03A3D614 BL 0x1C16CF4
	0x03A3D618 ADRP X0, 0x718000
	0x03A3D61C LDR X0, [X0 + 0x8C8]
	0x03A3D620 BL 0x1C16CF4
	0x03A3D624 ADRP X0, 0x718000
	0x03A3D628 LDR X0, [X0 + 0x8D8]
	0x03A3D62C BL 0x1C16CF4
	0x03A3D630 ADRP X0, 0x718000
	0x03A3D634 LDR X0, [X0 + 0x8B8]
	0x03A3D638 BL 0x1C16CF4
	0x03A3D63C ADRP X0, 0x6B7000
	0x03A3D640 LDR X0, [X0 + 0xE30]
	0x03A3D644 BL 0x1C16CF4
	0x03A3D648 ADRP X0, 0x718000
	0x03A3D64C LDR X0, [X0 + 0x8B0]
	0x03A3D650 BL 0x1C16CF4
	0x03A3D654 ADRP X0, 0x718000
	0x03A3D658 LDR X0, [X0 + 0x8C0]
	0x03A3D65C BL 0x1C16CF4
	0x03A3D660 ADRP X0, 0x718000
	0x03A3D664 LDR X0, [X0 + 0x8A0]
	0x03A3D668 BL 0x1C16CF4
	0x03A3D66C ADRP X0, 0x718000
	0x03A3D670 LDR X0, [X0 + 0x900]
	0x03A3D674 BL 0x1C16CF4
	0x03A3D678 ADRP X0, 0x718000
	0x03A3D67C LDR X0, [X0 + 0x8D0]
	0x03A3D680 BL 0x1C16CF4
	0x03A3D684 ADRP X0, 0x713000
	0x03A3D688 LDR X0, [X0 + 0x598]
	0x03A3D68C BL 0x1C16CF4
	0x03A3D690 ADRP X0, 0x718000
	0x03A3D694 LDR X0, [X0 + 0x908]
	0x03A3D698 BL 0x1C16CF4
	0x03A3D69C ADRP X0, 0x718000
	0x03A3D6A0 LDR X0, [X0 + 0x910]
	0x03A3D6A4 BL 0x1C16CF4
	0x03A3D6A8 ADRP X0, 0x718000
	0x03A3D6AC LDR X0, [X0 + 0x918]
	0x03A3D6B0 BL 0x1C16CF4
	0x03A3D6B4 MOVZ W8, 0x1
	0x03A3D6B8 STRB W8, [X21 + 0x14F]
	0x03A3D6BC LDR X0, [X23]

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+16], X30
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X21, 0x9A6000
	013 Move W8, [X21+318]
	014 Move X19, X1
	015 Move X20, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {31}
	020 Move X0, 0x719000
	021 Move X0, [X0+2008]
	022 Call 0x1C17CF4
	023 Move X0, 0x719000
	024 Move X0, [X0+2016]
	025 Call 0x1C17CF4
	026 Move X0, 0x719000
	027 Move X0, [X0+2032]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X21+318], W8
	031 Move [X31+8], W31
	032 Move X2, [X20+48]
	033 Add X0, X31, 8
	034 Move X1, X31
	035 Move X3, X31
	036 Call ProfilingScope..ctor, X0, X1, X2
	037 Move X8, [X20+16]
	038 Compare X8, 0
	039 JumpIfEqual {98}
	040 Move X25, 0x719000
	041 Move X26, 0x719000
	042 Move X27, 0x719000
	043 Move X25, [X25+2032]
	044 Move X26, [X26+2016]
	045 Move X27, [X27+2008]
	046 Move W21, W31
	047 Move W9, [X8+48]
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Move X0, [X8+16]
	050 Compare X0, 0
	051 JumpIfEqual {118}
	052 Move X2, [X25]
	053 Move W1, W21
	054 Call List`1<Object>.get_Item, X0, X1
	055 Move X8, [X20+16]
	056 Compare X8, 0
	057 JumpIfEqual {115}
	058 Move X22, X0
	059 Move X0, [X8+24]
	060 Compare X0, 0
	061 JumpIfEqual {116}
	062 Move X2, [X26]
	063 Move W1, W21
	064 Call List`1<Object>.get_Item, X0, X1
	065 Move X8, [X20+16]
	066 Compare X8, 0
	067 JumpIfEqual {114}
	068 Move X23, X0
	069 Move X0, [X8+40]
	070 Compare X0, 0
	071 JumpIfEqual {119}
	072 Move X2, [X27]
	073 Move W1, W21
	074 Call List`1<Object>.get_Item, X0, X1
	075 Move X8, [X20+16]
	076 Compare X8, 0
	077 JumpIfEqual {120}
	078 Move X24, X0
	079 Move X0, [X8+16]
	080 Compare X0, 0
	081 JumpIfEqual {117}
	082 Move X2, [X25]
	083 Move W1, W21
	084 Call List`1<Object>.get_Item, X0, X1
	085 Compare X0, 0
	086 JumpIfEqual {121}
	087 Move W5, [X0+16]
	088 Move X0, X20
	089 Move X1, X19
	090 Move X2, X22
	091 Move X3, X23
	092 Move X4, X24
	093 Call DecalDrawSystem.Execute, X0, X1, X2, X3, X4, X5
	094 Move X8, [X20+16]
	095 Add W21, W21, 1
	096 Compare X8, 0
	097 JumpIfNotEqual {47}
	098 Call 0x1C17F20
	099 Add X0, X31, 8
	100 Move X1, X31
	101 Call ProfilingScope.Dispose, X0
	102 Move X20, [X31+80]
	103 Move X19, [X31+88]
	104 Move X22, [X31+64]
	105 Move X21, [X31+72]
	106 Move X24, [X31+48]
	107 Move X23, [X31+56]
	108 Move X26, [X31+32]
	109 Move X25, [X31+40]
	110 Move X30, [X31+16]
	111 Move X27, [X31+24]
	112 Add X31, X31, 96
	113 Return 
	114 Call 0x1C17F20
	115 Call 0x1C17F20
	116 Call 0x1C17F20
	117 Call 0x1C17F20
	118 Call 0x1C17F20
	119 Call 0x1C17F20
	120 Call 0x1C17F20
	121 Call 0x1C17F20
	122 Move X19, X0
	123 NotImplemented "Instruction CMP not yet implemented."
	124 Move X0, X19
	125 Call 0x3EB2AD0
	126 Move X20, [X0]
	127 Call 0x3EB2AE0
	128 Add X0, X31, 8
	129 Move X1, X31
	130 Call ProfilingScope.Dispose, X0
	131 Compare X20, 0
	132 JumpIfEqual {102}
	133 Move X0, X20
	134 Call 0x1C17F18
	135 Move X20, X31
	136 Move X19, X0
	137 Add X0, X31, 8
	138 Move X1, X31
	139 Call ProfilingScope.Dispose, X0
	140 Compare X20, 0
	141 JumpIfNotEqual {144}
	142 Move X0, X19
	143 Call 0x1D2D690
	144 Move X0, X20
	145 Call 0x1C17F18
	146 Call 0x1991590

Method: System.Void Execute(in UnityEngine.Rendering.Universal.CameraData cameraData, UnityEngine.Rendering.Universal.DecalEntityChunk decalEntityChunk, UnityEngine.Rendering.Universal.DecalCachedChunk decalCachedChunk, UnityEngine.Rendering.Universal.DecalDrawCallChunk decalDrawCallChunk, System.Int32 count)

Disassembly:
	0x03A3D6C0 BL 0x1C16F10
	0x03A3D6C4 LDR X1, [X20]
	0x03A3D6C8 MOV X20, X0
	0x03A3D6CC BL 0x301B7C4
	0x03A3D6D0 STR X20, [X19 + 0x10]
	0x03A3D6D4 LDR X0, [X29]
	0x03A3D6D8 BL 0x1C16F10
	0x03A3D6DC LDR X1, [X28]
	0x03A3D6E0 MOV X20, X0
	0x03A3D6E4 BL 0x301B7C4
	0x03A3D6E8 STR X20, [X19 + 0x18]
	0x03A3D6EC LDR X0, [X27]
	0x03A3D6F0 BL 0x1C16F10
	0x03A3D6F4 LDR X1, [X26]
	0x03A3D6F8 MOV X20, X0
	0x03A3D6FC BL 0x301B7C4
	0x03A3D700 STR X20, [X19 + 0x20]
	0x03A3D704 LDR X0, [X25]
	0x03A3D708 BL 0x1C16F10
	0x03A3D70C LDR X1, [X24]
	0x03A3D710 MOV X20, X0
	0x03A3D714 BL 0x301B7C4
	0x03A3D718 STR X20, [X19 + 0x28]
	0x03A3D71C ADRP X8, 0x718000
	0x03A3D720 LDR X8, [X8 + 0x8E0]
	0x03A3D724 LDR X0, [X8]
	0x03A3D728 BL 0x1C16F10
	0x03A3D72C MOV X20, X0
	0x03A3D730 BL 0x3A3D210
	0x03A3D734 STR X20, [X19 + 0x50]
	0x03A3D738 ADRP X8, 0x718000
	0x03A3D73C LDR X8, [X8 + 0x8F0]
	0x03A3D740 LDR X0, [X8]
	0x03A3D744 BL 0x1C16F10
	0x03A3D748 ADRP X8, 0x718000
	0x03A3D74C LDR X8, [X8 + 0x8E8]
	0x03A3D750 MOV X20, X0
	0x03A3D754 LDR X1, [X8]
	0x03A3D758 BL 0x2A9E704
	0x03A3D75C STR X20, [X19 + 0x58]
	0x03A3D760 ADRP X8, 0x718000
	0x03A3D764 LDR X8, [X8 + 0x900]
	0x03A3D768 LDR X0, [X8]
	0x03A3D76C BL 0x1C16F10
	0x03A3D770 ADRP X8, 0x718000
	0x03A3D774 LDR X8, [X8 + 0x8F8]
	0x03A3D778 MOV X20, X0
	0x03A3D77C LDR X1, [X8]
	0x03A3D780 BL 0x30F25D0
	0x03A3D784 STR X20, [X19 + 0x60]
	0x03A3D788 ADRP X8, 0x6B7000
	0x03A3D78C LDR X8, [X8 + 0xE30]
	0x03A3D790 LDR X0, [X8]
	0x03A3D794 BL 0x1C16F10
	0x03A3D798 ADRP X8, 0x6BA000
	0x03A3D79C LDR X8, [X8 + 0xB70]
	0x03A3D7A0 MOV X20, X0
	0x03A3D7A4 LDR X1, [X8]
	0x03A3D7A8 BL 0x2FDBF14
	0x03A3D7AC MOV X0, X19
	0x03A3D7B0 MOV X1, X31
	0x03A3D7B4 STR X20, [X19 + 0x68]
	0x03A3D7B8 BL 0x33BDD8C
	0x03A3D7BC LDR X0, [X22]
	0x03A3D7C0 BL 0x1C16F10
	0x03A3D7C4 ADRP X8, 0x718000
	0x03A3D7C8 LDR X8, [X8 + 0x908]
	0x03A3D7CC MOV X2, X31
	0x03A3D7D0 MOV X20, X0
	0x03A3D7D4 LDR X1, [X8]
	0x03A3D7D8 BL 0x39B19AC
	0x03A3D7DC STR X20, [X19 + 0x38]
	0x03A3D7E0 LDR X0, [X22]
	0x03A3D7E4 BL 0x1C16F10
	0x03A3D7E8 ADRP X8, 0x718000
	0x03A3D7EC LDR X8, [X8 + 0x918]
	0x03A3D7F0 MOV X2, X31
	0x03A3D7F4 MOV X20, X0
	0x03A3D7F8 LDR X1, [X8]
	0x03A3D7FC BL 0x39B19AC
	0x03A3D800 STR X20, [X19 + 0x40]
	0x03A3D804 LDR X0, [X22]
	0x03A3D808 BL 0x1C16F10
	0x03A3D80C ADRP X8, 0x718000

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X25, 0x9A6000
	011 Move W8, [X25+319]
	012 Move W24, W5
	013 Move X19, X4
	014 Move X20, X3
	015 Move X21, X2
	016 Move X22, X1
	017 Move X23, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {27}
	022 Move X0, 0x6B7000
	023 Move X0, [X0+1432]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X25+319], W8
	027 Compare X20, 0
	028 JumpIfEqual {109}
	029 NotImplemented "Instruction LDUR not yet implemented."
	030 Add X0, X31, 0
	031 Move X1, X31
	032 Move [X31], V0
	033 Call JobHandle.Complete, X0
	034 Compare X19, 0
	035 JumpIfEqual {109}
	036 NotImplemented "Instruction LDUR not yet implemented."
	037 Add X0, X31, 0
	038 Move X1, X31
	039 Move [X31], V0
	040 Call JobHandle.Complete, X0
	041 Move X8, [X23]
	042 Move X0, X23
	043 Move X1, X21
	044 Move X9, [X8+376]
	045 Move X2, [X8+384]
	046 NotImplemented "Instruction BLR not yet implemented."
	047 Move X8, [X23]
	048 Move X25, X0
	049 Move X0, X23
	050 Move X1, X20
	051 Move X9, [X8+392]
	052 Move X2, [X8+400]
	053 NotImplemented "Instruction BLR not yet implemented."
	054 Compare W24, 0
	055 JumpIfEqual {99}
	056 Add W31, W0, 1
	057 Move X8, 0x6B7000
	058 Move X8, [X8+1432]
	059 Move X0, [X8]
	060 Move W8, [X0+224]
	061 Compare W8, 0
	062 JumpIfNotEqual {64}
	063 Call 0x1C17DFC
	064 Move X0, X25
	065 Move X1, X31
	066 Move X2, X31
	067 Call Object.op_Equality, X0, X1
	068 Move TEMP, X0
	069 And TEMP, TEMP, 1
	070 Compare TEMP, 1
	071 JumpIfEqual {99}
	072 Move X0, X31
	073 Call SystemInfo.get_supportsInstancing
	074 Move TEMP, X0
	075 And TEMP, TEMP, 1
	076 Compare TEMP, 1
	077 JumpIfNotEqual {93}
	078 Compare X25, 0
	079 JumpIfEqual {109}
	080 Move X0, X25
	081 Move X1, X31
	082 Call Material.get_enableInstancing, X0
	083 Move TEMP, X0
	084 And TEMP, TEMP, 1
	085 Compare TEMP, 1
	086 JumpIfNotEqual {93}
	087 Move X0, X23
	088 Move X1, X22
	089 Move X2, X21
	090 Move X3, X20
	091 Move X4, X19
	092 Call DecalDrawSystem.DrawInstanced, X0, X1, X2, X3, X4
	093 Move X0, X23
	094 Move X1, X22
	095 Move X2, X21
	096 Move X3, X20
	097 Move X4, X19
	098 Call DecalDrawSystem.Draw, X0, X1, X2, X3, X4
	099 Move X20, [X31+64]
	100 Move X19, [X31+72]
	101 Move X22, [X31+48]
	102 Move X21, [X31+56]
	103 Move X24, [X31+32]
	104 Move X23, [X31+40]
	105 Move X30, [X31+16]
	106 Move X25, [X31+24]
	107 Add X31, X31, 80
	108 Return 
	109 Call 0x1C17F20

Method: System.Void Draw(in UnityEngine.Rendering.Universal.CameraData cameraData, UnityEngine.Rendering.Universal.DecalEntityChunk decalEntityChunk, UnityEngine.Rendering.Universal.DecalCachedChunk decalCachedChunk, UnityEngine.Rendering.Universal.DecalDrawCallChunk decalDrawCallChunk)

Disassembly:
	0x03A3DA94 MOVZ W9, 0x8
	0x03A3DA98 ADD W8, W8, W29
	0x03A3DA9C CMP W8, 0x8
	0x03A3DAA0 CSEL W27, W8, W9, GT
	0x03A3DAA4 CBZ X23, 0x3A3DC78
	0x03A3DAA8 LDR X8, [X23]
	0x03A3DAAC LDP X9, X2, [X8 + 0x1A8]
	0x03A3DAB0 MOV X0, X23
	0x03A3DAB4 MOV W1, W27
	0x03A3DAB8 BLR X9
	0x03A3DABC CBZ X24, 0x3A3DC84
	0x03A3DAC0 LDR X8, [X24]
	0x03A3DAC4 LDP X9, X2, [X8 + 0x1A8]
	0x03A3DAC8 MOV X0, X24
	0x03A3DACC MOV W1, W27
	0x03A3DAD0 BLR X9
	0x03A3DAD4 CBZ X25, 0x3A3DC88
	0x03A3DAD8 LDR X8, [X25]
	0x03A3DADC LDP X9, X2, [X8 + 0x1A8]
	0x03A3DAE0 MOV X0, X25
	0x03A3DAE4 MOV W1, W27
	0x03A3DAE8 BLR X9
	0x03A3DAEC CBZ X26, 0x3A3DC8C
	0x03A3DAF0 LDR X8, [X26]
	0x03A3DAF4 LDP X9, X2, [X8 + 0x1A8]
	0x03A3DAF8 MOV X0, X26
	0x03A3DAFC MOV W1, W27
	0x03A3DB00 BLR X9
	0x03A3DB04 MOV X27, X31
	0x03A3DB08 MOVZ W28, 0x3
	0x03A3DB0C ADD X0, X31, 0x10
	0x03A3DB10 MOV X1, X31
	0x03A3DB14 BL 0x39B1DB4
	0x03A3DB18 CBNZ X27, 0x3A3DC7C
	0x03A3DB1C CMP W28, 0x3
	0x03A3DB20 B.EQ 0x3A3DB28
	0x03A3DB24 CBNZ W28, 0x3A3DC0C
	0x03A3DB28 CBZ X23, 0x3A3DC44
	0x03A3DB2C LDR X8, [X23]
	0x03A3DB30 LDP X9, X1, [X8 + 0x188]
	0x03A3DB34 MOV X0, X23
	0x03A3DB38 BLR X9
	0x03A3DB3C CBZ X24, 0x3A3DC48
	0x03A3DB40 LDR X8, [X24]
	0x03A3DB44 LDP X9, X1, [X8 + 0x188]
	0x03A3DB48 MOV X0, X24
	0x03A3DB4C BLR X9
	0x03A3DB50 CBZ X25, 0x3A3DC4C
	0x03A3DB54 LDR X8, [X25]
	0x03A3DB58 LDP X9, X1, [X8 + 0x188]
	0x03A3DB5C MOV X0, X25
	0x03A3DB60 BLR X9
	0x03A3DB64 CBZ X26, 0x3A3DC50
	0x03A3DB68 LDR X8, [X26]
	0x03A3DB6C LDP X9, X1, [X8 + 0x188]
	0x03A3DB70 MOV X0, X26
	0x03A3DB74 BLR X9
	0x03A3DB78 LDR X24, [X23 + 0x40]
	0x03A3DB7C CBZ X24, 0x3A3DC54
	0x03A3DB80 LDR X8, [X24]
	0x03A3DB84 LDR X1, [X8 + 0x40]
	0x03A3DB88 MOV X0, X19
	0x03A3DB8C BL 0x1C16E00
	0x03A3DB90 CBZ X0, 0x3A3DC58
	0x03A3DB94 LDR W8, [X24 + 0x18]
	0x03A3DB98 CMP W22, W8
	0x03A3DB9C B.CS 0x3A3DC64
	0x03A3DBA0 ADD X8, X24, X22, 0x3, LSL
	0x03A3DBA4 STR X19, [X8 + 0x20]
	0x03A3DBA8 LDR X8, [X23 + 0x30]
	0x03A3DBAC STR X21, [X8, X22, LSL #3]
	0x03A3DBB0 MOV X0, X19
	0x03A3DBB4 MOV X1, X31
	0x03A3DBB8 BL 0x3C32E90
	0x03A3DBBC MOV X1, X0
	0x03A3DBC0 ADD X0, X23, 0x48
	0x03A3DBC4 MOV X2, X31
	0x03A3DBC8 BL 0x3C438E0
	0x03A3DBCC MOV X0, X20
	0x03A3DBD0 MOV X1, X21
	0x03A3DBD4 MOV X2, X19
	0x03A3DBD8 BL 0x3A3E2C4
	0x03A3DBDC ADD X0, X31, 0x18
	0x03A3DBE0 MOV X1, X31
	0x03A3DBE4 BL 0x39B1DB4
	0x03A3DBE8 MOV X0, X21
	0x03A3DBEC LDP X20, X19, [X31 + 0x70]
	0x03A3DBF0 LDP X22, X21, [X31 + 0x60]
	0x03A3DBF4 LDP X24, X23, [X31 + 0x50]
	0x03A3DBF8 LDP X26, X25, [X31 + 0x40]
	0x03A3DBFC LDP X28, X27, [X31 + 0x30]
	0x03A3DC00 LDP X29, X30, [X31 + 0x20]
	0x03A3DC04 ADD X31, X31, 0x80
	0x03A3DC08 RET
	0x03A3DC0C MOV X21, X31
	0x03A3DC10 B 0x3A3DBDC
	0x03A3DC14 BL 0x1C16F20
	0x03A3DC18 BL 0x1C16F20
	0x03A3DC1C BL 0x1C16F20
	0x03A3DC20 BL 0x1C16F20
	0x03A3DC24 BL 0x1C16F20
	0x03A3DC28 BL 0x1C16F20
	0x03A3DC2C BL 0x1C16F20
	0x03A3DC30 BL 0x1C16F20
	0x03A3DC34 BL 0x1C16F20
	0x03A3DC38 BL 0x1C16F20
	0x03A3DC3C BL 0x1C16F20
	0x03A3DC40 BL 0x1C16F20
	0x03A3DC44 BL 0x1C16F20
	0x03A3DC48 BL 0x1C16F20
	0x03A3DC4C BL 0x1C16F20
	0x03A3DC50 BL 0x1C16F20
	0x03A3DC54 BL 0x1C16F20
	0x03A3DC58 BL 0x1C16F44
	0x03A3DC5C MOV X1, X31
	0x03A3DC60 BL 0x1C16DEC
	0x03A3DC64 BL 0x1C16F28
	0x03A3DC68 BL 0x1C16F20
	0x03A3DC6C BL 0x1C16F20
	0x03A3DC70 BL 0x1C16F20
	0x03A3DC74 BL 0x1C16F20
	0x03A3DC78 BL 0x1C16F20
	0x03A3DC7C MOV X0, X27
	0x03A3DC80 BL 0x1C16F18
	0x03A3DC84 BL 0x1C16F20
	0x03A3DC88 BL 0x1C16F20
	0x03A3DC8C BL 0x1C16F20
	0x03A3DC90 B 0x3A3DCB8
	0x03A3DC94 B 0x3A3DCB8
	0x03A3DC98 B 0x3A3DD6C
	0x03A3DC9C B 0x3A3DD6C
	0x03A3DCA0 B 0x3A3DCB8
	0x03A3DCA4 B 0x3A3DCB8
	0x03A3DCA8 B 0x3A3DCB8
	0x03A3DCAC B 0x3A3DD6C
	0x03A3DCB0 B 0x3A3DCB8
	0x03A3DCB4 B 0x3A3DCB8
	0x03A3DCB8 MOV X27, X1
	0x03A3DCBC MOV X28, X0
	0x03A3DCC0 CMP W27, 0x1
	0x03A3DCC4 B.NE 0x3A3DCE8
	0x03A3DCC8 MOV X0, X28
	0x03A3DCCC BL 0x3EB1AD0
	0x03A3DCD0 LDR X8, [X0]

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Subtract X31, X31, 480
	014 Move X22, 0x9A6000
	015 Move W8, [X22+320]
	016 Move X19, X4
	017 Move X20, X3
	018 Move X23, X2
	019 Move X21, X1
	020 Move X24, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {36}
	025 Move X0, 0x6BB000
	026 Move X0, [X0+712]
	027 Call 0x1C17CF4
	028 Move X0, 0x719000
	029 Move X0, [X0+2080]
	030 Call 0x1C17CF4
	031 Move X0, 0x719000
	032 Move X0, [X0+2088]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X22+320], W8
	036 Move X0, [X24+16]
	037 Compare X0, 0
	038 JumpIfEqual {192}
	039 Call DecalEntityManager.get_decalProjectorMesh, X0
	040 Move X8, [X24]
	041 Move X22, X0
	042 Move X0, X24
	043 Move X1, X23
	044 Move X9, [X8+376]
	045 Move X2, [X8+384]
	046 NotImplemented "Instruction BLR not yet implemented."
	047 Compare X19, 0
	048 JumpIfEqual {192}
	049 Move X8, [X19+104]
	050 Move W8, [X8]
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Move [X31+16], X8
	053 Move X23, X0
	054 Move X9, X31
	055 Move X8, [X19+88]
	056 Move [X31+24], X9
	057 Add X9, X8, X9
	058 Move W8, [X9]
	059 Move W9, [X9+4]
	060 Move X8, W8
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Compare X20, 0
	063 JumpIfEqual {192}
	064 Move X29, X8
	065 ShiftRight X29, 58
	066 And X29, X29, 0x1FFFFFF
	067 Move X27, X8
	068 ShiftRight X27, 62
	069 And X27, X27, 0x1FFFFFFF
	070 Subtract W28, W9, W8
	071 Move X8, [X19+56]
	072 Move X24, [X20+40]
	073 Add X0, X31, 288
	074 Move X1, X31
	075 Add X8, X8, X29
	076 Move V0, [X8+32]
	077 Move V1, [X8+48]
	078 Move V2, [X8]
	079 Move V3, [X8+16]
	080 Add X8, X31, 352
	081 Move [X31+320], V0
	082 Move [X31+328], V1
	083 Move [X31+288], V2
	084 Move [X31+296], V3
	085 Call float4x4.op_Implicit, X0
	086 Move V0, [X31+352]
	087 Move V1, [X31+368]
	088 Move V2, [X31+384]
	089 Move V3, [X31+400]
	090 Move [X31+416], V0
	091 Move [X31+424], V1
	092 Move [X31+448], V2
	093 Move [X31+456], V3
	094 Compare X24, 0
	095 JumpIfEqual {192}
	096 Move X8, 0x719000
	097 Move X8, [X8+2088]
	098 Move V0, [X31+416]
	099 Move V1, [X31+432]
	100 Move V2, [X31+448]
	101 Move V3, [X31+464]
	102 Add X2, X31, 224
	103 Move X1, [X8]
	104 Move X0, X24
	105 Move X3, X31
	106 Move [X31+224], V0
	107 Move [X31+232], V1
	108 Move [X31+256], V2
	109 Move [X31+264], V3
	110 Call MaterialPropertyBlock.SetMatrix, X0, X1, X2
	111 Move X0, [X20+40]
	112 Compare X0, 0
	113 JumpIfEqual {192}
	114 Move X8, [X19+72]
	115 Move X2, X31
	116 Move V0, [X8]
	117 Move X8, 0x719000
	118 Move X8, [X8+2080]
	119 Move X1, [X8]
	120 Call MaterialPropertyBlock.SetFloat, X0, X1, V0
	121 Move X8, [X19+40]
	122 Add X0, X31, 96
	123 Move X1, X31
	124 Add X8, X8, X29
	125 Move V1, [X8+32]
	126 Move V0, [X8+48]
	127 Move V3, [X8]
	128 Move V2, [X8+16]
	129 Add X8, X31, 160
	130 Move [X31+128], V1
	131 Move [X31+136], V0
	132 Move [X31+96], V3
	133 Move [X31+104], V2
	134 Call float4x4.op_Implicit, X0
	135 Move V0, [X31+160]
	136 Move V1, [X31+176]
	137 Move V2, [X31+192]
	138 Move V3, [X31+208]
	139 Move X8, 0x6BB000
	140 Move X8, [X8+712]
	141 Move [X31+352], V0
	142 Move [X31+360], V1
	143 Move [X31+384], V2
	144 Move [X31+392], V3
	145 Move X25, [X21+192]
	146 Move X0, [X8]
	147 Move X8, [X20+168]
	148 Move X24, [X20+40]
	149 Move W9, [X0+224]
	150 Move W26, [X8]
	151 Compare W9, 0
	152 JumpIfNotEqual {154}
	153 Call 0x1C17DFC
	154 Move V0, [X31+352]
	155 Move V1, [X31+368]
	156 Move V2, [X31+384]
	157 Move V3, [X31+400]
	158 Add X1, X31, 32
	159 Move X0, X22
	160 Move X2, X23
	161 Move W3, W26
	162 Move X4, X25
	163 Move W5, W31
	164 Move X6, X24
	165 Move X7, X31
	166 Move [X31+32], V0
	167 Move [X31+40], V1
	168 Move [X31+64], V2
	169 Move [X31+72], V3
	170 Call Graphics.DrawMesh, X0, X1, X2, X3, X4, X5, X6
	171 Add X29, X29, 64
	172 Subtract W28, W28, 1
	173 Add X27, X27, 4
	174 Move X8, [X31+16]
	175 Move X9, [X31+24]
	176 Add X9, X9, 1
	177 NotImplemented "Instruction CMP not yet implemented."
	178 Add X31, X31, 480
	179 Move X20, [X31+80]
	180 Move X19, [X31+88]
	181 Move X22, [X31+64]
	182 Move X21, [X31+72]
	183 Move X24, [X31+48]
	184 Move X23, [X31+56]
	185 Move X26, [X31+32]
	186 Move X25, [X31+40]
	187 Move X28, [X31+16]
	188 Move X27, [X31+24]
	189 Move X29, [X31+96]
	190 Move X30, [X31+104]
	191 Return 
	192 Call 0x1C17F20

Method: System.Void DrawInstanced(in UnityEngine.Rendering.Universal.CameraData cameraData, UnityEngine.Rendering.Universal.DecalEntityChunk decalEntityChunk, UnityEngine.Rendering.Universal.DecalCachedChunk decalCachedChunk, UnityEngine.Rendering.Universal.DecalDrawCallChunk decalDrawCallChunk)

Disassembly:
	0x03A3D810 LDR X8, [X8 + 0x910]
	0x03A3D814 MOV X2, X31
	0x03A3D818 MOV X20, X0
	0x03A3D81C LDR X1, [X8]
	0x03A3D820 BL 0x39B19AC
	0x03A3D824 STR X20, [X19 + 0x48]
	0x03A3D828 LDP X20, X19, [X31 + 0x50]
	0x03A3D82C LDP X22, X21, [X31 + 0x40]
	0x03A3D830 LDP X24, X23, [X31 + 0x30]
	0x03A3D834 LDP X26, X25, [X31 + 0x20]
	0x03A3D838 LDP X28, X27, [X31 + 0x10]
	0x03A3D83C LDP X29, X30, [X31], #0x60
	0x03A3D840 RET
	0x03A3D844 STR X30, [X31 - 0x10]!
	0x03A3D848 LDR X0, [X0 + 0x50]
	0x03A3D84C CBZ X0, 0x3A3D858
	0x03A3D850 LDR X30, [X31], #0x10
	0x03A3D854 B 0x3A3CCD4
	0x03A3D858 BL 0x1C16F20
	0x03A3D85C SUB X31, X31, 0x80
	0x03A3D860 STP X29, X30, [X31 + 0x20]
	0x03A3D864 STP X28, X27, [X31 + 0x30]
	0x03A3D868 STP X26, X25, [X31 + 0x40]
	0x03A3D86C STP X24, X23, [X31 + 0x50]
	0x03A3D870 STP X22, X21, [X31 + 0x60]
	0x03A3D874 STP X20, X19, [X31 + 0x70]
	0x03A3D878 ADRP X21, 0x9A5000
	0x03A3D87C LDRB W8, [X21 + 0x150]
	0x03A3D880 MOV X19, X1
	0x03A3D884 MOV X20, X0
	0x03A3D888 TBNZ X8, 0x0, 0x3A3D8D0
	0x03A3D88C ADRP X0, 0x718000
	0x03A3D890 LDR X0, [X0 + 0x7D0]
	0x03A3D894 BL 0x1C16CF4
	0x03A3D898 ADRP X0, 0x718000
	0x03A3D89C LDR X0, [X0 + 0x7D8]
	0x03A3D8A0 BL 0x1C16CF4
	0x03A3D8A4 ADRP X0, 0x718000
	0x03A3D8A8 LDR X0, [X0 + 0x7E0]
	0x03A3D8AC BL 0x1C16CF4
	0x03A3D8B0 ADRP X0, 0x718000
	0x03A3D8B4 LDR X0, [X0 + 0x7F0]
	0x03A3D8B8 BL 0x1C16CF4
	0x03A3D8BC ADRP X0, 0x6B6000
	0x03A3D8C0 LDR X0, [X0 + 0x598]
	0x03A3D8C4 BL 0x1C16CF4
	0x03A3D8C8 MOVZ W8, 0x1
	0x03A3D8CC STRB W8, [X21 + 0x150]
	0x03A3D8D0 STRB W31, [X31 + 0x18]
	0x03A3D8D4 STRB W31, [X31 + 0x10]
	0x03A3D8D8 CBZ X19, 0x3A3DC14
	0x03A3D8DC ADRP X8, 0x6B6000
	0x03A3D8E0 LDR X8, [X8 + 0x598]
	0x03A3D8E4 LDR X21, [X19 + 0x28]
	0x03A3D8E8 LDR X0, [X8]
	0x03A3D8EC LDR W8, [X0 + 0xE0]
	0x03A3D8F0 CBNZ W8, 0x3A3D8F8
	0x03A3D8F4 BL 0x1C16DFC
	0x03A3D8F8 MOV X0, X21
	0x03A3D8FC MOV X1, X31
	0x03A3D900 MOV X2, X31
	0x03A3D904 BL 0x3C3883C
	0x03A3D908 TBZ X0, 0x0, 0x3A3D918
	0x03A3D90C MOV X0, X20
	0x03A3D910 BL 0x3A3D494
	0x03A3D914 MOV X21, X0
	0x03A3D918 LDR X2, [X20 + 0x38]
	0x03A3D91C ADD X0, X31, 0x18
	0x03A3D920 MOV X1, X31
	0x03A3D924 MOV X3, X31
	0x03A3D928 BL 0x39B1DB0
	0x03A3D92C MOV X0, X20
	0x03A3D930 MOV X1, X21
	0x03A3D934 BL 0x3A3DDD8
	0x03A3D938 MOV W27, W0
	0x03A3D93C LDR X0, [X20 + 0x10]
	0x03A3D940 CBZ X0, 0x3A3DC18
	0x03A3D944 ADRP X28, 0x718000
	0x03A3D948 LDR X28, [X28 + 0x7F0]
	0x03A3D94C LDR X2, [X28]
	0x03A3D950 MOV W1, W27
	0x03A3D954 BL 0x301BCCC
	0x03A3D958 CBZ X0, 0x3A3DC1C
	0x03A3D95C LDR X8, [X20 + 0x50]
	0x03A3D960 CBZ X8, 0x3A3DC20
	0x03A3D964 LDRSW X22, [X0 + 0x10]
	0x03A3D968 MOV X0, X8
	0x03A3D96C MOV W1, W22
	0x03A3D970 MOV W2, W27
	0x03A3D974 BL 0x3A3CD5C
	0x03A3D978 MOV X21, X0
	0x03A3D97C LDR X0, [X20 + 0x10]
	0x03A3D980 CBZ X0, 0x3A3DC24
	0x03A3D984 LDR X2, [X28]
	0x03A3D988 MOV W1, W27
	0x03A3D98C BL 0x301BCCC
	0x03A3D990 MOV X23, X0
	0x03A3D994 LDR X0, [X20 + 0x18]
	0x03A3D998 CBZ X0, 0x3A3DC28
	0x03A3D99C ADRP X8, 0x718000
	0x03A3D9A0 LDR X8, [X8 + 0x7E0]
	0x03A3D9A4 LDR X2, [X8]
	0x03A3D9A8 MOV W1, W27
	0x03A3D9AC BL 0x301BCCC
	0x03A3D9B0 MOV X24, X0
	0x03A3D9B4 LDR X0, [X20 + 0x20]
	0x03A3D9B8 CBZ X0, 0x3A3DC2C
	0x03A3D9BC ADRP X8, 0x718000
	0x03A3D9C0 LDR X8, [X8 + 0x7D0]
	0x03A3D9C4 LDR X2, [X8]
	0x03A3D9C8 MOV W1, W27
	0x03A3D9CC BL 0x301BCCC
	0x03A3D9D0 MOV X25, X0
	0x03A3D9D4 LDR X0, [X20 + 0x28]
	0x03A3D9D8 CBZ X0, 0x3A3DC30
	0x03A3D9DC ADRP X8, 0x718000
	0x03A3D9E0 LDR X8, [X8 + 0x7D8]
	0x03A3D9E4 LDR X2, [X8]
	0x03A3D9E8 MOV W1, W27
	0x03A3D9EC BL 0x301BCCC
	0x03A3D9F0 MOV X26, X0
	0x03A3D9F4 LDR X0, [X20 + 0x10]
	0x03A3D9F8 CBZ X0, 0x3A3DC34
	0x03A3D9FC LDR X2, [X28]
	0x03A3DA00 MOV W1, W27
	0x03A3DA04 BL 0x301BCCC
	0x03A3DA08 CBZ X0, 0x3A3DC38
	0x03A3DA0C LDR X8, [X20 + 0x10]
	0x03A3DA10 CBZ X8, 0x3A3DC3C
	0x03A3DA14 LDR W29, [X0 + 0x14]
	0x03A3DA18 LDR X2, [X28]
	0x03A3DA1C MOV X0, X8
	0x03A3DA20 MOV W1, W27
	0x03A3DA24 BL 0x301BCCC
	0x03A3DA28 CBZ X0, 0x3A3DC40
	0x03A3DA2C LDR W8, [X0 + 0x10]
	0x03A3DA30 CMP W29, W8
	0x03A3DA34 B.NE 0x3A3DB28
	0x03A3DA38 LDR X2, [X20 + 0x40]
	0x03A3DA3C STRB W31, [X31 + 0x8]
	0x03A3DA40 ADD X0, X31, 0x8
	0x03A3DA44 MOV X1, X31
	0x03A3DA48 MOV X3, X31
	0x03A3DA4C BL 0x39B1DB0
	0x03A3DA50 LDRB W8, [X31 + 0x8]
	0x03A3DA54 STRB W8, [X31 + 0x10]
	0x03A3DA58 LDR X0, [X20 + 0x10]
	0x03A3DA5C CBZ X0, 0x3A3DC68
	0x03A3DA60 LDR X2, [X28]
	0x03A3DA64 MOV W1, W27
	0x03A3DA68 BL 0x301BCCC
	0x03A3DA6C CBZ X0, 0x3A3DC6C
	0x03A3DA70 LDR X8, [X20 + 0x10]
	0x03A3DA74 CBZ X8, 0x3A3DC70
	0x03A3DA78 LDR W29, [X0 + 0x14]
	0x03A3DA7C LDR X2, [X28]
	0x03A3DA80 MOV X0, X8
	0x03A3DA84 MOV W1, W27
	0x03A3DA88 BL 0x301BCCC
	0x03A3DA8C CBZ X0, 0x3A3DC74
	0x03A3DA90 LDR W8, [X0 + 0x14]

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+64], X29
	003 Move [X31+72], X30
	004 Move [X31+80], X28
	005 Move [X31+88], X27
	006 Move [X31+96], X26
	007 Move [X31+104], X25
	008 Move [X31+112], X24
	009 Move [X31+120], X23
	010 Move [X31+128], X22
	011 Move [X31+136], X21
	012 Move [X31+144], X20
	013 Move [X31+152], X19
	014 Move X19, 0x9A6000
	015 Move W8, [X19+321]
	016 Move X29, X4
	017 Move X20, X3
	018 Move X24, X2
	019 Move X22, X0
	020 Move [X31+56], X1
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {51}
	025 Move X0, 0x6BB000
	026 Move X0, [X0+712]
	027 Call 0x1C17CF4
	028 Move X0, 0x719000
	029 Move X0, [X0+2040]
	030 Call 0x1C17CF4
	031 Move X0, 0x719000
	032 Move X0, [X0+2048]
	033 Call 0x1C17CF4
	034 Move X0, 0x719000
	035 Move X0, [X0+2056]
	036 Call 0x1C17CF4
	037 Move X0, 0x719000
	038 Move X0, [X0+2064]
	039 Call 0x1C17CF4
	040 Move X0, 0x719000
	041 Move X0, [X0+2072]
	042 Call 0x1C17CF4
	043 Move X0, 0x719000
	044 Move X0, [X0+2080]
	045 Call 0x1C17CF4
	046 Move X0, 0x719000
	047 Move X0, [X0+2088]
	048 Call 0x1C17CF4
	049 Move W8, 1
	050 Move [X19+321], W8
	051 Move X0, [X22+16]
	052 Compare X0, 0
	053 JumpIfEqual {188}
	054 Call DecalEntityManager.get_decalProjectorMesh, X0
	055 Move X8, [X22]
	056 Move [X31+48], X0
	057 Move X0, X22
	058 Move X1, X24
	059 Move X9, [X8+376]
	060 Move X2, [X8+384]
	061 NotImplemented "Instruction BLR not yet implemented."
	062 Move [X31+40], X0
	063 Compare X20, 0
	064 JumpIfEqual {188}
	065 Move X0, [X20+40]
	066 Compare X0, 0
	067 JumpIfEqual {188}
	068 Move X8, 0x719000
	069 Move X8, [X8+2072]
	070 Move S0, 1
	071 Move S1, 1
	072 Move S2, 1
	073 Move X1, [X8]
	074 Move S3, W31
	075 Move X2, X31
	076 Call MaterialPropertyBlock.SetVector, X0, X1, X2
	077 Compare X29, 0
	078 JumpIfEqual {188}
	079 Move X8, [X29+104]
	080 Move W8, [X8]
	081 NotImplemented "Instruction CMP not yet implemented."
	082 Add X10, X29, 40
	083 Add X9, X29, 56
	084 Move [X31+24], X9
	085 Move [X31+32], X10
	086 Move X26, 0x719000
	087 Move X26, [X26+2040]
	088 Move X19, X31
	089 Add X27, X29, 72
	090 Move X23, X8
	091 ShiftRight X23, 61
	092 And X23, X23, 0xFFFFFFF
	093 Move X8, [X29+88]
	094 Move X25, 0x719000
	095 Add X8, X8, X19
	096 Move W21, [X8]
	097 Move W24, [X8+4]
	098 Move X25, [X25+2056]
	099 Move X0, [X31+32]
	100 Move X1, [X25]
	101 Call NativeArray`1<float4x4>.Reinterpret, X0
	102 Move X3, [X22+24]
	103 Move X6, [X26]
	104 Subtract W28, W24, W21
	105 Move W2, W21
	106 Move W4, W31
	107 Move W5, W28
	108 Call NativeArray`1<Matrix4x4>.Copy, X0, X1, X2, X3, X4
	109 Move X1, [X25]
	110 Move X0, [X31+24]
	111 Call NativeArray`1<float4x4>.Reinterpret, X0
	112 Move X3, [X22+32]
	113 Move X6, [X26]
	114 Move W2, W21
	115 Move W4, W31
	116 Move W5, W28
	117 Call NativeArray`1<Matrix4x4>.Copy, X0, X1, X2, X3, X4
	118 Move X8, 0x719000
	119 Move X8, [X8+2064]
	120 Move X0, X27
	121 Move X1, [X8]
	122 Call 0x2134458, X0
	123 Move X8, 0x719000
	124 Move X3, [X22+40]
	125 Move X8, [X8+2048]
	126 Move W2, W21
	127 Move W4, W31
	128 Move W5, W28
	129 Move X6, [X8]
	130 Call NativeArray`1<Single>.Copy, X0, X1, X2, X3, X4
	131 Move X0, [X20+40]
	132 Compare X0, 0
	133 JumpIfEqual {188}
	134 Move X8, 0x719000
	135 Move X2, [X22+32]
	136 Move X8, [X8+2088]
	137 Move X3, X31
	138 Move X1, [X8]
	139 Call MaterialPropertyBlock.SetMatrixArray, X0, X1, X2
	140 Move X0, [X20+40]
	141 Compare X0, 0
	142 JumpIfEqual {188}
	143 Move X8, 0x719000
	144 Move X2, [X22+40]
	145 Move X8, [X8+2080]
	146 Move X3, X31
	147 Move X1, [X8]
	148 Call MaterialPropertyBlock.SetFloatArray, X0, X1, X2
	149 Move X8, 0x6BB000
	150 Move X8, [X8+712]
	151 Move X9, [X31+56]
	152 Move X21, [X22+24]
	153 Move X25, [X20+40]
	154 Move X0, [X8]
	155 Move X24, [X9+192]
	156 Move W8, [X0+224]
	157 Compare W8, 0
	158 JumpIfNotEqual {160}
	159 Call 0x1C17DFC
	160 Move X2, [X31+40]
	161 Move X0, [X31+48]
	162 Move W6, 1
	163 Move W7, 1
	164 Move W1, W31
	165 Move X3, X21
	166 Move W4, W28
	167 Move X5, X25
	168 Move [X31+8], X24
	169 Move [X31+16], X31
	170 Move [X31], W31
	171 Call Graphics.DrawMeshInstanced, X0, X1, X2, X3, X4, X5, X6, X7, X8, X9
	172 Add X19, X19, 8
	173 NotImplemented "Instruction CMP not yet implemented."
	174 Move X20, [X31+144]
	175 Move X19, [X31+152]
	176 Move X22, [X31+128]
	177 Move X21, [X31+136]
	178 Move X24, [X31+112]
	179 Move X23, [X31+120]
	180 Move X26, [X31+96]
	181 Move X25, [X31+104]
	182 Move X28, [X31+80]
	183 Move X27, [X31+88]
	184 Move X29, [X31+64]
	185 Move X30, [X31+72]
	186 Add X31, X31, 160
	187 Return 
	188 Call 0x1C17F20

