Type: UnityEngine.Rendering.Universal.PlatformAutoDetect

Method: System.Void Initialize()

Disassembly:
	0x03A95128 LDP V0, V1, [X31 + 0x80]
	0x03A9512C LDP V2, V3, [X31 + 0xA0]
	0x03A95130 STP V0, V1, [X31 + 0xC0]
	0x03A95134 STP V2, V3, [X31 + 0xE0]
	0x03A95138 CBZ X23, 0x3A951AC
	0x03A9513C LDP V0, V1, [X31 + 0xC0]
	0x03A95140 LDP V2, V3, [X31 + 0xE0]
	0x03A95144 STP V0, V1, [X31]
	0x03A95148 STP V2, V3, [X31 + 0x20]
	0x03A9514C LDR W8, [X23 + 0x18]
	0x03A95150 CMP X21, X8
	0x03A95154 B.CS 0x3A951B0
	0x03A95158 LDP V0, V1, [X31 + 0x20]
	0x03A9515C LDP V2, V3, [X31]
	0x03A95160 ADD X8, X23, X24
	0x03A95164 ADD X21, X21, 0x1
	0x03A95168 ADD X24, X24, 0x40
	0x03A9516C STP V0, V1, [X8 + 0x20]
	0x03A95170 STP V2, V3, [X8]
	0x03A95174 B 0x3A950CC
	0x03A95178 MOV X0, X20
	0x03A9517C MOV X1, X23
	0x03A95180 MOV X2, X31
	0x03A95184 BL 0x3C4D4D0
	0x03A95188 MOVZ W8, 0x1
	0x03A9518C STRB W8, [X19 + 0x6CA]
	0x03A95190 LDP X20, X19, [X31 + 0x140]
	0x03A95194 LDP X22, X21, [X31 + 0x130]
	0x03A95198 LDP X24, X23, [X31 + 0x120]
	0x03A9519C LDP X30, X25, [X31 + 0x110]
	0x03A951A0 LDR X29, [X31 + 0x100]
	0x03A951A4 ADD X31, X31, 0x150
	0x03A951A8 RET
	0x03A951AC BL 0x1C16F20
	0x03A951B0 BL 0x1C16F28
	0x03A951B4 STP X30, X21, [X31 - 0x20]!
	0x03A951B8 STP X20, X19, [X31 + 0x10]
	0x03A951BC ADRP X20, 0x94D000
	0x03A951C0 ADRP X21, 0x662000
	0x03A951C4 ADRP X19, 0x6C0000
	0x03A951C8 LDRB W8, [X20 + 0x3AA]
	0x03A951CC LDR X21, [X21 + 0x988]
	0x03A951D0 LDR X19, [X19 + 0xDC8]
	0x03A951D4 TBNZ X8, 0x0, 0x3A951F8
	0x03A951D8 ADRP X0, 0x662000
	0x03A951DC LDR X0, [X0 + 0x988]
	0x03A951E0 BL 0x1C16CF4
	0x03A951E4 ADRP X0, 0x6C0000
	0x03A951E8 LDR X0, [X0 + 0xDC8]
	0x03A951EC BL 0x1C16CF4
	0x03A951F0 MOVZ W8, 0x1
	0x03A951F4 STRB W8, [X20 + 0x3AA]
	0x03A951F8 LDR X0, [X21]
	0x03A951FC MOVZ W1, 0x2
	0x03A95200 BL 0x1C16D6C
	0x03A95204 LDR X8, [X19]
	0x03A95208 LDP X20, X19, [X31 + 0x10]
	0x03A9520C LDR X8, [X8 + 0xB8]
	0x03A95210 STR X0, [X8]
	0x03A95214 LDP X30, X21, [X31], #0x20
	0x03A95218 RET
	0x03A9521C CMP W0, 0x4
	0x03A95220 B.HI 0x3A95278
	0x03A95224 ADRP X9, 0xFFFFFFFFFD102000
	0x03A95228 MOV W8, W0
	0x03A9522C ADD X9, X9, 0xB49
	0x03A95230 ADR X10, 0x10
	0x03A95234 LDRB W11, [X9, X8, LSL]
	0x03A95238 ADD X10, X10, X11, 0x2, LSL
	0x03A9523C BR X10
	0x03A95240 AND W0, W1, 0x1
	0x03A95244 RET
	0x03A95248 CMP W1, 0x0
	0x03A9524C CSET W0, NE
	0x03A95250 RET
	0x03A95254 CMP W1, 0x0
	0x03A95258 CSET W0, GT
	0x03A9525C RET
	0x03A95260 UBFM W0, W1, 0x1F, 0x1F
	0x03A95264 RET
	0x03A95268 ADD W8, W1, 0x1
	0x03A9526C CMP W8, 0x2
	0x03A95270 CSET W0, HI
	0x03A95274 RET
	0x03A95278 STP X30, X19, [X31 - 0x10]!
	0x03A9527C ADRP X0, 0x65E000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, 0x94E000
	006 Move X20, 0x6C2000
	007 Move W8, [X19+915]
	008 Move X20, [X20+3832]
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0x65F000
	014 Move X0, [X0+2416]
	015 Call 0x1C17CF4
	016 Move X0, 0x6C2000
	017 Move X0, [X0+3832]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X19+915], W8
	021 Move X0, [X20]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Call PlatformAutoDetect.IsRunningXRMobile
	027 Move X21, 0x94E000
	028 Move W8, [X21+979]
	029 Move W19, W0
	030 Compare W8, 0
	031 JumpIfNotEqual {37}
	032 Move X0, 0x6C2000
	033 Move X0, [X0+3832]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X21+979], W8
	037 Move X0, [X20]
	038 Move W8, [X0+224]
	039 Compare W8, 0
	040 JumpIfNotEqual {43}
	041 Call 0x1C17DFC
	042 Move X0, [X20]
	043 Move X8, [X0+184]
	044 And W9, W19, 1
	045 Move W0, 17
	046 Move X1, X31
	047 Move [X8+8], W9
	048 Call GraphicsSettings.HasShaderDefine, X0
	049 Move X21, 0x94E000
	050 Move W8, [X21+980]
	051 Move W19, W0
	052 Compare W8, 0
	053 JumpIfNotEqual {59}
	054 Move X0, 0x6C2000
	055 Move X0, [X0+3832]
	056 Call 0x1C17CF4
	057 Move W8, 1
	058 Move [X21+980], W8
	059 Move X0, [X20]
	060 Move X21, 0x65F000
	061 Move W8, [X0+224]
	062 Move X21, [X21+2416]
	063 Compare W8, 0
	064 JumpIfNotEqual {67}
	065 Call 0x1C17DFC
	066 Move X0, [X20]
	067 Move X8, [X0+184]
	068 And W9, W19, 1
	069 Move [X8+9], W9
	070 Move X0, [X21]
	071 Move W8, [X0+224]
	072 Compare W8, 0
	073 JumpIfNotEqual {75}
	074 Call 0x1C17DFC
	075 Move X0, X31
	076 Call Application.get_platform
	077 Move X21, 0x94E000
	078 Move W8, [X21+981]
	079 Move W19, W0
	080 Compare W8, 0
	081 JumpIfNotEqual {87}
	082 Move X0, 0x6C2000
	083 Move X0, [X0+3832]
	084 Call 0x1C17CF4
	085 Move W8, 1
	086 Move [X21+981], W8
	087 Move X0, [X20]
	088 Move W8, [X0+224]
	089 Compare W8, 0
	090 JumpIfNotEqual {93}
	091 Call 0x1C17DFC
	092 Move X0, [X20]
	093 Move X8, [X0+184]
	094 NotImplemented "Instruction CMP not yet implemented."
	095 Move X20, [X31+16]
	096 Move X19, [X31+24]
	097 NotImplemented "Instruction CSET not yet implemented."
	098 Move [X8+10], W9
	099 Move X30, [X31+32]
	100 Move X21, [X31+40]
	101 Return 

Method: System.Boolean IsRunningXRMobile()

Disassembly:
	0x03A95280 LDR X0, [X0 + 0x7D0]
	0x03A95284 BL 0x1C16D08
	0x03A95288 BL 0x1C16F10
	0x03A9528C MOV X19, X0
	0x03A95290 ADRP X0, 0x6C2000
	0x03A95294 LDR X0, [X0 + 0x5E0]
	0x03A95298 BL 0x1C16D08
	0x03A9529C MOV X1, X0
	0x03A952A0 MOV X0, X19
	0x03A952A4 MOV X2, X31
	0x03A952A8 BL 0x33B2C70
	0x03A952AC ADRP X0, 0x6C2000
	0x03A952B0 LDR X0, [X0 + 0x5E8]
	0x03A952B4 BL 0x1C16D08
	0x03A952B8 MOV X1, X0
	0x03A952BC MOV X0, X19
	0x03A952C0 BL 0x1C16DEC
	0x03A952C4 STR X30, [X31 - 0x10]!
	0x03A952C8 CBZ X0, 0x3A95310
	0x03A952CC CBZ X1, 0x3A95310
	0x03A952D0 CBZ X2, 0x3A95310
	0x03A952D4 LDP S4, S0, [X1 + 0x34]
	0x03A952D8 LDP S5, S1, [X2 + 0x34]
	0x03A952DC LDP S2, S3, [X0 + 0x34]
	0x03A952E0 FSUB S6, S0, S1
	0x03A952E4 FSUB S1, S1, S3
	0x03A952E8 FSUB S0, S3, S0
	0x03A952EC FMUL S2, S2, S6
	0x03A952F0 FMUL S1, S4, S1
	0x03A952F4 FADD S1, S2, S1
	0x03A952F8 FMUL S0, S5, S0
	0x03A952FC FADD S0, S0, S1
	0x03A95300 FCMP S0, 0x0
	0x03A95304 CSET W0, GE
	0x03A95308 LDR X30, [X31], #0x10
	0x03A9530C RET
	0x03A95310 BL 0x1C16F20
	0x03A95314 STR X30, [X31 - 0x10]!
	0x03A95318 CBZ X0, 0x3A95350
	0x03A9531C CBZ X1, 0x3A95350
	0x03A95320 LDR V0, [X0 + 0x34]
	0x03A95324 LDR V1, [X1 + 0x34]
	0x03A95328 FCMP S0, S1
	0x03A9532C B.NE 0x3A95344
	0x03A95330 LDR V0, [X0 + 0x38]
	0x03A95334 LDR V1, [X1 + 0x38]
	0x03A95338 FCMP S0, S1
	0x03A9533C CSET W0, EQ
	0x03A95340 B 0x3A95348
	0x03A95344 MOV W0, W31
	0x03A95348 LDR X30, [X31], #0x10
	0x03A9534C RET
	0x03A95350 BL 0x1C16F20
	0x03A95354 STR X30, [X31 - 0x10]!
	0x03A95358 CBZ X0, 0x3A9539C
	0x03A9535C CBZ X1, 0x3A9539C
	0x03A95360 LDR V0, [X0 + 0x34]
	0x03A95364 LDR V1, [X1 + 0x34]
	0x03A95368 FCMP S0, S1
	0x03A9536C B.PL 0x3A95378
	0x03A95370 MOVZ W0, 0x1
	0x03A95374 B 0x3A95394
	0x03A95378 B.NE 0x3A95390
	0x03A9537C LDR V0, [X0 + 0x38]
	0x03A95380 LDR V1, [X1 + 0x38]
	0x03A95384 FCMP S0, S1
	0x03A95388 CSET W0, LS
	0x03A9538C B 0x3A95394
	0x03A95390 MOV W0, W31
	0x03A95394 LDR X30, [X31], #0x10
	0x03A95398 RET
	0x03A9539C BL 0x1C16F20
	0x03A953A0 STR X30, [X31 - 0x10]!
	0x03A953A4 CBZ X1, 0x3A9540C
	0x03A953A8 CBZ X0, 0x3A9540C
	0x03A953AC CBZ X2, 0x3A9540C
	0x03A953B0 LDR V0, [X1 + 0x34]
	0x03A953B4 LDR V1, [X0 + 0x34]
	0x03A953B8 LDR V3, [X2 + 0x34]
	0x03A953BC FSUB S2, S0, S1
	0x03A953C0 FSUB S3, S3, S0
	0x03A953C4 FADD S1, S2, S3
	0x03A953C8 FCMP S1, 0x0
	0x03A953CC FMOV S0, W31
	0x03A953D0 B.LE 0x3A95404
	0x03A953D4 FCMP S2, S3
	0x03A953D8 CSEL X8, X0, X2, MI
	0x03A953DC CSEL X9, X2, X0, MI
	0x03A953E0 LDR V4, [X8 + 0x38]
	0x03A953E4 LDR V5, [X9 + 0x38]
	0x03A953E8 LDR V0, [X1 + 0x38]
	0x03A953EC FCSEL S2, S2, S3, MI

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, 0x94E000
	006 Move X20, 0x65F000
	007 Move W8, [X19+916]
	008 Move X20, [X20+2416]
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {33}
	013 Move X0, 0x65F000
	014 Move X0, [X0+2416]
	015 Call 0x1C17CF4
	016 Move X0, 0x6BC000
	017 Move X0, [X0+1728]
	018 Call 0x1C17CF4
	019 Move X0, 0x6BC000
	020 Move X0, [X0+1736]
	021 Call 0x1C17CF4
	022 Move X0, 0x6C2000
	023 Move X0, [X0+3832]
	024 Call 0x1C17CF4
	025 Move X0, 0x6BC000
	026 Move X0, [X0+1744]
	027 Call 0x1C17CF4
	028 Move X0, 0x687000
	029 Move X0, [X0+192]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X19+916], W8
	033 Move X0, [X20]
	034 Move W8, [X0+224]
	035 Compare W8, 0
	036 JumpIfNotEqual {38}
	037 Call 0x1C17DFC
	038 Move X0, X31
	039 Call Application.get_platform
	040 Move W8, W0
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Move W0, W31
	043 Move W9, 1
	044 NotImplemented "Instruction LSLV not yet implemented."
	045 Move W9, 2048
	046 NotImplemented "Instruction MOVK not yet implemented."
	047 And W31, W8, W9
	048 Move X20, 0x6C2000
	049 Move X20, [X20+3832]
	050 Move X19, 0x687000
	051 Move X0, [X20]
	052 Move W8, [X0+224]
	053 Move X19, [X19+192]
	054 Compare W8, 0
	055 JumpIfNotEqual {58}
	056 Call 0x1C17DFC
	057 Move X0, [X20]
	058 Move X8, [X19]
	059 Move X9, [X0+184]
	060 Move X21, 0x6BC000
	061 Move W10, [X8+224]
	062 Move X19, [X9]
	063 Move X21, [X21+1744]
	064 Compare W10, 0
	065 JumpIfNotEqual {68}
	066 Move X0, X8
	067 Call 0x1C17DFC
	068 Move X1, [X21]
	069 Move X0, X19
	070 Call 0x229939C, X0
	071 Move X8, [X20]
	072 Move X9, [X8+184]
	073 Move X0, [X9]
	074 Compare X0, 0
	075 JumpIfEqual {102}
	076 Move W9, [X0+24]
	077 NotImplemented "Instruction CMP not yet implemented."
	078 Move W9, [X8+224]
	079 Compare W9, 0
	080 JumpIfNotEqual {88}
	081 Move X0, X8
	082 Call 0x1C17DFC
	083 Move X8, [X20]
	084 Move X8, [X8+184]
	085 Move X0, [X8]
	086 Compare X0, 0
	087 JumpIfEqual {102}
	088 Move X8, 0x6BC000
	089 Move X8, [X8+1736]
	090 Move W1, W31
	091 Move X2, [X8]
	092 Call List`1<Object>.get_Item, X0, X1
	093 Compare X0, 0
	094 JumpIfEqual {96}
	095 Move W0, 1
	096 Move W0, W31
	097 Move X20, [X31+16]
	098 Move X19, [X31+24]
	099 Move X30, [X31+32]
	100 Move X21, [X31+40]
	101 Return X0
	102 Call 0x1C17F20

Method: System.Boolean get_isXRMobile()

Disassembly:
	0x03A953F0 FDIV S1, S2, S1
	0x03A953F4 FSUB S3, S4, S5
	0x03A953F8 FSUB S0, S0, S4
	0x03A953FC FMUL S1, S1, S3
	0x03A95400 FADD S0, S0, S1
	0x03A95404 LDR X30, [X31], #0x10
	0x03A95408 RET
	0x03A9540C BL 0x1C16F20
	0x03A95410 STR X30, [X31 - 0x10]!
	0x03A95414 CBZ X1, 0x3A9546C
	0x03A95418 CBZ X0, 0x3A9546C
	0x03A9541C CBZ X2, 0x3A9546C
	0x03A95420 LDR V0, [X1 + 0x34]
	0x03A95424 LDR V1, [X0 + 0x34]
	0x03A95428 LDR V2, [X2 + 0x34]
	0x03A9542C FSUB S1, S0, S1
	0x03A95430 FSUB S2, S2, S0
	0x03A95434 FADD S0, S1, S2
	0x03A95438 FCMP S0, 0x0
	0x03A9543C FMOV S0, W31
	0x03A95440 B.LE 0x3A95464
	0x03A95444 LDR V0, [X1 + 0x38]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x94E000
	005 Move X19, 0x6C2000
	006 Move W8, [X20+917]
	007 Move X19, [X19+3832]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x6C2000
	013 Move X0, [X0+3832]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+917], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {23}
	021 Call 0x1C17DFC
	022 Move X0, [X19]
	023 Move X8, [X0+184]
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move W0, [X8+8]
	027 Move X30, [X31+32]
	028 Return X0

Method: System.Void set_isXRMobile(System.Boolean value)

Disassembly:
	0x03A95448 LDR V3, [X2 + 0x38]
	0x03A9544C LDR V4, [X0 + 0x38]
	0x03A95450 FSUB S3, S0, S3
	0x03A95454 FSUB S0, S0, S4
	0x03A95458 FMUL S1, S1, S3
	0x03A9545C FMUL S0, S2, S0
	0x03A95460 FADD S0, S1, S0
	0x03A95464 LDR X30, [X31], #0x10
	0x03A95468 RET
	0x03A9546C BL 0x1C16F20
	0x03A95470 STR X30, [X31 - 0x10]!
	0x03A95474 CBZ X0, 0x3A954B8
	0x03A95478 CBZ X1, 0x3A954B8
	0x03A9547C LDR V0, [X0 + 0x38]
	0x03A95480 LDR V1, [X1 + 0x38]
	0x03A95484 FCMP S0, S1
	0x03A95488 B.PL 0x3A95494
	0x03A9548C MOVZ W0, 0x1
	0x03A95490 B 0x3A954B0
	0x03A95494 B.NE 0x3A954AC
	0x03A95498 LDR V0, [X0 + 0x34]
	0x03A9549C LDR V1, [X1 + 0x34]
	0x03A954A0 FCMP S0, S1
	0x03A954A4 CSET W0, LS

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x94E000
	006 Move X20, 0x6C2000
	007 Move W8, [X21+918]
	008 Move X20, [X20+3832]
	009 Move W19, W0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x6C2000
	015 Move X0, [X0+3832]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+918], W8
	019 Move X0, [X20]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {25}
	023 Call 0x1C17DFC
	024 Move X0, [X20]
	025 Move X8, [X0+184]
	026 And W9, W19, 1
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move [X8+8], W9
	030 Move X30, [X31+32]
	031 Move X21, [X31+40]
	032 Return 

Method: System.Boolean get_isShaderAPIMobileDefined()

Disassembly:
	0x03A954A8 B 0x3A954B0
	0x03A954AC MOV W0, W31
	0x03A954B0 LDR X30, [X31], #0x10
	0x03A954B4 RET
	0x03A954B8 BL 0x1C16F20
	0x03A954BC STR X30, [X31 - 0x10]!
	0x03A954C0 CBZ X1, 0x3A95528
	0x03A954C4 CBZ X0, 0x3A95528
	0x03A954C8 CBZ X2, 0x3A95528
	0x03A954CC LDR V0, [X1 + 0x38]
	0x03A954D0 LDR V1, [X0 + 0x38]
	0x03A954D4 LDR V3, [X2 + 0x38]
	0x03A954D8 FSUB S2, S0, S1
	0x03A954DC FSUB S3, S3, S0
	0x03A954E0 FADD S1, S2, S3
	0x03A954E4 FCMP S1, 0x0
	0x03A954E8 FMOV S0, W31
	0x03A954EC B.LE 0x3A95520
	0x03A954F0 FCMP S2, S3
	0x03A954F4 CSEL X8, X0, X2, MI
	0x03A954F8 CSEL X9, X2, X0, MI
	0x03A954FC LDR V4, [X8 + 0x34]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x94E000
	005 Move X19, 0x6C2000
	006 Move W8, [X20+919]
	007 Move X19, [X19+3832]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x6C2000
	013 Move X0, [X0+3832]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+919], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {23}
	021 Call 0x1C17DFC
	022 Move X0, [X19]
	023 Move X8, [X0+184]
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move W0, [X8+9]
	027 Move X30, [X31+32]
	028 Return X0

Method: System.Void set_isShaderAPIMobileDefined(System.Boolean value)

Disassembly:
	0x03A95500 LDR V5, [X9 + 0x34]
	0x03A95504 LDR V0, [X1 + 0x34]
	0x03A95508 FCSEL S2, S2, S3, MI
	0x03A9550C FDIV S1, S2, S1
	0x03A95510 FSUB S3, S4, S5
	0x03A95514 FSUB S0, S0, S4
	0x03A95518 FMUL S1, S1, S3
	0x03A9551C FADD S0, S0, S1
	0x03A95520 LDR X30, [X31], #0x10
	0x03A95524 RET
	0x03A95528 BL 0x1C16F20
	0x03A9552C STR X30, [X31 - 0x10]!
	0x03A95530 CBZ X1, 0x3A95588
	0x03A95534 CBZ X0, 0x3A95588
	0x03A95538 CBZ X2, 0x3A95588
	0x03A9553C LDR V0, [X1 + 0x38]
	0x03A95540 LDR V1, [X0 + 0x38]
	0x03A95544 LDR V2, [X2 + 0x38]
	0x03A95548 FSUB S1, S0, S1
	0x03A9554C FSUB S2, S2, S0
	0x03A95550 FADD S0, S1, S2
	0x03A95554 FCMP S0, 0x0
	0x03A95558 FMOV S0, W31
	0x03A9555C B.LE 0x3A95580

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x94E000
	006 Move X20, 0x6C2000
	007 Move W8, [X21+920]
	008 Move X20, [X20+3832]
	009 Move W19, W0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x6C2000
	015 Move X0, [X0+3832]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+920], W8
	019 Move X0, [X20]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {25}
	023 Call 0x1C17DFC
	024 Move X0, [X20]
	025 Move X8, [X0+184]
	026 And W9, W19, 1
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move [X8+9], W9
	030 Move X30, [X31+32]
	031 Move X21, [X31+40]
	032 Return 

Method: System.Boolean get_isSwitch()

Disassembly:
	0x03A95560 LDR V0, [X1 + 0x34]
	0x03A95564 LDR V3, [X2 + 0x34]
	0x03A95568 LDR V4, [X0 + 0x34]
	0x03A9556C FSUB S3, S0, S3
	0x03A95570 FSUB S0, S0, S4
	0x03A95574 FMUL S1, S1, S3
	0x03A95578 FMUL S0, S2, S0
	0x03A9557C FADD S0, S1, S0
	0x03A95580 LDR X30, [X31], #0x10
	0x03A95584 RET
	0x03A95588 BL 0x1C16F20
	0x03A9558C STR X30, [X31 - 0x10]!
	0x03A95590 CBZ X0, 0x3A955B0
	0x03A95594 LDR X8, [X0 + 0x28]
	0x03A95598 CBZ X8, 0x3A955B0
	0x03A9559C LDR X8, [X8 + 0x40]
	0x03A955A0 LDR X1, [X0 + 0x40]
	0x03A955A4 MOV X0, X8
	0x03A955A8 LDR X30, [X31], #0x10
	0x03A955AC B 0x3A95354
	0x03A955B0 BL 0x1C16F20
	0x03A955B4 STR X30, [X31 - 0x10]!

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x94E000
	005 Move X19, 0x6C2000
	006 Move W8, [X20+921]
	007 Move X19, [X19+3832]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x6C2000
	013 Move X0, [X0+3832]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+921], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {23}
	021 Call 0x1C17DFC
	022 Move X0, [X19]
	023 Move X8, [X0+184]
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move W0, [X8+10]
	027 Move X30, [X31+32]
	028 Return X0

Method: System.Void set_isSwitch(System.Boolean value)

Disassembly:
	0x03A955B8 LDR X8, [X0 + 0x28]
	0x03A955BC CBZ X8, 0x3A955CC
	0x03A955C0 LDR X0, [X8 + 0x40]
	0x03A955C4 LDR X30, [X31], #0x10
	0x03A955C8 RET
	0x03A955CC BL 0x1C16F20
	0x03A955D0 STR X30, [X31 - 0x10]!
	0x03A955D4 CBZ X0, 0x3A955F0
	0x03A955D8 LDR X8, [X0 + 0x28]
	0x03A955DC CBZ X8, 0x3A955F0
	0x03A955E0 LDR X0, [X0 + 0x40]
	0x03A955E4 LDR X1, [X8 + 0x40]
	0x03A955E8 LDR X30, [X31], #0x10
	0x03A955EC B 0x3A95354
	0x03A955F0 BL 0x1C16F20
	0x03A955F4 STP D9, D8, [X31 - 0x30]!
	0x03A955F8 STP X30, X21, [X31 + 0x10]
	0x03A955FC STP X20, X19, [X31 + 0x20]
	0x03A95600 ADRP X21, 0x94D000
	0x03A95604 LDRB W8, [X21 + 0x3AB]
	0x03A95608 MOV X19, X1
	0x03A9560C MOV X20, X0
	0x03A95610 TBNZ X8, 0x0, 0x3A95628
	0x03A95614 ADRP X0, 0x65E000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x94E000
	006 Move X20, 0x6C2000
	007 Move W8, [X21+922]
	008 Move X20, [X20+3832]
	009 Move W19, W0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x6C2000
	015 Move X0, [X0+3832]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+922], W8
	019 Move X0, [X20]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {25}
	023 Call 0x1C17DFC
	024 Move X0, [X20]
	025 Move X8, [X0+184]
	026 And W9, W19, 1
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move [X8+10], W9
	030 Move X30, [X31+32]
	031 Move X21, [X31+40]
	032 Return 

Method: UnityEngine.Rendering.Universal.ShEvalMode ShAutoDetect(UnityEngine.Rendering.Universal.ShEvalMode mode)

Disassembly:
	0x03A95618 LDR X0, [X0 + 0x5A8]
	0x03A9561C BL 0x1C16CF4
	0x03A95620 MOVZ W8, 0x1
	0x03A95624 STRB W8, [X21 + 0x3AB]
	0x03A95628 CBZ X20, 0x3A95674
	0x03A9562C CBZ X19, 0x3A95674
	0x03A95630 ADRP X8, 0x65E000
	0x03A95634 LDR X8, [X8 + 0x5A8]
	0x03A95638 LDR V8, [X20 + 0x34]
	0x03A9563C LDR V9, [X19 + 0x34]
	0x03A95640 LDR X0, [X8]
	0x03A95644 LDR W8, [X0 + 0xE0]
	0x03A95648 CBNZ W8, 0x3A95650
	0x03A9564C BL 0x1C16DFC
	0x03A95650 LDR V0, [X20 + 0x38]
	0x03A95654 LDR V1, [X19 + 0x38]
	0x03A95658 LDP X20, X19, [X31 + 0x20]
	0x03A9565C LDP X30, X21, [X31 + 0x10]
	0x03A95660 FABD S2, S8, S8
	0x03A95664 FABD S0, S0, S0
	0x03A95668 FADD S0, S2, S0
	0x03A9566C LDP D9, D8, [X31], #0x30
	0x03A95670 RET
	0x03A95674 BL 0x1C16F20
	0x03A95678 STR X30, [X31 - 0x10]!
	0x03A9567C CBZ X0, 0x3A956BC
	0x03A95680 CBZ X1, 0x3A956BC
	0x03A95684 LDR W9, [X0 + 0x58]
	0x03A95688 LDR W10, [X1 + 0x58]
	0x03A9568C LDR X8, [X0 + 0x28]
	0x03A95690 ADD W9, W10, W9
	0x03A95694 STR W9, [X0 + 0x58]
	0x03A95698 CBZ X8, 0x3A956BC
	0x03A9569C LDR X9, [X1 + 0x28]
	0x03A956A0 CBZ X9, 0x3A956BC
	0x03A956A4 LDR W10, [X8 + 0x58]
	0x03A956A8 LDR W9, [X9 + 0x58]
	0x03A956AC ADD W9, W9, W10
	0x03A956B0 STR W9, [X8 + 0x58]
	0x03A956B4 LDR X30, [X31], #0x10
	0x03A956B8 RET
	0x03A956BC BL 0x1C16F20
	0x03A956C0 FMOV S4, W31
	0x03A956C4 FMAX S0, S0, S4
	0x03A956C8 FMAX S2, S2, S4
	0x03A956CC FCMP S0, S2
	0x03A956D0 B.LS 0x3A956EC
	0x03A956D4 FADD S0, S0, S2
	0x03A956D8 FSUB S1, S1, S3
	0x03A956DC FDIV S0, S2, S0
	0x03A956E0 FMUL S0, S1, S0
	0x03A956E4 FADD S0, S0, S3
	0x03A956E8 RET
	0x03A956EC FCMP S2, 0x0
	0x03A956F0 B.NE 0x3A95704
	0x03A956F4 FADD S0, S1, S3
	0x03A956F8 FMOV S1, 0.5
	0x03A956FC FMUL S0, S0, S1
	0x03A95700 RET
	0x03A95704 FADD S2, S0, S2
	0x03A95708 FSUB S3, S3, S1
	0x03A9570C FDIV S0, S0, S2
	0x03A95710 FMUL S0, S3, S0
	0x03A95714 FADD S0, S0, S1
	0x03A95718 RET
	0x03A9571C LDR X8, [X1]
	0x03A95720 LDR X9, [X0]
	0x03A95724 STR X8, [X0]
	0x03A95728 STR X9, [X1]
	0x03A9572C RET
	0x03A95730 STR D8, [X31 - 0x50]!
	0x03A95734 STP X30, X25, [X31 + 0x10]
	0x03A95738 STP X24, X23, [X31 + 0x20]
	0x03A9573C STP X22, X21, [X31 + 0x30]
	0x03A95740 STP X20, X19, [X31 + 0x40]
	0x03A95744 MOV X19, X4
	0x03A95748 MOV X22, X3
	0x03A9574C MOV X23, X2
	0x03A95750 MOV X21, X1
	0x03A95754 MOV X24, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x94E000
	005 Move W8, [X20+923]
	006 Move W19, W0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x6C2000
	012 Move X0, [X0+3832]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+923], W8
	016 Compare W19, 0
	017 JumpIfNotEqual {68}
	018 Move X19, 0x6C2000
	019 Move X19, [X19+3832]
	020 Move X0, [X19]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 Move X20, 0x94E000
	026 Move W8, [X20+778]
	027 Compare W8, 0
	028 JumpIfNotEqual {34}
	029 Move X0, 0x6C2000
	030 Move X0, [X0+3832]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X20+778], W8
	034 Move X0, [X19]
	035 Move W8, [X0+224]
	036 Compare W8, 0
	037 JumpIfNotEqual {40}
	038 Call 0x1C17DFC
	039 Move X0, [X19]
	040 Move X8, [X0+184]
	041 Move W8, [X8+8]
	042 Compare W8, 0
	043 JumpIfNotEqual {67}
	044 Move W8, [X0+224]
	045 Compare W8, 0
	046 JumpIfNotEqual {48}
	047 Call 0x1C17DFC
	048 Move X20, 0x94E000
	049 Move W8, [X20+982]
	050 Compare W8, 0
	051 JumpIfNotEqual {57}
	052 Move X0, 0x6C2000
	053 Move X0, [X0+3832]
	054 Call 0x1C17CF4
	055 Move W8, 1
	056 Move [X20+982], W8
	057 Move X0, [X19]
	058 Move W8, [X0+224]
	059 Compare W8, 0
	060 JumpIfNotEqual {63}
	061 Call 0x1C17DFC
	062 Move X0, [X19]
	063 Move X8, [X0+184]
	064 Move W8, [X8+9]
	065 Compare W8, 0
	066 JumpIfEqual {73}
	067 Move W19, 1
	068 Move W0, W19
	069 Move X20, [X31+16]
	070 Move X19, [X31+24]
	071 Move X30, [X31+32]
	072 Return X0
	073 Move W8, [X0+224]
	074 Compare W8, 0
	075 JumpIfNotEqual {77}
	076 Call 0x1C17DFC
	077 Move X20, 0x94E000
	078 Move W8, [X20+983]
	079 Compare W8, 0
	080 JumpIfNotEqual {86}
	081 Move X0, 0x6C2000
	082 Move X0, [X0+3832]
	083 Call 0x1C17CF4
	084 Move W8, 1
	085 Move [X20+983], W8
	086 Move X0, [X19]
	087 Move W8, [X0+224]
	088 Compare W8, 0
	089 JumpIfNotEqual {92}
	090 Call 0x1C17DFC
	091 Move X0, [X19]
	092 Move X8, [X0+184]
	093 Move W8, [X8+10]
	094 NotImplemented "Instruction CMP not yet implemented."
	095 Move W8, 3
	096 NotImplemented "Instruction CSINC not yet implemented."

Method: System.Void .cctor()

Disassembly:
	0x03A95758 BL 0x3A95354
	0x03A9575C ANDS W31, W0, 0x1
	0x03A95760 MOV X0, X23
	0x03A95764 MOV X1, X22
	0x03A95768 CSEL X20, X24, X21, NE
	0x03A9576C CSEL X21, X21, X24, NE
	0x03A95770 BL 0x3A95354
	0x03A95774 ANDS W31, W0, 0x1
	0x03A95778 CSEL X24, X23, X22, NE
	0x03A9577C MOV X0, X20
	0x03A95780 MOV X1, X24
	0x03A95784 CSEL X25, X22, X23, NE
	0x03A95788 BL 0x3A95354
	0x03A9578C TBZ X0, 0x0, 0x3A957A4
	0x03A95790 MOV X22, X20
	0x03A95794 MOV X23, X21
	0x03A95798 MOV X20, X24
	0x03A9579C MOV X21, X25
	0x03A957A0 B 0x3A957AC
	0x03A957A4 MOV X22, X24
	0x03A957A8 MOV X23, X25
	0x03A957AC MOV X0, X20
	0x03A957B0 MOV X1, X23
	0x03A957B4 BL 0x3A95354
	0x03A957B8 TBZ X0, 0x0, 0x3A9581C
	0x03A957BC MOV X0, X23
	0x03A957C0 MOV X1, X21
	0x03A957C4 BL 0x3A95354
	0x03A957C8 TBZ X0, 0x0, 0x3A95840
	0x03A957CC MOV X0, X22
	0x03A957D0 MOV X1, X20
	0x03A957D4 MOV X2, X23
	0x03A957D8 BL 0x3A953A0
	0x03A957DC MOV X0, X20
	0x03A957E0 MOV X1, X23
	0x03A957E4 MOV X2, X21
	0x03A957E8 MOV V8.16B, V0.16B
	0x03A957EC BL 0x3A953A0
	0x03A957F0 FADD S1, S8, S0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x94E000
	007 Move X22, 0x6BC000
	008 Move X19, 0x6BC000
	009 Move X20, 0x6C2000
	010 Move W8, [X21+924]
	011 Move X22, [X22+1816]
	012 Move X19, [X19+1824]
	013 Move X20, [X20+3832]
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {29}
	018 Move X0, 0x6BC000
	019 Move X0, [X0+1824]
	020 Call 0x1C17CF4
	021 Move X0, 0x6BC000
	022 Move X0, [X0+1816]
	023 Call 0x1C17CF4
	024 Move X0, 0x6C2000
	025 Move X0, [X0+3832]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X21+924], W8
	029 Move X0, [X22]
	030 Call 0x1C17F10
	031 Move X1, [X19]
	032 Move X19, X0
	033 Call List`1<Object>..ctor, X0
	034 Move X8, [X20]
	035 Move X22, [X31+16]
	036 Move X21, [X31+24]
	037 Move X8, [X8+184]
	038 Move [X8], X19
	039 Move X8, [X20]
	040 Move X20, [X31+32]
	041 Move X19, [X31+40]
	042 Move X8, [X8+184]
	043 NotImplemented "Instruction STRH not yet implemented."
	044 Move [X8+10], W31
	045 Move X30, [X31+48]
	046 Return 

