Type: UnityEngine.Rendering.Universal.Internal.DepthOnlyPass

Method: UnityEngine.Rendering.RTHandle get_destination()

Disassembly:
	0x03AAF360 LDR W8, [X24 + 0x18]
	0x03AAF364 ADD X25, X25, 0x1

ISIL:
	001 Move X0, [X0+224]
	002 Return X0

Method: System.Void set_destination(UnityEngine.Rendering.RTHandle value)

Disassembly:
	0x03AAF368 CMP X25, W8, SXTW
	0x03AAF36C B.LT 0x3AAF300

ISIL:
	001 Move [X0+224], X1
	002 Return 

Method: UnityEngine.Rendering.ShaderTagId get_shaderTagId()

Disassembly:
	0x03AAF370 ADRP X8, 0x6A4000
	0x03AAF374 LDR X8, [X8 + 0xFF0]

ISIL:
	001 Move W0, [X0+236]
	002 Return X0

Method: System.Void set_shaderTagId(UnityEngine.Rendering.ShaderTagId value)

Disassembly:
	0x03AAF378 ADRP X24, 0x6A5000
	0x03AAF37C AND W23, W23, 0x1

ISIL:
	001 Move [X0+236], W1
	002 Return 

Method: System.Void .ctor(UnityEngine.Rendering.Universal.RenderPassEvent evt, UnityEngine.Rendering.RenderQueueRange renderQueueRange, UnityEngine.LayerMask layerMask)

Disassembly:
	0x03AAF380 LDR X0, [X8]
	0x03AAF384 LDR W8, [X0 + 0xE0]
	0x03AAF388 LDR X24, [X24 + 0x78]
	0x03AAF38C CBNZ W8, 0x3AAF394
	0x03AAF390 BL 0x1C16DFC
	0x03AAF394 STR W22, [X19 + 0x10]
	0x03AAF398 LDR X2, [X24]
	0x03AAF39C ADD X0, X31, 0xA0
	0x03AAF3A0 MOV X1, X21
	0x03AAF3A4 STR W31, [X31 + 0xA8]
	0x03AAF3A8 STR X31, [X31 + 0xA0]
	0x03AAF3AC BL 0x2439504
	0x03AAF3B0 AND X0, X20, 0x0
	0x03AAF3B4 MOV X1, X31
	0x03AAF3B8 BL 0x3C35CB8
	0x03AAF3BC LDR X1, [X31 + 0xA0]
	0x03AAF3C0 LDR W2, [X31 + 0xA8]
	0x03AAF3C4 MOV W3, W0
	0x03AAF3C8 ADD X0, X31, 0x88
	0x03AAF3CC MOVN W4, 0x0
	0x03AAF3D0 MOV W5, W31
	0x03AAF3D4 MOV X6, X31
	0x03AAF3D8 STP X31, X31, [X31 + 0x88]
	0x03AAF3DC STR X31, [X31 + 0x98]
	0x03AAF3E0 BL 0x3C53F40
	0x03AAF3E4 LDR X8, [X31 + 0x98]
	0x03AAF3E8 LDUR V0, [X31 + 0x88]
	0x03AAF3EC MOVI V1.2D, 0x0
	0x03AAF3F0 ADD X0, X31, 0x10
	0x03AAF3F4 MOV W1, W31
	0x03AAF3F8 MOV X2, X31
	0x03AAF3FC STR X8, [X19 + 0xF0]
	0x03AAF400 STR V0, [X19 + 0xE]
	0x03AAF404 STUR V1, [X31 + 0x6C]
	0x03AAF408 STP V1, V1, [X31 + 0x50]
	0x03AAF40C STP V1, V1, [X31 + 0x30]
	0x03AAF410 STP V1, V1, [X31 + 0x10]
	0x03AAF414 BL 0x3C56240
	0x03AAF418 ADD X20, X19, 0xF8
	0x03AAF41C ADD X1, X31, 0x10
	0x03AAF420 MOVZ W2, 0x6C
	0x03AAF424 MOV X0, X20
	0x03AAF428 BL 0x3EB1AC0
	0x03AAF42C ADD X8, X19, 0x181
	0x03AAF430 ADD X0, X31, 0xB0
	0x03AAF434 MOV X1, X31
	0x03AAF438 STRB W23, [X19 + 0x180]
	0x03AAF43C STRH W31, [X8]
	0x03AAF440 BL 0x3C5B160
	0x03AAF444 TBZ X0, 0x0, 0x3AAF47C
	0x03AAF448 LDR W1, [X31 + 0x130]
	0x03AAF44C MOV X0, X20
	0x03AAF450 MOV X2, X31
	0x03AAF454 BL 0x3C563D0
	0x03AAF458 MOVZ W1, 0x8
	0x03AAF45C MOV X0, X20
	0x03AAF460 MOV X2, X31
	0x03AAF464 BL 0x3C563E0
	0x03AAF468 LDR X1, [X31 + 0xB0]
	0x03AAF46C LDR W2, [X31 + 0xB8]
	0x03AAF470 MOV X0, X20
	0x03AAF474 MOV X3, X31
	0x03AAF478 BL 0x3C563BC
	0x03AAF47C LDP X20, X19, [X31 + 0x110]
	0x03AAF480 LDP X22, X21, [X31 + 0x100]
	0x03AAF484 LDP X24, X23, [X31 + 0xF0]
	0x03AAF488 LDP X26, X25, [X31 + 0xE0]
	0x03AAF48C LDP X28, X27, [X31 + 0xD0]
	0x03AAF490 LDP X29, X30, [X31 + 0xC0]
	0x03AAF494 ADD X31, X31, 0x120
	0x03AAF498 RET
	0x03AAF49C BL 0x1C16F20
	0x03AAF4A0 BL 0x1C16F28
	0x03AAF4A4 MOV X1, X31
	0x03AAF4A8 B 0x33BDD8C
	0x03AAF4AC SUB X31, X31, 0xA0
	0x03AAF4B0 STP X29, X30, [X31 + 0x40]
	0x03AAF4B4 STP X28, X27, [X31 + 0x50]
	0x03AAF4B8 STP X26, X25, [X31 + 0x60]
	0x03AAF4BC STP X24, X23, [X31 + 0x70]
	0x03AAF4C0 STP X22, X21, [X31 + 0x80]
	0x03AAF4C4 STP X20, X19, [X31 + 0x90]
	0x03AAF4C8 ADRP X27, 0x933000
	0x03AAF4CC ADRP X29, 0x6A8000
	0x03AAF4D0 ADRP X28, 0x6A5000
	0x03AAF4D4 LDRB W8, [X27 + 0x450]
	0x03AAF4D8 LDR X29, [X29 + 0x1A0]
	0x03AAF4DC LDR X28, [X28 + 0x90]
	0x03AAF4E0 MOV X25, X7
	0x03AAF4E4 MOV X21, X6
	0x03AAF4E8 MOV X26, X5
	0x03AAF4EC MOV X19, X4
	0x03AAF4F0 MOV W20, W3
	0x03AAF4F4 MOV W23, W2
	0x03AAF4F8 MOV X22, X1
	0x03AAF4FC MOV X24, X0
	0x03AAF500 TBNZ X8, 0x0, 0x3AAF53C
	0x03AAF504 ADRP X0, 0x6A8000
	0x03AAF508 LDR X0, [X0 + 0x1A0]
	0x03AAF50C BL 0x1C16CF4
	0x03AAF510 ADRP X0, 0x6A5000
	0x03AAF514 LDR X0, [X0 + 0x88]
	0x03AAF518 BL 0x1C16CF4
	0x03AAF51C ADRP X0, 0x6A5000
	0x03AAF520 LDR X0, [X0 + 0x90]
	0x03AAF524 BL 0x1C16CF4
	0x03AAF528 ADRP X0, 0x6A5000
	0x03AAF52C LDR X0, [X0 + 0x98]
	0x03AAF530 BL 0x1C16CF4
	0x03AAF534 MOVZ W8, 0x1

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+48], X30
	003 Move [X31+56], X27
	004 Move [X31+64], X26
	005 Move [X31+72], X25
	006 Move [X31+80], X24
	007 Move [X31+88], X23
	008 Move [X31+96], X22
	009 Move [X31+104], X21
	010 Move [X31+112], X20
	011 Move [X31+120], X19
	012 Move X23, 0x934000
	013 Move X24, 0x6A9000
	014 Move W8, [X23+1094]
	015 Move X24, [X24+352]
	016 Move X21, X3
	017 Move X22, X2
	018 Move W20, W1
	019 Move X19, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {44}
	024 Move X0, 0x6A9000
	025 Move X0, [X0+352]
	026 Call 0x1C17CF4
	027 Move X0, 0x6A6000
	028 Move X0, [X0+120]
	029 Call 0x1C17CF4
	030 Move X0, 0x6A9000
	031 Move X0, [X0+3856]
	032 Call 0x1C17CF4
	033 Move X0, 0x6A2000
	034 Move X0, [X0+1432]
	035 Call 0x1C17CF4
	036 Move X0, 0x6A5000
	037 Move X0, [X0+4080]
	038 Call 0x1C17CF4
	039 Move X0, 0x6A9000
	040 Move X0, [X0+3864]
	041 Call 0x1C17CF4
	042 Move W8, 1
	043 Move [X23+1094], W8
	044 Move X0, [X24]
	045 Move X23, 0x6A5000
	046 Move W8, [X0+224]
	047 Move X23, [X23+4080]
	048 Compare W8, 0
	049 JumpIfNotEqual {52}
	050 Call 0x1C17DFC
	051 Move X0, [X24]
	052 Move X8, [X0+184]
	053 Move X27, 0x6A2000
	054 Move X26, 0x6A9000
	055 Move X25, 0x6A6000
	056 Move W8, [X8]
	057 Move [X19+236], W8
	058 Move X0, [X23]
	059 Move X23, 0x6A9000
	060 Move W8, [X0+224]
	061 Move X27, [X27+1432]
	062 Move X23, [X23+3864]
	063 Move X26, [X26+3856]
	064 Move X25, [X25+120]
	065 Compare W8, 0
	066 JumpIfNotEqual {68}
	067 Call 0x1C17DFC
	068 Move X0, X19
	069 Move X1, X31
	070 Call ScriptableRenderPass..ctor, X0
	071 Move X0, [X27]
	072 Call 0x1C17F10
	073 Move X1, [X23]
	074 Move X2, X31
	075 Move X23, X0
	076 Call ProfilingSampler..ctor, X0, X1
	077 Move [X19+56], X23
	078 Move X0, [X26]
	079 Call 0x1C17F10
	080 Move X1, X31
	081 Move X23, X0
	082 Call Object..ctor, X0
	083 Move [X19+240], X23
	084 Move X2, [X25]
	085 Add X0, X31, 32
	086 Move X1, X22
	087 Move [X31+40], W31
	088 Move [X31+32], X31
	089 Call Nullable`1<RenderQueueRange>..ctor, X0, X1
	090 And X0, X21, 0
	091 Move X1, X31
	092 Call LayerMask.op_Implicit, X0
	093 Move X1, [X31+32]
	094 Move W2, [X31+40]
	095 Move W3, W0
	096 Add X0, X31, 8
	097 Move TEMP, 0
	098 Not TEMP
	099 Move W4, TEMP
	100 Move W5, W31
	101 Move X6, X31
	102 Move [X31+8], X31
	103 Move [X31+16], X31
	104 Move [X31+24], X31
	105 Call FilteringSettings..ctor, X0, X1, X2, X3, X4
	106 Move X8, [X31+24]
	107 NotImplemented "Instruction LDUR not yet implemented."
	108 Add X9, X19, 248
	109 Move X22, [X31+96]
	110 Move X21, [X31+104]
	111 Move [X9+16], X8
	112 Move [X19+248], V0
	113 Move [X19+16], W20
	114 Move [X19+66], W31
	115 Move X8, [X24]
	116 Move X24, [X31+80]
	117 Move X23, [X31+88]
	118 Move X26, [X31+64]
	119 Move X25, [X31+72]
	120 Move X30, [X31+48]
	121 Move X27, [X31+56]
	122 Move X8, [X8+184]
	123 Move W8, [X8]
	124 Move [X19+236], W8
	125 Move X20, [X31+112]
	126 Move X19, [X31+120]
	127 Add X31, X31, 128
	128 Return 

Method: System.Void Setup(UnityEngine.RenderTextureDescriptor baseDescriptor, UnityEngine.Rendering.RTHandle depthAttachmentHandle)

Disassembly:
	0x03AAF540 MOVZ W1, 0x3
	0x03AAF544 BL 0x1C16D6C
	0x03AAF548 LDR X1, [X28]
	0x03AAF54C MOV X27, X0

ISIL:
	001 Move [X0+224], X2
	002 Move W8, [X1+28]
	003 Move [X0+232], W8
	004 Return 

Method: System.Void OnCameraSetup(UnityEngine.Rendering.CommandBuffer cmd, ref UnityEngine.Rendering.Universal.RenderingData renderingData)

Disassembly:
	0x03AAF550 ADD X0, X31, 0x38
	0x03AAF554 MOV X2, X31
	0x03AAF558 STR W31, [X31 + 0x38]
	0x03AAF55C BL 0x3C5A49C
	0x03AAF560 CBZ X27, 0x3AAF628
	0x03AAF564 LDR W8, [X27 + 0x18]
	0x03AAF568 CBZ W8, 0x3AAF624
	0x03AAF56C LDR W8, [X31 + 0x38]
	0x03AAF570 ADRP X9, 0x6A5000
	0x03AAF574 LDR X9, [X9 + 0x88]
	0x03AAF578 ADD X0, X31, 0x30
	0x03AAF57C STR W8, [X27 + 0x20]
	0x03AAF580 MOV X2, X31
	0x03AAF584 LDR X1, [X9]
	0x03AAF588 STR W31, [X31 + 0x30]
	0x03AAF58C BL 0x3C5A49C
	0x03AAF590 LDR W8, [X27 + 0x18]
	0x03AAF594 CMP W8, 0x1
	0x03AAF598 B.LS 0x3AAF624
	0x03AAF59C LDR W8, [X31 + 0x30]
	0x03AAF5A0 ADRP X9, 0x6A5000
	0x03AAF5A4 LDR X9, [X9 + 0x98]
	0x03AAF5A8 ADD X0, X31, 0x28
	0x03AAF5AC STR W8, [X27 + 0x24]
	0x03AAF5B0 MOV X2, X31
	0x03AAF5B4 LDR X1, [X9]
	0x03AAF5B8 STR W31, [X31 + 0x28]
	0x03AAF5BC BL 0x3C5A49C
	0x03AAF5C0 LDR W8, [X27 + 0x18]
	0x03AAF5C4 CMP W8, 0x2
	0x03AAF5C8 B.LS 0x3AAF624
	0x03AAF5CC LDR W8, [X31 + 0x28]
	0x03AAF5D0 LDR W9, [X31 + 0xA0]
	0x03AAF5D4 AND X6, X26, 0x0
	0x03AAF5D8 AND W3, W23, 0x1
	0x03AAF5DC STR W8, [X27 + 0x28]
	0x03AAF5E0 AND X8, X25, 0x0
	0x03AAF5E4 MOV X0, X24
	0x03AAF5E8 MOV X1, X22

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X2+464]
	004 Compare X8, 0
	005 JumpIfEqual {45}
	006 Move W9, [X8+421]
	007 Move X19, X0
	008 Compare W9, 0
	009 JumpIfEqual {28}
	010 Move W9, [X2+224]
	011 Compare W9, 0
	012 JumpIfEqual {16}
	013 Move W9, [X2+380]
	014 Compare W9, 0
	015 JumpIfEqual {28}
	016 Move X0, X8
	017 Move X1, X31
	018 Call ScriptableRenderer.get_cameraDepthTargetHandle, X0
	019 Move X1, X0
	020 Move X0, X19
	021 Move X2, X31
	022 Call ScriptableRenderPass.ConfigureTarget, X0, X1
	023 Move S0, W31
	024 Move S1, W31
	025 Move S2, W31
	026 Move S3, 1
	027 Move W1, 2
	028 Move X1, [X19+224]
	029 Move W8, 1
	030 Move X0, X19
	031 Move X2, X31
	032 Move [X19+66], W8
	033 Call ScriptableRenderPass.ConfigureTarget, X0, X1
	034 Move S0, W31
	035 Move S1, W31
	036 Move S2, W31
	037 Move S3, 1
	038 Move W1, 7
	039 Move X0, X19
	040 Move X2, X31
	041 Move X30, [X31+16]
	042 Move X19, [X31+24]
	043 Call ScriptableRenderPass.ConfigureClear, X0, X1, X2
	044 Return 
	045 Call 0x1C17F20

Method: System.Void ExecutePass(UnityEngine.Rendering.ScriptableRenderContext context, UnityEngine.Rendering.Universal.Internal.DepthOnlyPass/PassData passData, ref UnityEngine.Rendering.Universal.RenderingData renderingData)

Disassembly:
	0x03AAF5EC MOV X2, X27
	0x03AAF5F0 MOV W4, W20
	0x03AAF5F4 MOV X5, X19
	0x03AAF5F8 STR W9, [X31 + 0x10]
	0x03AAF5FC STP X21, X8, [X31]
	0x03AAF600 BL 0x3AAF16C
	0x03AAF604 LDP X20, X19, [X31 + 0x90]
	0x03AAF608 LDP X22, X21, [X31 + 0x80]
	0x03AAF60C LDP X24, X23, [X31 + 0x70]
	0x03AAF610 LDP X26, X25, [X31 + 0x60]
	0x03AAF614 LDP X28, X27, [X31 + 0x50]
	0x03AAF618 LDP X29, X30, [X31 + 0x40]
	0x03AAF61C ADD X31, X31, 0xA0
	0x03AAF620 RET
	0x03AAF624 BL 0x1C16F28
	0x03AAF628 BL 0x1C16F20
	0x03AAF62C SUB X31, X31, 0xC0
	0x03AAF630 STR X30, [X31 + 0x90]
	0x03AAF634 STP X22, X21, [X31 + 0xA0]
	0x03AAF638 STP X20, X19, [X31 + 0xB0]
	0x03AAF63C ADRP X22, 0x933000
	0x03AAF640 LDRB W8, [X22 + 0x452]
	0x03AAF644 MOV X19, X2
	0x03AAF648 MOV X20, X1
	0x03AAF64C MOV X21, X0
	0x03AAF650 TBNZ X8, 0x0, 0x3AAF668
	0x03AAF654 ADRP X0, 0x6A8000
	0x03AAF658 LDR X0, [X0 + 0x168]
	0x03AAF65C BL 0x1C16CF4
	0x03AAF660 MOVZ W8, 0x1
	0x03AAF664 STRB W8, [X22 + 0x452]
	0x03AAF668 LDR X8, [X21 + 0x188]
	0x03AAF66C CBZ X8, 0x3AAF758
	0x03AAF670 LDRB W9, [X21 + 0x180]
	0x03AAF674 ADD X0, X8, 0x20
	0x03AAF678 MOVZ W2, 0x2B8
	0x03AAF67C MOV X1, X19
	0x03AAF680 STRB W9, [X8 + 0x2D8]
	0x03AAF684 BL 0x3EB1B30
	0x03AAF688 LDR X22, [X21 + 0x188]
	0x03AAF68C ADD X1, X21, 0xF8
	0x03AAF690 ADD X0, X31, 0x20
	0x03AAF694 MOVZ W2, 0x6C
	0x03AAF698 BL 0x3EB1AC0
	0x03AAF69C CBZ X22, 0x3AAF758
	0x03AAF6A0 ADD X0, X22, 0x2DC
	0x03AAF6A4 ADD X1, X31, 0x20
	0x03AAF6A8 MOVZ W2, 0x6C
	0x03AAF6AC BL 0x3EB1AC0
	0x03AAF6B0 LDR X8, [X21 + 0x188]
	0x03AAF6B4 LDR X9, [X21 + 0xF0]
	0x03AAF6B8 LDR V0, [X21 + 0xE]
	0x03AAF6BC STR X9, [X31 + 0x10]
	0x03AAF6C0 STR V0, [X31]
	0x03AAF6C4 CBZ X8, 0x3AAF758
	0x03AAF6C8 LDR X9, [X31 + 0x10]
	0x03AAF6CC LDR V0, [X31]
	0x03AAF6D0 ADD X8, X8, 0x348
	0x03AAF6D4 STR X9, [X8 + 0x10]
	0x03AAF6D8 STR V0, [X8]
	0x03AAF6DC LDR X22, [X21 + 0x188]
	0x03AAF6E0 CBZ X22, 0x3AAF758
	0x03AAF6E4 LDR X8, [X21 + 0x168]
	0x03AAF6E8 ADRP X9, 0x6A8000
	0x03AAF6EC STR X8, [X22 + 0x360]
	0x03AAF6F0 LDR X8, [X21 + 0x178]
	0x03AAF6F4 STR X8, [X22 + 0x368]
	0x03AAF6F8 LDRB W8, [X21 + 0x181]
	0x03AAF6FC LDR X9, [X9 + 0x168]
	0x03AAF700 STR X21, [X22 + 0x378]
	0x03AAF704 STRB W8, [X22 + 0x371]
	0x03AAF708 LDR X0, [X9]
	0x03AAF70C LDR W8, [X0 + 0xE0]
	0x03AAF710 CBNZ W8, 0x3AAF718
	0x03AAF714 BL 0x1C16DFC
	0x03AAF718 MOV X1, X22
	0x03AAF71C MOV X2, X19
	0x03AAF720 BL 0x3AAF75C
	0x03AAF724 LDR X21, [X21 + 0x188]
	0x03AAF728 ADD X0, X19, 0x18
	0x03AAF72C MOV X1, X31
	0x03AAF730 BL 0x3A92DE8
	0x03AAF734 AND W3, W0, 0x1
	0x03AAF738 MOV X0, X20
	0x03AAF73C MOV X1, X21
	0x03AAF740 MOV X2, X19
	0x03AAF744 LDP X20, X19, [X31 + 0xB0]
	0x03AAF748 LDP X22, X21, [X31 + 0xA0]
	0x03AAF74C LDR X30, [X31 + 0x90]
	0x03AAF750 ADD X31, X31, 0xC0
	0x03AAF754 B 0x3AAF838
	0x03AAF758 BL 0x1C16F20
	0x03AAF75C SUB X31, X31, 0x20
	0x03AAF760 STP X30, X19, [X31 + 0x10]
	0x03AAF764 STRH W31, [X31 + 0xC]
	0x03AAF768 LDR X8, [X2 + 0x1D0]
	0x03AAF76C CBZ X8, 0x3AAF834
	0x03AAF770 LDRB W8, [X8 + 0x1A5]
	0x03AAF774 CBZ W8, 0x3AAF7B8
	0x03AAF778 CBZ X1, 0x3AAF834
	0x03AAF77C LDRB W8, [X1 + 0x2D8]
	0x03AAF780 CBZ W8, 0x3AAF7BC
	0x03AAF784 LDR W8, [X2 + 0xE0]
	0x03AAF788 CBZ W8, 0x3AAF794
	0x03AAF78C LDRB W8, [X2 + 0x17C]
	0x03AAF790 CBZ W8, 0x3AAF7BC
	0x03AAF794 ADD X19, X1, 0x2DC
	0x03AAF798 ADD X0, X31, 0x8
	0x03AAF79C MOVZ W2, 0x3
	0x03AAF7A0 MOV W1, W31
	0x03AAF7A4 MOV X3, X31
	0x03AAF7A8 STRH W31, [X31 + 0x8]
	0x03AAF7AC BL 0x3C53458
	0x03AAF7B0 LDRH W1, [X31 + 0x8]
	0x03AAF7B4 B 0x3AAF800
	0x03AAF7B8 CBZ X1, 0x3AAF834
	0x03AAF7BC ADD X19, X1, 0x2DC
	0x03AAF7C0 MOV X0, X19
	0x03AAF7C4 MOV X1, X31
	0x03AAF7C8 BL 0x3C5639C
	0x03AAF7CC STRH W0, [X31 + 0xC]
	0x03AAF7D0 ADD X0, X31, 0xC
	0x03AAF7D4 MOV X1, X31
	0x03AAF7D8 BL 0x3C534CC
	0x03AAF7DC CMP W0, 0x3
	0x03AAF7E0 B.NE 0x3AAF828
	0x03AAF7E4 ADD X0, X31, 0x4
	0x03AAF7E8 MOVZ W1, 0x1
	0x03AAF7EC MOVZ W2, 0x4
	0x03AAF7F0 MOV X3, X31
	0x03AAF7F4 STRH W31, [X31 + 0x4]
	0x03AAF7F8 BL 0x3C53458
	0x03AAF7FC LDRH W1, [X31 + 0x4]
	0x03AAF800 MOV X0, X19
	0x03AAF804 MOV X2, X31
	0x03AAF808 BL 0x3C563A4
	0x03AAF80C MOV X0, X19
	0x03AAF810 MOV X1, X31
	0x03AAF814 BL 0x3C563D8
	0x03AAF818 ORR W1, W0, 0x4
	0x03AAF81C MOV X0, X19
	0x03AAF820 MOV X2, X31
	0x03AAF824 BL 0x3C563E0
	0x03AAF828 LDP X30, X19, [X31 + 0x10]

ISIL:
	001 Move [X31-64], X29
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Subtract X31, X31, 464
	009 NotImplemented "Instruction MRS not yet implemented."
	010 Move X8, [X23+40]
	011 Move X20, 0x934000
	012 Move X19, X2
	013 Move X22, X1
	014 Move [X31+456], X8
	015 Move W8, [X20+1095]
	016 Move [X31+48], X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {35}
	021 Move X0, 0x6A6000
	022 Move X0, [X0+184]
	023 Call 0x1C17CF4
	024 Move X0, 0x6A6000
	025 Move X0, [X0+168]
	026 Call 0x1C17CF4
	027 Move X0, 0x6A6000
	028 Move X0, [X0+16]
	029 Call 0x1C17CF4
	030 Move X0, 0x6A2000
	031 Move X0, [X0+3200]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X20+1095], W8
	035 Add X0, X31, 256
	036 Move W2, 196
	037 Move W1, W31
	038 Move [X31+8], W31
	039 Call 0x3EB2B10
	040 Compare X22, 0
	041 JumpIfEqual {126}
	042 Move X8, 0x6A6000
	043 Move X8, [X8+168]
	044 Add X9, X22, 724
	045 Move W20, [X22+720]
	046 Move X10, [X9+16]
	047 Move V0, [X9]
	048 Move X1, [X8]
	049 Move X22, 0x6A2000
	050 Move X21, [X19]
	051 Move X22, [X22+3200]
	052 Move W0, 8
	053 Move [X31+32], X10
	054 Move [X31+1], V0
	055 Call 0x2236BC0, X0
	056 Move X2, X0
	057 Add X0, X31, 8
	058 Move X1, X21
	059 Move X3, X31
	060 Call ProfilingScope..ctor, X0, X1, X2
	061 Move X0, [X22]
	062 Move W8, [X0+224]
	063 Compare W8, 0
	064 JumpIfNotEqual {66}
	065 Call 0x1C17DFC
	066 Add X0, X31, 48
	067 Move X1, X21
	068 Move X2, X31
	069 Call ScriptableRenderContext.ExecuteCommandBuffer, X0, X1
	070 Compare X21, 0
	071 JumpIfEqual {127}
	072 Move X0, X21
	073 Move X1, X31
	074 Call CommandBuffer.Clear, X0
	075 Move X8, 0x6A6000
	076 Move X8, [X8+16]
	077 Move W21, [X19+396]
	078 Move X0, [X8]
	079 Move W8, [X0+224]
	080 Compare W8, 0
	081 JumpIfNotEqual {83}
	082 Call 0x1C17DFC
	083 Add X8, X31, 56
	084 Move X0, X20
	085 Move X1, X19
	086 Move W2, W21
	087 Move X3, X31
	088 Call RenderingUtils.CreateDrawingSettings, X0, X1, X2
	089 Move X20, 0x6A6000
	090 Move X20, [X20+184]
	091 Add X0, X31, 256
	092 Add X1, X31, 56
	093 Move W2, 196
	094 Call 0x3EB2AC0
	095 Move X0, [X20]
	096 Move W8, [X0+224]
	097 Compare W8, 0
	098 JumpIfNotEqual {100}
	099 Call 0x1C17DFC
	100 Add X0, X31, 256
	101 Move W1, W31
	102 Move X2, X31
	103 Call DrawingSettings.set_perObjectData, X0, X1
	104 Move X1, [X19+8]
	105 Move X2, [X19+16]
	106 Add X0, X31, 48
	107 Add X3, X31, 256
	108 Add X4, X31, 16
	109 Move X5, X31
	110 Call ScriptableRenderContext.DrawRenderers, X0, X1, X2, X3
	111 Add X0, X31, 8
	112 Move X1, X31
	113 Call ProfilingScope.Dispose, X0
	114 Move X8, [X23+40]
	115 Move X9, [X31+456]
	116 NotImplemented "Instruction CMP not yet implemented."
	117 Add X31, X31, 464
	118 Move X20, [X31+48]
	119 Move X19, [X31+56]
	120 Move X22, [X31+32]
	121 Move X21, [X31+40]
	122 Move X30, [X31+16]
	123 Move X23, [X31+24]
	124 Move X29, [X31+64]
	125 Return 
	126 Call 0x1C17F20
	127 Call 0x1C17F20
	128 Call 0x3EB2B20
	129 Move X19, X0
	130 NotImplemented "Instruction CMP not yet implemented."
	131 Move X0, X19
	132 Call 0x3EB2AD0
	133 Move X20, [X0]
	134 Call 0x3EB2AE0
	135 Add X0, X31, 8
	136 Move X1, X31
	137 Call ProfilingScope.Dispose, X0
	138 Compare X20, 0
	139 JumpIfEqual {114}
	140 Move X0, X20
	141 Call 0x1C17F18
	142 Move X20, X31
	143 Move X19, X0
	144 Add X0, X31, 8
	145 Move X1, X31
	146 Call ProfilingScope.Dispose, X0
	147 Compare X20, 0
	148 JumpIfNotEqual {151}
	149 Move X0, X19
	150 Call 0x1D2D690
	151 Move X0, X20
	152 Call 0x1C17F18
	153 Call 0x1991590

Method: System.Void Execute(UnityEngine.Rendering.ScriptableRenderContext context, ref UnityEngine.Rendering.Universal.RenderingData renderingData)

Disassembly:
	0x03AAF82C ADD X31, X31, 0x20
	0x03AAF830 RET
	0x03AAF834 BL 0x1C16F20
	0x03AAF838 STP D9, D8, [X31 - 0x70]!
	0x03AAF83C STP X29, X30, [X31 + 0x10]
	0x03AAF840 STP X28, X27, [X31 + 0x20]
	0x03AAF844 STP X26, X25, [X31 + 0x30]
	0x03AAF848 STP X24, X23, [X31 + 0x40]
	0x03AAF84C STP X22, X21, [X31 + 0x50]
	0x03AAF850 STP X20, X19, [X31 + 0x60]
	0x03AAF854 SUB X31, X31, 0x1E0
	0x03AAF858 MRS X26, 0xC000
	0x03AAF85C LDR X8, [X26 + 0x28]
	0x03AAF860 ADRP X19, 0x933000
	0x03AAF864 MOV W22, W3
	0x03AAF868 MOV X20, X2
	0x03AAF86C STR X8, [X31 + 0x1D8]
	0x03AAF870 LDRB W8, [X19 + 0x453]
	0x03AAF874 MOV X21, X1
	0x03AAF878 STR X0, [X31 + 0x40]
	0x03AAF87C TBNZ X8, 0x0, 0x3AAF900
	0x03AAF880 ADRP X0, 0x66C000
	0x03AAF884 LDR X0, [X0 + 0x8F8]
	0x03AAF888 BL 0x1C16CF4
	0x03AAF88C ADRP X0, 0x6A5000
	0x03AAF890 LDR X0, [X0 + 0xB0]
	0x03AAF894 BL 0x1C16CF4
	0x03AAF898 ADRP X0, 0x6A8000
	0x03AAF89C LDR X0, [X0 + 0x168]
	0x03AAF8A0 BL 0x1C16CF4
	0x03AAF8A4 ADRP X0, 0x6A5000
	0x03AAF8A8 LDR X0, [X0 + 0x10]
	0x03AAF8AC BL 0x1C16CF4
	0x03AAF8B0 ADRP X0, 0x6A1000
	0x03AAF8B4 LDR X0, [X0 + 0xC80]
	0x03AAF8B8 BL 0x1C16CF4
	0x03AAF8BC ADRP X0, 0x6A4000
	0x03AAF8C0 LDR X0, [X0 + 0xFF0]
	0x03AAF8C4 BL 0x1C16CF4
	0x03AAF8C8 ADRP X0, 0x6A5000
	0x03AAF8CC LDR X0, [X0 + 0x20]
	0x03AAF8D0 BL 0x1C16CF4
	0x03AAF8D4 ADRP X0, 0x6A8000
	0x03AAF8D8 LDR X0, [X0 + 0xFA0]
	0x03AAF8DC BL 0x1C16CF4
	0x03AAF8E0 ADRP X0, 0x6A8000
	0x03AAF8E4 LDR X0, [X0 + 0xFA8]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+32], X30
	003 Move [X31+48], X22
	004 Move [X31+56], X21
	005 Move [X31+64], X20
	006 Move [X31+72], X19
	007 Move X22, 0x934000
	008 Move W8, [X22+1096]
	009 Move X19, X2
	010 Move X20, X1
	011 Move X21, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x6A9000
	017 Move X0, [X0+352]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+1096], W8
	021 Move X8, [X21+240]
	022 Compare X8, 0
	023 JumpIfEqual {58}
	024 Move W9, [X21+236]
	025 Add X10, X21, 248
	026 Move [X8+720], W9
	027 Move X8, [X21+240]
	028 Move X9, [X10+16]
	029 NotImplemented "Instruction LDUR not yet implemented."
	030 Move [X31+16], X9
	031 Move [X31], V0
	032 Compare X8, 0
	033 JumpIfEqual {58}
	034 Move X9, [X31+16]
	035 Move V0, [X31]
	036 Move X10, 0x6A9000
	037 Move X10, [X10+352]
	038 Add X8, X8, 724
	039 Move [X8+16], X9
	040 Move [X8], V0
	041 Move X0, [X10]
	042 Move X21, [X21+240]
	043 Move W8, [X0+224]
	044 Compare W8, 0
	045 JumpIfNotEqual {47}
	046 Call 0x1C17DFC
	047 Move X0, X20
	048 Move X1, X21
	049 Move X2, X19
	050 Move X20, [X31+64]
	051 Move X19, [X31+72]
	052 Move X22, [X31+48]
	053 Move X21, [X31+56]
	054 Move X30, [X31+32]
	055 Add X31, X31, 80
	056 Call DepthOnlyPass.ExecutePass, X0, X1, X2
	057 Return 
	058 Call 0x1C17F20

Method: System.Void Render(UnityEngine.Experimental.Rendering.RenderGraphModule.RenderGraph renderGraph, out UnityEngine.Experimental.Rendering.RenderGraphModule.TextureHandle cameraDepthTexture, ref UnityEngine.Rendering.Universal.RenderingData renderingData)

Disassembly:
	0x03AAF8E8 BL 0x1C16CF4
	0x03AAF8EC ADRP X0, 0x6A8000
	0x03AAF8F0 LDR X0, [X0 + 0xEC8]
	0x03AAF8F4 BL 0x1C16CF4
	0x03AAF8F8 MOVZ W8, 0x1
	0x03AAF8FC STRB W8, [X19 + 0x453]
	0x03AAF900 ADD X0, X31, 0x110
	0x03AAF904 MOVZ W2, 0xC4
	0x03AAF908 MOV W1, W31
	0x03AAF90C STRB W31, [X31 + 0x38]
	0x03AAF910 STP X31, X31, [X31 + 0x10]
	0x03AAF914 STR X31, [X31 + 0x20]
	0x03AAF918 BL 0x3EB1B10
	0x03AAF91C CBZ X21, 0x3AAFCFC
	0x03AAF920 LDR X19, [X20]
	0x03AAF924 LDR X2, [X21 + 0x368]
	0x03AAF928 ADRP X23, 0x6A8000
	0x03AAF92C LDR X23, [X23 + 0x168]
	0x03AAF930 ADD X0, X31, 0x38
	0x03AAF934 MOV X1, X19
	0x03AAF938 MOV X3, X31
	0x03AAF93C BL 0x39B1DB0
	0x03AAF940 LDRB W8, [X21 + 0x2D8]
	0x03AAF944 LDR X0, [X23]
	0x03AAF948 FMOV S0, 1
	0x03AAF94C FMOV S1, W31
	0x03AAF950 CMP W8, 0x0
	0x03AAF954 FCSEL S0, S1, S0, EQ
	0x03AAF958 STR X31, [X31 + 0x30]
	0x03AAF95C STR W31, [X31 + 0x2C]
	0x03AAF960 STR S0, [X31 + 0x28]
	0x03AAF964 LDR W8, [X0 + 0xE0]
	0x03AAF968 CBNZ W8, 0x3AAF970
	0x03AAF96C BL 0x1C16DFC
	0x03AAF970 CBZ X19, 0x3AAFD00
	0x03AAF974 LDR X8, [X23]
	0x03AAF978 LDP S3, S2, [X31 + 0x28]
	0x03AAF97C LDP S1, S0, [X31 + 0x30]
	0x03AAF980 LDR X8, [X8 + 0xB8]
	0x03AAF984 LDR W1, [X8]
	0x03AAF988 MOV X0, X19
	0x03AAF98C MOV X2, X31
	0x03AAF990 BL 0x3C4CED8
	0x03AAF994 LDRB W8, [X21 + 0x1AA]
	0x03AAF998 CBZ W8, 0x3AAF9C4
	0x03AAF99C LDRB W8, [X21 + 0x371]
	0x03AAF9A0 CBZ W8, 0x3AAF9C4
	0x03AAF9A4 LDR X0, [X21 + 0x1B0]
	0x03AAF9A8 CBZ X0, 0x3AAFD0C
	0x03AAF9AC MOV W1, W31
	0x03AAF9B0 MOV X2, X31
	0x03AAF9B4 BL 0x3986250
	0x03AAF9B8 MOV X0, X19
	0x03AAF9BC MOV X1, X31
	0x03AAF9C0 BL 0x3C4C86C
	0x03AAF9C4 ADRP X23, 0x6A5000
	0x03AAF9C8 LDR X23, [X23 + 0x20]
	0x03AAF9CC ANDS W31, W22, 0x1
	0x03AAF9D0 FMOV S0, 1
	0x03AAF9D4 FMOV S1, -1
	0x03AAF9D8 LDR X0, [X23]
	0x03AAF9DC FCSEL S8, S1, S0, NE
	0x03AAF9E0 FMOV S1, W31
	0x03AAF9E4 FCSEL S9, S0, S1, NE
	0x03AAF9E8 LDR W8, [X0 + 0xE0]
	0x03AAF9EC CBNZ W8, 0x3AAF9F8
	0x03AAF9F0 BL 0x1C16DFC
	0x03AAF9F4 LDR X0, [X23]
	0x03AAF9F8 LDR X8, [X0 + 0xB8]
	0x03AAF9FC LDR W1, [X8 + 0xB0]
	0x03AAFA00 FMOV S3, 1
	0x03AAFA04 MOV X0, X19
	0x03AAFA08 MOV V0.16B, V8.16B
	0x03AAFA0C MOV V1.16B, V9.16B
	0x03AAFA10 MOV V2.16B, V8.16B
	0x03AAFA14 MOV X2, X31
	0x03AAFA18 BL 0x3C4CED8
	0x03AAFA1C LDR W8, [X20 + 0xF8]
	0x03AAFA20 FMOV S8, W31
	0x03AAFA24 CMP W8, 0x2
	0x03AAFA28 B.LT 0x3AAFA40
	0x03AAFA2C LDRB W8, [X21 + 0x2D8]
	0x03AAFA30 FMOV S0, 1
	0x03AAFA34 FMOV S1, W31
	0x03AAFA38 CMP W8, 0x0
	0x03AAFA3C FCSEL S8, S1, S0, EQ
	0x03AAFA40 LDR X0, [X23]
	0x03AAFA44 LDR W8, [X0 + 0xE0]
	0x03AAFA48 CBNZ W8, 0x3AAFA54
	0x03AAFA4C BL 0x1C16DFC
	0x03AAFA50 LDR X0, [X23]
	0x03AAFA54 LDR X8, [X0 + 0xB8]
	0x03AAFA58 LDR W1, [X8 + 0x3C]
	0x03AAFA5C MOV X0, X19
	0x03AAFA60 MOV V0.16B, V8.16B
	0x03AAFA64 MOV X2, X31
	0x03AAFA68 BL 0x3C4CDDC
	0x03AAFA6C LDR X0, [X21 + 0x378]
	0x03AAFA70 CBZ X0, 0x3AAFD04
	0x03AAFA74 LDR X8, [X0]
	0x03AAFA78 LDP X9, X2, [X8 + 0x1E8]
	0x03AAFA7C MOV X1, X19
	0x03AAFA80 BLR X9
	0x03AAFA84 ADRP X27, 0x6A1000
	0x03AAFA88 LDR X27, [X27 + 0xC80]
	0x03AAFA8C LDR X0, [X27]
	0x03AAFA90 LDR W8, [X0 + 0xE0]
	0x03AAFA94 CBNZ W8, 0x3AAFA9C
	0x03AAFA98 BL 0x1C16DFC
	0x03AAFA9C ADD X0, X31, 0x40
	0x03AAFAA0 MOV X1, X19
	0x03AAFAA4 MOV X2, X31
	0x03AAFAA8 BL 0x3C58FE4
	0x03AAFAAC MOV X0, X19
	0x03AAFAB0 MOV X1, X31
	0x03AAFAB4 BL 0x3C4C310
	0x03AAFAB8 LDRB W9, [X21 + 0x2D8]
	0x03AAFABC CBZ W9, 0x3AAFAC8
	0x03AAFAC0 LDR W22, [X20 + 0x18C]
	0x03AAFAC4 B 0x3AAFACC
	0x03AAFAC8 MOVZ W22, 0x17
	0x03AAFACC LDR X10, [X20 + 0x1D0]
	0x03AAFAD0 CBZ X10, 0x3AAFD08
	0x03AAFAD4 ADRP X8, 0x6A5000
	0x03AAFAD8 LDR X8, [X8 + 0x10]
	0x03AAFADC CBZ W9, 0x3AAFAFC
	0x03AAFAE0 LDRB W9, [X10 + 0x1A5]
	0x03AAFAE4 CBZ W9, 0x3AAFAFC
	0x03AAFAE8 LDR W9, [X20 + 0xE0]
	0x03AAFAEC CBZ W9, 0x3AAFAF8
	0x03AAFAF0 LDRB W9, [X20 + 0x17C]
	0x03AAFAF4 CBZ W9, 0x3AAFAFC
	0x03AAFAF8 MOVZ W22, 0x33
	0x03AAFAFC ADD X9, X21, 0x348
	0x03AAFB00 LDR X10, [X9 + 0x10]
	0x03AAFB04 LDR V0, [X9]
	0x03AAFB08 LDR X0, [X8]
	0x03AAFB0C STR X10, [X31 + 0x20]
	0x03AAFB10 STR V0, [X31 + 0x1]
	0x03AAFB14 LDR W8, [X0 + 0xE0]
	0x03AAFB18 LDR X23, [X21 + 0x360]
	0x03AAFB1C CBNZ W8, 0x3AAFB24
	0x03AAFB20 BL 0x1C16DFC
	0x03AAFB24 ADD X8, X31, 0x48
	0x03AAFB28 MOV X0, X23
	0x03AAFB2C MOV X1, X20
	0x03AAFB30 MOV W2, W22
	0x03AAFB34 MOV X3, X31
	0x03AAFB38 BL 0x3A7358C
	0x03AAFB3C ADRP X22, 0x6A4000
	0x03AAFB40 LDR X22, [X22 + 0xFF0]
	0x03AAFB44 ADD X0, X31, 0x110
	0x03AAFB48 ADD X1, X31, 0x48
	0x03AAFB4C MOVZ W2, 0xC4
	0x03AAFB50 BL 0x3EB1AC0
	0x03AAFB54 LDR X0, [X22]
	0x03AAFB58 LDR W8, [X0 + 0xE0]
	0x03AAFB5C CBNZ W8, 0x3AAFB64
	0x03AAFB60 BL 0x1C16DFC
	0x03AAFB64 MOV X0, X20
	0x03AAFB68 MOV X1, X31
	0x03AAFB6C BL 0x3A43B70
	0x03AAFB70 MOV X22, X0
	0x03AAFB74 CBZ X0, 0x3AAFC28
	0x03AAFB78 ADRP X28, 0x6A8000
	0x03AAFB7C LDR X28, [X28 + 0xFA8]
	0x03AAFB80 LDR X23, [X31 + 0x40]
	0x03AAFB84 LDR X8, [X28]
	0x03AAFB88 LDR W9, [X8 + 0xE0]
	0x03AAFB8C CBNZ W9, 0x3AAFB9C
	0x03AAFB90 MOV X0, X8
	0x03AAFB94 BL 0x1C16DFC
	0x03AAFB98 LDR X8, [X28]
	0x03AAFB9C LDR X9, [X8 + 0xB8]
	0x03AAFBA0 LDR X24, [X9 + 0x8]
	0x03AAFBA4 CBNZ X24, 0x3AAFBFC
	0x03AAFBA8 LDR W9, [X8 + 0xE0]
	0x03AAFBAC CBNZ W9, 0x3AAFBBC
	0x03AAFBB0 MOV X0, X8
	0x03AAFBB4 BL 0x1C16DFC
	0x03AAFBB8 LDR X8, [X28]
	0x03AAFBBC ADRP X9, 0x6A5000
	0x03AAFBC0 LDR X8, [X8 + 0xB8]
	0x03AAFBC4 LDR X9, [X9 + 0xB0]
	0x03AAFBC8 LDR X25, [X8]
	0x03AAFBCC LDR X0, [X9]
	0x03AAFBD0 BL 0x1C16F10
	0x03AAFBD4 ADRP X8, 0x6A8000
	0x03AAFBD8 LDR X8, [X8 + 0xFA0]
	0x03AAFBDC MOV X24, X0
	0x03AAFBE0 LDR X2, [X8]
	0x03AAFBE4 MOV X1, X25
	0x03AAFBE8 MOV X3, X31
	0x03AAFBEC BL 0x3A37934
	0x03AAFBF0 LDR X8, [X28]
	0x03AAFBF4 LDR X8, [X8 + 0xB8]
	0x03AAFBF8 STR X24, [X8 + 0x8]
	0x03AAFBFC ADD X6, X21, 0x2DC
	0x03AAFC00 ADD X4, X31, 0x110
	0x03AAFC04 ADD X5, X31, 0x10
	0x03AAFC08 MOV X0, X22
	0x03AAFC0C MOV X1, X23
	0x03AAFC10 MOV X2, X19
	0x03AAFC14 MOV X3, X20
	0x03AAFC18 MOV X7, X24
	0x03AAFC1C STR X31, [X31]
	0x03AAFC20 BL 0x3A36908
	0x03AAFC24 B 0x3AAFC5C
	0x03AAFC28 LDR X0, [X27]
	0x03AAFC2C LDP X22, X20, [X20 + 0x8]
	0x03AAFC30 LDR W8, [X0 + 0xE0]
	0x03AAFC34 CBNZ W8, 0x3AAFC3C
	0x03AAFC38 BL 0x1C16DFC
	0x03AAFC3C ADD X5, X21, 0x2DC
	0x03AAFC40 ADD X0, X31, 0x40
	0x03AAFC44 ADD X3, X31, 0x110
	0x03AAFC48 ADD X4, X31, 0x10
	0x03AAFC4C MOV X1, X22
	0x03AAFC50 MOV X2, X20
	0x03AAFC54 MOV X6, X31

ISIL:
	001 Move [X31-64], X29
	002 Move [X31-56], X30
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Subtract X31, X31, 928
	010 Move X24, 0x934000
	011 Move W8, [X24+1097]
	012 Move X20, X3
	013 Move X21, X2
	014 Move X22, X1
	015 Move X19, X0
	016 Add X23, X31, 704
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {47}
	021 Move X0, 0x6A9000
	022 Move X0, [X0+3872]
	023 Call 0x1C17CF4
	024 Move X0, 0x6A9000
	025 Move X0, [X0+3880]
	026 Call 0x1C17CF4
	027 Move X0, 0x6A9000
	028 Move X0, [X0+3888]
	029 Call 0x1C17CF4
	030 Move X0, 0x6A9000
	031 Move X0, [X0+3896]
	032 Call 0x1C17CF4
	033 Move X0, 0x6A9000
	034 Move X0, [X0+3904]
	035 Call 0x1C17CF4
	036 Move X0, 0x6A5000
	037 Move X0, [X0+4088]
	038 Call 0x1C17CF4
	039 Move X0, 0x6A8000
	040 Move X0, [X0+4056]
	041 Call 0x1C17CF4
	042 Move X0, 0x6A9000
	043 Move X0, [X0+3912]
	044 Call 0x1C17CF4
	045 Move W8, 1
	046 Move [X24+1097], W8
	047 NotImplemented "Instruction MOVI not yet implemented."
	048 Move [X31+888], X31
	049 Move [X31+880], W31
	050 Move [X23+192], V0
	051 Move [X23+200], V0
	052 Move [X23+144], V0
	053 Move [X23+152], V0
	054 Move [X23+8], V0
	055 Compare X22, 0
	056 JumpIfEqual {212}
	057 Move X8, 0x6A9000
	058 Move X9, 0x6A9000
	059 Move X8, [X8+3912]
	060 Move X9, [X9+3888]
	061 Move X3, [X19+56]
	062 Add X2, X31, 888
	063 Move X1, [X8]
	064 Move X4, [X9]
	065 Add X8, X31, 8
	066 Move X0, X22
	067 Call 0x2241F24, X0, X1, X2, X3
	068 NotImplemented "Instruction LDUR not yet implemented."
	069 NotImplemented "Instruction LDUR not yet implemented."
	070 Move [X23+192], V0
	071 Move [X23+200], V1
	072 Move W8, [X20+288]
	073 Move V1, [X20+256]
	074 Move V0, [X20+272]
	075 Move V2, [X20+15]
	076 Move [X31+880], W8
	077 Move [X23+144], V1
	078 Move [X23+152], V0
	079 Move [X23+8], V2
	080 Add X0, X31, 832
	081 Move W1, W31
	082 Move X2, X31
	083 Call RenderTextureDescriptor.set_graphicsFormat, X0, X1
	084 Move W8, 94
	085 Move [X31+860], W8
	086 Add X0, X31, 832
	087 Move W1, 32
	088 Move X2, X31
	089 Call RenderTextureDescriptor.set_depthBufferBits, X0, X1
	090 Move X8, 0x6A5000
	091 Move X8, [X8+4088]
	092 Move W9, 1
	093 Move [X31+840], W9
	094 Move W10, [X31+880]
	095 Move V0, [X23+128]
	096 Move V1, [X23+144]
	097 Move V2, [X23+10]
	098 Move X0, [X8]
	099 Move [X31+816], W10
	100 Move [X23+64], V0
	101 Move [X23+72], V1
	102 Move [X23+6], V2
	103 Move W8, [X0+224]
	104 Compare W8, 0
	105 JumpIfNotEqual {107}
	106 Call 0x1C17DFC
	107 Move X8, 0x6A8000
	108 Move X8, [X8+4056]
	109 Move V0, [X23+64]
	110 Move V1, [X23+80]
	111 Move V2, [X23+6]
	112 Move W9, [X31+816]
	113 Move X2, [X8]
	114 Move [X23], V0
	115 Move [X23+8], V1
	116 Move [X23+2], V2
	117 Move [X31+752], W9
	118 Add X1, X31, 704
	119 Move W3, 1
	120 Move W5, 1
	121 Move X0, X22
	122 Move W4, W31
	123 Move X6, X31
	124 Call UniversalRenderer.CreateRenderGraphTexture, X0, X1, X2, X3, X4, X5
	125 Move [X21], X0
	126 Move X22, [X31+888]
	127 Add X0, X31, 896
	128 Move W2, 2
	129 Move X1, X21
	130 Move X3, X31
	131 Call RenderGraphBuilder.UseDepthBuffer, X0, X1, X2
	132 Compare X22, 0
	133 JumpIfEqual {213}
	134 Move [X22+16], X0
	135 Move X21, [X31+888]
	136 Add X0, X31, 8
	137 Move W2, 696
	138 Move X1, X20
	139 Call 0x3EB2AC0
	140 Compare X21, 0
	141 JumpIfEqual {214}
	142 Add X0, X21, 24
	143 Add X1, X31, 8
	144 Move W2, 696
	145 Call 0x3EB2AC0
	146 Move W8, [X19+236]
	147 Add X9, X19, 248
	148 Move [X21+720], W8
	149 Move X8, [X9+16]
	150 NotImplemented "Instruction LDUR not yet implemented."
	151 Add X9, X21, 724
	152 Move [X9+16], X8
	153 Move [X9], V0
	154 Add X0, X31, 896
	155 Move W1, W31
	156 Move X2, X31
	157 Call RenderGraphBuilder.AllowPassCulling, X0, X1
	158 Move X21, 0x6A9000
	159 Move X21, [X21+3904]
	160 Move X8, [X21]
	161 Move W9, [X8+224]
	162 Compare W9, 0
	163 JumpIfNotEqual {167}
	164 Move X0, X8
	165 Call 0x1C17DFC
	166 Move X8, [X21]
	167 Move X9, [X8+184]
	168 Move X19, [X9+8]
	169 Compare X19, 0
	170 JumpIfNotEqual {193}
	171 Move W9, [X8+224]
	172 Compare W9, 0
	173 JumpIfNotEqual {177}
	174 Move X0, X8
	175 Call 0x1C17DFC
	176 Move X8, [X21]
	177 Move X9, 0x6A9000
	178 Move X8, [X8+184]
	179 Move X9, [X9+3872]
	180 Move X20, [X8]
	181 Move X0, [X9]
	182 Call 0x1C17F10
	183 Move X8, 0x6A9000
	184 Move X8, [X8+3896]
	185 Move X19, X0
	186 Move X2, [X8]
	187 Move X1, X20
	188 Move X3, X31
	189 Call 0x25C88AC, X0, X1, X2
	190 Move X8, [X21]
	191 Move X8, [X8+184]
	192 Move [X8+8], X19
	193 Move X8, 0x6A9000
	194 Move X8, [X8+3880]
	195 Move X2, [X8]
	196 Add X0, X31, 896
	197 Move X1, X19
	198 Call 0x224207C, X0, X1
	199 Add X0, X31, 896
	200 Move X1, X31
	201 Call RenderGraphBuilder.Dispose, X0
	202 Add X31, X31, 928
	203 Move X20, [X31+48]
	204 Move X19, [X31+56]
	205 Move X22, [X31+32]
	206 Move X21, [X31+40]
	207 Move X24, [X31+16]
	208 Move X23, [X31+24]
	209 Move X29, [X31+64]
	210 Move X30, [X31+72]
	211 Return 
	212 Call 0x1C17F20
	213 Call 0x1C17F20
	214 Call 0x1C17F20
	215 Move X19, X0
	216 NotImplemented "Instruction CMP not yet implemented."
	217 Move X0, X19
	218 Call 0x3EB2AD0
	219 Move X20, [X0]
	220 Call 0x3EB2AE0
	221 Add X0, X31, 896
	222 Move X1, X31
	223 Call RenderGraphBuilder.Dispose, X0
	224 Compare X20, 0
	225 JumpIfEqual {202}
	226 Move X0, X20
	227 Call 0x1C17F18
	228 Move X20, X31
	229 Move X19, X0
	230 Add X0, X31, 896
	231 Move X1, X31
	232 Call RenderGraphBuilder.Dispose, X0
	233 Compare X20, 0
	234 JumpIfNotEqual {237}
	235 Move X0, X19
	236 Call 0x1D2D690
	237 Move X0, X20
	238 Call 0x1C17F18
	239 Call 0x1991590

Method: System.Void .cctor()

Disassembly:
	0x03AAFC58 BL 0x3C58B84
	0x03AAFC5C ADRP X8, 0x66C000
	0x03AAFC60 LDR X8, [X8 + 0x8F8]
	0x03AAFC64 LDR X0, [X8]
	0x03AAFC68 LDR W8, [X0 + 0xE0]
	0x03AAFC6C CBNZ W8, 0x3AAFC74
	0x03AAFC70 BL 0x1C16DFC
	0x03AAFC74 ADRP X8, 0x6A8000
	0x03AAFC78 LDR X8, [X8 + 0xEC8]
	0x03AAFC7C LDR X1, [X8]
	0x03AAFC80 MOV X0, X19
	0x03AAFC84 MOV W2, W31
	0x03AAFC88 MOV X3, X31
	0x03AAFC8C BL 0x39E9618
	0x03AAFC90 LDR X0, [X27]
	0x03AAFC94 LDR W8, [X0 + 0xE0]
	0x03AAFC98 CBNZ W8, 0x3AAFCA0
	0x03AAFC9C BL 0x1C16DFC
	0x03AAFCA0 ADD X0, X31, 0x40
	0x03AAFCA4 MOV X1, X19
	0x03AAFCA8 MOV X2, X31
	0x03AAFCAC BL 0x3C58FE4
	0x03AAFCB0 MOV X0, X19
	0x03AAFCB4 MOV X1, X31
	0x03AAFCB8 BL 0x3C4C310
	0x03AAFCBC ADD X0, X31, 0x38
	0x03AAFCC0 MOV X1, X31
	0x03AAFCC4 BL 0x39B1DB4
	0x03AAFCC8 LDR X8, [X26 + 0x28]
	0x03AAFCCC LDR X9, [X31 + 0x1D8]
	0x03AAFCD0 CMP X8, X9

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x934000
	007 Move X20, 0x6A9000
	008 Move X19, 0x6A9000
	009 Move W8, [X21+1098]
	010 Move X20, [X20+3920]
	011 Move X19, [X19+352]
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x6A9000
	017 Move X0, [X0+352]
	018 Call 0x1C17CF4
	019 Move X0, 0x6A9000
	020 Move X0, [X0+3920]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X21+1098], W8
	024 Move X1, [X20]
	025 Add X0, X31, 8
	026 Move X2, X31
	027 Move [X31+8], W31
	028 Call ShaderTagId..ctor, X0, X1
	029 Move X8, [X19]
	030 Move W9, [X31+8]
	031 Move X20, [X31+32]
	032 Move X19, [X31+40]
	033 Move X30, [X31+16]
	034 Move X21, [X31+24]
	035 Move X8, [X8+184]
	036 Move [X8], W9
	037 Add X31, X31, 48
	038 Return 

