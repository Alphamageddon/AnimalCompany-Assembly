Type: UnityEngine.Rendering.Universal.Internal.AdditionalLightsShadowCasterPass

Method: System.Void .ctor(UnityEngine.Rendering.Universal.RenderPassEvent evt)

Disassembly:
	0x03AA1D50 BL 0x2FDC41C
	0x03AA1D54 LDR X8, [X19 + 0x290]
	0x03AA1D58 CMP W0, 0x400
	0x03AA1D5C CINC X22, X22, EQ
	0x03AA1D60 CBZ X8, 0x3AA1E68
	0x03AA1D64 LDR X2, [X20]
	0x03AA1D68 MOV X0, X8
	0x03AA1D6C MOV W1, W21
	0x03AA1D70 BL 0x2FDC41C
	0x03AA1D74 LDR X8, [X19 + 0x290]
	0x03AA1D78 CBZ X8, 0x3AA1E68
	0x03AA1D7C LDR X2, [X20]
	0x03AA1D80 CMP W0, 0x800
	0x03AA1D84 MOV X0, X8
	0x03AA1D88 MOV W1, W21
	0x03AA1D8C CINC X23, X23, EQ
	0x03AA1D90 BL 0x2FDC41C
	0x03AA1D94 CMP W0, 0x1000
	0x03AA1D98 CINC X24, X24, EQ
	0x03AA1D9C LDR X8, [X31 + 0x18]
	0x03AA1DA0 ADD W21, W21, 0x1
	0x03AA1DA4 CMP W8, W21
	0x03AA1DA8 B.NE 0x3AA1C5C
	0x03AA1DAC B 0x3AA1DCC
	0x03AA1DB0 MOV X24, X31
	0x03AA1DB4 MOV X23, X31
	0x03AA1DB8 MOV X22, X31
	0x03AA1DBC MOV X29, X31
	0x03AA1DC0 MOV X28, X31
	0x03AA1DC4 MOV X27, X31
	0x03AA1DC8 STP X31, X31, [X31 + 0x8]
	0x03AA1DCC LDR W8, [X19 + 0x274]
	0x03AA1DD0 MOVZ W9, 0x400
	0x03AA1DD4 MOVZ W10, 0x1000
	0x03AA1DD8 MOVZ W11, 0xA
	0x03AA1DDC CMP W8, 0x400
	0x03AA1DE0 MOVZ W12, 0xC
	0x03AA1DE4 MOVZ W13, 0x200
	0x03AA1DE8 UBFM X14, X23, 0xE, 0xD
	0x03AA1DEC MOVZ W15, 0x800
	0x03AA1DF0 MOVZ W16, 0x9
	0x03AA1DF4 MOVZ W17, 0xB
	0x03AA1DF8 CSEL W9, W10, W9, GT
	0x03AA1DFC ORR X14, X14, X24, 0x39
	0x03AA1E00 MOVZ W0, 0x8
	0x03AA1E04 CSEL X10, X12, X11, GT
	0x03AA1E08 CSEL W11, W15, W13, GT
	0x03AA1E0C CSEL X12, X17, X16, GT
	0x03AA1E10 CMP W8, W9
	0x03AA1E14 ORR X14, X14, X22, 0x2B
	0x03AA1E18 LDR X9, [X31 + 0x8]
	0x03AA1E1C CSEL X10, X10, X0, EQ
	0x03AA1E20 CMP W8, W11
	0x03AA1E24 ORR X14, X14, X29, 0x23
	0x03AA1E28 CSEL X8, X12, X10, EQ
	0x03AA1E2C LDR X10, [X31 + 0x10]
	0x03AA1E30 ORR X14, X14, X28, 0x1B
	0x03AA1E34 ORR X13, X14, X27, 0x13
	0x03AA1E38 LDP X20, X19, [X31 + 0x70]
	0x03AA1E3C LDP X22, X21, [X31 + 0x60]
	0x03AA1E40 LDP X24, X23, [X31 + 0x50]
	0x03AA1E44 LDP X26, X25, [X31 + 0x40]
	0x03AA1E48 LDP X28, X27, [X31 + 0x30]
	0x03AA1E4C LDP X29, X30, [X31 + 0x20]
	0x03AA1E50 ORR X9, X13, X9, 0xB
	0x03AA1E54 SUB X8, X8, 0x8
	0x03AA1E58 ORR X9, X9, X10, 0x3
	0x03AA1E5C ORR X0, X9, X8, 0x0
	0x03AA1E60 ADD X31, X31, 0x80
	0x03AA1E64 RET
	0x03AA1E68 BL 0x1C16F20
	0x03AA1E6C STR D8, [X31 - 0x30]!
	0x03AA1E70 STP X30, X21, [X31 + 0x10]
	0x03AA1E74 STP X20, X19, [X31 + 0x20]
	0x03AA1E78 ADRP X21, 0x941000
	0x03AA1E7C LDRB W8, [X21 + 0x406]
	0x03AA1E80 MOV W19, W2
	0x03AA1E84 MOV X20, X1
	0x03AA1E88 TBNZ X8, 0x0, 0x3AA1EAC
	0x03AA1E8C ADRP X0, 0x6B5000
	0x03AA1E90 LDR X0, [X0 + 0xF00]
	0x03AA1E94 BL 0x1C16CF4
	0x03AA1E98 ADRP X0, 0x652000
	0x03AA1E9C LDR X0, [X0 + 0x598]
	0x03AA1EA0 BL 0x1C16CF4
	0x03AA1EA4 MOVZ W8, 0x1
	0x03AA1EA8 STRB W8, [X21 + 0x406]
	0x03AA1EAC LDR W8, [X20]
	0x03AA1EB0 CMP W8, W19
	0x03AA1EB4 B.EQ 0x3AA1FB4
	0x03AA1EB8 ADRP X8, 0x6B5000
	0x03AA1EBC LDP X0, X1, [X20 + 0x10]
	0x03AA1EC0 LDR X8, [X8 + 0xF00]
	0x03AA1EC4 MOV W2, W19
	0x03AA1EC8 LDR X3, [X8]
	0x03AA1ECC BL 0x2222228
	0x03AA1ED0 MOV X1, X31
	0x03AA1ED4 MOV X19, X0
	0x03AA1ED8 BL 0x3C5BC7C
	0x03AA1EDC CMP W0, 0x1
	0x03AA1EE0 B.EQ 0x3AA1FB4
	0x03AA1EE4 MOV X0, X19
	0x03AA1EE8 MOV X1, X31
	0x03AA1EEC BL 0x3C5BBF0
	0x03AA1EF0 ADRP X8, 0x652000
	0x03AA1EF4 LDR X8, [X8 + 0x598]
	0x03AA1EF8 MOV X19, X0
	0x03AA1EFC LDR X8, [X8]
	0x03AA1F00 LDR W9, [X8 + 0xE0]
	0x03AA1F04 CBNZ W9, 0x3AA1F10
	0x03AA1F08 MOV X0, X8
	0x03AA1F0C BL 0x1C16DFC
	0x03AA1F10 MOV X0, X19
	0x03AA1F14 MOV X1, X31
	0x03AA1F18 MOV X2, X31
	0x03AA1F1C BL 0x3C354F8
	0x03AA1F20 TBZ X0, 0x0, 0x3AA1FB4
	0x03AA1F24 CBZ X19, 0x3AA1FC8
	0x03AA1F28 MOV X0, X19
	0x03AA1F2C MOV X1, X31
	0x03AA1F30 BL 0x3C16B90
	0x03AA1F34 CBZ W0, 0x3AA1FB8
	0x03AA1F38 MOV X0, X19
	0x03AA1F3C MOV X1, X31
	0x03AA1F40 BL 0x3C16BCC
	0x03AA1F44 ADRP X19, 0x938000
	0x03AA1F48 LDRB W8, [X19 + 0x5AA]
	0x03AA1F4C MOV V8.16B, V0.16B
	0x03AA1F50 CBNZ W8, 0x3AA1F68
	0x03AA1F54 ADRP X0, 0x659000
	0x03AA1F58 LDR X0, [X0 + 0x4B8]
	0x03AA1F5C BL 0x1C16CF4
	0x03AA1F60 MOVZ W8, 0x1
	0x03AA1F64 STRB W8, [X19 + 0x5AA]
	0x03AA1F68 ADRP X8, 0x659000
	0x03AA1F6C LDR X8, [X8 + 0x4B8]
	0x03AA1F70 ADRP X9, 0xFFFFFFFFFD049000
	0x03AA1F74 LDR V0, [X9 + 0x240]
	0x03AA1F78 FABS S1, S8
	0x03AA1F7C LDR X8, [X8]
	0x03AA1F80 FMOV S2, W31
	0x03AA1F84 FMAXNM S1, S1, S2
	0x03AA1F88 FMUL S0, S1, S0
	0x03AA1F8C LDR X8, [X8 + 0xB8]
	0x03AA1F90 FMOV S1, 8
	0x03AA1F94 LDR V3, [X8]
	0x03AA1F98 FMUL S1, S3, S1
	0x03AA1F9C FCMP S0, S1
	0x03AA1FA0 FCSEL S0, S0, S1, GT
	0x03AA1FA4 FABD S1, S2, S2
	0x03AA1FA8 FCMP S1, S0
	0x03AA1FAC CSET W0, PL
	0x03AA1FB0 B 0x3AA1FB8
	0x03AA1FB4 MOV W0, W31
	0x03AA1FB8 LDP X20, X19, [X31 + 0x20]
	0x03AA1FBC LDP X30, X21, [X31 + 0x10]
	0x03AA1FC0 LDR V8, [X31], #0x30
	0x03AA1FC4 RET
	0x03AA1FC8 BL 0x1C16F20
	0x03AA1FCC STP D15, D14, [X31 - 0xA0]!
	0x03AA1FD0 STP D13, D12, [X31 + 0x10]
	0x03AA1FD4 STP D11, D10, [X31 + 0x20]
	0x03AA1FD8 STP D9, D8, [X31 + 0x30]
	0x03AA1FDC STP X29, X30, [X31 + 0x40]
	0x03AA1FE0 STP X28, X27, [X31 + 0x50]
	0x03AA1FE4 STP X26, X25, [X31 + 0x60]
	0x03AA1FE8 STP X24, X23, [X31 + 0x70]
	0x03AA1FEC STP X22, X21, [X31 + 0x80]
	0x03AA1FF0 STP X20, X19, [X31 + 0x90]
	0x03AA1FF4 SUB X31, X31, 0x370
	0x03AA1FF8 ADRP X19, 0x941000
	0x03AA1FFC LDRB W8, [X19 + 0x3FF]
	0x03AA2000 MOV X20, X0
	0x03AA2004 STR X1, [X31 + 0x78]
	0x03AA2008 TBNZ X8, 0x0, 0x3AA20F8
	0x03AA200C ADRP X0, 0x6B4000
	0x03AA2010 LDR X0, [X0 + 0x8C8]
	0x03AA2014 BL 0x1C16CF4
	0x03AA2018 ADRP X0, 0x652000
	0x03AA201C LDR X0, [X0 + 0xE58]
	0x03AA2020 BL 0x1C16CF4
	0x03AA2024 ADRP X0, 0x652000
	0x03AA2028 LDR X0, [X0 + 0xE10]
	0x03AA202C BL 0x1C16CF4
	0x03AA2030 ADRP X0, 0x6B5000
	0x03AA2034 LDR X0, [X0 + 0xA50]
	0x03AA2038 BL 0x1C16CF4
	0x03AA203C ADRP X0, 0x6B5000
	0x03AA2040 LDR X0, [X0 + 0xA58]
	0x03AA2044 BL 0x1C16CF4
	0x03AA2048 ADRP X0, 0x6B5000
	0x03AA204C LDR X0, [X0 + 0xA60]
	0x03AA2050 BL 0x1C16CF4
	0x03AA2054 ADRP X0, 0x652000
	0x03AA2058 LDR X0, [X0 + 0xE28]
	0x03AA205C BL 0x1C16CF4
	0x03AA2060 ADRP X0, 0x6B5000
	0x03AA2064 LDR X0, [X0 + 0xA68]
	0x03AA2068 BL 0x1C16CF4
	0x03AA206C ADRP X0, 0x67B000
	0x03AA2070 LDR X0, [X0 + 0xF38]
	0x03AA2074 BL 0x1C16CF4
	0x03AA2078 ADRP X0, 0x651000
	0x03AA207C LDR X0, [X0 + 0x5A8]
	0x03AA2080 BL 0x1C16CF4
	0x03AA2084 ADRP X0, 0x655000
	0x03AA2088 LDR X0, [X0 + 0x988]
	0x03AA208C BL 0x1C16CF4
	0x03AA2090 ADRP X0, 0x6B4000
	0x03AA2094 LDR X0, [X0 + 0xF00]
	0x03AA2098 BL 0x1C16CF4
	0x03AA209C ADRP X0, 0x6B5000
	0x03AA20A0 LDR X0, [X0 + 0xA70]
	0x03AA20A4 BL 0x1C16CF4
	0x03AA20A8 ADRP X0, 0x6B5000
	0x03AA20AC LDR X0, [X0 + 0xA78]
	0x03AA20B0 BL 0x1C16CF4
	0x03AA20B4 ADRP X0, 0x6B4000
	0x03AA20B8 LDR X0, [X0 + 0xEC0]
	0x03AA20BC BL 0x1C16CF4
	0x03AA20C0 ADRP X0, 0x651000
	0x03AA20C4 LDR X0, [X0 + 0x638]
	0x03AA20C8 BL 0x1C16CF4
	0x03AA20CC ADRP X0, 0x67A000
	0x03AA20D0 LDR X0, [X0 + 0x8A8]
	0x03AA20D4 BL 0x1C16CF4
	0x03AA20D8 ADRP X0, 0x6AC000
	0x03AA20DC LDR X0, [X0 + 0x48]
	0x03AA20E0 BL 0x1C16CF4
	0x03AA20E4 ADRP X0, 0x6B5000
	0x03AA20E8 LDR X0, [X0 + 0xA08]
	0x03AA20EC BL 0x1C16CF4
	0x03AA20F0 MOVZ W8, 0x1
	0x03AA20F4 STRB W8, [X19 + 0x3FF]
	0x03AA20F8 MOVI V0.2D, 0x0
	0x03AA20FC STRB W31, [X31 + 0x368]
	0x03AA2100 STR X31, [X31 + 0x358]
	0x03AA2104 STR X31, [X31 + 0x350]
	0x03AA2108 STR X31, [X31 + 0x340]
	0x03AA210C STR X31, [X31 + 0x330]
	0x03AA2110 STR X31, [X31 + 0x338]
	0x03AA2114 STR X31, [X31 + 0x320]
	0x03AA2118 STR X31, [X31 + 0x318]
	0x03AA211C STR X31, [X31 + 0x328]
	0x03AA2120 STP V0, V0, [X31 + 0x2F0]
	0x03AA2124 STP V0, V0, [X31 + 0x2D0]
	0x03AA2128 STP V0, V0, [X31 + 0x2B0]
	0x03AA212C STP V0, V0, [X31 + 0x290]
	0x03AA2130 LDR X2, [X20 + 0x170]
	0x03AA2134 ADD X0, X31, 0x368
	0x03AA2138 MOV X1, X31
	0x03AA213C MOV X3, X31
	0x03AA2140 BL 0x39B1DB0
	0x03AA2144 LDR X1, [X31 + 0x78]
	0x03AA2148 LDRB W8, [X1 + 0x271]
	0x03AA214C CBZ W8, 0x3AA2504
	0x03AA2150 LDRB W8, [X1 + 0x270]
	0x03AA2154 CBZ W8, 0x3AA250C
	0x03AA2158 MOV X0, X20
	0x03AA215C BL 0x3AA3944
	0x03AA2160 LDR X10, [X31 + 0x78]
	0x03AA2164 ADD X8, X10, 0x274
	0x03AA2168 LDR V0, [X8]
	0x03AA216C LDR X8, [X20 + 0x140]
	0x03AA2170 STR V0, [X31 + 0x5]
	0x03AA2174 STR D0, [X20 + 0x168]
	0x03AA2178 CBZ X8, 0x3AA3508
	0x03AA217C LDR W9, [X8 + 0x1C]
	0x03AA2180 LDR X19, [X10 + 0x238]
	0x03AA2184 LDR X22, [X10 + 0x240]
	0x03AA2188 ADD W9, W9, 0x1
	0x03AA218C STP W31, W9, [X8 + 0x18]
	0x03AA2190 LDR X8, [X20 + 0x110]
	0x03AA2194 CBZ X8, 0x3AA350C
	0x03AA2198 LDR W8, [X8 + 0x18]
	0x03AA219C STR X19, [X31 + 0x48]
	0x03AA21A0 CMP W8, W22
	0x03AA21A4 B.GE 0x3AA21EC
	0x03AA21A8 ADRP X19, 0x652000
	0x03AA21AC LDR X19, [X19 + 0xE58]
	0x03AA21B0 LDR X0, [X19]
	0x03AA21B4 MOV W1, W22
	0x03AA21B8 BL 0x1C16D6C
	0x03AA21BC STR X0, [X20 + 0x110]
	0x03AA21C0 ADRP X8, 0x651000
	0x03AA21C4 LDR X8, [X8 + 0x638]
	0x03AA21C8 LDR X0, [X8]
	0x03AA21CC MOV W1, W22
	0x03AA21D0 BL 0x1C16D6C
	0x03AA21D4 STR X0, [X20 + 0x148]
	0x03AA21D8 LDR X0, [X19]
	0x03AA21DC MOV W1, W22
	0x03AA21E0 BL 0x1C16D6C
	0x03AA21E4 LDR X19, [X31 + 0x48]
	0x03AA21E8 STR X0, [X20 + 0x158]
	0x03AA21EC LDRB W8, [X20 + 0xE0]
	0x03AA21F0 MOV W21, W22
	0x03AA21F4 CBNZ W8, 0x3AA2248
	0x03AA21F8 ADRP X8, 0x67A000
	0x03AA21FC LDR X8, [X8 + 0x8A8]
	0x03AA2200 LDR X0, [X8]
	0x03AA2204 LDR W8, [X0 + 0xE0]
	0x03AA2208 CBNZ W8, 0x3AA2210
	0x03AA220C BL 0x1C16DFC
	0x03AA2210 MOV X0, X31
	0x03AA2214 BL 0x3A89318
	0x03AA2218 ADRP X8, 0x651000
	0x03AA221C LDR X8, [X8 + 0x5A8]
	0x03AA2220 MOV W21, W0
	0x03AA2224 LDR X0, [X8]
	0x03AA2228 LDR W8, [X0 + 0xE0]
	0x03AA222C CBNZ W8, 0x3AA2234
	0x03AA2230 BL 0x1C16DFC
	0x03AA2234 MOV W0, W22
	0x03AA2238 MOV W1, W21
	0x03AA223C MOV X2, X31
	0x03AA2240 BL 0x337EE94
	0x03AA2244 MOV W21, W0
	0x03AA2248 LDR X8, [X20 + 0x118]
	0x03AA224C CBZ X8, 0x3AA3510
	0x03AA2250 LDR W8, [X8 + 0x18]
	0x03AA2254 CMP W21, W8
	0x03AA2258 B.LE 0x3AA228C
	0x03AA225C ADRP X8, 0x652000
	0x03AA2260 LDR X8, [X8 + 0xE58]
	0x03AA2264 LDR X0, [X8]
	0x03AA2268 MOV W1, W21
	0x03AA226C BL 0x1C16D6C
	0x03AA2270 STR X0, [X20 + 0x118]
	0x03AA2274 ADRP X8, 0x6AC000
	0x03AA2278 LDR X8, [X8 + 0x48]
	0x03AA227C LDR X0, [X8]
	0x03AA2280 MOV W1, W21
	0x03AA2284 BL 0x1C16D6C
	0x03AA2288 STR X0, [X20 + 0x130]
	0x03AA228C LDR X11, [X20 + 0x148]
	0x03AA2290 CBZ X11, 0x3AA3514
	0x03AA2294 LDR W8, [X11 + 0x18]
	0x03AA2298 UBFM X9, X8, 0x20, 0x1F
	0x03AA229C CMP X9, 0x1
	0x03AA22A0 B.LT 0x3AA22CC
	0x03AA22A4 MOV X9, X31
	0x03AA22A8 SXTW X10, W8
	0x03AA22AC ADD X11, X11, 0x20
	0x03AA22B0 MOVN W12, 0x80800000
	0x03AA22B4 CMP X9, X8
	0x03AA22B8 B.CS 0x3AA3430
	0x03AA22BC STR W12, [X11, X9, LSL #2]
	0x03AA22C0 ADD X9, X9, 0x1
	0x03AA22C4 CMP X9, X10
	0x03AA22C8 B.LT 0x3AA22B4
	0x03AA22CC LDR X8, [X31 + 0x78]
	0x03AA22D0 CMP W22, 0x1
	0x03AA22D4 STR W21, [X31 + 0x34]
	0x03AA22D8 ADD X8, X8, 0x228
	0x03AA22DC STP X22, X8, [X31 + 0x68]
	0x03AA22E0 B.LT 0x3AA2518
	0x03AA22E4 ADRP X28, 0x67B000
	0x03AA22E8 ADRP X29, 0x6B5000
	0x03AA22EC LDR X28, [X28 + 0xF38]
	0x03AA22F0 LDR X29, [X29 + 0xA50]
	0x03AA22F4 MOV X23, X31
	0x03AA22F8 MOV W21, W31
	0x03AA22FC AND X22, X22, 0x0
	0x03AA2300 STR X22, [X31 + 0x60]
	0x03AA2304 LDR X1, [X31 + 0x70]
	0x03AA2308 LDR W8, [X1]
	0x03AA230C CMP X23, X8
	0x03AA2310 B.EQ 0x3AA24F4
	0x03AA2314 MOV W2, W23
	0x03AA2318 BL 0x3AA1E6C
	0x03AA231C TBZ X0, 0x0, 0x3AA24F4
	0x03AA2320 ADRP X8, 0x6B4000
	0x03AA2324 LDR X8, [X8 + 0xF00]
	0x03AA2328 LDR X3, [X8]
	0x03AA232C LDR X1, [X31 + 0x68]
	0x03AA2330 MOV X0, X19
	0x03AA2334 MOV W2, W23
	0x03AA2338 BL 0x2222228
	0x03AA233C MOV X24, X0
	0x03AA2340 MOV X1, X31
	0x03AA2344 BL 0x3C5BC7C
	0x03AA2348 CMP W0, 0x2
	0x03AA234C MOVZ W8, 0x6
	0x03AA2350 CSEL W8, W8, W31, EQ
	0x03AA2354 CMP W0, 0x0
	0x03AA2358 CSINC W25, W8, W31, NE
	0x03AA235C CBZ W25, 0x3AA245C
	0x03AA2360 MOV W19, W31
	0x03AA2364 LDR X8, [X31 + 0x78]
	0x03AA2368 LDR X0, [X8 + 0x290]
	0x03AA236C CBZ X0, 0x3AA3418
	0x03AA2370 LDR X26, [X20 + 0x140]
	0x03AA2374 LDR X2, [X28]
	0x03AA2378 MOV W1, W23
	0x03AA237C BL 0x2FDC41C
	0x03AA2380 MOV W27, W0
	0x03AA2384 MOV X0, X24
	0x03AA2388 MOV X1, X31
	0x03AA238C BL 0x3C5BBF0
	0x03AA2390 CBZ X0, 0x3AA341C
	0x03AA2394 MOV X1, X31
	0x03AA2398 BL 0x3C16B90
	0x03AA239C MOV W22, W0

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X21, 0x942000
	014 Move X27, 0x654000
	015 Move X26, 0x657000
	016 Move X24, 0x6B7000
	017 Move X27, [X27+3632]
	018 Move X26, [X26+2928]
	019 Move X24, [X24+2432]
	020 Move W8, [X21+1020]
	021 Move W20, W1
	022 Move X19, X0
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {125}
	027 Move X0, 0x6B6000
	028 Move X0, [X0+2248]
	029 Call 0x1C17CF4
	030 Move X0, 0x6B7000
	031 Move X0, [X0+2440]
	032 Call 0x1C17CF4
	033 Move X0, 0x6B7000
	034 Move X0, [X0+2448]
	035 Call 0x1C17CF4
	036 Move X0, 0x6B7000
	037 Move X0, [X0+2456]
	038 Call 0x1C17CF4
	039 Move X0, 0x654000
	040 Move X0, [X0+3672]
	041 Call 0x1C17CF4
	042 Move X0, 0x657000
	043 Move X0, [X0+2928]
	044 Call 0x1C17CF4
	045 Move X0, 0x6B7000
	046 Move X0, [X0+2464]
	047 Call 0x1C17CF4
	048 Move X0, 0x6B7000
	049 Move X0, [X0+2432]
	050 Call 0x1C17CF4
	051 Move X0, 0x6B7000
	052 Move X0, [X0+2472]
	053 Call 0x1C17CF4
	054 Move X0, 0x6B7000
	055 Move X0, [X0+2480]
	056 Call 0x1C17CF4
	057 Move X0, 0x654000
	058 Move X0, [X0+3632]
	059 Call 0x1C17CF4
	060 Move X0, 0x6B7000
	061 Move X0, [X0+2488]
	062 Call 0x1C17CF4
	063 Move X0, 0x6B7000
	064 Move X0, [X0+2496]
	065 Call 0x1C17CF4
	066 Move X0, 0x653000
	067 Move X0, [X0+1448]
	068 Call 0x1C17CF4
	069 Move X0, 0x657000
	070 Move X0, [X0+2440]
	071 Call 0x1C17CF4
	072 Move X0, 0x6B0000
	073 Move X0, [X0+1432]
	074 Call 0x1C17CF4
	075 Move X0, 0x6B4000
	076 Move X0, [X0+16]
	077 Call 0x1C17CF4
	078 Move X0, 0x6B3000
	079 Move X0, [X0+4080]
	080 Call 0x1C17CF4
	081 Move X0, 0x653000
	082 Move X0, [X0+1592]
	083 Call 0x1C17CF4
	084 Move X0, 0x67C000
	085 Move X0, [X0+2216]
	086 Call 0x1C17CF4
	087 Move X0, 0x6AE000
	088 Move X0, [X0+72]
	089 Call 0x1C17CF4
	090 Move X0, 0x6B7000
	091 Move X0, [X0+2504]
	092 Call 0x1C17CF4
	093 Move X0, 0x6B7000
	094 Move X0, [X0+2512]
	095 Call 0x1C17CF4
	096 Move X0, 0x6B7000
	097 Move X0, [X0+2520]
	098 Call 0x1C17CF4
	099 Move X0, 0x6B7000
	100 Move X0, [X0+2528]
	101 Call 0x1C17CF4
	102 Move X0, 0x6B7000
	103 Move X0, [X0+2536]
	104 Call 0x1C17CF4
	105 Move X0, 0x6B7000
	106 Move X0, [X0+2544]
	107 Call 0x1C17CF4
	108 Move X0, 0x6B7000
	109 Move X0, [X0+2552]
	110 Call 0x1C17CF4
	111 Move X0, 0x6B7000
	112 Move X0, [X0+2560]
	113 Call 0x1C17CF4
	114 Move X0, 0x6B7000
	115 Move X0, [X0+2568]
	116 Call 0x1C17CF4
	117 Move X0, 0x6B7000
	118 Move X0, [X0+2576]
	119 Call 0x1C17CF4
	120 Move X0, 0x6B7000
	121 Move X0, [X0+2584]
	122 Call 0x1C17CF4
	123 Move W8, 1
	124 Move [X21+1020], W8
	125 Move X22, 0x6B7000
	126 Move X28, 0x6B7000
	127 Move X29, 0x6B7000
	128 Move X25, 0x6B7000
	129 Move X22, [X22+2584]
	130 Move X28, [X28+2512]
	131 Move X29, [X29+2440]
	132 Move X25, [X25+2504]
	133 Move X0, [X27]
	134 Move X23, 0x6B6000
	135 Move X23, [X23+2248]
	136 Call 0x1C17F10
	137 Move X1, [X26]
	138 Move X21, X0
	139 Call List`1<Int32>..ctor, X0
	140 Move [X19+288], X21
	141 Move X0, [X27]
	142 Call 0x1C17F10
	143 Move X1, [X26]
	144 Move X21, X0
	145 Call List`1<Int32>..ctor, X0
	146 Move [X19+296], X21
	147 Move X8, 0x6B7000
	148 Move X8, [X8+2496]
	149 Move X0, [X8]
	150 Call 0x1C17F10
	151 Move X8, 0x6B7000
	152 Move X8, [X8+2464]
	153 Move X21, X0
	154 Move X1, [X8]
	155 Call List`1<ShadowResolutionRequest>..ctor, X0
	156 Move [X19+320], X21
	157 Move X8, 0x6B7000
	158 Move X8, [X8+2488]
	159 Move X0, [X8]
	160 Call 0x1C17F10
	161 Move X1, [X24]
	162 Move X21, X0
	163 Call List`1<RectInt>..ctor, X0
	164 Move [X19+352], X21
	165 Move X24, 0x6B0000
	166 Move X24, [X24+1432]
	167 Move X0, [X24]
	168 Call 0x1C17F10
	169 Move X8, 0x6B7000
	170 Move X8, [X8+2576]
	171 Move X2, X31
	172 Move X21, X0
	173 Move X1, [X8]
	174 Call ProfilingSampler..ctor, X0, X1
	175 Move [X19+368], X21
	176 Move X8, 0x6B7000
	177 Move X8, [X8+2456]
	178 Move X0, [X8]
	179 Call 0x1C17F10
	180 Move X8, 0x6B7000
	181 Move X8, [X8+2448]
	182 Move X21, X0
	183 Move X1, [X8]
	184 Call Dictionary`2<Int32, UInt64>..ctor, X0
	185 Move [X19+376], X21
	186 Move X8, 0x6B2000
	187 Move X8, [X8+4080]
	188 Move X0, [X8]
	189 Move W8, [X0+224]
	190 Compare W8, 0
	191 JumpIfNotEqual {193}
	192 Call 0x1C17DFC
	193 Move X27, 0x6B6000
	194 Move X26, 0x6B3000
	195 Move X27, [X27+2544]
	196 Move X26, [X26+16]
	197 Move X0, X19
	198 Move X1, X31
	199 Call ScriptableRenderPass..ctor, X0
	200 Move X0, [X24]
	201 Call 0x1C17F10
	202 Move X1, [X22]
	203 Move X2, X31
	204 Move X21, X0
	205 Call ProfilingSampler..ctor, X0, X1
	206 Move [X19+56], X21
	207 Move [X19+16], W20
	208 Move X0, [X28]
	209 Move X1, X31
	210 Call Shader.PropertyToID, X0
	211 Move X8, [X29]
	212 Move X1, X31
	213 Move X8, [X8+184]
	214 Move [X8], W0
	215 Move X0, [X25]
	216 Call Shader.PropertyToID, X0
	217 Move X8, [X29]
	218 Move X1, X31
	219 Move X8, [X8+184]
	220 Move [X8+4], W0
	221 Move X8, 0x6B6000
	222 Move X8, [X8+2560]
	223 Move X0, [X8]
	224 Call Shader.PropertyToID, X0
	225 Move X8, [X29]
	226 Move X1, X31
	227 Move X8, [X8+184]
	228 Move [X8+8], W0
	229 Move X8, 0x6B6000
	230 Move X8, [X8+2536]
	231 Move X0, [X8]
	232 Call Shader.PropertyToID, X0
	233 Move X8, [X29]
	234 Move X1, X31
	235 Move X8, [X8+184]
	236 Move [X8+12], W0
	237 Move X8, 0x6B6000
	238 Move X8, [X8+2552]
	239 Move X0, [X8]
	240 Call Shader.PropertyToID, X0
	241 Move X8, [X29]
	242 Move X1, X31
	243 Move X8, [X8+184]
	244 Move [X8+16], W0
	245 Move X8, 0x6B6000
	246 Move X8, [X8+2520]
	247 Move X0, [X8]
	248 Call Shader.PropertyToID, X0
	249 Move X8, [X29]
	250 Move X1, X31
	251 Move X8, [X8+184]
	252 Move [X8+20], W0
	253 Move X8, 0x6B6000
	254 Move X8, [X8+2568]
	255 Move X0, [X8]
	256 Call Shader.PropertyToID, X0
	257 Move [X19+228], W0
	258 Move X8, 0x6B6000
	259 Move X8, [X8+2528]
	260 Move X1, X31
	261 Move X0, [X8]
	262 Call Shader.PropertyToID, X0
	263 Move X8, [X23]
	264 Move W20, W0
	265 Move W9, [X8+224]
	266 Compare W9, 0
	267 JumpIfNotEqual {271}
	268 Move X0, X8
	269 Call 0x1C17DFC
	270 Move X8, [X23]
	271 Move X8, [X8+184]
	272 Move X1, X31
	273 Move [X8+24], W20
	274 Move X0, [X27]
	275 Move X20, 0x67B000
	276 Move X20, [X20+2216]
	277 Call Shader.PropertyToID, X0
	278 Move X8, [X23]
	279 Move X8, [X8+184]
	280 Move [X8+28], W0
	281 Move X0, [X26]
	282 Move W8, [X0+224]
	283 Compare W8, 0
	284 JumpIfNotEqual {286}
	285 Call 0x1C17DFC
	286 Move X0, X31
	287 Call RenderingUtils.get_useStructuredBuffer
	288 And W8, W0, 1
	289 Move [X19+224], W8
	290 Move X0, [X20]
	291 Move W8, [X0+224]
	292 Compare W8, 0
	293 JumpIfNotEqual {295}
	294 Call 0x1C17DFC
	295 Move X26, 0x653000
	296 Move X24, 0x6AD000
	297 Move X25, 0x652000
	298 Move X26, [X26+3672]
	299 Move X24, [X24+72]
	300 Move X25, [X25+1592]
	301 Move X0, X31
	302 Call UniversalRenderPipeline.get_maxVisibleAdditionalLights
	303 Move W8, [X19+224]
	304 Add W21, W0, 1
	305 Move W20, W0
	306 Move W22, W21
	307 Compare W8, 0
	308 JumpIfNotEqual {321}
	309 Move X8, 0x652000
	310 Move X8, [X8+1448]
	311 Move X0, [X8]
	312 Move W8, [X0+224]
	313 Compare W8, 0
	314 JumpIfNotEqual {316}
	315 Call 0x1C17DFC
	316 Move W0, W21
	317 Move W1, W20
	318 Move X2, X31
	319 Call Math.Min, X0, X1
	320 Move W22, W0
	321 Move X0, [X26]
	322 Move W1, W22
	323 Call 0x1C17D6C
	324 Move [X19+280], X0
	325 Move X0, [X26]
	326 Move W1, W21
	327 Call 0x1C17D6C
	328 Move [X19+272], X0
	329 Move X0, [X26]
	330 Move W1, W21
	331 Call 0x1C17D6C
	332 Move [X19+344], X0
	333 Move X0, [X24]
	334 Move W1, W22
	335 Call 0x1C17D6C
	336 Move [X19+304], X0
	337 Move X0, [X25]
	338 Move W1, W21
	339 Call 0x1C17D6C
	340 Move [X19+328], X0
	341 Move X0, [X24]
	342 Move W1, W22
	343 Call 0x1C17D6C
	344 Move X8, [X23]
	345 Move X21, X0
	346 Move W9, [X8+224]
	347 Compare W9, 0
	348 JumpIfNotEqual {352}
	349 Move X0, X8
	350 Call 0x1C17DFC
	351 Move X8, [X23]
	352 Move X9, [X8+184]
	353 Move X22, X31
	354 Move [X9+32], X21
	355 Move W9, [X8+224]
	356 Compare W9, 0
	357 JumpIfNotEqual {361}
	358 Move X0, X8
	359 Call 0x1C17DFC
	360 Move X8, [X23]
	361 Move X9, [X8+184]
	362 Move X10, [X9+32]
	363 Compare X10, 0
	364 JumpIfEqual {436}
	365 NotImplemented "Instruction LDRSW not yet implemented."
	366 NotImplemented "Instruction CMP not yet implemented."
	367 Move W11, [X8+224]
	368 Compare W11, 0
	369 JumpIfNotEqual {375}
	370 Move X0, X8
	371 Call 0x1C17DFC
	372 Move X8, [X23]
	373 Move X9, [X8+184]
	374 Move X10, [X9+32]
	375 Compare X10, 0
	376 JumpIfEqual {436}
	377 Move W8, [X10+24]
	378 NotImplemented "Instruction CMP not yet implemented."
	379 NotImplemented "Instruction LDUR not yet implemented."
	380 Add X8, X10, X22
	381 Add X22, X22, 1
	382 Move [X8+2], V0
	383 Move X8, [X23]
	384 Move W8, [X19+224]
	385 Compare W8, 0
	386 JumpIfEqual {400}
	387 Move X20, [X31+80]
	388 Move X19, [X31+88]
	389 Move X22, [X31+64]
	390 Move X21, [X31+72]
	391 Move X24, [X31+48]
	392 Move X23, [X31+56]
	393 Move X26, [X31+32]
	394 Move X25, [X31+40]
	395 Move X28, [X31+16]
	396 Move X27, [X31+24]
	397 Move X29, [X31+96]
	398 Move X30, [X31+104]
	399 Return 
	400 Move X8, 0x656000
	401 Move X8, [X8+2440]
	402 Move W1, W20
	403 Move X0, [X8]
	404 Call 0x1C17D6C
	405 Move X8, [X19+352]
	406 Move [X19+312], X0
	407 Compare X8, 0
	408 JumpIfEqual {436}
	409 Move X9, 0x6B6000
	410 Move X9, [X9+2480]
	411 Move X0, X8
	412 Move W1, W20
	413 Move X2, [X9]
	414 Call List`1<RectInt>.set_Capacity, X0, X1
	415 Move X0, [X19+320]
	416 Compare X0, 0
	417 JumpIfEqual {436}
	418 Move X8, 0x6B6000
	419 Move X8, [X8+2472]
	420 Move W1, W20
	421 Move X20, [X31+80]
	422 Move X19, [X31+88]
	423 Move X22, [X31+64]
	424 Move X21, [X31+72]
	425 Move X2, [X8]
	426 Move X24, [X31+48]
	427 Move X23, [X31+56]
	428 Move X26, [X31+32]
	429 Move X25, [X31+40]
	430 Move X28, [X31+16]
	431 Move X27, [X31+24]
	432 Move X29, [X31+96]
	433 Move X30, [X31+104]
	434 Call List`1<ShadowResolutionRequest>.set_Capacity, X0, X1
	435 Return 
	436 Call 0x1C17F20
	437 Call 0x1C17F28

Method: System.Void Dispose()

Disassembly:
	0x03AA23A0 MOV X0, X24
	0x03AA23A4 MOV X1, X31
	0x03AA23A8 BL 0x3C5BC7C
	0x03AA23AC CMP W22, 0x2
	0x03AA23B0 CSET W8, EQ

ISIL:
	001 Move X0, [X0+232]
	002 Compare X0, 0
	003 JumpIfEqual {7}
	004 Move X1, X31
	005 Call RTHandle.Release, X0
	006 Return 
	007 Return 

Method: System.Int32 GetPunctualLightShadowSlicesCount(in UnityEngine.LightType lightType)

Disassembly:
	0x03AA23B4 CMP W0, 0x2
	0x03AA23B8 CSET W9, EQ
	0x03AA23BC CBZ X26, 0x3AA3420
	0x03AA23C0 LDR W12, [X26 + 0x1C]
	0x03AA23C4 LDR X10, [X26 + 0x10]
	0x03AA23C8 LDR X11, [X29]
	0x03AA23CC ADD W12, W12, 0x1
	0x03AA23D0 STR W12, [X26 + 0x1C]

ISIL:
	001 Move W8, [X1]
	002 Compare W8, 0
	003 JumpIfEqual {8}
	004 NotImplemented "Instruction CMP not yet implemented."
	005 Move W8, 6
	006 NotImplemented "Instruction CSEL not yet implemented."
	007 Return X0
	008 Move W0, 1
	009 Return X0

Method: System.Single CalcGuardAngle(System.Single frustumAngleInDegrees, System.Single guardBandSizeInTexels, System.Single sliceResolutionInTexels)

Disassembly:
	0x03AA23D4 CBZ X10, 0x3AA3424
	0x03AA23D8 LDRSW X12, [X26 + 0x18]
	0x03AA23DC LDR W13, [X10 + 0x18]
	0x03AA23E0 CMP W12, W13
	0x03AA23E4 B.CS 0x3AA2418
	0x03AA23E8 MOVZ W13, 0x1C
	0x03AA23EC ADD W11, W12, 0x1
	0x03AA23F0 MADD X10, X12, X13, X10
	0x03AA23F4 STR W11, [X26 + 0x18]
	0x03AA23F8 STP W23, W19, [X10 + 0x20]
	0x03AA23FC STR W27, [X10 + 0x28]
	0x03AA2400 STRB W8, [X10 + 0x2C]
	0x03AA2404 STRB W9, [X10 + 0x2D]
	0x03AA2408 STRH W31, [X10 + 0x2E]
	0x03AA240C STR X31, [X10 + 0x30]
	0x03AA2410 STR W31, [X10 + 0x38]
	0x03AA2414 B 0x3AA2450
	0x03AA2418 LDR X10, [X11 + 0x20]
	0x03AA241C LDR X10, [X10 + 0xC0]
	0x03AA2420 LDR X2, [X10 + 0x70]
	0x03AA2424 STR W23, [X31 + 0x230]
	0x03AA2428 STR W19, [X31 + 0x234]
	0x03AA242C STR W27, [X31 + 0x238]
	0x03AA2430 STRB W8, [X31 + 0x23C]
	0x03AA2434 STRB W9, [X31 + 0x23D]
	0x03AA2438 STRH W31, [X31 + 0x23E]
	0x03AA243C STR X31, [X31 + 0x240]
	0x03AA2440 STR W31, [X31 + 0x248]

ISIL:
	001 Move [X31-48], D11
	002 Move [X31-40], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X30
	006 Move X8, -50032640
	007 Move V9, V1
	008 Move V1, [X8+260]
	009 Move S11, 0.5
	010 Move V8, V2
	011 Multiply S0, S0, S1
	012 Multiply S10, S0, S11
	013 Move V0, V10
	014 Call 0x3EB2E50
	015 Multiply S1, S8, S11
	016 Multiply S2, S9, S11
	017 NotImplemented "Instruction FDIV not yet implemented."
	018 Move S2, 1
	019 Add S1, S1, S2
	020 Multiply S0, S1, S0
	021 Call 0x3EB2BE0
	022 Move X8, -50032640
	023 Move V1, [X8+1096]
	024 Move X30, [X31+32]
	025 Move D9, [X31+16]
	026 Move D8, [X31+24]
	027 Subtract S0, S0, S10
	028 Add S0, S0, S0
	029 Multiply S0, S0, S1
	030 Move D11, [X31+48]
	031 Move D10, [X31+56]
	032 Return V0

Method: System.Int32 MinimalPunctualLightShadowResolution(System.Boolean softShadow)

Disassembly:
	0x03AA2444 ADD X1, X31, 0x230
	0x03AA2448 MOV X0, X26
	0x03AA244C BL 0x30E7B3C
	0x03AA2450 ADD W19, W19, 0x1
	0x03AA2454 CMP W25, W19

ISIL:
	001 And W31, W1, 1
	002 Move W8, 8
	003 Move W9, 16
	004 NotImplemented "Instruction CSEL not yet implemented."
	005 Return X0

Method: System.Single GetPointLightShadowFrustumFovBiasInDegrees(System.Int32 shadowSliceResolution, System.Boolean shadowFiltering)

Disassembly:
	0x03AA2458 B.NE 0x3AA2364
	0x03AA245C LDR X8, [X31 + 0x78]
	0x03AA2460 LDR X0, [X8 + 0xD8]
	0x03AA2464 CBZ X0, 0x3AA3484
	0x03AA2468 LDR X19, [X20 + 0x148]
	0x03AA246C MOV X1, X31
	0x03AA2470 BL 0x3C32E90
	0x03AA2474 CBZ X0, 0x3AA3498
	0x03AA2478 MOV X1, X31
	0x03AA247C BL 0x3C3F58C
	0x03AA2480 MOV V8.16B, V0.16B
	0x03AA2484 MOV V9.16B, V1.16B
	0x03AA2488 MOV V10.16B, V2.16B
	0x03AA248C MOV X0, X24
	0x03AA2490 MOV X1, X31
	0x03AA2494 BL 0x3C5BBF0
	0x03AA2498 CBZ X0, 0x3AA3494
	0x03AA249C MOV X1, X31
	0x03AA24A0 BL 0x3C32E90
	0x03AA24A4 CBZ X0, 0x3AA3490
	0x03AA24A8 MOV X1, X31
	0x03AA24AC BL 0x3C3F58C
	0x03AA24B0 CBZ X19, 0x3AA348C
	0x03AA24B4 LDR W8, [X19 + 0x18]
	0x03AA24B8 CMP X23, X8
	0x03AA24BC B.CS 0x3AA3488
	0x03AA24C0 FSUB S0, S8, S0
	0x03AA24C4 FSUB S1, S9, S1
	0x03AA24C8 ADD X8, X19, X23, 0x2, LSL
	0x03AA24CC LDR X19, [X31 + 0x48]
	0x03AA24D0 LDR X22, [X31 + 0x60]
	0x03AA24D4 FSUB S2, S10, S2
	0x03AA24D8 FMUL S0, S0, S0
	0x03AA24DC FMUL S1, S1, S1
	0x03AA24E0 FMUL S2, S2, S2
	0x03AA24E4 FADD S0, S0, S1
	0x03AA24E8 ADD W21, W25, W21
	0x03AA24EC FADD S0, S2, S0
	0x03AA24F0 STR S0, [X8 + 0x20]
	0x03AA24F4 ADD X23, X23, 0x1
	0x03AA24F8 CMP X23, X22
	0x03AA24FC B.NE 0x3AA2304
	0x03AA2500 B 0x3AA251C
	0x03AA2504 MOV W21, W31
	0x03AA2508 B 0x3AA33D0
	0x03AA250C MOV X0, X20
	0x03AA2510 BL 0x3AA3814
	0x03AA2514 B 0x3AA2FF0
	0x03AA2518 MOV W21, W31
	0x03AA251C LDR X24, [X20 + 0x150]
	0x03AA2520 LDR X28, [X31 + 0x68]
	0x03AA2524 ADD X27, X20, 0x150
	0x03AA2528 CBZ X24, 0x3AA2538
	0x03AA252C LDR W8, [X24 + 0x18]
	0x03AA2530 CMP W21, W8
	0x03AA2534 B.LE 0x3AA2554
	0x03AA2538 ADRP X8, 0x6B5000
	0x03AA253C LDR X8, [X8 + 0xA70]
	0x03AA2540 LDR X0, [X8]
	0x03AA2544 MOV W1, W21
	0x03AA2548 BL 0x1C16D6C
	0x03AA254C MOV X24, X0
	0x03AA2550 STR X0, [X27]
	0x03AA2554 LDR X9, [X20 + 0x140]
	0x03AA2558 CBZ X9, 0x3AA342C
	0x03AA255C LDR W8, [X9 + 0x18]
	0x03AA2560 CMP W8, 0x1
	0x03AA2564 B.LT 0x3AA25F8
	0x03AA2568 ADRP X25, 0x6B5000
	0x03AA256C LDR X25, [X25 + 0xA68]
	0x03AA2570 MOV X26, X31
	0x03AA2574 ADD X19, X31, 0x270
	0x03AA2578 ADD X22, X31, 0x140

ISIL:
	001 NotImplemented "Instruction CMP not yet implemented."
	002 Move S0, 4
	003 Return V0
	004 NotImplemented "Instruction CMP not yet implemented."
	005 NotImplemented "Instruction CMP not yet implemented."
	006 NotImplemented "Instruction CMP not yet implemented."
	007 NotImplemented "Instruction CMP not yet implemented."
	008 NotImplemented "Instruction CMP not yet implemented."
	009 NotImplemented "Instruction CMP not yet implemented."
	010 Move S0, 1
	011 NotImplemented "Instruction CMP not yet implemented."
	012 Move S0, 0.5
	013 Move S1, 4
	014 NotImplemented "Instruction FCSEL not yet implemented."
	015 Move TEMP, X1
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {40}
	019 Move W8, 0x422C0000
	020 Move S0, W8
	021 Return V0
	022 Move X8, -50032640
	023 Move V0, [X8+1092]
	024 Move TEMP, X1
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {40}
	028 Move X8, -50032640
	029 Move V0, [X8+244]
	030 Move TEMP, X1
	031 And TEMP, TEMP, 1
	032 Compare TEMP, 1
	033 JumpIfEqual {40}
	034 Move X8, -50032640
	035 Move V0, [X8+508]
	036 Move TEMP, X1
	037 And TEMP, TEMP, 1
	038 Compare TEMP, 1
	039 JumpIfNotEqual {3}
	040 NotImplemented "Instruction CMP not yet implemented."
	041 NotImplemented "Instruction CMP not yet implemented."
	042 NotImplemented "Instruction CMP not yet implemented."
	043 NotImplemented "Instruction CMP not yet implemented."
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Move X8, -50032640
	046 Move V1, [X8+1044]
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Add S1, S0, S1
	049 NotImplemented "Instruction FCSEL not yet implemented."
	050 Return V0
	051 Move X8, -50032640
	052 Move V1, [X8+180]
	053 Move X8, -50032640
	054 Move V1, [X8+1052]
	055 Move X8, -50032640
	056 Move V0, [X8+744]
	057 Move TEMP, X1
	058 And TEMP, TEMP, 1
	059 Compare TEMP, 1
	060 JumpIfEqual {40}
	061 Move X8, -50032640
	062 Move V1, [X8+248]
	063 Move X8, -50032640
	064 Move V1, [X8+684]
	065 Move X8, -50032640
	066 Move V1, [X8+368]
	067 Add S0, S0, S1
	068 Return V0

Method: System.Void InsertionSort(UnityEngine.Rendering.Universal.Internal.AdditionalLightsShadowCasterPass/ShadowResolutionRequest[] array, System.Int32 startIndex, System.Int32 lastIndex)

Disassembly:
	0x03AA257C MOVZ W23, 0x20
	0x03AA2580 LDR X2, [X25]
	0x03AA2584 ADD X8, X31, 0x140
	0x03AA2588 MOV X0, X9
	0x03AA258C MOV W1, W26
	0x03AA2590 BL 0x30E7790
	0x03AA2594 LDR V0, [X31 + 0x14]
	0x03AA2598 LDUR V1, [X22 + 0xC]
	0x03AA259C STR V0, [X31 + 0x23]
	0x03AA25A0 STUR V1, [X22 + 0xFC]
	0x03AA25A4 CBZ X24, 0x3AA3434
	0x03AA25A8 LDR V0, [X31 + 0x23]
	0x03AA25AC LDUR V1, [X22 + 0xFC]
	0x03AA25B0 STR V0, [X31 + 0x27]
	0x03AA25B4 STUR V1, [X19 + 0xC]
	0x03AA25B8 LDR W8, [X24 + 0x18]
	0x03AA25BC CMP X26, X8
	0x03AA25C0 B.CS 0x3AA3438
	0x03AA25C4 LDUR V0, [X19 + 0xC]
	0x03AA25C8 LDR V1, [X31 + 0x27]
	0x03AA25CC ADD X8, X24, X23
	0x03AA25D0 STUR V0, [X8 + 0xC]
	0x03AA25D4 STR V1, [X8]
	0x03AA25D8 LDR X9, [X20 + 0x140]
	0x03AA25DC CBZ X9, 0x3AA342C
	0x03AA25E0 LDRSW X8, [X9 + 0x18]
	0x03AA25E4 LDR X24, [X27]
	0x03AA25E8 ADD X26, X26, 0x1
	0x03AA25EC ADD X23, X23, 0x1C
	0x03AA25F0 CMP X26, X8
	0x03AA25F4 B.LT 0x3AA2580
	0x03AA25F8 CBZ X24, 0x3AA3518
	0x03AA25FC LDR X8, [X24 + 0x18]
	0x03AA2600 SXTW X9, W8
	0x03AA2604 CMP X9, W21, SXTW
	0x03AA2608 B.LE 0x3AA2638
	0x03AA260C MOV W10, W21
	0x03AA2610 SXTW X10, W10
	0x03AA2614 MOVZ W11, 0x1C
	0x03AA2618 MADD X11, X10, X11, X24
	0x03AA261C ADD X11, X11, 0x28
	0x03AA2620 CMP W10, W8
	0x03AA2624 B.CS 0x3AA3450
	0x03AA2628 ADD X10, X10, 0x1
	0x03AA262C CMP X10, X9
	0x03AA2630 STR W31, [X11], #0x1C
	0x03AA2634 B.LT 0x3AA2620
	0x03AA2638 MOV X0, X20
	0x03AA263C MOV X1, X24
	0x03AA2640 MOV W2, W31
	0x03AA2644 MOV W3, W21
	0x03AA2648 BL 0x3AA157C
	0x03AA264C LDRB W8, [X20 + 0xE0]
	0x03AA2650 CBNZ W8, 0x3AA26A4
	0x03AA2654 ADRP X8, 0x67A000
	0x03AA2658 LDR X8, [X8 + 0x8A8]
	0x03AA265C LDR X0, [X8]
	0x03AA2660 LDR W8, [X0 + 0xE0]
	0x03AA2664 CBNZ W8, 0x3AA266C
	0x03AA2668 BL 0x1C16DFC
	0x03AA266C MOV X0, X31
	0x03AA2670 BL 0x3A89318
	0x03AA2674 ADRP X8, 0x651000
	0x03AA2678 LDR X8, [X8 + 0x5A8]
	0x03AA267C MOV W22, W0
	0x03AA2680 LDR X0, [X8]
	0x03AA2684 LDR W8, [X0 + 0xE0]
	0x03AA2688 CBNZ W8, 0x3AA2690
	0x03AA268C BL 0x1C16DFC
	0x03AA2690 MOV W0, W21
	0x03AA2694 MOV W1, W22
	0x03AA2698 MOV X2, X31
	0x03AA269C BL 0x337EE94
	0x03AA26A0 MOV W21, W0
	0x03AA26A4 CMP W21, 0x1
	0x03AA26A8 B.LT 0x3AA2734
	0x03AA26AC LDR V0, [X31 + 0x5]
	0x03AA26B0 MOVZ W19, 0x1C
	0x03AA26B4 MOVZ W23, 0x10
	0x03AA26B8 MOVZ W24, 0x8
	0x03AA26BC FMOV W22, S0
	0x03AA26C0 MOVN W25, 0x5
	0x03AA26C4 MOV X1, X27
	0x03AA26C8 MOV W2, W21
	0x03AA26CC MOV W3, W22
	0x03AA26D0 BL 0x3AA1824
	0x03AA26D4 LDR X8, [X27]
	0x03AA26D8 MOV W3, W0
	0x03AA26DC CBZ X8, 0x3AA3458
	0x03AA26E0 LDR W10, [X8 + 0x18]
	0x03AA26E4 SXTW X9, W21
	0x03AA26E8 SUB X9, X9, 0x1
	0x03AA26EC CMP W9, W10
	0x03AA26F0 B.CS 0x3AA345C
	0x03AA26F4 MADD X10, X9, X19, X8
	0x03AA26F8 LDRB W11, [X10 + 0x2C]
	0x03AA26FC LDR W10, [X10 + 0x28]
	0x03AA2700 CMP W11, 0x0
	0x03AA2704 CSEL W11, W24, W23, EQ
	0x03AA2708 MUL W11, W11, W3
	0x03AA270C CMP W10, W11
	0x03AA2710 B.GE 0x3AA2740
	0x03AA2714 MADD X9, X9, X19, X8
	0x03AA2718 LDRB W9, [X9 + 0x2D]
	0x03AA271C CMP W9, 0x0
	0x03AA2720 CSINV W9, W25, W31, NE
	0x03AA2724 ADD W21, W9, W21
	0x03AA2728 CMP W21, 0x1
	0x03AA272C B.GE 0x3AA26C4
	0x03AA2730 B 0x3AA2740
	0x03AA2734 LDR X8, [X27]
	0x03AA2738 CBZ X8, 0x3AA356C
	0x03AA273C MOVZ W3, 0x1
	0x03AA2740 LDR X9, [X8 + 0x18]
	0x03AA2744 LDR W19, [X31 + 0x34]
	0x03AA2748 MOV W11, W21
	0x03AA274C SXTW X25, W11
	0x03AA2750 SXTW X10, W9
	0x03AA2754 CMP X10, W21, SXTW
	0x03AA2758 B.LE 0x3AA2784
	0x03AA275C MOVZ W11, 0x1C
	0x03AA2760 MADD X11, X25, X11, X8
	0x03AA2764 ADD X11, X11, 0x28
	0x03AA2768 MOV X12, X25
	0x03AA276C CMP W12, W9
	0x03AA2770 B.CS 0x3AA3454
	0x03AA2774 ADD X12, X12, 0x1
	0x03AA2778 CMP X12, X10
	0x03AA277C STR W31, [X11], #0x1C
	0x03AA2780 B.LT 0x3AA276C
	0x03AA2784 LDR X10, [X20 + 0x158]
	0x03AA2788 CBZ X10, 0x3AA351C
	0x03AA278C LDR W11, [X10 + 0x18]
	0x03AA2790 UBFM X12, X11, 0x20, 0x1F
	0x03AA2794 CMP X12, 0x1
	0x03AA2798 B.LT 0x3AA27C4
	0x03AA279C MOV X12, X31
	0x03AA27A0 SXTW X13, W11
	0x03AA27A4 ADD X14, X10, 0x20
	0x03AA27A8 MOVN W15, 0x0
	0x03AA27AC CMP X12, X11
	0x03AA27B0 B.CS 0x3AA343C
	0x03AA27B4 STR W15, [X14, X12, LSL #2]
	0x03AA27B8 ADD X12, X12, 0x1
	0x03AA27BC CMP X12, X13
	0x03AA27C0 B.LT 0x3AA27AC
	0x03AA27C4 SUBS W12, W25, 0x1
	0x03AA27C8 B.MI 0x3AA27FC
	0x03AA27CC MOVZ W13, 0x1C
	0x03AA27D0 MOV W14, W12
	0x03AA27D4 CMP W12, W9
	0x03AA27D8 B.CS 0x3AA3444
	0x03AA27DC UMADDL X15, X14, X13, X8
	0x03AA27E0 LDRSW X15, [X15 + 0x20]
	0x03AA27E4 CMP W15, W11
	0x03AA27E8 B.CS 0x3AA3440
	0x03AA27EC ADD X15, X10, X15, 0x2, LSL
	0x03AA27F0 STR W14, [X15 + 0x20]
	0x03AA27F4 SUBS W14, W14, 0x1
	0x03AA27F8 B.PL 0x3AA27D4
	0x03AA27FC LDR V0, [X31 + 0x5]
	0x03AA2800 FMOV W1, S0
	0x03AA2804 MOV X0, X20
	0x03AA2808 MOV W2, W25
	0x03AA280C BL 0x3AA18AC
	0x03AA2810 LDR X8, [X20 + 0x108]
	0x03AA2814 CBZ X8, 0x3AA2824
	0x03AA2818 LDR W8, [X8 + 0x18]
	0x03AA281C CMP W25, W8
	0x03AA2820 B.LE 0x3AA283C

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+80], X30
	003 Move [X31+88], X25
	004 Move [X31+96], X24
	005 Move [X31+104], X23
	006 Move [X31+112], X22
	007 Move [X31+120], X21
	008 Move [X31+128], X20
	009 Move [X31+136], X19
	010 NotImplemented "Instruction MRS not yet implemented."
	011 Move X10, [X8+40]
	012 Add W9, W2, 1
	013 NotImplemented "Instruction CMP not yet implemented."
	014 Move [X31+72], X10
	015 Compare X1, 0
	016 JumpIfEqual {162}
	017 Move X9, W9
	018 Add X10, X1, 45
	019 Move W11, 28
	020 Move X12, 1
	021 Move X13, INVALID
	022 Move X6, [X1+24]
	023 NotImplemented "Instruction CMP not yet implemented."
	024 NotImplemented "Instruction MADD not yet implemented."
	025 NotImplemented "Instruction LDUR not yet implemented."
	026 Move W14, [X4+32]
	027 Move W15, [X4+36]
	028 Move W16, [X4+40]
	029 Move W17, [X4+44]
	030 NotImplemented "Instruction LDUR not yet implemented."
	031 Move W4, [X4+45]
	032 Move [X31+62], X5
	033 Move W5, W2
	034 Move [X31+56], X7
	035 Move TEMP, X2
	036 And TEMP, TEMP, -2147483648
	037 Compare TEMP, -2147483648
	038 JumpIfEqual {129}
	039 Move W5, W2
	040 And X6, X6, 0
	041 NotImplemented "Instruction CMP not yet implemented."
	042 NotImplemented "Instruction UMADDL not yet implemented."
	043 Add X19, X12, X5
	044 Move X20, W14
	045 And W21, W17, 1
	046 And W22, W4, 1
	047 NotImplemented "Instruction LDUR not yet implemented."
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Compare W21, 0
	050 JumpIfNotEqual {55}
	051 NotImplemented "Instruction CMP not yet implemented."
	052 NotImplemented "Instruction LDURB not yet implemented."
	053 Compare W24, 0
	054 JumpIfNotEqual {107}
	055 NotImplemented "Instruction CMP not yet implemented."
	056 NotImplemented "Instruction LDURB not yet implemented."
	057 Compare W22, 0
	058 JumpIfNotEqual {63}
	059 NotImplemented "Instruction CMP not yet implemented."
	060 Move W24, [X7]
	061 Compare W24, 0
	062 JumpIfNotEqual {107}
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Move W23, [X7]
	065 NotImplemented "Instruction CMP not yet implemented."
	066 Move X23, [X0+328]
	067 Compare X23, 0
	068 JumpIfEqual {162}
	069 Move W25, [X23+24]
	070 NotImplemented "Instruction CMP not yet implemented."
	071 NotImplemented "Instruction LDURSW not yet implemented."
	072 NotImplemented "Instruction CMP not yet implemented."
	073 Add X23, X23, 32
	074 Move V0, [X23]
	075 Move V1, [X23]
	076 NotImplemented "Instruction FCMP not yet implemented."
	077 Move W23, [X7]
	078 NotImplemented "Instruction CMP not yet implemented."
	079 Move X23, [X0+328]
	080 Compare X23, 0
	081 JumpIfEqual {162}
	082 Move W25, [X23+24]
	083 NotImplemented "Instruction CMP not yet implemented."
	084 NotImplemented "Instruction LDURSW not yet implemented."
	085 NotImplemented "Instruction CMP not yet implemented."
	086 NotImplemented "Instruction CMP not yet implemented."
	087 Add X23, X23, 32
	088 Move V0, [X23]
	089 Move V1, [X23]
	090 NotImplemented "Instruction FCMP not yet implemented."
	091 Move W23, [X7]
	092 NotImplemented "Instruction CMP not yet implemented."
	093 Move X23, [X0+328]
	094 Compare X23, 0
	095 JumpIfEqual {162}
	096 Move W25, [X23+24]
	097 NotImplemented "Instruction CMP not yet implemented."
	098 NotImplemented "Instruction LDURSW not yet implemented."
	099 NotImplemented "Instruction CMP not yet implemented."
	100 NotImplemented "Instruction CMP not yet implemented."
	101 Add X23, X23, 32
	102 Move V0, [X23]
	103 Move V1, [X23]
	104 NotImplemented "Instruction FCMP not yet implemented."
	105 NotImplemented "Instruction LDUR not yet implemented."
	106 NotImplemented "Instruction CMP not yet implemented."
	107 NotImplemented "Instruction LDUR not yet implemented."
	108 NotImplemented "Instruction LDUR not yet implemented."
	109 Add X23, X5, 1
	110 NotImplemented "Instruction CMP not yet implemented."
	111 Move [X31+12], V0
	112 Move [X31], V1
	113 NotImplemented "Instruction LDUR not yet implemented."
	114 Move V1, [X31]
	115 NotImplemented "Instruction SBFM not yet implemented."
	116 NotImplemented "Instruction CMP not yet implemented."
	117 NotImplemented "Instruction MADD not yet implemented."
	118 Move [X6+44], V0
	119 Move [X6+2], V1
	120 Move W6, [X1+24]
	121 Subtract X5, X5, 1
	122 Subtract X7, X7, 28
	123 Add X19, X19, X13
	124 NotImplemented "Instruction CMP not yet implemented."
	125 Move X6, [X1+24]
	126 Move TEMP, 0
	127 Not TEMP
	128 Move W5, TEMP
	129 Move X7, [X31+56]
	130 NotImplemented "Instruction LDUR not yet implemented."
	131 Add W5, W5, 1
	132 NotImplemented "Instruction CMP not yet implemented."
	133 Move [X31+40], X7
	134 Move [X31+46], X19
	135 NotImplemented "Instruction SMADDL not yet implemented."
	136 Move [X5+32], W14
	137 Move [X5+36], W15
	138 Move [X5+40], W16
	139 Move [X5+44], W17
	140 Move [X5+45], W4
	141 NotImplemented "Instruction LDUR not yet implemented."
	142 Move X15, [X31+40]
	143 Add X9, X9, 1
	144 NotImplemented "Instruction CMP not yet implemented."
	145 Add W2, W2, 1
	146 Move [X5+52], X14
	147 Move [X5+46], X15
	148 Move X8, [X8+40]
	149 Move X9, [X31+72]
	150 NotImplemented "Instruction CMP not yet implemented."
	151 Move X20, [X31+128]
	152 Move X19, [X31+136]
	153 Move X22, [X31+112]
	154 Move X21, [X31+120]
	155 Move X24, [X31+96]
	156 Move X23, [X31+104]
	157 Move X30, [X31+80]
	158 Move X25, [X31+88]
	159 Add X31, X31, 144
	160 Return 
	161 Call 0x1C17F28
	162 Call 0x1C17F20
	163 Call 0x3EB2B20

Method: System.Int32 EstimateScaleFactorNeededToFitAllShadowsInAtlas(in UnityEngine.Rendering.Universal.Internal.AdditionalLightsShadowCasterPass/ShadowResolutionRequest[] shadowResolutionRequests, System.Int32 endIndex, System.Int32 atlasWidth)

Disassembly:
	0x03AA2824 ADRP X8, 0x6B5000
	0x03AA2828 LDR X8, [X8 + 0xA78]
	0x03AA282C LDR X0, [X8]
	0x03AA2830 MOV W1, W25
	0x03AA2834 BL 0x1C16D6C
	0x03AA2838 STR X0, [X20 + 0x108]
	0x03AA283C LDR X8, [X20 + 0x138]
	0x03AA2840 CBZ X8, 0x3AA2858
	0x03AA2844 LDRB W9, [X20 + 0xE0]
	0x03AA2848 CBZ W9, 0x3AA2870
	0x03AA284C LDR W8, [X8 + 0x18]
	0x03AA2850 CMP W25, W8
	0x03AA2854 B.LE 0x3AA2870
	0x03AA2858 ADRP X8, 0x655000
	0x03AA285C LDR X8, [X8 + 0x988]
	0x03AA2860 LDR X0, [X8]
	0x03AA2864 MOV W1, W25
	0x03AA2868 BL 0x1C16D6C
	0x03AA286C STR X0, [X20 + 0x138]
	0x03AA2870 CMP W19, 0x1
	0x03AA2874 B.LT 0x3AA28D0
	0x03AA2878 LDR W8, [X31 + 0x34]
	0x03AA287C ADRP X22, 0x6B4000
	0x03AA2880 LDR X22, [X22 + 0x8C8]
	0x03AA2884 MOV X19, X31
	0x03AA2888 MOV W21, W8
	0x03AA288C LDR X0, [X22]
	0x03AA2890 LDR X23, [X20 + 0x130]
	0x03AA2894 LDR W8, [X0 + 0xE0]
	0x03AA2898 CBNZ W8, 0x3AA28A4
	0x03AA289C BL 0x1C16DFC
	0x03AA28A0 LDR X0, [X22]
	0x03AA28A4 CBZ X23, 0x3AA3448
	0x03AA28A8 LDR W8, [X23 + 0x18]

ISIL:
	001 Move [X31-16], X30
	002 NotImplemented "Instruction CMP not yet implemented."
	003 Move X12, [X1]
	004 Compare X12, 0
	005 JumpIfEqual {32}
	006 Move W10, [X12+24]
	007 Move X9, X31
	008 Move X8, X31
	009 Move W11, W2
	010 Add X12, X12, 40
	011 NotImplemented "Instruction CMP not yet implemented."
	012 Move W13, [X12+28]
	013 Add X9, X9, 1
	014 NotImplemented "Instruction CMP not yet implemented."
	015 Multiply W13, W13, W13
	016 Add X8, X8, W13
	017 Move X8, X31
	018 Multiply W9, W3, W3
	019 Move X9, W9
	020 Move W10, 1
	021 Move W0, W10
	022 Move X10, W0
	023 Multiply X11, X10, X9
	024 Multiply X10, X11, X10
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move W10, W0
	027 ShiftRight W10, 31
	028 And W10, W10, 0x3FFFFFFF
	029 Move X30, [X31+16]
	030 Return X0
	031 Call 0x1C17F28
	032 Call 0x1C17F20

Method: System.Void AtlasLayout(System.Int32 atlasSize, System.Int32 totalShadowSlicesCount, System.Int32 estimatedScaleFactor)

Disassembly:
	0x03AA28AC CMP X19, X8
	0x03AA28B0 B.CS 0x3AA344C
	0x03AA28B4 LDR X8, [X0 + 0xB8]
	0x03AA28B8 LDUR V0, [X8 + 0x8]
	0x03AA28BC ADD X8, X23, X19, 0x4, LSL
	0x03AA28C0 ADD X19, X19, 0x1
	0x03AA28C4 CMP X21, X19
	0x03AA28C8 STR V0, [X8 + 0x2]
	0x03AA28CC B.NE 0x3AA288C
	0x03AA28D0 CMP W28, 0x1
	0x03AA28D4 B.LT 0x3AA2FE4
	0x03AA28D8 LDR X8, [X31 + 0x78]
	0x03AA28DC LDR X19, [X31 + 0x48]
	0x03AA28E0 LDR W21, [X31 + 0x34]
	0x03AA28E4 MOV X9, X28
	0x03AA28E8 ADD X10, X8, 0x250
	0x03AA28EC STR X10, [X31 + 0x20]
	0x03AA28F0 LDRB W10, [X8 + 0x27C]
	0x03AA28F4 STR X27, [X31 + 0x28]
	0x03AA28F8 MOV X27, X31
	0x03AA28FC MOV W22, W31
	0x03AA2900 MOV W28, W31
	0x03AA2904 ADD X29, X8, 0x8
	0x03AA2908 AND X8, X9, 0x0
	0x03AA290C STR W10, [X31 + 0x1C]
	0x03AA2910 STR X8, [X31 + 0x60]
	0x03AA2914 STR X25, [X31 + 0x10]
	0x03AA2918 ADRP X8, 0x6B4000
	0x03AA291C LDR X8, [X8 + 0xF00]
	0x03AA2920 LDR X3, [X8]
	0x03AA2924 LDR X1, [X31 + 0x68]
	0x03AA2928 MOV X0, X19
	0x03AA292C MOV W2, W27
	0x03AA2930 BL 0x2222228
	0x03AA2934 LDR X8, [X31 + 0x70]
	0x03AA2938 LDR W8, [X8]
	0x03AA293C CMP X27, X8
	0x03AA2940 B.NE 0x3AA296C
	0x03AA2944 LDR X8, [X20 + 0x110]
	0x03AA2948 CBZ X8, 0x3AA3468
	0x03AA294C LDR W9, [X8 + 0x18]
	0x03AA2950 CMP X27, X9
	0x03AA2954 B.CS 0x3AA3460
	0x03AA2958 ADD X8, X8, X27, 0x2, LSL
	0x03AA295C MOVN W9, 0x0
	0x03AA2960 STR W9, [X8 + 0x20]
	0x03AA2964 MOV W9, W28
	0x03AA2968 B 0x3AA2F64
	0x03AA296C LDR X8, [X20 + 0x118]
	0x03AA2970 CBZ X8, 0x3AA3464
	0x03AA2974 LDR W9, [X8 + 0x18]
	0x03AA2978 ADD W10, W28, 0x1
	0x03AA297C STR W10, [X31 + 0x50]
	0x03AA2980 CMP W28, W9
	0x03AA2984 B.GE 0x3AA2F60
	0x03AA2988 CMP W28, W9
	0x03AA298C B.CS 0x3AA349C
	0x03AA2990 SXTW X9, W28
	0x03AA2994 ADD X8, X8, X9, 0x2, LSL
	0x03AA2998 STR W27, [X8 + 0x20]
	0x03AA299C LDR X8, [X20 + 0x110]
	0x03AA29A0 STR X9, [X31 + 0x40]
	0x03AA29A4 CBZ X8, 0x3AA34A8
	0x03AA29A8 LDR W9, [X8 + 0x18]
	0x03AA29AC CMP X27, X9
	0x03AA29B0 B.CS 0x3AA34A0
	0x03AA29B4 ADD X8, X8, X27, 0x2, LSL
	0x03AA29B8 STR W28, [X8 + 0x20]
	0x03AA29BC LDR X8, [X20 + 0x120]
	0x03AA29C0 CBZ X8, 0x3AA34A4
	0x03AA29C4 CMP W28, W21
	0x03AA29C8 B.GE 0x3AA2F60
	0x03AA29CC LDR W8, [X8 + 0x18]
	0x03AA29D0 CMP W8, W25
	0x03AA29D4 B.GE 0x3AA2F60
	0x03AA29D8 MOV X24, X0
	0x03AA29DC MOV X1, X31
	0x03AA29E0 STR W22, [X31 + 0x38]
	0x03AA29E4 BL 0x3C5BC7C
	0x03AA29E8 LDR X8, [X20 + 0x120]
	0x03AA29EC CMP W0, 0x2
	0x03AA29F0 MOVZ W9, 0x6
	0x03AA29F4 CSEL W9, W9, W31, EQ
	0x03AA29F8 CMP W0, 0x0
	0x03AA29FC MOV W19, W0
	0x03AA2A00 CSINC W22, W9, W31, NE
	0x03AA2A04 CBZ X8, 0x3AA34B4
	0x03AA2A08 LDR W9, [X8 + 0x18]
	0x03AA2A0C ADD W9, W9, W22
	0x03AA2A10 CMP W9, W25
	0x03AA2A14 B.LE 0x3AA2A30
	0x03AA2A18 LDR X1, [X31 + 0x70]
	0x03AA2A1C MOV W2, W27
	0x03AA2A20 BL 0x3AA1E6C
	0x03AA2A24 TBNZ X0, 0x0, 0x3AA3410
	0x03AA2A28 LDR X8, [X20 + 0x120]
	0x03AA2A2C CBZ X8, 0x3AA3504
	0x03AA2A30 CBZ W22, 0x3AA2F4C
	0x03AA2A34 STR W19, [X31 + 0x3C]
	0x03AA2A38 CBZ X8, 0x3AA3428
	0x03AA2A3C LDR V0, [X8 + 0x18]
	0x03AA2A40 MOV W21, W31
	0x03AA2A44 MOV W19, W31
	0x03AA2A48 SUB W25, W22, 0x1
	0x03AA2A4C SCVTF S9, S0
	0x03AA2A50 LDRSW X26, [X8 + 0x18]
	0x03AA2A54 ADD X2, X31, 0x318
	0x03AA2A58 MOV X0, X29
	0x03AA2A5C MOV W1, W27
	0x03AA2A60 MOV X3, X31
	0x03AA2A64 BL 0x3C5318C
	0x03AA2A68 TBZ X0, 0x0, 0x3AA2F28
	0x03AA2A6C LDR X8, [X31 + 0x78]
	0x03AA2A70 LDRB W8, [X8 + 0x270]
	0x03AA2A74 CBZ W8, 0x3AA2F28
	0x03AA2A78 LDR X1, [X31 + 0x70]
	0x03AA2A7C MOV W2, W27
	0x03AA2A80 BL 0x3AA1E6C
	0x03AA2A84 TBZ X0, 0x0, 0x3AA2F28
	0x03AA2A88 LDR X8, [X20 + 0x158]
	0x03AA2A8C CBZ X8, 0x3AA347C
	0x03AA2A90 LDR W9, [X8 + 0x18]
	0x03AA2A94 CMP X27, X9
	0x03AA2A98 B.CS 0x3AA3480
	0x03AA2A9C ADD X8, X8, X27, 0x2, LSL
	0x03AA2AA0 LDRSW X8, [X8 + 0x20]
	0x03AA2AA4 ADDS W31, W8, 0x1
	0x03AA2AA8 B.EQ 0x3AA2F28
	0x03AA2AAC LDR W9, [X31 + 0x3C]
	0x03AA2AB0 CBZ W9, 0x3AA2BDC
	0x03AA2AB4 CMP W9, 0x2
	0x03AA2AB8 B.NE 0x3AA2F28
	0x03AA2ABC LDR X9, [X31 + 0x28]
	0x03AA2AC0 LDR X9, [X9]
	0x03AA2AC4 CBZ X9, 0x3AA3500
	0x03AA2AC8 LDR W10, [X9 + 0x18]
	0x03AA2ACC CMP W8, W10
	0x03AA2AD0 B.CS 0x3AA34F0
	0x03AA2AD4 MOVZ W10, 0x1C
	0x03AA2AD8 MADD X8, X8, X10, X9
	0x03AA2ADC LDR W22, [X8 + 0x38]
	0x03AA2AE0 MOV X0, X24
	0x03AA2AE4 MOV X1, X31
	0x03AA2AE8 BL 0x3C5BBF0
	0x03AA2AEC CBZ X0, 0x3AA34FC
	0x03AA2AF0 MOV X1, X31
	0x03AA2AF4 BL 0x3C16B90
	0x03AA2AF8 ADRP X8, 0x6B4000
	0x03AA2AFC LDR X8, [X8 + 0x8C8]
	0x03AA2B00 MOV W23, W0
	0x03AA2B04 LDR X0, [X8]
	0x03AA2B08 LDR W8, [X0 + 0xE0]
	0x03AA2B0C CBNZ W8, 0x3AA2B14
	0x03AA2B10 BL 0x1C16DFC
	0x03AA2B14 CMP W23, 0x2
	0x03AA2B18 CSET W1, EQ
	0x03AA2B1C MOV W0, W22
	0x03AA2B20 BL 0x3AA1458
	0x03AA2B24 LDR X22, [X20 + 0x108]
	0x03AA2B28 CBZ X22, 0x3AA34F8
	0x03AA2B2C LDR W8, [X22 + 0x18]
	0x03AA2B30 CMP W26, W8
	0x03AA2B34 B.CS 0x3AA34F4
	0x03AA2B38 ADRP X8, 0x6B4000
	0x03AA2B3C LDR X8, [X8 + 0xEC0]
	0x03AA2B40 MOV V8.16B, V0.16B
	0x03AA2B44 LDR X0, [X8]
	0x03AA2B48 LDR W8, [X0 + 0xE0]
	0x03AA2B4C CBNZ W8, 0x3AA2B54
	0x03AA2B50 BL 0x1C16DFC
	0x03AA2B54 MOVZ W9, 0x1C8
	0x03AA2B58 MADD X8, X26, X9, X22
	0x03AA2B5C MADD X9, X26, X9, X22
	0x03AA2B60 ADD X5, X8, 0x20
	0x03AA2B64 ADD X6, X8, 0x60
	0x03AA2B68 ADD X7, X9, 0xEC
	0x03AA2B6C LDR X1, [X31 + 0x20]
	0x03AA2B70 ADD X4, X31, 0x290
	0x03AA2B74 MOV X0, X29
	0x03AA2B78 MOV W2, W27
	0x03AA2B7C MOV W3, W21

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+32], X29
	003 Move [X31+40], X30
	004 Move [X31+48], X28
	005 Move [X31+56], X27
	006 Move [X31+64], X26
	007 Move [X31+72], X25
	008 Move [X31+80], X24
	009 Move [X31+88], X23
	010 Move [X31+96], X22
	011 Move [X31+104], X21
	012 Move [X31+112], X20
	013 Move [X31+120], X19
	014 Move X19, 0x941000
	015 Move W8, [X19+1021]
	016 Move W20, W3
	017 Move W26, W2
	018 Move W22, W1
	019 Move X21, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {44}
	024 Move X0, 0x6B6000
	025 Move X0, [X0+2592]
	026 Call 0x1C17CF4
	027 Move X0, 0x6B6000
	028 Move X0, [X0+2600]
	029 Call 0x1C17CF4
	030 Move X0, 0x6B6000
	031 Move X0, [X0+2608]
	032 Call 0x1C17CF4
	033 Move X0, 0x6B6000
	034 Move X0, [X0+2616]
	035 Call 0x1C17CF4
	036 Move X0, 0x6B6000
	037 Move X0, [X0+2624]
	038 Call 0x1C17CF4
	039 Move X0, 0x6B6000
	040 Move X0, [X0+2632]
	041 Call 0x1C17CF4
	042 Move W8, 1
	043 Move [X19+1021], W8
	044 Move X0, [X21+352]
	045 Compare X0, 0
	046 JumpIfEqual {186}
	047 Move W8, W22
	048 Move W19, 28
	049 Move W29, 16
	050 NotImplemented "Instruction BFM not yet implemented."
	051 Move [X31+8], X8
	052 Move [X31+4], W26
	053 Move [X0+24], W31
	054 Move X9, 0x6B6000
	055 Move W10, [X0+28]
	056 Move X8, [X0+16]
	057 Move X9, [X9+2592]
	058 Add W10, W10, 2
	059 Move X9, [X9]
	060 Move [X0+28], W10
	061 Compare X8, 0
	062 JumpIfEqual {186}
	063 Move W10, [X8+24]
	064 Compare W10, 0
	065 JumpIfEqual {71}
	066 Move W9, 1
	067 Move [X0+24], W9
	068 Move X9, [X31+8]
	069 Move [X8+32], X31
	070 Move [X8+40], X9
	071 Move X8, [X9+32]
	072 Move X2, [X31+8]
	073 Move X1, X31
	074 Move X8, [X8+192]
	075 Move X3, [X8+112]
	076 Call List`1<RectInt>.AddWithResize, X0, X1
	077 NotImplemented "Instruction CMP not yet implemented."
	078 Move W10, W31
	079 Move W22, W26
	080 Move X8, [X21+336]
	081 Compare X8, 0
	082 JumpIfEqual {186}
	083 Move W9, [X8+24]
	084 NotImplemented "Instruction CMP not yet implemented."
	085 Move X28, W10
	086 NotImplemented "Instruction MADD not yet implemented."
	087 Move W9, [X8+40]
	088 Move W8, [X8+44]
	089 NotImplemented "Instruction SDIV not yet implemented."
	090 NotImplemented "Instruction CMP not yet implemented."
	091 Move W8, 8
	092 NotImplemented "Instruction CSEL not yet implemented."
	093 NotImplemented "Instruction CMP not yet implemented."
	094 Move X0, [X21+352]
	095 Move [X31+24], X10
	096 Compare X0, 0
	097 JumpIfEqual {186}
	098 Subtract W8, W22, 1
	099 Move W23, W31
	100 Move [X31+20], W8
	101 Move W8, [X0+24]
	102 NotImplemented "Instruction CMP not yet implemented."
	103 Move X8, 0x6B6000
	104 Move X8, [X8+2632]
	105 Move W1, W23
	106 Move X2, [X8]
	107 Call List`1<RectInt>.get_Item, X0, X1
	108 Move X25, X1
	109 NotImplemented "Instruction CMP not yet implemented."
	110 Move X0, [X21+352]
	111 Add W23, W23, 1
	112 Compare X0, 0
	113 JumpIfNotEqual {101}
	114 Move X8, [X21+336]
	115 Compare X8, 0
	116 JumpIfEqual {186}
	117 Move W9, [X8+24]
	118 Move X10, [X31+24]
	119 Move [X31+16], W20
	120 NotImplemented "Instruction CMP not yet implemented."
	121 Move X24, X0
	122 Move X9, X0
	123 ShiftRight X9, 32
	124 And X9, X9, 0x7FFFFFFF
	125 NotImplemented "Instruction MADD not yet implemented."
	126 Move [X8+48], W24
	127 Move [X8+52], W9
	128 Move [X8+56], W27
	129 Move X0, [X21+352]
	130 Compare X0, 0
	131 JumpIfEqual {186}
	132 Move X8, 0x6B6000
	133 Move X8, [X8+2616]
	134 Move W1, W23
	135 Move W28, W9
	136 Move X2, [X8]
	137 Call List`1<RectInt>.RemoveAt, X0, X1
	138 Move X8, [X31+24]
	139 NotImplemented "Instruction ORN not yet implemented."
	140 Add W8, W8, W26
	141 NotImplemented "Instruction CMP not yet implemented."
	142 Move X8, X25
	143 ShiftRight X8, 32
	144 And X8, X8, 0x7FFFFFFF
	145 Add W19, W25, W24
	146 Move W25, W27
	147 Add W20, W8, W28
	148 NotImplemented "Instruction BFM not yet implemented."
	149 Move W26, 1
	150 Move W29, W24
	151 Add W29, W29, W27
	152 Add W8, W29, W27
	153 NotImplemented "Instruction CMP not yet implemented."
	154 Add W28, W28, W27
	155 Add W8, W28, W27
	156 NotImplemented "Instruction CMP not yet implemented."
	157 Move W29, W24
	158 Move X0, [X21+352]
	159 Compare X0, 0
	160 JumpIfEqual {186}
	161 Move X9, 0x6B6000
	162 Move X9, [X9+2608]
	163 Add W8, W23, W26
	164 Move W2, W29
	165 Subtract W1, W8, 1
	166 Move X4, [X9]
	167 NotImplemented "Instruction BFM not yet implemented."
	168 Move X3, X25
	169 Call List`1<RectInt>.Insert, X0, X1, X2
	170 Add W26, W26, 1
	171 NotImplemented "Instruction CMP not yet implemented."
	172 Move X10, [X31+24]
	173 Move W26, [X31+4]
	174 Move W20, [X31+16]
	175 Move W22, [X31+20]
	176 Move W19, 28
	177 Add W10, W10, 1
	178 NotImplemented "Instruction CMP not yet implemented."
	179 Move W29, 16
	180 Move X0, [X21+352]
	181 Move W20, W20
	182 ShiftRight W20, 31
	183 And W20, W20, 0x3FFFFFFF
	184 Compare X0, 0
	185 JumpIfNotEqual {53}
	186 Call 0x1C17F20
	187 Move X20, [X31+112]
	188 Move X19, [X31+120]
	189 Move X22, [X31+96]
	190 Move X21, [X31+104]
	191 Move X24, [X31+80]
	192 Move X23, [X31+88]
	193 Move X26, [X31+64]
	194 Move X25, [X31+72]
	195 Move X28, [X31+48]
	196 Move X27, [X31+56]
	197 Move X29, [X31+32]
	198 Move X30, [X31+40]
	199 Add X31, X31, 128
	200 Return 
	201 Call 0x1C17F28

Method: System.UInt64 ResolutionLog2ForHash(System.Int32 resolution)

Disassembly:
	0x03AA2B80 MOV V0.16B, V8.16B
	0x03AA2B84 STR X31, [X31]
	0x03AA2B88 BL 0x3A76A3C
	0x03AA2B8C TBZ X0, 0x0, 0x3AA2F28
	0x03AA2B90 LDR X0, [X20 + 0x120]
	0x03AA2B94 CBZ X0, 0x3AA3564
	0x03AA2B98 ADRP X19, 0x652000
	0x03AA2B9C LDR W10, [X0 + 0x1C]
	0x03AA2BA0 LDR X8, [X0 + 0x10]
	0x03AA2BA4 LDR X19, [X19 + 0xE10]
	0x03AA2BA8 ADD W10, W10, 0x1
	0x03AA2BAC LDR X9, [X19]
	0x03AA2BB0 STR W10, [X0 + 0x1C]
	0x03AA2BB4 CBZ X8, 0x3AA3560
	0x03AA2BB8 LDRSW X10, [X0 + 0x18]
	0x03AA2BBC LDR W11, [X8 + 0x18]
	0x03AA2BC0 CMP W10, W11
	0x03AA2BC4 B.CS 0x3AA2D38
	0x03AA2BC8 ADD W9, W10, 0x1

ISIL:
	001 NotImplemented "Instruction CMP not yet implemented."
	002 Move W8, 1024
	003 Move W9, 4096
	004 Move W10, 10
	005 Move W11, 12
	006 Move W12, 512
	007 NotImplemented "Instruction CSEL not yet implemented."
	008 Move W9, 2048
	009 NotImplemented "Instruction CSEL not yet implemented."
	010 Move W11, 9
	011 NotImplemented "Instruction CSEL not yet implemented."
	012 Move W12, 11
	013 NotImplemented "Instruction CSEL not yet implemented."
	014 Move W12, 8
	015 NotImplemented "Instruction CMP not yet implemented."
	016 NotImplemented "Instruction CSEL not yet implemented."
	017 NotImplemented "Instruction CMP not yet implemented."
	018 NotImplemented "Instruction CSEL not yet implemented."
	019 Return X0

Method: System.UInt64 ComputeShadowRequestHash(ref UnityEngine.Rendering.Universal.RenderingData renderingData)

Disassembly:
	0x03AA2BCC ADD X8, X8, X10, 0x2, LSL
	0x03AA2BD0 STR W9, [X0 + 0x18]
	0x03AA2BD4 STR W28, [X8 + 0x20]
	0x03AA2BD8 B 0x3AA2D4C
	0x03AA2BDC LDR X22, [X20 + 0x108]
	0x03AA2BE0 CBZ X22, 0x3AA34EC
	0x03AA2BE4 LDR W8, [X22 + 0x18]
	0x03AA2BE8 CMP W26, W8
	0x03AA2BEC B.CS 0x3AA34E8
	0x03AA2BF0 ADRP X8, 0x6B4000
	0x03AA2BF4 LDR X8, [X8 + 0xEC0]
	0x03AA2BF8 LDR X0, [X8]
	0x03AA2BFC LDR W8, [X0 + 0xE0]
	0x03AA2C00 CBNZ W8, 0x3AA2C08
	0x03AA2C04 BL 0x1C16DFC
	0x03AA2C08 MOVZ W9, 0x1C8
	0x03AA2C0C MADD X8, X26, X9, X22
	0x03AA2C10 MADD X9, X26, X9, X22
	0x03AA2C14 ADD X4, X8, 0x20
	0x03AA2C18 ADD X5, X8, 0x60
	0x03AA2C1C ADD X6, X9, 0xEC
	0x03AA2C20 LDR X1, [X31 + 0x20]
	0x03AA2C24 ADD X3, X31, 0x2D0
	0x03AA2C28 MOV X0, X29
	0x03AA2C2C MOV W2, W27
	0x03AA2C30 MOV X7, X31
	0x03AA2C34 BL 0x3A76930
	0x03AA2C38 TBZ X0, 0x0, 0x3AA2F28
	0x03AA2C3C LDR X0, [X20 + 0x120]
	0x03AA2C40 CBZ X0, 0x3AA3540
	0x03AA2C44 ADRP X19, 0x652000
	0x03AA2C48 LDR W10, [X0 + 0x1C]
	0x03AA2C4C LDR X8, [X0 + 0x10]
	0x03AA2C50 LDR X19, [X19 + 0xE10]
	0x03AA2C54 ADD W10, W10, 0x1
	0x03AA2C58 LDR X9, [X19]
	0x03AA2C5C STR W10, [X0 + 0x1C]
	0x03AA2C60 CBZ X8, 0x3AA353C
	0x03AA2C64 LDRSW X10, [X0 + 0x18]
	0x03AA2C68 LDR W11, [X8 + 0x18]
	0x03AA2C6C CMP W10, W11
	0x03AA2C70 B.CS 0x3AA2C88
	0x03AA2C74 ADD W9, W10, 0x1
	0x03AA2C78 ADD X8, X8, X10, 0x2, LSL
	0x03AA2C7C STR W9, [X0 + 0x18]
	0x03AA2C80 STR W28, [X8 + 0x20]
	0x03AA2C84 B 0x3AA2C9C
	0x03AA2C88 LDR X8, [X9 + 0x20]
	0x03AA2C8C LDR X8, [X8 + 0xC0]
	0x03AA2C90 LDR X2, [X8 + 0x70]
	0x03AA2C94 MOV W1, W28
	0x03AA2C98 BL 0x2FDC70C
	0x03AA2C9C LDR X0, [X20 + 0x128]
	0x03AA2CA0 CBZ X0, 0x3AA3538
	0x03AA2CA4 LDR W10, [X0 + 0x1C]
	0x03AA2CA8 LDR X8, [X0 + 0x10]
	0x03AA2CAC LDR X9, [X19]
	0x03AA2CB0 ADD W10, W10, 0x1
	0x03AA2CB4 STR W10, [X0 + 0x1C]
	0x03AA2CB8 CBZ X8, 0x3AA3534
	0x03AA2CBC LDRSW X10, [X0 + 0x18]
	0x03AA2CC0 LDR W11, [X8 + 0x18]
	0x03AA2CC4 CMP W10, W11
	0x03AA2CC8 B.CS 0x3AA2CE0
	0x03AA2CCC ADD W9, W10, 0x1
	0x03AA2CD0 ADD X8, X8, X10, 0x2, LSL
	0x03AA2CD4 STR W9, [X0 + 0x18]
	0x03AA2CD8 STR W21, [X8 + 0x20]
	0x03AA2CDC B 0x3AA2CF4
	0x03AA2CE0 LDR X8, [X9 + 0x20]
	0x03AA2CE4 LDR X8, [X8 + 0xC0]
	0x03AA2CE8 LDR X2, [X8 + 0x70]
	0x03AA2CEC MOV W1, W21
	0x03AA2CF0 BL 0x2FDC70C
	0x03AA2CF4 MOV X0, X24
	0x03AA2CF8 MOV X1, X31
	0x03AA2CFC BL 0x3C5BBF0
	0x03AA2D00 MOV X22, X0
	0x03AA2D04 CBZ X0, 0x3AA3530
	0x03AA2D08 MOV X0, X22
	0x03AA2D0C MOV X1, X31
	0x03AA2D10 BL 0x3C16BCC
	0x03AA2D14 LDR W8, [X31 + 0x1C]
	0x03AA2D18 MOV V8.16B, V0.16B
	0x03AA2D1C CBZ W8, 0x3AA2DE8
	0x03AA2D20 MOV X0, X22
	0x03AA2D24 MOV X1, X31
	0x03AA2D28 BL 0x3C16B90
	0x03AA2D2C CMP W0, 0x2
	0x03AA2D30 CSET W23, EQ
	0x03AA2D34 B 0x3AA2DEC
	0x03AA2D38 LDR X8, [X9 + 0x20]
	0x03AA2D3C LDR X8, [X8 + 0xC0]
	0x03AA2D40 LDR X2, [X8 + 0x70]
	0x03AA2D44 MOV W1, W28
	0x03AA2D48 BL 0x2FDC70C
	0x03AA2D4C LDR X0, [X20 + 0x128]
	0x03AA2D50 CBZ X0, 0x3AA355C
	0x03AA2D54 LDR W10, [X0 + 0x1C]
	0x03AA2D58 LDR X8, [X0 + 0x10]
	0x03AA2D5C LDR X9, [X19]
	0x03AA2D60 ADD W10, W10, 0x1
	0x03AA2D64 STR W10, [X0 + 0x1C]
	0x03AA2D68 CBZ X8, 0x3AA3558
	0x03AA2D6C LDRSW X10, [X0 + 0x18]
	0x03AA2D70 LDR W11, [X8 + 0x18]
	0x03AA2D74 CMP W10, W11
	0x03AA2D78 B.CS 0x3AA2D90
	0x03AA2D7C ADD W9, W10, 0x1
	0x03AA2D80 ADD X8, X8, X10, 0x2, LSL
	0x03AA2D84 STR W9, [X0 + 0x18]
	0x03AA2D88 STR W21, [X8 + 0x20]
	0x03AA2D8C B 0x3AA2DA4
	0x03AA2D90 LDR X8, [X9 + 0x20]
	0x03AA2D94 LDR X8, [X8 + 0xC0]
	0x03AA2D98 LDR X2, [X8 + 0x70]
	0x03AA2D9C MOV W1, W21
	0x03AA2DA0 BL 0x2FDC70C
	0x03AA2DA4 MOV X0, X24
	0x03AA2DA8 MOV X1, X31
	0x03AA2DAC BL 0x3C5BBF0
	0x03AA2DB0 MOV X22, X0
	0x03AA2DB4 CBZ X0, 0x3AA3554
	0x03AA2DB8 MOV X0, X22
	0x03AA2DBC MOV X1, X31
	0x03AA2DC0 BL 0x3C16BCC
	0x03AA2DC4 LDR W8, [X31 + 0x1C]
	0x03AA2DC8 MOV V8.16B, V0.16B
	0x03AA2DCC CBZ W8, 0x3AA2E84
	0x03AA2DD0 MOV X0, X22
	0x03AA2DD4 MOV X1, X31
	0x03AA2DD8 BL 0x3C16B90
	0x03AA2DDC CMP W0, 0x2
	0x03AA2DE0 CSET W23, EQ
	0x03AA2DE4 B 0x3AA2E88
	0x03AA2DE8 MOV W23, W31
	0x03AA2DEC ADRP X8, 0x6B4000
	0x03AA2DF0 LDR X8, [X8 + 0xEC0]
	0x03AA2DF4 LDR X0, [X8]
	0x03AA2DF8 LDR W8, [X0 + 0xE0]
	0x03AA2DFC CBNZ W8, 0x3AA2E04
	0x03AA2E00 BL 0x1C16DFC
	0x03AA2E04 MOV X0, X22
	0x03AA2E08 MOV W1, W23
	0x03AA2E0C MOV X2, X31
	0x03AA2E10 BL 0x3A77C88
	0x03AA2E14 LDR X8, [X20 + 0x138]
	0x03AA2E18 LDP V1, V2, [X31 + 0x2D0]
	0x03AA2E1C LDP V3, V4, [X31 + 0x2F0]
	0x03AA2E20 STP V1, V2, [X31 + 0x230]
	0x03AA2E24 STP V3, V4, [X31 + 0x250]
	0x03AA2E28 CBZ X8, 0x3AA352C
	0x03AA2E2C LDP V1, V2, [X31 + 0x230]
	0x03AA2E30 LDP V3, V4, [X31 + 0x250]
	0x03AA2E34 STP V1, V2, [X31 + 0x1F0]
	0x03AA2E38 STP V3, V4, [X31 + 0x210]
	0x03AA2E3C LDR W9, [X8 + 0x18]
	0x03AA2E40 CMP W26, W9
	0x03AA2E44 B.CS 0x3AA3520
	0x03AA2E48 LDP V1, V2, [X31 + 0x210]
	0x03AA2E4C LDP V3, V4, [X31 + 0x1F0]
	0x03AA2E50 ADD X8, X8, X26, 0x6, LSL
	0x03AA2E54 STP V1, V2, [X8 + 0x40]
	0x03AA2E58 STP V3, V4, [X8 + 0x20]
	0x03AA2E5C LDR X8, [X20 + 0x130]
	0x03AA2E60 CBZ X8, 0x3AA3528
	0x03AA2E64 LDR W9, [X8 + 0x18]
	0x03AA2E68 CMP W28, W9

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+32], X29
	003 Move [X31+40], X30
	004 Move [X31+48], X28
	005 Move [X31+56], X27
	006 Move [X31+64], X26
	007 Move [X31+72], X25
	008 Move [X31+80], X24
	009 Move [X31+88], X23
	010 Move [X31+96], X22
	011 Move [X31+104], X21
	012 Move [X31+112], X20
	013 Move [X31+120], X19
	014 Move X20, 0x941000
	015 Move W8, [X20+1022]
	016 Move X19, X1
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {29}
	021 Move X0, 0x67C000
	022 Move X0, [X0+3896]
	023 Call 0x1C17CF4
	024 Move X0, 0x6B5000
	025 Move X0, [X0+3840]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X20+1022], W8
	029 Move X8, [X19+576]
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move [X31+24], X8
	032 Move X8, [X19+568]
	033 Move [X31+8], X31
	034 Move [X31+16], X31
	035 Move X20, 0x67C000
	036 Move X27, X31
	037 Move [X31], X8
	038 Move X20, [X20+3896]
	039 Move X28, X31
	040 Move X29, X31
	041 Move X22, X31
	042 Move X23, X31
	043 Move X24, X31
	044 Move W21, W31
	045 Add X26, X19, 552
	046 Move X1, X26
	047 Move W2, W21
	048 Call AdditionalLightsShadowCasterPass.IsValidShadowCastingLight, X0, X1, X2
	049 Move TEMP, X0
	050 And TEMP, TEMP, 1
	051 Compare TEMP, 1
	052 JumpIfNotEqual {136}
	053 Move X8, 0x6B5000
	054 Move X8, [X8+3840]
	055 Move X0, [X31]
	056 Move X1, [X31+24]
	057 Move W2, W21
	058 Move X3, [X8]
	059 Move X25, X23
	060 Move X23, X24
	061 Call 0x2223228, X0, X1
	062 Move X1, X31
	063 Move X24, X0
	064 Call VisibleLight.get_lightType, X0
	065 Move X8, [X31+16]
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Move X0, X24
	068 Move X1, X31
	069 NotImplemented "Instruction CINC not yet implemented."
	070 Move [X31+16], X8
	071 Call VisibleLight.get_light, X0
	072 Compare X0, 0
	073 JumpIfEqual {194}
	074 Move X1, X31
	075 Call Light.get_shadows, X0
	076 Move X9, [X31+8]
	077 Move X8, [X19+656]
	078 NotImplemented "Instruction CMP not yet implemented."
	079 NotImplemented "Instruction CINC not yet implemented."
	080 Move [X31+8], X9
	081 Compare X8, 0
	082 JumpIfEqual {194}
	083 Move X2, [X20]
	084 Move X0, X8
	085 Move W1, W21
	086 Call List`1<Int32>.get_Item, X0, X1
	087 Move X8, [X19+656]
	088 NotImplemented "Instruction CMP not yet implemented."
	089 NotImplemented "Instruction CINC not yet implemented."
	090 Compare X8, 0
	091 JumpIfEqual {194}
	092 Move X2, [X20]
	093 Move X0, X8
	094 Move W1, W21
	095 Move X24, X23
	096 Call List`1<Int32>.get_Item, X0, X1
	097 Move X8, [X19+656]
	098 NotImplemented "Instruction CMP not yet implemented."
	099 NotImplemented "Instruction CINC not yet implemented."
	100 Compare X8, 0
	101 JumpIfEqual {194}
	102 Move X2, [X20]
	103 Move X0, X8
	104 Move W1, W21
	105 Move X23, X25
	106 Call List`1<Int32>.get_Item, X0, X1
	107 Move X8, [X19+656]
	108 NotImplemented "Instruction CMP not yet implemented."
	109 NotImplemented "Instruction CINC not yet implemented."
	110 Compare X8, 0
	111 JumpIfEqual {194}
	112 Move X2, [X20]
	113 Move X0, X8
	114 Move W1, W21
	115 Call List`1<Int32>.get_Item, X0, X1
	116 Move X8, [X19+656]
	117 NotImplemented "Instruction CMP not yet implemented."
	118 NotImplemented "Instruction CINC not yet implemented."
	119 Compare X8, 0
	120 JumpIfEqual {194}
	121 Move X2, [X20]
	122 Move X0, X8
	123 Move W1, W21
	124 Call List`1<Int32>.get_Item, X0, X1
	125 Move X8, [X19+656]
	126 Compare X8, 0
	127 JumpIfEqual {194}
	128 Move X2, [X20]
	129 NotImplemented "Instruction CMP not yet implemented."
	130 Move X0, X8
	131 Move W1, W21
	132 NotImplemented "Instruction CINC not yet implemented."
	133 Call List`1<Int32>.get_Item, X0, X1
	134 NotImplemented "Instruction CMP not yet implemented."
	135 NotImplemented "Instruction CINC not yet implemented."
	136 Move X8, [X31+24]
	137 Add W21, W21, 1
	138 NotImplemented "Instruction CMP not yet implemented."
	139 Move X24, X31
	140 Move X23, X31
	141 Move X22, X31
	142 Move X29, X31
	143 Move X28, X31
	144 Move X27, X31
	145 Move [X31+8], X31
	146 Move [X31+16], X31
	147 Move W8, [X19+628]
	148 Move W9, 1024
	149 Move W10, 4096
	150 Move W11, 10
	151 NotImplemented "Instruction CMP not yet implemented."
	152 Move W12, 12
	153 Move W13, 512
	154 Move X14, X23
	155 ShiftRight X14, 14
	156 And X14, X14, 0x1FFF
	157 Move W15, 2048
	158 Move W16, 9
	159 Move W17, 11
	160 NotImplemented "Instruction CSEL not yet implemented."
	161 Or X14, X14, X24
	162 Move W0, 8
	163 NotImplemented "Instruction CSEL not yet implemented."
	164 NotImplemented "Instruction CSEL not yet implemented."
	165 NotImplemented "Instruction CSEL not yet implemented."
	166 NotImplemented "Instruction CMP not yet implemented."
	167 Or X14, X14, X22
	168 Move X9, [X31+8]
	169 NotImplemented "Instruction CSEL not yet implemented."
	170 NotImplemented "Instruction CMP not yet implemented."
	171 Or X14, X14, X29
	172 NotImplemented "Instruction CSEL not yet implemented."
	173 Move X10, [X31+16]
	174 Or X14, X14, X28
	175 Or X13, X14, X27
	176 Move X20, [X31+112]
	177 Move X19, [X31+120]
	178 Move X22, [X31+96]
	179 Move X21, [X31+104]
	180 Move X24, [X31+80]
	181 Move X23, [X31+88]
	182 Move X26, [X31+64]
	183 Move X25, [X31+72]
	184 Move X28, [X31+48]
	185 Move X27, [X31+56]
	186 Move X29, [X31+32]
	187 Move X30, [X31+40]
	188 Or X9, X13, X9
	189 Subtract X8, X8, 8
	190 Or X9, X9, X10
	191 Or X0, X9, X8
	192 Add X31, X31, 128
	193 Return X0
	194 Call 0x1C17F20

Method: System.Boolean Setup(ref UnityEngine.Rendering.Universal.RenderingData renderingData)

Disassembly:
	0x03AA2FCC ADD S1.2S, S2.2S, S1.2S
	0x03AA2FD0 SMAX S0.2S, S0.2S, S1.2S
	0x03AA2FD4 B.NE 0x3AA2FB0
	0x03AA2FD8 UNIMPLEMENTED
	0x03AA2FDC FMOV W0, S0
	0x03AA2FE0 B 0x3AA3000
	0x03AA2FE4 LDR X1, [X31 + 0x78]
	0x03AA2FE8 MOV X0, X20
	0x03AA2FEC BL 0x3AA3814
	0x03AA2FF0 MOV W21, W0
	0x03AA2FF4 B 0x3AA33D0
	0x03AA2FF8 MOV W21, W31
	0x03AA2FFC MOV W0, W31
	0x03AA3000 MOV X1, X31
	0x03AA3004 BL 0x3C2B340
	0x03AA3008 STR W0, [X20 + 0x168]
	0x03AA300C MOV W0, W21
	0x03AA3010 MOV X1, X31
	0x03AA3014 BL 0x3C2B340
	0x03AA3018 LDR W24, [X20 + 0x168]
	0x03AA301C MOV W22, W0
	0x03AA3020 CMP W23, 0x1
	0x03AA3024 STR W0, [X20 + 0x16C]
	0x03AA3028 B.LT 0x3AA3368
	0x03AA302C ADRP X28, 0x67A000
	0x03AA3030 ADRP X19, 0x657000
	0x03AA3034 ADRP X10, 0xFFFFFFFFFD047000
	0x03AA3038 ADD X8, X31, 0x230
	0x03AA303C LDR X28, [X28 + 0xF38]
	0x03AA3040 LDR X19, [X19 + 0x4B8]
	0x03AA3044 LDR V13, [X10 + 0x240]
	0x03AA3048 ADD X9, X31, 0x100
	0x03AA304C ORR X11, X8, 0x7
	0x03AA3050 ADD X8, X8, 0x18
	0x03AA3054 SCVTF S0, W24
	0x03AA3058 FMOV S8, 1
	0x03AA305C SCVTF S1, W22
	0x03AA3060 STP X8, X11, [X31 + 0x68]
	0x03AA3064 ORR X8, X9, 0x7
	0x03AA3068 MOV X21, X31
	0x03AA306C MOVZ W26, 0x20
	0x03AA3070 MOVZ W27, 0xE0
	0x03AA3074 ADRP X22, 0x936000
	0x03AA3078 FMOV S9, W31
	0x03AA307C FMOV S10, 8
	0x03AA3080 FDIV S11, S8, S0
	0x03AA3084 FDIV S12, S8, S1
	0x03AA3088 STR X8, [X31 + 0x60]
	0x03AA308C ADD X8, X9, 0x18
	0x03AA3090 FMOV S14, -1
	0x03AA3094 STR X8, [X31 + 0x50]
	0x03AA3098 STR X23, [X31 + 0x48]
	0x03AA309C LDR X0, [X20 + 0x120]
	0x03AA30A0 CBZ X0, 0x3AA3474
	0x03AA30A4 LDR X2, [X28]
	0x03AA30A8 MOV W1, W21
	0x03AA30AC BL 0x2FDC41C
	0x03AA30B0 LDR X8, [X20 + 0x130]
	0x03AA30B4 CBZ X8, 0x3AA3478
	0x03AA30B8 LDR W9, [X8 + 0x18]
	0x03AA30BC MOV W25, W0
	0x03AA30C0 CMP W0, W9
	0x03AA30C4 B.CS 0x3AA3470
	0x03AA30C8 SXTW X24, W25
	0x03AA30CC ADD X8, X8, X24, 0x4, LSL
	0x03AA30D0 LDRB W9, [X22 + 0x5AA]
	0x03AA30D4 LDR V15, [X8 + 0x20]
	0x03AA30D8 CBNZ W9, 0x3AA30EC
	0x03AA30DC MOV X0, X19
	0x03AA30E0 BL 0x1C16CF4
	0x03AA30E4 MOVZ W8, 0x1
	0x03AA30E8 STRB W8, [X22 + 0x5AA]
	0x03AA30EC LDR X8, [X19]
	0x03AA30F0 FABS S1, S15
	0x03AA30F4 FMAXNM S1, S1, S9
	0x03AA30F8 FMUL S1, S1, S13
	0x03AA30FC LDR X8, [X8 + 0xB8]
	0x03AA3100 FABD S2, S9, S9
	0x03AA3104 LDR V0, [X8]
	0x03AA3108 FMUL S0, S0, S10
	0x03AA310C FCMP S1, S0
	0x03AA3110 FCSEL S1, S1, S0, GT
	0x03AA3114 FCMP S2, S1
	0x03AA3118 B.MI 0x3AA334C
	0x03AA311C LDR X8, [X20 + 0x130]
	0x03AA3120 CBZ X8, 0x3AA34B0
	0x03AA3124 LDR W9, [X8 + 0x18]
	0x03AA3128 CMP W25, W9
	0x03AA312C B.CS 0x3AA34AC
	0x03AA3130 ADD X8, X8, X24, 0x4, LSL
	0x03AA3134 LDR V1, [X8 + 0x2C]
	0x03AA3138 FABS S2, S1
	0x03AA313C FMAXNM S2, S2, S8
	0x03AA3140 FMUL S2, S2, S13
	0x03AA3144 FCMP S2, S0
	0x03AA3148 FCSEL S0, S2, S0, GT
	0x03AA314C FABD S1, S14, S14
	0x03AA3150 FCMP S1, S0
	0x03AA3154 B.MI 0x3AA334C
	0x03AA3158 LDR X9, [X20 + 0x118]
	0x03AA315C CBZ X9, 0x3AA34C4
	0x03AA3160 LDR W8, [X9 + 0x18]
	0x03AA3164 CMP W25, W8
	0x03AA3168 B.CS 0x3AA34D0
	0x03AA316C LDR X8, [X20 + 0x158]
	0x03AA3170 CBZ X8, 0x3AA34BC
	0x03AA3174 ADD X9, X9, X24, 0x2, LSL
	0x03AA3178 LDRSW X9, [X9 + 0x20]
	0x03AA317C LDR W10, [X8 + 0x18]
	0x03AA3180 CMP W9, W10
	0x03AA3184 B.CS 0x3AA34D8
	0x03AA3188 LDR X0, [X20 + 0x128]
	0x03AA318C CBZ X0, 0x3AA34B8
	0x03AA3190 ADD X8, X8, X9, 0x2, LSL
	0x03AA3194 MOV X23, X19
	0x03AA3198 LDR W19, [X8 + 0x20]
	0x03AA319C LDR X2, [X28]
	0x03AA31A0 MOV W1, W21
	0x03AA31A4 BL 0x2FDC41C
	0x03AA31A8 LDR X8, [X29]
	0x03AA31AC CBZ X8, 0x3AA34E0
	0x03AA31B0 LDR W10, [X8 + 0x18]
	0x03AA31B4 ADD W9, W0, W19
	0x03AA31B8 CMP W9, W10
	0x03AA31BC B.CS 0x3AA34E4
	0x03AA31C0 MOVZ W10, 0x1C
	0x03AA31C4 SMADDL X8, X9, X10, X8
	0x03AA31C8 ADRP X9, 0x935000
	0x03AA31CC LDRB W9, [X9 + 0xAC0]
	0x03AA31D0 LDP W24, W25, [X8 + 0x30]
	0x03AA31D4 LDR W19, [X8 + 0x38]
	0x03AA31D8 CBNZ W9, 0x3AA31F4
	0x03AA31DC ADRP X0, 0x654000
	0x03AA31E0 LDR X0, [X0 + 0x270]
	0x03AA31E4 BL 0x1C16CF4
	0x03AA31E8 MOVZ W8, 0x1
	0x03AA31EC ADRP X9, 0x935000
	0x03AA31F0 STRB W8, [X9 + 0xAC0]
	0x03AA31F4 ADRP X8, 0x654000
	0x03AA31F8 LDR X8, [X8 + 0x270]
	0x03AA31FC LDR X8, [X8]
	0x03AA3200 LDR X8, [X8 + 0xB8]
	0x03AA3204 LDR X9, [X8 + 0x70]
	0x03AA3208 LDP V2, V0, [X8 + 0x50]
	0x03AA320C LDR V1, [X8 + 0x4]
	0x03AA3210 STR X9, [X31 + 0x260]
	0x03AA3214 LDR X9, [X31 + 0x70]
	0x03AA3218 STP V2, V0, [X31 + 0x240]
	0x03AA321C STR V1, [X31 + 0x23]
	0x03AA3220 LDR X8, [X8 + 0x78]
	0x03AA3224 LDR V0, [X9]
	0x03AA3228 LDR X9, [X31 + 0x68]
	0x03AA322C STR V0, [X31 + 0x35]
	0x03AA3230 LDR V1, [X9]
	0x03AA3234 LDR X9, [X9 + 0x10]
	0x03AA3238 STR V1, [X31 + 0x33]
	0x03AA323C STR X9, [X31 + 0x340]
	0x03AA3240 LDR X9, [X20 + 0x108]
	0x03AA3244 CBZ X9, 0x3AA34DC
	0x03AA3248 LDR W10, [X9 + 0x18]
	0x03AA324C CMP X21, X10
	0x03AA3250 B.CS 0x3AA34C0
	0x03AA3254 ADD X9, X9, X27
	0x03AA3258 STP W24, W25, [X9]
	0x03AA325C STR W19, [X9 + 0x8]
	0x03AA3260 LDR X29, [X20 + 0x138]
	0x03AA3264 LDR V0, [X31 + 0x35]
	0x03AA3268 LDR V1, [X31 + 0x33]
	0x03AA326C LDR X9, [X31 + 0x340]
	0x03AA3270 STR V0, [X31 + 0x1A]
	0x03AA3274 STR V1, [X31 + 0x18]
	0x03AA3278 STR X9, [X31 + 0x190]
	0x03AA327C CBZ X29, 0x3AA34D4
	0x03AA3280 LDR W9, [X29 + 0x18]
	0x03AA3284 CMP X21, X9
	0x03AA3288 B.CS 0x3AA34C8
	0x03AA328C LDR V2, [X31 + 0x1A]
	0x03AA3290 LDR X9, [X31 + 0x60]
	0x03AA3294 SCVTF S0, W19
	0x03AA3298 ADD X19, X29, X26
	0x03AA329C FMUL S3, S11, S0
	0x03AA32A0 LDP V4, V5, [X19]
	0x03AA32A4 LDP V6, V7, [X19 + 0x20]
	0x03AA32A8 STR S3, [X31 + 0x100]
	0x03AA32AC STR V2, [X9]
	0x03AA32B0 LDR V2, [X31 + 0x18]
	0x03AA32B4 LDR X9, [X31 + 0x190]
	0x03AA32B8 LDR X10, [X31 + 0x50]
	0x03AA32BC SCVTF S1, W24
	0x03AA32C0 SCVTF S3, W25
	0x03AA32C4 FMUL S0, S12, S0
	0x03AA32C8 FMUL S1, S11, S1
	0x03AA32CC FMUL S3, S12, S3
	0x03AA32D0 STP V6, V7, [X31 + 0x250]
	0x03AA32D4 STP V4, V5, [X31 + 0x230]
	0x03AA32D8 STR S0, [X31 + 0x114]
	0x03AA32DC STR X9, [X10 + 0x10]
	0x03AA32E0 STR V2, [X10]
	0x03AA32E4 STR S1, [X31 + 0x130]
	0x03AA32E8 STR S3, [X31 + 0x134]
	0x03AA32EC LDP V0, V1, [X31 + 0x230]
	0x03AA32F0 LDP V3, V2, [X31 + 0x250]
	0x03AA32F4 STR X8, [X31 + 0x138]
	0x03AA32F8 STP V0, V1, [X31 + 0xC0]
	0x03AA32FC STP V3, V2, [X31 + 0xE0]
	0x03AA3300 ADD X8, X31, 0x140
	0x03AA3304 ADD X0, X31, 0x100
	0x03AA3308 ADD X1, X31, 0xC0
	0x03AA330C MOV X2, X31
	0x03AA3310 BL 0x3C27F74
	0x03AA3314 LDP V0, V1, [X31 + 0x140]
	0x03AA3318 LDP V2, V3, [X31 + 0x160]
	0x03AA331C STP V0, V1, [X31 + 0x80]
	0x03AA3320 STP V2, V3, [X31 + 0xA0]
	0x03AA3324 LDR W8, [X29 + 0x18]
	0x03AA3328 CMP X21, X8
	0x03AA332C B.CS 0x3AA34CC
	0x03AA3330 LDP V1, V0, [X31 + 0xA0]
	0x03AA3334 LDP V3, V2, [X31 + 0x80]
	0x03AA3338 LDR X29, [X31 + 0x28]
	0x03AA333C STP V1, V0, [X19 + 0x20]
	0x03AA3340 STP V3, V2, [X19]
	0x03AA3344 MOV X19, X23
	0x03AA3348 LDR X23, [X31 + 0x48]
	0x03AA334C ADD X21, X21, 0x1
	0x03AA3350 ADD X26, X26, 0x40
	0x03AA3354 CMP X23, X21
	0x03AA3358 ADD X27, X27, 0x1C8
	0x03AA335C B.NE 0x3AA309C
	0x03AA3360 LDR W24, [X20 + 0x168]
	0x03AA3364 LDR W22, [X20 + 0x16C]
	0x03AA3368 ADRP X8, 0x6B3000
	0x03AA336C LDR X8, [X8 + 0xEC0]
	0x03AA3370 LDR X0, [X8]
	0x03AA3374 LDR W8, [X0 + 0xE0]
	0x03AA3378 CBNZ W8, 0x3AA3380
	0x03AA337C BL 0x1C16DFC
	0x03AA3380 ADRP X8, 0x6B4000
	0x03AA3384 LDR X8, [X8 + 0xA08]
	0x03AA3388 ADD X0, X20, 0xE8
	0x03AA338C LDR X5, [X8]
	0x03AA3390 FMOV S0, W31
	0x03AA3394 MOVZ W3, 0x10
	0x03AA3398 MOVZ W4, 0x1
	0x03AA339C MOV W1, W24
	0x03AA33A0 MOV W2, W22
	0x03AA33A4 MOV X6, X31
	0x03AA33A8 MOVZ W21, 0x1
	0x03AA33AC BL 0x3A77B98
	0x03AA33B0 LDR X8, [X31 + 0x78]
	0x03AA33B4 LDR V0, [X8 + 0x19C]
	0x03AA33B8 FMUL S0, S0, S0
	0x03AA33BC STR S0, [X20 + 0x100]
	0x03AA33C0 LDR V0, [X8 + 0x26C]
	0x03AA33C4 STRB W31, [X20 + 0xF0]
	0x03AA33C8 STRB W21, [X20 + 0x42]
	0x03AA33CC STR S0, [X20 + 0x104]
	0x03AA33D0 ADD X0, X31, 0x368
	0x03AA33D4 MOV X1, X31
	0x03AA33D8 BL 0x39B1DB4
	0x03AA33DC AND W0, W21, 0x1
	0x03AA33E0 ADD X31, X31, 0x370
	0x03AA33E4 LDP X20, X19, [X31 + 0x90]
	0x03AA33E8 LDP X22, X21, [X31 + 0x80]
	0x03AA33EC LDP X24, X23, [X31 + 0x70]
	0x03AA33F0 LDP X26, X25, [X31 + 0x60]
	0x03AA33F4 LDP X28, X27, [X31 + 0x50]
	0x03AA33F8 LDP X29, X30, [X31 + 0x40]
	0x03AA33FC LDP D9, D8, [X31 + 0x30]
	0x03AA3400 LDP D11, D10, [X31 + 0x20]
	0x03AA3404 LDP D13, D12, [X31 + 0x10]
	0x03AA3408 LDP D15, D14, [X31], #0xA0
	0x03AA340C RET
	0x03AA3410 LDR W22, [X31 + 0x38]
	0x03AA3414 B 0x3AA2F78
	0x03AA3418 BL 0x1C16F20
	0x03AA341C BL 0x1C16F20
	0x03AA3420 BL 0x1C16F20
	0x03AA3424 BL 0x1C16F20
	0x03AA3428 BL 0x1C16F20
	0x03AA342C BL 0x1C16F20
	0x03AA3430 BL 0x1C16F28
	0x03AA3434 BL 0x1C16F20
	0x03AA3438 BL 0x1C16F28
	0x03AA343C BL 0x1C16F28
	0x03AA3440 BL 0x1C16F28
	0x03AA3444 BL 0x1C16F28
	0x03AA3448 BL 0x1C16F20
	0x03AA344C BL 0x1C16F28
	0x03AA3450 BL 0x1C16F28
	0x03AA3454 BL 0x1C16F28
	0x03AA3458 BL 0x1C16F20
	0x03AA345C BL 0x1C16F28
	0x03AA3460 BL 0x1C16F28
	0x03AA3464 BL 0x1C16F20
	0x03AA3468 BL 0x1C16F20
	0x03AA346C BL 0x1C16F28
	0x03AA3470 BL 0x1C16F28
	0x03AA3474 BL 0x1C16F20
	0x03AA3478 BL 0x1C16F20
	0x03AA347C BL 0x1C16F20
	0x03AA3480 BL 0x1C16F28
	0x03AA3484 BL 0x1C16F20
	0x03AA3488 BL 0x1C16F28
	0x03AA348C BL 0x1C16F20
	0x03AA3490 BL 0x1C16F20
	0x03AA3494 BL 0x1C16F20
	0x03AA3498 BL 0x1C16F20
	0x03AA349C BL 0x1C16F28
	0x03AA34A0 BL 0x1C16F28
	0x03AA34A4 BL 0x1C16F20
	0x03AA34A8 BL 0x1C16F20
	0x03AA34AC BL 0x1C16F28
	0x03AA34B0 BL 0x1C16F20
	0x03AA34B4 BL 0x1C16F20
	0x03AA34B8 BL 0x1C16F20
	0x03AA34BC BL 0x1C16F20
	0x03AA34C0 BL 0x1C16F28
	0x03AA34C4 BL 0x1C16F20
	0x03AA34C8 BL 0x1C16F28
	0x03AA34CC BL 0x1C16F28
	0x03AA34D0 BL 0x1C16F28
	0x03AA34D4 BL 0x1C16F20
	0x03AA34D8 BL 0x1C16F28
	0x03AA34DC BL 0x1C16F20
	0x03AA34E0 BL 0x1C16F20
	0x03AA34E4 BL 0x1C16F28
	0x03AA34E8 BL 0x1C16F28
	0x03AA34EC BL 0x1C16F20
	0x03AA34F0 BL 0x1C16F28
	0x03AA34F4 BL 0x1C16F28
	0x03AA34F8 BL 0x1C16F20
	0x03AA34FC BL 0x1C16F20
	0x03AA3500 BL 0x1C16F20
	0x03AA3504 BL 0x1C16F20
	0x03AA3508 BL 0x1C16F20
	0x03AA350C BL 0x1C16F20
	0x03AA3510 BL 0x1C16F20
	0x03AA3514 BL 0x1C16F20
	0x03AA3518 BL 0x1C16F20
	0x03AA351C BL 0x1C16F20
	0x03AA3520 BL 0x1C16F28
	0x03AA3524 BL 0x1C16F28
	0x03AA3528 BL 0x1C16F20
	0x03AA352C BL 0x1C16F20
	0x03AA3530 BL 0x1C16F20
	0x03AA3534 BL 0x1C16F20
	0x03AA3538 BL 0x1C16F20
	0x03AA353C BL 0x1C16F20
	0x03AA3540 BL 0x1C16F20
	0x03AA3544 BL 0x1C16F28
	0x03AA3548 BL 0x1C16F28
	0x03AA354C BL 0x1C16F20
	0x03AA3550 BL 0x1C16F20
	0x03AA3554 BL 0x1C16F20
	0x03AA3558 BL 0x1C16F20
	0x03AA355C BL 0x1C16F20
	0x03AA3560 BL 0x1C16F20
	0x03AA3564 BL 0x1C16F20
	0x03AA3568 BL 0x1C16F20
	0x03AA356C BL 0x1C16F20
	0x03AA3570 BL 0x1C16F20
	0x03AA3574 B 0x3AA37A8
	0x03AA3578 B 0x3AA37A8
	0x03AA357C B 0x3AA372C
	0x03AA3580 B 0x3AA372C
	0x03AA3584 B 0x3AA372C
	0x03AA3588 B 0x3AA372C
	0x03AA358C B 0x3AA37A8
	0x03AA3590 B 0x3AA37A8
	0x03AA3594 B 0x3AA37A8
	0x03AA3598 B 0x3AA372C
	0x03AA359C B 0x3AA372C
	0x03AA35A0 B 0x3AA372C
	0x03AA35A4 B 0x3AA372C
	0x03AA35A8 B 0x3AA37A8
	0x03AA35AC B 0x3AA37A8
	0x03AA35B0 B 0x3AA372C
	0x03AA35B4 B 0x3AA37A8
	0x03AA35B8 B 0x3AA37A8
	0x03AA35BC B 0x3AA37A8
	0x03AA35C0 B 0x3AA37A8
	0x03AA35C4 B 0x3AA37A8
	0x03AA35C8 B 0x3AA37A8
	0x03AA35CC B 0x3AA37A8
	0x03AA35D0 B 0x3AA37A8
	0x03AA35D4 B 0x3AA372C
	0x03AA35D8 B 0x3AA37A8
	0x03AA35DC B 0x3AA37A8
	0x03AA35E0 B 0x3AA37A8
	0x03AA35E4 B 0x3AA372C
	0x03AA35E8 B 0x3AA37A8
	0x03AA35EC B 0x3AA37A8
	0x03AA35F0 B 0x3AA37A8
	0x03AA35F4 B 0x3AA372C
	0x03AA35F8 B 0x3AA372C
	0x03AA35FC B 0x3AA372C
	0x03AA3600 B 0x3AA372C
	0x03AA3604 B 0x3AA372C
	0x03AA3608 B 0x3AA37A8
	0x03AA360C B 0x3AA37A8
	0x03AA3610 B 0x3AA37A8
	0x03AA3614 B 0x3AA37A8
	0x03AA3618 B 0x3AA37A8
	0x03AA361C B 0x3AA37A8
	0x03AA3620 B 0x3AA37A8
	0x03AA3624 B 0x3AA37A8
	0x03AA3628 B 0x3AA37A8
	0x03AA362C B 0x3AA37A8
	0x03AA3630 B 0x3AA37A8
	0x03AA3634 B 0x3AA37A8
	0x03AA3638 B 0x3AA37A8
	0x03AA363C B 0x3AA37A8
	0x03AA3640 B 0x3AA37A8
	0x03AA3644 B 0x3AA37A8
	0x03AA3648 B 0x3AA37A8
	0x03AA364C B 0x3AA37A8
	0x03AA3650 B 0x3AA37A8
	0x03AA3654 B 0x3AA37A8
	0x03AA3658 B 0x3AA37A8
	0x03AA365C B 0x3AA37A8
	0x03AA3660 B 0x3AA372C
	0x03AA3664 B 0x3AA372C
	0x03AA3668 B 0x3AA37A8
	0x03AA366C B 0x3AA37A8
	0x03AA3670 B 0x3AA37A8
	0x03AA3674 B 0x3AA37A8
	0x03AA3678 B 0x3AA37A8
	0x03AA367C B 0x3AA37A8
	0x03AA3680 B 0x3AA37A8
	0x03AA3684 B 0x3AA37A8
	0x03AA3688 B 0x3AA37A8
	0x03AA368C B 0x3AA37A8
	0x03AA3690 B 0x3AA372C
	0x03AA3694 B 0x3AA372C
	0x03AA3698 B 0x3AA372C
	0x03AA369C B 0x3AA372C
	0x03AA36A0 B 0x3AA372C
	0x03AA36A4 B 0x3AA372C
	0x03AA36A8 B 0x3AA372C
	0x03AA36AC B 0x3AA372C
	0x03AA36B0 B 0x3AA372C
	0x03AA36B4 B 0x3AA372C
	0x03AA36B8 B 0x3AA372C
	0x03AA36BC B 0x3AA372C
	0x03AA36C0 B 0x3AA372C
	0x03AA36C4 B 0x3AA372C
	0x03AA36C8 B 0x3AA37A8
	0x03AA36CC B 0x3AA37A8
	0x03AA36D0 B 0x3AA372C
	0x03AA36D4 B 0x3AA372C
	0x03AA36D8 B 0x3AA372C
	0x03AA36DC B 0x3AA37A8
	0x03AA36E0 B 0x3AA37A8
	0x03AA36E4 B 0x3AA37A8
	0x03AA36E8 B 0x3AA37A8
	0x03AA36EC B 0x3AA37A8
	0x03AA36F0 B 0x3AA37A8
	0x03AA36F4 B 0x3AA37A8
	0x03AA36F8 B 0x3AA37A8
	0x03AA36FC B 0x3AA37A8
	0x03AA3700 B 0x3AA37A8
	0x03AA3704 B 0x3AA37A8
	0x03AA3708 B 0x3AA37A8
	0x03AA370C B 0x3AA37A8
	0x03AA3710 B 0x3AA37A8
	0x03AA3714 B 0x3AA37A8
	0x03AA3718 B 0x3AA37A8
	0x03AA371C B 0x3AA372C
	0x03AA3720 B 0x3AA372C
	0x03AA3724 B 0x3AA372C
	0x03AA3728 B 0x3AA372C
	0x03AA372C MOV X19, X0
	0x03AA3730 B 0x3AA37AC
	0x03AA3734 B 0x3AA37A8
	0x03AA3738 B 0x3AA37A8
	0x03AA373C B 0x3AA37A8
	0x03AA3740 B 0x3AA37A8
	0x03AA3744 B 0x3AA37A8
	0x03AA3748 B 0x3AA37A8
	0x03AA374C B 0x3AA37A8
	0x03AA3750 B 0x3AA37A8
	0x03AA3754 B 0x3AA37A8
	0x03AA3758 B 0x3AA37A8
	0x03AA375C B 0x3AA37A8
	0x03AA3760 B 0x3AA37A8
	0x03AA3764 B 0x3AA37A8
	0x03AA3768 B 0x3AA37A8
	0x03AA376C B 0x3AA37A8
	0x03AA3770 B 0x3AA37A8
	0x03AA3774 B 0x3AA37A8
	0x03AA3778 B 0x3AA37A8
	0x03AA377C B 0x3AA37A8
	0x03AA3780 B 0x3AA37A8
	0x03AA3784 B 0x3AA37A8
	0x03AA3788 B 0x3AA37A8
	0x03AA378C B 0x3AA37A8
	0x03AA3790 B 0x3AA37A8
	0x03AA3794 B 0x3AA37A8
	0x03AA3798 B 0x3AA37A8
	0x03AA379C B 0x3AA37A8
	0x03AA37A0 B 0x3AA37A8
	0x03AA37A4 B 0x3AA37A8
	0x03AA37A8 MOV X19, X0
	0x03AA37AC CMP W1, 0x1
	0x03AA37B0 B.NE 0x3AA37DC
	0x03AA37B4 MOV X0, X19
	0x03AA37B8 BL 0x3EB1AD0
	0x03AA37BC LDR X20, [X0]
	0x03AA37C0 BL 0x3EB1AE0
	0x03AA37C4 ADD X0, X31, 0x368
	0x03AA37C8 MOV X1, X31
	0x03AA37CC BL 0x39B1DB4
	0x03AA37D0 CBNZ X20, 0x3AA37E4
	0x03AA37D4 MOV W21, W31
	0x03AA37D8 B 0x3AA33DC
	0x03AA37DC MOV X20, X31
	0x03AA37E0 B 0x3AA37F0
	0x03AA37E4 MOV X0, X20
	0x03AA37E8 BL 0x1C16F18
	0x03AA37EC MOV X19, X0
	0x03AA37F0 ADD X0, X31, 0x368
	0x03AA37F4 MOV X1, X31
	0x03AA37F8 BL 0x39B1DB4
	0x03AA37FC CBNZ X20, 0x3AA3808
	0x03AA3800 MOV X0, X19
	0x03AA3804 BL 0x1D2C690
	0x03AA3808 MOV X0, X20
	0x03AA380C BL 0x1C16F18
	0x03AA3810 BL 0x1990590
	0x03AA3814 STP X30, X23, [X31 - 0x30]!
	0x03AA3818 STP X22, X21, [X31 + 0x10]
	0x03AA381C STP X20, X19, [X31 + 0x20]
	0x03AA3820 ADRP X21, 0x93F000
	0x03AA3824 LDRB W8, [X21 + 0x400]
	0x03AA3828 MOV X20, X1
	0x03AA382C MOV X19, X0
	0x03AA3830 TBNZ X8, 0x0, 0x3AA3860
	0x03AA3834 ADRP X0, 0x6B3000
	0x03AA3838 LDR X0, [X0 + 0x8C8]
	0x03AA383C BL 0x1C16CF4
	0x03AA3840 ADRP X0, 0x6B3000
	0x03AA3844 LDR X0, [X0 + 0xEC0]
	0x03AA3848 BL 0x1C16CF4
	0x03AA384C ADRP X0, 0x6B4000
	0x03AA3850 LDR X0, [X0 + 0xA80]
	0x03AA3854 BL 0x1C16CF4
	0x03AA3858 MOVZ W8, 0x1
	0x03AA385C STRB W8, [X21 + 0x400]
	0x03AA3860 LDR X8, [X20 + 0x1D0]
	0x03AA3864 CBZ X8, 0x3AA3924
	0x03AA3868 LDRB W21, [X8 + 0x1A6]
	0x03AA386C CBZ W21, 0x3AA3928
	0x03AA3870 ADRP X8, 0x6B3000
	0x03AA3874 LDR X8, [X8 + 0xEC0]
	0x03AA3878 MOVZ W23, 0x1
	0x03AA387C STRB W23, [X20 + 0x298]
	0x03AA3880 ADRP X22, 0x6B4000
	0x03AA3884 LDR X0, [X8]
	0x03AA3888 ADD X20, X19, 0xF8
	0x03AA388C LDR W8, [X0 + 0xE0]
	0x03AA3890 LDR X22, [X22 + 0xA80]
	0x03AA3894 CBNZ W8, 0x3AA389C
	0x03AA3898 BL 0x1C16DFC
	0x03AA389C LDR X5, [X22]
	0x03AA38A0 FMOV S0, W31
	0x03AA38A4 MOVZ W1, 0x1
	0x03AA38A8 MOVZ W2, 0x1
	0x03AA38AC MOVZ W3, 0x10
	0x03AA38B0 MOVZ W4, 0x1
	0x03AA38B4 MOV X0, X20
	0x03AA38B8 MOV X6, X31
	0x03AA38BC BL 0x3A77B98
	0x03AA38C0 LDR X22, [X19 + 0x130]
	0x03AA38C4 STRB W23, [X19 + 0xF0]
	0x03AA38C8 STRB W31, [X19 + 0x42]
	0x03AA38CC CBZ X22, 0x3AA3924
	0x03AA38D0 ADRP X23, 0x6B3000
	0x03AA38D4 LDR X23, [X23 + 0x8C8]
	0x03AA38D8 MOV X20, X31
	0x03AA38DC LDR W8, [X22 + 0x18]
	0x03AA38E0 CMP X20, W8, SXTW
	0x03AA38E4 B.GE 0x3AA3928
	0x03AA38E8 LDR X0, [X23]
	0x03AA38EC LDR W9, [X0 + 0xE0]
	0x03AA38F0 CBNZ W9, 0x3AA3900
	0x03AA38F4 BL 0x1C16DFC
	0x03AA38F8 LDR X0, [X23]
	0x03AA38FC LDR W8, [X22 + 0x18]
	0x03AA3900 CMP X20, X8
	0x03AA3904 B.CS 0x3AA3940
	0x03AA3908 LDR X8, [X0 + 0xB8]
	0x03AA390C LDUR V0, [X8 + 0x8]
	0x03AA3910 ADD X8, X22, X20, 0x4, LSL
	0x03AA3914 ADD X20, X20, 0x1
	0x03AA3918 STR V0, [X8 + 0x2]
	0x03AA391C LDR X22, [X19 + 0x130]
	0x03AA3920 CBNZ X22, 0x3AA38DC
	0x03AA3924 BL 0x1C16F20
	0x03AA3928 CMP W21, 0x0
	0x03AA392C LDP X20, X19, [X31 + 0x20]
	0x03AA3930 LDP X22, X21, [X31 + 0x10]
	0x03AA3934 CSET W0, NE
	0x03AA3938 LDP X30, X23, [X31], #0x30
	0x03AA393C RET
	0x03AA3940 BL 0x1C16F28
	0x03AA3944 STR X30, [X31 - 0x20]!
	0x03AA3948 STP X20, X19, [X31 + 0x10]
	0x03AA394C ADRP X20, 0x93F000
	0x03AA3950 LDRB W8, [X20 + 0x401]
	0x03AA3954 MOV X19, X0
	0x03AA3958 TBNZ X8, 0x0, 0x3AA3970
	0x03AA395C ADRP X0, 0x657000
	0x03AA3960 LDR X0, [X0 + 0x858]
	0x03AA3964 BL 0x1C16CF4
	0x03AA3968 MOVZ W8, 0x1
	0x03AA396C STRB W8, [X20 + 0x401]
	0x03AA3970 LDR X8, [X19 + 0x120]
	0x03AA3974 CBZ X8, 0x3AA39A4
	0x03AA3978 LDR W9, [X8 + 0x1C]
	0x03AA397C ADD W9, W9, 0x1
	0x03AA3980 STP W31, W9, [X8 + 0x18]
	0x03AA3984 LDR X8, [X19 + 0x128]
	0x03AA3988 CBZ X8, 0x3AA39A4
	0x03AA398C LDR W9, [X8 + 0x1C]
	0x03AA3990 LDP X20, X19, [X31 + 0x10]
	0x03AA3994 ADD W9, W9, 0x1
	0x03AA3998 STP W31, W9, [X8 + 0x18]
	0x03AA399C LDR X30, [X31], #0x20
	0x03AA39A0 RET
	0x03AA39A4 BL 0x1C16F20
	0x03AA39A8 AND W8, W4, 0x1
	0x03AA39AC AND W9, W5, 0x1
	0x03AA39B0 STP W1, W2, [X0]
	0x03AA39B4 STR W3, [X0 + 0x8]
	0x03AA39B8 STR X31, [X0 + 0x10]
	0x03AA39BC STRB W8, [X0 + 0xC]
	0x03AA39C0 STRB W9, [X0 + 0xD]
	0x03AA39C4 STR W31, [X0 + 0x18]
	0x03AA39C8 RET
	0x03AA39CC STP X30, X19, [X31 - 0x10]!
	0x03AA39D0 LDRB W8, [X0 + 0xF0]
	0x03AA39D4 MOVZ W9, 0xF8
	0x03AA39D8 MOV X2, X31
	0x03AA39DC MOV X19, X0
	0x03AA39E0 CMP W8, 0x0
	0x03AA39E4 MOVZ W8, 0xE8
	0x03AA39E8 CSEL X8, X8, X9, EQ
	0x03AA39EC LDR X1, [X0, X8, LSL]
	0x03AA39F0 BL 0x3A440A4
	0x03AA39F4 FMOV S0, W31
	0x03AA39F8 FMOV S1, W31
	0x03AA39FC FMOV S2, W31
	0x03AA3A00 FMOV S3, 1
	0x03AA3A04 MOVZ W1, 0x7
	0x03AA3A08 MOV X0, X19
	0x03AA3A0C MOV X2, X31
	0x03AA3A10 LDP X30, X19, [X31], #0x10
	0x03AA3A14 B 0x3A44510
	0x03AA3A18 SUB X31, X31, 0xD0
	0x03AA3A1C STP X30, X21, [X31 + 0xB0]
	0x03AA3A20 STP X20, X19, [X31 + 0xC0]
	0x03AA3A24 STR X1, [X31 + 0xA8]
	0x03AA3A28 LDRB W8, [X0 + 0xF0]
	0x03AA3A2C MOV X19, X0
	0x03AA3A30 MOV X20, X2
	0x03AA3A34 CBZ W8, 0x3AA3A98
	0x03AA3A38 ADD X1, X31, 0xA8
	0x03AA3A3C MOV X0, X19
	0x03AA3A40 MOV X2, X20
	0x03AA3A44 BL 0x3AA3B08
	0x03AA3A48 LDR X0, [X19 + 0xF8]
	0x03AA3A4C LDR X20, [X20]
	0x03AA3A50 LDR W21, [X19 + 0xE4]
	0x03AA3A54 ADD X8, X31, 0x58
	0x03AA3A58 MOV X1, X31
	0x03AA3A5C BL 0x39CDF64
	0x03AA3A60 LDUR V0, [X31 + 0x58]
	0x03AA3A64 LDUR V1, [X31 + 0x68]
	0x03AA3A68 LDR X8, [X31 + 0x78]
	0x03AA3A6C STP V0, V1, [X31 + 0x80]
	0x03AA3A70 STR X8, [X31 + 0xA0]
	0x03AA3A74 CBZ X20, 0x3AA3B04
	0x03AA3A78 LDP V0, V1, [X31 + 0x80]
	0x03AA3A7C LDR X8, [X31 + 0xA0]
	0x03AA3A80 ADD X2, X31, 0x30
	0x03AA3A84 MOV X0, X20
	0x03AA3A88 STP V0, V1, [X31 + 0x30]
	0x03AA3A8C STR X8, [X31 + 0x50]
	0x03AA3A90 MOV W1, W21
	0x03AA3A94 B 0x3AA3AEC
	0x03AA3A98 LDRB W8, [X20 + 0x270]
	0x03AA3A9C CBZ W8, 0x3AA3AF4
	0x03AA3AA0 ADD X1, X31, 0xA8
	0x03AA3AA4 MOV X0, X19
	0x03AA3AA8 MOV X2, X20
	0x03AA3AAC BL 0x3AA3C0C
	0x03AA3AB0 LDR X8, [X19 + 0xE8]
	0x03AA3AB4 CBZ X8, 0x3AA3B04
	0x03AA3AB8 LDR X0, [X20]
	0x03AA3ABC LDR X9, [X8 + 0x48]
	0x03AA3AC0 LDUR V0, [X8 + 0x38]
	0x03AA3AC4 LDUR V1, [X8 + 0x28]
	0x03AA3AC8 LDR W1, [X19 + 0xE4]
	0x03AA3ACC STR X9, [X31 + 0xA0]
	0x03AA3AD0 STP V1, V0, [X31 + 0x80]
	0x03AA3AD4 CBZ X0, 0x3AA3B04
	0x03AA3AD8 LDP V0, V1, [X31 + 0x80]
	0x03AA3ADC LDR X8, [X31 + 0xA0]
	0x03AA3AE0 ADD X2, X31, 0x0
	0x03AA3AE4 STP V0, V1, [X31]
	0x03AA3AE8 STR X8, [X31 + 0x20]
	0x03AA3AEC MOV X3, X31
	0x03AA3AF0 BL 0x3C4FCFC
	0x03AA3AF4 LDP X20, X19, [X31 + 0xC0]
	0x03AA3AF8 LDP X30, X21, [X31 + 0xB0]
	0x03AA3AFC ADD X31, X31, 0xD0
	0x03AA3B00 RET
	0x03AA3B04 BL 0x1C16F20
	0x03AA3B08 STP X30, X23, [X31 - 0x30]!
	0x03AA3B0C STP X22, X21, [X31 + 0x10]
	0x03AA3B10 STP X20, X19, [X31 + 0x20]
	0x03AA3B14 ADRP X23, 0x93F000
	0x03AA3B18 ADRP X22, 0x678000
	0x03AA3B1C LDRB W8, [X23 + 0x402]
	0x03AA3B20 LDR X22, [X22 + 0x8F8]
	0x03AA3B24 MOV X20, X2
	0x03AA3B28 MOV X19, X1
	0x03AA3B2C MOV X21, X0
	0x03AA3B30 TBNZ X8, 0x0, 0x3AA3B6C
	0x03AA3B34 ADRP X0, 0x6B3000
	0x03AA3B38 LDR X0, [X0 + 0x8C8]
	0x03AA3B3C BL 0x1C16CF4
	0x03AA3B40 ADRP X0, 0x678000
	0x03AA3B44 LDR X0, [X0 + 0x8F8]
	0x03AA3B48 BL 0x1C16CF4
	0x03AA3B4C ADRP X0, 0x6AD000
	0x03AA3B50 LDR X0, [X0 + 0xC80]
	0x03AA3B54 BL 0x1C16CF4
	0x03AA3B58 ADRP X0, 0x6B2000
	0x03AA3B5C LDR X0, [X0 + 0xF98]
	0x03AA3B60 BL 0x1C16CF4
	0x03AA3B64 MOVZ W8, 0x1
	0x03AA3B68 STRB W8, [X23 + 0x402]
	0x03AA3B6C LDR X0, [X22]
	0x03AA3B70 ADRP X22, 0x6B2000
	0x03AA3B74 ADRP X23, 0x6B3000
	0x03AA3B78 LDR X20, [X20]
	0x03AA3B7C LDR W8, [X0 + 0xE0]
	0x03AA3B80 LDR X22, [X22 + 0xF98]
	0x03AA3B84 LDR X23, [X23 + 0x8C8]
	0x03AA3B88 CBNZ W8, 0x3AA3B90
	0x03AA3B8C BL 0x1C16DFC
	0x03AA3B90 LDR X1, [X22]
	0x03AA3B94 ADRP X22, 0x6AD000
	0x03AA3B98 LDR X22, [X22 + 0xC80]
	0x03AA3B9C MOVZ W2, 0x1
	0x03AA3BA0 MOV X0, X20
	0x03AA3BA4 MOV X3, X31
	0x03AA3BA8 BL 0x39E9618
	0x03AA3BAC LDR X0, [X23]
	0x03AA3BB0 LDR X21, [X21 + 0x130]
	0x03AA3BB4 LDR W8, [X0 + 0xE0]
	0x03AA3BB8 CBNZ W8, 0x3AA3BC0
	0x03AA3BBC BL 0x1C16DFC
	0x03AA3BC0 MOV X0, X20
	0x03AA3BC4 MOV X1, X21
	0x03AA3BC8 BL 0x3AA4358
	0x03AA3BCC LDR X0, [X22]
	0x03AA3BD0 LDR W8, [X0 + 0xE0]
	0x03AA3BD4 CBNZ W8, 0x3AA3BDC
	0x03AA3BD8 BL 0x1C16DFC
	0x03AA3BDC MOV X0, X19
	0x03AA3BE0 MOV X1, X20
	0x03AA3BE4 MOV X2, X31
	0x03AA3BE8 BL 0x3C58FE4
	0x03AA3BEC CBZ X20, 0x3AA3C08
	0x03AA3BF0 MOV X0, X20
	0x03AA3BF4 LDP X20, X19, [X31 + 0x20]
	0x03AA3BF8 LDP X22, X21, [X31 + 0x10]
	0x03AA3BFC MOV X1, X31
	0x03AA3C00 LDP X30, X23, [X31], #0x30
	0x03AA3C04 B 0x3C4C310
	0x03AA3C08 BL 0x1C16F20
	0x03AA3C0C STP D13, D12, [X31 - 0x90]!
	0x03AA3C10 STP D11, D10, [X31 + 0x10]
	0x03AA3C14 STP D9, D8, [X31 + 0x20]
	0x03AA3C18 STP X29, X30, [X31 + 0x30]
	0x03AA3C1C STP X28, X27, [X31 + 0x40]
	0x03AA3C20 STP X26, X25, [X31 + 0x50]
	0x03AA3C24 STP X24, X23, [X31 + 0x60]
	0x03AA3C28 STP X22, X21, [X31 + 0x70]
	0x03AA3C2C STP X20, X19, [X31 + 0x80]
	0x03AA3C30 SUB X31, X31, 0x930
	0x03AA3C34 STR X1, [X31 + 0x30]
	0x03AA3C38 MRS X23, 0xC000
	0x03AA3C3C LDR X8, [X23 + 0x28]
	0x03AA3C40 ADRP X21, 0x93F000
	0x03AA3C44 ADRP X20, 0x6B1000
	0x03AA3C48 MOV X24, X2
	0x03AA3C4C STR X8, [X31 + 0x928]
	0x03AA3C50 LDRB W8, [X21 + 0x404]
	0x03AA3C54 LDR X20, [X20 + 0xA8]
	0x03AA3C58 MOV X19, X0
	0x03AA3C5C TBNZ X8, 0x0, 0x3AA3CD4
	0x03AA3C60 ADRP X0, 0x678000
	0x03AA3C64 LDR X0, [X0 + 0x8F8]
	0x03AA3C68 BL 0x1C16CF4
	0x03AA3C6C ADRP X0, 0x651000
	0x03AA3C70 LDR X0, [X0 + 0xE28]
	0x03AA3C74 BL 0x1C16CF4
	0x03AA3C78 ADRP X0, 0x67A000
	0x03AA3C7C LDR X0, [X0 + 0xF38]
	0x03AA3C80 BL 0x1C16CF4
	0x03AA3C84 ADRP X0, 0x6B3000
	0x03AA3C88 LDR X0, [X0 + 0xF00]
	0x03AA3C8C BL 0x1C16CF4
	0x03AA3C90 ADRP X0, 0x6B1000
	0x03AA3C94 LDR X0, [X0 + 0xA8]
	0x03AA3C98 BL 0x1C16CF4
	0x03AA3C9C ADRP X0, 0x6B3000
	0x03AA3CA0 LDR X0, [X0 + 0xEC0]
	0x03AA3CA4 BL 0x1C16CF4
	0x03AA3CA8 ADRP X0, 0x679000
	0x03AA3CAC LDR X0, [X0 + 0x8A8]
	0x03AA3CB0 BL 0x1C16CF4
	0x03AA3CB4 ADRP X0, 0x6B4000
	0x03AA3CB8 LDR X0, [X0 + 0xA88]
	0x03AA3CBC BL 0x1C16CF4
	0x03AA3CC0 ADRP X0, 0x6B2000
	0x03AA3CC4 LDR X0, [X0 + 0xF98]
	0x03AA3CC8 BL 0x1C16CF4
	0x03AA3CCC MOVZ W8, 0x1
	0x03AA3CD0 STRB W8, [X21 + 0x404]
	0x03AA3CD4 ADD X0, X31, 0x760
	0x03AA3CD8 MOVZ W2, 0x1C8
	0x03AA3CDC MOV W1, W31
	0x03AA3CE0 STRB W31, [X31 + 0x1A0]
	0x03AA3CE4 BL 0x3EB1B10
	0x03AA3CE8 ADD X0, X31, 0x640
	0x03AA3CEC MOVZ W2, 0x120
	0x03AA3CF0 MOV W1, W31
	0x03AA3CF4 BL 0x3EB1B10
	0x03AA3CF8 MOVI V0.2D, 0x0
	0x03AA3CFC STR W31, [X31 + 0x190]
	0x03AA3D00 STP V0, V0, [X31 + 0x170]
	0x03AA3D04 STP V0, V0, [X31 + 0x150]
	0x03AA3D08 STP V0, V0, [X31 + 0x130]
	0x03AA3D0C STR V0, [X31 + 0x12]
	0x03AA3D10 LDR X8, [X24 + 0x238]
	0x03AA3D14 LDR X9, [X24 + 0x10]
	0x03AA3D18 LDR X1, [X20]
	0x03AA3D1C LDRSW X22, [X24 + 0x228]
	0x03AA3D20 STR X8, [X31 + 0x50]
	0x03AA3D24 LDR X8, [X24 + 0x240]
	0x03AA3D28 MOVZ W0, 0x3
	0x03AA3D2C STP X9, X8, [X31 + 0x40]
	0x03AA3D30 LDP X21, X8, [X24]
	0x03AA3D34 STR X8, [X31 + 0x38]
	0x03AA3D38 BL 0x2235BC0
	0x03AA3D3C MOV X2, X0
	0x03AA3D40 ADD X0, X31, 0x1A0
	0x03AA3D44 MOV X1, X21
	0x03AA3D48 MOV X3, X31
	0x03AA3D4C BL 0x39B1DB0
	0x03AA3D50 ADD X0, X24, 0x18
	0x03AA3D54 ADD X8, X31, 0x1A8
	0x03AA3D58 MOV W1, W31
	0x03AA3D5C MOV X2, X31
	0x03AA3D60 BL 0x3A92B70
	0x03AA3D64 ADRP X9, 0x6B3000
	0x03AA3D68 LDR X9, [X9 + 0xEC0]
	0x03AA3D6C ADD X8, X31, 0x1A8
	0x03AA3D70 LDP V0, V1, [X8]
	0x03AA3D74 LDP V2, V3, [X8 + 0x20]
	0x03AA3D78 LDR X0, [X9]
	0x03AA3D7C STR V0, [X31 + 0x47]
	0x03AA3D80 STR V1, [X31 + 0x48]
	0x03AA3D84 STR V2, [X31 + 0x49]
	0x03AA3D88 STR V3, [X31 + 0x4A]
	0x03AA3D8C LDR W8, [X0 + 0xE0]
	0x03AA3D90 CBNZ W8, 0x3AA3D98
	0x03AA3D94 BL 0x1C16DFC
	0x03AA3D98 LDR V0, [X31 + 0x47]
	0x03AA3D9C LDR V1, [X31 + 0x48]
	0x03AA3DA0 LDR V2, [X31 + 0x49]
	0x03AA3DA4 LDR V3, [X31 + 0x4A]
	0x03AA3DA8 STP V0, V1, [X31 + 0xE0]
	0x03AA3DAC STP V2, V3, [X31 + 0x100]
	0x03AA3DB0 ADD X1, X31, 0xE0
	0x03AA3DB4 MOV X0, X21
	0x03AA3DB8 MOV X2, X31
	0x03AA3DBC BL 0x3A77564
	0x03AA3DC0 LDR X8, [X19 + 0x120]
	0x03AA3DC4 CBZ X8, 0x3AA425C
	0x03AA3DC8 LDR W9, [X8 + 0x18]
	0x03AA3DCC CMP W9, 0x1
	0x03AA3DD0 B.LT 0x3AA40E4
	0x03AA3DD4 ADD X12, X24, 0x250
	0x03AA3DD8 STP X22, X24, [X31 + 0x8]
	0x03AA3DDC STR W31, [X31 + 0x5C]
	0x03AA3DE0 STP X23, X12, [X31 + 0x18]
	0x03AA3DE4 SUB X28, X9, 0x1
	0x03AA3DE8 ADRP X29, 0x657000
	0x03AA3DEC ADRP X9, 0xFFFFFFFFFD047000
	0x03AA3DF0 LDR X29, [X29 + 0x4B8]
	0x03AA3DF4 LDR V8, [X9 + 0x240]
	0x03AA3DF8 ADD X10, X31, 0x470
	0x03AA3DFC ADD X11, X31, 0x1A8
	0x03AA3E00 MOV W25, W31
	0x03AA3E04 MOV X27, X31
	0x03AA3E08 MOVZ W22, 0x20
	0x03AA3E0C ADRP X20, 0x936000
	0x03AA3E10 ADD X9, X10, 0xCC
	0x03AA3E14 ADD X26, X11, 0x40
	0x03AA3E18 FMOV S9, W31
	0x03AA3E1C FMOV S10, 8
	0x03AA3E20 FMOV S11, 1
	0x03AA3E24 FMOV S12, -1
	0x03AA3E28 STR X9, [X31 + 0x28]
	0x03AA3E2C ADRP X9, 0x67A000
	0x03AA3E30 LDR X9, [X9 + 0xF38]
	0x03AA3E34 LDR X2, [X9]
	0x03AA3E38 MOV X0, X8
	0x03AA3E3C MOV W1, W27
	0x03AA3E40 BL 0x2FDC41C
	0x03AA3E44 LDR X8, [X19 + 0x130]
	0x03AA3E48 CBZ X8, 0x3AA4234
	0x03AA3E4C LDR W9, [X8 + 0x18]
	0x03AA3E50 MOV W24, W0
	0x03AA3E54 CMP W0, W9
	0x03AA3E58 B.CS 0x3AA4238
	0x03AA3E5C SXTW X23, W24
	0x03AA3E60 ADD X8, X8, X23, 0x4, LSL
	0x03AA3E64 LDRB W9, [X20 + 0x5AA]
	0x03AA3E68 LDR V13, [X8 + 0x20]
	0x03AA3E6C CBNZ W9, 0x3AA3E80
	0x03AA3E70 MOV X0, X29
	0x03AA3E74 BL 0x1C16CF4
	0x03AA3E78 MOVZ W8, 0x1
	0x03AA3E7C STRB W8, [X20 + 0x5AA]
	0x03AA3E80 LDR X8, [X29]
	0x03AA3E84 FABS S1, S13
	0x03AA3E88 FMAXNM S1, S1, S9
	0x03AA3E8C FMUL S1, S1, S8
	0x03AA3E90 LDR X8, [X8 + 0xB8]
	0x03AA3E94 FABD S2, S9, S9
	0x03AA3E98 LDR V0, [X8]
	0x03AA3E9C FMUL S0, S0, S10
	0x03AA3EA0 FCMP S1, S0
	0x03AA3EA4 FCSEL S1, S1, S0, GT
	0x03AA3EA8 FCMP S2, S1
	0x03AA3EAC B.MI 0x3AA40B8
	0x03AA3EB0 LDR X8, [X19 + 0x130]
	0x03AA3EB4 CBZ X8, 0x3AA4240
	0x03AA3EB8 LDR W9, [X8 + 0x18]
	0x03AA3EBC CMP W24, W9
	0x03AA3EC0 B.CS 0x3AA423C
	0x03AA3EC4 ADD X8, X8, X23, 0x4, LSL
	0x03AA3EC8 LDR V1, [X8 + 0x2C]
	0x03AA3ECC FABS S2, S1
	0x03AA3ED0 FMAXNM S2, S2, S11
	0x03AA3ED4 FMUL S2, S2, S8
	0x03AA3ED8 FCMP S2, S0
	0x03AA3EDC FCSEL S0, S2, S0, GT
	0x03AA3EE0 FABD S1, S12, S12
	0x03AA3EE4 FCMP S1, S0
	0x03AA3EE8 B.MI 0x3AA40B8
	0x03AA3EEC LDR X8, [X19 + 0x118]
	0x03AA3EF0 CBZ X8, 0x3AA4250
	0x03AA3EF4 LDR W9, [X8 + 0x18]
	0x03AA3EF8 CMP W24, W9
	0x03AA3EFC B.CS 0x3AA4248
	0x03AA3F00 ADD X8, X8, X23, 0x2, LSL
	0x03AA3F04 LDR W25, [X8 + 0x20]
	0x03AA3F08 ADRP X8, 0x6B3000
	0x03AA3F0C LDR X8, [X8 + 0xF00]
	0x03AA3F10 LDR X3, [X8]
	0x03AA3F14 LDP X1, X0, [X31 + 0x48]
	0x03AA3F18 MOV W2, W25
	0x03AA3F1C BL 0x2222228
	0x03AA3F20 LDR X8, [X19 + 0x108]
	0x03AA3F24 CBZ X8, 0x3AA424C
	0x03AA3F28 LDR W9, [X8 + 0x18]
	0x03AA3F2C CMP X27, X9
	0x03AA3F30 B.CS 0x3AA4254
	0x03AA3F34 MOV X24, X0
	0x03AA3F38 ADD X1, X8, X22
	0x03AA3F3C ADD X0, X31, 0x760
	0x03AA3F40 MOVZ W2, 0x1C8
	0x03AA3F44 BL 0x3EB1B30
	0x03AA3F48 LDP X1, X2, [X31 + 0x38]
	0x03AA3F4C ADD X0, X31, 0x640
	0x03AA3F50 MOVZ W4, 0x1
	0x03AA3F54 MOV W3, W25
	0x03AA3F58 MOV X5, X31
	0x03AA3F5C BL 0x3C5A564
	0x03AA3F60 ADRP X8, 0x679000
	0x03AA3F64 LDR X8, [X8 + 0x8A8]
	0x03AA3F68 LDR X0, [X8]
	0x03AA3F6C LDR W8, [X0 + 0xE0]
	0x03AA3F70 CBNZ W8, 0x3AA3F78
	0x03AA3F74 BL 0x1C16DFC
	0x03AA3F78 MOV X0, X31
	0x03AA3F7C BL 0x3A8AB60
	0x03AA3F80 CBZ X0, 0x3AA4244
	0x03AA3F84 LDRB W1, [X0 + 0xEC]
	0x03AA3F88 ADD X0, X31, 0x640
	0x03AA3F8C MOV X2, X31
	0x03AA3F90 BL 0x3C5A540
	0x03AA3F94 ADD X0, X31, 0x470
	0x03AA3F98 ADD X1, X31, 0x760
	0x03AA3F9C MOVZ W2, 0x1C8
	0x03AA3FA0 BL 0x3EB1AC0
	0x03AA3FA4 LDR X1, [X31 + 0x28]
	0x03AA3FA8 ADD X0, X31, 0x370
	0x03AA3FAC MOVZ W2, 0xFC
	0x03AA3FB0 BL 0x3EB1AC0
	0x03AA3FB4 ADD X0, X31, 0x640
	0x03AA3FB8 ADD X1, X31, 0x370
	0x03AA3FBC MOV X2, X31
	0x03AA3FC0 BL 0x3C5A54C
	0x03AA3FC4 ADD X0, X31, 0x1A8
	0x03AA3FC8 ADD X1, X31, 0x760
	0x03AA3FCC MOVZ W2, 0x1C8
	0x03AA3FD0 BL 0x3EB1AC0
	0x03AA3FD4 ADRP X8, 0x6B3000
	0x03AA3FD8 LDP V0, V1, [X26 + 0x20]
	0x03AA3FDC LDP V2, V3, [X26]
	0x03AA3FE0 LDR X8, [X8 + 0xEC0]
	0x03AA3FE4 LDR W23, [X31 + 0x828]
	0x03AA3FE8 STP V0, V1, [X31 + 0xC0]
	0x03AA3FEC STP V2, V3, [X31 + 0xA0]
	0x03AA3FF0 LDR X0, [X8]
	0x03AA3FF4 LDR W8, [X0 + 0xE0]
	0x03AA3FF8 CBNZ W8, 0x3AA4000
	0x03AA3FFC BL 0x1C16DFC
	0x03AA4000 LDP V0, V1, [X31 + 0xA0]
	0x03AA4004 LDP V2, V3, [X31 + 0xC0]
	0x03AA4008 STP V0, V1, [X31 + 0x60]
	0x03AA400C SCVTF S0, W23
	0x03AA4010 STP V2, V3, [X31 + 0x80]
	0x03AA4014 LDR X2, [X31 + 0x20]
	0x03AA4018 ADD X3, X31, 0x60
	0x03AA401C MOV X0, X24
	0x03AA4020 MOV W1, W25
	0x03AA4024 MOV X4, X31
	0x03AA4028 BL 0x3A76DEC
	0x03AA402C MOV X0, X21
	0x03AA4030 MOV X1, X24
	0x03AA4034 MOV X2, X31
	0x03AA4038 BL 0x3A771DC
	0x03AA403C ADRP X8, 0x677000
	0x03AA4040 LDR X8, [X8 + 0x8F8]
	0x03AA4044 LDR X0, [X8]
	0x03AA4048 LDR W8, [X0 + 0xE0]
	0x03AA404C CBNZ W8, 0x3AA4054
	0x03AA4050 BL 0x1C16DFC
	0x03AA4054 ADRP X8, 0x6B3000
	0x03AA4058 LDR X8, [X8 + 0xA88]
	0x03AA405C LDR X1, [X8]
	0x03AA4060 MOVZ W2, 0x1
	0x03AA4064 MOV X0, X21
	0x03AA4068 MOV X3, X31
	0x03AA406C BL 0x39E9618
	0x03AA4070 LDR X1, [X31 + 0x30]
	0x03AA4074 ADD X2, X31, 0x760
	0x03AA4078 ADD X3, X31, 0x640
	0x03AA407C MOV X0, X21
	0x03AA4080 MOV X4, X31
	0x03AA4084 BL 0x3A76CF0
	0x03AA4088 MOV X0, X24
	0x03AA408C MOV X1, X31
	0x03AA4090 BL 0x3C5BBF0
	0x03AA4094 CBZ X0, 0x3AA4258
	0x03AA4098 MOV X1, X31
	0x03AA409C BL 0x3C16B90
	0x03AA40A0 LDR W9, [X31 + 0x5C]
	0x03AA40A4 CMP W0, 0x2
	0x03AA40A8 CSET W8, EQ
	0x03AA40AC MOVZ W25, 0x1
	0x03AA40B0 ORR W9, W9, W8, 0x0
	0x03AA40B4 STR W9, [X31 + 0x5C]
	0x03AA40B8 CMP X28, X27
	0x03AA40BC B.EQ 0x3AA40D4
	0x03AA40C0 LDR X8, [X19 + 0x120]
	0x03AA40C4 ADD X27, X27, 0x1
	0x03AA40C8 ADD X22, X22, 0x1C8
	0x03AA40CC CBNZ X8, 0x3AA3E2C
	0x03AA40D0 BL 0x1C16F20
	0x03AA40D4 LDP X24, X23, [X31 + 0x10]
	0x03AA40D8 LDR X22, [X31 + 0x8]
	0x03AA40DC LDR W26, [X31 + 0x5C]
	0x03AA40E0 B 0x3AA40EC
	0x03AA40E4 MOV W25, W31
	0x03AA40E8 MOV W26, W31
	0x03AA40EC ADDS W31, W22, 0x1
	0x03AA40F0 MOV W20, W31
	0x03AA40F4 B.EQ 0x3AA4138
	0x03AA40F8 LDRB W8, [X24 + 0x250]
	0x03AA40FC CBZ W8, 0x3AA4138
	0x03AA4100 LDR X9, [X31 + 0x50]
	0x03AA4104 MOVZ W8, 0x74
	0x03AA4108 ADD X0, X31, 0x120
	0x03AA410C MOVZ W2, 0x74
	0x03AA4110 MADD X1, X22, X8, X9
	0x03AA4114 BL 0x3EB1B30
	0x03AA4118 ADD X0, X31, 0x120
	0x03AA411C MOV X1, X31
	0x03AA4120 BL 0x3C5BBF0
	0x03AA4124 CBZ X0, 0x3AA4264
	0x03AA4128 MOV X1, X31
	0x03AA412C BL 0x3C16B90
	0x03AA4130 CMP W0, 0x2
	0x03AA4134 CSET W20, EQ
	0x03AA4138 LDR X8, [X24 + 0x1D0]
	0x03AA413C CBZ X8, 0x3AA4260
	0x03AA4140 LDRB W8, [X8 + 0x1A6]
	0x03AA4144 CMP W8, 0x0
	0x03AA4148 CSET W8, NE
	0x03AA414C ORR W8, W25, W8, 0x0
	0x03AA4150 AND W22, W8, 0x1
	0x03AA4154 STRB W22, [X24 + 0x298]
	0x03AA4158 ADRP X8, 0x677000
	0x03AA415C LDR X8, [X8 + 0x8F8]
	0x03AA4160 LDR X0, [X8]
	0x03AA4164 LDR W8, [X0 + 0xE0]
	0x03AA4168 CBNZ W8, 0x3AA4170
	0x03AA416C BL 0x1C16DFC
	0x03AA4170 ADRP X8, 0x6B1000
	0x03AA4174 LDR X8, [X8 + 0xF98]
	0x03AA4178 LDR X1, [X8]
	0x03AA417C MOV X0, X21
	0x03AA4180 MOV W2, W22
	0x03AA4184 MOV X3, X31
	0x03AA4188 BL 0x39E9618
	0x03AA418C LDRB W8, [X24 + 0x27C]
	0x03AA4190 AND W9, W26, 0x1
	0x03AA4194 ORR W9, W20, W9, 0x0
	0x03AA4198 CMP W8, 0x0
	0x03AA419C CSET W8, NE
	0x03AA41A0 CMP W9, 0x0
	0x03AA41A4 CSET W9, NE
	0x03AA41A8 AND W22, W9, W8, 0x0
	0x03AA41AC STRB W22, [X24 + 0x299]
	0x03AA41B0 ADRP X8, 0x6B2000
	0x03AA41B4 LDR X8, [X8 + 0xEC0]
	0x03AA41B8 LDR X0, [X8]
	0x03AA41BC LDR W8, [X0 + 0xE0]
	0x03AA41C0 CBNZ W8, 0x3AA41C8
	0x03AA41C4 BL 0x1C16DFC
	0x03AA41C8 ADD X1, X24, 0x250
	0x03AA41CC MOV X0, X21
	0x03AA41D0 MOV X2, X31
	0x03AA41D4 BL 0x3A77F3C
	0x03AA41D8 TBZ X25, 0x0, 0x3AA41EC
	0x03AA41DC MOV X0, X19
	0x03AA41E0 MOV X1, X21
	0x03AA41E4 MOV W2, W22
	0x03AA41E8 BL 0x3AA4474
	0x03AA41EC ADD X0, X31, 0x1A0
	0x03AA41F0 MOV X1, X31
	0x03AA41F4 BL 0x39B1DB4
	0x03AA41F8 LDR X8, [X23 + 0x28]
	0x03AA41FC LDR X9, [X31 + 0x928]
	0x03AA4200 CMP X8, X9
	0x03AA4204 B.NE 0x3AA4268
	0x03AA4208 ADD X31, X31, 0x930
	0x03AA420C LDP X20, X19, [X31 + 0x80]
	0x03AA4210 LDP X22, X21, [X31 + 0x70]
	0x03AA4214 LDP X24, X23, [X31 + 0x60]
	0x03AA4218 LDP X26, X25, [X31 + 0x50]
	0x03AA421C LDP X28, X27, [X31 + 0x40]
	0x03AA4220 LDP X29, X30, [X31 + 0x30]
	0x03AA4224 LDP D9, D8, [X31 + 0x20]
	0x03AA4228 LDP D11, D10, [X31 + 0x10]
	0x03AA422C LDP D13, D12, [X31], #0x90
	0x03AA4230 RET
	0x03AA4234 BL 0x1C16F20
	0x03AA4238 BL 0x1C16F28
	0x03AA423C BL 0x1C16F28
	0x03AA4240 BL 0x1C16F20
	0x03AA4244 BL 0x1C16F20
	0x03AA4248 BL 0x1C16F28
	0x03AA424C BL 0x1C16F20
	0x03AA4250 BL 0x1C16F20
	0x03AA4254 BL 0x1C16F28
	0x03AA4258 BL 0x1C16F20
	0x03AA425C BL 0x1C16F20
	0x03AA4260 BL 0x1C16F20
	0x03AA4264 BL 0x1C16F20
	0x03AA4268 BL 0x3EB1B20
	0x03AA426C B 0x3AA42F4
	0x03AA4270 B 0x3AA42F4
	0x03AA4274 B 0x3AA42F4
	0x03AA4278 B 0x3AA42F4
	0x03AA427C B 0x3AA42F4
	0x03AA4280 B 0x3AA42F4
	0x03AA4284 B 0x3AA42F4
	0x03AA4288 B 0x3AA42F4
	0x03AA428C B 0x3AA42F4
	0x03AA4290 B 0x3AA42F0
	0x03AA4294 B 0x3AA42F0
	0x03AA4298 B 0x3AA42F0
	0x03AA429C B 0x3AA42F0
	0x03AA42A0 B 0x3AA42F0
	0x03AA42A4 B 0x3AA42F0
	0x03AA42A8 B 0x3AA42F0
	0x03AA42AC B 0x3AA42F0
	0x03AA42B0 B 0x3AA42F0
	0x03AA42B4 B 0x3AA42F0
	0x03AA42B8 B 0x3AA42F0
	0x03AA42BC B 0x3AA42F0
	0x03AA42C0 B 0x3AA42F0
	0x03AA42C4 B 0x3AA42F0
	0x03AA42C8 B 0x3AA42F0
	0x03AA42CC B 0x3AA42F0
	0x03AA42D0 B 0x3AA42F0
	0x03AA42D4 B 0x3AA42F0
	0x03AA42D8 B 0x3AA42F0
	0x03AA42DC B 0x3AA42F0
	0x03AA42E0 B 0x3AA42F0
	0x03AA42E4 B 0x3AA42F0
	0x03AA42E8 B 0x3AA42F0
	0x03AA42EC B 0x3AA42F0
	0x03AA42F0 LDR X23, [X31 + 0x18]
	0x03AA42F4 MOV X19, X0
	0x03AA42F8 CMP W1, 0x1
	0x03AA42FC B.NE 0x3AA4328
	0x03AA4300 MOV X0, X19
	0x03AA4304 BL 0x3EB1AD0
	0x03AA4308 LDR X20, [X0]
	0x03AA430C BL 0x3EB1AE0
	0x03AA4310 ADD X0, X31, 0x1A0
	0x03AA4314 MOV X1, X31
	0x03AA4318 BL 0x39B1DB4
	0x03AA431C CBZ X20, 0x3AA41F8
	0x03AA4320 MOV X0, X20
	0x03AA4324 BL 0x1C16F18
	0x03AA4328 MOV X20, X31
	0x03AA432C B 0x3AA4334
	0x03AA4330 MOV X19, X0
	0x03AA4334 ADD X0, X31, 0x1A0
	0x03AA4338 MOV X1, X31
	0x03AA433C BL 0x39B1DB4
	0x03AA4340 CBNZ X20, 0x3AA434C
	0x03AA4344 MOV X0, X19
	0x03AA4348 BL 0x1D2C690
	0x03AA434C MOV X0, X20
	0x03AA4350 BL 0x1C16F18
	0x03AA4354 BL 0x1990590
	0x03AA4358 STR X30, [X31 - 0x30]!
	0x03AA435C STP X22, X21, [X31 + 0x10]
	0x03AA4360 STP X20, X19, [X31 + 0x20]
	0x03AA4364 ADRP X21, 0x93E000
	0x03AA4368 ADRP X22, 0x6B0000
	0x03AA436C LDRB W8, [X21 + 0x403]
	0x03AA4370 LDR X22, [X22 + 0x10]
	0x03AA4374 MOV X20, X1
	0x03AA4378 MOV X19, X0
	0x03AA437C TBNZ X8, 0x0, 0x3AA43AC
	0x03AA4380 ADRP X0, 0x6B2000
	0x03AA4384 LDR X0, [X0 + 0x8C8]
	0x03AA4388 BL 0x1C16CF4
	0x03AA438C ADRP X0, 0x6B3000
	0x03AA4390 LDR X0, [X0 + 0x988]
	0x03AA4394 BL 0x1C16CF4
	0x03AA4398 ADRP X0, 0x6B0000
	0x03AA439C LDR X0, [X0 + 0x10]
	0x03AA43A0 BL 0x1C16CF4
	0x03AA43A4 MOVZ W8, 0x1
	0x03AA43A8 STRB W8, [X21 + 0x403]
	0x03AA43AC LDR X0, [X22]
	0x03AA43B0 LDR W8, [X0 + 0xE0]
	0x03AA43B4 CBNZ W8, 0x3AA43BC
	0x03AA43B8 BL 0x1C16DFC
	0x03AA43BC MOV X0, X31
	0x03AA43C0 BL 0x3A70480
	0x03AA43C4 TBZ X0, 0x0, 0x3AA443C
	0x03AA43C8 MOV X0, X31
	0x03AA43CC BL 0x3A7598C
	0x03AA43D0 CBZ X20, 0x3AA4470
	0x03AA43D4 CBZ X0, 0x3AA4470
	0x03AA43D8 LDR W1, [X20 + 0x18]
	0x03AA43DC MOV X2, X31
	0x03AA43E0 BL 0x3A75B40
	0x03AA43E4 CBZ X0, 0x3AA4470
	0x03AA43E8 MOV X1, X20
	0x03AA43EC MOV X2, X31
	0x03AA43F0 MOV X21, X0
	0x03AA43F4 BL 0x3C3ACC4
	0x03AA43F8 ADRP X20, 0x6B2000
	0x03AA43FC LDR X20, [X20 + 0x8C8]
	0x03AA4400 LDR X0, [X20]
	0x03AA4404 LDR W8, [X0 + 0xE0]
	0x03AA4408 CBNZ W8, 0x3AA4410
	0x03AA440C BL 0x1C16DFC
	0x03AA4410 CBZ X19, 0x3AA4470
	0x03AA4414 LDR X8, [X20]
	0x03AA4418 MOV X0, X19
	0x03AA441C MOV X2, X21
	0x03AA4420 LDP X20, X19, [X31 + 0x20]
	0x03AA4424 LDR X8, [X8 + 0xB8]
	0x03AA4428 LDP X22, X21, [X31 + 0x10]
	0x03AA442C MOV X3, X31
	0x03AA4430 LDR W1, [X8 + 0x1C]
	0x03AA4434 LDR X30, [X31], #0x30
	0x03AA4438 B 0x3C4FD54
	0x03AA443C CBZ X19, 0x3AA4470
	0x03AA4440 ADRP X8, 0x6B3000
	0x03AA4444 LDR X8, [X8 + 0x988]
	0x03AA4448 MOV X0, X19
	0x03AA444C MOV X2, X20
	0x03AA4450 LDP X20, X19, [X31 + 0x20]
	0x03AA4454 LDR X8, [X8]
	0x03AA4458 LDP X22, X21, [X31 + 0x10]
	0x03AA445C MOV X3, X31
	0x03AA4460 LDR X8, [X8 + 0xB8]
	0x03AA4464 LDR W1, [X8 + 0x4]
	0x03AA4468 LDR X30, [X31], #0x30
	0x03AA446C B 0x3C4D428
	0x03AA4470 BL 0x1C16F20
	0x03AA4474 SUB X31, X31, 0x80
	0x03AA4478 STR D14, [X31 + 0x10]
	0x03AA447C STP D13, D12, [X31 + 0x18]
	0x03AA4480 STP D11, D10, [X31 + 0x28]
	0x03AA4484 STP D9, D8, [X31 + 0x38]
	0x03AA4488 STR X30, [X31 + 0x48]
	0x03AA448C STP X24, X23, [X31 + 0x50]
	0x03AA4490 STP X22, X21, [X31 + 0x60]
	0x03AA4494 STP X20, X19, [X31 + 0x70]
	0x03AA4498 ADRP X22, 0x93E000
	0x03AA449C LDRB W8, [X22 + 0x405]
	0x03AA44A0 MOV W20, W2
	0x03AA44A4 MOV X19, X1
	0x03AA44A8 MOV X21, X0
	0x03AA44AC TBNZ X8, 0x0, 0x3AA44DC
	0x03AA44B0 ADRP X0, 0x6B2000
	0x03AA44B4 LDR X0, [X0 + 0x8C8]
	0x03AA44B8 BL 0x1C16CF4
	0x03AA44BC ADRP X0, 0x6B3000
	0x03AA44C0 LDR X0, [X0 + 0x988]
	0x03AA44C4 BL 0x1C16CF4
	0x03AA44C8 ADRP X0, 0x6B2000
	0x03AA44CC LDR X0, [X0 + 0xEC0]
	0x03AA44D0 BL 0x1C16CF4
	0x03AA44D4 MOVZ W8, 0x1
	0x03AA44D8 STRB W8, [X22 + 0x405]
	0x03AA44DC STR X31, [X31 + 0x8]
	0x03AA44E0 ADRP X23, 0x6B3000
	0x03AA44E4 LDRB W8, [X21 + 0xE0]
	0x03AA44E8 LDR X23, [X23 + 0x988]
	0x03AA44EC CBZ W8, 0x3AA45B0
	0x03AA44F0 MOV X0, X31
	0x03AA44F4 BL 0x3A7598C
	0x03AA44F8 LDR X8, [X21 + 0x130]
	0x03AA44FC CBZ X8, 0x3AA474C
	0x03AA4500 CBZ X0, 0x3AA474C
	0x03AA4504 LDR W1, [X8 + 0x18]
	0x03AA4508 MOV X2, X31
	0x03AA450C BL 0x3A75B40
	0x03AA4510 CBZ X0, 0x3AA474C
	0x03AA4514 LDR X1, [X21 + 0x130]
	0x03AA4518 ADRP X24, 0x6B2000
	0x03AA451C LDR X24, [X24 + 0x8C8]
	0x03AA4520 MOV X2, X31
	0x03AA4524 MOV X22, X0
	0x03AA4528 BL 0x3C3ACC4
	0x03AA452C LDR X0, [X24]
	0x03AA4530 LDR W8, [X0 + 0xE0]
	0x03AA4534 CBNZ W8, 0x3AA453C
	0x03AA4538 BL 0x1C16DFC
	0x03AA453C CBZ X19, 0x3AA474C
	0x03AA4540 LDR X8, [X24]
	0x03AA4544 MOV X0, X19
	0x03AA4548 MOV X2, X22
	0x03AA454C MOV X3, X31
	0x03AA4550 LDR X8, [X8 + 0xB8]
	0x03AA4554 LDR W1, [X8 + 0x1C]
	0x03AA4558 BL 0x3C4FD54
	0x03AA455C MOV X0, X31
	0x03AA4560 BL 0x3A7598C
	0x03AA4564 LDR X8, [X21 + 0x138]
	0x03AA4568 CBZ X8, 0x3AA474C
	0x03AA456C CBZ X0, 0x3AA474C
	0x03AA4570 LDR W1, [X8 + 0x18]
	0x03AA4574 MOV X2, X31
	0x03AA4578 BL 0x3A75B9C
	0x03AA457C CBZ X0, 0x3AA474C
	0x03AA4580 LDR X1, [X21 + 0x138]
	0x03AA4584 MOV X2, X31
	0x03AA4588 MOV X22, X0
	0x03AA458C BL 0x3C3ACC4
	0x03AA4590 LDR X8, [X24]
	0x03AA4594 MOV X0, X19
	0x03AA4598 MOV X2, X22
	0x03AA459C MOV X3, X31
	0x03AA45A0 LDR X8, [X8 + 0xB8]
	0x03AA45A4 LDR W1, [X8 + 0x18]
	0x03AA45A8 BL 0x3C4FD54
	0x03AA45AC B 0x3AA45EC
	0x03AA45B0 CBZ X19, 0x3AA474C
	0x03AA45B4 LDR X8, [X23]
	0x03AA45B8 LDR X2, [X21 + 0x130]
	0x03AA45BC MOV X0, X19
	0x03AA45C0 MOV X3, X31
	0x03AA45C4 LDR X8, [X8 + 0xB8]
	0x03AA45C8 LDR W1, [X8 + 0x4]
	0x03AA45CC BL 0x3C4D428
	0x03AA45D0 LDR X8, [X23]
	0x03AA45D4 LDR X2, [X21 + 0x138]
	0x03AA45D8 MOV X0, X19
	0x03AA45DC MOV X3, X31
	0x03AA45E0 LDR X8, [X8 + 0xB8]
	0x03AA45E4 LDR W1, [X8]
	0x03AA45E8 BL 0x3C4D47C
	0x03AA45EC ADRP X8, 0x6B2000
	0x03AA45F0 LDR X8, [X8 + 0xEC0]
	0x03AA45F4 LDR V8, [X21 + 0x100]
	0x03AA45F8 LDR V9, [X21 + 0x104]
	0x03AA45FC LDR X0, [X8]
	0x03AA4600 LDR W8, [X0 + 0xE0]
	0x03AA4604 CBNZ W8, 0x3AA460C
	0x03AA4608 BL 0x1C16DFC
	0x03AA460C ADD X0, X31, 0xC
	0x03AA4610 ADD X1, X31, 0x8
	0x03AA4614 MOV V0.16B, V8.16B
	0x03AA4618 MOV V1.16B, V9.16B
	0x03AA461C MOV X2, X31
	0x03AA4620 BL 0x3A77188
	0x03AA4624 LDR X8, [X23]
	0x03AA4628 LDP S1, S0, [X31 + 0x8]
	0x03AA462C FMOV S2, W31
	0x03AA4630 FMOV S3, W31
	0x03AA4634 LDR X8, [X8 + 0xB8]
	0x03AA4638 MOV X0, X19
	0x03AA463C MOV X2, X31
	0x03AA4640 LDR W1, [X8 + 0x10]
	0x03AA4644 BL 0x3C4CED8
	0x03AA4648 TBZ X20, 0x0, 0x3AA4724
	0x03AA464C LDR X8, [X21 + 0xE8]
	0x03AA4650 CBZ X8, 0x3AA474C
	0x03AA4654 ADRP X22, 0x93D000
	0x03AA4658 LDRB W9, [X22 + 0xA48]
	0x03AA465C LDP W21, W20, [X8 + 0xAC]
	0x03AA4660 CBNZ W9, 0x3AA4678
	0x03AA4664 ADRP X0, 0x657000
	0x03AA4668 LDR X0, [X0 + 0xF08]
	0x03AA466C BL 0x1C16CF4
	0x03AA4670 MOVZ W8, 0x1
	0x03AA4674 STRB W8, [X22 + 0xA48]
	0x03AA4678 ADRP X8, 0x657000
	0x03AA467C LDR X8, [X8 + 0xF08]
	0x03AA4680 LDR X9, [X23]
	0x03AA4684 SCVTF S8, W21
	0x03AA4688 SCVTF S9, W20
	0x03AA468C LDR X8, [X8]
	0x03AA4690 LDR X9, [X9 + 0xB8]
	0x03AA4694 FMOV S2, 0.5
	0x03AA4698 MOV X0, X19
	0x03AA469C LDR X8, [X8 + 0xB8]
	0x03AA46A0 LDR W1, [X9 + 0x8]
	0x03AA46A4 MOV X2, X31
	0x03AA46A8 LDP S0, S1, [X8 + 0x8]
	0x03AA46AC FDIV S10, S0, S8
	0x03AA46B0 FDIV S11, S1, S9
	0x03AA46B4 FMUL S12, S10, S2
	0x03AA46B8 FNMUL S14, S10, S2
	0x03AA46BC FNMUL S1, S11, S2
	0x03AA46C0 FMUL S13, S11, S2
	0x03AA46C4 MOV V0.16B, V14.16B
	0x03AA46C8 MOV V2.16B, V12.16B
	0x03AA46CC MOV V3.16B, V1.16B
	0x03AA46D0 BL 0x3C4CED8
	0x03AA46D4 LDR X8, [X23]
	0x03AA46D8 MOV X0, X19
	0x03AA46DC MOV V0.16B, V14.16B
	0x03AA46E0 MOV V1.16B, V13.16B
	0x03AA46E4 LDR X8, [X8 + 0xB8]
	0x03AA46E8 MOV V2.16B, V12.16B
	0x03AA46EC MOV V3.16B, V13.16B
	0x03AA46F0 MOV X2, X31
	0x03AA46F4 LDR W1, [X8 + 0xC]
	0x03AA46F8 BL 0x3C4CED8
	0x03AA46FC LDR X8, [X23]
	0x03AA4700 MOV X0, X19
	0x03AA4704 MOV V0.16B, V10.16B
	0x03AA4708 MOV V1.16B, V11.16B
	0x03AA470C LDR X8, [X8 + 0xB8]
	0x03AA4710 MOV V2.16B, V8.16B
	0x03AA4714 MOV V3.16B, V9.16B
	0x03AA4718 MOV X2, X31
	0x03AA471C LDR W1, [X8 + 0x14]
	0x03AA4720 BL 0x3C4CED8
	0x03AA4724 LDP X20, X19, [X31 + 0x70]
	0x03AA4728 LDP X22, X21, [X31 + 0x60]
	0x03AA472C LDP X24, X23, [X31 + 0x50]
	0x03AA4730 LDR X30, [X31 + 0x48]
	0x03AA4734 LDP D9, D8, [X31 + 0x38]
	0x03AA4738 LDP D11, D10, [X31 + 0x28]
	0x03AA473C LDP D13, D12, [X31 + 0x18]
	0x03AA4740 LDR V14, [X31 + 0x10]
	0x03AA4744 ADD X31, X31, 0x80
	0x03AA4748 RET
	0x03AA474C BL 0x1C16F20
	0x03AA4750 STR X29, [X31 - 0x60]!
	0x03AA4754 STP X30, X27, [X31 + 0x10]
	0x03AA4758 STP X26, X25, [X31 + 0x20]
	0x03AA475C STP X24, X23, [X31 + 0x30]
	0x03AA4760 STP X22, X21, [X31 + 0x40]
	0x03AA4764 STP X20, X19, [X31 + 0x50]
	0x03AA4768 SUB X31, X31, 0x1D0
	0x03AA476C ADRP X22, 0x93E000
	0x03AA4770 LDRB W8, [X22 + 0x407]
	0x03AA4774 MOV X19, X2
	0x03AA4778 MOV X21, X1
	0x03AA477C MOV X20, X0
	0x03AA4780 STR X1, [X31 + 0x1D8]
	0x03AA4784 TBNZ X8, 0x0, 0x3AA4820
	0x03AA4788 ADRP X0, 0x6B3000
	0x03AA478C LDR X0, [X0 + 0xA90]
	0x03AA4790 BL 0x1C16CF4
	0x03AA4794 ADRP X0, 0x6B3000
	0x03AA4798 LDR X0, [X0 + 0xA98]
	0x03AA479C BL 0x1C16CF4
	0x03AA47A0 ADRP X0, 0x6B3000
	0x03AA47A4 LDR X0, [X0 + 0xAA0]
	0x03AA47A8 BL 0x1C16CF4
	0x03AA47AC ADRP X0, 0x6B2000
	0x03AA47B0 LDR X0, [X0 + 0xEC0]
	0x03AA47B4 BL 0x1C16CF4
	0x03AA47B8 ADRP X0, 0x6AC000
	0x03AA47BC LDR X0, [X0 + 0xA88]
	0x03AA47C0 BL 0x1C16CF4
	0x03AA47C4 ADRP X0, 0x6B3000
	0x03AA47C8 LDR X0, [X0 + 0xAA8]
	0x03AA47CC BL 0x1C16CF4
	0x03AA47D0 ADRP X0, 0x6B3000
	0x03AA47D4 LDR X0, [X0 + 0xAB0]
	0x03AA47D8 BL 0x1C16CF4
	0x03AA47DC ADRP X0, 0x6B3000
	0x03AA47E0 LDR X0, [X0 + 0xAB8]
	0x03AA47E4 BL 0x1C16CF4
	0x03AA47E8 ADRP X0, 0x6AF000
	0x03AA47EC LDR X0, [X0 + 0xFF8]
	0x03AA47F0 BL 0x1C16CF4
	0x03AA47F4 ADRP X0, 0x6B3000
	0x03AA47F8 LDR X0, [X0 + 0xAC0]
	0x03AA47FC BL 0x1C16CF4
	0x03AA4800 ADRP X0, 0x6B3000
	0x03AA4804 LDR X0, [X0 + 0xAC8]
	0x03AA4808 BL 0x1C16CF4
	0x03AA480C ADRP X0, 0x6B3000
	0x03AA4810 LDR X0, [X0 + 0xAD0]

ISIL:
	001 Move [X31-160], D15
	002 Move [X31-152], D14
	003 Move [X31+16], D13
	004 Move [X31+24], D12
	005 Move [X31+32], D11
	006 Move [X31+40], D10
	007 Move [X31+48], D9
	008 Move [X31+56], D8
	009 Move [X31+64], X29
	010 Move [X31+72], X30
	011 Move [X31+80], X28
	012 Move [X31+88], X27
	013 Move [X31+96], X26
	014 Move [X31+104], X25
	015 Move [X31+112], X24
	016 Move [X31+120], X23
	017 Move [X31+128], X22
	018 Move [X31+136], X21
	019 Move [X31+144], X20
	020 Move [X31+152], X19
	021 Subtract X31, X31, 880
	022 Move X19, 0x941000
	023 Move W8, [X19+1023]
	024 Move X20, X0
	025 Move [X31+120], X1
	026 Move TEMP, X8
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {89}
	030 Move X0, 0x6B4000
	031 Move X0, [X0+2248]
	032 Call 0x1C17CF4
	033 Move X0, 0x652000
	034 Move X0, [X0+3672]
	035 Call 0x1C17CF4
	036 Move X0, 0x652000
	037 Move X0, [X0+3600]
	038 Call 0x1C17CF4
	039 Move X0, 0x6B5000
	040 Move X0, [X0+2640]
	041 Call 0x1C17CF4
	042 Move X0, 0x6B5000
	043 Move X0, [X0+2648]
	044 Call 0x1C17CF4
	045 Move X0, 0x6B5000
	046 Move X0, [X0+2656]
	047 Call 0x1C17CF4
	048 Move X0, 0x652000
	049 Move X0, [X0+3624]
	050 Call 0x1C17CF4
	051 Move X0, 0x6B5000
	052 Move X0, [X0+2664]
	053 Call 0x1C17CF4
	054 Move X0, 0x67B000
	055 Move X0, [X0+3896]
	056 Call 0x1C17CF4
	057 Move X0, 0x651000
	058 Move X0, [X0+1448]
	059 Call 0x1C17CF4
	060 Move X0, 0x655000
	061 Move X0, [X0+2440]
	062 Call 0x1C17CF4
	063 Move X0, 0x6B4000
	064 Move X0, [X0+3840]
	065 Call 0x1C17CF4
	066 Move X0, 0x6B5000
	067 Move X0, [X0+2672]
	068 Call 0x1C17CF4
	069 Move X0, 0x6B5000
	070 Move X0, [X0+2680]
	071 Call 0x1C17CF4
	072 Move X0, 0x6B4000
	073 Move X0, [X0+3776]
	074 Call 0x1C17CF4
	075 Move X0, 0x651000
	076 Move X0, [X0+1592]
	077 Call 0x1C17CF4
	078 Move X0, 0x67A000
	079 Move X0, [X0+2216]
	080 Call 0x1C17CF4
	081 Move X0, 0x6AC000
	082 Move X0, [X0+72]
	083 Call 0x1C17CF4
	084 Move X0, 0x6B5000
	085 Move X0, [X0+2568]
	086 Call 0x1C17CF4
	087 Move W8, 1
	088 Move [X19+1023], W8
	089 NotImplemented "Instruction MOVI not yet implemented."
	090 Move [X31+872], W31
	091 Move [X31+856], X31
	092 Move [X31+848], X31
	093 Move [X31+832], X31
	094 Move [X31+816], X31
	095 Move [X31+824], X31
	096 Move [X31+800], X31
	097 Move [X31+792], X31
	098 Move [X31+808], X31
	099 Move [X31+752], V0
	100 Move [X31+760], V0
	101 Move [X31+720], V0
	102 Move [X31+728], V0
	103 Move [X31+688], V0
	104 Move [X31+696], V0
	105 Move [X31+656], V0
	106 Move [X31+664], V0
	107 Move X2, [X20+368]
	108 Add X0, X31, 872
	109 Move X1, X31
	110 Move X3, X31
	111 Call ProfilingScope..ctor, X0, X1, X2
	112 Move X1, [X31+120]
	113 Move W8, [X1+625]
	114 Compare W8, 0
	115 JumpIfEqual {368}
	116 Move W8, [X1+624]
	117 Compare W8, 0
	118 JumpIfEqual {369}
	119 Move X0, X20
	120 Call AdditionalLightsShadowCasterPass.Clear, X0
	121 Move X10, [X31+120]
	122 Add X8, X10, 628
	123 Move V0, [X8]
	124 Move X8, [X20+320]
	125 Move [X31+5], V0
	126 Move [X20+360], D0
	127 Compare X8, 0
	128 JumpIfEqual {1459}
	129 Move W9, [X8+28]
	130 Move X19, [X10+568]
	131 Move X22, [X10+576]
	132 Add W9, W9, 1
	133 Move [X8+24], W31
	134 Move [X8+28], W9
	135 Move X8, [X20+272]
	136 Compare X8, 0
	137 JumpIfEqual {1460}
	138 Move W8, [X8+24]
	139 Move [X31+72], X19
	140 NotImplemented "Instruction CMP not yet implemented."
	141 Move X19, 0x652000
	142 Move X19, [X19+3672]
	143 Move X0, [X19]
	144 Move W1, W22
	145 Call 0x1C17D6C
	146 Move [X20+272], X0
	147 Move X8, 0x651000
	148 Move X8, [X8+1592]
	149 Move X0, [X8]
	150 Move W1, W22
	151 Call 0x1C17D6C
	152 Move [X20+328], X0
	153 Move X0, [X19]
	154 Move W1, W22
	155 Call 0x1C17D6C
	156 Move X19, [X31+72]
	157 Move [X20+344], X0
	158 Move W8, [X20+224]
	159 Move W21, W22
	160 Compare W8, 0
	161 JumpIfNotEqual {184}
	162 Move X8, 0x67A000
	163 Move X8, [X8+2216]
	164 Move X0, [X8]
	165 Move W8, [X0+224]
	166 Compare W8, 0
	167 JumpIfNotEqual {169}
	168 Call 0x1C17DFC
	169 Move X0, X31
	170 Call UniversalRenderPipeline.get_maxVisibleAdditionalLights
	171 Move X8, 0x651000
	172 Move X8, [X8+1448]
	173 Move W21, W0
	174 Move X0, [X8]
	175 Move W8, [X0+224]
	176 Compare W8, 0
	177 JumpIfNotEqual {179}
	178 Call 0x1C17DFC
	179 Move W0, W22
	180 Move W1, W21
	181 Move X2, X31
	182 Call Math.Min, X0, X1
	183 Move W21, W0
	184 Move X8, [X20+280]
	185 Compare X8, 0
	186 JumpIfEqual {1461}
	187 Move W8, [X8+24]
	188 NotImplemented "Instruction CMP not yet implemented."
	189 Move X8, 0x652000
	190 Move X8, [X8+3672]
	191 Move X0, [X8]
	192 Move W1, W21
	193 Call 0x1C17D6C
	194 Move [X20+280], X0
	195 Move X8, 0x6AC000
	196 Move X8, [X8+72]
	197 Move X0, [X8]
	198 Move W1, W21
	199 Call 0x1C17D6C
	200 Move [X20+304], X0
	201 Move X11, [X20+328]
	202 Compare X11, 0
	203 JumpIfEqual {1462}
	204 Move W8, [X11+24]
	205 Move X9, X8
	206 ShiftRight X9, 32
	207 And X9, X9, 0x7FFFFFFF
	208 NotImplemented "Instruction CMP not yet implemented."
	209 Move X9, X31
	210 Move X10, W8
	211 Add X11, X11, 32
	212 Move TEMP, 0x80800000
	213 Not TEMP
	214 Move W12, TEMP
	215 NotImplemented "Instruction CMP not yet implemented."
	216 Move [X11], W12
	217 Add X9, X9, 1
	218 NotImplemented "Instruction CMP not yet implemented."
	219 Move X8, [X31+120]
	220 NotImplemented "Instruction CMP not yet implemented."
	221 Move [X31+52], W21
	222 Add X8, X8, 552
	223 Move [X31+104], X22
	224 Move [X31+112], X8
	225 Move X28, 0x67B000
	226 Move X29, 0x6B5000
	227 Move X28, [X28+3896]
	228 Move X29, [X29+2640]
	229 Move X23, X31
	230 Move W21, W31
	231 And X22, X22, 0
	232 Move [X31+96], X22
	233 Move X1, [X31+112]
	234 Move W8, [X1]
	235 NotImplemented "Instruction CMP not yet implemented."
	236 Move W2, W23
	237 Call AdditionalLightsShadowCasterPass.IsValidShadowCastingLight, X0, X1, X2
	238 Move TEMP, X0
	239 And TEMP, TEMP, 1
	240 Compare TEMP, 1
	241 JumpIfNotEqual {366}
	242 Move X8, 0x6B4000
	243 Move X8, [X8+3840]
	244 Move X3, [X8]
	245 Move X1, [X31+104]
	246 Move X0, X19
	247 Move W2, W23
	248 Call 0x2223228, X0, X1
	249 Move X24, X0
	250 Move X1, X31
	251 Call VisibleLight.get_lightType, X0
	252 NotImplemented "Instruction CMP not yet implemented."
	253 Move W8, 6
	254 NotImplemented "Instruction CSEL not yet implemented."
	255 NotImplemented "Instruction CMP not yet implemented."
	256 NotImplemented "Instruction CSINC not yet implemented."
	257 Compare W25, 0
	258 JumpIfEqual {324}
	259 Move W19, W31
	260 Move X8, [X31+120]
	261 Move X0, [X8+656]
	262 Compare X0, 0
	263 JumpIfEqual {1399}
	264 Move X26, [X20+320]
	265 Move X2, [X28]
	266 Move W1, W23
	267 Call List`1<Int32>.get_Item, X0, X1
	268 Move W27, W0
	269 Move X0, X24
	270 Move X1, X31
	271 Call VisibleLight.get_light, X0
	272 Compare X0, 0
	273 JumpIfEqual {1400}
	274 Move X1, X31
	275 Call Light.get_shadows, X0
	276 Move W22, W0
	277 Move X0, X24
	278 Move X1, X31
	279 Call VisibleLight.get_lightType, X0
	280 NotImplemented "Instruction CMP not yet implemented."
	281 NotImplemented "Instruction CSET not yet implemented."
	282 NotImplemented "Instruction CMP not yet implemented."
	283 NotImplemented "Instruction CSET not yet implemented."
	284 Compare X26, 0
	285 JumpIfEqual {1401}
	286 Move W12, [X26+28]
	287 Move X10, [X26+16]
	288 Move X11, [X29]
	289 Add W12, W12, 1
	290 Move [X26+28], W12
	291 Compare X10, 0
	292 JumpIfEqual {1402}
	293 NotImplemented "Instruction LDRSW not yet implemented."
	294 Move W13, [X10+24]
	295 NotImplemented "Instruction CMP not yet implemented."
	296 Move W13, 28
	297 Add W11, W12, 1
	298 NotImplemented "Instruction MADD not yet implemented."
	299 Move [X26+24], W11
	300 Move [X10+32], W23
	301 Move [X10+36], W19
	302 Move [X10+40], W27
	303 Move [X10+44], W8
	304 Move [X10+45], W9
	305 NotImplemented "Instruction STRH not yet implemented."
	306 Move [X10+48], X31
	307 Move [X10+56], W31
	308 Move X10, [X11+32]
	309 Move X10, [X10+192]
	310 Move X2, [X10+112]
	311 Move [X31+560], W23
	312 Move [X31+564], W19
	313 Move [X31+568], W27
	314 Move [X31+572], W8
	315 Move [X31+573], W9
	316 NotImplemented "Instruction STRH not yet implemented."
	317 Move [X31+576], X31
	318 Move [X31+584], W31
	319 Add X1, X31, 560
	320 Move X0, X26
	321 Call List`1<ShadowResolutionRequest>.AddWithResize, X0, X1
	322 Add W19, W19, 1
	323 NotImplemented "Instruction CMP not yet implemented."
	324 Move X8, [X31+120]
	325 Move X0, [X8+216]
	326 Compare X0, 0
	327 JumpIfEqual {1426}
	328 Move X19, [X20+328]
	329 Move X1, X31
	330 Call Component.get_transform, X0
	331 Compare X0, 0
	332 JumpIfEqual {1431}
	333 Move X1, X31
	334 Call Transform.get_position, X0
	335 Move V8, V0
	336 Move V9, V1
	337 Move V10, V2
	338 Move X0, X24
	339 Move X1, X31
	340 Call VisibleLight.get_light, X0
	341 Compare X0, 0
	342 JumpIfEqual {1430}
	343 Move X1, X31
	344 Call Component.get_transform, X0
	345 Compare X0, 0
	346 JumpIfEqual {1429}
	347 Move X1, X31
	348 Call Transform.get_position, X0
	349 Compare X19, 0
	350 JumpIfEqual {1428}
	351 Move W8, [X19+24]
	352 NotImplemented "Instruction CMP not yet implemented."
	353 Subtract S0, S8, S0
	354 Subtract S1, S9, S1
	355 Add X8, X19, X23
	356 Move X19, [X31+72]
	357 Move X22, [X31+96]
	358 Subtract S2, S10, S2
	359 Multiply S0, S0, S0
	360 Multiply S1, S1, S1
	361 Multiply S2, S2, S2
	362 Add S0, S0, S1
	363 Add W21, W25, W21
	364 Add S0, S2, S0
	365 Move [X8+32], S0
	366 Add X23, X23, 1
	367 NotImplemented "Instruction CMP not yet implemented."
	368 Move W21, W31
	369 Move X0, X20
	370 Call AdditionalLightsShadowCasterPass.SetupForEmptyRendering, X0, X1
	371 Move W21, W31
	372 Move X24, [X20+336]
	373 Move X28, [X31+104]
	374 Add X27, X20, 336
	375 Compare X24, 0
	376 JumpIfEqual {379}
	377 Move W8, [X24+24]
	378 NotImplemented "Instruction CMP not yet implemented."
	379 Move X8, 0x6B5000
	380 Move X8, [X8+2672]
	381 Move X0, [X8]
	382 Move W1, W21
	383 Call 0x1C17D6C
	384 Move X24, X0
	385 Move [X27], X0
	386 Move X9, [X20+320]
	387 Compare X9, 0
	388 JumpIfEqual {1404}
	389 Move W8, [X9+24]
	390 NotImplemented "Instruction CMP not yet implemented."
	391 Move X25, 0x6B5000
	392 Move X25, [X25+2664]
	393 Move X26, X31
	394 Add X19, X31, 624
	395 Add X22, X31, 320
	396 Move W23, 32
	397 Move X2, [X25]
	398 Add X8, X31, 320
	399 Move X0, X9
	400 Move W1, W26
	401 Call List`1<ShadowResolutionRequest>.get_Item, X0, X1
	402 Move V0, [X31+20]
	403 NotImplemented "Instruction LDUR not yet implemented."
	404 Move [X31+35], V0
	405 Move [X22+252], V1
	406 Compare X24, 0
	407 JumpIfEqual {1406}
	408 Move V0, [X31+35]
	409 NotImplemented "Instruction LDUR not yet implemented."
	410 Move [X31+39], V0
	411 Move [X19+12], V1
	412 Move W8, [X24+24]
	413 NotImplemented "Instruction CMP not yet implemented."
	414 NotImplemented "Instruction LDUR not yet implemented."
	415 Move V1, [X31+39]
	416 Add X8, X24, X23
	417 Move [X8+12], V0
	418 Move [X8], V1
	419 Move X9, [X20+320]
	420 Compare X9, 0
	421 JumpIfEqual {1404}
	422 NotImplemented "Instruction LDRSW not yet implemented."
	423 Move X24, [X27]
	424 Add X26, X26, 1
	425 Add X23, X23, 28
	426 NotImplemented "Instruction CMP not yet implemented."
	427 Compare X24, 0
	428 JumpIfEqual {1463}
	429 Move X8, [X24+24]
	430 Move X9, W8
	431 NotImplemented "Instruction CMP not yet implemented."
	432 Move W10, W21
	433 Move X10, W10
	434 Move W11, 28
	435 NotImplemented "Instruction MADD not yet implemented."
	436 Add X11, X11, 40
	437 NotImplemented "Instruction CMP not yet implemented."
	438 Add X10, X10, 1
	439 NotImplemented "Instruction CMP not yet implemented."
	440 Move [X11+28], W31
	441 Move X0, X20
	442 Move X1, X24
	443 Move W2, W31
	444 Move W3, W21
	445 Call AdditionalLightsShadowCasterPass.InsertionSort, X0, X1, X2, X3
	446 Move W8, [X20+224]
	447 Compare W8, 0
	448 JumpIfNotEqual {471}
	449 Move X8, 0x67A000
	450 Move X8, [X8+2216]
	451 Move X0, [X8]
	452 Move W8, [X0+224]
	453 Compare W8, 0
	454 JumpIfNotEqual {456}
	455 Call 0x1C17DFC
	456 Move X0, X31
	457 Call UniversalRenderPipeline.get_maxVisibleAdditionalLights
	458 Move X8, 0x651000
	459 Move X8, [X8+1448]
	460 Move W22, W0
	461 Move X0, [X8]
	462 Move W8, [X0+224]
	463 Compare W8, 0
	464 JumpIfNotEqual {466}
	465 Call 0x1C17DFC
	466 Move W0, W21
	467 Move W1, W22
	468 Move X2, X31
	469 Call Math.Min, X0, X1
	470 Move W21, W0
	471 NotImplemented "Instruction CMP not yet implemented."
	472 Move V0, [X31+5]
	473 Move W19, 28
	474 Move W23, 16
	475 Move W24, 8
	476 Move W22, S0
	477 Move TEMP, 5
	478 Not TEMP
	479 Move W25, TEMP
	480 Move X1, X27
	481 Move W2, W21
	482 Move W3, W22
	483 Call AdditionalLightsShadowCasterPass.EstimateScaleFactorNeededToFitAllShadowsInAtlas, X0, X1, X2, X3
	484 Move X8, [X27]
	485 Move W3, W0
	486 Compare X8, 0
	487 JumpIfEqual {1415}
	488 Move W10, [X8+24]
	489 Move X9, W21
	490 Subtract X9, X9, 1
	491 NotImplemented "Instruction CMP not yet implemented."
	492 NotImplemented "Instruction MADD not yet implemented."
	493 Move W11, [X10+44]
	494 Move W10, [X10+40]
	495 NotImplemented "Instruction CMP not yet implemented."
	496 NotImplemented "Instruction CSEL not yet implemented."
	497 Multiply W11, W11, W3
	498 NotImplemented "Instruction CMP not yet implemented."
	499 NotImplemented "Instruction MADD not yet implemented."
	500 Move W9, [X9+45]
	501 NotImplemented "Instruction CMP not yet implemented."
	502 NotImplemented "Instruction CSINV not yet implemented."
	503 Add W21, W9, W21
	504 NotImplemented "Instruction CMP not yet implemented."
	505 Move X8, [X27]
	506 Compare X8, 0
	507 JumpIfEqual {1484}
	508 Move W3, 1
	509 Move X9, [X8+24]
	510 Move W19, [X31+52]
	511 Move W11, W21
	512 Move X25, W11
	513 Move X10, W9
	514 NotImplemented "Instruction CMP not yet implemented."
	515 Move W11, 28
	516 NotImplemented "Instruction MADD not yet implemented."
	517 Add X11, X11, 40
	518 Move X12, X25
	519 NotImplemented "Instruction CMP not yet implemented."
	520 Add X12, X12, 1
	521 NotImplemented "Instruction CMP not yet implemented."
	522 Move [X11+28], W31
	523 Move X10, [X20+344]
	524 Compare X10, 0
	525 JumpIfEqual {1464}
	526 Move W11, [X10+24]
	527 Move X12, X11
	528 ShiftRight X12, 32
	529 And X12, X12, 0x7FFFFFFF
	530 NotImplemented "Instruction CMP not yet implemented."
	531 Move X12, X31
	532 Move X13, W11
	533 Add X14, X10, 32
	534 Move TEMP, 0
	535 Not TEMP
	536 Move W15, TEMP
	537 NotImplemented "Instruction CMP not yet implemented."
	538 Move [X14], W15
	539 Add X12, X12, 1
	540 NotImplemented "Instruction CMP not yet implemented."
	541 Subtract W12, W25, 1
	542 Move W13, 28
	543 Move W14, W12
	544 NotImplemented "Instruction CMP not yet implemented."
	545 NotImplemented "Instruction UMADDL not yet implemented."
	546 NotImplemented "Instruction LDRSW not yet implemented."
	547 NotImplemented "Instruction CMP not yet implemented."
	548 Add X15, X10, X15
	549 Move [X15+32], W14
	550 Subtract W14, W14, 1
	551 Move V0, [X31+5]
	552 Move W1, S0
	553 Move X0, X20
	554 Move W2, W25
	555 Call AdditionalLightsShadowCasterPass.AtlasLayout, X0, X1, X2, X3
	556 Move X8, [X20+264]
	557 Compare X8, 0
	558 JumpIfEqual {561}
	559 Move W8, [X8+24]
	560 NotImplemented "Instruction CMP not yet implemented."
	561 Move X8, 0x6B5000
	562 Move X8, [X8+2680]
	563 Move X0, [X8]
	564 Move W1, W25
	565 Call 0x1C17D6C
	566 Move [X20+264], X0
	567 Move X8, [X20+312]
	568 Compare X8, 0
	569 JumpIfEqual {575}
	570 Move W9, [X20+224]
	571 Compare W9, 0
	572 JumpIfEqual {581}
	573 Move W8, [X8+24]
	574 NotImplemented "Instruction CMP not yet implemented."
	575 Move X8, 0x655000
	576 Move X8, [X8+2440]
	577 Move X0, [X8]
	578 Move W1, W25
	579 Call 0x1C17D6C
	580 Move [X20+312], X0
	581 NotImplemented "Instruction CMP not yet implemented."
	582 Move W8, [X31+52]
	583 Move X22, 0x6B4000
	584 Move X22, [X22+2248]
	585 Move X19, X31
	586 Move W21, W8
	587 Move X0, [X22]
	588 Move X23, [X20+304]
	589 Move W8, [X0+224]
	590 Compare W8, 0
	591 JumpIfNotEqual {594}
	592 Call 0x1C17DFC
	593 Move X0, [X22]
	594 Compare X23, 0
	595 JumpIfEqual {1411}
	596 Move W8, [X23+24]
	597 NotImplemented "Instruction CMP not yet implemented."
	598 Move X8, [X0+184]
	599 NotImplemented "Instruction LDUR not yet implemented."
	600 Add X8, X23, X19
	601 Add X19, X19, 1
	602 NotImplemented "Instruction CMP not yet implemented."
	603 Move [X8+2], V0
	604 NotImplemented "Instruction CMP not yet implemented."
	605 Move X8, [X31+120]
	606 Move X19, [X31+72]
	607 Move W21, [X31+52]
	608 Move X9, X28
	609 Add X10, X8, 592
	610 Move [X31+32], X10
	611 Move W10, [X8+636]
	612 Move [X31+40], X27
	613 Move X27, X31
	614 Move W22, W31
	615 Move W28, W31
	616 Add X29, X8, 8
	617 And X8, X9, 0
	618 Move [X31+28], W10
	619 Move [X31+96], X8
	620 Move [X31+16], X25
	621 Move X8, 0x6B4000
	622 Move X8, [X8+3840]
	623 Move X3, [X8]
	624 Move X1, [X31+104]
	625 Move X0, X19
	626 Move W2, W27
	627 Call 0x2223228, X0, X1
	628 Move X8, [X31+112]
	629 Move W8, [X8]
	630 NotImplemented "Instruction CMP not yet implemented."
	631 Move X8, [X20+272]
	632 Compare X8, 0
	633 JumpIfEqual {1419}
	634 Move W9, [X8+24]
	635 NotImplemented "Instruction CMP not yet implemented."
	636 Add X8, X8, X27
	637 Move TEMP, 0
	638 Not TEMP
	639 Move W9, TEMP
	640 Move [X8+32], W9
	641 Move W9, W28
	642 Move X8, [X20+280]
	643 Compare X8, 0
	644 JumpIfEqual {1418}
	645 Move W9, [X8+24]
	646 Add W10, W28, 1
	647 Move [X31+80], W10
	648 NotImplemented "Instruction CMP not yet implemented."
	649 NotImplemented "Instruction CMP not yet implemented."
	650 Move X9, W28
	651 Add X8, X8, X9
	652 Move [X8+32], W27
	653 Move X8, [X20+272]
	654 Move [X31+64], X9
	655 Compare X8, 0
	656 JumpIfEqual {1435}
	657 Move W9, [X8+24]
	658 NotImplemented "Instruction CMP not yet implemented."
	659 Add X8, X8, X27
	660 Move [X8+32], W28
	661 Move X8, [X20+288]
	662 Compare X8, 0
	663 JumpIfEqual {1434}
	664 NotImplemented "Instruction CMP not yet implemented."
	665 Move W8, [X8+24]
	666 NotImplemented "Instruction CMP not yet implemented."
	667 Move X24, X0
	668 Move X1, X31
	669 Move [X31+56], W22
	670 Call VisibleLight.get_lightType, X0
	671 Move X8, [X20+288]
	672 NotImplemented "Instruction CMP not yet implemented."
	673 Move W9, 6
	674 NotImplemented "Instruction CSEL not yet implemented."
	675 NotImplemented "Instruction CMP not yet implemented."
	676 Move W19, W0
	677 NotImplemented "Instruction CSINC not yet implemented."
	678 Compare X8, 0
	679 JumpIfEqual {1438}
	680 Move W9, [X8+24]
	681 Add W9, W9, W22
	682 NotImplemented "Instruction CMP not yet implemented."
	683 Move X1, [X31+112]
	684 Move W2, W27
	685 Call AdditionalLightsShadowCasterPass.IsValidShadowCastingLight, X0, X1, X2
	686 Move TEMP, X0
	687 And TEMP, TEMP, 1
	688 Compare TEMP, 1
	689 JumpIfEqual {1398}
	690 Move X8, [X20+288]
	691 Compare X8, 0
	692 JumpIfEqual {1458}
	693 Compare W22, 0
	694 JumpIfEqual {1065}
	695 Move [X31+60], W19
	696 Compare X8, 0
	697 JumpIfEqual {1403}
	698 Move V0, [X8+24]
	699 Move W21, W31
	700 Move W19, W31
	701 Subtract W25, W22, 1
	702 NotImplemented "Instruction SCVTF not yet implemented."
	703 NotImplemented "Instruction LDRSW not yet implemented."
	704 Add X2, X31, 792
	705 Move X0, X29
	706 Move W1, W27
	707 Move X3, X31
	708 Call CullingResults.GetShadowCasterBounds, X0, X1, X2
	709 Move TEMP, X0
	710 And TEMP, TEMP, 1
	711 Compare TEMP, 1
	712 JumpIfNotEqual {1058}
	713 Move X8, [X31+120]
	714 Move W8, [X8+624]
	715 Compare W8, 0
	716 JumpIfEqual {1058}
	717 Move X1, [X31+112]
	718 Move W2, W27
	719 Call AdditionalLightsShadowCasterPass.IsValidShadowCastingLight, X0, X1, X2
	720 Move TEMP, X0
	721 And TEMP, TEMP, 1
	722 Compare TEMP, 1
	723 JumpIfNotEqual {1058}
	724 Move X8, [X20+344]
	725 Compare X8, 0
	726 JumpIfEqual {1424}
	727 Move W9, [X8+24]
	728 NotImplemented "Instruction CMP not yet implemented."
	729 Add X8, X8, X27
	730 NotImplemented "Instruction LDRSW not yet implemented."
	731 Add W31, W8, 1
	732 Move W9, [X31+60]
	733 Compare W9, 0
	734 JumpIfEqual {814}
	735 NotImplemented "Instruction CMP not yet implemented."
	736 Move X9, [X31+40]
	737 Move X9, [X9]
	738 Compare X9, 0
	739 JumpIfEqual {1457}
	740 Move W10, [X9+24]
	741 NotImplemented "Instruction CMP not yet implemented."
	742 Move W10, 28
	743 NotImplemented "Instruction MADD not yet implemented."
	744 Move W22, [X8+56]
	745 Move X0, X24
	746 Move X1, X31
	747 Call VisibleLight.get_light, X0
	748 Compare X0, 0
	749 JumpIfEqual {1456}
	750 Move X1, X31
	751 Call Light.get_shadows, X0
	752 Move X8, 0x6B4000
	753 Move X8, [X8+2248]
	754 Move W23, W0
	755 Move X0, [X8]
	756 Move W8, [X0+224]
	757 Compare W8, 0
	758 JumpIfNotEqual {760}
	759 Call 0x1C17DFC
	760 NotImplemented "Instruction CMP not yet implemented."
	761 NotImplemented "Instruction CSET not yet implemented."
	762 Move W0, W22
	763 Call AdditionalLightsShadowCasterPass.GetPointLightShadowFrustumFovBiasInDegrees, X0, X1
	764 Move X22, [X20+264]
	765 Compare X22, 0
	766 JumpIfEqual {1455}
	767 Move W8, [X22+24]
	768 NotImplemented "Instruction CMP not yet implemented."
	769 Move X8, 0x6B4000
	770 Move X8, [X8+3776]
	771 Move V8, V0
	772 Move X0, [X8]
	773 Move W8, [X0+224]
	774 Compare W8, 0
	775 JumpIfNotEqual {777}
	776 Call 0x1C17DFC
	777 Move W9, 456
	778 NotImplemented "Instruction MADD not yet implemented."
	779 NotImplemented "Instruction MADD not yet implemented."
	780 Add X5, X8, 32
	781 Add X6, X8, 96
	782 Add X7, X9, 236
	783 Move X1, [X31+32]
	784 Add X4, X31, 656
	785 Move X0, X29
	786 Move W2, W27
	787 Move W3, W21
	788 Move V0, V8
	789 Move [X31], X31
	790 Call ShadowUtils.ExtractPointLightMatrix, X0, X1, X2, X3, V0, X4, X5, X6, X7
	791 Move TEMP, X0
	792 And TEMP, TEMP, 1
	793 Compare TEMP, 1
	794 JumpIfNotEqual {1058}
	795 Move X0, [X20+288]
	796 Compare X0, 0
	797 JumpIfEqual {1482}
	798 Move X19, 0x652000
	799 Move W10, [X0+28]
	800 Move X8, [X0+16]
	801 Move X19, [X19+3600]
	802 Add W10, W10, 1
	803 Move X9, [X19]
	804 Move [X0+28], W10
	805 Compare X8, 0
	806 JumpIfEqual {1481}
	807 NotImplemented "Instruction LDRSW not yet implemented."
	808 Move W11, [X8+24]
	809 NotImplemented "Instruction CMP not yet implemented."
	810 Add W9, W10, 1
	811 Add X8, X8, X10
	812 Move [X0+24], W9
	813 Move [X8+32], W28
	814 Move X22, [X20+264]
	815 Compare X22, 0
	816 JumpIfEqual {1452}
	817 Move W8, [X22+24]
	818 NotImplemented "Instruction CMP not yet implemented."
	819 Move X8, 0x6B4000
	820 Move X8, [X8+3776]
	821 Move X0, [X8]
	822 Move W8, [X0+224]
	823 Compare W8, 0
	824 JumpIfNotEqual {826}
	825 Call 0x1C17DFC
	826 Move W9, 456
	827 NotImplemented "Instruction MADD not yet implemented."
	828 NotImplemented "Instruction MADD not yet implemented."
	829 Add X4, X8, 32
	830 Add X5, X8, 96
	831 Add X6, X9, 236
	832 Move X1, [X31+32]
	833 Add X3, X31, 720
	834 Move X0, X29
	835 Move W2, W27
	836 Move X7, X31
	837 Call ShadowUtils.ExtractSpotLightMatrix, X0, X1, X2, X3, X4, X5, X6
	838 Move TEMP, X0
	839 And TEMP, TEMP, 1
	840 Compare TEMP, 1
	841 JumpIfNotEqual {1058}
	842 Move X0, [X20+288]
	843 Compare X0, 0
	844 JumpIfEqual {1473}
	845 Move X19, 0x652000
	846 Move W10, [X0+28]
	847 Move X8, [X0+16]
	848 Move X19, [X19+3600]
	849 Add W10, W10, 1
	850 Move X9, [X19]
	851 Move [X0+28], W10
	852 Compare X8, 0
	853 JumpIfEqual {1472}
	854 NotImplemented "Instruction LDRSW not yet implemented."
	855 Move W11, [X8+24]
	856 NotImplemented "Instruction CMP not yet implemented."
	857 Add W9, W10, 1
	858 Add X8, X8, X10
	859 Move [X0+24], W9
	860 Move [X8+32], W28
	861 Move X8, [X9+32]
	862 Move X8, [X8+192]
	863 Move X2, [X8+112]
	864 Move W1, W28
	865 Call List`1<Int32>.AddWithResize, X0, X1
	866 Move X0, [X20+296]
	867 Compare X0, 0
	868 JumpIfEqual {1471}
	869 Move W10, [X0+28]
	870 Move X8, [X0+16]
	871 Move X9, [X19]
	872 Add W10, W10, 1
	873 Move [X0+28], W10
	874 Compare X8, 0
	875 JumpIfEqual {1470}
	876 NotImplemented "Instruction LDRSW not yet implemented."
	877 Move W11, [X8+24]
	878 NotImplemented "Instruction CMP not yet implemented."
	879 Add W9, W10, 1
	880 Add X8, X8, X10
	881 Move [X0+24], W9
	882 Move [X8+32], W21
	883 Move X8, [X9+32]
	884 Move X8, [X8+192]
	885 Move X2, [X8+112]
	886 Move W1, W21
	887 Call List`1<Int32>.AddWithResize, X0, X1
	888 Move X0, X24
	889 Move X1, X31
	890 Call VisibleLight.get_light, X0
	891 Move X22, X0
	892 Compare X0, 0
	893 JumpIfEqual {1469}
	894 Move X0, X22
	895 Move X1, X31
	896 Call Light.get_shadowStrength, X0
	897 Move W8, [X31+28]
	898 Move V8, V0
	899 Compare W8, 0
	900 JumpIfEqual {951}
	901 Move X0, X22
	902 Move X1, X31
	903 Call Light.get_shadows, X0
	904 NotImplemented "Instruction CMP not yet implemented."
	905 NotImplemented "Instruction CSET not yet implemented."
	906 Move X8, [X9+32]
	907 Move X8, [X8+192]
	908 Move X2, [X8+112]
	909 Move W1, W28
	910 Call List`1<Int32>.AddWithResize, X0, X1
	911 Move X0, [X20+296]
	912 Compare X0, 0
	913 JumpIfEqual {1480}
	914 Move W10, [X0+28]
	915 Move X8, [X0+16]
	916 Move X9, [X19]
	917 Add W10, W10, 1
	918 Move [X0+28], W10
	919 Compare X8, 0
	920 JumpIfEqual {1479}
	921 NotImplemented "Instruction LDRSW not yet implemented."
	922 Move W11, [X8+24]
	923 NotImplemented "Instruction CMP not yet implemented."
	924 Add W9, W10, 1
	925 Add X8, X8, X10
	926 Move [X0+24], W9
	927 Move [X8+32], W21
	928 Move X8, [X9+32]
	929 Move X8, [X8+192]
	930 Move X2, [X8+112]
	931 Move W1, W21
	932 Call List`1<Int32>.AddWithResize, X0, X1
	933 Move X0, X24
	934 Move X1, X31
	935 Call VisibleLight.get_light, X0
	936 Move X22, X0
	937 Compare X0, 0
	938 JumpIfEqual {1478}
	939 Move X0, X22
	940 Move X1, X31
	941 Call Light.get_shadowStrength, X0
	942 Move W8, [X31+28]
	943 Move V8, V0
	944 Compare W8, 0
	945 JumpIfEqual {1003}
	946 Move X0, X22
	947 Move X1, X31
	948 Call Light.get_shadows, X0
	949 NotImplemented "Instruction CMP not yet implemented."
	950 NotImplemented "Instruction CSET not yet implemented."
	951 Move W23, W31
	952 Move X8, 0x6B4000
	953 Move X8, [X8+3776]
	954 Move X0, [X8]
	955 Move W8, [X0+224]
	956 Compare W8, 0
	957 JumpIfNotEqual {959}
	958 Call 0x1C17DFC
	959 Move X0, X22
	960 Move W1, W23
	961 Move X2, X31
	962 Call ShadowUtils.SoftShadowQualityToShaderProperty, X0, X1
	963 Move X8, [X20+312]
	964 Move V1, [X31+720]
	965 Move V2, [X31+736]
	966 Move V3, [X31+752]
	967 Move V4, [X31+768]
	968 Move [X31+560], V1
	969 Move [X31+568], V2
	970 Move [X31+592], V3
	971 Move [X31+600], V4
	972 Compare X8, 0
	973 JumpIfEqual {1468}
	974 Move V1, [X31+560]
	975 Move V2, [X31+576]
	976 Move V3, [X31+592]
	977 Move V4, [X31+608]
	978 Move [X31+496], V1
	979 Move [X31+504], V2
	980 Move [X31+528], V3
	981 Move [X31+536], V4
	982 Move W9, [X8+24]
	983 NotImplemented "Instruction CMP not yet implemented."
	984 Move V1, [X31+528]
	985 Move V2, [X31+544]
	986 Move V3, [X31+496]
	987 Move V4, [X31+512]
	988 Add X8, X8, X26
	989 Move [X8+64], V1
	990 Move [X8+72], V2
	991 Move [X8+32], V3
	992 Move [X8+40], V4
	993 Move X8, [X20+304]
	994 Compare X8, 0
	995 JumpIfEqual {1467}
	996 Move W9, [X8+24]
	997 NotImplemented "Instruction CMP not yet implemented."
	998 Move X9, [X31+64]
	999 Add X8, X8, X9
	1000 Move [X8+32], S8
	1001 Move [X8+40], S0
	1002 Move [X8+40], W31
	1003 Move W23, W31
	1004 Move X8, 0x6B4000
	1005 Move X8, [X8+3776]
	1006 Move X0, [X8]
	1007 Move W8, [X0+224]
	1008 Compare W8, 0
	1009 JumpIfNotEqual {1011}
	1010 Call 0x1C17DFC
	1011 Move X0, X22
	1012 Move W1, W23
	1013 Move X2, X31
	1014 Call ShadowUtils.SoftShadowQualityToShaderProperty, X0, X1
	1015 Move X8, [X20+312]
	1016 Move V1, [X31+656]
	1017 Move V2, [X31+672]
	1018 Move V3, [X31+688]
	1019 Move V4, [X31+704]
	1020 Move [X31+560], V1
	1021 Move [X31+568], V2
	1022 Move [X31+592], V3
	1023 Move [X31+600], V4
	1024 Compare X8, 0
	1025 JumpIfEqual {1477}
	1026 Move V1, [X31+560]
	1027 Move V2, [X31+576]
	1028 Move V3, [X31+592]
	1029 Move V4, [X31+608]
	1030 Move [X31+432], V1
	1031 Move [X31+440], V2
	1032 Move [X31+464], V3
	1033 Move [X31+472], V4
	1034 Move W9, [X8+24]
	1035 NotImplemented "Instruction CMP not yet implemented."
	1036 Move V1, [X31+464]
	1037 Move V2, [X31+480]
	1038 Move V3, [X31+432]
	1039 Move V4, [X31+448]
	1040 Add X8, X8, X26
	1041 Move [X8+64], V1
	1042 Move [X8+72], V2
	1043 Move [X8+32], V3
	1044 Move [X8+40], V4
	1045 Move X8, [X20+304]
	1046 Compare X8, 0
	1047 JumpIfEqual {1476}
	1048 Move W9, [X8+24]
	1049 NotImplemented "Instruction CMP not yet implemented."
	1050 Move X9, [X31+64]
	1051 Add X8, X8, X9
	1052 Move W9, 0x3F800000
	1053 Move [X8+32], S8
	1054 Move [X8+40], S0
	1055 Move [X8+40], W9
	1056 Move W19, 1
	1057 Move [X8+44], S9
	1058 NotImplemented "Instruction CMP not yet implemented."
	1059 Move X8, [X20+288]
	1060 Add W21, W21, 1
	1061 Compare X8, 0
	1062 JumpIfNotEqual {703}
	1063 Move W21, [X31+52]
	1064 Move X25, [X31+16]
	1065 Move W19, W31
	1066 Move W22, [X31+56]
	1067 And W8, W19, 1
	1068 Move X19, [X31+72]
	1069 Add W22, W22, W8
	1070 Move W9, [X31+80]
	1071 Move X8, [X31+96]
	1072 Add X27, X27, 1
	1073 Move W28, W9
	1074 NotImplemented "Instruction CMP not yet implemented."
	1075 Move X29, [X31+40]
	1076 Compare W22, 0
	1077 JumpIfEqual {1101}
	1078 Move X8, [X20+288]
	1079 Compare X8, 0
	1080 JumpIfEqual {1483}
	1081 Move W23, [X8+24]
	1082 NotImplemented "Instruction CMP not yet implemented."
	1083 Move X11, [X29]
	1084 Compare X11, 0
	1085 JumpIfEqual {1485}
	1086 Move W9, [X11+24]
	1087 Move X8, X31
	1088 And X10, X25, 0
	1089 Add X11, X11, 56
	1090 NotImplemented "Instruction MOVI not yet implemented."
	1091 NotImplemented "Instruction CMP not yet implemented."
	1092 NotImplemented "Instruction LDUR not yet implemented."
	1093 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	1094 Add X8, X8, 1
	1095 NotImplemented "Instruction CMP not yet implemented."
	1096 Add X11, X11, 28
	1097 Add S1, S2, S1
	1098 NotImplemented "Instruction SMAX not yet implemented."
	1099 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	1100 Move W0, S0
	1101 Move X1, [X31+120]
	1102 Move X0, X20
	1103 Call AdditionalLightsShadowCasterPass.SetupForEmptyRendering, X0, X1
	1104 Move W21, W0
	1105 Move W21, W31
	1106 Move W0, W31
	1107 Move X1, X31
	1108 Call Mathf.NextPowerOfTwo, X0
	1109 Move [X20+360], W0
	1110 Move W0, W21
	1111 Move X1, X31
	1112 Call Mathf.NextPowerOfTwo, X0
	1113 Move W24, [X20+360]
	1114 Move W22, W0
	1115 NotImplemented "Instruction CMP not yet implemented."
	1116 Move [X20+364], W0
	1117 Move X28, 0x67A000
	1118 Move X19, 0x657000
	1119 Move X10, -50040832
	1120 Add X8, X31, 560
	1121 Move X28, [X28+3896]
	1122 Move X19, [X19+1208]
	1123 Move V13, [X10+576]
	1124 Add X9, X31, 256
	1125 Or X11, X8, 7
	1126 Add X8, X8, 24
	1127 NotImplemented "Instruction SCVTF not yet implemented."
	1128 Move S8, 1
	1129 NotImplemented "Instruction SCVTF not yet implemented."
	1130 Move [X31+104], X8
	1131 Move [X31+112], X11
	1132 Or X8, X9, 7
	1133 Move X21, X31
	1134 Move W26, 32
	1135 Move W27, 224
	1136 Move X22, 0x936000
	1137 Move S9, W31
	1138 Move S10, 8
	1139 NotImplemented "Instruction FDIV not yet implemented."
	1140 NotImplemented "Instruction FDIV not yet implemented."
	1141 Move [X31+96], X8
	1142 Add X8, X9, 24
	1143 Move S14, -1
	1144 Move [X31+80], X8
	1145 Move [X31+72], X23
	1146 Move X0, [X20+288]
	1147 Compare X0, 0
	1148 JumpIfEqual {1422}
	1149 Move X2, [X28]
	1150 Move W1, W21
	1151 Call List`1<Int32>.get_Item, X0, X1
	1152 Move X8, [X20+304]
	1153 Compare X8, 0
	1154 JumpIfEqual {1423}
	1155 Move W9, [X8+24]
	1156 Move W25, W0
	1157 NotImplemented "Instruction CMP not yet implemented."
	1158 Move X24, W25
	1159 Add X8, X8, X24
	1160 Move W9, [X22+1450]
	1161 Move V15, [X8+32]
	1162 Compare W9, 0
	1163 JumpIfNotEqual {1168}
	1164 Move X0, X19
	1165 Call 0x1C17CF4
	1166 Move W8, 1
	1167 Move [X22+1450], W8
	1168 Move X8, [X19]
	1169 NotImplemented "Instruction FABS not yet implemented."
	1170 NotImplemented "Instruction FMAXNM not yet implemented."
	1171 Multiply S1, S1, S13
	1172 Move X8, [X8+184]
	1173 NotImplemented "Instruction FABD not yet implemented."
	1174 Move V0, [X8]
	1175 Multiply S0, S0, S10
	1176 NotImplemented "Instruction FCMP not yet implemented."
	1177 NotImplemented "Instruction FCSEL not yet implemented."
	1178 NotImplemented "Instruction FCMP not yet implemented."
	1179 Move X8, [X20+304]
	1180 Compare X8, 0
	1181 JumpIfEqual {1437}
	1182 Move W9, [X8+24]
	1183 NotImplemented "Instruction CMP not yet implemented."
	1184 Add X8, X8, X24
	1185 Move V1, [X8+44]
	1186 NotImplemented "Instruction FABS not yet implemented."
	1187 NotImplemented "Instruction FMAXNM not yet implemented."
	1188 Multiply S2, S2, S13
	1189 NotImplemented "Instruction FCMP not yet implemented."
	1190 NotImplemented "Instruction FCSEL not yet implemented."
	1191 NotImplemented "Instruction FABD not yet implemented."
	1192 NotImplemented "Instruction FCMP not yet implemented."
	1193 Move X9, [X20+280]
	1194 Compare X9, 0
	1195 JumpIfEqual {1442}
	1196 Move W8, [X9+24]
	1197 NotImplemented "Instruction CMP not yet implemented."
	1198 Move X8, [X20+344]
	1199 Compare X8, 0
	1200 JumpIfEqual {1440}
	1201 Add X9, X9, X24
	1202 NotImplemented "Instruction LDRSW not yet implemented."
	1203 Move W10, [X8+24]
	1204 NotImplemented "Instruction CMP not yet implemented."
	1205 Move X0, [X20+296]
	1206 Compare X0, 0
	1207 JumpIfEqual {1439}
	1208 Add X8, X8, X9
	1209 Move X23, X19
	1210 Move W19, [X8+32]
	1211 Move X2, [X28]
	1212 Move W1, W21
	1213 Call List`1<Int32>.get_Item, X0, X1
	1214 Move X8, [X29]
	1215 Compare X8, 0
	1216 JumpIfEqual {1449}
	1217 Move W10, [X8+24]
	1218 Add W9, W0, W19
	1219 NotImplemented "Instruction CMP not yet implemented."
	1220 Move W10, 28
	1221 NotImplemented "Instruction SMADDL not yet implemented."
	1222 Move X9, 0x935000
	1223 Move W9, [X9+2752]
	1224 Move W24, [X8+48]
	1225 Move W25, [X8+52]
	1226 Move W19, [X8+56]
	1227 Compare W9, 0
	1228 JumpIfNotEqual {1235}
	1229 Move X0, 0x654000
	1230 Move X0, [X0+624]
	1231 Call 0x1C17CF4
	1232 Move W8, 1
	1233 Move X9, 0x935000
	1234 Move [X9+2752], W8
	1235 Move X8, 0x654000
	1236 Move X8, [X8+624]
	1237 Move X8, [X8]
	1238 Move X8, [X8+184]
	1239 Move X9, [X8+112]
	1240 Move V2, [X8+80]
	1241 Move V0, [X8+96]
	1242 Move V1, [X8+4]
	1243 Move [X31+608], X9
	1244 Move X9, [X31+112]
	1245 Move [X31+576], V2
	1246 Move [X31+584], V0
	1247 Move [X31+35], V1
	1248 Move X8, [X8+120]
	1249 Move V0, [X9]
	1250 Move X9, [X31+104]
	1251 Move [X31+53], V0
	1252 Move V1, [X9]
	1253 Move X9, [X9+16]
	1254 Move [X31+51], V1
	1255 Move [X31+832], X9
	1256 Move X9, [X20+264]
	1257 Compare X9, 0
	1258 JumpIfEqual {1448}
	1259 Move W10, [X9+24]
	1260 NotImplemented "Instruction CMP not yet implemented."
	1261 Add X9, X9, X27
	1262 Move [X9], W24
	1263 Move [X9+4], W25
	1264 Move [X9+8], W19
	1265 Move X29, [X20+312]
	1266 Move V0, [X31+53]
	1267 Move V1, [X31+51]
	1268 Move X9, [X31+832]
	1269 Move [X31+26], V0
	1270 Move [X31+24], V1
	1271 Move [X31+400], X9
	1272 Compare X29, 0
	1273 JumpIfEqual {1446}
	1274 Move W9, [X29+24]
	1275 NotImplemented "Instruction CMP not yet implemented."
	1276 Move V2, [X31+26]
	1277 Move X9, [X31+96]
	1278 NotImplemented "Instruction SCVTF not yet implemented."
	1279 Add X19, X29, X26
	1280 Multiply S3, S11, S0
	1281 Move V4, [X19]
	1282 Move V5, [X19+16]
	1283 Move V6, [X19+32]
	1284 Move V7, [X19+48]
	1285 Move [X31+256], S3
	1286 Move [X9], V2
	1287 Move V2, [X31+24]
	1288 Move X9, [X31+400]
	1289 Move X10, [X31+80]
	1290 NotImplemented "Instruction SCVTF not yet implemented."
	1291 NotImplemented "Instruction SCVTF not yet implemented."
	1292 Multiply S0, S12, S0
	1293 Multiply S1, S11, S1
	1294 Multiply S3, S12, S3
	1295 Move [X31+592], V6
	1296 Move [X31+600], V7
	1297 Move [X31+560], V4
	1298 Move [X31+568], V5
	1299 Move [X31+276], S0
	1300 Move [X10+16], X9
	1301 Move [X10], V2
	1302 Move [X31+304], S1
	1303 Move [X31+308], S3
	1304 Move V0, [X31+560]
	1305 Move V1, [X31+576]
	1306 Move V3, [X31+592]
	1307 Move V2, [X31+608]
	1308 Move [X31+312], X8
	1309 Move [X31+192], V0
	1310 Move [X31+200], V1
	1311 Move [X31+224], V3
	1312 Move [X31+232], V2
	1313 Add X8, X31, 320
	1314 Add X0, X31, 256
	1315 Add X1, X31, 192
	1316 Move X2, X31
	1317 Call Matrix4x4.op_Multiply, X0, X1
	1318 Move V0, [X31+320]
	1319 Move V1, [X31+336]
	1320 Move V2, [X31+352]
	1321 Move V3, [X31+368]
	1322 Move [X31+128], V0
	1323 Move [X31+136], V1
	1324 Move [X31+160], V2
	1325 Move [X31+168], V3
	1326 Move W8, [X29+24]
	1327 NotImplemented "Instruction CMP not yet implemented."
	1328 Move V1, [X31+160]
	1329 Move V0, [X31+176]
	1330 Move V3, [X31+128]
	1331 Move V2, [X31+144]
	1332 Move X29, [X31+40]
	1333 Move [X19+32], V1
	1334 Move [X19+40], V0
	1335 Move [X19], V3
	1336 Move [X19+8], V2
	1337 Move X19, X23
	1338 Move X23, [X31+72]
	1339 Add X21, X21, 1
	1340 Add X26, X26, 64
	1341 NotImplemented "Instruction CMP not yet implemented."
	1342 Add X27, X27, 456
	1343 Move W24, [X20+360]
	1344 Move W22, [X20+364]
	1345 Move X8, 0x6B3000
	1346 Move X8, [X8+3776]
	1347 Move X0, [X8]
	1348 Move W8, [X0+224]
	1349 Compare W8, 0
	1350 JumpIfNotEqual {1352}
	1351 Call 0x1C17DFC
	1352 Move X8, 0x6B4000
	1353 Move X8, [X8+2568]
	1354 Add X0, X20, 232
	1355 Move X5, [X8]
	1356 Move S0, W31
	1357 Move W3, 16
	1358 Move W4, 1
	1359 Move W1, W24
	1360 Move W2, W22
	1361 Move X6, X31
	1362 Move W21, 1
	1363 Call ShadowUtils.ShadowRTReAllocateIfNeeded, X0, X1, X2, X3, X4, V0, X5
	1364 Move X8, [X31+120]
	1365 Move V0, [X8+412]
	1366 Multiply S0, S0, S0
	1367 Move [X20+256], S0
	1368 Move V0, [X8+620]
	1369 Move [X20+240], W31
	1370 Move [X20+66], W21
	1371 Move [X20+260], S0
	1372 Add X0, X31, 872
	1373 Move X1, X31
	1374 Call ProfilingScope.Dispose, X0
	1375 And W0, W21, 1
	1376 Add X31, X31, 880
	1377 Move X20, [X31+144]
	1378 Move X19, [X31+152]
	1379 Move X22, [X31+128]
	1380 Move X21, [X31+136]
	1381 Move X24, [X31+112]
	1382 Move X23, [X31+120]
	1383 Move X26, [X31+96]
	1384 Move X25, [X31+104]
	1385 Move X28, [X31+80]
	1386 Move X27, [X31+88]
	1387 Move X29, [X31+64]
	1388 Move X30, [X31+72]
	1389 Move D9, [X31+48]
	1390 Move D8, [X31+56]
	1391 Move D11, [X31+32]
	1392 Move D10, [X31+40]
	1393 Move D13, [X31+16]
	1394 Move D12, [X31+24]
	1395 Move D15, [X31+160]
	1396 Move D14, [X31+168]
	1397 Return X0
	1398 Move W22, [X31+56]
	1399 Call 0x1C17F20
	1400 Call 0x1C17F20
	1401 Call 0x1C17F20
	1402 Call 0x1C17F20
	1403 Call 0x1C17F20
	1404 Call 0x1C17F20
	1405 Call 0x1C17F28
	1406 Call 0x1C17F20
	1407 Call 0x1C17F28
	1408 Call 0x1C17F28
	1409 Call 0x1C17F28
	1410 Call 0x1C17F28
	1411 Call 0x1C17F20
	1412 Call 0x1C17F28
	1413 Call 0x1C17F28
	1414 Call 0x1C17F28
	1415 Call 0x1C17F20
	1416 Call 0x1C17F28
	1417 Call 0x1C17F28
	1418 Call 0x1C17F20
	1419 Call 0x1C17F20
	1420 Call 0x1C17F28
	1421 Call 0x1C17F28
	1422 Call 0x1C17F20
	1423 Call 0x1C17F20
	1424 Call 0x1C17F20
	1425 Call 0x1C17F28
	1426 Call 0x1C17F20
	1427 Call 0x1C17F28
	1428 Call 0x1C17F20
	1429 Call 0x1C17F20
	1430 Call 0x1C17F20
	1431 Call 0x1C17F20
	1432 Call 0x1C17F28
	1433 Call 0x1C17F28
	1434 Call 0x1C17F20
	1435 Call 0x1C17F20
	1436 Call 0x1C17F28
	1437 Call 0x1C17F20
	1438 Call 0x1C17F20
	1439 Call 0x1C17F20
	1440 Call 0x1C17F20
	1441 Call 0x1C17F28
	1442 Call 0x1C17F20
	1443 Call 0x1C17F28
	1444 Call 0x1C17F28
	1445 Call 0x1C17F28
	1446 Call 0x1C17F20
	1447 Call 0x1C17F28
	1448 Call 0x1C17F20
	1449 Call 0x1C17F20
	1450 Call 0x1C17F28
	1451 Call 0x1C17F28
	1452 Call 0x1C17F20
	1453 Call 0x1C17F28
	1454 Call 0x1C17F28
	1455 Call 0x1C17F20
	1456 Call 0x1C17F20
	1457 Call 0x1C17F20
	1458 Call 0x1C17F20
	1459 Call 0x1C17F20
	1460 Call 0x1C17F20
	1461 Call 0x1C17F20
	1462 Call 0x1C17F20
	1463 Call 0x1C17F20
	1464 Call 0x1C17F20
	1465 Call 0x1C17F28
	1466 Call 0x1C17F28
	1467 Call 0x1C17F20
	1468 Call 0x1C17F20
	1469 Call 0x1C17F20
	1470 Call 0x1C17F20
	1471 Call 0x1C17F20
	1472 Call 0x1C17F20
	1473 Call 0x1C17F20
	1474 Call 0x1C17F28
	1475 Call 0x1C17F28
	1476 Call 0x1C17F20
	1477 Call 0x1C17F20
	1478 Call 0x1C17F20
	1479 Call 0x1C17F20
	1480 Call 0x1C17F20
	1481 Call 0x1C17F20
	1482 Call 0x1C17F20
	1483 Call 0x1C17F20
	1484 Call 0x1C17F20
	1485 Call 0x1C17F20
	1486 Move X19, X0
	1487 Move X19, X0
	1488 NotImplemented "Instruction CMP not yet implemented."
	1489 Move X0, X19
	1490 Call 0x3EB2AD0
	1491 Move X20, [X0]
	1492 Call 0x3EB2AE0
	1493 Add X0, X31, 872
	1494 Move X1, X31
	1495 Call ProfilingScope.Dispose, X0
	1496 Compare X20, 0
	1497 JumpIfNotEqual {1500}
	1498 Move W21, W31
	1499 Move X20, X31
	1500 Move X0, X20
	1501 Call 0x1C17F18
	1502 Move X19, X0
	1503 Add X0, X31, 872
	1504 Move X1, X31
	1505 Call ProfilingScope.Dispose, X0
	1506 Compare X20, 0
	1507 JumpIfNotEqual {1510}
	1508 Move X0, X19
	1509 Call 0x1D2D690
	1510 Move X0, X20
	1511 Call 0x1C17F18
	1512 Call 0x1991590

Method: System.Boolean SetupForEmptyRendering(ref UnityEngine.Rendering.Universal.RenderingData renderingData)

Disassembly:
	0x03AA4814 BL 0x1C16CF4
	0x03AA4818 MOVZ W8, 0x1
	0x03AA481C STRB W8, [X22 + 0x407]
	0x03AA4820 MOVI V0.2D, 0x0
	0x03AA4824 STR X31, [X31 + 0x1C8]
	0x03AA4828 STR X31, [X31 + 0x198]
	0x03AA482C STR X31, [X31 + 0x168]
	0x03AA4830 STR W31, [X31 + 0x160]
	0x03AA4834 STR W31, [X31 + 0x120]
	0x03AA4838 STP V0, V0, [X31 + 0x1A0]
	0x03AA483C STP V0, V0, [X31 + 0x170]
	0x03AA4840 STP V0, V0, [X31 + 0x140]
	0x03AA4844 STR V0, [X31 + 0x13]
	0x03AA4848 STP V0, V0, [X31 + 0x100]
	0x03AA484C STR V0, [X31 + 0xF]
	0x03AA4850 CBZ X21, 0x3AA4C08
	0x03AA4854 ADRP X8, 0x6B3000
	0x03AA4858 ADRP X26, 0x6B3000
	0x03AA485C LDR X8, [X8 + 0xAC8]
	0x03AA4860 LDR X26, [X26 + 0xAA0]
	0x03AA4864 LDR X3, [X20 + 0x38]
	0x03AA4868 ADRP X25, 0x6B3000
	0x03AA486C LDR X1, [X8]
	0x03AA4870 LDR X4, [X26]
	0x03AA4874 ADRP X24, 0x6B3000
	0x03AA4878 LDR X25, [X25 + 0xAB8]
	0x03AA487C LDR X24, [X24 + 0xA98]
	0x03AA4880 ADD X8, X31, 0x70
	0x03AA4884 ADD X2, X31, 0x198
	0x03AA4888 MOV X0, X21
	0x03AA488C BL 0x2240F24
	0x03AA4890 LDP V0, V1, [X31 + 0x70]
	0x03AA4894 STP V0, V1, [X31 + 0x1A0]
	0x03AA4898 ADD X1, X31, 0x198
	0x03AA489C ADD X3, X31, 0x1D8
	0x03AA48A0 MOV X0, X20
	0x03AA48A4 MOV X2, X19
	0x03AA48A8 BL 0x3AA4D2C
	0x03AA48AC LDRB W8, [X20 + 0xF0]
	0x03AA48B0 CBNZ W8, 0x3AA49F4
	0x03AA48B4 LDR X8, [X20 + 0xE8]
	0x03AA48B8 CBZ X8, 0x3AA4C18
	0x03AA48BC LDR X0, [X8 + 0x18]
	0x03AA48C0 CBZ X0, 0x3AA4C1C
	0x03AA48C4 LDR X27, [X31 + 0x198]
	0x03AA48C8 ADD X8, X31, 0x38
	0x03AA48CC MOV X1, X31
	0x03AA48D0 BL 0x3C21334
	0x03AA48D4 ADRP X22, 0x6B2000
	0x03AA48D8 LDUR V0, [X31 + 0x38]
	0x03AA48DC LDUR V1, [X31 + 0x48]
	0x03AA48E0 LDUR V2, [X31 + 0x58]
	0x03AA48E4 LDR W8, [X31 + 0x68]
	0x03AA48E8 LDR X22, [X22 + 0xEC0]
	0x03AA48EC STP V0, V1, [X31 + 0x70]
	0x03AA48F0 STR V2, [X31 + 0x9]
	0x03AA48F4 STR W8, [X31 + 0xA0]
	0x03AA48F8 LDR X0, [X22]
	0x03AA48FC LDR W8, [X0 + 0xE0]
	0x03AA4900 CBNZ W8, 0x3AA490C
	0x03AA4904 BL 0x1C16DFC
	0x03AA4908 LDR X0, [X22]
	0x03AA490C LDR X8, [X0 + 0xB8]
	0x03AA4910 LDRB W9, [X8]
	0x03AA4914 ADRP X8, 0x6B3000
	0x03AA4918 LDR X8, [X8 + 0xAD0]
	0x03AA491C CBZ W9, 0x3AA4944
	0x03AA4920 LDP V0, V1, [X31 + 0x70]
	0x03AA4924 LDR V2, [X31 + 0x9]
	0x03AA4928 LDR W10, [X31 + 0xA0]
	0x03AA492C MOV W22, W31
	0x03AA4930 ADD X9, X31, 0x130
	0x03AA4934 STP V0, V1, [X31 + 0x130]
	0x03AA4938 STR V2, [X31 + 0x15]
	0x03AA493C STR W10, [X31 + 0x160]
	0x03AA4940 B 0x3AA4964

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0x93F000
	008 Move W8, [X21+1024]
	009 Move X20, X1
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {26}
	015 Move X0, 0x6B3000
	016 Move X0, [X0+2248]
	017 Call 0x1C17CF4
	018 Move X0, 0x6B3000
	019 Move X0, [X0+3776]
	020 Call 0x1C17CF4
	021 Move X0, 0x6B4000
	022 Move X0, [X0+2688]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X21+1024], W8
	026 Move X8, [X20+464]
	027 Compare X8, 0
	028 JumpIfEqual {79}
	029 Move W21, [X8+422]
	030 Compare W21, 0
	031 JumpIfEqual {80}
	032 Move X8, 0x6B3000
	033 Move X8, [X8+3776]
	034 Move W23, 1
	035 Move [X20+664], W23
	036 Move X22, 0x6B4000
	037 Move X0, [X8]
	038 Add X20, X19, 248
	039 Move W8, [X0+224]
	040 Move X22, [X22+2688]
	041 Compare W8, 0
	042 JumpIfNotEqual {44}
	043 Call 0x1C17DFC
	044 Move X5, [X22]
	045 Move S0, W31
	046 Move W1, 1
	047 Move W2, 1
	048 Move W3, 16
	049 Move W4, 1
	050 Move X0, X20
	051 Move X6, X31
	052 Call ShadowUtils.ShadowRTReAllocateIfNeeded, X0, X1, X2, X3, X4, V0, X5
	053 Move X22, [X19+304]
	054 Move [X19+240], W23
	055 Move [X19+66], W31
	056 Compare X22, 0
	057 JumpIfEqual {79}
	058 Move X23, 0x6B3000
	059 Move X23, [X23+2248]
	060 Move X20, X31
	061 Move W8, [X22+24]
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Move X0, [X23]
	064 Move W9, [X0+224]
	065 Compare W9, 0
	066 JumpIfNotEqual {70}
	067 Call 0x1C17DFC
	068 Move X0, [X23]
	069 Move W8, [X22+24]
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Move X8, [X0+184]
	072 NotImplemented "Instruction LDUR not yet implemented."
	073 Add X8, X22, X20
	074 Add X20, X20, 1
	075 Move [X8+2], V0
	076 Move X22, [X19+304]
	077 Compare X22, 0
	078 JumpIfNotEqual {61}
	079 Call 0x1C17F20
	080 NotImplemented "Instruction CMP not yet implemented."
	081 Move X20, [X31+32]
	082 Move X19, [X31+40]
	083 Move X22, [X31+16]
	084 Move X21, [X31+24]
	085 NotImplemented "Instruction CSET not yet implemented."
	086 Move X30, [X31+48]
	087 Move X23, [X31+56]
	088 Return X0
	089 Call 0x1C17F28

Method: System.Void Configure(UnityEngine.Rendering.CommandBuffer cmd, UnityEngine.RenderTextureDescriptor cameraTextureDescriptor)

Disassembly:
	0x03AA49CC BL 0x3A87660
	0x03AA49D0 CBZ X27, 0x3AA4C20
	0x03AA49D4 STR X0, [X27 + 0x20]
	0x03AA49D8 LDR X8, [X31 + 0x198]
	0x03AA49DC CBZ X8, 0x3AA4C24
	0x03AA49E0 ADD X1, X8, 0x20
	0x03AA49E4 ADD X0, X31, 0x1A0
	0x03AA49E8 MOVZ W2, 0x2
	0x03AA49EC MOV X3, X31
	0x03AA49F0 BL 0x3996A00
	0x03AA49F4 ADD X0, X31, 0x1A0
	0x03AA49F8 MOV W1, W31
	0x03AA49FC MOV X2, X31
	0x03AA4A00 BL 0x398E404
	0x03AA4A04 LDR X8, [X25]
	0x03AA4A08 LDR W9, [X8 + 0xE0]
	0x03AA4A0C CBNZ W9, 0x3AA4A1C
	0x03AA4A10 MOV X0, X8
	0x03AA4A14 BL 0x1C16DFC

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move W8, [X0+240]
	004 Move W9, 248
	005 Move X2, X31
	006 Move X19, X0
	007 NotImplemented "Instruction CMP not yet implemented."
	008 Move W8, 232
	009 NotImplemented "Instruction CSEL not yet implemented."
	010 Move X1, [X0]
	011 Call ScriptableRenderPass.ConfigureTarget, X0, X1
	012 Move S0, W31
	013 Move S1, W31
	014 Move S2, W31
	015 Move S3, 1
	016 Move W1, 7
	017 Move X0, X19
	018 Move X2, X31
	019 Move X30, [X31+16]
	020 Move X19, [X31+24]
	021 Call ScriptableRenderPass.ConfigureClear, X0, X1, X2
	022 Return 

Method: System.Void Execute(UnityEngine.Rendering.ScriptableRenderContext context, ref UnityEngine.Rendering.Universal.RenderingData renderingData)

Disassembly:
	0x03AA4A18 LDR X8, [X25]
	0x03AA4A1C LDR X9, [X8 + 0xB8]
	0x03AA4A20 LDR X22, [X9 + 0x8]
	0x03AA4A24 CBNZ X22, 0x3AA4A7C
	0x03AA4A28 LDR W9, [X8 + 0xE0]
	0x03AA4A2C CBNZ W9, 0x3AA4A3C
	0x03AA4A30 MOV X0, X8
	0x03AA4A34 BL 0x1C16DFC
	0x03AA4A38 LDR X8, [X25]
	0x03AA4A3C ADRP X9, 0x6B3000
	0x03AA4A40 LDR X8, [X8 + 0xB8]
	0x03AA4A44 LDR X9, [X9 + 0xA90]
	0x03AA4A48 LDR X23, [X8]
	0x03AA4A4C LDR X0, [X9]
	0x03AA4A50 BL 0x1C16F10
	0x03AA4A54 ADRP X8, 0x6B3000
	0x03AA4A58 LDR X8, [X8 + 0xAA8]
	0x03AA4A5C MOV X22, X0
	0x03AA4A60 LDR X2, [X8]
	0x03AA4A64 MOV X1, X23
	0x03AA4A68 MOV X3, X31
	0x03AA4A6C BL 0x25C78AC
	0x03AA4A70 LDR X8, [X25]
	0x03AA4A74 LDR X8, [X8 + 0xB8]
	0x03AA4A78 STR X22, [X8 + 0x8]
	0x03AA4A7C LDR X2, [X24]
	0x03AA4A80 ADD X0, X31, 0x1A0
	0x03AA4A84 MOV X1, X22
	0x03AA4A88 BL 0x224107C
	0x03AA4A8C LDR X8, [X31 + 0x198]
	0x03AA4A90 CBZ X8, 0x3AA4C14
	0x03AA4A94 LDR X8, [X8 + 0x20]
	0x03AA4A98 ADD X0, X31, 0x1A0
	0x03AA4A9C MOV X1, X31
	0x03AA4AA0 STR X8, [X31 + 0x1C8]
	0x03AA4AA4 BL 0x39972C0
	0x03AA4AA8 ADRP X8, 0x6B3000
	0x03AA4AAC LDR X8, [X8 + 0xAC0]
	0x03AA4AB0 LDR X3, [X20 + 0x38]
	0x03AA4AB4 LDR X4, [X26]
	0x03AA4AB8 ADD X2, X31, 0x168
	0x03AA4ABC LDR X1, [X8]
	0x03AA4AC0 ADD X8, X31, 0x70
	0x03AA4AC4 MOV X0, X21
	0x03AA4AC8 BL 0x2240F24
	0x03AA4ACC LDP V0, V1, [X31 + 0x70]
	0x03AA4AD0 STP V0, V1, [X31 + 0x170]
	0x03AA4AD4 ADD X1, X31, 0x168
	0x03AA4AD8 ADD X3, X31, 0x1D8
	0x03AA4ADC MOV X0, X20
	0x03AA4AE0 MOV X2, X19
	0x03AA4AE4 BL 0x3AA4D2C
	0x03AA4AE8 LDR X8, [X31 + 0x168]
	0x03AA4AEC CBZ X8, 0x3AA4C0C
	0x03AA4AF0 LDR X9, [X31 + 0x1C8]
	0x03AA4AF4 ADRP X10, 0x6AC000
	0x03AA4AF8 LDR X10, [X10 + 0xA88]
	0x03AA4AFC STR X9, [X8 + 0x20]
	0x03AA4B00 LDR X0, [X10]
	0x03AA4B04 LDR W8, [X0 + 0xE0]

ISIL:
	001 Subtract X31, X31, 208
	002 Move [X31+176], X30
	003 Move [X31+184], X21
	004 Move [X31+192], X20
	005 Move [X31+200], X19
	006 Move [X31+168], X1
	007 Move W8, [X0+240]
	008 Move X19, X0
	009 Move X20, X2
	010 Compare W8, 0
	011 JumpIfEqual {39}
	012 Add X1, X31, 168
	013 Move X0, X19
	014 Move X2, X20
	015 Call AdditionalLightsShadowCasterPass.SetEmptyAdditionalShadowmapAtlas, X0, X1, X2
	016 Move X0, [X19+248]
	017 Move X20, [X20]
	018 Move W21, [X19+228]
	019 Add X8, X31, 88
	020 Move X1, X31
	021 Call RTHandle.op_Implicit, X0
	022 NotImplemented "Instruction LDUR not yet implemented."
	023 NotImplemented "Instruction LDUR not yet implemented."
	024 Move X8, [X31+120]
	025 Move [X31+128], V0
	026 Move [X31+136], V1
	027 Move [X31+160], X8
	028 Compare X20, 0
	029 JumpIfEqual {74}
	030 Move V0, [X31+128]
	031 Move V1, [X31+144]
	032 Move X8, [X31+160]
	033 Add X2, X31, 48
	034 Move X0, X20
	035 Move [X31+48], V0
	036 Move [X31+56], V1
	037 Move [X31+80], X8
	038 Move W1, W21
	039 Move W8, [X20+624]
	040 Compare W8, 0
	041 JumpIfEqual {68}
	042 Add X1, X31, 168
	043 Move X0, X19
	044 Move X2, X20
	045 Call AdditionalLightsShadowCasterPass.RenderAdditionalShadowmapAtlas, X0, X1, X2
	046 Move X8, [X19+232]
	047 Compare X8, 0
	048 JumpIfEqual {74}
	049 Move X0, [X20]
	050 Move X9, [X8+72]
	051 NotImplemented "Instruction LDUR not yet implemented."
	052 NotImplemented "Instruction LDUR not yet implemented."
	053 Move W1, [X19+228]
	054 Move [X31+160], X9
	055 Move [X31+128], V1
	056 Move [X31+136], V0
	057 Compare X0, 0
	058 JumpIfEqual {74}
	059 Move V0, [X31+128]
	060 Move V1, [X31+144]
	061 Move X8, [X31+160]
	062 Add X2, X31, 0
	063 Move [X31], V0
	064 Move [X31+8], V1
	065 Move [X31+32], X8
	066 Move X3, X31
	067 Call CommandBuffer.SetGlobalTexture, X0, X1, X2
	068 Move X20, [X31+192]
	069 Move X19, [X31+200]
	070 Move X30, [X31+176]
	071 Move X21, [X31+184]
	072 Add X31, X31, 208
	073 Return 
	074 Call 0x1C17F20

Method: System.Int32 GetShadowLightIndexFromLightIndex(System.Int32 visibleLightIndex)

Disassembly:
	0x03AA0650 ADRP X22, 0x6B7000
	0x03AA0654 ADRP X21, 0x6B7000
	0x03AA0658 LDR X20, [X20 + 0x858]
	0x03AA065C LDR X19, [X19 + 0x748]
	0x03AA0660 LDR X28, [X28 + 0x860]
	0x03AA0664 LDR X27, [X27 + 0x868]
	0x03AA0668 LDR X26, [X26 + 0x870]
	0x03AA066C LDR X25, [X25 + 0x878]
	0x03AA0670 LDR X24, [X24 + 0x880]
	0x03AA0674 LDR X23, [X23 + 0x760]
	0x03AA0678 LDR X22, [X22 + 0x888]
	0x03AA067C LDR X21, [X21 + 0x890]
	0x03AA0680 LDRB W8, [X29 + 0x3FB]
	0x03AA0684 TBNZ X8, 0x0, 0x3AA087C
	0x03AA0688 ADRP X0, 0x6B7000
	0x03AA068C LDR X0, [X0 + 0x748]

ISIL:
	001 Move [X31-16], X30
	002 Move TEMP, X1
	003 And TEMP, TEMP, -2147483648
	004 Compare TEMP, -2147483648
	005 JumpIfEqual {13}
	006 Move X8, [X0+272]
	007 Compare X8, 0
	008 JumpIfEqual {18}
	009 Move W9, [X8+24]
	010 NotImplemented "Instruction CMP not yet implemented."
	011 Add X8, X8, W1
	012 Move W0, [X8+32]
	013 Move TEMP, 0
	014 Not TEMP
	015 Move W0, TEMP
	016 Move X30, [X31+16]
	017 Return X0
	018 Call 0x1C17F20
	019 Call 0x1C17F28

Method: System.Void Clear()

Disassembly:
	0x03AA4944 LDP V0, V1, [X31 + 0x70]
	0x03AA4948 LDR V2, [X31 + 0x9]
	0x03AA494C LDR W10, [X31 + 0xA0]
	0x03AA4950 ADD X9, X31, 0xF0
	0x03AA4954 STP V0, V1, [X31 + 0xF0]
	0x03AA4958 STR V2, [X31 + 0x11]
	0x03AA495C STR W10, [X31 + 0x120]
	0x03AA4960 MOVZ W22, 0x1
	0x03AA4964 LDP V0, V1, [X9]
	0x03AA4968 LDR W10, [X9 + 0x30]
	0x03AA496C LDR V2, [X9 + 0x2]
	0x03AA4970 ADRP X9, 0x6AF000
	0x03AA4974 LDR X9, [X9 + 0xFF8]
	0x03AA4978 STR W10, [X31 + 0xE0]
	0x03AA497C STP V1, V2, [X31 + 0xC0]
	0x03AA4980 STR V0, [X31 + 0xB]
	0x03AA4984 LDR X0, [X9]
	0x03AA4988 LDR X23, [X8]
	0x03AA498C LDR W9, [X0 + 0xE0]
	0x03AA4990 CBNZ W9, 0x3AA4998
	0x03AA4994 BL 0x1C16DFC
	0x03AA4998 LDP V0, V1, [X31 + 0xB0]
	0x03AA499C LDR V2, [X31 + 0xD]
	0x03AA49A0 LDR W8, [X31 + 0xE0]
	0x03AA49A4 STP V0, V1, [X31]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x93F000
	005 Move W8, [X20+1025]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x657000
	012 Move X0, [X0+2136]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+1025], W8
	016 Move X8, [X19+288]
	017 Compare X8, 0
	018 JumpIfEqual {34}
	019 Move W9, [X8+28]
	020 Add W9, W9, 1
	021 Move [X8+24], W31
	022 Move [X8+28], W9
	023 Move X8, [X19+296]
	024 Compare X8, 0
	025 JumpIfEqual {34}
	026 Move W9, [X8+28]
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Add W9, W9, 1
	030 Move [X8+24], W31
	031 Move [X8+28], W9
	032 Move X30, [X31+32]
	033 Return 
	034 Call 0x1C17F20

Method: System.Void SetEmptyAdditionalShadowmapAtlas(ref UnityEngine.Rendering.ScriptableRenderContext context, ref UnityEngine.Rendering.Universal.RenderingData renderingData)

Disassembly:
	0x03AA4B08 CBNZ W8, 0x3AA4B10
	0x03AA4B0C BL 0x1C16DFC
	0x03AA4B10 ADD X0, X31, 0x1C8
	0x03AA4B14 MOV X1, X31
	0x03AA4B18 BL 0x398D2E8
	0x03AA4B1C TBZ X0, 0x0, 0x3AA4B34
	0x03AA4B20 ADD X0, X31, 0x170
	0x03AA4B24 ADD X1, X31, 0x1C8
	0x03AA4B28 MOVZ W2, 0x1
	0x03AA4B2C MOV X3, X31
	0x03AA4B30 BL 0x3996A00
	0x03AA4B34 ADD X0, X31, 0x170
	0x03AA4B38 MOV W1, W31
	0x03AA4B3C MOV X2, X31
	0x03AA4B40 BL 0x398E404
	0x03AA4B44 LDR X8, [X25]
	0x03AA4B48 LDR W9, [X8 + 0xE0]
	0x03AA4B4C CBNZ W9, 0x3AA4B5C
	0x03AA4B50 MOV X0, X8
	0x03AA4B54 BL 0x1C16DFC
	0x03AA4B58 LDR X8, [X25]
	0x03AA4B5C LDR X9, [X8 + 0xB8]
	0x03AA4B60 LDR X19, [X9 + 0x10]
	0x03AA4B64 CBNZ X19, 0x3AA4BBC
	0x03AA4B68 LDR W9, [X8 + 0xE0]
	0x03AA4B6C CBNZ W9, 0x3AA4B7C
	0x03AA4B70 MOV X0, X8
	0x03AA4B74 BL 0x1C16DFC
	0x03AA4B78 LDR X8, [X25]
	0x03AA4B7C ADRP X9, 0x6B3000
	0x03AA4B80 LDR X8, [X8 + 0xB8]
	0x03AA4B84 LDR X9, [X9 + 0xA90]
	0x03AA4B88 LDR X20, [X8]
	0x03AA4B8C LDR X0, [X9]
	0x03AA4B90 BL 0x1C16F10
	0x03AA4B94 ADRP X8, 0x6B3000
	0x03AA4B98 LDR X8, [X8 + 0xAB0]
	0x03AA4B9C MOV X19, X0
	0x03AA4BA0 LDR X2, [X8]
	0x03AA4BA4 MOV X1, X20
	0x03AA4BA8 MOV X3, X31
	0x03AA4BAC BL 0x25C78AC
	0x03AA4BB0 LDR X8, [X25]
	0x03AA4BB4 LDR X8, [X8 + 0xB8]
	0x03AA4BB8 STR X19, [X8 + 0x10]
	0x03AA4BBC LDR X2, [X24]
	0x03AA4BC0 ADD X0, X31, 0x170
	0x03AA4BC4 MOV X1, X19
	0x03AA4BC8 BL 0x224107C
	0x03AA4BCC LDR X8, [X31 + 0x168]
	0x03AA4BD0 CBZ X8, 0x3AA4C10
	0x03AA4BD4 LDR X20, [X8 + 0x20]
	0x03AA4BD8 ADD X0, X31, 0x170
	0x03AA4BDC MOV X1, X31
	0x03AA4BE0 BL 0x39972C0
	0x03AA4BE4 MOV X0, X20
	0x03AA4BE8 ADD X31, X31, 0x1D0
	0x03AA4BEC LDP X20, X19, [X31 + 0x50]
	0x03AA4BF0 LDP X22, X21, [X31 + 0x40]
	0x03AA4BF4 LDP X24, X23, [X31 + 0x30]
	0x03AA4BF8 LDP X26, X25, [X31 + 0x20]
	0x03AA4BFC LDP X30, X27, [X31 + 0x10]
	0x03AA4C00 LDR X29, [X31], #0x60
	0x03AA4C04 RET
	0x03AA4C08 BL 0x1C16F20

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x93F000
	008 Move X22, 0x678000
	009 Move W8, [X23+1026]
	010 Move X22, [X22+2296]
	011 Move X20, X2
	012 Move X19, X1
	013 Move X21, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {32}
	018 Move X0, 0x6B3000
	019 Move X0, [X0+2248]
	020 Call 0x1C17CF4
	021 Move X0, 0x678000
	022 Move X0, [X0+2296]
	023 Call 0x1C17CF4
	024 Move X0, 0x6AD000
	025 Move X0, [X0+3200]
	026 Call 0x1C17CF4
	027 Move X0, 0x6B2000
	028 Move X0, [X0+3992]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X23+1026], W8
	032 Move X0, [X22]
	033 Move X22, 0x6B2000
	034 Move X23, 0x6B3000
	035 Move X20, [X20]
	036 Move W8, [X0+224]
	037 Move X22, [X22+3992]
	038 Move X23, [X23+2248]
	039 Compare W8, 0
	040 JumpIfNotEqual {42}
	041 Call 0x1C17DFC
	042 Move X1, [X22]
	043 Move X22, 0x6AD000
	044 Move X22, [X22+3200]
	045 Move W2, 1
	046 Move X0, X20
	047 Move X3, X31
	048 Call CoreUtils.SetKeyword, X0, X1, X2
	049 Move X0, [X23]
	050 Move X21, [X21+304]
	051 Move W8, [X0+224]
	052 Compare W8, 0
	053 JumpIfNotEqual {55}
	054 Call 0x1C17DFC
	055 Move X0, X20
	056 Move X1, X21
	057 Call AdditionalLightsShadowCasterPass.SetEmptyAdditionalLightShadowParams, X0, X1
	058 Move X0, [X22]
	059 Move W8, [X0+224]
	060 Compare W8, 0
	061 JumpIfNotEqual {63}
	062 Call 0x1C17DFC
	063 Move X0, X19
	064 Move X1, X20
	065 Move X2, X31
	066 Call ScriptableRenderContext.ExecuteCommandBuffer, X0, X1
	067 Compare X20, 0
	068 JumpIfEqual {79}
	069 Move X0, X20
	070 Move X20, [X31+32]
	071 Move X19, [X31+40]
	072 Move X22, [X31+16]
	073 Move X21, [X31+24]
	074 Move X1, X31
	075 Move X30, [X31+48]
	076 Move X23, [X31+56]
	077 Call CommandBuffer.Clear, X0
	078 Return 
	079 Call 0x1C17F20

Method: System.Void SetEmptyAdditionalLightShadowParams(UnityEngine.Rendering.CommandBuffer cmd, UnityEngine.Vector4[] lightIndexToShadowParams)

Disassembly:
	0x03AA5358 ADRP X8, 0x6B2000
	0x03AA535C LDR X8, [X8 + 0xAF0]
	0x03AA5360 LDR X0, [X8]
	0x03AA5364 BL 0x3C124EC
	0x03AA5368 LDR X8, [X22]
	0x03AA536C MOV X1, X31
	0x03AA5370 LDR X8, [X8 + 0xB8]
	0x03AA5374 STR W0, [X8 + 0x20]
	0x03AA5378 ADRP X8, 0x6B2000
	0x03AA537C LDR X8, [X8 + 0xAE0]
	0x03AA5380 LDR X0, [X8]
	0x03AA5384 BL 0x3C124EC
	0x03AA5388 LDR X8, [X22]
	0x03AA538C MOV X1, X31
	0x03AA5390 LDR X8, [X8 + 0xB8]
	0x03AA5394 STR W0, [X8 + 0x24]
	0x03AA5398 ADRP X8, 0x6B2000
	0x03AA539C LDR X8, [X8 + 0xB00]
	0x03AA53A0 LDR X0, [X8]
	0x03AA53A4 BL 0x3C124EC
	0x03AA53A8 LDR X8, [X22]
	0x03AA53AC LDR X8, [X8 + 0xB8]
	0x03AA53B0 STR W0, [X8 + 0x28]
	0x03AA53B4 ADRP X8, 0x677000
	0x03AA53B8 LDR X8, [X8 + 0x8A8]
	0x03AA53BC LDR X0, [X8]
	0x03AA53C0 LDR W8, [X0 + 0xE0]
	0x03AA53C4 CBNZ W8, 0x3AA53CC
	0x03AA53C8 BL 0x1C16DFC
	0x03AA53CC MOV X0, X31
	0x03AA53D0 BL 0x3A89318
	0x03AA53D4 ADRP X22, 0x6A9000
	0x03AA53D8 LDR X22, [X22 + 0x48]
	0x03AA53DC MOV W21, W0
	0x03AA53E0 MOV W1, W21
	0x03AA53E4 LDR X8, [X22]
	0x03AA53E8 MOV X0, X8
	0x03AA53EC BL 0x1C16D6C
	0x03AA53F0 STR X0, [X20 + 0x20]
	0x03AA53F4 LDR X0, [X22]
	0x03AA53F8 MOV W1, W21
	0x03AA53FC BL 0x1C16D6C
	0x03AA5400 STR X0, [X20 + 0x28]
	0x03AA5404 LDR X0, [X22]
	0x03AA5408 MOV W1, W21
	0x03AA540C BL 0x1C16D6C
	0x03AA5410 STR X0, [X20 + 0x30]
	0x03AA5414 LDR X0, [X22]
	0x03AA5418 MOV W1, W21
	0x03AA541C BL 0x1C16D6C
	0x03AA5420 STR X0, [X20 + 0x38]
	0x03AA5424 LDR X0, [X22]
	0x03AA5428 MOV W1, W21
	0x03AA542C BL 0x1C16D6C
	0x03AA5430 STR X0, [X20 + 0x40]
	0x03AA5434 ADRP X8, 0x64E000
	0x03AA5438 LDR X8, [X8 + 0x638]
	0x03AA543C MOV W1, W21
	0x03AA5440 LDR X0, [X8]
	0x03AA5444 BL 0x1C16D6C
	0x03AA5448 STR X0, [X20 + 0x48]
	0x03AA544C LDRB W8, [X20 + 0x51]
	0x03AA5450 CBZ W8, 0x3AA5488
	0x03AA5454 MOV X0, X20
	0x03AA5458 BL 0x3AA54AC
	0x03AA545C ADD X8, X31, 0x0
	0x03AA5460 MOV X0, X31
	0x03AA5464 BL 0x3A6826C
	0x03AA5468 ADD X0, X31, 0x80
	0x03AA546C ADD X1, X31, 0x0
	0x03AA5470 MOVZ W2, 0x80

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x93E000
	007 Move X22, 0x6B0000
	008 Move W8, [X21+1027]
	009 Move X22, [X22+16]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {27}
	016 Move X0, 0x6B2000
	017 Move X0, [X0+2248]
	018 Call 0x1C17CF4
	019 Move X0, 0x6B3000
	020 Move X0, [X0+2440]
	021 Call 0x1C17CF4
	022 Move X0, 0x6B0000
	023 Move X0, [X0+16]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X21+1027], W8
	027 Move X0, [X22]
	028 Move W8, [X0+224]
	029 Compare W8, 0
	030 JumpIfNotEqual {32}
	031 Call 0x1C17DFC
	032 Move X0, X31
	033 Call RenderingUtils.get_useStructuredBuffer
	034 Move TEMP, X0
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfNotEqual {75}
	038 Move X0, X31
	039 Call ShaderData.get_instance
	040 Compare X20, 0
	041 JumpIfEqual {92}
	042 Compare X0, 0
	043 JumpIfEqual {92}
	044 Move W1, [X20+24]
	045 Move X2, X31
	046 Call ShaderData.GetAdditionalLightShadowParamsStructuredBuffer, X0, X1
	047 Compare X0, 0
	048 JumpIfEqual {92}
	049 Move X1, X20
	050 Move X2, X31
	051 Move X21, X0
	052 Call ComputeBuffer.SetData, X0, X1
	053 Move X20, 0x6B2000
	054 Move X20, [X20+2248]
	055 Move X0, [X20]
	056 Move W8, [X0+224]
	057 Compare W8, 0
	058 JumpIfNotEqual {60}
	059 Call 0x1C17DFC
	060 Compare X19, 0
	061 JumpIfEqual {92}
	062 Move X8, [X20]
	063 Move X0, X19
	064 Move X2, X21
	065 Move X20, [X31+32]
	066 Move X19, [X31+40]
	067 Move X8, [X8+184]
	068 Move X22, [X31+16]
	069 Move X21, [X31+24]
	070 Move X3, X31
	071 Move W1, [X8+28]
	072 Move X30, [X31+48]
	073 Call CommandBuffer.SetGlobalBuffer, X0, X1, X2
	074 Return 
	075 Compare X19, 0
	076 JumpIfEqual {92}
	077 Move X8, 0x6B3000
	078 Move X8, [X8+2440]
	079 Move X0, X19
	080 Move X2, X20
	081 Move X20, [X31+32]
	082 Move X19, [X31+40]
	083 Move X8, [X8]
	084 Move X22, [X31+16]
	085 Move X21, [X31+24]
	086 Move X3, X31
	087 Move X8, [X8+184]
	088 Move W1, [X8+4]
	089 Move X30, [X31+48]
	090 Call CommandBuffer.SetGlobalVectorArray, X0, X1, X2
	091 Return 
	092 Call 0x1C17F20

Method: System.Void RenderAdditionalShadowmapAtlas(ref UnityEngine.Rendering.ScriptableRenderContext context, ref UnityEngine.Rendering.Universal.RenderingData renderingData)

Disassembly:
	0x03AA4C0C BL 0x1C16F20
	0x03AA4C10 BL 0x1C16F20
	0x03AA4C14 BL 0x1C16F20
	0x03AA4C18 BL 0x1C16F20
	0x03AA4C1C BL 0x1C16F20
	0x03AA4C20 BL 0x1C16F20
	0x03AA4C24 BL 0x1C16F20
	0x03AA4C28 B 0x3AA4CC8
	0x03AA4C2C B 0x3AA4CC8
	0x03AA4C30 B 0x3AA4CC8
	0x03AA4C34 B 0x3AA4CC8
	0x03AA4C38 B 0x3AA4CC8
	0x03AA4C3C B 0x3AA4CC8
	0x03AA4C40 B 0x3AA4CC8
	0x03AA4C44 B 0x3AA4CC8
	0x03AA4C48 B 0x3AA4C6C
	0x03AA4C4C B 0x3AA4CC8
	0x03AA4C50 B 0x3AA4C6C
	0x03AA4C54 B 0x3AA4CC8
	0x03AA4C58 B 0x3AA4C6C
	0x03AA4C5C B 0x3AA4C6C
	0x03AA4C60 B 0x3AA4C6C
	0x03AA4C64 B 0x3AA4CC8
	0x03AA4C68 B 0x3AA4C6C
	0x03AA4C6C MOV X22, X0
	0x03AA4C70 CMP W1, 0x1
	0x03AA4C74 B.NE 0x3AA4CA4
	0x03AA4C78 MOV X0, X22
	0x03AA4C7C BL 0x3EB1AD0
	0x03AA4C80 LDR X19, [X0]
	0x03AA4C84 BL 0x3EB1AE0
	0x03AA4C88 ADD X0, X31, 0x170
	0x03AA4C8C MOV X1, X31
	0x03AA4C90 BL 0x39972C0
	0x03AA4C94 MOV X20, X31
	0x03AA4C98 CBZ X19, 0x3AA4BE4
	0x03AA4C9C MOV X0, X19
	0x03AA4CA0 BL 0x1C16F18
	0x03AA4CA4 MOV X19, X31
	0x03AA4CA8 B 0x3AA4CB0
	0x03AA4CAC MOV X22, X0
	0x03AA4CB0 ADD X0, X31, 0x170
	0x03AA4CB4 MOV X1, X31
	0x03AA4CB8 BL 0x39972C0
	0x03AA4CBC CBZ X19, 0x3AA4D18
	0x03AA4CC0 MOV X0, X19
	0x03AA4CC4 BL 0x1C16F18
	0x03AA4CC8 MOV X22, X0
	0x03AA4CCC CMP W1, 0x1
	0x03AA4CD0 B.NE 0x3AA4CFC
	0x03AA4CD4 MOV X0, X22
	0x03AA4CD8 BL 0x3EB1AD0
	0x03AA4CDC LDR X23, [X0]
	0x03AA4CE0 BL 0x3EB1AE0
	0x03AA4CE4 ADD X0, X31, 0x1A0
	0x03AA4CE8 MOV X1, X31
	0x03AA4CEC BL 0x39972C0
	0x03AA4CF0 CBZ X23, 0x3AA4AA8
	0x03AA4CF4 MOV X0, X23
	0x03AA4CF8 BL 0x1C16F18
	0x03AA4CFC MOV X23, X31
	0x03AA4D00 B 0x3AA4D08
	0x03AA4D04 MOV X22, X0
	0x03AA4D08 ADD X0, X31, 0x1A0
	0x03AA4D0C MOV X1, X31
	0x03AA4D10 BL 0x39972C0
	0x03AA4D14 CBNZ X23, 0x3AA4D20
	0x03AA4D18 MOV X0, X22
	0x03AA4D1C BL 0x1D2C690
	0x03AA4D20 MOV X0, X23
	0x03AA4D24 BL 0x1C16F18
	0x03AA4D28 BL 0x1990590
	0x03AA4D2C STR X30, [X31 - 0x10]!
	0x03AA4D30 LDR X9, [X1]
	0x03AA4D34 CBZ X9, 0x3AA4D80
	0x03AA4D38 STR X0, [X9 + 0x10]
	0x03AA4D3C LDR X9, [X1]
	0x03AA4D40 CBZ X9, 0x3AA4D80
	0x03AA4D44 LDR X10, [X3]
	0x03AA4D48 STR X10, [X9 + 0x18]
	0x03AA4D4C LDR X9, [X1]
	0x03AA4D50 CBZ X9, 0x3AA4D80
	0x03AA4D54 LDRB W10, [X0 + 0xF0]
	0x03AA4D58 MOV X8, X2
	0x03AA4D5C MOVZ W2, 0x2B8
	0x03AA4D60 MOV X1, X8
	0x03AA4D64 STRB W10, [X9 + 0x2E4]
	0x03AA4D68 LDR W10, [X0 + 0xE4]
	0x03AA4D6C ADD X0, X9, 0x28
	0x03AA4D70 STR W10, [X9 + 0x2E0]
	0x03AA4D74 BL 0x3EB1B30
	0x03AA4D78 LDR X30, [X31], #0x10
	0x03AA4D7C RET
	0x03AA4D80 BL 0x1C16F20
	0x03AA4D84 STR X30, [X31 - 0x20]!
	0x03AA4D88 STP X20, X19, [X31 + 0x10]
	0x03AA4D8C ADRP X19, 0x93E000
	0x03AA4D90 ADRP X20, 0x6B2000
	0x03AA4D94 LDRB W8, [X19 + 0x408]
	0x03AA4D98 LDR X20, [X20 + 0x8C8]
	0x03AA4D9C TBNZ X8, 0x0, 0x3AA4DB4
	0x03AA4DA0 ADRP X0, 0x6B2000
	0x03AA4DA4 LDR X0, [X0 + 0x8C8]
	0x03AA4DA8 BL 0x1C16CF4
	0x03AA4DAC MOVZ W8, 0x1
	0x03AA4DB0 STRB W8, [X19 + 0x408]
	0x03AA4DB4 LDR X8, [X20]
	0x03AA4DB8 ADRP X9, 0xFFFFFFFFFD048000
	0x03AA4DBC LDR V0, [X9 + 0xED]
	0x03AA4DC0 LDP X20, X19, [X31 + 0x10]
	0x03AA4DC4 LDR X10, [X8 + 0xB8]
	0x03AA4DC8 STUR V0, [X10 + 0x8]
	0x03AA4DCC LDR X8, [X8 + 0xB8]
	0x03AA4DD0 STR X31, [X8 + 0x20]
	0x03AA4DD4 LDR X30, [X31], #0x20
	0x03AA4DD8 RET
	0x03AA4DDC MOV X1, X31
	0x03AA4DE0 B 0x33BDD8C
	0x03AA4DE4 STR X30, [X31 - 0x20]!
	0x03AA4DE8 STP X20, X19, [X31 + 0x10]
	0x03AA4DEC ADRP X19, 0x93E000
	0x03AA4DF0 ADRP X20, 0x6B3000
	0x03AA4DF4 LDRB W8, [X19 + 0x409]
	0x03AA4DF8 LDR X20, [X20 + 0xAB8]
	0x03AA4DFC TBNZ X8, 0x0, 0x3AA4E14
	0x03AA4E00 ADRP X0, 0x6B3000
	0x03AA4E04 LDR X0, [X0 + 0xAB8]
	0x03AA4E08 BL 0x1C16CF4
	0x03AA4E0C MOVZ W8, 0x1
	0x03AA4E10 STRB W8, [X19 + 0x409]
	0x03AA4E14 LDR X0, [X20]
	0x03AA4E18 BL 0x1C16F10
	0x03AA4E1C MOV X1, X31
	0x03AA4E20 MOV X19, X0
	0x03AA4E24 BL 0x33BDD8C
	0x03AA4E28 LDR X8, [X20]
	0x03AA4E2C LDR X8, [X8 + 0xB8]
	0x03AA4E30 STR X19, [X8]
	0x03AA4E34 LDP X20, X19, [X31 + 0x10]
	0x03AA4E38 LDR X30, [X31], #0x20
	0x03AA4E3C RET
	0x03AA4E40 MOV X1, X31
	0x03AA4E44 B 0x33BDD8C
	0x03AA4E48 STR X30, [X31 - 0x10]!
	0x03AA4E4C CBZ X1, 0x3AA4E80
	0x03AA4E50 LDRB W8, [X1 + 0x2E4]
	0x03AA4E54 CBZ W8, 0x3AA4E60
	0x03AA4E58 LDR X30, [X31], #0x10
	0x03AA4E5C RET
	0x03AA4E60 CBZ X2, 0x3AA4E80
	0x03AA4E64 LDR X0, [X1 + 0x10]
	0x03AA4E68 CBZ X0, 0x3AA4E80
	0x03AA4E6C ADD X8, X1, 0x28
	0x03AA4E70 ADD X1, X2, 0x10
	0x03AA4E74 MOV X2, X8
	0x03AA4E78 LDR X30, [X31], #0x10
	0x03AA4E7C B 0x3AA3C0C
	0x03AA4E80 BL 0x1C16F20
	0x03AA4E84 SUB X31, X31, 0xA0
	0x03AA4E88 STP X30, X21, [X31 + 0x80]
	0x03AA4E8C STP X20, X19, [X31 + 0x90]
	0x03AA4E90 ADRP X21, 0x93E000
	0x03AA4E94 LDRB W8, [X21 + 0x40A]
	0x03AA4E98 MOV X20, X2
	0x03AA4E9C MOV X19, X1
	0x03AA4EA0 TBNZ X8, 0x0, 0x3AA4EB8
	0x03AA4EA4 ADRP X0, 0x6AC000
	0x03AA4EA8 LDR X0, [X0 + 0xA88]
	0x03AA4EAC BL 0x1C16CF4
	0x03AA4EB0 MOVZ W8, 0x1
	0x03AA4EB4 STRB W8, [X21 + 0x40A]
	0x03AA4EB8 CBZ X19, 0x3AA4F78
	0x03AA4EBC LDRB W8, [X19 + 0x2E4]
	0x03AA4EC0 CBZ W8, 0x3AA4EF8
	0x03AA4EC4 CBZ X20, 0x3AA4F78
	0x03AA4EC8 LDR X0, [X19 + 0x10]
	0x03AA4ECC CBZ X0, 0x3AA4F78
	0x03AA4ED0 ADD X2, X19, 0x28
	0x03AA4ED4 ADD X1, X20, 0x10
	0x03AA4ED8 BL 0x3AA3B08
	0x03AA4EDC LDR X8, [X19 + 0x18]
	0x03AA4EE0 CBZ X8, 0x3AA4F78
	0x03AA4EE4 LDR X8, [X8 + 0x40]
	0x03AA4EE8 CBZ X8, 0x3AA4F78
	0x03AA4EEC LDR X21, [X8 + 0x78]
	0x03AA4EF0 STR X21, [X19 + 0x20]
	0x03AA4EF4 B 0x3AA4EFC
	0x03AA4EF8 LDR X21, [X19 + 0x20]
	0x03AA4EFC ADRP X8, 0x6AC000
	0x03AA4F00 LDR X8, [X8 + 0xA88]
	0x03AA4F04 LDR X20, [X19 + 0x28]
	0x03AA4F08 LDR W19, [X19 + 0x2E0]
	0x03AA4F0C LDR X0, [X8]
	0x03AA4F10 LDR W8, [X0 + 0xE0]
	0x03AA4F14 CBNZ W8, 0x3AA4F1C
	0x03AA4F18 BL 0x1C16DFC
	0x03AA4F1C ADD X8, X31, 0x28
	0x03AA4F20 MOV X0, X21
	0x03AA4F24 MOV X1, X31
	0x03AA4F28 BL 0x399A594
	0x03AA4F2C LDUR V0, [X31 + 0x28]
	0x03AA4F30 LDUR V1, [X31 + 0x38]
	0x03AA4F34 LDR X8, [X31 + 0x48]
	0x03AA4F38 STP V0, V1, [X31 + 0x50]
	0x03AA4F3C STR X8, [X31 + 0x70]
	0x03AA4F40 CBZ X20, 0x3AA4F78
	0x03AA4F44 LDP V0, V1, [X31 + 0x50]
	0x03AA4F48 LDR X8, [X31 + 0x70]
	0x03AA4F4C ADD X2, X31, 0x0
	0x03AA4F50 MOV X0, X20
	0x03AA4F54 MOV W1, W19
	0x03AA4F58 MOV X3, X31
	0x03AA4F5C STP V0, V1, [X31]
	0x03AA4F60 STR X8, [X31 + 0x20]
	0x03AA4F64 BL 0x3C4FCFC
	0x03AA4F68 LDP X20, X19, [X31 + 0x90]
	0x03AA4F6C LDP X30, X21, [X31 + 0x80]
	0x03AA4F70 ADD X31, X31, 0xA0
	0x03AA4F74 RET
	0x03AA4F78 BL 0x1C16F20
	0x03AA4F7C STP X30, X19, [X31 - 0x10]!
	0x03AA4F80 MOV X19, X0
	0x03AA4F84 BL 0x3AA4FA4
	0x03AA4F88 MOV X2, X0
	0x03AA4F8C MOV X3, X1
	0x03AA4F90 MOV X0, X19
	0x03AA4F94 MOV X1, X2
	0x03AA4F98 MOV X2, X3
	0x03AA4F9C LDP X30, X19, [X31], #0x10
	0x03AA4FA0 B 0x3AA50C0
	0x03AA4FA4 SUB X31, X31, 0x60
	0x03AA4FA8 STR X30, [X31 + 0x40]
	0x03AA4FAC STP X20, X19, [X31 + 0x50]
	0x03AA4FB0 ADRP X20, 0x93E000
	0x03AA4FB4 ADRP X19, 0x678000
	0x03AA4FB8 LDRB W8, [X20 + 0x415]
	0x03AA4FBC LDR X19, [X19 + 0x8A8]
	0x03AA4FC0 TBNZ X8, 0x0, 0x3AA4FF0
	0x03AA4FC4 ADRP X0, 0x6B2000
	0x03AA4FC8 LDR X0, [X0 + 0x180]
	0x03AA4FCC BL 0x1C16CF4
	0x03AA4FD0 ADRP X0, 0x64F000
	0x03AA4FD4 LDR X0, [X0 + 0x598]
	0x03AA4FD8 BL 0x1C16CF4
	0x03AA4FDC ADRP X0, 0x678000
	0x03AA4FE0 LDR X0, [X0 + 0x8A8]
	0x03AA4FE4 BL 0x1C16CF4
	0x03AA4FE8 MOVZ W8, 0x1
	0x03AA4FEC STRB W8, [X20 + 0x415]
	0x03AA4FF0 ADRP X20, 0x64F000
	0x03AA4FF4 LDR X20, [X20 + 0x598]
	0x03AA4FF8 ADD X8, X31, 0x0
	0x03AA4FFC MOV X0, X31
	0x03AA5000 STP X31, X31, [X31 + 0x20]
	0x03AA5004 STR W31, [X31 + 0x38]
	0x03AA5008 STR X31, [X31 + 0x30]
	0x03AA500C BL 0x3A56F94
	0x03AA5010 LDR V0, [X31]
	0x03AA5014 LDUR V1, [X31 + 0xC]
	0x03AA5018 LDR X0, [X19]
	0x03AA501C STR V0, [X31 + 0x2]
	0x03AA5020 STUR V1, [X31 + 0x2C]
	0x03AA5024 LDR W8, [X0 + 0xE0]
	0x03AA5028 CBNZ W8, 0x3AA5030
	0x03AA502C BL 0x1C16DFC
	0x03AA5030 MOV X0, X31
	0x03AA5034 BL 0x3A8AB60
	0x03AA5038 LDR X8, [X20]
	0x03AA503C MOV X19, X0
	0x03AA5040 LDR W9, [X8 + 0xE0]
	0x03AA5044 CBNZ W9, 0x3AA5050
	0x03AA5048 MOV X0, X8
	0x03AA504C BL 0x1C16DFC
	0x03AA5050 MOV X0, X19
	0x03AA5054 MOV X1, X31
	0x03AA5058 BL 0x3C38948
	0x03AA505C TBZ X0, 0x0, 0x3AA5084
	0x03AA5060 CBZ X19, 0x3AA50BC
	0x03AA5064 MOV X0, X19
	0x03AA5068 MOV X1, X31
	0x03AA506C BL 0x3A2C070
	0x03AA5070 STR W0, [X31 + 0x28]
	0x03AA5074 MOV X0, X19
	0x03AA5078 MOV X1, X31
	0x03AA507C BL 0x3A2C2A8
	0x03AA5080 STR X0, [X31 + 0x20]
	0x03AA5084 ADRP X8, 0x6B1000
	0x03AA5088 LDR X8, [X8 + 0x180]
	0x03AA508C LDR X0, [X8]
	0x03AA5090 BL 0x1C16F10
	0x03AA5094 ADD X1, X31, 0x20
	0x03AA5098 MOV X2, X31
	0x03AA509C MOV X19, X0
	0x03AA50A0 BL 0x3A544AC
	0x03AA50A4 MOV X0, X19
	0x03AA50A8 LDP X20, X19, [X31 + 0x50]
	0x03AA50AC LDR X30, [X31 + 0x40]
	0x03AA50B0 MOV X1, X31
	0x03AA50B4 ADD X31, X31, 0x60
	0x03AA50B8 RET
	0x03AA50BC BL 0x1C16F20
	0x03AA50C0 SUB X31, X31, 0x160
	0x03AA50C4 STP X29, X30, [X31 + 0x100]
	0x03AA50C8 STP X28, X27, [X31 + 0x110]
	0x03AA50CC STP X26, X25, [X31 + 0x120]
	0x03AA50D0 STP X24, X23, [X31 + 0x130]
	0x03AA50D4 STP X22, X21, [X31 + 0x140]
	0x03AA50D8 STP X20, X19, [X31 + 0x150]
	0x03AA50DC ADRP X22, 0x93D000
	0x03AA50E0 ADRP X23, 0x6AF000
	0x03AA50E4 LDRB W8, [X22 + 0x40B]
	0x03AA50E8 LDR X23, [X23 + 0x10]
	0x03AA50EC MOV X21, X2
	0x03AA50F0 MOV X19, X1
	0x03AA50F4 MOV X20, X0
	0x03AA50F8 TBNZ X8, 0x0, 0x3AA51DC
	0x03AA50FC ADRP X0, 0x6B2000
	0x03AA5100 LDR X0, [X0 + 0xAD8]
	0x03AA5104 BL 0x1C16CF4
	0x03AA5108 ADRP X0, 0x6AF000
	0x03AA510C LDR X0, [X0 + 0x10]
	0x03AA5110 BL 0x1C16CF4
	0x03AA5114 ADRP X0, 0x64E000
	0x03AA5118 LDR X0, [X0 + 0x638]
	0x03AA511C BL 0x1C16CF4
	0x03AA5120 ADRP X0, 0x677000
	0x03AA5124 LDR X0, [X0 + 0x8A8]
	0x03AA5128 BL 0x1C16CF4
	0x03AA512C ADRP X0, 0x6A9000
	0x03AA5130 LDR X0, [X0 + 0x48]
	0x03AA5134 BL 0x1C16CF4
	0x03AA5138 ADRP X0, 0x6B2000
	0x03AA513C LDR X0, [X0 + 0x8A8]
	0x03AA5140 BL 0x1C16CF4
	0x03AA5144 ADRP X0, 0x6B2000
	0x03AA5148 LDR X0, [X0 + 0x8B0]
	0x03AA514C BL 0x1C16CF4
	0x03AA5150 ADRP X0, 0x6B2000
	0x03AA5154 LDR X0, [X0 + 0xAE0]
	0x03AA5158 BL 0x1C16CF4
	0x03AA515C ADRP X0, 0x6B2000
	0x03AA5160 LDR X0, [X0 + 0xAE8]
	0x03AA5164 BL 0x1C16CF4
	0x03AA5168 ADRP X0, 0x6B2000
	0x03AA516C LDR X0, [X0 + 0xAF0]
	0x03AA5170 BL 0x1C16CF4
	0x03AA5174 ADRP X0, 0x6B2000
	0x03AA5178 LDR X0, [X0 + 0xAF8]
	0x03AA517C BL 0x1C16CF4
	0x03AA5180 ADRP X0, 0x6B2000
	0x03AA5184 LDR X0, [X0 + 0xB00]
	0x03AA5188 BL 0x1C16CF4
	0x03AA518C ADRP X0, 0x6B2000
	0x03AA5190 LDR X0, [X0 + 0x928]
	0x03AA5194 BL 0x1C16CF4
	0x03AA5198 ADRP X0, 0x6B2000
	0x03AA519C LDR X0, [X0 + 0xB08]
	0x03AA51A0 BL 0x1C16CF4
	0x03AA51A4 ADRP X0, 0x6B2000
	0x03AA51A8 LDR X0, [X0 + 0xB10]
	0x03AA51AC BL 0x1C16CF4
	0x03AA51B0 ADRP X0, 0x6B2000
	0x03AA51B4 LDR X0, [X0 + 0xB18]
	0x03AA51B8 BL 0x1C16CF4
	0x03AA51BC ADRP X0, 0x6B2000
	0x03AA51C0 LDR X0, [X0 + 0xB20]
	0x03AA51C4 BL 0x1C16CF4
	0x03AA51C8 ADRP X0, 0x6B2000
	0x03AA51CC LDR X0, [X0 + 0xB28]
	0x03AA51D0 BL 0x1C16CF4
	0x03AA51D4 MOVZ W8, 0x1
	0x03AA51D8 STRB W8, [X22 + 0x40B]
	0x03AA51DC ADRP X28, 0x6B2000
	0x03AA51E0 ADRP X22, 0x6B2000
	0x03AA51E4 ADRP X27, 0x6B2000
	0x03AA51E8 ADRP X26, 0x6B2000
	0x03AA51EC ADRP X25, 0x6B2000
	0x03AA51F0 ADRP X24, 0x6B2000
	0x03AA51F4 LDR X28, [X28 + 0x928]
	0x03AA51F8 LDR X22, [X22 + 0xAD8]
	0x03AA51FC LDR X27, [X27 + 0x8A8]
	0x03AA5200 LDR X26, [X26 + 0xAF8]
	0x03AA5204 LDR X25, [X25 + 0x8B0]
	0x03AA5208 LDR X24, [X24 + 0xB10]
	0x03AA520C MOV X0, X20
	0x03AA5210 MOV X1, X31
	0x03AA5214 BL 0x33BDD8C
	0x03AA5218 LDR X0, [X23]
	0x03AA521C LDR W8, [X0 + 0xE0]
	0x03AA5220 CBNZ W8, 0x3AA5228
	0x03AA5224 BL 0x1C16DFC
	0x03AA5228 MOV X0, X31
	0x03AA522C BL 0x3A70480
	0x03AA5230 AND W8, W0, 0x1
	0x03AA5234 AND W9, W21, 0x1
	0x03AA5238 STRB W8, [X20 + 0x50]
	0x03AA523C STRB W9, [X20 + 0x51]
	0x03AA5240 LDR X0, [X28]
	0x03AA5244 MOV X1, X31
	0x03AA5248 BL 0x3C124EC
	0x03AA524C LDR X8, [X22]
	0x03AA5250 MOV X1, X31
	0x03AA5254 LDR X8, [X8 + 0xB8]
	0x03AA5258 STR W0, [X8]
	0x03AA525C LDR X0, [X27]
	0x03AA5260 BL 0x3C124EC
	0x03AA5264 LDR X8, [X22]
	0x03AA5268 MOV X1, X31
	0x03AA526C LDR X8, [X8 + 0xB8]
	0x03AA5270 STR W0, [X8 + 0x4]
	0x03AA5274 LDR X0, [X26]
	0x03AA5278 BL 0x3C124EC
	0x03AA527C LDR X8, [X22]
	0x03AA5280 MOV X1, X31
	0x03AA5284 LDR X8, [X8 + 0xB8]
	0x03AA5288 STR W0, [X8 + 0x8]
	0x03AA528C LDR X0, [X25]
	0x03AA5290 BL 0x3C124EC
	0x03AA5294 LDR X8, [X22]
	0x03AA5298 MOV X1, X31
	0x03AA529C LDR X8, [X8 + 0xB8]
	0x03AA52A0 STR W0, [X8 + 0xC]
	0x03AA52A4 LDR X0, [X24]
	0x03AA52A8 BL 0x3C124EC
	0x03AA52AC LDR X8, [X22]
	0x03AA52B0 LDR X8, [X8 + 0xB8]
	0x03AA52B4 STR W0, [X8 + 0x10]
	0x03AA52B8 LDRB W8, [X20 + 0x50]
	0x03AA52BC CBZ W8, 0x3AA52F4
	0x03AA52C0 ADRP X8, 0x6B2000
	0x03AA52C4 LDR X8, [X8 + 0xB20]
	0x03AA52C8 ADRP X21, 0x6B2000
	0x03AA52CC MOV X1, X31
	0x03AA52D0 LDR X0, [X8]
	0x03AA52D4 LDR X21, [X21 + 0xB08]
	0x03AA52D8 BL 0x3C124EC
	0x03AA52DC STR W0, [X20 + 0x10]
	0x03AA52E0 LDR X0, [X21]
	0x03AA52E4 MOV X1, X31
	0x03AA52E8 BL 0x3C124EC
	0x03AA52EC STR W0, [X20 + 0x14]
	0x03AA52F0 B 0x3AA544C
	0x03AA52F4 ADRP X8, 0x6B2000
	0x03AA52F8 LDR X8, [X8 + 0xB18]
	0x03AA52FC MOV X1, X31
	0x03AA5300 LDR X0, [X8]
	0x03AA5304 BL 0x3C124EC
	0x03AA5308 LDR X8, [X22]
	0x03AA530C MOV X1, X31
	0x03AA5310 LDR X8, [X8 + 0xB8]
	0x03AA5314 STR W0, [X8 + 0x14]
	0x03AA5318 ADRP X8, 0x6B2000
	0x03AA531C LDR X8, [X8 + 0xAE8]
	0x03AA5320 LDR X0, [X8]
	0x03AA5324 BL 0x3C124EC
	0x03AA5328 LDR X8, [X22]
	0x03AA532C MOV X1, X31
	0x03AA5330 LDR X8, [X8 + 0xB8]
	0x03AA5334 STR W0, [X8 + 0x18]
	0x03AA5338 ADRP X8, 0x6B2000
	0x03AA533C LDR X8, [X8 + 0xB28]
	0x03AA5340 LDR X0, [X8]
	0x03AA5344 BL 0x3C124EC
	0x03AA5348 LDR X8, [X22]
	0x03AA534C MOV X1, X31
	0x03AA5350 LDR X8, [X8 + 0xB8]
	0x03AA5354 STR W0, [X8 + 0x1C]

ISIL:
	001 Move [X31-144], D13
	002 Move [X31-136], D12
	003 Move [X31+16], D11
	004 Move [X31+24], D10
	005 Move [X31+32], D9
	006 Move [X31+40], D8
	007 Move [X31+48], X29
	008 Move [X31+56], X30
	009 Move [X31+64], X28
	010 Move [X31+72], X27
	011 Move [X31+80], X26
	012 Move [X31+88], X25
	013 Move [X31+96], X24
	014 Move [X31+104], X23
	015 Move [X31+112], X22
	016 Move [X31+120], X21
	017 Move [X31+128], X20
	018 Move [X31+136], X19
	019 Subtract X31, X31, 2352
	020 Move [X31+48], X1
	021 NotImplemented "Instruction MRS not yet implemented."
	022 Move X8, [X23+40]
	023 Move X21, 0x93F000
	024 Move X20, 0x6B1000
	025 Move X24, X2
	026 Move [X31+2344], X8
	027 Move W8, [X21+1028]
	028 Move X20, [X20+168]
	029 Move X19, X0
	030 Move TEMP, X8
	031 And TEMP, TEMP, 1
	032 Compare TEMP, 1
	033 JumpIfEqual {63}
	034 Move X0, 0x678000
	035 Move X0, [X0+2296]
	036 Call 0x1C17CF4
	037 Move X0, 0x651000
	038 Move X0, [X0+3624]
	039 Call 0x1C17CF4
	040 Move X0, 0x67A000
	041 Move X0, [X0+3896]
	042 Call 0x1C17CF4
	043 Move X0, 0x6B3000
	044 Move X0, [X0+3840]
	045 Call 0x1C17CF4
	046 Move X0, 0x6B1000
	047 Move X0, [X0+168]
	048 Call 0x1C17CF4
	049 Move X0, 0x6B3000
	050 Move X0, [X0+3776]
	051 Call 0x1C17CF4
	052 Move X0, 0x679000
	053 Move X0, [X0+2216]
	054 Call 0x1C17CF4
	055 Move X0, 0x6B4000
	056 Move X0, [X0+2696]
	057 Call 0x1C17CF4
	058 Move X0, 0x6B2000
	059 Move X0, [X0+3992]
	060 Call 0x1C17CF4
	061 Move W8, 1
	062 Move [X21+1028], W8
	063 Add X0, X31, 1888
	064 Move W2, 456
	065 Move W1, W31
	066 Move [X31+416], W31
	067 Call 0x3EB2B10
	068 Add X0, X31, 1600
	069 Move W2, 288
	070 Move W1, W31
	071 Call 0x3EB2B10
	072 NotImplemented "Instruction MOVI not yet implemented."
	073 Move [X31+400], W31
	074 Move [X31+368], V0
	075 Move [X31+376], V0
	076 Move [X31+336], V0
	077 Move [X31+344], V0
	078 Move [X31+304], V0
	079 Move [X31+312], V0
	080 Move [X31+18], V0
	081 Move X8, [X24+568]
	082 Move X9, [X24+16]
	083 Move X1, [X20]
	084 NotImplemented "Instruction LDRSW not yet implemented."
	085 Move [X31+80], X8
	086 Move X8, [X24+576]
	087 Move W0, 3
	088 Move [X31+64], X9
	089 Move [X31+72], X8
	090 Move X21, [X24]
	091 Move X8, [X24+8]
	092 Move [X31+56], X8
	093 Call 0x2236BC0, X0
	094 Move X2, X0
	095 Add X0, X31, 416
	096 Move X1, X21
	097 Move X3, X31
	098 Call ProfilingScope..ctor, X0, X1, X2
	099 Add X0, X24, 24
	100 Add X8, X31, 424
	101 Move W1, W31
	102 Move X2, X31
	103 Call CameraData.GetViewMatrix, X0, X1
	104 Move X9, 0x6B3000
	105 Move X9, [X9+3776]
	106 Add X8, X31, 424
	107 Move V0, [X8]
	108 Move V1, [X8+16]
	109 Move V2, [X8+32]
	110 Move V3, [X8+48]
	111 Move X0, [X9]
	112 Move [X31+71], V0
	113 Move [X31+72], V1
	114 Move [X31+73], V2
	115 Move [X31+74], V3
	116 Move W8, [X0+224]
	117 Compare W8, 0
	118 JumpIfNotEqual {120}
	119 Call 0x1C17DFC
	120 Move V0, [X31+71]
	121 Move V1, [X31+72]
	122 Move V2, [X31+73]
	123 Move V3, [X31+74]
	124 Move [X31+224], V0
	125 Move [X31+232], V1
	126 Move [X31+256], V2
	127 Move [X31+264], V3
	128 Add X1, X31, 224
	129 Move X0, X21
	130 Move X2, X31
	131 Call ShadowUtils.SetWorldToCameraMatrix, X0, X1
	132 Move X8, [X19+288]
	133 Compare X8, 0
	134 JumpIfEqual {458}
	135 Move W9, [X8+24]
	136 NotImplemented "Instruction CMP not yet implemented."
	137 Add X12, X24, 592
	138 Move [X31+8], X22
	139 Move [X31+16], X24
	140 Move [X31+92], W31
	141 Move [X31+24], X23
	142 Move [X31+32], X12
	143 Subtract X28, X9, 1
	144 Move X29, 0x657000
	145 Move X9, -50040832
	146 Move X29, [X29+1208]
	147 Move V8, [X9+576]
	148 Add X10, X31, 1136
	149 Add X11, X31, 424
	150 Move W25, W31
	151 Move X27, X31
	152 Move W22, 32
	153 Move X20, 0x936000
	154 Add X9, X10, 204
	155 Add X26, X11, 64
	156 Move S9, W31
	157 Move S10, 8
	158 Move S11, 1
	159 Move S12, -1
	160 Move [X31+40], X9
	161 Move X9, 0x67A000
	162 Move X9, [X9+3896]
	163 Move X2, [X9]
	164 Move X0, X8
	165 Move W1, W27
	166 Call List`1<Int32>.get_Item, X0, X1
	167 Move X8, [X19+304]
	168 Compare X8, 0
	169 JumpIfEqual {448}
	170 Move W9, [X8+24]
	171 Move W24, W0
	172 NotImplemented "Instruction CMP not yet implemented."
	173 Move X23, W24
	174 Add X8, X8, X23
	175 Move W9, [X20+1450]
	176 Move V13, [X8+32]
	177 Compare W9, 0
	178 JumpIfNotEqual {183}
	179 Move X0, X29
	180 Call 0x1C17CF4
	181 Move W8, 1
	182 Move [X20+1450], W8
	183 Move X8, [X29]
	184 NotImplemented "Instruction FABS not yet implemented."
	185 NotImplemented "Instruction FMAXNM not yet implemented."
	186 Multiply S1, S1, S8
	187 Move X8, [X8+184]
	188 NotImplemented "Instruction FABD not yet implemented."
	189 Move V0, [X8]
	190 Multiply S0, S0, S10
	191 NotImplemented "Instruction FCMP not yet implemented."
	192 NotImplemented "Instruction FCSEL not yet implemented."
	193 NotImplemented "Instruction FCMP not yet implemented."
	194 Move X8, [X19+304]
	195 Compare X8, 0
	196 JumpIfEqual {451}
	197 Move W9, [X8+24]
	198 NotImplemented "Instruction CMP not yet implemented."
	199 Add X8, X8, X23
	200 Move V1, [X8+44]
	201 NotImplemented "Instruction FABS not yet implemented."
	202 NotImplemented "Instruction FMAXNM not yet implemented."
	203 Multiply S2, S2, S8
	204 NotImplemented "Instruction FCMP not yet implemented."
	205 NotImplemented "Instruction FCSEL not yet implemented."
	206 NotImplemented "Instruction FABD not yet implemented."
	207 NotImplemented "Instruction FCMP not yet implemented."
	208 Move X8, [X19+280]
	209 Compare X8, 0
	210 JumpIfEqual {455}
	211 Move W9, [X8+24]
	212 NotImplemented "Instruction CMP not yet implemented."
	213 Add X8, X8, X23
	214 Move W25, [X8+32]
	215 Move X8, 0x6B3000
	216 Move X8, [X8+3840]
	217 Move X3, [X8]
	218 Move X1, [X31+72]
	219 Move X0, [X31+80]
	220 Move W2, W25
	221 Call 0x2223228, X0, X1
	222 Move X8, [X19+264]
	223 Compare X8, 0
	224 JumpIfEqual {454}
	225 Move W9, [X8+24]
	226 NotImplemented "Instruction CMP not yet implemented."
	227 Move X24, X0
	228 Add X1, X8, X22
	229 Add X0, X31, 1888
	230 Move W2, 456
	231 Call 0x3EB2B30
	232 Move X1, [X31+56]
	233 Move X2, [X31+64]
	234 Add X0, X31, 1600
	235 Move W4, 1
	236 Move W3, W25
	237 Move X5, X31
	238 Call ShadowDrawingSettings..ctor, X0, X1, X2, X3
	239 Move X8, 0x679000
	240 Move X8, [X8+2216]
	241 Move X0, [X8]
	242 Move W8, [X0+224]
	243 Compare W8, 0
	244 JumpIfNotEqual {246}
	245 Call 0x1C17DFC
	246 Move X0, X31
	247 Call UniversalRenderPipeline.get_asset
	248 Compare X0, 0
	249 JumpIfEqual {452}
	250 Move W1, [X0+236]
	251 Add X0, X31, 1600
	252 Move X2, X31
	253 Call ShadowDrawingSettings.set_useRenderingLayerMaskTest, X0, X1
	254 Add X0, X31, 1136
	255 Add X1, X31, 1888
	256 Move W2, 456
	257 Call 0x3EB2AC0
	258 Move X1, [X31+40]
	259 Add X0, X31, 880
	260 Move W2, 252
	261 Call 0x3EB2AC0
	262 Add X0, X31, 1600
	263 Add X1, X31, 880
	264 Move X2, X31
	265 Call ShadowDrawingSettings.set_splitData, X0, X1
	266 Add X0, X31, 424
	267 Add X1, X31, 1888
	268 Move W2, 456
	269 Call 0x3EB2AC0
	270 Move X8, 0x6B3000
	271 Move V0, [X26+32]
	272 Move V1, [X26+48]
	273 Move V2, [X26]
	274 Move V3, [X26+16]
	275 Move X8, [X8+3776]
	276 Move W23, [X31+2088]
	277 Move [X31+192], V0
	278 Move [X31+200], V1
	279 Move [X31+160], V2
	280 Move [X31+168], V3
	281 Move X0, [X8]
	282 Move W8, [X0+224]
	283 Compare W8, 0
	284 JumpIfNotEqual {286}
	285 Call 0x1C17DFC
	286 Move V0, [X31+160]
	287 Move V1, [X31+176]
	288 Move V2, [X31+192]
	289 Move V3, [X31+208]
	290 Move [X31+96], V0
	291 Move [X31+104], V1
	292 NotImplemented "Instruction SCVTF not yet implemented."
	293 Move [X31+128], V2
	294 Move [X31+136], V3
	295 Move X2, [X31+32]
	296 Add X3, X31, 96
	297 Move X0, X24
	298 Move W1, W25
	299 Move X4, X31
	300 Call ShadowUtils.GetShadowBias, X0, X1, X2, X3, V0
	301 Move X0, X21
	302 Move X1, X24
	303 Move X2, X31
	304 Call ShadowUtils.SetupShadowCasterConstantBuffer, X0, X1, X2
	305 Move X8, 0x677000
	306 Move X8, [X8+2296]
	307 Move X0, [X8]
	308 Move W8, [X0+224]
	309 Compare W8, 0
	310 JumpIfNotEqual {312}
	311 Call 0x1C17DFC
	312 Move X8, 0x6B3000
	313 Move X8, [X8+2696]
	314 Move X1, [X8]
	315 Move W2, 1
	316 Move X0, X21
	317 Move X3, X31
	318 Call CoreUtils.SetKeyword, X0, X1, X2
	319 Move X1, [X31+48]
	320 Add X2, X31, 1888
	321 Add X3, X31, 1600
	322 Move X0, X21
	323 Move X4, X31
	324 Call ShadowUtils.RenderShadowSlice, X0, X1, X2, X3
	325 Move X0, X24
	326 Move X1, X31
	327 Call VisibleLight.get_light, X0
	328 Compare X0, 0
	329 JumpIfEqual {457}
	330 Move X1, X31
	331 Call Light.get_shadows, X0
	332 Move W9, [X31+92]
	333 NotImplemented "Instruction CMP not yet implemented."
	334 NotImplemented "Instruction CSET not yet implemented."
	335 Move W25, 1
	336 Or W9, W9, W8
	337 Move [X31+92], W9
	338 NotImplemented "Instruction CMP not yet implemented."
	339 Move X8, [X19+288]
	340 Add X27, X27, 1
	341 Add X22, X22, 456
	342 Compare X8, 0
	343 JumpIfNotEqual {161}
	344 Call 0x1C17F20
	345 Move X24, [X31+16]
	346 Move X23, [X31+24]
	347 Move X22, [X31+8]
	348 Move W26, [X31+92]
	349 Move W25, W31
	350 Move W26, W31
	351 Add W31, W22, 1
	352 Move W20, W31
	353 Move W8, [X24+592]
	354 Compare W8, 0
	355 JumpIfEqual {371}
	356 Move X9, [X31+80]
	357 Move W8, 116
	358 Add X0, X31, 288
	359 Move W2, 116
	360 NotImplemented "Instruction MADD not yet implemented."
	361 Call 0x3EB2B30
	362 Add X0, X31, 288
	363 Move X1, X31
	364 Call VisibleLight.get_light, X0
	365 Compare X0, 0
	366 JumpIfEqual {460}
	367 Move X1, X31
	368 Call Light.get_shadows, X0
	369 NotImplemented "Instruction CMP not yet implemented."
	370 NotImplemented "Instruction CSET not yet implemented."
	371 Move X8, [X24+464]
	372 Compare X8, 0
	373 JumpIfEqual {459}
	374 Move W8, [X8+422]
	375 NotImplemented "Instruction CMP not yet implemented."
	376 NotImplemented "Instruction CSET not yet implemented."
	377 Or W8, W25, W8
	378 And W22, W8, 1
	379 Move [X24+664], W22
	380 Move X8, 0x677000
	381 Move X8, [X8+2296]
	382 Move X0, [X8]
	383 Move W8, [X0+224]
	384 Compare W8, 0
	385 JumpIfNotEqual {387}
	386 Call 0x1C17DFC
	387 Move X8, 0x6B1000
	388 Move X8, [X8+3992]
	389 Move X1, [X8]
	390 Move X0, X21
	391 Move W2, W22
	392 Move X3, X31
	393 Call CoreUtils.SetKeyword, X0, X1, X2
	394 Move W8, [X24+636]
	395 And W9, W26, 1
	396 Or W9, W20, W9
	397 NotImplemented "Instruction CMP not yet implemented."
	398 NotImplemented "Instruction CSET not yet implemented."
	399 NotImplemented "Instruction CMP not yet implemented."
	400 NotImplemented "Instruction CSET not yet implemented."
	401 And W22, W9, W8
	402 Move [X24+665], W22
	403 Move X8, 0x6B2000
	404 Move X8, [X8+3776]
	405 Move X0, [X8]
	406 Move W8, [X0+224]
	407 Compare W8, 0
	408 JumpIfNotEqual {410}
	409 Call 0x1C17DFC
	410 Add X1, X24, 592
	411 Move X0, X21
	412 Move X2, X31
	413 Call ShadowUtils.SetSoftShadowQualityShaderKeywords, X0, X1
	414 Move TEMP, X25
	415 And TEMP, TEMP, 1
	416 Compare TEMP, 1
	417 JumpIfNotEqual {422}
	418 Move X0, X19
	419 Move X1, X21
	420 Move W2, W22
	421 Call AdditionalLightsShadowCasterPass.SetupAdditionalLightsShadowReceiverConstants, X0, X1, X2
	422 Add X0, X31, 416
	423 Move X1, X31
	424 Call ProfilingScope.Dispose, X0
	425 Move X8, [X23+40]
	426 Move X9, [X31+2344]
	427 NotImplemented "Instruction CMP not yet implemented."
	428 Add X31, X31, 2352
	429 Move X20, [X31+128]
	430 Move X19, [X31+136]
	431 Move X22, [X31+112]
	432 Move X21, [X31+120]
	433 Move X24, [X31+96]
	434 Move X23, [X31+104]
	435 Move X26, [X31+80]
	436 Move X25, [X31+88]
	437 Move X28, [X31+64]
	438 Move X27, [X31+72]
	439 Move X29, [X31+48]
	440 Move X30, [X31+56]
	441 Move D9, [X31+32]
	442 Move D8, [X31+40]
	443 Move D11, [X31+16]
	444 Move D10, [X31+24]
	445 Move D13, [X31+144]
	446 Move D12, [X31+152]
	447 Return 
	448 Call 0x1C17F20
	449 Call 0x1C17F28
	450 Call 0x1C17F28
	451 Call 0x1C17F20
	452 Call 0x1C17F20
	453 Call 0x1C17F28
	454 Call 0x1C17F20
	455 Call 0x1C17F20
	456 Call 0x1C17F28
	457 Call 0x1C17F20
	458 Call 0x1C17F20
	459 Call 0x1C17F20
	460 Call 0x1C17F20
	461 Call 0x3EB2B20
	462 Move X23, [X31+24]
	463 Move X19, X0
	464 NotImplemented "Instruction CMP not yet implemented."
	465 Move X0, X19
	466 Call 0x3EB2AD0
	467 Move X20, [X0]
	468 Call 0x3EB2AE0
	469 Add X0, X31, 416
	470 Move X1, X31
	471 Call ProfilingScope.Dispose, X0
	472 Compare X20, 0
	473 JumpIfEqual {425}
	474 Move X0, X20
	475 Call 0x1C17F18
	476 Move X20, X31
	477 Move X19, X0
	478 Add X0, X31, 416
	479 Move X1, X31
	480 Call ProfilingScope.Dispose, X0
	481 Compare X20, 0
	482 JumpIfNotEqual {485}
	483 Move X0, X19
	484 Call 0x1D2D690
	485 Move X0, X20
	486 Call 0x1C17F18
	487 Call 0x1991590

Method: System.Void SetupAdditionalLightsShadowReceiverConstants(UnityEngine.Rendering.CommandBuffer cmd, System.Boolean softShadows)

Disassembly:
	0x03AA5474 BL 0x3EB1AC0
	0x03AA5478 ADD X0, X20, 0xB0
	0x03AA547C ADD X1, X31, 0x80
	0x03AA5480 MOVZ W2, 0x80
	0x03AA5484 BL 0x3EB1AC0
	0x03AA5488 STR X19, [X20 + 0xA8]
	0x03AA548C LDP X20, X19, [X31 + 0x150]
	0x03AA5490 LDP X22, X21, [X31 + 0x140]
	0x03AA5494 LDP X24, X23, [X31 + 0x130]
	0x03AA5498 LDP X26, X25, [X31 + 0x120]
	0x03AA549C LDP X28, X27, [X31 + 0x110]
	0x03AA54A0 LDP X29, X30, [X31 + 0x100]
	0x03AA54A4 ADD X31, X31, 0x160
	0x03AA54A8 RET
	0x03AA54AC SUB X31, X31, 0x50
	0x03AA54B0 STP X30, X23, [X31 + 0x20]
	0x03AA54B4 STP X22, X21, [X31 + 0x30]
	0x03AA54B8 STP X20, X19, [X31 + 0x40]
	0x03AA54BC ADRP X21, 0x93D000
	0x03AA54C0 ADRP X20, 0x677000
	0x03AA54C4 LDRB W8, [X21 + 0x40C]
	0x03AA54C8 LDR X20, [X20 + 0x8A8]
	0x03AA54CC MOV X19, X0
	0x03AA54D0 TBNZ X8, 0x0, 0x3AA5524
	0x03AA54D4 ADRP X0, 0x6AC000
	0x03AA54D8 LDR X0, [X0 + 0xE68]
	0x03AA54DC BL 0x1C16CF4
	0x03AA54E0 ADRP X0, 0x6AC000
	0x03AA54E4 LDR X0, [X0 + 0xEB0]
	0x03AA54E8 BL 0x1C16CF4
	0x03AA54EC ADRP X0, 0x677000
	0x03AA54F0 LDR X0, [X0 + 0x8A8]
	0x03AA54F4 BL 0x1C16CF4
	0x03AA54F8 ADRP X0, 0x6B2000
	0x03AA54FC LDR X0, [X0 + 0xB30]
	0x03AA5500 BL 0x1C16CF4
	0x03AA5504 ADRP X0, 0x6B2000
	0x03AA5508 LDR X0, [X0 + 0xB38]
	0x03AA550C BL 0x1C16CF4
	0x03AA5510 ADRP X0, 0x6B2000
	0x03AA5514 LDR X0, [X0 + 0xB40]
	0x03AA5518 BL 0x1C16CF4
	0x03AA551C MOVZ W8, 0x1
	0x03AA5520 STRB W8, [X21 + 0x40C]
	0x03AA5524 LDR X0, [X20]
	0x03AA5528 ADRP X23, 0x6AC000
	0x03AA552C ADRP X22, 0x6AC000
	0x03AA5530 LDR W8, [X0 + 0xE0]
	0x03AA5534 LDR X23, [X23 + 0xEB0]
	0x03AA5538 LDR X22, [X22 + 0xE68]
	0x03AA553C CBNZ W8, 0x3AA5544
	0x03AA5540 BL 0x1C16DFC
	0x03AA5544 MOV X0, X31
	0x03AA5548 BL 0x3A89440
	0x03AA554C LDR X4, [X23]
	0x03AA5550 MOV W1, W0
	0x03AA5554 ADD X0, X31, 0x10
	0x03AA5558 MOVZ W2, 0x4
	0x03AA555C MOVZ W3, 0x1
	0x03AA5560 STP X31, X31, [X31 + 0x10]
	0x03AA5564 BL 0x23EC700
	0x03AA5568 LDR V0, [X31 + 0x1]
	0x03AA556C MOV X0, X31
	0x03AA5570 STUR V0, [X19 + 0x78]
	0x03AA5574 BL 0x3A89440
	0x03AA5578 LDR X8, [X22]
	0x03AA557C MOV W21, W0
	0x03AA5580 MOV X0, X8
	0x03AA5584 BL 0x1C16F10
	0x03AA5588 ADD W8, W21, 0x3
	0x03AA558C CMP W21, 0x0
	0x03AA5590 CSEL W8, W8, W21, LT
	0x03AA5594 SBFM W2, W8, 0x2, 0x1F
	0x03AA5598 MOVZ W1, 0x200
	0x03AA559C MOVZ W3, 0x10
	0x03AA55A0 MOV X4, X31
	0x03AA55A4 MOV X20, X0
	0x03AA55A8 BL 0x3C16244
	0x03AA55AC STR X20, [X19 + 0x88]
	0x03AA55B0 CBZ X20, 0x3AA5668
	0x03AA55B4 ADRP X8, 0x6B2000
	0x03AA55B8 LDR X8, [X8 + 0xB40]
	0x03AA55BC MOV X0, X20
	0x03AA55C0 MOV X2, X31
	0x03AA55C4 LDR X1, [X8]
	0x03AA55C8 BL 0x3C16604
	0x03AA55CC MOV X0, X31
	0x03AA55D0 BL 0x3A89448
	0x03AA55D4 LDR X4, [X23]
	0x03AA55D8 MOV W1, W0
	0x03AA55DC ADD X0, X31, 0x0
	0x03AA55E0 MOVZ W2, 0x4
	0x03AA55E4 MOVZ W3, 0x1
	0x03AA55E8 STP X31, X31, [X31]
	0x03AA55EC BL 0x23EC700
	0x03AA55F0 LDR V0, [X31]
	0x03AA55F4 MOV X0, X31
	0x03AA55F8 STR V0, [X19 + 0x9]
	0x03AA55FC BL 0x3A89448
	0x03AA5600 LDR X8, [X22]
	0x03AA5604 MOV W21, W0
	0x03AA5608 MOV X0, X8
	0x03AA560C BL 0x1C16F10
	0x03AA5610 ADD W8, W21, 0x3
	0x03AA5614 CMP W21, 0x0
	0x03AA5618 CSEL W8, W8, W21, LT
	0x03AA561C SBFM W2, W8, 0x2, 0x1F
	0x03AA5620 MOVZ W1, 0x200
	0x03AA5624 MOVZ W3, 0x10
	0x03AA5628 MOV X4, X31
	0x03AA562C MOV X20, X0
	0x03AA5630 BL 0x3C16244
	0x03AA5634 STR X20, [X19 + 0xA0]
	0x03AA5638 CBZ X20, 0x3AA5668
	0x03AA563C ADRP X8, 0x6B2000
	0x03AA5640 LDR X8, [X8 + 0xB38]
	0x03AA5644 MOV X0, X20
	0x03AA5648 MOV X2, X31
	0x03AA564C LDR X1, [X8]
	0x03AA5650 BL 0x3C16604
	0x03AA5654 LDP X20, X19, [X31 + 0x40]
	0x03AA5658 LDP X22, X21, [X31 + 0x30]
	0x03AA565C LDP X30, X23, [X31 + 0x20]
	0x03AA5660 ADD X31, X31, 0x50
	0x03AA5664 RET
	0x03AA5668 BL 0x1C16F20
	0x03AA566C ADD X1, X0, 0xB0
	0x03AA5670 MOVZ W2, 0x80
	0x03AA5674 MOV X0, X8
	0x03AA5678 B 0x3EB1AC0
	0x03AA567C ADD W8, W0, W1
	0x03AA5680 SUB W8, W8, 0x1
	0x03AA5684 SDIV W8, W8, W1
	0x03AA5688 MUL W0, W8, W1
	0x03AA568C RET
	0x03AA5690 STP D11, D10, [X31 - 0x50]!
	0x03AA5694 STP D9, D8, [X31 + 0x10]
	0x03AA5698 STP X30, X23, [X31 + 0x20]
	0x03AA569C STP X22, X21, [X31 + 0x30]
	0x03AA56A0 STP X20, X19, [X31 + 0x40]
	0x03AA56A4 MOV X22, X2
	0x03AA56A8 MOV X23, X1
	0x03AA56AC MOV X0, X2
	0x03AA56B0 MOV W1, W31
	0x03AA56B4 MOV X2, X31
	0x03AA56B8 MOV X19, X5
	0x03AA56BC MOV X20, X4
	0x03AA56C0 MOV X21, X3
	0x03AA56C4 BL 0x389833C
	0x03AA56C8 MOV W1, W31
	0x03AA56CC MOV X2, X31
	0x03AA56D0 BL 0x3892998
	0x03AA56D4 MOVZ W1, 0x1
	0x03AA56D8 MOV X0, X22
	0x03AA56DC MOV X2, X31
	0x03AA56E0 MOV V8.16B, V0.16B
	0x03AA56E4 BL 0x389833C
	0x03AA56E8 MOVZ W1, 0x1
	0x03AA56EC MOV X2, X31
	0x03AA56F0 BL 0x3892998
	0x03AA56F4 CBZ X23, 0x3AA57E8
	0x03AA56F8 MOV V9.16B, V0.16B
	0x03AA56FC FMOV S0, 1
	0x03AA5700 MOV X0, X23
	0x03AA5704 MOV X1, X31
	0x03AA5708 FDIV S11, S0, S9
	0x03AA570C BL 0x3C03928
	0x03AA5710 TBZ X0, 0x0, 0x3AA575C
	0x03AA5714 MOVZ W1, 0x3
	0x03AA5718 MOV X0, X22
	0x03AA571C MOV X2, X31
	0x03AA5720 BL 0x389833C
	0x03AA5724 MOV W1, W31
	0x03AA5728 MOV X2, X31
	0x03AA572C BL 0x3892998
	0x03AA5730 MOVZ W1, 0x3
	0x03AA5734 MOV X0, X22
	0x03AA5738 MOV X2, X31
	0x03AA573C MOV V10.16B, V0.16B
	0x03AA5740 BL 0x389833C
	0x03AA5744 MOVZ W1, 0x1
	0x03AA5748 MOV X2, X31
	0x03AA574C BL 0x3892998

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+16], D14
	003 Move [X31+24], D13
	004 Move [X31+32], D12
	005 Move [X31+40], D11
	006 Move [X31+48], D10
	007 Move [X31+56], D9
	008 Move [X31+64], D8
	009 Move [X31+72], X30
	010 Move [X31+80], X24
	011 Move [X31+88], X23
	012 Move [X31+96], X22
	013 Move [X31+104], X21
	014 Move [X31+112], X20
	015 Move [X31+120], X19
	016 Move X22, 0x93E000
	017 Move W8, [X22+1029]
	018 Move W20, W2
	019 Move X19, X1
	020 Move X21, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {36}
	025 Move X0, 0x6B2000
	026 Move X0, [X0+2248]
	027 Call 0x1C17CF4
	028 Move X0, 0x6B3000
	029 Move X0, [X0+2440]
	030 Call 0x1C17CF4
	031 Move X0, 0x6B2000
	032 Move X0, [X0+3776]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X22+1029], W8
	036 Move [X31+8], X31
	037 Move X23, 0x6B3000
	038 Move W8, [X21+224]
	039 Move X23, [X23+2440]
	040 Compare W8, 0
	041 JumpIfEqual {97}
	042 Move X0, X31
	043 Call ShaderData.get_instance
	044 Move X8, [X21+304]
	045 Compare X8, 0
	046 JumpIfEqual {216}
	047 Compare X0, 0
	048 JumpIfEqual {216}
	049 Move W1, [X8+24]
	050 Move X2, X31
	051 Call ShaderData.GetAdditionalLightShadowParamsStructuredBuffer, X0, X1
	052 Compare X0, 0
	053 JumpIfEqual {216}
	054 Move X1, [X21+304]
	055 Move X24, 0x6B2000
	056 Move X24, [X24+2248]
	057 Move X2, X31
	058 Move X22, X0
	059 Call ComputeBuffer.SetData, X0, X1
	060 Move X0, [X24]
	061 Move W8, [X0+224]
	062 Compare W8, 0
	063 JumpIfNotEqual {65}
	064 Call 0x1C17DFC
	065 Compare X19, 0
	066 JumpIfEqual {216}
	067 Move X8, [X24]
	068 Move X0, X19
	069 Move X2, X22
	070 Move X3, X31
	071 Move X8, [X8+184]
	072 Move W1, [X8+28]
	073 Call CommandBuffer.SetGlobalBuffer, X0, X1, X2
	074 Move X0, X31
	075 Call ShaderData.get_instance
	076 Move X8, [X21+312]
	077 Compare X8, 0
	078 JumpIfEqual {216}
	079 Compare X0, 0
	080 JumpIfEqual {216}
	081 Move W1, [X8+24]
	082 Move X2, X31
	083 Call ShaderData.GetAdditionalLightShadowSliceMatricesStructuredBuffer, X0, X1
	084 Compare X0, 0
	085 JumpIfEqual {216}
	086 Move X1, [X21+312]
	087 Move X2, X31
	088 Move X22, X0
	089 Call ComputeBuffer.SetData, X0, X1
	090 Move X8, [X24]
	091 Move X0, X19
	092 Move X2, X22
	093 Move X3, X31
	094 Move X8, [X8+184]
	095 Move W1, [X8+24]
	096 Call CommandBuffer.SetGlobalBuffer, X0, X1, X2
	097 Compare X19, 0
	098 JumpIfEqual {216}
	099 Move X8, [X23]
	100 Move X2, [X21+304]
	101 Move X0, X19
	102 Move X3, X31
	103 Move X8, [X8+184]
	104 Move W1, [X8+4]
	105 Call CommandBuffer.SetGlobalVectorArray, X0, X1, X2
	106 Move X8, [X23]
	107 Move X2, [X21+312]
	108 Move X0, X19
	109 Move X3, X31
	110 Move X8, [X8+184]
	111 Move W1, [X8]
	112 Call CommandBuffer.SetGlobalMatrixArray, X0, X1, X2
	113 Move X8, 0x6B2000
	114 Move X8, [X8+3776]
	115 Move V8, [X21+256]
	116 Move V9, [X21+260]
	117 Move X0, [X8]
	118 Move W8, [X0+224]
	119 Compare W8, 0
	120 JumpIfNotEqual {122}
	121 Call 0x1C17DFC
	122 Add X0, X31, 12
	123 Add X1, X31, 8
	124 Move V0, V8
	125 Move V1, V9
	126 Move X2, X31
	127 Call ShadowUtils.GetScaleAndBiasForLinearDistanceFade, V0, V1, X0, X1
	128 Move X8, [X23]
	129 Move S1, [X31+8]
	130 Move S0, [X31+12]
	131 Move S2, W31
	132 Move S3, W31
	133 Move X8, [X8+184]
	134 Move X0, X19
	135 Move X2, X31
	136 Move W1, [X8+16]
	137 Call CommandBuffer.SetGlobalVector, X0, X1, X2
	138 Move TEMP, X20
	139 And TEMP, TEMP, 1
	140 Compare TEMP, 1
	141 JumpIfNotEqual {200}
	142 Move X8, [X21+232]
	143 Compare X8, 0
	144 JumpIfEqual {216}
	145 Move X22, 0x93D000
	146 Move W9, [X22+2632]
	147 Move W21, [X8+172]
	148 Move W20, [X8+176]
	149 Compare W9, 0
	150 JumpIfNotEqual {156}
	151 Move X0, 0x657000
	152 Move X0, [X0+3848]
	153 Call 0x1C17CF4
	154 Move W8, 1
	155 Move [X22+2632], W8
	156 Move X8, 0x657000
	157 Move X8, [X8+3848]
	158 Move X9, [X23]
	159 NotImplemented "Instruction SCVTF not yet implemented."
	160 NotImplemented "Instruction SCVTF not yet implemented."
	161 Move X8, [X8]
	162 Move X9, [X9+184]
	163 Move S2, 0.5
	164 Move X0, X19
	165 Move X8, [X8+184]
	166 Move W1, [X9+8]
	167 Move X2, X31
	168 Move S0, [X8+8]
	169 Move S1, [X8+12]
	170 NotImplemented "Instruction FDIV not yet implemented."
	171 NotImplemented "Instruction FDIV not yet implemented."
	172 Multiply S12, S10, S2
	173 NotImplemented "Instruction FNMUL not yet implemented."
	174 NotImplemented "Instruction FNMUL not yet implemented."
	175 Multiply S13, S11, S2
	176 Move V0, V14
	177 Move V2, V12
	178 Move V3, V1
	179 Call CommandBuffer.SetGlobalVector, X0, X1, X2
	180 Move X8, [X23]
	181 Move X0, X19
	182 Move V0, V14
	183 Move V1, V13
	184 Move X8, [X8+184]
	185 Move V2, V12
	186 Move V3, V13
	187 Move X2, X31
	188 Move W1, [X8+12]
	189 Call CommandBuffer.SetGlobalVector, X0, X1, X2
	190 Move X8, [X23]
	191 Move X0, X19
	192 Move V0, V10
	193 Move V1, V11
	194 Move X8, [X8+184]
	195 Move V2, V8
	196 Move V3, V9
	197 Move X2, X31
	198 Move W1, [X8+20]
	199 Call CommandBuffer.SetGlobalVector, X0, X1, X2
	200 Move X20, [X31+112]
	201 Move X19, [X31+120]
	202 Move X22, [X31+96]
	203 Move X21, [X31+104]
	204 Move X24, [X31+80]
	205 Move X23, [X31+88]
	206 Move X30, [X31+72]
	207 Move D9, [X31+56]
	208 Move D8, [X31+64]
	209 Move D11, [X31+40]
	210 Move D10, [X31+48]
	211 Move D13, [X31+24]
	212 Move D12, [X31+32]
	213 Move V14, [X31+16]
	214 Add X31, X31, 128
	215 Return 
	216 Call 0x1C17F20

Method: System.Boolean IsValidShadowCastingLight(ref UnityEngine.Rendering.Universal.LightData lightData, System.Int32 i)

Disassembly:
	0x03AA2E6C B.CS 0x3AA3524
	0x03AA2E70 LDR X9, [X31 + 0x40]
	0x03AA2E74 ADD X8, X8, X9, 0x4, LSL
	0x03AA2E78 STP S8, S0, [X8 + 0x20]
	0x03AA2E7C STR W31, [X8 + 0x28]
	0x03AA2E80 B 0x3AA2F20
	0x03AA2E84 MOV W23, W31
	0x03AA2E88 ADRP X8, 0x6B4000
	0x03AA2E8C LDR X8, [X8 + 0xEC0]
	0x03AA2E90 LDR X0, [X8]
	0x03AA2E94 LDR W8, [X0 + 0xE0]
	0x03AA2E98 CBNZ W8, 0x3AA2EA0
	0x03AA2E9C BL 0x1C16DFC
	0x03AA2EA0 MOV X0, X22
	0x03AA2EA4 MOV W1, W23
	0x03AA2EA8 MOV X2, X31
	0x03AA2EAC BL 0x3A77C88
	0x03AA2EB0 LDR X8, [X20 + 0x138]
	0x03AA2EB4 LDP V1, V2, [X31 + 0x290]
	0x03AA2EB8 LDP V3, V4, [X31 + 0x2B0]
	0x03AA2EBC STP V1, V2, [X31 + 0x230]
	0x03AA2EC0 STP V3, V4, [X31 + 0x250]
	0x03AA2EC4 CBZ X8, 0x3AA3550
	0x03AA2EC8 LDP V1, V2, [X31 + 0x230]
	0x03AA2ECC LDP V3, V4, [X31 + 0x250]
	0x03AA2ED0 STP V1, V2, [X31 + 0x1B0]
	0x03AA2ED4 STP V3, V4, [X31 + 0x1D0]
	0x03AA2ED8 LDR W9, [X8 + 0x18]
	0x03AA2EDC CMP W26, W9
	0x03AA2EE0 B.CS 0x3AA3544
	0x03AA2EE4 LDP V1, V2, [X31 + 0x1D0]
	0x03AA2EE8 LDP V3, V4, [X31 + 0x1B0]
	0x03AA2EEC ADD X8, X8, X26, 0x6, LSL
	0x03AA2EF0 STP V1, V2, [X8 + 0x40]
	0x03AA2EF4 STP V3, V4, [X8 + 0x20]
	0x03AA2EF8 LDR X8, [X20 + 0x130]
	0x03AA2EFC CBZ X8, 0x3AA354C
	0x03AA2F00 LDR W9, [X8 + 0x18]
	0x03AA2F04 CMP W28, W9
	0x03AA2F08 B.CS 0x3AA3548
	0x03AA2F0C LDR X9, [X31 + 0x40]
	0x03AA2F10 ADD X8, X8, X9, 0x4, LSL
	0x03AA2F14 MOVZ W9, 0x3F800000
	0x03AA2F18 STP S8, S0, [X8 + 0x20]
	0x03AA2F1C STR W9, [X8 + 0x28]
	0x03AA2F20 MOVZ W19, 0x1
	0x03AA2F24 STR S9, [X8 + 0x2C]
	0x03AA2F28 CMP W25, W21
	0x03AA2F2C B.EQ 0x3AA2F40
	0x03AA2F30 LDR X8, [X20 + 0x120]
	0x03AA2F34 ADD W21, W21, 0x1
	0x03AA2F38 CBNZ X8, 0x3AA2A50
	0x03AA2F3C B 0x3AA3428
	0x03AA2F40 LDR W21, [X31 + 0x34]
	0x03AA2F44 LDR X25, [X31 + 0x10]
	0x03AA2F48 B 0x3AA2F50
	0x03AA2F4C MOV W19, W31
	0x03AA2F50 LDR W22, [X31 + 0x38]
	0x03AA2F54 AND W8, W19, 0x1
	0x03AA2F58 LDR X19, [X31 + 0x48]
	0x03AA2F5C ADD W22, W22, W8
	0x03AA2F60 LDR W9, [X31 + 0x50]
	0x03AA2F64 LDR X8, [X31 + 0x60]
	0x03AA2F68 ADD X27, X27, 0x1
	0x03AA2F6C MOV W28, W9
	0x03AA2F70 CMP X27, X8
	0x03AA2F74 B.NE 0x3AA2918
	0x03AA2F78 LDR X29, [X31 + 0x28]
	0x03AA2F7C CBZ W22, 0x3AA2FE4
	0x03AA2F80 LDR X8, [X20 + 0x120]
	0x03AA2F84 CBZ X8, 0x3AA3568
	0x03AA2F88 LDR W23, [X8 + 0x18]
	0x03AA2F8C CMP W25, 0x1
	0x03AA2F90 B.LT 0x3AA2FF8
	0x03AA2F94 LDR X11, [X29]
	0x03AA2F98 CBZ X11, 0x3AA3570
	0x03AA2F9C LDR W9, [X11 + 0x18]
	0x03AA2FA0 MOV X8, X31
	0x03AA2FA4 AND X10, X25, 0x0
	0x03AA2FA8 ADD X11, X11, 0x38
	0x03AA2FAC MOVI V0.2D, 0x0
	0x03AA2FB0 CMP X8, X9
	0x03AA2FB4 B.CS 0x3AA346C
	0x03AA2FB8 LDUR V1, [X11 - 0x8]
	0x03AA2FBC UNIMPLEMENTED
	0x03AA2FC0 ADD X8, X8, 0x1
	0x03AA2FC4 CMP X10, X8
	0x03AA2FC8 ADD X11, X11, 0x1C

ISIL:
	001 Move [X31-48], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x941000
	007 Move W8, [X21+1030]
	008 Move W19, W2
	009 Move X20, X1
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x6B5000
	015 Move X0, [X0+3840]
	016 Call 0x1C17CF4
	017 Move X0, 0x652000
	018 Move X0, [X0+1432]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+1030], W8
	022 Move W8, [X20]
	023 NotImplemented "Instruction CMP not yet implemented."
	024 Move X8, 0x6B5000
	025 Move X0, [X20+16]
	026 Move X1, [X20+24]
	027 Move X8, [X8+3840]
	028 Move W2, W19
	029 Move X3, [X8]
	030 Call 0x2223228, X0, X1
	031 Move X1, X31
	032 Move X19, X0
	033 Call VisibleLight.get_lightType, X0
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Move X0, X19
	036 Move X1, X31
	037 Call VisibleLight.get_light, X0
	038 Move X8, 0x652000
	039 Move X8, [X8+1432]
	040 Move X19, X0
	041 Move X8, [X8]
	042 Move W9, [X8+224]
	043 Compare W9, 0
	044 JumpIfNotEqual {47}
	045 Move X0, X8
	046 Call 0x1C17DFC
	047 Move X0, X19
	048 Move X1, X31
	049 Move X2, X31
	050 Call Object.op_Inequality, X0, X1
	051 Move TEMP, X0
	052 And TEMP, TEMP, 1
	053 Compare TEMP, 1
	054 JumpIfNotEqual {93}
	055 Compare X19, 0
	056 JumpIfEqual {100}
	057 Move X0, X19
	058 Move X1, X31
	059 Call Light.get_shadows, X0
	060 Compare W0, 0
	061 JumpIfEqual {94}
	062 Move X0, X19
	063 Move X1, X31
	064 Call Light.get_shadowStrength, X0
	065 Move X19, 0x938000
	066 Move W8, [X19+1450]
	067 Move V8, V0
	068 Compare W8, 0
	069 JumpIfNotEqual {75}
	070 Move X0, 0x659000
	071 Move X0, [X0+1208]
	072 Call 0x1C17CF4
	073 Move W8, 1
	074 Move [X19+1450], W8
	075 Move X8, 0x659000
	076 Move X8, [X8+1208]
	077 Move X9, -50032640
	078 Move V0, [X9+576]
	079 NotImplemented "Instruction FABS not yet implemented."
	080 Move X8, [X8]
	081 Move S2, W31
	082 NotImplemented "Instruction FMAXNM not yet implemented."
	083 Multiply S0, S1, S0
	084 Move X8, [X8+184]
	085 Move S1, 8
	086 Move V3, [X8]
	087 Multiply S1, S3, S1
	088 NotImplemented "Instruction FCMP not yet implemented."
	089 NotImplemented "Instruction FCSEL not yet implemented."
	090 NotImplemented "Instruction FABD not yet implemented."
	091 NotImplemented "Instruction FCMP not yet implemented."
	092 NotImplemented "Instruction CSET not yet implemented."
	093 Move W0, W31
	094 Move X20, [X31+32]
	095 Move X19, [X31+40]
	096 Move X30, [X31+16]
	097 Move X21, [X31+24]
	098 Move V8, [X31+48]
	099 Return X0
	100 Call 0x1C17F20

Method: UnityEngine.Experimental.Rendering.RenderGraphModule.TextureHandle Render(UnityEngine.Experimental.Rendering.RenderGraphModule.RenderGraph graph, ref UnityEngine.Rendering.Universal.RenderingData renderingData)

Disassembly:
	0x03AA5750 FNEG S10, S10
	0x03AA5754 FNEG S0, S0
	0x03AA5758 B 0x3AA5798
	0x03AA575C MOVZ W1, 0x2
	0x03AA5760 MOV X0, X22
	0x03AA5764 MOV X2, X31
	0x03AA5768 BL 0x389833C
	0x03AA576C MOV W1, W31
	0x03AA5770 MOV X2, X31
	0x03AA5774 BL 0x3892998
	0x03AA5778 MOVZ W1, 0x2
	0x03AA577C MOV X0, X22
	0x03AA5780 MOV X2, X31
	0x03AA5784 MOV V10.16B, V0.16B
	0x03AA5788 BL 0x389833C
	0x03AA578C MOVZ W1, 0x1
	0x03AA5790 MOV X2, X31
	0x03AA5794 BL 0x3892998
	0x03AA5798 FMUL S1, S11, S0
	0x03AA579C FMOV S3, 0.5
	0x03AA57A0 FSUB S2, S1, S11
	0x03AA57A4 FADD S1, S11, S1
	0x03AA57A8 FMUL S6, S10, S3
	0x03AA57AC FMUL S0, S0, S3
	0x03AA57B0 FMUL S4, S8, S3
	0x03AA57B4 FMUL S5, S9, S3
	0x03AA57B8 STR S2, [X21]
	0x03AA57BC STR S1, [X20]
	0x03AA57C0 FSUB S1, S3, S6
	0x03AA57C4 FSUB S0, S3, S0
	0x03AA57C8 STP S4, S5, [X19]
	0x03AA57CC STP S1, S0, [X19 + 0x8]
	0x03AA57D0 LDP X20, X19, [X31 + 0x40]
	0x03AA57D4 LDP X22, X21, [X31 + 0x30]
	0x03AA57D8 LDP X30, X23, [X31 + 0x20]
	0x03AA57DC LDP D9, D8, [X31 + 0x10]
	0x03AA57E0 LDP D11, D10, [X31], #0x50
	0x03AA57E4 RET
	0x03AA57E8 BL 0x1C16F20
	0x03AA57EC STR D12, [X31 - 0x90]!
	0x03AA57F0 STP D11, D10, [X31 + 0x10]
	0x03AA57F4 STP D9, D8, [X31 + 0x20]
	0x03AA57F8 STP X29, X30, [X31 + 0x30]
	0x03AA57FC STP X28, X27, [X31 + 0x40]
	0x03AA5800 STP X26, X25, [X31 + 0x50]
	0x03AA5804 STP X24, X23, [X31 + 0x60]
	0x03AA5808 STP X22, X21, [X31 + 0x70]
	0x03AA580C STP X20, X19, [X31 + 0x80]
	0x03AA5810 SUB X31, X31, 0xAE0
	0x03AA5814 MRS X25, 0xC000
	0x03AA5818 LDR X8, [X25 + 0x28]
	0x03AA581C ADRP X20, 0x93D000
	0x03AA5820 MOV X27, X1
	0x03AA5824 MOV X19, X0
	0x03AA5828 STR X8, [X31 + 0xAD8]
	0x03AA582C LDRB W8, [X20 + 0x40D]
	0x03AA5830 ADD X21, X31, 0xAB8
	0x03AA5834 ADD X22, X31, 0x568
	0x03AA5838 TBNZ X8, 0x0, 0x3AA5934
	0x03AA583C ADRP X0, 0x6B2000
	0x03AA5840 LDR X0, [X0 + 0xB48]
	0x03AA5844 BL 0x1C16CF4
	0x03AA5848 ADRP X0, 0x6B2000
	0x03AA584C LDR X0, [X0 + 0xB50]
	0x03AA5850 BL 0x1C16CF4
	0x03AA5854 ADRP X0, 0x6B2000
	0x03AA5858 LDR X0, [X0 + 0xB58]
	0x03AA585C BL 0x1C16CF4
	0x03AA5860 ADRP X0, 0x6B1000
	0x03AA5864 LDR X0, [X0 + 0xFE8]
	0x03AA5868 BL 0x1C16CF4
	0x03AA586C ADRP X0, 0x6B2000
	0x03AA5870 LDR X0, [X0 + 0x180]
	0x03AA5874 BL 0x1C16CF4
	0x03AA5878 ADRP X0, 0x6B2000
	0x03AA587C LDR X0, [X0 + 0xB60]
	0x03AA5880 BL 0x1C16CF4
	0x03AA5884 ADRP X0, 0x6B2000
	0x03AA5888 LDR X0, [X0 + 0xB68]
	0x03AA588C BL 0x1C16CF4
	0x03AA5890 ADRP X0, 0x6B2000
	0x03AA5894 LDR X0, [X0 + 0xB70]
	0x03AA5898 BL 0x1C16CF4
	0x03AA589C ADRP X0, 0x6B2000
	0x03AA58A0 LDR X0, [X0 + 0xB78]
	0x03AA58A4 BL 0x1C16CF4
	0x03AA58A8 ADRP X0, 0x6B2000
	0x03AA58AC LDR X0, [X0 + 0xB80]
	0x03AA58B0 BL 0x1C16CF4
	0x03AA58B4 ADRP X0, 0x6AC000
	0x03AA58B8 LDR X0, [X0 + 0x298]
	0x03AA58BC BL 0x1C16CF4
	0x03AA58C0 ADRP X0, 0x6B2000
	0x03AA58C4 LDR X0, [X0 + 0xB88]
	0x03AA58C8 BL 0x1C16CF4
	0x03AA58CC ADRP X0, 0x6B0000
	0x03AA58D0 LDR X0, [X0 + 0xB68]
	0x03AA58D4 BL 0x1C16CF4
	0x03AA58D8 ADRP X0, 0x6B2000
	0x03AA58DC LDR X0, [X0 + 0xB90]
	0x03AA58E0 BL 0x1C16CF4
	0x03AA58E4 ADRP X0, 0x6B2000
	0x03AA58E8 LDR X0, [X0 + 0xB98]
	0x03AA58EC BL 0x1C16CF4
	0x03AA58F0 ADRP X0, 0x6B2000
	0x03AA58F4 LDR X0, [X0 + 0xBA0]
	0x03AA58F8 BL 0x1C16CF4
	0x03AA58FC ADRP X0, 0x6AF000
	0x03AA5900 LDR X0, [X0 + 0x530]
	0x03AA5904 BL 0x1C16CF4
	0x03AA5908 ADRP X0, 0x6B1000
	0x03AA590C LDR X0, [X0 + 0xFF8]
	0x03AA5910 BL 0x1C16CF4
	0x03AA5914 ADRP X0, 0x677000
	0x03AA5918 LDR X0, [X0 + 0x8A8]
	0x03AA591C BL 0x1C16CF4
	0x03AA5920 ADRP X0, 0x6B2000
	0x03AA5924 LDR X0, [X0 + 0xBA8]
	0x03AA5928 BL 0x1C16CF4
	0x03AA592C MOVZ W8, 0x1
	0x03AA5930 STRB W8, [X20 + 0x40D]
	0x03AA5934 MOVI V0.2D, 0x0
	0x03AA5938 ADD X0, X31, 0x698
	0x03AA593C MOVZ W2, 0x88
	0x03AA5940 MOV W1, W31
	0x03AA5944 STRB W31, [X31 + 0x908]
	0x03AA5948 STR X31, [X31 + 0x7F8]
	0x03AA594C STR X31, [X31 + 0x7F0]
	0x03AA5950 STR X31, [X31 + 0x7E8]
	0x03AA5954 STR X31, [X31 + 0x7E0]
	0x03AA5958 STR X31, [X31 + 0x7D8]
	0x03AA595C STR X31, [X31 + 0x7D0]
	0x03AA5960 STR X31, [X31 + 0x7C8]
	0x03AA5964 STR X31, [X31 + 0x7C0]
	0x03AA5968 STR X31, [X31 + 0x7B8]
	0x03AA596C STR X31, [X31 + 0x7B0]
	0x03AA5970 STR X31, [X31 + 0x7A8]
	0x03AA5974 STR X31, [X31 + 0x7A0]
	0x03AA5978 STR W31, [X31 + 0x790]
	0x03AA597C STR V0, [X31 + 0x8F]
	0x03AA5980 STR V0, [X31 + 0x8E]
	0x03AA5984 STR V0, [X31 + 0x8D]
	0x03AA5988 STR V0, [X31 + 0x8C]
	0x03AA598C STR V0, [X31 + 0x8B]
	0x03AA5990 STR V0, [X31 + 0x8A]
	0x03AA5994 STR V0, [X31 + 0x89]
	0x03AA5998 STR V0, [X31 + 0x88]
	0x03AA599C STR V0, [X31 + 0x87]
	0x03AA59A0 STR V0, [X31 + 0x86]
	0x03AA59A4 STR V0, [X31 + 0x85]
	0x03AA59A8 STR V0, [X31 + 0x84]
	0x03AA59AC STR V0, [X31 + 0x83]
	0x03AA59B0 STR V0, [X31 + 0x82]
	0x03AA59B4 STR V0, [X31 + 0x81]
	0x03AA59B8 STR V0, [X31 + 0x80]
	0x03AA59BC STR V0, [X31 + 0x78]
	0x03AA59C0 STR V0, [X31 + 0x77]
	0x03AA59C4 STR V0, [X31 + 0x76]
	0x03AA59C8 STR V0, [X31 + 0x75]
	0x03AA59CC STR V0, [X31 + 0x74]
	0x03AA59D0 STR V0, [X31 + 0x73]
	0x03AA59D4 STR V0, [X31 + 0x72]
	0x03AA59D8 BL 0x3EB1B10
	0x03AA59DC MOVI V0.2D, 0x0
	0x03AA59E0 STR V0, [X31 + 0x68]
	0x03AA59E4 STR V0, [X31 + 0x67]
	0x03AA59E8 STR V0, [X31 + 0x66]
	0x03AA59EC STR V0, [X31 + 0x65]
	0x03AA59F0 STR V0, [X31 + 0x64]
	0x03AA59F4 STR V0, [X31 + 0x63]
	0x03AA59F8 STR V0, [X31 + 0x62]
	0x03AA59FC STR V0, [X31 + 0x61]
	0x03AA5A00 STR V0, [X31 + 0x60]
	0x03AA5A04 STR V0, [X31 + 0x5F]
	0x03AA5A08 STR V0, [X31 + 0x5E]
	0x03AA5A0C STR V0, [X31 + 0x5D]
	0x03AA5A10 STR V0, [X31 + 0x5C]
	0x03AA5A14 STR V0, [X31 + 0x5B]
	0x03AA5A18 STR V0, [X31 + 0x5A]
	0x03AA5A1C STR V0, [X31 + 0x59]
	0x03AA5A20 STR V0, [X31 + 0x57]
	0x03AA5A24 STR V0, [X31 + 0x58]
	0x03AA5A28 STR V0, [X31 + 0x4D]
	0x03AA5A2C STR V0, [X31 + 0x4E]
	0x03AA5A30 STR V0, [X31 + 0x4F]
	0x03AA5A34 STR V0, [X31 + 0x50]
	0x03AA5A38 STR V0, [X31 + 0x51]
	0x03AA5A3C STR V0, [X31 + 0x52]
	0x03AA5A40 STR V0, [X31 + 0x53]
	0x03AA5A44 STR V0, [X31 + 0x54]
	0x03AA5A48 STR V0, [X31 + 0x4B]
	0x03AA5A4C STR V0, [X31 + 0x4C]
	0x03AA5A50 MOVI V0.2D, 0x0
	0x03AA5A54 STR W31, [X31 + 0x568]
	0x03AA5A58 STUR W31, [X22 + 0x3]
	0x03AA5A5C STR X31, [X31 + 0x558]
	0x03AA5A60 STR X31, [X31 + 0x550]
	0x03AA5A64 STR X31, [X31 + 0xAC8]
	0x03AA5A68 STR X31, [X31 + 0xAB8]
	0x03AA5A6C STR X31, [X31 + 0xAC0]
	0x03AA5A70 STUR W31, [X21 + 0x17]
	0x03AA5A74 STR V0, [X31 + 0x4A]
	0x03AA5A78 STR V0, [X31 + 0x49]
	0x03AA5A7C LDRB W8, [X19 + 0x51]
	0x03AA5A80 CBZ W8, 0x3AA68E4
	0x03AA5A84 ADRP X21, 0x6B2000
	0x03AA5A88 LDR X21, [X21 + 0x180]
	0x03AA5A8C LDR X0, [X21]
	0x03AA5A90 LDR W8, [X0 + 0xE0]
	0x03AA5A94 CBNZ W8, 0x3AA5AA0
	0x03AA5A98 BL 0x1C16DFC
	0x03AA5A9C LDR X0, [X21]
	0x03AA5AA0 LDR X8, [X0 + 0xB8]
	0x03AA5AA4 ADD X0, X31, 0x908
	0x03AA5AA8 MOV X1, X31
	0x03AA5AAC MOV X3, X31
	0x03AA5AB0 LDR X2, [X8 + 0x8]
	0x03AA5AB4 BL 0x39B1DB0
	0x03AA5AB8 ADD X0, X19, 0x68
	0x03AA5ABC MOV X1, X31
	0x03AA5AC0 BL 0x3BFDD38
	0x03AA5AC4 TBZ X0, 0x0, 0x3AA6920
	0x03AA5AC8 ADRP X20, 0x677000
	0x03AA5ACC LDR X20, [X20 + 0x8A8]
	0x03AA5AD0 LDR W22, [X19 + 0x98]
	0x03AA5AD4 LDR X0, [X20]
	0x03AA5AD8 LDR W8, [X0 + 0xE0]
	0x03AA5ADC CBNZ W8, 0x3AA5AE4
	0x03AA5AE0 BL 0x1C16DFC
	0x03AA5AE4 MOV X0, X31
	0x03AA5AE8 BL 0x3A89448
	0x03AA5AEC ADD X26, X19, 0x90
	0x03AA5AF0 CMP W22, W0
	0x03AA5AF4 ADD X28, X19, 0x78
	0x03AA5AF8 B.NE 0x3AA5B48
	0x03AA5AFC ADRP X22, 0x6AC000
	0x03AA5B00 LDP X0, X1, [X19 + 0x78]
	0x03AA5B04 LDR X22, [X22 + 0x298]
	0x03AA5B08 LDR X2, [X22]
	0x03AA5B0C BL 0x22226A4
	0x03AA5B10 LDR W8, [X19 + 0x80]
	0x03AA5B14 UBFM W8, W8, 0x1E, 0x1D
	0x03AA5B18 SXTW X1, W8
	0x03AA5B1C MOV X2, X31
	0x03AA5B20 BL 0x3C001B4
	0x03AA5B24 LDP X0, X1, [X19 + 0x90]
	0x03AA5B28 LDR X2, [X22]
	0x03AA5B2C BL 0x22226A4
	0x03AA5B30 LDR W8, [X19 + 0x98]
	0x03AA5B34 UBFM W8, W8, 0x1E, 0x1D
	0x03AA5B38 SXTW X1, W8
	0x03AA5B3C MOV X2, X31
	0x03AA5B40 BL 0x3C001B4
	0x03AA5B44 B 0x3AA5B90
	0x03AA5B48 ADRP X22, 0x6B0000
	0x03AA5B4C LDR X22, [X22 + 0xB68]
	0x03AA5B50 LDR X1, [X22]
	0x03AA5B54 MOV X0, X28
	0x03AA5B58 BL 0x23EC928
	0x03AA5B5C LDR X0, [X19 + 0x88]
	0x03AA5B60 CBZ X0, 0x3AA6970
	0x03AA5B64 MOV X1, X31
	0x03AA5B68 BL 0x3C16130
	0x03AA5B6C LDR X1, [X22]
	0x03AA5B70 MOV X0, X26
	0x03AA5B74 BL 0x23EC928
	0x03AA5B78 LDR X0, [X19 + 0xA0]
	0x03AA5B7C CBZ X0, 0x3AA6974
	0x03AA5B80 MOV X1, X31
	0x03AA5B84 BL 0x3C16130
	0x03AA5B88 MOV X0, X19
	0x03AA5B8C BL 0x3AA54AC
	0x03AA5B90 LDR X0, [X27 + 0x190]
	0x03AA5B94 CBZ X0, 0x3AA6968
	0x03AA5B98 LDR X22, [X27 + 0xD8]
	0x03AA5B9C LDR W9, [X27 + 0x158]
	0x03AA5BA0 LDR W8, [X27 + 0x15C]
	0x03AA5BA4 STP W8, W9, [X31 + 0x64]
	0x03AA5BA8 MOV X1, X31
	0x03AA5BAC BL 0x3984C98
	0x03AA5BB0 STR X22, [X31 + 0x58]
	0x03AA5BB4 TBZ X0, 0x0, 0x3AA5BD8
	0x03AA5BB8 LDR X0, [X27 + 0x190]
	0x03AA5BBC CBZ X0, 0x3AA6978
	0x03AA5BC0 MOV X1, X31
	0x03AA5BC4 BL 0x3984DE0
	0x03AA5BC8 ANDS W31, W0, 0x1
	0x03AA5BCC MOVZ W8, 0x1
	0x03AA5BD0 CINC W8, W8, NE
	0x03AA5BD4 B 0x3AA5BDC
	0x03AA5BD8 MOVZ W8, 0x1
	0x03AA5BDC STR W8, [X31 + 0x6C]
	0x03AA5BE0 LDR W8, [X27 + 0x240]
	0x03AA5BE4 ADD X22, X27, 0x238
	0x03AA5BE8 CMP W8, 0x1
	0x03AA5BEC STR W8, [X19 + 0x13C]
	0x03AA5BF0 B.LT 0x3AA5C3C
	0x03AA5BF4 MOV X24, X31
	0x03AA5BF8 MOV X23, X31
	0x03AA5BFC LDR X8, [X22]
	0x03AA5C00 ADD X0, X31, 0x720
	0x03AA5C04 MOVZ W2, 0x74
	0x03AA5C08 ADD X1, X8, X24
	0x03AA5C0C BL 0x3EB1B30
	0x03AA5C10 ADD X0, X31, 0x720
	0x03AA5C14 MOV X1, X31
	0x03AA5C18 BL 0x3C5BC7C
	0x03AA5C1C CMP W0, 0x1
	0x03AA5C20 B.NE 0x3AA5C44
	0x03AA5C24 LDRSW X8, [X19 + 0x13C]
	0x03AA5C28 ADD X23, X23, 0x1
	0x03AA5C2C ADD X24, X24, 0x74
	0x03AA5C30 CMP X23, X8
	0x03AA5C34 B.LT 0x3AA5BFC
	0x03AA5C38 B 0x3AA5C48
	0x03AA5C3C MOV W23, W31
	0x03AA5C40 B 0x3AA5C48
	0x03AA5C44 LDR W8, [X19 + 0x13C]
	0x03AA5C48 ADRP X9, 0x6B2000
	0x03AA5C4C LDR X9, [X9 + 0xBA0]
	0x03AA5C50 SUB W2, W8, W23
	0x03AA5C54 STR W2, [X19 + 0x13C]
	0x03AA5C58 STR W23, [X19 + 0x54]
	0x03AA5C5C CBZ W23, 0x3AA5C74
	0x03AA5C60 LDR W8, [X27 + 0x228]
	0x03AA5C64 ADDS W31, W8, 0x1
	0x03AA5C68 B.EQ 0x3AA5C74
	0x03AA5C6C SUB W8, W23, 0x1
	0x03AA5C70 STR W8, [X19 + 0x54]
	0x03AA5C74 LDR X3, [X9]
	0x03AA5C78 MOV X0, X22
	0x03AA5C7C MOV W1, W23
	0x03AA5C80 BL 0x23F4A04
	0x03AA5C84 STR X0, [X31 + 0x50]
	0x03AA5C88 MOV X22, X1
	0x03AA5C8C ADD X0, X27, 0x8
	0x03AA5C90 MOV X1, X31
	0x03AA5C94 BL 0x3C52ECC
	0x03AA5C98 MOV X24, X0
	0x03AA5C9C LDR X0, [X20]
	0x03AA5CA0 MOV X23, X1
	0x03AA5CA4 LDR W8, [X0 + 0xE0]
	0x03AA5CA8 CBNZ W8, 0x3AA5CB0
	0x03AA5CAC BL 0x1C16DFC
	0x03AA5CB0 MOV X0, X31
	0x03AA5CB4 STP X26, X28, [X31 + 0x20]
	0x03AA5CB8 BL 0x3A894A8
	0x03AA5CBC CMP W0, W23
	0x03AA5CC0 CSEL W8, W23, W0, GT
	0x03AA5CC4 STR X25, [X31 + 0x30]
	0x03AA5CC8 ADRP X29, 0x6B2000
	0x03AA5CCC ADD W9, W8, W22
	0x03AA5CD0 LDR X29, [X29 + 0xB48]
	0x03AA5CD4 STR W8, [X31 + 0x60]
	0x03AA5CD8 ADD W8, W9, 0x1F
	0x03AA5CDC STR W9, [X31 + 0x4C]
	0x03AA5CE0 ADD W9, W9, 0x3E
	0x03AA5CE4 CMP W8, 0x0
	0x03AA5CE8 CSEL W9, W9, W8, LT
	0x03AA5CEC ADD X27, X27, 0x18
	0x03AA5CF0 STP X23, X22, [X31 + 0x38]
	0x03AA5CF4 MOVZ W8, 0x4
	0x03AA5CF8 SBFM W22, W9, 0x5, 0x1F
	0x03AA5CFC STR W22, [X19 + 0x130]
	0x03AA5D00 STR W8, [X19 + 0x58]
	0x03AA5D04 LDP W11, W10, [X31 + 0x64]
	0x03AA5D08 UBFM W8, W8, 0x1F, 0x1E
	0x03AA5D0C SUB W9, W8, 0x1
	0x03AA5D10 STR W8, [X19 + 0x58]
	0x03AA5D14 ADD W10, W9, W10
	0x03AA5D18 ADD W9, W9, W11
	0x03AA5D1C SDIV W25, W10, W8
	0x03AA5D20 SDIV W23, W9, W8
	0x03AA5D24 MOV X8, X25
	0x03AA5D28 BFM X8, X23, 0x20, 0x1F

ISIL:
	001 Move [X31-96], X29
	002 Move [X31+16], X30
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Subtract X31, X31, 464
	013 Move X22, 0x93E000
	014 Move W8, [X22+1031]
	015 Move X19, X2
	016 Move X21, X1
	017 Move X20, X0
	018 Move [X31+472], X1
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {61}
	023 Move X0, 0x6B3000
	024 Move X0, [X0+2704]
	025 Call 0x1C17CF4
	026 Move X0, 0x6B3000
	027 Move X0, [X0+2712]
	028 Call 0x1C17CF4
	029 Move X0, 0x6B3000
	030 Move X0, [X0+2720]
	031 Call 0x1C17CF4
	032 Move X0, 0x6B2000
	033 Move X0, [X0+3776]
	034 Call 0x1C17CF4
	035 Move X0, 0x6AC000
	036 Move X0, [X0+2696]
	037 Call 0x1C17CF4
	038 Move X0, 0x6B3000
	039 Move X0, [X0+2728]
	040 Call 0x1C17CF4
	041 Move X0, 0x6B3000
	042 Move X0, [X0+2736]
	043 Call 0x1C17CF4
	044 Move X0, 0x6B3000
	045 Move X0, [X0+2744]
	046 Call 0x1C17CF4
	047 Move X0, 0x6AF000
	048 Move X0, [X0+4088]
	049 Call 0x1C17CF4
	050 Move X0, 0x6B3000
	051 Move X0, [X0+2752]
	052 Call 0x1C17CF4
	053 Move X0, 0x6B3000
	054 Move X0, [X0+2760]
	055 Call 0x1C17CF4
	056 Move X0, 0x6B3000
	057 Move X0, [X0+2768]
	058 Call 0x1C17CF4
	059 Move W8, 1
	060 Move [X22+1031], W8
	061 NotImplemented "Instruction MOVI not yet implemented."
	062 Move [X31+456], X31
	063 Move [X31+408], X31
	064 Move [X31+360], X31
	065 Move [X31+352], W31
	066 Move [X31+288], W31
	067 Move [X31+416], V0
	068 Move [X31+424], V0
	069 Move [X31+368], V0
	070 Move [X31+376], V0
	071 Move [X31+320], V0
	072 Move [X31+328], V0
	073 Move [X31+19], V0
	074 Move [X31+256], V0
	075 Move [X31+264], V0
	076 Move [X31+15], V0
	077 Compare X21, 0
	078 JumpIfEqual {354}
	079 Move X8, 0x6B3000
	080 Move X26, 0x6B3000
	081 Move X8, [X8+2760]
	082 Move X26, [X26+2720]
	083 Move X3, [X20+56]
	084 Move X25, 0x6B3000
	085 Move X1, [X8]
	086 Move X4, [X26]
	087 Move X24, 0x6B3000
	088 Move X25, [X25+2744]
	089 Move X24, [X24+2712]
	090 Add X8, X31, 112
	091 Add X2, X31, 408
	092 Move X0, X21
	093 Call 0x2241F24, X0, X1, X2, X3
	094 Move V0, [X31+112]
	095 Move V1, [X31+128]
	096 Move [X31+416], V0
	097 Move [X31+424], V1
	098 Add X1, X31, 408
	099 Add X3, X31, 472
	100 Move X0, X20
	101 Move X2, X19
	102 Call AdditionalLightsShadowCasterPass.InitPassData, X0, X1, X2, X3
	103 Move W8, [X20+240]
	104 Compare W8, 0
	105 JumpIfNotEqual {201}
	106 Move X8, [X20+232]
	107 Compare X8, 0
	108 JumpIfEqual {358}
	109 Move X0, [X8+24]
	110 Compare X0, 0
	111 JumpIfEqual {359}
	112 Move X27, [X31+408]
	113 Add X8, X31, 56
	114 Move X1, X31
	115 Call RenderTexture.get_descriptor, X0
	116 Move X22, 0x6B2000
	117 NotImplemented "Instruction LDUR not yet implemented."
	118 NotImplemented "Instruction LDUR not yet implemented."
	119 NotImplemented "Instruction LDUR not yet implemented."
	120 Move W8, [X31+104]
	121 Move X22, [X22+3776]
	122 Move [X31+112], V0
	123 Move [X31+120], V1
	124 Move [X31+9], V2
	125 Move [X31+160], W8
	126 Move X0, [X22]
	127 Move W8, [X0+224]
	128 Compare W8, 0
	129 JumpIfNotEqual {132}
	130 Call 0x1C17DFC
	131 Move X0, [X22]
	132 Move X8, [X0+184]
	133 Move W9, [X8]
	134 Move X8, 0x6B3000
	135 Move X8, [X8+2768]
	136 Compare W9, 0
	137 JumpIfEqual {148}
	138 Move V0, [X31+112]
	139 Move V1, [X31+128]
	140 Move V2, [X31+9]
	141 Move W10, [X31+160]
	142 Move W22, W31
	143 Add X9, X31, 304
	144 Move [X31+304], V0
	145 Move [X31+312], V1
	146 Move [X31+21], V2
	147 Move [X31+352], W10
	148 Move V0, [X31+112]
	149 Move V1, [X31+128]
	150 Move V2, [X31+9]
	151 Move W10, [X31+160]
	152 Add X9, X31, 240
	153 Move [X31+240], V0
	154 Move [X31+248], V1
	155 Move [X31+17], V2
	156 Move [X31+288], W10
	157 Move W22, 1
	158 Move V0, [X9]
	159 Move V1, [X9+16]
	160 Move W10, [X9+48]
	161 Move V2, [X9+2]
	162 Move X9, 0x6AF000
	163 Move X9, [X9+4088]
	164 Move [X31+224], W10
	165 Move [X31+192], V1
	166 Move [X31+200], V2
	167 Move [X31+11], V0
	168 Move X0, [X9]
	169 Move X23, [X8]
	170 Move W9, [X0+224]
	171 Compare W9, 0
	172 JumpIfNotEqual {174}
	173 Call 0x1C17DFC
	174 Move V0, [X31+176]
	175 Move V1, [X31+192]
	176 Move V2, [X31+13]
	177 Move W8, [X31+224]
	178 Move [X31], V0
	179 Move [X31+8], V1
	180 Move [X31+2], V2
	181 Move [X31+48], W8
	182 Add X1, X31, 0
	183 Move W3, 1
	184 Move W5, 1
	185 Move X0, X21
	186 Move X2, X23
	187 Move W4, W22
	188 Move X6, X31
	189 Call UniversalRenderer.CreateRenderGraphTexture, X0, X1, X2, X3, X4, X5
	190 Compare X27, 0
	191 JumpIfEqual {360}
	192 Move [X27+32], X0
	193 Move X8, [X31+408]
	194 Compare X8, 0
	195 JumpIfEqual {361}
	196 Add X1, X8, 32
	197 Add X0, X31, 416
	198 Move W2, 2
	199 Move X3, X31
	200 Call RenderGraphBuilder.UseDepthBuffer, X0, X1, X2
	201 Add X0, X31, 416
	202 Move W1, W31
	203 Move X2, X31
	204 Call RenderGraphBuilder.AllowPassCulling, X0, X1
	205 Move X8, [X25]
	206 Move W9, [X8+224]
	207 Compare W9, 0
	208 JumpIfNotEqual {212}
	209 Move X0, X8
	210 Call 0x1C17DFC
	211 Move X8, [X25]
	212 Move X9, [X8+184]
	213 Move X22, [X9+8]
	214 Compare X22, 0
	215 JumpIfNotEqual {238}
	216 Move W9, [X8+224]
	217 Compare W9, 0
	218 JumpIfNotEqual {222}
	219 Move X0, X8
	220 Call 0x1C17DFC
	221 Move X8, [X25]
	222 Move X9, 0x6B3000
	223 Move X8, [X8+184]
	224 Move X9, [X9+2704]
	225 Move X23, [X8]
	226 Move X0, [X9]
	227 Call 0x1C17F10
	228 Move X8, 0x6B3000
	229 Move X8, [X8+2728]
	230 Move X22, X0
	231 Move X2, [X8]
	232 Move X1, X23
	233 Move X3, X31
	234 Call 0x25C88AC, X0, X1, X2
	235 Move X8, [X25]
	236 Move X8, [X8+184]
	237 Move [X8+8], X22
	238 Move X2, [X24]
	239 Add X0, X31, 416
	240 Move X1, X22
	241 Call 0x224207C, X0, X1
	242 Move X8, [X31+408]
	243 Compare X8, 0
	244 JumpIfEqual {357}
	245 Move X8, [X8+32]
	246 Add X0, X31, 416
	247 Move X1, X31
	248 Move [X31+456], X8
	249 Call RenderGraphBuilder.Dispose, X0
	250 Move X8, 0x6B3000
	251 Move X8, [X8+2752]
	252 Move X3, [X20+56]
	253 Move X4, [X26]
	254 Add X2, X31, 360
	255 Move X1, [X8]
	256 Add X8, X31, 112
	257 Move X0, X21
	258 Call 0x2241F24, X0, X1, X2, X3
	259 Move V0, [X31+112]
	260 Move V1, [X31+128]
	261 Move [X31+368], V0
	262 Move [X31+376], V1
	263 Add X1, X31, 360
	264 Add X3, X31, 472
	265 Move X0, X20
	266 Move X2, X19
	267 Call AdditionalLightsShadowCasterPass.InitPassData, X0, X1, X2, X3
	268 Move X8, [X31+360]
	269 Compare X8, 0
	270 JumpIfEqual {355}
	271 Move X9, [X31+456]
	272 Move X10, 0x6AC000
	273 Move X10, [X10+2696]
	274 Move [X8+32], X9
	275 Move X0, [X10]
	276 Move W8, [X0+224]
	277 Compare W8, 0
	278 JumpIfNotEqual {280}
	279 Call 0x1C17DFC
	280 Add X0, X31, 456
	281 Move X1, X31
	282 Call TextureHandle.IsValid, X0
	283 Move TEMP, X0
	284 And TEMP, TEMP, 1
	285 Compare TEMP, 1
	286 JumpIfNotEqual {292}
	287 Add X0, X31, 368
	288 Add X1, X31, 456
	289 Move W2, 1
	290 Move X3, X31
	291 Call RenderGraphBuilder.UseDepthBuffer, X0, X1, X2
	292 Add X0, X31, 368
	293 Move W1, W31
	294 Move X2, X31
	295 Call RenderGraphBuilder.AllowPassCulling, X0, X1
	296 Move X8, [X25]
	297 Move W9, [X8+224]
	298 Compare W9, 0
	299 JumpIfNotEqual {303}
	300 Move X0, X8
	301 Call 0x1C17DFC
	302 Move X8, [X25]
	303 Move X9, [X8+184]
	304 Move X19, [X9+16]
	305 Compare X19, 0
	306 JumpIfNotEqual {329}
	307 Move W9, [X8+224]
	308 Compare W9, 0
	309 JumpIfNotEqual {313}
	310 Move X0, X8
	311 Call 0x1C17DFC
	312 Move X8, [X25]
	313 Move X9, 0x6B3000
	314 Move X8, [X8+184]
	315 Move X9, [X9+2704]
	316 Move X20, [X8]
	317 Move X0, [X9]
	318 Call 0x1C17F10
	319 Move X8, 0x6B3000
	320 Move X8, [X8+2736]
	321 Move X19, X0
	322 Move X2, [X8]
	323 Move X1, X20
	324 Move X3, X31
	325 Call 0x25C88AC, X0, X1, X2
	326 Move X8, [X25]
	327 Move X8, [X8+184]
	328 Move [X8+16], X19
	329 Move X2, [X24]
	330 Add X0, X31, 368
	331 Move X1, X19
	332 Call 0x224207C, X0, X1
	333 Move X8, [X31+360]
	334 Compare X8, 0
	335 JumpIfEqual {356}
	336 Move X20, [X8+32]
	337 Add X0, X31, 368
	338 Move X1, X31
	339 Call RenderGraphBuilder.Dispose, X0
	340 Move X0, X20
	341 Add X31, X31, 464
	342 Move X20, [X31+80]
	343 Move X19, [X31+88]
	344 Move X22, [X31+64]
	345 Move X21, [X31+72]
	346 Move X24, [X31+48]
	347 Move X23, [X31+56]
	348 Move X26, [X31+32]
	349 Move X25, [X31+40]
	350 Move X30, [X31+16]
	351 Move X27, [X31+24]
	352 Move X29, [X31+96]
	353 Return X0
	354 Call 0x1C17F20
	355 Call 0x1C17F20
	356 Call 0x1C17F20
	357 Call 0x1C17F20
	358 Call 0x1C17F20
	359 Call 0x1C17F20
	360 Call 0x1C17F20
	361 Call 0x1C17F20
	362 Move X22, X0
	363 NotImplemented "Instruction CMP not yet implemented."
	364 Move X0, X22
	365 Call 0x3EB2AD0
	366 Move X19, [X0]
	367 Call 0x3EB2AE0
	368 Add X0, X31, 368
	369 Move X1, X31
	370 Call RenderGraphBuilder.Dispose, X0
	371 Move X20, X31
	372 Compare X19, 0
	373 JumpIfEqual {340}
	374 Move X0, X19
	375 Call 0x1C17F18
	376 Move X19, X31
	377 Move X22, X0
	378 Add X0, X31, 368
	379 Move X1, X31
	380 Call RenderGraphBuilder.Dispose, X0
	381 Compare X19, 0
	382 JumpIfEqual {405}
	383 Move X0, X19
	384 Call 0x1C17F18
	385 Move X22, X0
	386 NotImplemented "Instruction CMP not yet implemented."
	387 Move X0, X22
	388 Call 0x3EB2AD0
	389 Move X23, [X0]
	390 Call 0x3EB2AE0
	391 Add X0, X31, 416
	392 Move X1, X31
	393 Call RenderGraphBuilder.Dispose, X0
	394 Compare X23, 0
	395 JumpIfEqual {250}
	396 Move X0, X23
	397 Call 0x1C17F18
	398 Move X23, X31
	399 Move X22, X0
	400 Add X0, X31, 416
	401 Move X1, X31
	402 Call RenderGraphBuilder.Dispose, X0
	403 Compare X23, 0
	404 JumpIfNotEqual {407}
	405 Move X0, X22
	406 Call 0x1D2D690
	407 Move X0, X23
	408 Call 0x1C17F18
	409 Call 0x1991590

Method: System.Void InitPassData(ref UnityEngine.Rendering.Universal.Internal.AdditionalLightsShadowCasterPass/PassData passData, ref UnityEngine.Rendering.Universal.RenderingData renderingData, ref UnityEngine.Experimental.Rendering.RenderGraphModule.RenderGraph graph)

Disassembly:
	0x03AA5D2C STUR X8, [X19 + 0x5C]
	0x03AA5D30 LDR X0, [X20]
	0x03AA5D34 LDR W8, [X0 + 0xE0]
	0x03AA5D38 CBNZ W8, 0x3AA5D40
	0x03AA5D3C BL 0x1C16DFC
	0x03AA5D40 MOV X0, X31
	0x03AA5D44 BL 0x3A89448
	0x03AA5D48 LDR W9, [X31 + 0x6C]
	0x03AA5D4C MUL W8, W25, W9
	0x03AA5D50 MUL W8, W8, W23
	0x03AA5D54 MUL W8, W8, W22
	0x03AA5D58 CMP W8, W0
	0x03AA5D5C B.LE 0x3AA5D6C
	0x03AA5D60 LDR W8, [X19 + 0x58]
	0x03AA5D64 LDR W22, [X19 + 0x130]
	0x03AA5D68 B 0x3AA5D04
	0x03AA5D6C LDR X22, [X31 + 0x58]
	0x03AA5D70 CBZ X22, 0x3AA696C
	0x03AA5D74 MOV W25, W9
	0x03AA5D78 MOV X0, X22
	0x03AA5D7C MOV X1, X31
	0x03AA5D80 BL 0x3C03928

ISIL:
	001 Move [X31-16], X30
	002 Move X9, [X1]
	003 Compare X9, 0
	004 JumpIfEqual {25}
	005 Move [X9+16], X0
	006 Move X9, [X1]
	007 Compare X9, 0
	008 JumpIfEqual {25}
	009 Move X10, [X3]
	010 Move [X9+24], X10
	011 Move X9, [X1]
	012 Compare X9, 0
	013 JumpIfEqual {25}
	014 Move W10, [X0+240]
	015 Move X8, X2
	016 Move W2, 696
	017 Move X1, X8
	018 Move [X9+740], W10
	019 Move W10, [X0+228]
	020 Add X0, X9, 40
	021 Move [X9+736], W10
	022 Call 0x3EB2B30
	023 Move X30, [X31+16]
	024 Return 
	025 Call 0x1C17F20

Method: System.Void .cctor()

Disassembly:
	0x03AA5D84 MOV W8, W0
	0x03AA5D88 LDR X0, [X20]
	0x03AA5D8C LDR W9, [X0 + 0xE0]
	0x03AA5D90 TBZ X8, 0x0, 0x3AA5E18
	0x03AA5D94 CBNZ W9, 0x3AA5D9C
	0x03AA5D98 BL 0x1C16DFC
	0x03AA5D9C MOV X0, X31
	0x03AA5DA0 BL 0x3A89440
	0x03AA5DA4 MOV W20, W0
	0x03AA5DA8 MOV X0, X22
	0x03AA5DAC MOV X1, X31
	0x03AA5DB0 BL 0x3C03618
	0x03AA5DB4 MOV V8.16B, V0.16B
	0x03AA5DB8 MOV X0, X22
	0x03AA5DBC MOV X1, X31
	0x03AA5DC0 BL 0x3C035DC
	0x03AA5DC4 LDR W8, [X19 + 0x130]
	0x03AA5DC8 SDIV W9, W20, W25
	0x03AA5DCC FSUB S0, S8, S0
	0x03AA5DD0 SCVTF S1, W9
	0x03AA5DD4 ADD W8, W8, 0x2
	0x03AA5DD8 SCVTF S2, W8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x93E000
	005 Move X20, 0x6B2000
	006 Move W8, [X19+1032]
	007 Move X20, [X20+2248]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x6B2000
	013 Move X0, [X0+2248]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+1032], W8
	017 Move X8, [X20]
	018 Move X9, -50036736
	019 Move V0, [X9+237]
	020 Move X20, [X31+16]
	021 Move X19, [X31+24]
	022 Move X10, [X8+184]
	023 Move [X10+8], V0
	024 Move X8, [X8+184]
	025 Move [X8+32], X31
	026 Move X30, [X31+32]
	027 Return 

