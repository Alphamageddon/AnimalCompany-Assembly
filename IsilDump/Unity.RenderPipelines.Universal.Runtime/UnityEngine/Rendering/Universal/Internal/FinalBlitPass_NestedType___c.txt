Type: UnityEngine.Rendering.Universal.Internal.FinalBlitPass/<>c

Method: System.Void .cctor()

Disassembly:
	0x03AB2880 STP X31, X31, [X31 + 0xC8]
	0x03AB2884 STP X31, X31, [X31 + 0xB8]
	0x03AB2888 CBZ X20, 0x3AB2BBC
	0x03AB288C LDR X0, [X20 + 0x2D8]
	0x03AB2890 CBZ X0, 0x3AB2BBC
	0x03AB2894 MOV X1, X31
	0x03AB2898 BL 0x3A9AD80
	0x03AB289C TBZ X0, 0x0, 0x3AB28B0
	0x03AB28A0 LDR X8, [X20 + 0x2D8]
	0x03AB28A4 CBZ X8, 0x3AB2BBC
	0x03AB28A8 LDRB W8, [X8 + 0x18]
	0x03AB28AC CBZ W8, 0x3AB2B7C
	0x03AB28B0 MOVZ W24, 0x1
	0x03AB28B4 ADRP X23, 0x69E000
	0x03AB28B8 LDR X23, [X23 + 0xC80]
	0x03AB28BC LDR X21, [X19]
	0x03AB28C0 LDR X0, [X23]
	0x03AB28C4 LDR W8, [X0 + 0xE0]
	0x03AB28C8 CBNZ W8, 0x3AB28D0
	0x03AB28CC BL 0x1C16DFC
	0x03AB28D0 ADD X0, X31, 0xD8
	0x03AB28D4 MOV X1, X21
	0x03AB28D8 MOV X2, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x931000
	005 Move X20, 0x6A7000
	006 Move W8, [X19+1120]
	007 Move X20, [X20+72]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x6A7000
	013 Move X0, [X0+72]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+1120], W8
	017 Move X0, [X20]
	018 Call 0x1C17F10
	019 Move X1, X31
	020 Move X19, X0
	021 Call Object..ctor, X0
	022 Move X8, [X20]
	023 Move X8, [X8+184]
	024 Move [X8], X19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Return 

Method: System.Void .ctor()

Disassembly:
	0x03AB28DC BL 0x3C58FE4
	0x03AB28E0 LDR X0, [X19]

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: System.Void <Render>b__16_0(UnityEngine.Rendering.Universal.Internal.FinalBlitPass/PassData data, UnityEngine.Experimental.Rendering.RenderGraphModule.RenderGraphContext context)

Disassembly:
	0x03AB28E4 CBZ X0, 0x3AB2BBC
	0x03AB28E8 MOV X1, X31
	0x03AB28EC BL 0x3C4C310
	0x03AB28F0 LDR X0, [X20 + 0x2D8]
	0x03AB28F4 CBZ X0, 0x3AB2BBC
	0x03AB28F8 LDRB W8, [X0 + 0x19]
	0x03AB28FC CBZ W8, 0x3AB2940
	0x03AB2900 LDR X1, [X19]
	0x03AB2904 MOV X2, X31
	0x03AB2908 BL 0x3A9CF44
	0x03AB290C LDR X0, [X23]
	0x03AB2910 LDR X21, [X19]
	0x03AB2914 LDR W8, [X0 + 0xE0]
	0x03AB2918 CBNZ W8, 0x3AB2920
	0x03AB291C BL 0x1C16DFC
	0x03AB2920 ADD X0, X31, 0xD8
	0x03AB2924 MOV X1, X21
	0x03AB2928 MOV X2, X31
	0x03AB292C BL 0x3C58FE4
	0x03AB2930 LDR X0, [X19]
	0x03AB2934 CBZ X0, 0x3AB2BBC
	0x03AB2938 MOV X1, X31
	0x03AB293C BL 0x3C4C310
	0x03AB2940 ADRP X25, 0x6A5000
	0x03AB2944 LDR X25, [X25 + 0x190]
	0x03AB2948 ADRP X22, 0x6A6000
	0x03AB294C ADRP X21, 0x6A6000
	0x03AB2950 LDR X0, [X25]
	0x03AB2954 LDR W8, [X0 + 0xE0]
	0x03AB2958 LDR X22, [X22 + 0x90]
	0x03AB295C LDR X21, [X21 + 0x88]
	0x03AB2960 STR W24, [X31 + 0x3C]
	0x03AB2964 CBNZ W8, 0x3AB2970
	0x03AB2968 BL 0x1C16DFC
	0x03AB296C LDR X0, [X25]
	0x03AB2970 LDR X8, [X0 + 0xB8]
	0x03AB2974 LDR X3, [X22]
	0x03AB2978 ADD X0, X31, 0xC8
	0x03AB297C MOVZ W2, 0x2
	0x03AB2980 LDR X1, [X8 + 0x20]
	0x03AB2984 BL 0x23E4408
	0x03AB2988 LDR X8, [X25]
	0x03AB298C LDR X3, [X21]
	0x03AB2990 ADD X0, X31, 0xB8
	0x03AB2994 MOVZ W2, 0x2
	0x03AB2998 LDR X8, [X8 + 0xB8]
	0x03AB299C LDR X1, [X8 + 0x28]
	0x03AB29A0 BL 0x23E26C4
	0x03AB29A4 LDR X8, [X25]
	0x03AB29A8 LDR X0, [X23]
	0x03AB29AC LDP X22, X21, [X19 + 0x8]
	0x03AB29B0 LDP X27, X29, [X31 + 0xC8]
	0x03AB29B4 LDR X8, [X8 + 0xB8]
	0x03AB29B8 LDR W9, [X0 + 0xE0]
	0x03AB29BC LDP X26, X28, [X31 + 0xB8]
	0x03AB29C0 ADD X25, X20, 0x2F8
	0x03AB29C4 LDR W23, [X8 + 0x18]
	0x03AB29C8 ADD X24, X20, 0x2E0
	0x03AB29CC CBNZ W9, 0x3AB29D4
	0x03AB29D0 BL 0x1C16DFC
	0x03AB29D4 ADD X0, X31, 0xD8
	0x03AB29D8 MOV X1, X22
	0x03AB29DC MOV X2, X21
	0x03AB29E0 MOV X3, X25
	0x03AB29E4 MOV X4, X24
	0x03AB29E8 MOV X5, X23
	0x03AB29EC MOV W6, W31
	0x03AB29F0 STP X28, X31, [X31 + 0x18]
	0x03AB29F4 STP X29, X26, [X31 + 0x8]
	0x03AB29F8 STR X27, [X31]
	0x03AB29FC BL 0x3C58C78
	0x03AB2A00 ADRP X8, 0x6A6000
	0x03AB2A04 LDR X8, [X8 + 0x80]
	0x03AB2A08 ADD X0, X31, 0xC8
	0x03AB2A0C LDR X1, [X8]
	0x03AB2A10 BL 0x23E4598
	0x03AB2A14 ADRP X8, 0x6A6000
	0x03AB2A18 LDR X8, [X8 + 0x78]
	0x03AB2A1C ADD X0, X31, 0xB8
	0x03AB2A20 LDR X1, [X8]
	0x03AB2A24 BL 0x23E28F0
	0x03AB2A28 LDR X0, [X20 + 0x2D8]
	0x03AB2A2C CBZ X0, 0x3AB2BBC
	0x03AB2A30 ADRP X23, 0x69E000
	0x03AB2A34 ADRP X22, 0x6A5000
	0x03AB2A38 LDRB W8, [X0 + 0x15]
	0x03AB2A3C LDR X23, [X23 + 0xC80]
	0x03AB2A40 LDR W24, [X31 + 0x3C]
	0x03AB2A44 LDR X22, [X22 + 0x190]
	0x03AB2A48 CBZ W8, 0x3AB2A54
	0x03AB2A4C TBZ X24, 0x0, 0x3AB2AF0
	0x03AB2A50 B 0x3AB2B5C
	0x03AB2A54 LDR X8, [X22]
	0x03AB2A58 LDR X21, [X19]
	0x03AB2A5C LDR W9, [X8 + 0xE0]
	0x03AB2A60 CBNZ W9, 0x3AB2A78
	0x03AB2A64 MOV X0, X8
	0x03AB2A68 BL 0x1C16DFC
	0x03AB2A6C LDR X0, [X20 + 0x2D8]
	0x03AB2A70 CBZ X0, 0x3AB2BBC
	0x03AB2A74 LDR X8, [X22]
	0x03AB2A78 LDR X8, [X8 + 0xB8]
	0x03AB2A7C LDR X22, [X0 + 0x30]
	0x03AB2A80 MOV X1, X31
	0x03AB2A84 LDR W20, [X8]
	0x03AB2A88 BL 0x3A9AD24
	0x03AB2A8C CBZ X22, 0x3AB2BBC
	0x03AB2A90 LDR W8, [X22 + 0x18]
	0x03AB2A94 CMP W0, W8
	0x03AB2A98 B.CS 0x3AB2BC0
	0x03AB2A9C ADD X8, X22, W0, 0x3, SXTW
	0x03AB2AA0 LDR X0, [X8 + 0x20]
	0x03AB2AA4 ADD X8, X31, 0x68
	0x03AB2AA8 MOV X1, X31
	0x03AB2AAC BL 0x39CDF64
	0x03AB2AB0 LDUR V0, [X31 + 0x68]
	0x03AB2AB4 LDUR V1, [X31 + 0x78]
	0x03AB2AB8 LDR X8, [X31 + 0x88]
	0x03AB2ABC STP V0, V1, [X31 + 0x90]
	0x03AB2AC0 STR X8, [X31 + 0xB0]
	0x03AB2AC4 CBZ X21, 0x3AB2BBC
	0x03AB2AC8 LDP V0, V1, [X31 + 0x90]
	0x03AB2ACC LDR X8, [X31 + 0xB0]
	0x03AB2AD0 ADD X2, X31, 0x40
	0x03AB2AD4 MOV X0, X21
	0x03AB2AD8 MOV W1, W20
	0x03AB2ADC MOV X3, X31
	0x03AB2AE0 STP V0, V1, [X31 + 0x40]
	0x03AB2AE4 STR X8, [X31 + 0x60]
	0x03AB2AE8 BL 0x3C4FCFC
	0x03AB2AEC TBNZ X24, 0x0, 0x3AB2B5C
	0x03AB2AF0 ADRP X8, 0x669000
	0x03AB2AF4 LDR X8, [X8 + 0x8F8]
	0x03AB2AF8 LDR X20, [X19]
	0x03AB2AFC LDR X0, [X8]
	0x03AB2B00 LDR W8, [X0 + 0xE0]
	0x03AB2B04 CBNZ W8, 0x3AB2B0C
	0x03AB2B08 BL 0x1C16DFC
	0x03AB2B0C ADRP X8, 0x6A5000
	0x03AB2B10 LDR X8, [X8 + 0xEC8]
	0x03AB2B14 MOV X0, X20
	0x03AB2B18 MOV W2, W31
	0x03AB2B1C MOV X3, X31
	0x03AB2B20 LDR X1, [X8]
	0x03AB2B24 BL 0x39E9618
	0x03AB2B28 LDR X0, [X23]
	0x03AB2B2C LDR X20, [X19]
	0x03AB2B30 LDR W8, [X0 + 0xE0]
	0x03AB2B34 CBNZ W8, 0x3AB2B3C
	0x03AB2B38 BL 0x1C16DFC
	0x03AB2B3C ADD X0, X31, 0xD8
	0x03AB2B40 MOV X1, X20
	0x03AB2B44 MOV X2, X31
	0x03AB2B48 BL 0x3C58FE4
	0x03AB2B4C LDR X0, [X19]
	0x03AB2B50 CBZ X0, 0x3AB2BBC
	0x03AB2B54 MOV X1, X31
	0x03AB2B58 BL 0x3C4C310
	0x03AB2B5C LDP X20, X19, [X31 + 0x130]
	0x03AB2B60 LDP X22, X21, [X31 + 0x120]
	0x03AB2B64 LDP X24, X23, [X31 + 0x110]
	0x03AB2B68 LDP X26, X25, [X31 + 0x100]
	0x03AB2B6C LDP X28, X27, [X31 + 0xF0]
	0x03AB2B70 LDP X29, X30, [X31 + 0xE0]
	0x03AB2B74 ADD X31, X31, 0x140
	0x03AB2B78 RET
	0x03AB2B7C ADRP X8, 0x669000
	0x03AB2B80 LDR X8, [X8 + 0x8F8]
	0x03AB2B84 LDR X21, [X19]
	0x03AB2B88 LDR X0, [X8]
	0x03AB2B8C LDR W8, [X0 + 0xE0]
	0x03AB2B90 CBNZ W8, 0x3AB2B98
	0x03AB2B94 BL 0x1C16DFC
	0x03AB2B98 ADRP X8, 0x6A5000
	0x03AB2B9C LDR X8, [X8 + 0xEC8]
	0x03AB2BA0 MOVZ W2, 0x1
	0x03AB2BA4 MOV X0, X21
	0x03AB2BA8 MOV X3, X31
	0x03AB2BAC LDR X1, [X8]
	0x03AB2BB0 BL 0x39E9618
	0x03AB2BB4 MOV W24, W31
	0x03AB2BB8 B 0x3AB28B4
	0x03AB2BBC BL 0x1C16F20
	0x03AB2BC0 BL 0x1C16F28
	0x03AB2BC4 STP X29, X30, [X31 - 0x60]!
	0x03AB2BC8 STP X28, X27, [X31 + 0x10]
	0x03AB2BCC STP X26, X25, [X31 + 0x20]
	0x03AB2BD0 STP X24, X23, [X31 + 0x30]
	0x03AB2BD4 STP X22, X21, [X31 + 0x40]
	0x03AB2BD8 STP X20, X19, [X31 + 0x50]
	0x03AB2BDC SUB X31, X31, 0x550
	0x03AB2BE0 MRS X8, 0xC000
	0x03AB2BE4 STR X8, [X31 + 0x8]
	0x03AB2BE8 LDR X8, [X8 + 0x28]
	0x03AB2BEC ADRP X24, 0x930000
	0x03AB2BF0 MOV X21, X5
	0x03AB2BF4 MOV X20, X4
	0x03AB2BF8 STR X8, [X31 + 0x548]
	0x03AB2BFC LDRB W8, [X24 + 0x466]
	0x03AB2C00 MOV X23, X2
	0x03AB2C04 MOV X22, X1
	0x03AB2C08 MOV X19, X0
	0x03AB2C0C STR X3, [X31 + 0x3B0]
	0x03AB2C10 TBNZ X8, 0x0, 0x3AB2CA0
	0x03AB2C14 ADRP X0, 0x6A5000
	0x03AB2C18 LDR X0, [X0 + 0x148]
	0x03AB2C1C BL 0x1C16CF4
	0x03AB2C20 ADRP X0, 0x6A5000
	0x03AB2C24 LDR X0, [X0 + 0x190]
	0x03AB2C28 BL 0x1C16CF4
	0x03AB2C2C ADRP X0, 0x6A6000
	0x03AB2C30 LDR X0, [X0 + 0x98]
	0x03AB2C34 BL 0x1C16CF4
	0x03AB2C38 ADRP X0, 0x6A6000
	0x03AB2C3C LDR X0, [X0 + 0xA0]

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+48], D9
	003 Move [X31+56], D8
	004 Move [X31+64], X30
	005 Move [X31+80], X26
	006 Move [X31+88], X25
	007 Move [X31+96], X24
	008 Move [X31+104], X23
	009 Move [X31+112], X22
	010 Move [X31+120], X21
	011 Move [X31+128], X20
	012 Move [X31+136], X19
	013 Move X21, 0x931000
	014 Move W8, [X21+1121]
	015 Move X20, X2
	016 Move X19, X1
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {38}
	021 Move X0, 0x6A1000
	022 Move X0, [X0+3624]
	023 Call 0x1C17CF4
	024 Move X0, 0x66A000
	025 Move X0, [X0+2296]
	026 Call 0x1C17CF4
	027 Move X0, 0x6A2000
	028 Move X0, [X0+4080]
	029 Call 0x1C17CF4
	030 Move X0, 0x69F000
	031 Move X0, [X0+2696]
	032 Call 0x1C17CF4
	033 Move X0, 0x6A4000
	034 Move X0, [X0+3984]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X21+1121], W8
	038 Compare X19, 0
	039 JumpIfEqual {251}
	040 Move X21, X19
	041 Add X21, X21, 56
	042 Move X0, [X21]
	043 Compare X0, 0
	044 JumpIfEqual {251}
	045 Move X1, X31
	046 Move X2, X31
	047 Call Material.set_enabledKeywords, X0, X1
	048 Compare X20, 0
	049 JumpIfEqual {251}
	050 Move X8, 0x66A000
	051 Move X8, [X8+2296]
	052 Move X24, 0x6A4000
	053 Move X25, 0x69F000
	054 Move X22, [X20+24]
	055 Move X0, [X8]
	056 Move W23, [X19+52]
	057 Move W8, [X0+224]
	058 Move X24, [X24+3984]
	059 Move X25, [X25+2696]
	060 Compare W8, 0
	061 JumpIfNotEqual {63}
	062 Call 0x1C17DFC
	063 Move X1, [X24]
	064 NotImplemented "Instruction CMP not yet implemented."
	065 NotImplemented "Instruction CSET not yet implemented."
	066 Move X0, X22
	067 Move X3, X31
	068 Call CoreUtils.SetKeyword, X0, X1, X2
	069 Move X0, [X25]
	070 Move X23, [X19+56]
	071 Move W22, [X19+32]
	072 Move X24, [X19+16]
	073 Move W8, [X0+224]
	074 Compare W8, 0
	075 JumpIfNotEqual {77}
	076 Call 0x1C17DFC
	077 Move X0, X24
	078 Move X1, X31
	079 Call TextureHandle.op_Implicit, X0
	080 Compare X23, 0
	081 JumpIfEqual {251}
	082 Move X24, 0x6A2000
	083 Move X24, [X24+4080]
	084 Move X2, X0
	085 Move X0, X23
	086 Move W1, W22
	087 Move X3, X31
	088 Call Material.SetTexture, X0, X1, X2
	089 Move X0, [X24]
	090 Add X22, X19, 72
	091 Move W8, [X0+224]
	092 Compare W8, 0
	093 JumpIfNotEqual {95}
	094 Call 0x1C17DFC
	095 Move X0, X22
	096 Move X1, X31
	097 Call ScriptableRenderPass.GetActiveDebugHandler, X0
	098 Compare X0, 0
	099 JumpIfEqual {118}
	100 Add X24, X19, 96
	101 Move X1, X24
	102 Move X2, X31
	103 Move X23, X0
	104 Call DebugHandler.WriteToDebugScreenTexture, X0, X1
	105 Move V0, [X19+48]
	106 And W8, W0, 1
	107 NotImplemented "Instruction FCMP not yet implemented."
	108 NotImplemented "Instruction CSEL not yet implemented."
	109 Move X0, X23
	110 Move X1, X24
	111 Move X2, X31
	112 Call DebugHandler.HDRDebugViewIsActive, X0, X1
	113 Move TEMP, X0
	114 And TEMP, TEMP, 1
	115 Compare TEMP, 1
	116 JumpIfNotEqual {121}
	117 Move W8, W31
	118 Move V0, [X19+48]
	119 NotImplemented "Instruction FCMP not yet implemented."
	120 Move W26, W31
	121 Move W8, 2
	122 Move W9, [X19+488]
	123 Add X0, X19, 96
	124 Move X1, X31
	125 Xor W9, W9, 1
	126 Or W23, W8, W9
	127 Call CameraData.get_hdrDisplayColorGamut, X0
	128 Move X1, [X19+56]
	129 Move S0, [X19+36]
	130 Move S1, [X19+40]
	131 Move S2, [X19+44]
	132 Move S3, [X19+48]
	133 Move W2, W23
	134 Call FinalBlitPass.SetupHDROutput, X0, X1, X2, X3
	135 Move W8, W26
	136 Compare W8, 0
	137 JumpIfEqual {163}
	138 Move X0, [X25]
	139 Move X22, [X19+16]
	140 Move W8, [X0+224]
	141 Compare W8, 0
	142 JumpIfNotEqual {144}
	143 Call 0x1C17DFC
	144 Move X0, X22
	145 Move X1, X31
	146 Call TextureHandle.op_Implicit, X0
	147 Compare X0, 0
	148 JumpIfEqual {251}
	149 Move W8, [X0+168]
	150 Move X22, X0
	151 Compare W8, 0
	152 JumpIfEqual {195}
	153 Add X8, X31, 0
	154 Move X0, X22
	155 Move X1, X31
	156 Call RTHandle.get_rtHandleProperties, X0
	157 Move V8, [X31+32]
	158 Add X8, X31, 0
	159 Move X0, X22
	160 Move X1, X31
	161 Call RTHandle.get_rtHandleProperties, X0
	162 Move V9, [X31+36]
	163 Move X0, [X25]
	164 Move X20, [X19+24]
	165 Move W8, [X0+224]
	166 Compare W8, 0
	167 JumpIfNotEqual {169}
	168 Call 0x1C17DFC
	169 Move X0, X20
	170 Move X1, X31
	171 Call TextureHandle.op_Implicit, X0
	172 Move X8, [X19+16]
	173 Move X19, X0
	174 Move X1, X31
	175 Move X0, X8
	176 Call TextureHandle.op_Implicit, X0
	177 Move X3, X0
	178 Move X0, X22
	179 Move X1, X21
	180 Move X2, X19
	181 Move X20, [X31+128]
	182 Move X19, [X31+136]
	183 Move X22, [X31+112]
	184 Move X21, [X31+120]
	185 Move X24, [X31+96]
	186 Move X23, [X31+104]
	187 Move X26, [X31+80]
	188 Move X25, [X31+88]
	189 Move X30, [X31+64]
	190 Move D9, [X31+48]
	191 Move D8, [X31+56]
	192 Add X31, X31, 144
	193 Call FinalBlitPass.ExecutePass, X0, X1, X2, X3
	194 Return 
	195 Move X23, 0x930000
	196 Move W8, [X23+2632]
	197 Compare W8, 0
	198 JumpIfNotEqual {204}
	199 Move X0, 0x64A000
	200 Move X0, [X0+3848]
	201 Call 0x1C17CF4
	202 Move W8, 1
	203 Move [X23+2632], W8
	204 Move X8, 0x64A000
	205 Move X8, [X8+3848]
	206 Move X8, [X8]
	207 Move X8, [X8+184]
	208 Move S8, [X8+8]
	209 Move S9, [X8+12]
	210 Move X23, 0x6A1000
	211 Move X0, [X22+24]
	212 Move X23, [X23+3624]
	213 Compare X0, 0
	214 JumpIfEqual {219}
	215 Move X1, X31
	216 Call Texture.get_filterMode, X0
	217 NotImplemented "Instruction CMP not yet implemented."
	218 Add X8, X19, 68
	219 Add X8, X19, 64
	220 Move X0, [X23]
	221 Move W19, [X8]
	222 Move X23, [X20+24]
	223 Move X20, [X21]
	224 Move W8, [X0+224]
	225 Compare W8, 0
	226 JumpIfNotEqual {228}
	227 Call 0x1C17DFC
	228 Move S2, W31
	229 Move S3, W31
	230 Move X0, X23
	231 Move X1, X22
	232 Move V0, V8
	233 Move V1, V9
	234 Move X2, X20
	235 Move W3, W19
	236 Move X4, X31
	237 Call Blitter.BlitTexture, X0, X1, X2, X3, X4
	238 Move X20, [X31+128]
	239 Move X19, [X31+136]
	240 Move X22, [X31+112]
	241 Move X21, [X31+120]
	242 Move X24, [X31+96]
	243 Move X23, [X31+104]
	244 Move X26, [X31+80]
	245 Move X25, [X31+88]
	246 Move X30, [X31+64]
	247 Move D9, [X31+48]
	248 Move D8, [X31+56]
	249 Add X31, X31, 144
	250 Return 
	251 Call 0x1C17F20

