Type: UnityEngine.Rendering.Universal.Internal.FinalBlitPass

Method: System.Void .ctor(UnityEngine.Rendering.Universal.RenderPassEvent evt, UnityEngine.Material blitMaterial, UnityEngine.Material blitHDRMaterial)

Disassembly:
	0x03AB14E8 ADRP X0, 0x6A7000
	0x03AB14EC LDR X0, [X0 + 0x48]
	0x03AB14F0 BL 0x1C16CF4
	0x03AB14F4 ADRP X0, 0x66B000
	0x03AB14F8 LDR X0, [X0 + 0x8A8]
	0x03AB14FC BL 0x1C16CF4
	0x03AB1500 ADRP X0, 0x66C000
	0x03AB1504 LDR X0, [X0 + 0xFC0]
	0x03AB1508 BL 0x1C16CF4
	0x03AB150C ADRP X0, 0x6A5000
	0x03AB1510 LDR X0, [X0 + 0x468]
	0x03AB1514 BL 0x1C16CF4
	0x03AB1518 ADRP X0, 0x6A7000
	0x03AB151C LDR X0, [X0 + 0x50]
	0x03AB1520 BL 0x1C16CF4
	0x03AB1524 MOVZ W8, 0x1
	0x03AB1528 STRB W8, [X24 + 0x45F]
	0x03AB152C MOVI V0.2D, 0x0
	0x03AB1530 STP V0, V0, [X31 + 0x30]
	0x03AB1534 STR X31, [X31 + 0x28]
	0x03AB1538 CBZ X19, 0x3AB17B4
	0x03AB153C ADRP X8, 0x6A7000
	0x03AB1540 ADRP X9, 0x6A7000
	0x03AB1544 LDR X8, [X8 + 0x50]
	0x03AB1548 LDR X9, [X9 + 0x38]
	0x03AB154C LDR X3, [X21 + 0x38]
	0x03AB1550 ADD X2, X31, 0x28
	0x03AB1554 LDR X1, [X8]
	0x03AB1558 LDR X4, [X9]
	0x03AB155C ADD X8, X31, 0x8
	0x03AB1560 MOV X0, X19
	0x03AB1564 BL 0x2240F24
	0x03AB1568 LDUR V0, [X31 + 0x8]
	0x03AB156C LDUR V1, [X31 + 0x18]
	0x03AB1570 ADD X19, X20, 0x18
	0x03AB1574 STP V0, V1, [X31 + 0x30]
	0x03AB1578 MOV X0, X19
	0x03AB157C MOV X1, X31
	0x03AB1580 BL 0x3A9006C
	0x03AB1584 LDR X25, [X31 + 0x28]
	0x03AB1588 CBZ X25, 0x3AB17B8
	0x03AB158C ADRP X26, 0x6A3000
	0x03AB1590 LDR X26, [X26 + 0x20]
	0x03AB1594 STP X23, X22, [X25 + 0x10]
	0x03AB1598 MOV W24, W0
	0x03AB159C LDR X0, [X26]
	0x03AB15A0 LDR W8, [X0 + 0xE0]
	0x03AB15A4 CBNZ W8, 0x3AB15B0
	0x03AB15A8 BL 0x1C16DFC
	0x03AB15AC LDR X0, [X26]
	0x03AB15B0 LDR X8, [X0 + 0xB8]
	0x03AB15B4 AND W3, W24, 0x1
	0x03AB15B8 LDR W8, [X8 + 0xA8]
	0x03AB15BC STR W8, [X25 + 0x20]
	0x03AB15C0 ADD X2, X31, 0x28
	0x03AB15C4 MOV X0, X21
	0x03AB15C8 MOV X1, X20
	0x03AB15CC BL 0x3AB1290
	0x03AB15D0 LDR X8, [X31 + 0x28]
	0x03AB15D4 CBZ X8, 0x3AB17BC
	0x03AB15D8 ADD X1, X8, 0x18
	0x03AB15DC ADD X0, X31, 0x30
	0x03AB15E0 MOV W2, W31
	0x03AB15E4 MOV X3, X31
	0x03AB15E8 BL 0x3996828
	0x03AB15EC LDR X8, [X31 + 0x28]
	0x03AB15F0 CBZ X8, 0x3AB17C0
	0x03AB15F4 ADD X1, X8, 0x10
	0x03AB15F8 ADD X0, X31, 0x30
	0x03AB15FC MOV X2, X31
	0x03AB1600 BL 0x3996BA8
	0x03AB1604 TBZ X24, 0x0, 0x3AB16E4
	0x03AB1608 ADRP X8, 0x69F000
	0x03AB160C LDR X8, [X8 + 0xA88]
	0x03AB1610 LDR X0, [X8]
	0x03AB1614 LDR W8, [X0 + 0xE0]
	0x03AB1618 CBNZ W8, 0x3AB1620
	0x03AB161C BL 0x1C16DFC
	0x03AB1620 ADD X0, X31, 0x58
	0x03AB1624 MOV X1, X31
	0x03AB1628 BL 0x398D2E8
	0x03AB162C TBZ X0, 0x0, 0x3AB16E4
	0x03AB1630 ADRP X8, 0x66C000
	0x03AB1634 LDR X8, [X8 + 0xFC0]
	0x03AB1638 LDR X0, [X8]
	0x03AB163C LDR W8, [X0 + 0xE0]
	0x03AB1640 CBNZ W8, 0x3AB1648
	0x03AB1644 BL 0x1C16DFC
	0x03AB1648 MOV X0, X31
	0x03AB164C BL 0x39EE864
	0x03AB1650 CBZ X0, 0x3AB17C8
	0x03AB1654 LDR X0, [X0 + 0x10]
	0x03AB1658 CBZ X0, 0x3AB17CC
	0x03AB165C ADRP X8, 0x6A5000
	0x03AB1660 LDR X8, [X8 + 0x468]
	0x03AB1664 LDR X1, [X8]
	0x03AB1668 BL 0x22ACD04
	0x03AB166C MOV X20, X0
	0x03AB1670 MOV X0, X19
	0x03AB1674 MOV X1, X31
	0x03AB1678 BL 0x3A93358
	0x03AB167C MOV X21, X0
	0x03AB1680 MOV X22, X1
	0x03AB1684 MOV X0, X19
	0x03AB1688 MOV X1, X31
	0x03AB168C BL 0x3A9344C
	0x03AB1690 LDR X23, [X31 + 0x28]
	0x03AB1694 CBZ X23, 0x3AB17D0
	0x03AB1698 ADRP X8, 0x66B000
	0x03AB169C LDR X8, [X8 + 0x8A8]
	0x03AB16A0 MOV W19, W0
	0x03AB16A4 LDR X0, [X8]
	0x03AB16A8 LDR W8, [X0 + 0xE0]
	0x03AB16AC CBNZ W8, 0x3AB16B4
	0x03AB16B0 BL 0x1C16DFC
	0x03AB16B4 ADD X4, X23, 0x24
	0x03AB16B8 MOV X0, X21
	0x03AB16BC MOV X1, X22
	0x03AB16C0 MOV W2, W19
	0x03AB16C4 MOV X3, X20
	0x03AB16C8 MOV X5, X31
	0x03AB16CC BL 0x3A91338
	0x03AB16D0 ADD X0, X31, 0x30
	0x03AB16D4 ADD X1, X31, 0x58
	0x03AB16D8 MOV X2, X31
	0x03AB16DC BL 0x3996BA8
	0x03AB16E0 B 0x3AB16F4
	0x03AB16E4 LDR X8, [X31 + 0x28]
	0x03AB16E8 CBZ X8, 0x3AB17C4
	0x03AB16EC FMOV V0.4S, 0x0
	0x03AB16F0 STUR V0, [X8 + 0x24]
	0x03AB16F4 ADRP X21, 0x6A7000
	0x03AB16F8 LDR X21, [X21 + 0x48]
	0x03AB16FC LDR X8, [X21]
	0x03AB1700 LDR W9, [X8 + 0xE0]
	0x03AB1704 CBNZ W9, 0x3AB1714

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X24, 0x932000
	014 Move X23, 0x6A3000
	015 Move W8, [X24+1113]
	016 Move X23, [X23+4080]
	017 Move X19, X3
	018 Move X20, X2
	019 Move W22, W1
	020 Move X21, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {48}
	025 Move X0, 0x6A7000
	026 Move X0, [X0+4064]
	027 Call 0x1C17CF4
	028 Move X0, 0x6A7000
	029 Move X0, [X0+4072]
	030 Call 0x1C17CF4
	031 Move X0, 0x6A0000
	032 Move X0, [X0+1432]
	033 Call 0x1C17CF4
	034 Move X0, 0x6A3000
	035 Move X0, [X0+4080]
	036 Call 0x1C17CF4
	037 Move X0, 0x6A7000
	038 Move X0, [X0+4080]
	039 Call 0x1C17CF4
	040 Move X0, 0x6A7000
	041 Move X0, [X0+4088]
	042 Call 0x1C17CF4
	043 Move X0, 0x6A8000
	044 Move X0, [X0]
	045 Call 0x1C17CF4
	046 Move W8, 1
	047 Move [X24+1113], W8
	048 Move X0, [X23]
	049 Move X26, 0x6A0000
	050 Move X23, 0x6A8000
	051 Move X25, 0x6A7000
	052 Move X24, 0x6A7000
	053 Move W8, [X0+224]
	054 Move X26, [X26+1432]
	055 Move X23, [X23]
	056 Move X25, [X25+4072]
	057 Move X24, [X24+4064]
	058 Compare W8, 0
	059 JumpIfNotEqual {61}
	060 Call 0x1C17DFC
	061 Move X0, X21
	062 Move X1, X31
	063 Call ScriptableRenderPass..ctor, X0
	064 Move X0, [X26]
	065 Call 0x1C17F10
	066 Move X1, [X23]
	067 Move X2, X31
	068 Move X23, X0
	069 Call ProfilingSampler..ctor, X0, X1
	070 Move [X21+56], X23
	071 Move [X21+66], W31
	072 Move X0, [X25]
	073 Call 0x1C17F10
	074 Move X1, X31
	075 Move X23, X0
	076 Call Object..ctor, X0
	077 Move [X21+232], X23
	078 Move [X21+16], W22
	079 Move X0, [X24]
	080 Move W1, 2
	081 Call 0x1C17D6C
	082 Move [X21+240], X0
	083 Compare X0, 0
	084 JumpIfEqual {144}
	085 Move X27, 0x6A7000
	086 Move X28, 0x6A7000
	087 Move X27, [X27+4080]
	088 Move X28, [X28+4088]
	089 Move X24, X0
	090 Move X25, X31
	091 Move X22, X31
	092 Move X23, X31
	093 Move X26, X31
	094 Move TEMP, 0
	095 Not TEMP
	096 Move W29, TEMP
	097 Move W8, [X24+24]
	098 NotImplemented "Instruction CMP not yet implemented."
	099 NotImplemented "Instruction CMP not yet implemented."
	100 NotImplemented "Instruction CSEL not yet implemented."
	101 NotImplemented "Instruction CMP not yet implemented."
	102 Add X8, X24, X25
	103 NotImplemented "Instruction CSEL not yet implemented."
	104 Move [X8+32], X9
	105 Compare X9, 0
	106 JumpIfEqual {119}
	107 Compare X23, 0
	108 JumpIfEqual {144}
	109 Move X1, [X28]
	110 Move X0, X23
	111 Move X2, X31
	112 Call Material.FindPass, X0, X1
	113 Move X8, [X21+240]
	114 Add X9, X24, X25
	115 Move [X9+40], W0
	116 Move X24, X8
	117 Compare X8, 0
	118 JumpIfNotEqual {120}
	119 Move [X8+40], W29
	120 Move W8, [X24+24]
	121 NotImplemented "Instruction CMP not yet implemented."
	122 Add X24, X24, X25
	123 Move X8, [X24+32]
	124 NotImplemented "Instruction CMP not yet implemented."
	125 NotImplemented "Instruction CSEL not yet implemented."
	126 Compare X8, 0
	127 JumpIfEqual {134}
	128 Compare X22, 0
	129 JumpIfEqual {144}
	130 Move X1, [X27]
	131 Move X0, X22
	132 Move X2, X31
	133 Call Material.FindPass, X0, X1
	134 Move TEMP, 0
	135 Not TEMP
	136 Move W0, TEMP
	137 Add X25, X25, 16
	138 NotImplemented "Instruction CMP not yet implemented."
	139 Move [X24+44], W0
	140 Move X24, [X21+240]
	141 Add X26, X26, 1
	142 Compare X24, 0
	143 JumpIfNotEqual {97}
	144 Call 0x1C17F20
	145 Move X20, [X31+80]
	146 Move X19, [X31+88]
	147 Move X22, [X31+64]
	148 Move X21, [X31+72]
	149 Move X24, [X31+48]
	150 Move X23, [X31+56]
	151 Move X26, [X31+32]
	152 Move X25, [X31+40]
	153 Move X28, [X31+16]
	154 Move X27, [X31+24]
	155 Move X29, [X31+96]
	156 Move X30, [X31+104]
	157 Return 
	158 Call 0x1C17F28

Method: System.Void Dispose()

Disassembly:
	0x03AB1710 LDR X8, [X21]

ISIL:
	001 Return 

Method: System.Void Setup(UnityEngine.RenderTextureDescriptor baseDescriptor, UnityEngine.Rendering.Universal.RenderTargetHandle colorHandle)

Disassembly:
	0x03AB1714 LDR X9, [X8 + 0xB8]
	0x03AB1718 LDR X19, [X9 + 0x8]
	0x03AB171C CBNZ X19, 0x3AB1774
	0x03AB1720 LDR W9, [X8 + 0xE0]
	0x03AB1724 CBNZ W9, 0x3AB1734
	0x03AB1728 MOV X0, X8
	0x03AB172C BL 0x1C16DFC
	0x03AB1730 LDR X8, [X21]
	0x03AB1734 ADRP X9, 0x6A7000
	0x03AB1738 LDR X8, [X8 + 0xB8]
	0x03AB173C LDR X9, [X9 + 0x28]
	0x03AB1740 LDR X20, [X8]
	0x03AB1744 LDR X0, [X9]
	0x03AB1748 BL 0x1C16F10
	0x03AB174C ADRP X8, 0x6A7000
	0x03AB1750 LDR X8, [X8 + 0x40]
	0x03AB1754 MOV X19, X0
	0x03AB1758 LDR X2, [X8]
	0x03AB175C MOV X1, X20
	0x03AB1760 MOV X3, X31
	0x03AB1764 BL 0x25C78AC
	0x03AB1768 LDR X8, [X21]
	0x03AB176C LDR X8, [X8 + 0xB8]
	0x03AB1770 STR X19, [X8 + 0x8]
	0x03AB1774 ADRP X8, 0x6A7000
	0x03AB1778 LDR X8, [X8 + 0x30]
	0x03AB177C LDR X2, [X8]
	0x03AB1780 ADD X0, X31, 0x30
	0x03AB1784 MOV X1, X19
	0x03AB1788 BL 0x224107C
	0x03AB178C ADD X0, X31, 0x30
	0x03AB1790 MOV X1, X31
	0x03AB1794 BL 0x39972C0
	0x03AB1798 LDP X20, X19, [X31 + 0x90]
	0x03AB179C LDP X22, X21, [X31 + 0x80]
	0x03AB17A0 LDP X24, X23, [X31 + 0x70]
	0x03AB17A4 LDP X26, X25, [X31 + 0x60]
	0x03AB17A8 LDR X30, [X31 + 0x50]
	0x03AB17AC ADD X31, X31, 0xA0
	0x03AB17B0 RET
	0x03AB17B4 BL 0x1C16F20
	0x03AB17B8 BL 0x1C16F20
	0x03AB17BC BL 0x1C16F20
	0x03AB17C0 BL 0x1C16F20
	0x03AB17C4 BL 0x1C16F20
	0x03AB17C8 BL 0x1C16F20
	0x03AB17CC BL 0x1C16F20
	0x03AB17D0 BL 0x1C16F20
	0x03AB17D4 B 0x3AB181C
	0x03AB17D8 B 0x3AB181C
	0x03AB17DC B 0x3AB181C
	0x03AB17E0 B 0x3AB181C
	0x03AB17E4 B 0x3AB181C
	0x03AB17E8 B 0x3AB181C
	0x03AB17EC B 0x3AB181C
	0x03AB17F0 B 0x3AB181C
	0x03AB17F4 B 0x3AB181C
	0x03AB17F8 B 0x3AB181C
	0x03AB17FC B 0x3AB181C
	0x03AB1800 B 0x3AB181C
	0x03AB1804 B 0x3AB181C
	0x03AB1808 B 0x3AB181C
	0x03AB180C B 0x3AB181C
	0x03AB1810 B 0x3AB181C
	0x03AB1814 B 0x3AB181C
	0x03AB1818 B 0x3AB181C
	0x03AB181C MOV X19, X0
	0x03AB1820 CMP W1, 0x1
	0x03AB1824 B.NE 0x3AB1850
	0x03AB1828 MOV X0, X19
	0x03AB182C BL 0x3EB1AD0
	0x03AB1830 LDR X20, [X0]
	0x03AB1834 BL 0x3EB1AE0
	0x03AB1838 ADD X0, X31, 0x30
	0x03AB183C MOV X1, X31
	0x03AB1840 BL 0x39972C0
	0x03AB1844 CBZ X20, 0x3AB1798
	0x03AB1848 MOV X0, X20
	0x03AB184C BL 0x1C16F18
	0x03AB1850 MOV X20, X31
	0x03AB1854 B 0x3AB185C
	0x03AB1858 MOV X19, X0
	0x03AB185C ADD X0, X31, 0x30
	0x03AB1860 MOV X1, X31
	0x03AB1864 BL 0x39972C0
	0x03AB1868 CBNZ X20, 0x3AB1874
	0x03AB186C MOV X0, X19
	0x03AB1870 BL 0x1D2C690
	0x03AB1874 MOV X0, X20
	0x03AB1878 BL 0x1C16F18
	0x03AB187C BL 0x1990590
	0x03AB1880 STR X30, [X31 - 0x20]!
	0x03AB1884 STP X20, X19, [X31 + 0x10]
	0x03AB1888 ADRP X19, 0x931000
	0x03AB188C ADRP X20, 0x6A7000
	0x03AB1890 LDRB W8, [X19 + 0x460]
	0x03AB1894 LDR X20, [X20 + 0x48]
	0x03AB1898 TBNZ X8, 0x0, 0x3AB18B0
	0x03AB189C ADRP X0, 0x6A7000
	0x03AB18A0 LDR X0, [X0 + 0x48]
	0x03AB18A4 BL 0x1C16CF4
	0x03AB18A8 MOVZ W8, 0x1
	0x03AB18AC STRB W8, [X19 + 0x460]
	0x03AB18B0 LDR X0, [X20]
	0x03AB18B4 BL 0x1C16F10
	0x03AB18B8 MOV X1, X31
	0x03AB18BC MOV X19, X0
	0x03AB18C0 BL 0x33BDD8C
	0x03AB18C4 LDR X8, [X20]
	0x03AB18C8 LDR X8, [X8 + 0xB8]
	0x03AB18CC STR X19, [X8]
	0x03AB18D0 LDP X20, X19, [X31 + 0x10]
	0x03AB18D4 LDR X30, [X31], #0x20
	0x03AB18D8 RET
	0x03AB18DC MOV X1, X31
	0x03AB18E0 B 0x33BDD8C
	0x03AB18E4 SUB X31, X31, 0x90
	0x03AB18E8 STP D9, D8, [X31 + 0x30]
	0x03AB18EC STR X30, [X31 + 0x40]
	0x03AB18F0 STP X26, X25, [X31 + 0x50]
	0x03AB18F4 STP X24, X23, [X31 + 0x60]
	0x03AB18F8 STP X22, X21, [X31 + 0x70]
	0x03AB18FC STP X20, X19, [X31 + 0x80]
	0x03AB1900 ADRP X21, 0x931000
	0x03AB1904 LDRB W8, [X21 + 0x461]
	0x03AB1908 MOV X20, X2
	0x03AB190C MOV X19, X1
	0x03AB1910 TBNZ X8, 0x0, 0x3AB1958
	0x03AB1914 ADRP X0, 0x6A1000
	0x03AB1918 LDR X0, [X0 + 0xE28]
	0x03AB191C BL 0x1C16CF4

ISIL:
	001 Subtract X31, X31, 496
	002 Move [X31+432], X29
	003 Move [X31+440], X30
	004 Move [X31+448], X24
	005 Move [X31+456], X23
	006 Move [X31+464], X22
	007 Move [X31+472], X21
	008 Move [X31+480], X20
	009 Move [X31+488], X19
	010 NotImplemented "Instruction MRS not yet implemented."
	011 Move X8, [X21+40]
	012 Move X22, 0x932000
	013 Move X20, X2
	014 Move X19, X0
	015 Move [X31+424], X8
	016 Move W8, [X22+1114]
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {38}
	021 Move X0, 0x6A8000
	022 Move X0, [X0+8]
	023 Call 0x1C17CF4
	024 Move X0, 0x6A8000
	025 Move X0, [X0+16]
	026 Call 0x1C17CF4
	027 Move X0, 0x6A8000
	028 Move X0, [X0+24]
	029 Call 0x1C17CF4
	030 Move X0, 0x6A0000
	031 Move X0, [X0+2480]
	032 Call 0x1C17CF4
	033 Move X0, 0x6A6000
	034 Move X0, [X0+3520]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X22+1114], W8
	038 Move X22, 0x6A6000
	039 Move X8, [X19+224]
	040 Move X22, [X22+3520]
	041 Add X23, X31, 320
	042 Compare X8, 0
	043 JumpIfEqual {70}
	044 Move X9, 0x6A8000
	045 Move X9, [X9+16]
	046 NotImplemented "Instruction LDUR not yet implemented."
	047 NotImplemented "Instruction LDUR not yet implemented."
	048 Move X8, [X8+72]
	049 Move X2, [X9]
	050 NotImplemented "Instruction MOVI not yet implemented."
	051 Add X0, X31, 320
	052 Add X1, X31, 368
	053 Move [X31+336], V2
	054 Move [X31+344], V2
	055 Move [X31+20], V2
	056 Move [X31+256], X8
	057 Move [X31+224], V0
	058 Move [X31+232], V1
	059 Move [X31+368], V0
	060 Move [X31+376], V1
	061 Move [X31+400], X8
	062 Call Nullable`1<RenderTargetIdentifier>..ctor, X0, X1
	063 NotImplemented "Instruction LDUR not yet implemented."
	064 NotImplemented "Instruction LDUR not yet implemented."
	065 Move V2, [X31+22]
	066 Move W24, [X31+320]
	067 Move [X31+368], V0
	068 Move [X31+376], V1
	069 Move [X23+79], V2
	070 NotImplemented "Instruction MOVI not yet implemented."
	071 Move W24, W31
	072 Move [X23+79], V0
	073 Move [X31+368], V0
	074 Move [X31+376], V0
	075 Move V0, [X31+368]
	076 Move V1, [X31+384]
	077 NotImplemented "Instruction LDUR not yet implemented."
	078 Move X0, [X22]
	079 Move [X31+320], V0
	080 Move [X31+328], V1
	081 Move [X23+31], V2
	082 Move W8, [X0+224]
	083 Compare W8, 0
	084 JumpIfNotEqual {86}
	085 Call 0x1C17DFC
	086 Add X8, X31, 176
	087 Move X0, X20
	088 Move X1, X31
	089 Call RenderTargetHandle.Identifier, X0
	090 Move V0, [X31+176]
	091 Move V1, [X31+192]
	092 Move X8, [X31+208]
	093 Move [X31+272], V0
	094 Move [X31+280], V1
	095 Move [X31+304], X8
	096 Compare W24, 0
	097 JumpIfEqual {118}
	098 NotImplemented "Instruction LDUR not yet implemented."
	099 NotImplemented "Instruction LDUR not yet implemented."
	100 NotImplemented "Instruction LDUR not yet implemented."
	101 Move V2, [X31+272]
	102 Move V3, [X31+288]
	103 Move X9, [X31+304]
	104 Add X0, X31, 128
	105 Add X1, X31, 80
	106 Move X2, X31
	107 Move [X31+128], V0
	108 Move [X31+136], V1
	109 Move [X31+160], X8
	110 Move [X31+80], V2
	111 Move [X31+88], V3
	112 Move [X31+112], X9
	113 Call RenderTargetIdentifier.op_Inequality, X0, X1
	114 Move TEMP, X0
	115 And TEMP, TEMP, 1
	116 Compare TEMP, 1
	117 JumpIfNotEqual {150}
	118 Move X0, [X22]
	119 Move X22, 0x6A0000
	120 Move W8, [X0+224]
	121 Move X22, [X22+2480]
	122 Compare W8, 0
	123 JumpIfNotEqual {125}
	124 Call 0x1C17DFC
	125 Add X8, X31, 40
	126 Move X0, X20
	127 Move X1, X31
	128 Call RenderTargetHandle.Identifier, X0
	129 NotImplemented "Instruction LDUR not yet implemented."
	130 NotImplemented "Instruction LDUR not yet implemented."
	131 Move X8, [X31+72]
	132 Move X0, [X22]
	133 Move [X31+176], V0
	134 Move [X31+184], V1
	135 Move [X31+208], X8
	136 Move W8, [X0+224]
	137 Compare W8, 0
	138 JumpIfNotEqual {140}
	139 Call 0x1C17DFC
	140 Move V0, [X31+176]
	141 Move V1, [X31+192]
	142 Move X8, [X31+208]
	143 Add X0, X31, 0
	144 Move X1, X31
	145 Move [X31], V0
	146 Move [X31+8], V1
	147 Move [X31+32], X8
	148 Call RTHandles.Alloc, X0
	149 Move [X19+224], X0
	150 Move X8, [X21+40]
	151 Move X9, [X31+424]
	152 NotImplemented "Instruction CMP not yet implemented."
	153 Move X20, [X31+480]
	154 Move X19, [X31+488]
	155 Move X22, [X31+464]
	156 Move X21, [X31+472]
	157 Move X24, [X31+448]
	158 Move X23, [X31+456]
	159 Move X29, [X31+432]
	160 Move X30, [X31+440]
	161 Add X31, X31, 496
	162 Return 
	163 Call 0x3EB2B20

Method: System.Void Setup(UnityEngine.RenderTextureDescriptor baseDescriptor, UnityEngine.Rendering.RTHandle colorHandle)

Disassembly:
	0x03AB1920 ADRP X0, 0x66A000
	0x03AB1924 LDR X0, [X0 + 0x8F8]

ISIL:
	001 Move [X0+224], X2
	002 Return 

Method: System.Void SetupHDROutput(UnityEngine.ColorGamut hdrDisplayColorGamut, UnityEngine.Material material, UnityEngine.Rendering.HDROutputUtils/Operation hdrOperation, UnityEngine.Vector4 hdrOutputParameters)

Disassembly:
	0x03AB1928 BL 0x1C16CF4
	0x03AB192C ADRP X0, 0x6A2000
	0x03AB1930 LDR X0, [X0 + 0xFF0]
	0x03AB1934 BL 0x1C16CF4
	0x03AB1938 ADRP X0, 0x69F000
	0x03AB193C LDR X0, [X0 + 0xA88]
	0x03AB1940 BL 0x1C16CF4
	0x03AB1944 ADRP X0, 0x6A4000
	0x03AB1948 LDR X0, [X0 + 0xF90]
	0x03AB194C BL 0x1C16CF4
	0x03AB1950 MOVZ W8, 0x1
	0x03AB1954 STRB W8, [X21 + 0x461]
	0x03AB1958 CBZ X19, 0x3AB1C3C
	0x03AB195C MOV X21, X19
	0x03AB1960 LDR X0, [X21 + 0x38]!
	0x03AB1964 CBZ X0, 0x3AB1C3C
	0x03AB1968 MOV X1, X31
	0x03AB196C MOV X2, X31
	0x03AB1970 BL 0x3C14F4C
	0x03AB1974 CBZ X20, 0x3AB1C3C
	0x03AB1978 ADRP X8, 0x66A000
	0x03AB197C LDR X8, [X8 + 0x8F8]
	0x03AB1980 ADRP X24, 0x6A4000
	0x03AB1984 ADRP X25, 0x69F000
	0x03AB1988 LDR X22, [X20 + 0x18]
	0x03AB198C LDR X0, [X8]
	0x03AB1990 LDRB W23, [X19 + 0x34]
	0x03AB1994 LDR W8, [X0 + 0xE0]
	0x03AB1998 LDR X24, [X24 + 0xF90]
	0x03AB199C LDR X25, [X25 + 0xA88]
	0x03AB19A0 CBNZ W8, 0x3AB19A8
	0x03AB19A4 BL 0x1C16DFC
	0x03AB19A8 LDR X1, [X24]
	0x03AB19AC CMP W23, 0x0
	0x03AB19B0 CSET W2, NE
	0x03AB19B4 MOV X0, X22
	0x03AB19B8 MOV X3, X31
	0x03AB19BC BL 0x39E9618
	0x03AB19C0 LDR X0, [X25]
	0x03AB19C4 LDR X23, [X19 + 0x38]
	0x03AB19C8 LDR W22, [X19 + 0x20]
	0x03AB19CC LDR X24, [X19 + 0x10]
	0x03AB19D0 LDR W8, [X0 + 0xE0]
	0x03AB19D4 CBNZ W8, 0x3AB19DC
	0x03AB19D8 BL 0x1C16DFC
	0x03AB19DC MOV X0, X24
	0x03AB19E0 MOV X1, X31
	0x03AB19E4 BL 0x399A66C

ISIL:
	001 Move [X31-80], D11
	002 Move [X31-72], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X30
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X23, 0x932000
	012 Move X22, 0x6A4000
	013 Move W8, [X23+1115]
	014 Move X22, [X22+32]
	015 Move V8, V3
	016 Move V9, V2
	017 Move V10, V1
	018 Move V11, V0
	019 Move W19, W2
	020 Move X21, X1
	021 Move W20, W0
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {31}
	026 Move X0, 0x6A4000
	027 Move X0, [X0+32]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X23+1115], W8
	031 Move X0, [X22]
	032 Move W8, [X0+224]
	033 Compare W8, 0
	034 JumpIfNotEqual {36}
	035 Call 0x1C17DFC
	036 Compare X21, 0
	037 JumpIfEqual {64}
	038 Move X8, [X22]
	039 Move X0, X21
	040 Move V0, V11
	041 Move V1, V10
	042 Move X8, [X8+184]
	043 Move V2, V9
	044 Move V3, V8
	045 Move X2, X31
	046 Move W1, [X8+204]
	047 Call Material.SetVector, X0, X1, X2
	048 Move X0, X21
	049 Move W1, W20
	050 Move W2, W19
	051 Move X20, [X31+64]
	052 Move X19, [X31+72]
	053 Move X22, [X31+48]
	054 Move X21, [X31+56]
	055 Move X30, [X31+32]
	056 Move X23, [X31+40]
	057 Move D9, [X31+16]
	058 Move D8, [X31+24]
	059 Move X3, X31
	060 Move D11, [X31+80]
	061 Move D10, [X31+88]
	062 Call HDROutputUtils.ConfigureHDROutput, X0, X1, X2
	063 Return 
	064 Call 0x1C17F20

Method: System.Void OnCameraSetup(UnityEngine.Rendering.CommandBuffer cmd, ref UnityEngine.Rendering.Universal.RenderingData renderingData)

Disassembly:
	0x03AB19E8 CBZ X23, 0x3AB1C3C
	0x03AB19EC ADRP X24, 0x6A2000
	0x03AB19F0 LDR X24, [X24 + 0xFF0]
	0x03AB19F4 MOV X2, X0
	0x03AB19F8 MOV X0, X23
	0x03AB19FC MOV W1, W22
	0x03AB1A00 MOV X3, X31
	0x03AB1A04 BL 0x3C14C34
	0x03AB1A08 LDR X0, [X24]
	0x03AB1A0C ADD X22, X19, 0x48
	0x03AB1A10 LDR W8, [X0 + 0xE0]
	0x03AB1A14 CBNZ W8, 0x3AB1A1C
	0x03AB1A18 BL 0x1C16DFC
	0x03AB1A1C MOV X0, X22
	0x03AB1A20 MOV X1, X31
	0x03AB1A24 BL 0x3A43B70
	0x03AB1A28 CBZ X0, 0x3AB1A70
	0x03AB1A2C ADD X24, X19, 0x60
	0x03AB1A30 MOV X1, X24
	0x03AB1A34 MOV X2, X31
	0x03AB1A38 MOV X23, X0
	0x03AB1A3C BL 0x3A35A68
	0x03AB1A40 LDR V0, [X19 + 0x30]
	0x03AB1A44 AND W8, W0, 0x1
	0x03AB1A48 FCMP S0, 0x0
	0x03AB1A4C CSEL W26, W31, W8, LT
	0x03AB1A50 B.LT 0x3AB1AB4
	0x03AB1A54 MOV X0, X23
	0x03AB1A58 MOV X1, X24
	0x03AB1A5C MOV X2, X31
	0x03AB1A60 BL 0x3A35A2C
	0x03AB1A64 TBZ X0, 0x0, 0x3AB1A80
	0x03AB1A68 MOV W8, W31
	0x03AB1A6C B 0x3AB1A84
	0x03AB1A70 LDR V0, [X19 + 0x30]
	0x03AB1A74 FCMP S0, 0x0
	0x03AB1A78 B.LT 0x3AB1B14
	0x03AB1A7C MOV W26, W31
	0x03AB1A80 MOVZ W8, 0x2
	0x03AB1A84 LDRB W9, [X19 + 0x1E8]
	0x03AB1A88 ADD X0, X19, 0x60
	0x03AB1A8C MOV X1, X31
	0x03AB1A90 EOR W9, W9, 0x1
	0x03AB1A94 ORR W23, W8, W9, 0x0
	0x03AB1A98 BL 0x3A9344C
	0x03AB1A9C LDR X1, [X19 + 0x38]
	0x03AB1AA0 LDP S0, S1, [X19 + 0x24]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x932000
	007 Move X22, 0x6A3000
	008 Move W8, [X21+1116]
	009 Move X22, [X22+4080]
	010 Move X20, X2
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x6A3000
	017 Move X0, [X0+4080]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+1116], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move X0, X20
	027 Move X1, X31
	028 Call ScriptableRenderPass.GetActiveDebugHandler, X0
	029 Compare X0, 0
	030 JumpIfEqual {57}
	031 Add X1, X20, 24
	032 Move X2, X31
	033 Move X21, X0
	034 Call DebugHandler.WriteToDebugScreenTexture, X0, X1
	035 Move TEMP, X0
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfNotEqual {57}
	039 Move X0, X21
	040 Move X1, X31
	041 Call DebugHandler.get_DebugScreenColorHandle, X0
	042 Move X20, [X0]
	043 Move X0, X21
	044 Move X1, X31
	045 Call DebugHandler.get_DebugScreenDepthHandle, X0
	046 Move X2, [X0]
	047 Move X0, X19
	048 Move X1, X20
	049 Move X20, [X31+32]
	050 Move X19, [X31+40]
	051 Move X22, [X31+16]
	052 Move X21, [X31+24]
	053 Move X3, X31
	054 Move X30, [X31+48]
	055 Call ScriptableRenderPass.ConfigureTarget, X0, X1, X2
	056 Return 
	057 Move X20, [X31+32]
	058 Move X19, [X31+40]
	059 Move X22, [X31+16]
	060 Move X21, [X31+24]
	061 Move X30, [X31+48]
	062 Return 

Method: System.Void Execute(UnityEngine.Rendering.ScriptableRenderContext context, ref UnityEngine.Rendering.Universal.RenderingData renderingData)

Disassembly:
	0x03AB1AA4 LDP S2, S3, [X19 + 0x2C]
	0x03AB1AA8 MOV W2, W23
	0x03AB1AAC BL 0x3AB0928
	0x03AB1AB0 MOV W8, W26
	0x03AB1AB4 CBZ W8, 0x3AB1B14
	0x03AB1AB8 LDR X0, [X25]
	0x03AB1ABC LDR X22, [X19 + 0x10]
	0x03AB1AC0 LDR W8, [X0 + 0xE0]
	0x03AB1AC4 CBNZ W8, 0x3AB1ACC
	0x03AB1AC8 BL 0x1C16DFC
	0x03AB1ACC MOV X0, X22
	0x03AB1AD0 MOV X1, X31
	0x03AB1AD4 BL 0x399A7C4
	0x03AB1AD8 CBZ X0, 0x3AB1C3C
	0x03AB1ADC LDRB W8, [X0 + 0xA8]
	0x03AB1AE0 MOV X22, X0
	0x03AB1AE4 CBZ W8, 0x3AB1B78
	0x03AB1AE8 ADD X8, X31, 0x0
	0x03AB1AEC MOV X0, X22
	0x03AB1AF0 MOV X1, X31
	0x03AB1AF4 BL 0x39D48AC
	0x03AB1AF8 LDR V8, [X31 + 0x20]
	0x03AB1AFC ADD X8, X31, 0x0
	0x03AB1B00 MOV X0, X22
	0x03AB1B04 MOV X1, X31
	0x03AB1B08 BL 0x39D48AC
	0x03AB1B0C LDR V9, [X31 + 0x24]
	0x03AB1B10 B 0x3AB1BAC
	0x03AB1B14 LDR X0, [X25]
	0x03AB1B18 LDR X20, [X19 + 0x18]
	0x03AB1B1C LDR W8, [X0 + 0xE0]
	0x03AB1B20 CBNZ W8, 0x3AB1B28
	0x03AB1B24 BL 0x1C16DFC
	0x03AB1B28 MOV X0, X20
	0x03AB1B2C MOV X1, X31
	0x03AB1B30 BL 0x399A7C4
	0x03AB1B34 LDR X8, [X19 + 0x10]
	0x03AB1B38 MOV X19, X0
	0x03AB1B3C MOV X1, X31
	0x03AB1B40 MOV X0, X8
	0x03AB1B44 BL 0x399A7C4
	0x03AB1B48 MOV X3, X0
	0x03AB1B4C MOV X0, X22
	0x03AB1B50 MOV X1, X21
	0x03AB1B54 MOV X2, X19
	0x03AB1B58 LDP X20, X19, [X31 + 0x80]
	0x03AB1B5C LDP X22, X21, [X31 + 0x70]
	0x03AB1B60 LDP X24, X23, [X31 + 0x60]
	0x03AB1B64 LDP X26, X25, [X31 + 0x50]
	0x03AB1B68 LDR X30, [X31 + 0x40]
	0x03AB1B6C LDP D9, D8, [X31 + 0x30]
	0x03AB1B70 ADD X31, X31, 0x90
	0x03AB1B74 B 0x3AB133C
	0x03AB1B78 ADRP X23, 0x930000
	0x03AB1B7C LDRB W8, [X23 + 0xA48]
	0x03AB1B80 CBNZ W8, 0x3AB1B98
	0x03AB1B84 ADRP X0, 0x64A000
	0x03AB1B88 LDR X0, [X0 + 0xF08]
	0x03AB1B8C BL 0x1C16CF4
	0x03AB1B90 MOVZ W8, 0x1
	0x03AB1B94 STRB W8, [X23 + 0xA48]
	0x03AB1B98 ADRP X8, 0x64A000
	0x03AB1B9C LDR X8, [X8 + 0xF08]
	0x03AB1BA0 LDR X8, [X8]
	0x03AB1BA4 LDR X8, [X8 + 0xB8]
	0x03AB1BA8 LDP S8, S9, [X8 + 0x8]
	0x03AB1BAC ADRP X23, 0x6A1000
	0x03AB1BB0 LDR X0, [X22 + 0x18]
	0x03AB1BB4 LDR X23, [X23 + 0xE28]
	0x03AB1BB8 CBZ X0, 0x3AB1BD4
	0x03AB1BBC MOV X1, X31
	0x03AB1BC0 BL 0x3C1AB20
	0x03AB1BC4 CMP W0, 0x1
	0x03AB1BC8 B.NE 0x3AB1BD4
	0x03AB1BCC ADD X8, X19, 0x44
	0x03AB1BD0 B 0x3AB1BD8
	0x03AB1BD4 ADD X8, X19, 0x40
	0x03AB1BD8 LDR X0, [X23]
	0x03AB1BDC LDR W19, [X8]
	0x03AB1BE0 LDR X23, [X20 + 0x18]
	0x03AB1BE4 LDR X20, [X21]
	0x03AB1BE8 LDR W8, [X0 + 0xE0]
	0x03AB1BEC CBNZ W8, 0x3AB1BF4
	0x03AB1BF0 BL 0x1C16DFC
	0x03AB1BF4 FMOV S2, W31
	0x03AB1BF8 FMOV S3, W31
	0x03AB1BFC MOV X0, X23
	0x03AB1C00 MOV X1, X22
	0x03AB1C04 MOV V0.16B, V8.16B
	0x03AB1C08 MOV V1.16B, V9.16B
	0x03AB1C0C MOV X2, X20
	0x03AB1C10 MOV W3, W19
	0x03AB1C14 MOV X4, X31
	0x03AB1C18 BL 0x39E23B4
	0x03AB1C1C LDP X20, X19, [X31 + 0x80]
	0x03AB1C20 LDP X22, X21, [X31 + 0x70]
	0x03AB1C24 LDP X24, X23, [X31 + 0x60]
	0x03AB1C28 LDP X26, X25, [X31 + 0x50]
	0x03AB1C2C LDR X30, [X31 + 0x40]
	0x03AB1C30 LDP D9, D8, [X31 + 0x30]
	0x03AB1C34 ADD X31, X31, 0x90
	0x03AB1C38 RET
	0x03AB1C3C BL 0x1C16F20
	0x03AB1C40 STP X29, X30, [X31 - 0x60]!
	0x03AB1C44 STP X28, X27, [X31 + 0x10]
	0x03AB1C48 STP X26, X25, [X31 + 0x20]
	0x03AB1C4C STP X24, X23, [X31 + 0x30]
	0x03AB1C50 STP X22, X21, [X31 + 0x40]
	0x03AB1C54 STP X20, X19, [X31 + 0x50]
	0x03AB1C58 SUB X31, X31, 0x6B0
	0x03AB1C5C STR W6, [X31 + 0x1C]
	0x03AB1C60 STP X5, X4, [X31 + 0x8]
	0x03AB1C64 ADRP X20, 0x931000
	0x03AB1C68 ADRP X29, 0x69F000
	0x03AB1C6C ADRP X27, 0x6A7000
	0x03AB1C70 ADRP X28, 0x6A2000
	0x03AB1C74 LDRB W8, [X20 + 0x462]
	0x03AB1C78 LDR X29, [X29 + 0x598]
	0x03AB1C7C LDR X27, [X27 + 0x58]
	0x03AB1C80 LDR X28, [X28 + 0xFF0]
	0x03AB1C84 MOV X25, X7
	0x03AB1C88 MOV X23, X3
	0x03AB1C8C MOV X24, X2
	0x03AB1C90 MOV W26, W1
	0x03AB1C94 MOV X19, X0
	0x03AB1C98 TBNZ X8, 0x0, 0x3AB1D1C
	0x03AB1C9C ADRP X0, 0x6A6000
	0x03AB1CA0 LDR X0, [X0 + 0x148]
	0x03AB1CA4 BL 0x1C16CF4
	0x03AB1CA8 ADRP X0, 0x6A6000
	0x03AB1CAC LDR X0, [X0 + 0x190]
	0x03AB1CB0 BL 0x1C16CF4
	0x03AB1CB4 ADRP X0, 0x6A3000
	0x03AB1CB8 LDR X0, [X0 + 0x78]
	0x03AB1CBC BL 0x1C16CF4
	0x03AB1CC0 ADRP X0, 0x6A7000
	0x03AB1CC4 LDR X0, [X0 + 0x60]
	0x03AB1CC8 BL 0x1C16CF4
	0x03AB1CCC ADRP X0, 0x69F000
	0x03AB1CD0 LDR X0, [X0 + 0x598]
	0x03AB1CD4 BL 0x1C16CF4
	0x03AB1CD8 ADRP X0, 0x6A7000
	0x03AB1CDC LDR X0, [X0 + 0x68]
	0x03AB1CE0 BL 0x1C16CF4
	0x03AB1CE4 ADRP X0, 0x6A2000
	0x03AB1CE8 LDR X0, [X0 + 0xFF0]
	0x03AB1CEC BL 0x1C16CF4
	0x03AB1CF0 ADRP X0, 0x6A6000
	0x03AB1CF4 LDR X0, [X0 + 0x1A0]
	0x03AB1CF8 BL 0x1C16CF4
	0x03AB1CFC ADRP X0, 0x6A7000
	0x03AB1D00 LDR X0, [X0 + 0x70]
	0x03AB1D04 BL 0x1C16CF4
	0x03AB1D08 ADRP X0, 0x6A7000
	0x03AB1D0C LDR X0, [X0 + 0x58]
	0x03AB1D10 BL 0x1C16CF4
	0x03AB1D14 MOVZ W8, 0x1
	0x03AB1D18 STRB W8, [X20 + 0x462]
	0x03AB1D1C ADRP X22, 0x6A7000
	0x03AB1D20 LDR X22, [X22 + 0x70]
	0x03AB1D24 LDR X0, [X29]
	0x03AB1D28 ADRP X21, 0x6A7000
	0x03AB1D2C ADRP X20, 0x6A3000
	0x03AB1D30 LDR X21, [X21 + 0x60]
	0x03AB1D34 LDR X20, [X20 + 0x78]
	0x03AB1D38 BL 0x1C16F10
	0x03AB1D3C LDR X1, [X27]
	0x03AB1D40 MOV X2, X31
	0x03AB1D44 MOV X27, X0
	0x03AB1D48 BL 0x39B19AC
	0x03AB1D4C STR X27, [X19 + 0xE0]
	0x03AB1D50 LDR X0, [X28]
	0x03AB1D54 LDR W8, [X0 + 0xE0]
	0x03AB1D58 CBNZ W8, 0x3AB1D60
	0x03AB1D5C BL 0x1C16DFC
	0x03AB1D60 MOV X0, X19
	0x03AB1D64 MOV X1, X31
	0x03AB1D68 BL 0x3A4225C
	0x03AB1D6C LDR X0, [X29]
	0x03AB1D70 BL 0x1C16F10
	0x03AB1D74 LDR X1, [X22]
	0x03AB1D78 MOV X2, X31
	0x03AB1D7C MOV X27, X0
	0x03AB1D80 BL 0x39B19AC
	0x03AB1D84 STR X27, [X19 + 0x38]
	0x03AB1D88 STR W26, [X19 + 0x10]
	0x03AB1D8C LDR X0, [X21]
	0x03AB1D90 BL 0x1C16F10
	0x03AB1D94 MOV X1, X31
	0x03AB1D98 MOV X26, X0
	0x03AB1D9C BL 0x33BDD8C
	0x03AB1DA0 STR X26, [X19 + 0x178]
	0x03AB1DA4 STR X25, [X19 + 0xE8]
	0x03AB1DA8 LDR X2, [X20]
	0x03AB1DAC ADD X0, X31, 0x560
	0x03AB1DB0 MOV X1, X24
	0x03AB1DB4 STR W31, [X31 + 0x568]
	0x03AB1DB8 STR X31, [X31 + 0x560]
	0x03AB1DBC BL 0x2439504
	0x03AB1DC0 AND X0, X23, 0x0
	0x03AB1DC4 MOV X1, X31
	0x03AB1DC8 BL 0x3C35CB8
	0x03AB1DCC LDR X1, [X31 + 0x560]
	0x03AB1DD0 LDR W2, [X31 + 0x568]
	0x03AB1DD4 MOV W3, W0
	0x03AB1DD8 ADD X0, X31, 0x5D0
	0x03AB1DDC MOVN W4, 0x0
	0x03AB1DE0 MOV W5, W31
	0x03AB1DE4 MOV X6, X31
	0x03AB1DE8 STR X31, [X31 + 0x5D8]
	0x03AB1DEC STR X31, [X31 + 0x5D0]
	0x03AB1DF0 STR X31, [X31 + 0x5E0]
	0x03AB1DF4 BL 0x3C53F40
	0x03AB1DF8 LDR X8, [X31 + 0x5E0]
	0x03AB1DFC LDR V0, [X31 + 0x5D]
	0x03AB1E00 MOVI V1.2D, 0x0
	0x03AB1E04 ADD X0, X31, 0x640
	0x03AB1E08 STR X8, [X19 + 0x100]
	0x03AB1E0C ADD X8, X31, 0x59D
	0x03AB1E10 MOV W1, W31
	0x03AB1E14 MOV X2, X31
	0x03AB1E18 STR V0, [X19 + 0xF]
	0x03AB1E1C STUR V1, [X8 + 0xFF]
	0x03AB1E20 STR V1, [X31 + 0x69]
	0x03AB1E24 STR V1, [X31 + 0x68]
	0x03AB1E28 STR V1, [X31 + 0x67]
	0x03AB1E2C STR V1, [X31 + 0x66]
	0x03AB1E30 STR V1, [X31 + 0x65]
	0x03AB1E34 STR V1, [X31 + 0x64]
	0x03AB1E38 BL 0x3C56240
	0x03AB1E3C ADD X19, X19, 0x108
	0x03AB1E40 ADD X1, X31, 0x640
	0x03AB1E44 MOVZ W2, 0x6C
	0x03AB1E48 MOV X0, X19
	0x03AB1E4C BL 0x3EB1AC0
	0x03AB1E50 LDP X8, X1, [X31 + 0x8]
	0x03AB1E54 MOV X0, X19
	0x03AB1E58 MOV X3, X31
	0x03AB1E5C AND X2, X8, 0x0
	0x03AB1E60 BL 0x3C563BC
	0x03AB1E64 LDR W1, [X31 + 0x1C]
	0x03AB1E68 MOV X0, X19
	0x03AB1E6C MOV X2, X31
	0x03AB1E70 BL 0x3C563D0
	0x03AB1E74 MOVZ W1, 0x8
	0x03AB1E78 MOV X0, X19
	0x03AB1E7C MOV X2, X31
	0x03AB1E80 BL 0x3C563E0
	0x03AB1E84 ADRP X21, 0x6A6000
	0x03AB1E88 LDR X21, [X21 + 0x190]
	0x03AB1E8C LDR X0, [X21]
	0x03AB1E90 LDR W8, [X0 + 0xE0]
	0x03AB1E94 CBNZ W8, 0x3AB1EA0
	0x03AB1E98 BL 0x1C16DFC
	0x03AB1E9C LDR X0, [X21]
	0x03AB1EA0 LDR X8, [X0 + 0xB8]
	0x03AB1EA4 LDR X8, [X8 + 0x20]
	0x03AB1EA8 CBNZ X8, 0x3AB1F88
	0x03AB1EAC ADRP X8, 0x6A6000
	0x03AB1EB0 LDR X8, [X8 + 0x1A0]
	0x03AB1EB4 MOVZ W1, 0x5
	0x03AB1EB8 LDR X0, [X8]
	0x03AB1EBC BL 0x1C16D6C
	0x03AB1EC0 LDR X8, [X21]
	0x03AB1EC4 MOV X20, X0
	0x03AB1EC8 LDR W9, [X8 + 0xE0]
	0x03AB1ECC CBNZ W9, 0x3AB1EDC
	0x03AB1ED0 MOV X0, X8
	0x03AB1ED4 BL 0x1C16DFC
	0x03AB1ED8 LDR X8, [X21]
	0x03AB1EDC LDR X8, [X8 + 0xB8]
	0x03AB1EE0 STR X20, [X8 + 0x20]
	0x03AB1EE4 CBZ X20, 0x3AB2228
	0x03AB1EE8 LDR W9, [X20 + 0x18]
	0x03AB1EEC CBZ W9, 0x3AB2224
	0x03AB1EF0 LDR W8, [X8 + 0x4]
	0x03AB1EF4 STR W8, [X20 + 0x20]
	0x03AB1EF8 LDR X8, [X21]
	0x03AB1EFC LDR X9, [X8 + 0xB8]
	0x03AB1F00 LDR X8, [X9 + 0x20]
	0x03AB1F04 CBZ X8, 0x3AB2228
	0x03AB1F08 LDR W10, [X8 + 0x18]
	0x03AB1F0C CMP W10, 0x1
	0x03AB1F10 B.LS 0x3AB2224
	0x03AB1F14 LDR W9, [X9 + 0x8]
	0x03AB1F18 STR W9, [X8 + 0x24]
	0x03AB1F1C LDR X8, [X21]
	0x03AB1F20 LDR X9, [X8 + 0xB8]
	0x03AB1F24 LDR X8, [X9 + 0x20]
	0x03AB1F28 CBZ X8, 0x3AB2228
	0x03AB1F2C LDR W10, [X8 + 0x18]
	0x03AB1F30 CMP W10, 0x2
	0x03AB1F34 B.LS 0x3AB2224
	0x03AB1F38 LDR W9, [X9 + 0xC]
	0x03AB1F3C STR W9, [X8 + 0x28]
	0x03AB1F40 LDR X8, [X21]
	0x03AB1F44 LDR X9, [X8 + 0xB8]
	0x03AB1F48 LDR X8, [X9 + 0x20]
	0x03AB1F4C CBZ X8, 0x3AB2228
	0x03AB1F50 LDR W10, [X8 + 0x18]
	0x03AB1F54 CMP W10, 0x3
	0x03AB1F58 B.LS 0x3AB2224
	0x03AB1F5C LDR W9, [X9 + 0x10]
	0x03AB1F60 STR W9, [X8 + 0x2C]
	0x03AB1F64 LDR X8, [X21]
	0x03AB1F68 LDR X8, [X8 + 0xB8]
	0x03AB1F6C LDR X8, [X8 + 0x20]
	0x03AB1F70 CBZ X8, 0x3AB2228
	0x03AB1F74 LDR W9, [X8 + 0x18]
	0x03AB1F78 CMP W9, 0x4
	0x03AB1F7C B.LS 0x3AB2224
	0x03AB1F80 STR W31, [X8 + 0x30]
	0x03AB1F84 LDR X0, [X21]
	0x03AB1F88 LDR W8, [X0 + 0xE0]
	0x03AB1F8C CBNZ W8, 0x3AB1F98
	0x03AB1F90 BL 0x1C16DFC
	0x03AB1F94 LDR X0, [X21]
	0x03AB1F98 LDR X8, [X0 + 0xB8]
	0x03AB1F9C LDR X8, [X8 + 0x28]
	0x03AB1FA0 CBNZ X8, 0x3AB2204
	0x03AB1FA4 ADRP X8, 0x6A7000
	0x03AB1FA8 LDR X8, [X8 + 0x68]
	0x03AB1FAC MOVZ W1, 0x5
	0x03AB1FB0 LDR X0, [X8]
	0x03AB1FB4 BL 0x1C16D6C
	0x03AB1FB8 LDR X8, [X21]
	0x03AB1FBC MOV X20, X0
	0x03AB1FC0 LDR W9, [X8 + 0xE0]
	0x03AB1FC4 CBNZ W9, 0x3AB1FD4
	0x03AB1FC8 MOV X0, X8
	0x03AB1FCC BL 0x1C16DFC
	0x03AB1FD0 LDR X8, [X21]
	0x03AB1FD4 LDR X8, [X8 + 0xB8]
	0x03AB1FD8 ADD X0, X31, 0x640
	0x03AB1FDC MOVZ W2, 0x6C
	0x03AB1FE0 MOV X1, X19
	0x03AB1FE4 STR X20, [X8 + 0x28]
	0x03AB1FE8 BL 0x3EB1AC0
	0x03AB1FEC ADRP X8, 0x6A6000
	0x03AB1FF0 LDR X8, [X8 + 0x148]
	0x03AB1FF4 LDR X0, [X8]
	0x03AB1FF8 LDR W8, [X0 + 0xE0]
	0x03AB1FFC CBNZ W8, 0x3AB2004
	0x03AB2000 BL 0x1C16DFC
	0x03AB2004 ADD X0, X31, 0x4F0
	0x03AB2008 ADD X1, X31, 0x640
	0x03AB200C MOVZ W2, 0x6C
	0x03AB2010 BL 0x3EB1AC0
	0x03AB2014 ADD X8, X31, 0x560
	0x03AB2018 ADD X0, X31, 0x4F0
	0x03AB201C MOVZ W1, 0x60
	0x03AB2020 MOVZ W2, 0x20
	0x03AB2024 MOV X3, X31
	0x03AB2028 BL 0x3A9CCE4
	0x03AB202C ADD X0, X31, 0x5D0
	0x03AB2030 ADD X1, X31, 0x560
	0x03AB2034 MOVZ W2, 0x6C
	0x03AB2038 BL 0x3EB1AC0
	0x03AB203C CBZ X20, 0x3AB2228
	0x03AB2040 ADD X0, X31, 0x480
	0x03AB2044 ADD X1, X31, 0x5D0
	0x03AB2048 MOVZ W2, 0x6C
	0x03AB204C BL 0x3EB1AC0
	0x03AB2050 LDR W8, [X20 + 0x18]
	0x03AB2054 CBZ W8, 0x3AB2224
	0x03AB2058 ADD X0, X20, 0x20
	0x03AB205C ADD X1, X31, 0x480
	0x03AB2060 MOVZ W2, 0x6C
	0x03AB2064 BL 0x3EB1AC0
	0x03AB2068 LDR X8, [X21]
	0x03AB206C ADD X0, X31, 0x3A0
	0x03AB2070 MOVZ W2, 0x6C
	0x03AB2074 MOV X1, X19
	0x03AB2078 LDR X8, [X8 + 0xB8]
	0x03AB207C LDR X20, [X8 + 0x28]
	0x03AB2080 BL 0x3EB1AC0
	0x03AB2084 ADD X8, X31, 0x410
	0x03AB2088 ADD X0, X31, 0x3A0
	0x03AB208C MOVZ W1, 0x60
	0x03AB2090 MOVZ W2, 0x40
	0x03AB2094 MOV X3, X31
	0x03AB2098 BL 0x3A9CCE4
	0x03AB209C ADD X0, X31, 0x560
	0x03AB20A0 ADD X1, X31, 0x410
	0x03AB20A4 MOVZ W2, 0x6C
	0x03AB20A8 BL 0x3EB1AC0
	0x03AB20AC CBZ X20, 0x3AB2228
	0x03AB20B0 ADD X0, X31, 0x330
	0x03AB20B4 ADD X1, X31, 0x560
	0x03AB20B8 MOVZ W2, 0x6C
	0x03AB20BC BL 0x3EB1AC0
	0x03AB20C0 LDR W8, [X20 + 0x18]
	0x03AB20C4 CMP W8, 0x1
	0x03AB20C8 B.LS 0x3AB2224
	0x03AB20CC ADD X0, X20, 0x8C
	0x03AB20D0 ADD X1, X31, 0x330
	0x03AB20D4 MOVZ W2, 0x6C
	0x03AB20D8 BL 0x3EB1AC0
	0x03AB20DC LDR X8, [X21]
	0x03AB20E0 ADD X0, X31, 0x250
	0x03AB20E4 MOVZ W2, 0x6C
	0x03AB20E8 MOV X1, X19
	0x03AB20EC LDR X8, [X8 + 0xB8]
	0x03AB20F0 LDR X20, [X8 + 0x28]
	0x03AB20F4 BL 0x3EB1AC0
	0x03AB20F8 ADD X8, X31, 0x2C0
	0x03AB20FC ADD X0, X31, 0x250
	0x03AB2100 MOVZ W1, 0x60
	0x03AB2104 MOV W2, W31
	0x03AB2108 MOV X3, X31
	0x03AB210C BL 0x3A9CCE4
	0x03AB2110 ADD X0, X31, 0x410
	0x03AB2114 ADD X1, X31, 0x2C0
	0x03AB2118 MOVZ W2, 0x6C
	0x03AB211C BL 0x3EB1AC0
	0x03AB2120 CBZ X20, 0x3AB2228
	0x03AB2124 ADD X0, X31, 0x1E0
	0x03AB2128 ADD X1, X31, 0x410
	0x03AB212C MOVZ W2, 0x6C
	0x03AB2130 BL 0x3EB1AC0
	0x03AB2134 LDR W8, [X20 + 0x18]
	0x03AB2138 CMP W8, 0x2
	0x03AB213C B.LS 0x3AB2224
	0x03AB2140 ADD X0, X20, 0xF8
	0x03AB2144 ADD X1, X31, 0x1E0
	0x03AB2148 MOVZ W2, 0x6C
	0x03AB214C BL 0x3EB1AC0
	0x03AB2150 LDR X8, [X21]
	0x03AB2154 ADD X0, X31, 0x100
	0x03AB2158 MOVZ W2, 0x6C
	0x03AB215C MOV X1, X19
	0x03AB2160 LDR X8, [X8 + 0xB8]
	0x03AB2164 LDR X20, [X8 + 0x28]
	0x03AB2168 BL 0x3EB1AC0
	0x03AB216C ADD X8, X31, 0x170
	0x03AB2170 ADD X0, X31, 0x100
	0x03AB2174 MOVZ W1, 0x60
	0x03AB2178 MOV W2, W31
	0x03AB217C MOV X3, X31
	0x03AB2180 BL 0x3A9CCE4
	0x03AB2184 ADD X0, X31, 0x2C0
	0x03AB2188 ADD X1, X31, 0x170
	0x03AB218C MOVZ W2, 0x6C
	0x03AB2190 BL 0x3EB1AC0
	0x03AB2194 CBZ X20, 0x3AB2228
	0x03AB2198 ADD X0, X31, 0x90
	0x03AB219C ADD X1, X31, 0x2C0
	0x03AB21A0 MOVZ W2, 0x6C
	0x03AB21A4 BL 0x3EB1AC0
	0x03AB21A8 LDR W8, [X20 + 0x18]
	0x03AB21AC CMP W8, 0x3
	0x03AB21B0 B.LS 0x3AB2224
	0x03AB21B4 ADD X0, X20, 0x164
	0x03AB21B8 ADD X1, X31, 0x90
	0x03AB21BC MOVZ W2, 0x6C
	0x03AB21C0 BL 0x3EB1AC0
	0x03AB21C4 LDR X8, [X21]
	0x03AB21C8 LDR X8, [X8 + 0xB8]
	0x03AB21CC LDR X19, [X8 + 0x28]
	0x03AB21D0 CBZ X19, 0x3AB2228
	0x03AB21D4 LDR W20, [X19 + 0x18]
	0x03AB21D8 CBZ W20, 0x3AB2224
	0x03AB21DC ADD X1, X19, 0x20
	0x03AB21E0 ADD X0, X31, 0x20
	0x03AB21E4 MOVZ W2, 0x6C
	0x03AB21E8 BL 0x3EB1AC0
	0x03AB21EC CMP W20, 0x4
	0x03AB21F0 B.LS 0x3AB2224
	0x03AB21F4 ADD X0, X19, 0x1D0
	0x03AB21F8 ADD X1, X31, 0x20
	0x03AB21FC MOVZ W2, 0x6C
	0x03AB2200 BL 0x3EB1AC0
	0x03AB2204 ADD X31, X31, 0x6B0
	0x03AB2208 LDP X20, X19, [X31 + 0x50]
	0x03AB220C LDP X22, X21, [X31 + 0x40]
	0x03AB2210 LDP X24, X23, [X31 + 0x30]
	0x03AB2214 LDP X26, X25, [X31 + 0x20]
	0x03AB2218 LDP X28, X27, [X31 + 0x10]
	0x03AB221C LDP X29, X30, [X31], #0x60
	0x03AB2220 RET
	0x03AB2224 BL 0x1C16F28
	0x03AB2228 BL 0x1C16F20
	0x03AB222C MOV X1, X31
	0x03AB2230 B 0x33BDD8C
	0x03AB2234 STR X30, [X31 - 0x10]!
	0x03AB2238 LDR X0, [X0 + 0xE8]
	0x03AB223C CBZ X0, 0x3AB224C
	0x03AB2240 MOV X1, X31
	0x03AB2244 LDR X30, [X31], #0x10
	0x03AB2248 B 0x3A9C38C
	0x03AB224C BL 0x1C16F20
	0x03AB2250 SUB X31, X31, 0x100
	0x03AB2254 STR X30, [X31 + 0xB0]
	0x03AB2258 STP X26, X25, [X31 + 0xC0]
	0x03AB225C STP X24, X23, [X31 + 0xD0]
	0x03AB2260 STP X22, X21, [X31 + 0xE0]
	0x03AB2264 STP X20, X19, [X31 + 0xF0]
	0x03AB2268 ADRP X22, 0x930000
	0x03AB226C LDRB W8, [X22 + 0x463]
	0x03AB2270 MOV X20, X2
	0x03AB2274 MOV X21, X1
	0x03AB2278 MOV X19, X0
	0x03AB227C TBNZ X8, 0x0, 0x3AB2294
	0x03AB2280 ADRP X0, 0x641000
	0x03AB2284 LDR X0, [X0 + 0x598]
	0x03AB2288 BL 0x1C16CF4
	0x03AB228C MOVZ W8, 0x1

ISIL:
	001 Subtract X31, X31, 416
	002 Move [X31+304], D9
	003 Move [X31+312], D8
	004 Move [X31+320], X29
	005 Move [X31+328], X30
	006 Move [X31+336], X28
	007 Move [X31+344], X27
	008 Move [X31+352], X26
	009 Move [X31+360], X25
	010 Move [X31+368], X24
	011 Move [X31+376], X23
	012 Move [X31+384], X22
	013 Move [X31+392], X21
	014 Move [X31+400], X20
	015 Move [X31+408], X19
	016 Move X21, 0x932000
	017 Move W8, [X21+1117]
	018 Move X19, X2
	019 Move X20, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {71}
	024 Move X0, 0x6A8000
	025 Move X0, [X0+32]
	026 Call 0x1C17CF4
	027 Move X0, 0x6A2000
	028 Move X0, [X0+3624]
	029 Call 0x1C17CF4
	030 Move X0, 0x66B000
	031 Move X0, [X0+2296]
	032 Call 0x1C17CF4
	033 Move X0, 0x643000
	034 Move X0, [X0+2600]
	035 Call 0x1C17CF4
	036 Move X0, 0x643000
	037 Move X0, [X0+2512]
	038 Call 0x1C17CF4
	039 Move X0, 0x643000
	040 Move X0, [X0+1432]
	041 Call 0x1C17CF4
	042 Move X0, 0x6A4000
	043 Move X0, [X0+168]
	044 Call 0x1C17CF4
	045 Move X0, 0x6A3000
	046 Move X0, [X0+152]
	047 Call 0x1C17CF4
	048 Move X0, 0x6A4000
	049 Move X0, [X0+16]
	050 Call 0x1C17CF4
	051 Move X0, 0x6A3000
	052 Move X0, [X0+4080]
	053 Call 0x1C17CF4
	054 Move X0, 0x66C000
	055 Move X0, [X0+2216]
	056 Call 0x1C17CF4
	057 Move X0, 0x66D000
	058 Move X0, [X0+4032]
	059 Call 0x1C17CF4
	060 Move X0, 0x6A6000
	061 Move X0, [X0+1128]
	062 Call 0x1C17CF4
	063 Move X0, 0x6A7000
	064 Move X0, [X0+1904]
	065 Call 0x1C17CF4
	066 Move X0, 0x6A5000
	067 Move X0, [X0+3984]
	068 Call 0x1C17CF4
	069 Move W8, 1
	070 Move [X21+1117], W8
	071 Add X24, X19, 24
	072 NotImplemented "Instruction MOVI not yet implemented."
	073 Move X0, X24
	074 Move X1, X31
	075 Move [X31+296], W31
	076 Move [X31+280], X31
	077 Move [X31+288], X31
	078 Move [X31+272], X31
	079 Move [X31+224], X31
	080 Move [X31+176], X31
	081 Move [X31+240], V0
	082 Move [X31+248], V0
	083 Move [X31+192], V0
	084 Move [X31+200], V0
	085 Move [X31+144], V0
	086 Move [X31+152], V0
	087 Call CameraData.get_isHDROutputActive, X0
	088 Compare X20, 0
	089 JumpIfEqual {504}
	090 Add X22, X20, 232
	091 Move W26, W0
	092 And W3, W0, 1
	093 Move X0, X20
	094 Move X1, X19
	095 Move X2, X22
	096 Call FinalBlitPass.InitPassData, X0, X1, X2, X3
	097 Move X8, [X20+232]
	098 Compare X8, 0
	099 JumpIfEqual {504}
	100 Move X9, 0x643000
	101 Move X9, [X9+1432]
	102 Move X21, [X8+56]
	103 Move X0, [X9]
	104 Move W9, [X0+224]
	105 Compare W9, 0
	106 JumpIfNotEqual {108}
	107 Call 0x1C17DFC
	108 Move X0, X21
	109 Move X1, X31
	110 Move X2, X31
	111 Call Object.op_Equality, X0, X1
	112 Move TEMP, X0
	113 And TEMP, TEMP, 1
	114 Compare TEMP, 1
	115 JumpIfNotEqual {181}
	116 Move X8, 0x643000
	117 Move X8, [X8+2512]
	118 Move W1, 2
	119 Move X0, [X8]
	120 Call 0x1C17D6C
	121 Move X8, [X22]
	122 Compare X8, 0
	123 JumpIfEqual {504}
	124 NotImplemented "Instruction LDUR not yet implemented."
	125 Move X8, 0x6A8000
	126 Move X8, [X8+32]
	127 Move X19, X0
	128 Add X1, X31, 16
	129 Move [X31+1], V0
	130 Move X0, [X8]
	131 Call 0x1C17E04
	132 Compare X19, 0
	133 JumpIfEqual {504}
	134 Move X21, X0
	135 Compare X0, 0
	136 JumpIfEqual {143}
	137 Move X8, [X19]
	138 Move X0, X21
	139 Move X1, [X8+64]
	140 Call 0x1C17E00
	141 Compare X0, 0
	142 JumpIfEqual {506}
	143 Move W8, [X19+24]
	144 Compare W8, 0
	145 JumpIfEqual {505}
	146 Move X0, X20
	147 Move X1, X31
	148 Move [X19+32], X21
	149 Call "il2cpp_vm_object_is_inst", X0
	150 Compare X0, 0
	151 JumpIfEqual {504}
	152 Move X8, [X0]
	153 Move X9, [X8+424]
	154 Move X1, [X8+432]
	155 NotImplemented "Instruction BLR not yet implemented."
	156 Move X20, X0
	157 Compare X0, 0
	158 JumpIfEqual {165}
	159 Move X8, [X19]
	160 Move X0, X20
	161 Move X1, [X8+64]
	162 Call 0x1C17E00
	163 Compare X0, 0
	164 JumpIfEqual {506}
	165 Move W8, [X19+24]
	166 NotImplemented "Instruction CMP not yet implemented."
	167 Move [X19+40], X20
	168 Move X8, 0x643000
	169 Move X8, [X8+2600]
	170 Move X0, [X8]
	171 Move W8, [X0+224]
	172 Compare W8, 0
	173 JumpIfNotEqual {175}
	174 Call 0x1C17DFC
	175 Move X8, 0x6A7000
	176 Move X8, [X8+1904]
	177 Move X1, X19
	178 Move X2, X31
	179 Move X0, [X8]
	180 Call Debug.LogErrorFormat, X0, X1
	181 Move X8, 0x6A4000
	182 Move X8, [X8+16]
	183 Move X0, [X8]
	184 Move W8, [X0+224]
	185 Compare W8, 0
	186 JumpIfNotEqual {188}
	187 Call 0x1C17DFC
	188 Add X8, X31, 104
	189 Move X0, X19
	190 Move X1, X31
	191 Call RenderingUtils.GetCameraTargetIdentifier, X0
	192 Move X9, 0x6A3000
	193 NotImplemented "Instruction LDUR not yet implemented."
	194 NotImplemented "Instruction LDUR not yet implemented."
	195 Move X8, [X31+136]
	196 Move X9, [X9+4080]
	197 Move [X31+16], V0
	198 Move [X31+24], V1
	199 Move [X31+48], X8
	200 Move X0, [X9]
	201 Move W8, [X0+224]
	202 Compare W8, 0
	203 JumpIfNotEqual {205}
	204 Call 0x1C17DFC
	205 Move X0, X19
	206 Move X1, X31
	207 Call ScriptableRenderPass.GetActiveDebugHandler, X0
	208 Move X21, X0
	209 Compare X0, 0
	210 JumpIfEqual {223}
	211 Move V0, [X31+16]
	212 Move V1, [X31+32]
	213 Move X8, [X31+48]
	214 Move X0, X21
	215 Move X1, X24
	216 Move X2, X31
	217 Add X23, X31, 192
	218 Move [X31+192], V0
	219 Move [X31+200], V1
	220 Move [X31+224], X8
	221 Call DebugHandler.WriteToDebugScreenTexture, X0, X1
	222 And W9, W0, 1
	223 Move V0, [X31+16]
	224 Move V1, [X31+32]
	225 Move X8, [X31+48]
	226 Move W9, W31
	227 Add X23, X31, 240
	228 Move [X31+240], V0
	229 Move [X31+248], V1
	230 Move [X31+272], X8
	231 Move X8, [X23+32]
	232 Move V1, [X23]
	233 Move V0, [X23+16]
	234 Add X0, X31, 64
	235 Move X1, X31
	236 Move [X31+12], W9
	237 Move [X31+176], X8
	238 Move [X31+144], V1
	239 Move [X31+152], V0
	240 Move [X31+64], V1
	241 Move [X31+72], V0
	242 Move [X31+96], X8
	243 Call RTHandleStaticHelpers.SetRTHandleStaticWrapper, X0
	244 Move X0, [X19+464]
	245 Compare X0, 0
	246 JumpIfEqual {504}
	247 Move X8, 0x6A3000
	248 Move X8, [X8+152]
	249 Move X9, [X0]
	250 Move X23, [X19]
	251 Move X27, [X20+224]
	252 Move X8, [X8]
	253 Move X1, X23
	254 Move X8, [X8+184]
	255 Move X25, [X8]
	256 Move X8, [X9+408]
	257 Move X2, [X9+416]
	258 NotImplemented "Instruction BLR not yet implemented."
	259 NotImplemented "Instruction CMP not yet implemented."
	260 Move X0, [X19+464]
	261 Compare X0, 0
	262 JumpIfEqual {504}
	263 Move X1, X31
	264 Call ScriptableRenderer.get_cameraColorTargetHandle, X0
	265 Move [X20+224], X0
	266 Move X8, 0x6A4000
	267 Move X8, [X8+168]
	268 Move W0, 30
	269 Move X1, [X8]
	270 Call 0x2236BC0, X0
	271 Move X2, X0
	272 Add X0, X31, 296
	273 Move X1, X23
	274 Move X3, X31
	275 Call ProfilingScope..ctor, X0, X1, X2
	276 Move X8, [X22]
	277 Compare X8, 0
	278 JumpIfEqual {509}
	279 Move X0, [X8+56]
	280 Compare X0, 0
	281 JumpIfEqual {510}
	282 Move X1, X31
	283 Move X2, X31
	284 Call Material.set_enabledKeywords, X0, X1
	285 Move X8, [X22]
	286 Compare X8, 0
	287 JumpIfEqual {511}
	288 Move X9, 0x66B000
	289 Move X9, [X9+2296]
	290 Move W27, [X8+52]
	291 Move X0, [X9]
	292 Move W9, [X0+224]
	293 Compare W9, 0
	294 JumpIfNotEqual {296}
	295 Call 0x1C17DFC
	296 Move X8, 0x6A5000
	297 Move X8, [X8+3984]
	298 NotImplemented "Instruction CMP not yet implemented."
	299 NotImplemented "Instruction CSET not yet implemented."
	300 Move X1, [X8]
	301 Move X0, X23
	302 Move X3, X31
	303 Call CoreUtils.SetKeyword, X0, X1, X2
	304 Move TEMP, X26
	305 And TEMP, TEMP, 1
	306 Compare TEMP, 1
	307 JumpIfNotEqual {377}
	308 Move X8, 0x66D000
	309 Move X8, [X8+4032]
	310 Move X0, [X8]
	311 Move W8, [X0+224]
	312 Compare W8, 0
	313 JumpIfNotEqual {315}
	314 Call 0x1C17DFC
	315 Move X0, X31
	316 Call VolumeManager.get_instance
	317 Compare X0, 0
	318 JumpIfEqual {517}
	319 Move X0, [X0+16]
	320 Compare X0, 0
	321 JumpIfEqual {518}
	322 Move X8, 0x6A6000
	323 Move X8, [X8+1128]
	324 Move X1, [X8]
	325 Call 0x22ADD04, X0
	326 Move X26, X0
	327 Move X0, X24
	328 Move X1, X31
	329 Call CameraData.get_hdrDisplayInformation, X0
	330 Move X27, X0
	331 Move X28, X1
	332 Move X0, X24
	333 Move X1, X31
	334 Call CameraData.get_hdrDisplayColorGamut, X0
	335 Move X8, 0x66C000
	336 Move X8, [X8+2216]
	337 Move W29, W0
	338 Move X0, [X8]
	339 Move W8, [X0+224]
	340 Compare W8, 0
	341 JumpIfNotEqual {343}
	342 Call 0x1C17DFC
	343 Add X4, X31, 280
	344 Move X0, X27
	345 Move X1, X28
	346 Move W2, W29
	347 Move X3, X26
	348 Move X5, X31
	349 Call UniversalRenderPipeline.GetHDROutputLuminanceParameters, X0, X1, X2, X3
	350 Compare X21, 0
	351 JumpIfEqual {361}
	352 Move X0, X21
	353 Move X1, X24
	354 Move X2, X31
	355 Call DebugHandler.HDRDebugViewIsActive, X0, X1
	356 Move TEMP, X0
	357 And TEMP, TEMP, 1
	358 Compare TEMP, 1
	359 JumpIfNotEqual {361}
	360 Move W26, W31
	361 Move W26, 2
	362 Move W27, [X19+416]
	363 Move X0, X24
	364 Move X1, X31
	365 Call CameraData.get_hdrDisplayColorGamut, X0
	366 Move X8, [X22]
	367 Compare X8, 0
	368 JumpIfEqual {519}
	369 Move X1, [X8+56]
	370 Move V0, [X31+280]
	371 Move V1, [X31+284]
	372 Move V2, [X31+288]
	373 Move V3, [X31+292]
	374 Xor W8, W27, 1
	375 Or W2, W26, W8
	376 Call FinalBlitPass.SetupHDROutput, X0, X1, X2, X3
	377 Move W8, [X31+12]
	378 Compare W8, 0
	379 JumpIfEqual {393}
	380 Move X8, [X20+224]
	381 Compare X8, 0
	382 JumpIfEqual {512}
	383 Move X0, [X8+24]
	384 Compare X0, 0
	385 JumpIfEqual {408}
	386 Move X1, X31
	387 Call Texture.get_filterMode, X0
	388 Move X8, [X22]
	389 NotImplemented "Instruction CMP not yet implemented."
	390 Compare X8, 0
	391 JumpIfEqual {524}
	392 Add X8, X8, 68
	393 Move X8, [X22]
	394 Compare X8, 0
	395 JumpIfEqual {522}
	396 Move X3, [X20+224]
	397 Add X1, X8, 56
	398 Move X0, X19
	399 Move X2, X25
	400 Call FinalBlitPass.ExecutePass, X0, X1, X2, X3
	401 Move X0, [X19+464]
	402 Compare X0, 0
	403 JumpIfEqual {523}
	404 Move X1, X25
	405 Move X2, X25
	406 Move X3, X31
	407 Call ScriptableRenderer.ConfigureCameraTarget, X0, X1, X2
	408 Move X8, [X22]
	409 Compare X8, 0
	410 JumpIfEqual {520}
	411 Add X8, X8, 64
	412 Move X9, [X20+224]
	413 Compare X9, 0
	414 JumpIfEqual {513}
	415 Move W10, [X9+168]
	416 Move W22, [X8]
	417 Compare W10, 0
	418 JumpIfEqual {431}
	419 Add X8, X31, 16
	420 Move X0, X9
	421 Move X1, X31
	422 Call RTHandle.get_rtHandleProperties, X0
	423 Move X0, [X20+224]
	424 Compare X0, 0
	425 JumpIfEqual {521}
	426 Move V8, [X31+48]
	427 Add X8, X31, 16
	428 Move X1, X31
	429 Call RTHandle.get_rtHandleProperties, X0
	430 Move V9, [X31+52]
	431 Move X24, 0x930000
	432 Move W8, [X24+2632]
	433 Compare W8, 0
	434 JumpIfNotEqual {440}
	435 Move X0, 0x64A000
	436 Move X0, [X0+3848]
	437 Call 0x1C17CF4
	438 Move W8, 1
	439 Move [X24+2632], W8
	440 Move X8, 0x64A000
	441 Move X8, [X8+3848]
	442 Move X8, [X8]
	443 Move X8, [X8+184]
	444 Move S8, [X8+8]
	445 Move S9, [X8+12]
	446 Move X8, [X20+232]
	447 Compare X8, 0
	448 JumpIfEqual {514}
	449 Move X9, 0x6A1000
	450 Move X9, [X9+3624]
	451 Move X24, [X20+224]
	452 Move X20, [X8+56]
	453 Move X0, [X9]
	454 Move W9, [X0+224]
	455 Compare W9, 0
	456 JumpIfNotEqual {458}
	457 Call 0x1C17DFC
	458 Move S2, W31
	459 Move S3, W31
	460 Move X0, X23
	461 Move X1, X24
	462 Move V0, V8
	463 Move V1, V9
	464 Move X2, X20
	465 Move W3, W22
	466 Move X4, X31
	467 Call Blitter.BlitTexture, X0, X1, X2, X3, X4
	468 Compare X21, 0
	469 JumpIfEqual {515}
	470 Move X19, [X19+464]
	471 Move X0, X21
	472 Move X1, X31
	473 Call DebugHandler.get_DebugScreenColorHandle, X0
	474 Move X20, [X0]
	475 Move X0, X21
	476 Move X1, X31
	477 Call DebugHandler.get_DebugScreenDepthHandle, X0
	478 Compare X19, 0
	479 JumpIfEqual {516}
	480 Move X2, [X0]
	481 Move X0, X19
	482 Move X1, X20
	483 Move X3, X31
	484 Call ScriptableRenderer.ConfigureCameraTarget, X0, X1, X2
	485 Add X0, X31, 296
	486 Move X1, X31
	487 Call ProfilingScope.Dispose, X0
	488 Move X20, [X31+400]
	489 Move X19, [X31+408]
	490 Move X22, [X31+384]
	491 Move X21, [X31+392]
	492 Move X24, [X31+368]
	493 Move X23, [X31+376]
	494 Move X26, [X31+352]
	495 Move X25, [X31+360]
	496 Move X28, [X31+336]
	497 Move X27, [X31+344]
	498 Move X29, [X31+320]
	499 Move X30, [X31+328]
	500 Move D9, [X31+304]
	501 Move D8, [X31+312]
	502 Add X31, X31, 416
	503 Return 
	504 Call 0x1C17F20
	505 Call 0x1C17F28
	506 Call 0x1C17F44
	507 Move X1, X31
	508 Call 0x1C17DEC
	509 Call 0x1C17F20
	510 Call 0x1C17F20
	511 Call 0x1C17F20
	512 Call 0x1C17F20
	513 Call 0x1C17F20
	514 Call 0x1C17F20
	515 Call 0x1C17F20
	516 Call 0x1C17F20
	517 Call 0x1C17F20
	518 Call 0x1C17F20
	519 Call 0x1C17F20
	520 Call 0x1C17F20
	521 Call 0x1C17F20
	522 Call 0x1C17F20
	523 Call 0x1C17F20
	524 Call 0x1C17F20
	525 Move X19, X0
	526 NotImplemented "Instruction CMP not yet implemented."
	527 Move X0, X19
	528 Call 0x3EB2AD0
	529 Move X20, [X0]
	530 Call 0x3EB2AE0
	531 Add X0, X31, 296
	532 Move X1, X31
	533 Call ProfilingScope.Dispose, X0
	534 Compare X20, 0
	535 JumpIfEqual {488}
	536 Move X0, X20
	537 Call 0x1C17F18
	538 Move X20, X31
	539 Move X19, X0
	540 Add X0, X31, 296
	541 Move X1, X31
	542 Call ProfilingScope.Dispose, X0
	543 Compare X20, 0
	544 JumpIfNotEqual {547}
	545 Move X0, X19
	546 Call 0x1D2D690
	547 Move X0, X20
	548 Call 0x1C17F18
	549 Call 0x1991590

Method: System.Void ExecutePass(ref UnityEngine.Rendering.Universal.RenderingData renderingData, in UnityEngine.Rendering.Universal.Internal.FinalBlitPass/BlitMaterialData blitMaterialData, UnityEngine.Rendering.RTHandle cameraTarget, UnityEngine.Rendering.RTHandle source)

Disassembly:
	0x03AB233C B 0x3AB2344
	0x03AB2340 MOVZ W25, 0x1
	0x03AB2344 CBZ X24, 0x3AB2530
	0x03AB2348 LDR X0, [X19 + 0xE8]
	0x03AB234C LDR W9, [X24 + 0x18]
	0x03AB2350 CMP X0, 0x0
	0x03AB2354 CSET W8, EQ
	0x03AB2358 CMP W9, 0x1
	0x03AB235C B.LT 0x3AB24C0
	0x03AB2360 MOV X22, X31
	0x03AB2364 TBNZ X8, 0x0, 0x3AB2530
	0x03AB2368 MOV X1, X31
	0x03AB236C BL 0x3A9AD2C
	0x03AB2370 CMP X22, W0, UXTW
	0x03AB2374 B.EQ 0x3AB24A4
	0x03AB2378 LDR X0, [X19 + 0xE8]
	0x03AB237C CBZ X0, 0x3AB2530
	0x03AB2380 MOV X1, X31
	0x03AB2384 BL 0x3A9AD24
	0x03AB2388 LDR X8, [X19 + 0xE8]
	0x03AB238C CMP X22, W0, UXTW
	0x03AB2390 B.NE 0x3AB23A4
	0x03AB2394 CBZ X8, 0x3AB2530
	0x03AB2398 LDRB W9, [X8 + 0x17]
	0x03AB239C CBNZ W9, 0x3AB24A4
	0x03AB23A0 B 0x3AB23A8
	0x03AB23A4 CBZ X8, 0x3AB2530
	0x03AB23A8 MOV X0, X8
	0x03AB23AC MOV X1, X31
	0x03AB23B0 BL 0x3A9AD34
	0x03AB23B4 CMP X22, W0, UXTW
	0x03AB23B8 CSET W8, EQ
	0x03AB23BC BIC W8, W8, W25, 0x0
	0x03AB23C0 TBNZ X8, 0x0, 0x3AB24A4
	0x03AB23C4 LDR X0, [X19 + 0xE8]
	0x03AB23C8 CBZ X0, 0x3AB2530
	0x03AB23CC LDRB W8, [X0 + 0x15]
	0x03AB23D0 CBZ W8, 0x3AB240C
	0x03AB23D4 MOV X1, X31
	0x03AB23D8 BL 0x3A9AD48
	0x03AB23DC CMP X22, W0, UXTW
	0x03AB23E0 B.EQ 0x3AB240C
	0x03AB23E4 LDR X0, [X19 + 0xE8]
	0x03AB23E8 CBZ X0, 0x3AB2530
	0x03AB23EC MOV X1, X31
	0x03AB23F0 BL 0x3A9AD34
	0x03AB23F4 CMP X22, W0, UXTW
	0x03AB23F8 B.EQ 0x3AB240C
	0x03AB23FC LDR X8, [X19 + 0xE8]
	0x03AB2400 CBZ X8, 0x3AB2530
	0x03AB2404 LDRB W8, [X8 + 0x16]
	0x03AB2408 CBZ W8, 0x3AB24A4
	0x03AB240C LDP V2, V0, [X20 + 0x10]
	0x03AB2410 LDR W8, [X20 + 0x30]
	0x03AB2414 LDR V1, [X20]
	0x03AB2418 LDR X0, [X19 + 0xE8]
	0x03AB241C STP V2, V0, [X31 + 0x80]
	0x03AB2420 STR W8, [X31 + 0xA0]
	0x03AB2424 STR V1, [X31 + 0x7]
	0x03AB2428 CBZ X0, 0x3AB2530
	0x03AB242C LDP V0, V1, [X31 + 0x70]
	0x03AB2430 LDR V2, [X31 + 0x9]
	0x03AB2434 LDR W8, [X31 + 0xA0]
	0x03AB2438 ADD X1, X31, 0x30
	0x03AB243C MOV W2, W22
	0x03AB2440 MOV X3, X31
	0x03AB2444 STP V0, V1, [X31 + 0x30]
	0x03AB2448 STR V2, [X31 + 0x5]
	0x03AB244C STR W8, [X31 + 0x60]
	0x03AB2450 BL 0x3A9C42C
	0x03AB2454 LDR X8, [X19 + 0xE8]
	0x03AB2458 CBZ X8, 0x3AB2530
	0x03AB245C LDR X8, [X8 + 0x30]
	0x03AB2460 CBZ X8, 0x3AB2530
	0x03AB2464 LDR W9, [X8 + 0x18]

ISIL:
	001 Move [X31-80], X29
	002 Move [X31-72], X30
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Subtract X31, X31, 544
	012 Move X23, 0x931000
	013 Move W8, [X23+1118]
	014 Move X20, X3
	015 Move X19, X2
	016 Move X21, X1
	017 Move X22, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {27}
	022 Move X0, 0x6A3000
	023 Move X0, [X0+16]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X23+1118], W8
	027 Add X1, X22, 24
	028 Add X0, X31, 16
	029 Move W2, 528
	030 Call 0x3EB2AC0
	031 Move X22, [X22]
	032 Add X0, X31, 16
	033 Move X1, X31
	034 Call CameraData.get_isSceneViewCamera, X0
	035 Move X8, [X31+392]
	036 Compare X8, 0
	037 JumpIfEqual {92}
	038 Move W26, [X31+380]
	039 Move W23, W0
	040 Move X0, X8
	041 Move X1, X31
	042 Call XRPass.get_enabled, X0
	043 Compare X20, 0
	044 JumpIfEqual {92}
	045 Move X25, 0x6A3000
	046 Move W24, W0
	047 Move X0, [X20+24]
	048 Move X25, [X25+16]
	049 Compare X0, 0
	050 JumpIfEqual {55}
	051 Move X1, X31
	052 Call Texture.get_filterMode, X0
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Add X8, X21, 12
	055 Add X8, X21, 8
	056 Move X0, [X25]
	057 Move W25, [X8]
	058 Move X21, [X21]
	059 Move W8, [X0+224]
	060 Compare W8, 0
	061 JumpIfNotEqual {63}
	062 Call 0x1C17DFC
	063 Move W8, W26
	064 ShiftRight W8, 31
	065 And W8, W8, 0
	066 And W31, W23, 1
	067 Move W9, 2
	068 NotImplemented "Instruction CSEL not yet implemented."
	069 And W31, W24, 1
	070 NotImplemented "Instruction CSEL not yet implemented."
	071 Add X1, X31, 16
	072 Move X0, X22
	073 Move X2, X20
	074 Move X3, X19
	075 Move W5, W31
	076 Move X6, X21
	077 Move W7, W25
	078 Move [X31], X31
	079 Call RenderingUtils.FinalBlit, X0, X1, X2, X3, X4, X5, X6, X7
	080 Add X31, X31, 544
	081 Move X20, [X31+64]
	082 Move X19, [X31+72]
	083 Move X22, [X31+48]
	084 Move X21, [X31+56]
	085 Move X24, [X31+32]
	086 Move X23, [X31+40]
	087 Move X26, [X31+16]
	088 Move X25, [X31+24]
	089 Move X29, [X31+80]
	090 Move X30, [X31+88]
	091 Return 
	092 Call 0x1C17F20

Method: System.Void InitPassData(ref UnityEngine.Rendering.Universal.RenderingData renderingData, ref UnityEngine.Rendering.Universal.Internal.FinalBlitPass/PassData passData, UnityEngine.Rendering.Universal.Internal.FinalBlitPass/BlitType blitType)

Disassembly:
	0x03AB2290 STRB W8, [X22 + 0x463]
	0x03AB2294 LDR X0, [X19 + 0xE8]
	0x03AB2298 CBZ X0, 0x3AB2530
	0x03AB229C CBZ X21, 0x3AB24C4
	0x03AB22A0 LDRB W8, [X0 + 0x15]
	0x03AB22A4 LDR X24, [X0 + 0x30]
	0x03AB22A8 CBZ W8, 0x3AB2340
	0x03AB22AC LDR X8, [X0 + 0x60]
	0x03AB22B0 CBZ X8, 0x3AB2340
	0x03AB22B4 ADRP X9, 0x641000
	0x03AB22B8 LDR X9, [X9 + 0x598]
	0x03AB22BC LDR X22, [X8 + 0x18]
	0x03AB22C0 LDR X0, [X9]
	0x03AB22C4 LDR W9, [X0 + 0xE0]
	0x03AB22C8 CBNZ W9, 0x3AB22D0
	0x03AB22CC BL 0x1C16DFC
	0x03AB22D0 MOV X0, X22
	0x03AB22D4 MOV X1, X31
	0x03AB22D8 MOV X2, X31
	0x03AB22DC BL 0x3C354F8
	0x03AB22E0 TBZ X0, 0x0, 0x3AB2340
	0x03AB22E4 LDR X0, [X19 + 0xE8]
	0x03AB22E8 CBZ X0, 0x3AB2530
	0x03AB22EC LDR X26, [X0 + 0x30]
	0x03AB22F0 MOV X1, X31
	0x03AB22F4 BL 0x3A9AD34
	0x03AB22F8 LDR X8, [X19 + 0xE8]
	0x03AB22FC CBZ X8, 0x3AB2530
	0x03AB2300 CBZ X26, 0x3AB2530
	0x03AB2304 LDR X23, [X8 + 0x60]
	0x03AB2308 MOV W22, W0
	0x03AB230C CBZ X23, 0x3AB2324
	0x03AB2310 LDR X8, [X26]
	0x03AB2314 MOV X0, X23
	0x03AB2318 LDR X1, [X8 + 0x40]
	0x03AB231C BL 0x1C16E00
	0x03AB2320 CBZ X0, 0x3AB2538
	0x03AB2324 LDR W8, [X26 + 0x18]
	0x03AB2328 CMP W22, W8
	0x03AB232C B.CS 0x3AB2534
	0x03AB2330 MOV W25, W31
	0x03AB2334 ADD X8, X26, W22, 0x3, SXTW
	0x03AB2338 STR X23, [X8 + 0x20]

ISIL:
	001 Move [X31-64], X29
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Subtract X31, X31, 704
	009 Move X23, [X2]
	010 Move X20, X2
	011 Move X21, X0
	012 Add X0, X31, 8
	013 Move W2, 696
	014 Move W19, W3
	015 Move X22, X1
	016 Call 0x3EB2AC0
	017 Compare X23, 0
	018 JumpIfEqual {51}
	019 Add X0, X23, 72
	020 Add X1, X31, 8
	021 Move W2, 696
	022 Call 0x3EB2AC0
	023 Move X23, [X20]
	024 Add X0, X22, 24
	025 Move X1, X31
	026 Call CameraData.get_requireSrgbConversion, X0
	027 Compare X23, 0
	028 JumpIfEqual {51}
	029 And W8, W0, 1
	030 Move [X23+52], W8
	031 Move X8, [X21+240]
	032 Compare X8, 0
	033 JumpIfEqual {51}
	034 Move W9, [X8+24]
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Move X9, [X20]
	037 Compare X9, 0
	038 JumpIfEqual {51}
	039 Add X8, X8, W19
	040 Move V0, [X8+2]
	041 Move [X9+56], V0
	042 Add X31, X31, 704
	043 Move X20, [X31+48]
	044 Move X19, [X31+56]
	045 Move X22, [X31+32]
	046 Move X21, [X31+40]
	047 Move X30, [X31+16]
	048 Move X23, [X31+24]
	049 Move X29, [X31+64]
	050 Return 
	051 Call 0x1C17F20
	052 Call 0x1C17F28

Method: System.Void Render(UnityEngine.Experimental.Rendering.RenderGraphModule.RenderGraph renderGraph, ref UnityEngine.Rendering.Universal.RenderingData renderingData, UnityEngine.Experimental.Rendering.RenderGraphModule.TextureHandle src, UnityEngine.Experimental.Rendering.RenderGraphModule.TextureHandle dest, UnityEngine.Experimental.Rendering.RenderGraphModule.TextureHandle overlayUITexture)

Disassembly:
	0x03AB2468 CMP X22, X9
	0x03AB246C B.CS 0x3AB2534
	0x03AB2470 ADD X8, X8, X22, 0x3, LSL
	0x03AB2474 LDR X8, [X8 + 0x20]
	0x03AB2478 CBZ X8, 0x3AB2530
	0x03AB247C LDR X9, [X8 + 0x48]
	0x03AB2480 LDUR V0, [X8 + 0x38]
	0x03AB2484 LDUR V1, [X8 + 0x28]
	0x03AB2488 LDR X1, [X8 + 0x58]
	0x03AB248C ADD X2, X31, 0x0
	0x03AB2490 MOV X0, X21
	0x03AB2494 MOV X3, X31
	0x03AB2498 STR X9, [X31 + 0x20]
	0x03AB249C STP V1, V0, [X31]
	0x03AB24A0 BL 0x3C4FC28
	0x03AB24A4 LDR X0, [X19 + 0xE8]
	0x03AB24A8 LDRSW X9, [X24 + 0x18]
	0x03AB24AC ADD X22, X22, 0x1
	0x03AB24B0 CMP X0, 0x0
	0x03AB24B4 CSET W8, EQ
	0x03AB24B8 CMP X22, X9
	0x03AB24BC B.LT 0x3AB2364
	0x03AB24C0 CBNZ W8, 0x3AB2530
	0x03AB24C4 LDRB W8, [X0 + 0x15]
	0x03AB24C8 CBZ W8, 0x3AB24DC
	0x03AB24CC MOV X1, X31
	0x03AB24D0 BL 0x3A9C610
	0x03AB24D4 LDR X0, [X19 + 0xE8]
	0x03AB24D8 CBZ X0, 0x3AB2530
	0x03AB24DC LDR X1, [X0 + 0x30]
	0x03AB24E0 LDR X2, [X0 + 0x58]
	0x03AB24E4 LDR X3, [X0 + 0x68]
	0x03AB24E8 MOV X0, X19
	0x03AB24EC MOV X4, X31
	0x03AB24F0 BL 0x3A44388
	0x03AB24F4 FMOV S0, W31
	0x03AB24F8 FMOV S1, W31
	0x03AB24FC FMOV S2, W31
	0x03AB2500 FMOV S3, 1
	0x03AB2504 MOV X0, X19
	0x03AB2508 MOV W1, W31
	0x03AB250C MOV X2, X31
	0x03AB2510 BL 0x3A44510
	0x03AB2514 LDP X20, X19, [X31 + 0xF0]
	0x03AB2518 LDP X22, X21, [X31 + 0xE0]
	0x03AB251C LDP X24, X23, [X31 + 0xD0]
	0x03AB2520 LDP X26, X25, [X31 + 0xC0]
	0x03AB2524 LDR X30, [X31 + 0xB0]
	0x03AB2528 ADD X31, X31, 0x100
	0x03AB252C RET
	0x03AB2530 BL 0x1C16F20
	0x03AB2534 BL 0x1C16F28
	0x03AB2538 BL 0x1C16F44
	0x03AB253C MOV X1, X31
	0x03AB2540 BL 0x1C16DEC
	0x03AB2544 STP X29, X30, [X31 - 0x40]!
	0x03AB2548 STP X24, X23, [X31 + 0x10]
	0x03AB254C STP X22, X21, [X31 + 0x20]
	0x03AB2550 STP X20, X19, [X31 + 0x30]
	0x03AB2554 SUB X31, X31, 0x1D0
	0x03AB2558 MRS X22, 0xC000
	0x03AB255C LDR X8, [X22 + 0x28]
	0x03AB2560 ADRP X23, 0x930000
	0x03AB2564 MOV X20, X2
	0x03AB2568 MOV X21, X1
	0x03AB256C STR X8, [X31 + 0x1C8]
	0x03AB2570 LDRB W8, [X23 + 0x464]
	0x03AB2574 MOV X19, X0
	0x03AB2578 TBNZ X8, 0x0, 0x3AB2590
	0x03AB257C ADRP X0, 0x6A5000
	0x03AB2580 LDR X0, [X0 + 0x190]
	0x03AB2584 BL 0x1C16CF4
	0x03AB2588 MOVZ W8, 0x1
	0x03AB258C STRB W8, [X23 + 0x464]
	0x03AB2590 STRB W31, [X31 + 0x30]
	0x03AB2594 LDR X8, [X19 + 0x178]
	0x03AB2598 LDR X9, [X19 + 0x100]
	0x03AB259C LDR V0, [X19 + 0xF]
	0x03AB25A0 LDR X1, [X20]
	0x03AB25A4 STR X9, [X31 + 0x110]
	0x03AB25A8 STR V0, [X31 + 0x10]
	0x03AB25AC CBZ X8, 0x3AB2734
	0x03AB25B0 LDR X9, [X31 + 0x110]
	0x03AB25B4 LDR V0, [X31 + 0x10]
	0x03AB25B8 ADD X0, X31, 0x30
	0x03AB25BC MOV X3, X31
	0x03AB25C0 STR X9, [X8 + 0x2F0]
	0x03AB25C4 STR V0, [X8 + 0x2E]
	0x03AB25C8 LDR X2, [X19 + 0xE0]
	0x03AB25CC BL 0x39B1DB0
	0x03AB25D0 LDR X24, [X19 + 0x178]
	0x03AB25D4 CBZ X24, 0x3AB2738
	0x03AB25D8 LDR X8, [X19 + 0xE8]
	0x03AB25DC ADRP X23, 0x6A5000
	0x03AB25E0 LDR X23, [X23 + 0x190]
	0x03AB25E4 STR X8, [X24 + 0x2D8]
	0x03AB25E8 LDR X0, [X23]
	0x03AB25EC LDR W8, [X0 + 0xE0]
	0x03AB25F0 CBNZ W8, 0x3AB2600
	0x03AB25F4 BL 0x1C16DFC
	0x03AB25F8 LDR X0, [X23]
	0x03AB25FC LDR X24, [X19 + 0x178]
	0x03AB2600 LDR X8, [X0 + 0xB8]
	0x03AB2604 LDR W3, [X20 + 0x18C]
	0x03AB2608 LDR W1, [X8 + 0x14]
	0x03AB260C ADD X8, X31, 0x38
	0x03AB2610 MOV X0, X19
	0x03AB2614 MOV X2, X20
	0x03AB2618 MOV X4, X31
	0x03AB261C BL 0x3A44CA4
	0x03AB2620 ADD X0, X31, 0x100
	0x03AB2624 ADD X1, X31, 0x38
	0x03AB2628 MOVZ W2, 0xC4
	0x03AB262C BL 0x3EB1AC0
	0x03AB2630 CBZ X24, 0x3AB273C
	0x03AB2634 ADD X0, X24, 0x2F8
	0x03AB2638 ADD X1, X31, 0x100
	0x03AB263C MOVZ W2, 0xC4
	0x03AB2640 BL 0x3EB1AC0
	0x03AB2644 LDR X1, [X19 + 0x178]
	0x03AB2648 MOV X0, X21
	0x03AB264C MOV X2, X20
	0x03AB2650 MOV W3, W31
	0x03AB2654 BL 0x3AB27E4
	0x03AB2658 LDR X8, [X19 + 0xE8]
	0x03AB265C CBZ X8, 0x3AB2740
	0x03AB2660 LDRB W9, [X8 + 0x15]
	0x03AB2664 CBNZ W9, 0x3AB2700
	0x03AB2668 LDR X0, [X23]
	0x03AB266C LDR X20, [X20]
	0x03AB2670 LDR W9, [X0 + 0xE0]
	0x03AB2674 CBNZ W9, 0x3AB2688
	0x03AB2678 BL 0x1C16DFC
	0x03AB267C LDR X8, [X19 + 0xE8]
	0x03AB2680 CBZ X8, 0x3AB2750
	0x03AB2684 LDR X0, [X23]
	0x03AB2688 LDR X9, [X0 + 0xB8]
	0x03AB268C LDR X21, [X8 + 0x30]
	0x03AB2690 LDR W19, [X9]
	0x03AB2694 MOV X0, X8
	0x03AB2698 MOV X1, X31
	0x03AB269C BL 0x3A9AD24
	0x03AB26A0 CBZ X21, 0x3AB2744
	0x03AB26A4 LDR W8, [X21 + 0x18]
	0x03AB26A8 CMP W0, W8
	0x03AB26AC B.CS 0x3AB2748
	0x03AB26B0 ADD X8, X21, W0, 0x3, SXTW
	0x03AB26B4 LDR X0, [X8 + 0x20]
	0x03AB26B8 ADD X8, X31, 0x38
	0x03AB26BC MOV X1, X31
	0x03AB26C0 BL 0x39CDF64
	0x03AB26C4 LDUR V0, [X31 + 0x38]
	0x03AB26C8 LDUR V1, [X31 + 0x48]
	0x03AB26CC LDR X8, [X31 + 0x58]
	0x03AB26D0 STP V0, V1, [X31 + 0x100]
	0x03AB26D4 STR X8, [X31 + 0x120]
	0x03AB26D8 CBZ X20, 0x3AB274C
	0x03AB26DC LDP V0, V1, [X31 + 0x100]
	0x03AB26E0 LDR X8, [X31 + 0x120]
	0x03AB26E4 STP V0, V1, [X31]
	0x03AB26E8 STR X8, [X31 + 0x20]
	0x03AB26EC ADD X2, X31, 0x0
	0x03AB26F0 MOV X0, X20
	0x03AB26F4 MOV W1, W19
	0x03AB26F8 MOV X3, X31
	0x03AB26FC BL 0x3C4FCFC
	0x03AB2700 ADD X0, X31, 0x30
	0x03AB2704 MOV X1, X31
	0x03AB2708 BL 0x39B1DB4
	0x03AB270C LDR X8, [X22 + 0x28]
	0x03AB2710 LDR X9, [X31 + 0x1C8]
	0x03AB2714 CMP X8, X9
	0x03AB2718 B.NE 0x3AB2754
	0x03AB271C ADD X31, X31, 0x1D0
	0x03AB2720 LDP X20, X19, [X31 + 0x30]
	0x03AB2724 LDP X22, X21, [X31 + 0x20]
	0x03AB2728 LDP X24, X23, [X31 + 0x10]
	0x03AB272C LDP X29, X30, [X31], #0x40
	0x03AB2730 RET
	0x03AB2734 BL 0x1C16F20
	0x03AB2738 BL 0x1C16F20
	0x03AB273C BL 0x1C16F20
	0x03AB2740 BL 0x1C16F20
	0x03AB2744 BL 0x1C16F20
	0x03AB2748 BL 0x1C16F28
	0x03AB274C BL 0x1C16F20
	0x03AB2750 BL 0x1C16F20
	0x03AB2754 BL 0x3EB1B20
	0x03AB2758 B 0x3AB2780
	0x03AB275C B 0x3AB2780
	0x03AB2760 B 0x3AB2780
	0x03AB2764 B 0x3AB2780
	0x03AB2768 B 0x3AB2780
	0x03AB276C B 0x3AB2780
	0x03AB2770 B 0x3AB2780
	0x03AB2774 B 0x3AB2780
	0x03AB2778 B 0x3AB2780
	0x03AB277C B 0x3AB2780
	0x03AB2780 MOV X19, X0
	0x03AB2784 CMP W1, 0x1
	0x03AB2788 B.NE 0x3AB27B4
	0x03AB278C MOV X0, X19
	0x03AB2790 BL 0x3EB1AD0
	0x03AB2794 LDR X20, [X0]
	0x03AB2798 BL 0x3EB1AE0
	0x03AB279C ADD X0, X31, 0x30
	0x03AB27A0 MOV X1, X31
	0x03AB27A4 BL 0x39B1DB4
	0x03AB27A8 CBZ X20, 0x3AB270C
	0x03AB27AC MOV X0, X20
	0x03AB27B0 BL 0x1C16F18
	0x03AB27B4 MOV X20, X31
	0x03AB27B8 B 0x3AB27C0
	0x03AB27BC MOV X19, X0
	0x03AB27C0 ADD X0, X31, 0x30
	0x03AB27C4 MOV X1, X31
	0x03AB27C8 BL 0x39B1DB4
	0x03AB27CC CBNZ X20, 0x3AB27D8
	0x03AB27D0 MOV X0, X19
	0x03AB27D4 BL 0x1D2C690
	0x03AB27D8 MOV X0, X20
	0x03AB27DC BL 0x1C16F18
	0x03AB27E0 BL 0x1990590
	0x03AB27E4 SUB X31, X31, 0x140
	0x03AB27E8 STP X29, X30, [X31 + 0xE0]
	0x03AB27EC STP X28, X27, [X31 + 0xF0]
	0x03AB27F0 STP X26, X25, [X31 + 0x100]
	0x03AB27F4 STP X24, X23, [X31 + 0x110]
	0x03AB27F8 STP X22, X21, [X31 + 0x120]
	0x03AB27FC STP X20, X19, [X31 + 0x130]
	0x03AB2800 ADRP X21, 0x930000
	0x03AB2804 LDRB W8, [X21 + 0x465]
	0x03AB2808 MOV X19, X2
	0x03AB280C MOV X20, X1
	0x03AB2810 STR X0, [X31 + 0xD8]
	0x03AB2814 TBNZ X8, 0x0, 0x3AB2880
	0x03AB2818 ADRP X0, 0x669000
	0x03AB281C LDR X0, [X0 + 0x8F8]
	0x03AB2820 BL 0x1C16CF4
	0x03AB2824 ADRP X0, 0x6A5000
	0x03AB2828 LDR X0, [X0 + 0x190]
	0x03AB282C BL 0x1C16CF4
	0x03AB2830 ADRP X0, 0x6A6000
	0x03AB2834 LDR X0, [X0 + 0x78]
	0x03AB2838 BL 0x1C16CF4
	0x03AB283C ADRP X0, 0x6A6000
	0x03AB2840 LDR X0, [X0 + 0x80]
	0x03AB2844 BL 0x1C16CF4
	0x03AB2848 ADRP X0, 0x6A6000
	0x03AB284C LDR X0, [X0 + 0x88]
	0x03AB2850 BL 0x1C16CF4
	0x03AB2854 ADRP X0, 0x6A6000
	0x03AB2858 LDR X0, [X0 + 0x90]
	0x03AB285C BL 0x1C16CF4
	0x03AB2860 ADRP X0, 0x69E000
	0x03AB2864 LDR X0, [X0 + 0xC80]
	0x03AB2868 BL 0x1C16CF4
	0x03AB286C ADRP X0, 0x6A5000
	0x03AB2870 LDR X0, [X0 + 0xEC8]
	0x03AB2874 BL 0x1C16CF4
	0x03AB2878 MOVZ W8, 0x1
	0x03AB287C STRB W8, [X21 + 0x465]

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+80], X30
	003 Move [X31+88], X5
	004 Move [X31+96], X26
	005 Move [X31+104], X25
	006 Move [X31+112], X24
	007 Move [X31+120], X23
	008 Move [X31+128], X22
	009 Move [X31+136], X21
	010 Move [X31+144], X20
	011 Move [X31+152], X19
	012 Move X24, 0x931000
	013 Move W8, [X24+1119]
	014 Move X22, X4
	015 Move X23, X3
	016 Move X20, X2
	017 Move X19, X1
	018 Move X21, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {58}
	023 Move X0, 0x6A7000
	024 Move X0, [X0+40]
	025 Call 0x1C17CF4
	026 Move X0, 0x6A7000
	027 Move X0, [X0+48]
	028 Call 0x1C17CF4
	029 Move X0, 0x6A7000
	030 Move X0, [X0+56]
	031 Call 0x1C17CF4
	032 Move X0, 0x6A3000
	033 Move X0, [X0+32]
	034 Call 0x1C17CF4
	035 Move X0, 0x69F000
	036 Move X0, [X0+2696]
	037 Call 0x1C17CF4
	038 Move X0, 0x6A7000
	039 Move X0, [X0+64]
	040 Call 0x1C17CF4
	041 Move X0, 0x6A7000
	042 Move X0, [X0+72]
	043 Call 0x1C17CF4
	044 Move X0, 0x66B000
	045 Move X0, [X0+2216]
	046 Call 0x1C17CF4
	047 Move X0, 0x66C000
	048 Move X0, [X0+4032]
	049 Call 0x1C17CF4
	050 Move X0, 0x6A5000
	051 Move X0, [X0+1128]
	052 Call 0x1C17CF4
	053 Move X0, 0x6A7000
	054 Move X0, [X0+80]
	055 Call 0x1C17CF4
	056 Move W8, 1
	057 Move [X24+1119], W8
	058 NotImplemented "Instruction MOVI not yet implemented."
	059 Move [X31+48], V0
	060 Move [X31+56], V0
	061 Move [X31+40], X31
	062 Compare X19, 0
	063 JumpIfEqual {247}
	064 Move X8, 0x6A7000
	065 Move X9, 0x6A7000
	066 Move X8, [X8+80]
	067 Move X9, [X9+56]
	068 Move X3, [X21+56]
	069 Add X2, X31, 40
	070 Move X1, [X8]
	071 Move X4, [X9]
	072 Add X8, X31, 8
	073 Move X0, X19
	074 Call 0x2241F24, X0, X1, X2, X3
	075 NotImplemented "Instruction LDUR not yet implemented."
	076 NotImplemented "Instruction LDUR not yet implemented."
	077 Add X19, X20, 24
	078 Move [X31+48], V0
	079 Move [X31+56], V1
	080 Move X0, X19
	081 Move X1, X31
	082 Call CameraData.get_isHDROutputActive, X0
	083 Move X25, [X31+40]
	084 Compare X25, 0
	085 JumpIfEqual {248}
	086 Move X26, 0x6A3000
	087 Move X26, [X26+32]
	088 Move [X25+16], X23
	089 Move [X25+24], X22
	090 Move W24, W0
	091 Move X0, [X26]
	092 Move W8, [X0+224]
	093 Compare W8, 0
	094 JumpIfNotEqual {97}
	095 Call 0x1C17DFC
	096 Move X0, [X26]
	097 Move X8, [X0+184]
	098 And W3, W24, 1
	099 Move W8, [X8+168]
	100 Move [X25+32], W8
	101 Add X2, X31, 40
	102 Move X0, X21
	103 Move X1, X20
	104 Call FinalBlitPass.InitPassData, X0, X1, X2, X3
	105 Move X8, [X31+40]
	106 Compare X8, 0
	107 JumpIfEqual {249}
	108 Add X1, X8, 24
	109 Add X0, X31, 48
	110 Move W2, W31
	111 Move X3, X31
	112 Call RenderGraphBuilder.UseColorBuffer, X0, X1, X2
	113 Move X8, [X31+40]
	114 Compare X8, 0
	115 JumpIfEqual {250}
	116 Add X1, X8, 16
	117 Add X0, X31, 48
	118 Move X2, X31
	119 Call RenderGraphBuilder.ReadTexture, X0, X1
	120 Move TEMP, X24
	121 And TEMP, TEMP, 1
	122 Compare TEMP, 1
	123 JumpIfNotEqual {187}
	124 Move X8, 0x69F000
	125 Move X8, [X8+2696]
	126 Move X0, [X8]
	127 Move W8, [X0+224]
	128 Compare W8, 0
	129 JumpIfNotEqual {131}
	130 Call 0x1C17DFC
	131 Add X0, X31, 88
	132 Move X1, X31
	133 Call TextureHandle.IsValid, X0
	134 Move TEMP, X0
	135 And TEMP, TEMP, 1
	136 Compare TEMP, 1
	137 JumpIfNotEqual {187}
	138 Move X8, 0x66C000
	139 Move X8, [X8+4032]
	140 Move X0, [X8]
	141 Move W8, [X0+224]
	142 Compare W8, 0
	143 JumpIfNotEqual {145}
	144 Call 0x1C17DFC
	145 Move X0, X31
	146 Call VolumeManager.get_instance
	147 Compare X0, 0
	148 JumpIfEqual {252}
	149 Move X0, [X0+16]
	150 Compare X0, 0
	151 JumpIfEqual {253}
	152 Move X8, 0x6A5000
	153 Move X8, [X8+1128]
	154 Move X1, [X8]
	155 Call 0x22ADD04, X0
	156 Move X20, X0
	157 Move X0, X19
	158 Move X1, X31
	159 Call CameraData.get_hdrDisplayInformation, X0
	160 Move X21, X0
	161 Move X22, X1
	162 Move X0, X19
	163 Move X1, X31
	164 Call CameraData.get_hdrDisplayColorGamut, X0
	165 Move X23, [X31+40]
	166 Compare X23, 0
	167 JumpIfEqual {254}
	168 Move X8, 0x66B000
	169 Move X8, [X8+2216]
	170 Move W19, W0
	171 Move X0, [X8]
	172 Move W8, [X0+224]
	173 Compare W8, 0
	174 JumpIfNotEqual {176}
	175 Call 0x1C17DFC
	176 Add X4, X23, 36
	177 Move X0, X21
	178 Move X1, X22
	179 Move W2, W19
	180 Move X3, X20
	181 Move X5, X31
	182 Call UniversalRenderPipeline.GetHDROutputLuminanceParameters, X0, X1, X2, X3
	183 Add X0, X31, 48
	184 Add X1, X31, 88
	185 Move X2, X31
	186 Call RenderGraphBuilder.ReadTexture, X0, X1
	187 Move X8, [X31+40]
	188 Compare X8, 0
	189 JumpIfEqual {251}
	190 Move V0, 0
	191 Move [X8+36], V0
	192 Move X21, 0x6A7000
	193 Move X21, [X21+72]
	194 Move X8, [X21]
	195 Move W9, [X8+224]
	196 Compare W9, 0
	197 JumpIfNotEqual {201}
	198 Move X0, X8
	199 Call 0x1C17DFC
	200 Move X8, [X21]
	201 Move X9, [X8+184]
	202 Move X19, [X9+8]
	203 Compare X19, 0
	204 JumpIfNotEqual {227}
	205 Move W9, [X8+224]
	206 Compare W9, 0
	207 JumpIfNotEqual {211}
	208 Move X0, X8
	209 Call 0x1C17DFC
	210 Move X8, [X21]
	211 Move X9, 0x6A7000
	212 Move X8, [X8+184]
	213 Move X9, [X9+40]
	214 Move X20, [X8]
	215 Move X0, [X9]
	216 Call 0x1C17F10
	217 Move X8, 0x6A7000
	218 Move X8, [X8+64]
	219 Move X19, X0
	220 Move X2, [X8]
	221 Move X1, X20
	222 Move X3, X31
	223 Call 0x25C88AC, X0, X1, X2
	224 Move X8, [X21]
	225 Move X8, [X8+184]
	226 Move [X8+8], X19
	227 Move X8, 0x6A7000
	228 Move X8, [X8+48]
	229 Move X2, [X8]
	230 Add X0, X31, 48
	231 Move X1, X19
	232 Call 0x224207C, X0, X1
	233 Add X0, X31, 48
	234 Move X1, X31
	235 Call RenderGraphBuilder.Dispose, X0
	236 Move X20, [X31+144]
	237 Move X19, [X31+152]
	238 Move X22, [X31+128]
	239 Move X21, [X31+136]
	240 Move X24, [X31+112]
	241 Move X23, [X31+120]
	242 Move X26, [X31+96]
	243 Move X25, [X31+104]
	244 Move X30, [X31+80]
	245 Add X31, X31, 160
	246 Return 
	247 Call 0x1C17F20
	248 Call 0x1C17F20
	249 Call 0x1C17F20
	250 Call 0x1C17F20
	251 Call 0x1C17F20
	252 Call 0x1C17F20
	253 Call 0x1C17F20
	254 Call 0x1C17F20
	255 Move X19, X0
	256 NotImplemented "Instruction CMP not yet implemented."
	257 Move X0, X19
	258 Call 0x3EB2AD0
	259 Move X20, [X0]
	260 Call 0x3EB2AE0
	261 Add X0, X31, 48
	262 Move X1, X31
	263 Call RenderGraphBuilder.Dispose, X0
	264 Compare X20, 0
	265 JumpIfEqual {236}
	266 Move X0, X20
	267 Call 0x1C17F18
	268 Move X20, X31
	269 Move X19, X0
	270 Add X0, X31, 48
	271 Move X1, X31
	272 Call RenderGraphBuilder.Dispose, X0
	273 Compare X20, 0
	274 JumpIfNotEqual {277}
	275 Move X0, X19
	276 Call 0x1D2D690
	277 Move X0, X20
	278 Call 0x1C17F18
	279 Call 0x1991590

