Type: UnityEngine.Rendering.Universal.Internal.ColorGradingLutPass

Method: System.Void .ctor(UnityEngine.Rendering.Universal.RenderPassEvent evt, UnityEngine.Rendering.Universal.PostProcessData data)

Disassembly:
	0x03AA95C0 MOV X1, X31
	0x03AA95C4 BL 0x39ECEF8
	0x03AA95C8 MOV X2, X0
	0x03AA95CC MOV X0, X22
	0x03AA95D0 MOV W1, W25
	0x03AA95D4 MOV X3, X31
	0x03AA95D8 BL 0x3C14C34
	0x03AA95DC LDR X0, [X24 + 0x70]
	0x03AA95E0 CBZ X0, 0x3AA9990
	0x03AA95E4 LDR X8, [X20]
	0x03AA95E8 LDR X9, [X0]
	0x03AA95EC LDR X8, [X8 + 0xB8]
	0x03AA95F0 LDR X1, [X9 + 0x220]
	0x03AA95F4 LDR X10, [X9 + 0x218]
	0x03AA95F8 LDR W25, [X8 + 0x58]
	0x03AA95FC BLR X10
	0x03AA9600 CBZ X0, 0x3AA9994
	0x03AA9604 MOV X1, X31
	0x03AA9608 BL 0x39ECEF8
	0x03AA960C MOV X2, X0
	0x03AA9610 MOV X0, X22
	0x03AA9614 MOV W1, W25
	0x03AA9618 MOV X3, X31
	0x03AA961C BL 0x3C14C34
	0x03AA9620 LDR X0, [X24 + 0x68]
	0x03AA9624 CBZ X0, 0x3AA9998
	0x03AA9628 LDR X8, [X20]
	0x03AA962C LDR X9, [X0]
	0x03AA9630 LDR X8, [X8 + 0xB8]
	0x03AA9634 LDR X1, [X9 + 0x220]
	0x03AA9638 LDR X10, [X9 + 0x218]
	0x03AA963C LDR W24, [X8 + 0x5C]
	0x03AA9640 BLR X10
	0x03AA9644 CBZ X0, 0x3AA999C
	0x03AA9648 MOV X1, X31
	0x03AA964C BL 0x39ECEF8
	0x03AA9650 MOV X2, X0
	0x03AA9654 MOV X0, X22
	0x03AA9658 MOV W1, W24
	0x03AA965C MOV X3, X31
	0x03AA9660 BL 0x3C14C34
	0x03AA9664 LDR W8, [X31 + 0x94]
	0x03AA9668 CMP W8, 0x1
	0x03AA966C B.NE 0x3AA97FC
	0x03AA9670 MOV X0, X22
	0x03AA9674 MOV X1, X31
	0x03AA9678 MOV X2, X31
	0x03AA967C BL 0x3C152D0
	0x03AA9680 LDR X8, [X31 + 0x88]
	0x03AA9684 CBZ X8, 0x3AA99AC
	0x03AA9688 LDR X0, [X8 + 0x38]
	0x03AA968C CBZ X0, 0x3AA99B0
	0x03AA9690 LDR X8, [X0]
	0x03AA9694 LDR X1, [X8 + 0x220]
	0x03AA9698 LDR X9, [X8 + 0x218]
	0x03AA969C BLR X9
	0x03AA96A0 CMP W0, 0x1
	0x03AA96A4 B.EQ 0x3AA96E0
	0x03AA96A8 CMP W0, 0x2
	0x03AA96AC B.NE 0x3AA96F8
	0x03AA96B0 ADRP X8, 0x6AD000
	0x03AA96B4 ADRP X9, 0x6AD000
	0x03AA96B8 LDR X8, [X8 + 0x6E8]
	0x03AA96BC LDR X9, [X9 + 0x6D8]
	0x03AA96C0 LDR W10, [X31 + 0x14]
	0x03AA96C4 CMP W10, 0x0
	0x03AA96C8 CSEL X8, X8, X9, EQ
	0x03AA96CC LDR X1, [X8]
	0x03AA96D0 MOV X0, X22
	0x03AA96D4 MOV X2, X31
	0x03AA96D8 BL 0x3C14E3C
	0x03AA96DC B 0x3AA96F8
	0x03AA96E0 ADRP X8, 0x6AD000
	0x03AA96E4 LDR X8, [X8 + 0x6E8]
	0x03AA96E8 LDR X1, [X8]
	0x03AA96EC MOV X0, X22
	0x03AA96F0 MOV X2, X31
	0x03AA96F4 BL 0x3C14E3C
	0x03AA96F8 ADD X24, X19, 0x18
	0x03AA96FC MOV X0, X24
	0x03AA9700 MOV X1, X31
	0x03AA9704 BL 0x3A9006C
	0x03AA9708 TBZ X0, 0x0, 0x3AA97FC
	0x03AA970C MOV X0, X24
	0x03AA9710 MOV X1, X31
	0x03AA9714 BL 0x3A93358
	0x03AA9718 MOV X25, X0
	0x03AA971C MOV X26, X1
	0x03AA9720 MOV X0, X24
	0x03AA9724 MOV X1, X31
	0x03AA9728 BL 0x3A9344C
	0x03AA972C ADRP X8, 0x673000
	0x03AA9730 LDR X8, [X8 + 0x8A8]
	0x03AA9734 MOV W27, W0
	0x03AA9738 LDR X0, [X8]
	0x03AA973C LDR W8, [X0 + 0xE0]
	0x03AA9740 CBNZ W8, 0x3AA9748
	0x03AA9744 BL 0x1C16DFC
	0x03AA9748 LDR X3, [X31 + 0x88]
	0x03AA974C ADD X4, X31, 0x128
	0x03AA9750 MOV X0, X25
	0x03AA9754 MOV X1, X26
	0x03AA9758 MOV W2, W27
	0x03AA975C MOV X5, X31
	0x03AA9760 BL 0x3A91338
	0x03AA9764 LDR X0, [X31 + 0x88]
	0x03AA9768 ADD X1, X31, 0x118
	0x03AA976C MOV X2, X31
	0x03AA9770 BL 0x3A91428
	0x03AA9774 ADRP X20, 0x6AB000
	0x03AA9778 LDR X20, [X20 + 0x20]
	0x03AA977C LDR X0, [X20]
	0x03AA9780 LDR W8, [X0 + 0xE0]
	0x03AA9784 CBNZ W8, 0x3AA9790
	0x03AA9788 BL 0x1C16DFC
	0x03AA978C LDR X0, [X20]
	0x03AA9790 LDR X8, [X0 + 0xB8]
	0x03AA9794 LDR V0, [X31 + 0x128]
	0x03AA9798 LDR V1, [X31 + 0x12C]
	0x03AA979C LDR V2, [X31 + 0x130]
	0x03AA97A0 LDR W1, [X8 + 0xCC]
	0x03AA97A4 LDR V3, [X31 + 0x134]
	0x03AA97A8 MOV X0, X22
	0x03AA97AC MOV X2, X31
	0x03AA97B0 BL 0x3C15D80
	0x03AA97B4 LDR X8, [X20]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X22, 0x93A000
	010 Move X23, 0x6AB000
	011 Move W8, [X22+1048]
	012 Move X23, [X23+4080]
	013 Move X20, X2
	014 Move W21, W1
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {40}
	020 Move X0, 0x64F000
	021 Move X0, [X0+712]
	022 Call 0x1C17CF4
	023 Move X0, 0x6AF000
	024 Move X0, [X0+3144]
	025 Call 0x1C17CF4
	026 Move X0, 0x6A8000
	027 Move X0, [X0+1432]
	028 Call 0x1C17CF4
	029 Move X0, 0x6AB000
	030 Move X0, [X0+4080]
	031 Call 0x1C17CF4
	032 Move X0, 0x6AF000
	033 Move X0, [X0+3152]
	034 Call 0x1C17CF4
	035 Move X0, 0x6AF000
	036 Move X0, [X0+3160]
	037 Call 0x1C17CF4
	038 Move W8, 1
	039 Move [X22+1048], W8
	040 Move W24, 1
	041 Move [X19+264], W24
	042 Move X0, [X23]
	043 Move X25, 0x6A8000
	044 Move X22, 0x6AF000
	045 Move W8, [X0+224]
	046 Move X25, [X25+1432]
	047 Move X22, [X22+3152]
	048 Compare W8, 0
	049 JumpIfNotEqual {51}
	050 Call 0x1C17DFC
	051 Move X0, X19
	052 Move X1, X31
	053 Call ScriptableRenderPass..ctor, X0
	054 Move X0, [X25]
	055 Call 0x1C17F10
	056 Move X1, [X22]
	057 Move X2, X31
	058 Move X22, X0
	059 Call ProfilingSampler..ctor, X0, X1
	060 Move [X19+56], X22
	061 Move [X19+16], W21
	062 Move [X19+64], W24
	063 Compare X20, 0
	064 JumpIfEqual {150}
	065 Move X8, [X20+24]
	066 Compare X8, 0
	067 JumpIfEqual {150}
	068 Move X0, [X8+64]
	069 Call ColorGradingLutPass.<.ctor>g__Load|7_0, X0
	070 Move [X19+224], X0
	071 Move X8, [X20+24]
	072 Compare X8, 0
	073 JumpIfEqual {150}
	074 Move X0, [X8+72]
	075 Call ColorGradingLutPass.<.ctor>g__Load|7_0, X0
	076 Move [X19+232], X0
	077 Move W0, 48
	078 Move W1, 5
	079 Move X2, X31
	080 Move W20, 48
	081 Call SystemInfo.IsFormatSupported, X0, X1
	082 Move TEMP, X0
	083 And TEMP, TEMP, 1
	084 Compare TEMP, 1
	085 JumpIfEqual {95}
	086 Move W0, 74
	087 Move W1, 5
	088 Move X2, X31
	089 Move W20, 74
	090 Call SystemInfo.IsFormatSupported, X0, X1
	091 Move TEMP, X0
	092 And TEMP, TEMP, 1
	093 Compare TEMP, 1
	094 JumpIfNotEqual {96}
	095 Move [X19+240], W20
	096 Move W8, 8
	097 Move [X19+240], W8
	098 Move W8, 8
	099 Move [X19+244], W8
	100 Move X0, [X23]
	101 Move W8, [X0+224]
	102 Compare W8, 0
	103 JumpIfNotEqual {105}
	104 Call 0x1C17DFC
	105 Move X0, X31
	106 Move [X19+66], W31
	107 Call SystemInfo.get_graphicsDeviceType
	108 NotImplemented "Instruction CMP not yet implemented."
	109 Move X8, 0x64F000
	110 Move X8, [X8+712]
	111 Move X0, [X8]
	112 Move W8, [X0+224]
	113 Compare W8, 0
	114 JumpIfNotEqual {116}
	115 Call 0x1C17DFC
	116 Move X0, X31
	117 Call Graphics.get_minOpenGLESVersion
	118 NotImplemented "Instruction CMP not yet implemented."
	119 Move X0, X31
	120 Call SystemInfo.get_graphicsDeviceName
	121 Compare X0, 0
	122 JumpIfEqual {150}
	123 Move X8, 0x6AF000
	124 Move X8, [X8+3160]
	125 Move X2, X31
	126 Move X1, [X8]
	127 Call String.StartsWith, X0, X1
	128 Move TEMP, X0
	129 And TEMP, TEMP, 1
	130 Compare TEMP, 1
	131 JumpIfNotEqual {133}
	132 Move [X19+264], W31
	133 Move X8, 0x6AF000
	134 Move X8, [X8+3144]
	135 Move X0, [X8]
	136 Call 0x1C17F10
	137 Move X1, X31
	138 Move X20, X0
	139 Call Object..ctor, X0
	140 Move [X19+248], X20
	141 Move X20, [X31+48]
	142 Move X19, [X31+56]
	143 Move X22, [X31+32]
	144 Move X21, [X31+40]
	145 Move X24, [X31+16]
	146 Move X23, [X31+24]
	147 Move X30, [X31+64]
	148 Move X25, [X31+72]
	149 Return 
	150 Call 0x1C17F20

Method: System.Void Setup(in UnityEngine.Rendering.RTHandle internalLut)

Disassembly:
	0x03AA98A4 LDP X26, X25, [X31 + 0x60]
	0x03AA98A8 LDP X28, X27, [X31 + 0x50]
	0x03AA98AC LDP X29, X30, [X31 + 0x40]

ISIL:
	001 Move X8, [X1]
	002 Move [X0+256], X8
	003 Return 

Method: System.Void ConfigureDescriptor(in UnityEngine.Rendering.Universal.PostProcessingData postProcessingData, out UnityEngine.RenderTextureDescriptor descriptor, out UnityEngine.FilterMode filterMode)

Disassembly:
	0x03AA98B0 LDP D9, D8, [X31 + 0x30]
	0x03AA98B4 LDP D11, D10, [X31 + 0x20]
	0x03AA98B8 LDP D13, D12, [X31 + 0x10]
	0x03AA98BC LDP D15, D14, [X31], #0xA0
	0x03AA98C0 RET
	0x03AA98C4 BL 0x1C16F20
	0x03AA98C8 BL 0x1C16F20
	0x03AA98CC BL 0x1C16F20
	0x03AA98D0 BL 0x1C16F20
	0x03AA98D4 BL 0x1C16F20
	0x03AA98D8 BL 0x1C16F20
	0x03AA98DC BL 0x1C16F20
	0x03AA98E0 BL 0x1C16F20
	0x03AA98E4 BL 0x1C16F20
	0x03AA98E8 BL 0x1C16F20
	0x03AA98EC BL 0x1C16F20
	0x03AA98F0 BL 0x1C16F20
	0x03AA98F4 BL 0x1C16F20
	0x03AA98F8 BL 0x1C16F20
	0x03AA98FC BL 0x1C16F20
	0x03AA9900 BL 0x1C16F20
	0x03AA9904 BL 0x1C16F20
	0x03AA9908 BL 0x1C16F20
	0x03AA990C BL 0x1C16F20
	0x03AA9910 BL 0x1C16F20
	0x03AA9914 BL 0x1C16F20
	0x03AA9918 BL 0x1C16F20
	0x03AA991C BL 0x1C16F20
	0x03AA9920 BL 0x1C16F20
	0x03AA9924 BL 0x1C16F20
	0x03AA9928 BL 0x1C16F20
	0x03AA992C BL 0x1C16F20
	0x03AA9930 BL 0x1C16F20

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+64], X30
	003 Move [X31+80], X20
	004 Move [X31+88], X19
	005 Move X20, X2
	006 Move W8, [X1]
	007 Move W2, [X1+4]
	008 Move W9, 244
	009 Move W10, 240
	010 Move X19, X3
	011 NotImplemented "Instruction CMP not yet implemented."
	012 NotImplemented "Instruction CSEL not yet implemented."
	013 Move W3, [X0]
	014 Multiply W1, W2, W2
	015 NotImplemented "Instruction MOVI not yet implemented."
	016 Add X0, X31, 0
	017 Move W4, W31
	018 Move X5, X31
	019 Move [X31+48], W31
	020 Move [X31+16], V0
	021 Move [X31+24], V0
	022 Move [X31], V0
	023 Call RenderTextureDescriptor..ctor, X0, X1, X2, X3, X4
	024 Move W8, [X31+48]
	025 Move V2, [X31+16]
	026 Move V0, [X31+32]
	027 Move V1, [X31]
	028 Move W9, 1
	029 Move [X20+48], W8
	030 Move [X20+16], V2
	031 Move [X20+24], V0
	032 Move [X20], V1
	033 Move [X20+40], W31
	034 Move [X19], W9
	035 Move X20, [X31+80]
	036 Move X19, [X31+88]
	037 Move X30, [X31+64]
	038 Add X31, X31, 96
	039 Return 

Method: System.Void Execute(UnityEngine.Rendering.ScriptableRenderContext context, ref UnityEngine.Rendering.Universal.RenderingData renderingData)

Disassembly:
	0x03AA9934 BL 0x1C16F20
	0x03AA9938 BL 0x1C16F20
	0x03AA993C BL 0x1C16F20
	0x03AA9940 BL 0x1C16F20
	0x03AA9944 BL 0x1C16F20
	0x03AA9948 BL 0x1C16F20
	0x03AA994C BL 0x1C16F20
	0x03AA9950 BL 0x1C16F20
	0x03AA9954 BL 0x1C16F20
	0x03AA9958 BL 0x1C16F20
	0x03AA995C BL 0x1C16F20
	0x03AA9960 BL 0x1C16F20
	0x03AA9964 BL 0x1C16F20
	0x03AA9968 BL 0x1C16F20
	0x03AA996C BL 0x1C16F20
	0x03AA9970 BL 0x1C16F20
	0x03AA9974 BL 0x1C16F20
	0x03AA9978 BL 0x1C16F20
	0x03AA997C BL 0x1C16F20
	0x03AA9980 BL 0x1C16F20
	0x03AA9984 BL 0x1C16F20
	0x03AA9988 BL 0x1C16F20
	0x03AA998C BL 0x1C16F20
	0x03AA9990 BL 0x1C16F20
	0x03AA9994 BL 0x1C16F20
	0x03AA9998 BL 0x1C16F20
	0x03AA999C BL 0x1C16F20
	0x03AA99A0 BL 0x1C16F20
	0x03AA99A4 BL 0x1C16F20
	0x03AA99A8 BL 0x1C16F20
	0x03AA99AC BL 0x1C16F20
	0x03AA99B0 BL 0x1C16F20
	0x03AA99B4 BL 0x1C16F20
	0x03AA99B8 B 0x3AA9A64
	0x03AA99BC B 0x3AA9A64
	0x03AA99C0 B 0x3AA9A64
	0x03AA99C4 B 0x3AA9A64
	0x03AA99C8 B 0x3AA9A64
	0x03AA99CC B 0x3AA9A64
	0x03AA99D0 B 0x3AA9A64
	0x03AA99D4 B 0x3AA9BE8
	0x03AA99D8 B 0x3AA9BE8
	0x03AA99DC B 0x3AA9BE8
	0x03AA99E0 B 0x3AA9A64
	0x03AA99E4 B 0x3AA9A64
	0x03AA99E8 B 0x3AA9A64
	0x03AA99EC B 0x3AA9A64
	0x03AA99F0 B 0x3AA9A64
	0x03AA99F4 B 0x3AA9BE8
	0x03AA99F8 B 0x3AA9BE8
	0x03AA99FC B 0x3AA9A64
	0x03AA9A00 B 0x3AA9A64
	0x03AA9A04 B 0x3AA9A64
	0x03AA9A08 B 0x3AA9A64
	0x03AA9A0C B 0x3AA9A64
	0x03AA9A10 B 0x3AA9A64
	0x03AA9A14 B 0x3AA9A64
	0x03AA9A18 B 0x3AA9A64
	0x03AA9A1C B 0x3AA9A64
	0x03AA9A20 B 0x3AA9A64
	0x03AA9A24 B 0x3AA9A64

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+32], X22
	004 Move [X31+40], X21
	005 Move [X31+48], X20
	006 Move [X31+56], X19
	007 Move X21, 0x93A000
	008 Move W8, [X21+1049]
	009 Move X19, X2
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x673000
	016 Move X0, [X0+2296]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X21+1049], W8
	020 Move X8, [X20+248]
	021 Compare X8, 0
	022 JumpIfEqual {79}
	023 Move V0, [X20+14]
	024 Add X9, X8, 712
	025 Move [X9], V0
	026 Move W9, [X20+264]
	027 Move [X8+728], W9
	028 Move X0, [X19+400]
	029 Compare X0, 0
	030 JumpIfEqual {79}
	031 Move X1, X31
	032 Call XRPass.get_supportsFoveatedRendering, X0
	033 Move TEMP, X0
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfNotEqual {43}
	037 Move X0, [X19]
	038 Compare X0, 0
	039 JumpIfEqual {79}
	040 Move W1, W31
	041 Move X2, X31
	042 Call CommandBuffer.SetFoveatedRenderingMode, X0, X1
	043 Move X8, 0x673000
	044 Move X8, [X8+2296]
	045 Move X21, [X19]
	046 Move X22, [X20+256]
	047 Move X0, [X8]
	048 Move W8, [X0+224]
	049 Compare W8, 0
	050 JumpIfNotEqual {52}
	051 Call 0x1C17DFC
	052 Move S0, W31
	053 Move S1, W31
	054 Move S2, W31
	055 Move S3, W31
	056 Move W2, 2
	057 Move TEMP, 0
	058 Not TEMP
	059 Move W6, TEMP
	060 Move TEMP, 0
	061 Not TEMP
	062 Move W7, TEMP
	063 Move X0, X21
	064 Move X1, X22
	065 Move W3, W31
	066 Move W4, W31
	067 Move W5, W31
	068 Move [X31], X31
	069 Call CoreUtils.SetRenderTarget, X0, X1, X2, X3, X4, X5, X6, X7, X8
	070 Move X1, [X20+248]
	071 Move X3, [X20+256]
	072 Move X2, X19
	073 Move X20, [X31+48]
	074 Move X19, [X31+56]
	075 Move X22, [X31+32]
	076 Move X21, [X31+40]
	077 Move X30, [X31+16]
	078 Add X31, X31, 64
	079 Call 0x1C17F20

Method: System.Void ExecutePass(UnityEngine.Rendering.ScriptableRenderContext context, UnityEngine.Rendering.Universal.Internal.ColorGradingLutPass/PassData passData, ref UnityEngine.Rendering.Universal.RenderingData renderingData, UnityEngine.Rendering.RTHandle internalLutTarget)

Disassembly:
	0x03AA9A28 B 0x3AA9A64
	0x03AA9A2C B 0x3AA9A64
	0x03AA9A30 B 0x3AA9A64
	0x03AA9A34 B 0x3AA9A64
	0x03AA9A38 B 0x3AA9A64
	0x03AA9A3C B 0x3AA9A64
	0x03AA9A40 B 0x3AA9A64
	0x03AA9A44 B 0x3AA9A64
	0x03AA9A48 B 0x3AA9A64
	0x03AA9A4C B 0x3AA9A64
	0x03AA9A50 B 0x3AA9A64
	0x03AA9A54 B 0x3AA9A64
	0x03AA9A58 B 0x3AA9A64
	0x03AA9A5C B 0x3AA9A64
	0x03AA9A60 B 0x3AA9A64
	0x03AA9A64 MOV X19, X0
	0x03AA9A68 B 0x3AA9BEC
	0x03AA9A6C B 0x3AA9BE8
	0x03AA9A70 B 0x3AA9BE8
	0x03AA9A74 B 0x3AA9BE8
	0x03AA9A78 B 0x3AA9BE8
	0x03AA9A7C B 0x3AA9BE8
	0x03AA9A80 B 0x3AA9BE8
	0x03AA9A84 B 0x3AA9BE8
	0x03AA9A88 B 0x3AA9BE8
	0x03AA9A8C B 0x3AA9BE8
	0x03AA9A90 B 0x3AA9BE8
	0x03AA9A94 B 0x3AA9BE8
	0x03AA9A98 B 0x3AA9BE8
	0x03AA9A9C B 0x3AA9BE8
	0x03AA9AA0 B 0x3AA9BE8
	0x03AA9AA4 B 0x3AA9BE8
	0x03AA9AA8 B 0x3AA9BE8
	0x03AA9AAC B 0x3AA9BE8
	0x03AA9AB0 B 0x3AA9BE8
	0x03AA9AB4 B 0x3AA9BE8
	0x03AA9AB8 B 0x3AA9BE8
	0x03AA9ABC B 0x3AA9BE8
	0x03AA9AC0 B 0x3AA9BE8
	0x03AA9AC4 B 0x3AA9BE8
	0x03AA9AC8 B 0x3AA9BE8
	0x03AA9ACC B 0x3AA9BE8
	0x03AA9AD0 B 0x3AA9BE8
	0x03AA9AD4 B 0x3AA9BE8
	0x03AA9AD8 B 0x3AA9BE8
	0x03AA9ADC B 0x3AA9BE8
	0x03AA9AE0 B 0x3AA9BE8
	0x03AA9AE4 B 0x3AA9BE8
	0x03AA9AE8 B 0x3AA9BE8
	0x03AA9AEC B 0x3AA9BE8
	0x03AA9AF0 B 0x3AA9BE8
	0x03AA9AF4 B 0x3AA9BE8
	0x03AA9AF8 B 0x3AA9BE8
	0x03AA9AFC B 0x3AA9BE8
	0x03AA9B00 B 0x3AA9BE8
	0x03AA9B04 B 0x3AA9BE8
	0x03AA9B08 B 0x3AA9BE8
	0x03AA9B0C B 0x3AA9BE8
	0x03AA9B10 B 0x3AA9BE8
	0x03AA9B14 B 0x3AA9BE8
	0x03AA9B18 B 0x3AA9BE8
	0x03AA9B1C B 0x3AA9BE8
	0x03AA9B20 B 0x3AA9BE8
	0x03AA9B24 B 0x3AA9BE8
	0x03AA9B28 B 0x3AA9BE8
	0x03AA9B2C B 0x3AA9BE8
	0x03AA9B30 B 0x3AA9BE8
	0x03AA9B34 B 0x3AA9BE8
	0x03AA9B38 B 0x3AA9BE8
	0x03AA9B3C B 0x3AA9BE8
	0x03AA9B40 B 0x3AA9BE8
	0x03AA9B44 B 0x3AA9BE8
	0x03AA9B48 B 0x3AA9BE8
	0x03AA9B4C B 0x3AA9BE8
	0x03AA9B50 B 0x3AA9BE8
	0x03AA9B54 B 0x3AA9BE8
	0x03AA9B58 B 0x3AA9BE8
	0x03AA9B5C B 0x3AA9BE8
	0x03AA9B60 B 0x3AA9BE8
	0x03AA9B64 B 0x3AA9BE8
	0x03AA9B68 B 0x3AA9BE8
	0x03AA9B6C B 0x3AA9BE8
	0x03AA9B70 B 0x3AA9BE8
	0x03AA9B74 B 0x3AA9BE8
	0x03AA9B78 B 0x3AA9BE8
	0x03AA9B7C B 0x3AA9BE8
	0x03AA9B80 B 0x3AA9BE8
	0x03AA9B84 B 0x3AA9BE8
	0x03AA9B88 B 0x3AA9BE8
	0x03AA9B8C B 0x3AA9BE8
	0x03AA9B90 B 0x3AA9BE8
	0x03AA9B94 B 0x3AA9BE8
	0x03AA9B98 B 0x3AA9BE8
	0x03AA9B9C B 0x3AA9BE8
	0x03AA9BA0 B 0x3AA9BE8
	0x03AA9BA4 B 0x3AA9BE8
	0x03AA9BA8 B 0x3AA9BE8
	0x03AA9BAC B 0x3AA9BE8
	0x03AA9BB0 B 0x3AA9BE8
	0x03AA9BB4 B 0x3AA9BE8
	0x03AA9BB8 B 0x3AA9BE8
	0x03AA9BBC B 0x3AA9BE8
	0x03AA9BC0 B 0x3AA9BE8
	0x03AA9BC4 B 0x3AA9BE8
	0x03AA9BC8 B 0x3AA9BE8
	0x03AA9BCC B 0x3AA9BE8
	0x03AA9BD0 B 0x3AA9BE8
	0x03AA9BD4 B 0x3AA9BE8
	0x03AA9BD8 B 0x3AA9BE8
	0x03AA9BDC B 0x3AA9BE8
	0x03AA9BE0 B 0x3AA9BE8
	0x03AA9BE4 B 0x3AA9BE8
	0x03AA9BE8 MOV X19, X0
	0x03AA9BEC CMP W1, 0x1
	0x03AA9BF0 B.NE 0x3AA9C1C
	0x03AA9BF4 MOV X0, X19
	0x03AA9BF8 BL 0x3EB1AD0
	0x03AA9BFC LDR X20, [X0]
	0x03AA9C00 BL 0x3EB1AE0
	0x03AA9C04 ADD X0, X31, 0x168
	0x03AA9C08 MOV X1, X31
	0x03AA9C0C BL 0x39B1DB4
	0x03AA9C10 CBZ X20, 0x3AA9894
	0x03AA9C14 MOV X0, X20
	0x03AA9C18 BL 0x1C16F18
	0x03AA9C1C MOV X20, X31
	0x03AA9C20 B 0x3AA9C28
	0x03AA9C24 MOV X19, X0
	0x03AA9C28 ADD X0, X31, 0x168
	0x03AA9C2C MOV X1, X31
	0x03AA9C30 BL 0x39B1DB4
	0x03AA9C34 CBNZ X20, 0x3AA9C40
	0x03AA9C38 MOV X0, X19
	0x03AA9C3C BL 0x1D2C690
	0x03AA9C40 MOV X0, X20
	0x03AA9C44 BL 0x1C16F18
	0x03AA9C48 BL 0x1990590
	0x03AA9C4C SUB X31, X31, 0x110
	0x03AA9C50 STR X29, [X31 + 0xD0]
	0x03AA9C54 STP X30, X23, [X31 + 0xE0]
	0x03AA9C58 STP X22, X21, [X31 + 0xF0]
	0x03AA9C5C STP X20, X19, [X31 + 0x100]
	0x03AA9C60 ADRP X23, 0x939000
	0x03AA9C64 LDRB W8, [X23 + 0x41B]
	0x03AA9C68 MOV X19, X3
	0x03AA9C6C MOV X21, X2
	0x03AA9C70 MOV X22, X1
	0x03AA9C74 MOV X20, X0
	0x03AA9C78 TBNZ X8, 0x0, 0x3AA9CE4
	0x03AA9C7C ADRP X0, 0x6AE000
	0x03AA9C80 LDR X0, [X0 + 0xCA0]
	0x03AA9C84 BL 0x1C16CF4
	0x03AA9C88 ADRP X0, 0x6AE000
	0x03AA9C8C LDR X0, [X0 + 0xCA8]
	0x03AA9C90 BL 0x1C16CF4
	0x03AA9C94 ADRP X0, 0x6AE000
	0x03AA9C98 LDR X0, [X0 + 0xCB0]
	0x03AA9C9C BL 0x1C16CF4
	0x03AA9CA0 ADRP X0, 0x6AE000
	0x03AA9CA4 LDR X0, [X0 + 0xCB8]
	0x03AA9CA8 BL 0x1C16CF4
	0x03AA9CAC ADRP X0, 0x6AE000
	0x03AA9CB0 LDR X0, [X0 + 0xCC0]
	0x03AA9CB4 BL 0x1C16CF4
	0x03AA9CB8 ADRP X0, 0x6AA000
	0x03AA9CBC LDR X0, [X0 + 0xFF8]
	0x03AA9CC0 BL 0x1C16CF4
	0x03AA9CC4 ADRP X0, 0x6AE000
	0x03AA9CC8 LDR X0, [X0 + 0xCC8]
	0x03AA9CCC BL 0x1C16CF4
	0x03AA9CD0 ADRP X0, 0x6AB000
	0x03AA9CD4 LDR X0, [X0 + 0x988]
	0x03AA9CD8 BL 0x1C16CF4
	0x03AA9CDC MOVZ W8, 0x1
	0x03AA9CE0 STRB W8, [X23 + 0x41B]
	0x03AA9CE4 MOVI V0.2D, 0x0
	0x03AA9CE8 STP V0, V0, [X31 + 0x70]
	0x03AA9CEC STR X31, [X31 + 0xD8]
	0x03AA9CF0 CBZ X22, 0x3AA9EFC
	0x03AA9CF4 ADRP X8, 0x6AE000
	0x03AA9CF8 ADRP X9, 0x6AE000
	0x03AA9CFC LDR X8, [X8 + 0xCC8]
	0x03AA9D00 LDR X9, [X9 + 0xCB0]
	0x03AA9D04 LDR X3, [X20 + 0x38]
	0x03AA9D08 ADD X2, X31, 0xD8
	0x03AA9D0C LDR X1, [X8]
	0x03AA9D10 LDR X4, [X9]
	0x03AA9D14 ADD X8, X31, 0x90
	0x03AA9D18 MOV X0, X22
	0x03AA9D1C BL 0x2240F24
	0x03AA9D20 LDP V0, V1, [X31 + 0x90]
	0x03AA9D24 MOVZ W9, 0xF4
	0x03AA9D28 MOVZ W10, 0xF0
	0x03AA9D2C STP V0, V1, [X31 + 0x70]
	0x03AA9D30 LDR W8, [X19 + 0x2A0]
	0x03AA9D34 LDR W2, [X19 + 0x2A4]
	0x03AA9D38 MOVI V0.2D, 0x0
	0x03AA9D3C CMP W8, 0x1
	0x03AA9D40 CSEL X8, X10, X9, EQ
	0x03AA9D44 LDR W3, [X20, X8, LSL]
	0x03AA9D48 MUL W1, W2, W2
	0x03AA9D4C STR W31, [X31 + 0xC0]
	0x03AA9D50 STP V0, V0, [X31 + 0xA0]
	0x03AA9D54 STR V0, [X31 + 0x9]
	0x03AA9D58 ADD X0, X31, 0x90
	0x03AA9D5C MOV W4, W31
	0x03AA9D60 MOV X5, X31
	0x03AA9D64 BL 0x3C228A4
	0x03AA9D68 ADRP X8, 0x6AA000
	0x03AA9D6C LDR X8, [X8 + 0xFF8]
	0x03AA9D70 LDP V0, V1, [X31 + 0x90]
	0x03AA9D74 LDR X9, [X31 + 0xB0]
	0x03AA9D78 LDUR X23, [X31 + 0xBC]
	0x03AA9D7C LDR X0, [X8]
	0x03AA9D80 STP V0, V1, [X31 + 0x40]
	0x03AA9D84 STR X9, [X31 + 0x60]
	0x03AA9D88 STP V0, V1, [X31 + 0x90]
	0x03AA9D8C STR X9, [X31 + 0xB0]
	0x03AA9D90 LDR W8, [X0 + 0xE0]
	0x03AA9D94 CBNZ W8, 0x3AA9D9C
	0x03AA9D98 BL 0x1C16DFC
	0x03AA9D9C ADRP X8, 0x6AB000
	0x03AA9DA0 LDR X8, [X8 + 0x988]
	0x03AA9DA4 LDP V0, V1, [X31 + 0x90]
	0x03AA9DA8 LDR X9, [X31 + 0xB0]
	0x03AA9DAC STR W31, [X31 + 0x28]
	0x03AA9DB0 LDR X2, [X8]
	0x03AA9DB4 STP V0, V1, [X31]
	0x03AA9DB8 STR X9, [X31 + 0x20]
	0x03AA9DBC STUR X23, [X31 + 0x2C]
	0x03AA9DC0 ADD X1, X31, 0x0
	0x03AA9DC4 MOVZ W3, 0x1
	0x03AA9DC8 MOVZ W5, 0x1
	0x03AA9DCC MOV X0, X22
	0x03AA9DD0 MOV W4, W31
	0x03AA9DD4 MOV X6, X31
	0x03AA9DD8 BL 0x3A87660
	0x03AA9DDC STR X0, [X21]
	0x03AA9DE0 LDR X22, [X31 + 0xD8]
	0x03AA9DE4 ADD X0, X31, 0x70
	0x03AA9DE8 MOV X1, X21
	0x03AA9DEC MOV W2, W31
	0x03AA9DF0 MOV X3, X31
	0x03AA9DF4 BL 0x3996828
	0x03AA9DF8 CBZ X22, 0x3AA9F00
	0x03AA9DFC ADD X8, X22, 0x2DC
	0x03AA9E00 STR X0, [X8]
	0x03AA9E04 LDR X21, [X31 + 0xD8]
	0x03AA9E08 CBZ X21, 0x3AA9F04
	0x03AA9E0C LDR V0, [X20 + 0xE]
	0x03AA9E10 ADD X8, X21, 0x2C8
	0x03AA9E14 ADD X0, X21, 0x10
	0x03AA9E18 MOVZ W2, 0x2B8
	0x03AA9E1C MOV X1, X19
	0x03AA9E20 STR V0, [X8]
	0x03AA9E24 BL 0x3EB1B30
	0x03AA9E28 LDRB W8, [X20 + 0x108]
	0x03AA9E2C STRB W8, [X21 + 0x2D8]
	0x03AA9E30 ADD X0, X31, 0x70
	0x03AA9E34 MOV W1, W31
	0x03AA9E38 MOV X2, X31
	0x03AA9E3C BL 0x398E404
	0x03AA9E40 ADRP X21, 0x6AE000
	0x03AA9E44 LDR X21, [X21 + 0xCC0]
	0x03AA9E48 LDR X8, [X21]
	0x03AA9E4C LDR W9, [X8 + 0xE0]
	0x03AA9E50 CBNZ W9, 0x3AA9E60
	0x03AA9E54 MOV X0, X8
	0x03AA9E58 BL 0x1C16DFC
	0x03AA9E5C LDR X8, [X21]
	0x03AA9E60 LDR X9, [X8 + 0xB8]
	0x03AA9E64 LDR X19, [X9 + 0x8]
	0x03AA9E68 CBNZ X19, 0x3AA9EC0
	0x03AA9E6C LDR W9, [X8 + 0xE0]
	0x03AA9E70 CBNZ W9, 0x3AA9E80
	0x03AA9E74 MOV X0, X8
	0x03AA9E78 BL 0x1C16DFC
	0x03AA9E7C LDR X8, [X21]
	0x03AA9E80 ADRP X9, 0x6AE000
	0x03AA9E84 LDR X8, [X8 + 0xB8]
	0x03AA9E88 LDR X9, [X9 + 0xCA0]
	0x03AA9E8C LDR X20, [X8]
	0x03AA9E90 LDR X0, [X9]
	0x03AA9E94 BL 0x1C16F10
	0x03AA9E98 ADRP X8, 0x6AE000
	0x03AA9E9C LDR X8, [X8 + 0xCB8]
	0x03AA9EA0 MOV X19, X0
	0x03AA9EA4 LDR X2, [X8]
	0x03AA9EA8 MOV X1, X20
	0x03AA9EAC MOV X3, X31
	0x03AA9EB0 BL 0x25C78AC
	0x03AA9EB4 LDR X8, [X21]
	0x03AA9EB8 LDR X8, [X8 + 0xB8]
	0x03AA9EBC STR X19, [X8 + 0x8]
	0x03AA9EC0 ADRP X8, 0x6AE000
	0x03AA9EC4 LDR X8, [X8 + 0xCA8]
	0x03AA9EC8 LDR X2, [X8]
	0x03AA9ECC ADD X0, X31, 0x70
	0x03AA9ED0 MOV X1, X19
	0x03AA9ED4 BL 0x224107C
	0x03AA9ED8 ADD X0, X31, 0x70
	0x03AA9EDC MOV X1, X31
	0x03AA9EE0 BL 0x39972C0
	0x03AA9EE4 LDP X20, X19, [X31 + 0x100]
	0x03AA9EE8 LDP X22, X21, [X31 + 0xF0]
	0x03AA9EEC LDP X30, X23, [X31 + 0xE0]
	0x03AA9EF0 LDR X29, [X31 + 0xD0]
	0x03AA9EF4 ADD X31, X31, 0x110
	0x03AA9EF8 RET
	0x03AA9EFC BL 0x1C16F20
	0x03AA9F00 BL 0x1C16F20
	0x03AA9F04 BL 0x1C16F20
	0x03AA9F08 B 0x3AA9F28
	0x03AA9F0C B 0x3AA9F28
	0x03AA9F10 B 0x3AA9F28
	0x03AA9F14 B 0x3AA9F28
	0x03AA9F18 B 0x3AA9F28
	0x03AA9F1C B 0x3AA9F28
	0x03AA9F20 B 0x3AA9F28
	0x03AA9F24 B 0x3AA9F28
	0x03AA9F28 MOV X19, X0
	0x03AA9F2C CMP W1, 0x1
	0x03AA9F30 B.NE 0x3AA9F5C
	0x03AA9F34 MOV X0, X19
	0x03AA9F38 BL 0x3EB1AD0
	0x03AA9F3C LDR X20, [X0]
	0x03AA9F40 BL 0x3EB1AE0
	0x03AA9F44 ADD X0, X31, 0x70
	0x03AA9F48 MOV X1, X31
	0x03AA9F4C BL 0x39972C0
	0x03AA9F50 CBZ X20, 0x3AA9EE4
	0x03AA9F54 MOV X0, X20
	0x03AA9F58 BL 0x1C16F18
	0x03AA9F5C MOV X20, X31
	0x03AA9F60 B 0x3AA9F68
	0x03AA9F64 MOV X19, X0
	0x03AA9F68 ADD X0, X31, 0x70
	0x03AA9F6C MOV X1, X31
	0x03AA9F70 BL 0x39972C0
	0x03AA9F74 CBNZ X20, 0x3AA9F80
	0x03AA9F78 MOV X0, X19
	0x03AA9F7C BL 0x1D2C690
	0x03AA9F80 MOV X0, X20
	0x03AA9F84 BL 0x1C16F18
	0x03AA9F88 BL 0x1990590
	0x03AA9F8C STP X30, X21, [X31 - 0x20]!
	0x03AA9F90 STP X20, X19, [X31 + 0x10]
	0x03AA9F94 ADRP X21, 0x939000
	0x03AA9F98 ADRP X20, 0x672000
	0x03AA9F9C LDRB W8, [X21 + 0x41C]
	0x03AA9FA0 LDR X20, [X20 + 0x8F8]
	0x03AA9FA4 MOV X19, X0
	0x03AA9FA8 TBNZ X8, 0x0, 0x3AA9FC0
	0x03AA9FAC ADRP X0, 0x672000
	0x03AA9FB0 LDR X0, [X0 + 0x8F8]
	0x03AA9FB4 BL 0x1C16CF4
	0x03AA9FB8 MOVZ W8, 0x1
	0x03AA9FBC STRB W8, [X21 + 0x41C]
	0x03AA9FC0 LDR X0, [X20]
	0x03AA9FC4 LDR X20, [X19 + 0xE0]
	0x03AA9FC8 LDR W8, [X0 + 0xE0]
	0x03AA9FCC CBNZ W8, 0x3AA9FD4
	0x03AA9FD0 BL 0x1C16DFC
	0x03AA9FD4 MOV X0, X20
	0x03AA9FD8 MOV X1, X31
	0x03AA9FDC BL 0x39E1DF8
	0x03AA9FE0 LDR X0, [X19 + 0xE8]
	0x03AA9FE4 LDP X20, X19, [X31 + 0x10]
	0x03AA9FE8 MOV X1, X31
	0x03AA9FEC LDP X30, X21, [X31], #0x20
	0x03AA9FF0 B 0x39E1DF8
	0x03AA9FF4 STP X29, X30, [X31 - 0x60]!
	0x03AA9FF8 STP X28, X27, [X31 + 0x10]
	0x03AA9FFC STP X26, X25, [X31 + 0x20]
	0x03AAA000 STP X24, X23, [X31 + 0x30]
	0x03AAA004 STP X22, X21, [X31 + 0x40]
	0x03AAA008 STP X20, X19, [X31 + 0x50]
	0x03AAA00C ADRP X23, 0x938000
	0x03AAA010 ADRP X24, 0x6AC000
	0x03AAA014 ADRP X19, 0x6AD000
	0x03AAA018 ADRP X22, 0x6AD000
	0x03AAA01C ADRP X21, 0x6AD000
	0x03AAA020 ADRP X20, 0x6AD000
	0x03AAA024 ADRP X29, 0x6AD000
	0x03AAA028 ADRP X28, 0x6AD000
	0x03AAA02C ADRP X27, 0x6AD000
	0x03AAA030 ADRP X26, 0x6AD000
	0x03AAA034 ADRP X25, 0x6AD000
	0x03AAA038 LDR X24, [X24 + 0x830]
	0x03AAA03C LDR X19, [X19 + 0xC68]
	0x03AAA040 LDR X22, [X22 + 0xCD0]
	0x03AAA044 LDR X21, [X21 + 0xCD8]
	0x03AAA048 LDR X20, [X20 + 0xCE0]
	0x03AAA04C LDR X29, [X29 + 0xCE8]
	0x03AAA050 LDR X28, [X28 + 0xCF0]
	0x03AAA054 LDR X27, [X27 + 0xCF8]
	0x03AAA058 LDR X26, [X26 + 0xD00]
	0x03AAA05C LDR X25, [X25 + 0xD08]
	0x03AAA060 LDRB W8, [X23 + 0x41E]
	0x03AAA064 TBNZ X8, 0x0, 0x3AAA19C
	0x03AAA068 ADRP X0, 0x6AD000
	0x03AAA06C LDR X0, [X0 + 0xC68]
	0x03AAA070 BL 0x1C16CF4
	0x03AAA074 ADRP X0, 0x6AD000
	0x03AAA078 LDR X0, [X0 + 0xCD0]
	0x03AAA07C BL 0x1C16CF4
	0x03AAA080 ADRP X0, 0x6AD000
	0x03AAA084 LDR X0, [X0 + 0xCE8]
	0x03AAA088 BL 0x1C16CF4
	0x03AAA08C ADRP X0, 0x6AD000
	0x03AAA090 LDR X0, [X0 + 0xD10]
	0x03AAA094 BL 0x1C16CF4
	0x03AAA098 ADRP X0, 0x6AD000
	0x03AAA09C LDR X0, [X0 + 0xCF0]
	0x03AAA0A0 BL 0x1C16CF4
	0x03AAA0A4 ADRP X0, 0x6AD000
	0x03AAA0A8 LDR X0, [X0 + 0xD00]
	0x03AAA0AC BL 0x1C16CF4
	0x03AAA0B0 ADRP X0, 0x6AD000
	0x03AAA0B4 LDR X0, [X0 + 0xCF8]
	0x03AAA0B8 BL 0x1C16CF4
	0x03AAA0BC ADRP X0, 0x6AD000
	0x03AAA0C0 LDR X0, [X0 + 0xD18]
	0x03AAA0C4 BL 0x1C16CF4
	0x03AAA0C8 ADRP X0, 0x6AD000
	0x03AAA0CC LDR X0, [X0 + 0xD20]
	0x03AAA0D0 BL 0x1C16CF4
	0x03AAA0D4 ADRP X0, 0x6AD000
	0x03AAA0D8 LDR X0, [X0 + 0xD28]
	0x03AAA0DC BL 0x1C16CF4
	0x03AAA0E0 ADRP X0, 0x6AD000
	0x03AAA0E4 LDR X0, [X0 + 0xD30]
	0x03AAA0E8 BL 0x1C16CF4
	0x03AAA0EC ADRP X0, 0x6AD000
	0x03AAA0F0 LDR X0, [X0 + 0xD38]
	0x03AAA0F4 BL 0x1C16CF4
	0x03AAA0F8 ADRP X0, 0x6AD000
	0x03AAA0FC LDR X0, [X0 + 0xCE0]
	0x03AAA100 BL 0x1C16CF4
	0x03AAA104 ADRP X0, 0x6AD000
	0x03AAA108 LDR X0, [X0 + 0xD40]
	0x03AAA10C BL 0x1C16CF4
	0x03AAA110 ADRP X0, 0x6AD000
	0x03AAA114 LDR X0, [X0 + 0xD48]
	0x03AAA118 BL 0x1C16CF4
	0x03AAA11C ADRP X0, 0x6AC000
	0x03AAA120 LDR X0, [X0 + 0x830]
	0x03AAA124 BL 0x1C16CF4
	0x03AAA128 ADRP X0, 0x6AD000
	0x03AAA12C LDR X0, [X0 + 0xD50]
	0x03AAA130 BL 0x1C16CF4
	0x03AAA134 ADRP X0, 0x6AD000
	0x03AAA138 LDR X0, [X0 + 0xD58]
	0x03AAA13C BL 0x1C16CF4
	0x03AAA140 ADRP X0, 0x6AD000
	0x03AAA144 LDR X0, [X0 + 0xD60]
	0x03AAA148 BL 0x1C16CF4
	0x03AAA14C ADRP X0, 0x6AD000
	0x03AAA150 LDR X0, [X0 + 0xD68]
	0x03AAA154 BL 0x1C16CF4
	0x03AAA158 ADRP X0, 0x6AD000
	0x03AAA15C LDR X0, [X0 + 0xD70]
	0x03AAA160 BL 0x1C16CF4
	0x03AAA164 ADRP X0, 0x6AD000
	0x03AAA168 LDR X0, [X0 + 0xD08]
	0x03AAA16C BL 0x1C16CF4
	0x03AAA170 ADRP X0, 0x6AD000
	0x03AAA174 LDR X0, [X0 + 0xCD8]
	0x03AAA178 BL 0x1C16CF4
	0x03AAA17C ADRP X0, 0x6AD000
	0x03AAA180 LDR X0, [X0 + 0xD78]
	0x03AAA184 BL 0x1C16CF4
	0x03AAA188 ADRP X0, 0x6AD000
	0x03AAA18C LDR X0, [X0 + 0xD80]
	0x03AAA190 BL 0x1C16CF4
	0x03AAA194 MOVZ W8, 0x1
	0x03AAA198 STRB W8, [X23 + 0x41E]
	0x03AAA19C LDR X0, [X24]
	0x03AAA1A0 MOV X1, X31
	0x03AAA1A4 BL 0x3C124EC
	0x03AAA1A8 LDR X8, [X19]
	0x03AAA1AC MOV X1, X31
	0x03AAA1B0 LDR X8, [X8 + 0xB8]
	0x03AAA1B4 STR W0, [X8]
	0x03AAA1B8 LDR X0, [X22]
	0x03AAA1BC BL 0x3C124EC
	0x03AAA1C0 LDR X8, [X19]
	0x03AAA1C4 MOV X1, X31
	0x03AAA1C8 LDR X8, [X8 + 0xB8]
	0x03AAA1CC STR W0, [X8 + 0x4]
	0x03AAA1D0 LDR X0, [X21]
	0x03AAA1D4 BL 0x3C124EC
	0x03AAA1D8 LDR X8, [X19]
	0x03AAA1DC MOV X1, X31
	0x03AAA1E0 LDR X8, [X8 + 0xB8]
	0x03AAA1E4 STR W0, [X8 + 0x8]
	0x03AAA1E8 LDR X0, [X20]
	0x03AAA1EC BL 0x3C124EC
	0x03AAA1F0 LDR X8, [X19]
	0x03AAA1F4 MOV X1, X31
	0x03AAA1F8 LDR X8, [X8 + 0xB8]
	0x03AAA1FC STR W0, [X8 + 0xC]
	0x03AAA200 LDR X0, [X29]
	0x03AAA204 BL 0x3C124EC
	0x03AAA208 LDR X8, [X19]
	0x03AAA20C MOV X1, X31
	0x03AAA210 LDR X8, [X8 + 0xB8]
	0x03AAA214 STR W0, [X8 + 0x10]
	0x03AAA218 LDR X0, [X28]
	0x03AAA21C BL 0x3C124EC
	0x03AAA220 LDR X8, [X19]
	0x03AAA224 MOV X1, X31
	0x03AAA228 LDR X8, [X8 + 0xB8]
	0x03AAA22C STR W0, [X8 + 0x14]
	0x03AAA230 LDR X0, [X27]
	0x03AAA234 BL 0x3C124EC
	0x03AAA238 LDR X8, [X19]
	0x03AAA23C MOV X1, X31
	0x03AAA240 LDR X8, [X8 + 0xB8]
	0x03AAA244 STR W0, [X8 + 0x18]
	0x03AAA248 LDR X0, [X26]
	0x03AAA24C BL 0x3C124EC
	0x03AAA250 LDR X8, [X19]
	0x03AAA254 MOV X1, X31
	0x03AAA258 LDR X8, [X8 + 0xB8]
	0x03AAA25C STR W0, [X8 + 0x1C]
	0x03AAA260 LDR X0, [X25]
	0x03AAA264 BL 0x3C124EC
	0x03AAA268 LDR X8, [X19]
	0x03AAA26C MOV X1, X31
	0x03AAA270 LDR X8, [X8 + 0xB8]
	0x03AAA274 STR W0, [X8 + 0x20]
	0x03AAA278 ADRP X8, 0x6AD000
	0x03AAA27C LDR X8, [X8 + 0xD50]
	0x03AAA280 LDR X0, [X8]
	0x03AAA284 BL 0x3C124EC
	0x03AAA288 LDR X8, [X19]
	0x03AAA28C MOV X1, X31
	0x03AAA290 LDR X8, [X8 + 0xB8]
	0x03AAA294 STR W0, [X8 + 0x24]
	0x03AAA298 ADRP X8, 0x6AD000
	0x03AAA29C LDR X8, [X8 + 0xD60]
	0x03AAA2A0 LDR X0, [X8]
	0x03AAA2A4 BL 0x3C124EC
	0x03AAA2A8 LDR X8, [X19]
	0x03AAA2AC MOV X1, X31
	0x03AAA2B0 LDR X8, [X8 + 0xB8]
	0x03AAA2B4 STR W0, [X8 + 0x28]
	0x03AAA2B8 ADRP X8, 0x6AD000
	0x03AAA2BC LDR X8, [X8 + 0xD70]
	0x03AAA2C0 LDR X0, [X8]
	0x03AAA2C4 BL 0x3C124EC
	0x03AAA2C8 LDR X8, [X19]
	0x03AAA2CC MOV X1, X31
	0x03AAA2D0 LDR X8, [X8 + 0xB8]
	0x03AAA2D4 STR W0, [X8 + 0x2C]
	0x03AAA2D8 ADRP X8, 0x6AD000
	0x03AAA2DC LDR X8, [X8 + 0xD20]
	0x03AAA2E0 LDR X0, [X8]
	0x03AAA2E4 BL 0x3C124EC
	0x03AAA2E8 LDR X8, [X19]
	0x03AAA2EC MOV X1, X31
	0x03AAA2F0 LDR X8, [X8 + 0xB8]
	0x03AAA2F4 STR W0, [X8 + 0x30]
	0x03AAA2F8 ADRP X8, 0x6AD000
	0x03AAA2FC LDR X8, [X8 + 0xD30]
	0x03AAA300 LDR X0, [X8]
	0x03AAA304 BL 0x3C124EC
	0x03AAA308 LDR X8, [X19]
	0x03AAA30C MOV X1, X31
	0x03AAA310 LDR X8, [X8 + 0xB8]
	0x03AAA314 STR W0, [X8 + 0x34]
	0x03AAA318 ADRP X8, 0x6AD000
	0x03AAA31C LDR X8, [X8 + 0xD58]
	0x03AAA320 LDR X0, [X8]
	0x03AAA324 BL 0x3C124EC
	0x03AAA328 LDR X8, [X19]
	0x03AAA32C MOV X1, X31
	0x03AAA330 LDR X8, [X8 + 0xB8]
	0x03AAA334 STR W0, [X8 + 0x38]
	0x03AAA338 ADRP X8, 0x6AD000
	0x03AAA33C LDR X8, [X8 + 0xD48]
	0x03AAA340 LDR X0, [X8]
	0x03AAA344 BL 0x3C124EC
	0x03AAA348 LDR X8, [X19]
	0x03AAA34C MOV X1, X31
	0x03AAA350 LDR X8, [X8 + 0xB8]
	0x03AAA354 STR W0, [X8 + 0x3C]
	0x03AAA358 ADRP X8, 0x6AD000
	0x03AAA35C LDR X8, [X8 + 0xD18]
	0x03AAA360 LDR X0, [X8]
	0x03AAA364 BL 0x3C124EC
	0x03AAA368 LDR X8, [X19]
	0x03AAA36C MOV X1, X31
	0x03AAA370 LDR X8, [X8 + 0xB8]
	0x03AAA374 STR W0, [X8 + 0x40]
	0x03AAA378 ADRP X8, 0x6AD000
	0x03AAA37C LDR X8, [X8 + 0xD38]
	0x03AAA380 LDR X0, [X8]
	0x03AAA384 BL 0x3C124EC
	0x03AAA388 LDR X8, [X19]
	0x03AAA38C MOV X1, X31
	0x03AAA390 LDR X8, [X8 + 0xB8]
	0x03AAA394 STR W0, [X8 + 0x44]
	0x03AAA398 ADRP X8, 0x6AD000
	0x03AAA39C LDR X8, [X8 + 0xD68]
	0x03AAA3A0 LDR X0, [X8]
	0x03AAA3A4 BL 0x3C124EC
	0x03AAA3A8 LDR X8, [X19]
	0x03AAA3AC MOV X1, X31
	0x03AAA3B0 LDR X8, [X8 + 0xB8]
	0x03AAA3B4 STR W0, [X8 + 0x48]
	0x03AAA3B8 ADRP X8, 0x6AD000
	0x03AAA3BC LDR X8, [X8 + 0xD78]
	0x03AAA3C0 LDR X0, [X8]
	0x03AAA3C4 BL 0x3C124EC
	0x03AAA3C8 LDR X8, [X19]
	0x03AAA3CC MOV X1, X31
	0x03AAA3D0 LDR X8, [X8 + 0xB8]
	0x03AAA3D4 STR W0, [X8 + 0x4C]
	0x03AAA3D8 ADRP X8, 0x6AD000
	0x03AAA3DC LDR X8, [X8 + 0xD10]
	0x03AAA3E0 LDR X0, [X8]
	0x03AAA3E4 BL 0x3C124EC
	0x03AAA3E8 LDR X8, [X19]
	0x03AAA3EC MOV X1, X31
	0x03AAA3F0 LDR X8, [X8 + 0xB8]
	0x03AAA3F4 STR W0, [X8 + 0x50]
	0x03AAA3F8 ADRP X8, 0x6AD000
	0x03AAA3FC LDR X8, [X8 + 0xD80]
	0x03AAA400 LDR X0, [X8]
	0x03AAA404 BL 0x3C124EC
	0x03AAA408 LDR X8, [X19]
	0x03AAA40C MOV X1, X31
	0x03AAA410 LDR X8, [X8 + 0xB8]
	0x03AAA414 STR W0, [X8 + 0x54]
	0x03AAA418 ADRP X8, 0x6AD000
	0x03AAA41C LDR X8, [X8 + 0xD40]
	0x03AAA420 LDR X0, [X8]
	0x03AAA424 BL 0x3C124EC
	0x03AAA428 LDR X8, [X19]
	0x03AAA42C MOV X1, X31
	0x03AAA430 LDR X8, [X8 + 0xB8]
	0x03AAA434 STR W0, [X8 + 0x58]
	0x03AAA438 ADRP X8, 0x6AD000
	0x03AAA43C LDR X8, [X8 + 0xD28]
	0x03AAA440 LDR X0, [X8]
	0x03AAA444 BL 0x3C124EC
	0x03AAA448 LDR X8, [X19]
	0x03AAA44C LDP X20, X19, [X31 + 0x50]
	0x03AAA450 LDP X22, X21, [X31 + 0x40]
	0x03AAA454 LDP X24, X23, [X31 + 0x30]
	0x03AAA458 LDR X8, [X8 + 0xB8]
	0x03AAA45C LDP X26, X25, [X31 + 0x20]
	0x03AAA460 LDP X28, X27, [X31 + 0x10]
	0x03AAA464 STR W0, [X8 + 0x5C]
	0x03AAA468 LDP X29, X30, [X31], #0x60
	0x03AAA46C RET
	0x03AAA470 STR X30, [X31 - 0x20]!
	0x03AAA474 STP X20, X19, [X31 + 0x10]
	0x03AAA478 ADRP X19, 0x938000
	0x03AAA47C ADRP X20, 0x6AD000
	0x03AAA480 LDRB W8, [X19 + 0x41F]
	0x03AAA484 LDR X20, [X20 + 0xCC0]
	0x03AAA488 TBNZ X8, 0x0, 0x3AAA4A0
	0x03AAA48C ADRP X0, 0x6AD000
	0x03AAA490 LDR X0, [X0 + 0xCC0]
	0x03AAA494 BL 0x1C16CF4
	0x03AAA498 MOVZ W8, 0x1
	0x03AAA49C STRB W8, [X19 + 0x41F]
	0x03AAA4A0 LDR X0, [X20]
	0x03AAA4A4 BL 0x1C16F10
	0x03AAA4A8 MOV X1, X31
	0x03AAA4AC MOV X19, X0
	0x03AAA4B0 BL 0x33BDD8C
	0x03AAA4B4 LDR X8, [X20]
	0x03AAA4B8 LDR X8, [X8 + 0xB8]
	0x03AAA4BC STR X19, [X8]
	0x03AAA4C0 LDP X20, X19, [X31 + 0x10]
	0x03AAA4C4 LDR X30, [X31], #0x20
	0x03AAA4C8 RET
	0x03AAA4CC MOV X1, X31
	0x03AAA4D0 B 0x33BDD8C
	0x03AAA4D4 STP X30, X21, [X31 - 0x20]!
	0x03AAA4D8 STP X20, X19, [X31 + 0x10]
	0x03AAA4DC ADRP X21, 0x938000
	0x03AAA4E0 LDRB W8, [X21 + 0x420]
	0x03AAA4E4 MOV X20, X2
	0x03AAA4E8 MOV X19, X1
	0x03AAA4EC TBNZ X8, 0x0, 0x3AAA504
	0x03AAA4F0 ADRP X0, 0x6A6000
	0x03AAA4F4 LDR X0, [X0 + 0xA88]
	0x03AAA4F8 BL 0x1C16CF4
	0x03AAA4FC MOVZ W8, 0x1
	0x03AAA500 STRB W8, [X21 + 0x420]
	0x03AAA504 CBZ X20, 0x3AAA554
	0x03AAA508 CBZ X19, 0x3AAA554
	0x03AAA50C ADRP X8, 0x6A6000
	0x03AAA510 LDR X8, [X8 + 0xA88]
	0x03AAA514 LDR X0, [X8]
	0x03AAA518 ADD X8, X19, 0x2DC
	0x03AAA51C LDR X20, [X8]
	0x03AAA520 LDR W9, [X0 + 0xE0]
	0x03AAA524 CBNZ W9, 0x3AAA52C
	0x03AAA528 BL 0x1C16DFC
	0x03AAA52C MOV X0, X20
	0x03AAA530 MOV X1, X31
	0x03AAA534 ADD X21, X19, 0x10
	0x03AAA538 BL 0x399A7C4
	0x03AAA53C MOV X1, X19
	0x03AAA540 LDP X20, X19, [X31 + 0x10]
	0x03AAA544 MOV X2, X21
	0x03AAA548 MOV X3, X0
	0x03AAA54C LDP X30, X21, [X31], #0x20
	0x03AAA550 B 0x3AA8A28
	0x03AAA554 BL 0x1C16F20
	0x03AAA558 LDR X0, [X0 + 0x100]
	0x03AAA55C RET
	0x03AAA560 STR X1, [X0 + 0x100]
	0x03AAA564 RET
	0x03AAA568 LDR X0, [X0 + 0x108]
	0x03AAA56C RET
	0x03AAA570 STR X1, [X0 + 0x108]
	0x03AAA574 RET
	0x03AAA578 LDR W0, [X0 + 0x110]
	0x03AAA57C RET
	0x03AAA580 STR W1, [X0 + 0x110]
	0x03AAA584 RET
	0x03AAA588 STR X30, [X31 - 0x50]!
	0x03AAA58C STP X26, X25, [X31 + 0x10]
	0x03AAA590 STP X24, X23, [X31 + 0x20]
	0x03AAA594 STP X22, X21, [X31 + 0x30]
	0x03AAA598 STP X20, X19, [X31 + 0x40]
	0x03AAA59C ADRP X24, 0x938000
	0x03AAA5A0 ADRP X23, 0x6A9000
	0x03AAA5A4 LDRB W8, [X24 + 0x421]
	0x03AAA5A8 LDR X23, [X23 + 0xFF0]
	0x03AAA5AC MOV X21, X3
	0x03AAA5B0 MOV X22, X2
	0x03AAA5B4 MOV W20, W1
	0x03AAA5B8 MOV X19, X0
	0x03AAA5BC TBNZ X8, 0x0, 0x3AAA604
	0x03AAA5C0 ADRP X0, 0x6AD000
	0x03AAA5C4 LDR X0, [X0 + 0xD88]
	0x03AAA5C8 BL 0x1C16CF4
	0x03AAA5CC ADRP X0, 0x6A6000
	0x03AAA5D0 LDR X0, [X0 + 0x598]
	0x03AAA5D4 BL 0x1C16CF4
	0x03AAA5D8 ADRP X0, 0x6A9000
	0x03AAA5DC LDR X0, [X0 + 0xFF0]
	0x03AAA5E0 BL 0x1C16CF4
	0x03AAA5E4 ADRP X0, 0x6AD000
	0x03AAA5E8 LDR X0, [X0 + 0xD90]
	0x03AAA5EC BL 0x1C16CF4
	0x03AAA5F0 ADRP X0, 0x6AD000
	0x03AAA5F4 LDR X0, [X0 + 0xD98]
	0x03AAA5F8 BL 0x1C16CF4
	0x03AAA5FC MOVZ W8, 0x1
	0x03AAA600 STRB W8, [X24 + 0x421]
	0x03AAA604 LDR X0, [X23]
	0x03AAA608 ADRP X26, 0x6A6000
	0x03AAA60C ADRP X23, 0x6AD000
	0x03AAA610 ADRP X25, 0x6AD000
	0x03AAA614 ADRP X24, 0x6AD000
	0x03AAA618 LDR W8, [X0 + 0xE0]
	0x03AAA61C LDR X26, [X26 + 0x598]
	0x03AAA620 LDR X23, [X23 + 0xD98]
	0x03AAA624 LDR X25, [X25 + 0xD88]
	0x03AAA628 LDR X24, [X24 + 0xD90]
	0x03AAA62C CBNZ W8, 0x3AAA634
	0x03AAA630 BL 0x1C16DFC
	0x03AAA634 MOV X0, X19
	0x03AAA638 MOV X1, X31
	0x03AAA63C BL 0x3A4225C
	0x03AAA640 LDR X0, [X26]
	0x03AAA644 BL 0x1C16F10
	0x03AAA648 LDR X1, [X23]
	0x03AAA64C MOV X2, X31
	0x03AAA650 MOV X23, X0
	0x03AAA654 BL 0x39B19AC
	0x03AAA658 STR X23, [X19 + 0x38]
	0x03AAA65C LDR X0, [X25]
	0x03AAA660 BL 0x1C16F10
	0x03AAA664 MOV X1, X31
	0x03AAA668 MOV X23, X0
	0x03AAA66C BL 0x3AAB6FC
	0x03AAA670 STR X23, [X19 + 0x118]
	0x03AAA674 STR X22, [X19 + 0xE8]
	0x03AAA678 STR X21, [X19 + 0xF8]
	0x03AAA67C LDR X0, [X24]
	0x03AAA680 MOV X1, X31
	0x03AAA684 BL 0x3C124EC
	0x03AAA688 STR W0, [X19 + 0xE0]
	0x03AAA68C STR W20, [X19 + 0x10]
	0x03AAA690 STR W31, [X19 + 0xF0]
	0x03AAA694 STRB W31, [X19 + 0x42]
	0x03AAA698 LDP X20, X19, [X31 + 0x40]
	0x03AAA69C LDP X22, X21, [X31 + 0x30]
	0x03AAA6A0 LDP X24, X23, [X31 + 0x20]
	0x03AAA6A4 LDP X26, X25, [X31 + 0x10]
	0x03AAA6A8 LDR X30, [X31], #0x50
	0x03AAA6AC RET
	0x03AAA6B0 STP X30, X21, [X31 - 0x20]!
	0x03AAA6B4 STP X20, X19, [X31 + 0x10]
	0x03AAA6B8 MOVZ W8, 0x1
	0x03AAA6BC MOV X19, X2
	0x03AAA6C0 MOV X21, X1
	0x03AAA6C4 MOV W20, W0
	0x03AAA6C8 STR W8, [X1 + 0x8]
	0x03AAA6CC MOV X0, X1
	0x03AAA6D0 MOV W1, W31
	0x03AAA6D4 MOV X2, X31
	0x03AAA6D8 BL 0x3C22520
	0x03AAA6DC SUB W8, W20, 0x1
	0x03AAA6E0 CMP W8, 0x2
	0x03AAA6E4 B.HI 0x3AAA704
	0x03AAA6E8 ADRP X9, 0xFFFFFFFFFD0ED000
	0x03AAA6EC ADD X9, X9, 0xB58
	0x03AAA6F0 LDR W8, [X9, W8, SXTW]
	0x03AAA6F4 LDP W9, W10, [X21]
	0x03AAA6F8 SDIV W9, W9, W8
	0x03AAA6FC SDIV W8, W10, W8
	0x03AAA700 STP W9, W8, [X21]
	0x03AAA704 CMP W20, 0x0
	0x03AAA708 CSET W8, NE
	0x03AAA70C STR W8, [X19]
	0x03AAA710 LDP X20, X19, [X31 + 0x10]
	0x03AAA714 LDP X30, X21, [X31], #0x20
	0x03AAA718 RET
	0x03AAA71C SUB X31, X31, 0xF0
	0x03AAA720 STR X30, [X31 + 0xB0]
	0x03AAA724 STP X24, X23, [X31 + 0xC0]
	0x03AAA728 STP X22, X21, [X31 + 0xD0]
	0x03AAA72C STP X20, X19, [X31 + 0xE0]
	0x03AAA730 ADRP X24, 0x938000
	0x03AAA734 ADRP X23, 0x6A6000
	0x03AAA738 LDRB W8, [X24 + 0x422]
	0x03AAA73C LDR X23, [X23 + 0x9B0]
	0x03AAA740 MOV W19, W3
	0x03AAA744 MOV X20, X2
	0x03AAA748 MOV X22, X1
	0x03AAA74C MOV X21, X0
	0x03AAA750 TBNZ X8, 0x0, 0x3AAA774
	0x03AAA754 ADRP X0, 0x6A6000
	0x03AAA758 LDR X0, [X0 + 0x9B0]
	0x03AAA75C BL 0x1C16CF4
	0x03AAA760 ADRP X0, 0x6AC000
	0x03AAA764 LDR X0, [X0 + 0xDC0]
	0x03AAA768 BL 0x1C16CF4
	0x03AAA76C MOVZ W8, 0x1
	0x03AAA770 STRB W8, [X24 + 0x422]
	0x03AAA774 LDR X8, [X22 + 0x20]
	0x03AAA778 LDP V1, V0, [X22]
	0x03AAA77C LDR X0, [X23]
	0x03AAA780 ADRP X22, 0x6AC000
	0x03AAA784 STR X8, [X31 + 0xA0]
	0x03AAA788 STP V1, V0, [X31 + 0x80]
	0x03AAA78C LDR W8, [X0 + 0xE0]
	0x03AAA790 LDR X22, [X22 + 0xDC0]
	0x03AAA794 CBNZ W8, 0x3AAA79C
	0x03AAA798 BL 0x1C16DFC
	0x03AAA79C LDP V0, V1, [X31 + 0x80]
	0x03AAA7A0 LDR X8, [X31 + 0xA0]
	0x03AAA7A4 ADD X0, X31, 0x50
	0x03AAA7A8 MOV X1, X31
	0x03AAA7AC STP V0, V1, [X31 + 0x50]
	0x03AAA7B0 STR X8, [X31 + 0x70]
	0x03AAA7B4 BL 0x39D4600
	0x03AAA7B8 STR X0, [X21 + 0x100]
	0x03AAA7BC LDR X0, [X22]
	0x03AAA7C0 LDR W8, [X0 + 0xE0]
	0x03AAA7C4 CBNZ W8, 0x3AAA7CC
	0x03AAA7C8 BL 0x1C16DFC
	0x03AAA7CC ADD X8, X31, 0x28
	0x03AAA7D0 MOV X0, X20
	0x03AAA7D4 MOV X1, X31
	0x03AAA7D8 BL 0x3A74084
	0x03AAA7DC LDUR V0, [X31 + 0x28]
	0x03AAA7E0 LDUR V1, [X31 + 0x38]
	0x03AAA7E4 LDR X8, [X31 + 0x48]
	0x03AAA7E8 ADD X0, X31, 0x0
	0x03AAA7EC MOV X1, X31
	0x03AAA7F0 STP V0, V1, [X31]
	0x03AAA7F4 STR X8, [X31 + 0x20]
	0x03AAA7F8 BL 0x39D4600
	0x03AAA7FC STR X0, [X21 + 0x108]
	0x03AAA800 LDR W8, [X20]
	0x03AAA804 STR W19, [X21 + 0xF0]
	0x03AAA808 LDP X20, X19, [X31 + 0xE0]
	0x03AAA80C LDP X24, X23, [X31 + 0xC0]
	0x03AAA810 STR W8, [X21 + 0x110]
	0x03AAA814 LDP X22, X21, [X31 + 0xD0]
	0x03AAA818 LDR X30, [X31 + 0xB0]
	0x03AAA81C ADD X31, X31, 0xF0
	0x03AAA820 RET
	0x03AAA824 STP X1, X2, [X0 + 0x100]
	0x03AAA828 STR W3, [X0 + 0xF0]
	0x03AAA82C RET
	0x03AAA830 SUB X31, X31, 0x1A0
	0x03AAA834 STP X29, X30, [X31 + 0x170]
	0x03AAA838 STP X22, X21, [X31 + 0x180]
	0x03AAA83C STP X20, X19, [X31 + 0x190]
	0x03AAA840 ADRP X22, 0x938000
	0x03AAA844 LDRB W8, [X22 + 0x423]
	0x03AAA848 MOV X21, X2
	0x03AAA84C MOV X19, X1
	0x03AAA850 MOV X20, X0
	0x03AAA854 TBNZ X8, 0x0, 0x3AAA86C
	0x03AAA858 ADRP X0, 0x649000
	0x03AAA85C LDR X0, [X0 + 0x598]
	0x03AAA860 BL 0x1C16CF4
	0x03AAA864 MOVZ W8, 0x1
	0x03AAA868 STRB W8, [X22 + 0x423]
	0x03AAA86C MOVI V0.2D, 0x0
	0x03AAA870 STR W31, [X31 + 0x160]
	0x03AAA874 STR W31, [X31 + 0x120]
	0x03AAA878 STR W31, [X31 + 0xE0]
	0x03AAA87C STP V0, V0, [X31 + 0x140]
	0x03AAA880 STR V0, [X31 + 0x13]
	0x03AAA884 STP V0, V0, [X31 + 0x100]
	0x03AAA888 STR V0, [X31 + 0xF]
	0x03AAA88C STP V0, V0, [X31 + 0xC0]
	0x03AAA890 STR V0, [X31 + 0xB]
	0x03AAA894 LDR X8, [X20 + 0x108]
	0x03AAA898 CBZ X8, 0x3AAAA5C
	0x03AAA89C ADRP X9, 0x649000
	0x03AAA8A0 LDR X9, [X9 + 0x598]
	0x03AAA8A4 LDR X22, [X8 + 0x18]
	0x03AAA8A8 LDR X0, [X9]
	0x03AAA8AC LDR W9, [X0 + 0xE0]
	0x03AAA8B0 CBNZ W9, 0x3AAA8B8
	0x03AAA8B4 BL 0x1C16DFC
	0x03AAA8B8 MOV X0, X22
	0x03AAA8BC MOV X1, X31
	0x03AAA8C0 MOV X2, X31
	0x03AAA8C4 BL 0x3C3883C
	0x03AAA8C8 TBZ X0, 0x0, 0x3AAA92C
	0x03AAA8CC LDP V1, V0, [X21 + 0x100]
	0x03AAA8D0 LDR W8, [X21 + 0x120]
	0x03AAA8D4 LDR V2, [X21 + 0xF]
	0x03AAA8D8 MOVZ W9, 0x1
	0x03AAA8DC ADD X0, X31, 0x130
	0x03AAA8E0 MOV W1, W31
	0x03AAA8E4 MOV X2, X31
	0x03AAA8E8 STR W8, [X31 + 0x160]
	0x03AAA8EC STP V1, V0, [X31 + 0x140]
	0x03AAA8F0 STR V2, [X31 + 0x13]
	0x03AAA8F4 STR W9, [X31 + 0x138]
	0x03AAA8F8 BL 0x3C22520
	0x03AAA8FC LDR W8, [X20 + 0xF0]
	0x03AAA900 SUB W9, W8, 0x2
	0x03AAA904 CMP W9, 0x2
	0x03AAA908 B.CS 0x3AAA974
	0x03AAA90C LDR W9, [X31 + 0x130]
	0x03AAA910 ADD W10, W9, 0x3
	0x03AAA914 CMP W9, 0x0
	0x03AAA918 CSEL W9, W10, W9, LT
	0x03AAA91C SBFM W9, W9, 0x2, 0x1F
	0x03AAA920 STR W9, [X31 + 0x130]
	0x03AAA924 MOVZ W9, 0x4
	0x03AAA928 B 0x3AAA994
	0x03AAA92C LDR X8, [X20 + 0x108]
	0x03AAA930 CBZ X8, 0x3AAAA5C
	0x03AAA934 LDR X9, [X8 + 0x48]
	0x03AAA938 LDUR V0, [X8 + 0x38]
	0x03AAA93C LDUR V1, [X8 + 0x28]
	0x03AAA940 LDR X1, [X8 + 0x58]
	0x03AAA944 STR X9, [X31 + 0x90]
	0x03AAA948 STP V1, V0, [X31 + 0x70]
	0x03AAA94C CBZ X19, 0x3AAAA5C
	0x03AAA950 LDP V0, V1, [X31 + 0x70]
	0x03AAA954 LDR X8, [X31 + 0x90]
	0x03AAA958 ADD X2, X31, 0x0
	0x03AAA95C MOV X0, X19
	0x03AAA960 MOV X3, X31
	0x03AAA964 STP V0, V1, [X31]
	0x03AAA968 STR X8, [X31 + 0x20]
	0x03AAA96C BL 0x3C4FC28
	0x03AAA970 B 0x3AAAA48
	0x03AAA974 CMP W8, 0x1
	0x03AAA978 B.NE 0x3AAA9A0
	0x03AAA97C LDR W9, [X31 + 0x130]
	0x03AAA980 CMP W9, 0x0
	0x03AAA984 CINC W9, W9, LT
	0x03AAA988 SBFM W9, W9, 0x1, 0x1F
	0x03AAA98C STR W9, [X31 + 0x130]
	0x03AAA990 MOVZ W9, 0x2
	0x03AAA994 LDR W10, [X31 + 0x134]
	0x03AAA998 SDIV W9, W10, W9
	0x03AAA99C STR W9, [X31 + 0x134]
	0x03AAA9A0 LDR W1, [X20 + 0x110]
	0x03AAA9A4 LDP V0, V1, [X31 + 0x130]
	0x03AAA9A8 LDR V2, [X31 + 0x15]
	0x03AAA9AC LDR W9, [X31 + 0x160]
	0x03AAA9B0 STP V0, V1, [X31 + 0x70]
	0x03AAA9B4 STR V2, [X31 + 0x9]
	0x03AAA9B8 STR W9, [X31 + 0xA0]
	0x03AAA9BC CBZ W8, 0x3AAA9E4
	0x03AAA9C0 LDP V0, V1, [X31 + 0x70]
	0x03AAA9C4 LDR V2, [X31 + 0x9]
	0x03AAA9C8 LDR W9, [X31 + 0xA0]
	0x03AAA9CC ADD X8, X31, 0xB0
	0x03AAA9D0 STP V0, V1, [X31 + 0xB0]
	0x03AAA9D4 STR V2, [X31 + 0xD]
	0x03AAA9D8 STR W9, [X31 + 0xE0]
	0x03AAA9DC MOVZ W3, 0x1
	0x03AAA9E0 B 0x3AAAA04
	0x03AAA9E4 LDP V0, V1, [X31 + 0x70]
	0x03AAA9E8 LDR V2, [X31 + 0x9]
	0x03AAA9EC LDR W9, [X31 + 0xA0]
	0x03AAA9F0 MOV W3, W31
	0x03AAA9F4 ADD X8, X31, 0xF0
	0x03AAA9F8 STP V0, V1, [X31 + 0xF0]
	0x03AAA9FC STR V2, [X31 + 0x11]
	0x03AAAA00 STR W9, [X31 + 0x120]
	0x03AAAA04 LDR W9, [X8 + 0x30]
	0x03AAAA08 LDP V1, V0, [X8 + 0x10]
	0x03AAAA0C LDR V2, [X8]
	0x03AAAA10 STR W9, [X31 + 0xA0]
	0x03AAAA14 STP V1, V0, [X31 + 0x80]
	0x03AAAA18 STR V2, [X31 + 0x7]
	0x03AAAA1C CBZ X19, 0x3AAAA5C
	0x03AAAA20 LDP V0, V1, [X31 + 0x70]
	0x03AAAA24 LDR V2, [X31 + 0x9]
	0x03AAAA28 LDR W8, [X31 + 0xA0]
	0x03AAAA2C ADD X2, X31, 0x30
	0x03AAAA30 MOV X0, X19
	0x03AAAA34 MOV X4, X31
	0x03AAAA38 STP V0, V1, [X31 + 0x30]
	0x03AAAA3C STR V2, [X31 + 0x5]
	0x03AAAA40 STR W8, [X31 + 0x60]
	0x03AAAA44 BL 0x3C4CB34
	0x03AAAA48 LDP X20, X19, [X31 + 0x190]
	0x03AAAA4C LDP X22, X21, [X31 + 0x180]
	0x03AAAA50 LDP X29, X30, [X31 + 0x170]
	0x03AAAA54 ADD X31, X31, 0x1A0
	0x03AAAA58 RET
	0x03AAAA5C BL 0x1C16F20
	0x03AAAA60 STP D11, D10, [X31 - 0x60]!
	0x03AAAA64 STP D9, D8, [X31 + 0x10]
	0x03AAAA68 STP X30, X25, [X31 + 0x20]
	0x03AAAA6C STP X24, X23, [X31 + 0x30]
	0x03AAAA70 STP X22, X21, [X31 + 0x40]
	0x03AAAA74 STP X20, X19, [X31 + 0x50]
	0x03AAAA78 ADRP X21, 0x938000
	0x03AAAA7C LDRB W8, [X21 + 0x424]
	0x03AAAA80 MOV X19, X2
	0x03AAAA84 MOV X20, X0
	0x03AAAA88 TBNZ X8, 0x0, 0x3AAAAAC
	0x03AAAA8C ADRP X0, 0x6A9000
	0x03AAAA90 LDR X0, [X0 + 0xFF0]
	0x03AAAA94 BL 0x1C16CF4
	0x03AAAA98 ADRP X0, 0x6AA000
	0x03AAAA9C LDR X0, [X0 + 0x8C8]
	0x03AAAAA0 BL 0x1C16CF4
	0x03AAAAA4 MOVZ W8, 0x1
	0x03AAAAA8 STRB W8, [X21 + 0x424]
	0x03AAAAAC LDR X8, [X20 + 0x118]
	0x03AAAAB0 CBZ X8, 0x3AAABFC
	0x03AAAAB4 LDR X9, [X20 + 0xE8]
	0x03AAAAB8 STR X9, [X8 + 0x30]
	0x03AAAABC LDR X9, [X20 + 0xF8]
	0x03AAAAC0 STR X9, [X8 + 0x38]
	0x03AAAAC4 LDR W9, [X20 + 0xF0]
	0x03AAAAC8 STR W9, [X8 + 0x40]
	0x03AAAACC LDR W9, [X20 + 0xCC]
	0x03AAAAD0 STR W9, [X8 + 0x44]
	0x03AAAAD4 LDR V0, [X20 + 0xD]
	0x03AAAAD8 STUR V0, [X8 + 0x48]
	0x03AAAADC LDR X8, [X20 + 0x118]
	0x03AAAAE0 CBZ X8, 0x3AAABFC
	0x03AAAAE4 LDR W9, [X20 + 0xE0]
	0x03AAAAE8 STR W9, [X8 + 0x58]
	0x03AAAAEC LDR X0, [X19 + 0x1D0]
	0x03AAAAF0 CBZ X0, 0x3AAABFC
	0x03AAAAF4 LDR X8, [X0]
	0x03AAAAF8 LDR X21, [X19]
	0x03AAAAFC LDR X22, [X20 + 0x100]
	0x03AAAB00 LDP X9, X2, [X8 + 0x198]
	0x03AAAB04 MOV X1, X21
	0x03AAAB08 BLR X9
	0x03AAAB0C CMP X22, X0
	0x03AAAB10 B.NE 0x3AAAB28
	0x03AAAB14 LDR X0, [X19 + 0x1D0]
	0x03AAAB18 CBZ X0, 0x3AAABFC
	0x03AAAB1C MOV X1, X31
	0x03AAAB20 BL 0x3A44BD0
	0x03AAAB24 STR X0, [X20 + 0x100]
	0x03AAAB28 LDR X0, [X19 + 0x190]
	0x03AAAB2C CBZ X0, 0x3AAABFC
	0x03AAAB30 MOV X1, X31
	0x03AAAB34 BL 0x3984C98
	0x03AAAB38 TBZ X0, 0x0, 0x3AAAB54
	0x03AAAB3C LDR X0, [X19 + 0x190]
	0x03AAAB40 CBZ X0, 0x3AAABFC
	0x03AAAB44 MOV X1, X31
	0x03AAAB48 BL 0x398841C
	0x03AAAB4C MOV W22, W0
	0x03AAAB50 B 0x3AAAB58
	0x03AAAB54 MOV W22, W31
	0x03AAAB58 ADRP X24, 0x6A9000
	0x03AAAB5C LDR X24, [X24 + 0xFF0]
	0x03AAAB60 ADRP X25, 0x6AA000
	0x03AAAB64 LDR X23, [X20 + 0x108]
	0x03AAAB68 LDR X0, [X24]
	0x03AAAB6C LDR W8, [X0 + 0xE0]
	0x03AAAB70 LDR X25, [X25 + 0x8C8]
	0x03AAAB74 CBNZ W8, 0x3AAAB80
	0x03AAAB78 BL 0x1C16DFC
	0x03AAAB7C LDR X0, [X24]
	0x03AAAB80 LDR X8, [X0 + 0xB8]
	0x03AAAB84 LDR X0, [X25]
	0x03AAAB88 LDR W24, [X20 + 0xCC]
	0x03AAAB8C LDP S10, S8, [X20 + 0xD0]
	0x03AAAB90 LDR X25, [X8]
	0x03AAAB94 LDR W8, [X0 + 0xE0]
	0x03AAAB98 LDP S11, S9, [X20 + 0xD8]
	0x03AAAB9C CBNZ W8, 0x3AAABA4
	0x03AAABA0 BL 0x1C16DFC
	0x03AAABA4 MOV X0, X21
	0x03AAABA8 MOV X1, X23
	0x03AAABAC MOV X2, X25
	0x03AAABB0 MOV W3, W24
	0x03AAABB4 MOV V0.16B, V10.16B
	0x03AAABB8 MOV V1.16B, V8.16B
	0x03AAABBC MOV V2.16B, V11.16B
	0x03AAABC0 MOV V3.16B, V9.16B
	0x03AAABC4 MOV X4, X31
	0x03AAABC8 BL 0x3A51204
	0x03AAABCC LDR X0, [X20 + 0x118]
	0x03AAABD0 LDP X1, X2, [X20 + 0x100]
	0x03AAABD4 AND W5, W22, 0x1
	0x03AAABD8 MOV X3, X19
	0x03AAABDC LDP X20, X19, [X31 + 0x50]
	0x03AAABE0 LDP X22, X21, [X31 + 0x40]
	0x03AAABE4 LDP X24, X23, [X31 + 0x30]
	0x03AAABE8 LDP X30, X25, [X31 + 0x20]
	0x03AAABEC LDP D9, D8, [X31 + 0x10]
	0x03AAABF0 MOV W4, W31
	0x03AAABF4 LDP D11, D10, [X31], #0x60
	0x03AAABF8 B 0x3AAAC00
	0x03AAABFC BL 0x1C16F20
	0x03AAAC00 STP D11, D10, [X31 - 0x80]!
	0x03AAAC04 STP D9, D8, [X31 + 0x10]
	0x03AAAC08 STR X30, [X31 + 0x20]
	0x03AAAC0C STP X28, X27, [X31 + 0x30]
	0x03AAAC10 STP X26, X25, [X31 + 0x40]
	0x03AAAC14 STP X24, X23, [X31 + 0x50]
	0x03AAAC18 STP X22, X21, [X31 + 0x60]
	0x03AAAC1C STP X20, X19, [X31 + 0x70]
	0x03AAAC20 ADRP X22, 0x938000
	0x03AAAC24 LDRB W8, [X22 + 0x425]
	0x03AAAC28 MOV W26, W5
	0x03AAAC2C MOV X21, X3
	0x03AAAC30 MOV X19, X2
	0x03AAAC34 MOV X20, X1
	0x03AAAC38 MOV X24, X0
	0x03AAAC3C TBNZ X8, 0x0, 0x3AAACA8
	0x03AAAC40 ADRP X0, 0x6A8000
	0x03AAAC44 LDR X0, [X0 + 0xE28]
	0x03AAAC48 BL 0x1C16CF4

ISIL:
	001 Move [X31-160], D15
	002 Move [X31-152], D14
	003 Move [X31+16], D13
	004 Move [X31+24], D12
	005 Move [X31+32], D11
	006 Move [X31+40], D10
	007 Move [X31+48], D9
	008 Move [X31+56], D8
	009 Move [X31+64], X29
	010 Move [X31+72], X30
	011 Move [X31+80], X28
	012 Move [X31+88], X27
	013 Move [X31+96], X26
	014 Move [X31+104], X25
	015 Move [X31+112], X24
	016 Move [X31+120], X23
	017 Move [X31+128], X22
	018 Move [X31+136], X21
	019 Move [X31+144], X20
	020 Move [X31+152], X19
	021 Subtract X31, X31, 368
	022 Move X20, 0x93A000
	023 Move W8, [X20+1050]
	024 Move X19, X2
	025 Move X22, X1
	026 Move [X31+152], X3
	027 Move TEMP, X8
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfEqual {84}
	031 Move X0, 0x6AA000
	032 Move X0, [X0+3624]
	033 Call 0x1C17CF4
	034 Move X0, 0x6AB000
	035 Move X0, [X0+1120]
	036 Call 0x1C17CF4
	037 Move X0, 0x6AC000
	038 Move X0, [X0+168]
	039 Call 0x1C17CF4
	040 Move X0, 0x6AF000
	041 Move X0, [X0+3176]
	042 Call 0x1C17CF4
	043 Move X0, 0x6AC000
	044 Move X0, [X0+32]
	045 Call 0x1C17CF4
	046 Move X0, 0x674000
	047 Move X0, [X0+2216]
	048 Call 0x1C17CF4
	049 Move X0, 0x675000
	050 Move X0, [X0+4032]
	051 Call 0x1C17CF4
	052 Move X0, 0x6AF000
	053 Move X0, [X0+3184]
	054 Call 0x1C17CF4
	055 Move X0, 0x6AE000
	056 Move X0, [X0+1416]
	057 Call 0x1C17CF4
	058 Move X0, 0x6AF000
	059 Move X0, [X0+3192]
	060 Call 0x1C17CF4
	061 Move X0, 0x6AF000
	062 Move X0, [X0+3200]
	063 Call 0x1C17CF4
	064 Move X0, 0x6AF000
	065 Move X0, [X0+3208]
	066 Call 0x1C17CF4
	067 Move X0, 0x6AF000
	068 Move X0, [X0+3216]
	069 Call 0x1C17CF4
	070 Move X0, 0x6AE000
	071 Move X0, [X0+1128]
	072 Call 0x1C17CF4
	073 Move X0, 0x6AF000
	074 Move X0, [X0+3224]
	075 Call 0x1C17CF4
	076 Move X0, 0x6AE000
	077 Move X0, [X0+1752]
	078 Call 0x1C17CF4
	079 Move X0, 0x6AE000
	080 Move X0, [X0+1768]
	081 Call 0x1C17CF4
	082 Move W8, 1
	083 Move [X20+1050], W8
	084 Move [X31+360], W31
	085 Move [X31+344], X31
	086 Move [X31+352], X31
	087 Move [X31+328], X31
	088 Move [X31+336], X31
	089 Move [X31+312], X31
	090 Move [X31+320], X31
	091 Move [X31+296], X31
	092 Move [X31+304], X31
	093 Move [X31+280], X31
	094 Move [X31+288], X31
	095 Compare X22, 0
	096 JumpIfEqual {1069}
	097 Move X8, 0x6AC000
	098 Move X8, [X8+168]
	099 Move W9, [X22+728]
	100 Move X20, 0x675000
	101 Move X24, [X19]
	102 Move X1, [X8]
	103 Move [X31+20], W9
	104 Move X23, [X22+712]
	105 Move X21, [X22+720]
	106 Move X20, [X20+4032]
	107 Move W0, 4
	108 Call 0x2236BC0, X0
	109 Move X2, X0
	110 Add X0, X31, 360
	111 Move X1, X24
	112 Move X3, X31
	113 Move [X31+224], X24
	114 Call ProfilingScope..ctor, X0, X1, X2
	115 Move X0, [X20]
	116 Move W8, [X0+224]
	117 Compare W8, 0
	118 JumpIfNotEqual {120}
	119 Call 0x1C17DFC
	120 Move X0, X31
	121 Call VolumeManager.get_instance
	122 Compare X0, 0
	123 JumpIfEqual {1070}
	124 Move X22, [X0+16]
	125 Compare X22, 0
	126 JumpIfEqual {1071}
	127 Move X8, 0x6AF000
	128 Move X8, [X8+3184]
	129 Move X1, [X8]
	130 Move X0, X22
	131 Call 0x22ADD04, X0
	132 Move X8, 0x6AE000
	133 Move X8, [X8+1416]
	134 Move X29, X0
	135 Move X1, [X8]
	136 Move X0, X22
	137 Call 0x22ADD04, X0
	138 Move X8, 0x6AF000
	139 Move X8, [X8+3192]
	140 Move X25, X0
	141 Move X1, [X8]
	142 Move X0, X22
	143 Call 0x22ADD04, X0
	144 Move X8, 0x6AF000
	145 Move X8, [X8+3200]
	146 Move X24, X0
	147 Move X1, [X8]
	148 Move X0, X22
	149 Call 0x22ADD04, X0
	150 Move X8, 0x6AF000
	151 Move X8, [X8+3208]
	152 Move X27, X0
	153 Move X1, [X8]
	154 Move X0, X22
	155 Call 0x22ADD04, X0
	156 Move X8, 0x6AF000
	157 Move X8, [X8+3216]
	158 Move X28, X0
	159 Move X1, [X8]
	160 Move X0, X22
	161 Call 0x22ADD04, X0
	162 Move X8, 0x6AE000
	163 Move X8, [X8+1128]
	164 Move X26, X0
	165 Move X1, [X8]
	166 Move X0, X22
	167 Call 0x22ADD04, X0
	168 Move [X31+136], X0
	169 Move X8, 0x6AF000
	170 Move X8, [X8+3224]
	171 Move X1, [X8]
	172 Move X0, X22
	173 Call 0x22ADD04, X0
	174 Move W8, [X19+672]
	175 Move X20, X0
	176 NotImplemented "Instruction CMP not yet implemented."
	177 NotImplemented "Instruction CSEL not yet implemented."
	178 Move [X31+148], W8
	179 Compare X0, 0
	180 JumpIfEqual {1072}
	181 Move X0, [X20+56]
	182 Compare X0, 0
	183 JumpIfEqual {1073}
	184 Move X8, [X0]
	185 Move X1, [X8+544]
	186 Move X9, [X8+536]
	187 NotImplemented "Instruction BLR not yet implemented."
	188 Move X0, [X20+64]
	189 Compare X0, 0
	190 JumpIfEqual {1074}
	191 Move X8, [X0]
	192 Move V8, V0
	193 Move X1, [X8+544]
	194 Move X9, [X8+536]
	195 NotImplemented "Instruction BLR not yet implemented."
	196 Move X8, 0x6AB000
	197 Move X8, [X8+1120]
	198 Move V9, V0
	199 Move X0, [X8]
	200 Move W8, [X0+224]
	201 Compare W8, 0
	202 JumpIfNotEqual {204}
	203 Call 0x1C17DFC
	204 Move V0, V8
	205 Move V1, V9
	206 Move X0, X31
	207 Call ColorUtils.ColorBalanceToLMSCoeffs, V0, V1
	208 Compare X25, 0
	209 JumpIfEqual {1075}
	210 Move X0, [X25+80]
	211 Compare X0, 0
	212 JumpIfEqual {1076}
	213 Move X8, [X0]
	214 Move V11, V0
	215 Move V12, V1
	216 Move V13, V2
	217 Move X1, [X8+544]
	218 Move X9, [X8+536]
	219 NotImplemented "Instruction BLR not yet implemented."
	220 Move [X31+220], S0
	221 Move X0, [X25+88]
	222 Compare X0, 0
	223 JumpIfEqual {1077}
	224 Move X8, [X0]
	225 Move X1, [X8+544]
	226 Move X9, [X8+536]
	227 NotImplemented "Instruction BLR not yet implemented."
	228 Move [X31+216], S0
	229 Move X0, [X25+64]
	230 Compare X0, 0
	231 JumpIfEqual {1078}
	232 Move X8, [X0]
	233 Move X1, [X8+544]
	234 Move X9, [X8+536]
	235 NotImplemented "Instruction BLR not yet implemented."
	236 Move [X31+212], S0
	237 Compare X29, 0
	238 JumpIfEqual {1079}
	239 Move X0, [X29+56]
	240 Compare X0, 0
	241 JumpIfEqual {1080}
	242 Move X8, [X0]
	243 Move X1, [X8+544]
	244 Move X9, [X8+536]
	245 NotImplemented "Instruction BLR not yet implemented."
	246 Move [X31+208], S0
	247 Move X0, [X29+64]
	248 Compare X0, 0
	249 JumpIfEqual {1081}
	250 Move X8, [X0]
	251 Move X1, [X8+544]
	252 Move X9, [X8+536]
	253 NotImplemented "Instruction BLR not yet implemented."
	254 Move [X31+204], S0
	255 Move X0, [X29+72]
	256 Compare X0, 0
	257 JumpIfEqual {1082}
	258 Move X8, [X0]
	259 Move X1, [X8+544]
	260 Move X9, [X8+536]
	261 NotImplemented "Instruction BLR not yet implemented."
	262 Move [X31+200], S0
	263 Move X0, [X29+80]
	264 Compare X0, 0
	265 JumpIfEqual {1083}
	266 Move X8, [X0]
	267 Move X1, [X8+544]
	268 Move X9, [X8+536]
	269 NotImplemented "Instruction BLR not yet implemented."
	270 Move [X31+196], S0
	271 Move X0, [X29+88]
	272 Compare X0, 0
	273 JumpIfEqual {1084}
	274 Move X8, [X0]
	275 Move X1, [X8+544]
	276 Move X9, [X8+536]
	277 NotImplemented "Instruction BLR not yet implemented."
	278 Move [X31+192], S0
	279 Move X0, [X29+96]
	280 Compare X0, 0
	281 JumpIfEqual {1085}
	282 Move X8, [X0]
	283 Move X1, [X8+544]
	284 Move X9, [X8+536]
	285 NotImplemented "Instruction BLR not yet implemented."
	286 Move [X31+188], S0
	287 Move X0, [X29+104]
	288 Compare X0, 0
	289 JumpIfEqual {1086}
	290 Move X8, [X0]
	291 Move X1, [X8+544]
	292 Move X9, [X8+536]
	293 NotImplemented "Instruction BLR not yet implemented."
	294 Move [X31+184], S0
	295 Move X0, [X29+112]
	296 Compare X0, 0
	297 JumpIfEqual {1087}
	298 Move X8, [X0]
	299 Move X1, [X8+544]
	300 Move X9, [X8+536]
	301 NotImplemented "Instruction BLR not yet implemented."
	302 Move [X31+180], S0
	303 Move X0, [X29+120]
	304 Compare X0, 0
	305 JumpIfEqual {1088}
	306 Move X8, [X0]
	307 Move X1, [X8+544]
	308 Move X9, [X8+536]
	309 NotImplemented "Instruction BLR not yet implemented."
	310 Move [X31+176], S0
	311 Compare X28, 0
	312 JumpIfEqual {1089}
	313 Move X0, [X28+80]
	314 Compare X0, 0
	315 JumpIfEqual {1090}
	316 Move X8, [X0]
	317 Move X1, [X8+544]
	318 Move X9, [X8+536]
	319 NotImplemented "Instruction BLR not yet implemented."
	320 Move [X31+172], S0
	321 Move X0, [X28+88]
	322 Compare X0, 0
	323 JumpIfEqual {1091}
	324 Move X8, [X0]
	325 Move X1, [X8+544]
	326 Move X9, [X8+536]
	327 NotImplemented "Instruction BLR not yet implemented."
	328 Move [X31+168], S0
	329 Move X0, [X28+96]
	330 Compare X0, 0
	331 JumpIfEqual {1092}
	332 Move X8, [X0]
	333 Move X1, [X8+544]
	334 Move X9, [X8+536]
	335 NotImplemented "Instruction BLR not yet implemented."
	336 Move [X31+164], S0
	337 Move X0, [X28+104]
	338 Compare X0, 0
	339 JumpIfEqual {1093}
	340 Move X8, [X0]
	341 Move X1, [X8+544]
	342 Move X9, [X8+536]
	343 NotImplemented "Instruction BLR not yet implemented."
	344 Move [X31+160], S0
	345 Move X0, [X28+56]
	346 Compare X0, 0
	347 JumpIfEqual {1094}
	348 Move X8, [X0]
	349 Move X1, [X8+544]
	350 Move X9, [X8+536]
	351 NotImplemented "Instruction BLR not yet implemented."
	352 Move [X31+344], S0
	353 Move [X31+348], S1
	354 Move [X31+352], S2
	355 Move [X31+356], S3
	356 Move X0, [X28+64]
	357 Compare X0, 0
	358 JumpIfEqual {1095}
	359 Move X8, [X0]
	360 Move X1, [X8+544]
	361 Move X9, [X8+536]
	362 NotImplemented "Instruction BLR not yet implemented."
	363 Move [X31+328], S0
	364 Move [X31+332], S1
	365 Move [X31+336], S2
	366 Move [X31+340], S3
	367 Move X0, [X28+72]
	368 Compare X0, 0
	369 JumpIfEqual {1096}
	370 Move X8, [X0]
	371 Move X1, [X8+544]
	372 Move X9, [X8+536]
	373 NotImplemented "Instruction BLR not yet implemented."
	374 Move [X31+312], S0
	375 Move [X31+316], S1
	376 Move [X31+320], S2
	377 Move [X31+324], S3
	378 Add X8, X31, 232
	379 Add X0, X31, 344
	380 Add X1, X31, 328
	381 Add X2, X31, 312
	382 Move X3, X31
	383 Call ColorUtils.PrepareShadowsMidtonesHighlights, X0, X1, X2
	384 Compare X27, 0
	385 JumpIfEqual {1097}
	386 Move X0, [X27+56]
	387 Compare X0, 0
	388 JumpIfEqual {1098}
	389 Move V1, [X31+232]
	390 Move V0, [X31+236]
	391 Move X8, [X0]
	392 Move [X31+128], S0
	393 Move [X31+136], S1
	394 Move V1, [X31+240]
	395 Move V0, [X31+244]
	396 Move X1, [X8+544]
	397 Move X9, [X8+536]
	398 Move [X31+120], S0
	399 Move [X31+128], S1
	400 Move V1, [X31+248]
	401 Move V0, [X31+252]
	402 Move [X31+112], S0
	403 Move [X31+120], S1
	404 Move V1, [X31+256]
	405 Move V0, [X31+260]
	406 Move [X31+104], S0
	407 Move [X31+112], S1
	408 Move V1, [X31+264]
	409 Move V0, [X31+268]
	410 Move [X31+88], S1
	411 Move [X31+96], S0
	412 Move V1, [X31+272]
	413 Move V0, [X31+276]
	414 Move [X31+96], S1
	415 Move [X31+104], S0
	416 NotImplemented "Instruction BLR not yet implemented."
	417 Move [X31+344], S0
	418 Move [X31+348], S1
	419 Move [X31+352], S2
	420 Move [X31+356], S3
	421 Move X0, [X27+64]
	422 Compare X0, 0
	423 JumpIfEqual {1099}
	424 Move X8, [X0]
	425 Move X1, [X8+544]
	426 Move X9, [X8+536]
	427 NotImplemented "Instruction BLR not yet implemented."
	428 Move [X31+328], S0
	429 Move [X31+332], S1
	430 Move [X31+336], S2
	431 Move [X31+340], S3
	432 Move X0, [X27+72]
	433 Compare X0, 0
	434 JumpIfEqual {1100}
	435 Move X8, [X0]
	436 Move X1, [X8+544]
	437 Move X9, [X8+536]
	438 NotImplemented "Instruction BLR not yet implemented."
	439 Move [X31+312], S0
	440 Move [X31+316], S1
	441 Move [X31+320], S2
	442 Move [X31+324], S3
	443 Add X8, X31, 232
	444 Add X0, X31, 344
	445 Add X1, X31, 328
	446 Add X2, X31, 312
	447 Move X3, X31
	448 Call ColorUtils.PrepareLiftGammaGain, X0, X1, X2
	449 Compare X26, 0
	450 JumpIfEqual {1101}
	451 Move X0, [X26+56]
	452 Compare X0, 0
	453 JumpIfEqual {1102}
	454 Move V1, [X31+248]
	455 Move V0, [X31+252]
	456 Move X8, [X0]
	457 Move S8, [X31+232]
	458 Move S9, [X31+236]
	459 Move S10, [X31+240]
	460 Move S15, [X31+244]
	461 Move [X31+80], S0
	462 Move [X31+88], S1
	463 Move V1, [X31+256]
	464 Move V0, [X31+260]
	465 Move X1, [X8+544]
	466 Move X9, [X8+536]
	467 Move [X31+72], S0
	468 Move [X31+80], S1
	469 Move V1, [X31+264]
	470 Move V0, [X31+268]
	471 Move [X31+56], S1
	472 Move [X31+64], S0
	473 Move V1, [X31+272]
	474 Move V0, [X31+276]
	475 Move [X31+64], S1
	476 Move [X31+72], S0
	477 NotImplemented "Instruction BLR not yet implemented."
	478 Move [X31+344], S0
	479 Move [X31+348], S1
	480 Move [X31+352], S2
	481 Move [X31+356], S3
	482 Move X0, [X26+64]
	483 Compare X0, 0
	484 JumpIfEqual {1103}
	485 Move X8, [X0]
	486 Move X1, [X8+544]
	487 Move X9, [X8+536]
	488 NotImplemented "Instruction BLR not yet implemented."
	489 Move [X31+328], S0
	490 Move [X31+332], S1
	491 Move [X31+336], S2
	492 Move [X31+340], S3
	493 Move X0, [X26+72]
	494 Compare X0, 0
	495 JumpIfEqual {1104}
	496 Move X8, [X0]
	497 Move X1, [X8+544]
	498 Move X9, [X8+536]
	499 NotImplemented "Instruction BLR not yet implemented."
	500 Add X8, X31, 232
	501 Add X0, X31, 344
	502 Add X1, X31, 328
	503 Move X2, X31
	504 Call ColorUtils.PrepareSplitToning, X0, X1, V0
	505 Move X20, 0x6AE000
	506 Move X20, [X20+3176]
	507 Move V1, [X31+232]
	508 Move V0, [X31+236]
	509 Move W21, [X19+676]
	510 Move X0, [X20]
	511 Move [X31+48], S0
	512 Move [X31+56], S1
	513 Move V1, [X31+240]
	514 Move V0, [X31+244]
	515 Move W8, [X0+224]
	516 Move [X31+40], S0
	517 Move [X31+48], S1
	518 Move V1, [X31+248]
	519 Move V0, [X31+252]
	520 Move [X31+24], S1
	521 Move [X31+32], S0
	522 Move V1, [X31+256]
	523 Move V0, [X31+260]
	524 Move [X31+32], S1
	525 Move [X31+40], S0
	526 Compare W8, 0
	527 JumpIfNotEqual {529}
	528 Call 0x1C17DFC
	529 Compare X22, 0
	530 JumpIfEqual {1105}
	531 Move X8, [X20]
	532 Multiply W9, W21, W21
	533 NotImplemented "Instruction SCVTF not yet implemented."
	534 Move S3, -1
	535 Move X8, [X8+184]
	536 NotImplemented "Instruction SCVTF not yet implemented."
	537 Move S2, 0.5
	538 Add S3, S0, S3
	539 Move W1, [X8]
	540 NotImplemented "Instruction FDIV not yet implemented."
	541 NotImplemented "Instruction FDIV not yet implemented."
	542 NotImplemented "Instruction FDIV not yet implemented."
	543 Move X0, X22
	544 Move X2, X31
	545 Call Material.SetVector, X0, X1, X2
	546 Move X8, [X20]
	547 Move X8, [X8+184]
	548 Move W1, [X8+4]
	549 Move S3, W31
	550 Move X0, X22
	551 Move V0, V11
	552 Move V1, V12
	553 Move V2, V13
	554 Move X2, X31
	555 Call Material.SetVector, X0, X1, X2
	556 Move X0, [X25+72]
	557 Compare X0, 0
	558 JumpIfEqual {1106}
	559 Move X8, [X20]
	560 Move X9, [X0]
	561 Move X8, [X8+184]
	562 Move X1, [X9+544]
	563 Move X10, [X9+536]
	564 Move W25, [X8+8]
	565 NotImplemented "Instruction BLR not yet implemented."
	566 Move V14, V1
	567 Move V13, V2
	568 Move V11, V3
	569 Move X0, X31
	570 Call Mathf.GammaToLinearSpace, V0
	571 Move V12, V0
	572 Move V0, V14
	573 Move X0, X31
	574 Call Mathf.GammaToLinearSpace, V0
	575 Move V14, V0
	576 Move V0, V13
	577 Move X0, X31
	578 Call Mathf.GammaToLinearSpace, V0
	579 Move V2, V0
	580 Move X0, X22
	581 Move W1, W25
	582 Move V0, V12
	583 Move V1, V14
	584 Move V3, V11
	585 Move X2, X31
	586 Call Material.SetVector, X0, X1, X2
	587 Move X8, [X20]
	588 Move S1, [X31+204]
	589 Move S0, [X31+208]
	590 Move V3, [X31+200]
	591 Move W9, 0x42C80000
	592 Move X8, [X8+184]
	593 Move S2, W9
	594 NotImplemented "Instruction FDIV not yet implemented."
	595 NotImplemented "Instruction FDIV not yet implemented."
	596 Move W1, [X8+12]
	597 NotImplemented "Instruction FDIV not yet implemented."
	598 Move S3, W31
	599 Move X0, X22
	600 Move X2, X31
	601 Call Material.SetVector, X0, X1, X2
	602 Move X8, [X20]
	603 Move S1, [X31+192]
	604 Move S0, [X31+196]
	605 Move V3, [X31+188]
	606 Move W9, 0x42C80000
	607 Move X8, [X8+184]
	608 Move S2, W9
	609 NotImplemented "Instruction FDIV not yet implemented."
	610 NotImplemented "Instruction FDIV not yet implemented."
	611 Move W1, [X8+16]
	612 NotImplemented "Instruction FDIV not yet implemented."
	613 Move S3, W31
	614 Move X0, X22
	615 Move X2, X31
	616 Call Material.SetVector, X0, X1, X2
	617 Move X8, [X20]
	618 Move S1, [X31+180]
	619 Move S0, [X31+184]
	620 Move V3, [X31+176]
	621 Move W9, 0x42C80000
	622 Move X8, [X8+184]
	623 Move S2, W9
	624 NotImplemented "Instruction FDIV not yet implemented."
	625 NotImplemented "Instruction FDIV not yet implemented."
	626 Move W1, [X8+20]
	627 NotImplemented "Instruction FDIV not yet implemented."
	628 Move S3, W31
	629 Move X0, X22
	630 Move X2, X31
	631 Call Material.SetVector, X0, X1, X2
	632 Move X8, [X20]
	633 Move V1, [X31+220]
	634 Move W9, 0x43B40000
	635 Move S0, W9
	636 Move X8, [X8+184]
	637 NotImplemented "Instruction FDIV not yet implemented."
	638 Move S4, [X31+212]
	639 Move S1, [X31+216]
	640 Move W9, 0x42C80000
	641 Move W1, [X8+24]
	642 Move S2, W9
	643 NotImplemented "Instruction FDIV not yet implemented."
	644 Move S3, 1
	645 NotImplemented "Instruction FDIV not yet implemented."
	646 Add S1, S1, S3
	647 Add S2, S2, S3
	648 Move S3, W31
	649 Move X0, X22
	650 Move X2, X31
	651 Call Material.SetVector, X0, X1, X2
	652 Move X8, [X20]
	653 Move X8, [X8+184]
	654 Move W1, [X8+28]
	655 Move X0, X22
	656 Move V0, V8
	657 Move V1, V9
	658 Move V2, V10
	659 Move V3, V15
	660 Move X2, X31
	661 Call Material.SetVector, X0, X1, X2
	662 Move X8, [X20]
	663 Move X8, [X8+184]
	664 Move W1, [X8+32]
	665 Move S1, [X31+80]
	666 Move S0, [X31+84]
	667 Move S3, [X31+72]
	668 Move S2, [X31+76]
	669 Move X0, X22
	670 Move X2, X31
	671 Call Material.SetVector, X0, X1, X2
	672 Move X8, [X20]
	673 Move X8, [X8+184]
	674 Move W1, [X8+36]
	675 Move S0, [X31+56]
	676 Move S1, [X31+60]
	677 Move S2, [X31+64]
	678 Move S3, [X31+68]
	679 Move X0, X22
	680 Move X2, X31
	681 Call Material.SetVector, X0, X1, X2
	682 Move X8, [X20]
	683 Move X8, [X8+184]
	684 Move W1, [X8+40]
	685 Move S1, [X31+128]
	686 Move S0, [X31+132]
	687 Move S3, [X31+120]
	688 Move S2, [X31+124]
	689 Move X0, X22
	690 Move X2, X31
	691 Call Material.SetVector, X0, X1, X2
	692 Move X8, [X20]
	693 Move X8, [X8+184]
	694 Move W1, [X8+44]
	695 Move S1, [X31+112]
	696 Move S0, [X31+116]
	697 Move S3, [X31+104]
	698 Move S2, [X31+108]
	699 Move X0, X22
	700 Move X2, X31
	701 Call Material.SetVector, X0, X1, X2
	702 Move X8, [X20]
	703 Move X8, [X8+184]
	704 Move W1, [X8+48]
	705 Move S0, [X31+88]
	706 Move S1, [X31+92]
	707 Move S2, [X31+96]
	708 Move S3, [X31+100]
	709 Move X0, X22
	710 Move X2, X31
	711 Call Material.SetVector, X0, X1, X2
	712 Move X8, [X20]
	713 Move X8, [X8+184]
	714 Move W1, [X8+52]
	715 Move S1, [X31+168]
	716 Move S0, [X31+172]
	717 Move S3, [X31+160]
	718 Move S2, [X31+164]
	719 Move X0, X22
	720 Move X2, X31
	721 Call Material.SetVector, X0, X1, X2
	722 Move X8, [X20]
	723 Move X8, [X8+184]
	724 Move W1, [X8+56]
	725 Move S1, [X31+48]
	726 Move S0, [X31+52]
	727 Move S3, [X31+40]
	728 Move S2, [X31+44]
	729 Move X0, X22
	730 Move X2, X31
	731 Call Material.SetVector, X0, X1, X2
	732 Move X8, [X20]
	733 Move X8, [X8+184]
	734 Move W1, [X8+60]
	735 Move S0, [X31+24]
	736 Move S1, [X31+28]
	737 Move S2, [X31+32]
	738 Move S3, [X31+36]
	739 Move X0, X22
	740 Move X2, X31
	741 Call Material.SetVector, X0, X1, X2
	742 Compare X24, 0
	743 JumpIfEqual {1107}
	744 Move X0, [X24+56]
	745 Compare X0, 0
	746 JumpIfEqual {1108}
	747 Move X8, [X20]
	748 Move X9, [X0]
	749 Move X8, [X8+184]
	750 Move X1, [X9+544]
	751 Move X10, [X9+536]
	752 Move W25, [X8+64]
	753 NotImplemented "Instruction BLR not yet implemented."
	754 Compare X0, 0
	755 JumpIfEqual {1109}
	756 Move X1, X31
	757 Call TextureCurve.GetTexture, X0
	758 Move X2, X0
	759 Move X0, X22
	760 Move W1, W25
	761 Move X3, X31
	762 Call Material.SetTexture, X0, X1, X2
	763 Move X0, [X24+64]
	764 Compare X0, 0
	765 JumpIfEqual {1110}
	766 Move X8, [X20]
	767 Move X9, [X0]
	768 Move X8, [X8+184]
	769 Move X1, [X9+544]
	770 Move X10, [X9+536]
	771 Move W25, [X8+68]
	772 NotImplemented "Instruction BLR not yet implemented."
	773 Compare X0, 0
	774 JumpIfEqual {1111}
	775 Move X1, X31
	776 Call TextureCurve.GetTexture, X0
	777 Move X2, X0
	778 Move X0, X22
	779 Move W1, W25
	780 Move X3, X31
	781 Call Material.SetTexture, X0, X1, X2
	782 Move X0, [X24+72]
	783 Compare X0, 0
	784 JumpIfEqual {1112}
	785 Move X8, [X20]
	786 Move X9, [X0]
	787 Move X8, [X8+184]
	788 Move X1, [X9+544]
	789 Move X10, [X9+536]
	790 Move W25, [X8+72]
	791 NotImplemented "Instruction BLR not yet implemented."
	792 Compare X0, 0
	793 JumpIfEqual {1113}
	794 Move X1, X31
	795 Call TextureCurve.GetTexture, X0
	796 Move X2, X0
	797 Move X0, X22
	798 Move W1, W25
	799 Move X3, X31
	800 Call Material.SetTexture, X0, X1, X2
	801 Move X0, [X24+80]
	802 Compare X0, 0
	803 JumpIfEqual {1114}
	804 Move X8, [X20]
	805 Move X9, [X0]
	806 Move X8, [X8+184]
	807 Move X1, [X9+544]
	808 Move X10, [X9+536]
	809 Move W25, [X8+76]
	810 NotImplemented "Instruction BLR not yet implemented."
	811 Compare X0, 0
	812 JumpIfEqual {1115}
	813 Move X1, X31
	814 Call TextureCurve.GetTexture, X0
	815 Move X2, X0
	816 Move X0, X22
	817 Move W1, W25
	818 Move X3, X31
	819 Call Material.SetTexture, X0, X1, X2
	820 Move X0, [X24+88]
	821 Compare X0, 0
	822 JumpIfEqual {1116}
	823 Move X8, [X20]
	824 Move X9, [X0]
	825 Move X8, [X8+184]
	826 Move X1, [X9+544]
	827 Move X10, [X9+536]
	828 Move W25, [X8+80]
	829 NotImplemented "Instruction BLR not yet implemented."
	830 Compare X0, 0
	831 JumpIfEqual {1117}
	832 Move X1, X31
	833 Call TextureCurve.GetTexture, X0
	834 Move X2, X0
	835 Move X0, X22
	836 Move W1, W25
	837 Move X3, X31
	838 Call Material.SetTexture, X0, X1, X2
	839 Move X0, [X24+96]
	840 Compare X0, 0
	841 JumpIfEqual {1118}
	842 Move X8, [X20]
	843 Move X9, [X0]
	844 Move X8, [X8+184]
	845 Move X1, [X9+544]
	846 Move X10, [X9+536]
	847 Move W25, [X8+84]
	848 NotImplemented "Instruction BLR not yet implemented."
	849 Compare X0, 0
	850 JumpIfEqual {1119}
	851 Move X1, X31
	852 Call TextureCurve.GetTexture, X0
	853 Move X2, X0
	854 Move X0, X22
	855 Move W1, W25
	856 Move X3, X31
	857 Call Material.SetTexture, X0, X1, X2
	858 Move X0, [X24+112]
	859 Compare X0, 0
	860 JumpIfEqual {1120}
	861 Move X8, [X20]
	862 Move X9, [X0]
	863 Move X8, [X8+184]
	864 Move X1, [X9+544]
	865 Move X10, [X9+536]
	866 Move W25, [X8+88]
	867 NotImplemented "Instruction BLR not yet implemented."
	868 Compare X0, 0
	869 JumpIfEqual {1121}
	870 Move X1, X31
	871 Call TextureCurve.GetTexture, X0
	872 Move X2, X0
	873 Move X0, X22
	874 Move W1, W25
	875 Move X3, X31
	876 Call Material.SetTexture, X0, X1, X2
	877 Move X0, [X24+104]
	878 Compare X0, 0
	879 JumpIfEqual {1122}
	880 Move X8, [X20]
	881 Move X9, [X0]
	882 Move X8, [X8+184]
	883 Move X1, [X9+544]
	884 Move X10, [X9+536]
	885 Move W24, [X8+92]
	886 NotImplemented "Instruction BLR not yet implemented."
	887 Compare X0, 0
	888 JumpIfEqual {1123}
	889 Move X1, X31
	890 Call TextureCurve.GetTexture, X0
	891 Move X2, X0
	892 Move X0, X22
	893 Move W1, W24
	894 Move X3, X31
	895 Call Material.SetTexture, X0, X1, X2
	896 Move W8, [X31+148]
	897 NotImplemented "Instruction CMP not yet implemented."
	898 Move X0, X22
	899 Move X1, X31
	900 Move X2, X31
	901 Call Material.set_shaderKeywords, X0, X1
	902 Move X8, [X31+136]
	903 Compare X8, 0
	904 JumpIfEqual {1127}
	905 Move X0, [X8+56]
	906 Compare X0, 0
	907 JumpIfEqual {1128}
	908 Move X8, [X0]
	909 Move X1, [X8+544]
	910 Move X9, [X8+536]
	911 NotImplemented "Instruction BLR not yet implemented."
	912 NotImplemented "Instruction CMP not yet implemented."
	913 NotImplemented "Instruction CMP not yet implemented."
	914 Move X8, 0x6AD000
	915 Move X9, 0x6AD000
	916 Move X8, [X8+1768]
	917 Move X9, [X9+1752]
	918 Move W10, [X31+20]
	919 NotImplemented "Instruction CMP not yet implemented."
	920 NotImplemented "Instruction CSEL not yet implemented."
	921 Move X1, [X8]
	922 Move X0, X22
	923 Move X2, X31
	924 Call Material.EnableKeyword, X0, X1
	925 Move X8, 0x6AD000
	926 Move X8, [X8+1768]
	927 Move X1, [X8]
	928 Move X0, X22
	929 Move X2, X31
	930 Call Material.EnableKeyword, X0, X1
	931 Add X24, X19, 24
	932 Move X0, X24
	933 Move X1, X31
	934 Call CameraData.get_isHDROutputActive, X0
	935 Move TEMP, X0
	936 And TEMP, TEMP, 1
	937 Compare TEMP, 1
	938 JumpIfNotEqual {1001}
	939 Move X0, X24
	940 Move X1, X31
	941 Call CameraData.get_hdrDisplayInformation, X0
	942 Move X25, X0
	943 Move X26, X1
	944 Move X0, X24
	945 Move X1, X31
	946 Call CameraData.get_hdrDisplayColorGamut, X0
	947 Move X8, 0x673000
	948 Move X8, [X8+2216]
	949 Move W27, W0
	950 Move X0, [X8]
	951 Move W8, [X0+224]
	952 Compare W8, 0
	953 JumpIfNotEqual {955}
	954 Call 0x1C17DFC
	955 Move X3, [X31+136]
	956 Add X4, X31, 296
	957 Move X0, X25
	958 Move X1, X26
	959 Move W2, W27
	960 Move X5, X31
	961 Call UniversalRenderPipeline.GetHDROutputLuminanceParameters, X0, X1, X2, X3
	962 Move X0, [X31+136]
	963 Add X1, X31, 280
	964 Move X2, X31
	965 Call UniversalRenderPipeline.GetHDROutputGradingParameters, X0, X1
	966 Move X20, 0x6AB000
	967 Move X20, [X20+32]
	968 Move X0, [X20]
	969 Move W8, [X0+224]
	970 Compare W8, 0
	971 JumpIfNotEqual {974}
	972 Call 0x1C17DFC
	973 Move X0, [X20]
	974 Move X8, [X0+184]
	975 Move V0, [X31+296]
	976 Move V1, [X31+300]
	977 Move V2, [X31+304]
	978 Move W1, [X8+204]
	979 Move V3, [X31+308]
	980 Move X0, X22
	981 Move X2, X31
	982 Call Material.SetVector, X0, X1, X2
	983 Move X8, [X20]
	984 Move V0, [X31+280]
	985 Move V1, [X31+284]
	986 Move V2, [X31+288]
	987 Move X8, [X8+184]
	988 Move V3, [X31+292]
	989 Move W1, [X8+208]
	990 Move X0, X22
	991 Move X2, X31
	992 Call Material.SetVector, X0, X1, X2
	993 Move X0, X24
	994 Move X1, X31
	995 Call CameraData.get_hdrDisplayColorGamut, X0
	996 Move W1, W0
	997 Move W2, 1
	998 Move X0, X22
	999 Move X3, X31
	1000 Call HDROutputUtils.ConfigureHDROutput, X0, X1, X2
	1001 Move X0, [X19+400]
	1002 Compare X0, 0
	1003 JumpIfEqual {1124}
	1004 Move X1, [X31+224]
	1005 Move X2, X31
	1006 Call XRPass.StopSinglePass, X0, X1
	1007 Move X0, [X19+400]
	1008 Compare X0, 0
	1009 JumpIfEqual {1125}
	1010 Move X1, X31
	1011 Call XRPass.get_supportsFoveatedRendering, X0
	1012 Move TEMP, X0
	1013 And TEMP, TEMP, 1
	1014 Compare TEMP, 1
	1015 JumpIfNotEqual {1022}
	1016 Move X0, [X31+224]
	1017 Compare X0, 0
	1018 JumpIfEqual {1129}
	1019 Move W1, W31
	1020 Move X2, X31
	1021 Call CommandBuffer.SetFoveatedRenderingMode, X0, X1
	1022 Move X8, 0x6A9000
	1023 Move X8, [X8+3624]
	1024 Move X0, [X8]
	1025 Move W8, [X0+224]
	1026 Compare W8, 0
	1027 JumpIfNotEqual {1029}
	1028 Call 0x1C17DFC
	1029 Move X1, [X31+152]
	1030 Move X0, [X31+224]
	1031 Move W3, 2
	1032 Move W4, W31
	1033 Move X2, X1
	1034 Move X5, X22
	1035 Move W6, W31
	1036 Move X7, X31
	1037 Call Blitter.BlitCameraTexture, X0, X1, X2, X3, X4, X5, X6
	1038 Move X0, [X19+400]
	1039 Compare X0, 0
	1040 JumpIfEqual {1126}
	1041 Move X1, [X31+224]
	1042 Move X2, X31
	1043 Call XRPass.StartSinglePass, X0, X1
	1044 Add X0, X31, 360
	1045 Move X1, X31
	1046 Call ProfilingScope.Dispose, X0
	1047 Add X31, X31, 368
	1048 Move X20, [X31+144]
	1049 Move X19, [X31+152]
	1050 Move X22, [X31+128]
	1051 Move X21, [X31+136]
	1052 Move X24, [X31+112]
	1053 Move X23, [X31+120]
	1054 Move X26, [X31+96]
	1055 Move X25, [X31+104]
	1056 Move X28, [X31+80]
	1057 Move X27, [X31+88]
	1058 Move X29, [X31+64]
	1059 Move X30, [X31+72]
	1060 Move D9, [X31+48]
	1061 Move D8, [X31+56]
	1062 Move D11, [X31+32]
	1063 Move D10, [X31+40]
	1064 Move D13, [X31+16]
	1065 Move D12, [X31+24]
	1066 Move D15, [X31+160]
	1067 Move D14, [X31+168]
	1068 Return 
	1069 Call 0x1C17F20
	1070 Call 0x1C17F20
	1071 Call 0x1C17F20
	1072 Call 0x1C17F20
	1073 Call 0x1C17F20
	1074 Call 0x1C17F20
	1075 Call 0x1C17F20
	1076 Call 0x1C17F20
	1077 Call 0x1C17F20
	1078 Call 0x1C17F20
	1079 Call 0x1C17F20
	1080 Call 0x1C17F20
	1081 Call 0x1C17F20
	1082 Call 0x1C17F20
	1083 Call 0x1C17F20
	1084 Call 0x1C17F20
	1085 Call 0x1C17F20
	1086 Call 0x1C17F20
	1087 Call 0x1C17F20
	1088 Call 0x1C17F20
	1089 Call 0x1C17F20
	1090 Call 0x1C17F20
	1091 Call 0x1C17F20
	1092 Call 0x1C17F20
	1093 Call 0x1C17F20
	1094 Call 0x1C17F20
	1095 Call 0x1C17F20
	1096 Call 0x1C17F20
	1097 Call 0x1C17F20
	1098 Call 0x1C17F20
	1099 Call 0x1C17F20
	1100 Call 0x1C17F20
	1101 Call 0x1C17F20
	1102 Call 0x1C17F20
	1103 Call 0x1C17F20
	1104 Call 0x1C17F20
	1105 Call 0x1C17F20
	1106 Call 0x1C17F20
	1107 Call 0x1C17F20
	1108 Call 0x1C17F20
	1109 Call 0x1C17F20
	1110 Call 0x1C17F20
	1111 Call 0x1C17F20
	1112 Call 0x1C17F20
	1113 Call 0x1C17F20
	1114 Call 0x1C17F20
	1115 Call 0x1C17F20
	1116 Call 0x1C17F20
	1117 Call 0x1C17F20
	1118 Call 0x1C17F20
	1119 Call 0x1C17F20
	1120 Call 0x1C17F20
	1121 Call 0x1C17F20
	1122 Call 0x1C17F20
	1123 Call 0x1C17F20
	1124 Call 0x1C17F20
	1125 Call 0x1C17F20
	1126 Call 0x1C17F20
	1127 Call 0x1C17F20
	1128 Call 0x1C17F20
	1129 Call 0x1C17F20
	1130 Move X19, X0
	1131 Move X19, X0
	1132 NotImplemented "Instruction CMP not yet implemented."
	1133 Move X0, X19
	1134 Call 0x3EB2AD0
	1135 Move X20, [X0]
	1136 Call 0x3EB2AE0
	1137 Add X0, X31, 360
	1138 Move X1, X31
	1139 Call ProfilingScope.Dispose, X0
	1140 Compare X20, 0
	1141 JumpIfEqual {1047}
	1142 Move X0, X20
	1143 Call 0x1C17F18
	1144 Move X20, X31
	1145 Move X19, X0
	1146 Add X0, X31, 360
	1147 Move X1, X31
	1148 Call ProfilingScope.Dispose, X0
	1149 Compare X20, 0
	1150 JumpIfNotEqual {1153}
	1151 Move X0, X19
	1152 Call 0x1D2D690
	1153 Move X0, X20
	1154 Call 0x1C17F18
	1155 Call 0x1991590

Method: System.Void Render(UnityEngine.Experimental.Rendering.RenderGraphModule.RenderGraph renderGraph, out UnityEngine.Experimental.Rendering.RenderGraphModule.TextureHandle internalColorLut, ref UnityEngine.Rendering.Universal.RenderingData renderingData)

Disassembly:
	0x03AAAC4C ADRP X0, 0x649000
	0x03AAAC50 LDR X0, [X0 + 0xA28]
	0x03AAAC54 BL 0x1C16CF4
	0x03AAAC58 ADRP X0, 0x649000
	0x03AAAC5C LDR X0, [X0 + 0x9D0]
	0x03AAAC60 BL 0x1C16CF4
	0x03AAAC64 ADRP X0, 0x649000
	0x03AAAC68 LDR X0, [X0 + 0x598]
	0x03AAAC6C BL 0x1C16CF4
	0x03AAAC70 ADRP X0, 0x6AA000
	0x03AAAC74 LDR X0, [X0 + 0xA8]
	0x03AAAC78 BL 0x1C16CF4
	0x03AAAC7C ADRP X0, 0x6A9000
	0x03AAAC80 LDR X0, [X0 + 0xFF0]
	0x03AAAC84 BL 0x1C16CF4
	0x03AAAC88 ADRP X0, 0x6AA000
	0x03AAAC8C LDR X0, [X0 + 0x8C8]
	0x03AAAC90 BL 0x1C16CF4
	0x03AAAC94 ADRP X0, 0x6AD000
	0x03AAAC98 LDR X0, [X0 + 0xDA0]
	0x03AAAC9C BL 0x1C16CF4
	0x03AAACA0 MOVZ W8, 0x1
	0x03AAACA4 STRB W8, [X22 + 0x425]
	0x03AAACA8 STRB W31, [X31 + 0x28]
	0x03AAACAC CBZ X24, 0x3AAAF8C
	0x03AAACB0 LDP X23, X22, [X24 + 0x30]
	0x03AAACB4 LDP W28, W25, [X24 + 0x40]
	0x03AAACB8 LDP S8, S9, [X24 + 0x48]
	0x03AAACBC LDP S10, S11, [X24 + 0x50]
	0x03AAACC0 LDR W24, [X24 + 0x58]
	0x03AAACC4 TBZ X26, 0x0, 0x3AAACDC
	0x03AAACC8 LDR X0, [X21]
	0x03AAACCC CBZ X0, 0x3AAAF8C
	0x03AAACD0 MOV W1, W31
	0x03AAACD4 MOV X2, X31
	0x03AAACD8 BL 0x3C4D910
	0x03AAACDC ADRP X8, 0x649000
	0x03AAACE0 LDR X8, [X8 + 0x598]
	0x03AAACE4 LDR X0, [X8]
	0x03AAACE8 LDR W8, [X0 + 0xE0]
	0x03AAACEC CBNZ W8, 0x3AAACF4
	0x03AAACF0 BL 0x1C16DFC
	0x03AAACF4 MOV X0, X23
	0x03AAACF8 MOV X1, X31
	0x03AAACFC MOV X2, X31
	0x03AAAD00 BL 0x3C3883C
	0x03AAAD04 TBZ X0, 0x0, 0x3AAAD7C
	0x03AAAD08 ADRP X8, 0x649000
	0x03AAAD0C LDR X8, [X8 + 0x9D0]
	0x03AAAD10 MOVZ W1, 0x1
	0x03AAAD14 LDR X0, [X8]
	0x03AAAD18 BL 0x1C16D6C
	0x03AAAD1C CBZ X0, 0x3AAAF8C
	0x03AAAD20 MOV X19, X0
	0x03AAAD24 CBZ X23, 0x3AAAD3C
	0x03AAAD28 LDR X8, [X19]
	0x03AAAD2C MOV X0, X23
	0x03AAAD30 LDR X1, [X8 + 0x40]
	0x03AAAD34 BL 0x1C16E00
	0x03AAAD38 CBZ X0, 0x3AAAF94
	0x03AAAD3C LDR W8, [X19 + 0x18]
	0x03AAAD40 CBZ W8, 0x3AAAF90
	0x03AAAD44 STR X23, [X19 + 0x20]
	0x03AAAD48 ADRP X8, 0x649000
	0x03AAAD4C LDR X8, [X8 + 0xA28]
	0x03AAAD50 LDR X0, [X8]
	0x03AAAD54 LDR W8, [X0 + 0xE0]
	0x03AAAD58 CBNZ W8, 0x3AAAD60
	0x03AAAD5C BL 0x1C16DFC
	0x03AAAD60 ADRP X8, 0x6AD000
	0x03AAAD64 LDR X8, [X8 + 0xDA0]
	0x03AAAD68 MOV X1, X19
	0x03AAAD6C MOV X2, X31
	0x03AAAD70 LDR X0, [X8]
	0x03AAAD74 BL 0x3C066BC
	0x03AAAD78 B 0x3AAAF68
	0x03AAAD7C ADRP X8, 0x6AA000
	0x03AAAD80 LDR X26, [X21]
	0x03AAAD84 LDR X8, [X8 + 0xA8]
	0x03AAAD88 MOVZ W0, 0x5
	0x03AAAD8C LDR X1, [X8]
	0x03AAAD90 BL 0x2235BC0
	0x03AAAD94 MOV X2, X0
	0x03AAAD98 ADD X0, X31, 0x28
	0x03AAAD9C MOV X1, X26
	0x03AAADA0 MOV X3, X31
	0x03AAADA4 BL 0x39B1DB0
	0x03AAADA8 ADRP X27, 0x6A9000
	0x03AAADAC LDR X27, [X27 + 0xFF0]
	0x03AAADB0 LDR X26, [X21]
	0x03AAADB4 LDR X0, [X27]
	0x03AAADB8 LDR W8, [X0 + 0xE0]
	0x03AAADBC CBNZ W8, 0x3AAADC8
	0x03AAADC0 BL 0x1C16DFC
	0x03AAADC4 LDR X0, [X27]
	0x03AAADC8 ADRP X8, 0x6AA000
	0x03AAADCC LDR X8, [X8 + 0x8C8]
	0x03AAADD0 LDR X9, [X0 + 0xB8]
	0x03AAADD4 LDR X8, [X8]
	0x03AAADD8 LDR X27, [X9]
	0x03AAADDC LDR W10, [X8 + 0xE0]
	0x03AAADE0 CBNZ W10, 0x3AAADEC
	0x03AAADE4 MOV X0, X8
	0x03AAADE8 BL 0x1C16DFC
	0x03AAADEC MOV X0, X26
	0x03AAADF0 MOV X1, X19
	0x03AAADF4 MOV X2, X27
	0x03AAADF8 MOV W3, W25
	0x03AAADFC MOV V0.16B, V8.16B
	0x03AAAE00 MOV V1.16B, V9.16B
	0x03AAAE04 MOV V2.16B, V10.16B
	0x03AAAE08 MOV V3.16B, V11.16B
	0x03AAAE0C MOV X4, X31
	0x03AAAE10 BL 0x3A51204
	0x03AAAE14 CMP W28, 0x3
	0x03AAAE18 B.HI 0x3AAAF5C
	0x03AAAE1C ADRP X9, 0xFFFFFFFFFD0ED000
	0x03AAAE20 MOV W8, W28
	0x03AAAE24 ADD X9, X9, 0xB52
	0x03AAAE28 ADR X10, 0x10
	0x03AAAE2C LDRB W11, [X9, X8, LSL]
	0x03AAAE30 ADD X10, X10, X11, 0x2, LSL
	0x03AAAE34 BR X10
	0x03AAAE38 ADRP X8, 0x6A8000
	0x03AAAE3C LDR X8, [X8 + 0xE28]
	0x03AAAE40 LDR X21, [X21]
	0x03AAAE44 LDR X0, [X8]
	0x03AAAE48 LDR W8, [X0 + 0xE0]
	0x03AAAE4C CBNZ W8, 0x3AAAE54
	0x03AAAE50 BL 0x1C16DFC
	0x03AAAE54 MOVZ W3, 0x2
	0x03AAAE58 MOV X0, X21
	0x03AAAE5C MOV X1, X20
	0x03AAAE60 MOV X2, X19
	0x03AAAE64 MOV W4, W31
	0x03AAAE68 MOV X5, X22
	0x03AAAE6C MOV W6, W31
	0x03AAAE70 MOV X7, X31
	0x03AAAE74 BL 0x39E3120
	0x03AAAE78 B 0x3AAAF5C
	0x03AAAE7C CBZ X23, 0x3AAAFA0
	0x03AAAE80 FMOV S0, 2
	0x03AAAE84 MOV X0, X23
	0x03AAAE88 MOV W1, W24
	0x03AAAE8C MOV X2, X31
	0x03AAAE90 BL 0x3C15CD8
	0x03AAAE94 ADRP X8, 0x6A8000
	0x03AAAE98 LDR X8, [X8 + 0xE28]
	0x03AAAE9C LDR X21, [X21]
	0x03AAAEA0 LDR X0, [X8]
	0x03AAAEA4 LDR W8, [X0 + 0xE0]
	0x03AAAEA8 CBNZ W8, 0x3AAAEB0
	0x03AAAEAC BL 0x1C16DFC
	0x03AAAEB0 MOVZ W3, 0x2
	0x03AAAEB4 MOV X0, X21
	0x03AAAEB8 MOV X1, X20
	0x03AAAEBC MOV X2, X19
	0x03AAAEC0 MOV W4, W31
	0x03AAAEC4 MOV X5, X23
	0x03AAAEC8 MOV W6, W31
	0x03AAAECC MOV X7, X31
	0x03AAAED0 BL 0x39E3120
	0x03AAAED4 B 0x3AAAF5C
	0x03AAAED8 ADRP X8, 0x6A8000
	0x03AAAEDC LDR X8, [X8 + 0xE28]
	0x03AAAEE0 LDR X21, [X21]
	0x03AAAEE4 LDR X0, [X8]
	0x03AAAEE8 LDR W8, [X0 + 0xE0]
	0x03AAAEEC CBNZ W8, 0x3AAAEF4
	0x03AAAEF0 BL 0x1C16DFC
	0x03AAAEF4 MOVZ W3, 0x2
	0x03AAAEF8 MOVZ W6, 0x1
	0x03AAAEFC MOV X0, X21
	0x03AAAF00 MOV X1, X20
	0x03AAAF04 MOV X2, X19
	0x03AAAF08 MOV W4, W31
	0x03AAAF0C MOV X5, X22
	0x03AAAF10 MOV X7, X31
	0x03AAAF14 BL 0x39E3120
	0x03AAAF18 B 0x3AAAF5C
	0x03AAAF1C ADRP X8, 0x6A8000
	0x03AAAF20 LDR X8, [X8 + 0xE28]
	0x03AAAF24 LDR X21, [X21]
	0x03AAAF28 LDR X0, [X8]
	0x03AAAF2C LDR W8, [X0 + 0xE0]
	0x03AAAF30 CBNZ W8, 0x3AAAF38
	0x03AAAF34 BL 0x1C16DFC
	0x03AAAF38 MOVZ W3, 0x2
	0x03AAAF3C MOVZ W6, 0x1
	0x03AAAF40 MOV X0, X21
	0x03AAAF44 MOV X1, X20
	0x03AAAF48 MOV X2, X19
	0x03AAAF4C MOV W4, W31
	0x03AAAF50 MOV X5, X22
	0x03AAAF54 MOV X7, X31
	0x03AAAF58 BL 0x39E3120
	0x03AAAF5C ADD X0, X31, 0x28
	0x03AAAF60 MOV X1, X31
	0x03AAAF64 BL 0x39B1DB4
	0x03AAAF68 LDP X20, X19, [X31 + 0x70]
	0x03AAAF6C LDP X22, X21, [X31 + 0x60]
	0x03AAAF70 LDP X24, X23, [X31 + 0x50]
	0x03AAAF74 LDP X26, X25, [X31 + 0x40]
	0x03AAAF78 LDP X28, X27, [X31 + 0x30]
	0x03AAAF7C LDR X30, [X31 + 0x20]
	0x03AAAF80 LDP D9, D8, [X31 + 0x10]
	0x03AAAF84 LDP D11, D10, [X31], #0x80
	0x03AAAF88 RET

ISIL:
	001 Subtract X31, X31, 272
	002 Move [X31+208], X29
	003 Move [X31+224], X30
	004 Move [X31+232], X23
	005 Move [X31+240], X22
	006 Move [X31+248], X21
	007 Move [X31+256], X20
	008 Move [X31+264], X19
	009 Move X23, 0x939000
	010 Move W8, [X23+1051]
	011 Move X19, X3
	012 Move X21, X2
	013 Move X22, X1
	014 Move X20, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {45}
	019 Move X0, 0x6AE000
	020 Move X0, [X0+3232]
	021 Call 0x1C17CF4
	022 Move X0, 0x6AE000
	023 Move X0, [X0+3240]
	024 Call 0x1C17CF4
	025 Move X0, 0x6AE000
	026 Move X0, [X0+3248]
	027 Call 0x1C17CF4
	028 Move X0, 0x6AE000
	029 Move X0, [X0+3256]
	030 Call 0x1C17CF4
	031 Move X0, 0x6AE000
	032 Move X0, [X0+3264]
	033 Call 0x1C17CF4
	034 Move X0, 0x6AA000
	035 Move X0, [X0+4088]
	036 Call 0x1C17CF4
	037 Move X0, 0x6AE000
	038 Move X0, [X0+3272]
	039 Call 0x1C17CF4
	040 Move X0, 0x6AB000
	041 Move X0, [X0+2440]
	042 Call 0x1C17CF4
	043 Move W8, 1
	044 Move [X23+1051], W8
	045 NotImplemented "Instruction MOVI not yet implemented."
	046 Move [X31+112], V0
	047 Move [X31+120], V0
	048 Move [X31+216], X31
	049 Compare X22, 0
	050 JumpIfEqual {198}
	051 Move X8, 0x6AE000
	052 Move X9, 0x6AE000
	053 Move X8, [X8+3272]
	054 Move X9, [X9+3248]
	055 Move X3, [X20+56]
	056 Add X2, X31, 216
	057 Move X1, [X8]
	058 Move X4, [X9]
	059 Add X8, X31, 144
	060 Move X0, X22
	061 Call 0x2241F24, X0, X1, X2, X3
	062 Move V0, [X31+144]
	063 Move V1, [X31+160]
	064 Move W9, 244
	065 Move W10, 240
	066 Move [X31+112], V0
	067 Move [X31+120], V1
	068 Move W8, [X19+672]
	069 Move W2, [X19+676]
	070 NotImplemented "Instruction MOVI not yet implemented."
	071 NotImplemented "Instruction CMP not yet implemented."
	072 NotImplemented "Instruction CSEL not yet implemented."
	073 Move W3, [X20]
	074 Multiply W1, W2, W2
	075 Move [X31+192], W31
	076 Move [X31+160], V0
	077 Move [X31+168], V0
	078 Move [X31+9], V0
	079 Add X0, X31, 144
	080 Move W4, W31
	081 Move X5, X31
	082 Call RenderTextureDescriptor..ctor, X0, X1, X2, X3, X4
	083 Move X8, 0x6AA000
	084 Move X8, [X8+4088]
	085 Move V0, [X31+144]
	086 Move V1, [X31+160]
	087 Move X9, [X31+176]
	088 NotImplemented "Instruction LDUR not yet implemented."
	089 Move X0, [X8]
	090 Move [X31+64], V0
	091 Move [X31+72], V1
	092 Move [X31+96], X9
	093 Move [X31+144], V0
	094 Move [X31+152], V1
	095 Move [X31+176], X9
	096 Move W8, [X0+224]
	097 Compare W8, 0
	098 JumpIfNotEqual {100}
	099 Call 0x1C17DFC
	100 Move X8, 0x6AB000
	101 Move X8, [X8+2440]
	102 Move V0, [X31+144]
	103 Move V1, [X31+160]
	104 Move X9, [X31+176]
	105 Move [X31+40], W31
	106 Move X2, [X8]
	107 Move [X31], V0
	108 Move [X31+8], V1
	109 Move [X31+32], X9
	110 Move [X31+44], X23
	111 Add X1, X31, 0
	112 Move W3, 1
	113 Move W5, 1
	114 Move X0, X22
	115 Move W4, W31
	116 Move X6, X31
	117 Call UniversalRenderer.CreateRenderGraphTexture, X0, X1, X2, X3, X4, X5
	118 Move [X21], X0
	119 Move X22, [X31+216]
	120 Add X0, X31, 112
	121 Move X1, X21
	122 Move W2, W31
	123 Move X3, X31
	124 Call RenderGraphBuilder.UseColorBuffer, X0, X1, X2
	125 Compare X22, 0
	126 JumpIfEqual {199}
	127 Add X8, X22, 732
	128 Move [X8], X0
	129 Move X21, [X31+216]
	130 Compare X21, 0
	131 JumpIfEqual {200}
	132 Move V0, [X20+14]
	133 Add X8, X21, 712
	134 Add X0, X21, 16
	135 Move W2, 696
	136 Move X1, X19
	137 Move [X8], V0
	138 Call 0x3EB2B30
	139 Move W8, [X20+264]
	140 Move [X21+728], W8
	141 Add X0, X31, 112
	142 Move W1, W31
	143 Move X2, X31
	144 Call RenderGraphBuilder.AllowPassCulling, X0, X1
	145 Move X21, 0x6AE000
	146 Move X21, [X21+3264]
	147 Move X8, [X21]
	148 Move W9, [X8+224]
	149 Compare W9, 0
	150 JumpIfNotEqual {154}
	151 Move X0, X8
	152 Call 0x1C17DFC
	153 Move X8, [X21]
	154 Move X9, [X8+184]
	155 Move X19, [X9+8]
	156 Compare X19, 0
	157 JumpIfNotEqual {180}
	158 Move W9, [X8+224]
	159 Compare W9, 0
	160 JumpIfNotEqual {164}
	161 Move X0, X8
	162 Call 0x1C17DFC
	163 Move X8, [X21]
	164 Move X9, 0x6AE000
	165 Move X8, [X8+184]
	166 Move X9, [X9+3232]
	167 Move X20, [X8]
	168 Move X0, [X9]
	169 Call 0x1C17F10
	170 Move X8, 0x6AE000
	171 Move X8, [X8+3256]
	172 Move X19, X0
	173 Move X2, [X8]
	174 Move X1, X20
	175 Move X3, X31
	176 Call 0x25C88AC, X0, X1, X2
	177 Move X8, [X21]
	178 Move X8, [X8+184]
	179 Move [X8+8], X19
	180 Move X8, 0x6AE000
	181 Move X8, [X8+3240]
	182 Move X2, [X8]
	183 Add X0, X31, 112
	184 Move X1, X19
	185 Call 0x224207C, X0, X1
	186 Add X0, X31, 112
	187 Move X1, X31
	188 Call RenderGraphBuilder.Dispose, X0
	189 Move X20, [X31+256]
	190 Move X19, [X31+264]
	191 Move X22, [X31+240]
	192 Move X21, [X31+248]
	193 Move X30, [X31+224]
	194 Move X23, [X31+232]
	195 Move X29, [X31+208]
	196 Add X31, X31, 272
	197 Return 
	198 Call 0x1C17F20
	199 Call 0x1C17F20
	200 Call 0x1C17F20
	201 Move X19, X0
	202 NotImplemented "Instruction CMP not yet implemented."
	203 Move X0, X19
	204 Call 0x3EB2AD0
	205 Move X20, [X0]
	206 Call 0x3EB2AE0
	207 Add X0, X31, 112
	208 Move X1, X31
	209 Call RenderGraphBuilder.Dispose, X0
	210 Compare X20, 0
	211 JumpIfEqual {189}
	212 Move X0, X20
	213 Call 0x1C17F18
	214 Move X20, X31
	215 Move X19, X0
	216 Add X0, X31, 112
	217 Move X1, X31
	218 Call RenderGraphBuilder.Dispose, X0
	219 Compare X20, 0
	220 JumpIfNotEqual {223}
	221 Move X0, X19
	222 Call 0x1D2D690
	223 Move X0, X20
	224 Call 0x1C17F18
	225 Call 0x1991590

Method: System.Void Cleanup()

Disassembly:
	0x03AAAF8C BL 0x1C16F20
	0x03AAAF90 BL 0x1C16F28
	0x03AAAF94 BL 0x1C16F44
	0x03AAAF98 MOV X1, X31
	0x03AAAF9C BL 0x1C16DEC
	0x03AAAFA0 BL 0x1C16F20
	0x03AAAFA4 B 0x3AAAFBC
	0x03AAAFA8 B 0x3AAAFBC
	0x03AAAFAC B 0x3AAAFBC
	0x03AAAFB0 B 0x3AAAFBC
	0x03AAAFB4 B 0x3AAAFBC
	0x03AAAFB8 B 0x3AAAFBC
	0x03AAAFBC MOV X19, X0
	0x03AAAFC0 CMP W1, 0x1
	0x03AAAFC4 B.NE 0x3AAAFF0
	0x03AAAFC8 MOV X0, X19
	0x03AAAFCC BL 0x3EB1AD0
	0x03AAAFD0 LDR X20, [X0]
	0x03AAAFD4 BL 0x3EB1AE0
	0x03AAAFD8 ADD X0, X31, 0x28
	0x03AAAFDC MOV X1, X31
	0x03AAAFE0 BL 0x39B1DB4
	0x03AAAFE4 CBZ X20, 0x3AAAF68
	0x03AAAFE8 MOV X0, X20
	0x03AAAFEC BL 0x1C16F18
	0x03AAAFF0 MOV X20, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x939000
	006 Move X20, 0x672000
	007 Move W8, [X21+1052]
	008 Move X20, [X20+2296]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x672000
	015 Move X0, [X0+2296]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+1052], W8
	019 Move X0, [X20]
	020 Move X20, [X19+224]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 Move X0, X20
	026 Move X1, X31
	027 Call CoreUtils.Destroy, X0
	028 Move X0, [X19+232]
	029 Move X20, [X31+16]
	030 Move X19, [X31+24]
	031 Move X1, X31
	032 Move X30, [X31+32]
	033 Move X21, [X31+40]
	034 Call CoreUtils.Destroy, X0
	035 Return 

Method: UnityEngine.Material <.ctor>g__Load|7_0(UnityEngine.Shader shader)

Disassembly:
	0x03AA97B8 LDR V0, [X31 + 0x118]
	0x03AA97BC LDR V1, [X31 + 0x11C]
	0x03AA97C0 LDR V2, [X31 + 0x120]
	0x03AA97C4 LDR X8, [X8 + 0xB8]
	0x03AA97C8 LDR V3, [X31 + 0x124]
	0x03AA97CC LDR W1, [X8 + 0xD0]
	0x03AA97D0 MOV X0, X22
	0x03AA97D4 MOV X2, X31
	0x03AA97D8 BL 0x3C15D80
	0x03AA97DC MOV X0, X24
	0x03AA97E0 MOV X1, X31
	0x03AA97E4 BL 0x3A9344C
	0x03AA97E8 MOV W1, W0
	0x03AA97EC MOVZ W2, 0x1
	0x03AA97F0 MOV X0, X22
	0x03AA97F4 MOV X3, X31
	0x03AA97F8 BL 0x39EB1AC
	0x03AA97FC LDR X0, [X19 + 0x190]
	0x03AA9800 CBZ X0, 0x3AA99A0
	0x03AA9804 LDR X1, [X31 + 0xE0]
	0x03AA9808 MOV X2, X31
	0x03AA980C BL 0x398784C
	0x03AA9810 LDR X0, [X19 + 0x190]
	0x03AA9814 CBZ X0, 0x3AA99A4
	0x03AA9818 MOV X1, X31
	0x03AA981C BL 0x398841C
	0x03AA9820 TBZ X0, 0x0, 0x3AA9838
	0x03AA9824 LDR X0, [X31 + 0xE0]
	0x03AA9828 CBZ X0, 0x3AA99B4
	0x03AA982C MOV W1, W31
	0x03AA9830 MOV X2, X31
	0x03AA9834 BL 0x3C4D910
	0x03AA9838 ADRP X8, 0x6A9000
	0x03AA983C LDR X8, [X8 + 0xE28]
	0x03AA9840 LDR X0, [X8]
	0x03AA9844 LDR W8, [X0 + 0xE0]
	0x03AA9848 CBNZ W8, 0x3AA9850
	0x03AA984C BL 0x1C16DFC
	0x03AA9850 LDR X1, [X31 + 0x98]
	0x03AA9854 LDR X0, [X31 + 0xE0]
	0x03AA9858 MOVZ W3, 0x2
	0x03AA985C MOV W4, W31
	0x03AA9860 MOV X2, X1
	0x03AA9864 MOV X5, X22
	0x03AA9868 MOV W6, W31
	0x03AA986C MOV X7, X31
	0x03AA9870 BL 0x39E3120
	0x03AA9874 LDR X0, [X19 + 0x190]
	0x03AA9878 CBZ X0, 0x3AA99A8
	0x03AA987C LDR X1, [X31 + 0xE0]
	0x03AA9880 MOV X2, X31
	0x03AA9884 BL 0x3987918
	0x03AA9888 ADD X0, X31, 0x168
	0x03AA988C MOV X1, X31
	0x03AA9890 BL 0x39B1DB4
	0x03AA9894 ADD X31, X31, 0x170
	0x03AA9898 LDP X20, X19, [X31 + 0x90]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x93A000
	006 Move X21, 0x64B000
	007 Move W8, [X20+1053]
	008 Move X21, [X21+1432]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {28}
	014 Move X0, 0x673000
	015 Move X0, [X0+2296]
	016 Call 0x1C17CF4
	017 Move X0, 0x64B000
	018 Move X0, [X0+2600]
	019 Call 0x1C17CF4
	020 Move X0, 0x64B000
	021 Move X0, [X0+1432]
	022 Call 0x1C17CF4
	023 Move X0, 0x6AF000
	024 Move X0, [X0+3168]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X20+1053], W8
	028 Move X0, [X21]
	029 Move W8, [X0+224]
	030 Compare W8, 0
	031 JumpIfNotEqual {33}
	032 Call 0x1C17DFC
	033 Move X0, X19
	034 Move X1, X31
	035 Move X2, X31
	036 Call Object.op_Equality, X0, X1
	037 Move TEMP, X0
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfNotEqual {59}
	041 Move X8, 0x64B000
	042 Move X8, [X8+2600]
	043 Move X19, 0x6AF000
	044 Move X0, [X8]
	045 Move W8, [X0+224]
	046 Move X19, [X19+3168]
	047 Compare W8, 0
	048 JumpIfNotEqual {50}
	049 Call 0x1C17DFC
	050 Move X0, [X19]
	051 Move X1, X31
	052 Call Debug.LogError, X0
	053 Move X20, [X31+16]
	054 Move X19, [X31+24]
	055 Move X0, X31
	056 Move X30, [X31+32]
	057 Move X21, [X31+40]
	058 Return X0
	059 Move X8, 0x673000
	060 Move X8, [X8+2296]
	061 Move X0, [X8]
	062 Move W8, [X0+224]
	063 Compare W8, 0
	064 JumpIfNotEqual {66}
	065 Call 0x1C17DFC
	066 Move X0, X19
	067 Move X20, [X31+16]
	068 Move X19, [X31+24]
	069 Move X1, X31
	070 Move X30, [X31+32]
	071 Move X21, [X31+40]
	072 Call CoreUtils.CreateEngineMaterial, X0
	073 Return X0

