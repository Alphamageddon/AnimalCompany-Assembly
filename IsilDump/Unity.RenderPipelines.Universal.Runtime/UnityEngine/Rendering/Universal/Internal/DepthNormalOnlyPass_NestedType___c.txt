Type: UnityEngine.Rendering.Universal.Internal.DepthNormalOnlyPass/<>c

Method: System.Void .cctor()

Disassembly:
	0x03AAF28C BL 0x1C16F10
	0x03AAF290 LDR X1, [X27]
	0x03AAF294 MOV X2, X31
	0x03AAF298 MOV X26, X0
	0x03AAF29C BL 0x39B19AC
	0x03AAF2A0 STR X26, [X19 + 0x38]
	0x03AAF2A4 LDR X0, [X29]
	0x03AAF2A8 BL 0x1C16F10
	0x03AAF2AC MOV X1, X31
	0x03AAF2B0 MOV X26, X0
	0x03AAF2B4 BL 0x33BDD8C
	0x03AAF2B8 STR X26, [X19 + 0x188]
	0x03AAF2BC STR X25, [X19 + 0x170]
	0x03AAF2C0 LDR X0, [X28]
	0x03AAF2C4 BL 0x1C16F10
	0x03AAF2C8 MOV X1, X25
	0x03AAF2CC MOV X2, X31
	0x03AAF2D0 MOV X26, X0
	0x03AAF2D4 BL 0x39B19AC
	0x03AAF2D8 STR X26, [X19 + 0x178]
	0x03AAF2DC CBZ X24, 0x3AAF49C
	0x03AAF2E0 LDR X8, [X24 + 0x18]
	0x03AAF2E4 CMP W8, 0x1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x934000
	005 Move X20, 0x6A9000
	006 Move W8, [X19+1092]
	007 Move X20, [X20+3832]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x6A9000
	013 Move X0, [X0+3832]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+1092], W8
	017 Move X0, [X20]
	018 Call 0x1C17F10
	019 Move X1, X31
	020 Move X19, X0
	021 Call Object..ctor, X0
	022 Move X8, [X20]
	023 Move X8, [X8+184]
	024 Move [X8], X19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Return 

Method: System.Void .ctor()

Disassembly:
	0x03AAF2E8 B.LT 0x3AAF370
	0x03AAF2EC ADRP X26, 0x6A5000

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: System.Void <Render>b__34_0(UnityEngine.Rendering.Universal.Internal.DepthNormalOnlyPass/PassData data, UnityEngine.Experimental.Rendering.RenderGraphModule.RenderGraphContext context)

Disassembly:
	0x03AAF2F0 LDR X26, [X26 + 0x70]
	0x03AAF2F4 MOV X25, X31
	0x03AAF2F8 AND X8, X8, 0x0
	0x03AAF2FC ADD X28, X24, 0x20
	0x03AAF300 CMP X25, W8, UXTW
	0x03AAF304 B.CS 0x3AAF4A0
	0x03AAF308 LDR X0, [X19 + 0x168]
	0x03AAF30C CBZ X0, 0x3AAF49C
	0x03AAF310 LDR W10, [X0 + 0x1C]
	0x03AAF314 LDR W1, [X28, X25, LSL #2]
	0x03AAF318 LDR X8, [X0 + 0x10]
	0x03AAF31C LDR X9, [X26]
	0x03AAF320 ADD W10, W10, 0x1
	0x03AAF324 STR W10, [X0 + 0x1C]
	0x03AAF328 CBZ X8, 0x3AAF49C
	0x03AAF32C LDRSW X10, [X0 + 0x18]
	0x03AAF330 LDR W11, [X8 + 0x18]
	0x03AAF334 CMP W10, W11
	0x03AAF338 B.CS 0x3AAF350
	0x03AAF33C ADD W9, W10, 0x1
	0x03AAF340 ADD X8, X8, X10, 0x2, LSL
	0x03AAF344 STR W9, [X0 + 0x18]
	0x03AAF348 STR W1, [X8 + 0x20]
	0x03AAF34C B 0x3AAF360
	0x03AAF350 LDR X8, [X9 + 0x20]
	0x03AAF354 LDR X8, [X8 + 0xC0]
	0x03AAF358 LDR X2, [X8 + 0x70]
	0x03AAF35C BL 0x305D1F8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x934000
	006 Move W8, [X21+1093]
	007 Move X20, X2
	008 Move X19, X1
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x6A9000
	014 Move X0, [X0+344]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+1093], W8
	018 Compare X20, 0
	019 JumpIfEqual {39}
	020 Compare X19, 0
	021 JumpIfEqual {39}
	022 Move X8, 0x6A9000
	023 Move X8, [X8+344]
	024 Move X20, [X20+16]
	025 Move X0, [X8]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {30}
	029 Call 0x1C17DFC
	030 Add X2, X19, 32
	031 Move X0, X20
	032 Move X1, X19
	033 Move X20, [X31+16]
	034 Move X19, [X31+24]
	035 Move X30, [X31+32]
	036 Move X21, [X31+40]
	037 Call DepthNormalOnlyPass.ExecutePass, X0, X1, X2
	038 Return 
	039 Call 0x1C17F20

