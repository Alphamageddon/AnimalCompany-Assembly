Type: UnityEngine.Rendering.Universal.Internal.DepthNormalOnlyPass

Method: System.Collections.Generic.List`1<UnityEngine.Rendering.ShaderTagId> get_shaderTagIds()

Disassembly:
	0x03AAE320 CBZ X20, 0x3AAE35C
	0x03AAE324 CBZ X19, 0x3AAE35C

ISIL:
	001 Move X0, [X0+224]
	002 Return X0

Method: System.Void set_shaderTagIds(System.Collections.Generic.List`1<UnityEngine.Rendering.ShaderTagId> value)

Disassembly:
	0x03AAE328 ADRP X8, 0x6A9000
	0x03AAE32C LDR X8, [X8 + 0x158]

ISIL:
	001 Move [X0+224], X1
	002 Return 

Method: UnityEngine.Rendering.RTHandle get_depthHandle()

Disassembly:
	0x03AAE330 LDR X20, [X20 + 0x10]
	0x03AAE334 LDR X0, [X8]

ISIL:
	001 Move X0, [X0+232]
	002 Return X0

Method: System.Void set_depthHandle(UnityEngine.Rendering.RTHandle value)

Disassembly:
	0x03AAE338 LDR W8, [X0 + 0xE0]
	0x03AAE33C CBNZ W8, 0x3AAE344

ISIL:
	001 Move [X0+232], X1
	002 Return 

Method: UnityEngine.Rendering.RTHandle get_normalHandle()

Disassembly:
	0x03AAE340 BL 0x1C16DFC
	0x03AAE344 ADD X2, X19, 0x20

ISIL:
	001 Move X0, [X0+240]
	002 Return X0

Method: System.Void set_normalHandle(UnityEngine.Rendering.RTHandle value)

Disassembly:
	0x03AAE348 MOV X0, X20
	0x03AAE34C MOV X1, X19

ISIL:
	001 Move [X0+240], X1
	002 Return 

Method: UnityEngine.Rendering.RTHandle get_renderingLayersHandle()

Disassembly:
	0x03AAE350 LDP X20, X19, [X31 + 0x10]
	0x03AAE354 LDP X30, X21, [X31], #0x20

ISIL:
	001 Move X0, [X0+248]
	002 Return X0

Method: System.Void set_renderingLayersHandle(UnityEngine.Rendering.RTHandle value)

Disassembly:
	0x03AAE358 B 0x3AAD770
	0x03AAE35C BL 0x1C16F20

ISIL:
	001 Move [X0+248], X1
	002 Return 

Method: System.Boolean get_enableRenderingLayers()

Disassembly:
	0x03AAE360 LDR X0, [X0 + 0xE0]
	0x03AAE364 RET

ISIL:
	001 Move W0, [X0+256]
	002 Return X0

Method: System.Void set_enableRenderingLayers(System.Boolean value)

Disassembly:
	0x03AAE368 STR X1, [X0 + 0xE0]
	0x03AAE36C RET
	0x03AAE370 LDR W0, [X0 + 0xEC]

ISIL:
	001 And W8, W1, 1
	002 Move [X0+256], W8
	003 Return 

Method: System.Void .ctor(UnityEngine.Rendering.Universal.RenderPassEvent evt, UnityEngine.Rendering.RenderQueueRange renderQueueRange, UnityEngine.LayerMask layerMask)

Disassembly:
	0x03AAE374 RET
	0x03AAE378 STR W1, [X0 + 0xEC]
	0x03AAE37C RET
	0x03AAE380 SUB X31, X31, 0x80
	0x03AAE384 STP X30, X27, [X31 + 0x30]
	0x03AAE388 STP X26, X25, [X31 + 0x40]
	0x03AAE38C STP X24, X23, [X31 + 0x50]
	0x03AAE390 STP X22, X21, [X31 + 0x60]
	0x03AAE394 STP X20, X19, [X31 + 0x70]
	0x03AAE398 ADRP X23, 0x934000
	0x03AAE39C ADRP X24, 0x6A9000
	0x03AAE3A0 LDRB W8, [X23 + 0x446]
	0x03AAE3A4 LDR X24, [X24 + 0x160]
	0x03AAE3A8 MOV X21, X3
	0x03AAE3AC MOV X22, X2
	0x03AAE3B0 MOV W20, W1
	0x03AAE3B4 MOV X19, X0
	0x03AAE3B8 TBNZ X8, 0x0, 0x3AAE40C
	0x03AAE3BC ADRP X0, 0x6A9000
	0x03AAE3C0 LDR X0, [X0 + 0x160]
	0x03AAE3C4 BL 0x1C16CF4
	0x03AAE3C8 ADRP X0, 0x6A6000
	0x03AAE3CC LDR X0, [X0 + 0x78]
	0x03AAE3D0 BL 0x1C16CF4
	0x03AAE3D4 ADRP X0, 0x6A9000
	0x03AAE3D8 LDR X0, [X0 + 0xF10]
	0x03AAE3DC BL 0x1C16CF4
	0x03AAE3E0 ADRP X0, 0x6A2000
	0x03AAE3E4 LDR X0, [X0 + 0x598]
	0x03AAE3E8 BL 0x1C16CF4
	0x03AAE3EC ADRP X0, 0x6A5000
	0x03AAE3F0 LDR X0, [X0 + 0xFF0]
	0x03AAE3F4 BL 0x1C16CF4
	0x03AAE3F8 ADRP X0, 0x6A9000
	0x03AAE3FC LDR X0, [X0 + 0xF18]
	0x03AAE400 BL 0x1C16CF4
	0x03AAE404 MOVZ W8, 0x1
	0x03AAE408 STRB W8, [X23 + 0x446]
	0x03AAE40C LDR X0, [X24]
	0x03AAE410 ADRP X23, 0x6A5000
	0x03AAE414 LDR W8, [X0 + 0xE0]
	0x03AAE418 LDR X23, [X23 + 0xFF0]
	0x03AAE41C CBNZ W8, 0x3AAE428
	0x03AAE420 BL 0x1C16DFC
	0x03AAE424 LDR X0, [X24]
	0x03AAE428 LDR X8, [X0 + 0xB8]
	0x03AAE42C ADRP X27, 0x6A2000
	0x03AAE430 ADRP X26, 0x6A9000
	0x03AAE434 ADRP X25, 0x6A6000
	0x03AAE438 LDR W8, [X8]
	0x03AAE43C STR W8, [X19 + 0xEC]
	0x03AAE440 LDR X0, [X23]
	0x03AAE444 ADRP X23, 0x6A9000
	0x03AAE448 LDR W8, [X0 + 0xE0]
	0x03AAE44C LDR X27, [X27 + 0x598]
	0x03AAE450 LDR X23, [X23 + 0xF18]
	0x03AAE454 LDR X26, [X26 + 0xF10]
	0x03AAE458 LDR X25, [X25 + 0x78]
	0x03AAE45C CBNZ W8, 0x3AAE464
	0x03AAE460 BL 0x1C16DFC
	0x03AAE464 MOV X0, X19
	0x03AAE468 MOV X1, X31
	0x03AAE46C BL 0x3A4225C
	0x03AAE470 LDR X0, [X27]
	0x03AAE474 BL 0x1C16F10
	0x03AAE478 LDR X1, [X23]
	0x03AAE47C MOV X2, X31
	0x03AAE480 MOV X23, X0
	0x03AAE484 BL 0x39B19AC
	0x03AAE488 STR X23, [X19 + 0x38]
	0x03AAE48C LDR X0, [X26]
	0x03AAE490 BL 0x1C16F10
	0x03AAE494 MOV X1, X31
	0x03AAE498 MOV X23, X0
	0x03AAE49C BL 0x33BDD8C
	0x03AAE4A0 STR X23, [X19 + 0xF0]
	0x03AAE4A4 LDR X2, [X25]
	0x03AAE4A8 ADD X0, X31, 0x20
	0x03AAE4AC MOV X1, X22
	0x03AAE4B0 STR W31, [X31 + 0x28]
	0x03AAE4B4 STR X31, [X31 + 0x20]
	0x03AAE4B8 BL 0x2439504
	0x03AAE4BC AND X0, X21, 0x0
	0x03AAE4C0 MOV X1, X31
	0x03AAE4C4 BL 0x3C35CB8
	0x03AAE4C8 LDR X1, [X31 + 0x20]
	0x03AAE4CC LDR W2, [X31 + 0x28]
	0x03AAE4D0 MOV W3, W0
	0x03AAE4D4 ADD X0, X31, 0x8
	0x03AAE4D8 MOVN W4, 0x0
	0x03AAE4DC MOV W5, W31
	0x03AAE4E0 MOV X6, X31
	0x03AAE4E4 STP X31, X31, [X31 + 0x8]
	0x03AAE4E8 STR X31, [X31 + 0x18]
	0x03AAE4EC BL 0x3C53F40
	0x03AAE4F0 LDR X8, [X31 + 0x18]
	0x03AAE4F4 LDUR V0, [X31 + 0x8]
	0x03AAE4F8 ADD X9, X19, 0xF8
	0x03AAE4FC LDP X22, X21, [X31 + 0x60]
	0x03AAE500 STR X8, [X9 + 0x10]
	0x03AAE504 STUR V0, [X19 + 0xF8]
	0x03AAE508 STR W20, [X19 + 0x10]
	0x03AAE50C STRB W31, [X19 + 0x42]
	0x03AAE510 LDR X8, [X24]
	0x03AAE514 LDP X24, X23, [X31 + 0x50]
	0x03AAE518 LDP X26, X25, [X31 + 0x40]

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+48], X30
	003 Move [X31+56], X27
	004 Move [X31+64], X26
	005 Move [X31+72], X25
	006 Move [X31+80], X24
	007 Move [X31+88], X23
	008 Move [X31+96], X22
	009 Move [X31+104], X21
	010 Move [X31+112], X20
	011 Move [X31+120], X19
	012 Move X24, 0x935000
	013 Move X23, 0x6A6000
	014 Move W8, [X24+1084]
	015 Move X23, [X23+4080]
	016 Move X21, X3
	017 Move X22, X2
	018 Move W20, W1
	019 Move X19, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {44}
	024 Move X0, 0x6AA000
	025 Move X0, [X0+344]
	026 Call 0x1C17CF4
	027 Move X0, 0x6A7000
	028 Move X0, [X0+120]
	029 Call 0x1C17CF4
	030 Move X0, 0x6AA000
	031 Move X0, [X0+3768]
	032 Call 0x1C17CF4
	033 Move X0, 0x6A3000
	034 Move X0, [X0+1432]
	035 Call 0x1C17CF4
	036 Move X0, 0x6A6000
	037 Move X0, [X0+4080]
	038 Call 0x1C17CF4
	039 Move X0, 0x6AA000
	040 Move X0, [X0+3776]
	041 Call 0x1C17CF4
	042 Move W8, 1
	043 Move [X24+1084], W8
	044 Move X0, [X23]
	045 Move X27, 0x6A3000
	046 Move X23, 0x6AA000
	047 Move X26, 0x6AA000
	048 Move X25, 0x6A7000
	049 Move X24, 0x6AA000
	050 Move X27, [X27+1432]
	051 Move W8, [X0+224]
	052 Move X23, [X23+3776]
	053 Move X26, [X26+3768]
	054 Move X25, [X25+120]
	055 Move X24, [X24+344]
	056 Compare W8, 0
	057 JumpIfNotEqual {59}
	058 Call 0x1C17DFC
	059 Move X0, X19
	060 Move X1, X31
	061 Call ScriptableRenderPass..ctor, X0
	062 Move X0, [X27]
	063 Call 0x1C17F10
	064 Move X1, [X23]
	065 Move X2, X31
	066 Move X23, X0
	067 Call ProfilingSampler..ctor, X0, X1
	068 Move [X19+56], X23
	069 Move X0, [X26]
	070 Call 0x1C17F10
	071 Move X1, X31
	072 Move X23, X0
	073 Call Object..ctor, X0
	074 Move [X19+288], X23
	075 Move X2, [X25]
	076 Add X0, X31, 32
	077 Move X1, X22
	078 Move [X31+40], W31
	079 Move [X31+32], X31
	080 Call Nullable`1<RenderQueueRange>..ctor, X0, X1
	081 And X0, X21, 0
	082 Move X1, X31
	083 Call LayerMask.op_Implicit, X0
	084 Move X1, [X31+32]
	085 Move W2, [X31+40]
	086 Move W3, W0
	087 Add X0, X31, 8
	088 Move TEMP, 0
	089 Not TEMP
	090 Move W4, TEMP
	091 Move W5, W31
	092 Move X6, X31
	093 Move [X31+8], X31
	094 Move [X31+16], X31
	095 Move [X31+24], X31
	096 Call FilteringSettings..ctor, X0, X1, X2, X3, X4
	097 Move X8, [X31+24]
	098 NotImplemented "Instruction LDUR not yet implemented."
	099 Add X9, X19, 260
	100 Move [X9+16], X8
	101 Move [X9], V0
	102 Move [X19+16], W20
	103 Move [X19+66], W31
	104 Move X0, [X24]
	105 Move W8, [X0+224]
	106 Compare W8, 0
	107 JumpIfNotEqual {110}
	108 Call 0x1C17DFC
	109 Move X0, [X24]
	110 Move X8, [X0+184]
	111 Move X22, [X31+96]
	112 Move X21, [X31+104]
	113 Move X24, [X31+80]
	114 Move X23, [X31+88]
	115 Move X26, [X31+64]
	116 Move X25, [X31+72]
	117 Move X8, [X8]
	118 Move X30, [X31+48]
	119 Move X27, [X31+56]
	120 Move [X19+224], X8
	121 Move X20, [X31+112]
	122 Move X19, [X31+120]
	123 Add X31, X31, 128
	124 Return 

Method: UnityEngine.Experimental.Rendering.GraphicsFormat GetGraphicsFormat()

Disassembly:
	0x03AAE524 LDR W8, [X8]
	0x03AAE528 STR W8, [X19 + 0xEC]
	0x03AAE52C LDP X20, X19, [X31 + 0x70]
	0x03AAE530 ADD X31, X31, 0x80
	0x03AAE534 RET
	0x03AAE538 MOV X1, X31
	0x03AAE53C B 0x33BDD8C
	0x03AAE540 STR X2, [X0 + 0xE0]
	0x03AAE544 LDR W8, [X1 + 0x1C]
	0x03AAE548 STR W8, [X0 + 0xE8]
	0x03AAE54C RET
	0x03AAE550 STP X30, X19, [X31 - 0x10]!
	0x03AAE554 LDR X8, [X2 + 0x1D0]
	0x03AAE558 CBZ X8, 0x3AAE5E8
	0x03AAE55C LDRB W9, [X8 + 0x1A5]
	0x03AAE560 MOV X19, X0
	0x03AAE564 CBZ W9, 0x3AAE5AC
	0x03AAE568 LDR W9, [X2 + 0xE0]
	0x03AAE56C CBZ W9, 0x3AAE578
	0x03AAE570 LDRB W9, [X2 + 0x17C]
	0x03AAE574 CBZ W9, 0x3AAE5AC
	0x03AAE578 MOV X0, X8
	0x03AAE57C MOV X1, X31
	0x03AAE580 BL 0x3A49678
	0x03AAE584 MOV X1, X0
	0x03AAE588 MOV X0, X19
	0x03AAE58C MOV X2, X31
	0x03AAE590 BL 0x3A440A4
	0x03AAE594 FMOV S0, W31
	0x03AAE598 FMOV S1, W31
	0x03AAE59C FMOV S2, W31
	0x03AAE5A0 FMOV S3, 1
	0x03AAE5A4 MOVZ W1, 0x2
	0x03AAE5A8 B 0x3AAE5D8
	0x03AAE5AC LDR X1, [X19 + 0xE0]
	0x03AAE5B0 MOVZ W8, 0x1
	0x03AAE5B4 MOV X0, X19
	0x03AAE5B8 MOV X2, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x935000
	005 Move X19, 0x6A7000
	006 Move W8, [X20+1085]
	007 Move X19, [X19+16]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x6A7000
	013 Move X0, [X0+16]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+1085], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {22}
	021 Call 0x1C17DFC
	022 Move W0, 12
	023 Move W1, 4
	024 Move X2, X31
	025 Call RenderingUtils.SupportsGraphicsFormat, X0, X1
	026 Move TEMP, X0
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfNotEqual {31}
	030 Move W0, 12
	031 Move X0, [X19]
	032 Move W8, [X0+224]
	033 Compare W8, 0
	034 JumpIfNotEqual {36}
	035 Call 0x1C17DFC
	036 Move W0, 48
	037 Move W1, 4
	038 Move X2, X31
	039 Move W19, 48
	040 Call RenderingUtils.SupportsGraphicsFormat, X0, X1
	041 And W31, W0, 1
	042 Move W8, 52
	043 NotImplemented "Instruction CSEL not yet implemented."
	044 Move X20, [X31+16]
	045 Move X19, [X31+24]
	046 Move X30, [X31+32]
	047 Return X0

Method: System.Void Setup(UnityEngine.Rendering.RTHandle depthHandle, UnityEngine.Rendering.RTHandle normalHandle)

Disassembly:
	0x03AAE5BC STRB W8, [X19 + 0x42]
	0x03AAE5C0 BL 0x3A440A4
	0x03AAE5C4 FMOV S0, W31

ISIL:
	001 Move [X0+232], X1
	002 Move [X0+240], X2
	003 Move [X0+256], W31
	004 Return 

Method: System.Void Setup(UnityEngine.Rendering.RTHandle depthHandle, UnityEngine.Rendering.RTHandle normalHandle, UnityEngine.Rendering.RTHandle decalLayerHandle)

Disassembly:
	0x03AAE5C8 FMOV S1, W31
	0x03AAE5CC FMOV S2, W31
	0x03AAE5D0 FMOV S3, 1
	0x03AAE5D4 MOVZ W1, 0x7
	0x03AAE5D8 MOV X0, X19

ISIL:
	001 Move W8, 1
	002 Move [X0+232], X1
	003 Move [X0+240], X2
	004 Move [X0+248], X3
	005 Move [X0+256], W8
	006 Return 

Method: System.Void OnCameraSetup(UnityEngine.Rendering.CommandBuffer cmd, ref UnityEngine.Rendering.Universal.RenderingData renderingData)

Disassembly:
	0x03AAE5DC MOV X2, X31
	0x03AAE5E0 LDP X30, X19, [X31], #0x10
	0x03AAE5E4 B 0x3A44510
	0x03AAE5E8 BL 0x1C16F20
	0x03AAE5EC STR X29, [X31 - 0x40]!
	0x03AAE5F0 STP X30, X23, [X31 + 0x10]
	0x03AAE5F4 STP X22, X21, [X31 + 0x20]
	0x03AAE5F8 STP X20, X19, [X31 + 0x30]
	0x03AAE5FC SUB X31, X31, 0x1D0
	0x03AAE600 MRS X23, 0xC000
	0x03AAE604 LDR X8, [X23 + 0x28]
	0x03AAE608 ADRP X20, 0x934000
	0x03AAE60C MOV X19, X2
	0x03AAE610 MOV X22, X1
	0x03AAE614 STR X8, [X31 + 0x1C8]
	0x03AAE618 LDRB W8, [X20 + 0x447]
	0x03AAE61C STR X0, [X31 + 0x30]
	0x03AAE620 TBNZ X8, 0x0, 0x3AAE65C
	0x03AAE624 ADRP X0, 0x6A6000
	0x03AAE628 LDR X0, [X0 + 0xB8]
	0x03AAE62C BL 0x1C16CF4
	0x03AAE630 ADRP X0, 0x6A6000
	0x03AAE634 LDR X0, [X0 + 0xA8]
	0x03AAE638 BL 0x1C16CF4
	0x03AAE63C ADRP X0, 0x6A6000
	0x03AAE640 LDR X0, [X0 + 0x10]
	0x03AAE644 BL 0x1C16CF4
	0x03AAE648 ADRP X0, 0x6A2000
	0x03AAE64C LDR X0, [X0 + 0xC80]
	0x03AAE650 BL 0x1C16CF4
	0x03AAE654 MOVZ W8, 0x1
	0x03AAE658 STRB W8, [X20 + 0x447]
	0x03AAE65C ADD X0, X31, 0x100
	0x03AAE660 MOVZ W2, 0xC4
	0x03AAE664 MOV W1, W31
	0x03AAE668 STRB W31, [X31 + 0x8]
	0x03AAE66C BL 0x3EB1B10
	0x03AAE670 CBZ X22, 0x3AAE7A8
	0x03AAE674 ADRP X8, 0x6A6000
	0x03AAE678 LDR X8, [X8 + 0xA8]
	0x03AAE67C ADD X9, X22, 0x2D4
	0x03AAE680 LDR W20, [X22 + 0x2D0]
	0x03AAE684 LDR X10, [X9 + 0x10]
	0x03AAE688 LDR V0, [X9]
	0x03AAE68C LDR X1, [X8]
	0x03AAE690 ADRP X22, 0x6A2000
	0x03AAE694 LDR X21, [X19]
	0x03AAE698 LDR X22, [X22 + 0xC80]
	0x03AAE69C MOVZ W0, 0x8
	0x03AAE6A0 STR X10, [X31 + 0x20]
	0x03AAE6A4 STR V0, [X31 + 0x1]
	0x03AAE6A8 BL 0x2235BC0
	0x03AAE6AC MOV X2, X0
	0x03AAE6B0 ADD X0, X31, 0x8
	0x03AAE6B4 MOV X1, X21
	0x03AAE6B8 MOV X3, X31
	0x03AAE6BC BL 0x39B1DB0
	0x03AAE6C0 LDR X0, [X22]
	0x03AAE6C4 LDR W8, [X0 + 0xE0]
	0x03AAE6C8 CBNZ W8, 0x3AAE6D0
	0x03AAE6CC BL 0x1C16DFC
	0x03AAE6D0 ADD X0, X31, 0x30
	0x03AAE6D4 MOV X1, X21
	0x03AAE6D8 MOV X2, X31
	0x03AAE6DC BL 0x3C58FE4
	0x03AAE6E0 CBZ X21, 0x3AAE7AC
	0x03AAE6E4 MOV X0, X21
	0x03AAE6E8 MOV X1, X31
	0x03AAE6EC BL 0x3C4C310
	0x03AAE6F0 ADRP X8, 0x6A6000
	0x03AAE6F4 LDR X8, [X8 + 0x10]
	0x03AAE6F8 LDR W21, [X19 + 0x18C]
	0x03AAE6FC LDR X0, [X8]
	0x03AAE700 LDR W8, [X0 + 0xE0]
	0x03AAE704 CBNZ W8, 0x3AAE70C
	0x03AAE708 BL 0x1C16DFC
	0x03AAE70C ADD X8, X31, 0x38
	0x03AAE710 MOV X0, X20
	0x03AAE714 MOV X1, X19
	0x03AAE718 MOV W2, W21
	0x03AAE71C MOV X3, X31
	0x03AAE720 BL 0x3A733F8
	0x03AAE724 ADRP X20, 0x6A6000
	0x03AAE728 LDR X20, [X20 + 0xB8]
	0x03AAE72C ADD X0, X31, 0x100
	0x03AAE730 ADD X1, X31, 0x38
	0x03AAE734 MOVZ W2, 0xC4
	0x03AAE738 BL 0x3EB1AC0
	0x03AAE73C LDR X0, [X20]
	0x03AAE740 LDR W8, [X0 + 0xE0]
	0x03AAE744 CBNZ W8, 0x3AAE74C
	0x03AAE748 BL 0x1C16DFC
	0x03AAE74C ADD X0, X31, 0x100
	0x03AAE750 MOV W1, W31
	0x03AAE754 MOV X2, X31
	0x03AAE758 BL 0x3C536B4
	0x03AAE75C LDP X1, X2, [X19 + 0x8]
	0x03AAE760 ADD X0, X31, 0x30
	0x03AAE764 ADD X3, X31, 0x100
	0x03AAE768 ADD X4, X31, 0x10
	0x03AAE76C MOV X5, X31

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0x935000
	008 Move X22, 0x6AA000
	009 Move W8, [X21+1086]
	010 Move X22, [X22+344]
	011 Move X20, X2
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0x6AA000
	018 Move X0, [X0+344]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+1086], W8
	022 Move X0, [X22]
	023 Move W21, [X19+256]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {29}
	027 Call 0x1C17DFC
	028 Move X0, [X22]
	029 Move X8, [X0+184]
	030 Compare W21, 0
	031 JumpIfEqual {66}
	032 Move X23, [X8+16]
	033 Compare X23, 0
	034 JumpIfEqual {121}
	035 Move X21, [X19+240]
	036 Compare X21, 0
	037 JumpIfEqual {44}
	038 Move X8, [X23]
	039 Move X0, X21
	040 Move X1, [X8+64]
	041 Call 0x1C17E00
	042 Compare X0, 0
	043 JumpIfEqual {123}
	044 Move W8, [X23+24]
	045 Compare W8, 0
	046 JumpIfEqual {122}
	047 Move [X23+32], X21
	048 Move X8, [X22]
	049 Move X8, [X8+184]
	050 Move X23, [X8+16]
	051 Compare X23, 0
	052 JumpIfEqual {121}
	053 Move X21, [X19+248]
	054 Compare X21, 0
	055 JumpIfEqual {62}
	056 Move X8, [X23]
	057 Move X0, X21
	058 Move X1, [X8+64]
	059 Call 0x1C17E00
	060 Compare X0, 0
	061 JumpIfEqual {123}
	062 Move W8, [X23+24]
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Move [X23+40], X21
	065 Move W8, 16
	066 Move X23, [X8+8]
	067 Compare X23, 0
	068 JumpIfEqual {121}
	069 Move X21, [X19+240]
	070 Compare X21, 0
	071 JumpIfEqual {78}
	072 Move X8, [X23]
	073 Move X0, X21
	074 Move X1, [X8+64]
	075 Call 0x1C17E00
	076 Compare X0, 0
	077 JumpIfEqual {123}
	078 Move W8, [X23+24]
	079 Compare W8, 0
	080 JumpIfEqual {122}
	081 Move W8, 8
	082 Move [X23+32], X21
	083 Move X0, [X20+464]
	084 Compare X0, 0
	085 JumpIfEqual {121}
	086 Move X9, [X22]
	087 Move W10, [X0+421]
	088 Move X9, [X9+184]
	089 Move X21, [X9]
	090 Compare W10, 0
	091 JumpIfEqual {101}
	092 Move W8, [X20+224]
	093 Compare W8, 0
	094 JumpIfEqual {98}
	095 Move W8, [X20+380]
	096 Compare W8, 0
	097 JumpIfEqual {101}
	098 Move X1, X31
	099 Call ScriptableRenderer.get_cameraDepthTargetHandle, X0
	100 Move X2, X0
	101 Move X2, [X19+232]
	102 Move X0, X19
	103 Move X1, X21
	104 Move X3, X31
	105 Call ScriptableRenderPass.ConfigureTarget, X0, X1, X2
	106 Move X0, X19
	107 Move X20, [X31+32]
	108 Move X19, [X31+40]
	109 Move X22, [X31+16]
	110 Move X21, [X31+24]
	111 Move S0, W31
	112 Move S1, W31
	113 Move S2, W31
	114 Move S3, 1
	115 Move W1, 7
	116 Move X2, X31
	117 Move X30, [X31+48]
	118 Move X23, [X31+56]
	119 Call ScriptableRenderPass.ConfigureClear, X0, X1, X2
	120 Return 
	121 Call 0x1C17F20
	122 Call 0x1C17F28
	123 Call 0x1C17F44
	124 Move X1, X31
	125 Call 0x1C17DEC

Method: System.Void ExecutePass(UnityEngine.Rendering.ScriptableRenderContext context, UnityEngine.Rendering.Universal.Internal.DepthNormalOnlyPass/PassData passData, ref UnityEngine.Rendering.Universal.RenderingData renderingData)

Disassembly:
	0x03AAE770 BL 0x3C58AC8
	0x03AAE774 ADD X0, X31, 0x8
	0x03AAE778 MOV X1, X31
	0x03AAE77C BL 0x39B1DB4
	0x03AAE780 LDR X8, [X23 + 0x28]
	0x03AAE784 LDR X9, [X31 + 0x1C8]
	0x03AAE788 CMP X8, X9
	0x03AAE78C B.NE 0x3AAE7B0
	0x03AAE790 ADD X31, X31, 0x1D0
	0x03AAE794 LDP X20, X19, [X31 + 0x30]
	0x03AAE798 LDP X22, X21, [X31 + 0x20]
	0x03AAE79C LDP X30, X23, [X31 + 0x10]
	0x03AAE7A0 LDR X29, [X31], #0x40
	0x03AAE7A4 RET
	0x03AAE7A8 BL 0x1C16F20
	0x03AAE7AC BL 0x1C16F20
	0x03AAE7B0 BL 0x3EB1B20
	0x03AAE7B4 B 0x3AAE7C8
	0x03AAE7B8 B 0x3AAE7C8
	0x03AAE7BC B 0x3AAE7C8
	0x03AAE7C0 B 0x3AAE7C8
	0x03AAE7C4 B 0x3AAE7C8
	0x03AAE7C8 MOV X19, X0
	0x03AAE7CC CMP W1, 0x1
	0x03AAE7D0 B.NE 0x3AAE7FC
	0x03AAE7D4 MOV X0, X19
	0x03AAE7D8 BL 0x3EB1AD0
	0x03AAE7DC LDR X20, [X0]
	0x03AAE7E0 BL 0x3EB1AE0
	0x03AAE7E4 ADD X0, X31, 0x8
	0x03AAE7E8 MOV X1, X31
	0x03AAE7EC BL 0x39B1DB4
	0x03AAE7F0 CBZ X20, 0x3AAE780
	0x03AAE7F4 MOV X0, X20
	0x03AAE7F8 BL 0x1C16F18
	0x03AAE7FC MOV X20, X31
	0x03AAE800 B 0x3AAE808
	0x03AAE804 MOV X19, X0
	0x03AAE808 ADD X0, X31, 0x8
	0x03AAE80C MOV X1, X31
	0x03AAE810 BL 0x39B1DB4
	0x03AAE814 CBNZ X20, 0x3AAE820
	0x03AAE818 MOV X0, X19
	0x03AAE81C BL 0x1D2C690
	0x03AAE820 MOV X0, X20
	0x03AAE824 BL 0x1C16F18
	0x03AAE828 BL 0x1990590
	0x03AAE82C SUB X31, X31, 0x50
	0x03AAE830 STR X30, [X31 + 0x20]
	0x03AAE834 STP X22, X21, [X31 + 0x30]
	0x03AAE838 STP X20, X19, [X31 + 0x40]
	0x03AAE83C ADRP X22, 0x934000
	0x03AAE840 LDRB W8, [X22 + 0x448]
	0x03AAE844 MOV X19, X2
	0x03AAE848 MOV X20, X1
	0x03AAE84C MOV X21, X0
	0x03AAE850 TBNZ X8, 0x0, 0x3AAE868
	0x03AAE854 ADRP X0, 0x6A9000
	0x03AAE858 LDR X0, [X0 + 0x160]
	0x03AAE85C BL 0x1C16CF4
	0x03AAE860 MOVZ W8, 0x1
	0x03AAE864 STRB W8, [X22 + 0x448]
	0x03AAE868 LDR X8, [X21 + 0xF0]
	0x03AAE86C CBZ X8, 0x3AAE8E4
	0x03AAE870 LDR W9, [X21 + 0xEC]
	0x03AAE874 ADD X10, X21, 0xF8
	0x03AAE878 STR W9, [X8 + 0x2D0]
	0x03AAE87C LDR X8, [X21 + 0xF0]
	0x03AAE880 LDR X9, [X10 + 0x10]
	0x03AAE884 LDUR V0, [X21 + 0xF8]
	0x03AAE888 STR X9, [X31 + 0x10]
	0x03AAE88C STR V0, [X31]
	0x03AAE890 CBZ X8, 0x3AAE8E4
	0x03AAE894 LDR X9, [X31 + 0x10]
	0x03AAE898 LDR V0, [X31]
	0x03AAE89C ADRP X10, 0x6A9000
	0x03AAE8A0 LDR X10, [X10 + 0x160]
	0x03AAE8A4 ADD X8, X8, 0x2D4
	0x03AAE8A8 STR X9, [X8 + 0x10]
	0x03AAE8AC STR V0, [X8]
	0x03AAE8B0 LDR X0, [X10]
	0x03AAE8B4 LDR X21, [X21 + 0xF0]
	0x03AAE8B8 LDR W8, [X0 + 0xE0]
	0x03AAE8BC CBNZ W8, 0x3AAE8C4
	0x03AAE8C0 BL 0x1C16DFC
	0x03AAE8C4 MOV X0, X20
	0x03AAE8C8 MOV X1, X21
	0x03AAE8CC MOV X2, X19
	0x03AAE8D0 LDP X20, X19, [X31 + 0x40]
	0x03AAE8D4 LDP X22, X21, [X31 + 0x30]
	0x03AAE8D8 LDR X30, [X31 + 0x20]
	0x03AAE8DC ADD X31, X31, 0x50
	0x03AAE8E0 B 0x3AAE5EC
	0x03AAE8E4 BL 0x1C16F20
	0x03AAE8E8 STP X29, X30, [X31 - 0x40]!
	0x03AAE8EC STP X24, X23, [X31 + 0x10]
	0x03AAE8F0 STP X22, X21, [X31 + 0x20]
	0x03AAE8F4 STP X20, X19, [X31 + 0x30]
	0x03AAE8F8 SUB X31, X31, 0x3A0
	0x03AAE8FC ADRP X24, 0x934000
	0x03AAE900 LDRB W8, [X24 + 0x449]
	0x03AAE904 MOV X20, X3
	0x03AAE908 MOV X21, X2
	0x03AAE90C MOV X22, X1
	0x03AAE910 MOV X19, X0
	0x03AAE914 ADD X23, X31, 0x2C0
	0x03AAE918 TBNZ X8, 0x0, 0x3AAE984
	0x03AAE91C ADRP X0, 0x6A9000
	0x03AAE920 LDR X0, [X0 + 0xF20]
	0x03AAE924 BL 0x1C16CF4
	0x03AAE928 ADRP X0, 0x6A9000
	0x03AAE92C LDR X0, [X0 + 0xF28]
	0x03AAE930 BL 0x1C16CF4
	0x03AAE934 ADRP X0, 0x6A9000
	0x03AAE938 LDR X0, [X0 + 0xF30]
	0x03AAE93C BL 0x1C16CF4
	0x03AAE940 ADRP X0, 0x6A9000
	0x03AAE944 LDR X0, [X0 + 0xF38]
	0x03AAE948 BL 0x1C16CF4
	0x03AAE94C ADRP X0, 0x6A9000
	0x03AAE950 LDR X0, [X0 + 0xF40]
	0x03AAE954 BL 0x1C16CF4
	0x03AAE958 ADRP X0, 0x6A5000
	0x03AAE95C LDR X0, [X0 + 0xFF8]
	0x03AAE960 BL 0x1C16CF4
	0x03AAE964 ADRP X0, 0x6A8000
	0x03AAE968 LDR X0, [X0 + 0xFD8]
	0x03AAE96C BL 0x1C16CF4
	0x03AAE970 ADRP X0, 0x6A9000
	0x03AAE974 LDR X0, [X0 + 0xF48]
	0x03AAE978 BL 0x1C16CF4
	0x03AAE97C MOVZ W8, 0x1
	0x03AAE980 STRB W8, [X24 + 0x449]
	0x03AAE984 MOVI V0.2D, 0x0
	0x03AAE988 STR X31, [X31 + 0x378]
	0x03AAE98C STR W31, [X31 + 0x370]
	0x03AAE990 STP V0, V0, [X23 + 0xC0]
	0x03AAE994 STP V0, V0, [X23 + 0x90]
	0x03AAE998 STR V0, [X23 + 0x8]
	0x03AAE99C CBZ X22, 0x3AAEBC8
	0x03AAE9A0 ADRP X8, 0x6A9000
	0x03AAE9A4 ADRP X9, 0x6A9000
	0x03AAE9A8 LDR X8, [X8 + 0xF48]
	0x03AAE9AC LDR X9, [X9 + 0xF30]
	0x03AAE9B0 LDR X3, [X19 + 0x38]
	0x03AAE9B4 ADD X2, X31, 0x378
	0x03AAE9B8 LDR X1, [X8]
	0x03AAE9BC LDR X4, [X9]
	0x03AAE9C0 ADD X8, X31, 0x8
	0x03AAE9C4 MOV X0, X22
	0x03AAE9C8 BL 0x2240F24
	0x03AAE9CC LDUR V0, [X31 + 0x8]
	0x03AAE9D0 LDUR V1, [X31 + 0x18]
	0x03AAE9D4 STP V0, V1, [X23 + 0xC0]
	0x03AAE9D8 LDR W8, [X20 + 0x120]
	0x03AAE9DC LDP V1, V0, [X20 + 0x100]
	0x03AAE9E0 LDR V2, [X20 + 0xF]
	0x03AAE9E4 STR W8, [X31 + 0x370]
	0x03AAE9E8 STP V1, V0, [X23 + 0x90]
	0x03AAE9EC STR V2, [X23 + 0x8]
	0x03AAE9F0 ADD X0, X31, 0x340
	0x03AAE9F4 MOV W1, W31
	0x03AAE9F8 MOV X2, X31
	0x03AAE9FC BL 0x3C2240C
	0x03AAEA00 MOVZ W8, 0x5E
	0x03AAEA04 STR W8, [X31 + 0x35C]
	0x03AAEA08 ADD X0, X31, 0x340
	0x03AAEA0C MOVZ W1, 0x20
	0x03AAEA10 MOV X2, X31
	0x03AAEA14 BL 0x3C22520
	0x03AAEA18 ADRP X8, 0x6A5000
	0x03AAEA1C LDR X8, [X8 + 0xFF8]
	0x03AAEA20 MOVZ W9, 0x1
	0x03AAEA24 STR W9, [X31 + 0x348]
	0x03AAEA28 LDR W10, [X31 + 0x370]
	0x03AAEA2C LDP V0, V1, [X23 + 0x80]
	0x03AAEA30 LDR V2, [X23 + 0xA]
	0x03AAEA34 LDR X0, [X8]
	0x03AAEA38 STR W10, [X31 + 0x330]
	0x03AAEA3C STP V0, V1, [X23 + 0x40]
	0x03AAEA40 STR V2, [X23 + 0x6]
	0x03AAEA44 LDR W8, [X0 + 0xE0]
	0x03AAEA48 CBNZ W8, 0x3AAEA50
	0x03AAEA4C BL 0x1C16DFC
	0x03AAEA50 ADRP X8, 0x6A8000
	0x03AAEA54 LDR X8, [X8 + 0xFD8]
	0x03AAEA58 LDP V0, V1, [X23 + 0x40]
	0x03AAEA5C LDR V2, [X23 + 0x6]
	0x03AAEA60 LDR W9, [X31 + 0x330]
	0x03AAEA64 LDR X2, [X8]
	0x03AAEA68 STP V0, V1, [X23]
	0x03AAEA6C STR V2, [X23 + 0x2]
	0x03AAEA70 STR W9, [X31 + 0x2F0]
	0x03AAEA74 ADD X1, X31, 0x2C0
	0x03AAEA78 MOVZ W3, 0x1
	0x03AAEA7C MOVZ W5, 0x1
	0x03AAEA80 MOV X0, X22
	0x03AAEA84 MOV W4, W31
	0x03AAEA88 MOV X6, X31
	0x03AAEA8C BL 0x3A87660
	0x03AAEA90 STR X0, [X21]
	0x03AAEA94 LDR X22, [X31 + 0x378]
	0x03AAEA98 ADD X0, X31, 0x380
	0x03AAEA9C MOVZ W2, 0x2
	0x03AAEAA0 MOV X1, X21
	0x03AAEAA4 MOV X3, X31
	0x03AAEAA8 BL 0x3996A00
	0x03AAEAAC CBZ X22, 0x3AAEBCC
	0x03AAEAB0 STR X0, [X22 + 0x10]
	0x03AAEAB4 LDR X21, [X31 + 0x378]
	0x03AAEAB8 ADD X0, X31, 0x8
	0x03AAEABC MOVZ W2, 0x2B8
	0x03AAEAC0 MOV X1, X20

ISIL:
	001 Move [X31-96], X29
	002 Move [X31+16], X30
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Subtract X31, X31, 464
	013 NotImplemented "Instruction MRS not yet implemented."
	014 Move X8, [X24+40]
	015 Move X19, 0x935000
	016 Move X21, X2
	017 Move X20, X1
	018 Move [X31+456], X8
	019 Move W8, [X19+1087]
	020 Move [X31+48], X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {45}
	025 Move X0, 0x66E000
	026 Move X0, [X0+2296]
	027 Call 0x1C17CF4
	028 Move X0, 0x6A7000
	029 Move X0, [X0+184]
	030 Call 0x1C17CF4
	031 Move X0, 0x6A7000
	032 Move X0, [X0+168]
	033 Call 0x1C17CF4
	034 Move X0, 0x6A7000
	035 Move X0, [X0+16]
	036 Call 0x1C17CF4
	037 Move X0, 0x6A3000
	038 Move X0, [X0+3200]
	039 Call 0x1C17CF4
	040 Move X0, 0x6AA000
	041 Move X0, [X0+3784]
	042 Call 0x1C17CF4
	043 Move W8, 1
	044 Move [X19+1087], W8
	045 Add X0, X31, 256
	046 Move W2, 196
	047 Move W1, W31
	048 Move [X31+8], W31
	049 Call 0x3EB2B10
	050 Compare X20, 0
	051 JumpIfEqual {200}
	052 Move X8, 0x6A7000
	053 Move X8, [X8+168]
	054 Move X9, [X20+752]
	055 Move V0, [X20+46]
	056 Move X25, 0x6A3000
	057 Move X1, [X8]
	058 Move X19, [X21]
	059 Move X22, [X20+728]
	060 Move X25, [X25+3200]
	061 Move W0, 7
	062 Move [X31+32], X9
	063 Move [X31+1], V0
	064 Call 0x2236BC0, X0
	065 Move X2, X0
	066 Add X0, X31, 8
	067 Move X1, X19
	068 Move X3, X31
	069 Call ProfilingScope..ctor, X0, X1, X2
	070 Move X0, [X25]
	071 Move W8, [X0+224]
	072 Compare W8, 0
	073 JumpIfNotEqual {75}
	074 Call 0x1C17DFC
	075 Add X0, X31, 48
	076 Move X1, X19
	077 Move X2, X31
	078 Call ScriptableRenderContext.ExecuteCommandBuffer, X0, X1
	079 Compare X19, 0
	080 JumpIfEqual {201}
	081 Move X0, X19
	082 Move X1, X31
	083 Call CommandBuffer.Clear, X0
	084 Move X27, 0x66E000
	085 Move X26, 0x6AA000
	086 Move W8, [X20+760]
	087 Move X27, [X27+2296]
	088 Move X26, [X26+3784]
	089 Compare W8, 0
	090 JumpIfEqual {113}
	091 Move X0, [X27]
	092 Move W8, [X0+224]
	093 Compare W8, 0
	094 JumpIfNotEqual {96}
	095 Call 0x1C17DFC
	096 Move X1, [X26]
	097 Move W2, 1
	098 Move X0, X19
	099 Move X3, X31
	100 Call CoreUtils.SetKeyword, X0, X1, X2
	101 Move X0, [X25]
	102 Move W8, [X0+224]
	103 Compare W8, 0
	104 JumpIfNotEqual {106}
	105 Call 0x1C17DFC
	106 Add X0, X31, 48
	107 Move X1, X19
	108 Move X2, X31
	109 Call ScriptableRenderContext.ExecuteCommandBuffer, X0, X1
	110 Move X0, X19
	111 Move X1, X31
	112 Call CommandBuffer.Clear, X0
	113 Move X8, 0x6A7000
	114 Move X8, [X8+16]
	115 Move W23, [X21+396]
	116 Move X0, [X8]
	117 Move W8, [X0+224]
	118 Compare W8, 0
	119 JumpIfNotEqual {121}
	120 Call 0x1C17DFC
	121 Add X8, X31, 56
	122 Move X0, X22
	123 Move X1, X21
	124 Move W2, W23
	125 Move X3, X31
	126 Call RenderingUtils.CreateDrawingSettings, X0, X1, X2
	127 Move X22, 0x6A7000
	128 Move X22, [X22+184]
	129 Add X0, X31, 256
	130 Add X1, X31, 56
	131 Move W2, 196
	132 Call 0x3EB2AC0
	133 Move X0, [X22]
	134 Move W8, [X0+224]
	135 Compare W8, 0
	136 JumpIfNotEqual {138}
	137 Call 0x1C17DFC
	138 Add X0, X31, 256
	139 Move W1, W31
	140 Move X2, X31
	141 Call DrawingSettings.set_perObjectData, X0, X1
	142 Move X0, [X25]
	143 Move X22, [X21+8]
	144 Move X21, [X21+16]
	145 Move W8, [X0+224]
	146 Compare W8, 0
	147 JumpIfNotEqual {149}
	148 Call 0x1C17DFC
	149 Add X0, X31, 48
	150 Add X3, X31, 256
	151 Add X4, X31, 16
	152 Move X1, X22
	153 Move X2, X21
	154 Move X5, X31
	155 Call ScriptableRenderContext.DrawRenderers, X0, X1, X2, X3
	156 Move W8, [X20+760]
	157 Compare W8, 0
	158 JumpIfEqual {181}
	159 Move X0, [X27]
	160 Move W8, [X0+224]
	161 Compare W8, 0
	162 JumpIfNotEqual {164}
	163 Call 0x1C17DFC
	164 Move X1, [X26]
	165 Move X0, X19
	166 Move W2, W31
	167 Move X3, X31
	168 Call CoreUtils.SetKeyword, X0, X1, X2
	169 Move X0, [X25]
	170 Move W8, [X0+224]
	171 Compare W8, 0
	172 JumpIfNotEqual {174}
	173 Call 0x1C17DFC
	174 Add X0, X31, 48
	175 Move X1, X19
	176 Move X2, X31
	177 Call ScriptableRenderContext.ExecuteCommandBuffer, X0, X1
	178 Move X0, X19
	179 Move X1, X31
	180 Call CommandBuffer.Clear, X0
	181 Add X0, X31, 8
	182 Move X1, X31
	183 Call ProfilingScope.Dispose, X0
	184 Move X8, [X24+40]
	185 Move X9, [X31+456]
	186 NotImplemented "Instruction CMP not yet implemented."
	187 Add X31, X31, 464
	188 Move X20, [X31+80]
	189 Move X19, [X31+88]
	190 Move X22, [X31+64]
	191 Move X21, [X31+72]
	192 Move X24, [X31+48]
	193 Move X23, [X31+56]
	194 Move X26, [X31+32]
	195 Move X25, [X31+40]
	196 Move X30, [X31+16]
	197 Move X27, [X31+24]
	198 Move X29, [X31+96]
	199 Return 
	200 Call 0x1C17F20
	201 Call 0x1C17F20
	202 Call 0x3EB2B20
	203 Move X19, X0
	204 NotImplemented "Instruction CMP not yet implemented."
	205 Move X0, X19
	206 Call 0x3EB2AD0
	207 Move X20, [X0]
	208 Call 0x3EB2AE0
	209 Add X0, X31, 8
	210 Move X1, X31
	211 Call ProfilingScope.Dispose, X0
	212 Compare X20, 0
	213 JumpIfEqual {184}
	214 Move X0, X20
	215 Call 0x1C17F18
	216 Move X20, X31
	217 Move X19, X0
	218 Add X0, X31, 8
	219 Move X1, X31
	220 Call ProfilingScope.Dispose, X0
	221 Compare X20, 0
	222 JumpIfNotEqual {225}
	223 Move X0, X19
	224 Call 0x1D2D690
	225 Move X0, X20
	226 Call 0x1C17F18
	227 Call 0x1991590

Method: System.Void Execute(UnityEngine.Rendering.ScriptableRenderContext context, ref UnityEngine.Rendering.Universal.RenderingData renderingData)

Disassembly:
	0x03AAEAC4 BL 0x3EB1AC0
	0x03AAEAC8 CBZ X21, 0x3AAEBD0
	0x03AAEACC ADD X0, X21, 0x18
	0x03AAEAD0 ADD X1, X31, 0x8
	0x03AAEAD4 MOVZ W2, 0x2B8
	0x03AAEAD8 BL 0x3EB1AC0
	0x03AAEADC LDR W8, [X19 + 0xEC]
	0x03AAEAE0 ADD X9, X19, 0xF8
	0x03AAEAE4 STR W8, [X21 + 0x2D0]
	0x03AAEAE8 LDR X8, [X9 + 0x10]
	0x03AAEAEC LDUR V0, [X19 + 0xF8]
	0x03AAEAF0 ADD X9, X21, 0x2D4
	0x03AAEAF4 STR X8, [X9 + 0x10]
	0x03AAEAF8 STR V0, [X9]
	0x03AAEAFC ADD X0, X31, 0x380
	0x03AAEB00 MOV W1, W31
	0x03AAEB04 MOV X2, X31
	0x03AAEB08 BL 0x398E404
	0x03AAEB0C ADRP X21, 0x6A9000
	0x03AAEB10 LDR X21, [X21 + 0xF40]
	0x03AAEB14 LDR X8, [X21]
	0x03AAEB18 LDR W9, [X8 + 0xE0]
	0x03AAEB1C CBNZ W9, 0x3AAEB2C
	0x03AAEB20 MOV X0, X8
	0x03AAEB24 BL 0x1C16DFC
	0x03AAEB28 LDR X8, [X21]
	0x03AAEB2C LDR X9, [X8 + 0xB8]
	0x03AAEB30 LDR X19, [X9 + 0x8]
	0x03AAEB34 CBNZ X19, 0x3AAEB8C
	0x03AAEB38 LDR W9, [X8 + 0xE0]
	0x03AAEB3C CBNZ W9, 0x3AAEB4C
	0x03AAEB40 MOV X0, X8
	0x03AAEB44 BL 0x1C16DFC
	0x03AAEB48 LDR X8, [X21]
	0x03AAEB4C ADRP X9, 0x6A9000
	0x03AAEB50 LDR X8, [X8 + 0xB8]
	0x03AAEB54 LDR X9, [X9 + 0xF20]
	0x03AAEB58 LDR X20, [X8]
	0x03AAEB5C LDR X0, [X9]
	0x03AAEB60 BL 0x1C16F10
	0x03AAEB64 ADRP X8, 0x6A9000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x935000
	007 Move W8, [X22+1088]
	008 Move X19, X2
	009 Move X20, X1
	010 Move X21, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x6AA000
	016 Move X0, [X0+344]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X22+1088], W8
	020 Move X8, [X21+288]
	021 Compare X8, 0
	022 JumpIfEqual {52}
	023 Move X9, [X21+224]
	024 Add X10, X21, 260
	025 Move [X8+728], X9
	026 Move X9, [X10+16]
	027 Move V0, [X10]
	028 Move [X8+752], X9
	029 Move [X8+46], V0
	030 Move X22, [X21+288]
	031 Compare X22, 0
	032 JumpIfEqual {52}
	033 Move W8, [X21+256]
	034 Move X9, 0x6AA000
	035 Move X9, [X9+344]
	036 Move [X22+760], W8
	037 Move X0, [X9]
	038 Move W8, [X0+224]
	039 Compare W8, 0
	040 JumpIfNotEqual {42}
	041 Call 0x1C17DFC
	042 Move X0, X20
	043 Move X1, X22
	044 Move X2, X19
	045 Move X20, [X31+32]
	046 Move X19, [X31+40]
	047 Move X22, [X31+16]
	048 Move X21, [X31+24]
	049 Move X30, [X31+48]
	050 Call DepthNormalOnlyPass.ExecutePass, X0, X1, X2
	051 Return 
	052 Call 0x1C17F20

Method: System.Void OnCameraCleanup(UnityEngine.Rendering.CommandBuffer cmd)

Disassembly:
	0x03AAEB68 LDR X8, [X8 + 0xF38]
	0x03AAEB6C MOV X19, X0
	0x03AAEB70 LDR X2, [X8]
	0x03AAEB74 MOV X1, X20
	0x03AAEB78 MOV X3, X31
	0x03AAEB7C BL 0x25C78AC
	0x03AAEB80 LDR X8, [X21]
	0x03AAEB84 LDR X8, [X8 + 0xB8]
	0x03AAEB88 STR X19, [X8 + 0x8]
	0x03AAEB8C ADRP X8, 0x6A9000
	0x03AAEB90 LDR X8, [X8 + 0xF28]
	0x03AAEB94 LDR X2, [X8]
	0x03AAEB98 ADD X0, X31, 0x380
	0x03AAEB9C MOV X1, X19
	0x03AAEBA0 BL 0x224107C
	0x03AAEBA4 ADD X0, X31, 0x380
	0x03AAEBA8 MOV X1, X31
	0x03AAEBAC BL 0x39972C0
	0x03AAEBB0 ADD X31, X31, 0x3A0
	0x03AAEBB4 LDP X20, X19, [X31 + 0x30]
	0x03AAEBB8 LDP X22, X21, [X31 + 0x20]
	0x03AAEBBC LDP X24, X23, [X31 + 0x10]
	0x03AAEBC0 LDP X29, X30, [X31], #0x40
	0x03AAEBC4 RET
	0x03AAEBC8 BL 0x1C16F20
	0x03AAEBCC BL 0x1C16F20
	0x03AAEBD0 BL 0x1C16F20
	0x03AAEBD4 B 0x3AAEBF4
	0x03AAEBD8 B 0x3AAEBF4
	0x03AAEBDC B 0x3AAEBF4
	0x03AAEBE0 B 0x3AAEBF4
	0x03AAEBE4 B 0x3AAEBF4
	0x03AAEBE8 B 0x3AAEBF4
	0x03AAEBEC B 0x3AAEBF4
	0x03AAEBF0 B 0x3AAEBF4
	0x03AAEBF4 MOV X19, X0
	0x03AAEBF8 CMP W1, 0x1
	0x03AAEBFC B.NE 0x3AAEC28
	0x03AAEC00 MOV X0, X19
	0x03AAEC04 BL 0x3EB1AD0
	0x03AAEC08 LDR X20, [X0]
	0x03AAEC0C BL 0x3EB1AE0
	0x03AAEC10 ADD X0, X31, 0x380
	0x03AAEC14 MOV X1, X31
	0x03AAEC18 BL 0x39972C0
	0x03AAEC1C CBZ X20, 0x3AAEBB0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x935000
	006 Move W8, [X21+1089]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x6AA000
	014 Move X0, [X0+344]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+1089], W8
	018 Compare X20, 0
	019 JumpIfEqual {39}
	020 Move X20, 0x6AA000
	021 Move X20, [X20+344]
	022 Move [X19+232], X31
	023 Move [X19+240], X31
	024 Move [X19+248], X31
	025 Move X0, [X20]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {31}
	029 Call 0x1C17DFC
	030 Move X0, [X20]
	031 Move X8, [X0+184]
	032 Move X8, [X8]
	033 Move [X19+224], X8
	034 Move X20, [X31+16]
	035 Move X19, [X31+24]
	036 Move X30, [X31+32]
	037 Move X21, [X31+40]
	038 Return 
	039 Move X0, 0x64B000
	040 Move X0, [X0+1320]
	041 Call 0x1C17D08
	042 Call 0x1C17F10
	043 Move X19, X0
	044 Move X0, 0x6A8000
	045 Move X0, [X0+1776]
	046 Call 0x1C17D08
	047 Move X1, X0
	048 Move X0, X19
	049 Move X2, X31
	050 Call ArgumentNullException..ctor, X0, X1
	051 Move X0, 0x6AA000
	052 Move X0, [X0+3792]
	053 Call 0x1C17D08
	054 Move X1, X0
	055 Move X0, X19
	056 Call 0x1C17DEC

Method: System.Void Render(UnityEngine.Experimental.Rendering.RenderGraphModule.RenderGraph renderGraph, out UnityEngine.Experimental.Rendering.RenderGraphModule.TextureHandle cameraNormalsTexture, out UnityEngine.Experimental.Rendering.RenderGraphModule.TextureHandle cameraDepthTexture, ref UnityEngine.Rendering.Universal.RenderingData renderingData)

Disassembly:
	0x03AAEC20 MOV X0, X20
	0x03AAEC24 BL 0x1C16F18
	0x03AAEC28 MOV X20, X31
	0x03AAEC2C B 0x3AAEC34
	0x03AAEC30 MOV X19, X0
	0x03AAEC34 ADD X0, X31, 0x380
	0x03AAEC38 MOV X1, X31
	0x03AAEC3C BL 0x39972C0
	0x03AAEC40 CBNZ X20, 0x3AAEC4C
	0x03AAEC44 MOV X0, X19
	0x03AAEC48 BL 0x1D2C690
	0x03AAEC4C MOV X0, X20
	0x03AAEC50 BL 0x1C16F18
	0x03AAEC54 BL 0x1990590
	0x03AAEC58 SUB X31, X31, 0x30
	0x03AAEC5C STP X30, X21, [X31 + 0x10]
	0x03AAEC60 STP X20, X19, [X31 + 0x20]
	0x03AAEC64 ADRP X21, 0x934000
	0x03AAEC68 ADRP X20, 0x6A9000
	0x03AAEC6C ADRP X19, 0x6A9000
	0x03AAEC70 LDRB W8, [X21 + 0x44A]
	0x03AAEC74 LDR X20, [X20 + 0xF50]
	0x03AAEC78 LDR X19, [X19 + 0x160]
	0x03AAEC7C TBNZ X8, 0x0, 0x3AAECA0
	0x03AAEC80 ADRP X0, 0x6A9000
	0x03AAEC84 LDR X0, [X0 + 0x160]
	0x03AAEC88 BL 0x1C16CF4
	0x03AAEC8C ADRP X0, 0x6A9000
	0x03AAEC90 LDR X0, [X0 + 0xF50]
	0x03AAEC94 BL 0x1C16CF4
	0x03AAEC98 MOVZ W8, 0x1
	0x03AAEC9C STRB W8, [X21 + 0x44A]
	0x03AAECA0 LDR X1, [X20]
	0x03AAECA4 ADD X0, X31, 0x8
	0x03AAECA8 MOV X2, X31
	0x03AAECAC STR W31, [X31 + 0x8]
	0x03AAECB0 BL 0x3C5A49C
	0x03AAECB4 LDR X8, [X19]
	0x03AAECB8 LDR W9, [X31 + 0x8]
	0x03AAECBC LDP X20, X19, [X31 + 0x20]
	0x03AAECC0 LDP X30, X21, [X31 + 0x10]
	0x03AAECC4 LDR X8, [X8 + 0xB8]
	0x03AAECC8 STR W9, [X8]
	0x03AAECCC ADD X31, X31, 0x30
	0x03AAECD0 RET
	0x03AAECD4 STR X30, [X31 - 0x20]!
	0x03AAECD8 STP X20, X19, [X31 + 0x10]
	0x03AAECDC ADRP X19, 0x934000
	0x03AAECE0 ADRP X20, 0x6A9000
	0x03AAECE4 LDRB W8, [X19 + 0x44B]
	0x03AAECE8 LDR X20, [X20 + 0xF40]
	0x03AAECEC TBNZ X8, 0x0, 0x3AAED04
	0x03AAECF0 ADRP X0, 0x6A9000
	0x03AAECF4 LDR X0, [X0 + 0xF40]
	0x03AAECF8 BL 0x1C16CF4
	0x03AAECFC MOVZ W8, 0x1
	0x03AAED00 STRB W8, [X19 + 0x44B]
	0x03AAED04 LDR X0, [X20]
	0x03AAED08 BL 0x1C16F10
	0x03AAED0C MOV X1, X31
	0x03AAED10 MOV X19, X0
	0x03AAED14 BL 0x33BDD8C
	0x03AAED18 LDR X8, [X20]
	0x03AAED1C LDR X8, [X8 + 0xB8]
	0x03AAED20 STR X19, [X8]
	0x03AAED24 LDP X20, X19, [X31 + 0x10]
	0x03AAED28 LDR X30, [X31], #0x20
	0x03AAED2C RET
	0x03AAED30 MOV X1, X31
	0x03AAED34 B 0x33BDD8C
	0x03AAED38 STP X30, X21, [X31 - 0x20]!
	0x03AAED3C STP X20, X19, [X31 + 0x10]
	0x03AAED40 ADRP X21, 0x934000
	0x03AAED44 LDRB W8, [X21 + 0x44C]
	0x03AAED48 MOV X20, X2
	0x03AAED4C MOV X19, X1
	0x03AAED50 TBNZ X8, 0x0, 0x3AAED68
	0x03AAED54 ADRP X0, 0x6A9000
	0x03AAED58 LDR X0, [X0 + 0x160]
	0x03AAED5C BL 0x1C16CF4
	0x03AAED60 MOVZ W8, 0x1
	0x03AAED64 STRB W8, [X21 + 0x44C]
	0x03AAED68 CBZ X20, 0x3AAEDA4
	0x03AAED6C CBZ X19, 0x3AAEDA4
	0x03AAED70 ADRP X8, 0x6A9000
	0x03AAED74 LDR X8, [X8 + 0x160]
	0x03AAED78 LDR X20, [X20 + 0x10]
	0x03AAED7C LDR X0, [X8]
	0x03AAED80 LDR W8, [X0 + 0xE0]
	0x03AAED84 CBNZ W8, 0x3AAED8C
	0x03AAED88 BL 0x1C16DFC
	0x03AAED8C ADD X2, X19, 0x18
	0x03AAED90 MOV X0, X20
	0x03AAED94 MOV X1, X19
	0x03AAED98 LDP X20, X19, [X31 + 0x10]
	0x03AAED9C LDP X30, X21, [X31], #0x20
	0x03AAEDA0 B 0x3AAE5EC
	0x03AAEDA4 BL 0x1C16F20
	0x03AAEDA8 SUB X31, X31, 0x70
	0x03AAEDAC STR X30, [X31 + 0x10]
	0x03AAEDB0 STP X28, X27, [X31 + 0x20]
	0x03AAEDB4 STP X26, X25, [X31 + 0x30]
	0x03AAEDB8 STP X24, X23, [X31 + 0x40]
	0x03AAEDBC STP X22, X21, [X31 + 0x50]
	0x03AAEDC0 STP X20, X19, [X31 + 0x60]
	0x03AAEDC4 ADRP X28, 0x934000
	0x03AAEDC8 ADRP X27, 0x6A9000
	0x03AAEDCC LDRB W8, [X28 + 0x44D]
	0x03AAEDD0 LDR X27, [X27 + 0x168]
	0x03AAEDD4 MOV X24, X7
	0x03AAEDD8 MOV X20, X6
	0x03AAEDDC MOV X26, X5
	0x03AAEDE0 MOV X21, X4
	0x03AAEDE4 MOV W22, W3
	0x03AAEDE8 MOV W25, W2
	0x03AAEDEC MOV W23, W1
	0x03AAEDF0 MOV X19, X0
	0x03AAEDF4 TBNZ X8, 0x0, 0x3AAEE18
	0x03AAEDF8 ADRP X0, 0x6A9000
	0x03AAEDFC LDR X0, [X0 + 0x168]
	0x03AAEE00 BL 0x1C16CF4
	0x03AAEE04 ADRP X0, 0x6A4000
	0x03AAEE08 LDR X0, [X0 + 0xF30]
	0x03AAEE0C BL 0x1C16CF4
	0x03AAEE10 MOVZ W8, 0x1
	0x03AAEE14 STRB W8, [X28 + 0x44D]
	0x03AAEE18 LDR X0, [X27]
	0x03AAEE1C ADRP X27, 0x6A4000
	0x03AAEE20 LDR W28, [X31 + 0x70]
	0x03AAEE24 LDR W8, [X0 + 0xE0]
	0x03AAEE28 LDR X27, [X27 + 0xF30]
	0x03AAEE2C CBNZ W8, 0x3AAEE34
	0x03AAEE30 BL 0x1C16DFC
	0x03AAEE34 AND X5, X26, 0x0
	0x03AAEE38 AND X7, X24, 0x0
	0x03AAEE3C AND W2, W25, 0x1
	0x03AAEE40 MOV X0, X19
	0x03AAEE44 MOV W1, W23
	0x03AAEE48 MOV W3, W22
	0x03AAEE4C MOV X4, X21
	0x03AAEE50 MOV X6, X20
	0x03AAEE54 STR W28, [X31]
	0x03AAEE58 BL 0x3AAEE8C
	0x03AAEE5C LDR X0, [X27]
	0x03AAEE60 MOVZ W1, 0x2
	0x03AAEE64 BL 0x1C16D6C
	0x03AAEE68 STR X0, [X19 + 0x198]
	0x03AAEE6C LDP X20, X19, [X31 + 0x60]
	0x03AAEE70 LDP X22, X21, [X31 + 0x50]
	0x03AAEE74 LDP X24, X23, [X31 + 0x40]
	0x03AAEE78 LDP X26, X25, [X31 + 0x30]
	0x03AAEE7C LDP X28, X27, [X31 + 0x20]
	0x03AAEE80 LDR X30, [X31 + 0x10]
	0x03AAEE84 ADD X31, X31, 0x70
	0x03AAEE88 RET
	0x03AAEE8C SUB X31, X31, 0x70
	0x03AAEE90 STR X30, [X31 + 0x10]
	0x03AAEE94 STP X28, X27, [X31 + 0x20]
	0x03AAEE98 STP X26, X25, [X31 + 0x30]
	0x03AAEE9C STP X24, X23, [X31 + 0x40]
	0x03AAEEA0 STP X22, X21, [X31 + 0x50]
	0x03AAEEA4 STP X20, X19, [X31 + 0x60]
	0x03AAEEA8 ADRP X28, 0x934000
	0x03AAEEAC ADRP X27, 0x6A6000
	0x03AAEEB0 LDRB W8, [X28 + 0x451]
	0x03AAEEB4 LDR X27, [X27 + 0xA0]
	0x03AAEEB8 MOV X24, X7
	0x03AAEEBC MOV X21, X6
	0x03AAEEC0 MOV X26, X5
	0x03AAEEC4 MOV X22, X4
	0x03AAEEC8 MOV W23, W3
	0x03AAEECC MOV W25, W2
	0x03AAEED0 MOV W20, W1
	0x03AAEED4 MOV X19, X0
	0x03AAEED8 TBNZ X8, 0x0, 0x3AAEEFC
	0x03AAEEDC ADRP X0, 0x6A6000
	0x03AAEEE0 LDR X0, [X0 + 0xA8]
	0x03AAEEE4 BL 0x1C16CF4
	0x03AAEEE8 ADRP X0, 0x6A6000
	0x03AAEEEC LDR X0, [X0 + 0xA0]
	0x03AAEEF0 BL 0x1C16CF4
	0x03AAEEF4 MOVZ W8, 0x1
	0x03AAEEF8 STRB W8, [X28 + 0x451]
	0x03AAEEFC LDR X0, [X27]
	0x03AAEF00 ADD X1, X31, 0x1C
	0x03AAEF04 STR W20, [X31 + 0x1C]
	0x03AAEF08 BL 0x1C16E04
	0x03AAEF0C MOV X1, X31
	0x03AAEF10 BL 0x33BE520
	0x03AAEF14 CBZ X0, 0x3AAEF88
	0x03AAEF18 LDR X8, [X0]
	0x03AAEF1C ADRP X28, 0x6A6000
	0x03AAEF20 LDR W27, [X31 + 0x70]
	0x03AAEF24 LDP X9, X1, [X8 + 0x1A8]
	0x03AAEF28 LDR X28, [X28 + 0xA8]
	0x03AAEF2C BLR X9
	0x03AAEF30 MOV X1, X0
	0x03AAEF34 AND X5, X26, 0x0
	0x03AAEF38 AND X7, X24, 0x0
	0x03AAEF3C AND W2, W25, 0x1
	0x03AAEF40 MOV X0, X19
	0x03AAEF44 MOV W3, W23
	0x03AAEF48 MOV X4, X22
	0x03AAEF4C MOV X6, X21
	0x03AAEF50 STR W27, [X31]
	0x03AAEF54 BL 0x3AAF4AC
	0x03AAEF58 LDR X1, [X28]
	0x03AAEF5C MOV W0, W20
	0x03AAEF60 BL 0x2235BC0
	0x03AAEF64 STR X0, [X19 + 0x178]
	0x03AAEF68 LDP X20, X19, [X31 + 0x60]
	0x03AAEF6C LDP X22, X21, [X31 + 0x50]
	0x03AAEF70 LDP X24, X23, [X31 + 0x40]
	0x03AAEF74 LDP X26, X25, [X31 + 0x30]
	0x03AAEF78 LDP X28, X27, [X31 + 0x20]
	0x03AAEF7C LDR X30, [X31 + 0x10]
	0x03AAEF80 ADD X31, X31, 0x70
	0x03AAEF84 RET
	0x03AAEF88 BL 0x1C16F20
	0x03AAEF8C STP X30, X23, [X31 - 0x30]!
	0x03AAEF90 STP X22, X21, [X31 + 0x10]
	0x03AAEF94 STP X20, X19, [X31 + 0x20]
	0x03AAEF98 CBZ X1, 0x3AAF030
	0x03AAEF9C MOV X20, X2
	0x03AAEFA0 CBZ X2, 0x3AAF060
	0x03AAEFA4 MOV X19, X3
	0x03AAEFA8 CBZ X3, 0x3AAF090
	0x03AAEFAC LDR X23, [X0 + 0x198]
	0x03AAEFB0 MOV X21, X0
	0x03AAEFB4 CBZ X23, 0x3AAF01C
	0x03AAEFB8 LDR X8, [X23]
	0x03AAEFBC MOV X22, X1
	0x03AAEFC0 MOV X0, X22
	0x03AAEFC4 LDR X1, [X8 + 0x40]
	0x03AAEFC8 BL 0x1C16E00
	0x03AAEFCC CBZ X0, 0x3AAF020
	0x03AAEFD0 LDR W8, [X23 + 0x18]
	0x03AAEFD4 CBZ W8, 0x3AAF02C
	0x03AAEFD8 STR X22, [X23 + 0x20]
	0x03AAEFDC LDR X22, [X21 + 0x198]
	0x03AAEFE0 CBZ X22, 0x3AAF01C
	0x03AAEFE4 LDR X8, [X22]
	0x03AAEFE8 MOV X0, X20
	0x03AAEFEC LDR X1, [X8 + 0x40]
	0x03AAEFF0 BL 0x1C16E00
	0x03AAEFF4 CBZ X0, 0x3AAF020
	0x03AAEFF8 LDR W8, [X22 + 0x18]
	0x03AAEFFC CMP W8, 0x1
	0x03AAF000 B.LS 0x3AAF02C
	0x03AAF004 STR X20, [X22 + 0x28]
	0x03AAF008 STR X19, [X21 + 0x1A0]
	0x03AAF00C LDP X20, X19, [X31 + 0x20]
	0x03AAF010 LDP X22, X21, [X31 + 0x10]
	0x03AAF014 LDP X30, X23, [X31], #0x30
	0x03AAF018 RET
	0x03AAF01C BL 0x1C16F20
	0x03AAF020 BL 0x1C16F44
	0x03AAF024 MOV X1, X31
	0x03AAF028 BL 0x1C16DEC
	0x03AAF02C BL 0x1C16F28
	0x03AAF030 ADRP X0, 0x64C000
	0x03AAF034 LDR X0, [X0 + 0x578]
	0x03AAF038 BL 0x1C16D08
	0x03AAF03C BL 0x1C16F10
	0x03AAF040 MOV X19, X0
	0x03AAF044 ADRP X0, 0x6A8000
	0x03AAF048 LDR X0, [X0 + 0xF58]
	0x03AAF04C BL 0x1C16D08
	0x03AAF050 MOV X20, X0
	0x03AAF054 ADRP X0, 0x6A8000
	0x03AAF058 LDR X0, [X0 + 0xF60]
	0x03AAF05C B 0x3AAF0BC
	0x03AAF060 ADRP X0, 0x64C000
	0x03AAF064 LDR X0, [X0 + 0x578]
	0x03AAF068 BL 0x1C16D08
	0x03AAF06C BL 0x1C16F10
	0x03AAF070 MOV X19, X0
	0x03AAF074 ADRP X0, 0x6A8000
	0x03AAF078 LDR X0, [X0 + 0xF68]
	0x03AAF07C BL 0x1C16D08
	0x03AAF080 MOV X20, X0
	0x03AAF084 ADRP X0, 0x6A8000
	0x03AAF088 LDR X0, [X0 + 0xF70]
	0x03AAF08C B 0x3AAF0BC
	0x03AAF090 ADRP X0, 0x64C000
	0x03AAF094 LDR X0, [X0 + 0x578]
	0x03AAF098 BL 0x1C16D08
	0x03AAF09C BL 0x1C16F10

ISIL:
	001 Move [X31-80], X29
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Subtract X31, X31, 1056
	011 Move X25, 0x935000
	012 Move W8, [X25+1090]
	013 Move X20, X4
	014 Move X21, X3
	015 Move X22, X2
	016 Move X23, X1
	017 Move X19, X0
	018 Add X24, X31, 704
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {55}
	023 Move X0, 0x6AA000
	024 Move X0, [X0+344]
	025 Call 0x1C17CF4
	026 Move X0, 0x6AA000
	027 Move X0, [X0+3800]
	028 Call 0x1C17CF4
	029 Move X0, 0x6AA000
	030 Move X0, [X0+3808]
	031 Call 0x1C17CF4
	032 Move X0, 0x6AA000
	033 Move X0, [X0+3816]
	034 Call 0x1C17CF4
	035 Move X0, 0x6AA000
	036 Move X0, [X0+3824]
	037 Call 0x1C17CF4
	038 Move X0, 0x6AA000
	039 Move X0, [X0+3832]
	040 Call 0x1C17CF4
	041 Move X0, 0x6A6000
	042 Move X0, [X0+4088]
	043 Call 0x1C17CF4
	044 Move X0, 0x6AA000
	045 Move X0, [X0+3840]
	046 Call 0x1C17CF4
	047 Move X0, 0x6A9000
	048 Move X0, [X0+4056]
	049 Call 0x1C17CF4
	050 Move X0, 0x6AA000
	051 Move X0, [X0+520]
	052 Call 0x1C17CF4
	053 Move W8, 1
	054 Move [X25+1090], W8
	055 NotImplemented "Instruction MOVI not yet implemented."
	056 Move [X31+1016], X31
	057 Move [X31+1008], W31
	058 Move [X31+944], W31
	059 Move [X24+320], V0
	060 Move [X24+328], V0
	061 Move [X24+272], V0
	062 Move [X24+280], V0
	063 Move [X24+16], V0
	064 Move [X24+208], V0
	065 Move [X24+216], V0
	066 Move [X24+12], V0
	067 Compare X23, 0
	068 JumpIfEqual {281}
	069 Move X8, 0x6AA000
	070 Move X9, 0x6AA000
	071 Move X8, [X8+3840]
	072 Move X9, [X9+3816]
	073 Move X3, [X19+56]
	074 Add X2, X31, 1016
	075 Move X1, [X8]
	076 Move X4, [X9]
	077 Add X8, X31, 8
	078 Move X0, X23
	079 Call 0x2241F24, X0, X1, X2, X3
	080 NotImplemented "Instruction LDUR not yet implemented."
	081 NotImplemented "Instruction LDUR not yet implemented."
	082 Move [X24+320], V0
	083 Move [X24+328], V1
	084 Move W8, [X20+288]
	085 Move V1, [X20+256]
	086 Move V0, [X20+272]
	087 Move V2, [X20+15]
	088 Move [X31+1008], W8
	089 Move [X24+272], V1
	090 Move [X24+280], V0
	091 Move [X24+16], V2
	092 Add X0, X31, 960
	093 Move W1, W31
	094 Move X2, X31
	095 Call RenderTextureDescriptor.set_graphicsFormat, X0, X1
	096 Move W8, 94
	097 Move [X31+988], W8
	098 Add X0, X31, 960
	099 Move W1, 32
	100 Move X2, X31
	101 Call RenderTextureDescriptor.set_depthBufferBits, X0, X1
	102 Move X8, 0x6A6000
	103 Move X8, [X8+4088]
	104 Move W9, 1
	105 Move [X31+968], W9
	106 Move W10, [X31+1008]
	107 Move V0, [X24+256]
	108 Move V1, [X24+272]
	109 Move V2, [X24+18]
	110 Move X0, [X8]
	111 Move [X31+880], W10
	112 Move [X24+128], V0
	113 Move [X24+136], V1
	114 Move [X24+10], V2
	115 Move W8, [X0+224]
	116 Compare W8, 0
	117 JumpIfNotEqual {119}
	118 Call 0x1C17DFC
	119 Move X8, 0x6A9000
	120 Move X8, [X8+4056]
	121 Move V0, [X24+128]
	122 Move V1, [X24+144]
	123 Move V2, [X24+10]
	124 Move W9, [X31+880]
	125 Move X2, [X8]
	126 Move [X24+64], V0
	127 Move [X24+72], V1
	128 Move [X24+6], V2
	129 Move [X31+816], W9
	130 Add X1, X31, 768
	131 Move W3, 1
	132 Move W5, 1
	133 Move X0, X23
	134 Move W4, W31
	135 Move X6, X31
	136 Call UniversalRenderer.CreateRenderGraphTexture, X0, X1, X2, X3, X4, X5
	137 Add X8, X20, 240
	138 Move [X21], X0
	139 Move W9, [X8+48]
	140 Move V1, [X8+16]
	141 Move V0, [X8+32]
	142 Move V2, [X8]
	143 Move [X31+944], W9
	144 Move [X24+208], V1
	145 Move [X24+216], V0
	146 Move [X24+12], V2
	147 Add X0, X31, 896
	148 Move W1, W31
	149 Move X2, X31
	150 Call RenderTextureDescriptor.set_depthBufferBits, X0, X1
	151 Move X8, 0x6AA000
	152 Move X8, [X8+344]
	153 Move X0, [X8]
	154 Move W8, 1
	155 Move [X31+904], W8
	156 Move W8, [X0+224]
	157 Compare W8, 0
	158 JumpIfNotEqual {160}
	159 Call 0x1C17DFC
	160 Call DepthNormalOnlyPass.GetGraphicsFormat
	161 Move W1, W0
	162 Add X0, X31, 896
	163 Move X2, X31
	164 Call RenderTextureDescriptor.set_graphicsFormat, X0, X1
	165 Move X8, 0x6AA000
	166 Move X8, [X8+520]
	167 Move V0, [X24+192]
	168 Move V1, [X24+208]
	169 Move V2, [X24+14]
	170 Move W9, [X31+944]
	171 Move X2, [X8]
	172 Move [X24], V0
	173 Move [X24+8], V1
	174 Move [X24+2], V2
	175 Move [X31+752], W9
	176 Add X1, X31, 704
	177 Move W3, 1
	178 Move W5, 1
	179 Move X0, X23
	180 Move W4, W31
	181 Move X6, X31
	182 Call UniversalRenderer.CreateRenderGraphTexture, X0, X1, X2, X3, X4, X5
	183 Move [X22], X0
	184 Move X23, [X31+1016]
	185 Add X0, X31, 1024
	186 Move X1, X22
	187 Move W2, W31
	188 Move X3, X31
	189 Call RenderGraphBuilder.UseColorBuffer, X0, X1, X2
	190 Compare X23, 0
	191 JumpIfEqual {282}
	192 Move [X23+24], X0
	193 Move X22, [X31+1016]
	194 Add X0, X31, 1024
	195 Move W2, 2
	196 Move X1, X21
	197 Move X3, X31
	198 Call RenderGraphBuilder.UseDepthBuffer, X0, X1, X2
	199 Compare X22, 0
	200 JumpIfEqual {283}
	201 Move [X22+16], X0
	202 Move X21, [X31+1016]
	203 Add X0, X31, 8
	204 Move W2, 696
	205 Move X1, X20
	206 Call 0x3EB2AC0
	207 Compare X21, 0
	208 JumpIfEqual {284}
	209 Add X0, X21, 32
	210 Add X1, X31, 8
	211 Move W2, 696
	212 Call 0x3EB2AC0
	213 Move X8, [X19+224]
	214 Add X9, X19, 260
	215 Move [X21+728], X8
	216 Move X8, [X9+16]
	217 Move V0, [X9]
	218 Move [X21+752], X8
	219 Move [X21+46], V0
	220 Move W8, [X19+256]
	221 Move [X21+760], W8
	222 Add X0, X31, 1024
	223 Move W1, W31
	224 Move X2, X31
	225 Call RenderGraphBuilder.AllowPassCulling, X0, X1
	226 Move X21, 0x6AA000
	227 Move X21, [X21+3832]
	228 Move X8, [X21]
	229 Move W9, [X8+224]
	230 Compare W9, 0
	231 JumpIfNotEqual {235}
	232 Move X0, X8
	233 Call 0x1C17DFC
	234 Move X8, [X21]
	235 Move X9, [X8+184]
	236 Move X19, [X9+8]
	237 Compare X19, 0
	238 JumpIfNotEqual {261}
	239 Move W9, [X8+224]
	240 Compare W9, 0
	241 JumpIfNotEqual {245}
	242 Move X0, X8
	243 Call 0x1C17DFC
	244 Move X8, [X21]
	245 Move X9, 0x6AA000
	246 Move X8, [X8+184]
	247 Move X9, [X9+3800]
	248 Move X20, [X8]
	249 Move X0, [X9]
	250 Call 0x1C17F10
	251 Move X8, 0x6AA000
	252 Move X8, [X8+3824]
	253 Move X19, X0
	254 Move X2, [X8]
	255 Move X1, X20
	256 Move X3, X31
	257 Call 0x25C88AC, X0, X1, X2
	258 Move X8, [X21]
	259 Move X8, [X8+184]
	260 Move [X8+8], X19
	261 Move X8, 0x6AA000
	262 Move X8, [X8+3808]
	263 Move X2, [X8]
	264 Add X0, X31, 1024
	265 Move X1, X19
	266 Call 0x224207C, X0, X1
	267 Add X0, X31, 1024
	268 Move X1, X31
	269 Call RenderGraphBuilder.Dispose, X0
	270 Add X31, X31, 1056
	271 Move X20, [X31+64]
	272 Move X19, [X31+72]
	273 Move X22, [X31+48]
	274 Move X21, [X31+56]
	275 Move X24, [X31+32]
	276 Move X23, [X31+40]
	277 Move X30, [X31+16]
	278 Move X25, [X31+24]
	279 Move X29, [X31+80]
	280 Return 
	281 Call 0x1C17F20
	282 Call 0x1C17F20
	283 Call 0x1C17F20
	284 Call 0x1C17F20
	285 Move X19, X0
	286 NotImplemented "Instruction CMP not yet implemented."
	287 Move X0, X19
	288 Call 0x3EB2AD0
	289 Move X20, [X0]
	290 Call 0x3EB2AE0
	291 Add X0, X31, 1024
	292 Move X1, X31
	293 Call RenderGraphBuilder.Dispose, X0
	294 Compare X20, 0
	295 JumpIfEqual {270}
	296 Move X0, X20
	297 Call 0x1C17F18
	298 Move X20, X31
	299 Move X19, X0
	300 Add X0, X31, 1024
	301 Move X1, X31
	302 Call RenderGraphBuilder.Dispose, X0
	303 Compare X20, 0
	304 JumpIfNotEqual {307}
	305 Move X0, X19
	306 Call 0x1D2D690
	307 Move X0, X20
	308 Call 0x1C17F18
	309 Call 0x1991590

Method: System.Void .cctor()

Disassembly:
	0x03AAF0A0 MOV X19, X0
	0x03AAF0A4 ADRP X0, 0x6A8000
	0x03AAF0A8 LDR X0, [X0 + 0xF78]
	0x03AAF0AC BL 0x1C16D08
	0x03AAF0B0 MOV X20, X0
	0x03AAF0B4 ADRP X0, 0x6A8000
	0x03AAF0B8 LDR X0, [X0 + 0xF80]
	0x03AAF0BC BL 0x1C16D08
	0x03AAF0C0 MOV X2, X0
	0x03AAF0C4 MOV X0, X19
	0x03AAF0C8 MOV X1, X20
	0x03AAF0CC MOV X3, X31
	0x03AAF0D0 BL 0x330E16C
	0x03AAF0D4 ADRP X0, 0x6A8000
	0x03AAF0D8 LDR X0, [X0 + 0xF88]
	0x03AAF0DC BL 0x1C16D08
	0x03AAF0E0 MOV X1, X0
	0x03AAF0E4 MOV X0, X19
	0x03AAF0E8 BL 0x1C16DEC
	0x03AAF0EC LDP X1, X2, [X0 + 0x198]
	0x03AAF0F0 MOV X3, X31
	0x03AAF0F4 B 0x3A42A44
	0x03AAF0F8 STP X30, X21, [X31 - 0x20]!
	0x03AAF0FC STP X20, X19, [X31 + 0x10]
	0x03AAF100 ADRP X21, 0x933000
	0x03AAF104 ADRP X20, 0x66C000
	0x03AAF108 LDRB W8, [X21 + 0x44E]
	0x03AAF10C LDR X20, [X20 + 0x8F8]
	0x03AAF110 MOV X19, X1
	0x03AAF114 TBNZ X8, 0x0, 0x3AAF138
	0x03AAF118 ADRP X0, 0x66C000
	0x03AAF11C LDR X0, [X0 + 0x8F8]
	0x03AAF120 BL 0x1C16CF4
	0x03AAF124 ADRP X0, 0x6A8000
	0x03AAF128 LDR X0, [X0 + 0xEC8]
	0x03AAF12C BL 0x1C16CF4
	0x03AAF130 MOVZ W8, 0x1
	0x03AAF134 STRB W8, [X21 + 0x44E]
	0x03AAF138 LDR X0, [X20]
	0x03AAF13C ADRP X20, 0x6A8000
	0x03AAF140 LDR W8, [X0 + 0xE0]
	0x03AAF144 LDR X20, [X20 + 0xEC8]
	0x03AAF148 CBNZ W8, 0x3AAF150
	0x03AAF14C BL 0x1C16DFC
	0x03AAF150 LDR X1, [X20]
	0x03AAF154 MOV X0, X19
	0x03AAF158 LDP X20, X19, [X31 + 0x10]
	0x03AAF15C MOVZ W2, 0x1
	0x03AAF160 MOV X3, X31
	0x03AAF164 LDP X30, X21, [X31], #0x20
	0x03AAF168 B 0x39E9618
	0x03AAF16C SUB X31, X31, 0x120
	0x03AAF170 STP X29, X30, [X31 + 0xC0]
	0x03AAF174 STP X28, X27, [X31 + 0xD0]
	0x03AAF178 STP X26, X25, [X31 + 0xE0]
	0x03AAF17C STP X24, X23, [X31 + 0xF0]
	0x03AAF180 STP X22, X21, [X31 + 0x100]
	0x03AAF184 STP X20, X19, [X31 + 0x110]
	0x03AAF188 LDP X9, X8, [X31 + 0x120]
	0x03AAF18C ADRP X28, 0x6A5000
	0x03AAF190 ADRP X29, 0x933000
	0x03AAF194 LDR X28, [X28 + 0x60]
	0x03AAF198 STR X9, [X31 + 0xB0]
	0x03AAF19C STR W8, [X31 + 0xB8]
	0x03AAF1A0 ADRP X26, 0x6A5000
	0x03AAF1A4 LDRB W10, [X29 + 0x44F]
	0x03AAF1A8 LDR X26, [X26 + 0x68]
	0x03AAF1AC MOV X20, X6
	0x03AAF1B0 MOV X21, X5
	0x03AAF1B4 MOV W22, W4
	0x03AAF1B8 MOV W23, W3
	0x03AAF1BC MOV X24, X2
	0x03AAF1C0 MOV X25, X1
	0x03AAF1C4 MOV X19, X0
	0x03AAF1C8 TBNZ X10, 0x0, 0x3AAF234
	0x03AAF1CC ADRP X0, 0x6A5000
	0x03AAF1D0 LDR X0, [X0 + 0x70]
	0x03AAF1D4 BL 0x1C16CF4
	0x03AAF1D8 ADRP X0, 0x6A5000
	0x03AAF1DC LDR X0, [X0 + 0x68]
	0x03AAF1E0 BL 0x1C16CF4
	0x03AAF1E4 ADRP X0, 0x6A5000
	0x03AAF1E8 LDR X0, [X0 + 0x60]
	0x03AAF1EC BL 0x1C16CF4
	0x03AAF1F0 ADRP X0, 0x6A5000
	0x03AAF1F4 LDR X0, [X0 + 0x78]
	0x03AAF1F8 BL 0x1C16CF4
	0x03AAF1FC ADRP X0, 0x6A8000
	0x03AAF200 LDR X0, [X0 + 0xF90]
	0x03AAF204 BL 0x1C16CF4
	0x03AAF208 ADRP X0, 0x6A1000
	0x03AAF20C LDR X0, [X0 + 0x598]
	0x03AAF210 BL 0x1C16CF4
	0x03AAF214 ADRP X0, 0x6A4000
	0x03AAF218 LDR X0, [X0 + 0xFF0]
	0x03AAF21C BL 0x1C16CF4
	0x03AAF220 ADRP X0, 0x6A8000
	0x03AAF224 LDR X0, [X0 + 0xF98]
	0x03AAF228 BL 0x1C16CF4
	0x03AAF22C MOVZ W8, 0x1
	0x03AAF230 STRB W8, [X29 + 0x44F]
	0x03AAF234 LDR X0, [X28]
	0x03AAF238 ADRP X28, 0x6A1000
	0x03AAF23C ADRP X27, 0x6A8000
	0x03AAF240 ADRP X29, 0x6A8000
	0x03AAF244 LDR X28, [X28 + 0x598]
	0x03AAF248 LDR X27, [X27 + 0xF98]
	0x03AAF24C LDR X29, [X29 + 0xF90]
	0x03AAF250 BL 0x1C16F10
	0x03AAF254 LDR X1, [X26]
	0x03AAF258 MOV X26, X0
	0x03AAF25C BL 0x305C9FC
	0x03AAF260 STR X26, [X19 + 0x168]
	0x03AAF264 ADRP X8, 0x6A4000
	0x03AAF268 LDR X8, [X8 + 0xFF0]
	0x03AAF26C LDR X0, [X8]
	0x03AAF270 LDR W8, [X0 + 0xE0]
	0x03AAF274 CBNZ W8, 0x3AAF27C
	0x03AAF278 BL 0x1C16DFC
	0x03AAF27C MOV X0, X19
	0x03AAF280 MOV X1, X31
	0x03AAF284 BL 0x3A4225C
	0x03AAF288 LDR X0, [X28]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+32], X22
	004 Move [X31+40], X21
	005 Move [X31+48], X20
	006 Move [X31+56], X19
	007 Move X21, 0x934000
	008 Move X22, 0x6A6000
	009 Move X19, 0x6A6000
	010 Move X20, 0x6A9000
	011 Move W8, [X21+1091]
	012 Move X22, [X22+96]
	013 Move X19, [X19+104]
	014 Move X20, [X20+3848]
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {42}
	019 Move X0, 0x6A9000
	020 Move X0, [X0+344]
	021 Call 0x1C17CF4
	022 Move X0, 0x6A6000
	023 Move X0, [X0+112]
	024 Call 0x1C17CF4
	025 Move X0, 0x6A6000
	026 Move X0, [X0+104]
	027 Call 0x1C17CF4
	028 Move X0, 0x6A6000
	029 Move X0, [X0+96]
	030 Call 0x1C17CF4
	031 Move X0, 0x6A4000
	032 Move X0, [X0+3888]
	033 Call 0x1C17CF4
	034 Move X0, 0x6A9000
	035 Move X0, [X0+3848]
	036 Call 0x1C17CF4
	037 Move X0, 0x6A9000
	038 Move X0, [X0+568]
	039 Call 0x1C17CF4
	040 Move W8, 1
	041 Move [X21+1091], W8
	042 Move X0, [X22]
	043 Call 0x1C17F10
	044 Move X1, [X19]
	045 Move X19, X0
	046 Call List`1<ShaderTagId>..ctor, X0
	047 Move X1, [X20]
	048 Add X0, X31, 24
	049 Move X2, X31
	050 Move [X31+24], W31
	051 Call ShaderTagId..ctor, X0, X1
	052 Compare X19, 0
	053 JumpIfEqual {129}
	054 Move X20, 0x6A6000
	055 Move X20, [X20+112]
	056 Move W10, [X19+28]
	057 Move W1, [X31+24]
	058 Move X8, [X19+16]
	059 Move X9, [X20]
	060 Add W10, W10, 1
	061 Move [X19+28], W10
	062 Compare X8, 0
	063 JumpIfEqual {129}
	064 NotImplemented "Instruction LDRSW not yet implemented."
	065 Move W11, [X8+24]
	066 Move X21, 0x6A9000
	067 Move X21, [X21+568]
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Add W9, W10, 1
	070 Add X8, X8, X10
	071 Move [X19+24], W9
	072 Move [X8+32], W1
	073 Move X8, [X9+32]
	074 Move X0, X19
	075 Move X8, [X8+192]
	076 Move X2, [X8+112]
	077 Call List`1<ShaderTagId>.AddWithResize, X0, X1
	078 Move X1, [X21]
	079 Add X0, X31, 8
	080 Move X2, X31
	081 Move [X31+8], W31
	082 Call ShaderTagId..ctor, X0, X1
	083 Move W10, [X19+28]
	084 Move W1, [X31+8]
	085 Move X8, [X19+16]
	086 Move X9, [X20]
	087 Add W10, W10, 1
	088 Move [X19+28], W10
	089 Compare X8, 0
	090 JumpIfEqual {129}
	091 NotImplemented "Instruction LDRSW not yet implemented."
	092 Move W11, [X8+24]
	093 Move X20, 0x6A9000
	094 Move X21, 0x6A4000
	095 Move X20, [X20+344]
	096 Move X21, [X21+3888]
	097 NotImplemented "Instruction CMP not yet implemented."
	098 Add W9, W10, 1
	099 Add X8, X8, X10
	100 Move [X19+24], W9
	101 Move [X8+32], W1
	102 Move X8, [X9+32]
	103 Move X0, X19
	104 Move X8, [X8+192]
	105 Move X2, [X8+112]
	106 Call List`1<ShaderTagId>.AddWithResize, X0, X1
	107 Move X8, [X20]
	108 Move W1, 1
	109 Move X8, [X8+184]
	110 Move [X8], X19
	111 Move X0, [X21]
	112 Call 0x1C17D6C
	113 Move X8, [X20]
	114 Move W1, 2
	115 Move X8, [X8+184]
	116 Move [X8+8], X0
	117 Move X0, [X21]
	118 Call 0x1C17D6C
	119 Move X8, [X20]
	120 Move X20, [X31+48]
	121 Move X19, [X31+56]
	122 Move X22, [X31+32]
	123 Move X21, [X31+40]
	124 Move X30, [X31+16]
	125 Move X8, [X8+184]
	126 Move [X8+16], X0
	127 Add X31, X31, 64
	128 Return 
	129 Call 0x1C17F20

