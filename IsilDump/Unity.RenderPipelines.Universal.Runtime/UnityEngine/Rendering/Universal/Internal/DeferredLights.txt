Type: UnityEngine.Rendering.Universal.Internal.DeferredLights

Method: System.Int32 get_GBufferAlbedoIndex()

Disassembly:
	0x03A9BD14 STP X31, X31, [X31 + 0x20]
	0x03A9BD18 TBZ X22, 0x0, 0x3A9BDB4

ISIL:
	001 Move W0, W31
	002 Return X0

Method: System.Int32 get_GBufferSpecularMetallicIndex()

Disassembly:
	0x03A9BD1C ADRP X8, 0x682000
	0x03A9BD20 LDR X8, [X8 + 0x138]

ISIL:
	001 Move W0, 1
	002 Return X0

Method: System.Int32 get_GBufferNormalSmoothnessIndex()

Disassembly:
	0x03A9BD24 ADD X0, X31, 0x20
	0x03A9BD28 MOVZ W1, 0x5

ISIL:
	001 Move W0, 2
	002 Return X0

Method: System.Int32 get_GBufferLightingIndex()

Disassembly:
	0x03A9BD2C MOVZ W2, 0x2
	0x03A9BD30 LDR X4, [X8]

ISIL:
	001 Move W0, 3
	002 Return X0

Method: System.Int32 get_GbufferDepthIndex()

Disassembly:
	0x03A9BD34 MOVZ W3, 0x1
	0x03A9BD38 BL 0x23D58AC
	0x03A9BD3C LDR X4, [X25]
	0x03A9BD40 ADD X0, X31, 0x10
	0x03A9BD44 MOVZ W1, 0x5

ISIL:
	001 Move W8, [X0+21]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 Move W8, 4
	004 NotImplemented "Instruction CSINV not yet implemented."
	005 Return X0

Method: System.Int32 get_GBufferRenderingLayers()

Disassembly:
	0x03A9BD48 MOVZ W2, 0x2
	0x03A9BD4C MOVZ W3, 0x1
	0x03A9BD50 STP X31, X31, [X31 + 0x10]
	0x03A9BD54 BL 0x23EB8B4
	0x03A9BD58 LDR V0, [X31 + 0x1]
	0x03A9BD5C STR V0, [X19]
	0x03A9BD60 LDR W24, [X21 + 0x8]
	0x03A9BD64 CMP W24, 0x0
	0x03A9BD68 B.LE 0x3A9BE34
	0x03A9BD6C ADRP X26, 0x6BB000
	0x03A9BD70 LDR X26, [X26 + 0x1B8]
	0x03A9BD74 MOV W22, W31
	0x03A9BD78 LDP X0, X1, [X21]
	0x03A9BD7C LDR X3, [X26]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Call DeferredLights.get_UseLightLayers, X0
	005 Move TEMP, X0
	006 And TEMP, TEMP, 1
	007 Compare TEMP, 1
	008 JumpIfEqual {12}
	009 Move W8, [X19+20]
	010 Compare W8, 0
	011 JumpIfEqual {16}
	012 Move W8, [X19+21]
	013 NotImplemented "Instruction CMP not yet implemented."
	014 Move W8, 4
	015 NotImplemented "Instruction CINC not yet implemented."
	016 Move TEMP, 0
	017 Not TEMP
	018 Move W0, TEMP
	019 Move X30, [X31+16]
	020 Move X19, [X31+24]
	021 Return X0

Method: System.Int32 get_GBufferShadowMask()

Disassembly:
	0x03A9BDAC B.LT 0x3A9BD78
	0x03A9BDB0 B 0x3A9BE38
	0x03A9BDB4 LDR X4, [X25]
	0x03A9BDB8 ADD X0, X31, 0x10
	0x03A9BDBC MOVZ W2, 0x2
	0x03A9BDC0 MOV W1, W31
	0x03A9BDC4 MOV W3, W31
	0x03A9BDC8 STP X31, X31, [X31 + 0x10]
	0x03A9BDCC BL 0x23EB8B4
	0x03A9BDD0 LDR V0, [X31 + 0x1]
	0x03A9BDD4 ADD X0, X31, 0x0
	0x03A9BDD8 MOVZ W1, 0x5
	0x03A9BDDC MOVZ W2, 0x2
	0x03A9BDE0 STR V0, [X20]
	0x03A9BDE4 LDR X4, [X25]
	0x03A9BDE8 MOV W3, W31
	0x03A9BDEC STP X31, X31, [X31]
	0x03A9BDF0 BL 0x23EB8B4
	0x03A9BDF4 LDR V0, [X31]
	0x03A9BDF8 MOV X20, X31
	0x03A9BDFC STR V0, [X19]
	0x03A9BE00 LDR X0, [X23]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W8, [X0+28]
	005 Compare W8, 0
	006 JumpIfEqual {15}
	007 Move W20, [X0+21]
	008 Move X19, X0
	009 Call DeferredLights.get_UseLightLayers, X0
	010 Move TEMP, X0
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfNotEqual {18}
	014 Add W8, W20, 3
	015 Move TEMP, 0
	016 Not TEMP
	017 Move W0, TEMP
	018 Move W9, [X19+20]
	019 Add W8, W20, 3
	020 Compare W9, 0
	021 JumpIfEqual {23}
	022 Move W9, 2
	023 Move W9, 1
	024 Add W0, W9, W8
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Return X0

Method: System.Int32 get_GBufferSliceCount()

Disassembly:
	0x03A9BE14 LDR X8, [X0 + 0xB8]
	0x03A9BE18 LDR X9, [X19]
	0x03A9BE1C LDRH W8, [X8 + 0x10]
	0x03A9BE20 STRH W8, [X9, X20, LSL]
	0x03A9BE24 ADD X20, X20, 0x2
	0x03A9BE28 CMP X20, 0xA
	0x03A9BE2C B.NE 0x3A9BE04
	0x03A9BE30 B 0x3A9BF50
	0x03A9BE34 LDR X8, [X19]
	0x03A9BE38 LDRH W9, [X8]
	0x03A9BE3C LDRH W10, [X8 + 0x2]
	0x03A9BE40 LDRH W8, [X8 + 0x4]
	0x03A9BE44 LDR X4, [X25]
	0x03A9BE48 ADD X0, X31, 0x10
	0x03A9BE4C ADD W9, W10, W9
	0x03A9BE50 ADD W1, W9, W8
	0x03A9BE54 MOVZ W2, 0x2
	0x03A9BE58 MOV W3, W31
	0x03A9BE5C STP X31, X31, [X31 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move W21, [X0+21]
	006 Move W20, [X0+28]
	007 Move X19, X0
	008 Call DeferredLights.get_UseLightLayers, X0
	009 Move TEMP, X0
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfNotEqual {14}
	013 Move W8, 1
	014 Move W8, [X19+20]
	015 NotImplemented "Instruction CMP not yet implemented."
	016 Move W9, 4
	017 NotImplemented "Instruction CINC not yet implemented."
	018 NotImplemented "Instruction CMP not yet implemented."
	019 Move X20, [X31+16]
	020 Move X19, [X31+24]
	021 NotImplemented "Instruction CINC not yet implemented."
	022 Add W0, W9, W8
	023 Move X30, [X31+32]
	024 Move X21, [X31+40]
	025 Return X0

Method: UnityEngine.Experimental.Rendering.GraphicsFormat GetGBufferFormat(System.Int32 index)

Disassembly:
	0x03A9BE60 BL 0x23EB8B4
	0x03A9BE64 LDR V0, [X31 + 0x1]
	0x03A9BE68 STR V0, [X20]
	0x03A9BE6C LDR W8, [X19 + 0x8]
	0x03A9BE70 CMP W8, 0x1
	0x03A9BE74 B.LT 0x3A9BECC
	0x03A9BE78 LDR X9, [X19]
	0x03A9BE7C MOV X22, X31
	0x03A9BE80 MOV W25, W31
	0x03A9BE84 LDRH W10, [X9, X22, LSL #1]
	0x03A9BE88 CBZ W10, 0x3A9BE98
	0x03A9BE8C STRH W25, [X9, X22, LSL #1]
	0x03A9BE90 ADD W25, W25, W10
	0x03A9BE94 B 0x3A9BEC0
	0x03A9BE98 LDR X0, [X23]
	0x03A9BE9C LDR W10, [X0 + 0xE0]
	0x03A9BEA0 CBNZ W10, 0x3A9BEB4
	0x03A9BEA4 BL 0x1C16DFC
	0x03A9BEA8 LDR X0, [X23]
	0x03A9BEAC LDR X9, [X19]
	0x03A9BEB0 LDR W8, [X19 + 0x8]
	0x03A9BEB4 LDR X10, [X0 + 0xB8]
	0x03A9BEB8 LDRH W10, [X10 + 0x10]
	0x03A9BEBC STRH W10, [X9, X22, LSL #1]
	0x03A9BEC0 ADD X22, X22, 0x1
	0x03A9BEC4 CMP X22, W8, SXTW
	0x03A9BEC8 B.LT 0x3A9BE84
	0x03A9BECC ADRP X25, 0x682000
	0x03A9BED0 LDR X25, [X25 + 0x148]
	0x03A9BED4 CMP W24, 0x1
	0x03A9BED8 B.LT 0x3A9BF44
	0x03A9BEDC ADRP X26, 0x6BB000
	0x03A9BEE0 LDR X26, [X26 + 0x1B8]
	0x03A9BEE4 MOV W22, W31
	0x03A9BEE8 LDP X0, X1, [X21]
	0x03A9BEEC LDR X3, [X26]
	0x03A9BEF0 MOV W2, W22
	0x03A9BEF4 BL 0x22222C0
	0x03A9BEF8 MOV X1, X31
	0x03A9BEFC MOV X23, X0
	0x03A9BF00 BL 0x3C5BC7C
	0x03A9BF04 LDR X8, [X31 + 0x20]
	0x03A9BF08 MOV X1, X31
	0x03A9BF0C LDR W27, [X8, W0, SXTW]
	0x03A9BF10 ADD W9, W27, 0x1
	0x03A9BF14 STR W9, [X8, W0, SXTW]
	0x03A9BF18 MOV X0, X23
	0x03A9BF1C BL 0x3C5BC7C
	0x03A9BF20 LDR X8, [X19]
	0x03A9BF24 LDR X9, [X20]
	0x03A9BF28 ADD W10, W22, 0x1
	0x03A9BF2C CMP W24, W10, UXTH
	0x03A9BF30 LDRH W8, [X8, W0, SXTW]
	0x03A9BF34 ADD W8, W27, W8
	0x03A9BF38 STRH W22, [X9, W8, SXTW]
	0x03A9BF3C AND W22, W10, 0xFFFF
	0x03A9BF40 B.GT 0x3A9BEE8
	0x03A9BF44 LDR X1, [X25]
	0x03A9BF48 ADD X0, X31, 0x20
	0x03A9BF4C BL 0x23D5AD4
	0x03A9BF50 LDP X20, X19, [X31 + 0x70]
	0x03A9BF54 LDP X22, X21, [X31 + 0x60]
	0x03A9BF58 LDP X24, X23, [X31 + 0x50]
	0x03A9BF5C LDP X26, X25, [X31 + 0x40]
	0x03A9BF60 LDP X30, X27, [X31 + 0x30]
	0x03A9BF64 ADD X31, X31, 0x80
	0x03A9BF68 RET
	0x03A9BF6C ADD X2, X2, 0x228
	0x03A9BF70 B 0x3A9DF24
	0x03A9BF74 SUB X31, X31, 0x80
	0x03A9BF78 STR X30, [X31 + 0x20]
	0x03A9BF7C STP X28, X27, [X31 + 0x30]
	0x03A9BF80 STP X26, X25, [X31 + 0x40]
	0x03A9BF84 STP X24, X23, [X31 + 0x50]
	0x03A9BF88 STP X22, X21, [X31 + 0x60]
	0x03A9BF8C STP X20, X19, [X31 + 0x70]
	0x03A9BF90 ADRP X21, 0x947000
	0x03A9BF94 LDRB W8, [X21 + 0x3E3]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x948000
	006 Move W8, [X21+991]
	007 Move W20, W1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x6BD000
	014 Move X0, [X0+344]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+991], W8
	018 NotImplemented "Instruction CMP not yet implemented."
	019 Move X9, -49295360
	020 Move W8, W20
	021 Add X9, X9, 2894
	022 NotImplemented "Instruction ADR not yet implemented."
	023 Move W11, [X9]
	024 Add X10, X10, X11
	025 Move W0, 8
	026 CallNoReturn X10
	027 Move X0, X31
	028 Call QualitySettings.get_activeColorSpace
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move W8, 8
	031 Move W9, 4
	032 NotImplemented "Instruction CSEL not yet implemented."
	033 Move W8, [X19+21]
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Move W8, 4
	036 NotImplemented "Instruction CSINV not yet implemented."
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move W0, 49
	039 Move W8, [X19+26]
	040 Compare W8, 0
	041 JumpIfEqual {47}
	042 Move W0, 8
	043 Move X0, X19
	044 Call DeferredLights.get_GBufferShadowMask, X0
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Move W0, 59
	047 Move X8, 0x6BD000
	048 Move X8, [X8+344]
	049 Move X0, [X8]
	050 Move W8, [X0+224]
	051 Compare W8, 0
	052 JumpIfNotEqual {54}
	053 Call 0x1C17DFC
	054 Move X20, [X31+16]
	055 Move X19, [X31+24]
	056 Move X0, X31
	057 Move X30, [X31+32]
	058 Move X21, [X31+40]
	059 Call DepthNormalOnlyPass.GetGraphicsFormat
	060 Return X0
	061 Call DeferredLights.get_UseLightLayers, X0
	062 Move TEMP, X0
	063 And TEMP, TEMP, 1
	064 Compare TEMP, 1
	065 JumpIfEqual {69}
	066 Move W8, [X19+20]
	067 Compare W8, 0
	068 JumpIfEqual {73}
	069 Move W8, [X19+21]
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Move W8, 4
	072 NotImplemented "Instruction CINC not yet implemented."
	073 Move TEMP, 0
	074 Not TEMP
	075 Move W8, TEMP
	076 NotImplemented "Instruction CMP not yet implemented."
	077 Move W0, [X19+16]
	078 Move X20, [X31+16]
	079 Move X19, [X31+24]
	080 Move X1, X31
	081 Move X30, [X31+32]
	082 Move X21, [X31+40]
	083 Call RenderingLayerUtils.GetFormat, X0
	084 Return X0
	085 Move W0, W31
	086 Move X20, [X31+16]
	087 Move X19, [X31+24]
	088 Move X30, [X31+32]
	089 Move X21, [X31+40]
	090 Return X0

Method: System.Boolean get_UseShadowMask()

Disassembly:
	0x03A9BE04 LDR W8, [X0 + 0xE0]
	0x03A9BE08 CBNZ W8, 0x3A9BE14
	0x03A9BE0C BL 0x1C16DFC
	0x03A9BE10 LDR X0, [X23]

ISIL:
	001 Move W8, [X0+28]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 NotImplemented "Instruction CSET not yet implemented."
	004 Return X0

Method: System.Boolean get_UseRenderingLayers()

Disassembly:
	0x03A9BD80 MOV W2, W22
	0x03A9BD84 BL 0x22222C0
	0x03A9BD88 MOV X1, X31
	0x03A9BD8C BL 0x3C5BC7C
	0x03A9BD90 LDR X8, [X19]
	0x03A9BD94 ADD W10, W22, 0x1
	0x03A9BD98 AND W22, W10, 0xFFFF
	0x03A9BD9C CMP W22, W24
	0x03A9BDA0 LDRH W9, [X8, W0, SXTW]
	0x03A9BDA4 ADD W9, W9, 0x1
	0x03A9BDA8 STRH W9, [X8, W0, SXTW]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Call DeferredLights.get_UseLightLayers, X0
	005 Move TEMP, X0
	006 And TEMP, TEMP, 1
	007 Compare TEMP, 1
	008 JumpIfNotEqual {10}
	009 Move W0, 1
	010 Move W8, [X19+20]
	011 NotImplemented "Instruction CMP not yet implemented."
	012 NotImplemented "Instruction CSET not yet implemented."
	013 Move X30, [X31+16]
	014 Move X19, [X31+24]
	015 Return X0

Method: UnityEngine.Rendering.Universal.RenderingLayerUtils/MaskSize get_RenderingLayerMaskSize()

Disassembly:
	0x03A9BFF8 MOVZ W27, 0x1
	0x03A9BFFC MOVZ W28, 0x2

ISIL:
	001 Move W0, [X0+16]
	002 Return X0

Method: System.Void set_RenderingLayerMaskSize(UnityEngine.Rendering.Universal.RenderingLayerUtils/MaskSize value)

Disassembly:
	0x03A9C000 LDR X3, [X25]
	0x03A9C004 MOV X0, X23

ISIL:
	001 Move [X0+16], W1
	002 Return 

Method: System.Boolean get_UseDecalLayers()

Disassembly:
	0x03A9C008 MOV X1, X22
	0x03A9C00C MOV W2, W21

ISIL:
	001 Move W0, [X0+20]
	002 Return X0

Method: System.Void set_UseDecalLayers(System.Boolean value)

Disassembly:
	0x03A9C010 BL 0x22222C0
	0x03A9C014 MOV X1, X31
	0x03A9C018 BL 0x3C5BBF0

ISIL:
	001 And W8, W1, 1
	002 Move [X0+20], W8
	003 Return 

Method: System.Boolean get_UseLightLayers()

Disassembly:
	0x03A9BF98 MOV X19, X1
	0x03A9BF9C MOV X20, X0
	0x03A9BFA0 TBNZ X8, 0x0, 0x3A9BFC4
	0x03A9BFA4 ADRP X0, 0x6BB000
	0x03A9BFA8 LDR X0, [X0 + 0x1B8]
	0x03A9BFAC BL 0x1C16CF4
	0x03A9BFB0 ADRP X0, 0x658000
	0x03A9BFB4 LDR X0, [X0 + 0x598]
	0x03A9BFB8 BL 0x1C16CF4
	0x03A9BFBC MOVZ W8, 0x1
	0x03A9BFC0 STRB W8, [X21 + 0x3E3]
	0x03A9BFC4 STR W31, [X20 + 0x1C]
	0x03A9BFC8 LDRB W8, [X19 + 0x249]
	0x03A9BFCC CBZ W8, 0x3A9C0C0
	0x03A9BFD0 LDR W8, [X19 + 0x240]
	0x03A9BFD4 CMP W8, 0x1
	0x03A9BFD8 B.LT 0x3A9C0C0
	0x03A9BFDC ADRP X25, 0x6BB000
	0x03A9BFE0 ADRP X26, 0x658000
	0x03A9BFE4 LDR X22, [X19 + 0x240]
	0x03A9BFE8 LDR X23, [X19 + 0x238]
	0x03A9BFEC LDR X25, [X25 + 0x1B8]
	0x03A9BFF0 LDR X26, [X26 + 0x598]
	0x03A9BFF4 MOV W21, W31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x948000
	005 Move X20, 0x682000
	006 Move W8, [X19+992]
	007 Move X20, [X20+2216]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x682000
	013 Move X0, [X0+2216]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+992], W8
	017 Move X0, [X20]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {22}
	021 Call 0x1C17DFC
	022 Move X0, X31
	023 Call UniversalRenderPipeline.get_asset
	024 Compare X0, 0
	025 JumpIfEqual {31}
	026 Move W0, [X0+236]
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X30, [X31+32]
	030 Return X0
	031 Call 0x1C17F20

Method: System.Boolean get_UseRenderPass()

Disassembly:
	0x03A9C01C LDR X8, [X26]
	0x03A9C020 MOV X24, X0

ISIL:
	001 Move W0, [X0+21]
	002 Return X0

Method: System.Void set_UseRenderPass(System.Boolean value)

Disassembly:
	0x03A9C024 LDR W9, [X8 + 0xE0]
	0x03A9C028 CBNZ W9, 0x3A9C034
	0x03A9C02C MOV X0, X8

ISIL:
	001 And W8, W1, 1
	002 Move [X0+21], W8
	003 Return 

Method: System.Boolean get_HasDepthPrepass()

Disassembly:
	0x03A9C030 BL 0x1C16DFC
	0x03A9C034 MOV X0, X24

ISIL:
	001 Move W0, [X0+22]
	002 Return X0

Method: System.Void set_HasDepthPrepass(System.Boolean value)

Disassembly:
	0x03A9C038 MOV X1, X31
	0x03A9C03C MOV X2, X31
	0x03A9C040 BL 0x3C354F8

ISIL:
	001 And W8, W1, 1
	002 Move [X0+22], W8
	003 Return 

Method: System.Boolean get_HasNormalPrepass()

Disassembly:
	0x03A9C044 TBZ X0, 0x0, 0x3A9C0A8
	0x03A9C048 CBZ X24, 0x3A9C0E8

ISIL:
	001 Move W0, [X0+23]
	002 Return X0

Method: System.Void set_HasNormalPrepass(System.Boolean value)

Disassembly:
	0x03A9C04C ADD X8, X31, 0x8
	0x03A9C050 MOV X0, X24
	0x03A9C054 MOV X1, X31

ISIL:
	001 And W8, W1, 1
	002 Move [X0+23], W8
	003 Return 

Method: System.Boolean get_HasRenderingLayerPrepass()

Disassembly:
	0x03A9C058 BL 0x3C16AA0
	0x03A9C05C LDR W8, [X31 + 0x10]

ISIL:
	001 Move W0, [X0+24]
	002 Return X0

Method: System.Void set_HasRenderingLayerPrepass(System.Boolean value)

Disassembly:
	0x03A9C060 CMP W8, 0x1
	0x03A9C064 B.NE 0x3A9C0A8
	0x03A9C068 MOV X0, X24

ISIL:
	001 And W8, W1, 1
	002 Move [X0+24], W8
	003 Return 

Method: System.Boolean get_IsOverlay()

Disassembly:
	0x03A9C06C MOV X1, X31
	0x03A9C070 BL 0x3C16B90

ISIL:
	001 Move W0, [X0+25]
	002 Return X0

Method: System.Void set_IsOverlay(System.Boolean value)

Disassembly:
	0x03A9C074 CBZ W0, 0x3A9C0A8
	0x03A9C078 ADD X8, X31, 0x8
	0x03A9C07C MOV X0, X24

ISIL:
	001 And W8, W1, 1
	002 Move [X0+25], W8
	003 Return 

Method: System.Boolean get_AccurateGbufferNormals()

Disassembly:
	0x03A9C080 MOV X1, X31
	0x03A9C084 BL 0x3C16AA0

ISIL:
	001 Move W0, [X0+26]
	002 Return X0

Method: System.Void set_AccurateGbufferNormals(System.Boolean value)

Disassembly:
	0x03A9C088 LDR W8, [X31 + 0x14]
	0x03A9C08C CMP W8, 0x2
	0x03A9C090 B.EQ 0x3A9C0A4

ISIL:
	001 And W8, W1, 1
	002 Move [X0+26], W8
	003 Return 

Method: UnityEngine.Rendering.Universal.MixedLightingSetup get_MixedLightingSetup()

Disassembly:
	0x03A9C094 CMP W8, 0x1
	0x03A9C098 B.NE 0x3A9C0A8

ISIL:
	001 Move W0, [X0+28]
	002 Return X0

Method: System.Void set_MixedLightingSetup(UnityEngine.Rendering.Universal.MixedLightingSetup value)

Disassembly:
	0x03A9C09C STR W28, [X20 + 0x1C]
	0x03A9C0A0 B 0x3A9C0A8

ISIL:
	001 Move [X0+28], W1
	002 Return 

Method: System.Boolean get_UseJobSystem()

Disassembly:
	0x03A9C0A4 STR W27, [X20 + 0x1C]
	0x03A9C0A8 LDR W8, [X19 + 0x240]

ISIL:
	001 Move W0, [X0+32]
	002 Return X0

Method: System.Void set_UseJobSystem(System.Boolean value)

Disassembly:
	0x03A9C0AC ADD W21, W21, 0x1
	0x03A9C0B0 CMP W21, W8
	0x03A9C0B4 B.GE 0x3A9C0C0

ISIL:
	001 And W8, W1, 1
	002 Move [X0+32], W8
	003 Return 

Method: System.Int32 get_RenderWidth()

Disassembly:
	0x03A9C0B8 LDR W8, [X20 + 0x1C]
	0x03A9C0BC CBZ W8, 0x3A9C000

ISIL:
	001 Move W0, [X0+36]
	002 Return X0

Method: System.Void set_RenderWidth(System.Int32 value)

Disassembly:
	0x03A9C0C0 MOV X0, X20
	0x03A9C0C4 BL 0x3A9C0EC

ISIL:
	001 Move [X0+36], W1
	002 Return 

Method: System.Int32 get_RenderHeight()

Disassembly:
	0x03A9C0C8 LDP X20, X19, [X31 + 0x70]
	0x03A9C0CC LDP X22, X21, [X31 + 0x60]

ISIL:
	001 Move W0, [X0+40]
	002 Return X0

Method: System.Void set_RenderHeight(System.Int32 value)

Disassembly:
	0x03A9C0D0 LDP X24, X23, [X31 + 0x50]
	0x03A9C0D4 LDP X26, X25, [X31 + 0x40]

ISIL:
	001 Move [X0+40], W1
	002 Return 

Method: UnityEngine.Rendering.RTHandle[] get_GbufferAttachments()

Disassembly:
	0x03A9C0D8 LDP X28, X27, [X31 + 0x30]
	0x03A9C0DC LDR X30, [X31 + 0x20]

ISIL:
	001 Move X0, [X0+48]
	002 Return X0

Method: System.Void set_GbufferAttachments(UnityEngine.Rendering.RTHandle[] value)

Disassembly:
	0x03A9C0E0 ADD X31, X31, 0x80
	0x03A9C0E4 RET

ISIL:
	001 Move [X0+48], X1
	002 Return 

Method: UnityEngine.Experimental.Rendering.RenderGraphModule.TextureHandle[] get_GbufferTextureHandles()

Disassembly:
	0x03A9C0E8 BL 0x1C16F20
	0x03A9C0EC SUB X31, X31, 0xC0

ISIL:
	001 Move X0, [X0+64]
	002 Return X0

Method: System.Void set_GbufferTextureHandles(UnityEngine.Experimental.Rendering.RenderGraphModule.TextureHandle[] value)

Disassembly:
	0x03A9C0F0 STP X30, X25, [X31 + 0x80]
	0x03A9C0F4 STP X24, X23, [X31 + 0x90]

ISIL:
	001 Move [X0+64], X1
	002 Return 

Method: UnityEngine.Rendering.RTHandle[] get_DeferredInputAttachments()

Disassembly:
	0x03A9C0F8 STP X22, X21, [X31 + 0xA0]
	0x03A9C0FC STP X20, X19, [X31 + 0xB0]

ISIL:
	001 Move X0, [X0+72]
	002 Return X0

Method: System.Void set_DeferredInputAttachments(UnityEngine.Rendering.RTHandle[] value)

Disassembly:
	0x03A9C100 ADRP X20, 0x946000
	0x03A9C104 LDRB W8, [X20 + 0x3E6]

ISIL:
	001 Move [X0+72], X1
	002 Return 

Method: System.Boolean[] get_DeferredInputIsTransient()

Disassembly:
	0x03A9C108 MOV X19, X0
	0x03A9C10C TBNZ X8, 0x0, 0x3A9C154

ISIL:
	001 Move X0, [X0+80]
	002 Return X0

Method: System.Void set_DeferredInputIsTransient(System.Boolean[] value)

Disassembly:
	0x03A9C110 ADRP X0, 0x6BB000
	0x03A9C114 LDR X0, [X0 + 0x148]

ISIL:
	001 Move [X0+80], X1
	002 Return 

Method: UnityEngine.Rendering.RTHandle get_DepthAttachment()

Disassembly:
	0x03A9C118 BL 0x1C16CF4
	0x03A9C11C ADRP X0, 0x6B8000

ISIL:
	001 Move X0, [X0+88]
	002 Return X0

Method: System.Void set_DepthAttachment(UnityEngine.Rendering.RTHandle value)

Disassembly:
	0x03A9C120 LDR X0, [X0 + 0xC80]
	0x03A9C124 BL 0x1C16CF4

ISIL:
	001 Move [X0+88], X1
	002 Return 

Method: UnityEngine.Rendering.RTHandle get_DepthCopyTexture()

Disassembly:
	0x03A9C128 ADRP X0, 0x6B6000
	0x03A9C12C LDR X0, [X0 + 0xF30]

ISIL:
	001 Move X0, [X0+96]
	002 Return X0

Method: System.Void set_DepthCopyTexture(UnityEngine.Rendering.RTHandle value)

Disassembly:
	0x03A9C130 BL 0x1C16CF4
	0x03A9C134 ADRP X0, 0x6B4000

ISIL:
	001 Move [X0+96], X1
	002 Return 

Method: UnityEngine.Experimental.Rendering.GraphicsFormat[] get_GbufferFormats()

Disassembly:
	0x03A9C138 LDR X0, [X0 + 0x9B0]
	0x03A9C13C BL 0x1C16CF4

ISIL:
	001 Move X0, [X0+104]
	002 Return X0

Method: System.Void set_GbufferFormats(UnityEngine.Experimental.Rendering.GraphicsFormat[] value)

Disassembly:
	0x03A9C140 ADRP X0, 0x6B4000
	0x03A9C144 LDR X0, [X0 + 0xE90]

ISIL:
	001 Move [X0+104], X1
	002 Return 

Method: UnityEngine.Rendering.RTHandle get_DepthAttachmentHandle()

Disassembly:
	0x03A9C148 BL 0x1C16CF4
	0x03A9C14C MOVZ W8, 0x1

ISIL:
	001 Move X0, [X0+112]
	002 Return X0

Method: System.Void set_DepthAttachmentHandle(UnityEngine.Rendering.RTHandle value)

Disassembly:
	0x03A9C150 STRB W8, [X20 + 0x3E6]
	0x03A9C154 MOV X0, X19

ISIL:
	001 Move [X0+112], X1
	002 Return 

Method: System.Void .ctor(UnityEngine.Rendering.Universal.Internal.DeferredLights/InitParams initParams, System.Boolean useNativeRenderPass = False)

Disassembly:
	0x03A9C158 BL 0x3A9AE14
	0x03A9C15C LDR X8, [X19 + 0x38]
	0x03A9C160 MOV W21, W0
	0x03A9C164 CBZ X8, 0x3A9C174
	0x03A9C168 LDR W8, [X8 + 0x18]
	0x03A9C16C CMP W21, W8
	0x03A9C170 B.EQ 0x3A9C358
	0x03A9C174 ADRP X20, 0x6B6000
	0x03A9C178 ADRP X22, 0x6B8000
	0x03A9C17C ADRP X23, 0x6B4000
	0x03A9C180 LDR X20, [X20 + 0xF30]
	0x03A9C184 LDR X22, [X22 + 0xC80]
	0x03A9C188 LDR X23, [X23 + 0xE90]
	0x03A9C18C MOV X0, X19
	0x03A9C190 BL 0x3A9C38C
	0x03A9C194 LDR X0, [X20]
	0x03A9C198 MOV W1, W21
	0x03A9C19C BL 0x1C16D6C
	0x03A9C1A0 STR X0, [X19 + 0x30]
	0x03A9C1A4 LDR X0, [X20]
	0x03A9C1A8 MOV W1, W21
	0x03A9C1AC BL 0x1C16D6C
	0x03A9C1B0 STR X0, [X19 + 0x38]
	0x03A9C1B4 LDR X0, [X22]
	0x03A9C1B8 MOV W1, W21
	0x03A9C1BC BL 0x1C16D6C
	0x03A9C1C0 STR X0, [X19 + 0x68]
	0x03A9C1C4 LDR X0, [X23]
	0x03A9C1C8 MOV W1, W21
	0x03A9C1CC BL 0x1C16D6C
	0x03A9C1D0 CMP W21, 0x1
	0x03A9C1D4 STR X0, [X19 + 0x40]
	0x03A9C1D8 B.LT 0x3A9C358
	0x03A9C1DC ADRP X23, 0x6BB000
	0x03A9C1E0 ADRP X24, 0x6B4000
	0x03A9C1E4 LDR X23, [X23 + 0x148]
	0x03A9C1E8 LDR X24, [X24 + 0x9B0]
	0x03A9C1EC MOV X20, X31
	0x03A9C1F0 MOV W22, W21
	0x03A9C1F4 LDR X0, [X23]
	0x03A9C1F8 LDR X25, [X19 + 0x38]
	0x03A9C1FC LDR W8, [X0 + 0xE0]
	0x03A9C200 CBNZ W8, 0x3A9C20C
	0x03A9C204 BL 0x1C16DFC
	0x03A9C208 LDR X0, [X23]
	0x03A9C20C LDR X8, [X0 + 0xB8]
	0x03A9C210 LDR X8, [X8]
	0x03A9C214 CBZ X8, 0x3A9C370
	0x03A9C218 LDR W9, [X8 + 0x18]
	0x03A9C21C CMP X20, X9
	0x03A9C220 B.CS 0x3A9C374
	0x03A9C224 ADD X8, X8, X20, 0x3, LSL
	0x03A9C228 LDR X0, [X8 + 0x20]
	0x03A9C22C ADD X8, X31, 0x28
	0x03A9C230 MOV X1, X31
	0x03A9C234 BL 0x3C4B228
	0x03A9C238 LDUR V0, [X31 + 0x28]
	0x03A9C23C LDUR V1, [X31 + 0x38]
	0x03A9C240 LDR X8, [X31 + 0x48]
	0x03A9C244 LDR X9, [X23]
	0x03A9C248 STP V0, V1, [X31 + 0x50]
	0x03A9C24C STR X8, [X31 + 0x70]
	0x03A9C250 LDR X8, [X9 + 0xB8]
	0x03A9C254 LDR X8, [X8]
	0x03A9C258 CBZ X8, 0x3A9C370
	0x03A9C25C LDR W9, [X8 + 0x18]
	0x03A9C260 CMP X20, X9
	0x03A9C264 B.CS 0x3A9C374
	0x03A9C268 LDR X0, [X24]
	0x03A9C26C ADD X8, X8, X20, 0x3, LSL
	0x03A9C270 LDR X21, [X8 + 0x20]
	0x03A9C274 LDR W9, [X0 + 0xE0]
	0x03A9C278 CBNZ W9, 0x3A9C280
	0x03A9C27C BL 0x1C16DFC
	0x03A9C280 LDP V0, V1, [X31 + 0x50]
	0x03A9C284 LDR X8, [X31 + 0x70]
	0x03A9C288 ADD X0, X31, 0x0
	0x03A9C28C MOV X1, X21
	0x03A9C290 MOV X2, X31
	0x03A9C294 STP V0, V1, [X31]
	0x03A9C298 STR X8, [X31 + 0x20]
	0x03A9C29C BL 0x39D6AD0
	0x03A9C2A0 CBZ X25, 0x3A9C370
	0x03A9C2A4 MOV X21, X0
	0x03A9C2A8 CBZ X0, 0x3A9C2C0
	0x03A9C2AC LDR X8, [X25]
	0x03A9C2B0 MOV X0, X21
	0x03A9C2B4 LDR X1, [X8 + 0x40]
	0x03A9C2B8 BL 0x1C16E00
	0x03A9C2BC CBZ X0, 0x3A9C378
	0x03A9C2C0 LDR W8, [X25 + 0x18]
	0x03A9C2C4 CMP X20, X8
	0x03A9C2C8 B.CS 0x3A9C374
	0x03A9C2CC ADD X8, X25, X20, 0x3, LSL
	0x03A9C2D0 STR X21, [X8 + 0x20]
	0x03A9C2D4 LDR X8, [X19 + 0x38]
	0x03A9C2D8 CBZ X8, 0x3A9C370
	0x03A9C2DC LDR W9, [X8 + 0x18]
	0x03A9C2E0 CMP X20, X9
	0x03A9C2E4 B.CS 0x3A9C374
	0x03A9C2E8 LDR X25, [X19 + 0x30]
	0x03A9C2EC CBZ X25, 0x3A9C370
	0x03A9C2F0 ADD X8, X8, X20, 0x3, LSL
	0x03A9C2F4 LDR X21, [X8 + 0x20]
	0x03A9C2F8 CBZ X21, 0x3A9C310
	0x03A9C2FC LDR X8, [X25]
	0x03A9C300 MOV X0, X21
	0x03A9C304 LDR X1, [X8 + 0x40]
	0x03A9C308 BL 0x1C16E00
	0x03A9C30C CBZ X0, 0x3A9C378
	0x03A9C310 LDR W8, [X25 + 0x18]
	0x03A9C314 CMP X20, X8
	0x03A9C318 B.CS 0x3A9C374
	0x03A9C31C ADD X8, X25, X20, 0x3, LSL
	0x03A9C320 STR X21, [X8 + 0x20]
	0x03A9C324 LDR X21, [X19 + 0x68]
	0x03A9C328 MOV X0, X19
	0x03A9C32C MOV W1, W20
	0x03A9C330 BL 0x3A9AE60
	0x03A9C334 CBZ X21, 0x3A9C370
	0x03A9C338 LDR W8, [X21 + 0x18]
	0x03A9C33C CMP X20, X8
	0x03A9C340 B.CS 0x3A9C374
	0x03A9C344 ADD X8, X21, X20, 0x2, LSL
	0x03A9C348 ADD X20, X20, 0x1
	0x03A9C34C CMP X22, X20
	0x03A9C350 STR W0, [X8 + 0x20]
	0x03A9C354 B.NE 0x3A9C1F4
	0x03A9C358 LDP X20, X19, [X31 + 0xB0]
	0x03A9C35C LDP X22, X21, [X31 + 0xA0]
	0x03A9C360 LDP X24, X23, [X31 + 0x90]
	0x03A9C364 LDP X30, X25, [X31 + 0x80]
	0x03A9C368 ADD X31, X31, 0xC0
	0x03A9C36C RET
	0x03A9C370 BL 0x1C16F20
	0x03A9C374 BL 0x1C16F28
	0x03A9C378 BL 0x1C16F44
	0x03A9C37C MOV X1, X31
	0x03A9C380 BL 0x1C16DEC
	0x03A9C384 STRB W31, [X0 + 0x15]
	0x03A9C388 B 0x3A9C0EC
	0x03A9C38C STR X30, [X31 - 0x30]!
	0x03A9C390 STP X22, X21, [X31 + 0x10]
	0x03A9C394 STP X20, X19, [X31 + 0x20]
	0x03A9C398 ADRP X20, 0x946000
	0x03A9C39C LDRB W8, [X20 + 0x3E4]
	0x03A9C3A0 MOV X19, X0
	0x03A9C3A4 TBNZ X8, 0x0, 0x3A9C3BC
	0x03A9C3A8 ADRP X0, 0x6B4000
	0x03A9C3AC LDR X0, [X0 + 0x9B0]
	0x03A9C3B0 BL 0x1C16CF4

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X24, 0x947000
	011 Move X23, 0x65C000
	012 Move X25, 0x6BC000
	013 Move W8, [X24+993]
	014 Move X23, [X23+2440]
	015 Move X25, [X25+328]
	016 Move W20, W3
	017 Move X19, X2
	018 Move X22, X1
	019 Move X21, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {38}
	024 Move X0, 0x6BC000
	025 Move X0, [X0+328]
	026 Call 0x1C17CF4
	027 Move X0, 0x659000
	028 Move X0, [X0+3672]
	029 Call 0x1C17CF4
	030 Move X0, 0x65C000
	031 Move X0, [X0+2440]
	032 Call 0x1C17CF4
	033 Move X0, 0x6B5000
	034 Move X0, [X0+1432]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X24+993], W8
	038 Move X0, [X23]
	039 Move X26, 0x6B5000
	040 Move X26, [X26+1432]
	041 Move W1, 2
	042 Call 0x1C17D6C
	043 Move [X21+200], X0
	044 Move X0, [X25]
	045 Move W8, [X0+224]
	046 Compare W8, 0
	047 JumpIfNotEqual {50}
	048 Call 0x1C17DFC
	049 Move X0, [X25]
	050 Move X8, [X0+184]
	051 Move X0, [X26]
	052 Move X23, [X8+40]
	053 Call 0x1C17F10
	054 Move X1, X23
	055 Move X2, X31
	056 Move X24, X0
	057 Call ProfilingSampler..ctor, X0, X1
	058 Move [X21+208], X24
	059 Move X8, [X25]
	060 Move X0, [X26]
	061 Move X8, [X8+184]
	062 Move X23, [X8+48]
	063 Call 0x1C17F10
	064 Move X1, X23
	065 Move X2, X31
	066 Move X24, X0
	067 Call ProfilingSampler..ctor, X0, X1
	068 Move [X21+216], X24
	069 Move X8, [X25]
	070 Move X0, [X26]
	071 Move X8, [X8+184]
	072 Move X23, [X8+56]
	073 Call 0x1C17F10
	074 Move X1, X23
	075 Move X2, X31
	076 Move X24, X0
	077 Call ProfilingSampler..ctor, X0, X1
	078 Move X0, X21
	079 Move X1, X31
	080 Move [X21+224], X24
	081 Call Object..ctor, X0
	082 Move X0, X31
	083 Call SystemInfo.get_graphicsDeviceType
	084 NotImplemented "Instruction CMP not yet implemented."
	085 Move X0, X31
	086 Call SystemInfo.get_graphicsDeviceType
	087 NotImplemented "Instruction CMP not yet implemented."
	088 Move W24, 1
	089 Move X0, X31
	090 Call SystemInfo.get_graphicsDeviceType
	091 NotImplemented "Instruction CMP not yet implemented."
	092 NotImplemented "Instruction CSET not yet implemented."
	093 Move X23, 0x947000
	094 Move W8, [X23+1064]
	095 Compare W8, 0
	096 JumpIfNotEqual {102}
	097 Move X0, 0x6BC000
	098 Move X0, [X0+1856]
	099 Call 0x1C17CF4
	100 Move W8, 1
	101 Move [X23+1064], W8
	102 Move X23, 0x6BC000
	103 Move X23, [X23+1856]
	104 Move X0, X31
	105 Move X8, [X23]
	106 Move X8, [X8+184]
	107 Move [X8], W24
	108 Call SystemInfo.get_graphicsDeviceType
	109 NotImplemented "Instruction CMP not yet implemented."
	110 Move X0, X31
	111 Call SystemInfo.get_graphicsShaderLevel
	112 NotImplemented "Instruction CMP not yet implemented."
	113 NotImplemented "Instruction CSET not yet implemented."
	114 Move W24, W31
	115 Move X26, 0x947000
	116 Move W8, [X26+1065]
	117 Compare W8, 0
	118 JumpIfNotEqual {124}
	119 Move X0, 0x6BC000
	120 Move X0, [X0+1856]
	121 Call 0x1C17CF4
	122 Move W8, 1
	123 Move [X26+1065], W8
	124 Move X8, [X23]
	125 Move X8, [X8+184]
	126 Move [X8+1], W24
	127 Move [X21+184], X22
	128 Move X0, [X25]
	129 Move W8, [X0+224]
	130 Compare W8, 0
	131 JumpIfNotEqual {134}
	132 Call 0x1C17DFC
	133 Move X0, [X25]
	134 Move X8, [X0+184]
	135 Move X8, [X8+8]
	136 Compare X8, 0
	137 JumpIfEqual {162}
	138 Move X9, 0x659000
	139 Move X9, [X9+3672]
	140 Move W1, [X8+24]
	141 Move X0, [X9]
	142 Call 0x1C17D6C
	143 Move [X21+192], X0
	144 Move X0, X21
	145 Call DeferredLights.InitStencilDeferredMaterial, X0
	146 Move W8, 1
	147 And W9, W20, 1
	148 Move [X21+26], W8
	149 Move [X21+32], W8
	150 Move [X21+21], W9
	151 Move [X21+232], X19
	152 Move X20, [X31+64]
	153 Move X19, [X31+72]
	154 Move X22, [X31+48]
	155 Move X21, [X31+56]
	156 Move X24, [X31+32]
	157 Move X23, [X31+40]
	158 Move X26, [X31+16]
	159 Move X25, [X31+24]
	160 Move X30, [X31+80]
	161 Return 
	162 Call 0x1C17F20

Method: System.Void SetupLights(UnityEngine.Rendering.ScriptableRenderContext context, ref UnityEngine.Rendering.Universal.RenderingData renderingData)

Disassembly:
	0x03A9C774 LDR X1, [X8 + 0x40]
	0x03A9C778 BL 0x1C16E00
	0x03A9C77C CBZ X0, 0x3A9C7A4
	0x03A9C780 LDR W8, [X20 + 0x18]
	0x03A9C784 CMP W8, 0x4
	0x03A9C788 B.LS 0x3A9C7A0
	0x03A9C78C STR X19, [X20 + 0x40]
	0x03A9C790 LDP X20, X19, [X31 + 0x10]
	0x03A9C794 LDP X30, X21, [X31], #0x20
	0x03A9C798 RET
	0x03A9C79C BL 0x1C16F20
	0x03A9C7A0 BL 0x1C16F28
	0x03A9C7A4 BL 0x1C16F44
	0x03A9C7A8 MOV X1, X31
	0x03A9C7AC BL 0x1C16DEC
	0x03A9C7B0 STR X30, [X31 - 0x20]!
	0x03A9C7B4 STP X20, X19, [X31 + 0x10]
	0x03A9C7B8 BL 0x3A9AE14
	0x03A9C7BC MOV W19, W0
	0x03A9C7C0 MOV X0, X31
	0x03A9C7C4 BL 0x3C3BDEC
	0x03A9C7C8 CMP W19, W0
	0x03A9C7CC B.GT 0x3A9C808
	0x03A9C7D0 ADRP X19, 0x946000
	0x03A9C7D4 LDRB W8, [X19 + 0x42A]
	0x03A9C7D8 CBNZ W8, 0x3A9C7F0
	0x03A9C7DC ADRP X0, 0x6BB000
	0x03A9C7E0 LDR X0, [X0 + 0x740]
	0x03A9C7E4 BL 0x1C16CF4
	0x03A9C7E8 MOVZ W8, 0x1
	0x03A9C7EC STRB W8, [X19 + 0x42A]
	0x03A9C7F0 ADRP X19, 0x6BB000
	0x03A9C7F4 LDR X19, [X19 + 0x740]
	0x03A9C7F8 LDR X8, [X19]
	0x03A9C7FC LDR X8, [X8 + 0xB8]
	0x03A9C800 LDRB W9, [X8]
	0x03A9C804 CBZ W9, 0x3A9C818
	0x03A9C808 MOV W0, W31
	0x03A9C80C LDP X20, X19, [X31 + 0x10]
	0x03A9C810 LDR X30, [X31], #0x20
	0x03A9C814 RET
	0x03A9C818 ADRP X20, 0x946000
	0x03A9C81C LDRB W9, [X20 + 0x42B]
	0x03A9C820 CBNZ W9, 0x3A9C83C
	0x03A9C824 MOV X0, X19
	0x03A9C828 BL 0x1C16CF4
	0x03A9C82C LDR X8, [X19]
	0x03A9C830 MOVZ W9, 0x1
	0x03A9C834 STRB W9, [X20 + 0x42B]
	0x03A9C838 LDR X8, [X8 + 0xB8]
	0x03A9C83C LDRB W8, [X8 + 0x1]
	0x03A9C840 CMP W8, 0x0
	0x03A9C844 CSET W0, EQ
	0x03A9C848 B 0x3A9C80C
	0x03A9C84C STR X30, [X31 - 0x50]!
	0x03A9C850 STP X26, X25, [X31 + 0x10]
	0x03A9C854 STP X24, X23, [X31 + 0x20]
	0x03A9C858 STP X22, X21, [X31 + 0x30]
	0x03A9C85C STP X20, X19, [X31 + 0x40]
	0x03A9C860 ADRP X26, 0x946000
	0x03A9C864 LDRB W8, [X26 + 0x3E7]
	0x03A9C868 MOV X20, X7
	0x03A9C86C MOV X21, X6
	0x03A9C870 MOV W22, W5
	0x03A9C874 MOV W23, W4
	0x03A9C878 MOV W24, W3
	0x03A9C87C MOV X25, X2
	0x03A9C880 MOV X19, X0
	0x03A9C884 TBNZ X8, 0x0, 0x3A9C8A8
	0x03A9C888 ADRP X0, 0x659000
	0x03A9C88C LDR X0, [X0 + 0x9B8]
	0x03A9C890 BL 0x1C16CF4
	0x03A9C894 ADRP X0, 0x6B6000
	0x03A9C898 LDR X0, [X0 + 0xF30]
	0x03A9C89C BL 0x1C16CF4
	0x03A9C8A0 MOVZ W8, 0x1
	0x03A9C8A4 STRB W8, [X26 + 0x3E7]
	0x03A9C8A8 AND W9, W23, 0x1
	0x03A9C8AC LDR X23, [X19 + 0x30]
	0x03A9C8B0 AND W8, W24, 0x1
	0x03A9C8B4 STRB W8, [X19 + 0x16]
	0x03A9C8B8 AND W8, W22, 0x1
	0x03A9C8BC STR X25, [X19 + 0x98]
	0x03A9C8C0 STRB W9, [X19 + 0x17]
	0x03A9C8C4 STRB W8, [X19 + 0x18]
	0x03A9C8C8 STR X21, [X19 + 0x60]
	0x03A9C8CC CBZ X23, 0x3A9CA3C
	0x03A9C8D0 LDR X21, [X31 + 0x50]
	0x03A9C8D4 CBZ X21, 0x3A9C8EC
	0x03A9C8D8 LDR X8, [X23]
	0x03A9C8DC MOV X0, X21
	0x03A9C8E0 LDR X1, [X8 + 0x40]
	0x03A9C8E4 BL 0x1C16E00
	0x03A9C8E8 CBZ X0, 0x3A9CA44
	0x03A9C8EC LDR W8, [X23 + 0x18]
	0x03A9C8F0 CMP W8, 0x3
	0x03A9C8F4 B.LS 0x3A9CA40
	0x03A9C8F8 STR X21, [X23 + 0x38]
	0x03A9C8FC LDR W9, [X19 + 0x1C]
	0x03A9C900 LDR X8, [X19 + 0x48]
	0x03A9C904 STR X20, [X19 + 0x58]
	0x03A9C908 CMP W9, 0x0
	0x03A9C90C MOVZ W9, 0x4
	0x03A9C910 CINC W21, W9, NE
	0x03A9C914 CBZ X8, 0x3A9C928
	0x03A9C918 LDR W8, [X8 + 0x18]
	0x03A9C91C CMP W21, W8
	0x03A9C920 B.NE 0x3A9C944
	0x03A9C924 B 0x3A9CA20
	0x03A9C928 LDRB W8, [X19 + 0x15]
	0x03A9C92C CBZ W8, 0x3A9CA20
	0x03A9C930 LDR X8, [X19 + 0x30]
	0x03A9C934 CBZ X8, 0x3A9CA3C
	0x03A9C938 LDR W8, [X8 + 0x18]
	0x03A9C93C CMP W8, 0x2
	0x03A9C940 B.LE 0x3A9CA20
	0x03A9C944 ADRP X8, 0x6B6000
	0x03A9C948 LDR X8, [X8 + 0xF30]
	0x03A9C94C MOV W1, W21
	0x03A9C950 LDR X0, [X8]
	0x03A9C954 BL 0x1C16D6C
	0x03A9C958 STR X0, [X19 + 0x48]
	0x03A9C95C ADRP X8, 0x659000
	0x03A9C960 LDR X8, [X8 + 0x9B8]
	0x03A9C964 MOV W1, W21
	0x03A9C968 LDR X0, [X8]
	0x03A9C96C BL 0x1C16D6C
	0x03A9C970 MOV X22, X31
	0x03A9C974 MOV W8, W31
	0x03A9C978 MOV W21, W21
	0x03A9C97C MOVZ W23, 0x4
	0x03A9C980 STR X0, [X19 + 0x50]
	0x03A9C984 LDR X9, [X19 + 0x30]
	0x03A9C988 CMP W8, 0x3
	0x03A9C98C CSEL W24, W23, W8, EQ
	0x03A9C990 CBZ X9, 0x3A9CA3C
	0x03A9C994 LDR W8, [X9 + 0x18]
	0x03A9C998 CMP W24, W8
	0x03A9C99C B.CS 0x3A9CA40
	0x03A9C9A0 LDR X25, [X19 + 0x48]
	0x03A9C9A4 CBZ X25, 0x3A9CA3C
	0x03A9C9A8 ADD X8, X9, W24, 0x3, SXTW
	0x03A9C9AC LDR X20, [X8 + 0x20]
	0x03A9C9B0 CBZ X20, 0x3A9C9C8
	0x03A9C9B4 LDR X8, [X25]
	0x03A9C9B8 MOV X0, X20
	0x03A9C9BC LDR X1, [X8 + 0x40]
	0x03A9C9C0 BL 0x1C16E00
	0x03A9C9C4 CBZ X0, 0x3A9CA44
	0x03A9C9C8 LDR W8, [X25 + 0x18]
	0x03A9C9CC CMP X22, X8
	0x03A9C9D0 B.CS 0x3A9CA40
	0x03A9C9D4 ADD X8, X25, X22, 0x3, LSL
	0x03A9C9D8 STR X20, [X8 + 0x20]
	0x03A9C9DC LDR X8, [X19 + 0x50]
	0x03A9C9E0 CBZ X8, 0x3A9CA3C
	0x03A9C9E4 LDR W9, [X8 + 0x18]
	0x03A9C9E8 CMP X22, X9
	0x03A9C9EC B.CS 0x3A9CA40
	0x03A9C9F0 LDRB W9, [X19 + 0x15]
	0x03A9C9F4 ADD X8, X8, X22
	0x03A9C9F8 ADD X22, X22, 0x1
	0x03A9C9FC CMP W9, 0x0
	0x03A9CA00 CSINV W9, W23, W31, NE
	0x03A9CA04 CMP W24, W9
	0x03A9CA08 CSET W9, NE
	0x03A9CA0C CMP X21, X22
	0x03A9CA10 STRB W9, [X8 + 0x20]
	0x03A9CA14 ADD W8, W24, 0x1
	0x03A9CA18 B.NE 0x3A9C984
	0x03A9CA1C LDR X20, [X19 + 0x58]
	0x03A9CA20 STR X20, [X19 + 0x70]
	0x03A9CA24 LDP X20, X19, [X31 + 0x40]
	0x03A9CA28 LDP X22, X21, [X31 + 0x30]
	0x03A9CA2C LDP X24, X23, [X31 + 0x20]
	0x03A9CA30 LDP X26, X25, [X31 + 0x10]
	0x03A9CA34 LDR X30, [X31], #0x50
	0x03A9CA38 RET
	0x03A9CA3C BL 0x1C16F20
	0x03A9CA40 BL 0x1C16F28
	0x03A9CA44 BL 0x1C16F44
	0x03A9CA48 MOV X1, X31
	0x03A9CA4C BL 0x1C16DEC
	0x03A9CA50 STR X1, [X0 + 0x98]
	0x03A9CA54 RET
	0x03A9CA58 STR X30, [X31 - 0x30]!
	0x03A9CA5C STP X22, X21, [X31 + 0x10]
	0x03A9CA60 STP X20, X19, [X31 + 0x20]
	0x03A9CA64 ADRP X22, 0x946000
	0x03A9CA68 ADRP X21, 0x67F000
	0x03A9CA6C LDRB W8, [X22 + 0x3E8]
	0x03A9CA70 LDR X21, [X21 + 0x8F8]
	0x03A9CA74 MOV X20, X1
	0x03A9CA78 MOV X19, X0
	0x03A9CA7C TBNZ X8, 0x0, 0x3A9CAB8
	0x03A9CA80 ADRP X0, 0x67F000
	0x03A9CA84 LDR X0, [X0 + 0x8F8]
	0x03A9CA88 BL 0x1C16CF4
	0x03A9CA8C ADRP X0, 0x6BB000
	0x03A9CA90 LDR X0, [X0 + 0x758]
	0x03A9CA94 BL 0x1C16CF4
	0x03A9CA98 ADRP X0, 0x6BB000
	0x03A9CA9C LDR X0, [X0 + 0x760]
	0x03A9CAA0 BL 0x1C16CF4
	0x03A9CAA4 ADRP X0, 0x6BB000
	0x03A9CAA8 LDR X0, [X0 + 0x750]
	0x03A9CAAC BL 0x1C16CF4
	0x03A9CAB0 MOVZ W8, 0x1
	0x03A9CAB4 STRB W8, [X22 + 0x3E8]
	0x03A9CAB8 LDR X0, [X21]
	0x03A9CABC ADRP X21, 0x6BB000
	0x03A9CAC0 LDR W8, [X0 + 0xE0]
	0x03A9CAC4 LDR X21, [X21 + 0x750]
	0x03A9CAC8 CBNZ W8, 0x3A9CAD0
	0x03A9CACC BL 0x1C16DFC
	0x03A9CAD0 LDR X1, [X21]
	0x03A9CAD4 ADRP X21, 0x6BB000
	0x03A9CAD8 LDR X21, [X21 + 0x758]
	0x03A9CADC MOV X0, X20
	0x03A9CAE0 MOV W2, W31
	0x03A9CAE4 MOV X3, X31
	0x03A9CAE8 BL 0x39E9618
	0x03A9CAEC MOV X0, X19
	0x03A9CAF0 LDR X8, [X0 + 0x78]!
	0x03A9CAF4 CBZ X8, 0x3A9CB00
	0x03A9CAF8 LDR X1, [X21]
	0x03A9CAFC BL 0x23EBADC
	0x03A9CB00 LDR X8, [X19 + 0x88]!
	0x03A9CB04 CBZ X8, 0x3A9CB20
	0x03A9CB08 LDR X1, [X21]
	0x03A9CB0C MOV X0, X19
	0x03A9CB10 LDP X20, X19, [X31 + 0x20]
	0x03A9CB14 LDP X22, X21, [X31 + 0x10]
	0x03A9CB18 LDR X30, [X31], #0x30
	0x03A9CB1C B 0x23EBADC
	0x03A9CB20 LDP X20, X19, [X31 + 0x20]
	0x03A9CB24 LDP X22, X21, [X31 + 0x10]
	0x03A9CB28 LDR X30, [X31], #0x30
	0x03A9CB2C RET
	0x03A9CB30 SUB X31, X31, 0xB0
	0x03A9CB34 STR X30, [X31 + 0x50]
	0x03A9CB38 STP X28, X27, [X31 + 0x60]
	0x03A9CB3C STP X26, X25, [X31 + 0x70]
	0x03A9CB40 STP X24, X23, [X31 + 0x80]
	0x03A9CB44 STP X22, X21, [X31 + 0x90]
	0x03A9CB48 STP X20, X19, [X31 + 0xA0]
	0x03A9CB4C STR X0, [X31 + 0x30]
	0x03A9CB50 STR W1, [X31 + 0x38]
	0x03A9CB54 ADD X0, X31, 0x30
	0x03A9CB58 MOV X1, X31
	0x03A9CB5C MOV W19, W2
	0x03A9CB60 BL 0x3C5B160
	0x03A9CB64 TBZ X0, 0x0, 0x3A9CB8C
	0x03A9CB68 ADD X0, X31, 0x30
	0x03A9CB6C MOV X1, X31
	0x03A9CB70 BL 0x3C5B2B8
	0x03A9CB74 CBZ W0, 0x3A9CBD4
	0x03A9CB78 ADD X0, X31, 0x30
	0x03A9CB7C MOV X1, X31
	0x03A9CB80 BL 0x3C5B2B8
	0x03A9CB84 MOV W20, W0
	0x03A9CB88 B 0x3A9CBD8
	0x03A9CB8C MOVZ W8, 0x2
	0x03A9CB90 MOVZ W9, 0x8
	0x03A9CB94 STR W31, [X31 + 0x48]
	0x03A9CB98 STR X31, [X31 + 0x40]
	0x03A9CB9C STR X31, [X31 + 0x20]
	0x03A9CBA0 STR W31, [X31 + 0x18]
	0x03A9CBA4 STR W31, [X31 + 0x10]
	0x03A9CBA8 ADD X0, X31, 0x40
	0x03A9CBAC STR W8, [X31 + 0x8]
	0x03A9CBB0 MOVZ W1, 0x1
	0x03A9CBB4 MOVZ W4, 0x8
	0x03A9CBB8 MOVZ W5, 0x2
	0x03A9CBBC STR W9, [X31]
	0x03A9CBC0 MOV W2, W31
	0x03A9CBC4 MOV W3, W19
	0x03A9CBC8 MOV W6, W31
	0x03A9CBCC MOV W7, W31
	0x03A9CBD0 B 0x3A9CCB8
	0x03A9CBD4 MOVZ W20, 0x8
	0x03A9CBD8 ADD X0, X31, 0x30
	0x03A9CBDC MOV X1, X31
	0x03A9CBE0 BL 0x3C5B2D8
	0x03A9CBE4 CBZ W0, 0x3A9CBFC
	0x03A9CBE8 ADD X0, X31, 0x30
	0x03A9CBEC MOV X1, X31
	0x03A9CBF0 BL 0x3C5B2D8
	0x03A9CBF4 MOV W21, W0
	0x03A9CBF8 B 0x3A9CC00
	0x03A9CBFC MOVZ W21, 0x8
	0x03A9CC00 ADD X0, X31, 0x30
	0x03A9CC04 MOV X1, X31
	0x03A9CC08 BL 0x3C5B2C0
	0x03A9CC0C MOV W22, W0
	0x03A9CC10 ADD X0, X31, 0x30
	0x03A9CC14 MOV X1, X31
	0x03A9CC18 BL 0x3C5B2C8
	0x03A9CC1C MOV W23, W0
	0x03A9CC20 ADD X0, X31, 0x30
	0x03A9CC24 MOV X1, X31
	0x03A9CC28 BL 0x3C5B2D0
	0x03A9CC2C MOV W24, W0
	0x03A9CC30 ADD X0, X31, 0x30
	0x03A9CC34 MOV X1, X31
	0x03A9CC38 BL 0x3C5B2E0
	0x03A9CC3C MOV W25, W0
	0x03A9CC40 ADD X0, X31, 0x30
	0x03A9CC44 MOV X1, X31
	0x03A9CC48 BL 0x3C5B2E8
	0x03A9CC4C MOV W26, W0
	0x03A9CC50 ADD X0, X31, 0x30
	0x03A9CC54 MOV X1, X31
	0x03A9CC58 BL 0x3C5B2F0
	0x03A9CC5C MOV W27, W0
	0x03A9CC60 ADD X0, X31, 0x30
	0x03A9CC64 MOV X1, X31
	0x03A9CC68 BL 0x3C5B228
	0x03A9CC6C MOV W28, W0
	0x03A9CC70 ADD X0, X31, 0x30
	0x03A9CC74 MOV X1, X31
	0x03A9CC78 BL 0x3C5B238
	0x03A9CC7C AND W2, W28, 0xF
	0x03A9CC80 ORR W3, W0, W19, 0x0
	0x03A9CC84 ADD X0, X31, 0x40
	0x03A9CC88 MOVZ W1, 0x1

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+80], D9
	003 Move [X31+88], D8
	004 Move [X31+96], X30
	005 Move [X31+104], X1
	006 Move [X31+112], X26
	007 Move [X31+120], X25
	008 Move [X31+128], X24
	009 Move [X31+136], X23
	010 Move [X31+144], X22
	011 Move [X31+152], X21
	012 Move [X31+160], X20
	013 Move [X31+168], X19
	014 Move X20, 0x947000
	015 Move W8, [X20+994]
	016 Move X22, X2
	017 Move X19, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {51}
	022 Move X0, 0x680000
	023 Move X0, [X0+2296]
	024 Call 0x1C17CF4
	025 Move X0, 0x6BC000
	026 Move X0, [X0+328]
	027 Call 0x1C17CF4
	028 Move X0, 0x6B5000
	029 Move X0, [X0+3200]
	030 Call 0x1C17CF4
	031 Move X0, 0x6BA000
	032 Move X0, [X0+3912]
	033 Call 0x1C17CF4
	034 Move X0, 0x6BA000
	035 Move X0, [X0+3928]
	036 Call 0x1C17CF4
	037 Move X0, 0x6BA000
	038 Move X0, [X0+3944]
	039 Call 0x1C17CF4
	040 Move X0, 0x6BC000
	041 Move X0, [X0+1872]
	042 Call 0x1C17CF4
	043 Move X0, 0x6BA000
	044 Move X0, [X0+3976]
	045 Call 0x1C17CF4
	046 Move X0, 0x6BC000
	047 Move X0, [X0+896]
	048 Call 0x1C17CF4
	049 Move W8, 1
	050 Move [X20+994], W8
	051 Move [X31+72], W31
	052 Move X21, [X22+216]
	053 Compare X21, 0
	054 JumpIfEqual {328}
	055 Move X0, X21
	056 Move X1, X31
	057 Call Camera.get_allowDynamicResolution, X0
	058 Move TEMP, X0
	059 And TEMP, TEMP, 1
	060 Compare TEMP, 1
	061 JumpIfNotEqual {91}
	062 Move X0, X31
	063 Call ScalableBufferManager.get_widthScaleFactor
	064 Move V8, V0
	065 Move V0, [X22+240]
	066 Move X20, 0x93D000
	067 Move W8, [X20+2750]
	068 NotImplemented "Instruction SCVTF not yet implemented."
	069 Compare W8, 0
	070 JumpIfNotEqual {76}
	071 Move X0, 0x658000
	072 Move X0, [X0+1448]
	073 Call 0x1C17CF4
	074 Move W8, 1
	075 Move [X20+2750], W8
	076 Move X8, 0x658000
	077 Move X8, [X8+1448]
	078 Multiply S8, S8, S9
	079 Move X0, [X8]
	080 Move W8, [X0+224]
	081 Compare W8, 0
	082 JumpIfNotEqual {84}
	083 Call 0x1C17DFC
	084 Move W8, 0x7F800000
	085 NotImplemented "Instruction FRINTP not yet implemented."
	086 Move S1, W8
	087 NotImplemented "Instruction FCVTPS not yet implemented."
	088 NotImplemented "Instruction FCMP not yet implemented."
	089 Move W8, 0x80000000
	090 NotImplemented "Instruction CSEL not yet implemented."
	091 Move W8, [X22+240]
	092 Compare X19, 0
	093 JumpIfEqual {328}
	094 Move X0, X21
	095 Move X1, X31
	096 Move [X19+36], W8
	097 Call Camera.get_allowDynamicResolution, X0
	098 Move TEMP, X0
	099 And TEMP, TEMP, 1
	100 Compare TEMP, 1
	101 JumpIfNotEqual {131}
	102 Move X0, X31
	103 Call ScalableBufferManager.get_heightScaleFactor
	104 Move V8, V0
	105 Move V0, [X22+244]
	106 Move X20, 0x93D000
	107 Move W8, [X20+2750]
	108 NotImplemented "Instruction SCVTF not yet implemented."
	109 Compare W8, 0
	110 JumpIfNotEqual {116}
	111 Move X0, 0x658000
	112 Move X0, [X0+1448]
	113 Call 0x1C17CF4
	114 Move W8, 1
	115 Move [X20+2750], W8
	116 Move X8, 0x658000
	117 Move X8, [X8+1448]
	118 Multiply S8, S8, S9
	119 Move X0, [X8]
	120 Move W8, [X0+224]
	121 Compare W8, 0
	122 JumpIfNotEqual {124}
	123 Call 0x1C17DFC
	124 Move W8, 0x7F800000
	125 NotImplemented "Instruction FRINTP not yet implemented."
	126 Move S1, W8
	127 NotImplemented "Instruction FCVTPS not yet implemented."
	128 NotImplemented "Instruction FCMP not yet implemented."
	129 Move W8, 0x80000000
	130 NotImplemented "Instruction CSEL not yet implemented."
	131 Move W8, [X22+244]
	132 Move [X19+40], W8
	133 Move W8, [X22+556]
	134 Compare W8, 0
	135 JumpIfEqual {137}
	136 Move W20, 1
	137 Move W8, [X22+552]
	138 NotImplemented "Instruction ORN not yet implemented."
	139 Move W20, W8
	140 ShiftRight W20, 31
	141 And W20, W20, 0x7FFFFFFF
	142 Move X0, [X22+216]
	143 Compare X0, 0
	144 JumpIfEqual {328}
	145 Add X8, X31, 8
	146 Move X1, X31
	147 Call Camera.get_worldToCameraMatrix, X0
	148 Move X0, [X22+216]
	149 Compare X0, 0
	150 JumpIfEqual {328}
	151 Move X1, X31
	152 Call Camera.get_orthographic, X0
	153 Move X0, [X22+216]
	154 Compare X0, 0
	155 JumpIfEqual {328}
	156 Move X26, 0x6BC000
	157 Move X26, [X26+328]
	158 Move X1, X31
	159 Add X23, X19, 120
	160 Add X24, X19, 136
	161 Add X25, X22, 568
	162 Call Camera.get_nearClipPlane, X0
	163 Move X1, X23
	164 Move X2, X24
	165 Move X3, X25
	166 Move W4, W20
	167 Move W6, W31
	168 Call DeferredLights.PrecomputeLights, X0, X1, X2, X3, X4, X5, X6, V0
	169 Move X0, [X26]
	170 Move X20, [X22]
	171 Move W8, [X0+224]
	172 Compare W8, 0
	173 JumpIfNotEqual {176}
	174 Call 0x1C17DFC
	175 Move X0, [X26]
	176 Move X8, [X0+184]
	177 Add X0, X31, 72
	178 Move X1, X20
	179 Move X3, X31
	180 Move X2, [X8+96]
	181 Call ProfilingScope..ctor, X0, X1, X2
	182 Add X2, X22, 552
	183 Move X1, X20
	184 Call DeferredLights.SetupMainLightConstants, X0, X1, X2
	185 Move X25, 0x680000
	186 Move X25, [X25+2296]
	187 Move W23, [X22+585]
	188 Move W24, [X19+26]
	189 Move X0, [X25]
	190 Move W8, [X0+224]
	191 Compare W8, 0
	192 JumpIfNotEqual {194}
	193 Call 0x1C17DFC
	194 Move X8, 0x6BC000
	195 Move X8, [X8+1872]
	196 NotImplemented "Instruction CMP not yet implemented."
	197 NotImplemented "Instruction CSET not yet implemented."
	198 Move X1, [X8]
	199 Move X0, X20
	200 Move X3, X31
	201 Call CoreUtils.SetKeyword, X0, X1, X2
	202 Compare W23, 0
	203 JumpIfEqual {212}
	204 Move W8, [X19+28]
	205 NotImplemented "Instruction CMP not yet implemented."
	206 NotImplemented "Instruction CSET not yet implemented."
	207 Move X0, X31
	208 Call QualitySettings.get_shadowmaskMode
	209 Move W8, [X19+28]
	210 NotImplemented "Instruction CMP not yet implemented."
	211 NotImplemented "Instruction CSET not yet implemented."
	212 Move W26, W31
	213 Move W24, W31
	214 Move W26, W31
	215 NotImplemented "Instruction CMP not yet implemented."
	216 NotImplemented "Instruction CSET not yet implemented."
	217 Move X0, [X25]
	218 Move W8, [X0+224]
	219 Compare W8, 0
	220 JumpIfNotEqual {222}
	221 Call 0x1C17DFC
	222 Move X8, 0x6BA000
	223 Move X8, [X8+3944]
	224 Or W2, W24, W26
	225 Move X1, [X8]
	226 Move X0, X20
	227 Move X3, X31
	228 Call CoreUtils.SetKeyword, X0, X1, X2
	229 Move X8, 0x6BA000
	230 Move X8, [X8+3928]
	231 Move X1, [X8]
	232 Move X0, X20
	233 Move W2, W23
	234 Move X3, X31
	235 Call CoreUtils.SetKeyword, X0, X1, X2
	236 Move X8, 0x6BA000
	237 Move X8, [X8+3912]
	238 Move X1, [X8]
	239 Move X0, X20
	240 Move W2, W24
	241 Move X3, X31
	242 Call CoreUtils.SetKeyword, X0, X1, X2
	243 Move X8, 0x6BC000
	244 Move W9, [X19+21]
	245 Move X8, [X8+896]
	246 Compare W9, 0
	247 JumpIfEqual {251}
	248 Move W9, [X22+384]
	249 NotImplemented "Instruction CMP not yet implemented."
	250 NotImplemented "Instruction CSET not yet implemented."
	251 Move W22, W31
	252 Move X0, [X25]
	253 Move X23, [X8]
	254 Move W9, [X0+224]
	255 Compare W9, 0
	256 JumpIfNotEqual {258}
	257 Call 0x1C17DFC
	258 Move X0, X20
	259 Move X1, X23
	260 Move W2, W22
	261 Move X3, X31
	262 Call CoreUtils.SetKeyword, X0, X1, X2
	263 Call DeferredLights.get_UseLightLayers, X0
	264 Move X8, 0x6BA000
	265 Move X8, [X8+3976]
	266 Move X22, [X8]
	267 Move TEMP, X0
	268 And TEMP, TEMP, 1
	269 Compare TEMP, 1
	270 JumpIfNotEqual {281}
	271 Move X0, [X25]
	272 Move W8, [X0+224]
	273 Compare W8, 0
	274 JumpIfNotEqual {276}
	275 Call 0x1C17DFC
	276 Move X0, X21
	277 Move X1, X31
	278 Call CoreUtils.IsSceneLightingDisabled, X0
	279 NotImplemented "Instruction ORN not yet implemented."
	280 And W21, W8, 1
	281 Move W21, W31
	282 Move X0, [X25]
	283 Move W8, [X0+224]
	284 Compare W8, 0
	285 JumpIfNotEqual {287}
	286 Call 0x1C17DFC
	287 Move X0, X20
	288 Move X1, X22
	289 Move W2, W21
	290 Move X3, X31
	291 Call CoreUtils.SetKeyword, X0, X1, X2
	292 Move W1, [X19+16]
	293 Move X0, X20
	294 Move X2, X31
	295 Call RenderingLayerUtils.SetupProperties, X0, X1
	296 Add X0, X31, 72
	297 Move X1, X31
	298 Call ProfilingScope.Dispose, X0
	299 Move X8, 0x6B5000
	300 Move X8, [X8+3200]
	301 Move X0, [X8]
	302 Move W8, [X0+224]
	303 Compare W8, 0
	304 JumpIfNotEqual {306}
	305 Call 0x1C17DFC
	306 Add X0, X31, 104
	307 Move X1, X20
	308 Move X2, X31
	309 Call ScriptableRenderContext.ExecuteCommandBuffer, X0, X1
	310 Compare X20, 0
	311 JumpIfEqual {328}
	312 Move X0, X20
	313 Move X1, X31
	314 Call CommandBuffer.Clear, X0
	315 Move X20, [X31+160]
	316 Move X19, [X31+168]
	317 Move X22, [X31+144]
	318 Move X21, [X31+152]
	319 Move X24, [X31+128]
	320 Move X23, [X31+136]
	321 Move X26, [X31+112]
	322 Move X25, [X31+120]
	323 Move X30, [X31+96]
	324 Move D9, [X31+80]
	325 Move D8, [X31+88]
	326 Add X31, X31, 176
	327 Return 
	328 Call 0x1C17F20
	329 Move X19, X0
	330 NotImplemented "Instruction CMP not yet implemented."
	331 Move X0, X19
	332 Call 0x3EB2AD0
	333 Move X21, [X0]
	334 Call 0x3EB2AE0
	335 Add X0, X31, 72
	336 Move X1, X31
	337 Call ProfilingScope.Dispose, X0
	338 Compare X21, 0
	339 JumpIfEqual {299}
	340 Move X0, X21
	341 Call 0x1C17F18
	342 Move X21, X31
	343 Move X19, X0
	344 Add X0, X31, 72
	345 Move X1, X31
	346 Call ProfilingScope.Dispose, X0
	347 Compare X21, 0
	348 JumpIfNotEqual {351}
	349 Move X0, X19
	350 Call 0x1D2D690
	351 Move X0, X21
	352 Call 0x1C17F18
	353 Call 0x1991590

Method: System.Void ResolveMixedLightingMode(ref UnityEngine.Rendering.Universal.RenderingData renderingData)

Disassembly:
	0x03A9CF74 LDR X0, [X0 + 0x148]
	0x03A9CF78 BL 0x1C16CF4
	0x03A9CF7C ADRP X0, 0x657000
	0x03A9CF80 LDR X0, [X0 + 0x598]
	0x03A9CF84 BL 0x1C16CF4
	0x03A9CF88 MOVZ W8, 0x1
	0x03A9CF8C STRB W8, [X22 + 0x3E9]
	0x03A9CF90 LDR X0, [X21]
	0x03A9CF94 STRB W31, [X31 + 0x88]
	0x03A9CF98 LDR X21, [X20 + 0xB0]
	0x03A9CF9C LDR W8, [X0 + 0xE0]
	0x03A9CFA0 CBNZ W8, 0x3A9CFA8
	0x03A9CFA4 BL 0x1C16DFC
	0x03A9CFA8 MOV X0, X21
	0x03A9CFAC MOV X1, X31
	0x03A9CFB0 MOV X2, X31
	0x03A9CFB4 BL 0x3C3883C
	0x03A9CFB8 TBZ X0, 0x0, 0x3A9CFDC
	0x03A9CFBC ADRP X8, 0x6BB000
	0x03A9CFC0 LDR X8, [X8 + 0x148]
	0x03A9CFC4 LDR X0, [X8]
	0x03A9CFC8 LDR W8, [X0 + 0xE0]
	0x03A9CFCC CBNZ W8, 0x3A9CFD4
	0x03A9CFD0 BL 0x1C16DFC
	0x03A9CFD4 BL 0x3A9D114
	0x03A9CFD8 STR X0, [X20 + 0xB0]
	0x03A9CFDC LDR X2, [X20 + 0xE0]
	0x03A9CFE0 ADD X0, X31, 0x88
	0x03A9CFE4 MOV X1, X19
	0x03A9CFE8 MOV X3, X31
	0x03A9CFEC BL 0x39B1DB0
	0x03A9CFF0 ADRP X22, 0x93C000
	0x03A9CFF4 LDRB W8, [X22 + 0xAC0]
	0x03A9CFF8 LDR X21, [X20 + 0xB0]
	0x03A9CFFC CBNZ W8, 0x3A9D014
	0x03A9D000 ADRP X0, 0x65A000
	0x03A9D004 LDR X0, [X0 + 0x270]
	0x03A9D008 BL 0x1C16CF4
	0x03A9D00C MOVZ W8, 0x1
	0x03A9D010 STRB W8, [X22 + 0xAC0]
	0x03A9D014 ADRP X8, 0x65A000
	0x03A9D018 LDR X8, [X8 + 0x270]
	0x03A9D01C LDR X8, [X8]
	0x03A9D020 LDR X8, [X8 + 0xB8]
	0x03A9D024 LDP V1, V0, [X8 + 0x60]
	0x03A9D028 LDP V2, V3, [X8 + 0x40]
	0x03A9D02C STP V1, V0, [X31 + 0x60]
	0x03A9D030 STP V2, V3, [X31 + 0x40]
	0x03A9D034 LDR X8, [X20 + 0xC0]
	0x03A9D038 CBZ X8, 0x3A9D09C
	0x03A9D03C LDR W9, [X8 + 0x18]
	0x03A9D040 CMP W9, 0x5
	0x03A9D044 B.LS 0x3A9D0A0
	0x03A9D048 CBZ X19, 0x3A9D0A4
	0x03A9D04C LDP V0, V1, [X31 + 0x40]
	0x03A9D050 LDP V2, V3, [X31 + 0x60]
	0x03A9D054 LDR X3, [X20 + 0xB8]
	0x03A9D058 LDR W5, [X8 + 0x34]
	0x03A9D05C STP V0, V1, [X31]
	0x03A9D060 STP V2, V3, [X31 + 0x20]
	0x03A9D064 ADD X2, X31, 0x0
	0x03A9D068 MOV X0, X19
	0x03A9D06C MOV X1, X21
	0x03A9D070 MOV W4, W31
	0x03A9D074 MOV X6, X31
	0x03A9D078 BL 0x3C4F070
	0x03A9D07C ADD X0, X31, 0x88
	0x03A9D080 MOV X1, X31
	0x03A9D084 BL 0x39B1DB4
	0x03A9D088 LDP X20, X19, [X31 + 0xA0]
	0x03A9D08C LDP X22, X21, [X31 + 0x90]
	0x03A9D090 LDR X30, [X31 + 0x80]
	0x03A9D094 ADD X31, X31, 0xB0
	0x03A9D098 RET
	0x03A9D09C BL 0x1C16F20
	0x03A9D0A0 BL 0x1C16F28
	0x03A9D0A4 BL 0x1C16F20
	0x03A9D0A8 B 0x3A9D0B0
	0x03A9D0AC B 0x3A9D0B0
	0x03A9D0B0 MOV X19, X0
	0x03A9D0B4 CMP W1, 0x1
	0x03A9D0B8 B.NE 0x3A9D0E4
	0x03A9D0BC MOV X0, X19
	0x03A9D0C0 BL 0x3EB1AD0
	0x03A9D0C4 LDR X20, [X0]
	0x03A9D0C8 BL 0x3EB1AE0
	0x03A9D0CC ADD X0, X31, 0x88
	0x03A9D0D0 MOV X1, X31
	0x03A9D0D4 BL 0x39B1DB4
	0x03A9D0D8 CBZ X20, 0x3A9D088
	0x03A9D0DC MOV X0, X20
	0x03A9D0E0 BL 0x1C16F18
	0x03A9D0E4 MOV X20, X31
	0x03A9D0E8 B 0x3A9D0F0

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+32], X30
	003 Move [X31+48], X28
	004 Move [X31+56], X27
	005 Move [X31+64], X26
	006 Move [X31+72], X25
	007 Move [X31+80], X24
	008 Move [X31+88], X23
	009 Move [X31+96], X22
	010 Move [X31+104], X21
	011 Move [X31+112], X20
	012 Move [X31+120], X19
	013 Move X21, 0x947000
	014 Move W8, [X21+995]
	015 Move X19, X1
	016 Move X20, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {29}
	021 Move X0, 0x6BB000
	022 Move X0, [X0+440]
	023 Call 0x1C17CF4
	024 Move X0, 0x658000
	025 Move X0, [X0+1432]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X21+995], W8
	029 Move [X20+28], W31
	030 Move W8, [X19+585]
	031 Compare W8, 0
	032 JumpIfEqual {94}
	033 Move W8, [X19+576]
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Move X25, 0x6BB000
	036 Move X26, 0x658000
	037 Move X22, [X19+576]
	038 Move X23, [X19+568]
	039 Move X25, [X25+440]
	040 Move X26, [X26+1432]
	041 Move W21, W31
	042 Move W27, 1
	043 Move W28, 2
	044 Move X3, [X25]
	045 Move X0, X23
	046 Move X1, X22
	047 Move W2, W21
	048 Call 0x22232C0, X0, X1
	049 Move X1, X31
	050 Call VisibleLight.get_light, X0
	051 Move X8, [X26]
	052 Move X24, X0
	053 Move W9, [X8+224]
	054 Compare W9, 0
	055 JumpIfNotEqual {58}
	056 Move X0, X8
	057 Call 0x1C17DFC
	058 Move X0, X24
	059 Move X1, X31
	060 Move X2, X31
	061 Call Object.op_Inequality, X0, X1
	062 Move TEMP, X0
	063 And TEMP, TEMP, 1
	064 Compare TEMP, 1
	065 JumpIfNotEqual {88}
	066 Compare X24, 0
	067 JumpIfEqual {109}
	068 Add X8, X31, 8
	069 Move X0, X24
	070 Move X1, X31
	071 Call Light.get_bakingOutput, X0
	072 Move W8, [X31+16]
	073 NotImplemented "Instruction CMP not yet implemented."
	074 Move X0, X24
	075 Move X1, X31
	076 Call Light.get_shadows, X0
	077 Compare W0, 0
	078 JumpIfEqual {88}
	079 Add X8, X31, 8
	080 Move X0, X24
	081 Move X1, X31
	082 Call Light.get_bakingOutput, X0
	083 Move W8, [X31+20]
	084 NotImplemented "Instruction CMP not yet implemented."
	085 NotImplemented "Instruction CMP not yet implemented."
	086 Move [X20+28], W28
	087 Move [X20+28], W27
	088 Move W8, [X19+576]
	089 Add W21, W21, 1
	090 NotImplemented "Instruction CMP not yet implemented."
	091 Move W8, [X20+28]
	092 Compare W8, 0
	093 JumpIfEqual {44}
	094 Move X0, X20
	095 Call DeferredLights.CreateGbufferResources, X0
	096 Move X20, [X31+112]
	097 Move X19, [X31+120]
	098 Move X22, [X31+96]
	099 Move X21, [X31+104]
	100 Move X24, [X31+80]
	101 Move X23, [X31+88]
	102 Move X26, [X31+64]
	103 Move X25, [X31+72]
	104 Move X28, [X31+48]
	105 Move X27, [X31+56]
	106 Move X30, [X31+32]
	107 Add X31, X31, 128
	108 Return 
	109 Call 0x1C17F20

Method: System.Void DisableFramebufferFetchInput()

Disassembly:
	0x03A9D384 MOV X0, X19
	0x03A9D388 BL 0x3A9D8D0

ISIL:
	001 Move [X0+21], W31
	002 Call DeferredLights.CreateGbufferResources, X0
	003 Return 

Method: System.Void ReleaseGbufferResources()

Disassembly:
	0x03A9D38C TBNZ X0, 0x0, 0x3A9D39C
	0x03A9D390 MOV X0, X19
	0x03A9D394 MOV X1, X20
	0x03A9D398 BL 0x3A9D948
	0x03A9D39C MOV X0, X19
	0x03A9D3A0 MOV X2, X20
	0x03A9D3A4 MOV X3, X21
	0x03A9D3A8 BL 0x3A9DA8C
	0x03A9D3AC LDR X0, [X24]
	0x03A9D3B0 LDR W8, [X0 + 0xE0]
	0x03A9D3B4 CBNZ W8, 0x3A9D3BC
	0x03A9D3B8 BL 0x1C16DFC
	0x03A9D3BC LDR X1, [X22]
	0x03A9D3C0 MOV X0, X20
	0x03A9D3C4 MOV W2, W31
	0x03A9D3C8 MOV X3, X31
	0x03A9D3CC BL 0x39E9618
	0x03A9D3D0 MOV X0, X19
	0x03A9D3D4 MOV X2, X20
	0x03A9D3D8 MOV X3, X21
	0x03A9D3DC BL 0x3A9DD2C
	0x03A9D3E0 ADD X0, X31, 0x8
	0x03A9D3E4 MOV X1, X31
	0x03A9D3E8 BL 0x39B1DB4
	0x03A9D3EC LDR X0, [X24]
	0x03A9D3F0 ADRP X22, 0x6B8000
	0x03A9D3F4 ADRP X23, 0x6B9000
	0x03A9D3F8 LDRB W25, [X21 + 0x298]
	0x03A9D3FC LDR W8, [X0 + 0xE0]
	0x03A9D400 LDR X22, [X22 + 0xF98]
	0x03A9D404 LDR X23, [X23 + 0xEC0]
	0x03A9D408 ADD X21, X21, 0x250
	0x03A9D40C CBNZ W8, 0x3A9D414
	0x03A9D410 BL 0x1C16DFC
	0x03A9D414 LDR X1, [X22]
	0x03A9D418 ADRP X22, 0x6B9000
	0x03A9D41C LDR X22, [X22 + 0x170]
	0x03A9D420 CMP W25, 0x0
	0x03A9D424 CSET W2, NE
	0x03A9D428 MOV X0, X20

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x946000
	007 Move W8, [X20+996]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x6B4000
	014 Move X0, [X0+2480]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X20+996], W8
	018 Move X8, [X19+56]
	019 Compare X8, 0
	020 JumpIfEqual {42}
	021 Move X22, 0x6B4000
	022 Move X22, [X22+2480]
	023 Move X21, X31
	024 Move W9, [X8+24]
	025 NotImplemented "Instruction CMP not yet implemented."
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move X0, [X22]
	028 Add X8, X8, X21
	029 Move X20, [X8+32]
	030 Move W9, [X0+224]
	031 Compare W9, 0
	032 JumpIfNotEqual {34}
	033 Call 0x1C17DFC
	034 Move X0, X20
	035 Move X1, X31
	036 Call RTHandles.Release, X0
	037 Move X8, [X19+56]
	038 Add X21, X21, 1
	039 Compare X8, 0
	040 JumpIfNotEqual {24}
	041 Call 0x1C17F20
	042 Move X20, [X31+32]
	043 Move X19, [X31+40]
	044 Move X22, [X31+16]
	045 Move X21, [X31+24]
	046 Move X30, [X31+48]
	047 Return 
	048 Call 0x1C17F28

Method: System.Void ReAllocateGBufferIfNeeded(UnityEngine.RenderTextureDescriptor gbufferSlice, System.Int32 gbufferIndex)

Disassembly:
	0x03A9D42C MOV X3, X31
	0x03A9D430 BL 0x39E9618
	0x03A9D434 LDR X0, [X23]
	0x03A9D438 LDR W8, [X0 + 0xE0]
	0x03A9D43C CBNZ W8, 0x3A9D444
	0x03A9D440 BL 0x1C16DFC
	0x03A9D444 MOV X0, X20
	0x03A9D448 MOV X1, X21
	0x03A9D44C MOV X2, X31
	0x03A9D450 BL 0x3A77F3C
	0x03A9D454 LDR X8, [X19 + 0xE8]
	0x03A9D458 LDR X19, [X22]
	0x03A9D45C CBZ X8, 0x3A9D470
	0x03A9D460 LDRB W8, [X8 + 0x5C]
	0x03A9D464 CMP W8, 0x0
	0x03A9D468 CSET W21, NE
	0x03A9D46C B 0x3A9D474
	0x03A9D470 MOV W21, W31
	0x03A9D474 LDR X0, [X24]
	0x03A9D478 LDR W8, [X0 + 0xE0]
	0x03A9D47C CBNZ W8, 0x3A9D484
	0x03A9D480 BL 0x1C16DFC
	0x03A9D484 MOV X0, X20
	0x03A9D488 MOV X1, X19
	0x03A9D48C MOV W2, W21
	0x03A9D490 MOV X3, X31
	0x03A9D494 BL 0x39E9618
	0x03A9D498 LDP X20, X19, [X31 + 0x40]
	0x03A9D49C LDP X22, X21, [X31 + 0x30]
	0x03A9D4A0 LDP X24, X23, [X31 + 0x20]
	0x03A9D4A4 LDP X30, X25, [X31 + 0x10]
	0x03A9D4A8 ADD X31, X31, 0x50
	0x03A9D4AC RET
	0x03A9D4B0 BL 0x1C16F20
	0x03A9D4B4 BL 0x1C16F28
	0x03A9D4B8 B 0x3A9D4D0
	0x03A9D4BC B 0x3A9D4D0
	0x03A9D4C0 B 0x3A9D4D0
	0x03A9D4C4 B 0x3A9D4D0
	0x03A9D4C8 B 0x3A9D4D0
	0x03A9D4CC B 0x3A9D4D0
	0x03A9D4D0 MOV X22, X0
	0x03A9D4D4 CMP W1, 0x1
	0x03A9D4D8 B.NE 0x3A9D504
	0x03A9D4DC MOV X0, X22
	0x03A9D4E0 BL 0x3EB1AD0
	0x03A9D4E4 LDR X23, [X0]
	0x03A9D4E8 BL 0x3EB1AE0
	0x03A9D4EC ADD X0, X31, 0x8
	0x03A9D4F0 MOV X1, X31
	0x03A9D4F4 BL 0x39B1DB4
	0x03A9D4F8 CBZ X23, 0x3A9D3EC
	0x03A9D4FC MOV X0, X23
	0x03A9D500 BL 0x1C16F18
	0x03A9D504 MOV X23, X31
	0x03A9D508 B 0x3A9D510
	0x03A9D50C MOV X22, X0
	0x03A9D510 ADD X0, X31, 0x8
	0x03A9D514 MOV X1, X31
	0x03A9D518 BL 0x39B1DB4
	0x03A9D51C CBNZ X23, 0x3A9D528
	0x03A9D520 MOV X0, X22
	0x03A9D524 BL 0x1D2C690
	0x03A9D528 MOV X0, X23
	0x03A9D52C BL 0x1C16F18
	0x03A9D530 BL 0x1990590
	0x03A9D534 STR D8, [X31 - 0x70]!
	0x03A9D538 STP X29, X30, [X31 + 0x10]
	0x03A9D53C STP X28, X27, [X31 + 0x20]
	0x03A9D540 STP X26, X25, [X31 + 0x30]
	0x03A9D544 STP X24, X23, [X31 + 0x40]
	0x03A9D548 STP X22, X21, [X31 + 0x50]
	0x03A9D54C STP X20, X19, [X31 + 0x60]
	0x03A9D550 SUB X31, X31, 0x3F0
	0x03A9D554 ADRP X19, 0x945000
	0x03A9D558 LDRB W8, [X19 + 0x3EC]
	0x03A9D55C MOV X21, X2
	0x03A9D560 MOV X22, X1
	0x03A9D564 MOV X20, X0
	0x03A9D568 TBNZ X8, 0x0, 0x3A9D580
	0x03A9D56C ADRP X0, 0x6BA000
	0x03A9D570 LDR X0, [X0 + 0x748]
	0x03A9D574 BL 0x1C16CF4
	0x03A9D578 MOVZ W8, 0x1
	0x03A9D57C STRB W8, [X19 + 0x3EC]
	0x03A9D580 MOVI V0.2D, 0x0
	0x03A9D584 STP V0, V0, [X31 + 0x350]
	0x03A9D588 STP V0, V0, [X31 + 0x330]
	0x03A9D58C STP V0, V0, [X31 + 0x310]
	0x03A9D590 STP V0, V0, [X31 + 0x2F0]
	0x03A9D594 LDR X0, [X21 + 0x190]
	0x03A9D598 CBZ X0, 0x3A9D8CC
	0x03A9D59C MOV X1, X31
	0x03A9D5A0 BL 0x3984C98
	0x03A9D5A4 STR X22, [X31 + 0x3F8]
	0x03A9D5A8 TBZ X0, 0x0, 0x3A9D5CC
	0x03A9D5AC LDR X0, [X21 + 0x190]
	0x03A9D5B0 CBZ X0, 0x3A9D8CC
	0x03A9D5B4 MOV X1, X31
	0x03A9D5B8 BL 0x3984DE0
	0x03A9D5BC ANDS W31, W0, 0x1
	0x03A9D5C0 MOVZ W8, 0x1
	0x03A9D5C4 CINC X28, X8, NE
	0x03A9D5C8 B 0x3A9D5D0
	0x03A9D5CC MOVZ W28, 0x1
	0x03A9D5D0 ADRP X24, 0x65A000
	0x03A9D5D4 ADRP X25, 0x6BA000
	0x03A9D5D8 ADD X23, X21, 0x18
	0x03A9D5DC LDR X21, [X20 + 0xC8]
	0x03A9D5E0 LDR X24, [X24 + 0x270]
	0x03A9D5E4 LDR X25, [X25 + 0x740]
	0x03A9D5E8 MOV X22, X31
	0x03A9D5EC MOVZ W29, 0x20
	0x03A9D5F0 FMOV S8, 0.5
	0x03A9D5F4 MOVZ W19, 0x3F800000
	0x03A9D5F8 ADRP X26, 0x93B000
	0x03A9D5FC ADRP X27, 0x945000
	0x03A9D600 ADD X8, X31, 0x270
	0x03A9D604 MOV X0, X23
	0x03A9D608 MOV W1, W22
	0x03A9D60C MOV X2, X31

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X22, 0x946000
	009 Move W8, [X22+997]
	010 Move W19, W2
	011 Move X21, X1
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x6BB000
	018 Move X0, [X0+328]
	019 Call 0x1C17CF4
	020 Move X0, 0x6B8000
	021 Move X0, [X0+16]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X22+997], W8
	025 Move X8, [X20+56]
	026 Compare X8, 0
	027 JumpIfEqual {123}
	028 Move W9, [X8+24]
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move X23, W19
	031 Add X8, X8, X23
	032 Move X0, [X8+32]
	033 Compare X0, 0
	034 JumpIfEqual {131}
	035 Move X1, X31
	036 Call RTHandle.GetInstanceID, X0
	037 Move X8, [X20+48]
	038 Compare X8, 0
	039 JumpIfEqual {131}
	040 Move W9, [X8+24]
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Add X8, X8, X23
	043 Move W22, W0
	044 Move X0, [X8+32]
	045 Compare X0, 0
	046 JumpIfEqual {131}
	047 Move X1, X31
	048 Call RTHandle.GetInstanceID, X0
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Move X0, X21
	051 Move W1, W31
	052 Move X2, X31
	053 Call RenderTextureDescriptor.set_depthBufferBits, X0, X1
	054 Move X0, X20
	055 Move W1, W19
	056 Move [X21+24], W31
	057 Call DeferredLights.GetGBufferFormat, X0, X1
	058 Move W1, W0
	059 Move X0, X21
	060 Move X2, X31
	061 Call RenderTextureDescriptor.set_graphicsFormat, X0, X1
	062 Move X24, [X20+56]
	063 Compare X24, 0
	064 JumpIfEqual {131}
	065 Move X22, 0x6BB000
	066 Move X22, [X22+328]
	067 Move X0, [X22]
	068 Move W8, [X0+224]
	069 Compare W8, 0
	070 JumpIfNotEqual {73}
	071 Call 0x1C17DFC
	072 Move X0, [X22]
	073 Move X8, [X0+184]
	074 Move X8, [X8]
	075 Compare X8, 0
	076 JumpIfEqual {131}
	077 Move W9, [X8+24]
	078 NotImplemented "Instruction CMP not yet implemented."
	079 Move X9, 0x6B8000
	080 Move X9, [X9+16]
	081 Add X8, X8, X23
	082 Move X22, [X8+32]
	083 Move X0, [X9]
	084 Move W9, [X0+224]
	085 Compare W9, 0
	086 JumpIfNotEqual {88}
	087 Call 0x1C17DFC
	088 Move W8, [X24+24]
	089 NotImplemented "Instruction CMP not yet implemented."
	090 Add X8, X24, X23
	091 Add X0, X8, 32
	092 Move S0, W31
	093 Move W3, 1
	094 Move W5, 1
	095 Move X1, X21
	096 Move W2, W31
	097 Move W4, W31
	098 Move X6, X22
	099 Move X7, X31
	100 Call RenderingUtils.ReAllocateIfNeeded, X0, X1, X2, X3, X4, X5, V0, X6
	101 Move X8, [X20+56]
	102 Compare X8, 0
	103 JumpIfEqual {131}
	104 Move W9, [X8+24]
	105 NotImplemented "Instruction CMP not yet implemented."
	106 Move X21, [X20+48]
	107 Compare X21, 0
	108 JumpIfEqual {131}
	109 Add X8, X8, X23
	110 Move X20, [X8+32]
	111 Compare X20, 0
	112 JumpIfEqual {119}
	113 Move X8, [X21]
	114 Move X0, X20
	115 Move X1, [X8+64]
	116 Call 0x1C17E00
	117 Compare X0, 0
	118 JumpIfEqual {133}
	119 Move W8, [X21+24]
	120 NotImplemented "Instruction CMP not yet implemented."
	121 Add X8, X21, X23
	122 Move [X8+32], X20
	123 Move X20, [X31+48]
	124 Move X19, [X31+56]
	125 Move X22, [X31+32]
	126 Move X21, [X31+40]
	127 Move X24, [X31+16]
	128 Move X23, [X31+24]
	129 Move X30, [X31+64]
	130 Return 
	131 Call 0x1C17F20
	132 Call 0x1C17F28
	133 Call 0x1C17F44
	134 Move X1, X31
	135 Call 0x1C17DEC

Method: System.Void CreateGbufferResources()

Disassembly:
	0x03A9D0EC MOV X19, X0
	0x03A9D0F0 ADD X0, X31, 0x88
	0x03A9D0F4 MOV X1, X31
	0x03A9D0F8 BL 0x39B1DB4
	0x03A9D0FC CBNZ X20, 0x3A9D108
	0x03A9D100 MOV X0, X19
	0x03A9D104 BL 0x1D2C690
	0x03A9D108 MOV X0, X20
	0x03A9D10C BL 0x1C16F18
	0x03A9D110 BL 0x1990590
	0x03A9D114 STP X30, X21, [X31 - 0x20]!
	0x03A9D118 STP X20, X19, [X31 + 0x10]
	0x03A9D11C ADRP X19, 0x945000
	0x03A9D120 ADRP X20, 0x658000
	0x03A9D124 LDRB W8, [X19 + 0x3F9]
	0x03A9D128 LDR X20, [X20 + 0x9B0]
	0x03A9D12C TBNZ X8, 0x0, 0x3A9D15C
	0x03A9D130 ADRP X0, 0x657000
	0x03A9D134 LDR X0, [X0 + 0xE58]
	0x03A9D138 BL 0x1C16CF4
	0x03A9D13C ADRP X0, 0x65D000
	0x03A9D140 LDR X0, [X0 + 0x700]
	0x03A9D144 BL 0x1C16CF4
	0x03A9D148 ADRP X0, 0x658000
	0x03A9D14C LDR X0, [X0 + 0x9B0]
	0x03A9D150 BL 0x1C16CF4
	0x03A9D154 MOVZ W8, 0x1
	0x03A9D158 STRB W8, [X19 + 0x3F9]
	0x03A9D15C LDR X0, [X20]
	0x03A9D160 MOVZ W1, 0x3
	0x03A9D164 BL 0x1C16D6C
	0x03A9D168 CBZ X0, 0x3A9D25C
	0x03A9D16C LDR W8, [X0 + 0x18]
	0x03A9D170 MOV X19, X0
	0x03A9D174 CBZ W8, 0x3A9D258
	0x03A9D178 ADRP X9, 0xFFFFFFFFFD050000
	0x03A9D17C LDR V0, [X9 + 0xB40]
	0x03A9D180 CMP W8, 0x1
	0x03A9D184 STR W31, [X19 + 0x28]
	0x03A9D188 STR D0, [X19 + 0x20]
	0x03A9D18C B.EQ 0x3A9D258
	0x03A9D190 ADRP X9, 0xFFFFFFFFFD051000
	0x03A9D194 LDR V0, [X9 + 0x548]
	0x03A9D198 CMP W8, 0x2
	0x03A9D19C STR W31, [X19 + 0x34]
	0x03A9D1A0 STUR D0, [X19 + 0x2C]
	0x03A9D1A4 B.LS 0x3A9D258
	0x03A9D1A8 ADRP X8, 0xFFFFFFFFFD050000
	0x03A9D1AC LDR V0, [X8 + 0x7D8]
	0x03A9D1B0 ADRP X8, 0x657000
	0x03A9D1B4 LDR X8, [X8 + 0xE58]
	0x03A9D1B8 STR W31, [X19 + 0x40]
	0x03A9D1BC STR D0, [X19 + 0x38]
	0x03A9D1C0 MOVZ W1, 0x3
	0x03A9D1C4 LDR X0, [X8]
	0x03A9D1C8 BL 0x1C16D6C
	0x03A9D1CC CBZ X0, 0x3A9D25C
	0x03A9D1D0 LDR W8, [X0 + 0x18]
	0x03A9D1D4 MOV X20, X0
	0x03A9D1D8 CMP W8, 0x1
	0x03A9D1DC B.LS 0x3A9D258
	0x03A9D1E0 MOVZ W9, 0x1
	0x03A9D1E4 CMP W8, 0x2
	0x03A9D1E8 STR W9, [X20 + 0x24]
	0x03A9D1EC B.EQ 0x3A9D258
	0x03A9D1F0 ADRP X8, 0x65D000
	0x03A9D1F4 LDR X8, [X8 + 0x700]
	0x03A9D1F8 MOVZ W9, 0x2
	0x03A9D1FC STR W9, [X20 + 0x28]
	0x03A9D200 LDR X0, [X8]
	0x03A9D204 BL 0x1C16F10
	0x03A9D208 MOV X1, X31
	0x03A9D20C MOV X21, X0
	0x03A9D210 BL 0x3C17028
	0x03A9D214 CBZ X21, 0x3A9D25C
	0x03A9D218 MOV X0, X21
	0x03A9D21C MOV W1, W31
	0x03A9D220 MOV X2, X31
	0x03A9D224 BL 0x3C170A8
	0x03A9D228 MOV X0, X21
	0x03A9D22C MOV X1, X19
	0x03A9D230 MOV X2, X31
	0x03A9D234 BL 0x3C17F08
	0x03A9D238 MOV X0, X21
	0x03A9D23C MOV X1, X20
	0x03A9D240 MOV X2, X31
	0x03A9D244 BL 0x3C18FF0
	0x03A9D248 LDP X20, X19, [X31 + 0x10]
	0x03A9D24C MOV X0, X21
	0x03A9D250 LDP X30, X21, [X31], #0x20
	0x03A9D254 RET
	0x03A9D258 BL 0x1C16F28
	0x03A9D25C BL 0x1C16F20
	0x03A9D260 SUB X31, X31, 0x50
	0x03A9D264 STP X30, X25, [X31 + 0x10]
	0x03A9D268 STP X24, X23, [X31 + 0x20]
	0x03A9D26C STP X22, X21, [X31 + 0x30]
	0x03A9D270 STP X20, X19, [X31 + 0x40]
	0x03A9D274 ADRP X20, 0x945000
	0x03A9D278 LDRB W8, [X20 + 0x3EA]
	0x03A9D27C MOV X21, X2
	0x03A9D280 MOV X19, X0
	0x03A9D284 TBNZ X8, 0x0, 0x3A9D2D8
	0x03A9D288 ADRP X0, 0x67E000
	0x03A9D28C LDR X0, [X0 + 0x8F8]
	0x03A9D290 BL 0x1C16CF4
	0x03A9D294 ADRP X0, 0x6BA000
	0x03A9D298 LDR X0, [X0 + 0x148]
	0x03A9D29C BL 0x1C16CF4
	0x03A9D2A0 ADRP X0, 0x6B9000
	0x03A9D2A4 LDR X0, [X0 + 0xEC0]
	0x03A9D2A8 BL 0x1C16CF4
	0x03A9D2AC ADRP X0, 0x6BA000
	0x03A9D2B0 LDR X0, [X0 + 0x768]
	0x03A9D2B4 BL 0x1C16CF4
	0x03A9D2B8 ADRP X0, 0x6B9000
	0x03A9D2BC LDR X0, [X0 + 0x170]
	0x03A9D2C0 BL 0x1C16CF4
	0x03A9D2C4 ADRP X0, 0x6B8000
	0x03A9D2C8 LDR X0, [X0 + 0xF98]
	0x03A9D2CC BL 0x1C16CF4
	0x03A9D2D0 MOVZ W8, 0x1
	0x03A9D2D4 STRB W8, [X20 + 0x3EA]
	0x03A9D2D8 STRB W31, [X31 + 0x8]
	0x03A9D2DC LDR X8, [X19 + 0xC0]
	0x03A9D2E0 CBZ X8, 0x3A9D4B0
	0x03A9D2E4 LDR W9, [X8 + 0x18]
	0x03A9D2E8 CBZ W9, 0x3A9D4B4
	0x03A9D2EC ADRP X22, 0x6BA000
	0x03A9D2F0 LDR W8, [X8 + 0x20]
	0x03A9D2F4 LDR X22, [X22 + 0x148]
	0x03A9D2F8 TBZ X8, 0x1F, 0x3A9D304
	0x03A9D2FC MOV X0, X19
	0x03A9D300 BL 0x3A9B3B4
	0x03A9D304 LDR X0, [X22]
	0x03A9D308 ADRP X24, 0x67E000
	0x03A9D30C LDR X20, [X21]
	0x03A9D310 LDR W8, [X0 + 0xE0]
	0x03A9D314 LDR X24, [X24 + 0x8F8]
	0x03A9D318 CBNZ W8, 0x3A9D324
	0x03A9D31C BL 0x1C16DFC
	0x03A9D320 LDR X0, [X22]
	0x03A9D324 LDR X8, [X0 + 0xB8]
	0x03A9D328 ADD X0, X31, 0x8
	0x03A9D32C MOV X1, X20
	0x03A9D330 MOV X3, X31
	0x03A9D334 LDR X2, [X8 + 0x58]
	0x03A9D338 BL 0x39B1DB0
	0x03A9D33C LDR X0, [X24]
	0x03A9D340 LDR W23, [X19 + 0x1C]
	0x03A9D344 LDR W8, [X0 + 0xE0]
	0x03A9D348 CBNZ W8, 0x3A9D350
	0x03A9D34C BL 0x1C16DFC
	0x03A9D350 ADRP X22, 0x6BA000
	0x03A9D354 LDR X22, [X22 + 0x768]
	0x03A9D358 CMP W23, 0x0
	0x03A9D35C CSET W2, NE
	0x03A9D360 LDR X1, [X22]
	0x03A9D364 MOV X0, X20
	0x03A9D368 MOV X3, X31
	0x03A9D36C BL 0x39E9618
	0x03A9D370 MOV X0, X19
	0x03A9D374 MOV X1, X20
	0x03A9D378 MOV X2, X21
	0x03A9D37C BL 0x3A9D534
	0x03A9D380 MOVZ W1, 0x1

ISIL:
	001 Subtract X31, X31, 192
	002 Move [X31+128], X30
	003 Move [X31+136], X25
	004 Move [X31+144], X24
	005 Move [X31+152], X23
	006 Move [X31+160], X22
	007 Move [X31+168], X21
	008 Move [X31+176], X20
	009 Move [X31+184], X19
	010 Move X20, 0x946000
	011 Move W8, [X20+998]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {34}
	017 Move X0, 0x6BB000
	018 Move X0, [X0+328]
	019 Call 0x1C17CF4
	020 Move X0, 0x6B8000
	021 Move X0, [X0+3200]
	022 Call 0x1C17CF4
	023 Move X0, 0x6B6000
	024 Move X0, [X0+3888]
	025 Call 0x1C17CF4
	026 Move X0, 0x6B4000
	027 Move X0, [X0+2480]
	028 Call 0x1C17CF4
	029 Move X0, 0x6B4000
	030 Move X0, [X0+3728]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X20+998], W8
	034 Move X0, X19
	035 Call DeferredLights.get_GBufferSliceCount, X0
	036 Move X8, [X19+56]
	037 Move W21, W0
	038 Compare X8, 0
	039 JumpIfEqual {42}
	040 Move W8, [X8+24]
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Move X20, 0x6B6000
	043 Move X22, 0x6B8000
	044 Move X23, 0x6B4000
	045 Move X20, [X20+3888]
	046 Move X22, [X22+3200]
	047 Move X23, [X23+3728]
	048 Move X0, X19
	049 Call DeferredLights.ReleaseGbufferResources, X0
	050 Move X0, [X20]
	051 Move W1, W21
	052 Call 0x1C17D6C
	053 Move [X19+48], X0
	054 Move X0, [X20]
	055 Move W1, W21
	056 Call 0x1C17D6C
	057 Move [X19+56], X0
	058 Move X0, [X22]
	059 Move W1, W21
	060 Call 0x1C17D6C
	061 Move [X19+104], X0
	062 Move X0, [X23]
	063 Move W1, W21
	064 Call 0x1C17D6C
	065 NotImplemented "Instruction CMP not yet implemented."
	066 Move [X19+64], X0
	067 Move X23, 0x6BB000
	068 Move X24, 0x6B4000
	069 Move X23, [X23+328]
	070 Move X24, [X24+2480]
	071 Move X20, X31
	072 Move W22, W21
	073 Move X0, [X23]
	074 Move X25, [X19+56]
	075 Move W8, [X0+224]
	076 Compare W8, 0
	077 JumpIfNotEqual {80}
	078 Call 0x1C17DFC
	079 Move X0, [X23]
	080 Move X8, [X0+184]
	081 Move X8, [X8]
	082 Compare X8, 0
	083 JumpIfEqual {180}
	084 Move W9, [X8+24]
	085 NotImplemented "Instruction CMP not yet implemented."
	086 Add X8, X8, X20
	087 Move X0, [X8+32]
	088 Add X8, X31, 40
	089 Move X1, X31
	090 Call RenderTargetIdentifier.op_Implicit, X0
	091 NotImplemented "Instruction LDUR not yet implemented."
	092 NotImplemented "Instruction LDUR not yet implemented."
	093 Move X8, [X31+72]
	094 Move X9, [X23]
	095 Move [X31+80], V0
	096 Move [X31+88], V1
	097 Move [X31+112], X8
	098 Move X8, [X9+184]
	099 Move X8, [X8]
	100 Compare X8, 0
	101 JumpIfEqual {180}
	102 Move W9, [X8+24]
	103 NotImplemented "Instruction CMP not yet implemented."
	104 Move X0, [X24]
	105 Add X8, X8, X20
	106 Move X21, [X8+32]
	107 Move W9, [X0+224]
	108 Compare W9, 0
	109 JumpIfNotEqual {111}
	110 Call 0x1C17DFC
	111 Move V0, [X31+80]
	112 Move V1, [X31+96]
	113 Move X8, [X31+112]
	114 Add X0, X31, 0
	115 Move X1, X21
	116 Move X2, X31
	117 Move [X31], V0
	118 Move [X31+8], V1
	119 Move [X31+32], X8
	120 Call RTHandles.Alloc, X0, X1
	121 Compare X25, 0
	122 JumpIfEqual {180}
	123 Move X21, X0
	124 Compare X0, 0
	125 JumpIfEqual {132}
	126 Move X8, [X25]
	127 Move X0, X21
	128 Move X1, [X8+64]
	129 Call 0x1C17E00
	130 Compare X0, 0
	131 JumpIfEqual {182}
	132 Move W8, [X25+24]
	133 NotImplemented "Instruction CMP not yet implemented."
	134 Add X8, X25, X20
	135 Move [X8+32], X21
	136 Move X8, [X19+56]
	137 Compare X8, 0
	138 JumpIfEqual {180}
	139 Move W9, [X8+24]
	140 NotImplemented "Instruction CMP not yet implemented."
	141 Move X25, [X19+48]
	142 Compare X25, 0
	143 JumpIfEqual {180}
	144 Add X8, X8, X20
	145 Move X21, [X8+32]
	146 Compare X21, 0
	147 JumpIfEqual {154}
	148 Move X8, [X25]
	149 Move X0, X21
	150 Move X1, [X8+64]
	151 Call 0x1C17E00
	152 Compare X0, 0
	153 JumpIfEqual {182}
	154 Move W8, [X25+24]
	155 NotImplemented "Instruction CMP not yet implemented."
	156 Add X8, X25, X20
	157 Move [X8+32], X21
	158 Move X21, [X19+104]
	159 Move X0, X19
	160 Move W1, W20
	161 Call DeferredLights.GetGBufferFormat, X0, X1
	162 Compare X21, 0
	163 JumpIfEqual {180}
	164 Move W8, [X21+24]
	165 NotImplemented "Instruction CMP not yet implemented."
	166 Add X8, X21, X20
	167 Add X20, X20, 1
	168 NotImplemented "Instruction CMP not yet implemented."
	169 Move [X8+32], W0
	170 Move X20, [X31+176]
	171 Move X19, [X31+184]
	172 Move X22, [X31+160]
	173 Move X21, [X31+168]
	174 Move X24, [X31+144]
	175 Move X23, [X31+152]
	176 Move X30, [X31+128]
	177 Move X25, [X31+136]
	178 Add X31, X31, 192
	179 Return 
	180 Call 0x1C17F20
	181 Call 0x1C17F28
	182 Call 0x1C17F44
	183 Move X1, X31
	184 Call 0x1C17DEC

Method: System.Void UpdateDeferredInputAttachments()

Disassembly:
	0x03A9D610 BL 0x3A92BE4
	0x03A9D614 LDP V0, V1, [X31 + 0x270]
	0x03A9D618 LDP V2, V3, [X31 + 0x290]
	0x03A9D61C ADD X8, X31, 0x270
	0x03A9D620 MOV X0, X23
	0x03A9D624 MOV W1, W22
	0x03A9D628 MOV X2, X31
	0x03A9D62C STP V0, V1, [X31 + 0x2B0]
	0x03A9D630 STP V2, V3, [X31 + 0x2D0]
	0x03A9D634 BL 0x3A92B70
	0x03A9D638 LDP V0, V1, [X31 + 0x270]
	0x03A9D63C LDP V2, V3, [X31 + 0x290]
	0x03A9D640 ADD X8, X31, 0x270
	0x03A9D644 ADD X0, X31, 0x230
	0x03A9D648 STP V0, V1, [X31 + 0x3B0]
	0x03A9D64C LDP V0, V1, [X31 + 0x2B0]
	0x03A9D650 STP V2, V3, [X31 + 0x3D0]
	0x03A9D654 LDP V2, V3, [X31 + 0x2D0]
	0x03A9D658 MOV W1, W31
	0x03A9D65C MOV X2, X31
	0x03A9D660 STP V0, V1, [X31 + 0x230]
	0x03A9D664 STP V2, V3, [X31 + 0x250]
	0x03A9D668 BL 0x3C1015C
	0x03A9D66C LDP V0, V1, [X31 + 0x270]
	0x03A9D670 LDP V2, V3, [X31 + 0x290]
	0x03A9D674 MOVZ X8, 0x3F800000
	0x03A9D678 ADD X0, X31, 0x330
	0x03A9D67C STP V0, V1, [X31 + 0x370]
	0x03A9D680 STP V2, V3, [X31 + 0x390]
	0x03A9D684 LDP S0, S1, [X20 + 0x24]
	0x03A9D688 FMOV S2, W31
	0x03A9D68C FMOV S3, W31
	0x03A9D690 FMOV S4, W31
	0x03A9D694 SCVTF S0, S0
	0x03A9D698 SCVTF S1, S1
	0x03A9D69C FMUL S0, S0, S8
	0x03A9D6A0 FMUL S5, S1, S8
	0x03A9D6A4 FMOV S1, W31
	0x03A9D6A8 FMOV S6, W31
	0x03A9D6AC FMOV S7, W31
	0x03A9D6B0 MOV X1, X31
	0x03A9D6B4 STR X8, [X31 + 0x18]
	0x03A9D6B8 STP S0, S5, [X31 + 0x10]
	0x03A9D6BC STP X31, X19, [X31]
	0x03A9D6C0 BL 0x3C27870
	0x03A9D6C4 LDRB W8, [X26 + 0xAC0]
	0x03A9D6C8 CBNZ W8, 0x3A9D6DC
	0x03A9D6CC MOV X0, X24
	0x03A9D6D0 BL 0x1C16CF4
	0x03A9D6D4 MOVZ W8, 0x1
	0x03A9D6D8 STRB W8, [X26 + 0xAC0]
	0x03A9D6DC LDR X8, [X24]
	0x03A9D6E0 LDR X8, [X8 + 0xB8]
	0x03A9D6E4 LDP V0, V1, [X8 + 0x60]
	0x03A9D6E8 LDP V3, V2, [X8 + 0x40]
	0x03A9D6EC LDRB W8, [X27 + 0x42A]
	0x03A9D6F0 STP V0, V1, [X31 + 0x310]
	0x03A9D6F4 STP V3, V2, [X31 + 0x2F0]
	0x03A9D6F8 CBNZ W8, 0x3A9D70C
	0x03A9D6FC MOV X0, X25
	0x03A9D700 BL 0x1C16CF4
	0x03A9D704 MOVZ W8, 0x1
	0x03A9D708 STRB W8, [X27 + 0x42A]
	0x03A9D70C LDR X8, [X25]
	0x03A9D710 LDR X8, [X8 + 0xB8]
	0x03A9D714 LDRB W8, [X8]
	0x03A9D718 CBZ W8, 0x3A9D75C
	0x03A9D71C MOVZ X8, 0x3F000000
	0x03A9D720 MOVK X8, 0x3F800000
	0x03A9D724 STP X31, X8, [X31 + 0x10]
	0x03A9D728 ADD X0, X31, 0x2F0
	0x03A9D72C FMOV S0, 1
	0x03A9D730 FMOV S1, W31
	0x03A9D734 FMOV S2, W31
	0x03A9D738 FMOV S3, W31
	0x03A9D73C FMOV S4, W31
	0x03A9D740 FMOV S5, 1
	0x03A9D744 FMOV S6, W31
	0x03A9D748 FMOV S7, W31
	0x03A9D74C MOVZ W8, 0x3F000000
	0x03A9D750 MOV X1, X31
	0x03A9D754 STP X31, X8, [X31]
	0x03A9D758 BL 0x3C27870
	0x03A9D75C LDP V0, V1, [X31 + 0x330]
	0x03A9D760 LDP V2, V3, [X31 + 0x350]
	0x03A9D764 ADD X8, X31, 0x2B0
	0x03A9D768 ADD X0, X31, 0x1F0
	0x03A9D76C STP V0, V1, [X31 + 0x1F0]
	0x03A9D770 LDP V0, V1, [X31 + 0x2F0]
	0x03A9D774 STP V2, V3, [X31 + 0x210]
	0x03A9D778 LDP V2, V3, [X31 + 0x310]
	0x03A9D77C ADD X1, X31, 0x1B0
	0x03A9D780 MOV X2, X31
	0x03A9D784 STP V0, V1, [X31 + 0x1B0]
	0x03A9D788 STP V2, V3, [X31 + 0x1D0]
	0x03A9D78C BL 0x3C27F74
	0x03A9D790 LDP V0, V1, [X31 + 0x2B0]
	0x03A9D794 LDP V2, V3, [X31 + 0x2D0]
	0x03A9D798 ADD X8, X31, 0x2B0
	0x03A9D79C ADD X0, X31, 0x170
	0x03A9D7A0 STP V0, V1, [X31 + 0x170]
	0x03A9D7A4 LDP V0, V1, [X31 + 0x370]
	0x03A9D7A8 STP V2, V3, [X31 + 0x190]
	0x03A9D7AC LDP V2, V3, [X31 + 0x390]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X0+48]
	006 Compare X8, 0
	007 JumpIfEqual {119}
	008 Move W9, [X8+24]
	009 Compare W9, 0
	010 JumpIfEqual {120}
	011 Move X21, [X0+72]
	012 Move X19, X0
	013 Compare X21, 0
	014 JumpIfEqual {119}
	015 Move X20, [X8+32]
	016 Compare X20, 0
	017 JumpIfEqual {24}
	018 Move X8, [X21]
	019 Move X0, X20
	020 Move X1, [X8+64]
	021 Call 0x1C17E00
	022 Compare X0, 0
	023 JumpIfEqual {121}
	024 Move W8, [X21+24]
	025 Compare W8, 0
	026 JumpIfEqual {120}
	027 Move [X21+32], X20
	028 Move X8, [X19+48]
	029 Compare X8, 0
	030 JumpIfEqual {119}
	031 Move W9, [X8+24]
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move X21, [X19+72]
	034 Compare X21, 0
	035 JumpIfEqual {119}
	036 Move X20, [X8+40]
	037 Compare X20, 0
	038 JumpIfEqual {45}
	039 Move X8, [X21]
	040 Move X0, X20
	041 Move X1, [X8+64]
	042 Call 0x1C17E00
	043 Compare X0, 0
	044 JumpIfEqual {121}
	045 Move W8, [X21+24]
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Move [X21+40], X20
	048 Move X8, [X19+48]
	049 Compare X8, 0
	050 JumpIfEqual {119}
	051 Move W9, [X8+24]
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Move X21, [X19+72]
	054 Compare X21, 0
	055 JumpIfEqual {119}
	056 Move X20, [X8+48]
	057 Compare X20, 0
	058 JumpIfEqual {65}
	059 Move X8, [X21]
	060 Move X0, X20
	061 Move X1, [X8+64]
	062 Call 0x1C17E00
	063 Compare X0, 0
	064 JumpIfEqual {121}
	065 Move W8, [X21+24]
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Move [X21+48], X20
	068 Move X8, [X19+48]
	069 Compare X8, 0
	070 JumpIfEqual {119}
	071 Move W9, [X8+24]
	072 NotImplemented "Instruction CMP not yet implemented."
	073 Move X21, [X19+72]
	074 Compare X21, 0
	075 JumpIfEqual {119}
	076 Move X20, [X8+64]
	077 Compare X20, 0
	078 JumpIfEqual {85}
	079 Move X8, [X21]
	080 Move X0, X20
	081 Move X1, [X8+64]
	082 Call 0x1C17E00
	083 Compare X0, 0
	084 JumpIfEqual {121}
	085 Move W8, [X21+24]
	086 NotImplemented "Instruction CMP not yet implemented."
	087 Move [X21+56], X20
	088 Move W8, [X19+28]
	089 Compare W8, 0
	090 JumpIfEqual {114}
	091 Move X20, [X19+72]
	092 Move X21, [X19+48]
	093 Move X0, X19
	094 Call DeferredLights.get_GBufferShadowMask, X0
	095 Compare X21, 0
	096 JumpIfEqual {119}
	097 Move W8, [X21+24]
	098 NotImplemented "Instruction CMP not yet implemented."
	099 Compare X20, 0
	100 JumpIfEqual {119}
	101 Add X8, X21, W0
	102 Move X19, [X8+32]
	103 Compare X19, 0
	104 JumpIfEqual {111}
	105 Move X8, [X20]
	106 Move X0, X19
	107 Move X1, [X8+64]
	108 Call 0x1C17E00
	109 Compare X0, 0
	110 JumpIfEqual {121}
	111 Move W8, [X20+24]
	112 NotImplemented "Instruction CMP not yet implemented."
	113 Move [X20+64], X19
	114 Move X20, [X31+16]
	115 Move X19, [X31+24]
	116 Move X30, [X31+32]
	117 Move X21, [X31+40]
	118 Return 
	119 Call 0x1C17F20
	120 Call 0x1C17F28
	121 Call 0x1C17F44
	122 Move X1, X31
	123 Call 0x1C17DEC

Method: System.Boolean IsRuntimeSupportedThisFrame()

Disassembly:
	0x03A9D7B0 ADD X1, X31, 0x130
	0x03A9D7B4 MOV X2, X31
	0x03A9D7B8 STP V0, V1, [X31 + 0x130]
	0x03A9D7BC STP V2, V3, [X31 + 0x150]
	0x03A9D7C0 BL 0x3C27F74
	0x03A9D7C4 LDP V0, V1, [X31 + 0x2B0]
	0x03A9D7C8 LDP V2, V3, [X31 + 0x2D0]
	0x03A9D7CC ADD X8, X31, 0x2B0
	0x03A9D7D0 ADD X0, X31, 0xF0
	0x03A9D7D4 STP V0, V1, [X31 + 0xF0]
	0x03A9D7D8 LDP V0, V1, [X31 + 0x3B0]
	0x03A9D7DC STP V2, V3, [X31 + 0x110]
	0x03A9D7E0 LDP V2, V3, [X31 + 0x3D0]
	0x03A9D7E4 ADD X1, X31, 0xB0
	0x03A9D7E8 MOV X2, X31
	0x03A9D7EC STP V0, V1, [X31 + 0xB0]
	0x03A9D7F0 STP V2, V3, [X31 + 0xD0]
	0x03A9D7F4 BL 0x3C27F74
	0x03A9D7F8 LDP V0, V1, [X31 + 0x2B0]
	0x03A9D7FC LDP V2, V3, [X31 + 0x2D0]
	0x03A9D800 ADD X8, X31, 0x270
	0x03A9D804 ADD X0, X31, 0x70
	0x03A9D808 MOV X1, X31
	0x03A9D80C STP V0, V1, [X31 + 0x70]
	0x03A9D810 STP V2, V3, [X31 + 0x90]
	0x03A9D814 BL 0x3C2711C
	0x03A9D818 LDP V0, V1, [X31 + 0x270]
	0x03A9D81C LDP V2, V3, [X31 + 0x290]
	0x03A9D820 STP V0, V1, [X31 + 0x2B0]
	0x03A9D824 STP V2, V3, [X31 + 0x2D0]
	0x03A9D828 CBZ X21, 0x3A9D8CC
	0x03A9D82C LDP V0, V1, [X31 + 0x2B0]
	0x03A9D830 LDP V2, V3, [X31 + 0x2D0]
	0x03A9D834 STP V0, V1, [X31 + 0x30]
	0x03A9D838 STP V2, V3, [X31 + 0x50]
	0x03A9D83C LDR W8, [X21 + 0x18]
	0x03A9D840 CMP X22, X8
	0x03A9D844 B.CS 0x3A9D8C8
	0x03A9D848 LDP V0, V1, [X31 + 0x50]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Call DeferredLights.get_GBufferSliceCount, X0
	005 Move W19, W0
	006 Move X0, X31
	007 Call SystemInfo.get_supportedRenderTargetCount
	008 NotImplemented "Instruction CMP not yet implemented."
	009 Move X19, 0x946000
	010 Move W8, [X19+1066]
	011 Compare W8, 0
	012 JumpIfNotEqual {18}
	013 Move X0, 0x6BB000
	014 Move X0, [X0+1856]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X19+1066], W8
	018 Move X19, 0x6BB000
	019 Move X19, [X19+1856]
	020 Move X8, [X19]
	021 Move X8, [X8+184]
	022 Move W9, [X8]
	023 Compare W9, 0
	024 JumpIfEqual {30}
	025 Move W0, W31
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Return X0
	030 Move X20, 0x946000
	031 Move W9, [X20+1067]
	032 Compare W9, 0
	033 JumpIfNotEqual {40}
	034 Move X0, X19
	035 Call 0x1C17CF4
	036 Move X8, [X19]
	037 Move W9, 1
	038 Move [X20+1067], W9
	039 Move X8, [X8+184]
	040 Move W8, [X8+1]
	041 NotImplemented "Instruction CMP not yet implemented."
	042 NotImplemented "Instruction CSET not yet implemented."

Method: System.Void Setup(ref UnityEngine.Rendering.Universal.RenderingData renderingData, UnityEngine.Rendering.Universal.Internal.AdditionalLightsShadowCasterPass additionalLightsShadowCasterPass, System.Boolean hasDepthPrepass, System.Boolean hasNormalPrepass, System.Boolean hasRenderingLayerPrepass, UnityEngine.Rendering.RTHandle depthCopyTexture, UnityEngine.Rendering.RTHandle depthAttachment, UnityEngine.Rendering.RTHandle colorAttachment)

Disassembly:
	0x03A9D84C LDP V2, V3, [X31 + 0x30]
	0x03A9D850 ADD X22, X22, 0x1
	0x03A9D854 ADD X8, X21, X29
	0x03A9D858 CMP X28, X22
	0x03A9D85C ADD X29, X29, 0x40
	0x03A9D860 STP V0, V1, [X8 + 0x20]
	0x03A9D864 STP V2, V3, [X8]
	0x03A9D868 B.NE 0x3A9D600
	0x03A9D86C ADRP X19, 0x6BA000
	0x03A9D870 LDR X19, [X19 + 0x748]
	0x03A9D874 LDR X0, [X19]
	0x03A9D878 LDR W8, [X0 + 0xE0]
	0x03A9D87C CBNZ W8, 0x3A9D884
	0x03A9D880 BL 0x1C16DFC
	0x03A9D884 LDR X0, [X31 + 0x3F8]
	0x03A9D888 CBZ X0, 0x3A9D8CC
	0x03A9D88C LDR X8, [X19]
	0x03A9D890 MOV X2, X21
	0x03A9D894 MOV X3, X31
	0x03A9D898 LDR X8, [X8 + 0xB8]
	0x03A9D89C LDR W1, [X8 + 0x60]
	0x03A9D8A0 BL 0x3C4D47C
	0x03A9D8A4 ADD X31, X31, 0x3F0
	0x03A9D8A8 LDP X20, X19, [X31 + 0x60]
	0x03A9D8AC LDP X22, X21, [X31 + 0x50]
	0x03A9D8B0 LDP X24, X23, [X31 + 0x40]
	0x03A9D8B4 LDP X26, X25, [X31 + 0x30]
	0x03A9D8B8 LDP X28, X27, [X31 + 0x20]
	0x03A9D8BC LDP X29, X30, [X31 + 0x10]
	0x03A9D8C0 LDR V8, [X31], #0x70
	0x03A9D8C4 RET
	0x03A9D8C8 BL 0x1C16F28
	0x03A9D8CC BL 0x1C16F20
	0x03A9D8D0 STR X30, [X31 - 0x30]!
	0x03A9D8D4 STP X22, X21, [X31 + 0x10]
	0x03A9D8D8 STP X20, X19, [X31 + 0x20]
	0x03A9D8DC ADRP X22, 0x945000
	0x03A9D8E0 ADRP X21, 0x6BA000
	0x03A9D8E4 LDRB W8, [X22 + 0x3EE]
	0x03A9D8E8 LDR X21, [X21 + 0x148]
	0x03A9D8EC MOV W19, W1
	0x03A9D8F0 MOV X20, X0
	0x03A9D8F4 TBNZ X8, 0x0, 0x3A9D90C
	0x03A9D8F8 ADRP X0, 0x6BA000
	0x03A9D8FC LDR X0, [X0 + 0x148]
	0x03A9D900 BL 0x1C16CF4
	0x03A9D904 MOVZ W8, 0x1
	0x03A9D908 STRB W8, [X22 + 0x3EE]
	0x03A9D90C LDR X0, [X21]
	0x03A9D910 LDR X8, [X20 + 0x88]
	0x03A9D914 LDR W9, [X0 + 0xE0]
	0x03A9D918 LDRH W19, [X8, W19, SXTW]
	0x03A9D91C CBNZ W9, 0x3A9D928
	0x03A9D920 BL 0x1C16DFC
	0x03A9D924 LDR X0, [X21]
	0x03A9D928 LDR X8, [X0 + 0xB8]
	0x03A9D92C LDP X22, X21, [X31 + 0x10]
	0x03A9D930 LDRH W8, [X8 + 0x10]
	0x03A9D934 CMP W19, W8
	0x03A9D938 LDP X20, X19, [X31 + 0x20]
	0x03A9D93C CSET W0, NE
	0x03A9D940 LDR X30, [X31], #0x30
	0x03A9D944 RET
	0x03A9D948 SUB X31, X31, 0xB0
	0x03A9D94C STR X30, [X31 + 0x80]
	0x03A9D950 STP X22, X21, [X31 + 0x90]
	0x03A9D954 STP X20, X19, [X31 + 0xA0]
	0x03A9D958 ADRP X22, 0x945000
	0x03A9D95C ADRP X21, 0x656000
	0x03A9D960 LDRB W8, [X22 + 0x3F4]
	0x03A9D964 LDR X21, [X21 + 0x598]
	0x03A9D968 MOV X19, X1
	0x03A9D96C MOV X20, X0
	0x03A9D970 TBNZ X8, 0x0, 0x3A9D994
	0x03A9D974 ADRP X0, 0x6BA000
	0x03A9D978 LDR X0, [X0 + 0x148]
	0x03A9D97C BL 0x1C16CF4
	0x03A9D980 ADRP X0, 0x656000
	0x03A9D984 LDR X0, [X0 + 0x598]
	0x03A9D988 BL 0x1C16CF4
	0x03A9D98C MOVZ W8, 0x1
	0x03A9D990 STRB W8, [X22 + 0x3F4]
	0x03A9D994 LDR X0, [X21]
	0x03A9D998 LDR X21, [X20 + 0xB0]
	0x03A9D99C LDR W8, [X0 + 0xE0]
	0x03A9D9A0 CBNZ W8, 0x3A9D9A8
	0x03A9D9A4 BL 0x1C16DFC
	0x03A9D9A8 MOV X0, X21
	0x03A9D9AC MOV X1, X31
	0x03A9D9B0 MOV X2, X31
	0x03A9D9B4 BL 0x3C3883C
	0x03A9D9B8 TBZ X0, 0x0, 0x3A9D9E4
	0x03A9D9BC ADRP X8, 0x6BA000
	0x03A9D9C0 LDR X8, [X8 + 0x148]
	0x03A9D9C4 LDR X0, [X8]
	0x03A9D9C8 LDR W8, [X0 + 0xE0]
	0x03A9D9CC CBNZ W8, 0x3A9D9D4
	0x03A9D9D0 BL 0x1C16DFC
	0x03A9D9D4 BL 0x3A9D114
	0x03A9D9D8 MOV X21, X0
	0x03A9D9DC STR X0, [X20 + 0xB0]
	0x03A9D9E0 B 0x3A9D9E8
	0x03A9D9E4 LDR X21, [X20 + 0xB0]
	0x03A9D9E8 ADRP X22, 0x93B000
	0x03A9D9EC LDRB W8, [X22 + 0xAC0]
	0x03A9D9F0 CBNZ W8, 0x3A9DA08
	0x03A9D9F4 ADRP X0, 0x65A000
	0x03A9D9F8 LDR X0, [X0 + 0x270]
	0x03A9D9FC BL 0x1C16CF4
	0x03A9DA00 MOVZ W8, 0x1
	0x03A9DA04 STRB W8, [X22 + 0xAC0]
	0x03A9DA08 ADRP X8, 0x65A000
	0x03A9DA0C LDR X8, [X8 + 0x270]
	0x03A9DA10 LDR X8, [X8]
	0x03A9DA14 LDR X8, [X8 + 0xB8]
	0x03A9DA18 LDP V1, V0, [X8 + 0x60]
	0x03A9DA1C LDP V2, V3, [X8 + 0x40]
	0x03A9DA20 STP V1, V0, [X31 + 0x60]
	0x03A9DA24 STP V2, V3, [X31 + 0x40]
	0x03A9DA28 LDR X8, [X20 + 0xC0]
	0x03A9DA2C CBZ X8, 0x3A9DA84
	0x03A9DA30 LDR W9, [X8 + 0x18]
	0x03A9DA34 CMP W9, 0x7
	0x03A9DA38 B.LS 0x3A9DA88
	0x03A9DA3C CBZ X19, 0x3A9DA84
	0x03A9DA40 LDR X3, [X20 + 0xB8]
	0x03A9DA44 LDR W5, [X8 + 0x3C]
	0x03A9DA48 LDP V0, V1, [X31 + 0x40]
	0x03A9DA4C LDP V2, V3, [X31 + 0x60]

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X26, 0x946000
	011 Move W8, [X26+999]
	012 Move X20, X7
	013 Move X21, X6
	014 Move W22, W5
	015 Move W23, W4
	016 Move W24, W3
	017 Move X25, X2
	018 Move X19, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {31}
	023 Move X0, 0x659000
	024 Move X0, [X0+2488]
	025 Call 0x1C17CF4
	026 Move X0, 0x6B6000
	027 Move X0, [X0+3888]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X26+999], W8
	031 And W9, W23, 1
	032 Move X23, [X19+48]
	033 And W8, W24, 1
	034 Move [X19+22], W8
	035 And W8, W22, 1
	036 Move [X19+152], X25
	037 Move [X19+23], W9
	038 Move [X19+24], W8
	039 Move [X19+96], X21
	040 Compare X23, 0
	041 JumpIfEqual {139}
	042 Move X21, [X31+80]
	043 Compare X21, 0
	044 JumpIfEqual {51}
	045 Move X8, [X23]
	046 Move X0, X21
	047 Move X1, [X8+64]
	048 Call 0x1C17E00
	049 Compare X0, 0
	050 JumpIfEqual {141}
	051 Move W8, [X23+24]
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Move [X23+56], X21
	054 Move W9, [X19+28]
	055 Move X8, [X19+72]
	056 Move [X19+88], X20
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Move W9, 4
	059 NotImplemented "Instruction CINC not yet implemented."
	060 Compare X8, 0
	061 JumpIfEqual {64}
	062 Move W8, [X8+24]
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Move W8, [X19+21]
	065 Compare W8, 0
	066 JumpIfEqual {128}
	067 Move X8, [X19+48]
	068 Compare X8, 0
	069 JumpIfEqual {139}
	070 Move W8, [X8+24]
	071 NotImplemented "Instruction CMP not yet implemented."
	072 Move X8, 0x6B6000
	073 Move X8, [X8+3888]
	074 Move W1, W21
	075 Move X0, [X8]
	076 Call 0x1C17D6C
	077 Move [X19+72], X0
	078 Move X8, 0x659000
	079 Move X8, [X8+2488]
	080 Move W1, W21
	081 Move X0, [X8]
	082 Call 0x1C17D6C
	083 Move X22, X31
	084 Move W8, W31
	085 Move W21, W21
	086 Move W23, 4
	087 Move [X19+80], X0
	088 Move X9, [X19+48]
	089 NotImplemented "Instruction CMP not yet implemented."
	090 NotImplemented "Instruction CSEL not yet implemented."
	091 Compare X9, 0
	092 JumpIfEqual {139}
	093 Move W8, [X9+24]
	094 NotImplemented "Instruction CMP not yet implemented."
	095 Move X25, [X19+72]
	096 Compare X25, 0
	097 JumpIfEqual {139}
	098 Add X8, X9, W24
	099 Move X20, [X8+32]
	100 Compare X20, 0
	101 JumpIfEqual {108}
	102 Move X8, [X25]
	103 Move X0, X20
	104 Move X1, [X8+64]
	105 Call 0x1C17E00
	106 Compare X0, 0
	107 JumpIfEqual {141}
	108 Move W8, [X25+24]
	109 NotImplemented "Instruction CMP not yet implemented."
	110 Add X8, X25, X22
	111 Move [X8+32], X20
	112 Move X8, [X19+80]
	113 Compare X8, 0
	114 JumpIfEqual {139}
	115 Move W9, [X8+24]
	116 NotImplemented "Instruction CMP not yet implemented."
	117 Move W9, [X19+21]
	118 Add X8, X8, X22
	119 Add X22, X22, 1
	120 NotImplemented "Instruction CMP not yet implemented."
	121 NotImplemented "Instruction CSINV not yet implemented."
	122 NotImplemented "Instruction CMP not yet implemented."
	123 NotImplemented "Instruction CSET not yet implemented."
	124 NotImplemented "Instruction CMP not yet implemented."
	125 Move [X8+32], W9
	126 Add W8, W24, 1
	127 Move X20, [X19+88]
	128 Move [X19+112], X20
	129 Move X20, [X31+64]
	130 Move X19, [X31+72]
	131 Move X22, [X31+48]
	132 Move X21, [X31+56]
	133 Move X24, [X31+32]
	134 Move X23, [X31+40]
	135 Move X26, [X31+16]
	136 Move X25, [X31+24]
	137 Move X30, [X31+80]
	138 Return 
	139 Call 0x1C17F20
	140 Call 0x1C17F28
	141 Call 0x1C17F44
	142 Move X1, X31
	143 Call 0x1C17DEC

Method: System.Void Setup(UnityEngine.Rendering.Universal.Internal.AdditionalLightsShadowCasterPass additionalLightsShadowCasterPass)

Disassembly:
	0x03A9DA50 ADD X2, X31, 0x0
	0x03A9DA54 MOV X0, X19

ISIL:
	001 Move [X0+152], X1
	002 Return 

Method: System.Void OnCameraCleanup(UnityEngine.Rendering.CommandBuffer cmd)

Disassembly:
	0x03A9DA58 MOV X1, X21
	0x03A9DA5C MOV W4, W31
	0x03A9DA60 MOV X6, X31
	0x03A9DA64 STP V0, V1, [X31]
	0x03A9DA68 STP V2, V3, [X31 + 0x20]
	0x03A9DA6C BL 0x3C4F070
	0x03A9DA70 LDP X20, X19, [X31 + 0xA0]
	0x03A9DA74 LDP X22, X21, [X31 + 0x90]
	0x03A9DA78 LDR X30, [X31 + 0x80]
	0x03A9DA7C ADD X31, X31, 0xB0
	0x03A9DA80 RET
	0x03A9DA84 BL 0x1C16F20
	0x03A9DA88 BL 0x1C16F28
	0x03A9DA8C SUB X31, X31, 0x40
	0x03A9DA90 STP X30, X23, [X31 + 0x10]
	0x03A9DA94 STP X22, X21, [X31 + 0x20]
	0x03A9DA98 STP X20, X19, [X31 + 0x30]
	0x03A9DA9C ADRP X22, 0x945000
	0x03A9DAA0 LDRB W8, [X22 + 0x3EF]
	0x03A9DAA4 MOV X20, X3
	0x03A9DAA8 MOV X21, X2
	0x03A9DAAC MOV X19, X0
	0x03A9DAB0 TBNZ X8, 0x0, 0x3A9DAEC
	0x03A9DAB4 ADRP X0, 0x656000
	0x03A9DAB8 LDR X0, [X0 + 0xA28]
	0x03A9DABC BL 0x1C16CF4
	0x03A9DAC0 ADRP X0, 0x656000
	0x03A9DAC4 LDR X0, [X0 + 0x9D0]
	0x03A9DAC8 BL 0x1C16CF4
	0x03A9DACC ADRP X0, 0x656000
	0x03A9DAD0 LDR X0, [X0 + 0x598]
	0x03A9DAD4 BL 0x1C16CF4
	0x03A9DAD8 ADRP X0, 0x6BA000
	0x03A9DADC LDR X0, [X0 + 0x770]
	0x03A9DAE0 BL 0x1C16CF4
	0x03A9DAE4 MOVZ W8, 0x1
	0x03A9DAE8 STRB W8, [X22 + 0x3EF]
	0x03A9DAEC STRB W31, [X31 + 0x8]
	0x03A9DAF0 LDR W8, [X19 + 0x80]
	0x03A9DAF4 CBZ W8, 0x3A9DC8C
	0x03A9DAF8 ADRP X8, 0x656000
	0x03A9DAFC LDR X8, [X8 + 0x598]
	0x03A9DB00 LDR X22, [X19 + 0xB8]
	0x03A9DB04 LDR X0, [X8]
	0x03A9DB08 LDR W8, [X0 + 0xE0]
	0x03A9DB0C CBNZ W8, 0x3A9DB14
	0x03A9DB10 BL 0x1C16DFC
	0x03A9DB14 MOV X0, X22
	0x03A9DB18 MOV X1, X31
	0x03A9DB1C MOV X2, X31
	0x03A9DB20 BL 0x3C3883C
	0x03A9DB24 TBZ X0, 0x0, 0x3A9DBE8
	0x03A9DB28 ADRP X8, 0x656000
	0x03A9DB2C LDR X8, [X8 + 0x9D0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x946000
	007 Move X21, 0x67F000
	008 Move W8, [X22+1000]
	009 Move X21, [X21+2296]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {30}
	016 Move X0, 0x67F000
	017 Move X0, [X0+2296]
	018 Call 0x1C17CF4
	019 Move X0, 0x6BB000
	020 Move X0, [X0+1880]
	021 Call 0x1C17CF4
	022 Move X0, 0x6BB000
	023 Move X0, [X0+1888]
	024 Call 0x1C17CF4
	025 Move X0, 0x6BB000
	026 Move X0, [X0+1872]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X22+1000], W8
	030 Move X0, [X21]
	031 Move X21, 0x6BB000
	032 Move W8, [X0+224]
	033 Move X21, [X21+1872]
	034 Compare W8, 0
	035 JumpIfNotEqual {37}
	036 Call 0x1C17DFC
	037 Move X1, [X21]
	038 Move X21, 0x6BB000
	039 Move X21, [X21+1880]
	040 Move X0, X20
	041 Move W2, W31
	042 Move X3, X31
	043 Call CoreUtils.SetKeyword, X0, X1, X2
	044 Move X0, X19
	045 Add X0, X0, 120
	046 Move X8, [X0]
	047 Compare X8, 0
	048 JumpIfEqual {51}
	049 Move X1, [X21]
	050 Call NativeArray`1<UInt16>.Dispose, X0
	051 Add X19, X19, 136
	052 Move X8, [X19]
	053 Compare X8, 0
	054 JumpIfEqual {64}
	055 Move X1, [X21]
	056 Move X0, X19
	057 Move X20, [X31+32]
	058 Move X19, [X31+40]
	059 Move X22, [X31+16]
	060 Move X21, [X31+24]
	061 Move X30, [X31+48]
	062 Call NativeArray`1<UInt16>.Dispose, X0
	063 Return 
	064 Move X20, [X31+32]
	065 Move X19, [X31+40]
	066 Move X22, [X31+16]
	067 Move X21, [X31+24]
	068 Move X30, [X31+48]
	069 Return 

Method: UnityEngine.Rendering.StencilState OverwriteStencil(UnityEngine.Rendering.StencilState s, System.Int32 stencilWriteMask)

Disassembly:
	0x03A9DB30 MOVZ W1, 0x2
	0x03A9DB34 LDR X0, [X8]
	0x03A9DB38 BL 0x1C16D6C
	0x03A9DB3C CBZ X0, 0x3A9DCA0
	0x03A9DB40 LDR X21, [X19 + 0xB8]
	0x03A9DB44 MOV X20, X0
	0x03A9DB48 CBZ X21, 0x3A9DB60
	0x03A9DB4C LDR X8, [X20]
	0x03A9DB50 MOV X0, X21
	0x03A9DB54 LDR X1, [X8 + 0x40]
	0x03A9DB58 BL 0x1C16E00
	0x03A9DB5C CBZ X0, 0x3A9DCA8
	0x03A9DB60 LDR W8, [X20 + 0x18]
	0x03A9DB64 CBZ W8, 0x3A9DCA4
	0x03A9DB68 MOV X0, X19
	0x03A9DB6C MOV X1, X31
	0x03A9DB70 STR X21, [X20 + 0x20]
	0x03A9DB74 BL 0x33BE520
	0x03A9DB78 CBZ X0, 0x3A9DCA0
	0x03A9DB7C LDR X8, [X0]
	0x03A9DB80 LDP X9, X1, [X8 + 0x1A8]
	0x03A9DB84 BLR X9
	0x03A9DB88 MOV X19, X0
	0x03A9DB8C CBZ X0, 0x3A9DBA4
	0x03A9DB90 LDR X8, [X20]
	0x03A9DB94 MOV X0, X19
	0x03A9DB98 LDR X1, [X8 + 0x40]
	0x03A9DB9C BL 0x1C16E00
	0x03A9DBA0 CBZ X0, 0x3A9DCA8
	0x03A9DBA4 LDR W8, [X20 + 0x18]
	0x03A9DBA8 CMP W8, 0x1
	0x03A9DBAC B.LS 0x3A9DCA4
	0x03A9DBB0 STR X19, [X20 + 0x28]
	0x03A9DBB4 ADRP X8, 0x656000
	0x03A9DBB8 LDR X8, [X8 + 0xA28]
	0x03A9DBBC LDR X0, [X8]
	0x03A9DBC0 LDR W8, [X0 + 0xE0]
	0x03A9DBC4 CBNZ W8, 0x3A9DBCC
	0x03A9DBC8 BL 0x1C16DFC
	0x03A9DBCC ADRP X8, 0x6BA000
	0x03A9DBD0 LDR X8, [X8 + 0x770]
	0x03A9DBD4 MOV X1, X20
	0x03A9DBD8 MOV X2, X31
	0x03A9DBDC LDR X0, [X8]
	0x03A9DBE0 BL 0x3C066BC
	0x03A9DBE4 B 0x3A9DC8C
	0x03A9DBE8 LDR X2, [X19 + 0xD0]
	0x03A9DBEC ADD X0, X31, 0x8
	0x03A9DBF0 MOV X1, X21
	0x03A9DBF4 MOV X3, X31
	0x03A9DBF8 BL 0x39B1DB0
	0x03A9DBFC LDR X22, [X20 + 0x238]
	0x03A9DC00 LDR X23, [X20 + 0x240]
	0x03A9DC04 MOVZ W1, 0x1
	0x03A9DC08 MOV X0, X19
	0x03A9DC0C BL 0x3A9D8D0
	0x03A9DC10 TBZ X0, 0x0, 0x3A9DC30
	0x03A9DC14 LDR W5, [X20 + 0x228]
	0x03A9DC18 MOV X0, X19
	0x03A9DC1C MOV X1, X21
	0x03A9DC20 MOV X2, X20
	0x03A9DC24 MOV X3, X22
	0x03A9DC28 MOV X4, X23
	0x03A9DC2C BL 0x3A9E0C0
	0x03A9DC30 MOVZ W1, 0x2
	0x03A9DC34 MOV X0, X19
	0x03A9DC38 BL 0x3A9D8D0
	0x03A9DC3C TBZ X0, 0x0, 0x3A9DC58
	0x03A9DC40 MOV X0, X19
	0x03A9DC44 MOV X1, X21
	0x03A9DC48 MOV X2, X20
	0x03A9DC4C MOV X3, X22
	0x03A9DC50 MOV X4, X23
	0x03A9DC54 BL 0x3A9E6F8
	0x03A9DC58 MOV X0, X19
	0x03A9DC5C MOV W1, W31
	0x03A9DC60 BL 0x3A9D8D0
	0x03A9DC64 TBZ X0, 0x0, 0x3A9DC80
	0x03A9DC68 MOV X0, X19
	0x03A9DC6C MOV X1, X21
	0x03A9DC70 MOV X2, X20
	0x03A9DC74 MOV X3, X22
	0x03A9DC78 MOV X4, X23
	0x03A9DC7C BL 0x3A9EDD4
	0x03A9DC80 ADD X0, X31, 0x8
	0x03A9DC84 MOV X1, X31
	0x03A9DC88 BL 0x39B1DB4
	0x03A9DC8C LDP X20, X19, [X31 + 0x30]
	0x03A9DC90 LDP X22, X21, [X31 + 0x20]
	0x03A9DC94 LDP X30, X23, [X31 + 0x10]
	0x03A9DC98 ADD X31, X31, 0x40
	0x03A9DC9C RET
	0x03A9DCA0 BL 0x1C16F20
	0x03A9DCA4 BL 0x1C16F28
	0x03A9DCA8 BL 0x1C16F44
	0x03A9DCAC MOV X1, X31
	0x03A9DCB0 BL 0x1C16DEC
	0x03A9DCB4 B 0x3A9DCC8
	0x03A9DCB8 B 0x3A9DCC8
	0x03A9DCBC B 0x3A9DCC8
	0x03A9DCC0 B 0x3A9DCC8
	0x03A9DCC4 B 0x3A9DCC8
	0x03A9DCC8 MOV X19, X0
	0x03A9DCCC CMP W1, 0x1
	0x03A9DCD0 B.NE 0x3A9DCFC
	0x03A9DCD4 MOV X0, X19
	0x03A9DCD8 BL 0x3EB1AD0
	0x03A9DCDC LDR X20, [X0]
	0x03A9DCE0 BL 0x3EB1AE0

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+80], X30
	003 Move [X31+96], X28
	004 Move [X31+104], X27
	005 Move [X31+112], X26
	006 Move [X31+120], X25
	007 Move [X31+128], X24
	008 Move [X31+136], X23
	009 Move [X31+144], X22
	010 Move [X31+152], X21
	011 Move [X31+160], X20
	012 Move [X31+168], X19
	013 Move [X31+48], X0
	014 Move [X31+56], W1
	015 Add X0, X31, 48
	016 Move X1, X31
	017 Move W19, W2
	018 Call StencilState.get_enabled, X0
	019 Move TEMP, X0
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfNotEqual {32}
	023 Add X0, X31, 48
	024 Move X1, X31
	025 Call StencilState.get_compareFunctionFront, X0
	026 Compare W0, 0
	027 JumpIfEqual {49}
	028 Add X0, X31, 48
	029 Move X1, X31
	030 Call StencilState.get_compareFunctionFront, X0
	031 Move W20, W0
	032 Move W8, 2
	033 Move W9, 8
	034 Move [X31+72], W31
	035 Move [X31+64], X31
	036 Move [X31+32], X31
	037 Move [X31+24], W31
	038 Move [X31+16], W31
	039 Add X0, X31, 64
	040 Move [X31+8], W8
	041 Move W1, 1
	042 Move W4, 8
	043 Move W5, 2
	044 Move [X31], W9
	045 Move W2, W31
	046 Move W3, W19
	047 Move W6, W31
	048 Move W7, W31
	049 Move W20, 8
	050 Add X0, X31, 48
	051 Move X1, X31
	052 Call StencilState.get_compareFunctionBack, X0
	053 Compare W0, 0
	054 JumpIfEqual {59}
	055 Add X0, X31, 48
	056 Move X1, X31
	057 Call StencilState.get_compareFunctionBack, X0
	058 Move W21, W0
	059 Move W21, 8
	060 Add X0, X31, 48
	061 Move X1, X31
	062 Call StencilState.get_passOperationFront, X0
	063 Move W22, W0
	064 Add X0, X31, 48
	065 Move X1, X31
	066 Call StencilState.get_failOperationFront, X0
	067 Move W23, W0
	068 Add X0, X31, 48
	069 Move X1, X31
	070 Call StencilState.get_zFailOperationFront, X0
	071 Move W24, W0
	072 Add X0, X31, 48
	073 Move X1, X31
	074 Call StencilState.get_passOperationBack, X0
	075 Move W25, W0
	076 Add X0, X31, 48
	077 Move X1, X31
	078 Call StencilState.get_failOperationBack, X0
	079 Move W26, W0
	080 Add X0, X31, 48
	081 Move X1, X31
	082 Call StencilState.get_zFailOperationBack, X0
	083 Move W27, W0
	084 Add X0, X31, 48
	085 Move X1, X31
	086 Call StencilState.get_readMask, X0
	087 Move W28, W0
	088 Add X0, X31, 48
	089 Move X1, X31
	090 Call StencilState.get_writeMask, X0
	091 And W2, W28, 15
	092 Or W3, W0, W19
	093 Add X0, X31, 64
	094 Move W1, 1
	095 Move W4, W20
	096 Move W5, W22
	097 Move W6, W23
	098 Move W7, W24
	099 Move [X31+64], X31
	100 Move [X31+72], W31
	101 Move [X31+32], X31
	102 Move [X31+24], W27
	103 Move [X31+16], W26
	104 Move [X31+8], W25
	105 Move [X31], W21
	106 Call StencilState..ctor, X0, X1, X2, X3, X4, X5, X6, X7, X8, X9, X10, X11
	107 Move X0, [X31+64]
	108 Move W1, [X31+72]
	109 Move X20, [X31+160]
	110 Move X19, [X31+168]
	111 Move X22, [X31+144]
	112 Move X21, [X31+152]
	113 Move X24, [X31+128]
	114 Move X23, [X31+136]
	115 Move X26, [X31+112]
	116 Move X25, [X31+120]
	117 Move X28, [X31+96]
	118 Move X27, [X31+104]
	119 Move X30, [X31+80]
	120 Add X31, X31, 176
	121 Return X0

Method: UnityEngine.Rendering.RenderStateBlock OverwriteStencil(UnityEngine.Rendering.RenderStateBlock block, System.Int32 stencilWriteMask, System.Int32 stencilRef)

Disassembly:
	0x03A9DCE4 ADD X0, X31, 0x8
	0x03A9DCE8 MOV X1, X31
	0x03A9DCEC BL 0x39B1DB4
	0x03A9DCF0 CBZ X20, 0x3A9DC8C
	0x03A9DCF4 MOV X0, X20
	0x03A9DCF8 BL 0x1C16F18
	0x03A9DCFC MOV X20, X31
	0x03A9DD00 B 0x3A9DD08
	0x03A9DD04 MOV X19, X0
	0x03A9DD08 ADD X0, X31, 0x8
	0x03A9DD0C MOV X1, X31
	0x03A9DD10 BL 0x39B1DB4
	0x03A9DD14 CBNZ X20, 0x3A9DD20
	0x03A9DD18 MOV X0, X19
	0x03A9DD1C BL 0x1D2C690
	0x03A9DD20 MOV X0, X20
	0x03A9DD24 BL 0x1C16F18
	0x03A9DD28 BL 0x1990590
	0x03A9DD2C SUB X31, X31, 0xB0
	0x03A9DD30 STR X30, [X31 + 0x80]
	0x03A9DD34 STP X22, X21, [X31 + 0x90]
	0x03A9DD38 STP X20, X19, [X31 + 0xA0]
	0x03A9DD3C ADRP X22, 0x945000
	0x03A9DD40 LDRB W8, [X22 + 0x3F5]
	0x03A9DD44 MOV X21, X3
	0x03A9DD48 MOV X19, X2
	0x03A9DD4C MOV X20, X0
	0x03A9DD50 TBNZ X8, 0x0, 0x3A9DD74
	0x03A9DD54 ADRP X0, 0x6BA000
	0x03A9DD58 LDR X0, [X0 + 0x148]
	0x03A9DD5C BL 0x1C16CF4
	0x03A9DD60 ADRP X0, 0x656000
	0x03A9DD64 LDR X0, [X0 + 0x598]
	0x03A9DD68 BL 0x1C16CF4
	0x03A9DD6C MOVZ W8, 0x1
	0x03A9DD70 STRB W8, [X22 + 0x3F5]
	0x03A9DD74 MOV X0, X31
	0x03A9DD78 STRB W31, [X31 + 0x88]
	0x03A9DD7C BL 0x3C137C4
	0x03A9DD80 TBZ X0, 0x0, 0x3A9DE94
	0x03A9DD84 LDR X0, [X21 + 0xD8]
	0x03A9DD88 CBZ X0, 0x3A9DEA8
	0x03A9DD8C MOV X1, X31
	0x03A9DD90 BL 0x3C03928
	0x03A9DD94 TBNZ X0, 0x0, 0x3A9DE94
	0x03A9DD98 ADRP X8, 0x656000
	0x03A9DD9C LDR X8, [X8 + 0x598]
	0x03A9DDA0 LDR X21, [X20 + 0xB0]
	0x03A9DDA4 LDR X0, [X8]
	0x03A9DDA8 LDR W8, [X0 + 0xE0]
	0x03A9DDAC CBNZ W8, 0x3A9DDB4
	0x03A9DDB0 BL 0x1C16DFC
	0x03A9DDB4 MOV X0, X21
	0x03A9DDB8 MOV X1, X31
	0x03A9DDBC MOV X2, X31
	0x03A9DDC0 BL 0x3C3883C
	0x03A9DDC4 TBZ X0, 0x0, 0x3A9DDE8
	0x03A9DDC8 ADRP X8, 0x6BA000
	0x03A9DDCC LDR X8, [X8 + 0x148]
	0x03A9DDD0 LDR X0, [X8]
	0x03A9DDD4 LDR W8, [X0 + 0xE0]
	0x03A9DDD8 CBNZ W8, 0x3A9DDE0
	0x03A9DDDC BL 0x1C16DFC
	0x03A9DDE0 BL 0x3A9D114
	0x03A9DDE4 STR X0, [X20 + 0xB0]
	0x03A9DDE8 LDR X2, [X20 + 0xD8]
	0x03A9DDEC ADD X0, X31, 0x88
	0x03A9DDF0 MOV X1, X19
	0x03A9DDF4 MOV X3, X31
	0x03A9DDF8 BL 0x39B1DB0
	0x03A9DDFC ADRP X22, 0x93B000
	0x03A9DE00 LDRB W8, [X22 + 0xAC0]
	0x03A9DE04 LDR X21, [X20 + 0xB0]
	0x03A9DE08 CBNZ W8, 0x3A9DE20
	0x03A9DE0C ADRP X0, 0x65A000
	0x03A9DE10 LDR X0, [X0 + 0x270]
	0x03A9DE14 BL 0x1C16CF4
	0x03A9DE18 MOVZ W8, 0x1
	0x03A9DE1C STRB W8, [X22 + 0xAC0]
	0x03A9DE20 ADRP X8, 0x65A000
	0x03A9DE24 LDR X8, [X8 + 0x270]
	0x03A9DE28 LDR X8, [X8]
	0x03A9DE2C LDR X8, [X8 + 0xB8]
	0x03A9DE30 LDP V1, V0, [X8 + 0x60]
	0x03A9DE34 LDP V2, V3, [X8 + 0x40]
	0x03A9DE38 STP V1, V0, [X31 + 0x60]
	0x03A9DE3C STP V2, V3, [X31 + 0x40]
	0x03A9DE40 LDR X8, [X20 + 0xC0]
	0x03A9DE44 CBZ X8, 0x3A9DEAC
	0x03A9DE48 LDR W9, [X8 + 0x18]
	0x03A9DE4C CMP W9, 0x6
	0x03A9DE50 B.LS 0x3A9DEB0
	0x03A9DE54 CBZ X19, 0x3A9DEB4
	0x03A9DE58 LDP V0, V1, [X31 + 0x40]
	0x03A9DE5C LDP V2, V3, [X31 + 0x60]
	0x03A9DE60 LDR X3, [X20 + 0xB8]
	0x03A9DE64 LDR W5, [X8 + 0x38]
	0x03A9DE68 STP V0, V1, [X31]
	0x03A9DE6C STP V2, V3, [X31 + 0x20]
	0x03A9DE70 ADD X2, X31, 0x0
	0x03A9DE74 MOV X0, X19
	0x03A9DE78 MOV X1, X21
	0x03A9DE7C MOV W4, W31
	0x03A9DE80 MOV X6, X31
	0x03A9DE84 BL 0x3C4F070
	0x03A9DE88 ADD X0, X31, 0x88
	0x03A9DE8C MOV X1, X31
	0x03A9DE90 BL 0x39B1DB4
	0x03A9DE94 LDP X20, X19, [X31 + 0xA0]
	0x03A9DE98 LDP X22, X21, [X31 + 0x90]
	0x03A9DE9C LDR X30, [X31 + 0x80]
	0x03A9DEA0 ADD X31, X31, 0xB0
	0x03A9DEA4 RET
	0x03A9DEA8 BL 0x1C16F20
	0x03A9DEAC BL 0x1C16F20
	0x03A9DEB0 BL 0x1C16F28
	0x03A9DEB4 BL 0x1C16F20
	0x03A9DEB8 B 0x3A9DEC0
	0x03A9DEBC B 0x3A9DEC0
	0x03A9DEC0 MOV X19, X0
	0x03A9DEC4 CMP W1, 0x1
	0x03A9DEC8 B.NE 0x3A9DEF4
	0x03A9DECC MOV X0, X19
	0x03A9DED0 BL 0x3EB1AD0
	0x03A9DED4 LDR X20, [X0]
	0x03A9DED8 BL 0x3EB1AE0
	0x03A9DEDC ADD X0, X31, 0x88
	0x03A9DEE0 MOV X1, X31
	0x03A9DEE4 BL 0x39B1DB4
	0x03A9DEE8 CBZ X20, 0x3A9DE94
	0x03A9DEEC MOV X0, X20
	0x03A9DEF0 BL 0x1C16F18
	0x03A9DEF4 MOV X20, X31
	0x03A9DEF8 B 0x3A9DF00
	0x03A9DEFC MOV X19, X0
	0x03A9DF00 ADD X0, X31, 0x88
	0x03A9DF04 MOV X1, X31
	0x03A9DF08 BL 0x39B1DB4
	0x03A9DF0C CBNZ X20, 0x3A9DF18
	0x03A9DF10 MOV X0, X19
	0x03A9DF14 BL 0x1D2C690
	0x03A9DF18 MOV X0, X20
	0x03A9DF1C BL 0x1C16F18
	0x03A9DF20 BL 0x1990590
	0x03A9DF24 SUB X31, X31, 0x120
	0x03A9DF28 STR X29, [X31 + 0xE0]
	0x03A9DF2C STP X30, X23, [X31 + 0xF0]
	0x03A9DF30 STP X22, X21, [X31 + 0x100]
	0x03A9DF34 STP X20, X19, [X31 + 0x110]
	0x03A9DF38 ADRP X21, 0x945000
	0x03A9DF3C LDRB W8, [X21 + 0x3EB]
	0x03A9DF40 MOV X20, X2

ISIL:
	001 Subtract X31, X31, 192
	002 Move [X31+96], X29
	003 Move [X31+104], X30
	004 Move [X31+112], X28
	005 Move [X31+120], X27
	006 Move [X31+128], X26
	007 Move [X31+136], X25
	008 Move [X31+144], X24
	009 Move [X31+152], X23
	010 Move [X31+160], X22
	011 Move [X31+168], X21
	012 Move [X31+176], X20
	013 Move [X31+184], X19
	014 Move W22, W1
	015 Move X1, X31
	016 Move W21, W2
	017 Move X19, X0
	018 Move X23, X8
	019 Move [X31+72], W31
	020 Move [X31+64], X31
	021 Call RenderStateBlock.get_stencilState, X0
	022 Move [X31+80], X0
	023 Move [X31+88], W1
	024 Add X0, X31, 80
	025 Move X1, X31
	026 Call StencilState.get_enabled, X0
	027 Move TEMP, X0
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfNotEqual {45}
	031 Move X0, X19
	032 Move X1, X31
	033 Call RenderStateBlock.get_stencilState, X0
	034 Move [X31+64], X0
	035 Move [X31+72], W1
	036 Add X0, X31, 64
	037 Move X1, X31
	038 Call StencilState.get_compareFunctionFront, X0
	039 Compare W0, 0
	040 JumpIfEqual {68}
	041 Add X0, X31, 64
	042 Move X1, X31
	043 Call StencilState.get_compareFunctionFront, X0
	044 Move [X31+40], W0
	045 Move W8, 2
	046 Move W9, 8
	047 Add X0, X31, 48
	048 Move W1, 1
	049 Move W4, 8
	050 Move W5, 2
	051 Move W2, W31
	052 Move W3, W22
	053 Move W6, W31
	054 Move W7, W31
	055 Move [X31+56], W31
	056 Move [X31+48], X31
	057 Move [X31+32], X31
	058 Move [X31+24], W31
	059 Move [X31+16], W31
	060 Move [X31+8], W8
	061 Move [X31], W9
	062 Call StencilState..ctor, X0, X1, X2, X3, X4, X5, X6, X7, X8, X9, X10, X11
	063 Move X1, [X31+48]
	064 Move W2, [X31+56]
	065 Move X0, X19
	066 Move X3, X31
	067 Call RenderStateBlock.set_stencilState, X0, X1
	068 Move W8, 8
	069 Move [X31+40], W8
	070 Add X0, X31, 64
	071 Move X1, X31
	072 Call StencilState.get_compareFunctionBack, X0
	073 Move [X31+44], W21
	074 Compare W0, 0
	075 JumpIfEqual {80}
	076 Add X0, X31, 64
	077 Move X1, X31
	078 Call StencilState.get_compareFunctionBack, X0
	079 Move W24, W0
	080 Move W24, 8
	081 Add X0, X31, 64
	082 Move X1, X31
	083 Call StencilState.get_passOperationFront, X0
	084 Move W25, W0
	085 Add X0, X31, 64
	086 Move X1, X31
	087 Call StencilState.get_failOperationFront, X0
	088 Move W26, W0
	089 Add X0, X31, 64
	090 Move X1, X31
	091 Call StencilState.get_zFailOperationFront, X0
	092 Move W27, W0
	093 Add X0, X31, 64
	094 Move X1, X31
	095 Call StencilState.get_passOperationBack, X0
	096 Move W28, W0
	097 Add X0, X31, 64
	098 Move X1, X31
	099 Call StencilState.get_failOperationBack, X0
	100 Move W29, W0
	101 Add X0, X31, 64
	102 Move X1, X31
	103 Call StencilState.get_zFailOperationBack, X0
	104 Move W20, W0
	105 Add X0, X31, 64
	106 Move X1, X31
	107 Call StencilState.get_readMask, X0
	108 Move W21, W0
	109 Add X0, X31, 64
	110 Move X1, X31
	111 Call StencilState.get_writeMask, X0
	112 Move W4, [X31+40]
	113 And W2, W21, 15
	114 Or W3, W0, W22
	115 Add X0, X31, 48
	116 Move W1, 1
	117 Move W5, W25
	118 Move W6, W26
	119 Move W7, W27
	120 Move [X31+56], W31
	121 Move [X31+48], X31
	122 Move [X31+32], X31
	123 Move [X31+24], W20
	124 Move [X31+16], W29
	125 Move [X31+8], W28
	126 Move [X31], W24
	127 Call StencilState..ctor, X0, X1, X2, X3, X4, X5, X6, X7, X8, X9, X10, X11
	128 Move X1, [X31+48]
	129 Move W2, [X31+56]
	130 Move X0, X19
	131 Move X3, X31
	132 Call RenderStateBlock.set_stencilState, X0, X1
	133 Move W21, [X31+44]
	134 Move X0, X19
	135 Move X1, X31
	136 Call RenderStateBlock.get_mask, X0
	137 Or W1, W0, 8
	138 Move X0, X19
	139 Move X2, X31
	140 Call RenderStateBlock.set_mask, X0, X1
	141 Move X0, X19
	142 Move X1, X31
	143 Call RenderStateBlock.get_stencilReference, X0
	144 And W8, W0, 15
	145 Or W1, W8, W21
	146 Move X0, X19
	147 Move X2, X31
	148 Call RenderStateBlock.set_stencilReference, X0, X1
	149 Move W2, 108
	150 Move X0, X23
	151 Move X1, X19
	152 Call 0x3EB2AC0
	153 Move X20, [X31+176]
	154 Move X19, [X31+184]
	155 Move X22, [X31+160]
	156 Move X21, [X31+168]
	157 Move X24, [X31+144]
	158 Move X23, [X31+152]
	159 Move X26, [X31+128]
	160 Move X25, [X31+136]
	161 Move X28, [X31+112]
	162 Move X27, [X31+120]
	163 Move X29, [X31+96]
	164 Move X30, [X31+104]
	165 Add X31, X31, 192
	166 Return X0

Method: System.Void ClearStencilPartial(UnityEngine.Rendering.CommandBuffer cmd)

Disassembly:
	0x03A9DF44 MOV X19, X1
	0x03A9DF48 TBNZ X8, 0x0, 0x3A9DF6C
	0x03A9DF4C ADRP X0, 0x6BA000
	0x03A9DF50 LDR X0, [X0 + 0x748]
	0x03A9DF54 BL 0x1C16CF4
	0x03A9DF58 ADRP X0, 0x67F000
	0x03A9DF5C LDR X0, [X0 + 0x8A8]
	0x03A9DF60 BL 0x1C16CF4
	0x03A9DF64 MOVZ W8, 0x1
	0x03A9DF68 STRB W8, [X21 + 0x3EB]
	0x03A9DF6C MOVI V0.2D, 0x0
	0x03A9DF70 STP X31, X31, [X31 + 0xD0]
	0x03A9DF74 STP X31, X31, [X31 + 0xC0]
	0x03A9DF78 STP X31, X31, [X31 + 0xB0]
	0x03A9DF7C STP X31, X31, [X31 + 0xA0]
	0x03A9DF80 STP X31, X31, [X31 + 0x90]
	0x03A9DF84 STR W31, [X31 + 0x80]
	0x03A9DF88 STP V0, V0, [X31 + 0x60]
	0x03A9DF8C STP V0, V0, [X31 + 0x40]
	0x03A9DF90 STP V0, V0, [X31 + 0x20]
	0x03A9DF94 STR V0, [X31 + 0x1]
	0x03A9DF98 LDR W21, [X20]
	0x03A9DF9C TBNZ X21, 0x1F, 0x3A9E0A4
	0x03A9DFA0 ADRP X8, 0x67F000
	0x03A9DFA4 LDR X8, [X8 + 0x8A8]
	0x03A9DFA8 LDP X23, X22, [X20 + 0x10]
	0x03A9DFAC LDR X0, [X8]
	0x03A9DFB0 LDR W8, [X0 + 0xE0]
	0x03A9DFB4 CBNZ W8, 0x3A9DFBC
	0x03A9DFB8 BL 0x1C16DFC
	0x03A9DFBC ADD X3, X31, 0xD0
	0x03A9DFC0 ADD X4, X31, 0xC0
	0x03A9DFC4 ADD X5, X31, 0xB0
	0x03A9DFC8 ADD X6, X31, 0xA0
	0x03A9DFCC ADD X7, X31, 0x90
	0x03A9DFD0 MOV X0, X23
	0x03A9DFD4 MOV X1, X22
	0x03A9DFD8 MOV W2, W21
	0x03A9DFDC STR X31, [X31]
	0x03A9DFE0 BL 0x3A919B4
	0x03A9DFE4 LDRSW X8, [X20]
	0x03A9DFE8 LDR X9, [X20 + 0x10]
	0x03A9DFEC MOVZ W10, 0x74
	0x03A9DFF0 ADD X0, X31, 0x10
	0x03A9DFF4 MOVZ W2, 0x74
	0x03A9DFF8 MADD X1, X8, X10, X9
	0x03A9DFFC BL 0x3EB1B30
	0x03A9E000 ADD X0, X31, 0x10
	0x03A9E004 MOV X1, X31
	0x03A9E008 BL 0x3C5BBF0
	0x03A9E00C MOV X1, X31
	0x03A9E010 BL 0x3A82118
	0x03A9E014 CBZ X0, 0x3A9E0BC
	0x03A9E018 LDR W0, [X0 + 0x38]
	0x03A9E01C ADRP X21, 0x6B9000
	0x03A9E020 LDR X21, [X21 + 0x748]
	0x03A9E024 MOV X1, X31
	0x03A9E028 BL 0x3A6FDA8
	0x03A9E02C LDR X8, [X21]
	0x03A9E030 MOV W20, W0
	0x03A9E034 LDR W9, [X8 + 0xE0]
	0x03A9E038 CBNZ W9, 0x3A9E044
	0x03A9E03C MOV X0, X8
	0x03A9E040 BL 0x1C16DFC
	0x03A9E044 CBZ X19, 0x3A9E0BC
	0x03A9E048 LDR X8, [X21]
	0x03A9E04C LDP S2, S3, [X31 + 0xD8]
	0x03A9E050 LDP S0, S1, [X31 + 0xD0]
	0x03A9E054 MOV X0, X19
	0x03A9E058 LDR X8, [X8 + 0xB8]
	0x03A9E05C MOV X2, X31
	0x03A9E060 LDR W1, [X8 + 0x64]
	0x03A9E064 BL 0x3C4CED8
	0x03A9E068 LDR X8, [X21]
	0x03A9E06C LDP S0, S1, [X31 + 0xC0]
	0x03A9E070 LDP S2, S3, [X31 + 0xC8]
	0x03A9E074 MOV X0, X19
	0x03A9E078 LDR X8, [X8 + 0xB8]
	0x03A9E07C MOV X2, X31
	0x03A9E080 LDR W1, [X8 + 0x68]
	0x03A9E084 BL 0x3C4CED8
	0x03A9E088 LDR X8, [X21]
	0x03A9E08C MOV X0, X19
	0x03A9E090 MOV W2, W20
	0x03A9E094 MOV X3, X31
	0x03A9E098 LDR X8, [X8 + 0xB8]
	0x03A9E09C LDR W1, [X8 + 0x6C]
	0x03A9E0A0 BL 0x3C4CE30
	0x03A9E0A4 LDP X20, X19, [X31 + 0x110]
	0x03A9E0A8 LDP X22, X21, [X31 + 0x100]
	0x03A9E0AC LDP X30, X23, [X31 + 0xF0]
	0x03A9E0B0 LDR X29, [X31 + 0xE0]
	0x03A9E0B4 ADD X31, X31, 0x120
	0x03A9E0B8 RET
	0x03A9E0BC BL 0x1C16F20
	0x03A9E0C0 STP X29, X30, [X31 - 0x60]!
	0x03A9E0C4 STP X28, X27, [X31 + 0x10]
	0x03A9E0C8 STP X26, X25, [X31 + 0x20]
	0x03A9E0CC STP X24, X23, [X31 + 0x30]
	0x03A9E0D0 STP X22, X21, [X31 + 0x40]
	0x03A9E0D4 STP X20, X19, [X31 + 0x50]
	0x03A9E0D8 SUB X31, X31, 0x1A0
	0x03A9E0DC ADRP X20, 0x944000
	0x03A9E0E0 LDRB W8, [X20 + 0x3F1]
	0x03A9E0E4 MOV W29, W5
	0x03A9E0E8 MOV X22, X3
	0x03A9E0EC MOV X21, X2
	0x03A9E0F0 MOV X19, X1
	0x03A9E0F4 MOV X23, X0
	0x03A9E0F8 STR X4, [X31 + 0x20]
	0x03A9E0FC STR X1, [X31 + 0x198]
	0x03A9E100 TBNZ X8, 0x0, 0x3A9E184
	0x03A9E104 ADRP X0, 0x67D000
	0x03A9E108 LDR X0, [X0 + 0x8F8]
	0x03A9E10C BL 0x1C16CF4
	0x03A9E110 ADRP X0, 0x6B9000

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+128], X30
	003 Move [X31+144], X22
	004 Move [X31+152], X21
	005 Move [X31+160], X20
	006 Move [X31+168], X19
	007 Move X22, 0x946000
	008 Move X21, 0x657000
	009 Move W8, [X22+1001]
	010 Move X21, [X21+1432]
	011 Move X19, X1
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x6BB000
	018 Move X0, [X0+328]
	019 Call 0x1C17CF4
	020 Move X0, 0x657000
	021 Move X0, [X0+1432]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X22+1001], W8
	025 Move X0, [X21]
	026 Move [X31+136], W31
	027 Move X21, [X20+176]
	028 Move W8, [X0+224]
	029 Compare W8, 0
	030 JumpIfNotEqual {32}
	031 Call 0x1C17DFC
	032 Move X0, X21
	033 Move X1, X31
	034 Move X2, X31
	035 Call Object.op_Equality, X0, X1
	036 Move TEMP, X0
	037 And TEMP, TEMP, 1
	038 Compare TEMP, 1
	039 JumpIfNotEqual {49}
	040 Move X8, 0x6BB000
	041 Move X8, [X8+328]
	042 Move X0, [X8]
	043 Move W8, [X0+224]
	044 Compare W8, 0
	045 JumpIfNotEqual {47}
	046 Call 0x1C17DFC
	047 Call DeferredLights.CreateFullscreenMesh
	048 Move [X20+176], X0
	049 Move X2, [X20+224]
	050 Add X0, X31, 136
	051 Move X1, X19
	052 Move X3, X31
	053 Call ProfilingScope..ctor, X0, X1, X2
	054 Move X22, 0x93C000
	055 Move W8, [X22+2752]
	056 Move X21, [X20+176]
	057 Compare W8, 0
	058 JumpIfNotEqual {64}
	059 Move X0, 0x65A000
	060 Move X0, [X0+624]
	061 Call 0x1C17CF4
	062 Move W8, 1
	063 Move [X22+2752], W8
	064 Move X8, 0x65A000
	065 Move X8, [X8+624]
	066 Move X8, [X8]
	067 Move X8, [X8+184]
	068 Move V1, [X8+96]
	069 Move V0, [X8+112]
	070 Move V2, [X8+64]
	071 Move V3, [X8+80]
	072 Move [X31+96], V1
	073 Move [X31+104], V0
	074 Move [X31+64], V2
	075 Move [X31+72], V3
	076 Move X8, [X20+192]
	077 Compare X8, 0
	078 JumpIfEqual {109}
	079 Move W9, [X8+24]
	080 NotImplemented "Instruction CMP not yet implemented."
	081 Compare X19, 0
	082 JumpIfEqual {111}
	083 Move V0, [X31+64]
	084 Move V1, [X31+80]
	085 Move V2, [X31+96]
	086 Move V3, [X31+112]
	087 Move X3, [X20+184]
	088 Move W5, [X8+52]
	089 Move [X31], V0
	090 Move [X31+8], V1
	091 Move [X31+32], V2
	092 Move [X31+40], V3
	093 Add X2, X31, 0
	094 Move X0, X19
	095 Move X1, X21
	096 Move W4, W31
	097 Move X6, X31
	098 Call CommandBuffer.DrawMesh, X0, X1, X2, X3, X4, X5
	099 Add X0, X31, 136
	100 Move X1, X31
	101 Call ProfilingScope.Dispose, X0
	102 Move X20, [X31+160]
	103 Move X19, [X31+168]
	104 Move X22, [X31+144]
	105 Move X21, [X31+152]
	106 Move X30, [X31+128]
	107 Add X31, X31, 176
	108 Return 
	109 Call 0x1C17F20
	110 Call 0x1C17F28
	111 Call 0x1C17F20
	112 Move X19, X0
	113 NotImplemented "Instruction CMP not yet implemented."
	114 Move X0, X19
	115 Call 0x3EB2AD0
	116 Move X20, [X0]
	117 Call 0x3EB2AE0
	118 Add X0, X31, 136
	119 Move X1, X31
	120 Call ProfilingScope.Dispose, X0
	121 Compare X20, 0
	122 JumpIfEqual {102}
	123 Move X0, X20
	124 Call 0x1C17F18
	125 Move X20, X31
	126 Move X19, X0
	127 Add X0, X31, 136
	128 Move X1, X31
	129 Call ProfilingScope.Dispose, X0
	130 Compare X20, 0
	131 JumpIfNotEqual {134}
	132 Move X0, X19
	133 Call 0x1D2D690
	134 Move X0, X20
	135 Call 0x1C17F18
	136 Call 0x1991590

Method: System.Void ExecuteDeferredPass(UnityEngine.Rendering.ScriptableRenderContext context, ref UnityEngine.Rendering.Universal.RenderingData renderingData)

Disassembly:
	0x03A9E260 MOV X1, X31
	0x03A9E264 MOV X23, X0
	0x03A9E268 BL 0x3C5BC7C
	0x03A9E26C CMP W0, 0x1
	0x03A9E270 B.NE 0x3A9E6B8
	0x03A9E274 MOV X0, X23
	0x03A9E278 MOV X1, X31
	0x03A9E27C BL 0x3C5BBF0
	0x03A9E280 ADRP X8, 0x67E000
	0x03A9E284 LDR X8, [X8 + 0x8A8]
	0x03A9E288 MOV X28, X0
	0x03A9E28C LDR X8, [X8]
	0x03A9E290 LDR W9, [X8 + 0xE0]
	0x03A9E294 CBNZ W9, 0x3A9E2A0
	0x03A9E298 MOV X0, X8
	0x03A9E29C BL 0x1C16DFC
	0x03A9E2A0 ADD X3, X31, 0x188
	0x03A9E2A4 ADD X4, X31, 0x178
	0x03A9E2A8 ADD X5, X31, 0x168
	0x03A9E2AC ADD X6, X31, 0x158
	0x03A9E2B0 ADD X7, X31, 0x148
	0x03A9E2B4 MOV X0, X22
	0x03A9E2B8 MOV X1, X27
	0x03A9E2BC MOV W2, W26
	0x03A9E2C0 STR X31, [X31]
	0x03A9E2C4 MOV X24, X27
	0x03A9E2C8 BL 0x3A919B4
	0x03A9E2CC LDR X23, [X31 + 0x38]
	0x03A9E2D0 CBZ X28, 0x3A9E6F0
	0x03A9E2D4 ADD X8, X31, 0x100
	0x03A9E2D8 MOV X0, X28
	0x03A9E2DC MOV X1, X31
	0x03A9E2E0 MOV X27, X22
	0x03A9E2E4 BL 0x3C16AA0
	0x03A9E2E8 LDR W8, [X31 + 0x108]
	0x03A9E2EC MOV X0, X28
	0x03A9E2F0 MOV X1, X31
	0x03A9E2F4 CMP W8, 0x1
	0x03A9E2F8 CSET W22, EQ
	0x03A9E2FC BL 0x3A82118
	0x03A9E300 CBZ X0, 0x3A9E6F0
	0x03A9E304 LDR W0, [X0 + 0x38]
	0x03A9E308 MOV X1, X31
	0x03A9E30C BL 0x3A6FDA8
	0x03A9E310 CMP W26, W29
	0x03A9E314 STR W0, [X31 + 0x34]
	0x03A9E318 B.NE 0x3A9E378
	0x03A9E31C ADRP X8, 0x655000
	0x03A9E320 LDR X8, [X8 + 0x598]
	0x03A9E324 LDR X0, [X8]
	0x03A9E328 LDR W8, [X0 + 0xE0]
	0x03A9E32C CBNZ W8, 0x3A9E334
	0x03A9E330 BL 0x1C16DFC
	0x03A9E334 MOV X0, X28
	0x03A9E338 MOV X1, X31
	0x03A9E33C BL 0x3C38948
	0x03A9E340 TBZ X0, 0x0, 0x3A9E390
	0x03A9E344 MOV X0, X28
	0x03A9E348 MOV X1, X31
	0x03A9E34C MOV W20, W29
	0x03A9E350 BL 0x3C16B90
	0x03A9E354 LDR X29, [X31 + 0x28]
	0x03A9E358 CMP W0, 0x0
	0x03A9E35C CSET W3, NE
	0x03A9E360 ADD X1, X31, 0x198
	0x03A9E364 MOV X2, X29
	0x03A9E368 MOV W23, W0
	0x03A9E36C BL 0x3A9F5A0
	0x03A9E370 CBNZ W23, 0x3A9E450
	0x03A9E374 B 0x3A9E474
	0x03A9E378 LDR X0, [X23 + 0x98]
	0x03A9E37C CBZ X0, 0x3A9E3A8
	0x03A9E380 MOV W1, W26
	0x03A9E384 BL 0x3A9F650
	0x03A9E388 MOV W29, W0
	0x03A9E38C B 0x3A9E3AC
	0x03A9E390 LDR X2, [X31 + 0x28]
	0x03A9E394 ADD X1, X31, 0x198
	0x03A9E398 MOV W3, W31
	0x03A9E39C BL 0x3A9F5A0
	0x03A9E3A0 MOV W23, W31
	0x03A9E3A4 B 0x3A9E480
	0x03A9E3A8 MOVN W29, 0x0
	0x03A9E3AC ADRP X8, 0x655000
	0x03A9E3B0 LDR X8, [X8 + 0x598]
	0x03A9E3B4 LDR X0, [X8]
	0x03A9E3B8 LDR W8, [X0 + 0xE0]
	0x03A9E3BC CBNZ W8, 0x3A9E3C4
	0x03A9E3C0 BL 0x1C16DFC
	0x03A9E3C4 MOV X0, X28
	0x03A9E3C8 MOV X1, X31
	0x03A9E3CC BL 0x3C38948
	0x03A9E3D0 TBZ X0, 0x0, 0x3A9E3F8
	0x03A9E3D4 MOV X0, X28
	0x03A9E3D8 MOV X1, X31
	0x03A9E3DC BL 0x3C16B90
	0x03A9E3E0 CMP W0, 0x0
	0x03A9E3E4 CSET W8, NE
	0x03A9E3E8 CMP W29, 0x0
	0x03A9E3EC CSET W9, GE
	0x03A9E3F0 AND W23, W9, W8, 0x0
	0x03A9E3F4 B 0x3A9E3FC
	0x03A9E3F8 MOV W23, W31
	0x03A9E3FC ADRP X20, 0x6B9000
	0x03A9E400 LDR X20, [X20 + 0x748]
	0x03A9E404 LDR X0, [X20]
	0x03A9E408 LDR W8, [X0 + 0xE0]
	0x03A9E40C CBNZ W8, 0x3A9E414
	0x03A9E410 BL 0x1C16DFC
	0x03A9E414 LDR X8, [X20]
	0x03A9E418 MOV X0, X19
	0x03A9E41C MOV W2, W29
	0x03A9E420 MOV X3, X31
	0x03A9E424 LDR X8, [X8 + 0xB8]
	0x03A9E428 LDR W1, [X8 + 0x94]
	0x03A9E42C BL 0x3C4CE30
	0x03A9E430 LDR X29, [X31 + 0x28]
	0x03A9E434 ADD X1, X31, 0x198
	0x03A9E438 MOV W3, W23
	0x03A9E43C MOV X2, X29
	0x03A9E440 BL 0x3A9F5A0
	0x03A9E444 LDR W20, [X31 + 0x1C]
	0x03A9E448 LDR X24, [X31 + 0x20]
	0x03A9E44C TBZ X23, 0x0, 0x3A9E470
	0x03A9E450 LDRB W8, [X29 + 0x27C]
	0x03A9E454 CBZ W8, 0x3A9E470
	0x03A9E458 MOV X0, X28
	0x03A9E45C MOV X1, X31
	0x03A9E460 BL 0x3C16B90
	0x03A9E464 CMP W0, 0x2
	0x03A9E468 CSET W23, EQ
	0x03A9E46C B 0x3A9E474
	0x03A9E470 MOV W23, W31
	0x03A9E474 MOV W29, W20
	0x03A9E478 ADRP X20, 0x6B9000
	0x03A9E47C LDR X20, [X20 + 0x748]
	0x03A9E480 ADRP X8, 0x6B8000
	0x03A9E484 LDR X8, [X8 + 0xEC0]
	0x03A9E488 ADRP X28, 0x93A000
	0x03A9E48C LDR X0, [X8]
	0x03A9E490 LDR W8, [X0 + 0xE0]
	0x03A9E494 CBNZ W8, 0x3A9E49C
	0x03A9E498 BL 0x1C16DFC
	0x03A9E49C MOV X0, X19
	0x03A9E4A0 MOV W1, W23
	0x03A9E4A4 MOV X2, X31
	0x03A9E4A8 BL 0x3A77E80
	0x03A9E4AC ADRP X8, 0x67D000
	0x03A9E4B0 LDR X8, [X8 + 0x8F8]
	0x03A9E4B4 LDR X0, [X8]
	0x03A9E4B8 LDR W8, [X0 + 0xE0]
	0x03A9E4BC CBNZ W8, 0x3A9E4C4
	0x03A9E4C0 BL 0x1C16DFC
	0x03A9E4C4 ADRP X8, 0x6B9000
	0x03A9E4C8 LDR X8, [X8 + 0x780]
	0x03A9E4CC CMP W26, W29
	0x03A9E4D0 AND W2, W21, 0x1
	0x03A9E4D4 MOV X0, X19
	0x03A9E4D8 LDR X1, [X8]
	0x03A9E4DC MOV X3, X31
	0x03A9E4E0 CSET W23, EQ
	0x03A9E4E4 BL 0x39E9618
	0x03A9E4E8 ADRP X8, 0x6B9000
	0x03A9E4EC LDR X8, [X8 + 0x778]
	0x03A9E4F0 MOV X0, X19
	0x03A9E4F4 MOV W2, W23
	0x03A9E4F8 MOV X3, X31
	0x03A9E4FC LDR X1, [X8]
	0x03A9E500 BL 0x39E9618
	0x03A9E504 LDR X0, [X20]
	0x03A9E508 LDR W8, [X0 + 0xE0]
	0x03A9E50C CBNZ W8, 0x3A9E514
	0x03A9E510 BL 0x1C16DFC
	0x03A9E514 LDR X8, [X20]
	0x03A9E518 LDR V3, [X31 + 0x184]
	0x03A9E51C LDR V2, [X31 + 0x180]
	0x03A9E520 LDR V1, [X31 + 0x17C]
	0x03A9E524 LDR X8, [X8 + 0xB8]
	0x03A9E528 LDR V0, [X31 + 0x178]
	0x03A9E52C MOV X0, X19
	0x03A9E530 MOV X2, X31

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X20, 0x945000
	011 Move W8, [X20+1002]
	012 Move X21, X2
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {38}
	018 Move X0, 0x67E000
	019 Move X0, [X0+2296]
	020 Call 0x1C17CF4
	021 Move X0, 0x6BA000
	022 Move X0, [X0+328]
	023 Call 0x1C17CF4
	024 Move X0, 0x6B9000
	025 Move X0, [X0+3776]
	026 Call 0x1C17CF4
	027 Move X0, 0x6BA000
	028 Move X0, [X0+1896]
	029 Call 0x1C17CF4
	030 Move X0, 0x6B9000
	031 Move X0, [X0+368]
	032 Call 0x1C17CF4
	033 Move X0, 0x6B8000
	034 Move X0, [X0+3992]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X20+1002], W8
	038 Move [X31+8], W31
	039 Move X8, [X19+192]
	040 Compare X8, 0
	041 JumpIfEqual {174}
	042 Move W9, [X8+24]
	043 Compare W9, 0
	044 JumpIfEqual {175}
	045 Move X22, 0x6BA000
	046 Move W8, [X8+32]
	047 Move X22, [X22+328]
	048 Move TEMP, X8
	049 And TEMP, TEMP, -2147483648
	050 Compare TEMP, -2147483648
	051 JumpIfNotEqual {54}
	052 Move X0, X19
	053 Call DeferredLights.InitStencilDeferredMaterial, X0
	054 Move X0, [X22]
	055 Move X24, 0x67E000
	056 Move X20, [X21]
	057 Move W8, [X0+224]
	058 Move X24, [X24+2296]
	059 Compare W8, 0
	060 JumpIfNotEqual {63}
	061 Call 0x1C17DFC
	062 Move X0, [X22]
	063 Move X8, [X0+184]
	064 Add X0, X31, 8
	065 Move X1, X20
	066 Move X3, X31
	067 Move X2, [X8+88]
	068 Call ProfilingScope..ctor, X0, X1, X2
	069 Move X0, [X24]
	070 Move W23, [X19+28]
	071 Move W8, [X0+224]
	072 Compare W8, 0
	073 JumpIfNotEqual {75}
	074 Call 0x1C17DFC
	075 Move X22, 0x6BA000
	076 Move X22, [X22+1896]
	077 NotImplemented "Instruction CMP not yet implemented."
	078 NotImplemented "Instruction CSET not yet implemented."
	079 Move X1, [X22]
	080 Move X0, X20
	081 Move X3, X31
	082 Call CoreUtils.SetKeyword, X0, X1, X2
	083 Move X0, X19
	084 Move X1, X20
	085 Move X2, X21
	086 Call DeferredLights.SetupMatrixConstants, X0, X1, X2
	087 Move W1, 1
	088 Move X0, X19
	089 Call DeferredLights.HasStencilLightsOfType, X0, X1
	090 Move TEMP, X0
	091 And TEMP, TEMP, 1
	092 Compare TEMP, 1
	093 JumpIfEqual {97}
	094 Move X0, X19
	095 Move X1, X20
	096 Call DeferredLights.RenderSSAOBeforeShading, X0, X1, X2
	097 Move X0, X19
	098 Move X2, X20
	099 Move X3, X21
	100 Call DeferredLights.RenderStencilLights, X0, X1, X2, X3
	101 Move X0, [X24]
	102 Move W8, [X0+224]
	103 Compare W8, 0
	104 JumpIfNotEqual {106}
	105 Call 0x1C17DFC
	106 Move X1, [X22]
	107 Move X0, X20
	108 Move W2, W31
	109 Move X3, X31
	110 Call CoreUtils.SetKeyword, X0, X1, X2
	111 Move X0, X19
	112 Move X2, X20
	113 Move X3, X21
	114 Call DeferredLights.RenderFog, X0, X1, X2, X3
	115 Add X0, X31, 8
	116 Move X1, X31
	117 Call ProfilingScope.Dispose, X0
	118 Move X0, [X24]
	119 Move X22, 0x6B8000
	120 Move X23, 0x6B9000
	121 Move W25, [X21+664]
	122 Move W8, [X0+224]
	123 Move X22, [X22+3992]
	124 Move X23, [X23+3776]
	125 Add X21, X21, 592
	126 Compare W8, 0
	127 JumpIfNotEqual {129}
	128 Call 0x1C17DFC
	129 Move X1, [X22]
	130 Move X22, 0x6B9000
	131 Move X22, [X22+368]
	132 NotImplemented "Instruction CMP not yet implemented."
	133 NotImplemented "Instruction CSET not yet implemented."
	134 Move X0, X20
	135 Move X3, X31
	136 Call CoreUtils.SetKeyword, X0, X1, X2
	137 Move X0, [X23]
	138 Move W8, [X0+224]
	139 Compare W8, 0
	140 JumpIfNotEqual {142}
	141 Call 0x1C17DFC
	142 Move X0, X20
	143 Move X1, X21
	144 Move X2, X31
	145 Call ShadowUtils.SetSoftShadowQualityShaderKeywords, X0, X1
	146 Move X8, [X19+232]
	147 Move X19, [X22]
	148 Compare X8, 0
	149 JumpIfEqual {153}
	150 Move W8, [X8+92]
	151 NotImplemented "Instruction CMP not yet implemented."
	152 NotImplemented "Instruction CSET not yet implemented."
	153 Move W21, W31
	154 Move X0, [X24]
	155 Move W8, [X0+224]
	156 Compare W8, 0
	157 JumpIfNotEqual {159}
	158 Call 0x1C17DFC
	159 Move X0, X20
	160 Move X1, X19
	161 Move W2, W21
	162 Move X3, X31
	163 Call CoreUtils.SetKeyword, X0, X1, X2
	164 Move X20, [X31+64]
	165 Move X19, [X31+72]
	166 Move X22, [X31+48]
	167 Move X21, [X31+56]
	168 Move X24, [X31+32]
	169 Move X23, [X31+40]
	170 Move X30, [X31+16]
	171 Move X25, [X31+24]
	172 Add X31, X31, 80
	173 Return 
	174 Call 0x1C17F20
	175 Call 0x1C17F28
	176 Move X22, X0
	177 NotImplemented "Instruction CMP not yet implemented."
	178 Move X0, X22
	179 Call 0x3EB2AD0
	180 Move X23, [X0]
	181 Call 0x3EB2AE0
	182 Add X0, X31, 8
	183 Move X1, X31
	184 Call ProfilingScope.Dispose, X0
	185 Compare X23, 0
	186 JumpIfEqual {118}
	187 Move X0, X23
	188 Call 0x1C17F18
	189 Move X23, X31
	190 Move X22, X0
	191 Add X0, X31, 8
	192 Move X1, X31
	193 Call ProfilingScope.Dispose, X0
	194 Compare X23, 0
	195 JumpIfNotEqual {198}
	196 Move X0, X22
	197 Call 0x1D2D690
	198 Move X0, X23
	199 Call 0x1C17F18
	200 Call 0x1991590

Method: System.Void SetupShaderLightConstants(UnityEngine.Rendering.CommandBuffer cmd, ref UnityEngine.Rendering.Universal.RenderingData renderingData)

Disassembly:
	0x03A9CF6C TBNZ X8, 0x0, 0x3A9CF90
	0x03A9CF70 ADRP X0, 0x6BB000

ISIL:
	001 Add X2, X2, 552
	002 Call DeferredLights.SetupMainLightConstants, X0, X1, X2
	003 Return 

Method: System.Void SetupMainLightConstants(UnityEngine.Rendering.CommandBuffer cmd, ref UnityEngine.Rendering.Universal.LightData lightData)

Disassembly:
	0x03A9EF24 BL 0x3C4D0E0
	0x03A9EF28 LDR X8, [X22 + 0x88]
	0x03A9EF2C ADRP X24, 0x6B9000
	0x03A9EF30 LDRH W29, [X8]
	0x03A9EF34 LDR W8, [X22 + 0x80]
	0x03A9EF38 LDR X24, [X24 + 0x148]
	0x03A9EF3C CMP W8, W29
	0x03A9EF40 B.LE 0x3A9F558
	0x03A9EF44 ADRP X8, 0xFFFFFFFFFD04C000
	0x03A9EF48 ADRP X19, 0x6B9000
	0x03A9EF4C LDR V14, [X8 + 0x104]
	0x03A9EF50 LDR X19, [X19 + 0x748]
	0x03A9EF54 ADD X21, X31, 0xB0
	0x03A9EF58 FMOV S11, 1
	0x03A9EF5C FMOV S12, W31
	0x03A9EF60 FMOV S13, -1
	0x03A9EF64 STP X20, X28, [X31 + 0x18]
	0x03A9EF68 STR X25, [X31 + 0x10]
	0x03A9EF6C LDR X8, [X22 + 0x78]
	0x03A9EF70 MOV X0, X25
	0x03A9EF74 MOV X1, X20
	0x03A9EF78 LDRH W26, [X8, X29, LSL #1]
	0x03A9EF7C ADRP X8, 0x6B8000
	0x03A9EF80 LDR X8, [X8 + 0x1B8]
	0x03A9EF84 MOV W2, W26
	0x03A9EF88 LDR X3, [X8]
	0x03A9EF8C BL 0x22222C0
	0x03A9EF90 MOV X1, X31
	0x03A9EF94 MOV X23, X0
	0x03A9EF98 BL 0x3C5BC7C
	0x03A9EF9C CBNZ W0, 0x3A9F548
	0x03A9EFA0 MOV X0, X23
	0x03A9EFA4 MOV X1, X31
	0x03A9EFA8 BL 0x3C5BBF0
	0x03A9EFAC MOV X27, X0
	0x03A9EFB0 MOV X0, X23
	0x03A9EFB4 MOV X1, X31
	0x03A9EFB8 BL 0x3C5BCB4
	0x03A9EFBC FMUL S0, S0, S14
	0x03A9EFC0 FMOV S1, 0.5
	0x03A9EFC4 FMUL S0, S0, S1
	0x03A9EFC8 ADD X0, X31, 0x2C
	0x03A9EFCC ADD X1, X31, 0x28
	0x03A9EFD0 BL 0x3EB1BC0
	0x03A9EFD4 LDR X0, [X24]
	0x03A9EFD8 LDP S8, S9, [X31 + 0x28]
	0x03A9EFDC LDR W8, [X0 + 0xE0]
	0x03A9EFE0 CBNZ W8, 0x3A9EFEC
	0x03A9EFE4 BL 0x1C16DFC
	0x03A9EFE8 LDR X0, [X24]
	0x03A9EFEC ADRP X8, 0x67E000
	0x03A9EFF0 LDR X8, [X8 + 0x8A8]
	0x03A9EFF4 LDR X9, [X0 + 0xB8]
	0x03A9EFF8 FMIN S0, S9, S11
	0x03A9EFFC FCMP S9, 0x0
	0x03A9F000 LDR X8, [X8]
	0x03A9F004 LDR V15, [X9 + 0x48]
	0x03A9F008 FCSEL S10, S0, S12, PL
	0x03A9F00C LDR W10, [X8 + 0xE0]
	0x03A9F010 CBNZ W10, 0x3A9F01C
	0x03A9F014 MOV X0, X8
	0x03A9F018 BL 0x1C16DFC
	0x03A9F01C ADD X3, X31, 0x238
	0x03A9F020 ADD X4, X31, 0x228
	0x03A9F024 ADD X5, X31, 0x218
	0x03A9F028 ADD X6, X31, 0x208
	0x03A9F02C ADD X7, X31, 0x1F8
	0x03A9F030 MOV X0, X25
	0x03A9F034 MOV X1, X20
	0x03A9F038 MOV W2, W26
	0x03A9F03C STR X31, [X31]
	0x03A9F040 BL 0x3A919B4
	0x03A9F044 MOV X0, X27
	0x03A9F048 MOV X1, X31
	0x03A9F04C BL 0x3A82118
	0x03A9F050 CBZ X0, 0x3A9F598
	0x03A9F054 LDR W0, [X0 + 0x38]
	0x03A9F058 MOV X1, X31
	0x03A9F05C BL 0x3A6FDA8
	0x03A9F060 CBZ X27, 0x3A9F598
	0x03A9F064 MOV W24, W0
	0x03A9F068 ADD X8, X31, 0x1B0
	0x03A9F06C MOV X0, X27
	0x03A9F070 MOV X1, X31
	0x03A9F074 BL 0x3C16AA0
	0x03A9F078 LDR W8, [X31 + 0x1B8]
	0x03A9F07C LDR X0, [X22 + 0x98]
	0x03A9F080 CMP W8, 0x1
	0x03A9F084 CSET W20, EQ
	0x03A9F088 CBZ X0, 0x3A9F09C
	0x03A9F08C MOV W1, W26
	0x03A9F090 BL 0x3A9F650
	0x03A9F094 MOV W25, W0
	0x03A9F098 B 0x3A9F0A0
	0x03A9F09C MOVN W25, 0x0
	0x03A9F0A0 ADRP X8, 0x654000
	0x03A9F0A4 LDR X8, [X8 + 0x598]
	0x03A9F0A8 LDR X0, [X8]
	0x03A9F0AC LDR W8, [X0 + 0xE0]
	0x03A9F0B0 CBNZ W8, 0x3A9F0B8
	0x03A9F0B4 BL 0x1C16DFC
	0x03A9F0B8 MOV X0, X27
	0x03A9F0BC MOV X1, X31

ISIL:
	001 Subtract X31, X31, 288
	002 Move [X31+224], X29
	003 Move [X31+240], X30
	004 Move [X31+248], X23
	005 Move [X31+256], X22
	006 Move [X31+264], X21
	007 Move [X31+272], X20
	008 Move [X31+280], X19
	009 Move X21, 0x945000
	010 Move W8, [X21+1003]
	011 Move X20, X2
	012 Move X19, X1
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x6BA000
	018 Move X0, [X0+1864]
	019 Call 0x1C17CF4
	020 Move X0, 0x67F000
	021 Move X0, [X0+2216]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+1003], W8
	025 NotImplemented "Instruction MOVI not yet implemented."
	026 Move [X31+208], X31
	027 Move [X31+216], X31
	028 Move [X31+192], X31
	029 Move [X31+200], X31
	030 Move [X31+176], X31
	031 Move [X31+184], X31
	032 Move [X31+160], X31
	033 Move [X31+168], X31
	034 Move [X31+144], X31
	035 Move [X31+152], X31
	036 Move [X31+128], W31
	037 Move [X31+96], V0
	038 Move [X31+104], V0
	039 Move [X31+64], V0
	040 Move [X31+72], V0
	041 Move [X31+32], V0
	042 Move [X31+40], V0
	043 Move [X31+1], V0
	044 Move W21, [X20]
	045 Move TEMP, X21
	046 And TEMP, TEMP, -2147483648
	047 Compare TEMP, -2147483648
	048 JumpIfEqual {123}
	049 Move X8, 0x67F000
	050 Move X8, [X8+2216]
	051 Move X23, [X20+16]
	052 Move X22, [X20+24]
	053 Move X0, [X8]
	054 Move W8, [X0+224]
	055 Compare W8, 0
	056 JumpIfNotEqual {58}
	057 Call 0x1C17DFC
	058 Add X3, X31, 208
	059 Add X4, X31, 192
	060 Add X5, X31, 176
	061 Add X6, X31, 160
	062 Add X7, X31, 144
	063 Move X0, X23
	064 Move X1, X22
	065 Move W2, W21
	066 Move [X31], X31
	067 Call UniversalRenderPipeline.InitializeLightConstants_Common, X0, X1, X2, X3, X4, X5, X6
	068 NotImplemented "Instruction LDRSW not yet implemented."
	069 Move X9, [X20+16]
	070 Move W10, 116
	071 Add X0, X31, 16
	072 Move W2, 116
	073 NotImplemented "Instruction MADD not yet implemented."
	074 Call 0x3EB2B30
	075 Add X0, X31, 16
	076 Move X1, X31
	077 Call VisibleLight.get_light, X0
	078 Move X1, X31
	079 Call LightExtensions.GetUniversalAdditionalLightData, X0
	080 Compare X0, 0
	081 JumpIfEqual {132}
	082 Move W0, [X0+56]
	083 Move X21, 0x6B9000
	084 Move X21, [X21+1864]
	085 Move X1, X31
	086 Call RenderingLayerUtils.ToValidRenderingLayers, X0
	087 Move X8, [X21]
	088 Move W20, W0
	089 Move W9, [X8+224]
	090 Compare W9, 0
	091 JumpIfNotEqual {94}
	092 Move X0, X8
	093 Call 0x1C17DFC
	094 Compare X19, 0
	095 JumpIfEqual {132}
	096 Move X8, [X21]
	097 Move S2, [X31+216]
	098 Move S3, [X31+220]
	099 Move S0, [X31+208]
	100 Move S1, [X31+212]
	101 Move X0, X19
	102 Move X8, [X8+184]
	103 Move X2, X31
	104 Move W1, [X8+100]
	105 Call CommandBuffer.SetGlobalVector, X0, X1, X2
	106 Move X8, [X21]
	107 Move S0, [X31+192]
	108 Move S1, [X31+196]
	109 Move S2, [X31+200]
	110 Move S3, [X31+204]
	111 Move X0, X19
	112 Move X8, [X8+184]
	113 Move X2, X31
	114 Move W1, [X8+104]
	115 Call CommandBuffer.SetGlobalVector, X0, X1, X2
	116 Move X8, [X21]
	117 Move X0, X19
	118 Move W2, W20
	119 Move X3, X31
	120 Move X8, [X8+184]
	121 Move W1, [X8+108]
	122 Call CommandBuffer.SetGlobalInt, X0, X1, X2
	123 Move X20, [X31+272]
	124 Move X19, [X31+280]
	125 Move X22, [X31+256]
	126 Move X21, [X31+264]
	127 Move X30, [X31+240]
	128 Move X23, [X31+248]
	129 Move X29, [X31+224]
	130 Add X31, X31, 288
	131 Return 
	132 Call 0x1C17F20

Method: System.Void SetupMatrixConstants(UnityEngine.Rendering.CommandBuffer cmd, ref UnityEngine.Rendering.Universal.RenderingData renderingData)

Disassembly:
	0x03A9E534 LDR W1, [X8 + 0x80]
	0x03A9E538 UBFM W23, W22, 0x1E, 0x1D
	0x03A9E53C BL 0x3C4CED8
	0x03A9E540 LDR X8, [X20]
	0x03A9E544 LDR V0, [X31 + 0x188]
	0x03A9E548 LDR V1, [X31 + 0x18C]
	0x03A9E54C LDR V2, [X31 + 0x190]
	0x03A9E550 LDR X8, [X8 + 0xB8]
	0x03A9E554 LDR V3, [X31 + 0x194]
	0x03A9E558 MOV X0, X19
	0x03A9E55C MOV X2, X31
	0x03A9E560 LDR W1, [X8 + 0x8C]
	0x03A9E564 BL 0x3C4CED8
	0x03A9E568 LDR X8, [X20]
	0x03A9E56C MOV X0, X19
	0x03A9E570 MOV W2, W23
	0x03A9E574 MOV X3, X31
	0x03A9E578 LDR X8, [X8 + 0xB8]
	0x03A9E57C LDR W1, [X8 + 0x90]
	0x03A9E580 BL 0x3C4CE30
	0x03A9E584 LDR X8, [X20]
	0x03A9E588 LDR W2, [X31 + 0x34]
	0x03A9E58C MOV X0, X19
	0x03A9E590 MOV X3, X31
	0x03A9E594 LDR X8, [X8 + 0xB8]
	0x03A9E598 LDR W1, [X8 + 0x98]
	0x03A9E59C BL 0x3C4CE30
	0x03A9E5A0 LDR X23, [X31 + 0x38]
	0x03A9E5A4 ADRP X21, 0x659000
	0x03A9E5A8 LDRB W8, [X28 + 0xAC0]
	0x03A9E5AC LDR X26, [X23 + 0xB0]
	0x03A9E5B0 LDR X21, [X21 + 0x270]
	0x03A9E5B4 CBNZ W8, 0x3A9E5C8
	0x03A9E5B8 MOV X0, X21
	0x03A9E5BC BL 0x1C16CF4
	0x03A9E5C0 MOVZ W8, 0x1
	0x03A9E5C4 STRB W8, [X28 + 0xAC0]
	0x03A9E5C8 LDR X8, [X21]
	0x03A9E5CC LDR X8, [X8 + 0xB8]
	0x03A9E5D0 LDP V1, V0, [X8 + 0x60]
	0x03A9E5D4 LDP V2, V3, [X8 + 0x40]
	0x03A9E5D8 STP V1, V0, [X31 + 0x120]
	0x03A9E5DC STP V2, V3, [X31 + 0x100]
	0x03A9E5E0 LDR X8, [X23 + 0xC0]
	0x03A9E5E4 CBZ X8, 0x3A9E6F0
	0x03A9E5E8 LDR W9, [X8 + 0x18]
	0x03A9E5EC CMP W9, 0x3
	0x03A9E5F0 B.LS 0x3A9E6F4
	0x03A9E5F4 LDR X3, [X23 + 0xB8]
	0x03A9E5F8 LDR W5, [X8 + 0x2C]
	0x03A9E5FC LDP V0, V1, [X31 + 0x100]
	0x03A9E600 LDP V2, V3, [X31 + 0x120]
	0x03A9E604 ADD X2, X31, 0xC0
	0x03A9E608 MOV X0, X19
	0x03A9E60C MOV X1, X26
	0x03A9E610 MOV W4, W31
	0x03A9E614 MOV X6, X31
	0x03A9E618 MOV X22, X27
	0x03A9E61C MOV X27, X24
	0x03A9E620 STP V0, V1, [X31 + 0xC0]
	0x03A9E624 STP V2, V3, [X31 + 0xE0]
	0x03A9E628 BL 0x3C4F070
	0x03A9E62C LDRB W8, [X28 + 0xAC0]
	0x03A9E630 LDR X26, [X23 + 0xB0]
	0x03A9E634 CBNZ W8, 0x3A9E648
	0x03A9E638 MOV X0, X21
	0x03A9E63C BL 0x1C16CF4
	0x03A9E640 MOVZ W8, 0x1
	0x03A9E644 STRB W8, [X28 + 0xAC0]
	0x03A9E648 LDR X8, [X21]
	0x03A9E64C LDR X8, [X8 + 0xB8]
	0x03A9E650 LDP V1, V0, [X8 + 0x60]
	0x03A9E654 LDP V2, V3, [X8 + 0x40]
	0x03A9E658 STP V1, V0, [X31 + 0xA0]
	0x03A9E65C STP V2, V3, [X31 + 0x80]
	0x03A9E660 LDR X8, [X23 + 0xC0]
	0x03A9E664 CBZ X8, 0x3A9E6F0
	0x03A9E668 LDR W9, [X8 + 0x18]
	0x03A9E66C CMP W9, 0x4
	0x03A9E670 B.LS 0x3A9E6F4
	0x03A9E674 LDR X3, [X23 + 0xB8]
	0x03A9E678 LDR W5, [X8 + 0x30]
	0x03A9E67C LDP V0, V1, [X31 + 0x80]
	0x03A9E680 LDP V2, V3, [X31 + 0xA0]
	0x03A9E684 ADD X2, X31, 0x40
	0x03A9E688 MOV X0, X19
	0x03A9E68C MOV X1, X26
	0x03A9E690 MOV W4, W31
	0x03A9E694 MOV X6, X31
	0x03A9E698 STP V0, V1, [X31 + 0x40]
	0x03A9E69C STP V2, V3, [X31 + 0x60]
	0x03A9E6A0 BL 0x3C4F070
	0x03A9E6A4 LDRSW X8, [X23 + 0x80]
	0x03A9E6A8 ADD X25, X25, 0x1
	0x03A9E6AC MOV W21, W31
	0x03A9E6B0 CMP X25, X8
	0x03A9E6B4 B.LT 0x3A9E23C
	0x03A9E6B8 ADRP X8, 0x6B9000
	0x03A9E6BC LDR X8, [X8 + 0x788]
	0x03A9E6C0 MOV X0, X19
	0x03A9E6C4 MOV X2, X31
	0x03A9E6C8 LDR X1, [X8]
	0x03A9E6CC BL 0x3C4D124
	0x03A9E6D0 ADD X31, X31, 0x1A0
	0x03A9E6D4 LDP X20, X19, [X31 + 0x50]
	0x03A9E6D8 LDP X22, X21, [X31 + 0x40]
	0x03A9E6DC LDP X24, X23, [X31 + 0x30]
	0x03A9E6E0 LDP X26, X25, [X31 + 0x20]
	0x03A9E6E4 LDP X28, X27, [X31 + 0x10]
	0x03A9E6E8 LDP X29, X30, [X31], #0x60
	0x03A9E6EC RET
	0x03A9E6F0 BL 0x1C16F20
	0x03A9E6F4 BL 0x1C16F28
	0x03A9E6F8 STR D12, [X31 - 0x90]!
	0x03A9E6FC STP D11, D10, [X31 + 0x10]
	0x03A9E700 STP D9, D8, [X31 + 0x20]
	0x03A9E704 STP X29, X30, [X31 + 0x30]
	0x03A9E708 STP X28, X27, [X31 + 0x40]
	0x03A9E70C STP X26, X25, [X31 + 0x50]
	0x03A9E710 STP X24, X23, [X31 + 0x60]
	0x03A9E714 STP X22, X21, [X31 + 0x70]
	0x03A9E718 STP X20, X19, [X31 + 0x80]
	0x03A9E71C SUB X31, X31, 0x290
	0x03A9E720 ADRP X22, 0x944000
	0x03A9E724 STR X1, [X31 + 0x298]
	0x03A9E728 ADRP X28, 0x655000
	0x03A9E72C LDRB W8, [X22 + 0x3F2]
	0x03A9E730 LDR X28, [X28 + 0x598]
	0x03A9E734 MOV X20, X4
	0x03A9E738 MOV X21, X3
	0x03A9E73C MOV X25, X2
	0x03A9E740 MOV X19, X1
	0x03A9E744 MOV X23, X0
	0x03A9E748 TBNZ X8, 0x0, 0x3A9E7C0
	0x03A9E74C ADRP X0, 0x67D000
	0x03A9E750 LDR X0, [X0 + 0x8F8]
	0x03A9E754 BL 0x1C16CF4
	0x03A9E758 ADRP X0, 0x6B9000
	0x03A9E75C LDR X0, [X0 + 0x148]
	0x03A9E760 BL 0x1C16CF4
	0x03A9E764 ADRP X0, 0x6B8000
	0x03A9E768 LDR X0, [X0 + 0x1B8]
	0x03A9E76C BL 0x1C16CF4
	0x03A9E770 ADRP X0, 0x655000
	0x03A9E774 LDR X0, [X0 + 0x598]
	0x03A9E778 BL 0x1C16CF4
	0x03A9E77C ADRP X0, 0x6B9000
	0x03A9E780 LDR X0, [X0 + 0x748]
	0x03A9E784 BL 0x1C16CF4
	0x03A9E788 ADRP X0, 0x6B8000
	0x03A9E78C LDR X0, [X0 + 0xEC0]
	0x03A9E790 BL 0x1C16CF4
	0x03A9E794 ADRP X0, 0x67E000
	0x03A9E798 LDR X0, [X0 + 0x8A8]
	0x03A9E79C BL 0x1C16CF4
	0x03A9E7A0 ADRP X0, 0x6B9000
	0x03A9E7A4 LDR X0, [X0 + 0x790]
	0x03A9E7A8 BL 0x1C16CF4
	0x03A9E7AC ADRP X0, 0x6B8000
	0x03A9E7B0 LDR X0, [X0 + 0x170]
	0x03A9E7B4 BL 0x1C16CF4
	0x03A9E7B8 MOVZ W8, 0x1
	0x03A9E7BC STRB W8, [X22 + 0x3F2]
	0x03A9E7C0 LDR X0, [X28]
	0x03A9E7C4 MOVI V0.2D, 0x0
	0x03A9E7C8 STR X31, [X31 + 0x248]
	0x03A9E7CC STR X31, [X31 + 0x240]
	0x03A9E7D0 STR X31, [X31 + 0x238]
	0x03A9E7D4 STR X31, [X31 + 0x230]
	0x03A9E7D8 STR X31, [X31 + 0x228]
	0x03A9E7DC STR X31, [X31 + 0x220]
	0x03A9E7E0 STR X31, [X31 + 0x218]
	0x03A9E7E4 STR X31, [X31 + 0x210]
	0x03A9E7E8 STR X31, [X31 + 0x208]
	0x03A9E7EC STR X31, [X31 + 0x200]
	0x03A9E7F0 STP V0, V0, [X31 + 0x270]
	0x03A9E7F4 STP V0, V0, [X31 + 0x250]
	0x03A9E7F8 STP V0, V0, [X31 + 0x1E0]
	0x03A9E7FC STP V0, V0, [X31 + 0x1C0]
	0x03A9E800 LDR W8, [X0 + 0xE0]
	0x03A9E804 LDR X24, [X23 + 0xA0]
	0x03A9E808 CBNZ W8, 0x3A9E810
	0x03A9E80C BL 0x1C16DFC
	0x03A9E810 MOV X0, X24
	0x03A9E814 MOV X1, X31
	0x03A9E818 MOV X2, X31
	0x03A9E81C BL 0x3C3883C
	0x03A9E820 TBZ X0, 0x0, 0x3A9E844
	0x03A9E824 ADRP X8, 0x6B9000
	0x03A9E828 LDR X8, [X8 + 0x148]
	0x03A9E82C LDR X0, [X8]
	0x03A9E830 LDR W8, [X0 + 0xE0]
	0x03A9E834 CBNZ W8, 0x3A9E83C
	0x03A9E838 BL 0x1C16DFC
	0x03A9E83C BL 0x3A9F690
	0x03A9E840 STR X0, [X23 + 0xA0]
	0x03A9E844 STR X25, [X31 + 0x30]
	0x03A9E848 CBZ X19, 0x3A9EDCC
	0x03A9E84C ADRP X8, 0x6B9000
	0x03A9E850 LDR X8, [X8 + 0x790]
	0x03A9E854 MOV X0, X19
	0x03A9E858 MOV X2, X31
	0x03A9E85C LDR X1, [X8]
	0x03A9E860 BL 0x3C4D0E0
	0x03A9E864 LDR X8, [X23 + 0x88]
	0x03A9E868 LDRH W29, [X8 + 0x4]
	0x03A9E86C LDR W8, [X23 + 0x80]
	0x03A9E870 CMP W8, W29
	0x03A9E874 B.LE 0x3A9ED88
	0x03A9E878 ADRP X22, 0x6B8000
	0x03A9E87C LDR X22, [X22 + 0x1B8]
	0x03A9E880 MOVZ W26, 0x3F800000
	0x03A9E884 LDR X8, [X23 + 0x78]
	0x03A9E888 LDR X3, [X22]
	0x03A9E88C MOV X0, X21
	0x03A9E890 MOV X1, X20
	0x03A9E894 LDRH W25, [X8, X29, LSL #1]
	0x03A9E898 MOV W2, W25
	0x03A9E89C BL 0x22222C0
	0x03A9E8A0 MOV X1, X31
	0x03A9E8A4 MOV X24, X0
	0x03A9E8A8 BL 0x3C5BC7C
	0x03A9E8AC CMP W0, 0x2
	0x03A9E8B0 B.NE 0x3A9ED88
	0x03A9E8B4 MOV X0, X24
	0x03A9E8B8 MOV X1, X31
	0x03A9E8BC BL 0x3C5BBF0
	0x03A9E8C0 MOV X27, X0
	0x03A9E8C4 ADD X8, X31, 0x180
	0x03A9E8C8 MOV X0, X24
	0x03A9E8CC MOV X1, X31

ISIL:
	001 Move [X31-112], D8
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Subtract X31, X31, 1008
	015 Move X19, 0x945000
	016 Move W8, [X19+1004]
	017 Move X21, X2
	018 Move X22, X1
	019 Move X20, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {29}
	024 Move X0, 0x6BA000
	025 Move X0, [X0+1864]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X19+1004], W8
	029 NotImplemented "Instruction MOVI not yet implemented."
	030 Move [X31+848], V0
	031 Move [X31+856], V0
	032 Move [X31+816], V0
	033 Move [X31+824], V0
	034 Move [X31+784], V0
	035 Move [X31+792], V0
	036 Move [X31+752], V0
	037 Move [X31+760], V0
	038 Move X0, [X21+400]
	039 Compare X0, 0
	040 JumpIfEqual {323}
	041 Move X1, X31
	042 Call XRPass.get_enabled, X0
	043 Move [X31+1016], X22
	044 Move TEMP, X0
	045 And TEMP, TEMP, 1
	046 Compare TEMP, 1
	047 JumpIfNotEqual {56}
	048 Move X0, [X21+400]
	049 Compare X0, 0
	050 JumpIfEqual {323}
	051 Move X1, X31
	052 Call XRPass.get_singlePassEnabled, X0
	053 And W31, W0, 1
	054 Move W8, 1
	055 NotImplemented "Instruction CINC not yet implemented."
	056 Move W28, 1
	057 Move X24, 0x65A000
	058 Move X25, 0x6BA000
	059 Add X23, X21, 24
	060 Move X21, [X20+200]
	061 Move X24, [X24+624]
	062 Move X25, [X25+1856]
	063 Move X22, X31
	064 Move W29, 32
	065 Move S8, 0.5
	066 Move W19, 0x3F800000
	067 Move X26, 0x93B000
	068 Move X27, 0x945000
	069 Add X8, X31, 624
	070 Move X0, X23
	071 Move W1, W22
	072 Move X2, X31
	073 Call CameraData.GetProjectionMatrix, X0, X1
	074 Move V0, [X31+624]
	075 Move V1, [X31+640]
	076 Move V2, [X31+656]
	077 Move V3, [X31+672]
	078 Add X8, X31, 624
	079 Move X0, X23
	080 Move W1, W22
	081 Move X2, X31
	082 Move [X31+688], V0
	083 Move [X31+696], V1
	084 Move [X31+720], V2
	085 Move [X31+728], V3
	086 Call CameraData.GetViewMatrix, X0, X1
	087 Move V0, [X31+624]
	088 Move V1, [X31+640]
	089 Move V2, [X31+656]
	090 Move V3, [X31+672]
	091 Add X8, X31, 624
	092 Add X0, X31, 560
	093 Move [X31+944], V0
	094 Move [X31+952], V1
	095 Move V0, [X31+688]
	096 Move V1, [X31+704]
	097 Move [X31+976], V2
	098 Move [X31+984], V3
	099 Move V2, [X31+720]
	100 Move V3, [X31+736]
	101 Move W1, W31
	102 Move X2, X31
	103 Move [X31+560], V0
	104 Move [X31+568], V1
	105 Move [X31+592], V2
	106 Move [X31+600], V3
	107 Call GL.GetGPUProjectionMatrix, X0, X1
	108 Move V0, [X31+624]
	109 Move V1, [X31+640]
	110 Move V2, [X31+656]
	111 Move V3, [X31+672]
	112 Move X8, 0x3F800000
	113 Add X0, X31, 816
	114 Move [X31+880], V0
	115 Move [X31+888], V1
	116 Move [X31+912], V2
	117 Move [X31+920], V3
	118 Move S0, [X20+36]
	119 Move S1, [X20+40]
	120 Move S2, W31
	121 Move S3, W31
	122 Move S4, W31
	123 NotImplemented "Instruction SCVTF not yet implemented."
	124 NotImplemented "Instruction SCVTF not yet implemented."
	125 Multiply S0, S0, S8
	126 Multiply S5, S1, S8
	127 Move S1, W31
	128 Move S6, W31
	129 Move S7, W31
	130 Move X1, X31
	131 Move [X31+24], X8
	132 Move [X31+16], S0
	133 Move [X31+24], S5
	134 Move [X31], X31
	135 Move [X31+8], X19
	136 Call Matrix4x4..ctor, X0, X1, X2, X3, X4
	137 Move W8, [X26+2752]
	138 Compare W8, 0
	139 JumpIfNotEqual {144}
	140 Move X0, X24
	141 Call 0x1C17CF4
	142 Move W8, 1
	143 Move [X26+2752], W8
	144 Move X8, [X24]
	145 Move X8, [X8+184]
	146 Move V0, [X8+96]
	147 Move V1, [X8+112]
	148 Move V3, [X8+64]
	149 Move V2, [X8+80]
	150 Move W8, [X27+1066]
	151 Move [X31+784], V0
	152 Move [X31+792], V1
	153 Move [X31+752], V3
	154 Move [X31+760], V2
	155 Compare W8, 0
	156 JumpIfNotEqual {161}
	157 Move X0, X25
	158 Call 0x1C17CF4
	159 Move W8, 1
	160 Move [X27+1066], W8
	161 Move X8, [X25]
	162 Move X8, [X8+184]
	163 Move W8, [X8]
	164 Compare W8, 0
	165 JumpIfEqual {184}
	166 Move X8, 0x3F000000
	167 NotImplemented "Instruction MOVK not yet implemented."
	168 Move [X31+16], X31
	169 Move [X31+24], X8
	170 Add X0, X31, 752
	171 Move S0, 1
	172 Move S1, W31
	173 Move S2, W31
	174 Move S3, W31
	175 Move S4, W31
	176 Move S5, 1
	177 Move S6, W31
	178 Move S7, W31
	179 Move W8, 0x3F000000
	180 Move X1, X31
	181 Move [X31], X31
	182 Move [X31+8], X8
	183 Call Matrix4x4..ctor, X0, X1, X2, X3, X4
	184 Move V0, [X31+816]
	185 Move V1, [X31+832]
	186 Move V2, [X31+848]
	187 Move V3, [X31+864]
	188 Add X8, X31, 688
	189 Add X0, X31, 496
	190 Move [X31+496], V0
	191 Move [X31+504], V1
	192 Move V0, [X31+752]
	193 Move V1, [X31+768]
	194 Move [X31+528], V2
	195 Move [X31+536], V3
	196 Move V2, [X31+784]
	197 Move V3, [X31+800]
	198 Add X1, X31, 432
	199 Move X2, X31
	200 Move [X31+432], V0
	201 Move [X31+440], V1
	202 Move [X31+464], V2
	203 Move [X31+472], V3
	204 Call Matrix4x4.op_Multiply, X0, X1
	205 Move V0, [X31+688]
	206 Move V1, [X31+704]
	207 Move V2, [X31+720]
	208 Move V3, [X31+736]
	209 Add X8, X31, 688
	210 Add X0, X31, 368
	211 Move [X31+368], V0
	212 Move [X31+376], V1
	213 Move V0, [X31+880]
	214 Move V1, [X31+896]
	215 Move [X31+400], V2
	216 Move [X31+408], V3
	217 Move V2, [X31+912]
	218 Move V3, [X31+928]
	219 Add X1, X31, 304
	220 Move X2, X31
	221 Move [X31+304], V0
	222 Move [X31+312], V1
	223 Move [X31+336], V2
	224 Move [X31+344], V3
	225 Call Matrix4x4.op_Multiply, X0, X1
	226 Move V0, [X31+688]
	227 Move V1, [X31+704]
	228 Move V2, [X31+720]
	229 Move V3, [X31+736]
	230 Add X8, X31, 688
	231 Add X0, X31, 240
	232 Move [X31+240], V0
	233 Move [X31+248], V1
	234 Move V0, [X31+944]
	235 Move V1, [X31+960]
	236 Move [X31+272], V2
	237 Move [X31+280], V3
	238 Move V2, [X31+976]
	239 Move V3, [X31+992]
	240 Add X1, X31, 176
	241 Move X2, X31
	242 Move [X31+176], V0
	243 Move [X31+184], V1
	244 Move [X31+208], V2
	245 Move [X31+216], V3
	246 Call Matrix4x4.op_Multiply, X0, X1
	247 Move V0, [X31+688]
	248 Move V1, [X31+704]
	249 Move V2, [X31+720]
	250 Move V3, [X31+736]
	251 Add X8, X31, 624
	252 Add X0, X31, 112
	253 Move X1, X31
	254 Move [X31+112], V0
	255 Move [X31+120], V1
	256 Move [X31+144], V2
	257 Move [X31+152], V3
	258 Call Matrix4x4.Inverse, X0
	259 Move V0, [X31+624]
	260 Move V1, [X31+640]
	261 Move V2, [X31+656]
	262 Move V3, [X31+672]
	263 Move [X31+688], V0
	264 Move [X31+696], V1
	265 Move [X31+720], V2
	266 Move [X31+728], V3
	267 Compare X21, 0
	268 JumpIfEqual {323}
	269 Move V0, [X31+688]
	270 Move V1, [X31+704]
	271 Move V2, [X31+720]
	272 Move V3, [X31+736]
	273 Move [X31+48], V0
	274 Move [X31+56], V1
	275 Move [X31+80], V2
	276 Move [X31+88], V3
	277 Move W8, [X21+24]
	278 NotImplemented "Instruction CMP not yet implemented."
	279 Move V0, [X31+80]
	280 Move V1, [X31+96]
	281 Move V2, [X31+48]
	282 Move V3, [X31+64]
	283 Add X22, X22, 1
	284 Add X8, X21, X29
	285 NotImplemented "Instruction CMP not yet implemented."
	286 Add X29, X29, 64
	287 Move [X8+32], V0
	288 Move [X8+40], V1
	289 Move [X8], V2
	290 Move [X8+8], V3
	291 Move X19, 0x6BA000
	292 Move X19, [X19+1864]
	293 Move X0, [X19]
	294 Move W8, [X0+224]
	295 Compare W8, 0
	296 JumpIfNotEqual {298}
	297 Call 0x1C17DFC
	298 Move X0, [X31+1016]
	299 Compare X0, 0
	300 JumpIfEqual {323}
	301 Move X8, [X19]
	302 Move X2, X21
	303 Move X3, X31
	304 Move X8, [X8+184]
	305 Move W1, [X8+96]
	306 Call CommandBuffer.SetGlobalMatrixArray, X0, X1, X2
	307 Add X31, X31, 1008
	308 Move X20, [X31+96]
	309 Move X19, [X31+104]
	310 Move X22, [X31+80]
	311 Move X21, [X31+88]
	312 Move X24, [X31+64]
	313 Move X23, [X31+72]
	314 Move X26, [X31+48]
	315 Move X25, [X31+56]
	316 Move X28, [X31+32]
	317 Move X27, [X31+40]
	318 Move X29, [X31+16]
	319 Move X30, [X31+24]
	320 Move V8, [X31+112]
	321 Return 
	322 Call 0x1C17F28
	323 Call 0x1C17F20

Method: System.Void PrecomputeLights(out Unity.Collections.NativeArray`1<System.UInt16> stencilVisLights, out Unity.Collections.NativeArray`1<System.UInt16> stencilVisLightOffsets, ref Unity.Collections.NativeArray`1<UnityEngine.Rendering.VisibleLight> visibleLights, System.Boolean hasAdditionalLights, UnityEngine.Matrix4x4 view, System.Boolean isOrthographic, System.Single zNear)

Disassembly:
	0x03A9CC8C MOV W4, W20
	0x03A9CC90 MOV W5, W22
	0x03A9CC94 MOV W6, W23
	0x03A9CC98 MOV W7, W24
	0x03A9CC9C STR X31, [X31 + 0x40]
	0x03A9CCA0 STR W31, [X31 + 0x48]
	0x03A9CCA4 STR X31, [X31 + 0x20]
	0x03A9CCA8 STR W27, [X31 + 0x18]
	0x03A9CCAC STR W26, [X31 + 0x10]
	0x03A9CCB0 STR W25, [X31 + 0x8]
	0x03A9CCB4 STR W21, [X31]
	0x03A9CCB8 BL 0x3C5B07C
	0x03A9CCBC LDR X0, [X31 + 0x40]
	0x03A9CCC0 LDR W1, [X31 + 0x48]
	0x03A9CCC4 LDP X20, X19, [X31 + 0xA0]
	0x03A9CCC8 LDP X22, X21, [X31 + 0x90]
	0x03A9CCCC LDP X24, X23, [X31 + 0x80]
	0x03A9CCD0 LDP X26, X25, [X31 + 0x70]
	0x03A9CCD4 LDP X28, X27, [X31 + 0x60]
	0x03A9CCD8 LDR X30, [X31 + 0x50]
	0x03A9CCDC ADD X31, X31, 0xB0
	0x03A9CCE0 RET
	0x03A9CCE4 SUB X31, X31, 0xC0
	0x03A9CCE8 STP X29, X30, [X31 + 0x60]
	0x03A9CCEC STP X28, X27, [X31 + 0x70]
	0x03A9CCF0 STP X26, X25, [X31 + 0x80]
	0x03A9CCF4 STP X24, X23, [X31 + 0x90]
	0x03A9CCF8 STP X22, X21, [X31 + 0xA0]
	0x03A9CCFC STP X20, X19, [X31 + 0xB0]
	0x03A9CD00 MOV W22, W1
	0x03A9CD04 MOV X1, X31
	0x03A9CD08 MOV W21, W2
	0x03A9CD0C MOV X19, X0
	0x03A9CD10 MOV X23, X8
	0x03A9CD14 STR W31, [X31 + 0x48]
	0x03A9CD18 STR X31, [X31 + 0x40]
	0x03A9CD1C BL 0x3C563AC
	0x03A9CD20 STR X0, [X31 + 0x50]
	0x03A9CD24 STR W1, [X31 + 0x58]
	0x03A9CD28 ADD X0, X31, 0x50
	0x03A9CD2C MOV X1, X31
	0x03A9CD30 BL 0x3C5B160
	0x03A9CD34 TBZ X0, 0x0, 0x3A9CD70
	0x03A9CD38 MOV X0, X19
	0x03A9CD3C MOV X1, X31
	0x03A9CD40 BL 0x3C563AC
	0x03A9CD44 STR X0, [X31 + 0x40]
	0x03A9CD48 STR W1, [X31 + 0x48]
	0x03A9CD4C ADD X0, X31, 0x40
	0x03A9CD50 MOV X1, X31
	0x03A9CD54 BL 0x3C5B2B8
	0x03A9CD58 CBZ W0, 0x3A9CDD0
	0x03A9CD5C ADD X0, X31, 0x40
	0x03A9CD60 MOV X1, X31
	0x03A9CD64 BL 0x3C5B2B8
	0x03A9CD68 STR W0, [X31 + 0x28]
	0x03A9CD6C B 0x3A9CDD8
	0x03A9CD70 MOVZ W8, 0x2
	0x03A9CD74 MOVZ W9, 0x8
	0x03A9CD78 ADD X0, X31, 0x30
	0x03A9CD7C MOVZ W1, 0x1
	0x03A9CD80 MOVZ W4, 0x8
	0x03A9CD84 MOVZ W5, 0x2
	0x03A9CD88 MOV W2, W31
	0x03A9CD8C MOV W3, W22
	0x03A9CD90 MOV W6, W31
	0x03A9CD94 MOV W7, W31
	0x03A9CD98 STR W31, [X31 + 0x38]
	0x03A9CD9C STR X31, [X31 + 0x30]
	0x03A9CDA0 STR X31, [X31 + 0x20]
	0x03A9CDA4 STR W31, [X31 + 0x18]
	0x03A9CDA8 STR W31, [X31 + 0x10]
	0x03A9CDAC STR W8, [X31 + 0x8]
	0x03A9CDB0 STR W9, [X31]
	0x03A9CDB4 BL 0x3C5B07C
	0x03A9CDB8 LDR X1, [X31 + 0x30]
	0x03A9CDBC LDR W2, [X31 + 0x38]
	0x03A9CDC0 MOV X0, X19
	0x03A9CDC4 MOV X3, X31
	0x03A9CDC8 BL 0x3C563BC
	0x03A9CDCC B 0x3A9CED8
	0x03A9CDD0 MOVZ W8, 0x8
	0x03A9CDD4 STR W8, [X31 + 0x28]
	0x03A9CDD8 ADD X0, X31, 0x40
	0x03A9CDDC MOV X1, X31
	0x03A9CDE0 BL 0x3C5B2D8
	0x03A9CDE4 STR W21, [X31 + 0x2C]
	0x03A9CDE8 CBZ W0, 0x3A9CE00
	0x03A9CDEC ADD X0, X31, 0x40
	0x03A9CDF0 MOV X1, X31
	0x03A9CDF4 BL 0x3C5B2D8
	0x03A9CDF8 MOV W24, W0
	0x03A9CDFC B 0x3A9CE04
	0x03A9CE00 MOVZ W24, 0x8
	0x03A9CE04 ADD X0, X31, 0x40
	0x03A9CE08 MOV X1, X31
	0x03A9CE0C BL 0x3C5B2C0
	0x03A9CE10 MOV W25, W0
	0x03A9CE14 ADD X0, X31, 0x40
	0x03A9CE18 MOV X1, X31
	0x03A9CE1C BL 0x3C5B2C8
	0x03A9CE20 MOV W26, W0
	0x03A9CE24 ADD X0, X31, 0x40
	0x03A9CE28 MOV X1, X31
	0x03A9CE2C BL 0x3C5B2D0
	0x03A9CE30 MOV W27, W0
	0x03A9CE34 ADD X0, X31, 0x40
	0x03A9CE38 MOV X1, X31
	0x03A9CE3C BL 0x3C5B2E0
	0x03A9CE40 MOV W28, W0
	0x03A9CE44 ADD X0, X31, 0x40
	0x03A9CE48 MOV X1, X31
	0x03A9CE4C BL 0x3C5B2E8
	0x03A9CE50 MOV W29, W0
	0x03A9CE54 ADD X0, X31, 0x40
	0x03A9CE58 MOV X1, X31
	0x03A9CE5C BL 0x3C5B2F0
	0x03A9CE60 MOV W20, W0
	0x03A9CE64 ADD X0, X31, 0x40
	0x03A9CE68 MOV X1, X31
	0x03A9CE6C BL 0x3C5B228
	0x03A9CE70 MOV W21, W0
	0x03A9CE74 ADD X0, X31, 0x40
	0x03A9CE78 MOV X1, X31
	0x03A9CE7C BL 0x3C5B238
	0x03A9CE80 LDR W4, [X31 + 0x28]
	0x03A9CE84 AND W2, W21, 0xF
	0x03A9CE88 ORR W3, W0, W22, 0x0
	0x03A9CE8C ADD X0, X31, 0x30
	0x03A9CE90 MOVZ W1, 0x1
	0x03A9CE94 MOV W5, W25
	0x03A9CE98 MOV W6, W26
	0x03A9CE9C MOV W7, W27
	0x03A9CEA0 STR W31, [X31 + 0x38]
	0x03A9CEA4 STR X31, [X31 + 0x30]
	0x03A9CEA8 STR X31, [X31 + 0x20]
	0x03A9CEAC STR W20, [X31 + 0x18]
	0x03A9CEB0 STR W29, [X31 + 0x10]
	0x03A9CEB4 STR W28, [X31 + 0x8]
	0x03A9CEB8 STR W24, [X31]
	0x03A9CEBC BL 0x3C5B07C
	0x03A9CEC0 LDR X1, [X31 + 0x30]
	0x03A9CEC4 LDR W2, [X31 + 0x38]
	0x03A9CEC8 MOV X0, X19
	0x03A9CECC MOV X3, X31
	0x03A9CED0 BL 0x3C563BC
	0x03A9CED4 LDR W21, [X31 + 0x2C]
	0x03A9CED8 MOV X0, X19
	0x03A9CEDC MOV X1, X31
	0x03A9CEE0 BL 0x3C563D8
	0x03A9CEE4 ORR W1, W0, 0x8
	0x03A9CEE8 MOV X0, X19
	0x03A9CEEC MOV X2, X31
	0x03A9CEF0 BL 0x3C563E0
	0x03A9CEF4 MOV X0, X19
	0x03A9CEF8 MOV X1, X31
	0x03A9CEFC BL 0x3C563C8
	0x03A9CF00 AND W8, W0, 0xF
	0x03A9CF04 ORR W1, W8, W21, 0x0
	0x03A9CF08 MOV X0, X19
	0x03A9CF0C MOV X2, X31
	0x03A9CF10 BL 0x3C563D0
	0x03A9CF14 MOVZ W2, 0x6C
	0x03A9CF18 MOV X0, X23
	0x03A9CF1C MOV X1, X19
	0x03A9CF20 BL 0x3EB1AC0
	0x03A9CF24 LDP X20, X19, [X31 + 0xB0]
	0x03A9CF28 LDP X22, X21, [X31 + 0xA0]
	0x03A9CF2C LDP X24, X23, [X31 + 0x90]
	0x03A9CF30 LDP X26, X25, [X31 + 0x80]
	0x03A9CF34 LDP X28, X27, [X31 + 0x70]
	0x03A9CF38 LDP X29, X30, [X31 + 0x60]
	0x03A9CF3C ADD X31, X31, 0xC0
	0x03A9CF40 RET
	0x03A9CF44 SUB X31, X31, 0xB0
	0x03A9CF48 STR X30, [X31 + 0x80]
	0x03A9CF4C STP X22, X21, [X31 + 0x90]
	0x03A9CF50 STP X20, X19, [X31 + 0xA0]
	0x03A9CF54 ADRP X22, 0x946000
	0x03A9CF58 ADRP X21, 0x657000
	0x03A9CF5C LDRB W8, [X22 + 0x3E9]
	0x03A9CF60 LDR X21, [X21 + 0x598]
	0x03A9CF64 MOV X19, X1
	0x03A9CF68 MOV X20, X0

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+48], X30
	003 Move [X31+56], X27
	004 Move [X31+64], X26
	005 Move [X31+72], X25
	006 Move [X31+80], X24
	007 Move [X31+88], X23
	008 Move [X31+96], X22
	009 Move [X31+104], X21
	010 Move [X31+112], X20
	011 Move [X31+120], X19
	012 Move X23, 0x947000
	013 Move W8, [X23+1005]
	014 Move W22, W4
	015 Move X21, X3
	016 Move X19, X2
	017 Move X20, X1
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {39}
	022 Move X0, 0x6BC000
	023 Move X0, [X0+328]
	024 Call 0x1C17CF4
	025 Move X0, 0x6BB000
	026 Move X0, [X0+440]
	027 Call 0x1C17CF4
	028 Move X0, 0x682000
	029 Move X0, [X0+328]
	030 Call 0x1C17CF4
	031 Move X0, 0x6B9000
	032 Move X0, [X0+1312]
	033 Call 0x1C17CF4
	034 Move X0, 0x682000
	035 Move X0, [X0+312]
	036 Call 0x1C17CF4
	037 Move W8, 1
	038 Move [X23+1005], W8
	039 Move X25, 0x6B9000
	040 Move X23, 0x6BC000
	041 Move X25, [X25+1312]
	042 Move X23, [X23+328]
	043 Move [X31+32], X31
	044 Move [X31+40], X31
	045 Move TEMP, X22
	046 And TEMP, TEMP, 1
	047 Compare TEMP, 1
	048 JumpIfNotEqual {86}
	049 Move X8, 0x682000
	050 Move X8, [X8+312]
	051 Add X0, X31, 32
	052 Move W1, 5
	053 Move W2, 2
	054 Move X4, [X8]
	055 Move W3, 1
	056 Call NativeArray`1<Int32>..ctor, X0, X1, X2, X3
	057 Move X4, [X25]
	058 Add X0, X31, 16
	059 Move W1, 5
	060 Move W2, 2
	061 Move W3, 1
	062 Move [X31+16], X31
	063 Move [X31+24], X31
	064 Call NativeArray`1<UInt16>..ctor, X0, X1, X2, X3
	065 Move V0, [X31+1]
	066 Move [X19], V0
	067 Move W24, [X21+8]
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Move X26, 0x6BB000
	070 Move X26, [X26+440]
	071 Move W22, W31
	072 Move X0, [X21]
	073 Move X1, [X21+8]
	074 Move X3, [X26]
	075 Move W2, W22
	076 Call 0x22232C0, X0, X1
	077 Move X1, X31
	078 Call VisibleLight.get_lightType, X0
	079 Move X8, [X19]
	080 Add W10, W22, 1
	081 And W22, W10, 0xFFFF
	082 NotImplemented "Instruction CMP not yet implemented."
	083 NotImplemented "Instruction LDRH not yet implemented."
	084 Add W9, W9, 1
	085 NotImplemented "Instruction STRH not yet implemented."
	086 Move X4, [X25]
	087 Add X0, X31, 16
	088 Move W2, 2
	089 Move W1, W31
	090 Move W3, W31
	091 Move [X31+16], X31
	092 Move [X31+24], X31
	093 Call NativeArray`1<UInt16>..ctor, X0, X1, X2, X3
	094 Move V0, [X31+1]
	095 Add X0, X31, 0
	096 Move W1, 5
	097 Move W2, 2
	098 Move [X20], V0
	099 Move X4, [X25]
	100 Move W3, W31
	101 Move [X31], X31
	102 Move [X31+8], X31
	103 Call NativeArray`1<UInt16>..ctor, X0, X1, X2, X3
	104 Move V0, [X31]
	105 Move X20, X31
	106 Move [X19], V0
	107 Move X0, [X23]
	108 Move W8, [X0+224]
	109 Compare W8, 0
	110 JumpIfNotEqual {113}
	111 Call 0x1C17DFC
	112 Move X0, [X23]
	113 Move X8, [X0+184]
	114 Move X9, [X19]
	115 NotImplemented "Instruction LDRH not yet implemented."
	116 NotImplemented "Instruction STRH not yet implemented."
	117 Add X20, X20, 2
	118 NotImplemented "Instruction CMP not yet implemented."
	119 Move X8, [X19]
	120 NotImplemented "Instruction LDRH not yet implemented."
	121 NotImplemented "Instruction LDRH not yet implemented."
	122 NotImplemented "Instruction LDRH not yet implemented."
	123 Move X4, [X25]
	124 Add X0, X31, 16
	125 Add W9, W10, W9
	126 Add W1, W9, W8
	127 Move W2, 2
	128 Move W3, W31
	129 Move [X31+16], X31
	130 Move [X31+24], X31
	131 Call NativeArray`1<UInt16>..ctor, X0, X1, X2, X3
	132 Move V0, [X31+1]
	133 Move [X20], V0
	134 Move W8, [X19+8]
	135 NotImplemented "Instruction CMP not yet implemented."
	136 Move X9, [X19]
	137 Move X22, X31
	138 Move W25, W31
	139 NotImplemented "Instruction LDRH not yet implemented."
	140 Compare W10, 0
	141 JumpIfEqual {144}
	142 NotImplemented "Instruction STRH not yet implemented."
	143 Add W25, W25, W10
	144 Move X0, [X23]
	145 Move W10, [X0+224]
	146 Compare W10, 0
	147 JumpIfNotEqual {152}
	148 Call 0x1C17DFC
	149 Move X0, [X23]
	150 Move X9, [X19]
	151 Move W8, [X19+8]
	152 Move X10, [X0+184]
	153 NotImplemented "Instruction LDRH not yet implemented."
	154 NotImplemented "Instruction STRH not yet implemented."
	155 Add X22, X22, 1
	156 NotImplemented "Instruction CMP not yet implemented."
	157 Move X25, 0x682000
	158 Move X25, [X25+328]
	159 NotImplemented "Instruction CMP not yet implemented."
	160 Move X26, 0x6BB000
	161 Move X26, [X26+440]
	162 Move W22, W31
	163 Move X0, [X21]
	164 Move X1, [X21+8]
	165 Move X3, [X26]
	166 Move W2, W22
	167 Call 0x22232C0, X0, X1
	168 Move X1, X31
	169 Move X23, X0
	170 Call VisibleLight.get_lightType, X0
	171 Move X8, [X31+32]
	172 Move X1, X31
	173 Move W27, [X8]
	174 Add W9, W27, 1
	175 Move [X8], W9
	176 Move X0, X23
	177 Call VisibleLight.get_lightType, X0
	178 Move X8, [X19]
	179 Move X9, [X20]
	180 Add W10, W22, 1
	181 NotImplemented "Instruction CMP not yet implemented."
	182 NotImplemented "Instruction LDRH not yet implemented."
	183 Add W8, W27, W8
	184 NotImplemented "Instruction STRH not yet implemented."
	185 And W22, W10, 0xFFFF
	186 Move X1, [X25]
	187 Add X0, X31, 32
	188 Call NativeArray`1<Int32>.Dispose, X0
	189 Move X20, [X31+112]
	190 Move X19, [X31+120]
	191 Move X22, [X31+96]
	192 Move X21, [X31+104]
	193 Move X24, [X31+80]
	194 Move X23, [X31+88]
	195 Move X26, [X31+64]
	196 Move X25, [X31+72]
	197 Move X30, [X31+48]
	198 Move X27, [X31+56]
	199 Add X31, X31, 128
	200 Return 

Method: System.Boolean HasStencilLightsOfType(UnityEngine.LightType type)

Disassembly:
	0x03A9E8D0 BL 0x3C5BC90
	0x03A9E8D4 LDP V0, V1, [X31 + 0x180]
	0x03A9E8D8 LDP V2, V3, [X31 + 0x1A0]
	0x03A9E8DC ADD X0, X31, 0x1C0
	0x03A9E8E0 MOVZ W1, 0x3
	0x03A9E8E4 MOV X2, X31
	0x03A9E8E8 STP V0, V1, [X31 + 0x1C0]
	0x03A9E8EC STP V2, V3, [X31 + 0x1E0]
	0x03A9E8F0 BL 0x3C27C24
	0x03A9E8F4 MOV X0, X24
	0x03A9E8F8 MOV X1, X31
	0x03A9E8FC MOV V8.16B, V0.16B
	0x03A9E900 MOV V9.16B, V1.16B
	0x03A9E904 MOV V10.16B, V2.16B
	0x03A9E908 BL 0x3C5BCAC
	0x03A9E90C MOV X0, X24
	0x03A9E910 MOV X1, X31
	0x03A9E914 MOV V11.16B, V0.16B
	0x03A9E918 BL 0x3C5BCAC
	0x03A9E91C MOV X0, X24
	0x03A9E920 MOV X1, X31
	0x03A9E924 MOV V12.16B, V0.16B
	0x03A9E928 BL 0x3C5BCAC
	0x03A9E92C STR S0, [X31 + 0x8]
	0x03A9E930 ADD X0, X31, 0x250
	0x03A9E934 FMOV S1, W31
	0x03A9E938 FMOV S2, W31
	0x03A9E93C FMOV S3, W31
	0x03A9E940 FMOV S4, W31
	0x03A9E944 FMOV S6, W31

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x945000
	007 Move X21, 0x6BA000
	008 Move W8, [X22+1006]
	009 Move X21, [X21+328]
	010 Move W19, W1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x6BA000
	017 Move X0, [X0+328]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+1006], W8
	021 Move X0, [X21]
	022 Move X8, [X20+136]
	023 Move W9, [X0+224]
	024 NotImplemented "Instruction LDRH not yet implemented."
	025 Compare W9, 0
	026 JumpIfNotEqual {29}
	027 Call 0x1C17DFC
	028 Move X0, [X21]
	029 Move X8, [X0+184]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 NotImplemented "Instruction LDRH not yet implemented."
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 NotImplemented "Instruction CSET not yet implemented."
	037 Move X30, [X31+48]
	038 Return X0

Method: System.Void RenderStencilLights(UnityEngine.Rendering.ScriptableRenderContext context, UnityEngine.Rendering.CommandBuffer cmd, ref UnityEngine.Rendering.Universal.RenderingData renderingData)

Disassembly:
	0x03A9EA8C B 0x3A9EAAC
	0x03A9EA90 LDR X2, [X31 + 0x30]
	0x03A9EA94 ADD X1, X31, 0x298
	0x03A9EA98 MOV W3, W31
	0x03A9EA9C BL 0x3A9F5A0
	0x03A9EAA0 MOV W27, W31
	0x03A9EAA4 B 0x3A9EAC4
	0x03A9EAA8 MOV W27, W31
	0x03A9EAAC MOV X20, X21
	0x03A9EAB0 MOV X21, X28
	0x03A9EAB4 MOV X28, X22
	0x03A9EAB8 ADRP X22, 0x6B8000
	0x03A9EABC LDR X22, [X22 + 0x1B8]
	0x03A9EAC0 MOVZ W26, 0x3F800000
	0x03A9EAC4 ADRP X8, 0x6B8000
	0x03A9EAC8 LDR X8, [X8 + 0xEC0]
	0x03A9EACC LDR X0, [X8]
	0x03A9EAD0 LDR W8, [X0 + 0xE0]
	0x03A9EAD4 CBNZ W8, 0x3A9EADC
	0x03A9EAD8 BL 0x1C16DFC
	0x03A9EADC MOV X0, X19
	0x03A9EAE0 MOV W1, W27
	0x03A9EAE4 MOV X2, X31
	0x03A9EAE8 BL 0x3A77E80
	0x03A9EAEC ADRP X27, 0x6B9000
	0x03A9EAF0 LDR X0, [X23 + 0xE8]
	0x03A9EAF4 LDR X27, [X27 + 0x748]
	0x03A9EAF8 CBZ X0, 0x3A9EB74
	0x03A9EAFC MOV W1, W25
	0x03A9EB00 MOV X2, X31
	0x03A9EB04 BL 0x3A54804
	0x03A9EB08 ADRP X8, 0x67D000
	0x03A9EB0C LDR X8, [X8 + 0x8F8]
	0x03A9EB10 MOV W25, W0
	0x03A9EB14 LDR X8, [X8]
	0x03A9EB18 LDR W9, [X8 + 0xE0]
	0x03A9EB1C CBNZ W9, 0x3A9EB28
	0x03A9EB20 MOV X0, X8
	0x03A9EB24 BL 0x1C16DFC
	0x03A9EB28 ADRP X8, 0x6B8000
	0x03A9EB2C LDR X8, [X8 + 0x170]
	0x03A9EB30 MOV X0, X19
	0x03A9EB34 MOV X3, X31
	0x03A9EB38 LDR X1, [X8]
	0x03A9EB3C ORN W8, W31, W25, 0x0
	0x03A9EB40 UBFM W2, W8, 0x1F, 0x1F
	0x03A9EB44 BL 0x39E9618
	0x03A9EB48 LDR X0, [X27]
	0x03A9EB4C LDR W8, [X0 + 0xE0]
	0x03A9EB50 CBNZ W8, 0x3A9EB58
	0x03A9EB54 BL 0x1C16DFC
	0x03A9EB58 LDR X8, [X27]
	0x03A9EB5C MOV X0, X19
	0x03A9EB60 MOV W2, W25
	0x03A9EB64 MOV X3, X31
	0x03A9EB68 LDR X8, [X8 + 0xB8]
	0x03A9EB6C LDR W1, [X8 + 0x9C]
	0x03A9EB70 BL 0x3C4CE30
	0x03A9EB74 LDR X0, [X27]
	0x03A9EB78 LDR W8, [X0 + 0xE0]
	0x03A9EB7C CBNZ W8, 0x3A9EB84
	0x03A9EB80 BL 0x1C16DFC
	0x03A9EB84 LDR X8, [X27]
	0x03A9EB88 LDR V3, [X31 + 0x24C]
	0x03A9EB8C LDR V2, [X31 + 0x248]
	0x03A9EB90 LDR V1, [X31 + 0x244]
	0x03A9EB94 LDR X8, [X8 + 0xB8]
	0x03A9EB98 LDR V0, [X31 + 0x240]
	0x03A9EB9C MOV X0, X19
	0x03A9EBA0 MOV X2, X31
	0x03A9EBA4 LDR W1, [X8 + 0x7C]
	0x03A9EBA8 LDR W8, [X31 + 0x38]
	0x03A9EBAC UBFM W25, W8, 0x1E, 0x1D
	0x03A9EBB0 BL 0x3C4CED8
	0x03A9EBB4 LDR X8, [X27]
	0x03A9EBB8 LDR V0, [X31 + 0x230]
	0x03A9EBBC LDR V1, [X31 + 0x234]
	0x03A9EBC0 LDR V2, [X31 + 0x238]
	0x03A9EBC4 LDR X8, [X8 + 0xB8]
	0x03A9EBC8 LDR V3, [X31 + 0x23C]
	0x03A9EBCC MOV X0, X19
	0x03A9EBD0 MOV X2, X31
	0x03A9EBD4 LDR W1, [X8 + 0x80]
	0x03A9EBD8 BL 0x3C4CED8
	0x03A9EBDC LDR X8, [X27]
	0x03A9EBE0 LDR V0, [X31 + 0x220]
	0x03A9EBE4 LDR V1, [X31 + 0x224]
	0x03A9EBE8 LDR V2, [X31 + 0x228]
	0x03A9EBEC LDR X8, [X8 + 0xB8]
	0x03A9EBF0 LDR V3, [X31 + 0x22C]
	0x03A9EBF4 MOV X0, X19
	0x03A9EBF8 MOV X2, X31
	0x03A9EBFC LDR W1, [X8 + 0x84]
	0x03A9EC00 BL 0x3C4CED8
	0x03A9EC04 LDR X8, [X27]
	0x03A9EC08 LDR V0, [X31 + 0x200]
	0x03A9EC0C LDR V1, [X31 + 0x204]
	0x03A9EC10 LDR V2, [X31 + 0x208]
	0x03A9EC14 LDR X8, [X8 + 0xB8]
	0x03A9EC18 LDR V3, [X31 + 0x20C]
	0x03A9EC1C MOV X0, X19
	0x03A9EC20 MOV X2, X31
	0x03A9EC24 LDR W1, [X8 + 0x88]
	0x03A9EC28 BL 0x3C4CED8
	0x03A9EC2C LDR X8, [X27]
	0x03A9EC30 MOV X0, X19
	0x03A9EC34 MOV W2, W25
	0x03A9EC38 MOV X3, X31
	0x03A9EC3C LDR X8, [X8 + 0xB8]
	0x03A9EC40 LDR W1, [X8 + 0x90]
	0x03A9EC44 BL 0x3C4CE30
	0x03A9EC48 LDR X8, [X27]
	0x03A9EC4C LDR W2, [X31 + 0x3C]
	0x03A9EC50 MOV X0, X19
	0x03A9EC54 MOV X3, X31
	0x03A9EC58 LDR X8, [X8 + 0xB8]
	0x03A9EC5C LDR W1, [X8 + 0x94]
	0x03A9EC60 BL 0x3C4CE30
	0x03A9EC64 LDR X8, [X27]
	0x03A9EC68 MOV X0, X19
	0x03A9EC6C MOV W2, W24
	0x03A9EC70 MOV X3, X31
	0x03A9EC74 LDR X8, [X8 + 0xB8]
	0x03A9EC78 LDR W1, [X8 + 0x98]
	0x03A9EC7C BL 0x3C4CE30
	0x03A9EC80 LDP V1, V0, [X31 + 0x270]
	0x03A9EC84 LDP V3, V2, [X31 + 0x250]
	0x03A9EC88 LDR X1, [X23 + 0xA0]
	0x03A9EC8C STP V1, V0, [X31 + 0x1A0]
	0x03A9EC90 STP V3, V2, [X31 + 0x180]
	0x03A9EC94 LDR X8, [X23 + 0xC0]
	0x03A9EC98 CBZ X8, 0x3A9EDCC
	0x03A9EC9C LDR W9, [X8 + 0x18]
	0x03A9ECA0 CBZ W9, 0x3A9EDD0
	0x03A9ECA4 LDR X3, [X23 + 0xB8]
	0x03A9ECA8 LDR W5, [X8 + 0x20]
	0x03A9ECAC LDP V0, V1, [X31 + 0x180]
	0x03A9ECB0 LDP V2, V3, [X31 + 0x1A0]
	0x03A9ECB4 ADD X2, X31, 0x140
	0x03A9ECB8 MOV X0, X19
	0x03A9ECBC MOV W4, W31
	0x03A9ECC0 MOV X6, X31
	0x03A9ECC4 STP V0, V1, [X31 + 0x140]
	0x03A9ECC8 STP V2, V3, [X31 + 0x160]
	0x03A9ECCC BL 0x3C4F070
	0x03A9ECD0 LDP V1, V0, [X31 + 0x270]
	0x03A9ECD4 LDP V3, V2, [X31 + 0x250]
	0x03A9ECD8 LDR X1, [X23 + 0xA0]
	0x03A9ECDC STP V1, V0, [X31 + 0x120]
	0x03A9ECE0 STP V3, V2, [X31 + 0x100]
	0x03A9ECE4 LDR X8, [X23 + 0xC0]
	0x03A9ECE8 CBZ X8, 0x3A9EDCC
	0x03A9ECEC LDR W9, [X8 + 0x18]
	0x03A9ECF0 CMP W9, 0x1
	0x03A9ECF4 B.LS 0x3A9EDD0
	0x03A9ECF8 LDR X3, [X23 + 0xB8]
	0x03A9ECFC LDR W5, [X8 + 0x24]
	0x03A9ED00 LDP V0, V1, [X31 + 0x100]
	0x03A9ED04 LDP V2, V3, [X31 + 0x120]
	0x03A9ED08 ADD X2, X31, 0xC0
	0x03A9ED0C MOV X0, X19
	0x03A9ED10 MOV W4, W31
	0x03A9ED14 MOV X6, X31
	0x03A9ED18 STP V0, V1, [X31 + 0xC0]
	0x03A9ED1C STP V2, V3, [X31 + 0xE0]
	0x03A9ED20 BL 0x3C4F070
	0x03A9ED24 LDP V1, V0, [X31 + 0x270]
	0x03A9ED28 LDP V3, V2, [X31 + 0x250]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X22, 0x945000
	009 Move W8, [X22+1007]
	010 Move X20, X3
	011 Move X21, X2
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {31}
	017 Move X0, 0x656000
	018 Move X0, [X0+2600]
	019 Call 0x1C17CF4
	020 Move X0, 0x656000
	021 Move X0, [X0+2512]
	022 Call 0x1C17CF4
	023 Move X0, 0x656000
	024 Move X0, [X0+1432]
	025 Call 0x1C17CF4
	026 Move X0, 0x6BA000
	027 Move X0, [X0+1904]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X22+1007], W8
	031 Move [X31+8], W31
	032 Move W8, [X19+128]
	033 Compare W8, 0
	034 JumpIfEqual {156}
	035 Move X8, 0x656000
	036 Move X8, [X8+1432]
	037 Move X22, [X19+184]
	038 Move X0, [X8]
	039 Move W8, [X0+224]
	040 Compare W8, 0
	041 JumpIfNotEqual {43}
	042 Call 0x1C17DFC
	043 Move X0, X22
	044 Move X1, X31
	045 Move X2, X31
	046 Call Object.op_Equality, X0, X1
	047 Move TEMP, X0
	048 And TEMP, TEMP, 1
	049 Compare TEMP, 1
	050 JumpIfNotEqual {106}
	051 Move X8, 0x656000
	052 Move X8, [X8+2512]
	053 Move W1, 2
	054 Move X0, [X8]
	055 Call 0x1C17D6C
	056 Compare X0, 0
	057 JumpIfEqual {164}
	058 Move X21, [X19+184]
	059 Move X20, X0
	060 Compare X21, 0
	061 JumpIfEqual {68}
	062 Move X8, [X20]
	063 Move X0, X21
	064 Move X1, [X8+64]
	065 Call 0x1C17E00
	066 Compare X0, 0
	067 JumpIfEqual {166}
	068 Move W8, [X20+24]
	069 Compare W8, 0
	070 JumpIfEqual {165}
	071 Move X0, X19
	072 Move X1, X31
	073 Move [X20+32], X21
	074 Call "il2cpp_vm_object_is_inst", X0
	075 Compare X0, 0
	076 JumpIfEqual {164}
	077 Move X8, [X0]
	078 Move X9, [X8+424]
	079 Move X1, [X8+432]
	080 NotImplemented "Instruction BLR not yet implemented."
	081 Move X19, X0
	082 Compare X0, 0
	083 JumpIfEqual {90}
	084 Move X8, [X20]
	085 Move X0, X19
	086 Move X1, [X8+64]
	087 Call 0x1C17E00
	088 Compare X0, 0
	089 JumpIfEqual {166}
	090 Move W8, [X20+24]
	091 NotImplemented "Instruction CMP not yet implemented."
	092 Move [X20+40], X19
	093 Move X8, 0x656000
	094 Move X8, [X8+2600]
	095 Move X0, [X8]
	096 Move W8, [X0+224]
	097 Compare W8, 0
	098 JumpIfNotEqual {100}
	099 Call 0x1C17DFC
	100 Move X8, 0x6BA000
	101 Move X8, [X8+1904]
	102 Move X1, X20
	103 Move X2, X31
	104 Move X0, [X8]
	105 Call Debug.LogErrorFormat, X0, X1
	106 Move X2, [X19+208]
	107 Add X0, X31, 8
	108 Move X1, X21
	109 Move X3, X31
	110 Call ProfilingScope..ctor, X0, X1, X2
	111 Move X22, [X20+568]
	112 Move X23, [X20+576]
	113 Move W1, 1
	114 Move X0, X19
	115 Call DeferredLights.HasStencilLightsOfType, X0, X1
	116 Move TEMP, X0
	117 And TEMP, TEMP, 1
	118 Compare TEMP, 1
	119 JumpIfNotEqual {127}
	120 Move W5, [X20+552]
	121 Move X0, X19
	122 Move X1, X21
	123 Move X2, X20
	124 Move X3, X22
	125 Move X4, X23
	126 Call DeferredLights.RenderStencilDirectionalLights, X0, X1, X2, X3, X4
	127 Move W1, 2
	128 Move X0, X19
	129 Call DeferredLights.HasStencilLightsOfType, X0, X1
	130 Move TEMP, X0
	131 And TEMP, TEMP, 1
	132 Compare TEMP, 1
	133 JumpIfNotEqual {140}
	134 Move X0, X19
	135 Move X1, X21
	136 Move X2, X20
	137 Move X3, X22
	138 Move X4, X23
	139 Call DeferredLights.RenderStencilPointLights, X0, X1, X2, X3
	140 Move X0, X19
	141 Move W1, W31
	142 Call DeferredLights.HasStencilLightsOfType, X0, X1
	143 Move TEMP, X0
	144 And TEMP, TEMP, 1
	145 Compare TEMP, 1
	146 JumpIfNotEqual {153}
	147 Move X0, X19
	148 Move X1, X21
	149 Move X2, X20
	150 Move X3, X22
	151 Move X4, X23
	152 Call DeferredLights.RenderStencilSpotLights, X0, X1, X2, X3
	153 Add X0, X31, 8
	154 Move X1, X31
	155 Call ProfilingScope.Dispose, X0
	156 Move X20, [X31+48]
	157 Move X19, [X31+56]
	158 Move X22, [X31+32]
	159 Move X21, [X31+40]
	160 Move X30, [X31+16]
	161 Move X23, [X31+24]
	162 Add X31, X31, 64
	163 Return 
	164 Call 0x1C17F20
	165 Call 0x1C17F28
	166 Call 0x1C17F44
	167 Move X1, X31
	168 Call 0x1C17DEC
	169 Move X19, X0
	170 NotImplemented "Instruction CMP not yet implemented."
	171 Move X0, X19
	172 Call 0x3EB2AD0
	173 Move X20, [X0]
	174 Call 0x3EB2AE0
	175 Add X0, X31, 8
	176 Move X1, X31
	177 Call ProfilingScope.Dispose, X0
	178 Compare X20, 0
	179 JumpIfEqual {156}
	180 Move X0, X20
	181 Call 0x1C17F18
	182 Move X20, X31
	183 Move X19, X0
	184 Add X0, X31, 8
	185 Move X1, X31
	186 Call ProfilingScope.Dispose, X0
	187 Compare X20, 0
	188 JumpIfNotEqual {191}
	189 Move X0, X19
	190 Call 0x1D2D690
	191 Move X0, X20
	192 Call 0x1C17F18
	193 Call 0x1991590

Method: System.Void SetAdditionalLightsShadowsKeyword(ref UnityEngine.Rendering.CommandBuffer cmd, ref UnityEngine.Rendering.Universal.RenderingData renderingData, System.Boolean hasDeferredShadows)

Disassembly:
	0x03AA05A0 LDR X8, [X21]
	0x03AA05A4 LDR X8, [X8 + 0xB8]
	0x03AA05A8 STR X20, [X8 + 0x50]
	0x03AA05AC LDR X0, [X22]
	0x03AA05B0 LDR X19, [X8 + 0x20]
	0x03AA05B4 BL 0x1C16F10
	0x03AA05B8 MOV X1, X19
	0x03AA05BC MOV X2, X31
	0x03AA05C0 MOV X20, X0
	0x03AA05C4 BL 0x39B19AC
	0x03AA05C8 LDR X8, [X21]
	0x03AA05CC LDR X8, [X8 + 0xB8]
	0x03AA05D0 STR X20, [X8 + 0x58]
	0x03AA05D4 LDR X0, [X22]
	0x03AA05D8 LDR X19, [X8 + 0x40]
	0x03AA05DC BL 0x1C16F10
	0x03AA05E0 MOV X1, X19
	0x03AA05E4 MOV X2, X31
	0x03AA05E8 MOV X20, X0
	0x03AA05EC BL 0x39B19AC
	0x03AA05F0 LDR X8, [X21]
	0x03AA05F4 LDP X22, X21, [X31 + 0x10]
	0x03AA05F8 LDR X8, [X8 + 0xB8]
	0x03AA05FC STR X20, [X8 + 0x60]
	0x03AA0600 LDP X20, X19, [X31 + 0x20]
	0x03AA0604 LDR X30, [X31], #0x30
	0x03AA0608 RET
	0x03AA060C BL 0x1C16F28
	0x03AA0610 BL 0x1C16F20
	0x03AA0614 STP X29, X30, [X31 - 0x60]!
	0x03AA0618 STP X28, X27, [X31 + 0x10]
	0x03AA061C STP X26, X25, [X31 + 0x20]
	0x03AA0620 STP X24, X23, [X31 + 0x30]
	0x03AA0624 STP X22, X21, [X31 + 0x40]
	0x03AA0628 STP X20, X19, [X31 + 0x50]
	0x03AA062C ADRP X29, 0x942000
	0x03AA0630 ADRP X20, 0x6B7000
	0x03AA0634 ADRP X19, 0x6B7000
	0x03AA0638 ADRP X28, 0x6B7000
	0x03AA063C ADRP X27, 0x6B7000
	0x03AA0640 ADRP X26, 0x6B7000
	0x03AA0644 ADRP X25, 0x6B7000
	0x03AA0648 ADRP X24, 0x6B7000
	0x03AA064C ADRP X23, 0x6B6000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x943000
	008 Move W8, [X22+1008]
	009 Move W19, W3
	010 Move X20, X2
	011 Move X21, X1
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x67C000
	017 Move X0, [X0+2296]
	018 Call 0x1C17CF4
	019 Move X0, 0x6B6000
	020 Move X0, [X0+3992]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+1008], W8
	024 Move X8, [X20+464]
	025 Compare X8, 0
	026 JumpIfEqual {56}
	027 Move X9, 0x67C000
	028 Move X9, [X9+2296]
	029 Move W23, [X20+625]
	030 Move X20, [X21]
	031 Move X21, 0x6B6000
	032 Move X0, [X9]
	033 Move W22, [X8+422]
	034 Move W8, [X0+224]
	035 Move X21, [X21+3992]
	036 Compare W8, 0
	037 JumpIfNotEqual {39}
	038 Call 0x1C17DFC
	039 NotImplemented "Instruction CMP not yet implemented."
	040 NotImplemented "Instruction CSET not yet implemented."
	041 NotImplemented "Instruction CMP not yet implemented."
	042 NotImplemented "Instruction CSET not yet implemented."
	043 Move X1, [X21]
	044 Or W9, W9, W19
	045 Move X0, X20
	046 Move X20, [X31+32]
	047 Move X19, [X31+40]
	048 Move X22, [X31+16]
	049 Move X21, [X31+24]
	050 And W2, W8, W9
	051 Move X3, X31
	052 Move X30, [X31+48]
	053 Move X23, [X31+56]
	054 Call CoreUtils.SetKeyword, X0, X1, X2
	055 Return 
	056 Call 0x1C17F20

Method: System.Void RenderStencilDirectionalLights(UnityEngine.Rendering.CommandBuffer cmd, ref UnityEngine.Rendering.Universal.RenderingData renderingData, Unity.Collections.NativeArray`1<UnityEngine.Rendering.VisibleLight> visibleLights, System.Int32 mainLightIndex)

Disassembly:
	0x03A9F0C0 BL 0x3C38948
	0x03A9F0C4 TBZ X0, 0x0, 0x3A9F110
	0x03A9F0C8 MOV X0, X27
	0x03A9F0CC MOV X1, X31
	0x03A9F0D0 BL 0x3C16B90
	0x03A9F0D4 CBZ W0, 0x3A9F110
	0x03A9F0D8 ORN W8, W31, W25, 0x0
	0x03A9F0DC UBFM W3, W8, 0x1F, 0x1F
	0x03A9F0E0 ADD X1, X31, 0x248
	0x03A9F0E4 MOV X2, X28
	0x03A9F0E8 BL 0x3A9F5A0
	0x03A9F0EC TBNZ X25, 0x1F, 0x3A9F120
	0x03A9F0F0 LDRB W8, [X28 + 0x27C]
	0x03A9F0F4 CBZ W8, 0x3A9F120
	0x03A9F0F8 MOV X0, X27
	0x03A9F0FC MOV X1, X31
	0x03A9F100 BL 0x3C16B90
	0x03A9F104 CMP W0, 0x2
	0x03A9F108 CSET W27, EQ
	0x03A9F10C B 0x3A9F124
	0x03A9F110 ADD X1, X31, 0x248
	0x03A9F114 MOV X2, X28
	0x03A9F118 MOV W3, W31
	0x03A9F11C BL 0x3A9F5A0
	0x03A9F120 MOV W27, W31
	0x03A9F124 ADRP X8, 0x6B7000
	0x03A9F128 LDR X8, [X8 + 0xEC0]
	0x03A9F12C LDR X28, [X31 + 0x248]
	0x03A9F130 LDR X0, [X8]
	0x03A9F134 LDR W8, [X0 + 0xE0]
	0x03A9F138 CBNZ W8, 0x3A9F140
	0x03A9F13C BL 0x1C16DFC
	0x03A9F140 MOV X0, X28
	0x03A9F144 MOV W1, W27
	0x03A9F148 MOV X2, X31
	0x03A9F14C BL 0x3A77E80
	0x03A9F150 LDR X0, [X22 + 0xE8]
	0x03A9F154 LDR X28, [X31 + 0x20]
	0x03A9F158 CBZ X0, 0x3A9F1E0
	0x03A9F15C MOV W1, W26
	0x03A9F160 MOV X2, X31
	0x03A9F164 BL 0x3A54804
	0x03A9F168 ADRP X8, 0x67C000
	0x03A9F16C LDR X8, [X8 + 0x8F8]
	0x03A9F170 LDR X27, [X31 + 0x248]
	0x03A9F174 MOV W26, W0
	0x03A9F178 LDR X8, [X8]
	0x03A9F17C LDR W9, [X8 + 0xE0]
	0x03A9F180 CBNZ W9, 0x3A9F18C
	0x03A9F184 MOV X0, X8
	0x03A9F188 BL 0x1C16DFC
	0x03A9F18C ADRP X8, 0x6B7000
	0x03A9F190 LDR X8, [X8 + 0x170]
	0x03A9F194 MOV X0, X27
	0x03A9F198 MOV X3, X31
	0x03A9F19C LDR X1, [X8]
	0x03A9F1A0 ORN W8, W31, W26, 0x0
	0x03A9F1A4 UBFM W2, W8, 0x1F, 0x1F
	0x03A9F1A8 BL 0x39E9618
	0x03A9F1AC LDR X0, [X19]
	0x03A9F1B0 LDR X27, [X31 + 0x248]
	0x03A9F1B4 LDR W8, [X0 + 0xE0]
	0x03A9F1B8 CBNZ W8, 0x3A9F1C0
	0x03A9F1BC BL 0x1C16DFC
	0x03A9F1C0 CBZ X27, 0x3A9F598
	0x03A9F1C4 LDR X8, [X19]
	0x03A9F1C8 MOV X0, X27
	0x03A9F1CC MOV W2, W26
	0x03A9F1D0 MOV X3, X31
	0x03A9F1D4 LDR X8, [X8 + 0xB8]
	0x03A9F1D8 LDR W1, [X8 + 0x9C]
	0x03A9F1DC BL 0x3C4CE30
	0x03A9F1E0 LDR X0, [X19]
	0x03A9F1E4 LDR X26, [X31 + 0x248]
	0x03A9F1E8 LDR W8, [X0 + 0xE0]
	0x03A9F1EC CBNZ W8, 0x3A9F1F8
	0x03A9F1F0 BL 0x1C16DFC
	0x03A9F1F4 LDR X0, [X19]
	0x03A9F1F8 LDR X8, [X0 + 0xB8]
	0x03A9F1FC MOV X0, X23
	0x03A9F200 MOV X1, X31
	0x03A9F204 LDR W27, [X8 + 0x70]
	0x03A9F208 BL 0x3C5BCAC
	0x03A9F20C CBZ X26, 0x3A9F598
	0x03A9F210 MOV V3.16B, V0.16B
	0x03A9F214 FSUB S2, S11, S8
	0x03A9F218 MOV X0, X26
	0x03A9F21C MOV W1, W27
	0x03A9F220 MOV V0.16B, V9.16B
	0x03A9F224 MOV V1.16B, V9.16B
	0x03A9F228 MOV X2, X31
	0x03A9F22C BL 0x3C4CED8
	0x03A9F230 LDR X0, [X31 + 0x248]
	0x03A9F234 CBZ X0, 0x3A9F598
	0x03A9F238 LDR X8, [X19]
	0x03A9F23C FMOV S0, W31
	0x03A9F240 FMOV S1, W31
	0x03A9F244 FMOV S3, W31
	0x03A9F248 LDR X8, [X8 + 0xB8]
	0x03A9F24C MOV V2.16B, V8.16B
	0x03A9F250 MOV X2, X31
	0x03A9F254 LDR W1, [X8 + 0x74]
	0x03A9F258 BL 0x3C4CED8
	0x03A9F25C LDR X8, [X19]
	0x03A9F260 LDR X27, [X31 + 0x248]
	0x03A9F264 MOV X0, X23
	0x03A9F268 MOV X1, X31
	0x03A9F26C LDR X8, [X8 + 0xB8]
	0x03A9F270 LDR W26, [X8 + 0x78]
	0x03A9F274 BL 0x3C5BCAC
	0x03A9F278 CBZ X27, 0x3A9F598
	0x03A9F27C FADD S1, S15, S13
	0x03A9F280 FMUL S1, S10, S1
	0x03A9F284 FADD S1, S1, S11
	0x03A9F288 FMUL S3, S8, S0
	0x03A9F28C MOV X0, X27
	0x03A9F290 MOV W1, W26
	0x03A9F294 MOV V0.16B, V1.16B
	0x03A9F298 MOV V2.16B, V1.16B
	0x03A9F29C MOV X2, X31
	0x03A9F2A0 BL 0x3C4CED8
	0x03A9F2A4 LDR X0, [X31 + 0x248]
	0x03A9F2A8 CBZ X0, 0x3A9F598
	0x03A9F2AC LDR X8, [X19]
	0x03A9F2B0 LDR V3, [X31 + 0x244]
	0x03A9F2B4 LDR V2, [X31 + 0x240]
	0x03A9F2B8 LDR V1, [X31 + 0x23C]
	0x03A9F2BC LDR X8, [X8 + 0xB8]
	0x03A9F2C0 LDR V0, [X31 + 0x238]
	0x03A9F2C4 MOV X2, X31
	0x03A9F2C8 LDR W1, [X8 + 0x7C]
	0x03A9F2CC BL 0x3C4CED8
	0x03A9F2D0 LDR X0, [X31 + 0x248]
	0x03A9F2D4 CBZ X0, 0x3A9F598
	0x03A9F2D8 LDR X8, [X19]
	0x03A9F2DC LDR V3, [X31 + 0x234]
	0x03A9F2E0 LDR V2, [X31 + 0x230]
	0x03A9F2E4 LDR V1, [X31 + 0x22C]
	0x03A9F2E8 LDR X8, [X8 + 0xB8]
	0x03A9F2EC LDR V0, [X31 + 0x228]
	0x03A9F2F0 MOV X2, X31
	0x03A9F2F4 LDR W1, [X8 + 0x80]
	0x03A9F2F8 BL 0x3C4CED8
	0x03A9F2FC LDR X0, [X31 + 0x248]
	0x03A9F300 CBZ X0, 0x3A9F598
	0x03A9F304 LDR X8, [X19]
	0x03A9F308 LDR V3, [X31 + 0x224]
	0x03A9F30C LDR V2, [X31 + 0x220]
	0x03A9F310 LDR V1, [X31 + 0x21C]
	0x03A9F314 LDR X8, [X8 + 0xB8]
	0x03A9F318 LDR V0, [X31 + 0x218]
	0x03A9F31C MOV X2, X31
	0x03A9F320 LDR W1, [X8 + 0x84]
	0x03A9F324 BL 0x3C4CED8
	0x03A9F328 LDR X0, [X31 + 0x248]
	0x03A9F32C CBZ X0, 0x3A9F598
	0x03A9F330 LDR X8, [X19]
	0x03A9F334 LDR V2, [X31 + 0x210]
	0x03A9F338 LDR V1, [X31 + 0x20C]
	0x03A9F33C LDR V0, [X31 + 0x208]
	0x03A9F340 LDR X8, [X8 + 0xB8]
	0x03A9F344 FMOV S3, W31
	0x03A9F348 MOV X2, X31
	0x03A9F34C LDR W1, [X8 + 0x8C]
	0x03A9F350 BL 0x3C4CED8
	0x03A9F354 LDR X0, [X31 + 0x248]
	0x03A9F358 CBZ X0, 0x3A9F598
	0x03A9F35C LDR X8, [X19]
	0x03A9F360 LDR V3, [X31 + 0x204]
	0x03A9F364 LDR V2, [X31 + 0x200]
	0x03A9F368 LDR V1, [X31 + 0x1FC]
	0x03A9F36C LDR X8, [X8 + 0xB8]
	0x03A9F370 LDR V0, [X31 + 0x1F8]
	0x03A9F374 MOV X2, X31
	0x03A9F378 LDR W1, [X8 + 0x88]
	0x03A9F37C BL 0x3C4CED8
	0x03A9F380 LDR X0, [X31 + 0x248]
	0x03A9F384 CBZ X0, 0x3A9F598
	0x03A9F388 LDR X8, [X19]
	0x03A9F38C UBFM W2, W20, 0x1E, 0x1D
	0x03A9F390 MOV X3, X31
	0x03A9F394 LDR X8, [X8 + 0xB8]
	0x03A9F398 LDR W1, [X8 + 0x90]
	0x03A9F39C BL 0x3C4CE30
	0x03A9F3A0 LDR X0, [X31 + 0x248]
	0x03A9F3A4 CBZ X0, 0x3A9F598
	0x03A9F3A8 LDR X8, [X19]
	0x03A9F3AC MOV W2, W25
	0x03A9F3B0 MOV X3, X31
	0x03A9F3B4 LDR X8, [X8 + 0xB8]
	0x03A9F3B8 LDR W1, [X8 + 0x94]
	0x03A9F3BC BL 0x3C4CE30
	0x03A9F3C0 LDR X0, [X31 + 0x248]
	0x03A9F3C4 CBZ X0, 0x3A9F598
	0x03A9F3C8 LDR X8, [X19]
	0x03A9F3CC MOV W2, W24
	0x03A9F3D0 MOV X3, X31
	0x03A9F3D4 LDR X8, [X8 + 0xB8]
	0x03A9F3D8 LDR W1, [X8 + 0x98]
	0x03A9F3DC BL 0x3C4CE30
	0x03A9F3E0 LDR X24, [X31 + 0x248]
	0x03A9F3E4 LDR X25, [X22 + 0xA8]
	0x03A9F3E8 ADD X8, X31, 0x170
	0x03A9F3EC MOV X0, X23
	0x03A9F3F0 MOV X1, X31
	0x03A9F3F4 BL 0x3C5BC90
	0x03A9F3F8 LDP V0, V1, [X21 + 0xC0]
	0x03A9F3FC LDP V2, V3, [X21 + 0xE0]
	0x03A9F400 STP V0, V1, [X21 + 0x100]
	0x03A9F404 STP V2, V3, [X21 + 0x120]
	0x03A9F408 LDR X8, [X22 + 0xC0]
	0x03A9F40C CBZ X8, 0x3A9F598
	0x03A9F410 LDR W9, [X8 + 0x18]
	0x03A9F414 CBZ W9, 0x3A9F59C
	0x03A9F418 CBZ X24, 0x3A9F598
	0x03A9F41C LDR X3, [X22 + 0xB8]
	0x03A9F420 LDR W5, [X8 + 0x20]
	0x03A9F424 LDP V0, V1, [X21 + 0x100]
	0x03A9F428 LDP V2, V3, [X21 + 0x120]
	0x03A9F42C ADD X2, X31, 0x130
	0x03A9F430 MOV X0, X24
	0x03A9F434 MOV X1, X25
	0x03A9F438 MOV W4, W31
	0x03A9F43C MOV X6, X31
	0x03A9F440 STP V0, V1, [X21 + 0x80]
	0x03A9F444 STP V2, V3, [X21 + 0xA0]
	0x03A9F448 BL 0x3C4F070
	0x03A9F44C LDR X24, [X31 + 0x248]
	0x03A9F450 LDR X25, [X22 + 0xA8]
	0x03A9F454 ADD X8, X31, 0xF0
	0x03A9F458 MOV X0, X23
	0x03A9F45C MOV X1, X31
	0x03A9F460 BL 0x3C5BC90
	0x03A9F464 LDP V0, V1, [X21 + 0x40]
	0x03A9F468 LDP V2, V3, [X21 + 0x60]
	0x03A9F46C STP V0, V1, [X21 + 0xC0]
	0x03A9F470 STP V2, V3, [X21 + 0xE0]
	0x03A9F474 LDR X8, [X22 + 0xC0]
	0x03A9F478 CBZ X8, 0x3A9F598
	0x03A9F47C LDR W9, [X8 + 0x18]
	0x03A9F480 CMP W9, 0x1
	0x03A9F484 B.LS 0x3A9F59C
	0x03A9F488 CBZ X24, 0x3A9F598
	0x03A9F48C LDR X3, [X22 + 0xB8]
	0x03A9F490 LDR W5, [X8 + 0x24]
	0x03A9F494 LDP V0, V1, [X21 + 0xC0]
	0x03A9F498 LDP V2, V3, [X21 + 0xE0]
	0x03A9F49C ADD X2, X31, 0xB0
	0x03A9F4A0 MOV X0, X24
	0x03A9F4A4 MOV X1, X25
	0x03A9F4A8 MOV W4, W31
	0x03A9F4AC MOV X6, X31
	0x03A9F4B0 STP V0, V1, [X21]
	0x03A9F4B4 STP V2, V3, [X21 + 0x20]
	0x03A9F4B8 BL 0x3C4F070
	0x03A9F4BC LDR X24, [X31 + 0x248]
	0x03A9F4C0 LDR X25, [X22 + 0xA8]
	0x03A9F4C4 ADD X8, X31, 0x70
	0x03A9F4C8 MOV X0, X23
	0x03A9F4CC MOV X1, X31
	0x03A9F4D0 BL 0x3C5BC90
	0x03A9F4D4 LDP V0, V1, [X31 + 0x70]
	0x03A9F4D8 LDP V2, V3, [X31 + 0x90]
	0x03A9F4DC STP V0, V1, [X21 + 0x40]
	0x03A9F4E0 STP V2, V3, [X21 + 0x60]
	0x03A9F4E4 LDR X8, [X22 + 0xC0]
	0x03A9F4E8 CBZ X8, 0x3A9F598
	0x03A9F4EC LDR W9, [X8 + 0x18]
	0x03A9F4F0 CMP W9, 0x2
	0x03A9F4F4 B.LS 0x3A9F59C
	0x03A9F4F8 CBZ X24, 0x3A9F598
	0x03A9F4FC LDR X3, [X22 + 0xB8]
	0x03A9F500 LDR W5, [X8 + 0x28]
	0x03A9F504 LDP V0, V1, [X21 + 0x40]
	0x03A9F508 LDP V2, V3, [X21 + 0x60]
	0x03A9F50C ADD X2, X31, 0x30
	0x03A9F510 MOV X0, X24
	0x03A9F514 MOV X1, X25
	0x03A9F518 MOV W4, W31
	0x03A9F51C MOV X6, X31
	0x03A9F520 STP V0, V1, [X31 + 0x30]
	0x03A9F524 STP V2, V3, [X31 + 0x50]
	0x03A9F528 BL 0x3C4F070
	0x03A9F52C LDRSW X8, [X22 + 0x80]
	0x03A9F530 ADRP X24, 0x6B8000
	0x03A9F534 LDP X25, X20, [X31 + 0x10]
	0x03A9F538 LDR X24, [X24 + 0x148]
	0x03A9F53C ADD X29, X29, 0x1
	0x03A9F540 CMP X29, X8
	0x03A9F544 B.LT 0x3A9EF6C
	0x03A9F548 ADRP X19, 0x6B8000
	0x03A9F54C LDR X23, [X31 + 0x248]
	0x03A9F550 LDR X19, [X19 + 0x798]
	0x03A9F554 CBZ X23, 0x3A9F598
	0x03A9F558 LDR X1, [X19]
	0x03A9F55C MOV X0, X23
	0x03A9F560 MOV X2, X31
	0x03A9F564 BL 0x3C4D124
	0x03A9F568 ADD X31, X31, 0x250
	0x03A9F56C LDP X20, X19, [X31 + 0x90]
	0x03A9F570 LDP X22, X21, [X31 + 0x80]
	0x03A9F574 LDP X24, X23, [X31 + 0x70]
	0x03A9F578 LDP X26, X25, [X31 + 0x60]
	0x03A9F57C LDP X28, X27, [X31 + 0x50]
	0x03A9F580 LDP X29, X30, [X31 + 0x40]
	0x03A9F584 LDP D9, D8, [X31 + 0x30]
	0x03A9F588 LDP D11, D10, [X31 + 0x20]
	0x03A9F58C LDP D13, D12, [X31 + 0x10]
	0x03A9F590 LDP D15, D14, [X31], #0xA0
	0x03A9F594 RET
	0x03A9F598 BL 0x1C16F20
	0x03A9F59C BL 0x1C16F28
	0x03A9F5A0 STP X30, X23, [X31 - 0x30]!
	0x03A9F5A4 STP X22, X21, [X31 + 0x10]
	0x03A9F5A8 STP X20, X19, [X31 + 0x20]
	0x03A9F5AC ADRP X22, 0x943000
	0x03A9F5B0 LDRB W8, [X22 + 0x3F0]
	0x03A9F5B4 MOV W19, W3
	0x03A9F5B8 MOV X20, X2
	0x03A9F5BC MOV X21, X1
	0x03A9F5C0 TBNZ X8, 0x0, 0x3A9F5E4
	0x03A9F5C4 ADRP X0, 0x67C000
	0x03A9F5C8 LDR X0, [X0 + 0x8F8]
	0x03A9F5CC BL 0x1C16CF4
	0x03A9F5D0 ADRP X0, 0x6B6000
	0x03A9F5D4 LDR X0, [X0 + 0xF98]
	0x03A9F5D8 BL 0x1C16CF4
	0x03A9F5DC MOVZ W8, 0x1
	0x03A9F5E0 STRB W8, [X22 + 0x3F0]
	0x03A9F5E4 LDR X8, [X20 + 0x1D0]
	0x03A9F5E8 CBZ X8, 0x3A9F64C
	0x03A9F5EC ADRP X9, 0x67C000
	0x03A9F5F0 LDR X9, [X9 + 0x8F8]
	0x03A9F5F4 LDRB W23, [X20 + 0x271]
	0x03A9F5F8 LDR X20, [X21]
	0x03A9F5FC ADRP X21, 0x6B6000
	0x03A9F600 LDR X0, [X9]
	0x03A9F604 LDRB W22, [X8 + 0x1A6]
	0x03A9F608 LDR W8, [X0 + 0xE0]
	0x03A9F60C LDR X21, [X21 + 0xF98]
	0x03A9F610 CBNZ W8, 0x3A9F618
	0x03A9F614 BL 0x1C16DFC
	0x03A9F618 CMP W23, 0x0
	0x03A9F61C CSET W8, NE
	0x03A9F620 CMP W22, 0x0
	0x03A9F624 CSET W9, NE
	0x03A9F628 LDR X1, [X21]
	0x03A9F62C ORR W9, W9, W19, 0x0
	0x03A9F630 MOV X0, X20
	0x03A9F634 LDP X20, X19, [X31 + 0x20]
	0x03A9F638 LDP X22, X21, [X31 + 0x10]
	0x03A9F63C AND W2, W8, W9, 0x0
	0x03A9F640 MOV X3, X31
	0x03A9F644 LDP X30, X23, [X31], #0x30
	0x03A9F648 B 0x39E9618
	0x03A9F64C BL 0x1C16F20
	0x03A9F650 STR X30, [X31 - 0x10]!
	0x03A9F654 TBNZ X1, 0x1F, 0x3A9F67C
	0x03A9F658 LDR X8, [X0 + 0x110]
	0x03A9F65C CBZ X8, 0x3A9F688
	0x03A9F660 LDR W9, [X8 + 0x18]
	0x03A9F664 CMP W9, W1
	0x03A9F668 B.LE 0x3A9F67C
	0x03A9F66C B.LS 0x3A9F68C
	0x03A9F670 ADD X8, X8, W1, 0x2, UXTW
	0x03A9F674 LDR W0, [X8 + 0x20]
	0x03A9F678 B 0x3A9F680
	0x03A9F67C MOVN W0, 0x0
	0x03A9F680 LDR X30, [X31], #0x10
	0x03A9F684 RET
	0x03A9F688 BL 0x1C16F20
	0x03A9F68C BL 0x1C16F28
	0x03A9F690 STP X30, X21, [X31 - 0x20]!
	0x03A9F694 STP X20, X19, [X31 + 0x10]
	0x03A9F698 ADRP X19, 0x943000
	0x03A9F69C ADRP X20, 0x656000
	0x03A9F6A0 LDRB W8, [X19 + 0x3F7]
	0x03A9F6A4 LDR X20, [X20 + 0x9B0]
	0x03A9F6A8 TBNZ X8, 0x0, 0x3A9F6E4
	0x03A9F6AC ADRP X0, 0x655000
	0x03A9F6B0 LDR X0, [X0 + 0xE58]
	0x03A9F6B4 BL 0x1C16CF4
	0x03A9F6B8 ADRP X0, 0x65B000
	0x03A9F6BC LDR X0, [X0 + 0x700]
	0x03A9F6C0 BL 0x1C16CF4
	0x03A9F6C4 ADRP X0, 0x6B8000
	0x03A9F6C8 LDR X0, [X0 + 0x7A0]
	0x03A9F6CC BL 0x1C16CF4
	0x03A9F6D0 ADRP X0, 0x656000
	0x03A9F6D4 LDR X0, [X0 + 0x9B0]
	0x03A9F6D8 BL 0x1C16CF4
	0x03A9F6DC MOVZ W8, 0x1
	0x03A9F6E0 STRB W8, [X19 + 0x3F7]
	0x03A9F6E4 LDR X0, [X20]
	0x03A9F6E8 MOVZ W1, 0x2A
	0x03A9F6EC BL 0x1C16D6C
	0x03A9F6F0 CBZ X0, 0x3A9FC70
	0x03A9F6F4 LDR W8, [X0 + 0x18]

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Subtract X31, X31, 416
	014 Move X20, 0x944000
	015 Move W8, [X20+1009]
	016 Move W29, W5
	017 Move X22, X3
	018 Move X21, X2
	019 Move X19, X1
	020 Move X23, X0
	021 Move [X31+32], X4
	022 Move [X31+408], X1
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {59}
	027 Move X0, 0x67D000
	028 Move X0, [X0+2296]
	029 Call 0x1C17CF4
	030 Move X0, 0x6B9000
	031 Move X0, [X0+328]
	032 Call 0x1C17CF4
	033 Move X0, 0x6B8000
	034 Move X0, [X0+440]
	035 Call 0x1C17CF4
	036 Move X0, 0x655000
	037 Move X0, [X0+1432]
	038 Call 0x1C17CF4
	039 Move X0, 0x6B9000
	040 Move X0, [X0+1864]
	041 Call 0x1C17CF4
	042 Move X0, 0x6B8000
	043 Move X0, [X0+3776]
	044 Call 0x1C17CF4
	045 Move X0, 0x67E000
	046 Move X0, [X0+2216]
	047 Call 0x1C17CF4
	048 Move X0, 0x6B9000
	049 Move X0, [X0+1912]
	050 Call 0x1C17CF4
	051 Move X0, 0x6B9000
	052 Move X0, [X0+1920]
	053 Call 0x1C17CF4
	054 Move X0, 0x6B9000
	055 Move X0, [X0+1928]
	056 Call 0x1C17CF4
	057 Move W8, 1
	058 Move [X20+1009], W8
	059 Move [X31+392], X31
	060 Move [X31+400], X31
	061 Move [X31+376], X31
	062 Move [X31+384], X31
	063 Move [X31+360], X31
	064 Move [X31+368], X31
	065 Move X8, 0x655000
	066 Move X8, [X8+1432]
	067 Move [X31+344], X31
	068 Move [X31+352], X31
	069 Move [X31+328], X31
	070 Move [X31+336], X31
	071 Move [X31+56], X23
	072 Move X0, [X8]
	073 Move X23, [X23+176]
	074 Move W8, [X0+224]
	075 Compare W8, 0
	076 JumpIfNotEqual {78}
	077 Call 0x1C17DFC
	078 Move X0, X23
	079 Move X1, X31
	080 Move X2, X31
	081 Call Object.op_Equality, X0, X1
	082 Move X27, [X31+32]
	083 Move X20, [X31+56]
	084 Move TEMP, X0
	085 And TEMP, TEMP, 1
	086 Compare TEMP, 1
	087 JumpIfNotEqual {97}
	088 Move X8, 0x6B9000
	089 Move X8, [X8+328]
	090 Move X0, [X8]
	091 Move W8, [X0+224]
	092 Compare W8, 0
	093 JumpIfNotEqual {95}
	094 Call 0x1C17DFC
	095 Call DeferredLights.CreateFullscreenMesh
	096 Move [X20+176], X0
	097 Move [X31+40], X21
	098 Compare X19, 0
	099 JumpIfEqual {457}
	100 Move X8, 0x6B9000
	101 Move X8, [X8+1928]
	102 Move X0, X19
	103 Move X2, X31
	104 Move X1, [X8]
	105 Call CommandBuffer.EnableShaderKeyword, X0, X1
	106 Move X8, [X20+136]
	107 NotImplemented "Instruction LDRH not yet implemented."
	108 Move W8, [X20+128]
	109 NotImplemented "Instruction CMP not yet implemented."
	110 Move X23, X20
	111 Move X20, 0x6B9000
	112 Move X20, [X20+1864]
	113 Move W21, 1
	114 Move [X31+28], W29
	115 Move X8, [X23+120]
	116 Move X0, X22
	117 Move X1, X27
	118 NotImplemented "Instruction LDRH not yet implemented."
	119 Move X8, 0x6B8000
	120 Move X8, [X8+440]
	121 Move W2, W26
	122 Move X3, [X8]
	123 Call 0x22232C0, X0, X1
	124 Move X1, X31
	125 Move X23, X0
	126 Call VisibleLight.get_lightType, X0
	127 NotImplemented "Instruction CMP not yet implemented."
	128 Move X0, X23
	129 Move X1, X31
	130 Call VisibleLight.get_light, X0
	131 Move X8, 0x67E000
	132 Move X8, [X8+2216]
	133 Move X28, X0
	134 Move X8, [X8]
	135 Move W9, [X8+224]
	136 Compare W9, 0
	137 JumpIfNotEqual {140}
	138 Move X0, X8
	139 Call 0x1C17DFC
	140 Add X3, X31, 392
	141 Add X4, X31, 376
	142 Add X5, X31, 360
	143 Add X6, X31, 344
	144 Add X7, X31, 328
	145 Move X0, X22
	146 Move X1, X27
	147 Move W2, W26
	148 Move [X31], X31
	149 Move X24, X27
	150 Call UniversalRenderPipeline.InitializeLightConstants_Common, X0, X1, X2, X3, X4, X5, X6
	151 Move X23, [X31+56]
	152 Compare X28, 0
	153 JumpIfEqual {457}
	154 Add X8, X31, 256
	155 Move X0, X28
	156 Move X1, X31
	157 Move X27, X22
	158 Call Light.get_bakingOutput, X0
	159 Move W8, [X31+264]
	160 Move X0, X28
	161 Move X1, X31
	162 NotImplemented "Instruction CMP not yet implemented."
	163 NotImplemented "Instruction CSET not yet implemented."
	164 Call LightExtensions.GetUniversalAdditionalLightData, X0
	165 Compare X0, 0
	166 JumpIfEqual {457}
	167 Move W0, [X0+56]
	168 Move X1, X31
	169 Call RenderingLayerUtils.ToValidRenderingLayers, X0
	170 NotImplemented "Instruction CMP not yet implemented."
	171 Move [X31+52], W0
	172 Move X8, 0x655000
	173 Move X8, [X8+1432]
	174 Move X0, [X8]
	175 Move W8, [X0+224]
	176 Compare W8, 0
	177 JumpIfNotEqual {179}
	178 Call 0x1C17DFC
	179 Move X0, X28
	180 Move X1, X31
	181 Call Object.op_Implicit, X0
	182 Move TEMP, X0
	183 And TEMP, TEMP, 1
	184 Compare TEMP, 1
	185 JumpIfNotEqual {205}
	186 Move X0, X28
	187 Move X1, X31
	188 Move W20, W29
	189 Call Light.get_shadows, X0
	190 Move X29, [X31+40]
	191 NotImplemented "Instruction CMP not yet implemented."
	192 NotImplemented "Instruction CSET not yet implemented."
	193 Add X1, X31, 408
	194 Move X2, X29
	195 Move W23, W0
	196 Call DeferredLights.SetAdditionalLightsShadowsKeyword, X0, X1, X2, X3
	197 Compare W23, 0
	198 JumpIfNotEqual {261}
	199 Move X0, [X23+152]
	200 Compare X0, 0
	201 JumpIfEqual {210}
	202 Move W1, W26
	203 Call AdditionalLightsShadowCasterPass.GetShadowLightIndexFromLightIndex, X0, X1
	204 Move W29, W0
	205 Move X2, [X31+40]
	206 Add X1, X31, 408
	207 Move W3, W31
	208 Call DeferredLights.SetAdditionalLightsShadowsKeyword, X0, X1, X2, X3
	209 Move W23, W31
	210 Move TEMP, 0
	211 Not TEMP
	212 Move W29, TEMP
	213 Move X8, 0x655000
	214 Move X8, [X8+1432]
	215 Move X0, [X8]
	216 Move W8, [X0+224]
	217 Compare W8, 0
	218 JumpIfNotEqual {220}
	219 Call 0x1C17DFC
	220 Move X0, X28
	221 Move X1, X31
	222 Call Object.op_Implicit, X0
	223 Move TEMP, X0
	224 And TEMP, TEMP, 1
	225 Compare TEMP, 1
	226 JumpIfNotEqual {235}
	227 Move X0, X28
	228 Move X1, X31
	229 Call Light.get_shadows, X0
	230 NotImplemented "Instruction CMP not yet implemented."
	231 NotImplemented "Instruction CSET not yet implemented."
	232 NotImplemented "Instruction CMP not yet implemented."
	233 NotImplemented "Instruction CSET not yet implemented."
	234 And W23, W9, W8
	235 Move W23, W31
	236 Move X20, 0x6B9000
	237 Move X20, [X20+1864]
	238 Move X0, [X20]
	239 Move W8, [X0+224]
	240 Compare W8, 0
	241 JumpIfNotEqual {243}
	242 Call 0x1C17DFC
	243 Move X8, [X20]
	244 Move X0, X19
	245 Move W2, W29
	246 Move X3, X31
	247 Move X8, [X8+184]
	248 Move W1, [X8+148]
	249 Call CommandBuffer.SetGlobalInt, X0, X1, X2
	250 Move X29, [X31+40]
	251 Add X1, X31, 408
	252 Move W3, W23
	253 Move X2, X29
	254 Call DeferredLights.SetAdditionalLightsShadowsKeyword, X0, X1, X2, X3
	255 Move W20, [X31+28]
	256 Move X24, [X31+32]
	257 Move TEMP, X23
	258 And TEMP, TEMP, 1
	259 Compare TEMP, 1
	260 JumpIfNotEqual {269}
	261 Move W8, [X29+636]
	262 Compare W8, 0
	263 JumpIfEqual {269}
	264 Move X0, X28
	265 Move X1, X31
	266 Call Light.get_shadows, X0
	267 NotImplemented "Instruction CMP not yet implemented."
	268 NotImplemented "Instruction CSET not yet implemented."
	269 Move W23, W31
	270 Move W29, W20
	271 Move X20, 0x6B9000
	272 Move X20, [X20+1864]
	273 Move X8, 0x6B8000
	274 Move X8, [X8+3776]
	275 Move X28, 0x93A000
	276 Move X0, [X8]
	277 Move W8, [X0+224]
	278 Compare W8, 0
	279 JumpIfNotEqual {281}
	280 Call 0x1C17DFC
	281 Move X0, X19
	282 Move W1, W23
	283 Move X2, X31
	284 Call ShadowUtils.SetPerLightSoftShadowKeyword, X0, X1
	285 Move X8, 0x67D000
	286 Move X8, [X8+2296]
	287 Move X0, [X8]
	288 Move W8, [X0+224]
	289 Compare W8, 0
	290 JumpIfNotEqual {292}
	291 Call 0x1C17DFC
	292 Move X8, 0x6B9000
	293 Move X8, [X8+1920]
	294 NotImplemented "Instruction CMP not yet implemented."
	295 And W2, W21, 1
	296 Move X0, X19
	297 Move X1, [X8]
	298 Move X3, X31
	299 NotImplemented "Instruction CSET not yet implemented."
	300 Call CoreUtils.SetKeyword, X0, X1, X2
	301 Move X8, 0x6B9000
	302 Move X8, [X8+1912]
	303 Move X0, X19
	304 Move W2, W23
	305 Move X3, X31
	306 Move X1, [X8]
	307 Call CoreUtils.SetKeyword, X0, X1, X2
	308 Move X0, [X20]
	309 Move W8, [X0+224]
	310 Compare W8, 0
	311 JumpIfNotEqual {313}
	312 Call 0x1C17DFC
	313 Move X8, [X20]
	314 Move V3, [X31+388]
	315 Move V2, [X31+384]
	316 Move V1, [X31+380]
	317 Move X8, [X8+184]
	318 Move V0, [X31+376]
	319 Move X0, X19
	320 Move X2, X31
	321 Move W1, [X8+128]
	322 Move W23, W22
	323 ShiftRight W23, 30
	324 And W23, W23, 0x1FFFFFFF
	325 Call CommandBuffer.SetGlobalVector, X0, X1, X2
	326 Move X8, [X20]
	327 Move V0, [X31+392]
	328 Move V1, [X31+396]
	329 Move V2, [X31+400]
	330 Move X8, [X8+184]
	331 Move V3, [X31+404]
	332 Move X0, X19
	333 Move X2, X31
	334 Move W1, [X8+140]
	335 Call CommandBuffer.SetGlobalVector, X0, X1, X2
	336 Move X8, [X20]
	337 Move X0, X19
	338 Move W2, W23
	339 Move X3, X31
	340 Move X8, [X8+184]
	341 Move W1, [X8+144]
	342 Call CommandBuffer.SetGlobalInt, X0, X1, X2
	343 Move X8, [X20]
	344 Move W2, [X31+52]
	345 Move X0, X19
	346 Move X3, X31
	347 Move X8, [X8+184]
	348 Move W1, [X8+152]
	349 Call CommandBuffer.SetGlobalInt, X0, X1, X2
	350 Move X23, [X31+56]
	351 Move X21, 0x659000
	352 Move W8, [X28+2752]
	353 Move X26, [X23+176]
	354 Move X21, [X21+624]
	355 Compare W8, 0
	356 JumpIfNotEqual {361}
	357 Move X0, X21
	358 Call 0x1C17CF4
	359 Move W8, 1
	360 Move [X28+2752], W8
	361 Move X8, [X21]
	362 Move X8, [X8+184]
	363 Move V1, [X8+96]
	364 Move V0, [X8+112]
	365 Move V2, [X8+64]
	366 Move V3, [X8+80]
	367 Move [X31+288], V1
	368 Move [X31+296], V0
	369 Move [X31+256], V2
	370 Move [X31+264], V3
	371 Move X8, [X23+192]
	372 Compare X8, 0
	373 JumpIfEqual {457}
	374 Move W9, [X8+24]
	375 NotImplemented "Instruction CMP not yet implemented."
	376 Move X3, [X23+184]
	377 Move W5, [X8+44]
	378 Move V0, [X31+256]
	379 Move V1, [X31+272]
	380 Move V2, [X31+288]
	381 Move V3, [X31+304]
	382 Add X2, X31, 192
	383 Move X0, X19
	384 Move X1, X26
	385 Move W4, W31
	386 Move X6, X31
	387 Move X22, X27
	388 Move X27, X24
	389 Move [X31+192], V0
	390 Move [X31+200], V1
	391 Move [X31+224], V2
	392 Move [X31+232], V3
	393 Call CommandBuffer.DrawMesh, X0, X1, X2, X3, X4, X5
	394 Move W8, [X28+2752]
	395 Move X26, [X23+176]
	396 Compare W8, 0
	397 JumpIfNotEqual {402}
	398 Move X0, X21
	399 Call 0x1C17CF4
	400 Move W8, 1
	401 Move [X28+2752], W8
	402 Move X8, [X21]
	403 Move X8, [X8+184]
	404 Move V1, [X8+96]
	405 Move V0, [X8+112]
	406 Move V2, [X8+64]
	407 Move V3, [X8+80]
	408 Move [X31+160], V1
	409 Move [X31+168], V0
	410 Move [X31+128], V2
	411 Move [X31+136], V3
	412 Move X8, [X23+192]
	413 Compare X8, 0
	414 JumpIfEqual {457}
	415 Move W9, [X8+24]
	416 NotImplemented "Instruction CMP not yet implemented."
	417 Move X3, [X23+184]
	418 Move W5, [X8+48]
	419 Move V0, [X31+128]
	420 Move V1, [X31+144]
	421 Move V2, [X31+160]
	422 Move V3, [X31+176]
	423 Add X2, X31, 64
	424 Move X0, X19
	425 Move X1, X26
	426 Move W4, W31
	427 Move X6, X31
	428 Move [X31+64], V0
	429 Move [X31+72], V1
	430 Move [X31+96], V2
	431 Move [X31+104], V3
	432 Call CommandBuffer.DrawMesh, X0, X1, X2, X3, X4, X5
	433 NotImplemented "Instruction LDRSW not yet implemented."
	434 Add X25, X25, 1
	435 Move W21, W31
	436 NotImplemented "Instruction CMP not yet implemented."
	437 Move X8, 0x6B9000
	438 Move X8, [X8+1928]
	439 Move X0, X19
	440 Move X2, X31
	441 Move X1, [X8]
	442 Call CommandBuffer.DisableShaderKeyword, X0, X1
	443 Add X31, X31, 416
	444 Move X20, [X31+80]
	445 Move X19, [X31+88]
	446 Move X22, [X31+64]
	447 Move X21, [X31+72]
	448 Move X24, [X31+48]
	449 Move X23, [X31+56]
	450 Move X26, [X31+32]
	451 Move X25, [X31+40]
	452 Move X28, [X31+16]
	453 Move X27, [X31+24]
	454 Move X29, [X31+96]
	455 Move X30, [X31+104]
	456 Return 
	457 Call 0x1C17F20
	458 Call 0x1C17F28

Method: System.Void RenderStencilPointLights(UnityEngine.Rendering.CommandBuffer cmd, ref UnityEngine.Rendering.Universal.RenderingData renderingData, Unity.Collections.NativeArray`1<UnityEngine.Rendering.VisibleLight> visibleLights)

Disassembly:
	0x03A9F6F8 MOV X19, X0
	0x03A9F6FC CBZ W8, 0x3A9FC6C
	0x03A9F700 MOVZ W9, 0xF5C3
	0x03A9F704 MOVK W9, 0xBF880000
	0x03A9F708 CMP W8, 0x1
	0x03A9F70C STR X31, [X19 + 0x20]
	0x03A9F710 STR W9, [X19 + 0x28]
	0x03A9F714 B.EQ 0x3A9FC6C
	0x03A9F718 ADRP X9, 0xFFFFFFFFFD04E000
	0x03A9F71C LDR V0, [X9 + 0x688]
	0x03A9F720 MOVZ W9, 0xF5C3
	0x03A9F724 MOVK W9, 0xBF680000
	0x03A9F728 CMP W8, 0x2
	0x03A9F72C STUR D0, [X19 + 0x2C]
	0x03A9F730 STR W9, [X19 + 0x34]
	0x03A9F734 B.LS 0x3A9FC6C
	0x03A9F738 ADRP X10, 0xFFFFFFFFFD04F000
	0x03A9F73C LDR V0, [X10 + 0x48]
	0x03A9F740 CMP W8, 0x3
	0x03A9F744 STR W9, [X19 + 0x40]
	0x03A9F748 STR D0, [X19 + 0x38]
	0x03A9F74C B.EQ 0x3A9FC6C
	0x03A9F750 ADRP X9, 0xFFFFFFFFFD04F000
	0x03A9F754 LDR V0, [X9 + 0x428]
	0x03A9F758 MOVZ W9, 0xF5C3
	0x03A9F75C MOVK W9, 0xBF680000
	0x03A9F760 CMP W8, 0x4
	0x03A9F764 STUR D0, [X19 + 0x44]
	0x03A9F768 STR W9, [X19 + 0x4C]
	0x03A9F76C B.LS 0x3A9FC6C
	0x03A9F770 ADRP X10, 0xFFFFFFFFFD04E000
	0x03A9F774 LDR V0, [X10 + 0xF08]
	0x03A9F778 CMP W8, 0x5
	0x03A9F77C STR W9, [X19 + 0x58]
	0x03A9F780 STR D0, [X19 + 0x50]
	0x03A9F784 B.EQ 0x3A9FC6C
	0x03A9F788 ADRP X9, 0xFFFFFFFFFD04E000
	0x03A9F78C LDR V0, [X9 + 0x408]
	0x03A9F790 MOVZ W9, 0xF5C3
	0x03A9F794 MOVK W9, 0xBF680000
	0x03A9F798 CMP W8, 0x6
	0x03A9F79C STUR D0, [X19 + 0x5C]
	0x03A9F7A0 STR W9, [X19 + 0x64]
	0x03A9F7A4 B.LS 0x3A9FC6C
	0x03A9F7A8 ADRP X9, 0xFFFFFFFFFD04F000
	0x03A9F7AC LDR V0, [X9 + 0x180]
	0x03A9F7B0 MOVZ W9, 0xDF3B
	0x03A9F7B4 MOVK W9, 0xBF0F0000
	0x03A9F7B8 CMP W8, 0x7
	0x03A9F7BC STR D0, [X19 + 0x68]
	0x03A9F7C0 STR W9, [X19 + 0x70]
	0x03A9F7C4 B.EQ 0x3A9FC6C
	0x03A9F7C8 ADRP X10, 0xFFFFFFFFFD04E000
	0x03A9F7CC LDR V0, [X10 + 0x870]
	0x03A9F7D0 CMP W8, 0x8
	0x03A9F7D4 STR W9, [X19 + 0x7C]
	0x03A9F7D8 STUR D0, [X19 + 0x74]
	0x03A9F7DC B.LS 0x3A9FC6C
	0x03A9F7E0 ADRP X9, 0xFFFFFFFFFD04E000
	0x03A9F7E4 LDR V0, [X9 + 0xDF8]
	0x03A9F7E8 MOVZ W9, 0x9DB2
	0x03A9F7EC MOVK W9, 0xBEEF0000
	0x03A9F7F0 CMP W8, 0x9
	0x03A9F7F4 STR D0, [X19 + 0x80]
	0x03A9F7F8 STR W9, [X19 + 0x88]
	0x03A9F7FC B.EQ 0x3A9FC6C
	0x03A9F800 ADRP X9, 0xFFFFFFFFFD04E000
	0x03A9F804 LDR V0, [X9 + 0xC70]
	0x03A9F808 MOVZ W9, 0xDF3B
	0x03A9F80C MOVK W9, 0xBF0F0000
	0x03A9F810 CMP W8, 0xA
	0x03A9F814 STUR D0, [X19 + 0x8C]
	0x03A9F818 STR W9, [X19 + 0x94]
	0x03A9F81C B.LS 0x3A9FC6C
	0x03A9F820 ADRP X9, 0xFFFFFFFFFD04E000
	0x03A9F824 LDR V0, [X9 + 0xE00]
	0x03A9F828 MOVZ W9, 0xBC6A
	0x03A9F82C MOVK W9, 0xBEF40000
	0x03A9F830 CMP W8, 0xB
	0x03A9F834 STR D0, [X19 + 0x98]
	0x03A9F838 STR W9, [X19 + 0xA0]
	0x03A9F83C B.EQ 0x3A9FC6C
	0x03A9F840 ADRP X9, 0xFFFFFFFFFD04E000
	0x03A9F844 LDR V0, [X9 + 0xE90]
	0x03A9F848 CMP W8, 0xC
	0x03A9F84C STR W31, [X19 + 0xAC]
	0x03A9F850 STUR D0, [X19 + 0xA4]
	0x03A9F854 B.LS 0x3A9FC6C
	0x03A9F858 ADRP X9, 0xFFFFFFFFFD04F000
	0x03A9F85C LDR V0, [X9 + 0x4D0]
	0x03A9F860 CMP W8, 0xD
	0x03A9F864 STR W31, [X19 + 0xB8]
	0x03A9F868 STR D0, [X19 + 0xB0]
	0x03A9F86C B.EQ 0x3A9FC6C
	0x03A9F870 ADRP X9, 0xFFFFFFFFFD04E000
	0x03A9F874 LDR V0, [X9 + 0x528]
	0x03A9F878 CMP W8, 0xE
	0x03A9F87C STR W31, [X19 + 0xC4]
	0x03A9F880 STUR D0, [X19 + 0xBC]
	0x03A9F884 B.LS 0x3A9FC6C
	0x03A9F888 ADRP X9, 0xFFFFFFFFFD04F000
	0x03A9F88C LDR V0, [X9 + 0x550]
	0x03A9F890 CMP W8, 0xF
	0x03A9F894 STR W31, [X19 + 0xD0]
	0x03A9F898 STR D0, [X19 + 0xC8]
	0x03A9F89C B.EQ 0x3A9FC6C
	0x03A9F8A0 ADRP X9, 0xFFFFFFFFFD04F000
	0x03A9F8A4 LDR V0, [X9 + 0x50]
	0x03A9F8A8 MOVZ W9, 0xBC6A
	0x03A9F8AC MOVK W9, 0xBEF40000
	0x03A9F8B0 CMP W8, 0x10
	0x03A9F8B4 STUR D0, [X19 + 0xD4]
	0x03A9F8B8 STR W9, [X19 + 0xDC]
	0x03A9F8BC B.LS 0x3A9FC6C
	0x03A9F8C0 ADRP X9, 0xFFFFFFFFFD04F000
	0x03A9F8C4 LDR V0, [X9 + 0x58]
	0x03A9F8C8 MOVZ W9, 0xDF3B
	0x03A9F8CC MOVK W9, 0xBF0F0000
	0x03A9F8D0 CMP W8, 0x11
	0x03A9F8D4 STR D0, [X19 + 0xE0]
	0x03A9F8D8 STR W9, [X19 + 0xE8]
	0x03A9F8DC B.EQ 0x3A9FC6C
	0x03A9F8E0 ADRP X9, 0xFFFFFFFFFD04E000
	0x03A9F8E4 LDR V0, [X9 + 0xE08]
	0x03A9F8E8 CMP W8, 0x12
	0x03A9F8EC STR W31, [X19 + 0xF4]
	0x03A9F8F0 STUR D0, [X19 + 0xEC]
	0x03A9F8F4 B.LS 0x3A9FC6C
	0x03A9F8F8 ADRP X9, 0xFFFFFFFFFD04E000
	0x03A9F8FC LDR V0, [X9 + 0x7E0]
	0x03A9F900 CMP W8, 0x13
	0x03A9F904 STR W31, [X19 + 0x100]
	0x03A9F908 STR D0, [X19 + 0xF8]
	0x03A9F90C B.EQ 0x3A9FC6C
	0x03A9F910 ADRP X9, 0xFFFFFFFFFD04F000
	0x03A9F914 LDR V0, [X9 + 0x3F0]
	0x03A9F918 MOVZ W10, 0xBC6A
	0x03A9F91C ADD X9, X19, 0x104
	0x03A9F920 MOVK W10, 0x3EF40000
	0x03A9F924 CMP W8, 0x14
	0x03A9F928 STR D0, [X9]
	0x03A9F92C STR W10, [X19 + 0x10C]
	0x03A9F930 B.LS 0x3A9FC6C
	0x03A9F934 ADRP X9, 0xFFFFFFFFFD04E000
	0x03A9F938 LDR V0, [X9 + 0x948]
	0x03A9F93C MOVZ W9, 0xDF3B
	0x03A9F940 MOVK W9, 0x3F0F0000
	0x03A9F944 CMP W8, 0x15
	0x03A9F948 STR D0, [X19 + 0x110]
	0x03A9F94C STR W9, [X19 + 0x118]
	0x03A9F950 B.EQ 0x3A9FC6C
	0x03A9F954 ADRP X9, 0xFFFFFFFFFD04F000
	0x03A9F958 LDR V0, [X9 + 0x338]
	0x03A9F95C MOVZ W10, 0xBC6A
	0x03A9F960 ADD X9, X19, 0x11C
	0x03A9F964 MOVK W10, 0x3EF40000
	0x03A9F968 CMP W8, 0x16
	0x03A9F96C STR D0, [X9]
	0x03A9F970 STR W10, [X9 + 0x8]
	0x03A9F974 B.LS 0x3A9FC6C
	0x03A9F978 ADRP X9, 0xFFFFFFFFFD04E000
	0x03A9F97C LDR V0, [X9 + 0x618]
	0x03A9F980 MOVZ W9, 0xDF3B
	0x03A9F984 MOVK W9, 0x3F0F0000
	0x03A9F988 CMP W8, 0x17
	0x03A9F98C STR D0, [X19 + 0x128]
	0x03A9F990 STR W9, [X19 + 0x130]
	0x03A9F994 B.EQ 0x3A9FC6C
	0x03A9F998 ADRP X10, 0xFFFFFFFFFD04F000
	0x03A9F99C LDR V0, [X10 + 0x188]
	0x03A9F9A0 ADD X10, X19, 0x134
	0x03A9F9A4 CMP W8, 0x18
	0x03A9F9A8 STR W9, [X10 + 0x8]
	0x03A9F9AC STR D0, [X10]
	0x03A9F9B0 B.LS 0x3A9FC6C
	0x03A9F9B4 ADRP X9, 0xFFFFFFFFFD04E000
	0x03A9F9B8 LDR V0, [X9 + 0xFC8]
	0x03A9F9BC MOVZ W9, 0xF5C3
	0x03A9F9C0 MOVK W9, 0x3F680000
	0x03A9F9C4 CMP W8, 0x19
	0x03A9F9C8 STR D0, [X19 + 0x140]
	0x03A9F9CC STR W9, [X19 + 0x148]
	0x03A9F9D0 B.EQ 0x3A9FC6C
	0x03A9F9D4 ADRP X10, 0xFFFFFFFFFD04E000
	0x03A9F9D8 LDR V0, [X10 + 0xB08]
	0x03A9F9DC ADD X10, X19, 0x14C
	0x03A9F9E0 CMP W8, 0x1A
	0x03A9F9E4 STR W9, [X10 + 0x8]
	0x03A9F9E8 STR D0, [X10]
	0x03A9F9EC B.LS 0x3A9FC6C
	0x03A9F9F0 ADRP X9, 0xFFFFFFFFFD04F000
	0x03A9F9F4 LDR V0, [X9 + 0x108]
	0x03A9F9F8 CMP W8, 0x1B
	0x03A9F9FC STR W31, [X19 + 0x160]
	0x03A9FA00 STR D0, [X19 + 0x158]
	0x03A9FA04 B.EQ 0x3A9FC6C
	0x03A9FA08 ADRP X9, 0xFFFFFFFFFD04E000
	0x03A9FA0C LDR V0, [X9 + 0x950]
	0x03A9FA10 MOVZ W10, 0xBC6A
	0x03A9FA14 ADD X9, X19, 0x164
	0x03A9FA18 MOVK W10, 0x3EF40000
	0x03A9FA1C CMP W8, 0x1C
	0x03A9FA20 STR D0, [X9]
	0x03A9FA24 STR W10, [X9 + 0x8]
	0x03A9FA28 B.LS 0x3A9FC6C
	0x03A9FA2C ADRP X9, 0xFFFFFFFFFD04F000
	0x03A9FA30 LDR V0, [X9 + 0x3F8]
	0x03A9FA34 MOVZ W9, 0xF5C3
	0x03A9FA38 MOVK W9, 0x3F680000
	0x03A9FA3C CMP W8, 0x1D
	0x03A9FA40 STR D0, [X19 + 0x170]
	0x03A9FA44 STR W9, [X19 + 0x178]
	0x03A9FA48 B.EQ 0x3A9FC6C
	0x03A9FA4C MOVZ W9, 0xF5C3
	0x03A9FA50 MOVK W9, 0x3F880000
	0x03A9FA54 CMP W8, 0x1E
	0x03A9FA58 STR W31, [X19 + 0x180]
	0x03A9FA5C STR W31, [X19 + 0x17C]
	0x03A9FA60 STR W9, [X19 + 0x184]
	0x03A9FA64 B.LS 0x3A9FC6C
	0x03A9FA68 ADRP X9, 0xFFFFFFFFFD04E000
	0x03A9FA6C LDR V0, [X9 + 0xF10]
	0x03A9FA70 MOVZ W9, 0xF5C3
	0x03A9FA74 MOVK W9, 0x3F680000
	0x03A9FA78 CMP W8, 0x1F
	0x03A9FA7C STR D0, [X19 + 0x188]
	0x03A9FA80 STR W9, [X19 + 0x190]
	0x03A9FA84 B.EQ 0x3A9FC6C
	0x03A9FA88 ADRP X9, 0xFFFFFFFFFD04E000
	0x03A9FA8C LDR V0, [X9 + 0x530]
	0x03A9FA90 MOVZ W10, 0xBC6A
	0x03A9FA94 ADD X9, X19, 0x194
	0x03A9FA98 MOVK W10, 0x3EF40000
	0x03A9FA9C CMP W8, 0x20
	0x03A9FAA0 STR D0, [X9]
	0x03A9FAA4 STR W10, [X9 + 0x8]
	0x03A9FAA8 B.LS 0x3A9FC6C
	0x03A9FAAC ADRP X9, 0xFFFFFFFFFD04E000
	0x03A9FAB0 LDR V0, [X9 + 0x410]
	0x03A9FAB4 MOVZ W9, 0xDF3B
	0x03A9FAB8 MOVK W9, 0x3F0F0000
	0x03A9FABC CMP W8, 0x21
	0x03A9FAC0 STR D0, [X19 + 0x1A0]
	0x03A9FAC4 STR W9, [X19 + 0x1A8]
	0x03A9FAC8 B.EQ 0x3A9FC6C
	0x03A9FACC ADRP X9, 0xFFFFFFFFFD04F000
	0x03A9FAD0 LDR V0, [X9 + 0x558]
	0x03A9FAD4 MOVZ W10, 0xF5C3
	0x03A9FAD8 ADD X9, X19, 0x1AC
	0x03A9FADC MOVK W10, 0x3F680000
	0x03A9FAE0 CMP W8, 0x22
	0x03A9FAE4 STR D0, [X9]
	0x03A9FAE8 STR W10, [X9 + 0x8]
	0x03A9FAEC B.LS 0x3A9FC6C
	0x03A9FAF0 ADRP X9, 0xFFFFFFFFFD04F000
	0x03A9FAF4 LDR V0, [X9 + 0x560]
	0x03A9FAF8 MOVZ W9, 0xBC6A
	0x03A9FAFC MOVK W9, 0xBEF40000
	0x03A9FB00 CMP W8, 0x23
	0x03A9FB04 STR D0, [X19 + 0x1B8]
	0x03A9FB08 STR W9, [X19 + 0x1C0]
	0x03A9FB0C B.EQ 0x3A9FC6C
	0x03A9FB10 ADRP X9, 0xFFFFFFFFFD04F000
	0x03A9FB14 LDR V0, [X9 + 0x60]
	0x03A9FB18 ADD X9, X19, 0x1C4
	0x03A9FB1C CMP W8, 0x24
	0x03A9FB20 STR W31, [X9 + 0x8]
	0x03A9FB24 STR D0, [X9]
	0x03A9FB28 B.LS 0x3A9FC6C
	0x03A9FB2C ADRP X9, 0xFFFFFFFFFD04E000
	0x03A9FB30 LDR V0, [X9 + 0x690]
	0x03A9FB34 MOVZ W9, 0xDF3B
	0x03A9FB38 MOVK W9, 0x3F0F0000
	0x03A9FB3C CMP W8, 0x25
	0x03A9FB40 STR D0, [X19 + 0x1D0]
	0x03A9FB44 STR W9, [X19 + 0x1D8]
	0x03A9FB48 B.EQ 0x3A9FC6C
	0x03A9FB4C ADRP X9, 0xFFFFFFFFFD04E000
	0x03A9FB50 LDR V0, [X9 + 0xD08]
	0x03A9FB54 MOVZ W10, 0xBC6A
	0x03A9FB58 ADD X9, X19, 0x1DC
	0x03A9FB5C MOVK W10, 0x3EF40000
	0x03A9FB60 CMP W8, 0x26
	0x03A9FB64 STR D0, [X9]
	0x03A9FB68 STR W10, [X9 + 0x8]
	0x03A9FB6C B.LS 0x3A9FC6C
	0x03A9FB70 ADRP X9, 0xFFFFFFFFFD04E000
	0x03A9FB74 LDR V0, [X9 + 0x418]
	0x03A9FB78 CMP W8, 0x27
	0x03A9FB7C STR W31, [X19 + 0x1F0]
	0x03A9FB80 STR D0, [X19 + 0x1E8]
	0x03A9FB84 B.EQ 0x3A9FC6C
	0x03A9FB88 ADRP X9, 0xFFFFFFFFFD04E000
	0x03A9FB8C LDR V0, [X9 + 0xE98]
	0x03A9FB90 MOVZ W10, 0xDF3B
	0x03A9FB94 ADD X9, X19, 0x1F4
	0x03A9FB98 MOVK W10, 0xBF0F0000
	0x03A9FB9C CMP W8, 0x28
	0x03A9FBA0 STR D0, [X9]
	0x03A9FBA4 STR W10, [X9 + 0x8]
	0x03A9FBA8 B.LS 0x3A9FC6C
	0x03A9FBAC ADRP X9, 0xFFFFFFFFFD04E000
	0x03A9FBB0 LDR V0, [X9 + 0x420]
	0x03A9FBB4 MOVZ W9, 0xBC6A
	0x03A9FBB8 MOVK W9, 0xBEF40000
	0x03A9FBBC CMP W8, 0x29
	0x03A9FBC0 STR D0, [X19 + 0x200]
	0x03A9FBC4 STR W9, [X19 + 0x208]
	0x03A9FBC8 B.EQ 0x3A9FC6C
	0x03A9FBCC ADRP X8, 0xFFFFFFFFFD04F000
	0x03A9FBD0 LDR V0, [X8 + 0x430]
	0x03A9FBD4 ADRP X8, 0x655000
	0x03A9FBD8 LDR X8, [X8 + 0xE58]
	0x03A9FBDC ADD X9, X19, 0x20C
	0x03A9FBE0 STR D0, [X9]
	0x03A9FBE4 STR W31, [X9 + 0x8]
	0x03A9FBE8 LDR X0, [X8]
	0x03A9FBEC ADRP X20, 0x6B8000
	0x03A9FBF0 ADRP X21, 0x65B000
	0x03A9FBF4 LDR X20, [X20 + 0x7A0]
	0x03A9FBF8 LDR X21, [X21 + 0x700]
	0x03A9FBFC MOVZ W1, 0xF0
	0x03A9FC00 BL 0x1C16D6C
	0x03A9FC04 LDR X1, [X20]
	0x03A9FC08 MOV X2, X31
	0x03A9FC0C MOV X20, X0
	0x03A9FC10 BL 0x32C5BD8
	0x03A9FC14 LDR X0, [X21]
	0x03A9FC18 BL 0x1C16F10
	0x03A9FC1C MOV X1, X31
	0x03A9FC20 MOV X21, X0
	0x03A9FC24 BL 0x3C17028
	0x03A9FC28 CBZ X21, 0x3A9FC70
	0x03A9FC2C MOV X0, X21
	0x03A9FC30 MOV W1, W31
	0x03A9FC34 MOV X2, X31
	0x03A9FC38 BL 0x3C170A8
	0x03A9FC3C MOV X0, X21
	0x03A9FC40 MOV X1, X19
	0x03A9FC44 MOV X2, X31
	0x03A9FC48 BL 0x3C17F08
	0x03A9FC4C MOV X0, X21
	0x03A9FC50 MOV X1, X20
	0x03A9FC54 MOV X2, X31
	0x03A9FC58 BL 0x3C18FF0
	0x03A9FC5C LDP X20, X19, [X31 + 0x10]
	0x03A9FC60 MOV X0, X21
	0x03A9FC64 LDP X30, X21, [X31], #0x20
	0x03A9FC68 RET
	0x03A9FC6C BL 0x1C16F28
	0x03A9FC70 BL 0x1C16F20
	0x03A9FC74 STP X30, X21, [X31 - 0x20]!
	0x03A9FC78 STP X20, X19, [X31 + 0x10]
	0x03A9FC7C ADRP X19, 0x943000
	0x03A9FC80 ADRP X20, 0x656000
	0x03A9FC84 LDRB W8, [X19 + 0x3F8]
	0x03A9FC88 LDR X20, [X20 + 0x9B0]
	0x03A9FC8C TBNZ X8, 0x0, 0x3A9FCC8
	0x03A9FC90 ADRP X0, 0x655000
	0x03A9FC94 LDR X0, [X0 + 0xE58]
	0x03A9FC98 BL 0x1C16CF4
	0x03A9FC9C ADRP X0, 0x65B000
	0x03A9FCA0 LDR X0, [X0 + 0x700]
	0x03A9FCA4 BL 0x1C16CF4
	0x03A9FCA8 ADRP X0, 0x6B8000
	0x03A9FCAC LDR X0, [X0 + 0x7A8]
	0x03A9FCB0 BL 0x1C16CF4
	0x03A9FCB4 ADRP X0, 0x656000
	0x03A9FCB8 LDR X0, [X0 + 0x9B0]
	0x03A9FCBC BL 0x1C16CF4
	0x03A9FCC0 MOVZ W8, 0x1
	0x03A9FCC4 STRB W8, [X19 + 0x3F8]
	0x03A9FCC8 LDR X0, [X20]
	0x03A9FCCC MOVZ W1, 0x2A
	0x03A9FCD0 BL 0x1C16D6C
	0x03A9FCD4 CBZ X0, 0x3AA0218
	0x03A9FCD8 LDR W8, [X0 + 0x18]
	0x03A9FCDC MOV X19, X0
	0x03A9FCE0 CBZ W8, 0x3AA0214
	0x03A9FCE4 CMP W8, 0x1
	0x03A9FCE8 STR X31, [X19 + 0x20]
	0x03A9FCEC STR W31, [X19 + 0x28]
	0x03A9FCF0 B.EQ 0x3AA0214
	0x03A9FCF4 ADRP X9, 0xFFFFFFFFFD04E000
	0x03A9FCF8 LDR V0, [X9 + 0x648]
	0x03A9FCFC CMP W8, 0x2
	0x03A9FD00 STR W31, [X19 + 0x34]
	0x03A9FD04 STUR D0, [X19 + 0x2C]
	0x03A9FD08 B.LS 0x3AA0214
	0x03A9FD0C ADRP X9, 0xFFFFFFFFFD04E000
	0x03A9FD10 LDR V0, [X9 + 0xD10]
	0x03A9FD14 CMP W8, 0x3
	0x03A9FD18 STR W31, [X19 + 0x40]
	0x03A9FD1C STR D0, [X19 + 0x38]
	0x03A9FD20 B.EQ 0x3AA0214
	0x03A9FD24 MOVZ W9, 0x4F7
	0x03A9FD28 MOVK W9, 0x3F350000
	0x03A9FD2C CMP W8, 0x4
	0x03A9FD30 UNIMPLEMENTED
	0x03A9FD34 STUR D0, [X19 + 0x44]
	0x03A9FD38 STR W31, [X19 + 0x4C]
	0x03A9FD3C B.LS 0x3AA0214
	0x03A9FD40 ADRP X9, 0xFFFFFFFFFD04E000
	0x03A9FD44 LDR V0, [X9 + 0xD18]
	0x03A9FD48 CMP W8, 0x5
	0x03A9FD4C STR W31, [X19 + 0x58]
	0x03A9FD50 STR D0, [X19 + 0x50]
	0x03A9FD54 B.EQ 0x3AA0214
	0x03A9FD58 ADRP X9, 0xFFFFFFFFFD04E000
	0x03A9FD5C LDR V0, [X9 + 0x958]
	0x03A9FD60 CMP W8, 0x6
	0x03A9FD64 STR W31, [X19 + 0x64]
	0x03A9FD68 STUR D0, [X19 + 0x5C]
	0x03A9FD6C B.LS 0x3AA0214
	0x03A9FD70 ADRP X9, 0xFFFFFFFFFD04E000
	0x03A9FD74 LDR V0, [X9 + 0xD20]
	0x03A9FD78 CMP W8, 0x7
	0x03A9FD7C STR W31, [X19 + 0x70]
	0x03A9FD80 STR D0, [X19 + 0x68]
	0x03A9FD84 B.EQ 0x3AA0214
	0x03A9FD88 ADRP X9, 0xFFFFFFFFFD04E000
	0x03A9FD8C LDR V0, [X9 + 0xC78]
	0x03A9FD90 CMP W8, 0x8
	0x03A9FD94 STR W31, [X19 + 0x7C]
	0x03A9FD98 STUR D0, [X19 + 0x74]
	0x03A9FD9C B.LS 0x3AA0214
	0x03A9FDA0 ADRP X9, 0xFFFFFFFFFD04E000
	0x03A9FDA4 LDR V0, [X9 + 0x428]
	0x03A9FDA8 CMP W8, 0x9
	0x03A9FDAC STR W31, [X19 + 0x88]
	0x03A9FDB0 STR D0, [X19 + 0x80]
	0x03A9FDB4 B.EQ 0x3AA0214
	0x03A9FDB8 ADRP X9, 0xFFFFFFFFFD04F000
	0x03A9FDBC LDR V0, [X9 + 0x68]
	0x03A9FDC0 CMP W8, 0xA
	0x03A9FDC4 STR W31, [X19 + 0x94]
	0x03A9FDC8 STUR D0, [X19 + 0x8C]
	0x03A9FDCC B.LS 0x3AA0214
	0x03A9FDD0 ADRP X9, 0xFFFFFFFFFD04E000

ISIL:
	001 Move [X31-144], D12
	002 Move [X31+16], D11
	003 Move [X31+24], D10
	004 Move [X31+32], D9
	005 Move [X31+40], D8
	006 Move [X31+48], X29
	007 Move [X31+56], X30
	008 Move [X31+64], X28
	009 Move [X31+72], X27
	010 Move [X31+80], X26
	011 Move [X31+88], X25
	012 Move [X31+96], X24
	013 Move [X31+104], X23
	014 Move [X31+112], X22
	015 Move [X31+120], X21
	016 Move [X31+128], X20
	017 Move [X31+136], X19
	018 Subtract X31, X31, 656
	019 Move X22, 0x944000
	020 Move [X31+664], X1
	021 Move X28, 0x655000
	022 Move W8, [X22+1010]
	023 Move X28, [X28+1432]
	024 Move X20, X4
	025 Move X21, X3
	026 Move X25, X2
	027 Move X19, X1
	028 Move X23, X0
	029 Move TEMP, X8
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfEqual {62}
	033 Move X0, 0x67D000
	034 Move X0, [X0+2296]
	035 Call 0x1C17CF4
	036 Move X0, 0x6B9000
	037 Move X0, [X0+328]
	038 Call 0x1C17CF4
	039 Move X0, 0x6B8000
	040 Move X0, [X0+440]
	041 Call 0x1C17CF4
	042 Move X0, 0x655000
	043 Move X0, [X0+1432]
	044 Call 0x1C17CF4
	045 Move X0, 0x6B9000
	046 Move X0, [X0+1864]
	047 Call 0x1C17CF4
	048 Move X0, 0x6B8000
	049 Move X0, [X0+3776]
	050 Call 0x1C17CF4
	051 Move X0, 0x67E000
	052 Move X0, [X0+2216]
	053 Call 0x1C17CF4
	054 Move X0, 0x6B9000
	055 Move X0, [X0+1936]
	056 Call 0x1C17CF4
	057 Move X0, 0x6B8000
	058 Move X0, [X0+368]
	059 Call 0x1C17CF4
	060 Move W8, 1
	061 Move [X22+1010], W8
	062 Move X0, [X28]
	063 NotImplemented "Instruction MOVI not yet implemented."
	064 Move [X31+584], X31
	065 Move [X31+576], X31
	066 Move [X31+568], X31
	067 Move [X31+560], X31
	068 Move [X31+552], X31
	069 Move [X31+544], X31
	070 Move [X31+536], X31
	071 Move [X31+528], X31
	072 Move [X31+520], X31
	073 Move [X31+512], X31
	074 Move [X31+624], V0
	075 Move [X31+632], V0
	076 Move [X31+592], V0
	077 Move [X31+600], V0
	078 Move [X31+480], V0
	079 Move [X31+488], V0
	080 Move [X31+448], V0
	081 Move [X31+456], V0
	082 Move W8, [X0+224]
	083 Move X24, [X23+160]
	084 Compare W8, 0
	085 JumpIfNotEqual {87}
	086 Call 0x1C17DFC
	087 Move X0, X24
	088 Move X1, X31
	089 Move X2, X31
	090 Call Object.op_Equality, X0, X1
	091 Move TEMP, X0
	092 And TEMP, TEMP, 1
	093 Compare TEMP, 1
	094 JumpIfNotEqual {104}
	095 Move X8, 0x6B9000
	096 Move X8, [X8+328]
	097 Move X0, [X8]
	098 Move W8, [X0+224]
	099 Compare W8, 0
	100 JumpIfNotEqual {102}
	101 Call 0x1C17DFC
	102 Call DeferredLights.CreateSphereMesh
	103 Move [X23+160], X0
	104 Move [X31+48], X25
	105 Compare X19, 0
	106 JumpIfEqual {518}
	107 Move X8, 0x6B9000
	108 Move X8, [X8+1936]
	109 Move X0, X19
	110 Move X2, X31
	111 Move X1, [X8]
	112 Call CommandBuffer.EnableShaderKeyword, X0, X1
	113 Move X8, [X23+136]
	114 NotImplemented "Instruction LDRH not yet implemented."
	115 Move W8, [X23+128]
	116 NotImplemented "Instruction CMP not yet implemented."
	117 Move X22, 0x6B8000
	118 Move X22, [X22+440]
	119 Move W26, 0x3F800000
	120 Move X8, [X23+120]
	121 Move X3, [X22]
	122 Move X0, X21
	123 Move X1, X20
	124 NotImplemented "Instruction LDRH not yet implemented."
	125 Move W2, W25
	126 Call 0x22232C0, X0, X1
	127 Move X1, X31
	128 Move X24, X0
	129 Call VisibleLight.get_lightType, X0
	130 NotImplemented "Instruction CMP not yet implemented."
	131 Move X0, X24
	132 Move X1, X31
	133 Call VisibleLight.get_light, X0
	134 Move X27, X0
	135 Add X8, X31, 384
	136 Move X0, X24
	137 Move X1, X31
	138 Call VisibleLight.get_localToWorldMatrix, X0
	139 Move V0, [X31+384]
	140 Move V1, [X31+400]
	141 Move V2, [X31+416]
	142 Move V3, [X31+432]
	143 Add X0, X31, 448
	144 Move W1, 3
	145 Move X2, X31
	146 Move [X31+448], V0
	147 Move [X31+456], V1
	148 Move [X31+480], V2
	149 Move [X31+488], V3
	150 Call Matrix4x4.GetColumn, X0, X1
	151 Move X0, X24
	152 Move X1, X31
	153 Move V8, V0
	154 Move V9, V1
	155 Move V10, V2
	156 Call VisibleLight.get_range, X0
	157 Move X0, X24
	158 Move X1, X31
	159 Move V11, V0
	160 Call VisibleLight.get_range, X0
	161 Move X0, X24
	162 Move X1, X31
	163 Move V12, V0
	164 Call VisibleLight.get_range, X0
	165 Move [X31+8], S0
	166 Add X0, X31, 592
	167 Move S1, W31
	168 Move S2, W31
	169 Move S3, W31
	170 Move S4, W31
	171 Move S6, W31
	172 Move S7, W31
	173 Move V0, V11
	174 Move V5, V12
	175 Move X1, X31
	176 Move [X31+28], W26
	177 Move [X31+20], S9
	178 Move [X31+28], S10
	179 Move [X31+16], S8
	180 Move [X31+12], W31
	181 Move [X31], X31
	182 Call Matrix4x4..ctor, X0, X1, X2, X3, X4
	183 Move X8, 0x67E000
	184 Move X8, [X8+2216]
	185 Move X0, [X8]
	186 Move W8, [X0+224]
	187 Compare W8, 0
	188 JumpIfNotEqual {190}
	189 Call 0x1C17DFC
	190 Add X3, X31, 576
	191 Add X4, X31, 560
	192 Add X5, X31, 544
	193 Add X6, X31, 528
	194 Add X7, X31, 512
	195 Move X0, X21
	196 Move X1, X20
	197 Move W2, W25
	198 Move [X31], X31
	199 Call UniversalRenderPipeline.InitializeLightConstants_Common, X0, X1, X2, X3, X4, X5, X6
	200 Move X0, X27
	201 Move X1, X31
	202 Call LightExtensions.GetUniversalAdditionalLightData, X0
	203 Compare X0, 0
	204 JumpIfEqual {518}
	205 Move W0, [X0+56]
	206 Move X1, X31
	207 Call RenderingLayerUtils.ToValidRenderingLayers, X0
	208 Compare X27, 0
	209 JumpIfEqual {518}
	210 Move W24, W0
	211 Add X8, X31, 384
	212 Move X0, X27
	213 Move X1, X31
	214 Call Light.get_bakingOutput, X0
	215 Move W8, [X31+392]
	216 Move X0, [X23+152]
	217 NotImplemented "Instruction CMP not yet implemented."
	218 NotImplemented "Instruction CSET not yet implemented."
	219 Move [X31+56], W8
	220 Compare X0, 0
	221 JumpIfEqual {225}
	222 Move W1, W25
	223 Call AdditionalLightsShadowCasterPass.GetShadowLightIndexFromLightIndex, X0, X1
	224 Move [X31+60], W0
	225 Move TEMP, 0
	226 Not TEMP
	227 Move W8, TEMP
	228 Move [X31+60], W8
	229 Move X0, [X28]
	230 Move W8, [X0+224]
	231 Compare W8, 0
	232 JumpIfNotEqual {234}
	233 Call 0x1C17DFC
	234 Move X0, X27
	235 Move X1, X31
	236 Call Object.op_Implicit, X0
	237 Move TEMP, X0
	238 And TEMP, TEMP, 1
	239 Compare TEMP, 1
	240 JumpIfNotEqual {270}
	241 Move X0, X27
	242 Move X1, X31
	243 Call Light.get_shadows, X0
	244 Compare W0, 0
	245 JumpIfEqual {270}
	246 Move W26, [X31+60]
	247 Move X22, X28
	248 Move X28, X21
	249 Move X21, X20
	250 Move X20, [X31+48]
	251 NotImplemented "Instruction ORN not yet implemented."
	252 Move W3, W8
	253 ShiftRight W3, 31
	254 And W3, W3, 0x7FFFFFFF
	255 Add X1, X31, 664
	256 Move X2, X20
	257 Call DeferredLights.SetAdditionalLightsShadowsKeyword, X0, X1, X2, X3
	258 Move TEMP, X26
	259 And TEMP, TEMP, -2147483648
	260 Compare TEMP, -2147483648
	261 JumpIfEqual {275}
	262 Move W8, [X20+636]
	263 Compare W8, 0
	264 JumpIfEqual {275}
	265 Move X0, X27
	266 Move X1, X31
	267 Call Light.get_shadows, X0
	268 NotImplemented "Instruction CMP not yet implemented."
	269 NotImplemented "Instruction CSET not yet implemented."
	270 Move X2, [X31+48]
	271 Add X1, X31, 664
	272 Move W3, W31
	273 Call DeferredLights.SetAdditionalLightsShadowsKeyword, X0, X1, X2, X3
	274 Move W27, W31
	275 Move W27, W31
	276 Move X20, X21
	277 Move X21, X28
	278 Move X28, X22
	279 Move X22, 0x6B8000
	280 Move X22, [X22+440]
	281 Move W26, 0x3F800000
	282 Move X8, 0x6B8000
	283 Move X8, [X8+3776]
	284 Move X0, [X8]
	285 Move W8, [X0+224]
	286 Compare W8, 0
	287 JumpIfNotEqual {289}
	288 Call 0x1C17DFC
	289 Move X0, X19
	290 Move W1, W27
	291 Move X2, X31
	292 Call ShadowUtils.SetPerLightSoftShadowKeyword, X0, X1
	293 Move X27, 0x6B9000
	294 Move X0, [X23+232]
	295 Move X27, [X27+1864]
	296 Compare X0, 0
	297 JumpIfEqual {332}
	298 Move W1, W25
	299 Move X2, X31
	300 Call LightCookieManager.GetLightCookieShaderDataIndex, X0, X1
	301 Move X8, 0x67D000
	302 Move X8, [X8+2296]
	303 Move W25, W0
	304 Move X8, [X8]
	305 Move W9, [X8+224]
	306 Compare W9, 0
	307 JumpIfNotEqual {310}
	308 Move X0, X8
	309 Call 0x1C17DFC
	310 Move X8, 0x6B8000
	311 Move X8, [X8+368]
	312 Move X0, X19
	313 Move X3, X31
	314 Move X1, [X8]
	315 NotImplemented "Instruction ORN not yet implemented."
	316 Move W2, W8
	317 ShiftRight W2, 31
	318 And W2, W2, 0x7FFFFFFF
	319 Call CoreUtils.SetKeyword, X0, X1, X2
	320 Move X0, [X27]
	321 Move W8, [X0+224]
	322 Compare W8, 0
	323 JumpIfNotEqual {325}
	324 Call 0x1C17DFC
	325 Move X8, [X27]
	326 Move X0, X19
	327 Move W2, W25
	328 Move X3, X31
	329 Move X8, [X8+184]
	330 Move W1, [X8+156]
	331 Call CommandBuffer.SetGlobalInt, X0, X1, X2
	332 Move X0, [X27]
	333 Move W8, [X0+224]
	334 Compare W8, 0
	335 JumpIfNotEqual {337}
	336 Call 0x1C17DFC
	337 Move X8, [X27]
	338 Move V3, [X31+588]
	339 Move V2, [X31+584]
	340 Move V1, [X31+580]
	341 Move X8, [X8+184]
	342 Move V0, [X31+576]
	343 Move X0, X19
	344 Move X2, X31
	345 Move W1, [X8+124]
	346 Move W8, [X31+56]
	347 Move W25, W8
	348 ShiftRight W25, 30
	349 And W25, W25, 0x1FFFFFFF
	350 Call CommandBuffer.SetGlobalVector, X0, X1, X2
	351 Move X8, [X27]
	352 Move V0, [X31+560]
	353 Move V1, [X31+564]
	354 Move V2, [X31+568]
	355 Move X8, [X8+184]
	356 Move V3, [X31+572]
	357 Move X0, X19
	358 Move X2, X31
	359 Move W1, [X8+128]
	360 Call CommandBuffer.SetGlobalVector, X0, X1, X2
	361 Move X8, [X27]
	362 Move V0, [X31+544]
	363 Move V1, [X31+548]
	364 Move V2, [X31+552]
	365 Move X8, [X8+184]
	366 Move V3, [X31+556]
	367 Move X0, X19
	368 Move X2, X31
	369 Move W1, [X8+132]
	370 Call CommandBuffer.SetGlobalVector, X0, X1, X2
	371 Move X8, [X27]
	372 Move V0, [X31+512]
	373 Move V1, [X31+516]
	374 Move V2, [X31+520]
	375 Move X8, [X8+184]
	376 Move V3, [X31+524]
	377 Move X0, X19
	378 Move X2, X31
	379 Move W1, [X8+136]
	380 Call CommandBuffer.SetGlobalVector, X0, X1, X2
	381 Move X8, [X27]
	382 Move X0, X19
	383 Move W2, W25
	384 Move X3, X31
	385 Move X8, [X8+184]
	386 Move W1, [X8+144]
	387 Call CommandBuffer.SetGlobalInt, X0, X1, X2
	388 Move X8, [X27]
	389 Move W2, [X31+60]
	390 Move X0, X19
	391 Move X3, X31
	392 Move X8, [X8+184]
	393 Move W1, [X8+148]
	394 Call CommandBuffer.SetGlobalInt, X0, X1, X2
	395 Move X8, [X27]
	396 Move X0, X19
	397 Move W2, W24
	398 Move X3, X31
	399 Move X8, [X8+184]
	400 Move W1, [X8+152]
	401 Call CommandBuffer.SetGlobalInt, X0, X1, X2
	402 Move V1, [X31+624]
	403 Move V0, [X31+640]
	404 Move V3, [X31+592]
	405 Move V2, [X31+608]
	406 Move X1, [X23+160]
	407 Move [X31+416], V1
	408 Move [X31+424], V0
	409 Move [X31+384], V3
	410 Move [X31+392], V2
	411 Move X8, [X23+192]
	412 Compare X8, 0
	413 JumpIfEqual {518}
	414 Move W9, [X8+24]
	415 Compare W9, 0
	416 JumpIfEqual {519}
	417 Move X3, [X23+184]
	418 Move W5, [X8+32]
	419 Move V0, [X31+384]
	420 Move V1, [X31+400]
	421 Move V2, [X31+416]
	422 Move V3, [X31+432]
	423 Add X2, X31, 320
	424 Move X0, X19
	425 Move W4, W31
	426 Move X6, X31
	427 Move [X31+320], V0
	428 Move [X31+328], V1
	429 Move [X31+352], V2
	430 Move [X31+360], V3
	431 Call CommandBuffer.DrawMesh, X0, X1, X2, X3, X4, X5
	432 Move V1, [X31+624]
	433 Move V0, [X31+640]
	434 Move V3, [X31+592]
	435 Move V2, [X31+608]
	436 Move X1, [X23+160]
	437 Move [X31+288], V1
	438 Move [X31+296], V0
	439 Move [X31+256], V3
	440 Move [X31+264], V2
	441 Move X8, [X23+192]
	442 Compare X8, 0
	443 JumpIfEqual {518}
	444 Move W9, [X8+24]
	445 NotImplemented "Instruction CMP not yet implemented."
	446 Move X3, [X23+184]
	447 Move W5, [X8+36]
	448 Move V0, [X31+256]
	449 Move V1, [X31+272]
	450 Move V2, [X31+288]
	451 Move V3, [X31+304]
	452 Add X2, X31, 192
	453 Move X0, X19
	454 Move W4, W31
	455 Move X6, X31
	456 Move [X31+192], V0
	457 Move [X31+200], V1
	458 Move [X31+224], V2
	459 Move [X31+232], V3
	460 Call CommandBuffer.DrawMesh, X0, X1, X2, X3, X4, X5
	461 Move V1, [X31+624]
	462 Move V0, [X31+640]
	463 Move V3, [X31+592]
	464 Move V2, [X31+608]
	465 Move X1, [X23+160]
	466 Move [X31+160], V1
	467 Move [X31+168], V0
	468 Move [X31+128], V3
	469 Move [X31+136], V2
	470 Move X8, [X23+192]
	471 Compare X8, 0
	472 JumpIfEqual {518}
	473 Move W9, [X8+24]
	474 NotImplemented "Instruction CMP not yet implemented."
	475 Move X3, [X23+184]
	476 Move W5, [X8+40]
	477 Move V0, [X31+128]
	478 Move V1, [X31+144]
	479 Move V2, [X31+160]
	480 Move V3, [X31+176]
	481 Add X2, X31, 64
	482 Move X0, X19
	483 Move W4, W31
	484 Move X6, X31
	485 Move [X31+64], V0
	486 Move [X31+72], V1
	487 Move [X31+96], V2
	488 Move [X31+104], V3
	489 Call CommandBuffer.DrawMesh, X0, X1, X2, X3, X4, X5
	490 NotImplemented "Instruction LDRSW not yet implemented."
	491 Add X29, X29, 1
	492 NotImplemented "Instruction CMP not yet implemented."
	493 Move X8, 0x6B9000
	494 Move X8, [X8+1936]
	495 Move X0, X19
	496 Move X2, X31
	497 Move X1, [X8]
	498 Call CommandBuffer.DisableShaderKeyword, X0, X1
	499 Add X31, X31, 656
	500 Move X20, [X31+128]
	501 Move X19, [X31+136]
	502 Move X22, [X31+112]
	503 Move X21, [X31+120]
	504 Move X24, [X31+96]
	505 Move X23, [X31+104]
	506 Move X26, [X31+80]
	507 Move X25, [X31+88]
	508 Move X28, [X31+64]
	509 Move X27, [X31+72]
	510 Move X29, [X31+48]
	511 Move X30, [X31+56]
	512 Move D9, [X31+32]
	513 Move D8, [X31+40]
	514 Move D11, [X31+16]
	515 Move D10, [X31+24]
	516 Move V12, [X31+144]
	517 Return 
	518 Call 0x1C17F20
	519 Call 0x1C17F28

Method: System.Void RenderStencilSpotLights(UnityEngine.Rendering.CommandBuffer cmd, ref UnityEngine.Rendering.Universal.RenderingData renderingData, Unity.Collections.NativeArray`1<UnityEngine.Rendering.VisibleLight> visibleLights)

Disassembly:
	0x03A9FDD4 LDR V0, [X9 + 0xE10]
	0x03A9FDD8 CMP W8, 0xB
	0x03A9FDDC STR W31, [X19 + 0xA0]
	0x03A9FDE0 STR D0, [X19 + 0x98]
	0x03A9FDE4 B.EQ 0x3AA0214
	0x03A9FDE8 MOVZ W9, 0x4F7
	0x03A9FDEC MOVK W9, 0xBF350000
	0x03A9FDF0 CMP W8, 0xC
	0x03A9FDF4 UNIMPLEMENTED
	0x03A9FDF8 STUR D0, [X19 + 0xA4]
	0x03A9FDFC STR W31, [X19 + 0xAC]
	0x03A9FE00 B.LS 0x3AA0214
	0x03A9FE04 ADRP X9, 0xFFFFFFFFFD04F000
	0x03A9FE08 LDR V0, [X9 + 0x70]
	0x03A9FE0C CMP W8, 0xD
	0x03A9FE10 STR W31, [X19 + 0xB8]
	0x03A9FE14 STR D0, [X19 + 0xB0]
	0x03A9FE18 B.EQ 0x3AA0214
	0x03A9FE1C ADRP X9, 0xFFFFFFFFFD04F000
	0x03A9FE20 LDR V0, [X9 + 0x278]
	0x03A9FE24 CMP W8, 0xE
	0x03A9FE28 STR W31, [X19 + 0xC4]
	0x03A9FE2C STUR D0, [X19 + 0xBC]
	0x03A9FE30 B.LS 0x3AA0214
	0x03A9FE34 ADRP X9, 0xFFFFFFFFFD04E000
	0x03A9FE38 LDR V0, [X9 + 0x430]
	0x03A9FE3C CMP W8, 0xF
	0x03A9FE40 STR W31, [X19 + 0xD0]
	0x03A9FE44 STR D0, [X19 + 0xC8]
	0x03A9FE48 B.EQ 0x3AA0214
	0x03A9FE4C ADRP X9, 0xFFFFFFFFFD04F000
	0x03A9FE50 LDR V0, [X9 + 0x78]
	0x03A9FE54 CMP W8, 0x10
	0x03A9FE58 STR W31, [X19 + 0xDC]
	0x03A9FE5C STUR D0, [X19 + 0xD4]
	0x03A9FE60 B.LS 0x3AA0214
	0x03A9FE64 ADRP X9, 0xFFFFFFFFFD04E000
	0x03A9FE68 LDR V0, [X9 + 0x538]
	0x03A9FE6C CMP W8, 0x11
	0x03A9FE70 STR W31, [X19 + 0xE8]
	0x03A9FE74 STR D0, [X19 + 0xE0]
	0x03A9FE78 B.EQ 0x3AA0214
	0x03A9FE7C MOVZ W9, 0x3F800000
	0x03A9FE80 CMP W8, 0x12
	0x03A9FE84 STP W31, W31, [X19 + 0xEC]
	0x03A9FE88 STR W9, [X19 + 0xF4]
	0x03A9FE8C B.LS 0x3AA0214
	0x03A9FE90 ADRP X9, 0xFFFFFFFFFD04E000
	0x03A9FE94 LDR V0, [X9 + 0x620]
	0x03A9FE98 MOVZ W9, 0x4F7
	0x03A9FE9C MOVK W9, 0x3F350000
	0x03A9FEA0 CMP W8, 0x13
	0x03A9FEA4 STR D0, [X19 + 0xF8]
	0x03A9FEA8 STR W9, [X19 + 0x100]
	0x03A9FEAC B.EQ 0x3AA0214
	0x03A9FEB0 ADRP X10, 0xFFFFFFFFFD04E000
	0x03A9FEB4 LDR V0, [X10 + 0x438]
	0x03A9FEB8 ADD X10, X19, 0x104
	0x03A9FEBC CMP W8, 0x14
	0x03A9FEC0 STR D0, [X10]
	0x03A9FEC4 STR W9, [X19 + 0x10C]
	0x03A9FEC8 B.LS 0x3AA0214
	0x03A9FECC ADRP X9, 0xFFFFFFFFFD04E000
	0x03A9FED0 LDR V0, [X9 + 0xBE0]
	0x03A9FED4 MOVZ W9, 0x4F7
	0x03A9FED8 MOVK W9, 0x3F350000
	0x03A9FEDC CMP W8, 0x15
	0x03A9FEE0 STR D0, [X19 + 0x110]
	0x03A9FEE4 STR W9, [X19 + 0x118]
	0x03A9FEE8 B.EQ 0x3AA0214
	0x03A9FEEC ADRP X10, 0xFFFFFFFFFD04E000
	0x03A9FEF0 LDR V0, [X10 + 0xF18]
	0x03A9FEF4 ADD X10, X19, 0x11C
	0x03A9FEF8 CMP W8, 0x16
	0x03A9FEFC STR W9, [X10 + 0x8]
	0x03A9FF00 STR D0, [X10]
	0x03A9FF04 B.LS 0x3AA0214
	0x03A9FF08 ADRP X9, 0xFFFFFFFFFD04E000
	0x03A9FF0C LDR V0, [X9 + 0x7E8]
	0x03A9FF10 MOVZ W9, 0x5E2
	0x03A9FF14 MOVK W9, 0x3ED10000
	0x03A9FF18 CMP W8, 0x17
	0x03A9FF1C STR D0, [X19 + 0x128]
	0x03A9FF20 STR W9, [X19 + 0x130]
	0x03A9FF24 B.EQ 0x3AA0214
	0x03A9FF28 ADRP X9, 0xFFFFFFFFFD04E000
	0x03A9FF2C LDR V0, [X9 + 0xBE8]
	0x03A9FF30 MOVZ W10, 0x5F3
	0x03A9FF34 ADD X9, X19, 0x134
	0x03A9FF38 MOVK W10, 0x3F510000
	0x03A9FF3C CMP W8, 0x18
	0x03A9FF40 STR D0, [X9]
	0x03A9FF44 STR W10, [X9 + 0x8]
	0x03A9FF48 B.LS 0x3AA0214
	0x03A9FF4C ADRP X9, 0xFFFFFFFFFD04E000
	0x03A9FF50 LDR V0, [X9 + 0x490]
	0x03A9FF54 MOVZ W9, 0x5E2
	0x03A9FF58 MOVK W9, 0x3ED10000
	0x03A9FF5C CMP W8, 0x19
	0x03A9FF60 STR D0, [X19 + 0x140]
	0x03A9FF64 STR W9, [X19 + 0x148]
	0x03A9FF68 B.EQ 0x3AA0214
	0x03A9FF6C ADRP X10, 0xFFFFFFFFFD04F000
	0x03A9FF70 LDR V0, [X10 + 0x340]
	0x03A9FF74 ADD X10, X19, 0x14C
	0x03A9FF78 CMP W8, 0x1A
	0x03A9FF7C STR W9, [X10 + 0x8]
	0x03A9FF80 STR D0, [X10]
	0x03A9FF84 B.LS 0x3AA0214
	0x03A9FF88 MOVZ W9, 0x5E2
	0x03A9FF8C MOVK W9, 0x3ED10000
	0x03A9FF90 MOVZ W10, 0x5F3
	0x03A9FF94 MOVK W10, 0x3F510000
	0x03A9FF98 CMP W8, 0x1B
	0x03A9FF9C UNIMPLEMENTED
	0x03A9FFA0 STR D0, [X19 + 0x158]
	0x03A9FFA4 STR W10, [X19 + 0x160]
	0x03A9FFA8 B.EQ 0x3AA0214
	0x03A9FFAC ADRP X10, 0xFFFFFFFFFD04E000
	0x03A9FFB0 LDR V0, [X10 + 0xC80]
	0x03A9FFB4 ADD X10, X19, 0x164
	0x03A9FFB8 CMP W8, 0x1C
	0x03A9FFBC STR W9, [X10 + 0x8]
	0x03A9FFC0 STR D0, [X10]
	0x03A9FFC4 B.LS 0x3AA0214
	0x03A9FFC8 ADRP X9, 0xFFFFFFFFFD04E000
	0x03A9FFCC LDR V0, [X9 + 0x698]
	0x03A9FFD0 MOVZ W9, 0x5E2
	0x03A9FFD4 MOVK W9, 0x3ED10000
	0x03A9FFD8 CMP W8, 0x1D
	0x03A9FFDC STR D0, [X19 + 0x170]
	0x03A9FFE0 STR W9, [X19 + 0x178]
	0x03A9FFE4 B.EQ 0x3AA0214
	0x03A9FFE8 ADRP X9, 0xFFFFFFFFFD04E000
	0x03A9FFEC LDR V0, [X9 + 0x960]
	0x03A9FFF0 MOVZ W10, 0x5F3
	0x03A9FFF4 ADD X9, X19, 0x17C
	0x03A9FFF8 MOVK W10, 0x3F510000
	0x03A9FFFC CMP W8, 0x1E
	0x03AA0000 STR D0, [X9]
	0x03AA0004 STR W10, [X9 + 0x8]
	0x03AA0008 B.LS 0x3AA0214
	0x03AA000C ADRP X9, 0xFFFFFFFFFD04E000
	0x03AA0010 LDR V0, [X9 + 0x4D8]
	0x03AA0014 MOVZ W9, 0x5E2
	0x03AA0018 MOVK W9, 0x3ED10000
	0x03AA001C CMP W8, 0x1F
	0x03AA0020 STR D0, [X19 + 0x188]
	0x03AA0024 STR W9, [X19 + 0x190]
	0x03AA0028 B.EQ 0x3AA0214
	0x03AA002C ADRP X10, 0xFFFFFFFFFD04D000
	0x03AA0030 LDR V0, [X10 + 0x968]
	0x03AA0034 ADD X10, X19, 0x194
	0x03AA0038 CMP W8, 0x20
	0x03AA003C STR W9, [X10 + 0x8]
	0x03AA0040 STR D0, [X10]
	0x03AA0044 B.LS 0x3AA0214
	0x03AA0048 MOVZ W9, 0x5E2
	0x03AA004C MOVK W9, 0xBED10000
	0x03AA0050 MOVZ W10, 0x5F3
	0x03AA0054 MOVK W10, 0x3F510000
	0x03AA0058 CMP W8, 0x21
	0x03AA005C UNIMPLEMENTED
	0x03AA0060 STR D0, [X19 + 0x1A0]
	0x03AA0064 STR W10, [X19 + 0x1A8]
	0x03AA0068 B.EQ 0x3AA0214
	0x03AA006C ADRP X9, 0xFFFFFFFFFD04E000
	0x03AA0070 LDR V0, [X9 + 0x190]
	0x03AA0074 MOVZ W10, 0x5E2
	0x03AA0078 ADD X9, X19, 0x1AC
	0x03AA007C MOVK W10, 0x3ED10000
	0x03AA0080 CMP W8, 0x22
	0x03AA0084 STR D0, [X9]
	0x03AA0088 STR W10, [X9 + 0x8]
	0x03AA008C B.LS 0x3AA0214
	0x03AA0090 ADRP X9, 0xFFFFFFFFFD04D000
	0x03AA0094 LDR V0, [X9 + 0xF20]
	0x03AA0098 MOVZ W9, 0xEF07
	0x03AA009C MOVK W9, 0x3EC30000
	0x03AA00A0 CMP W8, 0x23
	0x03AA00A4 STR D0, [X19 + 0x1B8]
	0x03AA00A8 STR W9, [X19 + 0x1C0]
	0x03AA00AC B.EQ 0x3AA0214
	0x03AA00B0 ADRP X10, 0xFFFFFFFFFD04E000
	0x03AA00B4 LDR V0, [X10 + 0x568]
	0x03AA00B8 ADD X10, X19, 0x1C4
	0x03AA00BC CMP W8, 0x24
	0x03AA00C0 STR W9, [X10 + 0x8]
	0x03AA00C4 STR D0, [X10]
	0x03AA00C8 B.LS 0x3AA0214
	0x03AA00CC ADRP X9, 0xFFFFFFFFFD04E000
	0x03AA00D0 LDR V0, [X9 + 0x570]
	0x03AA00D4 MOVZ W9, 0x8366
	0x03AA00D8 MOVK W9, 0x3F6C0000
	0x03AA00DC CMP W8, 0x25
	0x03AA00E0 STR D0, [X19 + 0x1D0]
	0x03AA00E4 STR W9, [X19 + 0x1D8]
	0x03AA00E8 B.EQ 0x3AA0214
	0x03AA00EC ADRP X10, 0xFFFFFFFFFD04E000
	0x03AA00F0 LDR V0, [X10 + 0x578]
	0x03AA00F4 ADD X10, X19, 0x1DC
	0x03AA00F8 CMP W8, 0x26
	0x03AA00FC STR W9, [X10 + 0x8]
	0x03AA0100 STR D0, [X10]
	0x03AA0104 B.LS 0x3AA0214
	0x03AA0108 ADRP X9, 0xFFFFFFFFFD04E000
	0x03AA010C LDR V0, [X9 + 0x580]
	0x03AA0110 MOVZ W9, 0xEF07
	0x03AA0114 MOVK W9, 0x3EC30000
	0x03AA0118 CMP W8, 0x27
	0x03AA011C STR D0, [X19 + 0x1E8]
	0x03AA0120 STR W9, [X19 + 0x1F0]
	0x03AA0124 B.EQ 0x3AA0214
	0x03AA0128 ADRP X9, 0xFFFFFFFFFD04E000
	0x03AA012C LDR V0, [X9 + 0x588]
	0x03AA0130 MOVZ W10, 0x8366
	0x03AA0134 ADD X9, X19, 0x1F4
	0x03AA0138 MOVK W10, 0x3F6C0000
	0x03AA013C CMP W8, 0x28
	0x03AA0140 STR D0, [X9]
	0x03AA0144 STR W10, [X9 + 0x8]
	0x03AA0148 B.LS 0x3AA0214
	0x03AA014C ADRP X9, 0xFFFFFFFFFD04D000
	0x03AA0150 LDR V0, [X9 + 0xBF0]
	0x03AA0154 MOVZ W9, 0xEF07
	0x03AA0158 MOVK W9, 0x3EC30000
	0x03AA015C CMP W8, 0x29
	0x03AA0160 STR D0, [X19 + 0x200]
	0x03AA0164 STR W9, [X19 + 0x208]
	0x03AA0168 B.EQ 0x3AA0214
	0x03AA016C ADRP X8, 0xFFFFFFFFFD04D000
	0x03AA0170 LDR V0, [X8 + 0x970]
	0x03AA0174 ADRP X8, 0x654000
	0x03AA0178 LDR X8, [X8 + 0xE58]
	0x03AA017C MOVZ W10, 0x8366
	0x03AA0180 ADD X9, X19, 0x20C
	0x03AA0184 MOVK W10, 0x3F6C0000
	0x03AA0188 STR D0, [X9]
	0x03AA018C STR W10, [X9 + 0x8]
	0x03AA0190 LDR X0, [X8]
	0x03AA0194 ADRP X20, 0x6B7000
	0x03AA0198 ADRP X21, 0x65A000
	0x03AA019C LDR X20, [X20 + 0x7A8]
	0x03AA01A0 LDR X21, [X21 + 0x700]
	0x03AA01A4 MOVZ W1, 0xF0
	0x03AA01A8 BL 0x1C16D6C
	0x03AA01AC LDR X1, [X20]
	0x03AA01B0 MOV X2, X31
	0x03AA01B4 MOV X20, X0
	0x03AA01B8 BL 0x32C5BD8
	0x03AA01BC LDR X0, [X21]
	0x03AA01C0 BL 0x1C16F10
	0x03AA01C4 MOV X1, X31
	0x03AA01C8 MOV X21, X0
	0x03AA01CC BL 0x3C17028
	0x03AA01D0 CBZ X21, 0x3AA0218
	0x03AA01D4 MOV X0, X21
	0x03AA01D8 MOV W1, W31
	0x03AA01DC MOV X2, X31
	0x03AA01E0 BL 0x3C170A8
	0x03AA01E4 MOV X0, X21
	0x03AA01E8 MOV X1, X19
	0x03AA01EC MOV X2, X31
	0x03AA01F0 BL 0x3C17F08
	0x03AA01F4 MOV X0, X21
	0x03AA01F8 MOV X1, X20
	0x03AA01FC MOV X2, X31
	0x03AA0200 BL 0x3C18FF0
	0x03AA0204 LDP X20, X19, [X31 + 0x10]
	0x03AA0208 MOV X0, X21
	0x03AA020C LDP X30, X21, [X31], #0x20
	0x03AA0210 RET
	0x03AA0214 BL 0x1C16F28
	0x03AA0218 BL 0x1C16F20
	0x03AA021C STR X30, [X31 - 0x30]!
	0x03AA0220 STP X22, X21, [X31 + 0x10]
	0x03AA0224 STP X20, X19, [X31 + 0x20]
	0x03AA0228 ADRP X20, 0x942000
	0x03AA022C ADRP X19, 0x653000
	0x03AA0230 LDRB W8, [X20 + 0x3FA]
	0x03AA0234 LDR X19, [X19 + 0xAC8]
	0x03AA0238 TBNZ X8, 0x0, 0x3AA0364
	0x03AA023C ADRP X0, 0x6B7000
	0x03AA0240 LDR X0, [X0 + 0x148]
	0x03AA0244 BL 0x1C16CF4
	0x03AA0248 ADRP X0, 0x6B0000
	0x03AA024C LDR X0, [X0 + 0x598]
	0x03AA0250 BL 0x1C16CF4
	0x03AA0254 ADRP X0, 0x653000
	0x03AA0258 LDR X0, [X0 + 0xAC8]
	0x03AA025C BL 0x1C16CF4
	0x03AA0260 ADRP X0, 0x6B7000
	0x03AA0264 LDR X0, [X0 + 0x7B0]
	0x03AA0268 BL 0x1C16CF4
	0x03AA026C ADRP X0, 0x6B7000
	0x03AA0270 LDR X0, [X0 + 0x7B8]
	0x03AA0274 BL 0x1C16CF4
	0x03AA0278 ADRP X0, 0x6B7000
	0x03AA027C LDR X0, [X0 + 0x7C0]
	0x03AA0280 BL 0x1C16CF4
	0x03AA0284 ADRP X0, 0x6B7000
	0x03AA0288 LDR X0, [X0 + 0x7C8]
	0x03AA028C BL 0x1C16CF4
	0x03AA0290 ADRP X0, 0x6B7000
	0x03AA0294 LDR X0, [X0 + 0x7D0]
	0x03AA0298 BL 0x1C16CF4
	0x03AA029C ADRP X0, 0x6B7000
	0x03AA02A0 LDR X0, [X0 + 0x7D8]
	0x03AA02A4 BL 0x1C16CF4
	0x03AA02A8 ADRP X0, 0x6B7000
	0x03AA02AC LDR X0, [X0 + 0x7E0]
	0x03AA02B0 BL 0x1C16CF4
	0x03AA02B4 ADRP X0, 0x6B7000
	0x03AA02B8 LDR X0, [X0 + 0x7E8]
	0x03AA02BC BL 0x1C16CF4
	0x03AA02C0 ADRP X0, 0x6B7000
	0x03AA02C4 LDR X0, [X0 + 0x7F0]
	0x03AA02C8 BL 0x1C16CF4
	0x03AA02CC ADRP X0, 0x6B7000
	0x03AA02D0 LDR X0, [X0 + 0x7F8]
	0x03AA02D4 BL 0x1C16CF4
	0x03AA02D8 ADRP X0, 0x6B7000
	0x03AA02DC LDR X0, [X0 + 0x800]
	0x03AA02E0 BL 0x1C16CF4
	0x03AA02E4 ADRP X0, 0x6B7000
	0x03AA02E8 LDR X0, [X0 + 0x808]
	0x03AA02EC BL 0x1C16CF4
	0x03AA02F0 ADRP X0, 0x6B7000
	0x03AA02F4 LDR X0, [X0 + 0x810]
	0x03AA02F8 BL 0x1C16CF4
	0x03AA02FC ADRP X0, 0x6B7000
	0x03AA0300 LDR X0, [X0 + 0x818]
	0x03AA0304 BL 0x1C16CF4
	0x03AA0308 ADRP X0, 0x6B7000
	0x03AA030C LDR X0, [X0 + 0x820]
	0x03AA0310 BL 0x1C16CF4
	0x03AA0314 ADRP X0, 0x6B7000
	0x03AA0318 LDR X0, [X0 + 0x828]
	0x03AA031C BL 0x1C16CF4
	0x03AA0320 ADRP X0, 0x6B7000
	0x03AA0324 LDR X0, [X0 + 0x830]
	0x03AA0328 BL 0x1C16CF4
	0x03AA032C ADRP X0, 0x6B7000
	0x03AA0330 LDR X0, [X0 + 0x838]
	0x03AA0334 BL 0x1C16CF4
	0x03AA0338 ADRP X0, 0x6B7000
	0x03AA033C LDR X0, [X0 + 0x840]
	0x03AA0340 BL 0x1C16CF4
	0x03AA0344 ADRP X0, 0x6B7000
	0x03AA0348 LDR X0, [X0 + 0x848]
	0x03AA034C BL 0x1C16CF4
	0x03AA0350 ADRP X0, 0x6B7000
	0x03AA0354 LDR X0, [X0 + 0x850]
	0x03AA0358 BL 0x1C16CF4
	0x03AA035C MOVZ W8, 0x1
	0x03AA0360 STRB W8, [X20 + 0x3FA]
	0x03AA0364 LDR X0, [X19]
	0x03AA0368 MOVZ W1, 0x7
	0x03AA036C BL 0x1C16D6C
	0x03AA0370 CBZ X0, 0x3AA0610
	0x03AA0374 LDR W8, [X0 + 0x18]
	0x03AA0378 CBZ W8, 0x3AA060C
	0x03AA037C ADRP X9, 0x6B7000
	0x03AA0380 LDR X9, [X9 + 0x848]
	0x03AA0384 CMP W8, 0x1
	0x03AA0388 LDR X9, [X9]
	0x03AA038C STR X9, [X0 + 0x20]
	0x03AA0390 B.EQ 0x3AA060C
	0x03AA0394 ADRP X9, 0x6B7000
	0x03AA0398 LDR X9, [X9 + 0x7D8]
	0x03AA039C CMP W8, 0x2
	0x03AA03A0 LDR X9, [X9]
	0x03AA03A4 STR X9, [X0 + 0x28]
	0x03AA03A8 B.LS 0x3AA060C
	0x03AA03AC ADRP X9, 0x6B7000
	0x03AA03B0 LDR X9, [X9 + 0x830]
	0x03AA03B4 CMP W8, 0x3
	0x03AA03B8 LDR X9, [X9]
	0x03AA03BC STR X9, [X0 + 0x30]
	0x03AA03C0 B.EQ 0x3AA060C
	0x03AA03C4 ADRP X9, 0x6B7000
	0x03AA03C8 LDR X9, [X9 + 0x820]
	0x03AA03CC CMP W8, 0x4
	0x03AA03D0 LDR X9, [X9]
	0x03AA03D4 STR X9, [X0 + 0x38]
	0x03AA03D8 B.LS 0x3AA060C
	0x03AA03DC ADRP X9, 0x6B7000
	0x03AA03E0 LDR X9, [X9 + 0x828]
	0x03AA03E4 CMP W8, 0x5
	0x03AA03E8 LDR X9, [X9]
	0x03AA03EC STR X9, [X0 + 0x40]
	0x03AA03F0 B.EQ 0x3AA060C
	0x03AA03F4 ADRP X9, 0x6B7000
	0x03AA03F8 LDR X9, [X9 + 0x850]
	0x03AA03FC CMP W8, 0x6
	0x03AA0400 LDR X9, [X9]
	0x03AA0404 STR X9, [X0 + 0x48]
	0x03AA0408 B.LS 0x3AA060C
	0x03AA040C ADRP X8, 0x6B7000
	0x03AA0410 LDR X8, [X8 + 0x7E0]
	0x03AA0414 ADRP X21, 0x6B7000
	0x03AA0418 MOVZ W1, 0x8
	0x03AA041C LDR X8, [X8]
	0x03AA0420 LDR X21, [X21 + 0x148]
	0x03AA0424 STR X8, [X0 + 0x50]
	0x03AA0428 LDR X8, [X21]
	0x03AA042C LDR X8, [X8 + 0xB8]
	0x03AA0430 STR X0, [X8]
	0x03AA0434 LDR X0, [X19]
	0x03AA0438 BL 0x1C16D6C
	0x03AA043C CBZ X0, 0x3AA0610
	0x03AA0440 LDR W8, [X0 + 0x18]
	0x03AA0444 CBZ W8, 0x3AA060C
	0x03AA0448 ADRP X9, 0x6B7000
	0x03AA044C LDR X9, [X9 + 0x7B8]
	0x03AA0450 CMP W8, 0x1
	0x03AA0454 LDR X9, [X9]
	0x03AA0458 STR X9, [X0 + 0x20]
	0x03AA045C B.EQ 0x3AA060C
	0x03AA0460 ADRP X9, 0x6B7000
	0x03AA0464 LDR X9, [X9 + 0x800]
	0x03AA0468 CMP W8, 0x2
	0x03AA046C LDR X9, [X9]
	0x03AA0470 STR X9, [X0 + 0x28]
	0x03AA0474 B.LS 0x3AA060C
	0x03AA0478 ADRP X9, 0x6B7000
	0x03AA047C LDR X9, [X9 + 0x818]
	0x03AA0480 CMP W8, 0x3
	0x03AA0484 LDR X9, [X9]
	0x03AA0488 STR X9, [X0 + 0x30]
	0x03AA048C B.EQ 0x3AA060C
	0x03AA0490 ADRP X9, 0x6B7000
	0x03AA0494 LDR X9, [X9 + 0x7F8]
	0x03AA0498 CMP W8, 0x4
	0x03AA049C LDR X9, [X9]
	0x03AA04A0 STR X9, [X0 + 0x38]
	0x03AA04A4 B.LS 0x3AA060C
	0x03AA04A8 ADRP X9, 0x6B7000
	0x03AA04AC LDR X9, [X9 + 0x7E8]
	0x03AA04B0 CMP W8, 0x5
	0x03AA04B4 LDR X9, [X9]
	0x03AA04B8 STR X9, [X0 + 0x40]
	0x03AA04BC B.EQ 0x3AA060C
	0x03AA04C0 ADRP X9, 0x6B7000
	0x03AA04C4 LDR X9, [X9 + 0x7B0]
	0x03AA04C8 CMP W8, 0x6
	0x03AA04CC LDR X9, [X9]
	0x03AA04D0 STR X9, [X0 + 0x48]
	0x03AA04D4 B.LS 0x3AA060C
	0x03AA04D8 ADRP X9, 0x6B7000
	0x03AA04DC LDR X9, [X9 + 0x7C8]
	0x03AA04E0 CMP W8, 0x7
	0x03AA04E4 LDR X9, [X9]
	0x03AA04E8 STR X9, [X0 + 0x50]
	0x03AA04EC B.EQ 0x3AA060C
	0x03AA04F0 ADRP X8, 0x6B7000
	0x03AA04F4 LDR X8, [X8 + 0x7D0]
	0x03AA04F8 ADRP X9, 0x6B7000
	0x03AA04FC MOVZ W10, 0xFFFF
	0x03AA0500 ADRP X22, 0x6B0000
	0x03AA0504 LDR X8, [X8]
	0x03AA0508 STR X8, [X0 + 0x58]
	0x03AA050C LDR X8, [X21]
	0x03AA0510 LDR X8, [X8 + 0xB8]
	0x03AA0514 LDR X9, [X9 + 0x808]
	0x03AA0518 STR X0, [X8 + 0x8]
	0x03AA051C STRH W10, [X8 + 0x10]
	0x03AA0520 LDR X19, [X9]
	0x03AA0524 ADRP X9, 0x6B7000
	0x03AA0528 LDR X9, [X9 + 0x7C0]
	0x03AA052C ADRP X10, 0x6B7000
	0x03AA0530 STR X19, [X8 + 0x18]
	0x03AA0534 LDR X9, [X9]
	0x03AA0538 LDR X10, [X10 + 0x810]
	0x03AA053C STR X9, [X8 + 0x20]
	0x03AA0540 LDR X9, [X10]
	0x03AA0544 ADRP X10, 0x6B7000
	0x03AA0548 LDR X10, [X10 + 0x7F0]
	0x03AA054C STR X9, [X8 + 0x28]
	0x03AA0550 LDR X9, [X10]
	0x03AA0554 ADRP X10, 0x6B7000
	0x03AA0558 LDR X10, [X10 + 0x838]
	0x03AA055C STR X9, [X8 + 0x30]
	0x03AA0560 LDR X9, [X10]
	0x03AA0564 ADRP X10, 0x6B7000
	0x03AA0568 LDR X10, [X10 + 0x840]
	0x03AA056C STR X9, [X8 + 0x38]
	0x03AA0570 LDR X9, [X10]
	0x03AA0574 LDR X22, [X22 + 0x598]
	0x03AA0578 MOVZ W10, 0xC409
	0x03AA057C MOVK W10, 0x3F870000
	0x03AA0580 STR X9, [X8 + 0x40]
	0x03AA0584 STR W10, [X8 + 0x48]
	0x03AA0588 LDR X0, [X22]
	0x03AA058C BL 0x1C16F10
	0x03AA0590 MOV X1, X19
	0x03AA0594 MOV X2, X31
	0x03AA0598 MOV X20, X0
	0x03AA059C BL 0x39B19AC

ISIL:
	001 Move [X31-160], D15
	002 Move [X31-152], D14
	003 Move [X31+16], D13
	004 Move [X31+24], D12
	005 Move [X31+32], D11
	006 Move [X31+40], D10
	007 Move [X31+48], D9
	008 Move [X31+56], D8
	009 Move [X31+64], X29
	010 Move [X31+72], X30
	011 Move [X31+80], X28
	012 Move [X31+88], X27
	013 Move [X31+96], X26
	014 Move [X31+104], X25
	015 Move [X31+112], X24
	016 Move [X31+120], X23
	017 Move [X31+128], X22
	018 Move [X31+136], X21
	019 Move [X31+144], X20
	020 Move [X31+152], X19
	021 Subtract X31, X31, 592
	022 Move X19, 0x944000
	023 Move W8, [X19+1011]
	024 Move X20, X4
	025 Move X25, X3
	026 Move X28, X2
	027 Move X23, X1
	028 Move X22, X0
	029 Move [X31+584], X1
	030 Move TEMP, X8
	031 And TEMP, TEMP, 1
	032 Compare TEMP, 1
	033 JumpIfEqual {63}
	034 Move X0, 0x67D000
	035 Move X0, [X0+2296]
	036 Call 0x1C17CF4
	037 Move X0, 0x6B9000
	038 Move X0, [X0+328]
	039 Call 0x1C17CF4
	040 Move X0, 0x6B8000
	041 Move X0, [X0+440]
	042 Call 0x1C17CF4
	043 Move X0, 0x655000
	044 Move X0, [X0+1432]
	045 Call 0x1C17CF4
	046 Move X0, 0x6B9000
	047 Move X0, [X0+1864]
	048 Call 0x1C17CF4
	049 Move X0, 0x6B8000
	050 Move X0, [X0+3776]
	051 Call 0x1C17CF4
	052 Move X0, 0x67E000
	053 Move X0, [X0+2216]
	054 Call 0x1C17CF4
	055 Move X0, 0x6B9000
	056 Move X0, [X0+1944]
	057 Call 0x1C17CF4
	058 Move X0, 0x6B8000
	059 Move X0, [X0+368]
	060 Call 0x1C17CF4
	061 Move W8, 1
	062 Move [X19+1011], W8
	063 Move [X31+576], X31
	064 Move [X31+568], X31
	065 Move [X31+560], X31
	066 Move [X31+552], X31
	067 Move [X31+544], X31
	068 Move [X31+536], X31
	069 Move X8, 0x655000
	070 Move X8, [X8+1432]
	071 Move [X31+528], X31
	072 Move [X31+520], X31
	073 Move [X31+504], X31
	074 Move [X31+512], X31
	075 Move X0, [X8]
	076 Move X24, [X22+168]
	077 Move W8, [X0+224]
	078 Compare W8, 0
	079 JumpIfNotEqual {81}
	080 Call 0x1C17DFC
	081 Move X0, X24
	082 Move X1, X31
	083 Move X2, X31
	084 Call Object.op_Equality, X0, X1
	085 Move TEMP, X0
	086 And TEMP, TEMP, 1
	087 Compare TEMP, 1
	088 JumpIfNotEqual {98}
	089 Move X8, 0x6B9000
	090 Move X8, [X8+328]
	091 Move X0, [X8]
	092 Move W8, [X0+224]
	093 Compare W8, 0
	094 JumpIfNotEqual {96}
	095 Call 0x1C17DFC
	096 Call DeferredLights.CreateHemisphereMesh
	097 Move [X22+168], X0
	098 Compare X23, 0
	099 JumpIfEqual {597}
	100 Move X19, 0x6B9000
	101 Move X19, [X19+1944]
	102 Move X0, X23
	103 Move X2, X31
	104 Move X1, [X19]
	105 Call CommandBuffer.EnableShaderKeyword, X0, X1
	106 Move X8, [X22+136]
	107 Move X24, 0x6B9000
	108 NotImplemented "Instruction LDRH not yet implemented."
	109 Move W8, [X22+128]
	110 Move X24, [X24+328]
	111 NotImplemented "Instruction CMP not yet implemented."
	112 Move X8, -50020352
	113 Move X19, 0x6B9000
	114 Move V14, [X8+260]
	115 Move X19, [X19+1864]
	116 Add X21, X31, 176
	117 Move S11, 1
	118 Move S12, W31
	119 Move S13, -1
	120 Move [X31+24], X20
	121 Move [X31+32], X28
	122 Move [X31+16], X25
	123 Move X8, [X22+120]
	124 Move X0, X25
	125 Move X1, X20
	126 NotImplemented "Instruction LDRH not yet implemented."
	127 Move X8, 0x6B8000
	128 Move X8, [X8+440]
	129 Move W2, W26
	130 Move X3, [X8]
	131 Call 0x22232C0, X0, X1
	132 Move X1, X31
	133 Move X23, X0
	134 Call VisibleLight.get_lightType, X0
	135 Compare W0, 0
	136 JumpIfNotEqual {566}
	137 Move X0, X23
	138 Move X1, X31
	139 Call VisibleLight.get_light, X0
	140 Move X27, X0
	141 Move X0, X23
	142 Move X1, X31
	143 Call VisibleLight.get_spotAngle, X0
	144 Multiply S0, S0, S14
	145 Move S1, 0.5
	146 Multiply S0, S0, S1
	147 Add X0, X31, 44
	148 Add X1, X31, 40
	149 Call 0x3EB2BC0
	150 Move X0, [X24]
	151 Move S8, [X31+40]
	152 Move S9, [X31+44]
	153 Move W8, [X0+224]
	154 Compare W8, 0
	155 JumpIfNotEqual {158}
	156 Call 0x1C17DFC
	157 Move X0, [X24]
	158 Move X8, 0x67E000
	159 Move X8, [X8+2216]
	160 Move X9, [X0+184]
	161 NotImplemented "Instruction FMIN not yet implemented."
	162 NotImplemented "Instruction FCMP not yet implemented."
	163 Move X8, [X8]
	164 Move V15, [X9+72]
	165 NotImplemented "Instruction FCSEL not yet implemented."
	166 Move W10, [X8+224]
	167 Compare W10, 0
	168 JumpIfNotEqual {171}
	169 Move X0, X8
	170 Call 0x1C17DFC
	171 Add X3, X31, 568
	172 Add X4, X31, 552
	173 Add X5, X31, 536
	174 Add X6, X31, 520
	175 Add X7, X31, 504
	176 Move X0, X25
	177 Move X1, X20
	178 Move W2, W26
	179 Move [X31], X31
	180 Call UniversalRenderPipeline.InitializeLightConstants_Common, X0, X1, X2, X3, X4, X5, X6
	181 Move X0, X27
	182 Move X1, X31
	183 Call LightExtensions.GetUniversalAdditionalLightData, X0
	184 Compare X0, 0
	185 JumpIfEqual {597}
	186 Move W0, [X0+56]
	187 Move X1, X31
	188 Call RenderingLayerUtils.ToValidRenderingLayers, X0
	189 Compare X27, 0
	190 JumpIfEqual {597}
	191 Move W24, W0
	192 Add X8, X31, 432
	193 Move X0, X27
	194 Move X1, X31
	195 Call Light.get_bakingOutput, X0
	196 Move W8, [X31+440]
	197 Move X0, [X22+152]
	198 NotImplemented "Instruction CMP not yet implemented."
	199 NotImplemented "Instruction CSET not yet implemented."
	200 Compare X0, 0
	201 JumpIfEqual {205}
	202 Move W1, W26
	203 Call AdditionalLightsShadowCasterPass.GetShadowLightIndexFromLightIndex, X0, X1
	204 Move W25, W0
	205 Move TEMP, 0
	206 Not TEMP
	207 Move W25, TEMP
	208 Move X8, 0x654000
	209 Move X8, [X8+1432]
	210 Move X0, [X8]
	211 Move W8, [X0+224]
	212 Compare W8, 0
	213 JumpIfNotEqual {215}
	214 Call 0x1C17DFC
	215 Move X0, X27
	216 Move X1, X31
	217 Call Object.op_Implicit, X0
	218 Move TEMP, X0
	219 And TEMP, TEMP, 1
	220 Compare TEMP, 1
	221 JumpIfNotEqual {246}
	222 Move X0, X27
	223 Move X1, X31
	224 Call Light.get_shadows, X0
	225 Compare W0, 0
	226 JumpIfEqual {246}
	227 NotImplemented "Instruction ORN not yet implemented."
	228 Move W3, W8
	229 ShiftRight W3, 31
	230 And W3, W3, 0x7FFFFFFF
	231 Add X1, X31, 584
	232 Move X2, X28
	233 Call DeferredLights.SetAdditionalLightsShadowsKeyword, X0, X1, X2, X3
	234 Move TEMP, X25
	235 And TEMP, TEMP, -2147483648
	236 Compare TEMP, -2147483648
	237 JumpIfEqual {250}
	238 Move W8, [X28+636]
	239 Compare W8, 0
	240 JumpIfEqual {250}
	241 Move X0, X27
	242 Move X1, X31
	243 Call Light.get_shadows, X0
	244 NotImplemented "Instruction CMP not yet implemented."
	245 NotImplemented "Instruction CSET not yet implemented."
	246 Add X1, X31, 584
	247 Move X2, X28
	248 Move W3, W31
	249 Call DeferredLights.SetAdditionalLightsShadowsKeyword, X0, X1, X2, X3
	250 Move W27, W31
	251 Move X8, 0x6B7000
	252 Move X8, [X8+3776]
	253 Move X28, [X31+584]
	254 Move X0, [X8]
	255 Move W8, [X0+224]
	256 Compare W8, 0
	257 JumpIfNotEqual {259}
	258 Call 0x1C17DFC
	259 Move X0, X28
	260 Move W1, W27
	261 Move X2, X31
	262 Call ShadowUtils.SetPerLightSoftShadowKeyword, X0, X1
	263 Move X0, [X22+232]
	264 Move X28, [X31+32]
	265 Compare X0, 0
	266 JumpIfEqual {305}
	267 Move W1, W26
	268 Move X2, X31
	269 Call LightCookieManager.GetLightCookieShaderDataIndex, X0, X1
	270 Move X8, 0x67C000
	271 Move X8, [X8+2296]
	272 Move X27, [X31+584]
	273 Move W26, W0
	274 Move X8, [X8]
	275 Move W9, [X8+224]
	276 Compare W9, 0
	277 JumpIfNotEqual {280}
	278 Move X0, X8
	279 Call 0x1C17DFC
	280 Move X8, 0x6B7000
	281 Move X8, [X8+368]
	282 Move X0, X27
	283 Move X3, X31
	284 Move X1, [X8]
	285 NotImplemented "Instruction ORN not yet implemented."
	286 Move W2, W8
	287 ShiftRight W2, 31
	288 And W2, W2, 0x7FFFFFFF
	289 Call CoreUtils.SetKeyword, X0, X1, X2
	290 Move X0, [X19]
	291 Move X27, [X31+584]
	292 Move W8, [X0+224]
	293 Compare W8, 0
	294 JumpIfNotEqual {296}
	295 Call 0x1C17DFC
	296 Compare X27, 0
	297 JumpIfEqual {597}
	298 Move X8, [X19]
	299 Move X0, X27
	300 Move W2, W26
	301 Move X3, X31
	302 Move X8, [X8+184]
	303 Move W1, [X8+156]
	304 Call CommandBuffer.SetGlobalInt, X0, X1, X2
	305 Move X0, [X19]
	306 Move X26, [X31+584]
	307 Move W8, [X0+224]
	308 Compare W8, 0
	309 JumpIfNotEqual {312}
	310 Call 0x1C17DFC
	311 Move X0, [X19]
	312 Move X8, [X0+184]
	313 Move X0, X23
	314 Move X1, X31
	315 Move W27, [X8+112]
	316 Call VisibleLight.get_range, X0
	317 Compare X26, 0
	318 JumpIfEqual {597}
	319 Move V3, V0
	320 Subtract S2, S11, S8
	321 Move X0, X26
	322 Move W1, W27
	323 Move V0, V9
	324 Move V1, V9
	325 Move X2, X31
	326 Call CommandBuffer.SetGlobalVector, X0, X1, X2
	327 Move X0, [X31+584]
	328 Compare X0, 0
	329 JumpIfEqual {597}
	330 Move X8, [X19]
	331 Move S0, W31
	332 Move S1, W31
	333 Move S3, W31
	334 Move X8, [X8+184]
	335 Move V2, V8
	336 Move X2, X31
	337 Move W1, [X8+116]
	338 Call CommandBuffer.SetGlobalVector, X0, X1, X2
	339 Move X8, [X19]
	340 Move X27, [X31+584]
	341 Move X0, X23
	342 Move X1, X31
	343 Move X8, [X8+184]
	344 Move W26, [X8+120]
	345 Call VisibleLight.get_range, X0
	346 Compare X27, 0
	347 JumpIfEqual {597}
	348 Add S1, S15, S13
	349 Multiply S1, S10, S1
	350 Add S1, S1, S11
	351 Multiply S3, S8, S0
	352 Move X0, X27
	353 Move W1, W26
	354 Move V0, V1
	355 Move V2, V1
	356 Move X2, X31
	357 Call CommandBuffer.SetGlobalVector, X0, X1, X2
	358 Move X0, [X31+584]
	359 Compare X0, 0
	360 JumpIfEqual {597}
	361 Move X8, [X19]
	362 Move V3, [X31+580]
	363 Move V2, [X31+576]
	364 Move V1, [X31+572]
	365 Move X8, [X8+184]
	366 Move V0, [X31+568]
	367 Move X2, X31
	368 Move W1, [X8+124]
	369 Call CommandBuffer.SetGlobalVector, X0, X1, X2
	370 Move X0, [X31+584]
	371 Compare X0, 0
	372 JumpIfEqual {597}
	373 Move X8, [X19]
	374 Move V3, [X31+564]
	375 Move V2, [X31+560]
	376 Move V1, [X31+556]
	377 Move X8, [X8+184]
	378 Move V0, [X31+552]
	379 Move X2, X31
	380 Move W1, [X8+128]
	381 Call CommandBuffer.SetGlobalVector, X0, X1, X2
	382 Move X0, [X31+584]
	383 Compare X0, 0
	384 JumpIfEqual {597}
	385 Move X8, [X19]
	386 Move V3, [X31+548]
	387 Move V2, [X31+544]
	388 Move V1, [X31+540]
	389 Move X8, [X8+184]
	390 Move V0, [X31+536]
	391 Move X2, X31
	392 Move W1, [X8+132]
	393 Call CommandBuffer.SetGlobalVector, X0, X1, X2
	394 Move X0, [X31+584]
	395 Compare X0, 0
	396 JumpIfEqual {597}
	397 Move X8, [X19]
	398 Move V2, [X31+528]
	399 Move V1, [X31+524]
	400 Move V0, [X31+520]
	401 Move X8, [X8+184]
	402 Move S3, W31
	403 Move X2, X31
	404 Move W1, [X8+140]
	405 Call CommandBuffer.SetGlobalVector, X0, X1, X2
	406 Move X0, [X31+584]
	407 Compare X0, 0
	408 JumpIfEqual {597}
	409 Move X8, [X19]
	410 Move V3, [X31+516]
	411 Move V2, [X31+512]
	412 Move V1, [X31+508]
	413 Move X8, [X8+184]
	414 Move V0, [X31+504]
	415 Move X2, X31
	416 Move W1, [X8+136]
	417 Call CommandBuffer.SetGlobalVector, X0, X1, X2
	418 Move X0, [X31+584]
	419 Compare X0, 0
	420 JumpIfEqual {597}
	421 Move X8, [X19]
	422 Move W2, W20
	423 ShiftRight W2, 30
	424 And W2, W2, 0x1FFFFFFF
	425 Move X3, X31
	426 Move X8, [X8+184]
	427 Move W1, [X8+144]
	428 Call CommandBuffer.SetGlobalInt, X0, X1, X2
	429 Move X0, [X31+584]
	430 Compare X0, 0
	431 JumpIfEqual {597}
	432 Move X8, [X19]
	433 Move W2, W25
	434 Move X3, X31
	435 Move X8, [X8+184]
	436 Move W1, [X8+148]
	437 Call CommandBuffer.SetGlobalInt, X0, X1, X2
	438 Move X0, [X31+584]
	439 Compare X0, 0
	440 JumpIfEqual {597}
	441 Move X8, [X19]
	442 Move W2, W24
	443 Move X3, X31
	444 Move X8, [X8+184]
	445 Move W1, [X8+152]
	446 Call CommandBuffer.SetGlobalInt, X0, X1, X2
	447 Move X24, [X31+584]
	448 Move X25, [X22+168]
	449 Add X8, X31, 368
	450 Move X0, X23
	451 Move X1, X31
	452 Call VisibleLight.get_localToWorldMatrix, X0
	453 Move V0, [X21+192]
	454 Move V1, [X21+208]
	455 Move V2, [X21+224]
	456 Move V3, [X21+240]
	457 Move [X21+256], V0
	458 Move [X21+264], V1
	459 Move [X21+288], V2
	460 Move [X21+296], V3
	461 Move X8, [X22+192]
	462 Compare X8, 0
	463 JumpIfEqual {597}
	464 Move W9, [X8+24]
	465 Compare W9, 0
	466 JumpIfEqual {598}
	467 Compare X24, 0
	468 JumpIfEqual {597}
	469 Move X3, [X22+184]
	470 Move W5, [X8+32]
	471 Move V0, [X21+256]
	472 Move V1, [X21+272]
	473 Move V2, [X21+288]
	474 Move V3, [X21+304]
	475 Add X2, X31, 304
	476 Move X0, X24
	477 Move X1, X25
	478 Move W4, W31
	479 Move X6, X31
	480 Move [X21+128], V0
	481 Move [X21+136], V1
	482 Move [X21+160], V2
	483 Move [X21+168], V3
	484 Call CommandBuffer.DrawMesh, X0, X1, X2, X3, X4, X5
	485 Move X24, [X31+584]
	486 Move X25, [X22+168]
	487 Add X8, X31, 240
	488 Move X0, X23
	489 Move X1, X31
	490 Call VisibleLight.get_localToWorldMatrix, X0
	491 Move V0, [X21+64]
	492 Move V1, [X21+80]
	493 Move V2, [X21+96]
	494 Move V3, [X21+112]
	495 Move [X21+192], V0
	496 Move [X21+200], V1
	497 Move [X21+224], V2
	498 Move [X21+232], V3
	499 Move X8, [X22+192]
	500 Compare X8, 0
	501 JumpIfEqual {597}
	502 Move W9, [X8+24]
	503 NotImplemented "Instruction CMP not yet implemented."
	504 Compare X24, 0
	505 JumpIfEqual {597}
	506 Move X3, [X22+184]
	507 Move W5, [X8+36]
	508 Move V0, [X21+192]
	509 Move V1, [X21+208]
	510 Move V2, [X21+224]
	511 Move V3, [X21+240]
	512 Add X2, X31, 176
	513 Move X0, X24
	514 Move X1, X25
	515 Move W4, W31
	516 Move X6, X31
	517 Move [X21], V0
	518 Move [X21+8], V1
	519 Move [X21+32], V2
	520 Move [X21+40], V3
	521 Call CommandBuffer.DrawMesh, X0, X1, X2, X3, X4, X5
	522 Move X24, [X31+584]
	523 Move X25, [X22+168]
	524 Add X8, X31, 112
	525 Move X0, X23
	526 Move X1, X31
	527 Call VisibleLight.get_localToWorldMatrix, X0
	528 Move V0, [X31+112]
	529 Move V1, [X31+128]
	530 Move V2, [X31+144]
	531 Move V3, [X31+160]
	532 Move [X21+64], V0
	533 Move [X21+72], V1
	534 Move [X21+96], V2
	535 Move [X21+104], V3
	536 Move X8, [X22+192]
	537 Compare X8, 0
	538 JumpIfEqual {597}
	539 Move W9, [X8+24]
	540 NotImplemented "Instruction CMP not yet implemented."
	541 Compare X24, 0
	542 JumpIfEqual {597}
	543 Move X3, [X22+184]
	544 Move W5, [X8+40]
	545 Move V0, [X21+64]
	546 Move V1, [X21+80]
	547 Move V2, [X21+96]
	548 Move V3, [X21+112]
	549 Add X2, X31, 48
	550 Move X0, X24
	551 Move X1, X25
	552 Move W4, W31
	553 Move X6, X31
	554 Move [X31+48], V0
	555 Move [X31+56], V1
	556 Move [X31+80], V2
	557 Move [X31+88], V3
	558 Call CommandBuffer.DrawMesh, X0, X1, X2, X3, X4, X5
	559 NotImplemented "Instruction LDRSW not yet implemented."
	560 Move X24, 0x6B8000
	561 Move X25, [X31+16]
	562 Move X20, [X31+24]
	563 Move X24, [X24+328]
	564 Add X29, X29, 1
	565 NotImplemented "Instruction CMP not yet implemented."
	566 Move X19, 0x6B8000
	567 Move X23, [X31+584]
	568 Move X19, [X19+1944]
	569 Compare X23, 0
	570 JumpIfEqual {597}
	571 Move X1, [X19]
	572 Move X0, X23
	573 Move X2, X31
	574 Call CommandBuffer.DisableShaderKeyword, X0, X1
	575 Add X31, X31, 592
	576 Move X20, [X31+144]
	577 Move X19, [X31+152]
	578 Move X22, [X31+128]
	579 Move X21, [X31+136]
	580 Move X24, [X31+112]
	581 Move X23, [X31+120]
	582 Move X26, [X31+96]
	583 Move X25, [X31+104]
	584 Move X28, [X31+80]
	585 Move X27, [X31+88]
	586 Move X29, [X31+64]
	587 Move X30, [X31+72]
	588 Move D9, [X31+48]
	589 Move D8, [X31+56]
	590 Move D11, [X31+32]
	591 Move D10, [X31+40]
	592 Move D13, [X31+16]
	593 Move D12, [X31+24]
	594 Move D15, [X31+160]
	595 Move D14, [X31+168]
	596 Return 
	597 Call 0x1C17F20
	598 Call 0x1C17F28

Method: System.Void RenderSSAOBeforeShading(UnityEngine.Rendering.CommandBuffer cmd, ref UnityEngine.Rendering.Universal.RenderingData renderingData)

Disassembly:
	0x03A9E948 FMOV S7, W31
	0x03A9E94C MOV V0.16B, V11.16B
	0x03A9E950 MOV V5.16B, V12.16B
	0x03A9E954 MOV X1, X31
	0x03A9E958 STR W26, [X31 + 0x1C]
	0x03A9E95C STP S9, S10, [X31 + 0x14]
	0x03A9E960 STR S8, [X31 + 0x10]
	0x03A9E964 STR W31, [X31 + 0xC]
	0x03A9E968 STR X31, [X31]
	0x03A9E96C BL 0x3C27870
	0x03A9E970 ADRP X8, 0x67E000
	0x03A9E974 LDR X8, [X8 + 0x8A8]
	0x03A9E978 LDR X0, [X8]
	0x03A9E97C LDR W8, [X0 + 0xE0]
	0x03A9E980 CBNZ W8, 0x3A9E988
	0x03A9E984 BL 0x1C16DFC
	0x03A9E988 ADD X3, X31, 0x240
	0x03A9E98C ADD X4, X31, 0x230
	0x03A9E990 ADD X5, X31, 0x220
	0x03A9E994 ADD X6, X31, 0x210
	0x03A9E998 ADD X7, X31, 0x200
	0x03A9E99C MOV X0, X21
	0x03A9E9A0 MOV X1, X20
	0x03A9E9A4 MOV W2, W25
	0x03A9E9A8 STR X31, [X31]
	0x03A9E9AC BL 0x3A919B4
	0x03A9E9B0 MOV X0, X27
	0x03A9E9B4 MOV X1, X31
	0x03A9E9B8 BL 0x3A82118
	0x03A9E9BC CBZ X0, 0x3A9EDCC
	0x03A9E9C0 LDR W0, [X0 + 0x38]
	0x03A9E9C4 MOV X1, X31
	0x03A9E9C8 BL 0x3A6FDA8
	0x03A9E9CC CBZ X27, 0x3A9EDCC
	0x03A9E9D0 MOV W24, W0
	0x03A9E9D4 ADD X8, X31, 0x180
	0x03A9E9D8 MOV X0, X27
	0x03A9E9DC MOV X1, X31
	0x03A9E9E0 BL 0x3C16AA0
	0x03A9E9E4 LDR W8, [X31 + 0x188]
	0x03A9E9E8 LDR X0, [X23 + 0x98]
	0x03A9E9EC CMP W8, 0x1
	0x03A9E9F0 CSET W8, EQ
	0x03A9E9F4 STR W8, [X31 + 0x38]
	0x03A9E9F8 CBZ X0, 0x3A9EA0C
	0x03A9E9FC MOV W1, W25
	0x03A9EA00 BL 0x3A9F650
	0x03A9EA04 STR W0, [X31 + 0x3C]
	0x03A9EA08 B 0x3A9EA14
	0x03A9EA0C MOVN W8, 0x0
	0x03A9EA10 STR W8, [X31 + 0x3C]
	0x03A9EA14 LDR X0, [X28]
	0x03A9EA18 LDR W8, [X0 + 0xE0]
	0x03A9EA1C CBNZ W8, 0x3A9EA24
	0x03A9EA20 BL 0x1C16DFC
	0x03A9EA24 MOV X0, X27
	0x03A9EA28 MOV X1, X31
	0x03A9EA2C BL 0x3C38948
	0x03A9EA30 TBZ X0, 0x0, 0x3A9EA90
	0x03A9EA34 MOV X0, X27
	0x03A9EA38 MOV X1, X31
	0x03A9EA3C BL 0x3C16B90
	0x03A9EA40 CBZ W0, 0x3A9EA90
	0x03A9EA44 LDR W26, [X31 + 0x3C]
	0x03A9EA48 MOV X22, X28
	0x03A9EA4C MOV X28, X21
	0x03A9EA50 MOV X21, X20
	0x03A9EA54 LDR X20, [X31 + 0x30]
	0x03A9EA58 ORN W8, W31, W26, 0x0
	0x03A9EA5C UBFM W3, W8, 0x1F, 0x1F
	0x03A9EA60 ADD X1, X31, 0x298
	0x03A9EA64 MOV X2, X20
	0x03A9EA68 BL 0x3A9F5A0
	0x03A9EA6C TBNZ X26, 0x1F, 0x3A9EAA8
	0x03A9EA70 LDRB W8, [X20 + 0x27C]
	0x03A9EA74 CBZ W8, 0x3A9EAA8
	0x03A9EA78 MOV X0, X27
	0x03A9EA7C MOV X1, X31
	0x03A9EA80 BL 0x3C16B90
	0x03A9EA84 CMP W0, 0x2
	0x03A9EA88 CSET W27, EQ

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+128], X30
	003 Move [X31+144], X22
	004 Move [X31+152], X21
	005 Move [X31+160], X20
	006 Move [X31+168], X19
	007 Move X22, 0x945000
	008 Move X21, 0x656000
	009 Move W8, [X22+1012]
	010 Move X21, [X21+1432]
	011 Move X19, X1
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x6BA000
	018 Move X0, [X0+328]
	019 Call 0x1C17CF4
	020 Move X0, 0x656000
	021 Move X0, [X0+1432]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X22+1012], W8
	025 Move X0, [X21]
	026 Move X21, [X20+176]
	027 Move W8, [X0+224]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X0, X21
	032 Move X1, X31
	033 Move X2, X31
	034 Call Object.op_Equality, X0, X1
	035 Move TEMP, X0
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfNotEqual {49}
	039 Move X8, 0x6BA000
	040 Move X8, [X8+328]
	041 Move X0, [X8]
	042 Move W8, [X0+224]
	043 Compare W8, 0
	044 JumpIfNotEqual {46}
	045 Call 0x1C17DFC
	046 Call DeferredLights.CreateFullscreenMesh
	047 Move X21, X0
	048 Move [X20+176], X0
	049 Move X21, [X20+176]
	050 Move X22, 0x93B000
	051 Move W8, [X22+2752]
	052 Compare W8, 0
	053 JumpIfNotEqual {59}
	054 Move X0, 0x65A000
	055 Move X0, [X0+624]
	056 Call 0x1C17CF4
	057 Move W8, 1
	058 Move [X22+2752], W8
	059 Move X8, 0x65A000
	060 Move X8, [X8+624]
	061 Move X8, [X8]
	062 Move X8, [X8+184]
	063 Move V1, [X8+96]
	064 Move V0, [X8+112]
	065 Move V2, [X8+64]
	066 Move V3, [X8+80]
	067 Move [X31+96], V1
	068 Move [X31+104], V0
	069 Move [X31+64], V2
	070 Move [X31+72], V3
	071 Move X8, [X20+192]
	072 Compare X8, 0
	073 JumpIfEqual {101}
	074 Move W9, [X8+24]
	075 NotImplemented "Instruction CMP not yet implemented."
	076 Compare X19, 0
	077 JumpIfEqual {101}
	078 Move X3, [X20+184]
	079 Move W5, [X8+60]
	080 Move V0, [X31+64]
	081 Move V1, [X31+80]
	082 Move V2, [X31+96]
	083 Move V3, [X31+112]
	084 Add X2, X31, 0
	085 Move X0, X19
	086 Move X1, X21
	087 Move W4, W31
	088 Move X6, X31
	089 Move [X31], V0
	090 Move [X31+8], V1
	091 Move [X31+32], V2
	092 Move [X31+40], V3
	093 Call CommandBuffer.DrawMesh, X0, X1, X2, X3, X4, X5
	094 Move X20, [X31+160]
	095 Move X19, [X31+168]
	096 Move X22, [X31+144]
	097 Move X21, [X31+152]
	098 Move X30, [X31+128]
	099 Add X31, X31, 176
	100 Return 
	101 Call 0x1C17F20
	102 Call 0x1C17F28

Method: System.Void RenderFog(UnityEngine.Rendering.ScriptableRenderContext context, UnityEngine.Rendering.CommandBuffer cmd, ref UnityEngine.Rendering.Universal.RenderingData renderingData)

Disassembly:
	0x03A9ED2C LDR X1, [X23 + 0xA0]
	0x03A9ED30 STP V1, V0, [X31 + 0xA0]
	0x03A9ED34 STP V3, V2, [X31 + 0x80]
	0x03A9ED38 LDR X8, [X23 + 0xC0]
	0x03A9ED3C CBZ X8, 0x3A9EDCC
	0x03A9ED40 LDR W9, [X8 + 0x18]
	0x03A9ED44 CMP W9, 0x2
	0x03A9ED48 B.LS 0x3A9EDD0
	0x03A9ED4C LDR X3, [X23 + 0xB8]
	0x03A9ED50 LDR W5, [X8 + 0x28]
	0x03A9ED54 LDP V0, V1, [X31 + 0x80]
	0x03A9ED58 LDP V2, V3, [X31 + 0xA0]
	0x03A9ED5C ADD X2, X31, 0x40
	0x03A9ED60 MOV X0, X19
	0x03A9ED64 MOV W4, W31
	0x03A9ED68 MOV X6, X31
	0x03A9ED6C STP V0, V1, [X31 + 0x40]
	0x03A9ED70 STP V2, V3, [X31 + 0x60]
	0x03A9ED74 BL 0x3C4F070
	0x03A9ED78 LDRSW X8, [X23 + 0x80]
	0x03A9ED7C ADD X29, X29, 0x1
	0x03A9ED80 CMP X29, X8
	0x03A9ED84 B.LT 0x3A9E884
	0x03A9ED88 ADRP X8, 0x6B9000
	0x03A9ED8C LDR X8, [X8 + 0x790]
	0x03A9ED90 MOV X0, X19
	0x03A9ED94 MOV X2, X31
	0x03A9ED98 LDR X1, [X8]
	0x03A9ED9C BL 0x3C4D124
	0x03A9EDA0 ADD X31, X31, 0x290
	0x03A9EDA4 LDP X20, X19, [X31 + 0x80]
	0x03A9EDA8 LDP X22, X21, [X31 + 0x70]
	0x03A9EDAC LDP X24, X23, [X31 + 0x60]
	0x03A9EDB0 LDP X26, X25, [X31 + 0x50]
	0x03A9EDB4 LDP X28, X27, [X31 + 0x40]
	0x03A9EDB8 LDP X29, X30, [X31 + 0x30]
	0x03A9EDBC LDP D9, D8, [X31 + 0x20]
	0x03A9EDC0 LDP D11, D10, [X31 + 0x10]
	0x03A9EDC4 LDR V12, [X31], #0x90
	0x03A9EDC8 RET
	0x03A9EDCC BL 0x1C16F20
	0x03A9EDD0 BL 0x1C16F28
	0x03A9EDD4 STP D15, D14, [X31 - 0xA0]!
	0x03A9EDD8 STP D13, D12, [X31 + 0x10]
	0x03A9EDDC STP D11, D10, [X31 + 0x20]
	0x03A9EDE0 STP D9, D8, [X31 + 0x30]
	0x03A9EDE4 STP X29, X30, [X31 + 0x40]
	0x03A9EDE8 STP X28, X27, [X31 + 0x50]
	0x03A9EDEC STP X26, X25, [X31 + 0x60]
	0x03A9EDF0 STP X24, X23, [X31 + 0x70]
	0x03A9EDF4 STP X22, X21, [X31 + 0x80]
	0x03A9EDF8 STP X20, X19, [X31 + 0x90]
	0x03A9EDFC SUB X31, X31, 0x250
	0x03A9EE00 ADRP X19, 0x944000
	0x03A9EE04 LDRB W8, [X19 + 0x3F3]
	0x03A9EE08 MOV X20, X4
	0x03A9EE0C MOV X25, X3
	0x03A9EE10 MOV X28, X2
	0x03A9EE14 MOV X23, X1
	0x03A9EE18 MOV X22, X0
	0x03A9EE1C STR X1, [X31 + 0x248]
	0x03A9EE20 TBNZ X8, 0x0, 0x3A9EE98
	0x03A9EE24 ADRP X0, 0x67D000
	0x03A9EE28 LDR X0, [X0 + 0x8F8]
	0x03A9EE2C BL 0x1C16CF4
	0x03A9EE30 ADRP X0, 0x6B9000
	0x03A9EE34 LDR X0, [X0 + 0x148]
	0x03A9EE38 BL 0x1C16CF4
	0x03A9EE3C ADRP X0, 0x6B8000
	0x03A9EE40 LDR X0, [X0 + 0x1B8]
	0x03A9EE44 BL 0x1C16CF4
	0x03A9EE48 ADRP X0, 0x655000
	0x03A9EE4C LDR X0, [X0 + 0x598]
	0x03A9EE50 BL 0x1C16CF4
	0x03A9EE54 ADRP X0, 0x6B9000
	0x03A9EE58 LDR X0, [X0 + 0x748]
	0x03A9EE5C BL 0x1C16CF4
	0x03A9EE60 ADRP X0, 0x6B8000
	0x03A9EE64 LDR X0, [X0 + 0xEC0]
	0x03A9EE68 BL 0x1C16CF4
	0x03A9EE6C ADRP X0, 0x67E000
	0x03A9EE70 LDR X0, [X0 + 0x8A8]
	0x03A9EE74 BL 0x1C16CF4
	0x03A9EE78 ADRP X0, 0x6B9000
	0x03A9EE7C LDR X0, [X0 + 0x798]
	0x03A9EE80 BL 0x1C16CF4
	0x03A9EE84 ADRP X0, 0x6B8000
	0x03A9EE88 LDR X0, [X0 + 0x170]
	0x03A9EE8C BL 0x1C16CF4
	0x03A9EE90 MOVZ W8, 0x1
	0x03A9EE94 STRB W8, [X19 + 0x3F3]
	0x03A9EE98 STR X31, [X31 + 0x240]
	0x03A9EE9C STR X31, [X31 + 0x238]
	0x03A9EEA0 STR X31, [X31 + 0x230]
	0x03A9EEA4 STR X31, [X31 + 0x228]
	0x03A9EEA8 STR X31, [X31 + 0x220]
	0x03A9EEAC STR X31, [X31 + 0x218]
	0x03A9EEB0 ADRP X8, 0x655000
	0x03A9EEB4 LDR X8, [X8 + 0x598]
	0x03A9EEB8 STR X31, [X31 + 0x210]
	0x03A9EEBC STR X31, [X31 + 0x208]
	0x03A9EEC0 STP X31, X31, [X31 + 0x1F8]
	0x03A9EEC4 LDR X0, [X8]
	0x03A9EEC8 LDR X24, [X22 + 0xA8]
	0x03A9EECC LDR W8, [X0 + 0xE0]
	0x03A9EED0 CBNZ W8, 0x3A9EED8
	0x03A9EED4 BL 0x1C16DFC
	0x03A9EED8 MOV X0, X24
	0x03A9EEDC MOV X1, X31
	0x03A9EEE0 MOV X2, X31
	0x03A9EEE4 BL 0x3C3883C
	0x03A9EEE8 TBZ X0, 0x0, 0x3A9EF0C
	0x03A9EEEC ADRP X8, 0x6B9000
	0x03A9EEF0 LDR X8, [X8 + 0x148]
	0x03A9EEF4 LDR X0, [X8]
	0x03A9EEF8 LDR W8, [X0 + 0xE0]
	0x03A9EEFC CBNZ W8, 0x3A9EF04
	0x03A9EF00 BL 0x1C16DFC
	0x03A9EF04 BL 0x3A9FC74
	0x03A9EF08 STR X0, [X22 + 0xA8]
	0x03A9EF0C CBZ X23, 0x3A9F598
	0x03A9EF10 ADRP X19, 0x6B9000
	0x03A9EF14 LDR X19, [X19 + 0x798]
	0x03A9EF18 MOV X0, X23
	0x03A9EF1C MOV X2, X31
	0x03A9EF20 LDR X1, [X19]

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+128], X30
	003 Move [X31+144], X22
	004 Move [X31+152], X21
	005 Move [X31+160], X20
	006 Move [X31+168], X19
	007 Move X22, 0x945000
	008 Move W8, [X22+1013]
	009 Move X21, X3
	010 Move X19, X2
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x6BA000
	017 Move X0, [X0+328]
	018 Call 0x1C17CF4
	019 Move X0, 0x656000
	020 Move X0, [X0+1432]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+1013], W8
	024 Move X0, X31
	025 Move [X31+136], W31
	026 Call RenderSettings.get_fog
	027 Move TEMP, X0
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfNotEqual {118}
	031 Move X0, [X21+216]
	032 Compare X0, 0
	033 JumpIfEqual {125}
	034 Move X1, X31
	035 Call Camera.get_orthographic, X0
	036 Move TEMP, X0
	037 And TEMP, TEMP, 1
	038 Compare TEMP, 1
	039 JumpIfEqual {118}
	040 Move X8, 0x656000
	041 Move X8, [X8+1432]
	042 Move X21, [X20+176]
	043 Move X0, [X8]
	044 Move W8, [X0+224]
	045 Compare W8, 0
	046 JumpIfNotEqual {48}
	047 Call 0x1C17DFC
	048 Move X0, X21
	049 Move X1, X31
	050 Move X2, X31
	051 Call Object.op_Equality, X0, X1
	052 Move TEMP, X0
	053 And TEMP, TEMP, 1
	054 Compare TEMP, 1
	055 JumpIfNotEqual {65}
	056 Move X8, 0x6BA000
	057 Move X8, [X8+328]
	058 Move X0, [X8]
	059 Move W8, [X0+224]
	060 Compare W8, 0
	061 JumpIfNotEqual {63}
	062 Call 0x1C17DFC
	063 Call DeferredLights.CreateFullscreenMesh
	064 Move [X20+176], X0
	065 Move X2, [X20+216]
	066 Add X0, X31, 136
	067 Move X1, X19
	068 Move X3, X31
	069 Call ProfilingScope..ctor, X0, X1, X2
	070 Move X22, 0x93B000
	071 Move W8, [X22+2752]
	072 Move X21, [X20+176]
	073 Compare W8, 0
	074 JumpIfNotEqual {80}
	075 Move X0, 0x65A000
	076 Move X0, [X0+624]
	077 Call 0x1C17CF4
	078 Move W8, 1
	079 Move [X22+2752], W8
	080 Move X8, 0x65A000
	081 Move X8, [X8+624]
	082 Move X8, [X8]
	083 Move X8, [X8+184]
	084 Move V1, [X8+96]
	085 Move V0, [X8+112]
	086 Move V2, [X8+64]
	087 Move V3, [X8+80]
	088 Move [X31+96], V1
	089 Move [X31+104], V0
	090 Move [X31+64], V2
	091 Move [X31+72], V3
	092 Move X8, [X20+192]
	093 Compare X8, 0
	094 JumpIfEqual {126}
	095 Move W9, [X8+24]
	096 NotImplemented "Instruction CMP not yet implemented."
	097 Compare X19, 0
	098 JumpIfEqual {128}
	099 Move V0, [X31+64]
	100 Move V1, [X31+80]
	101 Move V2, [X31+96]
	102 Move V3, [X31+112]
	103 Move X3, [X20+184]
	104 Move W5, [X8+56]
	105 Move [X31], V0
	106 Move [X31+8], V1
	107 Move [X31+32], V2
	108 Move [X31+40], V3
	109 Add X2, X31, 0
	110 Move X0, X19
	111 Move X1, X21
	112 Move W4, W31
	113 Move X6, X31
	114 Call CommandBuffer.DrawMesh, X0, X1, X2, X3, X4, X5
	115 Add X0, X31, 136
	116 Move X1, X31
	117 Call ProfilingScope.Dispose, X0
	118 Move X20, [X31+160]
	119 Move X19, [X31+168]
	120 Move X22, [X31+144]
	121 Move X21, [X31+152]
	122 Move X30, [X31+128]
	123 Add X31, X31, 176
	124 Return 
	125 Call 0x1C17F20
	126 Call 0x1C17F20
	127 Call 0x1C17F28
	128 Call 0x1C17F20
	129 Move X19, X0
	130 NotImplemented "Instruction CMP not yet implemented."
	131 Move X0, X19
	132 Call 0x3EB2AD0
	133 Move X20, [X0]
	134 Call 0x3EB2AE0
	135 Add X0, X31, 136
	136 Move X1, X31
	137 Call ProfilingScope.Dispose, X0
	138 Compare X20, 0
	139 JumpIfEqual {118}
	140 Move X0, X20
	141 Call 0x1C17F18
	142 Move X20, X31
	143 Move X19, X0
	144 Add X0, X31, 136
	145 Move X1, X31
	146 Call ProfilingScope.Dispose, X0
	147 Compare X20, 0
	148 JumpIfNotEqual {151}
	149 Move X0, X19
	150 Call 0x1D2D690
	151 Move X0, X20
	152 Call 0x1C17F18
	153 Call 0x1991590

Method: System.Void InitStencilDeferredMaterial()

Disassembly:
	0x03A9C3B4 MOVZ W8, 0x1
	0x03A9C3B8 STRB W8, [X20 + 0x3E4]
	0x03A9C3BC LDR X8, [X19 + 0x38]
	0x03A9C3C0 CBZ X8, 0x3A9C418
	0x03A9C3C4 ADRP X22, 0x6B4000
	0x03A9C3C8 LDR X22, [X22 + 0x9B0]
	0x03A9C3CC MOV X21, X31
	0x03A9C3D0 LDR W9, [X8 + 0x18]
	0x03A9C3D4 CMP X21, W9, SXTW
	0x03A9C3D8 B.GE 0x3A9C418
	0x03A9C3DC CMP X21, X9
	0x03A9C3E0 B.CS 0x3A9C428
	0x03A9C3E4 LDR X0, [X22]
	0x03A9C3E8 ADD X8, X8, X21, 0x3, LSL
	0x03A9C3EC LDR X20, [X8 + 0x20]
	0x03A9C3F0 LDR W9, [X0 + 0xE0]
	0x03A9C3F4 CBNZ W9, 0x3A9C3FC
	0x03A9C3F8 BL 0x1C16DFC
	0x03A9C3FC MOV X0, X20
	0x03A9C400 MOV X1, X31
	0x03A9C404 BL 0x39CB45C
	0x03A9C408 LDR X8, [X19 + 0x38]
	0x03A9C40C ADD X21, X21, 0x1
	0x03A9C410 CBNZ X8, 0x3A9C3D0
	0x03A9C414 BL 0x1C16F20
	0x03A9C418 LDP X20, X19, [X31 + 0x20]
	0x03A9C41C LDP X22, X21, [X31 + 0x10]
	0x03A9C420 LDR X30, [X31], #0x30
	0x03A9C424 RET
	0x03A9C428 BL 0x1C16F28
	0x03A9C42C STR X30, [X31 - 0x40]!
	0x03A9C430 STP X24, X23, [X31 + 0x10]
	0x03A9C434 STP X22, X21, [X31 + 0x20]
	0x03A9C438 STP X20, X19, [X31 + 0x30]
	0x03A9C43C ADRP X22, 0x946000
	0x03A9C440 LDRB W8, [X22 + 0x3E5]
	0x03A9C444 MOV W19, W2
	0x03A9C448 MOV X21, X1
	0x03A9C44C MOV X20, X0
	0x03A9C450 TBNZ X8, 0x0, 0x3A9C474
	0x03A9C454 ADRP X0, 0x6BB000
	0x03A9C458 LDR X0, [X0 + 0x148]
	0x03A9C45C BL 0x1C16CF4
	0x03A9C460 ADRP X0, 0x6B8000
	0x03A9C464 LDR X0, [X0 + 0x10]
	0x03A9C468 BL 0x1C16CF4
	0x03A9C46C MOVZ W8, 0x1
	0x03A9C470 STRB W8, [X22 + 0x3E5]
	0x03A9C474 LDR X8, [X20 + 0x38]
	0x03A9C478 CBZ X8, 0x3A9C5E8
	0x03A9C47C LDR W9, [X8 + 0x18]
	0x03A9C480 CMP W9, W19
	0x03A9C484 B.LS 0x3A9C600
	0x03A9C488 SXTW X23, W19
	0x03A9C48C ADD X8, X8, X23, 0x3, LSL
	0x03A9C490 LDR X0, [X8 + 0x20]
	0x03A9C494 CBZ X0, 0x3A9C5FC
	0x03A9C498 MOV X1, X31
	0x03A9C49C BL 0x39D4A60
	0x03A9C4A0 LDR X8, [X20 + 0x30]
	0x03A9C4A4 CBZ X8, 0x3A9C5FC
	0x03A9C4A8 LDR W9, [X8 + 0x18]
	0x03A9C4AC CMP W9, W19
	0x03A9C4B0 B.LS 0x3A9C600
	0x03A9C4B4 ADD X8, X8, X23, 0x3, LSL
	0x03A9C4B8 MOV W22, W0
	0x03A9C4BC LDR X0, [X8 + 0x20]
	0x03A9C4C0 CBZ X0, 0x3A9C5FC
	0x03A9C4C4 MOV X1, X31
	0x03A9C4C8 BL 0x39D4A60
	0x03A9C4CC CMP W22, W0
	0x03A9C4D0 B.NE 0x3A9C5E8
	0x03A9C4D4 MOV X0, X21
	0x03A9C4D8 MOV W1, W31
	0x03A9C4DC MOV X2, X31
	0x03A9C4E0 BL 0x3C22520
	0x03A9C4E4 MOV X0, X20
	0x03A9C4E8 MOV W1, W19
	0x03A9C4EC STR W31, [X21 + 0x18]
	0x03A9C4F0 BL 0x3A9AE60
	0x03A9C4F4 MOV W1, W0
	0x03A9C4F8 MOV X0, X21
	0x03A9C4FC MOV X2, X31
	0x03A9C500 BL 0x3C2240C
	0x03A9C504 LDR X24, [X20 + 0x38]
	0x03A9C508 CBZ X24, 0x3A9C5FC
	0x03A9C50C ADRP X22, 0x6BB000
	0x03A9C510 LDR X22, [X22 + 0x148]
	0x03A9C514 LDR X0, [X22]
	0x03A9C518 LDR W8, [X0 + 0xE0]
	0x03A9C51C CBNZ W8, 0x3A9C528
	0x03A9C520 BL 0x1C16DFC
	0x03A9C524 LDR X0, [X22]
	0x03A9C528 LDR X8, [X0 + 0xB8]
	0x03A9C52C LDR X8, [X8]
	0x03A9C530 CBZ X8, 0x3A9C5FC
	0x03A9C534 LDR W9, [X8 + 0x18]
	0x03A9C538 CMP W9, W19
	0x03A9C53C B.LS 0x3A9C600
	0x03A9C540 ADRP X9, 0x6B8000
	0x03A9C544 LDR X9, [X9 + 0x10]
	0x03A9C548 ADD X8, X8, X23, 0x3, LSL
	0x03A9C54C LDR X22, [X8 + 0x20]
	0x03A9C550 LDR X0, [X9]
	0x03A9C554 LDR W9, [X0 + 0xE0]
	0x03A9C558 CBNZ W9, 0x3A9C560
	0x03A9C55C BL 0x1C16DFC
	0x03A9C560 LDR W8, [X24 + 0x18]
	0x03A9C564 CMP W8, W19
	0x03A9C568 B.LS 0x3A9C600
	0x03A9C56C ADD X8, X24, X23, 0x3, LSL
	0x03A9C570 ADD X0, X8, 0x20
	0x03A9C574 FMOV S0, W31
	0x03A9C578 MOVZ W3, 0x1
	0x03A9C57C MOVZ W5, 0x1
	0x03A9C580 MOV X1, X21
	0x03A9C584 MOV W2, W31
	0x03A9C588 MOV W4, W31
	0x03A9C58C MOV X6, X22
	0x03A9C590 MOV X7, X31
	0x03A9C594 BL 0x3A6D184
	0x03A9C598 LDR X8, [X20 + 0x38]
	0x03A9C59C CBZ X8, 0x3A9C5FC
	0x03A9C5A0 LDR W9, [X8 + 0x18]
	0x03A9C5A4 CMP W9, W19
	0x03A9C5A8 B.LS 0x3A9C600
	0x03A9C5AC LDR X21, [X20 + 0x30]
	0x03A9C5B0 CBZ X21, 0x3A9C5FC
	0x03A9C5B4 ADD X8, X8, X23, 0x3, LSL
	0x03A9C5B8 LDR X20, [X8 + 0x20]
	0x03A9C5BC CBZ X20, 0x3A9C5D4
	0x03A9C5C0 LDR X8, [X21]
	0x03A9C5C4 MOV X0, X20
	0x03A9C5C8 LDR X1, [X8 + 0x40]
	0x03A9C5CC BL 0x1C16E00
	0x03A9C5D0 CBZ X0, 0x3A9C604
	0x03A9C5D4 LDR W8, [X21 + 0x18]
	0x03A9C5D8 CMP W8, W19
	0x03A9C5DC B.LS 0x3A9C600
	0x03A9C5E0 ADD X8, X21, X23, 0x3, LSL
	0x03A9C5E4 STR X20, [X8 + 0x20]
	0x03A9C5E8 LDP X20, X19, [X31 + 0x30]
	0x03A9C5EC LDP X22, X21, [X31 + 0x20]
	0x03A9C5F0 LDP X24, X23, [X31 + 0x10]
	0x03A9C5F4 LDR X30, [X31], #0x40
	0x03A9C5F8 RET
	0x03A9C5FC BL 0x1C16F20
	0x03A9C600 BL 0x1C16F28
	0x03A9C604 BL 0x1C16F44
	0x03A9C608 MOV X1, X31
	0x03A9C60C BL 0x1C16DEC
	0x03A9C610 STP X30, X21, [X31 - 0x20]!
	0x03A9C614 STP X20, X19, [X31 + 0x10]
	0x03A9C618 LDR X8, [X0 + 0x30]
	0x03A9C61C CBZ X8, 0x3A9C79C
	0x03A9C620 LDR W9, [X8 + 0x18]
	0x03A9C624 CBZ W9, 0x3A9C7A0
	0x03A9C628 LDR X21, [X0 + 0x48]
	0x03A9C62C MOV X19, X0
	0x03A9C630 CBZ X21, 0x3A9C79C
	0x03A9C634 LDR X20, [X8 + 0x20]
	0x03A9C638 CBZ X20, 0x3A9C650
	0x03A9C63C LDR X8, [X21]
	0x03A9C640 MOV X0, X20
	0x03A9C644 LDR X1, [X8 + 0x40]
	0x03A9C648 BL 0x1C16E00
	0x03A9C64C CBZ X0, 0x3A9C7A4
	0x03A9C650 LDR W8, [X21 + 0x18]
	0x03A9C654 CBZ W8, 0x3A9C7A0
	0x03A9C658 STR X20, [X21 + 0x20]
	0x03A9C65C LDR X8, [X19 + 0x30]
	0x03A9C660 CBZ X8, 0x3A9C79C
	0x03A9C664 LDR W9, [X8 + 0x18]
	0x03A9C668 CMP W9, 0x1
	0x03A9C66C B.LS 0x3A9C7A0
	0x03A9C670 LDR X21, [X19 + 0x48]
	0x03A9C674 CBZ X21, 0x3A9C79C
	0x03A9C678 LDR X20, [X8 + 0x28]
	0x03A9C67C CBZ X20, 0x3A9C694
	0x03A9C680 LDR X8, [X21]
	0x03A9C684 MOV X0, X20
	0x03A9C688 LDR X1, [X8 + 0x40]
	0x03A9C68C BL 0x1C16E00
	0x03A9C690 CBZ X0, 0x3A9C7A4
	0x03A9C694 LDR W8, [X21 + 0x18]
	0x03A9C698 CMP W8, 0x1
	0x03A9C69C B.LS 0x3A9C7A0
	0x03A9C6A0 STR X20, [X21 + 0x28]
	0x03A9C6A4 LDR X8, [X19 + 0x30]
	0x03A9C6A8 CBZ X8, 0x3A9C79C
	0x03A9C6AC LDR W9, [X8 + 0x18]
	0x03A9C6B0 CMP W9, 0x2
	0x03A9C6B4 B.LS 0x3A9C7A0
	0x03A9C6B8 LDR X21, [X19 + 0x48]
	0x03A9C6BC CBZ X21, 0x3A9C79C
	0x03A9C6C0 LDR X20, [X8 + 0x30]
	0x03A9C6C4 CBZ X20, 0x3A9C6DC
	0x03A9C6C8 LDR X8, [X21]
	0x03A9C6CC MOV X0, X20
	0x03A9C6D0 LDR X1, [X8 + 0x40]
	0x03A9C6D4 BL 0x1C16E00
	0x03A9C6D8 CBZ X0, 0x3A9C7A4
	0x03A9C6DC LDR W8, [X21 + 0x18]
	0x03A9C6E0 CMP W8, 0x2
	0x03A9C6E4 B.LS 0x3A9C7A0
	0x03A9C6E8 STR X20, [X21 + 0x30]
	0x03A9C6EC LDR X8, [X19 + 0x30]
	0x03A9C6F0 CBZ X8, 0x3A9C79C
	0x03A9C6F4 LDR W9, [X8 + 0x18]
	0x03A9C6F8 CMP W9, 0x4
	0x03A9C6FC B.LS 0x3A9C7A0
	0x03A9C700 LDR X21, [X19 + 0x48]
	0x03A9C704 CBZ X21, 0x3A9C79C
	0x03A9C708 LDR X20, [X8 + 0x40]
	0x03A9C70C CBZ X20, 0x3A9C724
	0x03A9C710 LDR X8, [X21]
	0x03A9C714 MOV X0, X20
	0x03A9C718 LDR X1, [X8 + 0x40]
	0x03A9C71C BL 0x1C16E00
	0x03A9C720 CBZ X0, 0x3A9C7A4
	0x03A9C724 LDR W8, [X21 + 0x18]
	0x03A9C728 CMP W8, 0x3
	0x03A9C72C B.LS 0x3A9C7A0
	0x03A9C730 STR X20, [X21 + 0x38]
	0x03A9C734 LDR W8, [X19 + 0x1C]
	0x03A9C738 CBZ W8, 0x3A9C790
	0x03A9C73C LDR X20, [X19 + 0x48]
	0x03A9C740 LDR X21, [X19 + 0x30]
	0x03A9C744 MOV X0, X19
	0x03A9C748 BL 0x3A9ADAC
	0x03A9C74C CBZ X21, 0x3A9C79C
	0x03A9C750 LDR W8, [X21 + 0x18]
	0x03A9C754 CMP W0, W8
	0x03A9C758 B.CS 0x3A9C7A0
	0x03A9C75C CBZ X20, 0x3A9C79C
	0x03A9C760 ADD X8, X21, W0, 0x3, SXTW
	0x03A9C764 LDR X19, [X8 + 0x20]
	0x03A9C768 CBZ X19, 0x3A9C780
	0x03A9C76C LDR X8, [X20]
	0x03A9C770 MOV X0, X19

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0x947000
	008 Move X20, 0x658000
	009 Move W8, [X21+1014]
	010 Move X20, [X20+1432]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {27}
	016 Move X0, 0x6BC000
	017 Move X0, [X0+328]
	018 Call 0x1C17CF4
	019 Move X0, 0x658000
	020 Move X0, [X0+1432]
	021 Call 0x1C17CF4
	022 Move X0, 0x6BC000
	023 Move X0, [X0+1864]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X21+1014], W8
	027 Move X0, [X20]
	028 Move X20, [X19+184]
	029 Move W8, [X0+224]
	030 Compare W8, 0
	031 JumpIfNotEqual {33}
	032 Call 0x1C17DFC
	033 Move X0, X20
	034 Move X1, X31
	035 Move X2, X31
	036 Call Object.op_Equality, X0, X1
	037 Move TEMP, X0
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfNotEqual {48}
	041 Move X20, [X31+32]
	042 Move X19, [X31+40]
	043 Move X22, [X31+16]
	044 Move X21, [X31+24]
	045 Move X30, [X31+48]
	046 Move X23, [X31+56]
	047 Return 
	048 Move X22, 0x6BC000
	049 Move X22, [X22+328]
	050 Move X21, X31
	051 Move X0, [X22]
	052 Move W8, [X0+224]
	053 Compare W8, 0
	054 JumpIfNotEqual {57}
	055 Call 0x1C17DFC
	056 Move X0, [X22]
	057 Move X8, [X0+184]
	058 Move X8, [X8+8]
	059 Compare X8, 0
	060 JumpIfEqual {278}
	061 NotImplemented "Instruction LDRSW not yet implemented."
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Move W9, [X0+224]
	064 Move X20, [X19+184]
	065 Move X23, [X19+192]
	066 Compare W9, 0
	067 JumpIfNotEqual {74}
	068 Call 0x1C17DFC
	069 Move X8, [X22]
	070 Move X8, [X8+184]
	071 Move X8, [X8+8]
	072 Compare X8, 0
	073 JumpIfEqual {278}
	074 Move W9, [X8+24]
	075 NotImplemented "Instruction CMP not yet implemented."
	076 Compare X20, 0
	077 JumpIfEqual {278}
	078 Add X8, X8, X21
	079 Move X1, [X8+32]
	080 Move X0, X20
	081 Move X2, X31
	082 Call Material.FindPass, X0, X1
	083 Compare X23, 0
	084 JumpIfEqual {278}
	085 Move W8, [X23+24]
	086 NotImplemented "Instruction CMP not yet implemented."
	087 Add X8, X23, X21
	088 Add X21, X21, 1
	089 Move [X8+32], W0
	090 Move X21, 0x6BC000
	091 Move X21, [X21+1864]
	092 Move X20, [X19+184]
	093 Move X0, [X21]
	094 Move W8, [X0+224]
	095 Compare W8, 0
	096 JumpIfNotEqual {98}
	097 Call 0x1C17DFC
	098 Compare X20, 0
	099 JumpIfEqual {278}
	100 Move X8, [X21]
	101 Move S0, W31
	102 Move X0, X20
	103 Move X2, X31
	104 Move X8, [X8+184]
	105 Move W1, [X8+24]
	106 Call Material.SetFloat, X0, X1, V0
	107 Move X0, [X19+184]
	108 Compare X0, 0
	109 JumpIfEqual {278}
	110 Move X8, [X21]
	111 Move X2, X31
	112 Move X8, [X8+184]
	113 Move W1, [X8+28]
	114 Move W8, 0x42C00000
	115 Move S0, W8
	116 Call Material.SetFloat, X0, X1, V0
	117 Move X0, [X19+184]
	118 Compare X0, 0
	119 JumpIfEqual {278}
	120 Move X8, [X21]
	121 Move S0, 16
	122 Move X2, X31
	123 Move X8, [X8+184]
	124 Move W1, [X8+32]
	125 Call Material.SetFloat, X0, X1, V0
	126 Move X0, [X19+184]
	127 Compare X0, 0
	128 JumpIfEqual {278}
	129 Move X8, [X21]
	130 Move X2, X31
	131 Move X8, [X8+184]
	132 Move W1, [X8+36]
	133 Move W8, 0x42400000
	134 Move S0, W8
	135 Call Material.SetFloat, X0, X1, V0
	136 Move X0, [X19+184]
	137 Compare X0, 0
	138 JumpIfEqual {278}
	139 Move X8, [X21]
	140 Move X2, X31
	141 Move X8, [X8+184]
	142 Move W1, [X8+40]
	143 Move W8, 0x42E00000
	144 Move S0, W8
	145 Call Material.SetFloat, X0, X1, V0
	146 Move X0, [X19+184]
	147 Compare X0, 0
	148 JumpIfEqual {278}
	149 Move X8, [X21]
	150 Move S0, 16
	151 Move X2, X31
	152 Move X8, [X8+184]
	153 Move W1, [X8+44]
	154 Call Material.SetFloat, X0, X1, V0
	155 Move X0, [X19+184]
	156 Compare X0, 0
	157 JumpIfEqual {278}
	158 Move X8, [X21]
	159 Move X2, X31
	160 Move X8, [X8+184]
	161 Move W1, [X8+48]
	162 Move W8, 0x42A00000
	163 Move S0, W8
	164 Call Material.SetFloat, X0, X1, V0
	165 Move X0, [X19+184]
	166 Compare X0, 0
	167 JumpIfEqual {278}
	168 Move X8, [X21]
	169 Move X2, X31
	170 Move X8, [X8+184]
	171 Move W1, [X8+52]
	172 Move W8, 0x42E00000
	173 Move S0, W8
	174 Call Material.SetFloat, X0, X1, V0
	175 Move X0, [X19+184]
	176 Compare X0, 0
	177 JumpIfEqual {278}
	178 Move X8, [X21]
	179 Move S0, 16
	180 Move X2, X31
	181 Move X8, [X8+184]
	182 Move W1, [X8+56]
	183 Call Material.SetFloat, X0, X1, V0
	184 Move X0, [X19+184]
	185 Compare X0, 0
	186 JumpIfEqual {278}
	187 Move X8, [X21]
	188 Move X2, X31
	189 Move X8, [X8+184]
	190 Move W1, [X8+60]
	191 Move W8, 0x42000000
	192 Move S0, W8
	193 Call Material.SetFloat, X0, X1, V0
	194 Move X0, [X19+184]
	195 Compare X0, 0
	196 JumpIfEqual {278}
	197 Move X8, [X21]
	198 Move X2, X31
	199 Move X8, [X8+184]
	200 Move W1, [X8+64]
	201 Move W8, 0x42C00000
	202 Move S0, W8
	203 Call Material.SetFloat, X0, X1, V0
	204 Move X0, [X19+184]
	205 Compare X0, 0
	206 JumpIfEqual {278}
	207 Move X8, [X21]
	208 Move S0, W31
	209 Move X2, X31
	210 Move X8, [X8+184]
	211 Move W1, [X8+68]
	212 Call Material.SetFloat, X0, X1, V0
	213 Move X0, [X19+184]
	214 Compare X0, 0
	215 JumpIfEqual {278}
	216 Move X8, [X21]
	217 Move X2, X31
	218 Move X8, [X8+184]
	219 Move W1, [X8+72]
	220 Move W8, 0x42800000
	221 Move S0, W8
	222 Call Material.SetFloat, X0, X1, V0
	223 Move X0, [X19+184]
	224 Compare X0, 0
	225 JumpIfEqual {278}
	226 Move X8, [X21]
	227 Move X2, X31
	228 Move X8, [X8+184]
	229 Move W1, [X8+76]
	230 Move W8, 0x42C00000
	231 Move S0, W8
	232 Call Material.SetFloat, X0, X1, V0
	233 Move X0, [X19+184]
	234 Compare X0, 0
	235 JumpIfEqual {278}
	236 Move X8, [X21]
	237 Move S0, W31
	238 Move X2, X31
	239 Move X8, [X8+184]
	240 Move W1, [X8+80]
	241 Call Material.SetFloat, X0, X1, V0
	242 Move X0, [X19+184]
	243 Compare X0, 0
	244 JumpIfEqual {278}
	245 Move X8, [X21]
	246 Move S0, W31
	247 Move X2, X31
	248 Move X8, [X8+184]
	249 Move W1, [X8+84]
	250 Call Material.SetFloat, X0, X1, V0
	251 Move X0, [X19+184]
	252 Compare X0, 0
	253 JumpIfEqual {278}
	254 Move X8, [X21]
	255 Move X2, X31
	256 Move X8, [X8+184]
	257 Move W1, [X8+88]
	258 Move W8, 0x42C00000
	259 Move S0, W8
	260 Call Material.SetFloat, X0, X1, V0
	261 Move X0, [X19+184]
	262 Compare X0, 0
	263 JumpIfEqual {278}
	264 Move X8, [X21]
	265 Move X20, [X31+32]
	266 Move X19, [X31+40]
	267 Move X22, [X31+16]
	268 Move X21, [X31+24]
	269 Move X2, X31
	270 Move X8, [X8+184]
	271 Move W1, [X8+92]
	272 Move W8, 0x42C00000
	273 Move S0, W8
	274 Move X30, [X31+48]
	275 Move X23, [X31+56]
	276 Call Material.SetFloat, X0, X1, V0
	277 Return 
	278 Call 0x1C17F20
	279 Call 0x1C17F28

Method: UnityEngine.Mesh CreateSphereMesh()

Disassembly:
	0x03AA0690 BL 0x1C16CF4
	0x03AA0694 ADRP X0, 0x6B7000
	0x03AA0698 LDR X0, [X0 + 0x898]
	0x03AA069C BL 0x1C16CF4
	0x03AA06A0 ADRP X0, 0x6B7000
	0x03AA06A4 LDR X0, [X0 + 0x8A0]
	0x03AA06A8 BL 0x1C16CF4
	0x03AA06AC ADRP X0, 0x6B7000
	0x03AA06B0 LDR X0, [X0 + 0x8A8]
	0x03AA06B4 BL 0x1C16CF4
	0x03AA06B8 ADRP X0, 0x6B7000
	0x03AA06BC LDR X0, [X0 + 0x888]
	0x03AA06C0 BL 0x1C16CF4
	0x03AA06C4 ADRP X0, 0x6B7000
	0x03AA06C8 LDR X0, [X0 + 0x8B0]
	0x03AA06CC BL 0x1C16CF4
	0x03AA06D0 ADRP X0, 0x6B7000
	0x03AA06D4 LDR X0, [X0 + 0x8B8]
	0x03AA06D8 BL 0x1C16CF4
	0x03AA06DC ADRP X0, 0x6B7000
	0x03AA06E0 LDR X0, [X0 + 0x8C0]
	0x03AA06E4 BL 0x1C16CF4
	0x03AA06E8 ADRP X0, 0x6B7000
	0x03AA06EC LDR X0, [X0 + 0x858]
	0x03AA06F0 BL 0x1C16CF4
	0x03AA06F4 ADRP X0, 0x6B7000
	0x03AA06F8 LDR X0, [X0 + 0x8C8]
	0x03AA06FC BL 0x1C16CF4
	0x03AA0700 ADRP X0, 0x6B7000
	0x03AA0704 LDR X0, [X0 + 0x8D0]
	0x03AA0708 BL 0x1C16CF4
	0x03AA070C ADRP X0, 0x6B7000
	0x03AA0710 LDR X0, [X0 + 0x868]
	0x03AA0714 BL 0x1C16CF4
	0x03AA0718 ADRP X0, 0x6B7000
	0x03AA071C LDR X0, [X0 + 0x890]
	0x03AA0720 BL 0x1C16CF4
	0x03AA0724 ADRP X0, 0x6B7000
	0x03AA0728 LDR X0, [X0 + 0x8D8]
	0x03AA072C BL 0x1C16CF4
	0x03AA0730 ADRP X0, 0x6B7000
	0x03AA0734 LDR X0, [X0 + 0x870]
	0x03AA0738 BL 0x1C16CF4
	0x03AA073C ADRP X0, 0x6B7000
	0x03AA0740 LDR X0, [X0 + 0x8E0]
	0x03AA0744 BL 0x1C16CF4
	0x03AA0748 ADRP X0, 0x6B7000
	0x03AA074C LDR X0, [X0 + 0x8E8]
	0x03AA0750 BL 0x1C16CF4
	0x03AA0754 ADRP X0, 0x6B7000
	0x03AA0758 LDR X0, [X0 + 0x8F0]
	0x03AA075C BL 0x1C16CF4
	0x03AA0760 ADRP X0, 0x6B6000
	0x03AA0764 LDR X0, [X0 + 0x760]
	0x03AA0768 BL 0x1C16CF4
	0x03AA076C ADRP X0, 0x6B7000
	0x03AA0770 LDR X0, [X0 + 0x8F8]
	0x03AA0774 BL 0x1C16CF4
	0x03AA0778 ADRP X0, 0x6B7000
	0x03AA077C LDR X0, [X0 + 0x900]
	0x03AA0780 BL 0x1C16CF4
	0x03AA0784 ADRP X0, 0x6B7000
	0x03AA0788 LDR X0, [X0 + 0x908]
	0x03AA078C BL 0x1C16CF4
	0x03AA0790 ADRP X0, 0x6B7000
	0x03AA0794 LDR X0, [X0 + 0x910]
	0x03AA0798 BL 0x1C16CF4
	0x03AA079C ADRP X0, 0x6B7000
	0x03AA07A0 LDR X0, [X0 + 0x918]
	0x03AA07A4 BL 0x1C16CF4
	0x03AA07A8 ADRP X0, 0x6B7000
	0x03AA07AC LDR X0, [X0 + 0x920]
	0x03AA07B0 BL 0x1C16CF4
	0x03AA07B4 ADRP X0, 0x6B7000
	0x03AA07B8 LDR X0, [X0 + 0x928]
	0x03AA07BC BL 0x1C16CF4
	0x03AA07C0 ADRP X0, 0x6B7000
	0x03AA07C4 LDR X0, [X0 + 0x930]
	0x03AA07C8 BL 0x1C16CF4
	0x03AA07CC ADRP X0, 0x6B4000
	0x03AA07D0 LDR X0, [X0 + 0x848]
	0x03AA07D4 BL 0x1C16CF4
	0x03AA07D8 ADRP X0, 0x6B7000
	0x03AA07DC LDR X0, [X0 + 0x938]
	0x03AA07E0 BL 0x1C16CF4
	0x03AA07E4 ADRP X0, 0x6B7000
	0x03AA07E8 LDR X0, [X0 + 0x940]
	0x03AA07EC BL 0x1C16CF4
	0x03AA07F0 ADRP X0, 0x6B7000
	0x03AA07F4 LDR X0, [X0 + 0x878]
	0x03AA07F8 BL 0x1C16CF4
	0x03AA07FC ADRP X0, 0x6B6000
	0x03AA0800 LDR X0, [X0 + 0xEC8]
	0x03AA0804 BL 0x1C16CF4
	0x03AA0808 ADRP X0, 0x6B7000
	0x03AA080C LDR X0, [X0 + 0x860]
	0x03AA0810 BL 0x1C16CF4
	0x03AA0814 ADRP X0, 0x6B7000
	0x03AA0818 LDR X0, [X0 + 0x948]
	0x03AA081C BL 0x1C16CF4
	0x03AA0820 ADRP X0, 0x6B7000
	0x03AA0824 LDR X0, [X0 + 0x950]
	0x03AA0828 BL 0x1C16CF4
	0x03AA082C ADRP X0, 0x6B7000
	0x03AA0830 LDR X0, [X0 + 0x880]
	0x03AA0834 BL 0x1C16CF4
	0x03AA0838 ADRP X0, 0x6B7000
	0x03AA083C LDR X0, [X0 + 0x958]
	0x03AA0840 BL 0x1C16CF4
	0x03AA0844 ADRP X0, 0x6B7000
	0x03AA0848 LDR X0, [X0 + 0x960]
	0x03AA084C BL 0x1C16CF4
	0x03AA0850 ADRP X0, 0x6B7000
	0x03AA0854 LDR X0, [X0 + 0x968]
	0x03AA0858 BL 0x1C16CF4
	0x03AA085C ADRP X0, 0x6B7000
	0x03AA0860 LDR X0, [X0 + 0x970]
	0x03AA0864 BL 0x1C16CF4
	0x03AA0868 ADRP X0, 0x6B7000
	0x03AA086C LDR X0, [X0 + 0x978]
	0x03AA0870 BL 0x1C16CF4
	0x03AA0874 MOVZ W8, 0x1
	0x03AA0878 STRB W8, [X29 + 0x3FB]
	0x03AA087C LDR X0, [X20]
	0x03AA0880 MOV X1, X31
	0x03AA0884 BL 0x3C124EC
	0x03AA0888 LDR X8, [X19]
	0x03AA088C MOV X1, X31
	0x03AA0890 LDR X8, [X8 + 0xB8]
	0x03AA0894 STR W0, [X8]
	0x03AA0898 LDR X0, [X28]
	0x03AA089C BL 0x3C124EC
	0x03AA08A0 LDR X8, [X19]
	0x03AA08A4 MOV X1, X31
	0x03AA08A8 LDR X8, [X8 + 0xB8]
	0x03AA08AC STR W0, [X8 + 0x4]
	0x03AA08B0 LDR X0, [X27]
	0x03AA08B4 BL 0x3C124EC
	0x03AA08B8 LDR X8, [X19]
	0x03AA08BC MOV X1, X31
	0x03AA08C0 LDR X8, [X8 + 0xB8]
	0x03AA08C4 STR W0, [X8 + 0x8]
	0x03AA08C8 LDR X0, [X26]
	0x03AA08CC BL 0x3C124EC
	0x03AA08D0 LDR X8, [X19]
	0x03AA08D4 MOV X1, X31
	0x03AA08D8 LDR X8, [X8 + 0xB8]
	0x03AA08DC STR W0, [X8 + 0xC]
	0x03AA08E0 LDR X0, [X25]
	0x03AA08E4 BL 0x3C124EC
	0x03AA08E8 LDR X8, [X19]
	0x03AA08EC MOV X1, X31
	0x03AA08F0 LDR X8, [X8 + 0xB8]
	0x03AA08F4 STR W0, [X8 + 0x10]
	0x03AA08F8 LDR X0, [X24]
	0x03AA08FC BL 0x3C124EC
	0x03AA0900 LDR X8, [X19]
	0x03AA0904 MOV X1, X31
	0x03AA0908 LDR X8, [X8 + 0xB8]
	0x03AA090C STR W0, [X8 + 0x14]
	0x03AA0910 LDR X0, [X23]
	0x03AA0914 BL 0x3C124EC
	0x03AA0918 LDR X8, [X19]
	0x03AA091C MOV X1, X31
	0x03AA0920 LDR X8, [X8 + 0xB8]
	0x03AA0924 STR W0, [X8 + 0x18]
	0x03AA0928 LDR X0, [X22]
	0x03AA092C BL 0x3C124EC
	0x03AA0930 LDR X8, [X19]
	0x03AA0934 MOV X1, X31
	0x03AA0938 LDR X8, [X8 + 0xB8]
	0x03AA093C STR W0, [X8 + 0x1C]
	0x03AA0940 LDR X0, [X21]
	0x03AA0944 BL 0x3C124EC
	0x03AA0948 LDR X8, [X19]
	0x03AA094C MOV X1, X31
	0x03AA0950 LDR X8, [X8 + 0xB8]
	0x03AA0954 STR W0, [X8 + 0x20]
	0x03AA0958 ADRP X8, 0x6B7000
	0x03AA095C LDR X8, [X8 + 0x938]
	0x03AA0960 LDR X0, [X8]
	0x03AA0964 BL 0x3C124EC
	0x03AA0968 LDR X8, [X19]
	0x03AA096C MOV X1, X31
	0x03AA0970 LDR X8, [X8 + 0xB8]
	0x03AA0974 STR W0, [X8 + 0x24]
	0x03AA0978 ADRP X8, 0x6B7000
	0x03AA097C LDR X8, [X8 + 0x950]
	0x03AA0980 LDR X0, [X8]
	0x03AA0984 BL 0x3C124EC
	0x03AA0988 LDR X8, [X19]
	0x03AA098C MOV X1, X31
	0x03AA0990 LDR X8, [X8 + 0xB8]
	0x03AA0994 STR W0, [X8 + 0x28]
	0x03AA0998 ADRP X8, 0x6B7000
	0x03AA099C LDR X8, [X8 + 0x920]
	0x03AA09A0 LDR X0, [X8]
	0x03AA09A4 BL 0x3C124EC
	0x03AA09A8 LDR X8, [X19]
	0x03AA09AC MOV X1, X31
	0x03AA09B0 LDR X8, [X8 + 0xB8]
	0x03AA09B4 STR W0, [X8 + 0x2C]
	0x03AA09B8 ADRP X8, 0x6B7000
	0x03AA09BC LDR X8, [X8 + 0x8F8]
	0x03AA09C0 LDR X0, [X8]
	0x03AA09C4 BL 0x3C124EC
	0x03AA09C8 LDR X8, [X19]
	0x03AA09CC MOV X1, X31
	0x03AA09D0 LDR X8, [X8 + 0xB8]
	0x03AA09D4 STR W0, [X8 + 0x30]
	0x03AA09D8 ADRP X8, 0x6B7000
	0x03AA09DC LDR X8, [X8 + 0x940]
	0x03AA09E0 LDR X0, [X8]
	0x03AA09E4 BL 0x3C124EC
	0x03AA09E8 LDR X8, [X19]
	0x03AA09EC MOV X1, X31
	0x03AA09F0 LDR X8, [X8 + 0xB8]
	0x03AA09F4 STR W0, [X8 + 0x34]
	0x03AA09F8 ADRP X8, 0x6B7000
	0x03AA09FC LDR X8, [X8 + 0x948]
	0x03AA0A00 LDR X0, [X8]
	0x03AA0A04 BL 0x3C124EC
	0x03AA0A08 LDR X8, [X19]
	0x03AA0A0C MOV X1, X31
	0x03AA0A10 LDR X8, [X8 + 0xB8]
	0x03AA0A14 STR W0, [X8 + 0x38]
	0x03AA0A18 ADRP X8, 0x6B7000
	0x03AA0A1C LDR X8, [X8 + 0x968]
	0x03AA0A20 LDR X0, [X8]
	0x03AA0A24 BL 0x3C124EC
	0x03AA0A28 LDR X8, [X19]
	0x03AA0A2C MOV X1, X31
	0x03AA0A30 LDR X8, [X8 + 0xB8]
	0x03AA0A34 STR W0, [X8 + 0x3C]
	0x03AA0A38 ADRP X8, 0x6B7000
	0x03AA0A3C LDR X8, [X8 + 0x8D8]
	0x03AA0A40 LDR X0, [X8]
	0x03AA0A44 BL 0x3C124EC
	0x03AA0A48 LDR X8, [X19]
	0x03AA0A4C MOV X1, X31
	0x03AA0A50 LDR X8, [X8 + 0xB8]
	0x03AA0A54 STR W0, [X8 + 0x40]
	0x03AA0A58 ADRP X8, 0x6B7000
	0x03AA0A5C LDR X8, [X8 + 0x8B8]
	0x03AA0A60 LDR X0, [X8]
	0x03AA0A64 BL 0x3C124EC
	0x03AA0A68 LDR X8, [X19]
	0x03AA0A6C MOV X1, X31
	0x03AA0A70 LDR X8, [X8 + 0xB8]
	0x03AA0A74 STR W0, [X8 + 0x44]
	0x03AA0A78 ADRP X8, 0x6B7000
	0x03AA0A7C LDR X8, [X8 + 0x910]
	0x03AA0A80 LDR X0, [X8]
	0x03AA0A84 BL 0x3C124EC
	0x03AA0A88 LDR X8, [X19]
	0x03AA0A8C MOV X1, X31
	0x03AA0A90 LDR X8, [X8 + 0xB8]
	0x03AA0A94 STR W0, [X8 + 0x48]
	0x03AA0A98 ADRP X8, 0x6B7000
	0x03AA0A9C LDR X8, [X8 + 0x960]
	0x03AA0AA0 LDR X0, [X8]
	0x03AA0AA4 BL 0x3C124EC
	0x03AA0AA8 LDR X8, [X19]
	0x03AA0AAC MOV X1, X31
	0x03AA0AB0 LDR X8, [X8 + 0xB8]
	0x03AA0AB4 STR W0, [X8 + 0x4C]
	0x03AA0AB8 ADRP X8, 0x6B7000
	0x03AA0ABC LDR X8, [X8 + 0x958]
	0x03AA0AC0 LDR X0, [X8]
	0x03AA0AC4 BL 0x3C124EC
	0x03AA0AC8 LDR X8, [X19]
	0x03AA0ACC MOV X1, X31
	0x03AA0AD0 LDR X8, [X8 + 0xB8]
	0x03AA0AD4 STR W0, [X8 + 0x50]
	0x03AA0AD8 ADRP X8, 0x6B7000
	0x03AA0ADC LDR X8, [X8 + 0x8E8]
	0x03AA0AE0 LDR X0, [X8]
	0x03AA0AE4 BL 0x3C124EC
	0x03AA0AE8 LDR X8, [X19]
	0x03AA0AEC MOV X1, X31
	0x03AA0AF0 LDR X8, [X8 + 0xB8]
	0x03AA0AF4 STR W0, [X8 + 0x54]
	0x03AA0AF8 ADRP X8, 0x6B7000
	0x03AA0AFC LDR X8, [X8 + 0x8E0]
	0x03AA0B00 LDR X0, [X8]
	0x03AA0B04 BL 0x3C124EC
	0x03AA0B08 LDR X8, [X19]
	0x03AA0B0C MOV X1, X31
	0x03AA0B10 LDR X8, [X8 + 0xB8]
	0x03AA0B14 STR W0, [X8 + 0x58]
	0x03AA0B18 ADRP X8, 0x6B7000
	0x03AA0B1C LDR X8, [X8 + 0x8C8]
	0x03AA0B20 LDR X0, [X8]
	0x03AA0B24 BL 0x3C124EC
	0x03AA0B28 LDR X8, [X19]
	0x03AA0B2C MOV X1, X31
	0x03AA0B30 LDR X8, [X8 + 0xB8]
	0x03AA0B34 STR W0, [X8 + 0x5C]
	0x03AA0B38 ADRP X8, 0x6B7000
	0x03AA0B3C LDR X8, [X8 + 0x970]
	0x03AA0B40 LDR X0, [X8]
	0x03AA0B44 BL 0x3C124EC
	0x03AA0B48 LDR X8, [X19]
	0x03AA0B4C MOV X1, X31
	0x03AA0B50 LDR X8, [X8 + 0xB8]
	0x03AA0B54 STR W0, [X8 + 0x60]
	0x03AA0B58 ADRP X8, 0x6B7000
	0x03AA0B5C LDR X8, [X8 + 0x928]
	0x03AA0B60 LDR X0, [X8]
	0x03AA0B64 BL 0x3C124EC
	0x03AA0B68 LDR X8, [X19]
	0x03AA0B6C MOV X1, X31
	0x03AA0B70 LDR X8, [X8 + 0xB8]
	0x03AA0B74 STR W0, [X8 + 0x64]
	0x03AA0B78 ADRP X8, 0x6B7000
	0x03AA0B7C LDR X8, [X8 + 0x8A8]
	0x03AA0B80 LDR X0, [X8]
	0x03AA0B84 BL 0x3C124EC
	0x03AA0B88 LDR X8, [X19]
	0x03AA0B8C MOV X1, X31
	0x03AA0B90 LDR X8, [X8 + 0xB8]
	0x03AA0B94 STR W0, [X8 + 0x68]
	0x03AA0B98 ADRP X8, 0x6B7000
	0x03AA0B9C LDR X8, [X8 + 0x8B0]
	0x03AA0BA0 LDR X0, [X8]
	0x03AA0BA4 BL 0x3C124EC
	0x03AA0BA8 LDR X8, [X19]
	0x03AA0BAC MOV X1, X31
	0x03AA0BB0 LDR X8, [X8 + 0xB8]
	0x03AA0BB4 STR W0, [X8 + 0x6C]
	0x03AA0BB8 ADRP X8, 0x6B7000
	0x03AA0BBC LDR X8, [X8 + 0x898]
	0x03AA0BC0 LDR X0, [X8]
	0x03AA0BC4 BL 0x3C124EC
	0x03AA0BC8 LDR X8, [X19]
	0x03AA0BCC MOV X1, X31
	0x03AA0BD0 LDR X8, [X8 + 0xB8]
	0x03AA0BD4 STR W0, [X8 + 0x70]
	0x03AA0BD8 ADRP X8, 0x6B7000
	0x03AA0BDC LDR X8, [X8 + 0x930]
	0x03AA0BE0 LDR X0, [X8]
	0x03AA0BE4 BL 0x3C124EC
	0x03AA0BE8 LDR X8, [X19]
	0x03AA0BEC MOV X1, X31
	0x03AA0BF0 LDR X8, [X8 + 0xB8]
	0x03AA0BF4 STR W0, [X8 + 0x74]
	0x03AA0BF8 ADRP X8, 0x6B7000
	0x03AA0BFC LDR X8, [X8 + 0x978]
	0x03AA0C00 LDR X0, [X8]
	0x03AA0C04 BL 0x3C124EC
	0x03AA0C08 LDR X8, [X19]
	0x03AA0C0C MOV X1, X31
	0x03AA0C10 LDR X8, [X8 + 0xB8]
	0x03AA0C14 STR W0, [X8 + 0x78]
	0x03AA0C18 ADRP X8, 0x6B7000
	0x03AA0C1C LDR X8, [X8 + 0x8A0]
	0x03AA0C20 LDR X0, [X8]
	0x03AA0C24 BL 0x3C124EC
	0x03AA0C28 LDR X8, [X19]
	0x03AA0C2C MOV X1, X31
	0x03AA0C30 LDR X8, [X8 + 0xB8]
	0x03AA0C34 STR W0, [X8 + 0x7C]
	0x03AA0C38 ADRP X8, 0x6B4000
	0x03AA0C3C LDR X8, [X8 + 0x848]
	0x03AA0C40 LDR X0, [X8]
	0x03AA0C44 BL 0x3C124EC
	0x03AA0C48 LDR X8, [X19]
	0x03AA0C4C MOV X1, X31
	0x03AA0C50 LDR X8, [X8 + 0xB8]
	0x03AA0C54 STR W0, [X8 + 0x80]
	0x03AA0C58 ADRP X8, 0x6B7000
	0x03AA0C5C LDR X8, [X8 + 0x900]
	0x03AA0C60 LDR X0, [X8]
	0x03AA0C64 BL 0x3C124EC
	0x03AA0C68 LDR X8, [X19]
	0x03AA0C6C MOV X1, X31
	0x03AA0C70 LDR X8, [X8 + 0xB8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, 0x943000
	006 Move X20, 0x656000
	007 Move W8, [X19+1015]
	008 Move X20, [X20+2480]
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {27}
	013 Move X0, 0x655000
	014 Move X0, [X0+3672]
	015 Call 0x1C17CF4
	016 Move X0, 0x65B000
	017 Move X0, [X0+1792]
	018 Call 0x1C17CF4
	019 Move X0, 0x6B8000
	020 Move X0, [X0+1952]
	021 Call 0x1C17CF4
	022 Move X0, 0x656000
	023 Move X0, [X0+2480]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X19+1015], W8
	027 Move X0, [X20]
	028 Move W1, 42
	029 Call 0x1C17D6C
	030 Compare X0, 0
	031 JumpIfEqual {346}
	032 Move W8, [X0+24]
	033 Move X19, X0
	034 Compare W8, 0
	035 JumpIfEqual {345}
	036 Move W9, 0xF5C3
	037 NotImplemented "Instruction MOVK not yet implemented."
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Move [X19+32], X31
	040 Move [X19+40], W9
	041 Move X9, -50012160
	042 Move V0, [X9+1672]
	043 Move W9, 0xF5C3
	044 NotImplemented "Instruction MOVK not yet implemented."
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Move [X19+44], D0
	047 Move [X19+52], W9
	048 Move X10, -50008064
	049 Move V0, [X10+72]
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Move [X19+64], W9
	052 Move [X19+56], D0
	053 Move X9, -50008064
	054 Move V0, [X9+1064]
	055 Move W9, 0xF5C3
	056 NotImplemented "Instruction MOVK not yet implemented."
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Move [X19+68], D0
	059 Move [X19+76], W9
	060 Move X10, -50012160
	061 Move V0, [X10+3848]
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Move [X19+88], W9
	064 Move [X19+80], D0
	065 Move X9, -50012160
	066 Move V0, [X9+1032]
	067 Move W9, 0xF5C3
	068 NotImplemented "Instruction MOVK not yet implemented."
	069 NotImplemented "Instruction CMP not yet implemented."
	070 Move [X19+92], D0
	071 Move [X19+100], W9
	072 Move X9, -50008064
	073 Move V0, [X9+384]
	074 Move W9, 0xDF3B
	075 NotImplemented "Instruction MOVK not yet implemented."
	076 NotImplemented "Instruction CMP not yet implemented."
	077 Move [X19+104], D0
	078 Move [X19+112], W9
	079 Move X10, -50012160
	080 Move V0, [X10+2160]
	081 NotImplemented "Instruction CMP not yet implemented."
	082 Move [X19+124], W9
	083 Move [X19+116], D0
	084 Move X9, -50012160
	085 Move V0, [X9+3576]
	086 Move W9, 0x9DB2
	087 NotImplemented "Instruction MOVK not yet implemented."
	088 NotImplemented "Instruction CMP not yet implemented."
	089 Move [X19+128], D0
	090 Move [X19+136], W9
	091 Move X9, -50012160
	092 Move V0, [X9+3184]
	093 Move W9, 0xDF3B
	094 NotImplemented "Instruction MOVK not yet implemented."
	095 NotImplemented "Instruction CMP not yet implemented."
	096 Move [X19+140], D0
	097 Move [X19+148], W9
	098 Move X9, -50012160
	099 Move V0, [X9+3584]
	100 Move W9, 0xBC6A
	101 NotImplemented "Instruction MOVK not yet implemented."
	102 NotImplemented "Instruction CMP not yet implemented."
	103 Move [X19+152], D0
	104 Move [X19+160], W9
	105 Move X9, -50012160
	106 Move V0, [X9+3728]
	107 NotImplemented "Instruction CMP not yet implemented."
	108 Move [X19+172], W31
	109 Move [X19+164], D0
	110 Move X9, -50008064
	111 Move V0, [X9+1232]
	112 NotImplemented "Instruction CMP not yet implemented."
	113 Move [X19+184], W31
	114 Move [X19+176], D0
	115 Move X9, -50012160
	116 Move V0, [X9+1320]
	117 NotImplemented "Instruction CMP not yet implemented."
	118 Move [X19+196], W31
	119 Move [X19+188], D0
	120 Move X9, -50008064
	121 Move V0, [X9+1360]
	122 NotImplemented "Instruction CMP not yet implemented."
	123 Move [X19+208], W31
	124 Move [X19+200], D0
	125 Move X9, -50008064
	126 Move V0, [X9+80]
	127 Move W9, 0xBC6A
	128 NotImplemented "Instruction MOVK not yet implemented."
	129 NotImplemented "Instruction CMP not yet implemented."
	130 Move [X19+212], D0
	131 Move [X19+220], W9
	132 Move X9, -50008064
	133 Move V0, [X9+88]
	134 Move W9, 0xDF3B
	135 NotImplemented "Instruction MOVK not yet implemented."
	136 NotImplemented "Instruction CMP not yet implemented."
	137 Move [X19+224], D0
	138 Move [X19+232], W9
	139 Move X9, -50012160
	140 Move V0, [X9+3592]
	141 NotImplemented "Instruction CMP not yet implemented."
	142 Move [X19+244], W31
	143 Move [X19+236], D0
	144 Move X9, -50012160
	145 Move V0, [X9+2016]
	146 NotImplemented "Instruction CMP not yet implemented."
	147 Move [X19+256], W31
	148 Move [X19+248], D0
	149 Move X9, -50008064
	150 Move V0, [X9+1008]
	151 Move W10, 0xBC6A
	152 Add X9, X19, 260
	153 NotImplemented "Instruction MOVK not yet implemented."
	154 NotImplemented "Instruction CMP not yet implemented."
	155 Move [X9], D0
	156 Move [X19+268], W10
	157 Move X9, -50012160
	158 Move V0, [X9+2376]
	159 Move W9, 0xDF3B
	160 NotImplemented "Instruction MOVK not yet implemented."
	161 NotImplemented "Instruction CMP not yet implemented."
	162 Move [X19+272], D0
	163 Move [X19+280], W9
	164 Move X9, -50008064
	165 Move V0, [X9+824]
	166 Move W10, 0xBC6A
	167 Add X9, X19, 284
	168 NotImplemented "Instruction MOVK not yet implemented."
	169 NotImplemented "Instruction CMP not yet implemented."
	170 Move [X9], D0
	171 Move [X9+8], W10
	172 Move X9, -50012160
	173 Move V0, [X9+1560]
	174 Move W9, 0xDF3B
	175 NotImplemented "Instruction MOVK not yet implemented."
	176 NotImplemented "Instruction CMP not yet implemented."
	177 Move [X19+296], D0
	178 Move [X19+304], W9
	179 Move X10, -50008064
	180 Move V0, [X10+392]
	181 Add X10, X19, 308
	182 NotImplemented "Instruction CMP not yet implemented."
	183 Move [X10+8], W9
	184 Move [X10], D0
	185 Move X9, -50012160
	186 Move V0, [X9+4040]
	187 Move W9, 0xF5C3
	188 NotImplemented "Instruction MOVK not yet implemented."
	189 NotImplemented "Instruction CMP not yet implemented."
	190 Move [X19+320], D0
	191 Move [X19+328], W9
	192 Move X10, -50012160
	193 Move V0, [X10+2824]
	194 Add X10, X19, 332
	195 NotImplemented "Instruction CMP not yet implemented."
	196 Move [X10+8], W9
	197 Move [X10], D0
	198 Move X9, -50008064
	199 Move V0, [X9+264]
	200 NotImplemented "Instruction CMP not yet implemented."
	201 Move [X19+352], W31
	202 Move [X19+344], D0
	203 Move X9, -50012160
	204 Move V0, [X9+2384]
	205 Move W10, 0xBC6A
	206 Add X9, X19, 356
	207 NotImplemented "Instruction MOVK not yet implemented."
	208 NotImplemented "Instruction CMP not yet implemented."
	209 Move [X9], D0
	210 Move [X9+8], W10
	211 Move X9, -50008064
	212 Move V0, [X9+1016]
	213 Move W9, 0xF5C3
	214 NotImplemented "Instruction MOVK not yet implemented."
	215 NotImplemented "Instruction CMP not yet implemented."
	216 Move [X19+368], D0
	217 Move [X19+376], W9
	218 Move W9, 0xF5C3
	219 NotImplemented "Instruction MOVK not yet implemented."
	220 NotImplemented "Instruction CMP not yet implemented."
	221 Move [X19+384], W31
	222 Move [X19+380], W31
	223 Move [X19+388], W9
	224 Move X9, -50012160
	225 Move V0, [X9+3856]
	226 Move W9, 0xF5C3
	227 NotImplemented "Instruction MOVK not yet implemented."
	228 NotImplemented "Instruction CMP not yet implemented."
	229 Move [X19+392], D0
	230 Move [X19+400], W9
	231 Move X9, -50012160
	232 Move V0, [X9+1328]
	233 Move W10, 0xBC6A
	234 Add X9, X19, 404
	235 NotImplemented "Instruction MOVK not yet implemented."
	236 NotImplemented "Instruction CMP not yet implemented."
	237 Move [X9], D0
	238 Move [X9+8], W10
	239 Move X9, -50012160
	240 Move V0, [X9+1040]
	241 Move W9, 0xDF3B
	242 NotImplemented "Instruction MOVK not yet implemented."
	243 NotImplemented "Instruction CMP not yet implemented."
	244 Move [X19+416], D0
	245 Move [X19+424], W9
	246 Move X9, -50008064
	247 Move V0, [X9+1368]
	248 Move W10, 0xF5C3
	249 Add X9, X19, 428
	250 NotImplemented "Instruction MOVK not yet implemented."
	251 NotImplemented "Instruction CMP not yet implemented."
	252 Move [X9], D0
	253 Move [X9+8], W10
	254 Move X9, -50008064
	255 Move V0, [X9+1376]
	256 Move W9, 0xBC6A
	257 NotImplemented "Instruction MOVK not yet implemented."
	258 NotImplemented "Instruction CMP not yet implemented."
	259 Move [X19+440], D0
	260 Move [X19+448], W9
	261 Move X9, -50008064
	262 Move V0, [X9+96]
	263 Add X9, X19, 452
	264 NotImplemented "Instruction CMP not yet implemented."
	265 Move [X9+8], W31
	266 Move [X9], D0
	267 Move X9, -50012160
	268 Move V0, [X9+1680]
	269 Move W9, 0xDF3B
	270 NotImplemented "Instruction MOVK not yet implemented."
	271 NotImplemented "Instruction CMP not yet implemented."
	272 Move [X19+464], D0
	273 Move [X19+472], W9
	274 Move X9, -50012160
	275 Move V0, [X9+3336]
	276 Move W10, 0xBC6A
	277 Add X9, X19, 476
	278 NotImplemented "Instruction MOVK not yet implemented."
	279 NotImplemented "Instruction CMP not yet implemented."
	280 Move [X9], D0
	281 Move [X9+8], W10
	282 Move X9, -50012160
	283 Move V0, [X9+1048]
	284 NotImplemented "Instruction CMP not yet implemented."
	285 Move [X19+496], W31
	286 Move [X19+488], D0
	287 Move X9, -50012160
	288 Move V0, [X9+3736]
	289 Move W10, 0xDF3B
	290 Add X9, X19, 500
	291 NotImplemented "Instruction MOVK not yet implemented."
	292 NotImplemented "Instruction CMP not yet implemented."
	293 Move [X9], D0
	294 Move [X9+8], W10
	295 Move X9, -50012160
	296 Move V0, [X9+1056]
	297 Move W9, 0xBC6A
	298 NotImplemented "Instruction MOVK not yet implemented."
	299 NotImplemented "Instruction CMP not yet implemented."
	300 Move [X19+512], D0
	301 Move [X19+520], W9
	302 Move X8, -50008064
	303 Move V0, [X8+1072]
	304 Move X8, 0x655000
	305 Move X8, [X8+3672]
	306 Add X9, X19, 524
	307 Move [X9], D0
	308 Move [X9+8], W31
	309 Move X0, [X8]
	310 Move X20, 0x6B8000
	311 Move X21, 0x65B000
	312 Move X20, [X20+1952]
	313 Move X21, [X21+1792]
	314 Move W1, 240
	315 Call 0x1C17D6C
	316 Move X1, [X20]
	317 Move X2, X31
	318 Move X20, X0
	319 Call RuntimeHelpers.InitializeArray, X0, X1
	320 Move X0, [X21]
	321 Call 0x1C17F10
	322 Move X1, X31
	323 Move X21, X0
	324 Call Mesh..ctor, X0
	325 Compare X21, 0
	326 JumpIfEqual {346}
	327 Move X0, X21
	328 Move W1, W31
	329 Move X2, X31
	330 Call Mesh.set_indexFormat, X0, X1
	331 Move X0, X21
	332 Move X1, X19
	333 Move X2, X31
	334 Call Mesh.set_vertices, X0, X1
	335 Move X0, X21
	336 Move X1, X20
	337 Move X2, X31
	338 Call Mesh.set_triangles, X0, X1
	339 Move X20, [X31+16]
	340 Move X19, [X31+24]
	341 Move X0, X21
	342 Move X30, [X31+32]
	343 Move X21, [X31+40]
	344 Return X0
	345 Call 0x1C17F28
	346 Call 0x1C17F20

Method: UnityEngine.Mesh CreateHemisphereMesh()

Disassembly:
	0x03AA0C74 STR W0, [X8 + 0x84]
	0x03AA0C78 ADRP X8, 0x6B7000
	0x03AA0C7C LDR X8, [X8 + 0x8D0]
	0x03AA0C80 LDR X0, [X8]
	0x03AA0C84 BL 0x3C124EC
	0x03AA0C88 LDR X8, [X19]
	0x03AA0C8C MOV X1, X31
	0x03AA0C90 LDR X8, [X8 + 0xB8]
	0x03AA0C94 STR W0, [X8 + 0x88]
	0x03AA0C98 ADRP X8, 0x6B6000
	0x03AA0C9C LDR X8, [X8 + 0xEC8]
	0x03AA0CA0 LDR X0, [X8]
	0x03AA0CA4 BL 0x3C124EC
	0x03AA0CA8 LDR X8, [X19]
	0x03AA0CAC MOV X1, X31
	0x03AA0CB0 LDR X8, [X8 + 0xB8]
	0x03AA0CB4 STR W0, [X8 + 0x8C]
	0x03AA0CB8 ADRP X8, 0x6B7000
	0x03AA0CBC LDR X8, [X8 + 0x918]
	0x03AA0CC0 LDR X0, [X8]
	0x03AA0CC4 BL 0x3C124EC
	0x03AA0CC8 LDR X8, [X19]
	0x03AA0CCC MOV X1, X31
	0x03AA0CD0 LDR X8, [X8 + 0xB8]
	0x03AA0CD4 STR W0, [X8 + 0x90]
	0x03AA0CD8 ADRP X8, 0x6B7000
	0x03AA0CDC LDR X8, [X8 + 0x8C0]
	0x03AA0CE0 LDR X0, [X8]
	0x03AA0CE4 BL 0x3C124EC
	0x03AA0CE8 LDR X8, [X19]
	0x03AA0CEC MOV X1, X31
	0x03AA0CF0 LDR X8, [X8 + 0xB8]
	0x03AA0CF4 STR W0, [X8 + 0x94]
	0x03AA0CF8 ADRP X8, 0x6B7000
	0x03AA0CFC LDR X8, [X8 + 0x8F0]
	0x03AA0D00 LDR X0, [X8]
	0x03AA0D04 BL 0x3C124EC
	0x03AA0D08 LDR X8, [X19]
	0x03AA0D0C MOV X1, X31
	0x03AA0D10 LDR X8, [X8 + 0xB8]
	0x03AA0D14 STR W0, [X8 + 0x98]
	0x03AA0D18 ADRP X8, 0x6B7000
	0x03AA0D1C LDR X8, [X8 + 0x908]
	0x03AA0D20 LDR X0, [X8]
	0x03AA0D24 BL 0x3C124EC
	0x03AA0D28 LDR X8, [X19]
	0x03AA0D2C LDP X20, X19, [X31 + 0x50]
	0x03AA0D30 LDP X22, X21, [X31 + 0x40]
	0x03AA0D34 LDP X24, X23, [X31 + 0x30]
	0x03AA0D38 LDR X8, [X8 + 0xB8]
	0x03AA0D3C LDP X26, X25, [X31 + 0x20]
	0x03AA0D40 LDP X28, X27, [X31 + 0x10]
	0x03AA0D44 STR W0, [X8 + 0x9C]
	0x03AA0D48 LDP X29, X30, [X31], #0x60
	0x03AA0D4C RET
	0x03AA0D50 STP X29, X30, [X31 - 0x60]!
	0x03AA0D54 STP X28, X27, [X31 + 0x10]
	0x03AA0D58 STP X26, X25, [X31 + 0x20]
	0x03AA0D5C STP X24, X23, [X31 + 0x30]
	0x03AA0D60 STP X22, X21, [X31 + 0x40]
	0x03AA0D64 STP X20, X19, [X31 + 0x50]
	0x03AA0D68 ADRP X21, 0x942000
	0x03AA0D6C ADRP X27, 0x654000
	0x03AA0D70 ADRP X26, 0x657000
	0x03AA0D74 ADRP X24, 0x6B7000
	0x03AA0D78 LDR X27, [X27 + 0xE30]
	0x03AA0D7C LDR X26, [X26 + 0xB70]
	0x03AA0D80 LDR X24, [X24 + 0x980]
	0x03AA0D84 LDRB W8, [X21 + 0x3FC]
	0x03AA0D88 MOV W20, W1
	0x03AA0D8C MOV X19, X0
	0x03AA0D90 TBNZ X8, 0x0, 0x3AA0F1C
	0x03AA0D94 ADRP X0, 0x6B6000
	0x03AA0D98 LDR X0, [X0 + 0x8C8]
	0x03AA0D9C BL 0x1C16CF4
	0x03AA0DA0 ADRP X0, 0x6B7000
	0x03AA0DA4 LDR X0, [X0 + 0x988]
	0x03AA0DA8 BL 0x1C16CF4
	0x03AA0DAC ADRP X0, 0x6B7000
	0x03AA0DB0 LDR X0, [X0 + 0x990]
	0x03AA0DB4 BL 0x1C16CF4
	0x03AA0DB8 ADRP X0, 0x6B7000
	0x03AA0DBC LDR X0, [X0 + 0x998]
	0x03AA0DC0 BL 0x1C16CF4
	0x03AA0DC4 ADRP X0, 0x654000
	0x03AA0DC8 LDR X0, [X0 + 0xE58]
	0x03AA0DCC BL 0x1C16CF4
	0x03AA0DD0 ADRP X0, 0x657000
	0x03AA0DD4 LDR X0, [X0 + 0xB70]
	0x03AA0DD8 BL 0x1C16CF4
	0x03AA0DDC ADRP X0, 0x6B7000
	0x03AA0DE0 LDR X0, [X0 + 0x9A0]
	0x03AA0DE4 BL 0x1C16CF4
	0x03AA0DE8 ADRP X0, 0x6B7000
	0x03AA0DEC LDR X0, [X0 + 0x980]
	0x03AA0DF0 BL 0x1C16CF4
	0x03AA0DF4 ADRP X0, 0x6B7000
	0x03AA0DF8 LDR X0, [X0 + 0x9A8]
	0x03AA0DFC BL 0x1C16CF4
	0x03AA0E00 ADRP X0, 0x6B7000
	0x03AA0E04 LDR X0, [X0 + 0x9B0]
	0x03AA0E08 BL 0x1C16CF4
	0x03AA0E0C ADRP X0, 0x654000
	0x03AA0E10 LDR X0, [X0 + 0xE30]
	0x03AA0E14 BL 0x1C16CF4
	0x03AA0E18 ADRP X0, 0x6B7000
	0x03AA0E1C LDR X0, [X0 + 0x9B8]
	0x03AA0E20 BL 0x1C16CF4
	0x03AA0E24 ADRP X0, 0x6B7000
	0x03AA0E28 LDR X0, [X0 + 0x9C0]
	0x03AA0E2C BL 0x1C16CF4
	0x03AA0E30 ADRP X0, 0x653000
	0x03AA0E34 LDR X0, [X0 + 0x5A8]
	0x03AA0E38 BL 0x1C16CF4
	0x03AA0E3C ADRP X0, 0x657000
	0x03AA0E40 LDR X0, [X0 + 0x988]
	0x03AA0E44 BL 0x1C16CF4
	0x03AA0E48 ADRP X0, 0x6B0000
	0x03AA0E4C LDR X0, [X0 + 0x598]
	0x03AA0E50 BL 0x1C16CF4
	0x03AA0E54 ADRP X0, 0x6B4000
	0x03AA0E58 LDR X0, [X0 + 0x10]
	0x03AA0E5C BL 0x1C16CF4
	0x03AA0E60 ADRP X0, 0x6B3000
	0x03AA0E64 LDR X0, [X0 + 0xFF0]
	0x03AA0E68 BL 0x1C16CF4
	0x03AA0E6C ADRP X0, 0x653000
	0x03AA0E70 LDR X0, [X0 + 0x638]
	0x03AA0E74 BL 0x1C16CF4
	0x03AA0E78 ADRP X0, 0x67C000
	0x03AA0E7C LDR X0, [X0 + 0x8A8]
	0x03AA0E80 BL 0x1C16CF4
	0x03AA0E84 ADRP X0, 0x6AE000
	0x03AA0E88 LDR X0, [X0 + 0x48]
	0x03AA0E8C BL 0x1C16CF4
	0x03AA0E90 ADRP X0, 0x6B7000
	0x03AA0E94 LDR X0, [X0 + 0x9C8]
	0x03AA0E98 BL 0x1C16CF4
	0x03AA0E9C ADRP X0, 0x6B7000
	0x03AA0EA0 LDR X0, [X0 + 0x9D0]
	0x03AA0EA4 BL 0x1C16CF4
	0x03AA0EA8 ADRP X0, 0x6B7000
	0x03AA0EAC LDR X0, [X0 + 0x9D8]
	0x03AA0EB0 BL 0x1C16CF4
	0x03AA0EB4 ADRP X0, 0x6B7000
	0x03AA0EB8 LDR X0, [X0 + 0x9E0]
	0x03AA0EBC BL 0x1C16CF4
	0x03AA0EC0 ADRP X0, 0x6B7000
	0x03AA0EC4 LDR X0, [X0 + 0x9E8]
	0x03AA0EC8 BL 0x1C16CF4
	0x03AA0ECC ADRP X0, 0x6B7000
	0x03AA0ED0 LDR X0, [X0 + 0x9F0]
	0x03AA0ED4 BL 0x1C16CF4
	0x03AA0ED8 ADRP X0, 0x6B7000
	0x03AA0EDC LDR X0, [X0 + 0x9F8]
	0x03AA0EE0 BL 0x1C16CF4
	0x03AA0EE4 ADRP X0, 0x6B7000
	0x03AA0EE8 LDR X0, [X0 + 0xA00]
	0x03AA0EEC BL 0x1C16CF4
	0x03AA0EF0 ADRP X0, 0x6B7000
	0x03AA0EF4 LDR X0, [X0 + 0xA08]
	0x03AA0EF8 BL 0x1C16CF4
	0x03AA0EFC ADRP X0, 0x6B7000
	0x03AA0F00 LDR X0, [X0 + 0xA10]
	0x03AA0F04 BL 0x1C16CF4
	0x03AA0F08 ADRP X0, 0x6B7000
	0x03AA0F0C LDR X0, [X0 + 0xA18]
	0x03AA0F10 BL 0x1C16CF4
	0x03AA0F14 MOVZ W8, 0x1
	0x03AA0F18 STRB W8, [X21 + 0x3FC]
	0x03AA0F1C ADRP X22, 0x6B7000
	0x03AA0F20 ADRP X28, 0x6B7000
	0x03AA0F24 ADRP X29, 0x6B7000
	0x03AA0F28 ADRP X25, 0x6B7000
	0x03AA0F2C LDR X22, [X22 + 0xA18]
	0x03AA0F30 LDR X28, [X28 + 0x9D0]
	0x03AA0F34 LDR X29, [X29 + 0x988]
	0x03AA0F38 LDR X25, [X25 + 0x9C8]
	0x03AA0F3C LDR X0, [X27]
	0x03AA0F40 ADRP X23, 0x6B6000
	0x03AA0F44 LDR X23, [X23 + 0x8C8]
	0x03AA0F48 BL 0x1C16F10
	0x03AA0F4C LDR X1, [X26]
	0x03AA0F50 MOV X21, X0
	0x03AA0F54 BL 0x2FDBF14
	0x03AA0F58 STR X21, [X19 + 0x120]
	0x03AA0F5C LDR X0, [X27]
	0x03AA0F60 BL 0x1C16F10
	0x03AA0F64 LDR X1, [X26]
	0x03AA0F68 MOV X21, X0
	0x03AA0F6C BL 0x2FDBF14
	0x03AA0F70 STR X21, [X19 + 0x128]
	0x03AA0F74 ADRP X8, 0x6B7000
	0x03AA0F78 LDR X8, [X8 + 0x9C0]
	0x03AA0F7C LDR X0, [X8]
	0x03AA0F80 BL 0x1C16F10
	0x03AA0F84 ADRP X8, 0x6B7000
	0x03AA0F88 LDR X8, [X8 + 0x9A0]
	0x03AA0F8C MOV X21, X0
	0x03AA0F90 LDR X1, [X8]
	0x03AA0F94 BL 0x30E7288
	0x03AA0F98 STR X21, [X19 + 0x140]
	0x03AA0F9C ADRP X8, 0x6B7000
	0x03AA0FA0 LDR X8, [X8 + 0x9B8]
	0x03AA0FA4 LDR X0, [X8]
	0x03AA0FA8 BL 0x1C16F10
	0x03AA0FAC LDR X1, [X24]
	0x03AA0FB0 MOV X21, X0
	0x03AA0FB4 BL 0x303B4A4
	0x03AA0FB8 STR X21, [X19 + 0x160]
	0x03AA0FBC ADRP X24, 0x6B0000
	0x03AA0FC0 LDR X24, [X24 + 0x598]
	0x03AA0FC4 LDR X0, [X24]
	0x03AA0FC8 BL 0x1C16F10
	0x03AA0FCC ADRP X8, 0x6B7000
	0x03AA0FD0 LDR X8, [X8 + 0xA10]
	0x03AA0FD4 MOV X2, X31
	0x03AA0FD8 MOV X21, X0
	0x03AA0FDC LDR X1, [X8]
	0x03AA0FE0 BL 0x39B19AC
	0x03AA0FE4 STR X21, [X19 + 0x170]
	0x03AA0FE8 ADRP X8, 0x6B7000
	0x03AA0FEC LDR X8, [X8 + 0x998]
	0x03AA0FF0 LDR X0, [X8]
	0x03AA0FF4 BL 0x1C16F10
	0x03AA0FF8 ADRP X8, 0x6B7000
	0x03AA0FFC LDR X8, [X8 + 0x990]
	0x03AA1000 MOV X21, X0
	0x03AA1004 LDR X1, [X8]
	0x03AA1008 BL 0x2A223E8
	0x03AA100C STR X21, [X19 + 0x178]
	0x03AA1010 ADRP X8, 0x6B2000
	0x03AA1014 LDR X8, [X8 + 0xFF0]
	0x03AA1018 LDR X0, [X8]
	0x03AA101C LDR W8, [X0 + 0xE0]
	0x03AA1020 CBNZ W8, 0x3AA1028
	0x03AA1024 BL 0x1C16DFC
	0x03AA1028 ADRP X27, 0x6B6000
	0x03AA102C ADRP X26, 0x6B3000
	0x03AA1030 LDR X27, [X27 + 0x9F0]
	0x03AA1034 LDR X26, [X26 + 0x10]
	0x03AA1038 MOV X0, X19
	0x03AA103C MOV X1, X31
	0x03AA1040 BL 0x3A4225C
	0x03AA1044 LDR X0, [X24]
	0x03AA1048 BL 0x1C16F10
	0x03AA104C LDR X1, [X22]
	0x03AA1050 MOV X2, X31
	0x03AA1054 MOV X21, X0
	0x03AA1058 BL 0x39B19AC
	0x03AA105C STR X21, [X19 + 0x38]
	0x03AA1060 STR W20, [X19 + 0x10]
	0x03AA1064 LDR X0, [X28]
	0x03AA1068 MOV X1, X31
	0x03AA106C BL 0x3C124EC
	0x03AA1070 LDR X8, [X29]
	0x03AA1074 MOV X1, X31
	0x03AA1078 LDR X8, [X8 + 0xB8]
	0x03AA107C STR W0, [X8]
	0x03AA1080 LDR X0, [X25]
	0x03AA1084 BL 0x3C124EC
	0x03AA1088 LDR X8, [X29]
	0x03AA108C MOV X1, X31
	0x03AA1090 LDR X8, [X8 + 0xB8]
	0x03AA1094 STR W0, [X8 + 0x4]
	0x03AA1098 ADRP X8, 0x6B6000
	0x03AA109C LDR X8, [X8 + 0xA00]
	0x03AA10A0 LDR X0, [X8]
	0x03AA10A4 BL 0x3C124EC
	0x03AA10A8 LDR X8, [X29]
	0x03AA10AC MOV X1, X31
	0x03AA10B0 LDR X8, [X8 + 0xB8]
	0x03AA10B4 STR W0, [X8 + 0x8]
	0x03AA10B8 ADRP X8, 0x6B6000
	0x03AA10BC LDR X8, [X8 + 0x9E8]
	0x03AA10C0 LDR X0, [X8]
	0x03AA10C4 BL 0x3C124EC
	0x03AA10C8 LDR X8, [X29]
	0x03AA10CC MOV X1, X31
	0x03AA10D0 LDR X8, [X8 + 0xB8]
	0x03AA10D4 STR W0, [X8 + 0xC]
	0x03AA10D8 ADRP X8, 0x6B6000
	0x03AA10DC LDR X8, [X8 + 0x9F8]
	0x03AA10E0 LDR X0, [X8]
	0x03AA10E4 BL 0x3C124EC
	0x03AA10E8 LDR X8, [X29]
	0x03AA10EC MOV X1, X31
	0x03AA10F0 LDR X8, [X8 + 0xB8]
	0x03AA10F4 STR W0, [X8 + 0x10]
	0x03AA10F8 ADRP X8, 0x6B6000
	0x03AA10FC LDR X8, [X8 + 0x9D8]
	0x03AA1100 LDR X0, [X8]
	0x03AA1104 BL 0x3C124EC
	0x03AA1108 LDR X8, [X29]
	0x03AA110C MOV X1, X31
	0x03AA1110 LDR X8, [X8 + 0xB8]
	0x03AA1114 STR W0, [X8 + 0x14]
	0x03AA1118 ADRP X8, 0x6B6000
	0x03AA111C LDR X8, [X8 + 0xA08]
	0x03AA1120 LDR X0, [X8]
	0x03AA1124 BL 0x3C124EC
	0x03AA1128 STR W0, [X19 + 0xE4]
	0x03AA112C ADRP X8, 0x6B6000
	0x03AA1130 LDR X8, [X8 + 0x9E0]
	0x03AA1134 MOV X1, X31
	0x03AA1138 LDR X0, [X8]
	0x03AA113C BL 0x3C124EC
	0x03AA1140 LDR X8, [X23]
	0x03AA1144 MOV W20, W0
	0x03AA1148 LDR W9, [X8 + 0xE0]
	0x03AA114C CBNZ W9, 0x3AA115C
	0x03AA1150 MOV X0, X8
	0x03AA1154 BL 0x1C16DFC
	0x03AA1158 LDR X8, [X23]
	0x03AA115C LDR X8, [X8 + 0xB8]
	0x03AA1160 MOV X1, X31
	0x03AA1164 STR W20, [X8 + 0x18]
	0x03AA1168 LDR X0, [X27]
	0x03AA116C ADRP X20, 0x67B000
	0x03AA1170 LDR X20, [X20 + 0x8A8]
	0x03AA1174 BL 0x3C124EC
	0x03AA1178 LDR X8, [X23]
	0x03AA117C LDR X8, [X8 + 0xB8]
	0x03AA1180 STR W0, [X8 + 0x1C]
	0x03AA1184 LDR X0, [X26]
	0x03AA1188 LDR W8, [X0 + 0xE0]
	0x03AA118C CBNZ W8, 0x3AA1194
	0x03AA1190 BL 0x1C16DFC
	0x03AA1194 MOV X0, X31
	0x03AA1198 BL 0x3A70480
	0x03AA119C AND W8, W0, 0x1
	0x03AA11A0 STRB W8, [X19 + 0xE0]
	0x03AA11A4 LDR X0, [X20]
	0x03AA11A8 LDR W8, [X0 + 0xE0]
	0x03AA11AC CBNZ W8, 0x3AA11B4
	0x03AA11B0 BL 0x1C16DFC
	0x03AA11B4 ADRP X26, 0x653000
	0x03AA11B8 ADRP X24, 0x6AD000
	0x03AA11BC ADRP X25, 0x652000
	0x03AA11C0 LDR X26, [X26 + 0xE58]
	0x03AA11C4 LDR X24, [X24 + 0x48]
	0x03AA11C8 LDR X25, [X25 + 0x638]
	0x03AA11CC MOV X0, X31
	0x03AA11D0 BL 0x3A89318
	0x03AA11D4 LDRB W8, [X19 + 0xE0]
	0x03AA11D8 ADD W21, W0, 0x1
	0x03AA11DC MOV W20, W0
	0x03AA11E0 MOV W22, W21
	0x03AA11E4 CBNZ W8, 0x3AA1214
	0x03AA11E8 ADRP X8, 0x652000
	0x03AA11EC LDR X8, [X8 + 0x5A8]
	0x03AA11F0 LDR X0, [X8]
	0x03AA11F4 LDR W8, [X0 + 0xE0]
	0x03AA11F8 CBNZ W8, 0x3AA1200
	0x03AA11FC BL 0x1C16DFC
	0x03AA1200 MOV W0, W21
	0x03AA1204 MOV W1, W20
	0x03AA1208 MOV X2, X31
	0x03AA120C BL 0x337EE94
	0x03AA1210 MOV W22, W0
	0x03AA1214 LDR X0, [X26]
	0x03AA1218 MOV W1, W22

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, 0x943000
	006 Move X20, 0x656000
	007 Move W8, [X19+1016]
	008 Move X20, [X20+2480]
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {27}
	013 Move X0, 0x655000
	014 Move X0, [X0+3672]
	015 Call 0x1C17CF4
	016 Move X0, 0x65B000
	017 Move X0, [X0+1792]
	018 Call 0x1C17CF4
	019 Move X0, 0x6B8000
	020 Move X0, [X0+1960]
	021 Call 0x1C17CF4
	022 Move X0, 0x656000
	023 Move X0, [X0+2480]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X19+1016], W8
	027 Move X0, [X20]
	028 Move W1, 42
	029 Call 0x1C17D6C
	030 Compare X0, 0
	031 JumpIfEqual {332}
	032 Move W8, [X0+24]
	033 Move X19, X0
	034 Compare W8, 0
	035 JumpIfEqual {331}
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Move [X19+32], X31
	038 Move [X19+40], W31
	039 Move X9, -50012160
	040 Move V0, [X9+1608]
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Move [X19+52], W31
	043 Move [X19+44], D0
	044 Move X9, -50012160
	045 Move V0, [X9+3344]
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Move [X19+64], W31
	048 Move [X19+56], D0
	049 Move W9, 1271
	050 NotImplemented "Instruction MOVK not yet implemented."
	051 NotImplemented "Instruction CMP not yet implemented."
	052 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	053 Move [X19+68], D0
	054 Move [X19+76], W31
	055 Move X9, -50012160
	056 Move V0, [X9+3352]
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Move [X19+88], W31
	059 Move [X19+80], D0
	060 Move X9, -50012160
	061 Move V0, [X9+2392]
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Move [X19+100], W31
	064 Move [X19+92], D0
	065 Move X9, -50012160
	066 Move V0, [X9+3360]
	067 NotImplemented "Instruction CMP not yet implemented."
	068 Move [X19+112], W31
	069 Move [X19+104], D0
	070 Move X9, -50012160
	071 Move V0, [X9+3192]
	072 NotImplemented "Instruction CMP not yet implemented."
	073 Move [X19+124], W31
	074 Move [X19+116], D0
	075 Move X9, -50012160
	076 Move V0, [X9+1064]
	077 NotImplemented "Instruction CMP not yet implemented."
	078 Move [X19+136], W31
	079 Move [X19+128], D0
	080 Move X9, -50008064
	081 Move V0, [X9+104]
	082 NotImplemented "Instruction CMP not yet implemented."
	083 Move [X19+148], W31
	084 Move [X19+140], D0
	085 Move X9, -50012160
	086 Move V0, [X9+3600]
	087 NotImplemented "Instruction CMP not yet implemented."
	088 Move [X19+160], W31
	089 Move [X19+152], D0
	090 Move W9, 1271
	091 NotImplemented "Instruction MOVK not yet implemented."
	092 NotImplemented "Instruction CMP not yet implemented."
	093 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	094 Move [X19+164], D0
	095 Move [X19+172], W31
	096 Move X9, -50008064
	097 Move V0, [X9+112]
	098 NotImplemented "Instruction CMP not yet implemented."
	099 Move [X19+184], W31
	100 Move [X19+176], D0
	101 Move X9, -50008064
	102 Move V0, [X9+632]
	103 NotImplemented "Instruction CMP not yet implemented."
	104 Move [X19+196], W31
	105 Move [X19+188], D0
	106 Move X9, -50012160
	107 Move V0, [X9+1072]
	108 NotImplemented "Instruction CMP not yet implemented."
	109 Move [X19+208], W31
	110 Move [X19+200], D0
	111 Move X9, -50008064
	112 Move V0, [X9+120]
	113 NotImplemented "Instruction CMP not yet implemented."
	114 Move [X19+220], W31
	115 Move [X19+212], D0
	116 Move X9, -50012160
	117 Move V0, [X9+1336]
	118 NotImplemented "Instruction CMP not yet implemented."
	119 Move [X19+232], W31
	120 Move [X19+224], D0
	121 Move W9, 0x3F800000
	122 NotImplemented "Instruction CMP not yet implemented."
	123 Move [X19+236], W31
	124 Move [X19+240], W31
	125 Move [X19+244], W9
	126 Move X9, -50012160
	127 Move V0, [X9+1568]
	128 Move W9, 1271
	129 NotImplemented "Instruction MOVK not yet implemented."
	130 NotImplemented "Instruction CMP not yet implemented."
	131 Move [X19+248], D0
	132 Move [X19+256], W9
	133 Move X10, -50012160
	134 Move V0, [X10+1080]
	135 Add X10, X19, 260
	136 NotImplemented "Instruction CMP not yet implemented."
	137 Move [X10], D0
	138 Move [X19+268], W9
	139 Move X9, -50012160
	140 Move V0, [X9+3040]
	141 Move W9, 1271
	142 NotImplemented "Instruction MOVK not yet implemented."
	143 NotImplemented "Instruction CMP not yet implemented."
	144 Move [X19+272], D0
	145 Move [X19+280], W9
	146 Move X10, -50012160
	147 Move V0, [X10+3864]
	148 Add X10, X19, 284
	149 NotImplemented "Instruction CMP not yet implemented."
	150 Move [X10+8], W9
	151 Move [X10], D0
	152 Move X9, -50012160
	153 Move V0, [X9+2024]
	154 Move W9, 1506
	155 NotImplemented "Instruction MOVK not yet implemented."
	156 NotImplemented "Instruction CMP not yet implemented."
	157 Move [X19+296], D0
	158 Move [X19+304], W9
	159 Move X9, -50012160
	160 Move V0, [X9+3048]
	161 Move W10, 1523
	162 Add X9, X19, 308
	163 NotImplemented "Instruction MOVK not yet implemented."
	164 NotImplemented "Instruction CMP not yet implemented."
	165 Move [X9], D0
	166 Move [X9+8], W10
	167 Move X9, -50012160
	168 Move V0, [X9+1168]
	169 Move W9, 1506
	170 NotImplemented "Instruction MOVK not yet implemented."
	171 NotImplemented "Instruction CMP not yet implemented."
	172 Move [X19+320], D0
	173 Move [X19+328], W9
	174 Move X10, -50008064
	175 Move V0, [X10+832]
	176 Add X10, X19, 332
	177 NotImplemented "Instruction CMP not yet implemented."
	178 Move [X10+8], W9
	179 Move [X10], D0
	180 Move W9, 1506
	181 NotImplemented "Instruction MOVK not yet implemented."
	182 Move W10, 1523
	183 NotImplemented "Instruction MOVK not yet implemented."
	184 NotImplemented "Instruction CMP not yet implemented."
	185 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	186 Move [X19+344], D0
	187 Move [X19+352], W10
	188 Move X10, -50012160
	189 Move V0, [X10+3200]
	190 Add X10, X19, 356
	191 NotImplemented "Instruction CMP not yet implemented."
	192 Move [X10+8], W9
	193 Move [X10], D0
	194 Move X9, -50012160
	195 Move V0, [X9+1688]
	196 Move W9, 1506
	197 NotImplemented "Instruction MOVK not yet implemented."
	198 NotImplemented "Instruction CMP not yet implemented."
	199 Move [X19+368], D0
	200 Move [X19+376], W9
	201 Move X9, -50012160
	202 Move V0, [X9+2400]
	203 Move W10, 1523
	204 Add X9, X19, 380
	205 NotImplemented "Instruction MOVK not yet implemented."
	206 NotImplemented "Instruction CMP not yet implemented."
	207 Move [X9], D0
	208 Move [X9+8], W10
	209 Move X9, -50012160
	210 Move V0, [X9+1240]
	211 Move W9, 1506
	212 NotImplemented "Instruction MOVK not yet implemented."
	213 NotImplemented "Instruction CMP not yet implemented."
	214 Move [X19+392], D0
	215 Move [X19+400], W9
	216 Move X10, -50016256
	217 Move V0, [X10+2408]
	218 Add X10, X19, 404
	219 NotImplemented "Instruction CMP not yet implemented."
	220 Move [X10+8], W9
	221 Move [X10], D0
	222 Move W9, 1506
	223 NotImplemented "Instruction MOVK not yet implemented."
	224 Move W10, 1523
	225 NotImplemented "Instruction MOVK not yet implemented."
	226 NotImplemented "Instruction CMP not yet implemented."
	227 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	228 Move [X19+416], D0
	229 Move [X19+424], W10
	230 Move X9, -50012160
	231 Move V0, [X9+400]
	232 Move W10, 1506
	233 Add X9, X19, 428
	234 NotImplemented "Instruction MOVK not yet implemented."
	235 NotImplemented "Instruction CMP not yet implemented."
	236 Move [X9], D0
	237 Move [X9+8], W10
	238 Move X9, -50016256
	239 Move V0, [X9+3872]
	240 Move W9, 0xEF07
	241 NotImplemented "Instruction MOVK not yet implemented."
	242 NotImplemented "Instruction CMP not yet implemented."
	243 Move [X19+440], D0
	244 Move [X19+448], W9
	245 Move X10, -50012160
	246 Move V0, [X10+1384]
	247 Add X10, X19, 452
	248 NotImplemented "Instruction CMP not yet implemented."
	249 Move [X10+8], W9
	250 Move [X10], D0
	251 Move X9, -50012160
	252 Move V0, [X9+1392]
	253 Move W9, 0x8366
	254 NotImplemented "Instruction MOVK not yet implemented."
	255 NotImplemented "Instruction CMP not yet implemented."
	256 Move [X19+464], D0
	257 Move [X19+472], W9
	258 Move X10, -50012160
	259 Move V0, [X10+1400]
	260 Add X10, X19, 476
	261 NotImplemented "Instruction CMP not yet implemented."
	262 Move [X10+8], W9
	263 Move [X10], D0
	264 Move X9, -50012160
	265 Move V0, [X9+1408]
	266 Move W9, 0xEF07
	267 NotImplemented "Instruction MOVK not yet implemented."
	268 NotImplemented "Instruction CMP not yet implemented."
	269 Move [X19+488], D0
	270 Move [X19+496], W9
	271 Move X9, -50012160
	272 Move V0, [X9+1416]
	273 Move W10, 0x8366
	274 Add X9, X19, 500
	275 NotImplemented "Instruction MOVK not yet implemented."
	276 NotImplemented "Instruction CMP not yet implemented."
	277 Move [X9], D0
	278 Move [X9+8], W10
	279 Move X9, -50016256
	280 Move V0, [X9+3056]
	281 Move W9, 0xEF07
	282 NotImplemented "Instruction MOVK not yet implemented."
	283 NotImplemented "Instruction CMP not yet implemented."
	284 Move [X19+512], D0
	285 Move [X19+520], W9
	286 Move X8, -50016256
	287 Move V0, [X8+2416]
	288 Move X8, 0x654000
	289 Move X8, [X8+3672]
	290 Move W10, 0x8366
	291 Add X9, X19, 524
	292 NotImplemented "Instruction MOVK not yet implemented."
	293 Move [X9], D0
	294 Move [X9+8], W10
	295 Move X0, [X8]
	296 Move X20, 0x6B7000
	297 Move X21, 0x65A000
	298 Move X20, [X20+1960]
	299 Move X21, [X21+1792]
	300 Move W1, 240
	301 Call 0x1C17D6C
	302 Move X1, [X20]
	303 Move X2, X31
	304 Move X20, X0
	305 Call RuntimeHelpers.InitializeArray, X0, X1
	306 Move X0, [X21]
	307 Call 0x1C17F10
	308 Move X1, X31
	309 Move X21, X0
	310 Call Mesh..ctor, X0
	311 Compare X21, 0
	312 JumpIfEqual {332}
	313 Move X0, X21
	314 Move W1, W31
	315 Move X2, X31
	316 Call Mesh.set_indexFormat, X0, X1
	317 Move X0, X21
	318 Move X1, X19
	319 Move X2, X31
	320 Call Mesh.set_vertices, X0, X1
	321 Move X0, X21
	322 Move X1, X20
	323 Move X2, X31
	324 Call Mesh.set_triangles, X0, X1
	325 Move X20, [X31+16]
	326 Move X19, [X31+24]
	327 Move X0, X21
	328 Move X30, [X31+32]
	329 Move X21, [X31+40]
	330 Return X0
	331 Call 0x1C17F28
	332 Call 0x1C17F20

Method: UnityEngine.Mesh CreateFullscreenMesh()

Disassembly:
	0x03A9E114 LDR X0, [X0 + 0x148]
	0x03A9E118 BL 0x1C16CF4
	0x03A9E11C ADRP X0, 0x6B8000
	0x03A9E120 LDR X0, [X0 + 0x1B8]
	0x03A9E124 BL 0x1C16CF4
	0x03A9E128 ADRP X0, 0x655000
	0x03A9E12C LDR X0, [X0 + 0x598]
	0x03A9E130 BL 0x1C16CF4
	0x03A9E134 ADRP X0, 0x6B9000
	0x03A9E138 LDR X0, [X0 + 0x748]
	0x03A9E13C BL 0x1C16CF4
	0x03A9E140 ADRP X0, 0x6B8000
	0x03A9E144 LDR X0, [X0 + 0xEC0]
	0x03A9E148 BL 0x1C16CF4
	0x03A9E14C ADRP X0, 0x67E000
	0x03A9E150 LDR X0, [X0 + 0x8A8]
	0x03A9E154 BL 0x1C16CF4
	0x03A9E158 ADRP X0, 0x6B9000
	0x03A9E15C LDR X0, [X0 + 0x778]
	0x03A9E160 BL 0x1C16CF4
	0x03A9E164 ADRP X0, 0x6B9000
	0x03A9E168 LDR X0, [X0 + 0x780]
	0x03A9E16C BL 0x1C16CF4
	0x03A9E170 ADRP X0, 0x6B9000
	0x03A9E174 LDR X0, [X0 + 0x788]
	0x03A9E178 BL 0x1C16CF4
	0x03A9E17C MOVZ W8, 0x1
	0x03A9E180 STRB W8, [X20 + 0x3F1]
	0x03A9E184 STP X31, X31, [X31 + 0x188]
	0x03A9E188 STP X31, X31, [X31 + 0x178]
	0x03A9E18C STP X31, X31, [X31 + 0x168]
	0x03A9E190 ADRP X8, 0x655000
	0x03A9E194 LDR X8, [X8 + 0x598]
	0x03A9E198 STP X31, X31, [X31 + 0x158]
	0x03A9E19C STP X31, X31, [X31 + 0x148]
	0x03A9E1A0 STR X23, [X31 + 0x38]
	0x03A9E1A4 LDR X0, [X8]
	0x03A9E1A8 LDR X23, [X23 + 0xB0]
	0x03A9E1AC LDR W8, [X0 + 0xE0]
	0x03A9E1B0 CBNZ W8, 0x3A9E1B8
	0x03A9E1B4 BL 0x1C16DFC
	0x03A9E1B8 MOV X0, X23
	0x03A9E1BC MOV X1, X31
	0x03A9E1C0 MOV X2, X31
	0x03A9E1C4 BL 0x3C3883C
	0x03A9E1C8 LDR X27, [X31 + 0x20]
	0x03A9E1CC LDR X20, [X31 + 0x38]
	0x03A9E1D0 TBZ X0, 0x0, 0x3A9E1F4
	0x03A9E1D4 ADRP X8, 0x6B9000
	0x03A9E1D8 LDR X8, [X8 + 0x148]
	0x03A9E1DC LDR X0, [X8]
	0x03A9E1E0 LDR W8, [X0 + 0xE0]
	0x03A9E1E4 CBNZ W8, 0x3A9E1EC
	0x03A9E1E8 BL 0x1C16DFC
	0x03A9E1EC BL 0x3A9D114
	0x03A9E1F0 STR X0, [X20 + 0xB0]
	0x03A9E1F4 STR X21, [X31 + 0x28]
	0x03A9E1F8 CBZ X19, 0x3A9E6F0
	0x03A9E1FC ADRP X8, 0x6B9000
	0x03A9E200 LDR X8, [X8 + 0x788]
	0x03A9E204 MOV X0, X19
	0x03A9E208 MOV X2, X31
	0x03A9E20C LDR X1, [X8]
	0x03A9E210 BL 0x3C4D0E0
	0x03A9E214 LDR X8, [X20 + 0x88]
	0x03A9E218 LDRH W25, [X8 + 0x2]
	0x03A9E21C LDR W8, [X20 + 0x80]
	0x03A9E220 CMP W8, W25
	0x03A9E224 B.LE 0x3A9E6B8
	0x03A9E228 MOV X23, X20
	0x03A9E22C ADRP X20, 0x6B9000
	0x03A9E230 LDR X20, [X20 + 0x748]
	0x03A9E234 MOVZ W21, 0x1
	0x03A9E238 STR W29, [X31 + 0x1C]
	0x03A9E23C LDR X8, [X23 + 0x78]
	0x03A9E240 MOV X0, X22
	0x03A9E244 MOV X1, X27
	0x03A9E248 LDRH W26, [X8, X25, LSL #1]
	0x03A9E24C ADRP X8, 0x6B8000
	0x03A9E250 LDR X8, [X8 + 0x1B8]
	0x03A9E254 MOV W2, W26
	0x03A9E258 LDR X3, [X8]
	0x03A9E25C BL 0x22222C0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, 0x945000
	006 Move X20, 0x658000
	007 Move W8, [X19+1017]
	008 Move X20, [X20+2480]
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {24}
	013 Move X0, 0x657000
	014 Move X0, [X0+3672]
	015 Call 0x1C17CF4
	016 Move X0, 0x65D000
	017 Move X0, [X0+1792]
	018 Call 0x1C17CF4
	019 Move X0, 0x658000
	020 Move X0, [X0+2480]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X19+1017], W8
	024 Move X0, [X20]
	025 Move W1, 3
	026 Call 0x1C17D6C
	027 Compare X0, 0
	028 JumpIfEqual {90}
	029 Move W8, [X0+24]
	030 Move X19, X0
	031 Compare W8, 0
	032 JumpIfEqual {89}
	033 Move X9, -50003968
	034 Move V0, [X9+2880]
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Move [X19+40], W31
	037 Move [X19+32], D0
	038 Move X9, -49999872
	039 Move V0, [X9+1352]
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Move [X19+52], W31
	042 Move [X19+44], D0
	043 Move X8, -50003968
	044 Move V0, [X8+2008]
	045 Move X8, 0x657000
	046 Move X8, [X8+3672]
	047 Move [X19+64], W31
	048 Move [X19+56], D0
	049 Move W1, 3
	050 Move X0, [X8]
	051 Call 0x1C17D6C
	052 Compare X0, 0
	053 JumpIfEqual {90}
	054 Move W8, [X0+24]
	055 Move X20, X0
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Move W9, 1
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Move [X20+36], W9
	060 Move X8, 0x65D000
	061 Move X8, [X8+1792]
	062 Move W9, 2
	063 Move [X20+40], W9
	064 Move X0, [X8]
	065 Call 0x1C17F10
	066 Move X1, X31
	067 Move X21, X0
	068 Call Mesh..ctor, X0
	069 Compare X21, 0
	070 JumpIfEqual {90}
	071 Move X0, X21
	072 Move W1, W31
	073 Move X2, X31
	074 Call Mesh.set_indexFormat, X0, X1
	075 Move X0, X21
	076 Move X1, X19
	077 Move X2, X31
	078 Call Mesh.set_vertices, X0, X1
	079 Move X0, X21
	080 Move X1, X20
	081 Move X2, X31
	082 Call Mesh.set_triangles, X0, X1
	083 Move X20, [X31+16]
	084 Move X19, [X31+24]
	085 Move X0, X21
	086 Move X30, [X31+32]
	087 Move X21, [X31+40]
	088 Return X0
	089 Call 0x1C17F28
	090 Call 0x1C17F20

Method: System.Void .cctor()

Disassembly:
	0x03AA121C BL 0x1C16D6C
	0x03AA1220 STR X0, [X19 + 0x118]
	0x03AA1224 LDR X0, [X26]
	0x03AA1228 MOV W1, W21
	0x03AA122C BL 0x1C16D6C
	0x03AA1230 STR X0, [X19 + 0x110]
	0x03AA1234 LDR X0, [X26]
	0x03AA1238 MOV W1, W21
	0x03AA123C BL 0x1C16D6C
	0x03AA1240 STR X0, [X19 + 0x158]
	0x03AA1244 LDR X0, [X24]
	0x03AA1248 MOV W1, W22
	0x03AA124C BL 0x1C16D6C
	0x03AA1250 STR X0, [X19 + 0x130]
	0x03AA1254 LDR X0, [X25]
	0x03AA1258 MOV W1, W21
	0x03AA125C BL 0x1C16D6C
	0x03AA1260 STR X0, [X19 + 0x148]
	0x03AA1264 LDR X0, [X24]
	0x03AA1268 MOV W1, W22
	0x03AA126C BL 0x1C16D6C
	0x03AA1270 LDR X8, [X23]
	0x03AA1274 MOV X21, X0
	0x03AA1278 LDR W9, [X8 + 0xE0]
	0x03AA127C CBNZ W9, 0x3AA128C
	0x03AA1280 MOV X0, X8
	0x03AA1284 BL 0x1C16DFC
	0x03AA1288 LDR X8, [X23]
	0x03AA128C LDR X9, [X8 + 0xB8]
	0x03AA1290 MOV X22, X31
	0x03AA1294 STR X21, [X9 + 0x20]
	0x03AA1298 LDR W9, [X8 + 0xE0]
	0x03AA129C CBNZ W9, 0x3AA12AC
	0x03AA12A0 MOV X0, X8
	0x03AA12A4 BL 0x1C16DFC
	0x03AA12A8 LDR X8, [X23]
	0x03AA12AC LDR X9, [X8 + 0xB8]
	0x03AA12B0 LDR X10, [X9 + 0x20]
	0x03AA12B4 CBZ X10, 0x3AA1398
	0x03AA12B8 LDRSW X11, [X10 + 0x18]
	0x03AA12BC CMP X22, X11
	0x03AA12C0 B.GE 0x3AA1308
	0x03AA12C4 LDR W11, [X8 + 0xE0]
	0x03AA12C8 CBNZ W11, 0x3AA12E0
	0x03AA12CC MOV X0, X8
	0x03AA12D0 BL 0x1C16DFC
	0x03AA12D4 LDR X8, [X23]
	0x03AA12D8 LDR X9, [X8 + 0xB8]
	0x03AA12DC LDR X10, [X9 + 0x20]
	0x03AA12E0 CBZ X10, 0x3AA1398
	0x03AA12E4 LDR W8, [X10 + 0x18]
	0x03AA12E8 CMP X22, X8
	0x03AA12EC B.CS 0x3AA139C
	0x03AA12F0 LDUR V0, [X9 + 0x8]
	0x03AA12F4 ADD X8, X10, X22, 0x4, LSL
	0x03AA12F8 ADD X22, X22, 0x1
	0x03AA12FC STR V0, [X8 + 0x2]
	0x03AA1300 LDR X8, [X23]
	0x03AA1304 B 0x3AA1298
	0x03AA1308 LDRB W8, [X19 + 0xE0]
	0x03AA130C CBZ W8, 0x3AA132C
	0x03AA1310 LDP X20, X19, [X31 + 0x50]
	0x03AA1314 LDP X22, X21, [X31 + 0x40]
	0x03AA1318 LDP X24, X23, [X31 + 0x30]
	0x03AA131C LDP X26, X25, [X31 + 0x20]
	0x03AA1320 LDP X28, X27, [X31 + 0x10]
	0x03AA1324 LDP X29, X30, [X31], #0x60
	0x03AA1328 RET
	0x03AA132C ADRP X8, 0x656000
	0x03AA1330 LDR X8, [X8 + 0x988]
	0x03AA1334 MOV W1, W20
	0x03AA1338 LDR X0, [X8]
	0x03AA133C BL 0x1C16D6C
	0x03AA1340 LDR X8, [X19 + 0x160]
	0x03AA1344 STR X0, [X19 + 0x138]
	0x03AA1348 CBZ X8, 0x3AA1398
	0x03AA134C ADRP X9, 0x6B6000
	0x03AA1350 LDR X9, [X9 + 0x9B0]
	0x03AA1354 MOV X0, X8
	0x03AA1358 MOV W1, W20
	0x03AA135C LDR X2, [X9]
	0x03AA1360 BL 0x303B828
	0x03AA1364 LDR X0, [X19 + 0x140]
	0x03AA1368 CBZ X0, 0x3AA1398
	0x03AA136C ADRP X8, 0x6B6000
	0x03AA1370 LDR X8, [X8 + 0x9A8]
	0x03AA1374 MOV W1, W20
	0x03AA1378 LDP X20, X19, [X31 + 0x50]
	0x03AA137C LDP X22, X21, [X31 + 0x40]
	0x03AA1380 LDR X2, [X8]
	0x03AA1384 LDP X24, X23, [X31 + 0x30]
	0x03AA1388 LDP X26, X25, [X31 + 0x20]
	0x03AA138C LDP X28, X27, [X31 + 0x10]
	0x03AA1390 LDP X29, X30, [X31], #0x60
	0x03AA1394 B 0x30E760C
	0x03AA1398 BL 0x1C16F20
	0x03AA139C BL 0x1C16F28
	0x03AA13A0 LDR X0, [X0 + 0xE8]
	0x03AA13A4 CBZ X0, 0x3AA13B0
	0x03AA13A8 MOV X1, X31
	0x03AA13AC B 0x39D4B1C
	0x03AA13B0 RET
	0x03AA13B4 LDR W8, [X1]
	0x03AA13B8 CBZ W8, 0x3AA13CC
	0x03AA13BC CMP W8, 0x2
	0x03AA13C0 MOVZ W8, 0x6
	0x03AA13C4 CSEL W0, W8, W31, EQ
	0x03AA13C8 RET
	0x03AA13CC MOVZ W0, 0x1
	0x03AA13D0 RET
	0x03AA13D4 STP D11, D10, [X31 - 0x30]!
	0x03AA13D8 STP D9, D8, [X31 + 0x10]
	0x03AA13DC STR X30, [X31 + 0x20]
	0x03AA13E0 ADRP X8, 0xFFFFFFFFFD049000
	0x03AA13E4 MOV V9.16B, V1.16B
	0x03AA13E8 LDR V1, [X8 + 0x104]
	0x03AA13EC FMOV S11, 0.5
	0x03AA13F0 MOV V8.16B, V2.16B
	0x03AA13F4 FMUL S0, S0, S1
	0x03AA13F8 FMUL S10, S0, S11
	0x03AA13FC MOV V0.16B, V10.16B
	0x03AA1400 BL 0x3EB1E50
	0x03AA1404 FMUL S1, S8, S11
	0x03AA1408 FMUL S2, S9, S11
	0x03AA140C FDIV S1, S2, S1
	0x03AA1410 FMOV S2, 1
	0x03AA1414 FADD S1, S1, S2
	0x03AA1418 FMUL S0, S1, S0
	0x03AA141C BL 0x3EB1BE0
	0x03AA1420 ADRP X8, 0xFFFFFFFFFD049000
	0x03AA1424 LDR V1, [X8 + 0x448]
	0x03AA1428 LDR X30, [X31 + 0x20]
	0x03AA142C LDP D9, D8, [X31 + 0x10]
	0x03AA1430 FSUB S0, S0, S10
	0x03AA1434 FADD S0, S0, S0
	0x03AA1438 FMUL S0, S0, S1
	0x03AA143C LDP D11, D10, [X31], #0x30
	0x03AA1440 RET
	0x03AA1444 ANDS W31, W1, 0x1
	0x03AA1448 MOVZ W8, 0x8
	0x03AA144C MOVZ W9, 0x10
	0x03AA1450 CSEL W0, W9, W8, NE
	0x03AA1454 RET
	0x03AA1458 CMP W0, 0x9
	0x03AA145C FMOV S0, 4
	0x03AA1460 B.GE 0x3AA1468
	0x03AA1464 RET
	0x03AA1468 CMP W0, 0x11
	0x03AA146C B.LT 0x3AA14B4
	0x03AA1470 CMP W0, 0x21
	0x03AA1474 B.LT 0x3AA14C0
	0x03AA1478 CMP W0, 0x41
	0x03AA147C B.LT 0x3AA14D0
	0x03AA1480 CMP W0, 0x81
	0x03AA1484 B.LT 0x3AA14E0
	0x03AA1488 CMP W0, 0x101
	0x03AA148C B.LT 0x3AA1544
	0x03AA1490 CMP W0, 0x201
	0x03AA1494 FMOV S0, 1
	0x03AA1498 B.LT 0x3AA14E8
	0x03AA149C CMP W0, 0x400
	0x03AA14A0 FMOV S0, 0.5
	0x03AA14A4 FMOV S1, 4
	0x03AA14A8 FCSEL S0, S1, S0, GT
	0x03AA14AC TBNZ X1, 0x0, 0x3AA14EC
	0x03AA14B0 B 0x3AA1464
	0x03AA14B4 MOVZ W8, 0x422C0000
	0x03AA14B8 FMOV S0, W8
	0x03AA14BC RET
	0x03AA14C0 ADRP X8, 0xFFFFFFFFFD049000
	0x03AA14C4 LDR V0, [X8 + 0x444]
	0x03AA14C8 TBNZ X1, 0x0, 0x3AA14EC
	0x03AA14CC B 0x3AA1464
	0x03AA14D0 ADRP X8, 0xFFFFFFFFFD049000
	0x03AA14D4 LDR V0, [X8 + 0xF4]
	0x03AA14D8 TBNZ X1, 0x0, 0x3AA14EC
	0x03AA14DC B 0x3AA1464
	0x03AA14E0 ADRP X8, 0xFFFFFFFFFD049000
	0x03AA14E4 LDR V0, [X8 + 0x1FC]
	0x03AA14E8 TBZ X1, 0x0, 0x3AA1464
	0x03AA14EC CMP W0, 0x20
	0x03AA14F0 B.LE 0x3AA152C
	0x03AA14F4 CMP W0, 0x40
	0x03AA14F8 B.LE 0x3AA1538
	0x03AA14FC CMP W0, 0x80
	0x03AA1500 B.LE 0x3AA1554
	0x03AA1504 CMP W0, 0x100
	0x03AA1508 B.LE 0x3AA1560
	0x03AA150C CMP W0, 0x200
	0x03AA1510 B.LE 0x3AA156C
	0x03AA1514 ADRP X8, 0xFFFFFFFFFD049000
	0x03AA1518 LDR V1, [X8 + 0x414]
	0x03AA151C CMP W0, 0x401
	0x03AA1520 FADD S1, S0, S1
	0x03AA1524 FCSEL S0, S1, S0, LT
	0x03AA1528 RET
	0x03AA152C ADRP X8, 0xFFFFFFFFFD049000
	0x03AA1530 LDR V1, [X8 + 0xB4]
	0x03AA1534 B 0x3AA1574
	0x03AA1538 ADRP X8, 0xFFFFFFFFFD049000
	0x03AA153C LDR V1, [X8 + 0x41C]
	0x03AA1540 B 0x3AA1574
	0x03AA1544 ADRP X8, 0xFFFFFFFFFD049000
	0x03AA1548 LDR V0, [X8 + 0x2E8]
	0x03AA154C TBNZ X1, 0x0, 0x3AA14EC
	0x03AA1550 B 0x3AA1464
	0x03AA1554 ADRP X8, 0xFFFFFFFFFD049000
	0x03AA1558 LDR V1, [X8 + 0xF8]
	0x03AA155C B 0x3AA1574
	0x03AA1560 ADRP X8, 0xFFFFFFFFFD049000
	0x03AA1564 LDR V1, [X8 + 0x2AC]
	0x03AA1568 B 0x3AA1574
	0x03AA156C ADRP X8, 0xFFFFFFFFFD049000
	0x03AA1570 LDR V1, [X8 + 0x170]
	0x03AA1574 FADD S0, S0, S1
	0x03AA1578 RET
	0x03AA157C SUB X31, X31, 0x90
	0x03AA1580 STP X30, X25, [X31 + 0x50]
	0x03AA1584 STP X24, X23, [X31 + 0x60]
	0x03AA1588 STP X22, X21, [X31 + 0x70]
	0x03AA158C STP X20, X19, [X31 + 0x80]
	0x03AA1590 MRS X8, 0xC000
	0x03AA1594 LDR X10, [X8 + 0x28]
	0x03AA1598 ADD W9, W2, 0x1
	0x03AA159C CMP W9, W3
	0x03AA15A0 STR X10, [X31 + 0x48]
	0x03AA15A4 B.GE 0x3AA17F0
	0x03AA15A8 CBZ X1, 0x3AA181C
	0x03AA15AC SXTW X9, W9
	0x03AA15B0 ADD X10, X1, 0x2D
	0x03AA15B4 MOVZ W11, 0x1C
	0x03AA15B8 MOVZ X12, 0x1
	0x03AA15BC MOV X13, INVALID
	0x03AA15C0 LDR X6, [X1 + 0x18]
	0x03AA15C4 CMP W9, W6
	0x03AA15C8 B.CS 0x3AA1818
	0x03AA15CC MADD X4, X9, X11, X1
	0x03AA15D0 LDUR X5, [X4 + 0x34]
	0x03AA15D4 LDP W14, W15, [X4 + 0x20]
	0x03AA15D8 LDR W16, [X4 + 0x28]
	0x03AA15DC LDRB W17, [X4 + 0x2C]
	0x03AA15E0 LDUR X7, [X4 + 0x2E]
	0x03AA15E4 LDRB W4, [X4 + 0x2D]
	0x03AA15E8 STUR X5, [X31 + 0x3E]
	0x03AA15EC MOV W5, W2
	0x03AA15F0 STR X7, [X31 + 0x38]
	0x03AA15F4 TBNZ X2, 0x1F, 0x3AA17A0
	0x03AA15F8 MOV W5, W2
	0x03AA15FC AND X6, X6, 0x0
	0x03AA1600 CMP X6, X5
	0x03AA1604 B.LS 0x3AA1818
	0x03AA1608 UMADDL X7, X2, X11, X10
	0x03AA160C ADD X19, X12, X5, 0x20, LSL
	0x03AA1610 SXTW X20, W14

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x942000
	007 Move X19, 0x653000
	008 Move W8, [X20+1018]
	009 Move X19, [X19+2760]
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {88}
	014 Move X0, 0x6B7000
	015 Move X0, [X0+328]
	016 Call 0x1C17CF4
	017 Move X0, 0x6B0000
	018 Move X0, [X0+1432]
	019 Call 0x1C17CF4
	020 Move X0, 0x653000
	021 Move X0, [X0+2760]
	022 Call 0x1C17CF4
	023 Move X0, 0x6B7000
	024 Move X0, [X0+1968]
	025 Call 0x1C17CF4
	026 Move X0, 0x6B7000
	027 Move X0, [X0+1976]
	028 Call 0x1C17CF4
	029 Move X0, 0x6B7000
	030 Move X0, [X0+1984]
	031 Call 0x1C17CF4
	032 Move X0, 0x6B7000
	033 Move X0, [X0+1992]
	034 Call 0x1C17CF4
	035 Move X0, 0x6B7000
	036 Move X0, [X0+2000]
	037 Call 0x1C17CF4
	038 Move X0, 0x6B7000
	039 Move X0, [X0+2008]
	040 Call 0x1C17CF4
	041 Move X0, 0x6B7000
	042 Move X0, [X0+2016]
	043 Call 0x1C17CF4
	044 Move X0, 0x6B7000
	045 Move X0, [X0+2024]
	046 Call 0x1C17CF4
	047 Move X0, 0x6B7000
	048 Move X0, [X0+2032]
	049 Call 0x1C17CF4
	050 Move X0, 0x6B7000
	051 Move X0, [X0+2040]
	052 Call 0x1C17CF4
	053 Move X0, 0x6B7000
	054 Move X0, [X0+2048]
	055 Call 0x1C17CF4
	056 Move X0, 0x6B7000
	057 Move X0, [X0+2056]
	058 Call 0x1C17CF4
	059 Move X0, 0x6B7000
	060 Move X0, [X0+2064]
	061 Call 0x1C17CF4
	062 Move X0, 0x6B7000
	063 Move X0, [X0+2072]
	064 Call 0x1C17CF4
	065 Move X0, 0x6B7000
	066 Move X0, [X0+2080]
	067 Call 0x1C17CF4
	068 Move X0, 0x6B7000
	069 Move X0, [X0+2088]
	070 Call 0x1C17CF4
	071 Move X0, 0x6B7000
	072 Move X0, [X0+2096]
	073 Call 0x1C17CF4
	074 Move X0, 0x6B7000
	075 Move X0, [X0+2104]
	076 Call 0x1C17CF4
	077 Move X0, 0x6B7000
	078 Move X0, [X0+2112]
	079 Call 0x1C17CF4
	080 Move X0, 0x6B7000
	081 Move X0, [X0+2120]
	082 Call 0x1C17CF4
	083 Move X0, 0x6B7000
	084 Move X0, [X0+2128]
	085 Call 0x1C17CF4
	086 Move W8, 1
	087 Move [X20+1018], W8
	088 Move X0, [X19]
	089 Move W1, 7
	090 Call 0x1C17D6C
	091 Compare X0, 0
	092 JumpIfEqual {252}
	093 Move W8, [X0+24]
	094 Compare W8, 0
	095 JumpIfEqual {251}
	096 Move X9, 0x6B7000
	097 Move X9, [X9+2120]
	098 NotImplemented "Instruction CMP not yet implemented."
	099 Move X9, [X9]
	100 Move [X0+32], X9
	101 Move X9, 0x6B7000
	102 Move X9, [X9+2008]
	103 NotImplemented "Instruction CMP not yet implemented."
	104 Move X9, [X9]
	105 Move [X0+40], X9
	106 Move X9, 0x6B7000
	107 Move X9, [X9+2096]
	108 NotImplemented "Instruction CMP not yet implemented."
	109 Move X9, [X9]
	110 Move [X0+48], X9
	111 Move X9, 0x6B7000
	112 Move X9, [X9+2080]
	113 NotImplemented "Instruction CMP not yet implemented."
	114 Move X9, [X9]
	115 Move [X0+56], X9
	116 Move X9, 0x6B7000
	117 Move X9, [X9+2088]
	118 NotImplemented "Instruction CMP not yet implemented."
	119 Move X9, [X9]
	120 Move [X0+64], X9
	121 Move X9, 0x6B7000
	122 Move X9, [X9+2128]
	123 NotImplemented "Instruction CMP not yet implemented."
	124 Move X9, [X9]
	125 Move [X0+72], X9
	126 Move X8, 0x6B7000
	127 Move X8, [X8+2016]
	128 Move X21, 0x6B7000
	129 Move W1, 8
	130 Move X8, [X8]
	131 Move X21, [X21+328]
	132 Move [X0+80], X8
	133 Move X8, [X21]
	134 Move X8, [X8+184]
	135 Move [X8], X0
	136 Move X0, [X19]
	137 Call 0x1C17D6C
	138 Compare X0, 0
	139 JumpIfEqual {252}
	140 Move W8, [X0+24]
	141 Compare W8, 0
	142 JumpIfEqual {251}
	143 Move X9, 0x6B7000
	144 Move X9, [X9+1976]
	145 NotImplemented "Instruction CMP not yet implemented."
	146 Move X9, [X9]
	147 Move [X0+32], X9
	148 Move X9, 0x6B7000
	149 Move X9, [X9+2048]
	150 NotImplemented "Instruction CMP not yet implemented."
	151 Move X9, [X9]
	152 Move [X0+40], X9
	153 Move X9, 0x6B7000
	154 Move X9, [X9+2072]
	155 NotImplemented "Instruction CMP not yet implemented."
	156 Move X9, [X9]
	157 Move [X0+48], X9
	158 Move X9, 0x6B7000
	159 Move X9, [X9+2040]
	160 NotImplemented "Instruction CMP not yet implemented."
	161 Move X9, [X9]
	162 Move [X0+56], X9
	163 Move X9, 0x6B7000
	164 Move X9, [X9+2024]
	165 NotImplemented "Instruction CMP not yet implemented."
	166 Move X9, [X9]
	167 Move [X0+64], X9
	168 Move X9, 0x6B7000
	169 Move X9, [X9+1968]
	170 NotImplemented "Instruction CMP not yet implemented."
	171 Move X9, [X9]
	172 Move [X0+72], X9
	173 Move X9, 0x6B7000
	174 Move X9, [X9+1992]
	175 NotImplemented "Instruction CMP not yet implemented."
	176 Move X9, [X9]
	177 Move [X0+80], X9
	178 Move X8, 0x6B7000
	179 Move X8, [X8+2000]
	180 Move X9, 0x6B7000
	181 Move W10, 0xFFFF
	182 Move X22, 0x6B0000
	183 Move X8, [X8]
	184 Move [X0+88], X8
	185 Move X8, [X21]
	186 Move X8, [X8+184]
	187 Move X9, [X9+2056]
	188 Move [X8+8], X0
	189 NotImplemented "Instruction STRH not yet implemented."
	190 Move X19, [X9]
	191 Move X9, 0x6B7000
	192 Move X9, [X9+1984]
	193 Move X10, 0x6B7000
	194 Move [X8+24], X19
	195 Move X9, [X9]
	196 Move X10, [X10+2064]
	197 Move [X8+32], X9
	198 Move X9, [X10]
	199 Move X10, 0x6B7000
	200 Move X10, [X10+2032]
	201 Move [X8+40], X9
	202 Move X9, [X10]
	203 Move X10, 0x6B7000
	204 Move X10, [X10+2104]
	205 Move [X8+48], X9
	206 Move X9, [X10]
	207 Move X10, 0x6B7000
	208 Move X10, [X10+2112]
	209 Move [X8+56], X9
	210 Move X9, [X10]
	211 Move X22, [X22+1432]
	212 Move W10, 0xC409
	213 NotImplemented "Instruction MOVK not yet implemented."
	214 Move [X8+64], X9
	215 Move [X8+72], W10
	216 Move X0, [X22]
	217 Call 0x1C17F10
	218 Move X1, X19
	219 Move X2, X31
	220 Move X20, X0
	221 Call ProfilingSampler..ctor, X0, X1
	222 Move X8, [X21]
	223 Move X8, [X8+184]
	224 Move [X8+80], X20
	225 Move X0, [X22]
	226 Move X19, [X8+32]
	227 Call 0x1C17F10
	228 Move X1, X19
	229 Move X2, X31
	230 Move X20, X0
	231 Call ProfilingSampler..ctor, X0, X1
	232 Move X8, [X21]
	233 Move X8, [X8+184]
	234 Move [X8+88], X20
	235 Move X0, [X22]
	236 Move X19, [X8+64]
	237 Call 0x1C17F10
	238 Move X1, X19
	239 Move X2, X31
	240 Move X20, X0
	241 Call ProfilingSampler..ctor, X0, X1
	242 Move X8, [X21]
	243 Move X22, [X31+16]
	244 Move X21, [X31+24]
	245 Move X8, [X8+184]
	246 Move [X8+96], X20
	247 Move X20, [X31+32]
	248 Move X19, [X31+40]
	249 Move X30, [X31+48]
	250 Return 
	251 Call 0x1C17F28
	252 Call 0x1C17F20

