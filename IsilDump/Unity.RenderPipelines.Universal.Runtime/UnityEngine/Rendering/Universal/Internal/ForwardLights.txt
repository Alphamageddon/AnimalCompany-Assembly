Type: UnityEngine.Rendering.Universal.Internal.ForwardLights

Method: System.Void .ctor()

Disassembly:
	0x03AA5F7C LDR X0, [X0 + 0x5A8]
	0x03AA5F80 BL 0x1C16CF4
	0x03AA5F84 MOVZ W8, 0x1
	0x03AA5F88 STRB W8, [X20 + 0x581]
	0x03AA5F8C LDR X0, [X26]
	0x03AA5F90 LDR W8, [X0 + 0xE0]
	0x03AA5F94 CBNZ W8, 0x3AA5F9C
	0x03AA5F98 BL 0x1C16DFC
	0x03AA5F9C FCVT S0, S8
	0x03AA5FA0 FMOV D1, 2

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Call InitParams.Create
	005 Move X2, X0
	006 Move X3, X1
	007 Move X0, X19
	008 Move X1, X2
	009 Move X2, X3
	010 Move X30, [X31+16]
	011 Move X19, [X31+24]
	012 Call ForwardLights..ctor, X0, X1
	013 Return 

Method: System.Void .ctor(UnityEngine.Rendering.Universal.Internal.ForwardLights/InitParams initParams)

Disassembly:
	0x03AA60C0 STP V2, V3, [X31 + 0x220]
	0x03AA60C4 LDP V2, V3, [X31 + 0x3B0]
	0x03AA60C8 STR V4, [X31 + 0x98]
	0x03AA60CC STR V4, [X31 + 0x97]
	0x03AA60D0 STR V4, [X31 + 0x96]
	0x03AA60D4 STR V4, [X31 + 0x95]
	0x03AA60D8 STR V4, [X31 + 0x94]
	0x03AA60DC STR V4, [X31 + 0x93]
	0x03AA60E0 STR V4, [X31 + 0x92]
	0x03AA60E4 STR V4, [X31 + 0x91]
	0x03AA60E8 STR V0, [X31 + 0xA7]
	0x03AA60EC STR V1, [X31 + 0xA8]
	0x03AA60F0 STR V2, [X31 + 0xA9]
	0x03AA60F4 STR V3, [X31 + 0xAA]
	0x03AA60F8 ADD X0, X31, 0x910
	0x03AA60FC ADD X1, X31, 0x200
	0x03AA6100 ADD X2, X31, 0xA70
	0x03AA6104 BL 0x2D1F5EC
	0x03AA6108 ADD X0, X31, 0x880
	0x03AA610C ADD X1, X31, 0x910
	0x03AA6110 MOVZ W2, 0x80
	0x03AA6114 BL 0x3EB1AC0
	0x03AA6118 ADD X8, X31, 0x200
	0x03AA611C MOV X0, X27
	0x03AA6120 MOV W1, W31
	0x03AA6124 MOV X2, X31
	0x03AA6128 BL 0x3A92BE4
	0x03AA612C LDP V0, V1, [X31 + 0x200]
	0x03AA6130 LDP V2, V3, [X31 + 0x220]
	0x03AA6134 STP V0, V1, [X31 + 0x310]
	0x03AA6138 STP V2, V3, [X31 + 0x330]
	0x03AA613C ADD X8, X31, 0x200
	0x03AA6140 ADD X0, X31, 0x310
	0x03AA6144 MOV X1, X31
	0x03AA6148 BL 0x3898FFC
	0x03AA614C LDP V0, V1, [X31 + 0x200]
	0x03AA6150 LDP V2, V3, [X31 + 0x220]
	0x03AA6154 STP V0, V1, [X31 + 0x350]
	0x03AA6158 STP V2, V3, [X31 + 0x370]
	0x03AA615C ADD X8, X31, 0x200
	0x03AA6160 MOV X0, X27
	0x03AA6164 MOV W1, W28
	0x03AA6168 MOV X2, X31
	0x03AA616C BL 0x3A92BE4
	0x03AA6170 LDP V0, V1, [X31 + 0x200]
	0x03AA6174 LDP V2, V3, [X31 + 0x220]
	0x03AA6178 STP V0, V1, [X31 + 0x2D0]
	0x03AA617C STP V2, V3, [X31 + 0x2F0]
	0x03AA6180 ADD X8, X31, 0x200
	0x03AA6184 ADD X0, X31, 0x2D0
	0x03AA6188 MOV X1, X31
	0x03AA618C BL 0x3898FFC
	0x03AA6190 LDP V0, V1, [X31 + 0x200]
	0x03AA6194 LDP V2, V3, [X31 + 0x220]
	0x03AA6198 LDR X3, [X29]
	0x03AA619C MOVI V4.2D, 0x0
	0x03AA61A0 STP V0, V1, [X31 + 0x290]
	0x03AA61A4 LDP V0, V1, [X31 + 0x350]
	0x03AA61A8 STP V2, V3, [X31 + 0x2B0]
	0x03AA61AC LDP V2, V3, [X31 + 0x370]
	0x03AA61B0 STP V4, V4, [X31 + 0x260]
	0x03AA61B4 STR V0, [X31 + 0xA7]
	0x03AA61B8 STR V1, [X31 + 0xA8]
	0x03AA61BC STR V2, [X31 + 0xA9]
	0x03AA61C0 STR V3, [X31 + 0xAA]
	0x03AA61C4 LDP V0, V1, [X31 + 0x290]
	0x03AA61C8 LDP V2, V3, [X31 + 0x2B0]
	0x03AA61CC STP V4, V4, [X31 + 0x240]
	0x03AA61D0 STP V4, V4, [X31 + 0x220]
	0x03AA61D4 STP V4, V4, [X31 + 0x200]
	0x03AA61D8 STR V0, [X31 + 0xA3]
	0x03AA61DC STR V1, [X31 + 0xA4]
	0x03AA61E0 STR V2, [X31 + 0xA5]
	0x03AA61E4 STR V3, [X31 + 0xA6]
	0x03AA61E8 ADD X0, X31, 0x200
	0x03AA61EC ADD X1, X31, 0xA70
	0x03AA61F0 ADD X2, X31, 0xA30
	0x03AA61F4 BL 0x2D1F5EC
	0x03AA61F8 ADD X0, X31, 0x800
	0x03AA61FC ADD X1, X31, 0x200
	0x03AA6200 MOVZ W2, 0x80
	0x03AA6204 BL 0x3EB1AC0
	0x03AA6208 LDR W8, [X31 + 0x60]
	0x03AA620C CMP W8, 0x2
	0x03AA6210 B.LT 0x3AA62F4
	0x03AA6214 LDR W8, [X31 + 0x60]
	0x03AA6218 MOV W20, W31
	0x03AA621C ADD X29, X24, 0x88
	0x03AA6220 MOVZ W25, 0x1
	0x03AA6224 MOV W26, W8
	0x03AA6228 MOVZ W23, 0x88
	0x03AA622C MADD X1, X25, X23, X24
	0x03AA6230 ADD X0, X31, 0x698
	0x03AA6234 MOVZ W2, 0x88
	0x03AA6238 UMADDL X27, X20, X23, X24
	0x03AA623C BL 0x3EB1B30
	0x03AA6240 MOV X28, X29
	0x03AA6244 MOV X22, X25
	0x03AA6248 ADD X0, X31, 0x910
	0x03AA624C MOVZ W2, 0x88
	0x03AA6250 MOV X1, X27
	0x03AA6254 BL 0x3EB1AC0
	0x03AA6258 ADD X0, X31, 0x200
	0x03AA625C ADD X1, X31, 0x698
	0x03AA6260 MOVZ W2, 0x88
	0x03AA6264 BL 0x3EB1AC0
	0x03AA6268 LDR X0, [X21]
	0x03AA626C LDR W8, [X0 + 0xE0]
	0x03AA6270 CBNZ W8, 0x3AA6278
	0x03AA6274 BL 0x1C16DFC
	0x03AA6278 ADD X0, X31, 0x178
	0x03AA627C ADD X1, X31, 0x910
	0x03AA6280 MOVZ W2, 0x88
	0x03AA6284 BL 0x3EB1AC0
	0x03AA6288 ADD X0, X31, 0xF0
	0x03AA628C ADD X1, X31, 0x200
	0x03AA6290 MOVZ W2, 0x88
	0x03AA6294 BL 0x3EB1AC0
	0x03AA6298 ADD X0, X31, 0x178
	0x03AA629C ADD X1, X31, 0xF0
	0x03AA62A0 BL 0x3AA6B18
	0x03AA62A4 TBZ X0, 0x0, 0x3AA62D0
	0x03AA62A8 MOVZ W2, 0x88
	0x03AA62AC MOV X0, X28
	0x03AA62B0 MOV X1, X27
	0x03AA62B4 BL 0x3EB1B30
	0x03AA62B8 SUB X22, X22, 0x1
	0x03AA62BC SUB X28, X28, 0x88
	0x03AA62C0 CMP W22, 0x1
	0x03AA62C4 SUB X27, X27, 0x88
	0x03AA62C8 B.GE 0x3AA6248
	0x03AA62CC MOV X22, X31
	0x03AA62D0 SMADDL X0, X22, X23, X24
	0x03AA62D4 ADD X1, X31, 0x698
	0x03AA62D8 MOVZ W2, 0x88
	0x03AA62DC BL 0x3EB1B30
	0x03AA62E0 ADD X25, X25, 0x1
	0x03AA62E4 ADD X29, X29, 0x88
	0x03AA62E8 CMP X25, X26
	0x03AA62EC ADD W20, W20, 0x1
	0x03AA62F0 B.NE 0x3AA622C
	0x03AA62F4 ADRP X8, 0x6AE000
	0x03AA62F8 LDR X8, [X8 + 0x530]
	0x03AA62FC LDR W23, [X31 + 0x6C]
	0x03AA6300 STR X31, [X31 + 0xA78]
	0x03AA6304 STR X31, [X31 + 0xA70]
	0x03AA6308 LDR X4, [X8]
	0x03AA630C LDR W8, [X31 + 0x4C]
	0x03AA6310 MUL W27, W8, W23
	0x03AA6314 ADD X0, X31, 0xA70
	0x03AA6318 MOVZ W2, 0x3
	0x03AA631C MOVZ W3, 0x1
	0x03AA6320 MOV W1, W27
	0x03AA6324 BL 0x23F8534
	0x03AA6328 LDR V0, [X31 + 0xA7]
	0x03AA632C ADD X0, X31, 0x610
	0x03AA6330 ADD X1, X31, 0x880
	0x03AA6334 MOVZ W2, 0x80
	0x03AA6338 STR V0, [X31 + 0x7F]
	0x03AA633C BL 0x3EB1AC0
	0x03AA6340 ADRP X25, 0x6B1000
	0x03AA6344 LDR W8, [X19 + 0x13C]
	0x03AA6348 LDR X25, [X25 + 0xB98]
	0x03AA634C MUL W2, W8, W23
	0x03AA6350 LDR X3, [X25]
	0x03AA6354 ADD X0, X31, 0x7F0
	0x03AA6358 MOV W1, W31
	0x03AA635C BL 0x23F92BC
	0x03AA6360 ADRP X9, 0x6B1000
	0x03AA6364 LDR W8, [X19 + 0x13C]
	0x03AA6368 LDR X9, [X9 + 0xB60]
	0x03AA636C MOV X20, X0
	0x03AA6370 MOV X22, X1
	0x03AA6374 ADD X0, X31, 0x910
	0x03AA6378 LDR X26, [X9]
	0x03AA637C ADD X1, X31, 0x610
	0x03AA6380 MOVZ W2, 0x80
	0x03AA6384 MUL W28, W8, W23
	0x03AA6388 BL 0x3EB1AC0
	0x03AA638C LDR X8, [X31 + 0x50]
	0x03AA6390 STR X20, [X31 + 0x9A0]
	0x03AA6394 STR X22, [X31 + 0x9A8]
	0x03AA6398 STR X8, [X31 + 0x990]
	0x03AA639C LDR X8, [X31 + 0x40]
	0x03AA63A0 STR X8, [X31 + 0x998]
	0x03AA63A4 ADD X0, X31, 0x910
	0x03AA63A8 MOVZ W2, 0x20
	0x03AA63AC MOV W1, W28
	0x03AA63B0 MOV X3, X31
	0x03AA63B4 MOV X4, X31
	0x03AA63B8 MOV X5, X26
	0x03AA63BC BL 0x21EE848
	0x03AA63C0 MOV X28, X0
	0x03AA63C4 MOV X29, X1
	0x03AA63C8 ADD X0, X31, 0x590
	0x03AA63CC ADD X1, X31, 0x880
	0x03AA63D0 MOVZ W2, 0x80
	0x03AA63D4 BL 0x3EB1AC0
	0x03AA63D8 LDR W8, [X19 + 0x13C]
	0x03AA63DC LDR X3, [X25]
	0x03AA63E0 MUL W1, W8, W23
	0x03AA63E4 LDR W8, [X31 + 0x60]
	0x03AA63E8 MUL W20, W8, W23
	0x03AA63EC ADD X0, X31, 0x7F0
	0x03AA63F0 MOV W2, W20
	0x03AA63F4 BL 0x23F92BC
	0x03AA63F8 ADRP X8, 0x6B1000
	0x03AA63FC LDR X8, [X8 + 0xB68]
	0x03AA6400 MOV X26, X0
	0x03AA6404 MOV X22, X1
	0x03AA6408 ADD X0, X31, 0x910
	0x03AA640C LDR X23, [X8]
	0x03AA6410 ADD X1, X31, 0x590
	0x03AA6414 MOVZ W2, 0x80
	0x03AA6418 BL 0x3EB1AC0
	0x03AA641C LDR X8, [X31 + 0x38]
	0x03AA6420 STR X24, [X31 + 0x990]
	0x03AA6424 STR X26, [X31 + 0x9A0]
	0x03AA6428 STR X22, [X31 + 0x9A8]
	0x03AA642C STR X8, [X31 + 0x998]
	0x03AA6430 ADD X0, X31, 0x910
	0x03AA6434 MOVZ W2, 0x20
	0x03AA6438 MOV W1, W20
	0x03AA643C MOV X3, X28
	0x03AA6440 MOV X4, X29
	0x03AA6444 MOV X5, X23
	0x03AA6448 BL 0x21EE8E8
	0x03AA644C LDR X8, [X31 + 0x28]
	0x03AA6450 STR X0, [X31 + 0x7E0]
	0x03AA6454 STR X1, [X31 + 0x7E8]
	0x03AA6458 ADD X28, X31, 0x568
	0x03AA645C LDR W20, [X19 + 0x140]
	0x03AA6460 STUR W31, [X28 + 0x3]
	0x03AA6464 STR W31, [X31 + 0x568]
	0x03AA6468 LDR V0, [X8]
	0x03AA646C LDR V1, [X31 + 0x7F]
	0x03AA6470 ADD X8, X19, 0x134
	0x03AA6474 ADD W9, W20, 0x7F
	0x03AA6478 STR V0, [X31 + 0x57]
	0x03AA647C STR V1, [X31 + 0x58]
	0x03AA6480 LDR V8, [X8]
	0x03AA6484 LDR W23, [X19 + 0x130]
	0x03AA6488 LDR W22, [X19 + 0x13C]
	0x03AA648C ADD W8, W20, 0xFE
	0x03AA6490 CMP W9, 0x0
	0x03AA6494 CSEL W25, W8, W9, LT
	0x03AA6498 LDR X0, [X31 + 0x58]
	0x03AA649C MOV X1, X31
	0x03AA64A0 BL 0x3C03928
	0x03AA64A4 ADD X26, X31, 0xAB8
	0x03AA64A8 ADD X13, X31, 0x910

ISIL:
	001 Subtract X31, X31, 352
	002 Move [X31+256], X29
	003 Move [X31+264], X30
	004 Move [X31+272], X28
	005 Move [X31+280], X27
	006 Move [X31+288], X26
	007 Move [X31+296], X25
	008 Move [X31+304], X24
	009 Move [X31+312], X23
	010 Move [X31+320], X22
	011 Move [X31+328], X21
	012 Move [X31+336], X20
	013 Move [X31+344], X19
	014 Move X22, 0x93D000
	015 Move X23, 0x6AF000
	016 Move W8, [X22+1035]
	017 Move X23, [X23+16]
	018 Move X21, X2
	019 Move X19, X1
	020 Move X20, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {81}
	025 Move X0, 0x6B2000
	026 Move X0, [X0+2776]
	027 Call 0x1C17CF4
	028 Move X0, 0x6AF000
	029 Move X0, [X0+16]
	030 Call 0x1C17CF4
	031 Move X0, 0x64E000
	032 Move X0, [X0+1592]
	033 Call 0x1C17CF4
	034 Move X0, 0x677000
	035 Move X0, [X0+2216]
	036 Call 0x1C17CF4
	037 Move X0, 0x6A9000
	038 Move X0, [X0+72]
	039 Call 0x1C17CF4
	040 Move X0, 0x6B2000
	041 Move X0, [X0+2216]
	042 Call 0x1C17CF4
	043 Move X0, 0x6B2000
	044 Move X0, [X0+2224]
	045 Call 0x1C17CF4
	046 Move X0, 0x6B2000
	047 Move X0, [X0+2784]
	048 Call 0x1C17CF4
	049 Move X0, 0x6B2000
	050 Move X0, [X0+2792]
	051 Call 0x1C17CF4
	052 Move X0, 0x6B2000
	053 Move X0, [X0+2800]
	054 Call 0x1C17CF4
	055 Move X0, 0x6B2000
	056 Move X0, [X0+2808]
	057 Call 0x1C17CF4
	058 Move X0, 0x6B2000
	059 Move X0, [X0+2816]
	060 Call 0x1C17CF4
	061 Move X0, 0x6B2000
	062 Move X0, [X0+2344]
	063 Call 0x1C17CF4
	064 Move X0, 0x6B2000
	065 Move X0, [X0+2824]
	066 Call 0x1C17CF4
	067 Move X0, 0x6B2000
	068 Move X0, [X0+2832]
	069 Call 0x1C17CF4
	070 Move X0, 0x6B2000
	071 Move X0, [X0+2840]
	072 Call 0x1C17CF4
	073 Move X0, 0x6B2000
	074 Move X0, [X0+2848]
	075 Call 0x1C17CF4
	076 Move X0, 0x6B2000
	077 Move X0, [X0+2856]
	078 Call 0x1C17CF4
	079 Move W8, 1
	080 Move [X22+1035], W8
	081 Move X28, 0x6B2000
	082 Move X22, 0x6B2000
	083 Move X27, 0x6B2000
	084 Move X26, 0x6B2000
	085 Move X25, 0x6B2000
	086 Move X24, 0x6B2000
	087 Move X28, [X28+2344]
	088 Move X22, [X22+2776]
	089 Move X27, [X27+2216]
	090 Move X26, [X26+2808]
	091 Move X25, [X25+2224]
	092 Move X24, [X24+2832]
	093 Move X0, X20
	094 Move X1, X31
	095 Call Object..ctor, X0
	096 Move X0, [X23]
	097 Move W8, [X0+224]
	098 Compare W8, 0
	099 JumpIfNotEqual {101}
	100 Call 0x1C17DFC
	101 Move X0, X31
	102 Call RenderingUtils.get_useStructuredBuffer
	103 And W8, W0, 1
	104 And W9, W21, 1
	105 Move [X20+80], W8
	106 Move [X20+81], W9
	107 Move X0, [X28]
	108 Move X1, X31
	109 Call Shader.PropertyToID, X0
	110 Move X8, [X22]
	111 Move X1, X31
	112 Move X8, [X8+184]
	113 Move [X8], W0
	114 Move X0, [X27]
	115 Call Shader.PropertyToID, X0
	116 Move X8, [X22]
	117 Move X1, X31
	118 Move X8, [X8+184]
	119 Move [X8+4], W0
	120 Move X0, [X26]
	121 Call Shader.PropertyToID, X0
	122 Move X8, [X22]
	123 Move X1, X31
	124 Move X8, [X8+184]
	125 Move [X8+8], W0
	126 Move X0, [X25]
	127 Call Shader.PropertyToID, X0
	128 Move X8, [X22]
	129 Move X1, X31
	130 Move X8, [X8+184]
	131 Move [X8+12], W0
	132 Move X0, [X24]
	133 Call Shader.PropertyToID, X0
	134 Move X8, [X22]
	135 Move X8, [X8+184]
	136 Move [X8+16], W0
	137 Move W8, [X20+80]
	138 Compare W8, 0
	139 JumpIfEqual {152}
	140 Move X8, 0x6B2000
	141 Move X8, [X8+2848]
	142 Move X21, 0x6B2000
	143 Move X1, X31
	144 Move X0, [X8]
	145 Move X21, [X21+2824]
	146 Call Shader.PropertyToID, X0
	147 Move [X20+16], W0
	148 Move X0, [X21]
	149 Move X1, X31
	150 Call Shader.PropertyToID, X0
	151 Move [X20+20], W0
	152 Move X8, 0x6B2000
	153 Move X8, [X8+2840]
	154 Move X1, X31
	155 Move X0, [X8]
	156 Call Shader.PropertyToID, X0
	157 Move X8, [X22]
	158 Move X1, X31
	159 Move X8, [X8+184]
	160 Move [X8+20], W0
	161 Move X8, 0x6B2000
	162 Move X8, [X8+2792]
	163 Move X0, [X8]
	164 Call Shader.PropertyToID, X0
	165 Move X8, [X22]
	166 Move X1, X31
	167 Move X8, [X8+184]
	168 Move [X8+24], W0
	169 Move X8, 0x6B2000
	170 Move X8, [X8+2856]
	171 Move X0, [X8]
	172 Call Shader.PropertyToID, X0
	173 Move X8, [X22]
	174 Move X1, X31
	175 Move X8, [X8+184]
	176 Move [X8+28], W0
	177 Move X8, 0x6B2000
	178 Move X8, [X8+2800]
	179 Move X0, [X8]
	180 Call Shader.PropertyToID, X0
	181 Move X8, [X22]
	182 Move X1, X31
	183 Move X8, [X8+184]
	184 Move [X8+32], W0
	185 Move X8, 0x6B2000
	186 Move X8, [X8+2784]
	187 Move X0, [X8]
	188 Call Shader.PropertyToID, X0
	189 Move X8, [X22]
	190 Move X1, X31
	191 Move X8, [X8+184]
	192 Move [X8+36], W0
	193 Move X8, 0x6B2000
	194 Move X8, [X8+2816]
	195 Move X0, [X8]
	196 Call Shader.PropertyToID, X0
	197 Move X8, [X22]
	198 Move X8, [X8+184]
	199 Move [X8+40], W0
	200 Move X8, 0x677000
	201 Move X8, [X8+2216]
	202 Move X0, [X8]
	203 Move W8, [X0+224]
	204 Compare W8, 0
	205 JumpIfNotEqual {207}
	206 Call 0x1C17DFC
	207 Move X0, X31
	208 Call UniversalRenderPipeline.get_maxVisibleAdditionalLights
	209 Move X22, 0x6A9000
	210 Move X22, [X22+72]
	211 Move W21, W0
	212 Move W1, W21
	213 Move X8, [X22]
	214 Move X0, X8
	215 Call 0x1C17D6C
	216 Move [X20+32], X0
	217 Move X0, [X22]
	218 Move W1, W21
	219 Call 0x1C17D6C
	220 Move [X20+40], X0
	221 Move X0, [X22]
	222 Move W1, W21
	223 Call 0x1C17D6C
	224 Move [X20+48], X0
	225 Move X0, [X22]
	226 Move W1, W21
	227 Call 0x1C17D6C
	228 Move [X20+56], X0
	229 Move X0, [X22]
	230 Move W1, W21
	231 Call 0x1C17D6C
	232 Move [X20+64], X0
	233 Move X8, 0x64E000
	234 Move X8, [X8+1592]
	235 Move W1, W21
	236 Move X0, [X8]
	237 Call 0x1C17D6C
	238 Move [X20+72], X0
	239 Move W8, [X20+81]
	240 Compare W8, 0
	241 JumpIfEqual {255}
	242 Move X0, X20
	243 Call ForwardLights.CreateForwardPlusBuffers, X0
	244 Add X8, X31, 0
	245 Move X0, X31
	246 Call ReflectionProbeManager.Create
	247 Add X0, X31, 128
	248 Add X1, X31, 0
	249 Move W2, 128
	250 Call 0x3EB2AC0
	251 Add X0, X20, 176
	252 Add X1, X31, 128
	253 Move W2, 128
	254 Call 0x3EB2AC0
	255 Move [X20+168], X19
	256 Move X20, [X31+336]
	257 Move X19, [X31+344]
	258 Move X22, [X31+320]
	259 Move X21, [X31+328]
	260 Move X24, [X31+304]
	261 Move X23, [X31+312]
	262 Move X26, [X31+288]
	263 Move X25, [X31+296]
	264 Move X28, [X31+272]
	265 Move X27, [X31+280]
	266 Move X29, [X31+256]
	267 Move X30, [X31+264]
	268 Add X31, X31, 352
	269 Return 

Method: System.Void CreateForwardPlusBuffers()

Disassembly:
	0x03AA64AC ADRP X10, 0x6B1000
	0x03AA64B0 LDR X3, [X31 + 0x7E0]
	0x03AA64B4 LDR X4, [X31 + 0x7E8]
	0x03AA64B8 LDR X10, [X10 + 0xB80]
	0x03AA64BC LDR W12, [X31 + 0x6C]
	0x03AA64C0 LDR V0, [X31 + 0x57]
	0x03AA64C4 LDR V1, [X31 + 0x58]
	0x03AA64C8 LDR X5, [X10]
	0x03AA64CC LDR W10, [X31 + 0x60]
	0x03AA64D0 LDUR W11, [X28 + 0x3]
	0x03AA64D4 SBFM W8, W25, 0x7, 0x1F
	0x03AA64D8 AND W9, W0, 0x1
	0x03AA64DC STR W10, [X31 + 0x944]
	0x03AA64E0 LDR W10, [X31 + 0x568]
	0x03AA64E4 MUL W1, W8, W12
	0x03AA64E8 STR D8, [X31 + 0x930]
	0x03AA64EC STR W20, [X31 + 0x938]
	0x03AA64F0 STR W23, [X31 + 0x93C]
	0x03AA64F4 STR W22, [X31 + 0x940]
	0x03AA64F8 STR W8, [X31 + 0x948]
	0x03AA64FC STR W12, [X31 + 0x94C]
	0x03AA6500 STRB W9, [X31 + 0x950]
	0x03AA6504 STR V0, [X31 + 0x91]
	0x03AA6508 STR V1, [X31 + 0x92]
	0x03AA650C STUR W10, [X13 + 0x41]
	0x03AA6510 STR W11, [X31 + 0x954]
	0x03AA6514 ADD X0, X31, 0x910
	0x03AA6518 MOVZ W2, 0x1
	0x03AA651C BL 0x21EEAC8
	0x03AA6520 MOV X28, X0
	0x03AA6524 MOV X25, X1
	0x03AA6528 ADD X0, X31, 0x7E0
	0x03AA652C MOV X1, X31
	0x03AA6530 BL 0x3BFDCAC
	0x03AA6534 ADRP X20, 0x6B0000
	0x03AA6538 LDR X22, [X31 + 0x58]
	0x03AA653C LDR X20, [X20 + 0xFE8]
	0x03AA6540 LDR X2, [X20]
	0x03AA6544 ADD X8, X31, 0x910
	0x03AA6548 ADD X0, X31, 0x800
	0x03AA654C MOV W1, W31
	0x03AA6550 BL 0x2D1F610
	0x03AA6554 LDR V0, [X31 + 0x91]
	0x03AA6558 LDR V1, [X31 + 0x92]
	0x03AA655C LDR V2, [X31 + 0x93]
	0x03AA6560 LDR V3, [X31 + 0x94]
	0x03AA6564 STP V0, V1, [X31 + 0xB0]
	0x03AA6568 STP V2, V3, [X31 + 0xD0]
	0x03AA656C ADD X2, X31, 0xB0
	0x03AA6570 ADD X3, X31, 0x7DC
	0x03AA6574 ADD X4, X31, 0x7D8
	0x03AA6578 ADD X5, X31, 0x7C8
	0x03AA657C MOV X1, X22
	0x03AA6580 BL 0x3AA5690
	0x03AA6584 LDR X2, [X20]
	0x03AA6588 ADD X8, X31, 0x910
	0x03AA658C ADD X0, X31, 0x800
	0x03AA6590 MOVZ W1, 0x1
	0x03AA6594 BL 0x2D1F610
	0x03AA6598 LDR V0, [X31 + 0x91]
	0x03AA659C LDR V1, [X31 + 0x92]
	0x03AA65A0 LDR V2, [X31 + 0x93]
	0x03AA65A4 LDR V3, [X31 + 0x94]
	0x03AA65A8 STP V0, V1, [X31 + 0x70]
	0x03AA65AC STP V2, V3, [X31 + 0x90]
	0x03AA65B0 ADD X2, X31, 0x70
	0x03AA65B4 ADD X3, X31, 0x7C4
	0x03AA65B8 ADD X4, X31, 0x7C0
	0x03AA65BC ADD X5, X31, 0x7B0
	0x03AA65C0 MOV X1, X22
	0x03AA65C4 BL 0x3AA5690
	0x03AA65C8 LDR X0, [X21]
	0x03AA65CC LDR W20, [X19 + 0x60]
	0x03AA65D0 LDR W8, [X0 + 0xE0]
	0x03AA65D4 CBNZ W8, 0x3AA65DC
	0x03AA65D8 BL 0x1C16DFC
	0x03AA65DC ADRP X9, 0x6B0000
	0x03AA65E0 LDR X9, [X9 + 0xFF8]
	0x03AA65E4 UBFM W8, W20, 0x1E, 0x1D
	0x03AA65E8 STR X31, [X31 + 0xA38]
	0x03AA65EC STR X31, [X31 + 0xA30]
	0x03AA65F0 LDR X4, [X9]
	0x03AA65F4 ADD W9, W8, 0x83
	0x03AA65F8 ADD W8, W8, 0x102
	0x03AA65FC CMP W9, 0x0
	0x03AA6600 CSEL W8, W8, W9, LT
	0x03AA6604 AND W8, W8, 0xFFFFFF80
	0x03AA6608 ORR W9, W8, 0x3
	0x03AA660C CMP W8, 0x0
	0x03AA6610 CSEL W8, W9, W8, LT
	0x03AA6614 SBFM W21, W8, 0x2, 0x1F
	0x03AA6618 MUL W1, W27, W21
	0x03AA661C ADD X0, X31, 0xA30
	0x03AA6620 MOVZ W2, 0x3
	0x03AA6624 MOVZ W3, 0x1
	0x03AA6628 BL 0x23D3C14
	0x03AA662C LDR V0, [X31 + 0xA3]
	0x03AA6630 ADD X0, X31, 0x4D0
	0x03AA6634 ADD X1, X31, 0x880
	0x03AA6638 MOVZ W2, 0x80
	0x03AA663C STR X31, [X31 + 0xAC8]
	0x03AA6640 STR X31, [X31 + 0xAB8]
	0x03AA6644 STR X31, [X31 + 0xAC0]
	0x03AA6648 STUR W31, [X26 + 0x17]
	0x03AA664C STR V0, [X31 + 0x7A]
	0x03AA6650 STR V0, [X31 + 0x55]
	0x03AA6654 BL 0x3EB1AC0
	0x03AA6658 ADRP X20, 0x6B1000
	0x03AA665C LDR V9, [X19 + 0x58]
	0x03AA6660 LDR V0, [X31 + 0x7DC]
	0x03AA6664 LDR V1, [X31 + 0x7C4]
	0x03AA6668 LDR X20, [X20 + 0xB58]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+32], X30
	003 Move [X31+40], X23
	004 Move [X31+48], X22
	005 Move [X31+56], X21
	006 Move [X31+64], X20
	007 Move [X31+72], X19
	008 Move X21, 0x93D000
	009 Move X20, 0x677000
	010 Move W8, [X21+1036]
	011 Move X20, [X20+2216]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {37}
	017 Move X0, 0x6AC000
	018 Move X0, [X0+3688]
	019 Call 0x1C17CF4
	020 Move X0, 0x6AC000
	021 Move X0, [X0+3760]
	022 Call 0x1C17CF4
	023 Move X0, 0x677000
	024 Move X0, [X0+2216]
	025 Call 0x1C17CF4
	026 Move X0, 0x6B2000
	027 Move X0, [X0+2864]
	028 Call 0x1C17CF4
	029 Move X0, 0x6B2000
	030 Move X0, [X0+2872]
	031 Call 0x1C17CF4
	032 Move X0, 0x6B2000
	033 Move X0, [X0+2880]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X21+1036], W8
	037 Move X0, [X20]
	038 Move X23, 0x6AC000
	039 Move X22, 0x6AC000
	040 Move W8, [X0+224]
	041 Move X23, [X23+3760]
	042 Move X22, [X22+3688]
	043 Compare W8, 0
	044 JumpIfNotEqual {46}
	045 Call 0x1C17DFC
	046 Move X0, X31
	047 Call UniversalRenderPipeline.get_maxZBinWords
	048 Move X4, [X23]
	049 Move W1, W0
	050 Add X0, X31, 16
	051 Move W2, 4
	052 Move W3, 1
	053 Move [X31+16], X31
	054 Move [X31+24], X31
	055 Call NativeArray`1<UInt32>..ctor, X0, X1, X2, X3
	056 Move V0, [X31+1]
	057 Move X0, X31
	058 Move [X19+120], V0
	059 Call UniversalRenderPipeline.get_maxZBinWords
	060 Move X8, [X22]
	061 Move W21, W0
	062 Move X0, X8
	063 Call 0x1C17F10
	064 Add W8, W21, 3
	065 NotImplemented "Instruction CMP not yet implemented."
	066 NotImplemented "Instruction CSEL not yet implemented."
	067 NotImplemented "Instruction SBFM not yet implemented."
	068 Move W1, 512
	069 Move W3, 16
	070 Move X4, X31
	071 Move X20, X0
	072 Call GraphicsBuffer..ctor, X0, X1, X2, X3
	073 Move [X19+136], X20
	074 Compare X20, 0
	075 JumpIfEqual {126}
	076 Move X8, 0x6B2000
	077 Move X8, [X8+2880]
	078 Move X0, X20
	079 Move X2, X31
	080 Move X1, [X8]
	081 Call GraphicsBuffer.set_name, X0, X1
	082 Move X0, X31
	083 Call UniversalRenderPipeline.get_maxTileWords
	084 Move X4, [X23]
	085 Move W1, W0
	086 Add X0, X31, 0
	087 Move W2, 4
	088 Move W3, 1
	089 Move [X31], X31
	090 Move [X31+8], X31
	091 Call NativeArray`1<UInt32>..ctor, X0, X1, X2, X3
	092 Move V0, [X31]
	093 Move X0, X31
	094 Move [X19+9], V0
	095 Call UniversalRenderPipeline.get_maxTileWords
	096 Move X8, [X22]
	097 Move W21, W0
	098 Move X0, X8
	099 Call 0x1C17F10
	100 Add W8, W21, 3
	101 NotImplemented "Instruction CMP not yet implemented."
	102 NotImplemented "Instruction CSEL not yet implemented."
	103 NotImplemented "Instruction SBFM not yet implemented."
	104 Move W1, 512
	105 Move W3, 16
	106 Move X4, X31
	107 Move X20, X0
	108 Call GraphicsBuffer..ctor, X0, X1, X2, X3
	109 Move [X19+160], X20
	110 Compare X20, 0
	111 JumpIfEqual {126}
	112 Move X8, 0x6B2000
	113 Move X8, [X8+2872]
	114 Move X0, X20
	115 Move X2, X31
	116 Move X1, [X8]
	117 Call GraphicsBuffer.set_name, X0, X1
	118 Move X20, [X31+64]
	119 Move X19, [X31+72]
	120 Move X22, [X31+48]
	121 Move X21, [X31+56]
	122 Move X30, [X31+32]
	123 Move X23, [X31+40]
	124 Add X31, X31, 80
	125 Return 
	126 Call 0x1C17F20

Method: UnityEngine.Rendering.Universal.ReflectionProbeManager get_reflectionProbeManager()

Disassembly:
	0x03AA666C STR X31, [X31 + 0x450]
	0x03AA6670 LDR X1, [X20]
	0x03AA6674 ADD X0, X31, 0x450
	0x03AA6678 BL 0x2D1F048

ISIL:
	001 Add X1, X0, 176
	002 Move W2, 128
	003 Move X0, X8
	004 Call 0x3EB2AC0
	005 Return X0

Method: System.Int32 AlignByteCount(System.Int32 count, System.Int32 align)

Disassembly:
	0x03AA667C LDR X26, [X31 + 0x450]
	0x03AA6680 LDR X1, [X20]
	0x03AA6684 LDR V0, [X31 + 0x7D8]
	0x03AA6688 LDR V1, [X31 + 0x7C0]
	0x03AA668C STR W21, [X31 + 0x60]

ISIL:
	001 Add W8, W0, W1
	002 Subtract W8, W8, 1
	003 NotImplemented "Instruction SDIV not yet implemented."
	004 Multiply W0, W8, W1
	005 Return X0

Method: System.Void GetViewParams(UnityEngine.Camera camera, Unity.Mathematics.float4x4 viewToClip, out System.Single viewPlaneBot, out System.Single viewPlaneTop, out Unity.Mathematics.float4 viewToViewportScaleBias)

Disassembly:
	0x03AA6690 STR X31, [X31 + 0x350]
	0x03AA6694 ADD X0, X31, 0x350
	0x03AA6698 BL 0x2D1F048
	0x03AA669C STR X25, [X31 + 0x28]
	0x03AA66A0 ADRP X8, 0x6B1000
	0x03AA66A4 LDR X23, [X31 + 0x350]
	0x03AA66A8 LDR V0, [X31 + 0x7C8]
	0x03AA66AC LDR V1, [X31 + 0x7CC]
	0x03AA66B0 LDR V2, [X31 + 0x7D0]
	0x03AA66B4 LDR V3, [X31 + 0x7D4]
	0x03AA66B8 LDR V4, [X31 + 0x7B0]
	0x03AA66BC LDR V5, [X31 + 0x7B4]
	0x03AA66C0 LDR V6, [X31 + 0x7B8]
	0x03AA66C4 LDR V7, [X31 + 0x7BC]
	0x03AA66C8 LDR X8, [X8 + 0xB50]
	0x03AA66CC MOVI V16.2D, 0x0
	0x03AA66D0 STP V16, V16, [X31 + 0x200]
	0x03AA66D4 LDR X1, [X8]
	0x03AA66D8 ADD X0, X31, 0x200
	0x03AA66DC BL 0x2D1F548
	0x03AA66E0 LDP V0, V1, [X31 + 0x200]
	0x03AA66E4 STR V0, [X31 + 0x4B]
	0x03AA66E8 STR V1, [X31 + 0x4C]
	0x03AA66EC LDUR X29, [X19 + 0x5C]
	0x03AA66F0 MOV X0, X22
	0x03AA66F4 MOV X1, X31
	0x03AA66F8 BL 0x3C035DC
	0x03AA66FC MOV V8.16B, V0.16B
	0x03AA6700 MOV X0, X22
	0x03AA6704 MOV X1, X31
	0x03AA6708 STR X28, [X31 + 0x10]
	0x03AA670C STR W27, [X31 + 0x1C]
	0x03AA6710 BL 0x3C03928
	0x03AA6714 LDR W8, [X31 + 0x68]
	0x03AA6718 LDR X20, [X31 + 0x7E0]
	0x03AA671C LDR X21, [X31 + 0x7E8]
	0x03AA6720 SCVTF S2, S9
	0x03AA6724 SCVTF S0, W8
	0x03AA6728 LDR W8, [X31 + 0x64]
	0x03AA672C FDIV S9, S0, S2
	0x03AA6730 FDIV S11, S2, S0
	0x03AA6734 AND W28, W0, 0x1
	0x03AA6738 SCVTF S1, W8
	0x03AA673C ADRP X8, 0x6B1000
	0x03AA6740 LDR X8, [X8 + 0xB78]
	0x03AA6744 LDR V0, [X31 + 0x55]
	0x03AA6748 LDR W27, [X31 + 0x4C]
	0x03AA674C LDR W25, [X31 + 0x60]
	0x03AA6750 LDR X22, [X8]
	0x03AA6754 LDR X8, [X31 + 0x50]
	0x03AA6758 STR X24, [X31 + 0x920]
	0x03AA675C ADD X24, X31, 0x910
	0x03AA6760 ADD X0, X24, 0x38
	0x03AA6764 STR X8, [X31 + 0x910]
	0x03AA6768 LDR X8, [X31 + 0x40]
	0x03AA676C ADD X1, X31, 0x4D0
	0x03AA6770 MOVZ W2, 0x80
	0x03AA6774 FDIV S10, S1, S2
	0x03AA6778 STR X8, [X31 + 0x918]
	0x03AA677C LDR X8, [X31 + 0x38]
	0x03AA6780 FDIV S12, S2, S1
	0x03AA6784 STR W27, [X31 + 0x940]
	0x03AA6788 STR W25, [X31 + 0x944]
	0x03AA678C STR X8, [X31 + 0x928]
	0x03AA6790 STR V0, [X31 + 0x93]
	0x03AA6794 BL 0x3EB1AC0
	0x03AA6798 ADD X9, X31, 0xAB8
	0x03AA679C LDR V0, [X31 + 0x4B]
	0x03AA67A0 LDR V1, [X31 + 0x4C]
	0x03AA67A4 LDR V2, [X9]
	0x03AA67A8 LDUR V3, [X9 + 0xB]
	0x03AA67AC ADD X8, X24, 0x105
	0x03AA67B0 ADD X24, X31, 0x910
	0x03AA67B4 STR S9, [X31 + 0x9C8]
	0x03AA67B8 STR S10, [X31 + 0x9CC]
	0x03AA67BC STR S11, [X31 + 0x9D0]
	0x03AA67C0 STR S12, [X31 + 0x9D4]
	0x03AA67C4 STR X26, [X31 + 0x9D8]
	0x03AA67C8 STR X23, [X31 + 0x9E0]
	0x03AA67CC STUR V0, [X24 + 0xD8]
	0x03AA67D0 STUR V1, [X24 + 0xE8]
	0x03AA67D4 STR X29, [X31 + 0xA08]
	0x03AA67D8 STR S8, [X31 + 0xA10]
	0x03AA67DC STRB W28, [X31 + 0xA14]
	0x03AA67E0 STR V2, [X8]
	0x03AA67E4 STR V3, [X31 + 0xA2]
	0x03AA67E8 LDR W1, [X31 + 0x1C]

ISIL:
	001 Move [X31-80], D11
	002 Move [X31-72], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X30
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X22, X2
	012 Move X23, X1
	013 Move X0, X2
	014 Move W1, W31
	015 Move X2, X31
	016 Move X19, X5
	017 Move X20, X4
	018 Move X21, X3
	019 Call float4x4.get_Item, X0, X1
	020 Move W1, W31
	021 Move X2, X31
	022 Call float4.get_Item, X0, X1
	023 Move W1, 1
	024 Move X0, X22
	025 Move X2, X31
	026 Move V8, V0
	027 Call float4x4.get_Item, X0, X1
	028 Move W1, 1
	029 Move X2, X31
	030 Call float4.get_Item, X0, X1
	031 Compare X23, 0
	032 JumpIfEqual {102}
	033 Move V9, V0
	034 Move S0, 1
	035 Move X0, X23
	036 Move X1, X31
	037 NotImplemented "Instruction FDIV not yet implemented."
	038 Call Camera.get_orthographic, X0
	039 Move TEMP, X0
	040 And TEMP, TEMP, 1
	041 Compare TEMP, 1
	042 JumpIfNotEqual {60}
	043 Move W1, 3
	044 Move X0, X22
	045 Move X2, X31
	046 Call float4x4.get_Item, X0, X1
	047 Move W1, W31
	048 Move X2, X31
	049 Call float4.get_Item, X0, X1
	050 Move W1, 3
	051 Move X0, X22
	052 Move X2, X31
	053 Move V10, V0
	054 Call float4x4.get_Item, X0, X1
	055 Move W1, 1
	056 Move X2, X31
	057 Call float4.get_Item, X0, X1
	058 NotImplemented "Instruction FNEG not yet implemented."
	059 NotImplemented "Instruction FNEG not yet implemented."
	060 Move W1, 2
	061 Move X0, X22
	062 Move X2, X31
	063 Call float4x4.get_Item, X0, X1
	064 Move W1, W31
	065 Move X2, X31
	066 Call float4.get_Item, X0, X1
	067 Move W1, 2
	068 Move X0, X22
	069 Move X2, X31
	070 Move V10, V0
	071 Call float4x4.get_Item, X0, X1
	072 Move W1, 1
	073 Move X2, X31
	074 Call float4.get_Item, X0, X1
	075 Multiply S1, S11, S0
	076 Move S3, 0.5
	077 Subtract S2, S1, S11
	078 Add S1, S11, S1
	079 Multiply S6, S10, S3
	080 Multiply S0, S0, S3
	081 Multiply S4, S8, S3
	082 Multiply S5, S9, S3
	083 Move [X21], S2
	084 Move [X20], S1
	085 Subtract S1, S3, S6
	086 Subtract S0, S3, S0
	087 Move [X19], S4
	088 Move [X19+8], S5
	089 Move [X19+8], S1
	090 Move [X19+16], S0
	091 Move X20, [X31+64]
	092 Move X19, [X31+72]
	093 Move X22, [X31+48]
	094 Move X21, [X31+56]
	095 Move X30, [X31+32]
	096 Move X23, [X31+40]
	097 Move D9, [X31+16]
	098 Move D8, [X31+24]
	099 Move D11, [X31+80]
	100 Move D10, [X31+88]
	101 Return 
	102 Call 0x1C17F20

Method: System.Void PreSetup(ref UnityEngine.Rendering.Universal.RenderingData renderingData)

Disassembly:
	0x03AA67EC ADD X0, X31, 0x910
	0x03AA67F0 MOVZ W2, 0x1
	0x03AA67F4 MOV X3, X20
	0x03AA67F8 MOV X4, X21
	0x03AA67FC MOV X5, X22
	0x03AA6800 BL 0x21EEA28
	0x03AA6804 LDR V0, [X31 + 0x7A]
	0x03AA6808 LDR X8, [X31 + 0x20]
	0x03AA680C MOV X4, X1
	0x03AA6810 MOV X3, X0
	0x03AA6814 STR V0, [X31 + 0x49]
	0x03AA6818 LDR V1, [X8]
	0x03AA681C ADRP X8, 0x6B1000
	0x03AA6820 LDR X8, [X8 + 0xB70]
	0x03AA6824 LDR W11, [X31 + 0x6C]
	0x03AA6828 STR V1, [X31 + 0x4A]
	0x03AA682C LDR W10, [X19 + 0x60]
	0x03AA6830 LDR X5, [X8]
	0x03AA6834 LDR W8, [X19 + 0x130]
	0x03AA6838 LDUR X9, [X19 + 0x5C]
	0x03AA683C MUL W1, W10, W11
	0x03AA6840 STR V0, [X31 + 0x91]
	0x03AA6844 STR V1, [X31 + 0x92]
	0x03AA6848 STR W25, [X31 + 0x930]
	0x03AA684C STR W27, [X31 + 0x934]
	0x03AA6850 STR W8, [X31 + 0x938]
	0x03AA6854 STUR X9, [X24 + 0x2C]
	0x03AA6858 STR W31, [X31 + 0x944]
	0x03AA685C LDR X25, [X31 + 0x30]
	0x03AA6860 ADD X0, X31, 0x910
	0x03AA6864 MOVZ W2, 0x1
	0x03AA6868 BL 0x21EE988
	0x03AA686C MOV X21, X1
	0x03AA6870 LDR X1, [X31 + 0x10]
	0x03AA6874 ADRP X8, 0x6B1000
	0x03AA6878 LDR X8, [X8 + 0xB90]
	0x03AA687C MOV X20, X0
	0x03AA6880 LDR X3, [X8]
	0x03AA6884 LDR X2, [X31 + 0x28]
	0x03AA6888 ADD X0, X31, 0x7F0
	0x03AA688C BL 0x23F8804
	0x03AA6890 ADRP X8, 0x6B1000
	0x03AA6894 LDR X8, [X8 + 0xB88]
	0x03AA6898 MOV X22, X0
	0x03AA689C MOV X23, X1
	0x03AA68A0 LDR X3, [X8]
	0x03AA68A4 ADD X0, X31, 0x7A0
	0x03AA68A8 MOV X1, X20
	0x03AA68AC MOV X2, X21
	0x03AA68B0 BL 0x23D3ED0
	0x03AA68B4 MOV X2, X0
	0x03AA68B8 MOV X3, X1
	0x03AA68BC MOV X0, X22
	0x03AA68C0 MOV X1, X23
	0x03AA68C4 MOV X4, X31
	0x03AA68C8 BL 0x3BFDDD8
	0x03AA68CC STP X0, X1, [X19 + 0x68]
	0x03AA68D0 MOV X0, X31
	0x03AA68D4 BL 0x3BFDDB0
	0x03AA68D8 ADD X0, X31, 0x908
	0x03AA68DC MOV X1, X31
	0x03AA68E0 BL 0x39B1DB4
	0x03AA68E4 LDR X8, [X25 + 0x28]
	0x03AA68E8 LDR X9, [X31 + 0xAD8]
	0x03AA68EC CMP X8, X9
	0x03AA68F0 B.NE 0x3AA697C
	0x03AA68F4 ADD X31, X31, 0xAE0
	0x03AA68F8 LDP X20, X19, [X31 + 0x80]
	0x03AA68FC LDP X22, X21, [X31 + 0x70]
	0x03AA6900 LDP X24, X23, [X31 + 0x60]
	0x03AA6904 LDP X26, X25, [X31 + 0x50]
	0x03AA6908 LDP X28, X27, [X31 + 0x40]
	0x03AA690C LDP X29, X30, [X31 + 0x30]
	0x03AA6910 LDP D9, D8, [X31 + 0x20]
	0x03AA6914 LDP D11, D10, [X31 + 0x10]
	0x03AA6918 LDR V12, [X31], #0x90
	0x03AA691C RET
	0x03AA6920 ADRP X0, 0x64D000
	0x03AA6924 LDR X0, [X0 + 0x5B0]
	0x03AA6928 BL 0x1C16D08
	0x03AA692C BL 0x1C16F10
	0x03AA6930 MOV X19, X0
	0x03AA6934 ADRP X0, 0x6B1000
	0x03AA6938 LDR X0, [X0 + 0xBB0]
	0x03AA693C BL 0x1C16D08
	0x03AA6940 MOV X1, X0
	0x03AA6944 MOV X0, X19
	0x03AA6948 MOV X2, X31
	0x03AA694C BL 0x337DF1C
	0x03AA6950 ADRP X0, 0x6B1000
	0x03AA6954 LDR X0, [X0 + 0xBB8]
	0x03AA6958 BL 0x1C16D08
	0x03AA695C MOV X1, X0
	0x03AA6960 MOV X0, X19
	0x03AA6964 BL 0x1C16DEC
	0x03AA6968 BL 0x1C16F20
	0x03AA696C BL 0x1C16F20
	0x03AA6970 BL 0x1C16F20
	0x03AA6974 BL 0x1C16F20
	0x03AA6978 BL 0x1C16F20
	0x03AA697C BL 0x3EB1B20
	0x03AA6980 B 0x3AA6AB0
	0x03AA6984 B 0x3AA6AB0
	0x03AA6988 B 0x3AA6AB4
	0x03AA698C B 0x3AA6AB4
	0x03AA6990 B 0x3AA6AB0
	0x03AA6994 B 0x3AA6AB0
	0x03AA6998 B 0x3AA6AB0
	0x03AA699C B 0x3AA6AB0
	0x03AA69A0 B 0x3AA6AB0
	0x03AA69A4 B 0x3AA6AB0
	0x03AA69A8 B 0x3AA6AB0
	0x03AA69AC B 0x3AA6AB0
	0x03AA69B0 B 0x3AA6AB0
	0x03AA69B4 B 0x3AA6AB0
	0x03AA69B8 B 0x3AA6AB4
	0x03AA69BC B 0x3AA6AB4
	0x03AA69C0 B 0x3AA6AB4
	0x03AA69C4 B 0x3AA6AB4
	0x03AA69C8 B 0x3AA6AB4
	0x03AA69CC B 0x3AA6AB4
	0x03AA69D0 B 0x3AA6AB4
	0x03AA69D4 B 0x3AA6AB4
	0x03AA69D8 B 0x3AA6AB0
	0x03AA69DC B 0x3AA6AB0
	0x03AA69E0 B 0x3AA6AB0
	0x03AA69E4 B 0x3AA6AB0
	0x03AA69E8 B 0x3AA6AB0
	0x03AA69EC B 0x3AA6AB0
	0x03AA69F0 B 0x3AA6AB0
	0x03AA69F4 B 0x3AA6AB0
	0x03AA69F8 B 0x3AA6AB0
	0x03AA69FC B 0x3AA6AB0
	0x03AA6A00 B 0x3AA6AB0
	0x03AA6A04 B 0x3AA6AB0
	0x03AA6A08 B 0x3AA6AB0
	0x03AA6A0C B 0x3AA6AB0
	0x03AA6A10 B 0x3AA6AB0
	0x03AA6A14 B 0x3AA6AB0
	0x03AA6A18 B 0x3AA6AB0
	0x03AA6A1C B 0x3AA6AB0
	0x03AA6A20 B 0x3AA6AB0
	0x03AA6A24 B 0x3AA6AB0
	0x03AA6A28 B 0x3AA6AB0
	0x03AA6A2C B 0x3AA6AB0
	0x03AA6A30 B 0x3AA6AB0
	0x03AA6A34 B 0x3AA6AB0
	0x03AA6A38 B 0x3AA6AB0
	0x03AA6A3C B 0x3AA6AB0
	0x03AA6A40 B 0x3AA6AB0
	0x03AA6A44 B 0x3AA6AB0
	0x03AA6A48 B 0x3AA6AB0
	0x03AA6A4C B 0x3AA6AB0
	0x03AA6A50 B 0x3AA6AB0
	0x03AA6A54 B 0x3AA6AB0
	0x03AA6A58 B 0x3AA6AB0
	0x03AA6A5C B 0x3AA6AB0
	0x03AA6A60 B 0x3AA6AB0
	0x03AA6A64 B 0x3AA6AB0
	0x03AA6A68 B 0x3AA6AB0
	0x03AA6A6C B 0x3AA6AB0
	0x03AA6A70 B 0x3AA6AB0
	0x03AA6A74 B 0x3AA6AB0
	0x03AA6A78 B 0x3AA6AB4
	0x03AA6A7C B 0x3AA6AB4
	0x03AA6A80 B 0x3AA6AB4
	0x03AA6A84 B 0x3AA6AB4
	0x03AA6A88 B 0x3AA6AB4
	0x03AA6A8C B 0x3AA6AB4
	0x03AA6A90 B 0x3AA6AB4
	0x03AA6A94 B 0x3AA6AB4
	0x03AA6A98 B 0x3AA6AB4
	0x03AA6A9C B 0x3AA6AB4
	0x03AA6AA0 B 0x3AA6AB4
	0x03AA6AA4 B 0x3AA6AB0
	0x03AA6AA8 B 0x3AA6AB0
	0x03AA6AAC B 0x3AA6AB0
	0x03AA6AB0 LDR X25, [X31 + 0x30]
	0x03AA6AB4 MOV X19, X0
	0x03AA6AB8 CMP W1, 0x1
	0x03AA6ABC B.NE 0x3AA6AE8
	0x03AA6AC0 MOV X0, X19
	0x03AA6AC4 BL 0x3EB1AD0
	0x03AA6AC8 LDR X20, [X0]
	0x03AA6ACC BL 0x3EB1AE0
	0x03AA6AD0 ADD X0, X31, 0x908
	0x03AA6AD4 MOV X1, X31
	0x03AA6AD8 BL 0x39B1DB4
	0x03AA6ADC CBZ X20, 0x3AA68E4
	0x03AA6AE0 MOV X0, X20
	0x03AA6AE4 BL 0x1C16F18
	0x03AA6AE8 MOV X20, X31
	0x03AA6AEC B 0x3AA6AF4
	0x03AA6AF0 MOV X19, X0
	0x03AA6AF4 ADD X0, X31, 0x908
	0x03AA6AF8 MOV X1, X31
	0x03AA6AFC BL 0x39B1DB4
	0x03AA6B00 CBNZ X20, 0x3AA6B0C
	0x03AA6B04 MOV X0, X19
	0x03AA6B08 BL 0x1D2C690
	0x03AA6B0C MOV X0, X20
	0x03AA6B10 BL 0x1C16F18
	0x03AA6B14 BL 0x1990590
	0x03AA6B18 SUB X31, X31, 0x50
	0x03AA6B1C STR D8, [X31 + 0x20]
	0x03AA6B20 STP X30, X21, [X31 + 0x30]
	0x03AA6B24 STP X20, X19, [X31 + 0x40]
	0x03AA6B28 MOV X19, X1
	0x03AA6B2C MOV X1, X31
	0x03AA6B30 MOV X20, X0
	0x03AA6B34 BL 0x3C5C170
	0x03AA6B38 MOV W21, W0
	0x03AA6B3C MOV X0, X19
	0x03AA6B40 MOV X1, X31
	0x03AA6B44 BL 0x3C5C170
	0x03AA6B48 CMP W21, W0
	0x03AA6B4C B.GE 0x3AA6B58
	0x03AA6B50 MOVZ W0, 0x1
	0x03AA6B54 B 0x3AA6BE4
	0x03AA6B58 MOV X0, X20
	0x03AA6B5C MOV X1, X31
	0x03AA6B60 BL 0x3C5C170
	0x03AA6B64 MOV W21, W0
	0x03AA6B68 MOV X0, X19
	0x03AA6B6C MOV X1, X31
	0x03AA6B70 BL 0x3C5C170
	0x03AA6B74 CMP W21, W0
	0x03AA6B78 B.NE 0x3AA6BE0
	0x03AA6B7C ADD X8, X31, 0x8
	0x03AA6B80 MOV X0, X20
	0x03AA6B84 MOV X1, X31
	0x03AA6B88 BL 0x3C5C12C
	0x03AA6B8C LDP S0, S1, [X31 + 0x14]
	0x03AA6B90 LDR V2, [X31 + 0x1C]
	0x03AA6B94 ADD X8, X31, 0x8
	0x03AA6B98 MOV X0, X19
	0x03AA6B9C FMUL S0, S0, S0
	0x03AA6BA0 FMUL S1, S1, S1
	0x03AA6BA4 FADD S0, S0, S1
	0x03AA6BA8 FMUL S1, S2, S2
	0x03AA6BAC MOV X1, X31
	0x03AA6BB0 FADD S8, S0, S1
	0x03AA6BB4 BL 0x3C5C12C
	0x03AA6BB8 LDP S0, S1, [X31 + 0x14]
	0x03AA6BBC LDR V2, [X31 + 0x1C]
	0x03AA6BC0 FMUL S0, S0, S0
	0x03AA6BC4 FMUL S1, S1, S1
	0x03AA6BC8 FADD S0, S0, S1
	0x03AA6BCC FMUL S1, S2, S2
	0x03AA6BD0 FADD S0, S0, S1
	0x03AA6BD4 FCMP S8, S0
	0x03AA6BD8 CSET W0, GT
	0x03AA6BDC B 0x3AA6BE4
	0x03AA6BE0 MOV W0, W31
	0x03AA6BE4 LDP X20, X19, [X31 + 0x40]
	0x03AA6BE8 LDP X30, X21, [X31 + 0x30]
	0x03AA6BEC LDR V8, [X31 + 0x20]
	0x03AA6BF0 ADD X31, X31, 0x50
	0x03AA6BF4 RET
	0x03AA6BF8 SUB X31, X31, 0x80
	0x03AA6BFC STP X30, X1, [X31 + 0x20]
	0x03AA6C00 STP X28, X27, [X31 + 0x30]
	0x03AA6C04 STP X26, X25, [X31 + 0x40]
	0x03AA6C08 STP X24, X23, [X31 + 0x50]
	0x03AA6C0C STP X22, X21, [X31 + 0x60]
	0x03AA6C10 STP X20, X19, [X31 + 0x70]
	0x03AA6C14 ADRP X19, 0x93C000
	0x03AA6C18 ADRP X28, 0x6B1000
	0x03AA6C1C LDRB W8, [X19 + 0x40E]
	0x03AA6C20 LDR X28, [X28 + 0x180]
	0x03AA6C24 MOV X21, X2
	0x03AA6C28 MOV X20, X0
	0x03AA6C2C TBNZ X8, 0x0, 0x3AA6D64
	0x03AA6C30 ADRP X0, 0x675000
	0x03AA6C34 LDR X0, [X0 + 0x8F8]
	0x03AA6C38 BL 0x1C16CF4
	0x03AA6C3C ADRP X0, 0x6B1000
	0x03AA6C40 LDR X0, [X0 + 0x180]
	0x03AA6C44 BL 0x1C16CF4
	0x03AA6C48 ADRP X0, 0x6B1000
	0x03AA6C4C LDR X0, [X0 + 0xBC0]
	0x03AA6C50 BL 0x1C16CF4
	0x03AA6C54 ADRP X0, 0x6B1000
	0x03AA6C58 LDR X0, [X0 + 0xBC8]
	0x03AA6C5C BL 0x1C16CF4
	0x03AA6C60 ADRP X0, 0x6B0000
	0x03AA6C64 LDR X0, [X0 + 0xEF8]
	0x03AA6C68 BL 0x1C16CF4
	0x03AA6C6C ADRP X0, 0x6AA000
	0x03AA6C70 LDR X0, [X0 + 0xC80]
	0x03AA6C74 BL 0x1C16CF4
	0x03AA6C78 ADRP X0, 0x676000
	0x03AA6C7C LDR X0, [X0 + 0x8A8]
	0x03AA6C80 BL 0x1C16CF4
	0x03AA6C84 ADRP X0, 0x6B1000
	0x03AA6C88 LDR X0, [X0 + 0xBD0]
	0x03AA6C8C BL 0x1C16CF4
	0x03AA6C90 ADRP X0, 0x6AF000
	0x03AA6C94 LDR X0, [X0 + 0xF18]
	0x03AA6C98 BL 0x1C16CF4
	0x03AA6C9C ADRP X0, 0x6AF000
	0x03AA6CA0 LDR X0, [X0 + 0xF30]
	0x03AA6CA4 BL 0x1C16CF4
	0x03AA6CA8 ADRP X0, 0x6AF000
	0x03AA6CAC LDR X0, [X0 + 0xF40]
	0x03AA6CB0 BL 0x1C16CF4
	0x03AA6CB4 ADRP X0, 0x6B1000
	0x03AA6CB8 LDR X0, [X0 + 0xBD8]
	0x03AA6CBC BL 0x1C16CF4
	0x03AA6CC0 ADRP X0, 0x6B1000
	0x03AA6CC4 LDR X0, [X0 + 0xBE0]
	0x03AA6CC8 BL 0x1C16CF4
	0x03AA6CCC ADRP X0, 0x6AF000
	0x03AA6CD0 LDR X0, [X0 + 0xF48]
	0x03AA6CD4 BL 0x1C16CF4
	0x03AA6CD8 ADRP X0, 0x6AF000
	0x03AA6CDC LDR X0, [X0 + 0xF50]
	0x03AA6CE0 BL 0x1C16CF4
	0x03AA6CE4 ADRP X0, 0x6B1000
	0x03AA6CE8 LDR X0, [X0 + 0xBE8]
	0x03AA6CEC BL 0x1C16CF4
	0x03AA6CF0 ADRP X0, 0x6AF000
	0x03AA6CF4 LDR X0, [X0 + 0xF58]
	0x03AA6CF8 BL 0x1C16CF4
	0x03AA6CFC ADRP X0, 0x6B1000
	0x03AA6D00 LDR X0, [X0 + 0xBF0]
	0x03AA6D04 BL 0x1C16CF4
	0x03AA6D08 ADRP X0, 0x6AF000
	0x03AA6D0C LDR X0, [X0 + 0xF68]
	0x03AA6D10 BL 0x1C16CF4
	0x03AA6D14 ADRP X0, 0x6AF000
	0x03AA6D18 LDR X0, [X0 + 0xF70]
	0x03AA6D1C BL 0x1C16CF4
	0x03AA6D20 ADRP X0, 0x6B0000
	0x03AA6D24 LDR X0, [X0 + 0x170]
	0x03AA6D28 BL 0x1C16CF4
	0x03AA6D2C ADRP X0, 0x6B1000
	0x03AA6D30 LDR X0, [X0 + 0xBF8]
	0x03AA6D34 BL 0x1C16CF4
	0x03AA6D38 ADRP X0, 0x6AF000
	0x03AA6D3C LDR X0, [X0 + 0xF88]
	0x03AA6D40 BL 0x1C16CF4
	0x03AA6D44 ADRP X0, 0x6B1000
	0x03AA6D48 LDR X0, [X0 + 0xC00]
	0x03AA6D4C BL 0x1C16CF4
	0x03AA6D50 ADRP X0, 0x6B1000
	0x03AA6D54 LDR X0, [X0 + 0xC08]
	0x03AA6D58 BL 0x1C16CF4
	0x03AA6D5C MOVZ W8, 0x1
	0x03AA6D60 STRB W8, [X19 + 0x40E]
	0x03AA6D64 LDR X0, [X28]
	0x03AA6D68 STRB W31, [X31 + 0x18]
	0x03AA6D6C STRB W31, [X31 + 0x10]
	0x03AA6D70 LDR W27, [X21 + 0x22C]
	0x03AA6D74 LDRB W26, [X21 + 0x248]
	0x03AA6D78 LDR W8, [X0 + 0xE0]
	0x03AA6D7C LDR X19, [X21]
	0x03AA6D80 CBNZ W8, 0x3AA6D8C
	0x03AA6D84 BL 0x1C16DFC
	0x03AA6D88 LDR X0, [X28]
	0x03AA6D8C LDR X8, [X0 + 0xB8]
	0x03AA6D90 ADRP X25, 0x676000
	0x03AA6D94 ADD X0, X31, 0x18
	0x03AA6D98 MOV X1, X31
	0x03AA6D9C LDR X2, [X8]
	0x03AA6DA0 LDR X25, [X25 + 0x8A8]
	0x03AA6DA4 MOV X3, X31
	0x03AA6DA8 BL 0x39B1DB0
	0x03AA6DAC LDRB W8, [X20 + 0x51]
	0x03AA6DB0 CBZ W8, 0x3AA7030
	0x03AA6DB4 ADD X0, X20, 0xB0
	0x03AA6DB8 MOV X1, X19
	0x03AA6DBC MOV X2, X21
	0x03AA6DC0 MOV X3, X31
	0x03AA6DC4 BL 0x3A686B8
	0x03AA6DC8 LDR X0, [X28]
	0x03AA6DCC LDR W8, [X0 + 0xE0]
	0x03AA6DD0 CBNZ W8, 0x3AA6DDC
	0x03AA6DD4 BL 0x1C16DFC
	0x03AA6DD8 LDR X0, [X28]
	0x03AA6DDC LDR X8, [X0 + 0xB8]
	0x03AA6DE0 LDR X2, [X8 + 0x10]
	0x03AA6DE4 STRB W31, [X31 + 0x8]
	0x03AA6DE8 ADD X0, X31, 0x8
	0x03AA6DEC MOV X1, X31
	0x03AA6DF0 MOV X3, X31
	0x03AA6DF4 BL 0x39B1DB0
	0x03AA6DF8 LDRB W8, [X31 + 0x8]
	0x03AA6DFC ADD X0, X20, 0x68
	0x03AA6E00 STRB W8, [X31 + 0x10]
	0x03AA6E04 MOV X1, X31
	0x03AA6E08 BL 0x3BFDCAC
	0x03AA6E0C MOV X24, X31
	0x03AA6E10 MOVZ W22, 0x3
	0x03AA6E14 ADD X0, X31, 0x10
	0x03AA6E18 MOV X1, X31
	0x03AA6E1C BL 0x39B1DB4
	0x03AA6E20 CBNZ X24, 0x3AA73F0
	0x03AA6E24 CMP W22, 0x3
	0x03AA6E28 B.EQ 0x3AA6E30
	0x03AA6E2C CBNZ W22, 0x3AA73B8
	0x03AA6E30 LDR X0, [X28]
	0x03AA6E34 LDR W8, [X0 + 0xE0]
	0x03AA6E38 CBNZ W8, 0x3AA6E44
	0x03AA6E3C BL 0x1C16DFC
	0x03AA6E40 LDR X0, [X28]
	0x03AA6E44 LDR X8, [X0 + 0xB8]
	0x03AA6E48 LDR X2, [X8 + 0x18]
	0x03AA6E4C STRB W31, [X31]
	0x03AA6E50 ADD X0, X31, 0x0
	0x03AA6E54 MOV X1, X31
	0x03AA6E58 MOV X3, X31
	0x03AA6E5C BL 0x39B1DB0
	0x03AA6E60 LDRB W8, [X31]
	0x03AA6E64 ADRP X23, 0x6B1000
	0x03AA6E68 LDR X23, [X23 + 0xBC8]
	0x03AA6E6C ADD X0, X20, 0x78
	0x03AA6E70 STRB W8, [X31 + 0x10]
	0x03AA6E74 LDR X22, [X20 + 0x88]
	0x03AA6E78 LDR X2, [X23]
	0x03AA6E7C MOVZ W1, 0x4
	0x03AA6E80 BL 0x21334D8
	0x03AA6E84 CBZ X22, 0x3AA73F8
	0x03AA6E88 ADRP X24, 0x6B1000
	0x03AA6E8C LDR X24, [X24 + 0xBC0]
	0x03AA6E90 MOV X2, X0
	0x03AA6E94 MOV X4, X1
	0x03AA6E98 LDR X3, [X24]
	0x03AA6E9C MOV X0, X22
	0x03AA6EA0 MOV X1, X2
	0x03AA6EA4 MOV X2, X4
	0x03AA6EA8 BL 0x21E7BE0
	0x03AA6EAC LDR X22, [X20 + 0xA0]
	0x03AA6EB0 LDR X2, [X23]
	0x03AA6EB4 ADD X0, X20, 0x90
	0x03AA6EB8 MOVZ W1, 0x4
	0x03AA6EBC BL 0x21334D8
	0x03AA6EC0 CBZ X22, 0x3AA73FC
	0x03AA6EC4 LDR X3, [X24]
	0x03AA6EC8 MOV X2, X0
	0x03AA6ECC MOV X4, X1
	0x03AA6ED0 MOV X0, X22
	0x03AA6ED4 MOV X1, X2
	0x03AA6ED8 MOV X2, X4
	0x03AA6EDC BL 0x21E7BE0
	0x03AA6EE0 LDR X0, [X25]
	0x03AA6EE4 LDR X22, [X20 + 0x88]
	0x03AA6EE8 LDR W8, [X0 + 0xE0]
	0x03AA6EEC CBNZ W8, 0x3AA6EF4
	0x03AA6EF0 BL 0x1C16DFC
	0x03AA6EF4 MOV X0, X31
	0x03AA6EF8 BL 0x3A89440
	0x03AA6EFC CBZ X19, 0x3AA7408
	0x03AA6F00 ADRP X8, 0x6B1000
	0x03AA6F04 LDR X8, [X8 + 0xBF0]
	0x03AA6F08 UBFM W4, W0, 0x1E, 0x1D
	0x03AA6F0C LDR X2, [X8]
	0x03AA6F10 MOV X0, X19
	0x03AA6F14 MOV X1, X22
	0x03AA6F18 MOV W3, W31
	0x03AA6F1C MOV X5, X31
	0x03AA6F20 BL 0x3C4FE14
	0x03AA6F24 LDR X22, [X20 + 0xA0]
	0x03AA6F28 MOV X0, X31
	0x03AA6F2C BL 0x3A89448
	0x03AA6F30 ADRP X8, 0x6B1000
	0x03AA6F34 LDR X8, [X8 + 0xBF8]
	0x03AA6F38 UBFM W4, W0, 0x1E, 0x1D
	0x03AA6F3C LDR X2, [X8]
	0x03AA6F40 MOV X0, X19
	0x03AA6F44 MOV X1, X22
	0x03AA6F48 MOV W3, W31
	0x03AA6F4C MOV X5, X31
	0x03AA6F50 BL 0x3C4FE14
	0x03AA6F54 MOV X24, X31
	0x03AA6F58 ADD X0, X31, 0x10
	0x03AA6F5C MOV X1, X31
	0x03AA6F60 BL 0x39B1DB4
	0x03AA6F64 CBNZ X24, 0x3AA7400
	0x03AA6F68 LDR V2, [X20 + 0x13C]
	0x03AA6F6C LDR V3, [X20 + 0x54]
	0x03AA6F70 LDR V0, [X20 + 0x134]
	0x03AA6F74 LDR V1, [X20 + 0x138]
	0x03AA6F78 SCVTF S2, S2
	0x03AA6F7C SCVTF S3, S3
	0x03AA6F80 MOV X0, X31
	0x03AA6F84 BL 0x3892E28
	0x03AA6F88 CBZ X19, 0x3AA740C
	0x03AA6F8C ADRP X8, 0x6B1000
	0x03AA6F90 LDR X8, [X8 + 0xBE0]
	0x03AA6F94 LDR X1, [X8]
	0x03AA6F98 MOV X0, X19
	0x03AA6F9C MOV X2, X31
	0x03AA6FA0 BL 0x3C4FB00
	0x03AA6FA4 LDR V0, [X20 + 0x58]
	0x03AA6FA8 LDR V1, [X21 + 0x12C]
	0x03AA6FAC LDR V2, [X21 + 0x130]
	0x03AA6FB0 SCVTF S3, S0
	0x03AA6FB4 FDIV S0, S1, S3
	0x03AA6FB8 FDIV S1, S2, S3
	0x03AA6FBC MOV X0, X31
	0x03AA6FC0 BL 0x3883124
	0x03AA6FC4 LDR V2, [X20 + 0x5C]
	0x03AA6FC8 LDR V3, [X20 + 0x130]
	0x03AA6FCC SCVTF S2, S2
	0x03AA6FD0 SCVTF S3, S3
	0x03AA6FD4 MOV X0, X31
	0x03AA6FD8 BL 0x3892E28
	0x03AA6FDC ADRP X8, 0x6B1000
	0x03AA6FE0 LDR X8, [X8 + 0xC08]
	0x03AA6FE4 LDR X1, [X8]
	0x03AA6FE8 MOV X0, X19
	0x03AA6FEC MOV X2, X31
	0x03AA6FF0 BL 0x3C4FB00
	0x03AA6FF4 LDP W8, W9, [X20 + 0x5C]
	0x03AA6FF8 LDR V0, [X20 + 0x140]
	0x03AA6FFC MUL W8, W9, W8
	0x03AA7000 SCVTF S0, S0
	0x03AA7004 SCVTF S1, W8
	0x03AA7008 FMOV S2, W31
	0x03AA700C FMOV S3, W31
	0x03AA7010 MOV X0, X31
	0x03AA7014 BL 0x3892E28
	0x03AA7018 ADRP X8, 0x6B0000
	0x03AA701C LDR X8, [X8 + 0xBD8]
	0x03AA7020 LDR X1, [X8]
	0x03AA7024 MOV X0, X19
	0x03AA7028 MOV X2, X31
	0x03AA702C BL 0x3C4FB00
	0x03AA7030 ADD X22, X21, 0x228
	0x03AA7034 STR W31, [X20 + 0x18]
	0x03AA7038 MOV X0, X20
	0x03AA703C MOV X1, X19
	0x03AA7040 MOV X2, X22
	0x03AA7044 BL 0x3AA787C
	0x03AA7048 MOV X0, X20
	0x03AA704C MOV X1, X19
	0x03AA7050 MOV X2, X21
	0x03AA7054 BL 0x3AA79C0
	0x03AA7058 LDR X8, [X21 + 0x1D0]
	0x03AA705C CBZ X8, 0x3AA73E8
	0x03AA7060 LDRB W8, [X8 + 0x1A7]
	0x03AA7064 CBZ W8, 0x3AA7078
	0x03AA7068 LDRB W8, [X21 + 0x24D]
	0x03AA706C CBZ W8, 0x3AA7078
	0x03AA7070 MOVZ W24, 0x1
	0x03AA7074 B 0x3AA7080
	0x03AA7078 CMP W27, 0x0
	0x03AA707C CSET W24, GT
	0x03AA7080 ADRP X8, 0x6AE000
	0x03AA7084 ADRP X27, 0x674000
	0x03AA7088 LDR X8, [X8 + 0xF30]
	0x03AA708C LDR X27, [X27 + 0x8F8]
	0x03AA7090 ANDS W31, W24, W26, 0x0
	0x03AA7094 B.EQ 0x3AA70A4
	0x03AA7098 LDRB W9, [X20 + 0x51]
	0x03AA709C EOR W28, W9, 0x1
	0x03AA70A0 B 0x3AA70A8
	0x03AA70A4 MOV W28, W31
	0x03AA70A8 LDR X0, [X27]
	0x03AA70AC LDR X23, [X8]
	0x03AA70B0 LDR W9, [X0 + 0xE0]
	0x03AA70B4 CBNZ W9, 0x3AA70BC
	0x03AA70B8 BL 0x1C16DFC
	0x03AA70BC CMP W28, 0x0
	0x03AA70C0 CSET W2, NE
	0x03AA70C4 MOV X0, X19
	0x03AA70C8 MOV X1, X23
	0x03AA70CC MOV X3, X31
	0x03AA70D0 BL 0x39E9618
	0x03AA70D4 ADRP X8, 0x6AE000
	0x03AA70D8 LDR X8, [X8 + 0xF50]
	0x03AA70DC MOV W28, W31
	0x03AA70E0 CBNZ W26, 0x3AA70F0
	0x03AA70E4 CBZ W24, 0x3AA70F0
	0x03AA70E8 LDRB W9, [X20 + 0x51]
	0x03AA70EC EOR W28, W9, 0x1
	0x03AA70F0 LDR X0, [X27]
	0x03AA70F4 LDR X23, [X8]
	0x03AA70F8 LDR W9, [X0 + 0xE0]
	0x03AA70FC CBNZ W9, 0x3AA7104
	0x03AA7100 BL 0x1C16DFC
	0x03AA7104 CMP W28, 0x0
	0x03AA7108 CSET W2, NE
	0x03AA710C MOV X0, X19
	0x03AA7110 MOV X1, X23
	0x03AA7114 MOV X3, X31
	0x03AA7118 BL 0x39E9618
	0x03AA711C ADRP X8, 0x6AE000
	0x03AA7120 LDR X8, [X8 + 0xF40]
	0x03AA7124 LDRB W2, [X20 + 0x51]
	0x03AA7128 LDR X1, [X8]
	0x03AA712C MOV X0, X19
	0x03AA7130 MOV X3, X31
	0x03AA7134 BL 0x39E9618
	0x03AA7138 LDRB W8, [X21 + 0x249]
	0x03AA713C CBZ W8, 0x3AA7174
	0x03AA7140 LDR W8, [X20 + 0x18]
	0x03AA7144 CMP W8, 0x1
	0x03AA7148 CSET W23, EQ
	0x03AA714C B.NE 0x3AA7184
	0x03AA7150 MOV X0, X31
	0x03AA7154 BL 0x3C11188
	0x03AA7158 LDRB W8, [X21 + 0x249]
	0x03AA715C CMP W0, 0x0
	0x03AA7160 CSET W26, EQ
	0x03AA7164 CBNZ W8, 0x3AA7188
	0x03AA7168 MOV W24, W31
	0x03AA716C MOVZ W23, 0x1
	0x03AA7170 B 0x3AA7194
	0x03AA7174 MOV W26, W31
	0x03AA7178 MOV W23, W31
	0x03AA717C MOV W24, W31
	0x03AA7180 B 0x3AA7194
	0x03AA7184 MOV W26, W31
	0x03AA7188 LDR W8, [X20 + 0x18]
	0x03AA718C CMP W8, 0x2
	0x03AA7190 CSET W24, EQ
	0x03AA7194 LDR X0, [X27]
	0x03AA7198 LDR W8, [X0 + 0xE0]
	0x03AA719C CBNZ W8, 0x3AA71A4
	0x03AA71A0 BL 0x1C16DFC
	0x03AA71A4 ADRP X8, 0x6AE000
	0x03AA71A8 LDR X8, [X8 + 0xF68]
	0x03AA71AC ORR W2, W24, W26, 0x0
	0x03AA71B0 LDR X1, [X8]
	0x03AA71B4 MOV X0, X19
	0x03AA71B8 MOV X3, X31
	0x03AA71BC BL 0x39E9618
	0x03AA71C0 ADRP X8, 0x6AE000
	0x03AA71C4 LDR X8, [X8 + 0xF58]
	0x03AA71C8 LDR X1, [X8]
	0x03AA71CC MOV X0, X19
	0x03AA71D0 MOV W2, W23
	0x03AA71D4 MOV X3, X31
	0x03AA71D8 BL 0x39E9618
	0x03AA71DC ADRP X8, 0x6AE000
	0x03AA71E0 LDR X8, [X8 + 0xF48]
	0x03AA71E4 LDR X1, [X8]
	0x03AA71E8 MOV X0, X19
	0x03AA71EC MOV W2, W24
	0x03AA71F0 MOV X3, X31
	0x03AA71F4 BL 0x39E9618
	0x03AA71F8 ADRP X8, 0x6AE000
	0x03AA71FC LDR X8, [X8 + 0xF18]
	0x03AA7200 LDRB W2, [X21 + 0x24B]
	0x03AA7204 LDR X1, [X8]
	0x03AA7208 MOV X0, X19
	0x03AA720C MOV X3, X31
	0x03AA7210 BL 0x39E9618
	0x03AA7214 ADRP X8, 0x6AE000
	0x03AA7218 LDR X8, [X8 + 0xF70]
	0x03AA721C LDRB W2, [X21 + 0x24A]
	0x03AA7220 LDR X1, [X8]
	0x03AA7224 MOV X0, X19
	0x03AA7228 MOV X3, X31
	0x03AA722C BL 0x39E9618
	0x03AA7230 LDR X0, [X25]
	0x03AA7234 LDR W8, [X0 + 0xE0]
	0x03AA7238 CBNZ W8, 0x3AA7240
	0x03AA723C BL 0x1C16DFC
	0x03AA7240 MOV X0, X31
	0x03AA7244 BL 0x3A8AB60
	0x03AA7248 CBZ X0, 0x3AA73EC
	0x03AA724C ADRP X8, 0x6AF000
	0x03AA7250 LDR X8, [X8 + 0xEF8]
	0x03AA7254 LDR W23, [X0 + 0x78]
	0x03AA7258 LDR X8, [X8]
	0x03AA725C LDR W9, [X8 + 0xE0]
	0x03AA7260 CBNZ W9, 0x3AA726C
	0x03AA7264 MOV X0, X8
	0x03AA7268 BL 0x1C16DFC
	0x03AA726C MOV W0, W23
	0x03AA7270 MOV X1, X31
	0x03AA7274 BL 0x3A94618
	0x03AA7278 ADRP X8, 0x6B0000
	0x03AA727C LDR X8, [X8 + 0xBE8]
	0x03AA7280 MOV W23, W0
	0x03AA7284 CMP W0, 0x2
	0x03AA7288 CSET W2, EQ
	0x03AA728C LDR X1, [X8]
	0x03AA7290 MOV X0, X19
	0x03AA7294 MOV X3, X31
	0x03AA7298 BL 0x39E9618
	0x03AA729C ADRP X8, 0x6B0000
	0x03AA72A0 LDR X8, [X8 + 0xC00]
	0x03AA72A4 CMP W23, 0x1
	0x03AA72A8 CSET W2, EQ
	0x03AA72AC LDR X1, [X8]
	0x03AA72B0 MOV X0, X19
	0x03AA72B4 MOV X3, X31
	0x03AA72B8 BL 0x39E9618
	0x03AA72BC ADRP X8, 0x6AE000
	0x03AA72C0 LDR X8, [X8 + 0xF88]
	0x03AA72C4 LDRB W9, [X21 + 0x24C]
	0x03AA72C8 LDR X23, [X8]
	0x03AA72CC CBZ W9, 0x3AA72FC
	0x03AA72D0 LDR X0, [X27]
	0x03AA72D4 LDR X21, [X21 + 0xD8]
	0x03AA72D8 LDR W8, [X0 + 0xE0]
	0x03AA72DC CBNZ W8, 0x3AA72E4
	0x03AA72E0 BL 0x1C16DFC
	0x03AA72E4 MOV X0, X21
	0x03AA72E8 MOV X1, X31
	0x03AA72EC BL 0x39E9BD8
	0x03AA72F0 ORN W8, W31, W0, 0x0
	0x03AA72F4 AND W21, W8, 0x1
	0x03AA72F8 B 0x3AA7300
	0x03AA72FC MOV W21, W31
	0x03AA7300 LDR X0, [X27]
	0x03AA7304 LDR W8, [X0 + 0xE0]
	0x03AA7308 CBNZ W8, 0x3AA7310
	0x03AA730C BL 0x1C16DFC
	0x03AA7310 MOV X0, X19
	0x03AA7314 MOV X1, X23
	0x03AA7318 MOV W2, W21
	0x03AA731C MOV X3, X31
	0x03AA7320 BL 0x39E9618
	0x03AA7324 LDR X0, [X20 + 0xA8]
	0x03AA7328 CBZ X0, 0x3AA7344
	0x03AA732C LDR X1, [X31 + 0x28]
	0x03AA7330 MOV X2, X19
	0x03AA7334 MOV X3, X22
	0x03AA7338 MOV X4, X31
	0x03AA733C BL 0x3A5484C
	0x03AA7340 B 0x3AA7370
	0x03AA7344 LDR X0, [X27]
	0x03AA7348 LDR W8, [X0 + 0xE0]
	0x03AA734C CBNZ W8, 0x3AA7354
	0x03AA7350 BL 0x1C16DFC
	0x03AA7354 ADRP X8, 0x6AF000
	0x03AA7358 LDR X8, [X8 + 0x170]
	0x03AA735C LDR X1, [X8]
	0x03AA7360 MOV X0, X19
	0x03AA7364 MOV W2, W31
	0x03AA7368 MOV X3, X31
	0x03AA736C BL 0x39E9618
	0x03AA7370 ADD X0, X31, 0x18
	0x03AA7374 MOV X1, X31
	0x03AA7378 BL 0x39B1DB4
	0x03AA737C ADRP X8, 0x6A9000
	0x03AA7380 LDR X8, [X8 + 0xC80]
	0x03AA7384 LDR X0, [X8]
	0x03AA7388 LDR W8, [X0 + 0xE0]
	0x03AA738C CBNZ W8, 0x3AA7394
	0x03AA7390 BL 0x1C16DFC
	0x03AA7394 ADD X0, X31, 0x28
	0x03AA7398 MOV X1, X19
	0x03AA739C MOV X2, X31
	0x03AA73A0 BL 0x3C58FE4
	0x03AA73A4 CBZ X19, 0x3AA73E4
	0x03AA73A8 MOV X0, X19
	0x03AA73AC MOV X1, X31
	0x03AA73B0 BL 0x3C4C310
	0x03AA73B4 B 0x3AA73C4
	0x03AA73B8 ADD X0, X31, 0x18
	0x03AA73BC MOV X1, X31
	0x03AA73C0 BL 0x39B1DB4
	0x03AA73C4 LDP X20, X19, [X31 + 0x70]
	0x03AA73C8 LDP X22, X21, [X31 + 0x60]
	0x03AA73CC LDP X24, X23, [X31 + 0x50]
	0x03AA73D0 LDP X26, X25, [X31 + 0x40]
	0x03AA73D4 LDP X28, X27, [X31 + 0x30]
	0x03AA73D8 LDR X30, [X31 + 0x20]
	0x03AA73DC ADD X31, X31, 0x80
	0x03AA73E0 RET
	0x03AA73E4 BL 0x1C16F20
	0x03AA73E8 BL 0x1C16F20
	0x03AA73EC BL 0x1C16F20
	0x03AA73F0 MOV X0, X24
	0x03AA73F4 BL 0x1C16F18
	0x03AA73F8 BL 0x1C16F20
	0x03AA73FC BL 0x1C16F20
	0x03AA7400 MOV X0, X24
	0x03AA7404 BL 0x1C16F18
	0x03AA7408 BL 0x1C16F20
	0x03AA740C BL 0x1C16F20
	0x03AA7410 B 0x3AA74E4
	0x03AA7414 B 0x3AA753C
	0x03AA7418 B 0x3AA753C
	0x03AA741C B 0x3AA753C
	0x03AA7420 B 0x3AA753C
	0x03AA7424 B 0x3AA753C
	0x03AA7428 B 0x3AA753C
	0x03AA742C B 0x3AA753C
	0x03AA7430 B 0x3AA753C
	0x03AA7434 B 0x3AA753C
	0x03AA7438 B 0x3AA753C
	0x03AA743C B 0x3AA74E4
	0x03AA7440 B 0x3AA74E4
	0x03AA7444 B 0x3AA753C
	0x03AA7448 B 0x3AA753C
	0x03AA744C B 0x3AA753C
	0x03AA7450 MOV X22, X1
	0x03AA7454 CMP W22, 0x1
	0x03AA7458 MOV X23, X0
	0x03AA745C B.NE 0x3AA7478
	0x03AA7460 MOV X0, X23
	0x03AA7464 BL 0x3EB1AD0
	0x03AA7468 LDR X24, [X0]
	0x03AA746C BL 0x3EB1AE0
	0x03AA7470 MOV W22, W31
	0x03AA7474 B 0x3AA6E14
	0x03AA7478 MOV X24, X31
	0x03AA747C ADD X0, X31, 0x10
	0x03AA7480 MOV X1, X31
	0x03AA7484 BL 0x39B1DB4
	0x03AA7488 CBZ X24, 0x3AA7544
	0x03AA748C MOV X0, X24
	0x03AA7490 BL 0x1C16F18
	0x03AA7494 MOV X22, X1
	0x03AA7498 MOV X23, X0
	0x03AA749C B 0x3AA747C
	0x03AA74A0 B 0x3AA753C
	0x03AA74A4 B 0x3AA753C
	0x03AA74A8 B 0x3AA753C
	0x03AA74AC B 0x3AA753C
	0x03AA74B0 B 0x3AA753C
	0x03AA74B4 B 0x3AA753C
	0x03AA74B8 B 0x3AA753C
	0x03AA74BC B 0x3AA753C
	0x03AA74C0 B 0x3AA753C
	0x03AA74C4 B 0x3AA74E4
	0x03AA74C8 B 0x3AA753C
	0x03AA74CC B 0x3AA753C
	0x03AA74D0 B 0x3AA74E4
	0x03AA74D4 B 0x3AA74E4
	0x03AA74D8 B 0x3AA753C
	0x03AA74DC B 0x3AA753C
	0x03AA74E0 B 0x3AA753C
	0x03AA74E4 MOV X22, X1
	0x03AA74E8 MOV X23, X0
	0x03AA74EC CMP W22, 0x1
	0x03AA74F0 B.NE 0x3AA7508
	0x03AA74F4 MOV X0, X23
	0x03AA74F8 BL 0x3EB1AD0
	0x03AA74FC LDR X24, [X0]
	0x03AA7500 BL 0x3EB1AE0
	0x03AA7504 B 0x3AA6F58
	0x03AA7508 MOV X24, X31
	0x03AA750C ADD X0, X31, 0x10
	0x03AA7510 MOV X1, X31
	0x03AA7514 BL 0x39B1DB4
	0x03AA7518 CBZ X24, 0x3AA7544
	0x03AA751C MOV X0, X24
	0x03AA7520 BL 0x1C16F18
	0x03AA7524 MOV X22, X1
	0x03AA7528 MOV X23, X0
	0x03AA752C B 0x3AA750C
	0x03AA7530 B 0x3AA753C
	0x03AA7534 B 0x3AA753C
	0x03AA7538 B 0x3AA753C
	0x03AA753C MOV X22, X1
	0x03AA7540 MOV X23, X0
	0x03AA7544 CMP W22, 0x1
	0x03AA7548 B.NE 0x3AA7574
	0x03AA754C MOV X0, X23
	0x03AA7550 BL 0x3EB1AD0
	0x03AA7554 LDR X20, [X0]
	0x03AA7558 BL 0x3EB1AE0
	0x03AA755C ADD X0, X31, 0x18
	0x03AA7560 MOV X1, X31
	0x03AA7564 BL 0x39B1DB4
	0x03AA7568 CBZ X20, 0x3AA737C
	0x03AA756C MOV X0, X20
	0x03AA7570 BL 0x1C16F18
	0x03AA7574 MOV X20, X31
	0x03AA7578 B 0x3AA7580
	0x03AA757C MOV X23, X0
	0x03AA7580 ADD X0, X31, 0x18
	0x03AA7584 MOV X1, X31
	0x03AA7588 BL 0x39B1DB4
	0x03AA758C CBNZ X20, 0x3AA7598
	0x03AA7590 MOV X0, X23
	0x03AA7594 BL 0x1D2C690
	0x03AA7598 MOV X0, X20
	0x03AA759C BL 0x1C16F18
	0x03AA75A0 BL 0x1990590
	0x03AA75A4 STP X30, X21, [X31 - 0x20]!
	0x03AA75A8 STP X20, X19, [X31 + 0x10]
	0x03AA75AC MOV X19, X2
	0x03AA75B0 ADD X2, X2, 0x228
	0x03AA75B4 MOV X20, X1
	0x03AA75B8 MOV X21, X0
	0x03AA75BC STR W31, [X0 + 0x18]
	0x03AA75C0 BL 0x3AA787C
	0x03AA75C4 MOV X1, X20
	0x03AA75C8 MOV X2, X19
	0x03AA75CC LDP X20, X19, [X31 + 0x10]
	0x03AA75D0 MOV X0, X21
	0x03AA75D4 LDP X30, X21, [X31], #0x20
	0x03AA75D8 B 0x3AA79C0
	0x03AA75DC STR X30, [X31 - 0x20]!
	0x03AA75E0 STP X20, X19, [X31 + 0x10]
	0x03AA75E4 ADRP X20, 0x93B000
	0x03AA75E8 LDRB W8, [X20 + 0x40F]
	0x03AA75EC MOV X19, X0
	0x03AA75F0 TBNZ X8, 0x0, 0x3AA7608
	0x03AA75F4 ADRP X0, 0x6AE000
	0x03AA75F8 LDR X0, [X0 + 0xB68]
	0x03AA75FC BL 0x1C16CF4
	0x03AA7600 MOVZ W8, 0x1
	0x03AA7604 STRB W8, [X20 + 0x40F]
	0x03AA7608 LDRB W8, [X19 + 0x51]
	0x03AA760C CBZ W8, 0x3AA7678
	0x03AA7610 ADRP X20, 0x6AE000
	0x03AA7614 LDR X20, [X20 + 0xB68]
	0x03AA7618 ADD X0, X19, 0x68
	0x03AA761C MOV X1, X31
	0x03AA7620 BL 0x3BFDCAC
	0x03AA7624 LDR X1, [X20]
	0x03AA7628 ADD X0, X19, 0x78
	0x03AA762C BL 0x23EC928
	0x03AA7630 LDR X1, [X20]
	0x03AA7634 ADD X0, X19, 0x90
	0x03AA7638 BL 0x23EC928
	0x03AA763C LDR X0, [X19 + 0x88]
	0x03AA7640 CBZ X0, 0x3AA7684
	0x03AA7644 MOV X1, X31
	0x03AA7648 BL 0x3C16130
	0x03AA764C LDR X0, [X19 + 0xA0]
	0x03AA7650 STR X31, [X19 + 0x88]
	0x03AA7654 CBZ X0, 0x3AA7684
	0x03AA7658 MOV X1, X31
	0x03AA765C BL 0x3C16130
	0x03AA7660 ADD X0, X19, 0xB0
	0x03AA7664 STR X31, [X19 + 0xA0]
	0x03AA7668 LDP X20, X19, [X31 + 0x10]
	0x03AA766C MOV X1, X31
	0x03AA7670 LDR X30, [X31], #0x20
	0x03AA7674 B 0x3A6A09C
	0x03AA7678 LDP X20, X19, [X31 + 0x10]
	0x03AA767C LDR X30, [X31], #0x20
	0x03AA7680 RET
	0x03AA7684 BL 0x1C16F20
	0x03AA7688 SUB X31, X31, 0x90
	0x03AA768C STP X29, X30, [X31 + 0x30]
	0x03AA7690 STP X28, X27, [X31 + 0x40]
	0x03AA7694 STP X26, X25, [X31 + 0x50]
	0x03AA7698 STP X24, X23, [X31 + 0x60]
	0x03AA769C STP X22, X21, [X31 + 0x70]
	0x03AA76A0 STP X20, X19, [X31 + 0x80]
	0x03AA76A4 STR X0, [X31 + 0x10]
	0x03AA76A8 ADRP X28, 0x93B000
	0x03AA76AC ADRP X9, 0x675000
	0x03AA76B0 LDP X24, X29, [X31 + 0x98]
	0x03AA76B4 LDRB W8, [X28 + 0x410]
	0x03AA76B8 LDR X27, [X31 + 0x90]
	0x03AA76BC LDR X9, [X9 + 0x8A8]
	0x03AA76C0 MOV X23, X7
	0x03AA76C4 MOV X19, X6
	0x03AA76C8 MOV X25, X5
	0x03AA76CC MOV X26, X4
	0x03AA76D0 MOV W20, W3
	0x03AA76D4 MOV X21, X2
	0x03AA76D8 MOV X22, X1
	0x03AA76DC TBNZ X8, 0x0, 0x3AA7714
	0x03AA76E0 ADRP X0, 0x6AF000
	0x03AA76E4 LDR X0, [X0 + 0x1B8]
	0x03AA76E8 BL 0x1C16CF4
	0x03AA76EC ADRP X0, 0x64C000
	0x03AA76F0 LDR X0, [X0 + 0x598]
	0x03AA76F4 BL 0x1C16CF4
	0x03AA76F8 ADRP X0, 0x675000
	0x03AA76FC LDR X0, [X0 + 0x8A8]
	0x03AA7700 BL 0x1C16CF4
	0x03AA7704 ADRP X9, 0x675000
	0x03AA7708 LDR X9, [X9 + 0x8A8]
	0x03AA770C MOVZ W8, 0x1
	0x03AA7710 STRB W8, [X28 + 0x410]
	0x03AA7714 LDR X0, [X9]
	0x03AA7718 LDR W8, [X0 + 0xE0]
	0x03AA771C CBNZ W8, 0x3AA7724
	0x03AA7720 BL 0x1C16DFC
	0x03AA7724 MOV X0, X22
	0x03AA7728 MOV X1, X21
	0x03AA772C MOV W2, W20
	0x03AA7730 MOV X3, X26
	0x03AA7734 MOV X4, X25
	0x03AA7738 MOV X5, X19
	0x03AA773C MOV X6, X23
	0x03AA7740 MOV X7, X27
	0x03AA7744 STR X31, [X31]
	0x03AA7748 BL 0x3A919B4
	0x03AA774C STR W31, [X24]
	0x03AA7750 STRB W31, [X29]
	0x03AA7754 TBNZ X20, 0x1F, 0x3AA7858
	0x03AA7758 ADRP X8, 0x6AF000
	0x03AA775C LDR X8, [X8 + 0x1B8]
	0x03AA7760 MOV X0, X22
	0x03AA7764 MOV X1, X21
	0x03AA7768 MOV W2, W20
	0x03AA776C LDR X3, [X8]
	0x03AA7770 BL 0x22222C0
	0x03AA7774 MOV X1, X31
	0x03AA7778 MOV X21, X0
	0x03AA777C BL 0x3C5BBF0
	0x03AA7780 CBZ X0, 0x3AA7878
	0x03AA7784 ADRP X19, 0x64C000
	0x03AA7788 LDR X19, [X19 + 0x598]
	0x03AA778C ADD X8, X31, 0x18
	0x03AA7790 MOV X1, X31
	0x03AA7794 MOV X20, X0
	0x03AA7798 BL 0x3C16AA0
	0x03AA779C LDP W23, W22, [X31 + 0x20]
	0x03AA77A0 LDR W8, [X31 + 0x28]
	0x03AA77A4 CMP W23, 0x1
	0x03AA77A8 CSET W9, EQ
	0x03AA77AC CMP W22, 0x1
	0x03AA77B0 AND W8, W8, W9, 0x0
	0x03AA77B4 CSET W9, EQ
	0x03AA77B8 AND W8, W8, W9, 0x0
	0x03AA77BC STRB W8, [X29]
	0x03AA77C0 LDR X0, [X19]
	0x03AA77C4 LDR W8, [X0 + 0xE0]
	0x03AA77C8 CBNZ W8, 0x3AA77D0
	0x03AA77CC BL 0x1C16DFC
	0x03AA77D0 MOV X0, X20
	0x03AA77D4 MOV X1, X31
	0x03AA77D8 MOV X2, X31
	0x03AA77DC BL 0x3C3883C
	0x03AA77E0 TBNZ X0, 0x0, 0x3AA7858
	0x03AA77E4 CMP W23, 0x1
	0x03AA77E8 B.NE 0x3AA7838
	0x03AA77EC MOV X0, X21
	0x03AA77F0 MOV X1, X31
	0x03AA77F4 BL 0x3C5BBF0
	0x03AA77F8 CBZ X0, 0x3AA7878
	0x03AA77FC MOV X1, X31
	0x03AA7800 BL 0x3C16B90
	0x03AA7804 CBZ W0, 0x3AA7838
	0x03AA7808 LDR X8, [X31 + 0x10]
	0x03AA780C LDR W8, [X8 + 0x18]
	0x03AA7810 CBNZ W8, 0x3AA7838
	0x03AA7814 CMP W22, 0x2
	0x03AA7818 B.EQ 0x3AA782C
	0x03AA781C CMP W22, 0x1
	0x03AA7820 B.NE 0x3AA7838
	0x03AA7824 MOVZ W8, 0x2
	0x03AA7828 B 0x3AA7830
	0x03AA782C MOVZ W8, 0x1
	0x03AA7830 LDR X9, [X31 + 0x10]
	0x03AA7834 STR W8, [X9 + 0x18]
	0x03AA7838 MOV X0, X20
	0x03AA783C MOV X1, X31
	0x03AA7840 BL 0x3A82118
	0x03AA7844 CBZ X0, 0x3AA7878
	0x03AA7848 LDR W0, [X0 + 0x38]
	0x03AA784C MOV X1, X31
	0x03AA7850 BL 0x3A6FDA8
	0x03AA7854 STR W0, [X24]
	0x03AA7858 LDP X20, X19, [X31 + 0x80]
	0x03AA785C LDP X22, X21, [X31 + 0x70]
	0x03AA7860 LDP X24, X23, [X31 + 0x60]
	0x03AA7864 LDP X26, X25, [X31 + 0x50]
	0x03AA7868 LDP X28, X27, [X31 + 0x40]
	0x03AA786C LDP X29, X30, [X31 + 0x30]
	0x03AA7870 ADD X31, X31, 0x90
	0x03AA7874 RET
	0x03AA7878 BL 0x1C16F20
	0x03AA787C SUB X31, X31, 0xA0
	0x03AA7880 STR X30, [X31 + 0x70]
	0x03AA7884 STP X22, X21, [X31 + 0x80]
	0x03AA7888 STP X20, X19, [X31 + 0x90]
	0x03AA788C ADRP X22, 0x93B000
	0x03AA7890 LDRB W8, [X22 + 0x411]
	0x03AA7894 MOV X21, X2
	0x03AA7898 MOV X19, X1
	0x03AA789C MOV X20, X0
	0x03AA78A0 TBNZ X8, 0x0, 0x3AA78B8
	0x03AA78A4 ADRP X0, 0x6B0000
	0x03AA78A8 LDR X0, [X0 + 0xAD8]
	0x03AA78AC BL 0x1C16CF4
	0x03AA78B0 MOVZ W8, 0x1
	0x03AA78B4 STRB W8, [X22 + 0x411]
	0x03AA78B8 STP X31, X31, [X31 + 0x60]
	0x03AA78BC STP X31, X31, [X31 + 0x50]
	0x03AA78C0 STP X31, X31, [X31 + 0x40]
	0x03AA78C4 STP X31, X31, [X31 + 0x30]
	0x03AA78C8 STP X31, X31, [X31 + 0x20]
	0x03AA78CC STR W31, [X31 + 0x7C]
	0x03AA78D0 STRB W31, [X31 + 0x78]
	0x03AA78D4 LDP X1, X2, [X21 + 0x10]
	0x03AA78D8 LDR W3, [X21]
	0x03AA78DC ADD X8, X31, 0x78
	0x03AA78E0 ADD X9, X31, 0x7C
	0x03AA78E4 ADD X10, X31, 0x20
	0x03AA78E8 ADD X4, X31, 0x60
	0x03AA78EC ADD X5, X31, 0x50
	0x03AA78F0 ADD X6, X31, 0x40
	0x03AA78F4 ADD X7, X31, 0x30
	0x03AA78F8 MOV X0, X20
	0x03AA78FC STP X9, X8, [X31 + 0x8]
	0x03AA7900 STR X10, [X31]
	0x03AA7904 BL 0x3AA7688
	0x03AA7908 LDRB W8, [X31 + 0x78]
	0x03AA790C FMOV S0, W31
	0x03AA7910 FMOV S1, 1
	0x03AA7914 CMP W8, 0x0
	0x03AA7918 FCSEL S0, S1, S0, EQ
	0x03AA791C STR S0, [X31 + 0x5C]
	0x03AA7920 CBZ X19, 0x3AA79BC
	0x03AA7924 ADRP X20, 0x6B0000
	0x03AA7928 LDR X20, [X20 + 0xAD8]
	0x03AA792C LDP S2, S3, [X31 + 0x68]
	0x03AA7930 LDP S0, S1, [X31 + 0x60]
	0x03AA7934 MOV X0, X19
	0x03AA7938 LDR X8, [X20]
	0x03AA793C MOV X2, X31
	0x03AA7940 LDR X8, [X8 + 0xB8]
	0x03AA7944 LDR W1, [X8]
	0x03AA7948 BL 0x3C4CED8
	0x03AA794C LDR X8, [X20]
	0x03AA7950 LDP S0, S1, [X31 + 0x50]
	0x03AA7954 LDP S2, S3, [X31 + 0x58]
	0x03AA7958 MOV X0, X19
	0x03AA795C LDR X8, [X8 + 0xB8]
	0x03AA7960 MOV X2, X31
	0x03AA7964 LDR W1, [X8 + 0x4]
	0x03AA7968 BL 0x3C4CED8
	0x03AA796C LDR X8, [X20]
	0x03AA7970 LDP S0, S1, [X31 + 0x20]
	0x03AA7974 LDP S2, S3, [X31 + 0x28]
	0x03AA7978 MOV X0, X19
	0x03AA797C LDR X8, [X8 + 0xB8]
	0x03AA7980 MOV X2, X31
	0x03AA7984 LDR W1, [X8 + 0x8]
	0x03AA7988 BL 0x3C4CED8
	0x03AA798C LDR X8, [X20]
	0x03AA7990 LDR W2, [X31 + 0x7C]
	0x03AA7994 MOV X0, X19
	0x03AA7998 MOV X3, X31
	0x03AA799C LDR X8, [X8 + 0xB8]
	0x03AA79A0 LDR W1, [X8 + 0xC]
	0x03AA79A4 BL 0x3C4CE30
	0x03AA79A8 LDP X20, X19, [X31 + 0x90]
	0x03AA79AC LDP X22, X21, [X31 + 0x80]
	0x03AA79B0 LDR X30, [X31 + 0x70]
	0x03AA79B4 ADD X31, X31, 0xA0
	0x03AA79B8 RET
	0x03AA79BC BL 0x1C16F20
	0x03AA79C0 SUB X31, X31, 0x150
	0x03AA79C4 STP D9, D8, [X31 + 0xE0]
	0x03AA79C8 STP X29, X30, [X31 + 0xF0]
	0x03AA79CC STP X28, X27, [X31 + 0x100]
	0x03AA79D0 STP X26, X25, [X31 + 0x110]
	0x03AA79D4 STP X24, X23, [X31 + 0x120]
	0x03AA79D8 STP X22, X21, [X31 + 0x130]
	0x03AA79DC STP X20, X19, [X31 + 0x140]
	0x03AA79E0 ADRP X20, 0x93B000
	0x03AA79E4 ADRP X19, 0x675000
	0x03AA79E8 LDRB W8, [X20 + 0x412]
	0x03AA79EC LDR X19, [X19 + 0x8A8]
	0x03AA79F0 MOV X22, X2
	0x03AA79F4 MOV X29, X1
	0x03AA79F8 MOV X21, X0
	0x03AA79FC TBNZ X8, 0x0, 0x3AA7A44
	0x03AA7A00 ADRP X0, 0x6B0000
	0x03AA7A04 LDR X0, [X0 + 0xC10]
	0x03AA7A08 BL 0x1C16CF4
	0x03AA7A0C ADRP X0, 0x6B0000
	0x03AA7A10 LDR X0, [X0 + 0xAD8]
	0x03AA7A14 BL 0x1C16CF4
	0x03AA7A18 ADRP X0, 0x6B0000
	0x03AA7A1C LDR X0, [X0 + 0xC18]
	0x03AA7A20 BL 0x1C16CF4
	0x03AA7A24 ADRP X0, 0x6B0000
	0x03AA7A28 LDR X0, [X0 + 0xC20]
	0x03AA7A2C BL 0x1C16CF4
	0x03AA7A30 ADRP X0, 0x675000
	0x03AA7A34 LDR X0, [X0 + 0x8A8]
	0x03AA7A38 BL 0x1C16CF4
	0x03AA7A3C MOVZ W8, 0x1
	0x03AA7A40 STRB W8, [X20 + 0x412]
	0x03AA7A44 MOVI V0.2D, 0x0
	0x03AA7A48 STP X31, X31, [X31 + 0xC0]
	0x03AA7A4C STR W31, [X31 + 0xB0]
	0x03AA7A50 STRB W31, [X31 + 0x5C]
	0x03AA7A54 STR W31, [X31 + 0x58]
	0x03AA7A58 STRB W31, [X31 + 0x54]
	0x03AA7A5C STP V0, V0, [X31 + 0x90]
	0x03AA7A60 STP V0, V0, [X31 + 0x70]
	0x03AA7A64 STR V0, [X31 + 0x6]
	0x03AA7A68 LDUR V0, [X22 + 0x8]
	0x03AA7A6C LDR X0, [X19]
	0x03AA7A70 ADD X24, X22, 0x228
	0x03AA7A74 STR V0, [X31 + 0xD]
	0x03AA7A78 LDR X8, [X22 + 0x238]
	0x03AA7A7C LDR X23, [X22 + 0x240]
	0x03AA7A80 STR X8, [X31 + 0x48]
	0x03AA7A84 LDR W8, [X0 + 0xE0]
	0x03AA7A88 CBNZ W8, 0x3AA7A90
	0x03AA7A8C BL 0x1C16DFC
	0x03AA7A90 ADRP X19, 0x6B0000
	0x03AA7A94 LDR X19, [X19 + 0xAD8]
	0x03AA7A98 MOV X0, X31
	0x03AA7A9C BL 0x3A89318
	0x03AA7AA0 LDP X1, X2, [X31 + 0xD0]
	0x03AA7AA4 MOV W25, W0
	0x03AA7AA8 MOV X0, X21
	0x03AA7AAC MOV X3, X24
	0x03AA7AB0 BL 0x3AA7EE4
	0x03AA7AB4 CMP W0, 0x1
	0x03AA7AB8 B.LT 0x3AA7C44
	0x03AA7ABC LDRB W8, [X21 + 0x50]
	0x03AA7AC0 CBZ W8, 0x3AA7C98
	0x03AA7AC4 STR X22, [X31 + 0x30]
	0x03AA7AC8 STR X29, [X31 + 0x40]
	0x03AA7ACC ADRP X8, 0x6B0000
	0x03AA7AD0 LDR X8, [X8 + 0xC20]
	0x03AA7AD4 MOV W9, W0
	0x03AA7AD8 ADD X0, X31, 0xC0
	0x03AA7ADC MOVZ W2, 0x2
	0x03AA7AE0 LDR X4, [X8]
	0x03AA7AE4 MOVZ W3, 0x1
	0x03AA7AE8 MOV W1, W9
	0x03AA7AEC STR W9, [X31 + 0x3C]
	0x03AA7AF0 BL 0x24016A4
	0x03AA7AF4 CMP W25, 0x1
	0x03AA7AF8 B.LT 0x3AA7B90
	0x03AA7AFC CMP W23, 0x1
	0x03AA7B00 B.LT 0x3AA7B90
	0x03AA7B04 ADD X8, X31, 0x60
	0x03AA7B08 MOV W27, W31
	0x03AA7B0C MOV W20, W31
	0x03AA7B10 ADD X28, X8, 0x10
	0x03AA7B14 ADD X29, X8, 0x20

ISIL:
	001 Move [X31-144], D12
	002 Move [X31+16], D11
	003 Move [X31+24], D10
	004 Move [X31+32], D9
	005 Move [X31+40], D8
	006 Move [X31+48], X29
	007 Move [X31+56], X30
	008 Move [X31+64], X28
	009 Move [X31+72], X27
	010 Move [X31+80], X26
	011 Move [X31+88], X25
	012 Move [X31+96], X24
	013 Move [X31+104], X23
	014 Move [X31+112], X22
	015 Move [X31+120], X21
	016 Move [X31+128], X20
	017 Move [X31+136], X19
	018 Subtract X31, X31, 2784
	019 NotImplemented "Instruction MRS not yet implemented."
	020 Move X8, [X25+40]
	021 Move X20, 0x93D000
	022 Move X27, X1
	023 Move X19, X0
	024 Move [X31+2776], X8
	025 Move W8, [X20+1037]
	026 Add X21, X31, 2744
	027 Add X22, X31, 1384
	028 Move TEMP, X8
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfEqual {94}
	032 Move X0, 0x6B2000
	033 Move X0, [X0+2888]
	034 Call 0x1C17CF4
	035 Move X0, 0x6B2000
	036 Move X0, [X0+2896]
	037 Call 0x1C17CF4
	038 Move X0, 0x6B2000
	039 Move X0, [X0+2904]
	040 Call 0x1C17CF4
	041 Move X0, 0x6B1000
	042 Move X0, [X0+4072]
	043 Call 0x1C17CF4
	044 Move X0, 0x6B2000
	045 Move X0, [X0+384]
	046 Call 0x1C17CF4
	047 Move X0, 0x6B2000
	048 Move X0, [X0+2912]
	049 Call 0x1C17CF4
	050 Move X0, 0x6B2000
	051 Move X0, [X0+2920]
	052 Call 0x1C17CF4
	053 Move X0, 0x6B2000
	054 Move X0, [X0+2928]
	055 Call 0x1C17CF4
	056 Move X0, 0x6B2000
	057 Move X0, [X0+2936]
	058 Call 0x1C17CF4
	059 Move X0, 0x6B2000
	060 Move X0, [X0+2944]
	061 Call 0x1C17CF4
	062 Move X0, 0x6AC000
	063 Move X0, [X0+664]
	064 Call 0x1C17CF4
	065 Move X0, 0x6B2000
	066 Move X0, [X0+2952]
	067 Call 0x1C17CF4
	068 Move X0, 0x6B0000
	069 Move X0, [X0+2920]
	070 Call 0x1C17CF4
	071 Move X0, 0x6B2000
	072 Move X0, [X0+2960]
	073 Call 0x1C17CF4
	074 Move X0, 0x6B2000
	075 Move X0, [X0+2968]
	076 Call 0x1C17CF4
	077 Move X0, 0x6B2000
	078 Move X0, [X0+2976]
	079 Call 0x1C17CF4
	080 Move X0, 0x6AF000
	081 Move X0, [X0+1328]
	082 Call 0x1C17CF4
	083 Move X0, 0x6B1000
	084 Move X0, [X0+4088]
	085 Call 0x1C17CF4
	086 Move X0, 0x677000
	087 Move X0, [X0+2216]
	088 Call 0x1C17CF4
	089 Move X0, 0x6B2000
	090 Move X0, [X0+2984]
	091 Call 0x1C17CF4
	092 Move W8, 1
	093 Move [X20+1037], W8
	094 NotImplemented "Instruction MOVI not yet implemented."
	095 Add X0, X31, 1688
	096 Move W2, 136
	097 Move W1, W31
	098 Move [X31+2312], W31
	099 Move [X31+2040], X31
	100 Move [X31+2032], X31
	101 Move [X31+2024], X31
	102 Move [X31+2016], X31
	103 Move [X31+2008], X31
	104 Move [X31+2000], X31
	105 Move [X31+1992], X31
	106 Move [X31+1984], X31
	107 Move [X31+1976], X31
	108 Move [X31+1968], X31
	109 Move [X31+1960], X31
	110 Move [X31+1952], X31
	111 Move [X31+1936], W31
	112 Move [X31+143], V0
	113 Move [X31+142], V0
	114 Move [X31+141], V0
	115 Move [X31+140], V0
	116 Move [X31+139], V0
	117 Move [X31+138], V0
	118 Move [X31+137], V0
	119 Move [X31+136], V0
	120 Move [X31+135], V0
	121 Move [X31+134], V0
	122 Move [X31+133], V0
	123 Move [X31+132], V0
	124 Move [X31+131], V0
	125 Move [X31+130], V0
	126 Move [X31+129], V0
	127 Move [X31+128], V0
	128 Move [X31+120], V0
	129 Move [X31+119], V0
	130 Move [X31+118], V0
	131 Move [X31+117], V0
	132 Move [X31+116], V0
	133 Move [X31+115], V0
	134 Move [X31+114], V0
	135 Call 0x3EB2B10
	136 NotImplemented "Instruction MOVI not yet implemented."
	137 Move [X31+104], V0
	138 Move [X31+103], V0
	139 Move [X31+102], V0
	140 Move [X31+101], V0
	141 Move [X31+100], V0
	142 Move [X31+99], V0
	143 Move [X31+98], V0
	144 Move [X31+97], V0
	145 Move [X31+96], V0
	146 Move [X31+95], V0
	147 Move [X31+94], V0
	148 Move [X31+93], V0
	149 Move [X31+92], V0
	150 Move [X31+91], V0
	151 Move [X31+90], V0
	152 Move [X31+89], V0
	153 Move [X31+87], V0
	154 Move [X31+88], V0
	155 Move [X31+77], V0
	156 Move [X31+78], V0
	157 Move [X31+79], V0
	158 Move [X31+80], V0
	159 Move [X31+81], V0
	160 Move [X31+82], V0
	161 Move [X31+83], V0
	162 Move [X31+84], V0
	163 Move [X31+75], V0
	164 Move [X31+76], V0
	165 NotImplemented "Instruction MOVI not yet implemented."
	166 Move [X31+1384], W31
	167 Move [X22+3], W31
	168 Move [X31+1368], X31
	169 Move [X31+1360], X31
	170 Move [X31+2760], X31
	171 Move [X31+2744], X31
	172 Move [X31+2752], X31
	173 Move [X21+23], W31
	174 Move [X31+74], V0
	175 Move [X31+73], V0
	176 Move W8, [X19+81]
	177 Compare W8, 0
	178 JumpIfEqual {1171}
	179 Move X21, 0x6B2000
	180 Move X21, [X21+384]
	181 Move X0, [X21]
	182 Move W8, [X0+224]
	183 Compare W8, 0
	184 JumpIfNotEqual {187}
	185 Call 0x1C17DFC
	186 Move X0, [X21]
	187 Move X8, [X0+184]
	188 Add X0, X31, 2312
	189 Move X1, X31
	190 Move X3, X31
	191 Move X2, [X8+8]
	192 Call ProfilingScope..ctor, X0, X1, X2
	193 Add X0, X19, 104
	194 Move X1, X31
	195 Call JobHandle.get_IsCompleted, X0
	196 Move TEMP, X0
	197 And TEMP, TEMP, 1
	198 Compare TEMP, 1
	199 JumpIfNotEqual {1193}
	200 Move X20, 0x677000
	201 Move X20, [X20+2216]
	202 Move W22, [X19+152]
	203 Move X0, [X20]
	204 Move W8, [X0+224]
	205 Compare W8, 0
	206 JumpIfNotEqual {208}
	207 Call 0x1C17DFC
	208 Move X0, X31
	209 Call UniversalRenderPipeline.get_maxTileWords
	210 Add X26, X19, 144
	211 NotImplemented "Instruction CMP not yet implemented."
	212 Add X28, X19, 120
	213 Move X22, 0x6AC000
	214 Move X0, [X19+120]
	215 Move X1, [X19+128]
	216 Move X22, [X22+664]
	217 Move X2, [X22]
	218 Call NativeArrayUnsafeUtility.GetUnsafePtr, X0
	219 Move W8, [X19+128]
	220 Move W8, W8
	221 ShiftRight W8, 30
	222 And W8, W8, 0x1FFFFFFF
	223 Move X1, W8
	224 Move X2, X31
	225 Call UnsafeUtility.MemClear, X0, X1
	226 Move X0, [X19+144]
	227 Move X1, [X19+152]
	228 Move X2, [X22]
	229 Call NativeArrayUnsafeUtility.GetUnsafePtr, X0
	230 Move W8, [X19+152]
	231 Move W8, W8
	232 ShiftRight W8, 30
	233 And W8, W8, 0x1FFFFFFF
	234 Move X1, W8
	235 Move X2, X31
	236 Call UnsafeUtility.MemClear, X0, X1
	237 Move X22, 0x6B0000
	238 Move X22, [X22+2920]
	239 Move X1, [X22]
	240 Move X0, X28
	241 Call NativeArray`1<UInt32>.Dispose, X0
	242 Move X0, [X19+136]
	243 Compare X0, 0
	244 JumpIfEqual {1213}
	245 Move X1, X31
	246 Call GraphicsBuffer.Dispose, X0
	247 Move X1, [X22]
	248 Move X0, X26
	249 Call NativeArray`1<UInt32>.Dispose, X0
	250 Move X0, [X19+160]
	251 Compare X0, 0
	252 JumpIfEqual {1214}
	253 Move X1, X31
	254 Call GraphicsBuffer.Dispose, X0
	255 Move X0, X19
	256 Call ForwardLights.CreateForwardPlusBuffers, X0
	257 Move X0, [X27+400]
	258 Compare X0, 0
	259 JumpIfEqual {1211}
	260 Move X22, [X27+216]
	261 Move W9, [X27+344]
	262 Move W8, [X27+348]
	263 Move [X31+100], W8
	264 Move [X31+104], W9
	265 Move X1, X31
	266 Call XRPass.get_enabled, X0
	267 Move [X31+88], X22
	268 Move TEMP, X0
	269 And TEMP, TEMP, 1
	270 Compare TEMP, 1
	271 JumpIfNotEqual {280}
	272 Move X0, [X27+400]
	273 Compare X0, 0
	274 JumpIfEqual {1215}
	275 Move X1, X31
	276 Call XRPass.get_singlePassEnabled, X0
	277 And W31, W0, 1
	278 Move W8, 1
	279 NotImplemented "Instruction CINC not yet implemented."
	280 Move W8, 1
	281 Move [X31+108], W8
	282 Move W8, [X27+576]
	283 Add X22, X27, 568
	284 NotImplemented "Instruction CMP not yet implemented."
	285 Move [X19+316], W8
	286 Move X24, X31
	287 Move X23, X31
	288 Move X8, [X22]
	289 Add X0, X31, 1824
	290 Move W2, 116
	291 Add X1, X8, X24
	292 Call 0x3EB2B30
	293 Add X0, X31, 1824
	294 Move X1, X31
	295 Call VisibleLight.get_lightType, X0
	296 NotImplemented "Instruction CMP not yet implemented."
	297 NotImplemented "Instruction LDRSW not yet implemented."
	298 Add X23, X23, 1
	299 Add X24, X24, 116
	300 NotImplemented "Instruction CMP not yet implemented."
	301 Move W23, W31
	302 Move W8, [X19+316]
	303 Move X9, 0x6B2000
	304 Move X9, [X9+2976]
	305 Subtract W2, W8, W23
	306 Move [X19+316], W2
	307 Move [X19+84], W23
	308 Compare W23, 0
	309 JumpIfEqual {314}
	310 Move W8, [X27+552]
	311 Add W31, W8, 1
	312 Subtract W8, W23, 1
	313 Move [X19+84], W8
	314 Move X3, [X9]
	315 Move X0, X22
	316 Move W1, W23
	317 Call NativeArray`1<VisibleLight>.GetSubArray, X0, X1, X2
	318 Move [X31+80], X0
	319 Move X22, X1
	320 Add X0, X27, 8
	321 Move X1, X31
	322 Call CullingResults.get_visibleReflectionProbes, X0
	323 Move X24, X0
	324 Move X0, [X20]
	325 Move X23, X1
	326 Move W8, [X0+224]
	327 Compare W8, 0
	328 JumpIfNotEqual {330}
	329 Call 0x1C17DFC
	330 Move X0, X31
	331 Move [X31+32], X26
	332 Move [X31+40], X28
	333 Call UniversalRenderPipeline.get_maxVisibleReflectionProbes
	334 NotImplemented "Instruction CMP not yet implemented."
	335 NotImplemented "Instruction CSEL not yet implemented."
	336 Move [X31+48], X25
	337 Move X29, 0x6B2000
	338 Add W9, W8, W22
	339 Move X29, [X29+2888]
	340 Move [X31+96], W8
	341 Add W8, W9, 31
	342 Move [X31+76], W9
	343 Add W9, W9, 62
	344 NotImplemented "Instruction CMP not yet implemented."
	345 NotImplemented "Instruction CSEL not yet implemented."
	346 Add X27, X27, 24
	347 Move [X31+56], X23
	348 Move [X31+64], X22
	349 Move W8, 4
	350 NotImplemented "Instruction SBFM not yet implemented."
	351 Move [X19+304], W22
	352 Move [X19+88], W8
	353 Move W11, [X31+100]
	354 Move W10, [X31+104]
	355 Move W8, W8
	356 ShiftRight W8, 31
	357 And W8, W8, 0x3FFFFFFF
	358 Subtract W9, W8, 1
	359 Move [X19+88], W8
	360 Add W10, W9, W10
	361 Add W9, W9, W11
	362 NotImplemented "Instruction SDIV not yet implemented."
	363 NotImplemented "Instruction SDIV not yet implemented."
	364 Move X8, X25
	365 NotImplemented "Instruction BFM not yet implemented."
	366 Move [X19+92], X8
	367 Move X0, [X20]
	368 Move W8, [X0+224]
	369 Compare W8, 0
	370 JumpIfNotEqual {372}
	371 Call 0x1C17DFC
	372 Move X0, X31
	373 Call UniversalRenderPipeline.get_maxTileWords
	374 Move W9, [X31+108]
	375 Multiply W8, W25, W9
	376 Multiply W8, W8, W23
	377 Multiply W8, W8, W22
	378 NotImplemented "Instruction CMP not yet implemented."
	379 Move W8, [X19+88]
	380 Move W22, [X19+304]
	381 Move X22, [X31+88]
	382 Compare X22, 0
	383 JumpIfEqual {1212}
	384 Move W25, W9
	385 Move X0, X22
	386 Move X1, X31
	387 Call Camera.get_orthographic, X0
	388 Move W8, W0
	389 Move X0, [X20]
	390 Move W9, [X0+224]
	391 Move TEMP, X8
	392 And TEMP, TEMP, 1
	393 Compare TEMP, 1
	394 JumpIfNotEqual {428}
	395 Compare W9, 0
	396 JumpIfNotEqual {398}
	397 Call 0x1C17DFC
	398 Move X0, X31
	399 Call UniversalRenderPipeline.get_maxZBinWords
	400 Move W20, W0
	401 Move X0, X22
	402 Move X1, X31
	403 Call Camera.get_farClipPlane, X0
	404 Move V8, V0
	405 Move X0, X22
	406 Move X1, X31
	407 Call Camera.get_nearClipPlane, X0
	408 Move W8, [X19+304]
	409 NotImplemented "Instruction SDIV not yet implemented."
	410 Subtract S0, S8, S0
	411 NotImplemented "Instruction SCVTF not yet implemented."
	412 Add W8, W8, 2
	413 NotImplemented "Instruction SCVTF not yet implemented."
	414 Multiply S0, S0, S2
	415 NotImplemented "Instruction FDIV not yet implemented."
	416 Move [X19+308], S0
	417 Move X0, X22
	418 Move X1, X31
	419 Call Camera.get_nearClipPlane, X0
	420 Move V1, [X19+308]
	421 NotImplemented "Instruction FNEG not yet implemented."
	422 Multiply S0, S1, S0
	423 Move [X19+312], S0
	424 Move X0, X22
	425 Move X1, X31
	426 Call Camera.get_farClipPlane, X0
	427 Move V1, [X19+308]
	428 Compare W9, 0
	429 JumpIfNotEqual {431}
	430 Call 0x1C17DFC
	431 Move X0, X31
	432 Call UniversalRenderPipeline.get_maxZBinWords
	433 Move W28, W0
	434 Move X0, X22
	435 Move X1, X31
	436 Call Camera.get_farClipPlane, X0
	437 Move X20, 0x93C000
	438 Move W8, [X20+1409]
	439 Move V8, V0
	440 Compare W8, 0
	441 JumpIfNotEqual {447}
	442 Move X0, 0x64E000
	443 Move X0, [X0+1448]
	444 Call 0x1C17CF4
	445 Move W8, 1
	446 Move [X20+1409], W8
	447 Move X26, 0x64E000
	448 Move X26, [X26+1448]
	449 Move X0, [X26]
	450 Move W8, [X0+224]
	451 Compare W8, 0
	452 JumpIfNotEqual {454}
	453 Call 0x1C17DFC
	454 NotImplemented "Instruction FCVT not yet implemented."
	455 Move D1, 2
	456 Move X0, X31
	457 Call Math.Log, V0, V1
	458 Move V8, V0
	459 Move X0, X22
	460 Move X1, X31
	461 Call Camera.get_nearClipPlane, X0
	462 Move W8, [X20+1409]
	463 Move V9, V0
	464 Compare W8, 0
	465 JumpIfNotEqual {471}
	466 Move X0, 0x64E000
	467 Move X0, [X0+1448]
	468 Call 0x1C17CF4
	469 Move W8, 1
	470 Move [X20+1409], W8
	471 Move X0, [X26]
	472 Move W8, [X0+224]
	473 Compare W8, 0
	474 JumpIfNotEqual {476}
	475 Call 0x1C17DFC
	476 NotImplemented "Instruction FCVT not yet implemented."
	477 Move D1, 2
	478 Move X0, X31
	479 Call Math.Log, V0, V1
	480 Move W8, [X19+304]
	481 NotImplemented "Instruction INVALID not yet implemented."
	482 NotImplemented "Instruction INVALID not yet implemented."
	483 NotImplemented "Instruction SDIV not yet implemented."
	484 Add W8, W8, 2
	485 Subtract S0, S1, S0
	486 NotImplemented "Instruction SCVTF not yet implemented."
	487 NotImplemented "Instruction SCVTF not yet implemented."
	488 Multiply S0, S0, S1
	489 NotImplemented "Instruction FDIV not yet implemented."
	490 Move [X19+308], S0
	491 Move X0, X22
	492 Move X1, X31
	493 Call Camera.get_nearClipPlane, X0
	494 Move W8, [X20+1409]
	495 Move V8, V0
	496 Compare W8, 0
	497 JumpIfNotEqual {503}
	498 Move X0, 0x64E000
	499 Move X0, [X0+1448]
	500 Call 0x1C17CF4
	501 Move W8, 1
	502 Move [X20+1409], W8
	503 Move X0, [X26]
	504 Move W8, [X0+224]
	505 Compare W8, 0
	506 JumpIfNotEqual {508}
	507 Call 0x1C17DFC
	508 NotImplemented "Instruction FCVT not yet implemented."
	509 Move D1, 2
	510 Move X0, X31
	511 Call Math.Log, V0, V1
	512 Move V1, [X19+308]
	513 NotImplemented "Instruction INVALID not yet implemented."
	514 NotImplemented "Instruction FNEG not yet implemented."
	515 Multiply S0, S1, S0
	516 Move [X19+312], S0
	517 Move X0, X22
	518 Move X1, X31
	519 Call Camera.get_farClipPlane, X0
	520 Move W8, [X20+1409]
	521 Move V8, V0
	522 Compare W8, 0
	523 JumpIfNotEqual {529}
	524 Move X0, 0x64E000
	525 Move X0, [X0+1448]
	526 Call 0x1C17CF4
	527 Move W8, 1
	528 Move [X20+1409], W8
	529 Move X0, [X26]
	530 Move W8, [X0+224]
	531 Compare W8, 0
	532 JumpIfNotEqual {534}
	533 Call 0x1C17DFC
	534 NotImplemented "Instruction FCVT not yet implemented."
	535 Move D1, 2
	536 Move X0, X31
	537 Call Math.Log, V0, V1
	538 Move V1, V0
	539 Move V0, [X19+308]
	540 NotImplemented "Instruction INVALID not yet implemented."
	541 Move V2, [X19+312]
	542 Move W8, 0x7F800000
	543 Multiply S0, S0, S1
	544 Move S1, W8
	545 Add S0, S0, S2
	546 NotImplemented "Instruction FCVTZS not yet implemented."
	547 NotImplemented "Instruction FCMP not yet implemented."
	548 Move W9, 0x80000000
	549 NotImplemented "Instruction CSEL not yet implemented."
	550 Move [X19+320], W8
	551 Add X8, X31, 2320
	552 Move X0, X27
	553 Move W1, W31
	554 Move X2, X31
	555 Call CameraData.GetViewMatrix, X0, X1
	556 Move V0, [X31+145]
	557 Move V1, [X31+146]
	558 Move V2, [X31+147]
	559 Move V3, [X31+148]
	560 Move [X31+65], V0
	561 Move [X31+66], V1
	562 Move [X31+67], V2
	563 Move [X31+68], V3
	564 Add X8, X31, 2320
	565 Add X0, X31, 1040
	566 Move X1, X31
	567 Call float4x4.op_Implicit, X0
	568 Move V0, [X31+145]
	569 Move V1, [X31+146]
	570 Move V2, [X31+147]
	571 Move V3, [X31+148]
	572 Subtract W8, W25, 1
	573 NotImplemented "Instruction CSINC not yet implemented."
	574 Move [X31+69], V0
	575 Move [X31+70], V1
	576 Move [X31+71], V2
	577 Move [X31+72], V3
	578 Add X8, X31, 2320
	579 Move X0, X27
	580 Move W1, W28
	581 Move X2, X31
	582 Call CameraData.GetViewMatrix, X0, X1
	583 Move V0, [X31+145]
	584 Move V1, [X31+146]
	585 Move V2, [X31+147]
	586 Move V3, [X31+148]
	587 Move [X31+976], V0
	588 Move [X31+984], V1
	589 Move [X31+1008], V2
	590 Move [X31+1016], V3
	591 Add X8, X31, 2320
	592 Add X0, X31, 976
	593 Move X1, X31
	594 Call float4x4.op_Implicit, X0
	595 Move V0, [X31+145]
	596 Move V1, [X31+146]
	597 Move V2, [X31+147]
	598 Move V3, [X31+148]
	599 Move X3, [X29]
	600 Move [X31+912], V0
	601 Move [X31+920], V1
	602 Move V0, [X31+69]
	603 Move V1, [X31+70]
	604 Move [X31+944], V2
	605 Move [X31+952], V3
	606 Move V2, [X31+71]
	607 Move V3, [X31+72]
	608 Move [X31+512], V0
	609 Move [X31+520], V1
	610 Move V0, [X31+912]
	611 Move V1, [X31+928]
	612 NotImplemented "Instruction MOVI not yet implemented."
	613 Move [X31+544], V2
	614 Move [X31+552], V3
	615 Move V2, [X31+944]
	616 Move V3, [X31+960]
	617 Move [X31+152], V4
	618 Move [X31+151], V4
	619 Move [X31+150], V4
	620 Move [X31+149], V4
	621 Move [X31+148], V4
	622 Move [X31+147], V4
	623 Move [X31+146], V4
	624 Move [X31+145], V4
	625 Move [X31+167], V0
	626 Move [X31+168], V1
	627 Move [X31+169], V2
	628 Move [X31+170], V3
	629 Add X0, X31, 2320
	630 Add X1, X31, 512
	631 Add X2, X31, 2672
	632 Call Fixed2`1<float4x4>..ctor, X0, X1, X2
	633 Add X0, X31, 2176
	634 Add X1, X31, 2320
	635 Move W2, 128
	636 Call 0x3EB2AC0
	637 Add X8, X31, 512
	638 Move X0, X27
	639 Move W1, W31
	640 Move X2, X31
	641 Call CameraData.GetProjectionMatrix, X0, X1
	642 Move V0, [X31+512]
	643 Move V1, [X31+528]
	644 Move V2, [X31+544]
	645 Move V3, [X31+560]
	646 Move [X31+784], V0
	647 Move [X31+792], V1
	648 Move [X31+816], V2
	649 Move [X31+824], V3
	650 Add X8, X31, 512
	651 Add X0, X31, 784
	652 Move X1, X31
	653 Call float4x4.op_Implicit, X0
	654 Move V0, [X31+512]
	655 Move V1, [X31+528]
	656 Move V2, [X31+544]
	657 Move V3, [X31+560]
	658 Move [X31+848], V0
	659 Move [X31+856], V1
	660 Move [X31+880], V2
	661 Move [X31+888], V3
	662 Add X8, X31, 512
	663 Move X0, X27
	664 Move W1, W28
	665 Move X2, X31
	666 Call CameraData.GetProjectionMatrix, X0, X1
	667 Move V0, [X31+512]
	668 Move V1, [X31+528]
	669 Move V2, [X31+544]
	670 Move V3, [X31+560]
	671 Move [X31+720], V0
	672 Move [X31+728], V1
	673 Move [X31+752], V2
	674 Move [X31+760], V3
	675 Add X8, X31, 512
	676 Add X0, X31, 720
	677 Move X1, X31
	678 Call float4x4.op_Implicit, X0
	679 Move V0, [X31+512]
	680 Move V1, [X31+528]
	681 Move V2, [X31+544]
	682 Move V3, [X31+560]
	683 Move X3, [X29]
	684 NotImplemented "Instruction MOVI not yet implemented."
	685 Move [X31+656], V0
	686 Move [X31+664], V1
	687 Move V0, [X31+848]
	688 Move V1, [X31+864]
	689 Move [X31+688], V2
	690 Move [X31+696], V3
	691 Move V2, [X31+880]
	692 Move V3, [X31+896]
	693 Move [X31+608], V4
	694 Move [X31+616], V4
	695 Move [X31+167], V0
	696 Move [X31+168], V1
	697 Move [X31+169], V2
	698 Move [X31+170], V3
	699 Move V0, [X31+656]
	700 Move V1, [X31+672]
	701 Move V2, [X31+688]
	702 Move V3, [X31+704]
	703 Move [X31+576], V4
	704 Move [X31+584], V4
	705 Move [X31+544], V4
	706 Move [X31+552], V4
	707 Move [X31+512], V4
	708 Move [X31+520], V4
	709 Move [X31+163], V0
	710 Move [X31+164], V1
	711 Move [X31+165], V2
	712 Move [X31+166], V3
	713 Add X0, X31, 512
	714 Add X1, X31, 2672
	715 Add X2, X31, 2608
	716 Call Fixed2`1<float4x4>..ctor, X0, X1, X2
	717 Add X0, X31, 2048
	718 Add X1, X31, 512
	719 Move W2, 128
	720 Call 0x3EB2AC0
	721 Move W8, [X31+96]
	722 NotImplemented "Instruction CMP not yet implemented."
	723 Move W8, [X31+96]
	724 Move W20, W31
	725 Add X29, X24, 136
	726 Move W25, 1
	727 Move W26, W8
	728 Move W23, 136
	729 NotImplemented "Instruction MADD not yet implemented."
	730 Add X0, X31, 1688
	731 Move W2, 136
	732 NotImplemented "Instruction UMADDL not yet implemented."
	733 Call 0x3EB2B30
	734 Move X28, X29
	735 Move X22, X25
	736 Add X0, X31, 2320
	737 Move W2, 136
	738 Move X1, X27
	739 Call 0x3EB2AC0
	740 Add X0, X31, 512
	741 Add X1, X31, 1688
	742 Move W2, 136
	743 Call 0x3EB2AC0
	744 Move X0, [X21]
	745 Move W8, [X0+224]
	746 Compare W8, 0
	747 JumpIfNotEqual {749}
	748 Call 0x1C17DFC
	749 Add X0, X31, 376
	750 Add X1, X31, 2320
	751 Move W2, 136
	752 Call 0x3EB2AC0
	753 Add X0, X31, 240
	754 Add X1, X31, 512
	755 Move W2, 136
	756 Call 0x3EB2AC0
	757 Add X0, X31, 376
	758 Add X1, X31, 240
	759 Call ForwardLights.<PreSetup>g__IsProbeGreater|40_0, X0, X1
	760 Move TEMP, X0
	761 And TEMP, TEMP, 1
	762 Compare TEMP, 1
	763 JumpIfNotEqual {773}
	764 Move W2, 136
	765 Move X0, X28
	766 Move X1, X27
	767 Call 0x3EB2B30
	768 Subtract X22, X22, 1
	769 Subtract X28, X28, 136
	770 NotImplemented "Instruction CMP not yet implemented."
	771 Subtract X27, X27, 136
	772 Move X22, X31
	773 NotImplemented "Instruction SMADDL not yet implemented."
	774 Add X1, X31, 1688
	775 Move W2, 136
	776 Call 0x3EB2B30
	777 Add X25, X25, 1
	778 Add X29, X29, 136
	779 NotImplemented "Instruction CMP not yet implemented."
	780 Add W20, W20, 1
	781 Move X8, 0x6AE000
	782 Move X8, [X8+1328]
	783 Move W23, [X31+108]
	784 Move [X31+2680], X31
	785 Move [X31+2672], X31
	786 Move X4, [X8]
	787 Move W8, [X31+76]
	788 Multiply W27, W8, W23
	789 Add X0, X31, 2672
	790 Move W2, 3
	791 Move W3, 1
	792 Move W1, W27
	793 Call NativeArray`1<float2>..ctor, X0, X1, X2, X3
	794 Move V0, [X31+167]
	795 Add X0, X31, 1552
	796 Add X1, X31, 2176
	797 Move W2, 128
	798 Move [X31+127], V0
	799 Call 0x3EB2AC0
	800 Move X25, 0x6B1000
	801 Move W8, [X19+316]
	802 Move X25, [X25+2968]
	803 Multiply W2, W8, W23
	804 Move X3, [X25]
	805 Add X0, X31, 2032
	806 Move W1, W31
	807 Call NativeArray`1<float2>.GetSubArray, X0, X1, X2
	808 Move X9, 0x6B1000
	809 Move W8, [X19+316]
	810 Move X9, [X9+2912]
	811 Move X20, X0
	812 Move X22, X1
	813 Add X0, X31, 2320
	814 Move X26, [X9]
	815 Add X1, X31, 1552
	816 Move W2, 128
	817 Multiply W28, W8, W23
	818 Call 0x3EB2AC0
	819 Move X8, [X31+80]
	820 Move [X31+2464], X20
	821 Move [X31+2472], X22
	822 Move [X31+2448], X8
	823 Move X8, [X31+64]
	824 Move [X31+2456], X8
	825 Add X0, X31, 2320
	826 Move W2, 32
	827 Move W1, W28
	828 Move X3, X31
	829 Move X4, X31
	830 Move X5, X26
	831 Call 0x21EF848, X0, X1, X2, X3
	832 Move X28, X0
	833 Move X29, X1
	834 Add X0, X31, 1424
	835 Add X1, X31, 2176
	836 Move W2, 128
	837 Call 0x3EB2AC0
	838 Move W8, [X19+316]
	839 Move X3, [X25]
	840 Multiply W1, W8, W23
	841 Move W8, [X31+96]
	842 Multiply W20, W8, W23
	843 Add X0, X31, 2032
	844 Move W2, W20
	845 Call NativeArray`1<float2>.GetSubArray, X0, X1, X2
	846 Move X8, 0x6B1000
	847 Move X8, [X8+2920]
	848 Move X26, X0
	849 Move X22, X1
	850 Add X0, X31, 2320
	851 Move X23, [X8]
	852 Add X1, X31, 1424
	853 Move W2, 128
	854 Call 0x3EB2AC0
	855 Move X8, [X31+56]
	856 Move [X31+2448], X24
	857 Move [X31+2464], X26
	858 Move [X31+2472], X22
	859 Move [X31+2456], X8
	860 Add X0, X31, 2320
	861 Move W2, 32
	862 Move W1, W20
	863 Move X3, X28
	864 Move X4, X29
	865 Move X5, X23
	866 Call IJobForExtensions.ScheduleParallel, X0, X1, X2, X3
	867 Move X8, [X31+40]
	868 Move [X31+2016], X0
	869 Move [X31+2024], X1
	870 Add X28, X31, 1384
	871 Move W20, [X19+320]
	872 Move [X28+3], W31
	873 Move [X31+1384], W31
	874 Move V0, [X8]
	875 Move V1, [X31+127]
	876 Add X8, X19, 308
	877 Add W9, W20, 127
	878 Move [X31+87], V0
	879 Move [X31+88], V1
	880 Move V8, [X8]
	881 Move W23, [X19+304]
	882 Move W22, [X19+316]
	883 Add W8, W20, 254
	884 NotImplemented "Instruction CMP not yet implemented."
	885 NotImplemented "Instruction CSEL not yet implemented."
	886 Move X0, [X31+88]
	887 Move X1, X31
	888 Call Camera.get_orthographic, X0
	889 Add X26, X31, 2744
	890 Add X13, X31, 2320
	891 Move X10, 0x6B1000
	892 Move X3, [X31+2016]
	893 Move X4, [X31+2024]
	894 Move X10, [X10+2944]
	895 Move W12, [X31+108]
	896 Move V0, [X31+87]
	897 Move V1, [X31+88]
	898 Move X5, [X10]
	899 Move W10, [X31+96]
	900 NotImplemented "Instruction LDUR not yet implemented."
	901 NotImplemented "Instruction SBFM not yet implemented."
	902 And W9, W0, 1
	903 Move [X31+2372], W10
	904 Move W10, [X31+1384]
	905 Multiply W1, W8, W12
	906 Move [X31+2352], D8
	907 Move [X31+2360], W20
	908 Move [X31+2364], W23
	909 Move [X31+2368], W22
	910 Move [X31+2376], W8
	911 Move [X31+2380], W12
	912 Move [X31+2384], W9
	913 Move [X31+145], V0
	914 Move [X31+146], V1
	915 Move [X13+65], W10
	916 Move [X31+2388], W11
	917 Add X0, X31, 2320
	918 Move W2, 1
	919 Call IJobForExtensions.ScheduleParallel, X0, X1, X2, X3
	920 Move X28, X0
	921 Move X25, X1
	922 Add X0, X31, 2016
	923 Move X1, X31
	924 Call JobHandle.Complete, X0
	925 Move X20, 0x6B0000
	926 Move X22, [X31+88]
	927 Move X20, [X20+4072]
	928 Move X2, [X20]
	929 Add X8, X31, 2320
	930 Add X0, X31, 2048
	931 Move W1, W31
	932 Call Fixed2`1<float4x4>.get_Item, X0, X1
	933 Move V0, [X31+145]
	934 Move V1, [X31+146]
	935 Move V2, [X31+147]
	936 Move V3, [X31+148]
	937 Move [X31+176], V0
	938 Move [X31+184], V1
	939 Move [X31+208], V2
	940 Move [X31+216], V3
	941 Add X2, X31, 176
	942 Add X3, X31, 2012
	943 Add X4, X31, 2008
	944 Add X5, X31, 1992
	945 Move X1, X22
	946 Call ForwardLights.GetViewParams, X0, X1, X2, X3, X4, X5
	947 Move X2, [X20]
	948 Add X8, X31, 2320
	949 Add X0, X31, 2048
	950 Move W1, 1
	951 Call Fixed2`1<float4x4>.get_Item, X0, X1
	952 Move V0, [X31+145]
	953 Move V1, [X31+146]
	954 Move V2, [X31+147]
	955 Move V3, [X31+148]
	956 Move [X31+112], V0
	957 Move [X31+120], V1
	958 Move [X31+144], V2
	959 Move [X31+152], V3
	960 Add X2, X31, 112
	961 Add X3, X31, 1988
	962 Add X4, X31, 1984
	963 Add X5, X31, 1968
	964 Move X1, X22
	965 Call ForwardLights.GetViewParams, X0, X1, X2, X3, X4, X5
	966 Move X0, [X21]
	967 Move W20, [X19+96]
	968 Move W8, [X0+224]
	969 Compare W8, 0
	970 JumpIfNotEqual {972}
	971 Call 0x1C17DFC
	972 Move X9, 0x6B0000
	973 Move X9, [X9+4088]
	974 Move W8, W20
	975 ShiftRight W8, 30
	976 And W8, W8, 0x1FFFFFFF
	977 Move [X31+2616], X31
	978 Move [X31+2608], X31
	979 Move X4, [X9]
	980 Add W9, W8, 131
	981 Add W8, W8, 258
	982 NotImplemented "Instruction CMP not yet implemented."
	983 NotImplemented "Instruction CSEL not yet implemented."
	984 And W8, W8, 0xFFFFFF80
	985 Or W9, W8, 3
	986 NotImplemented "Instruction CMP not yet implemented."
	987 NotImplemented "Instruction CSEL not yet implemented."
	988 NotImplemented "Instruction SBFM not yet implemented."
	989 Multiply W1, W27, W21
	990 Add X0, X31, 2608
	991 Move W2, 3
	992 Move W3, 1
	993 Call NativeArray`1<InclusiveRange>..ctor, X0, X1, X2, X3
	994 Move V0, [X31+163]
	995 Add X0, X31, 1232
	996 Add X1, X31, 2176
	997 Move W2, 128
	998 Move [X31+2760], X31
	999 Move [X31+2744], X31
	1000 Move [X31+2752], X31
	1001 Move [X26+23], W31
	1002 Move [X31+122], V0
	1003 Move [X31+85], V0
	1004 Call 0x3EB2AC0
	1005 Move X20, 0x6B1000
	1006 Move V9, [X19+88]
	1007 Move V0, [X31+2012]
	1008 Move V1, [X31+1988]
	1009 Move X20, [X20+2904]
	1010 Move [X31+1104], X31
	1011 Move X1, [X20]
	1012 Add X0, X31, 1104
	1013 Call 0x2D20048, X0, X1, X2
	1014 Move X26, [X31+1104]
	1015 Move X1, [X20]
	1016 Move V0, [X31+2008]
	1017 Move V1, [X31+1984]
	1018 Move [X31+96], W21
	1019 Move [X31+848], X31
	1020 Add X0, X31, 848
	1021 Call 0x2D20048, X0, X1, X2
	1022 Move [X31+40], X25
	1023 Move X8, 0x6B1000
	1024 Move X23, [X31+848]
	1025 Move V0, [X31+1992]
	1026 Move V1, [X31+1996]
	1027 Move V2, [X31+2000]
	1028 Move V3, [X31+2004]
	1029 Move V4, [X31+1968]
	1030 Move V5, [X31+1972]
	1031 Move V6, [X31+1976]
	1032 Move V7, [X31+1980]
	1033 Move X8, [X8+2896]
	1034 NotImplemented "Instruction MOVI not yet implemented."
	1035 Move [X31+512], V16
	1036 Move [X31+520], V16
	1037 Move X1, [X8]
	1038 Add X0, X31, 512
	1039 Call Fixed2`1<float4>..ctor, X0, X1, X2
	1040 Move V0, [X31+512]
	1041 Move V1, [X31+528]
	1042 Move [X31+75], V0
	1043 Move [X31+76], V1
	1044 NotImplemented "Instruction LDUR not yet implemented."
	1045 Move X0, X22
	1046 Move X1, X31
	1047 Call Camera.get_nearClipPlane, X0
	1048 Move V8, V0
	1049 Move X0, X22
	1050 Move X1, X31
	1051 Move [X31+16], X28
	1052 Move [X31+28], W27
	1053 Call Camera.get_orthographic, X0
	1054 Move W8, [X31+104]
	1055 Move X20, [X31+2016]
	1056 Move X21, [X31+2024]
	1057 NotImplemented "Instruction SCVTF not yet implemented."
	1058 NotImplemented "Instruction SCVTF not yet implemented."
	1059 Move W8, [X31+100]
	1060 NotImplemented "Instruction FDIV not yet implemented."
	1061 NotImplemented "Instruction FDIV not yet implemented."
	1062 And W28, W0, 1
	1063 NotImplemented "Instruction SCVTF not yet implemented."
	1064 Move X8, 0x6B1000
	1065 Move X8, [X8+2936]
	1066 Move V0, [X31+85]
	1067 Move W27, [X31+76]
	1068 Move W25, [X31+96]
	1069 Move X22, [X8]
	1070 Move X8, [X31+80]
	1071 Move [X31+2336], X24
	1072 Add X24, X31, 2320
	1073 Add X0, X24, 56
	1074 Move [X31+2320], X8
	1075 Move X8, [X31+64]
	1076 Add X1, X31, 1232
	1077 Move W2, 128
	1078 NotImplemented "Instruction FDIV not yet implemented."
	1079 Move [X31+2328], X8
	1080 Move X8, [X31+56]
	1081 NotImplemented "Instruction FDIV not yet implemented."
	1082 Move [X31+2368], W27
	1083 Move [X31+2372], W25
	1084 Move [X31+2344], X8
	1085 Move [X31+147], V0
	1086 Call 0x3EB2AC0
	1087 Add X9, X31, 2744
	1088 Move V0, [X31+75]
	1089 Move V1, [X31+76]
	1090 Move V2, [X9]
	1091 NotImplemented "Instruction LDUR not yet implemented."
	1092 Add X8, X24, 261
	1093 Add X24, X31, 2320
	1094 Move [X31+2504], S9
	1095 Move [X31+2508], S10
	1096 Move [X31+2512], S11
	1097 Move [X31+2516], S12
	1098 Move [X31+2520], X26
	1099 Move [X31+2528], X23
	1100 Move [X24+216], V0
	1101 Move [X24+232], V1
	1102 Move [X31+2568], X29
	1103 Move [X31+2576], S8
	1104 Move [X31+2580], W28
	1105 Move [X8], V2
	1106 Move [X31+162], V3
	1107 Move W1, [X31+28]
	1108 Add X0, X31, 2320
	1109 Move W2, 1
	1110 Move X3, X20
	1111 Move X4, X21
	1112 Move X5, X22
	1113 Call IJobForExtensions.ScheduleParallel, X0, X1, X2, X3
	1114 Move V0, [X31+122]
	1115 Move X8, [X31+32]
	1116 Move X4, X1
	1117 Move X3, X0
	1118 Move [X31+73], V0
	1119 Move V1, [X8]
	1120 Move X8, 0x6B1000
	1121 Move X8, [X8+2928]
	1122 Move W11, [X31+108]
	1123 Move [X31+74], V1
	1124 Move W10, [X19+96]
	1125 Move X5, [X8]
	1126 Move W8, [X19+304]
	1127 NotImplemented "Instruction LDUR not yet implemented."
	1128 Multiply W1, W10, W11
	1129 Move [X31+145], V0
	1130 Move [X31+146], V1
	1131 Move [X31+2352], W25
	1132 Move [X31+2356], W27
	1133 Move [X31+2360], W8
	1134 Move [X24+44], X9
	1135 Move [X31+2372], W31
	1136 Move X25, [X31+48]
	1137 Add X0, X31, 2320
	1138 Move W2, 1
	1139 Call IJobForExtensions.ScheduleParallel, X0, X1, X2, X3
	1140 Move X21, X1
	1141 Move X1, [X31+16]
	1142 Move X8, 0x6B1000
	1143 Move X8, [X8+2960]
	1144 Move X20, X0
	1145 Move X3, [X8]
	1146 Move X2, [X31+40]
	1147 Add X0, X31, 2032
	1148 Call NativeArray`1<float2>.Dispose, X0, X1
	1149 Move X8, 0x6B1000
	1150 Move X8, [X8+2952]
	1151 Move X22, X0
	1152 Move X23, X1
	1153 Move X3, [X8]
	1154 Add X0, X31, 1952
	1155 Move X1, X20
	1156 Move X2, X21
	1157 Call NativeArray`1<InclusiveRange>.Dispose, X0, X1
	1158 Move X2, X0
	1159 Move X3, X1
	1160 Move X0, X22
	1161 Move X1, X23
	1162 Move X4, X31
	1163 Call JobHandle.CombineDependencies, X0, X1
	1164 Move [X19+104], X0
	1165 Move [X19+112], X1
	1166 Move X0, X31
	1167 Call JobHandle.ScheduleBatchedJobs
	1168 Add X0, X31, 2312
	1169 Move X1, X31
	1170 Call ProfilingScope.Dispose, X0
	1171 Move X8, [X25+40]
	1172 Move X9, [X31+2776]
	1173 NotImplemented "Instruction CMP not yet implemented."
	1174 Add X31, X31, 2784
	1175 Move X20, [X31+128]
	1176 Move X19, [X31+136]
	1177 Move X22, [X31+112]
	1178 Move X21, [X31+120]
	1179 Move X24, [X31+96]
	1180 Move X23, [X31+104]
	1181 Move X26, [X31+80]
	1182 Move X25, [X31+88]
	1183 Move X28, [X31+64]
	1184 Move X27, [X31+72]
	1185 Move X29, [X31+48]
	1186 Move X30, [X31+56]
	1187 Move D9, [X31+32]
	1188 Move D8, [X31+40]
	1189 Move D11, [X31+16]
	1190 Move D10, [X31+24]
	1191 Move V12, [X31+144]
	1192 Return 
	1193 Move X0, 0x64D000
	1194 Move X0, [X0+1456]
	1195 Call 0x1C17D08
	1196 Call 0x1C17F10
	1197 Move X19, X0
	1198 Move X0, 0x6B1000
	1199 Move X0, [X0+2992]
	1200 Call 0x1C17D08
	1201 Move X1, X0
	1202 Move X0, X19
	1203 Move X2, X31
	1204 Call InvalidOperationException..ctor, X0, X1
	1205 Move X0, 0x6B1000
	1206 Move X0, [X0+3000]
	1207 Call 0x1C17D08
	1208 Move X1, X0
	1209 Move X0, X19
	1210 Call 0x1C17DEC
	1211 Call 0x1C17F20
	1212 Call 0x1C17F20
	1213 Call 0x1C17F20
	1214 Call 0x1C17F20
	1215 Call 0x1C17F20
	1216 Call 0x3EB2B20
	1217 Move X25, [X31+48]
	1218 Move X19, X0
	1219 NotImplemented "Instruction CMP not yet implemented."
	1220 Move X0, X19
	1221 Call 0x3EB2AD0
	1222 Move X20, [X0]
	1223 Call 0x3EB2AE0
	1224 Add X0, X31, 2312
	1225 Move X1, X31
	1226 Call ProfilingScope.Dispose, X0
	1227 Compare X20, 0
	1228 JumpIfEqual {1171}
	1229 Move X0, X20
	1230 Call 0x1C17F18
	1231 Move X20, X31
	1232 Move X19, X0
	1233 Add X0, X31, 2312
	1234 Move X1, X31
	1235 Call ProfilingScope.Dispose, X0
	1236 Compare X20, 0
	1237 JumpIfNotEqual {1240}
	1238 Move X0, X19
	1239 Call 0x1D2D690
	1240 Move X0, X20
	1241 Call 0x1C17F18
	1242 Call 0x1991590

Method: System.Void Setup(UnityEngine.Rendering.ScriptableRenderContext context, ref UnityEngine.Rendering.Universal.RenderingData renderingData)

Disassembly:
	0x03AA7BF8 MOV X22, X0
	0x03AA7BFC MOV X0, X29
	0x03AA7C00 MOV X2, X19
	0x03AA7C04 MOV X3, X31
	0x03AA7C08 BL 0x3C4FD54
	0x03AA7C0C LDR W1, [X21 + 0x14]
	0x03AA7C10 MOV X0, X29
	0x03AA7C14 MOV X2, X22
	0x03AA7C18 MOV X3, X31
	0x03AA7C1C BL 0x3C4FD54
	0x03AA7C20 ADRP X8, 0x6B0000
	0x03AA7C24 LDR X8, [X8 + 0xC18]
	0x03AA7C28 ADD X0, X31, 0xC0
	0x03AA7C2C LDR X1, [X8]
	0x03AA7C30 BL 0x2401968
	0x03AA7C34 ADRP X19, 0x6B0000
	0x03AA7C38 LDR X22, [X31 + 0x30]
	0x03AA7C3C LDR X19, [X19 + 0xAD8]
	0x03AA7C40 B 0x3AA7E8C
	0x03AA7C44 LDR X8, [X19]
	0x03AA7C48 ADRP X20, 0x931000
	0x03AA7C4C LDRB W9, [X20 + 0xE5A]
	0x03AA7C50 LDR X8, [X8 + 0xB8]
	0x03AA7C54 LDR W19, [X8 + 0x10]
	0x03AA7C58 CBNZ W9, 0x3AA7C70
	0x03AA7C5C ADRP X0, 0x653000
	0x03AA7C60 LDR X0, [X0 + 0x9A0]
	0x03AA7C64 BL 0x1C16CF4
	0x03AA7C68 MOVZ W8, 0x1
	0x03AA7C6C STRB W8, [X20 + 0xE5A]
	0x03AA7C70 CBZ X29, 0x3AA7EDC
	0x03AA7C74 ADRP X8, 0x653000
	0x03AA7C78 LDR X8, [X8 + 0x9A0]
	0x03AA7C7C MOV X0, X29
	0x03AA7C80 MOV W1, W19
	0x03AA7C84 LDR X8, [X8]
	0x03AA7C88 LDR X8, [X8 + 0xB8]
	0x03AA7C8C LDP S2, S3, [X8 + 0x8]
	0x03AA7C90 LDP S0, S1, [X8]
	0x03AA7C94 B 0x3AA7EB0
	0x03AA7C98 CMP W25, 0x1
	0x03AA7C9C B.LT 0x3AA7DD8
	0x03AA7CA0 CMP W23, 0x1
	0x03AA7CA4 B.LT 0x3AA7DD8
	0x03AA7CA8 MOV W26, W31
	0x03AA7CAC MOV W19, W31
	0x03AA7CB0 ADD X27, X31, 0x54
	0x03AA7CB4 ADD X28, X31, 0x58
	0x03AA7CB8 FMOV S8, 1
	0x03AA7CBC FMOV S9, W31
	0x03AA7CC0 LDR W8, [X24]
	0x03AA7CC4 CMP W26, W8
	0x03AA7CC8 B.EQ 0x3AA7DC4
	0x03AA7CCC LDR X8, [X21 + 0x20]
	0x03AA7CD0 CBZ X8, 0x3AA7EDC
	0x03AA7CD4 LDR X9, [X21 + 0x28]
	0x03AA7CD8 CBZ X9, 0x3AA7EDC
	0x03AA7CDC LDR X10, [X21 + 0x30]
	0x03AA7CE0 CBZ X10, 0x3AA7EDC
	0x03AA7CE4 LDR X11, [X21 + 0x38]
	0x03AA7CE8 CBZ X11, 0x3AA7EDC
	0x03AA7CEC LDR X12, [X21 + 0x40]
	0x03AA7CF0 CBZ X12, 0x3AA7EDC
	0x03AA7CF4 LDR W13, [X8 + 0x18]
	0x03AA7CF8 CMP W19, W13
	0x03AA7CFC B.CS 0x3AA7EE0
	0x03AA7D00 LDR W13, [X9 + 0x18]
	0x03AA7D04 CMP W19, W13
	0x03AA7D08 B.CS 0x3AA7EE0
	0x03AA7D0C LDR W13, [X10 + 0x18]
	0x03AA7D10 CMP W19, W13
	0x03AA7D14 B.CS 0x3AA7EE0
	0x03AA7D18 LDR W13, [X11 + 0x18]
	0x03AA7D1C CMP W19, W13
	0x03AA7D20 B.CS 0x3AA7EE0
	0x03AA7D24 LDR W13, [X12 + 0x18]
	0x03AA7D28 CMP W19, W13
	0x03AA7D2C B.CS 0x3AA7EE0
	0x03AA7D30 LDR X1, [X31 + 0x48]
	0x03AA7D34 SXTW X20, W19
	0x03AA7D38 ADD X8, X8, X20, 0x4, LSL
	0x03AA7D3C ADD X9, X9, X20, 0x4, LSL
	0x03AA7D40 ADD X10, X10, X20, 0x4, LSL
	0x03AA7D44 ADD X11, X11, X20, 0x4, LSL
	0x03AA7D48 ADD X12, X12, X20, 0x4, LSL
	0x03AA7D4C ADD X4, X8, 0x20
	0x03AA7D50 ADD X5, X9, 0x20
	0x03AA7D54 ADD X6, X10, 0x20
	0x03AA7D58 ADD X7, X11, 0x20
	0x03AA7D5C ADD X8, X12, 0x20
	0x03AA7D60 MOV X0, X21
	0x03AA7D64 MOV X2, X23
	0x03AA7D68 MOV W3, W26
	0x03AA7D6C STP X28, X27, [X31 + 0x8]
	0x03AA7D70 STR X8, [X31]
	0x03AA7D74 BL 0x3AA7688
	0x03AA7D78 LDR X8, [X21 + 0x48]
	0x03AA7D7C CBZ X8, 0x3AA7EDC
	0x03AA7D80 LDR W9, [X8 + 0x18]
	0x03AA7D84 CMP W19, W9
	0x03AA7D88 B.CS 0x3AA7EE0
	0x03AA7D8C LDR V0, [X31 + 0x58]
	0x03AA7D90 ADD X8, X8, X20, 0x2, LSL
	0x03AA7D94 STR S0, [X8 + 0x20]
	0x03AA7D98 LDR X8, [X21 + 0x28]
	0x03AA7D9C CBZ X8, 0x3AA7EDC
	0x03AA7DA0 LDR W9, [X8 + 0x18]
	0x03AA7DA4 CMP W19, W9
	0x03AA7DA8 B.CS 0x3AA7EE0
	0x03AA7DAC LDRB W9, [X31 + 0x54]
	0x03AA7DB0 ADD X8, X8, X20, 0x4, LSL
	0x03AA7DB4 ADD W19, W19, 0x1
	0x03AA7DB8 CMP W9, 0x0
	0x03AA7DBC FCSEL S0, S9, S8, EQ
	0x03AA7DC0 STR S0, [X8 + 0x2C]
	0x03AA7DC4 CMP W19, W25
	0x03AA7DC8 B.GE 0x3AA7DD8
	0x03AA7DCC ADD W26, W26, 0x1
	0x03AA7DD0 CMP W26, W23
	0x03AA7DD4 B.LT 0x3AA7CC0
	0x03AA7DD8 CBZ X29, 0x3AA7EDC
	0x03AA7DDC ADRP X19, 0x6B0000
	0x03AA7DE0 LDR X19, [X19 + 0xAD8]
	0x03AA7DE4 LDR X2, [X21 + 0x20]
	0x03AA7DE8 MOV X0, X29
	0x03AA7DEC MOV X3, X31
	0x03AA7DF0 LDR X8, [X19]
	0x03AA7DF4 LDR X8, [X8 + 0xB8]
	0x03AA7DF8 LDR W1, [X8 + 0x14]
	0x03AA7DFC BL 0x3C4D428
	0x03AA7E00 LDR X8, [X19]
	0x03AA7E04 LDR X2, [X21 + 0x28]
	0x03AA7E08 MOV X0, X29
	0x03AA7E0C MOV X3, X31
	0x03AA7E10 LDR X8, [X8 + 0xB8]
	0x03AA7E14 LDR W1, [X8 + 0x18]
	0x03AA7E18 BL 0x3C4D428
	0x03AA7E1C LDR X8, [X19]
	0x03AA7E20 LDR X2, [X21 + 0x30]
	0x03AA7E24 MOV X0, X29
	0x03AA7E28 MOV X3, X31
	0x03AA7E2C LDR X8, [X8 + 0xB8]
	0x03AA7E30 LDR W1, [X8 + 0x1C]
	0x03AA7E34 BL 0x3C4D428
	0x03AA7E38 LDR X8, [X19]
	0x03AA7E3C LDR X2, [X21 + 0x38]
	0x03AA7E40 MOV X0, X29
	0x03AA7E44 MOV X3, X31
	0x03AA7E48 LDR X8, [X8 + 0xB8]
	0x03AA7E4C LDR W1, [X8 + 0x20]
	0x03AA7E50 BL 0x3C4D428
	0x03AA7E54 LDR X8, [X19]
	0x03AA7E58 LDR X2, [X21 + 0x40]
	0x03AA7E5C MOV X0, X29
	0x03AA7E60 MOV X3, X31
	0x03AA7E64 LDR X8, [X8 + 0xB8]
	0x03AA7E68 LDR W1, [X8 + 0x24]
	0x03AA7E6C BL 0x3C4D428
	0x03AA7E70 LDR X8, [X19]
	0x03AA7E74 LDR X2, [X21 + 0x48]
	0x03AA7E78 MOV X0, X29
	0x03AA7E7C MOV X3, X31
	0x03AA7E80 LDR X8, [X8 + 0xB8]
	0x03AA7E84 LDR W1, [X8 + 0x28]
	0x03AA7E88 BL 0x3C4D3D4
	0x03AA7E8C LDR X8, [X19]
	0x03AA7E90 LDR V0, [X22 + 0x230]
	0x03AA7E94 FMOV S1, W31
	0x03AA7E98 FMOV S2, W31
	0x03AA7E9C LDR X8, [X8 + 0xB8]
	0x03AA7EA0 SCVTF S0, S0
	0x03AA7EA4 FMOV S3, W31
	0x03AA7EA8 MOV X0, X29
	0x03AA7EAC LDR W1, [X8 + 0x10]
	0x03AA7EB0 MOV X2, X31
	0x03AA7EB4 BL 0x3C4CED8
	0x03AA7EB8 LDP X20, X19, [X31 + 0x140]
	0x03AA7EBC LDP X22, X21, [X31 + 0x130]
	0x03AA7EC0 LDP X24, X23, [X31 + 0x120]
	0x03AA7EC4 LDP X26, X25, [X31 + 0x110]
	0x03AA7EC8 LDP X28, X27, [X31 + 0x100]
	0x03AA7ECC LDP X29, X30, [X31 + 0xF0]
	0x03AA7ED0 LDP D9, D8, [X31 + 0xE0]
	0x03AA7ED4 ADD X31, X31, 0x150
	0x03AA7ED8 RET
	0x03AA7EDC BL 0x1C16F20
	0x03AA7EE0 BL 0x1C16F28
	0x03AA7EE4 SUB X31, X31, 0x40
	0x03AA7EE8 STP X30, X21, [X31 + 0x20]
	0x03AA7EEC STP X20, X19, [X31 + 0x30]
	0x03AA7EF0 ADRP X20, 0x93B000
	0x03AA7EF4 LDRB W8, [X20 + 0x413]
	0x03AA7EF8 MOV X21, X3
	0x03AA7EFC MOV X19, X0
	0x03AA7F00 STP X1, X2, [X31 + 0x10]
	0x03AA7F04 TBNZ X8, 0x0, 0x3AA7F28
	0x03AA7F08 ADRP X0, 0x676000
	0x03AA7F0C LDR X0, [X0 + 0x148]
	0x03AA7F10 BL 0x1C16CF4
	0x03AA7F14 ADRP X0, 0x675000
	0x03AA7F18 LDR X0, [X0 + 0x8A8]
	0x03AA7F1C BL 0x1C16CF4
	0x03AA7F20 MOVZ W8, 0x1
	0x03AA7F24 STRB W8, [X20 + 0x413]
	0x03AA7F28 STP X31, X31, [X31]
	0x03AA7F2C LDR W20, [X21 + 0x4]
	0x03AA7F30 CBZ W20, 0x3AA8084
	0x03AA7F34 LDRB W8, [X19 + 0x51]
	0x03AA7F38 CBNZ W8, 0x3AA8084
	0x03AA7F3C ADD X0, X31, 0x10
	0x03AA7F40 MOVZ W1, 0x2
	0x03AA7F44 MOV X2, X31
	0x03AA7F48 BL 0x3C52FE4
	0x03AA7F4C ADRP X9, 0x675000
	0x03AA7F50 LDR X9, [X9 + 0x8A8]
	0x03AA7F54 MOV X8, X0
	0x03AA7F58 STP X8, X1, [X31]
	0x03AA7F5C LDR X0, [X9]
	0x03AA7F60 LDR W8, [X0 + 0xE0]
	0x03AA7F64 CBNZ W8, 0x3AA7F6C
	0x03AA7F68 BL 0x1C16DFC
	0x03AA7F6C MOV X0, X31
	0x03AA7F70 BL 0x3A89318
	0x03AA7F74 LDR W8, [X21 + 0x18]
	0x03AA7F78 MOV W20, W31
	0x03AA7F7C CMP W8, 0x1
	0x03AA7F80 B.LT 0x3AA7FE4
	0x03AA7F84 CMP W0, 0x1
	0x03AA7F88 MOV W9, W20
	0x03AA7F8C B.LT 0x3AA7FE8
	0x03AA7F90 LDR X11, [X31]
	0x03AA7F94 MOV X10, X31
	0x03AA7F98 MOV W9, W31
	0x03AA7F9C MOV W20, W31
	0x03AA7FA0 MOVN W12, 0x0
	0x03AA7FA4 LDR W13, [X21]
	0x03AA7FA8 CMP X10, X13
	0x03AA7FAC B.NE 0x3AA7FBC
	0x03AA7FB0 STR W12, [X11, X10, LSL #2]
	0x03AA7FB4 ADD W9, W9, 0x1
	0x03AA7FB8 B 0x3AA7FCC
	0x03AA7FBC LDR W13, [X11, X10, LSL #2]
	0x03AA7FC0 ADD W20, W20, 0x1
	0x03AA7FC4 SUB W13, W13, W9
	0x03AA7FC8 STR W13, [X11, X10, LSL #2]
	0x03AA7FCC ADD X10, X10, 0x1
	0x03AA7FD0 CMP X10, X8
	0x03AA7FD4 B.CS 0x3AA7FE8
	0x03AA7FD8 CMP W20, W0
	0x03AA7FDC B.LT 0x3AA7FA4
	0x03AA7FE0 B 0x3AA7FE8
	0x03AA7FE4 MOV W9, W20
	0x03AA7FE8 LDR W8, [X31 + 0x8]
	0x03AA7FEC ADD W9, W9, W20
	0x03AA7FF0 CMP W9, W8
	0x03AA7FF4 B.GE 0x3AA8018
	0x03AA7FF8 LDR X8, [X31]
	0x03AA7FFC SXTW X9, W9
	0x03AA8000 MOVN W10, 0x0
	0x03AA8004 STR W10, [X8, X9, LSL #2]
	0x03AA8008 LDRSW X11, [X31 + 0x8]
	0x03AA800C ADD X9, X9, 0x1
	0x03AA8010 CMP X9, X11
	0x03AA8014 B.LT 0x3AA8004
	0x03AA8018 LDP X1, X2, [X31]
	0x03AA801C ADD X0, X31, 0x10
	0x03AA8020 MOV X3, X31
	0x03AA8024 BL 0x3C530F0
	0x03AA8028 CMP W20, 0x1
	0x03AA802C B.LT 0x3AA8070
	0x03AA8030 LDRB W8, [X19 + 0x50]
	0x03AA8034 CBZ W8, 0x3AA8070
	0x03AA8038 ADD X0, X31, 0x10
	0x03AA803C MOV X1, X31
	0x03AA8040 BL 0x3C52F28
	0x03AA8044 MOV W19, W0
	0x03AA8048 MOV X0, X31
	0x03AA804C BL 0x3A7598C
	0x03AA8050 CBZ X0, 0x3AA8098
	0x03AA8054 MOV W1, W19
	0x03AA8058 MOV X2, X31
	0x03AA805C BL 0x3A75AE4
	0x03AA8060 MOV X1, X0
	0x03AA8064 ADD X0, X31, 0x10
	0x03AA8068 MOV X2, X31
	0x03AA806C BL 0x3C52FA0
	0x03AA8070 ADRP X8, 0x675000
	0x03AA8074 LDR X8, [X8 + 0x148]
	0x03AA8078 ADD X0, X31, 0x0
	0x03AA807C LDR X1, [X8]
	0x03AA8080 BL 0x23D5AD4
	0x03AA8084 MOV W0, W20
	0x03AA8088 LDP X20, X19, [X31 + 0x30]
	0x03AA808C LDP X30, X21, [X31 + 0x20]
	0x03AA8090 ADD X31, X31, 0x40
	0x03AA8094 RET
	0x03AA8098 BL 0x1C16F20
	0x03AA809C STP X30, X25, [X31 - 0x40]!
	0x03AA80A0 STP X24, X23, [X31 + 0x10]
	0x03AA80A4 STP X22, X21, [X31 + 0x20]
	0x03AA80A8 STP X20, X19, [X31 + 0x30]
	0x03AA80AC ADRP X25, 0x93A000
	0x03AA80B0 ADRP X22, 0x6A8000
	0x03AA80B4 ADRP X19, 0x6AF000
	0x03AA80B8 ADRP X20, 0x6AF000
	0x03AA80BC ADRP X24, 0x6AF000
	0x03AA80C0 ADRP X23, 0x6AF000
	0x03AA80C4 ADRP X21, 0x6AF000
	0x03AA80C8 LDR X22, [X22 + 0x598]
	0x03AA80CC LDRB W8, [X25 + 0x414]
	0x03AA80D0 LDR X19, [X19 + 0x840]
	0x03AA80D4 LDR X20, [X20 + 0x180]
	0x03AA80D8 LDR X24, [X24 + 0xC28]
	0x03AA80DC LDR X23, [X23 + 0xC30]
	0x03AA80E0 LDR X21, [X21 + 0xC38]
	0x03AA80E4 TBNZ X8, 0x0, 0x3AA8138
	0x03AA80E8 ADRP X0, 0x6AF000
	0x03AA80EC LDR X0, [X0 + 0x180]
	0x03AA80F0 BL 0x1C16CF4
	0x03AA80F4 ADRP X0, 0x6A8000
	0x03AA80F8 LDR X0, [X0 + 0x598]
	0x03AA80FC BL 0x1C16CF4
	0x03AA8100 ADRP X0, 0x6AF000
	0x03AA8104 LDR X0, [X0 + 0xC38]
	0x03AA8108 BL 0x1C16CF4
	0x03AA810C ADRP X0, 0x6AF000
	0x03AA8110 LDR X0, [X0 + 0xC30]
	0x03AA8114 BL 0x1C16CF4
	0x03AA8118 ADRP X0, 0x6AF000
	0x03AA811C LDR X0, [X0 + 0xC28]
	0x03AA8120 BL 0x1C16CF4
	0x03AA8124 ADRP X0, 0x6AF000
	0x03AA8128 LDR X0, [X0 + 0x840]
	0x03AA812C BL 0x1C16CF4
	0x03AA8130 MOVZ W8, 0x1
	0x03AA8134 STRB W8, [X25 + 0x414]
	0x03AA8138 LDR X0, [X22]
	0x03AA813C BL 0x1C16F10
	0x03AA8140 LDR X1, [X19]
	0x03AA8144 MOV X2, X31
	0x03AA8148 MOV X19, X0
	0x03AA814C BL 0x39B19AC
	0x03AA8150 LDR X8, [X20]
	0x03AA8154 LDR X8, [X8 + 0xB8]
	0x03AA8158 STR X19, [X8]
	0x03AA815C LDR X0, [X22]
	0x03AA8160 BL 0x1C16F10
	0x03AA8164 LDR X1, [X24]
	0x03AA8168 MOV X2, X31
	0x03AA816C MOV X19, X0
	0x03AA8170 BL 0x39B19AC
	0x03AA8174 LDR X8, [X20]
	0x03AA8178 LDR X8, [X8 + 0xB8]
	0x03AA817C STR X19, [X8 + 0x8]
	0x03AA8180 LDR X0, [X22]
	0x03AA8184 BL 0x1C16F10
	0x03AA8188 LDR X1, [X23]
	0x03AA818C MOV X2, X31
	0x03AA8190 MOV X19, X0
	0x03AA8194 BL 0x39B19AC
	0x03AA8198 LDR X8, [X20]
	0x03AA819C LDR X8, [X8 + 0xB8]
	0x03AA81A0 STR X19, [X8 + 0x10]
	0x03AA81A4 LDR X0, [X22]
	0x03AA81A8 BL 0x1C16F10
	0x03AA81AC LDR X1, [X21]
	0x03AA81B0 MOV X2, X31
	0x03AA81B4 MOV X19, X0
	0x03AA81B8 BL 0x39B19AC
	0x03AA81BC LDR X8, [X20]
	0x03AA81C0 LDP X22, X21, [X31 + 0x20]
	0x03AA81C4 LDP X24, X23, [X31 + 0x10]
	0x03AA81C8 LDR X8, [X8 + 0xB8]
	0x03AA81CC STR X19, [X8 + 0x18]
	0x03AA81D0 LDP X20, X19, [X31 + 0x30]
	0x03AA81D4 LDP X30, X25, [X31], #0x40
	0x03AA81D8 RET
	0x03AA81DC STR X29, [X31 - 0x50]!
	0x03AA81E0 STP X30, X25, [X31 + 0x10]
	0x03AA81E4 STP X24, X23, [X31 + 0x20]
	0x03AA81E8 STP X22, X21, [X31 + 0x30]
	0x03AA81EC STP X20, X19, [X31 + 0x40]
	0x03AA81F0 SUB X31, X31, 0x550
	0x03AA81F4 ADRP X21, 0x93A000
	0x03AA81F8 LDRB W8, [X21 + 0x416]
	0x03AA81FC MOV X20, X1
	0x03AA8200 MOV X19, X0
	0x03AA8204 TBNZ X8, 0x0, 0x3AA821C
	0x03AA8208 ADRP X0, 0x6AD000
	0x03AA820C LDR X0, [X0 + 0xC10]
	0x03AA8210 BL 0x1C16CF4
	0x03AA8214 MOVZ W8, 0x1
	0x03AA8218 STRB W8, [X21 + 0x416]
	0x03AA821C MOVI V0.2D, 0x0
	0x03AA8220 STR V0, [X31 + 0x4C]
	0x03AA8224 STR V0, [X31 + 0x4B]
	0x03AA8228 STR V0, [X31 + 0x4A]
	0x03AA822C STR V0, [X31 + 0x49]
	0x03AA8230 STR V0, [X31 + 0x48]
	0x03AA8234 STR V0, [X31 + 0x47]
	0x03AA8238 STR V0, [X31 + 0x46]
	0x03AA823C STR V0, [X31 + 0x45]
	0x03AA8240 STR V0, [X31 + 0x44]
	0x03AA8244 STR V0, [X31 + 0x43]
	0x03AA8248 STR V0, [X31 + 0x42]
	0x03AA824C STR V0, [X31 + 0x41]
	0x03AA8250 LDR X0, [X20 + 0x178]
	0x03AA8254 CBZ X0, 0x3AA8520
	0x03AA8258 MOV X1, X31
	0x03AA825C BL 0x3984C98
	0x03AA8260 TBZ X0, 0x0, 0x3AA8284
	0x03AA8264 LDR X0, [X20 + 0x178]
	0x03AA8268 CBZ X0, 0x3AA8520
	0x03AA826C MOV X1, X31
	0x03AA8270 BL 0x3984DE0
	0x03AA8274 ANDS W31, W0, 0x1
	0x03AA8278 MOVZ W8, 0x1
	0x03AA827C CINC X23, X8, NE
	0x03AA8280 B 0x3AA8288
	0x03AA8284 MOVZ W23, 0x1
	0x03AA8288 ADRP X22, 0x6AD000
	0x03AA828C LDR X22, [X22 + 0xC10]
	0x03AA8290 MOV X21, X31
	0x03AA8294 MOVZ W24, 0x20
	0x03AA8298 ADD X0, X31, 0x200
	0x03AA829C MOVZ W2, 0x210
	0x03AA82A0 MOV X1, X20
	0x03AA82A4 BL 0x3EB1AC0
	0x03AA82A8 ADD X8, X31, 0x1C0
	0x03AA82AC ADD X0, X31, 0x200
	0x03AA82B0 MOV W1, W21
	0x03AA82B4 MOV X2, X31
	0x03AA82B8 BL 0x3A92B70
	0x03AA82BC LDP V0, V1, [X31 + 0x1C0]
	0x03AA82C0 LDP V2, V3, [X31 + 0x1E0]
	0x03AA82C4 ADD X0, X31, 0x200
	0x03AA82C8 MOVZ W2, 0x210
	0x03AA82CC MOV X1, X20
	0x03AA82D0 STR V0, [X31 + 0x51]
	0x03AA82D4 STR V1, [X31 + 0x52]
	0x03AA82D8 STR V2, [X31 + 0x53]
	0x03AA82DC STR V3, [X31 + 0x54]
	0x03AA82E0 BL 0x3EB1AC0
	0x03AA82E4 ADD X8, X31, 0x1C0
	0x03AA82E8 ADD X0, X31, 0x200
	0x03AA82EC MOV W1, W21
	0x03AA82F0 MOV X2, X31
	0x03AA82F4 BL 0x3A92BE4
	0x03AA82F8 LDP V0, V1, [X31 + 0x1C0]
	0x03AA82FC LDP V2, V3, [X31 + 0x1E0]
	0x03AA8300 LDR X0, [X22]
	0x03AA8304 STR V0, [X31 + 0x4D]
	0x03AA8308 STR V1, [X31 + 0x4E]
	0x03AA830C STR V2, [X31 + 0x4F]
	0x03AA8310 STR V3, [X31 + 0x50]
	0x03AA8314 LDR W8, [X0 + 0xE0]
	0x03AA8318 CBNZ W8, 0x3AA8324
	0x03AA831C BL 0x1C16DFC
	0x03AA8320 LDR X0, [X22]
	0x03AA8324 LDR X8, [X0 + 0xB8]
	0x03AA8328 LDR V0, [X31 + 0x4D]
	0x03AA832C LDR V1, [X31 + 0x4E]
	0x03AA8330 LDR V2, [X31 + 0x4F]
	0x03AA8334 LDR V3, [X31 + 0x50]
	0x03AA8338 LDR X25, [X8 + 0x8]
	0x03AA833C STP V0, V1, [X31 + 0x140]
	0x03AA8340 LDR V0, [X31 + 0x51]
	0x03AA8344 LDR V1, [X31 + 0x52]
	0x03AA8348 STP V2, V3, [X31 + 0x160]
	0x03AA834C LDR V2, [X31 + 0x53]
	0x03AA8350 LDR V3, [X31 + 0x54]
	0x03AA8354 ADD X8, X31, 0x180
	0x03AA8358 ADD X0, X31, 0x140
	0x03AA835C ADD X1, X31, 0x100
	0x03AA8360 MOV X2, X31
	0x03AA8364 STP V0, V1, [X31 + 0x100]
	0x03AA8368 STP V2, V3, [X31 + 0x120]
	0x03AA836C BL 0x3C27F74
	0x03AA8370 LDP V0, V1, [X31 + 0x180]
	0x03AA8374 LDP V2, V3, [X31 + 0x1A0]
	0x03AA8378 STP V0, V1, [X31 + 0x1C0]
	0x03AA837C STP V2, V3, [X31 + 0x1E0]
	0x03AA8380 CBZ X25, 0x3AA8520
	0x03AA8384 LDP V0, V1, [X31 + 0x1C0]
	0x03AA8388 LDP V2, V3, [X31 + 0x1E0]
	0x03AA838C STP V0, V1, [X31 + 0xC0]
	0x03AA8390 STP V2, V3, [X31 + 0xE0]
	0x03AA8394 LDR W8, [X25 + 0x18]
	0x03AA8398 CMP X21, X8
	0x03AA839C B.CS 0x3AA851C
	0x03AA83A0 LDP V0, V1, [X31 + 0xE0]
	0x03AA83A4 LDP V2, V3, [X31 + 0xC0]
	0x03AA83A8 ADD X8, X25, X24
	0x03AA83AC ADD X0, X31, 0x490
	0x03AA83B0 STP V0, V1, [X8 + 0x20]
	0x03AA83B4 STP V2, V3, [X8]
	0x03AA83B8 LDR V0, [X31 + 0x51]
	0x03AA83BC LDR V1, [X31 + 0x52]
	0x03AA83C0 LDR V2, [X31 + 0x53]
	0x03AA83C4 LDR V3, [X31 + 0x54]
	0x03AA83C8 STR V0, [X31 + 0x49]
	0x03AA83CC STR V1, [X31 + 0x4A]
	0x03AA83D0 STR V2, [X31 + 0x4B]
	0x03AA83D4 STR V3, [X31 + 0x4C]
	0x03AA83D8 FMOV S0, W31
	0x03AA83DC FMOV S1, W31
	0x03AA83E0 FMOV S2, W31
	0x03AA83E4 FMOV S3, 1
	0x03AA83E8 MOVZ W1, 0x3
	0x03AA83EC MOV X2, X31
	0x03AA83F0 BL 0x3C28180
	0x03AA83F4 LDR V0, [X31 + 0x4D]
	0x03AA83F8 LDR V1, [X31 + 0x4E]
	0x03AA83FC LDR V2, [X31 + 0x4F]
	0x03AA8400 LDR V3, [X31 + 0x50]
	0x03AA8404 ADD X8, X31, 0x180
	0x03AA8408 STP V0, V1, [X31 + 0x80]
	0x03AA840C LDR V0, [X31 + 0x49]
	0x03AA8410 LDR V1, [X31 + 0x4A]
	0x03AA8414 STP V2, V3, [X31 + 0xA0]
	0x03AA8418 LDR V2, [X31 + 0x4B]
	0x03AA841C LDR V3, [X31 + 0x4C]
	0x03AA8420 ADD X0, X31, 0x80
	0x03AA8424 ADD X1, X31, 0x40
	0x03AA8428 MOV X2, X31
	0x03AA842C STP V0, V1, [X31 + 0x40]
	0x03AA8430 STP V2, V3, [X31 + 0x60]
	0x03AA8434 BL 0x3C27F74
	0x03AA8438 LDP V0, V1, [X31 + 0x180]
	0x03AA843C LDP V2, V3, [X31 + 0x1A0]
	0x03AA8440 ADD X8, X31, 0x180
	0x03AA8444 ADD X0, X31, 0x450
	0x03AA8448 MOV X1, X31
	0x03AA844C STR V0, [X31 + 0x45]
	0x03AA8450 STR V1, [X31 + 0x46]
	0x03AA8454 STR V2, [X31 + 0x47]
	0x03AA8458 STR V3, [X31 + 0x48]
	0x03AA845C BL 0x3C271CC
	0x03AA8460 LDP V1, V0, [X31 + 0x1A0]
	0x03AA8464 LDP V3, V2, [X31 + 0x180]
	0x03AA8468 LDR X8, [X22]
	0x03AA846C STR V0, [X31 + 0x44]
	0x03AA8470 STR V1, [X31 + 0x43]
	0x03AA8474 STR V2, [X31 + 0x42]
	0x03AA8478 STR V3, [X31 + 0x41]
	0x03AA847C LDR X8, [X8 + 0xB8]
	0x03AA8480 LDR X8, [X8 + 0x8]
	0x03AA8484 STP V3, V2, [X31 + 0x180]
	0x03AA8488 STP V1, V0, [X31 + 0x1A0]
	0x03AA848C CBZ X8, 0x3AA8520
	0x03AA8490 LDP V0, V1, [X31 + 0x180]
	0x03AA8494 LDP V2, V3, [X31 + 0x1A0]
	0x03AA8498 STP V0, V1, [X31]
	0x03AA849C STP V2, V3, [X31 + 0x20]
	0x03AA84A0 LDR W9, [X8 + 0x18]
	0x03AA84A4 CMP X21, X9
	0x03AA84A8 B.CS 0x3AA851C
	0x03AA84AC LDP V0, V1, [X31 + 0x20]
	0x03AA84B0 LDP V2, V3, [X31]
	0x03AA84B4 ADD X21, X21, 0x1
	0x03AA84B8 ADD X8, X8, X24
	0x03AA84BC CMP X23, X21
	0x03AA84C0 ADD X24, X24, 0x40
	0x03AA84C4 STP V0, V1, [X8 + 0x20]
	0x03AA84C8 STP V2, V3, [X8]
	0x03AA84CC B.NE 0x3AA8298
	0x03AA84D0 LDR X0, [X22]
	0x03AA84D4 LDR W8, [X0 + 0xE0]
	0x03AA84D8 CBNZ W8, 0x3AA84E4
	0x03AA84DC BL 0x1C16DFC
	0x03AA84E0 LDR X0, [X22]
	0x03AA84E4 CBZ X19, 0x3AA8520
	0x03AA84E8 LDR X8, [X0 + 0xB8]
	0x03AA84EC MOV X0, X19
	0x03AA84F0 MOV X3, X31
	0x03AA84F4 LDR X2, [X8 + 0x8]
	0x03AA84F8 LDR W1, [X8]
	0x03AA84FC BL 0x3C4D47C
	0x03AA8500 ADD X31, X31, 0x550
	0x03AA8504 LDP X20, X19, [X31 + 0x40]
	0x03AA8508 LDP X22, X21, [X31 + 0x30]
	0x03AA850C LDP X24, X23, [X31 + 0x20]
	0x03AA8510 LDP X30, X25, [X31 + 0x10]
	0x03AA8514 LDR X29, [X31], #0x50
	0x03AA8518 RET
	0x03AA851C BL 0x1C16F28
	0x03AA8520 BL 0x1C16F20
	0x03AA8524 STR X30, [X31 - 0x30]!
	0x03AA8528 STP X22, X21, [X31 + 0x10]
	0x03AA852C STP X20, X19, [X31 + 0x20]
	0x03AA8530 ADRP X21, 0x93A000
	0x03AA8534 ADRP X22, 0x6AF000
	0x03AA8538 ADRP X19, 0x6AD000
	0x03AA853C ADRP X20, 0x64F000
	0x03AA8540 LDRB W8, [X21 + 0x417]
	0x03AA8544 LDR X22, [X22 + 0xC40]
	0x03AA8548 LDR X19, [X19 + 0xC10]
	0x03AA854C LDR X20, [X20 + 0x988]
	0x03AA8550 TBNZ X8, 0x0, 0x3AA8580
	0x03AA8554 ADRP X0, 0x64F000
	0x03AA8558 LDR X0, [X0 + 0x988]
	0x03AA855C BL 0x1C16CF4
	0x03AA8560 ADRP X0, 0x6AD000
	0x03AA8564 LDR X0, [X0 + 0xC10]
	0x03AA8568 BL 0x1C16CF4
	0x03AA856C ADRP X0, 0x6AF000
	0x03AA8570 LDR X0, [X0 + 0xC40]
	0x03AA8574 BL 0x1C16CF4
	0x03AA8578 MOVZ W8, 0x1
	0x03AA857C STRB W8, [X21 + 0x417]
	0x03AA8580 LDR X0, [X22]
	0x03AA8584 MOV X1, X31
	0x03AA8588 BL 0x3C124EC
	0x03AA858C LDR X8, [X19]
	0x03AA8590 MOVZ W1, 0x2
	0x03AA8594 LDR X8, [X8 + 0xB8]
	0x03AA8598 STR W0, [X8]
	0x03AA859C LDR X0, [X20]
	0x03AA85A0 BL 0x1C16D6C

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+32], X30
	003 Move [X31+40], X1
	004 Move [X31+48], X28
	005 Move [X31+56], X27
	006 Move [X31+64], X26
	007 Move [X31+72], X25
	008 Move [X31+80], X24
	009 Move [X31+88], X23
	010 Move [X31+96], X22
	011 Move [X31+104], X21
	012 Move [X31+112], X20
	013 Move [X31+120], X19
	014 Move X19, 0x93C000
	015 Move X28, 0x6B1000
	016 Move W8, [X19+1038]
	017 Move X28, [X28+384]
	018 Move X21, X2
	019 Move X20, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {101}
	024 Move X0, 0x675000
	025 Move X0, [X0+2296]
	026 Call 0x1C17CF4
	027 Move X0, 0x6B1000
	028 Move X0, [X0+384]
	029 Call 0x1C17CF4
	030 Move X0, 0x6B1000
	031 Move X0, [X0+3008]
	032 Call 0x1C17CF4
	033 Move X0, 0x6B1000
	034 Move X0, [X0+3016]
	035 Call 0x1C17CF4
	036 Move X0, 0x6B0000
	037 Move X0, [X0+3832]
	038 Call 0x1C17CF4
	039 Move X0, 0x6AA000
	040 Move X0, [X0+3200]
	041 Call 0x1C17CF4
	042 Move X0, 0x676000
	043 Move X0, [X0+2216]
	044 Call 0x1C17CF4
	045 Move X0, 0x6B1000
	046 Move X0, [X0+3024]
	047 Call 0x1C17CF4
	048 Move X0, 0x6AF000
	049 Move X0, [X0+3864]
	050 Call 0x1C17CF4
	051 Move X0, 0x6AF000
	052 Move X0, [X0+3888]
	053 Call 0x1C17CF4
	054 Move X0, 0x6AF000
	055 Move X0, [X0+3904]
	056 Call 0x1C17CF4
	057 Move X0, 0x6B1000
	058 Move X0, [X0+3032]
	059 Call 0x1C17CF4
	060 Move X0, 0x6B1000
	061 Move X0, [X0+3040]
	062 Call 0x1C17CF4
	063 Move X0, 0x6AF000
	064 Move X0, [X0+3912]
	065 Call 0x1C17CF4
	066 Move X0, 0x6AF000
	067 Move X0, [X0+3920]
	068 Call 0x1C17CF4
	069 Move X0, 0x6B1000
	070 Move X0, [X0+3048]
	071 Call 0x1C17CF4
	072 Move X0, 0x6AF000
	073 Move X0, [X0+3928]
	074 Call 0x1C17CF4
	075 Move X0, 0x6B1000
	076 Move X0, [X0+3056]
	077 Call 0x1C17CF4
	078 Move X0, 0x6AF000
	079 Move X0, [X0+3944]
	080 Call 0x1C17CF4
	081 Move X0, 0x6AF000
	082 Move X0, [X0+3952]
	083 Call 0x1C17CF4
	084 Move X0, 0x6B0000
	085 Move X0, [X0+368]
	086 Call 0x1C17CF4
	087 Move X0, 0x6B1000
	088 Move X0, [X0+3064]
	089 Call 0x1C17CF4
	090 Move X0, 0x6AF000
	091 Move X0, [X0+3976]
	092 Call 0x1C17CF4
	093 Move X0, 0x6B1000
	094 Move X0, [X0+3072]
	095 Call 0x1C17CF4
	096 Move X0, 0x6B1000
	097 Move X0, [X0+3080]
	098 Call 0x1C17CF4
	099 Move W8, 1
	100 Move [X19+1038], W8
	101 Move X0, [X28]
	102 Move [X31+24], W31
	103 Move [X31+16], W31
	104 Move W27, [X21+556]
	105 Move W26, [X21+584]
	106 Move W8, [X0+224]
	107 Move X19, [X21]
	108 Compare W8, 0
	109 JumpIfNotEqual {112}
	110 Call 0x1C17DFC
	111 Move X0, [X28]
	112 Move X8, [X0+184]
	113 Move X25, 0x676000
	114 Add X0, X31, 24
	115 Move X1, X31
	116 Move X2, [X8]
	117 Move X25, [X25+2216]
	118 Move X3, X31
	119 Call ProfilingScope..ctor, X0, X1, X2
	120 Move W8, [X20+81]
	121 Compare W8, 0
	122 JumpIfEqual {296}
	123 Add X0, X20, 176
	124 Move X1, X19
	125 Move X2, X21
	126 Move X3, X31
	127 Call ReflectionProbeManager.UpdateGpuData, X0, X1, X2
	128 Move X0, [X28]
	129 Move W8, [X0+224]
	130 Compare W8, 0
	131 JumpIfNotEqual {134}
	132 Call 0x1C17DFC
	133 Move X0, [X28]
	134 Move X8, [X0+184]
	135 Move X2, [X8+16]
	136 Move [X31+8], W31
	137 Add X0, X31, 8
	138 Move X1, X31
	139 Move X3, X31
	140 Call ProfilingScope..ctor, X0, X1, X2
	141 Move W8, [X31+8]
	142 Add X0, X20, 104
	143 Move [X31+16], W8
	144 Move X1, X31
	145 Call JobHandle.Complete, X0
	146 Move X24, X31
	147 Move W22, 3
	148 Add X0, X31, 16
	149 Move X1, X31
	150 Call ProfilingScope.Dispose, X0
	151 Compare X24, 0
	152 JumpIfNotEqual {552}
	153 NotImplemented "Instruction CMP not yet implemented."
	154 Compare W22, 0
	155 JumpIfNotEqual {533}
	156 Move X0, [X28]
	157 Move W8, [X0+224]
	158 Compare W8, 0
	159 JumpIfNotEqual {162}
	160 Call 0x1C17DFC
	161 Move X0, [X28]
	162 Move X8, [X0+184]
	163 Move X2, [X8+24]
	164 Move [X31], W31
	165 Add X0, X31, 0
	166 Move X1, X31
	167 Move X3, X31
	168 Call ProfilingScope..ctor, X0, X1, X2
	169 Move W8, [X31]
	170 Move X23, 0x6B1000
	171 Move X23, [X23+3016]
	172 Add X0, X20, 120
	173 Move [X31+16], W8
	174 Move X22, [X20+136]
	175 Move X2, [X23]
	176 Move W1, 4
	177 Call NativeArray`1<UInt32>.Reinterpret, X0, X1
	178 Compare X22, 0
	179 JumpIfEqual {554}
	180 Move X24, 0x6B1000
	181 Move X24, [X24+3008]
	182 Move X2, X0
	183 Move X4, X1
	184 Move X3, [X24]
	185 Move X0, X22
	186 Move X1, X2
	187 Move X2, X4
	188 Call GraphicsBuffer.SetData, X0, X1
	189 Move X22, [X20+160]
	190 Move X2, [X23]
	191 Add X0, X20, 144
	192 Move W1, 4
	193 Call NativeArray`1<UInt32>.Reinterpret, X0, X1
	194 Compare X22, 0
	195 JumpIfEqual {555}
	196 Move X3, [X24]
	197 Move X2, X0
	198 Move X4, X1
	199 Move X0, X22
	200 Move X1, X2
	201 Move X2, X4
	202 Call GraphicsBuffer.SetData, X0, X1
	203 Move X0, [X25]
	204 Move X22, [X20+136]
	205 Move W8, [X0+224]
	206 Compare W8, 0
	207 JumpIfNotEqual {209}
	208 Call 0x1C17DFC
	209 Move X0, X31
	210 Call UniversalRenderPipeline.get_maxZBinWords
	211 Compare X19, 0
	212 JumpIfEqual {558}
	213 Move X8, 0x6B1000
	214 Move X8, [X8+3056]
	215 Move W4, W0
	216 ShiftRight W4, 30
	217 And W4, W4, 0x1FFFFFFF
	218 Move X2, [X8]
	219 Move X0, X19
	220 Move X1, X22
	221 Move W3, W31
	222 Move X5, X31
	223 Call CommandBuffer.SetGlobalConstantBuffer, X0, X1, X2, X3, X4
	224 Move X22, [X20+160]
	225 Move X0, X31
	226 Call UniversalRenderPipeline.get_maxTileWords
	227 Move X8, 0x6B1000
	228 Move X8, [X8+3064]
	229 Move W4, W0
	230 ShiftRight W4, 30
	231 And W4, W4, 0x1FFFFFFF
	232 Move X2, [X8]
	233 Move X0, X19
	234 Move X1, X22
	235 Move W3, W31
	236 Move X5, X31
	237 Call CommandBuffer.SetGlobalConstantBuffer, X0, X1, X2, X3, X4
	238 Move X24, X31
	239 Add X0, X31, 16
	240 Move X1, X31
	241 Call ProfilingScope.Dispose, X0
	242 Compare X24, 0
	243 JumpIfNotEqual {556}
	244 Move V2, [X20+316]
	245 Move V3, [X20+84]
	246 Move V0, [X20+308]
	247 Move V1, [X20+312]
	248 NotImplemented "Instruction SCVTF not yet implemented."
	249 NotImplemented "Instruction SCVTF not yet implemented."
	250 Move X0, X31
	251 Call float4.op_Implicit, X0
	252 Compare X19, 0
	253 JumpIfEqual {559}
	254 Move X8, 0x6B1000
	255 Move X8, [X8+3040]
	256 Move X1, [X8]
	257 Move X0, X19
	258 Move X2, X31
	259 Call CommandBuffer.SetGlobalVector, X0, X1, X2
	260 Move V0, [X20+88]
	261 Move V1, [X21+300]
	262 Move V2, [X21+304]
	263 NotImplemented "Instruction SCVTF not yet implemented."
	264 NotImplemented "Instruction FDIV not yet implemented."
	265 NotImplemented "Instruction FDIV not yet implemented."
	266 Move X0, X31
	267 Call float2.op_Implicit, X0
	268 Move V2, [X20+92]
	269 Move V3, [X20+304]
	270 NotImplemented "Instruction SCVTF not yet implemented."
	271 NotImplemented "Instruction SCVTF not yet implemented."
	272 Move X0, X31
	273 Call float4.op_Implicit, X0
	274 Move X8, 0x6B1000
	275 Move X8, [X8+3080]
	276 Move X1, [X8]
	277 Move X0, X19
	278 Move X2, X31
	279 Call CommandBuffer.SetGlobalVector, X0, X1, X2
	280 Move W8, [X20+92]
	281 Move W9, [X20+96]
	282 Move V0, [X20+320]
	283 Multiply W8, W9, W8
	284 NotImplemented "Instruction SCVTF not yet implemented."
	285 NotImplemented "Instruction SCVTF not yet implemented."
	286 Move S2, W31
	287 Move S3, W31
	288 Move X0, X31
	289 Call float4.op_Implicit, X0
	290 Move X8, 0x6B0000
	291 Move X8, [X8+3032]
	292 Move X1, [X8]
	293 Move X0, X19
	294 Move X2, X31
	295 Call CommandBuffer.SetGlobalVector, X0, X1, X2
	296 Add X22, X21, 552
	297 Move [X20+24], W31
	298 Move X0, X20
	299 Move X1, X19
	300 Move X2, X22
	301 Call ForwardLights.SetupMainLightConstants, X0, X1, X2
	302 Move X0, X20
	303 Move X1, X19
	304 Move X2, X21
	305 Call ForwardLights.SetupAdditionalLightConstants, X0, X1, X2
	306 Move X8, [X21+464]
	307 Compare X8, 0
	308 JumpIfEqual {550}
	309 Move W8, [X8+423]
	310 Compare W8, 0
	311 JumpIfEqual {316}
	312 Move W8, [X21+589]
	313 Compare W8, 0
	314 JumpIfEqual {316}
	315 Move W24, 1
	316 NotImplemented "Instruction CMP not yet implemented."
	317 NotImplemented "Instruction CSET not yet implemented."
	318 Move X8, 0x6AE000
	319 Move X27, 0x674000
	320 Move X8, [X8+3888]
	321 Move X27, [X27+2296]
	322 And W31, W24, W26
	323 Move W9, [X20+81]
	324 Xor W28, W9, 1
	325 Move W28, W31
	326 Move X0, [X27]
	327 Move X23, [X8]
	328 Move W9, [X0+224]
	329 Compare W9, 0
	330 JumpIfNotEqual {332}
	331 Call 0x1C17DFC
	332 NotImplemented "Instruction CMP not yet implemented."
	333 NotImplemented "Instruction CSET not yet implemented."
	334 Move X0, X19
	335 Move X1, X23
	336 Move X3, X31
	337 Call CoreUtils.SetKeyword, X0, X1, X2
	338 Move X8, 0x6AE000
	339 Move X8, [X8+3920]
	340 Move W28, W31
	341 Compare W26, 0
	342 JumpIfNotEqual {347}
	343 Compare W24, 0
	344 JumpIfEqual {347}
	345 Move W9, [X20+81]
	346 Xor W28, W9, 1
	347 Move X0, [X27]
	348 Move X23, [X8]
	349 Move W9, [X0+224]
	350 Compare W9, 0
	351 JumpIfNotEqual {353}
	352 Call 0x1C17DFC
	353 NotImplemented "Instruction CMP not yet implemented."
	354 NotImplemented "Instruction CSET not yet implemented."
	355 Move X0, X19
	356 Move X1, X23
	357 Move X3, X31
	358 Call CoreUtils.SetKeyword, X0, X1, X2
	359 Move X8, 0x6AE000
	360 Move X8, [X8+3904]
	361 Move W2, [X20+81]
	362 Move X1, [X8]
	363 Move X0, X19
	364 Move X3, X31
	365 Call CoreUtils.SetKeyword, X0, X1, X2
	366 Move W8, [X21+585]
	367 Compare W8, 0
	368 JumpIfEqual {381}
	369 Move W8, [X20+24]
	370 NotImplemented "Instruction CMP not yet implemented."
	371 NotImplemented "Instruction CSET not yet implemented."
	372 Move X0, X31
	373 Call QualitySettings.get_shadowmaskMode
	374 Move W8, [X21+585]
	375 NotImplemented "Instruction CMP not yet implemented."
	376 NotImplemented "Instruction CSET not yet implemented."
	377 Compare W8, 0
	378 JumpIfNotEqual {385}
	379 Move W24, W31
	380 Move W23, 1
	381 Move W26, W31
	382 Move W23, W31
	383 Move W24, W31
	384 Move W26, W31
	385 Move W8, [X20+24]
	386 NotImplemented "Instruction CMP not yet implemented."
	387 NotImplemented "Instruction CSET not yet implemented."
	388 Move X0, [X27]
	389 Move W8, [X0+224]
	390 Compare W8, 0
	391 JumpIfNotEqual {393}
	392 Call 0x1C17DFC
	393 Move X8, 0x6AE000
	394 Move X8, [X8+3944]
	395 Or W2, W24, W26
	396 Move X1, [X8]
	397 Move X0, X19
	398 Move X3, X31
	399 Call CoreUtils.SetKeyword, X0, X1, X2
	400 Move X8, 0x6AE000
	401 Move X8, [X8+3928]
	402 Move X1, [X8]
	403 Move X0, X19
	404 Move W2, W23
	405 Move X3, X31
	406 Call CoreUtils.SetKeyword, X0, X1, X2
	407 Move X8, 0x6AE000
	408 Move X8, [X8+3912]
	409 Move X1, [X8]
	410 Move X0, X19
	411 Move W2, W24
	412 Move X3, X31
	413 Call CoreUtils.SetKeyword, X0, X1, X2
	414 Move X8, 0x6AE000
	415 Move X8, [X8+3864]
	416 Move W2, [X21+587]
	417 Move X1, [X8]
	418 Move X0, X19
	419 Move X3, X31
	420 Call CoreUtils.SetKeyword, X0, X1, X2
	421 Move X8, 0x6AE000
	422 Move X8, [X8+3952]
	423 Move W2, [X21+586]
	424 Move X1, [X8]
	425 Move X0, X19
	426 Move X3, X31
	427 Call CoreUtils.SetKeyword, X0, X1, X2
	428 Move X0, [X25]
	429 Move W8, [X0+224]
	430 Compare W8, 0
	431 JumpIfNotEqual {433}
	432 Call 0x1C17DFC
	433 Move X0, X31
	434 Call UniversalRenderPipeline.get_asset
	435 Compare X0, 0
	436 JumpIfEqual {551}
	437 Move X8, 0x6AF000
	438 Move X8, [X8+3832]
	439 Move W23, [X0+120]
	440 Move X8, [X8]
	441 Move W9, [X8+224]
	442 Compare W9, 0
	443 JumpIfNotEqual {446}
	444 Move X0, X8
	445 Call 0x1C17DFC
	446 Move W0, W23
	447 Move X1, X31
	448 Call PlatformAutoDetect.ShAutoDetect, X0
	449 Move X8, 0x6B0000
	450 Move X8, [X8+3048]
	451 Move W23, W0
	452 NotImplemented "Instruction CMP not yet implemented."
	453 NotImplemented "Instruction CSET not yet implemented."
	454 Move X1, [X8]
	455 Move X0, X19
	456 Move X3, X31
	457 Call CoreUtils.SetKeyword, X0, X1, X2
	458 Move X8, 0x6B0000
	459 Move X8, [X8+3072]
	460 NotImplemented "Instruction CMP not yet implemented."
	461 NotImplemented "Instruction CSET not yet implemented."
	462 Move X1, [X8]
	463 Move X0, X19
	464 Move X3, X31
	465 Call CoreUtils.SetKeyword, X0, X1, X2
	466 Move X8, 0x6AE000
	467 Move X8, [X8+3976]
	468 Move W9, [X21+588]
	469 Move X23, [X8]
	470 Compare W9, 0
	471 JumpIfEqual {483}
	472 Move X0, [X27]
	473 Move X21, [X21+216]
	474 Move W8, [X0+224]
	475 Compare W8, 0
	476 JumpIfNotEqual {478}
	477 Call 0x1C17DFC
	478 Move X0, X21
	479 Move X1, X31
	480 Call CoreUtils.IsSceneLightingDisabled, X0
	481 NotImplemented "Instruction ORN not yet implemented."
	482 And W21, W8, 1
	483 Move W21, W31
	484 Move X0, [X27]
	485 Move W8, [X0+224]
	486 Compare W8, 0
	487 JumpIfNotEqual {489}
	488 Call 0x1C17DFC
	489 Move X0, X19
	490 Move X1, X23
	491 Move W2, W21
	492 Move X3, X31
	493 Call CoreUtils.SetKeyword, X0, X1, X2
	494 Move X0, [X20+168]
	495 Compare X0, 0
	496 JumpIfEqual {502}
	497 Move X1, [X31+40]
	498 Move X2, X19
	499 Move X3, X22
	500 Move X4, X31
	501 Call LightCookieManager.Setup, X0, X1, X2, X3
	502 Move X0, [X27]
	503 Move W8, [X0+224]
	504 Compare W8, 0
	505 JumpIfNotEqual {507}
	506 Call 0x1C17DFC
	507 Move X8, 0x6AF000
	508 Move X8, [X8+368]
	509 Move X1, [X8]
	510 Move X0, X19
	511 Move W2, W31
	512 Move X3, X31
	513 Call CoreUtils.SetKeyword, X0, X1, X2
	514 Add X0, X31, 24
	515 Move X1, X31
	516 Call ProfilingScope.Dispose, X0
	517 Move X8, 0x6A9000
	518 Move X8, [X8+3200]
	519 Move X0, [X8]
	520 Move W8, [X0+224]
	521 Compare W8, 0
	522 JumpIfNotEqual {524}
	523 Call 0x1C17DFC
	524 Add X0, X31, 40
	525 Move X1, X19
	526 Move X2, X31
	527 Call ScriptableRenderContext.ExecuteCommandBuffer, X0, X1
	528 Compare X19, 0
	529 JumpIfEqual {549}
	530 Move X0, X19
	531 Move X1, X31
	532 Call CommandBuffer.Clear, X0
	533 Add X0, X31, 24
	534 Move X1, X31
	535 Call ProfilingScope.Dispose, X0
	536 Move X20, [X31+112]
	537 Move X19, [X31+120]
	538 Move X22, [X31+96]
	539 Move X21, [X31+104]
	540 Move X24, [X31+80]
	541 Move X23, [X31+88]
	542 Move X26, [X31+64]
	543 Move X25, [X31+72]
	544 Move X28, [X31+48]
	545 Move X27, [X31+56]
	546 Move X30, [X31+32]
	547 Add X31, X31, 128
	548 Return 
	549 Call 0x1C17F20
	550 Call 0x1C17F20
	551 Call 0x1C17F20
	552 Move X0, X24
	553 Call 0x1C17F18
	554 Call 0x1C17F20
	555 Call 0x1C17F20
	556 Move X0, X24
	557 Call 0x1C17F18
	558 Call 0x1C17F20
	559 Call 0x1C17F20
	560 Move X22, X1
	561 NotImplemented "Instruction CMP not yet implemented."
	562 Move X23, X0
	563 Move X0, X23
	564 Call 0x3EB2AD0
	565 Move X24, [X0]
	566 Call 0x3EB2AE0
	567 Move W22, W31
	568 Move X24, X31
	569 Add X0, X31, 16
	570 Move X1, X31
	571 Call ProfilingScope.Dispose, X0
	572 Compare X24, 0
	573 JumpIfEqual {597}
	574 Move X0, X24
	575 Call 0x1C17F18
	576 Move X22, X1
	577 Move X23, X0
	578 Move X22, X1
	579 Move X23, X0
	580 NotImplemented "Instruction CMP not yet implemented."
	581 Move X0, X23
	582 Call 0x3EB2AD0
	583 Move X24, [X0]
	584 Call 0x3EB2AE0
	585 Move X24, X31
	586 Add X0, X31, 16
	587 Move X1, X31
	588 Call ProfilingScope.Dispose, X0
	589 Compare X24, 0
	590 JumpIfEqual {597}
	591 Move X0, X24
	592 Call 0x1C17F18
	593 Move X22, X1
	594 Move X23, X0
	595 Move X22, X1
	596 Move X23, X0
	597 NotImplemented "Instruction CMP not yet implemented."
	598 Move X0, X23
	599 Call 0x3EB2AD0
	600 Move X20, [X0]
	601 Call 0x3EB2AE0
	602 Add X0, X31, 24
	603 Move X1, X31
	604 Call ProfilingScope.Dispose, X0
	605 Compare X20, 0
	606 JumpIfEqual {517}
	607 Move X0, X20
	608 Call 0x1C17F18
	609 Move X20, X31
	610 Move X23, X0
	611 Add X0, X31, 24
	612 Move X1, X31
	613 Call ProfilingScope.Dispose, X0
	614 Compare X20, 0
	615 JumpIfNotEqual {618}
	616 Move X0, X23
	617 Call 0x1D2D690
	618 Move X0, X20
	619 Call 0x1C17F18
	620 Call 0x1991590

Method: System.Void Cleanup()

Disassembly:
	0x03AA85DC LDR X23, [X23 + 0xFF0]
	0x03AA85E0 MOV X20, X2
	0x03AA85E4 MOV W21, W1
	0x03AA85E8 MOV X19, X0
	0x03AA85EC TBNZ X8, 0x0, 0x3AA8640
	0x03AA85F0 ADRP X0, 0x64F000
	0x03AA85F4 LDR X0, [X0 + 0x2C8]
	0x03AA85F8 BL 0x1C16CF4
	0x03AA85FC ADRP X0, 0x6AF000
	0x03AA8600 LDR X0, [X0 + 0xC48]
	0x03AA8604 BL 0x1C16CF4
	0x03AA8608 ADRP X0, 0x6A8000
	0x03AA860C LDR X0, [X0 + 0x598]
	0x03AA8610 BL 0x1C16CF4
	0x03AA8614 ADRP X0, 0x6AB000
	0x03AA8618 LDR X0, [X0 + 0xFF0]
	0x03AA861C BL 0x1C16CF4
	0x03AA8620 ADRP X0, 0x6AF000
	0x03AA8624 LDR X0, [X0 + 0xC50]
	0x03AA8628 BL 0x1C16CF4
	0x03AA862C ADRP X0, 0x6AF000
	0x03AA8630 LDR X0, [X0 + 0xC58]
	0x03AA8634 BL 0x1C16CF4
	0x03AA8638 MOVZ W8, 0x1
	0x03AA863C STRB W8, [X22 + 0x418]
	0x03AA8640 MOVZ W24, 0x1
	0x03AA8644 STRB W24, [X19 + 0x108]
	0x03AA8648 LDR X0, [X23]
	0x03AA864C ADRP X25, 0x6A8000
	0x03AA8650 ADRP X22, 0x6AF000
	0x03AA8654 LDR W8, [X0 + 0xE0]
	0x03AA8658 LDR X25, [X25 + 0x598]
	0x03AA865C LDR X22, [X22 + 0xC50]
	0x03AA8660 CBNZ W8, 0x3AA8668
	0x03AA8664 BL 0x1C16DFC
	0x03AA8668 MOV X0, X19
	0x03AA866C MOV X1, X31
	0x03AA8670 BL 0x3A4225C
	0x03AA8674 LDR X0, [X25]
	0x03AA8678 BL 0x1C16F10
	0x03AA867C LDR X1, [X22]
	0x03AA8680 MOV X2, X31
	0x03AA8684 MOV X22, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x93B000
	005 Move W8, [X20+1039]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x6AE000
	012 Move X0, [X0+2920]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+1039], W8
	016 Move W8, [X19+81]
	017 Compare W8, 0
	018 JumpIfEqual {49}
	019 Move X20, 0x6AE000
	020 Move X20, [X20+2920]
	021 Add X0, X19, 104
	022 Move X1, X31
	023 Call JobHandle.Complete, X0
	024 Move X1, [X20]
	025 Add X0, X19, 120
	026 Call NativeArray`1<UInt32>.Dispose, X0
	027 Move X1, [X20]
	028 Add X0, X19, 144
	029 Call NativeArray`1<UInt32>.Dispose, X0
	030 Move X0, [X19+136]
	031 Compare X0, 0
	032 JumpIfEqual {53}
	033 Move X1, X31
	034 Call GraphicsBuffer.Dispose, X0
	035 Move X0, [X19+160]
	036 Move [X19+136], X31
	037 Compare X0, 0
	038 JumpIfEqual {53}
	039 Move X1, X31
	040 Call GraphicsBuffer.Dispose, X0
	041 Add X0, X19, 176
	042 Move [X19+160], X31
	043 Move X20, [X31+16]
	044 Move X19, [X31+24]
	045 Move X1, X31
	046 Move X30, [X31+32]
	047 Call ReflectionProbeManager.Dispose, X0
	048 Return 
	049 Move X20, [X31+16]
	050 Move X19, [X31+24]
	051 Move X30, [X31+32]
	052 Return 
	053 Call 0x1C17F20

Method: System.Void InitializeLightConstants(Unity.Collections.NativeArray`1<UnityEngine.Rendering.VisibleLight> lights, System.Int32 lightIndex, out UnityEngine.Vector4 lightPos, out UnityEngine.Vector4 lightColor, out UnityEngine.Vector4 lightAttenuation, out UnityEngine.Vector4 lightSpotDir, out UnityEngine.Vector4 lightOcclusionProbeChannel, out System.UInt32 lightLayerMask, out System.Boolean isSubtractive)

Disassembly:
	0x03AA8688 BL 0x39B19AC
	0x03AA868C STR X22, [X19 + 0x38]
	0x03AA8690 STR W21, [X19 + 0x10]
	0x03AA8694 STRB W24, [X19 + 0x40]
	0x03AA8698 CBZ X20, 0x3AA87B4
	0x03AA869C LDR X8, [X20 + 0x18]
	0x03AA86A0 CBZ X8, 0x3AA87B4
	0x03AA86A4 LDR X0, [X8 + 0x40]
	0x03AA86A8 BL 0x3AA87B8
	0x03AA86AC STR X0, [X19 + 0xE0]
	0x03AA86B0 LDR X8, [X20 + 0x18]
	0x03AA86B4 CBZ X8, 0x3AA87B4
	0x03AA86B8 LDR X0, [X8 + 0x48]
	0x03AA86BC BL 0x3AA87B8
	0x03AA86C0 STR X0, [X19 + 0xE8]
	0x03AA86C4 MOVZ W0, 0x30
	0x03AA86C8 MOVZ W1, 0x5
	0x03AA86CC MOV X2, X31
	0x03AA86D0 MOVZ W20, 0x30
	0x03AA86D4 BL 0x3C3C4BC
	0x03AA86D8 TBNZ X0, 0x0, 0x3AA86F4
	0x03AA86DC MOVZ W0, 0x4A
	0x03AA86E0 MOVZ W1, 0x5
	0x03AA86E4 MOV X2, X31
	0x03AA86E8 MOVZ W20, 0x4A
	0x03AA86EC BL 0x3C3C4BC
	0x03AA86F0 TBZ X0, 0x0, 0x3AA86FC
	0x03AA86F4 STR W20, [X19 + 0xF0]
	0x03AA86F8 B 0x3AA8704
	0x03AA86FC MOVZ W8, 0x8
	0x03AA8700 STR W8, [X19 + 0xF0]
	0x03AA8704 MOVZ W8, 0x8
	0x03AA8708 STR W8, [X19 + 0xF4]
	0x03AA870C LDR X0, [X23]
	0x03AA8710 LDR W8, [X0 + 0xE0]
	0x03AA8714 CBNZ W8, 0x3AA871C
	0x03AA8718 BL 0x1C16DFC
	0x03AA871C MOV X0, X31
	0x03AA8720 STRB W31, [X19 + 0x42]
	0x03AA8724 BL 0x3C3BACC
	0x03AA8728 CMP W0, 0xB
	0x03AA872C B.NE 0x3AA8780
	0x03AA8730 ADRP X8, 0x64F000
	0x03AA8734 LDR X8, [X8 + 0x2C8]
	0x03AA8738 LDR X0, [X8]
	0x03AA873C LDR W8, [X0 + 0xE0]
	0x03AA8740 CBNZ W8, 0x3AA8748
	0x03AA8744 BL 0x1C16DFC
	0x03AA8748 MOV X0, X31
	0x03AA874C BL 0x3C0E32C
	0x03AA8750 CMP W0, 0x2
	0x03AA8754 B.GT 0x3AA8780
	0x03AA8758 MOV X0, X31
	0x03AA875C BL 0x3C3BA2C
	0x03AA8760 CBZ X0, 0x3AA87B4
	0x03AA8764 ADRP X8, 0x6AF000
	0x03AA8768 LDR X8, [X8 + 0xC58]
	0x03AA876C MOV X2, X31
	0x03AA8770 LDR X1, [X8]
	0x03AA8774 BL 0x3226F64
	0x03AA8778 TBZ X0, 0x0, 0x3AA8780
	0x03AA877C STRB W31, [X19 + 0x108]
	0x03AA8780 ADRP X8, 0x6AF000
	0x03AA8784 LDR X8, [X8 + 0xC48]
	0x03AA8788 LDR X0, [X8]
	0x03AA878C BL 0x1C16F10
	0x03AA8790 MOV X1, X31
	0x03AA8794 MOV X20, X0
	0x03AA8798 BL 0x33BDD8C
	0x03AA879C STR X20, [X19 + 0xF8]
	0x03AA87A0 LDP X20, X19, [X31 + 0x30]
	0x03AA87A4 LDP X22, X21, [X31 + 0x20]
	0x03AA87A8 LDP X24, X23, [X31 + 0x10]
	0x03AA87AC LDP X30, X25, [X31], #0x40
	0x03AA87B0 RET
	0x03AA87B4 BL 0x1C16F20
	0x03AA87B8 STP X30, X21, [X31 - 0x20]!
	0x03AA87BC STP X20, X19, [X31 + 0x10]
	0x03AA87C0 ADRP X20, 0x93A000
	0x03AA87C4 ADRP X21, 0x64B000
	0x03AA87C8 LDRB W8, [X20 + 0x41D]
	0x03AA87CC LDR X21, [X21 + 0x598]
	0x03AA87D0 MOV X19, X0
	0x03AA87D4 TBNZ X8, 0x0, 0x3AA8810
	0x03AA87D8 ADRP X0, 0x673000
	0x03AA87DC LDR X0, [X0 + 0x8F8]
	0x03AA87E0 BL 0x1C16CF4
	0x03AA87E4 ADRP X0, 0x64B000
	0x03AA87E8 LDR X0, [X0 + 0xA28]
	0x03AA87EC BL 0x1C16CF4
	0x03AA87F0 ADRP X0, 0x64B000
	0x03AA87F4 LDR X0, [X0 + 0x598]
	0x03AA87F8 BL 0x1C16CF4
	0x03AA87FC ADRP X0, 0x6AF000
	0x03AA8800 LDR X0, [X0 + 0xC60]
	0x03AA8804 BL 0x1C16CF4
	0x03AA8808 MOVZ W8, 0x1
	0x03AA880C STRB W8, [X20 + 0x41D]
	0x03AA8810 LDR X0, [X21]
	0x03AA8814 LDR W8, [X0 + 0xE0]
	0x03AA8818 CBNZ W8, 0x3AA8820
	0x03AA881C BL 0x1C16DFC
	0x03AA8820 MOV X0, X19
	0x03AA8824 MOV X1, X31
	0x03AA8828 MOV X2, X31
	0x03AA882C BL 0x3C3883C
	0x03AA8830 TBZ X0, 0x0, 0x3AA8870
	0x03AA8834 ADRP X8, 0x64B000
	0x03AA8838 LDR X8, [X8 + 0xA28]
	0x03AA883C ADRP X19, 0x6AF000
	0x03AA8840 LDR X0, [X8]
	0x03AA8844 LDR W8, [X0 + 0xE0]
	0x03AA8848 LDR X19, [X19 + 0xC60]
	0x03AA884C CBNZ W8, 0x3AA8854
	0x03AA8850 BL 0x1C16DFC
	0x03AA8854 LDR X0, [X19]
	0x03AA8858 MOV X1, X31
	0x03AA885C BL 0x3C0649C
	0x03AA8860 LDP X20, X19, [X31 + 0x10]
	0x03AA8864 MOV X0, X31
	0x03AA8868 LDP X30, X21, [X31], #0x20
	0x03AA886C RET
	0x03AA8870 ADRP X8, 0x673000
	0x03AA8874 LDR X8, [X8 + 0x8F8]
	0x03AA8878 LDR X0, [X8]

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+48], X29
	003 Move [X31+56], X30
	004 Move [X31+64], X28
	005 Move [X31+72], X27
	006 Move [X31+80], X26
	007 Move [X31+88], X25
	008 Move [X31+96], X24
	009 Move [X31+104], X23
	010 Move [X31+112], X22
	011 Move [X31+120], X21
	012 Move [X31+128], X20
	013 Move [X31+136], X19
	014 Move [X31+16], X0
	015 Move X28, 0x93B000
	016 Move X9, 0x675000
	017 Move X24, [X31+152]
	018 Move X29, [X31+160]
	019 Move W8, [X28+1040]
	020 Move X27, [X31+144]
	021 Move X9, [X9+2216]
	022 Move X23, X7
	023 Move X19, X6
	024 Move X25, X5
	025 Move X26, X4
	026 Move W20, W3
	027 Move X21, X2
	028 Move X22, X1
	029 Move TEMP, X8
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfEqual {46}
	033 Move X0, 0x6AF000
	034 Move X0, [X0+440]
	035 Call 0x1C17CF4
	036 Move X0, 0x64C000
	037 Move X0, [X0+1432]
	038 Call 0x1C17CF4
	039 Move X0, 0x675000
	040 Move X0, [X0+2216]
	041 Call 0x1C17CF4
	042 Move X9, 0x675000
	043 Move X9, [X9+2216]
	044 Move W8, 1
	045 Move [X28+1040], W8
	046 Move X0, [X9]
	047 Move W8, [X0+224]
	048 Compare W8, 0
	049 JumpIfNotEqual {51}
	050 Call 0x1C17DFC
	051 Move X0, X22
	052 Move X1, X21
	053 Move W2, W20
	054 Move X3, X26
	055 Move X4, X25
	056 Move X5, X19
	057 Move X6, X23
	058 Move X7, X27
	059 Move [X31], X31
	060 Call UniversalRenderPipeline.InitializeLightConstants_Common, X0, X1, X2, X3, X4, X5, X6
	061 Move [X24], W31
	062 Move [X29], W31
	063 Move TEMP, X20
	064 And TEMP, TEMP, -2147483648
	065 Compare TEMP, -2147483648
	066 JumpIfEqual {137}
	067 Move X8, 0x6AF000
	068 Move X8, [X8+440]
	069 Move X0, X22
	070 Move X1, X21
	071 Move W2, W20
	072 Move X3, [X8]
	073 Call 0x22232C0, X0, X1
	074 Move X1, X31
	075 Move X21, X0
	076 Call VisibleLight.get_light, X0
	077 Compare X0, 0
	078 JumpIfEqual {151}
	079 Move X19, 0x64C000
	080 Move X19, [X19+1432]
	081 Add X8, X31, 24
	082 Move X1, X31
	083 Move X20, X0
	084 Call Light.get_bakingOutput, X0
	085 Move W23, [X31+32]
	086 Move W22, [X31+36]
	087 Move W8, [X31+40]
	088 NotImplemented "Instruction CMP not yet implemented."
	089 NotImplemented "Instruction CSET not yet implemented."
	090 NotImplemented "Instruction CMP not yet implemented."
	091 And W8, W8, W9
	092 NotImplemented "Instruction CSET not yet implemented."
	093 And W8, W8, W9
	094 Move [X29], W8
	095 Move X0, [X19]
	096 Move W8, [X0+224]
	097 Compare W8, 0
	098 JumpIfNotEqual {100}
	099 Call 0x1C17DFC
	100 Move X0, X20
	101 Move X1, X31
	102 Move X2, X31
	103 Call Object.op_Equality, X0, X1
	104 Move TEMP, X0
	105 And TEMP, TEMP, 1
	106 Compare TEMP, 1
	107 JumpIfEqual {137}
	108 NotImplemented "Instruction CMP not yet implemented."
	109 Move X0, X21
	110 Move X1, X31
	111 Call VisibleLight.get_light, X0
	112 Compare X0, 0
	113 JumpIfEqual {151}
	114 Move X1, X31
	115 Call Light.get_shadows, X0
	116 Compare W0, 0
	117 JumpIfEqual {128}
	118 Move X8, [X31+16]
	119 Move W8, [X8+24]
	120 Compare W8, 0
	121 JumpIfNotEqual {128}
	122 NotImplemented "Instruction CMP not yet implemented."
	123 NotImplemented "Instruction CMP not yet implemented."
	124 Move W8, 2
	125 Move W8, 1
	126 Move X9, [X31+16]
	127 Move [X9+24], W8
	128 Move X0, X20
	129 Move X1, X31
	130 Call LightExtensions.GetUniversalAdditionalLightData, X0
	131 Compare X0, 0
	132 JumpIfEqual {151}
	133 Move W0, [X0+56]
	134 Move X1, X31
	135 Call RenderingLayerUtils.ToValidRenderingLayers, X0
	136 Move [X24], W0
	137 Move X20, [X31+128]
	138 Move X19, [X31+136]
	139 Move X22, [X31+112]
	140 Move X21, [X31+120]
	141 Move X24, [X31+96]
	142 Move X23, [X31+104]
	143 Move X26, [X31+80]
	144 Move X25, [X31+88]
	145 Move X28, [X31+64]
	146 Move X27, [X31+72]
	147 Move X29, [X31+48]
	148 Move X30, [X31+56]
	149 Add X31, X31, 144
	150 Return 
	151 Call 0x1C17F20

Method: System.Void SetupShaderLightConstants(UnityEngine.Rendering.CommandBuffer cmd, ref UnityEngine.Rendering.Universal.RenderingData renderingData)

Disassembly:
	0x03AA85A4 LDR X8, [X19]
	0x03AA85A8 LDP X20, X19, [X31 + 0x20]
	0x03AA85AC LDP X22, X21, [X31 + 0x10]
	0x03AA85B0 LDR X8, [X8 + 0xB8]
	0x03AA85B4 STR X0, [X8 + 0x8]
	0x03AA85B8 LDR X30, [X31], #0x30
	0x03AA85BC RET
	0x03AA85C0 STP X30, X25, [X31 - 0x40]!
	0x03AA85C4 STP X24, X23, [X31 + 0x10]
	0x03AA85C8 STP X22, X21, [X31 + 0x20]
	0x03AA85CC STP X20, X19, [X31 + 0x30]
	0x03AA85D0 ADRP X22, 0x93A000
	0x03AA85D4 ADRP X23, 0x6AB000
	0x03AA85D8 LDRB W8, [X22 + 0x418]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, X2
	006 Add X2, X2, 552
	007 Move X20, X1
	008 Move X21, X0
	009 Move [X0+24], W31
	010 Call ForwardLights.SetupMainLightConstants, X0, X1, X2
	011 Move X1, X20
	012 Move X2, X19
	013 Move X20, [X31+16]
	014 Move X19, [X31+24]
	015 Move X0, X21
	016 Move X30, [X31+32]
	017 Move X21, [X31+40]
	018 Call ForwardLights.SetupAdditionalLightConstants, X0, X1, X2
	019 Return 

Method: System.Void SetupMainLightConstants(UnityEngine.Rendering.CommandBuffer cmd, ref UnityEngine.Rendering.Universal.LightData lightData)

Disassembly:
	0x03AA887C LDR W8, [X0 + 0xE0]
	0x03AA8880 CBNZ W8, 0x3AA8888
	0x03AA8884 BL 0x1C16DFC
	0x03AA8888 MOV X0, X19
	0x03AA888C LDP X20, X19, [X31 + 0x10]
	0x03AA8890 MOV X1, X31
	0x03AA8894 LDP X30, X21, [X31], #0x20
	0x03AA8898 B 0x39E1920
	0x03AA889C MOV X1, X31
	0x03AA88A0 B 0x33BDD8C
	0x03AA88A4 LDR X8, [X1]
	0x03AA88A8 STR X8, [X0 + 0x100]
	0x03AA88AC RET
	0x03AA88B0 SUB X31, X31, 0x60
	0x03AA88B4 STR X30, [X31 + 0x40]
	0x03AA88B8 STP X20, X19, [X31 + 0x50]
	0x03AA88BC MOV X20, X2
	0x03AA88C0 LDP W8, W2, [X1]
	0x03AA88C4 MOVZ W9, 0xF4
	0x03AA88C8 MOVZ W10, 0xF0
	0x03AA88CC MOV X19, X3
	0x03AA88D0 CMP W8, 0x1
	0x03AA88D4 CSEL X8, X10, X9, EQ
	0x03AA88D8 LDR W3, [X0, X8, LSL]
	0x03AA88DC MUL W1, W2, W2
	0x03AA88E0 MOVI V0.2D, 0x0
	0x03AA88E4 ADD X0, X31, 0x0
	0x03AA88E8 MOV W4, W31
	0x03AA88EC MOV X5, X31
	0x03AA88F0 STR W31, [X31 + 0x30]
	0x03AA88F4 STP V0, V0, [X31 + 0x10]
	0x03AA88F8 STR V0, [X31]
	0x03AA88FC BL 0x3C228A4
	0x03AA8900 LDR W8, [X31 + 0x30]
	0x03AA8904 LDP V2, V0, [X31 + 0x10]
	0x03AA8908 LDR V1, [X31]
	0x03AA890C MOVZ W9, 0x1
	0x03AA8910 STR W8, [X20 + 0x30]
	0x03AA8914 STP V2, V0, [X20 + 0x10]
	0x03AA8918 STR V1, [X20]
	0x03AA891C STR W31, [X20 + 0x28]
	0x03AA8920 STR W9, [X19]
	0x03AA8924 LDP X20, X19, [X31 + 0x50]
	0x03AA8928 LDR X30, [X31 + 0x40]
	0x03AA892C ADD X31, X31, 0x60
	0x03AA8930 RET
	0x03AA8934 SUB X31, X31, 0x40
	0x03AA8938 STR X30, [X31 + 0x10]
	0x03AA893C STP X22, X21, [X31 + 0x20]
	0x03AA8940 STP X20, X19, [X31 + 0x30]
	0x03AA8944 ADRP X21, 0x93A000
	0x03AA8948 LDRB W8, [X21 + 0x419]
	0x03AA894C MOV X19, X2
	0x03AA8950 MOV X20, X0
	0x03AA8954 TBNZ X8, 0x0, 0x3AA896C
	0x03AA8958 ADRP X0, 0x673000
	0x03AA895C LDR X0, [X0 + 0x8F8]
	0x03AA8960 BL 0x1C16CF4
	0x03AA8964 MOVZ W8, 0x1
	0x03AA8968 STRB W8, [X21 + 0x419]
	0x03AA896C LDR X8, [X20 + 0xF8]
	0x03AA8970 CBZ X8, 0x3AA8A24
	0x03AA8974 LDR V0, [X20 + 0xE]
	0x03AA8978 ADD X9, X8, 0x2C8
	0x03AA897C STR V0, [X9]
	0x03AA8980 LDRB W9, [X20 + 0x108]
	0x03AA8984 STRB W9, [X8 + 0x2D8]
	0x03AA8988 LDR X0, [X19 + 0x190]
	0x03AA898C CBZ X0, 0x3AA8A24
	0x03AA8990 MOV X1, X31
	0x03AA8994 BL 0x398841C
	0x03AA8998 TBZ X0, 0x0, 0x3AA89B0
	0x03AA899C LDR X0, [X19]
	0x03AA89A0 CBZ X0, 0x3AA8A24
	0x03AA89A4 MOV W1, W31
	0x03AA89A8 MOV X2, X31
	0x03AA89AC BL 0x3C4D910
	0x03AA89B0 ADRP X8, 0x673000
	0x03AA89B4 LDR X8, [X8 + 0x8F8]
	0x03AA89B8 LDR X21, [X19]
	0x03AA89BC LDR X22, [X20 + 0x100]

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+112], X30
	003 Move [X31+128], X22
	004 Move [X31+136], X21
	005 Move [X31+144], X20
	006 Move [X31+152], X19
	007 Move X22, 0x93B000
	008 Move W8, [X22+1041]
	009 Move X21, X2
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x6B0000
	017 Move X0, [X0+2776]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+1041], W8
	021 Move [X31+96], X31
	022 Move [X31+104], X31
	023 Move [X31+80], X31
	024 Move [X31+88], X31
	025 Move [X31+64], X31
	026 Move [X31+72], X31
	027 Move [X31+48], X31
	028 Move [X31+56], X31
	029 Move [X31+32], X31
	030 Move [X31+40], X31
	031 Move [X31+124], W31
	032 Move [X31+120], W31
	033 Move X1, [X21+16]
	034 Move X2, [X21+24]
	035 Move W3, [X21]
	036 Add X8, X31, 120
	037 Add X9, X31, 124
	038 Add X10, X31, 32
	039 Add X4, X31, 96
	040 Add X5, X31, 80
	041 Add X6, X31, 64
	042 Add X7, X31, 48
	043 Move X0, X20
	044 Move [X31+8], X9
	045 Move [X31+16], X8
	046 Move [X31], X10
	047 Call ForwardLights.InitializeLightConstants, X0, X1, X2, X3, X4, X5, X6, X7, X8, X9
	048 Move W8, [X31+120]
	049 Move S0, W31
	050 Move S1, 1
	051 NotImplemented "Instruction CMP not yet implemented."
	052 NotImplemented "Instruction FCSEL not yet implemented."
	053 Move [X31+92], S0
	054 Compare X19, 0
	055 JumpIfEqual {102}
	056 Move X20, 0x6B0000
	057 Move X20, [X20+2776]
	058 Move S2, [X31+104]
	059 Move S3, [X31+108]
	060 Move S0, [X31+96]
	061 Move S1, [X31+100]
	062 Move X0, X19
	063 Move X8, [X20]
	064 Move X2, X31
	065 Move X8, [X8+184]
	066 Move W1, [X8]
	067 Call CommandBuffer.SetGlobalVector, X0, X1, X2
	068 Move X8, [X20]
	069 Move S0, [X31+80]
	070 Move S1, [X31+84]
	071 Move S2, [X31+88]
	072 Move S3, [X31+92]
	073 Move X0, X19
	074 Move X8, [X8+184]
	075 Move X2, X31
	076 Move W1, [X8+4]
	077 Call CommandBuffer.SetGlobalVector, X0, X1, X2
	078 Move X8, [X20]
	079 Move S0, [X31+32]
	080 Move S1, [X31+36]
	081 Move S2, [X31+40]
	082 Move S3, [X31+44]
	083 Move X0, X19
	084 Move X8, [X8+184]
	085 Move X2, X31
	086 Move W1, [X8+8]
	087 Call CommandBuffer.SetGlobalVector, X0, X1, X2
	088 Move X8, [X20]
	089 Move W2, [X31+124]
	090 Move X0, X19
	091 Move X3, X31
	092 Move X8, [X8+184]
	093 Move W1, [X8+12]
	094 Call CommandBuffer.SetGlobalInt, X0, X1, X2
	095 Move X20, [X31+144]
	096 Move X19, [X31+152]
	097 Move X22, [X31+128]
	098 Move X21, [X31+136]
	099 Move X30, [X31+112]
	100 Add X31, X31, 160
	101 Return 
	102 Call 0x1C17F20

Method: System.Void SetupAdditionalLightConstants(UnityEngine.Rendering.CommandBuffer cmd, ref UnityEngine.Rendering.Universal.RenderingData renderingData)

Disassembly:
	0x03AA89C0 LDR X0, [X8]
	0x03AA89C4 LDR W8, [X0 + 0xE0]
	0x03AA89C8 CBNZ W8, 0x3AA89D0
	0x03AA89CC BL 0x1C16DFC
	0x03AA89D0 FMOV S0, W31
	0x03AA89D4 FMOV S1, W31
	0x03AA89D8 FMOV S2, W31
	0x03AA89DC FMOV S3, W31
	0x03AA89E0 MOVZ W2, 0x2
	0x03AA89E4 MOVN W6, 0x0
	0x03AA89E8 MOVN W7, 0x0
	0x03AA89EC MOV X0, X21
	0x03AA89F0 MOV X1, X22
	0x03AA89F4 MOV W3, W31
	0x03AA89F8 MOV W4, W31
	0x03AA89FC MOV W5, W31
	0x03AA8A00 STR X31, [X31]
	0x03AA8A04 BL 0x39E329C
	0x03AA8A08 LDP X1, X3, [X20 + 0xF8]
	0x03AA8A0C MOV X2, X19
	0x03AA8A10 LDP X20, X19, [X31 + 0x30]
	0x03AA8A14 LDP X22, X21, [X31 + 0x20]
	0x03AA8A18 LDR X30, [X31 + 0x10]
	0x03AA8A1C ADD X31, X31, 0x40
	0x03AA8A20 B 0x3AA8A28
	0x03AA8A24 BL 0x1C16F20
	0x03AA8A28 STP D15, D14, [X31 - 0xA0]!
	0x03AA8A2C STP D13, D12, [X31 + 0x10]
	0x03AA8A30 STP D11, D10, [X31 + 0x20]
	0x03AA8A34 STP D9, D8, [X31 + 0x30]
	0x03AA8A38 STP X29, X30, [X31 + 0x40]
	0x03AA8A3C STP X28, X27, [X31 + 0x50]
	0x03AA8A40 STP X26, X25, [X31 + 0x60]
	0x03AA8A44 STP X24, X23, [X31 + 0x70]
	0x03AA8A48 STP X22, X21, [X31 + 0x80]
	0x03AA8A4C STP X20, X19, [X31 + 0x90]
	0x03AA8A50 SUB X31, X31, 0x170
	0x03AA8A54 ADRP X20, 0x93A000
	0x03AA8A58 LDRB W8, [X20 + 0x41A]
	0x03AA8A5C MOV X19, X2
	0x03AA8A60 MOV X22, X1
	0x03AA8A64 STR X3, [X31 + 0x98]
	0x03AA8A68 TBNZ X8, 0x0, 0x3AA8B40
	0x03AA8A6C ADRP X0, 0x6AA000
	0x03AA8A70 LDR X0, [X0 + 0xE28]
	0x03AA8A74 BL 0x1C16CF4
	0x03AA8A78 ADRP X0, 0x6AB000
	0x03AA8A7C LDR X0, [X0 + 0x460]
	0x03AA8A80 BL 0x1C16CF4
	0x03AA8A84 ADRP X0, 0x6AC000
	0x03AA8A88 LDR X0, [X0 + 0xA8]
	0x03AA8A8C BL 0x1C16CF4
	0x03AA8A90 ADRP X0, 0x6AF000
	0x03AA8A94 LDR X0, [X0 + 0xC68]
	0x03AA8A98 BL 0x1C16CF4
	0x03AA8A9C ADRP X0, 0x6AC000
	0x03AA8AA0 LDR X0, [X0 + 0x20]
	0x03AA8AA4 BL 0x1C16CF4
	0x03AA8AA8 ADRP X0, 0x674000
	0x03AA8AAC LDR X0, [X0 + 0x8A8]
	0x03AA8AB0 BL 0x1C16CF4
	0x03AA8AB4 ADRP X0, 0x675000
	0x03AA8AB8 LDR X0, [X0 + 0xFC0]
	0x03AA8ABC BL 0x1C16CF4
	0x03AA8AC0 ADRP X0, 0x6AF000
	0x03AA8AC4 LDR X0, [X0 + 0xC70]
	0x03AA8AC8 BL 0x1C16CF4
	0x03AA8ACC ADRP X0, 0x6AE000
	0x03AA8AD0 LDR X0, [X0 + 0x588]
	0x03AA8AD4 BL 0x1C16CF4
	0x03AA8AD8 ADRP X0, 0x6AF000
	0x03AA8ADC LDR X0, [X0 + 0xC78]
	0x03AA8AE0 BL 0x1C16CF4
	0x03AA8AE4 ADRP X0, 0x6AF000
	0x03AA8AE8 LDR X0, [X0 + 0xC80]
	0x03AA8AEC BL 0x1C16CF4
	0x03AA8AF0 ADRP X0, 0x6AF000
	0x03AA8AF4 LDR X0, [X0 + 0xC88]
	0x03AA8AF8 BL 0x1C16CF4
	0x03AA8AFC ADRP X0, 0x6AF000
	0x03AA8B00 LDR X0, [X0 + 0xC90]
	0x03AA8B04 BL 0x1C16CF4
	0x03AA8B08 ADRP X0, 0x6AE000
	0x03AA8B0C LDR X0, [X0 + 0x468]
	0x03AA8B10 BL 0x1C16CF4
	0x03AA8B14 ADRP X0, 0x6AF000
	0x03AA8B18 LDR X0, [X0 + 0xC98]
	0x03AA8B1C BL 0x1C16CF4
	0x03AA8B20 ADRP X0, 0x6AE000
	0x03AA8B24 LDR X0, [X0 + 0x6D8]
	0x03AA8B28 BL 0x1C16CF4
	0x03AA8B2C ADRP X0, 0x6AE000
	0x03AA8B30 LDR X0, [X0 + 0x6E8]
	0x03AA8B34 BL 0x1C16CF4
	0x03AA8B38 MOVZ W8, 0x1
	0x03AA8B3C STRB W8, [X20 + 0x41A]
	0x03AA8B40 STRB W31, [X31 + 0x168]
	0x03AA8B44 STP X31, X31, [X31 + 0x158]
	0x03AA8B48 STP X31, X31, [X31 + 0x148]
	0x03AA8B4C STP X31, X31, [X31 + 0x138]
	0x03AA8B50 STP X31, X31, [X31 + 0x128]
	0x03AA8B54 STP X31, X31, [X31 + 0x118]
	0x03AA8B58 CBZ X22, 0x3AA98C4
	0x03AA8B5C ADRP X8, 0x6AC000
	0x03AA8B60 LDR X8, [X8 + 0xA8]
	0x03AA8B64 LDRB W9, [X22 + 0x2D8]
	0x03AA8B68 ADRP X20, 0x675000
	0x03AA8B6C LDR X24, [X19]
	0x03AA8B70 LDR X1, [X8]
	0x03AA8B74 STR W9, [X31 + 0x14]
	0x03AA8B78 LDR X23, [X22 + 0x2C8]
	0x03AA8B7C LDR X21, [X22 + 0x2D0]
	0x03AA8B80 LDR X20, [X20 + 0xFC0]
	0x03AA8B84 MOVZ W0, 0x4
	0x03AA8B88 BL 0x2235BC0
	0x03AA8B8C MOV X2, X0
	0x03AA8B90 ADD X0, X31, 0x168
	0x03AA8B94 MOV X1, X24
	0x03AA8B98 MOV X3, X31
	0x03AA8B9C STR X24, [X31 + 0xE0]
	0x03AA8BA0 BL 0x39B1DB0
	0x03AA8BA4 LDR X0, [X20]
	0x03AA8BA8 LDR W8, [X0 + 0xE0]
	0x03AA8BAC CBNZ W8, 0x3AA8BB4
	0x03AA8BB0 BL 0x1C16DFC
	0x03AA8BB4 MOV X0, X31
	0x03AA8BB8 BL 0x39EE864
	0x03AA8BBC CBZ X0, 0x3AA98C8
	0x03AA8BC0 LDR X22, [X0 + 0x10]
	0x03AA8BC4 CBZ X22, 0x3AA98CC
	0x03AA8BC8 ADRP X8, 0x6AF000
	0x03AA8BCC LDR X8, [X8 + 0xC70]
	0x03AA8BD0 LDR X1, [X8]
	0x03AA8BD4 MOV X0, X22
	0x03AA8BD8 BL 0x22ACD04
	0x03AA8BDC ADRP X8, 0x6AE000
	0x03AA8BE0 LDR X8, [X8 + 0x588]
	0x03AA8BE4 MOV X29, X0
	0x03AA8BE8 LDR X1, [X8]
	0x03AA8BEC MOV X0, X22
	0x03AA8BF0 BL 0x22ACD04
	0x03AA8BF4 ADRP X8, 0x6AF000
	0x03AA8BF8 LDR X8, [X8 + 0xC78]
	0x03AA8BFC MOV X25, X0
	0x03AA8C00 LDR X1, [X8]
	0x03AA8C04 MOV X0, X22
	0x03AA8C08 BL 0x22ACD04
	0x03AA8C0C ADRP X8, 0x6AF000
	0x03AA8C10 LDR X8, [X8 + 0xC80]
	0x03AA8C14 MOV X24, X0
	0x03AA8C18 LDR X1, [X8]
	0x03AA8C1C MOV X0, X22
	0x03AA8C20 BL 0x22ACD04
	0x03AA8C24 ADRP X8, 0x6AF000
	0x03AA8C28 LDR X8, [X8 + 0xC88]
	0x03AA8C2C MOV X27, X0
	0x03AA8C30 LDR X1, [X8]
	0x03AA8C34 MOV X0, X22
	0x03AA8C38 BL 0x22ACD04
	0x03AA8C3C ADRP X8, 0x6AF000
	0x03AA8C40 LDR X8, [X8 + 0xC90]
	0x03AA8C44 MOV X28, X0
	0x03AA8C48 LDR X1, [X8]
	0x03AA8C4C MOV X0, X22
	0x03AA8C50 BL 0x22ACD04
	0x03AA8C54 ADRP X8, 0x6AE000
	0x03AA8C58 LDR X8, [X8 + 0x468]
	0x03AA8C5C MOV X26, X0
	0x03AA8C60 LDR X1, [X8]
	0x03AA8C64 MOV X0, X22
	0x03AA8C68 BL 0x22ACD04
	0x03AA8C6C STR X0, [X31 + 0x88]
	0x03AA8C70 ADRP X8, 0x6AF000
	0x03AA8C74 LDR X8, [X8 + 0xC98]
	0x03AA8C78 LDR X1, [X8]
	0x03AA8C7C MOV X0, X22
	0x03AA8C80 BL 0x22ACD04
	0x03AA8C84 LDR W8, [X19 + 0x2A0]
	0x03AA8C88 MOV X20, X0
	0x03AA8C8C CMP W8, 0x1
	0x03AA8C90 CSEL X22, X21, X23, EQ
	0x03AA8C94 STR W8, [X31 + 0x94]
	0x03AA8C98 CBZ X0, 0x3AA98D0
	0x03AA8C9C LDR X0, [X20 + 0x38]
	0x03AA8CA0 CBZ X0, 0x3AA98D4
	0x03AA8CA4 LDR X8, [X0]
	0x03AA8CA8 LDR X1, [X8 + 0x220]
	0x03AA8CAC LDR X9, [X8 + 0x218]
	0x03AA8CB0 BLR X9
	0x03AA8CB4 LDR X0, [X20 + 0x40]
	0x03AA8CB8 CBZ X0, 0x3AA98D8
	0x03AA8CBC LDR X8, [X0]
	0x03AA8CC0 MOV V8.16B, V0.16B
	0x03AA8CC4 LDR X1, [X8 + 0x220]
	0x03AA8CC8 LDR X9, [X8 + 0x218]
	0x03AA8CCC BLR X9
	0x03AA8CD0 ADRP X8, 0x6AB000
	0x03AA8CD4 LDR X8, [X8 + 0x460]
	0x03AA8CD8 MOV V9.16B, V0.16B
	0x03AA8CDC LDR X0, [X8]
	0x03AA8CE0 LDR W8, [X0 + 0xE0]
	0x03AA8CE4 CBNZ W8, 0x3AA8CEC
	0x03AA8CE8 BL 0x1C16DFC
	0x03AA8CEC MOV V0.16B, V8.16B
	0x03AA8CF0 MOV V1.16B, V9.16B
	0x03AA8CF4 MOV X0, X31
	0x03AA8CF8 BL 0x39E4D78
	0x03AA8CFC CBZ X25, 0x3AA98DC
	0x03AA8D00 LDR X0, [X25 + 0x50]
	0x03AA8D04 CBZ X0, 0x3AA98E0
	0x03AA8D08 LDR X8, [X0]
	0x03AA8D0C MOV V11.16B, V0.16B
	0x03AA8D10 MOV V12.16B, V1.16B
	0x03AA8D14 MOV V13.16B, V2.16B
	0x03AA8D18 LDR X1, [X8 + 0x220]
	0x03AA8D1C LDR X9, [X8 + 0x218]
	0x03AA8D20 BLR X9
	0x03AA8D24 STR S0, [X31 + 0xDC]
	0x03AA8D28 LDR X0, [X25 + 0x58]
	0x03AA8D2C CBZ X0, 0x3AA98E4
	0x03AA8D30 LDR X8, [X0]
	0x03AA8D34 LDR X1, [X8 + 0x220]
	0x03AA8D38 LDR X9, [X8 + 0x218]
	0x03AA8D3C BLR X9
	0x03AA8D40 STR S0, [X31 + 0xD8]
	0x03AA8D44 LDR X0, [X25 + 0x40]
	0x03AA8D48 CBZ X0, 0x3AA98E8
	0x03AA8D4C LDR X8, [X0]
	0x03AA8D50 LDR X1, [X8 + 0x220]
	0x03AA8D54 LDR X9, [X8 + 0x218]
	0x03AA8D58 BLR X9
	0x03AA8D5C STR S0, [X31 + 0xD4]
	0x03AA8D60 CBZ X29, 0x3AA98EC
	0x03AA8D64 LDR X0, [X29 + 0x38]
	0x03AA8D68 CBZ X0, 0x3AA98F0
	0x03AA8D6C LDR X8, [X0]
	0x03AA8D70 LDR X1, [X8 + 0x220]
	0x03AA8D74 LDR X9, [X8 + 0x218]
	0x03AA8D78 BLR X9
	0x03AA8D7C STR S0, [X31 + 0xD0]
	0x03AA8D80 LDR X0, [X29 + 0x40]
	0x03AA8D84 CBZ X0, 0x3AA98F4
	0x03AA8D88 LDR X8, [X0]
	0x03AA8D8C LDR X1, [X8 + 0x220]
	0x03AA8D90 LDR X9, [X8 + 0x218]
	0x03AA8D94 BLR X9
	0x03AA8D98 STR S0, [X31 + 0xCC]
	0x03AA8D9C LDR X0, [X29 + 0x48]
	0x03AA8DA0 CBZ X0, 0x3AA98F8
	0x03AA8DA4 LDR X8, [X0]
	0x03AA8DA8 LDR X1, [X8 + 0x220]
	0x03AA8DAC LDR X9, [X8 + 0x218]
	0x03AA8DB0 BLR X9
	0x03AA8DB4 STR S0, [X31 + 0xC8]
	0x03AA8DB8 LDR X0, [X29 + 0x50]
	0x03AA8DBC CBZ X0, 0x3AA98FC
	0x03AA8DC0 LDR X8, [X0]
	0x03AA8DC4 LDR X1, [X8 + 0x220]
	0x03AA8DC8 LDR X9, [X8 + 0x218]
	0x03AA8DCC BLR X9
	0x03AA8DD0 STR S0, [X31 + 0xC4]
	0x03AA8DD4 LDR X0, [X29 + 0x58]
	0x03AA8DD8 CBZ X0, 0x3AA9900
	0x03AA8DDC LDR X8, [X0]
	0x03AA8DE0 LDR X1, [X8 + 0x220]
	0x03AA8DE4 LDR X9, [X8 + 0x218]
	0x03AA8DE8 BLR X9
	0x03AA8DEC STR S0, [X31 + 0xC0]
	0x03AA8DF0 LDR X0, [X29 + 0x60]
	0x03AA8DF4 CBZ X0, 0x3AA9904
	0x03AA8DF8 LDR X8, [X0]
	0x03AA8DFC LDR X1, [X8 + 0x220]
	0x03AA8E00 LDR X9, [X8 + 0x218]
	0x03AA8E04 BLR X9
	0x03AA8E08 STR S0, [X31 + 0xBC]
	0x03AA8E0C LDR X0, [X29 + 0x68]
	0x03AA8E10 CBZ X0, 0x3AA9908
	0x03AA8E14 LDR X8, [X0]
	0x03AA8E18 LDR X1, [X8 + 0x220]
	0x03AA8E1C LDR X9, [X8 + 0x218]
	0x03AA8E20 BLR X9
	0x03AA8E24 STR S0, [X31 + 0xB8]
	0x03AA8E28 LDR X0, [X29 + 0x70]
	0x03AA8E2C CBZ X0, 0x3AA990C
	0x03AA8E30 LDR X8, [X0]
	0x03AA8E34 LDR X1, [X8 + 0x220]
	0x03AA8E38 LDR X9, [X8 + 0x218]
	0x03AA8E3C BLR X9
	0x03AA8E40 STR S0, [X31 + 0xB4]
	0x03AA8E44 LDR X0, [X29 + 0x78]
	0x03AA8E48 CBZ X0, 0x3AA9910
	0x03AA8E4C LDR X8, [X0]
	0x03AA8E50 LDR X1, [X8 + 0x220]
	0x03AA8E54 LDR X9, [X8 + 0x218]
	0x03AA8E58 BLR X9
	0x03AA8E5C STR S0, [X31 + 0xB0]
	0x03AA8E60 CBZ X28, 0x3AA9914
	0x03AA8E64 LDR X0, [X28 + 0x50]
	0x03AA8E68 CBZ X0, 0x3AA9918
	0x03AA8E6C LDR X8, [X0]
	0x03AA8E70 LDR X1, [X8 + 0x220]
	0x03AA8E74 LDR X9, [X8 + 0x218]
	0x03AA8E78 BLR X9
	0x03AA8E7C STR S0, [X31 + 0xAC]
	0x03AA8E80 LDR X0, [X28 + 0x58]
	0x03AA8E84 CBZ X0, 0x3AA991C
	0x03AA8E88 LDR X8, [X0]
	0x03AA8E8C LDR X1, [X8 + 0x220]
	0x03AA8E90 LDR X9, [X8 + 0x218]
	0x03AA8E94 BLR X9
	0x03AA8E98 STR S0, [X31 + 0xA8]
	0x03AA8E9C LDR X0, [X28 + 0x60]
	0x03AA8EA0 CBZ X0, 0x3AA9920
	0x03AA8EA4 LDR X8, [X0]
	0x03AA8EA8 LDR X1, [X8 + 0x220]
	0x03AA8EAC LDR X9, [X8 + 0x218]
	0x03AA8EB0 BLR X9
	0x03AA8EB4 STR S0, [X31 + 0xA4]
	0x03AA8EB8 LDR X0, [X28 + 0x68]
	0x03AA8EBC CBZ X0, 0x3AA9924
	0x03AA8EC0 LDR X8, [X0]
	0x03AA8EC4 LDR X1, [X8 + 0x220]
	0x03AA8EC8 LDR X9, [X8 + 0x218]
	0x03AA8ECC BLR X9
	0x03AA8ED0 STR S0, [X31 + 0xA0]
	0x03AA8ED4 LDR X0, [X28 + 0x38]
	0x03AA8ED8 CBZ X0, 0x3AA9928
	0x03AA8EDC LDR X8, [X0]
	0x03AA8EE0 LDR X1, [X8 + 0x220]

ISIL:
	001 Subtract X31, X31, 336
	002 Move [X31+224], D9
	003 Move [X31+232], D8
	004 Move [X31+240], X29
	005 Move [X31+248], X30
	006 Move [X31+256], X28
	007 Move [X31+264], X27
	008 Move [X31+272], X26
	009 Move [X31+280], X25
	010 Move [X31+288], X24
	011 Move [X31+296], X23
	012 Move [X31+304], X22
	013 Move [X31+312], X21
	014 Move [X31+320], X20
	015 Move [X31+328], X19
	016 Move X20, 0x93B000
	017 Move X19, 0x675000
	018 Move W8, [X20+1042]
	019 Move X19, [X19+2216]
	020 Move X22, X2
	021 Move X29, X1
	022 Move X21, X0
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {44}
	027 Move X0, 0x6B0000
	028 Move X0, [X0+3088]
	029 Call 0x1C17CF4
	030 Move X0, 0x6B0000
	031 Move X0, [X0+2776]
	032 Call 0x1C17CF4
	033 Move X0, 0x6B0000
	034 Move X0, [X0+3096]
	035 Call 0x1C17CF4
	036 Move X0, 0x6B0000
	037 Move X0, [X0+3104]
	038 Call 0x1C17CF4
	039 Move X0, 0x675000
	040 Move X0, [X0+2216]
	041 Call 0x1C17CF4
	042 Move W8, 1
	043 Move [X20+1042], W8
	044 NotImplemented "Instruction MOVI not yet implemented."
	045 Move [X31+192], X31
	046 Move [X31+200], X31
	047 Move [X31+176], W31
	048 Move [X31+92], W31
	049 Move [X31+88], W31
	050 Move [X31+84], W31
	051 Move [X31+144], V0
	052 Move [X31+152], V0
	053 Move [X31+112], V0
	054 Move [X31+120], V0
	055 Move [X31+6], V0
	056 NotImplemented "Instruction LDUR not yet implemented."
	057 Move X0, [X19]
	058 Add X24, X22, 552
	059 Move [X31+13], V0
	060 Move X8, [X22+568]
	061 Move X23, [X22+576]
	062 Move [X31+72], X8
	063 Move W8, [X0+224]
	064 Compare W8, 0
	065 JumpIfNotEqual {67}
	066 Call 0x1C17DFC
	067 Move X19, 0x6B0000
	068 Move X19, [X19+2776]
	069 Move X0, X31
	070 Call UniversalRenderPipeline.get_maxVisibleAdditionalLights
	071 Move X1, [X31+208]
	072 Move X2, [X31+216]
	073 Move W25, W0
	074 Move X0, X21
	075 Move X3, X24
	076 Call ForwardLights.SetupPerObjectLightIndices, X0, X1, X2
	077 NotImplemented "Instruction CMP not yet implemented."
	078 Move W8, [X21+80]
	079 Compare W8, 0
	080 JumpIfEqual {201}
	081 Move [X31+48], X22
	082 Move [X31+64], X29
	083 Move X8, 0x6B0000
	084 Move X8, [X8+3104]
	085 Move W9, W0
	086 Add X0, X31, 192
	087 Move W2, 2
	088 Move X4, [X8]
	089 Move W3, 1
	090 Move W1, W9
	091 Move [X31+60], W9
	092 Call NativeArray`1<LightData>..ctor, X0, X1, X2, X3
	093 NotImplemented "Instruction CMP not yet implemented."
	094 NotImplemented "Instruction CMP not yet implemented."
	095 Add X8, X31, 96
	096 Move W27, W31
	097 Move W20, W31
	098 Add X28, X8, 16
	099 Add X29, X8, 32
	100 Add X19, X8, 48
	101 Add X26, X8, 64
	102 Add X22, X8, 80
	103 Move W8, [X24]
	104 NotImplemented "Instruction CMP not yet implemented."
	105 Move X1, [X31+72]
	106 Add X8, X31, 92
	107 Add X4, X31, 96
	108 Move X0, X21
	109 Move X2, X23
	110 Move W3, W27
	111 Move X5, X28
	112 Move X6, X29
	113 Move X7, X19
	114 Move [X31+8], X22
	115 Move [X31+16], X8
	116 Move [X31], X26
	117 Call ForwardLights.InitializeLightConstants, X0, X1, X2, X3, X4, X5, X6, X7, X8, X9
	118 Move X8, [X31+192]
	119 Move W9, 84
	120 Add X1, X31, 96
	121 Move W2, 84
	122 NotImplemented "Instruction SMADDL not yet implemented."
	123 Call 0x3EB2B30
	124 Add W20, W20, 1
	125 NotImplemented "Instruction CMP not yet implemented."
	126 Add W27, W27, 1
	127 NotImplemented "Instruction CMP not yet implemented."
	128 Move X0, X31
	129 Call ShaderData.get_instance
	130 Compare X0, 0
	131 JumpIfEqual {350}
	132 Move W1, [X31+60]
	133 Move X2, X31
	134 Call ShaderData.GetLightDataBuffer, X0, X1
	135 Move X29, [X31+64]
	136 Compare X0, 0
	137 JumpIfEqual {350}
	138 Move X8, 0x6B0000
	139 Move X1, [X31+192]
	140 Move X2, [X31+200]
	141 Move X8, [X8+3088]
	142 Move X19, X0
	143 Move X3, [X8]
	144 Call ComputeBuffer.SetData, X0, X1
	145 Add X0, X31, 208
	146 Move X1, X31
	147 Call CullingResults.get_lightAndReflectionProbeIndexCount, X0
	148 Move W22, W0
	149 Move X0, X31
	150 Call ShaderData.get_instance
	151 Compare X0, 0
	152 JumpIfEqual {350}
	153 Move W1, W22
	154 Move X2, X31
	155 Call ShaderData.GetLightIndicesBuffer, X0, X1
	156 Compare X29, 0
	157 JumpIfEqual {350}
	158 Move W1, [X21+16]
	159 Move X22, X0
	160 Move X0, X29
	161 Move X2, X19
	162 Move X3, X31
	163 Call CommandBuffer.SetGlobalBuffer, X0, X1, X2
	164 Move W1, [X21+20]
	165 Move X0, X29
	166 Move X2, X22
	167 Move X3, X31
	168 Call CommandBuffer.SetGlobalBuffer, X0, X1, X2
	169 Move X8, 0x6B0000
	170 Move X8, [X8+3096]
	171 Add X0, X31, 192
	172 Move X1, [X8]
	173 Call NativeArray`1<LightData>.Dispose, X0
	174 Move X19, 0x6B0000
	175 Move X22, [X31+48]
	176 Move X19, [X19+2776]
	177 Move X8, [X19]
	178 Move X20, 0x931000
	179 Move W9, [X20+3674]
	180 Move X8, [X8+184]
	181 Move W19, [X8+16]
	182 Compare W9, 0
	183 JumpIfNotEqual {189}
	184 Move X0, 0x653000
	185 Move X0, [X0+2464]
	186 Call 0x1C17CF4
	187 Move W8, 1
	188 Move [X20+3674], W8
	189 Compare X29, 0
	190 JumpIfEqual {350}
	191 Move X8, 0x653000
	192 Move X8, [X8+2464]
	193 Move X0, X29
	194 Move W1, W19
	195 Move X8, [X8]
	196 Move X8, [X8+184]
	197 Move S2, [X8+8]
	198 Move S3, [X8+12]
	199 Move S0, [X8]
	200 Move S1, [X8+4]
	201 NotImplemented "Instruction CMP not yet implemented."
	202 NotImplemented "Instruction CMP not yet implemented."
	203 Move W26, W31
	204 Move W19, W31
	205 Add X27, X31, 84
	206 Add X28, X31, 88
	207 Move S8, 1
	208 Move S9, W31
	209 Move W8, [X24]
	210 NotImplemented "Instruction CMP not yet implemented."
	211 Move X8, [X21+32]
	212 Compare X8, 0
	213 JumpIfEqual {350}
	214 Move X9, [X21+40]
	215 Compare X9, 0
	216 JumpIfEqual {350}
	217 Move X10, [X21+48]
	218 Compare X10, 0
	219 JumpIfEqual {350}
	220 Move X11, [X21+56]
	221 Compare X11, 0
	222 JumpIfEqual {350}
	223 Move X12, [X21+64]
	224 Compare X12, 0
	225 JumpIfEqual {350}
	226 Move W13, [X8+24]
	227 NotImplemented "Instruction CMP not yet implemented."
	228 Move W13, [X9+24]
	229 NotImplemented "Instruction CMP not yet implemented."
	230 Move W13, [X10+24]
	231 NotImplemented "Instruction CMP not yet implemented."
	232 Move W13, [X11+24]
	233 NotImplemented "Instruction CMP not yet implemented."
	234 Move W13, [X12+24]
	235 NotImplemented "Instruction CMP not yet implemented."
	236 Move X1, [X31+72]
	237 Move X20, W19
	238 Add X8, X8, X20
	239 Add X9, X9, X20
	240 Add X10, X10, X20
	241 Add X11, X11, X20
	242 Add X12, X12, X20
	243 Add X4, X8, 32
	244 Add X5, X9, 32
	245 Add X6, X10, 32
	246 Add X7, X11, 32
	247 Add X8, X12, 32
	248 Move X0, X21
	249 Move X2, X23
	250 Move W3, W26
	251 Move [X31+8], X28
	252 Move [X31+16], X27
	253 Move [X31], X8
	254 Call ForwardLights.InitializeLightConstants, X0, X1, X2, X3, X4, X5, X6, X7, X8, X9
	255 Move X8, [X21+72]
	256 Compare X8, 0
	257 JumpIfEqual {350}
	258 Move W9, [X8+24]
	259 NotImplemented "Instruction CMP not yet implemented."
	260 Move V0, [X31+88]
	261 Add X8, X8, X20
	262 Move [X8+32], S0
	263 Move X8, [X21+40]
	264 Compare X8, 0
	265 JumpIfEqual {350}
	266 Move W9, [X8+24]
	267 NotImplemented "Instruction CMP not yet implemented."
	268 Move W9, [X31+84]
	269 Add X8, X8, X20
	270 Add W19, W19, 1
	271 NotImplemented "Instruction CMP not yet implemented."
	272 NotImplemented "Instruction FCSEL not yet implemented."
	273 Move [X8+44], S0
	274 NotImplemented "Instruction CMP not yet implemented."
	275 Add W26, W26, 1
	276 NotImplemented "Instruction CMP not yet implemented."
	277 Compare X29, 0
	278 JumpIfEqual {350}
	279 Move X19, 0x6B0000
	280 Move X19, [X19+2776]
	281 Move X2, [X21+32]
	282 Move X0, X29
	283 Move X3, X31
	284 Move X8, [X19]
	285 Move X8, [X8+184]
	286 Move W1, [X8+20]
	287 Call CommandBuffer.SetGlobalVectorArray, X0, X1, X2
	288 Move X8, [X19]
	289 Move X2, [X21+40]
	290 Move X0, X29
	291 Move X3, X31
	292 Move X8, [X8+184]
	293 Move W1, [X8+24]
	294 Call CommandBuffer.SetGlobalVectorArray, X0, X1, X2
	295 Move X8, [X19]
	296 Move X2, [X21+48]
	297 Move X0, X29
	298 Move X3, X31
	299 Move X8, [X8+184]
	300 Move W1, [X8+28]
	301 Call CommandBuffer.SetGlobalVectorArray, X0, X1, X2
	302 Move X8, [X19]
	303 Move X2, [X21+56]
	304 Move X0, X29
	305 Move X3, X31
	306 Move X8, [X8+184]
	307 Move W1, [X8+32]
	308 Call CommandBuffer.SetGlobalVectorArray, X0, X1, X2
	309 Move X8, [X19]
	310 Move X2, [X21+64]
	311 Move X0, X29
	312 Move X3, X31
	313 Move X8, [X8+184]
	314 Move W1, [X8+36]
	315 Call CommandBuffer.SetGlobalVectorArray, X0, X1, X2
	316 Move X8, [X19]
	317 Move X2, [X21+72]
	318 Move X0, X29
	319 Move X3, X31
	320 Move X8, [X8+184]
	321 Move W1, [X8+40]
	322 Call CommandBuffer.SetGlobalFloatArray, X0, X1, X2
	323 Move X8, [X19]
	324 Move V0, [X22+560]
	325 Move S1, W31
	326 Move S2, W31
	327 Move X8, [X8+184]
	328 NotImplemented "Instruction SCVTF not yet implemented."
	329 Move S3, W31
	330 Move X0, X29
	331 Move W1, [X8+16]
	332 Move X2, X31
	333 Call CommandBuffer.SetGlobalVector, X0, X1, X2
	334 Move X20, [X31+320]
	335 Move X19, [X31+328]
	336 Move X22, [X31+304]
	337 Move X21, [X31+312]
	338 Move X24, [X31+288]
	339 Move X23, [X31+296]
	340 Move X26, [X31+272]
	341 Move X25, [X31+280]
	342 Move X28, [X31+256]
	343 Move X27, [X31+264]
	344 Move X29, [X31+240]
	345 Move X30, [X31+248]
	346 Move D9, [X31+224]
	347 Move D8, [X31+232]
	348 Add X31, X31, 336
	349 Return 
	350 Call 0x1C17F20
	351 Call 0x1C17F28

Method: System.Int32 SetupPerObjectLightIndices(UnityEngine.Rendering.CullingResults cullResults, ref UnityEngine.Rendering.Universal.LightData lightData)

Disassembly:
	0x03AA8EE4 LDR X9, [X8 + 0x218]
	0x03AA8EE8 BLR X9
	0x03AA8EEC STR S0, [X31 + 0x158]
	0x03AA8EF0 STR S1, [X31 + 0x15C]
	0x03AA8EF4 STR S2, [X31 + 0x160]
	0x03AA8EF8 STR S3, [X31 + 0x164]
	0x03AA8EFC LDR X0, [X28 + 0x40]
	0x03AA8F00 CBZ X0, 0x3AA992C
	0x03AA8F04 LDR X8, [X0]
	0x03AA8F08 LDR X1, [X8 + 0x220]
	0x03AA8F0C LDR X9, [X8 + 0x218]
	0x03AA8F10 BLR X9
	0x03AA8F14 STR S0, [X31 + 0x148]
	0x03AA8F18 STR S1, [X31 + 0x14C]
	0x03AA8F1C STR S2, [X31 + 0x150]
	0x03AA8F20 STR S3, [X31 + 0x154]
	0x03AA8F24 LDR X0, [X28 + 0x48]
	0x03AA8F28 CBZ X0, 0x3AA9930
	0x03AA8F2C LDR X8, [X0]
	0x03AA8F30 LDR X1, [X8 + 0x220]
	0x03AA8F34 LDR X9, [X8 + 0x218]
	0x03AA8F38 BLR X9
	0x03AA8F3C STR S0, [X31 + 0x138]
	0x03AA8F40 STR S1, [X31 + 0x13C]
	0x03AA8F44 STR S2, [X31 + 0x140]
	0x03AA8F48 STR S3, [X31 + 0x144]
	0x03AA8F4C ADD X8, X31, 0xE8
	0x03AA8F50 ADD X0, X31, 0x158
	0x03AA8F54 ADD X1, X31, 0x148
	0x03AA8F58 ADD X2, X31, 0x138
	0x03AA8F5C MOV X3, X31
	0x03AA8F60 BL 0x39E4EDC
	0x03AA8F64 CBZ X27, 0x3AA9934
	0x03AA8F68 LDR X0, [X27 + 0x38]
	0x03AA8F6C CBZ X0, 0x3AA9938
	0x03AA8F70 LDR V1, [X31 + 0xE8]
	0x03AA8F74 LDR V0, [X31 + 0xEC]
	0x03AA8F78 LDR X8, [X0]
	0x03AA8F7C STP S0, S1, [X31 + 0x80]
	0x03AA8F80 LDR V1, [X31 + 0xF0]
	0x03AA8F84 LDR V0, [X31 + 0xF4]
	0x03AA8F88 LDR X1, [X8 + 0x220]
	0x03AA8F8C LDR X9, [X8 + 0x218]
	0x03AA8F90 STP S0, S1, [X31 + 0x78]
	0x03AA8F94 LDR V1, [X31 + 0xF8]
	0x03AA8F98 LDR V0, [X31 + 0xFC]
	0x03AA8F9C STP S0, S1, [X31 + 0x70]
	0x03AA8FA0 LDR V1, [X31 + 0x100]
	0x03AA8FA4 LDR V0, [X31 + 0x104]
	0x03AA8FA8 STP S0, S1, [X31 + 0x68]
	0x03AA8FAC LDR V1, [X31 + 0x108]
	0x03AA8FB0 LDR V0, [X31 + 0x10C]
	0x03AA8FB4 STP S1, S0, [X31 + 0x58]
	0x03AA8FB8 LDR V1, [X31 + 0x110]
	0x03AA8FBC LDR V0, [X31 + 0x114]
	0x03AA8FC0 STP S1, S0, [X31 + 0x60]
	0x03AA8FC4 BLR X9
	0x03AA8FC8 STR S0, [X31 + 0x158]
	0x03AA8FCC STR S1, [X31 + 0x15C]
	0x03AA8FD0 STR S2, [X31 + 0x160]
	0x03AA8FD4 STR S3, [X31 + 0x164]
	0x03AA8FD8 LDR X0, [X27 + 0x40]
	0x03AA8FDC CBZ X0, 0x3AA993C
	0x03AA8FE0 LDR X8, [X0]
	0x03AA8FE4 LDR X1, [X8 + 0x220]
	0x03AA8FE8 LDR X9, [X8 + 0x218]
	0x03AA8FEC BLR X9
	0x03AA8FF0 STR S0, [X31 + 0x148]
	0x03AA8FF4 STR S1, [X31 + 0x14C]
	0x03AA8FF8 STR S2, [X31 + 0x150]
	0x03AA8FFC STR S3, [X31 + 0x154]
	0x03AA9000 LDR X0, [X27 + 0x48]
	0x03AA9004 CBZ X0, 0x3AA9940
	0x03AA9008 LDR X8, [X0]
	0x03AA900C LDR X1, [X8 + 0x220]
	0x03AA9010 LDR X9, [X8 + 0x218]
	0x03AA9014 BLR X9
	0x03AA9018 STR S0, [X31 + 0x138]
	0x03AA901C STR S1, [X31 + 0x13C]
	0x03AA9020 STR S2, [X31 + 0x140]
	0x03AA9024 STR S3, [X31 + 0x144]
	0x03AA9028 ADD X8, X31, 0xE8
	0x03AA902C ADD X0, X31, 0x158
	0x03AA9030 ADD X1, X31, 0x148
	0x03AA9034 ADD X2, X31, 0x138
	0x03AA9038 MOV X3, X31
	0x03AA903C BL 0x39E50E4
	0x03AA9040 CBZ X26, 0x3AA9944
	0x03AA9044 LDR X0, [X26 + 0x38]
	0x03AA9048 CBZ X0, 0x3AA9948
	0x03AA904C LDR V1, [X31 + 0xF8]
	0x03AA9050 LDR V0, [X31 + 0xFC]
	0x03AA9054 LDR X8, [X0]
	0x03AA9058 LDP S8, S9, [X31 + 0xE8]
	0x03AA905C LDP S10, S15, [X31 + 0xF0]
	0x03AA9060 STP S0, S1, [X31 + 0x50]
	0x03AA9064 LDR V1, [X31 + 0x100]
	0x03AA9068 LDR V0, [X31 + 0x104]
	0x03AA906C LDR X1, [X8 + 0x220]
	0x03AA9070 LDR X9, [X8 + 0x218]
	0x03AA9074 STP S0, S1, [X31 + 0x48]
	0x03AA9078 LDR V1, [X31 + 0x108]
	0x03AA907C LDR V0, [X31 + 0x10C]
	0x03AA9080 STP S1, S0, [X31 + 0x38]
	0x03AA9084 LDR V1, [X31 + 0x110]
	0x03AA9088 LDR V0, [X31 + 0x114]
	0x03AA908C STP S1, S0, [X31 + 0x40]
	0x03AA9090 BLR X9
	0x03AA9094 STR S0, [X31 + 0x158]
	0x03AA9098 STR S1, [X31 + 0x15C]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+32], X30
	003 Move [X31+40], X21
	004 Move [X31+48], X20
	005 Move [X31+56], X19
	006 Move X20, 0x93B000
	007 Move W8, [X20+1043]
	008 Move X21, X3
	009 Move X19, X0
	010 Move [X31+16], X1
	011 Move [X31+24], X2
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x676000
	017 Move X0, [X0+328]
	018 Call 0x1C17CF4
	019 Move X0, 0x675000
	020 Move X0, [X0+2216]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X20+1043], W8
	024 Move [X31], X31
	025 Move [X31+8], X31
	026 Move W20, [X21+4]
	027 Compare W20, 0
	028 JumpIfEqual {113}
	029 Move W8, [X19+81]
	030 Compare W8, 0
	031 JumpIfNotEqual {113}
	032 Add X0, X31, 16
	033 Move W1, 2
	034 Move X2, X31
	035 Call CullingResults.GetLightIndexMap, X0, X1
	036 Move X9, 0x675000
	037 Move X9, [X9+2216]
	038 Move X8, X0
	039 Move [X31], X8
	040 Move [X31+8], X1
	041 Move X0, [X9]
	042 Move W8, [X0+224]
	043 Compare W8, 0
	044 JumpIfNotEqual {46}
	045 Call 0x1C17DFC
	046 Move X0, X31
	047 Call UniversalRenderPipeline.get_maxVisibleAdditionalLights
	048 Move W8, [X21+24]
	049 Move W20, W31
	050 NotImplemented "Instruction CMP not yet implemented."
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Move W9, W20
	053 Move X11, [X31]
	054 Move X10, X31
	055 Move W9, W31
	056 Move W20, W31
	057 Move TEMP, 0
	058 Not TEMP
	059 Move W12, TEMP
	060 Move W13, [X21]
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Move [X11], W12
	063 Add W9, W9, 1
	064 Move W13, [X11]
	065 Add W20, W20, 1
	066 Subtract W13, W13, W9
	067 Move [X11], W13
	068 Add X10, X10, 1
	069 NotImplemented "Instruction CMP not yet implemented."
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Move W9, W20
	072 Move W8, [X31+8]
	073 Add W9, W9, W20
	074 NotImplemented "Instruction CMP not yet implemented."
	075 Move X8, [X31]
	076 Move X9, W9
	077 Move TEMP, 0
	078 Not TEMP
	079 Move W10, TEMP
	080 Move [X8], W10
	081 NotImplemented "Instruction LDRSW not yet implemented."
	082 Add X9, X9, 1
	083 NotImplemented "Instruction CMP not yet implemented."
	084 Move X1, [X31]
	085 Move X2, [X31+8]
	086 Add X0, X31, 16
	087 Move X3, X31
	088 Call CullingResults.SetLightIndexMap, X0, X1
	089 NotImplemented "Instruction CMP not yet implemented."
	090 Move W8, [X19+80]
	091 Compare W8, 0
	092 JumpIfEqual {108}
	093 Add X0, X31, 16
	094 Move X1, X31
	095 Call CullingResults.get_lightAndReflectionProbeIndexCount, X0
	096 Move W19, W0
	097 Move X0, X31
	098 Call ShaderData.get_instance
	099 Compare X0, 0
	100 JumpIfEqual {120}
	101 Move W1, W19
	102 Move X2, X31
	103 Call ShaderData.GetLightIndicesBuffer, X0, X1
	104 Move X1, X0
	105 Add X0, X31, 16
	106 Move X2, X31
	107 Call CullingResults.FillLightAndReflectionProbeIndices, X0, X1
	108 Move X8, 0x675000
	109 Move X8, [X8+328]
	110 Add X0, X31, 0
	111 Move X1, [X8]
	112 Call NativeArray`1<Int32>.Dispose, X0
	113 Move W0, W20
	114 Move X20, [X31+48]
	115 Move X19, [X31+56]
	116 Move X30, [X31+32]
	117 Move X21, [X31+40]
	118 Add X31, X31, 64
	119 Return X0
	120 Call 0x1C17F20

Method: System.Void .cctor()

Disassembly:
	0x03AA909C STR S2, [X31 + 0x160]
	0x03AA90A0 STR S3, [X31 + 0x164]
	0x03AA90A4 LDR X0, [X26 + 0x40]
	0x03AA90A8 CBZ X0, 0x3AA994C
	0x03AA90AC LDR X8, [X0]
	0x03AA90B0 LDR X1, [X8 + 0x220]
	0x03AA90B4 LDR X9, [X8 + 0x218]
	0x03AA90B8 BLR X9
	0x03AA90BC STR S0, [X31 + 0x148]
	0x03AA90C0 STR S1, [X31 + 0x14C]
	0x03AA90C4 STR S2, [X31 + 0x150]
	0x03AA90C8 STR S3, [X31 + 0x154]
	0x03AA90CC LDR X0, [X26 + 0x48]
	0x03AA90D0 CBZ X0, 0x3AA9950
	0x03AA90D4 LDR X8, [X0]
	0x03AA90D8 LDR X1, [X8 + 0x220]
	0x03AA90DC LDR X9, [X8 + 0x218]
	0x03AA90E0 BLR X9
	0x03AA90E4 ADD X8, X31, 0xE8
	0x03AA90E8 ADD X0, X31, 0x158
	0x03AA90EC ADD X1, X31, 0x148
	0x03AA90F0 MOV X2, X31
	0x03AA90F4 BL 0x39E5390
	0x03AA90F8 ADRP X20, 0x6AE000
	0x03AA90FC LDR X20, [X20 + 0xC68]
	0x03AA9100 LDR V1, [X31 + 0xE8]
	0x03AA9104 LDR V0, [X31 + 0xEC]
	0x03AA9108 LDR W21, [X19 + 0x2A4]
	0x03AA910C LDR X0, [X20]
	0x03AA9110 STP S0, S1, [X31 + 0x30]
	0x03AA9114 LDR V1, [X31 + 0xF0]
	0x03AA9118 LDR V0, [X31 + 0xF4]
	0x03AA911C LDR W8, [X0 + 0xE0]
	0x03AA9120 STP S0, S1, [X31 + 0x28]
	0x03AA9124 LDR V1, [X31 + 0xF8]
	0x03AA9128 LDR V0, [X31 + 0xFC]
	0x03AA912C STP S1, S0, [X31 + 0x18]
	0x03AA9130 LDR V1, [X31 + 0x100]
	0x03AA9134 LDR V0, [X31 + 0x104]
	0x03AA9138 STP S1, S0, [X31 + 0x20]
	0x03AA913C CBNZ W8, 0x3AA9144
	0x03AA9140 BL 0x1C16DFC
	0x03AA9144 CBZ X22, 0x3AA9954
	0x03AA9148 LDR X8, [X20]
	0x03AA914C MUL W9, W21, W21
	0x03AA9150 SCVTF S0, W21
	0x03AA9154 FMOV S3, -1
	0x03AA9158 LDR X8, [X8 + 0xB8]
	0x03AA915C SCVTF S1, W9
	0x03AA9160 FMOV S2, 0.5
	0x03AA9164 FADD S3, S0, S3
	0x03AA9168 LDR W1, [X8]
	0x03AA916C FDIV S1, S2, S1
	0x03AA9170 FDIV S2, S2, S0
	0x03AA9174 FDIV S3, S0, S3
	0x03AA9178 MOV X0, X22
	0x03AA917C MOV X2, X31
	0x03AA9180 BL 0x3C15D80
	0x03AA9184 LDR X8, [X20]
	0x03AA9188 LDR X8, [X8 + 0xB8]
	0x03AA918C LDR W1, [X8 + 0x4]
	0x03AA9190 FMOV S3, W31
	0x03AA9194 MOV X0, X22
	0x03AA9198 MOV V0.16B, V11.16B
	0x03AA919C MOV V1.16B, V12.16B
	0x03AA91A0 MOV V2.16B, V13.16B
	0x03AA91A4 MOV X2, X31
	0x03AA91A8 BL 0x3C15D80
	0x03AA91AC LDR X0, [X25 + 0x48]
	0x03AA91B0 CBZ X0, 0x3AA9958
	0x03AA91B4 LDR X8, [X20]
	0x03AA91B8 LDR X9, [X0]
	0x03AA91BC LDR X8, [X8 + 0xB8]
	0x03AA91C0 LDR X1, [X9 + 0x220]
	0x03AA91C4 LDR X10, [X9 + 0x218]
	0x03AA91C8 LDR W25, [X8 + 0x8]
	0x03AA91CC BLR X10
	0x03AA91D0 MOV V14.16B, V1.16B
	0x03AA91D4 MOV V13.16B, V2.16B
	0x03AA91D8 MOV V11.16B, V3.16B

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X25, 0x93A000
	010 Move X22, 0x6A8000
	011 Move X19, 0x6AF000
	012 Move X20, 0x6AF000
	013 Move X24, 0x6AF000
	014 Move X23, 0x6AF000
	015 Move X21, 0x6AF000
	016 Move X22, [X22+1432]
	017 Move W8, [X25+1044]
	018 Move X19, [X19+2112]
	019 Move X20, [X20+384]
	020 Move X24, [X24+3112]
	021 Move X23, [X23+3120]
	022 Move X21, [X21+3128]
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {47}
	027 Move X0, 0x6AF000
	028 Move X0, [X0+384]
	029 Call 0x1C17CF4
	030 Move X0, 0x6A8000
	031 Move X0, [X0+1432]
	032 Call 0x1C17CF4
	033 Move X0, 0x6AF000
	034 Move X0, [X0+3128]
	035 Call 0x1C17CF4
	036 Move X0, 0x6AF000
	037 Move X0, [X0+3120]
	038 Call 0x1C17CF4
	039 Move X0, 0x6AF000
	040 Move X0, [X0+3112]
	041 Call 0x1C17CF4
	042 Move X0, 0x6AF000
	043 Move X0, [X0+2112]
	044 Call 0x1C17CF4
	045 Move W8, 1
	046 Move [X25+1044], W8
	047 Move X0, [X22]
	048 Call 0x1C17F10
	049 Move X1, [X19]
	050 Move X2, X31
	051 Move X19, X0
	052 Call ProfilingSampler..ctor, X0, X1
	053 Move X8, [X20]
	054 Move X8, [X8+184]
	055 Move [X8], X19
	056 Move X0, [X22]
	057 Call 0x1C17F10
	058 Move X1, [X24]
	059 Move X2, X31
	060 Move X19, X0
	061 Call ProfilingSampler..ctor, X0, X1
	062 Move X8, [X20]
	063 Move X8, [X8+184]
	064 Move [X8+8], X19
	065 Move X0, [X22]
	066 Call 0x1C17F10
	067 Move X1, [X23]
	068 Move X2, X31
	069 Move X19, X0
	070 Call ProfilingSampler..ctor, X0, X1
	071 Move X8, [X20]
	072 Move X8, [X8+184]
	073 Move [X8+16], X19
	074 Move X0, [X22]
	075 Call 0x1C17F10
	076 Move X1, [X21]
	077 Move X2, X31
	078 Move X19, X0
	079 Call ProfilingSampler..ctor, X0, X1
	080 Move X8, [X20]
	081 Move X22, [X31+32]
	082 Move X21, [X31+40]
	083 Move X24, [X31+16]
	084 Move X23, [X31+24]
	085 Move X8, [X8+184]
	086 Move [X8+24], X19
	087 Move X20, [X31+48]
	088 Move X19, [X31+56]
	089 Move X30, [X31+64]
	090 Move X25, [X31+72]
	091 Return 

Method: System.Boolean <PreSetup>g__IsProbeGreater|40_0(UnityEngine.Rendering.VisibleReflectionProbe probe, UnityEngine.Rendering.VisibleReflectionProbe otherProbe)

Disassembly:
	0x03AA7B18 ADD X19, X8, 0x30
	0x03AA7B1C ADD X26, X8, 0x40
	0x03AA7B20 ADD X22, X8, 0x50
	0x03AA7B24 LDR W8, [X24]
	0x03AA7B28 CMP W27, W8
	0x03AA7B2C B.EQ 0x3AA7B7C
	0x03AA7B30 LDR X1, [X31 + 0x48]
	0x03AA7B34 ADD X8, X31, 0x5C
	0x03AA7B38 ADD X4, X31, 0x60
	0x03AA7B3C MOV X0, X21
	0x03AA7B40 MOV X2, X23
	0x03AA7B44 MOV W3, W27
	0x03AA7B48 MOV X5, X28
	0x03AA7B4C MOV X6, X29
	0x03AA7B50 MOV X7, X19
	0x03AA7B54 STP X22, X8, [X31 + 0x8]
	0x03AA7B58 STR X26, [X31]
	0x03AA7B5C BL 0x3AA7688
	0x03AA7B60 LDR X8, [X31 + 0xC0]
	0x03AA7B64 MOVZ W9, 0x54
	0x03AA7B68 ADD X1, X31, 0x60
	0x03AA7B6C MOVZ W2, 0x54
	0x03AA7B70 SMADDL X0, X20, X9, X8
	0x03AA7B74 BL 0x3EB1B30
	0x03AA7B78 ADD W20, W20, 0x1
	0x03AA7B7C CMP W20, W25
	0x03AA7B80 B.GE 0x3AA7B90
	0x03AA7B84 ADD W27, W27, 0x1
	0x03AA7B88 CMP W27, W23
	0x03AA7B8C B.LT 0x3AA7B24
	0x03AA7B90 MOV X0, X31
	0x03AA7B94 BL 0x3A7598C
	0x03AA7B98 CBZ X0, 0x3AA7EDC
	0x03AA7B9C LDR W1, [X31 + 0x3C]
	0x03AA7BA0 MOV X2, X31
	0x03AA7BA4 BL 0x3A75A88
	0x03AA7BA8 LDR X29, [X31 + 0x40]
	0x03AA7BAC CBZ X0, 0x3AA7EDC
	0x03AA7BB0 ADRP X8, 0x6B0000
	0x03AA7BB4 LDP X1, X2, [X31 + 0xC0]
	0x03AA7BB8 LDR X8, [X8 + 0xC10]
	0x03AA7BBC MOV X19, X0
	0x03AA7BC0 LDR X3, [X8]
	0x03AA7BC4 BL 0x21A4BA4
	0x03AA7BC8 ADD X0, X31, 0xD0
	0x03AA7BCC MOV X1, X31
	0x03AA7BD0 BL 0x3C52F28
	0x03AA7BD4 MOV W22, W0
	0x03AA7BD8 MOV X0, X31
	0x03AA7BDC BL 0x3A7598C
	0x03AA7BE0 CBZ X0, 0x3AA7EDC
	0x03AA7BE4 MOV W1, W22
	0x03AA7BE8 MOV X2, X31
	0x03AA7BEC BL 0x3A75AE4
	0x03AA7BF0 CBZ X29, 0x3AA7EDC
	0x03AA7BF4 LDR W1, [X21 + 0x10]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+32], D8
	003 Move [X31+48], X30
	004 Move [X31+56], X21
	005 Move [X31+64], X20
	006 Move [X31+72], X19
	007 Move X19, X1
	008 Move X1, X31
	009 Move X20, X0
	010 Call VisibleReflectionProbe.get_importance, X0
	011 Move W21, W0
	012 Move X0, X19
	013 Move X1, X31
	014 Call VisibleReflectionProbe.get_importance, X0
	015 NotImplemented "Instruction CMP not yet implemented."
	016 Move W0, 1
	017 Move X0, X20
	018 Move X1, X31
	019 Call VisibleReflectionProbe.get_importance, X0
	020 Move W21, W0
	021 Move X0, X19
	022 Move X1, X31
	023 Call VisibleReflectionProbe.get_importance, X0
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Add X8, X31, 8
	026 Move X0, X20
	027 Move X1, X31
	028 Call VisibleReflectionProbe.get_bounds, X0
	029 Move S0, [X31+20]
	030 Move S1, [X31+24]
	031 Move V2, [X31+28]
	032 Add X8, X31, 8
	033 Move X0, X19
	034 Multiply S0, S0, S0
	035 Multiply S1, S1, S1
	036 Add S0, S0, S1
	037 Multiply S1, S2, S2
	038 Move X1, X31
	039 Add S8, S0, S1
	040 Call VisibleReflectionProbe.get_bounds, X0
	041 Move S0, [X31+20]
	042 Move S1, [X31+24]
	043 Move V2, [X31+28]
	044 Multiply S0, S0, S0
	045 Multiply S1, S1, S1
	046 Add S0, S0, S1
	047 Multiply S1, S2, S2
	048 Add S0, S0, S1
	049 NotImplemented "Instruction FCMP not yet implemented."
	050 NotImplemented "Instruction CSET not yet implemented."
	051 Move W0, W31
	052 Move X20, [X31+64]
	053 Move X19, [X31+72]
	054 Move X30, [X31+48]
	055 Move X21, [X31+56]
	056 Move V8, [X31+32]
	057 Add X31, X31, 80
	058 Return X0

