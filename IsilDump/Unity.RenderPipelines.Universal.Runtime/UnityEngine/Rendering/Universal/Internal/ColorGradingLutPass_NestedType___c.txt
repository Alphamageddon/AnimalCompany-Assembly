Type: UnityEngine.Rendering.Universal.Internal.ColorGradingLutPass/<>c

Method: System.Void .cctor()

Disassembly:
	0x03AAB470 LDR X2, [X8]
	0x03AAB474 MOV X1, X21
	0x03AAB478 MOV X3, X31
	0x03AAB47C BL 0x25C78AC
	0x03AAB480 LDR X8, [X27]
	0x03AAB484 LDR X8, [X8 + 0xB8]
	0x03AAB488 STR X20, [X8 + 0x10]
	0x03AAB48C LDR X2, [X26]
	0x03AAB490 ADD X0, X31, 0xC0
	0x03AAB494 MOV X1, X20
	0x03AAB498 BL 0x224107C
	0x03AAB49C ADD X0, X31, 0xC0
	0x03AAB4A0 MOV X1, X31
	0x03AAB4A4 BL 0x39972C0
	0x03AAB4A8 LDR X0, [X19]
	0x03AAB4AC LDP X20, X19, [X31 + 0x1A0]
	0x03AAB4B0 LDP X22, X21, [X31 + 0x190]
	0x03AAB4B4 LDP X24, X23, [X31 + 0x180]
	0x03AAB4B8 LDP X26, X25, [X31 + 0x170]
	0x03AAB4BC LDP X28, X27, [X31 + 0x160]
	0x03AAB4C0 LDP X29, X30, [X31 + 0x150]
	0x03AAB4C4 ADD X31, X31, 0x1B0
	0x03AAB4C8 RET

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x938000
	005 Move X20, 0x6AD000
	006 Move W8, [X19+1055]
	007 Move X20, [X20+3264]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x6AD000
	013 Move X0, [X0+3264]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+1055], W8
	017 Move X0, [X20]
	018 Call 0x1C17F10
	019 Move X1, X31
	020 Move X19, X0
	021 Call Object..ctor, X0
	022 Move X8, [X20]
	023 Move X8, [X8+184]
	024 Move [X8], X19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Return 

Method: System.Void .ctor()

Disassembly:
	0x03AAB4CC BL 0x1C16F20
	0x03AAB4D0 BL 0x1C16F20

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: System.Void <Render>b__13_0(UnityEngine.Rendering.Universal.Internal.ColorGradingLutPass/PassData data, UnityEngine.Experimental.Rendering.RenderGraphModule.RenderGraphContext context)

Disassembly:
	0x03AAB4D4 BL 0x1C16F20
	0x03AAB4D8 BL 0x1C16F20
	0x03AAB4DC BL 0x1C16F20
	0x03AAB4E0 BL 0x1C16F20
	0x03AAB4E4 BL 0x1C16F20
	0x03AAB4E8 BL 0x1C16F20
	0x03AAB4EC BL 0x1C16F20
	0x03AAB4F0 BL 0x1C16F20
	0x03AAB4F4 BL 0x1C16F20
	0x03AAB4F8 B 0x3AAB550
	0x03AAB4FC B 0x3AAB550
	0x03AAB500 B 0x3AAB550
	0x03AAB504 B 0x3AAB550
	0x03AAB508 B 0x3AAB5A8
	0x03AAB50C B 0x3AAB550
	0x03AAB510 B 0x3AAB550
	0x03AAB514 B 0x3AAB550
	0x03AAB518 B 0x3AAB550
	0x03AAB51C B 0x3AAB550
	0x03AAB520 B 0x3AAB550
	0x03AAB524 B 0x3AAB550
	0x03AAB528 B 0x3AAB550
	0x03AAB52C B 0x3AAB550
	0x03AAB530 B 0x3AAB550
	0x03AAB534 B 0x3AAB5A8
	0x03AAB538 B 0x3AAB550
	0x03AAB53C B 0x3AAB5A8
	0x03AAB540 B 0x3AAB5A8
	0x03AAB544 B 0x3AAB550
	0x03AAB548 B 0x3AAB5A8
	0x03AAB54C B 0x3AAB550
	0x03AAB550 MOV X24, X0
	0x03AAB554 CMP W1, 0x1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x938000
	006 Move W8, [X21+1056]
	007 Move X20, X2
	008 Move X19, X1
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x6A6000
	014 Move X0, [X0+2696]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+1056], W8
	018 Compare X20, 0
	019 JumpIfEqual {44}
	020 Compare X19, 0
	021 JumpIfEqual {44}
	022 Move X8, 0x6A6000
	023 Move X8, [X8+2696]
	024 Move X0, [X8]
	025 Add X8, X19, 732
	026 Move X20, [X8]
	027 Move W9, [X0+224]
	028 Compare W9, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X0, X20
	032 Move X1, X31
	033 Add X21, X19, 16
	034 Call TextureHandle.op_Implicit, X0
	035 Move X1, X19
	036 Move X20, [X31+16]
	037 Move X19, [X31+24]
	038 Move X2, X21
	039 Move X3, X0
	040 Move X30, [X31+32]
	041 Move X21, [X31+40]
	042 Call ColorGradingLutPass.ExecutePass, X0, X1, X2, X3
	043 Return 
	044 Call 0x1C17F20

