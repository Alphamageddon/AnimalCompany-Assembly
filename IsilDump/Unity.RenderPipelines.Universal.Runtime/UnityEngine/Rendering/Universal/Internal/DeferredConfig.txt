Type: UnityEngine.Rendering.Universal.Internal.DeferredConfig

Method: System.Boolean get_IsOpenGL()

Disassembly:
	0x03A9BBE4 LDP X24, X23, [X31 + 0x80]
	0x03A9BBE8 LDP X26, X25, [X31 + 0x70]
	0x03A9BBEC LDR X30, [X31 + 0x60]
	0x03A9BBF0 LDP D9, D8, [X31 + 0x50]
	0x03A9BBF4 ADD X31, X31, 0xB0
	0x03A9BBF8 RET
	0x03A9BBFC BL 0x1C16F20
	0x03A9BC00 B 0x3A9BC28
	0x03A9BC04 B 0x3A9BC28
	0x03A9BC08 B 0x3A9BC28
	0x03A9BC0C B 0x3A9BC28
	0x03A9BC10 B 0x3A9BC28
	0x03A9BC14 B 0x3A9BC28
	0x03A9BC18 B 0x3A9BC28
	0x03A9BC1C B 0x3A9BC28
	0x03A9BC20 B 0x3A9BC28
	0x03A9BC24 B 0x3A9BC28
	0x03A9BC28 MOV X19, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x948000
	005 Move X20, 0x6BD000
	006 Move W8, [X19+987]
	007 Move X20, [X20+1856]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x6BD000
	013 Move X0, [X0+1856]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+987], W8
	017 Move X8, [X20]
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X8, [X8+184]
	021 Move W0, [X8]
	022 Move X30, [X31+32]
	023 Return X0

Method: System.Void set_IsOpenGL(System.Boolean value)

Disassembly:
	0x03A9BC2C CMP W1, 0x1
	0x03A9BC30 B.NE 0x3A9BC5C
	0x03A9BC34 MOV X0, X19
	0x03A9BC38 BL 0x3EB1AD0
	0x03A9BC3C LDR X21, [X0]
	0x03A9BC40 BL 0x3EB1AE0
	0x03A9BC44 ADD X0, X31, 0x48
	0x03A9BC48 MOV X1, X31
	0x03A9BC4C BL 0x39B1DB4
	0x03A9BC50 CBZ X21, 0x3A9BBA4
	0x03A9BC54 MOV X0, X21
	0x03A9BC58 BL 0x1C16F18
	0x03A9BC5C MOV X21, X31
	0x03A9BC60 B 0x3A9BC68
	0x03A9BC64 MOV X19, X0
	0x03A9BC68 ADD X0, X31, 0x48
	0x03A9BC6C MOV X1, X31
	0x03A9BC70 BL 0x39B1DB4
	0x03A9BC74 CBNZ X21, 0x3A9BC80
	0x03A9BC78 MOV X0, X19

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x948000
	006 Move X20, 0x6BD000
	007 Move W8, [X21+988]
	008 Move X20, [X20+1856]
	009 Move W19, W0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x6BD000
	015 Move X0, [X0+1856]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+988], W8
	019 Move X8, [X20]
	020 And W9, W19, 1
	021 Move X20, [X31+16]
	022 Move X19, [X31+24]
	023 Move X8, [X8+184]
	024 Move [X8], W9
	025 Move X30, [X31+32]
	026 Move X21, [X31+40]
	027 Return 

Method: System.Boolean get_IsDX10()

Disassembly:
	0x03A9BC7C BL 0x1D2C690
	0x03A9BC80 MOV X0, X21
	0x03A9BC84 BL 0x1C16F18
	0x03A9BC88 BL 0x1990590
	0x03A9BC8C SUB X31, X31, 0x80
	0x03A9BC90 STP X30, X27, [X31 + 0x30]
	0x03A9BC94 STP X26, X25, [X31 + 0x40]
	0x03A9BC98 STP X24, X23, [X31 + 0x50]
	0x03A9BC9C STP X22, X21, [X31 + 0x60]
	0x03A9BCA0 STP X20, X19, [X31 + 0x70]
	0x03A9BCA4 ADRP X23, 0x947000
	0x03A9BCA8 LDRB W8, [X23 + 0x3ED]
	0x03A9BCAC MOV W22, W4
	0x03A9BCB0 MOV X21, X3
	0x03A9BCB4 MOV X19, X2
	0x03A9BCB8 MOV X20, X1
	0x03A9BCBC TBNZ X8, 0x0, 0x3A9BD04
	0x03A9BCC0 ADRP X0, 0x6BC000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x948000
	005 Move X20, 0x6BD000
	006 Move W8, [X19+989]
	007 Move X20, [X20+1856]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x6BD000
	013 Move X0, [X0+1856]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+989], W8
	017 Move X8, [X20]
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X8, [X8+184]
	021 Move W0, [X8+1]
	022 Move X30, [X31+32]
	023 Return X0

Method: System.Void set_IsDX10(System.Boolean value)

Disassembly:
	0x03A9BCC4 LDR X0, [X0 + 0x148]
	0x03A9BCC8 BL 0x1C16CF4
	0x03A9BCCC ADRP X0, 0x6BB000
	0x03A9BCD0 LDR X0, [X0 + 0x1B8]
	0x03A9BCD4 BL 0x1C16CF4
	0x03A9BCD8 ADRP X0, 0x682000
	0x03A9BCDC LDR X0, [X0 + 0x148]
	0x03A9BCE0 BL 0x1C16CF4
	0x03A9BCE4 ADRP X0, 0x6B9000
	0x03A9BCE8 LDR X0, [X0 + 0x520]
	0x03A9BCEC BL 0x1C16CF4
	0x03A9BCF0 ADRP X0, 0x682000
	0x03A9BCF4 LDR X0, [X0 + 0x138]
	0x03A9BCF8 BL 0x1C16CF4
	0x03A9BCFC MOVZ W8, 0x1
	0x03A9BD00 STRB W8, [X23 + 0x3ED]
	0x03A9BD04 ADRP X25, 0x6B9000
	0x03A9BD08 ADRP X23, 0x6BC000
	0x03A9BD0C LDR X25, [X25 + 0x520]
	0x03A9BD10 LDR X23, [X23 + 0x148]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x948000
	006 Move X20, 0x6BD000
	007 Move W8, [X21+990]
	008 Move X20, [X20+1856]
	009 Move W19, W0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x6BD000
	015 Move X0, [X0+1856]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+990], W8
	019 Move X8, [X20]
	020 And W9, W19, 1
	021 Move X20, [X31+16]
	022 Move X19, [X31+24]
	023 Move X8, [X8+184]
	024 Move [X8+1], W9
	025 Move X30, [X31+32]
	026 Move X21, [X31+40]
	027 Return 

