Type: UnityEngine.Rendering.Universal.Internal.GBufferPass

Method: System.Void .ctor(UnityEngine.Rendering.Universal.RenderPassEvent evt, UnityEngine.Rendering.RenderQueueRange renderQueueRange, UnityEngine.LayerMask layerMask, UnityEngine.Rendering.StencilState stencilState, System.Int32 stencilReference, UnityEngine.Rendering.Universal.Internal.DeferredLights deferredLights)

Disassembly:
	0x03AB2C40 BL 0x1C16CF4
	0x03AB2C44 ADRP X0, 0x6A6000
	0x03AB2C48 LDR X0, [X0 + 0xA8]
	0x03AB2C4C BL 0x1C16CF4
	0x03AB2C50 ADRP X0, 0x6A6000
	0x03AB2C54 LDR X0, [X0 + 0xB0]
	0x03AB2C58 BL 0x1C16CF4
	0x03AB2C5C ADRP X0, 0x6A6000
	0x03AB2C60 LDR X0, [X0 + 0xB8]
	0x03AB2C64 BL 0x1C16CF4
	0x03AB2C68 ADRP X0, 0x6A6000
	0x03AB2C6C LDR X0, [X0 + 0xC0]
	0x03AB2C70 BL 0x1C16CF4
	0x03AB2C74 ADRP X0, 0x6A1000
	0x03AB2C78 LDR X0, [X0 + 0xFF8]
	0x03AB2C7C BL 0x1C16CF4
	0x03AB2C80 ADRP X0, 0x6A6000
	0x03AB2C84 LDR X0, [X0 + 0xC8]
	0x03AB2C88 BL 0x1C16CF4
	0x03AB2C8C ADRP X0, 0x6A6000
	0x03AB2C90 LDR X0, [X0 + 0xD0]
	0x03AB2C94 BL 0x1C16CF4
	0x03AB2C98 MOVZ W8, 0x1
	0x03AB2C9C STRB W8, [X24 + 0x466]
	0x03AB2CA0 MOVI V0.2D, 0x0
	0x03AB2CA4 STR X31, [X31 + 0x388]
	0x03AB2CA8 STR W31, [X31 + 0x380]
	0x03AB2CAC STP V0, V0, [X31 + 0x390]
	0x03AB2CB0 STP V0, V0, [X31 + 0x360]
	0x03AB2CB4 STP V0, V0, [X31 + 0x340]
	0x03AB2CB8 STR V0, [X31 + 0x33]
	0x03AB2CBC STR X31, [X31 + 0x328]
	0x03AB2CC0 CBZ X22, 0x3AB32F0
	0x03AB2CC4 ADRP X8, 0x6A6000
	0x03AB2CC8 ADRP X9, 0x6A6000
	0x03AB2CCC LDR X8, [X8 + 0xD0]
	0x03AB2CD0 LDR X9, [X9 + 0xA8]
	0x03AB2CD4 LDR X3, [X19 + 0xE0]
	0x03AB2CD8 ADRP X25, 0x6A6000
	0x03AB2CDC LDR X1, [X8]
	0x03AB2CE0 LDR X4, [X9]
	0x03AB2CE4 ADRP X24, 0x6A6000
	0x03AB2CE8 LDR X25, [X25 + 0xC0]
	0x03AB2CEC LDR X24, [X24 + 0xA0]
	0x03AB2CF0 ADD X8, X31, 0x30
	0x03AB2CF4 ADD X2, X31, 0x388
	0x03AB2CF8 MOV X0, X22
	0x03AB2CFC BL 0x2240F24
	0x03AB2D00 LDP V0, V1, [X31 + 0x30]
	0x03AB2D04 STP V0, V1, [X31 + 0x390]
	0x03AB2D08 LDR X8, [X19 + 0xE8]
	0x03AB2D0C CBZ X8, 0x3AB32F4
	0x03AB2D10 LDR X10, [X21]
	0x03AB2D14 CBZ X10, 0x3AB3300
	0x03AB2D18 LDR X9, [X31 + 0x388]
	0x03AB2D1C LDR X11, [X8 + 0x40]
	0x03AB2D20 STR X11, [X10 + 0x38]
	0x03AB2D24 CBZ X9, 0x3AB330C
	0x03AB2D28 ADRP X29, 0x6A5000
	0x03AB2D2C ADRP X26, 0x6A1000
	0x03AB2D30 LDR X29, [X29 + 0x148]
	0x03AB2D34 LDR X26, [X26 + 0xFF8]
	0x03AB2D38 MOV X24, X31
	0x03AB2D3C ADD X28, X20, 0xF0
	0x03AB2D40 STR X11, [X9 + 0x10]
	0x03AB2D44 MOV X0, X8
	0x03AB2D48 MOV X1, X31
	0x03AB2D4C BL 0x3A9AE14
	0x03AB2D50 CMP X24, W0, SXTW
	0x03AB2D54 B.GE 0x3AB2F08
	0x03AB2D58 LDR W8, [X28 + 0x30]
	0x03AB2D5C LDP V1, V0, [X28 + 0x10]
	0x03AB2D60 LDR V2, [X28]
	0x03AB2D64 STR W8, [X31 + 0x380]
	0x03AB2D68 STP V1, V0, [X31 + 0x360]
	0x03AB2D6C STR V2, [X31 + 0x35]
	0x03AB2D70 ADD X0, X31, 0x350
	0x03AB2D74 MOV W1, W31
	0x03AB2D78 MOV X2, X31
	0x03AB2D7C BL 0x3C22520
	0x03AB2D80 STR W31, [X31 + 0x368]
	0x03AB2D84 LDR X0, [X19 + 0xE8]
	0x03AB2D88 CBZ X0, 0x3AB32C0
	0x03AB2D8C MOV X1, X31
	0x03AB2D90 BL 0x3A9AD2C
	0x03AB2D94 CMP X24, W0, UXTW
	0x03AB2D98 B.NE 0x3AB2DC4
	0x03AB2D9C LDR X8, [X21]
	0x03AB2DA0 CBZ X8, 0x3AB32D4
	0x03AB2DA4 LDR X8, [X8 + 0x38]
	0x03AB2DA8 CBZ X8, 0x3AB32DC
	0x03AB2DAC LDR W9, [X8 + 0x18]
	0x03AB2DB0 CMP X24, X9
	0x03AB2DB4 B.CS 0x3AB32D0
	0x03AB2DB8 ADD X8, X8, X24, 0x3, LSL
	0x03AB2DBC STR X23, [X8 + 0x20]
	0x03AB2DC0 B 0x3AB2EA0
	0x03AB2DC4 LDR X0, [X19 + 0xE8]
	0x03AB2DC8 CBZ X0, 0x3AB32CC
	0x03AB2DCC MOV W1, W24
	0x03AB2DD0 MOV X2, X31
	0x03AB2DD4 BL 0x3A9AE60
	0x03AB2DD8 MOV W1, W0
	0x03AB2DDC ADD X0, X31, 0x350
	0x03AB2DE0 MOV X2, X31
	0x03AB2DE4 BL 0x3C2240C
	0x03AB2DE8 LDR X8, [X21]
	0x03AB2DEC CBZ X8, 0x3AB32D8
	0x03AB2DF0 LDR X27, [X8 + 0x38]
	0x03AB2DF4 LDP V0, V1, [X31 + 0x350]
	0x03AB2DF8 LDR V2, [X31 + 0x37]
	0x03AB2DFC LDR W8, [X31 + 0x380]
	0x03AB2E00 LDR X0, [X29]
	0x03AB2E04 STP V0, V1, [X31 + 0x30]
	0x03AB2E08 STR V2, [X31 + 0x5]
	0x03AB2E0C STR W8, [X31 + 0x60]
	0x03AB2E10 LDR W8, [X0 + 0xE0]
	0x03AB2E14 CBNZ W8, 0x3AB2E20
	0x03AB2E18 BL 0x1C16DFC
	0x03AB2E1C LDR X0, [X29]
	0x03AB2E20 LDR X8, [X0 + 0xB8]
	0x03AB2E24 LDR X8, [X8]
	0x03AB2E28 CBZ X8, 0x3AB32E8
	0x03AB2E2C LDR W9, [X8 + 0x18]
	0x03AB2E30 CMP X24, X9
	0x03AB2E34 B.CS 0x3AB32E4
	0x03AB2E38 LDR X0, [X26]
	0x03AB2E3C ADD X8, X8, X24, 0x3, LSL
	0x03AB2E40 LDR X25, [X8 + 0x20]
	0x03AB2E44 LDR W9, [X0 + 0xE0]
	0x03AB2E48 CBNZ W9, 0x3AB2E50
	0x03AB2E4C BL 0x1C16DFC
	0x03AB2E50 LDP V0, V1, [X31 + 0x30]
	0x03AB2E54 LDR V2, [X31 + 0x5]
	0x03AB2E58 LDR W8, [X31 + 0x60]
	0x03AB2E5C STP V0, V1, [X31 + 0x2F0]
	0x03AB2E60 STR V2, [X31 + 0x31]
	0x03AB2E64 STR W8, [X31 + 0x320]
	0x03AB2E68 ADD X1, X31, 0x2F0
	0x03AB2E6C MOVZ W3, 0x1
	0x03AB2E70 MOVZ W5, 0x1
	0x03AB2E74 MOV X0, X22
	0x03AB2E78 MOV X2, X25
	0x03AB2E7C MOV W4, W31
	0x03AB2E80 MOV X6, X31
	0x03AB2E84 BL 0x3A87660
	0x03AB2E88 CBZ X27, 0x3AB32EC
	0x03AB2E8C LDR W8, [X27 + 0x18]
	0x03AB2E90 CMP X24, X8
	0x03AB2E94 B.CS 0x3AB32E0
	0x03AB2E98 ADD X8, X27, X24, 0x3, LSL
	0x03AB2E9C STR X0, [X8 + 0x20]
	0x03AB2EA0 LDR X8, [X31 + 0x388]
	0x03AB2EA4 CBZ X8, 0x3AB32B4
	0x03AB2EA8 LDR X9, [X21]
	0x03AB2EAC CBZ X9, 0x3AB32BC
	0x03AB2EB0 LDR X9, [X9 + 0x38]
	0x03AB2EB4 CBZ X9, 0x3AB32B0
	0x03AB2EB8 LDR W10, [X9 + 0x18]
	0x03AB2EBC CMP X24, X10
	0x03AB2EC0 B.CS 0x3AB32C8
	0x03AB2EC4 LDR X25, [X8 + 0x10]
	0x03AB2EC8 ADD X8, X9, X24, 0x3, LSL
	0x03AB2ECC ADD X1, X8, 0x20
	0x03AB2ED0 ADD X0, X31, 0x390
	0x03AB2ED4 MOV W2, W24
	0x03AB2ED8 MOV X3, X31
	0x03AB2EDC BL 0x3996828
	0x03AB2EE0 CBZ X25, 0x3AB32C4
	0x03AB2EE4 LDR W8, [X25 + 0x18]
	0x03AB2EE8 CMP X24, X8
	0x03AB2EEC B.CS 0x3AB32B8
	0x03AB2EF0 ADD X8, X25, X24, 0x3, LSL
	0x03AB2EF4 STR X0, [X8 + 0x20]
	0x03AB2EF8 LDR X8, [X19 + 0xE8]
	0x03AB2EFC ADD X24, X24, 0x1
	0x03AB2F00 CBNZ X8, 0x3AB2D44
	0x03AB2F04 BL 0x1C16F20
	0x03AB2F08 LDR X23, [X31 + 0x388]
	0x03AB2F0C CBZ X23, 0x3AB331C
	0x03AB2F10 LDR X8, [X19 + 0xE8]
	0x03AB2F14 STR X8, [X23 + 0x2D8]
	0x03AB2F18 ADRP X25, 0x6A6000
	0x03AB2F1C ADRP X26, 0x6A6000
	0x03AB2F20 LDR X25, [X25 + 0xA0]
	0x03AB2F24 LDR X26, [X26 + 0xC0]
	0x03AB2F28 ADD X0, X31, 0x390
	0x03AB2F2C ADD X1, X31, 0x3B0
	0x03AB2F30 MOVZ W2, 0x2
	0x03AB2F34 MOV X3, X31
	0x03AB2F38 BL 0x3996A00
	0x03AB2F3C ADRP X24, 0x6A5000
	0x03AB2F40 LDR X24, [X24 + 0x190]
	0x03AB2F44 STR X0, [X23 + 0x18]
	0x03AB2F48 LDR X23, [X31 + 0x388]
	0x03AB2F4C ADD X0, X31, 0x30
	0x03AB2F50 MOVZ W2, 0x2B8
	0x03AB2F54 MOV X1, X20
	0x03AB2F58 BL 0x3EB1AC0
	0x03AB2F5C CBZ X23, 0x3AB3320
	0x03AB2F60 ADD X0, X23, 0x20
	0x03AB2F64 ADD X1, X31, 0x30
	0x03AB2F68 MOVZ W2, 0x2B8
	0x03AB2F6C BL 0x3EB1AC0
	0x03AB2F70 ADD X0, X31, 0x390
	0x03AB2F74 MOV W1, W31
	0x03AB2F78 MOV X2, X31
	0x03AB2F7C BL 0x398E404
	0x03AB2F80 LDR X23, [X31 + 0x388]
	0x03AB2F84 LDR X8, [X19 + 0x100]
	0x03AB2F88 LDR V0, [X19 + 0xF]
	0x03AB2F8C STR X8, [X31 + 0x20]
	0x03AB2F90 STR V0, [X31 + 0x1]
	0x03AB2F94 CBZ X23, 0x3AB3324
	0x03AB2F98 LDR X8, [X31 + 0x20]
	0x03AB2F9C LDR V0, [X31 + 0x1]
	0x03AB2FA0 STR X8, [X23 + 0x2F0]
	0x03AB2FA4 STR V0, [X23 + 0x2E]
	0x03AB2FA8 LDR X0, [X24]
	0x03AB2FAC LDR W8, [X0 + 0xE0]
	0x03AB2FB0 CBNZ W8, 0x3AB2FC0
	0x03AB2FB4 BL 0x1C16DFC
	0x03AB2FB8 LDR X23, [X31 + 0x388]
	0x03AB2FBC CBZ X23, 0x3AB3328
	0x03AB2FC0 LDR X8, [X24]
	0x03AB2FC4 LDR W3, [X20 + 0x18C]
	0x03AB2FC8 ADD X2, X23, 0x20
	0x03AB2FCC LDR X8, [X8 + 0xB8]
	0x03AB2FD0 LDR W1, [X8 + 0x14]
	0x03AB2FD4 ADD X8, X31, 0x3B8
	0x03AB2FD8 MOV X0, X19
	0x03AB2FDC MOV X4, X31
	0x03AB2FE0 BL 0x3A44CA4
	0x03AB2FE4 ADD X0, X31, 0x480
	0x03AB2FE8 ADD X1, X31, 0x3B8
	0x03AB2FEC MOVZ W2, 0xC4
	0x03AB2FF0 BL 0x3EB1AC0
	0x03AB2FF4 ADD X0, X23, 0x2F8
	0x03AB2FF8 ADD X1, X31, 0x480
	0x03AB2FFC MOVZ W2, 0xC4
	0x03AB3000 BL 0x3EB1AC0
	0x03AB3004 LDR X8, [X26]
	0x03AB3008 LDR W9, [X8 + 0xE0]
	0x03AB300C CBNZ W9, 0x3AB301C
	0x03AB3010 MOV X0, X8
	0x03AB3014 BL 0x1C16DFC
	0x03AB3018 LDR X8, [X26]
	0x03AB301C LDR X9, [X8 + 0xB8]
	0x03AB3020 LDR X23, [X9 + 0x8]
	0x03AB3024 CBNZ X23, 0x3AB307C
	0x03AB3028 LDR W9, [X8 + 0xE0]
	0x03AB302C CBNZ W9, 0x3AB303C
	0x03AB3030 MOV X0, X8
	0x03AB3034 BL 0x1C16DFC
	0x03AB3038 LDR X8, [X26]
	0x03AB303C ADRP X9, 0x6A5000
	0x03AB3040 LDR X8, [X8 + 0xB8]
	0x03AB3044 LDR X9, [X9 + 0x98]
	0x03AB3048 LDR X24, [X8]
	0x03AB304C LDR X0, [X9]
	0x03AB3050 BL 0x1C16F10
	0x03AB3054 ADRP X8, 0x6A5000
	0x03AB3058 LDR X8, [X8 + 0xB0]
	0x03AB305C MOV X23, X0
	0x03AB3060 LDR X2, [X8]
	0x03AB3064 MOV X1, X24
	0x03AB3068 MOV X3, X31
	0x03AB306C BL 0x25C78AC
	0x03AB3070 LDR X8, [X26]
	0x03AB3074 LDR X8, [X8 + 0xB8]
	0x03AB3078 STR X23, [X8 + 0x8]
	0x03AB307C LDR X2, [X25]
	0x03AB3080 ADD X0, X31, 0x390
	0x03AB3084 MOV X1, X23
	0x03AB3088 BL 0x224107C
	0x03AB308C ADD X0, X31, 0x390
	0x03AB3090 MOV X1, X31
	0x03AB3094 BL 0x39972C0
	0x03AB3098 ADRP X8, 0x6A5000
	0x03AB309C LDR X8, [X8 + 0xC8]
	0x03AB30A0 LDR X3, [X19 + 0xE0]
	0x03AB30A4 ADD X2, X31, 0x328
	0x03AB30A8 MOV X0, X22
	0x03AB30AC LDR X1, [X8]
	0x03AB30B0 ADRP X8, 0x6A5000
	0x03AB30B4 LDR X8, [X8 + 0xA8]
	0x03AB30B8 LDR X4, [X8]
	0x03AB30BC ADD X8, X31, 0x30
	0x03AB30C0 BL 0x2240F24
	0x03AB30C4 LDP V0, V1, [X31 + 0x30]
	0x03AB30C8 STP V0, V1, [X31 + 0x330]
	0x03AB30CC LDR X8, [X19 + 0xE8]
	0x03AB30D0 CBZ X8, 0x3AB32FC
	0x03AB30D4 LDR X9, [X21]
	0x03AB30D8 CBZ X9, 0x3AB3308
	0x03AB30DC LDR X10, [X31 + 0x328]
	0x03AB30E0 LDR X11, [X8 + 0x40]
	0x03AB30E4 STR X11, [X9 + 0x38]
	0x03AB30E8 CBZ X10, 0x3AB3310
	0x03AB30EC MOV X22, X31
	0x03AB30F0 MOVZ W23, 0x20
	0x03AB30F4 STR X11, [X10 + 0x10]
	0x03AB30F8 MOV X0, X8
	0x03AB30FC MOV X1, X31
	0x03AB3100 BL 0x3A9AE14
	0x03AB3104 LDR X24, [X31 + 0x328]
	0x03AB3108 CMP X22, W0, SXTW
	0x03AB310C B.GE 0x3AB3174
	0x03AB3110 CBZ X24, 0x3AB32A4
	0x03AB3114 LDR X8, [X21]
	0x03AB3118 CBZ X8, 0x3AB32A8
	0x03AB311C LDR X8, [X8 + 0x38]
	0x03AB3120 CBZ X8, 0x3AB3298
	0x03AB3124 LDR W9, [X8 + 0x18]
	0x03AB3128 CMP X22, X9
	0x03AB312C B.CS 0x3AB32A0
	0x03AB3130 LDR X24, [X24 + 0x10]
	0x03AB3134 ADD X1, X8, X23
	0x03AB3138 ADD X0, X31, 0x330
	0x03AB313C MOV W2, W22
	0x03AB3140 MOV X3, X31
	0x03AB3144 BL 0x3996828
	0x03AB3148 CBZ X24, 0x3AB329C
	0x03AB314C LDR W8, [X24 + 0x18]
	0x03AB3150 CMP X22, X8
	0x03AB3154 B.CS 0x3AB32AC
	0x03AB3158 ADD X8, X24, X22, 0x3, LSL
	0x03AB315C STR X0, [X8 + 0x20]
	0x03AB3160 LDR X8, [X19 + 0xE8]
	0x03AB3164 ADD X22, X22, 0x1
	0x03AB3168 ADD X23, X23, 0x8
	0x03AB316C CBNZ X8, 0x3AB30F8
	0x03AB3170 BL 0x1C16F20
	0x03AB3174 ADD X0, X31, 0x330
	0x03AB3178 ADD X1, X31, 0x3B0
	0x03AB317C MOVZ W2, 0x1
	0x03AB3180 MOV X3, X31
	0x03AB3184 BL 0x3996A00
	0x03AB3188 CBZ X24, 0x3AB3314
	0x03AB318C STR X0, [X24 + 0x18]
	0x03AB3190 LDR X21, [X31 + 0x328]
	0x03AB3194 ADD X0, X31, 0x30
	0x03AB3198 MOVZ W2, 0x2B8
	0x03AB319C MOV X1, X20
	0x03AB31A0 BL 0x3EB1AC0
	0x03AB31A4 CBZ X21, 0x3AB3318
	0x03AB31A8 ADD X0, X21, 0x20
	0x03AB31AC ADD X1, X31, 0x30
	0x03AB31B0 MOVZ W2, 0x2B8
	0x03AB31B4 BL 0x3EB1AC0
	0x03AB31B8 LDR X8, [X19 + 0xE8]
	0x03AB31BC STR X8, [X21 + 0x2D8]
	0x03AB31C0 ADD X0, X31, 0x330
	0x03AB31C4 MOV W1, W31
	0x03AB31C8 MOV X2, X31
	0x03AB31CC BL 0x398E404
	0x03AB31D0 LDR X8, [X26]
	0x03AB31D4 LDR W9, [X8 + 0xE0]
	0x03AB31D8 CBNZ W9, 0x3AB31E8
	0x03AB31DC MOV X0, X8
	0x03AB31E0 BL 0x1C16DFC
	0x03AB31E4 LDR X8, [X26]
	0x03AB31E8 LDR X9, [X8 + 0xB8]
	0x03AB31EC LDR X19, [X9 + 0x10]
	0x03AB31F0 CBNZ X19, 0x3AB3248
	0x03AB31F4 LDR W9, [X8 + 0xE0]
	0x03AB31F8 CBNZ W9, 0x3AB3208
	0x03AB31FC MOV X0, X8
	0x03AB3200 BL 0x1C16DFC
	0x03AB3204 LDR X8, [X26]
	0x03AB3208 ADRP X9, 0x6A5000
	0x03AB320C LDR X8, [X8 + 0xB8]
	0x03AB3210 LDR X9, [X9 + 0x98]
	0x03AB3214 LDR X20, [X8]
	0x03AB3218 LDR X0, [X9]
	0x03AB321C BL 0x1C16F10
	0x03AB3220 ADRP X8, 0x6A5000
	0x03AB3224 LDR X8, [X8 + 0xB8]
	0x03AB3228 MOV X19, X0

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Subtract X31, X31, 1712
	014 Move [X31+28], W6
	015 Move [X31+8], X5
	016 Move [X31+16], X4
	017 Move X20, 0x931000
	018 Move X29, 0x69F000
	019 Move X27, 0x6A7000
	020 Move X28, 0x6A2000
	021 Move W8, [X20+1122]
	022 Move X29, [X29+1432]
	023 Move X27, [X27+88]
	024 Move X28, [X28+4080]
	025 Move X25, X7
	026 Move X23, X3
	027 Move X24, X2
	028 Move W26, W1
	029 Move X19, X0
	030 Move TEMP, X8
	031 And TEMP, TEMP, 1
	032 Compare TEMP, 1
	033 JumpIfEqual {66}
	034 Move X0, 0x6A6000
	035 Move X0, [X0+328]
	036 Call 0x1C17CF4
	037 Move X0, 0x6A6000
	038 Move X0, [X0+400]
	039 Call 0x1C17CF4
	040 Move X0, 0x6A3000
	041 Move X0, [X0+120]
	042 Call 0x1C17CF4
	043 Move X0, 0x6A7000
	044 Move X0, [X0+96]
	045 Call 0x1C17CF4
	046 Move X0, 0x69F000
	047 Move X0, [X0+1432]
	048 Call 0x1C17CF4
	049 Move X0, 0x6A7000
	050 Move X0, [X0+104]
	051 Call 0x1C17CF4
	052 Move X0, 0x6A2000
	053 Move X0, [X0+4080]
	054 Call 0x1C17CF4
	055 Move X0, 0x6A6000
	056 Move X0, [X0+416]
	057 Call 0x1C17CF4
	058 Move X0, 0x6A7000
	059 Move X0, [X0+112]
	060 Call 0x1C17CF4
	061 Move X0, 0x6A7000
	062 Move X0, [X0+88]
	063 Call 0x1C17CF4
	064 Move W8, 1
	065 Move [X20+1122], W8
	066 Move X22, 0x6A7000
	067 Move X22, [X22+112]
	068 Move X0, [X29]
	069 Move X21, 0x6A7000
	070 Move X20, 0x6A3000
	071 Move X21, [X21+96]
	072 Move X20, [X20+120]
	073 Call 0x1C17F10
	074 Move X1, [X27]
	075 Move X2, X31
	076 Move X27, X0
	077 Call ProfilingSampler..ctor, X0, X1
	078 Move [X19+224], X27
	079 Move X0, [X28]
	080 Move W8, [X0+224]
	081 Compare W8, 0
	082 JumpIfNotEqual {84}
	083 Call 0x1C17DFC
	084 Move X0, X19
	085 Move X1, X31
	086 Call ScriptableRenderPass..ctor, X0
	087 Move X0, [X29]
	088 Call 0x1C17F10
	089 Move X1, [X22]
	090 Move X2, X31
	091 Move X27, X0
	092 Call ProfilingSampler..ctor, X0, X1
	093 Move [X19+56], X27
	094 Move [X19+16], W26
	095 Move X0, [X21]
	096 Call 0x1C17F10
	097 Move X1, X31
	098 Move X26, X0
	099 Call Object..ctor, X0
	100 Move [X19+376], X26
	101 Move [X19+232], X25
	102 Move X2, [X20]
	103 Add X0, X31, 1376
	104 Move X1, X24
	105 Move [X31+1384], W31
	106 Move [X31+1376], X31
	107 Call Nullable`1<RenderQueueRange>..ctor, X0, X1
	108 And X0, X23, 0
	109 Move X1, X31
	110 Call LayerMask.op_Implicit, X0
	111 Move X1, [X31+1376]
	112 Move W2, [X31+1384]
	113 Move W3, W0
	114 Add X0, X31, 1488
	115 Move TEMP, 0
	116 Not TEMP
	117 Move W4, TEMP
	118 Move W5, W31
	119 Move X6, X31
	120 Move [X31+1496], X31
	121 Move [X31+1488], X31
	122 Move [X31+1504], X31
	123 Call FilteringSettings..ctor, X0, X1, X2, X3, X4
	124 Move X8, [X31+1504]
	125 Move V0, [X31+93]
	126 NotImplemented "Instruction MOVI not yet implemented."
	127 Add X0, X31, 1600
	128 Move [X19+256], X8
	129 Add X8, X31, 1437
	130 Move W1, W31
	131 Move X2, X31
	132 Move [X19+15], V0
	133 Move [X8+255], V1
	134 Move [X31+105], V1
	135 Move [X31+104], V1
	136 Move [X31+103], V1
	137 Move [X31+102], V1
	138 Move [X31+101], V1
	139 Move [X31+100], V1
	140 Call RenderStateBlock..ctor, X0, X1
	141 Add X19, X19, 264
	142 Add X1, X31, 1600
	143 Move W2, 108
	144 Move X0, X19
	145 Call 0x3EB2AC0
	146 Move X8, [X31+8]
	147 Move X1, [X31+16]
	148 Move X0, X19
	149 Move X3, X31
	150 And X2, X8, 0
	151 Call RenderStateBlock.set_stencilState, X0, X1
	152 Move W1, [X31+28]
	153 Move X0, X19
	154 Move X2, X31
	155 Call RenderStateBlock.set_stencilReference, X0, X1
	156 Move W1, 8
	157 Move X0, X19
	158 Move X2, X31
	159 Call RenderStateBlock.set_mask, X0, X1
	160 Move X21, 0x6A6000
	161 Move X21, [X21+400]
	162 Move X0, [X21]
	163 Move W8, [X0+224]
	164 Compare W8, 0
	165 JumpIfNotEqual {168}
	166 Call 0x1C17DFC
	167 Move X0, [X21]
	168 Move X8, [X0+184]
	169 Move X8, [X8+32]
	170 Compare X8, 0
	171 JumpIfNotEqual {230}
	172 Move X8, 0x6A6000
	173 Move X8, [X8+416]
	174 Move W1, 5
	175 Move X0, [X8]
	176 Call 0x1C17D6C
	177 Move X8, [X21]
	178 Move X20, X0
	179 Move W9, [X8+224]
	180 Compare W9, 0
	181 JumpIfNotEqual {185}
	182 Move X0, X8
	183 Call 0x1C17DFC
	184 Move X8, [X21]
	185 Move X8, [X8+184]
	186 Move [X8+32], X20
	187 Compare X20, 0
	188 JumpIfEqual {411}
	189 Move W9, [X20+24]
	190 Compare W9, 0
	191 JumpIfEqual {410}
	192 Move W8, [X8+4]
	193 Move [X20+32], W8
	194 Move X8, [X21]
	195 Move X9, [X8+184]
	196 Move X8, [X9+32]
	197 Compare X8, 0
	198 JumpIfEqual {411}
	199 Move W10, [X8+24]
	200 NotImplemented "Instruction CMP not yet implemented."
	201 Move W9, [X9+8]
	202 Move [X8+36], W9
	203 Move X8, [X21]
	204 Move X9, [X8+184]
	205 Move X8, [X9+32]
	206 Compare X8, 0
	207 JumpIfEqual {411}
	208 Move W10, [X8+24]
	209 NotImplemented "Instruction CMP not yet implemented."
	210 Move W9, [X9+12]
	211 Move [X8+40], W9
	212 Move X8, [X21]
	213 Move X9, [X8+184]
	214 Move X8, [X9+32]
	215 Compare X8, 0
	216 JumpIfEqual {411}
	217 Move W10, [X8+24]
	218 NotImplemented "Instruction CMP not yet implemented."
	219 Move W9, [X9+16]
	220 Move [X8+44], W9
	221 Move X8, [X21]
	222 Move X8, [X8+184]
	223 Move X8, [X8+32]
	224 Compare X8, 0
	225 JumpIfEqual {411}
	226 Move W9, [X8+24]
	227 NotImplemented "Instruction CMP not yet implemented."
	228 Move [X8+48], W31
	229 Move X0, [X21]
	230 Move W8, [X0+224]
	231 Compare W8, 0
	232 JumpIfNotEqual {235}
	233 Call 0x1C17DFC
	234 Move X0, [X21]
	235 Move X8, [X0+184]
	236 Move X8, [X8+40]
	237 Compare X8, 0
	238 JumpIfNotEqual {396}
	239 Move X8, 0x6A7000
	240 Move X8, [X8+104]
	241 Move W1, 5
	242 Move X0, [X8]
	243 Call 0x1C17D6C
	244 Move X8, [X21]
	245 Move X20, X0
	246 Move W9, [X8+224]
	247 Compare W9, 0
	248 JumpIfNotEqual {252}
	249 Move X0, X8
	250 Call 0x1C17DFC
	251 Move X8, [X21]
	252 Move X8, [X8+184]
	253 Add X0, X31, 1600
	254 Move W2, 108
	255 Move X1, X19
	256 Move [X8+40], X20
	257 Call 0x3EB2AC0
	258 Move X8, 0x6A6000
	259 Move X8, [X8+328]
	260 Move X0, [X8]
	261 Move W8, [X0+224]
	262 Compare W8, 0
	263 JumpIfNotEqual {265}
	264 Call 0x1C17DFC
	265 Add X0, X31, 1264
	266 Add X1, X31, 1600
	267 Move W2, 108
	268 Call 0x3EB2AC0
	269 Add X8, X31, 1376
	270 Add X0, X31, 1264
	271 Move W1, 96
	272 Move W2, 32
	273 Move X3, X31
	274 Call DeferredLights.OverwriteStencil, X0, X1, X2
	275 Add X0, X31, 1488
	276 Add X1, X31, 1376
	277 Move W2, 108
	278 Call 0x3EB2AC0
	279 Compare X20, 0
	280 JumpIfEqual {411}
	281 Add X0, X31, 1152
	282 Add X1, X31, 1488
	283 Move W2, 108
	284 Call 0x3EB2AC0
	285 Move W8, [X20+24]
	286 Compare W8, 0
	287 JumpIfEqual {410}
	288 Add X0, X20, 32
	289 Add X1, X31, 1152
	290 Move W2, 108
	291 Call 0x3EB2AC0
	292 Move X8, [X21]
	293 Add X0, X31, 928
	294 Move W2, 108
	295 Move X1, X19
	296 Move X8, [X8+184]
	297 Move X20, [X8+40]
	298 Call 0x3EB2AC0
	299 Add X8, X31, 1040
	300 Add X0, X31, 928
	301 Move W1, 96
	302 Move W2, 64
	303 Move X3, X31
	304 Call DeferredLights.OverwriteStencil, X0, X1, X2
	305 Add X0, X31, 1376
	306 Add X1, X31, 1040
	307 Move W2, 108
	308 Call 0x3EB2AC0
	309 Compare X20, 0
	310 JumpIfEqual {411}
	311 Add X0, X31, 816
	312 Add X1, X31, 1376
	313 Move W2, 108
	314 Call 0x3EB2AC0
	315 Move W8, [X20+24]
	316 NotImplemented "Instruction CMP not yet implemented."
	317 Add X0, X20, 140
	318 Add X1, X31, 816
	319 Move W2, 108
	320 Call 0x3EB2AC0
	321 Move X8, [X21]
	322 Add X0, X31, 592
	323 Move W2, 108
	324 Move X1, X19
	325 Move X8, [X8+184]
	326 Move X20, [X8+40]
	327 Call 0x3EB2AC0
	328 Add X8, X31, 704
	329 Add X0, X31, 592
	330 Move W1, 96
	331 Move W2, W31
	332 Move X3, X31
	333 Call DeferredLights.OverwriteStencil, X0, X1, X2
	334 Add X0, X31, 1040
	335 Add X1, X31, 704
	336 Move W2, 108
	337 Call 0x3EB2AC0
	338 Compare X20, 0
	339 JumpIfEqual {411}
	340 Add X0, X31, 480
	341 Add X1, X31, 1040
	342 Move W2, 108
	343 Call 0x3EB2AC0
	344 Move W8, [X20+24]
	345 NotImplemented "Instruction CMP not yet implemented."
	346 Add X0, X20, 248
	347 Add X1, X31, 480
	348 Move W2, 108
	349 Call 0x3EB2AC0
	350 Move X8, [X21]
	351 Add X0, X31, 256
	352 Move W2, 108
	353 Move X1, X19
	354 Move X8, [X8+184]
	355 Move X20, [X8+40]
	356 Call 0x3EB2AC0
	357 Add X8, X31, 368
	358 Add X0, X31, 256
	359 Move W1, 96
	360 Move W2, W31
	361 Move X3, X31
	362 Call DeferredLights.OverwriteStencil, X0, X1, X2
	363 Add X0, X31, 704
	364 Add X1, X31, 368
	365 Move W2, 108
	366 Call 0x3EB2AC0
	367 Compare X20, 0
	368 JumpIfEqual {411}
	369 Add X0, X31, 144
	370 Add X1, X31, 704
	371 Move W2, 108
	372 Call 0x3EB2AC0
	373 Move W8, [X20+24]
	374 NotImplemented "Instruction CMP not yet implemented."
	375 Add X0, X20, 356
	376 Add X1, X31, 144
	377 Move W2, 108
	378 Call 0x3EB2AC0
	379 Move X8, [X21]
	380 Move X8, [X8+184]
	381 Move X19, [X8+40]
	382 Compare X19, 0
	383 JumpIfEqual {411}
	384 Move W20, [X19+24]
	385 Compare W20, 0
	386 JumpIfEqual {410}
	387 Add X1, X19, 32
	388 Add X0, X31, 32
	389 Move W2, 108
	390 Call 0x3EB2AC0
	391 NotImplemented "Instruction CMP not yet implemented."
	392 Add X0, X19, 464
	393 Add X1, X31, 32
	394 Move W2, 108
	395 Call 0x3EB2AC0
	396 Add X31, X31, 1712
	397 Move X20, [X31+80]
	398 Move X19, [X31+88]
	399 Move X22, [X31+64]
	400 Move X21, [X31+72]
	401 Move X24, [X31+48]
	402 Move X23, [X31+56]
	403 Move X26, [X31+32]
	404 Move X25, [X31+40]
	405 Move X28, [X31+16]
	406 Move X27, [X31+24]
	407 Move X29, [X31+96]
	408 Move X30, [X31+104]
	409 Return 
	410 Call 0x1C17F28
	411 Call 0x1C17F20

Method: System.Void Dispose()

Disassembly:
	0x03AB3234 MOV X3, X31
	0x03AB3238 BL 0x25C78AC
	0x03AB323C LDR X8, [X26]
	0x03AB3240 LDR X8, [X8 + 0xB8]
	0x03AB3244 STR X19, [X8 + 0x10]
	0x03AB3248 LDR X2, [X25]
	0x03AB324C ADD X0, X31, 0x330

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+232]
	003 Compare X0, 0
	004 JumpIfEqual {9}
	005 Move X1, X31
	006 Move X30, [X31+16]
	007 Call DeferredLights.ReleaseGbufferResources, X0
	008 Return 
	009 Call 0x1C17F20

Method: System.Void Configure(UnityEngine.Rendering.CommandBuffer cmd, UnityEngine.RenderTextureDescriptor cameraTextureDescriptor)

Disassembly:
	0x03AB3250 MOV X1, X19
	0x03AB3254 BL 0x224107C
	0x03AB3258 ADD X0, X31, 0x330
	0x03AB325C MOV X1, X31
	0x03AB3260 BL 0x39972C0
	0x03AB3264 LDR X8, [X31 + 0x8]
	0x03AB3268 LDR X8, [X8 + 0x28]
	0x03AB326C LDR X9, [X31 + 0x548]
	0x03AB3270 CMP X8, X9
	0x03AB3274 B.NE 0x3AB332C
	0x03AB3278 ADD X31, X31, 0x550
	0x03AB327C LDP X20, X19, [X31 + 0x50]
	0x03AB3280 LDP X22, X21, [X31 + 0x40]
	0x03AB3284 LDP X24, X23, [X31 + 0x30]
	0x03AB3288 LDP X26, X25, [X31 + 0x20]
	0x03AB328C LDP X28, X27, [X31 + 0x10]
	0x03AB3290 LDP X29, X30, [X31], #0x60
	0x03AB3294 RET
	0x03AB3298 BL 0x1C16F20
	0x03AB329C BL 0x1C16F20
	0x03AB32A0 BL 0x1C16F28
	0x03AB32A4 BL 0x1C16F20
	0x03AB32A8 BL 0x1C16F20
	0x03AB32AC BL 0x1C16F28
	0x03AB32B0 BL 0x1C16F20
	0x03AB32B4 BL 0x1C16F20
	0x03AB32B8 BL 0x1C16F28
	0x03AB32BC BL 0x1C16F20
	0x03AB32C0 BL 0x1C16F20
	0x03AB32C4 BL 0x1C16F20
	0x03AB32C8 BL 0x1C16F28
	0x03AB32CC BL 0x1C16F20
	0x03AB32D0 BL 0x1C16F28
	0x03AB32D4 BL 0x1C16F20
	0x03AB32D8 BL 0x1C16F20
	0x03AB32DC BL 0x1C16F20
	0x03AB32E0 BL 0x1C16F28
	0x03AB32E4 BL 0x1C16F28
	0x03AB32E8 BL 0x1C16F20
	0x03AB32EC BL 0x1C16F20
	0x03AB32F0 BL 0x1C16F20
	0x03AB32F4 MOV X26, X25
	0x03AB32F8 BL 0x1C16F20
	0x03AB32FC BL 0x1C16F20
	0x03AB3300 MOV X26, X25
	0x03AB3304 BL 0x1C16F20
	0x03AB3308 BL 0x1C16F20
	0x03AB330C BL 0x1C16F20
	0x03AB3310 BL 0x1C16F20
	0x03AB3314 BL 0x1C16F20
	0x03AB3318 BL 0x1C16F20
	0x03AB331C BL 0x1C16F20
	0x03AB3320 BL 0x1C16F20
	0x03AB3324 BL 0x1C16F20
	0x03AB3328 BL 0x1C16F20
	0x03AB332C BL 0x3EB1B20
	0x03AB3330 B 0x3AB340C
	0x03AB3334 B 0x3AB33FC
	0x03AB3338 B 0x3AB340C
	0x03AB333C B 0x3AB3464
	0x03AB3340 B 0x3AB340C
	0x03AB3344 B 0x3AB340C
	0x03AB3348 B 0x3AB33FC
	0x03AB334C B 0x3AB3464
	0x03AB3350 B 0x3AB3464
	0x03AB3354 B 0x3AB3464
	0x03AB3358 B 0x3AB3464
	0x03AB335C B 0x3AB33FC
	0x03AB3360 B 0x3AB3464
	0x03AB3364 B 0x3AB336C
	0x03AB3368 B 0x3AB3464
	0x03AB336C MOV X23, X0
	0x03AB3370 MOV X25, X24
	0x03AB3374 B 0x3AB3410
	0x03AB3378 B 0x3AB340C
	0x03AB337C B 0x3AB3464
	0x03AB3380 B 0x3AB340C
	0x03AB3384 B 0x3AB3464
	0x03AB3388 B 0x3AB340C
	0x03AB338C B 0x3AB33FC
	0x03AB3390 B 0x3AB33FC
	0x03AB3394 B 0x3AB33FC
	0x03AB3398 B 0x3AB33FC
	0x03AB339C B 0x3AB33FC
	0x03AB33A0 B 0x3AB33FC
	0x03AB33A4 B 0x3AB33FC
	0x03AB33A8 B 0x3AB33FC
	0x03AB33AC B 0x3AB33FC
	0x03AB33B0 B 0x3AB33FC
	0x03AB33B4 B 0x3AB33FC
	0x03AB33B8 B 0x3AB33FC
	0x03AB33BC B 0x3AB33FC
	0x03AB33C0 B 0x3AB33FC
	0x03AB33C4 B 0x3AB33FC
	0x03AB33C8 B 0x3AB33FC
	0x03AB33CC B 0x3AB33FC
	0x03AB33D0 B 0x3AB33FC
	0x03AB33D4 B 0x3AB33FC
	0x03AB33D8 B 0x3AB33FC
	0x03AB33DC B 0x3AB3464
	0x03AB33E0 B 0x3AB3464
	0x03AB33E4 B 0x3AB3464
	0x03AB33E8 B 0x3AB3464
	0x03AB33EC B 0x3AB3464
	0x03AB33F0 B 0x3AB3464
	0x03AB33F4 B 0x3AB33FC
	0x03AB33F8 B 0x3AB3464
	0x03AB33FC ADRP X25, 0x6A5000
	0x03AB3400 ADRP X26, 0x6A5000
	0x03AB3404 LDR X25, [X25 + 0xA0]
	0x03AB3408 LDR X26, [X26 + 0xC0]
	0x03AB340C MOV X23, X0
	0x03AB3410 CMP W1, 0x1
	0x03AB3414 B.NE 0x3AB3440
	0x03AB3418 MOV X0, X23
	0x03AB341C BL 0x3EB1AD0
	0x03AB3420 LDR X24, [X0]
	0x03AB3424 BL 0x3EB1AE0
	0x03AB3428 ADD X0, X31, 0x390
	0x03AB342C MOV X1, X31
	0x03AB3430 BL 0x39972C0
	0x03AB3434 CBZ X24, 0x3AB3098
	0x03AB3438 MOV X0, X24
	0x03AB343C BL 0x1C16F18
	0x03AB3440 MOV X24, X31
	0x03AB3444 B 0x3AB344C
	0x03AB3448 MOV X23, X0
	0x03AB344C ADD X0, X31, 0x390
	0x03AB3450 MOV X1, X31
	0x03AB3454 BL 0x39972C0
	0x03AB3458 CBZ X24, 0x3AB34B4
	0x03AB345C MOV X0, X24
	0x03AB3460 BL 0x1C16F18
	0x03AB3464 MOV X23, X0
	0x03AB3468 CMP W1, 0x1
	0x03AB346C B.NE 0x3AB3498
	0x03AB3470 MOV X0, X23
	0x03AB3474 BL 0x3EB1AD0
	0x03AB3478 LDR X19, [X0]
	0x03AB347C BL 0x3EB1AE0
	0x03AB3480 ADD X0, X31, 0x330
	0x03AB3484 MOV X1, X31
	0x03AB3488 BL 0x39972C0
	0x03AB348C CBZ X19, 0x3AB3264
	0x03AB3490 MOV X0, X19
	0x03AB3494 BL 0x1C16F18
	0x03AB3498 MOV X19, X31
	0x03AB349C B 0x3AB34A4
	0x03AB34A0 MOV X23, X0
	0x03AB34A4 ADD X0, X31, 0x330
	0x03AB34A8 MOV X1, X31
	0x03AB34AC BL 0x39972C0
	0x03AB34B0 CBNZ X19, 0x3AB34BC
	0x03AB34B4 MOV X0, X23
	0x03AB34B8 BL 0x1D2C690
	0x03AB34BC MOV X0, X19
	0x03AB34C0 BL 0x1C16F18
	0x03AB34C4 BL 0x1990590
	0x03AB34C8 SUB X31, X31, 0x80
	0x03AB34CC STP X30, X27, [X31 + 0x30]
	0x03AB34D0 STP X26, X25, [X31 + 0x40]
	0x03AB34D4 STP X24, X23, [X31 + 0x50]
	0x03AB34D8 STP X22, X21, [X31 + 0x60]
	0x03AB34DC STP X20, X19, [X31 + 0x70]
	0x03AB34E0 ADRP X26, 0x92F000
	0x03AB34E4 ADRP X27, 0x6A4000
	0x03AB34E8 ADRP X19, 0x6A4000
	0x03AB34EC ADRP X25, 0x6A5000
	0x03AB34F0 ADRP X24, 0x6A5000
	0x03AB34F4 ADRP X23, 0x6A5000
	0x03AB34F8 ADRP X22, 0x6A5000
	0x03AB34FC ADRP X21, 0x6A5000
	0x03AB3500 ADRP X20, 0x6A5000
	0x03AB3504 LDR X27, [X27 + 0x208]
	0x03AB3508 LDR X19, [X19 + 0x190]
	0x03AB350C LDR X25, [X25 + 0xD8]
	0x03AB3510 LDRB W8, [X26 + 0x467]
	0x03AB3514 LDR X24, [X24 + 0xE0]
	0x03AB3518 LDR X23, [X23 + 0xE8]
	0x03AB351C LDR X22, [X22 + 0xF0]
	0x03AB3520 LDR X21, [X21 + 0xF8]
	0x03AB3524 LDR X20, [X20 + 0x100]
	0x03AB3528 TBNZ X8, 0x0, 0x3AB3594
	0x03AB352C ADRP X0, 0x6A4000
	0x03AB3530 LDR X0, [X0 + 0x190]
	0x03AB3534 BL 0x1C16CF4
	0x03AB3538 ADRP X0, 0x6A5000
	0x03AB353C LDR X0, [X0 + 0xE0]
	0x03AB3540 BL 0x1C16CF4

ISIL:
	001 Subtract X31, X31, 256
	002 Move [X31+176], X30
	003 Move [X31+192], X26
	004 Move [X31+200], X25
	005 Move [X31+208], X24
	006 Move [X31+216], X23
	007 Move [X31+224], X22
	008 Move [X31+232], X21
	009 Move [X31+240], X20
	010 Move [X31+248], X19
	011 Move X22, 0x930000
	012 Move W8, [X22+1123]
	013 Move X20, X2
	014 Move X21, X1
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {25}
	020 Move X0, 0x641000
	021 Move X0, [X0+1432]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X22+1123], W8
	025 Move X0, [X19+232]
	026 Compare X0, 0
	027 JumpIfEqual {227}
	028 Compare X21, 0
	029 JumpIfEqual {194}
	030 Move W8, [X0+21]
	031 Move X24, [X0+48]
	032 Compare W8, 0
	033 JumpIfEqual {79}
	034 Move X8, [X0+96]
	035 Compare X8, 0
	036 JumpIfEqual {79}
	037 Move X9, 0x641000
	038 Move X9, [X9+1432]
	039 Move X22, [X8+24]
	040 Move X0, [X9]
	041 Move W9, [X0+224]
	042 Compare W9, 0
	043 JumpIfNotEqual {45}
	044 Call 0x1C17DFC
	045 Move X0, X22
	046 Move X1, X31
	047 Move X2, X31
	048 Call Object.op_Inequality, X0, X1
	049 Move TEMP, X0
	050 And TEMP, TEMP, 1
	051 Compare TEMP, 1
	052 JumpIfNotEqual {79}
	053 Move X0, [X19+232]
	054 Compare X0, 0
	055 JumpIfEqual {227}
	056 Move X26, [X0+48]
	057 Move X1, X31
	058 Call DeferredLights.get_GbufferDepthIndex, X0
	059 Move X8, [X19+232]
	060 Compare X8, 0
	061 JumpIfEqual {227}
	062 Compare X26, 0
	063 JumpIfEqual {227}
	064 Move X23, [X8+96]
	065 Move W22, W0
	066 Compare X23, 0
	067 JumpIfEqual {74}
	068 Move X8, [X26]
	069 Move X0, X23
	070 Move X1, [X8+64]
	071 Call 0x1C17E00
	072 Compare X0, 0
	073 JumpIfEqual {229}
	074 Move W8, [X26+24]
	075 NotImplemented "Instruction CMP not yet implemented."
	076 Move W25, W31
	077 Add X8, X26, W22
	078 Move [X8+32], X23
	079 Move W25, 1
	080 Compare X24, 0
	081 JumpIfEqual {227}
	082 Move X0, [X19+232]
	083 Move W9, [X24+24]
	084 NotImplemented "Instruction CMP not yet implemented."
	085 NotImplemented "Instruction CSET not yet implemented."
	086 NotImplemented "Instruction CMP not yet implemented."
	087 Move X22, X31
	088 Move TEMP, X8
	089 And TEMP, TEMP, 1
	090 Compare TEMP, 1
	091 JumpIfEqual {227}
	092 Move X1, X31
	093 Call DeferredLights.get_GBufferLightingIndex, X0
	094 NotImplemented "Instruction CMP not yet implemented."
	095 Move X0, [X19+232]
	096 Compare X0, 0
	097 JumpIfEqual {227}
	098 Move X1, X31
	099 Call DeferredLights.get_GBufferNormalSmoothnessIndex, X0
	100 Move X8, [X19+232]
	101 NotImplemented "Instruction CMP not yet implemented."
	102 Compare X8, 0
	103 JumpIfEqual {227}
	104 Move W9, [X8+23]
	105 Compare W9, 0
	106 JumpIfNotEqual {186}
	107 Compare X8, 0
	108 JumpIfEqual {227}
	109 Move X0, X8
	110 Move X1, X31
	111 Call DeferredLights.get_GbufferDepthIndex, X0
	112 NotImplemented "Instruction CMP not yet implemented."
	113 NotImplemented "Instruction CSET not yet implemented."
	114 NotImplemented "Instruction BIC not yet implemented."
	115 Move TEMP, X8
	116 And TEMP, TEMP, 1
	117 Compare TEMP, 1
	118 JumpIfEqual {186}
	119 Move X0, [X19+232]
	120 Compare X0, 0
	121 JumpIfEqual {227}
	122 Move W8, [X0+21]
	123 Compare W8, 0
	124 JumpIfEqual {140}
	125 Move X1, X31
	126 Call DeferredLights.get_GBufferRenderingLayers, X0
	127 NotImplemented "Instruction CMP not yet implemented."
	128 Move X0, [X19+232]
	129 Compare X0, 0
	130 JumpIfEqual {227}
	131 Move X1, X31
	132 Call DeferredLights.get_GbufferDepthIndex, X0
	133 NotImplemented "Instruction CMP not yet implemented."
	134 Move X8, [X19+232]
	135 Compare X8, 0
	136 JumpIfEqual {227}
	137 Move W8, [X8+22]
	138 Compare W8, 0
	139 JumpIfEqual {186}
	140 Move V2, [X20+16]
	141 Move V0, [X20+32]
	142 Move W8, [X20+48]
	143 Move V1, [X20]
	144 Move X0, [X19+232]
	145 Move [X31+128], V2
	146 Move [X31+136], V0
	147 Move [X31+160], W8
	148 Move [X31+7], V1
	149 Compare X0, 0
	150 JumpIfEqual {227}
	151 Move V0, [X31+112]
	152 Move V1, [X31+128]
	153 Move V2, [X31+9]
	154 Move W8, [X31+160]
	155 Add X1, X31, 48
	156 Move W2, W22
	157 Move X3, X31
	158 Move [X31+48], V0
	159 Move [X31+56], V1
	160 Move [X31+5], V2
	161 Move [X31+96], W8
	162 Call DeferredLights.ReAllocateGBufferIfNeeded, X0, X1, X2
	163 Move X8, [X19+232]
	164 Compare X8, 0
	165 JumpIfEqual {227}
	166 Move X8, [X8+48]
	167 Compare X8, 0
	168 JumpIfEqual {227}
	169 Move W9, [X8+24]
	170 NotImplemented "Instruction CMP not yet implemented."
	171 Add X8, X8, X22
	172 Move X8, [X8+32]
	173 Compare X8, 0
	174 JumpIfEqual {227}
	175 Move X9, [X8+72]
	176 NotImplemented "Instruction LDUR not yet implemented."
	177 NotImplemented "Instruction LDUR not yet implemented."
	178 Move X1, [X8+88]
	179 Add X2, X31, 0
	180 Move X0, X21
	181 Move X3, X31
	182 Move [X31+32], X9
	183 Move [X31], V1
	184 Move [X31+8], V0
	185 Call CommandBuffer.SetGlobalTexture, X0, X1, X2
	186 Move X0, [X19+232]
	187 NotImplemented "Instruction LDRSW not yet implemented."
	188 Add X22, X22, 1
	189 NotImplemented "Instruction CMP not yet implemented."
	190 NotImplemented "Instruction CSET not yet implemented."
	191 NotImplemented "Instruction CMP not yet implemented."
	192 Compare W8, 0
	193 JumpIfNotEqual {227}
	194 Move W8, [X0+21]
	195 Compare W8, 0
	196 JumpIfEqual {202}
	197 Move X1, X31
	198 Call DeferredLights.UpdateDeferredInputAttachments, X0
	199 Move X0, [X19+232]
	200 Compare X0, 0
	201 JumpIfEqual {227}
	202 Move X1, [X0+48]
	203 Move X2, [X0+88]
	204 Move X3, [X0+104]
	205 Move X0, X19
	206 Move X4, X31
	207 Call ScriptableRenderPass.ConfigureTarget, X0, X1, X2, X3
	208 Move S0, W31
	209 Move S1, W31
	210 Move S2, W31
	211 Move S3, 1
	212 Move X0, X19
	213 Move W1, W31
	214 Move X2, X31
	215 Call ScriptableRenderPass.ConfigureClear, X0, X1, X2
	216 Move X20, [X31+240]
	217 Move X19, [X31+248]
	218 Move X22, [X31+224]
	219 Move X21, [X31+232]
	220 Move X24, [X31+208]
	221 Move X23, [X31+216]
	222 Move X26, [X31+192]
	223 Move X25, [X31+200]
	224 Move X30, [X31+176]
	225 Add X31, X31, 256
	226 Return 
	227 Call 0x1C17F20
	228 Call 0x1C17F28
	229 Call 0x1C17F44
	230 Move X1, X31
	231 Call 0x1C17DEC

Method: System.Void Execute(UnityEngine.Rendering.ScriptableRenderContext context, ref UnityEngine.Rendering.Universal.RenderingData renderingData)

Disassembly:
	0x03AB3544 ADRP X0, 0x6A5000
	0x03AB3548 LDR X0, [X0 + 0xF8]
	0x03AB354C BL 0x1C16CF4
	0x03AB3550 ADRP X0, 0x6A4000
	0x03AB3554 LDR X0, [X0 + 0x208]
	0x03AB3558 BL 0x1C16CF4
	0x03AB355C ADRP X0, 0x6A5000
	0x03AB3560 LDR X0, [X0 + 0xD8]
	0x03AB3564 BL 0x1C16CF4
	0x03AB3568 ADRP X0, 0x6A5000
	0x03AB356C LDR X0, [X0 + 0x100]
	0x03AB3570 BL 0x1C16CF4
	0x03AB3574 ADRP X0, 0x6A5000
	0x03AB3578 LDR X0, [X0 + 0xF0]
	0x03AB357C BL 0x1C16CF4
	0x03AB3580 ADRP X0, 0x6A5000
	0x03AB3584 LDR X0, [X0 + 0xE8]
	0x03AB3588 BL 0x1C16CF4
	0x03AB358C MOVZ W8, 0x1
	0x03AB3590 STRB W8, [X26 + 0x467]
	0x03AB3594 LDR X0, [X27]
	0x03AB3598 MOV X1, X31
	0x03AB359C BL 0x3C124EC
	0x03AB35A0 LDR X8, [X19]
	0x03AB35A4 MOV X2, X31
	0x03AB35A8 LDR X8, [X8 + 0xB8]
	0x03AB35AC STR W0, [X8]
	0x03AB35B0 LDR X1, [X25]
	0x03AB35B4 ADD X0, X31, 0x28
	0x03AB35B8 STR W31, [X31 + 0x28]
	0x03AB35BC BL 0x3C5A49C
	0x03AB35C0 LDR X8, [X19]
	0x03AB35C4 LDR W9, [X31 + 0x28]
	0x03AB35C8 ADD X0, X31, 0x20
	0x03AB35CC MOV X2, X31
	0x03AB35D0 LDR X8, [X8 + 0xB8]
	0x03AB35D4 STR W9, [X8 + 0x4]
	0x03AB35D8 LDR X1, [X24]
	0x03AB35DC STR W31, [X31 + 0x20]
	0x03AB35E0 BL 0x3C5A49C
	0x03AB35E4 LDR X8, [X19]
	0x03AB35E8 LDR W9, [X31 + 0x20]
	0x03AB35EC ADD X0, X31, 0x18
	0x03AB35F0 MOV X2, X31
	0x03AB35F4 LDR X8, [X8 + 0xB8]
	0x03AB35F8 STR W9, [X8 + 0x8]
	0x03AB35FC LDR X1, [X23]
	0x03AB3600 STR W31, [X31 + 0x18]
	0x03AB3604 BL 0x3C5A49C
	0x03AB3608 LDR X8, [X19]
	0x03AB360C LDR W9, [X31 + 0x18]
	0x03AB3610 ADD X0, X31, 0x10
	0x03AB3614 MOV X2, X31
	0x03AB3618 LDR X8, [X8 + 0xB8]
	0x03AB361C STR W9, [X8 + 0xC]
	0x03AB3620 LDR X1, [X22]
	0x03AB3624 STR W31, [X31 + 0x10]
	0x03AB3628 BL 0x3C5A49C
	0x03AB362C LDR X8, [X19]
	0x03AB3630 LDR W9, [X31 + 0x10]
	0x03AB3634 ADD X0, X31, 0x8
	0x03AB3638 MOV X2, X31
	0x03AB363C LDR X8, [X8 + 0xB8]
	0x03AB3640 STR W9, [X8 + 0x10]
	0x03AB3644 LDR X1, [X21]
	0x03AB3648 STR W31, [X31 + 0x8]
	0x03AB364C BL 0x3C5A49C
	0x03AB3650 LDR X8, [X19]
	0x03AB3654 LDR W9, [X31 + 0x8]
	0x03AB3658 ADD X0, X31, 0x0
	0x03AB365C MOV X2, X31
	0x03AB3660 LDR X8, [X8 + 0xB8]
	0x03AB3664 STR W9, [X8 + 0x14]
	0x03AB3668 LDR X1, [X20]
	0x03AB366C STR W31, [X31]
	0x03AB3670 BL 0x3C5A49C
	0x03AB3674 LDR X8, [X19]
	0x03AB3678 LDR W9, [X31]
	0x03AB367C LDP X20, X19, [X31 + 0x70]
	0x03AB3680 LDP X22, X21, [X31 + 0x60]
	0x03AB3684 LDR X8, [X8 + 0xB8]
	0x03AB3688 LDP X24, X23, [X31 + 0x50]
	0x03AB368C LDP X26, X25, [X31 + 0x40]
	0x03AB3690 LDP X30, X27, [X31 + 0x30]
	0x03AB3694 STR W9, [X8 + 0x18]
	0x03AB3698 ADD X31, X31, 0x80
	0x03AB369C RET
	0x03AB36A0 STR X30, [X31 - 0x20]!
	0x03AB36A4 STP X20, X19, [X31 + 0x10]
	0x03AB36A8 ADRP X19, 0x92F000
	0x03AB36AC ADRP X20, 0x6A5000
	0x03AB36B0 LDRB W8, [X19 + 0x468]
	0x03AB36B4 LDR X20, [X20 + 0xC0]
	0x03AB36B8 TBNZ X8, 0x0, 0x3AB36D0
	0x03AB36BC ADRP X0, 0x6A5000
	0x03AB36C0 LDR X0, [X0 + 0xC0]
	0x03AB36C4 BL 0x1C16CF4
	0x03AB36C8 MOVZ W8, 0x1
	0x03AB36CC STRB W8, [X19 + 0x468]
	0x03AB36D0 LDR X0, [X20]
	0x03AB36D4 BL 0x1C16F10
	0x03AB36D8 MOV X1, X31
	0x03AB36DC MOV X19, X0
	0x03AB36E0 BL 0x33BDD8C
	0x03AB36E4 LDR X8, [X20]
	0x03AB36E8 LDR X8, [X8 + 0xB8]
	0x03AB36EC STR X19, [X8]
	0x03AB36F0 LDP X20, X19, [X31 + 0x10]
	0x03AB36F4 LDR X30, [X31], #0x20
	0x03AB36F8 RET
	0x03AB36FC MOV X1, X31
	0x03AB3700 B 0x33BDD8C
	0x03AB3704 STP X30, X21, [X31 - 0x20]!
	0x03AB3708 STP X20, X19, [X31 + 0x10]
	0x03AB370C ADRP X21, 0x92F000
	0x03AB3710 LDRB W8, [X21 + 0x469]
	0x03AB3714 MOV X20, X2
	0x03AB3718 MOV X19, X1
	0x03AB371C TBNZ X8, 0x0, 0x3AB3734
	0x03AB3720 ADRP X0, 0x6A4000
	0x03AB3724 LDR X0, [X0 + 0x190]
	0x03AB3728 BL 0x1C16CF4
	0x03AB372C MOVZ W8, 0x1
	0x03AB3730 STRB W8, [X21 + 0x469]
	0x03AB3734 CBZ X20, 0x3AB3774
	0x03AB3738 CBZ X19, 0x3AB3774
	0x03AB373C ADRP X8, 0x6A4000
	0x03AB3740 LDR X8, [X8 + 0x190]
	0x03AB3744 LDR X20, [X20 + 0x10]
	0x03AB3748 LDR X0, [X8]
	0x03AB374C LDR W8, [X0 + 0xE0]
	0x03AB3750 CBNZ W8, 0x3AB3758
	0x03AB3754 BL 0x1C16DFC
	0x03AB3758 ADD X2, X19, 0x20
	0x03AB375C MOV X0, X20
	0x03AB3760 MOV X1, X19
	0x03AB3764 LDP X20, X19, [X31 + 0x10]
	0x03AB3768 MOV W3, W31
	0x03AB376C LDP X30, X21, [X31], #0x20
	0x03AB3770 B 0x3AB27E4
	0x03AB3774 BL 0x1C16F20
	0x03AB3778 SUB X31, X31, 0xC0
	0x03AB377C STP X30, X25, [X31 + 0x80]
	0x03AB3780 STP X24, X23, [X31 + 0x90]
	0x03AB3784 STP X22, X21, [X31 + 0xA0]
	0x03AB3788 STP X20, X19, [X31 + 0xB0]
	0x03AB378C ADRP X20, 0x92F000
	0x03AB3790 LDRB W8, [X20 + 0x46A]
	0x03AB3794 MOV X19, X1
	0x03AB3798 TBNZ X8, 0x0, 0x3AB37BC
	0x03AB379C ADRP X0, 0x6A4000
	0x03AB37A0 LDR X0, [X0 + 0x148]
	0x03AB37A4 BL 0x1C16CF4
	0x03AB37A8 ADRP X0, 0x69D000
	0x03AB37AC LDR X0, [X0 + 0xA88]
	0x03AB37B0 BL 0x1C16CF4
	0x03AB37B4 MOVZ W8, 0x1
	0x03AB37B8 STRB W8, [X20 + 0x46A]
	0x03AB37BC CBZ X19, 0x3AB38B8
	0x03AB37C0 LDR X8, [X19 + 0x10]
	0x03AB37C4 CBZ X8, 0x3AB38B8
	0x03AB37C8 ADRP X23, 0x6A4000
	0x03AB37CC ADRP X24, 0x69D000
	0x03AB37D0 LDR X23, [X23 + 0x148]
	0x03AB37D4 LDR X24, [X24 + 0xA88]
	0x03AB37D8 MOVZ W25, 0x4
	0x03AB37DC LDRSW X8, [X8 + 0x18]
	0x03AB37E0 SUB X21, X25, 0x4

ISIL:
	001 Move [X31-64], X29
	002 Move [X31-56], X30
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Subtract X31, X31, 464
	010 NotImplemented "Instruction MRS not yet implemented."
	011 Move X8, [X22+40]
	012 Move X23, 0x930000
	013 Move X20, X2
	014 Move X21, X1
	015 Move [X31+456], X8
	016 Move W8, [X23+1124]
	017 Move X19, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {27}
	022 Move X0, 0x6A5000
	023 Move X0, [X0+400]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X23+1124], W8
	027 Move [X31+48], W31
	028 Move X8, [X19+376]
	029 Move X9, [X19+256]
	030 Move V0, [X19+15]
	031 Move X1, [X20]
	032 Move [X31+272], X9
	033 Move [X31+16], V0
	034 Compare X8, 0
	035 JumpIfEqual {147}
	036 Move X9, [X31+272]
	037 Move V0, [X31+16]
	038 Add X0, X31, 48
	039 Move X3, X31
	040 Move [X8+752], X9
	041 Move [X8+46], V0
	042 Move X2, [X19+224]
	043 Call ProfilingScope..ctor, X0, X1, X2
	044 Move X24, [X19+376]
	045 Compare X24, 0
	046 JumpIfEqual {148}
	047 Move X8, [X19+232]
	048 Move X23, 0x6A5000
	049 Move X23, [X23+400]
	050 Move [X24+728], X8
	051 Move X0, [X23]
	052 Move W8, [X0+224]
	053 Compare W8, 0
	054 JumpIfNotEqual {58}
	055 Call 0x1C17DFC
	056 Move X0, [X23]
	057 Move X24, [X19+376]
	058 Move X8, [X0+184]
	059 Move W3, [X20+396]
	060 Move W1, [X8+20]
	061 Add X8, X31, 56
	062 Move X0, X19
	063 Move X2, X20
	064 Move X4, X31
	065 Call ScriptableRenderPass.CreateDrawingSettings, X0, X1, X2, X3
	066 Add X0, X31, 256
	067 Add X1, X31, 56
	068 Move W2, 196
	069 Call 0x3EB2AC0
	070 Compare X24, 0
	071 JumpIfEqual {149}
	072 Add X0, X24, 760
	073 Add X1, X31, 256
	074 Move W2, 196
	075 Call 0x3EB2AC0
	076 Move X1, [X19+376]
	077 Move X0, X21
	078 Move X2, X20
	079 Move W3, W31
	080 Call GBufferPass.ExecutePass, X0, X1, X2, X3
	081 Move X8, [X19+232]
	082 Compare X8, 0
	083 JumpIfEqual {150}
	084 Move W9, [X8+21]
	085 Compare W9, 0
	086 JumpIfNotEqual {131}
	087 Move X0, [X23]
	088 Move X20, [X20]
	089 Move W9, [X0+224]
	090 Compare W9, 0
	091 JumpIfNotEqual {97}
	092 Call 0x1C17DFC
	093 Move X8, [X19+232]
	094 Compare X8, 0
	095 JumpIfEqual {154}
	096 Move X0, [X23]
	097 Move X9, [X0+184]
	098 Move X21, [X8+48]
	099 Move W19, [X9]
	100 Move X0, X8
	101 Move X1, X31
	102 Call DeferredLights.get_GBufferNormalSmoothnessIndex, X0
	103 Compare X21, 0
	104 JumpIfEqual {151}
	105 Move W8, [X21+24]
	106 NotImplemented "Instruction CMP not yet implemented."
	107 Add X8, X21, W0
	108 Move X0, [X8+32]
	109 Add X8, X31, 56
	110 Move X1, X31
	111 Call RTHandle.op_Implicit, X0
	112 NotImplemented "Instruction LDUR not yet implemented."
	113 NotImplemented "Instruction LDUR not yet implemented."
	114 Move X8, [X31+88]
	115 Move [X31+256], V0
	116 Move [X31+264], V1
	117 Move [X31+288], X8
	118 Compare X20, 0
	119 JumpIfEqual {153}
	120 Move V0, [X31+256]
	121 Move V1, [X31+272]
	122 Move X8, [X31+288]
	123 Move [X31], V0
	124 Move [X31+8], V1
	125 Move [X31+32], X8
	126 Add X2, X31, 0
	127 Move X0, X20
	128 Move W1, W19
	129 Move X3, X31
	130 Call CommandBuffer.SetGlobalTexture, X0, X1, X2
	131 Add X0, X31, 48
	132 Move X1, X31
	133 Call ProfilingScope.Dispose, X0
	134 Move X8, [X22+40]
	135 Move X9, [X31+456]
	136 NotImplemented "Instruction CMP not yet implemented."
	137 Add X31, X31, 464
	138 Move X20, [X31+48]
	139 Move X19, [X31+56]
	140 Move X22, [X31+32]
	141 Move X21, [X31+40]
	142 Move X24, [X31+16]
	143 Move X23, [X31+24]
	144 Move X29, [X31+64]
	145 Move X30, [X31+72]
	146 Return 
	147 Call 0x1C17F20
	148 Call 0x1C17F20
	149 Call 0x1C17F20
	150 Call 0x1C17F20
	151 Call 0x1C17F20
	152 Call 0x1C17F28
	153 Call 0x1C17F20
	154 Call 0x1C17F20
	155 Call 0x3EB2B20
	156 Move X19, X0
	157 NotImplemented "Instruction CMP not yet implemented."
	158 Move X0, X19
	159 Call 0x3EB2AD0
	160 Move X20, [X0]
	161 Call 0x3EB2AE0
	162 Add X0, X31, 48
	163 Move X1, X31
	164 Call ProfilingScope.Dispose, X0
	165 Compare X20, 0
	166 JumpIfEqual {134}
	167 Move X0, X20
	168 Call 0x1C17F18
	169 Move X20, X31
	170 Move X19, X0
	171 Add X0, X31, 48
	172 Move X1, X31
	173 Call ProfilingScope.Dispose, X0
	174 Compare X20, 0
	175 JumpIfNotEqual {178}
	176 Move X0, X19
	177 Call 0x1D2D690
	178 Move X0, X20
	179 Call 0x1C17F18
	180 Call 0x1991590

Method: System.Void ExecutePass(UnityEngine.Rendering.ScriptableRenderContext context, UnityEngine.Rendering.Universal.Internal.GBufferPass/PassData data, ref UnityEngine.Rendering.Universal.RenderingData renderingData, System.Boolean useRenderGraph = False)

Disassembly:
	0x03AB37E4 CMP X21, X8
	0x03AB37E8 B.GE 0x3AB38BC
	0x03AB37EC LDR X0, [X19 + 0x2D8]
	0x03AB37F0 CBZ X0, 0x3AB38B8
	0x03AB37F4 MOV X1, X31
	0x03AB37F8 BL 0x3A9AD2C
	0x03AB37FC CMP X21, W0, UXTW
	0x03AB3800 B.EQ 0x3AB38AC
	0x03AB3804 LDR X0, [X23]
	0x03AB3808 LDR X20, [X19 + 0x20]
	0x03AB380C LDR W8, [X0 + 0xE0]
	0x03AB3810 CBNZ W8, 0x3AB381C
	0x03AB3814 BL 0x1C16DFC
	0x03AB3818 LDR X0, [X23]
	0x03AB381C LDR X8, [X0 + 0xB8]
	0x03AB3820 LDR X8, [X8]
	0x03AB3824 CBZ X8, 0x3AB38B8
	0x03AB3828 LDR W9, [X8 + 0x18]
	0x03AB382C CMP X21, X9
	0x03AB3830 B.CS 0x3AB38D4
	0x03AB3834 LDR X9, [X19 + 0x10]
	0x03AB3838 CBZ X9, 0x3AB38B8
	0x03AB383C LDR W10, [X9 + 0x18]
	0x03AB3840 CMP X21, X10
	0x03AB3844 B.CS 0x3AB38D4
	0x03AB3848 LDR X0, [X24]
	0x03AB384C LDR X21, [X8, X25, LSL #3]
	0x03AB3850 LDR X22, [X9, X25, LSL #3]
	0x03AB3854 LDR W8, [X0 + 0xE0]
	0x03AB3858 CBNZ W8, 0x3AB3860
	0x03AB385C BL 0x1C16DFC
	0x03AB3860 ADD X8, X31, 0x28
	0x03AB3864 MOV X0, X22
	0x03AB3868 MOV X1, X31
	0x03AB386C BL 0x399A594
	0x03AB3870 LDUR V0, [X31 + 0x28]
	0x03AB3874 LDUR V1, [X31 + 0x38]
	0x03AB3878 LDR X8, [X31 + 0x48]
	0x03AB387C STP V0, V1, [X31 + 0x50]
	0x03AB3880 STR X8, [X31 + 0x70]
	0x03AB3884 CBZ X20, 0x3AB38B8
	0x03AB3888 LDP V0, V1, [X31 + 0x50]
	0x03AB388C LDR X8, [X31 + 0x70]
	0x03AB3890 ADD X2, X31, 0x0
	0x03AB3894 MOV X0, X20
	0x03AB3898 MOV X1, X21
	0x03AB389C MOV X3, X31
	0x03AB38A0 STP V0, V1, [X31]
	0x03AB38A4 STR X8, [X31 + 0x20]
	0x03AB38A8 BL 0x3C4FC28
	0x03AB38AC LDR X8, [X19 + 0x10]
	0x03AB38B0 ADD X25, X25, 0x1
	0x03AB38B4 CBNZ X8, 0x3AB37DC
	0x03AB38B8 BL 0x1C16F20
	0x03AB38BC LDP X20, X19, [X31 + 0xB0]
	0x03AB38C0 LDP X22, X21, [X31 + 0xA0]
	0x03AB38C4 LDP X24, X23, [X31 + 0x90]
	0x03AB38C8 LDP X30, X25, [X31 + 0x80]
	0x03AB38CC ADD X31, X31, 0xC0
	0x03AB38D0 RET
	0x03AB38D4 BL 0x1C16F28
	0x03AB38D8 STP X29, X30, [X31 - 0x60]!
	0x03AB38DC STP X28, X27, [X31 + 0x10]
	0x03AB38E0 STP X26, X25, [X31 + 0x20]
	0x03AB38E4 STP X24, X23, [X31 + 0x30]
	0x03AB38E8 STP X22, X21, [X31 + 0x40]
	0x03AB38EC STP X20, X19, [X31 + 0x50]
	0x03AB38F0 ADRP X22, 0x92F000
	0x03AB38F4 ADRP X26, 0x69D000
	0x03AB38F8 ADRP X21, 0x6A5000
	0x03AB38FC LDRB W8, [X22 + 0x46B]
	0x03AB3900 LDR X26, [X26 + 0x598]
	0x03AB3904 LDR X21, [X21 + 0x108]
	0x03AB3908 MOV W20, W1
	0x03AB390C MOV X19, X0
	0x03AB3910 TBNZ X8, 0x0, 0x3AB3A00
	0x03AB3914 ADRP X0, 0x6A5000
	0x03AB3918 LDR X0, [X0 + 0x110]
	0x03AB391C BL 0x1C16CF4
	0x03AB3920 ADRP X0, 0x644000
	0x03AB3924 LDR X0, [X0 + 0x988]
	0x03AB3928 BL 0x1C16CF4
	0x03AB392C ADRP X0, 0x69D000
	0x03AB3930 LDR X0, [X0 + 0x598]
	0x03AB3934 BL 0x1C16CF4
	0x03AB3938 ADRP X0, 0x6A0000
	0x03AB393C LDR X0, [X0 + 0xFF0]
	0x03AB3940 BL 0x1C16CF4
	0x03AB3944 ADRP X0, 0x6A4000
	0x03AB3948 LDR X0, [X0 + 0xA78]
	0x03AB394C BL 0x1C16CF4
	0x03AB3950 ADRP X0, 0x69B000
	0x03AB3954 LDR X0, [X0 + 0x48]
	0x03AB3958 BL 0x1C16CF4
	0x03AB395C ADRP X0, 0x6A5000
	0x03AB3960 LDR X0, [X0 + 0x118]
	0x03AB3964 BL 0x1C16CF4
	0x03AB3968 ADRP X0, 0x6A5000
	0x03AB396C LDR X0, [X0 + 0x120]
	0x03AB3970 BL 0x1C16CF4
	0x03AB3974 ADRP X0, 0x6A5000
	0x03AB3978 LDR X0, [X0 + 0x128]
	0x03AB397C BL 0x1C16CF4
	0x03AB3980 ADRP X0, 0x6A5000
	0x03AB3984 LDR X0, [X0 + 0x130]
	0x03AB3988 BL 0x1C16CF4
	0x03AB398C ADRP X0, 0x6A5000
	0x03AB3990 LDR X0, [X0 + 0x108]
	0x03AB3994 BL 0x1C16CF4
	0x03AB3998 ADRP X0, 0x6A5000
	0x03AB399C LDR X0, [X0 + 0x138]
	0x03AB39A0 BL 0x1C16CF4
	0x03AB39A4 ADRP X0, 0x6A5000
	0x03AB39A8 LDR X0, [X0 + 0x140]
	0x03AB39AC BL 0x1C16CF4
	0x03AB39B0 ADRP X0, 0x6A5000
	0x03AB39B4 LDR X0, [X0 + 0x148]
	0x03AB39B8 BL 0x1C16CF4
	0x03AB39BC ADRP X0, 0x6A5000
	0x03AB39C0 LDR X0, [X0 + 0x150]
	0x03AB39C4 BL 0x1C16CF4
	0x03AB39C8 ADRP X0, 0x6A5000
	0x03AB39CC LDR X0, [X0 + 0x158]
	0x03AB39D0 BL 0x1C16CF4
	0x03AB39D4 ADRP X0, 0x6A5000
	0x03AB39D8 LDR X0, [X0 + 0x160]
	0x03AB39DC BL 0x1C16CF4
	0x03AB39E0 ADRP X0, 0x6A5000
	0x03AB39E4 LDR X0, [X0 + 0x168]
	0x03AB39E8 BL 0x1C16CF4
	0x03AB39EC ADRP X0, 0x6A5000
	0x03AB39F0 LDR X0, [X0 + 0x170]
	0x03AB39F4 BL 0x1C16CF4
	0x03AB39F8 MOVZ W8, 0x1
	0x03AB39FC STRB W8, [X22 + 0x46B]
	0x03AB3A00 ADRP X27, 0x6A5000
	0x03AB3A04 ADRP X25, 0x644000
	0x03AB3A08 ADRP X24, 0x6A4000
	0x03AB3A0C ADRP X23, 0x69B000
	0x03AB3A10 ADRP X29, 0x6A5000
	0x03AB3A14 ADRP X22, 0x6A5000
	0x03AB3A18 ADRP X28, 0x6A5000
	0x03AB3A1C LDR X27, [X27 + 0x138]
	0x03AB3A20 LDR X25, [X25 + 0x988]
	0x03AB3A24 LDR X24, [X24 + 0xA78]
	0x03AB3A28 LDR X23, [X23 + 0x48]
	0x03AB3A2C LDR X29, [X29 + 0x158]
	0x03AB3A30 LDR X22, [X22 + 0x110]
	0x03AB3A34 LDR X28, [X28 + 0x128]
	0x03AB3A38 LDR X0, [X26]
	0x03AB3A3C BL 0x1C16F10
	0x03AB3A40 LDR X1, [X21]
	0x03AB3A44 MOV X2, X31
	0x03AB3A48 MOV X21, X0
	0x03AB3A4C BL 0x39B19AC
	0x03AB3A50 STR X21, [X19 + 0x128]
	0x03AB3A54 ADRP X8, 0x6A0000
	0x03AB3A58 LDR X8, [X8 + 0xFF0]
	0x03AB3A5C LDR X0, [X8]
	0x03AB3A60 LDR W8, [X0 + 0xE0]
	0x03AB3A64 CBNZ W8, 0x3AB3A6C
	0x03AB3A68 BL 0x1C16DFC
	0x03AB3A6C MOV X0, X19
	0x03AB3A70 MOV X1, X31
	0x03AB3A74 BL 0x3A4225C
	0x03AB3A78 LDR X0, [X26]
	0x03AB3A7C BL 0x1C16F10
	0x03AB3A80 LDR X1, [X27]
	0x03AB3A84 MOV X2, X31
	0x03AB3A88 MOV X21, X0
	0x03AB3A8C BL 0x39B19AC
	0x03AB3A90 STR X21, [X19 + 0x38]
	0x03AB3A94 STR W20, [X19 + 0x10]
	0x03AB3A98 LDR X0, [X25]
	0x03AB3A9C MOVZ W1, 0x5
	0x03AB3AA0 BL 0x1C16D6C
	0x03AB3AA4 STR X0, [X19 + 0x100]
	0x03AB3AA8 LDR X0, [X24]
	0x03AB3AAC MOVZ W1, 0x4
	0x03AB3AB0 BL 0x1C16D6C
	0x03AB3AB4 STR X0, [X19 + 0x108]
	0x03AB3AB8 LDR X0, [X23]
	0x03AB3ABC MOVZ W1, 0x4
	0x03AB3AC0 BL 0x1C16D6C
	0x03AB3AC4 STR X0, [X19 + 0x110]
	0x03AB3AC8 LDR X0, [X29]
	0x03AB3ACC MOV X1, X31
	0x03AB3AD0 BL 0x3C124EC
	0x03AB3AD4 LDR X8, [X22]
	0x03AB3AD8 MOV X1, X31
	0x03AB3ADC LDR X8, [X8 + 0xB8]
	0x03AB3AE0 STR W0, [X8]
	0x03AB3AE4 LDR X0, [X28]
	0x03AB3AE8 BL 0x3C124EC
	0x03AB3AEC LDR X8, [X22]
	0x03AB3AF0 MOV X1, X31
	0x03AB3AF4 LDR X8, [X8 + 0xB8]
	0x03AB3AF8 STR W0, [X8 + 0x4]
	0x03AB3AFC ADRP X8, 0x6A5000
	0x03AB3B00 LDR X8, [X8 + 0x170]
	0x03AB3B04 LDR X0, [X8]
	0x03AB3B08 BL 0x3C124EC
	0x03AB3B0C LDR X8, [X22]
	0x03AB3B10 MOV X1, X31
	0x03AB3B14 LDR X8, [X8 + 0xB8]
	0x03AB3B18 STR W0, [X8 + 0x8]
	0x03AB3B1C ADRP X8, 0x6A5000
	0x03AB3B20 LDR X8, [X8 + 0x120]
	0x03AB3B24 LDR X0, [X8]
	0x03AB3B28 BL 0x3C124EC
	0x03AB3B2C LDR X8, [X22]
	0x03AB3B30 MOV X1, X31
	0x03AB3B34 LDR X8, [X8 + 0xB8]
	0x03AB3B38 STR W0, [X8 + 0xC]
	0x03AB3B3C ADRP X8, 0x6A5000
	0x03AB3B40 LDR X8, [X8 + 0x160]
	0x03AB3B44 LDR X0, [X8]
	0x03AB3B48 BL 0x3C124EC
	0x03AB3B4C LDR X8, [X22]
	0x03AB3B50 MOV X1, X31
	0x03AB3B54 LDR X8, [X8 + 0xB8]
	0x03AB3B58 STR W0, [X8 + 0x10]
	0x03AB3B5C ADRP X8, 0x6A5000
	0x03AB3B60 LDR X8, [X8 + 0x130]
	0x03AB3B64 LDR X0, [X8]
	0x03AB3B68 BL 0x3C124EC
	0x03AB3B6C LDR X8, [X22]
	0x03AB3B70 MOV X1, X31
	0x03AB3B74 LDR X8, [X8 + 0xB8]
	0x03AB3B78 STR W0, [X8 + 0x14]
	0x03AB3B7C ADRP X8, 0x6A5000
	0x03AB3B80 LDR X8, [X8 + 0x148]
	0x03AB3B84 LDR X0, [X8]
	0x03AB3B88 BL 0x3C124EC
	0x03AB3B8C LDR X8, [X22]
	0x03AB3B90 MOV X1, X31
	0x03AB3B94 LDR X8, [X8 + 0xB8]
	0x03AB3B98 STR W0, [X8 + 0x18]
	0x03AB3B9C ADRP X8, 0x6A5000
	0x03AB3BA0 LDR X8, [X8 + 0x118]
	0x03AB3BA4 LDR X0, [X8]
	0x03AB3BA8 BL 0x3C124EC
	0x03AB3BAC LDR X8, [X22]
	0x03AB3BB0 MOV X1, X31
	0x03AB3BB4 LDR X8, [X8 + 0xB8]
	0x03AB3BB8 STR W0, [X8 + 0x1C]
	0x03AB3BBC ADRP X8, 0x6A5000
	0x03AB3BC0 LDR X8, [X8 + 0x168]

ISIL:
	001 Subtract X31, X31, 320
	002 Move [X31+224], X29
	003 Move [X31+232], X30
	004 Move [X31+240], X28
	005 Move [X31+248], X27
	006 Move [X31+256], X26
	007 Move [X31+264], X25
	008 Move [X31+272], X24
	009 Move [X31+280], X23
	010 Move [X31+288], X22
	011 Move [X31+296], X21
	012 Move [X31+304], X20
	013 Move [X31+312], X19
	014 Move X21, 0x930000
	015 Move W8, [X21+1125]
	016 Move X19, X2
	017 Move X20, X1
	018 Move [X31+216], X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {49}
	023 Move X0, 0x669000
	024 Move X0, [X0+2296]
	025 Call 0x1C17CF4
	026 Move X0, 0x6A5000
	027 Move X0, [X0+400]
	028 Call 0x1C17CF4
	029 Move X0, 0x6A6000
	030 Move X0, [X0+120]
	031 Call 0x1C17CF4
	032 Move X0, 0x6A6000
	033 Move X0, [X0+128]
	034 Call 0x1C17CF4
	035 Move X0, 0x6A6000
	036 Move X0, [X0+136]
	037 Call 0x1C17CF4
	038 Move X0, 0x6A6000
	039 Move X0, [X0+144]
	040 Call 0x1C17CF4
	041 Move X0, 0x69E000
	042 Move X0, [X0+3200]
	043 Call 0x1C17CF4
	044 Move X0, 0x6A5000
	045 Move X0, [X0+3784]
	046 Call 0x1C17CF4
	047 Move W8, 1
	048 Move [X21+1125], W8
	049 Move [X31+200], X31
	050 Move [X31+208], X31
	051 Move [X31+184], X31
	052 Move [X31+192], X31
	053 Compare X20, 0
	054 JumpIfEqual {300}
	055 Move X0, [X20+728]
	056 Compare X0, 0
	057 JumpIfEqual {300}
	058 Move X1, X31
	059 Call DeferredLights.get_UseRenderingLayers, X0
	060 Move TEMP, X0
	061 And TEMP, TEMP, 1
	062 Compare TEMP, 1
	063 JumpIfNotEqual {70}
	064 Move X8, [X20+728]
	065 Compare X8, 0
	066 JumpIfEqual {300}
	067 Move W8, [X8+24]
	068 Compare W8, 0
	069 JumpIfEqual {284}
	070 Move W24, 1
	071 Move X23, 0x69E000
	072 Move X23, [X23+3200]
	073 Move X21, [X19]
	074 Move X0, [X23]
	075 Move W8, [X0+224]
	076 Compare W8, 0
	077 JumpIfNotEqual {79}
	078 Call 0x1C17DFC
	079 Add X0, X31, 216
	080 Move X1, X21
	081 Move X2, X31
	082 Call ScriptableRenderContext.ExecuteCommandBuffer, X0, X1
	083 Move X0, [X19]
	084 Compare X0, 0
	085 JumpIfEqual {300}
	086 Move X1, X31
	087 Call CommandBuffer.Clear, X0
	088 Move X0, [X20+728]
	089 Compare X0, 0
	090 JumpIfEqual {300}
	091 Move W8, [X0+25]
	092 Compare W8, 0
	093 JumpIfEqual {112}
	094 Move X1, [X19]
	095 Move X2, X31
	096 Call DeferredLights.ClearStencilPartial, X0, X1
	097 Move X0, [X23]
	098 Move X21, [X19]
	099 Move W8, [X0+224]
	100 Compare W8, 0
	101 JumpIfNotEqual {103}
	102 Call 0x1C17DFC
	103 Add X0, X31, 216
	104 Move X1, X21
	105 Move X2, X31
	106 Call ScriptableRenderContext.ExecuteCommandBuffer, X0, X1
	107 Move X0, [X19]
	108 Compare X0, 0
	109 JumpIfEqual {300}
	110 Move X1, X31
	111 Call CommandBuffer.Clear, X0
	112 Move X25, 0x6A5000
	113 Move X25, [X25+400]
	114 Move X22, 0x6A6000
	115 Move X21, 0x6A6000
	116 Move X0, [X25]
	117 Move W8, [X0+224]
	118 Move X22, [X22+144]
	119 Move X21, [X21+136]
	120 Move [X31+60], W24
	121 Compare W8, 0
	122 JumpIfNotEqual {125}
	123 Call 0x1C17DFC
	124 Move X0, [X25]
	125 Move X8, [X0+184]
	126 Move X3, [X22]
	127 Add X0, X31, 200
	128 Move W2, 2
	129 Move X1, [X8+32]
	130 Call NativeArray`1<ShaderTagId>..ctor, X0, X1, X2
	131 Move X8, [X25]
	132 Move X3, [X21]
	133 Add X0, X31, 184
	134 Move W2, 2
	135 Move X8, [X8+184]
	136 Move X1, [X8+40]
	137 Call NativeArray`1<RenderStateBlock>..ctor, X0, X1, X2
	138 Move X8, [X25]
	139 Move X0, [X23]
	140 Move X22, [X19+8]
	141 Move X21, [X19+16]
	142 Move X27, [X31+200]
	143 Move X29, [X31+208]
	144 Move X8, [X8+184]
	145 Move W9, [X0+224]
	146 Move X26, [X31+184]
	147 Move X28, [X31+192]
	148 Add X25, X20, 760
	149 Move W23, [X8+24]
	150 Add X24, X20, 736
	151 Compare W9, 0
	152 JumpIfNotEqual {154}
	153 Call 0x1C17DFC
	154 Add X0, X31, 216
	155 Move X1, X22
	156 Move X2, X21
	157 Move X3, X25
	158 Move X4, X24
	159 Move X5, X23
	160 Move W6, W31
	161 Move [X31+24], X28
	162 Move [X31+32], X31
	163 Move [X31+8], X29
	164 Move [X31+16], X26
	165 Move [X31], X27
	166 Call ScriptableRenderContext.DrawRenderers, X0, X1, X2, X3, X4, X5, X6, X7
	167 Move X8, 0x6A6000
	168 Move X8, [X8+128]
	169 Add X0, X31, 200
	170 Move X1, [X8]
	171 Call NativeArray`1<ShaderTagId>.Dispose, X0
	172 Move X8, 0x6A6000
	173 Move X8, [X8+120]
	174 Add X0, X31, 184
	175 Move X1, [X8]
	176 Call NativeArray`1<RenderStateBlock>.Dispose, X0
	177 Move X0, [X20+728]
	178 Compare X0, 0
	179 JumpIfEqual {300}
	180 Move X23, 0x69E000
	181 Move X22, 0x6A5000
	182 Move W8, [X0+21]
	183 Move X23, [X23+3200]
	184 Move W24, [X31+60]
	185 Move X22, [X22+400]
	186 Compare W8, 0
	187 JumpIfEqual {192}
	188 Move TEMP, X24
	189 And TEMP, TEMP, 1
	190 Compare TEMP, 1
	191 JumpIfNotEqual {240}
	192 Move X8, [X22]
	193 Move X21, [X19]
	194 Move W9, [X8+224]
	195 Compare W9, 0
	196 JumpIfNotEqual {203}
	197 Move X0, X8
	198 Call 0x1C17DFC
	199 Move X0, [X20+728]
	200 Compare X0, 0
	201 JumpIfEqual {300}
	202 Move X8, [X22]
	203 Move X8, [X8+184]
	204 Move X22, [X0+48]
	205 Move X1, X31
	206 Move W20, [X8]
	207 Call DeferredLights.get_GBufferNormalSmoothnessIndex, X0
	208 Compare X22, 0
	209 JumpIfEqual {300}
	210 Move W8, [X22+24]
	211 NotImplemented "Instruction CMP not yet implemented."
	212 Add X8, X22, W0
	213 Move X0, [X8+32]
	214 Add X8, X31, 104
	215 Move X1, X31
	216 Call RTHandle.op_Implicit, X0
	217 NotImplemented "Instruction LDUR not yet implemented."
	218 NotImplemented "Instruction LDUR not yet implemented."
	219 Move X8, [X31+136]
	220 Move [X31+144], V0
	221 Move [X31+152], V1
	222 Move [X31+176], X8
	223 Compare X21, 0
	224 JumpIfEqual {300}
	225 Move V0, [X31+144]
	226 Move V1, [X31+160]
	227 Move X8, [X31+176]
	228 Add X2, X31, 64
	229 Move X0, X21
	230 Move W1, W20
	231 Move X3, X31
	232 Move [X31+64], V0
	233 Move [X31+72], V1
	234 Move [X31+96], X8
	235 Call CommandBuffer.SetGlobalTexture, X0, X1, X2
	236 Move TEMP, X24
	237 And TEMP, TEMP, 1
	238 Compare TEMP, 1
	239 JumpIfEqual {270}
	240 Move X8, 0x669000
	241 Move X8, [X8+2296]
	242 Move X20, [X19]
	243 Move X0, [X8]
	244 Move W8, [X0+224]
	245 Compare W8, 0
	246 JumpIfNotEqual {248}
	247 Call 0x1C17DFC
	248 Move X8, 0x6A5000
	249 Move X8, [X8+3784]
	250 Move X0, X20
	251 Move W2, W31
	252 Move X3, X31
	253 Move X1, [X8]
	254 Call CoreUtils.SetKeyword, X0, X1, X2
	255 Move X0, [X23]
	256 Move X20, [X19]
	257 Move W8, [X0+224]
	258 Compare W8, 0
	259 JumpIfNotEqual {261}
	260 Call 0x1C17DFC
	261 Add X0, X31, 216
	262 Move X1, X20
	263 Move X2, X31
	264 Call ScriptableRenderContext.ExecuteCommandBuffer, X0, X1
	265 Move X0, [X19]
	266 Compare X0, 0
	267 JumpIfEqual {300}
	268 Move X1, X31
	269 Call CommandBuffer.Clear, X0
	270 Move X20, [X31+304]
	271 Move X19, [X31+312]
	272 Move X22, [X31+288]
	273 Move X21, [X31+296]
	274 Move X24, [X31+272]
	275 Move X23, [X31+280]
	276 Move X26, [X31+256]
	277 Move X25, [X31+264]
	278 Move X28, [X31+240]
	279 Move X27, [X31+248]
	280 Move X29, [X31+224]
	281 Move X30, [X31+232]
	282 Add X31, X31, 320
	283 Return 
	284 Move X8, 0x669000
	285 Move X8, [X8+2296]
	286 Move X21, [X19]
	287 Move X0, [X8]
	288 Move W8, [X0+224]
	289 Compare W8, 0
	290 JumpIfNotEqual {292}
	291 Call 0x1C17DFC
	292 Move X8, 0x6A5000
	293 Move X8, [X8+3784]
	294 Move W2, 1
	295 Move X0, X21
	296 Move X3, X31
	297 Move X1, [X8]
	298 Call CoreUtils.SetKeyword, X0, X1, X2
	299 Move W24, W31
	300 Call 0x1C17F20
	301 Call 0x1C17F28

Method: System.Void Render(UnityEngine.Experimental.Rendering.RenderGraphModule.RenderGraph renderGraph, UnityEngine.Experimental.Rendering.RenderGraphModule.TextureHandle cameraColor, UnityEngine.Experimental.Rendering.RenderGraphModule.TextureHandle cameraDepth, ref UnityEngine.Rendering.Universal.RenderingData renderingData, ref UnityEngine.Rendering.Universal.UniversalRenderer/RenderGraphFrameResources frameResources)

Disassembly:
	0x03AB3BC4 LDR X0, [X8]
	0x03AB3BC8 BL 0x3C124EC
	0x03AB3BCC LDR X8, [X22]
	0x03AB3BD0 MOV X1, X31
	0x03AB3BD4 LDR X8, [X8 + 0xB8]
	0x03AB3BD8 STR W0, [X8 + 0x20]
	0x03AB3BDC ADRP X8, 0x6A5000
	0x03AB3BE0 LDR X8, [X8 + 0x140]
	0x03AB3BE4 LDR X0, [X8]
	0x03AB3BE8 BL 0x3C124EC
	0x03AB3BEC LDR X8, [X22]
	0x03AB3BF0 MOV X1, X31
	0x03AB3BF4 LDR X8, [X8 + 0xB8]
	0x03AB3BF8 STR W0, [X8 + 0x24]
	0x03AB3BFC ADRP X8, 0x6A5000
	0x03AB3C00 LDR X8, [X8 + 0x150]
	0x03AB3C04 LDR X0, [X8]
	0x03AB3C08 BL 0x3C124EC
	0x03AB3C0C STR W0, [X19 + 0xEC]
	0x03AB3C10 LDP X20, X19, [X31 + 0x50]
	0x03AB3C14 LDP X22, X21, [X31 + 0x40]
	0x03AB3C18 LDP X24, X23, [X31 + 0x30]
	0x03AB3C1C LDP X26, X25, [X31 + 0x20]
	0x03AB3C20 LDP X28, X27, [X31 + 0x10]
	0x03AB3C24 LDP X29, X30, [X31], #0x60
	0x03AB3C28 RET
	0x03AB3C2C STP X30, X19, [X31 - 0x10]!
	0x03AB3C30 MOV X19, X0
	0x03AB3C34 LDR X0, [X0 + 0xF0]
	0x03AB3C38 CBZ X0, 0x3AB3C44
	0x03AB3C3C MOV X1, X31
	0x03AB3C40 BL 0x39D4B1C
	0x03AB3C44 LDR X0, [X19 + 0xF8]
	0x03AB3C48 CBZ X0, 0x3AB3C58
	0x03AB3C4C MOV X1, X31
	0x03AB3C50 LDP X30, X19, [X31], #0x10
	0x03AB3C54 B 0x39D4B1C
	0x03AB3C58 LDP X30, X19, [X31], #0x10
	0x03AB3C5C RET
	0x03AB3C60 SUB X31, X31, 0x130
	0x03AB3C64 STR D8, [X31 + 0xC0]
	0x03AB3C68 STP X29, X30, [X31 + 0xD0]
	0x03AB3C6C STP X28, X27, [X31 + 0xE0]
	0x03AB3C70 STP X26, X25, [X31 + 0xF0]
	0x03AB3C74 STP X24, X23, [X31 + 0x100]
	0x03AB3C78 STP X22, X21, [X31 + 0x110]
	0x03AB3C7C STP X20, X19, [X31 + 0x120]
	0x03AB3C80 ADRP X21, 0x92F000
	0x03AB3C84 LDRB W8, [X21 + 0x46C]
	0x03AB3C88 MOV X20, X1
	0x03AB3C8C MOV X19, X0
	0x03AB3C90 TBNZ X8, 0x0, 0x3AB3CCC
	0x03AB3C94 ADRP X0, 0x640000
	0x03AB3C98 LDR X0, [X0 + 0xA28]
	0x03AB3C9C BL 0x1C16CF4
	0x03AB3CA0 ADRP X0, 0x6A3000
	0x03AB3CA4 LDR X0, [X0 + 0xEC0]
	0x03AB3CA8 BL 0x1C16CF4
	0x03AB3CAC ADRP X0, 0x6A5000
	0x03AB3CB0 LDR X0, [X0 + 0x178]
	0x03AB3CB4 BL 0x1C16CF4
	0x03AB3CB8 ADRP X0, 0x6A5000
	0x03AB3CBC LDR X0, [X0 + 0x150]
	0x03AB3CC0 BL 0x1C16CF4
	0x03AB3CC4 MOVZ W8, 0x1
	0x03AB3CC8 STRB W8, [X21 + 0x46C]
	0x03AB3CCC MOVI V0.2D, 0x0
	0x03AB3CD0 STRB W31, [X31 + 0xC8]
	0x03AB3CD4 STR W31, [X31 + 0xB0]
	0x03AB3CD8 STP X31, X31, [X31 + 0x28]
	0x03AB3CDC STP V0, V0, [X31 + 0x90]
	0x03AB3CE0 STP V0, V0, [X31 + 0x70]
	0x03AB3CE4 STP V0, V0, [X31 + 0x50]
	0x03AB3CE8 STR V0, [X31 + 0x4]
	0x03AB3CEC STR X31, [X31 + 0x38]
	0x03AB3CF0 LDRB W8, [X20 + 0x251]
	0x03AB3CF4 CBZ W8, 0x3AB4034
	0x03AB3CF8 LDR X2, [X19 + 0x128]
	0x03AB3CFC ADD X0, X31, 0xC8
	0x03AB3D00 MOV X1, X31
	0x03AB3D04 MOV X3, X31
	0x03AB3D08 ADD X21, X20, 0x250
	0x03AB3D0C BL 0x39B1DB0
	0x03AB3D10 LDRB W8, [X21]
	0x03AB3D14 CBZ W8, 0x3AB3F44
	0x03AB3D18 MOV X0, X19
	0x03AB3D1C BL 0x3AB4150
	0x03AB3D20 LDRSW X22, [X20 + 0x228]
	0x03AB3D24 ADDS W31, W22, 0x1
	0x03AB3D28 B.EQ 0x3AB3F54
	0x03AB3D2C LDR X8, [X20 + 0x238]
	0x03AB3D30 MOVZ W9, 0x74
	0x03AB3D34 ADD X0, X31, 0x40
	0x03AB3D38 MOVZ W2, 0x74
	0x03AB3D3C MADD X1, X22, X9, X8
	0x03AB3D40 BL 0x3EB1B30
	0x03AB3D44 ADD X0, X31, 0x40
	0x03AB3D48 MOV X1, X31
	0x03AB3D4C BL 0x3C5BBF0
	0x03AB3D50 CBZ X0, 0x3AB3FB4
	0x03AB3D54 MOV X1, X31
	0x03AB3D58 STR X0, [X31 + 0x20]
	0x03AB3D5C BL 0x3C16B90
	0x03AB3D60 CBZ W0, 0x3AB3F64
	0x03AB3D64 ADD X0, X31, 0x40
	0x03AB3D68 MOV X1, X31
	0x03AB3D6C BL 0x3C5BC7C
	0x03AB3D70 CMP W0, 0x1
	0x03AB3D74 B.EQ 0x3AB3DA4
	0x03AB3D78 ADRP X8, 0x640000
	0x03AB3D7C LDR X8, [X8 + 0xA28]
	0x03AB3D80 LDR X0, [X8]
	0x03AB3D84 LDR W8, [X0 + 0xE0]
	0x03AB3D88 CBNZ W8, 0x3AB3D90
	0x03AB3D8C BL 0x1C16DFC
	0x03AB3D90 ADRP X8, 0x6A5000
	0x03AB3D94 LDR X8, [X8 + 0x178]
	0x03AB3D98 LDR X0, [X8]
	0x03AB3D9C MOV X1, X31
	0x03AB3DA0 BL 0x3C06A04
	0x03AB3DA4 ADD X0, X20, 0x8
	0x03AB3DA8 ADD X2, X31, 0x28
	0x03AB3DAC MOV W1, W22
	0x03AB3DB0 MOV X3, X31
	0x03AB3DB4 STR X0, [X31 + 0x18]
	0x03AB3DB8 BL 0x3C5318C
	0x03AB3DBC TBZ X0, 0x0, 0x3AB3F74
	0x03AB3DC0 LDR W25, [X20 + 0x25C]
	0x03AB3DC4 ADRP X8, 0x6A3000
	0x03AB3DC8 STR W25, [X19 + 0xE8]
	0x03AB3DCC LDR X8, [X8 + 0xEC0]
	0x03AB3DD0 LDR W26, [X20 + 0x254]
	0x03AB3DD4 LDR W27, [X20 + 0x258]
	0x03AB3DD8 LDR X0, [X8]
	0x03AB3DDC LDR W8, [X0 + 0xE0]
	0x03AB3DE0 CBNZ W8, 0x3AB3DE8
	0x03AB3DE4 BL 0x1C16DFC
	0x03AB3DE8 MOV W0, W26
	0x03AB3DEC MOV W1, W27
	0x03AB3DF0 MOV W2, W25
	0x03AB3DF4 MOV X3, X31
	0x03AB3DF8 BL 0x3A76DC0
	0x03AB3DFC STR W0, [X31 + 0xCC]
	0x03AB3E00 LDR W25, [X20 + 0x254]
	0x03AB3E04 LDR W8, [X19 + 0xE8]
	0x03AB3E08 STR W25, [X19 + 0x11C]
	0x03AB3E0C LDR W9, [X20 + 0x258]
	0x03AB3E10 CMP W8, 0x2
	0x03AB3E14 CSET W10, EQ
	0x03AB3E18 CMP W8, 0x1
	0x03AB3E1C ASRV W26, W9, W10
	0x03AB3E20 STR W26, [X19 + 0x120]
	0x03AB3E24 B.LT 0x3AB3ED8
	0x03AB3E28 MOV X28, X31
	0x03AB3E2C MOVZ W29, 0x20
	0x03AB3E30 MOVZ W24, 0x20
	0x03AB3E34 LDR X0, [X31 + 0x20]
	0x03AB3E38 MOV X1, X31
	0x03AB3E3C BL 0x3C16A28
	0x03AB3E40 LDR X27, [X19 + 0x110]
	0x03AB3E44 CBZ X27, 0x3AB3FA8
	0x03AB3E48 LDR X23, [X19 + 0x108]
	0x03AB3E4C CBZ X23, 0x3AB3FAC
	0x03AB3E50 ADRP X8, 0x6A3000
	0x03AB3E54 LDR X8, [X8 + 0xEC0]
	0x03AB3E58 MOV V8.16B, V0.16B
	0x03AB3E5C LDR X0, [X8]
	0x03AB3E60 LDR W8, [X0 + 0xE0]
	0x03AB3E64 CBNZ W8, 0x3AB3E6C
	0x03AB3E68 BL 0x1C16DFC
	0x03AB3E6C LDR W8, [X27 + 0x18]
	0x03AB3E70 CMP X28, X8
	0x03AB3E74 B.CS 0x3AB3FA4
	0x03AB3E78 LDR W8, [X23 + 0x18]
	0x03AB3E7C CMP X28, X8
	0x03AB3E80 B.CS 0x3AB3FB0
	0x03AB3E84 ADD X7, X27, X24
	0x03AB3E88 ADD X8, X23, X29
	0x03AB3E8C LDR X0, [X31 + 0x18]
	0x03AB3E90 LDR W6, [X31 + 0xCC]
	0x03AB3E94 MOV X1, X21
	0x03AB3E98 MOV W2, W22
	0x03AB3E9C MOV W3, W28
	0x03AB3EA0 MOV W4, W25
	0x03AB3EA4 MOV W5, W26
	0x03AB3EA8 MOV V0.16B, V8.16B
	0x03AB3EAC STP X8, X31, [X31]
	0x03AB3EB0 BL 0x3A764A8
	0x03AB3EB4 TBZ X0, 0x0, 0x3AB3F84
	0x03AB3EB8 LDRSW X8, [X19 + 0xE8]
	0x03AB3EBC LDR W25, [X19 + 0x11C]
	0x03AB3EC0 LDR W26, [X19 + 0x120]
	0x03AB3EC4 ADD X28, X28, 0x1
	0x03AB3EC8 ADD X24, X24, 0x10
	0x03AB3ECC CMP X28, X8
	0x03AB3ED0 ADD X29, X29, 0x1C8
	0x03AB3ED4 B.LT 0x3AB3E34
	0x03AB3ED8 LDR V0, [X20 + 0x19C]
	0x03AB3EDC MOVZ W8, 0x1
	0x03AB3EE0 FMUL S0, S0, S0
	0x03AB3EE4 STR S0, [X19 + 0xE4]
	0x03AB3EE8 LDR V0, [X20 + 0x26C]
	0x03AB3EEC STRB W31, [X19 + 0x118]
	0x03AB3EF0 STRB W8, [X19 + 0x42]
	0x03AB3EF4 ADRP X8, 0x6A3000
	0x03AB3EF8 STR S0, [X19 + 0xE0]
	0x03AB3EFC LDR X8, [X8 + 0xEC0]
	0x03AB3F00 LDR X0, [X8]
	0x03AB3F04 LDR W8, [X0 + 0xE0]
	0x03AB3F08 CBNZ W8, 0x3AB3F10
	0x03AB3F0C BL 0x1C16DFC
	0x03AB3F10 ADRP X8, 0x6A5000
	0x03AB3F14 LDR X8, [X8 + 0x150]
	0x03AB3F18 ADD X0, X19, 0xF0
	0x03AB3F1C MOVZ W19, 0x1
	0x03AB3F20 LDR X5, [X8]
	0x03AB3F24 FMOV S0, W31
	0x03AB3F28 MOVZ W3, 0x10
	0x03AB3F2C MOVZ W4, 0x1
	0x03AB3F30 MOV W1, W25
	0x03AB3F34 MOV W2, W26
	0x03AB3F38 MOV X6, X31
	0x03AB3F3C BL 0x3A77B98
	0x03AB3F40 B 0x3AB3F94
	0x03AB3F44 MOV X0, X19
	0x03AB3F48 MOV X1, X20
	0x03AB3F4C BL 0x3AB4098
	0x03AB3F50 B 0x3AB3F90
	0x03AB3F54 MOV X0, X19
	0x03AB3F58 MOV X1, X20
	0x03AB3F5C BL 0x3AB4098
	0x03AB3F60 B 0x3AB3F90
	0x03AB3F64 MOV X0, X19
	0x03AB3F68 MOV X1, X20
	0x03AB3F6C BL 0x3AB4098
	0x03AB3F70 B 0x3AB3F90
	0x03AB3F74 MOV X0, X19
	0x03AB3F78 MOV X1, X20
	0x03AB3F7C BL 0x3AB4098
	0x03AB3F80 B 0x3AB3F90
	0x03AB3F84 MOV X0, X19
	0x03AB3F88 MOV X1, X20
	0x03AB3F8C BL 0x3AB4098
	0x03AB3F90 MOV W19, W0
	0x03AB3F94 ADD X0, X31, 0xC8
	0x03AB3F98 MOV X1, X31
	0x03AB3F9C BL 0x39B1DB4
	0x03AB3FA0 B 0x3AB4038
	0x03AB3FA4 BL 0x1C16F28
	0x03AB3FA8 BL 0x1C16F20
	0x03AB3FAC BL 0x1C16F20
	0x03AB3FB0 BL 0x1C16F28
	0x03AB3FB4 BL 0x1C16F20
	0x03AB3FB8 B 0x3AB4008
	0x03AB3FBC B 0x3AB4008
	0x03AB3FC0 B 0x3AB4008
	0x03AB3FC4 B 0x3AB4008
	0x03AB3FC8 B 0x3AB4008
	0x03AB3FCC B 0x3AB4008
	0x03AB3FD0 B 0x3AB4008
	0x03AB3FD4 B 0x3AB4008
	0x03AB3FD8 B 0x3AB4008
	0x03AB3FDC B 0x3AB4008
	0x03AB3FE0 B 0x3AB4008
	0x03AB3FE4 B 0x3AB4008
	0x03AB3FE8 B 0x3AB4008
	0x03AB3FEC B 0x3AB4008
	0x03AB3FF0 B 0x3AB4008
	0x03AB3FF4 B 0x3AB4008
	0x03AB3FF8 B 0x3AB4008
	0x03AB3FFC B 0x3AB4008
	0x03AB4000 B 0x3AB4008
	0x03AB4004 B 0x3AB4008
	0x03AB4008 MOV X19, X0
	0x03AB400C CMP W1, 0x1
	0x03AB4010 B.NE 0x3AB4060
	0x03AB4014 MOV X0, X19
	0x03AB4018 BL 0x3EB1AD0
	0x03AB401C LDR X20, [X0]
	0x03AB4020 BL 0x3EB1AE0
	0x03AB4024 ADD X0, X31, 0xC8
	0x03AB4028 MOV X1, X31
	0x03AB402C BL 0x39B1DB4
	0x03AB4030 CBNZ X20, 0x3AB4068
	0x03AB4034 MOV W19, W31
	0x03AB4038 AND W0, W19, 0x1
	0x03AB403C LDP X20, X19, [X31 + 0x120]
	0x03AB4040 LDP X22, X21, [X31 + 0x110]
	0x03AB4044 LDP X24, X23, [X31 + 0x100]
	0x03AB4048 LDP X26, X25, [X31 + 0xF0]
	0x03AB404C LDP X28, X27, [X31 + 0xE0]
	0x03AB4050 LDP X29, X30, [X31 + 0xD0]
	0x03AB4054 LDR V8, [X31 + 0xC0]
	0x03AB4058 ADD X31, X31, 0x130
	0x03AB405C RET
	0x03AB4060 MOV X20, X31
	0x03AB4064 B 0x3AB4074
	0x03AB4068 MOV X0, X20
	0x03AB406C BL 0x1C16F18
	0x03AB4070 MOV X19, X0
	0x03AB4074 ADD X0, X31, 0xC8
	0x03AB4078 MOV X1, X31
	0x03AB407C BL 0x39B1DB4
	0x03AB4080 CBNZ X20, 0x3AB408C
	0x03AB4084 MOV X0, X19
	0x03AB4088 BL 0x1D2C690
	0x03AB408C MOV X0, X20
	0x03AB4090 BL 0x1C16F18
	0x03AB4094 BL 0x1990590
	0x03AB4098 STP X30, X21, [X31 - 0x20]!
	0x03AB409C STP X20, X19, [X31 + 0x10]
	0x03AB40A0 ADRP X21, 0x92E000
	0x03AB40A4 LDRB W8, [X21 + 0x46D]
	0x03AB40A8 MOV X20, X1
	0x03AB40AC MOV X19, X0
	0x03AB40B0 TBNZ X8, 0x0, 0x3AB40D4
	0x03AB40B4 ADRP X0, 0x6A2000
	0x03AB40B8 LDR X0, [X0 + 0xEC0]
	0x03AB40BC BL 0x1C16CF4
	0x03AB40C0 ADRP X0, 0x6A4000
	0x03AB40C4 LDR X0, [X0 + 0x180]
	0x03AB40C8 BL 0x1C16CF4
	0x03AB40CC MOVZ W8, 0x1
	0x03AB40D0 STRB W8, [X21 + 0x46D]
	0x03AB40D4 LDR X8, [X20 + 0x1D0]
	0x03AB40D8 CBZ X8, 0x3AB414C
	0x03AB40DC LDRB W20, [X8 + 0x1A6]
	0x03AB40E0 CBZ W20, 0x3AB4138
	0x03AB40E4 ADRP X8, 0x6A2000
	0x03AB40E8 LDR X8, [X8 + 0xEC0]
	0x03AB40EC MOVZ W9, 0x1
	0x03AB40F0 STRB W9, [X19 + 0x118]
	0x03AB40F4 STRB W31, [X19 + 0x42]
	0x03AB40F8 LDR X0, [X8]
	0x03AB40FC ADRP X21, 0x6A4000
	0x03AB4100 ADD X19, X19, 0xF8
	0x03AB4104 LDR W8, [X0 + 0xE0]
	0x03AB4108 LDR X21, [X21 + 0x180]
	0x03AB410C CBNZ W8, 0x3AB4114
	0x03AB4110 BL 0x1C16DFC
	0x03AB4114 LDR X5, [X21]
	0x03AB4118 FMOV S0, W31
	0x03AB411C MOVZ W1, 0x1
	0x03AB4120 MOVZ W2, 0x1
	0x03AB4124 MOVZ W3, 0x10
	0x03AB4128 MOVZ W4, 0x1
	0x03AB412C MOV X0, X19
	0x03AB4130 MOV X6, X31
	0x03AB4134 BL 0x3A77B98
	0x03AB4138 CMP W20, 0x0
	0x03AB413C LDP X20, X19, [X31 + 0x10]
	0x03AB4140 CSET W0, NE
	0x03AB4144 LDP X30, X21, [X31], #0x20
	0x03AB4148 RET
	0x03AB414C BL 0x1C16F20
	0x03AB4150 SUB X31, X31, 0x80
	0x03AB4154 STP X30, X25, [X31 + 0x40]
	0x03AB4158 STP X24, X23, [X31 + 0x50]
	0x03AB415C STP X22, X21, [X31 + 0x60]
	0x03AB4160 STP X20, X19, [X31 + 0x70]
	0x03AB4164 LDR X22, [X0 + 0x100]
	0x03AB4168 CBZ X22, 0x3AB4278
	0x03AB416C ADRP X20, 0x643000
	0x03AB4170 LDR X20, [X20 + 0x270]
	0x03AB4174 MOV X19, X0
	0x03AB4178 MOV X21, X31
	0x03AB417C MOVZ W23, 0x20
	0x03AB4180 ADRP X24, 0x924000
	0x03AB4184 MOVZ W25, 0x1
	0x03AB4188 LDR W8, [X22 + 0x18]
	0x03AB418C CMP X21, W8, SXTW
	0x03AB4190 B.GE 0x3AB41F4
	0x03AB4194 LDRB W9, [X24 + 0xAC0]
	0x03AB4198 CBNZ W9, 0x3AB41AC
	0x03AB419C MOV X0, X20
	0x03AB41A0 BL 0x1C16CF4
	0x03AB41A4 STRB W25, [X24 + 0xAC0]
	0x03AB41A8 LDR W8, [X22 + 0x18]
	0x03AB41AC LDR X9, [X20]
	0x03AB41B0 CMP X21, X8
	0x03AB41B4 LDR X9, [X9 + 0xB8]
	0x03AB41B8 LDP V0, V1, [X9 + 0x60]
	0x03AB41BC LDP V3, V2, [X9 + 0x40]
	0x03AB41C0 STP V0, V1, [X31 + 0x20]
	0x03AB41C4 STP V3, V2, [X31]
	0x03AB41C8 B.CS 0x3AB4294
	0x03AB41CC LDP V0, V1, [X31 + 0x20]
	0x03AB41D0 LDP V2, V3, [X31]
	0x03AB41D4 ADD X8, X22, X23
	0x03AB41D8 ADD X23, X23, 0x40
	0x03AB41DC STP V0, V1, [X8 + 0x20]
	0x03AB41E0 STP V2, V3, [X8]
	0x03AB41E4 LDR X22, [X19 + 0x100]
	0x03AB41E8 ADD X21, X21, 0x1
	0x03AB41EC CBNZ X22, 0x3AB4188
	0x03AB41F0 B 0x3AB4278
	0x03AB41F4 LDR X9, [X19 + 0x110]
	0x03AB41F8 CBZ X9, 0x3AB4278
	0x03AB41FC MOV X8, X31
	0x03AB4200 MOVZ W10, 0x20
	0x03AB4204 LDR W11, [X9 + 0x18]
	0x03AB4208 CMP X8, W11, SXTW
	0x03AB420C B.GE 0x3AB4234
	0x03AB4210 CMP X8, X11
	0x03AB4214 B.CS 0x3AB4294
	0x03AB4218 ADD X9, X9, X10
	0x03AB421C STP X31, X31, [X9]
	0x03AB4220 LDR X9, [X19 + 0x110]
	0x03AB4224 ADD X10, X10, 0x10
	0x03AB4228 ADD X8, X8, 0x1
	0x03AB422C CBNZ X9, 0x3AB4204
	0x03AB4230 B 0x3AB4278
	0x03AB4234 LDR X8, [X19 + 0x108]
	0x03AB4238 CBZ X8, 0x3AB4278
	0x03AB423C MOV X20, X31
	0x03AB4240 MOVZ W9, 0x20
	0x03AB4244 LDR W10, [X8 + 0x18]
	0x03AB4248 CMP X20, W10, SXTW
	0x03AB424C B.GE 0x3AB427C
	0x03AB4250 CMP X20, X10
	0x03AB4254 B.CS 0x3AB4294
	0x03AB4258 ADD X0, X8, X9
	0x03AB425C MOV X1, X31
	0x03AB4260 ADD X20, X20, 0x1
	0x03AB4264 ADD X21, X9, 0x1C8
	0x03AB4268 BL 0x3A761B4
	0x03AB426C LDR X8, [X19 + 0x108]
	0x03AB4270 MOV X9, X21
	0x03AB4274 CBNZ X8, 0x3AB4244
	0x03AB4278 BL 0x1C16F20
	0x03AB427C LDP X20, X19, [X31 + 0x70]
	0x03AB4280 LDP X22, X21, [X31 + 0x60]
	0x03AB4284 LDP X24, X23, [X31 + 0x50]
	0x03AB4288 LDP X30, X25, [X31 + 0x40]
	0x03AB428C ADD X31, X31, 0x80
	0x03AB4290 RET
	0x03AB4294 BL 0x1C16F28
	0x03AB4298 STP X30, X19, [X31 - 0x10]!
	0x03AB429C LDRB W8, [X0 + 0x118]
	0x03AB42A0 MOVZ W9, 0xF8
	0x03AB42A4 MOV X2, X31
	0x03AB42A8 MOV X19, X0
	0x03AB42AC CMP W8, 0x0
	0x03AB42B0 MOVZ W8, 0xF0
	0x03AB42B4 CSEL X8, X8, X9, EQ
	0x03AB42B8 LDR X1, [X0, X8, LSL]
	0x03AB42BC BL 0x3A440A4
	0x03AB42C0 FMOV S0, W31
	0x03AB42C4 FMOV S1, W31
	0x03AB42C8 FMOV S2, W31
	0x03AB42CC FMOV S3, 1
	0x03AB42D0 MOVZ W1, 0x7
	0x03AB42D4 MOV X0, X19
	0x03AB42D8 MOV X2, X31
	0x03AB42DC LDP X30, X19, [X31], #0x10
	0x03AB42E0 B 0x3A44510
	0x03AB42E4 SUB X31, X31, 0xB0
	0x03AB42E8 STP X30, X1, [X31 + 0x90]
	0x03AB42EC STP X20, X19, [X31 + 0xA0]
	0x03AB42F0 LDRB W8, [X0 + 0x118]
	0x03AB42F4 MOV X19, X0
	0x03AB42F8 MOV X20, X2
	0x03AB42FC ADD X1, X31, 0x98
	0x03AB4300 CBZ W8, 0x3AB434C
	0x03AB4304 MOV X2, X20
	0x03AB4308 BL 0x3AB43B0
	0x03AB430C LDR X8, [X19 + 0xF8]
	0x03AB4310 CBZ X8, 0x3AB43AC
	0x03AB4314 LDR X0, [X20]
	0x03AB4318 LDR X9, [X8 + 0x48]
	0x03AB431C LDUR V0, [X8 + 0x38]
	0x03AB4320 LDUR V1, [X8 + 0x28]
	0x03AB4324 LDR W1, [X19 + 0xEC]
	0x03AB4328 STR X9, [X31 + 0x80]
	0x03AB432C STP V1, V0, [X31 + 0x60]
	0x03AB4330 CBZ X0, 0x3AB43AC
	0x03AB4334 LDP V0, V1, [X31 + 0x60]
	0x03AB4338 LDR X8, [X31 + 0x80]
	0x03AB433C ADD X2, X31, 0x30
	0x03AB4340 STP V0, V1, [X31 + 0x30]
	0x03AB4344 STR X8, [X31 + 0x50]
	0x03AB4348 B 0x3AB4394
	0x03AB434C MOV X0, X19
	0x03AB4350 MOV X2, X20
	0x03AB4354 BL 0x3AB44A8
	0x03AB4358 LDR X8, [X19 + 0xF0]
	0x03AB435C CBZ X8, 0x3AB43AC
	0x03AB4360 LDR X0, [X20]
	0x03AB4364 LDR X9, [X8 + 0x48]
	0x03AB4368 LDUR V0, [X8 + 0x38]
	0x03AB436C LDUR V1, [X8 + 0x28]
	0x03AB4370 LDR W1, [X19 + 0xEC]
	0x03AB4374 STR X9, [X31 + 0x80]
	0x03AB4378 STP V1, V0, [X31 + 0x60]
	0x03AB437C CBZ X0, 0x3AB43AC
	0x03AB4380 LDP V0, V1, [X31 + 0x60]
	0x03AB4384 LDR X8, [X31 + 0x80]
	0x03AB4388 ADD X2, X31, 0x0
	0x03AB438C STP V0, V1, [X31]
	0x03AB4390 STR X8, [X31 + 0x20]
	0x03AB4394 MOV X3, X31
	0x03AB4398 BL 0x3C4FCFC
	0x03AB439C LDP X20, X19, [X31 + 0xA0]
	0x03AB43A0 LDR X30, [X31 + 0x90]
	0x03AB43A4 ADD X31, X31, 0xB0
	0x03AB43A8 RET
	0x03AB43AC BL 0x1C16F20
	0x03AB43B0 STR X30, [X31 - 0x30]!
	0x03AB43B4 STP X22, X21, [X31 + 0x10]
	0x03AB43B8 STP X20, X19, [X31 + 0x20]
	0x03AB43BC ADRP X22, 0x92E000
	0x03AB43C0 ADRP X21, 0x667000
	0x03AB43C4 LDRB W8, [X22 + 0x46E]
	0x03AB43C8 LDR X21, [X21 + 0x8F8]
	0x03AB43CC MOV X20, X2
	0x03AB43D0 MOV X19, X1
	0x03AB43D4 TBNZ X8, 0x0, 0x3AB4410
	0x03AB43D8 ADRP X0, 0x667000
	0x03AB43DC LDR X0, [X0 + 0x8F8]
	0x03AB43E0 BL 0x1C16CF4
	0x03AB43E4 ADRP X0, 0x6A2000
	0x03AB43E8 LDR X0, [X0 + 0x8D0]
	0x03AB43EC BL 0x1C16CF4
	0x03AB43F0 ADRP X0, 0x69C000
	0x03AB43F4 LDR X0, [X0 + 0xC80]
	0x03AB43F8 BL 0x1C16CF4
	0x03AB43FC ADRP X0, 0x6A1000
	0x03AB4400 LDR X0, [X0 + 0xF60]
	0x03AB4404 BL 0x1C16CF4
	0x03AB4408 MOVZ W8, 0x1
	0x03AB440C STRB W8, [X22 + 0x46E]
	0x03AB4410 LDR X0, [X21]
	0x03AB4414 ADRP X21, 0x6A1000
	0x03AB4418 ADRP X22, 0x6A2000
	0x03AB441C LDR X20, [X20]
	0x03AB4420 LDR W8, [X0 + 0xE0]
	0x03AB4424 LDR X21, [X21 + 0xF60]
	0x03AB4428 LDR X22, [X22 + 0x8D0]
	0x03AB442C CBNZ W8, 0x3AB4434
	0x03AB4430 BL 0x1C16DFC
	0x03AB4434 LDR X1, [X21]
	0x03AB4438 ADRP X21, 0x69C000
	0x03AB443C LDR X21, [X21 + 0xC80]
	0x03AB4440 MOVZ W2, 0x1
	0x03AB4444 MOV X0, X20
	0x03AB4448 MOV X3, X31
	0x03AB444C BL 0x39E9618
	0x03AB4450 LDR X0, [X22]
	0x03AB4454 LDR W8, [X0 + 0xE0]
	0x03AB4458 CBNZ W8, 0x3AB4460
	0x03AB445C BL 0x1C16DFC
	0x03AB4460 MOV X0, X20
	0x03AB4464 BL 0x3AB4A08
	0x03AB4468 LDR X0, [X21]
	0x03AB446C LDR W8, [X0 + 0xE0]
	0x03AB4470 CBNZ W8, 0x3AB4478
	0x03AB4474 BL 0x1C16DFC
	0x03AB4478 MOV X0, X19
	0x03AB447C MOV X1, X20
	0x03AB4480 MOV X2, X31
	0x03AB4484 BL 0x3C58FE4
	0x03AB4488 CBZ X20, 0x3AB44A4
	0x03AB448C MOV X0, X20
	0x03AB4490 LDP X20, X19, [X31 + 0x20]
	0x03AB4494 LDP X22, X21, [X31 + 0x10]
	0x03AB4498 MOV X1, X31
	0x03AB449C LDR X30, [X31], #0x30
	0x03AB44A0 B 0x3C4C310
	0x03AB44A4 BL 0x1C16F20
	0x03AB44A8 STR D10, [X31 - 0x80]!
	0x03AB44AC STP D9, D8, [X31 + 0x10]
	0x03AB44B0 STP X29, X30, [X31 + 0x20]
	0x03AB44B4 STP X28, X27, [X31 + 0x30]
	0x03AB44B8 STP X26, X25, [X31 + 0x40]
	0x03AB44BC STP X24, X23, [X31 + 0x50]
	0x03AB44C0 STP X22, X21, [X31 + 0x60]
	0x03AB44C4 STP X20, X19, [X31 + 0x70]

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Subtract X31, X31, 1360
	014 NotImplemented "Instruction MRS not yet implemented."
	015 Move [X31+8], X8
	016 Move X8, [X8+40]
	017 Move X24, 0x930000
	018 Move X21, X5
	019 Move X20, X4
	020 Move [X31+1352], X8
	021 Move W8, [X24+1126]
	022 Move X23, X2
	023 Move X22, X1
	024 Move X19, X0
	025 Move [X31+944], X3
	026 Move TEMP, X8
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {65}
	030 Move X0, 0x6A5000
	031 Move X0, [X0+328]
	032 Call 0x1C17CF4
	033 Move X0, 0x6A5000
	034 Move X0, [X0+400]
	035 Call 0x1C17CF4
	036 Move X0, 0x6A6000
	037 Move X0, [X0+152]
	038 Call 0x1C17CF4
	039 Move X0, 0x6A6000
	040 Move X0, [X0+160]
	041 Call 0x1C17CF4
	042 Move X0, 0x6A6000
	043 Move X0, [X0+168]
	044 Call 0x1C17CF4
	045 Move X0, 0x6A6000
	046 Move X0, [X0+176]
	047 Call 0x1C17CF4
	048 Move X0, 0x6A6000
	049 Move X0, [X0+184]
	050 Call 0x1C17CF4
	051 Move X0, 0x6A6000
	052 Move X0, [X0+192]
	053 Call 0x1C17CF4
	054 Move X0, 0x6A1000
	055 Move X0, [X0+4088]
	056 Call 0x1C17CF4
	057 Move X0, 0x6A6000
	058 Move X0, [X0+200]
	059 Call 0x1C17CF4
	060 Move X0, 0x6A6000
	061 Move X0, [X0+208]
	062 Call 0x1C17CF4
	063 Move W8, 1
	064 Move [X24+1126], W8
	065 NotImplemented "Instruction MOVI not yet implemented."
	066 Move [X31+904], X31
	067 Move [X31+896], W31
	068 Move [X31+912], V0
	069 Move [X31+920], V0
	070 Move [X31+864], V0
	071 Move [X31+872], V0
	072 Move [X31+832], V0
	073 Move [X31+840], V0
	074 Move [X31+51], V0
	075 Move [X31+808], X31
	076 Compare X22, 0
	077 JumpIfEqual {515}
	078 Move X8, 0x6A6000
	079 Move X9, 0x6A6000
	080 Move X8, [X8+208]
	081 Move X9, [X9+168]
	082 Move X3, [X19+224]
	083 Move X25, 0x6A6000
	084 Move X1, [X8]
	085 Move X4, [X9]
	086 Move X24, 0x6A6000
	087 Move X25, [X25+192]
	088 Move X24, [X24+160]
	089 Add X8, X31, 48
	090 Add X2, X31, 904
	091 Move X0, X22
	092 Call 0x2241F24, X0, X1, X2, X3
	093 Move V0, [X31+48]
	094 Move V1, [X31+64]
	095 Move [X31+912], V0
	096 Move [X31+920], V1
	097 Move X8, [X19+232]
	098 Compare X8, 0
	099 JumpIfEqual {516}
	100 Move X10, [X21]
	101 Compare X10, 0
	102 JumpIfEqual {519}
	103 Move X9, [X31+904]
	104 Move X11, [X8+64]
	105 Move [X10+56], X11
	106 Compare X9, 0
	107 JumpIfEqual {522}
	108 Move X29, 0x6A5000
	109 Move X26, 0x6A1000
	110 Move X29, [X29+328]
	111 Move X26, [X26+4088]
	112 Move X24, X31
	113 Add X28, X20, 240
	114 Move [X9+16], X11
	115 Move X0, X8
	116 Move X1, X31
	117 Call DeferredLights.get_GBufferSliceCount, X0
	118 NotImplemented "Instruction CMP not yet implemented."
	119 Move W8, [X28+48]
	120 Move V1, [X28+16]
	121 Move V0, [X28+32]
	122 Move V2, [X28]
	123 Move [X31+896], W8
	124 Move [X31+864], V1
	125 Move [X31+872], V0
	126 Move [X31+53], V2
	127 Add X0, X31, 848
	128 Move W1, W31
	129 Move X2, X31
	130 Call RenderTextureDescriptor.set_depthBufferBits, X0, X1
	131 Move [X31+872], W31
	132 Move X0, [X19+232]
	133 Compare X0, 0
	134 JumpIfEqual {503}
	135 Move X1, X31
	136 Call DeferredLights.get_GBufferLightingIndex, X0
	137 NotImplemented "Instruction CMP not yet implemented."
	138 Move X8, [X21]
	139 Compare X8, 0
	140 JumpIfEqual {508}
	141 Move X8, [X8+56]
	142 Compare X8, 0
	143 JumpIfEqual {510}
	144 Move W9, [X8+24]
	145 NotImplemented "Instruction CMP not yet implemented."
	146 Add X8, X8, X24
	147 Move [X8+32], X23
	148 Move X0, [X19+232]
	149 Compare X0, 0
	150 JumpIfEqual {506}
	151 Move W1, W24
	152 Move X2, X31
	153 Call DeferredLights.GetGBufferFormat, X0, X1
	154 Move W1, W0
	155 Add X0, X31, 848
	156 Move X2, X31
	157 Call RenderTextureDescriptor.set_graphicsFormat, X0, X1
	158 Move X8, [X21]
	159 Compare X8, 0
	160 JumpIfEqual {509}
	161 Move X27, [X8+56]
	162 Move V0, [X31+848]
	163 Move V1, [X31+864]
	164 Move V2, [X31+55]
	165 Move W8, [X31+896]
	166 Move X0, [X29]
	167 Move [X31+48], V0
	168 Move [X31+56], V1
	169 Move [X31+5], V2
	170 Move [X31+96], W8
	171 Move W8, [X0+224]
	172 Compare W8, 0
	173 JumpIfNotEqual {176}
	174 Call 0x1C17DFC
	175 Move X0, [X29]
	176 Move X8, [X0+184]
	177 Move X8, [X8]
	178 Compare X8, 0
	179 JumpIfEqual {513}
	180 Move W9, [X8+24]
	181 NotImplemented "Instruction CMP not yet implemented."
	182 Move X0, [X26]
	183 Add X8, X8, X24
	184 Move X25, [X8+32]
	185 Move W9, [X0+224]
	186 Compare W9, 0
	187 JumpIfNotEqual {189}
	188 Call 0x1C17DFC
	189 Move V0, [X31+48]
	190 Move V1, [X31+64]
	191 Move V2, [X31+5]
	192 Move W8, [X31+96]
	193 Move [X31+752], V0
	194 Move [X31+760], V1
	195 Move [X31+49], V2
	196 Move [X31+800], W8
	197 Add X1, X31, 752
	198 Move W3, 1
	199 Move W5, 1
	200 Move X0, X22
	201 Move X2, X25
	202 Move W4, W31
	203 Move X6, X31
	204 Call UniversalRenderer.CreateRenderGraphTexture, X0, X1, X2, X3, X4, X5
	205 Compare X27, 0
	206 JumpIfEqual {514}
	207 Move W8, [X27+24]
	208 NotImplemented "Instruction CMP not yet implemented."
	209 Add X8, X27, X24
	210 Move [X8+32], X0
	211 Move X8, [X31+904]
	212 Compare X8, 0
	213 JumpIfEqual {500}
	214 Move X9, [X21]
	215 Compare X9, 0
	216 JumpIfEqual {502}
	217 Move X9, [X9+56]
	218 Compare X9, 0
	219 JumpIfEqual {499}
	220 Move W10, [X9+24]
	221 NotImplemented "Instruction CMP not yet implemented."
	222 Move X25, [X8+16]
	223 Add X8, X9, X24
	224 Add X1, X8, 32
	225 Add X0, X31, 912
	226 Move W2, W24
	227 Move X3, X31
	228 Call RenderGraphBuilder.UseColorBuffer, X0, X1, X2
	229 Compare X25, 0
	230 JumpIfEqual {504}
	231 Move W8, [X25+24]
	232 NotImplemented "Instruction CMP not yet implemented."
	233 Add X8, X25, X24
	234 Move [X8+32], X0
	235 Move X8, [X19+232]
	236 Add X24, X24, 1
	237 Compare X8, 0
	238 JumpIfNotEqual {115}
	239 Call 0x1C17F20
	240 Move X23, [X31+904]
	241 Compare X23, 0
	242 JumpIfEqual {526}
	243 Move X8, [X19+232]
	244 Move [X23+728], X8
	245 Move X25, 0x6A6000
	246 Move X26, 0x6A6000
	247 Move X25, [X25+160]
	248 Move X26, [X26+192]
	249 Add X0, X31, 912
	250 Add X1, X31, 944
	251 Move W2, 2
	252 Move X3, X31
	253 Call RenderGraphBuilder.UseDepthBuffer, X0, X1, X2
	254 Move X24, 0x6A5000
	255 Move X24, [X24+400]
	256 Move [X23+24], X0
	257 Move X23, [X31+904]
	258 Add X0, X31, 48
	259 Move W2, 696
	260 Move X1, X20
	261 Call 0x3EB2AC0
	262 Compare X23, 0
	263 JumpIfEqual {527}
	264 Add X0, X23, 32
	265 Add X1, X31, 48
	266 Move W2, 696
	267 Call 0x3EB2AC0
	268 Add X0, X31, 912
	269 Move W1, W31
	270 Move X2, X31
	271 Call RenderGraphBuilder.AllowPassCulling, X0, X1
	272 Move X23, [X31+904]
	273 Move X8, [X19+256]
	274 Move V0, [X19+15]
	275 Move [X31+32], X8
	276 Move [X31+1], V0
	277 Compare X23, 0
	278 JumpIfEqual {528}
	279 Move X8, [X31+32]
	280 Move V0, [X31+1]
	281 Move [X23+752], X8
	282 Move [X23+46], V0
	283 Move X0, [X24]
	284 Move W8, [X0+224]
	285 Compare W8, 0
	286 JumpIfNotEqual {291}
	287 Call 0x1C17DFC
	288 Move X23, [X31+904]
	289 Compare X23, 0
	290 JumpIfEqual {529}
	291 Move X8, [X24]
	292 Move W3, [X20+396]
	293 Add X2, X23, 32
	294 Move X8, [X8+184]
	295 Move W1, [X8+20]
	296 Add X8, X31, 952
	297 Move X0, X19
	298 Move X4, X31
	299 Call ScriptableRenderPass.CreateDrawingSettings, X0, X1, X2, X3
	300 Add X0, X31, 1152
	301 Add X1, X31, 952
	302 Move W2, 196
	303 Call 0x3EB2AC0
	304 Add X0, X23, 760
	305 Add X1, X31, 1152
	306 Move W2, 196
	307 Call 0x3EB2AC0
	308 Move X8, [X26]
	309 Move W9, [X8+224]
	310 Compare W9, 0
	311 JumpIfNotEqual {315}
	312 Move X0, X8
	313 Call 0x1C17DFC
	314 Move X8, [X26]
	315 Move X9, [X8+184]
	316 Move X23, [X9+8]
	317 Compare X23, 0
	318 JumpIfNotEqual {341}
	319 Move W9, [X8+224]
	320 Compare W9, 0
	321 JumpIfNotEqual {325}
	322 Move X0, X8
	323 Call 0x1C17DFC
	324 Move X8, [X26]
	325 Move X9, 0x6A5000
	326 Move X8, [X8+184]
	327 Move X9, [X9+152]
	328 Move X24, [X8]
	329 Move X0, [X9]
	330 Call 0x1C17F10
	331 Move X8, 0x6A5000
	332 Move X8, [X8+176]
	333 Move X23, X0
	334 Move X2, [X8]
	335 Move X1, X24
	336 Move X3, X31
	337 Call 0x25C88AC, X0, X1, X2
	338 Move X8, [X26]
	339 Move X8, [X8+184]
	340 Move [X8+8], X23
	341 Move X2, [X25]
	342 Add X0, X31, 912
	343 Move X1, X23
	344 Call 0x224207C, X0, X1
	345 Add X0, X31, 912
	346 Move X1, X31
	347 Call RenderGraphBuilder.Dispose, X0
	348 Move X8, 0x6A5000
	349 Move X8, [X8+200]
	350 Move X3, [X19+224]
	351 Add X2, X31, 808
	352 Move X0, X22
	353 Move X1, [X8]
	354 Move X8, 0x6A5000
	355 Move X8, [X8+168]
	356 Move X4, [X8]
	357 Add X8, X31, 48
	358 Call 0x2241F24, X0, X1, X2, X3
	359 Move V0, [X31+48]
	360 Move V1, [X31+64]
	361 Move [X31+816], V0
	362 Move [X31+824], V1
	363 Move X8, [X19+232]
	364 Compare X8, 0
	365 JumpIfEqual {518}
	366 Move X9, [X21]
	367 Compare X9, 0
	368 JumpIfEqual {521}
	369 Move X10, [X31+808]
	370 Move X11, [X8+64]
	371 Move [X9+56], X11
	372 Compare X10, 0
	373 JumpIfEqual {523}
	374 Move X22, X31
	375 Move W23, 32
	376 Move [X10+16], X11
	377 Move X0, X8
	378 Move X1, X31
	379 Call DeferredLights.get_GBufferSliceCount, X0
	380 Move X24, [X31+808]
	381 NotImplemented "Instruction CMP not yet implemented."
	382 Compare X24, 0
	383 JumpIfEqual {496}
	384 Move X8, [X21]
	385 Compare X8, 0
	386 JumpIfEqual {497}
	387 Move X8, [X8+56]
	388 Compare X8, 0
	389 JumpIfEqual {493}
	390 Move W9, [X8+24]
	391 NotImplemented "Instruction CMP not yet implemented."
	392 Move X24, [X24+16]
	393 Add X1, X8, X23
	394 Add X0, X31, 816
	395 Move W2, W22
	396 Move X3, X31
	397 Call RenderGraphBuilder.UseColorBuffer, X0, X1, X2
	398 Compare X24, 0
	399 JumpIfEqual {494}
	400 Move W8, [X24+24]
	401 NotImplemented "Instruction CMP not yet implemented."
	402 Add X8, X24, X22
	403 Move [X8+32], X0
	404 Move X8, [X19+232]
	405 Add X22, X22, 1
	406 Add X23, X23, 8
	407 Compare X8, 0
	408 JumpIfNotEqual {377}
	409 Call 0x1C17F20
	410 Add X0, X31, 816
	411 Add X1, X31, 944
	412 Move W2, 1
	413 Move X3, X31
	414 Call RenderGraphBuilder.UseDepthBuffer, X0, X1, X2
	415 Compare X24, 0
	416 JumpIfEqual {524}
	417 Move [X24+24], X0
	418 Move X21, [X31+808]
	419 Add X0, X31, 48
	420 Move W2, 696
	421 Move X1, X20
	422 Call 0x3EB2AC0
	423 Compare X21, 0
	424 JumpIfEqual {525}
	425 Add X0, X21, 32
	426 Add X1, X31, 48
	427 Move W2, 696
	428 Call 0x3EB2AC0
	429 Move X8, [X19+232]
	430 Move [X21+728], X8
	431 Add X0, X31, 816
	432 Move W1, W31
	433 Move X2, X31
	434 Call RenderGraphBuilder.AllowPassCulling, X0, X1
	435 Move X8, [X26]
	436 Move W9, [X8+224]
	437 Compare W9, 0
	438 JumpIfNotEqual {442}
	439 Move X0, X8
	440 Call 0x1C17DFC
	441 Move X8, [X26]
	442 Move X9, [X8+184]
	443 Move X19, [X9+16]
	444 Compare X19, 0
	445 JumpIfNotEqual {468}
	446 Move W9, [X8+224]
	447 Compare W9, 0
	448 JumpIfNotEqual {452}
	449 Move X0, X8
	450 Call 0x1C17DFC
	451 Move X8, [X26]
	452 Move X9, 0x6A5000
	453 Move X8, [X8+184]
	454 Move X9, [X9+152]
	455 Move X20, [X8]
	456 Move X0, [X9]
	457 Call 0x1C17F10
	458 Move X8, 0x6A5000
	459 Move X8, [X8+184]
	460 Move X19, X0
	461 Move X2, [X8]
	462 Move X1, X20
	463 Move X3, X31
	464 Call 0x25C88AC, X0, X1, X2
	465 Move X8, [X26]
	466 Move X8, [X8+184]
	467 Move [X8+16], X19
	468 Move X2, [X25]
	469 Add X0, X31, 816
	470 Move X1, X19
	471 Call 0x224207C, X0, X1
	472 Add X0, X31, 816
	473 Move X1, X31
	474 Call RenderGraphBuilder.Dispose, X0
	475 Move X8, [X31+8]
	476 Move X8, [X8+40]
	477 Move X9, [X31+1352]
	478 NotImplemented "Instruction CMP not yet implemented."
	479 Add X31, X31, 1360
	480 Move X20, [X31+80]
	481 Move X19, [X31+88]
	482 Move X22, [X31+64]
	483 Move X21, [X31+72]
	484 Move X24, [X31+48]
	485 Move X23, [X31+56]
	486 Move X26, [X31+32]
	487 Move X25, [X31+40]
	488 Move X28, [X31+16]
	489 Move X27, [X31+24]
	490 Move X29, [X31+96]
	491 Move X30, [X31+104]
	492 Return 
	493 Call 0x1C17F20
	494 Call 0x1C17F20
	495 Call 0x1C17F28
	496 Call 0x1C17F20
	497 Call 0x1C17F20
	498 Call 0x1C17F28
	499 Call 0x1C17F20
	500 Call 0x1C17F20
	501 Call 0x1C17F28
	502 Call 0x1C17F20
	503 Call 0x1C17F20
	504 Call 0x1C17F20
	505 Call 0x1C17F28
	506 Call 0x1C17F20
	507 Call 0x1C17F28
	508 Call 0x1C17F20
	509 Call 0x1C17F20
	510 Call 0x1C17F20
	511 Call 0x1C17F28
	512 Call 0x1C17F28
	513 Call 0x1C17F20
	514 Call 0x1C17F20
	515 Call 0x1C17F20
	516 Move X26, X25
	517 Call 0x1C17F20
	518 Call 0x1C17F20
	519 Move X26, X25
	520 Call 0x1C17F20
	521 Call 0x1C17F20
	522 Call 0x1C17F20
	523 Call 0x1C17F20
	524 Call 0x1C17F20
	525 Call 0x1C17F20
	526 Call 0x1C17F20
	527 Call 0x1C17F20
	528 Call 0x1C17F20
	529 Call 0x1C17F20
	530 Call 0x3EB2B20
	531 Move X23, X0
	532 Move X25, X24
	533 Move X25, 0x6A5000
	534 Move X26, 0x6A5000
	535 Move X25, [X25+160]
	536 Move X26, [X26+192]
	537 Move X23, X0
	538 NotImplemented "Instruction CMP not yet implemented."
	539 Move X0, X23
	540 Call 0x3EB2AD0
	541 Move X24, [X0]
	542 Call 0x3EB2AE0
	543 Add X0, X31, 912
	544 Move X1, X31
	545 Call RenderGraphBuilder.Dispose, X0
	546 Compare X24, 0
	547 JumpIfEqual {348}
	548 Move X0, X24
	549 Call 0x1C17F18
	550 Move X24, X31
	551 Move X23, X0
	552 Add X0, X31, 912
	553 Move X1, X31
	554 Call RenderGraphBuilder.Dispose, X0
	555 Compare X24, 0
	556 JumpIfEqual {579}
	557 Move X0, X24
	558 Call 0x1C17F18
	559 Move X23, X0
	560 NotImplemented "Instruction CMP not yet implemented."
	561 Move X0, X23
	562 Call 0x3EB2AD0
	563 Move X19, [X0]
	564 Call 0x3EB2AE0
	565 Add X0, X31, 816
	566 Move X1, X31
	567 Call RenderGraphBuilder.Dispose, X0
	568 Compare X19, 0
	569 JumpIfEqual {475}
	570 Move X0, X19
	571 Call 0x1C17F18
	572 Move X19, X31
	573 Move X23, X0
	574 Add X0, X31, 816
	575 Move X1, X31
	576 Call RenderGraphBuilder.Dispose, X0
	577 Compare X19, 0
	578 JumpIfNotEqual {581}
	579 Move X0, X23
	580 Call 0x1D2D690
	581 Move X0, X19
	582 Call 0x1C17F18
	583 Call 0x1991590

Method: System.Void .cctor()

Disassembly:
	0x03AB44C8 SUB X31, X31, 0x440
	0x03AB44CC MRS X27, 0xC000
	0x03AB44D0 LDR X8, [X27 + 0x28]
	0x03AB44D4 ADRP X21, 0x92E000
	0x03AB44D8 MOV X20, X2
	0x03AB44DC MOV X22, X1
	0x03AB44E0 STR X8, [X31 + 0x438]
	0x03AB44E4 LDRB W8, [X21 + 0x470]
	0x03AB44E8 MOV X19, X0
	0x03AB44EC TBNZ X8, 0x0, 0x3AB454C
	0x03AB44F0 ADRP X0, 0x667000
	0x03AB44F4 LDR X0, [X0 + 0x8F8]
	0x03AB44F8 BL 0x1C16CF4
	0x03AB44FC ADRP X0, 0x6A0000
	0x03AB4500 LDR X0, [X0 + 0xA8]
	0x03AB4504 BL 0x1C16CF4
	0x03AB4508 ADRP X0, 0x6A2000
	0x03AB450C LDR X0, [X0 + 0xEC0]
	0x03AB4510 BL 0x1C16CF4
	0x03AB4514 ADRP X0, 0x668000
	0x03AB4518 LDR X0, [X0 + 0x8A8]
	0x03AB451C BL 0x1C16CF4
	0x03AB4520 ADRP X0, 0x6A3000
	0x03AB4524 LDR X0, [X0 + 0xA88]
	0x03AB4528 BL 0x1C16CF4
	0x03AB452C ADRP X0, 0x6A1000
	0x03AB4530 LDR X0, [X0 + 0xF38]
	0x03AB4534 BL 0x1C16CF4
	0x03AB4538 ADRP X0, 0x6A1000
	0x03AB453C LDR X0, [X0 + 0xF60]
	0x03AB4540 BL 0x1C16CF4
	0x03AB4544 MOVZ W8, 0x1
	0x03AB4548 STRB W8, [X21 + 0x470]
	0x03AB454C MOVI V0.2D, 0x0
	0x03AB4550 ADD X0, X31, 0x318
	0x03AB4554 MOVZ W2, 0x120
	0x03AB4558 MOV W1, W31
	0x03AB455C STR W31, [X31 + 0x210]
	0x03AB4560 STP V0, V0, [X31 + 0x1F0]
	0x03AB4564 STP V0, V0, [X31 + 0x1D0]
	0x03AB4568 STP V0, V0, [X31 + 0x1B0]
	0x03AB456C STR V0, [X31 + 0x1A]
	0x03AB4570 STRB W31, [X31 + 0x198]
	0x03AB4574 BL 0x3EB1B10
	0x03AB4578 LDRSW X23, [X20 + 0x228]
	0x03AB457C ADDS W31, W23, 0x1
	0x03AB4580 B.EQ 0x3AB48E8
	0x03AB4584 ADRP X26, 0x6A0000
	0x03AB4588 LDR X26, [X26 + 0xA8]
	0x03AB458C LDR X8, [X20 + 0x238]
	0x03AB4590 ADRP X28, 0x6A2000
	0x03AB4594 LDP X24, X25, [X20 + 0x8]
	0x03AB4598 LDR X28, [X28 + 0xEC0]
	0x03AB459C MOVZ W9, 0x74
	0x03AB45A0 MADD X1, X23, X9, X8
	0x03AB45A4 ADD X0, X31, 0x1A0
	0x03AB45A8 MOVZ W2, 0x74
	0x03AB45AC BL 0x3EB1B30
	0x03AB45B0 LDR X1, [X26]
	0x03AB45B4 LDR X21, [X20]
	0x03AB45B8 MOVZ W0, 0xE
	0x03AB45BC BL 0x2235BC0
	0x03AB45C0 MOV X2, X0
	0x03AB45C4 ADD X0, X31, 0x198
	0x03AB45C8 MOV X1, X21
	0x03AB45CC MOV X3, X31
	0x03AB45D0 BL 0x39B1DB0
	0x03AB45D4 LDR X0, [X28]
	0x03AB45D8 LDR V10, [X20 + 0x1DC]
	0x03AB45DC LDR V8, [X20 + 0x1E0]
	0x03AB45E0 LDR V9, [X20 + 0x1E4]
	0x03AB45E4 LDR W8, [X0 + 0xE0]
	0x03AB45E8 CBNZ W8, 0x3AB45F0
	0x03AB45EC BL 0x1C16DFC
	0x03AB45F0 MOV X0, X21
	0x03AB45F4 MOV V0.16B, V10.16B
	0x03AB45F8 MOV V1.16B, V8.16B
	0x03AB45FC MOV V2.16B, V9.16B
	0x03AB4600 MOV X1, X31
	0x03AB4604 BL 0x3A774CC
	0x03AB4608 ADD X0, X20, 0x18
	0x03AB460C ADD X8, X31, 0x150
	0x03AB4610 MOV W1, W31
	0x03AB4614 MOV X2, X31
	0x03AB4618 BL 0x3A92B70
	0x03AB461C LDP V0, V1, [X31 + 0x150]
	0x03AB4620 LDP V2, V3, [X31 + 0x170]
	0x03AB4624 STP V0, V1, [X31 + 0x110]
	0x03AB4628 STP V2, V3, [X31 + 0x130]
	0x03AB462C ADD X1, X31, 0x110
	0x03AB4630 MOV X0, X21
	0x03AB4634 MOV X2, X31
	0x03AB4638 BL 0x3A77564
	0x03AB463C ADD X0, X31, 0x318
	0x03AB4640 MOVZ W4, 0x2
	0x03AB4644 MOV X1, X24
	0x03AB4648 MOV X2, X25
	0x03AB464C MOV W3, W23
	0x03AB4650 MOV X5, X31
	0x03AB4654 BL 0x3C5A564
	0x03AB4658 ADRP X8, 0x668000
	0x03AB465C LDR X8, [X8 + 0x8A8]
	0x03AB4660 LDR X0, [X8]
	0x03AB4664 LDR W8, [X0 + 0xE0]
	0x03AB4668 CBNZ W8, 0x3AB4670
	0x03AB466C BL 0x1C16DFC
	0x03AB4670 MOV X0, X31
	0x03AB4674 BL 0x3A8AB60
	0x03AB4678 CBZ X0, 0x3AB4938
	0x03AB467C LDRB W1, [X0 + 0xEC]
	0x03AB4680 STR X27, [X31 + 0x8]
	0x03AB4684 ADD X0, X31, 0x318
	0x03AB4688 MOV X2, X31
	0x03AB468C BL 0x3C5A540
	0x03AB4690 LDR W8, [X19 + 0xE8]
	0x03AB4694 ADRP X25, 0x667000
	0x03AB4698 LDR X25, [X25 + 0x8F8]
	0x03AB469C CMP W8, 0x1

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+48], X30
	003 Move [X31+56], X27
	004 Move [X31+64], X26
	005 Move [X31+72], X25
	006 Move [X31+80], X24
	007 Move [X31+88], X23
	008 Move [X31+96], X22
	009 Move [X31+104], X21
	010 Move [X31+112], X20
	011 Move [X31+120], X19
	012 Move X26, 0x92F000
	013 Move X27, 0x6A4000
	014 Move X19, 0x6A4000
	015 Move X25, 0x6A5000
	016 Move X24, 0x6A5000
	017 Move X23, 0x6A5000
	018 Move X22, 0x6A5000
	019 Move X21, 0x6A5000
	020 Move X20, 0x6A5000
	021 Move X27, [X27+520]
	022 Move X19, [X19+400]
	023 Move X25, [X25+216]
	024 Move W8, [X26+1127]
	025 Move X24, [X24+224]
	026 Move X23, [X23+232]
	027 Move X22, [X22+240]
	028 Move X21, [X21+248]
	029 Move X20, [X20+256]
	030 Move TEMP, X8
	031 And TEMP, TEMP, 1
	032 Compare TEMP, 1
	033 JumpIfEqual {60}
	034 Move X0, 0x6A4000
	035 Move X0, [X0+400]
	036 Call 0x1C17CF4
	037 Move X0, 0x6A5000
	038 Move X0, [X0+224]
	039 Call 0x1C17CF4
	040 Move X0, 0x6A5000
	041 Move X0, [X0+248]
	042 Call 0x1C17CF4
	043 Move X0, 0x6A4000
	044 Move X0, [X0+520]
	045 Call 0x1C17CF4
	046 Move X0, 0x6A5000
	047 Move X0, [X0+216]
	048 Call 0x1C17CF4
	049 Move X0, 0x6A5000
	050 Move X0, [X0+256]
	051 Call 0x1C17CF4
	052 Move X0, 0x6A5000
	053 Move X0, [X0+240]
	054 Call 0x1C17CF4
	055 Move X0, 0x6A5000
	056 Move X0, [X0+232]
	057 Call 0x1C17CF4
	058 Move W8, 1
	059 Move [X26+1127], W8
	060 Move X0, [X27]
	061 Move X1, X31
	062 Call Shader.PropertyToID, X0
	063 Move X8, [X19]
	064 Move X2, X31
	065 Move X8, [X8+184]
	066 Move [X8], W0
	067 Move X1, [X25]
	068 Add X0, X31, 40
	069 Move [X31+40], W31
	070 Call ShaderTagId..ctor, X0, X1
	071 Move X8, [X19]
	072 Move W9, [X31+40]
	073 Add X0, X31, 32
	074 Move X2, X31
	075 Move X8, [X8+184]
	076 Move [X8+4], W9
	077 Move X1, [X24]
	078 Move [X31+32], W31
	079 Call ShaderTagId..ctor, X0, X1
	080 Move X8, [X19]
	081 Move W9, [X31+32]
	082 Add X0, X31, 24
	083 Move X2, X31
	084 Move X8, [X8+184]
	085 Move [X8+8], W9
	086 Move X1, [X23]
	087 Move [X31+24], W31
	088 Call ShaderTagId..ctor, X0, X1
	089 Move X8, [X19]
	090 Move W9, [X31+24]
	091 Add X0, X31, 16
	092 Move X2, X31
	093 Move X8, [X8+184]
	094 Move [X8+12], W9
	095 Move X1, [X22]
	096 Move [X31+16], W31
	097 Call ShaderTagId..ctor, X0, X1
	098 Move X8, [X19]
	099 Move W9, [X31+16]
	100 Add X0, X31, 8
	101 Move X2, X31
	102 Move X8, [X8+184]
	103 Move [X8+16], W9
	104 Move X1, [X21]
	105 Move [X31+8], W31
	106 Call ShaderTagId..ctor, X0, X1
	107 Move X8, [X19]
	108 Move W9, [X31+8]
	109 Add X0, X31, 0
	110 Move X2, X31
	111 Move X8, [X8+184]
	112 Move [X8+20], W9
	113 Move X1, [X20]
	114 Move [X31], W31
	115 Call ShaderTagId..ctor, X0, X1
	116 Move X8, [X19]
	117 Move W9, [X31]
	118 Move X20, [X31+112]
	119 Move X19, [X31+120]
	120 Move X22, [X31+96]
	121 Move X21, [X31+104]
	122 Move X8, [X8+184]
	123 Move X24, [X31+80]
	124 Move X23, [X31+88]
	125 Move X26, [X31+64]
	126 Move X25, [X31+72]
	127 Move X30, [X31+48]
	128 Move X27, [X31+56]
	129 Move [X8+24], W9
	130 Add X31, X31, 128
	131 Return 

