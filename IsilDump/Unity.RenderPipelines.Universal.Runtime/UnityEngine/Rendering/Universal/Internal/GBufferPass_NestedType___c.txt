Type: UnityEngine.Rendering.Universal.Internal.GBufferPass/<>c

Method: System.Void .cctor()

Disassembly:
	0x03AB46A0 B.LT 0x3AB4808
	0x03AB46A4 ADRP X26, 0x6A3000
	0x03AB46A8 LDR X26, [X26 + 0xA88]
	0x03AB46AC MOV X28, X31
	0x03AB46B0 MOV X29, X31
	0x03AB46B4 ADD X24, X20, 0x250
	0x03AB46B8 LDR X8, [X19 + 0x108]
	0x03AB46BC CBZ X8, 0x3AB4928
	0x03AB46C0 LDR W9, [X8 + 0x18]
	0x03AB46C4 CMP X29, X9
	0x03AB46C8 B.CS 0x3AB4934
	0x03AB46CC ADD X8, X8, X28
	0x03AB46D0 ADD X1, X8, 0xEC
	0x03AB46D4 ADD X0, X31, 0x218
	0x03AB46D8 MOVZ W2, 0xFC
	0x03AB46DC BL 0x3EB1B30
	0x03AB46E0 ADD X0, X31, 0x318
	0x03AB46E4 ADD X1, X31, 0x218
	0x03AB46E8 MOV X2, X31
	0x03AB46EC BL 0x3C5A54C
	0x03AB46F0 LDR X8, [X19 + 0x108]
	0x03AB46F4 CBZ X8, 0x3AB492C
	0x03AB46F8 LDR W9, [X8 + 0x18]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x92F000
	005 Move X20, 0x6A5000
	006 Move W8, [X19+1128]
	007 Move X20, [X20+192]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x6A5000
	013 Move X0, [X0+192]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+1128], W8
	017 Move X0, [X20]
	018 Call 0x1C17F10
	019 Move X1, X31
	020 Move X19, X0
	021 Call Object..ctor, X0
	022 Move X8, [X20]
	023 Move X8, [X8+184]
	024 Move [X8], X19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Return 

Method: System.Void .ctor()

Disassembly:
	0x03AB46FC CMP X29, X9
	0x03AB4700 B.CS 0x3AB4930

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: System.Void <Render>b__20_0(UnityEngine.Rendering.Universal.Internal.GBufferPass/PassData data, UnityEngine.Experimental.Rendering.RenderGraphModule.RenderGraphContext context)

Disassembly:
	0x03AB4704 ADD X8, X8, X28
	0x03AB4708 ADRP X9, 0x6A2000
	0x03AB470C LDP V0, V1, [X8 + 0x80]
	0x03AB4710 LDP V2, V3, [X8 + 0x60]
	0x03AB4714 LDR X9, [X9 + 0xEC0]
	0x03AB4718 STP V0, V1, [X31 + 0x170]
	0x03AB471C STP V2, V3, [X31 + 0x150]
	0x03AB4720 LDR X0, [X9]
	0x03AB4724 LDR W27, [X8 + 0xE8]
	0x03AB4728 LDR W9, [X0 + 0xE0]
	0x03AB472C CBNZ W9, 0x3AB4734
	0x03AB4730 BL 0x1C16DFC
	0x03AB4734 LDP V0, V1, [X31 + 0x150]
	0x03AB4738 LDP V2, V3, [X31 + 0x170]
	0x03AB473C STP V0, V1, [X31 + 0xD0]
	0x03AB4740 SCVTF S0, W27
	0x03AB4744 STP V2, V3, [X31 + 0xF0]
	0x03AB4748 ADD X0, X31, 0x1A0
	0x03AB474C ADD X3, X31, 0xD0
	0x03AB4750 MOV W1, W23
	0x03AB4754 MOV X2, X24
	0x03AB4758 MOV X4, X31
	0x03AB475C BL 0x3A76DEC
	0x03AB4760 ADD X1, X31, 0x1A0
	0x03AB4764 MOV X0, X21
	0x03AB4768 MOV X2, X31
	0x03AB476C BL 0x3A771DC
	0x03AB4770 LDR X0, [X25]
	0x03AB4774 LDR W8, [X0 + 0xE0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x92F000
	006 Move W8, [X21+1129]
	007 Move X20, X2
	008 Move X19, X1
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x6A4000
	014 Move X0, [X0+400]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+1129], W8
	018 Compare X20, 0
	019 JumpIfEqual {40}
	020 Compare X19, 0
	021 JumpIfEqual {40}
	022 Move X8, 0x6A4000
	023 Move X8, [X8+400]
	024 Move X20, [X20+16]
	025 Move X0, [X8]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {30}
	029 Call 0x1C17DFC
	030 Add X2, X19, 32
	031 Move X0, X20
	032 Move X1, X19
	033 Move X20, [X31+16]
	034 Move X19, [X31+24]
	035 Move W3, W31
	036 Move X30, [X31+32]
	037 Move X21, [X31+40]
	038 Call GBufferPass.ExecutePass, X0, X1, X2, X3
	039 Return 
	040 Call 0x1C17F20

Method: System.Void <Render>b__20_1(UnityEngine.Rendering.Universal.Internal.GBufferPass/PassData data, UnityEngine.Experimental.Rendering.RenderGraphModule.RenderGraphContext context)

Disassembly:
	0x03AB4778 CBNZ W8, 0x3AB4780
	0x03AB477C BL 0x1C16DFC
	0x03AB4780 LDR X1, [X26]
	0x03AB4784 MOV X0, X21
	0x03AB4788 MOV W2, W31
	0x03AB478C MOV X3, X31
	0x03AB4790 BL 0x39E9618
	0x03AB4794 LDR X8, [X19 + 0x108]
	0x03AB4798 CBZ X8, 0x3AB4924
	0x03AB479C LDR W9, [X8 + 0x18]
	0x03AB47A0 CMP X29, X9
	0x03AB47A4 B.CS 0x3AB4920
	0x03AB47A8 ADD X8, X8, X28
	0x03AB47AC LDP V0, V1, [X8 + 0x40]
	0x03AB47B0 LDP V2, V3, [X8 + 0x20]
	0x03AB47B4 ADD X2, X8, 0x20
	0x03AB47B8 STP V0, V1, [X31 + 0xB0]
	0x03AB47BC STP V2, V3, [X31 + 0x90]
	0x03AB47C0 LDP V4, V5, [X8 + 0x80]
	0x03AB47C4 LDP V6, V7, [X8 + 0x60]
	0x03AB47C8 STP V2, V3, [X31 + 0x10]
	0x03AB47CC STP V0, V1, [X31 + 0x30]
	0x03AB47D0 STP V4, V5, [X31 + 0x70]
	0x03AB47D4 STP V6, V7, [X31 + 0x50]
	0x03AB47D8 ADD X3, X31, 0x318
	0x03AB47DC ADD X4, X31, 0x50
	0x03AB47E0 ADD X5, X31, 0x10
	0x03AB47E4 MOV X0, X21
	0x03AB47E8 MOV X1, X22
	0x03AB47EC MOV X6, X31
	0x03AB47F0 BL 0x3A76B98
	0x03AB47F4 LDRSW X8, [X19 + 0xE8]
	0x03AB47F8 ADD X29, X29, 0x1
	0x03AB47FC ADD X28, X28, 0x1C8
	0x03AB4800 CMP X29, X8
	0x03AB4804 B.LT 0x3AB46B8
	0x03AB4808 ADD X0, X31, 0x1A0
	0x03AB480C MOV X1, X31
	0x03AB4810 BL 0x3C5BBF0
	0x03AB4814 LDR X27, [X31 + 0x8]
	0x03AB4818 CBZ X0, 0x3AB493C
	0x03AB481C MOV X1, X31
	0x03AB4820 BL 0x3C16B90
	0x03AB4824 CMP W0, 0x2
	0x03AB4828 B.NE 0x3AB483C
	0x03AB482C LDRB W8, [X20 + 0x27C]
	0x03AB4830 CMP W8, 0x0
	0x03AB4834 CSET W8, NE
	0x03AB4838 B 0x3AB4840
	0x03AB483C MOV W8, W31
	0x03AB4840 STRB W8, [X20 + 0x299]
	0x03AB4844 LDR X0, [X25]
	0x03AB4848 LDR W22, [X20 + 0x25C]
	0x03AB484C LDR W8, [X0 + 0xE0]
	0x03AB4850 CBNZ W8, 0x3AB4858
	0x03AB4854 BL 0x1C16DFC
	0x03AB4858 ADRP X8, 0x6A1000
	0x03AB485C LDR X8, [X8 + 0xF60]
	0x03AB4860 CMP W22, 0x1
	0x03AB4864 CSET W2, EQ
	0x03AB4868 LDR X1, [X8]
	0x03AB486C MOV X0, X21
	0x03AB4870 MOV X3, X31
	0x03AB4874 BL 0x39E9618
	0x03AB4878 ADRP X9, 0x6A1000
	0x03AB487C LDR W8, [X20 + 0x25C]
	0x03AB4880 LDR X9, [X9 + 0xF38]
	0x03AB4884 CMP W8, 0x1
	0x03AB4888 LDR X1, [X9]
	0x03AB488C CSET W2, GT
	0x03AB4890 MOV X0, X21
	0x03AB4894 MOV X3, X31
	0x03AB4898 BL 0x39E9618
	0x03AB489C ADRP X8, 0x6A2000
	0x03AB48A0 LDR X8, [X8 + 0xEC0]
	0x03AB48A4 LDR X0, [X8]
	0x03AB48A8 LDR W8, [X0 + 0xE0]
	0x03AB48AC CBNZ W8, 0x3AB48B4
	0x03AB48B0 BL 0x1C16DFC
	0x03AB48B4 ADD X20, X20, 0x250
	0x03AB48B8 MOV X0, X21
	0x03AB48BC MOV X1, X20
	0x03AB48C0 MOV X2, X31
	0x03AB48C4 BL 0x3A77F3C
	0x03AB48C8 ADD X2, X31, 0x1A0
	0x03AB48CC MOV X0, X19
	0x03AB48D0 MOV X1, X21
	0x03AB48D4 MOV X3, X20

ISIL:
	001 Subtract X31, X31, 192
	002 Move [X31+128], X30
	003 Move [X31+136], X25
	004 Move [X31+144], X24
	005 Move [X31+152], X23
	006 Move [X31+160], X22
	007 Move [X31+168], X21
	008 Move [X31+176], X20
	009 Move [X31+184], X19
	010 Move X20, 0x92F000
	011 Move W8, [X20+1130]
	012 Move X19, X1
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x6A4000
	018 Move X0, [X0+328]
	019 Call 0x1C17CF4
	020 Move X0, 0x69D000
	021 Move X0, [X0+2696]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X20+1130], W8
	025 Compare X19, 0
	026 JumpIfEqual {96}
	027 Move X8, [X19+16]
	028 Compare X8, 0
	029 JumpIfEqual {96}
	030 Move X23, 0x6A4000
	031 Move X24, 0x69D000
	032 Move X23, [X23+328]
	033 Move X24, [X24+2696]
	034 Move W25, 4
	035 NotImplemented "Instruction LDRSW not yet implemented."
	036 Subtract X21, X25, 4
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move X0, [X19+728]
	039 Compare X0, 0
	040 JumpIfEqual {96}
	041 Move X1, X31
	042 Call DeferredLights.get_GBufferLightingIndex, X0
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Move X0, [X23]
	045 Move X20, [X19+32]
	046 Move W8, [X0+224]
	047 Compare W8, 0
	048 JumpIfNotEqual {51}
	049 Call 0x1C17DFC
	050 Move X0, [X23]
	051 Move X8, [X0+184]
	052 Move X8, [X8]
	053 Compare X8, 0
	054 JumpIfEqual {96}
	055 Move W9, [X8+24]
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Move X9, [X19+16]
	058 Compare X9, 0
	059 JumpIfEqual {96}
	060 Move W10, [X9+24]
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Move X0, [X24]
	063 Move X21, [X8]
	064 Move X22, [X9]
	065 Move W8, [X0+224]
	066 Compare W8, 0
	067 JumpIfNotEqual {69}
	068 Call 0x1C17DFC
	069 Add X8, X31, 40
	070 Move X0, X22
	071 Move X1, X31
	072 Call TextureHandle.op_Implicit, X0
	073 NotImplemented "Instruction LDUR not yet implemented."
	074 NotImplemented "Instruction LDUR not yet implemented."
	075 Move X8, [X31+72]
	076 Move [X31+80], V0
	077 Move [X31+88], V1
	078 Move [X31+112], X8
	079 Compare X20, 0
	080 JumpIfEqual {96}
	081 Move V0, [X31+80]
	082 Move V1, [X31+96]
	083 Move X8, [X31+112]
	084 Add X2, X31, 0
	085 Move X0, X20
	086 Move X1, X21
	087 Move X3, X31
	088 Move [X31], V0
	089 Move [X31+8], V1
	090 Move [X31+32], X8
	091 Call CommandBuffer.SetGlobalTexture, X0, X1, X2
	092 Move X8, [X19+16]
	093 Add X25, X25, 1
	094 Compare X8, 0
	095 JumpIfNotEqual {35}
	096 Call 0x1C17F20
	097 Move X20, [X31+176]
	098 Move X19, [X31+184]
	099 Move X22, [X31+160]
	100 Move X21, [X31+168]
	101 Move X24, [X31+144]
	102 Move X23, [X31+152]
	103 Move X30, [X31+128]
	104 Move X25, [X31+136]
	105 Add X31, X31, 192
	106 Return 
	107 Call 0x1C17F28

