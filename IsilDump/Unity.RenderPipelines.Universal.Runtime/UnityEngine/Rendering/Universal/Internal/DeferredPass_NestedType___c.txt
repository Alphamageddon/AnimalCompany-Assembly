Type: UnityEngine.Rendering.Universal.Internal.DeferredPass/<>c

Method: System.Void .cctor()

Disassembly:
	0x03AAE28C STR X30, [X31 - 0x20]!
	0x03AAE290 STP X20, X19, [X31 + 0x10]
	0x03AAE294 ADRP X19, 0x934000
	0x03AAE298 ADRP X20, 0x6A9000
	0x03AAE29C LDRB W8, [X19 + 0x444]
	0x03AAE2A0 LDR X20, [X20 + 0xEF8]
	0x03AAE2A4 TBNZ X8, 0x0, 0x3AAE2BC
	0x03AAE2A8 ADRP X0, 0x6A9000
	0x03AAE2AC LDR X0, [X0 + 0xEF8]
	0x03AAE2B0 BL 0x1C16CF4
	0x03AAE2B4 MOVZ W8, 0x1
	0x03AAE2B8 STRB W8, [X19 + 0x444]
	0x03AAE2BC LDR X0, [X20]
	0x03AAE2C0 BL 0x1C16F10
	0x03AAE2C4 MOV X1, X31
	0x03AAE2C8 MOV X19, X0
	0x03AAE2CC BL 0x33BDD8C
	0x03AAE2D0 LDR X8, [X20]
	0x03AAE2D4 LDR X8, [X8 + 0xB8]
	0x03AAE2D8 STR X19, [X8]
	0x03AAE2DC LDP X20, X19, [X31 + 0x10]
	0x03AAE2E0 LDR X30, [X31], #0x20
	0x03AAE2E4 RET

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x935000
	005 Move X20, 0x6AA000
	006 Move W8, [X19+1083]
	007 Move X20, [X20+3752]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x6AA000
	013 Move X0, [X0+3752]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+1083], W8
	017 Move X0, [X20]
	018 Call 0x1C17F10
	019 Move X1, X31
	020 Move X19, X0
	021 Call Object..ctor, X0
	022 Move X8, [X20]
	023 Move X8, [X8+184]
	024 Move [X8], X19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Return 

Method: System.Void .ctor()

Disassembly:
	0x03AAE2E8 MOV X1, X31
	0x03AAE2EC B 0x33BDD8C

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: System.Void <Render>b__5_0(UnityEngine.Rendering.Universal.Internal.DeferredPass/PassData data, UnityEngine.Experimental.Rendering.RenderGraphModule.RenderGraphContext context)

Disassembly:
	0x03AAE2F0 STP X30, X21, [X31 - 0x20]!
	0x03AAE2F4 STP X20, X19, [X31 + 0x10]
	0x03AAE2F8 ADRP X21, 0x934000
	0x03AAE2FC LDRB W8, [X21 + 0x445]
	0x03AAE300 MOV X20, X2
	0x03AAE304 MOV X19, X1
	0x03AAE308 TBNZ X8, 0x0, 0x3AAE320
	0x03AAE30C ADRP X0, 0x6A9000
	0x03AAE310 LDR X0, [X0 + 0x158]
	0x03AAE314 BL 0x1C16CF4
	0x03AAE318 MOVZ W8, 0x1
	0x03AAE31C STRB W8, [X21 + 0x445]

ISIL:
	001 Move [X31-16], X30
	002 Compare X1, 0
	003 JumpIfEqual {16}
	004 Compare X2, 0
	005 JumpIfEqual {16}
	006 Move X0, [X1+728]
	007 Compare X0, 0
	008 JumpIfEqual {16}
	009 Move X8, [X2+16]
	010 Add X2, X1, 32
	011 Move X3, X31
	012 Move X1, X8
	013 Move X30, [X31+16]
	014 Call DeferredLights.ExecuteDeferredPass, X0, X1, X2
	015 Return 
	016 Call 0x1C17F20

