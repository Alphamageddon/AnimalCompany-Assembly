Type: UnityEngine.Rendering.Universal.Internal.DrawObjectsPass

Method: System.Void .ctor(System.String profilerTag, UnityEngine.Rendering.ShaderTagId[] shaderTagIds, System.Boolean opaque, UnityEngine.Rendering.Universal.RenderPassEvent evt, UnityEngine.Rendering.RenderQueueRange renderQueueRange, UnityEngine.LayerMask layerMask, UnityEngine.Rendering.StencilState stencilState, System.Int32 stencilReference)

Disassembly:
	0x03AB016C ADRP X0, 0x6A7000
	0x03AB0170 LDR X0, [X0 + 0x168]
	0x03AB0174 BL 0x1C16CF4
	0x03AB0178 ADRP X0, 0x6A7000
	0x03AB017C LDR X0, [X0 + 0xFD8]
	0x03AB0180 BL 0x1C16CF4
	0x03AB0184 MOVZ W8, 0x1
	0x03AB0188 STRB W8, [X20 + 0x455]
	0x03AB018C LDR X0, [X21]
	0x03AB0190 MOV X1, X31
	0x03AB0194 BL 0x3C124EC
	0x03AB0198 LDR X8, [X19]
	0x03AB019C LDP X20, X19, [X31 + 0x10]
	0x03AB01A0 LDR X8, [X8 + 0xB8]
	0x03AB01A4 STR W0, [X8]
	0x03AB01A8 LDP X30, X21, [X31], #0x20
	0x03AB01AC RET
	0x03AB01B0 STR X30, [X31 - 0x20]!
	0x03AB01B4 STP X20, X19, [X31 + 0x10]
	0x03AB01B8 ADRP X19, 0x932000
	0x03AB01BC ADRP X20, 0x6A7000
	0x03AB01C0 LDRB W8, [X19 + 0x456]
	0x03AB01C4 LDR X20, [X20 + 0xFA8]
	0x03AB01C8 TBNZ X8, 0x0, 0x3AB01E0
	0x03AB01CC ADRP X0, 0x6A7000
	0x03AB01D0 LDR X0, [X0 + 0xFA8]
	0x03AB01D4 BL 0x1C16CF4
	0x03AB01D8 MOVZ W8, 0x1
	0x03AB01DC STRB W8, [X19 + 0x456]
	0x03AB01E0 LDR X0, [X20]
	0x03AB01E4 BL 0x1C16F10
	0x03AB01E8 MOV X1, X31
	0x03AB01EC MOV X19, X0
	0x03AB01F0 BL 0x33BDD8C
	0x03AB01F4 LDR X8, [X20]
	0x03AB01F8 LDR X8, [X8 + 0xB8]
	0x03AB01FC STR X19, [X8]
	0x03AB0200 LDP X20, X19, [X31 + 0x10]
	0x03AB0204 LDR X30, [X31], #0x20
	0x03AB0208 RET
	0x03AB020C MOV X1, X31
	0x03AB0210 B 0x33BDD8C
	0x03AB0214 STR X30, [X31 - 0x40]!
	0x03AB0218 STP X24, X23, [X31 + 0x10]
	0x03AB021C STP X22, X21, [X31 + 0x20]
	0x03AB0220 STP X20, X19, [X31 + 0x30]
	0x03AB0224 ADRP X24, 0x932000
	0x03AB0228 STR X1, [X31 + 0x8]
	0x03AB022C ADRP X23, 0x6A0000
	0x03AB0230 LDRB W8, [X24 + 0x457]
	0x03AB0234 LDR X23, [X23 + 0xC80]
	0x03AB0238 MOV X19, X5
	0x03AB023C MOV X20, X4
	0x03AB0240 MOV X21, X3
	0x03AB0244 MOV X22, X2
	0x03AB0248 TBNZ X8, 0x0, 0x3AB0260
	0x03AB024C ADRP X0, 0x6A0000
	0x03AB0250 LDR X0, [X0 + 0xC80]
	0x03AB0254 BL 0x1C16CF4
	0x03AB0258 MOVZ W8, 0x1
	0x03AB025C STRB W8, [X24 + 0x457]
	0x03AB0260 LDR X0, [X23]
	0x03AB0264 LDP X23, X22, [X22 + 0x8]
	0x03AB0268 LDR W8, [X0 + 0xE0]
	0x03AB026C CBNZ W8, 0x3AB0274
	0x03AB0270 BL 0x1C16DFC
	0x03AB0274 ADD X0, X31, 0x8
	0x03AB0278 MOV X1, X23
	0x03AB027C MOV X2, X22
	0x03AB0280 MOV X3, X21
	0x03AB0284 MOV X4, X20
	0x03AB0288 MOV X5, X19
	0x03AB028C MOV X6, X31
	0x03AB0290 BL 0x3C58B84
	0x03AB0294 LDP X20, X19, [X31 + 0x30]
	0x03AB0298 LDP X22, X21, [X31 + 0x20]
	0x03AB029C LDP X24, X23, [X31 + 0x10]
	0x03AB02A0 LDR X30, [X31], #0x40
	0x03AB02A4 RET
	0x03AB02A8 SUB X31, X31, 0x100
	0x03AB02AC STR X30, [X31 + 0xB0]
	0x03AB02B0 STP X26, X25, [X31 + 0xC0]
	0x03AB02B4 STP X24, X23, [X31 + 0xD0]
	0x03AB02B8 STP X22, X21, [X31 + 0xE0]
	0x03AB02BC STP X20, X19, [X31 + 0xF0]
	0x03AB02C0 ADRP X21, 0x932000
	0x03AB02C4 LDRB W8, [X21 + 0x458]
	0x03AB02C8 MOV X20, X2
	0x03AB02CC MOV X19, X1
	0x03AB02D0 TBNZ X8, 0x0, 0x3AB030C
	0x03AB02D4 ADRP X0, 0x6A7000
	0x03AB02D8 LDR X0, [X0 + 0x168]
	0x03AB02DC BL 0x1C16CF4
	0x03AB02E0 ADRP X0, 0x6A0000
	0x03AB02E4 LDR X0, [X0 + 0xA88]
	0x03AB02E8 BL 0x1C16CF4
	0x03AB02EC ADRP X0, 0x6A6000
	0x03AB02F0 LDR X0, [X0 + 0x8C0]
	0x03AB02F4 BL 0x1C16CF4
	0x03AB02F8 ADRP X0, 0x6A5000
	0x03AB02FC LDR X0, [X0 + 0xDC8]
	0x03AB0300 BL 0x1C16CF4
	0x03AB0304 MOVZ W8, 0x1
	0x03AB0308 STRB W8, [X21 + 0x458]
	0x03AB030C CBZ X19, 0x3AB04E4
	0x03AB0310 LDR X0, [X19 + 0x1B0]
	0x03AB0314 CBZ X0, 0x3AB04E4
	0x03AB0318 ADRP X26, 0x6A0000
	0x03AB031C LDR X26, [X26 + 0xA88]
	0x03AB0320 MOV X1, X31
	0x03AB0324 ADD X21, X19, 0x20
	0x03AB0328 ADD X22, X19, 0x38
	0x03AB032C BL 0x3984C98
	0x03AB0330 TBZ X0, 0x0, 0x3AB0400
	0x03AB0334 LDR X0, [X26]
	0x03AB0338 LDR X23, [X19 + 0x10]
	0x03AB033C LDR W8, [X0 + 0xE0]
	0x03AB0340 CBNZ W8, 0x3AB0348
	0x03AB0344 BL 0x1C16DFC
	0x03AB0348 ADD X8, X31, 0x58
	0x03AB034C MOV X0, X23
	0x03AB0350 MOV X1, X31
	0x03AB0354 BL 0x399A594
	0x03AB0358 LDUR V0, [X31 + 0x58]
	0x03AB035C LDUR V1, [X31 + 0x68]
	0x03AB0360 LDR X8, [X31 + 0x78]
	0x03AB0364 STP V0, V1, [X31 + 0x80]
	0x03AB0368 STR X8, [X31 + 0xA0]
	0x03AB036C LDR X8, [X19 + 0x1B0]
	0x03AB0370 CBZ X8, 0x3AB04E4
	0x03AB0374 LDP V0, V1, [X8 + 0x30]
	0x03AB0378 LDR X8, [X8 + 0x50]
	0x03AB037C LDP V2, V3, [X31 + 0x80]
	0x03AB0380 LDR X9, [X31 + 0xA0]
	0x03AB0384 ADD X0, X31, 0x30
	0x03AB0388 ADD X1, X31, 0x0
	0x03AB038C MOV X2, X31
	0x03AB0390 STR X8, [X31 + 0x20]
	0x03AB0394 STP V0, V1, [X31]
	0x03AB0398 STP V2, V3, [X31 + 0x30]
	0x03AB039C STR X9, [X31 + 0x50]
	0x03AB03A0 BL 0x3C4B708
	0x03AB03A4 LDR X1, [X21]
	0x03AB03A8 AND W23, W0, 0x1
	0x03AB03AC MOV X0, X22
	0x03AB03B0 MOV W2, W23
	0x03AB03B4 MOV X3, X31
	0x03AB03B8 BL 0x3A92924
	0x03AB03BC LDR X24, [X21]
	0x03AB03C0 MOV X0, X22
	0x03AB03C4 MOV X1, X31
	0x03AB03C8 BL 0x3A8F13C
	0x03AB03CC ADRP X8, 0x6A5000
	0x03AB03D0 LDR X8, [X8 + 0xDC8]
	0x03AB03D4 MOV X25, X0
	0x03AB03D8 LDR X8, [X8]
	0x03AB03DC LDR W9, [X8 + 0xE0]
	0x03AB03E0 CBNZ W9, 0x3AB03EC
	0x03AB03E4 MOV X0, X8
	0x03AB03E8 BL 0x1C16DFC
	0x03AB03EC MOV X0, X24
	0x03AB03F0 MOV X1, X25
	0x03AB03F4 MOV W2, W23
	0x03AB03F8 MOV X3, X31
	0x03AB03FC BL 0x3A94FC8
	0x03AB0400 LDRB W8, [X19 + 0x2D8]
	0x03AB0404 CBNZ W8, 0x3AB0440
	0x03AB0408 LDRB W8, [X19 + 0x370]
	0x03AB040C CBNZ W8, 0x3AB0440
	0x03AB0410 CBZ X20, 0x3AB04E4
	0x03AB0414 ADRP X8, 0x6A6000
	0x03AB0418 LDR X8, [X8 + 0x8C0]
	0x03AB041C LDR X23, [X20 + 0x18]
	0x03AB0420 LDR X0, [X8]
	0x03AB0424 LDR W8, [X0 + 0xE0]
	0x03AB0428 CBNZ W8, 0x3AB0430
	0x03AB042C BL 0x1C16DFC
	0x03AB0430 MOV X0, X23
	0x03AB0434 MOV W1, W31
	0x03AB0438 MOV X2, X31
	0x03AB043C BL 0x3A670AC
	0x03AB0440 LDR X0, [X26]
	0x03AB0444 LDR X23, [X19 + 0x10]
	0x03AB0448 LDR W8, [X0 + 0xE0]
	0x03AB044C CBNZ W8, 0x3AB0454
	0x03AB0450 BL 0x1C16DFC
	0x03AB0454 MOV X0, X23
	0x03AB0458 MOV X1, X31
	0x03AB045C BL 0x399A7C4
	0x03AB0460 LDR X8, [X19 + 0x18]
	0x03AB0464 MOV X23, X0
	0x03AB0468 MOV X1, X31
	0x03AB046C MOV X0, X8
	0x03AB0470 BL 0x399A7C4
	0x03AB0474 MOV X2, X0
	0x03AB0478 MOV X0, X22
	0x03AB047C MOV X1, X23
	0x03AB0480 MOV X3, X31
	0x03AB0484 BL 0x3A936E4
	0x03AB0488 CBZ X20, 0x3AB04E4
	0x03AB048C ADRP X8, 0x6A7000
	0x03AB0490 LDR X8, [X8 + 0x168]
	0x03AB0494 MOV W22, W0
	0x03AB0498 LDR X0, [X8]
	0x03AB049C LDR W8, [X0 + 0xE0]
	0x03AB04A0 CBNZ W8, 0x3AB04A8

ISIL:
	001 Subtract X31, X31, 288
	002 Move [X31+192], X29
	003 Move [X31+200], X30
	004 Move [X31+208], X28
	005 Move [X31+216], X27
	006 Move [X31+224], X26
	007 Move [X31+232], X25
	008 Move [X31+240], X24
	009 Move [X31+248], X23
	010 Move [X31+256], X22
	011 Move [X31+264], X21
	012 Move [X31+272], X20
	013 Move [X31+280], X19
	014 Move X9, [X31+288]
	015 Move X8, [X31+296]
	016 Move X28, 0x6A5000
	017 Move X29, 0x933000
	018 Move X28, [X28+96]
	019 Move [X31+176], X9
	020 Move [X31+184], W8
	021 Move X26, 0x6A5000
	022 Move W10, [X29+1103]
	023 Move X26, [X26+104]
	024 Move X20, X6
	025 Move X21, X5
	026 Move W22, W4
	027 Move W23, W3
	028 Move X24, X2
	029 Move X25, X1
	030 Move X19, X0
	031 Move TEMP, X10
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfEqual {61}
	035 Move X0, 0x6A5000
	036 Move X0, [X0+112]
	037 Call 0x1C17CF4
	038 Move X0, 0x6A5000
	039 Move X0, [X0+104]
	040 Call 0x1C17CF4
	041 Move X0, 0x6A5000
	042 Move X0, [X0+96]
	043 Call 0x1C17CF4
	044 Move X0, 0x6A5000
	045 Move X0, [X0+120]
	046 Call 0x1C17CF4
	047 Move X0, 0x6A8000
	048 Move X0, [X0+3984]
	049 Call 0x1C17CF4
	050 Move X0, 0x6A1000
	051 Move X0, [X0+1432]
	052 Call 0x1C17CF4
	053 Move X0, 0x6A4000
	054 Move X0, [X0+4080]
	055 Call 0x1C17CF4
	056 Move X0, 0x6A8000
	057 Move X0, [X0+3992]
	058 Call 0x1C17CF4
	059 Move W8, 1
	060 Move [X29+1103], W8
	061 Move X0, [X28]
	062 Move X28, 0x6A1000
	063 Move X27, 0x6A8000
	064 Move X29, 0x6A8000
	065 Move X28, [X28+1432]
	066 Move X27, [X27+3992]
	067 Move X29, [X29+3984]
	068 Call 0x1C17F10
	069 Move X1, [X26]
	070 Move X26, X0
	071 Call List`1<ShaderTagId>..ctor, X0
	072 Move [X19+360], X26
	073 Move X8, 0x6A4000
	074 Move X8, [X8+4080]
	075 Move X0, [X8]
	076 Move W8, [X0+224]
	077 Compare W8, 0
	078 JumpIfNotEqual {80}
	079 Call 0x1C17DFC
	080 Move X0, X19
	081 Move X1, X31
	082 Call ScriptableRenderPass..ctor, X0
	083 Move X0, [X28]
	084 Call 0x1C17F10
	085 Move X1, [X27]
	086 Move X2, X31
	087 Move X26, X0
	088 Call ProfilingSampler..ctor, X0, X1
	089 Move [X19+56], X26
	090 Move X0, [X29]
	091 Call 0x1C17F10
	092 Move X1, X31
	093 Move X26, X0
	094 Call Object..ctor, X0
	095 Move [X19+392], X26
	096 Move [X19+368], X25
	097 Move X0, [X28]
	098 Call 0x1C17F10
	099 Move X1, X25
	100 Move X2, X31
	101 Move X26, X0
	102 Call ProfilingSampler..ctor, X0, X1
	103 Move [X19+376], X26
	104 Compare X24, 0
	105 JumpIfEqual {230}
	106 Move X8, [X24+24]
	107 NotImplemented "Instruction CMP not yet implemented."
	108 Move X26, 0x6A5000
	109 Move X26, [X26+112]
	110 Move X25, X31
	111 And X8, X8, 0
	112 Add X28, X24, 32
	113 NotImplemented "Instruction CMP not yet implemented."
	114 Move X0, [X19+360]
	115 Compare X0, 0
	116 JumpIfEqual {230}
	117 Move W10, [X0+28]
	118 Move W1, [X28]
	119 Move X8, [X0+16]
	120 Move X9, [X26]
	121 Add W10, W10, 1
	122 Move [X0+28], W10
	123 Compare X8, 0
	124 JumpIfEqual {230}
	125 NotImplemented "Instruction LDRSW not yet implemented."
	126 Move W11, [X8+24]
	127 NotImplemented "Instruction CMP not yet implemented."
	128 Add W9, W10, 1
	129 Add X8, X8, X10
	130 Move [X0+24], W9
	131 Move [X8+32], W1
	132 Move X8, [X9+32]
	133 Move X8, [X8+192]
	134 Move X2, [X8+112]
	135 Call List`1<ShaderTagId>.AddWithResize, X0, X1
	136 Move W8, [X24+24]
	137 Add X25, X25, 1
	138 NotImplemented "Instruction CMP not yet implemented."
	139 Move X8, 0x6A4000
	140 Move X8, [X8+4080]
	141 Move X24, 0x6A5000
	142 And W23, W23, 1
	143 Move X0, [X8]
	144 Move W8, [X0+224]
	145 Move X24, [X24+120]
	146 Compare W8, 0
	147 JumpIfNotEqual {149}
	148 Call 0x1C17DFC
	149 Move [X19+16], W22
	150 Move X2, [X24]
	151 Add X0, X31, 160
	152 Move X1, X21
	153 Move [X31+168], W31
	154 Move [X31+160], X31
	155 Call Nullable`1<RenderQueueRange>..ctor, X0, X1
	156 And X0, X20, 0
	157 Move X1, X31
	158 Call LayerMask.op_Implicit, X0
	159 Move X1, [X31+160]
	160 Move W2, [X31+168]
	161 Move W3, W0
	162 Add X0, X31, 136
	163 Move TEMP, 0
	164 Not TEMP
	165 Move W4, TEMP
	166 Move W5, W31
	167 Move X6, X31
	168 Move [X31+136], X31
	169 Move [X31+144], X31
	170 Move [X31+152], X31
	171 Call FilteringSettings..ctor, X0, X1, X2, X3, X4
	172 Move X8, [X31+152]
	173 NotImplemented "Instruction LDUR not yet implemented."
	174 NotImplemented "Instruction MOVI not yet implemented."
	175 Add X0, X31, 16
	176 Move W1, W31
	177 Move X2, X31
	178 Move [X19+240], X8
	179 Move [X19+14], V0
	180 Move [X31+108], V1
	181 Move [X31+80], V1
	182 Move [X31+88], V1
	183 Move [X31+48], V1
	184 Move [X31+56], V1
	185 Move [X31+16], V1
	186 Move [X31+24], V1
	187 Call RenderStateBlock..ctor, X0, X1
	188 Add X20, X19, 248
	189 Add X1, X31, 16
	190 Move W2, 108
	191 Move X0, X20
	192 Call 0x3EB2AC0
	193 Add X8, X19, 385
	194 Add X0, X31, 176
	195 Move X1, X31
	196 Move [X19+384], W23
	197 NotImplemented "Instruction STRH not yet implemented."
	198 Call StencilState.get_enabled, X0
	199 Move TEMP, X0
	200 And TEMP, TEMP, 1
	201 Compare TEMP, 1
	202 JumpIfNotEqual {216}
	203 Move W1, [X31+304]
	204 Move X0, X20
	205 Move X2, X31
	206 Call RenderStateBlock.set_stencilReference, X0, X1
	207 Move W1, 8
	208 Move X0, X20
	209 Move X2, X31
	210 Call RenderStateBlock.set_mask, X0, X1
	211 Move X1, [X31+176]
	212 Move W2, [X31+184]
	213 Move X0, X20
	214 Move X3, X31
	215 Call RenderStateBlock.set_stencilState, X0, X1
	216 Move X20, [X31+272]
	217 Move X19, [X31+280]
	218 Move X22, [X31+256]
	219 Move X21, [X31+264]
	220 Move X24, [X31+240]
	221 Move X23, [X31+248]
	222 Move X26, [X31+224]
	223 Move X25, [X31+232]
	224 Move X28, [X31+208]
	225 Move X27, [X31+216]
	226 Move X29, [X31+192]
	227 Move X30, [X31+200]
	228 Add X31, X31, 288
	229 Return 
	230 Call 0x1C17F20
	231 Call 0x1C17F28

Method: System.Void .ctor(System.String profilerTag, System.Boolean opaque, UnityEngine.Rendering.Universal.RenderPassEvent evt, UnityEngine.Rendering.RenderQueueRange renderQueueRange, UnityEngine.LayerMask layerMask, UnityEngine.Rendering.StencilState stencilState, System.Int32 stencilReference)

Disassembly:
	0x03AB04AC MOV X2, X21
	0x03AB04B0 BL 0x3AAF75C
	0x03AB04B4 LDR X0, [X20 + 0x10]
	0x03AB04B8 AND W3, W22, 0x1
	0x03AB04BC MOV X1, X19
	0x03AB04C0 MOV X2, X21
	0x03AB04C4 BL 0x3AAF838
	0x03AB04C8 LDP X20, X19, [X31 + 0xF0]
	0x03AB04CC LDP X22, X21, [X31 + 0xE0]
	0x03AB04D0 LDP X24, X23, [X31 + 0xD0]
	0x03AB04D4 LDP X26, X25, [X31 + 0xC0]
	0x03AB04D8 LDR X30, [X31 + 0xB0]
	0x03AB04DC ADD X31, X31, 0x100
	0x03AB04E0 RET
	0x03AB04E4 BL 0x1C16F20
	0x03AB04E8 STP X29, X30, [X31 - 0x60]!
	0x03AB04EC STP X28, X27, [X31 + 0x10]
	0x03AB04F0 STP X26, X25, [X31 + 0x20]
	0x03AB04F4 STP X24, X23, [X31 + 0x30]
	0x03AB04F8 STP X22, X21, [X31 + 0x40]
	0x03AB04FC STP X20, X19, [X31 + 0x50]
	0x03AB0500 ADRP X24, 0x932000
	0x03AB0504 ADRP X23, 0x6A3000
	0x03AB0508 LDRB W8, [X24 + 0x459]
	0x03AB050C LDR X23, [X23 + 0xFF0]
	0x03AB0510 MOV X19, X3
	0x03AB0514 MOV X20, X2
	0x03AB0518 MOV W22, W1
	0x03AB051C MOV X21, X0
	0x03AB0520 TBNZ X8, 0x0, 0x3AB0580
	0x03AB0524 ADRP X0, 0x6A7000
	0x03AB0528 LDR X0, [X0 + 0xFE0]
	0x03AB052C BL 0x1C16CF4
	0x03AB0530 ADRP X0, 0x6A7000
	0x03AB0534 LDR X0, [X0 + 0xFE8]
	0x03AB0538 BL 0x1C16CF4
	0x03AB053C ADRP X0, 0x6A0000
	0x03AB0540 LDR X0, [X0 + 0x598]
	0x03AB0544 BL 0x1C16CF4
	0x03AB0548 ADRP X0, 0x6A3000
	0x03AB054C LDR X0, [X0 + 0xFF0]
	0x03AB0550 BL 0x1C16CF4
	0x03AB0554 ADRP X0, 0x6A7000
	0x03AB0558 LDR X0, [X0 + 0xFF0]
	0x03AB055C BL 0x1C16CF4
	0x03AB0560 ADRP X0, 0x6A7000
	0x03AB0564 LDR X0, [X0 + 0xFF8]
	0x03AB0568 BL 0x1C16CF4
	0x03AB056C ADRP X0, 0x6A8000
	0x03AB0570 LDR X0, [X0]
	0x03AB0574 BL 0x1C16CF4
	0x03AB0578 MOVZ W8, 0x1
	0x03AB057C STRB W8, [X24 + 0x459]
	0x03AB0580 LDR X0, [X23]
	0x03AB0584 ADRP X26, 0x6A0000
	0x03AB0588 ADRP X23, 0x6A8000
	0x03AB058C ADRP X25, 0x6A7000
	0x03AB0590 ADRP X24, 0x6A7000
	0x03AB0594 LDR W8, [X0 + 0xE0]
	0x03AB0598 LDR X26, [X26 + 0x598]
	0x03AB059C LDR X23, [X23]
	0x03AB05A0 LDR X25, [X25 + 0xFE8]
	0x03AB05A4 LDR X24, [X24 + 0xFE0]
	0x03AB05A8 CBNZ W8, 0x3AB05B0
	0x03AB05AC BL 0x1C16DFC
	0x03AB05B0 MOV X0, X21
	0x03AB05B4 MOV X1, X31
	0x03AB05B8 BL 0x3A4225C
	0x03AB05BC LDR X0, [X26]
	0x03AB05C0 BL 0x1C16F10
	0x03AB05C4 LDR X1, [X23]
	0x03AB05C8 MOV X2, X31
	0x03AB05CC MOV X23, X0
	0x03AB05D0 BL 0x39B19AC
	0x03AB05D4 STR X23, [X21 + 0x38]
	0x03AB05D8 STRB W31, [X21 + 0x42]
	0x03AB05DC LDR X0, [X25]
	0x03AB05E0 BL 0x1C16F10
	0x03AB05E4 MOV X1, X31
	0x03AB05E8 MOV X23, X0
	0x03AB05EC BL 0x33BDD8C
	0x03AB05F0 STR X23, [X21 + 0xE8]
	0x03AB05F4 STR W22, [X21 + 0x10]
	0x03AB05F8 LDR X0, [X24]
	0x03AB05FC MOVZ W1, 0x2
	0x03AB0600 BL 0x1C16D6C
	0x03AB0604 STR X0, [X21 + 0xF0]
	0x03AB0608 CBZ X0, 0x3AB06E4
	0x03AB060C ADRP X27, 0x6A7000
	0x03AB0610 ADRP X28, 0x6A7000
	0x03AB0614 LDR X27, [X27 + 0xFF0]
	0x03AB0618 LDR X28, [X28 + 0xFF8]
	0x03AB061C MOV X24, X0
	0x03AB0620 MOV X25, X31
	0x03AB0624 MOV X22, X31
	0x03AB0628 MOV X23, X31

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+64], X29
	003 Move [X31+72], X30
	004 Move [X31+80], X28
	005 Move [X31+88], X27
	006 Move [X31+96], X26
	007 Move [X31+104], X25
	008 Move [X31+112], X24
	009 Move [X31+120], X23
	010 Move [X31+128], X22
	011 Move [X31+136], X21
	012 Move [X31+144], X20
	013 Move [X31+152], X19
	014 Move X27, 0x933000
	015 Move X29, 0x6A8000
	016 Move X28, 0x6A5000
	017 Move W8, [X27+1104]
	018 Move X29, [X29+416]
	019 Move X28, [X28+144]
	020 Move X25, X7
	021 Move X21, X6
	022 Move X26, X5
	023 Move X19, X4
	024 Move W20, W3
	025 Move W23, W2
	026 Move X22, X1
	027 Move X24, X0
	028 Move TEMP, X8
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfEqual {46}
	032 Move X0, 0x6A8000
	033 Move X0, [X0+416]
	034 Call 0x1C17CF4
	035 Move X0, 0x6A5000
	036 Move X0, [X0+136]
	037 Call 0x1C17CF4
	038 Move X0, 0x6A5000
	039 Move X0, [X0+144]
	040 Call 0x1C17CF4
	041 Move X0, 0x6A5000
	042 Move X0, [X0+152]
	043 Call 0x1C17CF4
	044 Move W8, 1
	045 Move [X27+1104], W8
	046 Move X0, [X29]
	047 Move W1, 3
	048 Call 0x1C17D6C
	049 Move X1, [X28]
	050 Move X27, X0
	051 Add X0, X31, 56
	052 Move X2, X31
	053 Move [X31+56], W31
	054 Call ShaderTagId..ctor, X0, X1
	055 Compare X27, 0
	056 JumpIfEqual {112}
	057 Move W8, [X27+24]
	058 Compare W8, 0
	059 JumpIfEqual {111}
	060 Move W8, [X31+56]
	061 Move X9, 0x6A5000
	062 Move X9, [X9+136]
	063 Add X0, X31, 48
	064 Move [X27+32], W8
	065 Move X2, X31
	066 Move X1, [X9]
	067 Move [X31+48], W31
	068 Call ShaderTagId..ctor, X0, X1
	069 Move W8, [X27+24]
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Move W8, [X31+48]
	072 Move X9, 0x6A5000
	073 Move X9, [X9+152]
	074 Add X0, X31, 40
	075 Move [X27+36], W8
	076 Move X2, X31
	077 Move X1, [X9]
	078 Move [X31+40], W31
	079 Call ShaderTagId..ctor, X0, X1
	080 Move W8, [X27+24]
	081 NotImplemented "Instruction CMP not yet implemented."
	082 Move W8, [X31+40]
	083 Move W9, [X31+160]
	084 And X6, X26, 0
	085 And W3, W23, 1
	086 Move [X27+40], W8
	087 And X8, X25, 0
	088 Move X0, X24
	089 Move X1, X22
	090 Move X2, X27
	091 Move W4, W20
	092 Move X5, X19
	093 Move [X31+16], W9
	094 Move [X31], X21
	095 Move [X31+8], X8
	096 Call DrawObjectsPass..ctor, X0, X1, X2, X3, X4, X5, X6, X7, X8
	097 Move X20, [X31+144]
	098 Move X19, [X31+152]
	099 Move X22, [X31+128]
	100 Move X21, [X31+136]
	101 Move X24, [X31+112]
	102 Move X23, [X31+120]
	103 Move X26, [X31+96]
	104 Move X25, [X31+104]
	105 Move X28, [X31+80]
	106 Move X27, [X31+88]
	107 Move X29, [X31+64]
	108 Move X30, [X31+72]
	109 Add X31, X31, 160
	110 Return 
	111 Call 0x1C17F28
	112 Call 0x1C17F20

Method: System.Void .ctor(UnityEngine.Rendering.Universal.URPProfileId profileId, System.Boolean opaque, UnityEngine.Rendering.Universal.RenderPassEvent evt, UnityEngine.Rendering.RenderQueueRange renderQueueRange, UnityEngine.LayerMask layerMask, UnityEngine.Rendering.StencilState stencilState, System.Int32 stencilReference)

Disassembly:
	0x03AAFE8C ADD X2, X31, 0x2B8
	0x03AAFE90 LDR X1, [X8]
	0x03AAFE94 LDR X4, [X9]
	0x03AAFE98 ADD X8, X31, 0x0
	0x03AAFE9C MOV X0, X21
	0x03AAFEA0 BL 0x2240F24
	0x03AAFEA4 LDP V0, V1, [X31]
	0x03AAFEA8 LDR X21, [X31 + 0x2B8]
	0x03AAFEAC STP V0, V1, [X31 + 0x2C0]
	0x03AAFEB0 ADD X0, X31, 0x2C0
	0x03AAFEB4 ADD X1, X31, 0x2F8
	0x03AAFEB8 MOV W2, W31
	0x03AAFEBC MOV X3, X31
	0x03AAFEC0 BL 0x3996828
	0x03AAFEC4 CBZ X21, 0x3AB00A0
	0x03AAFEC8 STR X0, [X21 + 0x10]
	0x03AAFECC LDR X22, [X31 + 0x2B8]
	0x03AAFED0 ADD X0, X31, 0x2C0
	0x03AAFED4 ADD X1, X31, 0x2F0
	0x03AAFED8 MOVZ W2, 0x2
	0x03AAFEDC MOV X3, X31
	0x03AAFEE0 BL 0x3996A00
	0x03AAFEE4 CBZ X22, 0x3AB00A4
	0x03AAFEE8 ADRP X21, 0x6A1000
	0x03AAFEEC LDR X21, [X21 + 0xA88]
	0x03AAFEF0 STR X0, [X22 + 0x18]
	0x03AAFEF4 LDR X0, [X21]
	0x03AAFEF8 LDR W8, [X0 + 0xE0]
	0x03AAFEFC CBNZ W8, 0x3AAFF04
	0x03AAFF00 BL 0x1C16DFC
	0x03AAFF04 ADD X0, X31, 0x2E8
	0x03AAFF08 MOV X1, X31
	0x03AAFF0C BL 0x398D2E8
	0x03AAFF10 TBZ X0, 0x0, 0x3AAFF24
	0x03AAFF14 ADD X0, X31, 0x2C0
	0x03AAFF18 ADD X1, X31, 0x2E8
	0x03AAFF1C MOV X2, X31
	0x03AAFF20 BL 0x3996BA8
	0x03AAFF24 LDR X0, [X21]
	0x03AAFF28 LDR W8, [X0 + 0xE0]
	0x03AAFF2C CBNZ W8, 0x3AAFF34
	0x03AAFF30 BL 0x1C16DFC
	0x03AAFF34 ADD X0, X31, 0x2E0
	0x03AAFF38 MOV X1, X31
	0x03AAFF3C BL 0x398D2E8
	0x03AAFF40 TBZ X0, 0x0, 0x3AAFF54
	0x03AAFF44 ADD X0, X31, 0x2C0
	0x03AAFF48 ADD X1, X31, 0x2E0
	0x03AAFF4C MOV X2, X31
	0x03AAFF50 BL 0x3996BA8
	0x03AAFF54 LDR X21, [X31 + 0x2B8]
	0x03AAFF58 ADD X0, X31, 0x0
	0x03AAFF5C MOVZ W2, 0x2B8
	0x03AAFF60 MOV X1, X20
	0x03AAFF64 BL 0x3EB1AC0
	0x03AAFF68 CBZ X21, 0x3AB00A8
	0x03AAFF6C ADD X0, X21, 0x20
	0x03AAFF70 ADD X1, X31, 0x0
	0x03AAFF74 MOVZ W2, 0x2B8
	0x03AAFF78 BL 0x3EB1AC0
	0x03AAFF7C ADD X0, X31, 0x2C0
	0x03AAFF80 MOV W1, W31
	0x03AAFF84 MOV X2, X31
	0x03AAFF88 BL 0x398E404

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X30
	003 Move [X31+32], X28
	004 Move [X31+40], X27
	005 Move [X31+48], X26
	006 Move [X31+56], X25
	007 Move [X31+64], X24
	008 Move [X31+72], X23
	009 Move [X31+80], X22
	010 Move [X31+88], X21
	011 Move [X31+96], X20
	012 Move [X31+104], X19
	013 Move X28, 0x934000
	014 Move X27, 0x6A6000
	015 Move W8, [X28+1105]
	016 Move X27, [X27+160]
	017 Move X24, X7
	018 Move X21, X6
	019 Move X26, X5
	020 Move X22, X4
	021 Move W23, W3
	022 Move W25, W2
	023 Move W20, W1
	024 Move X19, X0
	025 Move TEMP, X8
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {37}
	029 Move X0, 0x6A6000
	030 Move X0, [X0+168]
	031 Call 0x1C17CF4
	032 Move X0, 0x6A6000
	033 Move X0, [X0+160]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X28+1105], W8
	037 Move X0, [X27]
	038 Add X1, X31, 28
	039 Move [X31+28], W20
	040 Call 0x1C17E04
	041 Move X1, X31
	042 Call "il2cpp_vm_object_is_inst", X0
	043 Compare X0, 0
	044 JumpIfEqual {79}
	045 Move X8, [X0]
	046 Move X28, 0x6A6000
	047 Move W27, [X31+112]
	048 Move X9, [X8+424]
	049 Move X1, [X8+432]
	050 Move X28, [X28+168]
	051 NotImplemented "Instruction BLR not yet implemented."
	052 Move X1, X0
	053 And X5, X26, 0
	054 And X7, X24, 0
	055 And W2, W25, 1
	056 Move X0, X19
	057 Move W3, W23
	058 Move X4, X22
	059 Move X6, X21
	060 Move [X31], W27
	061 Call DrawObjectsPass..ctor, X0, X1, X2, X3, X4, X5, X6, X7
	062 Move X1, [X28]
	063 Move W0, W20
	064 Call 0x2236BC0, X0
	065 Move [X19+376], X0
	066 Move X20, [X31+96]
	067 Move X19, [X31+104]
	068 Move X22, [X31+80]
	069 Move X21, [X31+88]
	070 Move X24, [X31+64]
	071 Move X23, [X31+72]
	072 Move X26, [X31+48]
	073 Move X25, [X31+56]
	074 Move X28, [X31+32]
	075 Move X27, [X31+40]
	076 Move X30, [X31+16]
	077 Add X31, X31, 112
	078 Return 
	079 Call 0x1C17F20

Method: System.Void Execute(UnityEngine.Rendering.ScriptableRenderContext context, ref UnityEngine.Rendering.Universal.RenderingData renderingData)

Disassembly:
	0x03AB062C MOV X26, X31
	0x03AB0630 MOVN W29, 0x0
	0x03AB0634 LDR W8, [X24 + 0x18]
	0x03AB0638 CMP X26, X8
	0x03AB063C B.CS 0x3AB0704
	0x03AB0640 CMP X25, 0x0
	0x03AB0644 CSEL X9, X20, X19, EQ
	0x03AB0648 CMP X9, 0x0
	0x03AB064C ADD X8, X24, X25
	0x03AB0650 CSEL X23, X23, X9, EQ
	0x03AB0654 STR X9, [X8 + 0x20]
	0x03AB0658 CBZ X9, 0x3AB0688
	0x03AB065C CBZ X23, 0x3AB06E4
	0x03AB0660 LDR X1, [X28]
	0x03AB0664 MOV X0, X23
	0x03AB0668 MOV X2, X31
	0x03AB066C BL 0x3C15010
	0x03AB0670 LDR X8, [X21 + 0xF0]
	0x03AB0674 ADD X9, X24, X25
	0x03AB0678 STR W0, [X9 + 0x28]
	0x03AB067C MOV X24, X8
	0x03AB0680 CBNZ X8, 0x3AB068C
	0x03AB0684 B 0x3AB06E4
	0x03AB0688 STR W29, [X8 + 0x28]
	0x03AB068C LDR W8, [X24 + 0x18]
	0x03AB0690 CMP X26, X8
	0x03AB0694 B.CS 0x3AB0704
	0x03AB0698 ADD X24, X24, X25
	0x03AB069C LDR X8, [X24 + 0x20]
	0x03AB06A0 CMP X8, 0x0
	0x03AB06A4 CSEL X22, X22, X8, EQ
	0x03AB06A8 CBZ X8, 0x3AB06C4
	0x03AB06AC CBZ X22, 0x3AB06E4
	0x03AB06B0 LDR X1, [X27]
	0x03AB06B4 MOV X0, X22
	0x03AB06B8 MOV X2, X31
	0x03AB06BC BL 0x3C15010
	0x03AB06C0 B 0x3AB06C8
	0x03AB06C4 MOVN W0, 0x0
	0x03AB06C8 ADD X25, X25, 0x10
	0x03AB06CC CMP X25, 0x20
	0x03AB06D0 STR W0, [X24 + 0x2C]
	0x03AB06D4 B.EQ 0x3AB06E8
	0x03AB06D8 LDR X24, [X21 + 0xF0]
	0x03AB06DC ADD X26, X26, 0x1
	0x03AB06E0 CBNZ X24, 0x3AB0634
	0x03AB06E4 BL 0x1C16F20
	0x03AB06E8 LDP X20, X19, [X31 + 0x50]
	0x03AB06EC LDP X22, X21, [X31 + 0x40]
	0x03AB06F0 LDP X24, X23, [X31 + 0x30]
	0x03AB06F4 LDP X26, X25, [X31 + 0x20]
	0x03AB06F8 LDP X28, X27, [X31 + 0x10]
	0x03AB06FC LDP X29, X30, [X31], #0x60
	0x03AB0700 RET
	0x03AB0704 BL 0x1C16F28
	0x03AB0708 MOV X1, X31
	0x03AB070C B 0x33BDD8C
	0x03AB0710 RET
	0x03AB0714 SUB X31, X31, 0x1F0
	0x03AB0718 STP X29, X30, [X31 + 0x1B0]
	0x03AB071C STP X24, X23, [X31 + 0x1C0]
	0x03AB0720 STP X22, X21, [X31 + 0x1D0]
	0x03AB0724 STP X20, X19, [X31 + 0x1E0]
	0x03AB0728 MRS X21, 0xC000
	0x03AB072C LDR X8, [X21 + 0x28]
	0x03AB0730 ADRP X22, 0x932000
	0x03AB0734 MOV X20, X2
	0x03AB0738 MOV X19, X0
	0x03AB073C STR X8, [X31 + 0x1A8]
	0x03AB0740 LDRB W8, [X22 + 0x45A]
	0x03AB0744 TBNZ X8, 0x0, 0x3AB078C
	0x03AB0748 ADRP X0, 0x6A8000
	0x03AB074C LDR X0, [X0 + 0x8]
	0x03AB0750 BL 0x1C16CF4
	0x03AB0754 ADRP X0, 0x6A8000
	0x03AB0758 LDR X0, [X0 + 0x10]

ISIL:
	001 Subtract X31, X31, 192
	002 Move [X31+144], X30
	003 Move [X31+160], X22
	004 Move [X31+168], X21
	005 Move [X31+176], X20
	006 Move [X31+184], X19
	007 Move X22, 0x933000
	008 Move W8, [X22+1106]
	009 Move X19, X2
	010 Move X20, X1
	011 Move X21, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x6A8000
	017 Move X0, [X0+360]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+1106], W8
	021 Move X8, [X21+392]
	022 Compare X8, 0
	023 JumpIfEqual {89}
	024 Move W9, [X21+384]
	025 Add X0, X8, 32
	026 Move W2, 696
	027 Move X1, X19
	028 Move [X8+728], W9
	029 Call 0x3EB2B30
	030 Move X22, [X21+392]
	031 Add X1, X21, 248
	032 Add X0, X31, 32
	033 Move W2, 108
	034 Call 0x3EB2AC0
	035 Compare X22, 0
	036 JumpIfEqual {89}
	037 Add X0, X22, 732
	038 Add X1, X31, 32
	039 Move W2, 108
	040 Call 0x3EB2AC0
	041 Move X8, [X21+392]
	042 Move X9, [X21+240]
	043 Move V0, [X21+14]
	044 Move [X31+16], X9
	045 Move [X31], V0
	046 Compare X8, 0
	047 JumpIfEqual {89}
	048 Move X9, [X31+16]
	049 Move V0, [X31]
	050 Add X8, X8, 840
	051 Move [X8+16], X9
	052 Move [X8], V0
	053 Move X22, [X21+392]
	054 Compare X22, 0
	055 JumpIfEqual {89}
	056 Move X8, [X21+360]
	057 Move X9, 0x6A8000
	058 Move [X22+864], X8
	059 Move X8, [X21+376]
	060 Move [X22+872], X8
	061 Move W8, [X21+385]
	062 Move X9, [X9+360]
	063 Move [X22+888], X21
	064 Move [X22+881], W8
	065 Move X0, [X9]
	066 Move W8, [X0+224]
	067 Compare W8, 0
	068 JumpIfNotEqual {70}
	069 Call 0x1C17DFC
	070 Move X1, X22
	071 Move X2, X19
	072 Call DrawObjectsPass.CameraSetup, X0, X1, X2
	073 Move X21, [X21+392]
	074 Add X0, X19, 24
	075 Move X1, X31
	076 Call CameraData.IsCameraProjectionMatrixFlipped, X0
	077 And W3, W0, 1
	078 Move X0, X20
	079 Move X1, X21
	080 Move X2, X19
	081 Move X20, [X31+176]
	082 Move X19, [X31+184]
	083 Move X22, [X31+160]
	084 Move X21, [X31+168]
	085 Move X30, [X31+144]
	086 Add X31, X31, 192
	087 Call DrawObjectsPass.ExecutePass, X0, X1, X2, X3
	088 Return 
	089 Call 0x1C17F20

Method: System.Void CameraSetup(UnityEngine.Rendering.CommandBuffer cmd, UnityEngine.Rendering.Universal.Internal.DrawObjectsPass/PassData data, ref UnityEngine.Rendering.Universal.RenderingData renderingData)

Disassembly:
	0x03AB075C BL 0x1C16CF4
	0x03AB0760 ADRP X0, 0x6A8000
	0x03AB0764 LDR X0, [X0 + 0x18]
	0x03AB0768 BL 0x1C16CF4
	0x03AB076C ADRP X0, 0x6A0000
	0x03AB0770 LDR X0, [X0 + 0x9B0]
	0x03AB0774 BL 0x1C16CF4
	0x03AB0778 ADRP X0, 0x6A6000
	0x03AB077C LDR X0, [X0 + 0xDC0]
	0x03AB0780 BL 0x1C16CF4
	0x03AB0784 MOVZ W8, 0x1
	0x03AB0788 STRB W8, [X22 + 0x45A]
	0x03AB078C ADRP X22, 0x6A6000
	0x03AB0790 LDR X8, [X19 + 0xE0]
	0x03AB0794 LDR X22, [X22 + 0xDC0]
	0x03AB0798 ADD X23, X31, 0x140
	0x03AB079C CBZ X8, 0x3AB07FC
	0x03AB07A0 ADRP X9, 0x6A8000
	0x03AB07A4 LDR X9, [X9 + 0x10]
	0x03AB07A8 LDUR V0, [X8 + 0x28]
	0x03AB07AC LDUR V1, [X8 + 0x38]
	0x03AB07B0 LDR X8, [X8 + 0x48]
	0x03AB07B4 LDR X2, [X9]
	0x03AB07B8 MOVI V2.2D, 0x0
	0x03AB07BC ADD X0, X31, 0x140
	0x03AB07C0 ADD X1, X31, 0x170
	0x03AB07C4 STP V2, V2, [X31 + 0x150]
	0x03AB07C8 STR V2, [X31 + 0x14]
	0x03AB07CC STR X8, [X31 + 0x100]
	0x03AB07D0 STP V0, V1, [X31 + 0xE0]
	0x03AB07D4 STP V0, V1, [X31 + 0x170]
	0x03AB07D8 STR X8, [X31 + 0x190]
	0x03AB07DC BL 0x2439E74
	0x03AB07E0 LDUR V0, [X23 + 0x1]
	0x03AB07E4 LDUR V1, [X23 + 0x11]
	0x03AB07E8 LDR V2, [X31 + 0x16]
	0x03AB07EC LDRB W24, [X31 + 0x140]
	0x03AB07F0 STP V0, V1, [X31 + 0x170]
	0x03AB07F4 STUR V2, [X23 + 0x4F]
	0x03AB07F8 B 0x3AB080C
	0x03AB07FC MOVI V0.2D, 0x0
	0x03AB0800 MOV W24, W31
	0x03AB0804 STUR V0, [X23 + 0x4F]
	0x03AB0808 STP V0, V0, [X31 + 0x170]
	0x03AB080C LDP V0, V1, [X31 + 0x170]
	0x03AB0810 LDUR V2, [X23 + 0x4F]
	0x03AB0814 LDR X0, [X22]
	0x03AB0818 STP V0, V1, [X31 + 0x140]
	0x03AB081C STUR V2, [X23 + 0x1F]
	0x03AB0820 LDR W8, [X0 + 0xE0]
	0x03AB0824 CBNZ W8, 0x3AB082C
	0x03AB0828 BL 0x1C16DFC
	0x03AB082C ADD X8, X31, 0xB0
	0x03AB0830 MOV X0, X20
	0x03AB0834 MOV X1, X31

ISIL:
	001 Subtract X31, X31, 32
	002 Move [X31+16], X30
	003 Move [X31+24], X19
	004 NotImplemented "Instruction STRH not yet implemented."
	005 Move X8, [X2+464]
	006 Compare X8, 0
	007 JumpIfEqual {62}
	008 Move W8, [X8+421]
	009 Compare W8, 0
	010 JumpIfEqual {30}
	011 Compare X1, 0
	012 JumpIfEqual {62}
	013 Move W8, [X1+728]
	014 Compare W8, 0
	015 JumpIfEqual {32}
	016 Move W8, [X2+224]
	017 Compare W8, 0
	018 JumpIfEqual {22}
	019 Move W8, [X2+380]
	020 Compare W8, 0
	021 JumpIfEqual {32}
	022 Add X19, X1, 732
	023 Add X0, X31, 8
	024 Move W2, 3
	025 Move W1, W31
	026 Move X3, X31
	027 NotImplemented "Instruction STRH not yet implemented."
	028 Call DepthState..ctor, X0, X1, X2
	029 NotImplemented "Instruction LDRH not yet implemented."
	030 Compare X1, 0
	031 JumpIfEqual {62}
	032 Add X19, X1, 732
	033 Move X0, X19
	034 Move X1, X31
	035 Call RenderStateBlock.get_depthState, X0
	036 NotImplemented "Instruction STRH not yet implemented."
	037 Add X0, X31, 12
	038 Move X1, X31
	039 Call DepthState.get_compareFunction, X0
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Add X0, X31, 4
	042 Move W1, 1
	043 Move W2, 4
	044 Move X3, X31
	045 NotImplemented "Instruction STRH not yet implemented."
	046 Call DepthState..ctor, X0, X1, X2
	047 NotImplemented "Instruction LDRH not yet implemented."
	048 Move X0, X19
	049 Move X2, X31
	050 Call RenderStateBlock.set_depthState, X0, X1
	051 Move X0, X19
	052 Move X1, X31
	053 Call RenderStateBlock.get_mask, X0
	054 Or W1, W0, 4
	055 Move X0, X19
	056 Move X2, X31
	057 Call RenderStateBlock.set_mask, X0, X1
	058 Move X30, [X31+16]
	059 Move X19, [X31+24]
	060 Add X31, X31, 32
	061 Return 
	062 Call 0x1C17F20

Method: System.Void ExecutePass(UnityEngine.Rendering.ScriptableRenderContext context, UnityEngine.Rendering.Universal.Internal.DrawObjectsPass/PassData data, ref UnityEngine.Rendering.Universal.RenderingData renderingData, System.Boolean yFlip)

Disassembly:
	0x03AB0838 BL 0x3A74084
	0x03AB083C LDP V0, V1, [X31 + 0xB0]
	0x03AB0840 LDR X8, [X31 + 0xD0]
	0x03AB0844 STP V0, V1, [X31 + 0x110]
	0x03AB0848 STR X8, [X31 + 0x130]
	0x03AB084C CBZ W24, 0x3AB0888
	0x03AB0850 LDUR V0, [X23 + 0x7]
	0x03AB0854 LDUR V1, [X23 + 0x17]
	0x03AB0858 LDUR X8, [X23 + 0x27]
	0x03AB085C LDP V2, V3, [X31 + 0x110]
	0x03AB0860 LDR X9, [X31 + 0x130]
	0x03AB0864 ADD X0, X31, 0x80
	0x03AB0868 ADD X1, X31, 0x50
	0x03AB086C MOV X2, X31
	0x03AB0870 STP V0, V1, [X31 + 0x80]
	0x03AB0874 STR X8, [X31 + 0xA0]
	0x03AB0878 STP V2, V3, [X31 + 0x50]
	0x03AB087C STR X9, [X31 + 0x70]
	0x03AB0880 BL 0x3C4B708
	0x03AB0884 TBZ X0, 0x0, 0x3AB08F4
	0x03AB0888 LDR X0, [X22]
	0x03AB088C ADRP X22, 0x6A0000
	0x03AB0890 LDR W8, [X0 + 0xE0]
	0x03AB0894 LDR X22, [X22 + 0x9B0]
	0x03AB0898 CBNZ W8, 0x3AB08A0
	0x03AB089C BL 0x1C16DFC
	0x03AB08A0 ADD X8, X31, 0x28
	0x03AB08A4 MOV X0, X20
	0x03AB08A8 MOV X1, X31
	0x03AB08AC BL 0x3A74084
	0x03AB08B0 LDUR V0, [X31 + 0x28]
	0x03AB08B4 LDUR V1, [X31 + 0x38]
	0x03AB08B8 LDR X8, [X31 + 0x48]
	0x03AB08BC LDR X0, [X22]
	0x03AB08C0 STP V0, V1, [X31 + 0xB0]
	0x03AB08C4 STR X8, [X31 + 0xD0]
	0x03AB08C8 LDR W8, [X0 + 0xE0]
	0x03AB08CC CBNZ W8, 0x3AB08D4
	0x03AB08D0 BL 0x1C16DFC
	0x03AB08D4 LDP V0, V1, [X31 + 0xB0]
	0x03AB08D8 LDR X8, [X31 + 0xD0]
	0x03AB08DC ADD X0, X31, 0x0
	0x03AB08E0 MOV X1, X31
	0x03AB08E4 STP V0, V1, [X31]
	0x03AB08E8 STR X8, [X31 + 0x20]
	0x03AB08EC BL 0x39D4600
	0x03AB08F0 STR X0, [X19 + 0xE0]
	0x03AB08F4 LDR X8, [X21 + 0x28]
	0x03AB08F8 LDR X9, [X31 + 0x1A8]
	0x03AB08FC CMP X8, X9
	0x03AB0900 B.NE 0x3AB091C
	0x03AB0904 LDP X20, X19, [X31 + 0x1E0]
	0x03AB0908 LDP X22, X21, [X31 + 0x1D0]
	0x03AB090C LDP X24, X23, [X31 + 0x1C0]
	0x03AB0910 LDP X29, X30, [X31 + 0x1B0]
	0x03AB0914 ADD X31, X31, 0x1F0
	0x03AB0918 RET
	0x03AB091C BL 0x3EB1B20
	0x03AB0920 STR X2, [X0 + 0xE0]
	0x03AB0924 RET
	0x03AB0928 STP D11, D10, [X31 - 0x50]!
	0x03AB092C STP D9, D8, [X31 + 0x10]
	0x03AB0930 STP X30, X23, [X31 + 0x20]
	0x03AB0934 STP X22, X21, [X31 + 0x30]
	0x03AB0938 STP X20, X19, [X31 + 0x40]
	0x03AB093C ADRP X23, 0x932000
	0x03AB0940 ADRP X22, 0x6A4000
	0x03AB0944 LDRB W8, [X23 + 0x45B]
	0x03AB0948 LDR X22, [X22 + 0x20]
	0x03AB094C MOV V8.16B, V3.16B
	0x03AB0950 MOV V9.16B, V2.16B
	0x03AB0954 MOV V10.16B, V1.16B
	0x03AB0958 MOV V11.16B, V0.16B
	0x03AB095C MOV W19, W2
	0x03AB0960 MOV X21, X1
	0x03AB0964 MOV W20, W0
	0x03AB0968 TBNZ X8, 0x0, 0x3AB0980
	0x03AB096C ADRP X0, 0x6A4000
	0x03AB0970 LDR X0, [X0 + 0x20]
	0x03AB0974 BL 0x1C16CF4
	0x03AB0978 MOVZ W8, 0x1
	0x03AB097C STRB W8, [X23 + 0x45B]
	0x03AB0980 LDR X0, [X22]
	0x03AB0984 LDR W8, [X0 + 0xE0]
	0x03AB0988 CBNZ W8, 0x3AB0990
	0x03AB098C BL 0x1C16DFC
	0x03AB0990 CBZ X21, 0x3AB09E4
	0x03AB0994 LDR X8, [X22]
	0x03AB0998 MOV X0, X21
	0x03AB099C MOV V0.16B, V11.16B
	0x03AB09A0 MOV V1.16B, V10.16B
	0x03AB09A4 LDR X8, [X8 + 0xB8]
	0x03AB09A8 MOV V2.16B, V9.16B
	0x03AB09AC MOV V3.16B, V8.16B
	0x03AB09B0 MOV X2, X31
	0x03AB09B4 LDR W1, [X8 + 0xCC]
	0x03AB09B8 BL 0x3C15D80
	0x03AB09BC MOV X0, X21
	0x03AB09C0 MOV W1, W20
	0x03AB09C4 MOV W2, W19
	0x03AB09C8 LDP X20, X19, [X31 + 0x40]
	0x03AB09CC LDP X22, X21, [X31 + 0x30]
	0x03AB09D0 LDP X30, X23, [X31 + 0x20]
	0x03AB09D4 LDP D9, D8, [X31 + 0x10]
	0x03AB09D8 MOV X3, X31
	0x03AB09DC LDP D11, D10, [X31], #0x50
	0x03AB09E0 B 0x39EB1AC
	0x03AB09E4 BL 0x1C16F20
	0x03AB09E8 STR X30, [X31 - 0x30]!
	0x03AB09EC STP X22, X21, [X31 + 0x10]
	0x03AB09F0 STP X20, X19, [X31 + 0x20]
	0x03AB09F4 ADRP X21, 0x932000
	0x03AB09F8 ADRP X22, 0x6A3000
	0x03AB09FC LDRB W8, [X21 + 0x45C]
	0x03AB0A00 LDR X22, [X22 + 0xFF0]
	0x03AB0A04 MOV X20, X2
	0x03AB0A08 MOV X19, X0
	0x03AB0A0C TBNZ X8, 0x0, 0x3AB0A24
	0x03AB0A10 ADRP X0, 0x6A3000
	0x03AB0A14 LDR X0, [X0 + 0xFF0]
	0x03AB0A18 BL 0x1C16CF4
	0x03AB0A1C MOVZ W8, 0x1
	0x03AB0A20 STRB W8, [X21 + 0x45C]
	0x03AB0A24 LDR X0, [X22]
	0x03AB0A28 LDR W8, [X0 + 0xE0]
	0x03AB0A2C CBNZ W8, 0x3AB0A34
	0x03AB0A30 BL 0x1C16DFC
	0x03AB0A34 MOV X0, X20
	0x03AB0A38 MOV X1, X31
	0x03AB0A3C BL 0x3A43B70
	0x03AB0A40 CBZ X0, 0x3AB0A94
	0x03AB0A44 ADD X1, X20, 0x18
	0x03AB0A48 MOV X2, X31
	0x03AB0A4C MOV X21, X0
	0x03AB0A50 BL 0x3A35A68
	0x03AB0A54 TBZ X0, 0x0, 0x3AB0A94
	0x03AB0A58 MOV X0, X21
	0x03AB0A5C MOV X1, X31
	0x03AB0A60 BL 0x3A35A14
	0x03AB0A64 LDR X20, [X0]
	0x03AB0A68 MOV X0, X21
	0x03AB0A6C MOV X1, X31
	0x03AB0A70 BL 0x3A35A1C
	0x03AB0A74 LDR X2, [X0]
	0x03AB0A78 MOV X0, X19
	0x03AB0A7C MOV X1, X20
	0x03AB0A80 LDP X20, X19, [X31 + 0x20]
	0x03AB0A84 LDP X22, X21, [X31 + 0x10]
	0x03AB0A88 MOV X3, X31
	0x03AB0A8C LDR X30, [X31], #0x30
	0x03AB0A90 B 0x3A44078
	0x03AB0A94 LDP X20, X19, [X31 + 0x20]
	0x03AB0A98 LDP X22, X21, [X31 + 0x10]
	0x03AB0A9C LDR X30, [X31], #0x30
	0x03AB0AA0 RET
	0x03AB0AA4 SUB X31, X31, 0x1A0
	0x03AB0AA8 STP D9, D8, [X31 + 0x130]
	0x03AB0AAC STP X29, X30, [X31 + 0x140]
	0x03AB0AB0 STP X28, X27, [X31 + 0x150]
	0x03AB0AB4 STP X26, X25, [X31 + 0x160]
	0x03AB0AB8 STP X24, X23, [X31 + 0x170]
	0x03AB0ABC STP X22, X21, [X31 + 0x180]
	0x03AB0AC0 STP X20, X19, [X31 + 0x190]
	0x03AB0AC4 ADRP X21, 0x932000
	0x03AB0AC8 LDRB W8, [X21 + 0x45D]
	0x03AB0ACC MOV X19, X2
	0x03AB0AD0 MOV X20, X0
	0x03AB0AD4 TBNZ X8, 0x0, 0x3AB0B94
	0x03AB0AD8 ADRP X0, 0x6A8000
	0x03AB0ADC LDR X0, [X0 + 0x20]
	0x03AB0AE0 BL 0x1C16CF4
	0x03AB0AE4 ADRP X0, 0x6A2000
	0x03AB0AE8 LDR X0, [X0 + 0xE28]
	0x03AB0AEC BL 0x1C16CF4
	0x03AB0AF0 ADRP X0, 0x66B000
	0x03AB0AF4 LDR X0, [X0 + 0x8F8]
	0x03AB0AF8 BL 0x1C16CF4
	0x03AB0AFC ADRP X0, 0x643000
	0x03AB0B00 LDR X0, [X0 + 0xA28]
	0x03AB0B04 BL 0x1C16CF4
	0x03AB0B08 ADRP X0, 0x643000
	0x03AB0B0C LDR X0, [X0 + 0x9D0]
	0x03AB0B10 BL 0x1C16CF4
	0x03AB0B14 ADRP X0, 0x643000
	0x03AB0B18 LDR X0, [X0 + 0x598]
	0x03AB0B1C BL 0x1C16CF4
	0x03AB0B20 ADRP X0, 0x6A4000
	0x03AB0B24 LDR X0, [X0 + 0xA8]
	0x03AB0B28 BL 0x1C16CF4
	0x03AB0B2C ADRP X0, 0x6A3000
	0x03AB0B30 LDR X0, [X0 + 0x98]
	0x03AB0B34 BL 0x1C16CF4
	0x03AB0B38 ADRP X0, 0x6A4000
	0x03AB0B3C LDR X0, [X0 + 0x10]
	0x03AB0B40 BL 0x1C16CF4
	0x03AB0B44 ADRP X0, 0x6A3000
	0x03AB0B48 LDR X0, [X0 + 0xFF0]
	0x03AB0B4C BL 0x1C16CF4
	0x03AB0B50 ADRP X0, 0x66C000
	0x03AB0B54 LDR X0, [X0 + 0x8A8]
	0x03AB0B58 BL 0x1C16CF4
	0x03AB0B5C ADRP X0, 0x66D000
	0x03AB0B60 LDR X0, [X0 + 0xFC0]
	0x03AB0B64 BL 0x1C16CF4
	0x03AB0B68 ADRP X0, 0x6A6000
	0x03AB0B6C LDR X0, [X0 + 0x468]
	0x03AB0B70 BL 0x1C16CF4
	0x03AB0B74 ADRP X0, 0x6A7000
	0x03AB0B78 LDR X0, [X0 + 0x770]
	0x03AB0B7C BL 0x1C16CF4
	0x03AB0B80 ADRP X0, 0x6A5000
	0x03AB0B84 LDR X0, [X0 + 0xF90]
	0x03AB0B88 BL 0x1C16CF4
	0x03AB0B8C MOVZ W8, 0x1
	0x03AB0B90 STRB W8, [X21 + 0x45D]
	0x03AB0B94 ADD X24, X19, 0x18
	0x03AB0B98 MOVI V0.2D, 0x0
	0x03AB0B9C MOV X0, X24
	0x03AB0BA0 MOV X1, X31
	0x03AB0BA4 STRB W31, [X31 + 0x128]
	0x03AB0BA8 STP X31, X31, [X31 + 0x118]
	0x03AB0BAC STR X31, [X31 + 0x110]
	0x03AB0BB0 STR X31, [X31 + 0xE0]
	0x03AB0BB4 STR X31, [X31 + 0xB0]
	0x03AB0BB8 STP V0, V0, [X31 + 0xF0]
	0x03AB0BBC STP V0, V0, [X31 + 0xC0]
	0x03AB0BC0 STP V0, V0, [X31 + 0x90]
	0x03AB0BC4 BL 0x3A9006C
	0x03AB0BC8 CBZ X20, 0x3AB1158
	0x03AB0BCC ADD X22, X20, 0xE8
	0x03AB0BD0 MOV W26, W0
	0x03AB0BD4 AND W3, W0, 0x1
	0x03AB0BD8 MOV X0, X20
	0x03AB0BDC MOV X1, X19
	0x03AB0BE0 MOV X2, X22
	0x03AB0BE4 BL 0x3AB1290
	0x03AB0BE8 LDR X8, [X20 + 0xE8]
	0x03AB0BEC CBZ X8, 0x3AB1158
	0x03AB0BF0 ADRP X9, 0x643000
	0x03AB0BF4 LDR X9, [X9 + 0x598]
	0x03AB0BF8 LDR X21, [X8 + 0x38]
	0x03AB0BFC LDR X0, [X9]
	0x03AB0C00 LDR W9, [X0 + 0xE0]
	0x03AB0C04 CBNZ W9, 0x3AB0C0C
	0x03AB0C08 BL 0x1C16DFC
	0x03AB0C0C MOV X0, X21
	0x03AB0C10 MOV X1, X31
	0x03AB0C14 MOV X2, X31
	0x03AB0C18 BL 0x3C3883C
	0x03AB0C1C TBZ X0, 0x0, 0x3AB0D04
	0x03AB0C20 ADRP X8, 0x643000
	0x03AB0C24 LDR X8, [X8 + 0x9D0]
	0x03AB0C28 MOVZ W1, 0x2
	0x03AB0C2C LDR X0, [X8]
	0x03AB0C30 BL 0x1C16D6C
	0x03AB0C34 LDR X8, [X22]
	0x03AB0C38 CBZ X8, 0x3AB1158
	0x03AB0C3C LDUR V0, [X8 + 0x38]
	0x03AB0C40 ADRP X8, 0x6A8000
	0x03AB0C44 LDR X8, [X8 + 0x20]
	0x03AB0C48 MOV X19, X0
	0x03AB0C4C ADD X1, X31, 0x10
	0x03AB0C50 STR V0, [X31 + 0x1]
	0x03AB0C54 LDR X0, [X8]
	0x03AB0C58 BL 0x1C16E04
	0x03AB0C5C CBZ X19, 0x3AB1158
	0x03AB0C60 MOV X21, X0
	0x03AB0C64 CBZ X0, 0x3AB0C7C
	0x03AB0C68 LDR X8, [X19]
	0x03AB0C6C MOV X0, X21
	0x03AB0C70 LDR X1, [X8 + 0x40]
	0x03AB0C74 BL 0x1C16E00
	0x03AB0C78 CBZ X0, 0x3AB1160
	0x03AB0C7C LDR W8, [X19 + 0x18]
	0x03AB0C80 CBZ W8, 0x3AB115C
	0x03AB0C84 MOV X0, X20
	0x03AB0C88 MOV X1, X31
	0x03AB0C8C STR X21, [X19 + 0x20]
	0x03AB0C90 BL 0x33BE520
	0x03AB0C94 CBZ X0, 0x3AB1158
	0x03AB0C98 LDR X8, [X0]
	0x03AB0C9C LDP X9, X1, [X8 + 0x1A8]
	0x03AB0CA0 BLR X9
	0x03AB0CA4 MOV X20, X0
	0x03AB0CA8 CBZ X0, 0x3AB0CC0
	0x03AB0CAC LDR X8, [X19]
	0x03AB0CB0 MOV X0, X20
	0x03AB0CB4 LDR X1, [X8 + 0x40]
	0x03AB0CB8 BL 0x1C16E00
	0x03AB0CBC CBZ X0, 0x3AB1160
	0x03AB0CC0 LDR W8, [X19 + 0x18]
	0x03AB0CC4 CMP W8, 0x1
	0x03AB0CC8 B.LS 0x3AB115C
	0x03AB0CCC STR X20, [X19 + 0x28]
	0x03AB0CD0 ADRP X8, 0x643000
	0x03AB0CD4 LDR X8, [X8 + 0xA28]
	0x03AB0CD8 LDR X0, [X8]
	0x03AB0CDC LDR W8, [X0 + 0xE0]
	0x03AB0CE0 CBNZ W8, 0x3AB0CE8
	0x03AB0CE4 BL 0x1C16DFC
	0x03AB0CE8 ADRP X8, 0x6A7000
	0x03AB0CEC LDR X8, [X8 + 0x770]
	0x03AB0CF0 MOV X1, X19
	0x03AB0CF4 MOV X2, X31
	0x03AB0CF8 LDR X0, [X8]
	0x03AB0CFC BL 0x3C066BC
	0x03AB0D00 B 0x3AB1134
	0x03AB0D04 ADRP X8, 0x6A4000
	0x03AB0D08 LDR X8, [X8 + 0x10]
	0x03AB0D0C LDR X0, [X8]
	0x03AB0D10 LDR W8, [X0 + 0xE0]
	0x03AB0D14 CBNZ W8, 0x3AB0D1C
	0x03AB0D18 BL 0x1C16DFC
	0x03AB0D1C ADD X8, X31, 0x68
	0x03AB0D20 MOV X0, X19
	0x03AB0D24 MOV X1, X31
	0x03AB0D28 BL 0x3A72384
	0x03AB0D2C ADRP X9, 0x6A3000
	0x03AB0D30 LDUR V0, [X31 + 0x68]
	0x03AB0D34 LDUR V1, [X31 + 0x78]
	0x03AB0D38 LDR X8, [X31 + 0x88]
	0x03AB0D3C LDR X9, [X9 + 0xFF0]
	0x03AB0D40 STP V0, V1, [X31 + 0x10]
	0x03AB0D44 STR X8, [X31 + 0x30]
	0x03AB0D48 LDR X0, [X9]
	0x03AB0D4C LDR W8, [X0 + 0xE0]
	0x03AB0D50 CBNZ W8, 0x3AB0D58
	0x03AB0D54 BL 0x1C16DFC
	0x03AB0D58 MOV X0, X19
	0x03AB0D5C MOV X1, X31
	0x03AB0D60 BL 0x3A43B70
	0x03AB0D64 MOV X21, X0
	0x03AB0D68 CBZ X0, 0x3AB0D98
	0x03AB0D6C LDP V0, V1, [X31 + 0x10]
	0x03AB0D70 LDR X8, [X31 + 0x30]
	0x03AB0D74 MOV X0, X21
	0x03AB0D78 MOV X1, X24
	0x03AB0D7C MOV X2, X31
	0x03AB0D80 ADD X23, X31, 0xC0
	0x03AB0D84 STP V0, V1, [X31 + 0xC0]
	0x03AB0D88 STR X8, [X31 + 0xE0]
	0x03AB0D8C BL 0x3A35A68
	0x03AB0D90 AND W9, W0, 0x1
	0x03AB0D94 B 0x3AB0DB0
	0x03AB0D98 LDP V0, V1, [X31 + 0x10]
	0x03AB0D9C LDR X8, [X31 + 0x30]
	0x03AB0DA0 MOV W9, W31
	0x03AB0DA4 ADD X23, X31, 0xF0
	0x03AB0DA8 STP V0, V1, [X31 + 0xF0]
	0x03AB0DAC STR X8, [X31 + 0x110]
	0x03AB0DB0 LDR X8, [X23 + 0x20]
	0x03AB0DB4 LDP V1, V0, [X23]
	0x03AB0DB8 ADD X0, X31, 0x40
	0x03AB0DBC MOV X1, X31
	0x03AB0DC0 STR W9, [X31 + 0xC]
	0x03AB0DC4 STR X8, [X31 + 0xB0]
	0x03AB0DC8 STP V1, V0, [X31 + 0x90]
	0x03AB0DCC STP V1, V0, [X31 + 0x40]
	0x03AB0DD0 STR X8, [X31 + 0x60]

ISIL:
	001 Move [X31-112], D9
	002 Move [X31-104], D8
	003 Move [X31+16], X29
	004 Move [X31+24], X30
	005 Move [X31+32], X28
	006 Move [X31+40], X27
	007 Move [X31+48], X26
	008 Move [X31+56], X25
	009 Move [X31+64], X24
	010 Move [X31+72], X23
	011 Move [X31+80], X22
	012 Move [X31+88], X21
	013 Move [X31+96], X20
	014 Move [X31+104], X19
	015 Subtract X31, X31, 480
	016 NotImplemented "Instruction MRS not yet implemented."
	017 Move X8, [X26+40]
	018 Move X19, 0x933000
	019 Move W22, W3
	020 Move X20, X2
	021 Move [X31+472], X8
	022 Move W8, [X19+1107]
	023 Move X21, X1
	024 Move [X31+64], X0
	025 Move TEMP, X8
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {61}
	029 Move X0, 0x66C000
	030 Move X0, [X0+2296]
	031 Call 0x1C17CF4
	032 Move X0, 0x6A5000
	033 Move X0, [X0+176]
	034 Call 0x1C17CF4
	035 Move X0, 0x6A8000
	036 Move X0, [X0+360]
	037 Call 0x1C17CF4
	038 Move X0, 0x6A5000
	039 Move X0, [X0+16]
	040 Call 0x1C17CF4
	041 Move X0, 0x6A1000
	042 Move X0, [X0+3200]
	043 Call 0x1C17CF4
	044 Move X0, 0x6A4000
	045 Move X0, [X0+4080]
	046 Call 0x1C17CF4
	047 Move X0, 0x6A5000
	048 Move X0, [X0+32]
	049 Call 0x1C17CF4
	050 Move X0, 0x6A8000
	051 Move X0, [X0+4000]
	052 Call 0x1C17CF4
	053 Move X0, 0x6A8000
	054 Move X0, [X0+4008]
	055 Call 0x1C17CF4
	056 Move X0, 0x6A8000
	057 Move X0, [X0+3784]
	058 Call 0x1C17CF4
	059 Move W8, 1
	060 Move [X19+1107], W8
	061 Add X0, X31, 272
	062 Move W2, 196
	063 Move W1, W31
	064 Move [X31+56], W31
	065 Move [X31+16], X31
	066 Move [X31+24], X31
	067 Move [X31+32], X31
	068 Call 0x3EB2B10
	069 Compare X21, 0
	070 JumpIfEqual {349}
	071 Move X19, [X20]
	072 Move X2, [X21+872]
	073 Move X23, 0x6A8000
	074 Move X23, [X23+360]
	075 Add X0, X31, 56
	076 Move X1, X19
	077 Move X3, X31
	078 Call ProfilingScope..ctor, X0, X1, X2
	079 Move W8, [X21+728]
	080 Move X0, [X23]
	081 Move S0, 1
	082 Move S1, W31
	083 NotImplemented "Instruction CMP not yet implemented."
	084 NotImplemented "Instruction FCSEL not yet implemented."
	085 Move [X31+48], X31
	086 Move [X31+44], W31
	087 Move [X31+40], S0
	088 Move W8, [X0+224]
	089 Compare W8, 0
	090 JumpIfNotEqual {92}
	091 Call 0x1C17DFC
	092 Compare X19, 0
	093 JumpIfEqual {350}
	094 Move X8, [X23]
	095 Move S3, [X31+40]
	096 Move S2, [X31+44]
	097 Move S1, [X31+48]
	098 Move S0, [X31+52]
	099 Move X8, [X8+184]
	100 Move W1, [X8]
	101 Move X0, X19
	102 Move X2, X31
	103 Call CommandBuffer.SetGlobalVector, X0, X1, X2
	104 Move W8, [X21+426]
	105 Compare W8, 0
	106 JumpIfEqual {119}
	107 Move W8, [X21+881]
	108 Compare W8, 0
	109 JumpIfEqual {119}
	110 Move X0, [X21+432]
	111 Compare X0, 0
	112 JumpIfEqual {353}
	113 Move W1, W31
	114 Move X2, X31
	115 Call XRPass.GetViewport, X0, X1
	116 Move X0, X19
	117 Move X1, X31
	118 Call CommandBuffer.SetViewport, X0, X1
	119 Move X23, 0x6A5000
	120 Move X23, [X23+32]
	121 And W31, W22, 1
	122 Move S0, 1
	123 Move S1, -1
	124 Move X0, [X23]
	125 NotImplemented "Instruction FCSEL not yet implemented."
	126 Move S1, W31
	127 NotImplemented "Instruction FCSEL not yet implemented."
	128 Move W8, [X0+224]
	129 Compare W8, 0
	130 JumpIfNotEqual {133}
	131 Call 0x1C17DFC
	132 Move X0, [X23]
	133 Move X8, [X0+184]
	134 Move W1, [X8+176]
	135 Move S3, 1
	136 Move X0, X19
	137 Move V0, V8
	138 Move V1, V9
	139 Move V2, V8
	140 Move X2, X31
	141 Call CommandBuffer.SetGlobalVector, X0, X1, X2
	142 Move W8, [X20+248]
	143 Move S8, W31
	144 NotImplemented "Instruction CMP not yet implemented."
	145 Move W8, [X21+728]
	146 Move S0, 1
	147 Move S1, W31
	148 NotImplemented "Instruction CMP not yet implemented."
	149 NotImplemented "Instruction FCSEL not yet implemented."
	150 Move X0, [X23]
	151 Move W8, [X0+224]
	152 Compare W8, 0
	153 JumpIfNotEqual {156}
	154 Call 0x1C17DFC
	155 Move X0, [X23]
	156 Move X8, [X0+184]
	157 Move W1, [X8+60]
	158 Move X0, X19
	159 Move V0, V8
	160 Move X2, X31
	161 Call CommandBuffer.SetGlobalFloat, X0, X1, V0
	162 Move X0, [X21+888]
	163 Compare X0, 0
	164 JumpIfEqual {351}
	165 Move X8, [X0]
	166 Move X9, [X8+488]
	167 Move X2, [X8+496]
	168 Move X1, X19
	169 NotImplemented "Instruction BLR not yet implemented."
	170 Move X27, 0x6A1000
	171 Move X27, [X27+3200]
	172 Move X0, [X27]
	173 Move W8, [X0+224]
	174 Compare W8, 0
	175 JumpIfNotEqual {177}
	176 Call 0x1C17DFC
	177 Add X0, X31, 64
	178 Move X1, X19
	179 Move X2, X31
	180 Call ScriptableRenderContext.ExecuteCommandBuffer, X0, X1
	181 Move X0, X19
	182 Move X1, X31
	183 Call CommandBuffer.Clear, X0
	184 Move W9, [X21+728]
	185 Compare W9, 0
	186 JumpIfEqual {188}
	187 Move W22, [X20+396]
	188 Move W22, 23
	189 Move X10, [X20+464]
	190 Compare X10, 0
	191 JumpIfEqual {352}
	192 Move X8, 0x6A5000
	193 Move X8, [X8+16]
	194 Compare W9, 0
	195 JumpIfEqual {206}
	196 Move W9, [X10+421]
	197 Compare W9, 0
	198 JumpIfEqual {206}
	199 Move W9, [X20+224]
	200 Compare W9, 0
	201 JumpIfEqual {205}
	202 Move W9, [X20+380]
	203 Compare W9, 0
	204 JumpIfEqual {206}
	205 Move W22, 51
	206 Add X9, X21, 840
	207 Move X10, [X9+16]
	208 Move V0, [X9]
	209 Move X0, [X8]
	210 Move [X31+32], X10
	211 Move [X31+1], V0
	212 Move W8, [X0+224]
	213 Move X23, [X21+864]
	214 Compare W8, 0
	215 JumpIfNotEqual {217}
	216 Call 0x1C17DFC
	217 Add X8, X31, 72
	218 Move X0, X23
	219 Move X1, X20
	220 Move W2, W22
	221 Move X3, X31
	222 Call RenderingUtils.CreateDrawingSettings, X0, X1, X2
	223 Move X22, 0x6A4000
	224 Move X22, [X22+4080]
	225 Add X0, X31, 272
	226 Add X1, X31, 72
	227 Move W2, 196
	228 Call 0x3EB2AC0
	229 Move X0, [X22]
	230 Move W8, [X0+224]
	231 Compare W8, 0
	232 JumpIfNotEqual {234}
	233 Call 0x1C17DFC
	234 Move X0, X20
	235 Move X1, X31
	236 Call ScriptableRenderPass.GetActiveDebugHandler, X0
	237 Move X22, X0
	238 Compare X0, 0
	239 JumpIfEqual {286}
	240 Move X28, 0x6A8000
	241 Move X28, [X28+4008]
	242 Move X23, [X31+64]
	243 Move X8, [X28]
	244 Move W9, [X8+224]
	245 Compare W9, 0
	246 JumpIfNotEqual {250}
	247 Move X0, X8
	248 Call 0x1C17DFC
	249 Move X8, [X28]
	250 Move X9, [X8+184]
	251 Move X24, [X9+8]
	252 Compare X24, 0
	253 JumpIfNotEqual {276}
	254 Move W9, [X8+224]
	255 Compare W9, 0
	256 JumpIfNotEqual {260}
	257 Move X0, X8
	258 Call 0x1C17DFC
	259 Move X8, [X28]
	260 Move X9, 0x6A5000
	261 Move X8, [X8+184]
	262 Move X9, [X9+176]
	263 Move X25, [X8]
	264 Move X0, [X9]
	265 Call 0x1C17F10
	266 Move X8, 0x6A8000
	267 Move X8, [X8+4000]
	268 Move X24, X0
	269 Move X2, [X8]
	270 Move X1, X25
	271 Move X3, X31
	272 Call DrawFunction..ctor, X0, X1, X2
	273 Move X8, [X28]
	274 Move X8, [X8+184]
	275 Move [X8+8], X24
	276 Add X6, X21, 732
	277 Add X4, X31, 272
	278 Add X5, X31, 16
	279 Move X0, X22
	280 Move X1, X23
	281 Move X2, X19
	282 Move X3, X20
	283 Move X7, X24
	284 Move [X31], X31
	285 Call DebugHandler.DrawWithDebugRenderState, X0, X1, X2, X3, X4, X5, X6, X7
	286 Move X0, [X27]
	287 Move X22, [X20+8]
	288 Move X20, [X20+16]
	289 Move W8, [X0+224]
	290 Compare W8, 0
	291 JumpIfNotEqual {293}
	292 Call 0x1C17DFC
	293 Add X5, X21, 732
	294 Add X0, X31, 64
	295 Add X3, X31, 272
	296 Add X4, X31, 16
	297 Move X1, X22
	298 Move X2, X20
	299 Move X6, X31
	300 Call ScriptableRenderContext.DrawRenderers, X0, X1, X2, X3, X4
	301 Move X8, 0x66C000
	302 Move X8, [X8+2296]
	303 Move X0, [X8]
	304 Move W8, [X0+224]
	305 Compare W8, 0
	306 JumpIfNotEqual {308}
	307 Call 0x1C17DFC
	308 Move X8, 0x6A8000
	309 Move X8, [X8+3784]
	310 Move X1, [X8]
	311 Move X0, X19
	312 Move W2, W31
	313 Move X3, X31
	314 Call CoreUtils.SetKeyword, X0, X1, X2
	315 Move X0, [X27]
	316 Move W8, [X0+224]
	317 Compare W8, 0
	318 JumpIfNotEqual {320}
	319 Call 0x1C17DFC
	320 Add X0, X31, 64
	321 Move X1, X19
	322 Move X2, X31
	323 Call ScriptableRenderContext.ExecuteCommandBuffer, X0, X1
	324 Move X0, X19
	325 Move X1, X31
	326 Call CommandBuffer.Clear, X0
	327 Add X0, X31, 56
	328 Move X1, X31
	329 Call ProfilingScope.Dispose, X0
	330 Move X8, [X26+40]
	331 Move X9, [X31+472]
	332 NotImplemented "Instruction CMP not yet implemented."
	333 Add X31, X31, 480
	334 Move X20, [X31+96]
	335 Move X19, [X31+104]
	336 Move X22, [X31+80]
	337 Move X21, [X31+88]
	338 Move X24, [X31+64]
	339 Move X23, [X31+72]
	340 Move X26, [X31+48]
	341 Move X25, [X31+56]
	342 Move X28, [X31+32]
	343 Move X27, [X31+40]
	344 Move X29, [X31+16]
	345 Move X30, [X31+24]
	346 Move D9, [X31+112]
	347 Move D8, [X31+120]
	348 Return 
	349 Call 0x1C17F20
	350 Call 0x1C17F20
	351 Call 0x1C17F20
	352 Call 0x1C17F20
	353 Call 0x1C17F20
	354 Call 0x3EB2B20
	355 Move X19, X0
	356 NotImplemented "Instruction CMP not yet implemented."
	357 Move X0, X19
	358 Call 0x3EB2AD0
	359 Move X20, [X0]
	360 Call 0x3EB2AE0
	361 Add X0, X31, 56
	362 Move X1, X31
	363 Call ProfilingScope.Dispose, X0
	364 Compare X20, 0
	365 JumpIfEqual {330}
	366 Move X0, X20
	367 Call 0x1C17F18
	368 Move X20, X31
	369 Move X19, X0
	370 Add X0, X31, 56
	371 Move X1, X31
	372 Call ProfilingScope.Dispose, X0
	373 Compare X20, 0
	374 JumpIfNotEqual {377}
	375 Move X0, X19
	376 Call 0x1D2D690
	377 Move X0, X20
	378 Call 0x1C17F18
	379 Call 0x1991590

Method: System.Void Render(UnityEngine.Experimental.Rendering.RenderGraphModule.RenderGraph renderGraph, UnityEngine.Experimental.Rendering.RenderGraphModule.TextureHandle colorTarget, UnityEngine.Experimental.Rendering.RenderGraphModule.TextureHandle depthTarget, UnityEngine.Experimental.Rendering.RenderGraphModule.TextureHandle mainShadowsTexture, UnityEngine.Experimental.Rendering.RenderGraphModule.TextureHandle additionalShadowsTexture, ref UnityEngine.Rendering.Universal.RenderingData renderingData)

Disassembly:
	0x03AB0DD4 BL 0x39D4528
	0x03AB0DD8 LDR X0, [X19 + 0x1D0]
	0x03AB0DDC CBZ X0, 0x3AB1158
	0x03AB0DE0 ADRP X8, 0x6A3000
	0x03AB0DE4 LDR X8, [X8 + 0x98]
	0x03AB0DE8 LDR X9, [X0]
	0x03AB0DEC LDR X23, [X19]
	0x03AB0DF0 LDR X27, [X20 + 0xE0]
	0x03AB0DF4 LDR X8, [X8]
	0x03AB0DF8 MOV X1, X23
	0x03AB0DFC LDR X8, [X8 + 0xB8]
	0x03AB0E00 LDR X25, [X8]
	0x03AB0E04 LDP X8, X2, [X9 + 0x198]
	0x03AB0E08 BLR X8
	0x03AB0E0C CMP X27, X0
	0x03AB0E10 B.NE 0x3AB0E28
	0x03AB0E14 LDR X0, [X19 + 0x1D0]
	0x03AB0E18 CBZ X0, 0x3AB1158
	0x03AB0E1C MOV X1, X31
	0x03AB0E20 BL 0x3A44BD0
	0x03AB0E24 STR X0, [X20 + 0xE0]
	0x03AB0E28 ADRP X8, 0x6A4000
	0x03AB0E2C LDR X8, [X8 + 0xA8]
	0x03AB0E30 MOVZ W0, 0x1E
	0x03AB0E34 LDR X1, [X8]
	0x03AB0E38 BL 0x2235BC0
	0x03AB0E3C MOV X2, X0
	0x03AB0E40 ADD X0, X31, 0x128
	0x03AB0E44 MOV X1, X23
	0x03AB0E48 MOV X3, X31
	0x03AB0E4C BL 0x39B1DB0
	0x03AB0E50 LDR X8, [X22]
	0x03AB0E54 CBZ X8, 0x3AB116C
	0x03AB0E58 LDR X0, [X8 + 0x38]
	0x03AB0E5C CBZ X0, 0x3AB1170
	0x03AB0E60 MOV X1, X31
	0x03AB0E64 MOV X2, X31
	0x03AB0E68 BL 0x3C14F4C
	0x03AB0E6C LDR X8, [X22]
	0x03AB0E70 CBZ X8, 0x3AB1174
	0x03AB0E74 ADRP X9, 0x66B000
	0x03AB0E78 LDR X9, [X9 + 0x8F8]
	0x03AB0E7C LDRB W27, [X8 + 0x34]
	0x03AB0E80 LDR X0, [X9]
	0x03AB0E84 LDR W9, [X0 + 0xE0]
	0x03AB0E88 CBNZ W9, 0x3AB0E90
	0x03AB0E8C BL 0x1C16DFC
	0x03AB0E90 ADRP X8, 0x6A5000
	0x03AB0E94 LDR X8, [X8 + 0xF90]
	0x03AB0E98 CMP W27, 0x0
	0x03AB0E9C CSET W2, NE
	0x03AB0EA0 LDR X1, [X8]
	0x03AB0EA4 MOV X0, X23
	0x03AB0EA8 MOV X3, X31
	0x03AB0EAC BL 0x39E9618
	0x03AB0EB0 TBZ X26, 0x0, 0x3AB0FA8
	0x03AB0EB4 ADRP X8, 0x66D000
	0x03AB0EB8 LDR X8, [X8 + 0xFC0]
	0x03AB0EBC LDR X0, [X8]
	0x03AB0EC0 LDR W8, [X0 + 0xE0]
	0x03AB0EC4 CBNZ W8, 0x3AB0ECC
	0x03AB0EC8 BL 0x1C16DFC
	0x03AB0ECC MOV X0, X31
	0x03AB0ED0 BL 0x39EE864
	0x03AB0ED4 CBZ X0, 0x3AB118C
	0x03AB0ED8 LDR X0, [X0 + 0x10]
	0x03AB0EDC CBZ X0, 0x3AB1190
	0x03AB0EE0 ADRP X8, 0x6A6000
	0x03AB0EE4 LDR X8, [X8 + 0x468]
	0x03AB0EE8 LDR X1, [X8]
	0x03AB0EEC BL 0x22ACD04
	0x03AB0EF0 MOV X26, X0
	0x03AB0EF4 MOV X0, X24
	0x03AB0EF8 MOV X1, X31
	0x03AB0EFC BL 0x3A93358
	0x03AB0F00 MOV X27, X0
	0x03AB0F04 MOV X28, X1
	0x03AB0F08 MOV X0, X24
	0x03AB0F0C MOV X1, X31
	0x03AB0F10 BL 0x3A9344C
	0x03AB0F14 ADRP X8, 0x66C000
	0x03AB0F18 LDR X8, [X8 + 0x8A8]
	0x03AB0F1C MOV W29, W0
	0x03AB0F20 LDR X0, [X8]
	0x03AB0F24 LDR W8, [X0 + 0xE0]
	0x03AB0F28 CBNZ W8, 0x3AB0F30
	0x03AB0F2C BL 0x1C16DFC
	0x03AB0F30 ADD X4, X31, 0x118
	0x03AB0F34 MOV X0, X27
	0x03AB0F38 MOV X1, X28
	0x03AB0F3C MOV W2, W29
	0x03AB0F40 MOV X3, X26
	0x03AB0F44 MOV X5, X31
	0x03AB0F48 BL 0x3A91338
	0x03AB0F4C CBZ X21, 0x3AB0F6C
	0x03AB0F50 MOV X0, X21
	0x03AB0F54 MOV X1, X24
	0x03AB0F58 MOV X2, X31
	0x03AB0F5C BL 0x3A35A2C
	0x03AB0F60 TBZ X0, 0x0, 0x3AB0F6C
	0x03AB0F64 MOV W26, W31
	0x03AB0F68 B 0x3AB0F70
	0x03AB0F6C MOVZ W26, 0x2
	0x03AB0F70 LDRB W27, [X19 + 0x1A0]
	0x03AB0F74 MOV X0, X24
	0x03AB0F78 MOV X1, X31
	0x03AB0F7C BL 0x3A9344C
	0x03AB0F80 LDR X8, [X22]
	0x03AB0F84 CBZ X8, 0x3AB1194
	0x03AB0F88 LDR X1, [X8 + 0x38]
	0x03AB0F8C LDR V0, [X31 + 0x118]
	0x03AB0F90 LDR V1, [X31 + 0x11C]
	0x03AB0F94 LDR V2, [X31 + 0x120]
	0x03AB0F98 LDR V3, [X31 + 0x124]
	0x03AB0F9C EOR W8, W27, 0x1
	0x03AB0FA0 ORR W2, W26, W8, 0x0
	0x03AB0FA4 BL 0x3AB0928
	0x03AB0FA8 LDR W8, [X31 + 0xC]
	0x03AB0FAC CBZ W8, 0x3AB0FE0
	0x03AB0FB0 LDR X8, [X20 + 0xE0]
	0x03AB0FB4 CBZ X8, 0x3AB1178
	0x03AB0FB8 LDR X0, [X8 + 0x18]
	0x03AB0FBC CBZ X0, 0x3AB1018
	0x03AB0FC0 MOV X1, X31
	0x03AB0FC4 BL 0x3C1AB20
	0x03AB0FC8 LDR X8, [X22]
	0x03AB0FCC CMP W0, 0x1
	0x03AB0FD0 B.NE 0x3AB101C
	0x03AB0FD4 CBZ X8, 0x3AB11A8
	0x03AB0FD8 ADD X8, X8, 0x44
	0x03AB0FDC B 0x3AB1024
	0x03AB0FE0 LDR X8, [X22]
	0x03AB0FE4 CBZ X8, 0x3AB11A0
	0x03AB0FE8 LDR X3, [X20 + 0xE0]
	0x03AB0FEC ADD X1, X8, 0x38
	0x03AB0FF0 MOV X0, X19
	0x03AB0FF4 MOV X2, X25
	0x03AB0FF8 BL 0x3AB133C
	0x03AB0FFC LDR X0, [X19 + 0x1D0]
	0x03AB1000 CBZ X0, 0x3AB11A4
	0x03AB1004 MOV X1, X25
	0x03AB1008 MOV X2, X25
	0x03AB100C MOV X3, X31
	0x03AB1010 BL 0x3A4B4D8
	0x03AB1014 B 0x3AB1128
	0x03AB1018 LDR X8, [X22]
	0x03AB101C CBZ X8, 0x3AB1198
	0x03AB1020 ADD X8, X8, 0x40
	0x03AB1024 LDR X9, [X20 + 0xE0]
	0x03AB1028 CBZ X9, 0x3AB117C
	0x03AB102C LDRB W10, [X9 + 0xA8]
	0x03AB1030 LDR W22, [X8]
	0x03AB1034 CBZ W10, 0x3AB1068
	0x03AB1038 ADD X8, X31, 0x10
	0x03AB103C MOV X0, X9
	0x03AB1040 MOV X1, X31
	0x03AB1044 BL 0x39D48AC
	0x03AB1048 LDR X0, [X20 + 0xE0]
	0x03AB104C CBZ X0, 0x3AB119C
	0x03AB1050 LDR V8, [X31 + 0x30]
	0x03AB1054 ADD X8, X31, 0x10
	0x03AB1058 MOV X1, X31
	0x03AB105C BL 0x39D48AC
	0x03AB1060 LDR V9, [X31 + 0x34]
	0x03AB1064 B 0x3AB109C
	0x03AB1068 ADRP X24, 0x930000
	0x03AB106C LDRB W8, [X24 + 0xA48]
	0x03AB1070 CBNZ W8, 0x3AB1088
	0x03AB1074 ADRP X0, 0x64A000
	0x03AB1078 LDR X0, [X0 + 0xF08]
	0x03AB107C BL 0x1C16CF4
	0x03AB1080 MOVZ W8, 0x1
	0x03AB1084 STRB W8, [X24 + 0xA48]
	0x03AB1088 ADRP X8, 0x64A000
	0x03AB108C LDR X8, [X8 + 0xF08]
	0x03AB1090 LDR X8, [X8]
	0x03AB1094 LDR X8, [X8 + 0xB8]
	0x03AB1098 LDP S8, S9, [X8 + 0x8]
	0x03AB109C LDR X8, [X20 + 0xE8]
	0x03AB10A0 CBZ X8, 0x3AB1180
	0x03AB10A4 ADRP X9, 0x6A1000
	0x03AB10A8 LDR X9, [X9 + 0xE28]
	0x03AB10AC LDR X24, [X20 + 0xE0]
	0x03AB10B0 LDR X20, [X8 + 0x38]
	0x03AB10B4 LDR X0, [X9]
	0x03AB10B8 LDR W9, [X0 + 0xE0]
	0x03AB10BC CBNZ W9, 0x3AB10C4
	0x03AB10C0 BL 0x1C16DFC
	0x03AB10C4 FMOV S2, W31
	0x03AB10C8 FMOV S3, W31
	0x03AB10CC MOV X0, X23
	0x03AB10D0 MOV X1, X24
	0x03AB10D4 MOV V0.16B, V8.16B
	0x03AB10D8 MOV V1.16B, V9.16B
	0x03AB10DC MOV X2, X20
	0x03AB10E0 MOV W3, W22
	0x03AB10E4 MOV X4, X31
	0x03AB10E8 BL 0x39E23B4
	0x03AB10EC CBZ X21, 0x3AB1184
	0x03AB10F0 LDR X19, [X19 + 0x1D0]
	0x03AB10F4 MOV X0, X21
	0x03AB10F8 MOV X1, X31
	0x03AB10FC BL 0x3A35A14
	0x03AB1100 LDR X20, [X0]
	0x03AB1104 MOV X0, X21
	0x03AB1108 MOV X1, X31
	0x03AB110C BL 0x3A35A1C
	0x03AB1110 CBZ X19, 0x3AB1188
	0x03AB1114 LDR X2, [X0]
	0x03AB1118 MOV X0, X19
	0x03AB111C MOV X1, X20
	0x03AB1120 MOV X3, X31
	0x03AB1124 BL 0x3A4B4D8
	0x03AB1128 ADD X0, X31, 0x128
	0x03AB112C MOV X1, X31
	0x03AB1130 BL 0x39B1DB4
	0x03AB1134 LDP X20, X19, [X31 + 0x190]
	0x03AB1138 LDP X22, X21, [X31 + 0x180]
	0x03AB113C LDP X24, X23, [X31 + 0x170]
	0x03AB1140 LDP X26, X25, [X31 + 0x160]

ISIL:
	001 Move [X31-48], X29
	002 Move [X31-40], X30
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Subtract X31, X31, 768
	008 Move X22, 0x933000
	009 Move W8, [X22+1108]
	010 Move X20, X6
	011 Move X21, X1
	012 Move X19, X0
	013 Move [X31+760], X2
	014 Move [X31+752], X3
	015 Move [X31+744], X4
	016 Move [X31+736], X5
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {44}
	021 Move X0, 0x6A8000
	022 Move X0, [X0+4016]
	023 Call 0x1C17CF4
	024 Move X0, 0x6A8000
	025 Move X0, [X0+4024]
	026 Call 0x1C17CF4
	027 Move X0, 0x6A8000
	028 Move X0, [X0+4032]
	029 Call 0x1C17CF4
	030 Move X0, 0x6A1000
	031 Move X0, [X0+2696]
	032 Call 0x1C17CF4
	033 Move X0, 0x6A8000
	034 Move X0, [X0+4040]
	035 Call 0x1C17CF4
	036 Move X0, 0x6A8000
	037 Move X0, [X0+4008]
	038 Call 0x1C17CF4
	039 Move X0, 0x6A8000
	040 Move X0, [X0+4048]
	041 Call 0x1C17CF4
	042 Move W8, 1
	043 Move [X22+1108], W8
	044 NotImplemented "Instruction MOVI not yet implemented."
	045 Move [X31+704], V0
	046 Move [X31+712], V0
	047 Move [X31+696], X31
	048 Compare X21, 0
	049 JumpIfEqual {207}
	050 Move X8, 0x6A8000
	051 Move X9, 0x6A8000
	052 Move X8, [X8+4048]
	053 Move X9, [X9+4032]
	054 Move X3, [X19+376]
	055 Add X2, X31, 696
	056 Move X1, [X8]
	057 Move X4, [X9]
	058 Add X8, X31, 0
	059 Move X0, X21
	060 Call 0x2241F24, X0, X1, X2, X3
	061 Move V0, [X31]
	062 Move V1, [X31+16]
	063 Move X21, [X31+696]
	064 Move [X31+704], V0
	065 Move [X31+712], V1
	066 Add X0, X31, 704
	067 Add X1, X31, 760
	068 Move W2, W31
	069 Move X3, X31
	070 Call RenderGraphBuilder.UseColorBuffer, X0, X1, X2
	071 Compare X21, 0
	072 JumpIfEqual {208}
	073 Move [X21+16], X0
	074 Move X22, [X31+696]
	075 Add X0, X31, 704
	076 Add X1, X31, 752
	077 Move W2, 2
	078 Move X3, X31
	079 Call RenderGraphBuilder.UseDepthBuffer, X0, X1, X2
	080 Compare X22, 0
	081 JumpIfEqual {209}
	082 Move X21, 0x6A1000
	083 Move X21, [X21+2696]
	084 Move [X22+24], X0
	085 Move X0, [X21]
	086 Move W8, [X0+224]
	087 Compare W8, 0
	088 JumpIfNotEqual {90}
	089 Call 0x1C17DFC
	090 Add X0, X31, 744
	091 Move X1, X31
	092 Call TextureHandle.IsValid, X0
	093 Move TEMP, X0
	094 And TEMP, TEMP, 1
	095 Compare TEMP, 1
	096 JumpIfNotEqual {101}
	097 Add X0, X31, 704
	098 Add X1, X31, 744
	099 Move X2, X31
	100 Call RenderGraphBuilder.ReadTexture, X0, X1
	101 Move X0, [X21]
	102 Move W8, [X0+224]
	103 Compare W8, 0
	104 JumpIfNotEqual {106}
	105 Call 0x1C17DFC
	106 Add X0, X31, 736
	107 Move X1, X31
	108 Call TextureHandle.IsValid, X0
	109 Move TEMP, X0
	110 And TEMP, TEMP, 1
	111 Compare TEMP, 1
	112 JumpIfNotEqual {117}
	113 Add X0, X31, 704
	114 Add X1, X31, 736
	115 Move X2, X31
	116 Call RenderGraphBuilder.ReadTexture, X0, X1
	117 Move X21, [X31+696]
	118 Add X0, X31, 0
	119 Move W2, 696
	120 Move X1, X20
	121 Call 0x3EB2AC0
	122 Compare X21, 0
	123 JumpIfEqual {210}
	124 Add X0, X21, 32
	125 Add X1, X31, 0
	126 Move W2, 696
	127 Call 0x3EB2AC0
	128 Add X0, X31, 704
	129 Move W1, W31
	130 Move X2, X31
	131 Call RenderGraphBuilder.AllowPassCulling, X0, X1
	132 Move X20, [X31+696]
	133 Compare X20, 0
	134 JumpIfEqual {211}
	135 Move W8, [X19+384]
	136 Move X21, 0x6A8000
	137 Move X21, [X21+4008]
	138 Add X1, X19, 248
	139 Add X0, X20, 732
	140 Move W2, 108
	141 Move [X20+728], W8
	142 Call 0x3EB2B30
	143 Move V0, [X19+14]
	144 Move X8, [X19+240]
	145 Add X9, X20, 840
	146 Move [X9], V0
	147 Move [X9+16], X8
	148 Move X8, [X19+360]
	149 Move [X20+864], X8
	150 Move X8, [X19+376]
	151 Move [X20+872], X8
	152 Move W8, [X19+386]
	153 Move [X20+880], W8
	154 Move W8, [X19+385]
	155 Move [X20+888], X19
	156 Move [X20+881], W8
	157 Move X8, [X21]
	158 Move W9, [X8+224]
	159 Compare W9, 0
	160 JumpIfNotEqual {164}
	161 Move X0, X8
	162 Call 0x1C17DFC
	163 Move X8, [X21]
	164 Move X9, [X8+184]
	165 Move X19, [X9+16]
	166 Compare X19, 0
	167 JumpIfNotEqual {190}
	168 Move W9, [X8+224]
	169 Compare W9, 0
	170 JumpIfNotEqual {174}
	171 Move X0, X8
	172 Call 0x1C17DFC
	173 Move X8, [X21]
	174 Move X9, 0x6A7000
	175 Move X8, [X8+184]
	176 Move X9, [X9+4016]
	177 Move X20, [X8]
	178 Move X0, [X9]
	179 Call 0x1C17F10
	180 Move X8, 0x6A7000
	181 Move X8, [X8+4040]
	182 Move X19, X0
	183 Move X2, [X8]
	184 Move X1, X20
	185 Move X3, X31
	186 Call 0x25C88AC, X0, X1, X2
	187 Move X8, [X21]
	188 Move X8, [X8+184]
	189 Move [X8+16], X19
	190 Move X8, 0x6A7000
	191 Move X8, [X8+4024]
	192 Move X2, [X8]
	193 Add X0, X31, 704
	194 Move X1, X19
	195 Call 0x224207C, X0, X1
	196 Add X0, X31, 704
	197 Move X1, X31
	198 Call RenderGraphBuilder.Dispose, X0
	199 Add X31, X31, 768
	200 Move X20, [X31+32]
	201 Move X19, [X31+40]
	202 Move X22, [X31+16]
	203 Move X21, [X31+24]
	204 Move X29, [X31+48]
	205 Move X30, [X31+56]
	206 Return 
	207 Call 0x1C17F20
	208 Call 0x1C17F20
	209 Call 0x1C17F20
	210 Call 0x1C17F20
	211 Call 0x1C17F20
	212 Move X19, X0
	213 NotImplemented "Instruction CMP not yet implemented."
	214 Move X0, X19
	215 Call 0x3EB2AD0
	216 Move X20, [X0]
	217 Call 0x3EB2AE0
	218 Add X0, X31, 704
	219 Move X1, X31
	220 Call RenderGraphBuilder.Dispose, X0
	221 Compare X20, 0
	222 JumpIfEqual {199}
	223 Move X0, X20
	224 Call 0x1C17F18
	225 Move X20, X31
	226 Move X19, X0
	227 Add X0, X31, 704
	228 Move X1, X31
	229 Call RenderGraphBuilder.Dispose, X0
	230 Compare X20, 0
	231 JumpIfNotEqual {234}
	232 Move X0, X19
	233 Call 0x1D2D690
	234 Move X0, X20
	235 Call 0x1C17F18
	236 Call 0x1991590

Method: System.Void OnExecute(UnityEngine.Rendering.CommandBuffer cmd)

Disassembly:
	0x03AB1144 LDP X28, X27, [X31 + 0x150]

ISIL:
	001 Return 

Method: System.Void .cctor()

Disassembly:
	0x03AB1148 LDP X29, X30, [X31 + 0x140]
	0x03AB114C LDP D9, D8, [X31 + 0x130]
	0x03AB1150 ADD X31, X31, 0x1A0
	0x03AB1154 RET
	0x03AB1158 BL 0x1C16F20
	0x03AB115C BL 0x1C16F28
	0x03AB1160 BL 0x1C16F44
	0x03AB1164 MOV X1, X31
	0x03AB1168 BL 0x1C16DEC
	0x03AB116C BL 0x1C16F20
	0x03AB1170 BL 0x1C16F20
	0x03AB1174 BL 0x1C16F20
	0x03AB1178 BL 0x1C16F20
	0x03AB117C BL 0x1C16F20
	0x03AB1180 BL 0x1C16F20
	0x03AB1184 BL 0x1C16F20
	0x03AB1188 BL 0x1C16F20
	0x03AB118C BL 0x1C16F20
	0x03AB1190 BL 0x1C16F20
	0x03AB1194 BL 0x1C16F20
	0x03AB1198 BL 0x1C16F20
	0x03AB119C BL 0x1C16F20
	0x03AB11A0 BL 0x1C16F20
	0x03AB11A4 BL 0x1C16F20
	0x03AB11A8 BL 0x1C16F20
	0x03AB11AC B 0x3AB122C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x932000
	006 Move X21, 0x6A7000
	007 Move X19, 0x6A7000
	008 Move W8, [X20+1109]
	009 Move X21, [X21+4056]
	010 Move X19, [X19+360]
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x6A7000
	016 Move X0, [X0+360]
	017 Call 0x1C17CF4
	018 Move X0, 0x6A7000
	019 Move X0, [X0+4056]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X20+1109], W8
	023 Move X0, [X21]
	024 Move X1, X31
	025 Call Shader.PropertyToID, X0
	026 Move X8, [X19]
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X8, [X8+184]
	030 Move [X8], W0
	031 Move X30, [X31+32]
	032 Move X21, [X31+40]
	033 Return 

