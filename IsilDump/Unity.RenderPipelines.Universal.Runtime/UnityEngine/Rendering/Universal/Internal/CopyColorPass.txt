Type: UnityEngine.Rendering.Universal.Internal.CopyColorPass

Method: UnityEngine.Rendering.RTHandle get_source()

Disassembly:
	0x03AAB558 B.NE 0x3AAB584
	0x03AAB55C MOV X0, X24

ISIL:
	001 Move X0, [X0+256]
	002 Return X0

Method: System.Void set_source(UnityEngine.Rendering.RTHandle value)

Disassembly:
	0x03AAB560 BL 0x3EB1AD0
	0x03AAB564 LDR X25, [X0]

ISIL:
	001 Move [X0+256], X1
	002 Return 

Method: UnityEngine.Rendering.RTHandle get_destination()

Disassembly:
	0x03AAB568 BL 0x3EB1AE0
	0x03AAB56C ADD X0, X31, 0x130

ISIL:
	001 Move X0, [X0+264]
	002 Return X0

Method: System.Void set_destination(UnityEngine.Rendering.RTHandle value)

Disassembly:
	0x03AAB570 MOV X1, X31
	0x03AAB574 BL 0x39972C0

ISIL:
	001 Move [X0+264], X1
	002 Return 

Method: System.Int32 get_destinationID()

Disassembly:
	0x03AAB578 CBZ X25, 0x3AAB37C
	0x03AAB57C MOV X0, X25

ISIL:
	001 Move W0, [X0+272]
	002 Return X0

Method: System.Void set_destinationID(System.Int32 value)

Disassembly:
	0x03AAB580 BL 0x1C16F18
	0x03AAB584 MOV X25, X31

ISIL:
	001 Move [X0+272], W1
	002 Return 

Method: System.Void .ctor(UnityEngine.Rendering.Universal.RenderPassEvent evt, UnityEngine.Material samplingMaterial, UnityEngine.Material copyColorMaterial = null)

Disassembly:
	0x03AAB588 B 0x3AAB590
	0x03AAB58C MOV X24, X0
	0x03AAB590 ADD X0, X31, 0x130
	0x03AAB594 MOV X1, X31
	0x03AAB598 BL 0x39972C0
	0x03AAB59C CBZ X25, 0x3AAB5F8
	0x03AAB5A0 MOV X0, X25
	0x03AAB5A4 BL 0x1C16F18
	0x03AAB5A8 MOV X24, X0
	0x03AAB5AC CMP W1, 0x1
	0x03AAB5B0 B.NE 0x3AAB5DC
	0x03AAB5B4 MOV X0, X24
	0x03AAB5B8 BL 0x3EB1AD0
	0x03AAB5BC LDR X20, [X0]
	0x03AAB5C0 BL 0x3EB1AE0
	0x03AAB5C4 ADD X0, X31, 0xC0
	0x03AAB5C8 MOV X1, X31
	0x03AAB5CC BL 0x39972C0
	0x03AAB5D0 CBZ X20, 0x3AAB4A8
	0x03AAB5D4 MOV X0, X20
	0x03AAB5D8 BL 0x1C16F18
	0x03AAB5DC MOV X20, X31
	0x03AAB5E0 B 0x3AAB5E8
	0x03AAB5E4 MOV X24, X0
	0x03AAB5E8 ADD X0, X31, 0xC0
	0x03AAB5EC MOV X1, X31
	0x03AAB5F0 BL 0x39972C0
	0x03AAB5F4 CBNZ X20, 0x3AAB600
	0x03AAB5F8 MOV X0, X24
	0x03AAB5FC BL 0x1D2C690
	0x03AAB600 MOV X0, X20
	0x03AAB604 BL 0x1C16F18
	0x03AAB608 BL 0x1990590
	0x03AAB60C STP X30, X21, [X31 - 0x20]!
	0x03AAB610 STP X20, X19, [X31 + 0x10]
	0x03AAB614 ADRP X21, 0x937000
	0x03AAB618 LDRB W8, [X21 + 0x427]
	0x03AAB61C MOV X20, X1
	0x03AAB620 MOV X19, X0
	0x03AAB624 TBNZ X8, 0x0, 0x3AAB63C
	0x03AAB628 ADRP X0, 0x648000
	0x03AAB62C LDR X0, [X0 + 0x598]
	0x03AAB630 BL 0x1C16CF4
	0x03AAB634 MOVZ W8, 0x1
	0x03AAB638 STRB W8, [X21 + 0x427]
	0x03AAB63C CBZ X20, 0x3AAB6B4
	0x03AAB640 LDR X8, [X19 + 0x108]
	0x03AAB644 CBZ X8, 0x3AAB6B0
	0x03AAB648 ADRP X9, 0x648000
	0x03AAB64C LDR X9, [X9 + 0x598]
	0x03AAB650 LDR X21, [X8 + 0x18]
	0x03AAB654 LDR X0, [X9]
	0x03AAB658 LDR W9, [X0 + 0xE0]
	0x03AAB65C CBNZ W9, 0x3AAB664
	0x03AAB660 BL 0x1C16DFC
	0x03AAB664 MOV X0, X21
	0x03AAB668 MOV X1, X31
	0x03AAB66C MOV X2, X31
	0x03AAB670 BL 0x3C3883C
	0x03AAB674 TBZ X0, 0x0, 0x3AAB6A4
	0x03AAB678 LDR W1, [X19 + 0x110]
	0x03AAB67C ADDS W31, W1, 0x1
	0x03AAB680 B.EQ 0x3AAB6A4
	0x03AAB684 MOV X0, X20
	0x03AAB688 MOV X2, X31
	0x03AAB68C BL 0x3C4CBB0
	0x03AAB690 LDR X0, [X19 + 0x108]
	0x03AAB694 CBZ X0, 0x3AAB6B0
	0x03AAB698 MOV X1, X31
	0x03AAB69C BL 0x39D4B1C
	0x03AAB6A0 STR X31, [X19 + 0x108]
	0x03AAB6A4 LDP X20, X19, [X31 + 0x10]
	0x03AAB6A8 LDP X30, X21, [X31], #0x20
	0x03AAB6AC RET

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X24, 0x938000
	011 Move X23, 0x6A9000
	012 Move W8, [X24+1057]
	013 Move X23, [X23+4080]
	014 Move X21, X3
	015 Move X22, X2
	016 Move W20, W1
	017 Move X19, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {39}
	022 Move X0, 0x6AD000
	023 Move X0, [X0+3464]
	024 Call 0x1C17CF4
	025 Move X0, 0x6A6000
	026 Move X0, [X0+1432]
	027 Call 0x1C17CF4
	028 Move X0, 0x6A9000
	029 Move X0, [X0+4080]
	030 Call 0x1C17CF4
	031 Move X0, 0x6AD000
	032 Move X0, [X0+3472]
	033 Call 0x1C17CF4
	034 Move X0, 0x6AD000
	035 Move X0, [X0+3480]
	036 Call 0x1C17CF4
	037 Move W8, 1
	038 Move [X24+1057], W8
	039 Move X0, [X23]
	040 Move X26, 0x6A6000
	041 Move X23, 0x6AD000
	042 Move X25, 0x6AD000
	043 Move X24, 0x6AD000
	044 Move W8, [X0+224]
	045 Move X26, [X26+1432]
	046 Move X23, [X23+3480]
	047 Move X25, [X25+3464]
	048 Move X24, [X24+3472]
	049 Compare W8, 0
	050 JumpIfNotEqual {52}
	051 Call 0x1C17DFC
	052 Move X0, X19
	053 Move X1, X31
	054 Call ScriptableRenderPass..ctor, X0
	055 Move X0, [X26]
	056 Call 0x1C17F10
	057 Move X1, [X23]
	058 Move X2, X31
	059 Move X23, X0
	060 Call ProfilingSampler..ctor, X0, X1
	061 Move [X19+56], X23
	062 Move X0, [X25]
	063 Call 0x1C17F10
	064 Move X1, X31
	065 Move X23, X0
	066 Call PassData..ctor, X0
	067 Move [X19+280], X23
	068 Move [X19+232], X22
	069 Move [X19+248], X21
	070 Move X0, [X24]
	071 Move X1, X31
	072 Call Shader.PropertyToID, X0
	073 Move [X19+224], W0
	074 Move [X19+16], W20
	075 Move [X19+240], W31
	076 Move [X19+66], W31
	077 Move X20, [X31+64]
	078 Move X19, [X31+72]
	079 Move X22, [X31+48]
	080 Move X21, [X31+56]
	081 Move X24, [X31+32]
	082 Move X23, [X31+40]
	083 Move X26, [X31+16]
	084 Move X25, [X31+24]
	085 Move X30, [X31+80]
	086 Return 

Method: System.Void ConfigureDescriptor(UnityEngine.Rendering.Universal.Downsampling downsamplingMethod, ref UnityEngine.RenderTextureDescriptor descriptor, out UnityEngine.FilterMode filterMode)

Disassembly:
	0x03AAB6B0 BL 0x1C16F20
	0x03AAB6B4 ADRP X0, 0x64D000
	0x03AAB6B8 LDR X0, [X0 + 0x528]
	0x03AAB6BC BL 0x1C16D08
	0x03AAB6C0 BL 0x1C16F10
	0x03AAB6C4 MOV X19, X0
	0x03AAB6C8 ADRP X0, 0x6AA000
	0x03AAB6CC LDR X0, [X0 + 0x6F0]
	0x03AAB6D0 BL 0x1C16D08
	0x03AAB6D4 MOV X1, X0
	0x03AAB6D8 MOV X0, X19
	0x03AAB6DC MOV X2, X31
	0x03AAB6E0 BL 0x330E100
	0x03AAB6E4 ADRP X0, 0x6AC000
	0x03AAB6E8 LDR X0, [X0 + 0xDE8]
	0x03AAB6EC BL 0x1C16D08
	0x03AAB6F0 MOV X1, X0
	0x03AAB6F4 MOV X0, X19
	0x03AAB6F8 BL 0x1C16DEC
	0x03AAB6FC MOV X1, X31
	0x03AAB700 B 0x33BDD8C
	0x03AAB704 STR X30, [X31 - 0x20]!
	0x03AAB708 STP X20, X19, [X31 + 0x10]
	0x03AAB70C ADRP X19, 0x937000
	0x03AAB710 ADRP X20, 0x6AC000
	0x03AAB714 LDRB W8, [X19 + 0x42C]
	0x03AAB718 LDR X20, [X20 + 0xDD0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move W8, 1
	006 Move X19, X2
	007 Move X21, X1
	008 Move W20, W0
	009 Move [X1+8], W8
	010 Move X0, X1
	011 Move W1, W31
	012 Move X2, X31
	013 Call RenderTextureDescriptor.set_depthBufferBits, X0, X1
	014 Subtract W8, W20, 1
	015 NotImplemented "Instruction CMP not yet implemented."
	016 Move X9, -49360896
	017 Add X9, X9, 2904
	018 Move W8, [X9]
	019 Move W9, [X21]
	020 Move W10, [X21+4]
	021 NotImplemented "Instruction SDIV not yet implemented."
	022 NotImplemented "Instruction SDIV not yet implemented."
	023 Move [X21], W9
	024 Move [X21+4], W8
	025 NotImplemented "Instruction CMP not yet implemented."
	026 NotImplemented "Instruction CSET not yet implemented."
	027 Move [X19], W8
	028 Move X20, [X31+16]
	029 Move X19, [X31+24]
	030 Move X30, [X31+32]
	031 Move X21, [X31+40]
	032 Return 

Method: System.Void Setup(UnityEngine.Rendering.RenderTargetIdentifier source, UnityEngine.Rendering.Universal.RenderTargetHandle destination, UnityEngine.Rendering.Universal.Downsampling downsampling)

Disassembly:
	0x03AAB71C TBNZ X8, 0x0, 0x3AAB734
	0x03AAB720 ADRP X0, 0x6AC000
	0x03AAB724 LDR X0, [X0 + 0xDD0]
	0x03AAB728 BL 0x1C16CF4
	0x03AAB72C MOVZ W8, 0x1
	0x03AAB730 STRB W8, [X19 + 0x42C]
	0x03AAB734 LDR X0, [X20]
	0x03AAB738 BL 0x1C16F10
	0x03AAB73C MOV X1, X31
	0x03AAB740 MOV X19, X0
	0x03AAB744 BL 0x33BDD8C
	0x03AAB748 LDR X8, [X20]
	0x03AAB74C LDR X8, [X8 + 0xB8]
	0x03AAB750 STR X19, [X8]
	0x03AAB754 LDP X20, X19, [X31 + 0x10]
	0x03AAB758 LDR X30, [X31], #0x20
	0x03AAB75C RET
	0x03AAB760 MOV X1, X31
	0x03AAB764 B 0x33BDD8C
	0x03AAB768 STR X30, [X31 - 0x20]!
	0x03AAB76C STP X20, X19, [X31 + 0x10]
	0x03AAB770 ADRP X20, 0x937000
	0x03AAB774 LDRB W8, [X20 + 0x42D]
	0x03AAB778 MOV X19, X1
	0x03AAB77C TBNZ X8, 0x0, 0x3AAB794
	0x03AAB780 ADRP X0, 0x6A5000
	0x03AAB784 LDR X0, [X0 + 0xA88]
	0x03AAB788 BL 0x1C16CF4
	0x03AAB78C MOVZ W8, 0x1
	0x03AAB790 STRB W8, [X20 + 0x42D]
	0x03AAB794 CBZ X19, 0x3AAB7FC
	0x03AAB798 ADRP X8, 0x6A5000
	0x03AAB79C LDR X8, [X8 + 0xA88]
	0x03AAB7A0 LDR X20, [X19 + 0x10]
	0x03AAB7A4 LDR X0, [X8]
	0x03AAB7A8 LDR W8, [X0 + 0xE0]
	0x03AAB7AC CBNZ W8, 0x3AAB7B4
	0x03AAB7B0 BL 0x1C16DFC
	0x03AAB7B4 MOV X0, X20
	0x03AAB7B8 MOV X1, X31
	0x03AAB7BC BL 0x399A7C4
	0x03AAB7C0 LDR X8, [X19 + 0x18]
	0x03AAB7C4 MOV X20, X0
	0x03AAB7C8 MOV X1, X31
	0x03AAB7CC MOV X0, X8
	0x03AAB7D0 BL 0x399A7C4
	0x03AAB7D4 LDRB W4, [X19 + 0x20]
	0x03AAB7D8 LDRB W5, [X19 + 0x21]
	0x03AAB7DC ADD X3, X19, 0x28
	0x03AAB7E0 MOV X2, X0
	0x03AAB7E4 MOV X0, X19
	0x03AAB7E8 MOV X1, X20
	0x03AAB7EC LDP X20, X19, [X31 + 0x10]
	0x03AAB7F0 MOV X6, X31
	0x03AAB7F4 LDR X30, [X31], #0x20
	0x03AAB7F8 B 0x3AAAC00
	0x03AAB7FC BL 0x1C16F20
	0x03AAB800 SUB X31, X31, 0xA0
	0x03AAB804 STR X30, [X31 + 0x80]
	0x03AAB808 STP X20, X19, [X31 + 0x90]
	0x03AAB80C ADRP X19, 0x937000
	0x03AAB810 LDRB W8, [X19 + 0x42E]
	0x03AAB814 MOV X20, X1
	0x03AAB818 TBNZ X8, 0x0, 0x3AAB83C
	0x03AAB81C ADRP X0, 0x6A5000
	0x03AAB820 LDR X0, [X0 + 0xA88]

ISIL:
	001 Subtract X31, X31, 240
	002 Move [X31+176], X30
	003 Move [X31+192], X24
	004 Move [X31+200], X23
	005 Move [X31+208], X22
	006 Move [X31+216], X21
	007 Move [X31+224], X20
	008 Move [X31+232], X19
	009 Move X24, 0x938000
	010 Move X23, 0x6A6000
	011 Move W8, [X24+1058]
	012 Move X23, [X23+2480]
	013 Move W19, W3
	014 Move X20, X2
	015 Move X22, X1
	016 Move X21, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {29}
	021 Move X0, 0x6A6000
	022 Move X0, [X0+2480]
	023 Call 0x1C17CF4
	024 Move X0, 0x6AC000
	025 Move X0, [X0+3520]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X24+1058], W8
	029 Move X8, [X22+32]
	030 Move V1, [X22]
	031 Move V0, [X22+16]
	032 Move X0, [X23]
	033 Move X22, 0x6AC000
	034 Move [X31+160], X8
	035 Move [X31+128], V1
	036 Move [X31+136], V0
	037 Move W8, [X0+224]
	038 Move X22, [X22+3520]
	039 Compare W8, 0
	040 JumpIfNotEqual {42}
	041 Call 0x1C17DFC
	042 Move V0, [X31+128]
	043 Move V1, [X31+144]
	044 Move X8, [X31+160]
	045 Add X0, X31, 80
	046 Move X1, X31
	047 Move [X31+80], V0
	048 Move [X31+88], V1
	049 Move [X31+112], X8
	050 Call RTHandles.Alloc, X0
	051 Move [X21+256], X0
	052 Move X0, [X22]
	053 Move W8, [X0+224]
	054 Compare W8, 0
	055 JumpIfNotEqual {57}
	056 Call 0x1C17DFC
	057 Add X8, X31, 40
	058 Move X0, X20
	059 Move X1, X31
	060 Call RenderTargetHandle.Identifier, X0
	061 NotImplemented "Instruction LDUR not yet implemented."
	062 NotImplemented "Instruction LDUR not yet implemented."
	063 Move X8, [X31+72]
	064 Add X0, X31, 0
	065 Move X1, X31
	066 Move [X31], V0
	067 Move [X31+8], V1
	068 Move [X31+32], X8
	069 Call RTHandles.Alloc, X0
	070 Move [X21+264], X0
	071 Move W8, [X20]
	072 Move [X21+240], W19
	073 Move X20, [X31+224]
	074 Move X19, [X31+232]
	075 Move X24, [X31+192]
	076 Move X23, [X31+200]
	077 Move [X21+272], W8
	078 Move X22, [X31+208]
	079 Move X21, [X31+216]
	080 Move X30, [X31+176]
	081 Add X31, X31, 240
	082 Return 

Method: System.Void Setup(UnityEngine.Rendering.RTHandle source, UnityEngine.Rendering.RTHandle destination, UnityEngine.Rendering.Universal.Downsampling downsampling)

Disassembly:
	0x03AAB824 BL 0x1C16CF4
	0x03AAB828 ADRP X0, 0x6AC000
	0x03AAB82C LDR X0, [X0 + 0x200]

ISIL:
	001 Move [X0+256], X1
	002 Move [X0+264], X2
	003 Move [X0+240], W3
	004 Return 

Method: System.Void OnCameraSetup(UnityEngine.Rendering.CommandBuffer cmd, ref UnityEngine.Rendering.Universal.RenderingData renderingData)

Disassembly:
	0x03AAB830 BL 0x1C16CF4
	0x03AAB834 MOVZ W8, 0x1
	0x03AAB838 STRB W8, [X19 + 0x42E]
	0x03AAB83C CBZ X20, 0x3AAB8C4
	0x03AAB840 ADRP X8, 0x6A5000
	0x03AAB844 LDR X8, [X8 + 0xA88]
	0x03AAB848 LDR X19, [X20 + 0x28]
	0x03AAB84C LDR X20, [X20 + 0x18]
	0x03AAB850 LDR X0, [X8]
	0x03AAB854 LDR W8, [X0 + 0xE0]
	0x03AAB858 CBNZ W8, 0x3AAB860
	0x03AAB85C BL 0x1C16DFC
	0x03AAB860 ADD X8, X31, 0x28
	0x03AAB864 MOV X0, X20
	0x03AAB868 MOV X1, X31
	0x03AAB86C BL 0x399A594
	0x03AAB870 LDUR V0, [X31 + 0x28]
	0x03AAB874 LDUR V1, [X31 + 0x38]
	0x03AAB878 LDR X8, [X31 + 0x48]
	0x03AAB87C STP V0, V1, [X31 + 0x50]
	0x03AAB880 STR X8, [X31 + 0x70]
	0x03AAB884 CBZ X19, 0x3AAB8C4
	0x03AAB888 ADRP X8, 0x6AC000
	0x03AAB88C LDR X8, [X8 + 0x200]
	0x03AAB890 LDP V0, V1, [X31 + 0x50]
	0x03AAB894 LDR X9, [X31 + 0x70]
	0x03AAB898 ADD X2, X31, 0x0
	0x03AAB89C LDR X1, [X8]
	0x03AAB8A0 MOV X0, X19
	0x03AAB8A4 MOV X3, X31
	0x03AAB8A8 STP V0, V1, [X31]
	0x03AAB8AC STR X9, [X31 + 0x20]
	0x03AAB8B0 BL 0x3C4FC28
	0x03AAB8B4 LDP X20, X19, [X31 + 0x90]
	0x03AAB8B8 LDR X30, [X31 + 0x80]
	0x03AAB8BC ADD X31, X31, 0xA0
	0x03AAB8C0 RET
	0x03AAB8C4 BL 0x1C16F20
	0x03AAB8C8 LDR X0, [X0 + 0xE0]
	0x03AAB8CC RET
	0x03AAB8D0 STR X1, [X0 + 0xE0]
	0x03AAB8D4 RET
	0x03AAB8D8 LDR X0, [X0 + 0xE8]
	0x03AAB8DC RET
	0x03AAB8E0 STR X1, [X0 + 0xE8]
	0x03AAB8E4 RET
	0x03AAB8E8 LDR W0, [X0 + 0xF0]
	0x03AAB8EC RET
	0x03AAB8F0 STR W1, [X0 + 0xF0]
	0x03AAB8F4 RET
	0x03AAB8F8 LDRB W0, [X0 + 0xF4]
	0x03AAB8FC RET
	0x03AAB900 AND W8, W1, 0x1
	0x03AAB904 STRB W8, [X0 + 0xF4]
	0x03AAB908 RET
	0x03AAB90C STR X30, [X31 - 0x60]!
	0x03AAB910 STP X28, X27, [X31 + 0x10]
	0x03AAB914 STP X26, X25, [X31 + 0x20]
	0x03AAB918 STP X24, X23, [X31 + 0x30]
	0x03AAB91C STP X22, X21, [X31 + 0x40]
	0x03AAB920 STP X20, X19, [X31 + 0x50]
	0x03AAB924 ADRP X26, 0x937000
	0x03AAB928 ADRP X25, 0x6A8000
	0x03AAB92C LDRB W8, [X26 + 0x42F]
	0x03AAB930 LDR X25, [X25 + 0xFF0]
	0x03AAB934 MOV W23, W5
	0x03AAB938 MOV W22, W4
	0x03AAB93C MOV W24, W3
	0x03AAB940 MOV X21, X2
	0x03AAB944 MOV W20, W1
	0x03AAB948 MOV X19, X0
	0x03AAB94C TBNZ X8, 0x0, 0x3AAB988
	0x03AAB950 ADRP X0, 0x6AC000
	0x03AAB954 LDR X0, [X0 + 0xDF0]
	0x03AAB958 BL 0x1C16CF4
	0x03AAB95C ADRP X0, 0x6A5000
	0x03AAB960 LDR X0, [X0 + 0x598]
	0x03AAB964 BL 0x1C16CF4
	0x03AAB968 ADRP X0, 0x6A8000
	0x03AAB96C LDR X0, [X0 + 0xFF0]
	0x03AAB970 BL 0x1C16CF4
	0x03AAB974 ADRP X0, 0x6AC000
	0x03AAB978 LDR X0, [X0 + 0xDF8]
	0x03AAB97C BL 0x1C16CF4
	0x03AAB980 MOVZ W8, 0x1
	0x03AAB984 STRB W8, [X26 + 0x42F]
	0x03AAB988 LDR X0, [X25]
	0x03AAB98C ADRP X27, 0x6A5000
	0x03AAB990 ADRP X26, 0x6AC000
	0x03AAB994 ADRP X25, 0x6AC000
	0x03AAB998 LDR W8, [X0 + 0xE0]
	0x03AAB99C LDR X27, [X27 + 0x598]
	0x03AAB9A0 LDR X26, [X26 + 0xDF8]
	0x03AAB9A4 LDR X25, [X25 + 0xDF0]
	0x03AAB9A8 CBNZ W8, 0x3AAB9B0
	0x03AAB9AC BL 0x1C16DFC
	0x03AAB9B0 MOV X0, X19
	0x03AAB9B4 MOV X1, X31
	0x03AAB9B8 AND W24, W24, 0x1
	0x03AAB9BC AND W28, W23, 0x1
	0x03AAB9C0 BL 0x3A4225C
	0x03AAB9C4 LDR X0, [X27]
	0x03AAB9C8 BL 0x1C16F10
	0x03AAB9CC LDR X1, [X26]
	0x03AAB9D0 MOV X2, X31
	0x03AAB9D4 MOV X23, X0
	0x03AAB9D8 BL 0x39B19AC
	0x03AAB9DC STR X23, [X19 + 0x38]
	0x03AAB9E0 LDR X0, [X25]
	0x03AAB9E4 BL 0x1C16F10
	0x03AAB9E8 MOV X1, X31
	0x03AAB9EC MOV X23, X0
	0x03AAB9F0 BL 0x33BDD8C
	0x03AAB9F4 AND W8, W22, 0x1
	0x03AAB9F8 STR X23, [X19 + 0x108]
	0x03AAB9FC STR X21, [X19 + 0xF8]
	0x03AABA00 STR W20, [X19 + 0x10]
	0x03AABA04 STRB W28, [X19 + 0x100]
	0x03AABA08 STRB W8, [X19 + 0xF4]
	0x03AABA0C STRB W24, [X19 + 0x101]
	0x03AABA10 LDP X20, X19, [X31 + 0x50]
	0x03AABA14 LDP X22, X21, [X31 + 0x40]
	0x03AABA18 LDP X24, X23, [X31 + 0x30]
	0x03AABA1C LDP X26, X25, [X31 + 0x20]
	0x03AABA20 LDP X28, X27, [X31 + 0x10]
	0x03AABA24 LDR X30, [X31], #0x60
	0x03AABA28 RET
	0x03AABA2C MOV X1, X31
	0x03AABA30 B 0x33BDD8C
	0x03AABA34 MOVN W8, 0x0
	0x03AABA38 STP X1, X2, [X0 + 0xE0]
	0x03AABA3C STR W8, [X0 + 0xF0]
	0x03AABA40 RET
	0x03AABA44 SUB X31, X31, 0x60
	0x03AABA48 STP X30, X21, [X31 + 0x40]
	0x03AABA4C STP X20, X19, [X31 + 0x50]
	0x03AABA50 ADRP X21, 0x937000
	0x03AABA54 LDRB W8, [X21 + 0x430]
	0x03AABA58 MOV X20, X2
	0x03AABA5C MOV X19, X0

ISIL:
	001 Subtract X31, X31, 416
	002 Move [X31+368], X29
	003 Move [X31+376], X30
	004 Move [X31+384], X22
	005 Move [X31+392], X21
	006 Move [X31+400], X20
	007 Move [X31+408], X19
	008 Move X22, 0x938000
	009 Move W8, [X22+1059]
	010 Move X21, X2
	011 Move X19, X1
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0x649000
	018 Move X0, [X0+1432]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X22+1059], W8
	022 NotImplemented "Instruction MOVI not yet implemented."
	023 Move [X31+352], W31
	024 Move [X31+288], W31
	025 Move [X31+224], W31
	026 Move [X31+320], V0
	027 Move [X31+328], V0
	028 Move [X31+19], V0
	029 Move [X31+256], V0
	030 Move [X31+264], V0
	031 Move [X31+15], V0
	032 Move [X31+192], V0
	033 Move [X31+200], V0
	034 Move [X31+11], V0
	035 Move X8, [X20+264]
	036 Compare X8, 0
	037 JumpIfEqual {171}
	038 Move X9, 0x649000
	039 Move X9, [X9+1432]
	040 Move X22, [X8+24]
	041 Move X0, [X9]
	042 Move W9, [X0+224]
	043 Compare W9, 0
	044 JumpIfNotEqual {46}
	045 Call 0x1C17DFC
	046 Move X0, X22
	047 Move X1, X31
	048 Move X2, X31
	049 Call Object.op_Equality, X0, X1
	050 Move TEMP, X0
	051 And TEMP, TEMP, 1
	052 Compare TEMP, 1
	053 JumpIfNotEqual {78}
	054 Move V1, [X21+256]
	055 Move V0, [X21+272]
	056 Move W8, [X21+288]
	057 Move V2, [X21+15]
	058 Move W9, 1
	059 Add X0, X31, 304
	060 Move W1, W31
	061 Move X2, X31
	062 Move [X31+352], W8
	063 Move [X31+320], V1
	064 Move [X31+328], V0
	065 Move [X31+19], V2
	066 Move [X31+312], W9
	067 Call RenderTextureDescriptor.set_depthBufferBits, X0, X1
	068 Move W8, [X20+240]
	069 Subtract W9, W8, 2
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Move W9, [X31+304]
	072 Add W10, W9, 3
	073 NotImplemented "Instruction CMP not yet implemented."
	074 NotImplemented "Instruction CSEL not yet implemented."
	075 NotImplemented "Instruction SBFM not yet implemented."
	076 Move [X31+304], W9
	077 Move W9, 4
	078 Move X8, [X20+264]
	079 Compare X8, 0
	080 JumpIfEqual {171}
	081 Move X9, [X8+72]
	082 NotImplemented "Instruction LDUR not yet implemented."
	083 NotImplemented "Instruction LDUR not yet implemented."
	084 Move X1, [X8+88]
	085 Move [X31+144], X9
	086 Move [X31+112], V1
	087 Move [X31+120], V0
	088 Compare X19, 0
	089 JumpIfEqual {171}
	090 Move V0, [X31+112]
	091 Move V1, [X31+128]
	092 Move X8, [X31+144]
	093 Add X2, X31, 0
	094 Move X0, X19
	095 Move X3, X31
	096 Move [X31], V0
	097 Move [X31+8], V1
	098 Move [X31+32], X8
	099 Call CommandBuffer.SetGlobalTexture, X0, X1, X2
	100 NotImplemented "Instruction CMP not yet implemented."
	101 Move W9, [X31+304]
	102 NotImplemented "Instruction CMP not yet implemented."
	103 NotImplemented "Instruction CINC not yet implemented."
	104 NotImplemented "Instruction SBFM not yet implemented."
	105 Move [X31+304], W9
	106 Move W9, 2
	107 Move W10, [X31+308]
	108 NotImplemented "Instruction SDIV not yet implemented."
	109 Move [X31+308], W9
	110 Move W1, [X20+272]
	111 Move V0, [X31+304]
	112 Move V1, [X31+320]
	113 Move V2, [X31+21]
	114 Move W9, [X31+352]
	115 Move [X31+112], V0
	116 Move [X31+120], V1
	117 Move [X31+9], V2
	118 Move [X31+160], W9
	119 Compare W8, 0
	120 JumpIfEqual {131}
	121 Move V0, [X31+112]
	122 Move V1, [X31+128]
	123 Move V2, [X31+9]
	124 Move W9, [X31+160]
	125 Add X8, X31, 176
	126 Move [X31+176], V0
	127 Move [X31+184], V1
	128 Move [X31+13], V2
	129 Move [X31+224], W9
	130 Move W3, 1
	131 Move V0, [X31+112]
	132 Move V1, [X31+128]
	133 Move V2, [X31+9]
	134 Move W9, [X31+160]
	135 Move W3, W31
	136 Add X8, X31, 240
	137 Move [X31+240], V0
	138 Move [X31+248], V1
	139 Move [X31+17], V2
	140 Move [X31+288], W9
	141 Move W9, [X8+48]
	142 Move V1, [X8+16]
	143 Move V0, [X8+32]
	144 Move V2, [X8]
	145 Move [X31+160], W9
	146 Move [X31+128], V1
	147 Move [X31+136], V0
	148 Move [X31+7], V2
	149 Compare X19, 0
	150 JumpIfEqual {171}
	151 Move V0, [X31+112]
	152 Move V1, [X31+128]
	153 Move V2, [X31+9]
	154 Move W8, [X31+160]
	155 Add X2, X31, 48
	156 Move X0, X19
	157 Move X4, X31
	158 Move [X31+48], V0
	159 Move [X31+56], V1
	160 Move [X31+5], V2
	161 Move [X31+96], W8
	162 Call CommandBuffer.GetTemporaryRT, X0, X1, X2, X3
	163 Move X20, [X31+400]
	164 Move X19, [X31+408]
	165 Move X22, [X31+384]
	166 Move X21, [X31+392]
	167 Move X29, [X31+368]
	168 Move X30, [X31+376]
	169 Add X31, X31, 416
	170 Return 
	171 Call 0x1C17F20

Method: System.Void Execute(UnityEngine.Rendering.ScriptableRenderContext context, ref UnityEngine.Rendering.Universal.RenderingData renderingData)

Disassembly:
	0x03AABA60 TBNZ X8, 0x0, 0x3AABA78
	0x03AABA64 ADRP X0, 0x648000
	0x03AABA68 LDR X0, [X0 + 0x598]
	0x03AABA6C BL 0x1C16CF4
	0x03AABA70 MOVZ W8, 0x1
	0x03AABA74 STRB W8, [X21 + 0x430]
	0x03AABA78 LDR W8, [X20 + 0x120]
	0x03AABA7C LDP V1, V0, [X20 + 0x100]
	0x03AABA80 LDR V2, [X20 + 0xF]
	0x03AABA84 STR W8, [X31 + 0x30]
	0x03AABA88 STP V1, V0, [X31 + 0x10]
	0x03AABA8C STR V2, [X31]
	0x03AABA90 LDR X8, [X19 + 0xE8]
	0x03AABA94 CBZ X8, 0x3AABB48
	0x03AABA98 ADRP X9, 0x648000
	0x03AABA9C LDR X9, [X9 + 0x598]
	0x03AABAA0 LDR X20, [X8 + 0x18]
	0x03AABAA4 LDR X0, [X9]
	0x03AABAA8 LDR W9, [X0 + 0xE0]
	0x03AABAAC CBNZ W9, 0x3AABAB4
	0x03AABAB0 BL 0x1C16DFC
	0x03AABAB4 MOV X0, X20
	0x03AABAB8 MOV X1, X31
	0x03AABABC BL 0x3C38948
	0x03AABAC0 TBZ X0, 0x0, 0x3AABAE0
	0x03AABAC4 LDR X8, [X19 + 0xE8]
	0x03AABAC8 CBZ X8, 0x3AABB48
	0x03AABACC LDR X0, [X8 + 0x18]
	0x03AABAD0 CBZ X0, 0x3AABB48
	0x03AABAD4 MOV X1, X31
	0x03AABAD8 BL 0x3C201A0
	0x03AABADC CBZ W0, 0x3AABB40
	0x03AABAE0 MOVZ W1, 0x31
	0x03AABAE4 ADD X0, X31, 0x0
	0x03AABAE8 MOV X2, X31
	0x03AABAEC BL 0x3C2240C
	0x03AABAF0 MOVZ W8, 0x1
	0x03AABAF4 STR W8, [X31 + 0x8]
	0x03AABAF8 LDR X1, [X19 + 0xE8]
	0x03AABAFC MOV X0, X19
	0x03AABB00 MOV X2, X31
	0x03AABB04 BL 0x3A440A4
	0x03AABB08 LDRB W8, [X19 + 0x101]
	0x03AABB0C CBZ W8, 0x3AABB30
	0x03AABB10 FMOV S0, W31
	0x03AABB14 FMOV S1, W31
	0x03AABB18 FMOV S2, W31
	0x03AABB1C FMOV S3, 1
	0x03AABB20 MOVZ W1, 0x7
	0x03AABB24 MOV X0, X19
	0x03AABB28 MOV X2, X31
	0x03AABB2C BL 0x3A44510
	0x03AABB30 LDP X20, X19, [X31 + 0x50]
	0x03AABB34 LDP X30, X21, [X31 + 0x40]
	0x03AABB38 ADD X31, X31, 0x60
	0x03AABB3C RET
	0x03AABB40 MOVZ W1, 0x5E
	0x03AABB44 B 0x3AABAE4
	0x03AABB48 BL 0x1C16F20
	0x03AABB4C SUB X31, X31, 0x80
	0x03AABB50 STP X30, X21, [X31 + 0x60]
	0x03AABB54 STP X20, X19, [X31 + 0x70]
	0x03AABB58 ADRP X21, 0x937000
	0x03AABB5C LDRB W8, [X21 + 0x431]
	0x03AABB60 MOV X19, X2
	0x03AABB64 MOV X20, X0
	0x03AABB68 TBNZ X8, 0x0, 0x3AABB8C
	0x03AABB6C ADRP X0, 0x6A9000
	0x03AABB70 LDR X0, [X0 + 0x10]
	0x03AABB74 BL 0x1C16CF4
	0x03AABB78 ADRP X0, 0x6A9000
	0x03AABB7C LDR X0, [X0 + 0x938]
	0x03AABB80 BL 0x1C16CF4
	0x03AABB84 MOVZ W8, 0x1
	0x03AABB88 STRB W8, [X21 + 0x431]
	0x03AABB8C LDR X21, [X20 + 0x108]
	0x03AABB90 CBZ X21, 0x3AABC60
	0x03AABB94 LDR X8, [X20 + 0xF8]
	0x03AABB98 STR X8, [X21 + 0x238]
	0x03AABB9C LDR W8, [X20 + 0xF0]
	0x03AABBA0 STR W8, [X21 + 0x240]
	0x03AABBA4 LDRB W8, [X20 + 0x100]
	0x03AABBA8 STRB W8, [X21 + 0x244]
	0x03AABBAC LDRB W8, [X20 + 0xF4]
	0x03AABBB0 CBZ W8, 0x3AABBBC
	0x03AABBB4 MOVZ W8, 0x1
	0x03AABBB8 B 0x3AABBE8
	0x03AABBBC ADRP X8, 0x6A9000
	0x03AABBC0 LDR X8, [X8 + 0x10]
	0x03AABBC4 LDR X0, [X8]
	0x03AABBC8 LDR W8, [X0 + 0xE0]
	0x03AABBCC CBNZ W8, 0x3AABBD4
	0x03AABBD0 BL 0x1C16DFC
	0x03AABBD4 MOVZ W0, 0x31
	0x03AABBD8 MOVZ W1, 0x4
	0x03AABBDC MOV X2, X31
	0x03AABBE0 BL 0x3A6ED54
	0x03AABBE4 EOR W8, W0, 0x1
	0x03AABBE8 AND W8, W8, 0x1
	0x03AABBEC STRB W8, [X21 + 0x245]
	0x03AABBF0 LDR X8, [X20 + 0xE0]
	0x03AABBF4 CBZ X8, 0x3AABC60
	0x03AABBF8 LDR X0, [X19]
	0x03AABBFC LDR X9, [X8 + 0x48]

ISIL:
	001 Move [X31-96], D11
	002 Move [X31-88], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X30
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X21, 0x938000
	014 Move W8, [X21+1060]
	015 Move X19, X2
	016 Move X20, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {29}
	021 Move X0, 0x6A9000
	022 Move X0, [X0+4080]
	023 Call 0x1C17CF4
	024 Move X0, 0x6AA000
	025 Move X0, [X0+2248]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X21+1060], W8
	029 Move X8, [X20+280]
	030 Compare X8, 0
	031 JumpIfEqual {131}
	032 Move X9, [X20+232]
	033 Move [X8+48], X9
	034 Move X9, [X20+248]
	035 Move [X8+56], X9
	036 Move W9, [X20+240]
	037 Move [X8+64], W9
	038 Move W9, [X20+204]
	039 Move [X8+68], W9
	040 Move V0, [X20+13]
	041 Move [X8+72], V0
	042 Move X8, [X20+280]
	043 Compare X8, 0
	044 JumpIfEqual {131}
	045 Move W9, [X20+224]
	046 Move [X8+88], W9
	047 Move X0, [X19+464]
	048 Compare X0, 0
	049 JumpIfEqual {131}
	050 Move X8, [X0]
	051 Move X21, [X19]
	052 Move X22, [X20+256]
	053 Move X9, [X8+408]
	054 Move X2, [X8+416]
	055 Move X1, X21
	056 NotImplemented "Instruction BLR not yet implemented."
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Move X0, [X19+464]
	059 Compare X0, 0
	060 JumpIfEqual {131}
	061 Move X1, X31
	062 Call ScriptableRenderer.get_cameraColorTargetHandle, X0
	063 Move [X20+256], X0
	064 Move X0, [X19+400]
	065 Compare X0, 0
	066 JumpIfEqual {131}
	067 Move X1, X31
	068 Call XRPass.get_enabled, X0
	069 Move TEMP, X0
	070 And TEMP, TEMP, 1
	071 Compare TEMP, 1
	072 JumpIfNotEqual {79}
	073 Move X0, [X19+400]
	074 Compare X0, 0
	075 JumpIfEqual {131}
	076 Move X1, X31
	077 Call XRPass.get_supportsFoveatedRendering, X0
	078 Move W22, W0
	079 Move W22, W31
	080 Move X24, 0x6A9000
	081 Move X24, [X24+4080]
	082 Move X25, 0x6AA000
	083 Move X23, [X20+264]
	084 Move X0, [X24]
	085 Move W8, [X0+224]
	086 Move X25, [X25+2248]
	087 Compare W8, 0
	088 JumpIfNotEqual {91}
	089 Call 0x1C17DFC
	090 Move X0, [X24]
	091 Move X8, [X0+184]
	092 Move X0, [X25]
	093 Move W24, [X20+204]
	094 Move S10, [X20+208]
	095 Move S8, [X20+212]
	096 Move X25, [X8]
	097 Move W8, [X0+224]
	098 Move S11, [X20+216]
	099 Move S9, [X20+220]
	100 Compare W8, 0
	101 JumpIfNotEqual {103}
	102 Call 0x1C17DFC
	103 Move X0, X21
	104 Move X1, X23
	105 Move X2, X25
	106 Move W3, W24
	107 Move V0, V10
	108 Move V1, V8
	109 Move V2, V11
	110 Move V3, V9
	111 Move X4, X31
	112 Call ScriptableRenderer.SetRenderTarget, X0, X1, X2, X3, X4
	113 Move X0, [X20+280]
	114 Move X1, [X20+256]
	115 Move X2, [X20+264]
	116 And W5, W22, 1
	117 Move X3, X19
	118 Move X20, [X31+80]
	119 Move X19, [X31+88]
	120 Move X22, [X31+64]
	121 Move X21, [X31+72]
	122 Move X24, [X31+48]
	123 Move X23, [X31+56]
	124 Move X30, [X31+32]
	125 Move X25, [X31+40]
	126 Move D9, [X31+16]
	127 Move D8, [X31+24]
	128 Move W4, W31
	129 Move D11, [X31+96]
	130 Move D10, [X31+104]
	131 Call 0x1C17F20

Method: System.Void ExecutePass(UnityEngine.Rendering.Universal.Internal.CopyColorPass/PassData passData, UnityEngine.Rendering.RTHandle source, UnityEngine.Rendering.RTHandle destination, ref UnityEngine.Rendering.CommandBuffer cmd, System.Boolean useDrawProceduralBlit, System.Boolean disableFoveatedRenderingForPass)

Disassembly:
	0x03AABC00 LDUR V0, [X8 + 0x38]
	0x03AABC04 LDUR V1, [X8 + 0x28]
	0x03AABC08 STR X9, [X31 + 0x50]
	0x03AABC0C STP V1, V0, [X31 + 0x30]
	0x03AABC10 CBZ X0, 0x3AABC60
	0x03AABC14 ADRP X8, 0x6A9000
	0x03AABC18 LDR X8, [X8 + 0x938]
	0x03AABC1C LDP V0, V1, [X31 + 0x30]
	0x03AABC20 LDR X9, [X31 + 0x50]
	0x03AABC24 ADD X2, X31, 0x0
	0x03AABC28 LDR X1, [X8]
	0x03AABC2C MOV X3, X31
	0x03AABC30 STP V0, V1, [X31]
	0x03AABC34 STR X9, [X31 + 0x20]
	0x03AABC38 BL 0x3C4FC28
	0x03AABC3C LDR X1, [X20 + 0x108]
	0x03AABC40 LDP X4, X5, [X20 + 0xE0]
	0x03AABC44 ADD X3, X19, 0x18
	0x03AABC48 MOV X2, X19
	0x03AABC4C BL 0x3AABC64
	0x03AABC50 LDP X20, X19, [X31 + 0x70]
	0x03AABC54 LDP X30, X21, [X31 + 0x60]
	0x03AABC58 ADD X31, X31, 0x80
	0x03AABC5C RET
	0x03AABC60 BL 0x1C16F20
	0x03AABC64 STR D10, [X31 - 0x70]!
	0x03AABC68 STP D9, D8, [X31 + 0x8]
	0x03AABC6C STR X29, [X31 + 0x18]
	0x03AABC70 STP X30, X27, [X31 + 0x20]
	0x03AABC74 STP X26, X25, [X31 + 0x30]
	0x03AABC78 STP X24, X23, [X31 + 0x40]
	0x03AABC7C STP X22, X21, [X31 + 0x50]
	0x03AABC80 STP X20, X19, [X31 + 0x60]
	0x03AABC84 SUB X31, X31, 0x190
	0x03AABC88 ADRP X21, 0x937000
	0x03AABC8C LDRB W8, [X21 + 0x432]
	0x03AABC90 MOV X23, X5
	0x03AABC94 MOV X19, X4
	0x03AABC98 MOV X22, X3
	0x03AABC9C MOV X20, X2
	0x03AABCA0 MOV X24, X1
	0x03AABCA4 TBNZ X8, 0x0, 0x3AABD28
	0x03AABCA8 ADRP X0, 0x6A7000
	0x03AABCAC LDR X0, [X0 + 0xE28]
	0x03AABCB0 BL 0x1C16CF4
	0x03AABCB4 ADRP X0, 0x648000
	0x03AABCB8 LDR X0, [X0 + 0xA28]
	0x03AABCBC BL 0x1C16CF4
	0x03AABCC0 ADRP X0, 0x648000
	0x03AABCC4 LDR X0, [X0 + 0x9D0]
	0x03AABCC8 BL 0x1C16CF4
	0x03AABCCC ADRP X0, 0x648000
	0x03AABCD0 LDR X0, [X0 + 0x598]
	0x03AABCD4 BL 0x1C16CF4
	0x03AABCD8 ADRP X0, 0x6A9000
	0x03AABCDC LDR X0, [X0 + 0xA8]
	0x03AABCE0 BL 0x1C16CF4
	0x03AABCE4 ADRP X0, 0x6AC000
	0x03AABCE8 LDR X0, [X0 + 0xE00]
	0x03AABCEC BL 0x1C16CF4
	0x03AABCF0 ADRP X0, 0x6AC000
	0x03AABCF4 LDR X0, [X0 + 0xE08]
	0x03AABCF8 BL 0x1C16CF4
	0x03AABCFC ADRP X0, 0x6AC000
	0x03AABD00 LDR X0, [X0 + 0xE10]
	0x03AABD04 BL 0x1C16CF4
	0x03AABD08 ADRP X0, 0x6AC000
	0x03AABD0C LDR X0, [X0 + 0xE18]
	0x03AABD10 BL 0x1C16CF4
	0x03AABD14 ADRP X0, 0x6AC000
	0x03AABD18 LDR X0, [X0 + 0xE20]
	0x03AABD1C BL 0x1C16CF4
	0x03AABD20 MOVZ W8, 0x1
	0x03AABD24 STRB W8, [X21 + 0x432]
	0x03AABD28 STRB W31, [X31 + 0x188]
	0x03AABD2C CBZ X24, 0x3AAC2CC
	0x03AABD30 ADRP X8, 0x648000
	0x03AABD34 LDR X8, [X8 + 0x598]
	0x03AABD38 LDR X21, [X24 + 0x238]
	0x03AABD3C LDR W26, [X24 + 0x240]
	0x03AABD40 LDRB W27, [X24 + 0x244]
	0x03AABD44 LDR X0, [X8]
	0x03AABD48 LDRB W25, [X24 + 0x245]
	0x03AABD4C LDR W8, [X0 + 0xE0]
	0x03AABD50 CBNZ W8, 0x3AABD58
	0x03AABD54 BL 0x1C16DFC
	0x03AABD58 MOV X0, X21
	0x03AABD5C MOV X1, X31
	0x03AABD60 MOV X2, X31
	0x03AABD64 BL 0x3C3883C
	0x03AABD68 TBZ X0, 0x0, 0x3AABDE0
	0x03AABD6C ADRP X8, 0x648000
	0x03AABD70 LDR X8, [X8 + 0x9D0]
	0x03AABD74 MOVZ W1, 0x1
	0x03AABD78 LDR X0, [X8]
	0x03AABD7C BL 0x1C16D6C
	0x03AABD80 CBZ X0, 0x3AAC2CC
	0x03AABD84 MOV X19, X0
	0x03AABD88 CBZ X21, 0x3AABDA0
	0x03AABD8C LDR X8, [X19]
	0x03AABD90 MOV X0, X21
	0x03AABD94 LDR X1, [X8 + 0x40]
	0x03AABD98 BL 0x1C16E00
	0x03AABD9C CBZ X0, 0x3AAC2E0
	0x03AABDA0 LDR W8, [X19 + 0x18]
	0x03AABDA4 CBZ W8, 0x3AAC2D0
	0x03AABDA8 STR X21, [X19 + 0x20]
	0x03AABDAC ADRP X8, 0x648000
	0x03AABDB0 LDR X8, [X8 + 0xA28]
	0x03AABDB4 LDR X0, [X8]
	0x03AABDB8 LDR W8, [X0 + 0xE0]
	0x03AABDBC CBNZ W8, 0x3AABDC4
	0x03AABDC0 BL 0x1C16DFC
	0x03AABDC4 ADRP X8, 0x6AC000
	0x03AABDC8 LDR X8, [X8 + 0xE20]
	0x03AABDCC MOV X1, X19
	0x03AABDD0 MOV X2, X31
	0x03AABDD4 LDR X0, [X8]
	0x03AABDD8 BL 0x3C066BC
	0x03AABDDC B 0x3AAC2A4
	0x03AABDE0 ADRP X8, 0x6A9000
	0x03AABDE4 LDR X24, [X20]
	0x03AABDE8 LDR X8, [X8 + 0xA8]
	0x03AABDEC MOVZ W0, 0x6
	0x03AABDF0 LDR X1, [X8]
	0x03AABDF4 BL 0x2235BC0
	0x03AABDF8 MOV X2, X0
	0x03AABDFC ADD X0, X31, 0x188
	0x03AABE00 MOV X1, X24
	0x03AABE04 MOV X3, X31
	0x03AABE08 BL 0x39B1DB0
	0x03AABE0C ADDS W31, W26, 0x1
	0x03AABE10 B.NE 0x3AABE18
	0x03AABE14 LDR W26, [X22 + 0xE0]
	0x03AABE18 MOV X0, X31
	0x03AABE1C BL 0x3C3BE3C
	0x03AABE20 CMP W0, 0x0
	0x03AABE24 CSET W8, EQ
	0x03AABE28 ORR W8, W8, W27, 0x0
	0x03AABE2C CMP W8, 0x0
	0x03AABE30 CSINC W8, W26, W31, EQ
	0x03AABE34 CMP W8, 0x2
	0x03AABE38 B.EQ 0x3AABEFC
	0x03AABE3C CMP W8, 0x4
	0x03AABE40 B.EQ 0x3AABEA4
	0x03AABE44 CMP W8, 0x8
	0x03AABE48 B.NE 0x3AABF54
	0x03AABE4C LDR X0, [X20]
	0x03AABE50 CBZ X0, 0x3AAC314
	0x03AABE54 ADRP X8, 0x6AC000
	0x03AABE58 LDR X8, [X8 + 0xE08]
	0x03AABE5C LDR X1, [X8]
	0x03AABE60 MOV X2, X31
	0x03AABE64 BL 0x3C4D124
	0x03AABE68 LDR X0, [X20]
	0x03AABE6C CBZ X0, 0x3AAC324
	0x03AABE70 ADRP X8, 0x6AC000
	0x03AABE74 LDR X8, [X8 + 0xE00]
	0x03AABE78 LDR X1, [X8]
	0x03AABE7C MOV X2, X31
	0x03AABE80 BL 0x3C4D124
	0x03AABE84 LDR X0, [X20]
	0x03AABE88 CBZ X0, 0x3AAC334
	0x03AABE8C ADRP X8, 0x6AC000
	0x03AABE90 LDR X8, [X8 + 0xE10]
	0x03AABE94 LDR X1, [X8]
	0x03AABE98 MOV X2, X31
	0x03AABE9C BL 0x3C4D0E0
	0x03AABEA0 B 0x3AABFA8
	0x03AABEA4 LDR X0, [X20]
	0x03AABEA8 CBZ X0, 0x3AAC30C
	0x03AABEAC ADRP X8, 0x6AC000
	0x03AABEB0 LDR X8, [X8 + 0xE08]
	0x03AABEB4 LDR X1, [X8]
	0x03AABEB8 MOV X2, X31
	0x03AABEBC BL 0x3C4D124
	0x03AABEC0 LDR X0, [X20]
	0x03AABEC4 CBZ X0, 0x3AAC31C
	0x03AABEC8 ADRP X8, 0x6AC000
	0x03AABECC LDR X8, [X8 + 0xE00]
	0x03AABED0 LDR X1, [X8]
	0x03AABED4 MOV X2, X31
	0x03AABED8 BL 0x3C4D0E0
	0x03AABEDC LDR X0, [X20]
	0x03AABEE0 CBZ X0, 0x3AAC32C
	0x03AABEE4 ADRP X8, 0x6AC000
	0x03AABEE8 LDR X8, [X8 + 0xE10]
	0x03AABEEC LDR X1, [X8]
	0x03AABEF0 MOV X2, X31
	0x03AABEF4 BL 0x3C4D124
	0x03AABEF8 B 0x3AABFA8
	0x03AABEFC LDR X0, [X20]
	0x03AABF00 CBZ X0, 0x3AAC310
	0x03AABF04 ADRP X8, 0x6AC000
	0x03AABF08 LDR X8, [X8 + 0xE08]
	0x03AABF0C LDR X1, [X8]
	0x03AABF10 MOV X2, X31
	0x03AABF14 BL 0x3C4D0E0
	0x03AABF18 LDR X0, [X20]
	0x03AABF1C CBZ X0, 0x3AAC320
	0x03AABF20 ADRP X8, 0x6AC000
	0x03AABF24 LDR X8, [X8 + 0xE00]
	0x03AABF28 LDR X1, [X8]
	0x03AABF2C MOV X2, X31
	0x03AABF30 BL 0x3C4D124
	0x03AABF34 LDR X0, [X20]
	0x03AABF38 CBZ X0, 0x3AAC330
	0x03AABF3C ADRP X8, 0x6AC000
	0x03AABF40 LDR X8, [X8 + 0xE10]
	0x03AABF44 LDR X1, [X8]
	0x03AABF48 MOV X2, X31
	0x03AABF4C BL 0x3C4D124
	0x03AABF50 B 0x3AABFA8
	0x03AABF54 LDR X0, [X20]
	0x03AABF58 CBZ X0, 0x3AAC318
	0x03AABF5C ADRP X8, 0x6AC000
	0x03AABF60 LDR X8, [X8 + 0xE08]
	0x03AABF64 LDR X1, [X8]
	0x03AABF68 MOV X2, X31
	0x03AABF6C BL 0x3C4D124
	0x03AABF70 LDR X0, [X20]
	0x03AABF74 CBZ X0, 0x3AAC328
	0x03AABF78 ADRP X8, 0x6AC000
	0x03AABF7C LDR X8, [X8 + 0xE00]
	0x03AABF80 LDR X1, [X8]
	0x03AABF84 MOV X2, X31
	0x03AABF88 BL 0x3C4D124
	0x03AABF8C LDR X0, [X20]
	0x03AABF90 CBZ X0, 0x3AAC338
	0x03AABF94 ADRP X8, 0x6AC000
	0x03AABF98 LDR X8, [X8 + 0xE10]
	0x03AABF9C LDR X1, [X8]
	0x03AABFA0 MOV X2, X31
	0x03AABFA4 BL 0x3C4D124
	0x03AABFA8 CBZ W25, 0x3AABFCC
	0x03AABFAC LDR X0, [X20]
	0x03AABFB0 CBZ X0, 0x3AAC2DC
	0x03AABFB4 ADRP X8, 0x6AC000
	0x03AABFB8 LDR X8, [X8 + 0xE18]
	0x03AABFBC LDR X1, [X8]
	0x03AABFC0 MOV X2, X31
	0x03AABFC4 BL 0x3C4D0E0
	0x03AABFC8 B 0x3AAC000
	0x03AABFCC CBZ X23, 0x3AAC300
	0x03AABFD0 LDR X0, [X23 + 0x18]
	0x03AABFD4 CBZ X0, 0x3AAC304
	0x03AABFD8 MOV X1, X31
	0x03AABFDC BL 0x3C201A0
	0x03AABFE0 CBZ W0, 0x3AABFAC
	0x03AABFE4 LDR X0, [X20]
	0x03AABFE8 CBZ X0, 0x3AAC340
	0x03AABFEC ADRP X8, 0x6AC000
	0x03AABFF0 LDR X8, [X8 + 0xE18]
	0x03AABFF4 LDR X1, [X8]
	0x03AABFF8 MOV X2, X31
	0x03AABFFC BL 0x3C4D124
	0x03AAC000 CBZ X19, 0x3AAC2D4
	0x03AAC004 LDRB W8, [X19 + 0xA8]
	0x03AAC008 CBZ W8, 0x3AAC038
	0x03AAC00C ADD X8, X31, 0x150
	0x03AAC010 MOV X0, X19
	0x03AAC014 MOV X1, X31
	0x03AAC018 BL 0x39D48AC
	0x03AAC01C LDR V8, [X31 + 0x170]

ISIL:
	001 Move [X31-128], D11
	002 Move [X31-120], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X30
	006 Move [X31+48], X28
	007 Move [X31+56], X27
	008 Move [X31+64], X26
	009 Move [X31+72], X25
	010 Move [X31+80], X24
	011 Move [X31+88], X23
	012 Move [X31+96], X22
	013 Move [X31+104], X21
	014 Move [X31+112], X20
	015 Move [X31+120], X19
	016 Move X22, 0x938000
	017 Move W8, [X22+1061]
	018 Move W26, W5
	019 Move X21, X3
	020 Move X19, X2
	021 Move X20, X1
	022 Move X24, X0
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {53}
	027 Move X0, 0x6A8000
	028 Move X0, [X0+3624]
	029 Call 0x1C17CF4
	030 Move X0, 0x649000
	031 Move X0, [X0+2600]
	032 Call 0x1C17CF4
	033 Move X0, 0x649000
	034 Move X0, [X0+2512]
	035 Call 0x1C17CF4
	036 Move X0, 0x649000
	037 Move X0, [X0+1432]
	038 Call 0x1C17CF4
	039 Move X0, 0x6AA000
	040 Move X0, [X0+168]
	041 Call 0x1C17CF4
	042 Move X0, 0x6A9000
	043 Move X0, [X0+4080]
	044 Call 0x1C17CF4
	045 Move X0, 0x6AA000
	046 Move X0, [X0+2248]
	047 Call 0x1C17CF4
	048 Move X0, 0x6AD000
	049 Move X0, [X0+3488]
	050 Call 0x1C17CF4
	051 Move W8, 1
	052 Move [X22+1061], W8
	053 Move [X31+40], W31
	054 Compare X24, 0
	055 JumpIfEqual {265}
	056 Move X23, [X24+48]
	057 Move X22, [X24+56]
	058 Move W28, [X24+64]
	059 Move W25, [X24+68]
	060 Move S8, [X24+72]
	061 Move S9, [X24+76]
	062 Move S10, [X24+80]
	063 Move S11, [X24+84]
	064 Move W24, [X24+88]
	065 Move TEMP, X26
	066 And TEMP, TEMP, 1
	067 Compare TEMP, 1
	068 JumpIfNotEqual {75}
	069 Move X0, [X21]
	070 Compare X0, 0
	071 JumpIfEqual {265}
	072 Move W1, W31
	073 Move X2, X31
	074 Call CommandBuffer.SetFoveatedRenderingMode, X0, X1
	075 Move X8, 0x649000
	076 Move X8, [X8+1432]
	077 Move X0, [X8]
	078 Move W8, [X0+224]
	079 Compare W8, 0
	080 JumpIfNotEqual {82}
	081 Call 0x1C17DFC
	082 Move X0, X23
	083 Move X1, X31
	084 Move X2, X31
	085 Call Object.op_Equality, X0, X1
	086 Move TEMP, X0
	087 And TEMP, TEMP, 1
	088 Compare TEMP, 1
	089 JumpIfNotEqual {123}
	090 Move X8, 0x649000
	091 Move X8, [X8+2512]
	092 Move W1, 1
	093 Move X0, [X8]
	094 Call 0x1C17D6C
	095 Compare X0, 0
	096 JumpIfEqual {265}
	097 Move X19, X0
	098 Compare X23, 0
	099 JumpIfEqual {106}
	100 Move X8, [X19]
	101 Move X0, X23
	102 Move X1, [X8+64]
	103 Call 0x1C17E00
	104 Compare X0, 0
	105 JumpIfEqual {267}
	106 Move W8, [X19+24]
	107 Compare W8, 0
	108 JumpIfEqual {266}
	109 Move [X19+32], X23
	110 Move X8, 0x649000
	111 Move X8, [X8+2600]
	112 Move X0, [X8]
	113 Move W8, [X0+224]
	114 Compare W8, 0
	115 JumpIfNotEqual {117}
	116 Call 0x1C17DFC
	117 Move X8, 0x6AD000
	118 Move X8, [X8+3488]
	119 Move X1, X19
	120 Move X2, X31
	121 Move X0, [X8]
	122 Call Debug.LogErrorFormat, X0, X1
	123 Move X8, 0x6AA000
	124 Move X26, [X21]
	125 Move X8, [X8+168]
	126 Move W0, 5
	127 Move X1, [X8]
	128 Call 0x2236BC0, X0
	129 Move X2, X0
	130 Add X0, X31, 40
	131 Move X1, X26
	132 Move X3, X31
	133 Call ProfilingScope..ctor, X0, X1, X2
	134 Move X27, 0x6A9000
	135 Move X27, [X27+4080]
	136 Move X26, [X21]
	137 Move X0, [X27]
	138 Move W8, [X0+224]
	139 Compare W8, 0
	140 JumpIfNotEqual {143}
	141 Call 0x1C17DFC
	142 Move X0, [X27]
	143 Move X8, 0x6AA000
	144 Move X8, [X8+2248]
	145 Move X9, [X0+184]
	146 Move X8, [X8]
	147 Move X27, [X9]
	148 Move W10, [X8+224]
	149 Compare W10, 0
	150 JumpIfNotEqual {153}
	151 Move X0, X8
	152 Call 0x1C17DFC
	153 Move X0, X26
	154 Move X1, X19
	155 Move X2, X27
	156 Move W3, W25
	157 Move V0, V8
	158 Move V1, V9
	159 Move V2, V10
	160 Move V3, V11
	161 Move X4, X31
	162 Call ScriptableRenderer.SetRenderTarget, X0, X1, X2, X3, X4
	163 NotImplemented "Instruction CMP not yet implemented."
	164 Move X9, -49360896
	165 Move W8, W28
	166 Add X9, X9, 2898
	167 NotImplemented "Instruction ADR not yet implemented."
	168 Move W11, [X9]
	169 Add X10, X10, X11
	170 CallNoReturn X10
	171 Move X8, 0x6A8000
	172 Move X8, [X8+3624]
	173 Move X21, [X21]
	174 Move X0, [X8]
	175 Move W8, [X0+224]
	176 Compare W8, 0
	177 JumpIfNotEqual {179}
	178 Call 0x1C17DFC
	179 Move W3, 2
	180 Move X0, X21
	181 Move X1, X20
	182 Move X2, X19
	183 Move W4, W31
	184 Move X5, X22
	185 Move W6, W31
	186 Move X7, X31
	187 Call Blitter.BlitCameraTexture, X0, X1, X2, X3, X4, X5, X6
	188 Compare X23, 0
	189 JumpIfEqual {270}
	190 Move S0, 2
	191 Move X0, X23
	192 Move W1, W24
	193 Move X2, X31
	194 Call Material.SetFloat, X0, X1, V0
	195 Move X8, 0x6A8000
	196 Move X8, [X8+3624]
	197 Move X21, [X21]
	198 Move X0, [X8]
	199 Move W8, [X0+224]
	200 Compare W8, 0
	201 JumpIfNotEqual {203}
	202 Call 0x1C17DFC
	203 Move W3, 2
	204 Move X0, X21
	205 Move X1, X20
	206 Move X2, X19
	207 Move W4, W31
	208 Move X5, X23
	209 Move W6, W31
	210 Move X7, X31
	211 Call Blitter.BlitCameraTexture, X0, X1, X2, X3, X4, X5, X6
	212 Move X8, 0x6A8000
	213 Move X8, [X8+3624]
	214 Move X21, [X21]
	215 Move X0, [X8]
	216 Move W8, [X0+224]
	217 Compare W8, 0
	218 JumpIfNotEqual {220}
	219 Call 0x1C17DFC
	220 Move W3, 2
	221 Move W6, 1
	222 Move X0, X21
	223 Move X1, X20
	224 Move X2, X19
	225 Move W4, W31
	226 Move X5, X22
	227 Move X7, X31
	228 Call Blitter.BlitCameraTexture, X0, X1, X2, X3, X4, X5, X6
	229 Move X8, 0x6A8000
	230 Move X8, [X8+3624]
	231 Move X21, [X21]
	232 Move X0, [X8]
	233 Move W8, [X0+224]
	234 Compare W8, 0
	235 JumpIfNotEqual {237}
	236 Call 0x1C17DFC
	237 Move W3, 2
	238 Move W6, 1
	239 Move X0, X21
	240 Move X1, X20
	241 Move X2, X19
	242 Move W4, W31
	243 Move X5, X22
	244 Move X7, X31
	245 Call Blitter.BlitCameraTexture, X0, X1, X2, X3, X4, X5, X6
	246 Add X0, X31, 40
	247 Move X1, X31
	248 Call ProfilingScope.Dispose, X0
	249 Move X20, [X31+112]
	250 Move X19, [X31+120]
	251 Move X22, [X31+96]
	252 Move X21, [X31+104]
	253 Move X24, [X31+80]
	254 Move X23, [X31+88]
	255 Move X26, [X31+64]
	256 Move X25, [X31+72]
	257 Move X28, [X31+48]
	258 Move X27, [X31+56]
	259 Move X30, [X31+32]
	260 Move D9, [X31+16]
	261 Move D8, [X31+24]
	262 Move D11, [X31+128]
	263 Move D10, [X31+136]
	264 Return 
	265 Call 0x1C17F20
	266 Call 0x1C17F28
	267 Call 0x1C17F44
	268 Move X1, X31
	269 Call 0x1C17DEC
	270 Call 0x1C17F20
	271 Move X19, X0
	272 NotImplemented "Instruction CMP not yet implemented."
	273 Move X0, X19
	274 Call 0x3EB2AD0
	275 Move X20, [X0]
	276 Call 0x3EB2AE0
	277 Add X0, X31, 40
	278 Move X1, X31
	279 Call ProfilingScope.Dispose, X0
	280 Compare X20, 0
	281 JumpIfEqual {249}
	282 Move X0, X20
	283 Call 0x1C17F18
	284 Move X20, X31
	285 Move X19, X0
	286 Add X0, X31, 40
	287 Move X1, X31
	288 Call ProfilingScope.Dispose, X0
	289 Compare X20, 0
	290 JumpIfNotEqual {293}
	291 Move X0, X19
	292 Call 0x1D2D690
	293 Move X0, X20
	294 Call 0x1C17F18
	295 Call 0x1991590

Method: UnityEngine.Experimental.Rendering.RenderGraphModule.TextureHandle Render(UnityEngine.Experimental.Rendering.RenderGraphModule.RenderGraph renderGraph, out UnityEngine.Experimental.Rendering.RenderGraphModule.TextureHandle destination, in UnityEngine.Experimental.Rendering.RenderGraphModule.TextureHandle source, UnityEngine.Rendering.Universal.Downsampling downsampling, ref UnityEngine.Rendering.Universal.RenderingData renderingData)

Disassembly:
	0x03AAC020 ADD X8, X31, 0x150
	0x03AAC024 MOV X0, X19
	0x03AAC028 MOV X1, X31
	0x03AAC02C BL 0x39D48AC
	0x03AAC030 LDR V10, [X31 + 0x174]
	0x03AAC034 B 0x3AAC06C
	0x03AAC038 ADRP X24, 0x935000
	0x03AAC03C LDRB W8, [X24 + 0xA48]
	0x03AAC040 CBNZ W8, 0x3AAC058
	0x03AAC044 ADRP X0, 0x64F000
	0x03AAC048 LDR X0, [X0 + 0xF08]
	0x03AAC04C BL 0x1C16CF4
	0x03AAC050 MOVZ W8, 0x1
	0x03AAC054 STRB W8, [X24 + 0xA48]
	0x03AAC058 ADRP X8, 0x64F000
	0x03AAC05C LDR X8, [X8 + 0xF08]
	0x03AAC060 LDR X8, [X8]
	0x03AAC064 LDR X8, [X8 + 0xB8]
	0x03AAC068 LDP S8, S10, [X8 + 0x8]
	0x03AAC06C LDR W8, [X22 + 0x168]
	0x03AAC070 CMP W8, 0x1
	0x03AAC074 B.NE 0x3AAC0D8
	0x03AAC078 CBZ X23, 0x3AAC2F0
	0x03AAC07C LDR X8, [X23 + 0x48]
	0x03AAC080 LDUR V0, [X23 + 0x38]
	0x03AAC084 LDUR V1, [X23 + 0x28]
	0x03AAC088 STR X8, [X31 + 0x170]
	0x03AAC08C STP V1, V0, [X31 + 0x150]
	0x03AAC090 ADD X8, X31, 0x120
	0x03AAC094 MOVZ W0, 0x2
	0x03AAC098 MOV X1, X31
	0x03AAC09C BL 0x3C4B204
	0x03AAC0A0 LDP V0, V1, [X31 + 0x120]
	0x03AAC0A4 LDR X8, [X31 + 0x140]
	0x03AAC0A8 LDP V2, V3, [X31 + 0x150]
	0x03AAC0AC LDR X9, [X31 + 0x170]
	0x03AAC0B0 STP V0, V1, [X31 + 0xC0]
	0x03AAC0B4 STR X8, [X31 + 0xE0]
	0x03AAC0B8 STP V2, V3, [X31 + 0xF0]
	0x03AAC0BC STR X9, [X31 + 0x110]
	0x03AAC0C0 ADD X0, X31, 0xF0
	0x03AAC0C4 ADD X1, X31, 0xC0
	0x03AAC0C8 MOV X2, X31
	0x03AAC0CC BL 0x3C4B6D8
	0x03AAC0D0 AND W25, W0, 0x1
	0x03AAC0D4 B 0x3AAC0DC
	0x03AAC0D8 MOV W25, W31
	0x03AAC0DC LDR X0, [X22 + 0x178]
	0x03AAC0E0 CBZ X0, 0x3AAC2D8
	0x03AAC0E4 MOV X1, X31
	0x03AAC0E8 BL 0x3984C98
	0x03AAC0EC TBZ X0, 0x0, 0x3AAC1D0
	0x03AAC0F0 LDR X0, [X22 + 0x178]
	0x03AAC0F4 CBZ X0, 0x3AAC2F4
	0x03AAC0F8 MOV X1, X31
	0x03AAC0FC BL 0x398841C
	0x03AAC100 TBZ X0, 0x0, 0x3AAC118
	0x03AAC104 LDR X0, [X20]
	0x03AAC108 CBZ X0, 0x3AAC33C
	0x03AAC10C MOV W1, W31
	0x03AAC110 MOV X2, X31
	0x03AAC114 BL 0x3C4D910
	0x03AAC118 CBZ X23, 0x3AAC2F8
	0x03AAC11C LDUR V0, [X23 + 0x28]
	0x03AAC120 LDR X8, [X23 + 0x48]
	0x03AAC124 LDUR V1, [X23 + 0x38]
	0x03AAC128 MOVI V2.2D, 0x0
	0x03AAC12C STR X31, [X31 + 0x170]
	0x03AAC130 STR X8, [X31 + 0xB0]
	0x03AAC134 STP V0, V1, [X31 + 0x90]
	0x03AAC138 STP V2, V2, [X31 + 0x150]
	0x03AAC13C ADD X0, X31, 0x150
	0x03AAC140 ADD X1, X31, 0x90
	0x03AAC144 MOVN W3, 0x0
	0x03AAC148 MOV W2, W31
	0x03AAC14C MOV W4, W31
	0x03AAC150 MOV X5, X31
	0x03AAC154 BL 0x3C4B098
	0x03AAC158 LDR X8, [X22 + 0x178]
	0x03AAC15C CBZ X8, 0x3AAC2FC
	0x03AAC160 LDR X9, [X8 + 0x50]
	0x03AAC164 LDP V0, V1, [X8 + 0x30]
	0x03AAC168 MOVI V2.2D, 0x0
	0x03AAC16C STR X31, [X31 + 0x140]
	0x03AAC170 STR X9, [X31 + 0x80]
	0x03AAC174 STP V0, V1, [X31 + 0x60]
	0x03AAC178 STP V2, V2, [X31 + 0x120]
	0x03AAC17C ADD X0, X31, 0x120
	0x03AAC180 ADD X1, X31, 0x60
	0x03AAC184 MOVN W3, 0x0
	0x03AAC188 MOV W2, W31
	0x03AAC18C MOV W4, W31
	0x03AAC190 MOV X5, X31
	0x03AAC194 BL 0x3C4B098
	0x03AAC198 LDP V0, V1, [X31 + 0x150]
	0x03AAC19C LDR X8, [X31 + 0x170]
	0x03AAC1A0 LDP V2, V3, [X31 + 0x120]
	0x03AAC1A4 LDR X9, [X31 + 0x140]
	0x03AAC1A8 STP V0, V1, [X31 + 0x30]
	0x03AAC1AC STR X8, [X31 + 0x50]
	0x03AAC1B0 STP V2, V3, [X31]
	0x03AAC1B4 STR X9, [X31 + 0x20]
	0x03AAC1B8 ADD X0, X31, 0x30
	0x03AAC1BC ADD X1, X31, 0x0
	0x03AAC1C0 MOV X2, X31
	0x03AAC1C4 BL 0x3C4B6D8
	0x03AAC1C8 AND W8, W0, 0x1
	0x03AAC1CC ORR W25, W25, W8, 0x0
	0x03AAC1D0 MOV X0, X22
	0x03AAC1D4 MOV X1, X19
	0x03AAC1D8 MOV X2, X31
	0x03AAC1DC BL 0x3A93558
	0x03AAC1E0 MOV W24, W0
	0x03AAC1E4 MOV X0, X22
	0x03AAC1E8 MOV X1, X23
	0x03AAC1EC MOV X2, X31
	0x03AAC1F0 BL 0x3A93558
	0x03AAC1F4 EOR W8, W24, W0, 0x0
	0x03AAC1F8 LDR X0, [X20]
	0x03AAC1FC FNEG S0, S10
	0x03AAC200 ANDS W31, W8, 0x1
	0x03AAC204 FMOV S1, W31
	0x03AAC208 FCSEL S9, S10, S1, NE
	0x03AAC20C FCSEL S10, S0, S10, NE
	0x03AAC210 CBZ W25, 0x3AAC234
	0x03AAC214 CBZ X0, 0x3AAC2EC
	0x03AAC218 LDR V3, [X22 + 0x118]
	0x03AAC21C LDR V2, [X22 + 0x114]
	0x03AAC220 LDR V1, [X22 + 0x110]
	0x03AAC224 LDR V0, [X22 + 0x10C]
	0x03AAC228 MOV X1, X31
	0x03AAC22C BL 0x3C4C86C
	0x03AAC230 B 0x3AAC254
	0x03AAC234 CBZ X0, 0x3AAC308
	0x03AAC238 LDP S1, S0, [X22 + 0xD8]
	0x03AAC23C SCVTF S3, S0
	0x03AAC240 SCVTF S2, S1
	0x03AAC244 FMOV S0, W31
	0x03AAC248 FMOV S1, W31
	0x03AAC24C MOV X1, X31
	0x03AAC250 BL 0x3C4C86C
	0x03AAC254 ADRP X8, 0x6A6000
	0x03AAC258 LDR X8, [X8 + 0xE28]
	0x03AAC25C LDR X20, [X20]
	0x03AAC260 LDR X0, [X8]
	0x03AAC264 LDR W8, [X0 + 0xE0]
	0x03AAC268 CBNZ W8, 0x3AAC270
	0x03AAC26C BL 0x1C16DFC
	0x03AAC270 FMOV S2, W31
	0x03AAC274 MOV X0, X20
	0x03AAC278 MOV X1, X19
	0x03AAC27C MOV V0.16B, V8.16B
	0x03AAC280 MOV V1.16B, V10.16B
	0x03AAC284 MOV V3.16B, V9.16B
	0x03AAC288 MOV X2, X21
	0x03AAC28C MOV W3, W31
	0x03AAC290 MOV X4, X31
	0x03AAC294 BL 0x39E23B4
	0x03AAC298 ADD X0, X31, 0x188
	0x03AAC29C MOV X1, X31
	0x03AAC2A0 BL 0x39B1DB4
	0x03AAC2A4 ADD X31, X31, 0x190
	0x03AAC2A8 LDP X20, X19, [X31 + 0x60]
	0x03AAC2AC LDP X22, X21, [X31 + 0x50]
	0x03AAC2B0 LDP X24, X23, [X31 + 0x40]
	0x03AAC2B4 LDP X26, X25, [X31 + 0x30]
	0x03AAC2B8 LDP X30, X27, [X31 + 0x20]
	0x03AAC2BC LDR X29, [X31 + 0x18]
	0x03AAC2C0 LDP D9, D8, [X31 + 0x8]
	0x03AAC2C4 LDR V10, [X31], #0x70
	0x03AAC2C8 RET
	0x03AAC2CC BL 0x1C16F20
	0x03AAC2D0 BL 0x1C16F28
	0x03AAC2D4 BL 0x1C16F20
	0x03AAC2D8 BL 0x1C16F20
	0x03AAC2DC BL 0x1C16F20
	0x03AAC2E0 BL 0x1C16F44
	0x03AAC2E4 MOV X1, X31
	0x03AAC2E8 BL 0x1C16DEC
	0x03AAC2EC BL 0x1C16F20
	0x03AAC2F0 BL 0x1C16F20
	0x03AAC2F4 BL 0x1C16F20
	0x03AAC2F8 BL 0x1C16F20
	0x03AAC2FC BL 0x1C16F20
	0x03AAC300 BL 0x1C16F20
	0x03AAC304 BL 0x1C16F20
	0x03AAC308 BL 0x1C16F20
	0x03AAC30C BL 0x1C16F20
	0x03AAC310 BL 0x1C16F20
	0x03AAC314 BL 0x1C16F20
	0x03AAC318 BL 0x1C16F20
	0x03AAC31C BL 0x1C16F20
	0x03AAC320 BL 0x1C16F20
	0x03AAC324 BL 0x1C16F20
	0x03AAC328 BL 0x1C16F20
	0x03AAC32C BL 0x1C16F20
	0x03AAC330 BL 0x1C16F20
	0x03AAC334 BL 0x1C16F20
	0x03AAC338 BL 0x1C16F20
	0x03AAC33C BL 0x1C16F20
	0x03AAC340 BL 0x1C16F20
	0x03AAC344 B 0x3AAC3E0
	0x03AAC348 B 0x3AAC3E0
	0x03AAC34C B 0x3AAC3E0
	0x03AAC350 B 0x3AAC3E0
	0x03AAC354 B 0x3AAC3E0
	0x03AAC358 B 0x3AAC3E0
	0x03AAC35C B 0x3AAC3E0
	0x03AAC360 B 0x3AAC3E0
	0x03AAC364 B 0x3AAC3E0
	0x03AAC368 B 0x3AAC3E0
	0x03AAC36C B 0x3AAC3E0
	0x03AAC370 B 0x3AAC3E0
	0x03AAC374 B 0x3AAC3E0
	0x03AAC378 B 0x3AAC3E0
	0x03AAC37C B 0x3AAC3E0
	0x03AAC380 B 0x3AAC3E0
	0x03AAC384 B 0x3AAC3E0
	0x03AAC388 B 0x3AAC3E0
	0x03AAC38C B 0x3AAC3E0
	0x03AAC390 B 0x3AAC3E0
	0x03AAC394 B 0x3AAC3E0
	0x03AAC398 B 0x3AAC3E0
	0x03AAC39C B 0x3AAC3E0
	0x03AAC3A0 B 0x3AAC3E0
	0x03AAC3A4 B 0x3AAC3E0
	0x03AAC3A8 B 0x3AAC3E0
	0x03AAC3AC B 0x3AAC3E0
	0x03AAC3B0 B 0x3AAC3E0
	0x03AAC3B4 B 0x3AAC3E0
	0x03AAC3B8 B 0x3AAC3E0
	0x03AAC3BC B 0x3AAC3E0
	0x03AAC3C0 B 0x3AAC3E0
	0x03AAC3C4 B 0x3AAC3E0
	0x03AAC3C8 B 0x3AAC3E0
	0x03AAC3CC B 0x3AAC3E0
	0x03AAC3D0 B 0x3AAC3E0
	0x03AAC3D4 B 0x3AAC3E0
	0x03AAC3D8 B 0x3AAC3E0
	0x03AAC3DC B 0x3AAC3E0
	0x03AAC3E0 MOV X19, X0
	0x03AAC3E4 CMP W1, 0x1
	0x03AAC3E8 B.NE 0x3AAC414
	0x03AAC3EC MOV X0, X19
	0x03AAC3F0 BL 0x3EB1AD0
	0x03AAC3F4 LDR X20, [X0]
	0x03AAC3F8 BL 0x3EB1AE0
	0x03AAC3FC ADD X0, X31, 0x188
	0x03AAC400 MOV X1, X31
	0x03AAC404 BL 0x39B1DB4
	0x03AAC408 CBZ X20, 0x3AAC2A4
	0x03AAC40C MOV X0, X20
	0x03AAC410 BL 0x1C16F18
	0x03AAC414 MOV X20, X31
	0x03AAC418 B 0x3AAC420
	0x03AAC41C MOV X19, X0
	0x03AAC420 ADD X0, X31, 0x188
	0x03AAC424 MOV X1, X31
	0x03AAC428 BL 0x39B1DB4
	0x03AAC42C CBNZ X20, 0x3AAC438
	0x03AAC430 MOV X0, X19
	0x03AAC434 BL 0x1D2C690
	0x03AAC438 MOV X0, X20
	0x03AAC43C BL 0x1C16F18
	0x03AAC440 BL 0x1990590
	0x03AAC444 STP X30, X21, [X31 - 0x20]!
	0x03AAC448 STP X20, X19, [X31 + 0x10]
	0x03AAC44C ADRP X21, 0x936000
	0x03AAC450 LDRB W8, [X21 + 0x433]
	0x03AAC454 MOV X20, X1
	0x03AAC458 MOV X19, X0
	0x03AAC45C TBNZ X8, 0x0, 0x3AAC474
	0x03AAC460 ADRP X0, 0x6A7000
	0x03AAC464 LDR X0, [X0 + 0xFF0]
	0x03AAC468 BL 0x1C16CF4
	0x03AAC46C MOVZ W8, 0x1
	0x03AAC470 STRB W8, [X21 + 0x433]
	0x03AAC474 CBZ X20, 0x3AAC4AC
	0x03AAC478 ADRP X20, 0x6A7000
	0x03AAC47C LDR X20, [X20 + 0xFF0]
	0x03AAC480 LDR X0, [X20]
	0x03AAC484 LDR W8, [X0 + 0xE0]
	0x03AAC488 CBNZ W8, 0x3AAC494
	0x03AAC48C BL 0x1C16DFC
	0x03AAC490 LDR X0, [X20]
	0x03AAC494 LDR X8, [X0 + 0xB8]
	0x03AAC498 LDR X8, [X8]
	0x03AAC49C STR X8, [X19 + 0xE8]
	0x03AAC4A0 LDP X20, X19, [X31 + 0x10]
	0x03AAC4A4 LDP X30, X21, [X31], #0x20
	0x03AAC4A8 RET
	0x03AAC4AC ADRP X0, 0x64C000
	0x03AAC4B0 LDR X0, [X0 + 0x528]
	0x03AAC4B4 BL 0x1C16D08
	0x03AAC4B8 BL 0x1C16F10
	0x03AAC4BC MOV X19, X0
	0x03AAC4C0 ADRP X0, 0x6A9000
	0x03AAC4C4 LDR X0, [X0 + 0x6F0]
	0x03AAC4C8 BL 0x1C16D08
	0x03AAC4CC MOV X1, X0
	0x03AAC4D0 MOV X0, X19
	0x03AAC4D4 MOV X2, X31
	0x03AAC4D8 BL 0x330E100
	0x03AAC4DC ADRP X0, 0x6AB000
	0x03AAC4E0 LDR X0, [X0 + 0xE28]
	0x03AAC4E4 BL 0x1C16D08
	0x03AAC4E8 MOV X1, X0
	0x03AAC4EC MOV X0, X19
	0x03AAC4F0 BL 0x1C16DEC
	0x03AAC4F4 SUB X31, X31, 0x190
	0x03AAC4F8 STP X29, X30, [X31 + 0x130]
	0x03AAC4FC STP X28, X27, [X31 + 0x140]
	0x03AAC500 STP X26, X25, [X31 + 0x150]
	0x03AAC504 STP X24, X23, [X31 + 0x160]
	0x03AAC508 STP X22, X21, [X31 + 0x170]
	0x03AAC50C STP X20, X19, [X31 + 0x180]
	0x03AAC510 ADRP X24, 0x936000
	0x03AAC514 LDRB W8, [X24 + 0x434]
	0x03AAC518 MOV X20, X4
	0x03AAC51C MOV X23, X3
	0x03AAC520 MOV X19, X2
	0x03AAC524 MOV X21, X1
	0x03AAC528 MOV X22, X0
	0x03AAC52C TBNZ X8, 0x0, 0x3AAC5C8
	0x03AAC530 ADRP X0, 0x6AB000
	0x03AAC534 LDR X0, [X0 + 0xE30]
	0x03AAC538 BL 0x1C16CF4
	0x03AAC53C ADRP X0, 0x6AB000
	0x03AAC540 LDR X0, [X0 + 0xE38]
	0x03AAC544 BL 0x1C16CF4
	0x03AAC548 ADRP X0, 0x6AB000
	0x03AAC54C LDR X0, [X0 + 0xE40]
	0x03AAC550 BL 0x1C16CF4
	0x03AAC554 ADRP X0, 0x6AB000
	0x03AAC558 LDR X0, [X0 + 0xE48]
	0x03AAC55C BL 0x1C16CF4
	0x03AAC560 ADRP X0, 0x6AB000
	0x03AAC564 LDR X0, [X0 + 0xE50]
	0x03AAC568 BL 0x1C16CF4
	0x03AAC56C ADRP X0, 0x6AB000
	0x03AAC570 LDR X0, [X0 + 0xE58]
	0x03AAC574 BL 0x1C16CF4
	0x03AAC578 ADRP X0, 0x6AB000
	0x03AAC57C LDR X0, [X0 + 0xE60]
	0x03AAC580 BL 0x1C16CF4
	0x03AAC584 ADRP X0, 0x6A7000
	0x03AAC588 LDR X0, [X0 + 0xFF8]
	0x03AAC58C BL 0x1C16CF4
	0x03AAC590 ADRP X0, 0x6AB000
	0x03AAC594 LDR X0, [X0 + 0xE68]
	0x03AAC598 BL 0x1C16CF4
	0x03AAC59C ADRP X0, 0x6AA000
	0x03AAC5A0 LDR X0, [X0 + 0xFD8]
	0x03AAC5A4 BL 0x1C16CF4
	0x03AAC5A8 ADRP X0, 0x6AB000
	0x03AAC5AC LDR X0, [X0 + 0xE70]
	0x03AAC5B0 BL 0x1C16CF4
	0x03AAC5B4 ADRP X0, 0x6AB000
	0x03AAC5B8 LDR X0, [X0 + 0xE78]
	0x03AAC5BC BL 0x1C16CF4
	0x03AAC5C0 MOVZ W8, 0x1
	0x03AAC5C4 STRB W8, [X24 + 0x434]
	0x03AAC5C8 MOVI V0.2D, 0x0
	0x03AAC5CC MOVN W8, 0x0
	0x03AAC5D0 STR X31, [X31 + 0x108]
	0x03AAC5D4 STR X31, [X31 + 0xD8]
	0x03AAC5D8 STR W31, [X31 + 0xD0]
	0x03AAC5DC STR X31, [X31 + 0x78]
	0x03AAC5E0 STP V0, V0, [X31 + 0x110]
	0x03AAC5E4 STP V0, V0, [X31 + 0xE0]
	0x03AAC5E8 STP V0, V0, [X31 + 0xB0]
	0x03AAC5EC STP V0, V0, [X31 + 0x90]
	0x03AAC5F0 STR V0, [X31 + 0x8]
	0x03AAC5F4 STR W8, [X22 + 0xF0]
	0x03AAC5F8 CBZ X21, 0x3AACA14
	0x03AAC5FC ADRP X8, 0x6AB000
	0x03AAC600 ADRP X28, 0x6AB000
	0x03AAC604 LDR X8, [X8 + 0xE70]
	0x03AAC608 LDR X28, [X28 + 0xE40]

ISIL:
	001 Subtract X31, X31, 432
	002 Move [X31+336], X29
	003 Move [X31+344], X30
	004 Move [X31+352], X28
	005 Move [X31+360], X27
	006 Move [X31+368], X26
	007 Move [X31+376], X25
	008 Move [X31+384], X24
	009 Move [X31+392], X23
	010 Move [X31+400], X22
	011 Move [X31+408], X21
	012 Move [X31+416], X20
	013 Move [X31+424], X19
	014 Move X25, 0x937000
	015 Move W8, [X25+1062]
	016 Move X20, X5
	017 Move W21, W4
	018 Move X24, X3
	019 Move X19, X2
	020 Move X22, X1
	021 Move X23, X0
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {58}
	026 Move X0, 0x6AC000
	027 Move X0, [X0+3496]
	028 Call 0x1C17CF4
	029 Move X0, 0x6AC000
	030 Move X0, [X0+3504]
	031 Call 0x1C17CF4
	032 Move X0, 0x6AC000
	033 Move X0, [X0+3512]
	034 Call 0x1C17CF4
	035 Move X0, 0x6AC000
	036 Move X0, [X0+3520]
	037 Call 0x1C17CF4
	038 Move X0, 0x6AC000
	039 Move X0, [X0+3528]
	040 Call 0x1C17CF4
	041 Move X0, 0x6AC000
	042 Move X0, [X0+3536]
	043 Call 0x1C17CF4
	044 Move X0, 0x6A8000
	045 Move X0, [X0+4088]
	046 Call 0x1C17CF4
	047 Move X0, 0x6AC000
	048 Move X0, [X0+3544]
	049 Call 0x1C17CF4
	050 Move X0, 0x6AC000
	051 Move X0, [X0+3552]
	052 Call 0x1C17CF4
	053 Move X0, 0x6AC000
	054 Move X0, [X0+512]
	055 Call 0x1C17CF4
	056 Move W8, 1
	057 Move [X25+1062], W8
	058 NotImplemented "Instruction MOVI not yet implemented."
	059 Move [X31+296], X31
	060 Move [X31+288], W31
	061 Move [X31+236], W31
	062 Move [X31+184], X31
	063 Move [X31+176], W31
	064 Move [X31+124], W31
	065 Move [X31+304], V0
	066 Move [X31+312], V0
	067 Move [X31+256], V0
	068 Move [X31+264], V0
	069 Move [X31+15], V0
	070 Move [X31+192], V0
	071 Move [X31+200], V0
	072 Move [X31+144], V0
	073 Move [X31+152], V0
	074 Move [X31+8], V0
	075 Move [X23+240], W21
	076 Compare X22, 0
	077 JumpIfEqual {351}
	078 Move X8, 0x6AC000
	079 Move X28, 0x6AC000
	080 Move X8, [X8+3552]
	081 Move X28, [X28+3512]
	082 Move X3, [X23+56]
	083 Move X27, 0x6AC000
	084 Move X1, [X8]
	085 Move X4, [X28]
	086 Move X26, 0x6AC000
	087 Move X27, [X27+3536]
	088 Move X26, [X26+3504]
	089 Add X8, X31, 64
	090 Add X2, X31, 296
	091 Move X0, X22
	092 Call 0x2241F24, X0, X1, X2, X3
	093 Move V0, [X31+64]
	094 Move V1, [X31+80]
	095 Move [X31+304], V0
	096 Move [X31+312], V1
	097 Move W8, [X20+288]
	098 Move V1, [X20+256]
	099 Move V0, [X20+272]
	100 Move V2, [X20+15]
	101 Move [X31+288], W8
	102 Move [X31+256], V1
	103 Move [X31+264], V0
	104 Move [X31+15], V2
	105 Add X1, X31, 240
	106 Add X2, X31, 236
	107 Move W0, W21
	108 Call CopyColorPass.ConfigureDescriptor, X0, X1, X2
	109 Move X8, 0x6A8000
	110 Move X8, [X8+4088]
	111 Move V0, [X31+240]
	112 Move V1, [X31+256]
	113 Move V2, [X31+17]
	114 Move W9, [X31+288]
	115 Move X0, [X8]
	116 Move [X31+64], V0
	117 Move [X31+72], V1
	118 Move [X31+6], V2
	119 Move [X31+112], W9
	120 Move W8, [X0+224]
	121 Move W25, [X31+236]
	122 Compare W8, 0
	123 JumpIfNotEqual {125}
	124 Call 0x1C17DFC
	125 Move X8, 0x6AC000
	126 Move X8, [X8+512]
	127 Move V0, [X31+64]
	128 Move V1, [X31+80]
	129 Move V2, [X31+6]
	130 Move W9, [X31+112]
	131 Move X2, [X8]
	132 Move [X31], V0
	133 Move [X31+8], V1
	134 Move [X31+2], V2
	135 Move [X31+48], W9
	136 Add X1, X31, 0
	137 Move W3, 1
	138 Move W5, 1
	139 Move X0, X22
	140 Move W4, W25
	141 Move X6, X31
	142 Call UniversalRenderer.CreateRenderGraphTexture, X0, X1, X2, X3, X4, X5
	143 Move [X19], X0
	144 Move X25, [X31+296]
	145 Add X0, X31, 304
	146 Move X1, X19
	147 Move W2, W31
	148 Move X3, X31
	149 Call RenderGraphBuilder.UseColorBuffer, X0, X1, X2
	150 Compare X25, 0
	151 JumpIfEqual {354}
	152 Move [X25+24], X0
	153 Move X25, [X31+296]
	154 Add X0, X31, 304
	155 Move X1, X24
	156 Move X2, X31
	157 Call RenderGraphBuilder.ReadTexture, X0, X1
	158 Compare X25, 0
	159 JumpIfEqual {355}
	160 Move [X25+16], X0
	161 Move X24, [X31+296]
	162 Compare X24, 0
	163 JumpIfEqual {356}
	164 Move X8, [X20]
	165 Move [X24+40], X8
	166 Move X0, [X20+400]
	167 Compare X0, 0
	168 JumpIfEqual {357}
	169 Move X1, X31
	170 Call XRPass.get_enabled, X0
	171 And W8, W0, 1
	172 Move [X24+32], W8
	173 Move X0, [X20+400]
	174 Compare X0, 0
	175 JumpIfEqual {358}
	176 Move X24, [X31+296]
	177 Move X1, X31
	178 Call XRPass.get_enabled, X0
	179 Move TEMP, X0
	180 And TEMP, TEMP, 1
	181 Compare TEMP, 1
	182 JumpIfNotEqual {189}
	183 Move X0, [X20+400]
	184 Compare X0, 0
	185 JumpIfEqual {361}
	186 Move X1, X31
	187 Call XRPass.get_supportsFoveatedRendering, X0
	188 And W8, W0, 1
	189 Move W8, W31
	190 Compare X24, 0
	191 JumpIfEqual {359}
	192 Move [X24+33], W8
	193 Move X8, [X31+296]
	194 Compare X8, 0
	195 JumpIfEqual {360}
	196 Move X9, [X23+232]
	197 Move [X8+48], X9
	198 Move X9, [X23+248]
	199 Move [X8+56], X9
	200 Move W9, [X23+240]
	201 Move [X8+64], W9
	202 Move W9, [X23+204]
	203 Move [X8+68], W9
	204 Move V0, [X23+13]
	205 Move [X8+72], V0
	206 Move W9, [X23+224]
	207 Move [X8+88], W9
	208 Add X0, X31, 304
	209 Move W1, W31
	210 Move X2, X31
	211 Call RenderGraphBuilder.AllowPassCulling, X0, X1
	212 Move X8, [X27]
	213 Move W9, [X8+224]
	214 Compare W9, 0
	215 JumpIfNotEqual {219}
	216 Move X0, X8
	217 Call 0x1C17DFC
	218 Move X8, [X27]
	219 Move X9, [X8+184]
	220 Move X24, [X9+8]
	221 Compare X24, 0
	222 JumpIfNotEqual {245}
	223 Move W9, [X8+224]
	224 Compare W9, 0
	225 JumpIfNotEqual {229}
	226 Move X0, X8
	227 Call 0x1C17DFC
	228 Move X8, [X27]
	229 Move X9, 0x6AC000
	230 Move X8, [X8+184]
	231 Move X9, [X9+3496]
	232 Move X25, [X8]
	233 Move X0, [X9]
	234 Call 0x1C17F10
	235 Move X8, 0x6AC000
	236 Move X8, [X8+3520]
	237 Move X24, X0
	238 Move X2, [X8]
	239 Move X1, X25
	240 Move X3, X31
	241 Call 0x25C88AC, X0, X1, X2
	242 Move X8, [X27]
	243 Move X8, [X8+184]
	244 Move [X8+8], X24
	245 Move X2, [X26]
	246 Add X0, X31, 304
	247 Move X1, X24
	248 Call 0x224207C, X0, X1
	249 Add X0, X31, 304
	250 Move X1, X31
	251 Call RenderGraphBuilder.Dispose, X0
	252 Move X8, 0x6AC000
	253 Move X8, [X8+3544]
	254 Move X3, [X23+56]
	255 Move X4, [X28]
	256 Add X2, X31, 184
	257 Move X1, [X8]
	258 Add X8, X31, 64
	259 Move X0, X22
	260 Add X23, X20, 240
	261 Call 0x2241F24, X0, X1, X2, X3
	262 Move V0, [X31+64]
	263 Move V1, [X31+80]
	264 Move [X31+192], V0
	265 Move [X31+200], V1
	266 Move W8, [X23+48]
	267 Move V1, [X23+16]
	268 Move V0, [X23+32]
	269 Move V2, [X23]
	270 Move [X31+176], W8
	271 Move [X31+144], V1
	272 Move [X31+152], V0
	273 Move [X31+8], V2
	274 Add X1, X31, 128
	275 Add X2, X31, 124
	276 Move W0, W21
	277 Call CopyColorPass.ConfigureDescriptor, X0, X1, X2
	278 Move X21, [X31+184]
	279 Add X0, X31, 192
	280 Move X1, X19
	281 Move W2, W31
	282 Move X3, X31
	283 Call RenderGraphBuilder.UseColorBuffer, X0, X1, X2
	284 Compare X21, 0
	285 JumpIfEqual {352}
	286 Move [X21+24], X0
	287 Move X8, [X31+184]
	288 Compare X8, 0
	289 JumpIfEqual {353}
	290 Move X9, [X20]
	291 Move [X8+40], X9
	292 Add X0, X31, 192
	293 Move W1, W31
	294 Move X2, X31
	295 Call RenderGraphBuilder.AllowPassCulling, X0, X1
	296 Move X8, [X27]
	297 Move W9, [X8+224]
	298 Compare W9, 0
	299 JumpIfNotEqual {303}
	300 Move X0, X8
	301 Call 0x1C17DFC
	302 Move X8, [X27]
	303 Move X9, [X8+184]
	304 Move X20, [X9+16]
	305 Compare X20, 0
	306 JumpIfNotEqual {329}
	307 Move W9, [X8+224]
	308 Compare W9, 0
	309 JumpIfNotEqual {313}
	310 Move X0, X8
	311 Call 0x1C17DFC
	312 Move X8, [X27]
	313 Move X9, 0x6AC000
	314 Move X8, [X8+184]
	315 Move X9, [X9+3496]
	316 Move X21, [X8]
	317 Move X0, [X9]
	318 Call 0x1C17F10
	319 Move X8, 0x6AC000
	320 Move X8, [X8+3528]
	321 Move X20, X0
	322 Move X2, [X8]
	323 Move X1, X21
	324 Move X3, X31
	325 Call 0x25C88AC, X0, X1, X2
	326 Move X8, [X27]
	327 Move X8, [X8+184]
	328 Move [X8+16], X20
	329 Move X2, [X26]
	330 Add X0, X31, 192
	331 Move X1, X20
	332 Call 0x224207C, X0, X1
	333 Add X0, X31, 192
	334 Move X1, X31
	335 Call RenderGraphBuilder.Dispose, X0
	336 Move X0, [X19]
	337 Move X20, [X31+416]
	338 Move X19, [X31+424]
	339 Move X22, [X31+400]
	340 Move X21, [X31+408]
	341 Move X24, [X31+384]
	342 Move X23, [X31+392]
	343 Move X26, [X31+368]
	344 Move X25, [X31+376]
	345 Move X28, [X31+352]
	346 Move X27, [X31+360]
	347 Move X29, [X31+336]
	348 Move X30, [X31+344]
	349 Add X31, X31, 432
	350 Return X0
	351 Call 0x1C17F20
	352 Call 0x1C17F20
	353 Call 0x1C17F20
	354 Call 0x1C17F20
	355 Call 0x1C17F20
	356 Call 0x1C17F20
	357 Call 0x1C17F20
	358 Call 0x1C17F20
	359 Call 0x1C17F20
	360 Call 0x1C17F20
	361 Call 0x1C17F20
	362 Move X24, X0
	363 NotImplemented "Instruction CMP not yet implemented."
	364 Move X0, X24
	365 Call 0x3EB2AD0
	366 Move X25, [X0]
	367 Call 0x3EB2AE0
	368 Add X0, X31, 304
	369 Move X1, X31
	370 Call RenderGraphBuilder.Dispose, X0
	371 Compare X25, 0
	372 JumpIfEqual {252}
	373 Move X0, X25
	374 Call 0x1C17F18
	375 Move X25, X31
	376 Move X24, X0
	377 Add X0, X31, 304
	378 Move X1, X31
	379 Call RenderGraphBuilder.Dispose, X0
	380 Compare X25, 0
	381 JumpIfEqual {404}
	382 Move X0, X25
	383 Call 0x1C17F18
	384 Move X24, X0
	385 NotImplemented "Instruction CMP not yet implemented."
	386 Move X0, X24
	387 Call 0x3EB2AD0
	388 Move X20, [X0]
	389 Call 0x3EB2AE0
	390 Add X0, X31, 192
	391 Move X1, X31
	392 Call RenderGraphBuilder.Dispose, X0
	393 Compare X20, 0
	394 JumpIfEqual {336}
	395 Move X0, X20
	396 Call 0x1C17F18
	397 Move X20, X31
	398 Move X24, X0
	399 Add X0, X31, 192
	400 Move X1, X31
	401 Call RenderGraphBuilder.Dispose, X0
	402 Compare X20, 0
	403 JumpIfNotEqual {406}
	404 Move X0, X24
	405 Call 0x1D2D690
	406 Move X0, X20
	407 Call 0x1C17F18
	408 Call 0x1991590

Method: System.Void OnCameraCleanup(UnityEngine.Rendering.CommandBuffer cmd)

Disassembly:
	0x03AAC60C LDR X3, [X22 + 0x38]
	0x03AAC610 ADRP X27, 0x6AB000
	0x03AAC614 LDR X1, [X8]
	0x03AAC618 LDR X4, [X28]
	0x03AAC61C ADRP X26, 0x6AB000
	0x03AAC620 LDR X27, [X27 + 0xE60]
	0x03AAC624 LDR X26, [X26 + 0xE38]
	0x03AAC628 ADD X8, X31, 0x40
	0x03AAC62C ADD X2, X31, 0x108
	0x03AAC630 MOV X0, X21
	0x03AAC634 BL 0x2240F24
	0x03AAC638 LDP V0, V1, [X31 + 0x40]
	0x03AAC63C LDR X24, [X31 + 0x108]
	0x03AAC640 STP V0, V1, [X31 + 0x110]
	0x03AAC644 ADD X0, X31, 0x110
	0x03AAC648 MOV X1, X23
	0x03AAC64C MOV X2, X31
	0x03AAC650 BL 0x3996BA8
	0x03AAC654 CBZ X24, 0x3AACA1C
	0x03AAC658 STR X0, [X24 + 0x10]
	0x03AAC65C ADD X0, X31, 0x110
	0x03AAC660 MOV W1, W31
	0x03AAC664 MOV X2, X31
	0x03AAC668 BL 0x398E404
	0x03AAC66C LDR X8, [X27]
	0x03AAC670 LDR W9, [X8 + 0xE0]
	0x03AAC674 CBNZ W9, 0x3AAC684
	0x03AAC678 MOV X0, X8
	0x03AAC67C BL 0x1C16DFC
	0x03AAC680 LDR X8, [X27]
	0x03AAC684 LDR X9, [X8 + 0xB8]
	0x03AAC688 LDR X24, [X9 + 0x8]
	0x03AAC68C CBNZ X24, 0x3AAC6E4
	0x03AAC690 LDR W9, [X8 + 0xE0]
	0x03AAC694 CBNZ W9, 0x3AAC6A4
	0x03AAC698 MOV X0, X8
	0x03AAC69C BL 0x1C16DFC
	0x03AAC6A0 LDR X8, [X27]
	0x03AAC6A4 ADRP X9, 0x6AB000
	0x03AAC6A8 LDR X8, [X8 + 0xB8]
	0x03AAC6AC LDR X9, [X9 + 0xE30]
	0x03AAC6B0 LDR X25, [X8]
	0x03AAC6B4 LDR X0, [X9]
	0x03AAC6B8 BL 0x1C16F10
	0x03AAC6BC ADRP X8, 0x6AB000
	0x03AAC6C0 LDR X8, [X8 + 0xE48]
	0x03AAC6C4 MOV X24, X0
	0x03AAC6C8 LDR X2, [X8]
	0x03AAC6CC MOV X1, X25
	0x03AAC6D0 MOV X3, X31
	0x03AAC6D4 BL 0x25C78AC
	0x03AAC6D8 LDR X8, [X27]
	0x03AAC6DC LDR X8, [X8 + 0xB8]
	0x03AAC6E0 STR X24, [X8 + 0x8]
	0x03AAC6E4 LDR X2, [X26]
	0x03AAC6E8 ADD X0, X31, 0x110
	0x03AAC6EC MOV X1, X24
	0x03AAC6F0 BL 0x224107C
	0x03AAC6F4 ADD X0, X31, 0x110
	0x03AAC6F8 MOV X1, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x937000
	006 Move W8, [X21+1063]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x648000
	014 Move X0, [X0+1432]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+1063], W8
	018 Compare X20, 0
	019 JumpIfEqual {56}
	020 Move X8, [X19+264]
	021 Compare X8, 0
	022 JumpIfEqual {55}
	023 Move X9, 0x648000
	024 Move X9, [X9+1432]
	025 Move X21, [X8+24]
	026 Move X0, [X9]
	027 Move W9, [X0+224]
	028 Compare W9, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X0, X21
	032 Move X1, X31
	033 Move X2, X31
	034 Call Object.op_Equality, X0, X1
	035 Move TEMP, X0
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfNotEqual {50}
	039 Move W1, [X19+272]
	040 Add W31, W1, 1
	041 Move X0, X20
	042 Move X2, X31
	043 Call CommandBuffer.ReleaseTemporaryRT, X0, X1
	044 Move X0, [X19+264]
	045 Compare X0, 0
	046 JumpIfEqual {55}
	047 Move X1, X31
	048 Call RTHandle.Release, X0
	049 Move [X19+264], X31
	050 Move X20, [X31+16]
	051 Move X19, [X31+24]
	052 Move X30, [X31+32]
	053 Move X21, [X31+40]
	054 Return 
	055 Call 0x1C17F20
	056 Move X0, 0x64D000
	057 Move X0, [X0+1320]
	058 Call 0x1C17D08
	059 Call 0x1C17F10
	060 Move X19, X0
	061 Move X0, 0x6AA000
	062 Move X0, [X0+1776]
	063 Call 0x1C17D08
	064 Move X1, X0
	065 Move X0, X19
	066 Move X2, X31
	067 Call ArgumentNullException..ctor, X0, X1
	068 Move X0, 0x6AC000
	069 Move X0, [X0+3560]
	070 Call 0x1C17D08
	071 Move X1, X0
	072 Move X0, X19
	073 Call 0x1C17DEC

