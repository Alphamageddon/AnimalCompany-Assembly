Type: UnityEngine.Rendering.Universal.Internal.DrawObjectsPass/<>c

Method: System.Void .cctor()

Disassembly:
	0x03AB11B0 B 0x3AB122C
	0x03AB11B4 B 0x3AB122C
	0x03AB11B8 B 0x3AB122C
	0x03AB11BC B 0x3AB122C
	0x03AB11C0 B 0x3AB122C
	0x03AB11C4 B 0x3AB122C
	0x03AB11C8 B 0x3AB122C
	0x03AB11CC B 0x3AB122C
	0x03AB11D0 B 0x3AB122C
	0x03AB11D4 B 0x3AB122C
	0x03AB11D8 B 0x3AB122C
	0x03AB11DC B 0x3AB122C
	0x03AB11E0 B 0x3AB122C
	0x03AB11E4 B 0x3AB122C
	0x03AB11E8 B 0x3AB122C
	0x03AB11EC B 0x3AB122C
	0x03AB11F0 B 0x3AB122C
	0x03AB11F4 B 0x3AB122C
	0x03AB11F8 B 0x3AB122C
	0x03AB11FC B 0x3AB122C
	0x03AB1200 B 0x3AB122C
	0x03AB1204 B 0x3AB122C
	0x03AB1208 B 0x3AB122C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x932000
	005 Move X20, 0x6A7000
	006 Move W8, [X19+1110]
	007 Move X20, [X20+4008]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x6A7000
	013 Move X0, [X0+4008]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+1110], W8
	017 Move X0, [X20]
	018 Call 0x1C17F10
	019 Move X1, X31
	020 Move X19, X0
	021 Call Object..ctor, X0
	022 Move X8, [X20]
	023 Move X8, [X8+184]
	024 Move [X8], X19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Return 

Method: System.Void .ctor()

Disassembly:
	0x03AB120C B 0x3AB122C
	0x03AB1210 B 0x3AB122C

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: System.Void <ExecutePass>b__16_0(UnityEngine.Rendering.ScriptableRenderContext ctx, ref UnityEngine.Rendering.Universal.RenderingData data, ref UnityEngine.Rendering.DrawingSettings ds, ref UnityEngine.Rendering.FilteringSettings fs, ref UnityEngine.Rendering.RenderStateBlock rsb)

Disassembly:
	0x03AB1214 B 0x3AB122C
	0x03AB1218 B 0x3AB122C
	0x03AB121C B 0x3AB122C
	0x03AB1220 B 0x3AB122C
	0x03AB1224 B 0x3AB122C
	0x03AB1228 B 0x3AB122C
	0x03AB122C MOV X19, X0
	0x03AB1230 CMP W1, 0x1
	0x03AB1234 B.NE 0x3AB1260
	0x03AB1238 MOV X0, X19
	0x03AB123C BL 0x3EB1AD0
	0x03AB1240 LDR X20, [X0]
	0x03AB1244 BL 0x3EB1AE0
	0x03AB1248 ADD X0, X31, 0x128
	0x03AB124C MOV X1, X31
	0x03AB1250 BL 0x39B1DB4
	0x03AB1254 CBZ X20, 0x3AB1134
	0x03AB1258 MOV X0, X20
	0x03AB125C BL 0x1C16F18
	0x03AB1260 MOV X20, X31
	0x03AB1264 B 0x3AB126C
	0x03AB1268 MOV X19, X0
	0x03AB126C ADD X0, X31, 0x128
	0x03AB1270 MOV X1, X31
	0x03AB1274 BL 0x39B1DB4
	0x03AB1278 CBNZ X20, 0x3AB1284
	0x03AB127C MOV X0, X19
	0x03AB1280 BL 0x1D2C690
	0x03AB1284 MOV X0, X20
	0x03AB1288 BL 0x1C16F18
	0x03AB128C BL 0x1990590
	0x03AB1290 STR X29, [X31 - 0x40]!
	0x03AB1294 STP X30, X23, [X31 + 0x10]
	0x03AB1298 STP X22, X21, [X31 + 0x20]
	0x03AB129C STP X20, X19, [X31 + 0x30]
	0x03AB12A0 SUB X31, X31, 0x2C0
	0x03AB12A4 LDR X23, [X2]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0x932000
	009 Move [X31+8], X1
	010 Move X23, 0x6A0000
	011 Move W8, [X24+1111]
	012 Move X23, [X23+3200]
	013 Move X19, X5
	014 Move X20, X4
	015 Move X21, X3
	016 Move X22, X2
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {26}
	021 Move X0, 0x6A0000
	022 Move X0, [X0+3200]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X24+1111], W8
	026 Move X0, [X23]
	027 Move X23, [X22+8]
	028 Move X22, [X22+16]
	029 Move W8, [X0+224]
	030 Compare W8, 0
	031 JumpIfNotEqual {33}
	032 Call 0x1C17DFC
	033 Add X0, X31, 8
	034 Move X1, X23
	035 Move X2, X22
	036 Move X3, X21
	037 Move X4, X20
	038 Move X5, X19
	039 Move X6, X31
	040 Call ScriptableRenderContext.DrawRenderers, X0, X1, X2, X3, X4
	041 Move X20, [X31+48]
	042 Move X19, [X31+56]
	043 Move X22, [X31+32]
	044 Move X21, [X31+40]
	045 Move X24, [X31+16]
	046 Move X23, [X31+24]
	047 Move X30, [X31+64]
	048 Return 

Method: System.Void <Render>b__18_0(UnityEngine.Rendering.Universal.Internal.DrawObjectsPass/PassData data, UnityEngine.Experimental.Rendering.RenderGraphModule.RenderGraphContext context)

Disassembly:
	0x03AB12A8 MOV X20, X2
	0x03AB12AC MOV X21, X0
	0x03AB12B0 ADD X0, X31, 0x8
	0x03AB12B4 MOVZ W2, 0x2B8
	0x03AB12B8 MOV W19, W3
	0x03AB12BC MOV X22, X1
	0x03AB12C0 BL 0x3EB1AC0
	0x03AB12C4 CBZ X23, 0x3AB1334
	0x03AB12C8 ADD X0, X23, 0x48
	0x03AB12CC ADD X1, X31, 0x8
	0x03AB12D0 MOVZ W2, 0x2B8
	0x03AB12D4 BL 0x3EB1AC0
	0x03AB12D8 LDR X23, [X20]
	0x03AB12DC ADD X0, X22, 0x18
	0x03AB12E0 MOV X1, X31
	0x03AB12E4 BL 0x3A93110
	0x03AB12E8 CBZ X23, 0x3AB1334
	0x03AB12EC AND W8, W0, 0x1
	0x03AB12F0 STRB W8, [X23 + 0x34]
	0x03AB12F4 LDR X8, [X21 + 0xF0]
	0x03AB12F8 CBZ X8, 0x3AB1334
	0x03AB12FC LDR W9, [X8 + 0x18]
	0x03AB1300 CMP W9, W19
	0x03AB1304 B.LS 0x3AB1338
	0x03AB1308 LDR X9, [X20]
	0x03AB130C CBZ X9, 0x3AB1334
	0x03AB1310 ADD X8, X8, W19, 0x4, SXTW
	0x03AB1314 LDR V0, [X8 + 0x2]
	0x03AB1318 STUR V0, [X9 + 0x38]
	0x03AB131C ADD X31, X31, 0x2C0
	0x03AB1320 LDP X20, X19, [X31 + 0x30]
	0x03AB1324 LDP X22, X21, [X31 + 0x20]
	0x03AB1328 LDP X30, X23, [X31 + 0x10]
	0x03AB132C LDR X29, [X31], #0x40
	0x03AB1330 RET
	0x03AB1334 BL 0x1C16F20
	0x03AB1338 BL 0x1C16F28
	0x03AB133C STP X29, X30, [X31 - 0x50]!
	0x03AB1340 STP X26, X25, [X31 + 0x10]
	0x03AB1344 STP X24, X23, [X31 + 0x20]
	0x03AB1348 STP X22, X21, [X31 + 0x30]
	0x03AB134C STP X20, X19, [X31 + 0x40]
	0x03AB1350 SUB X31, X31, 0x220
	0x03AB1354 ADRP X23, 0x931000
	0x03AB1358 LDRB W8, [X23 + 0x45E]
	0x03AB135C MOV X20, X3
	0x03AB1360 MOV X19, X2
	0x03AB1364 MOV X21, X1
	0x03AB1368 MOV X22, X0
	0x03AB136C TBNZ X8, 0x0, 0x3AB1384
	0x03AB1370 ADRP X0, 0x6A3000
	0x03AB1374 LDR X0, [X0 + 0x10]
	0x03AB1378 BL 0x1C16CF4
	0x03AB137C MOVZ W8, 0x1
	0x03AB1380 STRB W8, [X23 + 0x45E]
	0x03AB1384 ADD X1, X22, 0x18
	0x03AB1388 ADD X0, X31, 0x10
	0x03AB138C MOVZ W2, 0x210
	0x03AB1390 BL 0x3EB1AC0
	0x03AB1394 LDR X22, [X22]
	0x03AB1398 ADD X0, X31, 0x10
	0x03AB139C MOV X1, X31
	0x03AB13A0 BL 0x3A8DE34
	0x03AB13A4 LDR X8, [X31 + 0x188]
	0x03AB13A8 CBZ X8, 0x3AB1464
	0x03AB13AC LDRB W26, [X31 + 0x17C]
	0x03AB13B0 MOV W23, W0
	0x03AB13B4 MOV X0, X8
	0x03AB13B8 MOV X1, X31
	0x03AB13BC BL 0x3984C98
	0x03AB13C0 CBZ X20, 0x3AB1464
	0x03AB13C4 ADRP X25, 0x6A3000
	0x03AB13C8 MOV W24, W0
	0x03AB13CC LDR X0, [X20 + 0x18]
	0x03AB13D0 LDR X25, [X25 + 0x10]
	0x03AB13D4 CBZ X0, 0x3AB13F0
	0x03AB13D8 MOV X1, X31
	0x03AB13DC BL 0x3C1AB20
	0x03AB13E0 CMP W0, 0x1
	0x03AB13E4 B.NE 0x3AB13F0
	0x03AB13E8 ADD X8, X21, 0xC
	0x03AB13EC B 0x3AB13F4
	0x03AB13F0 ADD X8, X21, 0x8
	0x03AB13F4 LDR X0, [X25]
	0x03AB13F8 LDR W25, [X8]
	0x03AB13FC LDR X21, [X21]
	0x03AB1400 LDR W8, [X0 + 0xE0]
	0x03AB1404 CBNZ W8, 0x3AB140C
	0x03AB1408 BL 0x1C16DFC
	0x03AB140C UBFM W8, W26, 0x1F, 0x0
	0x03AB1410 ANDS W31, W23, 0x1
	0x03AB1414 MOVZ W9, 0x2
	0x03AB1418 CSEL W8, W9, W8, NE
	0x03AB141C ANDS W31, W24, 0x1
	0x03AB1420 CSEL W4, W31, W8, NE
	0x03AB1424 ADD X1, X31, 0x10
	0x03AB1428 MOV X0, X22
	0x03AB142C MOV X2, X20
	0x03AB1430 MOV X3, X19
	0x03AB1434 MOV W5, W31
	0x03AB1438 MOV X6, X21
	0x03AB143C MOV W7, W25
	0x03AB1440 STR X31, [X31]
	0x03AB1444 BL 0x3A70E0C
	0x03AB1448 ADD X31, X31, 0x220
	0x03AB144C LDP X20, X19, [X31 + 0x40]
	0x03AB1450 LDP X22, X21, [X31 + 0x30]
	0x03AB1454 LDP X24, X23, [X31 + 0x20]
	0x03AB1458 LDP X26, X25, [X31 + 0x10]
	0x03AB145C LDP X29, X30, [X31], #0x50
	0x03AB1460 RET
	0x03AB1464 BL 0x1C16F20
	0x03AB1468 SUB X31, X31, 0xA0
	0x03AB146C STP X30, X5, [X31 + 0x50]
	0x03AB1470 STP X26, X25, [X31 + 0x60]
	0x03AB1474 STP X24, X23, [X31 + 0x70]
	0x03AB1478 STP X22, X21, [X31 + 0x80]
	0x03AB147C STP X20, X19, [X31 + 0x90]
	0x03AB1480 ADRP X24, 0x931000
	0x03AB1484 LDRB W8, [X24 + 0x45F]
	0x03AB1488 MOV X22, X4
	0x03AB148C MOV X23, X3
	0x03AB1490 MOV X20, X2
	0x03AB1494 MOV X19, X1
	0x03AB1498 MOV X21, X0
	0x03AB149C TBNZ X8, 0x0, 0x3AB152C
	0x03AB14A0 ADRP X0, 0x6A7000
	0x03AB14A4 LDR X0, [X0 + 0x28]
	0x03AB14A8 BL 0x1C16CF4
	0x03AB14AC ADRP X0, 0x6A7000
	0x03AB14B0 LDR X0, [X0 + 0x30]
	0x03AB14B4 BL 0x1C16CF4
	0x03AB14B8 ADRP X0, 0x6A7000
	0x03AB14BC LDR X0, [X0 + 0x38]
	0x03AB14C0 BL 0x1C16CF4
	0x03AB14C4 ADRP X0, 0x6A3000
	0x03AB14C8 LDR X0, [X0 + 0x20]
	0x03AB14CC BL 0x1C16CF4
	0x03AB14D0 ADRP X0, 0x69F000
	0x03AB14D4 LDR X0, [X0 + 0xA88]
	0x03AB14D8 BL 0x1C16CF4
	0x03AB14DC ADRP X0, 0x6A7000
	0x03AB14E0 LDR X0, [X0 + 0x40]
	0x03AB14E4 BL 0x1C16CF4

ISIL:
	001 Subtract X31, X31, 256
	002 Move [X31+176], X30
	003 Move [X31+192], X26
	004 Move [X31+200], X25
	005 Move [X31+208], X24
	006 Move [X31+216], X23
	007 Move [X31+224], X22
	008 Move [X31+232], X21
	009 Move [X31+240], X20
	010 Move [X31+248], X19
	011 Move X21, 0x932000
	012 Move W8, [X21+1112]
	013 Move X20, X2
	014 Move X19, X1
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {33}
	019 Move X0, 0x6A7000
	020 Move X0, [X0+360]
	021 Call 0x1C17CF4
	022 Move X0, 0x6A0000
	023 Move X0, [X0+2696]
	024 Call 0x1C17CF4
	025 Move X0, 0x6A6000
	026 Move X0, [X0+2240]
	027 Call 0x1C17CF4
	028 Move X0, 0x6A5000
	029 Move X0, [X0+3528]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X21+1112], W8
	033 Compare X19, 0
	034 JumpIfEqual {175}
	035 Move X0, [X19+432]
	036 Compare X0, 0
	037 JumpIfEqual {175}
	038 Move X26, 0x6A0000
	039 Move X26, [X26+2696]
	040 Move X1, X31
	041 Add X21, X19, 32
	042 Add X22, X19, 56
	043 Call XRPass.get_enabled, X0
	044 Move TEMP, X0
	045 And TEMP, TEMP, 1
	046 Compare TEMP, 1
	047 JumpIfNotEqual {107}
	048 Move X0, [X26]
	049 Move X23, [X19+16]
	050 Move W8, [X0+224]
	051 Compare W8, 0
	052 JumpIfNotEqual {54}
	053 Call 0x1C17DFC
	054 Add X8, X31, 88
	055 Move X0, X23
	056 Move X1, X31
	057 Call TextureHandle.op_Implicit, X0
	058 NotImplemented "Instruction LDUR not yet implemented."
	059 NotImplemented "Instruction LDUR not yet implemented."
	060 Move X8, [X31+120]
	061 Move [X31+128], V0
	062 Move [X31+136], V1
	063 Move [X31+160], X8
	064 Move X8, [X19+432]
	065 Compare X8, 0
	066 JumpIfEqual {175}
	067 Move V0, [X8+48]
	068 Move V1, [X8+64]
	069 Move X8, [X8+80]
	070 Move V2, [X31+128]
	071 Move V3, [X31+144]
	072 Move X9, [X31+160]
	073 Add X0, X31, 48
	074 Add X1, X31, 0
	075 Move X2, X31
	076 Move [X31+32], X8
	077 Move [X31], V0
	078 Move [X31+8], V1
	079 Move [X31+48], V2
	080 Move [X31+56], V3
	081 Move [X31+80], X9
	082 Call RenderTargetIdentifier.op_Inequality, X0, X1
	083 Move X1, [X21]
	084 And W23, W0, 1
	085 Move X0, X22
	086 Move W2, W23
	087 Move X3, X31
	088 Call CameraData.PushBuiltinShaderConstantsXR, X0, X1, X2
	089 Move X24, [X21]
	090 Move X0, X22
	091 Move X1, X31
	092 Call CameraData.get_xrUniversal, X0
	093 Move X8, 0x6A5000
	094 Move X8, [X8+3528]
	095 Move X25, X0
	096 Move X8, [X8]
	097 Move W9, [X8+224]
	098 Compare W9, 0
	099 JumpIfNotEqual {102}
	100 Move X0, X8
	101 Call 0x1C17DFC
	102 Move X0, X24
	103 Move X1, X25
	104 Move W2, W23
	105 Move X3, X31
	106 Call XRSystemUniversal.MarkShaderProperties, X0, X1, X2
	107 Move W8, [X19+728]
	108 Compare W8, 0
	109 JumpIfNotEqual {127}
	110 Move W8, [X19+880]
	111 Compare W8, 0
	112 JumpIfNotEqual {127}
	113 Compare X20, 0
	114 JumpIfEqual {175}
	115 Move X8, 0x6A6000
	116 Move X8, [X8+2240]
	117 Move X23, [X20+24]
	118 Move X0, [X8]
	119 Move W8, [X0+224]
	120 Compare W8, 0
	121 JumpIfNotEqual {123}
	122 Call 0x1C17DFC
	123 Move X0, X23
	124 Move W1, W31
	125 Move X2, X31
	126 Call TransparentSettingsPass.ExecutePass, X0, X1
	127 Move X0, [X26]
	128 Move X23, [X19+16]
	129 Move W8, [X0+224]
	130 Compare W8, 0
	131 JumpIfNotEqual {133}
	132 Call 0x1C17DFC
	133 Move X0, X23
	134 Move X1, X31
	135 Call TextureHandle.op_Implicit, X0
	136 Move X8, [X19+24]
	137 Move X23, X0
	138 Move X1, X31
	139 Move X0, X8
	140 Call TextureHandle.op_Implicit, X0
	141 Move X2, X0
	142 Move X0, X22
	143 Move X1, X23
	144 Move X3, X31
	145 Call CameraData.IsRenderTargetProjectionMatrixFlipped, X0, X1, X2
	146 Compare X20, 0
	147 JumpIfEqual {175}
	148 Move X8, 0x6A7000
	149 Move X8, [X8+360]
	150 Move W22, W0
	151 Move X0, [X8]
	152 Move W8, [X0+224]
	153 Compare W8, 0
	154 JumpIfNotEqual {156}
	155 Call 0x1C17DFC
	156 Move X1, X19
	157 Move X2, X21
	158 Call DrawObjectsPass.CameraSetup, X0, X1, X2
	159 Move X0, [X20+16]
	160 And W3, W22, 1
	161 Move X1, X19
	162 Move X2, X21
	163 Call DrawObjectsPass.ExecutePass, X0, X1, X2, X3
	164 Move X20, [X31+240]
	165 Move X19, [X31+248]
	166 Move X22, [X31+224]
	167 Move X21, [X31+232]
	168 Move X24, [X31+208]
	169 Move X23, [X31+216]
	170 Move X26, [X31+192]
	171 Move X25, [X31+200]
	172 Move X30, [X31+176]
	173 Add X31, X31, 256
	174 Return 
	175 Call 0x1C17F20

