Type: UnityEngine.Rendering.Universal.Internal.CopyDepthPass/<>c

Method: System.Void .cctor()

Disassembly:
	0x03AADB78 MOV X20, X1
	0x03AADB7C MOV X19, X0
	0x03AADB80 TBNZ X8, 0x0, 0x3AADB98
	0x03AADB84 ADRP X0, 0x6AA000
	0x03AADB88 LDR X0, [X0 + 0x158]
	0x03AADB8C BL 0x1C16CF4
	0x03AADB90 MOVZ W8, 0x1
	0x03AADB94 STRB W8, [X21 + 0x441]
	0x03AADB98 CBZ X20, 0x3AADBD8
	0x03AADB9C ADRP X20, 0x6AA000
	0x03AADBA0 LDR X20, [X20 + 0x158]
	0x03AADBA4 STP X31, X31, [X19 + 0xE8]
	0x03AADBA8 STR X31, [X19 + 0xF8]
	0x03AADBAC LDR X0, [X20]
	0x03AADBB0 LDR W8, [X0 + 0xE0]
	0x03AADBB4 CBNZ W8, 0x3AADBC0
	0x03AADBB8 BL 0x1C16DFC
	0x03AADBBC LDR X0, [X20]
	0x03AADBC0 LDR X8, [X0 + 0xB8]
	0x03AADBC4 LDR X8, [X8]
	0x03AADBC8 STR X8, [X19 + 0xE0]
	0x03AADBCC LDP X20, X19, [X31 + 0x10]
	0x03AADBD0 LDP X30, X21, [X31], #0x20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x936000
	005 Move X20, 0x6AB000
	006 Move W8, [X19+1077]
	007 Move X20, [X20+3680]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x6AB000
	013 Move X0, [X0+3680]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+1077], W8
	017 Move X0, [X20]
	018 Call 0x1C17F10
	019 Move X1, X31
	020 Move X19, X0
	021 Call Object..ctor, X0
	022 Move X8, [X20]
	023 Move X8, [X8+184]
	024 Move [X8], X19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Return 

Method: System.Void .ctor()

Disassembly:
	0x03AADBD4 RET
	0x03AADBD8 ADRP X0, 0x64B000

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: System.Void <Render>b__27_0(UnityEngine.Rendering.Universal.Internal.CopyDepthPass/PassData data, UnityEngine.Experimental.Rendering.RenderGraphModule.RenderGraphContext context)

Disassembly:
	0x03AADBDC LDR X0, [X0 + 0x528]
	0x03AADBE0 BL 0x1C16D08
	0x03AADBE4 BL 0x1C16F10
	0x03AADBE8 MOV X19, X0
	0x03AADBEC ADRP X0, 0x6A8000
	0x03AADBF0 LDR X0, [X0 + 0x6F0]
	0x03AADBF4 BL 0x1C16D08
	0x03AADBF8 MOV X1, X0
	0x03AADBFC MOV X0, X19
	0x03AADC00 MOV X2, X31
	0x03AADC04 BL 0x330E100
	0x03AADC08 ADRP X0, 0x6AA000
	0x03AADC0C LDR X0, [X0 + 0xED0]
	0x03AADC10 BL 0x1C16D08
	0x03AADC14 MOV X1, X0
	0x03AADC18 MOV X0, X19
	0x03AADC1C BL 0x1C16DEC
	0x03AADC20 STR X29, [X31 - 0x50]!
	0x03AADC24 STP X30, X25, [X31 + 0x10]
	0x03AADC28 STP X24, X23, [X31 + 0x20]
	0x03AADC2C STP X22, X21, [X31 + 0x30]
	0x03AADC30 STP X20, X19, [X31 + 0x40]
	0x03AADC34 SUB X31, X31, 0x420
	0x03AADC38 ADRP X25, 0x935000
	0x03AADC3C LDRB W8, [X25 + 0x442]
	0x03AADC40 MOV X20, X4
	0x03AADC44 MOV X21, X3
	0x03AADC48 MOV X22, X2
	0x03AADC4C MOV X23, X1
	0x03AADC50 MOV X19, X0
	0x03AADC54 ADD X24, X31, 0x2C0
	0x03AADC58 TBNZ X8, 0x0, 0x3AADCDC
	0x03AADC5C ADRP X0, 0x6AA000
	0x03AADC60 LDR X0, [X0 + 0x158]
	0x03AADC64 BL 0x1C16CF4
	0x03AADC68 ADRP X0, 0x6AA000
	0x03AADC6C LDR X0, [X0 + 0xED8]
	0x03AADC70 BL 0x1C16CF4
	0x03AADC74 ADRP X0, 0x6AA000
	0x03AADC78 LDR X0, [X0 + 0xEE0]
	0x03AADC7C BL 0x1C16CF4
	0x03AADC80 ADRP X0, 0x6AA000
	0x03AADC84 LDR X0, [X0 + 0xEE8]
	0x03AADC88 BL 0x1C16CF4
	0x03AADC8C ADRP X0, 0x6AA000
	0x03AADC90 LDR X0, [X0 + 0xEF0]
	0x03AADC94 BL 0x1C16CF4
	0x03AADC98 ADRP X0, 0x6AA000
	0x03AADC9C LDR X0, [X0 + 0xEF8]
	0x03AADCA0 BL 0x1C16CF4
	0x03AADCA4 ADRP X0, 0x6A6000
	0x03AADCA8 LDR X0, [X0 + 0xFF8]

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+128], X30
	003 Move [X31+136], X21
	004 Move [X31+144], X20
	005 Move [X31+152], X19
	006 Move X21, 0x936000
	007 Move W8, [X21+1078]
	008 Move X19, X2
	009 Move X20, X1
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x6A4000
	015 Move X0, [X0+2696]
	016 Call 0x1C17CF4
	017 Move X0, 0x6A8000
	018 Move X0, [X0+2360]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+1078], W8
	022 Compare X19, 0
	023 JumpIfEqual {66}
	024 Compare X20, 0
	025 JumpIfEqual {66}
	026 Move X8, 0x6A4000
	027 Move X8, [X8+2696]
	028 Move X19, [X19+24]
	029 Move X20, [X20+16]
	030 Move X0, [X8]
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {35}
	034 Call 0x1C17DFC
	035 Add X8, X31, 40
	036 Move X0, X20
	037 Move X1, X31
	038 Call TextureHandle.op_Implicit, X0
	039 NotImplemented "Instruction LDUR not yet implemented."
	040 NotImplemented "Instruction LDUR not yet implemented."
	041 Move X8, [X31+72]
	042 Move [X31+80], V0
	043 Move [X31+88], V1
	044 Move [X31+112], X8
	045 Compare X19, 0
	046 JumpIfEqual {66}
	047 Move X8, 0x6A8000
	048 Move X8, [X8+2360]
	049 Move V0, [X31+80]
	050 Move V1, [X31+96]
	051 Move X9, [X31+112]
	052 Add X2, X31, 0
	053 Move X1, [X8]
	054 Move X0, X19
	055 Move X3, X31
	056 Move [X31], V0
	057 Move [X31+8], V1
	058 Move [X31+32], X9
	059 Call CommandBuffer.SetGlobalTexture, X0, X1, X2
	060 Move X20, [X31+144]
	061 Move X19, [X31+152]
	062 Move X30, [X31+128]
	063 Move X21, [X31+136]
	064 Add X31, X31, 160
	065 Return 
	066 Call 0x1C17F20

Method: System.Void <Render>b__27_1(UnityEngine.Rendering.Universal.Internal.CopyDepthPass/PassData data, UnityEngine.Experimental.Rendering.RenderGraphModule.RenderGraphContext context)

Disassembly:
	0x03AADCAC BL 0x1C16CF4
	0x03AADCB0 ADRP X0, 0x6AA000
	0x03AADCB4 LDR X0, [X0 + 0xF00]
	0x03AADCB8 BL 0x1C16CF4
	0x03AADCBC ADRP X0, 0x6A9000
	0x03AADCC0 LDR X0, [X0 + 0xFD8]
	0x03AADCC4 BL 0x1C16CF4
	0x03AADCC8 ADRP X0, 0x6AA000
	0x03AADCCC LDR X0, [X0 + 0x208]
	0x03AADCD0 BL 0x1C16CF4
	0x03AADCD4 MOVZ W8, 0x1
	0x03AADCD8 STRB W8, [X25 + 0x442]
	0x03AADCDC MOVI V0.2D, 0x0
	0x03AADCE0 STR X31, [X31 + 0x3F8]
	0x03AADCE4 STR W31, [X31 + 0x3F0]
	0x03AADCE8 STR W31, [X31 + 0x3B0]
	0x03AADCEC STP V0, V0, [X24 + 0x140]
	0x03AADCF0 STP V0, V0, [X24 + 0x110]
	0x03AADCF4 STR V0, [X24 + 0x10]
	0x03AADCF8 STP V0, V0, [X24 + 0xD0]
	0x03AADCFC STR V0, [X24 + 0xC]
	0x03AADD00 CBZ X23, 0x3AADFF8
	0x03AADD04 ADRP X8, 0x6AA000
	0x03AADD08 ADRP X9, 0x6AA000
	0x03AADD0C LDR X8, [X8 + 0xF00]
	0x03AADD10 LDR X9, [X9 + 0xEE8]
	0x03AADD14 LDR X3, [X19 + 0x38]
	0x03AADD18 ADD X2, X31, 0x3F8
	0x03AADD1C LDR X1, [X8]
	0x03AADD20 LDR X4, [X9]
	0x03AADD24 ADD X8, X31, 0x8
	0x03AADD28 MOV X0, X23
	0x03AADD2C BL 0x2240F24
	0x03AADD30 LDUR V0, [X31 + 0x8]
	0x03AADD34 LDUR V1, [X31 + 0x18]
	0x03AADD38 STP V0, V1, [X24 + 0x140]
	0x03AADD3C LDR W8, [X20 + 0x120]
	0x03AADD40 LDP V1, V0, [X20 + 0x100]
	0x03AADD44 LDR V2, [X20 + 0xF]
	0x03AADD48 STR W8, [X31 + 0x3F0]
	0x03AADD4C STP V1, V0, [X24 + 0x110]
	0x03AADD50 STR V2, [X24 + 0x10]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x936000
	007 Move W8, [X21+1079]
	008 Move X20, X2
	009 Move X19, X1
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x6A4000
	015 Move X0, [X0+2696]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+1079], W8
	019 Compare X20, 0
	020 JumpIfEqual {53}
	021 Compare X19, 0
	022 JumpIfEqual {53}
	023 Move X8, 0x6A4000
	024 Move X8, [X8+2696]
	025 Move X20, [X19+16]
	026 Move X0, [X8]
	027 Move W8, [X0+224]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X0, X20
	032 Move X1, X31
	033 Add X21, X19, 40
	034 Add X22, X19, 32
	035 Call TextureHandle.op_Implicit, X0
	036 Move X8, [X19+24]
	037 Move X20, X0
	038 Move X1, X31
	039 Move X0, X8
	040 Call TextureHandle.op_Implicit, X0
	041 Move X1, X19
	042 Move X2, X22
	043 Move X3, X21
	044 Move X4, X20
	045 Move X20, [X31+32]
	046 Move X19, [X31+40]
	047 Move X22, [X31+16]
	048 Move X21, [X31+24]
	049 Move X5, X0
	050 Move X30, [X31+48]
	051 Call CopyDepthPass.ExecutePass, X0, X1, X2, X3, X4, X5
	052 Return 
	053 Call 0x1C17F20

Method: System.Void <Render>b__27_2(UnityEngine.Rendering.Universal.Internal.CopyDepthPass/PassData data, UnityEngine.Experimental.Rendering.RenderGraphModule.RenderGraphContext context)

Disassembly:
	0x03AADD54 ADD X0, X31, 0x3C0
	0x03AADD58 MOV W1, W31
	0x03AADD5C MOV X2, X31
	0x03AADD60 BL 0x3C2240C
	0x03AADD64 MOVZ W8, 0x5E
	0x03AADD68 STR W8, [X31 + 0x3DC]
	0x03AADD6C ADD X0, X31, 0x3C0
	0x03AADD70 MOVZ W1, 0x20
	0x03AADD74 MOV X2, X31
	0x03AADD78 BL 0x3C22520
	0x03AADD7C ADRP X8, 0x6A6000
	0x03AADD80 LDR X8, [X8 + 0xFF8]
	0x03AADD84 MOVZ W9, 0x1
	0x03AADD88 STR W9, [X31 + 0x3C8]
	0x03AADD8C LDR W10, [X31 + 0x3F0]
	0x03AADD90 LDP V0, V1, [X24 + 0x100]
	0x03AADD94 LDR V2, [X24 + 0x12]
	0x03AADD98 LDR X0, [X8]
	0x03AADD9C STR W10, [X31 + 0x370]
	0x03AADDA0 STP V0, V1, [X24 + 0x80]
	0x03AADDA4 STR V2, [X24 + 0xA]
	0x03AADDA8 LDR W8, [X0 + 0xE0]
	0x03AADDAC CBNZ W8, 0x3AADDB4
	0x03AADDB0 BL 0x1C16DFC
	0x03AADDB4 ADRP X8, 0x6A9000
	0x03AADDB8 LDR X8, [X8 + 0xFD8]
	0x03AADDBC LDP V0, V1, [X24 + 0x80]
	0x03AADDC0 LDR V2, [X24 + 0xA]
	0x03AADDC4 LDR W9, [X31 + 0x370]
	0x03AADDC8 LDR X2, [X8]
	0x03AADDCC STP V0, V1, [X24 + 0x40]
	0x03AADDD0 STR V2, [X24 + 0x6]
	0x03AADDD4 STR W9, [X31 + 0x330]
	0x03AADDD8 ADD X1, X31, 0x300
	0x03AADDDC MOVZ W3, 0x1
	0x03AADDE0 MOVZ W5, 0x1
	0x03AADDE4 MOV X0, X23
	0x03AADDE8 MOV W4, W31
	0x03AADDEC MOV X6, X31
	0x03AADDF0 BL 0x3A87660
	0x03AADDF4 ADD X8, X20, 0xF0
	0x03AADDF8 STR X0, [X21]
	0x03AADDFC LDR W9, [X8 + 0x30]
	0x03AADE00 LDP V1, V0, [X8 + 0x10]
	0x03AADE04 LDR V2, [X8]
	0x03AADE08 STR W9, [X31 + 0x3B0]
	0x03AADE0C STP V1, V0, [X24 + 0xD0]
	0x03AADE10 STR V2, [X24 + 0xC]
	0x03AADE14 ADD X0, X31, 0x380

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+128], X30
	003 Move [X31+144], X20
	004 Move [X31+152], X19
	005 Move X19, 0x936000
	006 Move W8, [X19+1080]
	007 Move X20, X1
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {20}
	012 Move X0, 0x6A4000
	013 Move X0, [X0+2696]
	014 Call 0x1C17CF4
	015 Move X0, 0x6AA000
	016 Move X0, [X0+4056]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X19+1080], W8
	020 Compare X20, 0
	021 JumpIfEqual {61}
	022 Move X8, 0x6A4000
	023 Move X8, [X8+2696]
	024 Move X20, [X20+24]
	025 Move X19, [X20+32]
	026 Move X0, [X8]
	027 Move W8, [X0+224]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Add X8, X31, 40
	032 Move X0, X20
	033 Move X1, X31
	034 Call TextureHandle.op_Implicit, X0
	035 NotImplemented "Instruction LDUR not yet implemented."
	036 NotImplemented "Instruction LDUR not yet implemented."
	037 Move X8, [X31+72]
	038 Move [X31+80], V0
	039 Move [X31+88], V1
	040 Move [X31+112], X8
	041 Compare X19, 0
	042 JumpIfEqual {61}
	043 Move X8, 0x6AA000
	044 Move X8, [X8+4056]
	045 Move V0, [X31+80]
	046 Move V1, [X31+96]
	047 Move X9, [X31+112]
	048 Add X2, X31, 0
	049 Move X1, [X8]
	050 Move X0, X19
	051 Move X3, X31
	052 Move [X31], V0
	053 Move [X31+8], V1
	054 Move [X31+32], X9
	055 Call CommandBuffer.SetGlobalTexture, X0, X1, X2
	056 Move X20, [X31+144]
	057 Move X19, [X31+152]
	058 Move X30, [X31+128]
	059 Add X31, X31, 160
	060 Return 
	061 Call 0x1C17F20

