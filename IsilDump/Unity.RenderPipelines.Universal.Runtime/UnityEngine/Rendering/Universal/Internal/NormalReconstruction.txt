Type: UnityEngine.Rendering.Universal.Internal.NormalReconstruction

Method: System.Void SetupProperties(UnityEngine.Rendering.CommandBuffer cmd, in UnityEngine.Rendering.Universal.CameraData cameraData)

Disassembly:
	0x03AA91DC MOV X0, X31
	0x03AA91E0 BL 0x3C25A10
	0x03AA91E4 MOV V12.16B, V0.16B
	0x03AA91E8 MOV V0.16B, V14.16B
	0x03AA91EC MOV X0, X31
	0x03AA91F0 BL 0x3C25A10
	0x03AA91F4 MOV V14.16B, V0.16B
	0x03AA91F8 MOV V0.16B, V13.16B
	0x03AA91FC MOV X0, X31
	0x03AA9200 BL 0x3C25A10
	0x03AA9204 MOV V2.16B, V0.16B
	0x03AA9208 MOV X0, X22
	0x03AA920C MOV W1, W25
	0x03AA9210 MOV V0.16B, V12.16B
	0x03AA9214 MOV V1.16B, V14.16B
	0x03AA9218 MOV V3.16B, V11.16B
	0x03AA921C MOV X2, X31
	0x03AA9220 BL 0x3C15D80
	0x03AA9224 LDR X8, [X20]
	0x03AA9228 LDP S1, S0, [X31 + 0xCC]
	0x03AA922C LDR V3, [X31 + 0xC8]
	0x03AA9230 MOVZ W9, 0x42C80000
	0x03AA9234 LDR X8, [X8 + 0xB8]
	0x03AA9238 FMOV S2, W9
	0x03AA923C FDIV S0, S0, S2
	0x03AA9240 FDIV S1, S1, S2
	0x03AA9244 LDR W1, [X8 + 0xC]
	0x03AA9248 FDIV S2, S3, S2
	0x03AA924C FMOV S3, W31
	0x03AA9250 MOV X0, X22
	0x03AA9254 MOV X2, X31
	0x03AA9258 BL 0x3C15D80
	0x03AA925C LDR X8, [X20]
	0x03AA9260 LDP S1, S0, [X31 + 0xC0]
	0x03AA9264 LDR V3, [X31 + 0xBC]
	0x03AA9268 MOVZ W9, 0x42C80000
	0x03AA926C LDR X8, [X8 + 0xB8]
	0x03AA9270 FMOV S2, W9
	0x03AA9274 FDIV S0, S0, S2
	0x03AA9278 FDIV S1, S1, S2
	0x03AA927C LDR W1, [X8 + 0x10]
	0x03AA9280 FDIV S2, S3, S2
	0x03AA9284 FMOV S3, W31
	0x03AA9288 MOV X0, X22
	0x03AA928C MOV X2, X31
	0x03AA9290 BL 0x3C15D80
	0x03AA9294 LDR X8, [X20]
	0x03AA9298 LDP S1, S0, [X31 + 0xB4]
	0x03AA929C LDR V3, [X31 + 0xB0]
	0x03AA92A0 MOVZ W9, 0x42C80000
	0x03AA92A4 LDR X8, [X8 + 0xB8]
	0x03AA92A8 FMOV S2, W9
	0x03AA92AC FDIV S0, S0, S2
	0x03AA92B0 FDIV S1, S1, S2
	0x03AA92B4 LDR W1, [X8 + 0x14]
	0x03AA92B8 FDIV S2, S3, S2
	0x03AA92BC FMOV S3, W31
	0x03AA92C0 MOV X0, X22
	0x03AA92C4 MOV X2, X31
	0x03AA92C8 BL 0x3C15D80
	0x03AA92CC LDR X8, [X20]
	0x03AA92D0 LDR V1, [X31 + 0xDC]
	0x03AA92D4 MOVZ W9, 0x43B40000
	0x03AA92D8 FMOV S0, W9
	0x03AA92DC LDR X8, [X8 + 0xB8]
	0x03AA92E0 FDIV S0, S1, S0
	0x03AA92E4 LDP S4, S1, [X31 + 0xD4]
	0x03AA92E8 MOVZ W9, 0x42C80000
	0x03AA92EC LDR W1, [X8 + 0x18]
	0x03AA92F0 FMOV S2, W9
	0x03AA92F4 FDIV S1, S1, S2
	0x03AA92F8 FMOV S3, 1
	0x03AA92FC FDIV S2, S4, S2
	0x03AA9300 FADD S1, S1, S3
	0x03AA9304 FADD S2, S2, S3
	0x03AA9308 FMOV S3, W31
	0x03AA930C MOV X0, X22
	0x03AA9310 MOV X2, X31
	0x03AA9314 BL 0x3C15D80
	0x03AA9318 LDR X8, [X20]
	0x03AA931C LDR X8, [X8 + 0xB8]
	0x03AA9320 LDR W1, [X8 + 0x1C]
	0x03AA9324 MOV X0, X22
	0x03AA9328 MOV V0.16B, V8.16B
	0x03AA932C MOV V1.16B, V9.16B
	0x03AA9330 MOV V2.16B, V10.16B
	0x03AA9334 MOV V3.16B, V15.16B
	0x03AA9338 MOV X2, X31
	0x03AA933C BL 0x3C15D80
	0x03AA9340 LDR X8, [X20]
	0x03AA9344 LDR X8, [X8 + 0xB8]
	0x03AA9348 LDR W1, [X8 + 0x20]
	0x03AA934C LDP S1, S0, [X31 + 0x50]
	0x03AA9350 LDP S3, S2, [X31 + 0x48]
	0x03AA9354 MOV X0, X22
	0x03AA9358 MOV X2, X31
	0x03AA935C BL 0x3C15D80
	0x03AA9360 LDR X8, [X20]
	0x03AA9364 LDR X8, [X8 + 0xB8]
	0x03AA9368 LDR W1, [X8 + 0x24]
	0x03AA936C LDP S0, S1, [X31 + 0x38]
	0x03AA9370 LDP S2, S3, [X31 + 0x40]
	0x03AA9374 MOV X0, X22
	0x03AA9378 MOV X2, X31
	0x03AA937C BL 0x3C15D80
	0x03AA9380 LDR X8, [X20]
	0x03AA9384 LDR X8, [X8 + 0xB8]
	0x03AA9388 LDR W1, [X8 + 0x28]
	0x03AA938C LDP S1, S0, [X31 + 0x80]
	0x03AA9390 LDP S3, S2, [X31 + 0x78]
	0x03AA9394 MOV X0, X22
	0x03AA9398 MOV X2, X31
	0x03AA939C BL 0x3C15D80
	0x03AA93A0 LDR X8, [X20]
	0x03AA93A4 LDR X8, [X8 + 0xB8]
	0x03AA93A8 LDR W1, [X8 + 0x2C]
	0x03AA93AC LDP S1, S0, [X31 + 0x70]
	0x03AA93B0 LDP S3, S2, [X31 + 0x68]
	0x03AA93B4 MOV X0, X22
	0x03AA93B8 MOV X2, X31
	0x03AA93BC BL 0x3C15D80
	0x03AA93C0 LDR X8, [X20]
	0x03AA93C4 LDR X8, [X8 + 0xB8]
	0x03AA93C8 LDR W1, [X8 + 0x30]
	0x03AA93CC LDP S0, S1, [X31 + 0x58]
	0x03AA93D0 LDP S2, S3, [X31 + 0x60]
	0x03AA93D4 MOV X0, X22
	0x03AA93D8 MOV X2, X31
	0x03AA93DC BL 0x3C15D80
	0x03AA93E0 LDR X8, [X20]
	0x03AA93E4 LDR X8, [X8 + 0xB8]
	0x03AA93E8 LDR W1, [X8 + 0x34]
	0x03AA93EC LDP S1, S0, [X31 + 0xA8]
	0x03AA93F0 LDP S3, S2, [X31 + 0xA0]
	0x03AA93F4 MOV X0, X22
	0x03AA93F8 MOV X2, X31
	0x03AA93FC BL 0x3C15D80
	0x03AA9400 LDR X8, [X20]
	0x03AA9404 LDR X8, [X8 + 0xB8]
	0x03AA9408 LDR W1, [X8 + 0x38]
	0x03AA940C LDP S1, S0, [X31 + 0x30]
	0x03AA9410 LDP S3, S2, [X31 + 0x28]
	0x03AA9414 MOV X0, X22
	0x03AA9418 MOV X2, X31
	0x03AA941C BL 0x3C15D80
	0x03AA9420 LDR X8, [X20]
	0x03AA9424 LDR X8, [X8 + 0xB8]
	0x03AA9428 LDR W1, [X8 + 0x3C]
	0x03AA942C LDP S0, S1, [X31 + 0x18]
	0x03AA9430 LDP S2, S3, [X31 + 0x20]
	0x03AA9434 MOV X0, X22
	0x03AA9438 MOV X2, X31
	0x03AA943C BL 0x3C15D80
	0x03AA9440 CBZ X24, 0x3AA995C
	0x03AA9444 LDR X0, [X24 + 0x38]
	0x03AA9448 CBZ X0, 0x3AA9960
	0x03AA944C LDR X8, [X20]
	0x03AA9450 LDR X9, [X0]
	0x03AA9454 LDR X8, [X8 + 0xB8]
	0x03AA9458 LDR X1, [X9 + 0x220]
	0x03AA945C LDR X10, [X9 + 0x218]
	0x03AA9460 LDR W25, [X8 + 0x40]
	0x03AA9464 BLR X10
	0x03AA9468 CBZ X0, 0x3AA9964
	0x03AA946C MOV X1, X31
	0x03AA9470 BL 0x39ECEF8
	0x03AA9474 MOV X2, X0
	0x03AA9478 MOV X0, X22
	0x03AA947C MOV W1, W25
	0x03AA9480 MOV X3, X31
	0x03AA9484 BL 0x3C14C34
	0x03AA9488 LDR X0, [X24 + 0x40]
	0x03AA948C CBZ X0, 0x3AA9968
	0x03AA9490 LDR X8, [X20]
	0x03AA9494 LDR X9, [X0]
	0x03AA9498 LDR X8, [X8 + 0xB8]
	0x03AA949C LDR X1, [X9 + 0x220]
	0x03AA94A0 LDR X10, [X9 + 0x218]
	0x03AA94A4 LDR W25, [X8 + 0x44]
	0x03AA94A8 BLR X10
	0x03AA94AC CBZ X0, 0x3AA996C
	0x03AA94B0 MOV X1, X31
	0x03AA94B4 BL 0x39ECEF8
	0x03AA94B8 MOV X2, X0
	0x03AA94BC MOV X0, X22
	0x03AA94C0 MOV W1, W25
	0x03AA94C4 MOV X3, X31
	0x03AA94C8 BL 0x3C14C34
	0x03AA94CC LDR X0, [X24 + 0x48]
	0x03AA94D0 CBZ X0, 0x3AA9970
	0x03AA94D4 LDR X8, [X20]
	0x03AA94D8 LDR X9, [X0]
	0x03AA94DC LDR X8, [X8 + 0xB8]
	0x03AA94E0 LDR X1, [X9 + 0x220]
	0x03AA94E4 LDR X10, [X9 + 0x218]
	0x03AA94E8 LDR W25, [X8 + 0x48]
	0x03AA94EC BLR X10
	0x03AA94F0 CBZ X0, 0x3AA9974
	0x03AA94F4 MOV X1, X31
	0x03AA94F8 BL 0x39ECEF8
	0x03AA94FC MOV X2, X0
	0x03AA9500 MOV X0, X22
	0x03AA9504 MOV W1, W25
	0x03AA9508 MOV X3, X31
	0x03AA950C BL 0x3C14C34
	0x03AA9510 LDR X0, [X24 + 0x50]
	0x03AA9514 CBZ X0, 0x3AA9978
	0x03AA9518 LDR X8, [X20]
	0x03AA951C LDR X9, [X0]
	0x03AA9520 LDR X8, [X8 + 0xB8]

ISIL:
	001 Move [X31-80], X29
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Subtract X31, X31, 1360
	011 Move X21, 0x93A000
	012 Move W8, [X21+1046]
	013 Move X20, X1
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {24}
	019 Move X0, 0x6AD000
	020 Move X0, [X0+3088]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X21+1046], W8
	024 NotImplemented "Instruction MOVI not yet implemented."
	025 Move [X31+76], V0
	026 Move [X31+75], V0
	027 Move [X31+74], V0
	028 Move [X31+73], V0
	029 Move [X31+72], V0
	030 Move [X31+71], V0
	031 Move [X31+70], V0
	032 Move [X31+69], V0
	033 Move [X31+68], V0
	034 Move [X31+67], V0
	035 Move [X31+66], V0
	036 Move [X31+65], V0
	037 Move X0, [X20+376]
	038 Compare X0, 0
	039 JumpIfEqual {265}
	040 Move X1, X31
	041 Call XRPass.get_enabled, X0
	042 Move TEMP, X0
	043 And TEMP, TEMP, 1
	044 Compare TEMP, 1
	045 JumpIfNotEqual {54}
	046 Move X0, [X20+376]
	047 Compare X0, 0
	048 JumpIfEqual {265}
	049 Move X1, X31
	050 Call XRPass.get_singlePassEnabled, X0
	051 And W31, W0, 1
	052 Move W8, 1
	053 NotImplemented "Instruction CINC not yet implemented."
	054 Move W23, 1
	055 Move X22, 0x6AD000
	056 Move X22, [X22+3088]
	057 Move X21, X31
	058 Move W24, 32
	059 Add X0, X31, 512
	060 Move W2, 528
	061 Move X1, X20
	062 Call 0x3EB2AC0
	063 Add X8, X31, 448
	064 Add X0, X31, 512
	065 Move W1, W21
	066 Move X2, X31
	067 Call CameraData.GetViewMatrix, X0, X1
	068 Move V0, [X31+448]
	069 Move V1, [X31+464]
	070 Move V2, [X31+480]
	071 Move V3, [X31+496]
	072 Add X0, X31, 512
	073 Move W2, 528
	074 Move X1, X20
	075 Move [X31+81], V0
	076 Move [X31+82], V1
	077 Move [X31+83], V2
	078 Move [X31+84], V3
	079 Call 0x3EB2AC0
	080 Add X8, X31, 448
	081 Add X0, X31, 512
	082 Move W1, W21
	083 Move X2, X31
	084 Call CameraData.GetProjectionMatrix, X0, X1
	085 Move V0, [X31+448]
	086 Move V1, [X31+464]
	087 Move V2, [X31+480]
	088 Move V3, [X31+496]
	089 Move X0, [X22]
	090 Move [X31+77], V0
	091 Move [X31+78], V1
	092 Move [X31+79], V2
	093 Move [X31+80], V3
	094 Move W8, [X0+224]
	095 Compare W8, 0
	096 JumpIfNotEqual {99}
	097 Call 0x1C17DFC
	098 Move X0, [X22]
	099 Move X8, [X0+184]
	100 Move V0, [X31+77]
	101 Move V1, [X31+78]
	102 Move V2, [X31+79]
	103 Move V3, [X31+80]
	104 Move X25, [X8+8]
	105 Move [X31+320], V0
	106 Move [X31+328], V1
	107 Move V0, [X31+81]
	108 Move V1, [X31+82]
	109 Move [X31+352], V2
	110 Move [X31+360], V3
	111 Move V2, [X31+83]
	112 Move V3, [X31+84]
	113 Add X8, X31, 384
	114 Add X0, X31, 320
	115 Add X1, X31, 256
	116 Move X2, X31
	117 Move [X31+256], V0
	118 Move [X31+264], V1
	119 Move [X31+288], V2
	120 Move [X31+296], V3
	121 Call Matrix4x4.op_Multiply, X0, X1
	122 Move V0, [X31+384]
	123 Move V1, [X31+400]
	124 Move V2, [X31+416]
	125 Move V3, [X31+432]
	126 Move [X31+448], V0
	127 Move [X31+456], V1
	128 Move [X31+480], V2
	129 Move [X31+488], V3
	130 Compare X25, 0
	131 JumpIfEqual {265}
	132 Move V0, [X31+448]
	133 Move V1, [X31+464]
	134 Move V2, [X31+480]
	135 Move V3, [X31+496]
	136 Move [X31+192], V0
	137 Move [X31+200], V1
	138 Move [X31+224], V2
	139 Move [X31+232], V3
	140 Move W8, [X25+24]
	141 NotImplemented "Instruction CMP not yet implemented."
	142 Move V0, [X31+224]
	143 Move V1, [X31+240]
	144 Move V2, [X31+192]
	145 Move V3, [X31+208]
	146 Add X8, X25, X24
	147 Add X0, X31, 1168
	148 Move [X8+32], V0
	149 Move [X8+40], V1
	150 Move [X8], V2
	151 Move [X8+8], V3
	152 Move V0, [X31+81]
	153 Move V1, [X31+82]
	154 Move V2, [X31+83]
	155 Move V3, [X31+84]
	156 Move [X31+73], V0
	157 Move [X31+74], V1
	158 Move [X31+75], V2
	159 Move [X31+76], V3
	160 Move S0, W31
	161 Move S1, W31
	162 Move S2, W31
	163 Move S3, 1
	164 Move W1, 3
	165 Move X2, X31
	166 Call Matrix4x4.SetColumn, X0, X1, X2
	167 Move V0, [X31+77]
	168 Move V1, [X31+78]
	169 Move V2, [X31+79]
	170 Move V3, [X31+80]
	171 Add X8, X31, 384
	172 Move [X31+128], V0
	173 Move [X31+136], V1
	174 Move V0, [X31+73]
	175 Move V1, [X31+74]
	176 Move [X31+160], V2
	177 Move [X31+168], V3
	178 Move V2, [X31+75]
	179 Move V3, [X31+76]
	180 Add X0, X31, 128
	181 Add X1, X31, 64
	182 Move X2, X31
	183 Move [X31+64], V0
	184 Move [X31+72], V1
	185 Move [X31+96], V2
	186 Move [X31+104], V3
	187 Call Matrix4x4.op_Multiply, X0, X1
	188 Move V0, [X31+384]
	189 Move V1, [X31+400]
	190 Move V2, [X31+416]
	191 Move V3, [X31+432]
	192 Add X8, X31, 384
	193 Add X0, X31, 1104
	194 Move X1, X31
	195 Move [X31+69], V0
	196 Move [X31+70], V1
	197 Move [X31+71], V2
	198 Move [X31+72], V3
	199 Call Matrix4x4.get_inverse, X0
	200 Move V1, [X31+416]
	201 Move V0, [X31+432]
	202 Move V3, [X31+384]
	203 Move V2, [X31+400]
	204 Move X8, [X22]
	205 Move [X31+68], V0
	206 Move [X31+67], V1
	207 Move [X31+66], V2
	208 Move [X31+65], V3
	209 Move X8, [X8+184]
	210 Move X8, [X8+8]
	211 Move [X31+384], V3
	212 Move [X31+392], V2
	213 Move [X31+416], V1
	214 Move [X31+424], V0
	215 Compare X8, 0
	216 JumpIfEqual {265}
	217 Move V0, [X31+384]
	218 Move V1, [X31+400]
	219 Move V2, [X31+416]
	220 Move V3, [X31+432]
	221 Move [X31], V0
	222 Move [X31+8], V1
	223 Move [X31+32], V2
	224 Move [X31+40], V3
	225 Move W9, [X8+24]
	226 NotImplemented "Instruction CMP not yet implemented."
	227 Move V0, [X31+32]
	228 Move V1, [X31+48]
	229 Move V2, [X31]
	230 Move V3, [X31+16]
	231 Add X21, X21, 1
	232 Add X8, X8, X24
	233 NotImplemented "Instruction CMP not yet implemented."
	234 Add X24, X24, 64
	235 Move [X8+32], V0
	236 Move [X8+40], V1
	237 Move [X8], V2
	238 Move [X8+8], V3
	239 Move X0, [X22]
	240 Move W8, [X0+224]
	241 Compare W8, 0
	242 JumpIfNotEqual {245}
	243 Call 0x1C17DFC
	244 Move X0, [X22]
	245 Compare X19, 0
	246 JumpIfEqual {265}
	247 Move X8, [X0+184]
	248 Move X0, X19
	249 Move X3, X31
	250 Move X2, [X8+8]
	251 Move W1, [X8]
	252 Call CommandBuffer.SetGlobalMatrixArray, X0, X1, X2
	253 Add X31, X31, 1360
	254 Move X20, [X31+64]
	255 Move X19, [X31+72]
	256 Move X22, [X31+48]
	257 Move X21, [X31+56]
	258 Move X24, [X31+32]
	259 Move X23, [X31+40]
	260 Move X30, [X31+16]
	261 Move X25, [X31+24]
	262 Move X29, [X31+80]
	263 Return 
	264 Call 0x1C17F28
	265 Call 0x1C17F20

Method: System.Void .cctor()

Disassembly:
	0x03AA9524 LDR X1, [X9 + 0x220]
	0x03AA9528 LDR X10, [X9 + 0x218]
	0x03AA952C LDR W25, [X8 + 0x4C]
	0x03AA9530 BLR X10
	0x03AA9534 CBZ X0, 0x3AA997C
	0x03AA9538 MOV X1, X31
	0x03AA953C BL 0x39ECEF8
	0x03AA9540 MOV X2, X0
	0x03AA9544 MOV X0, X22
	0x03AA9548 MOV W1, W25
	0x03AA954C MOV X3, X31
	0x03AA9550 BL 0x3C14C34
	0x03AA9554 LDR X0, [X24 + 0x58]
	0x03AA9558 CBZ X0, 0x3AA9980
	0x03AA955C LDR X8, [X20]
	0x03AA9560 LDR X9, [X0]
	0x03AA9564 LDR X8, [X8 + 0xB8]
	0x03AA9568 LDR X1, [X9 + 0x220]
	0x03AA956C LDR X10, [X9 + 0x218]
	0x03AA9570 LDR W25, [X8 + 0x50]
	0x03AA9574 BLR X10
	0x03AA9578 CBZ X0, 0x3AA9984
	0x03AA957C MOV X1, X31
	0x03AA9580 BL 0x39ECEF8
	0x03AA9584 MOV X2, X0
	0x03AA9588 MOV X0, X22
	0x03AA958C MOV W1, W25
	0x03AA9590 MOV X3, X31
	0x03AA9594 BL 0x3C14C34
	0x03AA9598 LDR X0, [X24 + 0x60]
	0x03AA959C CBZ X0, 0x3AA9988
	0x03AA95A0 LDR X8, [X20]
	0x03AA95A4 LDR X9, [X0]
	0x03AA95A8 LDR X8, [X8 + 0xB8]
	0x03AA95AC LDR X1, [X9 + 0x220]
	0x03AA95B0 LDR X10, [X9 + 0x218]
	0x03AA95B4 LDR W25, [X8 + 0x54]
	0x03AA95B8 BLR X10
	0x03AA95BC CBZ X0, 0x3AA998C

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x93A000
	007 Move X22, 0x6AF000
	008 Move X19, 0x6AD000
	009 Move X20, 0x64F000
	010 Move W8, [X21+1047]
	011 Move X22, [X22+3136]
	012 Move X19, [X19+3088]
	013 Move X20, [X20+2440]
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {29}
	018 Move X0, 0x64F000
	019 Move X0, [X0+2440]
	020 Call 0x1C17CF4
	021 Move X0, 0x6AD000
	022 Move X0, [X0+3088]
	023 Call 0x1C17CF4
	024 Move X0, 0x6AF000
	025 Move X0, [X0+3136]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X21+1047], W8
	029 Move X0, [X22]
	030 Move X1, X31
	031 Call Shader.PropertyToID, X0
	032 Move X8, [X19]
	033 Move W1, 2
	034 Move X8, [X8+184]
	035 Move [X8], W0
	036 Move X0, [X20]
	037 Call 0x1C17D6C
	038 Move X8, [X19]
	039 Move X20, [X31+32]
	040 Move X19, [X31+40]
	041 Move X22, [X31+16]
	042 Move X21, [X31+24]
	043 Move X8, [X8+184]
	044 Move [X8+8], X0
	045 Move X30, [X31+48]
	046 Return 

