Type: UnityEngine.Rendering.Universal.Internal.MainLightShadowCasterPass/<>c

Method: System.Void .cctor()

Disassembly:
	0x03AB6644 ADD X31, X31, 0x90
	0x03AB6648 RET
	0x03AB664C SUB X31, X31, 0x80
	0x03AB6650 STP D15, D14, [X31 + 0x20]
	0x03AB6654 STP D13, D12, [X31 + 0x30]
	0x03AB6658 STP D11, D10, [X31 + 0x40]
	0x03AB665C STP D9, D8, [X31 + 0x50]
	0x03AB6660 STP X30, X21, [X31 + 0x60]
	0x03AB6664 STP X20, X19, [X31 + 0x70]
	0x03AB6668 ADRP X21, 0x92C000
	0x03AB666C ADRP X20, 0x69E000
	0x03AB6670 LDRB W8, [X21 + 0x482]
	0x03AB6674 LDR X20, [X20 + 0x9C8]
	0x03AB6678 MOV X19, X0
	0x03AB667C MOV V12.16B, V7.16B
	0x03AB6680 MOV V13.16B, V6.16B
	0x03AB6684 MOV V11.16B, V5.16B
	0x03AB6688 MOV V10.16B, V4.16B
	0x03AB668C MOV V14.16B, V3.16B
	0x03AB6690 MOV V15.16B, V2.16B
	0x03AB6694 MOV V8.16B, V1.16B
	0x03AB6698 MOV V9.16B, V0.16B
	0x03AB669C TBNZ X8, 0x0, 0x3AB66B4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x92D000
	005 Move X20, 0x6A3000
	006 Move W8, [X19+1140]
	007 Move X20, [X20+432]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x6A3000
	013 Move X0, [X0+432]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+1140], W8
	017 Move X0, [X20]
	018 Call 0x1C17F10
	019 Move X1, X31
	020 Move X19, X0
	021 Call Object..ctor, X0
	022 Move X8, [X20]
	023 Move X8, [X8+184]
	024 Move [X8], X19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Return 

Method: System.Void .ctor()

Disassembly:
	0x03AB66A0 ADRP X0, 0x69E000
	0x03AB66A4 LDR X0, [X0 + 0x9C8]

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: System.Void <Render>b__33_0(UnityEngine.Rendering.Universal.Internal.MainLightShadowCasterPass/PassData data, UnityEngine.Experimental.Rendering.RenderGraphModule.RenderGraphContext context)

Disassembly:
	0x03AB66A8 BL 0x1C16CF4
	0x03AB66AC MOVZ W8, 0x1
	0x03AB66B0 STRB W8, [X21 + 0x482]
	0x03AB66B4 LDR X0, [X20]
	0x03AB66B8 FSUB D1, D15, D9
	0x03AB66BC FSUB D0, D14, D8
	0x03AB66C0 FSUB D13, D13, D10
	0x03AB66C4 LDR W8, [X0 + 0xE0]
	0x03AB66C8 FSUB D12, D12, D11
	0x03AB66CC MOV V15.16B, V8.16B
	0x03AB66D0 FMUL D8, D1, D12
	0x03AB66D4 FMUL D14, D0, D13
	0x03AB66D8 STR D9, [X31 + 0x18]
	0x03AB66DC FABD D9, D8, D8
	0x03AB66E0 STP D1, D0, [X31 + 0x8]

ISIL:
	001 Move [X31-16], X30
	002 Compare X1, 0
	003 JumpIfEqual {20}
	004 Move W8, [X1+740]
	005 Compare W8, 0
	006 JumpIfEqual {9}
	007 Move X30, [X31+16]
	008 Return 
	009 Compare X2, 0
	010 JumpIfEqual {20}
	011 Move X0, [X1+16]
	012 Compare X0, 0
	013 JumpIfEqual {20}
	014 Add X8, X1, 40
	015 Add X1, X2, 16
	016 Move X2, X8
	017 Move X30, [X31+16]
	018 Call MainLightShadowCasterPass.RenderMainLightCascadeShadowmap, X0, X1, X2
	019 Return 
	020 Call 0x1C17F20

Method: System.Void <Render>b__33_1(UnityEngine.Rendering.Universal.Internal.MainLightShadowCasterPass/PassData data, UnityEngine.Experimental.Rendering.RenderGraphModule.RenderGraphContext context)

Disassembly:
	0x03AB66E4 CBNZ W8, 0x3AB66F0
	0x03AB66E8 BL 0x1C16DFC
	0x03AB66EC LDR X0, [X20]
	0x03AB66F0 LDR X8, [X0 + 0xB8]
	0x03AB66F4 LDR V0, [X8]
	0x03AB66F8 FCMP D0, D9
	0x03AB66FC B.GT 0x3AB676C
	0x03AB6700 LDR V9, [X31 + 0x18]
	0x03AB6704 FSUB D2, D11, D15
	0x03AB6708 LDR W8, [X0 + 0xE0]
	0x03AB670C FMUL D2, D2, D13
	0x03AB6710 FSUB D3, D10, D9
	0x03AB6714 FMUL D3, D3, D12
	0x03AB6718 FSUB D1, D8, D14
	0x03AB671C FSUB D2, D3, D2
	0x03AB6720 FDIV D10, D2, D1
	0x03AB6724 CBNZ W8, 0x3AB6738
	0x03AB6728 BL 0x1C16DFC
	0x03AB672C LDR X0, [X20]
	0x03AB6730 LDR X8, [X0 + 0xB8]
	0x03AB6734 LDR V0, [X8]
	0x03AB6738 FNEG D1, D0
	0x03AB673C FCMP D10, D1
	0x03AB6740 B.LT 0x3AB676C
	0x03AB6744 LDR W8, [X0 + 0xE0]
	0x03AB6748 CBNZ W8, 0x3AB675C
	0x03AB674C BL 0x1C16DFC
	0x03AB6750 LDR X8, [X20]
	0x03AB6754 LDR X8, [X8 + 0xB8]
	0x03AB6758 LDR V0, [X8]
	0x03AB675C FMOV D1, 1
	0x03AB6760 FADD D0, D0, D1
	0x03AB6764 FCMP D10, D0
	0x03AB6768 B.LS 0x3AB6790
	0x03AB676C MOV W0, W31
	0x03AB6770 LDP X20, X19, [X31 + 0x70]
	0x03AB6774 LDP X30, X21, [X31 + 0x60]
	0x03AB6778 LDP D9, D8, [X31 + 0x50]
	0x03AB677C LDP D11, D10, [X31 + 0x40]
	0x03AB6780 LDP D13, D12, [X31 + 0x30]
	0x03AB6784 LDP D15, D14, [X31 + 0x20]
	0x03AB6788 ADD X31, X31, 0x80
	0x03AB678C RET
	0x03AB6790 LDP D0, D1, [X31 + 0x8]
	0x03AB6794 MOVZ W0, 0x1
	0x03AB6798 FMUL D0, D0, D10
	0x03AB679C FMUL D1, D1, D10
	0x03AB67A0 FADD D0, D9, D0
	0x03AB67A4 FADD D1, D15, D1
	0x03AB67A8 STP D0, D1, [X19]
	0x03AB67AC B 0x3AB6770
	0x03AB67B0 SUB X31, X31, 0x1C0
	0x03AB67B4 STP D15, D14, [X31 + 0x120]
	0x03AB67B8 STP D13, D12, [X31 + 0x130]
	0x03AB67BC STP D11, D10, [X31 + 0x140]
	0x03AB67C0 STP D9, D8, [X31 + 0x150]
	0x03AB67C4 STP X29, X30, [X31 + 0x160]
	0x03AB67C8 STP X28, X27, [X31 + 0x170]
	0x03AB67CC STP X26, X25, [X31 + 0x180]
	0x03AB67D0 STP X24, X23, [X31 + 0x190]
	0x03AB67D4 STP X22, X21, [X31 + 0x1A0]
	0x03AB67D8 STP X20, X19, [X31 + 0x1B0]

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+128], X30
	003 Move [X31+136], X21
	004 Move [X31+144], X20
	005 Move [X31+152], X19
	006 Move X21, 0x92D000
	007 Move W8, [X21+1141]
	008 Move X20, X2
	009 Move X19, X1
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x69B000
	015 Move X0, [X0+2696]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+1141], W8
	019 Compare X19, 0
	020 JumpIfEqual {79}
	021 Move W8, [X19+740]
	022 Compare W8, 0
	023 JumpIfEqual {40}
	024 Compare X20, 0
	025 JumpIfEqual {79}
	026 Move X8, [X19+16]
	027 Compare X8, 0
	028 JumpIfEqual {79}
	029 Add X2, X19, 40
	030 Add X1, X20, 16
	031 Call MainLightShadowCasterPass.SetEmptyMainLightCascadeShadowmap, X0, X1, X2
	032 Move X8, [X19+24]
	033 Compare X8, 0
	034 JumpIfEqual {79}
	035 Move X8, [X8+64]
	036 Compare X8, 0
	037 JumpIfEqual {79}
	038 Move X21, [X8+120]
	039 Move [X19+32], X21
	040 Move X21, [X19+32]
	041 Move X8, 0x69B000
	042 Move X8, [X8+2696]
	043 Move X20, [X19+40]
	044 Move W19, [X19+736]
	045 Move X0, [X8]
	046 Move W8, [X0+224]
	047 Compare W8, 0
	048 JumpIfNotEqual {50}
	049 Call 0x1C17DFC
	050 Add X8, X31, 40
	051 Move X0, X21
	052 Move X1, X31
	053 Call TextureHandle.op_Implicit, X0
	054 NotImplemented "Instruction LDUR not yet implemented."
	055 NotImplemented "Instruction LDUR not yet implemented."
	056 Move X8, [X31+72]
	057 Move [X31+80], V0
	058 Move [X31+88], V1
	059 Move [X31+112], X8
	060 Compare X20, 0
	061 JumpIfEqual {79}
	062 Move V0, [X31+80]
	063 Move V1, [X31+96]
	064 Move X8, [X31+112]
	065 Add X2, X31, 0
	066 Move X0, X20
	067 Move W1, W19
	068 Move X3, X31
	069 Move [X31], V0
	070 Move [X31+8], V1
	071 Move [X31+32], X8
	072 Call CommandBuffer.SetGlobalTexture, X0, X1, X2
	073 Move X20, [X31+144]
	074 Move X19, [X31+152]
	075 Move X30, [X31+128]
	076 Move X21, [X31+136]
	077 Add X31, X31, 160
	078 Return 
	079 Call 0x1C17F20

