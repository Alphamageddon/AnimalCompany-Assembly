Type: UnityEngine.Rendering.Universal.Internal.CopyDepthPass

Method: UnityEngine.Rendering.RTHandle get_source()

Disassembly:
	0x03AAC8C8 MOV X1, X24
	0x03AAC8CC MOV X3, X31

ISIL:
	001 Move X0, [X0+224]
	002 Return X0

Method: System.Void set_source(UnityEngine.Rendering.RTHandle value)

Disassembly:
	0x03AAC8D0 BL 0x25C78AC
	0x03AAC8D4 LDR X8, [X27]

ISIL:
	001 Move [X0+224], X1
	002 Return 

Method: UnityEngine.Rendering.RTHandle get_destination()

Disassembly:
	0x03AAC8D8 LDR X8, [X8 + 0xB8]
	0x03AAC8DC STR X23, [X8 + 0x10]

ISIL:
	001 Move X0, [X0+232]
	002 Return X0

Method: System.Void set_destination(UnityEngine.Rendering.RTHandle value)

Disassembly:
	0x03AAC8E0 LDR X2, [X26]
	0x03AAC8E4 ADD X0, X31, 0xE0

ISIL:
	001 Move [X0+232], X1
	002 Return 

Method: System.Int32 get_MssaSamples()

Disassembly:
	0x03AAC8E8 MOV X1, X23
	0x03AAC8EC BL 0x224107C

ISIL:
	001 Move W0, [X0+240]
	002 Return X0

Method: System.Void set_MssaSamples(System.Int32 value)

Disassembly:
	0x03AAC8F0 ADD X0, X31, 0xE0
	0x03AAC8F4 MOV X1, X31

ISIL:
	001 Move [X0+240], W1
	002 Return 

Method: System.Boolean get_CopyToDepth()

Disassembly:
	0x03AAC8F8 BL 0x39972C0
	0x03AAC8FC ADRP X8, 0x6AB000

ISIL:
	001 Move W0, [X0+244]
	002 Return X0

Method: System.Void set_CopyToDepth(System.Boolean value)

Disassembly:
	0x03AAC900 LDR X8, [X8 + 0xE68]
	0x03AAC904 LDR X3, [X22 + 0x38]
	0x03AAC908 LDR X4, [X28]

ISIL:
	001 And W8, W1, 1
	002 Move [X0+244], W8
	003 Return 

Method: System.Void .ctor(UnityEngine.Rendering.Universal.RenderPassEvent evt, UnityEngine.Material copyDepthMaterial, System.Boolean shouldClear = False, System.Boolean copyToDepth = False, System.Boolean copyResolvedDepth = False)

Disassembly:
	0x03AAC90C ADD X2, X31, 0x78
	0x03AAC910 LDR X1, [X8]
	0x03AAC914 ADD X8, X31, 0x40
	0x03AAC918 MOV X0, X21
	0x03AAC91C BL 0x2240F24
	0x03AAC920 LDP V0, V1, [X31 + 0x40]
	0x03AAC924 LDR X21, [X31 + 0x78]
	0x03AAC928 STP V0, V1, [X31 + 0x80]
	0x03AAC92C CBZ X21, 0x3AACA18
	0x03AAC930 LDR X8, [X20]
	0x03AAC934 STR X8, [X21 + 0x20]
	0x03AAC938 ADD X0, X31, 0x80
	0x03AAC93C MOV X1, X19
	0x03AAC940 MOV W2, W31
	0x03AAC944 MOV X3, X31
	0x03AAC948 BL 0x3996828
	0x03AAC94C STR X0, [X21 + 0x18]
	0x03AAC950 ADD X0, X31, 0x80
	0x03AAC954 MOV W1, W31
	0x03AAC958 MOV X2, X31
	0x03AAC95C BL 0x398E404
	0x03AAC960 LDR X8, [X27]
	0x03AAC964 LDR W9, [X8 + 0xE0]
	0x03AAC968 CBNZ W9, 0x3AAC978
	0x03AAC96C MOV X0, X8
	0x03AAC970 BL 0x1C16DFC
	0x03AAC974 LDR X8, [X27]
	0x03AAC978 LDR X9, [X8 + 0xB8]
	0x03AAC97C LDR X19, [X9 + 0x18]
	0x03AAC980 CBNZ X19, 0x3AAC9D8
	0x03AAC984 LDR W9, [X8 + 0xE0]
	0x03AAC988 CBNZ W9, 0x3AAC998
	0x03AAC98C MOV X0, X8
	0x03AAC990 BL 0x1C16DFC
	0x03AAC994 LDR X8, [X27]
	0x03AAC998 ADRP X9, 0x6AB000
	0x03AAC99C LDR X8, [X8 + 0xB8]
	0x03AAC9A0 LDR X9, [X9 + 0xE30]
	0x03AAC9A4 LDR X20, [X8]
	0x03AAC9A8 LDR X0, [X9]
	0x03AAC9AC BL 0x1C16F10
	0x03AAC9B0 ADRP X8, 0x6AB000
	0x03AAC9B4 LDR X8, [X8 + 0xE58]
	0x03AAC9B8 MOV X19, X0
	0x03AAC9BC LDR X2, [X8]
	0x03AAC9C0 MOV X1, X20
	0x03AAC9C4 MOV X3, X31
	0x03AAC9C8 BL 0x25C78AC
	0x03AAC9CC LDR X8, [X27]
	0x03AAC9D0 LDR X8, [X8 + 0xB8]
	0x03AAC9D4 STR X19, [X8 + 0x18]
	0x03AAC9D8 LDR X2, [X26]
	0x03AAC9DC ADD X0, X31, 0x80
	0x03AAC9E0 MOV X1, X19
	0x03AAC9E4 BL 0x224107C
	0x03AAC9E8 ADD X0, X31, 0x80
	0x03AAC9EC MOV X1, X31
	0x03AAC9F0 BL 0x39972C0
	0x03AAC9F4 LDP X20, X19, [X31 + 0x180]
	0x03AAC9F8 LDP X22, X21, [X31 + 0x170]
	0x03AAC9FC LDP X24, X23, [X31 + 0x160]
	0x03AACA00 LDP X26, X25, [X31 + 0x150]
	0x03AACA04 LDP X28, X27, [X31 + 0x140]
	0x03AACA08 LDP X29, X30, [X31 + 0x130]
	0x03AACA0C ADD X31, X31, 0x190
	0x03AACA10 RET
	0x03AACA14 BL 0x1C16F20
	0x03AACA18 BL 0x1C16F20
	0x03AACA1C BL 0x1C16F20
	0x03AACA20 BL 0x1C16F20
	0x03AACA24 BL 0x1C16F20
	0x03AACA28 B 0x3AACABC

ISIL:
	001 Move [X31-96], X30
	002 Move [X31+16], X28
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X26, 0x937000
	013 Move X25, 0x6A8000
	014 Move W8, [X26+1071]
	015 Move X25, [X25+4080]
	016 Move W23, W5
	017 Move W22, W4
	018 Move W24, W3
	019 Move X21, X2
	020 Move W20, W1
	021 Move X19, X0
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {40}
	026 Move X0, 0x6AC000
	027 Move X0, [X0+3568]
	028 Call 0x1C17CF4
	029 Move X0, 0x6A5000
	030 Move X0, [X0+1432]
	031 Call 0x1C17CF4
	032 Move X0, 0x6A8000
	033 Move X0, [X0+4080]
	034 Call 0x1C17CF4
	035 Move X0, 0x6AC000
	036 Move X0, [X0+3576]
	037 Call 0x1C17CF4
	038 Move W8, 1
	039 Move [X26+1071], W8
	040 Move X0, [X25]
	041 Move X27, 0x6A5000
	042 Move X26, 0x6AC000
	043 Move X25, 0x6AC000
	044 Move W8, [X0+224]
	045 Move X27, [X27+1432]
	046 Move X26, [X26+3576]
	047 Move X25, [X25+3568]
	048 Compare W8, 0
	049 JumpIfNotEqual {51}
	050 Call 0x1C17DFC
	051 Move X0, X19
	052 Move X1, X31
	053 And W24, W24, 1
	054 And W28, W23, 1
	055 Call ScriptableRenderPass..ctor, X0
	056 Move X0, [X27]
	057 Call 0x1C17F10
	058 Move X1, [X26]
	059 Move X2, X31
	060 Move X23, X0
	061 Call ProfilingSampler..ctor, X0, X1
	062 Move [X19+56], X23
	063 Move X0, [X25]
	064 Call 0x1C17F10
	065 Move X1, X31
	066 Move X23, X0
	067 Call Object..ctor, X0
	068 And W8, W22, 1
	069 Move [X19+264], X23
	070 Move [X19+248], X21
	071 Move [X19+16], W20
	072 Move [X19+256], W28
	073 Move [X19+244], W8
	074 Move [X19+257], W24
	075 Move X20, [X31+80]
	076 Move X19, [X31+88]
	077 Move X22, [X31+64]
	078 Move X21, [X31+72]
	079 Move X24, [X31+48]
	080 Move X23, [X31+56]
	081 Move X26, [X31+32]
	082 Move X25, [X31+40]
	083 Move X28, [X31+16]
	084 Move X27, [X31+24]
	085 Move X30, [X31+96]
	086 Return 

Method: System.Void Setup(UnityEngine.Rendering.RTHandle source, UnityEngine.Rendering.RTHandle destination)

Disassembly:
	0x03AACA34 B 0x3AACB14
	0x03AACA38 B 0x3AACABC
	0x03AACA3C B 0x3AACABC
	0x03AACA40 B 0x3AACABC

ISIL:
	001 Move TEMP, 0
	002 Not TEMP
	003 Move W8, TEMP
	004 Move [X0+224], X1
	005 Move [X0+232], X2
	006 Move [X0+240], W8
	007 Return 

Method: System.Void OnCameraSetup(UnityEngine.Rendering.CommandBuffer cmd, ref UnityEngine.Rendering.Universal.RenderingData renderingData)

Disassembly:
	0x03AACA44 B 0x3AACABC
	0x03AACA48 B 0x3AACA60
	0x03AACA4C B 0x3AACA60
	0x03AACA50 B 0x3AACB14
	0x03AACA54 B 0x3AACABC
	0x03AACA58 B 0x3AACA60
	0x03AACA5C B 0x3AACB14
	0x03AACA60 MOV X24, X0
	0x03AACA64 CMP W1, 0x1
	0x03AACA68 B.NE 0x3AACA94
	0x03AACA6C MOV X0, X24
	0x03AACA70 BL 0x3EB1AD0
	0x03AACA74 LDR X19, [X0]
	0x03AACA78 BL 0x3EB1AE0
	0x03AACA7C ADD X0, X31, 0x80
	0x03AACA80 MOV X1, X31
	0x03AACA84 BL 0x39972C0
	0x03AACA88 CBZ X19, 0x3AAC9F4
	0x03AACA8C MOV X0, X19
	0x03AACA90 BL 0x1C16F18
	0x03AACA94 MOV X19, X31
	0x03AACA98 B 0x3AACAA0
	0x03AACA9C MOV X24, X0
	0x03AACAA0 ADD X0, X31, 0x80
	0x03AACAA4 MOV X1, X31
	0x03AACAA8 BL 0x39972C0
	0x03AACAAC CBZ X19, 0x3AACB64
	0x03AACAB0 MOV X0, X19
	0x03AACAB4 BL 0x1C16F18
	0x03AACAB8 B 0x3AACABC
	0x03AACABC MOV X24, X0
	0x03AACAC0 CMP W1, 0x1
	0x03AACAC4 B.NE 0x3AACAF0
	0x03AACAC8 MOV X0, X24
	0x03AACACC BL 0x3EB1AD0
	0x03AACAD0 LDR X23, [X0]
	0x03AACAD4 BL 0x3EB1AE0
	0x03AACAD8 ADD X0, X31, 0xE0
	0x03AACADC MOV X1, X31
	0x03AACAE0 BL 0x39972C0
	0x03AACAE4 CBZ X23, 0x3AAC8FC
	0x03AACAE8 MOV X0, X23
	0x03AACAEC BL 0x1C16F18
	0x03AACAF0 MOV X23, X31
	0x03AACAF4 B 0x3AACAFC
	0x03AACAF8 MOV X24, X0
	0x03AACAFC ADD X0, X31, 0xE0
	0x03AACB00 MOV X1, X31
	0x03AACB04 BL 0x39972C0
	0x03AACB08 CBZ X23, 0x3AACB64
	0x03AACB0C MOV X0, X23
	0x03AACB10 BL 0x1C16F18
	0x03AACB14 MOV X24, X0
	0x03AACB18 CMP W1, 0x1
	0x03AACB1C B.NE 0x3AACB48
	0x03AACB20 MOV X0, X24
	0x03AACB24 BL 0x3EB1AD0
	0x03AACB28 LDR X25, [X0]
	0x03AACB2C BL 0x3EB1AE0
	0x03AACB30 ADD X0, X31, 0x110
	0x03AACB34 MOV X1, X31
	0x03AACB38 BL 0x39972C0
	0x03AACB3C CBZ X25, 0x3AAC700
	0x03AACB40 MOV X0, X25
	0x03AACB44 BL 0x1C16F18
	0x03AACB48 MOV X25, X31

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+64], X30
	003 Move [X31+72], X21
	004 Move [X31+80], X20
	005 Move [X31+88], X19
	006 Move X21, 0x937000
	007 Move W8, [X21+1072]
	008 Move X20, X2
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x648000
	015 Move X0, [X0+1432]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+1072], W8
	019 Move W8, [X20+288]
	020 Move V1, [X20+256]
	021 Move V0, [X20+272]
	022 Move V2, [X20+15]
	023 Move [X31+48], W8
	024 Move [X31+16], V1
	025 Move [X31+24], V0
	026 Move [X31], V2
	027 Move X8, [X19+232]
	028 Compare X8, 0
	029 JumpIfEqual {83}
	030 Move X9, 0x648000
	031 Move X9, [X9+1432]
	032 Move X20, [X8+24]
	033 Move X0, [X9]
	034 Move W9, [X0+224]
	035 Compare W9, 0
	036 JumpIfNotEqual {38}
	037 Call 0x1C17DFC
	038 Move X0, X20
	039 Move X1, X31
	040 Call Object.op_Implicit, X0
	041 Move TEMP, X0
	042 And TEMP, TEMP, 1
	043 Compare TEMP, 1
	044 JumpIfNotEqual {55}
	045 Move X8, [X19+232]
	046 Compare X8, 0
	047 JumpIfEqual {83}
	048 Move X0, [X8+24]
	049 Compare X0, 0
	050 JumpIfEqual {83}
	051 Move X1, X31
	052 Call RenderTexture.get_graphicsFormat, X0
	053 Compare W0, 0
	054 JumpIfEqual {82}
	055 Move W1, 49
	056 Add X0, X31, 0
	057 Move X2, X31
	058 Call RenderTextureDescriptor.set_graphicsFormat, X0, X1
	059 Move W8, 1
	060 Move [X31+8], W8
	061 Move X1, [X19+232]
	062 Move X0, X19
	063 Move X2, X31
	064 Call ScriptableRenderPass.ConfigureTarget, X0, X1
	065 Move W8, [X19+257]
	066 Compare W8, 0
	067 JumpIfEqual {76}
	068 Move S0, W31
	069 Move S1, W31
	070 Move S2, W31
	071 Move S3, 1
	072 Move W1, 7
	073 Move X0, X19
	074 Move X2, X31
	075 Call ScriptableRenderPass.ConfigureClear, X0, X1, X2
	076 Move X20, [X31+80]
	077 Move X19, [X31+88]
	078 Move X30, [X31+64]
	079 Move X21, [X31+72]
	080 Add X31, X31, 96
	081 Return 
	082 Move W1, 94
	083 Call 0x1C17F20

Method: System.Void Execute(UnityEngine.Rendering.ScriptableRenderContext context, ref UnityEngine.Rendering.Universal.RenderingData renderingData)

Disassembly:
	0x03AACB4C B 0x3AACB54
	0x03AACB50 MOV X24, X0
	0x03AACB54 ADD X0, X31, 0x110
	0x03AACB58 MOV X1, X31
	0x03AACB5C BL 0x39972C0
	0x03AACB60 CBNZ X25, 0x3AACB6C
	0x03AACB64 MOV X0, X24
	0x03AACB68 BL 0x1D2C690
	0x03AACB6C MOV X0, X25
	0x03AACB70 BL 0x1C16F18
	0x03AACB74 BL 0x1990590
	0x03AACB78 STR X30, [X31 - 0x20]!
	0x03AACB7C STP X20, X19, [X31 + 0x10]
	0x03AACB80 ADRP X19, 0x936000
	0x03AACB84 ADRP X20, 0x6AB000
	0x03AACB88 LDRB W8, [X19 + 0x435]
	0x03AACB8C LDR X20, [X20 + 0xE60]
	0x03AACB90 TBNZ X8, 0x0, 0x3AACBA8
	0x03AACB94 ADRP X0, 0x6AB000
	0x03AACB98 LDR X0, [X0 + 0xE60]
	0x03AACB9C BL 0x1C16CF4
	0x03AACBA0 MOVZ W8, 0x1
	0x03AACBA4 STRB W8, [X19 + 0x435]
	0x03AACBA8 LDR X0, [X20]
	0x03AACBAC BL 0x1C16F10
	0x03AACBB0 MOV X1, X31
	0x03AACBB4 MOV X19, X0
	0x03AACBB8 BL 0x33BDD8C
	0x03AACBBC LDR X8, [X20]
	0x03AACBC0 LDR X8, [X8 + 0xB8]
	0x03AACBC4 STR X19, [X8]
	0x03AACBC8 LDP X20, X19, [X31 + 0x10]
	0x03AACBCC LDR X30, [X31], #0x20
	0x03AACBD0 RET
	0x03AACBD4 MOV X1, X31
	0x03AACBD8 B 0x33BDD8C
	0x03AACBDC SUB X31, X31, 0xA0
	0x03AACBE0 STP X30, X21, [X31 + 0x80]
	0x03AACBE4 STP X20, X19, [X31 + 0x90]
	0x03AACBE8 ADRP X21, 0x936000
	0x03AACBEC LDRB W8, [X21 + 0x436]
	0x03AACBF0 MOV X19, X2
	0x03AACBF4 MOV X20, X1
	0x03AACBF8 TBNZ X8, 0x0, 0x3AACC1C
	0x03AACBFC ADRP X0, 0x6A4000
	0x03AACC00 LDR X0, [X0 + 0xA88]
	0x03AACC04 BL 0x1C16CF4
	0x03AACC08 ADRP X0, 0x6A8000
	0x03AACC0C LDR X0, [X0 + 0x938]
	0x03AACC10 BL 0x1C16CF4
	0x03AACC14 MOVZ W8, 0x1
	0x03AACC18 STRB W8, [X21 + 0x436]
	0x03AACC1C CBZ X19, 0x3AACCA8
	0x03AACC20 CBZ X20, 0x3AACCA8
	0x03AACC24 ADRP X8, 0x6A4000
	0x03AACC28 LDR X8, [X8 + 0xA88]
	0x03AACC2C LDR X19, [X19 + 0x18]
	0x03AACC30 LDR X20, [X20 + 0x10]
	0x03AACC34 LDR X0, [X8]
	0x03AACC38 LDR W8, [X0 + 0xE0]
	0x03AACC3C CBNZ W8, 0x3AACC44
	0x03AACC40 BL 0x1C16DFC
	0x03AACC44 ADD X8, X31, 0x28
	0x03AACC48 MOV X0, X20
	0x03AACC4C MOV X1, X31
	0x03AACC50 BL 0x399A594
	0x03AACC54 LDUR V0, [X31 + 0x28]
	0x03AACC58 LDUR V1, [X31 + 0x38]
	0x03AACC5C LDR X8, [X31 + 0x48]
	0x03AACC60 STP V0, V1, [X31 + 0x50]

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+96], X30
	003 Move [X31+104], X21
	004 Move [X31+112], X20
	005 Move [X31+120], X19
	006 Move X21, 0x937000
	007 Move W8, [X21+1073]
	008 Move X19, X2
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x6A9000
	015 Move X0, [X0+16]
	016 Call 0x1C17CF4
	017 Move X0, 0x6A9000
	018 Move X0, [X0+2360]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+1073], W8
	022 Move X21, [X20+264]
	023 Compare X21, 0
	024 JumpIfEqual {85}
	025 Move X8, [X20+248]
	026 Move [X21+568], X8
	027 Move W8, [X20+240]
	028 Move [X21+576], W8
	029 Move W8, [X20+256]
	030 Move [X21+580], W8
	031 Move W8, [X20+244]
	032 Compare W8, 0
	033 JumpIfEqual {35}
	034 Move W8, 1
	035 Move X8, 0x6A9000
	036 Move X8, [X8+16]
	037 Move X0, [X8]
	038 Move W8, [X0+224]
	039 Compare W8, 0
	040 JumpIfNotEqual {42}
	041 Call 0x1C17DFC
	042 Move W0, 49
	043 Move W1, 4
	044 Move X2, X31
	045 Call RenderingUtils.SupportsGraphicsFormat, X0, X1
	046 Xor W8, W0, 1
	047 And W8, W8, 1
	048 Move [X21+581], W8
	049 Move X8, [X20+224]
	050 Compare X8, 0
	051 JumpIfEqual {85}
	052 Move X0, [X19]
	053 Move X9, [X8+72]
	054 NotImplemented "Instruction LDUR not yet implemented."
	055 NotImplemented "Instruction LDUR not yet implemented."
	056 Move [X31+80], X9
	057 Move [X31+48], V1
	058 Move [X31+56], V0
	059 Compare X0, 0
	060 JumpIfEqual {85}
	061 Move X8, 0x6A9000
	062 Move X8, [X8+2360]
	063 Move V0, [X31+48]
	064 Move V1, [X31+64]
	065 Move X9, [X31+80]
	066 Add X2, X31, 0
	067 Move X1, [X8]
	068 Move X3, X31
	069 Move [X31], V0
	070 Move [X31+8], V1
	071 Move [X31+32], X9
	072 Call CommandBuffer.SetGlobalTexture, X0, X1, X2
	073 Move X1, [X20+264]
	074 Move X4, [X20+224]
	075 Move X5, [X20+232]
	076 Add X3, X19, 24
	077 Move X2, X19
	078 Call CopyDepthPass.ExecutePass, X0, X1, X2, X3, X4, X5
	079 Move X20, [X31+112]
	080 Move X19, [X31+120]
	081 Move X30, [X31+96]
	082 Move X21, [X31+104]
	083 Add X31, X31, 128
	084 Return 
	085 Call 0x1C17F20

Method: System.Void ExecutePass(UnityEngine.Rendering.ScriptableRenderContext context, UnityEngine.Rendering.Universal.Internal.CopyDepthPass/PassData passData, ref UnityEngine.Rendering.CommandBuffer cmd, ref UnityEngine.Rendering.Universal.CameraData cameraData, UnityEngine.Rendering.RTHandle source, UnityEngine.Rendering.RTHandle destination)

Disassembly:
	0x03AACC64 STR X8, [X31 + 0x70]
	0x03AACC68 CBZ X19, 0x3AACCA8
	0x03AACC6C ADRP X8, 0x6A8000
	0x03AACC70 LDR X8, [X8 + 0x938]
	0x03AACC74 LDP V0, V1, [X31 + 0x50]
	0x03AACC78 LDR X9, [X31 + 0x70]
	0x03AACC7C ADD X2, X31, 0x0
	0x03AACC80 LDR X1, [X8]
	0x03AACC84 MOV X0, X19
	0x03AACC88 MOV X3, X31
	0x03AACC8C STP V0, V1, [X31]
	0x03AACC90 STR X9, [X31 + 0x20]
	0x03AACC94 BL 0x3C4FC28
	0x03AACC98 LDP X20, X19, [X31 + 0x90]
	0x03AACC9C LDP X30, X21, [X31 + 0x80]
	0x03AACCA0 ADD X31, X31, 0xA0
	0x03AACCA4 RET
	0x03AACCA8 BL 0x1C16F20
	0x03AACCAC STR X30, [X31 - 0x30]!
	0x03AACCB0 STP X22, X21, [X31 + 0x10]
	0x03AACCB4 STP X20, X19, [X31 + 0x20]
	0x03AACCB8 ADRP X21, 0x936000
	0x03AACCBC LDRB W8, [X21 + 0x437]
	0x03AACCC0 MOV X20, X2
	0x03AACCC4 MOV X19, X1
	0x03AACCC8 TBNZ X8, 0x0, 0x3AACCE0
	0x03AACCCC ADRP X0, 0x6A4000
	0x03AACCD0 LDR X0, [X0 + 0xA88]
	0x03AACCD4 BL 0x1C16CF4
	0x03AACCD8 MOVZ W8, 0x1
	0x03AACCDC STRB W8, [X21 + 0x437]
	0x03AACCE0 CBZ X20, 0x3AACD50
	0x03AACCE4 CBZ X19, 0x3AACD50
	0x03AACCE8 ADRP X8, 0x6A4000
	0x03AACCEC LDR X8, [X8 + 0xA88]
	0x03AACCF0 LDR X20, [X19 + 0x10]
	0x03AACCF4 LDR X0, [X8]
	0x03AACCF8 LDR W8, [X0 + 0xE0]
	0x03AACCFC CBNZ W8, 0x3AACD04
	0x03AACD00 BL 0x1C16DFC
	0x03AACD04 MOV X0, X20
	0x03AACD08 MOV X1, X31
	0x03AACD0C ADD X21, X19, 0x28
	0x03AACD10 ADD X22, X19, 0x20
	0x03AACD14 BL 0x399A7C4
	0x03AACD18 LDR X8, [X19 + 0x18]
	0x03AACD1C MOV X20, X0
	0x03AACD20 MOV X1, X31
	0x03AACD24 MOV X0, X8
	0x03AACD28 BL 0x399A7C4
	0x03AACD2C MOV X1, X19
	0x03AACD30 MOV X2, X22
	0x03AACD34 MOV X3, X21
	0x03AACD38 MOV X4, X20
	0x03AACD3C LDP X20, X19, [X31 + 0x20]
	0x03AACD40 LDP X22, X21, [X31 + 0x10]
	0x03AACD44 MOV X5, X0
	0x03AACD48 LDR X30, [X31], #0x30
	0x03AACD4C B 0x3AABC64
	0x03AACD50 BL 0x1C16F20
	0x03AACD54 SUB X31, X31, 0xA0
	0x03AACD58 STR X30, [X31 + 0x80]
	0x03AACD5C STP X20, X19, [X31 + 0x90]
	0x03AACD60 ADRP X19, 0x936000
	0x03AACD64 LDRB W8, [X19 + 0x438]
	0x03AACD68 MOV X20, X1
	0x03AACD6C TBNZ X8, 0x0, 0x3AACD90
	0x03AACD70 ADRP X0, 0x6A4000
	0x03AACD74 LDR X0, [X0 + 0xA88]
	0x03AACD78 BL 0x1C16CF4
	0x03AACD7C ADRP X0, 0x6AA000
	0x03AACD80 LDR X0, [X0 + 0xFD8]
	0x03AACD84 BL 0x1C16CF4
	0x03AACD88 MOVZ W8, 0x1
	0x03AACD8C STRB W8, [X19 + 0x438]
	0x03AACD90 CBZ X20, 0x3AACE14
	0x03AACD94 ADRP X8, 0x6A4000
	0x03AACD98 LDR X8, [X8 + 0xA88]
	0x03AACD9C LDP X20, X19, [X20 + 0x18]
	0x03AACDA0 LDR X0, [X8]
	0x03AACDA4 LDR W8, [X0 + 0xE0]
	0x03AACDA8 CBNZ W8, 0x3AACDB0
	0x03AACDAC BL 0x1C16DFC
	0x03AACDB0 ADD X8, X31, 0x28
	0x03AACDB4 MOV X0, X20
	0x03AACDB8 MOV X1, X31
	0x03AACDBC BL 0x399A594
	0x03AACDC0 LDUR V0, [X31 + 0x28]
	0x03AACDC4 LDUR V1, [X31 + 0x38]
	0x03AACDC8 LDR X8, [X31 + 0x48]
	0x03AACDCC STP V0, V1, [X31 + 0x50]
	0x03AACDD0 STR X8, [X31 + 0x70]
	0x03AACDD4 CBZ X19, 0x3AACE14
	0x03AACDD8 ADRP X8, 0x6AA000
	0x03AACDDC LDR X8, [X8 + 0xFD8]
	0x03AACDE0 LDP V0, V1, [X31 + 0x50]
	0x03AACDE4 LDR X9, [X31 + 0x70]
	0x03AACDE8 ADD X2, X31, 0x0
	0x03AACDEC LDR X1, [X8]
	0x03AACDF0 MOV X0, X19
	0x03AACDF4 MOV X3, X31
	0x03AACDF8 STP V0, V1, [X31]
	0x03AACDFC STR X9, [X31 + 0x20]
	0x03AACE00 BL 0x3C4FC28
	0x03AACE04 LDP X20, X19, [X31 + 0x90]
	0x03AACE08 LDR X30, [X31 + 0x80]
	0x03AACE0C ADD X31, X31, 0xA0
	0x03AACE10 RET
	0x03AACE14 BL 0x1C16F20
	0x03AACE18 STP X30, X23, [X31 - 0x30]!
	0x03AACE1C STP X22, X21, [X31 + 0x10]
	0x03AACE20 STP X20, X19, [X31 + 0x20]
	0x03AACE24 ADRP X23, 0x936000
	0x03AACE28 ADRP X22, 0x6A7000
	0x03AACE2C LDRB W8, [X23 + 0x439]
	0x03AACE30 LDR X22, [X22 + 0xFF0]
	0x03AACE34 MOV X19, X2
	0x03AACE38 MOV W21, W1
	0x03AACE3C MOV X20, X0
	0x03AACE40 TBNZ X8, 0x0, 0x3AACE70
	0x03AACE44 ADRP X0, 0x6A4000
	0x03AACE48 LDR X0, [X0 + 0x598]
	0x03AACE4C BL 0x1C16CF4
	0x03AACE50 ADRP X0, 0x6A7000
	0x03AACE54 LDR X0, [X0 + 0xFF0]
	0x03AACE58 BL 0x1C16CF4
	0x03AACE5C ADRP X0, 0x6AB000
	0x03AACE60 LDR X0, [X0 + 0xE80]
	0x03AACE64 BL 0x1C16CF4
	0x03AACE68 MOVZ W8, 0x1
	0x03AACE6C STRB W8, [X23 + 0x439]
	0x03AACE70 LDR X0, [X22]
	0x03AACE74 ADRP X23, 0x6A4000
	0x03AACE78 ADRP X22, 0x6AB000
	0x03AACE7C LDR W8, [X0 + 0xE0]
	0x03AACE80 LDR X23, [X23 + 0x598]
	0x03AACE84 LDR X22, [X22 + 0xE80]
	0x03AACE88 CBNZ W8, 0x3AACE90
	0x03AACE8C BL 0x1C16DFC
	0x03AACE90 MOV X0, X20
	0x03AACE94 MOV X1, X31
	0x03AACE98 BL 0x3A4225C
	0x03AACE9C LDR X0, [X23]
	0x03AACEA0 BL 0x1C16F10
	0x03AACEA4 LDR X1, [X22]
	0x03AACEA8 MOV X2, X31
	0x03AACEAC MOV X22, X0
	0x03AACEB0 BL 0x39B19AC
	0x03AACEB4 STR X22, [X20 + 0x38]
	0x03AACEB8 STR W21, [X20 + 0x10]
	0x03AACEBC STR X19, [X20 + 0xE0]
	0x03AACEC0 LDP X20, X19, [X31 + 0x20]
	0x03AACEC4 LDP X22, X21, [X31 + 0x10]
	0x03AACEC8 LDP X30, X23, [X31], #0x30
	0x03AACECC RET
	0x03AACED0 STP X30, X21, [X31 - 0x20]!
	0x03AACED4 STP X20, X19, [X31 + 0x10]
	0x03AACED8 MOV X19, X0
	0x03AACEDC LDR X0, [X0 + 0xE0]
	0x03AACEE0 CBZ X0, 0x3AACF48
	0x03AACEE4 LDR X20, [X0 + 0x30]
	0x03AACEE8 MOV X1, X31
	0x03AACEEC BL 0x3A9AD2C
	0x03AACEF0 CBZ X20, 0x3AACF48
	0x03AACEF4 LDR W8, [X20 + 0x18]
	0x03AACEF8 CMP W0, W8
	0x03AACEFC B.CS 0x3AACF4C
	0x03AACF00 LDR X8, [X19 + 0xE0]
	0x03AACF04 CBZ X8, 0x3AACF48
	0x03AACF08 ADD X9, X20, W0, 0x3, SXTW
	0x03AACF0C LDRB W10, [X8 + 0x15]
	0x03AACF10 LDR X21, [X9 + 0x20]
	0x03AACF14 LDR X20, [X8 + 0x70]
	0x03AACF18 CBZ W10, 0x3AACF2C
	0x03AACF1C LDP X1, X2, [X8 + 0x48]
	0x03AACF20 MOV X0, X19
	0x03AACF24 MOV X3, X31
	0x03AACF28 BL 0x3A42A3C
	0x03AACF2C MOV X0, X19
	0x03AACF30 MOV X2, X20
	0x03AACF34 LDP X20, X19, [X31 + 0x10]
	0x03AACF38 MOV X1, X21
	0x03AACF3C MOV X3, X31
	0x03AACF40 LDP X30, X21, [X31], #0x20
	0x03AACF44 B 0x3A44078
	0x03AACF48 BL 0x1C16F20
	0x03AACF4C BL 0x1C16F28
	0x03AACF50 STR X30, [X31 - 0x10]!
	0x03AACF54 LDR X0, [X0 + 0xE0]
	0x03AACF58 CBZ X0, 0x3AACF68
	0x03AACF5C MOV X3, X31
	0x03AACF60 LDR X30, [X31], #0x10
	0x03AACF64 B 0x3A9D260
	0x03AACF68 BL 0x1C16F20
	0x03AACF6C SUB X31, X31, 0x90
	0x03AACF70 STP X30, X23, [X31 + 0x60]
	0x03AACF74 STP X22, X21, [X31 + 0x70]
	0x03AACF78 STP X20, X19, [X31 + 0x80]
	0x03AACF7C ADRP X23, 0x936000
	0x03AACF80 LDRB W8, [X23 + 0x43A]
	0x03AACF84 MOV X21, X5
	0x03AACF88 MOV X19, X4
	0x03AACF8C MOV X22, X1
	0x03AACF90 MOV X20, X0
	0x03AACF94 STP X3, X2, [X31 + 0x50]
	0x03AACF98 TBNZ X8, 0x0, 0x3AACFEC
	0x03AACF9C ADRP X0, 0x6AB000
	0x03AACFA0 LDR X0, [X0 + 0xE88]
	0x03AACFA4 BL 0x1C16CF4
	0x03AACFA8 ADRP X0, 0x6AB000
	0x03AACFAC LDR X0, [X0 + 0xE90]
	0x03AACFB0 BL 0x1C16CF4
	0x03AACFB4 ADRP X0, 0x6AB000
	0x03AACFB8 LDR X0, [X0 + 0xE98]
	0x03AACFBC BL 0x1C16CF4
	0x03AACFC0 ADRP X0, 0x6AB000
	0x03AACFC4 LDR X0, [X0 + 0xEA0]
	0x03AACFC8 BL 0x1C16CF4
	0x03AACFCC ADRP X0, 0x6AB000
	0x03AACFD0 LDR X0, [X0 + 0xEA8]
	0x03AACFD4 BL 0x1C16CF4
	0x03AACFD8 ADRP X0, 0x6AB000
	0x03AACFDC LDR X0, [X0 + 0xEB0]
	0x03AACFE0 BL 0x1C16CF4
	0x03AACFE4 MOVZ W8, 0x1
	0x03AACFE8 STRB W8, [X23 + 0x43A]
	0x03AACFEC MOVI V0.2D, 0x0
	0x03AACFF0 STP V0, V0, [X31 + 0x30]
	0x03AACFF4 STR X31, [X31 + 0x28]
	0x03AACFF8 CBZ X22, 0x3AAD1C4
	0x03AACFFC ADRP X8, 0x6AB000
	0x03AAD000 ADRP X9, 0x6AA000
	0x03AAD004 LDR X8, [X8 + 0xEB0]
	0x03AAD008 B 0x3EB1714
	0x03AAD00C LDR X3, [X20 + 0x38]
	0x03AAD010 ADD X2, X31, 0x28
	0x03AAD014 LDR X1, [X8]
	0x03AAD018 LDR X4, [X9]
	0x03AAD01C ADD X8, X31, 0x8
	0x03AAD020 MOV X0, X22
	0x03AAD024 BL 0x2240F24
	0x03AAD028 LDUR V0, [X31 + 0x8]
	0x03AAD02C LDUR V1, [X31 + 0x18]
	0x03AAD030 LDR X22, [X31 + 0x28]
	0x03AAD034 STP V0, V1, [X31 + 0x30]
	0x03AAD038 ADD X0, X31, 0x30
	0x03AAD03C ADD X1, X31, 0x58
	0x03AAD040 MOV W2, W31
	0x03AAD044 MOV X3, X31
	0x03AAD048 BL 0x3996828
	0x03AAD04C CBZ X22, 0x3AAD1C8
	0x03AAD050 STR X0, [X22 + 0x10]
	0x03AAD054 LDR X22, [X31 + 0x28]
	0x03AAD058 ADD X0, X31, 0x30
	0x03AAD05C ADD X1, X31, 0x50
	0x03AAD060 MOVZ W2, 0x3
	0x03AAD064 MOV X3, X31
	0x03AAD068 BL 0x3996A00
	0x03AAD06C CBZ X22, 0x3AAD1CC
	0x03AAD070 STR X0, [X22 + 0x18]
	0x03AAD074 LDR X8, [X31 + 0x28]
	0x03AAD078 CBZ X8, 0x3AAD1D0
	0x03AAD07C LDR X9, [X20 + 0xE0]
	0x03AAD080 ADD X0, X8, 0x20
	0x03AAD084 MOVZ W2, 0x2B8
	0x03AAD088 MOV X1, X21
	0x03AAD08C STR X9, [X8 + 0x2D8]
	0x03AAD090 BL 0x3EB1B30
	0x03AAD094 CBZ X19, 0x3AAD1D4
	0x03AAD098 LDR W8, [X19 + 0x18]
	0x03AAD09C CMP W8, 0x1
	0x03AAD0A0 B.LT 0x3AAD0F4
	0x03AAD0A4 MOV X22, X31
	0x03AAD0A8 ADD X21, X19, 0x20
	0x03AAD0AC LDR X0, [X20 + 0xE0]
	0x03AAD0B0 CBZ X0, 0x3AAD1BC
	0x03AAD0B4 MOV X1, X31
	0x03AAD0B8 BL 0x3A9AD2C
	0x03AAD0BC CMP X22, W0, UXTW
	0x03AAD0C0 B.EQ 0x3AAD0E0
	0x03AAD0C4 LDR W8, [X19 + 0x18]
	0x03AAD0C8 CMP X22, X8
	0x03AAD0CC B.CS 0x3AAD1C0
	0x03AAD0D0 ADD X0, X31, 0x30
	0x03AAD0D4 MOV X1, X21
	0x03AAD0D8 MOV X2, X31
	0x03AAD0DC BL 0x3996BA8
	0x03AAD0E0 LDRSW X8, [X19 + 0x18]
	0x03AAD0E4 ADD X22, X22, 0x1
	0x03AAD0E8 ADD X21, X21, 0x8
	0x03AAD0EC CMP X22, X8
	0x03AAD0F0 B.LT 0x3AAD0AC
	0x03AAD0F4 ADD X0, X31, 0x30
	0x03AAD0F8 MOV W1, W31
	0x03AAD0FC MOV X2, X31
	0x03AAD100 BL 0x398E404
	0x03AAD104 ADRP X21, 0x6AA000
	0x03AAD108 LDR X21, [X21 + 0xEA8]
	0x03AAD10C LDR X8, [X21]
	0x03AAD110 LDR W9, [X8 + 0xE0]
	0x03AAD114 CBNZ W9, 0x3AAD124
	0x03AAD118 MOV X0, X8
	0x03AAD11C BL 0x1C16DFC
	0x03AAD120 LDR X8, [X21]
	0x03AAD124 LDR X9, [X8 + 0xB8]
	0x03AAD128 LDR X19, [X9 + 0x8]
	0x03AAD12C CBNZ X19, 0x3AAD184
	0x03AAD130 LDR W9, [X8 + 0xE0]
	0x03AAD134 CBNZ W9, 0x3AAD144
	0x03AAD138 MOV X0, X8
	0x03AAD13C BL 0x1C16DFC
	0x03AAD140 LDR X8, [X21]
	0x03AAD144 ADRP X9, 0x6AA000
	0x03AAD148 LDR X8, [X8 + 0xB8]
	0x03AAD14C LDR X9, [X9 + 0xE88]
	0x03AAD150 LDR X20, [X8]
	0x03AAD154 LDR X0, [X9]
	0x03AAD158 BL 0x1C16F10
	0x03AAD15C ADRP X8, 0x6AA000
	0x03AAD160 LDR X8, [X8 + 0xEA0]
	0x03AAD164 MOV X19, X0
	0x03AAD168 LDR X2, [X8]
	0x03AAD16C MOV X1, X20
	0x03AAD170 MOV X3, X31
	0x03AAD174 BL 0x25C78AC
	0x03AAD178 LDR X8, [X21]
	0x03AAD17C LDR X8, [X8 + 0xB8]
	0x03AAD180 STR X19, [X8 + 0x8]
	0x03AAD184 ADRP X8, 0x6AA000
	0x03AAD188 LDR X8, [X8 + 0xE90]
	0x03AAD18C LDR X2, [X8]
	0x03AAD190 ADD X0, X31, 0x30
	0x03AAD194 MOV X1, X19
	0x03AAD198 BL 0x224107C
	0x03AAD19C ADD X0, X31, 0x30
	0x03AAD1A0 MOV X1, X31
	0x03AAD1A4 BL 0x39972C0
	0x03AAD1A8 LDP X20, X19, [X31 + 0x80]
	0x03AAD1AC LDP X22, X21, [X31 + 0x70]
	0x03AAD1B0 LDP X30, X23, [X31 + 0x60]
	0x03AAD1B4 ADD X31, X31, 0x90
	0x03AAD1B8 RET
	0x03AAD1BC BL 0x1C16F20
	0x03AAD1C0 BL 0x1C16F28
	0x03AAD1C4 BL 0x1C16F20
	0x03AAD1C8 BL 0x1C16F20
	0x03AAD1CC BL 0x1C16F20
	0x03AAD1D0 BL 0x1C16F20
	0x03AAD1D4 BL 0x1C16F20
	0x03AAD1D8 B 0x3AAD204
	0x03AAD1DC B 0x3AAD204
	0x03AAD1E0 B 0x3AAD204
	0x03AAD1E4 B 0x3AAD204
	0x03AAD1E8 B 0x3AAD204
	0x03AAD1EC B 0x3AAD204
	0x03AAD1F0 B 0x3AAD204
	0x03AAD1F4 B 0x3AAD204
	0x03AAD1F8 B 0x3AAD204
	0x03AAD1FC B 0x3AAD204
	0x03AAD200 B 0x3AAD204
	0x03AAD204 MOV X19, X0
	0x03AAD208 CMP W1, 0x1
	0x03AAD20C B.NE 0x3AAD238
	0x03AAD210 MOV X0, X19
	0x03AAD214 BL 0x3EB1AD0
	0x03AAD218 LDR X20, [X0]
	0x03AAD21C BL 0x3EB1AE0
	0x03AAD220 ADD X0, X31, 0x30
	0x03AAD224 MOV X1, X31
	0x03AAD228 BL 0x39972C0
	0x03AAD22C CBZ X20, 0x3AAD1A8
	0x03AAD230 MOV X0, X20
	0x03AAD234 BL 0x1C16F18
	0x03AAD238 MOV X20, X31
	0x03AAD23C B 0x3AAD244
	0x03AAD240 MOV X19, X0
	0x03AAD244 ADD X0, X31, 0x30
	0x03AAD248 MOV X1, X31
	0x03AAD24C BL 0x39972C0
	0x03AAD250 CBNZ X20, 0x3AAD25C
	0x03AAD254 MOV X0, X19
	0x03AAD258 BL 0x1D2C690
	0x03AAD25C MOV X0, X20
	0x03AAD260 BL 0x1C16F18
	0x03AAD264 BL 0x1990590
	0x03AAD268 STR X30, [X31 - 0x10]!
	0x03AAD26C LDR X0, [X0 + 0xE0]
	0x03AAD270 CBZ X0, 0x3AAD280
	0x03AAD274 MOV X2, X31
	0x03AAD278 LDR X30, [X31], #0x10
	0x03AAD27C B 0x3A9CA58
	0x03AAD280 BL 0x1C16F20
	0x03AAD284 MOV X1, X31
	0x03AAD288 B 0x33BDD8C
	0x03AAD28C STR X30, [X31 - 0x20]!
	0x03AAD290 STP X20, X19, [X31 + 0x10]
	0x03AAD294 ADRP X19, 0x935000
	0x03AAD298 ADRP X20, 0x6AA000
	0x03AAD29C LDRB W8, [X19 + 0x43B]
	0x03AAD2A0 LDR X20, [X20 + 0xEA8]
	0x03AAD2A4 TBNZ X8, 0x0, 0x3AAD2BC
	0x03AAD2A8 ADRP X0, 0x6AA000
	0x03AAD2AC LDR X0, [X0 + 0xEA8]
	0x03AAD2B0 BL 0x1C16CF4
	0x03AAD2B4 MOVZ W8, 0x1
	0x03AAD2B8 STRB W8, [X19 + 0x43B]
	0x03AAD2BC LDR X0, [X20]
	0x03AAD2C0 BL 0x1C16F10
	0x03AAD2C4 MOV X1, X31
	0x03AAD2C8 MOV X19, X0
	0x03AAD2CC BL 0x33BDD8C
	0x03AAD2D0 LDR X8, [X20]
	0x03AAD2D4 LDR X8, [X8 + 0xB8]
	0x03AAD2D8 STR X19, [X8]
	0x03AAD2DC LDP X20, X19, [X31 + 0x10]
	0x03AAD2E0 LDR X30, [X31], #0x20
	0x03AAD2E4 RET
	0x03AAD2E8 MOV X1, X31
	0x03AAD2EC B 0x33BDD8C
	0x03AAD2F0 STR X30, [X31 - 0x10]!
	0x03AAD2F4 CBZ X1, 0x3AAD31C
	0x03AAD2F8 CBZ X2, 0x3AAD31C
	0x03AAD2FC LDR X0, [X1 + 0x2D8]
	0x03AAD300 CBZ X0, 0x3AAD31C
	0x03AAD304 LDR X8, [X2 + 0x10]
	0x03AAD308 ADD X2, X1, 0x20
	0x03AAD30C MOV X3, X31
	0x03AAD310 MOV X1, X8
	0x03AAD314 LDR X30, [X31], #0x10
	0x03AAD318 B 0x3A9D260
	0x03AAD31C BL 0x1C16F20
	0x03AAD320 LDR X0, [X0 + 0xE0]
	0x03AAD324 RET
	0x03AAD328 STR X1, [X0 + 0xE0]
	0x03AAD32C RET
	0x03AAD330 LDR X0, [X0 + 0xE8]
	0x03AAD334 RET
	0x03AAD338 STR X1, [X0 + 0xE8]
	0x03AAD33C RET
	0x03AAD340 LDR X0, [X0 + 0xF0]
	0x03AAD344 RET
	0x03AAD348 STR X1, [X0 + 0xF0]
	0x03AAD34C RET
	0x03AAD350 LDR X0, [X0 + 0xF8]
	0x03AAD354 RET
	0x03AAD358 STR X1, [X0 + 0xF8]
	0x03AAD35C RET
	0x03AAD360 LDRB W0, [X0 + 0x100]
	0x03AAD364 RET
	0x03AAD368 AND W8, W1, 0x1
	0x03AAD36C STRB W8, [X0 + 0x100]
	0x03AAD370 RET
	0x03AAD374 SUB X31, X31, 0x80
	0x03AAD378 STP X30, X27, [X31 + 0x30]
	0x03AAD37C STP X26, X25, [X31 + 0x40]
	0x03AAD380 STP X24, X23, [X31 + 0x50]
	0x03AAD384 STP X22, X21, [X31 + 0x60]
	0x03AAD388 STP X20, X19, [X31 + 0x70]
	0x03AAD38C ADRP X24, 0x935000
	0x03AAD390 ADRP X23, 0x6A6000
	0x03AAD394 LDRB W8, [X24 + 0x43C]
	0x03AAD398 LDR X23, [X23 + 0xFF0]
	0x03AAD39C MOV X21, X3
	0x03AAD3A0 MOV X22, X2
	0x03AAD3A4 MOV W20, W1
	0x03AAD3A8 MOV X19, X0
	0x03AAD3AC TBNZ X8, 0x0, 0x3AAD400
	0x03AAD3B0 ADRP X0, 0x6AA000
	0x03AAD3B4 LDR X0, [X0 + 0x158]
	0x03AAD3B8 BL 0x1C16CF4
	0x03AAD3BC ADRP X0, 0x6A7000
	0x03AAD3C0 LDR X0, [X0 + 0x78]
	0x03AAD3C4 BL 0x1C16CF4
	0x03AAD3C8 ADRP X0, 0x6AA000
	0x03AAD3CC LDR X0, [X0 + 0xEB8]
	0x03AAD3D0 BL 0x1C16CF4
	0x03AAD3D4 ADRP X0, 0x6A3000
	0x03AAD3D8 LDR X0, [X0 + 0x598]
	0x03AAD3DC BL 0x1C16CF4
	0x03AAD3E0 ADRP X0, 0x6A6000
	0x03AAD3E4 LDR X0, [X0 + 0xFF0]
	0x03AAD3E8 BL 0x1C16CF4
	0x03AAD3EC ADRP X0, 0x6AA000
	0x03AAD3F0 LDR X0, [X0 + 0xEC0]
	0x03AAD3F4 BL 0x1C16CF4
	0x03AAD3F8 MOVZ W8, 0x1
	0x03AAD3FC STRB W8, [X24 + 0x43C]
	0x03AAD400 LDR X0, [X23]
	0x03AAD404 ADRP X27, 0x6A3000
	0x03AAD408 ADRP X23, 0x6AA000
	0x03AAD40C ADRP X26, 0x6AA000
	0x03AAD410 ADRP X25, 0x6A7000
	0x03AAD414 ADRP X24, 0x6AA000
	0x03AAD418 LDR X27, [X27 + 0x598]
	0x03AAD41C LDR W8, [X0 + 0xE0]
	0x03AAD420 LDR X23, [X23 + 0xEC0]
	0x03AAD424 LDR X26, [X26 + 0xEB8]
	0x03AAD428 LDR X25, [X25 + 0x78]
	0x03AAD42C LDR X24, [X24 + 0x158]
	0x03AAD430 CBNZ W8, 0x3AAD438
	0x03AAD434 BL 0x1C16DFC
	0x03AAD438 MOV X0, X19
	0x03AAD43C MOV X1, X31
	0x03AAD440 BL 0x3A4225C

ISIL:
	001 Move [X31-112], D10
	002 Move [X31+8], D9
	003 Move [X31+16], D8
	004 Move [X31+24], X29
	005 Move [X31+32], X30
	006 Move [X31+40], X27
	007 Move [X31+48], X26
	008 Move [X31+56], X25
	009 Move [X31+64], X24
	010 Move [X31+72], X23
	011 Move [X31+80], X22
	012 Move [X31+88], X21
	013 Move [X31+96], X20
	014 Move [X31+104], X19
	015 Subtract X31, X31, 400
	016 Move X21, 0x937000
	017 Move W8, [X21+1074]
	018 Move X23, X5
	019 Move X19, X4
	020 Move X22, X3
	021 Move X20, X2
	022 Move X24, X1
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {59}
	027 Move X0, 0x6A7000
	028 Move X0, [X0+3624]
	029 Call 0x1C17CF4
	030 Move X0, 0x648000
	031 Move X0, [X0+2600]
	032 Call 0x1C17CF4
	033 Move X0, 0x648000
	034 Move X0, [X0+2512]
	035 Call 0x1C17CF4
	036 Move X0, 0x648000
	037 Move X0, [X0+1432]
	038 Call 0x1C17CF4
	039 Move X0, 0x6A9000
	040 Move X0, [X0+168]
	041 Call 0x1C17CF4
	042 Move X0, 0x6AC000
	043 Move X0, [X0+3584]
	044 Call 0x1C17CF4
	045 Move X0, 0x6AC000
	046 Move X0, [X0+3592]
	047 Call 0x1C17CF4
	048 Move X0, 0x6AC000
	049 Move X0, [X0+3600]
	050 Call 0x1C17CF4
	051 Move X0, 0x6AC000
	052 Move X0, [X0+3608]
	053 Call 0x1C17CF4
	054 Move X0, 0x6AC000
	055 Move X0, [X0+3616]
	056 Call 0x1C17CF4
	057 Move W8, 1
	058 Move [X21+1074], W8
	059 Move [X31+392], W31
	060 Compare X24, 0
	061 JumpIfEqual {480}
	062 Move X8, 0x648000
	063 Move X8, [X8+1432]
	064 Move X21, [X24+568]
	065 Move W26, [X24+576]
	066 Move W27, [X24+580]
	067 Move X0, [X8]
	068 Move W25, [X24+581]
	069 Move W8, [X0+224]
	070 Compare W8, 0
	071 JumpIfNotEqual {73}
	072 Call 0x1C17DFC
	073 Move X0, X21
	074 Move X1, X31
	075 Move X2, X31
	076 Call Object.op_Equality, X0, X1
	077 Move TEMP, X0
	078 And TEMP, TEMP, 1
	079 Compare TEMP, 1
	080 JumpIfNotEqual {114}
	081 Move X8, 0x648000
	082 Move X8, [X8+2512]
	083 Move W1, 1
	084 Move X0, [X8]
	085 Call 0x1C17D6C
	086 Compare X0, 0
	087 JumpIfEqual {480}
	088 Move X19, X0
	089 Compare X21, 0
	090 JumpIfEqual {97}
	091 Move X8, [X19]
	092 Move X0, X21
	093 Move X1, [X8+64]
	094 Call 0x1C17E00
	095 Compare X0, 0
	096 JumpIfEqual {485}
	097 Move W8, [X19+24]
	098 Compare W8, 0
	099 JumpIfEqual {481}
	100 Move [X19+32], X21
	101 Move X8, 0x648000
	102 Move X8, [X8+2600]
	103 Move X0, [X8]
	104 Move W8, [X0+224]
	105 Compare W8, 0
	106 JumpIfNotEqual {108}
	107 Call 0x1C17DFC
	108 Move X8, 0x6AC000
	109 Move X8, [X8+3616]
	110 Move X1, X19
	111 Move X2, X31
	112 Move X0, [X8]
	113 Call Debug.LogErrorFormat, X0, X1
	114 Move X8, 0x6A9000
	115 Move X24, [X20]
	116 Move X8, [X8+168]
	117 Move W0, 6
	118 Move X1, [X8]
	119 Call 0x2236BC0, X0
	120 Move X2, X0
	121 Add X0, X31, 392
	122 Move X1, X24
	123 Move X3, X31
	124 Call ProfilingScope..ctor, X0, X1, X2
	125 Add W31, W26, 1
	126 Move W26, [X22+224]
	127 Move X0, X31
	128 Call SystemInfo.get_supportsMultisampledTextures
	129 NotImplemented "Instruction CMP not yet implemented."
	130 NotImplemented "Instruction CSET not yet implemented."
	131 Or W8, W8, W27
	132 NotImplemented "Instruction CMP not yet implemented."
	133 NotImplemented "Instruction CSINC not yet implemented."
	134 NotImplemented "Instruction CMP not yet implemented."
	135 NotImplemented "Instruction CMP not yet implemented."
	136 NotImplemented "Instruction CMP not yet implemented."
	137 Move X0, [X20]
	138 Compare X0, 0
	139 JumpIfEqual {498}
	140 Move X8, 0x6AC000
	141 Move X8, [X8+3592]
	142 Move X1, [X8]
	143 Move X2, X31
	144 Call CommandBuffer.DisableShaderKeyword, X0, X1
	145 Move X0, [X20]
	146 Compare X0, 0
	147 JumpIfEqual {502}
	148 Move X8, 0x6AC000
	149 Move X8, [X8+3584]
	150 Move X1, [X8]
	151 Move X2, X31
	152 Call CommandBuffer.DisableShaderKeyword, X0, X1
	153 Move X0, [X20]
	154 Compare X0, 0
	155 JumpIfEqual {506}
	156 Move X8, 0x6AC000
	157 Move X8, [X8+3600]
	158 Move X1, [X8]
	159 Move X2, X31
	160 Call CommandBuffer.EnableShaderKeyword, X0, X1
	161 Move X0, [X20]
	162 Compare X0, 0
	163 JumpIfEqual {496}
	164 Move X8, 0x6AC000
	165 Move X8, [X8+3592]
	166 Move X1, [X8]
	167 Move X2, X31
	168 Call CommandBuffer.DisableShaderKeyword, X0, X1
	169 Move X0, [X20]
	170 Compare X0, 0
	171 JumpIfEqual {500}
	172 Move X8, 0x6AC000
	173 Move X8, [X8+3584]
	174 Move X1, [X8]
	175 Move X2, X31
	176 Call CommandBuffer.EnableShaderKeyword, X0, X1
	177 Move X0, [X20]
	178 Compare X0, 0
	179 JumpIfEqual {504}
	180 Move X8, 0x6AC000
	181 Move X8, [X8+3600]
	182 Move X1, [X8]
	183 Move X2, X31
	184 Call CommandBuffer.DisableShaderKeyword, X0, X1
	185 Move X0, [X20]
	186 Compare X0, 0
	187 JumpIfEqual {497}
	188 Move X8, 0x6AC000
	189 Move X8, [X8+3592]
	190 Move X1, [X8]
	191 Move X2, X31
	192 Call CommandBuffer.EnableShaderKeyword, X0, X1
	193 Move X0, [X20]
	194 Compare X0, 0
	195 JumpIfEqual {501}
	196 Move X8, 0x6AC000
	197 Move X8, [X8+3584]
	198 Move X1, [X8]
	199 Move X2, X31
	200 Call CommandBuffer.DisableShaderKeyword, X0, X1
	201 Move X0, [X20]
	202 Compare X0, 0
	203 JumpIfEqual {505}
	204 Move X8, 0x6AC000
	205 Move X8, [X8+3600]
	206 Move X1, [X8]
	207 Move X2, X31
	208 Call CommandBuffer.DisableShaderKeyword, X0, X1
	209 Move X0, [X20]
	210 Compare X0, 0
	211 JumpIfEqual {499}
	212 Move X8, 0x6AC000
	213 Move X8, [X8+3592]
	214 Move X1, [X8]
	215 Move X2, X31
	216 Call CommandBuffer.DisableShaderKeyword, X0, X1
	217 Move X0, [X20]
	218 Compare X0, 0
	219 JumpIfEqual {503}
	220 Move X8, 0x6AC000
	221 Move X8, [X8+3584]
	222 Move X1, [X8]
	223 Move X2, X31
	224 Call CommandBuffer.DisableShaderKeyword, X0, X1
	225 Move X0, [X20]
	226 Compare X0, 0
	227 JumpIfEqual {507}
	228 Move X8, 0x6AC000
	229 Move X8, [X8+3600]
	230 Move X1, [X8]
	231 Move X2, X31
	232 Call CommandBuffer.DisableShaderKeyword, X0, X1
	233 Compare W25, 0
	234 JumpIfEqual {243}
	235 Move X0, [X20]
	236 Compare X0, 0
	237 JumpIfEqual {484}
	238 Move X8, 0x6AC000
	239 Move X8, [X8+3608]
	240 Move X1, [X8]
	241 Move X2, X31
	242 Call CommandBuffer.EnableShaderKeyword, X0, X1
	243 Compare X23, 0
	244 JumpIfEqual {493}
	245 Move X0, [X23+24]
	246 Compare X0, 0
	247 JumpIfEqual {494}
	248 Move X1, X31
	249 Call RenderTexture.get_graphicsFormat, X0
	250 Compare W0, 0
	251 JumpIfEqual {235}
	252 Move X0, [X20]
	253 Compare X0, 0
	254 JumpIfEqual {509}
	255 Move X8, 0x6AC000
	256 Move X8, [X8+3608]
	257 Move X1, [X8]
	258 Move X2, X31
	259 Call CommandBuffer.DisableShaderKeyword, X0, X1
	260 Compare X19, 0
	261 JumpIfEqual {482}
	262 Move W8, [X19+168]
	263 Compare W8, 0
	264 JumpIfEqual {275}
	265 Add X8, X31, 336
	266 Move X0, X19
	267 Move X1, X31
	268 Call RTHandle.get_rtHandleProperties, X0
	269 Move V8, [X31+368]
	270 Add X8, X31, 336
	271 Move X0, X19
	272 Move X1, X31
	273 Call RTHandle.get_rtHandleProperties, X0
	274 Move V10, [X31+372]
	275 Move X24, 0x935000
	276 Move W8, [X24+2632]
	277 Compare W8, 0
	278 JumpIfNotEqual {284}
	279 Move X0, 0x64F000
	280 Move X0, [X0+3848]
	281 Call 0x1C17CF4
	282 Move W8, 1
	283 Move [X24+2632], W8
	284 Move X8, 0x64F000
	285 Move X8, [X8+3848]
	286 Move X8, [X8]
	287 Move X8, [X8+184]
	288 Move S8, [X8+8]
	289 Move S10, [X8+12]
	290 Move W8, [X22+360]
	291 NotImplemented "Instruction CMP not yet implemented."
	292 Compare X23, 0
	293 JumpIfEqual {489}
	294 Move X8, [X23+72]
	295 NotImplemented "Instruction LDUR not yet implemented."
	296 NotImplemented "Instruction LDUR not yet implemented."
	297 Move [X31+368], X8
	298 Move [X31+336], V1
	299 Move [X31+344], V0
	300 Add X8, X31, 288
	301 Move W0, 2
	302 Move X1, X31
	303 Call RenderTargetIdentifier.op_Implicit, X0
	304 Move V0, [X31+288]
	305 Move V1, [X31+304]
	306 Move X8, [X31+320]
	307 Move V2, [X31+336]
	308 Move V3, [X31+352]
	309 Move X9, [X31+368]
	310 Move [X31+192], V0
	311 Move [X31+200], V1
	312 Move [X31+224], X8
	313 Move [X31+240], V2
	314 Move [X31+248], V3
	315 Move [X31+272], X9
	316 Add X0, X31, 240
	317 Add X1, X31, 192
	318 Move X2, X31
	319 Call RenderTargetIdentifier.op_Equality, X0, X1
	320 And W25, W0, 1
	321 Move W25, W31
	322 Move X0, [X22+376]
	323 Compare X0, 0
	324 JumpIfEqual {483}
	325 Move X1, X31
	326 Call XRPass.get_enabled, X0
	327 Move TEMP, X0
	328 And TEMP, TEMP, 1
	329 Compare TEMP, 1
	330 JumpIfNotEqual {407}
	331 Move X0, [X22+376]
	332 Compare X0, 0
	333 JumpIfEqual {490}
	334 Move X1, X31
	335 Call XRPass.get_supportsFoveatedRendering, X0
	336 Move TEMP, X0
	337 And TEMP, TEMP, 1
	338 Compare TEMP, 1
	339 JumpIfNotEqual {346}
	340 Move X0, [X20]
	341 Compare X0, 0
	342 JumpIfEqual {508}
	343 Move W1, W31
	344 Move X2, X31
	345 Call CommandBuffer.SetFoveatedRenderingMode, X0, X1
	346 Compare X23, 0
	347 JumpIfEqual {491}
	348 NotImplemented "Instruction LDUR not yet implemented."
	349 Move X8, [X23+72]
	350 NotImplemented "Instruction LDUR not yet implemented."
	351 NotImplemented "Instruction MOVI not yet implemented."
	352 Move [X31+368], X31
	353 Move [X31+176], X8
	354 Move [X31+144], V0
	355 Move [X31+152], V1
	356 Move [X31+336], V2
	357 Move [X31+344], V2
	358 Add X0, X31, 336
	359 Add X1, X31, 144
	360 Move TEMP, 0
	361 Not TEMP
	362 Move W3, TEMP
	363 Move W2, W31
	364 Move W4, W31
	365 Move X5, X31
	366 Call RenderTargetIdentifier..ctor, X0, X1, X2, X3, X4
	367 Move X8, [X22+376]
	368 Compare X8, 0
	369 JumpIfEqual {492}
	370 Move X9, [X8+80]
	371 Move V0, [X8+48]
	372 Move V1, [X8+64]
	373 NotImplemented "Instruction MOVI not yet implemented."
	374 Move [X31+320], X31
	375 Move [X31+128], X9
	376 Move [X31+96], V0
	377 Move [X31+104], V1
	378 Move [X31+288], V2
	379 Move [X31+296], V2
	380 Add X0, X31, 288
	381 Add X1, X31, 96
	382 Move TEMP, 0
	383 Not TEMP
	384 Move W3, TEMP
	385 Move W2, W31
	386 Move W4, W31
	387 Move X5, X31
	388 Call RenderTargetIdentifier..ctor, X0, X1, X2, X3, X4
	389 Move V0, [X31+336]
	390 Move V1, [X31+352]
	391 Move X8, [X31+368]
	392 Move V2, [X31+288]
	393 Move V3, [X31+304]
	394 Move X9, [X31+320]
	395 Move [X31+48], V0
	396 Move [X31+56], V1
	397 Move [X31+80], X8
	398 Move [X31], V2
	399 Move [X31+8], V3
	400 Move [X31+32], X9
	401 Add X0, X31, 48
	402 Add X1, X31, 0
	403 Move X2, X31
	404 Call RenderTargetIdentifier.op_Equality, X0, X1
	405 And W8, W0, 1
	406 Or W25, W25, W8
	407 Move X0, X22
	408 Move X1, X19
	409 Move X2, X31
	410 Call CameraData.IsHandleYFlipped, X0, X1
	411 Move W24, W0
	412 Move X0, X22
	413 Move X1, X23
	414 Move X2, X31
	415 Call CameraData.IsHandleYFlipped, X0, X1
	416 Xor W8, W24, W0
	417 Move X0, [X20]
	418 NotImplemented "Instruction FNEG not yet implemented."
	419 And W31, W8, 1
	420 Move S1, W31
	421 NotImplemented "Instruction FCSEL not yet implemented."
	422 NotImplemented "Instruction FCSEL not yet implemented."
	423 Compare W25, 0
	424 JumpIfEqual {433}
	425 Compare X0, 0
	426 JumpIfEqual {488}
	427 Move V3, [X22+280]
	428 Move V2, [X22+276]
	429 Move V1, [X22+272]
	430 Move V0, [X22+268]
	431 Move X1, X31
	432 Call CommandBuffer.SetViewport, X0, X1
	433 Compare X0, 0
	434 JumpIfEqual {495}
	435 Move S1, [X22+216]
	436 Move S0, [X22+220]
	437 NotImplemented "Instruction SCVTF not yet implemented."
	438 NotImplemented "Instruction SCVTF not yet implemented."
	439 Move S0, W31
	440 Move S1, W31
	441 Move X1, X31
	442 Call CommandBuffer.SetViewport, X0, X1
	443 Move X8, 0x6A6000
	444 Move X8, [X8+3624]
	445 Move X20, [X20]
	446 Move X0, [X8]
	447 Move W8, [X0+224]
	448 Compare W8, 0
	449 JumpIfNotEqual {451}
	450 Call 0x1C17DFC
	451 Move S2, W31
	452 Move X0, X20
	453 Move X1, X19
	454 Move V0, V8
	455 Move V1, V10
	456 Move V3, V9
	457 Move X2, X21
	458 Move W3, W31
	459 Move X4, X31
	460 Call Blitter.BlitTexture, X0, X1, X2, X3, X4
	461 Add X0, X31, 392
	462 Move X1, X31
	463 Call ProfilingScope.Dispose, X0
	464 Add X31, X31, 400
	465 Move X20, [X31+96]
	466 Move X19, [X31+104]
	467 Move X22, [X31+80]
	468 Move X21, [X31+88]
	469 Move X24, [X31+64]
	470 Move X23, [X31+72]
	471 Move X26, [X31+48]
	472 Move X25, [X31+56]
	473 Move X30, [X31+32]
	474 Move X27, [X31+40]
	475 Move X29, [X31+24]
	476 Move D9, [X31+8]
	477 Move D8, [X31+16]
	478 Move V10, [X31+112]
	479 Return 
	480 Call 0x1C17F20
	481 Call 0x1C17F28
	482 Call 0x1C17F20
	483 Call 0x1C17F20
	484 Call 0x1C17F20
	485 Call 0x1C17F44
	486 Move X1, X31
	487 Call 0x1C17DEC
	488 Call 0x1C17F20
	489 Call 0x1C17F20
	490 Call 0x1C17F20
	491 Call 0x1C17F20
	492 Call 0x1C17F20
	493 Call 0x1C17F20
	494 Call 0x1C17F20
	495 Call 0x1C17F20
	496 Call 0x1C17F20
	497 Call 0x1C17F20
	498 Call 0x1C17F20
	499 Call 0x1C17F20
	500 Call 0x1C17F20
	501 Call 0x1C17F20
	502 Call 0x1C17F20
	503 Call 0x1C17F20
	504 Call 0x1C17F20
	505 Call 0x1C17F20
	506 Call 0x1C17F20
	507 Call 0x1C17F20
	508 Call 0x1C17F20
	509 Call 0x1C17F20
	510 Move X19, X0
	511 NotImplemented "Instruction CMP not yet implemented."
	512 Move X0, X19
	513 Call 0x3EB2AD0
	514 Move X20, [X0]
	515 Call 0x3EB2AE0
	516 Add X0, X31, 392
	517 Move X1, X31
	518 Call ProfilingScope.Dispose, X0
	519 Compare X20, 0
	520 JumpIfEqual {464}
	521 Move X0, X20
	522 Call 0x1C17F18
	523 Move X20, X31
	524 Move X19, X0
	525 Add X0, X31, 392
	526 Move X1, X31
	527 Call ProfilingScope.Dispose, X0
	528 Compare X20, 0
	529 JumpIfNotEqual {532}
	530 Move X0, X19
	531 Call 0x1D2D690
	532 Move X0, X20
	533 Call 0x1C17F18
	534 Call 0x1991590

Method: System.Void OnCameraCleanup(UnityEngine.Rendering.CommandBuffer cmd)

Disassembly:
	0x03AAD444 LDR X0, [X27]
	0x03AAD448 BL 0x1C16F10
	0x03AAD44C LDR X1, [X23]
	0x03AAD450 MOV X2, X31
	0x03AAD454 MOV X23, X0
	0x03AAD458 BL 0x39B19AC
	0x03AAD45C STR X23, [X19 + 0x38]
	0x03AAD460 LDR X0, [X26]
	0x03AAD464 BL 0x1C16F10
	0x03AAD468 MOV X1, X31
	0x03AAD46C MOV X23, X0
	0x03AAD470 BL 0x33BDD8C
	0x03AAD474 STR X23, [X19 + 0x120]
	0x03AAD478 LDR X2, [X25]
	0x03AAD47C ADD X0, X31, 0x20
	0x03AAD480 MOV X1, X22
	0x03AAD484 STR W31, [X31 + 0x28]
	0x03AAD488 STR X31, [X31 + 0x20]
	0x03AAD48C BL 0x2439504
	0x03AAD490 AND X0, X21, 0x0
	0x03AAD494 MOV X1, X31
	0x03AAD498 BL 0x3C35CB8
	0x03AAD49C LDR X1, [X31 + 0x20]
	0x03AAD4A0 LDR W2, [X31 + 0x28]
	0x03AAD4A4 MOV W3, W0
	0x03AAD4A8 ADD X0, X31, 0x8
	0x03AAD4AC MOVN W4, 0x0
	0x03AAD4B0 MOV W5, W31
	0x03AAD4B4 MOV X6, X31
	0x03AAD4B8 STP X31, X31, [X31 + 0x8]
	0x03AAD4BC STR X31, [X31 + 0x18]
	0x03AAD4C0 BL 0x3C53F40
	0x03AAD4C4 LDR X8, [X31 + 0x18]
	0x03AAD4C8 LDUR V0, [X31 + 0x8]
	0x03AAD4CC ADD X9, X19, 0x104
	0x03AAD4D0 STR X8, [X9 + 0x10]
	0x03AAD4D4 STR V0, [X9]
	0x03AAD4D8 STR W20, [X19 + 0x10]
	0x03AAD4DC STRB W31, [X19 + 0x42]
	0x03AAD4E0 LDR X0, [X24]
	0x03AAD4E4 LDR W8, [X0 + 0xE0]
	0x03AAD4E8 CBNZ W8, 0x3AAD4F4
	0x03AAD4EC BL 0x1C16DFC
	0x03AAD4F0 LDR X0, [X24]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x936000
	006 Move W8, [X21+1075]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x6A7000
	014 Move X0, [X0+4080]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+1075], W8
	018 Compare X20, 0
	019 JumpIfEqual {36}
	020 Move X20, 0x6A7000
	021 Move X20, [X20+4080]
	022 Move X0, [X20]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {28}
	026 Call 0x1C17DFC
	027 Move X0, [X20]
	028 Move X8, [X0+184]
	029 Move X8, [X8]
	030 Move [X19+232], X8
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X30, [X31+32]
	034 Move X21, [X31+40]
	035 Return 
	036 Move X0, 0x64C000
	037 Move X0, [X0+1320]
	038 Call 0x1C17D08
	039 Call 0x1C17F10
	040 Move X19, X0
	041 Move X0, 0x6A9000
	042 Move X0, [X0+1776]
	043 Call 0x1C17D08
	044 Move X1, X0
	045 Move X0, X19
	046 Move X2, X31
	047 Call ArgumentNullException..ctor, X0, X1
	048 Move X0, 0x6AB000
	049 Move X0, [X0+3624]
	050 Call 0x1C17D08
	051 Move X1, X0
	052 Move X0, X19
	053 Call 0x1C17DEC

Method: System.Void Render(UnityEngine.Experimental.Rendering.RenderGraphModule.RenderGraph renderGraph, out UnityEngine.Experimental.Rendering.RenderGraphModule.TextureHandle destination, in UnityEngine.Experimental.Rendering.RenderGraphModule.TextureHandle source, ref UnityEngine.Rendering.Universal.RenderingData renderingData)

Disassembly:
	0x03AAD4F4 LDR X8, [X0 + 0xB8]
	0x03AAD4F8 LDP X22, X21, [X31 + 0x60]
	0x03AAD4FC LDP X24, X23, [X31 + 0x50]
	0x03AAD500 LDP X26, X25, [X31 + 0x40]
	0x03AAD504 LDR X8, [X8]
	0x03AAD508 LDP X30, X27, [X31 + 0x30]
	0x03AAD50C STR X8, [X19 + 0xE0]
	0x03AAD510 LDP X20, X19, [X31 + 0x70]
	0x03AAD514 ADD X31, X31, 0x80
	0x03AAD518 RET
	0x03AAD51C MOV X1, X31
	0x03AAD520 B 0x33BDD8C
	0x03AAD524 STR X30, [X31 - 0x20]!
	0x03AAD528 STP X20, X19, [X31 + 0x10]
	0x03AAD52C ADRP X20, 0x935000
	0x03AAD530 ADRP X19, 0x6A7000
	0x03AAD534 LDRB W8, [X20 + 0x43D]
	0x03AAD538 LDR X19, [X19 + 0x10]
	0x03AAD53C TBNZ X8, 0x0, 0x3AAD554
	0x03AAD540 ADRP X0, 0x6A7000
	0x03AAD544 LDR X0, [X0 + 0x10]
	0x03AAD548 BL 0x1C16CF4
	0x03AAD54C MOVZ W8, 0x1
	0x03AAD550 STRB W8, [X20 + 0x43D]
	0x03AAD554 LDR X0, [X19]
	0x03AAD558 LDR W8, [X0 + 0xE0]
	0x03AAD55C CBNZ W8, 0x3AAD564
	0x03AAD560 BL 0x1C16DFC
	0x03AAD564 MOVZ W0, 0xC
	0x03AAD568 MOVZ W1, 0x4
	0x03AAD56C MOV X2, X31
	0x03AAD570 BL 0x3A6ED54
	0x03AAD574 TBZ X0, 0x0, 0x3AAD580
	0x03AAD578 MOVZ W0, 0xC
	0x03AAD57C B 0x3AAD5B0
	0x03AAD580 LDR X0, [X19]
	0x03AAD584 LDR W8, [X0 + 0xE0]
	0x03AAD588 CBNZ W8, 0x3AAD590
	0x03AAD58C BL 0x1C16DFC
	0x03AAD590 MOVZ W0, 0x30
	0x03AAD594 MOVZ W1, 0x4
	0x03AAD598 MOV X2, X31
	0x03AAD59C MOVZ W19, 0x30
	0x03AAD5A0 BL 0x3A6ED54
	0x03AAD5A4 ANDS W31, W0, 0x1
	0x03AAD5A8 MOVZ W8, 0x34
	0x03AAD5AC CSEL W0, W19, W8, NE
	0x03AAD5B0 LDP X20, X19, [X31 + 0x10]
	0x03AAD5B4 LDR X30, [X31], #0x20
	0x03AAD5B8 RET
	0x03AAD5BC STP X1, X2, [X0 + 0xE8]
	0x03AAD5C0 STRB W31, [X0 + 0x100]
	0x03AAD5C4 RET
	0x03AAD5C8 MOVZ W8, 0x1
	0x03AAD5CC STP X1, X2, [X0 + 0xE8]
	0x03AAD5D0 STR X3, [X0 + 0xF8]
	0x03AAD5D4 STRB W8, [X0 + 0x100]
	0x03AAD5D8 RET
	0x03AAD5DC STP X30, X23, [X31 - 0x30]!
	0x03AAD5E0 STP X22, X21, [X31 + 0x10]
	0x03AAD5E4 STP X20, X19, [X31 + 0x20]
	0x03AAD5E8 ADRP X21, 0x935000
	0x03AAD5EC ADRP X22, 0x6AA000
	0x03AAD5F0 LDRB W8, [X21 + 0x43E]
	0x03AAD5F4 LDR X22, [X22 + 0x158]
	0x03AAD5F8 MOV X20, X2
	0x03AAD5FC MOV X19, X0
	0x03AAD600 TBNZ X8, 0x0, 0x3AAD618
	0x03AAD604 ADRP X0, 0x6AA000
	0x03AAD608 LDR X0, [X0 + 0x158]
	0x03AAD60C BL 0x1C16CF4
	0x03AAD610 MOVZ W8, 0x1
	0x03AAD614 STRB W8, [X21 + 0x43E]
	0x03AAD618 LDR X0, [X22]
	0x03AAD61C LDRB W21, [X19 + 0x100]
	0x03AAD620 LDR W8, [X0 + 0xE0]
	0x03AAD624 CBNZ W8, 0x3AAD630
	0x03AAD628 BL 0x1C16DFC
	0x03AAD62C LDR X0, [X22]
	0x03AAD630 LDR X8, [X0 + 0xB8]
	0x03AAD634 CBZ W21, 0x3AAD6AC
	0x03AAD638 LDR X23, [X8 + 0x10]
	0x03AAD63C CBZ X23, 0x3AAD75C
	0x03AAD640 LDR X21, [X19 + 0xF0]
	0x03AAD644 CBZ X21, 0x3AAD65C
	0x03AAD648 LDR X8, [X23]
	0x03AAD64C MOV X0, X21
	0x03AAD650 LDR X1, [X8 + 0x40]
	0x03AAD654 BL 0x1C16E00
	0x03AAD658 CBZ X0, 0x3AAD764
	0x03AAD65C LDR W8, [X23 + 0x18]
	0x03AAD660 CBZ W8, 0x3AAD760
	0x03AAD664 STR X21, [X23 + 0x20]
	0x03AAD668 LDR X8, [X22]
	0x03AAD66C LDR X8, [X8 + 0xB8]
	0x03AAD670 LDR X23, [X8 + 0x10]
	0x03AAD674 CBZ X23, 0x3AAD75C
	0x03AAD678 LDR X21, [X19 + 0xF8]
	0x03AAD67C CBZ X21, 0x3AAD694
	0x03AAD680 LDR X8, [X23]
	0x03AAD684 MOV X0, X21
	0x03AAD688 LDR X1, [X8 + 0x40]
	0x03AAD68C BL 0x1C16E00
	0x03AAD690 CBZ X0, 0x3AAD764
	0x03AAD694 LDR W8, [X23 + 0x18]
	0x03AAD698 CMP W8, 0x1
	0x03AAD69C B.LS 0x3AAD760
	0x03AAD6A0 STR X21, [X23 + 0x28]
	0x03AAD6A4 MOVZ W8, 0x10
	0x03AAD6A8 B 0x3AAD6E0
	0x03AAD6AC LDR X23, [X8 + 0x8]
	0x03AAD6B0 CBZ X23, 0x3AAD75C
	0x03AAD6B4 LDR X21, [X19 + 0xF0]
	0x03AAD6B8 CBZ X21, 0x3AAD6D0
	0x03AAD6BC LDR X8, [X23]
	0x03AAD6C0 MOV X0, X21
	0x03AAD6C4 LDR X1, [X8 + 0x40]
	0x03AAD6C8 BL 0x1C16E00
	0x03AAD6CC CBZ X0, 0x3AAD764
	0x03AAD6D0 LDR W8, [X23 + 0x18]
	0x03AAD6D4 CBZ W8, 0x3AAD760
	0x03AAD6D8 MOVZ W8, 0x8
	0x03AAD6DC STR X21, [X23 + 0x20]
	0x03AAD6E0 LDR X0, [X20 + 0x1D0]
	0x03AAD6E4 CBZ X0, 0x3AAD75C
	0x03AAD6E8 LDR X9, [X22]
	0x03AAD6EC LDRB W10, [X0 + 0x1A5]
	0x03AAD6F0 LDR X9, [X9 + 0xB8]
	0x03AAD6F4 LDR X21, [X9, X8, LSL]
	0x03AAD6F8 CBZ W10, 0x3AAD71C
	0x03AAD6FC LDR W8, [X20 + 0xE0]
	0x03AAD700 CBZ W8, 0x3AAD70C
	0x03AAD704 LDRB W8, [X20 + 0x17C]
	0x03AAD708 CBZ W8, 0x3AAD71C
	0x03AAD70C MOV X1, X31
	0x03AAD710 BL 0x3A49678
	0x03AAD714 MOV X2, X0
	0x03AAD718 B 0x3AAD720
	0x03AAD71C LDR X2, [X19 + 0xE8]
	0x03AAD720 MOV X0, X19
	0x03AAD724 MOV X1, X21
	0x03AAD728 MOV X3, X31
	0x03AAD72C BL 0x3A42A44
	0x03AAD730 MOV X0, X19
	0x03AAD734 LDP X20, X19, [X31 + 0x20]
	0x03AAD738 LDP X22, X21, [X31 + 0x10]
	0x03AAD73C FMOV S0, W31
	0x03AAD740 FMOV S1, W31
	0x03AAD744 FMOV S2, W31
	0x03AAD748 FMOV S3, 1
	0x03AAD74C MOVZ W1, 0x7
	0x03AAD750 MOV X2, X31
	0x03AAD754 LDP X30, X23, [X31], #0x30
	0x03AAD758 B 0x3A44510
	0x03AAD75C BL 0x1C16F20
	0x03AAD760 BL 0x1C16F28
	0x03AAD764 BL 0x1C16F44
	0x03AAD768 MOV X1, X31
	0x03AAD76C BL 0x1C16DEC
	0x03AAD770 STR X29, [X31 - 0x60]!
	0x03AAD774 STP X30, X27, [X31 + 0x10]
	0x03AAD778 STP X26, X25, [X31 + 0x20]
	0x03AAD77C STP X24, X23, [X31 + 0x30]
	0x03AAD780 STP X22, X21, [X31 + 0x40]
	0x03AAD784 STP X20, X19, [X31 + 0x50]
	0x03AAD788 SUB X31, X31, 0x1D0
	0x03AAD78C MRS X24, 0xC000
	0x03AAD790 LDR X8, [X24 + 0x28]
	0x03AAD794 ADRP X19, 0x935000
	0x03AAD798 MOV X21, X2
	0x03AAD79C MOV X20, X1
	0x03AAD7A0 STR X8, [X31 + 0x1C8]
	0x03AAD7A4 LDRB W8, [X19 + 0x43F]
	0x03AAD7A8 STR X0, [X31 + 0x30]
	0x03AAD7AC TBNZ X8, 0x0, 0x3AAD800
	0x03AAD7B0 ADRP X0, 0x66E000
	0x03AAD7B4 LDR X0, [X0 + 0x8F8]
	0x03AAD7B8 BL 0x1C16CF4
	0x03AAD7BC ADRP X0, 0x6A7000
	0x03AAD7C0 LDR X0, [X0 + 0xB8]
	0x03AAD7C4 BL 0x1C16CF4
	0x03AAD7C8 ADRP X0, 0x6A7000
	0x03AAD7CC LDR X0, [X0 + 0xA8]
	0x03AAD7D0 BL 0x1C16CF4
	0x03AAD7D4 ADRP X0, 0x6A7000
	0x03AAD7D8 LDR X0, [X0 + 0x10]
	0x03AAD7DC BL 0x1C16CF4
	0x03AAD7E0 ADRP X0, 0x6A3000
	0x03AAD7E4 LDR X0, [X0 + 0xC80]
	0x03AAD7E8 BL 0x1C16CF4
	0x03AAD7EC ADRP X0, 0x6AA000
	0x03AAD7F0 LDR X0, [X0 + 0xEC8]
	0x03AAD7F4 BL 0x1C16CF4
	0x03AAD7F8 MOVZ W8, 0x1
	0x03AAD7FC STRB W8, [X19 + 0x43F]
	0x03AAD800 ADD X0, X31, 0x100
	0x03AAD804 MOVZ W2, 0xC4
	0x03AAD808 MOV W1, W31
	0x03AAD80C STRB W31, [X31 + 0x8]
	0x03AAD810 BL 0x3EB1B10
	0x03AAD814 CBZ X20, 0x3AADA28
	0x03AAD818 ADRP X8, 0x6A7000
	0x03AAD81C LDR X8, [X8 + 0xA8]
	0x03AAD820 LDR X9, [X20 + 0x2F0]
	0x03AAD824 LDR V0, [X20 + 0x2E]
	0x03AAD828 ADRP X25, 0x6A3000
	0x03AAD82C LDR X1, [X8]
	0x03AAD830 LDR X19, [X21]
	0x03AAD834 LDR X22, [X20 + 0x2D8]
	0x03AAD838 LDR X25, [X25 + 0xC80]
	0x03AAD83C MOVZ W0, 0x7
	0x03AAD840 STR X9, [X31 + 0x20]
	0x03AAD844 STR V0, [X31 + 0x1]
	0x03AAD848 BL 0x2235BC0
	0x03AAD84C MOV X2, X0
	0x03AAD850 ADD X0, X31, 0x8
	0x03AAD854 MOV X1, X19
	0x03AAD858 MOV X3, X31
	0x03AAD85C BL 0x39B1DB0
	0x03AAD860 LDR X0, [X25]
	0x03AAD864 LDR W8, [X0 + 0xE0]
	0x03AAD868 CBNZ W8, 0x3AAD870
	0x03AAD86C BL 0x1C16DFC
	0x03AAD870 ADD X0, X31, 0x30
	0x03AAD874 MOV X1, X19
	0x03AAD878 MOV X2, X31
	0x03AAD87C BL 0x3C58FE4
	0x03AAD880 CBZ X19, 0x3AADA2C
	0x03AAD884 MOV X0, X19
	0x03AAD888 MOV X1, X31
	0x03AAD88C BL 0x3C4C310
	0x03AAD890 ADRP X27, 0x66E000
	0x03AAD894 ADRP X26, 0x6AA000
	0x03AAD898 LDRB W8, [X20 + 0x2F8]
	0x03AAD89C LDR X27, [X27 + 0x8F8]
	0x03AAD8A0 LDR X26, [X26 + 0xEC8]
	0x03AAD8A4 CBZ W8, 0x3AAD8F8
	0x03AAD8A8 LDR X0, [X27]
	0x03AAD8AC LDR W8, [X0 + 0xE0]
	0x03AAD8B0 CBNZ W8, 0x3AAD8B8
	0x03AAD8B4 BL 0x1C16DFC
	0x03AAD8B8 LDR X1, [X26]
	0x03AAD8BC MOVZ W2, 0x1
	0x03AAD8C0 MOV X0, X19
	0x03AAD8C4 MOV X3, X31
	0x03AAD8C8 BL 0x39E9618
	0x03AAD8CC LDR X0, [X25]
	0x03AAD8D0 LDR W8, [X0 + 0xE0]
	0x03AAD8D4 CBNZ W8, 0x3AAD8DC
	0x03AAD8D8 BL 0x1C16DFC
	0x03AAD8DC ADD X0, X31, 0x30
	0x03AAD8E0 MOV X1, X19
	0x03AAD8E4 MOV X2, X31
	0x03AAD8E8 BL 0x3C58FE4
	0x03AAD8EC MOV X0, X19
	0x03AAD8F0 MOV X1, X31
	0x03AAD8F4 BL 0x3C4C310
	0x03AAD8F8 ADRP X8, 0x6A7000
	0x03AAD8FC LDR X8, [X8 + 0x10]
	0x03AAD900 LDR W23, [X21 + 0x18C]
	0x03AAD904 LDR X0, [X8]
	0x03AAD908 LDR W8, [X0 + 0xE0]
	0x03AAD90C CBNZ W8, 0x3AAD914
	0x03AAD910 BL 0x1C16DFC
	0x03AAD914 ADD X8, X31, 0x38
	0x03AAD918 MOV X0, X22
	0x03AAD91C MOV X1, X21
	0x03AAD920 MOV W2, W23
	0x03AAD924 MOV X3, X31
	0x03AAD928 BL 0x3A7358C
	0x03AAD92C ADRP X22, 0x6A7000
	0x03AAD930 LDR X22, [X22 + 0xB8]
	0x03AAD934 ADD X0, X31, 0x100
	0x03AAD938 ADD X1, X31, 0x38
	0x03AAD93C MOVZ W2, 0xC4
	0x03AAD940 BL 0x3EB1AC0
	0x03AAD944 LDR X0, [X22]
	0x03AAD948 LDR W8, [X0 + 0xE0]
	0x03AAD94C CBNZ W8, 0x3AAD954
	0x03AAD950 BL 0x1C16DFC
	0x03AAD954 ADD X0, X31, 0x100
	0x03AAD958 MOV W1, W31
	0x03AAD95C MOV X2, X31
	0x03AAD960 BL 0x3C536B4
	0x03AAD964 LDR X0, [X25]
	0x03AAD968 LDP X22, X21, [X21 + 0x8]
	0x03AAD96C LDR W8, [X0 + 0xE0]
	0x03AAD970 CBNZ W8, 0x3AAD978
	0x03AAD974 BL 0x1C16DFC
	0x03AAD978 ADD X0, X31, 0x30
	0x03AAD97C ADD X3, X31, 0x100
	0x03AAD980 ADD X4, X31, 0x10
	0x03AAD984 MOV X1, X22
	0x03AAD988 MOV X2, X21
	0x03AAD98C MOV X5, X31
	0x03AAD990 BL 0x3C58AC8
	0x03AAD994 LDRB W8, [X20 + 0x2F8]
	0x03AAD998 CBZ W8, 0x3AAD9EC
	0x03AAD99C LDR X0, [X27]
	0x03AAD9A0 LDR W8, [X0 + 0xE0]
	0x03AAD9A4 CBNZ W8, 0x3AAD9AC
	0x03AAD9A8 BL 0x1C16DFC
	0x03AAD9AC LDR X1, [X26]
	0x03AAD9B0 MOV X0, X19
	0x03AAD9B4 MOV W2, W31
	0x03AAD9B8 MOV X3, X31
	0x03AAD9BC BL 0x39E9618
	0x03AAD9C0 LDR X0, [X25]
	0x03AAD9C4 LDR W8, [X0 + 0xE0]
	0x03AAD9C8 CBNZ W8, 0x3AAD9D0
	0x03AAD9CC BL 0x1C16DFC
	0x03AAD9D0 ADD X0, X31, 0x30
	0x03AAD9D4 MOV X1, X19
	0x03AAD9D8 MOV X2, X31
	0x03AAD9DC BL 0x3C58FE4
	0x03AAD9E0 MOV X0, X19
	0x03AAD9E4 MOV X1, X31
	0x03AAD9E8 BL 0x3C4C310
	0x03AAD9EC ADD X0, X31, 0x8
	0x03AAD9F0 MOV X1, X31
	0x03AAD9F4 BL 0x39B1DB4
	0x03AAD9F8 LDR X8, [X24 + 0x28]
	0x03AAD9FC LDR X9, [X31 + 0x1C8]
	0x03AADA00 CMP X8, X9
	0x03AADA04 B.NE 0x3AADA30
	0x03AADA08 ADD X31, X31, 0x1D0
	0x03AADA0C LDP X20, X19, [X31 + 0x50]
	0x03AADA10 LDP X22, X21, [X31 + 0x40]
	0x03AADA14 LDP X24, X23, [X31 + 0x30]
	0x03AADA18 LDP X26, X25, [X31 + 0x20]
	0x03AADA1C LDP X30, X27, [X31 + 0x10]
	0x03AADA20 LDR X29, [X31], #0x60
	0x03AADA24 RET
	0x03AADA28 BL 0x1C16F20
	0x03AADA2C BL 0x1C16F20
	0x03AADA30 BL 0x3EB1B20
	0x03AADA34 B 0x3AADA60
	0x03AADA38 B 0x3AADA60
	0x03AADA3C B 0x3AADA60
	0x03AADA40 B 0x3AADA60
	0x03AADA44 B 0x3AADA60
	0x03AADA48 B 0x3AADA60
	0x03AADA4C B 0x3AADA60
	0x03AADA50 B 0x3AADA60
	0x03AADA54 B 0x3AADA60
	0x03AADA58 B 0x3AADA60
	0x03AADA5C B 0x3AADA60
	0x03AADA60 MOV X19, X0
	0x03AADA64 CMP W1, 0x1
	0x03AADA68 B.NE 0x3AADA94
	0x03AADA6C MOV X0, X19
	0x03AADA70 BL 0x3EB1AD0
	0x03AADA74 LDR X20, [X0]
	0x03AADA78 BL 0x3EB1AE0
	0x03AADA7C ADD X0, X31, 0x8
	0x03AADA80 MOV X1, X31
	0x03AADA84 BL 0x39B1DB4
	0x03AADA88 CBZ X20, 0x3AAD9F8
	0x03AADA8C MOV X0, X20
	0x03AADA90 BL 0x1C16F18
	0x03AADA94 MOV X20, X31
	0x03AADA98 B 0x3AADAA0
	0x03AADA9C MOV X19, X0
	0x03AADAA0 ADD X0, X31, 0x8
	0x03AADAA4 MOV X1, X31
	0x03AADAA8 BL 0x39B1DB4
	0x03AADAAC CBNZ X20, 0x3AADAB8
	0x03AADAB0 MOV X0, X19
	0x03AADAB4 BL 0x1D2C690
	0x03AADAB8 MOV X0, X20
	0x03AADABC BL 0x1C16F18
	0x03AADAC0 BL 0x1990590
	0x03AADAC4 STR X30, [X31 - 0x30]!
	0x03AADAC8 STP X22, X21, [X31 + 0x10]
	0x03AADACC STP X20, X19, [X31 + 0x20]
	0x03AADAD0 ADRP X22, 0x935000
	0x03AADAD4 LDRB W8, [X22 + 0x440]
	0x03AADAD8 MOV X19, X2
	0x03AADADC MOV X20, X1
	0x03AADAE0 MOV X21, X0
	0x03AADAE4 TBNZ X8, 0x0, 0x3AADAFC
	0x03AADAE8 ADRP X0, 0x6AA000
	0x03AADAEC LDR X0, [X0 + 0x158]
	0x03AADAF0 BL 0x1C16CF4
	0x03AADAF4 MOVZ W8, 0x1
	0x03AADAF8 STRB W8, [X22 + 0x440]
	0x03AADAFC LDR X8, [X21 + 0x120]
	0x03AADB00 CBZ X8, 0x3AADB64
	0x03AADB04 LDR X9, [X21 + 0xE0]
	0x03AADB08 ADD X10, X21, 0x104
	0x03AADB0C STR X9, [X8 + 0x2D8]
	0x03AADB10 LDR X9, [X10 + 0x10]
	0x03AADB14 LDR V0, [X10]
	0x03AADB18 STR X9, [X8 + 0x2F0]
	0x03AADB1C STR V0, [X8 + 0x2E]
	0x03AADB20 LDR X22, [X21 + 0x120]
	0x03AADB24 CBZ X22, 0x3AADB64
	0x03AADB28 LDRB W8, [X21 + 0x100]
	0x03AADB2C ADRP X9, 0x6AA000
	0x03AADB30 LDR X9, [X9 + 0x158]
	0x03AADB34 STRB W8, [X22 + 0x2F8]
	0x03AADB38 LDR X0, [X9]
	0x03AADB3C LDR W8, [X0 + 0xE0]
	0x03AADB40 CBNZ W8, 0x3AADB48
	0x03AADB44 BL 0x1C16DFC
	0x03AADB48 MOV X0, X20
	0x03AADB4C MOV X1, X22
	0x03AADB50 MOV X2, X19
	0x03AADB54 LDP X20, X19, [X31 + 0x20]
	0x03AADB58 LDP X22, X21, [X31 + 0x10]
	0x03AADB5C LDR X30, [X31], #0x30
	0x03AADB60 B 0x3AAD770
	0x03AADB64 BL 0x1C16F20
	0x03AADB68 STP X30, X21, [X31 - 0x20]!
	0x03AADB6C STP X20, X19, [X31 + 0x10]
	0x03AADB70 ADRP X21, 0x935000
	0x03AADB74 LDRB W8, [X21 + 0x441]

ISIL:
	001 Subtract X31, X31, 400
	002 Move [X31+304], X29
	003 Move [X31+312], X30
	004 Move [X31+320], X28
	005 Move [X31+328], X27
	006 Move [X31+336], X26
	007 Move [X31+344], X25
	008 Move [X31+352], X24
	009 Move [X31+360], X23
	010 Move [X31+368], X22
	011 Move [X31+376], X21
	012 Move [X31+384], X20
	013 Move [X31+392], X19
	014 Move X24, 0x936000
	015 Move W8, [X24+1076]
	016 Move X20, X4
	017 Move X23, X3
	018 Move X19, X2
	019 Move X21, X1
	020 Move X22, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {63}
	025 Move X0, 0x6AB000
	026 Move X0, [X0+3632]
	027 Call 0x1C17CF4
	028 Move X0, 0x6AB000
	029 Move X0, [X0+3640]
	030 Call 0x1C17CF4
	031 Move X0, 0x6AB000
	032 Move X0, [X0+3648]
	033 Call 0x1C17CF4
	034 Move X0, 0x6AB000
	035 Move X0, [X0+3656]
	036 Call 0x1C17CF4
	037 Move X0, 0x6AB000
	038 Move X0, [X0+3664]
	039 Call 0x1C17CF4
	040 Move X0, 0x6AB000
	041 Move X0, [X0+3672]
	042 Call 0x1C17CF4
	043 Move X0, 0x6AB000
	044 Move X0, [X0+3680]
	045 Call 0x1C17CF4
	046 Move X0, 0x6A7000
	047 Move X0, [X0+4088]
	048 Call 0x1C17CF4
	049 Move X0, 0x6AB000
	050 Move X0, [X0+3688]
	051 Call 0x1C17CF4
	052 Move X0, 0x6AA000
	053 Move X0, [X0+4056]
	054 Call 0x1C17CF4
	055 Move X0, 0x6AB000
	056 Move X0, [X0+3696]
	057 Call 0x1C17CF4
	058 Move X0, 0x6AB000
	059 Move X0, [X0+3704]
	060 Call 0x1C17CF4
	061 Move W8, 1
	062 Move [X24+1076], W8
	063 NotImplemented "Instruction MOVI not yet implemented."
	064 Move TEMP, 0
	065 Not TEMP
	066 Move W8, TEMP
	067 Move [X31+264], X31
	068 Move [X31+216], X31
	069 Move [X31+208], W31
	070 Move [X31+120], X31
	071 Move [X31+272], V0
	072 Move [X31+280], V0
	073 Move [X31+224], V0
	074 Move [X31+232], V0
	075 Move [X31+176], V0
	076 Move [X31+184], V0
	077 Move [X31+144], V0
	078 Move [X31+152], V0
	079 Move [X31+8], V0
	080 Move [X22+240], W8
	081 Compare X21, 0
	082 JumpIfEqual {377}
	083 Move X8, 0x6AB000
	084 Move X28, 0x6AB000
	085 Move X8, [X8+3696]
	086 Move X28, [X28+3648]
	087 Move X3, [X22+56]
	088 Move X27, 0x6AB000
	089 Move X1, [X8]
	090 Move X4, [X28]
	091 Move X26, 0x6AB000
	092 Move X27, [X27+3680]
	093 Move X26, [X26+3640]
	094 Add X8, X31, 64
	095 Add X2, X31, 264
	096 Move X0, X21
	097 Call 0x2241F24, X0, X1, X2, X3
	098 Move V0, [X31+64]
	099 Move V1, [X31+80]
	100 Move X24, [X31+264]
	101 Move [X31+272], V0
	102 Move [X31+280], V1
	103 Add X0, X31, 272
	104 Move X1, X23
	105 Move X2, X31
	106 Call RenderGraphBuilder.ReadTexture, X0, X1
	107 Compare X24, 0
	108 JumpIfEqual {379}
	109 Move [X24+16], X0
	110 Add X0, X31, 272
	111 Move W1, W31
	112 Move X2, X31
	113 Call RenderGraphBuilder.AllowPassCulling, X0, X1
	114 Move X8, [X27]
	115 Move W9, [X8+224]
	116 Compare W9, 0
	117 JumpIfNotEqual {121}
	118 Move X0, X8
	119 Call 0x1C17DFC
	120 Move X8, [X27]
	121 Move X9, [X8+184]
	122 Move X24, [X9+8]
	123 Compare X24, 0
	124 JumpIfNotEqual {147}
	125 Move W9, [X8+224]
	126 Compare W9, 0
	127 JumpIfNotEqual {131}
	128 Move X0, X8
	129 Call 0x1C17DFC
	130 Move X8, [X27]
	131 Move X9, 0x6AB000
	132 Move X8, [X8+184]
	133 Move X9, [X9+3632]
	134 Move X25, [X8]
	135 Move X0, [X9]
	136 Call 0x1C17F10
	137 Move X8, 0x6AB000
	138 Move X8, [X8+3656]
	139 Move X24, X0
	140 Move X2, [X8]
	141 Move X1, X25
	142 Move X3, X31
	143 Call 0x25C88AC, X0, X1, X2
	144 Move X8, [X27]
	145 Move X8, [X8+184]
	146 Move [X8+8], X24
	147 Move X2, [X26]
	148 Add X0, X31, 272
	149 Move X1, X24
	150 Call 0x224207C, X0, X1
	151 Add X0, X31, 272
	152 Move X1, X31
	153 Call RenderGraphBuilder.Dispose, X0
	154 Move X8, 0x6AB000
	155 Move X8, [X8+3704]
	156 Move X3, [X22+56]
	157 Move X4, [X28]
	158 Add X2, X31, 216
	159 Move X1, [X8]
	160 Add X8, X31, 64
	161 Move X0, X21
	162 Call 0x2241F24, X0, X1, X2, X3
	163 Move V0, [X31+64]
	164 Move V1, [X31+80]
	165 Move [X31+224], V0
	166 Move [X31+232], V1
	167 Move W8, [X20+288]
	168 Move V1, [X20+256]
	169 Move V0, [X20+272]
	170 Move V2, [X20+15]
	171 Move [X31+208], W8
	172 Move [X31+176], V1
	173 Move [X31+184], V0
	174 Move [X31+10], V2
	175 Add X0, X31, 160
	176 Move W1, 49
	177 Move X2, X31
	178 Call RenderTextureDescriptor.set_graphicsFormat, X0, X1
	179 Move [X31+188], W31
	180 Add X0, X31, 160
	181 Move W1, W31
	182 Move X2, X31
	183 Call RenderTextureDescriptor.set_depthBufferBits, X0, X1
	184 Move X8, 0x6A7000
	185 Move X8, [X8+4088]
	186 Move W9, 1
	187 Move [X31+168], W9
	188 Move V2, [X31+176]
	189 Move V0, [X31+192]
	190 Move W10, [X31+208]
	191 Move V1, [X31+10]
	192 Move X0, [X8]
	193 Move [X31+80], V2
	194 Move [X31+88], V0
	195 Move [X31+112], W10
	196 Move [X31+4], V1
	197 Move W8, [X0+224]
	198 Compare W8, 0
	199 JumpIfNotEqual {201}
	200 Call 0x1C17DFC
	201 Move X8, 0x6AA000
	202 Move X8, [X8+4056]
	203 Move V0, [X31+64]
	204 Move V1, [X31+80]
	205 Move V2, [X31+6]
	206 Move W9, [X31+112]
	207 Move X2, [X8]
	208 Move [X31], V0
	209 Move [X31+8], V1
	210 Move [X31+2], V2
	211 Move [X31+48], W9
	212 Add X1, X31, 0
	213 Move W3, 1
	214 Move W5, 1
	215 Move X0, X21
	216 Move W4, W31
	217 Move X6, X31
	218 Call UniversalRenderer.CreateRenderGraphTexture, X0, X1, X2, X3, X4, X5
	219 Move [X19], X0
	220 Move X24, [X31+216]
	221 Compare X24, 0
	222 JumpIfEqual {380}
	223 Move X8, [X22+248]
	224 Add X1, X20, 24
	225 Add X0, X24, 40
	226 Move W2, 528
	227 Move [X24+568], X8
	228 Move W8, [X22+240]
	229 Move [X24+576], W8
	230 Call 0x3EB2B30
	231 Move X8, [X20]
	232 Move [X24+32], X8
	233 Move W8, [X22+256]
	234 Move [X24+580], W8
	235 Move W8, [X22+244]
	236 Move [X24+581], W8
	237 Add X0, X31, 224
	238 Move X1, X23
	239 Move X2, X31
	240 Call RenderGraphBuilder.ReadTexture, X0, X1
	241 Move [X24+16], X0
	242 Move X23, [X31+216]
	243 Add X0, X31, 224
	244 Move X1, X19
	245 Move W2, W31
	246 Move X3, X31
	247 Call RenderGraphBuilder.UseColorBuffer, X0, X1, X2
	248 Compare X23, 0
	249 JumpIfEqual {381}
	250 Move [X23+24], X0
	251 Add X0, X31, 224
	252 Move W1, W31
	253 Move X2, X31
	254 Call RenderGraphBuilder.AllowPassCulling, X0, X1
	255 Move X8, [X27]
	256 Move W9, [X8+224]
	257 Compare W9, 0
	258 JumpIfNotEqual {262}
	259 Move X0, X8
	260 Call 0x1C17DFC
	261 Move X8, [X27]
	262 Move X9, [X8+184]
	263 Move X23, [X9+16]
	264 Compare X23, 0
	265 JumpIfNotEqual {288}
	266 Move W9, [X8+224]
	267 Compare W9, 0
	268 JumpIfNotEqual {272}
	269 Move X0, X8
	270 Call 0x1C17DFC
	271 Move X8, [X27]
	272 Move X9, 0x6AB000
	273 Move X8, [X8+184]
	274 Move X9, [X9+3632]
	275 Move X24, [X8]
	276 Move X0, [X9]
	277 Call 0x1C17F10
	278 Move X8, 0x6AB000
	279 Move X8, [X8+3664]
	280 Move X23, X0
	281 Move X2, [X8]
	282 Move X1, X24
	283 Move X3, X31
	284 Call 0x25C88AC, X0, X1, X2
	285 Move X8, [X27]
	286 Move X8, [X8+184]
	287 Move [X8+16], X23
	288 Move X2, [X26]
	289 Add X0, X31, 224
	290 Move X1, X23
	291 Call 0x224207C, X0, X1
	292 Add X0, X31, 224
	293 Move X1, X31
	294 Call RenderGraphBuilder.Dispose, X0
	295 Move X8, 0x6AB000
	296 Move X8, [X8+3688]
	297 Move X3, [X22+56]
	298 Move X4, [X28]
	299 Add X2, X31, 120
	300 Move X1, [X8]
	301 Add X8, X31, 64
	302 Move X0, X21
	303 Call 0x2241F24, X0, X1, X2, X3
	304 Move V0, [X31+64]
	305 Move V1, [X31+80]
	306 Move X21, [X31+120]
	307 Move [X31+128], V0
	308 Move [X31+136], V1
	309 Compare X21, 0
	310 JumpIfEqual {378}
	311 Move X8, [X20]
	312 Move [X21+32], X8
	313 Add X0, X31, 128
	314 Move X1, X19
	315 Move W2, W31
	316 Move X3, X31
	317 Call RenderGraphBuilder.UseColorBuffer, X0, X1, X2
	318 Move [X21+24], X0
	319 Add X0, X31, 128
	320 Move W1, W31
	321 Move X2, X31
	322 Call RenderGraphBuilder.AllowPassCulling, X0, X1
	323 Move X8, [X27]
	324 Move W9, [X8+224]
	325 Compare W9, 0
	326 JumpIfNotEqual {330}
	327 Move X0, X8
	328 Call 0x1C17DFC
	329 Move X8, [X27]
	330 Move X9, [X8+184]
	331 Move X19, [X9+24]
	332 Compare X19, 0
	333 JumpIfNotEqual {356}
	334 Move W9, [X8+224]
	335 Compare W9, 0
	336 JumpIfNotEqual {340}
	337 Move X0, X8
	338 Call 0x1C17DFC
	339 Move X8, [X27]
	340 Move X9, 0x6AB000
	341 Move X8, [X8+184]
	342 Move X9, [X9+3632]
	343 Move X20, [X8]
	344 Move X0, [X9]
	345 Call 0x1C17F10
	346 Move X8, 0x6AB000
	347 Move X8, [X8+3672]
	348 Move X19, X0
	349 Move X2, [X8]
	350 Move X1, X20
	351 Move X3, X31
	352 Call 0x25C88AC, X0, X1, X2
	353 Move X8, [X27]
	354 Move X8, [X8+184]
	355 Move [X8+24], X19
	356 Move X2, [X26]
	357 Add X0, X31, 128
	358 Move X1, X19
	359 Call 0x224207C, X0, X1
	360 Add X0, X31, 128
	361 Move X1, X31
	362 Call RenderGraphBuilder.Dispose, X0
	363 Move X20, [X31+384]
	364 Move X19, [X31+392]
	365 Move X22, [X31+368]
	366 Move X21, [X31+376]
	367 Move X24, [X31+352]
	368 Move X23, [X31+360]
	369 Move X26, [X31+336]
	370 Move X25, [X31+344]
	371 Move X28, [X31+320]
	372 Move X27, [X31+328]
	373 Move X29, [X31+304]
	374 Move X30, [X31+312]
	375 Add X31, X31, 400
	376 Return 
	377 Call 0x1C17F20
	378 Call 0x1C17F20
	379 Call 0x1C17F20
	380 Call 0x1C17F20
	381 Call 0x1C17F20
	382 Move X24, X0
	383 NotImplemented "Instruction CMP not yet implemented."
	384 Move X0, X24
	385 Call 0x3EB2AD0
	386 Move X19, [X0]
	387 Call 0x3EB2AE0
	388 Add X0, X31, 128
	389 Move X1, X31
	390 Call RenderGraphBuilder.Dispose, X0
	391 Compare X19, 0
	392 JumpIfEqual {363}
	393 Move X0, X19
	394 Call 0x1C17F18
	395 Move X19, X31
	396 Move X24, X0
	397 Add X0, X31, 128
	398 Move X1, X31
	399 Call RenderGraphBuilder.Dispose, X0
	400 Compare X19, 0
	401 JumpIfEqual {446}
	402 Move X0, X19
	403 Call 0x1C17F18
	404 Move X24, X0
	405 NotImplemented "Instruction CMP not yet implemented."
	406 Move X0, X24
	407 Call 0x3EB2AD0
	408 Move X23, [X0]
	409 Call 0x3EB2AE0
	410 Add X0, X31, 224
	411 Move X1, X31
	412 Call RenderGraphBuilder.Dispose, X0
	413 Compare X23, 0
	414 JumpIfEqual {295}
	415 Move X0, X23
	416 Call 0x1C17F18
	417 Move X23, X31
	418 Move X24, X0
	419 Add X0, X31, 224
	420 Move X1, X31
	421 Call RenderGraphBuilder.Dispose, X0
	422 Compare X23, 0
	423 JumpIfEqual {446}
	424 Move X0, X23
	425 Call 0x1C17F18
	426 Move X24, X0
	427 NotImplemented "Instruction CMP not yet implemented."
	428 Move X0, X24
	429 Call 0x3EB2AD0
	430 Move X25, [X0]
	431 Call 0x3EB2AE0
	432 Add X0, X31, 272
	433 Move X1, X31
	434 Call RenderGraphBuilder.Dispose, X0
	435 Compare X25, 0
	436 JumpIfEqual {154}
	437 Move X0, X25
	438 Call 0x1C17F18
	439 Move X25, X31
	440 Move X24, X0
	441 Add X0, X31, 272
	442 Move X1, X31
	443 Call RenderGraphBuilder.Dispose, X0
	444 Compare X25, 0
	445 JumpIfNotEqual {448}
	446 Move X0, X24
	447 Call 0x1D2D690
	448 Move X0, X25
	449 Call 0x1C17F18
	450 Call 0x1991590

