Type: UnityEngine.Rendering.Universal.Internal.RenderTargetBufferSystem

Method: UnityEngine.Rendering.Universal.Internal.RenderTargetBufferSystem/SwapBuffer get_backBuffer()

Disassembly:
	0x03AB67DC STP X6, X7, [X31 + 0x38]
	0x03AB67E0 MRS X22, 0xC000
	0x03AB67E4 LDR X8, [X22 + 0x28]
	0x03AB67E8 ADRP X19, 0x92C000
	0x03AB67EC LDR X9, [X31 + 0x1C0]
	0x03AB67F0 MOV X24, X4
	0x03AB67F4 STR X8, [X31 + 0x118]
	0x03AB67F8 LDRB W8, [X19 + 0x483]
	0x03AB67FC MOV X21, X3
	0x03AB6800 MOV W20, W2
	0x03AB6804 MOV X25, X1
	0x03AB6808 STR X0, [X31 + 0x28]
	0x03AB680C STR X9, [X31 + 0x50]
	0x03AB6810 TBNZ X8, 0x0, 0x3AB685C
	0x03AB6814 ADRP X0, 0x6A2000
	0x03AB6818 LDR X0, [X0 + 0x1E0]
	0x03AB681C BL 0x1C16CF4
	0x03AB6820 ADRP X0, 0x666000
	0x03AB6824 LDR X0, [X0 + 0xD8]
	0x03AB6828 BL 0x1C16CF4
	0x03AB682C ADRP X0, 0x6A2000
	0x03AB6830 LDR X0, [X0 + 0x1D8]
	0x03AB6834 BL 0x1C16CF4
	0x03AB6838 ADRP X0, 0x69E000
	0x03AB683C LDR X0, [X0 + 0x9C8]
	0x03AB6840 BL 0x1C16CF4
	0x03AB6844 ADRP X0, 0x694000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x92D000
	006 Move X20, 0x69F000
	007 Move W8, [X21+1142]
	008 Move X20, [X20+2280]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x69F000
	015 Move X0, [X0+2280]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+1142], W8
	019 Move X0, [X20]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {25}
	023 Call 0x1C17DFC
	024 Move X0, [X20]
	025 Move X8, [X0+184]
	026 Add X9, X19, 48
	027 Add X10, X19, 16
	028 Move X20, [X31+16]
	029 Move X19, [X31+24]
	030 Move W8, [X8]
	031 NotImplemented "Instruction CMP not yet implemented."
	032 NotImplemented "Instruction CSEL not yet implemented."
	033 Move X30, [X31+32]
	034 Move X21, [X31+40]
	035 Return X0

Method: UnityEngine.Rendering.Universal.Internal.RenderTargetBufferSystem/SwapBuffer get_frontBuffer()

Disassembly:
	0x03AB6848 LDR X0, [X0 + 0xE60]
	0x03AB684C BL 0x1C16CF4
	0x03AB6850 LDR X9, [X31 + 0x50]
	0x03AB6854 MOVZ W8, 0x1
	0x03AB6858 STRB W8, [X19 + 0x483]
	0x03AB685C ADRP X12, 0x69E000
	0x03AB6860 LDR X12, [X12 + 0x9C8]
	0x03AB6864 CMP W20, 0x1
	0x03AB6868 STP X31, X31, [X31 + 0x60]
	0x03AB686C STR W31, [X9]
	0x03AB6870 B.LT 0x3AB6A58
	0x03AB6874 LDR X8, [X31 + 0x28]
	0x03AB6878 STP X25, X24, [X31 + 0x10]
	0x03AB687C STR X22, [X31 + 0x20]
	0x03AB6880 MOV X22, X31
	0x03AB6884 MOV W9, W20
	0x03AB6888 ADD X8, X8, 0xC
	0x03AB688C MOVZ X26, 0x1
	0x03AB6890 MOVZ W24, 0x1
	0x03AB6894 MOVZ X28, 0x1
	0x03AB6898 STR W20, [X31 + 0xC]
	0x03AB689C STR X8, [X31 + 0x58]
	0x03AB68A0 STR X9, [X31 + 0x30]
	0x03AB68A4 ADD X8, X22, 0x1
	0x03AB68A8 CMP X8, X9
	0x03AB68AC STR X8, [X31 + 0x48]
	0x03AB68B0 B.CS 0x3AB6A14

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x92D000
	006 Move X20, 0x69F000
	007 Move W8, [X21+1143]
	008 Move X20, [X20+2280]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x69F000
	015 Move X0, [X0+2280]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+1143], W8
	019 Move X0, [X20]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {25}
	023 Call 0x1C17DFC
	024 Move X0, [X20]
	025 Move X8, [X0+184]
	026 Add X9, X19, 16
	027 Add X10, X19, 48
	028 Move X20, [X31+16]
	029 Move X19, [X31+24]
	030 Move W8, [X8]
	031 NotImplemented "Instruction CMP not yet implemented."
	032 NotImplemented "Instruction CSEL not yet implemented."
	033 Move X30, [X31+32]
	034 Move X21, [X31+40]
	035 Return X0

Method: System.Void .ctor(System.String name)

Disassembly:
	0x03AB68B4 LDP X8, X27, [X31 + 0x28]
	0x03AB68B8 LDR X20, [X31 + 0x58]
	0x03AB68BC MOV X23, X28
	0x03AB68C0 ADD X25, X8, X22, 0x3, LSL
	0x03AB68C4 ADD X29, X25, 0x4
	0x03AB68C8 LDR W9, [X29]
	0x03AB68CC LDR W8, [X20]
	0x03AB68D0 CMP W9, W8
	0x03AB68D4 B.EQ 0x3AB6A00
	0x03AB68D8 LDUR W10, [X20 - 0x4]
	0x03AB68DC CMP W9, W10
	0x03AB68E0 B.EQ 0x3AB6A00
	0x03AB68E4 LDR W11, [X25]
	0x03AB68E8 CMP W11, W10
	0x03AB68EC B.EQ 0x3AB6A00
	0x03AB68F0 CMP W11, W8
	0x03AB68F4 B.EQ 0x3AB6A00
	0x03AB68F8 SXTW X11, W11
	0x03AB68FC ADD X11, X21, X11, 0x4, LSL
	0x03AB6900 LDP D8, D9, [X11]
	0x03AB6904 ADRP X11, 0x694000
	0x03AB6908 LDR X11, [X11 + 0xE60]
	0x03AB690C SXTW X9, W9
	0x03AB6910 SXTW X10, W10
	0x03AB6914 ADD X9, X21, X9, 0x4, LSL
	0x03AB6918 LDR X11, [X11]
	0x03AB691C LDP D10, D11, [X9]
	0x03AB6920 ADD X9, X21, X10, 0x4, LSL
	0x03AB6924 LDR X0, [X12]
	0x03AB6928 LDR X10, [X11 + 0xB8]
	0x03AB692C SXTW X8, W8
	0x03AB6930 ADD X8, X21, X8, 0x4, LSL
	0x03AB6934 LDP D12, D13, [X9]
	0x03AB6938 LDR V0, [X10]
	0x03AB693C LDP D14, D15, [X8]
	0x03AB6940 MOV X19, X12
	0x03AB6944 STR V0, [X31 + 0x6]
	0x03AB6948 LDR W8, [X0 + 0xE0]
	0x03AB694C CBNZ W8, 0x3AB6954

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x92D000
	008 Move X22, 0x688000
	009 Move X21, 0x692000
	010 Move W8, [X23+1144]
	011 Move X22, [X22+2752]
	012 Move X21, [X21+1384]
	013 Move X20, X1
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {27}
	019 Move X0, 0x692000
	020 Move X0, [X0+1384]
	021 Call 0x1C17CF4
	022 Move X0, 0x688000
	023 Move X0, [X0+2752]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X23+1144], W8
	027 Move W8, 1
	028 Move X0, X19
	029 Move X1, X31
	030 Move [X19+84], W8
	031 Call Object..ctor, X0
	032 Move X1, [X22]
	033 Move X0, X20
	034 Move X2, X31
	035 Call String.Concat, X0, X1
	036 Move [X19+32], X0
	037 Move X1, [X21]
	038 Move X0, X20
	039 Move X2, X31
	040 Call String.Concat, X0, X1
	041 Move [X19+64], X0
	042 Move X20, [X31+32]
	043 Move X19, [X31+40]
	044 Move X22, [X31+16]
	045 Move X21, [X31+24]
	046 Move X30, [X31+48]
	047 Move X23, [X31+56]
	048 Return 

Method: System.Void Dispose()

Disassembly:
	0x03AB6950 BL 0x1C16DFC
	0x03AB6954 MOV V0.16B, V8.16B
	0x03AB6958 MOV V1.16B, V9.16B
	0x03AB695C MOV V2.16B, V10.16B
	0x03AB6960 MOV V3.16B, V11.16B
	0x03AB6964 MOV V4.16B, V12.16B
	0x03AB6968 MOV V5.16B, V13.16B
	0x03AB696C MOV V6.16B, V14.16B
	0x03AB6970 MOV V7.16B, V15.16B
	0x03AB6974 BL 0x3AB6290
	0x03AB6978 MOV X12, X19
	0x03AB697C TBZ X0, 0x0, 0x3AB6A00
	0x03AB6980 LDR X0, [X12]
	0x03AB6984 LDR W8, [X0 + 0xE0]
	0x03AB6988 CBNZ W8, 0x3AB6990
	0x03AB698C BL 0x1C16DFC
	0x03AB6990 ADD X0, X31, 0x60
	0x03AB6994 MOV V0.16B, V8.16B
	0x03AB6998 MOV V1.16B, V9.16B
	0x03AB699C MOV V2.16B, V10.16B
	0x03AB69A0 MOV V3.16B, V11.16B

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move X0, [X0+16]
	005 Compare X0, 0
	006 JumpIfEqual {9}
	007 Move X1, X31
	008 Call RTHandle.Release, X0
	009 Move X0, [X19+48]
	010 Compare X0, 0
	011 JumpIfEqual {14}
	012 Move X1, X31
	013 Call RTHandle.Release, X0
	014 Move X0, [X19+24]
	015 Compare X0, 0
	016 JumpIfEqual {19}
	017 Move X1, X31
	018 Call RTHandle.Release, X0
	019 Move X0, [X19+56]
	020 Compare X0, 0
	021 JumpIfEqual {27}
	022 Move X1, X31
	023 Move X30, [X31+16]
	024 Move X19, [X31+24]
	025 Call RTHandle.Release, X0
	026 Return 
	027 Move X30, [X31+16]
	028 Move X19, [X31+24]
	029 Return 

Method: UnityEngine.Rendering.RTHandle PeekBackBuffer()

Disassembly:
	0x03AB69A4 MOV V4.16B, V12.16B
	0x03AB69A8 MOV V5.16B, V13.16B
	0x03AB69AC MOV V6.16B, V14.16B
	0x03AB69B0 MOV V7.16B, V15.16B
	0x03AB69B4 BL 0x3AB664C
	0x03AB69B8 MOV X12, X19
	0x03AB69BC TBZ X0, 0x0, 0x3AB6A00
	0x03AB69C0 LDR X10, [X31 + 0x50]
	0x03AB69C4 LDR X11, [X31 + 0x40]
	0x03AB69C8 LDRSW X8, [X10]
	0x03AB69CC LDR W9, [X11 + 0x8]
	0x03AB69D0 CMP W8, W9
	0x03AB69D4 B.GE 0x3AB6A50
	0x03AB69D8 LDR X9, [X11]
	0x03AB69DC LDR V0, [X31 + 0x6]
	0x03AB69E0 STR V0, [X9, X8, LSL]
	0x03AB69E4 LDRSW X8, [X10]
	0x03AB69E8 ADD W9, W8, 0x1

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move W8, [X0+84]
	004 Move X19, X0
	005 Compare W8, 0
	006 JumpIfEqual {13}
	007 Move X0, X19
	008 Call RenderTargetBufferSystem.get_backBuffer, X0
	009 Move W8, [X0+24]
	010 NotImplemented "Instruction CMP not yet implemented."
	011 Move X0, X19
	012 Call RenderTargetBufferSystem.get_backBuffer, X0
	013 Move X0, X19
	014 Call RenderTargetBufferSystem.get_backBuffer, X0
	015 Add X0, X0, 8
	016 Move X0, [X0]
	017 Move X30, [X31+16]
	018 Move X19, [X31+24]
	019 Return X0

Method: UnityEngine.Rendering.RTHandle GetBackBuffer(UnityEngine.Rendering.CommandBuffer cmd)

Disassembly:
	0x03AB69EC STR W9, [X10]
	0x03AB69F0 LDR X9, [X31 + 0x38]
	0x03AB69F4 ORR X10, X23, X22, 0x0
	0x03AB69F8 LDR X9, [X9]
	0x03AB69FC STR X10, [X9, X8, LSL #3]
	0x03AB6A00 SUB X27, X27, 0x1

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Call RenderTargetBufferSystem.ReAllocate, X0, X1
	005 Move X0, X19
	006 Move X30, [X31+16]
	007 Move X19, [X31+24]
	008 Call RenderTargetBufferSystem.PeekBackBuffer, X0
	009 Return X0

Method: UnityEngine.Rendering.RTHandle GetFrontBuffer(UnityEngine.Rendering.CommandBuffer cmd)

Disassembly:
	0x03AB6C5C LDP D8, D9, [X19 - 0x8]
	0x03AB6C60 LDR W8, [X0 + 0xE0]
	0x03AB6C64 CBNZ W8, 0x3AB6C6C
	0x03AB6C68 BL 0x1C16DFC
	0x03AB6C6C MOV V0.16B, V13.16B
	0x03AB6C70 MOV V1.16B, V12.16B
	0x03AB6C74 MOV V2.16B, V11.16B
	0x03AB6C78 MOV V3.16B, V10.16B
	0x03AB6C7C MOV V4.16B, V8.16B
	0x03AB6C80 MOV V5.16B, V9.16B
	0x03AB6C84 MOV V6.16B, V8.16B
	0x03AB6C88 MOV V7.16B, V9.16B
	0x03AB6C8C BL 0x3AB6290
	0x03AB6C90 TBZ X0, 0x0, 0x3AB6CB8
	0x03AB6C94 LDRSW X8, [X25]
	0x03AB6C98 LDR X9, [X31 + 0x28]
	0x03AB6C9C CMP W8, W9
	0x03AB6CA0 B.GE 0x3AB6CE4
	0x03AB6CA4 ADD W9, W8, 0x1
	0x03AB6CA8 STR W9, [X25]
	0x03AB6CAC LDR X9, [X31 + 0x20]
	0x03AB6CB0 ORR X10, X24, X26, 0x0
	0x03AB6CB4 STR X10, [X9, X8, LSL #3]
	0x03AB6CB8 ADD X21, X21, 0x1
	0x03AB6CBC ADD X24, X24, X23
	0x03AB6CC0 CMP X28, X21
	0x03AB6CC4 ADD X19, X19, 0x10
	0x03AB6CC8 B.NE 0x3AB6C28
	0x03AB6CCC LDR X8, [X31 + 0x10]
	0x03AB6CD0 ADD X26, X26, 0x1
	0x03AB6CD4 CMP X26, X8
	0x03AB6CD8 CSET W8, CC
	0x03AB6CDC B.NE 0x3AB6C04
	0x03AB6CE0 B 0x3AB6CF0
	0x03AB6CE4 LDR W8, [X31 + 0x18]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W8, [X0+84]
	005 Move X19, X0
	006 Move X20, X1
	007 Compare W8, 0
	008 JumpIfNotEqual {17}
	009 Move X0, X19
	010 Call RenderTargetBufferSystem.get_frontBuffer, X0
	011 Move W8, [X0+24]
	012 NotImplemented "Instruction CMP not yet implemented."
	013 Move X0, X19
	014 Call RenderTargetBufferSystem.get_frontBuffer, X0
	015 Move W8, 1
	016 Move [X0+24], W8
	017 Move X0, X19
	018 Move X1, X20
	019 Call RenderTargetBufferSystem.ReAllocate, X0, X1
	020 Move W8, [X19+84]
	021 Compare W8, 0
	022 JumpIfEqual {29}
	023 Move X0, X19
	024 Call RenderTargetBufferSystem.get_frontBuffer, X0
	025 Move W8, [X0+24]
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move X0, X19
	028 Call RenderTargetBufferSystem.get_frontBuffer, X0
	029 Move X0, X19
	030 Call RenderTargetBufferSystem.get_frontBuffer, X0
	031 Add X0, X0, 8
	032 Move X0, [X0]
	033 Move X20, [X31+16]
	034 Move X19, [X31+24]
	035 Move X30, [X31+32]
	036 Return X0

Method: System.Void Swap()

Disassembly:
	0x03AB6CE8 B 0x3AB6CF0
	0x03AB6CEC MOV W8, W31
	0x03AB6CF0 LDP X20, X19, [X31 + 0xB0]
	0x03AB6CF4 LDP X22, X21, [X31 + 0xA0]
	0x03AB6CF8 LDP X24, X23, [X31 + 0x90]
	0x03AB6CFC LDP X26, X25, [X31 + 0x80]
	0x03AB6D00 LDP X28, X27, [X31 + 0x70]
	0x03AB6D04 LDP X29, X30, [X31 + 0x60]
	0x03AB6D08 LDP D9, D8, [X31 + 0x50]
	0x03AB6D0C LDP D11, D10, [X31 + 0x40]
	0x03AB6D10 LDP D13, D12, [X31 + 0x30]
	0x03AB6D14 ORN W8, W31, W8, 0x0
	0x03AB6D18 AND W0, W8, 0x1
	0x03AB6D1C ADD X31, X31, 0xC0
	0x03AB6D20 RET
	0x03AB6D24 SUB X31, X31, 0x60
	0x03AB6D28 STP X30, X27, [X31 + 0x10]
	0x03AB6D2C STP X26, X25, [X31 + 0x20]
	0x03AB6D30 STP X24, X23, [X31 + 0x30]
	0x03AB6D34 STP X22, X21, [X31 + 0x40]
	0x03AB6D38 STP X20, X19, [X31 + 0x50]
	0x03AB6D3C ADRP X27, 0x92C000
	0x03AB6D40 LDRB W8, [X27 + 0x485]
	0x03AB6D44 LDR W26, [X31 + 0x70]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x92D000
	005 Move X19, 0x69F000
	006 Move W8, [X20+1145]
	007 Move X19, [X19+2280]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x69F000
	013 Move X0, [X0+2280]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+1145], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {23}
	021 Call 0x1C17DFC
	022 Move X0, [X19]
	023 Move X8, [X0+184]
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move W9, [X8]
	027 Xor W9, W9, 1
	028 Move [X8], W9
	029 Move X30, [X31+32]
	030 Return 

Method: System.Void ReAllocate(UnityEngine.Rendering.CommandBuffer cmd)

Disassembly:
	0x03AB6A04 ADD X23, X23, X26
	0x03AB6A08 CMP X24, X27
	0x03AB6A0C ADD X20, X20, 0x8
	0x03AB6A10 B.NE 0x3AB68C8
	0x03AB6A14 LDR X9, [X31 + 0x30]
	0x03AB6A18 LDR X22, [X31 + 0x48]
	0x03AB6A1C LDR X8, [X31 + 0x58]
	0x03AB6A20 ADD X24, X24, 0x1
	0x03AB6A24 ADD X28, X28, X26
	0x03AB6A28 CMP X22, X9
	0x03AB6A2C ADD X8, X8, 0x8
	0x03AB6A30 STR X8, [X31 + 0x58]
	0x03AB6A34 B.NE 0x3AB68A4
	0x03AB6A38 LDR X9, [X31 + 0x50]
	0x03AB6A3C LDP X24, X22, [X31 + 0x18]
	0x03AB6A40 LDR X25, [X31 + 0x10]
	0x03AB6A44 LDR W20, [X31 + 0xC]
	0x03AB6A48 LDR W19, [X9]
	0x03AB6A4C B 0x3AB6A5C
	0x03AB6A50 LDR X22, [X31 + 0x20]
	0x03AB6A54 B 0x3AB6A8C
	0x03AB6A58 MOV W19, W31
	0x03AB6A5C LDR X0, [X12]
	0x03AB6A60 LDR W8, [X0 + 0xE0]
	0x03AB6A64 CBNZ W8, 0x3AB6A78
	0x03AB6A68 MOV X23, X12
	0x03AB6A6C BL 0x1C16DFC
	0x03AB6A70 LDR X9, [X31 + 0x50]
	0x03AB6A74 LDR X0, [X23]
	0x03AB6A78 LDR X8, [X0 + 0xB8]
	0x03AB6A7C LDR W8, [X8 + 0x8]
	0x03AB6A80 MUL W8, W8, W20
	0x03AB6A84 CMP W19, W8
	0x03AB6A88 B.LE 0x3AB6A94
	0x03AB6A8C MOV W0, W31
	0x03AB6A90 B 0x3AB6B28
	0x03AB6A94 LDR X8, [X31 + 0x38]
	0x03AB6A98 ADD X19, X31, 0xB8
	0x03AB6A9C MOV X20, X9
	0x03AB6AA0 LDP X0, X1, [X8]
	0x03AB6AA4 ADRP X8, 0x6A2000
	0x03AB6AA8 LDR X8, [X8 + 0x1D8]
	0x03AB6AAC LDR X2, [X8]
	0x03AB6AB0 BL 0x222267C
	0x03AB6AB4 ADRP X8, 0x666000
	0x03AB6AB8 LDR W20, [X20]
	0x03AB6ABC LDR X8, [X8 + 0xD8]
	0x03AB6AC0 MOVI V0.2D, 0x0
	0x03AB6AC4 STP V0, V0, [X31 + 0x90]
	0x03AB6AC8 STP V0, V0, [X31 + 0x70]
	0x03AB6ACC LDR X8, [X8]
	0x03AB6AD0 MOV X23, X0
	0x03AB6AD4 LDR W9, [X8 + 0xE0]
	0x03AB6AD8 CBNZ W9, 0x3AB6AE4
	0x03AB6ADC MOV X0, X8
	0x03AB6AE0 BL 0x1C16DFC
	0x03AB6AE4 ADRP X8, 0x6A2000
	0x03AB6AE8 LDR X8, [X8 + 0x1E0]
	0x03AB6AEC LDR X9, [X31 + 0x28]
	0x03AB6AF0 LDP V0, V1, [X31 + 0x70]
	0x03AB6AF4 LDP V2, V3, [X31 + 0x90]
	0x03AB6AF8 LDR X4, [X8]
	0x03AB6AFC SUB W2, W20, 0x1
	0x03AB6B00 ADD X3, X31, 0xB8
	0x03AB6B04 MOV X0, X23
	0x03AB6B08 MOV W1, W31
	0x03AB6B0C STP X21, X24, [X31 + 0xB8]
	0x03AB6B10 STP X9, X25, [X31 + 0xC8]
	0x03AB6B14 STUR V0, [X31 + 0xD8]
	0x03AB6B18 STP V1, V2, [X19 + 0x30]
	0x03AB6B1C STR V3, [X19 + 0x5]
	0x03AB6B20 BL 0x221F54C
	0x03AB6B24 MOVZ W0, 0x1
	0x03AB6B28 LDR X8, [X22 + 0x28]
	0x03AB6B2C LDR X9, [X31 + 0x118]
	0x03AB6B30 CMP X8, X9
	0x03AB6B34 B.NE 0x3AB6B68
	0x03AB6B38 LDP X20, X19, [X31 + 0x1B0]
	0x03AB6B3C LDP X22, X21, [X31 + 0x1A0]
	0x03AB6B40 LDP X24, X23, [X31 + 0x190]
	0x03AB6B44 LDP X26, X25, [X31 + 0x180]
	0x03AB6B48 LDP X28, X27, [X31 + 0x170]
	0x03AB6B4C LDP X29, X30, [X31 + 0x160]
	0x03AB6B50 LDP D9, D8, [X31 + 0x150]
	0x03AB6B54 LDP D11, D10, [X31 + 0x140]
	0x03AB6B58 LDP D13, D12, [X31 + 0x130]
	0x03AB6B5C LDP D15, D14, [X31 + 0x120]
	0x03AB6B60 ADD X31, X31, 0x1C0
	0x03AB6B64 RET
	0x03AB6B68 BL 0x3EB1B20
	0x03AB6B6C SUB X31, X31, 0xC0
	0x03AB6B70 STP D13, D12, [X31 + 0x30]
	0x03AB6B74 STP D11, D10, [X31 + 0x40]
	0x03AB6B78 STP D9, D8, [X31 + 0x50]
	0x03AB6B7C STP X29, X30, [X31 + 0x60]
	0x03AB6B80 STP X28, X27, [X31 + 0x70]
	0x03AB6B84 STP X26, X25, [X31 + 0x80]
	0x03AB6B88 STP X24, X23, [X31 + 0x90]
	0x03AB6B8C STP X22, X21, [X31 + 0xA0]
	0x03AB6B90 STP X20, X19, [X31 + 0xB0]
	0x03AB6B94 ADRP X19, 0x92C000
	0x03AB6B98 LDRB W8, [X19 + 0x484]
	0x03AB6B9C LDR X25, [X31 + 0xC0]
	0x03AB6BA0 MOV X22, X3
	0x03AB6BA4 MOV W24, W2
	0x03AB6BA8 STP X6, X7, [X31 + 0x20]
	0x03AB6BAC STR W5, [X31 + 0x1C]
	0x03AB6BB0 STR X0, [X31 + 0x8]
	0x03AB6BB4 TBNZ X8, 0x0, 0x3AB6BCC
	0x03AB6BB8 ADRP X0, 0x69E000
	0x03AB6BBC LDR X0, [X0 + 0x9C8]
	0x03AB6BC0 BL 0x1C16CF4
	0x03AB6BC4 MOVZ W8, 0x1
	0x03AB6BC8 STRB W8, [X19 + 0x484]
	0x03AB6BCC CMP W24, 0x1
	0x03AB6BD0 STR W31, [X25]
	0x03AB6BD4 B.LT 0x3AB6CEC
	0x03AB6BD8 ADRP X27, 0x69E000
	0x03AB6BDC MOV W8, W24
	0x03AB6BE0 LDR X27, [X27 + 0x9C8]
	0x03AB6BE4 STR X8, [X31 + 0x10]
	0x03AB6BE8 LDR W8, [X31 + 0x1C]
	0x03AB6BEC MOV X26, X31
	0x03AB6BF0 MOVZ X23, 0x1
	0x03AB6BF4 MOV W28, W8
	0x03AB6BF8 ADD X8, X22, 0x8
	0x03AB6BFC STR X8, [X31]
	0x03AB6C00 MOVZ W8, 0x1
	0x03AB6C04 STR W8, [X31 + 0x18]
	0x03AB6C08 LDR W8, [X31 + 0x1C]
	0x03AB6C0C CMP W8, 0x1
	0x03AB6C10 B.LT 0x3AB6CCC
	0x03AB6C14 LDP X19, X8, [X31]
	0x03AB6C18 MOV X24, X31
	0x03AB6C1C MOV X21, X31
	0x03AB6C20 ADD X29, X8, X26, 0x3, LSL
	0x03AB6C24 ADD X20, X29, 0x4
	0x03AB6C28 LDR W8, [X29]
	0x03AB6C2C CMP X21, X8
	0x03AB6C30 B.EQ 0x3AB6CB8
	0x03AB6C34 LDR W9, [X20]
	0x03AB6C38 CMP X21, X9
	0x03AB6C3C B.EQ 0x3AB6CB8
	0x03AB6C40 LDR X0, [X27]
	0x03AB6C44 SXTW X8, W8
	0x03AB6C48 SXTW X9, W9
	0x03AB6C4C ADD X8, X22, X8, 0x4, LSL
	0x03AB6C50 ADD X9, X22, X9, 0x4, LSL
	0x03AB6C54 LDP D13, D12, [X8]
	0x03AB6C58 LDP D11, D10, [X9]

ISIL:
	001 Subtract X31, X31, 304
	002 Move [X31+240], X29
	003 Move [X31+248], X30
	004 Move [X31+256], X24
	005 Move [X31+264], X23
	006 Move [X31+272], X22
	007 Move [X31+280], X21
	008 Move [X31+288], X20
	009 Move [X31+296], X19
	010 Move X22, 0x92D000
	011 Move X21, 0x69F000
	012 Move W8, [X22+1146]
	013 Move X21, [X21+2280]
	014 Move X19, X1
	015 Move X20, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {28}
	020 Move X0, 0x69F000
	021 Move X0, [X0+2280]
	022 Call 0x1C17CF4
	023 Move X0, 0x69F000
	024 Move X0, [X0+16]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X22+1146], W8
	028 Move X0, [X21]
	029 NotImplemented "Instruction MOVI not yet implemented."
	030 Move [X31+224], W31
	031 Move [X31+192], V0
	032 Move [X31+200], V0
	033 Move [X31+11], V0
	034 Move W8, [X0+224]
	035 Compare W8, 0
	036 JumpIfNotEqual {39}
	037 Call 0x1C17DFC
	038 Move X0, [X21]
	039 Move X8, [X0+184]
	040 Move X24, 0x69F000
	041 Move W9, [X8+52]
	042 NotImplemented "Instruction LDUR not yet implemented."
	043 NotImplemented "Instruction LDUR not yet implemented."
	044 NotImplemented "Instruction LDUR not yet implemented."
	045 Move [X31+224], W9
	046 Move [X31+192], V1
	047 Move [X31+200], V0
	048 Move [X31+11], V2
	049 Move W8, [X20+40]
	050 Move X24, [X24+16]
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Move [X31+184], W8
	053 Move X0, [X24]
	054 Move W22, [X20+80]
	055 Move X21, [X20+32]
	056 Add X23, X20, 16
	057 Move W8, [X0+224]
	058 Compare W8, 0
	059 JumpIfNotEqual {61}
	060 Call 0x1C17DFC
	061 Add X1, X31, 176
	062 Move S0, W31
	063 Move W3, 1
	064 Move W5, 1
	065 Move X0, X23
	066 Move W2, W22
	067 Move W4, W31
	068 Move X6, X21
	069 Move X7, X31
	070 Call RenderingUtils.ReAllocateIfNeeded, X0, X1, X2, X3, X4, X5, V0, X6
	071 Move W8, [X20+72]
	072 NotImplemented "Instruction CMP not yet implemented."
	073 Move [X31+184], W8
	074 Move X0, [X24]
	075 Move W22, [X20+80]
	076 Move X21, [X20+64]
	077 Add X23, X20, 48
	078 Move W8, [X0+224]
	079 Compare W8, 0
	080 JumpIfNotEqual {82}
	081 Call 0x1C17DFC
	082 Add X1, X31, 176
	083 Move S0, W31
	084 Move W3, 1
	085 Move W5, 1
	086 Move X0, X23
	087 Move W2, W22
	088 Move W4, W31
	089 Move X6, X21
	090 Move X7, X31
	091 Call RenderingUtils.ReAllocateIfNeeded, X0, X1, X2, X3, X4, X5, V0, X6
	092 Move X0, [X24]
	093 Move W8, 1
	094 Move [X31+184], W8
	095 Move W21, [X20+80]
	096 Move W8, [X0+224]
	097 Move X22, [X20+32]
	098 Add X23, X20, 24
	099 Compare W8, 0
	100 JumpIfNotEqual {102}
	101 Call 0x1C17DFC
	102 Add X1, X31, 176
	103 Move S0, W31
	104 Move W3, 1
	105 Move W5, 1
	106 Move X0, X23
	107 Move W2, W21
	108 Move W4, W31
	109 Move X6, X22
	110 Move X7, X31
	111 Call RenderingUtils.ReAllocateIfNeeded, X0, X1, X2, X3, X4, X5, V0, X6
	112 Move W2, [X20+80]
	113 Move X6, [X20+64]
	114 Add X0, X20, 56
	115 Add X1, X31, 176
	116 Move S0, W31
	117 Move W3, 1
	118 Move W5, 1
	119 Move W4, W31
	120 Move X7, X31
	121 Call RenderingUtils.ReAllocateIfNeeded, X0, X1, X2, X3, X4, X5, V0, X6
	122 Move X0, [X20+24]
	123 Move X21, [X20+32]
	124 Add X8, X31, 88
	125 Move X1, X31
	126 Call RTHandle.op_Implicit, X0
	127 NotImplemented "Instruction LDUR not yet implemented."
	128 NotImplemented "Instruction LDUR not yet implemented."
	129 Move X8, [X31+120]
	130 Move [X31+128], V0
	131 Move [X31+136], V1
	132 Move [X31+160], X8
	133 Compare X19, 0
	134 JumpIfEqual {172}
	135 Move V0, [X31+128]
	136 Move V1, [X31+144]
	137 Move X8, [X31+160]
	138 Add X2, X31, 48
	139 Move X0, X19
	140 Move X1, X21
	141 Move X3, X31
	142 Move [X31+48], V0
	143 Move [X31+56], V1
	144 Move [X31+80], X8
	145 Call CommandBuffer.SetGlobalTexture, X0, X1, X2
	146 Move X0, [X20+56]
	147 Move X21, [X20+64]
	148 Add X8, X31, 88
	149 Move X1, X31
	150 Call RTHandle.op_Implicit, X0
	151 NotImplemented "Instruction LDUR not yet implemented."
	152 NotImplemented "Instruction LDUR not yet implemented."
	153 Move X8, [X31+120]
	154 Add X2, X31, 0
	155 Move X0, X19
	156 Move X1, X21
	157 Move X3, X31
	158 Move [X31], V0
	159 Move [X31+8], V1
	160 Move [X31+32], X8
	161 Call CommandBuffer.SetGlobalTexture, X0, X1, X2
	162 Move X20, [X31+288]
	163 Move X19, [X31+296]
	164 Move X22, [X31+272]
	165 Move X21, [X31+280]
	166 Move X24, [X31+256]
	167 Move X23, [X31+264]
	168 Move X29, [X31+240]
	169 Move X30, [X31+248]
	170 Add X31, X31, 304
	171 Return 
	172 Call 0x1C17F20

Method: System.Void Clear()

Disassembly:
	0x03AB6D48 MOV X25, X6
	0x03AB6D4C MOV X23, X5
	0x03AB6D50 MOV X19, X4
	0x03AB6D54 MOV X20, X3
	0x03AB6D58 MOV X21, X2
	0x03AB6D5C MOV X24, X1
	0x03AB6D60 MOV X22, X0
	0x03AB6D64 TBNZ X8, 0x0, 0x3AB6DA0
	0x03AB6D68 ADRP X0, 0x6A2000
	0x03AB6D6C LDR X0, [X0 + 0x1E8]
	0x03AB6D70 BL 0x1C16CF4
	0x03AB6D74 ADRP X0, 0x666000
	0x03AB6D78 LDR X0, [X0 + 0xD8]
	0x03AB6D7C BL 0x1C16CF4
	0x03AB6D80 ADRP X0, 0x6A2000
	0x03AB6D84 LDR X0, [X0 + 0x1D8]
	0x03AB6D88 BL 0x1C16CF4
	0x03AB6D8C ADRP X0, 0x695000
	0x03AB6D90 LDR X0, [X0]
	0x03AB6D94 BL 0x1C16CF4
	0x03AB6D98 MOVZ W8, 0x1
	0x03AB6D9C STRB W8, [X27 + 0x485]
	0x03AB6DA0 CMP W26, 0x1
	0x03AB6DA4 B.LT 0x3AB6E3C
	0x03AB6DA8 LDR X9, [X31 + 0x60]
	0x03AB6DAC MOV X8, X31
	0x03AB6DB0 MOV W10, W26
	0x03AB6DB4 ADD X11, X25, 0x4
	0x03AB6DB8 MOVZ W25, 0x1
	0x03AB6DBC LDRSW X12, [X23]
	0x03AB6DC0 LDP W13, W14, [X11 - 0x4]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x92D000
	006 Move X20, 0x69F000
	007 Move W8, [X21+1147]
	008 Move X20, [X20+2280]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x69F000
	015 Move X0, [X0+2280]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+1147], W8
	019 Move X0, [X20]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {25}
	023 Call 0x1C17DFC
	024 Move X0, [X20]
	025 Move X9, [X0+184]
	026 Move W8, 1
	027 Move [X9], W8
	028 Move W9, [X19+40]
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move W8, [X19+72]
	031 NotImplemented "Instruction CMP not yet implemented."
	032 NotImplemented "Instruction CSET not yet implemented."
	033 Move [X19+84], W8
	034 Move X20, [X31+16]
	035 Move X19, [X31+24]
	036 Move X30, [X31+32]
	037 Move X21, [X31+40]
	038 Return 

Method: System.Void SetCameraSettings(UnityEngine.RenderTextureDescriptor desc, UnityEngine.FilterMode filterMode)

Disassembly:
	0x03AB6DC4 LDR W15, [X24]
	0x03AB6DC8 ADD W16, W12, 0x1
	0x03AB6DCC STR W16, [X23]
	0x03AB6DD0 LDR X16, [X19]
	0x03AB6DD4 ADD X12, X16, X12, 0x3, LSL
	0x03AB6DD8 STP W13, W15, [X12]
	0x03AB6DDC LDRSW X12, [X23]
	0x03AB6DE0 LDR W13, [X24]
	0x03AB6DE4 ADD W15, W12, 0x1
	0x03AB6DE8 STR W15, [X23]
	0x03AB6DEC LDR X15, [X19]
	0x03AB6DF0 ADD X12, X15, X12, 0x3, LSL
	0x03AB6DF4 STP W14, W13, [X12]
	0x03AB6DF8 LDRSW X12, [X24]
	0x03AB6DFC LDR W13, [X22 + 0x8]
	0x03AB6E00 CMP W12, W13
	0x03AB6E04 B.GE 0x3AB6FB8
	0x03AB6E08 ADD W13, W12, 0x1
	0x03AB6E0C STR W13, [X24]
	0x03AB6E10 LDR V0, [X9], #0x10
	0x03AB6E14 ADD X8, X8, 0x1
	0x03AB6E18 CMP X8, X10
	0x03AB6E1C ADD X11, X11, 0x8
	0x03AB6E20 STR V0, [X31]
	0x03AB6E24 LDR X13, [X22]
	0x03AB6E28 CSET W25, CC
	0x03AB6E2C CMP X10, X8
	0x03AB6E30 STR V0, [X13, X12, LSL]
	0x03AB6E34 B.NE 0x3AB6DBC
	0x03AB6E38 B 0x3AB6E40
	0x03AB6E3C MOV W25, W31
	0x03AB6E40 ADRP X8, 0x6A2000
	0x03AB6E44 LDR X8, [X8 + 0x1D8]
	0x03AB6E48 LDP X0, X1, [X19]
	0x03AB6E4C ADRP X24, 0x666000
	0x03AB6E50 ADRP X26, 0x6A2000
	0x03AB6E54 LDR X2, [X8]
	0x03AB6E58 LDR X24, [X24 + 0xD8]
	0x03AB6E5C LDR X26, [X26 + 0x1E8]
	0x03AB6E60 BL 0x222267C
	0x03AB6E64 LDR X8, [X24]
	0x03AB6E68 LDR W27, [X23]
	0x03AB6E6C MOV X24, X0
	0x03AB6E70 LDR W9, [X8 + 0xE0]
	0x03AB6E74 CBNZ W9, 0x3AB6E80
	0x03AB6E78 MOV X0, X8
	0x03AB6E7C BL 0x1C16DFC
	0x03AB6E80 LDR X4, [X26]
	0x03AB6E84 SUB W2, W27, 0x1
	0x03AB6E88 MOV X0, X24
	0x03AB6E8C MOV W1, W31
	0x03AB6E90 MOV X3, X31
	0x03AB6E94 BL 0x221F6EC
	0x03AB6E98 LDR W8, [X23]
	0x03AB6E9C SUBS W8, W8, 0x1
	0x03AB6EA0 B.MI 0x3AB6FB8
	0x03AB6EA4 LDR X9, [X19]
	0x03AB6EA8 LDR X10, [X21]
	0x03AB6EAC ADD X11, X9, W8, 0x3, UXTW
	0x03AB6EB0 LDP W9, W11, [X11]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+64], X30
	003 Move [X31+72], X23
	004 Move [X31+80], X22
	005 Move [X31+88], X21
	006 Move [X31+96], X20
	007 Move [X31+104], X19
	008 Move X23, 0x92D000
	009 Move X22, 0x69F000
	010 Move W8, [X23+1148]
	011 Move X22, [X22+2280]
	012 Move W20, W2
	013 Move X21, X1
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {24}
	019 Move X0, 0x69F000
	020 Move X0, [X0+2280]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X23+1148], W8
	024 Move X0, X21
	025 Move W1, W31
	026 Move X2, X31
	027 Call RenderTextureDescriptor.set_depthBufferBits, X0, X1
	028 Move V2, [X21+16]
	029 Move V0, [X21+32]
	030 Move W8, [X21+48]
	031 Move V1, [X21]
	032 Move X0, [X22]
	033 Move [X31+16], V2
	034 Move [X31+24], V0
	035 Move [X31+48], W8
	036 Move [X31], V1
	037 Move W8, [X0+224]
	038 Compare W8, 0
	039 JumpIfNotEqual {42}
	040 Call 0x1C17DFC
	041 Move X0, [X22]
	042 Move X8, [X0+184]
	043 Move W9, [X31+48]
	044 Move V1, [X31+16]
	045 Move V0, [X31+32]
	046 Move V2, [X31]
	047 Move [X8+52], W9
	048 Move [X8+36], V0
	049 Move [X8+20], V1
	050 Move [X8+4], V2
	051 Move [X19+80], W20
	052 Move X8, [X22]
	053 Move X8, [X8+184]
	054 Move W8, [X8+12]
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Move [X19+40], W8
	057 Move [X19+72], W8
	058 Move X20, [X31+96]
	059 Move X19, [X31+104]
	060 Move X22, [X31+80]
	061 Move X21, [X31+88]
	062 Move X30, [X31+64]
	063 Move X23, [X31+72]
	064 Add X31, X31, 112
	065 Return 
	066 Move X0, X19
	067 Move X20, [X31+96]
	068 Move X19, [X31+104]
	069 Move X22, [X31+80]
	070 Move X21, [X31+88]
	071 Move X30, [X31+64]
	072 Move X23, [X31+72]
	073 Move W1, 1
	074 Add X31, X31, 112

Method: UnityEngine.Rendering.RTHandle GetBufferA()

Disassembly:
	0x03AB6F30 B.LT 0x3AB6F90
	0x03AB6F34 MOV W8, W8
	0x03AB6F38 UBFM X13, X8, 0x3D, 0x3C
	0x03AB6F3C LDR X12, [X19]
	0x03AB6F40 ADD X12, X12, X13
	0x03AB6F44 LDUR W14, [X12 - 0x8]
	0x03AB6F48 CMP W14, W9
	0x03AB6F4C B.NE 0x3AB6F90
	0x03AB6F50 LDRSW X14, [X20]
	0x03AB6F54 LDUR W12, [X12 - 0x4]

ISIL:
	001 Move W8, [X0+84]
	002 Compare W8, 0
	003 JumpIfEqual {7}
	004 Move W8, [X0+40]
	005 NotImplemented "Instruction CMP not yet implemented."
	006 Add X8, X0, 16
	007 Add X8, X0, 24
	008 Move X0, [X8]
	009 Return X0

Method: System.Void EnableMSAA(System.Boolean enable)

Disassembly:
	0x03AB6EB4 SXTW X9, W9
	0x03AB6EB8 ADD X13, X10, X9, 0x3, LSL
	0x03AB6EBC LDR W15, [X13]
	0x03AB6EC0 MOV X12, X13
	0x03AB6EC4 LDR W14, [X12 + 0x4]!
	0x03AB6EC8 LDR X10, [X22]
	0x03AB6ECC SBFM X16, X15, 0x3C, 0x1F
	0x03AB6ED0 LDR V0, [X10, X16, LSL]
	0x03AB6ED4 SBFM X16, X14, 0x3C, 0x1F
	0x03AB6ED8 LDR V1, [X10, X16, LSL]
	0x03AB6EDC FSUB D2, D0, D1
	0x03AB6EE0 FCMP D2, 0x0
	0x03AB6EE4 B.MI 0x3AB6F14
	0x03AB6EE8 FCMP D0, D1
	0x03AB6EEC B.NE 0x3AB6F1C
	0x03AB6EF0 SXTW X16, W15
	0x03AB6EF4 SXTW X17, W14
	0x03AB6EF8 ADD X17, X10, X17, 0x4, LSL
	0x03AB6EFC ADD X10, X10, X16, 0x4, LSL
	0x03AB6F00 LDR V0, [X17 + 0x8]
	0x03AB6F04 LDR V1, [X10 + 0x8]
	0x03AB6F08 FSUB D0, D1, D0
	0x03AB6F0C FCMP D0, 0x0
	0x03AB6F10 B.PL 0x3AB6F1C
	0x03AB6F14 MOV W10, W15
	0x03AB6F18 B 0x3AB6F24
	0x03AB6F1C MOV W10, W14
	0x03AB6F20 MOV W14, W15
	0x03AB6F24 CMP W8, 0x1
	0x03AB6F28 STR W14, [X13]
	0x03AB6F2C STR W11, [X12]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x92D000
	007 Move W8, [X22+1149]
	008 Move W20, W1
	009 Move X19, X0
	010 And W21, W1, 1
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x69F000
	016 Move X0, [X0+2280]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X22+1149], W8
	020 Move [X19+84], W21
	021 Move TEMP, X20
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfNotEqual {37}
	025 Move X20, 0x69F000
	026 Move X20, [X20+2280]
	027 Move X0, [X20]
	028 Move W8, [X0+224]
	029 Compare W8, 0
	030 JumpIfNotEqual {33}
	031 Call 0x1C17DFC
	032 Move X0, [X20]
	033 Move X8, [X0+184]
	034 Move W8, [X8+12]
	035 Move [X19+40], W8
	036 Move [X19+72], W8
	037 Move X20, [X31+32]
	038 Move X19, [X31+40]
	039 Move X22, [X31+16]
	040 Move X21, [X31+24]
	041 Move X30, [X31+48]
	042 Return 

Method: System.Void .cctor()

Disassembly:
	0x03AB6F58 SUB X8, X8, 0x1
	0x03AB6F5C MOV W11, W11
	0x03AB6F60 ADD W15, W14, 0x1
	0x03AB6F64 STR W15, [X20]
	0x03AB6F68 LDR X15, [X21]
	0x03AB6F6C ADD X16, X8, 0x1
	0x03AB6F70 BFM X11, X12, 0x20, 0x1F
	0x03AB6F74 CMP X16, 0x2
	0x03AB6F78 STR X11, [X15, X14, LSL #3]
	0x03AB6F7C SUB X13, X13, 0x8
	0x03AB6F80 MOV W11, W12
	0x03AB6F84 B.GE 0x3AB6F3C
	0x03AB6F88 MOV W8, W31
	0x03AB6F8C B 0x3AB6F94
	0x03AB6F90 MOV W12, W11
	0x03AB6F94 LDRSW X9, [X20]
	0x03AB6F98 MOV W12, W12
	0x03AB6F9C BFM X12, X10, 0x20, 0x1F
	0x03AB6FA0 SUBS W8, W8, 0x1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x92D000
	005 Move X20, 0x69F000
	006 Move W8, [X19+1150]
	007 Move X20, [X20+2280]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x69F000
	013 Move X0, [X0+2280]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+1150], W8
	017 Move X8, [X20]
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move W9, 1
	021 Move X8, [X8+184]
	022 Move [X8], W9
	023 Move X30, [X31+32]
	024 Return 

