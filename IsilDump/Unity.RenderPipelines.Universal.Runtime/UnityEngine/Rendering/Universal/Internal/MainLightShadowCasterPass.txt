Type: UnityEngine.Rendering.Universal.Internal.MainLightShadowCasterPass

Method: System.Void .ctor(UnityEngine.Rendering.Universal.RenderPassEvent evt)

Disassembly:
	0x03AB48D8 BL 0x3AB4ACC
	0x03AB48DC ADD X0, X31, 0x198
	0x03AB48E0 MOV X1, X31
	0x03AB48E4 BL 0x39B1DB4
	0x03AB48E8 LDR X8, [X27 + 0x28]
	0x03AB48EC LDR X9, [X31 + 0x438]
	0x03AB48F0 CMP X8, X9
	0x03AB48F4 B.NE 0x3AB4940
	0x03AB48F8 ADD X31, X31, 0x440
	0x03AB48FC LDP X20, X19, [X31 + 0x70]
	0x03AB4900 LDP X22, X21, [X31 + 0x60]
	0x03AB4904 LDP X24, X23, [X31 + 0x50]
	0x03AB4908 LDP X26, X25, [X31 + 0x40]
	0x03AB490C LDP X28, X27, [X31 + 0x30]
	0x03AB4910 LDP X29, X30, [X31 + 0x20]
	0x03AB4914 LDP D9, D8, [X31 + 0x10]
	0x03AB4918 LDR V10, [X31], #0x80
	0x03AB491C RET
	0x03AB4920 BL 0x1C16F28
	0x03AB4924 BL 0x1C16F20
	0x03AB4928 BL 0x1C16F20
	0x03AB492C BL 0x1C16F20
	0x03AB4930 BL 0x1C16F28
	0x03AB4934 BL 0x1C16F28
	0x03AB4938 BL 0x1C16F20
	0x03AB493C BL 0x1C16F20
	0x03AB4940 BL 0x3EB1B20
	0x03AB4944 B 0x3AB49A4
	0x03AB4948 B 0x3AB49A4
	0x03AB494C B 0x3AB49A4
	0x03AB4950 B 0x3AB49A0
	0x03AB4954 B 0x3AB49A4
	0x03AB4958 B 0x3AB49A4
	0x03AB495C B 0x3AB49A4
	0x03AB4960 B 0x3AB49A4
	0x03AB4964 B 0x3AB49A4
	0x03AB4968 B 0x3AB49A4
	0x03AB496C B 0x3AB49A0
	0x03AB4970 B 0x3AB49A4
	0x03AB4974 B 0x3AB49A0
	0x03AB4978 B 0x3AB49A0
	0x03AB497C B 0x3AB49A0
	0x03AB4980 B 0x3AB49A0
	0x03AB4984 B 0x3AB49A0
	0x03AB4988 B 0x3AB49A0
	0x03AB498C B 0x3AB49A0
	0x03AB4990 B 0x3AB49A0
	0x03AB4994 B 0x3AB49A0
	0x03AB4998 B 0x3AB49A0
	0x03AB499C B 0x3AB49A0
	0x03AB49A0 LDR X27, [X31 + 0x8]
	0x03AB49A4 MOV X19, X0
	0x03AB49A8 CMP W1, 0x1
	0x03AB49AC B.NE 0x3AB49D8
	0x03AB49B0 MOV X0, X19
	0x03AB49B4 BL 0x3EB1AD0
	0x03AB49B8 LDR X20, [X0]
	0x03AB49BC BL 0x3EB1AE0
	0x03AB49C0 ADD X0, X31, 0x198
	0x03AB49C4 MOV X1, X31
	0x03AB49C8 BL 0x39B1DB4
	0x03AB49CC CBZ X20, 0x3AB48E8
	0x03AB49D0 MOV X0, X20
	0x03AB49D4 BL 0x1C16F18
	0x03AB49D8 MOV X20, X31
	0x03AB49DC B 0x3AB49E4
	0x03AB49E0 MOV X19, X0
	0x03AB49E4 ADD X0, X31, 0x198
	0x03AB49E8 MOV X1, X31
	0x03AB49EC BL 0x39B1DB4
	0x03AB49F0 CBNZ X20, 0x3AB49FC
	0x03AB49F4 MOV X0, X19
	0x03AB49F8 BL 0x1D2C690
	0x03AB49FC MOV X0, X20
	0x03AB4A00 BL 0x1C16F18
	0x03AB4A04 BL 0x1990590
	0x03AB4A08 STR X30, [X31 - 0x30]!
	0x03AB4A0C STP X22, X21, [X31 + 0x10]
	0x03AB4A10 STP X20, X19, [X31 + 0x20]
	0x03AB4A14 ADRP X20, 0x92E000
	0x03AB4A18 ADRP X22, 0x6A4000
	0x03AB4A1C ADRP X21, 0x6A2000
	0x03AB4A20 LDRB W8, [X20 + 0x46F]
	0x03AB4A24 LDR X22, [X22 + 0x110]
	0x03AB4A28 LDR X21, [X21 + 0x8D0]
	0x03AB4A2C MOV X19, X0
	0x03AB4A30 TBNZ X8, 0x0, 0x3AB4A54
	0x03AB4A34 ADRP X0, 0x6A2000
	0x03AB4A38 LDR X0, [X0 + 0x8D0]
	0x03AB4A3C BL 0x1C16CF4
	0x03AB4A40 ADRP X0, 0x6A4000
	0x03AB4A44 LDR X0, [X0 + 0x110]
	0x03AB4A48 BL 0x1C16CF4
	0x03AB4A4C MOVZ W8, 0x1
	0x03AB4A50 STRB W8, [X20 + 0x46F]
	0x03AB4A54 LDR X8, [X22]
	0x03AB4A58 LDR X0, [X21]
	0x03AB4A5C LDR X8, [X8 + 0xB8]
	0x03AB4A60 LDR W9, [X0 + 0xE0]
	0x03AB4A64 LDR W20, [X8 + 0x4]
	0x03AB4A68 CBNZ W9, 0x3AB4A74
	0x03AB4A6C BL 0x1C16DFC
	0x03AB4A70 LDR X0, [X21]
	0x03AB4A74 CBZ X19, 0x3AB4AC8
	0x03AB4A78 LDR X8, [X0 + 0xB8]
	0x03AB4A7C MOV X0, X19
	0x03AB4A80 MOV W1, W20
	0x03AB4A84 MOV X2, X31
	0x03AB4A88 LDP S2, S3, [X8 + 0x8]
	0x03AB4A8C LDP S0, S1, [X8]
	0x03AB4A90 BL 0x3C4CED8
	0x03AB4A94 LDR X8, [X22]
	0x03AB4A98 LDR X9, [X21]
	0x03AB4A9C MOV X0, X19
	0x03AB4AA0 LDP X20, X19, [X31 + 0x20]
	0x03AB4AA4 LDR X8, [X8 + 0xB8]
	0x03AB4AA8 LDR X9, [X9 + 0xB8]
	0x03AB4AAC LDP X22, X21, [X31 + 0x10]
	0x03AB4AB0 MOV X2, X31
	0x03AB4AB4 LDR W1, [X8 + 0x24]
	0x03AB4AB8 LDP S0, S1, [X9 + 0x10]
	0x03AB4ABC LDP S2, S3, [X9 + 0x18]
	0x03AB4AC0 LDR X30, [X31], #0x30
	0x03AB4AC4 B 0x3C4CED8
	0x03AB4AC8 BL 0x1C16F20
	0x03AB4ACC SUB X31, X31, 0x1C0
	0x03AB4AD0 STP D11, D10, [X31 + 0x160]
	0x03AB4AD4 STP D9, D8, [X31 + 0x170]
	0x03AB4AD8 STP X29, X30, [X31 + 0x180]
	0x03AB4ADC STP X24, X23, [X31 + 0x190]
	0x03AB4AE0 STP X22, X21, [X31 + 0x1A0]
	0x03AB4AE4 STP X20, X19, [X31 + 0x1B0]
	0x03AB4AE8 ADRP X22, 0x92E000
	0x03AB4AEC LDRB W8, [X22 + 0x471]
	0x03AB4AF0 MOV X21, X3
	0x03AB4AF4 MOV X23, X2
	0x03AB4AF8 MOV X19, X1
	0x03AB4AFC MOV X20, X0
	0x03AB4B00 TBNZ X8, 0x0, 0x3AB4B24
	0x03AB4B04 ADRP X0, 0x6A4000
	0x03AB4B08 LDR X0, [X0 + 0x110]
	0x03AB4B0C BL 0x1C16CF4
	0x03AB4B10 ADRP X0, 0x6A2000
	0x03AB4B14 LDR X0, [X0 + 0xEC0]
	0x03AB4B18 BL 0x1C16CF4
	0x03AB4B1C MOVZ W8, 0x1
	0x03AB4B20 STRB W8, [X22 + 0x471]
	0x03AB4B24 MOV X0, X23
	0x03AB4B28 MOV X1, X31
	0x03AB4B2C STR X31, [X31 + 0x108]
	0x03AB4B30 BL 0x3C5BBF0
	0x03AB4B34 MOV X22, X0
	0x03AB4B38 MOV X0, X23
	0x03AB4B3C MOV X1, X31
	0x03AB4B40 BL 0x3C5BBF0
	0x03AB4B44 CBZ X0, 0x3AB4F98
	0x03AB4B48 MOV X1, X31
	0x03AB4B4C BL 0x3C16B90
	0x03AB4B50 CMP W0, 0x2
	0x03AB4B54 B.NE 0x3AB4B68
	0x03AB4B58 LDRB W8, [X21 + 0x2C]
	0x03AB4B5C CMP W8, 0x0
	0x03AB4B60 CSET W23, NE
	0x03AB4B64 B 0x3AB4B6C
	0x03AB4B68 MOV W23, W31
	0x03AB4B6C LDR W24, [X20 + 0xE8]
	0x03AB4B70 CMP W24, 0x1
	0x03AB4B74 B.LT 0x3AB4BF8
	0x03AB4B78 MOV X8, X31
	0x03AB4B7C MOVZ W9, 0x20
	0x03AB4B80 MOVZ W10, 0xA0
	0x03AB4B84 LDR X11, [X20 + 0x108]
	0x03AB4B88 CBZ X11, 0x3AB4F98
	0x03AB4B8C LDR W12, [X11 + 0x18]
	0x03AB4B90 CMP X8, X12
	0x03AB4B94 B.CS 0x3AB4F9C
	0x03AB4B98 ADD X11, X11, X10
	0x03AB4B9C LDP V0, V1, [X11 + 0x20]
	0x03AB4BA0 LDP V2, V3, [X11]
	0x03AB4BA4 LDR X11, [X20 + 0x100]
	0x03AB4BA8 STP V0, V1, [X31 + 0xE0]
	0x03AB4BAC STP V2, V3, [X31 + 0xC0]
	0x03AB4BB0 CBZ X11, 0x3AB4F98
	0x03AB4BB4 LDP V0, V1, [X31 + 0xC0]
	0x03AB4BB8 LDP V2, V3, [X31 + 0xE0]
	0x03AB4BBC STP V0, V1, [X31 + 0x80]
	0x03AB4BC0 STP V2, V3, [X31 + 0xA0]
	0x03AB4BC4 LDR W12, [X11 + 0x18]
	0x03AB4BC8 CMP X8, X12
	0x03AB4BCC B.CS 0x3AB4F9C
	0x03AB4BD0 LDP V0, V1, [X31 + 0x80]
	0x03AB4BD4 LDP V2, V3, [X31 + 0xA0]
	0x03AB4BD8 ADD X8, X8, 0x1
	0x03AB4BDC ADD X11, X11, X9
	0x03AB4BE0 ADD X9, X9, 0x40
	0x03AB4BE4 CMP X24, X8
	0x03AB4BE8 ADD X10, X10, 0x1C8
	0x03AB4BEC STP V2, V3, [X11 + 0x20]
	0x03AB4BF0 STP V0, V1, [X11]
	0x03AB4BF4 B.NE 0x3AB4B84
	0x03AB4BF8 ADD X8, X31, 0xC0
	0x03AB4BFC MOV X0, X31
	0x03AB4C00 BL 0x3C28410
	0x03AB4C04 LDP V0, V1, [X31 + 0xC0]
	0x03AB4C08 LDR X8, [X31 + 0xE0]
	0x03AB4C0C LDUR V2, [X31 + 0xEC]
	0x03AB4C10 LDR W9, [X31 + 0xFC]
	0x03AB4C14 MOV X0, X31
	0x03AB4C18 STP V0, V1, [X31 + 0x130]
	0x03AB4C1C STR X8, [X31 + 0x150]
	0x03AB4C20 STR V2, [X31 + 0x11]
	0x03AB4C24 STR W9, [X31 + 0x120]
	0x03AB4C28 BL 0x3C3BEDC

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X22, 0x92F000
	014 Move X26, 0x69D000
	015 Move X21, 0x6A5000
	016 Move W8, [X22+1131]
	017 Move X26, [X26+1432]
	018 Move X21, [X21+264]
	019 Move W20, W1
	020 Move X19, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {84}
	025 Move X0, 0x6A5000
	026 Move X0, [X0+272]
	027 Call 0x1C17CF4
	028 Move X0, 0x644000
	029 Move X0, [X0+2440]
	030 Call 0x1C17CF4
	031 Move X0, 0x69D000
	032 Move X0, [X0+1432]
	033 Call 0x1C17CF4
	034 Move X0, 0x6A0000
	035 Move X0, [X0+4080]
	036 Call 0x1C17CF4
	037 Move X0, 0x6A4000
	038 Move X0, [X0+2680]
	039 Call 0x1C17CF4
	040 Move X0, 0x69B000
	041 Move X0, [X0+72]
	042 Call 0x1C17CF4
	043 Move X0, 0x6A5000
	044 Move X0, [X0+280]
	045 Call 0x1C17CF4
	046 Move X0, 0x6A5000
	047 Move X0, [X0+288]
	048 Call 0x1C17CF4
	049 Move X0, 0x6A5000
	050 Move X0, [X0+296]
	051 Call 0x1C17CF4
	052 Move X0, 0x6A5000
	053 Move X0, [X0+304]
	054 Call 0x1C17CF4
	055 Move X0, 0x6A5000
	056 Move X0, [X0+264]
	057 Call 0x1C17CF4
	058 Move X0, 0x6A5000
	059 Move X0, [X0+312]
	060 Call 0x1C17CF4
	061 Move X0, 0x6A5000
	062 Move X0, [X0+320]
	063 Call 0x1C17CF4
	064 Move X0, 0x6A5000
	065 Move X0, [X0+328]
	066 Call 0x1C17CF4
	067 Move X0, 0x6A5000
	068 Move X0, [X0+336]
	069 Call 0x1C17CF4
	070 Move X0, 0x6A5000
	071 Move X0, [X0+344]
	072 Call 0x1C17CF4
	073 Move X0, 0x6A5000
	074 Move X0, [X0+352]
	075 Call 0x1C17CF4
	076 Move X0, 0x6A5000
	077 Move X0, [X0+360]
	078 Call 0x1C17CF4
	079 Move X0, 0x6A5000
	080 Move X0, [X0+368]
	081 Call 0x1C17CF4
	082 Move W8, 1
	083 Move [X22+1131], W8
	084 Move X27, 0x6A5000
	085 Move X25, 0x644000
	086 Move X24, 0x6A4000
	087 Move X23, 0x69B000
	088 Move X29, 0x6A5000
	089 Move X22, 0x6A5000
	090 Move X28, 0x6A5000
	091 Move X27, [X27+312]
	092 Move X25, [X25+2440]
	093 Move X24, [X24+2680]
	094 Move X23, [X23+72]
	095 Move X29, [X29+344]
	096 Move X22, [X22+272]
	097 Move X28, [X28+296]
	098 Move X0, [X26]
	099 Call 0x1C17F10
	100 Move X1, [X21]
	101 Move X2, X31
	102 Move X21, X0
	103 Call ProfilingSampler..ctor, X0, X1
	104 Move [X19+296], X21
	105 Move X8, 0x6A0000
	106 Move X8, [X8+4080]
	107 Move X0, [X8]
	108 Move W8, [X0+224]
	109 Compare W8, 0
	110 JumpIfNotEqual {112}
	111 Call 0x1C17DFC
	112 Move X0, X19
	113 Move X1, X31
	114 Call ScriptableRenderPass..ctor, X0
	115 Move X0, [X26]
	116 Call 0x1C17F10
	117 Move X1, [X27]
	118 Move X2, X31
	119 Move X21, X0
	120 Call ProfilingSampler..ctor, X0, X1
	121 Move [X19+56], X21
	122 Move [X19+16], W20
	123 Move X0, [X25]
	124 Move W1, 5
	125 Call 0x1C17D6C
	126 Move [X19+256], X0
	127 Move X0, [X24]
	128 Move W1, 4
	129 Call 0x1C17D6C
	130 Move [X19+264], X0
	131 Move X0, [X23]
	132 Move W1, 4
	133 Call 0x1C17D6C
	134 Move [X19+272], X0
	135 Move X0, [X29]
	136 Move X1, X31
	137 Call Shader.PropertyToID, X0
	138 Move X8, [X22]
	139 Move X1, X31
	140 Move X8, [X8+184]
	141 Move [X8], W0
	142 Move X0, [X28]
	143 Call Shader.PropertyToID, X0
	144 Move X8, [X22]
	145 Move X1, X31
	146 Move X8, [X8+184]
	147 Move [X8+4], W0
	148 Move X8, 0x6A5000
	149 Move X8, [X8+368]
	150 Move X0, [X8]
	151 Call Shader.PropertyToID, X0
	152 Move X8, [X22]
	153 Move X1, X31
	154 Move X8, [X8+184]
	155 Move [X8+8], W0
	156 Move X8, 0x6A5000
	157 Move X8, [X8+288]
	158 Move X0, [X8]
	159 Call Shader.PropertyToID, X0
	160 Move X8, [X22]
	161 Move X1, X31
	162 Move X8, [X8+184]
	163 Move [X8+12], W0
	164 Move X8, 0x6A5000
	165 Move X8, [X8+352]
	166 Move X0, [X8]
	167 Call Shader.PropertyToID, X0
	168 Move X8, [X22]
	169 Move X1, X31
	170 Move X8, [X8+184]
	171 Move [X8+16], W0
	172 Move X8, 0x6A5000
	173 Move X8, [X8+304]
	174 Move X0, [X8]
	175 Call Shader.PropertyToID, X0
	176 Move X8, [X22]
	177 Move X1, X31
	178 Move X8, [X8+184]
	179 Move [X8+20], W0
	180 Move X8, 0x6A5000
	181 Move X8, [X8+328]
	182 Move X0, [X8]
	183 Call Shader.PropertyToID, X0
	184 Move X8, [X22]
	185 Move X1, X31
	186 Move X8, [X8+184]
	187 Move [X8+24], W0
	188 Move X8, 0x6A5000
	189 Move X8, [X8+280]
	190 Move X0, [X8]
	191 Call Shader.PropertyToID, X0
	192 Move X8, [X22]
	193 Move X1, X31
	194 Move X8, [X8+184]
	195 Move [X8+28], W0
	196 Move X8, 0x6A5000
	197 Move X8, [X8+360]
	198 Move X0, [X8]
	199 Call Shader.PropertyToID, X0
	200 Move X8, [X22]
	201 Move X1, X31
	202 Move X8, [X8+184]
	203 Move [X8+32], W0
	204 Move X8, 0x6A5000
	205 Move X8, [X8+320]
	206 Move X0, [X8]
	207 Call Shader.PropertyToID, X0
	208 Move X8, [X22]
	209 Move X1, X31
	210 Move X8, [X8+184]
	211 Move [X8+36], W0
	212 Move X8, 0x6A5000
	213 Move X8, [X8+336]
	214 Move X0, [X8]
	215 Call Shader.PropertyToID, X0
	216 Move [X19+236], W0
	217 Move X20, [X31+80]
	218 Move X19, [X31+88]
	219 Move X22, [X31+64]
	220 Move X21, [X31+72]
	221 Move X24, [X31+48]
	222 Move X23, [X31+56]
	223 Move X26, [X31+32]
	224 Move X25, [X31+40]
	225 Move X28, [X31+16]
	226 Move X27, [X31+24]
	227 Move X29, [X31+96]
	228 Move X30, [X31+104]
	229 Return 

Method: System.Void Dispose()

Disassembly:
	0x03AB4C2C ANDS W31, W0, 0x1
	0x03AB4C30 FMOV S0, W31
	0x03AB4C34 FMOV S1, 1
	0x03AB4C38 FCSEL S0, S1, S0, NE
	0x03AB4C3C CMP W24, 0x4
	0x03AB4C40 STR S0, [X31 + 0x12C]
	0x03AB4C44 B.GT 0x3AB4CE8
	0x03AB4C48 LDR V0, [X31 + 0x12C]
	0x03AB4C4C MOV W8, W24
	0x03AB4C50 SXTW X9, W8
	0x03AB4C54 UBFM X8, X9, 0x3A, 0x39
	0x03AB4C58 SUB X9, X9, 0x5
	0x03AB4C5C LDR X10, [X20 + 0x100]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move X0, [X0+240]
	005 Compare X0, 0
	006 JumpIfEqual {9}
	007 Move X1, X31
	008 Call RTHandle.Release, X0
	009 Move X0, [X19+248]
	010 Compare X0, 0
	011 JumpIfEqual {17}
	012 Move X1, X31
	013 Move X30, [X31+16]
	014 Move X19, [X31+24]
	015 Call RTHandle.Release, X0
	016 Return 
	017 Move X30, [X31+16]
	018 Move X19, [X31+24]
	019 Return 

Method: System.Boolean Setup(ref UnityEngine.Rendering.Universal.RenderingData renderingData)

Disassembly:
	0x03AB4C60 LDP V1, V2, [X31 + 0x130]
	0x03AB4C64 LDR X11, [X31 + 0x150]
	0x03AB4C68 LDR V3, [X31 + 0x11]
	0x03AB4C6C LDR W12, [X31 + 0x120]
	0x03AB4C70 STP V1, V2, [X31 + 0xC0]
	0x03AB4C74 STR X11, [X31 + 0xE0]
	0x03AB4C78 STR V3, [X31 + 0x6]
	0x03AB4C7C STR W12, [X31 + 0x70]
	0x03AB4C80 CBZ X10, 0x3AB4F98
	0x03AB4C84 LDR X11, [X31 + 0xE0]
	0x03AB4C88 LDP V2, V1, [X31 + 0xC0]
	0x03AB4C8C LDR V3, [X31 + 0x6]
	0x03AB4C90 LDR W12, [X31 + 0x70]
	0x03AB4C94 STR X11, [X31 + 0x50]
	0x03AB4C98 STP V2, V1, [X31 + 0x30]
	0x03AB4C9C STR V3, [X31 + 0x1]
	0x03AB4CA0 STR W12, [X31 + 0x20]
	0x03AB4CA4 LDR W11, [X10 + 0x18]
	0x03AB4CA8 CMP W24, W11
	0x03AB4CAC B.CS 0x3AB4F9C
	0x03AB4CB0 LDR X11, [X31 + 0x50]
	0x03AB4CB4 LDP V1, V2, [X31 + 0x30]
	0x03AB4CB8 ADD X10, X10, X8
	0x03AB4CBC STR S0, [X10 + 0x48]
	0x03AB4CC0 STR X11, [X10 + 0x40]
	0x03AB4CC4 STP V1, V2, [X10 + 0x20]
	0x03AB4CC8 LDR W11, [X31 + 0x20]
	0x03AB4CCC LDR V1, [X31 + 0x1]
	0x03AB4CD0 ADD X8, X8, 0x40
	0x03AB4CD4 ADDS X9, X9, 0x1
	0x03AB4CD8 ADD W24, W24, 0x1
	0x03AB4CDC STR W11, [X10 + 0x5C]
	0x03AB4CE0 STUR V1, [X10 + 0x4C]
	0x03AB4CE4 B.CC 0x3AB4C5C
	0x03AB4CE8 ADRP X8, 0x6A2000
	0x03AB4CEC LDR X8, [X8 + 0xEC0]
	0x03AB4CF0 LDR X0, [X8]
	0x03AB4CF4 ADD X8, X20, 0x11C
	0x03AB4CF8 LDR V9, [X8]
	0x03AB4CFC LDR W9, [X0 + 0xE0]
	0x03AB4D00 CBNZ W9, 0x3AB4D08
	0x03AB4D04 BL 0x1C16DFC
	0x03AB4D08 MOV X0, X22
	0x03AB4D0C MOV W1, W23
	0x03AB4D10 MOV X2, X31
	0x03AB4D14 BL 0x3A77C88
	0x03AB4D18 LDP S1, S2, [X20 + 0xE0]
	0x03AB4D1C MOV V8.16B, V0.16B
	0x03AB4D20 ADD X0, X31, 0x10C
	0x03AB4D24 ADD X1, X31, 0x108
	0x03AB4D28 MOV V0.16B, V2.16B
	0x03AB4D2C MOV X2, X31
	0x03AB4D30 BL 0x3A77188
	0x03AB4D34 CBZ X19, 0x3AB4F98
	0x03AB4D38 ADRP X24, 0x6A4000
	0x03AB4D3C LDR X24, [X24 + 0x110]
	0x03AB4D40 LDR X2, [X20 + 0x100]
	0x03AB4D44 MOV X0, X19
	0x03AB4D48 MOV X3, X31
	0x03AB4D4C LDR X8, [X24]
	0x03AB4D50 LDR X8, [X8 + 0xB8]
	0x03AB4D54 LDR W1, [X8]
	0x03AB4D58 BL 0x3C4D47C
	0x03AB4D5C CBZ X22, 0x3AB4F98
	0x03AB4D60 LDR X8, [X24]
	0x03AB4D64 MOV X0, X22
	0x03AB4D68 MOV X1, X31
	0x03AB4D6C LDR X8, [X8 + 0xB8]
	0x03AB4D70 LDR W23, [X8 + 0x4]
	0x03AB4D74 BL 0x3C16BCC
	0x03AB4D78 LDR V2, [X31 + 0x10C]
	0x03AB4D7C LDR V3, [X31 + 0x108]
	0x03AB4D80 MOV X0, X19
	0x03AB4D84 MOV W1, W23
	0x03AB4D88 MOV V1.16B, V8.16B
	0x03AB4D8C MOV X2, X31
	0x03AB4D90 BL 0x3C4CED8
	0x03AB4D94 LDR W8, [X20 + 0xE8]
	0x03AB4D98 CMP W8, 0x2
	0x03AB4D9C B.LT 0x3AB4ECC
	0x03AB4DA0 LDR X8, [X20 + 0x110]
	0x03AB4DA4 CBZ X8, 0x3AB4F98
	0x03AB4DA8 LDR W9, [X8 + 0x18]
	0x03AB4DAC CBZ W9, 0x3AB4F9C
	0x03AB4DB0 LDR X9, [X24]
	0x03AB4DB4 LDP S0, S1, [X8 + 0x20]
	0x03AB4DB8 LDP S2, S3, [X8 + 0x28]
	0x03AB4DBC MOV X0, X19
	0x03AB4DC0 LDR X9, [X9 + 0xB8]
	0x03AB4DC4 MOV X2, X31
	0x03AB4DC8 LDR W1, [X9 + 0x8]
	0x03AB4DCC BL 0x3C4CED8
	0x03AB4DD0 LDR X8, [X20 + 0x110]
	0x03AB4DD4 CBZ X8, 0x3AB4F98
	0x03AB4DD8 LDR W9, [X8 + 0x18]
	0x03AB4DDC CMP W9, 0x1
	0x03AB4DE0 B.LS 0x3AB4F9C
	0x03AB4DE4 LDR X9, [X24]
	0x03AB4DE8 LDP S0, S1, [X8 + 0x30]
	0x03AB4DEC LDP S2, S3, [X8 + 0x38]
	0x03AB4DF0 MOV X0, X19
	0x03AB4DF4 LDR X9, [X9 + 0xB8]
	0x03AB4DF8 MOV X2, X31
	0x03AB4DFC LDR W1, [X9 + 0xC]
	0x03AB4E00 BL 0x3C4CED8
	0x03AB4E04 LDR X8, [X20 + 0x110]
	0x03AB4E08 CBZ X8, 0x3AB4F98
	0x03AB4E0C LDR W9, [X8 + 0x18]
	0x03AB4E10 CMP W9, 0x2
	0x03AB4E14 B.LS 0x3AB4F9C
	0x03AB4E18 LDR X9, [X24]
	0x03AB4E1C LDP S0, S1, [X8 + 0x40]
	0x03AB4E20 LDP S2, S3, [X8 + 0x48]
	0x03AB4E24 MOV X0, X19
	0x03AB4E28 LDR X9, [X9 + 0xB8]
	0x03AB4E2C MOV X2, X31
	0x03AB4E30 LDR W1, [X9 + 0x10]
	0x03AB4E34 BL 0x3C4CED8
	0x03AB4E38 LDR X8, [X20 + 0x110]
	0x03AB4E3C CBZ X8, 0x3AB4F98
	0x03AB4E40 LDR W9, [X8 + 0x18]
	0x03AB4E44 CMP W9, 0x3
	0x03AB4E48 B.LS 0x3AB4F9C
	0x03AB4E4C LDR X9, [X24]
	0x03AB4E50 LDP S0, S1, [X8 + 0x50]
	0x03AB4E54 LDP S2, S3, [X8 + 0x58]
	0x03AB4E58 MOV X0, X19
	0x03AB4E5C LDR X9, [X9 + 0xB8]
	0x03AB4E60 MOV X2, X31
	0x03AB4E64 LDR W1, [X9 + 0x14]
	0x03AB4E68 BL 0x3C4CED8
	0x03AB4E6C LDR X8, [X20 + 0x110]
	0x03AB4E70 CBZ X8, 0x3AB4F98
	0x03AB4E74 LDR W9, [X8 + 0x18]
	0x03AB4E78 CBZ W9, 0x3AB4F9C
	0x03AB4E7C CMP W9, 0x1
	0x03AB4E80 B.EQ 0x3AB4F9C
	0x03AB4E84 CMP W9, 0x2
	0x03AB4E88 B.LS 0x3AB4F9C
	0x03AB4E8C CMP W9, 0x3
	0x03AB4E90 B.EQ 0x3AB4F9C
	0x03AB4E94 LDR X9, [X24]
	0x03AB4E98 LDR V0, [X8 + 0x2C]
	0x03AB4E9C LDR V1, [X8 + 0x3C]
	0x03AB4EA0 LDR V2, [X8 + 0x4C]
	0x03AB4EA4 LDR X9, [X9 + 0xB8]
	0x03AB4EA8 LDR V3, [X8 + 0x5C]
	0x03AB4EAC FMUL S0, S0, S0
	0x03AB4EB0 FMUL S1, S1, S1
	0x03AB4EB4 LDR W1, [X9 + 0x18]
	0x03AB4EB8 FMUL S2, S2, S2
	0x03AB4EBC FMUL S3, S3, S3
	0x03AB4EC0 MOV X0, X19
	0x03AB4EC4 MOV X2, X31
	0x03AB4EC8 BL 0x3C4CED8
	0x03AB4ECC LDRB W8, [X21 + 0x2C]
	0x03AB4ED0 CBZ W8, 0x3AB4F78
	0x03AB4ED4 LDR X8, [X24]
	0x03AB4ED8 UNIMPLEMENTED
	0x03AB4EDC FMOV V1.2S, 0x0
	0x00000000 INVALID
	0x03AB4EE4 LDR X8, [X8 + 0xB8]
	0x03AB4EE8 FMOV S0, 0.5
	0x03AB4EEC FMUL S8, S0, V1.S[0]
	0x03AB4EF0 FMUL S10, S0, V1.S[1]
	0x03AB4EF4 LDR W1, [X8 + 0x1C]
	0x03AB4EF8 STR V1, [X31]
	0x03AB4EFC MOV S9, V1.S[1]
	0x03AB4F00 FNEG S11, S8
	0x03AB4F04 FNEG S1, S10
	0x03AB4F08 MOV X0, X19
	0x03AB4F0C MOV V0.16B, V11.16B
	0x03AB4F10 MOV V2.16B, V8.16B
	0x03AB4F14 MOV V3.16B, V1.16B
	0x03AB4F18 MOV X2, X31
	0x03AB4F1C BL 0x3C4CED8
	0x03AB4F20 LDR X8, [X24]
	0x03AB4F24 MOV X0, X19
	0x03AB4F28 MOV V0.16B, V11.16B
	0x03AB4F2C MOV V1.16B, V10.16B
	0x03AB4F30 LDR X8, [X8 + 0xB8]
	0x03AB4F34 MOV V2.16B, V8.16B
	0x03AB4F38 MOV V3.16B, V10.16B
	0x03AB4F3C MOV X2, X31
	0x03AB4F40 LDR W1, [X8 + 0x20]
	0x03AB4F44 BL 0x3C4CED8
	0x03AB4F48 LDR X8, [X24]
	0x03AB4F4C LDR V0, [X20 + 0x11C]
	0x03AB4F50 LDR V1, [X20 + 0x120]
	0x03AB4F54 MOV X0, X19
	0x03AB4F58 LDR X8, [X8 + 0xB8]
	0x03AB4F5C SCVTF S2, S0
	0x03AB4F60 SCVTF S3, S1
	0x03AB4F64 LDR V0, [X31]
	0x03AB4F68 LDR W1, [X8 + 0x24]
	0x03AB4F6C MOV V1.16B, V9.16B
	0x03AB4F70 MOV X2, X31
	0x03AB4F74 BL 0x3C4CED8
	0x03AB4F78 LDP X20, X19, [X31 + 0x1B0]
	0x03AB4F7C LDP X22, X21, [X31 + 0x1A0]
	0x03AB4F80 LDP X24, X23, [X31 + 0x190]
	0x03AB4F84 LDP X29, X30, [X31 + 0x180]
	0x03AB4F88 LDP D9, D8, [X31 + 0x170]
	0x03AB4F8C LDP D11, D10, [X31 + 0x160]
	0x03AB4F90 ADD X31, X31, 0x1C0
	0x03AB4F94 RET
	0x03AB4F98 BL 0x1C16F20
	0x03AB4F9C BL 0x1C16F28
	0x03AB4FA0 STR X29, [X31 - 0x60]!
	0x03AB4FA4 STP X30, X27, [X31 + 0x10]
	0x03AB4FA8 STP X26, X25, [X31 + 0x20]
	0x03AB4FAC STP X24, X23, [X31 + 0x30]
	0x03AB4FB0 STP X22, X21, [X31 + 0x40]
	0x03AB4FB4 STP X20, X19, [X31 + 0x50]
	0x03AB4FB8 SUB X31, X31, 0x1D0
	0x03AB4FBC ADRP X22, 0x92E000
	0x03AB4FC0 LDRB W8, [X22 + 0x472]
	0x03AB4FC4 MOV X19, X2
	0x03AB4FC8 MOV X21, X1
	0x03AB4FCC MOV X20, X0
	0x03AB4FD0 STR X1, [X31 + 0x1D8]
	0x03AB4FD4 TBNZ X8, 0x0, 0x3AB5070
	0x03AB4FD8 ADRP X0, 0x6A4000
	0x03AB4FDC LDR X0, [X0 + 0x188]
	0x03AB4FE0 BL 0x1C16CF4
	0x03AB4FE4 ADRP X0, 0x6A4000
	0x03AB4FE8 LDR X0, [X0 + 0x190]
	0x03AB4FEC BL 0x1C16CF4
	0x03AB4FF0 ADRP X0, 0x6A4000
	0x03AB4FF4 LDR X0, [X0 + 0x198]
	0x03AB4FF8 BL 0x1C16CF4
	0x03AB4FFC ADRP X0, 0x6A2000
	0x03AB5000 LDR X0, [X0 + 0xEC0]
	0x03AB5004 BL 0x1C16CF4
	0x03AB5008 ADRP X0, 0x69B000
	0x03AB500C LDR X0, [X0 + 0xA88]
	0x03AB5010 BL 0x1C16CF4
	0x03AB5014 ADRP X0, 0x6A3000
	0x03AB5018 LDR X0, [X0 + 0x1A0]
	0x03AB501C BL 0x1C16CF4
	0x03AB5020 ADRP X0, 0x6A3000
	0x03AB5024 LDR X0, [X0 + 0x1A8]
	0x03AB5028 BL 0x1C16CF4
	0x03AB502C ADRP X0, 0x6A3000
	0x03AB5030 LDR X0, [X0 + 0x1B0]
	0x03AB5034 BL 0x1C16CF4
	0x03AB5038 ADRP X0, 0x69E000
	0x03AB503C LDR X0, [X0 + 0xFF8]
	0x03AB5040 BL 0x1C16CF4
	0x03AB5044 ADRP X0, 0x6A3000
	0x03AB5048 LDR X0, [X0 + 0x1B8]
	0x03AB504C BL 0x1C16CF4
	0x03AB5050 ADRP X0, 0x6A3000
	0x03AB5054 LDR X0, [X0 + 0x1C0]
	0x03AB5058 BL 0x1C16CF4
	0x03AB505C ADRP X0, 0x6A3000
	0x03AB5060 LDR X0, [X0 + 0x1C8]
	0x03AB5064 BL 0x1C16CF4
	0x03AB5068 MOVZ W8, 0x1
	0x03AB506C STRB W8, [X22 + 0x472]
	0x03AB5070 MOVI V0.2D, 0x0
	0x03AB5074 STR X31, [X31 + 0x1C8]
	0x03AB5078 STR X31, [X31 + 0x198]
	0x03AB507C STR X31, [X31 + 0x168]
	0x03AB5080 STR W31, [X31 + 0x160]
	0x03AB5084 STR W31, [X31 + 0x120]
	0x03AB5088 STP V0, V0, [X31 + 0x1A0]
	0x03AB508C STP V0, V0, [X31 + 0x170]
	0x03AB5090 STP V0, V0, [X31 + 0x140]
	0x03AB5094 STR V0, [X31 + 0x13]

ISIL:
	001 Subtract X31, X31, 304
	002 Move [X31+192], D8
	003 Move [X31+208], X29
	004 Move [X31+216], X30
	005 Move [X31+224], X28
	006 Move [X31+232], X27
	007 Move [X31+240], X26
	008 Move [X31+248], X25
	009 Move [X31+256], X24
	010 Move [X31+264], X23
	011 Move [X31+272], X22
	012 Move [X31+280], X21
	013 Move [X31+288], X20
	014 Move [X31+296], X19
	015 Move X21, 0x92F000
	016 Move W8, [X21+1132]
	017 Move X20, X1
	018 Move X19, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {37}
	023 Move X0, 0x640000
	024 Move X0, [X0+2600]
	025 Call 0x1C17CF4
	026 Move X0, 0x6A3000
	027 Move X0, [X0+3776]
	028 Call 0x1C17CF4
	029 Move X0, 0x6A5000
	030 Move X0, [X0+376]
	031 Call 0x1C17CF4
	032 Move X0, 0x6A5000
	033 Move X0, [X0+336]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X21+1132], W8
	037 NotImplemented "Instruction MOVI not yet implemented."
	038 Move [X31+200], W31
	039 Move [X31+176], W31
	040 Move [X31+40], X31
	041 Move [X31+48], X31
	042 Move [X31+144], V0
	043 Move [X31+152], V0
	044 Move [X31+112], V0
	045 Move [X31+120], V0
	046 Move [X31+80], V0
	047 Move [X31+88], V0
	048 Move [X31+4], V0
	049 Move [X31+56], X31
	050 Move W8, [X20+593]
	051 Compare W8, 0
	052 JumpIfEqual {244}
	053 Move X2, [X19+296]
	054 Add X0, X31, 200
	055 Move X1, X31
	056 Move X3, X31
	057 Add X21, X20, 592
	058 Call ProfilingScope..ctor, X0, X1, X2
	059 Move W8, [X21]
	060 Compare W8, 0
	061 JumpIfEqual {209}
	062 Move X0, X19
	063 Call MainLightShadowCasterPass.Clear, X0
	064 NotImplemented "Instruction LDRSW not yet implemented."
	065 Add W31, W22, 1
	066 Move X8, [X20+568]
	067 Move W9, 116
	068 Add X0, X31, 64
	069 Move W2, 116
	070 NotImplemented "Instruction MADD not yet implemented."
	071 Call 0x3EB2B30
	072 Add X0, X31, 64
	073 Move X1, X31
	074 Call VisibleLight.get_light, X0
	075 Compare X0, 0
	076 JumpIfEqual {232}
	077 Move X1, X31
	078 Move [X31+32], X0
	079 Call Light.get_shadows, X0
	080 Compare W0, 0
	081 JumpIfEqual {215}
	082 Add X0, X31, 64
	083 Move X1, X31
	084 Call VisibleLight.get_lightType, X0
	085 NotImplemented "Instruction CMP not yet implemented."
	086 Move X8, 0x640000
	087 Move X8, [X8+2600]
	088 Move X0, [X8]
	089 Move W8, [X0+224]
	090 Compare W8, 0
	091 JumpIfNotEqual {93}
	092 Call 0x1C17DFC
	093 Move X8, 0x6A5000
	094 Move X8, [X8+376]
	095 Move X0, [X8]
	096 Move X1, X31
	097 Call Debug.LogWarning, X0
	098 Add X0, X20, 8
	099 Add X2, X31, 40
	100 Move W1, W22
	101 Move X3, X31
	102 Move [X31+24], X0
	103 Call CullingResults.GetShadowCasterBounds, X0, X1, X2
	104 Move TEMP, X0
	105 And TEMP, TEMP, 1
	106 Compare TEMP, 1
	107 JumpIfNotEqual {218}
	108 Move W25, [X20+604]
	109 Move X8, 0x6A3000
	110 Move [X19+232], W25
	111 Move X8, [X8+3776]
	112 Move W26, [X20+596]
	113 Move W27, [X20+600]
	114 Move X0, [X8]
	115 Move W8, [X0+224]
	116 Compare W8, 0
	117 JumpIfNotEqual {119}
	118 Call 0x1C17DFC
	119 Move W0, W26
	120 Move W1, W27
	121 Move W2, W25
	122 Move X3, X31
	123 Call ShadowUtils.GetMaxTileResolutionInAtlas, X0, X1, X2
	124 Move [X31+204], W0
	125 Move W25, [X20+596]
	126 Move W8, [X19+232]
	127 Move [X19+284], W25
	128 Move W9, [X20+600]
	129 NotImplemented "Instruction CMP not yet implemented."
	130 NotImplemented "Instruction CSET not yet implemented."
	131 NotImplemented "Instruction CMP not yet implemented."
	132 NotImplemented "Instruction ASRV not yet implemented."
	133 Move [X19+288], W26
	134 Move X28, X31
	135 Move W29, 32
	136 Move W24, 32
	137 Move X0, [X31+32]
	138 Move X1, X31
	139 Call Light.get_shadowNearPlane, X0
	140 Move X27, [X19+272]
	141 Compare X27, 0
	142 JumpIfEqual {229}
	143 Move X23, [X19+264]
	144 Compare X23, 0
	145 JumpIfEqual {230}
	146 Move X8, 0x6A3000
	147 Move X8, [X8+3776]
	148 Move V8, V0
	149 Move X0, [X8]
	150 Move W8, [X0+224]
	151 Compare W8, 0
	152 JumpIfNotEqual {154}
	153 Call 0x1C17DFC
	154 Move W8, [X27+24]
	155 NotImplemented "Instruction CMP not yet implemented."
	156 Move W8, [X23+24]
	157 NotImplemented "Instruction CMP not yet implemented."
	158 Add X7, X27, X24
	159 Add X8, X23, X29
	160 Move X0, [X31+24]
	161 Move W6, [X31+204]
	162 Move X1, X21
	163 Move W2, W22
	164 Move W3, W28
	165 Move W4, W25
	166 Move W5, W26
	167 Move V0, V8
	168 Move [X31], X8
	169 Move [X31+8], X31
	170 Call ShadowUtils.ExtractDirectionalLightMatrix, X0, X1, X2, X3, X4, X5, X6, V0, X7, X8
	171 Move TEMP, X0
	172 And TEMP, TEMP, 1
	173 Compare TEMP, 1
	174 JumpIfNotEqual {221}
	175 NotImplemented "Instruction LDRSW not yet implemented."
	176 Move W25, [X19+284]
	177 Move W26, [X19+288]
	178 Add X28, X28, 1
	179 Add X24, X24, 16
	180 NotImplemented "Instruction CMP not yet implemented."
	181 Add X29, X29, 456
	182 Move V0, [X20+412]
	183 Move W8, 1
	184 Multiply S0, S0, S0
	185 Move [X19+228], S0
	186 Move V0, [X20+620]
	187 Move [X19+280], W31
	188 Move [X19+66], W8
	189 Move X8, 0x6A3000
	190 Move [X19+224], S0
	191 Move X8, [X8+3776]
	192 Move X0, [X8]
	193 Move W8, [X0+224]
	194 Compare W8, 0
	195 JumpIfNotEqual {197}
	196 Call 0x1C17DFC
	197 Move X8, 0x6A5000
	198 Move X8, [X8+336]
	199 Add X0, X19, 240
	200 Move W19, 1
	201 Move X5, [X8]
	202 Move S0, W31
	203 Move W3, 16
	204 Move W4, 1
	205 Move W1, W25
	206 Move W2, W26
	207 Move X6, X31
	208 Call ShadowUtils.ShadowRTReAllocateIfNeeded, X0, X1, X2, X3, X4, V0, X5
	209 Move X0, X19
	210 Move X1, X20
	211 Call MainLightShadowCasterPass.SetupForEmptyRendering, X0, X1
	212 Move X0, X19
	213 Move X1, X20
	214 Call MainLightShadowCasterPass.SetupForEmptyRendering, X0, X1
	215 Move X0, X19
	216 Move X1, X20
	217 Call MainLightShadowCasterPass.SetupForEmptyRendering, X0, X1
	218 Move X0, X19
	219 Move X1, X20
	220 Call MainLightShadowCasterPass.SetupForEmptyRendering, X0, X1
	221 Move X0, X19
	222 Move X1, X20
	223 Call MainLightShadowCasterPass.SetupForEmptyRendering, X0, X1
	224 Move W19, W0
	225 Add X0, X31, 200
	226 Move X1, X31
	227 Call ProfilingScope.Dispose, X0
	228 Call 0x1C17F28
	229 Call 0x1C17F20
	230 Call 0x1C17F20
	231 Call 0x1C17F28
	232 Call 0x1C17F20
	233 Move X19, X0
	234 NotImplemented "Instruction CMP not yet implemented."
	235 Move X0, X19
	236 Call 0x3EB2AD0
	237 Move X20, [X0]
	238 Call 0x3EB2AE0
	239 Add X0, X31, 200
	240 Move X1, X31
	241 Call ProfilingScope.Dispose, X0
	242 Compare X20, 0
	243 JumpIfNotEqual {262}
	244 Move W19, W31
	245 And W0, W19, 1
	246 Move X20, [X31+288]
	247 Move X19, [X31+296]
	248 Move X22, [X31+272]
	249 Move X21, [X31+280]
	250 Move X24, [X31+256]
	251 Move X23, [X31+264]
	252 Move X26, [X31+240]
	253 Move X25, [X31+248]
	254 Move X28, [X31+224]
	255 Move X27, [X31+232]
	256 Move X29, [X31+208]
	257 Move X30, [X31+216]
	258 Move V8, [X31+192]
	259 Add X31, X31, 304
	260 Return X0
	261 Move X20, X31
	262 Move X0, X20
	263 Call 0x1C17F18
	264 Move X19, X0
	265 Add X0, X31, 200
	266 Move X1, X31
	267 Call ProfilingScope.Dispose, X0
	268 Compare X20, 0
	269 JumpIfNotEqual {272}
	270 Move X0, X19
	271 Call 0x1D2D690
	272 Move X0, X20
	273 Call 0x1C17F18
	274 Call 0x1991590

Method: System.Boolean SetupForEmptyRendering(ref UnityEngine.Rendering.Universal.RenderingData renderingData)

Disassembly:
	0x03AB5098 STP V0, V0, [X31 + 0x100]
	0x03AB509C STR V0, [X31 + 0xF]
	0x03AB50A0 CBZ X21, 0x3AB5458
	0x03AB50A4 ADRP X8, 0x6A3000
	0x03AB50A8 ADRP X26, 0x6A3000
	0x03AB50AC LDR X8, [X8 + 0x1B8]
	0x03AB50B0 LDR X26, [X26 + 0x198]
	0x03AB50B4 LDR X3, [X20 + 0x38]
	0x03AB50B8 ADRP X25, 0x6A3000
	0x03AB50BC LDR X1, [X8]
	0x03AB50C0 LDR X4, [X26]
	0x03AB50C4 ADRP X24, 0x6A3000
	0x03AB50C8 LDR X25, [X25 + 0x1B0]
	0x03AB50CC LDR X24, [X24 + 0x190]
	0x03AB50D0 ADD X8, X31, 0x70
	0x03AB50D4 ADD X2, X31, 0x198
	0x03AB50D8 MOV X0, X21
	0x03AB50DC BL 0x2240F24
	0x03AB50E0 LDP V0, V1, [X31 + 0x70]
	0x03AB50E4 STP V0, V1, [X31 + 0x1A0]
	0x03AB50E8 ADD X1, X31, 0x198
	0x03AB50EC ADD X3, X31, 0x1D8
	0x03AB50F0 MOV X0, X20
	0x03AB50F4 MOV X2, X19
	0x03AB50F8 BL 0x3AB557C
	0x03AB50FC LDRB W8, [X20 + 0x118]
	0x03AB5100 CBNZ W8, 0x3AB5244
	0x03AB5104 LDR X8, [X20 + 0xF0]
	0x03AB5108 CBZ X8, 0x3AB5468
	0x03AB510C LDR X0, [X8 + 0x18]
	0x03AB5110 CBZ X0, 0x3AB546C
	0x03AB5114 LDR X27, [X31 + 0x198]
	0x03AB5118 ADD X8, X31, 0x38
	0x03AB511C MOV X1, X31
	0x03AB5120 BL 0x3C21334
	0x03AB5124 ADRP X22, 0x6A1000
	0x03AB5128 LDUR V0, [X31 + 0x38]
	0x03AB512C LDUR V1, [X31 + 0x48]
	0x03AB5130 LDUR V2, [X31 + 0x58]
	0x03AB5134 LDR W8, [X31 + 0x68]
	0x03AB5138 LDR X22, [X22 + 0xEC0]
	0x03AB513C STP V0, V1, [X31 + 0x70]
	0x03AB5140 STR V2, [X31 + 0x9]
	0x03AB5144 STR W8, [X31 + 0xA0]
	0x03AB5148 LDR X0, [X22]
	0x03AB514C LDR W8, [X0 + 0xE0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x92E000
	006 Move W8, [X21+1133]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0x6A2000
	014 Move X0, [X0+3776]
	015 Call 0x1C17CF4
	016 Move X0, 0x6A4000
	017 Move X0, [X0+384]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+1133], W8
	021 Move X8, [X20+464]
	022 Compare X8, 0
	023 JumpIfEqual {56}
	024 Move W20, [X8+422]
	025 Compare W20, 0
	026 JumpIfEqual {49}
	027 Move X8, 0x6A2000
	028 Move X8, [X8+3776]
	029 Move W9, 1
	030 Move [X19+280], W9
	031 Move [X19+66], W31
	032 Move X0, [X8]
	033 Move X21, 0x6A4000
	034 Add X19, X19, 248
	035 Move W8, [X0+224]
	036 Move X21, [X21+384]
	037 Compare W8, 0
	038 JumpIfNotEqual {40}
	039 Call 0x1C17DFC
	040 Move X5, [X21]
	041 Move S0, W31
	042 Move W1, 1
	043 Move W2, 1
	044 Move W3, 16
	045 Move W4, 1
	046 Move X0, X19
	047 Move X6, X31
	048 Call ShadowUtils.ShadowRTReAllocateIfNeeded, X0, X1, X2, X3, X4, V0, X5
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Move X20, [X31+16]
	051 Move X19, [X31+24]
	052 NotImplemented "Instruction CSET not yet implemented."
	053 Move X30, [X31+32]
	054 Move X21, [X31+40]
	055 Return X0
	056 Call 0x1C17F20

Method: System.Void Configure(UnityEngine.Rendering.CommandBuffer cmd, UnityEngine.RenderTextureDescriptor cameraTextureDescriptor)

Disassembly:
	0x03AB5298 LDR X23, [X8]
	0x03AB529C LDR X0, [X9]
	0x03AB52A0 BL 0x1C16F10
	0x03AB52A4 ADRP X8, 0x6A3000
	0x03AB52A8 LDR X8, [X8 + 0x1A0]
	0x03AB52AC MOV X22, X0
	0x03AB52B0 LDR X2, [X8]
	0x03AB52B4 MOV X1, X23
	0x03AB52B8 MOV X3, X31
	0x03AB52BC BL 0x25C78AC
	0x03AB52C0 LDR X8, [X25]
	0x03AB52C4 LDR X8, [X8 + 0xB8]
	0x03AB52C8 STR X22, [X8 + 0x8]
	0x03AB52CC LDR X2, [X24]
	0x03AB52D0 ADD X0, X31, 0x1A0
	0x03AB52D4 MOV X1, X22
	0x03AB52D8 BL 0x224107C
	0x03AB52DC LDR X8, [X31 + 0x198]
	0x03AB52E0 CBZ X8, 0x3AB5464

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move W8, [X0+280]
	004 Move W9, 248
	005 Move X2, X31
	006 Move X19, X0
	007 NotImplemented "Instruction CMP not yet implemented."
	008 Move W8, 240
	009 NotImplemented "Instruction CSEL not yet implemented."
	010 Move X1, [X0]
	011 Call ScriptableRenderPass.ConfigureTarget, X0, X1
	012 Move S0, W31
	013 Move S1, W31
	014 Move S2, W31
	015 Move S3, 1
	016 Move W1, 7
	017 Move X0, X19
	018 Move X2, X31
	019 Move X30, [X31+16]
	020 Move X19, [X31+24]
	021 Call ScriptableRenderPass.ConfigureClear, X0, X1, X2
	022 Return 

Method: System.Void Execute(UnityEngine.Rendering.ScriptableRenderContext context, ref UnityEngine.Rendering.Universal.RenderingData renderingData)

Disassembly:
	0x03AB52E4 LDR X8, [X8 + 0x20]
	0x03AB52E8 ADD X0, X31, 0x1A0
	0x03AB52EC MOV X1, X31
	0x03AB52F0 STR X8, [X31 + 0x1C8]
	0x03AB52F4 BL 0x39972C0
	0x03AB52F8 ADRP X8, 0x6A3000
	0x03AB52FC LDR X8, [X8 + 0x1C8]
	0x03AB5300 LDR X3, [X20 + 0x38]
	0x03AB5304 LDR X4, [X26]
	0x03AB5308 ADD X2, X31, 0x168
	0x03AB530C LDR X1, [X8]
	0x03AB5310 ADD X8, X31, 0x70
	0x03AB5314 MOV X0, X21
	0x03AB5318 BL 0x2240F24
	0x03AB531C LDP V0, V1, [X31 + 0x70]
	0x03AB5320 STP V0, V1, [X31 + 0x170]
	0x03AB5324 ADD X1, X31, 0x168
	0x03AB5328 ADD X3, X31, 0x1D8
	0x03AB532C MOV X0, X20
	0x03AB5330 MOV X2, X19
	0x03AB5334 BL 0x3AB557C
	0x03AB5338 LDR X8, [X31 + 0x168]
	0x03AB533C CBZ X8, 0x3AB545C
	0x03AB5340 LDR X9, [X31 + 0x1C8]
	0x03AB5344 ADRP X10, 0x69B000
	0x03AB5348 LDR X10, [X10 + 0xA88]
	0x03AB534C STR X9, [X8 + 0x20]
	0x03AB5350 LDR X0, [X10]
	0x03AB5354 LDR W8, [X0 + 0xE0]
	0x03AB5358 CBNZ W8, 0x3AB5360
	0x03AB535C BL 0x1C16DFC
	0x03AB5360 ADD X0, X31, 0x1C8
	0x03AB5364 MOV X1, X31
	0x03AB5368 BL 0x398D2E8
	0x03AB536C TBZ X0, 0x0, 0x3AB5384
	0x03AB5370 ADD X0, X31, 0x170
	0x03AB5374 ADD X1, X31, 0x1C8
	0x03AB5378 MOVZ W2, 0x1
	0x03AB537C MOV X3, X31
	0x03AB5380 BL 0x3996A00
	0x03AB5384 ADD X0, X31, 0x170
	0x03AB5388 MOV W1, W31
	0x03AB538C MOV X2, X31
	0x03AB5390 BL 0x398E404
	0x03AB5394 LDR X8, [X25]
	0x03AB5398 LDR W9, [X8 + 0xE0]
	0x03AB539C CBNZ W9, 0x3AB53AC
	0x03AB53A0 MOV X0, X8
	0x03AB53A4 BL 0x1C16DFC
	0x03AB53A8 LDR X8, [X25]
	0x03AB53AC LDR X9, [X8 + 0xB8]

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+144], X30
	003 Move [X31+152], X1
	004 Move [X31+160], X20
	005 Move [X31+168], X19
	006 Move W8, [X0+280]
	007 Move X19, X0
	008 Move X20, X2
	009 Add X1, X31, 152
	010 Compare W8, 0
	011 JumpIfEqual {34}
	012 Move X2, X20
	013 Call MainLightShadowCasterPass.SetEmptyMainLightCascadeShadowmap, X0, X1, X2
	014 Move X8, [X19+248]
	015 Compare X8, 0
	016 JumpIfEqual {64}
	017 Move X0, [X20]
	018 Move X9, [X8+72]
	019 NotImplemented "Instruction LDUR not yet implemented."
	020 NotImplemented "Instruction LDUR not yet implemented."
	021 Move W1, [X19+236]
	022 Move [X31+128], X9
	023 Move [X31+96], V1
	024 Move [X31+104], V0
	025 Compare X0, 0
	026 JumpIfEqual {64}
	027 Move V0, [X31+96]
	028 Move V1, [X31+112]
	029 Move X8, [X31+128]
	030 Add X2, X31, 48
	031 Move [X31+48], V0
	032 Move [X31+56], V1
	033 Move [X31+80], X8
	034 Move X0, X19
	035 Move X2, X20
	036 Call MainLightShadowCasterPass.RenderMainLightCascadeShadowmap, X0, X1, X2
	037 Move X8, [X19+240]
	038 Compare X8, 0
	039 JumpIfEqual {64}
	040 Move X0, [X20]
	041 Move X9, [X8+72]
	042 NotImplemented "Instruction LDUR not yet implemented."
	043 NotImplemented "Instruction LDUR not yet implemented."
	044 Move W1, [X19+236]
	045 Move [X31+128], X9
	046 Move [X31+96], V1
	047 Move [X31+104], V0
	048 Compare X0, 0
	049 JumpIfEqual {64}
	050 Move V0, [X31+96]
	051 Move V1, [X31+112]
	052 Move X8, [X31+128]
	053 Add X2, X31, 0
	054 Move [X31], V0
	055 Move [X31+8], V1
	056 Move [X31+32], X8
	057 Move X3, X31
	058 Call CommandBuffer.SetGlobalTexture, X0, X1, X2
	059 Move X20, [X31+160]
	060 Move X19, [X31+168]
	061 Move X30, [X31+144]
	062 Add X31, X31, 176
	063 Return 
	064 Call 0x1C17F20

Method: System.Void Clear()

Disassembly:
	0x03AB5150 CBNZ W8, 0x3AB515C
	0x03AB5154 BL 0x1C16DFC
	0x03AB5158 LDR X0, [X22]
	0x03AB515C LDR X8, [X0 + 0xB8]
	0x03AB5160 LDRB W9, [X8]
	0x03AB5164 ADRP X8, 0x6A3000
	0x03AB5168 LDR X8, [X8 + 0x1C0]
	0x03AB516C CBZ W9, 0x3AB5194
	0x03AB5170 LDP V0, V1, [X31 + 0x70]
	0x03AB5174 LDR V2, [X31 + 0x9]
	0x03AB5178 LDR W10, [X31 + 0xA0]
	0x03AB517C MOV W22, W31
	0x03AB5180 ADD X9, X31, 0x130
	0x03AB5184 STP V0, V1, [X31 + 0x130]
	0x03AB5188 STR V2, [X31 + 0x15]
	0x03AB518C STR W10, [X31 + 0x160]
	0x03AB5190 B 0x3AB51B4
	0x03AB5194 LDP V0, V1, [X31 + 0x70]
	0x03AB5198 LDR V2, [X31 + 0x9]
	0x03AB519C LDR W10, [X31 + 0xA0]
	0x03AB51A0 ADD X9, X31, 0xF0
	0x03AB51A4 STP V0, V1, [X31 + 0xF0]
	0x03AB51A8 STR V2, [X31 + 0x11]
	0x03AB51AC STR W10, [X31 + 0x120]
	0x03AB51B0 MOVZ W22, 0x1
	0x03AB51B4 LDP V0, V1, [X9]
	0x03AB51B8 LDR W10, [X9 + 0x30]
	0x03AB51BC LDR V2, [X9 + 0x2]
	0x03AB51C0 ADRP X9, 0x69E000
	0x03AB51C4 LDR X9, [X9 + 0xFF8]
	0x03AB51C8 STR W10, [X31 + 0xE0]
	0x03AB51CC STP V1, V2, [X31 + 0xC0]
	0x03AB51D0 STR V0, [X31 + 0xB]
	0x03AB51D4 LDR X0, [X9]
	0x03AB51D8 LDR X23, [X8]
	0x03AB51DC LDR W9, [X0 + 0xE0]
	0x03AB51E0 CBNZ W9, 0x3AB51E8
	0x03AB51E4 BL 0x1C16DFC
	0x03AB51E8 LDP V0, V1, [X31 + 0xB0]
	0x03AB51EC LDR V2, [X31 + 0xD]
	0x03AB51F0 LDR W8, [X31 + 0xE0]
	0x03AB51F4 STP V0, V1, [X31]
	0x03AB51F8 STR V2, [X31 + 0x2]
	0x03AB51FC STR W8, [X31 + 0x30]
	0x03AB5200 ADD X1, X31, 0x0
	0x03AB5204 MOVZ W3, 0x1
	0x03AB5208 MOVZ W5, 0x1
	0x03AB520C MOV X0, X21
	0x03AB5210 MOV X2, X23
	0x03AB5214 MOV W4, W22
	0x03AB5218 MOV X6, X31
	0x03AB521C BL 0x3A87660
	0x03AB5220 CBZ X27, 0x3AB5470
	0x03AB5224 STR X0, [X27 + 0x20]
	0x03AB5228 LDR X8, [X31 + 0x198]
	0x03AB522C CBZ X8, 0x3AB5474
	0x03AB5230 ADD X1, X8, 0x20
	0x03AB5234 ADD X0, X31, 0x1A0
	0x03AB5238 MOVZ W2, 0x2
	0x03AB523C MOV X3, X31
	0x03AB5240 BL 0x3996A00
	0x03AB5244 ADD X0, X31, 0x1A0
	0x03AB5248 MOV W1, W31
	0x03AB524C MOV X2, X31
	0x03AB5250 BL 0x398E404
	0x03AB5254 LDR X8, [X25]
	0x03AB5258 LDR W9, [X8 + 0xE0]
	0x03AB525C CBNZ W9, 0x3AB526C
	0x03AB5260 MOV X0, X8
	0x03AB5264 BL 0x1C16DFC
	0x03AB5268 LDR X8, [X25]
	0x03AB526C LDR X9, [X8 + 0xB8]
	0x03AB5270 LDR X22, [X9 + 0x8]
	0x03AB5274 CBNZ X22, 0x3AB52CC
	0x03AB5278 LDR W9, [X8 + 0xE0]
	0x03AB527C CBNZ W9, 0x3AB528C
	0x03AB5280 MOV X0, X8
	0x03AB5284 BL 0x1C16DFC
	0x03AB5288 LDR X8, [X25]
	0x03AB528C ADRP X9, 0x6A3000
	0x03AB5290 LDR X8, [X8 + 0xB8]
	0x03AB5294 LDR X9, [X9 + 0x188]

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+64], X30
	003 Move [X31+72], X25
	004 Move [X31+80], X24
	005 Move [X31+88], X23
	006 Move [X31+96], X22
	007 Move [X31+104], X21
	008 Move [X31+112], X20
	009 Move [X31+120], X19
	010 Move X22, [X0+256]
	011 Compare X22, 0
	012 JumpIfEqual {87}
	013 Move X20, 0x643000
	014 Move X20, [X20+624]
	015 Move X19, X0
	016 Move X21, X31
	017 Move W23, 32
	018 Move X24, 0x924000
	019 Move W25, 1
	020 Move W8, [X22+24]
	021 NotImplemented "Instruction CMP not yet implemented."
	022 Move W9, [X24+2752]
	023 Compare W9, 0
	024 JumpIfNotEqual {29}
	025 Move X0, X20
	026 Call 0x1C17CF4
	027 Move [X24+2752], W25
	028 Move W8, [X22+24]
	029 Move X9, [X20]
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move X9, [X9+184]
	032 Move V0, [X9+96]
	033 Move V1, [X9+112]
	034 Move V3, [X9+64]
	035 Move V2, [X9+80]
	036 Move [X31+32], V0
	037 Move [X31+40], V1
	038 Move [X31], V3
	039 Move [X31+8], V2
	040 Move V0, [X31+32]
	041 Move V1, [X31+48]
	042 Move V2, [X31]
	043 Move V3, [X31+16]
	044 Add X8, X22, X23
	045 Add X23, X23, 64
	046 Move [X8+32], V0
	047 Move [X8+40], V1
	048 Move [X8], V2
	049 Move [X8+8], V3
	050 Move X22, [X19+256]
	051 Add X21, X21, 1
	052 Compare X22, 0
	053 JumpIfNotEqual {20}
	054 Move X9, [X19+272]
	055 Compare X9, 0
	056 JumpIfEqual {87}
	057 Move X8, X31
	058 Move W10, 32
	059 Move W11, [X9+24]
	060 NotImplemented "Instruction CMP not yet implemented."
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Add X9, X9, X10
	063 Move [X9], X31
	064 Move [X9+8], X31
	065 Move X9, [X19+272]
	066 Add X10, X10, 16
	067 Add X8, X8, 1
	068 Compare X9, 0
	069 JumpIfNotEqual {59}
	070 Move X8, [X19+264]
	071 Compare X8, 0
	072 JumpIfEqual {87}
	073 Move X20, X31
	074 Move W9, 32
	075 Move W10, [X8+24]
	076 NotImplemented "Instruction CMP not yet implemented."
	077 NotImplemented "Instruction CMP not yet implemented."
	078 Add X0, X8, X9
	079 Move X1, X31
	080 Add X20, X20, 1
	081 Add X21, X9, 456
	082 Call ShadowSliceData.Clear, X0
	083 Move X8, [X19+264]
	084 Move X9, X21
	085 Compare X8, 0
	086 JumpIfNotEqual {75}
	087 Call 0x1C17F20
	088 Move X20, [X31+112]
	089 Move X19, [X31+120]
	090 Move X22, [X31+96]
	091 Move X21, [X31+104]
	092 Move X24, [X31+80]
	093 Move X23, [X31+88]
	094 Move X30, [X31+64]
	095 Move X25, [X31+72]
	096 Add X31, X31, 128
	097 Return 
	098 Call 0x1C17F28

Method: System.Void SetEmptyMainLightCascadeShadowmap(ref UnityEngine.Rendering.ScriptableRenderContext context, ref UnityEngine.Rendering.Universal.RenderingData renderingData)

Disassembly:
	0x03AB53B0 LDR X19, [X9 + 0x10]
	0x03AB53B4 CBNZ X19, 0x3AB540C
	0x03AB53B8 LDR W9, [X8 + 0xE0]
	0x03AB53BC CBNZ W9, 0x3AB53CC
	0x03AB53C0 MOV X0, X8
	0x03AB53C4 BL 0x1C16DFC
	0x03AB53C8 LDR X8, [X25]
	0x03AB53CC ADRP X9, 0x6A3000
	0x03AB53D0 LDR X8, [X8 + 0xB8]
	0x03AB53D4 LDR X9, [X9 + 0x188]
	0x03AB53D8 LDR X20, [X8]
	0x03AB53DC LDR X0, [X9]
	0x03AB53E0 BL 0x1C16F10
	0x03AB53E4 ADRP X8, 0x6A3000
	0x03AB53E8 LDR X8, [X8 + 0x1A8]
	0x03AB53EC MOV X19, X0
	0x03AB53F0 LDR X2, [X8]
	0x03AB53F4 MOV X1, X20
	0x03AB53F8 MOV X3, X31
	0x03AB53FC BL 0x25C78AC
	0x03AB5400 LDR X8, [X25]
	0x03AB5404 LDR X8, [X8 + 0xB8]
	0x03AB5408 STR X19, [X8 + 0x10]
	0x03AB540C LDR X2, [X24]
	0x03AB5410 ADD X0, X31, 0x170
	0x03AB5414 MOV X1, X19
	0x03AB5418 BL 0x224107C
	0x03AB541C LDR X8, [X31 + 0x168]
	0x03AB5420 CBZ X8, 0x3AB5460
	0x03AB5424 LDR X20, [X8 + 0x20]
	0x03AB5428 ADD X0, X31, 0x170
	0x03AB542C MOV X1, X31
	0x03AB5430 BL 0x39972C0
	0x03AB5434 MOV X0, X20
	0x03AB5438 ADD X31, X31, 0x1D0
	0x03AB543C LDP X20, X19, [X31 + 0x50]
	0x03AB5440 LDP X22, X21, [X31 + 0x40]
	0x03AB5444 LDP X24, X23, [X31 + 0x30]
	0x03AB5448 LDP X26, X25, [X31 + 0x20]
	0x03AB544C LDP X30, X27, [X31 + 0x10]
	0x03AB5450 LDR X29, [X31], #0x60
	0x03AB5454 RET
	0x03AB5458 BL 0x1C16F20
	0x03AB545C BL 0x1C16F20
	0x03AB5460 BL 0x1C16F20
	0x03AB5464 BL 0x1C16F20
	0x03AB5468 BL 0x1C16F20
	0x03AB546C BL 0x1C16F20
	0x03AB5470 BL 0x1C16F20
	0x03AB5474 BL 0x1C16F20
	0x03AB5478 B 0x3AB5518
	0x03AB547C B 0x3AB5518
	0x03AB5480 B 0x3AB5518
	0x03AB5484 B 0x3AB5518
	0x03AB5488 B 0x3AB5518
	0x03AB548C B 0x3AB5518
	0x03AB5490 B 0x3AB5518
	0x03AB5494 B 0x3AB5518
	0x03AB5498 B 0x3AB54BC
	0x03AB549C B 0x3AB5518
	0x03AB54A0 B 0x3AB54BC
	0x03AB54A4 B 0x3AB5518

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x92E000
	007 Move X21, 0x667000
	008 Move W8, [X22+1134]
	009 Move X21, [X21+2296]
	010 Move X20, X2
	011 Move X19, X1
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {30}
	016 Move X0, 0x667000
	017 Move X0, [X0+2296]
	018 Call 0x1C17CF4
	019 Move X0, 0x6A2000
	020 Move X0, [X0+2256]
	021 Call 0x1C17CF4
	022 Move X0, 0x69C000
	023 Move X0, [X0+3200]
	024 Call 0x1C17CF4
	025 Move X0, 0x6A1000
	026 Move X0, [X0+3936]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X22+1134], W8
	030 Move X0, [X21]
	031 Move X21, 0x6A1000
	032 Move X22, 0x6A2000
	033 Move X20, [X20]
	034 Move W8, [X0+224]
	035 Move X21, [X21+3936]
	036 Move X22, [X22+2256]
	037 Compare W8, 0
	038 JumpIfNotEqual {40}
	039 Call 0x1C17DFC
	040 Move X1, [X21]
	041 Move X21, 0x69C000
	042 Move X21, [X21+3200]
	043 Move W2, 1
	044 Move X0, X20
	045 Move X3, X31
	046 Call CoreUtils.SetKeyword, X0, X1, X2
	047 Move X0, [X22]
	048 Move W8, [X0+224]
	049 Compare W8, 0
	050 JumpIfNotEqual {52}
	051 Call 0x1C17DFC
	052 Move X0, X20
	053 Call MainLightShadowCasterPass.SetEmptyMainLightShadowParams, X0
	054 Move X0, [X21]
	055 Move W8, [X0+224]
	056 Compare W8, 0
	057 JumpIfNotEqual {59}
	058 Call 0x1C17DFC
	059 Move X0, X19
	060 Move X1, X20
	061 Move X2, X31
	062 Call ScriptableRenderContext.ExecuteCommandBuffer, X0, X1
	063 Compare X20, 0
	064 JumpIfEqual {74}
	065 Move X0, X20
	066 Move X20, [X31+32]
	067 Move X19, [X31+40]
	068 Move X22, [X31+16]
	069 Move X21, [X31+24]
	070 Move X1, X31
	071 Move X30, [X31+48]
	072 Call CommandBuffer.Clear, X0
	073 Return 
	074 Call 0x1C17F20

Method: System.Void SetEmptyMainLightShadowParams(UnityEngine.Rendering.CommandBuffer cmd)

Disassembly:
	0x03AB5A08 STP X29, X30, [X31 + 0xF0]
	0x03AB5A0C STP X24, X23, [X31 + 0x100]
	0x03AB5A10 STP X22, X21, [X31 + 0x110]
	0x03AB5A14 STP X20, X19, [X31 + 0x120]
	0x03AB5A18 ADRP X22, 0x92D000
	0x03AB5A1C ADRP X21, 0x69F000
	0x03AB5A20 LDRB W8, [X22 + 0x47A]
	0x03AB5A24 LDR X21, [X21 + 0x8E8]
	0x03AB5A28 MOV X19, X1
	0x03AB5A2C MOV X20, X0
	0x03AB5A30 TBNZ X8, 0x0, 0x3AB5A54
	0x03AB5A34 ADRP X0, 0x69F000
	0x03AB5A38 LDR X0, [X0 + 0x8E8]
	0x03AB5A3C BL 0x1C16CF4
	0x03AB5A40 ADRP X0, 0x69F000
	0x03AB5A44 LDR X0, [X0 + 0x10]
	0x03AB5A48 BL 0x1C16CF4
	0x03AB5A4C MOVZ W8, 0x1
	0x03AB5A50 STRB W8, [X22 + 0x47A]
	0x03AB5A54 LDR X0, [X21]
	0x03AB5A58 MOVI V0.2D, 0x0
	0x03AB5A5C STR W31, [X31 + 0xE0]
	0x03AB5A60 STP V0, V0, [X31 + 0xC0]
	0x03AB5A64 STR V0, [X31 + 0xB]
	0x03AB5A68 LDR W8, [X0 + 0xE0]
	0x03AB5A6C CBNZ W8, 0x3AB5A78
	0x03AB5A70 BL 0x1C16DFC
	0x03AB5A74 LDR X0, [X21]
	0x03AB5A78 LDR X8, [X0 + 0xB8]
	0x03AB5A7C ADRP X24, 0x69F000
	0x03AB5A80 LDR W9, [X8 + 0x34]
	0x03AB5A84 LDUR V0, [X8 + 0x24]
	0x03AB5A88 LDUR V1, [X8 + 0x14]
	0x03AB5A8C LDUR V2, [X8 + 0x4]
	0x03AB5A90 STR W9, [X31 + 0xE0]
	0x03AB5A94 STP V1, V0, [X31 + 0xC0]
	0x03AB5A98 STR V2, [X31 + 0xB]
	0x03AB5A9C LDR W8, [X20 + 0x28]
	0x03AB5AA0 LDR X24, [X24 + 0x10]
	0x03AB5AA4 CMP W8, 0x2
	0x03AB5AA8 STR W8, [X31 + 0xB8]
	0x03AB5AAC B.LT 0x3AB5AF4
	0x03AB5AB0 LDR X0, [X24]
	0x03AB5AB4 LDR W22, [X20 + 0x50]
	0x03AB5AB8 LDR X21, [X20 + 0x20]
	0x03AB5ABC ADD X23, X20, 0x10
	0x03AB5AC0 LDR W8, [X0 + 0xE0]
	0x03AB5AC4 CBNZ W8, 0x3AB5ACC
	0x03AB5AC8 BL 0x1C16DFC

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x92E000
	007 Move X22, 0x6A4000
	008 Move X21, 0x6A2000
	009 Move W8, [X20+1135]
	010 Move X22, [X22+272]
	011 Move X21, [X21+2256]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x6A2000
	018 Move X0, [X0+2256]
	019 Call 0x1C17CF4
	020 Move X0, 0x6A4000
	021 Move X0, [X0+272]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X20+1135], W8
	025 Move X8, [X22]
	026 Move X0, [X21]
	027 Move X8, [X8+184]
	028 Move W9, [X0+224]
	029 Move W20, [X8+4]
	030 Compare W9, 0
	031 JumpIfNotEqual {34}
	032 Call 0x1C17DFC
	033 Move X0, [X21]
	034 Compare X19, 0
	035 JumpIfEqual {63}
	036 Move X8, [X0+184]
	037 Move X0, X19
	038 Move W1, W20
	039 Move X2, X31
	040 Move S2, [X8+8]
	041 Move S3, [X8+12]
	042 Move S0, [X8]
	043 Move S1, [X8+4]
	044 Call CommandBuffer.SetGlobalVector, X0, X1, X2
	045 Move X8, [X22]
	046 Move X9, [X21]
	047 Move X0, X19
	048 Move X20, [X31+32]
	049 Move X19, [X31+40]
	050 Move X8, [X8+184]
	051 Move X9, [X9+184]
	052 Move X22, [X31+16]
	053 Move X21, [X31+24]
	054 Move X2, X31
	055 Move W1, [X8+36]
	056 Move S0, [X9+16]
	057 Move S1, [X9+20]
	058 Move S2, [X9+24]
	059 Move S3, [X9+28]
	060 Move X30, [X31+48]
	061 Call CommandBuffer.SetGlobalVector, X0, X1, X2
	062 Return 
	063 Call 0x1C17F20

Method: System.Void RenderMainLightCascadeShadowmap(ref UnityEngine.Rendering.ScriptableRenderContext context, ref UnityEngine.Rendering.Universal.RenderingData renderingData)

Disassembly:
	0x03AB54A8 B 0x3AB54BC
	0x03AB54AC B 0x3AB54BC
	0x03AB54B0 B 0x3AB54BC
	0x03AB54B4 B 0x3AB5518
	0x03AB54B8 B 0x3AB54BC
	0x03AB54BC MOV X22, X0
	0x03AB54C0 CMP W1, 0x1
	0x03AB54C4 B.NE 0x3AB54F4
	0x03AB54C8 MOV X0, X22
	0x03AB54CC BL 0x3EB1AD0
	0x03AB54D0 LDR X19, [X0]
	0x03AB54D4 BL 0x3EB1AE0
	0x03AB54D8 ADD X0, X31, 0x170
	0x03AB54DC MOV X1, X31
	0x03AB54E0 BL 0x39972C0
	0x03AB54E4 MOV X20, X31
	0x03AB54E8 CBZ X19, 0x3AB5434
	0x03AB54EC MOV X0, X19
	0x03AB54F0 BL 0x1C16F18
	0x03AB54F4 MOV X19, X31
	0x03AB54F8 B 0x3AB5500
	0x03AB54FC MOV X22, X0
	0x03AB5500 ADD X0, X31, 0x170
	0x03AB5504 MOV X1, X31
	0x03AB5508 BL 0x39972C0
	0x03AB550C CBZ X19, 0x3AB5568
	0x03AB5510 MOV X0, X19
	0x03AB5514 BL 0x1C16F18
	0x03AB5518 MOV X22, X0
	0x03AB551C CMP W1, 0x1
	0x03AB5520 B.NE 0x3AB554C
	0x03AB5524 MOV X0, X22
	0x03AB5528 BL 0x3EB1AD0
	0x03AB552C LDR X23, [X0]
	0x03AB5530 BL 0x3EB1AE0
	0x03AB5534 ADD X0, X31, 0x1A0
	0x03AB5538 MOV X1, X31
	0x03AB553C BL 0x39972C0
	0x03AB5540 CBZ X23, 0x3AB52F8
	0x03AB5544 MOV X0, X23
	0x03AB5548 BL 0x1C16F18
	0x03AB554C MOV X23, X31
	0x03AB5550 B 0x3AB5558
	0x03AB5554 MOV X22, X0
	0x03AB5558 ADD X0, X31, 0x1A0
	0x03AB555C MOV X1, X31
	0x03AB5560 BL 0x39972C0
	0x03AB5564 CBNZ X23, 0x3AB5570
	0x03AB5568 MOV X0, X22
	0x03AB556C BL 0x1D2C690
	0x03AB5570 MOV X0, X23
	0x03AB5574 BL 0x1C16F18
	0x03AB5578 BL 0x1990590
	0x03AB557C STR X30, [X31 - 0x10]!
	0x03AB5580 LDR X9, [X1]
	0x03AB5584 CBZ X9, 0x3AB55D0
	0x03AB5588 STR X0, [X9 + 0x10]
	0x03AB558C LDR X9, [X1]
	0x03AB5590 CBZ X9, 0x3AB55D0
	0x03AB5594 LDR X10, [X3]
	0x03AB5598 STR X10, [X9 + 0x18]
	0x03AB559C LDR X9, [X1]
	0x03AB55A0 CBZ X9, 0x3AB55D0
	0x03AB55A4 LDRB W10, [X0 + 0x118]
	0x03AB55A8 MOV X8, X2
	0x03AB55AC MOVZ W2, 0x2B8
	0x03AB55B0 MOV X1, X8
	0x03AB55B4 STRB W10, [X9 + 0x2E4]
	0x03AB55B8 LDR W10, [X0 + 0xEC]
	0x03AB55BC ADD X0, X9, 0x28
	0x03AB55C0 STR W10, [X9 + 0x2E0]
	0x03AB55C4 BL 0x3EB1B30
	0x03AB55C8 LDR X30, [X31], #0x10
	0x03AB55CC RET
	0x03AB55D0 BL 0x1C16F20
	0x03AB55D4 STR X30, [X31 - 0x20]!
	0x03AB55D8 STP X20, X19, [X31 + 0x10]
	0x03AB55DC ADRP X20, 0x92D000
	0x03AB55E0 ADRP X19, 0x6A1000
	0x03AB55E4 LDRB W8, [X20 + 0x473]
	0x03AB55E8 LDR X19, [X19 + 0x8D0]
	0x03AB55EC TBNZ X8, 0x0, 0x3AB5604
	0x03AB55F0 ADRP X0, 0x6A1000
	0x03AB55F4 LDR X0, [X0 + 0x8D0]
	0x03AB55F8 BL 0x1C16CF4
	0x03AB55FC MOVZ W8, 0x1
	0x03AB5600 STRB W8, [X20 + 0x473]
	0x03AB5604 LDR X8, [X19]
	0x03AB5608 ADRP X9, 0xFFFFFFFFFD035000
	0x03AB560C LDR V0, [X9 + 0x73]
	0x03AB5610 LDR X8, [X8 + 0xB8]
	0x03AB5614 STR V0, [X8]
	0x03AB5618 LDR X8, [X19]
	0x03AB561C FMOV V0.4S, 0x0
	0x03AB5620 LDP X20, X19, [X31 + 0x10]
	0x03AB5624 LDR X9, [X8 + 0xB8]
	0x03AB5628 STR V0, [X9 + 0x1]
	0x03AB562C LDR X8, [X8 + 0xB8]
	0x03AB5630 STR V0, [X8 + 0x1]
	0x03AB5634 LDR X30, [X31], #0x20
	0x03AB5638 RET
	0x03AB563C MOV X1, X31
	0x03AB5640 B 0x33BDD8C
	0x03AB5644 STR X30, [X31 - 0x20]!
	0x03AB5648 STP X20, X19, [X31 + 0x10]
	0x03AB564C ADRP X19, 0x92D000
	0x03AB5650 ADRP X20, 0x6A3000
	0x03AB5654 LDRB W8, [X19 + 0x474]
	0x03AB5658 LDR X20, [X20 + 0x1B0]
	0x03AB565C TBNZ X8, 0x0, 0x3AB5674
	0x03AB5660 ADRP X0, 0x6A3000
	0x03AB5664 LDR X0, [X0 + 0x1B0]
	0x03AB5668 BL 0x1C16CF4
	0x03AB566C MOVZ W8, 0x1
	0x03AB5670 STRB W8, [X19 + 0x474]
	0x03AB5674 LDR X0, [X20]
	0x03AB5678 BL 0x1C16F10
	0x03AB567C MOV X1, X31
	0x03AB5680 MOV X19, X0
	0x03AB5684 BL 0x33BDD8C
	0x03AB5688 LDR X8, [X20]
	0x03AB568C LDR X8, [X8 + 0xB8]
	0x03AB5690 STR X19, [X8]
	0x03AB5694 LDP X20, X19, [X31 + 0x10]
	0x03AB5698 LDR X30, [X31], #0x20
	0x03AB569C RET
	0x03AB56A0 MOV X1, X31
	0x03AB56A4 B 0x33BDD8C
	0x03AB56A8 STR X30, [X31 - 0x10]!
	0x03AB56AC CBZ X1, 0x3AB56E0
	0x03AB56B0 LDRB W8, [X1 + 0x2E4]
	0x03AB56B4 CBZ W8, 0x3AB56C0
	0x03AB56B8 LDR X30, [X31], #0x10
	0x03AB56BC RET
	0x03AB56C0 CBZ X2, 0x3AB56E0
	0x03AB56C4 LDR X0, [X1 + 0x10]
	0x03AB56C8 CBZ X0, 0x3AB56E0
	0x03AB56CC ADD X8, X1, 0x28
	0x03AB56D0 ADD X1, X2, 0x10
	0x03AB56D4 MOV X2, X8
	0x03AB56D8 LDR X30, [X31], #0x10
	0x03AB56DC B 0x3AB44A8
	0x03AB56E0 BL 0x1C16F20
	0x03AB56E4 SUB X31, X31, 0xA0
	0x03AB56E8 STP X30, X21, [X31 + 0x80]
	0x03AB56EC STP X20, X19, [X31 + 0x90]
	0x03AB56F0 ADRP X21, 0x92D000
	0x03AB56F4 LDRB W8, [X21 + 0x475]
	0x03AB56F8 MOV X20, X2
	0x03AB56FC MOV X19, X1
	0x03AB5700 TBNZ X8, 0x0, 0x3AB5718
	0x03AB5704 ADRP X0, 0x69B000
	0x03AB5708 LDR X0, [X0 + 0xA88]
	0x03AB570C BL 0x1C16CF4
	0x03AB5710 MOVZ W8, 0x1
	0x03AB5714 STRB W8, [X21 + 0x475]
	0x03AB5718 CBZ X19, 0x3AB57D8
	0x03AB571C LDRB W8, [X19 + 0x2E4]
	0x03AB5720 CBZ W8, 0x3AB5758
	0x03AB5724 CBZ X20, 0x3AB57D8
	0x03AB5728 LDR X8, [X19 + 0x10]
	0x03AB572C CBZ X8, 0x3AB57D8
	0x03AB5730 ADD X2, X19, 0x28
	0x03AB5734 ADD X1, X20, 0x10
	0x03AB5738 BL 0x3AB43B0
	0x03AB573C LDR X8, [X19 + 0x18]
	0x03AB5740 CBZ X8, 0x3AB57D8
	0x03AB5744 LDR X8, [X8 + 0x40]
	0x03AB5748 CBZ X8, 0x3AB57D8
	0x03AB574C LDR X21, [X8 + 0x78]
	0x03AB5750 STR X21, [X19 + 0x20]
	0x03AB5754 B 0x3AB575C
	0x03AB5758 LDR X21, [X19 + 0x20]
	0x03AB575C ADRP X8, 0x69B000
	0x03AB5760 LDR X8, [X8 + 0xA88]
	0x03AB5764 LDR X20, [X19 + 0x28]
	0x03AB5768 LDR W19, [X19 + 0x2E0]
	0x03AB576C LDR X0, [X8]
	0x03AB5770 LDR W8, [X0 + 0xE0]
	0x03AB5774 CBNZ W8, 0x3AB577C
	0x03AB5778 BL 0x1C16DFC
	0x03AB577C ADD X8, X31, 0x28
	0x03AB5780 MOV X0, X21
	0x03AB5784 MOV X1, X31
	0x03AB5788 BL 0x399A594
	0x03AB578C LDUR V0, [X31 + 0x28]
	0x03AB5790 LDUR V1, [X31 + 0x38]
	0x03AB5794 LDR X8, [X31 + 0x48]
	0x03AB5798 STP V0, V1, [X31 + 0x50]
	0x03AB579C STR X8, [X31 + 0x70]
	0x03AB57A0 CBZ X20, 0x3AB57D8
	0x03AB57A4 LDP V0, V1, [X31 + 0x50]
	0x03AB57A8 LDR X8, [X31 + 0x70]
	0x03AB57AC ADD X2, X31, 0x0
	0x03AB57B0 MOV X0, X20
	0x03AB57B4 MOV W1, W19
	0x03AB57B8 MOV X3, X31
	0x03AB57BC STP V0, V1, [X31]
	0x03AB57C0 STR X8, [X31 + 0x20]
	0x03AB57C4 BL 0x3C4FCFC
	0x03AB57C8 LDP X20, X19, [X31 + 0x90]
	0x03AB57CC LDP X30, X21, [X31 + 0x80]
	0x03AB57D0 ADD X31, X31, 0xA0
	0x03AB57D4 RET
	0x03AB57D8 BL 0x1C16F20
	0x03AB57DC STP X30, X21, [X31 - 0x20]!
	0x03AB57E0 STP X20, X19, [X31 + 0x10]
	0x03AB57E4 ADRP X21, 0x92D000
	0x03AB57E8 ADRP X20, 0x69F000
	0x03AB57EC LDRB W8, [X21 + 0x476]
	0x03AB57F0 LDR X20, [X20 + 0x8E8]
	0x03AB57F4 MOV X19, X0
	0x03AB57F8 TBNZ X8, 0x0, 0x3AB5810
	0x03AB57FC ADRP X0, 0x69F000
	0x03AB5800 LDR X0, [X0 + 0x8E8]
	0x03AB5804 BL 0x1C16CF4
	0x03AB5808 MOVZ W8, 0x1
	0x03AB580C STRB W8, [X21 + 0x476]
	0x03AB5810 LDR X0, [X20]
	0x03AB5814 LDR W8, [X0 + 0xE0]
	0x03AB5818 CBNZ W8, 0x3AB5824
	0x03AB581C BL 0x1C16DFC
	0x03AB5820 LDR X0, [X20]
	0x03AB5824 LDR X8, [X0 + 0xB8]
	0x03AB5828 ADD X9, X19, 0x30
	0x03AB582C ADD X10, X19, 0x10
	0x03AB5830 LDP X20, X19, [X31 + 0x10]
	0x03AB5834 LDRB W8, [X8]
	0x03AB5838 CMP W8, 0x0
	0x03AB583C CSEL X0, X9, X10, EQ
	0x03AB5840 LDP X30, X21, [X31], #0x20
	0x03AB5844 RET
	0x03AB5848 STP X30, X21, [X31 - 0x20]!
	0x03AB584C STP X20, X19, [X31 + 0x10]
	0x03AB5850 ADRP X21, 0x92D000
	0x03AB5854 ADRP X20, 0x69F000
	0x03AB5858 LDRB W8, [X21 + 0x477]
	0x03AB585C LDR X20, [X20 + 0x8E8]
	0x03AB5860 MOV X19, X0
	0x03AB5864 TBNZ X8, 0x0, 0x3AB587C
	0x03AB5868 ADRP X0, 0x69F000
	0x03AB586C LDR X0, [X0 + 0x8E8]
	0x03AB5870 BL 0x1C16CF4
	0x03AB5874 MOVZ W8, 0x1
	0x03AB5878 STRB W8, [X21 + 0x477]
	0x03AB587C LDR X0, [X20]
	0x03AB5880 LDR W8, [X0 + 0xE0]
	0x03AB5884 CBNZ W8, 0x3AB5890
	0x03AB5888 BL 0x1C16DFC
	0x03AB588C LDR X0, [X20]
	0x03AB5890 LDR X8, [X0 + 0xB8]
	0x03AB5894 ADD X9, X19, 0x10
	0x03AB5898 ADD X10, X19, 0x30
	0x03AB589C LDP X20, X19, [X31 + 0x10]
	0x03AB58A0 LDRB W8, [X8]
	0x03AB58A4 CMP W8, 0x0
	0x03AB58A8 CSEL X0, X9, X10, EQ
	0x03AB58AC LDP X30, X21, [X31], #0x20
	0x03AB58B0 RET
	0x03AB58B4 STP X30, X23, [X31 - 0x30]!
	0x03AB58B8 STP X22, X21, [X31 + 0x10]
	0x03AB58BC STP X20, X19, [X31 + 0x20]
	0x03AB58C0 ADRP X23, 0x92D000
	0x03AB58C4 ADRP X22, 0x688000
	0x03AB58C8 ADRP X21, 0x692000
	0x03AB58CC LDRB W8, [X23 + 0x478]
	0x03AB58D0 LDR X22, [X22 + 0xAC0]
	0x03AB58D4 LDR X21, [X21 + 0x568]
	0x03AB58D8 MOV X20, X1
	0x03AB58DC MOV X19, X0
	0x03AB58E0 TBNZ X8, 0x0, 0x3AB5904
	0x03AB58E4 ADRP X0, 0x692000
	0x03AB58E8 LDR X0, [X0 + 0x568]
	0x03AB58EC BL 0x1C16CF4
	0x03AB58F0 ADRP X0, 0x688000
	0x03AB58F4 LDR X0, [X0 + 0xAC0]
	0x03AB58F8 BL 0x1C16CF4
	0x03AB58FC MOVZ W8, 0x1
	0x03AB5900 STRB W8, [X23 + 0x478]
	0x03AB5904 MOVZ W8, 0x1
	0x03AB5908 MOV X0, X19
	0x03AB590C MOV X1, X31
	0x03AB5910 STRB W8, [X19 + 0x54]
	0x03AB5914 BL 0x33BDD8C
	0x03AB5918 LDR X1, [X22]
	0x03AB591C MOV X0, X20
	0x03AB5920 MOV X2, X31
	0x03AB5924 BL 0x321B938
	0x03AB5928 STR X0, [X19 + 0x20]
	0x03AB592C LDR X1, [X21]
	0x03AB5930 MOV X0, X20
	0x03AB5934 MOV X2, X31
	0x03AB5938 BL 0x321B938
	0x03AB593C STR X0, [X19 + 0x40]
	0x03AB5940 LDP X20, X19, [X31 + 0x20]
	0x03AB5944 LDP X22, X21, [X31 + 0x10]
	0x03AB5948 LDP X30, X23, [X31], #0x30
	0x03AB594C RET
	0x03AB5950 STP X30, X19, [X31 - 0x10]!
	0x03AB5954 MOV X19, X0
	0x03AB5958 LDR X0, [X0 + 0x10]
	0x03AB595C CBZ X0, 0x3AB5968
	0x03AB5960 MOV X1, X31
	0x03AB5964 BL 0x39D4B1C
	0x03AB5968 LDR X0, [X19 + 0x30]
	0x03AB596C CBZ X0, 0x3AB5978
	0x03AB5970 MOV X1, X31
	0x03AB5974 BL 0x39D4B1C
	0x03AB5978 LDR X0, [X19 + 0x18]
	0x03AB597C CBZ X0, 0x3AB5988
	0x03AB5980 MOV X1, X31
	0x03AB5984 BL 0x39D4B1C
	0x03AB5988 LDR X0, [X19 + 0x38]
	0x03AB598C CBZ X0, 0x3AB599C
	0x03AB5990 MOV X1, X31
	0x03AB5994 LDP X30, X19, [X31], #0x10
	0x03AB5998 B 0x39D4B1C
	0x03AB599C LDP X30, X19, [X31], #0x10
	0x03AB59A0 RET
	0x03AB59A4 STP X30, X19, [X31 - 0x10]!
	0x03AB59A8 LDRB W8, [X0 + 0x54]
	0x03AB59AC MOV X19, X0
	0x03AB59B0 CBZ W8, 0x3AB59D4
	0x03AB59B4 MOV X0, X19
	0x03AB59B8 BL 0x3AB57DC
	0x03AB59BC LDR W8, [X0 + 0x18]
	0x03AB59C0 CMP W8, 0x1
	0x03AB59C4 B.LE 0x3AB59D4
	0x03AB59C8 MOV X0, X19
	0x03AB59CC BL 0x3AB57DC
	0x03AB59D0 B 0x3AB59E0
	0x03AB59D4 MOV X0, X19
	0x03AB59D8 BL 0x3AB57DC
	0x03AB59DC ADD X0, X0, 0x8
	0x03AB59E0 LDR X0, [X0]
	0x03AB59E4 LDP X30, X19, [X31], #0x10
	0x03AB59E8 RET
	0x03AB59EC STP X30, X19, [X31 - 0x10]!
	0x03AB59F0 MOV X19, X0
	0x03AB59F4 BL 0x3AB5A04
	0x03AB59F8 MOV X0, X19
	0x03AB59FC LDP X30, X19, [X31], #0x10
	0x03AB5A00 B 0x3AB59A4
	0x03AB5A04 SUB X31, X31, 0x130

ISIL:
	001 Move [X31-128], D10
	002 Move [X31+16], D9
	003 Move [X31+24], D8
	004 Move [X31+32], X29
	005 Move [X31+40], X30
	006 Move [X31+48], X28
	007 Move [X31+56], X27
	008 Move [X31+64], X26
	009 Move [X31+72], X25
	010 Move [X31+80], X24
	011 Move [X31+88], X23
	012 Move [X31+96], X22
	013 Move [X31+104], X21
	014 Move [X31+112], X20
	015 Move [X31+120], X19
	016 Subtract X31, X31, 1088
	017 NotImplemented "Instruction MRS not yet implemented."
	018 Move X8, [X27+40]
	019 Move X21, 0x92E000
	020 Move X20, X2
	021 Move X22, X1
	022 Move [X31+1080], X8
	023 Move W8, [X21+1136]
	024 Move X19, X0
	025 Move TEMP, X8
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {52}
	029 Move X0, 0x667000
	030 Move X0, [X0+2296]
	031 Call 0x1C17CF4
	032 Move X0, 0x6A0000
	033 Move X0, [X0+168]
	034 Call 0x1C17CF4
	035 Move X0, 0x6A2000
	036 Move X0, [X0+3776]
	037 Call 0x1C17CF4
	038 Move X0, 0x668000
	039 Move X0, [X0+2216]
	040 Call 0x1C17CF4
	041 Move X0, 0x6A3000
	042 Move X0, [X0+2696]
	043 Call 0x1C17CF4
	044 Move X0, 0x6A1000
	045 Move X0, [X0+3896]
	046 Call 0x1C17CF4
	047 Move X0, 0x6A1000
	048 Move X0, [X0+3936]
	049 Call 0x1C17CF4
	050 Move W8, 1
	051 Move [X21+1136], W8
	052 NotImplemented "Instruction MOVI not yet implemented."
	053 Add X0, X31, 792
	054 Move W2, 288
	055 Move W1, W31
	056 Move [X31+528], W31
	057 Move [X31+496], V0
	058 Move [X31+504], V0
	059 Move [X31+464], V0
	060 Move [X31+472], V0
	061 Move [X31+432], V0
	062 Move [X31+440], V0
	063 Move [X31+26], V0
	064 Move [X31+408], W31
	065 Call 0x3EB2B10
	066 NotImplemented "Instruction LDRSW not yet implemented."
	067 Add W31, W23, 1
	068 Move X26, 0x6A0000
	069 Move X26, [X26+168]
	070 Move X8, [X20+568]
	071 Move X28, 0x6A2000
	072 Move X24, [X20+8]
	073 Move X25, [X20+16]
	074 Move X28, [X28+3776]
	075 Move W9, 116
	076 NotImplemented "Instruction MADD not yet implemented."
	077 Add X0, X31, 416
	078 Move W2, 116
	079 Call 0x3EB2B30
	080 Move X1, [X26]
	081 Move X21, [X20]
	082 Move W0, 14
	083 Call 0x2236BC0, X0
	084 Move X2, X0
	085 Add X0, X31, 408
	086 Move X1, X21
	087 Move X3, X31
	088 Call ProfilingScope..ctor, X0, X1, X2
	089 Move X0, [X28]
	090 Move V10, [X20+476]
	091 Move V8, [X20+480]
	092 Move V9, [X20+484]
	093 Move W8, [X0+224]
	094 Compare W8, 0
	095 JumpIfNotEqual {97}
	096 Call 0x1C17DFC
	097 Move X0, X21
	098 Move V0, V10
	099 Move V1, V8
	100 Move V2, V9
	101 Move X1, X31
	102 Call ShadowUtils.SetCameraPosition, X0, X1
	103 Add X0, X20, 24
	104 Add X8, X31, 336
	105 Move W1, W31
	106 Move X2, X31
	107 Call CameraData.GetViewMatrix, X0, X1
	108 Move V0, [X31+336]
	109 Move V1, [X31+352]
	110 Move V2, [X31+368]
	111 Move V3, [X31+384]
	112 Move [X31+272], V0
	113 Move [X31+280], V1
	114 Move [X31+304], V2
	115 Move [X31+312], V3
	116 Add X1, X31, 272
	117 Move X0, X21
	118 Move X2, X31
	119 Call ShadowUtils.SetWorldToCameraMatrix, X0, X1
	120 Add X0, X31, 792
	121 Move W4, 2
	122 Move X1, X24
	123 Move X2, X25
	124 Move W3, W23
	125 Move X5, X31
	126 Call ShadowDrawingSettings..ctor, X0, X1, X2, X3
	127 Move X8, 0x668000
	128 Move X8, [X8+2216]
	129 Move X0, [X8]
	130 Move W8, [X0+224]
	131 Compare W8, 0
	132 JumpIfNotEqual {134}
	133 Call 0x1C17DFC
	134 Move X0, X31
	135 Call UniversalRenderPipeline.get_asset
	136 Compare X0, 0
	137 JumpIfEqual {338}
	138 Move W1, [X0+236]
	139 Move [X31+8], X27
	140 Add X0, X31, 792
	141 Move X2, X31
	142 Call ShadowDrawingSettings.set_useRenderingLayerMaskTest, X0, X1
	143 Move W8, [X19+232]
	144 Move X25, 0x667000
	145 Move X25, [X25+2296]
	146 NotImplemented "Instruction CMP not yet implemented."
	147 Move X26, 0x6A3000
	148 Move X26, [X26+2696]
	149 Move X28, X31
	150 Move X29, X31
	151 Add X24, X20, 592
	152 Move X8, [X19+264]
	153 Compare X8, 0
	154 JumpIfEqual {334}
	155 Move W9, [X8+24]
	156 NotImplemented "Instruction CMP not yet implemented."
	157 Add X8, X8, X28
	158 Add X1, X8, 236
	159 Add X0, X31, 536
	160 Move W2, 252
	161 Call 0x3EB2B30
	162 Add X0, X31, 792
	163 Add X1, X31, 536
	164 Move X2, X31
	165 Call ShadowDrawingSettings.set_splitData, X0, X1
	166 Move X8, [X19+264]
	167 Compare X8, 0
	168 JumpIfEqual {335}
	169 Move W9, [X8+24]
	170 NotImplemented "Instruction CMP not yet implemented."
	171 Add X8, X8, X28
	172 Move X9, 0x6A2000
	173 Move V0, [X8+128]
	174 Move V1, [X8+144]
	175 Move V2, [X8+96]
	176 Move V3, [X8+112]
	177 Move X9, [X9+3776]
	178 Move [X31+368], V0
	179 Move [X31+376], V1
	180 Move [X31+336], V2
	181 Move [X31+344], V3
	182 Move X0, [X9]
	183 Move W27, [X8+232]
	184 Move W9, [X0+224]
	185 Compare W9, 0
	186 JumpIfNotEqual {188}
	187 Call 0x1C17DFC
	188 Move V0, [X31+336]
	189 Move V1, [X31+352]
	190 Move V2, [X31+368]
	191 Move V3, [X31+384]
	192 Move [X31+208], V0
	193 Move [X31+216], V1
	194 NotImplemented "Instruction SCVTF not yet implemented."
	195 Move [X31+240], V2
	196 Move [X31+248], V3
	197 Add X0, X31, 416
	198 Add X3, X31, 208
	199 Move W1, W23
	200 Move X2, X24
	201 Move X4, X31
	202 Call ShadowUtils.GetShadowBias, X0, X1, X2, X3, V0
	203 Add X1, X31, 416
	204 Move X0, X21
	205 Move X2, X31
	206 Call ShadowUtils.SetupShadowCasterConstantBuffer, X0, X1, X2
	207 Move X0, [X25]
	208 Move W8, [X0+224]
	209 Compare W8, 0
	210 JumpIfNotEqual {212}
	211 Call 0x1C17DFC
	212 Move X1, [X26]
	213 Move X0, X21
	214 Move W2, W31
	215 Move X3, X31
	216 Call CoreUtils.SetKeyword, X0, X1, X2
	217 Move X8, [X19+264]
	218 Compare X8, 0
	219 JumpIfEqual {333}
	220 Move W9, [X8+24]
	221 NotImplemented "Instruction CMP not yet implemented."
	222 Add X8, X8, X28
	223 Move V0, [X8+64]
	224 Move V1, [X8+80]
	225 Move V2, [X8+32]
	226 Move V3, [X8+48]
	227 Add X2, X8, 32
	228 Move [X31+176], V0
	229 Move [X31+184], V1
	230 Move [X31+144], V2
	231 Move [X31+152], V3
	232 Move V4, [X8+128]
	233 Move V5, [X8+144]
	234 Move V6, [X8+96]
	235 Move V7, [X8+112]
	236 Move [X31+16], V2
	237 Move [X31+24], V3
	238 Move [X31+48], V0
	239 Move [X31+56], V1
	240 Move [X31+112], V4
	241 Move [X31+120], V5
	242 Move [X31+80], V6
	243 Move [X31+88], V7
	244 Add X3, X31, 792
	245 Add X4, X31, 80
	246 Add X5, X31, 16
	247 Move X0, X21
	248 Move X1, X22
	249 Move X6, X31
	250 Call ShadowUtils.RenderShadowSlice, X0, X1, X2, X3, X4, X5
	251 NotImplemented "Instruction LDRSW not yet implemented."
	252 Add X29, X29, 1
	253 Add X28, X28, 456
	254 NotImplemented "Instruction CMP not yet implemented."
	255 Add X0, X31, 416
	256 Move X1, X31
	257 Call VisibleLight.get_light, X0
	258 Move X27, [X31+8]
	259 Compare X0, 0
	260 JumpIfEqual {339}
	261 Move X1, X31
	262 Call Light.get_shadows, X0
	263 NotImplemented "Instruction CMP not yet implemented."
	264 Move W8, [X20+636]
	265 NotImplemented "Instruction CMP not yet implemented."
	266 NotImplemented "Instruction CSET not yet implemented."
	267 Move W8, W31
	268 Move [X20+665], W8
	269 Move X0, [X25]
	270 Move W22, [X20+604]
	271 Move W8, [X0+224]
	272 Compare W8, 0
	273 JumpIfNotEqual {275}
	274 Call 0x1C17DFC
	275 Move X8, 0x6A1000
	276 Move X8, [X8+3936]
	277 NotImplemented "Instruction CMP not yet implemented."
	278 NotImplemented "Instruction CSET not yet implemented."
	279 Move X1, [X8]
	280 Move X0, X21
	281 Move X3, X31
	282 Call CoreUtils.SetKeyword, X0, X1, X2
	283 Move X9, 0x6A1000
	284 Move W8, [X20+604]
	285 Move X9, [X9+3896]
	286 NotImplemented "Instruction CMP not yet implemented."
	287 Move X1, [X9]
	288 NotImplemented "Instruction CSET not yet implemented."
	289 Move X0, X21
	290 Move X3, X31
	291 Call CoreUtils.SetKeyword, X0, X1, X2
	292 Move X8, 0x6A2000
	293 Move X8, [X8+3776]
	294 Move X0, [X8]
	295 Move W8, [X0+224]
	296 Compare W8, 0
	297 JumpIfNotEqual {299}
	298 Call 0x1C17DFC
	299 Add X20, X20, 592
	300 Move X0, X21
	301 Move X1, X20
	302 Move X2, X31
	303 Call ShadowUtils.SetSoftShadowQualityShaderKeywords, X0, X1
	304 Add X2, X31, 416
	305 Move X0, X19
	306 Move X1, X21
	307 Move X3, X20
	308 Call MainLightShadowCasterPass.SetupMainLightShadowReceiverConstants, X0, X1, X2, X3
	309 Add X0, X31, 408
	310 Move X1, X31
	311 Call ProfilingScope.Dispose, X0
	312 Move X8, [X27+40]
	313 Move X9, [X31+1080]
	314 NotImplemented "Instruction CMP not yet implemented."
	315 Add X31, X31, 1088
	316 Move X20, [X31+112]
	317 Move X19, [X31+120]
	318 Move X22, [X31+96]
	319 Move X21, [X31+104]
	320 Move X24, [X31+80]
	321 Move X23, [X31+88]
	322 Move X26, [X31+64]
	323 Move X25, [X31+72]
	324 Move X28, [X31+48]
	325 Move X27, [X31+56]
	326 Move X29, [X31+32]
	327 Move X30, [X31+40]
	328 Move D9, [X31+16]
	329 Move D8, [X31+24]
	330 Move V10, [X31+128]
	331 Return 
	332 Call 0x1C17F28
	333 Call 0x1C17F20
	334 Call 0x1C17F20
	335 Call 0x1C17F20
	336 Call 0x1C17F28
	337 Call 0x1C17F28
	338 Call 0x1C17F20
	339 Call 0x1C17F20
	340 Call 0x3EB2B20
	341 Move X27, [X31+8]
	342 Move X19, X0
	343 NotImplemented "Instruction CMP not yet implemented."
	344 Move X0, X19
	345 Call 0x3EB2AD0
	346 Move X20, [X0]
	347 Call 0x3EB2AE0
	348 Add X0, X31, 408
	349 Move X1, X31
	350 Call ProfilingScope.Dispose, X0
	351 Compare X20, 0
	352 JumpIfEqual {312}
	353 Move X0, X20
	354 Call 0x1C17F18
	355 Move X20, X31
	356 Move X19, X0
	357 Add X0, X31, 408
	358 Move X1, X31
	359 Call ProfilingScope.Dispose, X0
	360 Compare X20, 0
	361 JumpIfNotEqual {364}
	362 Move X0, X19
	363 Call 0x1D2D690
	364 Move X0, X20
	365 Call 0x1C17F18
	366 Call 0x1991590

Method: System.Void SetupMainLightShadowReceiverConstants(UnityEngine.Rendering.CommandBuffer cmd, ref UnityEngine.Rendering.VisibleLight shadowLight, ref UnityEngine.Rendering.Universal.ShadowData shadowData)

Disassembly:
	0x03AB5ACC ADD X1, X31, 0xB0
	0x03AB5AD0 FMOV S0, W31
	0x03AB5AD4 MOVZ W3, 0x1
	0x03AB5AD8 MOVZ W5, 0x1
	0x03AB5ADC MOV X0, X23
	0x03AB5AE0 MOV W2, W22
	0x03AB5AE4 MOV W4, W31
	0x03AB5AE8 MOV X6, X21
	0x03AB5AEC MOV X7, X31
	0x03AB5AF0 BL 0x3A6D184
	0x03AB5AF4 LDR W8, [X20 + 0x48]
	0x03AB5AF8 CMP W8, 0x2
	0x03AB5AFC STR W8, [X31 + 0xB8]
	0x03AB5B00 B.LT 0x3AB5B48
	0x03AB5B04 LDR X0, [X24]
	0x03AB5B08 LDR W22, [X20 + 0x50]
	0x03AB5B0C LDR X21, [X20 + 0x40]
	0x03AB5B10 ADD X23, X20, 0x30
	0x03AB5B14 LDR W8, [X0 + 0xE0]
	0x03AB5B18 CBNZ W8, 0x3AB5B20
	0x03AB5B1C BL 0x1C16DFC
	0x03AB5B20 ADD X1, X31, 0xB0
	0x03AB5B24 FMOV S0, W31
	0x03AB5B28 MOVZ W3, 0x1
	0x03AB5B2C MOVZ W5, 0x1
	0x03AB5B30 MOV X0, X23
	0x03AB5B34 MOV W2, W22
	0x03AB5B38 MOV W4, W31
	0x03AB5B3C MOV X6, X21
	0x03AB5B40 MOV X7, X31
	0x03AB5B44 BL 0x3A6D184
	0x03AB5B48 LDR X0, [X24]
	0x03AB5B4C MOVZ W8, 0x1
	0x03AB5B50 STR W8, [X31 + 0xB8]
	0x03AB5B54 LDR W21, [X20 + 0x50]
	0x03AB5B58 LDR W8, [X0 + 0xE0]
	0x03AB5B5C LDR X22, [X20 + 0x20]
	0x03AB5B60 ADD X23, X20, 0x18
	0x03AB5B64 CBNZ W8, 0x3AB5B6C
	0x03AB5B68 BL 0x1C16DFC
	0x03AB5B6C ADD X1, X31, 0xB0
	0x03AB5B70 FMOV S0, W31
	0x03AB5B74 MOVZ W3, 0x1
	0x03AB5B78 MOVZ W5, 0x1
	0x03AB5B7C MOV X0, X23
	0x03AB5B80 MOV W2, W21
	0x03AB5B84 MOV W4, W31
	0x03AB5B88 MOV X6, X22
	0x03AB5B8C MOV X7, X31
	0x03AB5B90 BL 0x3A6D184
	0x03AB5B94 LDR W2, [X20 + 0x50]
	0x03AB5B98 LDR X6, [X20 + 0x40]
	0x03AB5B9C ADD X0, X20, 0x38
	0x03AB5BA0 ADD X1, X31, 0xB0
	0x03AB5BA4 FMOV S0, W31
	0x03AB5BA8 MOVZ W3, 0x1
	0x03AB5BAC MOVZ W5, 0x1
	0x03AB5BB0 MOV W4, W31
	0x03AB5BB4 MOV X7, X31
	0x03AB5BB8 BL 0x3A6D184
	0x03AB5BBC LDP X0, X21, [X20 + 0x18]
	0x03AB5BC0 ADD X8, X31, 0x58
	0x03AB5BC4 MOV X1, X31
	0x03AB5BC8 BL 0x39CDF64
	0x03AB5BCC LDUR V0, [X31 + 0x58]
	0x03AB5BD0 LDUR V1, [X31 + 0x68]
	0x03AB5BD4 LDR X8, [X31 + 0x78]
	0x03AB5BD8 STP V0, V1, [X31 + 0x80]
	0x03AB5BDC STR X8, [X31 + 0xA0]
	0x03AB5BE0 CBZ X19, 0x3AB5C58
	0x03AB5BE4 LDP V0, V1, [X31 + 0x80]
	0x03AB5BE8 LDR X8, [X31 + 0xA0]
	0x03AB5BEC ADD X2, X31, 0x30
	0x03AB5BF0 MOV X0, X19
	0x03AB5BF4 MOV X1, X21
	0x03AB5BF8 MOV X3, X31
	0x03AB5BFC STP V0, V1, [X31 + 0x30]
	0x03AB5C00 STR X8, [X31 + 0x50]
	0x03AB5C04 BL 0x3C4FC28
	0x03AB5C08 LDP X0, X21, [X20 + 0x38]
	0x03AB5C0C ADD X8, X31, 0x58
	0x03AB5C10 MOV X1, X31
	0x03AB5C14 BL 0x39CDF64
	0x03AB5C18 LDUR V0, [X31 + 0x58]
	0x03AB5C1C LDUR V1, [X31 + 0x68]
	0x03AB5C20 LDR X8, [X31 + 0x78]
	0x03AB5C24 ADD X2, X31, 0x0
	0x03AB5C28 MOV X0, X19
	0x03AB5C2C MOV X1, X21
	0x03AB5C30 MOV X3, X31
	0x03AB5C34 STP V0, V1, [X31]
	0x03AB5C38 STR X8, [X31 + 0x20]
	0x03AB5C3C BL 0x3C4FC28
	0x03AB5C40 LDP X20, X19, [X31 + 0x120]
	0x03AB5C44 LDP X22, X21, [X31 + 0x110]
	0x03AB5C48 LDP X24, X23, [X31 + 0x100]
	0x03AB5C4C LDP X29, X30, [X31 + 0xF0]
	0x03AB5C50 ADD X31, X31, 0x130
	0x03AB5C54 RET
	0x03AB5C58 BL 0x1C16F20
	0x03AB5C5C STR X30, [X31 - 0x20]!
	0x03AB5C60 STP X20, X19, [X31 + 0x10]
	0x03AB5C64 LDRB W8, [X0 + 0x54]
	0x03AB5C68 MOV X19, X0
	0x03AB5C6C MOV X20, X1
	0x03AB5C70 CBNZ W8, 0x3AB5C98
	0x03AB5C74 MOV X0, X19
	0x03AB5C78 BL 0x3AB5848
	0x03AB5C7C LDR W8, [X0 + 0x18]
	0x03AB5C80 CMP W8, 0x2
	0x03AB5C84 B.LT 0x3AB5C98
	0x03AB5C88 MOV X0, X19
	0x03AB5C8C BL 0x3AB5848
	0x03AB5C90 MOVZ W8, 0x1
	0x03AB5C94 STR W8, [X0 + 0x18]
	0x03AB5C98 MOV X0, X19
	0x03AB5C9C MOV X1, X20
	0x03AB5CA0 BL 0x3AB5A04
	0x03AB5CA4 LDRB W8, [X19 + 0x54]
	0x03AB5CA8 CBZ W8, 0x3AB5CCC
	0x03AB5CAC MOV X0, X19
	0x03AB5CB0 BL 0x3AB5848
	0x03AB5CB4 LDR W8, [X0 + 0x18]
	0x03AB5CB8 CMP W8, 0x1
	0x03AB5CBC B.LE 0x3AB5CCC
	0x03AB5CC0 MOV X0, X19
	0x03AB5CC4 BL 0x3AB5848
	0x03AB5CC8 B 0x3AB5CD8
	0x03AB5CCC MOV X0, X19
	0x03AB5CD0 BL 0x3AB5848
	0x03AB5CD4 ADD X0, X0, 0x8
	0x03AB5CD8 LDR X0, [X0]
	0x03AB5CDC LDP X20, X19, [X31 + 0x10]
	0x03AB5CE0 LDR X30, [X31], #0x20
	0x03AB5CE4 RET
	0x03AB5CE8 STR X30, [X31 - 0x20]!
	0x03AB5CEC STP X20, X19, [X31 + 0x10]
	0x03AB5CF0 ADRP X20, 0x92D000
	0x03AB5CF4 ADRP X19, 0x69F000
	0x03AB5CF8 LDRB W8, [X20 + 0x479]
	0x03AB5CFC LDR X19, [X19 + 0x8E8]
	0x03AB5D00 TBNZ X8, 0x0, 0x3AB5D18
	0x03AB5D04 ADRP X0, 0x69F000
	0x03AB5D08 LDR X0, [X0 + 0x8E8]
	0x03AB5D0C BL 0x1C16CF4
	0x03AB5D10 MOVZ W8, 0x1
	0x03AB5D14 STRB W8, [X20 + 0x479]
	0x03AB5D18 LDR X0, [X19]
	0x03AB5D1C LDR W8, [X0 + 0xE0]
	0x03AB5D20 CBNZ W8, 0x3AB5D2C
	0x03AB5D24 BL 0x1C16DFC
	0x03AB5D28 LDR X0, [X19]
	0x03AB5D2C LDR X8, [X0 + 0xB8]
	0x03AB5D30 LDP X20, X19, [X31 + 0x10]
	0x03AB5D34 LDRB W9, [X8]
	0x03AB5D38 EOR W9, W9, 0x1
	0x03AB5D3C STRB W9, [X8]
	0x03AB5D40 LDR X30, [X31], #0x20
	0x03AB5D44 RET
	0x03AB5D48 STP X30, X21, [X31 - 0x20]!
	0x03AB5D4C STP X20, X19, [X31 + 0x10]
	0x03AB5D50 ADRP X21, 0x92D000
	0x03AB5D54 ADRP X20, 0x69F000
	0x03AB5D58 LDRB W8, [X21 + 0x47B]
	0x03AB5D5C LDR X20, [X20 + 0x8E8]
	0x03AB5D60 MOV X19, X0
	0x03AB5D64 TBNZ X8, 0x0, 0x3AB5D7C
	0x03AB5D68 ADRP X0, 0x69F000
	0x03AB5D6C LDR X0, [X0 + 0x8E8]
	0x03AB5D70 BL 0x1C16CF4
	0x03AB5D74 MOVZ W8, 0x1
	0x03AB5D78 STRB W8, [X21 + 0x47B]
	0x03AB5D7C LDR X0, [X20]
	0x03AB5D80 LDR W8, [X0 + 0xE0]
	0x03AB5D84 CBNZ W8, 0x3AB5D90
	0x03AB5D88 BL 0x1C16DFC
	0x03AB5D8C LDR X0, [X20]
	0x03AB5D90 LDR X9, [X0 + 0xB8]
	0x03AB5D94 MOVZ W8, 0x1
	0x03AB5D98 STRB W8, [X9]
	0x03AB5D9C LDR W9, [X19 + 0x28]
	0x03AB5DA0 CMP W9, 0x1
	0x03AB5DA4 B.GT 0x3AB5DB4
	0x03AB5DA8 LDR W8, [X19 + 0x48]
	0x03AB5DAC CMP W8, 0x1
	0x03AB5DB0 CSET W8, GT
	0x03AB5DB4 STRB W8, [X19 + 0x54]
	0x03AB5DB8 LDP X20, X19, [X31 + 0x10]
	0x03AB5DBC LDP X30, X21, [X31], #0x20
	0x03AB5DC0 RET
	0x03AB5DC4 SUB X31, X31, 0x70
	0x03AB5DC8 STP X30, X23, [X31 + 0x40]
	0x03AB5DCC STP X22, X21, [X31 + 0x50]
	0x03AB5DD0 STP X20, X19, [X31 + 0x60]
	0x03AB5DD4 ADRP X23, 0x92D000
	0x03AB5DD8 ADRP X22, 0x69F000
	0x03AB5DDC LDRB W8, [X23 + 0x47C]
	0x03AB5DE0 LDR X22, [X22 + 0x8E8]
	0x03AB5DE4 MOV W20, W2
	0x03AB5DE8 MOV X21, X1
	0x03AB5DEC MOV X19, X0
	0x03AB5DF0 TBNZ X8, 0x0, 0x3AB5E08
	0x03AB5DF4 ADRP X0, 0x69F000
	0x03AB5DF8 LDR X0, [X0 + 0x8E8]
	0x03AB5DFC BL 0x1C16CF4
	0x03AB5E00 MOVZ W8, 0x1
	0x03AB5E04 STRB W8, [X23 + 0x47C]
	0x03AB5E08 MOV X0, X21
	0x03AB5E0C MOV W1, W31
	0x03AB5E10 MOV X2, X31
	0x03AB5E14 BL 0x3C22520
	0x03AB5E18 LDP V2, V0, [X21 + 0x10]
	0x03AB5E1C LDR W8, [X21 + 0x30]
	0x03AB5E20 LDR V1, [X21]
	0x03AB5E24 LDR X0, [X22]
	0x03AB5E28 STP V2, V0, [X31 + 0x10]
	0x03AB5E2C STR W8, [X31 + 0x30]
	0x03AB5E30 STR V1, [X31]
	0x03AB5E34 LDR W8, [X0 + 0xE0]
	0x03AB5E38 CBNZ W8, 0x3AB5E44
	0x03AB5E3C BL 0x1C16DFC
	0x03AB5E40 LDR X0, [X22]
	0x03AB5E44 LDR X8, [X0 + 0xB8]
	0x03AB5E48 LDR W9, [X31 + 0x30]
	0x03AB5E4C LDP V1, V0, [X31 + 0x10]
	0x03AB5E50 LDR V2, [X31]
	0x03AB5E54 STR W9, [X8 + 0x34]
	0x03AB5E58 STUR V0, [X8 + 0x24]
	0x03AB5E5C STUR V1, [X8 + 0x14]
	0x03AB5E60 STUR V2, [X8 + 0x4]
	0x03AB5E64 STR W20, [X19 + 0x50]
	0x03AB5E68 LDR X8, [X22]
	0x03AB5E6C LDR X8, [X8 + 0xB8]
	0x03AB5E70 LDR W8, [X8 + 0xC]
	0x03AB5E74 CMP W8, 0x2
	0x03AB5E78 STR W8, [X19 + 0x28]
	0x03AB5E7C STR W8, [X19 + 0x48]
	0x03AB5E80 B.GE 0x3AB5E98
	0x03AB5E84 LDP X20, X19, [X31 + 0x60]
	0x03AB5E88 LDP X22, X21, [X31 + 0x50]
	0x03AB5E8C LDP X30, X23, [X31 + 0x40]
	0x03AB5E90 ADD X31, X31, 0x70
	0x03AB5E94 RET
	0x03AB5E98 MOV X0, X19
	0x03AB5E9C LDP X20, X19, [X31 + 0x60]
	0x03AB5EA0 LDP X22, X21, [X31 + 0x50]
	0x03AB5EA4 LDP X30, X23, [X31 + 0x40]
	0x03AB5EA8 MOVZ W1, 0x1
	0x03AB5EAC ADD X31, X31, 0x70
	0x03AB5EB0 B 0x3AB5EB4
	0x03AB5EB4 STR X30, [X31 - 0x30]!
	0x03AB5EB8 STP X22, X21, [X31 + 0x10]
	0x03AB5EBC STP X20, X19, [X31 + 0x20]
	0x03AB5EC0 ADRP X22, 0x92D000
	0x03AB5EC4 LDRB W8, [X22 + 0x47D]
	0x03AB5EC8 MOV W20, W1
	0x03AB5ECC MOV X19, X0
	0x03AB5ED0 AND W21, W1, 0x1
	0x03AB5ED4 TBNZ X8, 0x0, 0x3AB5EEC
	0x03AB5ED8 ADRP X0, 0x69F000
	0x03AB5EDC LDR X0, [X0 + 0x8E8]
	0x03AB5EE0 BL 0x1C16CF4
	0x03AB5EE4 MOVZ W8, 0x1
	0x03AB5EE8 STRB W8, [X22 + 0x47D]
	0x03AB5EEC STRB W21, [X19 + 0x54]
	0x03AB5EF0 TBZ X20, 0x0, 0x3AB5F20
	0x03AB5EF4 ADRP X20, 0x69F000
	0x03AB5EF8 LDR X20, [X20 + 0x8E8]
	0x03AB5EFC LDR X0, [X20]
	0x03AB5F00 LDR W8, [X0 + 0xE0]
	0x03AB5F04 CBNZ W8, 0x3AB5F10
	0x03AB5F08 BL 0x1C16DFC
	0x03AB5F0C LDR X0, [X20]
	0x03AB5F10 LDR X8, [X0 + 0xB8]
	0x03AB5F14 LDR W8, [X8 + 0xC]
	0x03AB5F18 STR W8, [X19 + 0x28]
	0x03AB5F1C STR W8, [X19 + 0x48]
	0x03AB5F20 LDP X20, X19, [X31 + 0x20]
	0x03AB5F24 LDP X22, X21, [X31 + 0x10]
	0x03AB5F28 LDR X30, [X31], #0x30
	0x03AB5F2C RET
	0x03AB5F30 LDRB W8, [X0 + 0x54]
	0x03AB5F34 CBZ W8, 0x3AB5F4C
	0x03AB5F38 LDR W8, [X0 + 0x28]
	0x03AB5F3C CMP W8, 0x1
	0x03AB5F40 B.LE 0x3AB5F4C
	0x03AB5F44 ADD X8, X0, 0x10
	0x03AB5F48 B 0x3AB5F50
	0x03AB5F4C ADD X8, X0, 0x18
	0x03AB5F50 LDR X0, [X8]
	0x03AB5F54 RET
	0x03AB5F58 STR X30, [X31 - 0x20]!
	0x03AB5F5C STP X20, X19, [X31 + 0x10]
	0x03AB5F60 ADRP X19, 0x92D000
	0x03AB5F64 ADRP X20, 0x69F000
	0x03AB5F68 LDRB W8, [X19 + 0x47E]
	0x03AB5F6C LDR X20, [X20 + 0x8E8]
	0x03AB5F70 TBNZ X8, 0x0, 0x3AB5F88
	0x03AB5F74 ADRP X0, 0x69F000
	0x03AB5F78 LDR X0, [X0 + 0x8E8]
	0x03AB5F7C BL 0x1C16CF4
	0x03AB5F80 MOVZ W8, 0x1
	0x03AB5F84 STRB W8, [X19 + 0x47E]
	0x03AB5F88 LDR X8, [X20]
	0x03AB5F8C LDP X20, X19, [X31 + 0x10]
	0x03AB5F90 MOVZ W9, 0x1
	0x03AB5F94 LDR X8, [X8 + 0xB8]
	0x03AB5F98 STRB W9, [X8]
	0x03AB5F9C LDR X30, [X31], #0x20

ISIL:
	001 Subtract X31, X31, 448
	002 Move [X31+352], D11
	003 Move [X31+360], D10
	004 Move [X31+368], D9
	005 Move [X31+376], D8
	006 Move [X31+384], X29
	007 Move [X31+392], X30
	008 Move [X31+400], X24
	009 Move [X31+408], X23
	010 Move [X31+416], X22
	011 Move [X31+424], X21
	012 Move [X31+432], X20
	013 Move [X31+440], X19
	014 Move X22, 0x92E000
	015 Move W8, [X22+1137]
	016 Move X21, X3
	017 Move X23, X2
	018 Move X19, X1
	019 Move X20, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {32}
	024 Move X0, 0x6A4000
	025 Move X0, [X0+272]
	026 Call 0x1C17CF4
	027 Move X0, 0x6A2000
	028 Move X0, [X0+3776]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X22+1137], W8
	032 Move X0, X23
	033 Move X1, X31
	034 Move [X31+264], X31
	035 Call VisibleLight.get_light, X0
	036 Move X22, X0
	037 Move X0, X23
	038 Move X1, X31
	039 Call VisibleLight.get_light, X0
	040 Compare X0, 0
	041 JumpIfEqual {353}
	042 Move X1, X31
	043 Call Light.get_shadows, X0
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Move W8, [X21+44]
	046 NotImplemented "Instruction CMP not yet implemented."
	047 NotImplemented "Instruction CSET not yet implemented."
	048 Move W23, W31
	049 Move W24, [X20+232]
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Move X8, X31
	052 Move W9, 32
	053 Move W10, 160
	054 Move X11, [X20+264]
	055 Compare X11, 0
	056 JumpIfEqual {353}
	057 Move W12, [X11+24]
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Add X11, X11, X10
	060 Move V0, [X11+32]
	061 Move V1, [X11+48]
	062 Move V2, [X11]
	063 Move V3, [X11+16]
	064 Move X11, [X20+256]
	065 Move [X31+224], V0
	066 Move [X31+232], V1
	067 Move [X31+192], V2
	068 Move [X31+200], V3
	069 Compare X11, 0
	070 JumpIfEqual {353}
	071 Move V0, [X31+192]
	072 Move V1, [X31+208]
	073 Move V2, [X31+224]
	074 Move V3, [X31+240]
	075 Move [X31+128], V0
	076 Move [X31+136], V1
	077 Move [X31+160], V2
	078 Move [X31+168], V3
	079 Move W12, [X11+24]
	080 NotImplemented "Instruction CMP not yet implemented."
	081 Move V0, [X31+128]
	082 Move V1, [X31+144]
	083 Move V2, [X31+160]
	084 Move V3, [X31+176]
	085 Add X8, X8, 1
	086 Add X11, X11, X9
	087 Add X9, X9, 64
	088 NotImplemented "Instruction CMP not yet implemented."
	089 Add X10, X10, 456
	090 Move [X11+32], V2
	091 Move [X11+40], V3
	092 Move [X11], V0
	093 Move [X11+8], V1
	094 Add X8, X31, 192
	095 Move X0, X31
	096 Call Matrix4x4.get_zero
	097 Move V0, [X31+192]
	098 Move V1, [X31+208]
	099 Move X8, [X31+224]
	100 NotImplemented "Instruction LDUR not yet implemented."
	101 Move W9, [X31+252]
	102 Move X0, X31
	103 Move [X31+304], V0
	104 Move [X31+312], V1
	105 Move [X31+336], X8
	106 Move [X31+17], V2
	107 Move [X31+288], W9
	108 Call SystemInfo.get_usesReversedZBuffer
	109 And W31, W0, 1
	110 Move S0, W31
	111 Move S1, 1
	112 NotImplemented "Instruction FCSEL not yet implemented."
	113 NotImplemented "Instruction CMP not yet implemented."
	114 Move [X31+300], S0
	115 Move V0, [X31+300]
	116 Move W8, W24
	117 Move X9, W8
	118 Move X8, X9
	119 ShiftRight X8, 58
	120 And X8, X8, 0x1FFFFFF
	121 Subtract X9, X9, 5
	122 Move X10, [X20+256]
	123 Move V1, [X31+304]
	124 Move V2, [X31+320]
	125 Move X11, [X31+336]
	126 Move V3, [X31+17]
	127 Move W12, [X31+288]
	128 Move [X31+192], V1
	129 Move [X31+200], V2
	130 Move [X31+224], X11
	131 Move [X31+6], V3
	132 Move [X31+112], W12
	133 Compare X10, 0
	134 JumpIfEqual {353}
	135 Move X11, [X31+224]
	136 Move V2, [X31+192]
	137 Move V1, [X31+208]
	138 Move V3, [X31+6]
	139 Move W12, [X31+112]
	140 Move [X31+80], X11
	141 Move [X31+48], V2
	142 Move [X31+56], V1
	143 Move [X31+1], V3
	144 Move [X31+32], W12
	145 Move W11, [X10+24]
	146 NotImplemented "Instruction CMP not yet implemented."
	147 Move X11, [X31+80]
	148 Move V1, [X31+48]
	149 Move V2, [X31+64]
	150 Add X10, X10, X8
	151 Move [X10+72], S0
	152 Move [X10+64], X11
	153 Move [X10+32], V1
	154 Move [X10+40], V2
	155 Move W11, [X31+32]
	156 Move V1, [X31+1]
	157 Add X8, X8, 64
	158 Add X9, X9, 1
	159 Add W24, W24, 1
	160 Move [X10+92], W11
	161 Move [X10+76], V1
	162 Move X8, 0x6A2000
	163 Move X8, [X8+3776]
	164 Move X0, [X8]
	165 Add X8, X20, 284
	166 Move V9, [X8]
	167 Move W9, [X0+224]
	168 Compare W9, 0
	169 JumpIfNotEqual {171}
	170 Call 0x1C17DFC
	171 Move X0, X22
	172 Move W1, W23
	173 Move X2, X31
	174 Call ShadowUtils.SoftShadowQualityToShaderProperty, X0, X1
	175 Move S1, [X20+224]
	176 Move S2, [X20+228]
	177 Move V8, V0
	178 Add X0, X31, 268
	179 Add X1, X31, 264
	180 Move V0, V2
	181 Move X2, X31
	182 Call ShadowUtils.GetScaleAndBiasForLinearDistanceFade, V0, V1, X0, X1
	183 Compare X19, 0
	184 JumpIfEqual {353}
	185 Move X24, 0x6A4000
	186 Move X24, [X24+272]
	187 Move X2, [X20+256]
	188 Move X0, X19
	189 Move X3, X31
	190 Move X8, [X24]
	191 Move X8, [X8+184]
	192 Move W1, [X8]
	193 Call CommandBuffer.SetGlobalMatrixArray, X0, X1, X2
	194 Compare X22, 0
	195 JumpIfEqual {353}
	196 Move X8, [X24]
	197 Move X0, X22
	198 Move X1, X31
	199 Move X8, [X8+184]
	200 Move W23, [X8+4]
	201 Call Light.get_shadowStrength, X0
	202 Move V2, [X31+268]
	203 Move V3, [X31+264]
	204 Move X0, X19
	205 Move W1, W23
	206 Move V1, V8
	207 Move X2, X31
	208 Call CommandBuffer.SetGlobalVector, X0, X1, X2
	209 Move W8, [X20+232]
	210 NotImplemented "Instruction CMP not yet implemented."
	211 Move X8, [X20+272]
	212 Compare X8, 0
	213 JumpIfEqual {353}
	214 Move W9, [X8+24]
	215 Compare W9, 0
	216 JumpIfEqual {354}
	217 Move X9, [X24]
	218 Move S0, [X8+32]
	219 Move S1, [X8+36]
	220 Move S2, [X8+40]
	221 Move S3, [X8+44]
	222 Move X0, X19
	223 Move X9, [X9+184]
	224 Move X2, X31
	225 Move W1, [X9+8]
	226 Call CommandBuffer.SetGlobalVector, X0, X1, X2
	227 Move X8, [X20+272]
	228 Compare X8, 0
	229 JumpIfEqual {353}
	230 Move W9, [X8+24]
	231 NotImplemented "Instruction CMP not yet implemented."
	232 Move X9, [X24]
	233 Move S0, [X8+48]
	234 Move S1, [X8+52]
	235 Move S2, [X8+56]
	236 Move S3, [X8+60]
	237 Move X0, X19
	238 Move X9, [X9+184]
	239 Move X2, X31
	240 Move W1, [X9+12]
	241 Call CommandBuffer.SetGlobalVector, X0, X1, X2
	242 Move X8, [X20+272]
	243 Compare X8, 0
	244 JumpIfEqual {353}
	245 Move W9, [X8+24]
	246 NotImplemented "Instruction CMP not yet implemented."
	247 Move X9, [X24]
	248 Move S0, [X8+64]
	249 Move S1, [X8+68]
	250 Move S2, [X8+72]
	251 Move S3, [X8+76]
	252 Move X0, X19
	253 Move X9, [X9+184]
	254 Move X2, X31
	255 Move W1, [X9+16]
	256 Call CommandBuffer.SetGlobalVector, X0, X1, X2
	257 Move X8, [X20+272]
	258 Compare X8, 0
	259 JumpIfEqual {353}
	260 Move W9, [X8+24]
	261 NotImplemented "Instruction CMP not yet implemented."
	262 Move X9, [X24]
	263 Move S0, [X8+80]
	264 Move S1, [X8+84]
	265 Move S2, [X8+88]
	266 Move S3, [X8+92]
	267 Move X0, X19
	268 Move X9, [X9+184]
	269 Move X2, X31
	270 Move W1, [X9+20]
	271 Call CommandBuffer.SetGlobalVector, X0, X1, X2
	272 Move X8, [X20+272]
	273 Compare X8, 0
	274 JumpIfEqual {353}
	275 Move W9, [X8+24]
	276 Compare W9, 0
	277 JumpIfEqual {354}
	278 NotImplemented "Instruction CMP not yet implemented."
	279 NotImplemented "Instruction CMP not yet implemented."
	280 NotImplemented "Instruction CMP not yet implemented."
	281 Move X9, [X24]
	282 Move V0, [X8+44]
	283 Move V1, [X8+60]
	284 Move V2, [X8+76]
	285 Move X9, [X9+184]
	286 Move V3, [X8+92]
	287 Multiply S0, S0, S0
	288 Multiply S1, S1, S1
	289 Move W1, [X9+24]
	290 Multiply S2, S2, S2
	291 Multiply S3, S3, S3
	292 Move X0, X19
	293 Move X2, X31
	294 Call CommandBuffer.SetGlobalVector, X0, X1, X2
	295 Move W8, [X21+44]
	296 Compare W8, 0
	297 JumpIfEqual {339}
	298 Move X8, [X24]
	299 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	300 Move V1, 0
	301 NotImplemented "Instruction INVALID not yet implemented."
	302 Move X8, [X8+184]
	303 Move S0, 0.5
	304 Multiply S8, S0, V1.S[0]
	305 Multiply S10, S0, V1.S[1]
	306 Move W1, [X8+28]
	307 Move [X31], V1
	308 Move S9, V1.S[1]
	309 NotImplemented "Instruction FNEG not yet implemented."
	310 NotImplemented "Instruction FNEG not yet implemented."
	311 Move X0, X19
	312 Move V0, V11
	313 Move V2, V8
	314 Move V3, V1
	315 Move X2, X31
	316 Call CommandBuffer.SetGlobalVector, X0, X1, X2
	317 Move X8, [X24]
	318 Move X0, X19
	319 Move V0, V11
	320 Move V1, V10
	321 Move X8, [X8+184]
	322 Move V2, V8
	323 Move V3, V10
	324 Move X2, X31
	325 Move W1, [X8+32]
	326 Call CommandBuffer.SetGlobalVector, X0, X1, X2
	327 Move X8, [X24]
	328 Move V0, [X20+284]
	329 Move V1, [X20+288]
	330 Move X0, X19
	331 Move X8, [X8+184]
	332 NotImplemented "Instruction SCVTF not yet implemented."
	333 NotImplemented "Instruction SCVTF not yet implemented."
	334 Move V0, [X31]
	335 Move W1, [X8+36]
	336 Move V1, V9
	337 Move X2, X31
	338 Call CommandBuffer.SetGlobalVector, X0, X1, X2
	339 Move X20, [X31+432]
	340 Move X19, [X31+440]
	341 Move X22, [X31+416]
	342 Move X21, [X31+424]
	343 Move X24, [X31+400]
	344 Move X23, [X31+408]
	345 Move X29, [X31+384]
	346 Move X30, [X31+392]
	347 Move D9, [X31+368]
	348 Move D8, [X31+376]
	349 Move D11, [X31+352]
	350 Move D10, [X31+360]
	351 Add X31, X31, 448
	352 Return 
	353 Call 0x1C17F20
	354 Call 0x1C17F28

Method: UnityEngine.Experimental.Rendering.RenderGraphModule.TextureHandle Render(UnityEngine.Experimental.Rendering.RenderGraphModule.RenderGraph graph, ref UnityEngine.Rendering.Universal.RenderingData renderingData)

Disassembly:
	0x03AB5FA0 RET
	0x03AB5FA4 STP X30, X23, [X31 - 0x30]!
	0x03AB5FA8 STP X22, X21, [X31 + 0x10]
	0x03AB5FAC STP X20, X19, [X31 + 0x20]
	0x03AB5FB0 ADRP X23, 0x92D000
	0x03AB5FB4 LDRB W8, [X23 + 0x47F]
	0x03AB5FB8 MOV W22, W4
	0x03AB5FBC MOV X21, X2
	0x03AB5FC0 MOV X19, X1
	0x03AB5FC4 MOV X20, X0
	0x03AB5FC8 TBNZ X8, 0x0, 0x3AB5FF8
	0x03AB5FCC ADRP X0, 0x6A3000
	0x03AB5FD0 LDR X0, [X0 + 0x1D0]
	0x03AB5FD4 BL 0x1C16CF4
	0x03AB5FD8 ADRP X0, 0x667000
	0x03AB5FDC LDR X0, [X0 + 0xD8]
	0x03AB5FE0 BL 0x1C16CF4
	0x03AB5FE4 ADRP X0, 0x6A3000
	0x03AB5FE8 LDR X0, [X0 + 0x1D8]
	0x03AB5FEC BL 0x1C16CF4
	0x03AB5FF0 MOVZ W8, 0x1
	0x03AB5FF4 STRB W8, [X23 + 0x47F]
	0x03AB5FF8 LDR W9, [X19]
	0x03AB5FFC ADRP X8, 0x6A3000
	0x03AB6000 ADRP X23, 0x666000
	0x03AB6004 LDR X8, [X8 + 0x1D8]
	0x03AB6008 B 0x3EB171C
	0x03AB600C CMP W9, 0x1
	0x03AB6010 CBZ W22, 0x3AB605C
	0x03AB6014 B.LT 0x3AB6098
	0x03AB6018 MOV X9, X31
	0x03AB601C MOV X10, X31
	0x03AB6020 LDR X11, [X20]
	0x03AB6024 ADD X10, X10, 0x1
	0x03AB6028 ADD X11, X11, X9
	0x03AB602C LDPSW D12, D13, [X11]
	0x03AB6030 ADD X9, X9, 0x8
	0x03AB6034 LDR W12, [X21, X12, LSL #2]
	0x03AB6038 LDR W13, [X21, X13, LSL #2]
	0x03AB603C CMP W12, W13
	0x03AB6040 CSEL W14, W12, W13, LT
	0x03AB6044 CSEL W12, W12, W13, GT
	0x03AB6048 STP W14, W12, [X11]
	0x03AB604C LDRSW X11, [X19]
	0x03AB6050 CMP X10, X11
	0x03AB6054 B.LT 0x3AB6020
	0x03AB6058 B 0x3AB6098
	0x03AB605C B.LT 0x3AB6098
	0x03AB6060 MOV X9, X31
	0x03AB6064 MOV X10, X31
	0x03AB6068 LDR X11, [X20]
	0x03AB606C ADD X10, X10, 0x1
	0x03AB6070 ADD X11, X11, X9
	0x03AB6074 LDP W12, W13, [X11]
	0x03AB6078 ADD X9, X9, 0x8
	0x03AB607C CMP W12, W13
	0x03AB6080 CSEL W14, W12, W13, LT
	0x03AB6084 CSEL W12, W12, W13, GT
	0x03AB6088 STP W14, W12, [X11]
	0x03AB608C LDRSW X11, [X19]
	0x03AB6090 CMP X10, X11
	0x03AB6094 B.LT 0x3AB6068
	0x03AB6098 LDP X0, X1, [X20]
	0x03AB609C LDR X2, [X8]
	0x03AB60A0 ADRP X22, 0x6A2000
	0x03AB60A4 LDR X22, [X22 + 0x1D0]
	0x03AB60A8 BL 0x222267C
	0x03AB60AC LDR X8, [X23]
	0x03AB60B0 LDR W23, [X19]
	0x03AB60B4 MOV X21, X0
	0x03AB60B8 LDR W9, [X8 + 0xE0]
	0x03AB60BC CBNZ W9, 0x3AB60C8
	0x03AB60C0 MOV X0, X8
	0x03AB60C4 BL 0x1C16DFC
	0x03AB60C8 LDR X4, [X22]
	0x03AB60CC SUB W2, W23, 0x1
	0x03AB60D0 MOV X0, X21
	0x03AB60D4 MOV W1, W31
	0x03AB60D8 MOV X3, X31
	0x03AB60DC BL 0x221F61C
	0x03AB60E0 LDR W10, [X19]
	0x03AB60E4 CMP W10, 0x2
	0x03AB60E8 B.LT 0x3AB6150
	0x03AB60EC MOV X8, X31
	0x03AB60F0 MOVZ W9, 0x1
	0x03AB60F4 MOVZ W11, 0x1
	0x03AB60F8 LDR X12, [X20]
	0x03AB60FC ADD X14, X12, X8
	0x03AB6100 LDP W16, W13, [X14 + 0x4]
	0x03AB6104 LDR W15, [X14]
	0x03AB6108 LDR W14, [X14 + 0xC]
	0x03AB610C CMP W13, W15
	0x03AB6110 CSET W15, EQ
	0x03AB6114 CMP W14, W16
	0x03AB6118 CSET W16, EQ
	0x03AB611C CMP W13, W14
	0x03AB6120 B.EQ 0x3AB613C
	0x03AB6124 AND W15, W15, W16, 0x0
	0x03AB6128 TBNZ X15, 0x0, 0x3AB613C
	0x03AB612C ADD X10, X12, W11, 0x3, SXTW
	0x03AB6130 STP W13, W14, [X10]
	0x03AB6134 LDR W10, [X19]
	0x03AB6138 ADD W11, W11, 0x1
	0x03AB613C ADD X9, X9, 0x1
	0x03AB6140 CMP X9, W10, SXTW
	0x03AB6144 ADD X8, X8, 0x8
	0x03AB6148 B.LT 0x3AB60F8
	0x03AB614C B 0x3AB6154
	0x03AB6150 MOVZ W11, 0x1
	0x03AB6154 STR W11, [X19]
	0x03AB6158 LDP X20, X19, [X31 + 0x20]
	0x03AB615C LDP X22, X21, [X31 + 0x10]
	0x03AB6160 LDP X30, X23, [X31], #0x30
	0x03AB6164 RET
	0x03AB6168 STP D15, D14, [X31 - 0x50]!
	0x03AB616C STP D13, D12, [X31 + 0x10]
	0x03AB6170 STP D11, D10, [X31 + 0x20]
	0x03AB6174 STP D9, D8, [X31 + 0x30]
	0x03AB6178 STP X30, X19, [X31 + 0x40]
	0x03AB617C ADRP X19, 0x92C000
	0x03AB6180 LDRB W8, [X19 + 0x480]
	0x03AB6184 MOV V9.16B, V7.16B
	0x03AB6188 MOV V8.16B, V6.16B
	0x03AB618C MOV V11.16B, V5.16B
	0x03AB6190 MOV V10.16B, V4.16B
	0x03AB6194 MOV V15.16B, V3.16B
	0x03AB6198 MOV V14.16B, V2.16B
	0x03AB619C MOV V12.16B, V1.16B
	0x03AB61A0 MOV V13.16B, V0.16B
	0x03AB61A4 TBNZ X8, 0x0, 0x3AB61BC
	0x03AB61A8 ADRP X0, 0x69E000
	0x03AB61AC LDR X0, [X0 + 0x9C8]
	0x03AB61B0 BL 0x1C16CF4
	0x03AB61B4 MOVZ W8, 0x1
	0x03AB61B8 STRB W8, [X19 + 0x480]
	0x03AB61BC FSUB D0, D15, D12
	0x03AB61C0 FSUB D1, D14, D13
	0x03AB61C4 FSUB D2, D11, D12
	0x03AB61C8 FSUB D3, D10, D13
	0x03AB61CC FSUB D5, D8, D13
	0x03AB61D0 FDIV D8, D0, D1
	0x03AB61D4 MOVZ X8, 0x7FF00000
	0x03AB61D8 FSUB D4, D9, D12
	0x03AB61DC FDIV D0, D2, D3
	0x03AB61E0 FABS D1, D8
	0x03AB61E4 FMOV D2, X8
	0x03AB61E8 FCMP D1, D2
	0x03AB61EC FDIV D9, D4, D5
	0x03AB61F0 B.NE 0x3AB621C
	0x03AB61F4 MOVZ X8, 0x7FF00000
	0x03AB61F8 FABS D1, D0
	0x03AB61FC FMOV D2, X8
	0x03AB6200 FCMP D1, D2
	0x03AB6204 B.NE 0x3AB621C
	0x03AB6208 MOVZ X8, 0x7FF00000
	0x03AB620C FABS D1, D9
	0x03AB6210 FMOV D2, X8
	0x03AB6214 FCMP D1, D2
	0x03AB6218 B.EQ 0x3AB6274
	0x03AB621C ADRP X19, 0x69E000
	0x03AB6220 LDR X19, [X19 + 0x9C8]
	0x03AB6224 FABD D10, D8, D8
	0x03AB6228 LDR X0, [X19]
	0x03AB622C LDR W8, [X0 + 0xE0]
	0x03AB6230 CBNZ W8, 0x3AB623C
	0x03AB6234 BL 0x1C16DFC
	0x03AB6238 LDR X0, [X19]
	0x03AB623C LDR X8, [X0 + 0xB8]
	0x03AB6240 LDR V0, [X8]
	0x03AB6244 FCMP D0, D10
	0x03AB6248 B.PL 0x3AB6274
	0x03AB624C LDR W8, [X0 + 0xE0]
	0x03AB6250 FABD D8, D8, D8
	0x03AB6254 CBNZ W8, 0x3AB6268
	0x03AB6258 BL 0x1C16DFC
	0x03AB625C LDR X8, [X19]
	0x03AB6260 LDR X8, [X8 + 0xB8]
	0x03AB6264 LDR V0, [X8]
	0x03AB6268 FCMP D0, D8
	0x03AB626C CSET W0, MI
	0x03AB6270 B 0x3AB6278
	0x03AB6274 MOV W0, W31
	0x03AB6278 LDP X30, X19, [X31 + 0x40]
	0x03AB627C LDP D9, D8, [X31 + 0x30]
	0x03AB6280 LDP D11, D10, [X31 + 0x20]
	0x03AB6284 LDP D13, D12, [X31 + 0x10]
	0x03AB6288 LDP D15, D14, [X31], #0x50
	0x03AB628C RET
	0x03AB6290 SUB X31, X31, 0x90
	0x03AB6294 STP D15, D14, [X31 + 0x30]
	0x03AB6298 STP D13, D12, [X31 + 0x40]
	0x03AB629C STP D11, D10, [X31 + 0x50]
	0x03AB62A0 STP D9, D8, [X31 + 0x60]
	0x03AB62A4 STR X30, [X31 + 0x70]
	0x03AB62A8 STP X20, X19, [X31 + 0x80]
	0x03AB62AC STR D2, [X31 + 0x28]
	0x03AB62B0 ADRP X19, 0x92C000
	0x03AB62B4 ADRP X20, 0x666000
	0x03AB62B8 LDRB W8, [X19 + 0x481]
	0x03AB62BC LDR X20, [X20 + 0xD8]
	0x03AB62C0 MOV V8.16B, V7.16B
	0x03AB62C4 MOV V9.16B, V6.16B
	0x03AB62C8 MOV V10.16B, V5.16B
	0x03AB62CC MOV V11.16B, V4.16B
	0x03AB62D0 MOV V12.16B, V3.16B
	0x03AB62D4 MOV V14.16B, V1.16B
	0x03AB62D8 MOV V15.16B, V0.16B
	0x03AB62DC TBNZ X8, 0x0, 0x3AB6300
	0x03AB62E0 ADRP X0, 0x666000
	0x03AB62E4 LDR X0, [X0 + 0xD8]
	0x03AB62E8 BL 0x1C16CF4
	0x03AB62EC ADRP X0, 0x69E000
	0x03AB62F0 LDR X0, [X0 + 0x9C8]
	0x03AB62F4 BL 0x1C16CF4
	0x03AB62F8 MOVZ W8, 0x1
	0x03AB62FC STRB W8, [X19 + 0x481]
	0x03AB6300 LDR X0, [X20]
	0x03AB6304 ADRP X19, 0x69E000
	0x03AB6308 LDR W8, [X0 + 0xE0]
	0x03AB630C LDR X19, [X19 + 0x9C8]
	0x03AB6310 CBNZ W8, 0x3AB6318
	0x03AB6314 BL 0x1C16DFC
	0x03AB6318 MOV V0.16B, V15.16B
	0x03AB631C MOV V1.16B, V14.16B
	0x03AB6320 MOV V2.16B, V11.16B
	0x03AB6324 MOV V3.16B, V10.16B
	0x03AB6328 MOV V4.16B, V9.16B
	0x03AB632C MOV V5.16B, V8.16B
	0x03AB6330 MOV X0, X31
	0x03AB6334 BL 0x3A2373C
	0x03AB6338 STR D0, [X31 + 0x78]
	0x03AB633C LDR V0, [X31 + 0x28]
	0x03AB6340 MOV V1.16B, V12.16B
	0x03AB6344 MOV V2.16B, V11.16B
	0x03AB6348 MOV V3.16B, V10.16B
	0x03AB634C MOV V4.16B, V9.16B
	0x03AB6350 MOV V5.16B, V8.16B
	0x03AB6354 MOV X0, X31
	0x03AB6358 BL 0x3A2373C
	0x03AB635C LDR X0, [X19]
	0x03AB6360 MOV V13.16B, V0.16B
	0x03AB6364 LDR W8, [X0 + 0xE0]
	0x03AB6368 CBNZ W8, 0x3AB6374
	0x03AB636C BL 0x1C16DFC
	0x03AB6370 LDR X0, [X19]
	0x03AB6374 LDR X8, [X0 + 0xB8]
	0x03AB6378 LDR V1, [X31 + 0x78]
	0x03AB637C LDR V0, [X8]
	0x03AB6380 FCMP D1, D0
	0x03AB6384 B.LE 0x3AB63A8
	0x03AB6388 LDR W8, [X0 + 0xE0]
	0x03AB638C CBNZ W8, 0x3AB63A0
	0x03AB6390 BL 0x1C16DFC
	0x03AB6394 LDR X0, [X19]
	0x03AB6398 LDR X8, [X0 + 0xB8]
	0x03AB639C LDR V0, [X8]
	0x03AB63A0 FCMP D13, D0
	0x03AB63A4 B.GT 0x3AB6620
	0x03AB63A8 LDR W8, [X0 + 0xE0]
	0x03AB63AC CBNZ W8, 0x3AB63B8
	0x03AB63B0 BL 0x1C16DFC
	0x03AB63B4 LDR X0, [X19]
	0x03AB63B8 LDR X8, [X0 + 0xB8]
	0x03AB63BC LDR V1, [X31 + 0x78]
	0x03AB63C0 LDR V0, [X8]
	0x03AB63C4 FNEG D0, D0
	0x03AB63C8 FCMP D1, D0
	0x03AB63CC B.PL 0x3AB63F4
	0x03AB63D0 LDR W8, [X0 + 0xE0]
	0x03AB63D4 CBNZ W8, 0x3AB63EC
	0x03AB63D8 BL 0x1C16DFC
	0x03AB63DC LDR X8, [X19]
	0x03AB63E0 LDR X8, [X8 + 0xB8]
	0x03AB63E4 LDR V0, [X8]
	0x03AB63E8 FNEG D0, D0
	0x03AB63EC FCMP D13, D0
	0x03AB63F0 B.MI 0x3AB6620
	0x03AB63F4 LDR X0, [X20]
	0x03AB63F8 STR D13, [X31 + 0x10]
	0x03AB63FC LDR W8, [X0 + 0xE0]
	0x03AB6400 CBNZ W8, 0x3AB6408
	0x03AB6404 BL 0x1C16DFC
	0x03AB6408 LDR V13, [X31 + 0x28]
	0x03AB640C MOV V0.16B, V11.16B
	0x03AB6410 MOV V1.16B, V10.16B
	0x03AB6414 MOV V2.16B, V15.16B
	0x03AB6418 MOV V3.16B, V14.16B
	0x03AB641C MOV V4.16B, V13.16B
	0x03AB6420 MOV V5.16B, V12.16B
	0x03AB6424 MOV X0, X31
	0x03AB6428 STR D11, [X31 + 0x18]
	0x03AB642C MOV V11.16B, V10.16B
	0x03AB6430 BL 0x3A2373C
	0x03AB6434 MOV V5.16B, V12.16B
	0x03AB6438 STR D0, [X31 + 0x20]
	0x03AB643C MOV V0.16B, V9.16B
	0x03AB6440 MOV V1.16B, V8.16B
	0x03AB6444 MOV V2.16B, V15.16B
	0x03AB6448 MOV V3.16B, V14.16B
	0x03AB644C MOV V4.16B, V13.16B
	0x03AB6450 MOV X0, X31
	0x03AB6454 MOV V10.16B, V9.16B
	0x03AB6458 MOV V9.16B, V8.16B
	0x03AB645C MOV V12.16B, V15.16B
	0x03AB6460 MOV V8.16B, V14.16B
	0x03AB6464 STR D5, [X31 + 0x8]
	0x03AB6468 BL 0x3A2373C
	0x03AB646C LDR X0, [X19]
	0x03AB6470 MOV V13.16B, V0.16B
	0x03AB6474 LDR W8, [X0 + 0xE0]
	0x03AB6478 CBNZ W8, 0x3AB6484
	0x03AB647C BL 0x1C16DFC
	0x03AB6480 LDR X0, [X19]
	0x03AB6484 LDR X8, [X0 + 0xB8]
	0x03AB6488 LDR V1, [X31 + 0x20]
	0x03AB648C MOV V14.16B, V8.16B
	0x03AB6490 MOV V15.16B, V12.16B
	0x03AB6494 LDR V0, [X8]
	0x03AB6498 FCMP D1, D0
	0x03AB649C B.LE 0x3AB64D4
	0x03AB64A0 LDR W8, [X0 + 0xE0]
	0x03AB64A4 MOV V12.16B, V9.16B
	0x03AB64A8 CBNZ W8, 0x3AB64BC
	0x03AB64AC BL 0x1C16DFC
	0x03AB64B0 LDR X0, [X19]
	0x03AB64B4 LDR X8, [X0 + 0xB8]
	0x03AB64B8 LDR V0, [X8]
	0x03AB64BC MOV V9.16B, V10.16B
	0x03AB64C0 MOV V10.16B, V11.16B
	0x03AB64C4 LDR V11, [X31 + 0x18]
	0x03AB64C8 FCMP D13, D0
	0x03AB64CC B.LE 0x3AB64E4
	0x03AB64D0 B 0x3AB6620
	0x03AB64D4 MOV V12.16B, V9.16B
	0x03AB64D8 MOV V9.16B, V10.16B
	0x03AB64DC MOV V10.16B, V11.16B
	0x03AB64E0 LDR V11, [X31 + 0x18]
	0x03AB64E4 LDR W8, [X0 + 0xE0]
	0x03AB64E8 CBNZ W8, 0x3AB64F4
	0x03AB64EC BL 0x1C16DFC
	0x03AB64F0 LDR X0, [X19]
	0x03AB64F4 LDR X8, [X0 + 0xB8]
	0x03AB64F8 LDR V1, [X31 + 0x20]
	0x03AB64FC LDR V0, [X8]
	0x03AB6500 FNEG D0, D0
	0x03AB6504 FCMP D1, D0
	0x03AB6508 B.PL 0x3AB6530
	0x03AB650C LDR W8, [X0 + 0xE0]
	0x03AB6510 CBNZ W8, 0x3AB6528
	0x03AB6514 BL 0x1C16DFC
	0x03AB6518 LDR X0, [X19]
	0x03AB651C LDR X8, [X0 + 0xB8]
	0x03AB6520 LDR V0, [X8]
	0x03AB6524 FNEG D0, D0
	0x03AB6528 FCMP D13, D0
	0x03AB652C B.MI 0x3AB6620
	0x03AB6530 LDR V0, [X31 + 0x78]
	0x03AB6534 LDR W8, [X0 + 0xE0]
	0x03AB6538 MOV V8.16B, V13.16B
	0x03AB653C FABS D13, D0
	0x03AB6540 CBNZ W8, 0x3AB654C
	0x03AB6544 BL 0x1C16DFC
	0x03AB6548 LDR X0, [X19]
	0x03AB654C LDR X8, [X0 + 0xB8]
	0x03AB6550 LDR V0, [X8]
	0x03AB6554 FCMP D0, D13
	0x03AB6558 B.LE 0x3AB6628
	0x03AB655C LDR V1, [X31 + 0x10]
	0x03AB6560 LDR W8, [X0 + 0xE0]
	0x03AB6564 FABS D13, D1
	0x03AB6568 CBNZ W8, 0x3AB657C
	0x03AB656C BL 0x1C16DFC
	0x03AB6570 LDR X0, [X19]
	0x03AB6574 LDR X8, [X0 + 0xB8]
	0x03AB6578 LDR V0, [X8]

ISIL:
	001 Move [X31-96], X29
	002 Move [X31+16], X30
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Subtract X31, X31, 464
	013 Move X22, 0x92E000
	014 Move W8, [X22+1138]
	015 Move X19, X2
	016 Move X21, X1
	017 Move X20, X0
	018 Move [X31+472], X1
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {61}
	023 Move X0, 0x6A4000
	024 Move X0, [X0+392]
	025 Call 0x1C17CF4
	026 Move X0, 0x6A4000
	027 Move X0, [X0+400]
	028 Call 0x1C17CF4
	029 Move X0, 0x6A4000
	030 Move X0, [X0+408]
	031 Call 0x1C17CF4
	032 Move X0, 0x6A2000
	033 Move X0, [X0+3776]
	034 Call 0x1C17CF4
	035 Move X0, 0x69B000
	036 Move X0, [X0+2696]
	037 Call 0x1C17CF4
	038 Move X0, 0x6A3000
	039 Move X0, [X0+416]
	040 Call 0x1C17CF4
	041 Move X0, 0x6A3000
	042 Move X0, [X0+424]
	043 Call 0x1C17CF4
	044 Move X0, 0x6A3000
	045 Move X0, [X0+432]
	046 Call 0x1C17CF4
	047 Move X0, 0x69E000
	048 Move X0, [X0+4088]
	049 Call 0x1C17CF4
	050 Move X0, 0x6A3000
	051 Move X0, [X0+440]
	052 Call 0x1C17CF4
	053 Move X0, 0x6A3000
	054 Move X0, [X0+448]
	055 Call 0x1C17CF4
	056 Move X0, 0x6A3000
	057 Move X0, [X0+456]
	058 Call 0x1C17CF4
	059 Move W8, 1
	060 Move [X22+1138], W8
	061 NotImplemented "Instruction MOVI not yet implemented."
	062 Move [X31+456], X31
	063 Move [X31+408], X31
	064 Move [X31+360], X31
	065 Move [X31+352], W31
	066 Move [X31+288], W31
	067 Move [X31+416], V0
	068 Move [X31+424], V0
	069 Move [X31+368], V0
	070 Move [X31+376], V0
	071 Move [X31+320], V0
	072 Move [X31+328], V0
	073 Move [X31+19], V0
	074 Move [X31+256], V0
	075 Move [X31+264], V0
	076 Move [X31+15], V0
	077 Compare X21, 0
	078 JumpIfEqual {354}
	079 Move X8, 0x6A3000
	080 Move X26, 0x6A3000
	081 Move X8, [X8+440]
	082 Move X26, [X26+408]
	083 Move X3, [X20+56]
	084 Move X25, 0x6A3000
	085 Move X1, [X8]
	086 Move X4, [X26]
	087 Move X24, 0x6A3000
	088 Move X25, [X25+432]
	089 Move X24, [X24+400]
	090 Add X8, X31, 112
	091 Add X2, X31, 408
	092 Move X0, X21
	093 Call 0x2241F24, X0, X1, X2, X3
	094 Move V0, [X31+112]
	095 Move V1, [X31+128]
	096 Move [X31+416], V0
	097 Move [X31+424], V1
	098 Add X1, X31, 408
	099 Add X3, X31, 472
	100 Move X0, X20
	101 Move X2, X19
	102 Call MainLightShadowCasterPass.InitPassData, X0, X1, X2, X3
	103 Move W8, [X20+280]
	104 Compare W8, 0
	105 JumpIfNotEqual {201}
	106 Move X8, [X20+240]
	107 Compare X8, 0
	108 JumpIfEqual {358}
	109 Move X0, [X8+24]
	110 Compare X0, 0
	111 JumpIfEqual {359}
	112 Move X27, [X31+408]
	113 Add X8, X31, 56
	114 Move X1, X31
	115 Call RenderTexture.get_descriptor, X0
	116 Move X22, 0x6A1000
	117 NotImplemented "Instruction LDUR not yet implemented."
	118 NotImplemented "Instruction LDUR not yet implemented."
	119 NotImplemented "Instruction LDUR not yet implemented."
	120 Move W8, [X31+104]
	121 Move X22, [X22+3776]
	122 Move [X31+112], V0
	123 Move [X31+120], V1
	124 Move [X31+9], V2
	125 Move [X31+160], W8
	126 Move X0, [X22]
	127 Move W8, [X0+224]
	128 Compare W8, 0
	129 JumpIfNotEqual {132}
	130 Call 0x1C17DFC
	131 Move X0, [X22]
	132 Move X8, [X0+184]
	133 Move W9, [X8]
	134 Move X8, 0x6A3000
	135 Move X8, [X8+448]
	136 Compare W9, 0
	137 JumpIfEqual {148}
	138 Move V0, [X31+112]
	139 Move V1, [X31+128]
	140 Move V2, [X31+9]
	141 Move W10, [X31+160]
	142 Move W22, W31
	143 Add X9, X31, 304
	144 Move [X31+304], V0
	145 Move [X31+312], V1
	146 Move [X31+21], V2
	147 Move [X31+352], W10
	148 Move V0, [X31+112]
	149 Move V1, [X31+128]
	150 Move V2, [X31+9]
	151 Move W10, [X31+160]
	152 Add X9, X31, 240
	153 Move [X31+240], V0
	154 Move [X31+248], V1
	155 Move [X31+17], V2
	156 Move [X31+288], W10
	157 Move W22, 1
	158 Move V0, [X9]
	159 Move V1, [X9+16]
	160 Move W10, [X9+48]
	161 Move V2, [X9+2]
	162 Move X9, 0x69E000
	163 Move X9, [X9+4088]
	164 Move [X31+224], W10
	165 Move [X31+192], V1
	166 Move [X31+200], V2
	167 Move [X31+11], V0
	168 Move X0, [X9]
	169 Move X23, [X8]
	170 Move W9, [X0+224]
	171 Compare W9, 0
	172 JumpIfNotEqual {174}
	173 Call 0x1C17DFC
	174 Move V0, [X31+176]
	175 Move V1, [X31+192]
	176 Move V2, [X31+13]
	177 Move W8, [X31+224]
	178 Move [X31], V0
	179 Move [X31+8], V1
	180 Move [X31+2], V2
	181 Move [X31+48], W8
	182 Add X1, X31, 0
	183 Move W3, 1
	184 Move W5, 1
	185 Move X0, X21
	186 Move X2, X23
	187 Move W4, W22
	188 Move X6, X31
	189 Call UniversalRenderer.CreateRenderGraphTexture, X0, X1, X2, X3, X4, X5
	190 Compare X27, 0
	191 JumpIfEqual {360}
	192 Move [X27+32], X0
	193 Move X8, [X31+408]
	194 Compare X8, 0
	195 JumpIfEqual {361}
	196 Add X1, X8, 32
	197 Add X0, X31, 416
	198 Move W2, 2
	199 Move X3, X31
	200 Call RenderGraphBuilder.UseDepthBuffer, X0, X1, X2
	201 Add X0, X31, 416
	202 Move W1, W31
	203 Move X2, X31
	204 Call RenderGraphBuilder.AllowPassCulling, X0, X1
	205 Move X8, [X25]
	206 Move W9, [X8+224]
	207 Compare W9, 0
	208 JumpIfNotEqual {212}
	209 Move X0, X8
	210 Call 0x1C17DFC
	211 Move X8, [X25]
	212 Move X9, [X8+184]
	213 Move X22, [X9+8]
	214 Compare X22, 0
	215 JumpIfNotEqual {238}
	216 Move W9, [X8+224]
	217 Compare W9, 0
	218 JumpIfNotEqual {222}
	219 Move X0, X8
	220 Call 0x1C17DFC
	221 Move X8, [X25]
	222 Move X9, 0x6A3000
	223 Move X8, [X8+184]
	224 Move X9, [X9+392]
	225 Move X23, [X8]
	226 Move X0, [X9]
	227 Call 0x1C17F10
	228 Move X8, 0x6A3000
	229 Move X8, [X8+416]
	230 Move X22, X0
	231 Move X2, [X8]
	232 Move X1, X23
	233 Move X3, X31
	234 Call 0x25C88AC, X0, X1, X2
	235 Move X8, [X25]
	236 Move X8, [X8+184]
	237 Move [X8+8], X22
	238 Move X2, [X24]
	239 Add X0, X31, 416
	240 Move X1, X22
	241 Call 0x224207C, X0, X1
	242 Move X8, [X31+408]
	243 Compare X8, 0
	244 JumpIfEqual {357}
	245 Move X8, [X8+32]
	246 Add X0, X31, 416
	247 Move X1, X31
	248 Move [X31+456], X8
	249 Call RenderGraphBuilder.Dispose, X0
	250 Move X8, 0x6A3000
	251 Move X8, [X8+456]
	252 Move X3, [X20+56]
	253 Move X4, [X26]
	254 Add X2, X31, 360
	255 Move X1, [X8]
	256 Add X8, X31, 112
	257 Move X0, X21
	258 Call 0x2241F24, X0, X1, X2, X3
	259 Move V0, [X31+112]
	260 Move V1, [X31+128]
	261 Move [X31+368], V0
	262 Move [X31+376], V1
	263 Add X1, X31, 360
	264 Add X3, X31, 472
	265 Move X0, X20
	266 Move X2, X19
	267 Call MainLightShadowCasterPass.InitPassData, X0, X1, X2, X3
	268 Move X8, [X31+360]
	269 Compare X8, 0
	270 JumpIfEqual {355}
	271 Move X9, [X31+456]
	272 Move X10, 0x69B000
	273 Move X10, [X10+2696]
	274 Move [X8+32], X9
	275 Move X0, [X10]
	276 Move W8, [X0+224]
	277 Compare W8, 0
	278 JumpIfNotEqual {280}
	279 Call 0x1C17DFC
	280 Add X0, X31, 456
	281 Move X1, X31
	282 Call TextureHandle.IsValid, X0
	283 Move TEMP, X0
	284 And TEMP, TEMP, 1
	285 Compare TEMP, 1
	286 JumpIfNotEqual {292}
	287 Add X0, X31, 368
	288 Add X1, X31, 456
	289 Move W2, 1
	290 Move X3, X31
	291 Call RenderGraphBuilder.UseDepthBuffer, X0, X1, X2
	292 Add X0, X31, 368
	293 Move W1, W31
	294 Move X2, X31
	295 Call RenderGraphBuilder.AllowPassCulling, X0, X1
	296 Move X8, [X25]
	297 Move W9, [X8+224]
	298 Compare W9, 0
	299 JumpIfNotEqual {303}
	300 Move X0, X8
	301 Call 0x1C17DFC
	302 Move X8, [X25]
	303 Move X9, [X8+184]
	304 Move X19, [X9+16]
	305 Compare X19, 0
	306 JumpIfNotEqual {329}
	307 Move W9, [X8+224]
	308 Compare W9, 0
	309 JumpIfNotEqual {313}
	310 Move X0, X8
	311 Call 0x1C17DFC
	312 Move X8, [X25]
	313 Move X9, 0x6A3000
	314 Move X8, [X8+184]
	315 Move X9, [X9+392]
	316 Move X20, [X8]
	317 Move X0, [X9]
	318 Call 0x1C17F10
	319 Move X8, 0x6A3000
	320 Move X8, [X8+424]
	321 Move X19, X0
	322 Move X2, [X8]
	323 Move X1, X20
	324 Move X3, X31
	325 Call 0x25C88AC, X0, X1, X2
	326 Move X8, [X25]
	327 Move X8, [X8+184]
	328 Move [X8+16], X19
	329 Move X2, [X24]
	330 Add X0, X31, 368
	331 Move X1, X19
	332 Call 0x224207C, X0, X1
	333 Move X8, [X31+360]
	334 Compare X8, 0
	335 JumpIfEqual {356}
	336 Move X20, [X8+32]
	337 Add X0, X31, 368
	338 Move X1, X31
	339 Call RenderGraphBuilder.Dispose, X0
	340 Move X0, X20
	341 Add X31, X31, 464
	342 Move X20, [X31+80]
	343 Move X19, [X31+88]
	344 Move X22, [X31+64]
	345 Move X21, [X31+72]
	346 Move X24, [X31+48]
	347 Move X23, [X31+56]
	348 Move X26, [X31+32]
	349 Move X25, [X31+40]
	350 Move X30, [X31+16]
	351 Move X27, [X31+24]
	352 Move X29, [X31+96]
	353 Return X0
	354 Call 0x1C17F20
	355 Call 0x1C17F20
	356 Call 0x1C17F20
	357 Call 0x1C17F20
	358 Call 0x1C17F20
	359 Call 0x1C17F20
	360 Call 0x1C17F20
	361 Call 0x1C17F20
	362 Move X22, X0
	363 NotImplemented "Instruction CMP not yet implemented."
	364 Move X0, X22
	365 Call 0x3EB2AD0
	366 Move X19, [X0]
	367 Call 0x3EB2AE0
	368 Add X0, X31, 368
	369 Move X1, X31
	370 Call RenderGraphBuilder.Dispose, X0
	371 Move X20, X31
	372 Compare X19, 0
	373 JumpIfEqual {340}
	374 Move X0, X19
	375 Call 0x1C17F18
	376 Move X19, X31
	377 Move X22, X0
	378 Add X0, X31, 368
	379 Move X1, X31
	380 Call RenderGraphBuilder.Dispose, X0
	381 Compare X19, 0
	382 JumpIfEqual {405}
	383 Move X0, X19
	384 Call 0x1C17F18
	385 Move X22, X0
	386 NotImplemented "Instruction CMP not yet implemented."
	387 Move X0, X22
	388 Call 0x3EB2AD0
	389 Move X23, [X0]
	390 Call 0x3EB2AE0
	391 Add X0, X31, 416
	392 Move X1, X31
	393 Call RenderGraphBuilder.Dispose, X0
	394 Compare X23, 0
	395 JumpIfEqual {250}
	396 Move X0, X23
	397 Call 0x1C17F18
	398 Move X23, X31
	399 Move X22, X0
	400 Add X0, X31, 416
	401 Move X1, X31
	402 Call RenderGraphBuilder.Dispose, X0
	403 Compare X23, 0
	404 JumpIfNotEqual {407}
	405 Move X0, X22
	406 Call 0x1D2D690
	407 Move X0, X23
	408 Call 0x1C17F18
	409 Call 0x1991590

Method: System.Void InitPassData(ref UnityEngine.Rendering.Universal.Internal.MainLightShadowCasterPass/PassData passData, ref UnityEngine.Rendering.Universal.RenderingData renderingData, ref UnityEngine.Experimental.Rendering.RenderGraphModule.RenderGraph graph)

Disassembly:
	0x03AB657C FCMP D0, D13
	0x03AB6580 B.LE 0x3AB6628
	0x03AB6584 LDR V1, [X31 + 0x20]
	0x03AB6588 LDR W8, [X0 + 0xE0]
	0x03AB658C MOV V13.16B, V12.16B
	0x03AB6590 FABS D12, D1
	0x03AB6594 CBNZ W8, 0x3AB65A8
	0x03AB6598 BL 0x1C16DFC
	0x03AB659C LDR X0, [X19]
	0x03AB65A0 LDR X8, [X0 + 0xB8]
	0x03AB65A4 LDR V0, [X8]
	0x03AB65A8 FCMP D0, D12
	0x03AB65AC B.LE 0x3AB6628
	0x03AB65B0 LDR W8, [X0 + 0xE0]
	0x03AB65B4 FABS D12, D8
	0x03AB65B8 CBNZ W8, 0x3AB65CC
	0x03AB65BC BL 0x1C16DFC
	0x03AB65C0 LDR X0, [X19]
	0x03AB65C4 LDR X8, [X0 + 0xB8]
	0x03AB65C8 LDR V0, [X8]
	0x03AB65CC FCMP D0, D12
	0x03AB65D0 B.LE 0x3AB6628

ISIL:
	001 Move [X31-16], X30
	002 Move X9, [X1]
	003 Compare X9, 0
	004 JumpIfEqual {25}
	005 Move [X9+16], X0
	006 Move X9, [X1]
	007 Compare X9, 0
	008 JumpIfEqual {25}
	009 Move X10, [X3]
	010 Move [X9+24], X10
	011 Move X9, [X1]
	012 Compare X9, 0
	013 JumpIfEqual {25}
	014 Move W10, [X0+280]
	015 Move X8, X2
	016 Move W2, 696
	017 Move X1, X8
	018 Move [X9+740], W10
	019 Move W10, [X0+236]
	020 Add X0, X9, 40
	021 Move [X9+736], W10
	022 Call 0x3EB2B30
	023 Move X30, [X31+16]
	024 Return 
	025 Call 0x1C17F20

Method: System.Void .cctor()

Disassembly:
	0x03AB65D4 LDR W8, [X0 + 0xE0]
	0x03AB65D8 CBNZ W8, 0x3AB65E0
	0x03AB65DC BL 0x1C16DFC
	0x03AB65E0 MOV V0.16B, V15.16B
	0x03AB65E4 MOV V1.16B, V14.16B
	0x03AB65E8 LDR V2, [X31 + 0x28]
	0x03AB65EC LDR V3, [X31 + 0x8]
	0x03AB65F0 MOV V4.16B, V11.16B
	0x03AB65F4 MOV V5.16B, V10.16B
	0x03AB65F8 MOV V6.16B, V9.16B
	0x03AB65FC MOV V7.16B, V13.16B
	0x03AB6600 LDP X20, X19, [X31 + 0x80]
	0x03AB6604 LDR X30, [X31 + 0x70]
	0x03AB6608 LDP D9, D8, [X31 + 0x60]
	0x03AB660C LDP D11, D10, [X31 + 0x50]
	0x03AB6610 LDP D13, D12, [X31 + 0x40]
	0x03AB6614 LDP D15, D14, [X31 + 0x30]
	0x03AB6618 ADD X31, X31, 0x90
	0x03AB661C B 0x3AB6168
	0x03AB6620 MOV W0, W31
	0x03AB6624 B 0x3AB662C
	0x03AB6628 MOVZ W0, 0x1
	0x03AB662C LDP X20, X19, [X31 + 0x80]
	0x03AB6630 LDR X30, [X31 + 0x70]
	0x03AB6634 LDP D9, D8, [X31 + 0x60]
	0x03AB6638 LDP D11, D10, [X31 + 0x50]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x92D000
	005 Move X19, 0x6A1000
	006 Move W8, [X20+1139]
	007 Move X19, [X19+2256]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x6A1000
	013 Move X0, [X0+2256]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+1139], W8
	017 Move X8, [X19]
	018 Move X9, -50114560
	019 Move V0, [X9+115]
	020 Move X8, [X8+184]
	021 Move [X8], V0
	022 Move X8, [X19]
	023 Move V0, 0
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X9, [X8+184]
	027 Move [X9+1], V0
	028 Move X8, [X8+184]
	029 Move [X8+1], V0
	030 Move X30, [X31+32]
	031 Return 

