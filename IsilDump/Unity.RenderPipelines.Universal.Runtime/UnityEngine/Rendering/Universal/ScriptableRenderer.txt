Type: UnityEngine.Rendering.Universal.ScriptableRenderer

Method: UnityEngine.Rendering.RenderTargetIdentifier get_cameraDepth()

Disassembly:
	0x03A46C1C B.LT 0x3A471F0
	0x03A46C20 LDR W9, [X31 + 0x3C]
	0x03A46C24 STR W31, [X31 + 0x18]
	0x03A46C28 ADRP X26, 0x70E000
	0x03A46C2C MOV W10, W31
	0x03A46C30 AND W24, W9, 0x6
	0x03A46C34 ADD X9, X19, 0x140
	0x03A46C38 STR X9, [X31 + 0x10]
	0x03A46C3C LDR X26, [X26 + 0x8C8]
	0x03A46C40 MOV W25, W31
	0x03A46C44 ADD X21, X19, 0x110
	0x03A46C48 ADD X20, X19, 0x40
	0x03A46C4C STP X20, X23, [X31 + 0x20]
	0x03A46C50 STR W24, [X31 + 0x1C]
	0x03A46C54 CMP W10, W8

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+48], X30
	003 Move [X31+56], X19
	004 Move X19, X8
	005 Add X0, X0, 320
	006 Add X8, X31, 8
	007 Move X1, X31
	008 Call RTHandleRenderTargetIdentifierCompat.get_nameID, X0
	009 Move X8, [X31+40]
	010 NotImplemented "Instruction LDUR not yet implemented."
	011 NotImplemented "Instruction LDUR not yet implemented."
	012 Move [X19+32], X8
	013 Move [X19], V1
	014 Move [X19+8], V0
	015 Move X30, [X31+48]
	016 Move X19, [X31+56]
	017 Add X31, X31, 64
	018 Return X0

Method: System.Void ResetNativeRenderPassFrameData()

Disassembly:
	0x03A46C58 B.CS 0x3A4726C
	0x03A46C5C ADD X8, X23, W10, 0x2, SXTW
	0x03A46C60 LDR W1, [X8 + 0x20]
	0x03A46C64 ADDS W31, W1, 0x1
	0x03A46C68 B.EQ 0x3A471C0
	0x03A46C6C LDR X0, [X19 + 0x100]
	0x03A46C70 STR W10, [X31 + 0x34]
	0x03A46C74 CBZ X0, 0x3A47270
	0x03A46C78 ADRP X8, 0x70E000
	0x03A46C7C LDR X8, [X8 + 0x910]
	0x03A46C80 LDR X2, [X8]
	0x03A46C84 BL 0x301BCCC
	0x03A46C88 MOV X28, X0
	0x03A46C8C MOVN W11, 0x0
	0x03A46C90 CBZ X0, 0x3A47274
	0x03A46C94 LDR W8, [X28 + 0x50]
	0x03A46C98 CMP W8, 0x1
	0x03A46C9C B.LT 0x3A46CBC
	0x03A46CA0 LDR X8, [X28 + 0x48]
	0x03A46CA4 MOV X9, X31
	0x03A46CA8 STR W11, [X8, X9, LSL #2]
	0x03A46CAC LDRSW X10, [X28 + 0x50]
	0x03A46CB0 ADD X9, X9, 0x1
	0x03A46CB4 CMP X9, X10
	0x03A46CB8 B.LT 0x3A46CA8
	0x03A46CBC LDR W8, [X28 + 0x60]
	0x03A46CC0 CMP W8, 0x1
	0x03A46CC4 B.LT 0x3A46CE4
	0x03A46CC8 LDR X8, [X28 + 0x58]
	0x03A46CCC MOV X9, X31
	0x03A46CD0 STR W11, [X8, X9, LSL #2]
	0x03A46CD4 LDRSW X10, [X28 + 0x60]
	0x03A46CD8 ADD X9, X9, 0x1
	0x03A46CDC CMP X9, X10
	0x03A46CE0 B.LT 0x3A46CD0
	0x03A46CE4 ADRP X8, 0x70E000
	0x03A46CE8 LDR X8, [X8 + 0x10]
	0x03A46CEC LDR X27, [X28 + 0x78]
	0x03A46CF0 LDR X0, [X8]
	0x03A46CF4 LDR W8, [X0 + 0xE0]
	0x03A46CF8 CBNZ W8, 0x3A46D00
	0x03A46CFC BL 0x1C16DFC
	0x03A46D00 MOV X0, X27
	0x03A46D04 MOV X1, X31
	0x03A46D08 BL 0x3A718A4
	0x03A46D0C CBZ W0, 0x3A47064
	0x03A46D10 MOV X24, X31
	0x03A46D14 MOV W23, W0
	0x03A46D18 LDR X8, [X28 + 0x68]
	0x03A46D1C CBZ X8, 0x3A47228
	0x03A46D20 LDR W9, [X8 + 0x18]
	0x03A46D24 CMP W24, W9
	0x03A46D28 B.CS 0x3A4722C
	0x03A46D2C ADD X8, X8, X24, 0x2, LSL
	0x03A46D30 LDR W1, [X8 + 0x20]
	0x03A46D34 CBNZ W1, 0x3A46D98
	0x03A46D38 ADRP X8, 0x6B1000
	0x03A46D3C LDR X8, [X8 + 0x2C8]
	0x03A46D40 LDRB W20, [X22 + 0x16D]
	0x03A46D44 LDR W29, [X22 + 0x160]
	0x03A46D48 LDR X0, [X8]
	0x03A46D4C LDR W8, [X0 + 0xE0]
	0x03A46D50 CBNZ W8, 0x3A46D58
	0x03A46D54 BL 0x1C16DFC
	0x03A46D58 MOV X0, X31
	0x03A46D5C BL 0x3C0E29C
	0x03A46D60 ADRP X8, 0x6D6000
	0x03A46D64 LDR X8, [X8 + 0x8A8]
	0x03A46D68 MOV W27, W0
	0x03A46D6C LDR X0, [X8]
	0x03A46D70 LDR W8, [X0 + 0xE0]
	0x03A46D74 CBNZ W8, 0x3A46D7C

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X20, 0x99D000
	010 Move W8, [X20+386]
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x6E6000
	017 Move X0, [X0+3488]
	018 Call 0x1C17CF4
	019 Move X0, 0x6AF000
	020 Move X0, [X0+3672]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X20+386], W8
	024 Move X20, [X19+32]
	025 Compare X20, 0
	026 JumpIfNotEqual {34}
	027 Move X8, 0x6E6000
	028 Move X8, [X8+3488]
	029 Move W1, 10
	030 Move X0, [X8]
	031 Call 0x1C17D6C
	032 Move X20, X0
	033 Move [X19+32], X0
	034 Move X22, 0x6AF000
	035 Move X22, [X22+3672]
	036 Move W21, W31
	037 Move TEMP, 0
	038 Not TEMP
	039 Move W23, TEMP
	040 Compare X20, 0
	041 JumpIfEqual {85}
	042 Move W8, [X20+24]
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Move X24, W21
	045 Add X25, X20, X24
	046 Add X25, X25, 32
	047 Move X8, [X25]
	048 Compare X8, 0
	049 JumpIfNotEqual {59}
	050 Move X0, [X22]
	051 Move W1, 20
	052 Call 0x1C17D6C
	053 Move W8, [X20+24]
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Move [X25], X0
	056 Move X20, [X19+32]
	057 Compare X20, 0
	058 JumpIfEqual {85}
	059 Move W9, [X20+24]
	060 Add X10, X20, X24
	061 Move X8, X31
	062 Add X10, X10, 32
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Move X11, [X10]
	065 Compare X11, 0
	066 JumpIfEqual {85}
	067 Move W12, [X11+24]
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Add X11, X11, X8
	070 Add X8, X8, 1
	071 NotImplemented "Instruction CMP not yet implemented."
	072 Move [X11+32], W23
	073 Add W21, W21, 1
	074 NotImplemented "Instruction CMP not yet implemented."
	075 Move X20, [X31+48]
	076 Move X19, [X31+56]
	077 Move X22, [X31+32]
	078 Move X21, [X31+40]
	079 Move X24, [X31+16]
	080 Move X23, [X31+24]
	081 Move X30, [X31+64]
	082 Move X25, [X31+72]
	083 Return 
	084 Call 0x1C17F28
	085 Call 0x1C17F20

Method: System.Void SetupNativeRenderPassFrameData(ref UnityEngine.Rendering.Universal.CameraData cameraData, System.Boolean isRenderPassEnabled)

Disassembly:
	0x03A46D78 BL 0x1C16DFC
	0x03A46D7C CMP W20, 0x0
	0x03A46D80 CSET W0, NE
	0x03A46D84 AND W2, W27, 0x1
	0x03A46D88 MOV W1, W29
	0x03A46D8C MOV X3, X31
	0x03A46D90 BL 0x3A9125C
	0x03A46D94 MOV W1, W0
	0x03A46D98 ADD X0, X31, 0x230
	0x03A46D9C MOV X2, X31
	0x03A46DA0 BL 0x3C50848
	0x03A46DA4 LDRB W9, [X28 + 0x40]
	0x03A46DA8 MOV X8, X21
	0x03A46DAC CBZ W9, 0x3A46DCC
	0x03A46DB0 LDR X8, [X28 + 0x78]
	0x03A46DB4 CBZ X8, 0x3A47238
	0x03A46DB8 LDR W9, [X8 + 0x18]
	0x03A46DBC CMP W24, W9
	0x03A46DC0 B.CS 0x3A47230
	0x03A46DC4 ADD X8, X8, X24, 0x3, LSL
	0x03A46DC8 ADD X8, X8, 0x20
	0x03A46DCC LDR X20, [X8]
	0x03A46DD0 CBZ X20, 0x3A47224
	0x03A46DD4 LDR X8, [X20 + 0x48]
	0x03A46DD8 LDUR V0, [X20 + 0x38]
	0x03A46DDC LDUR V1, [X20 + 0x28]
	0x03A46DE0 LDR X0, [X26]
	0x03A46DE4 STR X8, [X31 + 0x170]
	0x03A46DE8 STP V1, V0, [X31 + 0x150]
	0x03A46DEC LDR W8, [X0 + 0xE0]
	0x03A46DF0 LDR X27, [X19 + 0x38]
	0x03A46DF4 CBNZ W8, 0x3A46DFC
	0x03A46DF8 BL 0x1C16DFC
	0x03A46DFC LDP V0, V1, [X31 + 0x150]
	0x03A46E00 LDR X8, [X31 + 0x170]
	0x03A46E04 STP V0, V1, [X31 + 0x1D0]
	0x03A46E08 STR X8, [X31 + 0x1F0]
	0x03A46E0C ADD X0, X31, 0x1D0
	0x03A46E10 MOV X1, X27
	0x03A46E14 BL 0x3A473E4
	0x03A46E18 LDR X8, [X26]
	0x03A46E1C MOV W29, W0
	0x03A46E20 LDR X8, [X8 + 0xB8]
	0x03A46E24 LDRB W8, [X8 + 0x8]
	0x03A46E28 CBZ W8, 0x3A46E54
	0x03A46E2C LDR X8, [X19 + 0xC0]
	0x03A46E30 CBZ X8, 0x3A4723C
	0x03A46E34 LDR W9, [X8 + 0x18]
	0x03A46E38 CMP W24, W9
	0x03A46E3C B.CS 0x3A47234
	0x03A46E40 ADD X8, X8, X24, 0x2, LSL
	0x03A46E44 LDR W1, [X8 + 0x20]
	0x03A46E48 ADD X0, X31, 0x230
	0x03A46E4C MOV X2, X31
	0x03A46E50 BL 0x3C50780
	0x03A46E54 ADDS W31, W29, 0x1
	0x03A46E58 B.EQ 0x3A46E68
	0x03A46E5C LDR X8, [X28 + 0x48]
	0x03A46E60 STR W29, [X8, X24, LSL #2]
	0x03A46E64 B 0x3A47054
	0x03A46E68 LDR X29, [X19 + 0x38]
	0x03A46E6C ADD X0, X31, 0x150
	0x03A46E70 ADD X1, X31, 0x230
	0x03A46E74 MOVZ W2, 0x78
	0x03A46E78 BL 0x3EB1AC0
	0x03A46E7C CBZ X29, 0x3A47240
	0x03A46E80 ADD X0, X31, 0xD8
	0x03A46E84 ADD X1, X31, 0x150
	0x03A46E88 MOVZ W2, 0x78
	0x03A46E8C BL 0x3EB1AC0
	0x03A46E90 LDR W8, [X29 + 0x18]
	0x03A46E94 CMP W25, W8
	0x03A46E98 B.CS 0x3A47254
	0x03A46E9C SXTW X27, W25
	0x03A46EA0 MOVZ W8, 0x78
	0x03A46EA4 MADD X8, X27, X8, X29
	0x03A46EA8 ADD X0, X8, 0x20
	0x03A46EAC ADD X1, X31, 0xD8
	0x03A46EB0 MOVZ W2, 0x78
	0x03A46EB4 BL 0x3EB1AC0
	0x03A46EB8 LDR X8, [X19 + 0x38]
	0x03A46EBC CBZ X8, 0x3A47258
	0x03A46EC0 ADD X9, X20, 0x28
	0x03A46EC4 LDR X10, [X9 + 0x20]
	0x03A46EC8 LDP V1, V0, [X9]
	0x03A46ECC LDR W20, [X28 + 0xCC]
	0x03A46ED0 STR X10, [X31 + 0xD0]
	0x03A46ED4 STP V1, V0, [X31 + 0xB0]
	0x03A46ED8 LDR W9, [X8 + 0x18]
	0x03A46EDC CMP W25, W9
	0x03A46EE0 B.CS 0x3A47244
	0x03A46EE4 MOVZ W9, 0x78
	0x03A46EE8 MADD X8, X27, X9, X8
	0x03A46EEC LDP V0, V1, [X31 + 0xB0]
	0x03A46EF0 LDR X9, [X31 + 0xD0]
	0x03A46EF4 ANDS W31, W20, 0x1
	0x03A46EF8 ADD X0, X8, 0x20
	0x03A46EFC CSET W2, EQ
	0x03A46F00 STP V0, V1, [X31 + 0x80]
	0x03A46F04 STR X9, [X31 + 0xA0]
	0x03A46F08 ADD X1, X31, 0x80
	0x03A46F0C MOVZ W3, 0x1
	0x03A46F10 MOV X4, X31
	0x03A46F14 BL 0x3C507B8
	0x03A46F18 LDR X8, [X28 + 0x78]
	0x03A46F1C CBZ X8, 0x3A4724C
	0x03A46F20 LDR W9, [X8 + 0x18]
	0x03A46F24 CMP W24, W9
	0x03A46F28 B.CS 0x3A47250
	0x03A46F2C LDR W9, [X31 + 0x3C]
	0x03A46F30 TBZ X9, 0x0, 0x3A46F94
	0x03A46F34 ADD X8, X8, X24, 0x3, LSL
	0x03A46F38 LDR X8, [X8 + 0x20]
	0x03A46F3C LDR X9, [X21]
	0x03A46F40 CMP X8, X9
	0x03A46F44 B.NE 0x3A46F94
	0x03A46F48 LDR W8, [X31 + 0x38]
	0x03A46F4C TBZ X8, 0x0, 0x3A46F94
	0x03A46F50 LDR X8, [X19 + 0x38]
	0x03A46F54 CBZ X8, 0x3A47260
	0x03A46F58 LDR W9, [X8 + 0x18]
	0x03A46F5C CMP W25, W9
	0x03A46F60 B.CS 0x3A4725C
	0x03A46F64 LDR V3, [X22 + 0x1DC]
	0x03A46F68 LDR V2, [X22 + 0x1D8]
	0x03A46F6C LDR V1, [X22 + 0x1D4]
	0x03A46F70 LDR V0, [X22 + 0x1D0]
	0x03A46F74 MOVZ W9, 0x78
	0x03A46F78 MADD X8, X27, X9, X8
	0x03A46F7C ADD X0, X8, 0x20
	0x03A46F80 FMOV S4, 1
	0x03A46F84 MOV W1, W31
	0x03A46F88 MOV X2, X31
	0x03A46F8C BL 0x3C5082C
	0x03A46F90 B 0x3A47000
	0x03A46F94 TBZ X20, 0x0, 0x3A47000
	0x03A46F98 LDR X20, [X19 + 0x38]
	0x03A46F9C CBZ X20, 0x3A47268
	0x03A46FA0 ADRP X8, 0x6D5000
	0x03A46FA4 LDR X8, [X8 + 0x8F8]
	0x03A46FA8 LDP S11, S10, [X28 + 0xD0]
	0x03A46FAC LDP S9, S8, [X28 + 0xD8]
	0x03A46FB0 LDR X0, [X8]
	0x03A46FB4 LDR W8, [X0 + 0xE0]
	0x03A46FB8 CBNZ W8, 0x3A46FC0
	0x03A46FBC BL 0x1C16DFC
	0x03A46FC0 MOV V0.16B, V11.16B
	0x03A46FC4 MOV V1.16B, V10.16B
	0x03A46FC8 MOV V2.16B, V9.16B
	0x03A46FCC MOV V3.16B, V8.16B
	0x03A46FD0 MOV X0, X31
	0x03A46FD4 BL 0x39E93E4
	0x03A46FD8 LDR W8, [X20 + 0x18]
	0x03A46FDC CMP W25, W8
	0x03A46FE0 B.CS 0x3A47264
	0x03A46FE4 MOVZ W8, 0x78
	0x03A46FE8 MADD X8, X27, X8, X20
	0x03A46FEC ADD X0, X8, 0x20
	0x03A46FF0 FMOV S4, 1
	0x03A46FF4 MOV W1, W31
	0x03A46FF8 MOV X2, X31
	0x03A46FFC BL 0x3C5082C
	0x03A47000 LDR X8, [X28 + 0x48]
	0x03A47004 STR W25, [X8, X24, LSL #2]
	0x03A47008 LDR X27, [X19 + 0x30]
	0x03A4700C CBZ X27, 0x3A47248
	0x03A47010 ADRP X8, 0x70E000
	0x03A47014 LDR X8, [X8 + 0xD70]
	0x03A47018 LDR X3, [X8]
	0x03A4701C LDP X29, X20, [X31 + 0x40]
	0x03A47020 MOV X0, X27
	0x03A47024 MOV X1, X20
	0x03A47028 MOV X2, X29
	0x03A4702C BL 0x29E8710
	0x03A47030 ADRP X8, 0x70E000
	0x03A47034 LDR X8, [X8 + 0xD78]
	0x03A47038 ADD W3, W0, 0x1
	0x03A4703C LDR X4, [X8]
	0x03A47040 MOV X0, X27
	0x03A47044 MOV X1, X20
	0x03A47048 MOV X2, X29
	0x03A4704C BL 0x29E87A8
	0x03A47050 ADD W25, W25, 0x1
	0x03A47054 ADD W8, W24, 0x1
	0x03A47058 SXTW X24, W8
	0x03A4705C CMP X24, X23
	0x03A47060 B.LT 0x3A46D18
	0x03A47064 LDR X0, [X26]
	0x03A47068 LDR W8, [X0 + 0xE0]
	0x03A4706C CBNZ W8, 0x3A47074
	0x03A47070 BL 0x1C16DFC
	0x03A47074 MOV X0, X28
	0x03A47078 BL 0x3A474C8
	0x03A4707C LDP X20, X23, [X31 + 0x20]
	0x03A47080 LDR W24, [X31 + 0x1C]
	0x03A47084 TBZ X0, 0x0, 0x3A4709C
	0x03A47088 MOV X0, X19
	0x03A4708C MOV X1, X28
	0x03A47090 BL 0x3A47504
	0x03A47094 MOVZ W8, 0x1
	0x03A47098 STR W8, [X31 + 0x18]
	0x03A4709C MOVZ W0, 0x2
	0x03A470A0 MOV X1, X31
	0x03A470A4 BL 0x3C3C544
	0x03A470A8 MOV W1, W0
	0x03A470AC MOVI V0.2D, 0x0
	0x03A470B0 STR X31, [X31 + 0x1C0]
	0x03A470B4 STP V0, V0, [X31 + 0x1A0]
	0x03A470B8 STP V0, V0, [X31 + 0x180]
	0x03A470BC STP V0, V0, [X31 + 0x160]
	0x03A470C0 STR V0, [X31 + 0x15]
	0x03A470C4 ADD X0, X31, 0x150
	0x03A470C8 MOV X2, X31
	0x03A470CC BL 0x3C50848
	0x03A470D0 ADD X1, X31, 0x150
	0x03A470D4 MOVZ W2, 0x78
	0x03A470D8 MOV X0, X20
	0x03A470DC BL 0x3EB1AC0
	0x03A470E0 LDRB W8, [X28 + 0x40]
	0x03A470E4 CBZ W8, 0x3A47108
	0x03A470E8 LDR X8, [X28 + 0x98]
	0x03A470EC CBZ X8, 0x3A47278
	0x03A470F0 LDR X9, [X8 + 0x48]
	0x03A470F4 LDUR V0, [X8 + 0x38]
	0x03A470F8 LDUR V1, [X8 + 0x28]
	0x03A470FC STR X9, [X31 + 0x220]
	0x03A47100 STP V1, V0, [X31 + 0x200]
	0x03A47104 B 0x3A47128
	0x03A47108 LDR X0, [X31 + 0x10]
	0x03A4710C ADD X8, X31, 0x150
	0x03A47110 MOV X1, X31
	0x03A47114 BL 0x3A53368
	0x03A47118 LDP V0, V1, [X31 + 0x150]
	0x03A4711C LDR X8, [X31 + 0x170]
	0x03A47120 STP V0, V1, [X31 + 0x200]
	0x03A47124 STR X8, [X31 + 0x220]
	0x03A47128 LDP V0, V1, [X31 + 0x200]
	0x03A4712C LDR X8, [X31 + 0x220]
	0x03A47130 CMP W24, 0x0
	0x03A47134 CSET W2, EQ
	0x03A47138 STP V0, V1, [X31 + 0x50]
	0x03A4713C STR X8, [X31 + 0x70]
	0x03A47140 ADD X1, X31, 0x50
	0x03A47144 MOVZ W3, 0x1
	0x03A47148 MOV X0, X20
	0x03A4714C MOV X4, X31
	0x03A47150 BL 0x3C507B8
	0x03A47154 CBZ W24, 0x3A4717C
	0x03A47158 FMOV S0, W31
	0x03A4715C FMOV S1, W31
	0x03A47160 FMOV S2, W31
	0x03A47164 FMOV S3, 1
	0x03A47168 FMOV S4, 1
	0x03A4716C MOV X0, X20
	0x03A47170 MOV W1, W31
	0x03A47174 MOV X2, X31
	0x03A47178 BL 0x3C5082C
	0x03A4717C LDR X0, [X26]
	0x03A47180 LDR W8, [X0 + 0xE0]
	0x03A47184 CBNZ W8, 0x3A47190
	0x03A47188 BL 0x1C16DFC
	0x03A4718C LDR X0, [X26]
	0x03A47190 LDR X8, [X0 + 0xB8]
	0x03A47194 LDRB W8, [X8 + 0x8]
	0x03A47198 CBZ W8, 0x3A471AC
	0x03A4719C LDR W1, [X19 + 0xC8]
	0x03A471A0 MOV X0, X20
	0x03A471A4 MOV X2, X31
	0x03A471A8 BL 0x3C50780
	0x03A471AC LDR W10, [X31 + 0x34]
	0x03A471B0 LDR W8, [X23 + 0x18]
	0x03A471B4 ADD W10, W10, 0x1
	0x03A471B8 CMP W10, W8
	0x03A471BC B.LT 0x3A46C54
	0x03A471C0 LDR W8, [X31 + 0x18]
	0x03A471C4 TBZ X8, 0x0, 0x3A471F0
	0x03A471C8 LDR X0, [X19 + 0x30]
	0x03A471CC CBZ X0, 0x3A47294
	0x03A471D0 ADRP X8, 0x70E000
	0x03A471D4 LDR X8, [X8 + 0xD70]
	0x03A471D8 LDR X3, [X8]
	0x03A471DC LDP X2, X1, [X31 + 0x40]
	0x03A471E0 BL 0x29E8710
	0x03A471E4 MOV W1, W0
	0x03A471E8 MOV X0, X19
	0x03A471EC BL 0x3A476F8
	0x03A471F0 ADD X0, X31, 0x2A8
	0x03A471F4 MOV X1, X31
	0x03A471F8 BL 0x39B1DB4
	0x03A471FC ADD X31, X31, 0x2B0
	0x03A47200 LDP X20, X19, [X31 + 0x70]
	0x03A47204 LDP X22, X21, [X31 + 0x60]
	0x03A47208 LDP X24, X23, [X31 + 0x50]
	0x03A4720C LDP X26, X25, [X31 + 0x40]
	0x03A47210 LDP X28, X27, [X31 + 0x30]
	0x03A47214 LDP X29, X30, [X31 + 0x20]
	0x03A47218 LDP D9, D8, [X31 + 0x10]
	0x03A4721C LDP D11, D10, [X31], #0x80
	0x03A47220 RET
	0x03A47224 BL 0x1C16F20
	0x03A47228 BL 0x1C16F20
	0x03A4722C BL 0x1C16F28
	0x03A47230 BL 0x1C16F28
	0x03A47234 BL 0x1C16F28
	0x03A47238 BL 0x1C16F20
	0x03A4723C BL 0x1C16F20
	0x03A47240 BL 0x1C16F20
	0x03A47244 BL 0x1C16F28
	0x03A47248 BL 0x1C16F20
	0x03A4724C BL 0x1C16F20
	0x03A47250 BL 0x1C16F28
	0x03A47254 BL 0x1C16F28
	0x03A47258 BL 0x1C16F20
	0x03A4725C BL 0x1C16F28
	0x03A47260 BL 0x1C16F20
	0x03A47264 BL 0x1C16F28
	0x03A47268 BL 0x1C16F20
	0x03A4726C BL 0x1C16F28
	0x03A47270 BL 0x1C16F20
	0x03A47274 BL 0x1C16F20
	0x03A47278 BL 0x1C16F20
	0x03A4727C BL 0x1C16F20
	0x03A47280 BL 0x1C16F20
	0x03A47284 BL 0x1C16F28
	0x03A47288 BL 0x1C16F20
	0x03A4728C BL 0x1C16F20
	0x03A47290 BL 0x1C16F20
	0x03A47294 BL 0x1C16F20
	0x03A47298 B 0x3A47380
	0x03A4729C B 0x3A47380
	0x03A472A0 B 0x3A47380
	0x03A472A4 B 0x3A47380
	0x03A472A8 B 0x3A47380
	0x03A472AC B 0x3A47380
	0x03A472B0 B 0x3A47380
	0x03A472B4 B 0x3A47380
	0x03A472B8 B 0x3A47380
	0x03A472BC B 0x3A47380
	0x03A472C0 B 0x3A47380
	0x03A472C4 B 0x3A47380
	0x03A472C8 B 0x3A47380
	0x03A472CC B 0x3A47380
	0x03A472D0 B 0x3A47380
	0x03A472D4 B 0x3A47380
	0x03A472D8 B 0x3A47380
	0x03A472DC B 0x3A47380
	0x03A472E0 B 0x3A47380
	0x03A472E4 B 0x3A47380
	0x03A472E8 B 0x3A47380
	0x03A472EC B 0x3A47380
	0x03A472F0 B 0x3A47380
	0x03A472F4 B 0x3A47380
	0x03A472F8 B 0x3A47380
	0x03A472FC B 0x3A47380
	0x03A47300 B 0x3A47380
	0x03A47304 B 0x3A47380
	0x03A47308 B 0x3A47380
	0x03A4730C B 0x3A47380
	0x03A47310 B 0x3A47380
	0x03A47314 B 0x3A47380
	0x03A47318 B 0x3A47380
	0x03A4731C B 0x3A47380
	0x03A47320 B 0x3A47380
	0x03A47324 B 0x3A47380
	0x03A47328 B 0x3A47380
	0x03A4732C B 0x3A47380
	0x03A47330 B 0x3A47380
	0x03A47334 B 0x3A47380
	0x03A47338 B 0x3A47380
	0x03A4733C B 0x3A47380
	0x03A47340 B 0x3A47380
	0x03A47344 B 0x3A47380
	0x03A47348 B 0x3A47380
	0x03A4734C B 0x3A47380
	0x03A47350 B 0x3A47380
	0x03A47354 B 0x3A47380
	0x03A47358 B 0x3A47380
	0x03A4735C B 0x3A47380
	0x03A47360 B 0x3A47380
	0x03A47364 B 0x3A47380
	0x03A47368 B 0x3A47380
	0x03A4736C B 0x3A47380
	0x03A47370 B 0x3A47380
	0x03A47374 B 0x3A47380
	0x03A47378 B 0x3A47380
	0x03A4737C B 0x3A47380
	0x03A47380 MOV X19, X0
	0x03A47384 CMP W1, 0x1
	0x03A47388 B.NE 0x3A473B4
	0x03A4738C MOV X0, X19
	0x03A47390 BL 0x3EB1AD0
	0x03A47394 LDR X20, [X0]
	0x03A47398 BL 0x3EB1AE0
	0x03A4739C ADD X0, X31, 0x2A8
	0x03A473A0 MOV X1, X31
	0x03A473A4 BL 0x39B1DB4
	0x03A473A8 CBZ X20, 0x3A471FC
	0x03A473AC MOV X0, X20
	0x03A473B0 BL 0x1C16F18
	0x03A473B4 MOV X20, X31
	0x03A473B8 B 0x3A473C0
	0x03A473BC MOV X19, X0
	0x03A473C0 ADD X0, X31, 0x2A8
	0x03A473C4 MOV X1, X31
	0x03A473C8 BL 0x39B1DB4
	0x03A473CC CBNZ X20, 0x3A473D8
	0x03A473D0 MOV X0, X19
	0x03A473D4 BL 0x1D2C690
	0x03A473D8 MOV X0, X20
	0x03A473DC BL 0x1C16F18
	0x03A473E0 BL 0x1990590
	0x03A473E4 SUB X31, X31, 0x130
	0x03A473E8 STP X29, X30, [X31 + 0x100]
	0x03A473EC STP X22, X21, [X31 + 0x110]
	0x03A473F0 STP X20, X19, [X31 + 0x120]
	0x03A473F4 MOVI V0.2D, 0x0
	0x03A473F8 STR X31, [X31 + 0xF0]
	0x03A473FC STP V0, V0, [X31 + 0xD0]
	0x03A47400 STP V0, V0, [X31 + 0xB0]
	0x03A47404 STP V0, V0, [X31 + 0x90]
	0x03A47408 STR V0, [X31 + 0x8]
	0x03A4740C CBZ X1, 0x3A474C4
	0x03A47410 LDR X8, [X1 + 0x18]
	0x03A47414 MOV X19, X1
	0x03A47418 CMP W8, 0x1
	0x03A4741C B.LT 0x3A474A4
	0x03A47420 MOV X20, X0
	0x03A47424 MOV X21, X31
	0x03A47428 AND X8, X8, 0x0
	0x03A4742C ADD X22, X19, 0x20
	0x03A47430 CMP X21, W8, UXTW
	0x03A47434 B.CS 0x3A474C0
	0x03A47438 ADD X0, X31, 0x80
	0x03A4743C MOVZ W2, 0x78
	0x03A47440 MOV X1, X22
	0x03A47444 BL 0x3EB1AC0
	0x03A47448 ADD X8, X31, 0x58
	0x03A4744C ADD X0, X31, 0x80
	0x03A47450 MOV X1, X31
	0x03A47454 BL 0x3C50790
	0x03A47458 LDUR V0, [X31 + 0x58]
	0x03A4745C LDUR V1, [X31 + 0x68]
	0x03A47460 LDR X8, [X31 + 0x78]
	0x03A47464 ADD X0, X31, 0x30

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+48], X29
	003 Move [X31+56], X30
	004 Move [X31+64], X28
	005 Move [X31+72], X27
	006 Move [X31+80], X26
	007 Move [X31+88], X25
	008 Move [X31+96], X24
	009 Move [X31+104], X23
	010 Move [X31+112], X22
	011 Move [X31+120], X21
	012 Move [X31+128], X20
	013 Move [X31+136], X19
	014 Move [X31], X1
	015 Move X21, 0x99D000
	016 Move X20, 0x710000
	017 Move W8, [X21+387]
	018 Move X20, [X20+3376]
	019 Move X19, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {62}
	024 Move X0, 0x710000
	025 Move X0, [X0+3384]
	026 Call 0x1C17CF4
	027 Move X0, 0x710000
	028 Move X0, [X0+3392]
	029 Call 0x1C17CF4
	030 Move X0, 0x710000
	031 Move X0, [X0+3400]
	032 Call 0x1C17CF4
	033 Move X0, 0x710000
	034 Move X0, [X0+3408]
	035 Call 0x1C17CF4
	036 Move X0, 0x710000
	037 Move X0, [X0+3416]
	038 Call 0x1C17CF4
	039 Move X0, 0x710000
	040 Move X0, [X0+3424]
	041 Call 0x1C17CF4
	042 Move X0, 0x710000
	043 Move X0, [X0+3432]
	044 Call 0x1C17CF4
	045 Move X0, 0x70F000
	046 Move X0, [X0+2312]
	047 Call 0x1C17CF4
	048 Move X0, 0x70F000
	049 Move X0, [X0+2320]
	050 Call 0x1C17CF4
	051 Move X0, 0x6D8000
	052 Move X0, [X0+312]
	053 Call 0x1C17CF4
	054 Move X0, 0x710000
	055 Move X0, [X0+3376]
	056 Call 0x1C17CF4
	057 Move X0, 0x70F000
	058 Move X0, [X0+2248]
	059 Call 0x1C17CF4
	060 Move W8, 1
	061 Move [X21+387], W8
	062 Move X0, [X20]
	063 Move [X31+40], W31
	064 Move W8, [X0+224]
	065 Compare W8, 0
	066 JumpIfNotEqual {69}
	067 Call 0x1C17DFC
	068 Move X0, [X20]
	069 Move X8, [X0+184]
	070 Add X0, X31, 40
	071 Move X1, X31
	072 Move X3, X31
	073 Move X2, [X8+24]
	074 Call ProfilingScope..ctor, X0, X1, X2
	075 Move X8, [X19+256]
	076 Compare X8, 0
	077 JumpIfEqual {412}
	078 Move X0, [X19+24]
	079 Compare X0, 0
	080 JumpIfEqual {413}
	081 Move X8, 0x710000
	082 Move X8, [X8+3400]
	083 Move X1, [X8]
	084 Call Dictionary`2<Hash128, Object>.Clear, X0
	085 Move X0, [X19+48]
	086 Compare X0, 0
	087 JumpIfEqual {414}
	088 Move X8, 0x710000
	089 Move X8, [X8+3408]
	090 Move X1, [X8]
	091 Call Dictionary`2<Hash128, Int32>.Clear, X0
	092 Move X8, [X19+256]
	093 Compare X8, 0
	094 JumpIfEqual {322}
	095 Move X29, 0x70F000
	096 Move X29, [X29+2320]
	097 Move X20, X31
	098 Move X21, X31
	099 Move W22, W31
	100 NotImplemented "Instruction LDRSW not yet implemented."
	101 NotImplemented "Instruction CMP not yet implemented."
	102 Move X2, [X29]
	103 Move X0, X8
	104 Move W1, W21
	105 Call List`1<Object>.get_Item, X0, X1
	106 Move X2, X0
	107 Compare X0, 0
	108 JumpIfEqual {386}
	109 Move W8, [X2+66]
	110 Move [X2+68], W21
	111 Compare W8, 0
	112 JumpIfEqual {317}
	113 Move W8, [X2+112]
	114 Compare W8, 0
	115 JumpIfEqual {317}
	116 Move W8, [X19+420]
	117 Compare W8, 0
	118 JumpIfEqual {317}
	119 Move X1, [X31]
	120 Move X0, X19
	121 Call ScriptableRenderer.InitializeRenderPassDescriptor, X0, X1, X2
	122 Move X8, 0x70F000
	123 Move X8, [X8+2248]
	124 Move X25, X0
	125 Move X26, X1
	126 Move X0, [X8]
	127 Move W8, [X0+224]
	128 Compare W8, 0
	129 JumpIfNotEqual {131}
	130 Call 0x1C17DFC
	131 Move X0, X25
	132 Move X1, X26
	133 Move W2, W22
	134 Call ScriptableRenderer.CreateRenderPassHash, X0, X1
	135 Move X8, [X19+40]
	136 Compare X8, 0
	137 JumpIfEqual {395}
	138 Move W9, [X8+24]
	139 NotImplemented "Instruction CMP not yet implemented."
	140 Add X8, X8, X20
	141 Move [X8+32], X0
	142 Move [X8+40], X1
	143 Move X23, X0
	144 Move X0, [X19+24]
	145 Move X24, X1
	146 Compare X0, 0
	147 JumpIfEqual {393}
	148 Move X8, 0x710000
	149 Move X8, [X8+3416]
	150 Move X3, [X8]
	151 Move X1, X23
	152 Move X2, X24
	153 Call Dictionary`2<Hash128, Object>.ContainsKey, X0, X1
	154 Move X27, [X19+24]
	155 Move TEMP, X0
	156 And TEMP, TEMP, 1
	157 Compare TEMP, 1
	158 JumpIfNotEqual {251}
	159 Compare X27, 0
	160 JumpIfEqual {402}
	161 Move X8, 0x710000
	162 Move X8, [X8+3432]
	163 Move X3, [X8]
	164 Move X0, X27
	165 Move X1, X23
	166 Move X2, X24
	167 Call Dictionary`2<Hash128, Object>.get_Item, X0, X1
	168 Move X27, X0
	169 Move X0, [X19+24]
	170 Compare X0, 0
	171 JumpIfEqual {401}
	172 Move X8, 0x710000
	173 Move X8, [X8+3432]
	174 Move X3, [X8]
	175 Move X1, X23
	176 Move X2, X24
	177 Call Dictionary`2<Hash128, Object>.get_Item, X0, X1
	178 Move X8, 0x70F000
	179 Move X8, [X8+2248]
	180 Move X28, X0
	181 Move X0, [X8]
	182 Move W8, [X0+224]
	183 Compare W8, 0
	184 JumpIfNotEqual {186}
	185 Call 0x1C17DFC
	186 Move X0, X28
	187 Call ScriptableRenderer.GetValidPassIndexCount, X0
	188 Compare X27, 0
	189 JumpIfEqual {400}
	190 Move W9, [X27+24]
	191 Subtract W8, W0, 1
	192 NotImplemented "Instruction CMP not yet implemented."
	193 Add X8, X27, W8
	194 Move W8, [X8+32]
	195 Subtract W9, W21, 1
	196 NotImplemented "Instruction CMP not yet implemented."
	197 Move X8, 0x70E000
	198 Move X8, [X8+2248]
	199 Move X0, [X8]
	200 Move W8, [X0+224]
	201 Compare W8, 0
	202 JumpIfNotEqual {204}
	203 Call 0x1C17DFC
	204 Add W22, W22, 1
	205 Move X0, X25
	206 Move X1, X26
	207 Move W2, W22
	208 Call ScriptableRenderer.CreateRenderPassHash, X0, X1
	209 Move X8, [X19+40]
	210 Compare X8, 0
	211 JumpIfEqual {409}
	212 Move W9, [X8+24]
	213 NotImplemented "Instruction CMP not yet implemented."
	214 Add X8, X8, X20
	215 Move [X8+32], X0
	216 Move [X8+40], X1
	217 Move X25, [X19+24]
	218 Move X23, X0
	219 Move X24, X1
	220 Compare X25, 0
	221 JumpIfEqual {410}
	222 Move X8, 0x70F000
	223 Move X26, [X19+32]
	224 Move X8, [X8+3424]
	225 Move X1, [X8]
	226 Move X0, X25
	227 Call Dictionary`2<Hash128, Object>.get_Count, X0
	228 Compare X26, 0
	229 JumpIfEqual {411}
	230 Move W8, [X26+24]
	231 NotImplemented "Instruction CMP not yet implemented."
	232 Add X8, X26, W0
	233 Move X3, [X8+32]
	234 Move X8, 0x70F000
	235 Move X8, [X8+3392]
	236 Move X4, [X8]
	237 Move X0, X25
	238 Move X1, X23
	239 Move X2, X24
	240 Call Dictionary`2<Hash128, Object>.Add, X0, X1, X2
	241 Move X0, [X19+48]
	242 Compare X0, 0
	243 JumpIfEqual {406}
	244 Move X8, 0x70F000
	245 Move X8, [X8+3384]
	246 Move X4, [X8]
	247 Move X1, X23
	248 Move X2, X24
	249 Move W3, W31
	250 Call Dictionary`2<Hash128, Int32>.Add, X0, X1, X2
	251 Compare X27, 0
	252 JumpIfEqual {399}
	253 Move X8, 0x70F000
	254 Move X25, [X19+32]
	255 Move X8, [X8+3424]
	256 Move X1, [X8]
	257 Move X0, X27
	258 Call Dictionary`2<Hash128, Object>.get_Count, X0
	259 Compare X25, 0
	260 JumpIfEqual {398}
	261 Move W8, [X25+24]
	262 NotImplemented "Instruction CMP not yet implemented."
	263 Add X8, X25, W0
	264 Move X3, [X8+32]
	265 Move X8, 0x70F000
	266 Move X8, [X8+3392]
	267 Move X4, [X8]
	268 Move X0, X27
	269 Move X1, X23
	270 Move X2, X24
	271 Call Dictionary`2<Hash128, Object>.Add, X0, X1, X2
	272 Move X0, [X19+48]
	273 Compare X0, 0
	274 JumpIfEqual {405}
	275 Move X8, 0x70F000
	276 Move X8, [X8+3384]
	277 Move X4, [X8]
	278 Move X1, X23
	279 Move X2, X24
	280 Move W3, W31
	281 Call Dictionary`2<Hash128, Int32>.Add, X0, X1, X2
	282 Move X0, [X19+24]
	283 Compare X0, 0
	284 JumpIfEqual {396}
	285 Move X8, 0x70F000
	286 Move X8, [X8+3432]
	287 Move X3, [X8]
	288 Move X1, X23
	289 Move X2, X24
	290 Call Dictionary`2<Hash128, Object>.get_Item, X0, X1
	291 Move X25, X0
	292 Move X0, [X19+24]
	293 Compare X0, 0
	294 JumpIfEqual {394}
	295 Move X8, 0x70F000
	296 Move X8, [X8+3432]
	297 Move X3, [X8]
	298 Move X1, X23
	299 Move X2, X24
	300 Call Dictionary`2<Hash128, Object>.get_Item, X0, X1
	301 Move X8, 0x70E000
	302 Move X8, [X8+2248]
	303 Move X23, X0
	304 Move X0, [X8]
	305 Move W8, [X0+224]
	306 Compare W8, 0
	307 JumpIfNotEqual {309}
	308 Call 0x1C17DFC
	309 Move X0, X23
	310 Call ScriptableRenderer.GetValidPassIndexCount, X0
	311 Compare X25, 0
	312 JumpIfEqual {392}
	313 Move W8, [X25+24]
	314 NotImplemented "Instruction CMP not yet implemented."
	315 Add X8, X25, W0
	316 Move [X8+32], W21
	317 Move X8, [X19+256]
	318 Add X21, X21, 1
	319 Add X20, X20, 16
	320 Compare X8, 0
	321 JumpIfNotEqual {100}
	322 Call 0x1C17F20
	323 Move X22, 0x6D7000
	324 Move X22, [X22+312]
	325 NotImplemented "Instruction CMP not yet implemented."
	326 Move W20, W31
	327 Move X2, [X29]
	328 Move X0, X8
	329 Move W1, W20
	330 Call List`1<Object>.get_Item, X0, X1
	331 Move X4, [X22]
	332 Move X21, X0
	333 Move [X31+24], X31
	334 Move [X31+32], X31
	335 Add X0, X31, 24
	336 Move W1, 8
	337 Move W2, 2
	338 Move W3, 1
	339 Call NativeArray`1<Int32>..ctor, X0, X1, X2, X3
	340 Compare X21, 0
	341 JumpIfEqual {389}
	342 NotImplemented "Instruction LDUR not yet implemented."
	343 Move [X21+72], V0
	344 Move X0, [X19+256]
	345 Compare X0, 0
	346 JumpIfEqual {390}
	347 Move X2, [X29]
	348 Move W1, W20
	349 Call List`1<Object>.get_Item, X0, X1
	350 Move X4, [X22]
	351 Move X21, X0
	352 Move [X31+8], X31
	353 Move [X31+16], X31
	354 Add X0, X31, 8
	355 Move W1, 8
	356 Move W2, 2
	357 Move W3, 1
	358 Call NativeArray`1<Int32>..ctor, X0, X1, X2, X3
	359 Compare X21, 0
	360 JumpIfEqual {387}
	361 NotImplemented "Instruction LDUR not yet implemented."
	362 Move [X21+88], V0
	363 Move X8, [X19+256]
	364 Compare X8, 0
	365 JumpIfEqual {388}
	366 Move W9, [X8+24]
	367 Add W20, W20, 1
	368 NotImplemented "Instruction CMP not yet implemented."
	369 Add X0, X31, 40
	370 Move X1, X31
	371 Call ProfilingScope.Dispose, X0
	372 Move X20, [X31+128]
	373 Move X19, [X31+136]
	374 Move X22, [X31+112]
	375 Move X21, [X31+120]
	376 Move X24, [X31+96]
	377 Move X23, [X31+104]
	378 Move X26, [X31+80]
	379 Move X25, [X31+88]
	380 Move X28, [X31+64]
	381 Move X27, [X31+72]
	382 Move X29, [X31+48]
	383 Move X30, [X31+56]
	384 Add X31, X31, 144
	385 Return 
	386 Call 0x1C17F20
	387 Call 0x1C17F20
	388 Call 0x1C17F20
	389 Call 0x1C17F20
	390 Call 0x1C17F20
	391 Call 0x1C17F28
	392 Call 0x1C17F20
	393 Call 0x1C17F20
	394 Call 0x1C17F20
	395 Call 0x1C17F20
	396 Call 0x1C17F20
	397 Call 0x1C17F28
	398 Call 0x1C17F20
	399 Call 0x1C17F20
	400 Call 0x1C17F20
	401 Call 0x1C17F20
	402 Call 0x1C17F20
	403 Call 0x1C17F28
	404 Call 0x1C17F28
	405 Call 0x1C17F20
	406 Call 0x1C17F20
	407 Call 0x1C17F28
	408 Call 0x1C17F28
	409 Call 0x1C17F20
	410 Call 0x1C17F20
	411 Call 0x1C17F20
	412 Call 0x1C17F20
	413 Call 0x1C17F20
	414 Call 0x1C17F20
	415 Move X19, X0
	416 NotImplemented "Instruction CMP not yet implemented."
	417 Move X0, X19
	418 Call 0x3EB2AD0
	419 Move X20, [X0]
	420 Call 0x3EB2AE0
	421 Add X0, X31, 40
	422 Move X1, X31
	423 Call ProfilingScope.Dispose, X0
	424 Compare X20, 0
	425 JumpIfEqual {372}
	426 Move X0, X20
	427 Call 0x1C17F18
	428 Move X20, X31
	429 Move X19, X0
	430 Add X0, X31, 40
	431 Move X1, X31
	432 Call ProfilingScope.Dispose, X0
	433 Compare X20, 0
	434 JumpIfNotEqual {437}
	435 Move X0, X19
	436 Call 0x1D2D690
	437 Move X0, X20
	438 Call 0x1C17F18
	439 Call 0x1991590

Method: System.Void UpdateFinalStoreActions(System.Int32[] currentMergeablePasses, ref UnityEngine.Rendering.Universal.CameraData cameraData)

Disassembly:
	0x03A47690 LDR W8, [X28 + 0x18]
	0x03A47694 CMP W22, W8
	0x03A47698 B.CS 0x3A476F4
	0x03A4769C AND W8, W0, 0x1
	0x03A476A0 STRB W8, [X29]
	0x03A476A4 B 0x3A476C4
	0x03A476A8 LDR X0, [X24]
	0x03A476AC LDR W8, [X0 + 0xE0]
	0x03A476B0 CBNZ W8, 0x3A476B8
	0x03A476B4 BL 0x1C16DFC
	0x03A476B8 LDR X0, [X25]
	0x03A476BC MOV X1, X31
	0x03A476C0 BL 0x3C06A04
	0x03A476C4 ADD X21, X21, 0x1
	0x03A476C8 CMP X27, X21
	0x03A476CC B.NE 0x3A475E4
	0x03A476D0 LDP X20, X19, [X31 + 0xD0]
	0x03A476D4 LDP X22, X21, [X31 + 0xC0]
	0x03A476D8 LDP X24, X23, [X31 + 0xB0]
	0x03A476DC LDP X26, X25, [X31 + 0xA0]
	0x03A476E0 LDP X28, X27, [X31 + 0x90]
	0x03A476E4 LDP X29, X30, [X31 + 0x80]
	0x03A476E8 ADD X31, X31, 0xE0
	0x03A476EC RET
	0x03A476F0 BL 0x1C16F20
	0x03A476F4 BL 0x1C16F28
	0x03A476F8 SUB X31, X31, 0xB0
	0x03A476FC STP X30, X23, [X31 + 0x80]
	0x03A47700 STP X22, X21, [X31 + 0x90]
	0x03A47704 STP X20, X19, [X31 + 0xA0]
	0x03A47708 CMP W1, 0x1
	0x03A4770C B.LT 0x3A477F0
	0x03A47710 MOV X19, X0
	0x03A47714 MOV X20, X31
	0x03A47718 MOV W21, W1
	0x03A4771C MOVZ W22, 0x20
	0x03A47720 LDR X8, [X19 + 0xB8]
	0x03A47724 CBZ X8, 0x3A47804
	0x03A47728 LDR W9, [X8 + 0x18]
	0x03A4772C CMP X20, X9
	0x03A47730 B.CS 0x3A47808
	0x03A47734 ADD X8, X8, X20
	0x03A47738 LDRB W8, [X8 + 0x20]
	0x03A4773C CBZ W8, 0x3A477E0
	0x03A47740 LDR X8, [X19 + 0x38]
	0x03A47744 CBZ X8, 0x3A47804
	0x03A47748 LDR W9, [X8 + 0x18]
	0x03A4774C CMP X20, X9
	0x03A47750 B.CS 0x3A47808
	0x03A47754 ADD X0, X8, X22
	0x03A47758 MOVZ W1, 0x2
	0x03A4775C MOV X2, X31
	0x03A47760 BL 0x3C50778
	0x03A47764 LDR X8, [X19 + 0x38]
	0x03A47768 CBZ X8, 0x3A47804
	0x03A4776C LDR W9, [X8 + 0x18]
	0x03A47770 CMP X20, X9
	0x03A47774 B.CS 0x3A47808
	0x03A47778 ADD X0, X8, X22
	0x03A4777C MOVZ W1, 0x3
	0x03A47780 MOV X2, X31
	0x03A47784 BL 0x3C50780
	0x03A47788 LDR X23, [X19 + 0x38]
	0x03A4778C CBZ X23, 0x3A47804
	0x03A47790 ADD X8, X31, 0x28
	0x03A47794 MOV W0, W31
	0x03A47798 MOV X1, X31
	0x03A4779C BL 0x3C4B204
	0x03A477A0 LDUR V0, [X31 + 0x28]
	0x03A477A4 LDUR V1, [X31 + 0x38]
	0x03A477A8 LDR X8, [X31 + 0x48]
	0x03A477AC STP V0, V1, [X31 + 0x50]
	0x03A477B0 STR X8, [X31 + 0x70]
	0x03A477B4 LDR W8, [X23 + 0x18]
	0x03A477B8 CMP X20, X8
	0x03A477BC B.CS 0x3A47808
	0x03A477C0 LDP V0, V1, [X31 + 0x50]
	0x03A477C4 LDR X8, [X31 + 0x70]
	0x03A477C8 ADD X0, X23, X22
	0x03A477CC ADD X1, X31, 0x0
	0x03A477D0 MOV X2, X31
	0x03A477D4 STP V0, V1, [X31]
	0x03A477D8 STR X8, [X31 + 0x20]
	0x03A477DC BL 0x3C507A4
	0x03A477E0 ADD X20, X20, 0x1
	0x03A477E4 CMP X21, X20
	0x03A477E8 ADD X22, X22, 0x78
	0x03A477EC B.NE 0x3A47720
	0x03A477F0 LDP X20, X19, [X31 + 0xA0]
	0x03A477F4 LDP X22, X21, [X31 + 0x90]
	0x03A477F8 LDP X30, X23, [X31 + 0x80]
	0x03A477FC ADD X31, X31, 0xB0
	0x03A47800 RET
	0x03A47804 BL 0x1C16F20
	0x03A47808 BL 0x1C16F28
	0x03A4780C STR X30, [X31 - 0x10]!
	0x03A47810 CBZ X1, 0x3A47830
	0x03A47814 MOV X0, X1
	0x03A47818 MOV X1, X31
	0x03A4781C BL 0x3C201A0
	0x03A47820 CMP W0, 0x0
	0x03A47824 CSET W0, EQ
	0x03A47828 LDR X30, [X31], #0x10
	0x03A4782C RET
	0x03A47830 BL 0x1C16F20
	0x03A47834 STP D11, D10, [X31 - 0x80]!
	0x03A47838 STP D9, D8, [X31 + 0x10]
	0x03A4783C STP X29, X30, [X31 + 0x20]
	0x03A47840 STP X28, X27, [X31 + 0x30]
	0x03A47844 STP X26, X25, [X31 + 0x40]
	0x03A47848 STP X24, X23, [X31 + 0x50]
	0x03A4784C STP X22, X21, [X31 + 0x60]
	0x03A47850 STP X20, X19, [X31 + 0x70]
	0x03A47854 SUB X31, X31, 0x510
	0x03A47858 STR X4, [X31 + 0x20]
	0x03A4785C STR X3, [X31 + 0x38]
	0x03A47860 STR X0, [X31 + 0x48]
	0x03A47864 ADRP X22, 0x99B000
	0x03A47868 ADRP X21, 0x70E000
	0x03A4786C LDRB W8, [X22 + 0x186]
	0x03A47870 LDR X21, [X21 + 0xD30]
	0x03A47874 MOV V8.16B, V3.16B
	0x03A47878 MOV V9.16B, V2.16B
	0x03A4787C MOV V10.16B, V1.16B
	0x03A47880 MOV V11.16B, V0.16B
	0x03A47884 MOV W19, W5
	0x03A47888 MOV X24, X2
	0x03A4788C MOV X20, X1
	0x03A47890 TBNZ X8, 0x0, 0x3A47920
	0x03A47894 ADRP X0, 0x70E000
	0x03A47898 LDR X0, [X0 + 0xD70]
	0x03A4789C BL 0x1C16CF4
	0x03A478A0 ADRP X0, 0x70E000
	0x03A478A4 LDR X0, [X0 + 0xD68]
	0x03A478A8 BL 0x1C16CF4
	0x03A478AC ADRP X0, 0x70E000
	0x03A478B0 LDR X0, [X0 + 0xD78]
	0x03A478B4 BL 0x1C16CF4
	0x03A478B8 ADRP X0, 0x706000
	0x03A478BC LDR X0, [X0 + 0xAA8]
	0x03A478C0 BL 0x1C16CF4
	0x03A478C4 ADRP X0, 0x6B0000
	0x03A478C8 LDR X0, [X0 + 0x2C8]
	0x03A478CC BL 0x1C16CF4
	0x03A478D0 ADRP X0, 0x70D000
	0x03A478D4 LDR X0, [X0 + 0x910]
	0x03A478D8 BL 0x1C16CF4
	0x03A478DC ADRP X0, 0x6AC000
	0x03A478E0 LDR X0, [X0 + 0x598]
	0x03A478E4 BL 0x1C16CF4
	0x03A478E8 ADRP X0, 0x70E000
	0x03A478EC LDR X0, [X0 + 0xD30]
	0x03A478F0 BL 0x1C16CF4
	0x03A478F4 ADRP X0, 0x70D000
	0x03A478F8 LDR X0, [X0 + 0x10]
	0x03A478FC BL 0x1C16CF4
	0x03A47900 ADRP X0, 0x70D000
	0x03A47904 LDR X0, [X0 + 0x8C8]
	0x03A47908 BL 0x1C16CF4
	0x03A4790C ADRP X0, 0x6D5000
	0x03A47910 LDR X0, [X0 + 0x8A8]
	0x03A47914 BL 0x1C16CF4
	0x03A47918 MOVZ W8, 0x1
	0x03A4791C STRB W8, [X22 + 0x186]
	0x03A47920 LDR X0, [X21]
	0x03A47924 MOVI V0.2D, 0x0
	0x03A47928 STRB W31, [X31 + 0x508]
	0x03A4792C STR X31, [X31 + 0x500]
	0x03A47930 STR X31, [X31 + 0x480]
	0x03A47934 STR W31, [X31 + 0x450]
	0x03A47938 STR X31, [X31 + 0x410]
	0x03A4793C STR V0, [X31 + 0x4F]
	0x03A47940 STR V0, [X31 + 0x4E]
	0x03A47944 STR V0, [X31 + 0x4D]
	0x03A47948 STR V0, [X31 + 0x4C]
	0x03A4794C STR V0, [X31 + 0x4B]
	0x03A47950 STR V0, [X31 + 0x4A]
	0x03A47954 STR V0, [X31 + 0x49]
	0x03A47958 STR V0, [X31 + 0x47]
	0x03A4795C STR V0, [X31 + 0x46]
	0x03A47960 STR V0, [X31 + 0x44]
	0x03A47964 STR V0, [X31 + 0x43]
	0x03A47968 STR V0, [X31 + 0x42]
	0x03A4796C STP V0, V0, [X31 + 0x3F0]
	0x03A47970 STR X31, [X31 + 0x3E0]
	0x03A47974 STP V0, V0, [X31 + 0x3C0]
	0x03A47978 LDR W8, [X0 + 0xE0]
	0x03A4797C CBNZ W8, 0x3A47988
	0x03A47980 BL 0x1C16DFC

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+64], X29
	003 Move [X31+72], X30
	004 Move [X31+80], X28
	005 Move [X31+88], X27
	006 Move [X31+96], X26
	007 Move [X31+104], X25
	008 Move [X31+112], X24
	009 Move [X31+120], X23
	010 Move [X31+128], X22
	011 Move [X31+136], X21
	012 Move [X31+144], X20
	013 Move [X31+152], X19
	014 Move X22, 0x99C000
	015 Move W8, [X22+388]
	016 Move X19, X2
	017 Move X20, X1
	018 Move X21, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {34}
	023 Move X0, 0x70E000
	024 Move X0, [X0+2320]
	025 Call 0x1C17CF4
	026 Move X0, 0x6AD000
	027 Move X0, [X0+1432]
	028 Call 0x1C17CF4
	029 Move X0, 0x70E000
	030 Move X0, [X0+2248]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X22+388], W8
	034 Move X11, [X21+192]
	035 Compare X11, 0
	036 JumpIfEqual {215}
	037 Move W8, [X11+24]
	038 Move X9, X8
	039 ShiftRight X9, 32
	040 And X9, X9, 0x7FFFFFFF
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Move X9, X31
	043 Move X10, W8
	044 Add X11, X11, 32
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Move [X11], W31
	047 Add X9, X9, 1
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Move [X21+200], W31
	050 Compare X20, 0
	051 JumpIfEqual {215}
	052 Move W8, [X20+24]
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Move X25, 0x70E000
	055 Move X26, 0x70E000
	056 Move X25, [X25+2248]
	057 Move X26, [X26+2320]
	058 Move W24, W31
	059 Move W28, 1
	060 Move W29, 2
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Move X0, [X25]
	063 Add X8, X20, W24
	064 Move W22, [X8+32]
	065 Move W9, [X0+224]
	066 Compare W9, 0
	067 JumpIfNotEqual {70}
	068 Call 0x1C17DFC
	069 Move X0, [X25]
	070 Add W31, W22, 1
	071 Move X8, [X0+184]
	072 Move W8, [X8+8]
	073 Compare W8, 0
	074 JumpIfEqual {200}
	075 Move X0, [X21+256]
	076 Compare X0, 0
	077 JumpIfEqual {215}
	078 Move X2, [X26]
	079 Move W1, W22
	080 Call List`1<Object>.get_Item, X0, X1
	081 Compare X0, 0
	082 JumpIfEqual {215}
	083 Move W8, [X0+64]
	084 Move X22, X0
	085 Compare W8, 0
	086 JumpIfEqual {99}
	087 Move X0, [X25]
	088 Move W8, [X0+224]
	089 Compare W8, 0
	090 JumpIfNotEqual {92}
	091 Call 0x1C17DFC
	092 Move X0, X22
	093 Call ScriptableRenderer.GetFirstAllocatedRTHandle, X0
	094 Compare X0, 0
	095 JumpIfEqual {215}
	096 Move X0, [X0+24]
	097 Compare X0, 0
	098 JumpIfNotEqual {118}
	099 Move X8, 0x6AD000
	100 Move X8, [X8+1432]
	101 Move X23, [X19+208]
	102 Move X0, [X8]
	103 Move W8, [X0+224]
	104 Compare W8, 0
	105 JumpIfNotEqual {107}
	106 Call 0x1C17DFC
	107 Move X0, X23
	108 Move X1, X31
	109 Move X2, X31
	110 Call Object.op_Inequality, X0, X1
	111 Move TEMP, X0
	112 And TEMP, TEMP, 1
	113 Compare TEMP, 1
	114 JumpIfNotEqual {199}
	115 Move X0, [X19+208]
	116 Compare X0, 0
	117 JumpIfEqual {215}
	118 Add X8, X31, 8
	119 Move X1, X31
	120 Call RenderTexture.get_descriptor, X0
	121 Move W23, [X31+16]
	122 Move X8, [X19+440]
	123 Compare X8, 0
	124 JumpIfEqual {129}
	125 Move X8, [X8+232]
	126 Compare X8, 0
	127 JumpIfEqual {215}
	128 Move W27, [X8+17]
	129 Move W27, W31
	130 Move X0, [X19+192]
	131 Compare X0, 0
	132 JumpIfEqual {215}
	133 Move X1, X31
	134 Call Camera.get_allowMSAA, X0
	135 Move X12, [X21+192]
	136 Compare X12, 0
	137 JumpIfEqual {215}
	138 Move W8, [X12+24]
	139 NotImplemented "Instruction CMP not yet implemented."
	140 NotImplemented "Instruction CSET not yet implemented."
	141 NotImplemented "Instruction CMP not yet implemented."
	142 Move X9, X8
	143 ShiftRight X9, 32
	144 And X9, X9, 0x7FFFFFFF
	145 NotImplemented "Instruction CSET not yet implemented."
	146 NotImplemented "Instruction CMP not yet implemented."
	147 Xor W14, W0, 1
	148 Or W11, W11, W14
	149 Move X9, X31
	150 Move X10, W8
	151 Or W11, W13, W11
	152 Add X12, X12, 32
	153 NotImplemented "Instruction CMP not yet implemented."
	154 Move W13, [X12]
	155 Or W14, W13, 2
	156 NotImplemented "Instruction CMP not yet implemented."
	157 Move X14, [X22+40]
	158 Compare X14, 0
	159 JumpIfEqual {215}
	160 Move W15, [X14+24]
	161 NotImplemented "Instruction CMP not yet implemented."
	162 Add X14, X14, X9
	163 Move W14, [X14+32]
	164 Compare W14, 0
	165 JumpIfEqual {174}
	166 Move X13, [X22+24]
	167 Compare X13, 0
	168 JumpIfEqual {215}
	169 Move W14, [X13+24]
	170 NotImplemented "Instruction CMP not yet implemented."
	171 Add X13, X13, X9
	172 Move W13, [X13+32]
	173 Move [X12], W13
	174 Move TEMP, X11
	175 And TEMP, TEMP, 1
	176 Compare TEMP, 1
	177 JumpIfEqual {183}
	178 NotImplemented "Instruction CMP not yet implemented."
	179 Compare W13, 0
	180 JumpIfNotEqual {183}
	181 Move [X12], W29
	182 Move [X12], W28
	183 Add X9, X9, 1
	184 NotImplemented "Instruction CMP not yet implemented."
	185 Move W8, [X21+200]
	186 Compare W8, 0
	187 JumpIfEqual {194}
	188 NotImplemented "Instruction CMP not yet implemented."
	189 Move W8, [X22+32]
	190 NotImplemented "Instruction CMP not yet implemented."
	191 Move W8, [X22+48]
	192 Compare W8, 0
	193 JumpIfEqual {196}
	194 Move W8, [X22+32]
	195 Move [X21+200], W8
	196 Move W8, [X20+24]
	197 Add W24, W24, 1
	198 NotImplemented "Instruction CMP not yet implemented."
	199 Move W23, [X19+224]
	200 Move X20, [X31+144]
	201 Move X19, [X31+152]
	202 Move X22, [X31+128]
	203 Move X21, [X31+136]
	204 Move X24, [X31+112]
	205 Move X23, [X31+120]
	206 Move X26, [X31+96]
	207 Move X25, [X31+104]
	208 Move X28, [X31+80]
	209 Move X27, [X31+88]
	210 Move X29, [X31+64]
	211 Move X30, [X31+72]
	212 Add X31, X31, 160
	213 Return 
	214 Call 0x1C17F28
	215 Call 0x1C17F20

Method: System.Void SetNativeRenderPassMRTAttachmentList(UnityEngine.Rendering.Universal.ScriptableRenderPass renderPass, ref UnityEngine.Rendering.Universal.CameraData cameraData, System.Boolean needCustomCameraColorClear, UnityEngine.Rendering.ClearFlag cameraClearFlag)

Disassembly:
	0x03A47A60 ADD X26, X9, 0x28
	0x03A47A64 LDR X9, [X31 + 0x48]
	0x03A47A68 STR W19, [X31 + 0xC]
	0x03A47A6C STR X24, [X31 + 0x28]
	0x03A47A70 ADD X23, X9, 0x40
	0x03A47A74 LDR X9, [X31 + 0x20]
	0x03A47A78 ADD X27, X9, 0x28
	0x03A47A7C CMP W21, W8
	0x03A47A80 B.CS 0x3A48250
	0x03A47A84 ADD X8, X29, W21, 0x2, SXTW
	0x03A47A88 LDR W1, [X8 + 0x20]
	0x03A47A8C ADDS W31, W1, 0x1
	0x03A47A90 B.EQ 0x3A4821C
	0x03A47A94 LDR X8, [X31 + 0x48]
	0x03A47A98 LDR X0, [X8 + 0x100]
	0x03A47A9C CBZ X0, 0x3A48258
	0x03A47AA0 ADRP X8, 0x70D000
	0x03A47AA4 LDR X8, [X8 + 0x910]
	0x03A47AA8 MOV X28, X29
	0x03A47AAC LDR X2, [X8]
	0x03A47AB0 BL 0x301BCCC
	0x03A47AB4 MOV X29, X0
	0x03A47AB8 CBZ X0, 0x3A48254
	0x03A47ABC LDR W8, [X29 + 0x50]
	0x03A47AC0 CMP W8, 0x1
	0x03A47AC4 B.LT 0x3A47AE4
	0x03A47AC8 LDR X8, [X29 + 0x48]
	0x03A47ACC MOV X9, X31
	0x03A47AD0 STR W22, [X8, X9, LSL #2]
	0x03A47AD4 LDRSW X10, [X29 + 0x50]
	0x03A47AD8 ADD X9, X9, 0x1
	0x03A47ADC CMP X9, X10
	0x03A47AE0 B.LT 0x3A47AD0
	0x03A47AE4 ADRP X8, 0x6AC000
	0x03A47AE8 LDR X8, [X8 + 0x598]
	0x03A47AEC LDR X20, [X24 + 0xD0]
	0x03A47AF0 LDR X0, [X8]
	0x03A47AF4 LDR W8, [X0 + 0xE0]
	0x03A47AF8 CBNZ W8, 0x3A47B00
	0x03A47AFC BL 0x1C16DFC
	0x03A47B00 MOV X0, X20
	0x03A47B04 MOV X1, X31
	0x03A47B08 MOV X2, X31
	0x03A47B0C BL 0x3C354F8
	0x03A47B10 MOV W20, W0
	0x03A47B14 MOV X0, X29
	0x03A47B18 BL 0x3A43A98
	0x03A47B1C CBZ X0, 0x3A4825C
	0x03A47B20 LDR X0, [X0 + 0x18]
	0x03A47B24 MOV X1, X31
	0x03A47B28 MOV X2, X31
	0x03A47B2C BL 0x3C354F8
	0x03A47B30 TBZ X0, 0x0, 0x3A47B6C
	0x03A47B34 MOV X0, X29
	0x03A47B38 BL 0x3A43A98
	0x03A47B3C CBZ X0, 0x3A48280
	0x03A47B40 LDR X0, [X0 + 0x18]
	0x03A47B44 CBZ X0, 0x3A4827C
	0x03A47B48 MOV X1, X31
	0x03A47B4C BL 0x3C201A0
	0x03A47B50 CMP W0, 0x0
	0x03A47B54 CSET W8, EQ
	0x03A47B58 STR W8, [X31 + 0x44]
	0x03A47B5C CBZ W0, 0x3A47B94
	0x03A47B60 EOR W8, W20, 0x1
	0x03A47B64 TBZ X8, 0x0, 0x3A47B70
	0x03A47B68 B 0x3A47B94
	0x03A47B6C TBZ X20, 0x0, 0x3A47B90
	0x03A47B70 LDR X0, [X24 + 0xD0]
	0x03A47B74 CBZ X0, 0x3A48284
	0x03A47B78 MOV X1, X31
	0x03A47B7C BL 0x3C201A0
	0x03A47B80 CMP W0, 0x0
	0x03A47B84 CSET W8, EQ
	0x03A47B88 STR W8, [X31 + 0x44]
	0x03A47B8C B 0x3A47B94
	0x03A47B90 STR W31, [X31 + 0x44]
	0x03A47B94 LDR X8, [X31 + 0x38]
	0x03A47B98 CBZ X8, 0x3A48260
	0x03A47B9C LDP V1, V0, [X26]
	0x03A47BA0 LDR X8, [X26 + 0x20]
	0x03A47BA4 STR X31, [X31 + 0x270]
	0x03A47BA8 STP V1, V0, [X31 + 0x390]
	0x03A47BAC MOVI V0.2D, 0x0
	0x03A47BB0 STR X8, [X31 + 0x3B0]
	0x03A47BB4 STP V0, V0, [X31 + 0x250]
	0x03A47BB8 ADD X0, X31, 0x250
	0x03A47BBC ADD X1, X31, 0x390
	0x03A47BC0 MOVN W3, 0x0
	0x03A47BC4 MOV W2, W31
	0x03A47BC8 MOV W4, W31
	0x03A47BCC MOV X5, X31
	0x03A47BD0 BL 0x3C4B098
	0x03A47BD4 ADD X8, X31, 0x360
	0x03A47BD8 MOVZ W0, 0x2
	0x03A47BDC MOV X1, X31
	0x03A47BE0 BL 0x3C4B204
	0x03A47BE4 LDP V0, V1, [X31 + 0x360]
	0x03A47BE8 LDR X8, [X31 + 0x380]
	0x03A47BEC LDP V2, V3, [X31 + 0x250]
	0x03A47BF0 LDR X9, [X31 + 0x270]
	0x03A47BF4 STP V0, V1, [X31 + 0x300]
	0x03A47BF8 STR X8, [X31 + 0x320]
	0x03A47BFC STP V2, V3, [X31 + 0x330]
	0x03A47C00 STR X9, [X31 + 0x350]
	0x03A47C04 ADD X0, X31, 0x330
	0x03A47C08 ADD X1, X31, 0x300
	0x03A47C0C MOV X2, X31
	0x03A47C10 BL 0x3C4B708
	0x03A47C14 TBZ X0, 0x0, 0x3A47C5C
	0x03A47C18 LDR X8, [X31 + 0x38]
	0x03A47C1C LDR X0, [X8 + 0x18]
	0x03A47C20 LDR W8, [X31 + 0x44]
	0x03A47C24 TBZ X8, 0x0, 0x3A47D14
	0x03A47C28 CBZ X0, 0x3A4829C
	0x03A47C2C ADD X8, X31, 0x250
	0x03A47C30 MOV X1, X31
	0x03A47C34 BL 0x3C21334
	0x03A47C38 LDP V1, V0, [X31 + 0x250]
	0x03A47C3C LDR V2, [X31 + 0x27]
	0x03A47C40 LDR W8, [X31 + 0x280]
	0x03A47C44 STR V0, [X31 + 0x43]
	0x03A47C48 LDR W1, [X31 + 0x43C]
	0x03A47C4C STR V1, [X31 + 0x42]
	0x03A47C50 STR V2, [X31 + 0x44]
	0x03A47C54 STR W8, [X31 + 0x450]
	0x03A47C58 B 0x3A47D50
	0x03A47C5C LDR X8, [X29 + 0x68]
	0x03A47C60 CBZ X8, 0x3A48274
	0x03A47C64 LDR W9, [X8 + 0x18]
	0x03A47C68 CBZ W9, 0x3A48270
	0x03A47C6C LDR W1, [X8 + 0x20]
	0x03A47C70 CBNZ W1, 0x3A47CDC
	0x03A47C74 ADRP X8, 0x6B0000
	0x03A47C78 LDR X8, [X8 + 0x2C8]
	0x03A47C7C LDRB W19, [X24 + 0x16D]
	0x03A47C80 LDR W24, [X24 + 0x160]
	0x03A47C84 LDR X0, [X8]
	0x03A47C88 LDR W8, [X0 + 0xE0]
	0x03A47C8C CBNZ W8, 0x3A47C94
	0x03A47C90 BL 0x1C16DFC
	0x03A47C94 MOV X0, X31
	0x03A47C98 BL 0x3C0E29C
	0x03A47C9C ADRP X8, 0x6D5000
	0x03A47CA0 LDR X8, [X8 + 0x8A8]
	0x03A47CA4 MOV W25, W0
	0x03A47CA8 LDR X0, [X8]
	0x03A47CAC LDR W8, [X0 + 0xE0]
	0x03A47CB0 CBNZ W8, 0x3A47CB8
	0x03A47CB4 BL 0x1C16DFC
	0x03A47CB8 CMP W19, 0x0
	0x03A47CBC CSET W0, NE
	0x03A47CC0 AND W2, W25, 0x1
	0x03A47CC4 MOV W1, W24
	0x03A47CC8 MOV X3, X31
	0x03A47CCC BL 0x3A9125C
	0x03A47CD0 MOV W1, W0
	0x03A47CD4 LDR W19, [X31 + 0xC]
	0x03A47CD8 LDR X24, [X31 + 0x28]
	0x03A47CDC ADD X0, X31, 0x490
	0x03A47CE0 MOV X2, X31
	0x03A47CE4 BL 0x3C50848
	0x03A47CE8 MOV X8, X24
	0x03A47CEC LDR W24, [X24 + 0xE0]
	0x03A47CF0 TBZ X20, 0x0, 0x3A47DA0
	0x03A47CF4 LDR X1, [X8 + 0xD0]
	0x03A47CF8 MOVI V0.2D, 0x0
	0x03A47CFC STR X31, [X31 + 0x270]
	0x03A47D00 STP V0, V0, [X31 + 0x250]
	0x03A47D04 ADD X0, X31, 0x250
	0x03A47D08 MOV X2, X31
	0x03A47D0C BL 0x3C4B0C4
	0x03A47D10 B 0x3A47DB0
	0x03A47D14 CBZ X0, 0x3A48294
	0x03A47D18 ADD X8, X31, 0x250
	0x03A47D1C MOV X1, X31
	0x03A47D20 BL 0x3C21334
	0x03A47D24 LDP V0, V1, [X31 + 0x250]
	0x03A47D28 LDR V2, [X31 + 0x27]
	0x03A47D2C LDR W8, [X31 + 0x280]
	0x03A47D30 STR V0, [X31 + 0x42]
	0x03A47D34 STR V1, [X31 + 0x43]
	0x03A47D38 STR V2, [X31 + 0x44]
	0x03A47D3C STR W8, [X31 + 0x450]
	0x03A47D40 ADD X0, X31, 0x420
	0x03A47D44 MOV X1, X31
	0x03A47D48 BL 0x3C22060
	0x03A47D4C MOV W1, W0
	0x03A47D50 ADD X0, X31, 0x490
	0x03A47D54 MOV X2, X31
	0x03A47D58 BL 0x3C50848
	0x03A47D5C LDR X8, [X31 + 0x38]
	0x03A47D60 LDR X0, [X8 + 0x18]
	0x03A47D64 CBZ X0, 0x3A48278
	0x03A47D68 ADD X8, X31, 0x250
	0x03A47D6C MOV X1, X31
	0x03A47D70 BL 0x3C21334
	0x03A47D74 LDP V0, V1, [X31 + 0x250]
	0x03A47D78 LDR V2, [X31 + 0x27]
	0x03A47D7C LDR W8, [X31 + 0x280]
	0x03A47D80 STR V0, [X31 + 0x42]
	0x03A47D84 STR V1, [X31 + 0x43]
	0x03A47D88 STR V2, [X31 + 0x44]
	0x03A47D8C STR W8, [X31 + 0x450]
	0x03A47D90 LDP V0, V1, [X26]
	0x03A47D94 LDR X8, [X26 + 0x20]
	0x03A47D98 LDR W24, [X31 + 0x428]
	0x03A47D9C B 0x3A47DC4
	0x03A47DA0 ADD X8, X31, 0x250
	0x03A47DA4 MOVZ W0, 0x2
	0x03A47DA8 MOV X1, X31
	0x03A47DAC BL 0x3C4B204
	0x03A47DB0 LDP V0, V1, [X31 + 0x250]
	0x03A47DB4 LDR X8, [X31 + 0x270]
	0x03A47DB8 STP V0, V1, [X31 + 0x3F0]
	0x03A47DBC LDP V0, V1, [X31 + 0x3F0]
	0x03A47DC0 STR X8, [X31 + 0x410]
	0x03A47DC4 STR V0, [X31 + 0x46]
	0x03A47DC8 STR V1, [X31 + 0x47]
	0x03A47DCC LDR V0, [X31 + 0x46]
	0x03A47DD0 LDR V1, [X31 + 0x47]
	0x03A47DD4 ANDS W31, W19, 0x1
	0x03A47DD8 STR X8, [X31 + 0x480]
	0x03A47DDC CSET W2, EQ
	0x03A47DE0 STP V0, V1, [X31 + 0x2D0]
	0x03A47DE4 STR X8, [X31 + 0x2F0]
	0x03A47DE8 ADD X0, X31, 0x490
	0x03A47DEC ADD X1, X31, 0x2D0
	0x03A47DF0 MOVZ W3, 0x1
	0x03A47DF4 MOV X4, X31
	0x03A47DF8 BL 0x3C507B8
	0x03A47DFC ADRP X8, 0x70D000
	0x03A47E00 LDR X8, [X8 + 0x8C8]
	0x03A47E04 LDR X0, [X8]
	0x03A47E08 LDR W8, [X0 + 0xE0]
	0x03A47E0C CBNZ W8, 0x3A47E14
	0x03A47E10 BL 0x1C16DFC
	0x03A47E14 MOV X0, X29
	0x03A47E18 BL 0x3A474C8
	0x03A47E1C TBZ X0, 0x0, 0x3A47E2C
	0x03A47E20 LDR X0, [X31 + 0x48]
	0x03A47E24 MOV X1, X29
	0x03A47E28 BL 0x3A47504
	0x03A47E2C MOVZ W0, 0x2
	0x03A47E30 MOV X1, X31
	0x03A47E34 BL 0x3C3C544
	0x03A47E38 MOV W1, W0
	0x03A47E3C MOVI V0.2D, 0x0
	0x03A47E40 STR X31, [X31 + 0x2C0]
	0x03A47E44 STP V0, V0, [X31 + 0x2A0]
	0x03A47E48 STP V0, V0, [X31 + 0x280]
	0x03A47E4C STP V0, V0, [X31 + 0x260]
	0x03A47E50 STR V0, [X31 + 0x25]
	0x03A47E54 ADD X0, X31, 0x250
	0x03A47E58 MOV X2, X31
	0x03A47E5C BL 0x3C50848
	0x03A47E60 ADD X1, X31, 0x250
	0x03A47E64 MOVZ W2, 0x78
	0x03A47E68 MOV X0, X23
	0x03A47E6C BL 0x3EB1AC0
	0x03A47E70 LDR X8, [X31 + 0x20]
	0x03A47E74 CBZ X8, 0x3A48264
	0x03A47E78 LDR X8, [X27 + 0x20]
	0x03A47E7C LDP V1, V0, [X27]
	0x03A47E80 STR X8, [X31 + 0x380]
	0x03A47E84 STP V1, V0, [X31 + 0x360]
	0x03A47E88 ADD X8, X31, 0x228
	0x03A47E8C MOVZ W0, 0x2
	0x03A47E90 MOV X1, X31
	0x03A47E94 BL 0x3C4B204
	0x03A47E98 ADD X8, X31, 0x228
	0x03A47E9C LDP V0, V1, [X8]
	0x03A47EA0 LDR X8, [X31 + 0x248]
	0x03A47EA4 LDP V2, V3, [X31 + 0x360]
	0x03A47EA8 LDR X9, [X31 + 0x380]
	0x03A47EAC STP V0, V1, [X31 + 0x1D0]
	0x03A47EB0 STR X8, [X31 + 0x1F0]
	0x03A47EB4 STP V2, V3, [X31 + 0x200]
	0x03A47EB8 STR X9, [X31 + 0x220]
	0x03A47EBC ADD X0, X31, 0x200
	0x03A47EC0 ADD X1, X31, 0x1D0
	0x03A47EC4 MOV X2, X31
	0x03A47EC8 BL 0x3C4B708
	0x03A47ECC TBZ X0, 0x0, 0x3A47EE4
	0x03A47ED0 LDR X8, [X27 + 0x20]
	0x03A47ED4 LDP V1, V0, [X27]
	0x03A47ED8 STR X8, [X31 + 0x3E0]
	0x03A47EDC STP V1, V0, [X31 + 0x3C0]
	0x03A47EE0 B 0x3A47F54
	0x03A47EE4 TBZ X20, 0x0, 0x3A47F34
	0x03A47EE8 LDR X8, [X31 + 0x28]
	0x03A47EEC LDR X0, [X8 + 0xD0]
	0x03A47EF0 CBZ X0, 0x3A48298
	0x03A47EF4 MOV X1, X31
	0x03A47EF8 BL 0x3C20A10
	0x03A47EFC MOVI V0.2D, 0x0
	0x03A47F00 MOV X2, X0
	0x03A47F04 MOV X3, X1
	0x03A47F08 STR X31, [X31 + 0x270]
	0x03A47F0C STP V0, V0, [X31 + 0x250]
	0x03A47F10 ADD X0, X31, 0x250
	0x03A47F14 MOVN W4, 0x0
	0x03A47F18 MOV X1, X2
	0x03A47F1C MOV X2, X3
	0x03A47F20 MOV W3, W31
	0x03A47F24 MOV W5, W31
	0x03A47F28 MOV X6, X31
	0x03A47F2C BL 0x3C4B1E4
	0x03A47F30 B 0x3A47F44
	0x03A47F34 ADD X8, X31, 0x250
	0x03A47F38 MOVZ W0, 0x3
	0x03A47F3C MOV X1, X31
	0x03A47F40 BL 0x3C4B204
	0x03A47F44 LDP V0, V1, [X31 + 0x250]
	0x03A47F48 LDR X8, [X31 + 0x270]
	0x03A47F4C STP V0, V1, [X31 + 0x3C0]
	0x03A47F50 STR X8, [X31 + 0x3E0]
	0x03A47F54 LDP V0, V1, [X31 + 0x3C0]
	0x03A47F58 LDR X8, [X31 + 0x3E0]
	0x03A47F5C ANDS W31, W19, 0x2
	0x03A47F60 CSET W2, EQ
	0x03A47F64 STP V0, V1, [X31 + 0x1A0]
	0x03A47F68 STR X8, [X31 + 0x1C0]
	0x03A47F6C ADD X1, X31, 0x1A0
	0x03A47F70 MOVZ W3, 0x1
	0x03A47F74 MOV X0, X23
	0x03A47F78 MOV X4, X31
	0x03A47F7C BL 0x3C507B8
	0x03A47F80 CBZ W19, 0x3A47FF4
	0x03A47F84 LDR W8, [X31 + 0x44]
	0x03A47F88 EOR W8, W8, 0x1
	0x03A47F8C EOR W8, W8, 0x1
	0x03A47F90 AND W8, W19, W8, 0x0
	0x03A47F94 TBNZ X8, 0x0, 0x3A47FA8
	0x03A47F98 LDR X8, [X31 + 0x28]
	0x03A47F9C LDR W8, [X8 + 0xC8]
	0x03A47FA0 CMP W8, 0x1
	0x03A47FA4 B.EQ 0x3A47FCC
	0x03A47FA8 ADD X0, X31, 0x490
	0x03A47FAC FMOV S4, 1
	0x03A47FB0 MOV V0.16B, V11.16B
	0x03A47FB4 MOV V1.16B, V10.16B
	0x03A47FB8 MOV V2.16B, V9.16B
	0x03A47FBC MOV V3.16B, V8.16B
	0x03A47FC0 MOV W1, W31
	0x03A47FC4 MOV X2, X31
	0x03A47FC8 BL 0x3C5082C
	0x03A47FCC TBZ X19, 0x1, 0x3A47FF4
	0x03A47FD0 FMOV S0, W31
	0x03A47FD4 FMOV S1, W31
	0x03A47FD8 FMOV S2, W31
	0x03A47FDC FMOV S3, 1
	0x03A47FE0 FMOV S4, 1
	0x03A47FE4 MOV X0, X23
	0x03A47FE8 MOV W1, W31
	0x03A47FEC MOV X2, X31
	0x03A47FF0 BL 0x3C5082C
	0x03A47FF4 CMP W24, 0x2
	0x03A47FF8 B.LT 0x3A48078
	0x03A47FFC LDR V0, [X31 + 0x46]
	0x03A48000 LDR V1, [X31 + 0x47]
	0x03A48004 LDR X8, [X31 + 0x480]
	0x03A48008 STP V0, V1, [X31 + 0x170]
	0x03A4800C STR X8, [X31 + 0x190]
	0x03A48010 ADD X0, X31, 0x490
	0x03A48014 ADD X1, X31, 0x170
	0x03A48018 MOV X2, X31
	0x03A4801C BL 0x3C507FC
	0x03A48020 ADRP X8, 0x70C000
	0x03A48024 LDR X8, [X8 + 0x10]
	0x03A48028 LDR X0, [X8]
	0x03A4802C LDR W8, [X0 + 0xE0]
	0x03A48030 CBNZ W8, 0x3A48038
	0x03A48034 BL 0x1C16DFC
	0x03A48038 MOV X0, X31
	0x03A4803C BL 0x3A71E5C
	0x03A48040 TBZ X0, 0x0, 0x3A48078
	0x03A48044 ADD X8, X31, 0x250
	0x03A48048 MOV X0, X23
	0x03A4804C MOV X1, X31
	0x03A48050 MOV X20, X23
	0x03A48054 BL 0x3C50790
	0x03A48058 LDP V0, V1, [X31 + 0x250]
	0x03A4805C LDR X8, [X31 + 0x270]
	0x03A48060 STP V0, V1, [X31 + 0x140]
	0x03A48064 STR X8, [X31 + 0x160]
	0x03A48068 ADD X1, X31, 0x140
	0x03A4806C MOV X0, X20
	0x03A48070 MOV X2, X31
	0x03A48074 BL 0x3C507FC
	0x03A48078 ADRP X8, 0x70C000
	0x03A4807C LDR X8, [X8 + 0x8C8]
	0x03A48080 LDR X20, [X8]
	0x03A48084 LDR W8, [X20 + 0xE0]
	0x03A48088 CBNZ W8, 0x3A480A0
	0x03A4808C MOV X0, X20
	0x03A48090 BL 0x1C16DFC
	0x03A48094 ADRP X8, 0x70C000
	0x03A48098 LDR X8, [X8 + 0x8C8]
	0x03A4809C LDR X20, [X8]
	0x03A480A0 LDR X8, [X20 + 0xB8]
	0x03A480A4 LDRB W8, [X8 + 0x8]
	0x03A480A8 CBZ W8, 0x3A480F0
	0x03A480AC LDR X8, [X31 + 0x48]
	0x03A480B0 LDR X8, [X8 + 0xC0]
	0x03A480B4 CBZ X8, 0x3A4826C
	0x03A480B8 LDR W9, [X8 + 0x18]
	0x03A480BC CBZ W9, 0x3A48268
	0x03A480C0 LDR W1, [X8 + 0x20]
	0x03A480C4 ADD X0, X31, 0x490
	0x03A480C8 MOV X2, X31
	0x03A480CC BL 0x3C50780
	0x03A480D0 LDR X8, [X31 + 0x48]
	0x03A480D4 LDR W1, [X8 + 0xC8]
	0x03A480D8 MOV X0, X23
	0x03A480DC MOV X2, X31
	0x03A480E0 BL 0x3C50780
	0x03A480E4 ADRP X8, 0x70C000
	0x03A480E8 LDR X8, [X8 + 0x8C8]
	0x03A480EC LDR X20, [X8]
	0x03A480F0 ADD X0, X31, 0x250
	0x03A480F4 ADD X1, X31, 0x490
	0x03A480F8 MOVZ W2, 0x78
	0x03A480FC BL 0x3EB1AC0
	0x03A48100 LDR X9, [X31 + 0x48]
	0x03A48104 LDR W8, [X20 + 0xE0]
	0x03A48108 LDR X24, [X9 + 0x38]
	0x03A4810C CBNZ W8, 0x3A48118
	0x03A48110 MOV X0, X20
	0x03A48114 BL 0x1C16DFC
	0x03A48118 ADD X0, X31, 0xC8
	0x03A4811C ADD X1, X31, 0x250
	0x03A48120 MOVZ W2, 0x78
	0x03A48124 BL 0x3EB1AC0
	0x03A48128 LDR W0, [X31 + 0x34]
	0x03A4812C ADD X1, X31, 0xC8
	0x03A48130 MOV X2, X24
	0x03A48134 BL 0x3A4843C
	0x03A48138 LDR X8, [X29 + 0x48]
	0x03A4813C LDR X24, [X31 + 0x28]
	0x03A48140 ADDS W31, W0, 0x1
	0x03A48144 B.EQ 0x3A48154
	0x03A48148 MOV X29, X28
	0x03A4814C STR W0, [X8]
	0x03A48150 B 0x3A4820C
	0x03A48154 LDR W20, [X31 + 0x34]
	0x03A48158 ADD X0, X31, 0x250
	0x03A4815C ADD X1, X31, 0x490
	0x03A48160 MOVZ W2, 0x78
	0x03A48164 STR W20, [X8]
	0x03A48168 LDR X8, [X31 + 0x48]
	0x03A4816C LDR X19, [X8 + 0x38]
	0x03A48170 BL 0x3EB1AC0
	0x03A48174 CBZ X19, 0x3A48290
	0x03A48178 ADD X0, X31, 0x50
	0x03A4817C ADD X1, X31, 0x250
	0x03A48180 MOVZ W2, 0x78
	0x03A48184 MOV X29, X28
	0x03A48188 BL 0x3EB1AC0
	0x03A4818C LDR W8, [X19 + 0x18]
	0x03A48190 CMP W20, W8
	0x03A48194 B.CS 0x3A48288
	0x03A48198 MOVZ W8, 0x78
	0x03A4819C SMADDL X8, X20, X8, X19
	0x03A481A0 ADD X0, X8, 0x20
	0x03A481A4 ADD X1, X31, 0x50
	0x03A481A8 MOVZ W2, 0x78
	0x03A481AC BL 0x3EB1AC0
	0x03A481B0 LDR X8, [X31 + 0x48]
	0x03A481B4 LDR X20, [X8 + 0x30]
	0x03A481B8 CBZ X20, 0x3A4828C
	0x03A481BC ADRP X8, 0x70D000
	0x03A481C0 LDR X8, [X8 + 0xD70]
	0x03A481C4 LDR X3, [X8]
	0x03A481C8 LDP X28, X25, [X31 + 0x10]
	0x03A481CC MOV X0, X20
	0x03A481D0 MOV X1, X25
	0x03A481D4 MOV X2, X28
	0x03A481D8 BL 0x29E8710
	0x03A481DC LDR W19, [X31 + 0xC]
	0x03A481E0 ADRP X8, 0x70D000
	0x03A481E4 LDR X8, [X8 + 0xD78]
	0x03A481E8 ADD W3, W0, 0x1
	0x03A481EC LDR X4, [X8]
	0x03A481F0 MOV X0, X20
	0x03A481F4 MOV X1, X25
	0x03A481F8 MOV X2, X28
	0x03A481FC BL 0x29E87A8
	0x03A48200 LDR W8, [X31 + 0x34]
	0x03A48204 ADD W8, W8, 0x1
	0x03A48208 STR W8, [X31 + 0x34]
	0x03A4820C LDR W8, [X29 + 0x18]
	0x03A48210 ADD W21, W21, 0x1
	0x03A48214 CMP W21, W8
	0x03A48218 B.LT 0x3A47A7C
	0x03A4821C ADD X0, X31, 0x508
	0x03A48220 MOV X1, X31
	0x03A48224 BL 0x39B1DB4
	0x03A48228 ADD X31, X31, 0x510
	0x03A4822C LDP X20, X19, [X31 + 0x70]
	0x03A48230 LDP X22, X21, [X31 + 0x60]
	0x03A48234 LDP X24, X23, [X31 + 0x50]
	0x03A48238 LDP X26, X25, [X31 + 0x40]
	0x03A4823C LDP X28, X27, [X31 + 0x30]
	0x03A48240 LDP X29, X30, [X31 + 0x20]
	0x03A48244 LDP D9, D8, [X31 + 0x10]
	0x03A48248 LDP D11, D10, [X31], #0x80
	0x03A4824C RET
	0x03A48250 BL 0x1C16F28
	0x03A48254 BL 0x1C16F20
	0x03A48258 BL 0x1C16F20
	0x03A4825C BL 0x1C16F20
	0x03A48260 BL 0x1C16F20
	0x03A48264 BL 0x1C16F20
	0x03A48268 BL 0x1C16F28
	0x03A4826C BL 0x1C16F20
	0x03A48270 BL 0x1C16F28
	0x03A48274 BL 0x1C16F20
	0x03A48278 BL 0x1C16F20
	0x03A4827C BL 0x1C16F20
	0x03A48280 BL 0x1C16F20
	0x03A48284 BL 0x1C16F20
	0x03A48288 BL 0x1C16F28
	0x03A4828C BL 0x1C16F20
	0x03A48290 BL 0x1C16F20
	0x03A48294 BL 0x1C16F20
	0x03A48298 BL 0x1C16F20
	0x03A4829C BL 0x1C16F20
	0x03A482A0 BL 0x1C16F20
	0x03A482A4 BL 0x1C16F20
	0x03A482A8 BL 0x1C16F28
	0x03A482AC BL 0x1C16F20
	0x03A482B0 BL 0x1C16F20
	0x03A482B4 BL 0x1C16F20
	0x03A482B8 B 0x3A483D8
	0x03A482BC B 0x3A483D8
	0x03A482C0 B 0x3A483D8
	0x03A482C4 B 0x3A483D8
	0x03A482C8 B 0x3A483D8
	0x03A482CC B 0x3A483D8
	0x03A482D0 B 0x3A483D8
	0x03A482D4 B 0x3A483D8
	0x03A482D8 B 0x3A483D8
	0x03A482DC B 0x3A483D8
	0x03A482E0 B 0x3A483D8
	0x03A482E4 B 0x3A483D8
	0x03A482E8 B 0x3A483D8
	0x03A482EC B 0x3A483D8
	0x03A482F0 B 0x3A483D8
	0x03A482F4 B 0x3A483D8
	0x03A482F8 B 0x3A483D8
	0x03A482FC B 0x3A483D8
	0x03A48300 B 0x3A483D8
	0x03A48304 B 0x3A483D8
	0x03A48308 B 0x3A483D8
	0x03A4830C B 0x3A483D8
	0x03A48310 B 0x3A483D8
	0x03A48314 B 0x3A483D8
	0x03A48318 B 0x3A483D8
	0x03A4831C B 0x3A483D8
	0x03A48320 B 0x3A483D8
	0x03A48324 B 0x3A483D8
	0x03A48328 B 0x3A483D8
	0x03A4832C B 0x3A483D8
	0x03A48330 B 0x3A483D8
	0x03A48334 B 0x3A483D8
	0x03A48338 B 0x3A483D8
	0x03A4833C B 0x3A483D8
	0x03A48340 B 0x3A483D8
	0x03A48344 B 0x3A483D8
	0x03A48348 B 0x3A483D8
	0x03A4834C B 0x3A483D8
	0x03A48350 B 0x3A483D8
	0x03A48354 B 0x3A483D8
	0x03A48358 B 0x3A483D8
	0x03A4835C B 0x3A483D8
	0x03A48360 B 0x3A483D8
	0x03A48364 B 0x3A483D8
	0x03A48368 B 0x3A483D8
	0x03A4836C B 0x3A483D8
	0x03A48370 B 0x3A483D8
	0x03A48374 B 0x3A483D8
	0x03A48378 B 0x3A483D8
	0x03A4837C B 0x3A483D8
	0x03A48380 B 0x3A483D8
	0x03A48384 B 0x3A483D8
	0x03A48388 B 0x3A483D8
	0x03A4838C B 0x3A483D8
	0x03A48390 B 0x3A483D8
	0x03A48394 B 0x3A483D8
	0x03A48398 B 0x3A483D8
	0x03A4839C B 0x3A483D8
	0x03A483A0 B 0x3A483D8
	0x03A483A4 B 0x3A483D8
	0x03A483A8 B 0x3A483D8
	0x03A483AC B 0x3A483D8
	0x03A483B0 B 0x3A483D8
	0x03A483B4 B 0x3A483D8
	0x03A483B8 B 0x3A483D8
	0x03A483BC B 0x3A483D8
	0x03A483C0 B 0x3A483D8
	0x03A483C4 B 0x3A483D8
	0x03A483C8 B 0x3A483D8
	0x03A483CC B 0x3A483D8
	0x03A483D0 B 0x3A483D8
	0x03A483D4 B 0x3A483D8
	0x03A483D8 MOV X19, X0
	0x03A483DC CMP W1, 0x1
	0x03A483E0 B.NE 0x3A4840C

ISIL:
	001 Move [X31-128], D11
	002 Move [X31-120], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X29
	006 Move [X31+40], X30
	007 Move [X31+48], X28
	008 Move [X31+56], X27
	009 Move [X31+64], X26
	010 Move [X31+72], X25
	011 Move [X31+80], X24
	012 Move [X31+88], X23
	013 Move [X31+96], X22
	014 Move [X31+104], X21
	015 Move [X31+112], X20
	016 Move [X31+120], X19
	017 Subtract X31, X31, 688
	018 Move [X31+56], W3
	019 Move [X31+60], W4
	020 Move X21, 0x99C000
	021 Move X20, 0x70F000
	022 Move W8, [X21+389]
	023 Move X20, [X20+3376]
	024 Move X22, X2
	025 Move X23, X1
	026 Move X19, X0
	027 Move TEMP, X8
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfEqual {66}
	031 Move X0, 0x6D5000
	032 Move X0, [X0+2296]
	033 Call 0x1C17CF4
	034 Move X0, 0x70F000
	035 Move X0, [X0+3440]
	036 Call 0x1C17CF4
	037 Move X0, 0x70F000
	038 Move X0, [X0+3432]
	039 Call 0x1C17CF4
	040 Move X0, 0x70F000
	041 Move X0, [X0+3448]
	042 Call 0x1C17CF4
	043 Move X0, 0x707000
	044 Move X0, [X0+2728]
	045 Call 0x1C17CF4
	046 Move X0, 0x6B1000
	047 Move X0, [X0+712]
	048 Call 0x1C17CF4
	049 Move X0, 0x70E000
	050 Move X0, [X0+2320]
	051 Call 0x1C17CF4
	052 Move X0, 0x70F000
	053 Move X0, [X0+3376]
	054 Call 0x1C17CF4
	055 Move X0, 0x70E000
	056 Move X0, [X0+16]
	057 Call 0x1C17CF4
	058 Move X0, 0x70E000
	059 Move X0, [X0+2248]
	060 Call 0x1C17CF4
	061 Move X0, 0x6D6000
	062 Move X0, [X0+2216]
	063 Call 0x1C17CF4
	064 Move W8, 1
	065 Move [X21+389], W8
	066 Move X0, [X20]
	067 NotImplemented "Instruction MOVI not yet implemented."
	068 Move [X31+680], W31
	069 Move [X31+672], X31
	070 Move [X31+640], V0
	071 Move [X31+648], V0
	072 Move [X31+608], V0
	073 Move [X31+616], V0
	074 Move [X31+576], V0
	075 Move [X31+584], V0
	076 Move [X31+35], V0
	077 Move [X31+544], X31
	078 Move [X31+512], V0
	079 Move [X31+520], V0
	080 Move W8, [X0+224]
	081 Compare W8, 0
	082 JumpIfNotEqual {85}
	083 Call 0x1C17DFC
	084 Move X0, [X20]
	085 Move X8, [X0+184]
	086 Add X0, X31, 680
	087 Move X1, X31
	088 Move X3, X31
	089 Move X2, [X8]
	090 Call ProfilingScope..ctor, X0, X1, X2
	091 Compare X23, 0
	092 JumpIfEqual {595}
	093 Move X8, [X19+40]
	094 Compare X8, 0
	095 JumpIfEqual {596}
	096 NotImplemented "Instruction LDRSW not yet implemented."
	097 Move W9, [X8+24]
	098 NotImplemented "Instruction CMP not yet implemented."
	099 Move X0, [X19+24]
	100 Compare X0, 0
	101 JumpIfEqual {598}
	102 Move X9, 0x70F000
	103 Move X9, [X9+3432]
	104 Add X8, X8, X20
	105 Move X1, [X8+32]
	106 Move X2, [X8+40]
	107 Move X3, [X9]
	108 Move [X31+64], X2
	109 Move [X31+72], X1
	110 Call Dictionary`2<Hash128, Object>.get_Item, X0, X1
	111 Move X8, 0x707000
	112 Move X8, [X8+2728]
	113 Move X23, X0
	114 Move X1, [X8]
	115 Call Enumerable.First, X0
	116 NotImplemented "Instruction CMP not yet implemented."
	117 Move X0, [X19+48]
	118 Compare X0, 0
	119 JumpIfEqual {599}
	120 Move X8, 0x70F000
	121 Move X8, [X8+3448]
	122 Move X4, [X8]
	123 Move X2, [X31+64]
	124 Move X1, [X31+72]
	125 Move W3, W31
	126 Call Dictionary`2<Hash128, Int32>.set_Item, X0, X1, X2
	127 Move X0, X19
	128 Move X1, X23
	129 Move X2, X22
	130 Call ScriptableRenderer.UpdateFinalStoreActions, X0, X1, X2
	131 Compare X23, 0
	132 JumpIfEqual {600}
	133 Move W8, [X23+24]
	134 NotImplemented "Instruction CMP not yet implemented."
	135 Move W9, [X31+60]
	136 Move [X31+24], W31
	137 Move X26, 0x70E000
	138 Move W10, W31
	139 And W24, W9, 6
	140 Add X9, X19, 320
	141 Move [X31+16], X9
	142 Move X26, [X26+2248]
	143 Move W25, W31
	144 Add X21, X19, 272
	145 Add X20, X19, 64
	146 Move [X31+32], X20
	147 Move [X31+40], X23
	148 Move [X31+28], W24
	149 NotImplemented "Instruction CMP not yet implemented."
	150 Add X8, X23, W10
	151 Move W1, [X8+32]
	152 Add W31, W1, 1
	153 Move X0, [X19+256]
	154 Move [X31+52], W10
	155 Compare X0, 0
	156 JumpIfEqual {592}
	157 Move X8, 0x70E000
	158 Move X8, [X8+2320]
	159 Move X2, [X8]
	160 Call List`1<Object>.get_Item, X0, X1
	161 Move X28, X0
	162 Move TEMP, 0
	163 Not TEMP
	164 Move W11, TEMP
	165 Compare X0, 0
	166 JumpIfEqual {593}
	167 Move W8, [X28+80]
	168 NotImplemented "Instruction CMP not yet implemented."
	169 Move X8, [X28+72]
	170 Move X9, X31
	171 Move [X8], W11
	172 NotImplemented "Instruction LDRSW not yet implemented."
	173 Add X9, X9, 1
	174 NotImplemented "Instruction CMP not yet implemented."
	175 Move W8, [X28+96]
	176 NotImplemented "Instruction CMP not yet implemented."
	177 Move X8, [X28+88]
	178 Move X9, X31
	179 Move [X8], W11
	180 NotImplemented "Instruction LDRSW not yet implemented."
	181 Add X9, X9, 1
	182 NotImplemented "Instruction CMP not yet implemented."
	183 Move X8, 0x70E000
	184 Move X8, [X8+16]
	185 Move X27, [X28+120]
	186 Move X0, [X8]
	187 Move W8, [X0+224]
	188 Compare W8, 0
	189 JumpIfNotEqual {191}
	190 Call 0x1C17DFC
	191 Move X0, X27
	192 Move X1, X31
	193 Call RenderingUtils.GetValidColorBufferCount, X0
	194 Compare W0, 0
	195 JumpIfEqual {432}
	196 Move X24, X31
	197 Move W23, W0
	198 Move X8, [X28+104]
	199 Compare X8, 0
	200 JumpIfEqual {574}
	201 Move W9, [X8+24]
	202 NotImplemented "Instruction CMP not yet implemented."
	203 Add X8, X8, X24
	204 Move W1, [X8+32]
	205 Compare W1, 0
	206 JumpIfNotEqual {233}
	207 Move X8, 0x6B1000
	208 Move X8, [X8+712]
	209 Move W20, [X22+365]
	210 Move W29, [X22+352]
	211 Move X0, [X8]
	212 Move W8, [X0+224]
	213 Compare W8, 0
	214 JumpIfNotEqual {216}
	215 Call 0x1C17DFC
	216 Move X0, X31
	217 Call Graphics.get_preserveFramebufferAlpha
	218 Move X8, 0x6D6000
	219 Move X8, [X8+2216]
	220 Move W27, W0
	221 Move X0, [X8]
	222 Move W8, [X0+224]
	223 Compare W8, 0
	224 JumpIfNotEqual {226}
	225 Call 0x1C17DFC
	226 NotImplemented "Instruction CMP not yet implemented."
	227 NotImplemented "Instruction CSET not yet implemented."
	228 And W2, W27, 1
	229 Move W1, W29
	230 Move X3, X31
	231 Call UniversalRenderPipeline.MakeRenderTextureGraphicsFormat, X0, X1, X2
	232 Move W1, W0
	233 Add X0, X31, 560
	234 Move X2, X31
	235 Call AttachmentDescriptor..ctor, X0, X1
	236 Move W9, [X28+64]
	237 Move X8, X21
	238 Compare W9, 0
	239 JumpIfEqual {247}
	240 Move X8, [X28+120]
	241 Compare X8, 0
	242 JumpIfEqual {578}
	243 Move W9, [X8+24]
	244 NotImplemented "Instruction CMP not yet implemented."
	245 Add X8, X8, X24
	246 Add X8, X8, 32
	247 Move X20, [X8]
	248 Compare X20, 0
	249 JumpIfEqual {573}
	250 Move X8, [X20+72]
	251 NotImplemented "Instruction LDUR not yet implemented."
	252 NotImplemented "Instruction LDUR not yet implemented."
	253 Move X0, [X26]
	254 Move [X31+368], X8
	255 Move [X31+336], V1
	256 Move [X31+344], V0
	257 Move W8, [X0+224]
	258 Move X27, [X19+56]
	259 Compare W8, 0
	260 JumpIfNotEqual {262}
	261 Call 0x1C17DFC
	262 Move V0, [X31+336]
	263 Move V1, [X31+352]
	264 Move X8, [X31+368]
	265 Move [X31+464], V0
	266 Move [X31+472], V1
	267 Move [X31+496], X8
	268 Add X0, X31, 464
	269 Move X1, X27
	270 Call ScriptableRenderer.FindAttachmentDescriptorIndexInList, X0, X1
	271 Move X8, [X26]
	272 Move W29, W0
	273 Move X8, [X8+184]
	274 Move W8, [X8+8]
	275 Compare W8, 0
	276 JumpIfEqual {287}
	277 Move X8, [X19+192]
	278 Compare X8, 0
	279 JumpIfEqual {579}
	280 Move W9, [X8+24]
	281 NotImplemented "Instruction CMP not yet implemented."
	282 Add X8, X8, X24
	283 Move W1, [X8+32]
	284 Add X0, X31, 560
	285 Move X2, X31
	286 Call AttachmentDescriptor.set_storeAction, X0, X1
	287 Add W31, W29, 1
	288 Move X8, [X28+72]
	289 Move [X8], W29
	290 Move X29, [X19+56]
	291 Add X0, X31, 336
	292 Add X1, X31, 560
	293 Move W2, 120
	294 Call 0x3EB2AC0
	295 Compare X29, 0
	296 JumpIfEqual {580}
	297 Add X0, X31, 216
	298 Add X1, X31, 336
	299 Move W2, 120
	300 Call 0x3EB2AC0
	301 Move W8, [X29+24]
	302 NotImplemented "Instruction CMP not yet implemented."
	303 Move X27, W25
	304 Move W8, 120
	305 NotImplemented "Instruction MADD not yet implemented."
	306 Add X0, X8, 32
	307 Add X1, X31, 216
	308 Move W2, 120
	309 Call 0x3EB2AC0
	310 Move X8, [X19+56]
	311 Compare X8, 0
	312 JumpIfEqual {586}
	313 Add X9, X20, 40
	314 Move X10, [X9+32]
	315 Move V1, [X9]
	316 Move V0, [X9+16]
	317 Move W20, [X28+204]
	318 Move [X31+208], X10
	319 Move [X31+176], V1
	320 Move [X31+184], V0
	321 Move W9, [X8+24]
	322 NotImplemented "Instruction CMP not yet implemented."
	323 Move W9, 120
	324 NotImplemented "Instruction MADD not yet implemented."
	325 Move V0, [X31+176]
	326 Move V1, [X31+192]
	327 Move X9, [X31+208]
	328 And W31, W20, 1
	329 Add X0, X8, 32
	330 NotImplemented "Instruction CSET not yet implemented."
	331 Move [X31+128], V0
	332 Move [X31+136], V1
	333 Move [X31+160], X9
	334 Add X1, X31, 128
	335 Move W3, 1
	336 Move X4, X31
	337 Call AttachmentDescriptor.ConfigureTarget, X0, X1, X2, X3
	338 Move X8, [X28+120]
	339 Compare X8, 0
	340 JumpIfEqual {583}
	341 Move W9, [X8+24]
	342 NotImplemented "Instruction CMP not yet implemented."
	343 Move W9, [X31+60]
	344 Move TEMP, X9
	345 And TEMP, TEMP, 1
	346 Compare TEMP, 1
	347 JumpIfNotEqual {373}
	348 Add X8, X8, X24
	349 Move X8, [X8+32]
	350 Move X9, [X21]
	351 NotImplemented "Instruction CMP not yet implemented."
	352 Move W8, [X31+56]
	353 Move TEMP, X8
	354 And TEMP, TEMP, 1
	355 Compare TEMP, 1
	356 JumpIfNotEqual {373}
	357 Move X8, [X19+56]
	358 Compare X8, 0
	359 JumpIfEqual {588}
	360 Move W9, [X8+24]
	361 NotImplemented "Instruction CMP not yet implemented."
	362 Move V3, [X22+476]
	363 Move V2, [X22+472]
	364 Move V1, [X22+468]
	365 Move V0, [X22+464]
	366 Move W9, 120
	367 NotImplemented "Instruction MADD not yet implemented."
	368 Add X0, X8, 32
	369 Move S4, 1
	370 Move W1, W31
	371 Move X2, X31
	372 Call AttachmentDescriptor.ConfigureClear, X0, X1, V0, X2
	373 Move TEMP, X20
	374 And TEMP, TEMP, 1
	375 Compare TEMP, 1
	376 JumpIfNotEqual {406}
	377 Move X20, [X19+56]
	378 Compare X20, 0
	379 JumpIfEqual {590}
	380 Move X8, 0x6D5000
	381 Move X8, [X8+2296]
	382 Move S11, [X28+208]
	383 Move S10, [X28+212]
	384 Move S9, [X28+216]
	385 Move S8, [X28+220]
	386 Move X0, [X8]
	387 Move W8, [X0+224]
	388 Compare W8, 0
	389 JumpIfNotEqual {391}
	390 Call 0x1C17DFC
	391 Move V0, V11
	392 Move V1, V10
	393 Move V2, V9
	394 Move V3, V8
	395 Move X0, X31
	396 Call CoreUtils.ConvertSRGBToActiveColorSpace, X0
	397 Move W8, [X20+24]
	398 NotImplemented "Instruction CMP not yet implemented."
	399 Move W8, 120
	400 NotImplemented "Instruction MADD not yet implemented."
	401 Add X0, X8, 32
	402 Move S4, 1
	403 Move W1, W31
	404 Move X2, X31
	405 Call AttachmentDescriptor.ConfigureClear, X0, X1, V0, X2
	406 Move X8, [X28+72]
	407 Move [X8], W25
	408 Move X27, [X19+48]
	409 Compare X27, 0
	410 JumpIfEqual {582}
	411 Move X8, 0x70E000
	412 Move X8, [X8+3440]
	413 Move X3, [X8]
	414 Move X29, [X31+64]
	415 Move X20, [X31+72]
	416 Move X0, X27
	417 Move X1, X20
	418 Move X2, X29
	419 Call Dictionary`2<Hash128, Int32>.get_Item, X0, X1
	420 Move X8, 0x70E000
	421 Move X8, [X8+3448]
	422 Add W3, W0, 1
	423 Move X4, [X8]
	424 Move X0, X27
	425 Move X1, X20
	426 Move X2, X29
	427 Call Dictionary`2<Hash128, Int32>.set_Item, X0, X1, X2
	428 Add W25, W25, 1
	429 Add W8, W24, 1
	430 Move X24, W8
	431 NotImplemented "Instruction CMP not yet implemented."
	432 Move X0, [X26]
	433 Move W8, [X0+224]
	434 Compare W8, 0
	435 JumpIfNotEqual {437}
	436 Call 0x1C17DFC
	437 Move X0, X28
	438 Call ScriptableRenderer.PassHasInputAttachments, X0
	439 Move X20, [X31+32]
	440 Move X23, [X31+40]
	441 Move W24, [X31+28]
	442 Move TEMP, X0
	443 And TEMP, TEMP, 1
	444 Compare TEMP, 1
	445 JumpIfNotEqual {451}
	446 Move X0, X19
	447 Move X1, X28
	448 Call ScriptableRenderer.SetupInputAttachmentIndices, X0, X1
	449 Move W8, 1
	450 Move [X31+24], W8
	451 Move W0, 2
	452 Move X1, X31
	453 Call SystemInfo.GetGraphicsFormat, X0
	454 Move W1, W0
	455 NotImplemented "Instruction MOVI not yet implemented."
	456 Move [X31+448], X31
	457 Move [X31+416], V0
	458 Move [X31+424], V0
	459 Move [X31+384], V0
	460 Move [X31+392], V0
	461 Move [X31+352], V0
	462 Move [X31+360], V0
	463 Move [X31+21], V0
	464 Add X0, X31, 336
	465 Move X2, X31
	466 Call AttachmentDescriptor..ctor, X0, X1
	467 Add X1, X31, 336
	468 Move W2, 120
	469 Move X0, X20
	470 Call 0x3EB2AC0
	471 Move W8, [X28+64]
	472 Compare W8, 0
	473 JumpIfEqual {483}
	474 Move X8, [X28+152]
	475 Compare X8, 0
	476 JumpIfEqual {594}
	477 Move X9, [X8+72]
	478 NotImplemented "Instruction LDUR not yet implemented."
	479 NotImplemented "Instruction LDUR not yet implemented."
	480 Move [X31+544], X9
	481 Move [X31+512], V1
	482 Move [X31+520], V0
	483 Move X0, [X31+16]
	484 Add X8, X31, 336
	485 Move X1, X31
	486 Call RTHandleRenderTargetIdentifierCompat.get_nameID, X0
	487 Move V0, [X31+336]
	488 Move V1, [X31+352]
	489 Move X8, [X31+368]
	490 Move [X31+512], V0
	491 Move [X31+520], V1
	492 Move [X31+544], X8
	493 Move V0, [X31+512]
	494 Move V1, [X31+528]
	495 Move X8, [X31+544]
	496 NotImplemented "Instruction CMP not yet implemented."
	497 NotImplemented "Instruction CSET not yet implemented."
	498 Move [X31+80], V0
	499 Move [X31+88], V1
	500 Move [X31+112], X8
	501 Add X1, X31, 80
	502 Move W3, 1
	503 Move X0, X20
	504 Move X4, X31
	505 Call AttachmentDescriptor.ConfigureTarget, X0, X1, X2, X3
	506 Compare W24, 0
	507 JumpIfEqual {517}
	508 Move S0, W31
	509 Move S1, W31
	510 Move S2, W31
	511 Move S3, 1
	512 Move S4, 1
	513 Move X0, X20
	514 Move W1, W31
	515 Move X2, X31
	516 Call AttachmentDescriptor.ConfigureClear, X0, X1, V0, X2
	517 Move X0, [X26]
	518 Move W8, [X0+224]
	519 Compare W8, 0
	520 JumpIfNotEqual {523}
	521 Call 0x1C17DFC
	522 Move X0, [X26]
	523 Move X8, [X0+184]
	524 Move W8, [X8+8]
	525 Compare W8, 0
	526 JumpIfEqual {531}
	527 Move W1, [X19+200]
	528 Move X0, X20
	529 Move X2, X31
	530 Call AttachmentDescriptor.set_storeAction, X0, X1
	531 Move W10, [X31+52]
	532 Move W8, [X23+24]
	533 Add W10, W10, 1
	534 NotImplemented "Instruction CMP not yet implemented."
	535 Move W8, [X31+24]
	536 Move TEMP, X8
	537 And TEMP, TEMP, 1
	538 Compare TEMP, 1
	539 JumpIfNotEqual {552}
	540 Move X0, [X19+48]
	541 Compare X0, 0
	542 JumpIfEqual {601}
	543 Move X8, 0x70E000
	544 Move X8, [X8+3440]
	545 Move X3, [X8]
	546 Move X2, [X31+64]
	547 Move X1, [X31+72]
	548 Call Dictionary`2<Hash128, Int32>.get_Item, X0, X1
	549 Move W1, W0
	550 Move X0, X19
	551 Call ScriptableRenderer.SetupTransientInputAttachments, X0, X1
	552 Add X0, X31, 680
	553 Move X1, X31
	554 Call ProfilingScope.Dispose, X0
	555 Add X31, X31, 688
	556 Move X20, [X31+112]
	557 Move X19, [X31+120]
	558 Move X22, [X31+96]
	559 Move X21, [X31+104]
	560 Move X24, [X31+80]
	561 Move X23, [X31+88]
	562 Move X26, [X31+64]
	563 Move X25, [X31+72]
	564 Move X28, [X31+48]
	565 Move X27, [X31+56]
	566 Move X29, [X31+32]
	567 Move X30, [X31+40]
	568 Move D9, [X31+16]
	569 Move D8, [X31+24]
	570 Move D11, [X31+128]
	571 Move D10, [X31+136]
	572 Return 
	573 Call 0x1C17F20
	574 Call 0x1C17F20
	575 Call 0x1C17F28
	576 Call 0x1C17F28
	577 Call 0x1C17F28
	578 Call 0x1C17F20
	579 Call 0x1C17F20
	580 Call 0x1C17F20
	581 Call 0x1C17F28
	582 Call 0x1C17F20
	583 Call 0x1C17F20
	584 Call 0x1C17F28
	585 Call 0x1C17F28
	586 Call 0x1C17F20
	587 Call 0x1C17F28
	588 Call 0x1C17F20
	589 Call 0x1C17F28
	590 Call 0x1C17F20
	591 Call 0x1C17F28
	592 Call 0x1C17F20
	593 Call 0x1C17F20
	594 Call 0x1C17F20
	595 Call 0x1C17F20
	596 Call 0x1C17F20
	597 Call 0x1C17F28
	598 Call 0x1C17F20
	599 Call 0x1C17F20
	600 Call 0x1C17F20
	601 Call 0x1C17F20
	602 Move X19, X0
	603 NotImplemented "Instruction CMP not yet implemented."
	604 Move X0, X19
	605 Call 0x3EB2AD0
	606 Move X20, [X0]
	607 Call 0x3EB2AE0
	608 Add X0, X31, 680
	609 Move X1, X31
	610 Call ProfilingScope.Dispose, X0
	611 Compare X20, 0
	612 JumpIfEqual {555}
	613 Move X0, X20
	614 Call 0x1C17F18
	615 Move X20, X31
	616 Move X19, X0
	617 Add X0, X31, 680
	618 Move X1, X31
	619 Call ProfilingScope.Dispose, X0
	620 Compare X20, 0
	621 JumpIfNotEqual {624}
	622 Move X0, X19
	623 Call 0x1D2D690
	624 Move X0, X20
	625 Call 0x1C17F18
	626 Call 0x1991590

Method: System.Boolean IsDepthOnlyRenderTexture(UnityEngine.RenderTexture t)

Disassembly:
	0x03A4880C STP V2, V3, [X20 + 0x30]
	0x03A48810 STR X9, [X31 + 0xF0]
	0x03A48814 ADD X0, X31, 0xD0
	0x03A48818 ADD X1, X31, 0xA0
	0x03A4881C MOV X2, X31
	0x03A48820 BL 0x3C4B708
	0x03A48824 TBZ X0, 0x0, 0x3A48844
	0x03A48828 MOV W20, W31
	0x03A4882C ADD W1, W25, 0x1
	0x03A48830 MOVZ W23, 0x1

ISIL:
	001 Move [X31-16], X30
	002 Compare X1, 0
	003 JumpIfEqual {11}
	004 Move X0, X1
	005 Move X1, X31
	006 Call RenderTexture.get_graphicsFormat, X0
	007 NotImplemented "Instruction CMP not yet implemented."
	008 NotImplemented "Instruction CSET not yet implemented."
	009 Move X30, [X31+16]
	010 Return X0
	011 Call 0x1C17F20

Method: System.Void SetNativeRenderPassAttachmentList(UnityEngine.Rendering.Universal.ScriptableRenderPass renderPass, ref UnityEngine.Rendering.Universal.CameraData cameraData, UnityEngine.Rendering.RTHandle passColorAttachment, UnityEngine.Rendering.RTHandle passDepthAttachment, UnityEngine.Rendering.ClearFlag finalClearFlag, UnityEngine.Color finalClearColor)

Disassembly:
	0x03A48834 B 0x3A48850
	0x03A48838 MOV W20, W31
	0x03A4883C MOV W23, W31
	0x03A48840 B 0x3A4884C
	0x03A48844 MOVZ W20, 0x1
	0x03A48848 MOVZ W23, 0x1
	0x03A4884C MOVZ W1, 0x1
	0x03A48850 ADRP X8, 0x70D000
	0x03A48854 LDR X8, [X8 + 0xD90]
	0x03A48858 LDR X4, [X8]
	0x03A4885C ADD X0, X31, 0x160
	0x03A48860 MOVZ W2, 0x2
	0x03A48864 MOVZ W3, 0x1
	0x03A48868 BL 0x31A765C
	0x03A4886C CMP W25, 0x1
	0x03A48870 B.LT 0x3A488BC
	0x03A48874 LDR X27, [X31 + 0x160]
	0x03A48878 MOV X26, X31
	0x03A4887C MOV W28, W25
	0x03A48880 MOVZ W29, 0x20
	0x03A48884 LDR X8, [X19 + 0x38]
	0x03A48888 CBZ X8, 0x3A48E90
	0x03A4888C LDR W9, [X8 + 0x18]
	0x03A48890 CMP X26, X9
	0x03A48894 B.CS 0x3A48E94
	0x03A48898 ADD X1, X8, X29
	0x03A4889C ADD X8, X27, X29
	0x03A488A0 SUB X0, X8, 0x20
	0x03A488A4 MOVZ W2, 0x78
	0x03A488A8 BL 0x3EB1B30
	0x03A488AC ADD X26, X26, 0x1
	0x03A488B0 CMP X28, X26
	0x03A488B4 ADD X29, X29, 0x78
	0x03A488B8 B.NE 0x3A48884
	0x03A488BC EOR W8, W23, 0x1
	0x03A488C0 ORR W8, W20, W8, 0x0
	0x03A488C4 TBNZ X8, 0x0, 0x3A488E0
	0x03A488C8 LDR X8, [X31 + 0x160]
	0x03A488CC MOVZ W9, 0x78
	0x03A488D0 ADD X1, X19, 0x40
	0x03A488D4 MOVZ W2, 0x78
	0x03A488D8 SMADDL X0, X25, X9, X8
	0x03A488DC BL 0x3EB1B30
	0x03A488E0 MOV X0, X19
	0x03A488E4 MOV X1, X24
	0x03A488E8 MOV X2, X21
	0x03A488EC BL 0x3A464A0
	0x03A488F0 ADRP X24, 0x70C000
	0x03A488F4 LDR X24, [X24 + 0x8C8]
	0x03A488F8 MOV X26, X0
	0x03A488FC MOV X27, X1
	0x03A48900 LDR X0, [X24]
	0x03A48904 LDR W8, [X0 + 0xE0]
	0x03A48908 CBNZ W8, 0x3A48910
	0x03A4890C BL 0x1C16DFC
	0x03A48910 LDR X0, [X31 + 0x20]
	0x03A48914 BL 0x3A4663C
	0x03A48918 STR W0, [X31 + 0x14]
	0x03A4891C MOV X0, X21
	0x03A48920 BL 0x3A49048
	0x03A48924 ADRP X8, 0x6D5000
	0x03A48928 LDR X8, [X8 + 0x138]
	0x03A4892C CMP W23, 0x0
	0x03A48930 MOV W28, W0
	0x03A48934 CSEL W1, W0, W31, NE
	0x03A48938 LDR X4, [X8]
	0x03A4893C ADD X0, X31, 0x150
	0x03A48940 MOVZ W2, 0x2
	0x03A48944 MOVZ W3, 0x1
	0x03A48948 BL 0x23D58AC
	0x03A4894C CBZ W23, 0x3A48980
	0x03A48950 CBZ W28, 0x3A48980
	0x03A48954 LDR X9, [X21 + 0x48]
	0x03A48958 LDR X10, [X31 + 0x150]
	0x03A4895C MOV X8, X31
	0x03A48960 MOV W11, W28
	0x03A48964 MOVZ W12, 0x1
	0x03A48968 LDR W13, [X9, X8, LSL #2]
	0x03A4896C STR W13, [X10, X8, LSL #2]
	0x03A48970 SXTW X8, W12
	0x03A48974 CMP X8, X11
	0x03A48978 ADD W12, W12, 0x1
	0x03A4897C B.LT 0x3A48968
	0x03A48980 LDR W8, [X31 + 0x14]
	0x03A48984 CMP W8, 0x1
	0x03A48988 B.EQ 0x3A489A8
	0x03A4898C LDR X9, [X31 + 0x20]
	0x03A48990 CBZ X9, 0x3A48EBC
	0x03A48994 LDR W8, [X9 + 0x18]
	0x03A48998 CBZ W8, 0x3A48EC0
	0x03A4899C LDR W8, [X9 + 0x20]
	0x03A489A0 CMP W8, W22
	0x03A489A4 B.NE 0x3A48CA8
	0x03A489A8 LDR X0, [X24]
	0x03A489AC LDR W8, [X0 + 0xE0]
	0x03A489B0 CBNZ W8, 0x3A489B8
	0x03A489B4 BL 0x1C16DFC
	0x03A489B8 MOV X0, X21
	0x03A489BC BL 0x3A474C8
	0x03A489C0 TBZ X0, 0x0, 0x3A489F0
	0x03A489C4 ADRP X8, 0x6AB000
	0x03A489C8 LDR X8, [X8 + 0xA28]
	0x03A489CC LDR X0, [X8]
	0x03A489D0 LDR W8, [X0 + 0xE0]
	0x03A489D4 CBNZ W8, 0x3A489DC
	0x03A489D8 BL 0x1C16DFC
	0x03A489DC ADRP X8, 0x70D000
	0x03A489E0 LDR X8, [X8 + 0xD98]
	0x03A489E4 LDR X0, [X8]
	0x03A489E8 MOV X1, X31
	0x03A489EC BL 0x3C06A04
	0x03A489F0 ADRP X8, 0x6AB000
	0x03A489F4 LDR X8, [X8 + 0x5A8]
	0x03A489F8 LDR X0, [X8]
	0x03A489FC LDR W8, [X0 + 0xE0]
	0x03A48A00 CBNZ W8, 0x3A48A08
	0x03A48A04 BL 0x1C16DFC
	0x03A48A08 MOVZ W1, 0x1
	0x03A48A0C MOV W0, W27
	0x03A48A10 MOV X2, X31
	0x03A48A14 BL 0x337EDF0
	0x03A48A18 ADRP X8, 0x708000
	0x03A48A1C LDR X8, [X8 + 0xC80]
	0x03A48A20 MOV W27, W0
	0x03A48A24 LDP X29, X28, [X31 + 0x160]
	0x03A48A28 CMP W23, 0x0
	0x03A48A2C LDR X0, [X8]
	0x03A48A30 CSEL W9, W25, W31, NE
	0x03A48A34 CMP W20, 0x0
	0x03A48A38 CSINV W25, W9, W31, EQ
	0x03A48A3C LDR W8, [X0 + 0xE0]
	0x03A48A40 CBNZ W8, 0x3A48A48
	0x03A48A44 BL 0x1C16DFC
	0x03A48A48 UBFM X2, X26, 0x20, 0x3F
	0x03A48A4C ADD X0, X31, 0x178
	0x03A48A50 MOV W1, W26
	0x03A48A54 MOV W3, W27
	0x03A48A58 MOV X4, X29
	0x03A48A5C MOV X5, X28
	0x03A48A60 MOV W6, W25
	0x03A48A64 MOV X7, X31
	0x03A48A68 BL 0x3C58644
	0x03A48A6C ADRP X8, 0x70D000
	0x03A48A70 LDR X8, [X8 + 0xD88]
	0x03A48A74 LDR X1, [X8]
	0x03A48A78 ADD X0, X31, 0x160
	0x03A48A7C BL 0x31A792C
	0x03A48A80 LDP X1, X2, [X31 + 0x150]
	0x03A48A84 ADD X0, X31, 0x178
	0x03A48A88 MOV W3, W31
	0x03A48A8C MOV X4, X31
	0x03A48A90 BL 0x3C58850
	0x03A48A94 ADD X29, X19, 0x10
	0x03A48A98 STR W22, [X29]
	0x03A48A9C ADRP X8, 0x6D5000
	0x03A48AA0 LDR X8, [X8 + 0x148]
	0x03A48AA4 LDR X1, [X8]
	0x03A48AA8 ADD X0, X31, 0x150
	0x03A48AAC BL 0x23D5AD4
	0x03A48AB0 LDR X8, [X21]
	0x03A48AB4 LDR X1, [X31 + 0x178]
	0x03A48AB8 LDP X9, X3, [X8 + 0x1C8]
	0x03A48ABC LDR X20, [X31 + 0x18]
	0x03A48AC0 MOV X0, X21
	0x03A48AC4 MOV X2, X20
	0x03A48AC8 BLR X9
	0x03A48ACC ADRP X8, 0x708000
	0x03A48AD0 LDR X8, [X8 + 0xC80]
	0x03A48AD4 LDR X21, [X20]
	0x03A48AD8 LDR X0, [X8]
	0x03A48ADC LDR W8, [X0 + 0xE0]
	0x03A48AE0 CBNZ W8, 0x3A48AE8
	0x03A48AE4 BL 0x1C16DFC
	0x03A48AE8 ADD X0, X31, 0x178
	0x03A48AEC MOV X1, X21
	0x03A48AF0 MOV X2, X31
	0x03A48AF4 BL 0x3C58FE4
	0x03A48AF8 LDP X8, X20, [X31 + 0x18]
	0x03A48AFC LDR X0, [X8]
	0x03A48B00 CBZ X0, 0x3A48EB0
	0x03A48B04 MOV X1, X31
	0x03A48B08 BL 0x3C4C310
	0x03A48B0C LDR W8, [X31 + 0x14]
	0x03A48B10 SUBS W8, W8, 0x1
	0x03A48B14 B.EQ 0x3A48B38
	0x03A48B18 CBZ X20, 0x3A48EC4
	0x03A48B1C LDR W9, [X20 + 0x18]
	0x03A48B20 CMP W8, W9
	0x03A48B24 B.CS 0x3A48EC8
	0x03A48B28 ADD X8, X20, W8, 0x2, SXTW
	0x03A48B2C LDR W8, [X8 + 0x20]
	0x03A48B30 CMP W8, W22
	0x03A48B34 B.NE 0x3A48B6C
	0x03A48B38 ADRP X8, 0x708000
	0x03A48B3C LDR X8, [X8 + 0xC80]
	0x03A48B40 LDR X0, [X8]
	0x03A48B44 LDR W8, [X0 + 0xE0]
	0x03A48B48 CBNZ W8, 0x3A48B50
	0x03A48B4C BL 0x1C16DFC
	0x03A48B50 ADD X0, X31, 0x178
	0x03A48B54 MOV X1, X31
	0x03A48B58 BL 0x3C58930
	0x03A48B5C ADD X0, X31, 0x178
	0x03A48B60 MOV X1, X31
	0x03A48B64 BL 0x3C589A8
	0x03A48B68 STR W31, [X19 + 0x10]
	0x03A48B6C LDR X25, [X19 + 0x38]
	0x03A48B70 CBZ X25, 0x3A48C2C
	0x03A48B74 ADRP X20, 0x70C000
	0x03A48B78 LDR X20, [X20 + 0x10]
	0x03A48B7C MOV X22, X31
	0x03A48B80 MOVZ W23, 0x20
	0x03A48B84 ADRP X21, 0x99A000
	0x03A48B88 MOVZ W24, 0x1
	0x03A48B8C LDR X0, [X20]
	0x03A48B90 LDRSW X9, [X25 + 0x18]
	0x03A48B94 LDR W8, [X0 + 0xE0]
	0x03A48B98 CMP X22, X9
	0x03A48B9C B.GE 0x3A48C30
	0x03A48BA0 CBNZ W8, 0x3A48BA8
	0x03A48BA4 BL 0x1C16DFC
	0x03A48BA8 LDRB W8, [X21 + 0x1C4]
	0x03A48BAC CBNZ W8, 0x3A48BBC
	0x03A48BB0 MOV X0, X20
	0x03A48BB4 BL 0x1C16CF4
	0x03A48BB8 STRB W24, [X21 + 0x1C4]
	0x03A48BBC LDR X0, [X20]
	0x03A48BC0 LDR W8, [X0 + 0xE0]
	0x03A48BC4 CBNZ W8, 0x3A48BD0
	0x03A48BC8 BL 0x1C16DFC
	0x03A48BCC LDR X0, [X20]
	0x03A48BD0 LDR X8, [X0 + 0xB8]
	0x03A48BD4 ADD X0, X31, 0x28
	0x03A48BD8 MOVZ W2, 0x78
	0x03A48BDC ADD X1, X8, 0x8
	0x03A48BE0 BL 0x3EB1AC0
	0x03A48BE4 LDR W8, [X25 + 0x18]
	0x03A48BE8 CMP X22, X8
	0x03A48BEC B.CS 0x3A48E88
	0x03A48BF0 ADD X0, X25, X23
	0x03A48BF4 ADD X1, X31, 0x28
	0x03A48BF8 MOVZ W2, 0x78
	0x03A48BFC BL 0x3EB1AC0
	0x03A48C00 LDR X8, [X19 + 0xB8]
	0x03A48C04 CBZ X8, 0x3A48E8C
	0x03A48C08 LDR W9, [X8 + 0x18]
	0x03A48C0C CMP X22, X9
	0x03A48C10 B.CS 0x3A48E84
	0x03A48C14 ADD X8, X8, X22
	0x03A48C18 STRB W31, [X8 + 0x20]
	0x03A48C1C LDR X25, [X19 + 0x38]
	0x03A48C20 ADD X22, X22, 0x1
	0x03A48C24 ADD X23, X23, 0x78
	0x03A48C28 CBNZ X25, 0x3A48B8C
	0x03A48C2C BL 0x1C16F20
	0x03A48C30 CBNZ W8, 0x3A48C38
	0x03A48C34 BL 0x1C16DFC
	0x03A48C38 LDRB W8, [X21 + 0x1C4]
	0x03A48C3C CBNZ W8, 0x3A48C54
	0x03A48C40 ADRP X0, 0x70C000
	0x03A48C44 LDR X0, [X0 + 0x10]
	0x03A48C48 BL 0x1C16CF4
	0x03A48C4C MOVZ W8, 0x1
	0x03A48C50 STRB W8, [X21 + 0x1C4]
	0x03A48C54 LDR X0, [X20]
	0x03A48C58 LDR W8, [X0 + 0xE0]
	0x03A48C5C CBNZ W8, 0x3A48C68
	0x03A48C60 BL 0x1C16DFC
	0x03A48C64 LDR X0, [X20]
	0x03A48C68 LDR X8, [X0 + 0xB8]
	0x03A48C6C ADD X0, X19, 0x40
	0x03A48C70 MOVZ W2, 0x78
	0x03A48C74 ADD X1, X8, 0x8
	0x03A48C78 BL 0x3EB1B30
	0x03A48C7C ADD X0, X31, 0x170
	0x03A48C80 MOV X1, X31
	0x03A48C84 BL 0x39B1DB4
	0x03A48C88 LDP X20, X19, [X31 + 0x1D0]
	0x03A48C8C LDP X22, X21, [X31 + 0x1C0]
	0x03A48C90 LDP X24, X23, [X31 + 0x1B0]
	0x03A48C94 LDP X26, X25, [X31 + 0x1A0]
	0x03A48C98 LDP X28, X27, [X31 + 0x190]
	0x03A48C9C LDP X29, X30, [X31 + 0x180]
	0x03A48CA0 ADD X31, X31, 0x1E0
	0x03A48CA4 RET
	0x03A48CA8 LDR X0, [X19 + 0x100]
	0x03A48CAC CBZ X0, 0x3A48ED4
	0x03A48CB0 ADRP X20, 0x70C000
	0x03A48CB4 LDR X20, [X20 + 0x910]
	0x03A48CB8 ADD X29, X19, 0x10
	0x03A48CBC LDR W1, [X29]
	0x03A48CC0 LDR X2, [X20]
	0x03A48CC4 BL 0x301BCCC
	0x03A48CC8 MOV X25, X0
	0x03A48CCC LDR X0, [X19 + 0x100]
	0x03A48CD0 CBZ X0, 0x3A48ED8
	0x03A48CD4 LDR X2, [X20]
	0x03A48CD8 MOV W1, W22
	0x03A48CDC BL 0x301BCCC
	0x03A48CE0 MOV X26, X0
	0x03A48CE4 LDR X0, [X24]
	0x03A48CE8 LDR W8, [X0 + 0xE0]
	0x03A48CEC CBNZ W8, 0x3A48CF4
	0x03A48CF0 BL 0x1C16DFC
	0x03A48CF4 MOV X0, X25
	0x03A48CF8 MOV X1, X26
	0x03A48CFC BL 0x3A491D4
	0x03A48D00 TBZ X0, 0x0, 0x3A48D98
	0x03A48D04 LDR X0, [X19 + 0x100]
	0x03A48D08 CBZ X0, 0x3A48EDC
	0x03A48D0C LDR X2, [X20]
	0x03A48D10 MOV W1, W22
	0x03A48D14 BL 0x301BCCC
	0x03A48D18 MOV X25, X0
	0x03A48D1C LDR X0, [X24]
	0x03A48D20 LDR W8, [X0 + 0xE0]
	0x03A48D24 CBNZ W8, 0x3A48D2C
	0x03A48D28 BL 0x1C16DFC
	0x03A48D2C MOV X0, X25
	0x03A48D30 BL 0x3A474C8
	0x03A48D34 TBZ X0, 0x0, 0x3A48A9C
	0x03A48D38 ADRP X8, 0x708000
	0x03A48D3C LDR X8, [X8 + 0xC80]
	0x03A48D40 LDR X0, [X8]
	0x03A48D44 LDR W8, [X0 + 0xE0]
	0x03A48D48 CBNZ W8, 0x3A48D50
	0x03A48D4C BL 0x1C16DFC
	0x03A48D50 ADD X0, X31, 0x178
	0x03A48D54 MOV X1, X31
	0x03A48D58 BL 0x3C58930
	0x03A48D5C LDR X0, [X19 + 0x100]
	0x03A48D60 CBZ X0, 0x3A48EE4
	0x03A48D64 LDP X25, X26, [X31 + 0x150]
	0x03A48D68 LDR X2, [X20]
	0x03A48D6C MOV W1, W22
	0x03A48D70 BL 0x301BCCC
	0x03A48D74 CBZ X0, 0x3A48EEC
	0x03A48D78 LDP X3, X4, [X0 + 0x58]
	0x03A48D7C ADD X0, X31, 0x178
	0x03A48D80 MOV X1, X25
	0x03A48D84 MOV X2, X26
	0x03A48D88 MOV W5, W31
	0x03A48D8C MOV X6, X31
	0x03A48D90 BL 0x3C58744
	0x03A48D94 B 0x3A48A98
	0x03A48D98 ADRP X8, 0x708000
	0x03A48D9C LDR X8, [X8 + 0xC80]
	0x03A48DA0 LDR X0, [X8]
	0x03A48DA4 LDR W8, [X0 + 0xE0]
	0x03A48DA8 CBNZ W8, 0x3A48DB0
	0x03A48DAC BL 0x1C16DFC
	0x03A48DB0 ADD X0, X31, 0x178
	0x03A48DB4 MOV X1, X31
	0x03A48DB8 BL 0x3C58930
	0x03A48DBC LDR X0, [X19 + 0x100]
	0x03A48DC0 CBZ X0, 0x3A48EE0
	0x03A48DC4 LDR X2, [X20]
	0x03A48DC8 MOV W1, W22
	0x03A48DCC BL 0x301BCCC
	0x03A48DD0 MOV X25, X0
	0x03A48DD4 LDR X0, [X24]
	0x03A48DD8 LDR W8, [X0 + 0xE0]
	0x03A48DDC CBNZ W8, 0x3A48DE4
	0x03A48DE0 BL 0x1C16DFC
	0x03A48DE4 MOV X0, X25
	0x03A48DE8 BL 0x3A474C8
	0x03A48DEC LDP X25, X26, [X31 + 0x150]
	0x03A48DF0 TBZ X0, 0x0, 0x3A48E50
	0x03A48DF4 LDR X0, [X19 + 0x100]
	0x03A48DF8 CBZ X0, 0x3A48EE8
	0x03A48DFC LDR X2, [X20]
	0x03A48E00 MOV W1, W22
	0x03A48E04 BL 0x301BCCC
	0x03A48E08 CBZ X0, 0x3A48EF0
	0x03A48E0C ADRP X8, 0x708000
	0x03A48E10 LDR X8, [X8 + 0xC80]
	0x03A48E14 LDP X28, X27, [X0 + 0x58]
	0x03A48E18 LDR X8, [X8]
	0x03A48E1C LDR W9, [X8 + 0xE0]
	0x03A48E20 CBNZ W9, 0x3A48E2C
	0x03A48E24 MOV X0, X8
	0x03A48E28 BL 0x1C16DFC
	0x03A48E2C ADD X0, X31, 0x178
	0x03A48E30 MOV X1, X25
	0x03A48E34 MOV X2, X26
	0x03A48E38 MOV X3, X28
	0x03A48E3C MOV X4, X27
	0x03A48E40 MOV W5, W31
	0x03A48E44 MOV X6, X31
	0x03A48E48 BL 0x3C58744
	0x03A48E4C B 0x3A48A98
	0x03A48E50 ADRP X8, 0x708000
	0x03A48E54 LDR X8, [X8 + 0xC80]
	0x03A48E58 LDR X0, [X8]
	0x03A48E5C LDR W8, [X0 + 0xE0]
	0x03A48E60 CBNZ W8, 0x3A48E68
	0x03A48E64 BL 0x1C16DFC
	0x03A48E68 ADD X0, X31, 0x178
	0x03A48E6C MOV X1, X25
	0x03A48E70 MOV X2, X26
	0x03A48E74 MOV W3, W31
	0x03A48E78 MOV X4, X31
	0x03A48E7C BL 0x3C58850
	0x03A48E80 B 0x3A48A98
	0x03A48E84 BL 0x1C16F28
	0x03A48E88 BL 0x1C16F28
	0x03A48E8C BL 0x1C16F20
	0x03A48E90 BL 0x1C16F20
	0x03A48E94 BL 0x1C16F28
	0x03A48E98 BL 0x1C16F20
	0x03A48E9C BL 0x1C16F20
	0x03A48EA0 BL 0x1C16F28
	0x03A48EA4 BL 0x1C16F20
	0x03A48EA8 BL 0x1C16F20
	0x03A48EAC BL 0x1C16F20
	0x03A48EB0 BL 0x1C16F20
	0x03A48EB4 BL 0x1C16F20
	0x03A48EB8 BL 0x1C16F20
	0x03A48EBC BL 0x1C16F20
	0x03A48EC0 BL 0x1C16F28
	0x03A48EC4 BL 0x1C16F20
	0x03A48EC8 BL 0x1C16F28
	0x03A48ECC BL 0x1C16F20
	0x03A48ED0 BL 0x1C16F20
	0x03A48ED4 BL 0x1C16F20
	0x03A48ED8 BL 0x1C16F20
	0x03A48EDC BL 0x1C16F20
	0x03A48EE0 BL 0x1C16F20
	0x03A48EE4 BL 0x1C16F20
	0x03A48EE8 BL 0x1C16F20
	0x03A48EEC BL 0x1C16F20
	0x03A48EF0 BL 0x1C16F20
	0x03A48EF4 B 0x3A48FE4
	0x03A48EF8 B 0x3A48FE4
	0x03A48EFC B 0x3A48FE4
	0x03A48F00 B 0x3A48FE4
	0x03A48F04 B 0x3A48FE4
	0x03A48F08 B 0x3A48FE4
	0x03A48F0C B 0x3A48FE4
	0x03A48F10 B 0x3A48FE4
	0x03A48F14 B 0x3A48FE4
	0x03A48F18 B 0x3A48FE4
	0x03A48F1C B 0x3A48FE4
	0x03A48F20 B 0x3A48FE4
	0x03A48F24 B 0x3A48FE4
	0x03A48F28 B 0x3A48FE4
	0x03A48F2C B 0x3A48FE4
	0x03A48F30 B 0x3A48FE4
	0x03A48F34 B 0x3A48FE4
	0x03A48F38 B 0x3A48FE4
	0x03A48F3C B 0x3A48FE4
	0x03A48F40 B 0x3A48FE4
	0x03A48F44 B 0x3A48FE4
	0x03A48F48 B 0x3A48FE4
	0x03A48F4C B 0x3A48FE4
	0x03A48F50 B 0x3A48FE4
	0x03A48F54 B 0x3A48FE4
	0x03A48F58 B 0x3A48FE4
	0x03A48F5C B 0x3A48FE4
	0x03A48F60 B 0x3A48FE4
	0x03A48F64 B 0x3A48FE4
	0x03A48F68 B 0x3A48FE4
	0x03A48F6C B 0x3A48FE4
	0x03A48F70 B 0x3A48FE4
	0x03A48F74 B 0x3A48FE4
	0x03A48F78 B 0x3A48FE4
	0x03A48F7C B 0x3A48FE4
	0x03A48F80 B 0x3A48FE4
	0x03A48F84 B 0x3A48FE4
	0x03A48F88 B 0x3A48FE4
	0x03A48F8C B 0x3A48FE4
	0x03A48F90 B 0x3A48FE4
	0x03A48F94 B 0x3A48FE4
	0x03A48F98 B 0x3A48FE4
	0x03A48F9C B 0x3A48FE4
	0x03A48FA0 B 0x3A48FE4
	0x03A48FA4 B 0x3A48FE4
	0x03A48FA8 B 0x3A48FE4
	0x03A48FAC B 0x3A48FE4
	0x03A48FB0 B 0x3A48FE4
	0x03A48FB4 B 0x3A48FE4
	0x03A48FB8 B 0x3A48FE4
	0x03A48FBC B 0x3A48FE4
	0x03A48FC0 B 0x3A48FE4
	0x03A48FC4 B 0x3A48FE4
	0x03A48FC8 B 0x3A48FE4
	0x03A48FCC B 0x3A48FE4
	0x03A48FD0 B 0x3A48FE4
	0x03A48FD4 B 0x3A48FE4
	0x03A48FD8 B 0x3A48FE4
	0x03A48FDC B 0x3A48FE4
	0x03A48FE0 B 0x3A48FE4
	0x03A48FE4 MOV X19, X0
	0x03A48FE8 CMP W1, 0x1
	0x03A48FEC B.NE 0x3A49018
	0x03A48FF0 MOV X0, X19
	0x03A48FF4 BL 0x3EB1AD0
	0x03A48FF8 LDR X20, [X0]
	0x03A48FFC BL 0x3EB1AE0
	0x03A49000 ADD X0, X31, 0x170
	0x03A49004 MOV X1, X31
	0x03A49008 BL 0x39B1DB4
	0x03A4900C CBZ X20, 0x3A48C88
	0x03A49010 MOV X0, X20
	0x03A49014 BL 0x1C16F18
	0x03A49018 MOV X20, X31
	0x03A4901C B 0x3A49024
	0x03A49020 MOV X19, X0
	0x03A49024 ADD X0, X31, 0x170
	0x03A49028 MOV X1, X31
	0x03A4902C BL 0x39B1DB4
	0x03A49030 CBNZ X20, 0x3A4903C
	0x03A49034 MOV X0, X19
	0x03A49038 BL 0x1D2C690
	0x03A4903C MOV X0, X20
	0x03A49040 BL 0x1C16F18
	0x03A49044 BL 0x1990590
	0x03A49048 SUB X31, X31, 0x70
	0x03A4904C STP X30, X23, [X31 + 0x40]
	0x03A49050 STP X22, X21, [X31 + 0x50]
	0x03A49054 STP X20, X19, [X31 + 0x60]
	0x03A49058 ADRP X20, 0x999000
	0x03A4905C LDRB W8, [X20 + 0x189]
	0x03A49060 MOV X19, X0
	0x03A49064 TBNZ X8, 0x0, 0x3A490A0
	0x03A49068 ADRP X0, 0x70C000
	0x03A4906C LDR X0, [X0 + 0xDA0]
	0x03A49070 BL 0x1C16CF4
	0x03A49074 ADRP X0, 0x70C000
	0x03A49078 LDR X0, [X0 + 0xDA8]
	0x03A4907C BL 0x1C16CF4
	0x03A49080 ADRP X0, 0x70C000
	0x03A49084 LDR X0, [X0 + 0xDB0]
	0x03A49088 BL 0x1C16CF4
	0x03A4908C ADRP X0, 0x70C000
	0x03A49090 LDR X0, [X0 + 0xDB8]
	0x03A49094 BL 0x1C16CF4
	0x03A49098 MOVZ W8, 0x1
	0x03A4909C STRB W8, [X20 + 0x189]
	0x03A490A0 STP X31, X31, [X31 + 0x20]
	0x03A490A4 STR X31, [X31 + 0x30]
	0x03A490A8 CBZ X19, 0x3A49168
	0x03A490AC ADRP X8, 0x70C000
	0x03A490B0 LDR X8, [X8 + 0xDB8]
	0x03A490B4 ADRP X21, 0x70C000
	0x03A490B8 ADRP X20, 0x70C000
	0x03A490BC ADD X0, X19, 0x48
	0x03A490C0 LDR X1, [X8]
	0x03A490C4 LDR X21, [X21 + 0xDA8]
	0x03A490C8 LDR X20, [X20 + 0xDA0]
	0x03A490CC ADD X8, X31, 0x8
	0x03A490D0 BL 0x23D5DB4
	0x03A490D4 LDUR V0, [X31 + 0x8]
	0x03A490D8 LDR X10, [X31 + 0x18]
	0x03A490DC LDR X8, [X21]
	0x03A490E0 MOV W19, W31
	0x03A490E4 STR V0, [X31 + 0x2]
	0x03A490E8 LDR W9, [X31 + 0x28]
	0x03A490EC ADD W22, W10, 0x1
	0x03A490F0 STR X10, [X31 + 0x30]
	0x03A490F4 STR W22, [X31 + 0x30]
	0x03A490F8 CMP W22, W9
	0x03A490FC B.GE 0x3A49140
	0x03A49100 LDR X0, [X8 + 0x20]
	0x03A49104 LDR X23, [X31 + 0x20]
	0x03A49108 MOV W10, W22
	0x03A4910C LDRB W11, [X0 + 0x135]
	0x03A49110 TBNZ X11, 0x0, 0x3A49124
	0x03A49114 BL 0x1C5C684
	0x03A49118 LDR X8, [X21]
	0x03A4911C LDR W10, [X31 + 0x30]
	0x03A49120 LDR W9, [X31 + 0x28]
	0x03A49124 LDR W11, [X23, W22, SXTW]
	0x03A49128 ADD W22, W10, 0x1
	0x03A4912C CMP W22, W9
	0x03A49130 ORN W10, W31, W11, 0x0
	0x03A49134 ADD W19, W19, W10, 0x1F, LSR
	0x03A49138 STP W22, W11, [X31 + 0x30]
	0x03A4913C B.LT 0x3A49100
	0x03A49140 LDR X1, [X20]
	0x03A49144 ADD X0, X31, 0x20
	0x03A49148 STR W31, [X31 + 0x34]
	0x03A4914C BL 0x2BBDF5C
	0x03A49150 MOV W0, W19
	0x03A49154 LDP X20, X19, [X31 + 0x60]
	0x03A49158 LDP X22, X21, [X31 + 0x50]
	0x03A4915C LDP X30, X23, [X31 + 0x40]
	0x03A49160 ADD X31, X31, 0x70
	0x03A49164 RET
	0x03A49168 BL 0x1C16F20
	0x03A4916C MOV X22, X20
	0x03A49170 CMP W1, 0x1
	0x03A49174 MOV X21, X0
	0x03A49178 B.NE 0x3A491A4
	0x03A4917C MOV X0, X21
	0x03A49180 BL 0x3EB1AD0
	0x03A49184 LDR X20, [X0]
	0x03A49188 BL 0x3EB1AE0
	0x03A4918C LDR X1, [X22]
	0x03A49190 ADD X0, X31, 0x20
	0x03A49194 BL 0x2BBDF5C
	0x03A49198 CBZ X20, 0x3A49150
	0x03A4919C MOV X0, X20
	0x03A491A0 BL 0x1C16F18
	0x03A491A4 MOV X20, X31
	0x03A491A8 B 0x3A491B0
	0x03A491AC MOV X21, X0
	0x03A491B0 LDR X1, [X22]
	0x03A491B4 ADD X0, X31, 0x20
	0x03A491B8 BL 0x2BBDF5C
	0x03A491BC CBNZ X20, 0x3A491C8
	0x03A491C0 MOV X0, X21
	0x03A491C4 BL 0x1D2C690
	0x03A491C8 MOV X0, X20
	0x03A491CC BL 0x1C16F18
	0x03A491D0 BL 0x1990590
	0x03A491D4 STR X30, [X31 - 0x30]!
	0x03A491D8 STP X22, X21, [X31 + 0x10]
	0x03A491DC STP X20, X19, [X31 + 0x20]
	0x03A491E0 ADRP X21, 0x999000
	0x03A491E4 ADRP X22, 0x70B000
	0x03A491E8 LDRB W8, [X21 + 0x18A]
	0x03A491EC LDR X22, [X22 + 0x8C8]
	0x03A491F0 MOV X19, X1
	0x03A491F4 MOV X20, X0
	0x03A491F8 TBNZ X8, 0x0, 0x3A49210
	0x03A491FC ADRP X0, 0x70B000
	0x03A49200 LDR X0, [X0 + 0x8C8]
	0x03A49204 BL 0x1C16CF4
	0x03A49208 MOVZ W8, 0x1
	0x03A4920C STRB W8, [X21 + 0x18A]
	0x03A49210 LDR X0, [X22]
	0x03A49214 LDR W8, [X0 + 0xE0]
	0x03A49218 CBNZ W8, 0x3A49220
	0x03A4921C BL 0x1C16DFC
	0x03A49220 MOV X0, X20
	0x03A49224 BL 0x3A49048
	0x03A49228 MOV W21, W0
	0x03A4922C MOV X0, X19
	0x03A49230 BL 0x3A49048
	0x03A49234 CMP W0, W21
	0x03A49238 B.LS 0x3A49244
	0x03A4923C MOV W0, W31
	0x03A49240 B 0x3A492B4
	0x03A49244 CBZ W0, 0x3A492A8
	0x03A49248 MOV X10, X31
	0x03A4924C MOV W8, W31
	0x03A49250 MOV W9, W0
	0x03A49254 MOV W11, W21
	0x03A49258 CBZ W21, 0x3A49294
	0x03A4925C CBZ X19, 0x3A492C4
	0x03A49260 CBZ X20, 0x3A492C4
	0x03A49264 LDR X13, [X19 + 0x48]
	0x03A49268 LDR X14, [X20 + 0x48]
	0x03A4926C MOV X12, X31
	0x03A49270 MOVZ W15, 0x1
	0x03A49274 LDR W13, [X13, X10, LSL #2]
	0x03A49278 LDR W16, [X14, X12, LSL #2]
	0x03A4927C SXTW X12, W15
	0x03A49280 ADD W15, W15, 0x1
	0x03A49284 CMP W13, W16
	0x03A49288 CINC W8, W8, EQ
	0x03A4928C CMP X12, X11
	0x03A49290 B.LT 0x3A49278
	0x03A49294 ADD W10, W10, 0x1
	0x03A49298 SXTW X10, W10
	0x03A4929C CMP X10, X9
	0x03A492A0 B.LT 0x3A49258
	0x03A492A4 B 0x3A492AC
	0x03A492A8 MOV W8, W31
	0x03A492AC CMP W8, W0
	0x03A492B0 CSET W0, EQ
	0x03A492B4 LDP X20, X19, [X31 + 0x20]
	0x03A492B8 LDP X22, X21, [X31 + 0x10]
	0x03A492BC LDR X30, [X31], #0x30
	0x03A492C0 RET
	0x03A492C4 BL 0x1C16F20
	0x03A492C8 STR X30, [X31 - 0x10]!
	0x03A492CC CBZ X0, 0x3A4930C
	0x03A492D0 LDR X8, [X0 + 0x88]
	0x03A492D4 CBZ X8, 0x3A4930C
	0x03A492D8 LDR W0, [X8 + 0x18]
	0x03A492DC CMP W0, 0x8
	0x03A492E0 B.NE 0x3A49304
	0x03A492E4 MOV X0, X31
	0x03A492E8 ADD X8, X8, 0x20
	0x03A492EC LDR X9, [X8, X0, LSL #3]
	0x03A492F0 CBZ X9, 0x3A49304
	0x03A492F4 ADD X0, X0, 0x1
	0x03A492F8 CMP W0, 0x8
	0x03A492FC B.NE 0x3A492EC
	0x03A49300 MOVZ W0, 0x8
	0x03A49304 LDR X30, [X31], #0x10
	0x03A49308 RET
	0x03A4930C BL 0x1C16F20
	0x03A49310 STR X29, [X31 - 0x50]!
	0x03A49314 STP X30, X25, [X31 + 0x10]
	0x03A49318 STP X24, X23, [X31 + 0x20]
	0x03A4931C STP X22, X21, [X31 + 0x30]
	0x03A49320 STP X20, X19, [X31 + 0x40]
	0x03A49324 SUB X31, X31, 0x1E0
	0x03A49328 ADRP X20, 0x999000
	0x03A4932C LDRB W8, [X20 + 0x18B]
	0x03A49330 MOV X19, X0
	0x03A49334 TBNZ X8, 0x0, 0x3A4934C
	0x03A49338 ADRP X0, 0x70B000
	0x03A4933C LDR X0, [X0 + 0x10]
	0x03A49340 BL 0x1C16CF4
	0x03A49344 MOVZ W8, 0x1
	0x03A49348 STRB W8, [X20 + 0x18B]
	0x03A4934C CBZ X19, 0x3A49430
	0x03A49350 LDR X8, [X19 + 0x18]
	0x03A49354 CMP W8, 0x1
	0x03A49358 B.LT 0x3A49430
	0x03A4935C ADRP X22, 0x70B000
	0x03A49360 LDR X22, [X22 + 0x10]
	0x03A49364 MOV X23, X31
	0x03A49368 MOV W20, W31
	0x03A4936C AND X8, X8, 0x0
	0x03A49370 ADD X21, X19, 0x20
	0x03A49374 ADRP X24, 0x999000
	0x03A49378 MOVZ W25, 0x1
	0x03A4937C CMP X23, W8, UXTW
	0x03A49380 B.CS 0x3A49454
	0x03A49384 ADD X0, X31, 0x168
	0x03A49388 MOVZ W2, 0x78
	0x03A4938C MOV X1, X21
	0x03A49390 BL 0x3EB1AC0
	0x03A49394 LDR X0, [X22]
	0x03A49398 LDR W8, [X0 + 0xE0]
	0x03A4939C CBNZ W8, 0x3A493A4
	0x03A493A0 BL 0x1C16DFC
	0x03A493A4 LDRB W8, [X24 + 0x1C4]
	0x03A493A8 CBNZ W8, 0x3A493B8
	0x03A493AC MOV X0, X22
	0x03A493B0 BL 0x1C16CF4
	0x03A493B4 STRB W25, [X24 + 0x1C4]
	0x03A493B8 LDR X0, [X22]
	0x03A493BC LDR W8, [X0 + 0xE0]
	0x03A493C0 CBNZ W8, 0x3A493CC
	0x03A493C4 BL 0x1C16DFC
	0x03A493C8 LDR X0, [X22]
	0x03A493CC LDR X8, [X0 + 0xB8]
	0x03A493D0 ADD X0, X31, 0xF0
	0x03A493D4 MOVZ W2, 0x78
	0x03A493D8 ADD X1, X8, 0x8
	0x03A493DC BL 0x3EB1AC0
	0x03A493E0 ADD X0, X31, 0x78
	0x03A493E4 ADD X1, X31, 0x168
	0x03A493E8 MOVZ W2, 0x78
	0x03A493EC BL 0x3EB1AC0
	0x03A493F0 ADD X0, X31, 0x0
	0x03A493F4 ADD X1, X31, 0xF0
	0x03A493F8 MOVZ W2, 0x78
	0x03A493FC BL 0x3EB1AC0
	0x03A49400 ADD X0, X31, 0x78
	0x03A49404 ADD X1, X31, 0x0
	0x03A49408 MOV X2, X31
	0x03A4940C BL 0x3C50B8C
	0x03A49410 LDR W8, [X19 + 0x18]
	0x03A49414 AND W9, W0, 0x1
	0x03A49418 ADD X23, X23, 0x1
	0x03A4941C ADD W20, W20, W9
	0x03A49420 CMP X23, W8, SXTW
	0x03A49424 ADD X21, X21, 0x78
	0x03A49428 B.LT 0x3A4937C
	0x03A4942C B 0x3A49434
	0x03A49430 MOV W20, W31
	0x03A49434 MOV W0, W20
	0x03A49438 ADD X31, X31, 0x1E0

ISIL:
	001 Move [X31-128], D11
	002 Move [X31-120], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X29
	006 Move [X31+40], X30
	007 Move [X31+48], X28
	008 Move [X31+56], X27
	009 Move [X31+64], X26
	010 Move [X31+72], X25
	011 Move [X31+80], X24
	012 Move [X31+88], X23
	013 Move [X31+96], X22
	014 Move [X31+104], X21
	015 Move [X31+112], X20
	016 Move [X31+120], X19
	017 Subtract X31, X31, 1296
	018 Move [X31+32], X4
	019 Move [X31+56], X3
	020 Move [X31+72], X0
	021 Move X22, 0x99B000
	022 Move X21, 0x70E000
	023 Move W8, [X22+390]
	024 Move X21, [X21+3376]
	025 Move V8, V3
	026 Move V9, V2
	027 Move V10, V1
	028 Move V11, V0
	029 Move W19, W5
	030 Move X24, X2
	031 Move X20, X1
	032 Move TEMP, X8
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfEqual {71}
	036 Move X0, 0x70E000
	037 Move X0, [X0+3440]
	038 Call 0x1C17CF4
	039 Move X0, 0x70E000
	040 Move X0, [X0+3432]
	041 Call 0x1C17CF4
	042 Move X0, 0x70E000
	043 Move X0, [X0+3448]
	044 Call 0x1C17CF4
	045 Move X0, 0x706000
	046 Move X0, [X0+2728]
	047 Call 0x1C17CF4
	048 Move X0, 0x6B0000
	049 Move X0, [X0+712]
	050 Call 0x1C17CF4
	051 Move X0, 0x70D000
	052 Move X0, [X0+2320]
	053 Call 0x1C17CF4
	054 Move X0, 0x6AC000
	055 Move X0, [X0+1432]
	056 Call 0x1C17CF4
	057 Move X0, 0x70E000
	058 Move X0, [X0+3376]
	059 Call 0x1C17CF4
	060 Move X0, 0x70D000
	061 Move X0, [X0+16]
	062 Call 0x1C17CF4
	063 Move X0, 0x70D000
	064 Move X0, [X0+2248]
	065 Call 0x1C17CF4
	066 Move X0, 0x6D5000
	067 Move X0, [X0+2216]
	068 Call 0x1C17CF4
	069 Move W8, 1
	070 Move [X22+390], W8
	071 Move X0, [X21]
	072 NotImplemented "Instruction MOVI not yet implemented."
	073 Move [X31+1288], W31
	074 Move [X31+1280], X31
	075 Move [X31+1152], X31
	076 Move [X31+1104], W31
	077 Move [X31+1040], X31
	078 Move [X31+79], V0
	079 Move [X31+78], V0
	080 Move [X31+77], V0
	081 Move [X31+76], V0
	082 Move [X31+75], V0
	083 Move [X31+74], V0
	084 Move [X31+73], V0
	085 Move [X31+71], V0
	086 Move [X31+70], V0
	087 Move [X31+68], V0
	088 Move [X31+67], V0
	089 Move [X31+66], V0
	090 Move [X31+1008], V0
	091 Move [X31+1016], V0
	092 Move [X31+992], X31
	093 Move [X31+960], V0
	094 Move [X31+968], V0
	095 Move W8, [X0+224]
	096 Compare W8, 0
	097 JumpIfNotEqual {100}
	098 Call 0x1C17DFC
	099 Move X0, [X21]
	100 Move X8, [X0+184]
	101 Add X0, X31, 1288
	102 Move X1, X31
	103 Move X3, X31
	104 Move X2, [X8+8]
	105 Call ProfilingScope..ctor, X0, X1, X2
	106 Compare X20, 0
	107 JumpIfEqual {785}
	108 Move X8, [X31+72]
	109 Move X8, [X8+40]
	110 Compare X8, 0
	111 JumpIfEqual {786}
	112 NotImplemented "Instruction LDRSW not yet implemented."
	113 Move W9, [X8+24]
	114 NotImplemented "Instruction CMP not yet implemented."
	115 Move X9, [X31+72]
	116 Move X0, [X9+24]
	117 Compare X0, 0
	118 JumpIfEqual {788}
	119 Move X9, 0x70E000
	120 Move X9, [X9+3432]
	121 Add X8, X8, X20
	122 Move X21, [X8+32]
	123 Move X22, [X8+40]
	124 Move X3, [X9]
	125 Move X1, X21
	126 Move X2, X22
	127 Call Dictionary`2<Hash128, Object>.get_Item, X0, X1
	128 Move [X31+16], X22
	129 Move [X31+24], X21
	130 Move X8, 0x706000
	131 Move X8, [X8+2728]
	132 Move X29, X0
	133 Move X1, [X8]
	134 Call Enumerable.First, X0
	135 NotImplemented "Instruction CMP not yet implemented."
	136 Move X8, [X31+72]
	137 Move X0, [X8+48]
	138 Compare X0, 0
	139 JumpIfEqual {789}
	140 Move X8, 0x70E000
	141 Move X8, [X8+3448]
	142 Move X4, [X8]
	143 Move X2, [X31+16]
	144 Move X1, [X31+24]
	145 Move W3, W31
	146 Call Dictionary`2<Hash128, Int32>.set_Item, X0, X1, X2
	147 Move X0, [X31+72]
	148 Move X1, X29
	149 Move X2, X24
	150 Call ScriptableRenderer.UpdateFinalStoreActions, X0, X1, X2
	151 Compare X29, 0
	152 JumpIfEqual {790}
	153 Move W8, [X29+24]
	154 NotImplemented "Instruction CMP not yet implemented."
	155 Move X9, [X31+56]
	156 Move W21, W31
	157 Move TEMP, 0
	158 Not TEMP
	159 Move W22, TEMP
	160 Move [X31+52], W31
	161 Add X26, X9, 40
	162 Move X9, [X31+72]
	163 Move [X31+12], W19
	164 Move [X31+40], X24
	165 Add X23, X9, 64
	166 Move X9, [X31+32]
	167 Add X27, X9, 40
	168 NotImplemented "Instruction CMP not yet implemented."
	169 Add X8, X29, W21
	170 Move W1, [X8+32]
	171 Add W31, W1, 1
	172 Move X8, [X31+72]
	173 Move X0, [X8+256]
	174 Compare X0, 0
	175 JumpIfEqual {767}
	176 Move X8, 0x70D000
	177 Move X8, [X8+2320]
	178 Move X28, X29
	179 Move X2, [X8]
	180 Call List`1<Object>.get_Item, X0, X1
	181 Move X29, X0
	182 Compare X0, 0
	183 JumpIfEqual {766}
	184 Move W8, [X29+80]
	185 NotImplemented "Instruction CMP not yet implemented."
	186 Move X8, [X29+72]
	187 Move X9, X31
	188 Move [X8], W22
	189 NotImplemented "Instruction LDRSW not yet implemented."
	190 Add X9, X9, 1
	191 NotImplemented "Instruction CMP not yet implemented."
	192 Move X8, 0x6AC000
	193 Move X8, [X8+1432]
	194 Move X20, [X24+208]
	195 Move X0, [X8]
	196 Move W8, [X0+224]
	197 Compare W8, 0
	198 JumpIfNotEqual {200}
	199 Call 0x1C17DFC
	200 Move X0, X20
	201 Move X1, X31
	202 Move X2, X31
	203 Call Object.op_Inequality, X0, X1
	204 Move W20, W0
	205 Move X0, X29
	206 Call ScriptableRenderPass.get_colorAttachmentHandle, X0
	207 Compare X0, 0
	208 JumpIfEqual {768}
	209 Move X0, [X0+24]
	210 Move X1, X31
	211 Move X2, X31
	212 Call Object.op_Inequality, X0, X1
	213 Move TEMP, X0
	214 And TEMP, TEMP, 1
	215 Compare TEMP, 1
	216 JumpIfNotEqual {236}
	217 Move X0, X29
	218 Call ScriptableRenderPass.get_colorAttachmentHandle, X0
	219 Compare X0, 0
	220 JumpIfEqual {777}
	221 Move X0, [X0+24]
	222 Compare X0, 0
	223 JumpIfEqual {776}
	224 Move X1, X31
	225 Call RenderTexture.get_graphicsFormat, X0
	226 NotImplemented "Instruction CMP not yet implemented."
	227 NotImplemented "Instruction CSET not yet implemented."
	228 Move [X31+68], W8
	229 Compare W0, 0
	230 JumpIfEqual {249}
	231 Xor W8, W20, 1
	232 Move TEMP, X8
	233 And TEMP, TEMP, 1
	234 Compare TEMP, 1
	235 JumpIfNotEqual {240}
	236 Move TEMP, X20
	237 And TEMP, TEMP, 1
	238 Compare TEMP, 1
	239 JumpIfNotEqual {248}
	240 Move X0, [X24+208]
	241 Compare X0, 0
	242 JumpIfEqual {778}
	243 Move X1, X31
	244 Call RenderTexture.get_graphicsFormat, X0
	245 NotImplemented "Instruction CMP not yet implemented."
	246 NotImplemented "Instruction CSET not yet implemented."
	247 Move [X31+68], W8
	248 Move [X31+68], W31
	249 Move X8, [X31+56]
	250 Compare X8, 0
	251 JumpIfEqual {769}
	252 Move V1, [X26]
	253 Move V0, [X26+16]
	254 Move X8, [X26+32]
	255 Move [X31+624], X31
	256 Move [X31+912], V1
	257 Move [X31+920], V0
	258 NotImplemented "Instruction MOVI not yet implemented."
	259 Move [X31+944], X8
	260 Move [X31+592], V0
	261 Move [X31+600], V0
	262 Add X0, X31, 592
	263 Add X1, X31, 912
	264 Move TEMP, 0
	265 Not TEMP
	266 Move W3, TEMP
	267 Move W2, W31
	268 Move W4, W31
	269 Move X5, X31
	270 Call RenderTargetIdentifier..ctor, X0, X1, X2, X3, X4
	271 Add X8, X31, 864
	272 Move W0, 2
	273 Move X1, X31
	274 Call RenderTargetIdentifier.op_Implicit, X0
	275 Move V0, [X31+864]
	276 Move V1, [X31+880]
	277 Move X8, [X31+896]
	278 Move V2, [X31+592]
	279 Move V3, [X31+608]
	280 Move X9, [X31+624]
	281 Move [X31+768], V0
	282 Move [X31+776], V1
	283 Move [X31+800], X8
	284 Move [X31+816], V2
	285 Move [X31+824], V3
	286 Move [X31+848], X9
	287 Add X0, X31, 816
	288 Add X1, X31, 768
	289 Move X2, X31
	290 Call RenderTargetIdentifier.op_Inequality, X0, X1
	291 Move TEMP, X0
	292 And TEMP, TEMP, 1
	293 Compare TEMP, 1
	294 JumpIfNotEqual {316}
	295 Move X8, [X31+56]
	296 Move X0, [X8+24]
	297 Move W8, [X31+68]
	298 Move TEMP, X8
	299 And TEMP, TEMP, 1
	300 Compare TEMP, 1
	301 JumpIfNotEqual {370}
	302 Compare X0, 0
	303 JumpIfEqual {784}
	304 Add X8, X31, 592
	305 Move X1, X31
	306 Call RenderTexture.get_descriptor, X0
	307 Move V1, [X31+592]
	308 Move V0, [X31+608]
	309 Move V2, [X31+39]
	310 Move W8, [X31+640]
	311 Move [X31+67], V0
	312 Move W1, [X31+1084]
	313 Move [X31+66], V1
	314 Move [X31+68], V2
	315 Move [X31+1104], W8
	316 Move X8, [X29+104]
	317 Compare X8, 0
	318 JumpIfEqual {774}
	319 Move W9, [X8+24]
	320 Compare W9, 0
	321 JumpIfEqual {773}
	322 Move W1, [X8+32]
	323 Compare W1, 0
	324 JumpIfNotEqual {353}
	325 Move X8, 0x6B0000
	326 Move X8, [X8+712]
	327 Move W19, [X24+365]
	328 Move W24, [X24+352]
	329 Move X0, [X8]
	330 Move W8, [X0+224]
	331 Compare W8, 0
	332 JumpIfNotEqual {334}
	333 Call 0x1C17DFC
	334 Move X0, X31
	335 Call Graphics.get_preserveFramebufferAlpha
	336 Move X8, 0x6D5000
	337 Move X8, [X8+2216]
	338 Move W25, W0
	339 Move X0, [X8]
	340 Move W8, [X0+224]
	341 Compare W8, 0
	342 JumpIfNotEqual {344}
	343 Call 0x1C17DFC
	344 NotImplemented "Instruction CMP not yet implemented."
	345 NotImplemented "Instruction CSET not yet implemented."
	346 And W2, W25, 1
	347 Move W1, W24
	348 Move X3, X31
	349 Call UniversalRenderPipeline.MakeRenderTextureGraphicsFormat, X0, X1, X2
	350 Move W1, W0
	351 Move W19, [X31+12]
	352 Move X24, [X31+40]
	353 Add X0, X31, 1168
	354 Move X2, X31
	355 Call AttachmentDescriptor..ctor, X0, X1
	356 Move X8, X24
	357 Move W24, [X24+224]
	358 Move TEMP, X20
	359 And TEMP, TEMP, 1
	360 Compare TEMP, 1
	361 JumpIfNotEqual {409}
	362 Move X1, [X8+208]
	363 NotImplemented "Instruction MOVI not yet implemented."
	364 Move [X31+624], X31
	365 Move [X31+592], V0
	366 Move [X31+600], V0
	367 Add X0, X31, 592
	368 Move X2, X31
	369 Call RenderTargetIdentifier..ctor, X0, X1
	370 Compare X0, 0
	371 JumpIfEqual {782}
	372 Add X8, X31, 592
	373 Move X1, X31
	374 Call RenderTexture.get_descriptor, X0
	375 Move V0, [X31+592]
	376 Move V1, [X31+608]
	377 Move V2, [X31+39]
	378 Move W8, [X31+640]
	379 Move [X31+66], V0
	380 Move [X31+67], V1
	381 Move [X31+68], V2
	382 Move [X31+1104], W8
	383 Add X0, X31, 1056
	384 Move X1, X31
	385 Call RenderTextureDescriptor.get_graphicsFormat, X0
	386 Move W1, W0
	387 Add X0, X31, 1168
	388 Move X2, X31
	389 Call AttachmentDescriptor..ctor, X0, X1
	390 Move X8, [X31+56]
	391 Move X0, [X8+24]
	392 Compare X0, 0
	393 JumpIfEqual {775}
	394 Add X8, X31, 592
	395 Move X1, X31
	396 Call RenderTexture.get_descriptor, X0
	397 Move V0, [X31+592]
	398 Move V1, [X31+608]
	399 Move V2, [X31+39]
	400 Move W8, [X31+640]
	401 Move [X31+66], V0
	402 Move [X31+67], V1
	403 Move [X31+68], V2
	404 Move [X31+1104], W8
	405 Move V0, [X26]
	406 Move V1, [X26+16]
	407 Move X8, [X26+32]
	408 Move W24, [X31+1064]
	409 Add X8, X31, 592
	410 Move W0, 2
	411 Move X1, X31
	412 Call RenderTargetIdentifier.op_Implicit, X0
	413 Move V0, [X31+592]
	414 Move V1, [X31+608]
	415 Move X8, [X31+624]
	416 Move [X31+1008], V0
	417 Move [X31+1016], V1
	418 Move V0, [X31+1008]
	419 Move V1, [X31+1024]
	420 Move [X31+1040], X8
	421 Move [X31+70], V0
	422 Move [X31+71], V1
	423 Move V0, [X31+70]
	424 Move V1, [X31+71]
	425 And W31, W19, 1
	426 Move [X31+1152], X8
	427 NotImplemented "Instruction CSET not yet implemented."
	428 Move [X31+720], V0
	429 Move [X31+728], V1
	430 Move [X31+752], X8
	431 Add X0, X31, 1168
	432 Add X1, X31, 720
	433 Move W3, 1
	434 Move X4, X31
	435 Call AttachmentDescriptor.ConfigureTarget, X0, X1, X2, X3
	436 Move X8, 0x70D000
	437 Move X8, [X8+2248]
	438 Move X0, [X8]
	439 Move W8, [X0+224]
	440 Compare W8, 0
	441 JumpIfNotEqual {443}
	442 Call 0x1C17DFC
	443 Move X0, X29
	444 Call ScriptableRenderer.PassHasInputAttachments, X0
	445 Move TEMP, X0
	446 And TEMP, TEMP, 1
	447 Compare TEMP, 1
	448 JumpIfNotEqual {452}
	449 Move X0, [X31+72]
	450 Move X1, X29
	451 Call ScriptableRenderer.SetupInputAttachmentIndices, X0, X1
	452 Move W0, 2
	453 Move X1, X31
	454 Call SystemInfo.GetGraphicsFormat, X0
	455 Move W1, W0
	456 NotImplemented "Instruction MOVI not yet implemented."
	457 Move [X31+704], X31
	458 Move [X31+672], V0
	459 Move [X31+680], V0
	460 Move [X31+640], V0
	461 Move [X31+648], V0
	462 Move [X31+608], V0
	463 Move [X31+616], V0
	464 Move [X31+37], V0
	465 Add X0, X31, 592
	466 Move X2, X31
	467 Call AttachmentDescriptor..ctor, X0, X1
	468 Add X1, X31, 592
	469 Move W2, 120
	470 Move X0, X23
	471 Call 0x3EB2AC0
	472 Move X8, [X31+32]
	473 Compare X8, 0
	474 JumpIfEqual {770}
	475 Move X8, [X27+32]
	476 Move V1, [X27]
	477 Move V0, [X27+16]
	478 Move [X31+896], X8
	479 Move [X31+864], V1
	480 Move [X31+872], V0
	481 Add X8, X31, 552
	482 Move W0, 2
	483 Move X1, X31
	484 Call RenderTargetIdentifier.op_Implicit, X0
	485 Add X8, X31, 552
	486 Move V0, [X8]
	487 Move V1, [X8+16]
	488 Move X8, [X31+584]
	489 Move V2, [X31+864]
	490 Move V3, [X31+880]
	491 Move X9, [X31+896]
	492 Move [X31+464], V0
	493 Move [X31+472], V1
	494 Move [X31+496], X8
	495 Move [X31+512], V2
	496 Move [X31+520], V3
	497 Move [X31+544], X9
	498 Add X0, X31, 512
	499 Add X1, X31, 464
	500 Move X2, X31
	501 Call RenderTargetIdentifier.op_Inequality, X0, X1
	502 Move TEMP, X0
	503 And TEMP, TEMP, 1
	504 Compare TEMP, 1
	505 JumpIfNotEqual {512}
	506 Move X8, [X27+32]
	507 Move V1, [X27]
	508 Move V0, [X27+16]
	509 Move [X31+992], X8
	510 Move [X31+960], V1
	511 Move [X31+968], V0
	512 Move TEMP, X20
	513 And TEMP, TEMP, 1
	514 Compare TEMP, 1
	515 JumpIfNotEqual {538}
	516 Move X8, [X31+40]
	517 Move X0, [X8+208]
	518 Compare X0, 0
	519 JumpIfEqual {783}
	520 Move X1, X31
	521 Call RenderTexture.get_depthBuffer, X0
	522 NotImplemented "Instruction MOVI not yet implemented."
	523 Move X2, X0
	524 Move X3, X1
	525 Move [X31+624], X31
	526 Move [X31+592], V0
	527 Move [X31+600], V0
	528 Add X0, X31, 592
	529 Move TEMP, 0
	530 Not TEMP
	531 Move W4, TEMP
	532 Move X1, X2
	533 Move X2, X3
	534 Move W3, W31
	535 Move W5, W31
	536 Move X6, X31
	537 Call RenderTargetIdentifier..ctor, X0, X1, X2, X3, X4
	538 Add X8, X31, 592
	539 Move W0, 3
	540 Move X1, X31
	541 Call RenderTargetIdentifier.op_Implicit, X0
	542 Move V0, [X31+592]
	543 Move V1, [X31+608]
	544 Move X8, [X31+624]
	545 Move [X31+960], V0
	546 Move [X31+968], V1
	547 Move [X31+992], X8
	548 Move V0, [X31+960]
	549 Move V1, [X31+976]
	550 Move X8, [X31+992]
	551 And W31, W19, 2
	552 NotImplemented "Instruction CSET not yet implemented."
	553 Move [X31+416], V0
	554 Move [X31+424], V1
	555 Move [X31+448], X8
	556 Add X1, X31, 416
	557 Move W3, 1
	558 Move X0, X23
	559 Move X4, X31
	560 Call AttachmentDescriptor.ConfigureTarget, X0, X1, X2, X3
	561 Compare W19, 0
	562 JumpIfEqual {596}
	563 Move W8, [X31+68]
	564 Xor W8, W8, 1
	565 Xor W8, W8, 1
	566 And W8, W19, W8
	567 Move TEMP, X8
	568 And TEMP, TEMP, 1
	569 Compare TEMP, 1
	570 JumpIfEqual {574}
	571 Move X8, [X31+40]
	572 Move W8, [X8+200]
	573 NotImplemented "Instruction CMP not yet implemented."
	574 Add X0, X31, 1168
	575 Move S4, 1
	576 Move V0, V11
	577 Move V1, V10
	578 Move V2, V9
	579 Move V3, V8
	580 Move W1, W31
	581 Move X2, X31
	582 Call AttachmentDescriptor.ConfigureClear, X0, X1, V0, X2
	583 Move TEMP, X19
	584 And TEMP, TEMP, 2
	585 Compare TEMP, 2
	586 JumpIfNotEqual {596}
	587 Move S0, W31
	588 Move S1, W31
	589 Move S2, W31
	590 Move S3, 1
	591 Move S4, 1
	592 Move X0, X23
	593 Move W1, W31
	594 Move X2, X31
	595 Call AttachmentDescriptor.ConfigureClear, X0, X1, V0, X2
	596 NotImplemented "Instruction CMP not yet implemented."
	597 Move V0, [X31+70]
	598 Move V1, [X31+71]
	599 Move X8, [X31+1152]
	600 Move [X31+368], V0
	601 Move [X31+376], V1
	602 Move [X31+400], X8
	603 Add X0, X31, 1168
	604 Add X1, X31, 368
	605 Move X2, X31
	606 Call AttachmentDescriptor.ConfigureResolveTarget, X0, X1
	607 Move X8, 0x70C000
	608 Move X8, [X8+16]
	609 Move X0, [X8]
	610 Move W8, [X0+224]
	611 Compare W8, 0
	612 JumpIfNotEqual {614}
	613 Call 0x1C17DFC
	614 Move X0, X31
	615 Call RenderingUtils.MultisampleDepthResolveSupported
	616 Move TEMP, X0
	617 And TEMP, TEMP, 1
	618 Compare TEMP, 1
	619 JumpIfNotEqual {635}
	620 Add X8, X31, 592
	621 Move X0, X23
	622 Move X1, X31
	623 Move X20, X23
	624 Call AttachmentDescriptor.get_loadStoreTarget, X0
	625 Move V0, [X31+592]
	626 Move V1, [X31+608]
	627 Move X8, [X31+624]
	628 Move [X31+320], V0
	629 Move [X31+328], V1
	630 Move [X31+352], X8
	631 Add X1, X31, 320
	632 Move X0, X20
	633 Move X2, X31
	634 Call AttachmentDescriptor.ConfigureResolveTarget, X0, X1
	635 Move X8, 0x70C000
	636 Move X8, [X8+2248]
	637 Move X20, [X8]
	638 Move W8, [X20+224]
	639 Compare W8, 0
	640 JumpIfNotEqual {646}
	641 Move X0, X20
	642 Call 0x1C17DFC
	643 Move X8, 0x70C000
	644 Move X8, [X8+2248]
	645 Move X20, [X8]
	646 Move X8, [X20+184]
	647 Move W8, [X8+8]
	648 Compare W8, 0
	649 JumpIfEqual {669}
	650 Move X8, [X31+72]
	651 Move X8, [X8+192]
	652 Compare X8, 0
	653 JumpIfEqual {772}
	654 Move W9, [X8+24]
	655 Compare W9, 0
	656 JumpIfEqual {771}
	657 Move W1, [X8+32]
	658 Add X0, X31, 1168
	659 Move X2, X31
	660 Call AttachmentDescriptor.set_storeAction, X0, X1
	661 Move X8, [X31+72]
	662 Move W1, [X8+200]
	663 Move X0, X23
	664 Move X2, X31
	665 Call AttachmentDescriptor.set_storeAction, X0, X1
	666 Move X8, 0x70C000
	667 Move X8, [X8+2248]
	668 Move X20, [X8]
	669 Add X0, X31, 592
	670 Add X1, X31, 1168
	671 Move W2, 120
	672 Call 0x3EB2AC0
	673 Move X9, [X31+72]
	674 Move W8, [X20+224]
	675 Move X24, [X9+56]
	676 Compare W8, 0
	677 JumpIfNotEqual {680}
	678 Move X0, X20
	679 Call 0x1C17DFC
	680 Add X0, X31, 200
	681 Add X1, X31, 592
	682 Move W2, 120
	683 Call 0x3EB2AC0
	684 Move W0, [X31+52]
	685 Add X1, X31, 200
	686 Move X2, X24
	687 Call ScriptableRenderer.FindAttachmentDescriptorIndexInList, X0, X1, X2
	688 Move X8, [X29+72]
	689 Move X24, [X31+40]
	690 Add W31, W0, 1
	691 Move X29, X28
	692 Move [X8], W0
	693 Move W20, [X31+52]
	694 Add X0, X31, 592
	695 Add X1, X31, 1168
	696 Move W2, 120
	697 Move [X8], W20
	698 Move X8, [X31+72]
	699 Move X19, [X8+56]
	700 Call 0x3EB2AC0
	701 Compare X19, 0
	702 JumpIfEqual {781}
	703 Add X0, X31, 80
	704 Add X1, X31, 592
	705 Move W2, 120
	706 Move X29, X28
	707 Call 0x3EB2AC0
	708 Move W8, [X19+24]
	709 NotImplemented "Instruction CMP not yet implemented."
	710 Move W8, 120
	711 NotImplemented "Instruction SMADDL not yet implemented."
	712 Add X0, X8, 32
	713 Add X1, X31, 80
	714 Move W2, 120
	715 Call 0x3EB2AC0
	716 Move X8, [X31+72]
	717 Move X20, [X8+48]
	718 Compare X20, 0
	719 JumpIfEqual {780}
	720 Move X8, 0x70D000
	721 Move X8, [X8+3440]
	722 Move X3, [X8]
	723 Move X28, [X31+16]
	724 Move X25, [X31+24]
	725 Move X0, X20
	726 Move X1, X25
	727 Move X2, X28
	728 Call Dictionary`2<Hash128, Int32>.get_Item, X0, X1
	729 Move W19, [X31+12]
	730 Move X8, 0x70D000
	731 Move X8, [X8+3448]
	732 Add W3, W0, 1
	733 Move X4, [X8]
	734 Move X0, X20
	735 Move X1, X25
	736 Move X2, X28
	737 Call Dictionary`2<Hash128, Int32>.set_Item, X0, X1, X2
	738 Move W8, [X31+52]
	739 Add W8, W8, 1
	740 Move [X31+52], W8
	741 Move W8, [X29+24]
	742 Add W21, W21, 1
	743 NotImplemented "Instruction CMP not yet implemented."
	744 Add X0, X31, 1288
	745 Move X1, X31
	746 Call ProfilingScope.Dispose, X0
	747 Add X31, X31, 1296
	748 Move X20, [X31+112]
	749 Move X19, [X31+120]
	750 Move X22, [X31+96]
	751 Move X21, [X31+104]
	752 Move X24, [X31+80]
	753 Move X23, [X31+88]
	754 Move X26, [X31+64]
	755 Move X25, [X31+72]
	756 Move X28, [X31+48]
	757 Move X27, [X31+56]
	758 Move X29, [X31+32]
	759 Move X30, [X31+40]
	760 Move D9, [X31+16]
	761 Move D8, [X31+24]
	762 Move D11, [X31+128]
	763 Move D10, [X31+136]
	764 Return 
	765 Call 0x1C17F28
	766 Call 0x1C17F20
	767 Call 0x1C17F20
	768 Call 0x1C17F20
	769 Call 0x1C17F20
	770 Call 0x1C17F20
	771 Call 0x1C17F28
	772 Call 0x1C17F20
	773 Call 0x1C17F28
	774 Call 0x1C17F20
	775 Call 0x1C17F20
	776 Call 0x1C17F20
	777 Call 0x1C17F20
	778 Call 0x1C17F20
	779 Call 0x1C17F28
	780 Call 0x1C17F20
	781 Call 0x1C17F20
	782 Call 0x1C17F20
	783 Call 0x1C17F20
	784 Call 0x1C17F20
	785 Call 0x1C17F20
	786 Call 0x1C17F20
	787 Call 0x1C17F28
	788 Call 0x1C17F20
	789 Call 0x1C17F20
	790 Call 0x1C17F20
	791 Move X19, X0
	792 NotImplemented "Instruction CMP not yet implemented."
	793 Move X0, X19
	794 Call 0x3EB2AD0
	795 Move X20, [X0]
	796 Call 0x3EB2AE0
	797 Add X0, X31, 1288
	798 Move X1, X31
	799 Call ProfilingScope.Dispose, X0
	800 Compare X20, 0
	801 JumpIfEqual {747}
	802 Move X0, X20
	803 Call 0x1C17F18
	804 Move X20, X31
	805 Move X19, X0
	806 Add X0, X31, 1288
	807 Move X1, X31
	808 Call ProfilingScope.Dispose, X0
	809 Compare X20, 0
	810 JumpIfNotEqual {813}
	811 Move X0, X19
	812 Call 0x1D2D690
	813 Move X0, X20
	814 Call 0x1C17F18
	815 Call 0x1991590

Method: System.Void ExecuteNativeRenderPass(UnityEngine.Rendering.ScriptableRenderContext context, UnityEngine.Rendering.Universal.ScriptableRenderPass renderPass, ref UnityEngine.Rendering.Universal.CameraData cameraData, ref UnityEngine.Rendering.Universal.RenderingData renderingData)

Disassembly:
	0x03A49568 LDR X0, [X23]
	0x03A4956C LDR X20, [X21 + 0xD0]
	0x03A49570 LDR W8, [X0 + 0xE0]
	0x03A49574 CBNZ W8, 0x3A4957C
	0x03A49578 BL 0x1C16DFC
	0x03A4957C MOV X0, X20
	0x03A49580 MOV X1, X31
	0x03A49584 MOV X2, X31
	0x03A49588 BL 0x3C354F8
	0x03A4958C TBZ X0, 0x0, 0x3A49660
	0x03A49590 MOV X0, X21
	0x03A49594 MOV X1, X31
	0x03A49598 BL 0x3A9165C
	0x03A4959C STR W0, [X19]
	0x03A495A0 MOV X0, X21
	0x03A495A4 MOV X1, X31
	0x03A495A8 BL 0x3A916AC
	0x03A495AC STR W0, [X19 + 0x4]
	0x03A495B0 B 0x3A49660
	0x03A495B4 ADRP X8, 0x70B000
	0x03A495B8 LDR X8, [X8 + 0x8C8]
	0x03A495BC LDR X0, [X8]
	0x03A495C0 LDR W8, [X0 + 0xE0]
	0x03A495C4 CBNZ W8, 0x3A495CC
	0x03A495C8 BL 0x1C16DFC
	0x03A495CC MOV X0, X20
	0x03A495D0 BL 0x3A46984
	0x03A495D4 CBZ X0, 0x3A49674
	0x03A495D8 MOV X21, X0
	0x03A495DC LDR X0, [X23]
	0x03A495E0 LDR X22, [X21 + 0x18]
	0x03A495E4 LDR W8, [X0 + 0xE0]
	0x03A495E8 CBNZ W8, 0x3A495F0
	0x03A495EC BL 0x1C16DFC
	0x03A495F0 MOV X0, X22
	0x03A495F4 MOV X1, X31
	0x03A495F8 MOV X2, X31
	0x03A495FC BL 0x3C354F8
	0x03A49600 TBZ X0, 0x0, 0x3A49610
	0x03A49604 LDR X0, [X21 + 0x18]
	0x03A49608 CBNZ X0, 0x3A49620
	0x03A4960C B 0x3A49674
	0x03A49610 LDR X8, [X20 + 0x98]
	0x03A49614 CBZ X8, 0x3A49674
	0x03A49618 LDR X0, [X8 + 0x18]
	0x03A4961C CBZ X0, 0x3A49674
	0x03A49620 ADD X8, X31, 0x8
	0x03A49624 MOV X1, X31
	0x03A49628 BL 0x3C21334
	0x03A4962C LDUR V0, [X31 + 0x8]
	0x03A49630 LDUR V1, [X31 + 0x18]
	0x03A49634 LDUR V2, [X31 + 0x28]
	0x03A49638 LDR W8, [X31 + 0x38]
	0x03A4963C STP V0, V1, [X31 + 0x40]
	0x03A49640 STR V2, [X31 + 0x6]
	0x03A49644 LDP V1, V0, [X31 + 0x50]
	0x03A49648 LDR V2, [X31 + 0x4]
	0x03A4964C STR W8, [X31 + 0x70]
	0x03A49650 MOV W8, W8
	0x03A49654 STR W8, [X19 + 0x30]
	0x03A49658 STP V1, V0, [X19 + 0x10]
	0x03A4965C STR V2, [X19]
	0x03A49660 LDP X20, X19, [X31 + 0xA0]
	0x03A49664 LDP X22, X21, [X31 + 0x90]
	0x03A49668 LDP X30, X23, [X31 + 0x80]
	0x03A4966C ADD X31, X31, 0xB0
	0x03A49670 RET
	0x03A49674 BL 0x1C16F20
	0x03A49678 STR X30, [X31 - 0x20]!
	0x03A4967C STP X20, X19, [X31 + 0x10]
	0x03A49680 ADRP X20, 0x999000
	0x03A49684 LDRB W8, [X20 + 0x199]
	0x03A49688 MOV X19, X0
	0x03A4968C TBNZ X8, 0x0, 0x3A496B0
	0x03A49690 ADRP X0, 0x6AA000
	0x03A49694 LDR X0, [X0 + 0xA28]
	0x03A49698 BL 0x1C16CF4
	0x03A4969C ADRP X0, 0x70C000
	0x03A496A0 LDR X0, [X0 + 0xDC0]
	0x03A496A4 BL 0x1C16CF4
	0x03A496A8 MOVZ W8, 0x1
	0x03A496AC STRB W8, [X20 + 0x199]
	0x03A496B0 LDRB W8, [X19 + 0x1A2]
	0x03A496B4 CBZ W8, 0x3A496C0
	0x03A496B8 LDR X0, [X19 + 0x140]
	0x03A496BC B 0x3A496F0
	0x03A496C0 ADRP X8, 0x6AA000
	0x03A496C4 LDR X8, [X8 + 0xA28]
	0x03A496C8 LDR X0, [X8]
	0x03A496CC LDR W8, [X0 + 0xE0]
	0x03A496D0 CBNZ W8, 0x3A496D8
	0x03A496D4 BL 0x1C16DFC
	0x03A496D8 ADRP X8, 0x70C000
	0x03A496DC LDR X8, [X8 + 0xDC0]
	0x03A496E0 MOV X1, X31
	0x03A496E4 LDR X0, [X8]
	0x03A496E8 BL 0x3C0649C
	0x03A496EC MOV X0, X31
	0x03A496F0 LDP X20, X19, [X31 + 0x10]
	0x03A496F4 LDR X30, [X31], #0x20
	0x03A496F8 RET
	0x03A496FC MOV W0, W31
	0x03A49700 RET
	0x03A49704 STP X30, X19, [X31 - 0x10]!
	0x03A49708 LDR X8, [X0]
	0x03A4970C MOV W19, W1
	0x03A49710 LDP X9, X8, [X8 + 0x188]
	0x03A49714 MOV X1, X8
	0x03A49718 BLR X9
	0x03A4971C LSRV W8, W0, W19
	0x03A49720 AND W0, W8, 0x1
	0x03A49724 LDP X30, X19, [X31], #0x10
	0x03A49728 RET
	0x03A4972C LDR X0, [X0 + 0xD0]
	0x03A49730 RET
	0x03A49734 STR X1, [X0 + 0xD0]
	0x03A49738 RET
	0x03A4973C LDR X0, [X0 + 0xE0]
	0x03A49740 RET
	0x03A49744 STP X30, X23, [X31 - 0x30]!
	0x03A49748 STP X22, X21, [X31 + 0x10]
	0x03A4974C STP X20, X19, [X31 + 0x20]
	0x03A49750 ADRP X23, 0x999000
	0x03A49754 ADRP X22, 0x70B000
	0x03A49758 LDRB W8, [X23 + 0x190]
	0x03A4975C LDR X22, [X22 + 0x8C8]
	0x03A49760 MOV W21, W2
	0x03A49764 MOV X19, X1
	0x03A49768 MOV X20, X0
	0x03A4976C TBNZ X8, 0x0, 0x3A49784
	0x03A49770 ADRP X0, 0x70B000
	0x03A49774 LDR X0, [X0 + 0x8C8]
	0x03A49778 BL 0x1C16CF4
	0x03A4977C MOVZ W8, 0x1
	0x03A49780 STRB W8, [X23 + 0x190]
	0x03A49784 MOV X0, X19
	0x03A49788 MOV X1, X31
	0x03A4978C BL 0x3A92DE8
	0x03A49790 LDR X8, [X22]
	0x03A49794 MOV W22, W0
	0x03A49798 LDR W9, [X8 + 0xE0]
	0x03A4979C CBNZ W9, 0x3A497A8
	0x03A497A0 MOV X0, X8
	0x03A497A4 BL 0x1C16DFC
	0x03A497A8 AND W2, W21, 0x1
	0x03A497AC AND W3, W22, 0x1
	0x03A497B0 MOV X0, X20
	0x03A497B4 MOV X1, X19
	0x03A497B8 LDP X20, X19, [X31 + 0x20]
	0x03A497BC LDP X22, X21, [X31 + 0x10]
	0x03A497C0 LDP X30, X23, [X31], #0x30
	0x03A497C4 B 0x3A497C8
	0x03A497C8 STR X29, [X31 - 0x40]!
	0x03A497CC STP X30, X23, [X31 + 0x10]
	0x03A497D0 STP X22, X21, [X31 + 0x20]
	0x03A497D4 STP X20, X19, [X31 + 0x30]
	0x03A497D8 SUB X31, X31, 0x640
	0x03A497DC ADRP X23, 0x999000
	0x03A497E0 LDRB W8, [X23 + 0x191]
	0x03A497E4 MOV W21, W3
	0x03A497E8 MOV W22, W2
	0x03A497EC MOV X20, X1
	0x03A497F0 MOV X19, X0
	0x03A497F4 TBNZ X8, 0x0, 0x3A49818
	0x03A497F8 ADRP X0, 0x70B000
	0x03A497FC LDR X0, [X0 + 0x20]
	0x03A49800 BL 0x1C16CF4
	0x03A49804 ADRP X0, 0x70C000
	0x03A49808 LDR X0, [X0 + 0xDC8]
	0x03A4980C BL 0x1C16CF4
	0x03A49810 MOVZ W8, 0x1
	0x03A49814 STRB W8, [X23 + 0x191]
	0x03A49818 MOVI V0.2D, 0x0
	0x03A4981C STR V0, [X31 + 0x5B]
	0x03A49820 STR V0, [X31 + 0x5A]
	0x03A49824 STR V0, [X31 + 0x59]
	0x03A49828 STR V0, [X31 + 0x58]
	0x03A4982C STR V0, [X31 + 0x57]
	0x03A49830 STR V0, [X31 + 0x56]
	0x03A49834 STR V0, [X31 + 0x55]
	0x03A49838 STR V0, [X31 + 0x54]
	0x03A4983C STR V0, [X31 + 0x53]
	0x03A49840 STR V0, [X31 + 0x52]
	0x03A49844 STR V0, [X31 + 0x51]
	0x03A49848 STR V0, [X31 + 0x50]
	0x03A4984C STR V0, [X31 + 0x4F]
	0x03A49850 STR V0, [X31 + 0x4E]
	0x03A49854 STR V0, [X31 + 0x4D]
	0x03A49858 STR V0, [X31 + 0x4C]
	0x03A4985C STR V0, [X31 + 0x4B]
	0x03A49860 STR V0, [X31 + 0x4A]
	0x03A49864 STR V0, [X31 + 0x49]
	0x03A49868 STR V0, [X31 + 0x48]
	0x03A4986C LDR X0, [X20 + 0x178]
	0x03A49870 CBZ X0, 0x3A49CEC
	0x03A49874 MOV X1, X31
	0x03A49878 BL 0x3984C98
	0x03A4987C TBZ X0, 0x0, 0x3A498D8
	0x03A49880 MOV X0, X20
	0x03A49884 MOV X1, X19
	0x03A49888 MOV W2, W31
	0x03A4988C MOV X3, X31
	0x03A49890 BL 0x3A92924
	0x03A49894 MOV X0, X20
	0x03A49898 MOV X1, X31
	0x03A4989C BL 0x3A8F13C
	0x03A498A0 ADRP X8, 0x70C000
	0x03A498A4 LDR X8, [X8 + 0xDC8]
	0x03A498A8 MOV X20, X0
	0x03A498AC LDR X8, [X8]
	0x03A498B0 LDR W9, [X8 + 0xE0]
	0x03A498B4 CBNZ W9, 0x3A498C0
	0x03A498B8 MOV X0, X8
	0x03A498BC BL 0x1C16DFC
	0x03A498C0 MOV X0, X19
	0x03A498C4 MOV X1, X20
	0x03A498C8 MOV W2, W31
	0x03A498CC MOV X3, X31
	0x03A498D0 BL 0x3A94FC8
	0x03A498D4 B 0x3A49CD4
	0x03A498D8 ADD X8, X31, 0x5C0
	0x03A498DC MOV X0, X20
	0x03A498E0 MOV W1, W31
	0x03A498E4 MOV X2, X31
	0x03A498E8 BL 0x3A92B70
	0x03A498EC LDR V0, [X31 + 0x5C]
	0x03A498F0 LDR V1, [X31 + 0x5D]
	0x03A498F4 LDR V2, [X31 + 0x5E]
	0x03A498F8 LDR V3, [X31 + 0x5F]
	0x03A498FC ADD X8, X31, 0x440
	0x03A49900 MOV X0, X20
	0x03A49904 MOV W1, W31
	0x03A49908 MOV X2, X31
	0x03A4990C STR V0, [X31 + 0x60]
	0x03A49910 STR V1, [X31 + 0x61]
	0x03A49914 STR V2, [X31 + 0x62]
	0x03A49918 STR V3, [X31 + 0x63]
	0x03A4991C BL 0x3A92BE4
	0x03A49920 LDR V0, [X31 + 0x44]
	0x03A49924 LDR V1, [X31 + 0x45]
	0x03A49928 LDR V2, [X31 + 0x46]
	0x03A4992C LDR V3, [X31 + 0x47]
	0x03A49930 STR V0, [X31 + 0x5C]
	0x03A49934 STR V1, [X31 + 0x5D]
	0x03A49938 LDR V0, [X31 + 0x60]
	0x03A4993C LDR V1, [X31 + 0x61]
	0x03A49940 STR V2, [X31 + 0x5E]
	0x03A49944 STR V3, [X31 + 0x5F]
	0x03A49948 LDR V2, [X31 + 0x62]
	0x03A4994C LDR V3, [X31 + 0x63]
	0x03A49950 STR V0, [X31 + 0x44]
	0x03A49954 STR V1, [X31 + 0x45]
	0x03A49958 STR V2, [X31 + 0x46]
	0x03A4995C STR V3, [X31 + 0x47]
	0x03A49960 LDR V0, [X31 + 0x5C]
	0x03A49964 LDR V1, [X31 + 0x5D]
	0x03A49968 LDR V2, [X31 + 0x5E]
	0x03A4996C LDR V3, [X31 + 0x5F]
	0x03A49970 STR V0, [X31 + 0x40]
	0x03A49974 STR V1, [X31 + 0x41]
	0x03A49978 STR V2, [X31 + 0x42]
	0x03A4997C STR V3, [X31 + 0x43]
	0x03A49980 CBZ X19, 0x3A49CEC
	0x03A49984 LDR V0, [X31 + 0x44]
	0x03A49988 LDR V1, [X31 + 0x45]
	0x03A4998C LDR V2, [X31 + 0x46]
	0x03A49990 LDR V3, [X31 + 0x47]
	0x03A49994 ADD X1, X31, 0x3C0
	0x03A49998 STP V0, V1, [X31 + 0x3C0]
	0x03A4999C LDR V0, [X31 + 0x40]
	0x03A499A0 LDR V1, [X31 + 0x41]
	0x03A499A4 STP V2, V3, [X31 + 0x3E0]
	0x03A499A8 LDR V2, [X31 + 0x42]
	0x03A499AC LDR V3, [X31 + 0x43]
	0x03A499B0 ADD X2, X31, 0x380
	0x03A499B4 MOV X0, X19
	0x03A499B8 MOV X3, X31
	0x03A499BC STP V0, V1, [X31 + 0x380]
	0x03A499C0 STP V2, V3, [X31 + 0x3A0]
	0x03A499C4 BL 0x3C4D294
	0x03A499C8 TBZ X22, 0x0, 0x3A49CD4
	0x03A499CC AND W1, W21, 0x1
	0x03A499D0 ADD X8, X31, 0x400
	0x03A499D4 MOV X0, X20
	0x03A499D8 MOV W2, W31
	0x03A499DC MOV X3, X31
	0x03A499E0 BL 0x3A93078
	0x03A499E4 LDR V2, [X31 + 0x40]
	0x03A499E8 LDR V3, [X31 + 0x41]
	0x03A499EC LDR V0, [X31 + 0x43]
	0x03A499F0 LDR V1, [X31 + 0x42]
	0x03A499F4 STR V2, [X31 + 0x44]
	0x03A499F8 STR V3, [X31 + 0x45]
	0x03A499FC STR V2, [X31 + 0x40]
	0x03A49A00 STR V3, [X31 + 0x41]
	0x03A49A04 LDR V2, [X31 + 0x62]
	0x03A49A08 LDR V3, [X31 + 0x63]
	0x03A49A0C STR V0, [X31 + 0x47]
	0x03A49A10 STR V1, [X31 + 0x46]
	0x03A49A14 LDR V4, [X31 + 0x60]
	0x03A49A18 LDR V5, [X31 + 0x61]
	0x03A49A1C STR V1, [X31 + 0x42]
	0x03A49A20 STR V0, [X31 + 0x43]
	0x03A49A24 STP V2, V3, [X31 + 0x2E0]
	0x03A49A28 LDR V0, [X31 + 0x46]
	0x03A49A2C LDR V1, [X31 + 0x47]
	0x03A49A30 LDR V2, [X31 + 0x44]
	0x03A49A34 LDR V3, [X31 + 0x45]
	0x03A49A38 ADD X8, X31, 0x340
	0x03A49A3C ADD X0, X31, 0x300
	0x03A49A40 ADD X1, X31, 0x2C0
	0x03A49A44 MOV X2, X31
	0x03A49A48 STP V4, V5, [X31 + 0x2C0]
	0x03A49A4C STP V0, V1, [X31 + 0x320]
	0x03A49A50 STP V2, V3, [X31 + 0x300]
	0x03A49A54 BL 0x3C27F74
	0x03A49A58 LDR V0, [X31 + 0x60]
	0x03A49A5C LDR V1, [X31 + 0x61]
	0x03A49A60 LDR V2, [X31 + 0x62]
	0x03A49A64 LDR V3, [X31 + 0x63]
	0x03A49A68 ADD X8, X31, 0x340
	0x03A49A6C ADD X0, X31, 0x280
	0x03A49A70 MOV X1, X31
	0x03A49A74 STP V0, V1, [X31 + 0x280]
	0x03A49A78 STP V2, V3, [X31 + 0x2A0]
	0x03A49A7C BL 0x3C2711C
	0x03A49A80 LDP V0, V1, [X31 + 0x340]
	0x03A49A84 LDP V2, V3, [X31 + 0x360]
	0x03A49A88 ADD X8, X31, 0x340
	0x03A49A8C ADD X0, X31, 0x240
	0x03A49A90 STR V0, [X31 + 0x58]
	0x03A49A94 STR V1, [X31 + 0x59]
	0x03A49A98 LDR V0, [X31 + 0x40]
	0x03A49A9C LDR V1, [X31 + 0x41]
	0x03A49AA0 STR V2, [X31 + 0x5A]
	0x03A49AA4 STR V3, [X31 + 0x5B]
	0x03A49AA8 LDR V2, [X31 + 0x42]
	0x03A49AAC LDR V3, [X31 + 0x43]
	0x03A49AB0 MOV X1, X31
	0x03A49AB4 STP V0, V1, [X31 + 0x240]
	0x03A49AB8 STP V2, V3, [X31 + 0x260]
	0x03A49ABC BL 0x3C2711C
	0x03A49AC0 LDR V2, [X31 + 0x58]
	0x03A49AC4 LDR V3, [X31 + 0x59]
	0x03A49AC8 LDP V1, V0, [X31 + 0x360]
	0x03A49ACC LDP V5, V4, [X31 + 0x340]
	0x03A49AD0 ADD X8, X31, 0x340
	0x03A49AD4 STP V2, V3, [X31 + 0x200]
	0x03A49AD8 LDR V2, [X31 + 0x5A]
	0x03A49ADC LDR V3, [X31 + 0x5B]
	0x03A49AE0 ADD X0, X31, 0x200
	0x03A49AE4 ADD X1, X31, 0x1C0
	0x03A49AE8 MOV X2, X31
	0x03A49AEC STR V0, [X31 + 0x57]
	0x03A49AF0 STR V1, [X31 + 0x56]
	0x03A49AF4 STR V4, [X31 + 0x55]
	0x03A49AF8 STR V5, [X31 + 0x54]
	0x03A49AFC STP V2, V3, [X31 + 0x220]
	0x03A49B00 STP V1, V0, [X31 + 0x1E0]
	0x03A49B04 STP V5, V4, [X31 + 0x1C0]
	0x03A49B08 BL 0x3C27F74
	0x03A49B0C LDP V0, V1, [X31 + 0x340]
	0x03A49B10 LDP V2, V3, [X31 + 0x360]
	0x03A49B14 ADD X8, X31, 0x340
	0x03A49B18 MOV X0, X31
	0x03A49B1C STR V0, [X31 + 0x50]
	0x03A49B20 STR V1, [X31 + 0x51]
	0x03A49B24 STR V2, [X31 + 0x52]
	0x03A49B28 FMOV S0, 1
	0x03A49B2C FMOV S1, 1
	0x03A49B30 FMOV S2, -1
	0x03A49B34 STR V3, [X31 + 0x53]
	0x03A49B38 BL 0x3C28318
	0x03A49B3C LDP V0, V1, [X31 + 0x340]
	0x03A49B40 LDP V2, V3, [X31 + 0x360]
	0x03A49B44 ADD X8, X31, 0x340
	0x03A49B48 ADD X0, X31, 0x180
	0x03A49B4C STP V0, V1, [X31 + 0x180]
	0x03A49B50 LDR V0, [X31 + 0x60]
	0x03A49B54 LDR V1, [X31 + 0x61]
	0x03A49B58 STP V2, V3, [X31 + 0x1A0]
	0x03A49B5C LDR V2, [X31 + 0x62]
	0x03A49B60 LDR V3, [X31 + 0x63]
	0x03A49B64 ADD X1, X31, 0x140
	0x03A49B68 MOV X2, X31
	0x03A49B6C STP V0, V1, [X31 + 0x140]
	0x03A49B70 STP V2, V3, [X31 + 0x160]
	0x03A49B74 BL 0x3C27F74
	0x03A49B78 LDP V0, V1, [X31 + 0x340]
	0x03A49B7C LDP V2, V3, [X31 + 0x360]
	0x03A49B80 ADD X8, X31, 0x340
	0x03A49B84 ADD X0, X31, 0x4C0
	0x03A49B88 MOV X1, X31
	0x03A49B8C STR V0, [X31 + 0x4C]
	0x03A49B90 STR V1, [X31 + 0x4D]
	0x03A49B94 STR V2, [X31 + 0x4E]
	0x03A49B98 STR V3, [X31 + 0x4F]
	0x03A49B9C BL 0x3C271CC
	0x03A49BA0 ADRP X20, 0x70B000
	0x03A49BA4 LDP V0, V1, [X31 + 0x340]
	0x03A49BA8 LDP V2, V3, [X31 + 0x360]
	0x03A49BAC LDR X20, [X20 + 0x20]
	0x03A49BB0 STR V0, [X31 + 0x48]
	0x03A49BB4 STR V1, [X31 + 0x49]
	0x03A49BB8 LDR X0, [X20]
	0x03A49BBC STR V2, [X31 + 0x4A]
	0x03A49BC0 STR V3, [X31 + 0x4B]
	0x03A49BC4 LDR W8, [X0 + 0xE0]
	0x03A49BC8 CBNZ W8, 0x3A49BD4
	0x03A49BCC BL 0x1C16DFC
	0x03A49BD0 LDR X0, [X20]
	0x03A49BD4 LDR X8, [X0 + 0xB8]
	0x03A49BD8 LDR V0, [X31 + 0x4C]
	0x03A49BDC LDR V1, [X31 + 0x4D]
	0x03A49BE0 LDR V2, [X31 + 0x4E]
	0x03A49BE4 LDR V3, [X31 + 0x4F]
	0x03A49BE8 LDR W1, [X8 + 0x7C]
	0x03A49BEC ADD X2, X31, 0x100
	0x03A49BF0 MOV X0, X19
	0x03A49BF4 MOV X3, X31
	0x03A49BF8 STP V0, V1, [X31 + 0x100]
	0x03A49BFC STP V2, V3, [X31 + 0x120]
	0x03A49C00 BL 0x3C4D038
	0x03A49C04 LDR X8, [X20]
	0x03A49C08 LDR V0, [X31 + 0x48]
	0x03A49C0C LDR V1, [X31 + 0x49]
	0x03A49C10 LDR V2, [X31 + 0x4A]
	0x03A49C14 LDR X8, [X8 + 0xB8]
	0x03A49C18 LDR V3, [X31 + 0x4B]
	0x03A49C1C ADD X2, X31, 0xC0
	0x03A49C20 MOV X0, X19
	0x03A49C24 LDR W1, [X8 + 0x80]
	0x03A49C28 MOV X3, X31
	0x03A49C2C STP V0, V1, [X31 + 0xC0]
	0x03A49C30 STP V2, V3, [X31 + 0xE0]
	0x03A49C34 BL 0x3C4D038
	0x03A49C38 LDR X8, [X20]
	0x03A49C3C LDR V0, [X31 + 0x58]
	0x03A49C40 LDR V1, [X31 + 0x59]
	0x03A49C44 LDR V2, [X31 + 0x5A]
	0x03A49C48 LDR X8, [X8 + 0xB8]
	0x03A49C4C LDR V3, [X31 + 0x5B]
	0x03A49C50 ADD X2, X31, 0x80
	0x03A49C54 MOV X0, X19
	0x03A49C58 LDR W1, [X8 + 0x68]
	0x03A49C5C MOV X3, X31
	0x03A49C60 STP V0, V1, [X31 + 0x80]
	0x03A49C64 STP V2, V3, [X31 + 0xA0]
	0x03A49C68 BL 0x3C4D038
	0x03A49C6C LDR X8, [X20]
	0x03A49C70 LDR V0, [X31 + 0x54]
	0x03A49C74 LDR V1, [X31 + 0x55]
	0x03A49C78 LDR V2, [X31 + 0x56]
	0x03A49C7C LDR X8, [X8 + 0xB8]
	0x03A49C80 LDR V3, [X31 + 0x57]
	0x03A49C84 ADD X2, X31, 0x40
	0x03A49C88 MOV X0, X19
	0x03A49C8C LDR W1, [X8 + 0x6C]
	0x03A49C90 MOV X3, X31
	0x03A49C94 STP V0, V1, [X31 + 0x40]
	0x03A49C98 STP V2, V3, [X31 + 0x60]
	0x03A49C9C BL 0x3C4D038
	0x03A49CA0 LDR X8, [X20]
	0x03A49CA4 LDR V0, [X31 + 0x50]
	0x03A49CA8 LDR V1, [X31 + 0x51]
	0x03A49CAC LDR V2, [X31 + 0x52]
	0x03A49CB0 LDR X8, [X8 + 0xB8]
	0x03A49CB4 LDR V3, [X31 + 0x53]
	0x03A49CB8 ADD X2, X31, 0x0
	0x03A49CBC MOV X0, X19
	0x03A49CC0 LDR W1, [X8 + 0x70]
	0x03A49CC4 MOV X3, X31
	0x03A49CC8 STP V0, V1, [X31]
	0x03A49CCC STP V2, V3, [X31 + 0x20]
	0x03A49CD0 BL 0x3C4D038
	0x03A49CD4 ADD X31, X31, 0x640
	0x03A49CD8 LDP X20, X19, [X31 + 0x30]
	0x03A49CDC LDP X22, X21, [X31 + 0x20]
	0x03A49CE0 LDP X30, X23, [X31 + 0x10]
	0x03A49CE4 LDR X29, [X31], #0x40
	0x03A49CE8 RET
	0x03A49CEC BL 0x1C16F20
	0x03A49CF0 STP X30, X21, [X31 - 0x20]!
	0x03A49CF4 STP X20, X19, [X31 + 0x10]
	0x03A49CF8 MOV X20, X1
	0x03A49CFC MOV X21, X0
	0x03A49D00 MOV X0, X2
	0x03A49D04 MOV X1, X31
	0x03A49D08 MOV X19, X2
	0x03A49D0C BL 0x3A92DE8
	0x03A49D10 MOV X1, X20
	0x03A49D14 MOV X2, X19
	0x03A49D18 LDP X20, X19, [X31 + 0x10]
	0x03A49D1C AND W3, W0, 0x1
	0x03A49D20 MOV X0, X21
	0x03A49D24 LDP X30, X21, [X31], #0x20
	0x03A49D28 B 0x3A49D2C
	0x03A49D2C SUB X31, X31, 0xA0
	0x03A49D30 STP D15, D14, [X31 + 0x20]
	0x03A49D34 STP D13, D12, [X31 + 0x30]
	0x03A49D38 STP D11, D10, [X31 + 0x40]
	0x03A49D3C STP D9, D8, [X31 + 0x50]
	0x03A49D40 STP X30, X25, [X31 + 0x60]
	0x03A49D44 STP X24, X23, [X31 + 0x70]
	0x03A49D48 STP X22, X21, [X31 + 0x80]
	0x03A49D4C STP X20, X19, [X31 + 0x90]
	0x03A49D50 ADRP X23, 0x999000
	0x03A49D54 ADRP X22, 0x70C000
	0x03A49D58 LDRB W8, [X23 + 0x192]
	0x03A49D5C LDR X22, [X22 + 0xD30]
	0x03A49D60 MOV W21, W3
	0x03A49D64 MOV X19, X2
	0x03A49D68 MOV X20, X1
	0x03A49D6C MOV X25, X0
	0x03A49D70 TBNZ X8, 0x0, 0x3A49DC4
	0x03A49D74 ADRP X0, 0x6D2000
	0x03A49D78 LDR X0, [X0 + 0x8F8]
	0x03A49D7C BL 0x1C16CF4
	0x03A49D80 ADRP X0, 0x6AA000
	0x03A49D84 LDR X0, [X0 + 0x5A8]
	0x03A49D88 BL 0x1C16CF4
	0x03A49D8C ADRP X0, 0x70C000
	0x03A49D90 LDR X0, [X0 + 0xD30]
	0x03A49D94 BL 0x1C16CF4
	0x03A49D98 ADRP X0, 0x70B000
	0x03A49D9C LDR X0, [X0 + 0x8C8]
	0x03A49DA0 BL 0x1C16CF4
	0x03A49DA4 ADRP X0, 0x70B000
	0x03A49DA8 LDR X0, [X0 + 0x20]
	0x03A49DAC BL 0x1C16CF4
	0x03A49DB0 ADRP X0, 0x70C000
	0x03A49DB4 LDR X0, [X0 + 0xDD0]
	0x03A49DB8 BL 0x1C16CF4
	0x03A49DBC MOVZ W8, 0x1
	0x03A49DC0 STRB W8, [X23 + 0x192]
	0x03A49DC4 LDR X0, [X22]
	0x03A49DC8 STRB W31, [X31 + 0x18]
	0x03A49DCC LDR W8, [X0 + 0xE0]
	0x03A49DD0 CBNZ W8, 0x3A49DDC
	0x03A49DD4 BL 0x1C16DFC
	0x03A49DD8 LDR X0, [X22]
	0x03A49DDC LDR X8, [X0 + 0xB8]
	0x03A49DE0 ADD X0, X31, 0x18
	0x03A49DE4 MOV X1, X31
	0x03A49DE8 MOV X3, X31
	0x03A49DEC LDR X2, [X8 + 0x20]
	0x03A49DF0 BL 0x39B1DB0
	0x03A49DF4 LDR X24, [X19 + 0xC0]
	0x03A49DF8 CBZ X24, 0x3A4A280
	0x03A49DFC LDP S8, S9, [X19 + 0xD8]
	0x03A49E00 MOV X0, X24
	0x03A49E04 MOV X1, X31
	0x03A49E08 BL 0x3C0403C
	0x03A49E0C MOV W22, W0
	0x03A49E10 MOV X0, X24
	0x03A49E14 MOV X1, X31
	0x03A49E18 BL 0x3C04078
	0x03A49E1C MOV W23, W0
	0x03A49E20 LDR X0, [X19 + 0x178]
	0x03A49E24 CBZ X0, 0x3A4A284
	0x03A49E28 MOV X1, X31
	0x03A49E2C BL 0x3984C98
	0x03A49E30 TBZ X0, 0x0, 0x3A49E3C
	0x03A49E34 LDP W22, W23, [X19 + 0xD8]
	0x03A49E38 STRB W31, [X25 + 0x1A4]
	0x03A49E3C MOV X0, X24
	0x03A49E40 MOV X1, X31
	0x03A49E44 BL 0x3C03820
	0x03A49E48 SCVTF S1, S8
	0x03A49E4C SCVTF S0, S9
	0x03A49E50 STP S0, S1, [X31 + 0x10]
	0x03A49E54 TBZ X0, 0x0, 0x3A49E80
	0x03A49E58 MOV X0, X31
	0x03A49E5C BL 0x3C104AC
	0x03A49E60 MOV V8.16B, V0.16B
	0x03A49E64 MOV X0, X31
	0x03A49E68 BL 0x3C104D4
	0x03A49E6C LDR V1, [X31 + 0x14]
	0x03A49E70 FMUL S2, S8, S1
	0x03A49E74 LDR V1, [X31 + 0x10]
	0x03A49E78 FMUL S1, S0, S1
	0x03A49E7C STP S1, S2, [X31 + 0x10]
	0x03A49E80 MOV X0, X24
	0x03A49E84 MOV X1, X31
	0x03A49E88 BL 0x3C035DC
	0x03A49E8C MOV V11.16B, V0.16B
	0x03A49E90 MOV X0, X24
	0x03A49E94 MOV X1, X31
	0x03A49E98 BL 0x3C03618
	0x03A49E9C ADRP X25, 0x990000
	0x03A49EA0 LDRB W8, [X25 + 0x5AA]
	0x03A49EA4 MOV V10.16B, V0.16B
	0x03A49EA8 CBNZ W8, 0x3A49EC0
	0x03A49EAC ADRP X0, 0x6B1000
	0x03A49EB0 LDR X0, [X0 + 0x4B8]
	0x03A49EB4 BL 0x1C16CF4
	0x03A49EB8 MOVZ W8, 0x1
	0x03A49EBC STRB W8, [X25 + 0x5AA]
	0x03A49EC0 ADRP X8, 0x6B1000
	0x03A49EC4 LDR X8, [X8 + 0x4B8]
	0x03A49EC8 ADRP X9, 0xFFFFFFFFFD0A1000
	0x03A49ECC LDR V13, [X9 + 0x240]
	0x03A49ED0 FMOV S12, W31
	0x03A49ED4 LDR X8, [X8]
	0x03A49ED8 FABS S1, S10
	0x03A49EDC FMOV S0, 8
	0x03A49EE0 FMAXNM S1, S1, S12
	0x03A49EE4 LDR X8, [X8 + 0xB8]
	0x03A49EE8 FMUL S1, S1, S13
	0x03A49EEC FMOV S9, 1
	0x03A49EF0 FABD S3, S12, S12
	0x03A49EF4 LDR V2, [X8]
	0x03A49EF8 FMUL S14, S2, S0
	0x03A49EFC FCMP S1, S14
	0x03A49F00 FCSEL S0, S1, S14, GT
	0x03A49F04 FDIV S1, S9, S10
	0x03A49F08 FCMP S3, S0
	0x03A49F0C FCSEL S8, S12, S1, MI
	0x03A49F10 MOV X0, X24
	0x03A49F14 MOV X1, X31
	0x03A49F18 BL 0x3C03928
	0x03A49F1C FABS S0, S11
	0x03A49F20 FMAXNM S0, S0, S12
	0x03A49F24 FMUL S0, S0, S13
	0x03A49F28 FCMP S0, S14
	0x03A49F2C FABD S1, S12, S12
	0x03A49F30 FCSEL S0, S0, S14, GT
	0x03A49F34 FDIV S2, S9, S11
	0x03A49F38 FCMP S1, S0
	0x03A49F3C FCSEL S13, S12, S2, MI
	0x03A49F40 ANDS W31, W0, 0x1
	0x03A49F44 FCSEL S0, S9, S12, NE
	0x03A49F48 STR S0, [X31 + 0xC]
	0x03A49F4C MOV X0, X31
	0x03A49F50 BL 0x3C3BEDC
	0x03A49F54 ADRP X25, 0x70B000
	0x03A49F58 LDR X25, [X25 + 0x20]
	0x03A49F5C FMUL S12, S10, S13
	0x03A49F60 FSUB S15, S9, S12
	0x03A49F64 FMUL S13, S15, S8
	0x03A49F68 FMUL S14, S12, S8
	0x03A49F6C TBZ X0, 0x0, 0x3A49F80
	0x03A49F70 FADD S12, S12, S15
	0x03A49F74 FNEG S15, S15
	0x03A49F78 FADD S14, S14, S13
	0x03A49F7C FNEG S13, S13
	0x03A49F80 LDR X0, [X25]
	0x03A49F84 ANDS W31, W21, 0x1
	0x03A49F88 FMOV S0, 1
	0x03A49F8C FMOV S1, -1
	0x03A49F90 LDR W8, [X0 + 0xE0]
	0x03A49F94 FCSEL S9, S1, S0, NE
	0x03A49F98 CBNZ W8, 0x3A49FA0
	0x03A49F9C BL 0x1C16DFC
	0x03A49FA0 CBZ X20, 0x3A4A288
	0x03A49FA4 LDR X8, [X25]
	0x03A49FA8 LDR X8, [X8 + 0xB8]
	0x03A49FAC LDR W1, [X8 + 0x40]
	0x03A49FB0 MOV X0, X20
	0x03A49FB4 MOV V0.16B, V9.16B
	0x03A49FB8 MOV V1.16B, V11.16B
	0x03A49FBC MOV V2.16B, V10.16B
	0x03A49FC0 MOV V3.16B, V8.16B
	0x03A49FC4 MOV X2, X31
	0x03A49FC8 BL 0x3C4CED8
	0x03A49FCC MOV X0, X24
	0x03A49FD0 MOV X1, X31
	0x03A49FD4 BL 0x3C038A0
	0x03A49FD8 STR S0, [X31 + 0x8]
	0x03A49FDC LDR V0, [X19 + 0x148]
	0x03A49FE0 STR S0, [X31]
	0x03A49FE4 MOV X0, X24
	0x03A49FE8 MOV X1, X31
	0x03A49FEC BL 0x3C038A0
	0x03A49FF0 STR S0, [X31 + 0x4]
	0x03A49FF4 LDR X8, [X25]
	0x03A49FF8 LDR V0, [X19 + 0x1C4]
	0x03A49FFC LDR V1, [X19 + 0x1C8]
	0x03A4A000 LDR V2, [X19 + 0x1CC]
	0x03A4A004 LDR X8, [X8 + 0xB8]
	0x03A4A008 LDR W1, [X8 + 0x34]
	0x03A4A00C FMOV S3, W31
	0x03A4A010 MOV X0, X20
	0x03A4A014 MOV X2, X31
	0x03A4A018 BL 0x3C4CED8
	0x03A4A01C LDR X8, [X25]
	0x03A4A020 SCVTF S11, W22
	0x03A4A024 FMOV S8, 1
	0x03A4A028 SCVTF S1, W23
	0x03A4A02C LDR X8, [X8 + 0xB8]
	0x03A4A030 FDIV S0, S8, S11
	0x03A4A034 FADD S2, S0, S8
	0x03A4A038 FDIV S0, S8, S1
	0x03A4A03C LDR W1, [X8 + 0x38]
	0x03A4A040 FADD S3, S0, S8
	0x03A4A044 MOV X0, X20

ISIL:
	001 Subtract X31, X31, 480
	002 Move [X31+384], X29
	003 Move [X31+392], X30
	004 Move [X31+400], X28
	005 Move [X31+408], X27
	006 Move [X31+416], X26
	007 Move [X31+424], X25
	008 Move [X31+432], X24
	009 Move [X31+440], X23
	010 Move [X31+448], X22
	011 Move [X31+456], X21
	012 Move [X31+464], X20
	013 Move [X31+472], X19
	014 Move [X31+24], X4
	015 Move X22, 0x99A000
	016 Move [X31+376], X1
	017 Move X20, 0x70D000
	018 Move W8, [X22+391]
	019 Move X20, [X20+3376]
	020 Move X24, X3
	021 Move X21, X2
	022 Move X19, X0
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {74}
	027 Move X0, 0x6AB000
	028 Move X0, [X0+2600]
	029 Call 0x1C17CF4
	030 Move X0, 0x70D000
	031 Move X0, [X0+3440]
	032 Call 0x1C17CF4
	033 Move X0, 0x70D000
	034 Move X0, [X0+3432]
	035 Call 0x1C17CF4
	036 Move X0, 0x70C000
	037 Move X0, [X0+2320]
	038 Call 0x1C17CF4
	039 Move X0, 0x6AB000
	040 Move X0, [X0+1448]
	041 Call 0x1C17CF4
	042 Move X0, 0x6D5000
	043 Move X0, [X0+328]
	044 Call 0x1C17CF4
	045 Move X0, 0x70D000
	046 Move X0, [X0+3464]
	047 Call 0x1C17CF4
	048 Move X0, 0x70D000
	049 Move X0, [X0+3472]
	050 Call 0x1C17CF4
	051 Move X0, 0x6D5000
	052 Move X0, [X0+312]
	053 Call 0x1C17CF4
	054 Move X0, 0x6AB000
	055 Move X0, [X0+1432]
	056 Call 0x1C17CF4
	057 Move X0, 0x70D000
	058 Move X0, [X0+3376]
	059 Call 0x1C17CF4
	060 Move X0, 0x70C000
	061 Move X0, [X0+16]
	062 Call 0x1C17CF4
	063 Move X0, 0x708000
	064 Move X0, [X0+3200]
	065 Call 0x1C17CF4
	066 Move X0, 0x70C000
	067 Move X0, [X0+2248]
	068 Call 0x1C17CF4
	069 Move X0, 0x70D000
	070 Move X0, [X0+3480]
	071 Call 0x1C17CF4
	072 Move W8, 1
	073 Move [X22+391], W8
	074 Move X0, [X20]
	075 Move [X31+368], W31
	076 Move [X31+352], X31
	077 Move [X31+360], X31
	078 Move [X31+336], X31
	079 Move [X31+344], X31
	080 Move W8, [X0+224]
	081 Compare W8, 0
	082 JumpIfNotEqual {85}
	083 Call 0x1C17DFC
	084 Move X0, [X20]
	085 Move X8, [X0+184]
	086 Add X0, X31, 368
	087 Move X1, X31
	088 Move X3, X31
	089 Move X2, [X8+16]
	090 Call ProfilingScope..ctor, X0, X1, X2
	091 Compare X21, 0
	092 JumpIfEqual {679}
	093 Move X8, [X19+40]
	094 Compare X8, 0
	095 JumpIfEqual {680}
	096 Move W22, [X21+68]
	097 Move W9, [X8+24]
	098 NotImplemented "Instruction CMP not yet implemented."
	099 Move X0, [X19+24]
	100 Compare X0, 0
	101 JumpIfEqual {682}
	102 Move X9, 0x70D000
	103 Move X9, [X9+3432]
	104 Move X10, W22
	105 Add X8, X8, X10
	106 Move X25, [X8+32]
	107 Move X26, [X8+40]
	108 Move X3, [X9]
	109 Move X1, X25
	110 Move X2, X26
	111 Call Dictionary`2<Hash128, Object>.get_Item, X0, X1
	112 Move X20, X0
	113 Move X0, [X19+48]
	114 Compare X0, 0
	115 JumpIfEqual {683}
	116 Move X8, 0x70D000
	117 Move X8, [X8+3440]
	118 Move X3, [X8]
	119 Move X1, X25
	120 Move X2, X26
	121 Call Dictionary`2<Hash128, Int32>.get_Item, X0, X1
	122 Move W25, W0
	123 Move X0, X21
	124 Call ScriptableRenderPass.get_colorAttachmentHandle, X0
	125 Move [X31+32], X20
	126 Compare X0, 0
	127 JumpIfEqual {684}
	128 Move X20, 0x6AB000
	129 Move X20, [X20+1432]
	130 Move X26, [X0+24]
	131 Move X8, [X20]
	132 Move W9, [X8+224]
	133 Compare W9, 0
	134 JumpIfNotEqual {137}
	135 Move X0, X8
	136 Call 0x1C17DFC
	137 Move X0, X26
	138 Move X1, X31
	139 Move X2, X31
	140 Call Object.op_Inequality, X0, X1
	141 Move TEMP, X0
	142 And TEMP, TEMP, 1
	143 Compare TEMP, 1
	144 JumpIfNotEqual {156}
	145 Move X0, X21
	146 Call ScriptableRenderPass.get_colorAttachmentHandle, X0
	147 Compare X0, 0
	148 JumpIfEqual {686}
	149 Move X0, [X0+24]
	150 Compare X0, 0
	151 JumpIfEqual {687}
	152 Move X1, X31
	153 Call RenderTexture.get_graphicsFormat, X0
	154 Compare W0, 0
	155 JumpIfEqual {218}
	156 Move X0, [X20]
	157 Move X26, [X24+208]
	158 Move W8, [X0+224]
	159 Compare W8, 0
	160 JumpIfNotEqual {162}
	161 Call 0x1C17DFC
	162 Move X0, X26
	163 Move X1, X31
	164 Move X2, X31
	165 Call Object.op_Inequality, X0, X1
	166 Move TEMP, X0
	167 And TEMP, TEMP, 1
	168 Compare TEMP, 1
	169 JumpIfNotEqual {177}
	170 Move X0, [X24+208]
	171 Compare X0, 0
	172 JumpIfEqual {693}
	173 Move X1, X31
	174 Call RenderTexture.get_graphicsFormat, X0
	175 Compare W0, 0
	176 JumpIfEqual {218}
	177 Move W8, [X21+64]
	178 Compare W8, 0
	179 JumpIfEqual {215}
	180 Move X8, [X21+152]
	181 Compare X8, 0
	182 JumpIfEqual {692}
	183 Move X9, [X8+72]
	184 NotImplemented "Instruction LDUR not yet implemented."
	185 NotImplemented "Instruction LDUR not yet implemented."
	186 Add X20, X31, 160
	187 Move [X31+320], X9
	188 Move [X20+128], V1
	189 Move [X20+136], V0
	190 Add X8, X31, 248
	191 Move W0, 2
	192 Move X1, X31
	193 Call RenderTargetIdentifier.op_Implicit, X0
	194 Add X8, X31, 9
	195 NotImplemented "Instruction LDUR not yet implemented."
	196 NotImplemented "Instruction LDUR not yet implemented."
	197 Move X8, [X31+280]
	198 Move V2, [X20+128]
	199 Move V3, [X20+144]
	200 Move X9, [X31+320]
	201 Move [X31+10], V0
	202 Move [X20+1], V1
	203 Move [X31+192], X8
	204 Move [X20+48], V2
	205 Move [X20+56], V3
	206 Move [X31+240], X9
	207 Add X0, X31, 208
	208 Add X1, X31, 160
	209 Move X2, X31
	210 Call RenderTargetIdentifier.op_Inequality, X0, X1
	211 Move TEMP, X0
	212 And TEMP, TEMP, 1
	213 Compare TEMP, 1
	214 JumpIfNotEqual {220}
	215 Move W20, W31
	216 Add W1, W25, 1
	217 Move W23, 1
	218 Move W20, W31
	219 Move W23, W31
	220 Move W20, 1
	221 Move W23, 1
	222 Move W1, 1
	223 Move X8, 0x70D000
	224 Move X8, [X8+3472]
	225 Move X4, [X8]
	226 Add X0, X31, 352
	227 Move W2, 2
	228 Move W3, 1
	229 Call NativeArray`1<AttachmentDescriptor>..ctor, X0, X1, X2, X3
	230 NotImplemented "Instruction CMP not yet implemented."
	231 Move X27, [X31+352]
	232 Move X26, X31
	233 Move W28, W25
	234 Move W29, 32
	235 Move X8, [X19+56]
	236 Compare X8, 0
	237 JumpIfEqual {677}
	238 Move W9, [X8+24]
	239 NotImplemented "Instruction CMP not yet implemented."
	240 Add X1, X8, X29
	241 Add X8, X27, X29
	242 Subtract X0, X8, 32
	243 Move W2, 120
	244 Call 0x3EB2B30
	245 Add X26, X26, 1
	246 NotImplemented "Instruction CMP not yet implemented."
	247 Add X29, X29, 120
	248 Xor W8, W23, 1
	249 Or W8, W20, W8
	250 Move TEMP, X8
	251 And TEMP, TEMP, 1
	252 Compare TEMP, 1
	253 JumpIfEqual {260}
	254 Move X8, [X31+352]
	255 Move W9, 120
	256 Add X1, X19, 64
	257 Move W2, 120
	258 NotImplemented "Instruction SMADDL not yet implemented."
	259 Call 0x3EB2B30
	260 Move X0, X19
	261 Move X1, X24
	262 Move X2, X21
	263 Call ScriptableRenderer.InitializeRenderPassDescriptor, X0, X1, X2
	264 Move X24, 0x70C000
	265 Move X24, [X24+2248]
	266 Move X26, X0
	267 Move X27, X1
	268 Move X0, [X24]
	269 Move W8, [X0+224]
	270 Compare W8, 0
	271 JumpIfNotEqual {273}
	272 Call 0x1C17DFC
	273 Move X0, [X31+32]
	274 Call ScriptableRenderer.GetValidPassIndexCount, X0
	275 Move [X31+20], W0
	276 Move X0, X21
	277 Call ScriptableRenderer.GetSubPassAttachmentIndicesCount, X0
	278 Move X8, 0x6D5000
	279 Move X8, [X8+312]
	280 NotImplemented "Instruction CMP not yet implemented."
	281 Move W28, W0
	282 NotImplemented "Instruction CSEL not yet implemented."
	283 Move X4, [X8]
	284 Add X0, X31, 336
	285 Move W2, 2
	286 Move W3, 1
	287 Call NativeArray`1<Int32>..ctor, X0, X1, X2, X3
	288 Compare W23, 0
	289 JumpIfEqual {302}
	290 Compare W28, 0
	291 JumpIfEqual {302}
	292 Move X9, [X21+72]
	293 Move X10, [X31+336]
	294 Move X8, X31
	295 Move W11, W28
	296 Move W12, 1
	297 Move W13, [X9]
	298 Move [X10], W13
	299 Move X8, W12
	300 NotImplemented "Instruction CMP not yet implemented."
	301 Add W12, W12, 1
	302 Move W8, [X31+20]
	303 NotImplemented "Instruction CMP not yet implemented."
	304 Move X9, [X31+32]
	305 Compare X9, 0
	306 JumpIfEqual {688}
	307 Move W8, [X9+24]
	308 Compare W8, 0
	309 JumpIfEqual {689}
	310 Move W8, [X9+32]
	311 NotImplemented "Instruction CMP not yet implemented."
	312 Move X0, [X24]
	313 Move W8, [X0+224]
	314 Compare W8, 0
	315 JumpIfNotEqual {317}
	316 Call 0x1C17DFC
	317 Move X0, X21
	318 Call ScriptableRenderer.PassHasInputAttachments, X0
	319 Move TEMP, X0
	320 And TEMP, TEMP, 1
	321 Compare TEMP, 1
	322 JumpIfNotEqual {335}
	323 Move X8, 0x6AB000
	324 Move X8, [X8+2600]
	325 Move X0, [X8]
	326 Move W8, [X0+224]
	327 Compare W8, 0
	328 JumpIfNotEqual {330}
	329 Call 0x1C17DFC
	330 Move X8, 0x70D000
	331 Move X8, [X8+3480]
	332 Move X0, [X8]
	333 Move X1, X31
	334 Call Debug.LogWarning, X0
	335 Move X8, 0x6AB000
	336 Move X8, [X8+1448]
	337 Move X0, [X8]
	338 Move W8, [X0+224]
	339 Compare W8, 0
	340 JumpIfNotEqual {342}
	341 Call 0x1C17DFC
	342 Move W1, 1
	343 Move W0, W27
	344 Move X2, X31
	345 Call Math.Max, X0, X1
	346 Move X8, 0x708000
	347 Move X8, [X8+3200]
	348 Move W27, W0
	349 Move X29, [X31+352]
	350 Move X28, [X31+360]
	351 NotImplemented "Instruction CMP not yet implemented."
	352 Move X0, [X8]
	353 NotImplemented "Instruction CSEL not yet implemented."
	354 NotImplemented "Instruction CMP not yet implemented."
	355 NotImplemented "Instruction CSINV not yet implemented."
	356 Move W8, [X0+224]
	357 Compare W8, 0
	358 JumpIfNotEqual {360}
	359 Call 0x1C17DFC
	360 Move X2, X26
	361 ShiftRight X2, 32
	362 And X2, X2, 0x7FFFFFFF
	363 Add X0, X31, 376
	364 Move W1, W26
	365 Move W3, W27
	366 Move X4, X29
	367 Move X5, X28
	368 Move W6, W25
	369 Move X7, X31
	370 Call ScriptableRenderContext.BeginRenderPass, X0, X1, X2, X3, X4, X5
	371 Move X8, 0x70D000
	372 Move X8, [X8+3464]
	373 Move X1, [X8]
	374 Add X0, X31, 352
	375 Call NativeArray`1<AttachmentDescriptor>.Dispose, X0
	376 Move X1, [X31+336]
	377 Move X2, [X31+344]
	378 Add X0, X31, 376
	379 Move W3, W31
	380 Move X4, X31
	381 Call ScriptableRenderContext.BeginSubPass, X0, X1, X2
	382 Add X29, X19, 16
	383 Move [X29], W22
	384 Move X8, 0x6D5000
	385 Move X8, [X8+328]
	386 Move X1, [X8]
	387 Add X0, X31, 336
	388 Call NativeArray`1<Int32>.Dispose, X0
	389 Move X8, [X21]
	390 Move X1, [X31+376]
	391 Move X9, [X8+456]
	392 Move X3, [X8+464]
	393 Move X20, [X31+24]
	394 Move X0, X21
	395 Move X2, X20
	396 NotImplemented "Instruction BLR not yet implemented."
	397 Move X8, 0x708000
	398 Move X8, [X8+3200]
	399 Move X21, [X20]
	400 Move X0, [X8]
	401 Move W8, [X0+224]
	402 Compare W8, 0
	403 JumpIfNotEqual {405}
	404 Call 0x1C17DFC
	405 Add X0, X31, 376
	406 Move X1, X21
	407 Move X2, X31
	408 Call ScriptableRenderContext.ExecuteCommandBuffer, X0, X1
	409 Move X8, [X31+24]
	410 Move X20, [X31+32]
	411 Move X0, [X8]
	412 Compare X0, 0
	413 JumpIfEqual {685}
	414 Move X1, X31
	415 Call CommandBuffer.Clear, X0
	416 Move W8, [X31+20]
	417 Subtract W8, W8, 1
	418 Compare X20, 0
	419 JumpIfEqual {690}
	420 Move W9, [X20+24]
	421 NotImplemented "Instruction CMP not yet implemented."
	422 Add X8, X20, W8
	423 Move W8, [X8+32]
	424 NotImplemented "Instruction CMP not yet implemented."
	425 Move X8, 0x708000
	426 Move X8, [X8+3200]
	427 Move X0, [X8]
	428 Move W8, [X0+224]
	429 Compare W8, 0
	430 JumpIfNotEqual {432}
	431 Call 0x1C17DFC
	432 Add X0, X31, 376
	433 Move X1, X31
	434 Call ScriptableRenderContext.EndSubPass, X0
	435 Add X0, X31, 376
	436 Move X1, X31
	437 Call ScriptableRenderContext.EndRenderPass, X0
	438 Move [X19+16], W31
	439 Move X25, [X19+56]
	440 Compare X25, 0
	441 JumpIfEqual {490}
	442 Move X20, 0x70C000
	443 Move X20, [X20+16]
	444 Move X22, X31
	445 Move W23, 32
	446 Move X21, 0x99A000
	447 Move W24, 1
	448 Move X0, [X20]
	449 NotImplemented "Instruction LDRSW not yet implemented."
	450 Move W8, [X0+224]
	451 NotImplemented "Instruction CMP not yet implemented."
	452 Compare W8, 0
	453 JumpIfNotEqual {455}
	454 Call 0x1C17DFC
	455 Move W8, [X21+452]
	456 Compare W8, 0
	457 JumpIfNotEqual {461}
	458 Move X0, X20
	459 Call 0x1C17CF4
	460 Move [X21+452], W24
	461 Move X0, [X20]
	462 Move W8, [X0+224]
	463 Compare W8, 0
	464 JumpIfNotEqual {467}
	465 Call 0x1C17DFC
	466 Move X0, [X20]
	467 Move X8, [X0+184]
	468 Add X0, X31, 40
	469 Move W2, 120
	470 Add X1, X8, 8
	471 Call 0x3EB2AC0
	472 Move W8, [X25+24]
	473 NotImplemented "Instruction CMP not yet implemented."
	474 Add X0, X25, X23
	475 Add X1, X31, 40
	476 Move W2, 120
	477 Call 0x3EB2AC0
	478 Move X8, [X19+184]
	479 Compare X8, 0
	480 JumpIfEqual {676}
	481 Move W9, [X8+24]
	482 NotImplemented "Instruction CMP not yet implemented."
	483 Add X8, X8, X22
	484 Move [X8+32], W31
	485 Move X25, [X19+56]
	486 Add X22, X22, 1
	487 Add X23, X23, 120
	488 Compare X25, 0
	489 JumpIfNotEqual {448}
	490 Call 0x1C17F20
	491 Compare W8, 0
	492 JumpIfNotEqual {494}
	493 Call 0x1C17DFC
	494 Move W8, [X21+452]
	495 Compare W8, 0
	496 JumpIfNotEqual {502}
	497 Move X0, 0x70C000
	498 Move X0, [X0+16]
	499 Call 0x1C17CF4
	500 Move W8, 1
	501 Move [X21+452], W8
	502 Move X0, [X20]
	503 Move W8, [X0+224]
	504 Compare W8, 0
	505 JumpIfNotEqual {508}
	506 Call 0x1C17DFC
	507 Move X0, [X20]
	508 Move X8, [X0+184]
	509 Add X0, X19, 64
	510 Move W2, 120
	511 Add X1, X8, 8
	512 Call 0x3EB2B30
	513 Add X0, X31, 368
	514 Move X1, X31
	515 Call ProfilingScope.Dispose, X0
	516 Move X20, [X31+464]
	517 Move X19, [X31+472]
	518 Move X22, [X31+448]
	519 Move X21, [X31+456]
	520 Move X24, [X31+432]
	521 Move X23, [X31+440]
	522 Move X26, [X31+416]
	523 Move X25, [X31+424]
	524 Move X28, [X31+400]
	525 Move X27, [X31+408]
	526 Move X29, [X31+384]
	527 Move X30, [X31+392]
	528 Add X31, X31, 480
	529 Return 
	530 Move X0, [X19+256]
	531 Compare X0, 0
	532 JumpIfEqual {694}
	533 Move X20, 0x70C000
	534 Move X20, [X20+2320]
	535 Add X29, X19, 16
	536 Move W1, [X29]
	537 Move X2, [X20]
	538 Call List`1<Object>.get_Item, X0, X1
	539 Move X25, X0
	540 Move X0, [X19+256]
	541 Compare X0, 0
	542 JumpIfEqual {695}
	543 Move X2, [X20]
	544 Move W1, W22
	545 Call List`1<Object>.get_Item, X0, X1
	546 Move X26, X0
	547 Move X0, [X24]
	548 Move W8, [X0+224]
	549 Compare W8, 0
	550 JumpIfNotEqual {552}
	551 Call 0x1C17DFC
	552 Move X0, X25
	553 Move X1, X26
	554 Call ScriptableRenderer.AreAttachmentIndicesCompatible, X0, X1
	555 Move TEMP, X0
	556 And TEMP, TEMP, 1
	557 Compare TEMP, 1
	558 JumpIfNotEqual {605}
	559 Move X0, [X19+256]
	560 Compare X0, 0
	561 JumpIfEqual {696}
	562 Move X2, [X20]
	563 Move W1, W22
	564 Call List`1<Object>.get_Item, X0, X1
	565 Move X25, X0
	566 Move X0, [X24]
	567 Move W8, [X0+224]
	568 Compare W8, 0
	569 JumpIfNotEqual {571}
	570 Call 0x1C17DFC
	571 Move X0, X25
	572 Call ScriptableRenderer.PassHasInputAttachments, X0
	573 Move TEMP, X0
	574 And TEMP, TEMP, 1
	575 Compare TEMP, 1
	576 JumpIfNotEqual {384}
	577 Move X8, 0x708000
	578 Move X8, [X8+3200]
	579 Move X0, [X8]
	580 Move W8, [X0+224]
	581 Compare W8, 0
	582 JumpIfNotEqual {584}
	583 Call 0x1C17DFC
	584 Add X0, X31, 376
	585 Move X1, X31
	586 Call ScriptableRenderContext.EndSubPass, X0
	587 Move X0, [X19+256]
	588 Compare X0, 0
	589 JumpIfEqual {698}
	590 Move X25, [X31+336]
	591 Move X26, [X31+344]
	592 Move X2, [X20]
	593 Move W1, W22
	594 Call List`1<Object>.get_Item, X0, X1
	595 Compare X0, 0
	596 JumpIfEqual {700}
	597 Move X3, [X0+88]
	598 Move X4, [X0+96]
	599 Add X0, X31, 376
	600 Move X1, X25
	601 Move X2, X26
	602 Move W5, W31
	603 Move X6, X31
	604 Call ScriptableRenderContext.BeginSubPass, X0, X1, X2, X3
	605 Move X8, 0x708000
	606 Move X8, [X8+3200]
	607 Move X0, [X8]
	608 Move W8, [X0+224]
	609 Compare W8, 0
	610 JumpIfNotEqual {612}
	611 Call 0x1C17DFC
	612 Add X0, X31, 376
	613 Move X1, X31
	614 Call ScriptableRenderContext.EndSubPass, X0
	615 Move X0, [X19+256]
	616 Compare X0, 0
	617 JumpIfEqual {697}
	618 Move X2, [X20]
	619 Move W1, W22
	620 Call List`1<Object>.get_Item, X0, X1
	621 Move X25, X0
	622 Move X0, [X24]
	623 Move W8, [X0+224]
	624 Compare W8, 0
	625 JumpIfNotEqual {627}
	626 Call 0x1C17DFC
	627 Move X0, X25
	628 Call ScriptableRenderer.PassHasInputAttachments, X0
	629 Move X25, [X31+336]
	630 Move X26, [X31+344]
	631 Move TEMP, X0
	632 And TEMP, TEMP, 1
	633 Compare TEMP, 1
	634 JumpIfNotEqual {661}
	635 Move X0, [X19+256]
	636 Compare X0, 0
	637 JumpIfEqual {699}
	638 Move X2, [X20]
	639 Move W1, W22
	640 Call List`1<Object>.get_Item, X0, X1
	641 Compare X0, 0
	642 JumpIfEqual {701}
	643 Move X8, 0x708000
	644 Move X8, [X8+3200]
	645 Move X28, [X0+88]
	646 Move X27, [X0+96]
	647 Move X8, [X8]
	648 Move W9, [X8+224]
	649 Compare W9, 0
	650 JumpIfNotEqual {653}
	651 Move X0, X8
	652 Call 0x1C17DFC
	653 Add X0, X31, 376
	654 Move X1, X25
	655 Move X2, X26
	656 Move X3, X28
	657 Move X4, X27
	658 Move W5, W31
	659 Move X6, X31
	660 Call ScriptableRenderContext.BeginSubPass, X0, X1, X2, X3
	661 Move X8, 0x708000
	662 Move X8, [X8+3200]
	663 Move X0, [X8]
	664 Move W8, [X0+224]
	665 Compare W8, 0
	666 JumpIfNotEqual {668}
	667 Call 0x1C17DFC
	668 Add X0, X31, 376
	669 Move X1, X25
	670 Move X2, X26
	671 Move W3, W31
	672 Move X4, X31
	673 Call ScriptableRenderContext.BeginSubPass, X0, X1, X2
	674 Call 0x1C17F28
	675 Call 0x1C17F28
	676 Call 0x1C17F20
	677 Call 0x1C17F20
	678 Call 0x1C17F28
	679 Call 0x1C17F20
	680 Call 0x1C17F20
	681 Call 0x1C17F28
	682 Call 0x1C17F20
	683 Call 0x1C17F20
	684 Call 0x1C17F20
	685 Call 0x1C17F20
	686 Call 0x1C17F20
	687 Call 0x1C17F20
	688 Call 0x1C17F20
	689 Call 0x1C17F28
	690 Call 0x1C17F20
	691 Call 0x1C17F28
	692 Call 0x1C17F20
	693 Call 0x1C17F20
	694 Call 0x1C17F20
	695 Call 0x1C17F20
	696 Call 0x1C17F20
	697 Call 0x1C17F20
	698 Call 0x1C17F20
	699 Call 0x1C17F20
	700 Call 0x1C17F20
	701 Call 0x1C17F20
	702 Move X19, X0
	703 NotImplemented "Instruction CMP not yet implemented."
	704 Move X0, X19
	705 Call 0x3EB2AD0
	706 Move X20, [X0]
	707 Call 0x3EB2AE0
	708 Add X0, X31, 368
	709 Move X1, X31
	710 Call ProfilingScope.Dispose, X0
	711 Compare X20, 0
	712 JumpIfEqual {516}
	713 Move X0, X20
	714 Call 0x1C17F18
	715 Move X20, X31
	716 Move X19, X0
	717 Add X0, X31, 368
	718 Move X1, X31
	719 Call ProfilingScope.Dispose, X0
	720 Compare X20, 0
	721 JumpIfNotEqual {724}
	722 Move X0, X19
	723 Call 0x1D2D690
	724 Move X0, X20
	725 Call 0x1C17F18
	726 Call 0x1991590

Method: System.Void SetupInputAttachmentIndices(UnityEngine.Rendering.Universal.ScriptableRenderPass pass)

Disassembly:
	0x03A48504 STR X9, [X31 + 0x50]
	0x03A48508 BL 0x3C4B6D8
	0x03A4850C TBZ X0, 0x0, 0x3A48534
	0x03A48510 ADD X0, X31, 0xB0
	0x03A48514 MOV X1, X31
	0x03A48518 BL 0x3C50788
	0x03A4851C MOV W23, W0
	0x03A48520 MOV X0, X20
	0x03A48524 MOV X1, X31
	0x03A48528 BL 0x3C50788
	0x03A4852C CMP W23, W0
	0x03A48530 B.EQ 0x3A48544
	0x03A48534 ADD W22, W22, 0x1
	0x03A48538 CMP W22, W21
	0x03A4853C B.LE 0x3A48484
	0x03A48540 MOVN W22, 0x0
	0x03A48544 MOV W0, W22
	0x03A48548 LDP X20, X19, [X31 + 0x160]
	0x03A4854C LDP X22, X21, [X31 + 0x150]
	0x03A48550 LDP X24, X23, [X31 + 0x140]
	0x03A48554 LDP X29, X30, [X31 + 0x130]
	0x03A48558 ADD X31, X31, 0x170
	0x03A4855C RET
	0x03A48560 BL 0x1C16F28
	0x03A48564 BL 0x1C16F20
	0x03A48568 SUB X31, X31, 0x1E0
	0x03A4856C STP X29, X30, [X31 + 0x180]
	0x03A48570 STP X28, X27, [X31 + 0x190]
	0x03A48574 STP X26, X25, [X31 + 0x1A0]
	0x03A48578 STP X24, X23, [X31 + 0x1B0]
	0x03A4857C STP X22, X21, [X31 + 0x1C0]
	0x03A48580 STP X20, X19, [X31 + 0x1D0]
	0x03A48584 STR X4, [X31 + 0x18]
	0x03A48588 ADRP X22, 0x99A000
	0x03A4858C STR X1, [X31 + 0x178]
	0x03A48590 ADRP X20, 0x70D000
	0x03A48594 LDRB W8, [X22 + 0x187]
	0x03A48598 LDR X20, [X20 + 0xD30]
	0x03A4859C MOV X24, X3
	0x03A485A0 MOV X21, X2
	0x03A485A4 MOV X19, X0
	0x03A485A8 TBNZ X8, 0x0, 0x3A48668
	0x03A485AC ADRP X0, 0x6AB000
	0x03A485B0 LDR X0, [X0 + 0xA28]
	0x03A485B4 BL 0x1C16CF4
	0x03A485B8 ADRP X0, 0x70D000
	0x03A485BC LDR X0, [X0 + 0xD70]
	0x03A485C0 BL 0x1C16CF4
	0x03A485C4 ADRP X0, 0x70D000
	0x03A485C8 LDR X0, [X0 + 0xD68]
	0x03A485CC BL 0x1C16CF4
	0x03A485D0 ADRP X0, 0x70C000
	0x03A485D4 LDR X0, [X0 + 0x910]
	0x03A485D8 BL 0x1C16CF4
	0x03A485DC ADRP X0, 0x6AB000
	0x03A485E0 LDR X0, [X0 + 0x5A8]
	0x03A485E4 BL 0x1C16CF4
	0x03A485E8 ADRP X0, 0x6D5000
	0x03A485EC LDR X0, [X0 + 0x148]
	0x03A485F0 BL 0x1C16CF4
	0x03A485F4 ADRP X0, 0x70D000
	0x03A485F8 LDR X0, [X0 + 0xD88]
	0x03A485FC BL 0x1C16CF4
	0x03A48600 ADRP X0, 0x70D000
	0x03A48604 LDR X0, [X0 + 0xD90]
	0x03A48608 BL 0x1C16CF4
	0x03A4860C ADRP X0, 0x6D5000
	0x03A48610 LDR X0, [X0 + 0x138]
	0x03A48614 BL 0x1C16CF4
	0x03A48618 ADRP X0, 0x6AB000
	0x03A4861C LDR X0, [X0 + 0x598]
	0x03A48620 BL 0x1C16CF4
	0x03A48624 ADRP X0, 0x70D000
	0x03A48628 LDR X0, [X0 + 0xD30]
	0x03A4862C BL 0x1C16CF4
	0x03A48630 ADRP X0, 0x70C000
	0x03A48634 LDR X0, [X0 + 0x10]
	0x03A48638 BL 0x1C16CF4
	0x03A4863C ADRP X0, 0x708000
	0x03A48640 LDR X0, [X0 + 0xC80]
	0x03A48644 BL 0x1C16CF4
	0x03A48648 ADRP X0, 0x70C000
	0x03A4864C LDR X0, [X0 + 0x8C8]
	0x03A48650 BL 0x1C16CF4
	0x03A48654 ADRP X0, 0x70D000
	0x03A48658 LDR X0, [X0 + 0xD98]
	0x03A4865C BL 0x1C16CF4
	0x03A48660 MOVZ W8, 0x1
	0x03A48664 STRB W8, [X22 + 0x187]
	0x03A48668 LDR X0, [X20]
	0x03A4866C STRB W31, [X31 + 0x170]
	0x03A48670 STP X31, X31, [X31 + 0x160]
	0x03A48674 STP X31, X31, [X31 + 0x150]
	0x03A48678 LDR W8, [X0 + 0xE0]
	0x03A4867C CBNZ W8, 0x3A48688
	0x03A48680 BL 0x1C16DFC
	0x03A48684 LDR X0, [X20]
	0x03A48688 LDR X8, [X0 + 0xB8]
	0x03A4868C ADD X0, X31, 0x170
	0x03A48690 MOV X1, X31
	0x03A48694 MOV X3, X31
	0x03A48698 LDR X2, [X8 + 0x10]
	0x03A4869C BL 0x39B1DB0
	0x03A486A0 CBZ X21, 0x3A48E98
	0x03A486A4 LDR X8, [X19 + 0x28]
	0x03A486A8 CBZ X8, 0x3A48E9C
	0x03A486AC LDR W22, [X21 + 0x44]
	0x03A486B0 LDR W9, [X8 + 0x18]
	0x03A486B4 CMP W22, W9
	0x03A486B8 B.CS 0x3A48EA0
	0x03A486BC LDR X0, [X19 + 0x18]
	0x03A486C0 CBZ X0, 0x3A48EA4
	0x03A486C4 ADRP X9, 0x70D000
	0x03A486C8 LDR X9, [X9 + 0xD68]
	0x03A486CC SXTW X10, W22
	0x03A486D0 ADD X8, X8, X10, 0x4, LSL
	0x03A486D4 LDP X25, X26, [X8 + 0x20]
	0x03A486D8 LDR X3, [X9]
	0x03A486DC MOV X1, X25
	0x03A486E0 MOV X2, X26
	0x03A486E4 BL 0x29EB764
	0x03A486E8 MOV X20, X0
	0x03A486EC LDR X0, [X19 + 0x30]
	0x03A486F0 CBZ X0, 0x3A48EA8
	0x03A486F4 ADRP X8, 0x70D000

ISIL:
	001 Subtract X31, X31, 224
	002 Move [X31+128], X29
	003 Move [X31+136], X30
	004 Move [X31+144], X28
	005 Move [X31+152], X27
	006 Move [X31+160], X26
	007 Move [X31+168], X25
	008 Move [X31+176], X24
	009 Move [X31+184], X23
	010 Move [X31+192], X22
	011 Move [X31+200], X21
	012 Move [X31+208], X20
	013 Move [X31+216], X19
	014 Move X21, 0x99B000
	015 Move X23, 0x70D000
	016 Move W8, [X21+392]
	017 Move X23, [X23+2248]
	018 Move X19, X1
	019 Move X20, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {38}
	024 Move X0, 0x6AC000
	025 Move X0, [X0+2600]
	026 Call 0x1C17CF4
	027 Move X0, 0x6D6000
	028 Move X0, [X0+312]
	029 Call 0x1C17CF4
	030 Move X0, 0x70D000
	031 Move X0, [X0+2248]
	032 Call 0x1C17CF4
	033 Move X0, 0x70E000
	034 Move X0, [X0+3456]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X21+392], W8
	038 Move X0, [X23]
	039 Move X21, 0x6D6000
	040 Move W8, [X0+224]
	041 Move X21, [X21+312]
	042 Compare W8, 0
	043 JumpIfNotEqual {45}
	044 Call 0x1C17DFC
	045 Move X0, X19
	046 Call ScriptableRenderer.GetValidInputAttachmentCount, X0
	047 Move X4, [X21]
	048 Move W22, W0
	049 Add X0, X31, 80
	050 Move W2, 2
	051 Move W3, 1
	052 Move W1, W22
	053 Move [X31+80], X31
	054 Move [X31+88], X31
	055 Call NativeArray`1<Int32>..ctor, X0, X1, X2, X3
	056 Compare X19, 0
	057 JumpIfEqual {144}
	058 Move V0, [X31+5]
	059 NotImplemented "Instruction CMP not yet implemented."
	060 Move [X19+88], V0
	061 Move X24, 0x6AC000
	062 Move X25, 0x70E000
	063 Move X24, [X24+2600]
	064 Move X25, [X25+3456]
	065 Move X21, X31
	066 Add X26, X19, 88
	067 Move W27, W22
	068 Move X8, [X19+136]
	069 Compare X8, 0
	070 JumpIfEqual {144}
	071 Move W9, [X8+24]
	072 NotImplemented "Instruction CMP not yet implemented."
	073 Add X8, X8, X21
	074 Move X0, [X8+32]
	075 Add X8, X31, 40
	076 Move X1, X31
	077 Call RTHandle.op_Implicit, X0
	078 NotImplemented "Instruction LDUR not yet implemented."
	079 NotImplemented "Instruction LDUR not yet implemented."
	080 Move X8, [X31+72]
	081 Move X0, [X23]
	082 Move [X31+80], V0
	083 Move [X31+88], V1
	084 Move [X31+112], X8
	085 Move W8, [X0+224]
	086 Move X22, [X20+56]
	087 Compare W8, 0
	088 JumpIfNotEqual {90}
	089 Call 0x1C17DFC
	090 Move V0, [X31+80]
	091 Move V1, [X31+96]
	092 Move X8, [X31+112]
	093 Add X0, X31, 0
	094 Move X1, X22
	095 Move [X31], V0
	096 Move [X31+8], V1
	097 Move [X31+32], X8
	098 Call ScriptableRenderer.FindAttachmentDescriptorIndexInList, X0, X1
	099 Move X8, [X26]
	100 Add W31, W0, 1
	101 Move [X8], W0
	102 Move X28, [X20+184]
	103 Compare X28, 0
	104 JumpIfEqual {144}
	105 Move W8, [X28+24]
	106 Move W22, W0
	107 NotImplemented "Instruction CMP not yet implemented."
	108 Add X29, X28, W22
	109 Add X29, X29, 32
	110 Move W8, [X29]
	111 Compare W8, 0
	112 JumpIfNotEqual {128}
	113 Move X0, X19
	114 Move W1, W21
	115 Call ScriptableRenderPass.IsInputAttachmentTransient, X0, X1
	116 Move W8, [X28+24]
	117 NotImplemented "Instruction CMP not yet implemented."
	118 And W8, W0, 1
	119 Move [X29], W8
	120 Move X0, [X24]
	121 Move W8, [X0+224]
	122 Compare W8, 0
	123 JumpIfNotEqual {125}
	124 Call 0x1C17DFC
	125 Move X0, [X25]
	126 Move X1, X31
	127 Call Debug.LogWarning, X0
	128 Add X21, X21, 1
	129 NotImplemented "Instruction CMP not yet implemented."
	130 Move X20, [X31+208]
	131 Move X19, [X31+216]
	132 Move X22, [X31+192]
	133 Move X21, [X31+200]
	134 Move X24, [X31+176]
	135 Move X23, [X31+184]
	136 Move X26, [X31+160]
	137 Move X25, [X31+168]
	138 Move X28, [X31+144]
	139 Move X27, [X31+152]
	140 Move X29, [X31+128]
	141 Move X30, [X31+136]
	142 Add X31, X31, 224
	143 Return 
	144 Call 0x1C17F20
	145 Call 0x1C17F28

Method: System.Void SetupTransientInputAttachments(System.Int32 attachmentCount)

Disassembly:
	0x03A486F8 LDR X8, [X8 + 0xD70]
	0x03A486FC LDR X3, [X8]
	0x03A48700 MOV X1, X25
	0x03A48704 MOV X2, X26
	0x03A48708 BL 0x29E8710
	0x03A4870C MOV W25, W0
	0x03A48710 MOV X0, X21
	0x03A48714 BL 0x3A43A98
	0x03A48718 STR X20, [X31 + 0x20]
	0x03A4871C CBZ X0, 0x3A48EAC
	0x03A48720 ADRP X20, 0x6AB000
	0x03A48724 LDR X20, [X20 + 0x598]
	0x03A48728 LDR X26, [X0 + 0x18]
	0x03A4872C LDR X8, [X20]
	0x03A48730 LDR W9, [X8 + 0xE0]
	0x03A48734 CBNZ W9, 0x3A48740
	0x03A48738 MOV X0, X8
	0x03A4873C BL 0x1C16DFC
	0x03A48740 MOV X0, X26
	0x03A48744 MOV X1, X31
	0x03A48748 MOV X2, X31
	0x03A4874C BL 0x3C354F8
	0x03A48750 TBZ X0, 0x0, 0x3A48774
	0x03A48754 MOV X0, X21
	0x03A48758 BL 0x3A43A98
	0x03A4875C CBZ X0, 0x3A48EB4
	0x03A48760 LDR X0, [X0 + 0x18]
	0x03A48764 CBZ X0, 0x3A48EB8
	0x03A48768 MOV X1, X31
	0x03A4876C BL 0x3C201A0
	0x03A48770 CBZ W0, 0x3A48838
	0x03A48774 LDR X0, [X20]
	0x03A48778 LDR X26, [X24 + 0xD0]
	0x03A4877C LDR W8, [X0 + 0xE0]
	0x03A48780 CBNZ W8, 0x3A48788
	0x03A48784 BL 0x1C16DFC
	0x03A48788 MOV X0, X26
	0x03A4878C MOV X1, X31
	0x03A48790 MOV X2, X31
	0x03A48794 BL 0x3C354F8
	0x03A48798 TBZ X0, 0x0, 0x3A487B0
	0x03A4879C LDR X0, [X24 + 0xD0]
	0x03A487A0 CBZ X0, 0x3A48ED0
	0x03A487A4 MOV X1, X31
	0x03A487A8 BL 0x3C201A0
	0x03A487AC CBZ W0, 0x3A48838
	0x03A487B0 LDRB W8, [X21 + 0x40]
	0x03A487B4 CBZ W8, 0x3A48828
	0x03A487B8 LDR X8, [X21 + 0x98]
	0x03A487BC CBZ X8, 0x3A48ECC
	0x03A487C0 LDR X9, [X8 + 0x48]
	0x03A487C4 LDUR V0, [X8 + 0x38]
	0x03A487C8 LDUR V1, [X8 + 0x28]
	0x03A487CC ADD X20, X31, 0xA0
	0x03A487D0 STR X9, [X31 + 0x140]
	0x03A487D4 STP V1, V0, [X20 + 0x80]
	0x03A487D8 ADD X8, X31, 0xF8
	0x03A487DC MOVZ W0, 0x2
	0x03A487E0 MOV X1, X31
	0x03A487E4 BL 0x3C4B204
	0x03A487E8 ADD X8, X31, 0x9
	0x03A487EC LDUR V0, [X31 + 0xF8]
	0x03A487F0 LDUR V1, [X8 + 0xFF]
	0x03A487F4 LDR X8, [X31 + 0x118]
	0x03A487F8 LDP V2, V3, [X20 + 0x80]
	0x03A487FC LDR X9, [X31 + 0x140]
	0x03A48800 STR V0, [X31 + 0xA]
	0x03A48804 STR V1, [X20 + 0x1]
	0x03A48808 STR X8, [X31 + 0xC0]

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+128], X30
	003 Move [X31+136], X23
	004 Move [X31+144], X22
	005 Move [X31+152], X21
	006 Move [X31+160], X20
	007 Move [X31+168], X19
	008 NotImplemented "Instruction CMP not yet implemented."
	009 Move X19, X0
	010 Move X20, X31
	011 Move W21, W1
	012 Move W22, 32
	013 Move X8, [X19+184]
	014 Compare X8, 0
	015 JumpIfEqual {76}
	016 Move W9, [X8+24]
	017 NotImplemented "Instruction CMP not yet implemented."
	018 Add X8, X8, X20
	019 Move W8, [X8+32]
	020 Compare W8, 0
	021 JumpIfEqual {65}
	022 Move X8, [X19+56]
	023 Compare X8, 0
	024 JumpIfEqual {76}
	025 Move W9, [X8+24]
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Add X0, X8, X22
	028 Move W1, 2
	029 Move X2, X31
	030 Call AttachmentDescriptor.set_loadAction, X0, X1
	031 Move X8, [X19+56]
	032 Compare X8, 0
	033 JumpIfEqual {76}
	034 Move W9, [X8+24]
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Add X0, X8, X22
	037 Move W1, 3
	038 Move X2, X31
	039 Call AttachmentDescriptor.set_storeAction, X0, X1
	040 Move X23, [X19+56]
	041 Compare X23, 0
	042 JumpIfEqual {76}
	043 Add X8, X31, 40
	044 Move W0, W31
	045 Move X1, X31
	046 Call RenderTargetIdentifier.op_Implicit, X0
	047 NotImplemented "Instruction LDUR not yet implemented."
	048 NotImplemented "Instruction LDUR not yet implemented."
	049 Move X8, [X31+72]
	050 Move [X31+80], V0
	051 Move [X31+88], V1
	052 Move [X31+112], X8
	053 Move W8, [X23+24]
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Move V0, [X31+80]
	056 Move V1, [X31+96]
	057 Move X8, [X31+112]
	058 Add X0, X23, X22
	059 Add X1, X31, 0
	060 Move X2, X31
	061 Move [X31], V0
	062 Move [X31+8], V1
	063 Move [X31+32], X8
	064 Call AttachmentDescriptor.set_loadStoreTarget, X0, X1
	065 Add X20, X20, 1
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Add X22, X22, 120
	068 Move X20, [X31+160]
	069 Move X19, [X31+168]
	070 Move X22, [X31+144]
	071 Move X21, [X31+152]
	072 Move X30, [X31+128]
	073 Move X23, [X31+136]
	074 Add X31, X31, 176
	075 Return 
	076 Call 0x1C17F20
	077 Call 0x1C17F28

Method: System.UInt32 GetSubPassAttachmentIndicesCount(UnityEngine.Rendering.Universal.ScriptableRenderPass pass)

Disassembly:
	0x03A4A048 MOV V0.16B, V11.16B
	0x03A4A04C MOV X2, X31
	0x03A4A050 BL 0x3C4CED8
	0x03A4A054 LDR X8, [X25]
	0x03A4A058 LDP S1, S0, [X31 + 0x10]
	0x03A4A05C LDR X8, [X8 + 0xB8]
	0x03A4A060 FDIV S9, S8, S0
	0x03A4A064 FDIV S10, S8, S1
	0x03A4A068 FADD S2, S9, S8
	0x03A4A06C LDR W1, [X8 + 0x30]
	0x03A4A070 FADD S3, S10, S8
	0x03A4A074 MOV X0, X20
	0x03A4A078 MOV X2, X31
	0x03A4A07C BL 0x3C4CED8
	0x03A4A080 LDR X8, [X25]
	0x03A4A084 LDR X8, [X8 + 0xB8]
	0x03A4A088 LDR W1, [X8 + 0x44]
	0x03A4A08C MOV X0, X20
	0x03A4A090 MOV V0.16B, V15.16B
	0x03A4A094 MOV V1.16B, V12.16B
	0x03A4A098 MOV V2.16B, V13.16B
	0x03A4A09C MOV V3.16B, V14.16B
	0x03A4A0A0 MOV X2, X31
	0x03A4A0A4 BL 0x3C4CED8
	0x03A4A0A8 LDR X8, [X25]
	0x03A4A0AC LDP S0, S3, [X31 + 0x8]
	0x03A4A0B0 LDR V1, [X31]
	0x03A4A0B4 LDR X8, [X8 + 0xB8]
	0x03A4A0B8 FMUL S0, S0, S1
	0x03A4A0BC LDR W1, [X8 + 0x48]
	0x03A4A0C0 LDR V1, [X31 + 0x4]
	0x03A4A0C4 FMOV S2, W31
	0x03A4A0C8 MOV X0, X20
	0x03A4A0CC MOV X2, X31
	0x03A4A0D0 BL 0x3C4CED8
	0x03A4A0D4 LDR X8, [X25]
	0x03A4A0D8 LDR X8, [X8 + 0xB8]
	0x03A4A0DC LDR W1, [X8 + 0x50]
	0x03A4A0E0 LDP S1, S0, [X31 + 0x10]
	0x03A4A0E4 MOV X0, X20
	0x03A4A0E8 MOV V2.16B, V9.16B
	0x03A4A0EC MOV V3.16B, V10.16B
	0x03A4A0F0 MOV X2, X31
	0x03A4A0F4 BL 0x3C4CED8
	0x03A4A0F8 ADRP X8, 0x6D1000
	0x03A4A0FC LDR X8, [X8 + 0x8F8]
	0x03A4A100 LDRB W22, [X19 + 0x11C]
	0x03A4A104 LDR X0, [X8]
	0x03A4A108 LDR W8, [X0 + 0xE0]
	0x03A4A10C CBNZ W8, 0x3A4A114
	0x03A4A110 BL 0x1C16DFC
	0x03A4A114 ADRP X8, 0x70B000
	0x03A4A118 LDR X8, [X8 + 0xDD0]
	0x03A4A11C CMP W22, 0x0
	0x03A4A120 CSET W2, NE
	0x03A4A124 LDR X1, [X8]
	0x03A4A128 MOV X0, X20
	0x03A4A12C MOV X3, X31
	0x03A4A130 BL 0x39E9618
	0x03A4A134 LDR X8, [X25]
	0x03A4A138 LDR V0, [X19 + 0x120]
	0x03A4A13C LDR V1, [X19 + 0x124]
	0x03A4A140 LDR V2, [X19 + 0x128]
	0x03A4A144 LDR X8, [X8 + 0xB8]
	0x03A4A148 LDR V3, [X19 + 0x12C]
	0x03A4A14C LDR W1, [X8 + 0x58]
	0x03A4A150 MOV X0, X20
	0x03A4A154 MOV X2, X31
	0x03A4A158 BL 0x3C4CED8
	0x03A4A15C LDR X8, [X25]
	0x03A4A160 LDR V0, [X19 + 0x130]
	0x03A4A164 LDR V1, [X19 + 0x134]
	0x03A4A168 LDR V2, [X19 + 0x138]
	0x03A4A16C LDR X8, [X8 + 0xB8]
	0x03A4A170 LDR V3, [X19 + 0x13C]
	0x03A4A174 LDR W1, [X8 + 0x54]
	0x03A4A178 MOV X0, X20
	0x03A4A17C MOV X2, X31
	0x03A4A180 BL 0x3C4CED8
	0x03A4A184 ADRP X8, 0x6A9000
	0x03A4A188 LDR X8, [X8 + 0x5A8]
	0x03A4A18C LDR X0, [X8]
	0x03A4A190 LDR W8, [X0 + 0xE0]
	0x03A4A194 CBNZ W8, 0x3A4A19C
	0x03A4A198 BL 0x1C16DFC
	0x03A4A19C LDR V0, [X31 + 0x14]
	0x03A4A1A0 FDIV S0, S11, S0
	0x03A4A1A4 FCVT S0, S0
	0x03A4A1A8 FMOV D1, 2
	0x03A4A1AC MOV X0, X31
	0x03A4A1B0 BL 0x337ECD0
	0x00000000 INVALID
	0x03A4A1B8 FNEG S0, S0
	0x03A4A1BC FMOV S1, W31
	0x03A4A1C0 MOV X0, X31
	0x03A4A1C4 BL 0x337EEBC
	0x03A4A1C8 MOV V8.16B, V0.16B
	0x03A4A1CC LDR V0, [X19 + 0x1F4]
	0x03A4A1D0 FMOV S1, W31

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+64], X30
	003 Move [X31+72], X23
	004 Move [X31+80], X22
	005 Move [X31+88], X21
	006 Move [X31+96], X20
	007 Move [X31+104], X19
	008 Move X20, 0x999000
	009 Move W8, [X20+393]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {29}
	015 Move X0, 0x70C000
	016 Move X0, [X0+3488]
	017 Call 0x1C17CF4
	018 Move X0, 0x70C000
	019 Move X0, [X0+3496]
	020 Call 0x1C17CF4
	021 Move X0, 0x70C000
	022 Move X0, [X0+3504]
	023 Call 0x1C17CF4
	024 Move X0, 0x70C000
	025 Move X0, [X0+3512]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X20+393], W8
	029 Move [X31+32], X31
	030 Move [X31+40], X31
	031 Move [X31+48], X31
	032 Compare X19, 0
	033 JumpIfEqual {86}
	034 Move X8, 0x70C000
	035 Move X8, [X8+3512]
	036 Move X21, 0x70C000
	037 Move X20, 0x70C000
	038 Add X0, X19, 72
	039 Move X1, [X8]
	040 Move X21, [X21+3496]
	041 Move X20, [X20+3488]
	042 Add X8, X31, 8
	043 Call NativeArray`1<Int32>.GetEnumerator, X0
	044 NotImplemented "Instruction LDUR not yet implemented."
	045 Move X10, [X31+24]
	046 Move X8, [X21]
	047 Move W19, W31
	048 Move [X31+2], V0
	049 Move W9, [X31+40]
	050 Add W22, W10, 1
	051 Move [X31+48], X10
	052 Move [X31+48], W22
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Move X0, [X8+32]
	055 Move X23, [X31+32]
	056 Move W10, W22
	057 Move W11, [X0+309]
	058 Move TEMP, X11
	059 And TEMP, TEMP, 1
	060 Compare TEMP, 1
	061 JumpIfEqual {66}
	062 Call 0x1C5D684
	063 Move X8, [X21]
	064 Move W10, [X31+48]
	065 Move W9, [X31+40]
	066 Move W11, [X23]
	067 Add W22, W10, 1
	068 NotImplemented "Instruction CMP not yet implemented."
	069 NotImplemented "Instruction ORN not yet implemented."
	070 Add W19, W19, W10
	071 Move [X31+48], W22
	072 Move [X31+52], W11
	073 Move X1, [X20]
	074 Add X0, X31, 32
	075 Move [X31+52], W31
	076 Call Enumerator<Int32>.Dispose, X0
	077 Move W0, W19
	078 Move X20, [X31+96]
	079 Move X19, [X31+104]
	080 Move X22, [X31+80]
	081 Move X21, [X31+88]
	082 Move X30, [X31+64]
	083 Move X23, [X31+72]
	084 Add X31, X31, 112
	085 Return X0
	086 Call 0x1C17F20
	087 Move X22, X20
	088 NotImplemented "Instruction CMP not yet implemented."
	089 Move X21, X0
	090 Move X0, X21
	091 Call 0x3EB2AD0
	092 Move X20, [X0]
	093 Call 0x3EB2AE0
	094 Move X1, [X22]
	095 Add X0, X31, 32
	096 Call Enumerator<Int32>.Dispose, X0
	097 Compare X20, 0
	098 JumpIfEqual {77}
	099 Move X0, X20
	100 Call 0x1C17F18
	101 Move X20, X31
	102 Move X21, X0
	103 Move X1, [X22]
	104 Add X0, X31, 32
	105 Call Enumerator<Int32>.Dispose, X0
	106 Compare X20, 0
	107 JumpIfNotEqual {110}
	108 Move X0, X21
	109 Call 0x1D2D690
	110 Move X0, X20
	111 Call 0x1C17F18
	112 Call 0x1991590

Method: System.Boolean AreAttachmentIndicesCompatible(UnityEngine.Rendering.Universal.ScriptableRenderPass lastSubPass, UnityEngine.Rendering.Universal.ScriptableRenderPass currentSubPass)

Disassembly:
	0x03A4A1D4 MOV X0, X31
	0x03A4A1D8 BL 0x337EEBC
	0x03A4A1DC MOV V1.16B, V0.16B
	0x03A4A1E0 MOV V0.16B, V8.16B
	0x03A4A1E4 MOV X0, X31
	0x03A4A1E8 BL 0x337EEBC
	0x03A4A1EC LDR X8, [X25]
	0x03A4A1F0 MOV V8.16B, V0.16B
	0x03A4A1F4 LDR X8, [X8 + 0xB8]
	0x03A4A1F8 LDR W22, [X8 + 0x4C]
	0x03A4A1FC BL 0x3EB1B90
	0x03A4A200 MOV V1.16B, V0.16B
	0x03A4A204 FMOV S2, W31
	0x03A4A208 FMOV S3, W31
	0x03A4A20C MOV X0, X20
	0x03A4A210 MOV W1, W22
	0x03A4A214 MOV V0.16B, V8.16B
	0x03A4A218 MOV X2, X31
	0x03A4A21C BL 0x3C4CED8
	0x03A4A220 ADRP X8, 0x70A000
	0x03A4A224 LDR X8, [X8 + 0x8C8]
	0x03A4A228 LDR X0, [X8]
	0x03A4A22C LDR W8, [X0 + 0xE0]
	0x03A4A230 CBNZ W8, 0x3A4A238
	0x03A4A234 BL 0x1C16DFC
	0x03A4A238 AND W3, W21, 0x1
	0x03A4A23C MOVZ W2, 0x1
	0x03A4A240 MOV X0, X20
	0x03A4A244 MOV X1, X19
	0x03A4A248 BL 0x3A497C8
	0x03A4A24C ADD X0, X31, 0x18
	0x03A4A250 MOV X1, X31
	0x03A4A254 BL 0x39B1DB4
	0x03A4A258 LDP X20, X19, [X31 + 0x90]
	0x03A4A25C LDP X22, X21, [X31 + 0x80]
	0x03A4A260 LDP X24, X23, [X31 + 0x70]
	0x03A4A264 LDP X30, X25, [X31 + 0x60]
	0x03A4A268 LDP D9, D8, [X31 + 0x50]
	0x03A4A26C LDP D11, D10, [X31 + 0x40]
	0x03A4A270 LDP D13, D12, [X31 + 0x30]
	0x03A4A274 LDP D15, D14, [X31 + 0x20]
	0x03A4A278 ADD X31, X31, 0xA0
	0x03A4A27C RET
	0x03A4A280 BL 0x1C16F20
	0x03A4A284 BL 0x1C16F20
	0x03A4A288 BL 0x1C16F20
	0x03A4A28C B 0x3A4A30C
	0x03A4A290 B 0x3A4A30C
	0x03A4A294 B 0x3A4A30C
	0x03A4A298 B 0x3A4A30C
	0x03A4A29C B 0x3A4A30C
	0x03A4A2A0 B 0x3A4A30C
	0x03A4A2A4 B 0x3A4A30C
	0x03A4A2A8 B 0x3A4A30C
	0x03A4A2AC B 0x3A4A30C
	0x03A4A2B0 B 0x3A4A30C
	0x03A4A2B4 B 0x3A4A30C
	0x03A4A2B8 B 0x3A4A30C
	0x03A4A2BC B 0x3A4A30C
	0x03A4A2C0 B 0x3A4A30C
	0x03A4A2C4 B 0x3A4A30C

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x999000
	007 Move X22, 0x70B000
	008 Move W8, [X21+394]
	009 Move X22, [X22+2248]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x70B000
	017 Move X0, [X0+2248]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+394], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move X0, X20
	027 Call ScriptableRenderer.GetSubPassAttachmentIndicesCount, X0
	028 Move W21, W0
	029 Move X0, X19
	030 Call ScriptableRenderer.GetSubPassAttachmentIndicesCount, X0
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Move W0, W31
	033 Compare W0, 0
	034 JumpIfEqual {59}
	035 Move X10, X31
	036 Move W8, W31
	037 Move W9, W0
	038 Move W11, W21
	039 Compare W21, 0
	040 JumpIfEqual {56}
	041 Compare X19, 0
	042 JumpIfEqual {68}
	043 Compare X20, 0
	044 JumpIfEqual {68}
	045 Move X13, [X19+72]
	046 Move X14, [X20+72]
	047 Move X12, X31
	048 Move W15, 1
	049 Move W13, [X13]
	050 Move W16, [X14]
	051 Move X12, W15
	052 Add W15, W15, 1
	053 NotImplemented "Instruction CMP not yet implemented."
	054 NotImplemented "Instruction CINC not yet implemented."
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Add W10, W10, 1
	057 Move X10, W10
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Move W8, W31
	060 NotImplemented "Instruction CMP not yet implemented."
	061 NotImplemented "Instruction CSET not yet implemented."
	062 Move X20, [X31+32]
	063 Move X19, [X31+40]
	064 Move X22, [X31+16]
	065 Move X21, [X31+24]
	066 Move X30, [X31+48]
	067 Return X0
	068 Call 0x1C17F20

Method: System.UInt32 GetValidColorAttachmentCount(UnityEngine.Rendering.AttachmentDescriptor[] colorAttachments)

Disassembly:
	0x03A4A310 CMP W1, 0x1
	0x03A4A314 B.NE 0x3A4A340
	0x03A4A318 MOV X0, X19
	0x03A4A31C BL 0x3EB1AD0
	0x03A4A320 LDR X20, [X0]
	0x03A4A324 BL 0x3EB1AE0
	0x03A4A328 ADD X0, X31, 0x18
	0x03A4A32C MOV X1, X31
	0x03A4A330 BL 0x39B1DB4
	0x03A4A334 CBZ X20, 0x3A4A258
	0x03A4A338 MOV X0, X20
	0x03A4A33C BL 0x1C16F18
	0x03A4A340 MOV X20, X31
	0x03A4A344 B 0x3A4A34C
	0x03A4A348 MOV X19, X0
	0x03A4A34C ADD X0, X31, 0x18
	0x03A4A350 MOV X1, X31
	0x03A4A354 BL 0x39B1DB4
	0x03A4A358 CBNZ X20, 0x3A4A364
	0x03A4A35C MOV X0, X19
	0x03A4A360 BL 0x1D2C690
	0x03A4A364 MOV X0, X20
	0x03A4A368 BL 0x1C16F18
	0x03A4A36C BL 0x1990590
	0x03A4A370 SUB X31, X31, 0x110
	0x03A4A374 STR D10, [X31 + 0xB0]
	0x03A4A378 STP D9, D8, [X31 + 0xC0]
	0x03A4A37C STP X29, X30, [X31 + 0xD0]
	0x03A4A380 STP X24, X23, [X31 + 0xE0]
	0x03A4A384 STP X22, X21, [X31 + 0xF0]
	0x03A4A388 STP X20, X19, [X31 + 0x100]
	0x03A4A38C ADRP X22, 0x998000
	0x03A4A390 ADRP X21, 0x6D1000
	0x03A4A394 LDRB W8, [X22 + 0x193]
	0x03A4A398 LDR X21, [X21 + 0x8F8]
	0x03A4A39C MOV X20, X2
	0x03A4A3A0 MOV X19, X1
	0x03A4A3A4 ADD X23, X31, 0x70
	0x03A4A3A8 TBNZ X8, 0x0, 0x3A4A3E4
	0x03A4A3AC ADRP X0, 0x6D1000
	0x03A4A3B0 LDR X0, [X0 + 0x8F8]
	0x03A4A3B4 BL 0x1C16CF4
	0x03A4A3B8 ADRP X0, 0x70A000
	0x03A4A3BC LDR X0, [X0 + 0x8C8]
	0x03A4A3C0 BL 0x1C16CF4
	0x03A4A3C4 ADRP X0, 0x70A000
	0x03A4A3C8 LDR X0, [X0 + 0x20]
	0x03A4A3CC BL 0x1C16CF4
	0x03A4A3D0 ADRP X0, 0x70B000
	0x03A4A3D4 LDR X0, [X0 + 0xDD8]
	0x03A4A3D8 BL 0x1C16CF4
	0x03A4A3DC MOVZ W8, 0x1
	0x03A4A3E0 STRB W8, [X22 + 0x193]
	0x03A4A3E4 ADRP X24, 0x70B000
	0x03A4A3E8 ADRP X22, 0x70A000
	0x03A4A3EC LDR X24, [X24 + 0xDD8]
	0x03A4A3F0 LDR X22, [X22 + 0x8C8]
	0x03A4A3F4 ADD X8, X31, 0x8
	0x03A4A3F8 MOV X0, X20
	0x03A4A3FC MOV W1, W31
	0x03A4A400 MOV X2, X31
	0x03A4A404 STR W31, [X31 + 0x68]
	0x03A4A408 STR X31, [X31 + 0x60]
	0x03A4A40C STR W31, [X31 + 0x58]
	0x03A4A410 STR X31, [X31 + 0x50]
	0x03A4A414 STR W31, [X31 + 0x4C]
	0x03A4A418 BL 0x3A92B70
	0x03A4A41C LDUR V0, [X31 + 0x8]
	0x03A4A420 LDUR V1, [X31 + 0x18]
	0x03A4A424 LDUR V2, [X31 + 0x28]
	0x03A4A428 LDUR V3, [X31 + 0x38]
	0x03A4A42C MOV X0, X31
	0x03A4A430 STP V0, V1, [X31 + 0x70]
	0x03A4A434 STP V2, V3, [X23 + 0x20]
	0x03A4A438 LDR V10, [X20 + 0x1C4]
	0x03A4A43C LDR V8, [X20 + 0x1C8]
	0x03A4A440 LDR V9, [X20 + 0x1CC]
	0x03A4A444 BL 0x3C11250
	0x03A4A448 LDR X8, [X21]
	0x03A4A44C MOV W20, W0
	0x03A4A450 LDR W9, [X8 + 0xE0]
	0x03A4A454 CBNZ W9, 0x3A4A460

ISIL:
	001 Move [X31-80], X29
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Subtract X31, X31, 480
	011 Move X20, 0x999000
	012 Move W8, [X20+395]
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0x70B000
	019 Move X0, [X0+16]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X20+395], W8
	023 Compare X19, 0
	024 JumpIfEqual {80}
	025 Move X8, [X19+24]
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move X22, 0x70B000
	028 Move X22, [X22+16]
	029 Move X23, X31
	030 Move W20, W31
	031 And X8, X8, 0
	032 Add X21, X19, 32
	033 Move X24, 0x999000
	034 Move W25, 1
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Add X0, X31, 360
	037 Move W2, 120
	038 Move X1, X21
	039 Call 0x3EB2AC0
	040 Move X0, [X22]
	041 Move W8, [X0+224]
	042 Compare W8, 0
	043 JumpIfNotEqual {45}
	044 Call 0x1C17DFC
	045 Move W8, [X24+452]
	046 Compare W8, 0
	047 JumpIfNotEqual {51}
	048 Move X0, X22
	049 Call 0x1C17CF4
	050 Move [X24+452], W25
	051 Move X0, [X22]
	052 Move W8, [X0+224]
	053 Compare W8, 0
	054 JumpIfNotEqual {57}
	055 Call 0x1C17DFC
	056 Move X0, [X22]
	057 Move X8, [X0+184]
	058 Add X0, X31, 240
	059 Move W2, 120
	060 Add X1, X8, 8
	061 Call 0x3EB2AC0
	062 Add X0, X31, 120
	063 Add X1, X31, 360
	064 Move W2, 120
	065 Call 0x3EB2AC0
	066 Add X0, X31, 0
	067 Add X1, X31, 240
	068 Move W2, 120
	069 Call 0x3EB2AC0
	070 Add X0, X31, 120
	071 Add X1, X31, 0
	072 Move X2, X31
	073 Call AttachmentDescriptor.op_Inequality, X0, X1
	074 Move W8, [X19+24]
	075 And W9, W0, 1
	076 Add X23, X23, 1
	077 Add W20, W20, W9
	078 NotImplemented "Instruction CMP not yet implemented."
	079 Add X21, X21, 120
	080 Move W20, W31
	081 Move W0, W20
	082 Add X31, X31, 480
	083 Move X20, [X31+64]
	084 Move X19, [X31+72]
	085 Move X22, [X31+48]
	086 Move X21, [X31+56]
	087 Move X24, [X31+32]
	088 Move X23, [X31+40]
	089 Move X30, [X31+16]
	090 Move X25, [X31+24]
	091 Move X29, [X31+80]
	092 Return X0
	093 Call 0x1C17F28

Method: System.Int32 GetValidInputAttachmentCount(UnityEngine.Rendering.Universal.ScriptableRenderPass renderPass)

Disassembly:
	0x03A4A2C8 B 0x3A4A30C
	0x03A4A2CC B 0x3A4A30C
	0x03A4A2D0 B 0x3A4A30C
	0x03A4A2D4 B 0x3A4A30C
	0x03A4A2D8 B 0x3A4A30C
	0x03A4A2DC B 0x3A4A30C
	0x03A4A2E0 B 0x3A4A30C
	0x03A4A2E4 B 0x3A4A30C
	0x03A4A2E8 B 0x3A4A30C
	0x03A4A2EC B 0x3A4A30C
	0x03A4A2F0 B 0x3A4A30C
	0x03A4A2F4 B 0x3A4A30C
	0x03A4A2F8 B 0x3A4A30C
	0x03A4A2FC B 0x3A4A30C
	0x03A4A300 B 0x3A4A30C
	0x03A4A304 B 0x3A4A30C
	0x03A4A308 B 0x3A4A30C
	0x03A4A30C MOV X19, X0

ISIL:
	001 Move [X31-16], X30
	002 Compare X0, 0
	003 JumpIfEqual {19}
	004 Move X8, [X0+136]
	005 Compare X8, 0
	006 JumpIfEqual {19}
	007 Move W0, [X8+24]
	008 NotImplemented "Instruction CMP not yet implemented."
	009 Move X0, X31
	010 Add X8, X8, 32
	011 Move X9, [X8]
	012 Compare X9, 0
	013 JumpIfEqual {17}
	014 Add X0, X0, 1
	015 NotImplemented "Instruction CMP not yet implemented."
	016 Move W0, 8
	017 Move X30, [X31+16]
	018 Return X0
	019 Call 0x1C17F20

Method: System.Int32 FindAttachmentDescriptorIndexInList(System.Int32 attachmentIdx, UnityEngine.Rendering.AttachmentDescriptor attachmentDescriptor, UnityEngine.Rendering.AttachmentDescriptor[] attachmentDescriptors)

Disassembly:
	0x03A4943C LDP X20, X19, [X31 + 0x40]
	0x03A49440 LDP X22, X21, [X31 + 0x30]
	0x03A49444 LDP X24, X23, [X31 + 0x20]
	0x03A49448 LDP X30, X25, [X31 + 0x10]
	0x03A4944C LDR X29, [X31], #0x50
	0x03A49450 RET
	0x03A49454 BL 0x1C16F28
	0x03A49458 SUB X31, X31, 0x20
	0x03A4945C STP X31, X30, [X31 + 0x8]
	0x03A49460 ADD W1, W1, W0, 0x4, LSL
	0x03A49464 ADD X0, X31, 0x0
	0x03A49468 MOV X5, X31
	0x03A4946C STR X31, [X31]
	0x03A49470 BL 0x3C22BC8
	0x03A49474 LDP X0, X1, [X31]
	0x03A49478 LDR X30, [X31 + 0x10]
	0x03A4947C ADD X31, X31, 0x20
	0x03A49480 RET
	0x03A49484 SUB X31, X31, 0xB0
	0x03A49488 STP X30, X23, [X31 + 0x80]
	0x03A4948C STP X22, X21, [X31 + 0x90]
	0x03A49490 STP X20, X19, [X31 + 0xA0]
	0x03A49494 ADRP X22, 0x999000
	0x03A49498 LDRB W8, [X22 + 0x18E]
	0x03A4949C MOV X19, X2
	0x03A494A0 MOV X20, X1
	0x03A494A4 MOV X21, X0
	0x03A494A8 TBNZ X8, 0x0, 0x3A494CC
	0x03A494AC ADRP X0, 0x6AA000
	0x03A494B0 LDR X0, [X0 + 0x598]
	0x03A494B4 BL 0x1C16CF4
	0x03A494B8 ADRP X0, 0x70B000
	0x03A494BC LDR X0, [X0 + 0x8C8]
	0x03A494C0 BL 0x1C16CF4
	0x03A494C4 MOVZ W8, 0x1
	0x03A494C8 STRB W8, [X22 + 0x18E]
	0x03A494CC CBZ X20, 0x3A49674
	0x03A494D0 ADRP X23, 0x6AA000
	0x03A494D4 LDRB W8, [X20 + 0x40]
	0x03A494D8 LDR X23, [X23 + 0x598]
	0x03A494DC CBZ W8, 0x3A49548
	0x03A494E0 MOV X0, X20
	0x03A494E4 BL 0x3A43A98
	0x03A494E8 CBZ X0, 0x3A49674
	0x03A494EC LDR X8, [X23]
	0x03A494F0 LDR X22, [X0 + 0x18]
	0x03A494F4 LDR W9, [X8 + 0xE0]
	0x03A494F8 CBNZ W9, 0x3A49504
	0x03A494FC MOV X0, X8
	0x03A49500 BL 0x1C16DFC
	0x03A49504 MOV X0, X22
	0x03A49508 MOV X1, X31
	0x03A4950C MOV X2, X31
	0x03A49510 BL 0x3C3883C
	0x03A49514 TBZ X0, 0x0, 0x3A495B4
	0x03A49518 LDR X8, [X20 + 0x98]
	0x03A4951C CBZ X8, 0x3A49674
	0x03A49520 LDR X0, [X23]
	0x03A49524 LDR X22, [X8 + 0x18]
	0x03A49528 LDR W9, [X0 + 0xE0]
	0x03A4952C CBNZ W9, 0x3A49534
	0x03A49530 BL 0x1C16DFC
	0x03A49534 MOV X0, X22
	0x03A49538 MOV X1, X31
	0x03A4953C MOV X2, X31
	0x03A49540 BL 0x3C3883C
	0x03A49544 TBZ X0, 0x0, 0x3A495B4
	0x03A49548 ADD X8, X21, 0xD8
	0x03A4954C LDUR V0, [X21 + 0xF8]
	0x03A49550 LDR W8, [X8 + 0x30]
	0x03A49554 LDUR V1, [X21 + 0xE8]
	0x03A49558 LDUR V2, [X21 + 0xD8]
	0x03A4955C STR W8, [X19 + 0x30]
	0x03A49560 STP V1, V0, [X19 + 0x10]
	0x03A49564 STR V2, [X19]

ISIL:
	001 Subtract X31, X31, 368
	002 Move [X31+304], X29
	003 Move [X31+312], X30
	004 Move [X31+320], X24
	005 Move [X31+328], X23
	006 Move [X31+336], X22
	007 Move [X31+344], X21
	008 Move [X31+352], X20
	009 Move [X31+360], X19
	010 NotImplemented "Instruction MOVI not yet implemented."
	011 Move [X31+288], X31
	012 Move [X31+256], V0
	013 Move [X31+264], V0
	014 Move [X31+224], V0
	015 Move [X31+232], V0
	016 Move [X31+192], V0
	017 Move [X31+200], V0
	018 Move [X31+11], V0
	019 Move TEMP, X0
	020 And TEMP, TEMP, -2147483648
	021 Compare TEMP, -2147483648
	022 JumpIfEqual {81}
	023 Move X19, X2
	024 Compare X2, 0
	025 JumpIfEqual {96}
	026 Move X20, X1
	027 Move W21, W0
	028 Move W22, W31
	029 Move W24, 120
	030 Move W8, [X19+24]
	031 NotImplemented "Instruction CMP not yet implemented."
	032 NotImplemented "Instruction SMADDL not yet implemented."
	033 Add X1, X8, 32
	034 Add X0, X31, 176
	035 Move W2, 120
	036 Call 0x3EB2AC0
	037 Add X8, X31, 88
	038 Add X0, X31, 176
	039 Move X1, X31
	040 Call AttachmentDescriptor.get_loadStoreTarget, X0
	041 Move X8, [X31+120]
	042 NotImplemented "Instruction LDUR not yet implemented."
	043 NotImplemented "Instruction LDUR not yet implemented."
	044 Move X0, X20
	045 Move [X31+160], X8
	046 Add X8, X31, 88
	047 Move X1, X31
	048 Move [X31+128], V0
	049 Move [X31+136], V1
	050 Call AttachmentDescriptor.get_loadStoreTarget, X0
	051 NotImplemented "Instruction LDUR not yet implemented."
	052 NotImplemented "Instruction LDUR not yet implemented."
	053 Move X8, [X31+120]
	054 Move V2, [X31+128]
	055 Move V3, [X31+144]
	056 Move X9, [X31+160]
	057 Add X0, X31, 48
	058 Add X1, X31, 0
	059 Move X2, X31
	060 Move [X31], V0
	061 Move [X31+8], V1
	062 Move [X31+32], X8
	063 Move [X31+48], V2
	064 Move [X31+56], V3
	065 Move [X31+80], X9
	066 Call RenderTargetIdentifier.op_Equality, X0, X1
	067 Move TEMP, X0
	068 And TEMP, TEMP, 1
	069 Compare TEMP, 1
	070 JumpIfNotEqual {79}
	071 Add X0, X31, 176
	072 Move X1, X31
	073 Call AttachmentDescriptor.get_graphicsFormat, X0
	074 Move W23, W0
	075 Move X0, X20
	076 Move X1, X31
	077 Call AttachmentDescriptor.get_graphicsFormat, X0
	078 NotImplemented "Instruction CMP not yet implemented."
	079 Add W22, W22, 1
	080 NotImplemented "Instruction CMP not yet implemented."
	081 Move TEMP, 0
	082 Not TEMP
	083 Move W22, TEMP
	084 Move W0, W22
	085 Move X20, [X31+352]
	086 Move X19, [X31+360]
	087 Move X22, [X31+336]
	088 Move X21, [X31+344]
	089 Move X24, [X31+320]
	090 Move X23, [X31+328]
	091 Move X29, [X31+304]
	092 Move X30, [X31+312]
	093 Add X31, X31, 368
	094 Return X0
	095 Call 0x1C17F28
	096 Call 0x1C17F20

Method: System.Int32 FindAttachmentDescriptorIndexInList(UnityEngine.Rendering.RenderTargetIdentifier target, UnityEngine.Rendering.AttachmentDescriptor[] attachmentDescriptors)

Disassembly:
	0x03A483E4 MOV X0, X19
	0x03A483E8 BL 0x3EB1AD0
	0x03A483EC LDR X20, [X0]
	0x03A483F0 BL 0x3EB1AE0
	0x03A483F4 ADD X0, X31, 0x508
	0x03A483F8 MOV X1, X31
	0x03A483FC BL 0x39B1DB4
	0x03A48400 CBZ X20, 0x3A48228
	0x03A48404 MOV X0, X20
	0x03A48408 BL 0x1C16F18
	0x03A4840C MOV X20, X31
	0x03A48410 B 0x3A48418
	0x03A48414 MOV X19, X0
	0x03A48418 ADD X0, X31, 0x508
	0x03A4841C MOV X1, X31
	0x03A48420 BL 0x39B1DB4
	0x03A48424 CBNZ X20, 0x3A48430
	0x03A48428 MOV X0, X19
	0x03A4842C BL 0x1D2C690
	0x03A48430 MOV X0, X20
	0x03A48434 BL 0x1C16F18
	0x03A48438 BL 0x1990590
	0x03A4843C SUB X31, X31, 0x170
	0x03A48440 STP X29, X30, [X31 + 0x130]
	0x03A48444 STP X24, X23, [X31 + 0x140]
	0x03A48448 STP X22, X21, [X31 + 0x150]
	0x03A4844C STP X20, X19, [X31 + 0x160]
	0x03A48450 MOVI V0.2D, 0x0
	0x03A48454 STR X31, [X31 + 0x120]
	0x03A48458 STP V0, V0, [X31 + 0x100]
	0x03A4845C STP V0, V0, [X31 + 0xE0]
	0x03A48460 STP V0, V0, [X31 + 0xC0]
	0x03A48464 STR V0, [X31 + 0xB]
	0x03A48468 TBNZ X0, 0x1F, 0x3A48540
	0x03A4846C MOV X19, X2
	0x03A48470 CBZ X2, 0x3A48564
	0x03A48474 MOV X20, X1
	0x03A48478 MOV W21, W0
	0x03A4847C MOV W22, W31
	0x03A48480 MOVZ W24, 0x78
	0x03A48484 LDR W8, [X19 + 0x18]
	0x03A48488 CMP W22, W8
	0x03A4848C B.CS 0x3A48560
	0x03A48490 SMADDL X8, X22, X24, X19
	0x03A48494 ADD X1, X8, 0x20
	0x03A48498 ADD X0, X31, 0xB0
	0x03A4849C MOVZ W2, 0x78
	0x03A484A0 BL 0x3EB1AC0
	0x03A484A4 ADD X8, X31, 0x58
	0x03A484A8 ADD X0, X31, 0xB0
	0x03A484AC MOV X1, X31
	0x03A484B0 BL 0x3C50790
	0x03A484B4 LDR X8, [X31 + 0x78]
	0x03A484B8 LDUR V0, [X31 + 0x58]
	0x03A484BC LDUR V1, [X31 + 0x68]
	0x03A484C0 MOV X0, X20
	0x03A484C4 STR X8, [X31 + 0xA0]

ISIL:
	001 Subtract X31, X31, 304
	002 Move [X31+256], X29
	003 Move [X31+264], X30
	004 Move [X31+272], X22
	005 Move [X31+280], X21
	006 Move [X31+288], X20
	007 Move [X31+296], X19
	008 NotImplemented "Instruction MOVI not yet implemented."
	009 Move [X31+240], X31
	010 Move [X31+208], V0
	011 Move [X31+216], V0
	012 Move [X31+176], V0
	013 Move [X31+184], V0
	014 Move [X31+144], V0
	015 Move [X31+152], V0
	016 Move [X31+8], V0
	017 Compare X1, 0
	018 JumpIfEqual {72}
	019 Move X8, [X1+24]
	020 Move X19, X1
	021 NotImplemented "Instruction CMP not yet implemented."
	022 Move X20, X0
	023 Move X21, X31
	024 And X8, X8, 0
	025 Add X22, X19, 32
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Add X0, X31, 128
	028 Move W2, 120
	029 Move X1, X22
	030 Call 0x3EB2AC0
	031 Add X8, X31, 88
	032 Add X0, X31, 128
	033 Move X1, X31
	034 Call AttachmentDescriptor.get_loadStoreTarget, X0
	035 NotImplemented "Instruction LDUR not yet implemented."
	036 NotImplemented "Instruction LDUR not yet implemented."
	037 Move X8, [X31+120]
	038 Add X0, X31, 48
	039 Add X1, X31, 0
	040 Move [X31+48], V0
	041 Move [X31+56], V1
	042 Move [X31+80], X8
	043 Move X8, [X20+32]
	044 Move V1, [X20]
	045 Move V0, [X20+16]
	046 Move X2, X31
	047 Move [X31+32], X8
	048 Move [X31], V1
	049 Move [X31+8], V0
	050 Call RenderTargetIdentifier.op_Equality, X0, X1
	051 Move TEMP, X0
	052 And TEMP, TEMP, 1
	053 Compare TEMP, 1
	054 JumpIfEqual {62}
	055 Move W8, [X19+24]
	056 Add X21, X21, 1
	057 Add X22, X22, 120
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Move TEMP, 0
	060 Not TEMP
	061 Move W21, TEMP
	062 Move W0, W21
	063 Move X20, [X31+288]
	064 Move X19, [X31+296]
	065 Move X22, [X31+272]
	066 Move X21, [X31+280]
	067 Move X29, [X31+256]
	068 Move X30, [X31+264]
	069 Add X31, X31, 304
	070 Return X0
	071 Call 0x1C17F28
	072 Call 0x1C17F20

Method: System.Int32 GetValidPassIndexCount(System.Int32[] array)

Disassembly:
	0x03A4763C ADD X0, X31, 0x0
	0x03A47640 MOV X1, X22
	0x03A47644 STP V0, V1, [X31]
	0x03A47648 STR X8, [X31 + 0x20]
	0x03A4764C BL 0x3A473E4
	0x03A47650 LDR X8, [X26]
	0x03A47654 ADDS W31, W0, 0x1
	0x03A47658 STR W0, [X8, X21, LSL #2]
	0x03A4765C B.EQ 0x3A476A8
	0x03A47660 LDR X28, [X20 + 0xB8]
	0x03A47664 CBZ X28, 0x3A476F0
	0x03A47668 LDR W8, [X28 + 0x18]
	0x03A4766C MOV W22, W0
	0x03A47670 CMP W0, W8
	0x03A47674 B.CS 0x3A476F4
	0x03A47678 ADD X29, X28, W22, SXTW
	0x03A4767C LDRB W8, [X29 + 0x20]!
	0x03A47680 CBNZ W8, 0x3A476C4
	0x03A47684 MOV X0, X19
	0x03A47688 MOV W1, W21
	0x03A4768C BL 0x3A43DB8

ISIL:
	001 Move [X31-16], X30
	002 Compare X0, 0
	003 JumpIfEqual {15}
	004 Move W9, [X0+24]
	005 Move X8, X0
	006 Subtract W0, W9, 1
	007 Move X10, X31
	008 Add X8, X8, 32
	009 NotImplemented "Instruction CMP not yet implemented."
	010 Move W11, [X8]
	011 Add W31, W11, 1
	012 Add X10, X10, 1
	013 NotImplemented "Instruction CMP not yet implemented."
	014 Move W0, W10
	015 Move X30, [X31+16]
	016 Return X0
	017 Call 0x1C17F28

Method: UnityEngine.Rendering.RTHandle GetFirstAllocatedRTHandle(UnityEngine.Rendering.Universal.ScriptableRenderPass pass)

Disassembly:
	0x03A47984 LDR X0, [X21]
	0x03A47988 LDR X8, [X0 + 0xB8]
	0x03A4798C ADD X0, X31, 0x508
	0x03A47990 MOV X1, X31
	0x03A47994 MOV X3, X31
	0x03A47998 LDR X2, [X8 + 0x8]
	0x03A4799C BL 0x39B1DB0
	0x03A479A0 CBZ X20, 0x3A482A0
	0x03A479A4 LDR X8, [X31 + 0x48]
	0x03A479A8 LDR X8, [X8 + 0x28]
	0x03A479AC CBZ X8, 0x3A482A4
	0x03A479B0 LDRSW X20, [X20 + 0x44]
	0x03A479B4 LDR W9, [X8 + 0x18]
	0x03A479B8 CMP W20, W9
	0x03A479BC B.CS 0x3A482A8
	0x03A479C0 LDR X9, [X31 + 0x48]
	0x03A479C4 LDR X0, [X9 + 0x18]
	0x03A479C8 CBZ X0, 0x3A482AC
	0x03A479CC ADRP X9, 0x70E000
	0x03A479D0 LDR X9, [X9 + 0xD68]
	0x03A479D4 ADD X8, X8, X20, 0x4, LSL
	0x03A479D8 LDP X21, X22, [X8 + 0x20]
	0x03A479DC LDR X3, [X9]
	0x03A479E0 MOV X1, X21
	0x03A479E4 MOV X2, X22
	0x03A479E8 BL 0x29EB764
	0x03A479EC STP X22, X21, [X31 + 0x10]
	0x03A479F0 ADRP X8, 0x706000
	0x03A479F4 LDR X8, [X8 + 0xAA8]
	0x03A479F8 MOV X29, X0
	0x03A479FC LDR X1, [X8]
	0x03A47A00 BL 0x21C2B84
	0x03A47A04 CMP W0, W20
	0x03A47A08 B.NE 0x3A4821C
	0x03A47A0C LDR X8, [X31 + 0x48]
	0x03A47A10 LDR X0, [X8 + 0x30]
	0x03A47A14 CBZ X0, 0x3A482B0
	0x03A47A18 ADRP X8, 0x70E000
	0x03A47A1C LDR X8, [X8 + 0xD78]
	0x03A47A20 LDR X4, [X8]
	0x03A47A24 LDP X2, X1, [X31 + 0x10]
	0x03A47A28 MOV W3, W31
	0x03A47A2C BL 0x29E87A8
	0x03A47A30 LDR X0, [X31 + 0x48]
	0x03A47A34 MOV X1, X29
	0x03A47A38 MOV X2, X24
	0x03A47A3C BL 0x3A46690
	0x03A47A40 CBZ X29, 0x3A482B4
	0x03A47A44 LDR W8, [X29 + 0x18]
	0x03A47A48 CMP W8, 0x1
	0x03A47A4C B.LT 0x3A4821C
	0x03A47A50 LDR X9, [X31 + 0x38]
	0x03A47A54 MOV W21, W31
	0x03A47A58 MOVN W22, 0x0
	0x03A47A5C STR W31, [X31 + 0x34]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x99C000
	008 Move W8, [X20+396]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x6AD000
	015 Move X0, [X0+1432]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+396], W8
	019 Compare X19, 0
	020 JumpIfEqual {53}
	021 Move X8, [X19+120]
	022 Compare X8, 0
	023 JumpIfEqual {53}
	024 Move X22, 0x6AD000
	025 Move X22, [X22+1432]
	026 Move W21, W31
	027 Move X9, [X8+24]
	028 NotImplemented "Instruction CMP not yet implemented."
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move X23, W21
	031 Add X8, X8, X23
	032 Move X8, [X8+32]
	033 Compare X8, 0
	034 JumpIfEqual {53}
	035 Move X0, [X22]
	036 Move X20, [X8+24]
	037 Move W9, [X0+224]
	038 Compare W9, 0
	039 JumpIfNotEqual {41}
	040 Call 0x1C17DFC
	041 Move X0, X20
	042 Move X1, X31
	043 Move X2, X31
	044 Call Object.op_Inequality, X0, X1
	045 Move TEMP, X0
	046 And TEMP, TEMP, 1
	047 Compare TEMP, 1
	048 JumpIfEqual {56}
	049 Move X8, [X19+120]
	050 Add W21, W21, 1
	051 Compare X8, 0
	052 JumpIfNotEqual {27}
	053 Call 0x1C17F20
	054 Compare W9, 0
	055 JumpIfNotEqual {62}
	056 Move X8, [X19+120]
	057 Compare X8, 0
	058 JumpIfEqual {53}
	059 Move W9, [X8+24]
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Add X8, X8, X23
	062 Add X8, X8, 32
	063 Move X0, [X8]
	064 Move X20, [X31+32]
	065 Move X19, [X31+40]
	066 Move X22, [X31+16]
	067 Move X21, [X31+24]
	068 Move X30, [X31+48]
	069 Move X23, [X31+56]
	070 Return X0
	071 Call 0x1C17F28

Method: System.Boolean PassHasInputAttachments(UnityEngine.Rendering.Universal.ScriptableRenderPass renderPass)

Disassembly:
	0x03A484C8 ADD X8, X31, 0x58
	0x03A484CC MOV X1, X31
	0x03A484D0 STP V0, V1, [X31 + 0x80]
	0x03A484D4 BL 0x3C50790
	0x03A484D8 LDUR V0, [X31 + 0x58]
	0x03A484DC LDUR V1, [X31 + 0x68]
	0x03A484E0 LDR X8, [X31 + 0x78]
	0x03A484E4 LDP V2, V3, [X31 + 0x80]
	0x03A484E8 LDR X9, [X31 + 0xA0]
	0x03A484EC ADD X0, X31, 0x30
	0x03A484F0 ADD X1, X31, 0x0
	0x03A484F4 MOV X2, X31
	0x03A484F8 STP V0, V1, [X31]
	0x03A484FC STR X8, [X31 + 0x20]
	0x03A48500 STP V2, V3, [X31 + 0x30]

ISIL:
	001 Move [X31-16], X30
	002 Compare X0, 0
	003 JumpIfEqual {15}
	004 Move X8, [X0+136]
	005 Compare X8, 0
	006 JumpIfEqual {15}
	007 Move W9, [X8+24]
	008 NotImplemented "Instruction CMP not yet implemented."
	009 Move X8, [X8+32]
	010 NotImplemented "Instruction CMP not yet implemented."
	011 NotImplemented "Instruction CSET not yet implemented."
	012 Move W0, 1
	013 Move X30, [X31+16]
	014 Return X0
	015 Call 0x1C17F20

Method: UnityEngine.Hash128 CreateRenderPassHash(System.Int32 width, System.Int32 height, System.Int32 depthID, System.Int32 sample, System.UInt32 hashIndex)

Disassembly:
	0x03A4A458 MOV X0, X8
	0x03A4A45C BL 0x1C16DFC
	0x03A4A460 LDR X1, [X24]
	0x03A4A464 ADRP X21, 0x70A000
	0x03A4A468 LDR X21, [X21 + 0x20]
	0x03A4A46C AND W2, W20, 0x1
	0x03A4A470 MOV X0, X19
	0x03A4A474 MOV X3, X31
	0x03A4A478 BL 0x39E9618
	0x03A4A47C LDR X0, [X22]
	0x03A4A480 LDR W8, [X0 + 0xE0]

ISIL:
	001 Subtract X31, X31, 32
	002 Move [X31+8], X31
	003 Move [X31+16], X30
	004 Add W1, W1, W0
	005 Add X0, X31, 0
	006 Move X5, X31
	007 Move [X31], X31
	008 Call Hash128..ctor, X0, X1, X2, X3, X4
	009 Move X0, [X31]
	010 Move X1, [X31+8]
	011 Move X30, [X31+16]
	012 Add X31, X31, 32
	013 Return X0

Method: UnityEngine.Hash128 CreateRenderPassHash(UnityEngine.Rendering.Universal.ScriptableRenderer/RenderPassDescriptor desc, System.UInt32 hashIndex)

Disassembly:
	0x03A475AC STP X31, X31, [X31 + 0x50]
	0x03A475B0 BL 0x23D58AC
	0x03A475B4 CBZ X19, 0x3A476F0
	0x03A475B8 LDR V0, [X31 + 0x5]
	0x03A475BC CMP W22, 0x1
	0x03A475C0 STUR V0, [X19 + 0x58]
	0x03A475C4 B.LT 0x3A476D0
	0x03A475C8 ADRP X24, 0x6AC000
	0x03A475CC ADRP X25, 0x70E000
	0x03A475D0 LDR X24, [X24 + 0xA28]
	0x03A475D4 LDR X25, [X25 + 0xD80]
	0x03A475D8 MOV X21, X31
	0x03A475DC ADD X26, X19, 0x58
	0x03A475E0 MOV W27, W22
	0x03A475E4 LDR X8, [X19 + 0x88]
	0x03A475E8 CBZ X8, 0x3A476F0
	0x03A475EC LDR W9, [X8 + 0x18]
	0x03A475F0 CMP X21, X9
	0x03A475F4 B.CS 0x3A476F4
	0x03A475F8 ADD X8, X8, X21, 0x3, LSL
	0x03A475FC LDR X0, [X8 + 0x20]
	0x03A47600 ADD X8, X31, 0x28
	0x03A47604 MOV X1, X31
	0x03A47608 BL 0x39CDF64
	0x03A4760C LDUR V0, [X31 + 0x28]
	0x03A47610 LDUR V1, [X31 + 0x38]
	0x03A47614 LDR X8, [X31 + 0x48]
	0x03A47618 LDR X0, [X23]
	0x03A4761C STP V0, V1, [X31 + 0x50]
	0x03A47620 STR X8, [X31 + 0x70]
	0x03A47624 LDR W8, [X0 + 0xE0]
	0x03A47628 LDR X22, [X20 + 0x38]
	0x03A4762C CBNZ W8, 0x3A47634
	0x03A47630 BL 0x1C16DFC
	0x03A47634 LDP V0, V1, [X31 + 0x50]
	0x03A47638 LDR X8, [X31 + 0x70]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0x99C000
	009 Move X22, 0x70E000
	010 Move W8, [X23+397]
	011 Move X22, [X22+2248]
	012 Move W19, W2
	013 Move X20, X1
	014 Move X21, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {24}
	019 Move X0, 0x70E000
	020 Move X0, [X0+2248]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X23+397], W8
	024 Move X0, [X22]
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 Move X8, X21
	030 ShiftRight X8, 32
	031 And X8, X8, 0x7FFFFFFF
	032 Move X2, X20
	033 ShiftRight X2, 32
	034 And X2, X2, 0x7FFFFFFF
	035 Add W1, W8, W21
	036 Add X0, X31, 0
	037 Move W3, W20
	038 Move W4, W19
	039 Move X5, X31
	040 Move [X31], X31
	041 Move [X31+8], X31
	042 Call Hash128..ctor, X0, X1, X2, X3, X4
	043 Move X0, [X31]
	044 Move X1, [X31+8]
	045 Move X20, [X31+48]
	046 Move X19, [X31+56]
	047 Move X22, [X31+32]
	048 Move X21, [X31+40]
	049 Move X30, [X31+16]
	050 Move X23, [X31+24]
	051 Add X31, X31, 64
	052 Return X0

Method: System.Void GetRenderTextureDescriptor(ref UnityEngine.Rendering.Universal.CameraData cameraData, UnityEngine.Rendering.Universal.ScriptableRenderPass renderPass, out UnityEngine.RenderTextureDescriptor targetRT)

Disassembly:
	0x03A4A484 CBNZ W8, 0x3A4A48C
	0x03A4A488 BL 0x1C16DFC
	0x03A4A48C ADD X0, X31, 0x70
	0x03A4A490 ADD X1, X31, 0x60
	0x03A4A494 ADD X2, X31, 0x50
	0x03A4A498 ADD X3, X31, 0x4C
	0x03A4A49C BL 0x3A4A548
	0x03A4A4A0 LDR X0, [X21]
	0x03A4A4A4 LDR W8, [X0 + 0xE0]
	0x03A4A4A8 CBNZ W8, 0x3A4A4B0
	0x03A4A4AC BL 0x1C16DFC
	0x03A4A4B0 CBZ X19, 0x3A4A544
	0x03A4A4B4 LDR X8, [X21]
	0x03A4A4B8 LDP S1, S2, [X31 + 0x54]
	0x03A4A4BC LDR V0, [X31 + 0x50]
	0x03A4A4C0 FMOV S3, W31
	0x03A4A4C4 LDR X8, [X8 + 0xB8]
	0x03A4A4C8 MOV X0, X19
	0x03A4A4CC MOV X2, X31
	0x03A4A4D0 LDR W1, [X8 + 0x94]
	0x03A4A4D4 BL 0x3C4CED8
	0x03A4A4D8 LDR X8, [X21]
	0x03A4A4DC LDP S0, S1, [X31 + 0x60]
	0x03A4A4E0 LDR V2, [X31 + 0x68]
	0x03A4A4E4 FMOV S3, W31
	0x03A4A4E8 LDR X8, [X8 + 0xB8]
	0x03A4A4EC MOV X0, X19
	0x03A4A4F0 MOV X2, X31
	0x03A4A4F4 LDR W1, [X8 + 0x98]
	0x03A4A4F8 BL 0x3C4CED8
	0x03A4A4FC LDR X8, [X21]
	0x03A4A500 LDR V3, [X31 + 0x4C]
	0x03A4A504 MOV X0, X19
	0x03A4A508 MOV V0.16B, V10.16B
	0x03A4A50C LDR X8, [X8 + 0xB8]
	0x03A4A510 MOV V1.16B, V8.16B
	0x03A4A514 MOV V2.16B, V9.16B
	0x03A4A518 MOV X2, X31
	0x03A4A51C LDR W1, [X8 + 0x9C]
	0x03A4A520 BL 0x3C4CED8
	0x03A4A524 LDP X20, X19, [X31 + 0x100]
	0x03A4A528 LDP X22, X21, [X31 + 0xF0]
	0x03A4A52C LDP X24, X23, [X31 + 0xE0]
	0x03A4A530 LDP X29, X30, [X31 + 0xD0]
	0x03A4A534 LDP D9, D8, [X31 + 0xC0]
	0x03A4A538 LDR V10, [X31 + 0xB0]
	0x03A4A53C ADD X31, X31, 0x110
	0x03A4A540 RET
	0x03A4A544 BL 0x1C16F20
	0x03A4A548 SUB X31, X31, 0x120
	0x03A4A54C STP D15, D14, [X31 + 0x90]
	0x03A4A550 STP D13, D12, [X31 + 0xA0]
	0x03A4A554 STP D11, D10, [X31 + 0xB0]
	0x03A4A558 STP D9, D8, [X31 + 0xC0]
	0x03A4A55C STR X29, [X31 + 0xD0]
	0x03A4A560 STP X30, X25, [X31 + 0xE0]
	0x03A4A564 STP X24, X23, [X31 + 0xF0]
	0x03A4A568 STP X22, X21, [X31 + 0x100]
	0x03A4A56C STP X20, X19, [X31 + 0x110]
	0x03A4A570 LDP V1, V0, [X0 + 0x20]
	0x03A4A574 LDP V3, V2, [X0]
	0x03A4A578 MOV X20, X1
	0x03A4A57C ADD X8, X31, 0x10
	0x03A4A580 ADD X0, X31, 0x50
	0x03A4A584 MOV X1, X31
	0x03A4A588 MOV X19, X3
	0x03A4A58C MOV X21, X2
	0x03A4A590 STP V1, V0, [X31 + 0x70]
	0x03A4A594 STP V3, V2, [X31 + 0x50]
	0x03A4A598 BL 0x3C272FC
	0x03A4A59C LDP V1, V0, [X31 + 0x10]
	0x03A4A5A0 LDP V2, V3, [X31 + 0x30]
	0x03A4A5A4 ADRP X22, 0x98E000
	0x03A4A5A8 LDRB W8, [X22 + 0x786]
	0x03A4A5AC STR V1, [X31 + 0x5]
	0x03A4A5B0 STP V0, V2, [X31 + 0x60]
	0x03A4A5B4 LDR V0, [X31 + 0x60]
	0x03A4A5B8 LDP S14, S15, [X31 + 0x50]
	0x03A4A5BC LDR V8, [X31 + 0x58]
	0x03A4A5C0 LDP S9, S13, [X31 + 0x70]
	0x03A4A5C4 STR D0, [X31 + 0xD8]
	0x03A4A5C8 LDR V0, [X31 + 0x68]
	0x03A4A5CC LDR V10, [X31 + 0x78]
	0x03A4A5D0 STR V3, [X31 + 0x8]
	0x03A4A5D4 STR S0, [X31 + 0xC]
	0x03A4A5D8 CBNZ W8, 0x3A4A5F0
	0x03A4A5DC ADRP X0, 0x6A9000
	0x03A4A5E0 LDR X0, [X0 + 0x5A0]
	0x03A4A5E4 BL 0x1C16CF4
	0x03A4A5E8 MOVZ W8, 0x1
	0x03A4A5EC STRB W8, [X22 + 0x786]
	0x03A4A5F0 ADRP X22, 0x6A9000
	0x03A4A5F4 LDR X22, [X22 + 0x5A0]
	0x03A4A5F8 ADRP X23, 0x98F000
	0x03A4A5FC LDR X8, [X22]
	0x03A4A600 LDR X8, [X8 + 0xB8]
	0x03A4A604 LDP S3, S12, [X8 + 0x1C]
	0x03A4A608 LDR V11, [X8 + 0x18]
	0x03A4A60C LDRB W8, [X23 + 0x5AA]
	0x03A4A610 FMUL S0, S13, S12
	0x03A4A614 FMUL S1, S10, S3
	0x03A4A618 FMUL S2, S10, S11
	0x03A4A61C FSUB S4, S0, S1
	0x03A4A620 FMUL S0, S9, S12
	0x03A4A624 MOV V10.16B, V3.16B
	0x03A4A628 FMUL S1, S9, S3
	0x03A4A62C FMUL S3, S13, S11
	0x03A4A630 FSUB S9, S2, S0
	0x03A4A634 FSUB S2, S1, S3
	0x03A4A638 FMUL S0, S4, S4
	0x03A4A63C FMUL S1, S9, S9
	0x03A4A640 FADD S0, S0, S1
	0x03A4A644 FMUL S1, S2, S2
	0x03A4A648 FADD S13, S1, S0
	0x03A4A64C STP S2, S4, [X31 + 0x4]
	0x03A4A650 CBNZ W8, 0x3A4A668
	0x03A4A654 ADRP X0, 0x6B0000
	0x03A4A658 LDR X0, [X0 + 0x4B8]
	0x03A4A65C BL 0x1C16CF4
	0x03A4A660 MOVZ W8, 0x1
	0x03A4A664 STRB W8, [X23 + 0x5AA]
	0x03A4A668 ADRP X24, 0x6B0000
	0x03A4A66C LDR X24, [X24 + 0x4B8]
	0x03A4A670 ADRP X9, 0xFFFFFFFFFD0A0000
	0x03A4A674 LDR V6, [X9 + 0x240]

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+128], X30
	003 Move [X31+136], X23
	004 Move [X31+144], X22
	005 Move [X31+152], X21
	006 Move [X31+160], X20
	007 Move [X31+168], X19
	008 Move X22, 0x999000
	009 Move W8, [X22+398]
	010 Move X19, X2
	011 Move X20, X1
	012 Move X21, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x6AA000
	018 Move X0, [X0+1432]
	019 Call 0x1C17CF4
	020 Move X0, 0x70B000
	021 Move X0, [X0+2248]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X22+398], W8
	025 Compare X20, 0
	026 JumpIfEqual {161}
	027 Move X23, 0x6AA000
	028 Move W8, [X20+64]
	029 Move X23, [X23+1432]
	030 Compare W8, 0
	031 JumpIfEqual {68}
	032 Move X0, X20
	033 Call ScriptableRenderPass.get_colorAttachmentHandle, X0
	034 Compare X0, 0
	035 JumpIfEqual {161}
	036 Move X8, [X23]
	037 Move X22, [X0+24]
	038 Move W9, [X8+224]
	039 Compare W9, 0
	040 JumpIfNotEqual {43}
	041 Move X0, X8
	042 Call 0x1C17DFC
	043 Move X0, X22
	044 Move X1, X31
	045 Move X2, X31
	046 Call Object.op_Equality, X0, X1
	047 Move TEMP, X0
	048 And TEMP, TEMP, 1
	049 Compare TEMP, 1
	050 JumpIfNotEqual {99}
	051 Move X8, [X20+152]
	052 Compare X8, 0
	053 JumpIfEqual {161}
	054 Move X0, [X23]
	055 Move X22, [X8+24]
	056 Move W9, [X0+224]
	057 Compare W9, 0
	058 JumpIfNotEqual {60}
	059 Call 0x1C17DFC
	060 Move X0, X22
	061 Move X1, X31
	062 Move X2, X31
	063 Call Object.op_Equality, X0, X1
	064 Move TEMP, X0
	065 And TEMP, TEMP, 1
	066 Compare TEMP, 1
	067 JumpIfNotEqual {99}
	068 Add X8, X21, 216
	069 NotImplemented "Instruction LDUR not yet implemented."
	070 Move W8, [X8+48]
	071 NotImplemented "Instruction LDUR not yet implemented."
	072 NotImplemented "Instruction LDUR not yet implemented."
	073 Move [X19+48], W8
	074 Move [X19+16], V1
	075 Move [X19+24], V0
	076 Move [X19], V2
	077 Move X0, [X23]
	078 Move X20, [X21+208]
	079 Move W8, [X0+224]
	080 Compare W8, 0
	081 JumpIfNotEqual {83}
	082 Call 0x1C17DFC
	083 Move X0, X20
	084 Move X1, X31
	085 Move X2, X31
	086 Call Object.op_Inequality, X0, X1
	087 Move TEMP, X0
	088 And TEMP, TEMP, 1
	089 Compare TEMP, 1
	090 JumpIfNotEqual {153}
	091 Move X0, X21
	092 Move X1, X31
	093 Call CameraData.get_scaledWidth, X0
	094 Move [X19], W0
	095 Move X0, X21
	096 Move X1, X31
	097 Call CameraData.get_scaledHeight, X0
	098 Move [X19+4], W0
	099 Move X8, 0x70B000
	100 Move X8, [X8+2248]
	101 Move X0, [X8]
	102 Move W8, [X0+224]
	103 Compare W8, 0
	104 JumpIfNotEqual {106}
	105 Call 0x1C17DFC
	106 Move X0, X20
	107 Call ScriptableRenderer.GetFirstAllocatedRTHandle, X0
	108 Compare X0, 0
	109 JumpIfEqual {161}
	110 Move X21, X0
	111 Move X0, [X23]
	112 Move X22, [X21+24]
	113 Move W8, [X0+224]
	114 Compare W8, 0
	115 JumpIfNotEqual {117}
	116 Call 0x1C17DFC
	117 Move X0, X22
	118 Move X1, X31
	119 Move X2, X31
	120 Call Object.op_Inequality, X0, X1
	121 Move TEMP, X0
	122 And TEMP, TEMP, 1
	123 Compare TEMP, 1
	124 JumpIfNotEqual {128}
	125 Move X0, [X21+24]
	126 Compare X0, 0
	127 JumpIfNotEqual {134}
	128 Move X8, [X20+152]
	129 Compare X8, 0
	130 JumpIfEqual {161}
	131 Move X0, [X8+24]
	132 Compare X0, 0
	133 JumpIfEqual {161}
	134 Add X8, X31, 8
	135 Move X1, X31
	136 Call RenderTexture.get_descriptor, X0
	137 NotImplemented "Instruction LDUR not yet implemented."
	138 NotImplemented "Instruction LDUR not yet implemented."
	139 NotImplemented "Instruction LDUR not yet implemented."
	140 Move W8, [X31+56]
	141 Move [X31+64], V0
	142 Move [X31+72], V1
	143 Move [X31+6], V2
	144 Move V1, [X31+80]
	145 Move V0, [X31+96]
	146 Move V2, [X31+4]
	147 Move [X31+112], W8
	148 Move W8, W8
	149 Move [X19+48], W8
	150 Move [X19+16], V1
	151 Move [X19+24], V0
	152 Move [X19], V2
	153 Move X20, [X31+160]
	154 Move X19, [X31+168]
	155 Move X22, [X31+144]
	156 Move X21, [X31+152]
	157 Move X30, [X31+128]
	158 Move X23, [X31+136]
	159 Add X31, X31, 176
	160 Return 
	161 Call 0x1C17F20

Method: UnityEngine.Rendering.Universal.ScriptableRenderer/RenderPassDescriptor InitializeRenderPassDescriptor(ref UnityEngine.Rendering.Universal.CameraData cameraData, UnityEngine.Rendering.Universal.ScriptableRenderPass renderPass)

Disassembly:
	0x03A474A0 B.LT 0x3A47430
	0x03A474A4 MOVN W21, 0x0
	0x03A474A8 MOV W0, W21
	0x03A474AC LDP X20, X19, [X31 + 0x120]
	0x03A474B0 LDP X22, X21, [X31 + 0x110]
	0x03A474B4 LDP X29, X30, [X31 + 0x100]
	0x03A474B8 ADD X31, X31, 0x130
	0x03A474BC RET
	0x03A474C0 BL 0x1C16F28
	0x03A474C4 BL 0x1C16F20
	0x03A474C8 STR X30, [X31 - 0x10]!
	0x03A474CC CBZ X0, 0x3A47500
	0x03A474D0 LDR X8, [X0 + 0x88]
	0x03A474D4 CBZ X8, 0x3A47500
	0x03A474D8 LDR W9, [X8 + 0x18]
	0x03A474DC CMP W9, 0x8
	0x03A474E0 B.NE 0x3A474F4
	0x03A474E4 LDR X8, [X8 + 0x20]
	0x03A474E8 CMP X8, 0x0
	0x03A474EC CSET W0, NE
	0x03A474F0 B 0x3A474F8
	0x03A474F4 MOVZ W0, 0x1
	0x03A474F8 LDR X30, [X31], #0x10
	0x03A474FC RET
	0x03A47500 BL 0x1C16F20
	0x03A47504 SUB X31, X31, 0xE0
	0x03A47508 STP X29, X30, [X31 + 0x80]
	0x03A4750C STP X28, X27, [X31 + 0x90]
	0x03A47510 STP X26, X25, [X31 + 0xA0]
	0x03A47514 STP X24, X23, [X31 + 0xB0]
	0x03A47518 STP X22, X21, [X31 + 0xC0]
	0x03A4751C STP X20, X19, [X31 + 0xD0]
	0x03A47520 ADRP X21, 0x99B000
	0x03A47524 ADRP X23, 0x70D000
	0x03A47528 LDRB W8, [X21 + 0x188]
	0x03A4752C LDR X23, [X23 + 0x8C8]
	0x03A47530 MOV X19, X1
	0x03A47534 MOV X20, X0
	0x03A47538 TBNZ X8, 0x0, 0x3A47574
	0x03A4753C ADRP X0, 0x6AC000
	0x03A47540 LDR X0, [X0 + 0xA28]
	0x03A47544 BL 0x1C16CF4
	0x03A47548 ADRP X0, 0x6D6000
	0x03A4754C LDR X0, [X0 + 0x138]
	0x03A47550 BL 0x1C16CF4
	0x03A47554 ADRP X0, 0x70D000
	0x03A47558 LDR X0, [X0 + 0x8C8]
	0x03A4755C BL 0x1C16CF4
	0x03A47560 ADRP X0, 0x70E000
	0x03A47564 LDR X0, [X0 + 0xD80]
	0x03A47568 BL 0x1C16CF4
	0x03A4756C MOVZ W8, 0x1
	0x03A47570 STRB W8, [X21 + 0x188]
	0x03A47574 LDR X0, [X23]
	0x03A47578 ADRP X21, 0x6D6000
	0x03A4757C LDR W8, [X0 + 0xE0]
	0x03A47580 LDR X21, [X21 + 0x138]
	0x03A47584 CBNZ W8, 0x3A4758C
	0x03A47588 BL 0x1C16DFC
	0x03A4758C MOV X0, X19
	0x03A47590 BL 0x3A492C8
	0x03A47594 LDR X4, [X21]
	0x03A47598 MOV W22, W0
	0x03A4759C ADD X0, X31, 0x50
	0x03A475A0 MOVZ W2, 0x2
	0x03A475A4 MOVZ W3, 0x1
	0x03A475A8 MOV W1, W22

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+80], X30
	003 Move [X31+88], X23
	004 Move [X31+96], X22
	005 Move [X31+104], X21
	006 Move [X31+112], X20
	007 Move [X31+120], X19
	008 Move X23, 0x99C000
	009 Move X22, 0x70E000
	010 Move W8, [X23+399]
	011 Move X22, [X22+2248]
	012 Move X19, X2
	013 Move X21, X1
	014 Move X20, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {24}
	019 Move X0, 0x70E000
	020 Move X0, [X0+2248]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X23+399], W8
	024 Move X0, [X22]
	025 NotImplemented "Instruction MOVI not yet implemented."
	026 Move [X31+48], W31
	027 Move [X31+16], V0
	028 Move [X31+24], V0
	029 Move [X31], V0
	030 Move W8, [X0+224]
	031 Compare W8, 0
	032 JumpIfNotEqual {34}
	033 Call 0x1C17DFC
	034 Add X2, X31, 0
	035 Move X0, X21
	036 Move X1, X19
	037 Call ScriptableRenderer.GetRenderTextureDescriptor, X0, X1, X2
	038 Compare X19, 0
	039 JumpIfEqual {86}
	040 Move W8, [X19+64]
	041 Compare W8, 0
	042 JumpIfEqual {44}
	043 Move X20, [X19+152]
	044 Move X0, X20
	045 Call ScriptableRenderer.get_cameraDepthTargetHandle, X0
	046 Move X20, X0
	047 Add X0, X31, 0
	048 Move X1, X31
	049 Call RenderTextureDescriptor.get_graphicsFormat, X0
	050 Compare W0, 0
	051 JumpIfEqual {56}
	052 Compare X20, 0
	053 JumpIfEqual {86}
	054 Move X8, [X20]
	055 Move X0, X20
	056 Move W8, [X31+28]
	057 Compare W8, 0
	058 JumpIfEqual {52}
	059 Move X0, X19
	060 Call ScriptableRenderPass.get_colorAttachmentHandle, X0
	061 Compare X0, 0
	062 JumpIfEqual {86}
	063 Move X8, [X0]
	064 Move X9, [X8+344]
	065 Move X1, [X8+352]
	066 NotImplemented "Instruction BLR not yet implemented."
	067 Move W1, [X31]
	068 Move W2, [X31+4]
	069 Move W3, [X31+8]
	070 Move W4, W0
	071 Add X0, X31, 64
	072 Move X5, X31
	073 Move [X31+64], X31
	074 Move [X31+72], X31
	075 Call RenderPassDescriptor..ctor, X0, X1, X2, X3, X4
	076 Move X0, [X31+64]
	077 Move X1, [X31+72]
	078 Move X20, [X31+112]
	079 Move X19, [X31+120]
	080 Move X22, [X31+96]
	081 Move X21, [X31+104]
	082 Move X30, [X31+80]
	083 Move X23, [X31+88]
	084 Add X31, X31, 128
	085 Return X0
	086 Call 0x1C17F20

Method: System.Int32 SupportedCameraStackingTypes()

Disassembly:
	0x03A4A6FC LDR V1, [X8 + 0x17C]
	0x03A4A700 FSQRT S0, S13

ISIL:
	001 Move W0, W31
	002 Return X0

Method: System.Boolean SupportsCameraStackingType(UnityEngine.Rendering.Universal.CameraRenderType cameraRenderType)

Disassembly:
	0x03A4A704 FCMP S0, S1
	0x03A4A708 B.LE 0x3A4A724
	0x03A4A70C LDR V1, [X31 + 0x8]
	0x03A4A710 FDIV S15, S9, S0
	0x03A4A714 FDIV S14, S1, S0
	0x03A4A718 LDR V1, [X31 + 0x4]
	0x03A4A71C FDIV S8, S1, S0
	0x03A4A720 B 0x3A4A75C
	0x03A4A724 ADRP X25, 0x98E000
	0x03A4A728 LDRB W8, [X25 + 0x783]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X0]
	004 Move W19, W1
	005 Move X9, [X8+392]
	006 Move X8, [X8+400]
	007 Move X1, X8
	008 NotImplemented "Instruction BLR not yet implemented."
	009 NotImplemented "Instruction LSRV not yet implemented."
	010 And W0, W8, 1
	011 Move X30, [X31+16]
	012 Move X19, [X31+24]
	013 Return X0

Method: UnityEngine.Rendering.ProfilingSampler get_profilingExecute()

Disassembly:
	0x03A4A72C CBNZ W8, 0x3A4A74C
	0x03A4A730 ADRP X0, 0x6A9000

ISIL:
	001 Move X0, [X0+208]
	002 Return X0

Method: System.Void set_profilingExecute(UnityEngine.Rendering.ProfilingSampler value)

Disassembly:
	0x03A4A734 LDR X0, [X0 + 0x5A0]
	0x03A4A738 MOV V8.16B, V6.16B

ISIL:
	001 Move [X0+208], X1
	002 Return 

Method: UnityEngine.Rendering.Universal.DebugHandler get_DebugHandler()

Disassembly:
	0x03A4A73C BL 0x1C16CF4
	0x03A4A740 MOV V6.16B, V8.16B

ISIL:
	001 Move X0, [X0+224]
	002 Return X0

Method: System.Void SetCameraMatrices(UnityEngine.Rendering.CommandBuffer cmd, ref UnityEngine.Rendering.Universal.CameraData cameraData, System.Boolean setInverseMatrices)

Disassembly:
	0x03A4A744 MOVZ W8, 0x1
	0x03A4A748 STRB W8, [X25 + 0x783]
	0x03A4A74C LDR X8, [X22]
	0x03A4A750 LDR X8, [X8 + 0xB8]
	0x03A4A754 LDP S14, S15, [X8]
	0x03A4A758 LDR V8, [X8 + 0x8]
	0x03A4A75C FMUL S0, S10, S8
	0x03A4A760 FMUL S1, S12, S15
	0x03A4A764 FMUL S2, S12, S14
	0x03A4A768 FMUL S3, S11, S8
	0x03A4A76C FMUL S4, S11, S15
	0x03A4A770 FMUL S5, S10, S14
	0x03A4A774 FSUB S0, S0, S1
	0x03A4A778 FSUB S1, S2, S3
	0x03A4A77C FSUB S2, S4, S5
	0x03A4A780 STP S14, S15, [X20]
	0x03A4A784 STR S8, [X20 + 0x8]
	0x03A4A788 STP S0, S1, [X21]
	0x03A4A78C STR S2, [X21 + 0x8]
	0x03A4A790 LDRB W8, [X23 + 0x5AA]
	0x03A4A794 FMUL S0, S0, S0
	0x03A4A798 FMUL S1, S1, S1
	0x03A4A79C FADD S0, S0, S1
	0x03A4A7A0 FMUL S1, S2, S2
	0x03A4A7A4 FADD S8, S1, S0
	0x03A4A7A8 CBNZ W8, 0x3A4A7C8
	0x03A4A7AC ADRP X0, 0x6B0000
	0x03A4A7B0 LDR X0, [X0 + 0x4B8]
	0x03A4A7B4 MOV V9.16B, V6.16B
	0x03A4A7B8 BL 0x1C16CF4
	0x03A4A7BC MOV V6.16B, V9.16B
	0x03A4A7C0 MOVZ W8, 0x1
	0x03A4A7C4 STRB W8, [X23 + 0x5AA]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x999000
	008 Move X22, 0x70B000
	009 Move W8, [X23+400]
	010 Move X22, [X22+2248]
	011 Move W21, W2
	012 Move X19, X1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0x70B000
	019 Move X0, [X0+2248]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X23+400], W8
	023 Move X0, X19
	024 Move X1, X31
	025 Call CameraData.IsCameraProjectionMatrixFlipped, X0
	026 Move X8, [X22]
	027 Move W22, W0
	028 Move W9, [X8+224]
	029 Compare W9, 0
	030 JumpIfNotEqual {33}
	031 Move X0, X8
	032 Call 0x1C17DFC
	033 And W2, W21, 1
	034 And W3, W22, 1
	035 Move X0, X20
	036 Move X1, X19
	037 Move X20, [X31+32]
	038 Move X19, [X31+40]
	039 Move X22, [X31+16]
	040 Move X21, [X31+24]
	041 Move X30, [X31+48]
	042 Move X23, [X31+56]

Method: System.Void SetCameraMatrices(UnityEngine.Rendering.CommandBuffer cmd, ref UnityEngine.Rendering.Universal.CameraData cameraData, System.Boolean setInverseMatrices, System.Boolean isTargetFlipped)

Disassembly:
	0x03A4A7C8 LDR X8, [X24]
	0x03A4A7CC FABS S0, S8
	0x03A4A7D0 FMOV S10, W31
	0x03A4A7D4 FMOV S2, 8
	0x03A4A7D8 LDR X8, [X8 + 0xB8]
	0x03A4A7DC FMAXNM S0, S0, S10
	0x03A4A7E0 FMUL S0, S0, S6
	0x03A4A7E4 LDR V1, [X8]
	0x03A4A7E8 FMUL S1, S1, S2
	0x03A4A7EC FCMP S0, S1
	0x03A4A7F0 FCSEL S0, S0, S1, GT
	0x03A4A7F4 FABD S1, S10, S10
	0x03A4A7F8 FCMP S1, S0
	0x03A4A7FC LDR V1, [X31 + 0xD8]
	0x03A4A800 LDR V0, [X31 + 0xC]
	0x03A4A804 B.MI 0x3A4A8AC
	0x03A4A808 ADRP X23, 0x98E000
	0x03A4A80C LDR V8, [X21]
	0x03A4A810 LDRB W8, [X23 + 0x785]
	0x03A4A814 LDR V9, [X21 + 0x8]
	0x03A4A818 CBNZ W8, 0x3A4A830
	0x03A4A81C ADRP X0, 0x6A9000
	0x03A4A820 LDR X0, [X0 + 0x5A8]
	0x03A4A824 BL 0x1C16CF4
	0x03A4A828 MOVZ W8, 0x1
	0x03A4A82C STRB W8, [X23 + 0x785]
	0x03A4A830 ADRP X8, 0x6A9000
	0x03A4A834 LDR X8, [X8 + 0x5A8]
	0x03A4A838 LDR X0, [X8]
	0x03A4A83C LDR W8, [X0 + 0xE0]
	0x03A4A840 CBNZ W8, 0x3A4A848
	0x03A4A844 BL 0x1C16DFC
	0x03A4A848 ADRP X8, 0xFFFFFFFFFD0A0000
	0x00000000 INVALID
	0x03A4A850 LDR V1, [X8 + 0x17C]
	0x03A4A854 FADDP S0, V0.2S
	0x03A4A858 FMUL S2, S9, S9
	0x03A4A85C FADD S0, S2, S0
	0x03A4A860 FSQRT S0, S0
	0x03A4A864 FCMP S0, S1
	0x03A4A868 B.LE 0x3A4A87C
	0x03A4A86C UNIMPLEMENTED
	0x00000000 INVALID
	0x03A4A874 FDIV S0, S9, S0
	0x03A4A878 B 0x3A4A8AC
	0x03A4A87C ADRP X23, 0x98E000
	0x03A4A880 LDRB W8, [X23 + 0x783]
	0x03A4A884 CBNZ W8, 0x3A4A89C
	0x03A4A888 ADRP X0, 0x6A9000
	0x03A4A88C LDR X0, [X0 + 0x5A0]
	0x03A4A890 BL 0x1C16CF4
	0x03A4A894 MOVZ W8, 0x1
	0x03A4A898 STRB W8, [X23 + 0x783]
	0x03A4A89C LDR X8, [X22]
	0x03A4A8A0 LDR X8, [X8 + 0xB8]
	0x03A4A8A4 LDR V1, [X8]
	0x03A4A8A8 LDR V0, [X8 + 0x8]
	0x03A4A8AC STR D1, [X21]
	0x03A4A8B0 STR S0, [X21 + 0x8]
	0x03A4A8B4 LDR V1, [X20 + 0x8]
	0x03A4A8B8 LDR V0, [X20]
	0x03A4A8BC FMUL S2, S1, S10
	0x03A4A8C0 FMUL S3, S0, S10
	0x03A4A8C4 FSUB S0, S2, S0
	0x03A4A8C8 FADD S1, S1, S3
	0x03A4A8CC BL 0x3EB1C40
	0x03A4A8D0 ADRP X8, 0xFFFFFFFFFD0A0000
	0x03A4A8D4 LDR V1, [X8 + 0x6C]
	0x03A4A8D8 FCMP S0, 0x0
	0x03A4A8DC LDP X22, X21, [X31 + 0x100]
	0x03A4A8E0 LDP X24, X23, [X31 + 0xF0]
	0x03A4A8E4 FADD S1, S0, S1
	0x03A4A8E8 FCSEL S0, S1, S0, MI
	0x03A4A8EC STR S0, [X19]
	0x03A4A8F0 LDP X20, X19, [X31 + 0x110]
	0x03A4A8F4 LDP X30, X25, [X31 + 0xE0]
	0x03A4A8F8 LDR X29, [X31 + 0xD0]
	0x03A4A8FC LDP D9, D8, [X31 + 0xC0]
	0x03A4A900 LDP D11, D10, [X31 + 0xB0]
	0x03A4A904 LDP D13, D12, [X31 + 0xA0]
	0x03A4A908 LDP D15, D14, [X31 + 0x90]
	0x03A4A90C ADD X31, X31, 0x120
	0x03A4A910 RET
	0x03A4A914 STR X30, [X31 - 0x20]!
	0x03A4A918 STP X20, X19, [X31 + 0x10]
	0x03A4A91C MOV X20, X1
	0x03A4A920 MOV X0, X2
	0x03A4A924 MOV X1, X31
	0x03A4A928 MOV X19, X2
	0x03A4A92C BL 0x3A92DE8
	0x03A4A930 MOV X1, X20
	0x03A4A934 MOV X2, X19
	0x03A4A938 LDP X20, X19, [X31 + 0x10]
	0x03A4A93C AND W3, W0, 0x1
	0x03A4A940 LDR X30, [X31], #0x20
	0x03A4A944 B 0x3A4A948
	0x03A4A948 STP X29, X30, [X31 - 0x30]!
	0x03A4A94C STP X22, X21, [X31 + 0x10]
	0x03A4A950 STP X20, X19, [X31 + 0x20]
	0x03A4A954 SUB X31, X31, 0x410
	0x03A4A958 ADRP X22, 0x998000
	0x03A4A95C LDRB W8, [X22 + 0x194]
	0x03A4A960 MOV W21, W3
	0x03A4A964 MOV X20, X2
	0x03A4A968 MOV X19, X1
	0x03A4A96C TBNZ X8, 0x0, 0x3A4A990
	0x03A4A970 ADRP X0, 0x70A000
	0x03A4A974 LDR X0, [X0 + 0x8C8]
	0x03A4A978 BL 0x1C16CF4
	0x03A4A97C ADRP X0, 0x70A000
	0x03A4A980 LDR X0, [X0 + 0x20]
	0x03A4A984 BL 0x1C16CF4
	0x03A4A988 MOVZ W8, 0x1
	0x03A4A98C STRB W8, [X22 + 0x194]
	0x03A4A990 ADD X0, X31, 0x1C0
	0x03A4A994 MOVZ W2, 0x210
	0x03A4A998 MOV X1, X20
	0x03A4A99C BL 0x3EB1AC0
	0x03A4A9A0 AND W1, W21, 0x1
	0x03A4A9A4 ADD X8, X31, 0x3D0
	0x03A4A9A8 ADD X0, X31, 0x1C0
	0x03A4A9AC MOV W2, W31
	0x03A4A9B0 MOV X3, X31
	0x03A4A9B4 BL 0x3A93078
	0x03A4A9B8 LDP V0, V1, [X31 + 0x3D0]
	0x03A4A9BC LDP V2, V3, [X31 + 0x3F0]
	0x03A4A9C0 ADD X0, X31, 0x1C0
	0x03A4A9C4 MOVZ W2, 0x210
	0x03A4A9C8 MOV X1, X20
	0x03A4A9CC STP V0, V1, [X31 + 0x180]
	0x03A4A9D0 STP V2, V3, [X31 + 0x1A0]
	0x03A4A9D4 BL 0x3EB1AC0
	0x03A4A9D8 ADD X8, X31, 0x140
	0x03A4A9DC ADD X0, X31, 0x1C0
	0x03A4A9E0 MOV W1, W31
	0x03A4A9E4 MOV X2, X31
	0x03A4A9E8 BL 0x3A92B70
	0x03A4A9EC LDP V1, V0, [X31 + 0x160]
	0x03A4A9F0 LDP V3, V2, [X31 + 0x140]
	0x03A4A9F4 STP V1, V0, [X31 + 0x3F0]
	0x03A4A9F8 STP V3, V2, [X31 + 0x3D0]
	0x03A4A9FC STP V3, V2, [X31 + 0x140]
	0x03A4AA00 STP V1, V0, [X31 + 0x160]
	0x03A4AA04 LDR X0, [X20 + 0xC0]
	0x03A4AA08 CBZ X0, 0x3A4AB4C
	0x03A4AA0C ADRP X20, 0x70A000
	0x03A4AA10 LDR X20, [X20 + 0x8C8]
	0x03A4AA14 MOV X1, X31
	0x03A4AA18 BL 0x3C03928
	0x03A4AA1C LDP V0, V1, [X31 + 0x180]
	0x03A4AA20 LDP V2, V3, [X31 + 0x1A0]
	0x03A4AA24 AND W2, W0, 0x1
	0x03A4AA28 ADD X8, X31, 0xC0
	0x03A4AA2C STP V0, V1, [X31 + 0x80]
	0x03A4AA30 LDP V0, V1, [X31 + 0x140]
	0x03A4AA34 STP V2, V3, [X31 + 0xA0]
	0x03A4AA38 LDP V2, V3, [X31 + 0x160]
	0x03A4AA3C ADD X0, X31, 0x80
	0x03A4AA40 ADD X1, X31, 0x40
	0x03A4AA44 MOV X3, X31
	0x03A4AA48 STP V0, V1, [X31 + 0x40]
	0x03A4AA4C STP V2, V3, [X31 + 0x60]
	0x03A4AA50 BL 0x39E5BD8
	0x03A4AA54 LDP V0, V1, [X31 + 0xC0]
	0x03A4AA58 LDP V2, V3, [X31 + 0xE0]
	0x03A4AA5C LDR X0, [X20]
	0x03A4AA60 STP V0, V1, [X31 + 0x100]
	0x03A4AA64 STP V2, V3, [X31 + 0x120]
	0x03A4AA68 LDR W8, [X0 + 0xE0]
	0x03A4AA6C CBNZ W8, 0x3A4AA78
	0x03A4AA70 BL 0x1C16DFC
	0x03A4AA74 LDR X0, [X20]
	0x03A4AA78 LDR X8, [X0 + 0xB8]
	0x03A4AA7C LDP V0, V1, [X31 + 0x100]
	0x03A4AA80 LDP V2, V3, [X31 + 0x120]
	0x03A4AA84 ADD X0, X31, 0x0
	0x03A4AA88 LDR X21, [X8 + 0x60]
	0x03A4AA8C MOV X2, X31
	0x03A4AA90 STP V0, V1, [X31]
	0x03A4AA94 STP V2, V3, [X31 + 0x20]
	0x03A4AA98 MOV X1, X21
	0x03A4AA9C BL 0x3C0A710
	0x03A4AAA0 CBZ X21, 0x3A4AB4C
	0x03A4AAA4 LDR X8, [X20]
	0x03A4AAA8 LDR X9, [X21 + 0x18]
	0x03A4AAAC LDR X8, [X8 + 0xB8]
	0x03A4AAB0 CMP W9, 0x1
	0x03A4AAB4 LDR X20, [X8 + 0x68]
	0x03A4AAB8 B.LT 0x3A4AAFC
	0x03A4AABC MOV X8, X31
	0x03A4AAC0 AND X11, X9, 0x0
	0x03A4AAC4 ADD X9, X21, 0x20
	0x03A4AAC8 ADD X10, X20, 0x20
	0x03A4AACC CMP X8, W11, UXTW
	0x03A4AAD0 B.CS 0x3A4AB48
	0x03A4AAD4 CBZ X20, 0x3A4AB4C
	0x03A4AAD8 LDR W11, [X20 + 0x18]
	0x03A4AADC CMP X8, X11
	0x03A4AAE0 B.CS 0x3A4AB48
	0x03A4AAE4 LDR V0, [X9, X8, LSL #4]
	0x03A4AAE8 STR V0, [X10, X8, LSL]
	0x03A4AAEC LDR W11, [X21 + 0x18]
	0x03A4AAF0 ADD X8, X8, 0x1
	0x03A4AAF4 CMP X8, W11, SXTW
	0x03A4AAF8 B.LT 0x3A4AACC
	0x03A4AAFC ADRP X21, 0x70A000
	0x03A4AB00 LDR X21, [X21 + 0x20]
	0x03A4AB04 LDR X0, [X21]
	0x03A4AB08 LDR W8, [X0 + 0xE0]
	0x03A4AB0C CBNZ W8, 0x3A4AB14
	0x03A4AB10 BL 0x1C16DFC
	0x03A4AB14 CBZ X19, 0x3A4AB4C
	0x03A4AB18 LDR X8, [X21]
	0x03A4AB1C MOV X0, X19
	0x03A4AB20 MOV X2, X20
	0x03A4AB24 MOV X3, X31
	0x03A4AB28 LDR X8, [X8 + 0xB8]
	0x03A4AB2C LDR W1, [X8 + 0x90]
	0x03A4AB30 BL 0x3C4D428
	0x03A4AB34 ADD X31, X31, 0x410
	0x03A4AB38 LDP X20, X19, [X31 + 0x20]
	0x03A4AB3C LDP X22, X21, [X31 + 0x10]
	0x03A4AB40 LDP X29, X30, [X31], #0x30
	0x03A4AB44 RET
	0x03A4AB48 BL 0x1C16F28
	0x03A4AB4C BL 0x1C16F20
	0x03A4AB50 SUB X31, X31, 0xA0
	0x03A4AB54 STP D15, D14, [X31 + 0x40]
	0x03A4AB58 STP D13, D12, [X31 + 0x50]
	0x03A4AB5C STP D11, D10, [X31 + 0x60]
	0x03A4AB60 STP D9, D8, [X31 + 0x70]
	0x03A4AB64 STP X30, X21, [X31 + 0x80]
	0x03A4AB68 STP X20, X19, [X31 + 0x90]
	0x03A4AB6C ADRP X20, 0x998000
	0x03A4AB70 ADRP X21, 0x70A000
	0x03A4AB74 LDRB W8, [X20 + 0x195]
	0x03A4AB78 LDR X21, [X21 + 0x20]
	0x03A4AB7C MOV V9.16B, V2.16B
	0x03A4AB80 MOV V12.16B, V1.16B
	0x03A4AB84 MOV V8.16B, V0.16B
	0x03A4AB88 MOV X19, X0
	0x03A4AB8C TBNZ X8, 0x0, 0x3A4ABA4
	0x03A4AB90 ADRP X0, 0x70A000
	0x03A4AB94 LDR X0, [X0 + 0x20]
	0x03A4AB98 BL 0x1C16CF4
	0x03A4AB9C MOVZ W8, 0x1
	0x03A4ABA0 STRB W8, [X20 + 0x195]
	0x03A4ABA4 ADD X0, X31, 0x3C
	0x03A4ABA8 ADD X1, X31, 0x38
	0x03A4ABAC MOV V0.16B, V8.16B
	0x03A4ABB0 BL 0x3EB1BC0
	0x03A4ABB4 LDR X0, [X21]
	0x03A4ABB8 LDR V1, [X31 + 0x3C]
	0x03A4ABBC LDR V0, [X31 + 0x38]
	0x03A4ABC0 LDR W8, [X0 + 0xE0]
	0x03A4ABC4 STP S0, S1, [X31 + 0x18]
	0x03A4ABC8 CBNZ W8, 0x3A4ABD0
	0x03A4ABCC BL 0x1C16DFC
	0x03A4ABD0 CBZ X19, 0x3A4AD30
	0x03A4ABD4 LDR X8, [X21]
	0x03A4ABD8 FMOV S1, 0.25
	0x03A4ABDC FMOV S0, 0.125
	0x03A4ABE0 FMOV S2, 0.5
	0x03A4ABE4 LDR X8, [X8 + 0xB8]
	0x03A4ABE8 FMUL S13, S8, S1
	0x03A4ABEC FMOV S1, 1
	0x03A4ABF0 FMUL S15, S8, S0
	0x03A4ABF4 LDR W20, [X8 + 0x1C]
	0x03A4ABF8 FMUL S0, S8, S2
	0x03A4ABFC FDIV S2, S1, S9
	0x03A4AC00 FDIV S1, S1, S12
	0x03A4AC04 ADD X0, X31, 0x34
	0x03A4AC08 ADD X1, X31, 0x30
	0x03A4AC0C STP S1, S2, [X31 + 0x10]
	0x03A4AC10 BL 0x3EB1BC0
	0x03A4AC14 STR S9, [X31 + 0xC]
	0x03A4AC18 LDP S9, S14, [X31 + 0x30]
	0x03A4AC1C ADD X0, X31, 0x2C
	0x03A4AC20 ADD X1, X31, 0x28
	0x03A4AC24 MOV V0.16B, V13.16B
	0x03A4AC28 BL 0x3EB1BC0
	0x03A4AC2C LDP S13, S10, [X31 + 0x28]
	0x03A4AC30 ADD X0, X31, 0x24
	0x03A4AC34 ADD X1, X31, 0x20
	0x03A4AC38 MOV V0.16B, V15.16B
	0x03A4AC3C BL 0x3EB1BC0
	0x03A4AC40 ADRP X8, 0xFFFFFFFFFD0A0000
	0x03A4AC44 LDR V0, [X8 + 0x200]
	0x03A4AC48 LDP S15, S11, [X31 + 0x20]
	0x03A4AC4C FMOV S1, 3
	0x03A4AC50 FMUL S3, S8, S1
	0x03A4AC54 FADD S2, S8, S8
	0x03A4AC58 FMUL S0, S8, S0
	0x03A4AC5C MOV X0, X19
	0x03A4AC60 MOV W1, W20
	0x03A4AC64 MOV V1.16B, V8.16B
	0x03A4AC68 MOV X2, X31
	0x03A4AC6C BL 0x3C4CED8
	0x03A4AC70 LDR X8, [X21]
	0x03A4AC74 MOV V1.16B, V10.16B
	0x03A4AC78 LDR V10, [X31 + 0x1C]
	0x03A4AC7C MOV X0, X19
	0x03A4AC80 LDR X8, [X8 + 0xB8]
	0x03A4AC84 MOV V0.16B, V11.16B
	0x03A4AC88 MOV V2.16B, V14.16B
	0x03A4AC8C MOV V3.16B, V10.16B
	0x03A4AC90 LDR W1, [X8 + 0x20]
	0x03A4AC94 MOV X2, X31
	0x03A4AC98 BL 0x3C4CED8
	0x03A4AC9C LDR X8, [X21]
	0x03A4ACA0 MOV V2.16B, V9.16B
	0x03A4ACA4 LDR V9, [X31 + 0x18]
	0x03A4ACA8 MOV X0, X19
	0x03A4ACAC LDR X8, [X8 + 0xB8]
	0x03A4ACB0 MOV V0.16B, V15.16B
	0x03A4ACB4 MOV V1.16B, V13.16B
	0x03A4ACB8 MOV V3.16B, V9.16B
	0x03A4ACBC LDR W1, [X8 + 0x24]
	0x03A4ACC0 MOV X2, X31
	0x03A4ACC4 BL 0x3C4CED8
	0x03A4ACC8 LDR X8, [X21]
	0x03A4ACCC LDP S2, S1, [X31 + 0xC]
	0x03A4ACD0 LDR V3, [X31 + 0x14]
	0x03A4ACD4 MOV X0, X19
	0x03A4ACD8 LDR X8, [X8 + 0xB8]
	0x03A4ACDC MOV V0.16B, V12.16B
	0x03A4ACE0 MOV X2, X31
	0x03A4ACE4 LDR W1, [X8 + 0x28]
	0x03A4ACE8 BL 0x3C4CED8
	0x03A4ACEC LDR X8, [X21]

ISIL:
	001 Move [X31-64], X29
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Subtract X31, X31, 1600
	009 Move X23, 0x999000
	010 Move W8, [X23+401]
	011 Move W21, W3
	012 Move W22, W2
	013 Move X20, X1
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {27}
	019 Move X0, 0x70B000
	020 Move X0, [X0+32]
	021 Call 0x1C17CF4
	022 Move X0, 0x70C000
	023 Move X0, [X0+3528]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X23+401], W8
	027 NotImplemented "Instruction MOVI not yet implemented."
	028 Move [X31+91], V0
	029 Move [X31+90], V0
	030 Move [X31+89], V0
	031 Move [X31+88], V0
	032 Move [X31+87], V0
	033 Move [X31+86], V0
	034 Move [X31+85], V0
	035 Move [X31+84], V0
	036 Move [X31+83], V0
	037 Move [X31+82], V0
	038 Move [X31+81], V0
	039 Move [X31+80], V0
	040 Move [X31+79], V0
	041 Move [X31+78], V0
	042 Move [X31+77], V0
	043 Move [X31+76], V0
	044 Move [X31+75], V0
	045 Move [X31+74], V0
	046 Move [X31+73], V0
	047 Move [X31+72], V0
	048 Move X0, [X20+376]
	049 Compare X0, 0
	050 JumpIfEqual {390}
	051 Move X1, X31
	052 Call XRPass.get_enabled, X0
	053 Move TEMP, X0
	054 And TEMP, TEMP, 1
	055 Compare TEMP, 1
	056 JumpIfNotEqual {79}
	057 Move X0, X20
	058 Move X1, X19
	059 Move W2, W31
	060 Move X3, X31
	061 Call CameraData.PushBuiltinShaderConstantsXR, X0, X1, X2
	062 Move X0, X20
	063 Move X1, X31
	064 Call CameraData.get_xrUniversal, X0
	065 Move X8, 0x70C000
	066 Move X8, [X8+3528]
	067 Move X20, X0
	068 Move X8, [X8]
	069 Move W9, [X8+224]
	070 Compare W9, 0
	071 JumpIfNotEqual {74}
	072 Move X0, X8
	073 Call 0x1C17DFC
	074 Move X0, X19
	075 Move X1, X20
	076 Move W2, W31
	077 Move X3, X31
	078 Call XRSystemUniversal.MarkShaderProperties, X0, X1, X2
	079 Add X8, X31, 1472
	080 Move X0, X20
	081 Move W1, W31
	082 Move X2, X31
	083 Call CameraData.GetViewMatrix, X0, X1
	084 Move V0, [X31+92]
	085 Move V1, [X31+93]
	086 Move V2, [X31+94]
	087 Move V3, [X31+95]
	088 Add X8, X31, 1088
	089 Move X0, X20
	090 Move W1, W31
	091 Move X2, X31
	092 Move [X31+96], V0
	093 Move [X31+97], V1
	094 Move [X31+98], V2
	095 Move [X31+99], V3
	096 Call CameraData.GetProjectionMatrix, X0, X1
	097 Move V0, [X31+68]
	098 Move V1, [X31+69]
	099 Move V2, [X31+70]
	100 Move V3, [X31+71]
	101 Move [X31+92], V0
	102 Move [X31+93], V1
	103 Move V0, [X31+96]
	104 Move V1, [X31+97]
	105 Move [X31+94], V2
	106 Move [X31+95], V3
	107 Move V2, [X31+98]
	108 Move V3, [X31+99]
	109 Move [X31+68], V0
	110 Move [X31+69], V1
	111 Move [X31+70], V2
	112 Move [X31+71], V3
	113 Move V0, [X31+92]
	114 Move V1, [X31+93]
	115 Move V2, [X31+94]
	116 Move V3, [X31+95]
	117 Move [X31+64], V0
	118 Move [X31+65], V1
	119 Move [X31+66], V2
	120 Move [X31+67], V3
	121 Compare X19, 0
	122 JumpIfEqual {390}
	123 Move V0, [X31+68]
	124 Move V1, [X31+69]
	125 Move V2, [X31+70]
	126 Move V3, [X31+71]
	127 Add X1, X31, 960
	128 Move [X31+960], V0
	129 Move [X31+968], V1
	130 Move V0, [X31+64]
	131 Move V1, [X31+65]
	132 Move [X31+992], V2
	133 Move [X31+1000], V3
	134 Move V2, [X31+66]
	135 Move V3, [X31+67]
	136 Add X2, X31, 896
	137 Move X0, X19
	138 Move X3, X31
	139 Move [X31+896], V0
	140 Move [X31+904], V1
	141 Move [X31+928], V2
	142 Move [X31+936], V3
	143 Call CommandBuffer.SetViewProjectionMatrices, X0, X1, X2
	144 Move TEMP, X22
	145 And TEMP, TEMP, 1
	146 Compare TEMP, 1
	147 JumpIfNotEqual {381}
	148 And W1, W21, 1
	149 Add X8, X31, 1024
	150 Move X0, X20
	151 Move W2, W31
	152 Move X3, X31
	153 Call CameraData.GetGPUProjectionMatrix, X0, X1, X2
	154 Move V2, [X31+64]
	155 Move V3, [X31+65]
	156 Move V0, [X31+67]
	157 Move V1, [X31+66]
	158 Move [X31+68], V2
	159 Move [X31+69], V3
	160 Move [X31+64], V2
	161 Move [X31+65], V3
	162 Move V2, [X31+98]
	163 Move V3, [X31+99]
	164 Move [X31+71], V0
	165 Move [X31+70], V1
	166 Move V4, [X31+96]
	167 Move V5, [X31+97]
	168 Move [X31+66], V1
	169 Move [X31+67], V0
	170 Move [X31+736], V2
	171 Move [X31+744], V3
	172 Move V0, [X31+70]
	173 Move V1, [X31+71]
	174 Move V2, [X31+68]
	175 Move V3, [X31+69]
	176 Add X8, X31, 832
	177 Add X0, X31, 768
	178 Add X1, X31, 704
	179 Move X2, X31
	180 Move [X31+704], V4
	181 Move [X31+712], V5
	182 Move [X31+800], V0
	183 Move [X31+808], V1
	184 Move [X31+768], V2
	185 Move [X31+776], V3
	186 Call Matrix4x4.op_Multiply, X0, X1
	187 Move V0, [X31+96]
	188 Move V1, [X31+97]
	189 Move V2, [X31+98]
	190 Move V3, [X31+99]
	191 Add X8, X31, 832
	192 Add X0, X31, 640
	193 Move X1, X31
	194 Move [X31+640], V0
	195 Move [X31+648], V1
	196 Move [X31+672], V2
	197 Move [X31+680], V3
	198 Call Matrix4x4.Inverse, X0
	199 Move V0, [X31+832]
	200 Move V1, [X31+848]
	201 Move V2, [X31+864]
	202 Move V3, [X31+880]
	203 Add X8, X31, 832
	204 Add X0, X31, 576
	205 Move [X31+88], V0
	206 Move [X31+89], V1
	207 Move V0, [X31+64]
	208 Move V1, [X31+65]
	209 Move [X31+90], V2
	210 Move [X31+91], V3
	211 Move V2, [X31+66]
	212 Move V3, [X31+67]
	213 Move X1, X31
	214 Move [X31+576], V0
	215 Move [X31+584], V1
	216 Move [X31+608], V2
	217 Move [X31+616], V3
	218 Call Matrix4x4.Inverse, X0
	219 Move V2, [X31+88]
	220 Move V3, [X31+89]
	221 Move V1, [X31+864]
	222 Move V0, [X31+880]
	223 Move V5, [X31+832]
	224 Move V4, [X31+848]
	225 Add X8, X31, 832
	226 Move [X31+512], V2
	227 Move [X31+520], V3
	228 Move V2, [X31+90]
	229 Move V3, [X31+91]
	230 Add X0, X31, 512
	231 Add X1, X31, 448
	232 Move X2, X31
	233 Move [X31+87], V0
	234 Move [X31+86], V1
	235 Move [X31+85], V4
	236 Move [X31+84], V5
	237 Move [X31+544], V2
	238 Move [X31+552], V3
	239 Move [X31+480], V1
	240 Move [X31+488], V0
	241 Move [X31+448], V5
	242 Move [X31+456], V4
	243 Call Matrix4x4.op_Multiply, X0, X1
	244 Move V0, [X31+832]
	245 Move V1, [X31+848]
	246 Move V2, [X31+864]
	247 Move V3, [X31+880]
	248 Add X8, X31, 832
	249 Move X0, X31
	250 Move [X31+80], V0
	251 Move [X31+81], V1
	252 Move [X31+82], V2
	253 Move S0, 1
	254 Move S1, 1
	255 Move S2, -1
	256 Move [X31+83], V3
	257 Call Matrix4x4.Scale, X0
	258 Move V0, [X31+832]
	259 Move V1, [X31+848]
	260 Move V2, [X31+864]
	261 Move V3, [X31+880]
	262 Add X8, X31, 832
	263 Add X0, X31, 384
	264 Move [X31+384], V0
	265 Move [X31+392], V1
	266 Move V0, [X31+96]
	267 Move V1, [X31+97]
	268 Move [X31+416], V2
	269 Move [X31+424], V3
	270 Move V2, [X31+98]
	271 Move V3, [X31+99]
	272 Add X1, X31, 320
	273 Move X2, X31
	274 Move [X31+320], V0
	275 Move [X31+328], V1
	276 Move [X31+352], V2
	277 Move [X31+360], V3
	278 Call Matrix4x4.op_Multiply, X0, X1
	279 Move V0, [X31+832]
	280 Move V1, [X31+848]
	281 Move V2, [X31+864]
	282 Move V3, [X31+880]
	283 Add X8, X31, 832
	284 Add X0, X31, 1216
	285 Move X1, X31
	286 Move [X31+76], V0
	287 Move [X31+77], V1
	288 Move [X31+78], V2
	289 Move [X31+79], V3
	290 Call Matrix4x4.get_inverse, X0
	291 Move X20, 0x70B000
	292 Move V0, [X31+832]
	293 Move V1, [X31+848]
	294 Move V2, [X31+864]
	295 Move V3, [X31+880]
	296 Move X20, [X20+32]
	297 Move [X31+72], V0
	298 Move [X31+73], V1
	299 Move X0, [X20]
	300 Move [X31+74], V2
	301 Move [X31+75], V3
	302 Move W8, [X0+224]
	303 Compare W8, 0
	304 JumpIfNotEqual {307}
	305 Call 0x1C17DFC
	306 Move X0, [X20]
	307 Move X8, [X0+184]
	308 Move V0, [X31+76]
	309 Move V1, [X31+77]
	310 Move V2, [X31+78]
	311 Move V3, [X31+79]
	312 Move W1, [X8+124]
	313 Add X2, X31, 256
	314 Move X0, X19
	315 Move X3, X31
	316 Move [X31+256], V0
	317 Move [X31+264], V1
	318 Move [X31+288], V2
	319 Move [X31+296], V3
	320 Call CommandBuffer.SetGlobalMatrix, X0, X1, X2
	321 Move X8, [X20]
	322 Move V0, [X31+72]
	323 Move V1, [X31+73]
	324 Move V2, [X31+74]
	325 Move X8, [X8+184]
	326 Move V3, [X31+75]
	327 Add X2, X31, 192
	328 Move X0, X19
	329 Move W1, [X8+128]
	330 Move X3, X31
	331 Move [X31+192], V0
	332 Move [X31+200], V1
	333 Move [X31+224], V2
	334 Move [X31+232], V3
	335 Call CommandBuffer.SetGlobalMatrix, X0, X1, X2
	336 Move X8, [X20]
	337 Move V0, [X31+88]
	338 Move V1, [X31+89]
	339 Move V2, [X31+90]
	340 Move X8, [X8+184]
	341 Move V3, [X31+91]
	342 Add X2, X31, 128
	343 Move X0, X19
	344 Move W1, [X8+104]
	345 Move X3, X31
	346 Move [X31+128], V0
	347 Move [X31+136], V1
	348 Move [X31+160], V2
	349 Move [X31+168], V3
	350 Call CommandBuffer.SetGlobalMatrix, X0, X1, X2
	351 Move X8, [X20]
	352 Move V0, [X31+84]
	353 Move V1, [X31+85]
	354 Move V2, [X31+86]
	355 Move X8, [X8+184]
	356 Move V3, [X31+87]
	357 Add X2, X31, 64
	358 Move X0, X19
	359 Move W1, [X8+108]
	360 Move X3, X31
	361 Move [X31+64], V0
	362 Move [X31+72], V1
	363 Move [X31+96], V2
	364 Move [X31+104], V3
	365 Call CommandBuffer.SetGlobalMatrix, X0, X1, X2
	366 Move X8, [X20]
	367 Move V0, [X31+80]
	368 Move V1, [X31+81]
	369 Move V2, [X31+82]
	370 Move X8, [X8+184]
	371 Move V3, [X31+83]
	372 Add X2, X31, 0
	373 Move X0, X19
	374 Move W1, [X8+112]
	375 Move X3, X31
	376 Move [X31], V0
	377 Move [X31+8], V1
	378 Move [X31+32], V2
	379 Move [X31+40], V3
	380 Call CommandBuffer.SetGlobalMatrix, X0, X1, X2
	381 Add X31, X31, 1600
	382 Move X20, [X31+48]
	383 Move X19, [X31+56]
	384 Move X22, [X31+32]
	385 Move X21, [X31+40]
	386 Move X30, [X31+16]
	387 Move X23, [X31+24]
	388 Move X29, [X31+64]
	389 Return 
	390 Call 0x1C17F20

Method: System.Void SetPerCameraShaderVariables(UnityEngine.Rendering.CommandBuffer cmd, ref UnityEngine.Rendering.Universal.CameraData cameraData)

Disassembly:
	0x03A4ACF0 MOV X0, X19
	0x03A4ACF4 MOV V0.16B, V8.16B
	0x03A4ACF8 MOV V1.16B, V10.16B
	0x03A4ACFC LDR X8, [X8 + 0xB8]
	0x03A4AD00 MOV V2.16B, V9.16B
	0x03A4AD04 LDP X20, X19, [X31 + 0x90]
	0x03A4AD08 LDP X30, X21, [X31 + 0x80]
	0x03A4AD0C LDR W1, [X8 + 0x2C]
	0x03A4AD10 LDP D9, D8, [X31 + 0x70]
	0x03A4AD14 LDP D11, D10, [X31 + 0x60]
	0x03A4AD18 LDP D13, D12, [X31 + 0x50]
	0x03A4AD1C LDP D15, D14, [X31 + 0x40]
	0x03A4AD20 FMOV S3, W31
	0x03A4AD24 MOV X2, X31
	0x03A4AD28 ADD X31, X31, 0xA0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, X1
	006 Move X21, X0
	007 Move X0, X2
	008 Move X1, X31
	009 Move X19, X2
	010 Call CameraData.IsCameraProjectionMatrixFlipped, X0
	011 Move X1, X20
	012 Move X2, X19
	013 Move X20, [X31+16]
	014 Move X19, [X31+24]
	015 And W3, W0, 1
	016 Move X0, X21
	017 Move X30, [X31+32]
	018 Move X21, [X31+40]

Method: System.Void SetPerCameraShaderVariables(UnityEngine.Rendering.CommandBuffer cmd, ref UnityEngine.Rendering.Universal.CameraData cameraData, System.Boolean isTargetFlipped)

Disassembly:
	0x03A4AD2C B 0x3C4CED8
	0x03A4AD30 BL 0x1C16F20
	0x03A4AD34 SUB X31, X31, 0x50
	0x03A4AD38 STP X30, X21, [X31 + 0x30]
	0x03A4AD3C STP X20, X19, [X31 + 0x40]
	0x03A4AD40 ADRP X21, 0x998000
	0x03A4AD44 LDRB W9, [X21 + 0x196]
	0x03A4AD48 MOV X20, X0
	0x03A4AD4C MOV X19, X8
	0x03A4AD50 TBNZ X9, 0x0, 0x3A4AD74
	0x03A4AD54 ADRP X0, 0x6A9000
	0x03A4AD58 LDR X0, [X0 + 0xA28]
	0x03A4AD5C BL 0x1C16CF4
	0x03A4AD60 ADRP X0, 0x70B000
	0x03A4AD64 LDR X0, [X0 + 0xC68]
	0x03A4AD68 BL 0x1C16CF4
	0x03A4AD6C MOVZ W8, 0x1
	0x03A4AD70 STRB W8, [X21 + 0x196]
	0x03A4AD74 LDRB W8, [X20 + 0x1A2]
	0x03A4AD78 CBZ W8, 0x3A4AD90
	0x03A4AD7C ADD X0, X20, 0x110
	0x03A4AD80 ADD X8, X31, 0x8
	0x03A4AD84 MOV X1, X31
	0x03A4AD88 BL 0x3A53368
	0x03A4AD8C B 0x3A4ADCC
	0x03A4AD90 ADRP X8, 0x6A9000
	0x03A4AD94 LDR X8, [X8 + 0xA28]
	0x03A4AD98 LDR X0, [X8]
	0x03A4AD9C LDR W8, [X0 + 0xE0]
	0x03A4ADA0 CBNZ W8, 0x3A4ADA8
	0x03A4ADA4 BL 0x1C16DFC
	0x03A4ADA8 ADRP X8, 0x70B000
	0x03A4ADAC LDR X8, [X8 + 0xC68]
	0x03A4ADB0 MOV X1, X31
	0x03A4ADB4 LDR X0, [X8]
	0x03A4ADB8 BL 0x3C0649C
	0x03A4ADBC ADD X8, X31, 0x8
	0x03A4ADC0 MOV W0, W31
	0x03A4ADC4 MOV X1, X31
	0x03A4ADC8 BL 0x3C4B204
	0x03A4ADCC LDR X8, [X31 + 0x28]
	0x03A4ADD0 LDUR V0, [X31 + 0x18]
	0x03A4ADD4 LDUR V1, [X31 + 0x8]
	0x03A4ADD8 LDP X30, X21, [X31 + 0x30]
	0x03A4ADDC STR X8, [X19 + 0x20]
	0x03A4ADE0 STP V1, V0, [X19]
	0x03A4ADE4 LDP X20, X19, [X31 + 0x40]
	0x03A4ADE8 ADD X31, X31, 0x50
	0x03A4ADEC RET
	0x03A4ADF0 MOV X0, X31
	0x03A4ADF4 RET
	0x03A4ADF8 MOV X0, X31
	0x03A4ADFC RET
	0x03A4AE00 SUB X31, X31, 0x50
	0x03A4AE04 STP X30, X21, [X31 + 0x30]
	0x03A4AE08 STP X20, X19, [X31 + 0x40]
	0x03A4AE0C ADRP X21, 0x998000
	0x03A4AE10 LDRB W9, [X21 + 0x198]
	0x03A4AE14 MOV X20, X0
	0x03A4AE18 MOV X19, X8
	0x03A4AE1C TBNZ X9, 0x0, 0x3A4AE40
	0x03A4AE20 ADRP X0, 0x6A9000
	0x03A4AE24 LDR X0, [X0 + 0xA28]
	0x03A4AE28 BL 0x1C16CF4
	0x03A4AE2C ADRP X0, 0x70B000
	0x03A4AE30 LDR X0, [X0 + 0xDC0]
	0x03A4AE34 BL 0x1C16CF4
	0x03A4AE38 MOVZ W8, 0x1
	0x03A4AE3C STRB W8, [X21 + 0x198]
	0x03A4AE40 LDRB W8, [X20 + 0x1A2]
	0x03A4AE44 CBZ W8, 0x3A4AE5C
	0x03A4AE48 ADD X0, X20, 0x140
	0x03A4AE4C ADD X8, X31, 0x8
	0x03A4AE50 MOV X1, X31
	0x03A4AE54 BL 0x3A53368
	0x03A4AE58 B 0x3A4AE98
	0x03A4AE5C ADRP X8, 0x6A9000
	0x03A4AE60 LDR X8, [X8 + 0xA28]
	0x03A4AE64 LDR X0, [X8]
	0x03A4AE68 LDR W8, [X0 + 0xE0]
	0x03A4AE6C CBNZ W8, 0x3A4AE74
	0x03A4AE70 BL 0x1C16DFC
	0x03A4AE74 ADRP X8, 0x70B000
	0x03A4AE78 LDR X8, [X8 + 0xDC0]
	0x03A4AE7C MOV X1, X31
	0x03A4AE80 LDR X0, [X8]
	0x03A4AE84 BL 0x3C0649C
	0x03A4AE88 ADD X8, X31, 0x8
	0x03A4AE8C MOV W0, W31
	0x03A4AE90 MOV X1, X31
	0x03A4AE94 BL 0x3C4B204
	0x03A4AE98 LDR X8, [X31 + 0x28]
	0x03A4AE9C LDUR V0, [X31 + 0x18]
	0x03A4AEA0 LDUR V1, [X31 + 0x8]
	0x03A4AEA4 LDP X30, X21, [X31 + 0x30]
	0x03A4AEA8 STR X8, [X19 + 0x20]
	0x03A4AEAC STP V1, V0, [X19]
	0x03A4AEB0 LDP X20, X19, [X31 + 0x40]
	0x03A4AEB4 ADD X31, X31, 0x50
	0x03A4AEB8 RET
	0x03A4AEBC LDR X0, [X0 + 0x108]
	0x03A4AEC0 RET
	0x03A4AEC4 LDR X0, [X0 + 0x100]
	0x03A4AEC8 RET
	0x03A4AECC LDR X0, [X0 + 0xE8]
	0x03A4AED0 RET
	0x03A4AED4 STR X1, [X0 + 0xE8]
	0x03A4AED8 RET
	0x03A4AEDC LDR X0, [X0 + 0xF0]
	0x03A4AEE0 RET
	0x03A4AEE4 STR X1, [X0 + 0xF0]
	0x03A4AEE8 RET
	0x03A4AEEC SUB X31, X31, 0xE0
	0x03A4AEF0 STP X30, X23, [X31 + 0xB0]
	0x03A4AEF4 STP X22, X21, [X31 + 0xC0]
	0x03A4AEF8 STP X20, X19, [X31 + 0xD0]
	0x03A4AEFC ADRP X22, 0x998000
	0x03A4AF00 ADRP X21, 0x70A000
	0x03A4AF04 LDRB W8, [X22 + 0x19A]
	0x03A4AF08 LDR X21, [X21 + 0x8C8]
	0x03A4AF0C MOV X19, X1
	0x03A4AF10 MOV X20, X0
	0x03A4AF14 TBNZ X8, 0x0, 0x3A4AF2C
	0x03A4AF18 ADRP X0, 0x70A000
	0x03A4AF1C LDR X0, [X0 + 0x8C8]
	0x03A4AF20 BL 0x1C16CF4
	0x03A4AF24 MOVZ W8, 0x1
	0x03A4AF28 STRB W8, [X22 + 0x19A]
	0x03A4AF2C LDR X0, [X21]
	0x03A4AF30 LDR W8, [X0 + 0xE0]
	0x03A4AF34 CBNZ W8, 0x3A4AF40
	0x03A4AF38 BL 0x1C16DFC
	0x03A4AF3C LDR X0, [X21]
	0x03A4AF40 LDR X8, [X0 + 0xB8]
	0x03A4AF44 LDR X9, [X20 + 0x20]
	0x03A4AF48 LDP V0, V1, [X20]
	0x03A4AF4C LDR X8, [X8 + 0x18]
	0x03A4AF50 STR X9, [X31 + 0xA0]
	0x03A4AF54 STP V0, V1, [X31 + 0x80]
	0x03A4AF58 CBZ X8, 0x3A4B07C
	0x03A4AF5C LDP V0, V1, [X31 + 0x80]
	0x03A4AF60 LDR X9, [X31 + 0xA0]
	0x03A4AF64 STP V0, V1, [X31 + 0x50]
	0x03A4AF68 STR X9, [X31 + 0x70]
	0x03A4AF6C LDR W9, [X8 + 0x18]
	0x03A4AF70 CBZ W9, 0x3A4B080
	0x03A4AF74 LDR X9, [X31 + 0x70]
	0x03A4AF78 LDP V1, V0, [X31 + 0x50]
	0x03A4AF7C MOVZ W20, 0x1
	0x03A4AF80 MOVZ W22, 0x48
	0x03A4AF84 STR X9, [X8 + 0x40]
	0x03A4AF88 STP V1, V0, [X8 + 0x20]
	0x03A4AF8C LDR X0, [X21]
	0x03A4AF90 LDR W8, [X0 + 0xE0]
	0x03A4AF94 CBNZ W8, 0x3A4AFA0
	0x03A4AF98 BL 0x1C16DFC
	0x03A4AF9C LDR X0, [X21]
	0x03A4AFA0 LDR X8, [X0 + 0xB8]
	0x03A4AFA4 LDR X23, [X8 + 0x18]
	0x03A4AFA8 CBZ X23, 0x3A4B07C
	0x03A4AFAC LDRSW X9, [X23 + 0x18]
	0x03A4AFB0 CMP X20, X9
	0x03A4AFB4 B.GE 0x3A4B034
	0x03A4AFB8 LDR W8, [X0 + 0xE0]
	0x03A4AFBC CBNZ W8, 0x3A4AFD0
	0x03A4AFC0 BL 0x1C16DFC
	0x03A4AFC4 LDR X8, [X21]
	0x03A4AFC8 LDR X8, [X8 + 0xB8]
	0x03A4AFCC LDR X23, [X8 + 0x18]
	0x03A4AFD0 ADD X8, X31, 0x28
	0x03A4AFD4 MOV W0, W31
	0x03A4AFD8 MOV X1, X31
	0x03A4AFDC BL 0x3C4B258
	0x03A4AFE0 LDUR V0, [X31 + 0x28]
	0x03A4AFE4 LDUR V1, [X31 + 0x38]
	0x03A4AFE8 LDR X8, [X31 + 0x48]
	0x03A4AFEC STP V0, V1, [X31 + 0x80]
	0x03A4AFF0 STR X8, [X31 + 0xA0]
	0x03A4AFF4 CBZ X23, 0x3A4B07C
	0x03A4AFF8 LDP V0, V1, [X31 + 0x80]
	0x03A4AFFC LDR X8, [X31 + 0xA0]
	0x03A4B000 STP V0, V1, [X31]
	0x03A4B004 STR X8, [X31 + 0x20]
	0x03A4B008 LDR W8, [X23 + 0x18]
	0x03A4B00C CMP X20, X8
	0x03A4B010 B.CS 0x3A4B080
	0x03A4B014 LDR X8, [X31 + 0x20]
	0x03A4B018 LDP V0, V1, [X31]
	0x03A4B01C ADD X9, X23, X22
	0x03A4B020 ADD X20, X20, 0x1
	0x03A4B024 ADD X22, X22, 0x28
	0x03A4B028 STR X8, [X9 + 0x20]
	0x03A4B02C STP V0, V1, [X9]
	0x03A4B030 B 0x3A4AF8C
	0x03A4B034 LDR X9, [X19 + 0x20]
	0x03A4B038 LDP V1, V0, [X19]
	0x03A4B03C STR X9, [X31 + 0xA0]
	0x03A4B040 STP V1, V0, [X31 + 0x80]
	0x03A4B044 LDR W9, [X0 + 0xE0]
	0x03A4B048 CBNZ W9, 0x3A4B058
	0x03A4B04C BL 0x1C16DFC
	0x03A4B050 LDR X8, [X21]
	0x03A4B054 LDR X8, [X8 + 0xB8]
	0x03A4B058 LDR X9, [X31 + 0xA0]
	0x03A4B05C LDP V1, V0, [X31 + 0x80]
	0x03A4B060 LDP X20, X19, [X31 + 0xD0]
	0x03A4B064 LDP X22, X21, [X31 + 0xC0]
	0x03A4B068 LDP X30, X23, [X31 + 0xB0]
	0x03A4B06C STR X9, [X8 + 0x40]
	0x03A4B070 STP V1, V0, [X8 + 0x20]
	0x03A4B074 ADD X31, X31, 0xE0
	0x03A4B078 RET
	0x03A4B07C BL 0x1C16F20
	0x03A4B080 BL 0x1C16F28
	0x03A4B084 LDRB W0, [X0 + 0x1A5]
	0x03A4B088 RET
	0x03A4B08C AND W8, W1, 0x1
	0x03A4B090 STRB W8, [X0 + 0x1A5]
	0x03A4B094 RET
	0x03A4B098 LDRB W0, [X0 + 0x1A6]
	0x03A4B09C RET
	0x03A4B0A0 AND W8, W1, 0x1
	0x03A4B0A4 STRB W8, [X0 + 0x1A6]
	0x03A4B0A8 RET
	0x03A4B0AC LDRB W0, [X0 + 0x1A7]
	0x03A4B0B0 RET
	0x03A4B0B4 AND W8, W1, 0x1
	0x03A4B0B8 STRB W8, [X0 + 0x1A7]
	0x03A4B0BC RET
	0x03A4B0C0 SUB X31, X31, 0x130
	0x03A4B0C4 STR X29, [X31 + 0xE0]
	0x03A4B0C8 STP X30, X25, [X31 + 0xF0]
	0x03A4B0CC STP X24, X23, [X31 + 0x100]
	0x03A4B0D0 STP X22, X21, [X31 + 0x110]
	0x03A4B0D4 STP X20, X19, [X31 + 0x120]
	0x03A4B0D8 ADRP X22, 0x997000
	0x03A4B0DC ADRP X21, 0x709000
	0x03A4B0E0 LDRB W8, [X22 + 0x1AD]
	0x03A4B0E4 LDR X21, [X21 + 0x8C8]
	0x03A4B0E8 MOV W20, W1
	0x03A4B0EC MOV X19, X0
	0x03A4B0F0 TBNZ X8, 0x0, 0x3A4B108
	0x03A4B0F4 ADRP X0, 0x709000
	0x03A4B0F8 LDR X0, [X0 + 0x8C8]
	0x03A4B0FC BL 0x1C16CF4
	0x03A4B100 MOVZ W8, 0x1
	0x03A4B104 STRB W8, [X22 + 0x1AD]
	0x03A4B108 LDR X0, [X21]
	0x03A4B10C MOVI V0.2D, 0x0
	0x03A4B110 STP V0, V0, [X31 + 0xC0]
	0x03A4B114 STR V0, [X31 + 0xB]
	0x03A4B118 LDR W8, [X0 + 0xE0]
	0x03A4B11C CBNZ W8, 0x3A4B128
	0x03A4B120 BL 0x1C16DFC
	0x03A4B124 LDR X0, [X21]
	0x03A4B128 LDR X8, [X0 + 0xB8]
	0x03A4B12C MOVZ W0, 0x2
	0x03A4B130 MOV X1, X31
	0x03A4B134 LDR X24, [X8 + 0x18]
	0x03A4B138 ADD X8, X31, 0x58
	0x03A4B13C BL 0x3C4B204
	0x03A4B140 LDUR V0, [X31 + 0x58]
	0x03A4B144 LDUR V1, [X31 + 0x68]
	0x03A4B148 LDR X8, [X31 + 0x78]
	0x03A4B14C STP V0, V1, [X31 + 0x80]
	0x03A4B150 STR X8, [X31 + 0xA0]
	0x03A4B154 CBZ X24, 0x3A4B328
	0x03A4B158 LDP V0, V1, [X31 + 0x80]
	0x03A4B15C LDR X8, [X31 + 0xA0]
	0x03A4B160 STP V0, V1, [X31 + 0x30]
	0x03A4B164 STR X8, [X31 + 0x50]
	0x03A4B168 LDR W8, [X24 + 0x18]
	0x03A4B16C CBZ W8, 0x3A4B32C
	0x03A4B170 LDR X8, [X31 + 0x50]
	0x03A4B174 LDP V0, V1, [X31 + 0x30]
	0x03A4B178 ADD X22, X31, 0xB0
	0x03A4B17C MOVZ W23, 0x1
	0x03A4B180 STR X8, [X24 + 0x40]
	0x03A4B184 STP V0, V1, [X24 + 0x20]
	0x03A4B188 MOVZ W24, 0x48
	0x03A4B18C LDR X0, [X21]
	0x03A4B190 LDR W8, [X0 + 0xE0]
	0x03A4B194 CBNZ W8, 0x3A4B1A0
	0x03A4B198 BL 0x1C16DFC
	0x03A4B19C LDR X0, [X21]
	0x03A4B1A0 LDR X8, [X0 + 0xB8]
	0x03A4B1A4 LDR X25, [X8 + 0x18]
	0x03A4B1A8 CBZ X25, 0x3A4B328
	0x03A4B1AC LDRSW X8, [X25 + 0x18]
	0x03A4B1B0 CMP X23, X8
	0x03A4B1B4 B.GE 0x3A4B234
	0x03A4B1B8 LDR W8, [X0 + 0xE0]
	0x03A4B1BC CBNZ W8, 0x3A4B1D0
	0x03A4B1C0 BL 0x1C16DFC
	0x03A4B1C4 LDR X8, [X21]
	0x03A4B1C8 LDR X8, [X8 + 0xB8]
	0x03A4B1CC LDR X25, [X8 + 0x18]
	0x03A4B1D0 ADD X8, X31, 0x58
	0x03A4B1D4 MOV W0, W31
	0x03A4B1D8 MOV X1, X31
	0x03A4B1DC BL 0x3C4B258
	0x03A4B1E0 LDUR V0, [X31 + 0x58]
	0x03A4B1E4 LDUR V1, [X31 + 0x68]
	0x03A4B1E8 LDR X8, [X31 + 0x78]
	0x03A4B1EC STP V0, V1, [X31 + 0x80]
	0x03A4B1F0 STR X8, [X31 + 0xA0]
	0x03A4B1F4 CBZ X25, 0x3A4B328
	0x03A4B1F8 LDP V0, V1, [X31 + 0x80]
	0x03A4B1FC LDR X8, [X31 + 0xA0]
	0x03A4B200 STP V0, V1, [X31]
	0x03A4B204 STR X8, [X31 + 0x20]
	0x03A4B208 LDR W8, [X25 + 0x18]
	0x03A4B20C CMP X23, X8
	0x03A4B210 B.CS 0x3A4B32C
	0x03A4B214 LDR X8, [X31 + 0x20]
	0x03A4B218 LDP V0, V1, [X31]
	0x03A4B21C ADD X9, X25, X24
	0x03A4B220 ADD X23, X23, 0x1
	0x03A4B224 ADD X24, X24, 0x28
	0x03A4B228 STR X8, [X9 + 0x20]
	0x03A4B22C STP V0, V1, [X9]
	0x03A4B230 B 0x3A4B18C
	0x03A4B234 ADD X8, X31, 0x58
	0x03A4B238 MOVZ W0, 0x2
	0x03A4B23C MOV X1, X31
	0x03A4B240 BL 0x3C4B204
	0x03A4B244 LDUR V0, [X31 + 0x58]
	0x03A4B248 LDUR V1, [X31 + 0x68]
	0x03A4B24C LDR X8, [X31 + 0x78]
	0x03A4B250 LDR X0, [X21]
	0x03A4B254 STP V0, V1, [X31 + 0x80]
	0x03A4B258 STR X8, [X31 + 0xA0]
	0x03A4B25C LDR W8, [X0 + 0xE0]
	0x03A4B260 CBNZ W8, 0x3A4B26C
	0x03A4B264 BL 0x1C16DFC
	0x03A4B268 LDR X0, [X21]
	0x03A4B26C LDR X8, [X0 + 0xB8]
	0x03A4B270 LDP V0, V1, [X31 + 0x80]
	0x03A4B274 LDR X9, [X31 + 0xA0]
	0x03A4B278 CMP W20, 0x0
	0x03A4B27C MOVZ W10, 0x1
	0x03A4B280 CSET W11, EQ
	0x03A4B284 STR X9, [X8 + 0x40]
	0x03A4B288 STP V0, V1, [X8 + 0x20]
	0x03A4B28C ADD X8, X31, 0x58
	0x03A4B290 MOVZ W0, 0x2
	0x03A4B294 MOV X1, X31
	0x03A4B298 STRB W11, [X19 + 0x1A0]
	0x03A4B29C STRB W10, [X19 + 0x1A1]
	0x03A4B2A0 STR X31, [X31 + 0xB0]
	0x03A4B2A4 BL 0x3C4B204
	0x03A4B2A8 LDR X8, [X31 + 0x78]
	0x03A4B2AC LDUR V0, [X31 + 0x68]
	0x03A4B2B0 LDUR V1, [X31 + 0x58]
	0x03A4B2B4 MOVZ W0, 0x2
	0x03A4B2B8 STR X8, [X31 + 0xD8]
	0x03A4B2BC STUR V0, [X22 + 0x18]
	0x03A4B2C0 STUR V1, [X22 + 0x8]
	0x03A4B2C4 LDP V1, V0, [X31 + 0xC0]
	0x03A4B2C8 LDR V2, [X31 + 0xB]
	0x03A4B2CC ADD X8, X31, 0x58
	0x03A4B2D0 MOV X1, X31
	0x03A4B2D4 STP V1, V0, [X19 + 0x120]
	0x03A4B2D8 STR V2, [X19 + 0x11]
	0x03A4B2DC STR X31, [X31 + 0xB0]
	0x03A4B2E0 BL 0x3C4B204
	0x03A4B2E4 LDR X8, [X31 + 0x78]
	0x03A4B2E8 LDUR V0, [X31 + 0x68]
	0x03A4B2EC LDUR V1, [X31 + 0x58]
	0x03A4B2F0 LDP X24, X23, [X31 + 0x100]
	0x03A4B2F4 STR X8, [X31 + 0xD8]
	0x03A4B2F8 STUR V0, [X22 + 0x18]
	0x03A4B2FC STUR V1, [X22 + 0x8]
	0x03A4B300 LDP V1, V0, [X31 + 0xC0]
	0x03A4B304 LDR V2, [X31 + 0xB]
	0x03A4B308 LDP X22, X21, [X31 + 0x110]
	0x03A4B30C LDP X30, X25, [X31 + 0xF0]
	0x03A4B310 STP V1, V0, [X19 + 0x150]
	0x03A4B314 STR V2, [X19 + 0x14]
	0x03A4B318 LDP X20, X19, [X31 + 0x120]
	0x03A4B31C LDR X29, [X31 + 0xE0]
	0x03A4B320 ADD X31, X31, 0x130
	0x03A4B324 RET
	0x03A4B328 BL 0x1C16F20
	0x03A4B32C BL 0x1C16F28
	0x03A4B330 STR X30, [X31 - 0x40]!
	0x03A4B334 STP X24, X23, [X31 + 0x10]
	0x03A4B338 STP X22, X21, [X31 + 0x20]
	0x03A4B33C STP X20, X19, [X31 + 0x30]
	0x03A4B340 ADRP X20, 0x997000
	0x03A4B344 LDRB W8, [X20 + 0x19C]
	0x03A4B348 MOV X19, X0
	0x03A4B34C TBNZ X8, 0x0, 0x3A4B388
	0x03A4B350 ADRP X0, 0x6AF000
	0x03A4B354 LDR X0, [X0 + 0xC10]
	0x03A4B358 BL 0x1C16CF4
	0x03A4B35C ADRP X0, 0x70A000
	0x03A4B360 LDR X0, [X0 + 0xDE0]
	0x03A4B364 BL 0x1C16CF4
	0x03A4B368 ADRP X0, 0x70A000
	0x03A4B36C LDR X0, [X0 + 0xDE8]

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+32], D15
	003 Move [X31+40], D14
	004 Move [X31+48], D13
	005 Move [X31+56], D12
	006 Move [X31+64], D11
	007 Move [X31+72], D10
	008 Move [X31+80], D9
	009 Move [X31+88], D8
	010 Move [X31+96], X30
	011 Move [X31+104], X25
	012 Move [X31+112], X24
	013 Move [X31+120], X23
	014 Move [X31+128], X22
	015 Move [X31+136], X21
	016 Move [X31+144], X20
	017 Move [X31+152], X19
	018 Move X23, 0x999000
	019 Move X22, 0x70C000
	020 Move W8, [X23+402]
	021 Move X22, [X22+3376]
	022 Move W21, W3
	023 Move X19, X2
	024 Move X20, X1
	025 Move X25, X0
	026 Move TEMP, X8
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {50}
	030 Move X0, 0x6D2000
	031 Move X0, [X0+2296]
	032 Call 0x1C17CF4
	033 Move X0, 0x6AA000
	034 Move X0, [X0+1448]
	035 Call 0x1C17CF4
	036 Move X0, 0x70C000
	037 Move X0, [X0+3376]
	038 Call 0x1C17CF4
	039 Move X0, 0x70B000
	040 Move X0, [X0+2248]
	041 Call 0x1C17CF4
	042 Move X0, 0x70B000
	043 Move X0, [X0+32]
	044 Call 0x1C17CF4
	045 Move X0, 0x70C000
	046 Move X0, [X0+3536]
	047 Call 0x1C17CF4
	048 Move W8, 1
	049 Move [X23+402], W8
	050 Move X0, [X22]
	051 Move [X31+24], W31
	052 Move W8, [X0+224]
	053 Compare W8, 0
	054 JumpIfNotEqual {57}
	055 Call 0x1C17DFC
	056 Move X0, [X22]
	057 Move X8, [X0+184]
	058 Add X0, X31, 24
	059 Move X1, X31
	060 Move X3, X31
	061 Move X2, [X8+32]
	062 Call ProfilingScope..ctor, X0, X1, X2
	063 Move X24, [X19+192]
	064 Compare X24, 0
	065 JumpIfEqual {386}
	066 Move S8, [X19+216]
	067 Move S9, [X19+220]
	068 Move X0, X24
	069 Move X1, X31
	070 Call Camera.get_pixelWidth, X0
	071 Move W22, W0
	072 Move X0, X24
	073 Move X1, X31
	074 Call Camera.get_pixelHeight, X0
	075 Move W23, W0
	076 Move X0, [X19+376]
	077 Compare X0, 0
	078 JumpIfEqual {387}
	079 Move X1, X31
	080 Call XRPass.get_enabled, X0
	081 Move TEMP, X0
	082 And TEMP, TEMP, 1
	083 Compare TEMP, 1
	084 JumpIfNotEqual {88}
	085 Move W22, [X19+216]
	086 Move W23, [X19+220]
	087 Move [X25+420], W31
	088 Move X0, X24
	089 Move X1, X31
	090 Call Camera.get_allowDynamicResolution, X0
	091 NotImplemented "Instruction SCVTF not yet implemented."
	092 NotImplemented "Instruction SCVTF not yet implemented."
	093 Move [X31+16], S0
	094 Move [X31+24], S1
	095 Move TEMP, X0
	096 And TEMP, TEMP, 1
	097 Compare TEMP, 1
	098 JumpIfNotEqual {110}
	099 Move X0, X31
	100 Call ScalableBufferManager.get_widthScaleFactor
	101 Move V8, V0
	102 Move X0, X31
	103 Call ScalableBufferManager.get_heightScaleFactor
	104 Move V1, [X31+20]
	105 Multiply S2, S8, S1
	106 Move V1, [X31+16]
	107 Multiply S1, S0, S1
	108 Move [X31+16], S1
	109 Move [X31+24], S2
	110 Move X0, X24
	111 Move X1, X31
	112 Call Camera.get_nearClipPlane, X0
	113 Move V11, V0
	114 Move X0, X24
	115 Move X1, X31
	116 Call Camera.get_farClipPlane, X0
	117 Move X25, 0x990000
	118 Move W8, [X25+1450]
	119 Move V10, V0
	120 Compare W8, 0
	121 JumpIfNotEqual {127}
	122 Move X0, 0x6B1000
	123 Move X0, [X0+1208]
	124 Call 0x1C17CF4
	125 Move W8, 1
	126 Move [X25+1450], W8
	127 Move X8, 0x6B1000
	128 Move X8, [X8+1208]
	129 Move X9, -49672192
	130 Move V13, [X9+576]
	131 Move S12, W31
	132 Move X8, [X8]
	133 NotImplemented "Instruction FABS not yet implemented."
	134 Move S0, 8
	135 NotImplemented "Instruction FMAXNM not yet implemented."
	136 Move X8, [X8+184]
	137 Multiply S1, S1, S13
	138 Move S9, 1
	139 NotImplemented "Instruction FABD not yet implemented."
	140 Move V2, [X8]
	141 Multiply S14, S2, S0
	142 NotImplemented "Instruction FCMP not yet implemented."
	143 NotImplemented "Instruction FCSEL not yet implemented."
	144 NotImplemented "Instruction FDIV not yet implemented."
	145 NotImplemented "Instruction FCMP not yet implemented."
	146 NotImplemented "Instruction FCSEL not yet implemented."
	147 Move X0, X24
	148 Move X1, X31
	149 Call Camera.get_orthographic, X0
	150 NotImplemented "Instruction FABS not yet implemented."
	151 NotImplemented "Instruction FMAXNM not yet implemented."
	152 Multiply S0, S0, S13
	153 NotImplemented "Instruction FCMP not yet implemented."
	154 NotImplemented "Instruction FABD not yet implemented."
	155 NotImplemented "Instruction FCSEL not yet implemented."
	156 NotImplemented "Instruction FDIV not yet implemented."
	157 NotImplemented "Instruction FCMP not yet implemented."
	158 NotImplemented "Instruction FCSEL not yet implemented."
	159 And W31, W0, 1
	160 NotImplemented "Instruction FCSEL not yet implemented."
	161 Move [X31+12], S0
	162 Move X0, X31
	163 Call SystemInfo.get_usesReversedZBuffer
	164 Move X25, 0x70B000
	165 Move X25, [X25+32]
	166 Multiply S12, S10, S13
	167 Subtract S15, S9, S12
	168 Multiply S13, S15, S8
	169 Multiply S14, S12, S8
	170 Move TEMP, X0
	171 And TEMP, TEMP, 1
	172 Compare TEMP, 1
	173 JumpIfNotEqual {178}
	174 Add S12, S12, S15
	175 NotImplemented "Instruction FNEG not yet implemented."
	176 Add S14, S14, S13
	177 NotImplemented "Instruction FNEG not yet implemented."
	178 Move X0, [X25]
	179 And W31, W21, 1
	180 Move S0, 1
	181 Move S1, -1
	182 Move W8, [X0+224]
	183 NotImplemented "Instruction FCSEL not yet implemented."
	184 Compare W8, 0
	185 JumpIfNotEqual {187}
	186 Call 0x1C17DFC
	187 Compare X20, 0
	188 JumpIfEqual {388}
	189 Move X8, [X25]
	190 Move X8, [X8+184]
	191 Move W1, [X8+64]
	192 Move X0, X20
	193 Move V0, V9
	194 Move V1, V11
	195 Move V2, V10
	196 Move V3, V8
	197 Move X2, X31
	198 Call CommandBuffer.SetGlobalVector, X0, X1, X2
	199 Move X0, X24
	200 Move X1, X31
	201 Call Camera.get_orthographicSize, X0
	202 Move [X31+8], S0
	203 Move V0, [X19+328]
	204 Move [X31], S0
	205 Move X0, X24
	206 Move X1, X31
	207 Call Camera.get_orthographicSize, X0
	208 Move [X31+4], S0
	209 Move X8, [X25]
	210 Move V0, [X19+452]
	211 Move V1, [X19+456]
	212 Move V2, [X19+460]
	213 Move X8, [X8+184]
	214 Move W1, [X8+52]
	215 Move S3, W31
	216 Move X0, X20
	217 Move X2, X31
	218 Call CommandBuffer.SetGlobalVector, X0, X1, X2
	219 Move X8, [X25]
	220 NotImplemented "Instruction SCVTF not yet implemented."
	221 Move S8, 1
	222 NotImplemented "Instruction SCVTF not yet implemented."
	223 Move X8, [X8+184]
	224 NotImplemented "Instruction FDIV not yet implemented."
	225 Add S2, S0, S8
	226 NotImplemented "Instruction FDIV not yet implemented."
	227 Move W1, [X8+56]
	228 Add S3, S0, S8
	229 Move X0, X20
	230 Move V0, V11
	231 Move X2, X31
	232 Call CommandBuffer.SetGlobalVector, X0, X1, X2
	233 Move X8, [X25]
	234 Move S1, [X31+16]
	235 Move S0, [X31+20]
	236 Move X8, [X8+184]
	237 NotImplemented "Instruction FDIV not yet implemented."
	238 NotImplemented "Instruction FDIV not yet implemented."
	239 Add S2, S9, S8
	240 Move W1, [X8+48]
	241 Add S3, S10, S8
	242 Move X0, X20
	243 Move X2, X31
	244 Call CommandBuffer.SetGlobalVector, X0, X1, X2
	245 Move X8, [X25]
	246 Move X8, [X8+184]
	247 Move W1, [X8+68]
	248 Move X0, X20
	249 Move V0, V15
	250 Move V1, V12
	251 Move V2, V13
	252 Move V3, V14
	253 Move X2, X31
	254 Call CommandBuffer.SetGlobalVector, X0, X1, X2
	255 Move X8, [X25]
	256 Move S0, [X31+8]
	257 Move S3, [X31+12]
	258 Move V1, [X31]
	259 Move X8, [X8+184]
	260 Multiply S0, S0, S1
	261 Move W1, [X8+72]
	262 Move V1, [X31+4]
	263 Move S2, W31
	264 Move X0, X20
	265 Move X2, X31
	266 Call CommandBuffer.SetGlobalVector, X0, X1, X2
	267 Move X8, [X25]
	268 Move X8, [X8+184]
	269 Move W1, [X8+80]
	270 Move S1, [X31+16]
	271 Move S0, [X31+20]
	272 Move X0, X20
	273 Move V2, V9
	274 Move V3, V10
	275 Move X2, X31
	276 Call CommandBuffer.SetGlobalVector, X0, X1, X2
	277 Move X8, 0x6D1000
	278 Move X8, [X8+2296]
	279 Move W22, [X19+284]
	280 Move X0, [X8]
	281 Move W8, [X0+224]
	282 Compare W8, 0
	283 JumpIfNotEqual {285}
	284 Call 0x1C17DFC
	285 Move X8, 0x70B000
	286 Move X8, [X8+3536]
	287 NotImplemented "Instruction CMP not yet implemented."
	288 NotImplemented "Instruction CSET not yet implemented."
	289 Move X1, [X8]
	290 Move X0, X20
	291 Move X3, X31
	292 Call CoreUtils.SetKeyword, X0, X1, X2
	293 Move X8, [X25]
	294 Move V0, [X19+288]
	295 Move V1, [X19+292]
	296 Move V2, [X19+296]
	297 Move X8, [X8+184]
	298 Move V3, [X19+300]
	299 Move W1, [X8+88]
	300 Move X0, X20
	301 Move X2, X31
	302 Call CommandBuffer.SetGlobalVector, X0, X1, X2
	303 Move X8, [X25]
	304 Move V0, [X19+304]
	305 Move V1, [X19+308]
	306 Move V2, [X19+312]
	307 Move X8, [X8+184]
	308 Move V3, [X19+316]
	309 Move W1, [X8+84]
	310 Move X0, X20
	311 Move X2, X31
	312 Call CommandBuffer.SetGlobalVector, X0, X1, X2
	313 Move X8, 0x6A9000
	314 Move X8, [X8+1448]
	315 Move X0, [X8]
	316 Move W8, [X0+224]
	317 Compare W8, 0
	318 JumpIfNotEqual {320}
	319 Call 0x1C17DFC
	320 Move V0, [X31+20]
	321 NotImplemented "Instruction FDIV not yet implemented."
	322 NotImplemented "Instruction FCVT not yet implemented."
	323 Move D1, 2
	324 Move X0, X31
	325 Call Math.Log, V0, V1
	326 NotImplemented "Instruction INVALID not yet implemented."
	327 NotImplemented "Instruction FNEG not yet implemented."
	328 Move S1, W31
	329 Move X0, X31
	330 Call Math.Min, V0, V1
	331 Move V8, V0
	332 Move V0, [X19+500]
	333 Move S1, W31
	334 Move X0, X31
	335 Call Math.Min, V0, V1
	336 Move V1, V0
	337 Move V0, V8
	338 Move X0, X31
	339 Call Math.Min, V0, V1
	340 Move X8, [X25]
	341 Move V8, V0
	342 Move X8, [X8+184]
	343 Move W22, [X8+76]
	344 Call 0x3EB2B90
	345 Move V1, V0
	346 Move S2, W31
	347 Move S3, W31
	348 Move X0, X20
	349 Move W1, W22
	350 Move V0, V8
	351 Move X2, X31
	352 Call CommandBuffer.SetGlobalVector, X0, X1, X2
	353 Move X8, 0x70A000
	354 Move X8, [X8+2248]
	355 Move X0, [X8]
	356 Move W8, [X0+224]
	357 Compare W8, 0
	358 JumpIfNotEqual {360}
	359 Call 0x1C17DFC
	360 And W3, W21, 1
	361 Move W2, 1
	362 Move X0, X20
	363 Move X1, X19
	364 Call ScriptableRenderer.SetCameraMatrices, X0, X1, X2, X3
	365 Add X0, X31, 24
	366 Move X1, X31
	367 Call ProfilingScope.Dispose, X0
	368 Move X20, [X31+144]
	369 Move X19, [X31+152]
	370 Move X22, [X31+128]
	371 Move X21, [X31+136]
	372 Move X24, [X31+112]
	373 Move X23, [X31+120]
	374 Move X30, [X31+96]
	375 Move X25, [X31+104]
	376 Move D9, [X31+80]
	377 Move D8, [X31+88]
	378 Move D11, [X31+64]
	379 Move D10, [X31+72]
	380 Move D13, [X31+48]
	381 Move D12, [X31+56]
	382 Move D15, [X31+32]
	383 Move D14, [X31+40]
	384 Add X31, X31, 160
	385 Return 
	386 Call 0x1C17F20
	387 Call 0x1C17F20
	388 Call 0x1C17F20
	389 Move X19, X0
	390 NotImplemented "Instruction CMP not yet implemented."
	391 Move X0, X19
	392 Call 0x3EB2AD0
	393 Move X20, [X0]
	394 Call 0x3EB2AE0
	395 Add X0, X31, 24
	396 Move X1, X31
	397 Call ProfilingScope.Dispose, X0
	398 Compare X20, 0
	399 JumpIfEqual {368}
	400 Move X0, X20
	401 Call 0x1C17F18
	402 Move X20, X31
	403 Move X19, X0
	404 Add X0, X31, 24
	405 Move X1, X31
	406 Call ProfilingScope.Dispose, X0
	407 Compare X20, 0
	408 JumpIfNotEqual {411}
	409 Move X0, X19
	410 Call 0x1D2D690
	411 Move X0, X20
	412 Call 0x1C17F18
	413 Call 0x1991590

Method: System.Void SetPerCameraBillboardProperties(UnityEngine.Rendering.CommandBuffer cmd, ref UnityEngine.Rendering.Universal.CameraData cameraData)

Disassembly:
	0x03A4B370 BL 0x1C16CF4
	0x03A4B374 ADRP X0, 0x6A8000
	0x03A4B378 LDR X0, [X0 + 0x598]
	0x03A4B37C BL 0x1C16CF4
	0x03A4B380 MOVZ W8, 0x1
	0x03A4B384 STRB W8, [X20 + 0x19C]
	0x03A4B388 LDR X0, [X19 + 0x108]
	0x03A4B38C CBZ X0, 0x3A4B41C
	0x03A4B390 ADRP X23, 0x70A000
	0x03A4B394 ADRP X24, 0x6A8000
	0x03A4B398 ADRP X22, 0x6AF000
	0x03A4B39C LDR X23, [X23 + 0xDE8]
	0x03A4B3A0 LDR X24, [X24 + 0x598]
	0x03A4B3A4 LDR X22, [X22 + 0xC10]
	0x03A4B3A8 MOV W20, W31
	0x03A4B3AC LDR W8, [X0 + 0x18]
	0x03A4B3B0 CMP W20, W8
	0x03A4B3B4 B.GE 0x3A4B420
	0x03A4B3B8 LDR X2, [X23]
	0x03A4B3BC MOV W1, W20
	0x03A4B3C0 BL 0x301BCCC
	0x03A4B3C4 LDR X8, [X24]
	0x03A4B3C8 MOV X21, X0
	0x03A4B3CC LDR W9, [X8 + 0xE0]
	0x03A4B3D0 CBNZ W9, 0x3A4B3DC
	0x03A4B3D4 MOV X0, X8
	0x03A4B3D8 BL 0x1C16DFC
	0x03A4B3DC MOV X0, X21
	0x03A4B3E0 MOV X1, X31
	0x03A4B3E4 MOV X2, X31
	0x03A4B3E8 BL 0x3C3883C
	0x03A4B3EC TBNZ X0, 0x0, 0x3A4B410
	0x03A4B3F0 LDR X0, [X19 + 0x108]
	0x03A4B3F4 CBZ X0, 0x3A4B41C
	0x03A4B3F8 LDR X2, [X23]
	0x03A4B3FC MOV W1, W20
	0x03A4B400 BL 0x301BCCC
	0x03A4B404 CBZ X0, 0x3A4B41C
	0x03A4B408 MOV X1, X31
	0x03A4B40C BL 0x3A75914
	0x03A4B410 LDR X0, [X19 + 0x108]
	0x03A4B414 ADD W20, W20, 0x1
	0x03A4B418 CBNZ X0, 0x3A4B3AC
	0x03A4B41C BL 0x1C16F20
	0x03A4B420 LDR X8, [X19]
	0x03A4B424 MOVZ W1, 0x1
	0x03A4B428 MOV X0, X19
	0x03A4B42C MOVZ W20, 0x1
	0x03A4B430 LDP X9, X2, [X8 + 0x1B8]
	0x03A4B434 BLR X9
	0x03A4B438 STRB W20, [X19 + 0xD8]
	0x03A4B43C LDR X0, [X22]
	0x03A4B440 LDR W8, [X0 + 0xE0]
	0x03A4B444 CBNZ W8, 0x3A4B44C
	0x03A4B448 BL 0x1C16DFC
	0x03A4B44C MOV X0, X19
	0x03A4B450 LDP X20, X19, [X31 + 0x30]
	0x03A4B454 LDP X22, X21, [X31 + 0x20]
	0x03A4B458 LDP X24, X23, [X31 + 0x10]
	0x03A4B45C MOV X1, X31
	0x03A4B460 LDR X30, [X31], #0x40
	0x03A4B464 B 0x33B3E9C
	0x03A4B468 LDR X0, [X0 + 0xE0]
	0x03A4B46C CBZ X0, 0x3A4B478
	0x03A4B470 MOV X1, X31
	0x03A4B474 B 0x3A35C68
	0x03A4B478 RET
	0x03A4B47C RET
	0x03A4B480 STR X31, [X31 - 0x30]!
	0x03A4B484 LDP V0, V1, [X1]
	0x03A4B488 LDR X8, [X1 + 0x20]
	0x03A4B48C STUR V0, [X31 + 0x8]
	0x03A4B490 STUR V1, [X31 + 0x18]
	0x03A4B494 STR X8, [X31 + 0x28]
	0x03A4B498 LDP V1, V0, [X31 + 0x10]
	0x03A4B49C LDR V2, [X31]
	0x03A4B4A0 STP V1, V0, [X0 + 0x120]
	0x03A4B4A4 STR V2, [X0 + 0x11]
	0x03A4B4A8 STR X31, [X31]
	0x03A4B4AC LDP V0, V1, [X2]
	0x03A4B4B0 LDR X8, [X2 + 0x20]
	0x03A4B4B4 STUR V0, [X31 + 0x8]
	0x03A4B4B8 STUR V1, [X31 + 0x18]
	0x03A4B4BC STR X8, [X31 + 0x28]
	0x03A4B4C0 LDP V1, V0, [X31 + 0x10]
	0x03A4B4C4 LDR V2, [X31]
	0x03A4B4C8 STP V1, V0, [X0 + 0x150]
	0x03A4B4CC STR V2, [X0 + 0x14]
	0x03A4B4D0 ADD X31, X31, 0x30
	0x03A4B4D4 RET
	0x03A4B4D8 ADD X8, X0, 0x118
	0x03A4B4DC MOVI V0.2D, 0x0
	0x03A4B4E0 STR X1, [X0 + 0x110]
	0x03A4B4E4 STR V0, [X8]
	0x03A4B4E8 ADD X8, X0, 0x128
	0x03A4B4EC STR V0, [X8]
	0x03A4B4F0 ADD X8, X0, 0x148
	0x03A4B4F4 ADD X9, X0, 0x158
	0x03A4B4F8 STP X31, X2, [X0 + 0x138]
	0x03A4B4FC STR X31, [X0 + 0x168]
	0x03A4B500 STR V0, [X8]
	0x03A4B504 STR V0, [X9]
	0x03A4B508 RET
	0x03A4B50C STR X31, [X31 - 0x30]!
	0x03A4B510 LDP V0, V1, [X1]
	0x03A4B514 LDR X8, [X1 + 0x20]
	0x03A4B518 STUR V0, [X31 + 0x8]
	0x03A4B51C STUR V1, [X31 + 0x18]
	0x03A4B520 STR X8, [X31 + 0x28]
	0x03A4B524 LDP V1, V0, [X31 + 0x10]
	0x03A4B528 LDR V2, [X31]
	0x03A4B52C STP V1, V0, [X0 + 0x120]
	0x03A4B530 STR V2, [X0 + 0x11]
	0x03A4B534 STR X31, [X31]
	0x03A4B538 LDP V0, V1, [X2]
	0x03A4B53C LDR X8, [X2 + 0x20]
	0x03A4B540 STUR V0, [X31 + 0x8]
	0x03A4B544 STUR V1, [X31 + 0x18]

ISIL:
	001 Subtract X31, X31, 272
	002 Move [X31+176], D10
	003 Move [X31+192], D9
	004 Move [X31+200], D8
	005 Move [X31+208], X29
	006 Move [X31+216], X30
	007 Move [X31+224], X24
	008 Move [X31+232], X23
	009 Move [X31+240], X22
	010 Move [X31+248], X21
	011 Move [X31+256], X20
	012 Move [X31+264], X19
	013 Move X22, 0x998000
	014 Move X21, 0x6D1000
	015 Move W8, [X22+403]
	016 Move X21, [X21+2296]
	017 Move X20, X2
	018 Move X19, X1
	019 Add X23, X31, 112
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {38}
	024 Move X0, 0x6D1000
	025 Move X0, [X0+2296]
	026 Call 0x1C17CF4
	027 Move X0, 0x70A000
	028 Move X0, [X0+2248]
	029 Call 0x1C17CF4
	030 Move X0, 0x70A000
	031 Move X0, [X0+32]
	032 Call 0x1C17CF4
	033 Move X0, 0x70B000
	034 Move X0, [X0+3544]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X22+403], W8
	038 Move X24, 0x70B000
	039 Move X22, 0x70A000
	040 Move X24, [X24+3544]
	041 Move X22, [X22+2248]
	042 Add X8, X31, 8
	043 Move X0, X20
	044 Move W1, W31
	045 Move X2, X31
	046 Move [X31+104], W31
	047 Move [X31+96], X31
	048 Move [X31+88], W31
	049 Move [X31+80], X31
	050 Move [X31+76], W31
	051 Call CameraData.GetViewMatrix, X0, X1
	052 NotImplemented "Instruction LDUR not yet implemented."
	053 NotImplemented "Instruction LDUR not yet implemented."
	054 NotImplemented "Instruction LDUR not yet implemented."
	055 NotImplemented "Instruction LDUR not yet implemented."
	056 Move X0, X31
	057 Move [X31+112], V0
	058 Move [X31+120], V1
	059 Move [X23+32], V2
	060 Move [X23+40], V3
	061 Move V10, [X20+452]
	062 Move V8, [X20+456]
	063 Move V9, [X20+460]
	064 Call QualitySettings.get_billboardsFaceCameraPosition
	065 Move X8, [X21]
	066 Move W20, W0
	067 Move W9, [X8+224]
	068 Compare W9, 0
	069 JumpIfNotEqual {72}
	070 Move X0, X8
	071 Call 0x1C17DFC
	072 Move X1, [X24]
	073 Move X21, 0x70A000
	074 Move X21, [X21+32]
	075 And W2, W20, 1
	076 Move X0, X19
	077 Move X3, X31
	078 Call CoreUtils.SetKeyword, X0, X1, X2
	079 Move X0, [X22]
	080 Move W8, [X0+224]
	081 Compare W8, 0
	082 JumpIfNotEqual {84}
	083 Call 0x1C17DFC
	084 Add X0, X31, 112
	085 Add X1, X31, 96
	086 Add X2, X31, 80
	087 Add X3, X31, 76
	088 Call ScriptableRenderer.CalculateBillboardProperties, X0, X1, X2, X3
	089 Move X0, [X21]
	090 Move W8, [X0+224]
	091 Compare W8, 0
	092 JumpIfNotEqual {94}
	093 Call 0x1C17DFC
	094 Compare X19, 0
	095 JumpIfEqual {139}
	096 Move X8, [X21]
	097 Move S1, [X31+84]
	098 Move S2, [X31+88]
	099 Move V0, [X31+80]
	100 Move S3, W31
	101 Move X8, [X8+184]
	102 Move X0, X19
	103 Move X2, X31
	104 Move W1, [X8+148]
	105 Call CommandBuffer.SetGlobalVector, X0, X1, X2
	106 Move X8, [X21]
	107 Move S0, [X31+96]
	108 Move S1, [X31+100]
	109 Move V2, [X31+104]
	110 Move S3, W31
	111 Move X8, [X8+184]
	112 Move X0, X19
	113 Move X2, X31
	114 Move W1, [X8+152]
	115 Call CommandBuffer.SetGlobalVector, X0, X1, X2
	116 Move X8, [X21]
	117 Move V3, [X31+76]
	118 Move X0, X19
	119 Move V0, V10
	120 Move X8, [X8+184]
	121 Move V1, V8
	122 Move V2, V9
	123 Move X2, X31
	124 Move W1, [X8+156]
	125 Call CommandBuffer.SetGlobalVector, X0, X1, X2
	126 Move X20, [X31+256]
	127 Move X19, [X31+264]
	128 Move X22, [X31+240]
	129 Move X21, [X31+248]
	130 Move X24, [X31+224]
	131 Move X23, [X31+232]
	132 Move X29, [X31+208]
	133 Move X30, [X31+216]
	134 Move D9, [X31+192]
	135 Move D8, [X31+200]
	136 Move V10, [X31+176]
	137 Add X31, X31, 272
	138 Return 
	139 Call 0x1C17F20

Method: System.Void CalculateBillboardProperties(in UnityEngine.Matrix4x4 worldToCameraMatrix, out UnityEngine.Vector3 billboardTangent, out UnityEngine.Vector3 billboardNormal, out System.Single cameraXZAngle)

Disassembly:
	0x03A4B548 STR X8, [X31 + 0x28]
	0x03A4B54C LDP V1, V0, [X31 + 0x10]
	0x03A4B550 LDR V2, [X31]
	0x03A4B554 STP V1, V0, [X0 + 0x150]
	0x03A4B558 STR V2, [X0 + 0x14]
	0x03A4B55C STR X31, [X31]
	0x03A4B560 LDP V0, V1, [X3]
	0x03A4B564 LDR X8, [X3 + 0x20]
	0x03A4B568 STUR V0, [X31 + 0x8]
	0x03A4B56C STUR V1, [X31 + 0x18]
	0x03A4B570 STR X8, [X31 + 0x28]
	0x03A4B574 LDP V1, V0, [X31 + 0x10]
	0x03A4B578 LDR V2, [X31]
	0x03A4B57C STP V1, V0, [X0 + 0x180]
	0x03A4B580 STR V2, [X0 + 0x17]
	0x03A4B584 ADD X31, X31, 0x30
	0x03A4B588 RET
	0x03A4B58C ADD X8, X0, 0x118
	0x03A4B590 MOVI V0.2D, 0x0
	0x03A4B594 STR X1, [X0 + 0x110]
	0x03A4B598 STR V0, [X8]
	0x03A4B59C ADD X8, X0, 0x128
	0x03A4B5A0 STR V0, [X8]
	0x03A4B5A4 ADD X8, X0, 0x148
	0x03A4B5A8 ADD X9, X0, 0x158
	0x03A4B5AC STP X31, X2, [X0 + 0x138]
	0x03A4B5B0 STR V0, [X8]
	0x03A4B5B4 ADD X8, X0, 0x178
	0x03A4B5B8 STR V0, [X9]
	0x03A4B5BC ADD X9, X0, 0x188
	0x03A4B5C0 STP X31, X3, [X0 + 0x168]
	0x03A4B5C4 STR X31, [X0 + 0x198]
	0x03A4B5C8 STR V0, [X8]
	0x03A4B5CC STR V0, [X9]
	0x03A4B5D0 RET
	0x03A4B5D4 STR X31, [X31 - 0x30]!
	0x03A4B5D8 LDP V0, V1, [X1]
	0x03A4B5DC LDR X8, [X1 + 0x20]
	0x03A4B5E0 STUR V0, [X31 + 0x8]
	0x03A4B5E4 STUR V1, [X31 + 0x18]
	0x03A4B5E8 STR X8, [X31 + 0x28]
	0x03A4B5EC LDP V1, V0, [X31 + 0x10]
	0x03A4B5F0 LDR V2, [X31]
	0x03A4B5F4 STP V1, V0, [X0 + 0x120]
	0x03A4B5F8 STR V2, [X0 + 0x11]
	0x03A4B5FC ADD X31, X31, 0x30
	0x03A4B600 RET
	0x03A4B604 ADD X8, X0, 0x118
	0x03A4B608 MOVI V0.2D, 0x0
	0x03A4B60C ADD X9, X0, 0x128
	0x03A4B610 STR X1, [X0 + 0x110]
	0x03A4B614 STR X31, [X0 + 0x138]
	0x03A4B618 STR V0, [X8]
	0x03A4B61C STR V0, [X9]
	0x03A4B620 RET
	0x03A4B624 RET
	0x03A4B628 RET
	0x03A4B62C RET
	0x03A4B630 RET
	0x03A4B634 STR X29, [X31 - 0x40]!
	0x03A4B638 STP X30, X23, [X31 + 0x10]
	0x03A4B63C STP X22, X21, [X31 + 0x20]
	0x03A4B640 STP X20, X19, [X31 + 0x30]
	0x03A4B644 SUB X31, X31, 0x2E0
	0x03A4B648 ADRP X23, 0x997000
	0x03A4B64C ADRP X22, 0x70A000
	0x03A4B650 LDRB W8, [X23 + 0x19D]
	0x03A4B654 LDR X22, [X22 + 0xD30]
	0x03A4B658 MOV X20, X2
	0x03A4B65C MOV X21, X1
	0x03A4B660 MOV X19, X0
	0x03A4B664 TBNZ X8, 0x0, 0x3A4B6C4
	0x03A4B668 ADRP X0, 0x70A000
	0x03A4B66C LDR X0, [X0 + 0xD30]
	0x03A4B670 BL 0x1C16CF4
	0x03A4B674 ADRP X0, 0x70A000
	0x03A4B678 LDR X0, [X0 + 0xDF0]
	0x03A4B67C BL 0x1C16CF4
	0x03A4B680 ADRP X0, 0x70A000
	0x03A4B684 LDR X0, [X0 + 0xDF8]
	0x03A4B688 BL 0x1C16CF4
	0x03A4B68C ADRP X0, 0x70A000
	0x03A4B690 LDR X0, [X0 + 0xE00]
	0x03A4B694 BL 0x1C16CF4
	0x03A4B698 ADRP X0, 0x70A000
	0x03A4B69C LDR X0, [X0 + 0xE08]
	0x03A4B6A0 BL 0x1C16CF4
	0x03A4B6A4 ADRP X0, 0x70A000
	0x03A4B6A8 LDR X0, [X0 + 0xE10]
	0x03A4B6AC BL 0x1C16CF4
	0x03A4B6B0 ADRP X0, 0x70A000
	0x03A4B6B4 LDR X0, [X0 + 0xE18]
	0x03A4B6B8 BL 0x1C16CF4
	0x03A4B6BC MOVZ W8, 0x1
	0x03A4B6C0 STRB W8, [X23 + 0x19D]
	0x03A4B6C4 LDR X0, [X22]
	0x03A4B6C8 MOVI V0.2D, 0x0
	0x03A4B6CC STP V0, V0, [X31 + 0x2C0]
	0x03A4B6D0 STR X31, [X31 + 0x2E8]
	0x03A4B6D4 LDR W8, [X0 + 0xE0]
	0x03A4B6D8 CBNZ W8, 0x3A4B6E0
	0x03A4B6DC BL 0x1C16DFC
	0x03A4B6E0 CBZ X21, 0x3A4B81C
	0x03A4B6E4 LDR X8, [X22]
	0x03A4B6E8 ADRP X9, 0x70A000
	0x03A4B6EC ADRP X10, 0x70A000
	0x03A4B6F0 ADD X2, X31, 0x2E8
	0x03A4B6F4 LDR X8, [X8 + 0xB8]
	0x03A4B6F8 LDR X9, [X9 + 0xE18]
	0x03A4B6FC LDR X10, [X10 + 0xE00]
	0x03A4B700 MOV X0, X21
	0x03A4B704 LDR X3, [X8 + 0x18]
	0x03A4B708 LDR X1, [X9]
	0x03A4B70C LDR X4, [X10]
	0x03A4B710 ADD X8, X31, 0x8
	0x03A4B714 BL 0x2240F24
	0x03A4B718 LDUR V0, [X31 + 0x8]
	0x03A4B71C LDUR V1, [X31 + 0x18]
	0x03A4B720 LDR X21, [X31 + 0x2E8]
	0x03A4B724 ADD X0, X31, 0x8
	0x03A4B728 MOVZ W2, 0x2B8
	0x03A4B72C MOV X1, X20
	0x03A4B730 STP V0, V1, [X31 + 0x2C0]
	0x03A4B734 BL 0x3EB1AC0
	0x03A4B738 CBZ X21, 0x3A4B820
	0x03A4B73C ADD X0, X21, 0x10
	0x03A4B740 ADD X1, X31, 0x8
	0x03A4B744 MOVZ W2, 0x2B8
	0x03A4B748 BL 0x3EB1AC0
	0x03A4B74C STR X19, [X21 + 0x2C8]
	0x03A4B750 ADD X0, X31, 0x2C0
	0x03A4B754 MOV W1, W31
	0x03A4B758 MOV X2, X31
	0x03A4B75C BL 0x398E404
	0x03A4B760 ADRP X21, 0x70A000
	0x03A4B764 LDR X21, [X21 + 0xE10]
	0x03A4B768 LDR X8, [X21]
	0x03A4B76C LDR W9, [X8 + 0xE0]
	0x03A4B770 CBNZ W9, 0x3A4B780
	0x03A4B774 MOV X0, X8
	0x03A4B778 BL 0x1C16DFC
	0x03A4B77C LDR X8, [X21]
	0x03A4B780 LDR X9, [X8 + 0xB8]
	0x03A4B784 LDR X19, [X9 + 0x8]
	0x03A4B788 CBNZ X19, 0x3A4B7E0
	0x03A4B78C LDR W9, [X8 + 0xE0]
	0x03A4B790 CBNZ W9, 0x3A4B7A0
	0x03A4B794 MOV X0, X8
	0x03A4B798 BL 0x1C16DFC
	0x03A4B79C LDR X8, [X21]
	0x03A4B7A0 ADRP X9, 0x70A000
	0x03A4B7A4 LDR X8, [X8 + 0xB8]
	0x03A4B7A8 LDR X9, [X9 + 0xDF0]
	0x03A4B7AC LDR X20, [X8]
	0x03A4B7B0 LDR X0, [X9]
	0x03A4B7B4 BL 0x1C16F10
	0x03A4B7B8 ADRP X8, 0x70A000
	0x03A4B7BC LDR X8, [X8 + 0xE08]
	0x03A4B7C0 MOV X19, X0
	0x03A4B7C4 LDR X2, [X8]
	0x03A4B7C8 MOV X1, X20
	0x03A4B7CC MOV X3, X31
	0x03A4B7D0 BL 0x25C78AC
	0x03A4B7D4 LDR X8, [X21]
	0x03A4B7D8 LDR X8, [X8 + 0xB8]
	0x03A4B7DC STR X19, [X8 + 0x8]
	0x03A4B7E0 ADRP X8, 0x70A000
	0x03A4B7E4 LDR X8, [X8 + 0xDF8]
	0x03A4B7E8 LDR X2, [X8]
	0x03A4B7EC ADD X0, X31, 0x2C0
	0x03A4B7F0 MOV X1, X19
	0x03A4B7F4 BL 0x224107C
	0x03A4B7F8 ADD X0, X31, 0x2C0
	0x03A4B7FC MOV X1, X31
	0x03A4B800 BL 0x39972C0
	0x03A4B804 ADD X31, X31, 0x2E0
	0x03A4B808 LDP X20, X19, [X31 + 0x30]
	0x03A4B80C LDP X22, X21, [X31 + 0x20]
	0x03A4B810 LDP X30, X23, [X31 + 0x10]
	0x03A4B814 LDR X29, [X31], #0x40
	0x03A4B818 RET
	0x03A4B81C BL 0x1C16F20
	0x03A4B820 BL 0x1C16F20
	0x03A4B824 B 0x3A4B830
	0x03A4B828 B 0x3A4B830
	0x03A4B82C B 0x3A4B830
	0x03A4B830 MOV X19, X0
	0x03A4B834 CMP W1, 0x1
	0x03A4B838 B.NE 0x3A4B864
	0x03A4B83C MOV X0, X19
	0x03A4B840 BL 0x3EB1AD0
	0x03A4B844 LDR X20, [X0]
	0x03A4B848 BL 0x3EB1AE0
	0x03A4B84C ADD X0, X31, 0x2C0
	0x03A4B850 MOV X1, X31
	0x03A4B854 BL 0x39972C0
	0x03A4B858 CBZ X20, 0x3A4B804
	0x03A4B85C MOV X0, X20
	0x03A4B860 BL 0x1C16F18
	0x03A4B864 MOV X20, X31
	0x03A4B868 B 0x3A4B870
	0x03A4B86C MOV X19, X0
	0x03A4B870 ADD X0, X31, 0x2C0
	0x03A4B874 MOV X1, X31
	0x03A4B878 BL 0x39972C0
	0x03A4B87C CBNZ X20, 0x3A4B888
	0x03A4B880 MOV X0, X19
	0x03A4B884 BL 0x1D2C690
	0x03A4B888 MOV X0, X20
	0x03A4B88C BL 0x1C16F18
	0x03A4B890 BL 0x1990590
	0x03A4B894 SUB X31, X31, 0x70
	0x03A4B898 STR X30, [X31 + 0x40]
	0x03A4B89C STP X22, X21, [X31 + 0x50]
	0x03A4B8A0 STP X20, X19, [X31 + 0x60]
	0x03A4B8A4 ADRP X22, 0x997000
	0x03A4B8A8 ADRP X21, 0x70A000
	0x03A4B8AC LDRB W8, [X22 + 0x19E]
	0x03A4B8B0 LDR X21, [X21 + 0xD30]
	0x03A4B8B4 MOV X19, X2
	0x03A4B8B8 MOV X20, X1
	0x03A4B8BC TBNZ X8, 0x0, 0x3A4B91C
	0x03A4B8C0 ADRP X0, 0x70A000
	0x03A4B8C4 LDR X0, [X0 + 0xD30]
	0x03A4B8C8 BL 0x1C16CF4
	0x03A4B8CC ADRP X0, 0x70A000
	0x03A4B8D0 LDR X0, [X0 + 0xE20]
	0x03A4B8D4 BL 0x1C16CF4
	0x03A4B8D8 ADRP X0, 0x70A000
	0x03A4B8DC LDR X0, [X0 + 0xE28]
	0x03A4B8E0 BL 0x1C16CF4
	0x03A4B8E4 ADRP X0, 0x70A000
	0x03A4B8E8 LDR X0, [X0 + 0xE30]
	0x03A4B8EC BL 0x1C16CF4
	0x03A4B8F0 ADRP X0, 0x70A000
	0x03A4B8F4 LDR X0, [X0 + 0xE38]
	0x03A4B8F8 BL 0x1C16CF4
	0x03A4B8FC ADRP X0, 0x70A000
	0x03A4B900 LDR X0, [X0 + 0xE10]
	0x03A4B904 BL 0x1C16CF4
	0x03A4B908 ADRP X0, 0x70A000
	0x03A4B90C LDR X0, [X0 + 0xE40]
	0x03A4B910 BL 0x1C16CF4

ISIL:
	001 Subtract X31, X31, 288
	002 Move [X31+144], D15
	003 Move [X31+152], D14
	004 Move [X31+160], D13
	005 Move [X31+168], D12
	006 Move [X31+176], D11
	007 Move [X31+184], D10
	008 Move [X31+192], D9
	009 Move [X31+200], D8
	010 Move [X31+208], X29
	011 Move [X31+224], X30
	012 Move [X31+232], X25
	013 Move [X31+240], X24
	014 Move [X31+248], X23
	015 Move [X31+256], X22
	016 Move [X31+264], X21
	017 Move [X31+272], X20
	018 Move [X31+280], X19
	019 Move V1, [X0+32]
	020 Move V0, [X0+48]
	021 Move V3, [X0]
	022 Move V2, [X0+16]
	023 Move X20, X1
	024 Add X8, X31, 16
	025 Add X0, X31, 80
	026 Move X1, X31
	027 Move X19, X3
	028 Move X21, X2
	029 Move [X31+112], V1
	030 Move [X31+120], V0
	031 Move [X31+80], V3
	032 Move [X31+88], V2
	033 Call Matrix4x4.get_transpose, X0
	034 Move V1, [X31+16]
	035 Move V0, [X31+32]
	036 Move V2, [X31+48]
	037 Move V3, [X31+64]
	038 Move X22, 0x98E000
	039 Move W8, [X22+1926]
	040 Move [X31+5], V1
	041 Move [X31+96], V0
	042 Move [X31+104], V2
	043 Move V0, [X31+96]
	044 Move S14, [X31+80]
	045 Move S15, [X31+84]
	046 Move V8, [X31+88]
	047 Move S9, [X31+112]
	048 Move S13, [X31+116]
	049 Move [X31+216], D0
	050 Move V0, [X31+104]
	051 Move V10, [X31+120]
	052 Move [X31+8], V3
	053 Move [X31+12], S0
	054 Compare W8, 0
	055 JumpIfNotEqual {61}
	056 Move X0, 0x6A9000
	057 Move X0, [X0+1440]
	058 Call 0x1C17CF4
	059 Move W8, 1
	060 Move [X22+1926], W8
	061 Move X22, 0x6A9000
	062 Move X22, [X22+1440]
	063 Move X23, 0x98F000
	064 Move X8, [X22]
	065 Move X8, [X8+184]
	066 Move S3, [X8+28]
	067 Move S12, [X8+32]
	068 Move V11, [X8+24]
	069 Move W8, [X23+1450]
	070 Multiply S0, S13, S12
	071 Multiply S1, S10, S3
	072 Multiply S2, S10, S11
	073 Subtract S4, S0, S1
	074 Multiply S0, S9, S12
	075 Move V10, V3
	076 Multiply S1, S9, S3
	077 Multiply S3, S13, S11
	078 Subtract S9, S2, S0
	079 Subtract S2, S1, S3
	080 Multiply S0, S4, S4
	081 Multiply S1, S9, S9
	082 Add S0, S0, S1
	083 Multiply S1, S2, S2
	084 Add S13, S1, S0
	085 Move [X31+4], S2
	086 Move [X31+12], S4
	087 Compare W8, 0
	088 JumpIfNotEqual {94}
	089 Move X0, 0x6B0000
	090 Move X0, [X0+1208]
	091 Call 0x1C17CF4
	092 Move W8, 1
	093 Move [X23+1450], W8
	094 Move X24, 0x6B0000
	095 Move X24, [X24+1208]
	096 Move X9, -49676288
	097 Move V6, [X9+576]
	098 NotImplemented "Instruction FABS not yet implemented."
	099 Move X8, [X24]
	100 Move S1, W31
	101 Move S3, 8
	102 NotImplemented "Instruction FMAXNM not yet implemented."
	103 Move X8, [X8+184]
	104 Multiply S0, S0, S6
	105 NotImplemented "Instruction FABD not yet implemented."
	106 Move V2, [X8]
	107 Multiply S2, S2, S3
	108 NotImplemented "Instruction FCMP not yet implemented."
	109 NotImplemented "Instruction FCSEL not yet implemented."
	110 NotImplemented "Instruction FCMP not yet implemented."
	111 Move X25, 0x98E000
	112 Move W8, [X25+1925]
	113 Compare W8, 0
	114 JumpIfNotEqual {122}
	115 Move X0, 0x6A9000
	116 Move X0, [X0+1448]
	117 Move V8, V6
	118 Call 0x1C17CF4
	119 Move V6, V8
	120 Move W8, 1
	121 Move [X25+1925], W8
	122 Move X8, 0x6A9000
	123 Move X8, [X8+1448]
	124 Move X0, [X8]
	125 Move W8, [X0+224]
	126 Compare W8, 0
	127 JumpIfNotEqual {131}
	128 Move V8, V6
	129 Call 0x1C17DFC
	130 Move V6, V8
	131 Move X8, -49676288
	132 Move V1, [X8+380]
	133 NotImplemented "Instruction FSQRT not yet implemented."
	134 NotImplemented "Instruction FCMP not yet implemented."
	135 Move V1, [X31+8]
	136 NotImplemented "Instruction FDIV not yet implemented."
	137 NotImplemented "Instruction FDIV not yet implemented."
	138 Move V1, [X31+4]
	139 NotImplemented "Instruction FDIV not yet implemented."
	140 Move X25, 0x98E000
	141 Move W8, [X25+1923]
	142 Compare W8, 0
	143 JumpIfNotEqual {151}
	144 Move X0, 0x6A9000
	145 Move X0, [X0+1440]
	146 Move V8, V6
	147 Call 0x1C17CF4
	148 Move V6, V8
	149 Move W8, 1
	150 Move [X25+1923], W8
	151 Move X8, [X22]
	152 Move X8, [X8+184]
	153 Move S14, [X8]
	154 Move S15, [X8+4]
	155 Move V8, [X8+8]
	156 Multiply S0, S10, S8
	157 Multiply S1, S12, S15
	158 Multiply S2, S12, S14
	159 Multiply S3, S11, S8
	160 Multiply S4, S11, S15
	161 Multiply S5, S10, S14
	162 Subtract S0, S0, S1
	163 Subtract S1, S2, S3
	164 Subtract S2, S4, S5
	165 Move [X20], S14
	166 Move [X20+8], S15
	167 Move [X20+8], S8
	168 Move [X21], S0
	169 Move [X21+8], S1
	170 Move [X21+8], S2
	171 Move W8, [X23+1450]
	172 Multiply S0, S0, S0
	173 Multiply S1, S1, S1
	174 Add S0, S0, S1
	175 Multiply S1, S2, S2
	176 Add S8, S1, S0
	177 Compare W8, 0
	178 JumpIfNotEqual {186}
	179 Move X0, 0x6B0000
	180 Move X0, [X0+1208]
	181 Move V9, V6
	182 Call 0x1C17CF4
	183 Move V6, V9
	184 Move W8, 1
	185 Move [X23+1450], W8
	186 Move X8, [X24]
	187 NotImplemented "Instruction FABS not yet implemented."
	188 Move S10, W31
	189 Move S2, 8
	190 Move X8, [X8+184]
	191 NotImplemented "Instruction FMAXNM not yet implemented."
	192 Multiply S0, S0, S6
	193 Move V1, [X8]
	194 Multiply S1, S1, S2
	195 NotImplemented "Instruction FCMP not yet implemented."
	196 NotImplemented "Instruction FCSEL not yet implemented."
	197 NotImplemented "Instruction FABD not yet implemented."
	198 NotImplemented "Instruction FCMP not yet implemented."
	199 Move V1, [X31+216]
	200 Move V0, [X31+12]
	201 Move X23, 0x98E000
	202 Move V8, [X21]
	203 Move W8, [X23+1925]
	204 Move V9, [X21+8]
	205 Compare W8, 0
	206 JumpIfNotEqual {212}
	207 Move X0, 0x6A9000
	208 Move X0, [X0+1448]
	209 Call 0x1C17CF4
	210 Move W8, 1
	211 Move [X23+1925], W8
	212 Move X8, 0x6A9000
	213 Move X8, [X8+1448]
	214 Move X0, [X8]
	215 Move W8, [X0+224]
	216 Compare W8, 0
	217 JumpIfNotEqual {219}
	218 Call 0x1C17DFC
	219 Move X8, -49676288
	220 NotImplemented "Instruction INVALID not yet implemented."
	221 Move V1, [X8+380]
	222 NotImplemented "Instruction FADDP not yet implemented."
	223 Multiply S2, S9, S9
	224 Add S0, S2, S0
	225 NotImplemented "Instruction FSQRT not yet implemented."
	226 NotImplemented "Instruction FCMP not yet implemented."
	227 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	228 NotImplemented "Instruction INVALID not yet implemented."
	229 NotImplemented "Instruction FDIV not yet implemented."
	230 Move X23, 0x98E000
	231 Move W8, [X23+1923]
	232 Compare W8, 0
	233 JumpIfNotEqual {239}
	234 Move X0, 0x6A9000
	235 Move X0, [X0+1440]
	236 Call 0x1C17CF4
	237 Move W8, 1
	238 Move [X23+1923], W8
	239 Move X8, [X22]
	240 Move X8, [X8+184]
	241 Move V1, [X8]
	242 Move V0, [X8+8]
	243 Move [X21], D1
	244 Move [X21+8], S0
	245 Move V1, [X20+8]
	246 Move V0, [X20]
	247 Multiply S2, S1, S10
	248 Multiply S3, S0, S10
	249 Subtract S0, S2, S0
	250 Add S1, S1, S3
	251 Call 0x3EB2C40
	252 Move X8, -49676288
	253 Move V1, [X8+108]
	254 NotImplemented "Instruction FCMP not yet implemented."
	255 Move X22, [X31+256]
	256 Move X21, [X31+264]
	257 Move X24, [X31+240]
	258 Move X23, [X31+248]
	259 Add S1, S0, S1
	260 NotImplemented "Instruction FCSEL not yet implemented."
	261 Move [X19], S0
	262 Move X20, [X31+272]
	263 Move X19, [X31+280]
	264 Move X30, [X31+224]
	265 Move X25, [X31+232]
	266 Move X29, [X31+208]
	267 Move D9, [X31+192]
	268 Move D8, [X31+200]
	269 Move D11, [X31+176]
	270 Move D10, [X31+184]
	271 Move D13, [X31+160]
	272 Move D12, [X31+168]
	273 Move D15, [X31+144]
	274 Move D14, [X31+152]
	275 Add X31, X31, 288
	276 Return 

Method: System.Void SetPerCameraClippingPlaneProperties(UnityEngine.Rendering.CommandBuffer cmd, ref UnityEngine.Rendering.Universal.CameraData cameraData)

Disassembly:
	0x03A4B914 MOVZ W8, 0x1
	0x03A4B918 STRB W8, [X22 + 0x19E]
	0x03A4B91C LDR X0, [X21]
	0x03A4B920 MOVI V0.2D, 0x0
	0x03A4B924 STP V0, V0, [X31 + 0x20]
	0x03A4B928 STR X31, [X31 + 0x48]
	0x03A4B92C LDR W8, [X0 + 0xE0]
	0x03A4B930 CBNZ W8, 0x3A4B938
	0x03A4B934 BL 0x1C16DFC
	0x03A4B938 CBZ X20, 0x3A4BA58
	0x03A4B93C LDR X8, [X21]
	0x03A4B940 ADRP X9, 0x70A000
	0x03A4B944 ADRP X10, 0x70A000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, X1
	005 Move X0, X2
	006 Move X1, X31
	007 Move X19, X2
	008 Call CameraData.IsCameraProjectionMatrixFlipped, X0
	009 Move X1, X20
	010 Move X2, X19
	011 Move X20, [X31+16]
	012 Move X19, [X31+24]
	013 And W3, W0, 1
	014 Move X30, [X31+32]

Method: System.Void SetPerCameraClippingPlaneProperties(UnityEngine.Rendering.CommandBuffer cmd, in UnityEngine.Rendering.Universal.CameraData cameraData, System.Boolean isTargetFlipped)

Disassembly:
	0x03A4B948 ADD X2, X31, 0x48
	0x03A4B94C LDR X8, [X8 + 0xB8]
	0x03A4B950 LDR X9, [X9 + 0xE40]
	0x03A4B954 LDR X10, [X10 + 0xE30]
	0x03A4B958 MOV X0, X20
	0x03A4B95C LDR X3, [X8 + 0x40]
	0x03A4B960 LDR X1, [X9]
	0x03A4B964 LDR X4, [X10]
	0x03A4B968 ADD X8, X31, 0x0
	0x03A4B96C BL 0x2240F24
	0x03A4B970 LDP V0, V1, [X31]
	0x03A4B974 LDR X8, [X31 + 0x48]
	0x03A4B978 STP V0, V1, [X31 + 0x20]
	0x03A4B97C CBZ X8, 0x3A4BA5C
	0x03A4B980 LDR X9, [X19 + 0xD8]
	0x03A4B984 STR X9, [X8 + 0x20]
	0x03A4B988 LDUR V0, [X19 + 0x8]
	0x03A4B98C STR V0, [X8 + 0x1]
	0x03A4B990 ADD X0, X31, 0x20
	0x03A4B994 MOV W1, W31
	0x03A4B998 MOV X2, X31
	0x03A4B99C BL 0x398E404
	0x03A4B9A0 ADRP X21, 0x70A000
	0x03A4B9A4 LDR X21, [X21 + 0xE10]
	0x03A4B9A8 LDR X8, [X21]
	0x03A4B9AC LDR W9, [X8 + 0xE0]
	0x03A4B9B0 CBNZ W9, 0x3A4B9C0
	0x03A4B9B4 MOV X0, X8
	0x03A4B9B8 BL 0x1C16DFC
	0x03A4B9BC LDR X8, [X21]
	0x03A4B9C0 LDR X9, [X8 + 0xB8]
	0x03A4B9C4 LDR X19, [X9 + 0x10]
	0x03A4B9C8 CBNZ X19, 0x3A4BA20
	0x03A4B9CC LDR W9, [X8 + 0xE0]
	0x03A4B9D0 CBNZ W9, 0x3A4B9E0
	0x03A4B9D4 MOV X0, X8
	0x03A4B9D8 BL 0x1C16DFC
	0x03A4B9DC LDR X8, [X21]
	0x03A4B9E0 ADRP X9, 0x70A000
	0x03A4B9E4 LDR X8, [X8 + 0xB8]
	0x03A4B9E8 LDR X9, [X9 + 0xE20]
	0x03A4B9EC LDR X20, [X8]
	0x03A4B9F0 LDR X0, [X9]
	0x03A4B9F4 BL 0x1C16F10
	0x03A4B9F8 ADRP X8, 0x70A000
	0x03A4B9FC LDR X8, [X8 + 0xE38]
	0x03A4BA00 MOV X19, X0
	0x03A4BA04 LDR X2, [X8]
	0x03A4BA08 MOV X1, X20
	0x03A4BA0C MOV X3, X31
	0x03A4BA10 BL 0x25C78AC
	0x03A4BA14 LDR X8, [X21]
	0x03A4BA18 LDR X8, [X8 + 0xB8]
	0x03A4BA1C STR X19, [X8 + 0x10]
	0x03A4BA20 ADRP X8, 0x70A000
	0x03A4BA24 LDR X8, [X8 + 0xE28]
	0x03A4BA28 LDR X2, [X8]
	0x03A4BA2C ADD X0, X31, 0x20
	0x03A4BA30 MOV X1, X19
	0x03A4BA34 BL 0x224107C
	0x03A4BA38 ADD X0, X31, 0x20
	0x03A4BA3C MOV X1, X31
	0x03A4BA40 BL 0x39972C0
	0x03A4BA44 LDP X20, X19, [X31 + 0x60]
	0x03A4BA48 LDP X22, X21, [X31 + 0x50]
	0x03A4BA4C LDR X30, [X31 + 0x40]
	0x03A4BA50 ADD X31, X31, 0x70
	0x03A4BA54 RET
	0x03A4BA58 BL 0x1C16F20
	0x03A4BA5C BL 0x1C16F20
	0x03A4BA60 B 0x3A4BA6C
	0x03A4BA64 B 0x3A4BA6C
	0x03A4BA68 B 0x3A4BA6C
	0x03A4BA6C MOV X19, X0
	0x03A4BA70 CMP W1, 0x1
	0x03A4BA74 B.NE 0x3A4BAA0
	0x03A4BA78 MOV X0, X19
	0x03A4BA7C BL 0x3EB1AD0
	0x03A4BA80 LDR X20, [X0]
	0x03A4BA84 BL 0x3EB1AE0
	0x03A4BA88 ADD X0, X31, 0x20
	0x03A4BA8C MOV X1, X31
	0x03A4BA90 BL 0x39972C0
	0x03A4BA94 CBZ X20, 0x3A4BA44
	0x03A4BA98 MOV X0, X20
	0x03A4BA9C BL 0x1C16F18
	0x03A4BAA0 MOV X20, X31
	0x03A4BAA4 B 0x3A4BAAC
	0x03A4BAA8 MOV X19, X0
	0x03A4BAAC ADD X0, X31, 0x20
	0x03A4BAB0 MOV X1, X31
	0x03A4BAB4 BL 0x39972C0
	0x03A4BAB8 CBNZ X20, 0x3A4BAC4
	0x03A4BABC MOV X0, X19
	0x03A4BAC0 BL 0x1D2C690
	0x03A4BAC4 MOV X0, X20
	0x03A4BAC8 BL 0x1C16F18
	0x03A4BACC BL 0x1990590
	0x03A4BAD0 SUB X31, X31, 0x80
	0x03A4BAD4 STR X30, [X31 + 0x40]
	0x03A4BAD8 STP X24, X23, [X31 + 0x50]
	0x03A4BADC STP X22, X21, [X31 + 0x60]
	0x03A4BAE0 STP X20, X19, [X31 + 0x70]
	0x03A4BAE4 ADRP X24, 0x997000
	0x03A4BAE8 ADRP X23, 0x70A000
	0x03A4BAEC LDRB W8, [X24 + 0x19F]
	0x03A4BAF0 LDR X23, [X23 + 0xD30]
	0x03A4BAF4 MOV W21, W3
	0x03A4BAF8 MOV X19, X2
	0x03A4BAFC MOV X22, X1
	0x03A4BB00 MOV X20, X0
	0x03A4BB04 TBNZ X8, 0x0, 0x3A4BB64
	0x03A4BB08 ADRP X0, 0x70A000
	0x03A4BB0C LDR X0, [X0 + 0xD30]
	0x03A4BB10 BL 0x1C16CF4
	0x03A4BB14 ADRP X0, 0x70A000
	0x03A4BB18 LDR X0, [X0 + 0xDF0]
	0x03A4BB1C BL 0x1C16CF4
	0x03A4BB20 ADRP X0, 0x70A000
	0x03A4BB24 LDR X0, [X0 + 0xDF8]
	0x03A4BB28 BL 0x1C16CF4
	0x03A4BB2C ADRP X0, 0x70A000
	0x03A4BB30 LDR X0, [X0 + 0xE00]
	0x03A4BB34 BL 0x1C16CF4
	0x03A4BB38 ADRP X0, 0x70A000
	0x03A4BB3C LDR X0, [X0 + 0xE48]
	0x03A4BB40 BL 0x1C16CF4
	0x03A4BB44 ADRP X0, 0x70A000
	0x03A4BB48 LDR X0, [X0 + 0xE10]
	0x03A4BB4C BL 0x1C16CF4

ISIL:
	001 Move [X31-48], X29
	002 Move [X31-40], X30
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Subtract X31, X31, 1040
	008 Move X22, 0x998000
	009 Move W8, [X22+404]
	010 Move W21, W3
	011 Move X20, X2
	012 Move X19, X1
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x70A000
	018 Move X0, [X0+2248]
	019 Call 0x1C17CF4
	020 Move X0, 0x70A000
	021 Move X0, [X0+32]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X22+404], W8
	025 Add X0, X31, 448
	026 Move W2, 528
	027 Move X1, X20
	028 Call 0x3EB2AC0
	029 And W1, W21, 1
	030 Add X8, X31, 976
	031 Add X0, X31, 448
	032 Move W2, W31
	033 Move X3, X31
	034 Call CameraData.GetGPUProjectionMatrix, X0, X1, X2
	035 Move V0, [X31+976]
	036 Move V1, [X31+992]
	037 Move V2, [X31+1008]
	038 Move V3, [X31+1024]
	039 Add X0, X31, 448
	040 Move W2, 528
	041 Move X1, X20
	042 Move [X31+384], V0
	043 Move [X31+392], V1
	044 Move [X31+416], V2
	045 Move [X31+424], V3
	046 Call 0x3EB2AC0
	047 Add X8, X31, 320
	048 Add X0, X31, 448
	049 Move W1, W31
	050 Move X2, X31
	051 Call CameraData.GetViewMatrix, X0, X1
	052 Move V1, [X31+352]
	053 Move V0, [X31+368]
	054 Move V3, [X31+320]
	055 Move V2, [X31+336]
	056 Move [X31+1008], V1
	057 Move [X31+1016], V0
	058 Move [X31+976], V3
	059 Move [X31+984], V2
	060 Move [X31+320], V3
	061 Move [X31+328], V2
	062 Move [X31+352], V1
	063 Move [X31+360], V0
	064 Move X0, [X20+192]
	065 Compare X0, 0
	066 JumpIfEqual {167}
	067 Move X20, 0x70A000
	068 Move X20, [X20+2248]
	069 Move X1, X31
	070 Call Camera.get_orthographic, X0
	071 Move V0, [X31+384]
	072 Move V1, [X31+400]
	073 Move V2, [X31+416]
	074 Move V3, [X31+432]
	075 And W2, W0, 1
	076 Add X8, X31, 192
	077 Move [X31+128], V0
	078 Move [X31+136], V1
	079 Move V0, [X31+320]
	080 Move V1, [X31+336]
	081 Move [X31+160], V2
	082 Move [X31+168], V3
	083 Move V2, [X31+352]
	084 Move V3, [X31+368]
	085 Add X0, X31, 128
	086 Add X1, X31, 64
	087 Move X3, X31
	088 Move [X31+64], V0
	089 Move [X31+72], V1
	090 Move [X31+96], V2
	091 Move [X31+104], V3
	092 Call CoreMatrixUtils.MultiplyProjectionMatrix, X0, X1, X2
	093 Move V0, [X31+192]
	094 Move V1, [X31+208]
	095 Move V2, [X31+224]
	096 Move V3, [X31+240]
	097 Move X0, [X20]
	098 Move [X31+256], V0
	099 Move [X31+264], V1
	100 Move [X31+288], V2
	101 Move [X31+296], V3
	102 Move W8, [X0+224]
	103 Compare W8, 0
	104 JumpIfNotEqual {107}
	105 Call 0x1C17DFC
	106 Move X0, [X20]
	107 Move X8, [X0+184]
	108 Move V0, [X31+256]
	109 Move V1, [X31+272]
	110 Move V2, [X31+288]
	111 Move V3, [X31+304]
	112 Add X0, X31, 0
	113 Move X21, [X8+96]
	114 Move X2, X31
	115 Move [X31], V0
	116 Move [X31+8], V1
	117 Move [X31+32], V2
	118 Move [X31+40], V3
	119 Move X1, X21
	120 Call GeometryUtility.CalculateFrustumPlanes, X0, X1
	121 Compare X21, 0
	122 JumpIfEqual {167}
	123 Move X8, [X20]
	124 Move X9, [X21+24]
	125 Move X8, [X8+184]
	126 NotImplemented "Instruction CMP not yet implemented."
	127 Move X20, [X8+104]
	128 Move X8, X31
	129 And X11, X9, 0
	130 Add X9, X21, 32
	131 Add X10, X20, 32
	132 NotImplemented "Instruction CMP not yet implemented."
	133 Compare X20, 0
	134 JumpIfEqual {167}
	135 Move W11, [X20+24]
	136 NotImplemented "Instruction CMP not yet implemented."
	137 Move V0, [X9]
	138 Move [X10], V0
	139 Move W11, [X21+24]
	140 Add X8, X8, 1
	141 NotImplemented "Instruction CMP not yet implemented."
	142 Move X21, 0x70A000
	143 Move X21, [X21+32]
	144 Move X0, [X21]
	145 Move W8, [X0+224]
	146 Compare W8, 0
	147 JumpIfNotEqual {149}
	148 Call 0x1C17DFC
	149 Compare X19, 0
	150 JumpIfEqual {167}
	151 Move X8, [X21]
	152 Move X0, X19
	153 Move X2, X20
	154 Move X3, X31
	155 Move X8, [X8+184]
	156 Move W1, [X8+144]
	157 Call CommandBuffer.SetGlobalVectorArray, X0, X1, X2
	158 Add X31, X31, 1040
	159 Move X20, [X31+32]
	160 Move X19, [X31+40]
	161 Move X22, [X31+16]
	162 Move X21, [X31+24]
	163 Move X29, [X31+48]
	164 Move X30, [X31+56]
	165 Return 
	166 Call 0x1C17F28
	167 Call 0x1C17F20

Method: System.Void SetShaderTimeValues(UnityEngine.Rendering.CommandBuffer cmd, System.Single time, System.Single deltaTime, System.Single smoothDeltaTime)

Disassembly:
	0x03A4BB50 ADRP X0, 0x70A000
	0x03A4BB54 LDR X0, [X0 + 0xE50]
	0x03A4BB58 BL 0x1C16CF4
	0x03A4BB5C MOVZ W8, 0x1
	0x03A4BB60 STRB W8, [X24 + 0x19F]
	0x03A4BB64 LDR X0, [X23]
	0x03A4BB68 MOVI V0.2D, 0x0
	0x03A4BB6C STP V0, V0, [X31 + 0x20]
	0x03A4BB70 STR X31, [X31 + 0x48]
	0x03A4BB74 LDR W8, [X0 + 0xE0]
	0x03A4BB78 CBNZ W8, 0x3A4BB80
	0x03A4BB7C BL 0x1C16DFC
	0x03A4BB80 CBZ X22, 0x3A4BCC0
	0x03A4BB84 LDR X8, [X23]
	0x03A4BB88 ADRP X9, 0x70A000
	0x03A4BB8C ADRP X10, 0x70A000
	0x03A4BB90 ADD X2, X31, 0x48
	0x03A4BB94 LDR X8, [X8 + 0xB8]
	0x03A4BB98 LDR X9, [X9 + 0xE50]
	0x03A4BB9C LDR X10, [X10 + 0xE00]
	0x03A4BBA0 MOV X0, X22
	0x03A4BBA4 LDR X3, [X8 + 0x38]
	0x03A4BBA8 LDR X1, [X9]
	0x03A4BBAC LDR X4, [X10]
	0x03A4BBB0 ADD X8, X31, 0x0
	0x03A4BBB4 BL 0x2240F24
	0x03A4BBB8 LDP V0, V1, [X31]
	0x03A4BBBC LDR X22, [X31 + 0x48]
	0x03A4BBC0 STP V0, V1, [X31 + 0x20]
	0x03A4BBC4 CBZ X22, 0x3A4BCC4
	0x03A4BBC8 ADD X0, X22, 0x10
	0x03A4BBCC MOVZ W2, 0x2B8
	0x03A4BBD0 MOV X1, X19
	0x03A4BBD4 AND W21, W21, 0x1
	0x03A4BBD8 STR X20, [X22 + 0x2C8]
	0x03A4BBDC BL 0x3EB1B30
	0x03A4BBE0 ADD X1, X19, 0x18
	0x03A4BBE4 ADD X0, X22, 0x2D0
	0x03A4BBE8 MOVZ W2, 0x210
	0x03A4BBEC BL 0x3EB1B30
	0x03A4BBF0 STRB W21, [X22 + 0x4E0]
	0x03A4BBF4 ADD X0, X31, 0x20
	0x03A4BBF8 MOV W1, W31
	0x03A4BBFC MOV X2, X31
	0x03A4BC00 BL 0x398E404
	0x03A4BC04 ADRP X21, 0x70A000
	0x03A4BC08 LDR X21, [X21 + 0xE10]
	0x03A4BC0C LDR X8, [X21]
	0x03A4BC10 LDR W9, [X8 + 0xE0]
	0x03A4BC14 CBNZ W9, 0x3A4BC24
	0x03A4BC18 MOV X0, X8
	0x03A4BC1C BL 0x1C16DFC
	0x03A4BC20 LDR X8, [X21]
	0x03A4BC24 LDR X9, [X8 + 0xB8]
	0x03A4BC28 LDR X19, [X9 + 0x18]
	0x03A4BC2C CBNZ X19, 0x3A4BC84
	0x03A4BC30 LDR W9, [X8 + 0xE0]
	0x03A4BC34 CBNZ W9, 0x3A4BC44
	0x03A4BC38 MOV X0, X8
	0x03A4BC3C BL 0x1C16DFC
	0x03A4BC40 LDR X8, [X21]
	0x03A4BC44 ADRP X9, 0x70A000
	0x03A4BC48 LDR X8, [X8 + 0xB8]
	0x03A4BC4C LDR X9, [X9 + 0xDF0]
	0x03A4BC50 LDR X20, [X8]
	0x03A4BC54 LDR X0, [X9]
	0x03A4BC58 BL 0x1C16F10
	0x03A4BC5C ADRP X8, 0x70A000
	0x03A4BC60 LDR X8, [X8 + 0xE48]
	0x03A4BC64 MOV X19, X0
	0x03A4BC68 LDR X2, [X8]
	0x03A4BC6C MOV X1, X20
	0x03A4BC70 MOV X3, X31
	0x03A4BC74 BL 0x25C78AC
	0x03A4BC78 LDR X8, [X21]
	0x03A4BC7C LDR X8, [X8 + 0xB8]
	0x03A4BC80 STR X19, [X8 + 0x18]
	0x03A4BC84 ADRP X8, 0x70A000
	0x03A4BC88 LDR X8, [X8 + 0xDF8]
	0x03A4BC8C LDR X2, [X8]
	0x03A4BC90 ADD X0, X31, 0x20
	0x03A4BC94 MOV X1, X19
	0x03A4BC98 BL 0x224107C
	0x03A4BC9C ADD X0, X31, 0x20
	0x03A4BCA0 MOV X1, X31
	0x03A4BCA4 BL 0x39972C0
	0x03A4BCA8 LDP X20, X19, [X31 + 0x70]
	0x03A4BCAC LDP X22, X21, [X31 + 0x60]
	0x03A4BCB0 LDP X24, X23, [X31 + 0x50]
	0x03A4BCB4 LDR X30, [X31 + 0x40]
	0x03A4BCB8 ADD X31, X31, 0x80
	0x03A4BCBC RET
	0x03A4BCC0 BL 0x1C16F20
	0x03A4BCC4 BL 0x1C16F20
	0x03A4BCC8 B 0x3A4BCD4
	0x03A4BCCC B 0x3A4BCD4
	0x03A4BCD0 B 0x3A4BCD4
	0x03A4BCD4 MOV X19, X0
	0x03A4BCD8 CMP W1, 0x1
	0x03A4BCDC B.NE 0x3A4BD08
	0x03A4BCE0 MOV X0, X19
	0x03A4BCE4 BL 0x3EB1AD0
	0x03A4BCE8 LDR X20, [X0]
	0x03A4BCEC BL 0x3EB1AE0
	0x03A4BCF0 ADD X0, X31, 0x20
	0x03A4BCF4 MOV X1, X31
	0x03A4BCF8 BL 0x39972C0
	0x03A4BCFC CBZ X20, 0x3A4BCA8
	0x03A4BD00 MOV X0, X20
	0x03A4BD04 BL 0x1C16F18
	0x03A4BD08 MOV X20, X31
	0x03A4BD0C B 0x3A4BD14
	0x03A4BD10 MOV X19, X0
	0x03A4BD14 ADD X0, X31, 0x20
	0x03A4BD18 MOV X1, X31
	0x03A4BD1C BL 0x39972C0
	0x03A4BD20 CBNZ X20, 0x3A4BD2C
	0x03A4BD24 MOV X0, X19
	0x03A4BD28 BL 0x1D2C690
	0x03A4BD2C MOV X0, X20
	0x03A4BD30 BL 0x1C16F18

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+64], D15
	003 Move [X31+72], D14
	004 Move [X31+80], D13
	005 Move [X31+88], D12
	006 Move [X31+96], D11
	007 Move [X31+104], D10
	008 Move [X31+112], D9
	009 Move [X31+120], D8
	010 Move [X31+128], X30
	011 Move [X31+136], X21
	012 Move [X31+144], X20
	013 Move [X31+152], X19
	014 Move X20, 0x998000
	015 Move X21, 0x70A000
	016 Move W8, [X20+405]
	017 Move X21, [X21+32]
	018 Move V9, V2
	019 Move V12, V1
	020 Move V8, V0
	021 Move X19, X0
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {31}
	026 Move X0, 0x70A000
	027 Move X0, [X0+32]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X20+405], W8
	031 Add X0, X31, 60
	032 Add X1, X31, 56
	033 Move V0, V8
	034 Call 0x3EB2BC0
	035 Move X0, [X21]
	036 Move V1, [X31+60]
	037 Move V0, [X31+56]
	038 Move W8, [X0+224]
	039 Move [X31+24], S0
	040 Move [X31+32], S1
	041 Compare W8, 0
	042 JumpIfNotEqual {44}
	043 Call 0x1C17DFC
	044 Compare X19, 0
	045 JumpIfEqual {145}
	046 Move X8, [X21]
	047 Move S1, 0.25
	048 Move S0, 0.125
	049 Move S2, 0.5
	050 Move X8, [X8+184]
	051 Multiply S13, S8, S1
	052 Move S1, 1
	053 Multiply S15, S8, S0
	054 Move W20, [X8+28]
	055 Multiply S0, S8, S2
	056 NotImplemented "Instruction FDIV not yet implemented."
	057 NotImplemented "Instruction FDIV not yet implemented."
	058 Add X0, X31, 52
	059 Add X1, X31, 48
	060 Move [X31+16], S1
	061 Move [X31+24], S2
	062 Call 0x3EB2BC0
	063 Move [X31+12], S9
	064 Move S9, [X31+48]
	065 Move S14, [X31+52]
	066 Add X0, X31, 44
	067 Add X1, X31, 40
	068 Move V0, V13
	069 Call 0x3EB2BC0
	070 Move S13, [X31+40]
	071 Move S10, [X31+44]
	072 Add X0, X31, 36
	073 Add X1, X31, 32
	074 Move V0, V15
	075 Call 0x3EB2BC0
	076 Move X8, -49676288
	077 Move V0, [X8+512]
	078 Move S15, [X31+32]
	079 Move S11, [X31+36]
	080 Move S1, 3
	081 Multiply S3, S8, S1
	082 Add S2, S8, S8
	083 Multiply S0, S8, S0
	084 Move X0, X19
	085 Move W1, W20
	086 Move V1, V8
	087 Move X2, X31
	088 Call CommandBuffer.SetGlobalVector, X0, X1, X2
	089 Move X8, [X21]
	090 Move V1, V10
	091 Move V10, [X31+28]
	092 Move X0, X19
	093 Move X8, [X8+184]
	094 Move V0, V11
	095 Move V2, V14
	096 Move V3, V10
	097 Move W1, [X8+32]
	098 Move X2, X31
	099 Call CommandBuffer.SetGlobalVector, X0, X1, X2
	100 Move X8, [X21]
	101 Move V2, V9
	102 Move V9, [X31+24]
	103 Move X0, X19
	104 Move X8, [X8+184]
	105 Move V0, V15
	106 Move V1, V13
	107 Move V3, V9
	108 Move W1, [X8+36]
	109 Move X2, X31
	110 Call CommandBuffer.SetGlobalVector, X0, X1, X2
	111 Move X8, [X21]
	112 Move S2, [X31+12]
	113 Move S1, [X31+16]
	114 Move V3, [X31+20]
	115 Move X0, X19
	116 Move X8, [X8+184]
	117 Move V0, V12
	118 Move X2, X31
	119 Move W1, [X8+40]
	120 Call CommandBuffer.SetGlobalVector, X0, X1, X2
	121 Move X8, [X21]
	122 Move X0, X19
	123 Move V0, V8
	124 Move V1, V10
	125 Move X8, [X8+184]
	126 Move V2, V9
	127 Move X20, [X31+144]
	128 Move X19, [X31+152]
	129 Move X30, [X31+128]
	130 Move X21, [X31+136]
	131 Move W1, [X8+44]
	132 Move D9, [X31+112]
	133 Move D8, [X31+120]
	134 Move D11, [X31+96]
	135 Move D10, [X31+104]
	136 Move D13, [X31+80]
	137 Move D12, [X31+88]
	138 Move D15, [X31+64]
	139 Move D14, [X31+72]
	140 Move S3, W31
	141 Move X2, X31
	142 Add X31, X31, 160
	143 Call CommandBuffer.SetGlobalVector, X0, X1, X2
	144 Return 
	145 Call 0x1C17F20

Method: UnityEngine.Rendering.RenderTargetIdentifier get_cameraColorTarget()

Disassembly:
	0x03A4BD34 BL 0x1990590
	0x03A4BD38 STP X29, X30, [X31 - 0x40]!
	0x03A4BD3C STP X24, X23, [X31 + 0x10]
	0x03A4BD40 STP X22, X21, [X31 + 0x20]
	0x03A4BD44 STP X20, X19, [X31 + 0x30]
	0x03A4BD48 SUB X31, X31, 0x2F0
	0x03A4BD4C ADRP X24, 0x997000
	0x03A4BD50 STR X2, [X31 + 0x2E8]
	0x03A4BD54 STR X3, [X31 + 0x2E0]
	0x03A4BD58 ADRP X23, 0x70A000
	0x03A4BD5C LDRB W8, [X24 + 0x1A0]
	0x03A4BD60 LDR X23, [X23 + 0xD30]
	0x03A4BD64 MOV X21, X5
	0x03A4BD68 MOV W19, W4
	0x03A4BD6C MOV X22, X1
	0x03A4BD70 MOV X20, X0
	0x03A4BD74 TBNZ X8, 0x0, 0x3A4BDD4
	0x03A4BD78 ADRP X0, 0x70A000
	0x03A4BD7C LDR X0, [X0 + 0xD30]
	0x03A4BD80 BL 0x1C16CF4
	0x03A4BD84 ADRP X0, 0x70A000
	0x03A4BD88 LDR X0, [X0 + 0xE58]
	0x03A4BD8C BL 0x1C16CF4
	0x03A4BD90 ADRP X0, 0x70A000
	0x03A4BD94 LDR X0, [X0 + 0xE60]
	0x03A4BD98 BL 0x1C16CF4
	0x03A4BD9C ADRP X0, 0x70A000
	0x03A4BDA0 LDR X0, [X0 + 0xE68]
	0x03A4BDA4 BL 0x1C16CF4
	0x03A4BDA8 ADRP X0, 0x70A000
	0x03A4BDAC LDR X0, [X0 + 0xE70]
	0x03A4BDB0 BL 0x1C16CF4
	0x03A4BDB4 ADRP X0, 0x70A000
	0x03A4BDB8 LDR X0, [X0 + 0xE10]
	0x03A4BDBC BL 0x1C16CF4
	0x03A4BDC0 ADRP X0, 0x70A000
	0x03A4BDC4 LDR X0, [X0 + 0xE78]
	0x03A4BDC8 BL 0x1C16CF4
	0x03A4BDCC MOVZ W8, 0x1
	0x03A4BDD0 STRB W8, [X24 + 0x1A0]
	0x03A4BDD4 LDR X0, [X23]
	0x03A4BDD8 MOVI V0.2D, 0x0
	0x03A4BDDC STP V0, V0, [X31 + 0x2C0]
	0x03A4BDE0 STR X31, [X31 + 0x2B8]
	0x03A4BDE4 LDR W8, [X0 + 0xE0]
	0x03A4BDE8 CBNZ W8, 0x3A4BDF0
	0x03A4BDEC BL 0x1C16DFC

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+56], X21
	004 Move [X31+64], X20
	005 Move [X31+72], X19
	006 Move X21, 0x998000
	007 Move W9, [X21+406]
	008 Move X20, X0
	009 Move X19, X8
	010 Move TEMP, X9
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x6A9000
	015 Move X0, [X0+2600]
	016 Call 0x1C17CF4
	017 Move X0, 0x70B000
	018 Move X0, [X0+3176]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+406], W8
	022 Move W8, [X20+418]
	023 Compare W8, 0
	024 JumpIfEqual {29}
	025 Add X0, X20, 272
	026 Add X8, X31, 8
	027 Move X1, X31
	028 Call RTHandleRenderTargetIdentifierCompat.get_nameID, X0
	029 Move X8, 0x6A9000
	030 Move X8, [X8+2600]
	031 Move X0, [X8]
	032 Move W8, [X0+224]
	033 Compare W8, 0
	034 JumpIfNotEqual {36}
	035 Call 0x1C17DFC
	036 Move X8, 0x70B000
	037 Move X8, [X8+3176]
	038 Move X1, X31
	039 Move X0, [X8]
	040 Call Debug.LogError, X0
	041 Add X8, X31, 8
	042 Move W0, W31
	043 Move X1, X31
	044 Call RenderTargetIdentifier.op_Implicit, X0
	045 Move X8, [X31+40]
	046 NotImplemented "Instruction LDUR not yet implemented."
	047 NotImplemented "Instruction LDUR not yet implemented."
	048 Move X30, [X31+48]
	049 Move X21, [X31+56]
	050 Move [X19+32], X8
	051 Move [X19], V1
	052 Move [X19+8], V0
	053 Move X20, [X31+64]
	054 Move X19, [X31+72]
	055 Add X31, X31, 80
	056 Return X0

Method: UnityEngine.Rendering.RTHandle get_cameraColorTargetHandle()

Disassembly:
	0x03A45BD0 LDRB W8, [X20 + 0x181]
	0x03A45BD4 LDR X19, [X19 + 0xD28]
	0x03A45BD8 LDR X21, [X21 + 0xC80]
	0x03A45BDC TBNZ X8, 0x0, 0x3A45C00
	0x03A45BE0 ADRP X0, 0x710000
	0x03A45BE4 LDR X0, [X0 + 0xC80]
	0x03A45BE8 BL 0x1C16CF4
	0x03A45BEC ADRP X0, 0x710000
	0x03A45BF0 LDR X0, [X0 + 0xD28]
	0x03A45BF4 BL 0x1C16CF4
	0x03A45BF8 MOVZ W8, 0x1
	0x03A45BFC STRB W8, [X20 + 0x181]
	0x03A45C00 LDR X8, [X21]
	0x03A45C04 LDR X9, [X19]
	0x03A45C08 LDP X20, X19, [X31 + 0x10]
	0x03A45C0C LDR X8, [X8 + 0xB8]
	0x03A45C10 STR X9, [X8]
	0x03A45C14 LDP X30, X21, [X31], #0x20
	0x03A45C18 RET
	0x03A45C1C SUB X31, X31, 0x40
	0x03A45C20 STP X30, X19, [X31 + 0x30]
	0x03A45C24 MOV X19, X8
	0x03A45C28 ADD X0, X0, 0x140
	0x03A45C2C ADD X8, X31, 0x8
	0x03A45C30 MOV X1, X31
	0x03A45C34 BL 0x3A53368
	0x03A45C38 LDR X8, [X31 + 0x28]
	0x03A45C3C LDUR V0, [X31 + 0x18]
	0x03A45C40 LDUR V1, [X31 + 0x8]
	0x03A45C44 STR X8, [X19 + 0x20]
	0x03A45C48 STP V1, V0, [X19]
	0x03A45C4C LDP X30, X19, [X31 + 0x30]
	0x03A45C50 ADD X31, X31, 0x40

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x99E000
	005 Move W8, [X20+407]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0x6AF000
	012 Move X0, [X0+2600]
	013 Call 0x1C17CF4
	014 Move X0, 0x711000
	015 Move X0, [X0+3176]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+407], W8
	019 Move W8, [X19+418]
	020 Compare W8, 0
	021 JumpIfEqual {23}
	022 Move X0, [X19+272]
	023 Move X8, 0x6AF000
	024 Move X8, [X8+2600]
	025 Move X0, [X8]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {30}
	029 Call 0x1C17DFC
	030 Move X8, 0x711000
	031 Move X8, [X8+3176]
	032 Move X1, X31
	033 Move X0, [X8]
	034 Call Debug.LogError, X0
	035 Move X0, X31
	036 Move X20, [X31+16]
	037 Move X19, [X31+24]
	038 Move X30, [X31+32]
	039 Return X0

Method: UnityEngine.Rendering.RTHandle GetCameraColorFrontBuffer(UnityEngine.Rendering.CommandBuffer cmd)

Disassembly:
	0x03A4BDF0 CBZ X22, 0x3A4BF54
	0x03A4BDF4 LDR X8, [X23]

ISIL:
	001 Move X0, X31
	002 Return X0

Method: UnityEngine.Rendering.RTHandle GetCameraColorBackBuffer(UnityEngine.Rendering.CommandBuffer cmd)

Disassembly:
	0x03A4BDF8 ADRP X9, 0x70A000
	0x03A4BDFC ADRP X10, 0x70A000

ISIL:
	001 Move X0, X31
	002 Return X0

Method: UnityEngine.Rendering.RenderTargetIdentifier get_cameraDepthTarget()

Disassembly:
	0x03A4BE00 ADD X2, X31, 0x2B8
	0x03A4BE04 LDR X8, [X8 + 0xB8]
	0x03A4BE08 LDR X9, [X9 + 0xE78]
	0x03A4BE0C LDR X10, [X10 + 0xE68]
	0x03A4BE10 MOV X0, X22
	0x03A4BE14 LDR X3, [X8 + 0x70]
	0x03A4BE18 LDR X1, [X9]
	0x03A4BE1C LDR X4, [X10]
	0x03A4BE20 ADD X8, X31, 0x0
	0x03A4BE24 BL 0x2240F24
	0x03A4BE28 LDP V0, V1, [X31]
	0x03A4BE2C STP V0, V1, [X31 + 0x2C0]
	0x03A4BE30 ADD X0, X31, 0x2C0
	0x03A4BE34 ADD X1, X31, 0x2E8
	0x03A4BE38 MOV W2, W31
	0x03A4BE3C MOV X3, X31
	0x03A4BE40 BL 0x3996828
	0x03A4BE44 ADD X0, X31, 0x2C0
	0x03A4BE48 ADD X1, X31, 0x2E0
	0x03A4BE4C MOVZ W2, 0x1
	0x03A4BE50 MOV X3, X31
	0x03A4BE54 BL 0x3996A00
	0x03A4BE58 LDR X22, [X31 + 0x2B8]
	0x03A4BE5C ADD X0, X31, 0x0
	0x03A4BE60 MOVZ W2, 0x2B8
	0x03A4BE64 MOV X1, X21
	0x03A4BE68 BL 0x3EB1AC0
	0x03A4BE6C CBZ X22, 0x3A4BF58
	0x03A4BE70 ADD X0, X22, 0x10
	0x03A4BE74 ADD X1, X31, 0x0
	0x03A4BE78 MOVZ W2, 0x2B8
	0x03A4BE7C BL 0x3EB1AC0
	0x03A4BE80 STR X20, [X22 + 0x2C8]
	0x03A4BE84 STR W19, [X22 + 0x2D0]
	0x03A4BE88 ADD X0, X31, 0x2C0
	0x03A4BE8C MOV W1, W31
	0x03A4BE90 MOV X2, X31
	0x03A4BE94 BL 0x398E404
	0x03A4BE98 ADRP X21, 0x70A000
	0x03A4BE9C LDR X21, [X21 + 0xE10]
	0x03A4BEA0 LDR X8, [X21]
	0x03A4BEA4 LDR W9, [X8 + 0xE0]
	0x03A4BEA8 CBNZ W9, 0x3A4BEB8
	0x03A4BEAC MOV X0, X8
	0x03A4BEB0 BL 0x1C16DFC
	0x03A4BEB4 LDR X8, [X21]
	0x03A4BEB8 LDR X9, [X8 + 0xB8]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+48], X30
	003 Move [X31+56], X21
	004 Move [X31+64], X20
	005 Move [X31+72], X19
	006 Move X21, 0x998000
	007 Move W9, [X21+408]
	008 Move X20, X0
	009 Move X19, X8
	010 Move TEMP, X9
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x6A9000
	015 Move X0, [X0+2600]
	016 Call 0x1C17CF4
	017 Move X0, 0x70B000
	018 Move X0, [X0+3520]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+408], W8
	022 Move W8, [X20+418]
	023 Compare W8, 0
	024 JumpIfEqual {29}
	025 Add X0, X20, 320
	026 Add X8, X31, 8
	027 Move X1, X31
	028 Call RTHandleRenderTargetIdentifierCompat.get_nameID, X0
	029 Move X8, 0x6A9000
	030 Move X8, [X8+2600]
	031 Move X0, [X8]
	032 Move W8, [X0+224]
	033 Compare W8, 0
	034 JumpIfNotEqual {36}
	035 Call 0x1C17DFC
	036 Move X8, 0x70B000
	037 Move X8, [X8+3520]
	038 Move X1, X31
	039 Move X0, [X8]
	040 Call Debug.LogError, X0
	041 Add X8, X31, 8
	042 Move W0, W31
	043 Move X1, X31
	044 Call RenderTargetIdentifier.op_Implicit, X0
	045 Move X8, [X31+40]
	046 NotImplemented "Instruction LDUR not yet implemented."
	047 NotImplemented "Instruction LDUR not yet implemented."
	048 Move X30, [X31+48]
	049 Move X21, [X31+56]
	050 Move [X19+32], X8
	051 Move [X19], V1
	052 Move [X19+8], V0
	053 Move X20, [X31+64]
	054 Move X19, [X31+72]
	055 Add X31, X31, 80
	056 Return X0

Method: UnityEngine.Rendering.RTHandle get_cameraDepthTargetHandle()

Disassembly:
	0x03A4A678 FABS S0, S13
	0x03A4A67C LDR X8, [X24]
	0x03A4A680 FMOV S1, W31
	0x03A4A684 FMOV S3, 8
	0x03A4A688 FMAXNM S0, S0, S1
	0x03A4A68C LDR X8, [X8 + 0xB8]
	0x03A4A690 FMUL S0, S0, S6
	0x03A4A694 FABD S1, S1, S1
	0x03A4A698 LDR V2, [X8]
	0x03A4A69C FMUL S2, S2, S3
	0x03A4A6A0 FCMP S0, S2
	0x03A4A6A4 FCSEL S0, S0, S2, GT
	0x03A4A6A8 FCMP S1, S0
	0x03A4A6AC B.MI 0x3A4A75C
	0x03A4A6B0 ADRP X25, 0x98E000
	0x03A4A6B4 LDRB W8, [X25 + 0x785]
	0x03A4A6B8 CBNZ W8, 0x3A4A6D8
	0x03A4A6BC ADRP X0, 0x6A9000
	0x03A4A6C0 LDR X0, [X0 + 0x5A8]
	0x03A4A6C4 MOV V8.16B, V6.16B
	0x03A4A6C8 BL 0x1C16CF4
	0x03A4A6CC MOV V6.16B, V8.16B
	0x03A4A6D0 MOVZ W8, 0x1
	0x03A4A6D4 STRB W8, [X25 + 0x785]
	0x03A4A6D8 ADRP X8, 0x6A9000
	0x03A4A6DC LDR X8, [X8 + 0x5A8]
	0x03A4A6E0 LDR X0, [X8]
	0x03A4A6E4 LDR W8, [X0 + 0xE0]
	0x03A4A6E8 CBNZ W8, 0x3A4A6F8
	0x03A4A6EC MOV V8.16B, V6.16B
	0x03A4A6F0 BL 0x1C16DFC
	0x03A4A6F4 MOV V6.16B, V8.16B
	0x03A4A6F8 ADRP X8, 0xFFFFFFFFFD0A0000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x999000
	005 Move W8, [X20+409]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0x6AA000
	012 Move X0, [X0+2600]
	013 Call 0x1C17CF4
	014 Move X0, 0x70C000
	015 Move X0, [X0+3520]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+409], W8
	019 Move W8, [X19+418]
	020 Compare W8, 0
	021 JumpIfEqual {23}
	022 Move X0, [X19+320]
	023 Move X8, 0x6AA000
	024 Move X8, [X8+2600]
	025 Move X0, [X8]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {30}
	029 Call 0x1C17DFC
	030 Move X8, 0x70C000
	031 Move X8, [X8+3520]
	032 Move X1, X31
	033 Move X0, [X8]
	034 Call Debug.LogError, X0
	035 Move X0, X31
	036 Move X20, [X31+16]
	037 Move X19, [X31+24]
	038 Move X30, [X31+32]
	039 Return X0

Method: System.Collections.Generic.List`1<UnityEngine.Rendering.Universal.ScriptableRendererFeature> get_rendererFeatures()

Disassembly:
	0x03A4BEBC LDR X19, [X9 + 0x20]
	0x03A4BEC0 CBNZ X19, 0x3A4BF18

ISIL:
	001 Move X0, [X0+264]
	002 Return X0

Method: System.Collections.Generic.List`1<UnityEngine.Rendering.Universal.ScriptableRenderPass> get_activeRenderPassQueue()

Disassembly:
	0x03A4BEC4 LDR W9, [X8 + 0xE0]
	0x03A4BEC8 CBNZ W9, 0x3A4BED8

ISIL:
	001 Move X0, [X0+256]
	002 Return X0

Method: UnityEngine.Rendering.Universal.ScriptableRenderer/RenderingFeatures get_supportedRenderingFeatures()

Disassembly:
	0x03A4BECC MOV X0, X8
	0x03A4BED0 BL 0x1C16DFC

ISIL:
	001 Move X0, [X0+232]
	002 Return X0

Method: System.Void set_supportedRenderingFeatures(UnityEngine.Rendering.Universal.ScriptableRenderer/RenderingFeatures value)

Disassembly:
	0x03A4BED4 LDR X8, [X21]
	0x03A4BED8 ADRP X9, 0x70A000

ISIL:
	001 Move [X0+232], X1
	002 Return 

Method: UnityEngine.Rendering.GraphicsDeviceType[] get_unsupportedGraphicsDeviceTypes()

Disassembly:
	0x03A4BEDC LDR X8, [X8 + 0xB8]
	0x03A4BEE0 LDR X9, [X9 + 0xE58]

ISIL:
	001 Move X0, [X0+240]
	002 Return X0

Method: System.Void set_unsupportedGraphicsDeviceTypes(UnityEngine.Rendering.GraphicsDeviceType[] value)

Disassembly:
	0x03A4BEE4 LDR X20, [X8]
	0x03A4BEE8 LDR X0, [X9]

ISIL:
	001 Move [X0+240], X1
	002 Return 

Method: System.Void ConfigureActiveTarget(UnityEngine.Rendering.RenderTargetIdentifier colorAttachment, UnityEngine.Rendering.RenderTargetIdentifier depthAttachment)

Disassembly:
	0x03A4BEEC BL 0x1C16F10
	0x03A4BEF0 ADRP X8, 0x70A000
	0x03A4BEF4 LDR X8, [X8 + 0xE70]
	0x03A4BEF8 MOV X19, X0
	0x03A4BEFC LDR X2, [X8]
	0x03A4BF00 MOV X1, X20
	0x03A4BF04 MOV X3, X31
	0x03A4BF08 BL 0x25C78AC
	0x03A4BF0C LDR X8, [X21]
	0x03A4BF10 LDR X8, [X8 + 0xB8]
	0x03A4BF14 STR X19, [X8 + 0x20]
	0x03A4BF18 ADRP X8, 0x70A000
	0x03A4BF1C LDR X8, [X8 + 0xE60]
	0x03A4BF20 LDR X2, [X8]
	0x03A4BF24 ADD X0, X31, 0x2C0
	0x03A4BF28 MOV X1, X19
	0x03A4BF2C BL 0x224107C
	0x03A4BF30 ADD X0, X31, 0x2C0
	0x03A4BF34 MOV X1, X31
	0x03A4BF38 BL 0x39972C0
	0x03A4BF3C ADD X31, X31, 0x2F0
	0x03A4BF40 LDP X20, X19, [X31 + 0x30]
	0x03A4BF44 LDP X22, X21, [X31 + 0x20]
	0x03A4BF48 LDP X24, X23, [X31 + 0x10]
	0x03A4BF4C LDP X29, X30, [X31], #0x40
	0x03A4BF50 RET
	0x03A4BF54 BL 0x1C16F20
	0x03A4BF58 BL 0x1C16F20
	0x03A4BF5C B 0x3A4BF70
	0x03A4BF60 B 0x3A4BF70
	0x03A4BF64 B 0x3A4BF70
	0x03A4BF68 B 0x3A4BF70
	0x03A4BF6C B 0x3A4BF70
	0x03A4BF70 MOV X19, X0
	0x03A4BF74 CMP W1, 0x1
	0x03A4BF78 B.NE 0x3A4BFA4
	0x03A4BF7C MOV X0, X19
	0x03A4BF80 BL 0x3EB1AD0
	0x03A4BF84 LDR X20, [X0]
	0x03A4BF88 BL 0x3EB1AE0
	0x03A4BF8C ADD X0, X31, 0x2C0
	0x03A4BF90 MOV X1, X31
	0x03A4BF94 BL 0x39972C0
	0x03A4BF98 CBZ X20, 0x3A4BF3C
	0x03A4BF9C MOV X0, X20
	0x03A4BFA0 BL 0x1C16F18
	0x03A4BFA4 MOV X20, X31
	0x03A4BFA8 B 0x3A4BFB0
	0x03A4BFAC MOV X19, X0
	0x03A4BFB0 ADD X0, X31, 0x2C0
	0x03A4BFB4 MOV X1, X31
	0x03A4BFB8 BL 0x39972C0
	0x03A4BFBC CBNZ X20, 0x3A4BFC8
	0x03A4BFC0 MOV X0, X19
	0x03A4BFC4 BL 0x1D2C690
	0x03A4BFC8 MOV X0, X20
	0x03A4BFCC BL 0x1C16F18
	0x03A4BFD0 BL 0x1990590
	0x03A4BFD4 STP X29, X30, [X31 - 0x30]!
	0x03A4BFD8 STP X22, X21, [X31 + 0x10]
	0x03A4BFDC STP X20, X19, [X31 + 0x20]
	0x03A4BFE0 SUB X31, X31, 0x2E0
	0x03A4BFE4 ADRP X22, 0x997000
	0x03A4BFE8 ADRP X21, 0x70A000
	0x03A4BFEC LDRB W8, [X22 + 0x1A1]
	0x03A4BFF0 LDR X21, [X21 + 0xD30]
	0x03A4BFF4 MOV X19, X2
	0x03A4BFF8 MOV X20, X1
	0x03A4BFFC TBNZ X8, 0x0, 0x3A4C05C
	0x03A4C000 ADRP X0, 0x709000
	0x03A4C004 LDR X0, [X0 + 0xD30]
	0x03A4C008 BL 0x1C16CF4
	0x03A4C00C ADRP X0, 0x709000
	0x03A4C010 LDR X0, [X0 + 0xE80]
	0x03A4C014 BL 0x1C16CF4
	0x03A4C018 ADRP X0, 0x709000
	0x03A4C01C LDR X0, [X0 + 0xE88]
	0x03A4C020 BL 0x1C16CF4
	0x03A4C024 ADRP X0, 0x709000
	0x03A4C028 LDR X0, [X0 + 0xE90]
	0x03A4C02C BL 0x1C16CF4
	0x03A4C030 ADRP X0, 0x709000
	0x03A4C034 LDR X0, [X0 + 0xE98]
	0x03A4C038 BL 0x1C16CF4
	0x03A4C03C ADRP X0, 0x709000
	0x03A4C040 LDR X0, [X0 + 0xE10]
	0x03A4C044 BL 0x1C16CF4
	0x03A4C048 ADRP X0, 0x709000
	0x03A4C04C LDR X0, [X0 + 0xEA0]
	0x03A4C050 BL 0x1C16CF4
	0x03A4C054 MOVZ W8, 0x1
	0x03A4C058 STRB W8, [X22 + 0x1A1]
	0x03A4C05C LDR X0, [X21]
	0x03A4C060 MOVI V0.2D, 0x0
	0x03A4C064 STP V0, V0, [X31 + 0x2C0]
	0x03A4C068 STR X31, [X31 + 0x2B8]
	0x03A4C06C LDR W8, [X0 + 0xE0]
	0x03A4C070 CBNZ W8, 0x3A4C078
	0x03A4C074 BL 0x1C16DFC
	0x03A4C078 CBZ X20, 0x3A4C1B8
	0x03A4C07C LDR X8, [X21]
	0x03A4C080 ADRP X9, 0x709000

ISIL:
	001 Subtract X31, X31, 224
	002 Move [X31+176], X30
	003 Move [X31+184], X23
	004 Move [X31+192], X22
	005 Move [X31+200], X21
	006 Move [X31+208], X20
	007 Move [X31+216], X19
	008 Move X22, 0x998000
	009 Move X21, 0x70A000
	010 Move W8, [X22+410]
	011 Move X21, [X21+2248]
	012 Move X19, X1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0x70A000
	019 Move X0, [X0+2248]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+410], W8
	023 Move X0, [X21]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {29}
	027 Call 0x1C17DFC
	028 Move X0, [X21]
	029 Move X8, [X0+184]
	030 Move X9, [X20+32]
	031 Move V0, [X20]
	032 Move V1, [X20+16]
	033 Move X8, [X8+24]
	034 Move [X31+160], X9
	035 Move [X31+128], V0
	036 Move [X31+136], V1
	037 Compare X8, 0
	038 JumpIfEqual {130}
	039 Move V0, [X31+128]
	040 Move V1, [X31+144]
	041 Move X9, [X31+160]
	042 Move [X31+80], V0
	043 Move [X31+88], V1
	044 Move [X31+112], X9
	045 Move W9, [X8+24]
	046 Compare W9, 0
	047 JumpIfEqual {131}
	048 Move X9, [X31+112]
	049 Move V1, [X31+80]
	050 Move V0, [X31+96]
	051 Move W20, 1
	052 Move W22, 72
	053 Move [X8+64], X9
	054 Move [X8+32], V1
	055 Move [X8+40], V0
	056 Move X0, [X21]
	057 Move W8, [X0+224]
	058 Compare W8, 0
	059 JumpIfNotEqual {62}
	060 Call 0x1C17DFC
	061 Move X0, [X21]
	062 Move X8, [X0+184]
	063 Move X23, [X8+24]
	064 Compare X23, 0
	065 JumpIfEqual {130}
	066 NotImplemented "Instruction LDRSW not yet implemented."
	067 NotImplemented "Instruction CMP not yet implemented."
	068 Move W8, [X0+224]
	069 Compare W8, 0
	070 JumpIfNotEqual {75}
	071 Call 0x1C17DFC
	072 Move X8, [X21]
	073 Move X8, [X8+184]
	074 Move X23, [X8+24]
	075 Add X8, X31, 40
	076 Move W0, W31
	077 Move X1, X31
	078 Call RenderTargetIdentifier.op_Implicit, X0
	079 NotImplemented "Instruction LDUR not yet implemented."
	080 NotImplemented "Instruction LDUR not yet implemented."
	081 Move X8, [X31+72]
	082 Move [X31+128], V0
	083 Move [X31+136], V1
	084 Move [X31+160], X8
	085 Compare X23, 0
	086 JumpIfEqual {130}
	087 Move V0, [X31+128]
	088 Move V1, [X31+144]
	089 Move X8, [X31+160]
	090 Move [X31], V0
	091 Move [X31+8], V1
	092 Move [X31+32], X8
	093 Move W8, [X23+24]
	094 NotImplemented "Instruction CMP not yet implemented."
	095 Move X8, [X31+32]
	096 Move V0, [X31]
	097 Move V1, [X31+16]
	098 Add X9, X23, X22
	099 Add X20, X20, 1
	100 Add X22, X22, 40
	101 Move [X9+32], X8
	102 Move [X9], V0
	103 Move [X9+8], V1
	104 Move X9, [X19+32]
	105 Move V1, [X19]
	106 Move V0, [X19+16]
	107 Move [X31+160], X9
	108 Move [X31+128], V1
	109 Move [X31+136], V0
	110 Move W9, [X0+224]
	111 Compare W9, 0
	112 JumpIfNotEqual {116}
	113 Call 0x1C17DFC
	114 Move X8, [X21]
	115 Move X8, [X8+184]
	116 Move X9, [X31+160]
	117 Move V1, [X31+128]
	118 Move V0, [X31+144]
	119 Move X20, [X31+208]
	120 Move X19, [X31+216]
	121 Move X22, [X31+192]
	122 Move X21, [X31+200]
	123 Move X30, [X31+176]
	124 Move X23, [X31+184]
	125 Move [X8+64], X9
	126 Move [X8+32], V1
	127 Move [X8+40], V0
	128 Add X31, X31, 224
	129 Return 
	130 Call 0x1C17F20
	131 Call 0x1C17F28

Method: System.Boolean get_useDepthPriming()

Disassembly:
	0x03A4C084 ADRP X10, 0x709000
	0x03A4C088 ADD X2, X31, 0x2B8

ISIL:
	001 Move W0, [X0+421]
	002 Return X0

Method: System.Void set_useDepthPriming(System.Boolean value)

Disassembly:
	0x03A4C08C LDR X8, [X8 + 0xB8]
	0x03A4C090 LDR X9, [X9 + 0xEA0]
	0x03A4C094 LDR X10, [X10 + 0xE90]

ISIL:
	001 And W8, W1, 1
	002 Move [X0+421], W8
	003 Return 

Method: System.Boolean get_stripShadowsOffVariants()

Disassembly:
	0x03A4C098 MOV X0, X20
	0x03A4C09C LDR X3, [X8 + 0x78]

ISIL:
	001 Move W0, [X0+422]
	002 Return X0

Method: System.Void set_stripShadowsOffVariants(System.Boolean value)

Disassembly:
	0x03A4C0A0 LDR X1, [X9]
	0x03A4C0A4 LDR X4, [X10]
	0x03A4C0A8 ADD X8, X31, 0x0

ISIL:
	001 And W8, W1, 1
	002 Move [X0+422], W8
	003 Return 

Method: System.Boolean get_stripAdditionalLightOffVariants()

Disassembly:
	0x03A4C0AC BL 0x2240F24
	0x03A4C0B0 LDP V0, V1, [X31]

ISIL:
	001 Move W0, [X0+423]
	002 Return X0

Method: System.Void set_stripAdditionalLightOffVariants(System.Boolean value)

Disassembly:
	0x03A4C0B4 LDR X20, [X31 + 0x2B8]
	0x03A4C0B8 ADD X0, X31, 0x0
	0x03A4C0BC MOVZ W2, 0x2B8

ISIL:
	001 And W8, W1, 1
	002 Move [X0+423], W8
	003 Return 

Method: System.Void .ctor(UnityEngine.Rendering.Universal.ScriptableRendererData data)

Disassembly:
	0x03A46060 B.CS 0x3A46320
	0x03A46064 ADD X8, X8, X20
	0x03A46068 STP X0, X1, [X8 + 0x20]
	0x03A4606C LDR X25, [X19 + 0x18]
	0x03A46070 MOV X23, X0
	0x03A46074 MOV X24, X1
	0x03A46078 CBZ X25, 0x3A4632C
	0x03A4607C ADRP X8, 0x70F000
	0x03A46080 LDR X26, [X19 + 0x20]
	0x03A46084 LDR X8, [X8 + 0xD60]
	0x03A46088 LDR X1, [X8]
	0x03A4608C MOV X0, X25
	0x03A46090 BL 0x29EB5D4
	0x03A46094 CBZ X26, 0x3A46330
	0x03A46098 LDR W8, [X26 + 0x18]
	0x03A4609C CMP W0, W8
	0x03A460A0 B.CS 0x3A46324
	0x03A460A4 ADD X8, X26, W0, 0x3, SXTW
	0x03A460A8 LDR X3, [X8 + 0x20]
	0x03A460AC ADRP X8, 0x70F000
	0x03A460B0 LDR X8, [X8 + 0xD40]
	0x03A460B4 LDR X4, [X8]
	0x03A460B8 MOV X0, X25
	0x03A460BC MOV X1, X23
	0x03A460C0 MOV X2, X24
	0x03A460C4 BL 0x29EB810
	0x03A460C8 LDR X0, [X19 + 0x30]
	0x03A460CC CBZ X0, 0x3A4631C
	0x03A460D0 ADRP X8, 0x70F000
	0x03A460D4 LDR X8, [X8 + 0xD38]
	0x03A460D8 LDR X4, [X8]
	0x03A460DC MOV X1, X23
	0x03A460E0 MOV X2, X24
	0x03A460E4 MOV W3, W31
	0x03A460E8 BL 0x29E87BC
	0x03A460EC B 0x3A46164
	0x03A460F0 CBZ X27, 0x3A46300
	0x03A460F4 ADRP X8, 0x70F000
	0x03A460F8 LDR X25, [X19 + 0x20]
	0x03A460FC LDR X8, [X8 + 0xD60]
	0x03A46100 LDR X1, [X8]
	0x03A46104 MOV X0, X27
	0x03A46108 BL 0x29EB5D4
	0x03A4610C CBZ X25, 0x3A462FC
	0x03A46110 LDR W8, [X25 + 0x18]
	0x03A46114 CMP W0, W8
	0x03A46118 B.CS 0x3A46310
	0x03A4611C ADD X8, X25, W0, 0x3, SXTW
	0x03A46120 LDR X3, [X8 + 0x20]
	0x03A46124 ADRP X8, 0x70F000
	0x03A46128 LDR X8, [X8 + 0xD40]
	0x03A4612C LDR X4, [X8]
	0x03A46130 MOV X0, X27
	0x03A46134 MOV X1, X23
	0x03A46138 MOV X2, X24
	0x03A4613C BL 0x29EB810
	0x03A46140 LDR X0, [X19 + 0x30]
	0x03A46144 CBZ X0, 0x3A46318
	0x03A46148 ADRP X8, 0x70F000
	0x03A4614C LDR X8, [X8 + 0xD38]
	0x03A46150 LDR X4, [X8]
	0x03A46154 MOV X1, X23
	0x03A46158 MOV X2, X24
	0x03A4615C MOV W3, W31
	0x03A46160 BL 0x29E87BC
	0x03A46164 LDR X0, [X19 + 0x18]
	0x03A46168 CBZ X0, 0x3A462F4
	0x03A4616C ADRP X8, 0x70F000
	0x03A46170 LDR X8, [X8 + 0xD68]
	0x03A46174 LDR X3, [X8]
	0x03A46178 MOV X1, X23
	0x03A4617C MOV X2, X24
	0x03A46180 BL 0x29EB764
	0x03A46184 MOV X25, X0
	0x03A46188 LDR X0, [X19 + 0x18]
	0x03A4618C CBZ X0, 0x3A462EC
	0x03A46190 ADRP X8, 0x70F000
	0x03A46194 LDR X8, [X8 + 0xD68]
	0x03A46198 LDR X3, [X8]
	0x03A4619C MOV X1, X23
	0x03A461A0 MOV X2, X24
	0x03A461A4 BL 0x29EB764
	0x03A461A8 ADRP X8, 0x70E000
	0x03A461AC LDR X8, [X8 + 0x8C8]
	0x03A461B0 MOV X23, X0
	0x03A461B4 LDR X0, [X8]
	0x03A461B8 LDR W8, [X0 + 0xE0]
	0x03A461BC CBNZ W8, 0x3A461C4
	0x03A461C0 BL 0x1C16DFC
	0x03A461C4 MOV X0, X23
	0x03A461C8 BL 0x3A4663C
	0x03A461CC CBZ X25, 0x3A462E4
	0x03A461D0 LDR W8, [X25 + 0x18]
	0x03A461D4 CMP W0, W8
	0x03A461D8 B.CS 0x3A462E0
	0x03A461DC ADD X8, X25, W0, 0x2, SXTW
	0x03A461E0 STR W21, [X8 + 0x20]
	0x03A461E4 LDR X8, [X19 + 0x100]
	0x03A461E8 ADD X21, X21, 0x1
	0x03A461EC ADD X20, X20, 0x10
	0x03A461F0 CBNZ X8, 0x3A45ECC
	0x03A461F4 BL 0x1C16F20
	0x03A461F8 ADRP X22, 0x6D7000
	0x03A461FC LDR X22, [X22 + 0x138]
	0x03A46200 CMP W9, 0x1
	0x03A46204 B.LT 0x3A462A0
	0x03A46208 MOV W20, W31
	0x03A4620C LDR X2, [X29]
	0x03A46210 MOV X0, X8
	0x03A46214 MOV W1, W20
	0x03A46218 BL 0x301BCCC
	0x03A4621C LDR X4, [X22]
	0x03A46220 MOV X21, X0
	0x03A46224 STP X31, X31, [X31 + 0x18]
	0x03A46228 ADD X0, X31, 0x18
	0x03A4622C MOVZ W1, 0x8
	0x03A46230 MOVZ W2, 0x2
	0x03A46234 MOVZ W3, 0x1
	0x03A46238 BL 0x23D58AC
	0x03A4623C CBZ X21, 0x3A462D8
	0x03A46240 LDUR V0, [X31 + 0x18]
	0x03A46244 STUR V0, [X21 + 0x48]
	0x03A46248 LDR X0, [X19 + 0x100]
	0x03A4624C CBZ X0, 0x3A462DC
	0x03A46250 LDR X2, [X29]
	0x03A46254 MOV W1, W20
	0x03A46258 BL 0x301BCCC
	0x03A4625C LDR X4, [X22]
	0x03A46260 MOV X21, X0
	0x03A46264 STP X31, X31, [X31 + 0x8]
	0x03A46268 ADD X0, X31, 0x8
	0x03A4626C MOVZ W1, 0x8
	0x03A46270 MOVZ W2, 0x2
	0x03A46274 MOVZ W3, 0x1
	0x03A46278 BL 0x23D58AC
	0x03A4627C CBZ X21, 0x3A462D0
	0x03A46280 LDUR V0, [X31 + 0x8]
	0x03A46284 STUR V0, [X21 + 0x58]
	0x03A46288 LDR X8, [X19 + 0x100]
	0x03A4628C CBZ X8, 0x3A462D4
	0x03A46290 LDR W9, [X8 + 0x18]
	0x03A46294 ADD W20, W20, 0x1
	0x03A46298 CMP W20, W9
	0x03A4629C B.LT 0x3A4620C
	0x03A462A0 ADD X0, X31, 0x28
	0x03A462A4 MOV X1, X31
	0x03A462A8 BL 0x39B1DB4
	0x03A462AC LDP X20, X19, [X31 + 0x80]
	0x03A462B0 LDP X22, X21, [X31 + 0x70]
	0x03A462B4 LDP X24, X23, [X31 + 0x60]
	0x03A462B8 LDP X26, X25, [X31 + 0x50]
	0x03A462BC LDP X28, X27, [X31 + 0x40]
	0x03A462C0 LDP X29, X30, [X31 + 0x30]
	0x03A462C4 ADD X31, X31, 0x90
	0x03A462C8 RET
	0x03A462CC BL 0x1C16F20
	0x03A462D0 BL 0x1C16F20
	0x03A462D4 BL 0x1C16F20
	0x03A462D8 BL 0x1C16F20
	0x03A462DC BL 0x1C16F20
	0x03A462E0 BL 0x1C16F28
	0x03A462E4 BL 0x1C16F20
	0x03A462E8 BL 0x1C16F20
	0x03A462EC BL 0x1C16F20
	0x03A462F0 BL 0x1C16F20
	0x03A462F4 BL 0x1C16F20
	0x03A462F8 BL 0x1C16F28
	0x03A462FC BL 0x1C16F20
	0x03A46300 BL 0x1C16F20
	0x03A46304 BL 0x1C16F20
	0x03A46308 BL 0x1C16F20
	0x03A4630C BL 0x1C16F20
	0x03A46310 BL 0x1C16F28
	0x03A46314 BL 0x1C16F28
	0x03A46318 BL 0x1C16F20
	0x03A4631C BL 0x1C16F20
	0x03A46320 BL 0x1C16F28
	0x03A46324 BL 0x1C16F28
	0x03A46328 BL 0x1C16F20
	0x03A4632C BL 0x1C16F20
	0x03A46330 BL 0x1C16F20
	0x03A46334 BL 0x1C16F20
	0x03A46338 BL 0x1C16F20
	0x03A4633C BL 0x1C16F20
	0x03A46340 B 0x3A46404
	0x03A46344 B 0x3A46404
	0x03A46348 B 0x3A46404
	0x03A4634C B 0x3A46404
	0x03A46350 B 0x3A46404
	0x03A46354 B 0x3A46404
	0x03A46358 B 0x3A46404
	0x03A4635C B 0x3A46404
	0x03A46360 B 0x3A46404
	0x03A46364 B 0x3A46404
	0x03A46368 B 0x3A46404
	0x03A4636C B 0x3A46404
	0x03A46370 B 0x3A46404
	0x03A46374 B 0x3A46404
	0x03A46378 B 0x3A46404
	0x03A4637C B 0x3A46404
	0x03A46380 B 0x3A46404
	0x03A46384 B 0x3A46404
	0x03A46388 B 0x3A46404
	0x03A4638C B 0x3A46404
	0x03A46390 B 0x3A46404
	0x03A46394 B 0x3A46404
	0x03A46398 B 0x3A46404
	0x03A4639C B 0x3A46404
	0x03A463A0 B 0x3A46404
	0x03A463A4 B 0x3A46404
	0x03A463A8 B 0x3A46404
	0x03A463AC B 0x3A46404
	0x03A463B0 B 0x3A46404
	0x03A463B4 B 0x3A46404
	0x03A463B8 B 0x3A46404
	0x03A463BC B 0x3A46404
	0x03A463C0 B 0x3A46404
	0x03A463C4 B 0x3A46404
	0x03A463C8 B 0x3A46404
	0x03A463CC B 0x3A46404
	0x03A463D0 B 0x3A46404
	0x03A463D4 B 0x3A46404
	0x03A463D8 B 0x3A46404
	0x03A463DC B 0x3A46404
	0x03A463E0 B 0x3A46404
	0x03A463E4 B 0x3A46404
	0x03A463E8 B 0x3A46404
	0x03A463EC B 0x3A46404
	0x03A463F0 B 0x3A46404
	0x03A463F4 B 0x3A46404
	0x03A463F8 B 0x3A46404
	0x03A463FC B 0x3A46404
	0x03A46400 B 0x3A46404
	0x03A46404 MOV X19, X0
	0x03A46408 CMP W1, 0x1
	0x03A4640C B.NE 0x3A46438
	0x03A46410 MOV X0, X19
	0x03A46414 BL 0x3EB1AD0
	0x03A46418 LDR X20, [X0]
	0x03A4641C BL 0x3EB1AE0
	0x03A46420 ADD X0, X31, 0x28
	0x03A46424 MOV X1, X31
	0x03A46428 BL 0x39B1DB4
	0x03A4642C CBZ X20, 0x3A462AC
	0x03A46430 MOV X0, X20
	0x03A46434 BL 0x1C16F18
	0x03A46438 MOV X20, X31
	0x03A4643C B 0x3A46444
	0x03A46440 MOV X19, X0
	0x03A46444 ADD X0, X31, 0x28
	0x03A46448 MOV X1, X31
	0x03A4644C BL 0x39B1DB4
	0x03A46450 CBNZ X20, 0x3A4645C
	0x03A46454 MOV X0, X19
	0x03A46458 BL 0x1D2C690
	0x03A4645C MOV X0, X20
	0x03A46460 BL 0x1C16F18
	0x03A46464 BL 0x1990590
	0x03A46468 STR X30, [X31 - 0x10]!
	0x03A4646C CBZ X1, 0x3A4649C
	0x03A46470 LDRB W8, [X1 + 0x42]
	0x03A46474 CBZ W8, 0x3A46490
	0x03A46478 LDRB W8, [X1 + 0x70]
	0x03A4647C CBZ W8, 0x3A46490
	0x03A46480 LDRB W8, [X0 + 0x1A4]
	0x03A46484 CMP W8, 0x0
	0x03A46488 CSET W0, NE
	0x03A4648C B 0x3A46494
	0x03A46490 MOV W0, W31
	0x03A46494 LDR X30, [X31], #0x10
	0x03A46498 RET
	0x03A4649C BL 0x1C16F20
	0x03A464A0 SUB X31, X31, 0x80
	0x03A464A4 STP X30, X23, [X31 + 0x50]
	0x03A464A8 STP X22, X21, [X31 + 0x60]
	0x03A464AC STP X20, X19, [X31 + 0x70]
	0x03A464B0 ADRP X23, 0x99C000
	0x03A464B4 ADRP X22, 0x70E000
	0x03A464B8 LDRB W8, [X23 + 0x18F]
	0x03A464BC LDR X22, [X22 + 0x8C8]
	0x03A464C0 MOV X19, X2
	0x03A464C4 MOV X21, X1
	0x03A464C8 MOV X20, X0
	0x03A464CC TBNZ X8, 0x0, 0x3A464E4
	0x03A464D0 ADRP X0, 0x70E000
	0x03A464D4 LDR X0, [X0 + 0x8C8]
	0x03A464D8 BL 0x1C16CF4
	0x03A464DC MOVZ W8, 0x1
	0x03A464E0 STRB W8, [X23 + 0x18F]
	0x03A464E4 LDR X0, [X22]
	0x03A464E8 MOVI V0.2D, 0x0
	0x03A464EC STR W31, [X31 + 0x30]
	0x03A464F0 STP V0, V0, [X31 + 0x10]
	0x03A464F4 STR V0, [X31]
	0x03A464F8 LDR W8, [X0 + 0xE0]
	0x03A464FC CBNZ W8, 0x3A46504
	0x03A46500 BL 0x1C16DFC
	0x03A46504 ADD X2, X31, 0x0
	0x03A46508 MOV X0, X21
	0x03A4650C MOV X1, X19
	0x03A46510 BL 0x3A49484
	0x03A46514 CBZ X19, 0x3A465A8
	0x03A46518 LDRB W8, [X19 + 0x40]
	0x03A4651C CBZ W8, 0x3A46528
	0x03A46520 LDR X20, [X19 + 0x98]
	0x03A46524 B 0x3A46534
	0x03A46528 MOV X0, X20
	0x03A4652C BL 0x3A49678
	0x03A46530 MOV X20, X0
	0x03A46534 ADD X0, X31, 0x0
	0x03A46538 MOV X1, X31
	0x03A4653C BL 0x3C22060
	0x03A46540 CBZ W0, 0x3A46554
	0x03A46544 CBZ X20, 0x3A465A8
	0x03A46548 LDR X8, [X20]
	0x03A4654C MOV X0, X20
	0x03A46550 B 0x3A4656C
	0x03A46554 LDR W8, [X31 + 0x1C]
	0x03A46558 CBZ W8, 0x3A46544
	0x03A4655C MOV X0, X19
	0x03A46560 BL 0x3A43A98
	0x03A46564 CBZ X0, 0x3A465A8
	0x03A46568 LDR X8, [X0]
	0x03A4656C LDP X9, X1, [X8 + 0x158]
	0x03A46570 BLR X9
	0x03A46574 LDP W1, W2, [X31]
	0x03A46578 LDR W3, [X31 + 0x8]
	0x03A4657C MOV W4, W0
	0x03A46580 ADD X0, X31, 0x40
	0x03A46584 MOV X5, X31
	0x03A46588 STP X31, X31, [X31 + 0x40]
	0x03A4658C BL 0x3A532C4
	0x03A46590 LDP X0, X1, [X31 + 0x40]
	0x03A46594 LDP X20, X19, [X31 + 0x70]
	0x03A46598 LDP X22, X21, [X31 + 0x60]
	0x03A4659C LDP X30, X23, [X31 + 0x50]
	0x03A465A0 ADD X31, X31, 0x80
	0x03A465A4 RET
	0x03A465A8 BL 0x1C16F20
	0x03A465AC SUB X31, X31, 0x40
	0x03A465B0 STP X30, X23, [X31 + 0x10]
	0x03A465B4 STP X22, X21, [X31 + 0x20]
	0x03A465B8 STP X20, X19, [X31 + 0x30]
	0x03A465BC ADRP X23, 0x99C000
	0x03A465C0 ADRP X22, 0x70E000
	0x03A465C4 LDRB W8, [X23 + 0x18D]
	0x03A465C8 LDR X22, [X22 + 0x8C8]
	0x03A465CC MOV W19, W2
	0x03A465D0 MOV X20, X1
	0x03A465D4 MOV X21, X0
	0x03A465D8 TBNZ X8, 0x0, 0x3A465F0
	0x03A465DC ADRP X0, 0x70E000
	0x03A465E0 LDR X0, [X0 + 0x8C8]
	0x03A465E4 BL 0x1C16CF4
	0x03A465E8 MOVZ W8, 0x1
	0x03A465EC STRB W8, [X23 + 0x18D]
	0x03A465F0 LDR X0, [X22]
	0x03A465F4 LDR W8, [X0 + 0xE0]
	0x03A465F8 CBNZ W8, 0x3A46600
	0x03A465FC BL 0x1C16DFC
	0x03A46600 UBFM X8, X21, 0x20, 0x3F
	0x03A46604 UBFM X2, X20, 0x20, 0x3F
	0x03A46608 ADD W1, W8, W21, 0x4, LSL
	0x03A4660C ADD X0, X31, 0x0
	0x03A46610 MOV W3, W20
	0x03A46614 MOV W4, W19
	0x03A46618 MOV X5, X31
	0x03A4661C STP X31, X31, [X31]
	0x03A46620 BL 0x3C22BC8
	0x03A46624 LDP X0, X1, [X31]
	0x03A46628 LDP X20, X19, [X31 + 0x30]
	0x03A4662C LDP X22, X21, [X31 + 0x20]
	0x03A46630 LDP X30, X23, [X31 + 0x10]
	0x03A46634 ADD X31, X31, 0x40
	0x03A46638 RET
	0x03A4663C STR X30, [X31 - 0x10]!
	0x03A46640 CBZ X0, 0x3A46684
	0x03A46644 LDR W9, [X0 + 0x18]
	0x03A46648 MOV X8, X0
	0x03A4664C SUBS W0, W9, 0x1
	0x03A46650 B.LT 0x3A46684
	0x03A46654 MOV X10, X31
	0x03A46658 ADD X8, X8, 0x20
	0x03A4665C CMP W10, W9
	0x03A46660 B.CS 0x3A4668C
	0x03A46664 LDR W11, [X8, X10, LSL #2]
	0x03A46668 ADDS W31, W11, 0x1
	0x03A4666C B.EQ 0x3A46680
	0x03A46670 ADD X10, X10, 0x1
	0x03A46674 CMP W10, W9
	0x03A46678 B.LT 0x3A4665C
	0x03A4667C B 0x3A46684
	0x03A46680 MOV W0, W10
	0x03A46684 LDR X30, [X31], #0x10
	0x03A46688 RET
	0x03A4668C BL 0x1C16F28
	0x03A46690 SUB X31, X31, 0xA0
	0x03A46694 STP X29, X30, [X31 + 0x40]
	0x03A46698 STP X28, X27, [X31 + 0x50]
	0x03A4669C STP X26, X25, [X31 + 0x60]
	0x03A466A0 STP X24, X23, [X31 + 0x70]
	0x03A466A4 STP X22, X21, [X31 + 0x80]
	0x03A466A8 STP X20, X19, [X31 + 0x90]
	0x03A466AC ADRP X22, 0x99C000
	0x03A466B0 LDRB W8, [X22 + 0x184]
	0x03A466B4 MOV X19, X2
	0x03A466B8 MOV X20, X1
	0x03A466BC MOV X21, X0
	0x03A466C0 TBNZ X8, 0x0, 0x3A466F0
	0x03A466C4 ADRP X0, 0x70E000
	0x03A466C8 LDR X0, [X0 + 0x910]
	0x03A466CC BL 0x1C16CF4
	0x03A466D0 ADRP X0, 0x6AD000
	0x03A466D4 LDR X0, [X0 + 0x598]
	0x03A466D8 BL 0x1C16CF4
	0x03A466DC ADRP X0, 0x70E000
	0x03A466E0 LDR X0, [X0 + 0x8C8]
	0x03A466E4 BL 0x1C16CF4
	0x03A466E8 MOVZ W8, 0x1
	0x03A466EC STRB W8, [X22 + 0x184]
	0x03A466F0 LDR X11, [X21 + 0xC0]
	0x03A466F4 CBZ X11, 0x3A46980
	0x03A466F8 LDR W8, [X11 + 0x18]
	0x03A466FC UBFM X9, X8, 0x20, 0x1F
	0x03A46700 CMP X9, 0x1
	0x03A46704 B.LT 0x3A4672C
	0x03A46708 MOV X9, X31
	0x03A4670C SXTW X10, W8
	0x03A46710 ADD X11, X11, 0x20
	0x03A46714 CMP X9, X8
	0x03A46718 B.CS 0x3A4697C
	0x03A4671C STR W31, [X11, X9, LSL #2]
	0x03A46720 ADD X9, X9, 0x1
	0x03A46724 CMP X9, X10
	0x03A46728 B.LT 0x3A46714
	0x03A4672C STR W31, [X21 + 0xC8]
	0x03A46730 CBZ X20, 0x3A46980
	0x03A46734 LDR W8, [X20 + 0x18]
	0x03A46738 CMP W8, 0x1
	0x03A4673C B.LT 0x3A4695C
	0x03A46740 ADRP X25, 0x70E000
	0x03A46744 ADRP X26, 0x70E000
	0x03A46748 LDR X25, [X25 + 0x8C8]
	0x03A4674C LDR X26, [X26 + 0x910]
	0x03A46750 MOV W24, W31
	0x03A46754 MOVZ W28, 0x1
	0x03A46758 MOVZ W29, 0x2
	0x03A4675C CMP W24, W8
	0x03A46760 B.CS 0x3A4697C
	0x03A46764 LDR X0, [X25]
	0x03A46768 ADD X8, X20, W24, 0x2, SXTW
	0x03A4676C LDR W22, [X8 + 0x20]
	0x03A46770 LDR W9, [X0 + 0xE0]
	0x03A46774 CBNZ W9, 0x3A46780
	0x03A46778 BL 0x1C16DFC
	0x03A4677C LDR X0, [X25]
	0x03A46780 ADDS W31, W22, 0x1
	0x03A46784 B.EQ 0x3A4695C
	0x03A46788 LDR X8, [X0 + 0xB8]
	0x03A4678C LDRB W8, [X8 + 0x8]
	0x03A46790 CBZ W8, 0x3A4695C
	0x03A46794 LDR X0, [X21 + 0x100]
	0x03A46798 CBZ X0, 0x3A46980
	0x03A4679C LDR X2, [X26]
	0x03A467A0 MOV W1, W22
	0x03A467A4 BL 0x301BCCC
	0x03A467A8 CBZ X0, 0x3A46980
	0x03A467AC LDRB W8, [X0 + 0x40]
	0x03A467B0 MOV X22, X0
	0x03A467B4 CBZ W8, 0x3A467E0
	0x03A467B8 LDR X0, [X25]
	0x03A467BC LDR W8, [X0 + 0xE0]
	0x03A467C0 CBNZ W8, 0x3A467C8
	0x03A467C4 BL 0x1C16DFC
	0x03A467C8 MOV X0, X22
	0x03A467CC BL 0x3A46984
	0x03A467D0 CBZ X0, 0x3A46980
	0x03A467D4 LDR X0, [X0 + 0x18]
	0x03A467D8 CBNZ X0, 0x3A46818
	0x03A467DC B 0x3A46980
	0x03A467E0 ADRP X8, 0x6AD000
	0x03A467E4 LDR X8, [X8 + 0x598]
	0x03A467E8 LDR X23, [X19 + 0xD0]
	0x03A467EC LDR X0, [X8]
	0x03A467F0 LDR W8, [X0 + 0xE0]
	0x03A467F4 CBNZ W8, 0x3A467FC
	0x03A467F8 BL 0x1C16DFC
	0x03A467FC MOV X0, X23
	0x03A46800 MOV X1, X31
	0x03A46804 MOV X2, X31
	0x03A46808 BL 0x3C354F8
	0x03A4680C TBZ X0, 0x0, 0x3A46954
	0x03A46810 LDR X0, [X19 + 0xD0]
	0x03A46814 CBZ X0, 0x3A46980
	0x03A46818 ADD X8, X31, 0x8
	0x03A4681C MOV X1, X31
	0x03A46820 BL 0x3C21334
	0x03A46824 LDR W23, [X31 + 0x10]
	0x03A46828 LDR X8, [X19 + 0x1B8]
	0x03A4682C CBZ X8, 0x3A46840
	0x03A46830 LDR X8, [X8 + 0xE8]
	0x03A46834 CBZ X8, 0x3A46980
	0x03A46838 LDRB W27, [X8 + 0x11]
	0x03A4683C B 0x3A46844
	0x03A46840 MOV W27, W31
	0x03A46844 LDR X0, [X19 + 0xC0]
	0x03A46848 CBZ X0, 0x3A46980
	0x03A4684C MOV X1, X31
	0x03A46850 BL 0x3C037A0
	0x03A46854 LDR X12, [X21 + 0xC0]
	0x03A46858 CBZ X12, 0x3A46980
	0x03A4685C LDR W8, [X12 + 0x18]
	0x03A46860 CMP W27, 0x0
	0x03A46864 CSET W11, EQ
	0x03A46868 CMP W23, 0x2
	0x03A4686C UBFM X9, X8, 0x20, 0x1F
	0x03A46870 CSET W13, LT
	0x03A46874 CMP X9, 0x1
	0x03A46878 B.LT 0x3A46914
	0x03A4687C EOR W14, W0, 0x1
	0x03A46880 ORR W11, W11, W14, 0x0
	0x03A46884 MOV X9, X31
	0x03A46888 SXTW X10, W8
	0x03A4688C ORR W11, W13, W11, 0x0
	0x03A46890 ADD X12, X12, 0x20
	0x03A46894 CMP X9, X8
	0x03A46898 B.CS 0x3A4697C
	0x03A4689C LDR W13, [X12, X9, LSL #2]
	0x03A468A0 ORR W14, W13, 0x2
	0x03A468A4 CMP W14, 0x2
	0x03A468A8 B.EQ 0x3A468CC
	0x03A468AC LDR X14, [X22 + 0x28]
	0x03A468B0 CBZ X14, 0x3A46980
	0x03A468B4 LDR W15, [X14 + 0x18]
	0x03A468B8 CMP X9, X15
	0x03A468BC B.CS 0x3A4697C
	0x03A468C0 ADD X14, X14, X9
	0x03A468C4 LDRB W14, [X14 + 0x20]
	0x03A468C8 CBZ W14, 0x3A468EC
	0x03A468CC LDR X13, [X22 + 0x18]
	0x03A468D0 CBZ X13, 0x3A46980
	0x03A468D4 LDR W14, [X13 + 0x18]
	0x03A468D8 CMP X9, X14
	0x03A468DC B.CS 0x3A4697C
	0x03A468E0 ADD X13, X13, X9, 0x2, LSL
	0x03A468E4 LDR W13, [X13 + 0x20]
	0x03A468E8 STR W13, [X12, X9, LSL #2]
	0x03A468EC TBNZ X11, 0x0, 0x3A46908
	0x03A468F0 CMP W13, 0x3
	0x03A468F4 B.EQ 0x3A46904
	0x03A468F8 CBNZ W13, 0x3A46908
	0x03A468FC STR W29, [X12, X9, LSL #2]
	0x03A46900 B 0x3A46908
	0x03A46904 STR W28, [X12, X9, LSL #2]
	0x03A46908 ADD X9, X9, 0x1
	0x03A4690C CMP X9, X10
	0x03A46910 B.LT 0x3A46894
	0x03A46914 LDR W8, [X21 + 0xC8]
	0x03A46918 CBZ W8, 0x3A46938
	0x03A4691C CMP W8, 0x2
	0x03A46920 B.NE 0x3A46930
	0x03A46924 LDR W8, [X22 + 0x20]
	0x03A46928 CMP W8, 0x1
	0x03A4692C B.EQ 0x3A46938
	0x03A46930 LDRB W8, [X22 + 0x30]
	0x03A46934 CBZ W8, 0x3A46940
	0x03A46938 LDR W8, [X22 + 0x20]
	0x03A4693C STR W8, [X21 + 0xC8]
	0x03A46940 LDR W8, [X20 + 0x18]
	0x03A46944 ADD W24, W24, 0x1
	0x03A46948 CMP W24, W8
	0x03A4694C B.LT 0x3A4675C
	0x03A46950 B 0x3A4695C
	0x03A46954 LDR W23, [X19 + 0xE0]
	0x03A46958 B 0x3A46828
	0x03A4695C LDP X20, X19, [X31 + 0x90]
	0x03A46960 LDP X22, X21, [X31 + 0x80]
	0x03A46964 LDP X24, X23, [X31 + 0x70]
	0x03A46968 LDP X26, X25, [X31 + 0x60]
	0x03A4696C LDP X28, X27, [X31 + 0x50]
	0x03A46970 LDP X29, X30, [X31 + 0x40]
	0x03A46974 ADD X31, X31, 0xA0
	0x03A46978 RET
	0x03A4697C BL 0x1C16F28
	0x03A46980 BL 0x1C16F20
	0x03A46984 STP X30, X23, [X31 - 0x30]!
	0x03A46988 STP X22, X21, [X31 + 0x10]
	0x03A4698C STP X20, X19, [X31 + 0x20]

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Subtract X31, X31, 1152
	014 Move X28, 0x99D000
	015 Move X27, 0x710000
	016 Move X21, 0x710000
	017 Move X26, 0x710000
	018 Move X25, 0x710000
	019 Move X24, 0x710000
	020 Move X23, 0x710000
	021 Move X22, 0x70F000
	022 Move X27, [X27+3216]
	023 Move X21, [X21+3224]
	024 Move W8, [X28+411]
	025 Move X26, [X26+3232]
	026 Move X25, [X25+3240]
	027 Move X24, [X24+3248]
	028 Move X23, [X23+3256]
	029 Move X22, [X22+16]
	030 Move X20, X1
	031 Move X19, X0
	032 Move TEMP, X8
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfEqual {116}
	036 Move X0, 0x710000
	037 Move X0, [X0+3256]
	038 Call 0x1C17CF4
	039 Move X0, 0x6B0000
	040 Move X0, [X0+2488]
	041 Call 0x1C17CF4
	042 Move X0, 0x710000
	043 Move X0, [X0+3224]
	044 Call 0x1C17CF4
	045 Move X0, 0x710000
	046 Move X0, [X0+3248]
	047 Call 0x1C17CF4
	048 Move X0, 0x710000
	049 Move X0, [X0+3240]
	050 Call 0x1C17CF4
	051 Move X0, 0x710000
	052 Move X0, [X0+3216]
	053 Call 0x1C17CF4
	054 Move X0, 0x6B4000
	055 Move X0, [X0+1680]
	056 Call 0x1C17CF4
	057 Move X0, 0x6B4000
	058 Move X0, [X0+1688]
	059 Call 0x1C17CF4
	060 Move X0, 0x6B4000
	061 Move X0, [X0+1696]
	062 Call 0x1C17CF4
	063 Move X0, 0x710000
	064 Move X0, [X0+3264]
	065 Call 0x1C17CF4
	066 Move X0, 0x710000
	067 Move X0, [X0+3232]
	068 Call 0x1C17CF4
	069 Move X0, 0x710000
	070 Move X0, [X0+3272]
	071 Call 0x1C17CF4
	072 Move X0, 0x710000
	073 Move X0, [X0+3280]
	074 Call 0x1C17CF4
	075 Move X0, 0x6B4000
	076 Move X0, [X0+1712]
	077 Call 0x1C17CF4
	078 Move X0, 0x710000
	079 Move X0, [X0+3288]
	080 Call 0x1C17CF4
	081 Move X0, 0x710000
	082 Move X0, [X0+3296]
	083 Call 0x1C17CF4
	084 Move X0, 0x6B4000
	085 Move X0, [X0+1720]
	086 Call 0x1C17CF4
	087 Move X0, 0x710000
	088 Move X0, [X0+3304]
	089 Call 0x1C17CF4
	090 Move X0, 0x6AE000
	091 Move X0, [X0+1432]
	092 Call 0x1C17CF4
	093 Move X0, 0x70B000
	094 Move X0, [X0+1432]
	095 Call 0x1C17CF4
	096 Move X0, 0x710000
	097 Move X0, [X0+3056]
	098 Call 0x1C17CF4
	099 Move X0, 0x70F000
	100 Move X0, [X0+2288]
	101 Call 0x1C17CF4
	102 Move X0, 0x70F000
	103 Move X0, [X0+16]
	104 Call 0x1C17CF4
	105 Move X0, 0x70F000
	106 Move X0, [X0+2248]
	107 Call 0x1C17CF4
	108 Move X0, 0x6D7000
	109 Move X0, [X0+2216]
	110 Call 0x1C17CF4
	111 Move X0, 0x710000
	112 Move X0, [X0+3312]
	113 Call 0x1C17CF4
	114 Move W8, 1
	115 Move [X28+411], W8
	116 Move X0, [X27]
	117 Move [X31+1128], X31
	118 Move [X31+1120], X31
	119 Move [X31+1136], X31
	120 Call 0x1C17F10
	121 Move X2, [X21]
	122 Move W1, 10
	123 Move X21, X0
	124 Call Dictionary`2<Hash128, Object>..ctor, X0, X1
	125 Move [X19+24], X21
	126 Move X0, [X26]
	127 Move W1, 20
	128 Call 0x1C17D6C
	129 Move [X19+40], X0
	130 Move X0, [X25]
	131 Call 0x1C17F10
	132 Move X2, [X24]
	133 Move W1, 10
	134 Move X21, X0
	135 Call Dictionary`2<Hash128, Int32>..ctor, X0, X1
	136 Move [X19+48], X21
	137 Move X0, [X23]
	138 Move W1, 8
	139 Call 0x1C17D6C
	140 Move X8, [X22]
	141 Move X21, X0
	142 Move W9, [X8+224]
	143 Compare W9, 0
	144 JumpIfNotEqual {147}
	145 Move X0, X8
	146 Call 0x1C17DFC
	147 Move X23, 0x99D000
	148 Move W8, [X23+452]
	149 Compare W8, 0
	150 JumpIfNotEqual {156}
	151 Move X0, 0x70F000
	152 Move X0, [X0+16]
	153 Call 0x1C17CF4
	154 Move W8, 1
	155 Move [X23+452], W8
	156 Move X0, [X22]
	157 Move W8, [X0+224]
	158 Compare W8, 0
	159 JumpIfNotEqual {162}
	160 Call 0x1C17DFC
	161 Move X0, [X22]
	162 Move X8, [X0+184]
	163 Add X0, X31, 1000
	164 Move W2, 120
	165 Add X1, X8, 8
	166 Call 0x3EB2AC0
	167 Compare X21, 0
	168 JumpIfEqual {604}
	169 Add X0, X31, 880
	170 Add X1, X31, 1000
	171 Move W2, 120
	172 Call 0x3EB2AC0
	173 Move W8, [X21+24]
	174 Compare W8, 0
	175 JumpIfEqual {603}
	176 Add X0, X21, 32
	177 Add X1, X31, 880
	178 Move W2, 120
	179 Call 0x3EB2AC0
	180 Move W8, [X23+452]
	181 Compare W8, 0
	182 JumpIfNotEqual {188}
	183 Move X0, 0x70F000
	184 Move X0, [X0+16]
	185 Call 0x1C17CF4
	186 Move W8, 1
	187 Move [X23+452], W8
	188 Move X0, [X22]
	189 Move W8, [X0+224]
	190 Compare W8, 0
	191 JumpIfNotEqual {194}
	192 Call 0x1C17DFC
	193 Move X0, [X22]
	194 Move X8, [X0+184]
	195 Add X0, X31, 760
	196 Move W2, 120
	197 Add X1, X8, 8
	198 Call 0x3EB2AC0
	199 Move W8, [X21+24]
	200 NotImplemented "Instruction CMP not yet implemented."
	201 Add X0, X21, 152
	202 Add X1, X31, 760
	203 Move W2, 120
	204 Call 0x3EB2AC0
	205 Move W8, [X23+452]
	206 Compare W8, 0
	207 JumpIfNotEqual {213}
	208 Move X0, 0x70F000
	209 Move X0, [X0+16]
	210 Call 0x1C17CF4
	211 Move W8, 1
	212 Move [X23+452], W8
	213 Move X0, [X22]
	214 Move W8, [X0+224]
	215 Compare W8, 0
	216 JumpIfNotEqual {219}
	217 Call 0x1C17DFC
	218 Move X0, [X22]
	219 Move X8, [X0+184]
	220 Add X0, X31, 640
	221 Move W2, 120
	222 Add X1, X8, 8
	223 Call 0x3EB2AC0
	224 Move W8, [X21+24]
	225 NotImplemented "Instruction CMP not yet implemented."
	226 Add X0, X21, 272
	227 Add X1, X31, 640
	228 Move W2, 120
	229 Call 0x3EB2AC0
	230 Move W8, [X23+452]
	231 Compare W8, 0
	232 JumpIfNotEqual {238}
	233 Move X0, 0x70F000
	234 Move X0, [X0+16]
	235 Call 0x1C17CF4
	236 Move W8, 1
	237 Move [X23+452], W8
	238 Move X0, [X22]
	239 Move W8, [X0+224]
	240 Compare W8, 0
	241 JumpIfNotEqual {244}
	242 Call 0x1C17DFC
	243 Move X0, [X22]
	244 Move X8, [X0+184]
	245 Add X0, X31, 520
	246 Move W2, 120
	247 Add X1, X8, 8
	248 Call 0x3EB2AC0
	249 Move W8, [X21+24]
	250 NotImplemented "Instruction CMP not yet implemented."
	251 Add X0, X21, 392
	252 Add X1, X31, 520
	253 Move W2, 120
	254 Call 0x3EB2AC0
	255 Move W8, [X23+452]
	256 Compare W8, 0
	257 JumpIfNotEqual {263}
	258 Move X0, 0x70F000
	259 Move X0, [X0+16]
	260 Call 0x1C17CF4
	261 Move W8, 1
	262 Move [X23+452], W8
	263 Move X0, [X22]
	264 Move W8, [X0+224]
	265 Compare W8, 0
	266 JumpIfNotEqual {269}
	267 Call 0x1C17DFC
	268 Move X0, [X22]
	269 Move X8, [X0+184]
	270 Add X0, X31, 400
	271 Move W2, 120
	272 Add X1, X8, 8
	273 Call 0x3EB2AC0
	274 Move W8, [X21+24]
	275 NotImplemented "Instruction CMP not yet implemented."
	276 Add X0, X21, 512
	277 Add X1, X31, 400
	278 Move W2, 120
	279 Call 0x3EB2AC0
	280 Move W8, [X23+452]
	281 Compare W8, 0
	282 JumpIfNotEqual {288}
	283 Move X0, 0x70F000
	284 Move X0, [X0+16]
	285 Call 0x1C17CF4
	286 Move W8, 1
	287 Move [X23+452], W8
	288 Move X0, [X22]
	289 Move W8, [X0+224]
	290 Compare W8, 0
	291 JumpIfNotEqual {294}
	292 Call 0x1C17DFC
	293 Move X0, [X22]
	294 Move X8, [X0+184]
	295 Add X0, X31, 280
	296 Move W2, 120
	297 Add X1, X8, 8
	298 Call 0x3EB2AC0
	299 Move W8, [X21+24]
	300 NotImplemented "Instruction CMP not yet implemented."
	301 Add X0, X21, 632
	302 Add X1, X31, 280
	303 Move W2, 120
	304 Call 0x3EB2AC0
	305 Move W8, [X23+452]
	306 Compare W8, 0
	307 JumpIfNotEqual {313}
	308 Move X0, 0x70F000
	309 Move X0, [X0+16]
	310 Call 0x1C17CF4
	311 Move W8, 1
	312 Move [X23+452], W8
	313 Move X0, [X22]
	314 Move W8, [X0+224]
	315 Compare W8, 0
	316 JumpIfNotEqual {319}
	317 Call 0x1C17DFC
	318 Move X0, [X22]
	319 Move X8, [X0+184]
	320 Add X0, X31, 160
	321 Move W2, 120
	322 Add X1, X8, 8
	323 Call 0x3EB2AC0
	324 Move W8, [X21+24]
	325 NotImplemented "Instruction CMP not yet implemented."
	326 Add X0, X21, 752
	327 Add X1, X31, 160
	328 Move W2, 120
	329 Call 0x3EB2AC0
	330 Move W8, [X23+452]
	331 Compare W8, 0
	332 JumpIfNotEqual {338}
	333 Move X0, 0x70F000
	334 Move X0, [X0+16]
	335 Call 0x1C17CF4
	336 Move W8, 1
	337 Move [X23+452], W8
	338 Move X0, [X22]
	339 Move W8, [X0+224]
	340 Compare W8, 0
	341 JumpIfNotEqual {344}
	342 Call 0x1C17DFC
	343 Move X0, [X22]
	344 Move X8, [X0+184]
	345 Add X0, X31, 40
	346 Move W2, 120
	347 Add X1, X8, 8
	348 Call 0x3EB2AC0
	349 Move W8, [X21+24]
	350 NotImplemented "Instruction CMP not yet implemented."
	351 Move X24, 0x6B0000
	352 Move X25, 0x710000
	353 Move X26, 0x70F000
	354 Move X27, 0x710000
	355 Move X28, 0x710000
	356 Move X29, 0x710000
	357 Move X23, 0x6B4000
	358 Move X22, 0x710000
	359 Move X24, [X24+2488]
	360 Move X25, [X25+3056]
	361 Move X26, [X26+2288]
	362 Move X27, [X27+3264]
	363 Move X28, [X28+3304]
	364 Move X29, [X29+3288]
	365 Move X23, [X23+1720]
	366 Move X22, [X22+3296]
	367 Add X0, X21, 872
	368 Add X1, X31, 40
	369 Move W2, 120
	370 Call 0x3EB2AC0
	371 Move [X19+56], X21
	372 Move X0, [X24]
	373 Move W1, 8
	374 Call 0x1C17D6C
	375 Move [X19+184], X0
	376 Move X0, [X25]
	377 Move W1, 8
	378 Call 0x1C17D6C
	379 Move W8, 1
	380 Move [X19+192], X0
	381 Move [X19+216], W8
	382 Move X0, [X26]
	383 Call 0x1C17F10
	384 Move X1, X31
	385 Move X21, X0
	386 Call RenderingFeatures..ctor, X0
	387 Move [X19+232], X21
	388 Move X0, [X27]
	389 Move W1, W31
	390 Call 0x1C17D6C
	391 Move [X19+240], X0
	392 Move X0, [X28]
	393 Call 0x1C17F10
	394 Move X2, [X29]
	395 Move W1, 32
	396 Move X21, X0
	397 Call List`1<Object>..ctor, X0, X1
	398 Move [X19+256], X21
	399 Move X0, [X23]
	400 Call 0x1C17F10
	401 Move X2, [X22]
	402 Move W1, 10
	403 Move X21, X0
	404 Call List`1<Object>..ctor, X0, X1
	405 Move W8, 257
	406 Move X0, X19
	407 Move X1, X31
	408 Move [X19+264], X21
	409 NotImplemented "Instruction STRH not yet implemented."
	410 Call Object..ctor, X0
	411 Compare X20, 0
	412 JumpIfEqual {604}
	413 Move X21, 0x710000
	414 Move X22, 0x70B000
	415 Move X21, [X21+3312]
	416 Move X22, [X22+1432]
	417 Move X0, X20
	418 Move X1, X31
	419 Call Object.get_name, X0
	420 Move X8, [X21]
	421 Move X1, X0
	422 Move X2, X31
	423 Move X0, X8
	424 Call String.Concat, X0, X1
	425 Move X8, [X22]
	426 Move X21, X0
	427 Move X0, X8
	428 Call 0x1C17F10
	429 Move X1, X21
	430 Move X2, X31
	431 Move X22, X0
	432 Call ProfilingSampler..ctor, X0, X1
	433 Move [X19+208], X22
	434 Move X0, [X20+40]
	435 Compare X0, 0
	436 JumpIfEqual {604}
	437 Move X8, 0x6B4000
	438 Move X8, [X8+1712]
	439 Move X26, 0x6B4000
	440 Move X24, 0x6AE000
	441 Move X27, 0x710000
	442 Move X26, [X26+1688]
	443 Move X24, [X24+1432]
	444 Move X27, [X27+3272]
	445 Move X1, [X8]
	446 Move X23, 0x6D7000
	447 Move X22, 0x70F000
	448 Move X25, 0x6B4000
	449 Move X23, [X23+2216]
	450 Move X22, [X22+2248]
	451 Move X25, [X25+1680]
	452 Add X8, X31, 16
	453 Call List`1<Object>.GetEnumerator, X0
	454 Move V0, [X31+1]
	455 Move X8, [X31+32]
	456 Move [X31+70], V0
	457 Move [X31+1136], X8
	458 Move X1, [X26]
	459 Add X0, X31, 1120
	460 Call Enumerator<Object>.MoveNext, X0
	461 Move TEMP, X0
	462 And TEMP, TEMP, 1
	463 Compare TEMP, 1
	464 JumpIfNotEqual {508}
	465 Move X0, [X24]
	466 Move X21, [X31+1136]
	467 Move W8, [X0+224]
	468 Compare W8, 0
	469 JumpIfNotEqual {471}
	470 Call 0x1C17DFC
	471 Move X0, X21
	472 Move X1, X31
	473 Move X2, X31
	474 Call Object.op_Equality, X0, X1
	475 Move TEMP, X0
	476 And TEMP, TEMP, 1
	477 Compare TEMP, 1
	478 JumpIfEqual {458}
	479 Compare X21, 0
	480 JumpIfEqual {601}
	481 Move X8, [X21]
	482 Move X9, [X8+392]
	483 Move X1, [X8+400]
	484 Move X0, X21
	485 NotImplemented "Instruction BLR not yet implemented."
	486 Move X0, [X19+264]
	487 Compare X0, 0
	488 JumpIfEqual {602}
	489 Move W10, [X0+28]
	490 Move X8, [X0+16]
	491 Move X9, [X27]
	492 Add W10, W10, 1
	493 Move [X0+28], W10
	494 Compare X8, 0
	495 JumpIfEqual {600}
	496 NotImplemented "Instruction LDRSW not yet implemented."
	497 Move W11, [X8+24]
	498 NotImplemented "Instruction CMP not yet implemented."
	499 Add W9, W10, 1
	500 Add X8, X8, X10
	501 Move [X0+24], W9
	502 Move [X8+32], X21
	503 Move X8, [X9+32]
	504 Move X8, [X8+192]
	505 Move X2, [X8+112]
	506 Move X1, X21
	507 Call List`1<Object>.AddWithResize, X0, X1
	508 Move X1, [X25]
	509 Add X0, X31, 1120
	510 Call Enumerator<Object>.Dispose, X0
	511 Move X0, X19
	512 Call ScriptableRenderer.ResetNativeRenderPassFrameData, X0
	513 Move W8, [X20+56]
	514 Compare W8, 0
	515 JumpIfEqual {524}
	516 Move X0, X31
	517 Call SystemInfo.get_graphicsDeviceType
	518 NotImplemented "Instruction CMP not yet implemented."
	519 Move W8, W31
	520 Move X0, X31
	521 Call SystemInfo.get_graphicsDeviceType
	522 NotImplemented "Instruction CMP not yet implemented."
	523 NotImplemented "Instruction CSET not yet implemented."
	524 Compare X19, 0
	525 JumpIfEqual {604}
	526 Move X0, X19
	527 Move W1, W31
	528 Move [X19+420], W8
	529 Call ScriptableRenderer.Clear, X0, X1
	530 Move X8, [X19+256]
	531 Compare X8, 0
	532 JumpIfEqual {604}
	533 Move W2, [X8+24]
	534 Move W9, [X8+28]
	535 Add W9, W9, 1
	536 NotImplemented "Instruction CMP not yet implemented."
	537 Move [X8+24], W31
	538 Move [X8+28], W9
	539 Move X0, [X8+16]
	540 Move W1, W31
	541 Move X3, X31
	542 Call Array.Clear, X0, X1, X2
	543 Move X0, [X23]
	544 Move W8, [X0+224]
	545 Compare W8, 0
	546 JumpIfNotEqual {548}
	547 Call 0x1C17DFC
	548 Move X0, X31
	549 Call UniversalRenderPipeline.get_asset
	550 Move X8, [X24]
	551 Move X20, X0
	552 Move W9, [X8+224]
	553 Compare W9, 0
	554 JumpIfNotEqual {557}
	555 Move X0, X8
	556 Call 0x1C17DFC
	557 Move X0, X20
	558 Move X1, X31
	559 Call Object.op_Implicit, X0
	560 Move TEMP, X0
	561 And TEMP, TEMP, 1
	562 Compare TEMP, 1
	563 JumpIfNotEqual {575}
	564 Move X0, [X23]
	565 Move W8, [X0+224]
	566 Compare W8, 0
	567 JumpIfNotEqual {569}
	568 Call 0x1C17DFC
	569 Move X0, X31
	570 Call UniversalRenderPipeline.get_asset
	571 Compare X0, 0
	572 JumpIfEqual {604}
	573 Move W20, [X0+244]
	574 Move [X19+248], W20
	575 Move W20, [X19+248]
	576 Move X0, [X22]
	577 Move W8, [X0+224]
	578 Compare W8, 0
	579 JumpIfNotEqual {582}
	580 Call 0x1C17DFC
	581 Move X0, [X22]
	582 Move X8, [X0+184]
	583 NotImplemented "Instruction CMP not yet implemented."
	584 NotImplemented "Instruction CSET not yet implemented."
	585 Move [X8+8], W9
	586 Add X31, X31, 1152
	587 Move X20, [X31+80]
	588 Move X19, [X31+88]
	589 Move X22, [X31+64]
	590 Move X21, [X31+72]
	591 Move X24, [X31+48]
	592 Move X23, [X31+56]
	593 Move X26, [X31+32]
	594 Move X25, [X31+40]
	595 Move X28, [X31+16]
	596 Move X27, [X31+24]
	597 Move X29, [X31+96]
	598 Move X30, [X31+104]
	599 Return 
	600 Call 0x1C17F20
	601 Call 0x1C17F20
	602 Call 0x1C17F20
	603 Call 0x1C17F28
	604 Call 0x1C17F20
	605 NotImplemented "Instruction CMP not yet implemented."
	606 Call 0x3EB2AD0
	607 Move X21, [X0]
	608 Call 0x3EB2AE0
	609 Move X1, [X25]
	610 Add X0, X31, 1120
	611 Call Enumerator<Object>.Dispose, X0
	612 Compare X21, 0
	613 JumpIfEqual {511}
	614 Move X0, X21
	615 Call 0x1C17F18
	616 Move X19, X0
	617 Move X21, X31
	618 Move X19, X0
	619 Move X1, [X25]
	620 Add X0, X31, 1120
	621 Call Enumerator<Object>.Dispose, X0
	622 Compare X21, 0
	623 JumpIfNotEqual {626}
	624 Move X0, X19
	625 Call 0x1D2D690
	626 Move X0, X21
	627 Call 0x1C17F18
	628 Call 0x1991590

Method: System.Void Dispose()

Disassembly:
	0x03A4C330 ADD X1, X31, 0x0
	0x03A4C334 MOVZ W2, 0x2B8
	0x03A4C338 BL 0x3EB1AC0
	0x03A4C33C ADD X1, X19, 0x18
	0x03A4C340 ADD X0, X20, 0x2C8
	0x03A4C344 MOVZ W2, 0x210
	0x03A4C348 BL 0x3EB1B30
	0x03A4C34C ADD X0, X31, 0x2C0
	0x03A4C350 MOV W1, W31
	0x03A4C354 MOV X2, X31
	0x03A4C358 BL 0x398E404
	0x03A4C35C ADRP X21, 0x709000
	0x03A4C360 LDR X21, [X21 + 0xE10]
	0x03A4C364 LDR X8, [X21]
	0x03A4C368 LDR W9, [X8 + 0xE0]
	0x03A4C36C CBNZ W9, 0x3A4C37C
	0x03A4C370 MOV X0, X8
	0x03A4C374 BL 0x1C16DFC
	0x03A4C378 LDR X8, [X21]
	0x03A4C37C LDR X9, [X8 + 0xB8]
	0x03A4C380 LDR X19, [X9 + 0x30]
	0x03A4C384 CBNZ X19, 0x3A4C3DC
	0x03A4C388 LDR W9, [X8 + 0xE0]
	0x03A4C38C CBNZ W9, 0x3A4C39C
	0x03A4C390 MOV X0, X8
	0x03A4C394 BL 0x1C16DFC
	0x03A4C398 LDR X8, [X21]
	0x03A4C39C ADRP X9, 0x709000
	0x03A4C3A0 LDR X8, [X8 + 0xB8]
	0x03A4C3A4 LDR X9, [X9 + 0xEA8]
	0x03A4C3A8 LDR X20, [X8]
	0x03A4C3AC LDR X0, [X9]
	0x03A4C3B0 BL 0x1C16F10
	0x03A4C3B4 ADRP X8, 0x709000
	0x03A4C3B8 LDR X8, [X8 + 0xEC0]
	0x03A4C3BC MOV X19, X0
	0x03A4C3C0 LDR X2, [X8]
	0x03A4C3C4 MOV X1, X20
	0x03A4C3C8 MOV X3, X31
	0x03A4C3CC BL 0x25C78AC
	0x03A4C3D0 LDR X8, [X21]
	0x03A4C3D4 LDR X8, [X8 + 0xB8]
	0x03A4C3D8 STR X19, [X8 + 0x30]
	0x03A4C3DC ADRP X8, 0x709000
	0x03A4C3E0 LDR X8, [X8 + 0xEB0]
	0x03A4C3E4 LDR X2, [X8]
	0x03A4C3E8 ADD X0, X31, 0x2C0
	0x03A4C3EC MOV X1, X19
	0x03A4C3F0 BL 0x224107C
	0x03A4C3F4 ADD X0, X31, 0x2C0
	0x03A4C3F8 MOV X1, X31
	0x03A4C3FC BL 0x39972C0
	0x03A4C400 ADD X31, X31, 0x2E0
	0x03A4C404 LDP X20, X19, [X31 + 0x20]
	0x03A4C408 LDP X22, X21, [X31 + 0x10]
	0x03A4C40C LDP X29, X30, [X31], #0x30
	0x03A4C410 RET
	0x03A4C414 BL 0x1C16F20
	0x03A4C418 BL 0x1C16F20
	0x03A4C41C B 0x3A4C428
	0x03A4C420 B 0x3A4C428
	0x03A4C424 B 0x3A4C428
	0x03A4C428 MOV X19, X0
	0x03A4C42C CMP W1, 0x1
	0x03A4C430 B.NE 0x3A4C45C
	0x03A4C434 MOV X0, X19
	0x03A4C438 BL 0x3EB1AD0
	0x03A4C43C LDR X20, [X0]
	0x03A4C440 BL 0x3EB1AE0
	0x03A4C444 ADD X0, X31, 0x2C0
	0x03A4C448 MOV X1, X31
	0x03A4C44C BL 0x39972C0
	0x03A4C450 CBZ X20, 0x3A4C400
	0x03A4C454 MOV X0, X20
	0x03A4C458 BL 0x1C16F18
	0x03A4C45C MOV X20, X31
	0x03A4C460 B 0x3A4C468
	0x03A4C464 MOV X19, X0

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0x997000
	009 Move W8, [X20+412]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {29}
	015 Move X0, 0x6AF000
	016 Move X0, [X0+3088]
	017 Call 0x1C17CF4
	018 Move X0, 0x70A000
	019 Move X0, [X0+3552]
	020 Call 0x1C17CF4
	021 Move X0, 0x70A000
	022 Move X0, [X0+3560]
	023 Call 0x1C17CF4
	024 Move X0, 0x6A8000
	025 Move X0, [X0+1432]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X20+412], W8
	029 Move X0, [X19+264]
	030 Compare X0, 0
	031 JumpIfEqual {73}
	032 Move X23, 0x70A000
	033 Move X24, 0x6A8000
	034 Move X22, 0x6AF000
	035 Move X23, [X23+3560]
	036 Move X24, [X24+1432]
	037 Move X22, [X22+3088]
	038 Move W20, W31
	039 Move W8, [X0+24]
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Move X2, [X23]
	042 Move W1, W20
	043 Call List`1<Object>.get_Item, X0, X1
	044 Move X8, [X24]
	045 Move X21, X0
	046 Move W9, [X8+224]
	047 Compare W9, 0
	048 JumpIfNotEqual {51}
	049 Move X0, X8
	050 Call 0x1C17DFC
	051 Move X0, X21
	052 Move X1, X31
	053 Move X2, X31
	054 Call Object.op_Equality, X0, X1
	055 Move TEMP, X0
	056 And TEMP, TEMP, 1
	057 Compare TEMP, 1
	058 JumpIfEqual {69}
	059 Move X0, [X19+264]
	060 Compare X0, 0
	061 JumpIfEqual {73}
	062 Move X2, [X23]
	063 Move W1, W20
	064 Call List`1<Object>.get_Item, X0, X1
	065 Compare X0, 0
	066 JumpIfEqual {73}
	067 Move X1, X31
	068 Call ScriptableRendererFeature.Dispose, X0
	069 Move X0, [X19+264]
	070 Add W20, W20, 1
	071 Compare X0, 0
	072 JumpIfNotEqual {39}
	073 Call 0x1C17F20
	074 Move X8, [X19]
	075 Move W1, 1
	076 Move X0, X19
	077 Move W20, 1
	078 Move X9, [X8+440]
	079 Move X2, [X8+448]
	080 NotImplemented "Instruction BLR not yet implemented."
	081 Move [X19+216], W20
	082 Move X0, [X22]
	083 Move W8, [X0+224]
	084 Compare W8, 0
	085 JumpIfNotEqual {87}
	086 Call 0x1C17DFC
	087 Move X0, X19
	088 Move X20, [X31+48]
	089 Move X19, [X31+56]
	090 Move X22, [X31+32]
	091 Move X21, [X31+40]
	092 Move X24, [X31+16]
	093 Move X23, [X31+24]
	094 Move X1, X31
	095 Move X30, [X31+64]
	096 Call GC.SuppressFinalize, X0
	097 Return 

Method: System.Void Dispose(System.Boolean disposing)

Disassembly:
	0x03A4C468 ADD X0, X31, 0x2C0
	0x03A4C46C MOV X1, X31
	0x03A4C470 BL 0x39972C0
	0x03A4C474 CBNZ X20, 0x3A4C480
	0x03A4C478 MOV X0, X19

ISIL:
	001 Move X0, [X0+224]
	002 Compare X0, 0
	003 JumpIfEqual {7}
	004 Move X1, X31
	005 Call DebugHandler.Dispose, X0
	006 Return 
	007 Return 

Method: System.Void ReleaseRenderTargets()

Disassembly:
	0x03A4C47C BL 0x1D2C690

ISIL:
	001 Return 

Method: System.Void ConfigureCameraTarget(UnityEngine.Rendering.RenderTargetIdentifier colorTarget, UnityEngine.Rendering.RenderTargetIdentifier depthTarget)

Disassembly:
	0x03A4C480 MOV X0, X20
	0x03A4C484 BL 0x1C16F18
	0x03A4C488 BL 0x1990590
	0x03A4C48C STR X30, [X31 - 0x40]!
	0x03A4C490 STP X24, X23, [X31 + 0x10]
	0x03A4C494 STP X22, X21, [X31 + 0x20]
	0x03A4C498 STP X20, X19, [X31 + 0x30]
	0x03A4C49C ADRP X24, 0x996000
	0x03A4C4A0 ADRP X23, 0x709000
	0x03A4C4A4 LDRB W8, [X24 + 0x1A3]
	0x03A4C4A8 LDR X23, [X23 + 0xD30]
	0x03A4C4AC MOV X19, X3
	0x03A4C4B0 MOV X21, X2
	0x03A4C4B4 MOV X20, X1
	0x03A4C4B8 MOV X22, X0
	0x03A4C4BC TBNZ X8, 0x0, 0x3A4C4E0
	0x03A4C4C0 ADRP X0, 0x709000
	0x03A4C4C4 LDR X0, [X0 + 0xD30]
	0x03A4C4C8 BL 0x1C16CF4
	0x03A4C4CC ADRP X0, 0x708000
	0x03A4C4D0 LDR X0, [X0 + 0x8C8]
	0x03A4C4D4 BL 0x1C16CF4

ISIL:
	001 Move [X31-48], X31
	002 Move V0, [X1]
	003 Move V1, [X1+16]
	004 Move X8, [X1+32]
	005 Move [X31+8], V0
	006 Move [X31+24], V1
	007 Move [X31+40], X8
	008 Move V1, [X31+16]
	009 Move V0, [X31+32]
	010 Move V2, [X31]
	011 Move [X0+288], V1
	012 Move [X0+296], V0
	013 Move [X0+17], V2
	014 Move [X31], X31
	015 Move V0, [X2]
	016 Move V1, [X2+16]
	017 Move X8, [X2+32]
	018 Move [X31+8], V0
	019 Move [X31+24], V1
	020 Move [X31+40], X8
	021 Move V1, [X31+16]
	022 Move V0, [X31+32]
	023 Move V2, [X31]
	024 Move [X0+336], V1
	025 Move [X0+344], V0
	026 Move [X0+20], V2
	027 Add X31, X31, 48
	028 Return 

Method: System.Void ConfigureCameraTarget(UnityEngine.Rendering.RTHandle colorTarget, UnityEngine.Rendering.RTHandle depthTarget)

Disassembly:
	0x03A4C4D8 MOVZ W8, 0x1
	0x03A4C4DC STRB W8, [X24 + 0x1A3]
	0x03A4C4E0 LDR X0, [X23]
	0x03A4C4E4 STRB W31, [X31 + 0x8]
	0x03A4C4E8 ADRP X24, 0x708000
	0x03A4C4EC LDR W8, [X0 + 0xE0]
	0x03A4C4F0 LDR X24, [X24 + 0x8C8]
	0x03A4C4F4 CBNZ W8, 0x3A4C500
	0x03A4C4F8 BL 0x1C16DFC
	0x03A4C4FC LDR X0, [X23]
	0x03A4C500 LDR X8, [X0 + 0xB8]
	0x03A4C504 ADD X0, X31, 0x8
	0x03A4C508 MOV X1, X31

ISIL:
	001 Add X8, X0, 280
	002 NotImplemented "Instruction MOVI not yet implemented."
	003 Move [X0+272], X1
	004 Move [X8], V0
	005 Add X8, X0, 296
	006 Move [X8], V0
	007 Add X8, X0, 328
	008 Add X9, X0, 344
	009 Move [X0+312], X31
	010 Move [X0+320], X2
	011 Move [X0+360], X31
	012 Move [X8], V0
	013 Move [X9], V0
	014 Return 

Method: System.Void ConfigureCameraTarget(UnityEngine.Rendering.RenderTargetIdentifier colorTarget, UnityEngine.Rendering.RenderTargetIdentifier depthTarget, UnityEngine.Rendering.RenderTargetIdentifier resolveTarget)

Disassembly:
	0x03A4C50C MOV X3, X31
	0x03A4C510 LDR X2, [X8 + 0x28]
	0x03A4C514 BL 0x39B1DB0
	0x03A4C518 LDR X0, [X24]
	0x03A4C51C LDR X23, [X22 + 0x100]
	0x03A4C520 LDR W8, [X0 + 0xE0]
	0x03A4C524 CBNZ W8, 0x3A4C52C
	0x03A4C528 BL 0x1C16DFC
	0x03A4C52C MOV X0, X23
	0x03A4C530 BL 0x3A4C600
	0x03A4C534 ADD X0, X31, 0x8
	0x03A4C538 MOV X1, X31
	0x03A4C53C BL 0x39B1DB4
	0x03A4C540 MOV X0, X22
	0x03A4C544 MOV X1, X20
	0x03A4C548 MOV X2, X19
	0x03A4C54C BL 0x3A4B634
	0x03A4C550 MOV X1, X20
	0x03A4C554 MOV X2, X19
	0x03A4C558 BL 0x3A4BFD4
	0x03A4C55C LDR X8, [X22]
	0x03A4C560 MOV X0, X22
	0x03A4C564 MOV X1, X20
	0x03A4C568 MOV X2, X21
	0x03A4C56C LDR X9, [X8 + 0x218]
	0x03A4C570 LDR X4, [X8 + 0x220]
	0x03A4C574 MOV X3, X19
	0x03A4C578 BLR X9
	0x03A4C57C MOV X1, X20
	0x03A4C580 MOV X2, X19
	0x03A4C584 BL 0x3A4C230
	0x03A4C588 LDP X20, X19, [X31 + 0x30]

ISIL:
	001 Move [X31-48], X31
	002 Move V0, [X1]
	003 Move V1, [X1+16]
	004 Move X8, [X1+32]
	005 Move [X31+8], V0
	006 Move [X31+24], V1
	007 Move [X31+40], X8
	008 Move V1, [X31+16]
	009 Move V0, [X31+32]
	010 Move V2, [X31]
	011 Move [X0+288], V1
	012 Move [X0+296], V0
	013 Move [X0+17], V2
	014 Move [X31], X31
	015 Move V0, [X2]
	016 Move V1, [X2+16]
	017 Move X8, [X2+32]
	018 Move [X31+8], V0
	019 Move [X31+24], V1
	020 Move [X31+40], X8
	021 Move V1, [X31+16]
	022 Move V0, [X31+32]
	023 Move V2, [X31]
	024 Move [X0+336], V1
	025 Move [X0+344], V0
	026 Move [X0+20], V2
	027 Move [X31], X31
	028 Move V0, [X3]
	029 Move V1, [X3+16]
	030 Move X8, [X3+32]
	031 Move [X31+8], V0
	032 Move [X31+24], V1
	033 Move [X31+40], X8
	034 Move V1, [X31+16]
	035 Move V0, [X31+32]
	036 Move V2, [X31]
	037 Move [X0+384], V1
	038 Move [X0+392], V0
	039 Move [X0+23], V2
	040 Add X31, X31, 48
	041 Return 

Method: System.Void ConfigureCameraTarget(UnityEngine.Rendering.RTHandle colorTarget, UnityEngine.Rendering.RTHandle depthTarget, UnityEngine.Rendering.RTHandle resolveTarget)

Disassembly:
	0x03A4C58C LDP X22, X21, [X31 + 0x20]
	0x03A4C590 LDP X24, X23, [X31 + 0x10]
	0x03A4C594 LDR X30, [X31], #0x40
	0x03A4C598 RET
	0x03A4C59C CMP W1, 0x1
	0x03A4C5A0 MOV X24, X0
	0x03A4C5A4 B.NE 0x3A4C5D0
	0x03A4C5A8 MOV X0, X24
	0x03A4C5AC BL 0x3EB1AD0
	0x03A4C5B0 LDR X23, [X0]
	0x03A4C5B4 BL 0x3EB1AE0
	0x03A4C5B8 ADD X0, X31, 0x8
	0x03A4C5BC MOV X1, X31
	0x03A4C5C0 BL 0x39B1DB4
	0x03A4C5C4 CBZ X23, 0x3A4C540
	0x03A4C5C8 MOV X0, X23
	0x03A4C5CC BL 0x1C16F18
	0x03A4C5D0 MOV X23, X31

ISIL:
	001 Add X8, X0, 280
	002 NotImplemented "Instruction MOVI not yet implemented."
	003 Move [X0+272], X1
	004 Move [X8], V0
	005 Add X8, X0, 296
	006 Move [X8], V0
	007 Add X8, X0, 328
	008 Add X9, X0, 344
	009 Move [X0+312], X31
	010 Move [X0+320], X2
	011 Move [X8], V0
	012 Add X8, X0, 376
	013 Move [X9], V0
	014 Add X9, X0, 392
	015 Move [X0+360], X31
	016 Move [X0+368], X3
	017 Move [X0+408], X31
	018 Move [X8], V0
	019 Move [X9], V0
	020 Return 

Method: System.Void ConfigureCameraColorTarget(UnityEngine.Rendering.RenderTargetIdentifier colorTarget)

Disassembly:
	0x03A4C5D4 B 0x3A4C5DC
	0x03A4C5D8 MOV X24, X0
	0x03A4C5DC ADD X0, X31, 0x8
	0x03A4C5E0 MOV X1, X31
	0x03A4C5E4 BL 0x39B1DB4
	0x03A4C5E8 CBNZ X23, 0x3A4C5F4
	0x03A4C5EC MOV X0, X24
	0x03A4C5F0 BL 0x1D2C690
	0x03A4C5F4 MOV X0, X23
	0x03A4C5F8 BL 0x1C16F18
	0x03A4C5FC BL 0x1990590
	0x03A4C600 STR X30, [X31 - 0x60]!

ISIL:
	001 Move [X31-48], X31
	002 Move V0, [X1]
	003 Move V1, [X1+16]
	004 Move X8, [X1+32]
	005 Move [X31+8], V0
	006 Move [X31+24], V1
	007 Move [X31+40], X8
	008 Move V1, [X31+16]
	009 Move V0, [X31+32]
	010 Move V2, [X31]
	011 Move [X0+288], V1
	012 Move [X0+296], V0
	013 Move [X0+17], V2
	014 Add X31, X31, 48
	015 Return 

Method: System.Void ConfigureCameraColorTarget(UnityEngine.Rendering.RTHandle colorTarget)

Disassembly:
	0x03A4C604 STP X28, X27, [X31 + 0x10]
	0x03A4C608 STP X26, X25, [X31 + 0x20]
	0x03A4C60C STP X24, X23, [X31 + 0x30]
	0x03A4C610 STP X22, X21, [X31 + 0x40]
	0x03A4C614 STP X20, X19, [X31 + 0x50]
	0x03A4C618 ADRP X20, 0x996000
	0x03A4C61C LDRB W8, [X20 + 0x1C2]
	0x03A4C620 MOV X19, X0

ISIL:
	001 Add X8, X0, 280
	002 NotImplemented "Instruction MOVI not yet implemented."
	003 Add X9, X0, 296
	004 Move [X0+272], X1
	005 Move [X0+312], X31
	006 Move [X8], V0
	007 Move [X9], V0
	008 Return 

Method: System.Void Setup(UnityEngine.Rendering.ScriptableRenderContext context, ref UnityEngine.Rendering.Universal.RenderingData renderingData)

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Void SetupLights(UnityEngine.Rendering.ScriptableRenderContext context, ref UnityEngine.Rendering.Universal.RenderingData renderingData)

Disassembly:
	0x03A4C624 TBNZ X8, 0x0, 0x3A4C660

ISIL:
	001 Return 

Method: System.Void SetupCullingParameters(ref UnityEngine.Rendering.ScriptableCullingParameters cullingParameters, ref UnityEngine.Rendering.Universal.CameraData cameraData)

Disassembly:
	0x03A4C628 ADRP X0, 0x708000

ISIL:
	001 Return 

Method: System.Void FinishRendering(UnityEngine.Rendering.CommandBuffer cmd)

Disassembly:
	0x03A4C62C LDR X0, [X0 + 0x908]

ISIL:
	001 Return 

Method: System.Void OnRecordRenderGraph(UnityEngine.Experimental.Rendering.RenderGraphModule.RenderGraph renderGraph, UnityEngine.Rendering.ScriptableRenderContext context, ref UnityEngine.Rendering.Universal.RenderingData renderingData)

Disassembly:
	0x03A4C630 BL 0x1C16CF4

ISIL:
	001 Return 

Method: System.Void InitRenderGraphFrame(UnityEngine.Experimental.Rendering.RenderGraphModule.RenderGraph renderGraph, ref UnityEngine.Rendering.Universal.RenderingData renderingData)

Disassembly:
	0x03A4C634 ADRP X0, 0x708000
	0x03A4C638 LDR X0, [X0 + 0x910]
	0x03A4C63C BL 0x1C16CF4
	0x03A4C640 ADRP X0, 0x709000
	0x03A4C644 LDR X0, [X0 + 0xED0]
	0x03A4C648 BL 0x1C16CF4
	0x03A4C64C ADRP X0, 0x707000
	0x03A4C650 LDR X0, [X0 + 0xFF0]
	0x03A4C654 BL 0x1C16CF4
	0x03A4C658 MOVZ W8, 0x1
	0x03A4C65C STRB W8, [X20 + 0x1C2]
	0x03A4C660 CBZ X19, 0x3A4C75C
	0x03A4C664 LDR W8, [X19 + 0x18]
	0x03A4C668 CMP W8, 0x2
	0x03A4C66C B.LT 0x3A4C740
	0x03A4C670 ADRP X26, 0x708000
	0x03A4C674 ADRP X27, 0x707000
	0x03A4C678 ADRP X28, 0x709000
	0x03A4C67C LDR X26, [X26 + 0x910]
	0x03A4C680 LDR X27, [X27 + 0xFF0]
	0x03A4C684 LDR X28, [X28 + 0xED0]
	0x03A4C688 MOVZ W20, 0x1
	0x03A4C68C MOVZ W25, 0x2
	0x03A4C690 LDR X2, [X26]
	0x03A4C694 MOV X0, X19
	0x03A4C698 MOV W1, W20
	0x03A4C69C BL 0x301BCCC
	0x03A4C6A0 MOV X21, X0
	0x03A4C6A4 MOV W22, W25
	0x03A4C6A8 LDR X2, [X26]
	0x03A4C6AC SUB W23, W22, 0x2
	0x03A4C6B0 MOV X0, X19
	0x03A4C6B4 MOV W1, W23
	0x03A4C6B8 BL 0x301BCCC
	0x03A4C6BC LDR X8, [X27]
	0x03A4C6C0 MOV X24, X0
	0x03A4C6C4 LDR W9, [X8 + 0xE0]
	0x03A4C6C8 CBNZ W9, 0x3A4C6D4
	0x03A4C6CC MOV X0, X8
	0x03A4C6D0 BL 0x1C16DFC
	0x03A4C6D4 MOV X0, X21
	0x03A4C6D8 MOV X1, X24
	0x03A4C6DC SUB W22, W22, 0x1
	0x03A4C6E0 BL 0x3A44D68
	0x03A4C6E4 TBZ X0, 0x0, 0x3A4C718
	0x03A4C6E8 LDR X2, [X26]
	0x03A4C6EC MOV X0, X19
	0x03A4C6F0 MOV W1, W23
	0x03A4C6F4 BL 0x301BCCC
	0x03A4C6F8 LDR X3, [X28]
	0x03A4C6FC MOV X2, X0
	0x03A4C700 MOV X0, X19
	0x03A4C704 MOV W1, W22
	0x03A4C708 BL 0x301BD20
	0x03A4C70C CMP W22, 0x2
	0x03A4C710 B.GE 0x3A4C6A8
	0x03A4C714 MOV W22, W31
	0x03A4C718 LDR X3, [X28]
	0x03A4C71C MOV X0, X19
	0x03A4C720 MOV W1, W22
	0x03A4C724 MOV X2, X21
	0x03A4C728 BL 0x301BD20
	0x03A4C72C LDR W8, [X19 + 0x18]
	0x03A4C730 ADD W20, W20, 0x1
	0x03A4C734 ADD W25, W25, 0x1
	0x03A4C738 CMP W20, W8
	0x03A4C73C B.LT 0x3A4C690
	0x03A4C740 LDP X20, X19, [X31 + 0x50]
	0x03A4C744 LDP X22, X21, [X31 + 0x40]
	0x03A4C748 LDP X24, X23, [X31 + 0x30]
	0x03A4C74C LDP X26, X25, [X31 + 0x20]
	0x03A4C750 LDP X28, X27, [X31 + 0x10]
	0x03A4C754 LDR X30, [X31], #0x60
	0x03A4C758 RET
	0x03A4C75C BL 0x1C16F20
	0x03A4C760 STR X29, [X31 - 0x30]!
	0x03A4C764 STP X30, X21, [X31 + 0x10]
	0x03A4C768 STP X20, X19, [X31 + 0x20]
	0x03A4C76C SUB X31, X31, 0x2C0
	0x03A4C770 LDR X8, [X0]
	0x03A4C774 MOV X19, X2
	0x03A4C778 MOV X20, X0
	0x03A4C77C LDR X9, [X8 + 0x228]
	0x03A4C780 LDR X3, [X8 + 0x230]
	0x03A4C784 BLR X9
	0x03A4C788 LDRB W21, [X19 + 0x1D8]
	0x03A4C78C ADD X0, X31, 0x8
	0x03A4C790 MOVZ W2, 0x2B8
	0x03A4C794 MOV X1, X19
	0x03A4C798 BL 0x3EB1AC0
	0x03A4C79C ADD X2, X31, 0x8
	0x03A4C7A0 MOV X0, X20
	0x03A4C7A4 MOV W1, W21
	0x03A4C7A8 BL 0x3A4C7C0
	0x03A4C7AC ADD X31, X31, 0x2C0
	0x03A4C7B0 LDP X20, X19, [X31 + 0x20]
	0x03A4C7B4 LDP X30, X21, [X31 + 0x10]
	0x03A4C7B8 LDR X29, [X31], #0x30
	0x03A4C7BC RET
	0x03A4C7C0 SUB X31, X31, 0x40
	0x03A4C7C4 STP X30, X23, [X31 + 0x10]
	0x03A4C7C8 STP X22, X21, [X31 + 0x20]
	0x03A4C7CC STP X20, X19, [X31 + 0x30]
	0x03A4C7D0 ADRP X23, 0x996000
	0x03A4C7D4 ADRP X22, 0x709000
	0x03A4C7D8 LDRB W8, [X23 + 0x1C0]
	0x03A4C7DC LDR X22, [X22 + 0xD30]
	0x03A4C7E0 MOV X20, X2
	0x03A4C7E4 MOV W21, W1
	0x03A4C7E8 MOV X19, X0
	0x03A4C7EC TBNZ X8, 0x0, 0x3A4C828
	0x03A4C7F0 ADRP X0, 0x709000
	0x03A4C7F4 LDR X0, [X0 + 0xCD0]
	0x03A4C7F8 BL 0x1C16CF4
	0x03A4C7FC ADRP X0, 0x708000
	0x03A4C800 LDR X0, [X0 + 0x908]
	0x03A4C804 BL 0x1C16CF4
	0x03A4C808 ADRP X0, 0x708000
	0x03A4C80C LDR X0, [X0 + 0x910]
	0x03A4C810 BL 0x1C16CF4
	0x03A4C814 ADRP X0, 0x709000
	0x03A4C818 LDR X0, [X0 + 0xD30]
	0x03A4C81C BL 0x1C16CF4
	0x03A4C820 MOVZ W8, 0x1
	0x03A4C824 STRB W8, [X23 + 0x1C0]
	0x03A4C828 LDR X0, [X22]
	0x03A4C82C STRB W31, [X31 + 0x8]
	0x03A4C830 LDR W8, [X0 + 0xE0]
	0x03A4C834 CBNZ W8, 0x3A4C840
	0x03A4C838 BL 0x1C16DFC
	0x03A4C83C LDR X0, [X22]
	0x03A4C840 LDR X8, [X0 + 0xB8]
	0x03A4C844 ADD X0, X31, 0x8
	0x03A4C848 MOV X1, X31
	0x03A4C84C MOV X3, X31
	0x03A4C850 LDR X2, [X8 + 0x68]
	0x03A4C854 BL 0x39B1DB0
	0x03A4C858 LDR X8, [X19 + 0x100]
	0x03A4C85C CBZ X8, 0x3A4C8A8
	0x03A4C860 ADRP X23, 0x708000
	0x03A4C864 LDR X23, [X23 + 0x910]
	0x03A4C868 MOV W22, W31
	0x03A4C86C LDR W9, [X8 + 0x18]
	0x03A4C870 CMP W22, W9
	0x03A4C874 B.GE 0x3A4C8AC
	0x03A4C878 LDR X2, [X23]
	0x03A4C87C MOV X0, X8
	0x03A4C880 MOV W1, W22
	0x03A4C884 BL 0x301BCCC
	0x03A4C888 CBZ X0, 0x3A4C960
	0x03A4C88C LDR X8, [X0]
	0x03A4C890 LDR X1, [X20]

ISIL:
	001 Move [X31-64], X29
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Subtract X31, X31, 736
	009 Move X23, 0x997000
	010 Move X22, 0x70A000
	011 Move W8, [X23+413]
	012 Move X22, [X22+3376]
	013 Move X20, X2
	014 Move X21, X1
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {43}
	020 Move X0, 0x70A000
	021 Move X0, [X0+3376]
	022 Call 0x1C17CF4
	023 Move X0, 0x70A000
	024 Move X0, [X0+3568]
	025 Call 0x1C17CF4
	026 Move X0, 0x70A000
	027 Move X0, [X0+3576]
	028 Call 0x1C17CF4
	029 Move X0, 0x70A000
	030 Move X0, [X0+3584]
	031 Call 0x1C17CF4
	032 Move X0, 0x70A000
	033 Move X0, [X0+3592]
	034 Call 0x1C17CF4
	035 Move X0, 0x70A000
	036 Move X0, [X0+3600]
	037 Call 0x1C17CF4
	038 Move X0, 0x70A000
	039 Move X0, [X0+3608]
	040 Call 0x1C17CF4
	041 Move W8, 1
	042 Move [X23+413], W8
	043 Move X0, [X22]
	044 NotImplemented "Instruction MOVI not yet implemented."
	045 Move [X31+704], V0
	046 Move [X31+712], V0
	047 Move [X31+744], X31
	048 Move W8, [X0+224]
	049 Compare W8, 0
	050 JumpIfNotEqual {52}
	051 Call 0x1C17DFC
	052 Compare X21, 0
	053 JumpIfEqual {140}
	054 Move X8, [X22]
	055 Move X9, 0x70A000
	056 Move X10, 0x70A000
	057 Add X2, X31, 744
	058 Move X8, [X8+184]
	059 Move X9, [X9+3608]
	060 Move X10, [X10+3584]
	061 Move X0, X21
	062 Move X3, [X8+24]
	063 Move X1, [X9]
	064 Move X4, [X10]
	065 Add X8, X31, 8
	066 Call 0x2241F24, X0, X1, X2, X3
	067 NotImplemented "Instruction LDUR not yet implemented."
	068 NotImplemented "Instruction LDUR not yet implemented."
	069 Move X21, [X31+744]
	070 Add X0, X31, 8
	071 Move W2, 696
	072 Move X1, X20
	073 Move [X31+704], V0
	074 Move [X31+712], V1
	075 Call 0x3EB2AC0
	076 Compare X21, 0
	077 JumpIfEqual {141}
	078 Add X0, X21, 16
	079 Add X1, X31, 8
	080 Move W2, 696
	081 Call 0x3EB2AC0
	082 Move [X21+712], X19
	083 Add X0, X31, 704
	084 Move W1, W31
	085 Move X2, X31
	086 Call RenderGraphBuilder.AllowPassCulling, X0, X1
	087 Move X21, 0x70A000
	088 Move X21, [X21+3600]
	089 Move X8, [X21]
	090 Move W9, [X8+224]
	091 Compare W9, 0
	092 JumpIfNotEqual {96}
	093 Move X0, X8
	094 Call 0x1C17DFC
	095 Move X8, [X21]
	096 Move X9, [X8+184]
	097 Move X19, [X9+8]
	098 Compare X19, 0
	099 JumpIfNotEqual {122}
	100 Move W9, [X8+224]
	101 Compare W9, 0
	102 JumpIfNotEqual {106}
	103 Move X0, X8
	104 Call 0x1C17DFC
	105 Move X8, [X21]
	106 Move X9, 0x70A000
	107 Move X8, [X8+184]
	108 Move X9, [X9+3568]
	109 Move X20, [X8]
	110 Move X0, [X9]
	111 Call 0x1C17F10
	112 Move X8, 0x70A000
	113 Move X8, [X8+3592]
	114 Move X19, X0
	115 Move X2, [X8]
	116 Move X1, X20
	117 Move X3, X31
	118 Call 0x25C88AC, X0, X1, X2
	119 Move X8, [X21]
	120 Move X8, [X8+184]
	121 Move [X8+8], X19
	122 Move X8, 0x70A000
	123 Move X8, [X8+3576]
	124 Move X2, [X8]
	125 Add X0, X31, 704
	126 Move X1, X19
	127 Call 0x224207C, X0, X1
	128 Add X0, X31, 704
	129 Move X1, X31
	130 Call RenderGraphBuilder.Dispose, X0
	131 Add X31, X31, 736
	132 Move X20, [X31+48]
	133 Move X19, [X31+56]
	134 Move X22, [X31+32]
	135 Move X21, [X31+40]
	136 Move X30, [X31+16]
	137 Move X23, [X31+24]
	138 Move X29, [X31+64]
	139 Return 
	140 Call 0x1C17F20
	141 Call 0x1C17F20
	142 Move X19, X0
	143 NotImplemented "Instruction CMP not yet implemented."
	144 Move X0, X19
	145 Call 0x3EB2AD0
	146 Move X20, [X0]
	147 Call 0x3EB2AE0
	148 Add X0, X31, 704
	149 Move X1, X31
	150 Call RenderGraphBuilder.Dispose, X0
	151 Compare X20, 0
	152 JumpIfEqual {131}
	153 Move X0, X20
	154 Call 0x1C17F18
	155 Move X20, X31
	156 Move X19, X0
	157 Add X0, X31, 704
	158 Move X1, X31
	159 Call RenderGraphBuilder.Dispose, X0
	160 Compare X20, 0
	161 JumpIfNotEqual {164}
	162 Move X0, X19
	163 Call 0x1D2D690
	164 Move X0, X20
	165 Call 0x1C17F18
	166 Call 0x1991590

Method: System.Void ProcessVFXCameraCommand(UnityEngine.Experimental.Rendering.RenderGraphModule.RenderGraph renderGraph, ref UnityEngine.Rendering.Universal.RenderingData renderingData)

Disassembly:
	0x03A4C894 LDP X9, X2, [X8 + 0x178]
	0x03A4C898 BLR X9
	0x03A4C89C LDR X8, [X19 + 0x100]
	0x03A4C8A0 ADD W22, W22, 0x1
	0x03A4C8A4 CBNZ X8, 0x3A4C86C
	0x03A4C8A8 BL 0x1C16F20
	0x03A4C8AC TBZ X21, 0x0, 0x3A4C91C
	0x03A4C8B0 CMP W9, 0x1
	0x03A4C8B4 B.LT 0x3A4C8F8
	0x03A4C8B8 MOV W21, W31
	0x03A4C8BC LDR X2, [X23]
	0x03A4C8C0 MOV X0, X8
	0x03A4C8C4 MOV W1, W21
	0x03A4C8C8 BL 0x301BCCC
	0x03A4C8CC CBZ X0, 0x3A4C964
	0x03A4C8D0 LDR X8, [X0]
	0x03A4C8D4 LDR X1, [X20]
	0x03A4C8D8 LDP X9, X2, [X8 + 0x1B8]
	0x03A4C8DC BLR X9
	0x03A4C8E0 LDR X8, [X19 + 0x100]
	0x03A4C8E4 CBZ X8, 0x3A4C968
	0x03A4C8E8 LDR W9, [X8 + 0x18]
	0x03A4C8EC ADD W21, W21, 0x1
	0x03A4C8F0 CMP W21, W9
	0x03A4C8F4 B.LT 0x3A4C8BC
	0x03A4C8F8 LDR X8, [X19]
	0x03A4C8FC LDR X1, [X20]
	0x03A4C900 LDR X9, [X8 + 0x208]
	0x03A4C904 LDR X2, [X8 + 0x210]
	0x03A4C908 MOV X0, X19
	0x03A4C90C BLR X9
	0x03A4C910 LDR X8, [X19 + 0x100]
	0x03A4C914 STRB W31, [X19 + 0x1A2]
	0x03A4C918 CBZ X8, 0x3A4C96C
	0x03A4C91C LDP W2, W9, [X8 + 0x18]
	0x03A4C920 ADD W9, W9, 0x1
	0x03A4C924 CMP W2, 0x1
	0x03A4C928 STP W31, W9, [X8 + 0x18]
	0x03A4C92C B.LT 0x3A4C940
	0x03A4C930 LDR X0, [X8 + 0x10]
	0x03A4C934 MOV W1, W31
	0x03A4C938 MOV X3, X31
	0x03A4C93C BL 0x339FA34
	0x03A4C940 ADD X0, X31, 0x8
	0x03A4C944 MOV X1, X31
	0x03A4C948 BL 0x39B1DB4
	0x03A4C94C LDP X20, X19, [X31 + 0x30]
	0x03A4C950 LDP X22, X21, [X31 + 0x20]
	0x03A4C954 LDP X30, X23, [X31 + 0x10]
	0x03A4C958 ADD X31, X31, 0x40
	0x03A4C95C RET
	0x03A4C960 BL 0x1C16F20
	0x03A4C964 BL 0x1C16F20
	0x03A4C968 BL 0x1C16F20
	0x03A4C96C BL 0x1C16F20
	0x03A4C970 B 0x3A4C994
	0x03A4C974 B 0x3A4C994
	0x03A4C978 B 0x3A4C994
	0x03A4C97C B 0x3A4C994
	0x03A4C980 B 0x3A4C994
	0x03A4C984 B 0x3A4C994
	0x03A4C988 B 0x3A4C994
	0x03A4C98C B 0x3A4C994
	0x03A4C990 B 0x3A4C994
	0x03A4C994 MOV X19, X0
	0x03A4C998 CMP W1, 0x1
	0x03A4C99C B.NE 0x3A4C9C8
	0x03A4C9A0 MOV X0, X19
	0x03A4C9A4 BL 0x3EB1AD0
	0x03A4C9A8 LDR X20, [X0]
	0x03A4C9AC BL 0x3EB1AE0
	0x03A4C9B0 ADD X0, X31, 0x8
	0x03A4C9B4 MOV X1, X31
	0x03A4C9B8 BL 0x39B1DB4
	0x03A4C9BC CBZ X20, 0x3A4C94C
	0x03A4C9C0 MOV X0, X20
	0x03A4C9C4 BL 0x1C16F18
	0x03A4C9C8 MOV X20, X31
	0x03A4C9CC B 0x3A4C9D4
	0x03A4C9D0 MOV X19, X0
	0x03A4C9D4 ADD X0, X31, 0x8
	0x03A4C9D8 MOV X1, X31
	0x03A4C9DC BL 0x39B1DB4
	0x03A4C9E0 CBNZ X20, 0x3A4C9EC
	0x03A4C9E4 MOV X0, X19
	0x03A4C9E8 BL 0x1D2C690
	0x03A4C9EC MOV X0, X20
	0x03A4C9F0 BL 0x1C16F18
	0x03A4C9F4 BL 0x1990590
	0x03A4C9F8 RET
	0x03A4C9FC SUB X31, X31, 0x60
	0x03A4CA00 STR X30, [X31 + 0x20]
	0x03A4CA04 STP X24, X23, [X31 + 0x30]
	0x03A4CA08 STP X22, X21, [X31 + 0x40]
	0x03A4CA0C STP X20, X19, [X31 + 0x50]
	0x03A4CA10 ADRP X24, 0x996000
	0x03A4CA14 ADRP X23, 0x707000
	0x03A4CA18 LDRB W8, [X24 + 0x1A4]
	0x03A4CA1C LDR X23, [X23 + 0xFF0]
	0x03A4CA20 MOV W19, W4
	0x03A4CA24 MOV X20, X3
	0x03A4CA28 MOV X21, X1
	0x03A4CA2C MOV X22, X0
	0x03A4CA30 TBNZ X8, 0x0, 0x3A4CA78
	0x03A4CA34 ADRP X0, 0x709000
	0x03A4CA38 LDR X0, [X0 + 0xED8]
	0x03A4CA3C BL 0x1C16CF4
	0x03A4CA40 ADRP X0, 0x709000
	0x03A4CA44 LDR X0, [X0 + 0xEE0]
	0x03A4CA48 BL 0x1C16CF4
	0x03A4CA4C ADRP X0, 0x709000
	0x03A4CA50 LDR X0, [X0 + 0xEE8]
	0x03A4CA54 BL 0x1C16CF4
	0x03A4CA58 ADRP X0, 0x709000
	0x03A4CA5C LDR X0, [X0 + 0xEF0]
	0x03A4CA60 BL 0x1C16CF4
	0x03A4CA64 ADRP X0, 0x707000
	0x03A4CA68 LDR X0, [X0 + 0xFF0]
	0x03A4CA6C BL 0x1C16CF4
	0x03A4CA70 MOVZ W8, 0x1
	0x03A4CA74 STRB W8, [X24 + 0x1A4]
	0x03A4CA78 LDR X0, [X23]
	0x03A4CA7C STP X31, X31, [X31 + 0x8]
	0x03A4CA80 STR X31, [X31 + 0x18]
	0x03A4CA84 LDR W8, [X0 + 0xE0]
	0x03A4CA88 CBNZ W8, 0x3A4CA90
	0x03A4CA8C BL 0x1C16DFC
	0x03A4CA90 MOV W0, W19
	0x03A4CA94 BL 0x3A44DB8
	0x03A4CA98 LDR X9, [X22 + 0x100]
	0x03A4CA9C CBZ X9, 0x3A4CB3C
	0x03A4CAA0 ADRP X8, 0x709000
	0x03A4CAA4 LDR X8, [X8 + 0xEF0]
	0x03A4CAA8 ADRP X23, 0x709000
	0x03A4CAAC ADRP X22, 0x709000
	0x03A4CAB0 ADD W24, W0, W19
	0x03A4CAB4 LDR X1, [X8]
	0x03A4CAB8 LDR X23, [X23 + 0xEE0]
	0x03A4CABC LDR X22, [X22 + 0xED8]
	0x03A4CAC0 ADD X8, X31, 0x8
	0x03A4CAC4 MOV X0, X9
	0x03A4CAC8 BL 0x301CB58
	0x03A4CACC LDR X1, [X23]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+64], X30
	003 Move [X31+80], X22
	004 Move [X31+88], X21
	005 Move [X31+96], X20
	006 Move [X31+104], X19
	007 Move X22, 0x997000
	008 Move X21, 0x70A000
	009 Move W8, [X22+414]
	010 Move X21, [X21+3376]
	011 Move X19, X2
	012 Move X20, X1
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {40}
	017 Move X0, 0x70A000
	018 Move X0, [X0+3376]
	019 Call 0x1C17CF4
	020 Move X0, 0x70A000
	021 Move X0, [X0+3616]
	022 Call 0x1C17CF4
	023 Move X0, 0x70A000
	024 Move X0, [X0+3624]
	025 Call 0x1C17CF4
	026 Move X0, 0x70A000
	027 Move X0, [X0+3632]
	028 Call 0x1C17CF4
	029 Move X0, 0x70A000
	030 Move X0, [X0+3640]
	031 Call 0x1C17CF4
	032 Move X0, 0x70A000
	033 Move X0, [X0+3600]
	034 Call 0x1C17CF4
	035 Move X0, 0x70A000
	036 Move X0, [X0+3648]
	037 Call 0x1C17CF4
	038 Move W8, 1
	039 Move [X22+414], W8
	040 Move X0, [X21]
	041 NotImplemented "Instruction MOVI not yet implemented."
	042 Move [X31+32], V0
	043 Move [X31+40], V0
	044 Move [X31+72], X31
	045 Move W8, [X0+224]
	046 Compare W8, 0
	047 JumpIfNotEqual {49}
	048 Call 0x1C17DFC
	049 Compare X20, 0
	050 JumpIfEqual {130}
	051 Move X8, [X21]
	052 Move X9, 0x70A000
	053 Move X10, 0x70A000
	054 Add X2, X31, 72
	055 Move X8, [X8+184]
	056 Move X9, [X9+3648]
	057 Move X10, [X10+3632]
	058 Move X0, X20
	059 Move X3, [X8+64]
	060 Move X1, [X9]
	061 Move X4, [X10]
	062 Add X8, X31, 0
	063 Call 0x2241F24, X0, X1, X2, X3
	064 Move V0, [X31]
	065 Move V1, [X31+16]
	066 Move X8, [X31+72]
	067 Move [X31+32], V0
	068 Move [X31+40], V1
	069 Compare X8, 0
	070 JumpIfEqual {131}
	071 Move X9, [X19+216]
	072 Move [X8+32], X9
	073 NotImplemented "Instruction LDUR not yet implemented."
	074 Move [X8+1], V0
	075 Add X0, X31, 32
	076 Move W1, W31
	077 Move X2, X31
	078 Call RenderGraphBuilder.AllowPassCulling, X0, X1
	079 Move X21, 0x70A000
	080 Move X21, [X21+3600]
	081 Move X8, [X21]
	082 Move W9, [X8+224]
	083 Compare W9, 0
	084 JumpIfNotEqual {88}
	085 Move X0, X8
	086 Call 0x1C17DFC
	087 Move X8, [X21]
	088 Move X9, [X8+184]
	089 Move X19, [X9+16]
	090 Compare X19, 0
	091 JumpIfNotEqual {114}
	092 Move W9, [X8+224]
	093 Compare W9, 0
	094 JumpIfNotEqual {98}
	095 Move X0, X8
	096 Call 0x1C17DFC
	097 Move X8, [X21]
	098 Move X9, 0x70A000
	099 Move X8, [X8+184]
	100 Move X9, [X9+3616]
	101 Move X20, [X8]
	102 Move X0, [X9]
	103 Call 0x1C17F10
	104 Move X8, 0x70A000
	105 Move X8, [X8+3640]
	106 Move X19, X0
	107 Move X2, [X8]
	108 Move X1, X20
	109 Move X3, X31
	110 Call 0x25C88AC, X0, X1, X2
	111 Move X8, [X21]
	112 Move X8, [X8+184]
	113 Move [X8+16], X19
	114 Move X8, 0x70A000
	115 Move X8, [X8+3624]
	116 Move X2, [X8]
	117 Add X0, X31, 32
	118 Move X1, X19
	119 Call 0x224207C, X0, X1
	120 Add X0, X31, 32
	121 Move X1, X31
	122 Call RenderGraphBuilder.Dispose, X0
	123 Move X20, [X31+96]
	124 Move X19, [X31+104]
	125 Move X22, [X31+80]
	126 Move X21, [X31+88]
	127 Move X30, [X31+64]
	128 Add X31, X31, 112
	129 Return 
	130 Call 0x1C17F20
	131 Call 0x1C17F20
	132 Move X19, X0
	133 NotImplemented "Instruction CMP not yet implemented."
	134 Move X0, X19
	135 Call 0x3EB2AD0
	136 Move X20, [X0]
	137 Call 0x3EB2AE0
	138 Add X0, X31, 32
	139 Move X1, X31
	140 Call RenderGraphBuilder.Dispose, X0
	141 Compare X20, 0
	142 JumpIfEqual {123}
	143 Move X0, X20
	144 Call 0x1C17F18
	145 Move X20, X31
	146 Move X19, X0
	147 Add X0, X31, 32
	148 Move X1, X31
	149 Call RenderGraphBuilder.Dispose, X0
	150 Compare X20, 0
	151 JumpIfNotEqual {154}
	152 Move X0, X19
	153 Call 0x1D2D690
	154 Move X0, X20
	155 Call 0x1C17F18
	156 Call 0x1991590

Method: System.Void SetupRenderGraphCameraProperties(UnityEngine.Experimental.Rendering.RenderGraphModule.RenderGraph renderGraph, ref UnityEngine.Rendering.Universal.RenderingData renderingData, System.Boolean isTargetBackbuffer)

Disassembly:
	0x03A4CAD0 ADD X0, X31, 0x8
	0x03A4CAD4 BL 0x2BC4350
	0x03A4CAD8 TBZ X0, 0x0, 0x3A4CB14
	0x03A4CADC LDR X8, [X31 + 0x18]
	0x03A4CAE0 CBZ X8, 0x3A4CB38
	0x03A4CAE4 LDR W9, [X8 + 0x10]
	0x03A4CAE8 CMP W9, W19
	0x03A4CAEC B.LT 0x3A4CACC
	0x03A4CAF0 CMP W9, W24
	0x03A4CAF4 B.GE 0x3A4CACC
	0x03A4CAF8 LDR X9, [X8]
	0x03A4CAFC LDP X10, X3, [X9 + 0x1D8]
	0x03A4CB00 MOV X0, X8
	0x03A4CB04 MOV X1, X21
	0x03A4CB08 MOV X2, X20
	0x03A4CB0C BLR X10
	0x03A4CB10 B 0x3A4CACC
	0x03A4CB14 LDR X1, [X22]
	0x03A4CB18 ADD X0, X31, 0x8
	0x03A4CB1C BL 0x2BC434C
	0x03A4CB20 LDP X20, X19, [X31 + 0x50]
	0x03A4CB24 LDP X22, X21, [X31 + 0x40]
	0x03A4CB28 LDP X24, X23, [X31 + 0x30]
	0x03A4CB2C LDR X30, [X31 + 0x20]
	0x03A4CB30 ADD X31, X31, 0x60
	0x03A4CB34 RET
	0x03A4CB38 BL 0x1C16F20
	0x03A4CB3C BL 0x1C16F20
	0x03A4CB40 B 0x3A4CB48
	0x03A4CB44 B 0x3A4CB48
	0x03A4CB48 MOV X19, X0
	0x03A4CB4C CMP W1, 0x1
	0x03A4CB50 B.NE 0x3A4CB7C
	0x03A4CB54 MOV X0, X19
	0x03A4CB58 BL 0x3EB1AD0
	0x03A4CB5C LDR X20, [X0]
	0x03A4CB60 BL 0x3EB1AE0
	0x03A4CB64 LDR X1, [X22]
	0x03A4CB68 ADD X0, X31, 0x8
	0x03A4CB6C BL 0x2BC434C
	0x03A4CB70 CBZ X20, 0x3A4CB20
	0x03A4CB74 MOV X0, X20
	0x03A4CB78 BL 0x1C16F18
	0x03A4CB7C MOV X20, X31
	0x03A4CB80 B 0x3A4CB88
	0x03A4CB84 MOV X19, X0
	0x03A4CB88 LDR X1, [X22]
	0x03A4CB8C ADD X0, X31, 0x8
	0x03A4CB90 BL 0x2BC434C
	0x03A4CB94 CBNZ X20, 0x3A4CBA0
	0x03A4CB98 MOV X0, X19
	0x03A4CB9C BL 0x1D2C690
	0x03A4CBA0 MOV X0, X20
	0x03A4CBA4 BL 0x1C16F18
	0x03A4CBA8 BL 0x1990590
	0x03A4CBAC SUB X31, X31, 0x40
	0x03A4CBB0 STP X30, X23, [X31 + 0x10]
	0x03A4CBB4 STP X22, X21, [X31 + 0x20]
	0x03A4CBB8 STP X20, X19, [X31 + 0x30]
	0x03A4CBBC ADRP X23, 0x996000
	0x03A4CBC0 LDRB W8, [X23 + 0x1A5]
	0x03A4CBC4 MOV X20, X4
	0x03A4CBC8 MOV X22, X3
	0x03A4CBCC MOV X19, X2
	0x03A4CBD0 MOV X21, X0
	0x03A4CBD4 STR X1, [X31 + 0x8]
	0x03A4CBD8 TBNZ X8, 0x0, 0x3A4CBF0
	0x03A4CBDC ADRP X0, 0x704000
	0x03A4CBE0 LDR X0, [X0 + 0xC80]
	0x03A4CBE4 BL 0x1C16CF4
	0x03A4CBE8 MOVZ W8, 0x1
	0x03A4CBEC STRB W8, [X23 + 0x1A5]
	0x03A4CBF0 LDR W8, [X19 + 0xC8]
	0x03A4CBF4 CBZ W8, 0x3A4CC50
	0x03A4CBF8 MOV X0, X19
	0x03A4CBFC MOV X1, X31
	0x03A4CC00 BL 0x3A92DE8
	0x03A4CC04 AND W3, W0, 0x1
	0x03A4CC08 MOV X0, X21
	0x03A4CC0C MOV X1, X20
	0x03A4CC10 MOV X2, X19
	0x03A4CC14 BL 0x3A49D2C
	0x03A4CC18 MOV X0, X19
	0x03A4CC1C MOV X1, X31
	0x03A4CC20 BL 0x3A92DE8
	0x03A4CC24 AND W3, W0, 0x1
	0x03A4CC28 MOV X1, X20
	0x03A4CC2C MOV X2, X19
	0x03A4CC30 BL 0x3A4A948
	0x03A4CC34 MOV X1, X20
	0x03A4CC38 MOV X2, X19
	0x03A4CC3C LDP X20, X19, [X31 + 0x30]
	0x03A4CC40 LDP X22, X21, [X31 + 0x20]
	0x03A4CC44 LDP X30, X23, [X31 + 0x10]
	0x03A4CC48 ADD X31, X31, 0x40
	0x03A4CC4C B 0x3A4A370
	0x03A4CC50 ADRP X8, 0x704000
	0x03A4CC54 LDR X8, [X8 + 0xC80]
	0x03A4CC58 LDR X0, [X8]
	0x03A4CC5C LDR W8, [X0 + 0xE0]
	0x03A4CC60 CBNZ W8, 0x3A4CC68
	0x03A4CC64 BL 0x1C16DFC
	0x03A4CC68 ADD X0, X31, 0x8
	0x03A4CC6C MOV X1, X22
	0x03A4CC70 MOV W2, W31
	0x03A4CC74 MOV X3, X31
	0x03A4CC78 BL 0x3C591D4
	0x03A4CC7C MOV X0, X19
	0x03A4CC80 MOV X1, X31
	0x03A4CC84 BL 0x3A92DE8
	0x03A4CC88 AND W3, W0, 0x1
	0x03A4CC8C MOV X0, X21
	0x03A4CC90 MOV X1, X20
	0x03A4CC94 MOV X2, X19
	0x03A4CC98 BL 0x3A49D2C
	0x03A4CC9C LDP X20, X19, [X31 + 0x30]
	0x03A4CCA0 LDP X22, X21, [X31 + 0x20]
	0x03A4CCA4 LDP X30, X23, [X31 + 0x10]
	0x03A4CCA8 ADD X31, X31, 0x40
	0x03A4CCAC RET
	0x03A4CCB0 STR D10, [X31 - 0x80]!
	0x03A4CCB4 STP D9, D8, [X31 + 0x10]
	0x03A4CCB8 STP X29, X30, [X31 + 0x20]
	0x03A4CCBC STP X28, X27, [X31 + 0x30]
	0x03A4CCC0 STP X26, X25, [X31 + 0x40]
	0x03A4CCC4 STP X24, X23, [X31 + 0x50]
	0x03A4CCC8 STP X22, X21, [X31 + 0x60]
	0x03A4CCCC STP X20, X19, [X31 + 0x70]
	0x03A4CCD0 SUB X31, X31, 0x3C0
	0x03A4CCD4 ADRP X22, 0x996000
	0x03A4CCD8 STR X1, [X31 + 0x378]
	0x03A4CCDC ADRP X19, 0x709000
	0x03A4CCE0 LDRB W8, [X22 + 0x1A6]
	0x03A4CCE4 LDR X19, [X19 + 0x4B0]
	0x03A4CCE8 MOV X21, X2
	0x03A4CCEC MOV X20, X0
	0x03A4CCF0 ADD X25, X31, 0x2C0
	0x03A4CCF4 TBNZ X8, 0x0, 0x3A4CDCC
	0x03A4CCF8 ADRP X0, 0x704000
	0x03A4CCFC LDR X0, [X0 + 0xD20]
	0x03A4CD00 BL 0x1C16CF4
	0x03A4CD04 ADRP X0, 0x709000
	0x03A4CD08 LDR X0, [X0 + 0x4A8]
	0x03A4CD0C BL 0x1C16CF4
	0x03A4CD10 ADRP X0, 0x709000
	0x03A4CD14 LDR X0, [X0 + 0x4B0]
	0x03A4CD18 BL 0x1C16CF4
	0x03A4CD1C ADRP X0, 0x709000
	0x03A4CD20 LDR X0, [X0 + 0xED8]
	0x03A4CD24 BL 0x1C16CF4
	0x03A4CD28 ADRP X0, 0x709000
	0x03A4CD2C LDR X0, [X0 + 0xEE0]
	0x03A4CD30 BL 0x1C16CF4
	0x03A4CD34 ADRP X0, 0x709000

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+64], X30
	003 Move [X31+80], X24
	004 Move [X31+88], X23
	005 Move [X31+96], X22
	006 Move [X31+104], X21
	007 Move [X31+112], X20
	008 Move [X31+120], X19
	009 Move X24, 0x997000
	010 Move X23, 0x70A000
	011 Move W8, [X24+415]
	012 Move X23, [X23+3376]
	013 Move W21, W3
	014 Move X19, X2
	015 Move X22, X1
	016 Move X20, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {44}
	021 Move X0, 0x70A000
	022 Move X0, [X0+3376]
	023 Call 0x1C17CF4
	024 Move X0, 0x70A000
	025 Move X0, [X0+3568]
	026 Call 0x1C17CF4
	027 Move X0, 0x70A000
	028 Move X0, [X0+3576]
	029 Call 0x1C17CF4
	030 Move X0, 0x70A000
	031 Move X0, [X0+3584]
	032 Call 0x1C17CF4
	033 Move X0, 0x70A000
	034 Move X0, [X0+3656]
	035 Call 0x1C17CF4
	036 Move X0, 0x70A000
	037 Move X0, [X0+3600]
	038 Call 0x1C17CF4
	039 Move X0, 0x70A000
	040 Move X0, [X0+3664]
	041 Call 0x1C17CF4
	042 Move W8, 1
	043 Move [X24+415], W8
	044 Move X0, [X23]
	045 NotImplemented "Instruction MOVI not yet implemented."
	046 Move [X31+32], V0
	047 Move [X31+40], V0
	048 Move [X31+72], X31
	049 Move W8, [X0+224]
	050 Compare W8, 0
	051 JumpIfNotEqual {53}
	052 Call 0x1C17DFC
	053 Compare X22, 0
	054 JumpIfEqual {143}
	055 Move X8, [X23]
	056 Move X9, 0x70A000
	057 Move X10, 0x70A000
	058 Add X2, X31, 72
	059 Move X8, [X8+184]
	060 Move X9, [X9+3664]
	061 Move X10, [X10+3584]
	062 Move X0, X22
	063 Move X3, [X8+56]
	064 Move X1, [X9]
	065 Move X4, [X10]
	066 Add X8, X31, 0
	067 Call 0x2241F24, X0, X1, X2, X3
	068 Move V0, [X31]
	069 Move V1, [X31+16]
	070 Move X22, [X31+72]
	071 Move [X31+32], V0
	072 Move [X31+40], V1
	073 Compare X22, 0
	074 JumpIfEqual {144}
	075 Add X0, X22, 16
	076 Move W2, 696
	077 Move X1, X19
	078 And W21, W21, 1
	079 Move [X22+712], X20
	080 Call 0x3EB2B30
	081 Add X1, X19, 24
	082 Add X0, X22, 720
	083 Move W2, 528
	084 Call 0x3EB2B30
	085 Move [X22+1248], W21
	086 Add X0, X31, 32
	087 Move W1, W31
	088 Move X2, X31
	089 Call RenderGraphBuilder.AllowPassCulling, X0, X1
	090 Move X21, 0x70A000
	091 Move X21, [X21+3600]
	092 Move X8, [X21]
	093 Move W9, [X8+224]
	094 Compare W9, 0
	095 JumpIfNotEqual {99}
	096 Move X0, X8
	097 Call 0x1C17DFC
	098 Move X8, [X21]
	099 Move X9, [X8+184]
	100 Move X19, [X9+24]
	101 Compare X19, 0
	102 JumpIfNotEqual {125}
	103 Move W9, [X8+224]
	104 Compare W9, 0
	105 JumpIfNotEqual {109}
	106 Move X0, X8
	107 Call 0x1C17DFC
	108 Move X8, [X21]
	109 Move X9, 0x70A000
	110 Move X8, [X8+184]
	111 Move X9, [X9+3568]
	112 Move X20, [X8]
	113 Move X0, [X9]
	114 Call 0x1C17F10
	115 Move X8, 0x70A000
	116 Move X8, [X8+3656]
	117 Move X19, X0
	118 Move X2, [X8]
	119 Move X1, X20
	120 Move X3, X31
	121 Call 0x25C88AC, X0, X1, X2
	122 Move X8, [X21]
	123 Move X8, [X8+184]
	124 Move [X8+24], X19
	125 Move X8, 0x70A000
	126 Move X8, [X8+3576]
	127 Move X2, [X8]
	128 Add X0, X31, 32
	129 Move X1, X19
	130 Call 0x224207C, X0, X1
	131 Add X0, X31, 32
	132 Move X1, X31
	133 Call RenderGraphBuilder.Dispose, X0
	134 Move X20, [X31+112]
	135 Move X19, [X31+120]
	136 Move X22, [X31+96]
	137 Move X21, [X31+104]
	138 Move X24, [X31+80]
	139 Move X23, [X31+88]
	140 Move X30, [X31+64]
	141 Add X31, X31, 128
	142 Return 
	143 Call 0x1C17F20
	144 Call 0x1C17F20
	145 Move X19, X0
	146 NotImplemented "Instruction CMP not yet implemented."
	147 Move X0, X19
	148 Call 0x3EB2AD0
	149 Move X20, [X0]
	150 Call 0x3EB2AE0
	151 Add X0, X31, 32
	152 Move X1, X31
	153 Call RenderGraphBuilder.Dispose, X0
	154 Compare X20, 0
	155 JumpIfEqual {134}
	156 Move X0, X20
	157 Call 0x1C17F18
	158 Move X20, X31
	159 Move X19, X0
	160 Add X0, X31, 32
	161 Move X1, X31
	162 Call RenderGraphBuilder.Dispose, X0
	163 Compare X20, 0
	164 JumpIfNotEqual {167}
	165 Move X0, X19
	166 Call 0x1D2D690
	167 Move X0, X20
	168 Call 0x1C17F18
	169 Call 0x1991590

Method: System.Void DrawRenderGraphGizmos(UnityEngine.Experimental.Rendering.RenderGraphModule.RenderGraph renderGraph, UnityEngine.Experimental.Rendering.RenderGraphModule.TextureHandle color, UnityEngine.Experimental.Rendering.RenderGraphModule.TextureHandle depth, UnityEngine.Rendering.GizmoSubset gizmoSubset, ref UnityEngine.Rendering.Universal.RenderingData renderingData)

Disassembly:
	0x03A4CD38 LDR X0, [X0 + 0xEE8]
	0x03A4CD3C BL 0x1C16CF4
	0x03A4CD40 ADRP X0, 0x709000
	0x03A4CD44 LDR X0, [X0 + 0xEF0]
	0x03A4CD48 BL 0x1C16CF4
	0x03A4CD4C ADRP X0, 0x709000
	0x03A4CD50 LDR X0, [X0 + 0xDE0]
	0x03A4CD54 BL 0x1C16CF4
	0x03A4CD58 ADRP X0, 0x708000
	0x03A4CD5C LDR X0, [X0 + 0x908]
	0x03A4CD60 BL 0x1C16CF4
	0x03A4CD64 ADRP X0, 0x708000
	0x03A4CD68 LDR X0, [X0 + 0x910]
	0x03A4CD6C BL 0x1C16CF4
	0x03A4CD70 ADRP X0, 0x6D1000
	0x03A4CD74 LDR X0, [X0 + 0x148]
	0x03A4CD78 BL 0x1C16CF4
	0x03A4CD7C ADRP X0, 0x709000
	0x03A4CD80 LDR X0, [X0 + 0xD30]
	0x03A4CD84 BL 0x1C16CF4
	0x03A4CD88 ADRP X0, 0x709000
	0x03A4CD8C LDR X0, [X0 + 0xEF8]
	0x03A4CD90 BL 0x1C16CF4
	0x03A4CD94 ADRP X0, 0x709000
	0x03A4CD98 LDR X0, [X0 + 0xF00]
	0x03A4CD9C BL 0x1C16CF4
	0x03A4CDA0 ADRP X0, 0x709000
	0x03A4CDA4 LDR X0, [X0 + 0xF08]
	0x03A4CDA8 BL 0x1C16CF4
	0x03A4CDAC ADRP X0, 0x704000
	0x03A4CDB0 LDR X0, [X0 + 0xC80]
	0x03A4CDB4 BL 0x1C16CF4
	0x03A4CDB8 ADRP X0, 0x708000
	0x03A4CDBC LDR X0, [X0 + 0x8C8]
	0x03A4CDC0 BL 0x1C16CF4
	0x03A4CDC4 MOVZ W8, 0x1
	0x03A4CDC8 STRB W8, [X22 + 0x1A6]
	0x03A4CDCC LDR X0, [X19]
	0x03A4CDD0 MOVI V0.2D, 0x0
	0x03A4CDD4 STRB W31, [X31 + 0x370]
	0x03A4CDD8 STRB W31, [X31 + 0x338]
	0x03A4CDDC STR X31, [X31 + 0x328]
	0x03A4CDE0 STR X31, [X31 + 0x320]
	0x03A4CDE4 STR X31, [X31 + 0x330]
	0x03A4CDE8 STRB W31, [X31 + 0x318]
	0x03A4CDEC STP V0, V0, [X25 + 0x90]
	0x03A4CDF0 STR V0, [X25 + 0x8]
	0x03A4CDF4 STRB W31, [X31 + 0x310]
	0x03A4CDF8 STRB W31, [X31 + 0x308]
	0x03A4CDFC STRB W31, [X31 + 0x300]
	0x03A4CE00 ADRP X19, 0x709000
	0x03A4CE04 LDR W8, [X0 + 0xE0]
	0x03A4CE08 LDR X19, [X19 + 0x4A8]
	0x03A4CE0C CBNZ W8, 0x3A4CE14
	0x03A4CE10 BL 0x1C16DFC
	0x03A4CE14 LDR X0, [X19]
	0x03A4CE18 BL 0x29AF0A8
	0x03A4CE1C CBZ X0, 0x3A4D720
	0x03A4CE20 LDR X8, [X0 + 0x28]
	0x03A4CE24 CBZ X8, 0x3A4D720
	0x03A4CE28 LDR X8, [X20 + 0x108]
	0x03A4CE2C MOVZ W9, 0x1
	0x03A4CE30 STRB W31, [X20 + 0xD8]
	0x03A4CE34 STRB W9, [X20 + 0x1A2]
	0x03A4CE38 CBZ X8, 0x3A4D720
	0x03A4CE3C ADRP X28, 0x704000
	0x03A4CE40 LDR W8, [X8 + 0x18]
	0x03A4CE44 LDR X23, [X21 + 0xD8]
	0x03A4CE48 LDR X28, [X28 + 0xD20]
	0x03A4CE4C ADD X22, X21, 0x18
	0x03A4CE50 CBZ W8, 0x3A4CE70
	0x03A4CE54 MOV X0, X22
	0x03A4CE58 MOV X1, X31
	0x03A4CE5C BL 0x3A9124C
	0x03A4CE60 TBNZ X0, 0x0, 0x3A4CE70
	0x03A4CE64 MOV X0, X20
	0x03A4CE68 MOV X1, X21
	0x03A4CE6C BL 0x3A4DC78
	0x03A4CE70 LDR X0, [X28]
	0x03A4CE74 LDR W8, [X0 + 0xE0]
	0x03A4CE78 CBNZ W8, 0x3A4CE80
	0x03A4CE7C BL 0x1C16DFC
	0x03A4CE80 MOV X0, X31
	0x03A4CE84 BL 0x399D510
	0x03A4CE88 LDR X8, [X21 + 0x190]
	0x03A4CE8C CBZ X8, 0x3A4D720
	0x03A4CE90 ADRP X24, 0x704000
	0x03A4CE94 LDR X24, [X24 + 0xC80]
	0x03A4CE98 MOV X19, X0
	0x03A4CE9C MOV X0, X8
	0x03A4CEA0 MOV X1, X31
	0x03A4CEA4 BL 0x3984C98
	0x03A4CEA8 LDR X2, [X20 + 0xD0]
	0x03A4CEAC ANDS W31, W0, 0x1
	0x03A4CEB0 CSEL X1, X31, X19, NE
	0x03A4CEB4 ADD X0, X31, 0x370
	0x03A4CEB8 MOV X3, X31
	0x03A4CEBC BL 0x39B1DB0
	0x03A4CEC0 LDR X1, [X31 + 0x378]
	0x03A4CEC4 MOV X0, X20
	0x03A4CEC8 MOV X2, X21
	0x03A4CECC BL 0x3A4DE14
	0x03A4CED0 MOV X0, X31
	0x03A4CED4 BL 0x3C3C6C4
	0x03A4CED8 MOV V8.16B, V0.16B
	0x03A4CEDC MOV X0, X31
	0x03A4CEE0 BL 0x3C3C714
	0x03A4CEE4 MOV V9.16B, V0.16B
	0x03A4CEE8 MOV X0, X31
	0x03A4CEEC BL 0x3C3C83C
	0x03A4CEF0 ADRP X29, 0x708000
	0x03A4CEF4 LDR X29, [X29 + 0x8C8]
	0x03A4CEF8 MOV V10.16B, V0.16B
	0x03A4CEFC LDR X0, [X29]
	0x03A4CF00 LDR W8, [X0 + 0xE0]
	0x03A4CF04 CBNZ W8, 0x3A4CF0C
	0x03A4CF08 BL 0x1C16DFC
	0x03A4CF0C MOV X0, X19
	0x03A4CF10 BL 0x3A4DFD0
	0x03A4CF14 MOV X0, X19
	0x03A4CF18 MOV V0.16B, V8.16B
	0x03A4CF1C MOV V1.16B, V9.16B
	0x03A4CF20 MOV V2.16B, V10.16B
	0x03A4CF24 BL 0x3A4AB50
	0x03A4CF28 LDR X0, [X24]
	0x03A4CF2C LDR W8, [X0 + 0xE0]
	0x03A4CF30 CBNZ W8, 0x3A4CF38
	0x03A4CF34 BL 0x1C16DFC
	0x03A4CF38 ADD X0, X31, 0x378
	0x03A4CF3C MOV X1, X19
	0x03A4CF40 MOV X2, X31
	0x03A4CF44 BL 0x3C58FE4
	0x03A4CF48 CBZ X19, 0x3A4D730
	0x03A4CF4C MOV X0, X19
	0x03A4CF50 MOV X1, X31
	0x03A4CF54 BL 0x3C4C310
	0x03A4CF58 ADRP X26, 0x709000
	0x03A4CF5C LDR X26, [X26 + 0xD30]
	0x03A4CF60 LDR X0, [X26]
	0x03A4CF64 LDR W8, [X0 + 0xE0]
	0x03A4CF68 CBNZ W8, 0x3A4CF74
	0x03A4CF6C BL 0x1C16DFC
	0x03A4CF70 LDR X0, [X26]
	0x03A4CF74 LDR X8, [X0 + 0xB8]
	0x03A4CF78 LDR X2, [X8 + 0x28]
	0x03A4CF7C STRB W31, [X31 + 0x380]
	0x03A4CF80 ADD X0, X31, 0x380
	0x03A4CF84 MOV X1, X31
	0x03A4CF88 MOV X3, X31
	0x03A4CF8C BL 0x39B1DB0
	0x03A4CF90 LDRB W8, [X31 + 0x380]
	0x03A4CF94 LDR X0, [X29]
	0x03A4CF98 STRB W8, [X31 + 0x338]
	0x03A4CF9C LDR W8, [X0 + 0xE0]
	0x03A4CFA0 LDR X24, [X20 + 0x100]
	0x03A4CFA4 CBNZ W8, 0x3A4CFAC
	0x03A4CFA8 BL 0x1C16DFC
	0x03A4CFAC MOV X0, X24
	0x03A4CFB0 BL 0x3A4C600
	0x03A4CFB4 MOV X24, X31
	0x03A4CFB8 MOVZ W27, 0x5
	0x03A4CFBC ADD X0, X31, 0x338
	0x03A4CFC0 MOV X1, X31
	0x03A4CFC4 BL 0x39B1DB4
	0x03A4CFC8 CBNZ X24, 0x3A4D734
	0x03A4CFCC CMP W27, 0x5
	0x03A4CFD0 B.EQ 0x3A4CFD8

ISIL:
	001 Move [X31-64], X29
	002 Move [X31-56], X30
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Subtract X31, X31, 752
	010 Move X24, 0x997000
	011 Move [X31+744], X2
	012 Move [X31+736], X3
	013 Move X23, 0x70A000
	014 Move W8, [X24+416]
	015 Move X23, [X23+3376]
	016 Move X21, X5
	017 Move W19, W4
	018 Move X22, X1
	019 Move X20, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {47}
	024 Move X0, 0x70A000
	025 Move X0, [X0+3376]
	026 Call 0x1C17CF4
	027 Move X0, 0x70A000
	028 Move X0, [X0+3672]
	029 Call 0x1C17CF4
	030 Move X0, 0x70A000
	031 Move X0, [X0+3680]
	032 Call 0x1C17CF4
	033 Move X0, 0x70A000
	034 Move X0, [X0+3688]
	035 Call 0x1C17CF4
	036 Move X0, 0x70A000
	037 Move X0, [X0+3696]
	038 Call 0x1C17CF4
	039 Move X0, 0x70A000
	040 Move X0, [X0+3600]
	041 Call 0x1C17CF4
	042 Move X0, 0x70A000
	043 Move X0, [X0+3704]
	044 Call 0x1C17CF4
	045 Move W8, 1
	046 Move [X24+416], W8
	047 Move X0, [X23]
	048 NotImplemented "Instruction MOVI not yet implemented."
	049 Move [X31+704], V0
	050 Move [X31+712], V0
	051 Move [X31+696], X31
	052 Move W8, [X0+224]
	053 Compare W8, 0
	054 JumpIfNotEqual {56}
	055 Call 0x1C17DFC
	056 Compare X22, 0
	057 JumpIfEqual {156}
	058 Move X8, [X23]
	059 Move X9, 0x70A000
	060 Move X10, 0x70A000
	061 Add X2, X31, 696
	062 Move X8, [X8+184]
	063 Move X9, [X9+3704]
	064 Move X10, [X10+3688]
	065 Move X0, X22
	066 Move X3, [X8+112]
	067 Move X1, [X9]
	068 Move X4, [X10]
	069 Add X8, X31, 0
	070 Call 0x2241F24, X0, X1, X2, X3
	071 Move V0, [X31]
	072 Move V1, [X31+16]
	073 Move [X31+704], V0
	074 Move [X31+712], V1
	075 Add X0, X31, 704
	076 Add X1, X31, 744
	077 Move W2, W31
	078 Move X3, X31
	079 Call RenderGraphBuilder.UseColorBuffer, X0, X1, X2
	080 Add X0, X31, 704
	081 Add X1, X31, 736
	082 Move W2, 1
	083 Move X3, X31
	084 Call RenderGraphBuilder.UseDepthBuffer, X0, X1, X2
	085 Move X22, [X31+696]
	086 Add X0, X31, 0
	087 Move W2, 696
	088 Move X1, X21
	089 Call 0x3EB2AC0
	090 Compare X22, 0
	091 JumpIfEqual {157}
	092 Add X0, X22, 16
	093 Add X1, X31, 0
	094 Move W2, 696
	095 Call 0x3EB2AC0
	096 Move [X22+712], X20
	097 Move [X22+720], W19
	098 Add X0, X31, 704
	099 Move W1, W31
	100 Move X2, X31
	101 Call RenderGraphBuilder.AllowPassCulling, X0, X1
	102 Move X21, 0x70A000
	103 Move X21, [X21+3600]
	104 Move X8, [X21]
	105 Move W9, [X8+224]
	106 Compare W9, 0
	107 JumpIfNotEqual {111}
	108 Move X0, X8
	109 Call 0x1C17DFC
	110 Move X8, [X21]
	111 Move X9, [X8+184]
	112 Move X19, [X9+32]
	113 Compare X19, 0
	114 JumpIfNotEqual {137}
	115 Move W9, [X8+224]
	116 Compare W9, 0
	117 JumpIfNotEqual {121}
	118 Move X0, X8
	119 Call 0x1C17DFC
	120 Move X8, [X21]
	121 Move X9, 0x70A000
	122 Move X8, [X8+184]
	123 Move X9, [X9+3672]
	124 Move X20, [X8]
	125 Move X0, [X9]
	126 Call 0x1C17F10
	127 Move X8, 0x70A000
	128 Move X8, [X8+3696]
	129 Move X19, X0
	130 Move X2, [X8]
	131 Move X1, X20
	132 Move X3, X31
	133 Call 0x25C88AC, X0, X1, X2
	134 Move X8, [X21]
	135 Move X8, [X8+184]
	136 Move [X8+32], X19
	137 Move X8, 0x70A000
	138 Move X8, [X8+3680]
	139 Move X2, [X8]
	140 Add X0, X31, 704
	141 Move X1, X19
	142 Call 0x224207C, X0, X1
	143 Add X0, X31, 704
	144 Move X1, X31
	145 Call RenderGraphBuilder.Dispose, X0
	146 Add X31, X31, 752
	147 Move X20, [X31+48]
	148 Move X19, [X31+56]
	149 Move X22, [X31+32]
	150 Move X21, [X31+40]
	151 Move X24, [X31+16]
	152 Move X23, [X31+24]
	153 Move X29, [X31+64]
	154 Move X30, [X31+72]
	155 Return 
	156 Call 0x1C17F20
	157 Call 0x1C17F20
	158 Move X19, X0
	159 NotImplemented "Instruction CMP not yet implemented."
	160 Move X0, X19
	161 Call 0x3EB2AD0
	162 Move X20, [X0]
	163 Call 0x3EB2AE0
	164 Add X0, X31, 704
	165 Move X1, X31
	166 Call RenderGraphBuilder.Dispose, X0
	167 Compare X20, 0
	168 JumpIfEqual {146}
	169 Move X0, X20
	170 Call 0x1C17F18
	171 Move X20, X31
	172 Move X19, X0
	173 Add X0, X31, 704
	174 Move X1, X31
	175 Call RenderGraphBuilder.Dispose, X0
	176 Compare X20, 0
	177 JumpIfNotEqual {180}
	178 Move X0, X19
	179 Call 0x1D2D690
	180 Move X0, X20
	181 Call 0x1C17F18
	182 Call 0x1991590

Method: System.Void BeginRenderGraphXRRendering(UnityEngine.Experimental.Rendering.RenderGraphModule.RenderGraph renderGraph, ref UnityEngine.Rendering.Universal.RenderingData renderingData)

Disassembly:
	0x03A4CFD4 CBNZ W27, 0x3A4D688
	0x03A4CFD8 ADRP X24, 0x709000
	0x03A4CFDC LDR X24, [X24 + 0xF08]
	0x03A4CFE0 LDR X0, [X24]
	0x03A4CFE4 LDR W8, [X0 + 0xE0]
	0x03A4CFE8 CBNZ W8, 0x3A4CFF4
	0x03A4CFEC BL 0x1C16DFC
	0x03A4CFF0 LDR X0, [X24]
	0x03A4CFF4 LDR X8, [X0 + 0xB8]
	0x03A4CFF8 LDR X2, [X8]
	0x03A4CFFC STRB W31, [X31 + 0x380]
	0x03A4D000 ADD X0, X31, 0x380
	0x03A4D004 MOV X1, X31
	0x03A4D008 MOV X3, X31
	0x03A4D00C BL 0x39B1DB0
	0x03A4D010 LDRB W8, [X31 + 0x380]
	0x03A4D014 STRB W8, [X31 + 0x338]
	0x03A4D018 LDR X0, [X20 + 0x100]
	0x03A4D01C CBZ X0, 0x3A4D73C
	0x03A4D020 ADRP X8, 0x708000
	0x03A4D024 LDR X8, [X8 + 0xEF0]
	0x03A4D028 LDR X1, [X8]
	0x03A4D02C ADD X8, X31, 0x380
	0x03A4D030 BL 0x301CB58
	0x03A4D034 LDR V0, [X25 + 0xC]
	0x03A4D038 LDR X8, [X31 + 0x390]
	0x03A4D03C ADRP X24, 0x708000
	0x03A4D040 ADRP X27, 0x708000
	0x03A4D044 LDR X24, [X24 + 0xEE0]
	0x03A4D048 LDR X27, [X27 + 0xED8]
	0x03A4D04C STR V0, [X25 + 0x6]
	0x03A4D050 STR X8, [X31 + 0x330]
	0x03A4D054 ADD X28, X21, 0xF0
	0x03A4D058 LDR X1, [X24]
	0x03A4D05C ADD X0, X31, 0x320
	0x03A4D060 BL 0x2BC4350
	0x03A4D064 TBZ X0, 0x0, 0x3A4D0BC
	0x03A4D068 LDP V2, V0, [X28 + 0x10]
	0x03A4D06C LDR W8, [X28 + 0x30]
	0x03A4D070 LDR V1, [X28]
	0x03A4D074 LDR X0, [X31 + 0x330]
	0x03A4D078 STP V2, V0, [X25 + 0x10]
	0x03A4D07C STR W8, [X31 + 0x2F0]
	0x03A4D080 STR V1, [X25]
	0x03A4D084 CBZ X0, 0x3A4D71C
	0x03A4D088 LDR X8, [X0]
	0x03A4D08C LDP V0, V1, [X25]
	0x03A4D090 LDR V2, [X25 + 0x2]
	0x03A4D094 LDR W9, [X31 + 0x2F0]
	0x03A4D098 LDR X10, [X8 + 0x198]
	0x03A4D09C STP V0, V1, [X25 + 0xC0]
	0x03A4D0A0 STR V2, [X25 + 0xE]
	0x03A4D0A4 STR W9, [X31 + 0x3B0]
	0x03A4D0A8 LDR X3, [X8 + 0x1A0]
	0x03A4D0AC ADD X2, X31, 0x380
	0x03A4D0B0 MOV X1, X19
	0x03A4D0B4 BLR X10
	0x03A4D0B8 B 0x3A4D058
	0x03A4D0BC MOV X25, X31
	0x03A4D0C0 LDR X1, [X27]
	0x03A4D0C4 ADRP X28, 0x703000
	0x03A4D0C8 LDR X28, [X28 + 0xD20]
	0x03A4D0CC ADD X0, X31, 0x320
	0x03A4D0D0 BL 0x2BC434C
	0x03A4D0D4 ADRP X8, 0x703000
	0x03A4D0D8 LDR X8, [X8 + 0xC80]
	0x03A4D0DC CBNZ X25, 0x3A4D748
	0x03A4D0E0 LDR X0, [X8]
	0x03A4D0E4 LDR W8, [X0 + 0xE0]
	0x03A4D0E8 CBNZ W8, 0x3A4D0F0
	0x03A4D0EC BL 0x1C16DFC
	0x03A4D0F0 ADD X0, X31, 0x378
	0x03A4D0F4 MOV X1, X19
	0x03A4D0F8 MOV X2, X31
	0x03A4D0FC BL 0x3C58FE4
	0x03A4D100 MOV X0, X19
	0x03A4D104 MOV X1, X31
	0x03A4D108 BL 0x3C4C310
	0x03A4D10C MOV X25, X31
	0x03A4D110 MOVZ W27, 0x9
	0x03A4D114 ADD X0, X31, 0x338
	0x03A4D118 MOV X1, X31
	0x03A4D11C BL 0x39B1DB4
	0x03A4D120 CBNZ X25, 0x3A4D740
	0x03A4D124 CMP W27, 0x9
	0x03A4D128 B.EQ 0x3A4D130
	0x03A4D12C CBNZ W27, 0x3A4D688
	0x03A4D130 MOV X0, X20
	0x03A4D134 MOV X1, X22
	0x03A4D138 MOV W2, W31
	0x03A4D13C BL 0x3A45D78
	0x03A4D140 LDR X1, [X20 + 0x100]
	0x03A4D144 ADD X0, X31, 0x340
	0x03A4D148 MOV X2, X31
	0x03A4D14C BL 0x3A53400
	0x03A4D150 LDR X0, [X26]
	0x03A4D154 LDR W8, [X0 + 0xE0]
	0x03A4D158 CBNZ W8, 0x3A4D164
	0x03A4D15C BL 0x1C16DFC
	0x03A4D160 LDR X0, [X26]
	0x03A4D164 LDR X8, [X0 + 0xB8]
	0x03A4D168 LDR X2, [X8 + 0x30]
	0x03A4D16C STRB W31, [X31 + 0x2C0]
	0x03A4D170 ADD X0, X31, 0x2C0
	0x03A4D174 MOV X1, X31
	0x03A4D178 MOV X3, X31
	0x03A4D17C BL 0x39B1DB0
	0x03A4D180 LDRB W8, [X31 + 0x2C0]
	0x03A4D184 LDR X1, [X31 + 0x378]
	0x03A4D188 STRB W8, [X31 + 0x338]
	0x03A4D18C LDR X8, [X20]
	0x03A4D190 LDP X9, X3, [X8 + 0x1E8]
	0x03A4D194 MOV X0, X20
	0x03A4D198 MOV X2, X21
	0x03A4D19C BLR X9
	0x03A4D1A0 MOV X24, X31
	0x03A4D1A4 MOVZ W27, 0xA
	0x03A4D1A8 ADD X0, X31, 0x338
	0x03A4D1AC MOV X1, X31
	0x03A4D1B0 BL 0x39B1DB4
	0x03A4D1B4 CBNZ X24, 0x3A4D750
	0x03A4D1B8 CMP W27, 0xA
	0x03A4D1BC B.EQ 0x3A4D1C4
	0x03A4D1C0 CBNZ W27, 0x3A4D664
	0x03A4D1C4 ADRP X25, 0x708000
	0x03A4D1C8 LDR X25, [X25 + 0xF00]
	0x03A4D1CC LDR X0, [X25]
	0x03A4D1D0 LDR W8, [X0 + 0xE0]
	0x03A4D1D4 CBNZ W8, 0x3A4D1E0
	0x03A4D1D8 BL 0x1C16DFC
	0x03A4D1DC LDR X0, [X25]
	0x03A4D1E0 LDR X8, [X0 + 0xB8]
	0x03A4D1E4 LDR W1, [X8]
	0x03A4D1E8 ADD X0, X31, 0x340
	0x03A4D1EC MOV X2, X31
	0x03A4D1F0 BL 0x3A53710
	0x03A4D1F4 CMP W0, 0x1
	0x03A4D1F8 B.LT 0x3A4D288
	0x03A4D1FC ADRP X24, 0x708000
	0x03A4D200 LDR X24, [X24 + 0xEF8]
	0x03A4D204 LDR X0, [X24]
	0x03A4D208 LDR W8, [X0 + 0xE0]
	0x03A4D20C CBNZ W8, 0x3A4D218
	0x03A4D210 BL 0x1C16DFC
	0x03A4D214 LDR X0, [X24]
	0x03A4D218 LDR X8, [X0 + 0xB8]
	0x03A4D21C LDR X2, [X8]
	0x03A4D220 ADD X0, X31, 0x318
	0x03A4D224 MOV X1, X31
	0x03A4D228 MOV X3, X31
	0x03A4D22C BL 0x39B1DB0

ISIL:
	001 Move [X31-48], X29
	002 Move [X31-40], X30
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Subtract X31, X31, 736
	008 Move X22, 0x997000
	009 Move X21, 0x70A000
	010 Move W8, [X22+417]
	011 Move X21, [X21+3376]
	012 Move X19, X2
	013 Move X20, X1
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {41}
	018 Move X0, 0x709000
	019 Move X0, [X0+3376]
	020 Call 0x1C17CF4
	021 Move X0, 0x709000
	022 Move X0, [X0+3712]
	023 Call 0x1C17CF4
	024 Move X0, 0x709000
	025 Move X0, [X0+3720]
	026 Call 0x1C17CF4
	027 Move X0, 0x709000
	028 Move X0, [X0+3728]
	029 Call 0x1C17CF4
	030 Move X0, 0x709000
	031 Move X0, [X0+3736]
	032 Call 0x1C17CF4
	033 Move X0, 0x709000
	034 Move X0, [X0+3600]
	035 Call 0x1C17CF4
	036 Move X0, 0x709000
	037 Move X0, [X0+3744]
	038 Call 0x1C17CF4
	039 Move W8, 1
	040 Move [X22+417], W8
	041 Move X0, [X21]
	042 NotImplemented "Instruction MOVI not yet implemented."
	043 Move [X31+704], V0
	044 Move [X31+712], V0
	045 Move [X31+696], X31
	046 Move W8, [X0+224]
	047 Compare W8, 0
	048 JumpIfNotEqual {50}
	049 Call 0x1C17DFC
	050 Compare X20, 0
	051 JumpIfEqual {140}
	052 Move X8, [X21]
	053 Move X9, 0x709000
	054 Move X10, 0x709000
	055 Add X2, X31, 696
	056 Move X8, [X8+184]
	057 Move X9, [X9+3744]
	058 Move X10, [X10+3728]
	059 Move X0, X20
	060 Move X3, [X8+120]
	061 Move X1, [X9]
	062 Move X4, [X10]
	063 Add X8, X31, 0
	064 Call 0x2241F24, X0, X1, X2, X3
	065 Move V0, [X31]
	066 Move V1, [X31+16]
	067 Move X20, [X31+696]
	068 Add X0, X31, 0
	069 Move W2, 696
	070 Move X1, X19
	071 Move [X31+704], V0
	072 Move [X31+712], V1
	073 Call 0x3EB2AC0
	074 Compare X20, 0
	075 JumpIfEqual {141}
	076 Add X0, X20, 16
	077 Add X1, X31, 0
	078 Move W2, 696
	079 Call 0x3EB2AC0
	080 Add X1, X19, 24
	081 Add X0, X20, 712
	082 Move W2, 528
	083 Call 0x3EB2B30
	084 Add X0, X31, 704
	085 Move W1, W31
	086 Move X2, X31
	087 Call RenderGraphBuilder.AllowPassCulling, X0, X1
	088 Move X21, 0x709000
	089 Move X21, [X21+3600]
	090 Move X8, [X21]
	091 Move W9, [X8+224]
	092 Compare W9, 0
	093 JumpIfNotEqual {97}
	094 Move X0, X8
	095 Call 0x1C17DFC
	096 Move X8, [X21]
	097 Move X9, [X8+184]
	098 Move X19, [X9+40]
	099 Compare X19, 0
	100 JumpIfNotEqual {123}
	101 Move W9, [X8+224]
	102 Compare W9, 0
	103 JumpIfNotEqual {107}
	104 Move X0, X8
	105 Call 0x1C17DFC
	106 Move X8, [X21]
	107 Move X9, 0x709000
	108 Move X8, [X8+184]
	109 Move X9, [X9+3712]
	110 Move X20, [X8]
	111 Move X0, [X9]
	112 Call 0x1C17F10
	113 Move X8, 0x709000
	114 Move X8, [X8+3736]
	115 Move X19, X0
	116 Move X2, [X8]
	117 Move X1, X20
	118 Move X3, X31
	119 Call 0x25C88AC, X0, X1, X2
	120 Move X8, [X21]
	121 Move X8, [X8+184]
	122 Move [X8+40], X19
	123 Move X8, 0x709000
	124 Move X8, [X8+3720]
	125 Move X2, [X8]
	126 Add X0, X31, 704
	127 Move X1, X19
	128 Call 0x224207C, X0, X1
	129 Add X0, X31, 704
	130 Move X1, X31
	131 Call RenderGraphBuilder.Dispose, X0
	132 Add X31, X31, 736
	133 Move X20, [X31+32]
	134 Move X19, [X31+40]
	135 Move X22, [X31+16]
	136 Move X21, [X31+24]
	137 Move X29, [X31+48]
	138 Move X30, [X31+56]
	139 Return 
	140 Call 0x1C17F20
	141 Call 0x1C17F20
	142 Move X19, X0
	143 NotImplemented "Instruction CMP not yet implemented."
	144 Move X0, X19
	145 Call 0x3EB2AD0
	146 Move X20, [X0]
	147 Call 0x3EB2AE0
	148 Add X0, X31, 704
	149 Move X1, X31
	150 Call RenderGraphBuilder.Dispose, X0
	151 Compare X20, 0
	152 JumpIfEqual {132}
	153 Move X0, X20
	154 Call 0x1C17F18
	155 Move X20, X31
	156 Move X19, X0
	157 Add X0, X31, 704
	158 Move X1, X31
	159 Call RenderGraphBuilder.Dispose, X0
	160 Compare X20, 0
	161 JumpIfNotEqual {164}
	162 Move X0, X19
	163 Call 0x1D2D690
	164 Move X0, X20
	165 Call 0x1C17F18
	166 Call 0x1991590

Method: System.Void EndRenderGraphXRRendering(UnityEngine.Experimental.Rendering.RenderGraphModule.RenderGraph renderGraph, ref UnityEngine.Rendering.Universal.RenderingData renderingData)

Disassembly:
	0x03A4D230 LDR X0, [X25]
	0x03A4D234 LDR W8, [X0 + 0xE0]
	0x03A4D238 CBNZ W8, 0x3A4D244
	0x03A4D23C BL 0x1C16DFC
	0x03A4D240 LDR X0, [X25]
	0x03A4D244 LDR X8, [X0 + 0xB8]
	0x03A4D248 LDR X3, [X31 + 0x378]
	0x03A4D24C LDR W1, [X8]
	0x03A4D250 ADD X2, X31, 0x340
	0x03A4D254 MOV X0, X20
	0x03A4D258 MOV X4, X21
	0x03A4D25C MOV W5, W31
	0x03A4D260 BL 0x3A4E3E8
	0x03A4D264 MOV X24, X31
	0x03A4D268 MOVZ W27, 0xB
	0x03A4D26C ADD X0, X31, 0x318
	0x03A4D270 MOV X1, X31
	0x03A4D274 BL 0x39B1DB4
	0x03A4D278 CBNZ X24, 0x3A4D768
	0x03A4D27C CMP W27, 0xB
	0x03A4D280 B.EQ 0x3A4D288
	0x03A4D284 CBNZ W27, 0x3A4D664
	0x03A4D288 LDR X0, [X26]
	0x03A4D28C LDR W8, [X0 + 0xE0]
	0x03A4D290 CBNZ W8, 0x3A4D29C
	0x03A4D294 BL 0x1C16DFC
	0x03A4D298 LDR X0, [X26]
	0x03A4D29C LDR X8, [X0 + 0xB8]
	0x03A4D2A0 LDR X2, [X8 + 0x38]
	0x03A4D2A4 STRB W31, [X31 + 0x2C0]
	0x03A4D2A8 ADD X0, X31, 0x2C0
	0x03A4D2AC MOV X1, X31
	0x03A4D2B0 MOV X3, X31
	0x03A4D2B4 BL 0x39B1DB0
	0x03A4D2B8 LDRB W8, [X31 + 0x2C0]
	0x03A4D2BC LDR X1, [X31 + 0x378]
	0x03A4D2C0 STRB W8, [X31 + 0x338]
	0x03A4D2C4 MOV X0, X20
	0x03A4D2C8 MOV X2, X22
	0x03A4D2CC MOV X3, X23
	0x03A4D2D0 MOV X4, X19
	0x03A4D2D4 BL 0x3A4CBAC
	0x03A4D2D8 LDR X0, [X29]
	0x03A4D2DC LDR W8, [X0 + 0xE0]
	0x03A4D2E0 CBNZ W8, 0x3A4D2E8
	0x03A4D2E4 BL 0x1C16DFC
	0x03A4D2E8 MOV X0, X19
	0x03A4D2EC MOV V0.16B, V8.16B
	0x03A4D2F0 MOV V1.16B, V9.16B
	0x03A4D2F4 MOV V2.16B, V10.16B
	0x03A4D2F8 BL 0x3A4AB50
	0x03A4D2FC MOV X23, X31
	0x03A4D300 MOVZ W27, 0xC
	0x03A4D304 ADD X0, X31, 0x338
	0x03A4D308 MOV X1, X31
	0x03A4D30C BL 0x39B1DB4
	0x03A4D310 CBNZ X23, 0x3A4D760
	0x03A4D314 CMP W27, 0xC
	0x03A4D318 B.EQ 0x3A4D320
	0x03A4D31C CBNZ W27, 0x3A4D664
	0x03A4D320 ADRP X8, 0x703000
	0x03A4D324 LDR X8, [X8 + 0xC80]
	0x03A4D328 LDR X0, [X8]
	0x03A4D32C LDR W8, [X0 + 0xE0]
	0x03A4D330 CBNZ W8, 0x3A4D338
	0x03A4D334 BL 0x1C16DFC
	0x03A4D338 ADD X0, X31, 0x378
	0x03A4D33C MOV X1, X19
	0x03A4D340 MOV X2, X31
	0x03A4D344 BL 0x3C58FE4
	0x03A4D348 MOV X0, X19
	0x03A4D34C MOV X1, X31
	0x03A4D350 BL 0x3C4C310
	0x03A4D354 LDR X2, [X31 + 0x378]
	0x03A4D358 MOV X1, X19
	0x03A4D35C MOV X3, X22
	0x03A4D360 BL 0x3A4E57C
	0x03A4D364 LDR X0, [X25]
	0x03A4D368 LDR W8, [X0 + 0xE0]
	0x03A4D36C CBNZ W8, 0x3A4D378
	0x03A4D370 BL 0x1C16DFC
	0x03A4D374 LDR X0, [X25]
	0x03A4D378 LDR X8, [X0 + 0xB8]
	0x03A4D37C LDR W1, [X8 + 0x4]
	0x03A4D380 ADD X0, X31, 0x340
	0x03A4D384 MOV X2, X31
	0x03A4D388 BL 0x3A53710
	0x03A4D38C CMP W0, 0x1
	0x03A4D390 B.LT 0x3A4D420
	0x03A4D394 ADRP X23, 0x708000
	0x03A4D398 LDR X23, [X23 + 0xEF8]
	0x03A4D39C LDR X0, [X23]
	0x03A4D3A0 LDR W8, [X0 + 0xE0]
	0x03A4D3A4 CBNZ W8, 0x3A4D3B0
	0x03A4D3A8 BL 0x1C16DFC
	0x03A4D3AC LDR X0, [X23]
	0x03A4D3B0 LDR X8, [X0 + 0xB8]
	0x03A4D3B4 LDR X2, [X8 + 0x8]
	0x03A4D3B8 ADD X0, X31, 0x310
	0x03A4D3BC MOV X1, X31
	0x03A4D3C0 MOV X3, X31
	0x03A4D3C4 BL 0x39B1DB0
	0x03A4D3C8 LDR X0, [X25]
	0x03A4D3CC LDR W8, [X0 + 0xE0]
	0x03A4D3D0 CBNZ W8, 0x3A4D3DC
	0x03A4D3D4 BL 0x1C16DFC
	0x03A4D3D8 LDR X0, [X25]
	0x03A4D3DC LDR X8, [X0 + 0xB8]
	0x03A4D3E0 LDR X3, [X31 + 0x378]
	0x03A4D3E4 LDR W1, [X8 + 0x4]
	0x03A4D3E8 ADD X2, X31, 0x340
	0x03A4D3EC MOV X0, X20
	0x03A4D3F0 MOV X4, X21
	0x03A4D3F4 MOV W5, W31
	0x03A4D3F8 BL 0x3A4E3E8
	0x03A4D3FC MOV X23, X31
	0x03A4D400 MOVZ W27, 0xD
	0x03A4D404 ADD X0, X31, 0x310
	0x03A4D408 MOV X1, X31
	0x03A4D40C BL 0x39B1DB4
	0x03A4D410 CBNZ X23, 0x3A4D774
	0x03A4D414 CMP W27, 0xD
	0x03A4D418 B.EQ 0x3A4D420
	0x03A4D41C CBNZ W27, 0x3A4D664
	0x03A4D420 LDR X0, [X25]
	0x03A4D424 LDR W8, [X0 + 0xE0]
	0x03A4D428 CBNZ W8, 0x3A4D434
	0x03A4D42C BL 0x1C16DFC
	0x03A4D430 LDR X0, [X25]
	0x03A4D434 LDR X8, [X0 + 0xB8]
	0x03A4D438 LDR W1, [X8 + 0x8]
	0x03A4D43C ADD X0, X31, 0x340
	0x03A4D440 MOV X2, X31
	0x03A4D444 BL 0x3A53710
	0x03A4D448 CMP W0, 0x1
	0x03A4D44C B.LT 0x3A4D4DC
	0x03A4D450 ADRP X23, 0x708000
	0x03A4D454 LDR X23, [X23 + 0xEF8]
	0x03A4D458 LDR X0, [X23]
	0x03A4D45C LDR W8, [X0 + 0xE0]
	0x03A4D460 CBNZ W8, 0x3A4D46C
	0x03A4D464 BL 0x1C16DFC
	0x03A4D468 LDR X0, [X23]
	0x03A4D46C LDR X8, [X0 + 0xB8]
	0x03A4D470 LDR X2, [X8 + 0x10]
	0x03A4D474 ADD X0, X31, 0x308
	0x03A4D478 MOV X1, X31
	0x03A4D47C MOV X3, X31
	0x03A4D480 BL 0x39B1DB0
	0x03A4D484 LDR X0, [X25]
	0x03A4D488 LDR W8, [X0 + 0xE0]

ISIL:
	001 Move [X31-48], X29
	002 Move [X31-40], X30
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Subtract X31, X31, 736
	008 Move X22, 0x996000
	009 Move X21, 0x709000
	010 Move W8, [X22+418]
	011 Move X21, [X21+3376]
	012 Move X19, X2
	013 Move X20, X1
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {41}
	018 Move X0, 0x709000
	019 Move X0, [X0+3376]
	020 Call 0x1C17CF4
	021 Move X0, 0x709000
	022 Move X0, [X0+3752]
	023 Call 0x1C17CF4
	024 Move X0, 0x709000
	025 Move X0, [X0+3760]
	026 Call 0x1C17CF4
	027 Move X0, 0x709000
	028 Move X0, [X0+3768]
	029 Call 0x1C17CF4
	030 Move X0, 0x709000
	031 Move X0, [X0+3776]
	032 Call 0x1C17CF4
	033 Move X0, 0x709000
	034 Move X0, [X0+3600]
	035 Call 0x1C17CF4
	036 Move X0, 0x709000
	037 Move X0, [X0+3784]
	038 Call 0x1C17CF4
	039 Move W8, 1
	040 Move [X22+418], W8
	041 Move X0, [X21]
	042 NotImplemented "Instruction MOVI not yet implemented."
	043 Move [X31+704], V0
	044 Move [X31+712], V0
	045 Move [X31+696], X31
	046 Move W8, [X0+224]
	047 Compare W8, 0
	048 JumpIfNotEqual {50}
	049 Call 0x1C17DFC
	050 Compare X20, 0
	051 JumpIfEqual {140}
	052 Move X8, [X21]
	053 Move X9, 0x709000
	054 Move X10, 0x709000
	055 Add X2, X31, 696
	056 Move X8, [X8+184]
	057 Move X9, [X9+3784]
	058 Move X10, [X10+3768]
	059 Move X0, X20
	060 Move X3, [X8+128]
	061 Move X1, [X9]
	062 Move X4, [X10]
	063 Add X8, X31, 0
	064 Call 0x2241F24, X0, X1, X2, X3
	065 Move V0, [X31]
	066 Move V1, [X31+16]
	067 Move X20, [X31+696]
	068 Add X0, X31, 0
	069 Move W2, 696
	070 Move X1, X19
	071 Move [X31+704], V0
	072 Move [X31+712], V1
	073 Call 0x3EB2AC0
	074 Compare X20, 0
	075 JumpIfEqual {141}
	076 Add X0, X20, 16
	077 Add X1, X31, 0
	078 Move W2, 696
	079 Call 0x3EB2AC0
	080 Add X1, X19, 24
	081 Add X0, X20, 712
	082 Move W2, 528
	083 Call 0x3EB2B30
	084 Add X0, X31, 704
	085 Move W1, W31
	086 Move X2, X31
	087 Call RenderGraphBuilder.AllowPassCulling, X0, X1
	088 Move X21, 0x709000
	089 Move X21, [X21+3600]
	090 Move X8, [X21]
	091 Move W9, [X8+224]
	092 Compare W9, 0
	093 JumpIfNotEqual {97}
	094 Move X0, X8
	095 Call 0x1C17DFC
	096 Move X8, [X21]
	097 Move X9, [X8+184]
	098 Move X19, [X9+48]
	099 Compare X19, 0
	100 JumpIfNotEqual {123}
	101 Move W9, [X8+224]
	102 Compare W9, 0
	103 JumpIfNotEqual {107}
	104 Move X0, X8
	105 Call 0x1C17DFC
	106 Move X8, [X21]
	107 Move X9, 0x709000
	108 Move X8, [X8+184]
	109 Move X9, [X9+3752]
	110 Move X20, [X8]
	111 Move X0, [X9]
	112 Call 0x1C17F10
	113 Move X8, 0x709000
	114 Move X8, [X8+3776]
	115 Move X19, X0
	116 Move X2, [X8]
	117 Move X1, X20
	118 Move X3, X31
	119 Call 0x25C88AC, X0, X1, X2
	120 Move X8, [X21]
	121 Move X8, [X8+184]
	122 Move [X8+48], X19
	123 Move X8, 0x709000
	124 Move X8, [X8+3760]
	125 Move X2, [X8]
	126 Add X0, X31, 704
	127 Move X1, X19
	128 Call 0x224207C, X0, X1
	129 Add X0, X31, 704
	130 Move X1, X31
	131 Call RenderGraphBuilder.Dispose, X0
	132 Add X31, X31, 736
	133 Move X20, [X31+32]
	134 Move X19, [X31+40]
	135 Move X22, [X31+16]
	136 Move X21, [X31+24]
	137 Move X29, [X31+48]
	138 Move X30, [X31+56]
	139 Return 
	140 Call 0x1C17F20
	141 Call 0x1C17F20
	142 Move X19, X0
	143 NotImplemented "Instruction CMP not yet implemented."
	144 Move X0, X19
	145 Call 0x3EB2AD0
	146 Move X20, [X0]
	147 Call 0x3EB2AE0
	148 Add X0, X31, 704
	149 Move X1, X31
	150 Call RenderGraphBuilder.Dispose, X0
	151 Compare X20, 0
	152 JumpIfEqual {132}
	153 Move X0, X20
	154 Call 0x1C17F18
	155 Move X20, X31
	156 Move X19, X0
	157 Add X0, X31, 704
	158 Move X1, X31
	159 Call RenderGraphBuilder.Dispose, X0
	160 Compare X20, 0
	161 JumpIfNotEqual {164}
	162 Move X0, X19
	163 Call 0x1D2D690
	164 Move X0, X20
	165 Call 0x1C17F18
	166 Call 0x1991590

Method: System.Void RecordRenderGraph(UnityEngine.Experimental.Rendering.RenderGraphModule.RenderGraph renderGraph, UnityEngine.Rendering.ScriptableRenderContext context, ref UnityEngine.Rendering.Universal.RenderingData renderingData)

Disassembly:
	0x03A4D48C CBNZ W8, 0x3A4D498
	0x03A4D490 BL 0x1C16DFC
	0x03A4D494 LDR X0, [X25]
	0x03A4D498 LDR X8, [X0 + 0xB8]
	0x03A4D49C LDR X3, [X31 + 0x378]
	0x03A4D4A0 LDR W1, [X8 + 0x8]
	0x03A4D4A4 ADD X2, X31, 0x340
	0x03A4D4A8 MOV X0, X20
	0x03A4D4AC MOV X4, X21
	0x03A4D4B0 MOV W5, W31
	0x03A4D4B4 BL 0x3A4E3E8
	0x03A4D4B8 MOV X23, X31
	0x03A4D4BC MOVZ W27, 0xE
	0x03A4D4C0 ADD X0, X31, 0x308
	0x03A4D4C4 MOV X1, X31
	0x03A4D4C8 BL 0x39B1DB4
	0x03A4D4CC CBNZ X23, 0x3A4D77C
	0x03A4D4D0 CMP W27, 0xE
	0x03A4D4D4 B.EQ 0x3A4D4DC
	0x03A4D4D8 CBNZ W27, 0x3A4D664
	0x03A4D4DC LDR X0, [X21 + 0x190]
	0x03A4D4E0 CBZ X0, 0x3A4D770
	0x03A4D4E4 MOV X1, X31
	0x03A4D4E8 BL 0x3984C98
	0x03A4D4EC TBZ X0, 0x0, 0x3A4D504
	0x03A4D4F0 MOV X0, X22
	0x03A4D4F4 MOV X1, X31
	0x03A4D4F8 BL 0x3A8F13C
	0x03A4D4FC CBZ X0, 0x3A4D78C
	0x03A4D500 STRB W31, [X0 + 0x6C9]
	0x03A4D504 LDR X0, [X25]
	0x03A4D508 LDR W8, [X0 + 0xE0]
	0x03A4D50C CBNZ W8, 0x3A4D518
	0x03A4D510 BL 0x1C16DFC
	0x03A4D514 LDR X0, [X25]
	0x03A4D518 LDR X8, [X0 + 0xB8]
	0x03A4D51C LDR W1, [X8 + 0xC]
	0x03A4D520 ADD X0, X31, 0x340
	0x03A4D524 MOV X2, X31
	0x03A4D528 BL 0x3A53710
	0x03A4D52C CMP W0, 0x1
	0x03A4D530 B.LT 0x3A4D5B0
	0x03A4D534 ADRP X23, 0x708000
	0x03A4D538 LDR X23, [X23 + 0xEF8]
	0x03A4D53C LDR X0, [X23]
	0x03A4D540 LDR W8, [X0 + 0xE0]
	0x03A4D544 CBNZ W8, 0x3A4D550
	0x03A4D548 BL 0x1C16DFC
	0x03A4D54C LDR X0, [X23]
	0x03A4D550 LDR X8, [X0 + 0xB8]
	0x03A4D554 LDR X2, [X8 + 0x18]
	0x03A4D558 ADD X0, X31, 0x300
	0x03A4D55C MOV X1, X31
	0x03A4D560 MOV X3, X31
	0x03A4D564 BL 0x39B1DB0
	0x03A4D568 LDR X0, [X25]
	0x03A4D56C LDR W8, [X0 + 0xE0]
	0x03A4D570 CBNZ W8, 0x3A4D57C
	0x03A4D574 BL 0x1C16DFC
	0x03A4D578 LDR X0, [X25]
	0x03A4D57C LDR X8, [X0 + 0xB8]
	0x03A4D580 LDR X3, [X31 + 0x378]
	0x03A4D584 LDR W1, [X8 + 0xC]
	0x03A4D588 ADD X2, X31, 0x340
	0x03A4D58C MOV X0, X20
	0x03A4D590 MOV X4, X21
	0x03A4D594 MOV W5, W31
	0x03A4D598 BL 0x3A4E3E8
	0x03A4D59C MOV X23, X31
	0x03A4D5A0 ADD X0, X31, 0x300
	0x03A4D5A4 MOV X1, X31
	0x03A4D5A8 BL 0x39B1DB4
	0x03A4D5AC CBNZ X23, 0x3A4D784
	0x03A4D5B0 LDR X2, [X31 + 0x378]
	0x03A4D5B4 MOV X1, X19
	0x03A4D5B8 MOV X3, X22
	0x03A4D5BC BL 0x3A4E710
	0x03A4D5C0 LDR X22, [X31 + 0x378]
	0x03A4D5C4 LDRB W23, [X21 + 0x1D8]
	0x03A4D5C8 ADD X0, X31, 0x8
	0x03A4D5CC MOVZ W2, 0x2B8
	0x03A4D5D0 MOV X1, X21
	0x03A4D5D4 BL 0x3EB1AC0
	0x03A4D5D8 ADD X3, X31, 0x8
	0x03A4D5DC MOV X0, X20
	0x03A4D5E0 MOV X1, X22
	0x03A4D5E4 MOV W2, W23
	0x03A4D5E8 BL 0x3A4E8A8
	0x03A4D5EC LDR X0, [X20 + 0x100]
	0x03A4D5F0 CBZ X0, 0x3A4D660
	0x03A4D5F4 ADRP X22, 0x707000
	0x03A4D5F8 ADRP X23, 0x6D0000
	0x03A4D5FC LDR X22, [X22 + 0x910]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0x996000
	009 Move X23, 0x709000
	010 Move W8, [X24+419]
	011 Move X23, [X23+3376]
	012 Move X19, X3
	013 Move X21, X2
	014 Move X20, X1
	015 Move X22, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {28}
	020 Move X0, 0x709000
	021 Move X0, [X0+3376]
	022 Call 0x1C17CF4
	023 Move X0, 0x708000
	024 Move X0, [X0+2248]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X24+419], W8
	028 Move X0, [X23]
	029 Move [X31+8], W31
	030 Move X24, 0x708000
	031 Move W8, [X0+224]
	032 Move X24, [X24+2248]
	033 Compare W8, 0
	034 JumpIfNotEqual {37}
	035 Call 0x1C17DFC
	036 Move X0, [X23]
	037 Move X8, [X0+184]
	038 Add X0, X31, 8
	039 Move X1, X31
	040 Move X3, X31
	041 Move X2, [X8+40]
	042 Call ProfilingScope..ctor, X0, X1, X2
	043 Move X0, [X24]
	044 Move X23, [X22+256]
	045 Move W8, [X0+224]
	046 Compare W8, 0
	047 JumpIfNotEqual {49}
	048 Call 0x1C17DFC
	049 Move X0, X23
	050 Call ScriptableRenderer.SortStable, X0
	051 Add X0, X31, 8
	052 Move X1, X31
	053 Call ProfilingScope.Dispose, X0
	054 Move X0, X22
	055 Move X1, X20
	056 Move X2, X19
	057 Call ScriptableRenderer.InitRenderGraphFrame, X0, X1, X2
	058 Move X1, X20
	059 Move X2, X19
	060 Call ScriptableRenderer.BeginRenderGraphXRRendering, X0, X1, X2
	061 Move X8, [X22]
	062 Move X0, X22
	063 Move X1, X20
	064 Move X2, X21
	065 Move X9, [X8+536]
	066 Move X4, [X8+544]
	067 Move X3, X19
	068 NotImplemented "Instruction BLR not yet implemented."
	069 Move X1, X20
	070 Move X2, X19
	071 Call ScriptableRenderer.EndRenderGraphXRRendering, X0, X1, X2
	072 Move X20, [X31+48]
	073 Move X19, [X31+56]
	074 Move X22, [X31+32]
	075 Move X21, [X31+40]
	076 Move X24, [X31+16]
	077 Move X23, [X31+24]
	078 Move X30, [X31+64]
	079 Return 
	080 NotImplemented "Instruction CMP not yet implemented."
	081 Move X24, X0
	082 Move X0, X24
	083 Call 0x3EB2AD0
	084 Move X23, [X0]
	085 Call 0x3EB2AE0
	086 Add X0, X31, 8
	087 Move X1, X31
	088 Call ProfilingScope.Dispose, X0
	089 Compare X23, 0
	090 JumpIfEqual {54}
	091 Move X0, X23
	092 Call 0x1C17F18
	093 Move X23, X31
	094 Move X24, X0
	095 Add X0, X31, 8
	096 Move X1, X31
	097 Call ProfilingScope.Dispose, X0
	098 Compare X23, 0
	099 JumpIfNotEqual {102}
	100 Move X0, X24
	101 Call 0x1D2D690
	102 Move X0, X23
	103 Call 0x1C17F18
	104 Call 0x1991590

Method: System.Void FinishRenderGraphRendering(UnityEngine.Rendering.ScriptableRenderContext context, ref UnityEngine.Rendering.Universal.RenderingData renderingData)

Disassembly:
	0x03A4D760 MOV X0, X23
	0x03A4D764 BL 0x1C16F18
	0x03A4D768 MOV X0, X24
	0x03A4D76C BL 0x1C16F18
	0x03A4D770 BL 0x1C16F20
	0x03A4D774 MOV X0, X23
	0x03A4D778 BL 0x1C16F18
	0x03A4D77C MOV X0, X23
	0x03A4D780 BL 0x1C16F18
	0x03A4D784 MOV X0, X23
	0x03A4D788 BL 0x1C16F18
	0x03A4D78C BL 0x1C16F20
	0x03A4D790 B 0x3A4D7A0
	0x03A4D794 B 0x3A4D7FC
	0x03A4D798 B 0x3A4D858
	0x03A4D79C B 0x3A4DB14
	0x03A4D7A0 MOV X24, X1
	0x03A4D7A4 MOV X28, X0
	0x03A4D7A8 CMP W24, 0x1
	0x03A4D7AC B.NE 0x3A4D7CC
	0x03A4D7B0 MOV X0, X28
	0x03A4D7B4 BL 0x3EB1AD0
	0x03A4D7B8 LDR X23, [X0]
	0x03A4D7BC BL 0x3EB1AE0

ISIL:
	001 Move [X31-48], X29
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Subtract X31, X31, 704
	007 Move X8, [X0]
	008 Move X19, X2
	009 Move X20, X0
	010 Move X9, [X8+552]
	011 Move X3, [X8+560]
	012 NotImplemented "Instruction BLR not yet implemented."
	013 Move W21, [X19+472]
	014 Add X0, X31, 8
	015 Move W2, 696
	016 Move X1, X19
	017 Call 0x3EB2AC0
	018 Add X2, X31, 8
	019 Move X0, X20
	020 Move W1, W21
	021 Call ScriptableRenderer.InternalFinishRendering, X0, X1, X2
	022 Add X31, X31, 704
	023 Move X20, [X31+32]
	024 Move X19, [X31+40]
	025 Move X30, [X31+16]
	026 Move X21, [X31+24]
	027 Move X29, [X31+48]
	028 Return 

Method: System.Void OnFinishRenderGraphRendering(UnityEngine.Rendering.ScriptableRenderContext context, ref UnityEngine.Rendering.Universal.RenderingData renderingData)

Disassembly:
	0x03A4D9F8 STR X31, [X31 + 0x3C8]

ISIL:
	001 Return 

Method: System.Void RecordCustomRenderGraphPasses(UnityEngine.Experimental.Rendering.RenderGraphModule.RenderGraph renderGraph, UnityEngine.Rendering.ScriptableRenderContext context, ref UnityEngine.Rendering.Universal.RenderingData renderingData, UnityEngine.Rendering.Universal.RenderPassEvent injectionPoint)

Disassembly:
	0x03A4D9FC ADD X0, X31, 0x338
	0x03A4DA00 MOV X1, X31
	0x03A4DA04 BL 0x39B1DB4
	0x03A4DA08 LDR X8, [X31 + 0x3C8]
	0x03A4DA0C CBZ X8, 0x3A4DB1C
	0x03A4DA10 LDR X0, [X31 + 0x3C8]
	0x03A4DA14 BL 0x1C16F18
	0x03A4DA18 MOV X24, X1
	0x03A4DA1C MOV X28, X0
	0x03A4DA20 B 0x3A4D9FC
	0x03A4DA24 B 0x3A4DB14
	0x03A4DA28 B 0x3A4DAEC
	0x03A4DA2C B 0x3A4DAEC
	0x03A4DA30 B 0x3A4DB14
	0x03A4DA34 B 0x3A4DB14
	0x03A4DA38 B 0x3A4DA6C
	0x03A4DA3C B 0x3A4DA6C
	0x03A4DA40 B 0x3A4DA6C
	0x03A4DA44 B 0x3A4DAEC
	0x03A4DA48 B 0x3A4DAEC
	0x03A4DA4C B 0x3A4DB14
	0x03A4DA50 B 0x3A4DA6C
	0x03A4DA54 B 0x3A4DAEC
	0x03A4DA58 B 0x3A4DAEC
	0x03A4DA5C B 0x3A4DAEC
	0x03A4DA60 B 0x3A4DAEC
	0x03A4DA64 B 0x3A4DAEC
	0x03A4DA68 B 0x3A4DAEC
	0x03A4DA6C MOV X24, X1
	0x03A4DA70 MOV X28, X0
	0x03A4DA74 B 0x3A4DBAC
	0x03A4DA78 B 0x3A4DAEC
	0x03A4DA7C MOV X24, X1
	0x03A4DA80 CMP W24, 0x1
	0x03A4DA84 MOV X28, X0
	0x03A4DA88 B.NE 0x3A4DAB4
	0x03A4DA8C MOV X0, X28
	0x03A4DA90 BL 0x3EB1AD0
	0x03A4DA94 LDR X8, [X0]
	0x03A4DA98 STR X8, [X31 + 0x3C8]
	0x03A4DA9C BL 0x3EB1AE0
	0x03A4DAA0 ADRP X28, 0x703000
	0x03A4DAA4 LDR X24, [X31 + 0x3C8]
	0x03A4DAA8 LDR X28, [X28 + 0xD20]
	0x03A4DAAC MOV W27, W31
	0x03A4DAB0 B 0x3A4CFBC
	0x03A4DAB4 STR X31, [X31 + 0x3C8]
	0x03A4DAB8 ADD X0, X31, 0x338
	0x03A4DABC MOV X1, X31
	0x03A4DAC0 BL 0x39B1DB4
	0x03A4DAC4 LDR X8, [X31 + 0x3C8]
	0x03A4DAC8 CBZ X8, 0x3A4DBE8
	0x03A4DACC LDR X0, [X31 + 0x3C8]
	0x03A4DAD0 BL 0x1C16F18
	0x03A4DAD4 MOV X24, X1
	0x03A4DAD8 MOV X28, X0
	0x03A4DADC B 0x3A4DAB8
	0x03A4DAE0 B 0x3A4DAEC
	0x03A4DAE4 B 0x3A4DAEC
	0x03A4DAE8 B 0x3A4DAEC
	0x03A4DAEC MOV X24, X1
	0x03A4DAF0 MOV X28, X0
	0x03A4DAF4 B 0x3A4DBE8
	0x03A4DAF8 B 0x3A4DB14
	0x03A4DAFC B 0x3A4DB14
	0x03A4DB00 B 0x3A4DB14
	0x03A4DB04 B 0x3A4DB14
	0x03A4DB08 B 0x3A4DB14
	0x03A4DB0C B 0x3A4DB14
	0x03A4DB10 B 0x3A4DB14
	0x03A4DB14 MOV X24, X1
	0x03A4DB18 MOV X28, X0
	0x03A4DB1C CMP W24, 0x1
	0x03A4DB20 B.NE 0x3A4DB44
	0x03A4DB24 MOV X0, X28
	0x03A4DB28 BL 0x3EB1AD0
	0x03A4DB2C LDR X20, [X0]
	0x03A4DB30 BL 0x3EB1AE0
	0x03A4DB34 ADRP X28, 0x703000
	0x03A4DB38 LDR X28, [X28 + 0xD20]
	0x03A4DB3C MOV W27, W31
	0x03A4DB40 B 0x3A4D674
	0x03A4DB44 MOV X20, X31
	0x03A4DB48 ADD X0, X31, 0x340
	0x03A4DB4C MOV X1, X31
	0x03A4DB50 BL 0x3A536BC
	0x03A4DB54 CBZ X20, 0x3A4DBE8
	0x03A4DB58 MOV X0, X20
	0x03A4DB5C BL 0x1C16F18
	0x03A4DB60 MOV X24, X1
	0x03A4DB64 MOV X28, X0
	0x03A4DB68 B 0x3A4DB48
	0x03A4DB6C B 0x3A4DB74
	0x03A4DB70 B 0x3A4DB74
	0x03A4DB74 MOV X24, X1
	0x03A4DB78 MOV X28, X0
	0x03A4DB7C CMP W24, 0x1
	0x03A4DB80 B.NE 0x3A4DB98
	0x03A4DB84 MOV X0, X28
	0x03A4DB88 BL 0x3EB1AD0
	0x03A4DB8C LDR X25, [X0]
	0x03A4DB90 BL 0x3EB1AE0
	0x03A4DB94 B 0x3A4D0C0
	0x03A4DB98 MOV X25, X31
	0x03A4DB9C LDR X1, [X27]
	0x03A4DBA0 ADD X0, X31, 0x320
	0x03A4DBA4 BL 0x2BC434C
	0x03A4DBA8 CBNZ X25, 0x3A4DC28

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+32], X30
	003 Move [X31+48], X24
	004 Move [X31+56], X23
	005 Move [X31+64], X22
	006 Move [X31+72], X21
	007 Move [X31+80], X20
	008 Move [X31+88], X19
	009 Move X24, 0x996000
	010 Move X23, 0x707000
	011 Move W8, [X24+420]
	012 Move X23, [X23+4080]
	013 Move W19, W4
	014 Move X20, X3
	015 Move X21, X1
	016 Move X22, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {38}
	021 Move X0, 0x709000
	022 Move X0, [X0+3800]
	023 Call 0x1C17CF4
	024 Move X0, 0x709000
	025 Move X0, [X0+3808]
	026 Call 0x1C17CF4
	027 Move X0, 0x709000
	028 Move X0, [X0+3816]
	029 Call 0x1C17CF4
	030 Move X0, 0x709000
	031 Move X0, [X0+3824]
	032 Call 0x1C17CF4
	033 Move X0, 0x707000
	034 Move X0, [X0+4080]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X24+420], W8
	038 Move X0, [X23]
	039 Move [X31+8], X31
	040 Move [X31+16], X31
	041 Move [X31+24], X31
	042 Move W8, [X0+224]
	043 Compare W8, 0
	044 JumpIfNotEqual {46}
	045 Call 0x1C17DFC
	046 Move W0, W19
	047 Call ScriptableRenderPass.GetRenderPassEventRange, X0
	048 Move X9, [X22+256]
	049 Compare X9, 0
	050 JumpIfEqual {95}
	051 Move X8, 0x709000
	052 Move X8, [X8+3824]
	053 Move X23, 0x709000
	054 Move X22, 0x709000
	055 Add W24, W0, W19
	056 Move X1, [X8]
	057 Move X23, [X23+3808]
	058 Move X22, [X22+3800]
	059 Add X8, X31, 8
	060 Move X0, X9
	061 Call List`1<Object>.GetEnumerator, X0
	062 Move X1, [X23]
	063 Add X0, X31, 8
	064 Call Enumerator<Object>.MoveNext, X0
	065 Move TEMP, X0
	066 And TEMP, TEMP, 1
	067 Compare TEMP, 1
	068 JumpIfNotEqual {82}
	069 Move X8, [X31+24]
	070 Compare X8, 0
	071 JumpIfEqual {94}
	072 Move W9, [X8+16]
	073 NotImplemented "Instruction CMP not yet implemented."
	074 NotImplemented "Instruction CMP not yet implemented."
	075 Move X9, [X8]
	076 Move X10, [X9+472]
	077 Move X3, [X9+480]
	078 Move X0, X8
	079 Move X1, X21
	080 Move X2, X20
	081 NotImplemented "Instruction BLR not yet implemented."
	082 Move X1, [X22]
	083 Add X0, X31, 8
	084 Call Enumerator<Object>.Dispose, X0
	085 Move X20, [X31+80]
	086 Move X19, [X31+88]
	087 Move X22, [X31+64]
	088 Move X21, [X31+72]
	089 Move X24, [X31+48]
	090 Move X23, [X31+56]
	091 Move X30, [X31+32]
	092 Add X31, X31, 96
	093 Return 
	094 Call 0x1C17F20
	095 Call 0x1C17F20
	096 Move X19, X0
	097 NotImplemented "Instruction CMP not yet implemented."
	098 Move X0, X19
	099 Call 0x3EB2AD0
	100 Move X20, [X0]
	101 Call 0x3EB2AE0
	102 Move X1, [X22]
	103 Add X0, X31, 8
	104 Call Enumerator<Object>.Dispose, X0
	105 Compare X20, 0
	106 JumpIfEqual {85}
	107 Move X0, X20
	108 Call 0x1C17F18
	109 Move X20, X31
	110 Move X19, X0
	111 Move X1, [X22]
	112 Add X0, X31, 8
	113 Call Enumerator<Object>.Dispose, X0
	114 Compare X20, 0
	115 JumpIfNotEqual {118}
	116 Move X0, X19
	117 Call 0x1D2D690
	118 Move X0, X20
	119 Call 0x1C17F18
	120 Call 0x1991590

Method: System.Void SetPerCameraProperties(UnityEngine.Rendering.ScriptableRenderContext context, ref UnityEngine.Rendering.Universal.CameraData cameraData, UnityEngine.Camera camera, UnityEngine.Rendering.CommandBuffer cmd)

Disassembly:
	0x03A4DBAC CMP W24, 0x1
	0x03A4DBB0 B.NE 0x3A4DBD4
	0x03A4DBB4 MOV X0, X28
	0x03A4DBB8 BL 0x3EB1AD0
	0x03A4DBBC LDR X25, [X0]
	0x03A4DBC0 BL 0x3EB1AE0
	0x03A4DBC4 ADRP X28, 0x703000
	0x03A4DBC8 LDR X28, [X28 + 0xD20]
	0x03A4DBCC MOV W27, W31
	0x03A4DBD0 B 0x3A4D114
	0x03A4DBD4 MOV X25, X31
	0x03A4DBD8 ADD X0, X31, 0x338
	0x03A4DBDC MOV X1, X31
	0x03A4DBE0 BL 0x39B1DB4
	0x03A4DBE4 CBNZ X25, 0x3A4DC30
	0x03A4DBE8 CMP W24, 0x1
	0x03A4DBEC B.NE 0x3A4DC20
	0x03A4DBF0 MOV X0, X28
	0x03A4DBF4 BL 0x3EB1AD0
	0x03A4DBF8 LDR X20, [X0]
	0x03A4DBFC BL 0x3EB1AE0
	0x03A4DC00 ADD X0, X31, 0x370
	0x03A4DC04 MOV X1, X31
	0x03A4DC08 BL 0x39B1DB4
	0x03A4DC0C ADRP X28, 0x703000
	0x03A4DC10 LDR X28, [X28 + 0xD20]
	0x03A4DC14 CBZ X20, 0x3A4D6B0
	0x03A4DC18 MOV X0, X20
	0x03A4DC1C BL 0x1C16F18
	0x03A4DC20 MOV X20, X31
	0x03A4DC24 B 0x3A4DC54
	0x03A4DC28 MOV X0, X25
	0x03A4DC2C BL 0x1C16F18
	0x03A4DC30 MOV X0, X25
	0x03A4DC34 BL 0x1C16F18
	0x03A4DC38 MOV X24, X1
	0x03A4DC3C MOV X28, X0
	0x03A4DC40 B 0x3A4DBD8
	0x03A4DC44 MOV X24, X1
	0x03A4DC48 MOV X28, X0
	0x03A4DC4C B 0x3A4DB9C
	0x03A4DC50 MOV X28, X0
	0x03A4DC54 ADD X0, X31, 0x370
	0x03A4DC58 MOV X1, X31
	0x03A4DC5C BL 0x39B1DB4
	0x03A4DC60 CBNZ X20, 0x3A4DC6C
	0x03A4DC64 MOV X0, X28
	0x03A4DC68 BL 0x1D2C690
	0x03A4DC6C MOV X0, X20
	0x03A4DC70 BL 0x1C16F18
	0x03A4DC74 BL 0x1990590
	0x03A4DC78 STR X30, [X31 - 0x30]!
	0x03A4DC7C STP X22, X21, [X31 + 0x10]
	0x03A4DC80 STP X20, X19, [X31 + 0x20]
	0x03A4DC84 ADRP X22, 0x995000
	0x03A4DC88 ADRP X21, 0x708000
	0x03A4DC8C LDRB W8, [X22 + 0x1AB]
	0x03A4DC90 LDR X21, [X21 + 0xD30]
	0x03A4DC94 MOV X19, X1
	0x03A4DC98 MOV X20, X0
	0x03A4DC9C TBNZ X8, 0x0, 0x3A4DCCC
	0x03A4DCA0 ADRP X0, 0x708000
	0x03A4DCA4 LDR X0, [X0 + 0xDE0]
	0x03A4DCA8 BL 0x1C16CF4
	0x03A4DCAC ADRP X0, 0x708000

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0x996000
	009 Move W8, [X23+421]
	010 Move X20, X4
	011 Move X22, X3
	012 Move X19, X2
	013 Move X21, X0
	014 Move [X31+8], X1
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {24}
	019 Move X0, 0x704000
	020 Move X0, [X0+3200]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X23+421], W8
	024 Move W8, [X19+200]
	025 Compare W8, 0
	026 JumpIfEqual {53}
	027 Move X0, X19
	028 Move X1, X31
	029 Call CameraData.IsCameraProjectionMatrixFlipped, X0
	030 And W3, W0, 1
	031 Move X0, X21
	032 Move X1, X20
	033 Move X2, X19
	034 Call ScriptableRenderer.SetPerCameraShaderVariables, X0, X1, X2, X3
	035 Move X0, X19
	036 Move X1, X31
	037 Call CameraData.IsCameraProjectionMatrixFlipped, X0
	038 And W3, W0, 1
	039 Move X1, X20
	040 Move X2, X19
	041 Call ScriptableRenderer.SetPerCameraClippingPlaneProperties, X0, X1, X2, X3
	042 Move X1, X20
	043 Move X2, X19
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X30, [X31+16]
	049 Move X23, [X31+24]
	050 Add X31, X31, 64
	051 Call ScriptableRenderer.SetPerCameraBillboardProperties, X0, X1, X2
	052 Return 
	053 Move X8, 0x704000
	054 Move X8, [X8+3200]
	055 Move X0, [X8]
	056 Move W8, [X0+224]
	057 Compare W8, 0
	058 JumpIfNotEqual {60}
	059 Call 0x1C17DFC
	060 Add X0, X31, 8
	061 Move X1, X22
	062 Move W2, W31
	063 Move X3, X31
	064 Call ScriptableRenderContext.SetupCameraProperties, X0, X1, X2
	065 Move X0, X19
	066 Move X1, X31
	067 Call CameraData.IsCameraProjectionMatrixFlipped, X0
	068 And W3, W0, 1
	069 Move X0, X21
	070 Move X1, X20
	071 Move X2, X19
	072 Call ScriptableRenderer.SetPerCameraShaderVariables, X0, X1, X2, X3
	073 Move X20, [X31+48]
	074 Move X19, [X31+56]
	075 Move X22, [X31+32]
	076 Move X21, [X31+40]
	077 Move X30, [X31+16]
	078 Move X23, [X31+24]
	079 Add X31, X31, 64
	080 Return 

Method: System.Void Execute(UnityEngine.Rendering.ScriptableRenderContext context, ref UnityEngine.Rendering.Universal.RenderingData renderingData)

Disassembly:
	0x03A4DCB0 LDR X0, [X0 + 0xDE8]
	0x03A4DCB4 BL 0x1C16CF4
	0x03A4DCB8 ADRP X0, 0x708000
	0x03A4DCBC LDR X0, [X0 + 0xD30]
	0x03A4DCC0 BL 0x1C16CF4
	0x03A4DCC4 MOVZ W8, 0x1
	0x03A4DCC8 STRB W8, [X22 + 0x1AB]
	0x03A4DCCC LDR X0, [X21]
	0x03A4DCD0 STRB W31, [X31 + 0x8]
	0x03A4DCD4 LDR W8, [X0 + 0xE0]
	0x03A4DCD8 CBNZ W8, 0x3A4DCE4
	0x03A4DCDC BL 0x1C16DFC
	0x03A4DCE0 LDR X0, [X21]
	0x03A4DCE4 LDR X8, [X0 + 0xB8]
	0x03A4DCE8 ADD X0, X31, 0x8
	0x03A4DCEC MOV X1, X31
	0x03A4DCF0 MOV X3, X31
	0x03A4DCF4 LDR X2, [X8 + 0x50]
	0x03A4DCF8 BL 0x39B1DB0
	0x03A4DCFC LDR X0, [X20 + 0x108]
	0x03A4DD00 CBZ X0, 0x3A4DD6C
	0x03A4DD04 ADRP X22, 0x708000
	0x03A4DD08 LDR X22, [X22 + 0xDE8]
	0x03A4DD0C MOV W21, W31
	0x03A4DD10 LDR W8, [X0 + 0x18]
	0x03A4DD14 CMP W21, W8
	0x03A4DD18 B.GE 0x3A4DD70
	0x03A4DD1C LDR X2, [X22]
	0x03A4DD20 MOV W1, W21
	0x03A4DD24 BL 0x301BCCC
	0x03A4DD28 CBZ X0, 0x3A4DD8C
	0x03A4DD2C LDRB W8, [X0 + 0x18]
	0x03A4DD30 CBZ W8, 0x3A4DD60
	0x03A4DD34 LDR X0, [X20 + 0x108]
	0x03A4DD38 CBZ X0, 0x3A4DD94
	0x03A4DD3C LDR X2, [X22]
	0x03A4DD40 MOV W1, W21
	0x03A4DD44 BL 0x301BCCC
	0x03A4DD48 CBZ X0, 0x3A4DD90
	0x03A4DD4C LDR X8, [X0]
	0x03A4DD50 LDP X9, X3, [X8 + 0x1B8]
	0x03A4DD54 MOV X1, X20
	0x03A4DD58 MOV X2, X19
	0x03A4DD5C BLR X9
	0x03A4DD60 LDR X0, [X20 + 0x108]
	0x03A4DD64 ADD W21, W21, 0x1
	0x03A4DD68 CBNZ X0, 0x3A4DD10
	0x03A4DD6C BL 0x1C16F20
	0x03A4DD70 ADD X0, X31, 0x8
	0x03A4DD74 MOV X1, X31
	0x03A4DD78 BL 0x39B1DB4
	0x03A4DD7C LDP X20, X19, [X31 + 0x20]
	0x03A4DD80 LDP X22, X21, [X31 + 0x10]
	0x03A4DD84 LDR X30, [X31], #0x30
	0x03A4DD88 RET
	0x03A4DD8C BL 0x1C16F20
	0x03A4DD90 BL 0x1C16F20
	0x03A4DD94 BL 0x1C16F20
	0x03A4DD98 B 0x3A4DDB0
	0x03A4DD9C B 0x3A4DDB0
	0x03A4DDA0 B 0x3A4DDB0
	0x03A4DDA4 B 0x3A4DDB0
	0x03A4DDA8 B 0x3A4DDB0
	0x03A4DDAC B 0x3A4DDB0
	0x03A4DDB0 MOV X19, X0
	0x03A4DDB4 CMP W1, 0x1
	0x03A4DDB8 B.NE 0x3A4DDE4
	0x03A4DDBC MOV X0, X19
	0x03A4DDC0 BL 0x3EB1AD0
	0x03A4DDC4 LDR X20, [X0]
	0x03A4DDC8 BL 0x3EB1AE0
	0x03A4DDCC ADD X0, X31, 0x8
	0x03A4DDD0 MOV X1, X31
	0x03A4DDD4 BL 0x39B1DB4
	0x03A4DDD8 CBZ X20, 0x3A4DD7C
	0x03A4DDDC MOV X0, X20
	0x03A4DDE0 BL 0x1C16F18
	0x03A4DDE4 MOV X20, X31
	0x03A4DDE8 B 0x3A4DDF0
	0x03A4DDEC MOV X19, X0
	0x03A4DDF0 ADD X0, X31, 0x8
	0x03A4DDF4 MOV X1, X31
	0x03A4DDF8 BL 0x39B1DB4
	0x03A4DDFC CBNZ X20, 0x3A4DE08
	0x03A4DE00 MOV X0, X19
	0x03A4DE04 BL 0x1D2C690
	0x03A4DE08 MOV X0, X20
	0x03A4DE0C BL 0x1C16F18
	0x03A4DE10 BL 0x1990590
	0x03A4DE14 SUB X31, X31, 0x40
	0x03A4DE18 STP X30, X1, [X31 + 0x10]
	0x03A4DE1C STP X22, X21, [X31 + 0x20]
	0x03A4DE20 STP X20, X19, [X31 + 0x30]
	0x03A4DE24 ADRP X22, 0x995000
	0x03A4DE28 ADRP X21, 0x708000
	0x03A4DE2C LDRB W8, [X22 + 0x1BF]
	0x03A4DE30 LDR X21, [X21 + 0xD30]
	0x03A4DE34 MOV X19, X2
	0x03A4DE38 MOV X20, X0
	0x03A4DE3C TBNZ X8, 0x0, 0x3A4DE78
	0x03A4DE40 ADRP X0, 0x707000
	0x03A4DE44 LDR X0, [X0 + 0x908]
	0x03A4DE48 BL 0x1C16CF4
	0x03A4DE4C ADRP X0, 0x707000
	0x03A4DE50 LDR X0, [X0 + 0x910]
	0x03A4DE54 BL 0x1C16CF4
	0x03A4DE58 ADRP X0, 0x708000
	0x03A4DE5C LDR X0, [X0 + 0xD30]
	0x03A4DE60 BL 0x1C16CF4
	0x03A4DE64 ADRP X0, 0x703000
	0x03A4DE68 LDR X0, [X0 + 0xC80]
	0x03A4DE6C BL 0x1C16CF4
	0x03A4DE70 MOVZ W8, 0x1
	0x03A4DE74 STRB W8, [X22 + 0x1BF]
	0x03A4DE78 LDR X0, [X21]
	0x03A4DE7C STRB W31, [X31 + 0x8]
	0x03A4DE80 LDR W8, [X0 + 0xE0]
	0x03A4DE84 CBNZ W8, 0x3A4DE90
	0x03A4DE88 BL 0x1C16DFC
	0x03A4DE8C LDR X0, [X21]
	0x03A4DE90 LDR X8, [X0 + 0xB8]
	0x03A4DE94 ADD X0, X31, 0x8
	0x03A4DE98 MOV X1, X31
	0x03A4DE9C MOV X3, X31
	0x03A4DEA0 LDR X2, [X8 + 0x60]
	0x03A4DEA4 BL 0x39B1DB0
	0x03A4DEA8 LDR X0, [X20 + 0x100]
	0x03A4DEAC CBZ X0, 0x3A4DEF8
	0x03A4DEB0 ADRP X22, 0x707000
	0x03A4DEB4 LDR X22, [X22 + 0x910]
	0x03A4DEB8 MOV W21, W31
	0x03A4DEBC LDR W8, [X0 + 0x18]
	0x03A4DEC0 CMP W21, W8
	0x03A4DEC4 B.GE 0x3A4DEFC
	0x03A4DEC8 LDR X2, [X22]
	0x03A4DECC MOV W1, W21
	0x03A4DED0 BL 0x301BCCC
	0x03A4DED4 CBZ X0, 0x3A4DF58
	0x03A4DED8 LDR X8, [X0]
	0x03A4DEDC LDR X1, [X19]
	0x03A4DEE0 LDP X9, X3, [X8 + 0x188]
	0x03A4DEE4 MOV X2, X19
	0x03A4DEE8 BLR X9
	0x03A4DEEC LDR X0, [X20 + 0x100]
	0x03A4DEF0 ADD W21, W21, 0x1
	0x03A4DEF4 CBNZ X0, 0x3A4DEBC
	0x03A4DEF8 BL 0x1C16F20
	0x03A4DEFC ADD X0, X31, 0x8
	0x03A4DF00 MOV X1, X31
	0x03A4DF04 BL 0x39B1DB4
	0x03A4DF08 ADRP X8, 0x703000
	0x03A4DF0C LDR X8, [X8 + 0xC80]
	0x03A4DF10 LDR X20, [X19]
	0x03A4DF14 LDR X0, [X8]
	0x03A4DF18 LDR W8, [X0 + 0xE0]
	0x03A4DF1C CBNZ W8, 0x3A4DF24
	0x03A4DF20 BL 0x1C16DFC
	0x03A4DF24 ADD X0, X31, 0x18
	0x03A4DF28 MOV X1, X20
	0x03A4DF2C MOV X2, X31
	0x03A4DF30 BL 0x3C58FE4
	0x03A4DF34 LDR X0, [X19]
	0x03A4DF38 CBZ X0, 0x3A4DF5C
	0x03A4DF3C MOV X1, X31
	0x03A4DF40 BL 0x3C4C310
	0x03A4DF44 LDP X20, X19, [X31 + 0x30]
	0x03A4DF48 LDP X22, X21, [X31 + 0x20]
	0x03A4DF4C LDR X30, [X31 + 0x10]
	0x03A4DF50 ADD X31, X31, 0x40
	0x03A4DF54 RET
	0x03A4DF58 BL 0x1C16F20
	0x03A4DF5C BL 0x1C16F20
	0x03A4DF60 B 0x3A4DF6C
	0x03A4DF64 B 0x3A4DF6C
	0x03A4DF68 B 0x3A4DF6C
	0x03A4DF6C MOV X20, X0
	0x03A4DF70 CMP W1, 0x1
	0x03A4DF74 B.NE 0x3A4DFA0
	0x03A4DF78 MOV X0, X20
	0x03A4DF7C BL 0x3EB1AD0
	0x03A4DF80 LDR X21, [X0]
	0x03A4DF84 BL 0x3EB1AE0
	0x03A4DF88 ADD X0, X31, 0x8
	0x03A4DF8C MOV X1, X31
	0x03A4DF90 BL 0x39B1DB4
	0x03A4DF94 CBZ X21, 0x3A4DF08
	0x03A4DF98 MOV X0, X21
	0x03A4DF9C BL 0x1C16F18
	0x03A4DFA0 MOV X21, X31
	0x03A4DFA4 B 0x3A4DFAC
	0x03A4DFA8 MOV X20, X0
	0x03A4DFAC ADD X0, X31, 0x8
	0x03A4DFB0 MOV X1, X31
	0x03A4DFB4 BL 0x39B1DB4
	0x03A4DFB8 CBNZ X21, 0x3A4DFC4
	0x03A4DFBC MOV X0, X20
	0x03A4DFC0 BL 0x1D2C690
	0x03A4DFC4 MOV X0, X21
	0x03A4DFC8 BL 0x1C16F18
	0x03A4DFCC BL 0x1990590
	0x03A4DFD0 SUB X31, X31, 0x30
	0x03A4DFD4 STP X30, X21, [X31 + 0x10]
	0x03A4DFD8 STP X20, X19, [X31 + 0x20]
	0x03A4DFDC ADRP X21, 0x995000
	0x03A4DFE0 ADRP X20, 0x708000
	0x03A4DFE4 LDRB W8, [X21 + 0x1AC]
	0x03A4DFE8 LDR X20, [X20 + 0xD30]
	0x03A4DFEC MOV X19, X0
	0x03A4DFF0 TBNZ X8, 0x0, 0x3A4E0E0
	0x03A4DFF4 ADRP X0, 0x708000
	0x03A4DFF8 LDR X0, [X0 + 0xD30]
	0x03A4DFFC BL 0x1C16CF4
	0x03A4E000 ADRP X0, 0x707000
	0x03A4E004 LDR X0, [X0 + 0xF10]
	0x03A4E008 BL 0x1C16CF4
	0x03A4E00C ADRP X0, 0x707000
	0x03A4E010 LDR X0, [X0 + 0xF18]
	0x03A4E014 BL 0x1C16CF4
	0x03A4E018 ADRP X0, 0x707000
	0x03A4E01C LDR X0, [X0 + 0xF20]
	0x03A4E020 BL 0x1C16CF4
	0x03A4E024 ADRP X0, 0x707000
	0x03A4E028 LDR X0, [X0 + 0xF28]
	0x03A4E02C BL 0x1C16CF4
	0x03A4E030 ADRP X0, 0x707000
	0x03A4E034 LDR X0, [X0 + 0xF30]
	0x03A4E038 BL 0x1C16CF4
	0x03A4E03C ADRP X0, 0x707000
	0x03A4E040 LDR X0, [X0 + 0xF38]
	0x03A4E044 BL 0x1C16CF4
	0x03A4E048 ADRP X0, 0x707000
	0x03A4E04C LDR X0, [X0 + 0xF40]
	0x03A4E050 BL 0x1C16CF4
	0x03A4E054 ADRP X0, 0x707000
	0x03A4E058 LDR X0, [X0 + 0xF48]
	0x03A4E05C BL 0x1C16CF4
	0x03A4E060 ADRP X0, 0x707000
	0x03A4E064 LDR X0, [X0 + 0xF50]
	0x03A4E068 BL 0x1C16CF4
	0x03A4E06C ADRP X0, 0x707000
	0x03A4E070 LDR X0, [X0 + 0xF58]
	0x03A4E074 BL 0x1C16CF4
	0x03A4E078 ADRP X0, 0x707000
	0x03A4E07C LDR X0, [X0 + 0xF60]
	0x03A4E080 BL 0x1C16CF4
	0x03A4E084 ADRP X0, 0x707000
	0x03A4E088 LDR X0, [X0 + 0xF68]
	0x03A4E08C BL 0x1C16CF4
	0x03A4E090 ADRP X0, 0x707000
	0x03A4E094 LDR X0, [X0 + 0xF70]
	0x03A4E098 BL 0x1C16CF4
	0x03A4E09C ADRP X0, 0x707000
	0x03A4E0A0 LDR X0, [X0 + 0xF78]
	0x03A4E0A4 BL 0x1C16CF4
	0x03A4E0A8 ADRP X0, 0x707000
	0x03A4E0AC LDR X0, [X0 + 0xF80]
	0x03A4E0B0 BL 0x1C16CF4
	0x03A4E0B4 ADRP X0, 0x707000
	0x03A4E0B8 LDR X0, [X0 + 0xF88]
	0x03A4E0BC BL 0x1C16CF4
	0x03A4E0C0 ADRP X0, 0x707000
	0x03A4E0C4 LDR X0, [X0 + 0xF90]
	0x03A4E0C8 BL 0x1C16CF4
	0x03A4E0CC ADRP X0, 0x707000
	0x03A4E0D0 LDR X0, [X0 + 0xF98]
	0x03A4E0D4 BL 0x1C16CF4
	0x03A4E0D8 MOVZ W8, 0x1
	0x03A4E0DC STRB W8, [X21 + 0x1AC]
	0x03A4E0E0 LDR X0, [X20]
	0x03A4E0E4 STRB W31, [X31 + 0x8]
	0x03A4E0E8 LDR W8, [X0 + 0xE0]
	0x03A4E0EC CBNZ W8, 0x3A4E0F8
	0x03A4E0F0 BL 0x1C16DFC
	0x03A4E0F4 LDR X0, [X20]
	0x03A4E0F8 LDR X8, [X0 + 0xB8]
	0x03A4E0FC ADD X0, X31, 0x8
	0x03A4E100 MOV X1, X31
	0x03A4E104 MOV X3, X31
	0x03A4E108 LDR X2, [X8 + 0x58]
	0x03A4E10C BL 0x39B1DB0
	0x03A4E110 CBZ X19, 0x3A4E334
	0x03A4E114 ADRP X8, 0x707000
	0x03A4E118 LDR X8, [X8 + 0xF60]
	0x03A4E11C LDR X1, [X8]
	0x03A4E120 MOV X0, X19
	0x03A4E124 MOV X2, X31
	0x03A4E128 BL 0x3C4D124
	0x03A4E12C ADRP X8, 0x707000
	0x03A4E130 LDR X8, [X8 + 0xF38]
	0x03A4E134 LDR X1, [X8]
	0x03A4E138 MOV X0, X19
	0x03A4E13C MOV X2, X31
	0x03A4E140 BL 0x3C4D124
	0x03A4E144 ADRP X8, 0x707000
	0x03A4E148 LDR X8, [X8 + 0xF30]
	0x03A4E14C LDR X1, [X8]
	0x03A4E150 MOV X0, X19
	0x03A4E154 MOV X2, X31
	0x03A4E158 BL 0x3C4D124
	0x03A4E15C ADRP X8, 0x707000
	0x03A4E160 LDR X8, [X8 + 0xF50]
	0x03A4E164 LDR X1, [X8]
	0x03A4E168 MOV X0, X19
	0x03A4E16C MOV X2, X31
	0x03A4E170 BL 0x3C4D124
	0x03A4E174 ADRP X8, 0x707000
	0x03A4E178 LDR X8, [X8 + 0xF40]
	0x03A4E17C LDR X1, [X8]
	0x03A4E180 MOV X0, X19
	0x03A4E184 MOV X2, X31
	0x03A4E188 BL 0x3C4D124
	0x03A4E18C ADRP X8, 0x707000
	0x03A4E190 LDR X8, [X8 + 0xF98]
	0x03A4E194 LDR X1, [X8]
	0x03A4E198 MOV X0, X19
	0x03A4E19C MOV X2, X31
	0x03A4E1A0 BL 0x3C4D124
	0x03A4E1A4 ADRP X8, 0x707000
	0x03A4E1A8 LDR X8, [X8 + 0xF18]
	0x03A4E1AC LDR X1, [X8]
	0x03A4E1B0 MOV X0, X19
	0x03A4E1B4 MOV X2, X31
	0x03A4E1B8 BL 0x3C4D124
	0x03A4E1BC ADRP X8, 0x707000
	0x03A4E1C0 LDR X8, [X8 + 0xF70]
	0x03A4E1C4 LDR X1, [X8]
	0x03A4E1C8 MOV X0, X19
	0x03A4E1CC MOV X2, X31
	0x03A4E1D0 BL 0x3C4D124
	0x03A4E1D4 ADRP X8, 0x707000
	0x03A4E1D8 LDR X8, [X8 + 0xF80]
	0x03A4E1DC LDR X1, [X8]
	0x03A4E1E0 MOV X0, X19
	0x03A4E1E4 MOV X2, X31
	0x03A4E1E8 BL 0x3C4D124
	0x03A4E1EC ADRP X8, 0x707000
	0x03A4E1F0 LDR X8, [X8 + 0xF28]
	0x03A4E1F4 LDR X1, [X8]
	0x03A4E1F8 MOV X0, X19
	0x03A4E1FC MOV X2, X31
	0x03A4E200 BL 0x3C4D124
	0x03A4E204 ADRP X8, 0x707000
	0x03A4E208 LDR X8, [X8 + 0xF20]
	0x03A4E20C LDR X1, [X8]
	0x03A4E210 MOV X0, X19
	0x03A4E214 MOV X2, X31
	0x03A4E218 BL 0x3C4D124
	0x03A4E21C ADRP X8, 0x707000
	0x03A4E220 LDR X8, [X8 + 0xF78]
	0x03A4E224 LDR X1, [X8]
	0x03A4E228 MOV X0, X19
	0x03A4E22C MOV X2, X31
	0x03A4E230 BL 0x3C4D124
	0x03A4E234 ADRP X8, 0x707000
	0x03A4E238 LDR X8, [X8 + 0xF48]
	0x03A4E23C LDR X1, [X8]
	0x03A4E240 MOV X0, X19
	0x03A4E244 MOV X2, X31
	0x03A4E248 BL 0x3C4D124
	0x03A4E24C ADRP X8, 0x707000
	0x03A4E250 LDR X8, [X8 + 0xF68]
	0x03A4E254 LDR X1, [X8]
	0x03A4E258 MOV X0, X19
	0x03A4E25C MOV X2, X31
	0x03A4E260 BL 0x3C4D124
	0x03A4E264 ADRP X8, 0x707000
	0x03A4E268 LDR X8, [X8 + 0xF58]
	0x03A4E26C LDR X1, [X8]
	0x03A4E270 MOV X0, X19
	0x03A4E274 MOV X2, X31
	0x03A4E278 BL 0x3C4D124
	0x03A4E27C ADRP X8, 0x707000
	0x03A4E280 LDR X8, [X8 + 0xF90]
	0x03A4E284 LDR X1, [X8]
	0x03A4E288 MOV X0, X19
	0x03A4E28C MOV X2, X31
	0x03A4E290 BL 0x3C4D124
	0x03A4E294 ADRP X8, 0x707000
	0x03A4E298 LDR X8, [X8 + 0xF88]
	0x03A4E29C LDR X1, [X8]
	0x03A4E2A0 MOV X0, X19
	0x03A4E2A4 MOV X2, X31
	0x03A4E2A8 BL 0x3C4D124
	0x03A4E2AC ADRP X20, 0x707000
	0x03A4E2B0 LDR X20, [X20 + 0xF10]
	0x03A4E2B4 LDR X0, [X20]
	0x03A4E2B8 LDR W8, [X0 + 0xE0]
	0x03A4E2BC CBNZ W8, 0x3A4E2C8
	0x03A4E2C0 BL 0x1C16DFC
	0x03A4E2C4 LDR X0, [X20]
	0x03A4E2C8 LDR X8, [X0 + 0xB8]
	0x03A4E2CC ADRP X21, 0x98A000
	0x03A4E2D0 LDRB W9, [X21 + 0xE5A]
	0x03A4E2D4 LDR W20, [X8]
	0x03A4E2D8 CBNZ W9, 0x3A4E2F0
	0x03A4E2DC ADRP X0, 0x6AC000
	0x03A4E2E0 LDR X0, [X0 + 0x9A0]
	0x03A4E2E4 BL 0x1C16CF4
	0x03A4E2E8 MOVZ W8, 0x1
	0x03A4E2EC STRB W8, [X21 + 0xE5A]
	0x03A4E2F0 ADRP X8, 0x6AC000
	0x03A4E2F4 LDR X8, [X8 + 0x9A0]
	0x03A4E2F8 LDR X8, [X8]
	0x03A4E2FC LDR X8, [X8 + 0xB8]
	0x03A4E300 LDP S0, S1, [X8]
	0x03A4E304 LDP S2, S3, [X8 + 0x8]
	0x03A4E308 MOV X0, X19
	0x03A4E30C MOV W1, W20
	0x03A4E310 MOV X2, X31
	0x03A4E314 BL 0x3C4CED8
	0x03A4E318 ADD X0, X31, 0x8
	0x03A4E31C MOV X1, X31
	0x03A4E320 BL 0x39B1DB4
	0x03A4E324 LDP X20, X19, [X31 + 0x20]
	0x03A4E328 LDP X30, X21, [X31 + 0x10]
	0x03A4E32C ADD X31, X31, 0x30
	0x03A4E330 RET
	0x03A4E334 BL 0x1C16F20
	0x03A4E338 B 0x3A4E384
	0x03A4E33C B 0x3A4E384
	0x03A4E340 B 0x3A4E384
	0x03A4E344 B 0x3A4E384
	0x03A4E348 B 0x3A4E384
	0x03A4E34C B 0x3A4E384
	0x03A4E350 B 0x3A4E384
	0x03A4E354 B 0x3A4E384
	0x03A4E358 B 0x3A4E384
	0x03A4E35C B 0x3A4E384
	0x03A4E360 B 0x3A4E384
	0x03A4E364 B 0x3A4E384
	0x03A4E368 B 0x3A4E384
	0x03A4E36C B 0x3A4E384
	0x03A4E370 B 0x3A4E384
	0x03A4E374 B 0x3A4E384
	0x03A4E378 B 0x3A4E384
	0x03A4E37C B 0x3A4E384
	0x03A4E380 B 0x3A4E384
	0x03A4E384 MOV X19, X0
	0x03A4E388 CMP W1, 0x1
	0x03A4E38C B.NE 0x3A4E3B8
	0x03A4E390 MOV X0, X19
	0x03A4E394 BL 0x3EB1AD0
	0x03A4E398 LDR X20, [X0]
	0x03A4E39C BL 0x3EB1AE0
	0x03A4E3A0 ADD X0, X31, 0x8
	0x03A4E3A4 MOV X1, X31
	0x03A4E3A8 BL 0x39B1DB4
	0x03A4E3AC CBZ X20, 0x3A4E324
	0x03A4E3B0 MOV X0, X20
	0x03A4E3B4 BL 0x1C16F18
	0x03A4E3B8 MOV X20, X31
	0x03A4E3BC B 0x3A4E3C4
	0x03A4E3C0 MOV X19, X0
	0x03A4E3C4 ADD X0, X31, 0x8
	0x03A4E3C8 MOV X1, X31
	0x03A4E3CC BL 0x39B1DB4
	0x03A4E3D0 CBNZ X20, 0x3A4E3DC
	0x03A4E3D4 MOV X0, X19
	0x03A4E3D8 BL 0x1D2C690
	0x03A4E3DC MOV X0, X20
	0x03A4E3E0 BL 0x1C16F18
	0x03A4E3E4 BL 0x1990590
	0x03A4E3E8 SUB X31, X31, 0x90
	0x03A4E3EC STP X30, X3, [X31 + 0x50]
	0x03A4E3F0 STP X24, X23, [X31 + 0x60]
	0x03A4E3F4 STP X22, X21, [X31 + 0x70]
	0x03A4E3F8 STP X20, X19, [X31 + 0x80]
	0x03A4E3FC ADRP X24, 0x994000
	0x03A4E400 LDRB W8, [X24 + 0x1AE]
	0x03A4E404 MOV W19, W5
	0x03A4E408 MOV X20, X4
	0x03A4E40C MOV X23, X2
	0x03A4E410 MOV W22, W1
	0x03A4E414 MOV X21, X0
	0x03A4E418 TBNZ X8, 0x0, 0x3A4E43C
	0x03A4E41C ADRP X0, 0x706000
	0x03A4E420 LDR X0, [X0 + 0x910]
	0x03A4E424 BL 0x1C16CF4
	0x03A4E428 ADRP X0, 0x702000
	0x03A4E42C LDR X0, [X0 + 0xC80]
	0x03A4E430 BL 0x1C16CF4
	0x03A4E434 MOVZ W8, 0x1
	0x03A4E438 STRB W8, [X24 + 0x1AE]
	0x03A4E43C STR X31, [X31 + 0x48]
	0x03A4E440 STR X31, [X31 + 0x8]
	0x03A4E444 LDP V1, V0, [X23 + 0x10]
	0x03A4E448 LDR V2, [X23]
	0x03A4E44C ADRP X23, 0x706000
	0x03A4E450 LDR X23, [X23 + 0x910]
	0x03A4E454 ADD X0, X31, 0x10
	0x03A4E458 MOV W1, W22
	0x03A4E45C MOV X2, X31
	0x03A4E460 STP V1, V0, [X31 + 0x20]
	0x03A4E464 STR V2, [X31 + 0x1]
	0x03A4E468 BL 0x3A5371C
	0x03A4E46C STR X0, [X31 + 0x8]
	0x03A4E470 ADD X0, X31, 0x8
	0x03A4E474 MOV X1, X31
	0x03A4E478 BL 0x3A53764
	0x03A4E47C STR X0, [X31 + 0x48]
	0x03A4E480 ADD X0, X31, 0x48
	0x03A4E484 MOV X1, X31
	0x03A4E488 BL 0x3A5376C
	0x03A4E48C TBZ X0, 0x0, 0x3A4E4BC
	0x03A4E490 LDR X0, [X21 + 0x100]
	0x03A4E494 CBZ X0, 0x3A4E508
	0x03A4E498 LDR W1, [X31 + 0x48]
	0x03A4E49C LDR X2, [X23]
	0x03A4E4A0 BL 0x301BCCC
	0x03A4E4A4 LDR X1, [X31 + 0x58]
	0x03A4E4A8 MOV X2, X0
	0x03A4E4AC MOV X0, X21
	0x03A4E4B0 MOV X3, X20
	0x03A4E4B4 BL 0x3A4EF30
	0x03A4E4B8 B 0x3A4E480
	0x03A4E4BC ADD X0, X31, 0x48
	0x03A4E4C0 MOV X1, X31
	0x03A4E4C4 BL 0x3A53790
	0x03A4E4C8 TBZ X19, 0x0, 0x3A4E4F0
	0x03A4E4CC ADRP X8, 0x702000
	0x03A4E4D0 LDR X8, [X8 + 0xC80]
	0x03A4E4D4 LDR X0, [X8]
	0x03A4E4D8 LDR W8, [X0 + 0xE0]
	0x03A4E4DC CBNZ W8, 0x3A4E4E4
	0x03A4E4E0 BL 0x1C16DFC
	0x03A4E4E4 ADD X0, X31, 0x58
	0x03A4E4E8 MOV X1, X31
	0x03A4E4EC BL 0x3C58A20
	0x03A4E4F0 LDP X20, X19, [X31 + 0x80]
	0x03A4E4F4 LDP X22, X21, [X31 + 0x70]
	0x03A4E4F8 LDP X24, X23, [X31 + 0x60]
	0x03A4E4FC LDR X30, [X31 + 0x50]
	0x03A4E500 ADD X31, X31, 0x90
	0x03A4E504 RET
	0x03A4E508 BL 0x1C16F20
	0x03A4E50C B 0x3A4E518
	0x03A4E510 B 0x3A4E518
	0x03A4E514 B 0x3A4E518
	0x03A4E518 MOV X20, X0
	0x03A4E51C CMP W1, 0x1
	0x03A4E520 B.NE 0x3A4E54C
	0x03A4E524 MOV X0, X20
	0x03A4E528 BL 0x3EB1AD0
	0x03A4E52C LDR X21, [X0]
	0x03A4E530 BL 0x3EB1AE0
	0x03A4E534 ADD X0, X31, 0x48
	0x03A4E538 MOV X1, X31
	0x03A4E53C BL 0x3A53790
	0x03A4E540 CBZ X21, 0x3A4E4C8
	0x03A4E544 MOV X0, X21
	0x03A4E548 BL 0x1C16F18
	0x03A4E54C MOV X21, X31
	0x03A4E550 B 0x3A4E558
	0x03A4E554 MOV X20, X0
	0x03A4E558 ADD X0, X31, 0x48
	0x03A4E55C MOV X1, X31
	0x03A4E560 BL 0x3A53790
	0x03A4E564 CBNZ X21, 0x3A4E570
	0x03A4E568 MOV X0, X20
	0x03A4E56C BL 0x1D2C690
	0x03A4E570 MOV X0, X21
	0x03A4E574 BL 0x1C16F18
	0x03A4E578 BL 0x1990590
	0x03A4E57C SUB X31, X31, 0x30
	0x03A4E580 STP X30, X21, [X31 + 0x10]
	0x03A4E584 STP X20, X19, [X31 + 0x20]
	0x03A4E588 ADRP X21, 0x994000
	0x03A4E58C LDRB W8, [X21 + 0x1B1]
	0x03A4E590 MOV X20, X3
	0x03A4E594 MOV X19, X1
	0x03A4E598 STR X2, [X31 + 0x8]
	0x03A4E59C TBNZ X8, 0x0, 0x3A4E5CC
	0x03A4E5A0 ADRP X0, 0x702000
	0x03A4E5A4 LDR X0, [X0 + 0xC80]
	0x03A4E5A8 BL 0x1C16CF4
	0x03A4E5AC ADRP X0, 0x702000
	0x03A4E5B0 LDR X0, [X0 + 0x500]
	0x03A4E5B4 BL 0x1C16CF4
	0x03A4E5B8 ADRP X0, 0x702000
	0x03A4E5BC LDR X0, [X0 + 0x588]
	0x03A4E5C0 BL 0x1C16CF4
	0x03A4E5C4 MOVZ W8, 0x1
	0x03A4E5C8 STRB W8, [X21 + 0x1B1]
	0x03A4E5CC LDR X0, [X20 + 0x178]
	0x03A4E5D0 CBZ X0, 0x3A4E70C
	0x03A4E5D4 MOV X1, X31
	0x03A4E5D8 BL 0x3984C98
	0x03A4E5DC TBZ X0, 0x0, 0x3A4E6FC
	0x03A4E5E0 MOV X0, X20
	0x03A4E5E4 MOV X1, X31
	0x03A4E5E8 BL 0x3A8F13C
	0x03A4E5EC CBZ X0, 0x3A4E70C
	0x03A4E5F0 LDRB W8, [X0 + 0x6C8]
	0x03A4E5F4 CBZ W8, 0x3A4E610
	0x03A4E5F8 MOV X0, X20
	0x03A4E5FC MOV X1, X31
	0x03A4E600 BL 0x3A8F13C
	0x03A4E604 CBZ X0, 0x3A4E70C
	0x03A4E608 MOVZ W8, 0x1
	0x03A4E60C STRB W8, [X0 + 0x6C9]
	0x03A4E610 LDR X0, [X20 + 0x178]
	0x03A4E614 CBZ X0, 0x3A4E70C
	0x03A4E618 MOV X1, X19
	0x03A4E61C MOV X2, X31
	0x03A4E620 BL 0x3987918
	0x03A4E624 LDR X0, [X20 + 0x178]
	0x03A4E628 CBZ X0, 0x3A4E70C
	0x03A4E62C MOV X1, X31
	0x03A4E630 BL 0x398841C
	0x03A4E634 TBZ X0, 0x0, 0x3A4E6C4
	0x03A4E638 LDR X8, [X20 + 0x178]
	0x03A4E63C CBZ X8, 0x3A4E70C
	0x03A4E640 CBZ X19, 0x3A4E70C
	0x03A4E644 LDR X1, [X8 + 0x6C0]
	0x03A4E648 MOV X0, X19
	0x03A4E64C MOV X2, X31
	0x03A4E650 BL 0x3C4D954
	0x03A4E654 ADRP X20, 0x702000
	0x03A4E658 LDR X20, [X20 + 0x500]
	0x03A4E65C LDR X0, [X20]
	0x03A4E660 LDR W8, [X0 + 0xE0]
	0x03A4E664 CBNZ W8, 0x3A4E66C
	0x03A4E668 BL 0x1C16DFC
	0x03A4E66C ADRP X21, 0x993000
	0x03A4E670 LDRB W8, [X21 + 0xB39]
	0x03A4E674 CBNZ W8, 0x3A4E68C
	0x03A4E678 ADRP X0, 0x702000
	0x03A4E67C LDR X0, [X0 + 0x500]
	0x03A4E680 BL 0x1C16CF4
	0x03A4E684 MOVZ W8, 0x1
	0x03A4E688 STRB W8, [X21 + 0xB39]
	0x03A4E68C LDR X0, [X20]
	0x03A4E690 LDR W8, [X0 + 0xE0]
	0x03A4E694 CBNZ W8, 0x3A4E6A0
	0x03A4E698 BL 0x1C16DFC
	0x03A4E69C LDR X0, [X20]
	0x03A4E6A0 LDR X8, [X0 + 0xB8]
	0x03A4E6A4 LDRB W8, [X8 + 0x4C]
	0x03A4E6A8 TBZ X8, 0x1, 0x3A4E6C4
	0x03A4E6AC ADRP X8, 0x702000
	0x03A4E6B0 LDR X8, [X8 + 0x588]
	0x03A4E6B4 MOV X0, X19
	0x03A4E6B8 MOV X2, X31
	0x03A4E6BC LDR X1, [X8]
	0x03A4E6C0 BL 0x3C4D0E0
	0x03A4E6C4 ADRP X8, 0x702000
	0x03A4E6C8 LDR X8, [X8 + 0xC80]
	0x03A4E6CC LDR X0, [X8]
	0x03A4E6D0 LDR W8, [X0 + 0xE0]
	0x03A4E6D4 CBNZ W8, 0x3A4E6DC
	0x03A4E6D8 BL 0x1C16DFC
	0x03A4E6DC ADD X0, X31, 0x8
	0x03A4E6E0 MOV X1, X19
	0x03A4E6E4 MOV X2, X31
	0x03A4E6E8 BL 0x3C58FE4
	0x03A4E6EC CBZ X19, 0x3A4E70C
	0x03A4E6F0 MOV X0, X19
	0x03A4E6F4 MOV X1, X31
	0x03A4E6F8 BL 0x3C4C310
	0x03A4E6FC LDP X20, X19, [X31 + 0x20]
	0x03A4E700 LDP X30, X21, [X31 + 0x10]
	0x03A4E704 ADD X31, X31, 0x30
	0x03A4E708 RET
	0x03A4E70C BL 0x1C16F20
	0x03A4E710 SUB X31, X31, 0x30
	0x03A4E714 STP X30, X21, [X31 + 0x10]
	0x03A4E718 STP X20, X19, [X31 + 0x20]
	0x03A4E71C ADRP X21, 0x994000
	0x03A4E720 LDRB W8, [X21 + 0x1B2]
	0x03A4E724 MOV X20, X3
	0x03A4E728 MOV X19, X1
	0x03A4E72C STR X2, [X31 + 0x8]
	0x03A4E730 TBNZ X8, 0x0, 0x3A4E760
	0x03A4E734 ADRP X0, 0x702000
	0x03A4E738 LDR X0, [X0 + 0xC80]
	0x03A4E73C BL 0x1C16CF4
	0x03A4E740 ADRP X0, 0x702000
	0x03A4E744 LDR X0, [X0 + 0x500]
	0x03A4E748 BL 0x1C16CF4
	0x03A4E74C ADRP X0, 0x702000
	0x03A4E750 LDR X0, [X0 + 0x588]
	0x03A4E754 BL 0x1C16CF4
	0x03A4E758 MOVZ W8, 0x1
	0x03A4E75C STRB W8, [X21 + 0x1B2]
	0x03A4E760 LDR X0, [X20 + 0x178]
	0x03A4E764 CBZ X0, 0x3A4E8A4
	0x03A4E768 MOV X1, X31
	0x03A4E76C BL 0x3984C98
	0x03A4E770 TBZ X0, 0x0, 0x3A4E894
	0x03A4E774 LDR X0, [X20 + 0x178]
	0x03A4E778 CBZ X0, 0x3A4E8A4
	0x03A4E77C MOV X1, X19
	0x03A4E780 MOV X2, X31
	0x03A4E784 BL 0x398784C
	0x03A4E788 ADRP X20, 0x702000
	0x03A4E78C LDR X20, [X20 + 0x500]
	0x03A4E790 LDR X0, [X20]
	0x03A4E794 LDR W8, [X0 + 0xE0]
	0x03A4E798 CBNZ W8, 0x3A4E7A0
	0x03A4E79C BL 0x1C16DFC
	0x03A4E7A0 ADRP X21, 0x993000
	0x03A4E7A4 LDRB W8, [X21 + 0xB39]
	0x03A4E7A8 CBNZ W8, 0x3A4E7C0
	0x03A4E7AC ADRP X0, 0x702000
	0x03A4E7B0 LDR X0, [X0 + 0x500]
	0x03A4E7B4 BL 0x1C16CF4
	0x03A4E7B8 MOVZ W8, 0x1
	0x03A4E7BC STRB W8, [X21 + 0xB39]
	0x03A4E7C0 LDR X0, [X20]
	0x03A4E7C4 LDR W8, [X0 + 0xE0]
	0x03A4E7C8 CBNZ W8, 0x3A4E7D4
	0x03A4E7CC BL 0x1C16DFC
	0x03A4E7D0 LDR X0, [X20]
	0x03A4E7D4 LDR X8, [X0 + 0xB8]
	0x03A4E7D8 LDR W8, [X8 + 0x4C]
	0x03A4E7DC CBZ W8, 0x3A4E85C
	0x03A4E7E0 LDR W8, [X0 + 0xE0]
	0x03A4E7E4 CBNZ W8, 0x3A4E7EC
	0x03A4E7E8 BL 0x1C16DFC
	0x03A4E7EC LDRB W8, [X21 + 0xB39]
	0x03A4E7F0 CBNZ W8, 0x3A4E808
	0x03A4E7F4 ADRP X0, 0x702000
	0x03A4E7F8 LDR X0, [X0 + 0x500]
	0x03A4E7FC BL 0x1C16CF4
	0x03A4E800 MOVZ W8, 0x1
	0x03A4E804 STRB W8, [X21 + 0xB39]
	0x03A4E808 LDR X0, [X20]
	0x03A4E80C LDR W8, [X0 + 0xE0]
	0x03A4E810 CBNZ W8, 0x3A4E81C
	0x03A4E814 BL 0x1C16DFC
	0x03A4E818 LDR X0, [X20]
	0x03A4E81C LDR X8, [X0 + 0xB8]
	0x03A4E820 LDRB W8, [X8 + 0x4C]
	0x03A4E824 TBNZ X8, 0x1, 0x3A4E830
	0x03A4E828 CBNZ X19, 0x3A4E84C
	0x03A4E82C B 0x3A4E8A4
	0x03A4E830 CBZ X19, 0x3A4E8A4
	0x03A4E834 ADRP X8, 0x702000
	0x03A4E838 LDR X8, [X8 + 0x588]
	0x03A4E83C MOV X0, X19
	0x03A4E840 MOV X2, X31
	0x03A4E844 LDR X1, [X8]
	0x03A4E848 BL 0x3C4D124
	0x03A4E84C MOV X0, X19
	0x03A4E850 MOV X1, X31
	0x03A4E854 MOV X2, X31
	0x03A4E858 BL 0x3C4D954
	0x03A4E85C ADRP X8, 0x702000
	0x03A4E860 LDR X8, [X8 + 0xC80]
	0x03A4E864 LDR X0, [X8]
	0x03A4E868 LDR W8, [X0 + 0xE0]
	0x03A4E86C CBNZ W8, 0x3A4E874
	0x03A4E870 BL 0x1C16DFC
	0x03A4E874 ADD X0, X31, 0x8
	0x03A4E878 MOV X1, X19
	0x03A4E87C MOV X2, X31
	0x03A4E880 BL 0x3C58FE4
	0x03A4E884 CBZ X19, 0x3A4E8A4
	0x03A4E888 MOV X0, X19
	0x03A4E88C MOV X1, X31
	0x03A4E890 BL 0x3C4C310
	0x03A4E894 LDP X20, X19, [X31 + 0x20]
	0x03A4E898 LDP X30, X21, [X31 + 0x10]
	0x03A4E89C ADD X31, X31, 0x30
	0x03A4E8A0 RET
	0x03A4E8A4 BL 0x1C16F20
	0x03A4E8A8 STR X29, [X31 - 0x40]!
	0x03A4E8AC STP X30, X23, [X31 + 0x10]
	0x03A4E8B0 STP X22, X21, [X31 + 0x20]
	0x03A4E8B4 STP X20, X19, [X31 + 0x30]
	0x03A4E8B8 SUB X31, X31, 0x2C0
	0x03A4E8BC ADRP X23, 0x994000
	0x03A4E8C0 STR X1, [X31 + 0x2C8]
	0x03A4E8C4 ADRP X22, 0x702000
	0x03A4E8C8 LDRB W8, [X23 + 0x1C1]
	0x03A4E8CC LDR X22, [X22 + 0xC80]
	0x03A4E8D0 MOV X19, X3
	0x03A4E8D4 MOV W21, W2
	0x03A4E8D8 MOV X20, X0
	0x03A4E8DC TBNZ X8, 0x0, 0x3A4E8F4
	0x03A4E8E0 ADRP X0, 0x702000
	0x03A4E8E4 LDR X0, [X0 + 0xC80]
	0x03A4E8E8 BL 0x1C16CF4
	0x03A4E8EC MOVZ W8, 0x1
	0x03A4E8F0 STRB W8, [X23 + 0x1C1]
	0x03A4E8F4 ADD X0, X31, 0x8
	0x03A4E8F8 MOVZ W2, 0x2B8
	0x03A4E8FC MOV X1, X19
	0x03A4E900 BL 0x3EB1AC0
	0x03A4E904 AND W1, W21, 0x1
	0x03A4E908 ADD X2, X31, 0x8
	0x03A4E90C MOV X0, X20
	0x03A4E910 BL 0x3A4C7C0
	0x03A4E914 MOV X0, X20
	0x03A4E918 BL 0x3A45C58
	0x03A4E91C LDR X0, [X22]
	0x03A4E920 LDR X20, [X19]
	0x03A4E924 LDR W8, [X0 + 0xE0]
	0x03A4E928 CBNZ W8, 0x3A4E930
	0x03A4E92C BL 0x1C16DFC
	0x03A4E930 ADD X0, X31, 0x2C8
	0x03A4E934 MOV X1, X20
	0x03A4E938 MOV X2, X31
	0x03A4E93C BL 0x3C58FE4
	0x03A4E940 LDR X0, [X19]
	0x03A4E944 CBZ X0, 0x3A4E968
	0x03A4E948 MOV X1, X31
	0x03A4E94C BL 0x3C4C310
	0x03A4E950 ADD X31, X31, 0x2C0
	0x03A4E954 LDP X20, X19, [X31 + 0x30]
	0x03A4E958 LDP X22, X21, [X31 + 0x20]
	0x03A4E95C LDP X30, X23, [X31 + 0x10]
	0x03A4E960 LDR X29, [X31], #0x40
	0x03A4E964 RET
	0x03A4E968 BL 0x1C16F20
	0x03A4E96C STP X30, X21, [X31 - 0x20]!
	0x03A4E970 STP X20, X19, [X31 + 0x10]
	0x03A4E974 ADRP X21, 0x994000
	0x03A4E978 LDRB W8, [X21 + 0x1A7]
	0x03A4E97C MOV X19, X1
	0x03A4E980 MOV X20, X0
	0x03A4E984 TBNZ X8, 0x0, 0x3A4E99C
	0x03A4E988 ADRP X0, 0x707000
	0x03A4E98C LDR X0, [X0 + 0xFA0]
	0x03A4E990 BL 0x1C16CF4
	0x03A4E994 MOVZ W8, 0x1
	0x03A4E998 STRB W8, [X21 + 0x1A7]
	0x03A4E99C LDR X0, [X20 + 0x100]
	0x03A4E9A0 CBZ X0, 0x3A4EA18
	0x03A4E9A4 ADRP X9, 0x707000
	0x03A4E9A8 LDR X9, [X9 + 0xFA0]
	0x03A4E9AC LDR W10, [X0 + 0x1C]
	0x03A4E9B0 LDR X8, [X0 + 0x10]
	0x03A4E9B4 LDR X9, [X9]
	0x03A4E9B8 ADD W10, W10, 0x1
	0x03A4E9BC STR W10, [X0 + 0x1C]
	0x03A4E9C0 CBZ X8, 0x3A4EA18
	0x03A4E9C4 LDRSW X10, [X0 + 0x18]
	0x03A4E9C8 LDR W11, [X8 + 0x18]
	0x03A4E9CC CMP W10, W11
	0x03A4E9D0 B.CS 0x3A4E9E8
	0x03A4E9D4 ADD W9, W10, 0x1
	0x03A4E9D8 ADD X8, X8, X10, 0x3, LSL
	0x03A4E9DC STR W9, [X0 + 0x18]
	0x03A4E9E0 STR X19, [X8 + 0x20]
	0x03A4E9E4 B 0x3A4E9FC
	0x03A4E9E8 LDR X8, [X9 + 0x20]
	0x03A4E9EC MOV X1, X19
	0x03A4E9F0 LDR X8, [X8 + 0xC0]
	0x03A4E9F4 LDR X2, [X8 + 0x70]
	0x03A4E9F8 BL 0x301BF90
	0x03A4E9FC LDRB W8, [X20 + 0x1A3]
	0x03A4EA00 CBZ W8, 0x3A4EA0C
	0x03A4EA04 CBZ X19, 0x3A4EA18
	0x03A4EA08 STRB W31, [X19 + 0x42]
	0x03A4EA0C LDP X20, X19, [X31 + 0x10]
	0x03A4EA10 LDP X30, X21, [X31], #0x20
	0x03A4EA14 RET
	0x03A4EA18 BL 0x1C16F20
	0x03A4EA1C STP X30, X21, [X31 - 0x20]!
	0x03A4EA20 STP X20, X19, [X31 + 0x10]
	0x03A4EA24 ADRP X20, 0x994000
	0x03A4EA28 LDRB W8, [X20 + 0x1A8]
	0x03A4EA2C MOV X19, X0
	0x03A4EA30 TBNZ X8, 0x0, 0x3A4EA48
	0x03A4EA34 ADRP X0, 0x6A5000
	0x03A4EA38 LDR X0, [X0 + 0x598]
	0x03A4EA3C BL 0x1C16CF4
	0x03A4EA40 MOVZ W8, 0x1
	0x03A4EA44 STRB W8, [X20 + 0x1A8]
	0x03A4EA48 LDR X0, [X19 + 0xC0]
	0x03A4EA4C CBZ X0, 0x3A4EB90
	0x03A4EA50 MOV X1, X31
	0x03A4EA54 BL 0x3C03C44
	0x03A4EA58 LDR W8, [X19 + 0xC8]
	0x03A4EA5C CMP W8, 0x1
	0x03A4EA60 B.NE 0x3A4EA78
	0x03A4EA64 LDRB W8, [X19 + 0x164]
	0x03A4EA68 CMP W8, 0x0
	0x03A4EA6C MOVZ W8, 0x6
	0x03A4EA70 CSEL W0, W31, W8, EQ
	0x03A4EA74 B 0x3A4EB7C
	0x03A4EA78 LDR X8, [X19 + 0x1B8]
	0x03A4EA7C CBZ X8, 0x3A4EB90
	0x03A4EA80 LDR X21, [X8 + 0xE0]
	0x03A4EA84 MOV W20, W0
	0x03A4EA88 CBZ X21, 0x3A4EAB0
	0x03A4EA8C MOV X0, X21
	0x03A4EA90 MOV X1, X19
	0x03A4EA94 MOV X2, X31
	0x03A4EA98 BL 0x3A35D04
	0x03A4EA9C TBZ X0, 0x0, 0x3A4EAB0
	0x03A4EAA0 MOV X0, X21
	0x03A4EAA4 MOV X1, X31
	0x03A4EAA8 BL 0x3A35A6C
	0x03A4EAAC TBNZ X0, 0x0, 0x3A4EB78
	0x03A4EAB0 CMP W20, 0x4
	0x03A4EAB4 B.EQ 0x3A4EB4C
	0x03A4EAB8 CMP W20, 0x1
	0x03A4EABC B.NE 0x3A4EB78
	0x03A4EAC0 MOV X0, X31
	0x03A4EAC4 BL 0x3C13CE4
	0x03A4EAC8 ADRP X21, 0x6A5000
	0x03A4EACC LDR X21, [X21 + 0x598]
	0x03A4EAD0 MOV X20, X0
	0x03A4EAD4 LDR X8, [X21]
	0x03A4EAD8 LDR W9, [X8 + 0xE0]
	0x03A4EADC CBNZ W9, 0x3A4EAE8
	0x03A4EAE0 MOV X0, X8
	0x03A4EAE4 BL 0x1C16DFC
	0x03A4EAE8 MOV X0, X20
	0x03A4EAEC MOV X1, X31
	0x03A4EAF0 MOV X2, X31
	0x03A4EAF4 BL 0x3C354F8
	0x03A4EAF8 TBZ X0, 0x0, 0x3A4EB18
	0x03A4EAFC LDRB W8, [X19 + 0x188]
	0x03A4EB00 CBZ W8, 0x3A4EB18
	0x03A4EB04 LDR X0, [X19 + 0x178]
	0x03A4EB08 CBZ X0, 0x3A4EB90
	0x03A4EB0C MOV X1, X31
	0x03A4EB10 BL 0x3984C98
	0x03A4EB14 TBNZ X0, 0x0, 0x3A4EB78
	0x03A4EB18 MOV X0, X31
	0x03A4EB1C BL 0x3C13CE4
	0x03A4EB20 LDR X8, [X21]
	0x03A4EB24 MOV X20, X0
	0x03A4EB28 LDR W9, [X8 + 0xE0]
	0x03A4EB2C CBNZ W9, 0x3A4EB38
	0x03A4EB30 MOV X0, X8
	0x03A4EB34 BL 0x1C16DFC
	0x03A4EB38 MOV X0, X20
	0x03A4EB3C MOV X1, X31
	0x03A4EB40 MOV X2, X31
	0x03A4EB44 BL 0x3C354F8
	0x03A4EB48 TBZ X0, 0x0, 0x3A4EB78
	0x03A4EB4C LDR W8, [X19 + 0xE0]
	0x03A4EB50 CMP W8, 0x2
	0x03A4EB54 B.LT 0x3A4EB88
	0x03A4EB58 LDR X0, [X19 + 0xC0]
	0x03A4EB5C CBZ X0, 0x3A4EB90
	0x03A4EB60 FMOV S0, W31
	0x03A4EB64 FMOV S1, W31
	0x03A4EB68 FMOV S2, W31
	0x03A4EB6C FMOV S3, 1
	0x03A4EB70 MOV X1, X31
	0x03A4EB74 BL 0x3C03BAC
	0x03A4EB78 MOVZ W0, 0x7
	0x03A4EB7C LDP X20, X19, [X31 + 0x10]
	0x03A4EB80 LDP X30, X21, [X31], #0x20
	0x03A4EB84 RET
	0x03A4EB88 MOVZ W0, 0x6
	0x03A4EB8C B 0x3A4EB7C
	0x03A4EB90 BL 0x1C16F20
	0x03A4EB94 STR X30, [X31 - 0x30]!
	0x03A4EB98 STP X22, X21, [X31 + 0x10]
	0x03A4EB9C STP X20, X19, [X31 + 0x20]
	0x03A4EBA0 ADRP X21, 0x994000
	0x03A4EBA4 LDRB W8, [X21 + 0x1A9]
	0x03A4EBA8 MOV X19, X1
	0x03A4EBAC MOV X20, X0
	0x03A4EBB0 TBNZ X8, 0x0, 0x3A4EBD4
	0x03A4EBB4 ADRP X0, 0x707000
	0x03A4EBB8 LDR X0, [X0 + 0xDE0]
	0x03A4EBBC BL 0x1C16CF4
	0x03A4EBC0 ADRP X0, 0x707000
	0x03A4EBC4 LDR X0, [X0 + 0xDE8]
	0x03A4EBC8 BL 0x1C16CF4
	0x03A4EBCC MOVZ W8, 0x1
	0x03A4EBD0 STRB W8, [X21 + 0x1A9]
	0x03A4EBD4 LDR X0, [X20 + 0x108]
	0x03A4EBD8 CBZ X0, 0x3A4EC44
	0x03A4EBDC ADRP X22, 0x707000
	0x03A4EBE0 LDR X22, [X22 + 0xDE8]
	0x03A4EBE4 MOV W21, W31
	0x03A4EBE8 LDR W8, [X0 + 0x18]
	0x03A4EBEC CMP W21, W8
	0x03A4EBF0 B.GE 0x3A4EC48
	0x03A4EBF4 LDR X2, [X22]
	0x03A4EBF8 MOV W1, W21
	0x03A4EBFC BL 0x301BCCC
	0x03A4EC00 CBZ X0, 0x3A4EC44
	0x03A4EC04 LDRB W8, [X0 + 0x18]
	0x03A4EC08 CBZ W8, 0x3A4EC38
	0x03A4EC0C LDR X0, [X20 + 0x108]
	0x03A4EC10 CBZ X0, 0x3A4EC44
	0x03A4EC14 LDR X2, [X22]
	0x03A4EC18 MOV W1, W21
	0x03A4EC1C BL 0x301BCCC
	0x03A4EC20 CBZ X0, 0x3A4EC44
	0x03A4EC24 LDR X8, [X0]
	0x03A4EC28 MOV X1, X20
	0x03A4EC2C MOV X2, X19
	0x03A4EC30 LDP X9, X3, [X8 + 0x198]
	0x03A4EC34 BLR X9
	0x03A4EC38 LDR X0, [X20 + 0x108]
	0x03A4EC3C ADD W21, W21, 0x1
	0x03A4EC40 CBNZ X0, 0x3A4EBE8
	0x03A4EC44 BL 0x1C16F20
	0x03A4EC48 LDP X20, X19, [X31 + 0x20]
	0x03A4EC4C LDP X22, X21, [X31 + 0x10]
	0x03A4EC50 LDR X30, [X31], #0x30
	0x03A4EC54 RET
	0x03A4EC58 SUB X31, X31, 0x40
	0x03A4EC5C STP X30, X23, [X31 + 0x10]
	0x03A4EC60 STP X22, X21, [X31 + 0x20]
	0x03A4EC64 STP X20, X19, [X31 + 0x30]
	0x03A4EC68 ADRP X22, 0x994000
	0x03A4EC6C ADRP X21, 0x707000
	0x03A4EC70 LDRB W8, [X22 + 0x1AA]
	0x03A4EC74 LDR X21, [X21 + 0xD30]

ISIL:
	001 Move [X31-128], D10
	002 Move [X31+16], D9
	003 Move [X31+24], D8
	004 Move [X31+32], X29
	005 Move [X31+40], X30
	006 Move [X31+48], X28
	007 Move [X31+56], X27
	008 Move [X31+64], X26
	009 Move [X31+72], X25
	010 Move [X31+80], X24
	011 Move [X31+88], X23
	012 Move [X31+96], X22
	013 Move [X31+104], X21
	014 Move [X31+112], X20
	015 Move [X31+120], X19
	016 Subtract X31, X31, 960
	017 Move X22, 0x996000
	018 Move [X31+888], X1
	019 Move X19, 0x709000
	020 Move W8, [X22+422]
	021 Move X19, [X19+1200]
	022 Move X21, X2
	023 Move X20, X0
	024 Add X25, X31, 704
	025 Move TEMP, X8
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {82}
	029 Move X0, 0x704000
	030 Move X0, [X0+3360]
	031 Call 0x1C17CF4
	032 Move X0, 0x709000
	033 Move X0, [X0+1192]
	034 Call 0x1C17CF4
	035 Move X0, 0x709000
	036 Move X0, [X0+1200]
	037 Call 0x1C17CF4
	038 Move X0, 0x709000
	039 Move X0, [X0+3800]
	040 Call 0x1C17CF4
	041 Move X0, 0x709000
	042 Move X0, [X0+3808]
	043 Call 0x1C17CF4
	044 Move X0, 0x709000
	045 Move X0, [X0+3816]
	046 Call 0x1C17CF4
	047 Move X0, 0x709000
	048 Move X0, [X0+3824]
	049 Call 0x1C17CF4
	050 Move X0, 0x709000
	051 Move X0, [X0+3552]
	052 Call 0x1C17CF4
	053 Move X0, 0x708000
	054 Move X0, [X0+2312]
	055 Call 0x1C17CF4
	056 Move X0, 0x708000
	057 Move X0, [X0+2320]
	058 Call 0x1C17CF4
	059 Move X0, 0x6D1000
	060 Move X0, [X0+328]
	061 Call 0x1C17CF4
	062 Move X0, 0x709000
	063 Move X0, [X0+3376]
	064 Call 0x1C17CF4
	065 Move X0, 0x709000
	066 Move X0, [X0+3832]
	067 Call 0x1C17CF4
	068 Move X0, 0x709000
	069 Move X0, [X0+3840]
	070 Call 0x1C17CF4
	071 Move X0, 0x709000
	072 Move X0, [X0+3848]
	073 Call 0x1C17CF4
	074 Move X0, 0x704000
	075 Move X0, [X0+3200]
	076 Call 0x1C17CF4
	077 Move X0, 0x708000
	078 Move X0, [X0+2248]
	079 Call 0x1C17CF4
	080 Move W8, 1
	081 Move [X22+422], W8
	082 Move X0, [X19]
	083 NotImplemented "Instruction MOVI not yet implemented."
	084 Move [X31+880], W31
	085 Move [X31+824], W31
	086 Move [X31+808], X31
	087 Move [X31+800], X31
	088 Move [X31+816], X31
	089 Move [X31+792], W31
	090 Move [X25+144], V0
	091 Move [X25+152], V0
	092 Move [X25+8], V0
	093 Move [X31+784], W31
	094 Move [X31+776], W31
	095 Move [X31+768], W31
	096 Move X19, 0x709000
	097 Move W8, [X0+224]
	098 Move X19, [X19+1192]
	099 Compare W8, 0
	100 JumpIfNotEqual {102}
	101 Call 0x1C17DFC
	102 Move X0, [X19]
	103 Call 0x29B00A8
	104 Compare X0, 0
	105 JumpIfEqual {745}
	106 Move X8, [X0+40]
	107 Compare X8, 0
	108 JumpIfEqual {745}
	109 Move X8, [X20+264]
	110 Move W9, 1
	111 Move [X20+216], W31
	112 Move [X20+418], W9
	113 Compare X8, 0
	114 JumpIfEqual {745}
	115 Move X28, 0x704000
	116 Move W8, [X8+24]
	117 Move X23, [X21+216]
	118 Move X28, [X28+3360]
	119 Add X22, X21, 24
	120 Compare W8, 0
	121 JumpIfEqual {132}
	122 Move X0, X22
	123 Move X1, X31
	124 Call CameraData.get_isPreviewCamera, X0
	125 Move TEMP, X0
	126 And TEMP, TEMP, 1
	127 Compare TEMP, 1
	128 JumpIfEqual {132}
	129 Move X0, X20
	130 Move X1, X21
	131 Call ScriptableRenderer.SetupRenderPasses, X0, X1
	132 Move X0, [X28]
	133 Move W8, [X0+224]
	134 Compare W8, 0
	135 JumpIfNotEqual {137}
	136 Call 0x1C17DFC
	137 Move X0, X31
	138 Call CommandBufferPool.Get
	139 Move X8, [X21+400]
	140 Compare X8, 0
	141 JumpIfEqual {745}
	142 Move X24, 0x704000
	143 Move X24, [X24+3200]
	144 Move X19, X0
	145 Move X0, X8
	146 Move X1, X31
	147 Call XRPass.get_enabled, X0
	148 Move X2, [X20+208]
	149 And W31, W0, 1
	150 NotImplemented "Instruction CSEL not yet implemented."
	151 Add X0, X31, 880
	152 Move X3, X31
	153 Call ProfilingScope..ctor, X0, X1, X2
	154 Move X1, [X31+888]
	155 Move X0, X20
	156 Move X2, X21
	157 Call ScriptableRenderer.InternalStartRendering, X0, X1, X2
	158 Move X0, X31
	159 Call Time.get_time
	160 Move V8, V0
	161 Move X0, X31
	162 Call Time.get_deltaTime
	163 Move V9, V0
	164 Move X0, X31
	165 Call Time.get_smoothDeltaTime
	166 Move X29, 0x708000
	167 Move X29, [X29+2248]
	168 Move V10, V0
	169 Move X0, [X29]
	170 Move W8, [X0+224]
	171 Compare W8, 0
	172 JumpIfNotEqual {174}
	173 Call 0x1C17DFC
	174 Move X0, X19
	175 Call ScriptableRenderer.ClearRenderingState, X0
	176 Move X0, X19
	177 Move V0, V8
	178 Move V1, V9
	179 Move V2, V10
	180 Call ScriptableRenderer.SetShaderTimeValues, X0, V0, V1, V2
	181 Move X0, [X24]
	182 Move W8, [X0+224]
	183 Compare W8, 0
	184 JumpIfNotEqual {186}
	185 Call 0x1C17DFC
	186 Add X0, X31, 888
	187 Move X1, X19
	188 Move X2, X31
	189 Call ScriptableRenderContext.ExecuteCommandBuffer, X0, X1
	190 Compare X19, 0
	191 JumpIfEqual {749}
	192 Move X0, X19
	193 Move X1, X31
	194 Call CommandBuffer.Clear, X0
	195 Move X26, 0x709000
	196 Move X26, [X26+3376]
	197 Move X0, [X26]
	198 Move W8, [X0+224]
	199 Compare W8, 0
	200 JumpIfNotEqual {203}
	201 Call 0x1C17DFC
	202 Move X0, [X26]
	203 Move X8, [X0+184]
	204 Move X2, [X8+40]
	205 Move [X31+896], W31
	206 Add X0, X31, 896
	207 Move X1, X31
	208 Move X3, X31
	209 Call ProfilingScope..ctor, X0, X1, X2
	210 Move W8, [X31+896]
	211 Move X0, [X29]
	212 Move [X31+824], W8
	213 Move W8, [X0+224]
	214 Move X24, [X20+256]
	215 Compare W8, 0
	216 JumpIfNotEqual {218}
	217 Call 0x1C17DFC
	218 Move X0, X24
	219 Call ScriptableRenderer.SortStable, X0
	220 Move X24, X31
	221 Move W27, 5
	222 Add X0, X31, 824
	223 Move X1, X31
	224 Call ProfilingScope.Dispose, X0
	225 Compare X24, 0
	226 JumpIfNotEqual {750}
	227 NotImplemented "Instruction CMP not yet implemented."
	228 Compare W27, 0
	229 JumpIfNotEqual {699}
	230 Move X24, 0x709000
	231 Move X24, [X24+3848]
	232 Move X0, [X24]
	233 Move W8, [X0+224]
	234 Compare W8, 0
	235 JumpIfNotEqual {238}
	236 Call 0x1C17DFC
	237 Move X0, [X24]
	238 Move X8, [X0+184]
	239 Move X2, [X8]
	240 Move [X31+896], W31
	241 Add X0, X31, 896
	242 Move X1, X31
	243 Move X3, X31
	244 Call ProfilingScope..ctor, X0, X1, X2
	245 Move W8, [X31+896]
	246 Move [X31+824], W8
	247 Move X0, [X20+256]
	248 Compare X0, 0
	249 JumpIfEqual {752}
	250 Move X8, 0x708000
	251 Move X8, [X8+3824]
	252 Move X1, [X8]
	253 Add X8, X31, 896
	254 Call List`1<Object>.GetEnumerator, X0
	255 Move V0, [X25+12]
	256 Move X8, [X31+912]
	257 Move X24, 0x708000
	258 Move X27, 0x708000
	259 Move X24, [X24+3808]
	260 Move X27, [X27+3800]
	261 Move [X25+6], V0
	262 Move [X31+816], X8
	263 Add X28, X21, 240
	264 Move X1, [X24]
	265 Add X0, X31, 800
	266 Call Enumerator<Object>.MoveNext, X0
	267 Move TEMP, X0
	268 And TEMP, TEMP, 1
	269 Compare TEMP, 1
	270 JumpIfNotEqual {296}
	271 Move V2, [X28+16]
	272 Move V0, [X28+32]
	273 Move W8, [X28+48]
	274 Move V1, [X28]
	275 Move X0, [X31+816]
	276 Move [X25+16], V2
	277 Move [X25+24], V0
	278 Move [X31+752], W8
	279 Move [X25], V1
	280 Compare X0, 0
	281 JumpIfEqual {744}
	282 Move X8, [X0]
	283 Move V0, [X25]
	284 Move V1, [X25+16]
	285 Move V2, [X25+2]
	286 Move W9, [X31+752]
	287 Move X10, [X8+408]
	288 Move [X25+192], V0
	289 Move [X25+200], V1
	290 Move [X25+14], V2
	291 Move [X31+944], W9
	292 Move X3, [X8+416]
	293 Add X2, X31, 896
	294 Move X1, X19
	295 NotImplemented "Instruction BLR not yet implemented."
	296 Move X25, X31
	297 Move X1, [X27]
	298 Move X28, 0x703000
	299 Move X28, [X28+3360]
	300 Add X0, X31, 800
	301 Call Enumerator<Object>.Dispose, X0
	302 Move X8, 0x703000
	303 Move X8, [X8+3200]
	304 Compare X25, 0
	305 JumpIfNotEqual {755}
	306 Move X0, [X8]
	307 Move W8, [X0+224]
	308 Compare W8, 0
	309 JumpIfNotEqual {311}
	310 Call 0x1C17DFC
	311 Add X0, X31, 888
	312 Move X1, X19
	313 Move X2, X31
	314 Call ScriptableRenderContext.ExecuteCommandBuffer, X0, X1
	315 Move X0, X19
	316 Move X1, X31
	317 Call CommandBuffer.Clear, X0
	318 Move X25, X31
	319 Move W27, 9
	320 Add X0, X31, 824
	321 Move X1, X31
	322 Call ProfilingScope.Dispose, X0
	323 Compare X25, 0
	324 JumpIfNotEqual {753}
	325 NotImplemented "Instruction CMP not yet implemented."
	326 Compare W27, 0
	327 JumpIfNotEqual {699}
	328 Move X0, X20
	329 Move X1, X22
	330 Move W2, W31
	331 Call ScriptableRenderer.SetupNativeRenderPassFrameData, X0, X1, X2
	332 Move X1, [X20+256]
	333 Add X0, X31, 832
	334 Move X2, X31
	335 Call RenderBlocks..ctor, X0, X1
	336 Move X0, [X26]
	337 Move W8, [X0+224]
	338 Compare W8, 0
	339 JumpIfNotEqual {342}
	340 Call 0x1C17DFC
	341 Move X0, [X26]
	342 Move X8, [X0+184]
	343 Move X2, [X8+48]
	344 Move [X31+704], W31
	345 Add X0, X31, 704
	346 Move X1, X31
	347 Move X3, X31
	348 Call ProfilingScope..ctor, X0, X1, X2
	349 Move W8, [X31+704]
	350 Move X1, [X31+888]
	351 Move [X31+824], W8
	352 Move X8, [X20]
	353 Move X9, [X8+488]
	354 Move X3, [X8+496]
	355 Move X0, X20
	356 Move X2, X21
	357 NotImplemented "Instruction BLR not yet implemented."
	358 Move X24, X31
	359 Move W27, 10
	360 Add X0, X31, 824
	361 Move X1, X31
	362 Call ProfilingScope.Dispose, X0
	363 Compare X24, 0
	364 JumpIfNotEqual {757}
	365 NotImplemented "Instruction CMP not yet implemented."
	366 Compare W27, 0
	367 JumpIfNotEqual {689}
	368 Move X25, 0x708000
	369 Move X25, [X25+3840]
	370 Move X0, [X25]
	371 Move W8, [X0+224]
	372 Compare W8, 0
	373 JumpIfNotEqual {376}
	374 Call 0x1C17DFC
	375 Move X0, [X25]
	376 Move X8, [X0+184]
	377 Move W1, [X8]
	378 Add X0, X31, 832
	379 Move X2, X31
	380 Call RenderBlocks.GetLength, X0, X1
	381 NotImplemented "Instruction CMP not yet implemented."
	382 Move X24, 0x708000
	383 Move X24, [X24+3832]
	384 Move X0, [X24]
	385 Move W8, [X0+224]
	386 Compare W8, 0
	387 JumpIfNotEqual {390}
	388 Call 0x1C17DFC
	389 Move X0, [X24]
	390 Move X8, [X0+184]
	391 Move X2, [X8]
	392 Add X0, X31, 792
	393 Move X1, X31
	394 Move X3, X31
	395 Call ProfilingScope..ctor, X0, X1, X2
	396 Move X0, [X25]
	397 Move W8, [X0+224]
	398 Compare W8, 0
	399 JumpIfNotEqual {402}
	400 Call 0x1C17DFC
	401 Move X0, [X25]
	402 Move X8, [X0+184]
	403 Move X3, [X31+888]
	404 Move W1, [X8]
	405 Add X2, X31, 832
	406 Move X0, X20
	407 Move X4, X21
	408 Move W5, W31
	409 Call ScriptableRenderer.ExecuteBlock, X0, X1, X2, X3, X4, X5
	410 Move X24, X31
	411 Move W27, 11
	412 Add X0, X31, 792
	413 Move X1, X31
	414 Call ProfilingScope.Dispose, X0
	415 Compare X24, 0
	416 JumpIfNotEqual {763}
	417 NotImplemented "Instruction CMP not yet implemented."
	418 Compare W27, 0
	419 JumpIfNotEqual {689}
	420 Move X0, [X26]
	421 Move W8, [X0+224]
	422 Compare W8, 0
	423 JumpIfNotEqual {426}
	424 Call 0x1C17DFC
	425 Move X0, [X26]
	426 Move X8, [X0+184]
	427 Move X2, [X8+56]
	428 Move [X31+704], W31
	429 Add X0, X31, 704
	430 Move X1, X31
	431 Move X3, X31
	432 Call ProfilingScope..ctor, X0, X1, X2
	433 Move W8, [X31+704]
	434 Move X1, [X31+888]
	435 Move [X31+824], W8
	436 Move X0, X20
	437 Move X2, X22
	438 Move X3, X23
	439 Move X4, X19
	440 Call ScriptableRenderer.SetPerCameraProperties, X0, X1, X2, X3, X4
	441 Move X0, [X29]
	442 Move W8, [X0+224]
	443 Compare W8, 0
	444 JumpIfNotEqual {446}
	445 Call 0x1C17DFC
	446 Move X0, X19
	447 Move V0, V8
	448 Move V1, V9
	449 Move V2, V10
	450 Call ScriptableRenderer.SetShaderTimeValues, X0, V0, V1, V2
	451 Move X23, X31
	452 Move W27, 12
	453 Add X0, X31, 824
	454 Move X1, X31
	455 Call ProfilingScope.Dispose, X0
	456 Compare X23, 0
	457 JumpIfNotEqual {761}
	458 NotImplemented "Instruction CMP not yet implemented."
	459 Compare W27, 0
	460 JumpIfNotEqual {689}
	461 Move X8, 0x703000
	462 Move X8, [X8+3200]
	463 Move X0, [X8]
	464 Move W8, [X0+224]
	465 Compare W8, 0
	466 JumpIfNotEqual {468}
	467 Call 0x1C17DFC
	468 Add X0, X31, 888
	469 Move X1, X19
	470 Move X2, X31
	471 Call ScriptableRenderContext.ExecuteCommandBuffer, X0, X1
	472 Move X0, X19
	473 Move X1, X31
	474 Call CommandBuffer.Clear, X0
	475 Move X2, [X31+888]
	476 Move X1, X19
	477 Move X3, X22
	478 Call ScriptableRenderer.BeginXRRendering, X0, X1, X2, X3
	479 Move X0, [X25]
	480 Move W8, [X0+224]
	481 Compare W8, 0
	482 JumpIfNotEqual {485}
	483 Call 0x1C17DFC
	484 Move X0, [X25]
	485 Move X8, [X0+184]
	486 Move W1, [X8+4]
	487 Add X0, X31, 832
	488 Move X2, X31
	489 Call RenderBlocks.GetLength, X0, X1
	490 NotImplemented "Instruction CMP not yet implemented."
	491 Move X23, 0x708000
	492 Move X23, [X23+3832]
	493 Move X0, [X23]
	494 Move W8, [X0+224]
	495 Compare W8, 0
	496 JumpIfNotEqual {499}
	497 Call 0x1C17DFC
	498 Move X0, [X23]
	499 Move X8, [X0+184]
	500 Move X2, [X8+8]
	501 Add X0, X31, 784
	502 Move X1, X31
	503 Move X3, X31
	504 Call ProfilingScope..ctor, X0, X1, X2
	505 Move X0, [X25]
	506 Move W8, [X0+224]
	507 Compare W8, 0
	508 JumpIfNotEqual {511}
	509 Call 0x1C17DFC
	510 Move X0, [X25]
	511 Move X8, [X0+184]
	512 Move X3, [X31+888]
	513 Move W1, [X8+4]
	514 Add X2, X31, 832
	515 Move X0, X20
	516 Move X4, X21
	517 Move W5, W31
	518 Call ScriptableRenderer.ExecuteBlock, X0, X1, X2, X3, X4, X5
	519 Move X23, X31
	520 Move W27, 13
	521 Add X0, X31, 784
	522 Move X1, X31
	523 Call ProfilingScope.Dispose, X0
	524 Compare X23, 0
	525 JumpIfNotEqual {766}
	526 NotImplemented "Instruction CMP not yet implemented."
	527 Compare W27, 0
	528 JumpIfNotEqual {689}
	529 Move X0, [X25]
	530 Move W8, [X0+224]
	531 Compare W8, 0
	532 JumpIfNotEqual {535}
	533 Call 0x1C17DFC
	534 Move X0, [X25]
	535 Move X8, [X0+184]
	536 Move W1, [X8+8]
	537 Add X0, X31, 832
	538 Move X2, X31
	539 Call RenderBlocks.GetLength, X0, X1
	540 NotImplemented "Instruction CMP not yet implemented."
	541 Move X23, 0x708000
	542 Move X23, [X23+3832]
	543 Move X0, [X23]
	544 Move W8, [X0+224]
	545 Compare W8, 0
	546 JumpIfNotEqual {549}
	547 Call 0x1C17DFC
	548 Move X0, [X23]
	549 Move X8, [X0+184]
	550 Move X2, [X8+16]
	551 Add X0, X31, 776
	552 Move X1, X31
	553 Move X3, X31
	554 Call ProfilingScope..ctor, X0, X1, X2
	555 Move X0, [X25]
	556 Move W8, [X0+224]
	557 Compare W8, 0
	558 JumpIfNotEqual {561}
	559 Call 0x1C17DFC
	560 Move X0, [X25]
	561 Move X8, [X0+184]
	562 Move X3, [X31+888]
	563 Move W1, [X8+8]
	564 Add X2, X31, 832
	565 Move X0, X20
	566 Move X4, X21
	567 Move W5, W31
	568 Call ScriptableRenderer.ExecuteBlock, X0, X1, X2, X3, X4, X5
	569 Move X23, X31
	570 Move W27, 14
	571 Add X0, X31, 776
	572 Move X1, X31
	573 Call ProfilingScope.Dispose, X0
	574 Compare X23, 0
	575 JumpIfNotEqual {768}
	576 NotImplemented "Instruction CMP not yet implemented."
	577 Compare W27, 0
	578 JumpIfNotEqual {689}
	579 Move X0, [X21+400]
	580 Compare X0, 0
	581 JumpIfEqual {765}
	582 Move X1, X31
	583 Call XRPass.get_enabled, X0
	584 Move TEMP, X0
	585 And TEMP, TEMP, 1
	586 Compare TEMP, 1
	587 JumpIfNotEqual {594}
	588 Move X0, X22
	589 Move X1, X31
	590 Call CameraData.get_xrUniversal, X0
	591 Compare X0, 0
	592 JumpIfEqual {772}
	593 Move [X0+1737], W31
	594 Move X0, [X25]
	595 Move W8, [X0+224]
	596 Compare W8, 0
	597 JumpIfNotEqual {600}
	598 Call 0x1C17DFC
	599 Move X0, [X25]
	600 Move X8, [X0+184]
	601 Move W1, [X8+12]
	602 Add X0, X31, 832
	603 Move X2, X31
	604 Call RenderBlocks.GetLength, X0, X1
	605 NotImplemented "Instruction CMP not yet implemented."
	606 Move X23, 0x708000
	607 Move X23, [X23+3832]
	608 Move X0, [X23]
	609 Move W8, [X0+224]
	610 Compare W8, 0
	611 JumpIfNotEqual {614}
	612 Call 0x1C17DFC
	613 Move X0, [X23]
	614 Move X8, [X0+184]
	615 Move X2, [X8+24]
	616 Add X0, X31, 768
	617 Move X1, X31
	618 Move X3, X31
	619 Call ProfilingScope..ctor, X0, X1, X2
	620 Move X0, [X25]
	621 Move W8, [X0+224]
	622 Compare W8, 0
	623 JumpIfNotEqual {626}
	624 Call 0x1C17DFC
	625 Move X0, [X25]
	626 Move X8, [X0+184]
	627 Move X3, [X31+888]
	628 Move W1, [X8+12]
	629 Add X2, X31, 832
	630 Move X0, X20
	631 Move X4, X21
	632 Move W5, W31
	633 Call ScriptableRenderer.ExecuteBlock, X0, X1, X2, X3, X4, X5
	634 Move X23, X31
	635 Add X0, X31, 768
	636 Move X1, X31
	637 Call ProfilingScope.Dispose, X0
	638 Compare X23, 0
	639 JumpIfNotEqual {770}
	640 Move X2, [X31+888]
	641 Move X1, X19
	642 Move X3, X22
	643 Call ScriptableRenderer.EndXRRendering, X0, X1, X2, X3
	644 Move X22, [X31+888]
	645 Move W23, [X21+472]
	646 Add X0, X31, 8
	647 Move W2, 696
	648 Move X1, X21
	649 Call 0x3EB2AC0
	650 Add X3, X31, 8
	651 Move X0, X20
	652 Move X1, X22
	653 Move W2, W23
	654 Call ScriptableRenderer.InternalFinishRendering, X0, X1, X2, X3
	655 Move X0, [X20+256]
	656 Compare X0, 0
	657 JumpIfEqual {688}
	658 Move X22, 0x707000
	659 Move X23, 0x6D0000
	660 Move X22, [X22+2320]
	661 Move X23, [X23+328]
	662 Move W21, W31
	663 Move W8, [X0+24]
	664 NotImplemented "Instruction CMP not yet implemented."
	665 Move X2, [X22]
	666 Move W1, W21
	667 Call List`1<Object>.get_Item, X0, X1
	668 Compare X0, 0
	669 JumpIfEqual {748}
	670 Move X1, [X23]
	671 Add X0, X0, 72
	672 Call NativeArray`1<Int32>.Dispose, X0
	673 Move X0, [X20+256]
	674 Compare X0, 0
	675 JumpIfEqual {746}
	676 Move X2, [X22]
	677 Move W1, W21
	678 Call List`1<Object>.get_Item, X0, X1
	679 Compare X0, 0
	680 JumpIfEqual {747}
	681 Move X1, [X23]
	682 Add X0, X0, 88
	683 Call NativeArray`1<Int32>.Dispose, X0
	684 Move X0, [X20+256]
	685 Add W21, W21, 1
	686 Compare X0, 0
	687 JumpIfNotEqual {663}
	688 Call 0x1C17F20
	689 Move X20, X31
	690 Move X20, X31
	691 Move W27, 19
	692 Add X0, X31, 832
	693 Move X1, X31
	694 Call RenderBlocks.Dispose, X0
	695 Compare X20, 0
	696 JumpIfNotEqual {759}
	697 Compare W27, 0
	698 JumpIfEqual {705}
	699 Add X0, X31, 880
	700 Move X1, X31
	701 Call ProfilingScope.Dispose, X0
	702 NotImplemented "Instruction CMP not yet implemented."
	703 Compare W27, 0
	704 JumpIfEqual {708}
	705 Add X0, X31, 880
	706 Move X1, X31
	707 Call ProfilingScope.Dispose, X0
	708 Move X8, 0x703000
	709 Move X8, [X8+3200]
	710 Move X0, [X8]
	711 Move W8, [X0+224]
	712 Compare W8, 0
	713 JumpIfNotEqual {715}
	714 Call 0x1C17DFC
	715 Add X0, X31, 888
	716 Move X1, X19
	717 Move X2, X31
	718 Call ScriptableRenderContext.ExecuteCommandBuffer, X0, X1
	719 Move X0, [X28]
	720 Move W8, [X0+224]
	721 Compare W8, 0
	722 JumpIfNotEqual {724}
	723 Call 0x1C17DFC
	724 Move X0, X19
	725 Move X1, X31
	726 Call CommandBufferPool.Release, X0
	727 Add X31, X31, 960
	728 Move X20, [X31+112]
	729 Move X19, [X31+120]
	730 Move X22, [X31+96]
	731 Move X21, [X31+104]
	732 Move X24, [X31+80]
	733 Move X23, [X31+88]
	734 Move X26, [X31+64]
	735 Move X25, [X31+72]
	736 Move X28, [X31+48]
	737 Move X27, [X31+56]
	738 Move X29, [X31+32]
	739 Move X30, [X31+40]
	740 Move D9, [X31+16]
	741 Move D8, [X31+24]
	742 Move V10, [X31+128]
	743 Return 
	744 Call 0x1C17F20
	745 Call 0x1C17F20
	746 Call 0x1C17F20
	747 Call 0x1C17F20
	748 Call 0x1C17F20
	749 Call 0x1C17F20
	750 Move X0, X24
	751 Call 0x1C17F18
	752 Call 0x1C17F20
	753 Move X0, X25
	754 Call 0x1C17F18
	755 Move X0, X25
	756 Call 0x1C17F18
	757 Move X0, X24
	758 Call 0x1C17F18
	759 Move X0, X20
	760 Call 0x1C17F18
	761 Move X0, X23
	762 Call 0x1C17F18
	763 Move X0, X24
	764 Call 0x1C17F18
	765 Call 0x1C17F20
	766 Move X0, X23
	767 Call 0x1C17F18
	768 Move X0, X23
	769 Call 0x1C17F18
	770 Move X0, X23
	771 Call 0x1C17F18
	772 Call 0x1C17F20
	773 Move X24, X1
	774 Move X28, X0
	775 NotImplemented "Instruction CMP not yet implemented."
	776 Move X0, X28
	777 Call 0x3EB2AD0
	778 Move X23, [X0]
	779 Call 0x3EB2AE0
	780 Move X28, 0x703000
	781 Move X28, [X28+3360]
	782 Move X23, X31
	783 Add X0, X31, 768
	784 Move X1, X31
	785 Call ProfilingScope.Dispose, X0
	786 Compare X23, 0
	787 JumpIfEqual {927}
	788 Move X0, X23
	789 Call 0x1C17F18
	790 Move X24, X1
	791 Move X28, X0
	792 Move X24, X1
	793 Move X28, X0
	794 NotImplemented "Instruction CMP not yet implemented."
	795 Move X0, X28
	796 Call 0x3EB2AD0
	797 Move X23, [X0]
	798 Call 0x3EB2AE0
	799 Move X28, 0x703000
	800 Move X28, [X28+3360]
	801 Move W27, W31
	802 Move X23, X31
	803 Add X0, X31, 776
	804 Move X1, X31
	805 Call ProfilingScope.Dispose, X0
	806 Compare X23, 0
	807 JumpIfEqual {927}
	808 Move X0, X23
	809 Call 0x1C17F18
	810 Move X24, X1
	811 Move X28, X0
	812 Move X24, X1
	813 Move X28, X0
	814 NotImplemented "Instruction CMP not yet implemented."
	815 Move X0, X28
	816 Call 0x3EB2AD0
	817 Move X23, [X0]
	818 Call 0x3EB2AE0
	819 Move X28, 0x703000
	820 Move X28, [X28+3360]
	821 Move W27, W31
	822 Move X23, X31
	823 Add X0, X31, 784
	824 Move X1, X31
	825 Call ProfilingScope.Dispose, X0
	826 Compare X23, 0
	827 JumpIfEqual {927}
	828 Move X0, X23
	829 Call 0x1C17F18
	830 Move X24, X1
	831 Move X28, X0
	832 Move X24, X1
	833 Move X28, X0
	834 NotImplemented "Instruction CMP not yet implemented."
	835 Move X0, X28
	836 Call 0x3EB2AD0
	837 Move X8, [X0]
	838 Move [X31+968], X8
	839 Call 0x3EB2AE0
	840 Move X28, 0x703000
	841 Move X24, [X31+968]
	842 Move X28, [X28+3360]
	843 Move W27, W31
	844 Move [X31+968], X31
	845 Add X0, X31, 792
	846 Move X1, X31
	847 Call ProfilingScope.Dispose, X0
	848 Move X8, [X31+968]
	849 Compare X8, 0
	850 JumpIfEqual {927}
	851 Move X0, [X31+968]
	852 Call 0x1C17F18
	853 Move X24, X1
	854 Move X28, X0
	855 Move X24, X1
	856 Move X28, X0
	857 NotImplemented "Instruction CMP not yet implemented."
	858 Move X0, X28
	859 Call 0x3EB2AD0
	860 Move X23, [X0]
	861 Call 0x3EB2AE0
	862 Move X28, 0x703000
	863 Move X28, [X28+3360]
	864 Move W27, W31
	865 Move X23, X31
	866 Add X0, X31, 824
	867 Move X1, X31
	868 Call ProfilingScope.Dispose, X0
	869 Compare X23, 0
	870 JumpIfEqual {927}
	871 Move X0, X23
	872 Call 0x1C17F18
	873 Move X24, X1
	874 Move X28, X0
	875 Move X24, X1
	876 NotImplemented "Instruction CMP not yet implemented."
	877 Move X28, X0
	878 Move X0, X28
	879 Call 0x3EB2AD0
	880 Move X8, [X0]
	881 Move [X31+968], X8
	882 Call 0x3EB2AE0
	883 Move X28, 0x703000
	884 Move X24, [X31+968]
	885 Move X28, [X28+3360]
	886 Move W27, W31
	887 Move [X31+968], X31
	888 Add X0, X31, 824
	889 Move X1, X31
	890 Call ProfilingScope.Dispose, X0
	891 Move X8, [X31+968]
	892 Compare X8, 0
	893 JumpIfEqual {927}
	894 Move X0, [X31+968]
	895 Call 0x1C17F18
	896 Move X24, X1
	897 Move X28, X0
	898 Move X24, X1
	899 Move X28, X0
	900 Move X24, X1
	901 NotImplemented "Instruction CMP not yet implemented."
	902 Move X28, X0
	903 Move X0, X28
	904 Call 0x3EB2AD0
	905 Move X8, [X0]
	906 Move [X31+968], X8
	907 Call 0x3EB2AE0
	908 Move X28, 0x703000
	909 Move X24, [X31+968]
	910 Move X28, [X28+3360]
	911 Move W27, W31
	912 Move [X31+968], X31
	913 Add X0, X31, 824
	914 Move X1, X31
	915 Call ProfilingScope.Dispose, X0
	916 Move X8, [X31+968]
	917 Compare X8, 0
	918 JumpIfEqual {972}
	919 Move X0, [X31+968]
	920 Call 0x1C17F18
	921 Move X24, X1
	922 Move X28, X0
	923 Move X24, X1
	924 Move X28, X0
	925 Move X24, X1
	926 Move X28, X0
	927 NotImplemented "Instruction CMP not yet implemented."
	928 Move X0, X28
	929 Call 0x3EB2AD0
	930 Move X20, [X0]
	931 Call 0x3EB2AE0
	932 Move X28, 0x703000
	933 Move X28, [X28+3360]
	934 Move W27, W31
	935 Move X20, X31
	936 Add X0, X31, 832
	937 Move X1, X31
	938 Call RenderBlocks.Dispose, X0
	939 Compare X20, 0
	940 JumpIfEqual {972}
	941 Move X0, X20
	942 Call 0x1C17F18
	943 Move X24, X1
	944 Move X28, X0
	945 Move X24, X1
	946 Move X28, X0
	947 NotImplemented "Instruction CMP not yet implemented."
	948 Move X0, X28
	949 Call 0x3EB2AD0
	950 Move X25, [X0]
	951 Call 0x3EB2AE0
	952 Move X25, X31
	953 Move X1, [X27]
	954 Add X0, X31, 800
	955 Call Enumerator<Object>.Dispose, X0
	956 Compare X25, 0
	957 JumpIfNotEqual {987}
	958 NotImplemented "Instruction CMP not yet implemented."
	959 Move X0, X28
	960 Call 0x3EB2AD0
	961 Move X25, [X0]
	962 Call 0x3EB2AE0
	963 Move X28, 0x703000
	964 Move X28, [X28+3360]
	965 Move W27, W31
	966 Move X25, X31
	967 Add X0, X31, 824
	968 Move X1, X31
	969 Call ProfilingScope.Dispose, X0
	970 Compare X25, 0
	971 JumpIfNotEqual {989}
	972 NotImplemented "Instruction CMP not yet implemented."
	973 Move X0, X28
	974 Call 0x3EB2AD0
	975 Move X20, [X0]
	976 Call 0x3EB2AE0
	977 Add X0, X31, 880
	978 Move X1, X31
	979 Call ProfilingScope.Dispose, X0
	980 Move X28, 0x703000
	981 Move X28, [X28+3360]
	982 Compare X20, 0
	983 JumpIfEqual {708}
	984 Move X0, X20
	985 Call 0x1C17F18
	986 Move X20, X31
	987 Move X0, X25
	988 Call 0x1C17F18
	989 Move X0, X25
	990 Call 0x1C17F18
	991 Move X24, X1
	992 Move X28, X0
	993 Move X24, X1
	994 Move X28, X0
	995 Move X28, X0
	996 Add X0, X31, 880
	997 Move X1, X31
	998 Call ProfilingScope.Dispose, X0
	999 Compare X20, 0
	1000 JumpIfNotEqual {1003}
	1001 Move X0, X28
	1002 Call 0x1D2D690
	1003 Move X0, X20
	1004 Call 0x1C17F18
	1005 Call 0x1991590

Method: System.Void EnqueuePass(UnityEngine.Rendering.Universal.ScriptableRenderPass pass)

Disassembly:
	0x03A4F96C BL 0x3A93294
	0x03A4F970 TBZ X0, 0x0, 0x3A4F9AC
	0x03A4F974 LDRB W8, [X21 + 0x70]
	0x03A4F978 CBZ W8, 0x3A4F9AC
	0x03A4F97C LDR X3, [X31 + 0x940]
	0x03A4F980 LDR X4, [X31 + 0x910]
	0x03A4F984 LDR V0, [X31 + 0x900]
	0x03A4F988 LDR V1, [X31 + 0x904]
	0x03A4F98C LDR V2, [X31 + 0x908]
	0x03A4F990 LDR V3, [X31 + 0x90C]
	0x03A4F994 MOV X0, X22
	0x03A4F998 MOV X1, X21
	0x03A4F99C MOV X2, X20
	0x03A4F9A0 MOV W5, W23
	0x03A4F9A4 BL 0x3A47834
	0x03A4F9A8 B 0x3A507B4
	0x03A4F9AC MOV X22, X31
	0x03A4F9B0 ADD X19, X31, 0x120
	0x03A4F9B4 MOVZ W24, 0x20
	0x03A4F9B8 LDR X0, [X28]
	0x03A4F9BC LDR W8, [X0 + 0xE0]
	0x03A4F9C0 CBNZ W8, 0x3A4F9CC
	0x03A4F9C4 BL 0x1C16DFC
	0x03A4F9C8 LDR X0, [X28]
	0x03A4F9CC LDR X8, [X0 + 0xB8]
	0x03A4F9D0 LDR X8, [X8 + 0x18]
	0x03A4F9D4 CBZ X8, 0x3A507DC
	0x03A4F9D8 LDRSW X9, [X8 + 0x18]
	0x03A4F9DC CMP X22, X9
	0x03A4F9E0 B.GE 0x3A4FA84
	0x03A4F9E4 LDR X9, [X21 + 0x80]
	0x03A4F9E8 CBZ X9, 0x3A507DC
	0x03A4F9EC LDR W10, [X9 + 0x18]
	0x03A4F9F0 CMP X22, X10
	0x03A4F9F4 B.CS 0x3A507E0
	0x03A4F9F8 ADD X9, X9, X24
	0x03A4F9FC LDR X10, [X9 + 0x20]
	0x03A4FA00 LDP V1, V0, [X9]
	0x03A4FA04 STR X10, [X31 + 0x170]
	0x03A4FA08 STP V1, V0, [X31 + 0x150]
	0x03A4FA0C LDR W9, [X0 + 0xE0]
	0x03A4FA10 CBNZ W9, 0x3A4FA28
	0x03A4FA14 BL 0x1C16DFC
	0x03A4FA18 LDR X8, [X28]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x994000
	006 Move W8, [X21+423]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x707000
	014 Move X0, [X0+4000]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+423], W8
	018 Move X0, [X20+256]
	019 Compare X0, 0
	020 JumpIfEqual {53}
	021 Move X9, 0x707000
	022 Move X9, [X9+4000]
	023 Move W10, [X0+28]
	024 Move X8, [X0+16]
	025 Move X9, [X9]
	026 Add W10, W10, 1
	027 Move [X0+28], W10
	028 Compare X8, 0
	029 JumpIfEqual {53}
	030 NotImplemented "Instruction LDRSW not yet implemented."
	031 Move W11, [X8+24]
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Add W9, W10, 1
	034 Add X8, X8, X10
	035 Move [X0+24], W9
	036 Move [X8+32], X19
	037 Move X8, [X9+32]
	038 Move X1, X19
	039 Move X8, [X8+192]
	040 Move X2, [X8+112]
	041 Call List`1<Object>.AddWithResize, X0, X1
	042 Move W8, [X20+419]
	043 Compare W8, 0
	044 JumpIfEqual {48}
	045 Compare X19, 0
	046 JumpIfEqual {53}
	047 Move [X19+66], W31
	048 Move X20, [X31+16]
	049 Move X19, [X31+24]
	050 Move X30, [X31+32]
	051 Move X21, [X31+40]
	052 Return 
	053 Call 0x1C17F20

Method: UnityEngine.Rendering.ClearFlag GetCameraClearFlag(ref UnityEngine.Rendering.Universal.CameraData cameraData)

Disassembly:
	0x03A4FA1C LDR X8, [X8 + 0xB8]
	0x03A4FA20 LDR X8, [X8 + 0x18]
	0x03A4FA24 CBZ X8, 0x3A507DC
	0x03A4FA28 LDR W9, [X8 + 0x18]
	0x03A4FA2C CMP X22, X9
	0x03A4FA30 B.CS 0x3A507E0
	0x03A4FA34 ADD X8, X8, X24
	0x03A4FA38 LDP V0, V1, [X31 + 0x150]
	0x03A4FA3C LDR X9, [X31 + 0x170]
	0x03A4FA40 LDP V2, V3, [X8]
	0x03A4FA44 LDR X8, [X8 + 0x20]
	0x03A4FA48 ADD X0, X31, 0x270
	0x03A4FA4C ADD X1, X31, 0x240
	0x03A4FA50 MOV X2, X31
	0x03A4FA54 ADD X22, X22, 0x1
	0x03A4FA58 ADD X25, X24, 0x28
	0x03A4FA5C STP V0, V1, [X31 + 0x270]
	0x03A4FA60 STR X9, [X31 + 0x290]
	0x03A4FA64 STR X8, [X31 + 0x140]
	0x03A4FA68 STP V2, V3, [X31 + 0x120]
	0x03A4FA6C STP V2, V3, [X31 + 0x240]
	0x03A4FA70 STR X8, [X31 + 0x260]
	0x03A4FA74 BL 0x3C4B708
	0x03A4FA78 MOV X24, X25
	0x03A4FA7C TBZ X0, 0x0, 0x3A4F9B8
	0x03A4FA80 B 0x3A4FB08
	0x03A4FA84 ADD X8, X31, 0x120
	0x03A4FA88 ADD X0, X31, 0x940
	0x03A4FA8C MOV X1, X31
	0x03A4FA90 BL 0x3A53368
	0x03A4FA94 LDP V0, V1, [X31 + 0x120]
	0x03A4FA98 LDR X8, [X31 + 0x140]
	0x03A4FA9C LDR X0, [X28]
	0x03A4FAA0 STP V0, V1, [X31 + 0x150]
	0x03A4FAA4 STR X8, [X31 + 0x170]
	0x03A4FAA8 LDR W8, [X0 + 0xE0]
	0x03A4FAAC CBNZ W8, 0x3A4FAB8
	0x03A4FAB0 BL 0x1C16DFC
	0x03A4FAB4 LDR X0, [X28]
	0x03A4FAB8 LDR X8, [X0 + 0xB8]
	0x03A4FABC LDR X8, [X8 + 0x18]
	0x03A4FAC0 CBZ X8, 0x3A507DC
	0x03A4FAC4 LDR W9, [X8 + 0x18]
	0x03A4FAC8 CBZ W9, 0x3A507E0
	0x03A4FACC LDP V0, V1, [X8 + 0x20]
	0x03A4FAD0 LDR X8, [X8 + 0x40]
	0x03A4FAD4 LDP V2, V3, [X31 + 0x150]
	0x03A4FAD8 LDR X9, [X31 + 0x170]
	0x03A4FADC ADD X0, X31, 0x210
	0x03A4FAE0 ADD X1, X31, 0x1E0
	0x03A4FAE4 MOV X2, X31
	0x03A4FAE8 STR X8, [X31 + 0x140]
	0x03A4FAEC STP V0, V1, [X31 + 0x120]
	0x03A4FAF0 STP V2, V3, [X31 + 0x210]
	0x03A4FAF4 STR X9, [X31 + 0x230]
	0x03A4FAF8 STP V0, V1, [X31 + 0x1E0]
	0x03A4FAFC STR X8, [X31 + 0x200]
	0x03A4FB00 BL 0x3C4B708
	0x03A4FB04 TBZ X0, 0x0, 0x3A502C8
	0x03A4FB08 ADD X0, X31, 0x940
	0x03A4FB0C MOV X1, X31
	0x03A4FB10 BL 0x3A53358
	0x03A4FB14 TBZ X0, 0x0, 0x3A4FB98
	0x03A4FB18 ADD X0, X31, 0x910
	0x03A4FB1C MOV X1, X31
	0x03A4FB20 BL 0x3A53358
	0x03A4FB24 TBZ X0, 0x0, 0x3A4FB98
	0x03A4FB28 LDR X8, [X21 + 0x18]
	0x03A4FB2C CBZ X8, 0x3A507DC
	0x03A4FB30 LDR W9, [X8 + 0x18]
	0x03A4FB34 CBZ W9, 0x3A507E0
	0x03A4FB38 LDR X0, [X28]
	0x03A4FB3C LDR X22, [X31 + 0x940]
	0x03A4FB40 LDR X24, [X31 + 0x910]
	0x03A4FB44 LDR V8, [X31 + 0x900]
	0x03A4FB48 LDR V9, [X31 + 0x904]
	0x03A4FB4C LDR V11, [X31 + 0x908]
	0x03A4FB50 LDR V10, [X31 + 0x90C]
	0x03A4FB54 LDR W25, [X8 + 0x20]
	0x03A4FB58 LDR W8, [X0 + 0xE0]
	0x03A4FB5C LDR W21, [X21 + 0x20]
	0x03A4FB60 CBNZ W8, 0x3A4FB68
	0x03A4FB64 BL 0x1C16DFC
	0x03A4FB68 MOV X0, X29
	0x03A4FB6C MOV X1, X22
	0x03A4FB70 MOV X2, X24
	0x03A4FB74 MOV W3, W23
	0x03A4FB78 MOV V0.16B, V8.16B
	0x03A4FB7C MOV V1.16B, V9.16B
	0x03A4FB80 MOV V2.16B, V11.16B
	0x03A4FB84 MOV V3.16B, V10.16B
	0x03A4FB88 MOV W4, W25
	0x03A4FB8C MOV W5, W21
	0x03A4FB90 BL 0x3A50A08

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x994000
	006 Move W8, [X20+424]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x6A5000
	013 Move X0, [X0+1432]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+424], W8
	017 Move X0, [X19+192]
	018 Compare X0, 0
	019 JumpIfEqual {118}
	020 Move X1, X31
	021 Call Camera.get_clearFlags, X0
	022 Move W8, [X19+200]
	023 NotImplemented "Instruction CMP not yet implemented."
	024 Move W8, [X19+356]
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move W8, 6
	027 NotImplemented "Instruction CSEL not yet implemented."
	028 Move X8, [X19+440]
	029 Compare X8, 0
	030 JumpIfEqual {118}
	031 Move X21, [X8+224]
	032 Move W20, W0
	033 Compare X21, 0
	034 JumpIfEqual {50}
	035 Move X0, X21
	036 Move X1, X19
	037 Move X2, X31
	038 Call DebugHandler.IsActiveForCamera, X0, X1
	039 Move TEMP, X0
	040 And TEMP, TEMP, 1
	041 Compare TEMP, 1
	042 JumpIfNotEqual {50}
	043 Move X0, X21
	044 Move X1, X31
	045 Call DebugHandler.get_IsScreenClearNeeded, X0
	046 Move TEMP, X0
	047 And TEMP, TEMP, 1
	048 Compare TEMP, 1
	049 JumpIfEqual {111}
	050 NotImplemented "Instruction CMP not yet implemented."
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Move X0, X31
	053 Call RenderSettings.get_skybox
	054 Move X21, 0x6A5000
	055 Move X21, [X21+1432]
	056 Move X20, X0
	057 Move X8, [X21]
	058 Move W9, [X8+224]
	059 Compare W9, 0
	060 JumpIfNotEqual {63}
	061 Move X0, X8
	062 Call 0x1C17DFC
	063 Move X0, X20
	064 Move X1, X31
	065 Move X2, X31
	066 Call Object.op_Inequality, X0, X1
	067 Move TEMP, X0
	068 And TEMP, TEMP, 1
	069 Compare TEMP, 1
	070 JumpIfNotEqual {83}
	071 Move W8, [X19+392]
	072 Compare W8, 0
	073 JumpIfEqual {83}
	074 Move X0, [X19+376]
	075 Compare X0, 0
	076 JumpIfEqual {118}
	077 Move X1, X31
	078 Call XRPass.get_enabled, X0
	079 Move TEMP, X0
	080 And TEMP, TEMP, 1
	081 Compare TEMP, 1
	082 JumpIfEqual {111}
	083 Move X0, X31
	084 Call RenderSettings.get_skybox
	085 Move X8, [X21]
	086 Move X20, X0
	087 Move W9, [X8+224]
	088 Compare W9, 0
	089 JumpIfNotEqual {92}
	090 Move X0, X8
	091 Call 0x1C17DFC
	092 Move X0, X20
	093 Move X1, X31
	094 Move X2, X31
	095 Call Object.op_Inequality, X0, X1
	096 Move TEMP, X0
	097 And TEMP, TEMP, 1
	098 Compare TEMP, 1
	099 JumpIfNotEqual {111}
	100 Move W8, [X19+224]
	101 NotImplemented "Instruction CMP not yet implemented."
	102 Move X0, [X19+192]
	103 Compare X0, 0
	104 JumpIfEqual {118}
	105 Move S0, W31
	106 Move S1, W31
	107 Move S2, W31
	108 Move S3, 1
	109 Move X1, X31
	110 Call Camera.set_backgroundColor, X0, X1
	111 Move W0, 7
	112 Move X20, [X31+16]
	113 Move X19, [X31+24]
	114 Move X30, [X31+32]
	115 Move X21, [X31+40]
	116 Return X0
	117 Move W0, 6
	118 Call 0x1C17F20

Method: System.Void OnPreCullRenderPasses(in UnityEngine.Rendering.Universal.CameraData cameraData)

Disassembly:
	0x03A4FB94 B 0x3A4FC70
	0x03A4FB98 LDR V0, [X31 + 0x96]
	0x03A4FB9C LDR V1, [X31 + 0x95]
	0x03A4FBA0 LDR V2, [X31 + 0x94]
	0x03A4FBA4 LDR V3, [X31 + 0x93]
	0x03A4FBA8 LDR V4, [X31 + 0x91]
	0x03A4FBAC STP V1, V0, [X31 + 0x160]
	0x03A4FBB0 LDR V0, [X31 + 0x92]
	0x03A4FBB4 STP V3, V2, [X31 + 0x140]
	0x03A4FBB8 LDUR V1, [X19 + 0x48]
	0x03A4FBBC LDR X8, [X31 + 0x178]
	0x03A4FBC0 STP V4, V0, [X31 + 0x120]
	0x03A4FBC4 LDUR V0, [X19 + 0x38]
	0x03A4FBC8 LDUR V2, [X19 + 0x8]
	0x03A4FBCC LDR X9, [X31 + 0x148]
	0x03A4FBD0 STR V1, [X31 + 0x79]
	0x03A4FBD4 STR V0, [X31 + 0x78]
	0x03A4FBD8 LDUR V0, [X19 + 0x18]
	0x03A4FBDC STR X8, [X31 + 0x7A0]
	0x03A4FBE0 STR X9, [X31 + 0x110]
	0x03A4FBE4 STP V2, V0, [X31 + 0xF0]
	0x03A4FBE8 LDR X8, [X21 + 0x18]
	0x03A4FBEC CBZ X8, 0x3A507DC
	0x03A4FBF0 LDR W9, [X8 + 0x18]
	0x03A4FBF4 CBZ W9, 0x3A507E0
	0x03A4FBF8 LDR X0, [X28]
	0x03A4FBFC LDR V8, [X31 + 0x900]
	0x03A4FC00 LDR V9, [X31 + 0x904]
	0x03A4FC04 LDR V11, [X31 + 0x908]
	0x03A4FC08 LDR V10, [X31 + 0x90C]
	0x03A4FC0C LDR W22, [X8 + 0x20]
	0x03A4FC10 LDR W8, [X0 + 0xE0]
	0x03A4FC14 LDR W21, [X21 + 0x20]
	0x03A4FC18 CBNZ W8, 0x3A4FC20
	0x03A4FC1C BL 0x1C16DFC
	0x03A4FC20 LDR V0, [X31 + 0x78]
	0x03A4FC24 LDR V1, [X31 + 0x79]
	0x03A4FC28 LDP V2, V3, [X31 + 0xF0]
	0x03A4FC2C LDR X8, [X31 + 0x7A0]
	0x03A4FC30 LDR X9, [X31 + 0x110]
	0x03A4FC34 STP V0, V1, [X31 + 0xC0]
	0x03A4FC38 STP V2, V3, [X31 + 0x90]
	0x03A4FC3C ADD X1, X31, 0xC0
	0x03A4FC40 ADD X2, X31, 0x90
	0x03A4FC44 MOV X0, X29
	0x03A4FC48 MOV W3, W23
	0x03A4FC4C MOV V0.16B, V8.16B
	0x03A4FC50 MOV V1.16B, V9.16B
	0x03A4FC54 MOV V2.16B, V11.16B

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x994000
	007 Move W8, [X21+425]
	008 Move X19, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x707000
	015 Move X0, [X0+3552]
	016 Call 0x1C17CF4
	017 Move X0, 0x707000
	018 Move X0, [X0+3560]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+425], W8
	022 Move X0, [X20+264]
	023 Compare X0, 0
	024 JumpIfEqual {56}
	025 Move X22, 0x707000
	026 Move X22, [X22+3560]
	027 Move W21, W31
	028 Move W8, [X0+24]
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move X2, [X22]
	031 Move W1, W21
	032 Call List`1<Object>.get_Item, X0, X1
	033 Compare X0, 0
	034 JumpIfEqual {56}
	035 Move W8, [X0+24]
	036 Compare W8, 0
	037 JumpIfEqual {52}
	038 Move X0, [X20+264]
	039 Compare X0, 0
	040 JumpIfEqual {56}
	041 Move X2, [X22]
	042 Move W1, W21
	043 Call List`1<Object>.get_Item, X0, X1
	044 Compare X0, 0
	045 JumpIfEqual {56}
	046 Move X8, [X0]
	047 Move X1, X20
	048 Move X2, X19
	049 Move X9, [X8+408]
	050 Move X3, [X8+416]
	051 NotImplemented "Instruction BLR not yet implemented."
	052 Move X0, [X20+264]
	053 Add W21, W21, 1
	054 Compare X0, 0
	055 JumpIfNotEqual {28}
	056 Call 0x1C17F20
	057 Move X20, [X31+32]
	058 Move X19, [X31+40]
	059 Move X22, [X31+16]
	060 Move X21, [X31+24]
	061 Move X30, [X31+48]
	062 Return 

Method: System.Void AddRenderPasses(ref UnityEngine.Rendering.Universal.RenderingData renderingData)

Disassembly:
	0x03A4FC58 MOV V3.16B, V10.16B
	0x03A4FC5C MOV W4, W22
	0x03A4FC60 MOV W5, W21
	0x03A4FC64 STR X8, [X31 + 0xE0]
	0x03A4FC68 STR X9, [X31 + 0xB0]
	0x03A4FC6C BL 0x3A50D10
	0x03A4FC70 LDR X0, [X20 + 0x178]
	0x03A4FC74 CBZ X0, 0x3A507DC
	0x03A4FC78 MOV X1, X31
	0x03A4FC7C BL 0x3984C98
	0x03A4FC80 TBZ X0, 0x0, 0x3A507B4
	0x03A4FC84 ADD X8, X31, 0x120
	0x03A4FC88 ADD X0, X31, 0x940
	0x03A4FC8C MOV X1, X31
	0x03A4FC90 BL 0x3A53368
	0x03A4FC94 LDP V0, V1, [X31 + 0x120]
	0x03A4FC98 LDR X8, [X31 + 0x140]
	0x03A4FC9C STP V0, V1, [X31 + 0x150]
	0x03A4FCA0 STR X8, [X31 + 0x170]
	0x03A4FCA4 LDR X8, [X20 + 0x178]
	0x03A4FCA8 CBZ X8, 0x3A507DC
	0x03A4FCAC LDP V0, V1, [X8 + 0x30]
	0x03A4FCB0 LDR X8, [X8 + 0x50]
	0x03A4FCB4 LDP V2, V3, [X31 + 0x150]
	0x03A4FCB8 LDR X9, [X31 + 0x170]
	0x03A4FCBC ADD X0, X31, 0x60
	0x03A4FCC0 ADD X1, X31, 0x30
	0x03A4FCC4 MOV X2, X31
	0x03A4FCC8 STR X8, [X31 + 0x50]
	0x03A4FCCC STP V0, V1, [X31 + 0x30]
	0x03A4FCD0 STP V2, V3, [X31 + 0x60]
	0x03A4FCD4 STR X9, [X31 + 0x80]
	0x03A4FCD8 BL 0x3C4B708
	0x03A4FCDC AND W21, W0, 0x1
	0x03A4FCE0 MOV X0, X20
	0x03A4FCE4 MOV X1, X29
	0x03A4FCE8 MOV W2, W21
	0x03A4FCEC MOV X3, X31
	0x03A4FCF0 BL 0x3A92924
	0x03A4FCF4 MOV X0, X20
	0x03A4FCF8 MOV X1, X31
	0x03A4FCFC BL 0x3A8F13C
	0x03A4FD00 ADRP X8, 0x706000
	0x03A4FD04 LDR X8, [X8 + 0xDC8]
	0x03A4FD08 MOV X20, X0
	0x03A4FD0C LDR X8, [X8]
	0x03A4FD10 LDR W9, [X8 + 0xE0]
	0x03A4FD14 CBNZ W9, 0x3A4FD20
	0x03A4FD18 MOV X0, X8
	0x03A4FD1C BL 0x1C16DFC
	0x03A4FD20 MOV X0, X29
	0x03A4FD24 MOV X1, X20
	0x03A4FD28 MOV W2, W21
	0x03A4FD2C B 0x3A507AC
	0x03A4FD30 MOVZ W8, 0x1
	0x03A4FD34 CMP W8, 0x0
	0x03A4FD38 CSET W25, NE
	0x03A4FD3C ADD X24, X22, 0x140
	0x03A4FD40 ADD X8, X31, 0x150
	0x03A4FD44 MOV X0, X24
	0x03A4FD48 MOV X1, X31
	0x03A4FD4C BL 0x3A53368
	0x03A4FD50 LDP V0, V1, [X31 + 0x150]
	0x03A4FD54 LDR X8, [X31 + 0x170]
	0x03A4FD58 STR V0, [X31 + 0x9A]
	0x03A4FD5C STR V1, [X31 + 0x9B]
	0x03A4FD60 STR X8, [X31 + 0x9C0]
	0x03A4FD64 LDR X0, [X20 + 0x178]
	0x03A4FD68 CBZ X0, 0x3A507DC
	0x03A4FD6C MOV X1, X31
	0x03A4FD70 BL 0x3984C98
	0x03A4FD74 TBZ X0, 0x0, 0x3A4FDAC
	0x03A4FD78 LDR V0, [X31 + 0x9A]
	0x03A4FD7C LDR V1, [X31 + 0x9B]
	0x03A4FD80 LDR X8, [X31 + 0x9C0]
	0x03A4FD84 ADD X0, X31, 0x9A0
	0x03A4FD88 ADD X1, X31, 0x810
	0x03A4FD8C MOVN W3, 0x0
	0x03A4FD90 MOVN W4, 0x0
	0x03A4FD94 MOV W2, W31
	0x03A4FD98 MOV X5, X31
	0x03A4FD9C STR V0, [X31 + 0x81]
	0x03A4FDA0 STR V1, [X31 + 0x82]
	0x03A4FDA4 STR X8, [X31 + 0x830]
	0x03A4FDA8 BL 0x3C4B098
	0x03A4FDAC ADD X8, X31, 0x150
	0x03A4FDB0 MOV X0, X21
	0x03A4FDB4 BL 0x3A43A18
	0x03A4FDB8 LDP V0, V1, [X31 + 0x150]
	0x03A4FDBC LDR X8, [X31 + 0x170]
	0x03A4FDC0 LDR V2, [X31 + 0x9A]
	0x03A4FDC4 LDR V3, [X31 + 0x9B]
	0x03A4FDC8 LDR X9, [X31 + 0x9C0]
	0x03A4FDCC ADD X0, X31, 0x7E0
	0x03A4FDD0 ADD X1, X31, 0x7B0
	0x03A4FDD4 MOV X2, X31
	0x03A4FDD8 STR V0, [X31 + 0x7E]
	0x03A4FDDC STR V1, [X31 + 0x7F]
	0x03A4FDE0 STR X8, [X31 + 0x800]
	0x03A4FDE4 STR V2, [X31 + 0x7B]
	0x03A4FDE8 STR V3, [X31 + 0x7C]
	0x03A4FDEC STR X9, [X31 + 0x7D0]
	0x03A4FDF0 BL 0x3C4B6D8
	0x03A4FDF4 TBZ X0, 0x0, 0x3A4FE1C
	0x03A4FDF8 LDRB W8, [X22 + 0x1A1]
	0x03A4FDFC CBZ W8, 0x3A4FE1C
	0x03A4FE00 STRB W31, [X22 + 0x1A1]
	0x03A4FE04 LDR W8, [X21 + 0xCC]
	0x03A4FE08 EOR W8, W8, W23, 0x0
	0x03A4FE0C ANDS W31, W8, 0x6
	0x03A4FE10 CSET W9, NE
	0x03A4FE14 CBNZ W25, 0x3A4FE24
	0x03A4FE18 B 0x3A50278
	0x03A4FE1C MOV W9, W31
	0x03A4FE20 CBZ W25, 0x3A50278
	0x03A4FE24 STR W9, [X31 + 0x2C]
	0x03A4FE28 TBZ X19, 0x0, 0x3A4FF14
	0x03A4FE2C LDRB W8, [X21 + 0x42]
	0x03A4FE30 CBZ W8, 0x3A4FE58
	0x03A4FE34 LDRB W8, [X21 + 0x70]
	0x03A4FE38 CBZ W8, 0x3A4FE58
	0x03A4FE3C LDRB W8, [X22 + 0x1A4]
	0x03A4FE40 CBZ W8, 0x3A4FE58
	0x03A4FE44 MOV X0, X20
	0x03A4FE48 MOV X1, X31
	0x03A4FE4C BL 0x3A93294
	0x03A4FE50 LDR W9, [X31 + 0x2C]
	0x03A4FE54 TBNZ X0, 0x0, 0x3A4FF14
	0x03A4FE58 LDR X8, [X21 + 0x80]
	0x03A4FE5C CBZ X8, 0x3A507DC
	0x03A4FE60 LDR W9, [X8 + 0x18]
	0x03A4FE64 CMP W27, W9
	0x03A4FE68 B.CS 0x3A507E0
	0x03A4FE6C MOVZ W9, 0x28
	0x03A4FE70 SMADDL X8, X27, X9, X8
	0x03A4FE74 LDR X9, [X8 + 0x40]
	0x03A4FE78 LDP V1, V0, [X8 + 0x20]
	0x03A4FE7C ADD X8, X31, 0x780
	0x03A4FE80 MOV X0, X21
	0x03A4FE84 STR X9, [X31 + 0x170]
	0x03A4FE88 STP V1, V0, [X31 + 0x150]
	0x03A4FE8C BL 0x3A43A18
	0x03A4FE90 LDR V0, [X31 + 0x78]
	0x03A4FE94 LDR V1, [X31 + 0x79]
	0x03A4FE98 LDR X8, [X31 + 0x7A0]
	0x03A4FE9C LDR X0, [X28]
	0x03A4FEA0 STP V0, V1, [X31 + 0x120]
	0x03A4FEA4 STR X8, [X31 + 0x140]
	0x03A4FEA8 LDR V11, [X20 + 0x1D0]
	0x03A4FEAC LDR V10, [X20 + 0x1D4]
	0x03A4FEB0 LDR V8, [X20 + 0x1D8]
	0x03A4FEB4 LDR W8, [X0 + 0xE0]
	0x03A4FEB8 LDR V9, [X20 + 0x1DC]
	0x03A4FEBC CBNZ W8, 0x3A4FEC4
	0x03A4FEC0 BL 0x1C16DFC
	0x03A4FEC4 LDP V0, V1, [X31 + 0x150]
	0x03A4FEC8 LDP V2, V3, [X31 + 0x120]
	0x03A4FECC LDR X8, [X31 + 0x170]
	0x03A4FED0 LDR X9, [X31 + 0x140]
	0x03A4FED4 STR V0, [X31 + 0x75]
	0x03A4FED8 STR V1, [X31 + 0x76]
	0x03A4FEDC STR V2, [X31 + 0x72]
	0x03A4FEE0 STR V3, [X31 + 0x73]
	0x03A4FEE4 ADD X1, X31, 0x750
	0x03A4FEE8 ADD X2, X31, 0x720
	0x03A4FEEC MOVZ W3, 0x1
	0x03A4FEF0 MOV X0, X29
	0x03A4FEF4 MOV V0.16B, V11.16B
	0x03A4FEF8 MOV V1.16B, V10.16B
	0x03A4FEFC MOV V2.16B, V8.16B
	0x03A4FF00 MOV V3.16B, V9.16B
	0x03A4FF04 STR X8, [X31 + 0x770]
	0x03A4FF08 STR X9, [X31 + 0x740]
	0x03A4FF0C BL 0x3A44760
	0x03A4FF10 LDR W9, [X31 + 0x2C]
	0x03A4FF14 LDRB W8, [X21 + 0xCC]
	0x03A4FF18 TBZ X8, 0x0, 0x3A50278
	0x03A4FF1C LDR X27, [X21 + 0x80]
	0x03A4FF20 ADD X8, X31, 0x120
	0x03A4FF24 MOV X0, X26
	0x03A4FF28 MOV X1, X31
	0x03A4FF2C BL 0x3A53368

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X22, 0x994000
	009 Move X21, 0x707000
	010 Move W8, [X22+426]
	011 Move X21, [X21+3376]
	012 Move X20, X1
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {41}
	018 Move X0, 0x707000
	019 Move X0, [X0+4008]
	020 Call 0x1C17CF4
	021 Move X0, 0x707000
	022 Move X0, [X0+3552]
	023 Call 0x1C17CF4
	024 Move X0, 0x706000
	025 Move X0, [X0+2312]
	026 Call 0x1C17CF4
	027 Move X0, 0x707000
	028 Move X0, [X0+3560]
	029 Call 0x1C17CF4
	030 Move X0, 0x706000
	031 Move X0, [X0+2320]
	032 Call 0x1C17CF4
	033 Move X0, 0x707000
	034 Move X0, [X0+3376]
	035 Call 0x1C17CF4
	036 Move X0, 0x706000
	037 Move X0, [X0+2248]
	038 Call 0x1C17CF4
	039 Move W8, 1
	040 Move [X22+426], W8
	041 Move X0, [X21]
	042 Move [X31+8], W31
	043 Move W8, [X0+224]
	044 Compare W8, 0
	045 JumpIfNotEqual {48}
	046 Call 0x1C17DFC
	047 Move X0, [X21]
	048 Move X8, [X0+184]
	049 Add X0, X31, 8
	050 Move X1, X31
	051 Move X3, X31
	052 Move X2, [X8+72]
	053 Call ProfilingScope..ctor, X0, X1, X2
	054 Move X8, [X19+264]
	055 Compare X8, 0
	056 JumpIfEqual {108}
	057 Move X22, 0x707000
	058 Move X22, [X22+3560]
	059 Move W21, W31
	060 Move W23, 1
	061 Move W9, [X8+24]
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Move X2, [X22]
	064 Move X0, X8
	065 Move W1, W21
	066 Call List`1<Object>.get_Item, X0, X1
	067 Compare X0, 0
	068 JumpIfEqual {160}
	069 Move W8, [X0+24]
	070 Compare W8, 0
	071 JumpIfEqual {104}
	072 Move X0, [X19+264]
	073 Compare X0, 0
	074 JumpIfEqual {164}
	075 Move X2, [X22]
	076 Move W1, W21
	077 Call List`1<Object>.get_Item, X0, X1
	078 Compare X0, 0
	079 JumpIfEqual {161}
	080 Move X8, [X0]
	081 Move X9, [X8+456]
	082 Move X1, [X8+464]
	083 NotImplemented "Instruction BLR not yet implemented."
	084 Move TEMP, X0
	085 And TEMP, TEMP, 1
	086 Compare TEMP, 1
	087 JumpIfEqual {89}
	088 Move [X19+419], W23
	089 Move X0, [X19+264]
	090 Compare X0, 0
	091 JumpIfEqual {163}
	092 Move X2, [X22]
	093 Move W1, W21
	094 Call List`1<Object>.get_Item, X0, X1
	095 Compare X0, 0
	096 JumpIfEqual {162}
	097 Move X8, [X0]
	098 Move X9, [X8+424]
	099 Move X3, [X8+432]
	100 Move X1, X19
	101 Move X2, X20
	102 NotImplemented "Instruction BLR not yet implemented."
	103 Move [X19+419], W31
	104 Move X8, [X19+264]
	105 Add W21, W21, 1
	106 Compare X8, 0
	107 JumpIfNotEqual {61}
	108 Call 0x1C17F20
	109 Move X8, [X19+256]
	110 Compare X8, 0
	111 JumpIfEqual {166}
	112 Move W21, [X8+24]
	113 Subtract W20, W21, 1
	114 Move X22, 0x706000
	115 Move X23, 0x707000
	116 Move X22, [X22+2320]
	117 Move X23, [X23+4008]
	118 Move X2, [X22]
	119 Move X0, X8
	120 Move W1, W20
	121 Call List`1<Object>.get_Item, X0, X1
	122 Compare X0, 0
	123 JumpIfNotEqual {130}
	124 Move X0, [X19+256]
	125 Compare X0, 0
	126 JumpIfEqual {165}
	127 Move X2, [X23]
	128 Move W1, W20
	129 Call List`1<Object>.RemoveAt, X0, X1
	130 Subtract W20, W20, 1
	131 Move X8, [X19+256]
	132 Compare X8, 0
	133 JumpIfNotEqual {118}
	134 Call 0x1C17F20
	135 NotImplemented "Instruction CMP not yet implemented."
	136 Move W8, [X19+248]
	137 Compare W8, 0
	138 JumpIfNotEqual {149}
	139 Move X19, 0x706000
	140 Move X19, [X19+2248]
	141 Move X0, [X19]
	142 Move W8, [X0+224]
	143 Compare W8, 0
	144 JumpIfNotEqual {147}
	145 Call 0x1C17DFC
	146 Move X0, [X19]
	147 Move X8, [X0+184]
	148 Move [X8+8], W31
	149 Add X0, X31, 8
	150 Move X1, X31
	151 Call ProfilingScope.Dispose, X0
	152 Move X20, [X31+48]
	153 Move X19, [X31+56]
	154 Move X22, [X31+32]
	155 Move X21, [X31+40]
	156 Move X30, [X31+16]
	157 Move X23, [X31+24]
	158 Add X31, X31, 64
	159 Return 
	160 Call 0x1C17F20
	161 Call 0x1C17F20
	162 Call 0x1C17F20
	163 Call 0x1C17F20
	164 Call 0x1C17F20
	165 Call 0x1C17F20
	166 Call 0x1C17F20
	167 Move X19, X0
	168 NotImplemented "Instruction CMP not yet implemented."
	169 Move X0, X19
	170 Call 0x3EB2AD0
	171 Move X20, [X0]
	172 Call 0x3EB2AE0
	173 Add X0, X31, 8
	174 Move X1, X31
	175 Call ProfilingScope.Dispose, X0
	176 Compare X20, 0
	177 JumpIfEqual {152}
	178 Move X0, X20
	179 Call 0x1C17F18
	180 Move X20, X31
	181 Move X19, X0
	182 Add X0, X31, 8
	183 Move X1, X31
	184 Call ProfilingScope.Dispose, X0
	185 Compare X20, 0
	186 JumpIfNotEqual {189}
	187 Move X0, X19
	188 Call 0x1D2D690
	189 Move X0, X20
	190 Call 0x1C17F18
	191 Call 0x1991590

Method: System.Void SetupRenderPasses(in UnityEngine.Rendering.Universal.RenderingData renderingData)

Disassembly:
	0x03A4EC78 MOV X20, X1
	0x03A4EC7C MOV X19, X0
	0x03A4EC80 TBNZ X8, 0x0, 0x3A4ECE0
	0x03A4EC84 ADRP X0, 0x707000
	0x03A4EC88 LDR X0, [X0 + 0xFA8]
	0x03A4EC8C BL 0x1C16CF4
	0x03A4EC90 ADRP X0, 0x707000
	0x03A4EC94 LDR X0, [X0 + 0xDE0]
	0x03A4EC98 BL 0x1C16CF4
	0x03A4EC9C ADRP X0, 0x706000
	0x03A4ECA0 LDR X0, [X0 + 0x908]
	0x03A4ECA4 BL 0x1C16CF4
	0x03A4ECA8 ADRP X0, 0x707000
	0x03A4ECAC LDR X0, [X0 + 0xDE8]
	0x03A4ECB0 BL 0x1C16CF4
	0x03A4ECB4 ADRP X0, 0x706000
	0x03A4ECB8 LDR X0, [X0 + 0x910]
	0x03A4ECBC BL 0x1C16CF4
	0x03A4ECC0 ADRP X0, 0x707000
	0x03A4ECC4 LDR X0, [X0 + 0xD30]
	0x03A4ECC8 BL 0x1C16CF4
	0x03A4ECCC ADRP X0, 0x706000
	0x03A4ECD0 LDR X0, [X0 + 0x8C8]
	0x03A4ECD4 BL 0x1C16CF4
	0x03A4ECD8 MOVZ W8, 0x1
	0x03A4ECDC STRB W8, [X22 + 0x1AA]
	0x03A4ECE0 LDR X0, [X21]
	0x03A4ECE4 STRB W31, [X31 + 0x8]
	0x03A4ECE8 LDR W8, [X0 + 0xE0]
	0x03A4ECEC CBNZ W8, 0x3A4ECF8
	0x03A4ECF0 BL 0x1C16DFC
	0x03A4ECF4 LDR X0, [X21]
	0x03A4ECF8 LDR X8, [X0 + 0xB8]
	0x03A4ECFC ADD X0, X31, 0x8
	0x03A4ED00 MOV X1, X31
	0x03A4ED04 MOV X3, X31
	0x03A4ED08 LDR X2, [X8 + 0x48]
	0x03A4ED0C BL 0x39B1DB0
	0x03A4ED10 LDR X8, [X19 + 0x108]
	0x03A4ED14 CBZ X8, 0x3A4EDB8
	0x03A4ED18 ADRP X22, 0x707000
	0x03A4ED1C LDR X22, [X22 + 0xDE8]
	0x03A4ED20 MOV W21, W31
	0x03A4ED24 MOVZ W23, 0x1
	0x03A4ED28 LDR W9, [X8 + 0x18]
	0x03A4ED2C CMP W21, W9
	0x03A4ED30 B.GE 0x3A4EDBC
	0x03A4ED34 LDR X2, [X22]
	0x03A4ED38 MOV X0, X8
	0x03A4ED3C MOV W1, W21
	0x03A4ED40 BL 0x301BCCC
	0x03A4ED44 CBZ X0, 0x3A4EE70
	0x03A4ED48 LDRB W8, [X0 + 0x18]
	0x03A4ED4C CBZ W8, 0x3A4EDAC
	0x03A4ED50 LDR X0, [X19 + 0x108]
	0x03A4ED54 CBZ X0, 0x3A4EE80
	0x03A4ED58 LDR X2, [X22]
	0x03A4ED5C MOV W1, W21
	0x03A4ED60 BL 0x301BCCC
	0x03A4ED64 CBZ X0, 0x3A4EE74
	0x03A4ED68 LDR X8, [X0]
	0x03A4ED6C LDP X9, X1, [X8 + 0x1C8]
	0x03A4ED70 BLR X9
	0x03A4ED74 TBNZ X0, 0x0, 0x3A4ED7C
	0x03A4ED78 STRB W23, [X19 + 0x1A3]
	0x03A4ED7C LDR X0, [X19 + 0x108]
	0x03A4ED80 CBZ X0, 0x3A4EE7C
	0x03A4ED84 LDR X2, [X22]
	0x03A4ED88 MOV W1, W21
	0x03A4ED8C BL 0x301BCCC
	0x03A4ED90 CBZ X0, 0x3A4EE78
	0x03A4ED94 LDR X8, [X0]
	0x03A4ED98 LDP X9, X3, [X8 + 0x1A8]
	0x03A4ED9C MOV X1, X19
	0x03A4EDA0 MOV X2, X20
	0x03A4EDA4 BLR X9
	0x03A4EDA8 STRB W31, [X19 + 0x1A3]
	0x03A4EDAC LDR X8, [X19 + 0x108]
	0x03A4EDB0 ADD W21, W21, 0x1
	0x03A4EDB4 CBNZ X8, 0x3A4ED28
	0x03A4EDB8 BL 0x1C16F20
	0x03A4EDBC LDR X8, [X19 + 0x100]
	0x03A4EDC0 CBZ X8, 0x3A4EE88
	0x03A4EDC4 LDR W21, [X8 + 0x18]
	0x03A4EDC8 SUBS W20, W21, 0x1
	0x03A4EDCC B.MI 0x3A4EE50
	0x03A4EDD0 ADRP X22, 0x706000
	0x03A4EDD4 ADRP X23, 0x707000
	0x03A4EDD8 LDR X22, [X22 + 0x910]
	0x03A4EDDC LDR X23, [X23 + 0xFA8]
	0x03A4EDE0 LDR X2, [X22]
	0x03A4EDE4 MOV X0, X8
	0x03A4EDE8 MOV W1, W20
	0x03A4EDEC BL 0x301BCCC
	0x03A4EDF0 CBNZ X0, 0x3A4EE08
	0x03A4EDF4 LDR X0, [X19 + 0x100]
	0x03A4EDF8 CBZ X0, 0x3A4EE84
	0x03A4EDFC LDR X2, [X23]
	0x03A4EE00 MOV W1, W20
	0x03A4EE04 BL 0x301DA48
	0x03A4EE08 SUBS W20, W20, 0x1
	0x03A4EE0C B.MI 0x3A4EE1C
	0x03A4EE10 LDR X8, [X19 + 0x100]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x995000
	007 Move X21, 0x708000
	008 Move W8, [X22+427]
	009 Move X21, [X21+3376]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {27}
	016 Move X0, 0x708000
	017 Move X0, [X0+3552]
	018 Call 0x1C17CF4
	019 Move X0, 0x708000
	020 Move X0, [X0+3560]
	021 Call 0x1C17CF4
	022 Move X0, 0x708000
	023 Move X0, [X0+3376]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X22+427], W8
	027 Move X0, [X21]
	028 Move [X31+8], W31
	029 Move W8, [X0+224]
	030 Compare W8, 0
	031 JumpIfNotEqual {34}
	032 Call 0x1C17DFC
	033 Move X0, [X21]
	034 Move X8, [X0+184]
	035 Add X0, X31, 8
	036 Move X1, X31
	037 Move X3, X31
	038 Move X2, [X8+80]
	039 Call ProfilingScope..ctor, X0, X1, X2
	040 Move X0, [X20+264]
	041 Compare X0, 0
	042 JumpIfEqual {74}
	043 Move X22, 0x708000
	044 Move X22, [X22+3560]
	045 Move W21, W31
	046 Move W8, [X0+24]
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Move X2, [X22]
	049 Move W1, W21
	050 Call List`1<Object>.get_Item, X0, X1
	051 Compare X0, 0
	052 JumpIfEqual {84}
	053 Move W8, [X0+24]
	054 Compare W8, 0
	055 JumpIfEqual {70}
	056 Move X0, [X20+264]
	057 Compare X0, 0
	058 JumpIfEqual {86}
	059 Move X2, [X22]
	060 Move W1, W21
	061 Call List`1<Object>.get_Item, X0, X1
	062 Compare X0, 0
	063 JumpIfEqual {85}
	064 Move X8, [X0]
	065 Move X9, [X8+440]
	066 Move X3, [X8+448]
	067 Move X1, X20
	068 Move X2, X19
	069 NotImplemented "Instruction BLR not yet implemented."
	070 Move X0, [X20+264]
	071 Add W21, W21, 1
	072 Compare X0, 0
	073 JumpIfNotEqual {46}
	074 Call 0x1C17F20
	075 Add X0, X31, 8
	076 Move X1, X31
	077 Call ProfilingScope.Dispose, X0
	078 Move X20, [X31+32]
	079 Move X19, [X31+40]
	080 Move X22, [X31+16]
	081 Move X21, [X31+24]
	082 Move X30, [X31+48]
	083 Return 
	084 Call 0x1C17F20
	085 Call 0x1C17F20
	086 Call 0x1C17F20
	087 Move X19, X0
	088 NotImplemented "Instruction CMP not yet implemented."
	089 Move X0, X19
	090 Call 0x3EB2AD0
	091 Move X20, [X0]
	092 Call 0x3EB2AE0
	093 Add X0, X31, 8
	094 Move X1, X31
	095 Call ProfilingScope.Dispose, X0
	096 Compare X20, 0
	097 JumpIfEqual {78}
	098 Move X0, X20
	099 Call 0x1C17F18
	100 Move X20, X31
	101 Move X19, X0
	102 Add X0, X31, 8
	103 Move X1, X31
	104 Call ProfilingScope.Dispose, X0
	105 Compare X20, 0
	106 JumpIfNotEqual {109}
	107 Move X0, X19
	108 Call 0x1D2D690
	109 Move X0, X20
	110 Call 0x1C17F18
	111 Call 0x1991590

Method: System.Void ClearRenderingState(UnityEngine.Rendering.CommandBuffer cmd)

Disassembly:
	0x03A4EFD0 B.HI 0x3A4EFE8
	0x03A4EFD4 CBZ X19, 0x3A4F200
	0x03A4EFD8 MOVZ W1, 0x1
	0x03A4EFDC MOV X0, X19
	0x03A4EFE0 MOV X2, X31
	0x03A4EFE4 BL 0x3C4D910
	0x03A4EFE8 ADRP X23, 0x707000
	0x03A4EFEC LDR X23, [X23 + 0xF08]
	0x03A4EFF0 LDR X0, [X23]
	0x03A4EFF4 LDR W8, [X0 + 0xE0]
	0x03A4EFF8 CBNZ W8, 0x3A4F004
	0x03A4EFFC BL 0x1C16DFC
	0x03A4F000 LDR X0, [X23]
	0x03A4F004 LDR X8, [X0 + 0xB8]
	0x03A4F008 LDR X2, [X8 + 0x8]
	0x03A4F00C STRB W31, [X31 + 0x10]
	0x03A4F010 ADD X0, X31, 0x10
	0x03A4F014 MOV X1, X31
	0x03A4F018 MOV X3, X31
	0x03A4F01C BL 0x39B1DB0
	0x03A4F020 LDRB W8, [X31 + 0x10]
	0x03A4F024 ADD X23, X20, 0x18
	0x03A4F028 STRB W8, [X31 + 0x18]
	0x03A4F02C MOV X0, X22
	0x03A4F030 MOV X1, X19
	0x03A4F034 MOV X2, X21
	0x03A4F038 MOV X3, X23
	0x03A4F03C BL 0x3A4F318
	0x03A4F040 MOV X24, X31
	0x03A4F044 MOVZ W25, 0x3
	0x03A4F048 ADD X0, X31, 0x18
	0x03A4F04C MOV X1, X31
	0x03A4F050 BL 0x39B1DB4
	0x03A4F054 CBNZ X24, 0x3A4F1EC
	0x03A4F058 CMP W25, 0x3
	0x03A4F05C B.EQ 0x3A4F064
	0x03A4F060 CBNZ W25, 0x3A4F1C0
	0x03A4F064 ADRP X24, 0x701000
	0x03A4F068 LDR X24, [X24 + 0xC80]
	0x03A4F06C LDR X0, [X24]
	0x03A4F070 LDR W8, [X0 + 0xE0]
	0x03A4F074 CBNZ W8, 0x3A4F07C
	0x03A4F078 BL 0x1C16DFC
	0x03A4F07C ADD X0, X31, 0x28
	0x03A4F080 MOV X1, X19
	0x03A4F084 MOV X2, X31
	0x03A4F088 BL 0x3C58FE4
	0x03A4F08C CBZ X19, 0x3A4F1F4
	0x03A4F090 MOV X0, X19
	0x03A4F094 MOV X1, X31
	0x03A4F098 BL 0x3C4C310
	0x03A4F09C LDRB W8, [X21 + 0x42]
	0x03A4F0A0 CBZ W8, 0x3A4F0E0
	0x03A4F0A4 LDRB W8, [X21 + 0x70]
	0x03A4F0A8 CBZ W8, 0x3A4F0E0
	0x03A4F0AC LDRB W8, [X22 + 0x1A4]
	0x03A4F0B0 CBZ W8, 0x3A4F0E0
	0x03A4F0B4 MOV X0, X23
	0x03A4F0B8 MOV X1, X31
	0x03A4F0BC BL 0x3A93294
	0x03A4F0C0 TBZ X0, 0x0, 0x3A4F0E0
	0x03A4F0C4 LDR X1, [X31 + 0x28]
	0x03A4F0C8 MOV X0, X22
	0x03A4F0CC MOV X2, X21
	0x03A4F0D0 MOV X3, X23
	0x03A4F0D4 MOV X4, X20
	0x03A4F0D8 BL 0x3A48568
	0x03A4F0DC B 0x3A4F124
	0x03A4F0E0 LDR X8, [X21]
	0x03A4F0E4 LDR X1, [X31 + 0x28]
	0x03A4F0E8 LDP X9, X3, [X8 + 0x1C8]
	0x03A4F0EC MOV X0, X21
	0x03A4F0F0 MOV X2, X20
	0x03A4F0F4 BLR X9
	0x03A4F0F8 LDR X0, [X24]
	0x03A4F0FC LDR W8, [X0 + 0xE0]
	0x03A4F100 CBNZ W8, 0x3A4F108
	0x03A4F104 BL 0x1C16DFC
	0x03A4F108 ADD X0, X31, 0x28
	0x03A4F10C MOV X1, X19
	0x03A4F110 MOV X2, X31
	0x03A4F114 BL 0x3C58FE4
	0x03A4F118 MOV X0, X19
	0x03A4F11C MOV X1, X31
	0x03A4F120 BL 0x3C4C310
	0x03A4F124 LDR X0, [X20 + 0x190]
	0x03A4F128 CBZ X0, 0x3A4F1F8
	0x03A4F12C MOV X1, X31
	0x03A4F130 BL 0x3984C98
	0x03A4F134 TBZ X0, 0x0, 0x3A4F1C0
	0x03A4F138 LDR X0, [X20 + 0x190]
	0x03A4F13C CBZ X0, 0x3A4F1FC
	0x03A4F140 MOV X1, X31
	0x03A4F144 BL 0x398841C
	0x03A4F148 TBZ X0, 0x0, 0x3A4F15C
	0x03A4F14C MOV X0, X19
	0x03A4F150 MOV W1, W31
	0x03A4F154 MOV X2, X31
	0x03A4F158 BL 0x3C4D910
	0x03A4F15C MOV X0, X23
	0x03A4F160 MOV X1, X31
	0x03A4F164 BL 0x3A8F13C
	0x03A4F168 ADRP X8, 0x706000
	0x03A4F16C LDR X8, [X8 + 0xDC8]
	0x03A4F170 MOV X20, X0
	0x03A4F174 LDR X0, [X8]
	0x03A4F178 LDR W8, [X0 + 0xE0]
	0x03A4F17C CBNZ W8, 0x3A4F184
	0x03A4F180 BL 0x1C16DFC
	0x03A4F184 MOV X0, X19
	0x03A4F188 MOV X1, X20
	0x03A4F18C MOV X2, X31
	0x03A4F190 BL 0x3A94F4C
	0x03A4F194 LDR X0, [X24]
	0x03A4F198 LDR W8, [X0 + 0xE0]
	0x03A4F19C CBNZ W8, 0x3A4F1A4
	0x03A4F1A0 BL 0x1C16DFC
	0x03A4F1A4 ADD X0, X31, 0x28
	0x03A4F1A8 MOV X1, X19
	0x03A4F1AC MOV X2, X31
	0x03A4F1B0 BL 0x3C58FE4
	0x03A4F1B4 MOV X0, X19
	0x03A4F1B8 MOV X1, X31
	0x03A4F1BC BL 0x3C4C310
	0x03A4F1C0 ADD X0, X31, 0x20
	0x03A4F1C4 MOV X1, X31
	0x03A4F1C8 BL 0x39B1DB4
	0x03A4F1CC LDP X20, X19, [X31 + 0x60]
	0x03A4F1D0 LDP X22, X21, [X31 + 0x50]
	0x03A4F1D4 LDP X24, X23, [X31 + 0x40]
	0x03A4F1D8 LDP X30, X25, [X31 + 0x30]
	0x03A4F1DC ADD X31, X31, 0x70
	0x03A4F1E0 RET
	0x03A4F1E4 BL 0x1C16F20
	0x03A4F1E8 BL 0x1C16F20
	0x03A4F1EC MOV X0, X24
	0x03A4F1F0 BL 0x1C16F18
	0x03A4F1F4 BL 0x1C16F20
	0x03A4F1F8 BL 0x1C16F20
	0x03A4F1FC BL 0x1C16F20
	0x03A4F200 BL 0x1C16F20
	0x03A4F204 B 0x3A4F2B0
	0x03A4F208 B 0x3A4F2B0
	0x03A4F20C B 0x3A4F2B0
	0x03A4F210 B 0x3A4F2B0
	0x03A4F214 B 0x3A4F2B0
	0x03A4F218 B 0x3A4F2B0
	0x03A4F21C B 0x3A4F2B0
	0x03A4F220 B 0x3A4F2B0
	0x03A4F224 B 0x3A4F2B0
	0x03A4F228 B 0x3A4F2B0
	0x03A4F22C B 0x3A4F2B0
	0x03A4F230 B 0x3A4F2B0
	0x03A4F234 B 0x3A4F2B0
	0x03A4F238 B 0x3A4F2B0
	0x03A4F23C B 0x3A4F2B0
	0x03A4F240 B 0x3A4F2B0
	0x03A4F244 MOV X25, X1
	0x03A4F248 CMP W25, 0x1
	0x03A4F24C MOV X24, X0
	0x03A4F250 B.NE 0x3A4F274
	0x03A4F254 MOV X0, X24
	0x03A4F258 BL 0x3EB1AD0
	0x03A4F25C LDR X8, [X0]
	0x03A4F260 STR X8, [X31 + 0x8]
	0x03A4F264 BL 0x3EB1AE0
	0x03A4F268 LDR X24, [X31 + 0x8]
	0x03A4F26C MOV W25, W31
	0x03A4F270 B 0x3A4F048
	0x03A4F274 STR X31, [X31 + 0x8]
	0x03A4F278 ADD X0, X31, 0x18
	0x03A4F27C MOV X1, X31
	0x03A4F280 BL 0x39B1DB4
	0x03A4F284 LDR X8, [X31 + 0x8]
	0x03A4F288 CBZ X8, 0x3A4F2B8
	0x03A4F28C LDR X0, [X31 + 0x8]
	0x03A4F290 BL 0x1C16F18
	0x03A4F294 MOV X25, X1
	0x03A4F298 MOV X24, X0
	0x03A4F29C B 0x3A4F278
	0x03A4F2A0 B 0x3A4F2B0
	0x03A4F2A4 B 0x3A4F2B0
	0x03A4F2A8 B 0x3A4F2B0
	0x03A4F2AC B 0x3A4F2B0
	0x03A4F2B0 MOV X25, X1
	0x03A4F2B4 MOV X24, X0
	0x03A4F2B8 CMP W25, 0x1
	0x03A4F2BC B.NE 0x3A4F2E8
	0x03A4F2C0 MOV X0, X24
	0x03A4F2C4 BL 0x3EB1AD0
	0x03A4F2C8 LDR X19, [X0]
	0x03A4F2CC BL 0x3EB1AE0
	0x03A4F2D0 ADD X0, X31, 0x20
	0x03A4F2D4 MOV X1, X31
	0x03A4F2D8 BL 0x39B1DB4
	0x03A4F2DC CBZ X19, 0x3A4F1CC
	0x03A4F2E0 MOV X0, X19
	0x03A4F2E4 BL 0x1C16F18
	0x03A4F2E8 MOV X19, X31
	0x03A4F2EC B 0x3A4F2F4
	0x03A4F2F0 MOV X24, X0
	0x03A4F2F4 ADD X0, X31, 0x20
	0x03A4F2F8 MOV X1, X31
	0x03A4F2FC BL 0x39B1DB4
	0x03A4F300 CBNZ X19, 0x3A4F30C
	0x03A4F304 MOV X0, X24
	0x03A4F308 BL 0x1D2C690
	0x03A4F30C MOV X0, X19
	0x03A4F310 BL 0x1C16F18
	0x03A4F314 BL 0x1990590
	0x03A4F318 STP D11, D10, [X31 - 0x80]!
	0x03A4F31C STP D9, D8, [X31 + 0x10]
	0x03A4F320 STP X29, X30, [X31 + 0x20]
	0x03A4F324 STP X28, X27, [X31 + 0x30]
	0x03A4F328 STP X26, X25, [X31 + 0x40]
	0x03A4F32C STP X24, X23, [X31 + 0x50]
	0x03A4F330 STP X22, X21, [X31 + 0x60]
	0x03A4F334 STP X20, X19, [X31 + 0x70]
	0x03A4F338 SUB X31, X31, 0x9D0
	0x03A4F33C ADRP X19, 0x993000
	0x03A4F340 ADRP X28, 0x705000
	0x03A4F344 LDRB W8, [X19 + 0x1B0]
	0x03A4F348 LDR X28, [X28 + 0x8C8]
	0x03A4F34C MOV X20, X3
	0x03A4F350 MOV X21, X2
	0x03A4F354 MOV X29, X1
	0x03A4F358 MOV X22, X0
	0x03A4F35C TBNZ X8, 0x0, 0x3A4F3B0
	0x03A4F360 ADRP X0, 0x6A4000
	0x03A4F364 LDR X0, [X0 + 0xA28]
	0x03A4F368 BL 0x1C16CF4
	0x03A4F36C ADRP X0, 0x705000
	0x03A4F370 LDR X0, [X0 + 0x10]
	0x03A4F374 BL 0x1C16CF4
	0x03A4F378 ADRP X0, 0x705000
	0x03A4F37C LDR X0, [X0 + 0x8C8]
	0x03A4F380 BL 0x1C16CF4
	0x03A4F384 ADRP X0, 0x706000
	0x03A4F388 LDR X0, [X0 + 0xDC8]
	0x03A4F38C BL 0x1C16CF4
	0x03A4F390 ADRP X0, 0x706000
	0x03A4F394 LDR X0, [X0 + 0xFB0]
	0x03A4F398 BL 0x1C16CF4
	0x03A4F39C ADRP X0, 0x706000
	0x03A4F3A0 LDR X0, [X0 + 0xFB8]
	0x03A4F3A4 BL 0x1C16CF4
	0x03A4F3A8 MOVZ W8, 0x1
	0x03A4F3AC STRB W8, [X19 + 0x1B0]
	0x03A4F3B0 LDR X0, [X28]
	0x03A4F3B4 MOVI V0.2D, 0x0
	0x03A4F3B8 STR X31, [X31 + 0x9C0]
	0x03A4F3BC STR X31, [X31 + 0x998]
	0x03A4F3C0 STR X31, [X31 + 0x990]
	0x03A4F3C4 STR X31, [X31 + 0x908]
	0x03A4F3C8 STR X31, [X31 + 0x900]
	0x03A4F3CC STR X31, [X31 + 0x8F0]
	0x03A4F3D0 STR X31, [X31 + 0x8C0]
	0x03A4F3D4 STR V0, [X31 + 0x9B]
	0x03A4F3D8 STR V0, [X31 + 0x9A]
	0x03A4F3DC STR V0, [X31 + 0x98]
	0x03A4F3E0 STR V0, [X31 + 0x97]
	0x03A4F3E4 STR V0, [X31 + 0x96]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x995000
	007 Move X20, 0x708000
	008 Move W8, [X21+428]
	009 Move X20, [X20+3376]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {74}
	015 Move X0, 0x708000
	016 Move X0, [X0+3376]
	017 Call 0x1C17CF4
	018 Move X0, 0x707000
	019 Move X0, [X0+3856]
	020 Call 0x1C17CF4
	021 Move X0, 0x707000
	022 Move X0, [X0+3864]
	023 Call 0x1C17CF4
	024 Move X0, 0x707000
	025 Move X0, [X0+3872]
	026 Call 0x1C17CF4
	027 Move X0, 0x707000
	028 Move X0, [X0+3880]
	029 Call 0x1C17CF4
	030 Move X0, 0x707000
	031 Move X0, [X0+3888]
	032 Call 0x1C17CF4
	033 Move X0, 0x707000
	034 Move X0, [X0+3896]
	035 Call 0x1C17CF4
	036 Move X0, 0x707000
	037 Move X0, [X0+3904]
	038 Call 0x1C17CF4
	039 Move X0, 0x707000
	040 Move X0, [X0+3912]
	041 Call 0x1C17CF4
	042 Move X0, 0x707000
	043 Move X0, [X0+3920]
	044 Call 0x1C17CF4
	045 Move X0, 0x707000
	046 Move X0, [X0+3928]
	047 Call 0x1C17CF4
	048 Move X0, 0x707000
	049 Move X0, [X0+3936]
	050 Call 0x1C17CF4
	051 Move X0, 0x707000
	052 Move X0, [X0+3944]
	053 Call 0x1C17CF4
	054 Move X0, 0x707000
	055 Move X0, [X0+3952]
	056 Call 0x1C17CF4
	057 Move X0, 0x707000
	058 Move X0, [X0+3960]
	059 Call 0x1C17CF4
	060 Move X0, 0x707000
	061 Move X0, [X0+3968]
	062 Call 0x1C17CF4
	063 Move X0, 0x707000
	064 Move X0, [X0+3976]
	065 Call 0x1C17CF4
	066 Move X0, 0x707000
	067 Move X0, [X0+3984]
	068 Call 0x1C17CF4
	069 Move X0, 0x707000
	070 Move X0, [X0+3992]
	071 Call 0x1C17CF4
	072 Move W8, 1
	073 Move [X21+428], W8
	074 Move X0, [X20]
	075 Move [X31+8], W31
	076 Move W8, [X0+224]
	077 Compare W8, 0
	078 JumpIfNotEqual {81}
	079 Call 0x1C17DFC
	080 Move X0, [X20]
	081 Move X8, [X0+184]
	082 Add X0, X31, 8
	083 Move X1, X31
	084 Move X3, X31
	085 Move X2, [X8+88]
	086 Call ProfilingScope..ctor, X0, X1, X2
	087 Compare X19, 0
	088 JumpIfEqual {231}
	089 Move X8, 0x707000
	090 Move X8, [X8+3936]
	091 Move X1, [X8]
	092 Move X0, X19
	093 Move X2, X31
	094 Call CommandBuffer.DisableShaderKeyword, X0, X1
	095 Move X8, 0x707000
	096 Move X8, [X8+3896]
	097 Move X1, [X8]
	098 Move X0, X19
	099 Move X2, X31
	100 Call CommandBuffer.DisableShaderKeyword, X0, X1
	101 Move X8, 0x707000
	102 Move X8, [X8+3888]
	103 Move X1, [X8]
	104 Move X0, X19
	105 Move X2, X31
	106 Call CommandBuffer.DisableShaderKeyword, X0, X1
	107 Move X8, 0x707000
	108 Move X8, [X8+3920]
	109 Move X1, [X8]
	110 Move X0, X19
	111 Move X2, X31
	112 Call CommandBuffer.DisableShaderKeyword, X0, X1
	113 Move X8, 0x707000
	114 Move X8, [X8+3904]
	115 Move X1, [X8]
	116 Move X0, X19
	117 Move X2, X31
	118 Call CommandBuffer.DisableShaderKeyword, X0, X1
	119 Move X8, 0x707000
	120 Move X8, [X8+3992]
	121 Move X1, [X8]
	122 Move X0, X19
	123 Move X2, X31
	124 Call CommandBuffer.DisableShaderKeyword, X0, X1
	125 Move X8, 0x707000
	126 Move X8, [X8+3864]
	127 Move X1, [X8]
	128 Move X0, X19
	129 Move X2, X31
	130 Call CommandBuffer.DisableShaderKeyword, X0, X1
	131 Move X8, 0x707000
	132 Move X8, [X8+3952]
	133 Move X1, [X8]
	134 Move X0, X19
	135 Move X2, X31
	136 Call CommandBuffer.DisableShaderKeyword, X0, X1
	137 Move X8, 0x707000
	138 Move X8, [X8+3968]
	139 Move X1, [X8]
	140 Move X0, X19
	141 Move X2, X31
	142 Call CommandBuffer.DisableShaderKeyword, X0, X1
	143 Move X8, 0x707000
	144 Move X8, [X8+3880]
	145 Move X1, [X8]
	146 Move X0, X19
	147 Move X2, X31
	148 Call CommandBuffer.DisableShaderKeyword, X0, X1
	149 Move X8, 0x707000
	150 Move X8, [X8+3872]
	151 Move X1, [X8]
	152 Move X0, X19
	153 Move X2, X31
	154 Call CommandBuffer.DisableShaderKeyword, X0, X1
	155 Move X8, 0x707000
	156 Move X8, [X8+3960]
	157 Move X1, [X8]
	158 Move X0, X19
	159 Move X2, X31
	160 Call CommandBuffer.DisableShaderKeyword, X0, X1
	161 Move X8, 0x707000
	162 Move X8, [X8+3912]
	163 Move X1, [X8]
	164 Move X0, X19
	165 Move X2, X31
	166 Call CommandBuffer.DisableShaderKeyword, X0, X1
	167 Move X8, 0x707000
	168 Move X8, [X8+3944]
	169 Move X1, [X8]
	170 Move X0, X19
	171 Move X2, X31
	172 Call CommandBuffer.DisableShaderKeyword, X0, X1
	173 Move X8, 0x707000
	174 Move X8, [X8+3928]
	175 Move X1, [X8]
	176 Move X0, X19
	177 Move X2, X31
	178 Call CommandBuffer.DisableShaderKeyword, X0, X1
	179 Move X8, 0x707000
	180 Move X8, [X8+3984]
	181 Move X1, [X8]
	182 Move X0, X19
	183 Move X2, X31
	184 Call CommandBuffer.DisableShaderKeyword, X0, X1
	185 Move X8, 0x707000
	186 Move X8, [X8+3976]
	187 Move X1, [X8]
	188 Move X0, X19
	189 Move X2, X31
	190 Call CommandBuffer.DisableShaderKeyword, X0, X1
	191 Move X20, 0x707000
	192 Move X20, [X20+3856]
	193 Move X0, [X20]
	194 Move W8, [X0+224]
	195 Compare W8, 0
	196 JumpIfNotEqual {199}
	197 Call 0x1C17DFC
	198 Move X0, [X20]
	199 Move X8, [X0+184]
	200 Move X21, 0x98A000
	201 Move W9, [X21+3674]
	202 Move W20, [X8]
	203 Compare W9, 0
	204 JumpIfNotEqual {210}
	205 Move X0, 0x6AC000
	206 Move X0, [X0+2464]
	207 Call 0x1C17CF4
	208 Move W8, 1
	209 Move [X21+3674], W8
	210 Move X8, 0x6AC000
	211 Move X8, [X8+2464]
	212 Move X8, [X8]
	213 Move X8, [X8+184]
	214 Move S0, [X8]
	215 Move S1, [X8+4]
	216 Move S2, [X8+8]
	217 Move S3, [X8+12]
	218 Move X0, X19
	219 Move W1, W20
	220 Move X2, X31
	221 Call CommandBuffer.SetGlobalVector, X0, X1, X2
	222 Add X0, X31, 8
	223 Move X1, X31
	224 Call ProfilingScope.Dispose, X0
	225 Move X20, [X31+32]
	226 Move X19, [X31+40]
	227 Move X30, [X31+16]
	228 Move X21, [X31+24]
	229 Add X31, X31, 48
	230 Return 
	231 Call 0x1C17F20
	232 Move X19, X0
	233 NotImplemented "Instruction CMP not yet implemented."
	234 Move X0, X19
	235 Call 0x3EB2AD0
	236 Move X20, [X0]
	237 Call 0x3EB2AE0
	238 Add X0, X31, 8
	239 Move X1, X31
	240 Call ProfilingScope.Dispose, X0
	241 Compare X20, 0
	242 JumpIfEqual {225}
	243 Move X0, X20
	244 Call 0x1C17F18
	245 Move X20, X31
	246 Move X19, X0
	247 Add X0, X31, 8
	248 Move X1, X31
	249 Call ProfilingScope.Dispose, X0
	250 Compare X20, 0
	251 JumpIfNotEqual {254}
	252 Move X0, X19
	253 Call 0x1D2D690
	254 Move X0, X20
	255 Call 0x1C17F18
	256 Call 0x1991590

Method: System.Void Clear(UnityEngine.Rendering.Universal.CameraRenderType cameraType)

Disassembly:
	0x03A4C0C0 MOV X1, X19
	0x03A4C0C4 STP V0, V1, [X31 + 0x2C0]
	0x03A4C0C8 BL 0x3EB1AC0
	0x03A4C0CC CBZ X20, 0x3A4C1BC
	0x03A4C0D0 ADD X0, X20, 0x10
	0x03A4C0D4 ADD X1, X31, 0x0
	0x03A4C0D8 MOVZ W2, 0x2B8
	0x03A4C0DC BL 0x3EB1AC0
	0x03A4C0E0 ADD X1, X19, 0x18
	0x03A4C0E4 ADD X0, X20, 0x2C8
	0x03A4C0E8 MOVZ W2, 0x210
	0x03A4C0EC BL 0x3EB1B30
	0x03A4C0F0 ADD X0, X31, 0x2C0
	0x03A4C0F4 MOV W1, W31
	0x03A4C0F8 MOV X2, X31
	0x03A4C0FC BL 0x398E404
	0x03A4C100 ADRP X21, 0x709000
	0x03A4C104 LDR X21, [X21 + 0xE10]
	0x03A4C108 LDR X8, [X21]
	0x03A4C10C LDR W9, [X8 + 0xE0]
	0x03A4C110 CBNZ W9, 0x3A4C120
	0x03A4C114 MOV X0, X8
	0x03A4C118 BL 0x1C16DFC
	0x03A4C11C LDR X8, [X21]
	0x03A4C120 LDR X9, [X8 + 0xB8]
	0x03A4C124 LDR X19, [X9 + 0x28]
	0x03A4C128 CBNZ X19, 0x3A4C180
	0x03A4C12C LDR W9, [X8 + 0xE0]
	0x03A4C130 CBNZ W9, 0x3A4C140
	0x03A4C134 MOV X0, X8
	0x03A4C138 BL 0x1C16DFC
	0x03A4C13C LDR X8, [X21]
	0x03A4C140 ADRP X9, 0x709000
	0x03A4C144 LDR X8, [X8 + 0xB8]
	0x03A4C148 LDR X9, [X9 + 0xE80]
	0x03A4C14C LDR X20, [X8]
	0x03A4C150 LDR X0, [X9]
	0x03A4C154 BL 0x1C16F10
	0x03A4C158 ADRP X8, 0x709000
	0x03A4C15C LDR X8, [X8 + 0xE98]
	0x03A4C160 MOV X19, X0
	0x03A4C164 LDR X2, [X8]
	0x03A4C168 MOV X1, X20
	0x03A4C16C MOV X3, X31
	0x03A4C170 BL 0x25C78AC
	0x03A4C174 LDR X8, [X21]
	0x03A4C178 LDR X8, [X8 + 0xB8]
	0x03A4C17C STR X19, [X8 + 0x28]
	0x03A4C180 ADRP X8, 0x709000
	0x03A4C184 LDR X8, [X8 + 0xE88]
	0x03A4C188 LDR X2, [X8]
	0x03A4C18C ADD X0, X31, 0x2C0
	0x03A4C190 MOV X1, X19
	0x03A4C194 BL 0x224107C
	0x03A4C198 ADD X0, X31, 0x2C0
	0x03A4C19C MOV X1, X31
	0x03A4C1A0 BL 0x39972C0
	0x03A4C1A4 ADD X31, X31, 0x2E0
	0x03A4C1A8 LDP X20, X19, [X31 + 0x20]
	0x03A4C1AC LDP X22, X21, [X31 + 0x10]
	0x03A4C1B0 LDP X29, X30, [X31], #0x30
	0x03A4C1B4 RET
	0x03A4C1B8 BL 0x1C16F20
	0x03A4C1BC BL 0x1C16F20
	0x03A4C1C0 B 0x3A4C1CC
	0x03A4C1C4 B 0x3A4C1CC
	0x03A4C1C8 B 0x3A4C1CC
	0x03A4C1CC MOV X19, X0
	0x03A4C1D0 CMP W1, 0x1
	0x03A4C1D4 B.NE 0x3A4C200
	0x03A4C1D8 MOV X0, X19
	0x03A4C1DC BL 0x3EB1AD0
	0x03A4C1E0 LDR X20, [X0]
	0x03A4C1E4 BL 0x3EB1AE0
	0x03A4C1E8 ADD X0, X31, 0x2C0
	0x03A4C1EC MOV X1, X31
	0x03A4C1F0 BL 0x39972C0
	0x03A4C1F4 CBZ X20, 0x3A4C1A4
	0x03A4C1F8 MOV X0, X20
	0x03A4C1FC BL 0x1C16F18
	0x03A4C200 MOV X20, X31
	0x03A4C204 B 0x3A4C20C
	0x03A4C208 MOV X19, X0
	0x03A4C20C ADD X0, X31, 0x2C0
	0x03A4C210 MOV X1, X31
	0x03A4C214 BL 0x39972C0
	0x03A4C218 CBNZ X20, 0x3A4C224
	0x03A4C21C MOV X0, X19
	0x03A4C220 BL 0x1D2C690
	0x03A4C224 MOV X0, X20
	0x03A4C228 BL 0x1C16F18
	0x03A4C22C BL 0x1990590
	0x03A4C230 STP X29, X30, [X31 - 0x30]!
	0x03A4C234 STP X22, X21, [X31 + 0x10]
	0x03A4C238 STP X20, X19, [X31 + 0x20]
	0x03A4C23C SUB X31, X31, 0x2E0
	0x03A4C240 ADRP X22, 0x996000
	0x03A4C244 ADRP X21, 0x709000
	0x03A4C248 LDRB W8, [X22 + 0x1A2]
	0x03A4C24C LDR X21, [X21 + 0xD30]
	0x03A4C250 MOV X19, X2
	0x03A4C254 MOV X20, X1
	0x03A4C258 TBNZ X8, 0x0, 0x3A4C2B8
	0x03A4C25C ADRP X0, 0x709000
	0x03A4C260 LDR X0, [X0 + 0xD30]
	0x03A4C264 BL 0x1C16CF4
	0x03A4C268 ADRP X0, 0x709000
	0x03A4C26C LDR X0, [X0 + 0xEA8]
	0x03A4C270 BL 0x1C16CF4
	0x03A4C274 ADRP X0, 0x709000
	0x03A4C278 LDR X0, [X0 + 0xEB0]
	0x03A4C27C BL 0x1C16CF4
	0x03A4C280 ADRP X0, 0x709000
	0x03A4C284 LDR X0, [X0 + 0xEB8]
	0x03A4C288 BL 0x1C16CF4
	0x03A4C28C ADRP X0, 0x709000
	0x03A4C290 LDR X0, [X0 + 0xEC0]
	0x03A4C294 BL 0x1C16CF4
	0x03A4C298 ADRP X0, 0x709000
	0x03A4C29C LDR X0, [X0 + 0xE10]
	0x03A4C2A0 BL 0x1C16CF4
	0x03A4C2A4 ADRP X0, 0x709000
	0x03A4C2A8 LDR X0, [X0 + 0xEC8]
	0x03A4C2AC BL 0x1C16CF4
	0x03A4C2B0 MOVZ W8, 0x1
	0x03A4C2B4 STRB W8, [X22 + 0x1A2]
	0x03A4C2B8 LDR X0, [X21]
	0x03A4C2BC MOVI V0.2D, 0x0
	0x03A4C2C0 STP V0, V0, [X31 + 0x2C0]
	0x03A4C2C4 STR X31, [X31 + 0x2B8]
	0x03A4C2C8 LDR W8, [X0 + 0xE0]
	0x03A4C2CC CBNZ W8, 0x3A4C2D4
	0x03A4C2D0 BL 0x1C16DFC
	0x03A4C2D4 CBZ X20, 0x3A4C414
	0x03A4C2D8 LDR X8, [X21]
	0x03A4C2DC ADRP X9, 0x709000
	0x03A4C2E0 ADRP X10, 0x709000
	0x03A4C2E4 ADD X2, X31, 0x2B8
	0x03A4C2E8 LDR X8, [X8 + 0xB8]
	0x03A4C2EC LDR X9, [X9 + 0xEC8]
	0x03A4C2F0 LDR X10, [X10 + 0xEB8]
	0x03A4C2F4 MOV X0, X20
	0x03A4C2F8 LDR X3, [X8 + 0x80]
	0x03A4C2FC LDR X1, [X9]
	0x03A4C300 LDR X4, [X10]
	0x03A4C304 ADD X8, X31, 0x0
	0x03A4C308 BL 0x2240F24
	0x03A4C30C LDP V0, V1, [X31]
	0x03A4C310 LDR X20, [X31 + 0x2B8]
	0x03A4C314 ADD X0, X31, 0x0
	0x03A4C318 MOVZ W2, 0x2B8
	0x03A4C31C MOV X1, X19
	0x03A4C320 STP V0, V1, [X31 + 0x2C0]
	0x03A4C324 BL 0x3EB1AC0
	0x03A4C328 CBZ X20, 0x3A4C418
	0x03A4C32C ADD X0, X20, 0x10

ISIL:
	001 Subtract X31, X31, 304
	002 Move [X31+224], X29
	003 Move [X31+240], X30
	004 Move [X31+248], X25
	005 Move [X31+256], X24
	006 Move [X31+264], X23
	007 Move [X31+272], X22
	008 Move [X31+280], X21
	009 Move [X31+288], X20
	010 Move [X31+296], X19
	011 Move X22, 0x997000
	012 Move X21, 0x709000
	013 Move W8, [X22+429]
	014 Move X21, [X21+2248]
	015 Move W20, W1
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {26}
	021 Move X0, 0x709000
	022 Move X0, [X0+2248]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X22+429], W8
	026 Move X0, [X21]
	027 NotImplemented "Instruction MOVI not yet implemented."
	028 Move [X31+192], V0
	029 Move [X31+200], V0
	030 Move [X31+11], V0
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {36}
	034 Call 0x1C17DFC
	035 Move X0, [X21]
	036 Move X8, [X0+184]
	037 Move W0, 2
	038 Move X1, X31
	039 Move X24, [X8+24]
	040 Add X8, X31, 88
	041 Call RenderTargetIdentifier.op_Implicit, X0
	042 NotImplemented "Instruction LDUR not yet implemented."
	043 NotImplemented "Instruction LDUR not yet implemented."
	044 Move X8, [X31+120]
	045 Move [X31+128], V0
	046 Move [X31+136], V1
	047 Move [X31+160], X8
	048 Compare X24, 0
	049 JumpIfEqual {189}
	050 Move V0, [X31+128]
	051 Move V1, [X31+144]
	052 Move X8, [X31+160]
	053 Move [X31+48], V0
	054 Move [X31+56], V1
	055 Move [X31+80], X8
	056 Move W8, [X24+24]
	057 Compare W8, 0
	058 JumpIfEqual {190}
	059 Move X8, [X31+80]
	060 Move V0, [X31+48]
	061 Move V1, [X31+64]
	062 Add X22, X31, 176
	063 Move W23, 1
	064 Move [X24+64], X8
	065 Move [X24+32], V0
	066 Move [X24+40], V1
	067 Move W24, 72
	068 Move X0, [X21]
	069 Move W8, [X0+224]
	070 Compare W8, 0
	071 JumpIfNotEqual {74}
	072 Call 0x1C17DFC
	073 Move X0, [X21]
	074 Move X8, [X0+184]
	075 Move X25, [X8+24]
	076 Compare X25, 0
	077 JumpIfEqual {189}
	078 NotImplemented "Instruction LDRSW not yet implemented."
	079 NotImplemented "Instruction CMP not yet implemented."
	080 Move W8, [X0+224]
	081 Compare W8, 0
	082 JumpIfNotEqual {87}
	083 Call 0x1C17DFC
	084 Move X8, [X21]
	085 Move X8, [X8+184]
	086 Move X25, [X8+24]
	087 Add X8, X31, 88
	088 Move W0, W31
	089 Move X1, X31
	090 Call RenderTargetIdentifier.op_Implicit, X0
	091 NotImplemented "Instruction LDUR not yet implemented."
	092 NotImplemented "Instruction LDUR not yet implemented."
	093 Move X8, [X31+120]
	094 Move [X31+128], V0
	095 Move [X31+136], V1
	096 Move [X31+160], X8
	097 Compare X25, 0
	098 JumpIfEqual {189}
	099 Move V0, [X31+128]
	100 Move V1, [X31+144]
	101 Move X8, [X31+160]
	102 Move [X31], V0
	103 Move [X31+8], V1
	104 Move [X31+32], X8
	105 Move W8, [X25+24]
	106 NotImplemented "Instruction CMP not yet implemented."
	107 Move X8, [X31+32]
	108 Move V0, [X31]
	109 Move V1, [X31+16]
	110 Add X9, X25, X24
	111 Add X23, X23, 1
	112 Add X24, X24, 40
	113 Move [X9+32], X8
	114 Move [X9], V0
	115 Move [X9+8], V1
	116 Add X8, X31, 88
	117 Move W0, 2
	118 Move X1, X31
	119 Call RenderTargetIdentifier.op_Implicit, X0
	120 NotImplemented "Instruction LDUR not yet implemented."
	121 NotImplemented "Instruction LDUR not yet implemented."
	122 Move X8, [X31+120]
	123 Move X0, [X21]
	124 Move [X31+128], V0
	125 Move [X31+136], V1
	126 Move [X31+160], X8
	127 Move W8, [X0+224]
	128 Compare W8, 0
	129 JumpIfNotEqual {132}
	130 Call 0x1C17DFC
	131 Move X0, [X21]
	132 Move X8, [X0+184]
	133 Move V0, [X31+128]
	134 Move V1, [X31+144]
	135 Move X9, [X31+160]
	136 NotImplemented "Instruction CMP not yet implemented."
	137 Move W10, 1
	138 NotImplemented "Instruction CSET not yet implemented."
	139 Move [X8+64], X9
	140 Move [X8+32], V0
	141 Move [X8+40], V1
	142 Add X8, X31, 88
	143 Move W0, 2
	144 Move X1, X31
	145 Move [X19+416], W11
	146 Move [X19+417], W10
	147 Move [X31+176], X31
	148 Call RenderTargetIdentifier.op_Implicit, X0
	149 Move X8, [X31+120]
	150 NotImplemented "Instruction LDUR not yet implemented."
	151 NotImplemented "Instruction LDUR not yet implemented."
	152 Move W0, 2
	153 Move [X31+216], X8
	154 Move [X22+24], V0
	155 Move [X22+8], V1
	156 Move V1, [X31+192]
	157 Move V0, [X31+208]
	158 Move V2, [X31+11]
	159 Add X8, X31, 88
	160 Move X1, X31
	161 Move [X19+288], V1
	162 Move [X19+296], V0
	163 Move [X19+17], V2
	164 Move [X31+176], X31
	165 Call RenderTargetIdentifier.op_Implicit, X0
	166 Move X8, [X31+120]
	167 NotImplemented "Instruction LDUR not yet implemented."
	168 NotImplemented "Instruction LDUR not yet implemented."
	169 Move X24, [X31+256]
	170 Move X23, [X31+264]
	171 Move [X31+216], X8
	172 Move [X22+24], V0
	173 Move [X22+8], V1
	174 Move V1, [X31+192]
	175 Move V0, [X31+208]
	176 Move V2, [X31+11]
	177 Move X22, [X31+272]
	178 Move X21, [X31+280]
	179 Move X30, [X31+240]
	180 Move X25, [X31+248]
	181 Move [X19+336], V1
	182 Move [X19+344], V0
	183 Move [X19+20], V2
	184 Move X20, [X31+288]
	185 Move X19, [X31+296]
	186 Move X29, [X31+224]
	187 Add X31, X31, 304
	188 Return 
	189 Call 0x1C17F20
	190 Call 0x1C17F28

Method: System.Void ExecuteBlock(System.Int32 blockIndex, in UnityEngine.Rendering.Universal.ScriptableRenderer/RenderBlocks renderBlocks, UnityEngine.Rendering.ScriptableRenderContext context, ref UnityEngine.Rendering.Universal.RenderingData renderingData, System.Boolean submit = False)

Disassembly:
	0x03A4F3E8 STR V0, [X31 + 0x95]
	0x03A4F3EC STR V0, [X31 + 0x94]
	0x03A4F3F0 STR V0, [X31 + 0x93]
	0x03A4F3F4 STR V0, [X31 + 0x92]
	0x03A4F3F8 STR V0, [X31 + 0x91]
	0x03A4F3FC STR V0, [X31 + 0x8E]
	0x03A4F400 STR V0, [X31 + 0x8D]
	0x03A4F404 STR V0, [X31 + 0x8B]
	0x03A4F408 STR V0, [X31 + 0x8A]
	0x03A4F40C STR X31, [X31 + 0x890]
	0x03A4F410 STR V0, [X31 + 0x88]
	0x03A4F414 STR V0, [X31 + 0x87]
	0x03A4F418 LDR W8, [X0 + 0xE0]
	0x03A4F41C CBNZ W8, 0x3A4F424
	0x03A4F420 BL 0x1C16DFC
	0x03A4F424 MOV X0, X20
	0x03A4F428 BL 0x3A4EA1C
	0x03A4F42C CBZ X21, 0x3A507DC
	0x03A4F430 ADRP X25, 0x705000
	0x03A4F434 LDR X25, [X25 + 0x10]
	0x03A4F438 MOV W23, W0
	0x03A4F43C LDR X24, [X21 + 0x80]
	0x03A4F440 LDR X0, [X25]
	0x03A4F444 LDR W8, [X0 + 0xE0]
	0x03A4F448 CBNZ W8, 0x3A4F450
	0x03A4F44C BL 0x1C16DFC
	0x03A4F450 MOV X0, X24
	0x03A4F454 MOV X1, X31
	0x03A4F458 BL 0x3A717D4
	0x03A4F45C CBZ W0, 0x3A507B4
	0x03A4F460 LDR X0, [X25]
	0x03A4F464 LDR X24, [X21 + 0x80]
	0x03A4F468 LDR W8, [X0 + 0xE0]
	0x03A4F46C CBNZ W8, 0x3A4F474
	0x03A4F470 BL 0x1C16DFC
	0x03A4F474 MOV X0, X24
	0x03A4F478 MOV X1, X31
	0x03A4F47C MOV W19, W23
	0x03A4F480 BL 0x3A7197C
	0x03A4F484 TBZ X0, 0x0, 0x3A4F548
	0x03A4F488 LDR X24, [X21 + 0x80]
	0x03A4F48C ADD X26, X22, 0x110
	0x03A4F490 ADD X8, X31, 0x120
	0x03A4F494 MOV X0, X26
	0x03A4F498 MOV X1, X31
	0x03A4F49C BL 0x3A53368
	0x03A4F4A0 LDP V0, V1, [X31 + 0x120]
	0x03A4F4A4 LDR X8, [X31 + 0x140]
	0x03A4F4A8 LDR X0, [X25]
	0x03A4F4AC STP V0, V1, [X31 + 0x150]
	0x03A4F4B0 STR X8, [X31 + 0x170]
	0x03A4F4B4 LDR W8, [X0 + 0xE0]
	0x03A4F4B8 CBNZ W8, 0x3A4F4C0
	0x03A4F4BC BL 0x1C16DFC
	0x03A4F4C0 LDP V0, V1, [X31 + 0x150]
	0x03A4F4C4 LDR X8, [X31 + 0x170]
	0x03A4F4C8 ADD X1, X31, 0x840
	0x03A4F4CC MOV X0, X24
	0x03A4F4D0 MOV X2, X31
	0x03A4F4D4 STR V0, [X31 + 0x84]
	0x03A4F4D8 STR V1, [X31 + 0x85]
	0x03A4F4DC STR X8, [X31 + 0x860]
	0x03A4F4E0 BL 0x3A71AEC
	0x03A4F4E4 MOV W27, W0
	0x03A4F4E8 ADDS W31, W0, 0x1
	0x03A4F4EC B.EQ 0x3A4F570
	0x03A4F4F0 LDRB W8, [X22 + 0x1A0]
	0x03A4F4F4 CBZ W8, 0x3A4F570
	0x03A4F4F8 STRB W31, [X22 + 0x1A0]
	0x03A4F4FC LDR W8, [X21 + 0xCC]
	0x03A4F500 EOR W8, W8, W23, 0x0
	0x03A4F504 TBNZ X8, 0x0, 0x3A4FD30
	0x03A4F508 LDP D0, D3, [X21 + 0xD0]
	0x03A4F50C LDP D1, D2, [X20 + 0x1D0]
	0x03A4F510 ADRP X8, 0xFFFFFFFFFD09A000
	0x03A4F514 FSUB V0.2S, V1.2S, V0.2S
	0x00000000 INVALID
	0x03A4F51C LDR V1, [X8 + 0xF20]
	0x03A4F520 FSUB V2.2S, V2.2S, V3.2S
	0x03A4F524 UNIMPLEMENTED
	0x00000000 INVALID
	0x03A4F52C FADD V0.2S, V0.2S, V3.2S
	0x03A4F530 FADD V0.2S, V2.2S, V0.2S
	0x03A4F534 UNIMPLEMENTED
	0x03A4F538 FADD V0.2S, V2.2S, V0.2S
	0x03A4F53C FCMP S0, S1
	0x03A4F540 CSET W8, PL
	0x03A4F544 B 0x3A4FD34
	0x03A4F548 LDRB W8, [X21 + 0x70]
	0x03A4F54C ADD X24, X31, 0x910
	0x03A4F550 MOVI V0.2D, 0x0
	0x03A4F554 STR X31, [X31 + 0x8F0]
	0x03A4F558 STR V0, [X31 + 0x8E]
	0x03A4F55C STR V0, [X31 + 0x8D]
	0x03A4F560 CBZ W8, 0x3A4F578
	0x03A4F564 MOV X0, X21
	0x03A4F568 BL 0x3A43A98
	0x03A4F56C B 0x3A4F588
	0x03A4F570 MOV W25, W31
	0x03A4F574 B 0x3A4FD3C
	0x03A4F578 ADD X8, X31, 0x8D0

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+80], X30
	003 Move [X31+88], X3
	004 Move [X31+96], X24
	005 Move [X31+104], X23
	006 Move [X31+112], X22
	007 Move [X31+120], X21
	008 Move [X31+128], X20
	009 Move [X31+136], X19
	010 Move X24, 0x994000
	011 Move W8, [X24+430]
	012 Move W19, W5
	013 Move X20, X4
	014 Move X23, X2
	015 Move W22, W1
	016 Move X21, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {29}
	021 Move X0, 0x706000
	022 Move X0, [X0+2320]
	023 Call 0x1C17CF4
	024 Move X0, 0x702000
	025 Move X0, [X0+3200]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X24+430], W8
	029 Move [X31+72], X31
	030 Move [X31+8], X31
	031 Move V1, [X23+16]
	032 Move V0, [X23+32]
	033 Move V2, [X23]
	034 Move X23, 0x706000
	035 Move X23, [X23+2320]
	036 Add X0, X31, 16
	037 Move W1, W22
	038 Move X2, X31
	039 Move [X31+32], V1
	040 Move [X31+40], V0
	041 Move [X31+1], V2
	042 Call RenderBlocks.GetRange, X0, X1
	043 Move [X31+8], X0
	044 Add X0, X31, 8
	045 Move X1, X31
	046 Call BlockRange.GetEnumerator, X0
	047 Move [X31+72], X0
	048 Add X0, X31, 72
	049 Move X1, X31
	050 Call BlockRange.MoveNext, X0
	051 Move TEMP, X0
	052 And TEMP, TEMP, 1
	053 Compare TEMP, 1
	054 JumpIfNotEqual {66}
	055 Move X0, [X21+256]
	056 Compare X0, 0
	057 JumpIfEqual {92}
	058 Move W1, [X31+72]
	059 Move X2, [X23]
	060 Call List`1<Object>.get_Item, X0, X1
	061 Move X1, [X31+88]
	062 Move X2, X0
	063 Move X0, X21
	064 Move X3, X20
	065 Call ScriptableRenderer.ExecuteRenderPass, X0, X1, X2, X3
	066 Add X0, X31, 72
	067 Move X1, X31
	068 Call BlockRange.Dispose, X0
	069 Move TEMP, X19
	070 And TEMP, TEMP, 1
	071 Compare TEMP, 1
	072 JumpIfNotEqual {83}
	073 Move X8, 0x702000
	074 Move X8, [X8+3200]
	075 Move X0, [X8]
	076 Move W8, [X0+224]
	077 Compare W8, 0
	078 JumpIfNotEqual {80}
	079 Call 0x1C17DFC
	080 Add X0, X31, 88
	081 Move X1, X31
	082 Call ScriptableRenderContext.Submit, X0
	083 Move X20, [X31+128]
	084 Move X19, [X31+136]
	085 Move X22, [X31+112]
	086 Move X21, [X31+120]
	087 Move X24, [X31+96]
	088 Move X23, [X31+104]
	089 Move X30, [X31+80]
	090 Add X31, X31, 144
	091 Return 
	092 Call 0x1C17F20
	093 Move X20, X0
	094 NotImplemented "Instruction CMP not yet implemented."
	095 Move X0, X20
	096 Call 0x3EB2AD0
	097 Move X21, [X0]
	098 Call 0x3EB2AE0
	099 Add X0, X31, 72
	100 Move X1, X31
	101 Call BlockRange.Dispose, X0
	102 Compare X21, 0
	103 JumpIfEqual {69}
	104 Move X0, X21
	105 Call 0x1C17F18
	106 Move X21, X31
	107 Move X20, X0
	108 Add X0, X31, 72
	109 Move X1, X31
	110 Call BlockRange.Dispose, X0
	111 Compare X21, 0
	112 JumpIfNotEqual {115}
	113 Move X0, X20
	114 Call 0x1D2D690
	115 Move X0, X21
	116 Call 0x1C17F18
	117 Call 0x1991590

Method: System.Boolean IsRenderPassEnabled(UnityEngine.Rendering.Universal.ScriptableRenderPass renderPass)

Disassembly:
	0x03A47468 ADD X1, X31, 0x0
	0x03A4746C STP V0, V1, [X31 + 0x30]
	0x03A47470 STR X8, [X31 + 0x50]
	0x03A47474 LDR X8, [X20 + 0x20]
	0x03A47478 LDP V1, V0, [X20]
	0x03A4747C MOV X2, X31
	0x03A47480 STR X8, [X31 + 0x20]
	0x03A47484 STP V1, V0, [X31]
	0x03A47488 BL 0x3C4B6D8
	0x03A4748C TBNZ X0, 0x0, 0x3A474A8
	0x03A47490 LDR W8, [X19 + 0x18]
	0x03A47494 ADD X21, X21, 0x1
	0x03A47498 ADD X22, X22, 0x78
	0x03A4749C CMP X21, W8, SXTW

ISIL:
	001 Move [X31-16], X30
	002 Compare X1, 0
	003 JumpIfEqual {16}
	004 Move W8, [X1+66]
	005 Compare W8, 0
	006 JumpIfEqual {13}
	007 Move W8, [X1+112]
	008 Compare W8, 0
	009 JumpIfEqual {13}
	010 Move W8, [X0+420]
	011 NotImplemented "Instruction CMP not yet implemented."
	012 NotImplemented "Instruction CSET not yet implemented."
	013 Move W0, W31
	014 Move X30, [X31+16]
	015 Return X0
	016 Call 0x1C17F20

Method: System.Void ExecuteRenderPass(UnityEngine.Rendering.ScriptableRenderContext context, UnityEngine.Rendering.Universal.ScriptableRenderPass renderPass, ref UnityEngine.Rendering.Universal.RenderingData renderingData)

Disassembly:
	0x03A4FF30 ADRP X9, 0x705000
	0x03A4FF34 LDP V0, V1, [X31 + 0x120]
	0x03A4FF38 LDR X8, [X31 + 0x140]
	0x03A4FF3C LDR X9, [X9 + 0x10]
	0x03A4FF40 STP V0, V1, [X31 + 0x150]
	0x03A4FF44 STR X8, [X31 + 0x170]
	0x03A4FF48 LDR X0, [X9]
	0x03A4FF4C LDR W8, [X0 + 0xE0]
	0x03A4FF50 CBNZ W8, 0x3A4FF58
	0x03A4FF54 BL 0x1C16DFC
	0x03A4FF58 LDP V0, V1, [X31 + 0x150]
	0x03A4FF5C LDR X8, [X31 + 0x170]
	0x03A4FF60 ADD X1, X31, 0x6F0
	0x03A4FF64 MOV X0, X27
	0x03A4FF68 MOV X2, X31
	0x03A4FF6C STR V0, [X31 + 0x6F]
	0x03A4FF70 STR V1, [X31 + 0x70]
	0x03A4FF74 STR X8, [X31 + 0x710]
	0x03A4FF78 BL 0x3A71B94
	0x03A4FF7C LDR X8, [X28]
	0x03A4FF80 STR W0, [X31 + 0x99C]
	0x03A4FF84 LDR W9, [X8 + 0xE0]
	0x03A4FF88 CBNZ W9, 0x3A4FF9C
	0x03A4FF8C MOV X0, X8
	0x03A4FF90 BL 0x1C16DFC
	0x03A4FF94 LDR X8, [X28]
	0x03A4FF98 LDR W0, [X31 + 0x99C]
	0x03A4FF9C LDR X8, [X8 + 0xB8]
	0x03A4FFA0 LDR X8, [X8 + 0x58]
	0x03A4FFA4 CBZ X8, 0x3A507DC
	0x03A4FFA8 LDR W9, [X8 + 0x18]
	0x03A4FFAC STR W25, [X31 + 0x14]
	0x03A4FFB0 STP X24, X29, [X31 + 0x18]
	0x03A4FFB4 CMP W0, W9
	0x03A4FFB8 B.CS 0x3A507E0
	0x03A4FFBC ADD X8, X8, W0, 0x3, UXTW
	0x03A4FFC0 LDR X27, [X8 + 0x20]
	0x03A4FFC4 STR W31, [X31 + 0x998]
	0x03A4FFC8 LDR X8, [X21 + 0x80]
	0x03A4FFCC CBZ X8, 0x3A507DC
	0x03A4FFD0 MOV X24, X31
	0x03A4FFD4 MOVZ W25, 0x20
	0x03A4FFD8 MOVZ W29, 0x28
	0x03A4FFDC LDR W9, [X8 + 0x18]
	0x03A4FFE0 CMP X24, W9, SXTW
	0x03A4FFE4 B.GE 0x3A5014C
	0x03A4FFE8 CMP X24, X9
	0x03A4FFEC B.CS 0x3A507E0
	0x03A4FFF0 ADD X8, X8, X25
	0x03A4FFF4 LDR X9, [X8 + 0x20]
	0x03A4FFF8 LDP V1, V0, [X8]
	0x03A4FFFC ADD X8, X31, 0x120
	0x03A50000 MOV X0, X26
	0x03A50004 MOV X1, X31
	0x03A50008 STR X9, [X31 + 0x170]
	0x03A5000C STP V1, V0, [X31 + 0x150]
	0x03A50010 BL 0x3A53368
	0x03A50014 LDP V0, V1, [X31 + 0x120]
	0x03A50018 LDR X8, [X31 + 0x140]
	0x03A5001C LDP V2, V3, [X31 + 0x150]
	0x03A50020 LDR X9, [X31 + 0x170]
	0x03A50024 ADD X0, X31, 0x6C0
	0x03A50028 ADD X1, X31, 0x690
	0x03A5002C MOV X2, X31
	0x03A50030 STR V0, [X31 + 0x69]
	0x03A50034 STR V1, [X31 + 0x6A]
	0x03A50038 STR X8, [X31 + 0x6B0]
	0x03A5003C STR V2, [X31 + 0x6C]
	0x03A50040 STR V3, [X31 + 0x6D]
	0x03A50044 STR X9, [X31 + 0x6E0]
	0x03A50048 BL 0x3C4B708
	0x03A5004C TBZ X0, 0x0, 0x3A50138
	0x03A50050 LDR X8, [X21 + 0x80]
	0x03A50054 CBZ X8, 0x3A507DC
	0x03A50058 LDR W9, [X8 + 0x18]
	0x03A5005C CMP X24, X9
	0x03A50060 B.CS 0x3A507E0
	0x03A50064 ADD X8, X8, X25
	0x03A50068 LDR X9, [X8 + 0x20]
	0x03A5006C LDP V1, V0, [X8]
	0x03A50070 ADD X8, X31, 0x120
	0x03A50074 MOV W0, W31
	0x03A50078 MOV X1, X31
	0x03A5007C STR X9, [X31 + 0x170]
	0x03A50080 STP V1, V0, [X31 + 0x150]
	0x03A50084 BL 0x3C4B258
	0x03A50088 LDP V0, V1, [X31 + 0x120]
	0x03A5008C LDR X8, [X31 + 0x140]
	0x03A50090 LDP V2, V3, [X31 + 0x150]
	0x03A50094 LDR X9, [X31 + 0x170]
	0x03A50098 ADD X0, X31, 0x660
	0x03A5009C ADD X1, X31, 0x630
	0x03A500A0 MOV X2, X31
	0x03A500A4 STR V0, [X31 + 0x63]
	0x03A500A8 STR V1, [X31 + 0x64]
	0x03A500AC STR X8, [X31 + 0x650]
	0x03A500B0 STR V2, [X31 + 0x66]
	0x03A500B4 STR V3, [X31 + 0x67]
	0x03A500B8 STR X9, [X31 + 0x680]
	0x03A500BC BL 0x3C4B708
	0x03A500C0 TBZ X0, 0x0, 0x3A50138
	0x03A500C4 LDR X8, [X21 + 0x80]
	0x03A500C8 CBZ X8, 0x3A507DC
	0x03A500CC LDR W9, [X8 + 0x18]
	0x03A500D0 CMP X24, X9
	0x03A500D4 B.CS 0x3A507E0
	0x03A500D8 ADD X8, X8, X25
	0x03A500DC LDR X9, [X8 + 0x20]
	0x03A500E0 LDP V1, V0, [X8]
	0x03A500E4 LDRSW X8, [X31 + 0x998]
	0x03A500E8 STR X9, [X31 + 0x170]
	0x03A500EC STP V1, V0, [X31 + 0x150]
	0x03A500F0 CBZ X27, 0x3A507DC
	0x03A500F4 LDP V0, V1, [X31 + 0x150]
	0x03A500F8 LDR X9, [X31 + 0x170]
	0x03A500FC STR V0, [X31 + 0x60]
	0x03A50100 STR V1, [X31 + 0x61]
	0x03A50104 STR X9, [X31 + 0x620]
	0x03A50108 LDR W9, [X27 + 0x18]
	0x03A5010C CMP W8, W9
	0x03A50110 B.CS 0x3A507E0
	0x03A50114 LDR X9, [X31 + 0x620]
	0x03A50118 LDR V0, [X31 + 0x60]
	0x03A5011C LDR V1, [X31 + 0x61]
	0x03A50120 NOP
	0x03A50124 MADD X10, X8, X29, X27
	0x03A50128 ADD W8, W8, 0x1
	0x03A5012C STR X9, [X10 + 0x40]
	0x03A50130 STP V0, V1, [X10 + 0x20]
	0x03A50134 STR W8, [X31 + 0x998]
	0x03A50138 LDR X8, [X21 + 0x80]
	0x03A5013C ADD X24, X24, 0x1
	0x03A50140 ADD X25, X25, 0x28
	0x03A50144 CBNZ X8, 0x3A4FFDC
	0x03A50148 B 0x3A507DC
	0x03A5014C LDRSW X8, [X31 + 0x998]
	0x03A50150 LDR W9, [X31 + 0x99C]
	0x03A50154 LDP X24, X29, [X31 + 0x18]
	0x03A50158 LDR W25, [X31 + 0x14]
	0x03A5015C CMP X8, X9
	0x03A50160 B.EQ 0x3A501D8
	0x03A50164 ADD X0, X31, 0x998
	0x03A50168 MOV X1, X31
	0x03A5016C BL 0x337B6E0
	0x03A50170 MOV X26, X0
	0x03A50174 ADD X0, X31, 0x99C
	0x03A50178 MOV X1, X31
	0x03A5017C BL 0x3399B00
	0x03A50180 ADRP X8, 0x705000
	0x03A50184 LDR X8, [X8 + 0xFB8]
	0x03A50188 ADRP X9, 0x705000
	0x03A5018C LDR X9, [X9 + 0xFB0]
	0x03A50190 MOV X3, X0
	0x03A50194 LDR X8, [X8]
	0x03A50198 MOV X1, X26
	0x03A5019C LDR X2, [X9]
	0x03A501A0 MOV X4, X31
	0x03A501A4 MOV X0, X8
	0x03A501A8 BL 0x32277C4
	0x03A501AC ADRP X8, 0x6A3000
	0x03A501B0 LDR X8, [X8 + 0xA28]
	0x03A501B4 MOV X26, X0
	0x03A501B8 LDR X8, [X8]
	0x03A501BC LDR W9, [X8 + 0xE0]
	0x03A501C0 CBNZ W9, 0x3A501CC
	0x03A501C4 MOV X0, X8
	0x03A501C8 BL 0x1C16DFC
	0x03A501CC MOV X0, X26
	0x03A501D0 MOV X1, X31
	0x03A501D4 BL 0x3C0649C
	0x03A501D8 LDRB W8, [X21 + 0x42]
	0x03A501DC CBZ W8, 0x3A50204
	0x03A501E0 LDRB W8, [X21 + 0x70]
	0x03A501E4 CBZ W8, 0x3A50204
	0x03A501E8 LDRB W8, [X22 + 0x1A4]
	0x03A501EC CBZ W8, 0x3A50204
	0x03A501F0 MOV X0, X20
	0x03A501F4 MOV X1, X31
	0x03A501F8 BL 0x3A93294
	0x03A501FC LDR W9, [X31 + 0x2C]
	0x03A50200 TBNZ X0, 0x0, 0x3A50278
	0x03A50204 ADD X8, X31, 0x120
	0x03A50208 MOV X0, X24
	0x03A5020C MOV X1, X31
	0x03A50210 BL 0x3A53368
	0x03A50214 LDP V0, V1, [X31 + 0x120]
	0x03A50218 LDR X8, [X31 + 0x140]
	0x03A5021C LDR X0, [X28]
	0x03A50220 STP V0, V1, [X31 + 0x150]
	0x03A50224 STR X8, [X31 + 0x170]
	0x03A50228 LDP S11, S9, [X21 + 0xD0]
	0x03A5022C LDR W8, [X0 + 0xE0]
	0x03A50230 LDP S10, S8, [X21 + 0xD8]
	0x03A50234 CBNZ W8, 0x3A5023C
	0x03A50238 BL 0x1C16DFC
	0x03A5023C LDP V0, V1, [X31 + 0x150]
	0x03A50240 LDR X8, [X31 + 0x170]
	0x03A50244 ADD X2, X31, 0x5D0
	0x03A50248 MOVZ W3, 0x1
	0x03A5024C STR V0, [X31 + 0x5D]
	0x03A50250 STR V1, [X31 + 0x5E]
	0x03A50254 MOV X0, X29
	0x03A50258 MOV X1, X27
	0x03A5025C MOV V0.16B, V11.16B
	0x03A50260 MOV V1.16B, V9.16B
	0x03A50264 MOV V2.16B, V10.16B
	0x03A50268 MOV V3.16B, V8.16B
	0x03A5026C STR X8, [X31 + 0x5F0]
	0x03A50270 BL 0x3A507E4
	0x03A50274 LDR W9, [X31 + 0x2C]
	0x03A50278 TBNZ X9, 0x0, 0x3A50280
	0x03A5027C LDR W19, [X21 + 0xCC]
	0x03A50280 ADRP X27, 0x704000
	0x03A50284 LDR X27, [X27 + 0x10]
	0x03A50288 AND W8, W19, 0x6
	0x03A5028C TBZ X25, 0x0, 0x3A502B8
	0x03A50290 LDRB W9, [X21 + 0x42]
	0x03A50294 CBZ W9, 0x3A503BC
	0x03A50298 LDRB W9, [X21 + 0x70]
	0x03A5029C CBZ W9, 0x3A503B0
	0x03A502A0 LDRB W9, [X22 + 0x1A4]
	0x03A502A4 CBZ W9, 0x3A503B0
	0x03A502A8 AND W9, W23, 0x1
	0x03A502AC ORR W23, W9, W8, 0x0
	0x03A502B0 ADD X19, X21, 0x42
	0x03A502B4 B 0x3A503CC
	0x03A502B8 LDR W10, [X21 + 0xCC]
	0x03A502BC LDRB W9, [X21 + 0x42]
	0x03A502C0 AND W10, W10, 0x1
	0x03A502C4 B 0x3A503C0
	0x03A502C8 ADD X8, X31, 0x120
	0x03A502CC ADD X0, X31, 0x910
	0x03A502D0 MOV X1, X31
	0x03A502D4 BL 0x3A53368
	0x03A502D8 LDP V0, V1, [X31 + 0x120]
	0x03A502DC LDR X8, [X31 + 0x140]
	0x03A502E0 LDR X0, [X28]
	0x03A502E4 STP V0, V1, [X31 + 0x150]
	0x03A502E8 STR X8, [X31 + 0x170]
	0x03A502EC LDR W8, [X0 + 0xE0]
	0x03A502F0 CBNZ W8, 0x3A502FC
	0x03A502F4 BL 0x1C16DFC
	0x03A502F8 LDR X0, [X28]
	0x03A502FC LDR X8, [X0 + 0xB8]
	0x03A50300 LDP V0, V1, [X31 + 0x150]
	0x03A50304 LDR X9, [X31 + 0x170]
	0x03A50308 ADD X0, X31, 0x1B0
	0x03A5030C LDP V2, V3, [X8 + 0x20]
	0x03A50310 LDR X8, [X8 + 0x40]
	0x03A50314 ADD X1, X31, 0x180

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+48], X30
	003 Move [X31+56], X25
	004 Move [X31+64], X24
	005 Move [X31+72], X23
	006 Move [X31+80], X22
	007 Move [X31+88], X21
	008 Move [X31+96], X20
	009 Move [X31+104], X19
	010 Move X19, 0x994000
	011 Move W8, [X19+431]
	012 Move X20, X3
	013 Move X21, X2
	014 Move X22, X0
	015 Move [X31+40], X1
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {31}
	020 Move X0, 0x707000
	021 Move X0, [X0+3848]
	022 Call 0x1C17CF4
	023 Move X0, 0x702000
	024 Move X0, [X0+3200]
	025 Call 0x1C17CF4
	026 Move X0, 0x707000
	027 Move X0, [X0+3528]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X19+431], W8
	031 Move [X31+32], W31
	032 Move [X31+24], W31
	033 Compare X21, 0
	034 JumpIfEqual {211}
	035 Move X2, [X21+56]
	036 Add X0, X31, 32
	037 Move X1, X31
	038 Move X3, X31
	039 Call ProfilingScope..ctor, X0, X1, X2
	040 Move X0, [X20+400]
	041 Compare X0, 0
	042 JumpIfEqual {212}
	043 Move X19, [X20]
	044 Move X1, X31
	045 Call XRPass.get_supportsFoveatedRendering, X0
	046 Move TEMP, X0
	047 And TEMP, TEMP, 1
	048 Compare TEMP, 1
	049 JumpIfNotEqual {59}
	050 Move W8, [X21+16]
	051 Subtract W8, W8, 150
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Compare X19, 0
	054 JumpIfEqual {218}
	055 Move W1, 1
	056 Move X0, X19
	057 Move X2, X31
	058 Call CommandBuffer.SetFoveatedRenderingMode, X0, X1
	059 Move X23, 0x707000
	060 Move X23, [X23+3848]
	061 Move X0, [X23]
	062 Move W8, [X0+224]
	063 Compare W8, 0
	064 JumpIfNotEqual {67}
	065 Call 0x1C17DFC
	066 Move X0, [X23]
	067 Move X8, [X0+184]
	068 Move X2, [X8+8]
	069 Move [X31+16], W31
	070 Add X0, X31, 16
	071 Move X1, X31
	072 Move X3, X31
	073 Call ProfilingScope..ctor, X0, X1, X2
	074 Move W8, [X31+16]
	075 Add X23, X20, 24
	076 Move [X31+24], W8
	077 Move X0, X22
	078 Move X1, X19
	079 Move X2, X21
	080 Move X3, X23
	081 Call ScriptableRenderer.SetRenderPassAttachments, X0, X1, X2, X3
	082 Move X24, X31
	083 Move W25, 3
	084 Add X0, X31, 24
	085 Move X1, X31
	086 Call ProfilingScope.Dispose, X0
	087 Compare X24, 0
	088 JumpIfNotEqual {213}
	089 NotImplemented "Instruction CMP not yet implemented."
	090 Compare W25, 0
	091 JumpIfNotEqual {198}
	092 Move X24, 0x701000
	093 Move X24, [X24+3200]
	094 Move X0, [X24]
	095 Move W8, [X0+224]
	096 Compare W8, 0
	097 JumpIfNotEqual {99}
	098 Call 0x1C17DFC
	099 Add X0, X31, 40
	100 Move X1, X19
	101 Move X2, X31
	102 Call ScriptableRenderContext.ExecuteCommandBuffer, X0, X1
	103 Compare X19, 0
	104 JumpIfEqual {215}
	105 Move X0, X19
	106 Move X1, X31
	107 Call CommandBuffer.Clear, X0
	108 Move W8, [X21+66]
	109 Compare W8, 0
	110 JumpIfEqual {130}
	111 Move W8, [X21+112]
	112 Compare W8, 0
	113 JumpIfEqual {130}
	114 Move W8, [X22+420]
	115 Compare W8, 0
	116 JumpIfEqual {130}
	117 Move X0, X23
	118 Move X1, X31
	119 Call CameraData.get_isRenderPassSupportedCamera, X0
	120 Move TEMP, X0
	121 And TEMP, TEMP, 1
	122 Compare TEMP, 1
	123 JumpIfNotEqual {130}
	124 Move X1, [X31+40]
	125 Move X0, X22
	126 Move X2, X21
	127 Move X3, X23
	128 Move X4, X20
	129 Call ScriptableRenderer.ExecuteNativeRenderPass, X0, X1, X2, X3, X4
	130 Move X8, [X21]
	131 Move X1, [X31+40]
	132 Move X9, [X8+456]
	133 Move X3, [X8+464]
	134 Move X0, X21
	135 Move X2, X20
	136 NotImplemented "Instruction BLR not yet implemented."
	137 Move X0, [X24]
	138 Move W8, [X0+224]
	139 Compare W8, 0
	140 JumpIfNotEqual {142}
	141 Call 0x1C17DFC
	142 Add X0, X31, 40
	143 Move X1, X19
	144 Move X2, X31
	145 Call ScriptableRenderContext.ExecuteCommandBuffer, X0, X1
	146 Move X0, X19
	147 Move X1, X31
	148 Call CommandBuffer.Clear, X0
	149 Move X0, [X20+400]
	150 Compare X0, 0
	151 JumpIfEqual {216}
	152 Move X1, X31
	153 Call XRPass.get_enabled, X0
	154 Move TEMP, X0
	155 And TEMP, TEMP, 1
	156 Compare TEMP, 1
	157 JumpIfNotEqual {198}
	158 Move X0, [X20+400]
	159 Compare X0, 0
	160 JumpIfEqual {217}
	161 Move X1, X31
	162 Call XRPass.get_supportsFoveatedRendering, X0
	163 Move TEMP, X0
	164 And TEMP, TEMP, 1
	165 Compare TEMP, 1
	166 JumpIfNotEqual {171}
	167 Move X0, X19
	168 Move W1, W31
	169 Move X2, X31
	170 Call CommandBuffer.SetFoveatedRenderingMode, X0, X1
	171 Move X0, X23
	172 Move X1, X31
	173 Call CameraData.get_xrUniversal, X0
	174 Move X8, 0x706000
	175 Move X8, [X8+3528]
	176 Move X20, X0
	177 Move X0, [X8]
	178 Move W8, [X0+224]
	179 Compare W8, 0
	180 JumpIfNotEqual {182}
	181 Call 0x1C17DFC
	182 Move X0, X19
	183 Move X1, X20
	184 Move X2, X31
	185 Call XRSystemUniversal.UnmarkShaderProperties, X0, X1
	186 Move X0, [X24]
	187 Move W8, [X0+224]
	188 Compare W8, 0
	189 JumpIfNotEqual {191}
	190 Call 0x1C17DFC
	191 Add X0, X31, 40
	192 Move X1, X19
	193 Move X2, X31
	194 Call ScriptableRenderContext.ExecuteCommandBuffer, X0, X1
	195 Move X0, X19
	196 Move X1, X31
	197 Call CommandBuffer.Clear, X0
	198 Add X0, X31, 32
	199 Move X1, X31
	200 Call ProfilingScope.Dispose, X0
	201 Move X20, [X31+96]
	202 Move X19, [X31+104]
	203 Move X22, [X31+80]
	204 Move X21, [X31+88]
	205 Move X24, [X31+64]
	206 Move X23, [X31+72]
	207 Move X30, [X31+48]
	208 Move X25, [X31+56]
	209 Add X31, X31, 112
	210 Return 
	211 Call 0x1C17F20
	212 Call 0x1C17F20
	213 Move X0, X24
	214 Call 0x1C17F18
	215 Call 0x1C17F20
	216 Call 0x1C17F20
	217 Call 0x1C17F20
	218 Call 0x1C17F20
	219 Move X25, X1
	220 NotImplemented "Instruction CMP not yet implemented."
	221 Move X24, X0
	222 Move X0, X24
	223 Call 0x3EB2AD0
	224 Move X8, [X0]
	225 Move [X31+8], X8
	226 Call 0x3EB2AE0
	227 Move X24, [X31+8]
	228 Move W25, W31
	229 Move [X31+8], X31
	230 Add X0, X31, 24
	231 Move X1, X31
	232 Call ProfilingScope.Dispose, X0
	233 Move X8, [X31+8]
	234 Compare X8, 0
	235 JumpIfEqual {242}
	236 Move X0, [X31+8]
	237 Call 0x1C17F18
	238 Move X25, X1
	239 Move X24, X0
	240 Move X25, X1
	241 Move X24, X0
	242 NotImplemented "Instruction CMP not yet implemented."
	243 Move X0, X24
	244 Call 0x3EB2AD0
	245 Move X19, [X0]
	246 Call 0x3EB2AE0
	247 Add X0, X31, 32
	248 Move X1, X31
	249 Call ProfilingScope.Dispose, X0
	250 Compare X19, 0
	251 JumpIfEqual {201}
	252 Move X0, X19
	253 Call 0x1C17F18
	254 Move X19, X31
	255 Move X24, X0
	256 Add X0, X31, 32
	257 Move X1, X31
	258 Call ProfilingScope.Dispose, X0
	259 Compare X19, 0
	260 JumpIfNotEqual {263}
	261 Move X0, X24
	262 Call 0x1D2D690
	263 Move X0, X19
	264 Call 0x1C17F18
	265 Call 0x1991590

Method: System.Void SetRenderPassAttachments(UnityEngine.Rendering.CommandBuffer cmd, UnityEngine.Rendering.Universal.ScriptableRenderPass renderPass, ref UnityEngine.Rendering.Universal.CameraData cameraData)

Disassembly:
	0x03A50318 MOV X2, X31
	0x03A5031C STP V0, V1, [X31 + 0x1B0]
	0x03A50320 STR X9, [X31 + 0x1D0]
	0x03A50324 STR X8, [X31 + 0x140]
	0x03A50328 STP V2, V3, [X31 + 0x120]
	0x03A5032C STP V2, V3, [X31 + 0x180]
	0x03A50330 STR X8, [X31 + 0x1A0]
	0x03A50334 BL 0x3C4B708
	0x03A50338 CBNZ W23, 0x3A4FB08
	0x03A5033C TBNZ X0, 0x0, 0x3A4FB08
	0x03A50340 LDR X8, [X21 + 0x18]
	0x03A50344 CBZ X8, 0x3A507DC
	0x03A50348 LDR W9, [X8 + 0x18]
	0x03A5034C CBZ W9, 0x3A507E0
	0x03A50350 LDR X0, [X28]
	0x03A50354 LDR W22, [X8 + 0x20]
	0x03A50358 LDR W9, [X0 + 0xE0]
	0x03A5035C CBNZ W9, 0x3A50368
	0x03A50360 BL 0x1C16DFC
	0x03A50364 LDR X0, [X28]
	0x03A50368 LDR X8, [X0 + 0xB8]
	0x03A5036C LDR X9, [X8 + 0x48]
	0x03A50370 CBZ X9, 0x3A507DC
	0x03A50374 LDR W10, [X9 + 0x18]
	0x03A50378 CBZ W10, 0x3A507E0
	0x03A5037C LDR W9, [X9 + 0x20]
	0x03A50380 CMP W22, W9
	0x03A50384 B.NE 0x3A4FB08
	0x03A50388 LDR W9, [X0 + 0xE0]
	0x03A5038C LDR W22, [X21 + 0x20]
	0x03A50390 CBNZ W9, 0x3A503A0
	0x03A50394 BL 0x1C16DFC
	0x03A50398 LDR X8, [X28]
	0x03A5039C LDR X8, [X8 + 0xB8]
	0x03A503A0 LDR W8, [X8 + 0x50]
	0x03A503A4 CMP W22, W8
	0x03A503A8 B.NE 0x3A4FB08
	0x03A503AC B 0x3A507B4
	0x03A503B0 MOV W10, W31
	0x03A503B4 MOVZ W9, 0x1
	0x03A503B8 B 0x3A503C0
	0x03A503BC MOV W10, W31
	0x03A503C0 ORR W23, W10, W8, 0x0
	0x03A503C4 ADD X19, X21, 0x42
	0x03A503C8 CBZ W9, 0x3A50404
	0x03A503CC LDRB W8, [X21 + 0x70]
	0x03A503D0 CBZ W8, 0x3A50404
	0x03A503D4 LDRB W8, [X22 + 0x1A4]
	0x03A503D8 CBZ W8, 0x3A50404
	0x03A503DC MOV X0, X20
	0x03A503E0 MOV X1, X31
	0x03A503E4 BL 0x3A93294
	0x03A503E8 TBZ X0, 0x0, 0x3A50404
	0x03A503EC MOV X0, X22
	0x03A503F0 MOV X1, X21
	0x03A503F4 MOV X2, X20
	0x03A503F8 MOV W3, W25
	0x03A503FC MOV W4, W23
	0x03A50400 BL 0x3A46A60
	0x03A50404 LDR X0, [X28]
	0x03A50408 LDR X25, [X21 + 0x80]
	0x03A5040C LDR W8, [X0 + 0xE0]
	0x03A50410 CBNZ W8, 0x3A5041C
	0x03A50414 BL 0x1C16DFC
	0x03A50418 LDR X0, [X28]
	0x03A5041C LDR X8, [X27]
	0x03A50420 LDR X9, [X0 + 0xB8]
	0x03A50424 LDR W10, [X8 + 0xE0]
	0x03A50428 LDR X26, [X9 + 0x18]
	0x03A5042C CBNZ W10, 0x3A50438
	0x03A50430 MOV X0, X8
	0x03A50434 BL 0x1C16DFC
	0x03A50438 MOV X0, X25
	0x03A5043C MOV X1, X26
	0x03A50440 MOV X2, X31
	0x03A50444 BL 0x3A71D70
	0x03A50448 TBZ X0, 0x0, 0x3A504C8
	0x03A5044C ADD X8, X31, 0x120
	0x03A50450 MOV X0, X21
	0x03A50454 BL 0x3A43A18
	0x03A50458 LDP V0, V1, [X31 + 0x120]
	0x03A5045C LDR X8, [X31 + 0x140]
	0x03A50460 LDR X0, [X28]
	0x03A50464 STP V0, V1, [X31 + 0x150]
	0x03A50468 STR X8, [X31 + 0x170]
	0x03A5046C LDR W8, [X0 + 0xE0]
	0x03A50470 CBNZ W8, 0x3A5047C
	0x03A50474 BL 0x1C16DFC
	0x03A50478 LDR X0, [X28]
	0x03A5047C LDR X8, [X0 + 0xB8]
	0x03A50480 LDP V0, V1, [X31 + 0x150]
	0x03A50484 LDR X9, [X31 + 0x170]
	0x03A50488 ADD X0, X31, 0x5A0
	0x03A5048C LDP V2, V3, [X8 + 0x20]
	0x03A50490 LDR X8, [X8 + 0x40]
	0x03A50494 ADD X1, X31, 0x570
	0x03A50498 MOV X2, X31
	0x03A5049C STR V0, [X31 + 0x5A]
	0x03A504A0 STR V1, [X31 + 0x5B]
	0x03A504A4 STR X9, [X31 + 0x5C0]
	0x03A504A8 STR X8, [X31 + 0x140]
	0x03A504AC STP V2, V3, [X31 + 0x120]
	0x03A504B0 STR V2, [X31 + 0x57]
	0x03A504B4 STR V3, [X31 + 0x58]
	0x03A504B8 STR X8, [X31 + 0x590]
	0x03A504BC BL 0x3C4B708
	0x03A504C0 CBNZ W23, 0x3A504C8
	0x03A504C4 TBZ X0, 0x0, 0x3A507B4
	0x03A504C8 LDR X0, [X27]
	0x03A504CC LDR X25, [X21 + 0x80]
	0x03A504D0 LDR W8, [X0 + 0xE0]
	0x03A504D4 CBNZ W8, 0x3A504DC
	0x03A504D8 BL 0x1C16DFC
	0x03A504DC MOV X0, X25
	0x03A504E0 MOV X1, X31
	0x03A504E4 BL 0x3A71CB4
	0x03A504E8 TBNZ X0, 0x1F, 0x3A507B4
	0x03A504EC MOV W25, W0
	0x03A504F0 LDR X0, [X28]
	0x03A504F4 LDR W8, [X0 + 0xE0]
	0x03A504F8 CBNZ W8, 0x3A50504
	0x03A504FC BL 0x1C16DFC
	0x03A50500 LDR X0, [X28]
	0x03A50504 LDR X8, [X0 + 0xB8]
	0x03A50508 LDR X8, [X8 + 0x58]
	0x03A5050C CBZ X8, 0x3A507DC
	0x03A50510 LDR W10, [X8 + 0x18]
	0x03A50514 ADD W9, W25, 0x1
	0x03A50518 CMP W9, W10
	0x03A5051C B.CS 0x3A507E0
	0x03A50520 ADD X8, X8, W9, 0x3, SXTW
	0x03A50524 LDR X25, [X8 + 0x20]
	0x03A50528 CMP W9, 0x1
	0x03A5052C B.LT 0x3A505B0
	0x03A50530 MOV X8, X31
	0x03A50534 MOV W9, W9
	0x03A50538 MOVZ W10, 0x20
	0x03A5053C LDR X11, [X21 + 0x80]
	0x03A50540 CBZ X11, 0x3A507DC
	0x03A50544 LDR W12, [X11 + 0x18]
	0x03A50548 CMP X8, X12
	0x03A5054C B.CS 0x3A507E0
	0x03A50550 ADD X11, X11, X10
	0x03A50554 LDR X12, [X11 + 0x20]
	0x03A50558 LDP V1, V0, [X11]
	0x03A5055C STR X12, [X31 + 0x170]
	0x03A50560 STP V1, V0, [X31 + 0x150]
	0x03A50564 CBZ X25, 0x3A507DC
	0x03A50568 LDP V0, V1, [X31 + 0x150]
	0x03A5056C LDR X11, [X31 + 0x170]
	0x03A50570 STR V0, [X31 + 0x54]
	0x03A50574 STR V1, [X31 + 0x55]
	0x03A50578 STR X11, [X31 + 0x560]
	0x03A5057C LDR W11, [X25 + 0x18]
	0x03A50580 CMP X8, X11
	0x03A50584 B.CS 0x3A507E0
	0x03A50588 LDR X12, [X31 + 0x560]
	0x03A5058C LDR V0, [X31 + 0x54]
	0x03A50590 LDR V1, [X31 + 0x55]
	0x03A50594 ADD X8, X8, 0x1
	0x03A50598 ADD X11, X25, X10
	0x03A5059C CMP X9, X8
	0x03A505A0 ADD X10, X10, 0x28
	0x03A505A4 STR X12, [X11 + 0x20]
	0x03A505A8 STP V0, V1, [X11]
	0x03A505AC B.NE 0x3A5053C
	0x03A505B0 LDRB W8, [X19]
	0x03A505B4 CBZ W8, 0x3A505D8
	0x03A505B8 LDRB W8, [X21 + 0x70]
	0x03A505BC CBZ W8, 0x3A505D8
	0x03A505C0 LDRB W8, [X22 + 0x1A4]
	0x03A505C4 CBZ W8, 0x3A505D8
	0x03A505C8 MOV X0, X20
	0x03A505CC MOV X1, X31
	0x03A505D0 BL 0x3A93294
	0x03A505D4 TBNZ X0, 0x0, 0x3A506F0
	0x03A505D8 LDRB W8, [X21 + 0x70]
	0x03A505DC CBZ W8, 0x3A505F0
	0x03A505E0 LDRB W8, [X21 + 0x40]
	0x03A505E4 CBZ W8, 0x3A50640
	0x03A505E8 LDR X24, [X21 + 0x98]
	0x03A505EC B 0x3A50648
	0x03A505F0 ADD X8, X31, 0x150
	0x03A505F4 MOV X0, X24
	0x03A505F8 MOV X1, X31
	0x03A505FC BL 0x3A53368
	0x03A50600 LDP V0, V1, [X31 + 0x150]
	0x03A50604 LDR X8, [X31 + 0x170]
	0x03A50608 STR V0, [X31 + 0x97]
	0x03A5060C STR V1, [X31 + 0x98]
	0x03A50610 STR X8, [X31 + 0x990]
	0x03A50614 LDRB W8, [X21 + 0x40]
	0x03A50618 CBZ W8, 0x3A50688
	0x03A5061C ADD X8, X31, 0x150
	0x03A50620 MOV X0, X21
	0x03A50624 BL 0x3A43A18
	0x03A50628 LDP V0, V1, [X31 + 0x150]
	0x03A5062C LDR X8, [X31 + 0x170]
	0x03A50630 STR V0, [X31 + 0x97]
	0x03A50634 STR V1, [X31 + 0x98]
	0x03A50638 STR X8, [X31 + 0x990]
	0x03A5063C B 0x3A5068C
	0x03A50640 LDR X24, [X22 + 0x140]
	0x03A50644 STRB W31, [X22 + 0x1A1]
	0x03A50648 LDR X0, [X28]
	0x03A5064C LDP S11, S10, [X21 + 0xD0]
	0x03A50650 LDP S9, S8, [X21 + 0xD8]
	0x03A50654 LDR W8, [X0 + 0xE0]
	0x03A50658 CBNZ W8, 0x3A50660
	0x03A5065C BL 0x1C16DFC
	0x03A50660 MOV X0, X29
	0x03A50664 MOV X1, X25
	0x03A50668 MOV X2, X24
	0x03A5066C MOV W3, W23
	0x03A50670 MOV V0.16B, V11.16B
	0x03A50674 MOV V1.16B, V10.16B
	0x03A50678 MOV V2.16B, V9.16B
	0x03A5067C MOV V3.16B, V8.16B
	0x03A50680 BL 0x3A50900
	0x03A50684 B 0x3A506F0
	0x03A50688 STRB W31, [X22 + 0x1A1]
	0x03A5068C LDR V0, [X31 + 0x97]
	0x03A50690 LDR V1, [X31 + 0x98]
	0x03A50694 LDR X8, [X31 + 0x990]
	0x03A50698 LDR X0, [X28]
	0x03A5069C STP V0, V1, [X31 + 0x150]
	0x03A506A0 STR X8, [X31 + 0x170]
	0x03A506A4 LDP S11, S9, [X21 + 0xD0]
	0x03A506A8 LDR W8, [X0 + 0xE0]
	0x03A506AC LDP S10, S8, [X21 + 0xD8]
	0x03A506B0 CBNZ W8, 0x3A506B8
	0x03A506B4 BL 0x1C16DFC
	0x03A506B8 LDP V0, V1, [X31 + 0x150]
	0x03A506BC LDR X8, [X31 + 0x170]
	0x03A506C0 ADD X2, X31, 0x510
	0x03A506C4 MOV X0, X29
	0x03A506C8 STR V0, [X31 + 0x51]
	0x03A506CC STR V1, [X31 + 0x52]
	0x03A506D0 MOV X1, X25
	0x03A506D4 MOV W3, W23
	0x03A506D8 MOV V0.16B, V11.16B
	0x03A506DC MOV V1.16B, V9.16B
	0x03A506E0 MOV V2.16B, V10.16B
	0x03A506E4 MOV V3.16B, V8.16B
	0x03A506E8 STR X8, [X31 + 0x530]
	0x03A506EC BL 0x3A507E4
	0x03A506F0 LDR X0, [X20 + 0x178]
	0x03A506F4 CBZ X0, 0x3A507DC
	0x03A506F8 MOV X1, X31
	0x03A506FC BL 0x3984C98
	0x03A50700 TBZ X0, 0x0, 0x3A507B4
	0x03A50704 LDR X8, [X20 + 0x178]
	0x03A50708 CBZ X8, 0x3A507DC
	0x03A5070C LDR X9, [X8 + 0x50]
	0x03A50710 LDP V0, V1, [X8 + 0x30]
	0x03A50714 LDR X0, [X27]
	0x03A50718 LDR X21, [X21 + 0x80]
	0x03A5071C STR X9, [X31 + 0x170]
	0x03A50720 STP V0, V1, [X31 + 0x150]
	0x03A50724 LDR W8, [X0 + 0xE0]
	0x03A50728 CBNZ W8, 0x3A50730
	0x03A5072C BL 0x1C16DFC
	0x03A50730 LDP V0, V1, [X31 + 0x150]
	0x03A50734 LDR X8, [X31 + 0x170]
	0x03A50738 ADD X1, X31, 0x4E0
	0x03A5073C MOV X0, X21
	0x03A50740 MOV X2, X31
	0x03A50744 STR V0, [X31 + 0x4E]
	0x03A50748 STR V1, [X31 + 0x4F]
	0x03A5074C STR X8, [X31 + 0x500]
	0x03A50750 BL 0x3A71AEC
	0x03A50754 ADDS W31, W0, 0x1
	0x03A50758 MOV W21, W0
	0x03A5075C CSET W2, EQ
	0x03A50760 MOV X0, X20
	0x03A50764 MOV X1, X29
	0x03A50768 MOV X3, X31
	0x03A5076C BL 0x3A92924
	0x03A50770 MOV X0, X20
	0x03A50774 MOV X1, X31
	0x03A50778 BL 0x3A8F13C
	0x03A5077C ADRP X8, 0x705000
	0x03A50780 LDR X8, [X8 + 0xDC8]
	0x03A50784 MOV X20, X0
	0x03A50788 LDR X8, [X8]
	0x03A5078C LDR W9, [X8 + 0xE0]
	0x03A50790 CBNZ W9, 0x3A5079C
	0x03A50794 MOV X0, X8
	0x03A50798 BL 0x1C16DFC
	0x03A5079C ADDS W31, W21, 0x1
	0x03A507A0 CSET W2, EQ
	0x03A507A4 MOV X0, X29
	0x03A507A8 MOV X1, X20
	0x03A507AC MOV X3, X31
	0x03A507B0 BL 0x3A94FC8
	0x03A507B4 ADD X31, X31, 0x9D0
	0x03A507B8 LDP X20, X19, [X31 + 0x70]
	0x03A507BC LDP X22, X21, [X31 + 0x60]
	0x03A507C0 LDP X24, X23, [X31 + 0x50]
	0x03A507C4 LDP X26, X25, [X31 + 0x40]
	0x03A507C8 LDP X28, X27, [X31 + 0x30]
	0x03A507CC LDP X29, X30, [X31 + 0x20]
	0x03A507D0 LDP D9, D8, [X31 + 0x10]
	0x03A507D4 LDP D11, D10, [X31], #0x80
	0x03A507D8 RET
	0x03A507DC BL 0x1C16F20
	0x03A507E0 BL 0x1C16F28
	0x03A507E4 SUB X31, X31, 0xC0
	0x03A507E8 STP D11, D10, [X31 + 0x60]
	0x03A507EC STP D9, D8, [X31 + 0x70]
	0x03A507F0 STR X30, [X31 + 0x80]
	0x03A507F4 STP X24, X23, [X31 + 0x90]
	0x03A507F8 STP X22, X21, [X31 + 0xA0]
	0x03A507FC STP X20, X19, [X31 + 0xB0]
	0x03A50800 ADRP X23, 0x992000
	0x03A50804 ADRP X24, 0x704000
	0x03A50808 LDRB W8, [X23 + 0x1BB]
	0x03A5080C LDR X24, [X24 + 0x8C8]
	0x03A50810 MOV V8.16B, V3.16B
	0x03A50814 MOV V9.16B, V2.16B
	0x03A50818 MOV V10.16B, V1.16B
	0x03A5081C MOV V11.16B, V0.16B
	0x03A50820 MOV W19, W3
	0x03A50824 MOV X22, X2
	0x03A50828 MOV X20, X1
	0x03A5082C MOV X21, X0
	0x03A50830 TBNZ X8, 0x0, 0x3A50854
	0x03A50834 ADRP X0, 0x6CB000
	0x03A50838 LDR X0, [X0 + 0x8F8]
	0x03A5083C BL 0x1C16CF4
	0x03A50840 ADRP X0, 0x704000
	0x03A50844 LDR X0, [X0 + 0x8C8]
	0x03A50848 BL 0x1C16CF4
	0x03A5084C MOVZ W8, 0x1
	0x03A50850 STRB W8, [X23 + 0x1BB]
	0x03A50854 LDR X0, [X24]
	0x03A50858 ADRP X23, 0x6CB000
	0x03A5085C LDR W8, [X0 + 0xE0]
	0x03A50860 LDR X23, [X23 + 0x8F8]
	0x03A50864 CBNZ W8, 0x3A50870
	0x03A50868 BL 0x1C16DFC
	0x03A5086C LDR X0, [X24]
	0x03A50870 LDR X8, [X0 + 0xB8]
	0x03A50874 STR X20, [X8 + 0x18]
	0x03A50878 LDR X9, [X22 + 0x20]
	0x03A5087C LDP V1, V0, [X22]
	0x03A50880 STR X9, [X8 + 0x40]
	0x03A50884 STP V1, V0, [X8 + 0x20]
	0x03A50888 LDR X8, [X22 + 0x20]
	0x03A5088C LDP V1, V0, [X22]
	0x03A50890 LDR X0, [X23]
	0x03A50894 STR X8, [X31 + 0x50]
	0x03A50898 STP V1, V0, [X31 + 0x30]
	0x03A5089C LDR W8, [X0 + 0xE0]
	0x03A508A0 CBNZ W8, 0x3A508A8
	0x03A508A4 BL 0x1C16DFC
	0x03A508A8 LDP V0, V1, [X31 + 0x30]
	0x03A508AC LDR X8, [X31 + 0x50]
	0x03A508B0 ADD X2, X31, 0x0
	0x03A508B4 MOV X0, X21
	0x03A508B8 STP V0, V1, [X31]
	0x03A508BC MOV X1, X20
	0x03A508C0 MOV W3, W19
	0x03A508C4 MOV V0.16B, V11.16B
	0x03A508C8 MOV V1.16B, V10.16B
	0x03A508CC MOV V2.16B, V9.16B
	0x03A508D0 MOV V3.16B, V8.16B
	0x03A508D4 MOV X4, X31
	0x03A508D8 STR X8, [X31 + 0x20]
	0x03A508DC BL 0x39E6B8C
	0x03A508E0 LDP X20, X19, [X31 + 0xB0]
	0x03A508E4 LDP X22, X21, [X31 + 0xA0]
	0x03A508E8 LDP X24, X23, [X31 + 0x90]
	0x03A508EC LDR X30, [X31 + 0x80]
	0x03A508F0 LDP D9, D8, [X31 + 0x70]
	0x03A508F4 LDP D11, D10, [X31 + 0x60]
	0x03A508F8 ADD X31, X31, 0xC0
	0x03A508FC RET
	0x03A50900 STP D11, D10, [X31 - 0x60]!
	0x03A50904 STP D9, D8, [X31 + 0x10]
	0x03A50908 STR X30, [X31 + 0x20]
	0x03A5090C STP X24, X23, [X31 + 0x30]
	0x03A50910 STP X22, X21, [X31 + 0x40]
	0x03A50914 STP X20, X19, [X31 + 0x50]
	0x03A50918 ADRP X24, 0x992000
	0x03A5091C ADRP X23, 0x704000
	0x03A50920 LDRB W8, [X24 + 0x1BC]
	0x03A50924 LDR X23, [X23 + 0x8C8]
	0x03A50928 MOV V8.16B, V3.16B
	0x03A5092C MOV V9.16B, V2.16B
	0x03A50930 MOV V10.16B, V1.16B
	0x03A50934 MOV V11.16B, V0.16B
	0x03A50938 MOV W19, W3
	0x03A5093C MOV X20, X2
	0x03A50940 MOV X22, X1
	0x03A50944 MOV X21, X0
	0x03A50948 TBNZ X8, 0x0, 0x3A5096C
	0x03A5094C ADRP X0, 0x6CB000
	0x03A50950 LDR X0, [X0 + 0x8F8]
	0x03A50954 BL 0x1C16CF4
	0x03A50958 ADRP X0, 0x704000
	0x03A5095C LDR X0, [X0 + 0x8C8]
	0x03A50960 BL 0x1C16CF4
	0x03A50964 MOVZ W8, 0x1
	0x03A50968 STRB W8, [X24 + 0x1BC]
	0x03A5096C LDR X0, [X23]
	0x03A50970 LDR W8, [X0 + 0xE0]
	0x03A50974 CBNZ W8, 0x3A50980
	0x03A50978 BL 0x1C16DFC
	0x03A5097C LDR X0, [X23]
	0x03A50980 LDR X8, [X0 + 0xB8]
	0x03A50984 STR X22, [X8 + 0x18]
	0x03A50988 CBZ X20, 0x3A50A04
	0x03A5098C LDR X9, [X20 + 0x48]
	0x03A50990 LDUR V0, [X20 + 0x38]
	0x03A50994 LDUR V1, [X20 + 0x28]
	0x03A50998 ADRP X10, 0x6CB000
	0x03A5099C LDR X10, [X10 + 0x8F8]
	0x03A509A0 STR X9, [X8 + 0x40]
	0x03A509A4 STP V1, V0, [X8 + 0x20]
	0x03A509A8 LDR X9, [X0 + 0xB8]
	0x03A509AC LDR X8, [X10]
	0x03A509B0 LDR X22, [X9 + 0x18]
	0x03A509B4 LDR W10, [X8 + 0xE0]
	0x03A509B8 CBNZ W10, 0x3A509C4
	0x03A509BC MOV X0, X8
	0x03A509C0 BL 0x1C16DFC
	0x03A509C4 MOV X0, X21
	0x03A509C8 MOV X1, X22
	0x03A509CC MOV X2, X20
	0x03A509D0 MOV W3, W19
	0x03A509D4 MOV V2.16B, V9.16B
	0x03A509D8 MOV V3.16B, V8.16B
	0x03A509DC LDP X20, X19, [X31 + 0x50]
	0x03A509E0 LDP X22, X21, [X31 + 0x40]
	0x03A509E4 LDP X24, X23, [X31 + 0x30]
	0x03A509E8 LDR X30, [X31 + 0x20]
	0x03A509EC LDP D9, D8, [X31 + 0x10]
	0x03A509F0 MOV V0.16B, V11.16B
	0x03A509F4 MOV V1.16B, V10.16B
	0x03A509F8 MOV X4, X31
	0x03A509FC LDP D11, D10, [X31], #0x60
	0x03A50A00 B 0x39E8224
	0x03A50A04 BL 0x1C16F20
	0x03A50A08 SUB X31, X31, 0x140
	0x03A50A0C STP D11, D10, [X31 + 0xC0]
	0x03A50A10 STP D9, D8, [X31 + 0xD0]
	0x03A50A14 STP X29, X30, [X31 + 0xE0]
	0x03A50A18 STP X28, X27, [X31 + 0xF0]
	0x03A50A1C STP X26, X25, [X31 + 0x100]
	0x03A50A20 STP X24, X23, [X31 + 0x110]
	0x03A50A24 STP X22, X21, [X31 + 0x120]
	0x03A50A28 STP X20, X19, [X31 + 0x130]
	0x03A50A2C ADRP X26, 0x992000
	0x03A50A30 ADRP X25, 0x704000
	0x03A50A34 LDRB W8, [X26 + 0x1B6]
	0x03A50A38 LDR X25, [X25 + 0x8C8]
	0x03A50A3C MOV W20, W5
	0x03A50A40 MOV W21, W4
	0x03A50A44 MOV V8.16B, V3.16B
	0x03A50A48 MOV V9.16B, V2.16B
	0x03A50A4C MOV V10.16B, V1.16B
	0x03A50A50 MOV V11.16B, V0.16B
	0x03A50A54 MOV W19, W3
	0x03A50A58 MOV X22, X2
	0x03A50A5C MOV X23, X1
	0x03A50A60 MOV X24, X0
	0x03A50A64 TBNZ X8, 0x0, 0x3A50A7C
	0x03A50A68 ADRP X0, 0x704000
	0x03A50A6C LDR X0, [X0 + 0x8C8]
	0x03A50A70 BL 0x1C16CF4
	0x03A50A74 MOVZ W8, 0x1
	0x03A50A78 STRB W8, [X26 + 0x1B6]
	0x03A50A7C LDR X0, [X25]
	0x03A50A80 LDR W8, [X0 + 0xE0]
	0x03A50A84 CBNZ W8, 0x3A50A90
	0x03A50A88 BL 0x1C16DFC
	0x03A50A8C LDR X0, [X25]
	0x03A50A90 LDR X8, [X0 + 0xB8]
	0x03A50A94 MOV X0, X23
	0x03A50A98 MOV X1, X31
	0x03A50A9C LDR X27, [X8 + 0x18]
	0x03A50AA0 ADD X8, X31, 0x68
	0x03A50AA4 BL 0x39CDF64
	0x03A50AA8 LDUR V0, [X31 + 0x68]
	0x03A50AAC LDUR V1, [X31 + 0x78]
	0x03A50AB0 LDR X8, [X31 + 0x88]
	0x03A50AB4 STP V0, V1, [X31 + 0x90]
	0x03A50AB8 STR X8, [X31 + 0xB0]
	0x03A50ABC CBZ X27, 0x3A50D08
	0x03A50AC0 LDP V0, V1, [X31 + 0x90]
	0x03A50AC4 LDR X8, [X31 + 0xB0]
	0x03A50AC8 STP V0, V1, [X31 + 0x40]
	0x03A50ACC STR X8, [X31 + 0x60]
	0x03A50AD0 LDR W8, [X27 + 0x18]
	0x03A50AD4 CBZ W8, 0x3A50D0C
	0x03A50AD8 LDR X8, [X31 + 0x60]
	0x03A50ADC LDP V1, V0, [X31 + 0x40]
	0x03A50AE0 MOVZ W26, 0x1
	0x03A50AE4 STR X8, [X27 + 0x40]
	0x03A50AE8 STP V1, V0, [X27 + 0x20]
	0x03A50AEC MOVZ W27, 0x48
	0x03A50AF0 LDR X0, [X25]
	0x03A50AF4 LDR W8, [X0 + 0xE0]
	0x03A50AF8 CBNZ W8, 0x3A50B04
	0x03A50AFC BL 0x1C16DFC
	0x03A50B00 LDR X0, [X25]
	0x03A50B04 LDR X8, [X0 + 0xB8]
	0x03A50B08 LDR X9, [X8 + 0x18]
	0x03A50B0C CBZ X9, 0x3A50D08
	0x03A50B10 LDR W10, [X0 + 0xE0]
	0x03A50B14 LDRSW X28, [X9 + 0x18]
	0x03A50B18 CBNZ W10, 0x3A50B28
	0x03A50B1C BL 0x1C16DFC
	0x03A50B20 LDR X0, [X25]
	0x03A50B24 LDR X8, [X0 + 0xB8]
	0x03A50B28 CMP X26, X28
	0x03A50B2C B.GE 0x3A50B98
	0x03A50B30 LDR X28, [X8 + 0x18]
	0x03A50B34 ADD X8, X31, 0x68
	0x03A50B38 MOV W0, W31
	0x03A50B3C MOV X1, X31
	0x03A50B40 BL 0x3C4B258
	0x03A50B44 LDUR V0, [X31 + 0x68]
	0x03A50B48 LDUR V1, [X31 + 0x78]
	0x03A50B4C LDR X8, [X31 + 0x88]
	0x03A50B50 STP V0, V1, [X31 + 0x90]
	0x03A50B54 STR X8, [X31 + 0xB0]
	0x03A50B58 CBZ X28, 0x3A50D08
	0x03A50B5C LDP V0, V1, [X31 + 0x90]
	0x03A50B60 LDR X8, [X31 + 0xB0]
	0x03A50B64 STP V0, V1, [X31 + 0x10]
	0x03A50B68 STR X8, [X31 + 0x30]
	0x03A50B6C LDR W8, [X28 + 0x18]
	0x03A50B70 CMP X26, X8
	0x03A50B74 B.CS 0x3A50D0C
	0x03A50B78 LDR X8, [X31 + 0x30]
	0x03A50B7C LDP V0, V1, [X31 + 0x10]
	0x03A50B80 ADD X9, X28, X27
	0x03A50B84 ADD X26, X26, 0x1
	0x03A50B88 ADD X27, X27, 0x28
	0x03A50B8C STR X8, [X9 + 0x20]
	0x03A50B90 STP V0, V1, [X9]
	0x03A50B94 B 0x3A50AF0
	0x03A50B98 LDR X9, [X8 + 0x48]
	0x03A50B9C CBZ X9, 0x3A50D08
	0x03A50BA0 LDR W10, [X9 + 0x18]
	0x03A50BA4 CBZ W10, 0x3A50D0C
	0x03A50BA8 STR W21, [X9 + 0x20]
	0x03A50BAC STR W20, [X8 + 0x50]
	0x03A50BB0 MOVZ W26, 0x9
	0x03A50BB4 LDR W8, [X0 + 0xE0]
	0x03A50BB8 CBNZ W8, 0x3A50BC4
	0x03A50BBC BL 0x1C16DFC
	0x03A50BC0 LDR X0, [X25]
	0x03A50BC4 LDR X8, [X0 + 0xB8]
	0x03A50BC8 LDR X8, [X8 + 0x48]
	0x03A50BCC CBZ X8, 0x3A50D08
	0x03A50BD0 LDRSW X8, [X8 + 0x18]
	0x03A50BD4 SUB X27, X26, 0x8
	0x03A50BD8 CMP X27, X8
	0x03A50BDC B.GE 0x3A50C14
	0x03A50BE0 LDR W8, [X0 + 0xE0]
	0x03A50BE4 CBNZ W8, 0x3A50BF0
	0x03A50BE8 BL 0x1C16DFC
	0x03A50BEC LDR X0, [X25]
	0x03A50BF0 LDR X8, [X0 + 0xB8]
	0x03A50BF4 LDR X8, [X8 + 0x48]
	0x03A50BF8 CBZ X8, 0x3A50D08
	0x03A50BFC LDR W9, [X8 + 0x18]
	0x03A50C00 CMP X27, X9
	0x03A50C04 B.CS 0x3A50D0C
	0x03A50C08 STR W31, [X8, X26, LSL #2]
	0x03A50C0C ADD X26, X26, 0x1
	0x03A50C10 B 0x3A50BB4
	0x03A50C14 ADD X8, X31, 0x68
	0x03A50C18 MOV X0, X22
	0x03A50C1C MOV X1, X31
	0x03A50C20 BL 0x39CDF64
	0x03A50C24 LDUR V0, [X31 + 0x68]
	0x03A50C28 LDUR V1, [X31 + 0x78]
	0x03A50C2C LDR X8, [X31 + 0x88]
	0x03A50C30 LDR X0, [X25]
	0x03A50C34 STP V0, V1, [X31 + 0x90]
	0x03A50C38 STR X8, [X31 + 0xB0]
	0x03A50C3C LDR W8, [X0 + 0xE0]
	0x03A50C40 CBNZ W8, 0x3A50C4C
	0x03A50C44 BL 0x1C16DFC
	0x03A50C48 LDR X0, [X25]
	0x03A50C4C LDR X8, [X0 + 0xB8]
	0x03A50C50 LDR X9, [X31 + 0xB0]
	0x03A50C54 LDP V1, V0, [X31 + 0x90]
	0x03A50C58 STR X9, [X8 + 0x40]
	0x03A50C5C STP V1, V0, [X8 + 0x20]
	0x03A50C60 LDR W8, [X0 + 0xE0]
	0x03A50C64 CBZ W8, 0x3A50C74
	0x03A50C68 LDR X8, [X0 + 0xB8]
	0x03A50C6C LDRB W25, [X8 + 0x8]
	0x03A50C70 B 0x3A50C90
	0x03A50C74 BL 0x1C16DFC
	0x03A50C78 LDR X0, [X25]
	0x03A50C7C LDR X8, [X0 + 0xB8]
	0x03A50C80 LDR W9, [X0 + 0xE0]
	0x03A50C84 LDRB W25, [X8 + 0x8]
	0x03A50C88 CBNZ W9, 0x3A50C90
	0x03A50C8C BL 0x1C16DFC
	0x03A50C90 CMP W21, 0x2
	0x03A50C94 CSET W8, EQ
	0x03A50C98 CMP W20, 0x2
	0x03A50C9C UBFM W8, W8, 0x1F, 0x1E
	0x03A50CA0 CSET W9, EQ
	0x03A50CA4 CMP W25, 0x0
	0x03A50CA8 CSEL W3, W8, W21, EQ
	0x03A50CAC UBFM W8, W9, 0x1F, 0x1E
	0x03A50CB0 AND W5, W19, 0x2
	0x03A50CB4 CSEL W6, W8, W20, EQ
	0x03A50CB8 UBFM W2, W19, 0x1F, 0x0
	0x03A50CBC MOV X0, X24
	0x03A50CC0 MOV X1, X23
	0x03A50CC4 MOV X4, X22
	0x03A50CC8 MOV W7, W19
	0x03A50CCC MOV V0.16B, V11.16B
	0x03A50CD0 MOV V1.16B, V10.16B
	0x03A50CD4 MOV V2.16B, V9.16B
	0x03A50CD8 MOV V3.16B, V8.16B
	0x03A50CDC BL 0x3A515D0
	0x03A50CE0 LDP X20, X19, [X31 + 0x130]
	0x03A50CE4 LDP X22, X21, [X31 + 0x120]
	0x03A50CE8 LDP X24, X23, [X31 + 0x110]
	0x03A50CEC LDP X26, X25, [X31 + 0x100]
	0x03A50CF0 LDP X28, X27, [X31 + 0xF0]
	0x03A50CF4 LDP X29, X30, [X31 + 0xE0]
	0x03A50CF8 LDP D9, D8, [X31 + 0xD0]
	0x03A50CFC LDP D11, D10, [X31 + 0xC0]
	0x03A50D00 ADD X31, X31, 0x140
	0x03A50D04 RET
	0x03A50D08 BL 0x1C16F20
	0x03A50D0C BL 0x1C16F28
	0x03A50D10 SUB X31, X31, 0x1B0
	0x03A50D14 STP D11, D10, [X31 + 0x130]
	0x03A50D18 STP D9, D8, [X31 + 0x140]
	0x03A50D1C STP X29, X30, [X31 + 0x150]
	0x03A50D20 STP X28, X27, [X31 + 0x160]
	0x03A50D24 STP X26, X25, [X31 + 0x170]
	0x03A50D28 STP X24, X23, [X31 + 0x180]
	0x03A50D2C STP X22, X21, [X31 + 0x190]
	0x03A50D30 STP X20, X19, [X31 + 0x1A0]
	0x03A50D34 ADRP X26, 0x992000
	0x03A50D38 ADRP X25, 0x704000
	0x03A50D3C LDRB W8, [X26 + 0x1B5]
	0x03A50D40 LDR X25, [X25 + 0x8C8]
	0x03A50D44 MOV W21, W5
	0x03A50D48 MOV W22, W4
	0x03A50D4C MOV V8.16B, V3.16B
	0x03A50D50 MOV V9.16B, V2.16B
	0x03A50D54 MOV V10.16B, V1.16B
	0x03A50D58 MOV V11.16B, V0.16B
	0x03A50D5C MOV W19, W3
	0x03A50D60 MOV X23, X2
	0x03A50D64 MOV X24, X1
	0x03A50D68 MOV X20, X0
	0x03A50D6C TBNZ X8, 0x0, 0x3A50D84
	0x03A50D70 ADRP X0, 0x704000
	0x03A50D74 LDR X0, [X0 + 0x8C8]
	0x03A50D78 BL 0x1C16CF4
	0x03A50D7C MOVZ W8, 0x1
	0x03A50D80 STRB W8, [X26 + 0x1B5]
	0x03A50D84 LDR X0, [X25]
	0x03A50D88 LDR W8, [X0 + 0xE0]
	0x03A50D8C CBNZ W8, 0x3A50D98
	0x03A50D90 BL 0x1C16DFC
	0x03A50D94 LDR X0, [X25]
	0x03A50D98 LDR X8, [X0 + 0xB8]
	0x03A50D9C LDR X9, [X24 + 0x20]
	0x03A50DA0 LDP V0, V1, [X24]
	0x03A50DA4 LDR X8, [X8 + 0x18]
	0x03A50DA8 STR X9, [X31 + 0x120]
	0x03A50DAC STP V0, V1, [X31 + 0x100]
	0x03A50DB0 CBZ X8, 0x3A51014
	0x03A50DB4 LDP V0, V1, [X31 + 0x100]
	0x03A50DB8 LDR X9, [X31 + 0x120]
	0x03A50DBC STP V0, V1, [X31 + 0xD0]
	0x03A50DC0 STR X9, [X31 + 0xF0]
	0x03A50DC4 LDR W9, [X8 + 0x18]
	0x03A50DC8 CBZ W9, 0x3A51018
	0x03A50DCC LDR X9, [X31 + 0xF0]
	0x03A50DD0 LDP V1, V0, [X31 + 0xD0]
	0x03A50DD4 MOVZ W26, 0x1
	0x03A50DD8 MOVZ W27, 0x48
	0x03A50DDC STR X9, [X8 + 0x40]
	0x03A50DE0 STP V1, V0, [X8 + 0x20]
	0x03A50DE4 LDR X0, [X25]
	0x03A50DE8 LDR W8, [X0 + 0xE0]
	0x03A50DEC CBNZ W8, 0x3A50DF8
	0x03A50DF0 BL 0x1C16DFC
	0x03A50DF4 LDR X0, [X25]
	0x03A50DF8 LDR X8, [X0 + 0xB8]
	0x03A50DFC LDR X9, [X8 + 0x18]
	0x03A50E00 CBZ X9, 0x3A51014
	0x03A50E04 LDR W10, [X0 + 0xE0]
	0x03A50E08 LDRSW X28, [X9 + 0x18]
	0x03A50E0C CBNZ W10, 0x3A50E1C
	0x03A50E10 BL 0x1C16DFC
	0x03A50E14 LDR X0, [X25]
	0x03A50E18 LDR X8, [X0 + 0xB8]
	0x03A50E1C CMP X26, X28
	0x03A50E20 B.GE 0x3A50E88
	0x03A50E24 LDR X28, [X8 + 0x18]
	0x03A50E28 ADD X8, X31, 0xA0
	0x03A50E2C MOV W0, W31
	0x03A50E30 MOV X1, X31
	0x03A50E34 BL 0x3C4B258
	0x03A50E38 LDP V0, V1, [X31 + 0xA0]
	0x03A50E3C LDR X8, [X31 + 0xC0]
	0x03A50E40 STP V0, V1, [X31 + 0x100]
	0x03A50E44 STR X8, [X31 + 0x120]
	0x03A50E48 CBZ X28, 0x3A51014
	0x03A50E4C LDP V0, V1, [X31 + 0x100]
	0x03A50E50 LDR X8, [X31 + 0x120]
	0x03A50E54 STP V0, V1, [X31 + 0x70]
	0x03A50E58 STR X8, [X31 + 0x90]
	0x03A50E5C LDR W8, [X28 + 0x18]
	0x03A50E60 CMP X26, X8
	0x03A50E64 B.CS 0x3A51018
	0x03A50E68 LDR X8, [X31 + 0x90]
	0x03A50E6C LDP V0, V1, [X31 + 0x70]
	0x03A50E70 ADD X9, X28, X27
	0x03A50E74 ADD X26, X26, 0x1
	0x03A50E78 ADD X27, X27, 0x28
	0x03A50E7C STR X8, [X9 + 0x20]
	0x03A50E80 STP V0, V1, [X9]
	0x03A50E84 B 0x3A50DE4
	0x03A50E88 LDR X9, [X8 + 0x48]
	0x03A50E8C CBZ X9, 0x3A51014
	0x03A50E90 LDR W10, [X9 + 0x18]
	0x03A50E94 CBZ W10, 0x3A51018
	0x03A50E98 STR W22, [X9 + 0x20]
	0x03A50E9C STR W21, [X8 + 0x50]
	0x03A50EA0 MOVZ W26, 0x9
	0x03A50EA4 LDR W8, [X0 + 0xE0]
	0x03A50EA8 CBNZ W8, 0x3A50EB4
	0x03A50EAC BL 0x1C16DFC
	0x03A50EB0 LDR X0, [X25]
	0x03A50EB4 LDR X8, [X0 + 0xB8]
	0x03A50EB8 LDR X9, [X8 + 0x48]
	0x03A50EBC CBZ X9, 0x3A51014
	0x03A50EC0 LDRSW X9, [X9 + 0x18]
	0x03A50EC4 SUB X27, X26, 0x8
	0x03A50EC8 CMP X27, X9
	0x03A50ECC B.GE 0x3A50F04
	0x03A50ED0 LDR W8, [X0 + 0xE0]
	0x03A50ED4 CBNZ W8, 0x3A50EE0
	0x03A50ED8 BL 0x1C16DFC
	0x03A50EDC LDR X0, [X25]
	0x03A50EE0 LDR X8, [X0 + 0xB8]
	0x03A50EE4 LDR X8, [X8 + 0x48]
	0x03A50EE8 CBZ X8, 0x3A51014
	0x03A50EEC LDR W9, [X8 + 0x18]
	0x03A50EF0 CMP X27, X9
	0x03A50EF4 B.CS 0x3A51018
	0x03A50EF8 STR W31, [X8, X26, LSL #2]
	0x03A50EFC ADD X26, X26, 0x1
	0x03A50F00 B 0x3A50EA4
	0x03A50F04 LDR X9, [X23 + 0x20]
	0x03A50F08 LDP V1, V0, [X23]
	0x03A50F0C STR X9, [X31 + 0x120]
	0x03A50F10 STP V1, V0, [X31 + 0x100]
	0x03A50F14 LDR W9, [X0 + 0xE0]
	0x03A50F18 CBNZ W9, 0x3A50F28
	0x03A50F1C BL 0x1C16DFC
	0x03A50F20 LDR X0, [X25]
	0x03A50F24 LDR X8, [X0 + 0xB8]
	0x03A50F28 LDR X9, [X31 + 0x120]
	0x03A50F2C LDP V1, V0, [X31 + 0x100]
	0x03A50F30 STR X9, [X8 + 0x40]
	0x03A50F34 STP V1, V0, [X8 + 0x20]
	0x03A50F38 LDR W8, [X0 + 0xE0]
	0x03A50F3C CBNZ W8, 0x3A50F4C
	0x03A50F40 BL 0x1C16DFC
	0x03A50F44 LDR X0, [X25]
	0x03A50F48 LDR W8, [X0 + 0xE0]
	0x03A50F4C LDR X9, [X0 + 0xB8]
	0x03A50F50 LDR X10, [X24 + 0x20]
	0x03A50F54 LDP V1, V0, [X24]
	0x03A50F58 LDRB W24, [X9 + 0x8]
	0x03A50F5C STR X10, [X31 + 0x120]
	0x03A50F60 STP V1, V0, [X31 + 0x100]
	0x03A50F64 LDR X9, [X23 + 0x20]
	0x03A50F68 LDP V1, V0, [X23]
	0x03A50F6C STR X9, [X31 + 0xC0]
	0x03A50F70 STP V1, V0, [X31 + 0xA0]
	0x03A50F74 CBNZ W8, 0x3A50F7C
	0x03A50F78 BL 0x1C16DFC
	0x03A50F7C LDP V0, V1, [X31 + 0x100]
	0x03A50F80 CMP W22, 0x2
	0x03A50F84 CSET W8, EQ
	0x03A50F88 CMP W21, 0x2
	0x03A50F8C CSET W9, EQ
	0x03A50F90 CMP W24, 0x0
	0x03A50F94 UBFM W8, W8, 0x1F, 0x1E
	0x03A50F98 STP V0, V1, [X31 + 0x40]
	0x03A50F9C LDP V0, V1, [X31 + 0xA0]
	0x03A50FA0 UBFM W9, W9, 0x1F, 0x1E
	0x03A50FA4 CSEL W3, W8, W22, EQ
	0x03A50FA8 LDR X8, [X31 + 0x120]
	0x03A50FAC CSEL W6, W9, W21, EQ
	0x03A50FB0 LDR X9, [X31 + 0xC0]
	0x03A50FB4 AND W5, W19, 0x2
	0x03A50FB8 UBFM W2, W19, 0x1F, 0x0
	0x03A50FBC STP V0, V1, [X31 + 0x10]
	0x03A50FC0 ADD X1, X31, 0x40
	0x03A50FC4 ADD X4, X31, 0x10
	0x03A50FC8 MOV X0, X20
	0x03A50FCC MOV W7, W19
	0x03A50FD0 MOV V0.16B, V11.16B
	0x03A50FD4 MOV V1.16B, V10.16B
	0x03A50FD8 MOV V2.16B, V9.16B
	0x03A50FDC MOV V3.16B, V8.16B
	0x03A50FE0 STR X8, [X31 + 0x60]
	0x03A50FE4 STR X9, [X31 + 0x30]
	0x03A50FE8 BL 0x3A5101C
	0x03A50FEC LDP X20, X19, [X31 + 0x1A0]
	0x03A50FF0 LDP X22, X21, [X31 + 0x190]
	0x03A50FF4 LDP X24, X23, [X31 + 0x180]
	0x03A50FF8 LDP X26, X25, [X31 + 0x170]
	0x03A50FFC LDP X28, X27, [X31 + 0x160]
	0x03A51000 LDP X29, X30, [X31 + 0x150]
	0x03A51004 LDP D9, D8, [X31 + 0x140]
	0x03A51008 LDP D11, D10, [X31 + 0x130]
	0x03A5100C ADD X31, X31, 0x1B0
	0x03A51010 RET
	0x03A51014 BL 0x1C16F20
	0x03A51018 BL 0x1C16F28
	0x03A5101C SUB X31, X31, 0x1E0
	0x03A51020 STP D11, D10, [X31 + 0x160]
	0x03A51024 STP D9, D8, [X31 + 0x170]
	0x03A51028 STR X29, [X31 + 0x180]
	0x03A5102C STP X30, X27, [X31 + 0x190]
	0x03A51030 STP X26, X25, [X31 + 0x1A0]
	0x03A51034 STP X24, X23, [X31 + 0x1B0]
	0x03A51038 STP X22, X21, [X31 + 0x1C0]
	0x03A5103C STP X20, X19, [X31 + 0x1D0]
	0x03A51040 ADRP X27, 0x991000
	0x03A51044 LDRB W8, [X27 + 0x1B9]
	0x03A51048 MOV V8.16B, V3.16B
	0x03A5104C MOV V9.16B, V2.16B
	0x03A51050 MOV V10.16B, V1.16B
	0x03A51054 MOV V11.16B, V0.16B
	0x03A51058 MOV W19, W7
	0x03A5105C MOV W20, W6
	0x03A51060 MOV W21, W5
	0x03A51064 MOV X25, X4
	0x03A51068 MOV W22, W3
	0x03A5106C MOV W23, W2
	0x03A51070 MOV X26, X1
	0x03A51074 MOV X24, X0
	0x03A51078 TBNZ X8, 0x0, 0x3A51090
	0x03A5107C ADRP X0, 0x6CA000
	0x03A51080 LDR X0, [X0 + 0x8F8]
	0x03A51084 BL 0x1C16CF4
	0x03A51088 MOVZ W8, 0x1
	0x03A5108C STRB W8, [X27 + 0x1B9]
	0x03A51090 LDR X8, [X25 + 0x20]
	0x03A51094 LDP V1, V0, [X25]
	0x03A51098 ADRP X27, 0x6CA000
	0x03A5109C LDR X27, [X27 + 0x8F8]
	0x03A510A0 STR X8, [X31 + 0x150]
	0x03A510A4 ADD X8, X31, 0x100
	0x03A510A8 MOVZ W0, 0x2
	0x03A510AC MOV X1, X31
	0x03A510B0 STP V1, V0, [X31 + 0x130]
	0x03A510B4 BL 0x3C4B204
	0x03A510B8 LDP V0, V1, [X31 + 0x100]
	0x03A510BC LDR X8, [X31 + 0x120]
	0x03A510C0 LDP V2, V3, [X31 + 0x130]
	0x03A510C4 LDR X9, [X31 + 0x150]
	0x03A510C8 ADD X0, X31, 0xD0
	0x03A510CC ADD X1, X31, 0xA0
	0x03A510D0 MOV X2, X31
	0x03A510D4 STP V0, V1, [X31 + 0xA0]
	0x03A510D8 STR X8, [X31 + 0xC0]
	0x03A510DC STP V2, V3, [X31 + 0xD0]
	0x03A510E0 STR X9, [X31 + 0xF0]
	0x03A510E4 BL 0x3C4B6D8
	0x03A510E8 TBZ X0, 0x0, 0x3A51154
	0x03A510EC LDR X8, [X26 + 0x20]
	0x03A510F0 LDP V1, V0, [X26]
	0x03A510F4 LDR X0, [X27]
	0x03A510F8 STR X8, [X31 + 0x150]
	0x03A510FC STP V1, V0, [X31 + 0x130]
	0x03A51100 LDR W8, [X0 + 0xE0]
	0x03A51104 CBNZ W8, 0x3A5110C
	0x03A51108 BL 0x1C16DFC
	0x03A5110C LDP V0, V1, [X31 + 0x130]
	0x03A51110 LDR X8, [X31 + 0x150]
	0x03A51114 ADD X1, X31, 0x70
	0x03A51118 MOV X0, X24
	0x03A5111C STP V0, V1, [X31 + 0x70]
	0x03A51120 MOV W2, W23
	0x03A51124 MOV W3, W22
	0x03A51128 MOV W4, W21
	0x03A5112C MOV W5, W20
	0x03A51130 MOV W6, W19
	0x03A51134 MOV V0.16B, V11.16B
	0x03A51138 MOV V1.16B, V10.16B
	0x03A5113C MOV V2.16B, V9.16B
	0x03A51140 MOV V3.16B, V8.16B
	0x03A51144 MOV X7, X31
	0x03A51148 STR X8, [X31 + 0x90]
	0x03A5114C BL 0x39E7534
	0x03A51150 B 0x3A511DC
	0x03A51154 LDR X8, [X26 + 0x20]
	0x03A51158 LDP V1, V0, [X26]
	0x03A5115C LDR X0, [X27]
	0x03A51160 STR X8, [X31 + 0x150]
	0x03A51164 STP V1, V0, [X31 + 0x130]
	0x03A51168 LDR X8, [X25 + 0x20]
	0x03A5116C LDP V1, V0, [X25]
	0x03A51170 STR X8, [X31 + 0x120]
	0x03A51174 STP V1, V0, [X31 + 0x100]
	0x03A51178 LDR W8, [X0 + 0xE0]
	0x03A5117C CBNZ W8, 0x3A51184
	0x03A51180 BL 0x1C16DFC
	0x03A51184 LDP V0, V1, [X31 + 0x130]
	0x03A51188 LDP V2, V3, [X31 + 0x100]
	0x03A5118C LDR X8, [X31 + 0x150]
	0x03A51190 LDR X9, [X31 + 0x120]
	0x03A51194 STP V0, V1, [X31 + 0x40]
	0x03A51198 STP V2, V3, [X31 + 0x10]
	0x03A5119C ADD X1, X31, 0x40
	0x03A511A0 ADD X4, X31, 0x10
	0x03A511A4 MOV X0, X24
	0x03A511A8 MOV W2, W23
	0x03A511AC MOV W3, W22
	0x03A511B0 MOV W5, W21
	0x03A511B4 MOV W6, W20
	0x03A511B8 MOV W7, W19
	0x03A511BC MOV V0.16B, V11.16B
	0x03A511C0 MOV V1.16B, V10.16B
	0x03A511C4 MOV V2.16B, V9.16B
	0x03A511C8 MOV V3.16B, V8.16B
	0x03A511CC STR X8, [X31 + 0x60]
	0x03A511D0 STR X9, [X31 + 0x30]
	0x03A511D4 STR X31, [X31]
	0x03A511D8 BL 0x39E710C
	0x03A511DC LDP X20, X19, [X31 + 0x1D0]
	0x03A511E0 LDP X22, X21, [X31 + 0x1C0]
	0x03A511E4 LDP X24, X23, [X31 + 0x1B0]
	0x03A511E8 LDP X26, X25, [X31 + 0x1A0]
	0x03A511EC LDP X30, X27, [X31 + 0x190]
	0x03A511F0 LDR X29, [X31 + 0x180]
	0x03A511F4 LDP D9, D8, [X31 + 0x170]
	0x03A511F8 LDP D11, D10, [X31 + 0x160]
	0x03A511FC ADD X31, X31, 0x1E0
	0x03A51200 RET
	0x03A51204 SUB X31, X31, 0x1A0
	0x03A51208 STP D11, D10, [X31 + 0x120]
	0x03A5120C STP D9, D8, [X31 + 0x130]
	0x03A51210 STP X29, X30, [X31 + 0x140]
	0x03A51214 STP X28, X27, [X31 + 0x150]
	0x03A51218 STP X26, X25, [X31 + 0x160]
	0x03A5121C STP X24, X23, [X31 + 0x170]
	0x03A51220 STP X22, X21, [X31 + 0x180]
	0x03A51224 STP X20, X19, [X31 + 0x190]
	0x03A51228 ADRP X23, 0x991000
	0x03A5122C ADRP X26, 0x703000
	0x03A51230 LDRB W8, [X23 + 0x1B4]
	0x03A51234 LDR X26, [X26 + 0x8C8]
	0x03A51238 MOV V8.16B, V3.16B
	0x03A5123C MOV V9.16B, V2.16B
	0x03A51240 MOV V10.16B, V1.16B
	0x03A51244 MOV V11.16B, V0.16B
	0x03A51248 MOV W19, W3
	0x03A5124C MOV X22, X2
	0x03A51250 MOV X20, X1
	0x03A51254 MOV X21, X0
	0x03A51258 TBNZ X8, 0x0, 0x3A5127C
	0x03A5125C ADRP X0, 0x6A2000
	0x03A51260 LDR X0, [X0 + 0x598]
	0x03A51264 BL 0x1C16CF4
	0x03A51268 ADRP X0, 0x703000
	0x03A5126C LDR X0, [X0 + 0x8C8]
	0x03A51270 BL 0x1C16CF4
	0x03A51274 MOVZ W8, 0x1
	0x03A51278 STRB W8, [X23 + 0x1B4]
	0x03A5127C LDR X0, [X26]
	0x03A51280 ADD X23, X31, 0xC8
	0x03A51284 LDR W8, [X0 + 0xE0]
	0x03A51288 CBNZ W8, 0x3A51294
	0x03A5128C BL 0x1C16DFC
	0x03A51290 LDR X0, [X26]
	0x03A51294 LDR X8, [X0 + 0xB8]
	0x03A51298 MOV X0, X20
	0x03A5129C MOV X1, X31
	0x03A512A0 LDR X25, [X8 + 0x18]
	0x03A512A4 ADD X8, X31, 0xC8
	0x03A512A8 BL 0x39CDF64
	0x03A512AC LDP V0, V1, [X23]
	0x03A512B0 LDR X8, [X31 + 0xE8]
	0x03A512B4 STP V0, V1, [X31 + 0xF0]
	0x03A512B8 STR X8, [X31 + 0x110]
	0x03A512BC CBZ X25, 0x3A515C8
	0x03A512C0 LDP V0, V1, [X31 + 0xF0]
	0x03A512C4 LDR X8, [X31 + 0x110]
	0x03A512C8 STP V0, V1, [X31 + 0xA0]
	0x03A512CC STR X8, [X31 + 0xC0]
	0x03A512D0 LDR W8, [X25 + 0x18]
	0x03A512D4 CBZ W8, 0x3A515CC
	0x03A512D8 LDR X8, [X31 + 0xC0]
	0x03A512DC LDP V0, V1, [X31 + 0xA0]
	0x03A512E0 ADRP X27, 0x6A2000
	0x03A512E4 LDR X27, [X27 + 0x598]
	0x03A512E8 MOVZ W24, 0x1
	0x03A512EC STR X8, [X25 + 0x40]
	0x03A512F0 STP V0, V1, [X25 + 0x20]
	0x03A512F4 MOVZ W25, 0x48
	0x03A512F8 LDR X0, [X26]
	0x03A512FC LDR W8, [X0 + 0xE0]
	0x03A51300 CBNZ W8, 0x3A5130C
	0x03A51304 BL 0x1C16DFC
	0x03A51308 LDR X0, [X26]
	0x03A5130C LDR X8, [X0 + 0xB8]
	0x03A51310 LDR X9, [X8 + 0x18]
	0x03A51314 CBZ X9, 0x3A515C8
	0x03A51318 LDR W10, [X0 + 0xE0]
	0x03A5131C LDRSW X28, [X9 + 0x18]
	0x03A51320 CBNZ W10, 0x3A51330
	0x03A51324 BL 0x1C16DFC
	0x03A51328 LDR X0, [X26]
	0x03A5132C LDR X8, [X0 + 0xB8]
	0x03A51330 CMP X24, X28
	0x03A51334 B.GE 0x3A5139C
	0x03A51338 LDR X28, [X8 + 0x18]
	0x03A5133C ADD X8, X31, 0xC8
	0x03A51340 MOV W0, W31
	0x03A51344 MOV X1, X31
	0x03A51348 BL 0x3C4B258
	0x03A5134C LDP V0, V1, [X23]
	0x03A51350 LDR X8, [X31 + 0xE8]
	0x03A51354 STP V0, V1, [X31 + 0xF0]
	0x03A51358 STR X8, [X31 + 0x110]
	0x03A5135C CBZ X28, 0x3A515C8
	0x03A51360 LDP V0, V1, [X31 + 0xF0]
	0x03A51364 LDR X8, [X31 + 0x110]
	0x03A51368 STP V0, V1, [X31 + 0x70]
	0x03A5136C STR X8, [X31 + 0x90]
	0x03A51370 LDR W8, [X28 + 0x18]
	0x03A51374 CMP X24, X8
	0x03A51378 B.CS 0x3A515CC
	0x03A5137C LDR X8, [X31 + 0x90]
	0x03A51380 LDP V0, V1, [X31 + 0x70]
	0x03A51384 ADD X9, X28, X25
	0x03A51388 ADD X24, X24, 0x1
	0x03A5138C ADD X25, X25, 0x28
	0x03A51390 STR X8, [X9 + 0x20]
	0x03A51394 STP V0, V1, [X9]
	0x03A51398 B 0x3A512F8
	0x03A5139C LDR X9, [X8 + 0x48]
	0x03A513A0 CBZ X9, 0x3A515C8
	0x03A513A4 LDR W10, [X9 + 0x18]
	0x03A513A8 CBZ W10, 0x3A515CC
	0x03A513AC STR W31, [X9 + 0x20]
	0x03A513B0 STR W31, [X8 + 0x50]
	0x03A513B4 MOVZ W24, 0x9
	0x03A513B8 LDR W8, [X0 + 0xE0]
	0x03A513BC CBNZ W8, 0x3A513C8
	0x03A513C0 BL 0x1C16DFC
	0x03A513C4 LDR X0, [X26]
	0x03A513C8 LDR X8, [X0 + 0xB8]
	0x03A513CC LDR X8, [X8 + 0x48]
	0x03A513D0 CBZ X8, 0x3A515C8
	0x03A513D4 LDRSW X8, [X8 + 0x18]
	0x03A513D8 SUB X25, X24, 0x8
	0x03A513DC CMP X25, X8
	0x03A513E0 B.GE 0x3A51418
	0x03A513E4 LDR W8, [X0 + 0xE0]
	0x03A513E8 CBNZ W8, 0x3A513F4
	0x03A513EC BL 0x1C16DFC
	0x03A513F0 LDR X0, [X26]
	0x03A513F4 LDR X8, [X0 + 0xB8]
	0x03A513F8 LDR X8, [X8 + 0x48]
	0x03A513FC CBZ X8, 0x3A515C8
	0x03A51400 LDR W9, [X8 + 0x18]
	0x03A51404 CMP X25, X9
	0x03A51408 B.CS 0x3A515CC
	0x03A5140C STR W31, [X8, X24, LSL #2]
	0x03A51410 ADD X24, X24, 0x1
	0x03A51414 B 0x3A513B8
	0x03A51418 ADD X8, X31, 0xC8
	0x03A5141C MOV X0, X22
	0x03A51420 MOV X1, X31
	0x03A51424 BL 0x39CDF64
	0x03A51428 LDP V0, V1, [X23]
	0x03A5142C LDR X8, [X31 + 0xE8]
	0x03A51430 LDR X0, [X26]
	0x03A51434 STP V0, V1, [X31 + 0xF0]
	0x03A51438 STR X8, [X31 + 0x110]
	0x03A5143C LDR W8, [X0 + 0xE0]
	0x03A51440 CBNZ W8, 0x3A5144C
	0x03A51444 BL 0x1C16DFC
	0x03A51448 LDR X0, [X26]
	0x03A5144C LDR X8, [X0 + 0xB8]
	0x03A51450 LDR X9, [X31 + 0x110]
	0x03A51454 LDP V1, V0, [X31 + 0xF0]
	0x03A51458 ANDS W31, W19, 0x6
	0x03A5145C STR X9, [X8 + 0x40]
	0x03A51460 STP V1, V0, [X8 + 0x20]
	0x03A51464 CSET W8, NE
	0x03A51468 CBZ X20, 0x3A515C8
	0x03A5146C LDR X0, [X27]
	0x03A51470 LDR X25, [X20 + 0x18]
	0x03A51474 UBFM W24, W19, 0x1F, 0x0
	0x03A51478 UBFM W23, W8, 0x1F, 0x1E
	0x03A5147C LDR W9, [X0 + 0xE0]
	0x03A51480 CBNZ W9, 0x3A51488
	0x03A51484 BL 0x1C16DFC
	0x03A51488 MOV X0, X25
	0x03A5148C MOV X1, X31
	0x03A51490 MOV X2, X31
	0x03A51494 BL 0x3C3883C
	0x03A51498 TBZ X0, 0x0, 0x3A5155C
	0x03A5149C CBZ X22, 0x3A515C8
	0x03A514A0 LDR X0, [X27]
	0x03A514A4 LDR X25, [X22 + 0x18]
	0x03A514A8 LDR W8, [X0 + 0xE0]
	0x03A514AC CBNZ W8, 0x3A514B4
	0x03A514B0 BL 0x1C16DFC
	0x03A514B4 MOV X0, X25
	0x03A514B8 MOV X1, X31
	0x03A514BC MOV X2, X31
	0x03A514C0 BL 0x3C3883C
	0x03A514C4 TBZ X0, 0x0, 0x3A5155C
	0x03A514C8 LDR X8, [X22 + 0x48]
	0x03A514CC LDUR V0, [X22 + 0x38]
	0x03A514D0 LDUR V1, [X22 + 0x28]
	0x03A514D4 LDR X0, [X26]
	0x03A514D8 STR X8, [X31 + 0x110]
	0x03A514DC STP V1, V0, [X31 + 0xF0]
	0x03A514E0 LDR W8, [X0 + 0xE0]
	0x03A514E4 CBNZ W8, 0x3A514F0
	0x03A514E8 BL 0x1C16DFC
	0x03A514EC LDR X0, [X26]
	0x03A514F0 LDR X8, [X0 + 0xB8]
	0x03A514F4 LDR X8, [X8 + 0x10]
	0x03A514F8 CBZ X8, 0x3A515C8
	0x03A514FC LDUR V0, [X8 + 0x28]
	0x03A51500 LDUR V1, [X8 + 0x38]
	0x03A51504 LDR X8, [X8 + 0x48]
	0x03A51508 LDP V2, V3, [X31 + 0xF0]
	0x03A5150C LDR X9, [X31 + 0x110]
	0x03A51510 ADD X0, X31, 0x40
	0x03A51514 ADD X1, X31, 0x10
	0x03A51518 MOV X2, X31
	0x03A5151C STR X8, [X31 + 0x30]
	0x03A51520 STP V0, V1, [X31 + 0x10]
	0x03A51524 STP V2, V3, [X31 + 0x40]
	0x03A51528 STR X9, [X31 + 0x60]
	0x03A5152C BL 0x3C4B6D8
	0x03A51530 TBZ X0, 0x0, 0x3A5155C
	0x03A51534 LDR X0, [X26]
	0x03A51538 LDR W8, [X0 + 0xE0]
	0x03A5153C CBNZ W8, 0x3A51544
	0x03A51540 BL 0x1C16DFC
	0x03A51544 MOV X0, X21
	0x03A51548 MOV X1, X20
	0x03A5154C MOV W2, W24
	0x03A51550 MOV W3, W31
	0x03A51554 MOV X4, X20
	0x03A51558 B 0x3A51580
	0x03A5155C LDR X0, [X26]
	0x03A51560 LDR W8, [X0 + 0xE0]
	0x03A51564 CBNZ W8, 0x3A5156C
	0x03A51568 BL 0x1C16DFC
	0x03A5156C MOV X0, X21
	0x03A51570 MOV X1, X20
	0x03A51574 MOV W2, W24
	0x03A51578 MOV W3, W31
	0x03A5157C MOV X4, X22
	0x03A51580 MOV W5, W23
	0x03A51584 MOV W6, W31
	0x03A51588 MOV W7, W19
	0x03A5158C MOV V0.16B, V11.16B
	0x03A51590 MOV V1.16B, V10.16B
	0x03A51594 MOV V2.16B, V9.16B
	0x03A51598 MOV V3.16B, V8.16B
	0x03A5159C BL 0x3A515D0
	0x03A515A0 LDP X20, X19, [X31 + 0x190]
	0x03A515A4 LDP X22, X21, [X31 + 0x180]
	0x03A515A8 LDP X24, X23, [X31 + 0x170]
	0x03A515AC LDP X26, X25, [X31 + 0x160]
	0x03A515B0 LDP X28, X27, [X31 + 0x150]
	0x03A515B4 LDP X29, X30, [X31 + 0x140]
	0x03A515B8 LDP D9, D8, [X31 + 0x130]
	0x03A515BC LDP D11, D10, [X31 + 0x120]
	0x03A515C0 ADD X31, X31, 0x1A0
	0x03A515C4 RET
	0x03A515C8 BL 0x1C16F20
	0x03A515CC BL 0x1C16F28
	0x03A515D0 SUB X31, X31, 0x150
	0x03A515D4 STP D11, D10, [X31 + 0xD0]
	0x03A515D8 STP D9, D8, [X31 + 0xE0]
	0x03A515DC STR X29, [X31 + 0xF0]
	0x03A515E0 STP X30, X27, [X31 + 0x100]
	0x03A515E4 STP X26, X25, [X31 + 0x110]
	0x03A515E8 STP X24, X23, [X31 + 0x120]
	0x03A515EC STP X22, X21, [X31 + 0x130]
	0x03A515F0 STP X20, X19, [X31 + 0x140]
	0x03A515F4 ADRP X27, 0x991000
	0x03A515F8 LDRB W8, [X27 + 0x1BA]
	0x03A515FC MOV V8.16B, V3.16B
	0x03A51600 MOV V9.16B, V2.16B
	0x03A51604 MOV V10.16B, V1.16B
	0x03A51608 MOV V11.16B, V0.16B
	0x03A5160C MOV W19, W7
	0x03A51610 MOV W20, W6
	0x03A51614 MOV W21, W5
	0x03A51618 MOV X26, X4
	0x03A5161C MOV W22, W3
	0x03A51620 MOV W23, W2
	0x03A51624 MOV X24, X1
	0x03A51628 MOV X25, X0
	0x03A5162C TBNZ X8, 0x0, 0x3A51644
	0x03A51630 ADRP X0, 0x6CA000
	0x03A51634 LDR X0, [X0 + 0x8F8]
	0x03A51638 BL 0x1C16CF4
	0x03A5163C MOVZ W8, 0x1
	0x03A51640 STRB W8, [X27 + 0x1BA]
	0x03A51644 CBZ X26, 0x3A51774
	0x03A51648 LDR X8, [X26 + 0x48]
	0x03A5164C LDUR V0, [X26 + 0x38]
	0x03A51650 LDUR V1, [X26 + 0x28]
	0x03A51654 ADRP X27, 0x6CA000
	0x03A51658 LDR X27, [X27 + 0x8F8]
	0x03A5165C STR X8, [X31 + 0xC0]
	0x03A51660 ADD X8, X31, 0x78
	0x03A51664 MOVZ W0, 0x2
	0x03A51668 MOV X1, X31
	0x03A5166C STP V1, V0, [X31 + 0xA0]
	0x03A51670 BL 0x3C4B204
	0x03A51674 LDUR V0, [X31 + 0x78]
	0x03A51678 LDUR V1, [X31 + 0x88]
	0x03A5167C LDR X8, [X31 + 0x98]
	0x03A51680 LDP V2, V3, [X31 + 0xA0]
	0x03A51684 LDR X9, [X31 + 0xC0]
	0x03A51688 ADD X0, X31, 0x50
	0x03A5168C ADD X1, X31, 0x20
	0x03A51690 MOV X2, X31
	0x03A51694 STP V0, V1, [X31 + 0x20]
	0x03A51698 STR X8, [X31 + 0x40]
	0x03A5169C STP V2, V3, [X31 + 0x50]
	0x03A516A0 STR X9, [X31 + 0x70]
	0x03A516A4 BL 0x3C4B6D8
	0x03A516A8 LDR X8, [X27]
	0x03A516AC MOV W27, W0
	0x03A516B0 LDR W9, [X8 + 0xE0]
	0x03A516B4 CBZ W9, 0x3A516F8
	0x03A516B8 TBZ X27, 0x0, 0x3A51704
	0x03A516BC MOVN W8, 0x0
	0x03A516C0 STR X31, [X31 + 0x18]
	0x03A516C4 STR W8, [X31 + 0x10]
	0x03A516C8 STR W8, [X31 + 0x8]
	0x03A516CC STR W31, [X31]
	0x03A516D0 MOV V0.16B, V11.16B
	0x03A516D4 MOV V1.16B, V10.16B
	0x03A516D8 MOV V2.16B, V9.16B
	0x03A516DC MOV V3.16B, V8.16B
	0x03A516E0 MOV X0, X25
	0x03A516E4 MOV X1, X24
	0x03A516E8 MOV W2, W23
	0x03A516EC MOV W3, W22
	0x03A516F0 MOV X4, X24
	0x03A516F4 B 0x3A5173C
	0x03A516F8 MOV X0, X8
	0x03A516FC BL 0x1C16DFC
	0x03A51700 TBNZ X27, 0x0, 0x3A516BC
	0x03A51704 MOVN W8, 0x0
	0x03A51708 MOV V0.16B, V11.16B
	0x03A5170C MOV V1.16B, V10.16B
	0x03A51710 MOV V2.16B, V9.16B
	0x03A51714 MOV V3.16B, V8.16B
	0x03A51718 MOV X0, X25
	0x03A5171C MOV X1, X24
	0x03A51720 MOV W2, W23
	0x03A51724 MOV W3, W22
	0x03A51728 MOV X4, X26
	0x03A5172C STR X31, [X31 + 0x18]
	0x03A51730 STR W8, [X31 + 0x10]
	0x03A51734 STR W8, [X31 + 0x8]
	0x03A51738 STR W31, [X31]
	0x03A5173C MOV W5, W21
	0x03A51740 MOV W6, W20
	0x03A51744 MOV W7, W19
	0x03A51748 BL 0x39E7E68
	0x03A5174C LDP X20, X19, [X31 + 0x140]
	0x03A51750 LDP X22, X21, [X31 + 0x130]
	0x03A51754 LDP X24, X23, [X31 + 0x120]
	0x03A51758 LDP X26, X25, [X31 + 0x110]
	0x03A5175C LDP X30, X27, [X31 + 0x100]
	0x03A51760 LDR X29, [X31 + 0xF0]
	0x03A51764 LDP D9, D8, [X31 + 0xE0]
	0x03A51768 LDP D11, D10, [X31 + 0xD0]
	0x03A5176C ADD X31, X31, 0x150
	0x03A51770 RET
	0x03A51774 BL 0x1C16F20
	0x03A51778 SUB X31, X31, 0xC0
	0x03A5177C STP D11, D10, [X31 + 0x60]
	0x03A51780 STP D9, D8, [X31 + 0x70]
	0x03A51784 STP X30, X25, [X31 + 0x80]
	0x03A51788 STP X24, X23, [X31 + 0x90]
	0x03A5178C STP X22, X21, [X31 + 0xA0]
	0x03A51790 STP X20, X19, [X31 + 0xB0]
	0x03A51794 ADRP X25, 0x991000
	0x03A51798 ADRP X24, 0x6CA000
	0x03A5179C LDRB W8, [X25 + 0x1B7]
	0x03A517A0 LDR X24, [X24 + 0x8F8]
	0x03A517A4 MOV V8.16B, V3.16B
	0x03A517A8 MOV V9.16B, V2.16B
	0x03A517AC MOV V10.16B, V1.16B
	0x03A517B0 MOV V11.16B, V0.16B
	0x03A517B4 MOV W19, W4
	0x03A517B8 MOV W20, W3
	0x03A517BC MOV W21, W2
	0x03A517C0 MOV X23, X1
	0x03A517C4 MOV X22, X0
	0x03A517C8 TBNZ X8, 0x0, 0x3A517E0
	0x03A517CC ADRP X0, 0x6CA000
	0x03A517D0 LDR X0, [X0 + 0x8F8]
	0x03A517D4 BL 0x1C16CF4
	0x03A517D8 MOVZ W8, 0x1
	0x03A517DC STRB W8, [X25 + 0x1B7]
	0x03A517E0 LDR X8, [X23 + 0x20]

ISIL:
	001 Move [X31-128], D11
	002 Move [X31-120], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X29
	006 Move [X31+40], X30
	007 Move [X31+48], X28
	008 Move [X31+56], X27
	009 Move [X31+64], X26
	010 Move [X31+72], X25
	011 Move [X31+80], X24
	012 Move [X31+88], X23
	013 Move [X31+96], X22
	014 Move [X31+104], X21
	015 Move [X31+112], X20
	016 Move [X31+120], X19
	017 Subtract X31, X31, 2512
	018 Move X19, 0x993000
	019 Move X28, 0x705000
	020 Move W8, [X19+432]
	021 Move X28, [X28+2248]
	022 Move X20, X3
	023 Move X21, X2
	024 Move X29, X1
	025 Move X22, X0
	026 Move TEMP, X8
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {50}
	030 Move X0, 0x6A4000
	031 Move X0, [X0+2600]
	032 Call 0x1C17CF4
	033 Move X0, 0x705000
	034 Move X0, [X0+16]
	035 Call 0x1C17CF4
	036 Move X0, 0x705000
	037 Move X0, [X0+2248]
	038 Call 0x1C17CF4
	039 Move X0, 0x706000
	040 Move X0, [X0+3528]
	041 Call 0x1C17CF4
	042 Move X0, 0x706000
	043 Move X0, [X0+4016]
	044 Call 0x1C17CF4
	045 Move X0, 0x706000
	046 Move X0, [X0+4024]
	047 Call 0x1C17CF4
	048 Move W8, 1
	049 Move [X19+432], W8
	050 Move X0, [X28]
	051 NotImplemented "Instruction MOVI not yet implemented."
	052 Move [X31+2496], X31
	053 Move [X31+2456], X31
	054 Move [X31+2448], X31
	055 Move [X31+2312], X31
	056 Move [X31+2304], X31
	057 Move [X31+2288], X31
	058 Move [X31+2240], X31
	059 Move [X31+155], V0
	060 Move [X31+154], V0
	061 Move [X31+152], V0
	062 Move [X31+151], V0
	063 Move [X31+150], V0
	064 Move [X31+149], V0
	065 Move [X31+148], V0
	066 Move [X31+147], V0
	067 Move [X31+146], V0
	068 Move [X31+145], V0
	069 Move [X31+142], V0
	070 Move [X31+141], V0
	071 Move [X31+139], V0
	072 Move [X31+138], V0
	073 Move [X31+2192], X31
	074 Move [X31+136], V0
	075 Move [X31+135], V0
	076 Move W8, [X0+224]
	077 Compare W8, 0
	078 JumpIfNotEqual {80}
	079 Call 0x1C17DFC
	080 Move X0, X20
	081 Call ScriptableRenderer.GetCameraClearFlag, X0
	082 Compare X21, 0
	083 JumpIfEqual {1626}
	084 Move X25, 0x705000
	085 Move X25, [X25+16]
	086 Move W23, W0
	087 Move X24, [X21+128]
	088 Move X0, [X25]
	089 Move W8, [X0+224]
	090 Compare W8, 0
	091 JumpIfNotEqual {93}
	092 Call 0x1C17DFC
	093 Move X0, X24
	094 Move X1, X31
	095 Call RenderingUtils.GetValidColorBufferCount, X0
	096 Compare W0, 0
	097 JumpIfEqual {1608}
	098 Move X0, [X25]
	099 Move X24, [X21+128]
	100 Move W8, [X0+224]
	101 Compare W8, 0
	102 JumpIfNotEqual {104}
	103 Call 0x1C17DFC
	104 Move X0, X24
	105 Move X1, X31
	106 Move W19, W23
	107 Call RenderingUtils.IsMRT, X0
	108 Move TEMP, X0
	109 And TEMP, TEMP, 1
	110 Compare TEMP, 1
	111 JumpIfNotEqual {168}
	112 Move X24, [X21+128]
	113 Add X26, X22, 272
	114 Add X8, X31, 288
	115 Move X0, X26
	116 Move X1, X31
	117 Call RTHandleRenderTargetIdentifierCompat.get_nameID, X0
	118 Move V0, [X31+288]
	119 Move V1, [X31+304]
	120 Move X8, [X31+320]
	121 Move X0, [X25]
	122 Move [X31+336], V0
	123 Move [X31+344], V1
	124 Move [X31+368], X8
	125 Move W8, [X0+224]
	126 Compare W8, 0
	127 JumpIfNotEqual {129}
	128 Call 0x1C17DFC
	129 Move V0, [X31+336]
	130 Move V1, [X31+352]
	131 Move X8, [X31+368]
	132 Add X1, X31, 2112
	133 Move X0, X24
	134 Move X2, X31
	135 Move [X31+132], V0
	136 Move [X31+133], V1
	137 Move [X31+2144], X8
	138 Call RenderingUtils.IndexOf, X0, X1
	139 Move W27, W0
	140 Add W31, W0, 1
	141 Move W8, [X22+416]
	142 Compare W8, 0
	143 JumpIfEqual {178}
	144 Move [X22+416], W31
	145 Move W8, [X21+204]
	146 Xor W8, W8, W23
	147 Move TEMP, X8
	148 And TEMP, TEMP, 1
	149 Compare TEMP, 1
	150 JumpIfEqual {791}
	151 Move D0, [X21+208]
	152 Move D3, [X21+216]
	153 Move D1, [X20+464]
	154 Move D2, [X20+472]
	155 Move X8, -49700864
	156 Subtract V0, V1, V0
	157 NotImplemented "Instruction INVALID not yet implemented."
	158 Move V1, [X8+3872]
	159 Subtract V2, V2, V3
	160 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	161 NotImplemented "Instruction INVALID not yet implemented."
	162 Add V0, V0, V3
	163 Add V0, V2, V0
	164 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	165 Add V0, V2, V0
	166 NotImplemented "Instruction FCMP not yet implemented."
	167 NotImplemented "Instruction CSET not yet implemented."
	168 Move W8, [X21+112]
	169 Add X24, X31, 2320
	170 NotImplemented "Instruction MOVI not yet implemented."
	171 Move [X31+2288], X31
	172 Move [X31+142], V0
	173 Move [X31+141], V0
	174 Compare W8, 0
	175 JumpIfEqual {179}
	176 Move X0, X21
	177 Call ScriptableRenderPass.get_colorAttachmentHandle, X0
	178 Move W25, W31
	179 Add X8, X31, 2256
	180 Move X0, X21
	181 Call ScriptableRenderPass.get_colorAttachment, X0
	182 Move X0, X31
	183 Move V0, [X31+141]
	184 Move V1, [X31+142]
	185 Move X8, [X31+2288]
	186 Move [X31+2368], X0
	187 Move [X31+138], V0
	188 Move [X31+139], V1
	189 Move [X31+2240], X8
	190 Move [X24+56], V0
	191 Move [X24+72], V1
	192 Move [X31+2408], X8
	193 Move W8, [X21+112]
	194 NotImplemented "Instruction MOVI not yet implemented."
	195 Move [X31+141], V0
	196 Move [X31+142], V0
	197 Move [X31+2288], X31
	198 Compare W8, 0
	199 JumpIfEqual {201}
	200 Move X8, [X21+152]
	201 Add X8, X31, 336
	202 Move X0, X21
	203 Call ScriptableRenderPass.get_depthAttachment, X0
	204 Move V0, [X31+336]
	205 Move V1, [X31+352]
	206 Move X9, [X31+368]
	207 Move X8, X31
	208 Move [X31+141], V0
	209 Move [X31+142], V1
	210 Move [X31+2288], X9
	211 Move V0, [X31+141]
	212 Move V1, [X31+142]
	213 Move X9, [X31+2288]
	214 Move [X31+2320], X8
	215 Move [X31+135], V0
	216 Move [X31+136], V1
	217 Move [X31+2192], X9
	218 Move [X24+8], V0
	219 Move [X24+24], V1
	220 Move [X31+2360], X9
	221 Move W8, [X21+64]
	222 Compare W8, 0
	223 JumpIfNotEqual {238}
	224 Move W8, [X21+16]
	225 NotImplemented "Instruction CMP not yet implemented."
	226 Move V1, [X22+288]
	227 Move V0, [X22+304]
	228 Move V2, [X22+17]
	229 Move [X31+150], V0
	230 Move [X31+149], V1
	231 Move [X31+148], V2
	232 Move V1, [X22+336]
	233 Move V0, [X22+352]
	234 Move V2, [X22+20]
	235 Move [X31+147], V0
	236 Move [X31+146], V1
	237 Move [X31+145], V2
	238 Add X8, X31, 288
	239 Add X0, X31, 2368
	240 Move X1, X31
	241 Call RTHandleRenderTargetIdentifierCompat.get_nameID, X0
	242 Move X8, [X31+320]
	243 Move V0, [X31+288]
	244 Move V1, [X31+304]
	245 Add X0, X22, 272
	246 Move X1, X31
	247 Move [X31+368], X8
	248 Add X8, X31, 288
	249 Move [X31+336], V0
	250 Move [X31+344], V1
	251 Call RTHandleRenderTargetIdentifierCompat.get_nameID, X0
	252 Move V0, [X31+288]
	253 Move V1, [X31+304]
	254 Move X8, [X31+320]
	255 Move V2, [X31+336]
	256 Move V3, [X31+352]
	257 Move X9, [X31+368]
	258 Add X0, X31, 1200
	259 Add X1, X31, 1152
	260 Move X2, X31
	261 Move [X31+72], V0
	262 Move [X31+73], V1
	263 Move [X31+1184], X8
	264 Move [X31+75], V2
	265 Move [X31+76], V3
	266 Move [X31+1232], X9
	267 Call RenderTargetIdentifier.op_Equality, X0, X1
	268 Move TEMP, X0
	269 And TEMP, TEMP, 1
	270 Compare TEMP, 1
	271 JumpIfNotEqual {340}
	272 Move W8, [X22+416]
	273 Compare W8, 0
	274 JumpIfEqual {340}
	275 Move X0, X31
	276 Move [X22+416], W31
	277 And W24, W23, 1
	278 Call SystemInfo.get_usesLoadStoreActions
	279 Move TEMP, X0
	280 And TEMP, TEMP, 1
	281 Compare TEMP, 1
	282 JumpIfNotEqual {332}
	283 Add X8, X31, 336
	284 Add X0, X31, 2368
	285 Move X1, X31
	286 Call RTHandleRenderTargetIdentifierCompat.get_nameID, X0
	287 Move V0, [X31+336]
	288 Move V1, [X31+352]
	289 Move X8, [X31+368]
	290 NotImplemented "Instruction MOVI not yet implemented."
	291 Add X0, X31, 336
	292 Add X1, X31, 1104
	293 Move TEMP, 0
	294 Not TEMP
	295 Move W3, TEMP
	296 Move W2, W31
	297 Move W4, W31
	298 Move X5, X31
	299 Move [X31+368], X31
	300 Move [X31+69], V0
	301 Move [X31+70], V1
	302 Move [X31+1136], X8
	303 Move [X31+336], V2
	304 Move [X31+344], V2
	305 Call RenderTargetIdentifier..ctor, X0, X1, X2, X3, X4
	306 Add X8, X31, 288
	307 Move W0, 2
	308 Move X1, X31
	309 Call RenderTargetIdentifier.op_Implicit, X0
	310 Move V0, [X31+288]
	311 Move V1, [X31+304]
	312 Move X8, [X31+320]
	313 Move V2, [X31+336]
	314 Move V3, [X31+352]
	315 Move X9, [X31+368]
	316 Add X0, X31, 1056
	317 Add X1, X31, 1008
	318 Move X2, X31
	319 Move [X31+1008], V0
	320 Move [X31+1016], V1
	321 Move [X31+1040], X8
	322 Move [X31+66], V2
	323 Move [X31+67], V3
	324 Move [X31+1088], X9
	325 Call RenderTargetIdentifier.op_Inequality, X0, X1
	326 Move TEMP, X0
	327 And TEMP, TEMP, 1
	328 Compare TEMP, 1
	329 JumpIfNotEqual {332}
	330 Move W8, [X21+204]
	331 Or W24, W8, W24
	332 Move V0, [X20+29]
	333 Move [X31+144], V0
	334 Move W8, [X22+417]
	335 Compare W8, 0
	336 JumpIfEqual {344}
	337 And W8, W23, 6
	338 Move [X22+417], W31
	339 Or W24, W24, W8
	340 Move W8, [X21+204]
	341 Move V0, [X21+13]
	342 And W24, W8, 1
	343 Move [X31+144], V0
	344 Add X23, X22, 320
	345 Add X8, X31, 336
	346 Move X0, X23
	347 Move X1, X31
	348 Call RTHandleRenderTargetIdentifierCompat.get_nameID, X0
	349 Move V0, [X31+336]
	350 Move V1, [X31+352]
	351 Move X8, [X31+368]
	352 NotImplemented "Instruction MOVI not yet implemented."
	353 Add X0, X31, 336
	354 Add X1, X31, 960
	355 Move TEMP, 0
	356 Not TEMP
	357 Move W3, TEMP
	358 Move W2, W31
	359 Move W4, W31
	360 Move X5, X31
	361 Move [X31+368], X31
	362 Move [X31+960], V0
	363 Move [X31+968], V1
	364 Move [X31+992], X8
	365 Move [X31+336], V2
	366 Move [X31+344], V2
	367 Call RenderTargetIdentifier..ctor, X0, X1, X2, X3, X4
	368 Add X8, X31, 288
	369 Move W0, 2
	370 Move X1, X31
	371 Call RenderTargetIdentifier.op_Implicit, X0
	372 Move V0, [X31+288]
	373 Move V1, [X31+304]
	374 Move X8, [X31+320]
	375 Move V2, [X31+336]
	376 Move V3, [X31+352]
	377 Move X9, [X31+368]
	378 Add X0, X31, 912
	379 Add X1, X31, 864
	380 Move X2, X31
	381 Move [X31+864], V0
	382 Move [X31+872], V1
	383 Move [X31+896], X8
	384 Move [X31+912], V2
	385 Move [X31+920], V3
	386 Move [X31+944], X9
	387 Call RenderTargetIdentifier.op_Inequality, X0, X1
	388 Move TEMP, X0
	389 And TEMP, TEMP, 1
	390 Compare TEMP, 1
	391 JumpIfNotEqual {464}
	392 Add X8, X31, 288
	393 Add X0, X31, 2320
	394 Move X1, X31
	395 Call RTHandleRenderTargetIdentifierCompat.get_nameID, X0
	396 Move X8, [X31+320]
	397 Move V0, [X31+288]
	398 Move V1, [X31+304]
	399 Move X0, X23
	400 Move X1, X31
	401 Move [X31+368], X8
	402 Add X8, X31, 288
	403 Move [X31+336], V0
	404 Move [X31+344], V1
	405 Call RTHandleRenderTargetIdentifierCompat.get_nameID, X0
	406 Move V0, [X31+288]
	407 Move V1, [X31+304]
	408 Move X8, [X31+320]
	409 Move V2, [X31+336]
	410 Move V3, [X31+352]
	411 Move X9, [X31+368]
	412 Add X0, X31, 816
	413 Add X1, X31, 768
	414 Move X2, X31
	415 Move [X31+768], V0
	416 Move [X31+776], V1
	417 Move [X31+800], X8
	418 Move [X31+816], V2
	419 Move [X31+824], V3
	420 Move [X31+848], X9
	421 Call RenderTargetIdentifier.op_Equality, X0, X1
	422 Move TEMP, X0
	423 And TEMP, TEMP, 1
	424 Compare TEMP, 1
	425 JumpIfEqual {460}
	426 Add X8, X31, 288
	427 Add X0, X31, 2368
	428 Move X1, X31
	429 Call RTHandleRenderTargetIdentifierCompat.get_nameID, X0
	430 Move X8, [X31+320]
	431 Move V0, [X31+288]
	432 Move V1, [X31+304]
	433 Move X0, X23
	434 Move X1, X31
	435 Move [X31+368], X8
	436 Add X8, X31, 288
	437 Move [X31+336], V0
	438 Move [X31+344], V1
	439 Call RTHandleRenderTargetIdentifierCompat.get_nameID, X0
	440 Move V0, [X31+288]
	441 Move V1, [X31+304]
	442 Move X8, [X31+320]
	443 Move V2, [X31+336]
	444 Move V3, [X31+352]
	445 Move X9, [X31+368]
	446 Add X0, X31, 720
	447 Add X1, X31, 672
	448 Move X2, X31
	449 Move [X31+672], V0
	450 Move [X31+680], V1
	451 Move [X31+704], X8
	452 Move [X31+720], V2
	453 Move [X31+728], V3
	454 Move [X31+752], X9
	455 Call RenderTargetIdentifier.op_Equality, X0, X1
	456 Move TEMP, X0
	457 And TEMP, TEMP, 1
	458 Compare TEMP, 1
	459 JumpIfNotEqual {464}
	460 Move W8, [X22+417]
	461 Compare W8, 0
	462 JumpIfEqual {464}
	463 Move [X22+417], W31
	464 Move W19, [X21+204]
	465 Move X0, [X22+224]
	466 Compare X0, 0
	467 JumpIfEqual {481}
	468 Move X1, X20
	469 Move X2, X31
	470 Call DebugHandler.IsActiveForCamera, X0, X1
	471 Move TEMP, X0
	472 And TEMP, TEMP, 1
	473 Compare TEMP, 1
	474 JumpIfNotEqual {481}
	475 Move X0, [X22+224]
	476 Compare X0, 0
	477 JumpIfEqual {1626}
	478 Add X1, X31, 2304
	479 Move X2, X31
	480 Call DebugHandler.TryGetScreenClearColor, X0, X1
	481 Move W8, [X21+66]
	482 And W9, W19, 6
	483 Or W23, W9, W24
	484 Compare W8, 0
	485 JumpIfEqual {513}
	486 Move W8, [X21+112]
	487 Compare W8, 0
	488 JumpIfEqual {513}
	489 Move W8, [X22+420]
	490 Compare W8, 0
	491 JumpIfEqual {513}
	492 Move X0, X20
	493 Move X1, X31
	494 Call CameraData.get_isRenderPassSupportedCamera, X0
	495 Move TEMP, X0
	496 And TEMP, TEMP, 1
	497 Compare TEMP, 1
	498 JumpIfNotEqual {513}
	499 Move W8, [X21+112]
	500 Compare W8, 0
	501 JumpIfEqual {513}
	502 Move X3, [X31+2368]
	503 Move X4, [X31+2320]
	504 Move V0, [X31+2304]
	505 Move V1, [X31+2308]
	506 Move V2, [X31+2312]
	507 Move V3, [X31+2316]
	508 Move X0, X22
	509 Move X1, X21
	510 Move X2, X20
	511 Move W5, W23
	512 Call ScriptableRenderer.SetNativeRenderPassAttachmentList, X0, X1, X2, X3, X4, X5, X6
	513 Move X22, X31
	514 Add X19, X31, 288
	515 Move W24, 32
	516 Move X0, [X28]
	517 Move W8, [X0+224]
	518 Compare W8, 0
	519 JumpIfNotEqual {522}
	520 Call 0x1C17DFC
	521 Move X0, [X28]
	522 Move X8, [X0+184]
	523 Move X8, [X8+24]
	524 Compare X8, 0
	525 JumpIfEqual {1626}
	526 NotImplemented "Instruction LDRSW not yet implemented."
	527 NotImplemented "Instruction CMP not yet implemented."
	528 Move X9, [X21+128]
	529 Compare X9, 0
	530 JumpIfEqual {1626}
	531 Move W10, [X9+24]
	532 NotImplemented "Instruction CMP not yet implemented."
	533 Add X9, X9, X24
	534 Move X10, [X9+32]
	535 Move V1, [X9]
	536 Move V0, [X9+16]
	537 Move [X31+368], X10
	538 Move [X31+336], V1
	539 Move [X31+344], V0
	540 Move W9, [X0+224]
	541 Compare W9, 0
	542 JumpIfNotEqual {549}
	543 Call 0x1C17DFC
	544 Move X8, [X28]
	545 Move X8, [X8+184]
	546 Move X8, [X8+24]
	547 Compare X8, 0
	548 JumpIfEqual {1626}
	549 Move W9, [X8+24]
	550 NotImplemented "Instruction CMP not yet implemented."
	551 Add X8, X8, X24
	552 Move V0, [X31+336]
	553 Move V1, [X31+352]
	554 Move X9, [X31+368]
	555 Move V2, [X8]
	556 Move V3, [X8+16]
	557 Move X8, [X8+32]
	558 Add X0, X31, 624
	559 Add X1, X31, 576
	560 Move X2, X31
	561 Add X22, X22, 1
	562 Add X25, X24, 40
	563 Move [X31+624], V0
	564 Move [X31+632], V1
	565 Move [X31+656], X9
	566 Move [X31+320], X8
	567 Move [X31+288], V2
	568 Move [X31+296], V3
	569 Move [X31+576], V2
	570 Move [X31+584], V3
	571 Move [X31+608], X8
	572 Call RenderTargetIdentifier.op_Inequality, X0, X1
	573 Move X24, X25
	574 Move TEMP, X0
	575 And TEMP, TEMP, 1
	576 Compare TEMP, 1
	577 JumpIfNotEqual {516}
	578 Add X8, X31, 288
	579 Add X0, X31, 2368
	580 Move X1, X31
	581 Call RTHandleRenderTargetIdentifierCompat.get_nameID, X0
	582 Move V0, [X31+288]
	583 Move V1, [X31+304]
	584 Move X8, [X31+320]
	585 Move X0, [X28]
	586 Move [X31+336], V0
	587 Move [X31+344], V1
	588 Move [X31+368], X8
	589 Move W8, [X0+224]
	590 Compare W8, 0
	591 JumpIfNotEqual {594}
	592 Call 0x1C17DFC
	593 Move X0, [X28]
	594 Move X8, [X0+184]
	595 Move X8, [X8+24]
	596 Compare X8, 0
	597 JumpIfEqual {1626}
	598 Move W9, [X8+24]
	599 Compare W9, 0
	600 JumpIfEqual {1627}
	601 Move V0, [X8+32]
	602 Move V1, [X8+48]
	603 Move X8, [X8+64]
	604 Move V2, [X31+336]
	605 Move V3, [X31+352]
	606 Move X9, [X31+368]
	607 Add X0, X31, 528
	608 Add X1, X31, 480
	609 Move X2, X31
	610 Move [X31+320], X8
	611 Move [X31+288], V0
	612 Move [X31+296], V1
	613 Move [X31+528], V2
	614 Move [X31+536], V3
	615 Move [X31+560], X9
	616 Move [X31+480], V0
	617 Move [X31+488], V1
	618 Move [X31+512], X8
	619 Call RenderTargetIdentifier.op_Inequality, X0, X1
	620 Move TEMP, X0
	621 And TEMP, TEMP, 1
	622 Compare TEMP, 1
	623 JumpIfNotEqual {1225}
	624 Add X0, X31, 2368
	625 Move X1, X31
	626 Call RTHandleRenderTargetIdentifierCompat.get_useRTHandle, X0
	627 Move TEMP, X0
	628 And TEMP, TEMP, 1
	629 Compare TEMP, 1
	630 JumpIfNotEqual {668}
	631 Add X0, X31, 2320
	632 Move X1, X31
	633 Call RTHandleRenderTargetIdentifierCompat.get_useRTHandle, X0
	634 Move TEMP, X0
	635 And TEMP, TEMP, 1
	636 Compare TEMP, 1
	637 JumpIfNotEqual {668}
	638 Move X8, [X21+24]
	639 Compare X8, 0
	640 JumpIfEqual {1626}
	641 Move W9, [X8+24]
	642 Compare W9, 0
	643 JumpIfEqual {1627}
	644 Move X0, [X28]
	645 Move X22, [X31+2368]
	646 Move X24, [X31+2320]
	647 Move V8, [X31+2304]
	648 Move V9, [X31+2308]
	649 Move V11, [X31+2312]
	650 Move V10, [X31+2316]
	651 Move W25, [X8+32]
	652 Move W8, [X0+224]
	653 Move W21, [X21+32]
	654 Compare W8, 0
	655 JumpIfNotEqual {657}
	656 Call 0x1C17DFC
	657 Move X0, X29
	658 Move X1, X22
	659 Move X2, X24
	660 Move W3, W23
	661 Move V0, V8
	662 Move V1, V9
	663 Move V2, V11
	664 Move V3, V10
	665 Move W4, W25
	666 Move W5, W21
	667 Call ScriptableRenderer.SetRenderTarget, X0, X1, X2, X3, X4, X5, X6
	668 Move V0, [X31+150]
	669 Move V1, [X31+149]
	670 Move V2, [X31+148]
	671 Move V3, [X31+147]
	672 Move V4, [X31+145]
	673 Move [X31+352], V1
	674 Move [X31+360], V0
	675 Move V0, [X31+146]
	676 Move [X31+320], V3
	677 Move [X31+328], V2
	678 NotImplemented "Instruction LDUR not yet implemented."
	679 Move X8, [X31+376]
	680 Move [X31+288], V4
	681 Move [X31+296], V0
	682 NotImplemented "Instruction LDUR not yet implemented."
	683 NotImplemented "Instruction LDUR not yet implemented."
	684 Move X9, [X31+328]
	685 Move [X31+121], V1
	686 Move [X31+120], V0
	687 NotImplemented "Instruction LDUR not yet implemented."
	688 Move [X31+1952], X8
	689 Move [X31+272], X9
	690 Move [X31+240], V2
	691 Move [X31+248], V0
	692 Move X8, [X21+24]
	693 Compare X8, 0
	694 JumpIfEqual {1626}
	695 Move W9, [X8+24]
	696 Compare W9, 0
	697 JumpIfEqual {1627}
	698 Move X0, [X28]
	699 Move V8, [X31+2304]
	700 Move V9, [X31+2308]
	701 Move V11, [X31+2312]
	702 Move V10, [X31+2316]
	703 Move W22, [X8+32]
	704 Move W8, [X0+224]
	705 Move W21, [X21+32]
	706 Compare W8, 0
	707 JumpIfNotEqual {709}
	708 Call 0x1C17DFC
	709 Move V0, [X31+120]
	710 Move V1, [X31+121]
	711 Move V2, [X31+240]
	712 Move V3, [X31+256]
	713 Move X8, [X31+1952]
	714 Move X9, [X31+272]
	715 Move [X31+192], V0
	716 Move [X31+200], V1
	717 Move [X31+144], V2
	718 Move [X31+152], V3
	719 Add X1, X31, 192
	720 Add X2, X31, 144
	721 Move X0, X29
	722 Move W3, W23
	723 Move V0, V8
	724 Move V1, V9
	725 Move V2, V11
	726 Move V3, V10
	727 Move W4, W22
	728 Move W5, W21
	729 Move [X31+224], X8
	730 Move [X31+176], X9
	731 Call ScriptableRenderer.SetRenderTarget, X0, X1, X2, X3, X4, X5, X6
	732 Move X0, [X20+376]
	733 Compare X0, 0
	734 JumpIfEqual {1626}
	735 Move X1, X31
	736 Call XRPass.get_enabled, X0
	737 Move TEMP, X0
	738 And TEMP, TEMP, 1
	739 Compare TEMP, 1
	740 JumpIfNotEqual {1608}
	741 Add X8, X31, 288
	742 Add X0, X31, 2368
	743 Move X1, X31
	744 Call RTHandleRenderTargetIdentifierCompat.get_nameID, X0
	745 Move V0, [X31+288]
	746 Move V1, [X31+304]
	747 Move X8, [X31+320]
	748 Move [X31+336], V0
	749 Move [X31+344], V1
	750 Move [X31+368], X8
	751 Move X8, [X20+376]
	752 Compare X8, 0
	753 JumpIfEqual {1626}
	754 Move V0, [X8+48]
	755 Move V1, [X8+64]
	756 Move X8, [X8+80]
	757 Move V2, [X31+336]
	758 Move V3, [X31+352]
	759 Move X9, [X31+368]
	760 Add X0, X31, 96
	761 Add X1, X31, 48
	762 Move X2, X31
	763 Move [X31+80], X8
	764 Move [X31+48], V0
	765 Move [X31+56], V1
	766 Move [X31+96], V2
	767 Move [X31+104], V3
	768 Move [X31+128], X9
	769 Call RenderTargetIdentifier.op_Inequality, X0, X1
	770 And W21, W0, 1
	771 Move X0, X20
	772 Move X1, X29
	773 Move W2, W21
	774 Move X3, X31
	775 Call CameraData.PushBuiltinShaderConstantsXR, X0, X1, X2
	776 Move X0, X20
	777 Move X1, X31
	778 Call CameraData.get_xrUniversal, X0
	779 Move X8, 0x706000
	780 Move X8, [X8+3528]
	781 Move X20, X0
	782 Move X8, [X8]
	783 Move W9, [X8+224]
	784 Compare W9, 0
	785 JumpIfNotEqual {788}
	786 Move X0, X8
	787 Call 0x1C17DFC
	788 Move X0, X29
	789 Move X1, X20
	790 Move W2, W21
	791 Move W8, 1
	792 NotImplemented "Instruction CMP not yet implemented."
	793 NotImplemented "Instruction CSET not yet implemented."
	794 Add X24, X22, 320
	795 Add X8, X31, 336
	796 Move X0, X24
	797 Move X1, X31
	798 Call RTHandleRenderTargetIdentifierCompat.get_nameID, X0
	799 Move V0, [X31+336]
	800 Move V1, [X31+352]
	801 Move X8, [X31+368]
	802 Move [X31+154], V0
	803 Move [X31+155], V1
	804 Move [X31+2496], X8
	805 Move X0, [X20+376]
	806 Compare X0, 0
	807 JumpIfEqual {1626}
	808 Move X1, X31
	809 Call XRPass.get_enabled, X0
	810 Move TEMP, X0
	811 And TEMP, TEMP, 1
	812 Compare TEMP, 1
	813 JumpIfNotEqual {831}
	814 Move V0, [X31+154]
	815 Move V1, [X31+155]
	816 Move X8, [X31+2496]
	817 Add X0, X31, 2464
	818 Add X1, X31, 2064
	819 Move TEMP, 0
	820 Not TEMP
	821 Move W3, TEMP
	822 Move TEMP, 0
	823 Not TEMP
	824 Move W4, TEMP
	825 Move W2, W31
	826 Move X5, X31
	827 Move [X31+129], V0
	828 Move [X31+130], V1
	829 Move [X31+2096], X8
	830 Call RenderTargetIdentifier..ctor, X0, X1, X2, X3, X4
	831 Add X8, X31, 336
	832 Move X0, X21
	833 Call ScriptableRenderPass.get_depthAttachment, X0
	834 Move V0, [X31+336]
	835 Move V1, [X31+352]
	836 Move X8, [X31+368]
	837 Move V2, [X31+154]
	838 Move V3, [X31+155]
	839 Move X9, [X31+2496]
	840 Add X0, X31, 2016
	841 Add X1, X31, 1968
	842 Move X2, X31
	843 Move [X31+126], V0
	844 Move [X31+127], V1
	845 Move [X31+2048], X8
	846 Move [X31+123], V2
	847 Move [X31+124], V3
	848 Move [X31+2000], X9
	849 Call RenderTargetIdentifier.op_Equality, X0, X1
	850 Move TEMP, X0
	851 And TEMP, TEMP, 1
	852 Compare TEMP, 1
	853 JumpIfNotEqual {864}
	854 Move W8, [X22+417]
	855 Compare W8, 0
	856 JumpIfEqual {864}
	857 Move [X22+417], W31
	858 Move W8, [X21+204]
	859 Xor W8, W8, W23
	860 And W31, W8, 6
	861 NotImplemented "Instruction CSET not yet implemented."
	862 Compare W25, 0
	863 JumpIfNotEqual {867}
	864 Move W9, W31
	865 Compare W25, 0
	866 JumpIfEqual {1198}
	867 Move [X31+44], W9
	868 Move TEMP, X19
	869 And TEMP, TEMP, 1
	870 Compare TEMP, 1
	871 JumpIfNotEqual {942}
	872 Move W8, [X21+66]
	873 Compare W8, 0
	874 JumpIfEqual {889}
	875 Move W8, [X21+112]
	876 Compare W8, 0
	877 JumpIfEqual {889}
	878 Move W8, [X22+420]
	879 Compare W8, 0
	880 JumpIfEqual {889}
	881 Move X0, X20
	882 Move X1, X31
	883 Call CameraData.get_isRenderPassSupportedCamera, X0
	884 Move W9, [X31+44]
	885 Move TEMP, X0
	886 And TEMP, TEMP, 1
	887 Compare TEMP, 1
	888 JumpIfEqual {942}
	889 Move X8, [X21+128]
	890 Compare X8, 0
	891 JumpIfEqual {1626}
	892 Move W9, [X8+24]
	893 NotImplemented "Instruction CMP not yet implemented."
	894 Move W9, 40
	895 NotImplemented "Instruction SMADDL not yet implemented."
	896 Move X9, [X8+64]
	897 Move V1, [X8+32]
	898 Move V0, [X8+48]
	899 Add X8, X31, 1920
	900 Move X0, X21
	901 Move [X31+368], X9
	902 Move [X31+336], V1
	903 Move [X31+344], V0
	904 Call ScriptableRenderPass.get_depthAttachment, X0
	905 Move V0, [X31+120]
	906 Move V1, [X31+121]
	907 Move X8, [X31+1952]
	908 Move X0, [X28]
	909 Move [X31+288], V0
	910 Move [X31+296], V1
	911 Move [X31+320], X8
	912 Move V11, [X20+464]
	913 Move V10, [X20+468]
	914 Move V8, [X20+472]
	915 Move W8, [X0+224]
	916 Move V9, [X20+476]
	917 Compare W8, 0
	918 JumpIfNotEqual {920}
	919 Call 0x1C17DFC
	920 Move V0, [X31+336]
	921 Move V1, [X31+352]
	922 Move V2, [X31+288]
	923 Move V3, [X31+304]
	924 Move X8, [X31+368]
	925 Move X9, [X31+320]
	926 Move [X31+117], V0
	927 Move [X31+118], V1
	928 Move [X31+114], V2
	929 Move [X31+115], V3
	930 Add X1, X31, 1872
	931 Add X2, X31, 1824
	932 Move W3, 1
	933 Move X0, X29
	934 Move V0, V11
	935 Move V1, V10
	936 Move V2, V8
	937 Move V3, V9
	938 Move [X31+1904], X8
	939 Move [X31+1856], X9
	940 Call ScriptableRenderer.SetRenderTarget, X0, X1, X2, X3, X4
	941 Move W9, [X31+44]
	942 Move W8, [X21+204]
	943 Move TEMP, X8
	944 And TEMP, TEMP, 1
	945 Compare TEMP, 1
	946 JumpIfNotEqual {1198}
	947 Move X27, [X21+128]
	948 Add X8, X31, 288
	949 Move X0, X26
	950 Move X1, X31
	951 Call RTHandleRenderTargetIdentifierCompat.get_nameID, X0
	952 Move X9, 0x705000
	953 Move V0, [X31+288]
	954 Move V1, [X31+304]
	955 Move X8, [X31+320]
	956 Move X9, [X9+16]
	957 Move [X31+336], V0
	958 Move [X31+344], V1
	959 Move [X31+368], X8
	960 Move X0, [X9]
	961 Move W8, [X0+224]
	962 Compare W8, 0
	963 JumpIfNotEqual {965}
	964 Call 0x1C17DFC
	965 Move V0, [X31+336]
	966 Move V1, [X31+352]
	967 Move X8, [X31+368]
	968 Add X1, X31, 1776
	969 Move X0, X27
	970 Move X2, X31
	971 Move [X31+111], V0
	972 Move [X31+112], V1
	973 Move [X31+1808], X8
	974 Call RenderingUtils.CountDistinct, X0, X1
	975 Move X8, [X28]
	976 Move [X31+2460], W0
	977 Move W9, [X8+224]
	978 Compare W9, 0
	979 JumpIfNotEqual {984}
	980 Move X0, X8
	981 Call 0x1C17DFC
	982 Move X8, [X28]
	983 Move W0, [X31+2460]
	984 Move X8, [X8+184]
	985 Move X8, [X8+88]
	986 Compare X8, 0
	987 JumpIfEqual {1626}
	988 Move W9, [X8+24]
	989 Move [X31+20], W25
	990 Move [X31+24], X24
	991 Move [X31+32], X29
	992 NotImplemented "Instruction CMP not yet implemented."
	993 Add X8, X8, W0
	994 Move X27, [X8+32]
	995 Move [X31+2456], W31
	996 Move X8, [X21+128]
	997 Compare X8, 0
	998 JumpIfEqual {1626}
	999 Move X24, X31
	1000 Move W25, 32
	1001 Move W29, 40
	1002 Move W9, [X8+24]
	1003 NotImplemented "Instruction CMP not yet implemented."
	1004 NotImplemented "Instruction CMP not yet implemented."
	1005 Add X8, X8, X25
	1006 Move X9, [X8+32]
	1007 Move V1, [X8]
	1008 Move V0, [X8+16]
	1009 Add X8, X31, 288
	1010 Move X0, X26
	1011 Move X1, X31
	1012 Move [X31+368], X9
	1013 Move [X31+336], V1
	1014 Move [X31+344], V0
	1015 Call RTHandleRenderTargetIdentifierCompat.get_nameID, X0
	1016 Move V0, [X31+288]
	1017 Move V1, [X31+304]
	1018 Move X8, [X31+320]
	1019 Move V2, [X31+336]
	1020 Move V3, [X31+352]
	1021 Move X9, [X31+368]
	1022 Add X0, X31, 1728
	1023 Add X1, X31, 1680
	1024 Move X2, X31
	1025 Move [X31+105], V0
	1026 Move [X31+106], V1
	1027 Move [X31+1712], X8
	1028 Move [X31+108], V2
	1029 Move [X31+109], V3
	1030 Move [X31+1760], X9
	1031 Call RenderTargetIdentifier.op_Inequality, X0, X1
	1032 Move TEMP, X0
	1033 And TEMP, TEMP, 1
	1034 Compare TEMP, 1
	1035 JumpIfNotEqual {1105}
	1036 Move X8, [X21+128]
	1037 Compare X8, 0
	1038 JumpIfEqual {1626}
	1039 Move W9, [X8+24]
	1040 NotImplemented "Instruction CMP not yet implemented."
	1041 Add X8, X8, X25
	1042 Move X9, [X8+32]
	1043 Move V1, [X8]
	1044 Move V0, [X8+16]
	1045 Add X8, X31, 288
	1046 Move W0, W31
	1047 Move X1, X31
	1048 Move [X31+368], X9
	1049 Move [X31+336], V1
	1050 Move [X31+344], V0
	1051 Call RenderTargetIdentifier.op_Implicit, X0
	1052 Move V0, [X31+288]
	1053 Move V1, [X31+304]
	1054 Move X8, [X31+320]
	1055 Move V2, [X31+336]
	1056 Move V3, [X31+352]
	1057 Move X9, [X31+368]
	1058 Add X0, X31, 1632
	1059 Add X1, X31, 1584
	1060 Move X2, X31
	1061 Move [X31+99], V0
	1062 Move [X31+100], V1
	1063 Move [X31+1616], X8
	1064 Move [X31+102], V2
	1065 Move [X31+103], V3
	1066 Move [X31+1664], X9
	1067 Call RenderTargetIdentifier.op_Inequality, X0, X1
	1068 Move TEMP, X0
	1069 And TEMP, TEMP, 1
	1070 Compare TEMP, 1
	1071 JumpIfNotEqual {1105}
	1072 Move X8, [X21+128]
	1073 Compare X8, 0
	1074 JumpIfEqual {1626}
	1075 Move W9, [X8+24]
	1076 NotImplemented "Instruction CMP not yet implemented."
	1077 Add X8, X8, X25
	1078 Move X9, [X8+32]
	1079 Move V1, [X8]
	1080 Move V0, [X8+16]
	1081 NotImplemented "Instruction LDRSW not yet implemented."
	1082 Move [X31+368], X9
	1083 Move [X31+336], V1
	1084 Move [X31+344], V0
	1085 Compare X27, 0
	1086 JumpIfEqual {1626}
	1087 Move V0, [X31+336]
	1088 Move V1, [X31+352]
	1089 Move X9, [X31+368]
	1090 Move [X31+96], V0
	1091 Move [X31+97], V1
	1092 Move [X31+1568], X9
	1093 Move W9, [X27+24]
	1094 NotImplemented "Instruction CMP not yet implemented."
	1095 Move X9, [X31+1568]
	1096 Move V0, [X31+96]
	1097 Move V1, [X31+97]
	1098 NotImplemented "Instruction NOP not yet implemented."
	1099 NotImplemented "Instruction MADD not yet implemented."
	1100 Add W8, W8, 1
	1101 Move [X10+64], X9
	1102 Move [X10+32], V0
	1103 Move [X10+40], V1
	1104 Move [X31+2456], W8
	1105 Move X8, [X21+128]
	1106 Add X24, X24, 1
	1107 Add X25, X25, 40
	1108 Compare X8, 0
	1109 JumpIfNotEqual {1002}
	1110 NotImplemented "Instruction LDRSW not yet implemented."
	1111 Move W9, [X31+2460]
	1112 Move X24, [X31+24]
	1113 Move X29, [X31+32]
	1114 Move W25, [X31+20]
	1115 NotImplemented "Instruction CMP not yet implemented."
	1116 Add X0, X31, 2456
	1117 Move X1, X31
	1118 Call Int32.ToString, X0
	1119 Move X26, X0
	1120 Add X0, X31, 2460
	1121 Move X1, X31
	1122 Call UInt32.ToString, X0
	1123 Move X8, 0x705000
	1124 Move X8, [X8+4024]
	1125 Move X9, 0x705000
	1126 Move X9, [X9+4016]
	1127 Move X3, X0
	1128 Move X8, [X8]
	1129 Move X1, X26
	1130 Move X2, [X9]
	1131 Move X4, X31
	1132 Move X0, X8
	1133 Call String.Concat, X0, X1, X2, X3
	1134 Move X8, 0x6A3000
	1135 Move X8, [X8+2600]
	1136 Move X26, X0
	1137 Move X8, [X8]
	1138 Move W9, [X8+224]
	1139 Compare W9, 0
	1140 JumpIfNotEqual {1143}
	1141 Move X0, X8
	1142 Call 0x1C17DFC
	1143 Move X0, X26
	1144 Move X1, X31
	1145 Call Debug.LogError, X0
	1146 Move W8, [X21+66]
	1147 Compare W8, 0
	1148 JumpIfEqual {1163}
	1149 Move W8, [X21+112]
	1150 Compare W8, 0
	1151 JumpIfEqual {1163}
	1152 Move W8, [X22+420]
	1153 Compare W8, 0
	1154 JumpIfEqual {1163}
	1155 Move X0, X20
	1156 Move X1, X31
	1157 Call CameraData.get_isRenderPassSupportedCamera, X0
	1158 Move W9, [X31+44]
	1159 Move TEMP, X0
	1160 And TEMP, TEMP, 1
	1161 Compare TEMP, 1
	1162 JumpIfEqual {1198}
	1163 Add X8, X31, 288
	1164 Move X0, X24
	1165 Move X1, X31
	1166 Call RTHandleRenderTargetIdentifierCompat.get_nameID, X0
	1167 Move V0, [X31+288]
	1168 Move V1, [X31+304]
	1169 Move X8, [X31+320]
	1170 Move X0, [X28]
	1171 Move [X31+336], V0
	1172 Move [X31+344], V1
	1173 Move [X31+368], X8
	1174 Move S11, [X21+208]
	1175 Move S9, [X21+212]
	1176 Move W8, [X0+224]
	1177 Move S10, [X21+216]
	1178 Move S8, [X21+220]
	1179 Compare W8, 0
	1180 JumpIfNotEqual {1182}
	1181 Call 0x1C17DFC
	1182 Move V0, [X31+336]
	1183 Move V1, [X31+352]
	1184 Move X8, [X31+368]
	1185 Add X2, X31, 1488
	1186 Move W3, 1
	1187 Move [X31+93], V0
	1188 Move [X31+94], V1
	1189 Move X0, X29
	1190 Move X1, X27
	1191 Move V0, V11
	1192 Move V1, V9
	1193 Move V2, V10
	1194 Move V3, V8
	1195 Move [X31+1520], X8
	1196 Call ScriptableRenderer.SetRenderTarget, X0, X1, X2, X3, X4
	1197 Move W9, [X31+44]
	1198 Move TEMP, X9
	1199 And TEMP, TEMP, 1
	1200 Compare TEMP, 1
	1201 JumpIfEqual {1203}
	1202 Move W19, [X21+204]
	1203 Move X27, 0x704000
	1204 Move X27, [X27+16]
	1205 And W8, W19, 6
	1206 Move TEMP, X25
	1207 And TEMP, TEMP, 1
	1208 Compare TEMP, 1
	1209 JumpIfNotEqual {1222}
	1210 Move W9, [X21+66]
	1211 Compare W9, 0
	1212 JumpIfEqual {1300}
	1213 Move W9, [X21+112]
	1214 Compare W9, 0
	1215 JumpIfEqual {1298}
	1216 Move W9, [X22+420]
	1217 Compare W9, 0
	1218 JumpIfEqual {1298}
	1219 And W9, W23, 1
	1220 Or W23, W9, W8
	1221 Add X19, X21, 66
	1222 Move W10, [X21+204]
	1223 Move W9, [X21+66]
	1224 And W10, W10, 1
	1225 Add X8, X31, 288
	1226 Add X0, X31, 2320
	1227 Move X1, X31
	1228 Call RTHandleRenderTargetIdentifierCompat.get_nameID, X0
	1229 Move V0, [X31+288]
	1230 Move V1, [X31+304]
	1231 Move X8, [X31+320]
	1232 Move X0, [X28]
	1233 Move [X31+336], V0
	1234 Move [X31+344], V1
	1235 Move [X31+368], X8
	1236 Move W8, [X0+224]
	1237 Compare W8, 0
	1238 JumpIfNotEqual {1241}
	1239 Call 0x1C17DFC
	1240 Move X0, [X28]
	1241 Move X8, [X0+184]
	1242 Move V0, [X31+336]
	1243 Move V1, [X31+352]
	1244 Move X9, [X31+368]
	1245 Add X0, X31, 432
	1246 Move V2, [X8+32]
	1247 Move V3, [X8+48]
	1248 Move X8, [X8+64]
	1249 Add X1, X31, 384
	1250 Move X2, X31
	1251 Move [X31+432], V0
	1252 Move [X31+440], V1
	1253 Move [X31+464], X9
	1254 Move [X31+320], X8
	1255 Move [X31+288], V2
	1256 Move [X31+296], V3
	1257 Move [X31+384], V2
	1258 Move [X31+392], V3
	1259 Move [X31+416], X8
	1260 Call RenderTargetIdentifier.op_Inequality, X0, X1
	1261 Compare W23, 0
	1262 JumpIfNotEqual {624}
	1263 Move TEMP, X0
	1264 And TEMP, TEMP, 1
	1265 Compare TEMP, 1
	1266 JumpIfEqual {624}
	1267 Move X8, [X21+24]
	1268 Compare X8, 0
	1269 JumpIfEqual {1626}
	1270 Move W9, [X8+24]
	1271 Compare W9, 0
	1272 JumpIfEqual {1627}
	1273 Move X0, [X28]
	1274 Move W22, [X8+32]
	1275 Move W9, [X0+224]
	1276 Compare W9, 0
	1277 JumpIfNotEqual {1280}
	1278 Call 0x1C17DFC
	1279 Move X0, [X28]
	1280 Move X8, [X0+184]
	1281 Move X9, [X8+72]
	1282 Compare X9, 0
	1283 JumpIfEqual {1626}
	1284 Move W10, [X9+24]
	1285 Compare W10, 0
	1286 JumpIfEqual {1627}
	1287 Move W9, [X9+32]
	1288 NotImplemented "Instruction CMP not yet implemented."
	1289 Move W9, [X0+224]
	1290 Move W22, [X21+32]
	1291 Compare W9, 0
	1292 JumpIfNotEqual {1296}
	1293 Call 0x1C17DFC
	1294 Move X8, [X28]
	1295 Move X8, [X8+184]
	1296 Move W8, [X8+80]
	1297 NotImplemented "Instruction CMP not yet implemented."
	1298 Move W10, W31
	1299 Move W9, 1
	1300 Move W10, W31
	1301 Or W23, W10, W8
	1302 Add X19, X21, 66
	1303 Compare W9, 0
	1304 JumpIfEqual {1324}
	1305 Move W8, [X21+112]
	1306 Compare W8, 0
	1307 JumpIfEqual {1324}
	1308 Move W8, [X22+420]
	1309 Compare W8, 0
	1310 JumpIfEqual {1324}
	1311 Move X0, X20
	1312 Move X1, X31
	1313 Call CameraData.get_isRenderPassSupportedCamera, X0
	1314 Move TEMP, X0
	1315 And TEMP, TEMP, 1
	1316 Compare TEMP, 1
	1317 JumpIfNotEqual {1324}
	1318 Move X0, X22
	1319 Move X1, X21
	1320 Move X2, X20
	1321 Move W3, W25
	1322 Move W4, W23
	1323 Call ScriptableRenderer.SetNativeRenderPassMRTAttachmentList, X0, X1, X2, X3, X4
	1324 Move X0, [X28]
	1325 Move X25, [X21+128]
	1326 Move W8, [X0+224]
	1327 Compare W8, 0
	1328 JumpIfNotEqual {1331}
	1329 Call 0x1C17DFC
	1330 Move X0, [X28]
	1331 Move X8, [X27]
	1332 Move X9, [X0+184]
	1333 Move W10, [X8+224]
	1334 Move X26, [X9+24]
	1335 Compare W10, 0
	1336 JumpIfNotEqual {1339}
	1337 Move X0, X8
	1338 Call 0x1C17DFC
	1339 Move X0, X25
	1340 Move X1, X26
	1341 Move X2, X31
	1342 Call RenderingUtils.SequenceEqual, X0, X1
	1343 Move TEMP, X0
	1344 And TEMP, TEMP, 1
	1345 Compare TEMP, 1
	1346 JumpIfNotEqual {1388}
	1347 Add X8, X31, 288
	1348 Move X0, X21
	1349 Call ScriptableRenderPass.get_depthAttachment, X0
	1350 Move V0, [X31+288]
	1351 Move V1, [X31+304]
	1352 Move X8, [X31+320]
	1353 Move X0, [X28]
	1354 Move [X31+336], V0
	1355 Move [X31+344], V1
	1356 Move [X31+368], X8
	1357 Move W8, [X0+224]
	1358 Compare W8, 0
	1359 JumpIfNotEqual {1362}
	1360 Call 0x1C17DFC
	1361 Move X0, [X28]
	1362 Move X8, [X0+184]
	1363 Move V0, [X31+336]
	1364 Move V1, [X31+352]
	1365 Move X9, [X31+368]
	1366 Add X0, X31, 1440
	1367 Move V2, [X8+32]
	1368 Move V3, [X8+48]
	1369 Move X8, [X8+64]
	1370 Add X1, X31, 1392
	1371 Move X2, X31
	1372 Move [X31+90], V0
	1373 Move [X31+91], V1
	1374 Move [X31+1472], X9
	1375 Move [X31+320], X8
	1376 Move [X31+288], V2
	1377 Move [X31+296], V3
	1378 Move [X31+87], V2
	1379 Move [X31+88], V3
	1380 Move [X31+1424], X8
	1381 Call RenderTargetIdentifier.op_Inequality, X0, X1
	1382 Compare W23, 0
	1383 JumpIfNotEqual {1388}
	1384 Move TEMP, X0
	1385 And TEMP, TEMP, 1
	1386 Compare TEMP, 1
	1387 JumpIfNotEqual {1608}
	1388 Move X0, [X27]
	1389 Move X25, [X21+128]
	1390 Move W8, [X0+224]
	1391 Compare W8, 0
	1392 JumpIfNotEqual {1394}
	1393 Call 0x1C17DFC
	1394 Move X0, X25
	1395 Move X1, X31
	1396 Call RenderingUtils.LastValid, X0
	1397 Move TEMP, X0
	1398 And TEMP, TEMP, -2147483648
	1399 Compare TEMP, -2147483648
	1400 JumpIfEqual {1608}
	1401 Move W25, W0
	1402 Move X0, [X28]
	1403 Move W8, [X0+224]
	1404 Compare W8, 0
	1405 JumpIfNotEqual {1408}
	1406 Call 0x1C17DFC
	1407 Move X0, [X28]
	1408 Move X8, [X0+184]
	1409 Move X8, [X8+88]
	1410 Compare X8, 0
	1411 JumpIfEqual {1626}
	1412 Move W10, [X8+24]
	1413 Add W9, W25, 1
	1414 NotImplemented "Instruction CMP not yet implemented."
	1415 Add X8, X8, W9
	1416 Move X25, [X8+32]
	1417 NotImplemented "Instruction CMP not yet implemented."
	1418 Move X8, X31
	1419 Move W9, W9
	1420 Move W10, 32
	1421 Move X11, [X21+128]
	1422 Compare X11, 0
	1423 JumpIfEqual {1626}
	1424 Move W12, [X11+24]
	1425 NotImplemented "Instruction CMP not yet implemented."
	1426 Add X11, X11, X10
	1427 Move X12, [X11+32]
	1428 Move V1, [X11]
	1429 Move V0, [X11+16]
	1430 Move [X31+368], X12
	1431 Move [X31+336], V1
	1432 Move [X31+344], V0
	1433 Compare X25, 0
	1434 JumpIfEqual {1626}
	1435 Move V0, [X31+336]
	1436 Move V1, [X31+352]
	1437 Move X11, [X31+368]
	1438 Move [X31+84], V0
	1439 Move [X31+85], V1
	1440 Move [X31+1376], X11
	1441 Move W11, [X25+24]
	1442 NotImplemented "Instruction CMP not yet implemented."
	1443 Move X12, [X31+1376]
	1444 Move V0, [X31+84]
	1445 Move V1, [X31+85]
	1446 Add X8, X8, 1
	1447 Add X11, X25, X10
	1448 NotImplemented "Instruction CMP not yet implemented."
	1449 Add X10, X10, 40
	1450 Move [X11+32], X12
	1451 Move [X11], V0
	1452 Move [X11+8], V1
	1453 Move W8, [X19]
	1454 Compare W8, 0
	1455 JumpIfEqual {1469}
	1456 Move W8, [X21+112]
	1457 Compare W8, 0
	1458 JumpIfEqual {1469}
	1459 Move W8, [X22+420]
	1460 Compare W8, 0
	1461 JumpIfEqual {1469}
	1462 Move X0, X20
	1463 Move X1, X31
	1464 Call CameraData.get_isRenderPassSupportedCamera, X0
	1465 Move TEMP, X0
	1466 And TEMP, TEMP, 1
	1467 Compare TEMP, 1
	1468 JumpIfEqual {1549}
	1469 Move W8, [X21+112]
	1470 Compare W8, 0
	1471 JumpIfEqual {1476}
	1472 Move W8, [X21+64]
	1473 Compare W8, 0
	1474 JumpIfEqual {1498}
	1475 Move X24, [X21+152]
	1476 Add X8, X31, 336
	1477 Move X0, X24
	1478 Move X1, X31
	1479 Call RTHandleRenderTargetIdentifierCompat.get_nameID, X0
	1480 Move V0, [X31+336]
	1481 Move V1, [X31+352]
	1482 Move X8, [X31+368]
	1483 Move [X31+151], V0
	1484 Move [X31+152], V1
	1485 Move [X31+2448], X8
	1486 Move W8, [X21+64]
	1487 Compare W8, 0
	1488 JumpIfEqual {1518}
	1489 Add X8, X31, 336
	1490 Move X0, X21
	1491 Call ScriptableRenderPass.get_depthAttachment, X0
	1492 Move V0, [X31+336]
	1493 Move V1, [X31+352]
	1494 Move X8, [X31+368]
	1495 Move [X31+151], V0
	1496 Move [X31+152], V1
	1497 Move [X31+2448], X8
	1498 Move X24, [X22+320]
	1499 Move [X22+417], W31
	1500 Move X0, [X28]
	1501 Move S11, [X21+208]
	1502 Move S10, [X21+212]
	1503 Move S9, [X21+216]
	1504 Move S8, [X21+220]
	1505 Move W8, [X0+224]
	1506 Compare W8, 0
	1507 JumpIfNotEqual {1509}
	1508 Call 0x1C17DFC
	1509 Move X0, X29
	1510 Move X1, X25
	1511 Move X2, X24
	1512 Move W3, W23
	1513 Move V0, V11
	1514 Move V1, V10
	1515 Move V2, V9
	1516 Move V3, V8
	1517 Call ScriptableRenderer.SetRenderTarget, X0, X1, X2, X3, X4
	1518 Move [X22+417], W31
	1519 Move V0, [X31+151]
	1520 Move V1, [X31+152]
	1521 Move X8, [X31+2448]
	1522 Move X0, [X28]
	1523 Move [X31+336], V0
	1524 Move [X31+344], V1
	1525 Move [X31+368], X8
	1526 Move S11, [X21+208]
	1527 Move S9, [X21+212]
	1528 Move W8, [X0+224]
	1529 Move S10, [X21+216]
	1530 Move S8, [X21+220]
	1531 Compare W8, 0
	1532 JumpIfNotEqual {1534}
	1533 Call 0x1C17DFC
	1534 Move V0, [X31+336]
	1535 Move V1, [X31+352]
	1536 Move X8, [X31+368]
	1537 Add X2, X31, 1296
	1538 Move X0, X29
	1539 Move [X31+81], V0
	1540 Move [X31+82], V1
	1541 Move X1, X25
	1542 Move W3, W23
	1543 Move V0, V11
	1544 Move V1, V9
	1545 Move V2, V10
	1546 Move V3, V8
	1547 Move [X31+1328], X8
	1548 Call ScriptableRenderer.SetRenderTarget, X0, X1, X2, X3, X4
	1549 Move X0, [X20+376]
	1550 Compare X0, 0
	1551 JumpIfEqual {1626}
	1552 Move X1, X31
	1553 Call XRPass.get_enabled, X0
	1554 Move TEMP, X0
	1555 And TEMP, TEMP, 1
	1556 Compare TEMP, 1
	1557 JumpIfNotEqual {1608}
	1558 Move X8, [X20+376]
	1559 Compare X8, 0
	1560 JumpIfEqual {1626}
	1561 Move X9, [X8+80]
	1562 Move V0, [X8+48]
	1563 Move V1, [X8+64]
	1564 Move X0, [X27]
	1565 Move X21, [X21+128]
	1566 Move [X31+368], X9
	1567 Move [X31+336], V0
	1568 Move [X31+344], V1
	1569 Move W8, [X0+224]
	1570 Compare W8, 0
	1571 JumpIfNotEqual {1573}
	1572 Call 0x1C17DFC
	1573 Move V0, [X31+336]
	1574 Move V1, [X31+352]
	1575 Move X8, [X31+368]
	1576 Add X1, X31, 1248
	1577 Move X0, X21
	1578 Move X2, X31
	1579 Move [X31+78], V0
	1580 Move [X31+79], V1
	1581 Move [X31+1280], X8
	1582 Call RenderingUtils.IndexOf, X0, X1
	1583 Add W31, W0, 1
	1584 Move W21, W0
	1585 NotImplemented "Instruction CSET not yet implemented."
	1586 Move X0, X20
	1587 Move X1, X29
	1588 Move X3, X31
	1589 Call CameraData.PushBuiltinShaderConstantsXR, X0, X1, X2
	1590 Move X0, X20
	1591 Move X1, X31
	1592 Call CameraData.get_xrUniversal, X0
	1593 Move X8, 0x705000
	1594 Move X8, [X8+3528]
	1595 Move X20, X0
	1596 Move X8, [X8]
	1597 Move W9, [X8+224]
	1598 Compare W9, 0
	1599 JumpIfNotEqual {1602}
	1600 Move X0, X8
	1601 Call 0x1C17DFC
	1602 Add W31, W21, 1
	1603 NotImplemented "Instruction CSET not yet implemented."
	1604 Move X0, X29
	1605 Move X1, X20
	1606 Move X3, X31
	1607 Call XRSystemUniversal.MarkShaderProperties, X0, X1, X2
	1608 Add X31, X31, 2512
	1609 Move X20, [X31+112]
	1610 Move X19, [X31+120]
	1611 Move X22, [X31+96]
	1612 Move X21, [X31+104]
	1613 Move X24, [X31+80]
	1614 Move X23, [X31+88]
	1615 Move X26, [X31+64]
	1616 Move X25, [X31+72]
	1617 Move X28, [X31+48]
	1618 Move X27, [X31+56]
	1619 Move X29, [X31+32]
	1620 Move X30, [X31+40]
	1621 Move D9, [X31+16]
	1622 Move D8, [X31+24]
	1623 Move D11, [X31+128]
	1624 Move D10, [X31+136]
	1625 Return 
	1626 Call 0x1C17F20
	1627 Call 0x1C17F28

Method: System.Void BeginXRRendering(UnityEngine.Rendering.CommandBuffer cmd, UnityEngine.Rendering.ScriptableRenderContext context, ref UnityEngine.Rendering.Universal.CameraData cameraData)

Disassembly:
	0x03A4F57C MOV X0, X21
	0x03A4F580 BL 0x3A439E4
	0x03A4F584 MOV X0, X31
	0x03A4F588 LDR V0, [X31 + 0x8D]
	0x03A4F58C LDR V1, [X31 + 0x8E]
	0x03A4F590 LDR X8, [X31 + 0x8F0]
	0x03A4F594 STR X0, [X31 + 0x940]
	0x03A4F598 STR V0, [X31 + 0x8A]
	0x03A4F59C STR V1, [X31 + 0x8B]
	0x03A4F5A0 STR X8, [X31 + 0x8C0]
	0x03A4F5A4 STUR V0, [X24 + 0x38]
	0x03A4F5A8 STUR V1, [X24 + 0x48]
	0x03A4F5AC STR X8, [X31 + 0x968]
	0x03A4F5B0 LDRB W8, [X21 + 0x70]
	0x03A4F5B4 MOVI V0.2D, 0x0
	0x03A4F5B8 STR V0, [X31 + 0x8D]
	0x03A4F5BC STR V0, [X31 + 0x8E]
	0x03A4F5C0 STR X31, [X31 + 0x8F0]
	0x03A4F5C4 CBZ W8, 0x3A4F5D0
	0x03A4F5C8 LDR X8, [X21 + 0x98]
	0x03A4F5CC B 0x3A4F5F4
	0x03A4F5D0 ADD X8, X31, 0x150
	0x03A4F5D4 MOV X0, X21
	0x03A4F5D8 BL 0x3A43A18
	0x03A4F5DC LDP V0, V1, [X31 + 0x150]
	0x03A4F5E0 LDR X9, [X31 + 0x170]
	0x03A4F5E4 MOV X8, X31
	0x03A4F5E8 STR V0, [X31 + 0x8D]
	0x03A4F5EC STR V1, [X31 + 0x8E]
	0x03A4F5F0 STR X9, [X31 + 0x8F0]
	0x03A4F5F4 LDR V0, [X31 + 0x8D]
	0x03A4F5F8 LDR V1, [X31 + 0x8E]
	0x03A4F5FC LDR X9, [X31 + 0x8F0]
	0x03A4F600 STR X8, [X31 + 0x910]
	0x03A4F604 STR V0, [X31 + 0x87]
	0x03A4F608 STR V1, [X31 + 0x88]
	0x03A4F60C STR X9, [X31 + 0x890]
	0x03A4F610 STUR V0, [X24 + 0x8]
	0x03A4F614 STUR V1, [X24 + 0x18]
	0x03A4F618 STR X9, [X31 + 0x938]
	0x03A4F61C LDRB W8, [X21 + 0x40]
	0x03A4F620 CBNZ W8, 0x3A4F658
	0x03A4F624 LDR W8, [X21 + 0x10]
	0x03A4F628 CMP W8, 0x96
	0x03A4F62C B.LT 0x3A507B4
	0x03A4F630 LDP V1, V0, [X22 + 0x120]
	0x03A4F634 LDR V2, [X22 + 0x11]
	0x03A4F638 STR V0, [X31 + 0x96]
	0x03A4F63C STR V1, [X31 + 0x95]
	0x03A4F640 STR V2, [X31 + 0x94]
	0x03A4F644 LDP V1, V0, [X22 + 0x150]
	0x03A4F648 LDR V2, [X22 + 0x14]
	0x03A4F64C STR V0, [X31 + 0x93]
	0x03A4F650 STR V1, [X31 + 0x92]
	0x03A4F654 STR V2, [X31 + 0x91]
	0x03A4F658 ADD X8, X31, 0x120
	0x03A4F65C ADD X0, X31, 0x940
	0x03A4F660 MOV X1, X31
	0x03A4F664 BL 0x3A53368
	0x03A4F668 LDR X8, [X31 + 0x140]
	0x03A4F66C LDP V0, V1, [X31 + 0x120]
	0x03A4F670 ADD X0, X22, 0x110
	0x03A4F674 MOV X1, X31
	0x03A4F678 STR X8, [X31 + 0x170]
	0x03A4F67C ADD X8, X31, 0x120
	0x03A4F680 STP V0, V1, [X31 + 0x150]
	0x03A4F684 BL 0x3A53368
	0x03A4F688 LDP V0, V1, [X31 + 0x120]
	0x03A4F68C LDR X8, [X31 + 0x140]
	0x03A4F690 LDP V2, V3, [X31 + 0x150]
	0x03A4F694 LDR X9, [X31 + 0x170]
	0x03A4F698 ADD X0, X31, 0x4B0
	0x03A4F69C ADD X1, X31, 0x480
	0x03A4F6A0 MOV X2, X31
	0x03A4F6A4 STR V0, [X31 + 0x48]
	0x03A4F6A8 STR V1, [X31 + 0x49]
	0x03A4F6AC STR X8, [X31 + 0x4A0]
	0x03A4F6B0 STR V2, [X31 + 0x4B]
	0x03A4F6B4 STR V3, [X31 + 0x4C]
	0x03A4F6B8 STR X9, [X31 + 0x4D0]
	0x03A4F6BC BL 0x3C4B6D8
	0x03A4F6C0 TBZ X0, 0x0, 0x3A4F79C
	0x03A4F6C4 LDRB W8, [X22 + 0x1A0]
	0x03A4F6C8 CBZ W8, 0x3A4F79C
	0x03A4F6CC MOV X0, X31
	0x03A4F6D0 STRB W31, [X22 + 0x1A0]
	0x03A4F6D4 AND W24, W23, 0x1
	0x03A4F6D8 BL 0x3C3C2DC
	0x03A4F6DC TBZ X0, 0x0, 0x3A4F77C
	0x03A4F6E0 ADD X8, X31, 0x150
	0x03A4F6E4 ADD X0, X31, 0x940
	0x03A4F6E8 MOV X1, X31
	0x03A4F6EC BL 0x3A53368
	0x03A4F6F0 LDP V0, V1, [X31 + 0x150]
	0x03A4F6F4 LDR X8, [X31 + 0x170]
	0x03A4F6F8 MOVI V2.2D, 0x0
	0x03A4F6FC ADD X0, X31, 0x150
	0x03A4F700 ADD X1, X31, 0x450
	0x03A4F704 MOVN W3, 0x0
	0x03A4F708 MOV W2, W31
	0x03A4F70C MOV W4, W31

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x994000
	007 Move W8, [X21+433]
	008 Move X20, X3
	009 Move X19, X1
	010 Move [X31+8], X2
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {26}
	015 Move X0, 0x702000
	016 Move X0, [X0+3200]
	017 Call 0x1C17CF4
	018 Move X0, 0x702000
	019 Move X0, [X0+1280]
	020 Call 0x1C17CF4
	021 Move X0, 0x702000
	022 Move X0, [X0+1416]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X21+433], W8
	026 Move X0, [X20+376]
	027 Compare X0, 0
	028 JumpIfEqual {130}
	029 Move X1, X31
	030 Call XRPass.get_enabled, X0
	031 Move TEMP, X0
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfNotEqual {124}
	035 Move X0, X20
	036 Move X1, X31
	037 Call CameraData.get_xrUniversal, X0
	038 Compare X0, 0
	039 JumpIfEqual {130}
	040 Move W8, [X0+1736]
	041 Compare W8, 0
	042 JumpIfEqual {50}
	043 Move X0, X20
	044 Move X1, X31
	045 Call CameraData.get_xrUniversal, X0
	046 Compare X0, 0
	047 JumpIfEqual {130}
	048 Move W8, 1
	049 Move [X0+1737], W8
	050 Move X0, [X20+376]
	051 Compare X0, 0
	052 JumpIfEqual {130}
	053 Move X1, X19
	054 Move X2, X31
	055 Call XRPass.StartSinglePass, X0, X1
	056 Move X0, [X20+376]
	057 Compare X0, 0
	058 JumpIfEqual {130}
	059 Move X1, X31
	060 Call XRPass.get_supportsFoveatedRendering, X0
	061 Move TEMP, X0
	062 And TEMP, TEMP, 1
	063 Compare TEMP, 1
	064 JumpIfNotEqual {108}
	065 Move X8, [X20+376]
	066 Compare X8, 0
	067 JumpIfEqual {130}
	068 Compare X19, 0
	069 JumpIfEqual {130}
	070 Move X1, [X8+1728]
	071 Move X0, X19
	072 Move X2, X31
	073 Call CommandBuffer.ConfigureFoveatedRendering, X0, X1
	074 Move X20, 0x702000
	075 Move X20, [X20+1280]
	076 Move X0, [X20]
	077 Move W8, [X0+224]
	078 Compare W8, 0
	079 JumpIfNotEqual {81}
	080 Call 0x1C17DFC
	081 Move X21, 0x993000
	082 Move W8, [X21+2873]
	083 Compare W8, 0
	084 JumpIfNotEqual {90}
	085 Move X0, 0x702000
	086 Move X0, [X0+1280]
	087 Call 0x1C17CF4
	088 Move W8, 1
	089 Move [X21+2873], W8
	090 Move X0, [X20]
	091 Move W8, [X0+224]
	092 Compare W8, 0
	093 JumpIfNotEqual {96}
	094 Call 0x1C17DFC
	095 Move X0, [X20]
	096 Move X8, [X0+184]
	097 Move W8, [X8+76]
	098 Move TEMP, X8
	099 And TEMP, TEMP, 2
	100 Compare TEMP, 2
	101 JumpIfNotEqual {108}
	102 Move X8, 0x702000
	103 Move X8, [X8+1416]
	104 Move X0, X19
	105 Move X2, X31
	106 Move X1, [X8]
	107 Call CommandBuffer.EnableShaderKeyword, X0, X1
	108 Move X8, 0x702000
	109 Move X8, [X8+3200]
	110 Move X0, [X8]
	111 Move W8, [X0+224]
	112 Compare W8, 0
	113 JumpIfNotEqual {115}
	114 Call 0x1C17DFC
	115 Add X0, X31, 8
	116 Move X1, X19
	117 Move X2, X31
	118 Call ScriptableRenderContext.ExecuteCommandBuffer, X0, X1
	119 Compare X19, 0
	120 JumpIfEqual {130}
	121 Move X0, X19
	122 Move X1, X31
	123 Call CommandBuffer.Clear, X0
	124 Move X20, [X31+32]
	125 Move X19, [X31+40]
	126 Move X30, [X31+16]
	127 Move X21, [X31+24]
	128 Add X31, X31, 48
	129 Return 
	130 Call 0x1C17F20

Method: System.Void EndXRRendering(UnityEngine.Rendering.CommandBuffer cmd, UnityEngine.Rendering.ScriptableRenderContext context, ref UnityEngine.Rendering.Universal.CameraData cameraData)

Disassembly:
	0x03A4F710 MOV X5, X31
	0x03A4F714 STR X31, [X31 + 0x170]
	0x03A4F718 STR V0, [X31 + 0x45]
	0x03A4F71C STR V1, [X31 + 0x46]
	0x03A4F720 STR X8, [X31 + 0x470]
	0x03A4F724 STP V2, V2, [X31 + 0x150]
	0x03A4F728 BL 0x3C4B098
	0x03A4F72C ADD X8, X31, 0x120
	0x03A4F730 MOVZ W0, 0x2
	0x03A4F734 MOV X1, X31
	0x03A4F738 BL 0x3C4B204
	0x03A4F73C LDP V0, V1, [X31 + 0x120]
	0x03A4F740 LDR X8, [X31 + 0x140]
	0x03A4F744 LDP V2, V3, [X31 + 0x150]
	0x03A4F748 LDR X9, [X31 + 0x170]
	0x03A4F74C ADD X0, X31, 0x420
	0x03A4F750 ADD X1, X31, 0x3F0
	0x03A4F754 MOV X2, X31
	0x03A4F758 STP V0, V1, [X31 + 0x3F0]
	0x03A4F75C STR X8, [X31 + 0x410]
	0x03A4F760 STR V2, [X31 + 0x42]
	0x03A4F764 STR V3, [X31 + 0x43]
	0x03A4F768 STR X9, [X31 + 0x440]
	0x03A4F76C BL 0x3C4B708
	0x03A4F770 TBZ X0, 0x0, 0x3A4F77C
	0x03A4F774 LDR W8, [X21 + 0xCC]
	0x03A4F778 ORR W24, W8, W24, 0x0
	0x03A4F77C LDR V0, [X20 + 0x1D]
	0x03A4F780 STR V0, [X31 + 0x90]
	0x03A4F784 LDRB W8, [X22 + 0x1A1]
	0x03A4F788 CBZ W8, 0x3A4F7AC
	0x03A4F78C AND W8, W23, 0x6
	0x03A4F790 STRB W31, [X22 + 0x1A1]
	0x03A4F794 ORR W24, W24, W8, 0x0
	0x03A4F798 B 0x3A4F7AC
	0x03A4F79C LDR W8, [X21 + 0xCC]
	0x03A4F7A0 LDR V0, [X21 + 0xD]
	0x03A4F7A4 AND W24, W8, 0x1
	0x03A4F7A8 STR V0, [X31 + 0x90]
	0x03A4F7AC ADD X23, X22, 0x140
	0x03A4F7B0 ADD X8, X31, 0x150
	0x03A4F7B4 MOV X0, X23
	0x03A4F7B8 MOV X1, X31
	0x03A4F7BC BL 0x3A53368
	0x03A4F7C0 LDP V0, V1, [X31 + 0x150]
	0x03A4F7C4 LDR X8, [X31 + 0x170]
	0x03A4F7C8 MOVI V2.2D, 0x0
	0x03A4F7CC ADD X0, X31, 0x150
	0x03A4F7D0 ADD X1, X31, 0x3C0
	0x03A4F7D4 MOVN W3, 0x0
	0x03A4F7D8 MOV W2, W31
	0x03A4F7DC MOV W4, W31
	0x03A4F7E0 MOV X5, X31
	0x03A4F7E4 STR X31, [X31 + 0x170]
	0x03A4F7E8 STP V0, V1, [X31 + 0x3C0]
	0x03A4F7EC STR X8, [X31 + 0x3E0]
	0x03A4F7F0 STP V2, V2, [X31 + 0x150]
	0x03A4F7F4 BL 0x3C4B098
	0x03A4F7F8 ADD X8, X31, 0x120
	0x03A4F7FC MOVZ W0, 0x2
	0x03A4F800 MOV X1, X31
	0x03A4F804 BL 0x3C4B204
	0x03A4F808 LDP V0, V1, [X31 + 0x120]
	0x03A4F80C LDR X8, [X31 + 0x140]
	0x03A4F810 LDP V2, V3, [X31 + 0x150]
	0x03A4F814 LDR X9, [X31 + 0x170]
	0x03A4F818 ADD X0, X31, 0x390
	0x03A4F81C ADD X1, X31, 0x360
	0x03A4F820 MOV X2, X31
	0x03A4F824 STP V0, V1, [X31 + 0x360]
	0x03A4F828 STR X8, [X31 + 0x380]
	0x03A4F82C STP V2, V3, [X31 + 0x390]
	0x03A4F830 STR X9, [X31 + 0x3B0]
	0x03A4F834 BL 0x3C4B708
	0x03A4F838 TBZ X0, 0x0, 0x3A4F914
	0x03A4F83C ADD X8, X31, 0x120
	0x03A4F840 ADD X0, X31, 0x910
	0x03A4F844 MOV X1, X31
	0x03A4F848 BL 0x3A53368
	0x03A4F84C LDR X8, [X31 + 0x140]
	0x03A4F850 LDP V0, V1, [X31 + 0x120]
	0x03A4F854 MOV X0, X23
	0x03A4F858 MOV X1, X31
	0x03A4F85C STR X8, [X31 + 0x170]
	0x03A4F860 ADD X8, X31, 0x120
	0x03A4F864 STP V0, V1, [X31 + 0x150]
	0x03A4F868 BL 0x3A53368
	0x03A4F86C LDP V0, V1, [X31 + 0x120]
	0x03A4F870 LDR X8, [X31 + 0x140]
	0x03A4F874 LDP V2, V3, [X31 + 0x150]
	0x03A4F878 LDR X9, [X31 + 0x170]
	0x03A4F87C ADD X0, X31, 0x330
	0x03A4F880 ADD X1, X31, 0x300
	0x03A4F884 MOV X2, X31
	0x03A4F888 STP V0, V1, [X31 + 0x300]
	0x03A4F88C STR X8, [X31 + 0x320]
	0x03A4F890 STP V2, V3, [X31 + 0x330]
	0x03A4F894 STR X9, [X31 + 0x350]
	0x03A4F898 BL 0x3C4B6D8
	0x03A4F89C TBNZ X0, 0x0, 0x3A4F904
	0x03A4F8A0 ADD X8, X31, 0x120
	0x03A4F8A4 ADD X0, X31, 0x940

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x994000
	007 Move W8, [X21+434]
	008 Move X20, X3
	009 Move X19, X1
	010 Move [X31+8], X2
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {26}
	015 Move X0, 0x702000
	016 Move X0, [X0+3200]
	017 Call 0x1C17CF4
	018 Move X0, 0x702000
	019 Move X0, [X0+1280]
	020 Call 0x1C17CF4
	021 Move X0, 0x702000
	022 Move X0, [X0+1416]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X21+434], W8
	026 Move X0, [X20+376]
	027 Compare X0, 0
	028 JumpIfEqual {127}
	029 Move X1, X31
	030 Call XRPass.get_enabled, X0
	031 Move TEMP, X0
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfNotEqual {121}
	035 Move X0, [X20+376]
	036 Compare X0, 0
	037 JumpIfEqual {127}
	038 Move X1, X19
	039 Move X2, X31
	040 Call XRPass.StopSinglePass, X0, X1
	041 Move X20, 0x702000
	042 Move X20, [X20+1280]
	043 Move X0, [X20]
	044 Move W8, [X0+224]
	045 Compare W8, 0
	046 JumpIfNotEqual {48}
	047 Call 0x1C17DFC
	048 Move X21, 0x993000
	049 Move W8, [X21+2873]
	050 Compare W8, 0
	051 JumpIfNotEqual {57}
	052 Move X0, 0x702000
	053 Move X0, [X0+1280]
	054 Call 0x1C17CF4
	055 Move W8, 1
	056 Move [X21+2873], W8
	057 Move X0, [X20]
	058 Move W8, [X0+224]
	059 Compare W8, 0
	060 JumpIfNotEqual {63}
	061 Call 0x1C17DFC
	062 Move X0, [X20]
	063 Move X8, [X0+184]
	064 Move W8, [X8+76]
	065 Compare W8, 0
	066 JumpIfEqual {105}
	067 Move W8, [X0+224]
	068 Compare W8, 0
	069 JumpIfNotEqual {71}
	070 Call 0x1C17DFC
	071 Move W8, [X21+2873]
	072 Compare W8, 0
	073 JumpIfNotEqual {79}
	074 Move X0, 0x702000
	075 Move X0, [X0+1280]
	076 Call 0x1C17CF4
	077 Move W8, 1
	078 Move [X21+2873], W8
	079 Move X0, [X20]
	080 Move W8, [X0+224]
	081 Compare W8, 0
	082 JumpIfNotEqual {85}
	083 Call 0x1C17DFC
	084 Move X0, [X20]
	085 Move X8, [X0+184]
	086 Move W8, [X8+76]
	087 Move TEMP, X8
	088 And TEMP, TEMP, 2
	089 Compare TEMP, 2
	090 JumpIfEqual {93}
	091 Compare X19, 0
	092 JumpIfNotEqual {101}
	093 Compare X19, 0
	094 JumpIfEqual {127}
	095 Move X8, 0x702000
	096 Move X8, [X8+1416]
	097 Move X0, X19
	098 Move X2, X31
	099 Move X1, [X8]
	100 Call CommandBuffer.DisableShaderKeyword, X0, X1
	101 Move X0, X19
	102 Move X1, X31
	103 Move X2, X31
	104 Call CommandBuffer.ConfigureFoveatedRendering, X0, X1
	105 Move X8, 0x702000
	106 Move X8, [X8+3200]
	107 Move X0, [X8]
	108 Move W8, [X0+224]
	109 Compare W8, 0
	110 JumpIfNotEqual {112}
	111 Call 0x1C17DFC
	112 Add X0, X31, 8
	113 Move X1, X19
	114 Move X2, X31
	115 Call ScriptableRenderContext.ExecuteCommandBuffer, X0, X1
	116 Compare X19, 0
	117 JumpIfEqual {127}
	118 Move X0, X19
	119 Move X1, X31
	120 Call CommandBuffer.Clear, X0
	121 Move X20, [X31+32]
	122 Move X19, [X31+40]
	123 Move X30, [X31+16]
	124 Move X21, [X31+24]
	125 Add X31, X31, 48
	126 Return 
	127 Call 0x1C17F20

Method: System.Void SetRenderTarget(UnityEngine.Rendering.CommandBuffer cmd, UnityEngine.Rendering.RenderTargetIdentifier colorAttachment, UnityEngine.Rendering.RenderTargetIdentifier depthAttachment, UnityEngine.Rendering.ClearFlag clearFlag, UnityEngine.Color clearColor)

Disassembly:
	0x03A45760 CBZ X21, 0x3A45908
	0x03A45764 LDR X8, [X21]
	0x03A45768 LDP X9, X1, [X8 + 0x188]
	0x03A4576C MOV X0, X21
	0x03A45770 BLR X9
	0x03A45774 LDR X0, [X19 + 0x108]
	0x03A45778 CBZ X0, 0x3A4590C
	0x03A4577C LDR W10, [X0 + 0x1C]
	0x03A45780 LDR X8, [X0 + 0x10]
	0x03A45784 LDR X9, [X27]
	0x03A45788 ADD W10, W10, 0x1
	0x03A4578C STR W10, [X0 + 0x1C]
	0x03A45790 CBZ X8, 0x3A45904
	0x03A45794 LDRSW X10, [X0 + 0x18]
	0x03A45798 LDR W11, [X8 + 0x18]
	0x03A4579C CMP W10, W11
	0x03A457A0 B.CS 0x3A457B8
	0x03A457A4 ADD W9, W10, 0x1
	0x03A457A8 ADD X8, X8, X10, 0x3, LSL
	0x03A457AC STR W9, [X0 + 0x18]
	0x03A457B0 STR X21, [X8 + 0x20]
	0x03A457B4 B 0x3A45728
	0x03A457B8 LDR X8, [X9 + 0x20]
	0x03A457BC LDR X8, [X8 + 0xC0]
	0x03A457C0 LDR X2, [X8 + 0x70]
	0x03A457C4 MOV X1, X21
	0x03A457C8 BL 0x301BF90
	0x03A457CC B 0x3A45728
	0x03A457D0 LDR X1, [X25]
	0x03A457D4 ADD X0, X31, 0x460
	0x03A457D8 BL 0x2BC434C
	0x03A457DC MOV X0, X19
	0x03A457E0 BL 0x3A45C58
	0x03A457E4 LDRB W8, [X20 + 0x38]
	0x03A457E8 CBZ W8, 0x3A45814
	0x03A457EC MOV X0, X31
	0x03A457F0 BL 0x3C3BACC
	0x03A457F4 CMP W0, 0x8
	0x03A457F8 B.NE 0x3A45804
	0x03A457FC MOV W8, W31
	0x03A45800 B 0x3A45814
	0x03A45804 MOV X0, X31
	0x03A45808 BL 0x3C3BACC
	0x03A4580C CMP W0, 0x12
	0x03A45810 CSET W8, NE
	0x03A45814 CBZ X19, 0x3A45914
	0x03A45818 MOV X0, X19
	0x03A4581C MOV W1, W31
	0x03A45820 STRB W8, [X19 + 0x1A4]
	0x03A45824 BL 0x3A4B0C0
	0x03A45828 LDR X8, [X19 + 0x100]
	0x03A4582C CBZ X8, 0x3A45914
	0x03A45830 LDP W2, W9, [X8 + 0x18]
	0x03A45834 ADD W9, W9, 0x1
	0x03A45838 CMP W2, 0x1
	0x03A4583C STP W31, W9, [X8 + 0x18]
	0x03A45840 B.LT 0x3A45854
	0x03A45844 LDR X0, [X8 + 0x10]
	0x03A45848 MOV W1, W31
	0x03A4584C MOV X3, X31
	0x03A45850 BL 0x339FA34
	0x03A45854 LDR X0, [X23]
	0x03A45858 LDR W8, [X0 + 0xE0]
	0x03A4585C CBNZ W8, 0x3A45864
	0x03A45860 BL 0x1C16DFC
	0x03A45864 MOV X0, X31
	0x03A45868 BL 0x3A8AB60
	0x03A4586C LDR X8, [X24]
	0x03A45870 MOV X20, X0
	0x03A45874 LDR W9, [X8 + 0xE0]
	0x03A45878 CBNZ W9, 0x3A45884
	0x03A4587C MOV X0, X8
	0x03A45880 BL 0x1C16DFC
	0x03A45884 MOV X0, X20
	0x03A45888 MOV X1, X31
	0x03A4588C BL 0x3C38948
	0x03A45890 TBZ X0, 0x0, 0x3A458BC
	0x03A45894 LDR X0, [X23]
	0x03A45898 LDR W8, [X0 + 0xE0]
	0x03A4589C CBNZ W8, 0x3A458A4
	0x03A458A0 BL 0x1C16DFC
	0x03A458A4 MOV X0, X31
	0x03A458A8 BL 0x3A8AB60
	0x03A458AC CBZ X0, 0x3A45914
	0x03A458B0 LDR W20, [X0 + 0xF4]
	0x03A458B4 STR W20, [X19 + 0xF8]
	0x03A458B8 B 0x3A458C0
	0x03A458BC LDR W20, [X19 + 0xF8]
	0x03A458C0 LDR X0, [X22]
	0x03A458C4 LDR W8, [X0 + 0xE0]
	0x03A458C8 CBNZ W8, 0x3A458D4
	0x03A458CC BL 0x1C16DFC
	0x03A458D0 LDR X0, [X22]
	0x03A458D4 LDR X8, [X0 + 0xB8]
	0x03A458D8 CMP W20, 0x2
	0x03A458DC CSET W9, NE
	0x03A458E0 STRB W9, [X8 + 0x8]
	0x03A458E4 ADD X31, X31, 0x480
	0x03A458E8 LDP X20, X19, [X31 + 0x50]
	0x03A458EC LDP X22, X21, [X31 + 0x40]
	0x03A458F0 LDP X24, X23, [X31 + 0x30]
	0x03A458F4 LDP X26, X25, [X31 + 0x20]
	0x03A458F8 LDP X28, X27, [X31 + 0x10]
	0x03A458FC LDP X29, X30, [X31], #0x60
	0x03A45900 RET
	0x03A45904 BL 0x1C16F20
	0x03A45908 BL 0x1C16F20
	0x03A4590C BL 0x1C16F20
	0x03A45910 BL 0x1C16F28
	0x03A45914 BL 0x1C16F20
	0x03A45918 B 0x3A45930
	0x03A4591C B 0x3A45930
	0x03A45920 B 0x3A45930
	0x03A45924 B 0x3A45930
	0x03A45928 B 0x3A45930
	0x03A4592C B 0x3A45930
	0x03A45930 CMP W1, 0x1
	0x03A45934 B.NE 0x3A4595C
	0x03A45938 BL 0x3EB1AD0
	0x03A4593C LDR X21, [X0]
	0x03A45940 BL 0x3EB1AE0
	0x03A45944 LDR X1, [X25]
	0x03A45948 ADD X0, X31, 0x460
	0x03A4594C BL 0x2BC434C
	0x03A45950 CBZ X21, 0x3A457DC
	0x03A45954 MOV X0, X21
	0x03A45958 BL 0x1C16F18
	0x03A4595C MOV X19, X0
	0x03A45960 MOV X21, X31
	0x03A45964 B 0x3A4596C
	0x03A45968 MOV X19, X0
	0x03A4596C LDR X1, [X25]
	0x03A45970 ADD X0, X31, 0x460
	0x03A45974 BL 0x2BC434C
	0x03A45978 CBNZ X21, 0x3A45984
	0x03A4597C MOV X0, X19
	0x03A45980 BL 0x1D2C690
	0x03A45984 MOV X0, X21
	0x03A45988 BL 0x1C16F18
	0x03A4598C BL 0x1990590
	0x03A45990 STR X30, [X31 - 0x20]!
	0x03A45994 STP X20, X19, [X31 + 0x10]
	0x03A45998 ADRP X19, 0x710000
	0x03A4599C LDR X19, [X19 + 0xC80]
	0x03A459A0 MOV X0, X19
	0x03A459A4 BL 0x1C16D08
	0x03A459A8 BL 0x19903D0
	0x03A459AC MOV X0, X19
	0x03A459B0 BL 0x1C16D08
	0x03A459B4 LDR X8, [X0 + 0xB8]
	0x03A459B8 ADRP X0, 0x6AE000
	0x03A459BC LDR X19, [X8]
	0x03A459C0 LDR X0, [X0 + 0xB40]
	0x03A459C4 BL 0x1C16D08
	0x03A459C8 BL 0x1C16F10
	0x03A459CC MOV X1, X19
	0x03A459D0 MOV X2, X31
	0x03A459D4 MOV X20, X0
	0x03A459D8 BL 0x3379A44
	0x03A459DC ADRP X0, 0x710000
	0x03A459E0 LDR X0, [X0 + 0xCF8]
	0x03A459E4 BL 0x1C16D08
	0x03A459E8 MOV X1, X0
	0x03A459EC MOV X0, X20
	0x03A459F0 BL 0x1C16DEC
	0x03A459F4 STR X30, [X31 - 0x20]!
	0x03A459F8 STP X20, X19, [X31 + 0x10]
	0x03A459FC ADRP X19, 0x710000
	0x03A45A00 LDR X19, [X19 + 0xC80]
	0x03A45A04 MOV X0, X19
	0x03A45A08 BL 0x1C16D08
	0x03A45A0C BL 0x19903D0
	0x03A45A10 MOV X0, X19
	0x03A45A14 BL 0x1C16D08
	0x03A45A18 LDR X8, [X0 + 0xB8]
	0x03A45A1C ADRP X0, 0x6AE000
	0x03A45A20 LDR X19, [X8]
	0x03A45A24 LDR X0, [X0 + 0xB40]
	0x03A45A28 BL 0x1C16D08
	0x03A45A2C BL 0x1C16F10

ISIL:
	001 Subtract X31, X31, 416
	002 Move [X31+304], D11
	003 Move [X31+312], D10
	004 Move [X31+320], D9
	005 Move [X31+328], D8
	006 Move [X31+336], X29
	007 Move [X31+344], X30
	008 Move [X31+352], X26
	009 Move [X31+360], X25
	010 Move [X31+368], X24
	011 Move [X31+376], X23
	012 Move [X31+384], X22
	013 Move [X31+392], X21
	014 Move [X31+400], X20
	015 Move [X31+408], X19
	016 Move X24, 0x99E000
	017 Move X23, 0x710000
	018 Move W8, [X24+435]
	019 Move X23, [X23+2248]
	020 Move V8, V3
	021 Move V9, V2
	022 Move V10, V1
	023 Move V11, V0
	024 Move W19, W3
	025 Move X21, X2
	026 Move X22, X1
	027 Move X20, X0
	028 Move TEMP, X8
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfEqual {37}
	032 Move X0, 0x710000
	033 Move X0, [X0+2248]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X24+435], W8
	037 Move X0, [X23]
	038 Move W8, [X0+224]
	039 Compare W8, 0
	040 JumpIfNotEqual {43}
	041 Call 0x1C17DFC
	042 Move X0, [X23]
	043 Move X8, [X0+184]
	044 Move X9, [X22+32]
	045 Move V0, [X22]
	046 Move V1, [X22+16]
	047 Move X8, [X8+24]
	048 Move [X31+288], X9
	049 Move [X31+256], V0
	050 Move [X31+264], V1
	051 Compare X8, 0
	052 JumpIfEqual {233}
	053 Move V0, [X31+256]
	054 Move V1, [X31+272]
	055 Move X9, [X31+288]
	056 Move [X31+208], V0
	057 Move [X31+216], V1
	058 Move [X31+240], X9
	059 Move W9, [X8+24]
	060 Compare W9, 0
	061 JumpIfEqual {234}
	062 Move X9, [X31+240]
	063 Move V1, [X31+208]
	064 Move V0, [X31+224]
	065 Move W24, 1
	066 Move W25, 72
	067 Move [X8+64], X9
	068 Move [X8+32], V1
	069 Move [X8+40], V0
	070 Move X0, [X23]
	071 Move W8, [X0+224]
	072 Compare W8, 0
	073 JumpIfNotEqual {76}
	074 Call 0x1C17DFC
	075 Move X0, [X23]
	076 Move X8, [X0+184]
	077 Move X9, [X8+24]
	078 Compare X9, 0
	079 JumpIfEqual {233}
	080 Move W10, [X0+224]
	081 NotImplemented "Instruction LDRSW not yet implemented."
	082 Compare W10, 0
	083 JumpIfNotEqual {87}
	084 Call 0x1C17DFC
	085 Move X0, [X23]
	086 Move X8, [X0+184]
	087 NotImplemented "Instruction CMP not yet implemented."
	088 Move X26, [X8+24]
	089 Add X8, X31, 160
	090 Move W0, W31
	091 Move X1, X31
	092 Call RenderTargetIdentifier.op_Implicit, X0
	093 Move V0, [X31+160]
	094 Move V1, [X31+176]
	095 Move X8, [X31+192]
	096 Move [X31+256], V0
	097 Move [X31+264], V1
	098 Move [X31+288], X8
	099 Compare X26, 0
	100 JumpIfEqual {233}
	101 Move V0, [X31+256]
	102 Move V1, [X31+272]
	103 Move X8, [X31+288]
	104 Move [X31+112], V0
	105 Move [X31+120], V1
	106 Move [X31+144], X8
	107 Move W8, [X26+24]
	108 NotImplemented "Instruction CMP not yet implemented."
	109 Move X8, [X31+144]
	110 Move V0, [X31+112]
	111 Move V1, [X31+128]
	112 Add X9, X26, X25
	113 Add X24, X24, 1
	114 Add X25, X25, 40
	115 Move [X9+32], X8
	116 Move [X9], V0
	117 Move [X9+8], V1
	118 Move X9, [X8+72]
	119 Compare X9, 0
	120 JumpIfEqual {233}
	121 Move W10, [X9+24]
	122 Compare W10, 0
	123 JumpIfEqual {234}
	124 Move [X9+32], W31
	125 Move [X8+80], W31
	126 Move W24, 9
	127 Move W8, [X0+224]
	128 Compare W8, 0
	129 JumpIfNotEqual {132}
	130 Call 0x1C17DFC
	131 Move X0, [X23]
	132 Move X8, [X0+184]
	133 Move X9, [X8+72]
	134 Compare X9, 0
	135 JumpIfEqual {233}
	136 NotImplemented "Instruction LDRSW not yet implemented."
	137 Subtract X25, X24, 8
	138 NotImplemented "Instruction CMP not yet implemented."
	139 Move W8, [X0+224]
	140 Compare W8, 0
	141 JumpIfNotEqual {144}
	142 Call 0x1C17DFC
	143 Move X0, [X23]
	144 Move X8, [X0+184]
	145 Move X8, [X8+72]
	146 Compare X8, 0
	147 JumpIfEqual {233}
	148 Move W9, [X8+24]
	149 NotImplemented "Instruction CMP not yet implemented."
	150 Move [X8], W31
	151 Add X24, X24, 1
	152 Move X9, [X21+32]
	153 Move V1, [X21]
	154 Move V0, [X21+16]
	155 Move [X31+288], X9
	156 Move [X31+256], V1
	157 Move [X31+264], V0
	158 Move W9, [X0+224]
	159 Compare W9, 0
	160 JumpIfNotEqual {164}
	161 Call 0x1C17DFC
	162 Move X0, [X23]
	163 Move X8, [X0+184]
	164 Move X9, [X31+288]
	165 Move V1, [X31+256]
	166 Move V0, [X31+272]
	167 Move [X8+64], X9
	168 Move [X8+32], V1
	169 Move [X8+40], V0
	170 Move X8, [X22+32]
	171 Move V1, [X22]
	172 Move V0, [X22+16]
	173 Move [X31+288], X8
	174 Move [X31+256], V1
	175 Move [X31+264], V0
	176 Move X8, [X21+32]
	177 Move V1, [X21]
	178 Move V0, [X21+16]
	179 Move [X31+192], X8
	180 Move [X31+160], V1
	181 Move [X31+168], V0
	182 Move W8, [X0+224]
	183 Compare W8, 0
	184 JumpIfNotEqual {186}
	185 Call 0x1C17DFC
	186 Move V0, [X31+256]
	187 Move V1, [X31+272]
	188 Move X8, [X31+288]
	189 Move X9, [X31+192]
	190 And W31, W19, 6
	191 Move [X31+64], V0
	192 Move [X31+72], V1
	193 Move V0, [X31+160]
	194 Move V1, [X31+176]
	195 Move [X31+96], X8
	196 NotImplemented "Instruction CSET not yet implemented."
	197 Move W2, W19
	198 ShiftRight W2, 31
	199 And W2, W2, 0
	200 Move W5, W8
	201 ShiftRight W5, 31
	202 And W5, W5, 0x3FFFFFFF
	203 Move [X31+16], V0
	204 Move [X31+24], V1
	205 Add X1, X31, 64
	206 Add X4, X31, 16
	207 Move X0, X20
	208 Move W3, W31
	209 Move W6, W31
	210 Move W7, W19
	211 Move V0, V11
	212 Move V1, V10
	213 Move V2, V9
	214 Move V3, V8
	215 Move [X31+48], X9
	216 Call ScriptableRenderer.SetRenderTarget, X0, X1, X2, X3, X4, X5, X6, X7, X8
	217 Move X20, [X31+400]
	218 Move X19, [X31+408]
	219 Move X22, [X31+384]
	220 Move X21, [X31+392]
	221 Move X24, [X31+368]
	222 Move X23, [X31+376]
	223 Move X26, [X31+352]
	224 Move X25, [X31+360]
	225 Move X29, [X31+336]
	226 Move X30, [X31+344]
	227 Move D9, [X31+320]
	228 Move D8, [X31+328]
	229 Move D11, [X31+304]
	230 Move D10, [X31+312]
	231 Add X31, X31, 416
	232 Return 
	233 Call 0x1C17F20
	234 Call 0x1C17F28

Method: System.Void SetRenderTarget(UnityEngine.Rendering.CommandBuffer cmd, UnityEngine.Rendering.RTHandle colorAttachment, UnityEngine.Rendering.RTHandle depthAttachment, UnityEngine.Rendering.ClearFlag clearFlag, UnityEngine.Color clearColor)

Disassembly:
	0x03A52204 LDR V0, [X31 + 0x71]
	0x03A52208 LDR V1, [X31 + 0x72]
	0x03A5220C LDR X8, [X31 + 0x730]
	0x03A52210 STR V0, [X31 + 0x68]
	0x03A52214 STR V1, [X31 + 0x69]
	0x03A52218 STR X8, [X31 + 0x6A0]
	0x03A5221C LDR W8, [X20 + 0x18]
	0x03A52220 CMP W8, 0x2
	0x03A52224 B.LS 0x3A52B94
	0x03A52228 LDR X8, [X31 + 0x6A0]
	0x03A5222C LDR V0, [X31 + 0x69]
	0x03A52230 LDR V1, [X31 + 0x68]
	0x03A52234 STR X8, [X20 + 0x90]
	0x03A52238 STP V1, V0, [X20 + 0x70]
	0x03A5223C LDR W8, [X19 + 0x18]
	0x03A52240 CMP W8, 0x3
	0x03A52244 B.LS 0x3A52B94
	0x03A52248 STR X20, [X19 + 0x38]
	0x03A5224C LDR X0, [X22]
	0x03A52250 MOVZ W1, 0x4
	0x03A52254 BL 0x1C16D6C
	0x03A52258 MOV X20, X0
	0x03A5225C ADD X8, X31, 0x650
	0x03A52260 MOV W0, W31
	0x03A52264 MOV X1, X31
	0x03A52268 BL 0x3C4B258
	0x03A5226C LDR V0, [X31 + 0x65]
	0x03A52270 LDR V1, [X31 + 0x66]
	0x03A52274 LDR X8, [X31 + 0x670]
	0x03A52278 STR V0, [X31 + 0x71]
	0x03A5227C STR V1, [X31 + 0x72]
	0x03A52280 STR X8, [X31 + 0x730]
	0x03A52284 CBZ X20, 0x3A52B98
	0x03A52288 LDR V0, [X31 + 0x71]
	0x03A5228C LDR V1, [X31 + 0x72]
	0x03A52290 LDR X8, [X31 + 0x730]
	0x03A52294 STR V0, [X31 + 0x62]
	0x03A52298 STR V1, [X31 + 0x63]
	0x03A5229C STR X8, [X31 + 0x640]
	0x03A522A0 LDR W8, [X20 + 0x18]
	0x03A522A4 CBZ W8, 0x3A52B94
	0x03A522A8 LDR X8, [X31 + 0x640]
	0x03A522AC LDR V0, [X31 + 0x63]
	0x03A522B0 LDR V1, [X31 + 0x62]
	0x03A522B4 MOV W0, W31
	0x03A522B8 STR X8, [X20 + 0x40]
	0x03A522BC ADD X8, X31, 0x650
	0x03A522C0 MOV X1, X31
	0x03A522C4 STP V1, V0, [X20 + 0x20]
	0x03A522C8 BL 0x3C4B258
	0x03A522CC LDR V0, [X31 + 0x65]
	0x03A522D0 LDR V1, [X31 + 0x66]
	0x03A522D4 LDR X8, [X31 + 0x670]
	0x03A522D8 STR V0, [X31 + 0x5F]
	0x03A522DC STR V1, [X31 + 0x60]
	0x03A522E0 STR X8, [X31 + 0x610]
	0x03A522E4 LDR W8, [X20 + 0x18]
	0x03A522E8 CMP W8, 0x1
	0x03A522EC B.LS 0x3A52B94
	0x03A522F0 LDR X8, [X31 + 0x610]
	0x03A522F4 LDR V0, [X31 + 0x60]
	0x03A522F8 LDR V1, [X31 + 0x5F]
	0x03A522FC MOV W0, W31
	0x03A52300 STR X8, [X20 + 0x68]
	0x03A52304 ADD X8, X31, 0x650
	0x03A52308 MOV X1, X31
	0x03A5230C STUR V0, [X20 + 0x58]
	0x03A52310 STUR V1, [X20 + 0x48]
	0x03A52314 BL 0x3C4B258
	0x03A52318 LDR V0, [X31 + 0x65]
	0x03A5231C LDR V1, [X31 + 0x66]
	0x03A52320 LDR X8, [X31 + 0x670]
	0x03A52324 STR V0, [X31 + 0x5C]
	0x03A52328 STR V1, [X31 + 0x5D]
	0x03A5232C STR X8, [X31 + 0x5E0]
	0x03A52330 LDR W8, [X20 + 0x18]
	0x03A52334 CMP W8, 0x2
	0x03A52338 B.LS 0x3A52B94
	0x03A5233C LDR X8, [X31 + 0x5E0]
	0x03A52340 LDR V0, [X31 + 0x5D]
	0x03A52344 LDR V1, [X31 + 0x5C]
	0x03A52348 MOV W0, W31
	0x03A5234C STR X8, [X20 + 0x90]
	0x03A52350 ADD X8, X31, 0x650
	0x03A52354 MOV X1, X31
	0x03A52358 STP V1, V0, [X20 + 0x70]
	0x03A5235C BL 0x3C4B258
	0x03A52360 LDR V0, [X31 + 0x65]
	0x03A52364 LDR V1, [X31 + 0x66]
	0x03A52368 LDR X8, [X31 + 0x670]
	0x03A5236C STR V0, [X31 + 0x59]
	0x03A52370 STR V1, [X31 + 0x5A]
	0x03A52374 STR X8, [X31 + 0x5B0]
	0x03A52378 LDR W8, [X20 + 0x18]
	0x03A5237C CMP W8, 0x3
	0x03A52380 B.LS 0x3A52B94
	0x03A52384 LDR X8, [X31 + 0x5B0]
	0x03A52388 LDR V0, [X31 + 0x5A]
	0x03A5238C LDR V1, [X31 + 0x59]
	0x03A52390 STR X8, [X20 + 0xB8]
	0x03A52394 STUR V0, [X20 + 0xA8]
	0x03A52398 STUR V1, [X20 + 0x98]
	0x03A5239C LDR W8, [X19 + 0x18]
	0x03A523A0 CMP W8, 0x4
	0x03A523A4 B.LS 0x3A52B94
	0x03A523A8 STR X20, [X19 + 0x40]
	0x03A523AC LDR X0, [X22]
	0x03A523B0 MOVZ W1, 0x5
	0x03A523B4 BL 0x1C16D6C
	0x03A523B8 MOV X20, X0
	0x03A523BC ADD X8, X31, 0x560
	0x03A523C0 MOV W0, W31
	0x03A523C4 MOV X1, X31
	0x03A523C8 BL 0x3C4B258
	0x03A523CC LDR V0, [X31 + 0x56]
	0x03A523D0 LDR V1, [X31 + 0x57]
	0x03A523D4 LDR X8, [X31 + 0x580]
	0x03A523D8 STR V0, [X31 + 0x65]
	0x03A523DC STR V1, [X31 + 0x66]
	0x03A523E0 STR X8, [X31 + 0x670]
	0x03A523E4 CBZ X20, 0x3A52B98
	0x03A523E8 LDR V0, [X31 + 0x65]
	0x03A523EC LDR V1, [X31 + 0x66]
	0x03A523F0 LDR X8, [X31 + 0x670]
	0x03A523F4 STR V0, [X31 + 0x53]
	0x03A523F8 STR V1, [X31 + 0x54]
	0x03A523FC STR X8, [X31 + 0x550]
	0x03A52400 LDR W8, [X20 + 0x18]
	0x03A52404 CBZ W8, 0x3A52B94
	0x03A52408 LDR X8, [X31 + 0x550]
	0x03A5240C LDR V0, [X31 + 0x54]
	0x03A52410 LDR V1, [X31 + 0x53]
	0x03A52414 MOV W0, W31
	0x03A52418 STR X8, [X20 + 0x40]
	0x03A5241C ADD X8, X31, 0x560
	0x03A52420 MOV X1, X31
	0x03A52424 STP V1, V0, [X20 + 0x20]
	0x03A52428 BL 0x3C4B258
	0x03A5242C LDR V0, [X31 + 0x56]
	0x03A52430 LDR V1, [X31 + 0x57]
	0x03A52434 LDR X8, [X31 + 0x580]
	0x03A52438 STR V0, [X31 + 0x50]
	0x03A5243C STR V1, [X31 + 0x51]
	0x03A52440 STR X8, [X31 + 0x520]
	0x03A52444 LDR W8, [X20 + 0x18]
	0x03A52448 CMP W8, 0x1
	0x03A5244C B.LS 0x3A52B94
	0x03A52450 LDR X8, [X31 + 0x520]
	0x03A52454 LDR V0, [X31 + 0x51]
	0x03A52458 LDR V1, [X31 + 0x50]
	0x03A5245C MOV W0, W31
	0x03A52460 STR X8, [X20 + 0x68]
	0x03A52464 ADD X8, X31, 0x560
	0x03A52468 MOV X1, X31
	0x03A5246C STUR V0, [X20 + 0x58]
	0x03A52470 STUR V1, [X20 + 0x48]
	0x03A52474 BL 0x3C4B258
	0x03A52478 LDR V0, [X31 + 0x56]
	0x03A5247C LDR V1, [X31 + 0x57]
	0x03A52480 LDR X8, [X31 + 0x580]
	0x03A52484 STR V0, [X31 + 0x4D]
	0x03A52488 STR V1, [X31 + 0x4E]
	0x03A5248C STR X8, [X31 + 0x4F0]
	0x03A52490 LDR W8, [X20 + 0x18]
	0x03A52494 CMP W8, 0x2
	0x03A52498 B.LS 0x3A52B94
	0x03A5249C LDR X8, [X31 + 0x4F0]
	0x03A524A0 LDR V0, [X31 + 0x4E]
	0x03A524A4 LDR V1, [X31 + 0x4D]
	0x03A524A8 MOV W0, W31
	0x03A524AC STR X8, [X20 + 0x90]
	0x03A524B0 ADD X8, X31, 0x560
	0x03A524B4 MOV X1, X31
	0x03A524B8 STP V1, V0, [X20 + 0x70]
	0x03A524BC BL 0x3C4B258
	0x03A524C0 LDR V0, [X31 + 0x56]
	0x03A524C4 LDR V1, [X31 + 0x57]
	0x03A524C8 LDR X8, [X31 + 0x580]
	0x03A524CC STR V0, [X31 + 0x4A]
	0x03A524D0 STR V1, [X31 + 0x4B]
	0x03A524D4 STR X8, [X31 + 0x4C0]
	0x03A524D8 LDR W8, [X20 + 0x18]
	0x03A524DC CMP W8, 0x3
	0x03A524E0 B.LS 0x3A52B94
	0x03A524E4 LDR X8, [X31 + 0x4C0]
	0x03A524E8 LDR V0, [X31 + 0x4B]
	0x03A524EC LDR V1, [X31 + 0x4A]
	0x03A524F0 MOV W0, W31
	0x03A524F4 STR X8, [X20 + 0xB8]
	0x03A524F8 ADD X8, X31, 0x560
	0x03A524FC MOV X1, X31
	0x03A52500 STUR V0, [X20 + 0xA8]
	0x03A52504 STUR V1, [X20 + 0x98]
	0x03A52508 BL 0x3C4B258
	0x03A5250C LDR V0, [X31 + 0x56]
	0x03A52510 LDR V1, [X31 + 0x57]
	0x03A52514 LDR X8, [X31 + 0x580]
	0x03A52518 STR V0, [X31 + 0x47]
	0x03A5251C STR V1, [X31 + 0x48]
	0x03A52520 STR X8, [X31 + 0x490]
	0x03A52524 LDR W8, [X20 + 0x18]
	0x03A52528 CMP W8, 0x4
	0x03A5252C B.LS 0x3A52B94
	0x03A52530 LDR X8, [X31 + 0x490]
	0x03A52534 LDR V0, [X31 + 0x48]
	0x03A52538 LDR V1, [X31 + 0x47]
	0x03A5253C STR X8, [X20 + 0xE0]
	0x03A52540 STP V1, V0, [X20 + 0xC0]
	0x03A52544 LDR W8, [X19 + 0x18]
	0x03A52548 CMP W8, 0x5
	0x03A5254C B.LS 0x3A52B94
	0x03A52550 STR X20, [X19 + 0x48]
	0x03A52554 LDR X0, [X22]
	0x03A52558 MOVZ W1, 0x6
	0x03A5255C BL 0x1C16D6C
	0x03A52560 MOV X20, X0
	0x03A52564 ADD X8, X31, 0x440
	0x03A52568 MOV W0, W31
	0x03A5256C MOV X1, X31
	0x03A52570 BL 0x3C4B258
	0x03A52574 LDR V0, [X31 + 0x44]
	0x03A52578 LDR V1, [X31 + 0x45]
	0x03A5257C LDR X8, [X31 + 0x460]
	0x03A52580 STR V0, [X31 + 0x56]
	0x03A52584 STR V1, [X31 + 0x57]
	0x03A52588 STR X8, [X31 + 0x580]
	0x03A5258C CBZ X20, 0x3A52B98
	0x03A52590 LDR V0, [X31 + 0x56]
	0x03A52594 LDR V1, [X31 + 0x57]
	0x03A52598 LDR X8, [X31 + 0x580]
	0x03A5259C STR V0, [X31 + 0x41]
	0x03A525A0 STR V1, [X31 + 0x42]
	0x03A525A4 STR X8, [X31 + 0x430]
	0x03A525A8 LDR W8, [X20 + 0x18]
	0x03A525AC CBZ W8, 0x3A52B94
	0x03A525B0 LDR X8, [X31 + 0x430]
	0x03A525B4 LDR V0, [X31 + 0x42]
	0x03A525B8 LDR V1, [X31 + 0x41]
	0x03A525BC MOV W0, W31
	0x03A525C0 STR X8, [X20 + 0x40]
	0x03A525C4 ADD X8, X31, 0x440
	0x03A525C8 MOV X1, X31
	0x03A525CC STP V1, V0, [X20 + 0x20]

ISIL:
	001 Subtract X31, X31, 416
	002 Move [X31+288], D11
	003 Move [X31+296], D10
	004 Move [X31+304], D9
	005 Move [X31+312], D8
	006 Move [X31+320], X29
	007 Move [X31+328], X30
	008 Move [X31+336], X28
	009 Move [X31+344], X27
	010 Move [X31+352], X26
	011 Move [X31+360], X25
	012 Move [X31+368], X24
	013 Move [X31+376], X23
	014 Move [X31+384], X22
	015 Move [X31+392], X21
	016 Move [X31+400], X20
	017 Move [X31+408], X19
	018 Move X23, 0x991000
	019 Move X26, 0x703000
	020 Move W8, [X23+436]
	021 Move X26, [X26+2248]
	022 Move V8, V3
	023 Move V9, V2
	024 Move V10, V1
	025 Move V11, V0
	026 Move W19, W3
	027 Move X22, X2
	028 Move X20, X1
	029 Move X21, X0
	030 Move TEMP, X8
	031 And TEMP, TEMP, 1
	032 Compare TEMP, 1
	033 JumpIfEqual {42}
	034 Move X0, 0x6A2000
	035 Move X0, [X0+1432]
	036 Call 0x1C17CF4
	037 Move X0, 0x703000
	038 Move X0, [X0+2248]
	039 Call 0x1C17CF4
	040 Move W8, 1
	041 Move [X23+436], W8
	042 Move X0, [X26]
	043 Add X23, X31, 200
	044 Move W8, [X0+224]
	045 Compare W8, 0
	046 JumpIfNotEqual {49}
	047 Call 0x1C17DFC
	048 Move X0, [X26]
	049 Move X8, [X0+184]
	050 Move X0, X20
	051 Move X1, X31
	052 Move X25, [X8+24]
	053 Add X8, X31, 200
	054 Call RTHandle.op_Implicit, X0
	055 Move V0, [X23]
	056 Move V1, [X23+16]
	057 Move X8, [X31+232]
	058 Move [X31+240], V0
	059 Move [X31+248], V1
	060 Move [X31+272], X8
	061 Compare X25, 0
	062 JumpIfEqual {309}
	063 Move V0, [X31+240]
	064 Move V1, [X31+256]
	065 Move X8, [X31+272]
	066 Move [X31+160], V0
	067 Move [X31+168], V1
	068 Move [X31+192], X8
	069 Move W8, [X25+24]
	070 Compare W8, 0
	071 JumpIfEqual {310}
	072 Move X8, [X31+192]
	073 Move V0, [X31+160]
	074 Move V1, [X31+176]
	075 Move X27, 0x6A2000
	076 Move X27, [X27+1432]
	077 Move W24, 1
	078 Move [X25+64], X8
	079 Move [X25+32], V0
	080 Move [X25+40], V1
	081 Move W25, 72
	082 Move X0, [X26]
	083 Move W8, [X0+224]
	084 Compare W8, 0
	085 JumpIfNotEqual {88}
	086 Call 0x1C17DFC
	087 Move X0, [X26]
	088 Move X8, [X0+184]
	089 Move X9, [X8+24]
	090 Compare X9, 0
	091 JumpIfEqual {309}
	092 Move W10, [X0+224]
	093 NotImplemented "Instruction LDRSW not yet implemented."
	094 Compare W10, 0
	095 JumpIfNotEqual {99}
	096 Call 0x1C17DFC
	097 Move X0, [X26]
	098 Move X8, [X0+184]
	099 NotImplemented "Instruction CMP not yet implemented."
	100 Move X28, [X8+24]
	101 Add X8, X31, 200
	102 Move W0, W31
	103 Move X1, X31
	104 Call RenderTargetIdentifier.op_Implicit, X0
	105 Move V0, [X23]
	106 Move V1, [X23+16]
	107 Move X8, [X31+232]
	108 Move [X31+240], V0
	109 Move [X31+248], V1
	110 Move [X31+272], X8
	111 Compare X28, 0
	112 JumpIfEqual {309}
	113 Move V0, [X31+240]
	114 Move V1, [X31+256]
	115 Move X8, [X31+272]
	116 Move [X31+112], V0
	117 Move [X31+120], V1
	118 Move [X31+144], X8
	119 Move W8, [X28+24]
	120 NotImplemented "Instruction CMP not yet implemented."
	121 Move X8, [X31+144]
	122 Move V0, [X31+112]
	123 Move V1, [X31+128]
	124 Add X9, X28, X25
	125 Add X24, X24, 1
	126 Add X25, X25, 40
	127 Move [X9+32], X8
	128 Move [X9], V0
	129 Move [X9+8], V1
	130 Move X9, [X8+72]
	131 Compare X9, 0
	132 JumpIfEqual {309}
	133 Move W10, [X9+24]
	134 Compare W10, 0
	135 JumpIfEqual {310}
	136 Move [X9+32], W31
	137 Move [X8+80], W31
	138 Move W24, 9
	139 Move W8, [X0+224]
	140 Compare W8, 0
	141 JumpIfNotEqual {144}
	142 Call 0x1C17DFC
	143 Move X0, [X26]
	144 Move X8, [X0+184]
	145 Move X8, [X8+72]
	146 Compare X8, 0
	147 JumpIfEqual {309}
	148 NotImplemented "Instruction LDRSW not yet implemented."
	149 Subtract X25, X24, 8
	150 NotImplemented "Instruction CMP not yet implemented."
	151 Move W8, [X0+224]
	152 Compare W8, 0
	153 JumpIfNotEqual {156}
	154 Call 0x1C17DFC
	155 Move X0, [X26]
	156 Move X8, [X0+184]
	157 Move X8, [X8+72]
	158 Compare X8, 0
	159 JumpIfEqual {309}
	160 Move W9, [X8+24]
	161 NotImplemented "Instruction CMP not yet implemented."
	162 Move [X8], W31
	163 Add X24, X24, 1
	164 Add X8, X31, 200
	165 Move X0, X22
	166 Move X1, X31
	167 Call RTHandle.op_Implicit, X0
	168 Move V0, [X23]
	169 Move V1, [X23+16]
	170 Move X8, [X31+232]
	171 Move X0, [X26]
	172 Move [X31+240], V0
	173 Move [X31+248], V1
	174 Move [X31+272], X8
	175 Move W8, [X0+224]
	176 Compare W8, 0
	177 JumpIfNotEqual {180}
	178 Call 0x1C17DFC
	179 Move X0, [X26]
	180 Move X8, [X0+184]
	181 Move X9, [X31+272]
	182 Move V1, [X31+240]
	183 Move V0, [X31+256]
	184 And W31, W19, 6
	185 Move [X8+64], X9
	186 Move [X8+32], V1
	187 Move [X8+40], V0
	188 NotImplemented "Instruction CSET not yet implemented."
	189 Compare X20, 0
	190 JumpIfEqual {309}
	191 Move X0, [X27]
	192 Move X25, [X20+24]
	193 Move W24, W19
	194 ShiftRight W24, 31
	195 And W24, W24, 0
	196 Move W23, W8
	197 ShiftRight W23, 31
	198 And W23, W23, 0x3FFFFFFF
	199 Move W9, [X0+224]
	200 Compare W9, 0
	201 JumpIfNotEqual {203}
	202 Call 0x1C17DFC
	203 Move X0, X25
	204 Move X1, X31
	205 Move X2, X31
	206 Call Object.op_Equality, X0, X1
	207 Move TEMP, X0
	208 And TEMP, TEMP, 1
	209 Compare TEMP, 1
	210 JumpIfNotEqual {273}
	211 Compare X22, 0
	212 JumpIfEqual {309}
	213 Move X0, [X27]
	214 Move X25, [X22+24]
	215 Move W8, [X0+224]
	216 Compare W8, 0
	217 JumpIfNotEqual {219}
	218 Call 0x1C17DFC
	219 Move X0, X25
	220 Move X1, X31
	221 Move X2, X31
	222 Call Object.op_Equality, X0, X1
	223 Move TEMP, X0
	224 And TEMP, TEMP, 1
	225 Compare TEMP, 1
	226 JumpIfNotEqual {273}
	227 Move X8, [X22+72]
	228 NotImplemented "Instruction LDUR not yet implemented."
	229 NotImplemented "Instruction LDUR not yet implemented."
	230 Move X0, [X26]
	231 Move [X31+272], X8
	232 Move [X31+240], V1
	233 Move [X31+248], V0
	234 Move W8, [X0+224]
	235 Compare W8, 0
	236 JumpIfNotEqual {239}
	237 Call 0x1C17DFC
	238 Move X0, [X26]
	239 Move X8, [X0+184]
	240 Move X8, [X8+16]
	241 Compare X8, 0
	242 JumpIfEqual {309}
	243 NotImplemented "Instruction LDUR not yet implemented."
	244 NotImplemented "Instruction LDUR not yet implemented."
	245 Move X8, [X8+72]
	246 Move V2, [X31+240]
	247 Move V3, [X31+256]
	248 Move X9, [X31+272]
	249 Add X0, X31, 64
	250 Add X1, X31, 16
	251 Move X2, X31
	252 Move [X31+48], X8
	253 Move [X31+16], V0
	254 Move [X31+24], V1
	255 Move [X31+64], V2
	256 Move [X31+72], V3
	257 Move [X31+96], X9
	258 Call RenderTargetIdentifier.op_Equality, X0, X1
	259 Move TEMP, X0
	260 And TEMP, TEMP, 1
	261 Compare TEMP, 1
	262 JumpIfNotEqual {273}
	263 Move X0, [X26]
	264 Move W8, [X0+224]
	265 Compare W8, 0
	266 JumpIfNotEqual {268}
	267 Call 0x1C17DFC
	268 Move X0, X21
	269 Move X1, X20
	270 Move W2, W24
	271 Move W3, W31
	272 Move X4, X20
	273 Move X0, [X26]
	274 Move W8, [X0+224]
	275 Compare W8, 0
	276 JumpIfNotEqual {278}
	277 Call 0x1C17DFC
	278 Move X0, X21
	279 Move X1, X20
	280 Move W2, W24
	281 Move W3, W31
	282 Move X4, X22
	283 Move W5, W23
	284 Move W6, W31
	285 Move W7, W19
	286 Move V0, V11
	287 Move V1, V10
	288 Move V2, V9
	289 Move V3, V8
	290 Call ScriptableRenderer.SetRenderTarget, X0, X1, X2, X3, X4, X5, X6, X7, X8
	291 Move X20, [X31+400]
	292 Move X19, [X31+408]
	293 Move X22, [X31+384]
	294 Move X21, [X31+392]
	295 Move X24, [X31+368]
	296 Move X23, [X31+376]
	297 Move X26, [X31+352]
	298 Move X25, [X31+360]
	299 Move X28, [X31+336]
	300 Move X27, [X31+344]
	301 Move X29, [X31+320]
	302 Move X30, [X31+328]
	303 Move D9, [X31+304]
	304 Move D8, [X31+312]
	305 Move D11, [X31+288]
	306 Move D10, [X31+296]
	307 Add X31, X31, 416
	308 Return 
	309 Call 0x1C17F20
	310 Call 0x1C17F28

Method: System.Void SetRenderTarget(UnityEngine.Rendering.CommandBuffer cmd, UnityEngine.Rendering.RenderTargetIdentifier colorAttachment, UnityEngine.Rendering.RenderTargetIdentifier depthAttachment, UnityEngine.Rendering.ClearFlag clearFlag, UnityEngine.Color clearColor, UnityEngine.Rendering.RenderBufferStoreAction colorStoreAction, UnityEngine.Rendering.RenderBufferStoreAction depthStoreAction)

Disassembly:
	0x03A51D10 MOV X19, X0
	0x03A51D14 ADD X8, X31, 0x9B0
	0x03A51D18 MOV W0, W31
	0x03A51D1C MOV X1, X31
	0x03A51D20 BL 0x3C4B258
	0x03A51D24 LDR V0, [X31 + 0x9B]
	0x03A51D28 LDR V1, [X31 + 0x9C]
	0x03A51D2C LDR X8, [X31 + 0x9D0]
	0x03A51D30 STR V0, [X31 + 0xA1]
	0x03A51D34 STR V1, [X31 + 0xA2]
	0x03A51D38 STR X8, [X31 + 0xA30]
	0x03A51D3C CBZ X19, 0x3A52B98
	0x03A51D40 LDR V0, [X31 + 0xA1]
	0x03A51D44 LDR V1, [X31 + 0xA2]
	0x03A51D48 LDR X8, [X31 + 0xA30]
	0x03A51D4C STR V0, [X31 + 0x98]
	0x03A51D50 STR V1, [X31 + 0x99]
	0x03A51D54 STR X8, [X31 + 0x9A0]
	0x03A51D58 LDR W8, [X19 + 0x18]
	0x03A51D5C CBZ W8, 0x3A52B94
	0x03A51D60 LDR X8, [X31 + 0x9A0]
	0x03A51D64 LDR V0, [X31 + 0x99]
	0x03A51D68 LDR V1, [X31 + 0x98]
	0x03A51D6C MOV W0, W31
	0x03A51D70 STR X8, [X19 + 0x40]
	0x03A51D74 ADD X8, X31, 0x9B0
	0x03A51D78 MOV X1, X31
	0x03A51D7C STP V1, V0, [X19 + 0x20]
	0x03A51D80 BL 0x3C4B258
	0x03A51D84 LDR V0, [X31 + 0x9B]
	0x03A51D88 LDR V1, [X31 + 0x9C]
	0x03A51D8C LDR X8, [X31 + 0x9D0]
	0x03A51D90 STR V0, [X31 + 0x95]
	0x03A51D94 STR V1, [X31 + 0x96]
	0x03A51D98 STR X8, [X31 + 0x970]
	0x03A51D9C LDR W8, [X19 + 0x18]
	0x03A51DA0 CMP W8, 0x1
	0x03A51DA4 B.LS 0x3A52B94
	0x03A51DA8 LDR X8, [X31 + 0x970]
	0x03A51DAC LDR V0, [X31 + 0x96]
	0x03A51DB0 LDR V1, [X31 + 0x95]
	0x03A51DB4 MOV W0, W31
	0x03A51DB8 STR X8, [X19 + 0x68]
	0x03A51DBC ADD X8, X31, 0x9B0
	0x03A51DC0 MOV X1, X31
	0x03A51DC4 STUR V0, [X19 + 0x58]
	0x03A51DC8 STUR V1, [X19 + 0x48]
	0x03A51DCC BL 0x3C4B258
	0x03A51DD0 LDR V0, [X31 + 0x9B]
	0x03A51DD4 LDR V1, [X31 + 0x9C]
	0x03A51DD8 LDR X8, [X31 + 0x9D0]
	0x03A51DDC STR V0, [X31 + 0x92]
	0x03A51DE0 STR V1, [X31 + 0x93]
	0x03A51DE4 STR X8, [X31 + 0x940]
	0x03A51DE8 LDR W8, [X19 + 0x18]
	0x03A51DEC CMP W8, 0x2
	0x03A51DF0 B.LS 0x3A52B94
	0x03A51DF4 LDR X8, [X31 + 0x940]
	0x03A51DF8 LDR V0, [X31 + 0x93]
	0x03A51DFC LDR V1, [X31 + 0x92]
	0x03A51E00 MOV W0, W31
	0x03A51E04 STR X8, [X19 + 0x90]
	0x03A51E08 ADD X8, X31, 0x9B0
	0x03A51E0C MOV X1, X31
	0x03A51E10 STP V1, V0, [X19 + 0x70]
	0x03A51E14 BL 0x3C4B258
	0x03A51E18 LDR V0, [X31 + 0x9B]
	0x03A51E1C LDR V1, [X31 + 0x9C]
	0x03A51E20 LDR X8, [X31 + 0x9D0]
	0x03A51E24 STR V0, [X31 + 0x8F]
	0x03A51E28 STR V1, [X31 + 0x90]
	0x03A51E2C STR X8, [X31 + 0x910]
	0x03A51E30 LDR W8, [X19 + 0x18]
	0x03A51E34 CMP W8, 0x3
	0x03A51E38 B.LS 0x3A52B94
	0x03A51E3C LDR X8, [X31 + 0x910]
	0x03A51E40 LDR V0, [X31 + 0x90]
	0x03A51E44 LDR V1, [X31 + 0x8F]
	0x03A51E48 MOV W0, W31
	0x03A51E4C STR X8, [X19 + 0xB8]
	0x03A51E50 ADD X8, X31, 0x9B0
	0x03A51E54 MOV X1, X31
	0x03A51E58 STUR V0, [X19 + 0xA8]
	0x03A51E5C STUR V1, [X19 + 0x98]
	0x03A51E60 BL 0x3C4B258
	0x03A51E64 LDR V0, [X31 + 0x9B]
	0x03A51E68 LDR V1, [X31 + 0x9C]
	0x03A51E6C LDR X8, [X31 + 0x9D0]
	0x03A51E70 STR V0, [X31 + 0x8C]
	0x03A51E74 STR V1, [X31 + 0x8D]
	0x03A51E78 STR X8, [X31 + 0x8E0]
	0x03A51E7C LDR W8, [X19 + 0x18]
	0x03A51E80 CMP W8, 0x4
	0x03A51E84 B.LS 0x3A52B94
	0x03A51E88 LDR X8, [X31 + 0x8E0]
	0x03A51E8C LDR V0, [X31 + 0x8D]
	0x03A51E90 LDR V1, [X31 + 0x8C]
	0x03A51E94 MOV W0, W31
	0x03A51E98 STR X8, [X19 + 0xE0]
	0x03A51E9C ADD X8, X31, 0x9B0
	0x03A51EA0 MOV X1, X31
	0x03A51EA4 STP V1, V0, [X19 + 0xC0]
	0x03A51EA8 BL 0x3C4B258
	0x03A51EAC LDR V0, [X31 + 0x9B]
	0x03A51EB0 LDR V1, [X31 + 0x9C]
	0x03A51EB4 LDR X8, [X31 + 0x9D0]
	0x03A51EB8 STR V0, [X31 + 0x89]
	0x03A51EBC STR V1, [X31 + 0x8A]
	0x03A51EC0 STR X8, [X31 + 0x8B0]
	0x03A51EC4 LDR W8, [X19 + 0x18]
	0x03A51EC8 CMP W8, 0x5
	0x03A51ECC B.LS 0x3A52B94
	0x03A51ED0 LDR X8, [X31 + 0x8B0]
	0x03A51ED4 LDR V0, [X31 + 0x8A]
	0x03A51ED8 LDR V1, [X31 + 0x89]
	0x03A51EDC MOV W0, W31
	0x03A51EE0 STR X8, [X19 + 0x108]
	0x03A51EE4 ADD X8, X31, 0x9B0
	0x03A51EE8 MOV X1, X31
	0x03A51EEC STUR V0, [X19 + 0xF8]
	0x03A51EF0 STUR V1, [X19 + 0xE8]
	0x03A51EF4 BL 0x3C4B258
	0x03A51EF8 LDR V0, [X31 + 0x9B]
	0x03A51EFC LDR V1, [X31 + 0x9C]
	0x03A51F00 LDR X8, [X31 + 0x9D0]
	0x03A51F04 STR V0, [X31 + 0x86]
	0x03A51F08 STR V1, [X31 + 0x87]
	0x03A51F0C STR X8, [X31 + 0x880]
	0x03A51F10 LDR W8, [X19 + 0x18]
	0x03A51F14 CMP W8, 0x6
	0x03A51F18 B.LS 0x3A52B94
	0x03A51F1C LDR X8, [X31 + 0x880]
	0x03A51F20 LDR V0, [X31 + 0x87]
	0x03A51F24 LDR V1, [X31 + 0x86]
	0x03A51F28 MOV W0, W31
	0x03A51F2C STR X8, [X19 + 0x130]
	0x03A51F30 ADD X8, X31, 0x9B0
	0x03A51F34 MOV X1, X31
	0x03A51F38 STP V1, V0, [X19 + 0x110]
	0x03A51F3C BL 0x3C4B258
	0x03A51F40 LDR V0, [X31 + 0x9B]
	0x03A51F44 LDR V1, [X31 + 0x9C]
	0x03A51F48 LDR X8, [X31 + 0x9D0]
	0x03A51F4C STR V0, [X31 + 0x83]
	0x03A51F50 STR V1, [X31 + 0x84]
	0x03A51F54 STR X8, [X31 + 0x850]
	0x03A51F58 LDR W8, [X19 + 0x18]
	0x03A51F5C CMP W8, 0x7
	0x03A51F60 B.LS 0x3A52B94
	0x03A51F64 LDR X8, [X31 + 0x850]
	0x03A51F68 LDR V0, [X31 + 0x83]
	0x03A51F6C LDR V1, [X31 + 0x84]
	0x03A51F70 ADD X9, X19, 0x138
	0x03A51F74 ADD X10, X19, 0x148
	0x03A51F78 STR X8, [X19 + 0x158]
	0x03A51F7C STR V1, [X10]
	0x03A51F80 STR V0, [X9]
	0x03A51F84 LDR X8, [X21]
	0x03A51F88 ADRP X9, 0x704000
	0x03A51F8C MOVZ W1, 0x8
	0x03A51F90 LDR X8, [X8 + 0xB8]
	0x03A51F94 LDR X9, [X9 + 0xBF0]
	0x03A51F98 STR X19, [X8 + 0x18]
	0x03A51F9C LDR X0, [X9]
	0x03A51FA0 ADRP X19, 0x704000
	0x03A51FA4 LDR X19, [X19 + 0xFC0]
	0x03A51FA8 BL 0x1C16D6C
	0x03A51FAC LDR X8, [X21]
	0x03A51FB0 MOVZ W1, 0x9
	0x03A51FB4 LDR X8, [X8 + 0xB8]
	0x03A51FB8 STR X0, [X8 + 0x48]
	0x03A51FBC STR W31, [X8 + 0x50]
	0x03A51FC0 LDR X0, [X19]
	0x03A51FC4 BL 0x1C16D6C
	0x03A51FC8 LDR X8, [X22]
	0x03A51FCC MOV X19, X0
	0x03A51FD0 MOV W1, W31
	0x03A51FD4 MOV X0, X8
	0x03A51FD8 BL 0x1C16D6C
	0x03A51FDC CBZ X19, 0x3A52B98
	0x03A51FE0 LDR W8, [X19 + 0x18]
	0x03A51FE4 CBZ W8, 0x3A52B94
	0x03A51FE8 STR X0, [X19 + 0x20]
	0x03A51FEC LDR X0, [X22]
	0x03A51FF0 MOVZ W1, 0x1
	0x03A51FF4 BL 0x1C16D6C
	0x03A51FF8 MOV X20, X0
	0x03A51FFC ADD X8, X31, 0x800
	0x03A52000 MOV W0, W31
	0x03A52004 MOV X1, X31
	0x03A52008 BL 0x3C4B258
	0x03A5200C LDR V0, [X31 + 0x80]
	0x03A52010 LDR V1, [X31 + 0x81]
	0x03A52014 LDR X8, [X31 + 0x820]
	0x03A52018 STR V0, [X31 + 0x9B]

ISIL:
	001 Subtract X31, X31, 432
	002 Move [X31+304], D11
	003 Move [X31+312], D10
	004 Move [X31+320], D9
	005 Move [X31+328], D8
	006 Move [X31+336], X29
	007 Move [X31+344], X30
	008 Move [X31+352], X28
	009 Move [X31+360], X27
	010 Move [X31+368], X26
	011 Move [X31+376], X25
	012 Move [X31+384], X24
	013 Move [X31+392], X23
	014 Move [X31+400], X22
	015 Move [X31+408], X21
	016 Move [X31+416], X20
	017 Move [X31+424], X19
	018 Move X26, 0x992000
	019 Move X25, 0x704000
	020 Move W8, [X26+437]
	021 Move X25, [X25+2248]
	022 Move W21, W5
	023 Move W22, W4
	024 Move V8, V3
	025 Move V9, V2
	026 Move V10, V1
	027 Move V11, V0
	028 Move W19, W3
	029 Move X23, X2
	030 Move X24, X1
	031 Move X20, X0
	032 Move TEMP, X8
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfEqual {41}
	036 Move X0, 0x704000
	037 Move X0, [X0+2248]
	038 Call 0x1C17CF4
	039 Move W8, 1
	040 Move [X26+437], W8
	041 Move X0, [X25]
	042 Move W8, [X0+224]
	043 Compare W8, 0
	044 JumpIfNotEqual {47}
	045 Call 0x1C17DFC
	046 Move X0, [X25]
	047 Move X8, [X0+184]
	048 Move X9, [X24+32]
	049 Move V0, [X24]
	050 Move V1, [X24+16]
	051 Move X8, [X8+24]
	052 Move [X31+288], X9
	053 Move [X31+256], V0
	054 Move [X31+264], V1
	055 Compare X8, 0
	056 JumpIfEqual {253}
	057 Move V0, [X31+256]
	058 Move V1, [X31+272]
	059 Move X9, [X31+288]
	060 Move [X31+208], V0
	061 Move [X31+216], V1
	062 Move [X31+240], X9
	063 Move W9, [X8+24]
	064 Compare W9, 0
	065 JumpIfEqual {254}
	066 Move X9, [X31+240]
	067 Move V1, [X31+208]
	068 Move V0, [X31+224]
	069 Move W26, 1
	070 Move W27, 72
	071 Move [X8+64], X9
	072 Move [X8+32], V1
	073 Move [X8+40], V0
	074 Move X0, [X25]
	075 Move W8, [X0+224]
	076 Compare W8, 0
	077 JumpIfNotEqual {80}
	078 Call 0x1C17DFC
	079 Move X0, [X25]
	080 Move X8, [X0+184]
	081 Move X9, [X8+24]
	082 Compare X9, 0
	083 JumpIfEqual {253}
	084 Move W10, [X0+224]
	085 NotImplemented "Instruction LDRSW not yet implemented."
	086 Compare W10, 0
	087 JumpIfNotEqual {91}
	088 Call 0x1C17DFC
	089 Move X0, [X25]
	090 Move X8, [X0+184]
	091 NotImplemented "Instruction CMP not yet implemented."
	092 Move X28, [X8+24]
	093 Add X8, X31, 160
	094 Move W0, W31
	095 Move X1, X31
	096 Call RenderTargetIdentifier.op_Implicit, X0
	097 Move V0, [X31+160]
	098 Move V1, [X31+176]
	099 Move X8, [X31+192]
	100 Move [X31+256], V0
	101 Move [X31+264], V1
	102 Move [X31+288], X8
	103 Compare X28, 0
	104 JumpIfEqual {253}
	105 Move V0, [X31+256]
	106 Move V1, [X31+272]
	107 Move X8, [X31+288]
	108 Move [X31+112], V0
	109 Move [X31+120], V1
	110 Move [X31+144], X8
	111 Move W8, [X28+24]
	112 NotImplemented "Instruction CMP not yet implemented."
	113 Move X8, [X31+144]
	114 Move V0, [X31+112]
	115 Move V1, [X31+128]
	116 Add X9, X28, X27
	117 Add X26, X26, 1
	118 Add X27, X27, 40
	119 Move [X9+32], X8
	120 Move [X9], V0
	121 Move [X9+8], V1
	122 Move X9, [X8+72]
	123 Compare X9, 0
	124 JumpIfEqual {253}
	125 Move W10, [X9+24]
	126 Compare W10, 0
	127 JumpIfEqual {254}
	128 Move [X9+32], W22
	129 Move [X8+80], W21
	130 Move W26, 9
	131 Move W8, [X0+224]
	132 Compare W8, 0
	133 JumpIfNotEqual {136}
	134 Call 0x1C17DFC
	135 Move X0, [X25]
	136 Move X8, [X0+184]
	137 Move X9, [X8+72]
	138 Compare X9, 0
	139 JumpIfEqual {253}
	140 NotImplemented "Instruction LDRSW not yet implemented."
	141 Subtract X27, X26, 8
	142 NotImplemented "Instruction CMP not yet implemented."
	143 Move W8, [X0+224]
	144 Compare W8, 0
	145 JumpIfNotEqual {148}
	146 Call 0x1C17DFC
	147 Move X0, [X25]
	148 Move X8, [X0+184]
	149 Move X8, [X8+72]
	150 Compare X8, 0
	151 JumpIfEqual {253}
	152 Move W9, [X8+24]
	153 NotImplemented "Instruction CMP not yet implemented."
	154 Move [X8], W31
	155 Add X26, X26, 1
	156 Move X9, [X23+32]
	157 Move V1, [X23]
	158 Move V0, [X23+16]
	159 Move [X31+288], X9
	160 Move [X31+256], V1
	161 Move [X31+264], V0
	162 Move W9, [X0+224]
	163 Compare W9, 0
	164 JumpIfNotEqual {168}
	165 Call 0x1C17DFC
	166 Move X0, [X25]
	167 Move X8, [X0+184]
	168 Move X9, [X31+288]
	169 Move V1, [X31+256]
	170 Move V0, [X31+272]
	171 Move [X8+64], X9
	172 Move [X8+32], V1
	173 Move [X8+40], V0
	174 Move W8, [X0+224]
	175 Compare W8, 0
	176 JumpIfNotEqual {180}
	177 Call 0x1C17DFC
	178 Move X0, [X25]
	179 Move W8, [X0+224]
	180 Move X9, [X0+184]
	181 Move X10, [X24+32]
	182 Move V1, [X24]
	183 Move V0, [X24+16]
	184 Move W24, [X9+8]
	185 Move [X31+288], X10
	186 Move [X31+256], V1
	187 Move [X31+264], V0
	188 Move X9, [X23+32]
	189 Move V1, [X23]
	190 Move V0, [X23+16]
	191 Move [X31+192], X9
	192 Move [X31+160], V1
	193 Move [X31+168], V0
	194 Compare W8, 0
	195 JumpIfNotEqual {197}
	196 Call 0x1C17DFC
	197 Move V0, [X31+256]
	198 Move V1, [X31+272]
	199 NotImplemented "Instruction CMP not yet implemented."
	200 NotImplemented "Instruction CSET not yet implemented."
	201 NotImplemented "Instruction CMP not yet implemented."
	202 NotImplemented "Instruction CSET not yet implemented."
	203 NotImplemented "Instruction CMP not yet implemented."
	204 Move W8, W8
	205 ShiftRight W8, 31
	206 And W8, W8, 0x3FFFFFFF
	207 Move [X31+64], V0
	208 Move [X31+72], V1
	209 Move V0, [X31+160]
	210 Move V1, [X31+176]
	211 Move W9, W9
	212 ShiftRight W9, 31
	213 And W9, W9, 0x3FFFFFFF
	214 NotImplemented "Instruction CSEL not yet implemented."
	215 Move X8, [X31+288]
	216 NotImplemented "Instruction CSEL not yet implemented."
	217 Move X9, [X31+192]
	218 And W5, W19, 2
	219 Move W2, W19
	220 ShiftRight W2, 31
	221 And W2, W2, 0
	222 Move [X31+16], V0
	223 Move [X31+24], V1
	224 Add X1, X31, 64
	225 Add X4, X31, 16
	226 Move X0, X20
	227 Move W7, W19
	228 Move V0, V11
	229 Move V1, V10
	230 Move V2, V9
	231 Move V3, V8
	232 Move [X31+96], X8
	233 Move [X31+48], X9
	234 Call ScriptableRenderer.SetRenderTarget, X0, X1, X2, X3, X4, X5, X6, X7, X8
	235 Move X20, [X31+416]
	236 Move X19, [X31+424]
	237 Move X22, [X31+400]
	238 Move X21, [X31+408]
	239 Move X24, [X31+384]
	240 Move X23, [X31+392]
	241 Move X26, [X31+368]
	242 Move X25, [X31+376]
	243 Move X28, [X31+352]
	244 Move X27, [X31+360]
	245 Move X29, [X31+336]
	246 Move X30, [X31+344]
	247 Move D9, [X31+320]
	248 Move D8, [X31+328]
	249 Move D11, [X31+304]
	250 Move D10, [X31+312]
	251 Add X31, X31, 432
	252 Return 
	253 Call 0x1C17F20
	254 Call 0x1C17F28

Method: System.Void SetRenderTarget(UnityEngine.Rendering.CommandBuffer cmd, UnityEngine.Rendering.RTHandle colorAttachment, UnityEngine.Rendering.RTHandle depthAttachment, UnityEngine.Rendering.ClearFlag clearFlag, UnityEngine.Color clearColor, UnityEngine.Rendering.RenderBufferStoreAction colorStoreAction, UnityEngine.Rendering.RenderBufferStoreAction depthStoreAction)

Disassembly:
	0x03A51A08 BL 0x1C16DFC
	0x03A51A0C LDR X8, [X24]
	0x03A51A10 LDR X9, [X8 + 0xB8]
	0x03A51A14 STR X23, [X9 + 0x18]
	0x03A51A18 LDR X1, [X22 + 0x18]
	0x03A51A1C CMP W1, 0x1
	0x03A51A20 B.LT 0x3A51AC8
	0x03A51A24 MOV X23, X31
	0x03A51A28 ADD X25, X22, 0x20
	0x03A51A2C MOVZ W26, 0x20
	0x03A51A30 LDR W9, [X8 + 0xE0]
	0x03A51A34 CBNZ W9, 0x3A51A48
	0x03A51A38 MOV X0, X8
	0x03A51A3C BL 0x1C16DFC
	0x03A51A40 LDR X8, [X24]
	0x03A51A44 LDR X1, [X22 + 0x18]
	0x03A51A48 CMP W23, W1
	0x03A51A4C B.CS 0x3A51B74
	0x03A51A50 LDR X9, [X25, X23, LSL #3]
	0x03A51A54 CBZ X9, 0x3A51B78
	0x03A51A58 LDR X8, [X8 + 0xB8]
	0x03A51A5C LDUR V0, [X9 + 0x38]
	0x03A51A60 LDR X10, [X9 + 0x48]
	0x03A51A64 LDUR V1, [X9 + 0x28]
	0x03A51A68 LDR X8, [X8 + 0x18]
	0x03A51A6C STR X10, [X31 + 0x50]
	0x03A51A70 STP V1, V0, [X31 + 0x30]
	0x03A51A74 CBZ X8, 0x3A51B78
	0x03A51A78 LDP V0, V1, [X31 + 0x30]
	0x03A51A7C LDR X9, [X31 + 0x50]
	0x03A51A80 STP V0, V1, [X31]
	0x03A51A84 STR X9, [X31 + 0x20]
	0x03A51A88 LDR W9, [X8 + 0x18]
	0x03A51A8C CMP W23, W9
	0x03A51A90 B.CS 0x3A51B74
	0x03A51A94 LDR X9, [X31 + 0x20]
	0x03A51A98 LDP V1, V0, [X31]
	0x03A51A9C ADD X8, X8, X26
	0x03A51AA0 STR X9, [X8 + 0x20]
	0x03A51AA4 STP V1, V0, [X8]
	0x03A51AA8 LDR X1, [X22 + 0x18]
	0x03A51AAC ADD W8, W23, 0x1
	0x03A51AB0 CMP W8, W1
	0x03A51AB4 B.GE 0x3A51AC8
	0x03A51AB8 LDR X8, [X24]
	0x03A51ABC ADD X23, X23, 0x1
	0x03A51AC0 ADD X26, X26, 0x28
	0x03A51AC4 B 0x3A51A30
	0x03A51AC8 CBZ X20, 0x3A51B78
	0x03A51ACC LDR X8, [X20 + 0x48]
	0x03A51AD0 LDUR V0, [X20 + 0x38]
	0x03A51AD4 LDUR V1, [X20 + 0x28]
	0x03A51AD8 LDR X0, [X24]
	0x03A51ADC STR X8, [X31 + 0x50]
	0x03A51AE0 ADRP X22, 0x6CA000
	0x03A51AE4 STP V1, V0, [X31 + 0x30]
	0x03A51AE8 LDR W8, [X0 + 0xE0]
	0x03A51AEC LDR X22, [X22 + 0x8F8]
	0x03A51AF0 CBNZ W8, 0x3A51AFC
	0x03A51AF4 BL 0x1C16DFC
	0x03A51AF8 LDR X0, [X24]
	0x03A51AFC LDR X8, [X0 + 0xB8]
	0x03A51B00 LDR X9, [X31 + 0x50]
	0x03A51B04 LDP V1, V0, [X31 + 0x30]
	0x03A51B08 STR X9, [X8 + 0x40]
	0x03A51B0C STP V1, V0, [X8 + 0x20]
	0x03A51B10 LDR X8, [X22]
	0x03A51B14 LDR X9, [X0 + 0xB8]
	0x03A51B18 LDR W10, [X8 + 0xE0]
	0x03A51B1C LDR X22, [X9 + 0x18]
	0x03A51B20 CBNZ W10, 0x3A51B2C
	0x03A51B24 MOV X0, X8
	0x03A51B28 BL 0x1C16DFC
	0x03A51B2C MOV X0, X21
	0x03A51B30 MOV X1, X22
	0x03A51B34 MOV X2, X20
	0x03A51B38 MOV W3, W19
	0x03A51B3C MOV V0.16B, V11.16B
	0x03A51B40 MOV V1.16B, V10.16B
	0x03A51B44 MOV V2.16B, V9.16B
	0x03A51B48 MOV V3.16B, V8.16B
	0x03A51B4C LDP X20, X19, [X31 + 0xC0]
	0x03A51B50 LDP X22, X21, [X31 + 0xB0]
	0x03A51B54 LDP X24, X23, [X31 + 0xA0]
	0x03A51B58 LDP X26, X25, [X31 + 0x90]
	0x03A51B5C LDR X30, [X31 + 0x80]
	0x03A51B60 LDP D9, D8, [X31 + 0x70]
	0x03A51B64 LDP D11, D10, [X31 + 0x60]
	0x03A51B68 MOV X4, X31
	0x03A51B6C ADD X31, X31, 0xD0
	0x03A51B70 B 0x39E8224
	0x03A51B74 BL 0x1C16F28
	0x03A51B78 BL 0x1C16F20
	0x03A51B7C RET
	0x03A51B80 RET
	0x03A51B84 RET
	0x03A51B88 SUB X31, X31, 0x30
	0x03A51B8C STP X30, X21, [X31 + 0x10]
	0x03A51B90 STP X20, X19, [X31 + 0x20]
	0x03A51B94 ADRP X20, 0x991000
	0x03A51B98 STR X1, [X31 + 0x8]
	0x03A51B9C ADRP X21, 0x6FF000
	0x03A51BA0 LDRB W8, [X20 + 0x1BE]
	0x03A51BA4 LDR X21, [X21 + 0xC80]
	0x03A51BA8 MOV X19, X2
	0x03A51BAC TBNZ X8, 0x0, 0x3A51BC4
	0x03A51BB0 ADRP X0, 0x6FF000
	0x03A51BB4 LDR X0, [X0 + 0xC80]
	0x03A51BB8 BL 0x1C16CF4
	0x03A51BBC MOVZ W8, 0x1
	0x03A51BC0 STRB W8, [X20 + 0x1BE]
	0x03A51BC4 LDR X0, [X21]
	0x03A51BC8 LDR W8, [X0 + 0xE0]
	0x03A51BCC CBNZ W8, 0x3A51BD4
	0x03A51BD0 BL 0x1C16DFC
	0x03A51BD4 ADD X0, X31, 0x8
	0x03A51BD8 MOV X1, X19
	0x03A51BDC MOV X2, X31
	0x03A51BE0 BL 0x3C59314
	0x03A51BE4 LDP X20, X19, [X31 + 0x20]
	0x03A51BE8 LDP X30, X21, [X31 + 0x10]
	0x03A51BEC ADD X31, X31, 0x30
	0x03A51BF0 RET
	0x03A51BF4 STP X29, X30, [X31 - 0x30]!
	0x03A51BF8 STP X22, X21, [X31 + 0x10]
	0x03A51BFC STP X20, X19, [X31 + 0x20]
	0x03A51C00 SUB X31, X31, 0xA70
	0x03A51C04 ADRP X20, 0x991000
	0x03A51C08 ADRP X21, 0x703000
	0x03A51C0C ADRP X19, 0x6FF000
	0x03A51C10 LDRB W8, [X20 + 0x1C3]
	0x03A51C14 LDR X21, [X21 + 0x8C8]
	0x03A51C18 LDR X19, [X19 + 0x9B0]
	0x03A51C1C TBNZ X8, 0x0, 0x3A51C7C
	0x03A51C20 ADRP X0, 0x701000
	0x03A51C24 LDR X0, [X0 + 0x590]
	0x03A51C28 BL 0x1C16CF4
	0x03A51C2C ADRP X0, 0x6FF000
	0x03A51C30 LDR X0, [X0 + 0x9B0]
	0x03A51C34 BL 0x1C16CF4
	0x03A51C38 ADRP X0, 0x704000
	0x03A51C3C LDR X0, [X0 + 0xBF0]
	0x03A51C40 BL 0x1C16CF4
	0x03A51C44 ADRP X0, 0x704000
	0x03A51C48 LDR X0, [X0 + 0xFC0]
	0x03A51C4C BL 0x1C16CF4
	0x03A51C50 ADRP X0, 0x703000
	0x03A51C54 LDR X0, [X0 + 0xB18]
	0x03A51C58 BL 0x1C16CF4
	0x03A51C5C ADRP X0, 0x703000
	0x03A51C60 LDR X0, [X0 + 0x8C8]
	0x03A51C64 BL 0x1C16CF4
	0x03A51C68 ADRP X0, 0x6FD000
	0x03A51C6C LDR X0, [X0 + 0x48]
	0x03A51C70 BL 0x1C16CF4
	0x03A51C74 MOVZ W8, 0x1
	0x03A51C78 STRB W8, [X20 + 0x1C3]
	0x03A51C7C LDR X8, [X21]
	0x03A51C80 ADRP X22, 0x703000
	0x03A51C84 MOVZ W0, 0x2
	0x03A51C88 MOV X1, X31
	0x03A51C8C LDR X8, [X8 + 0xB8]
	0x03A51C90 STR X31, [X8]
	0x03A51C94 LDR X8, [X21]
	0x03A51C98 LDR X8, [X8 + 0xB8]
	0x03A51C9C LDR X22, [X22 + 0xB18]
	0x03A51CA0 STRB W31, [X8 + 0x8]
	0x03A51CA4 ADD X8, X31, 0xA10
	0x03A51CA8 BL 0x3C4B204
	0x03A51CAC LDR V0, [X31 + 0xA1]
	0x03A51CB0 LDR V1, [X31 + 0xA2]
	0x03A51CB4 LDR X8, [X31 + 0xA30]
	0x03A51CB8 LDR X0, [X19]
	0x03A51CBC STR V0, [X31 + 0xA4]
	0x03A51CC0 STR V1, [X31 + 0xA5]
	0x03A51CC4 STR X8, [X31 + 0xA60]
	0x03A51CC8 LDR W8, [X0 + 0xE0]
	0x03A51CCC CBNZ W8, 0x3A51CD4
	0x03A51CD0 BL 0x1C16DFC
	0x03A51CD4 LDR V0, [X31 + 0xA4]
	0x03A51CD8 LDR V1, [X31 + 0xA5]
	0x03A51CDC LDR X8, [X31 + 0xA60]
	0x03A51CE0 ADD X0, X31, 0x9E0
	0x03A51CE4 MOV X1, X31
	0x03A51CE8 STR V0, [X31 + 0x9E]
	0x03A51CEC STR V1, [X31 + 0x9F]
	0x03A51CF0 STR X8, [X31 + 0xA00]
	0x03A51CF4 BL 0x39D4600
	0x03A51CF8 LDR X8, [X21]
	0x03A51CFC MOVZ W1, 0x8
	0x03A51D00 LDR X8, [X8 + 0xB8]
	0x03A51D04 STR X0, [X8 + 0x10]
	0x03A51D08 LDR X0, [X22]
	0x03A51D0C BL 0x1C16D6C

ISIL:
	001 Subtract X31, X31, 320
	002 Move [X31+192], D11
	003 Move [X31+200], D10
	004 Move [X31+208], D9
	005 Move [X31+216], D8
	006 Move [X31+224], X29
	007 Move [X31+232], X30
	008 Move [X31+240], X28
	009 Move [X31+248], X27
	010 Move [X31+256], X26
	011 Move [X31+264], X25
	012 Move [X31+272], X24
	013 Move [X31+280], X23
	014 Move [X31+288], X22
	015 Move [X31+296], X21
	016 Move [X31+304], X20
	017 Move [X31+312], X19
	018 Move X26, 0x992000
	019 Move X25, 0x704000
	020 Move W8, [X26+438]
	021 Move X25, [X25+2248]
	022 Move W20, W5
	023 Move W21, W4
	024 Move V8, V3
	025 Move V9, V2
	026 Move V10, V1
	027 Move V11, V0
	028 Move W19, W3
	029 Move X22, X2
	030 Move X23, X1
	031 Move X24, X0
	032 Move TEMP, X8
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfEqual {41}
	036 Move X0, 0x704000
	037 Move X0, [X0+2248]
	038 Call 0x1C17CF4
	039 Move W8, 1
	040 Move [X26+438], W8
	041 Move X0, [X25]
	042 Move W8, [X0+224]
	043 Compare W8, 0
	044 JumpIfNotEqual {47}
	045 Call 0x1C17DFC
	046 Move X0, [X25]
	047 Move X8, [X0+184]
	048 Move X0, X23
	049 Move X1, X31
	050 Move X27, [X8+24]
	051 Add X8, X31, 104
	052 Call RTHandle.op_Implicit, X0
	053 NotImplemented "Instruction LDUR not yet implemented."
	054 NotImplemented "Instruction LDUR not yet implemented."
	055 Move X8, [X31+136]
	056 Move [X31+144], V0
	057 Move [X31+152], V1
	058 Move [X31+176], X8
	059 Compare X27, 0
	060 JumpIfEqual {240}
	061 Move V0, [X31+144]
	062 Move V1, [X31+160]
	063 Move X8, [X31+176]
	064 Move [X31+64], V0
	065 Move [X31+72], V1
	066 Move [X31+96], X8
	067 Move W8, [X27+24]
	068 Compare W8, 0
	069 JumpIfEqual {241}
	070 Move X8, [X31+96]
	071 Move V1, [X31+64]
	072 Move V0, [X31+80]
	073 Move W26, 1
	074 Move [X27+64], X8
	075 Move [X27+32], V1
	076 Move [X27+40], V0
	077 Move W27, 72
	078 Move X0, [X25]
	079 Move W8, [X0+224]
	080 Compare W8, 0
	081 JumpIfNotEqual {84}
	082 Call 0x1C17DFC
	083 Move X0, [X25]
	084 Move X8, [X0+184]
	085 Move X9, [X8+24]
	086 Compare X9, 0
	087 JumpIfEqual {240}
	088 Move W10, [X0+224]
	089 NotImplemented "Instruction LDRSW not yet implemented."
	090 Compare W10, 0
	091 JumpIfNotEqual {95}
	092 Call 0x1C17DFC
	093 Move X0, [X25]
	094 Move X8, [X0+184]
	095 NotImplemented "Instruction CMP not yet implemented."
	096 Move X28, [X8+24]
	097 Add X8, X31, 104
	098 Move W0, W31
	099 Move X1, X31
	100 Call RenderTargetIdentifier.op_Implicit, X0
	101 NotImplemented "Instruction LDUR not yet implemented."
	102 NotImplemented "Instruction LDUR not yet implemented."
	103 Move X8, [X31+136]
	104 Move [X31+144], V0
	105 Move [X31+152], V1
	106 Move [X31+176], X8
	107 Compare X28, 0
	108 JumpIfEqual {240}
	109 Move V0, [X31+144]
	110 Move V1, [X31+160]
	111 Move X8, [X31+176]
	112 Move [X31+16], V0
	113 Move [X31+24], V1
	114 Move [X31+48], X8
	115 Move W8, [X28+24]
	116 NotImplemented "Instruction CMP not yet implemented."
	117 Move X8, [X31+48]
	118 Move V0, [X31+16]
	119 Move V1, [X31+32]
	120 Add X9, X28, X27
	121 Add X26, X26, 1
	122 Add X27, X27, 40
	123 Move [X9+32], X8
	124 Move [X9], V0
	125 Move [X9+8], V1
	126 Move X9, [X8+72]
	127 Compare X9, 0
	128 JumpIfEqual {240}
	129 Move W10, [X9+24]
	130 Compare W10, 0
	131 JumpIfEqual {241}
	132 Move [X9+32], W21
	133 Move [X8+80], W20
	134 Move W26, 9
	135 Move W8, [X0+224]
	136 Compare W8, 0
	137 JumpIfNotEqual {140}
	138 Call 0x1C17DFC
	139 Move X0, [X25]
	140 Move X8, [X0+184]
	141 Move X8, [X8+72]
	142 Compare X8, 0
	143 JumpIfEqual {240}
	144 NotImplemented "Instruction LDRSW not yet implemented."
	145 Subtract X27, X26, 8
	146 NotImplemented "Instruction CMP not yet implemented."
	147 Move W8, [X0+224]
	148 Compare W8, 0
	149 JumpIfNotEqual {152}
	150 Call 0x1C17DFC
	151 Move X0, [X25]
	152 Move X8, [X0+184]
	153 Move X8, [X8+72]
	154 Compare X8, 0
	155 JumpIfEqual {240}
	156 Move W9, [X8+24]
	157 NotImplemented "Instruction CMP not yet implemented."
	158 Move [X8], W31
	159 Add X26, X26, 1
	160 Add X8, X31, 104
	161 Move X0, X22
	162 Move X1, X31
	163 Call RTHandle.op_Implicit, X0
	164 NotImplemented "Instruction LDUR not yet implemented."
	165 NotImplemented "Instruction LDUR not yet implemented."
	166 Move X8, [X31+136]
	167 Move X0, [X25]
	168 Move [X31+144], V0
	169 Move [X31+152], V1
	170 Move [X31+176], X8
	171 Move W8, [X0+224]
	172 Compare W8, 0
	173 JumpIfNotEqual {176}
	174 Call 0x1C17DFC
	175 Move X0, [X25]
	176 Move X8, [X0+184]
	177 Move X9, [X31+176]
	178 Move V1, [X31+144]
	179 Move V0, [X31+160]
	180 Move [X8+64], X9
	181 Move [X8+32], V1
	182 Move [X8+40], V0
	183 Move W8, [X0+224]
	184 Compare W8, 0
	185 JumpIfEqual {188}
	186 Move X8, [X0+184]
	187 Move W25, [X8+8]
	188 Call 0x1C17DFC
	189 Move X0, [X25]
	190 Move X8, [X0+184]
	191 Move W9, [X0+224]
	192 Move W25, [X8+8]
	193 Compare W9, 0
	194 JumpIfNotEqual {196}
	195 Call 0x1C17DFC
	196 NotImplemented "Instruction CMP not yet implemented."
	197 NotImplemented "Instruction CSET not yet implemented."
	198 NotImplemented "Instruction CMP not yet implemented."
	199 Move W8, W8
	200 ShiftRight W8, 31
	201 And W8, W8, 0x3FFFFFFF
	202 NotImplemented "Instruction CSET not yet implemented."
	203 NotImplemented "Instruction CMP not yet implemented."
	204 NotImplemented "Instruction CSEL not yet implemented."
	205 Move W8, W9
	206 ShiftRight W8, 31
	207 And W8, W8, 0x3FFFFFFF
	208 And W5, W19, 2
	209 NotImplemented "Instruction CSEL not yet implemented."
	210 Move W2, W19
	211 ShiftRight W2, 31
	212 And W2, W2, 0
	213 Move X0, X24
	214 Move X1, X23
	215 Move X4, X22
	216 Move W7, W19
	217 Move V0, V11
	218 Move V1, V10
	219 Move V2, V9
	220 Move V3, V8
	221 Call ScriptableRenderer.SetRenderTarget, X0, X1, X2, X3, X4, X5, X6, X7, X8
	222 Move X20, [X31+304]
	223 Move X19, [X31+312]
	224 Move X22, [X31+288]
	225 Move X21, [X31+296]
	226 Move X24, [X31+272]
	227 Move X23, [X31+280]
	228 Move X26, [X31+256]
	229 Move X25, [X31+264]
	230 Move X28, [X31+240]
	231 Move X27, [X31+248]
	232 Move X29, [X31+224]
	233 Move X30, [X31+232]
	234 Move D9, [X31+208]
	235 Move D8, [X31+216]
	236 Move D11, [X31+192]
	237 Move D10, [X31+200]
	238 Add X31, X31, 320
	239 Return 
	240 Call 0x1C17F20
	241 Call 0x1C17F28

Method: System.Void SetRenderTarget(UnityEngine.Rendering.CommandBuffer cmd, UnityEngine.Rendering.RenderTargetIdentifier colorAttachment, UnityEngine.Rendering.RenderBufferLoadAction colorLoadAction, UnityEngine.Rendering.RenderBufferStoreAction colorStoreAction, UnityEngine.Rendering.ClearFlag clearFlags, UnityEngine.Color clearColor)

Disassembly:
	0x03A52778 LDP V1, V0, [X31 + 0x2C0]
	0x03A5277C MOV W0, W31
	0x03A52780 MOV X1, X31
	0x03A52784 STR X8, [X20 + 0x40]
	0x03A52788 ADD X8, X31, 0x2F0
	0x03A5278C STP V1, V0, [X20 + 0x20]
	0x03A52790 BL 0x3C4B258
	0x03A52794 LDP V0, V1, [X31 + 0x2F0]
	0x03A52798 LDR X8, [X31 + 0x310]
	0x03A5279C STP V0, V1, [X31 + 0x290]
	0x03A527A0 STR X8, [X31 + 0x2B0]
	0x03A527A4 LDR W8, [X20 + 0x18]
	0x03A527A8 CMP W8, 0x1
	0x03A527AC B.LS 0x3A52B94
	0x03A527B0 LDR X8, [X31 + 0x2B0]
	0x03A527B4 LDP V1, V0, [X31 + 0x290]
	0x03A527B8 MOV W0, W31
	0x03A527BC MOV X1, X31
	0x03A527C0 STR X8, [X20 + 0x68]
	0x03A527C4 ADD X8, X31, 0x2F0
	0x03A527C8 STUR V0, [X20 + 0x58]
	0x03A527CC STUR V1, [X20 + 0x48]
	0x03A527D0 BL 0x3C4B258
	0x03A527D4 LDP V0, V1, [X31 + 0x2F0]
	0x03A527D8 LDR X8, [X31 + 0x310]
	0x03A527DC STP V0, V1, [X31 + 0x260]
	0x03A527E0 STR X8, [X31 + 0x280]
	0x03A527E4 LDR W8, [X20 + 0x18]
	0x03A527E8 CMP W8, 0x2
	0x03A527EC B.LS 0x3A52B94
	0x03A527F0 LDR X8, [X31 + 0x280]
	0x03A527F4 LDP V1, V0, [X31 + 0x260]
	0x03A527F8 MOV W0, W31
	0x03A527FC MOV X1, X31
	0x03A52800 STR X8, [X20 + 0x90]
	0x03A52804 ADD X8, X31, 0x2F0
	0x03A52808 STP V1, V0, [X20 + 0x70]
	0x03A5280C BL 0x3C4B258
	0x03A52810 LDP V0, V1, [X31 + 0x2F0]
	0x03A52814 LDR X8, [X31 + 0x310]
	0x03A52818 STP V0, V1, [X31 + 0x230]
	0x03A5281C STR X8, [X31 + 0x250]
	0x03A52820 LDR W8, [X20 + 0x18]
	0x03A52824 CMP W8, 0x3
	0x03A52828 B.LS 0x3A52B94
	0x03A5282C LDR X8, [X31 + 0x250]
	0x03A52830 LDP V1, V0, [X31 + 0x230]
	0x03A52834 MOV W0, W31
	0x03A52838 MOV X1, X31
	0x03A5283C STR X8, [X20 + 0xB8]
	0x03A52840 ADD X8, X31, 0x2F0
	0x03A52844 STUR V0, [X20 + 0xA8]
	0x03A52848 STUR V1, [X20 + 0x98]
	0x03A5284C BL 0x3C4B258
	0x03A52850 LDP V0, V1, [X31 + 0x2F0]
	0x03A52854 LDR X8, [X31 + 0x310]
	0x03A52858 STP V0, V1, [X31 + 0x200]

ISIL:
	001 Subtract X31, X31, 192
	002 Move [X31+96], D11
	003 Move [X31+104], D10
	004 Move [X31+112], D9
	005 Move [X31+120], D8
	006 Move [X31+128], X30
	007 Move [X31+136], X25
	008 Move [X31+144], X24
	009 Move [X31+152], X23
	010 Move [X31+160], X22
	011 Move [X31+168], X21
	012 Move [X31+176], X20
	013 Move [X31+184], X19
	014 Move X25, 0x991000
	015 Move X24, 0x6CA000
	016 Move W8, [X25+439]
	017 Move X24, [X24+2296]
	018 Move V8, V3
	019 Move V9, V2
	020 Move V10, V1
	021 Move V11, V0
	022 Move W19, W4
	023 Move W20, W3
	024 Move W21, W2
	025 Move X23, X1
	026 Move X22, X0
	027 Move TEMP, X8
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfEqual {36}
	031 Move X0, 0x6CA000
	032 Move X0, [X0+2296]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X25+439], W8
	036 Move X8, [X23+32]
	037 Move V1, [X23]
	038 Move V0, [X23+16]
	039 Move X0, [X24]
	040 Move [X31+80], X8
	041 Move [X31+48], V1
	042 Move [X31+56], V0
	043 Move W8, [X0+224]
	044 Compare W8, 0
	045 JumpIfNotEqual {47}
	046 Call 0x1C17DFC
	047 Move V0, [X31+48]
	048 Move V1, [X31+64]
	049 Move X8, [X31+80]
	050 Add X1, X31, 0
	051 Move X0, X22
	052 Move [X31], V0
	053 Move [X31+8], V1
	054 Move W2, W21
	055 Move W3, W20
	056 Move W4, W19
	057 Move V0, V11
	058 Move V1, V10
	059 Move V2, V9
	060 Move V3, V8
	061 Move X5, X31
	062 Move [X31+32], X8
	063 Call CoreUtils.SetRenderTarget, X0, X1, X2, X3, X4, X5
	064 Move X20, [X31+176]
	065 Move X19, [X31+184]
	066 Move X22, [X31+160]
	067 Move X21, [X31+168]
	068 Move X24, [X31+144]
	069 Move X23, [X31+152]
	070 Move X30, [X31+128]
	071 Move X25, [X31+136]
	072 Move D9, [X31+112]
	073 Move D8, [X31+120]
	074 Move D11, [X31+96]
	075 Move D10, [X31+104]
	076 Add X31, X31, 192
	077 Return 

Method: System.Void SetRenderTarget(UnityEngine.Rendering.CommandBuffer cmd, UnityEngine.Rendering.RTHandle colorAttachment, UnityEngine.Rendering.RenderBufferLoadAction colorLoadAction, UnityEngine.Rendering.RenderBufferStoreAction colorStoreAction, UnityEngine.Rendering.ClearFlag clearFlags, UnityEngine.Color clearColor)

Disassembly:
	0x03A5285C STR X8, [X31 + 0x220]
	0x03A52860 LDR W8, [X20 + 0x18]
	0x03A52864 CMP W8, 0x4
	0x03A52868 B.LS 0x3A52B94
	0x03A5286C LDR X8, [X31 + 0x220]
	0x03A52870 LDP V1, V0, [X31 + 0x200]
	0x03A52874 MOV W0, W31
	0x03A52878 MOV X1, X31
	0x03A5287C STR X8, [X20 + 0xE0]
	0x03A52880 ADD X8, X31, 0x2F0
	0x03A52884 STP V1, V0, [X20 + 0xC0]
	0x03A52888 BL 0x3C4B258
	0x03A5288C LDP V0, V1, [X31 + 0x2F0]
	0x03A52890 LDR X8, [X31 + 0x310]
	0x03A52894 STP V0, V1, [X31 + 0x1D0]
	0x03A52898 STR X8, [X31 + 0x1F0]
	0x03A5289C LDR W8, [X20 + 0x18]
	0x03A528A0 CMP W8, 0x5
	0x03A528A4 B.LS 0x3A52B94
	0x03A528A8 LDR X8, [X31 + 0x1F0]
	0x03A528AC LDP V1, V0, [X31 + 0x1D0]
	0x03A528B0 MOV W0, W31
	0x03A528B4 MOV X1, X31
	0x03A528B8 STR X8, [X20 + 0x108]
	0x03A528BC ADD X8, X31, 0x2F0
	0x03A528C0 STUR V0, [X20 + 0xF8]
	0x03A528C4 STUR V1, [X20 + 0xE8]
	0x03A528C8 BL 0x3C4B258
	0x03A528CC LDP V0, V1, [X31 + 0x2F0]
	0x03A528D0 LDR X8, [X31 + 0x310]
	0x03A528D4 STP V0, V1, [X31 + 0x1A0]
	0x03A528D8 STR X8, [X31 + 0x1C0]
	0x03A528DC LDR W8, [X20 + 0x18]
	0x03A528E0 CMP W8, 0x6
	0x03A528E4 B.LS 0x3A52B94
	0x03A528E8 LDR X8, [X31 + 0x1C0]
	0x03A528EC LDP V1, V0, [X31 + 0x1A0]
	0x03A528F0 STR X8, [X20 + 0x130]
	0x03A528F4 STP V1, V0, [X20 + 0x110]
	0x03A528F8 LDR W8, [X19 + 0x18]
	0x03A528FC CMP W8, 0x7
	0x03A52900 B.LS 0x3A52B94
	0x03A52904 STR X20, [X19 + 0x58]
	0x03A52908 LDR X0, [X22]
	0x03A5290C MOVZ W1, 0x8
	0x03A52910 ADD X22, X31, 0x178
	0x03A52914 BL 0x1C16D6C
	0x03A52918 MOV X20, X0
	0x03A5291C ADD X8, X31, 0x178
	0x03A52920 MOV W0, W31
	0x03A52924 MOV X1, X31
	0x03A52928 BL 0x3C4B258

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], D11
	003 Move [X31+24], D10
	004 Move [X31+32], D9
	005 Move [X31+40], D8
	006 Move [X31+48], X30
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X25, 0x991000
	015 Move X24, 0x6CA000
	016 Move W8, [X25+440]
	017 Move X24, [X24+2296]
	018 Move V8, V3
	019 Move V9, V2
	020 Move V10, V1
	021 Move V11, V0
	022 Move W19, W4
	023 Move W20, W3
	024 Move W21, W2
	025 Move X22, X1
	026 Move X23, X0
	027 Move TEMP, X8
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfEqual {36}
	031 Move X0, 0x6CA000
	032 Move X0, [X0+2296]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X25+440], W8
	036 Move X0, [X24]
	037 Move W8, [X0+224]
	038 Compare W8, 0
	039 JumpIfNotEqual {41}
	040 Call 0x1C17DFC
	041 Move TEMP, 0
	042 Not TEMP
	043 Move W6, TEMP
	044 Move TEMP, 0
	045 Not TEMP
	046 Move W7, TEMP
	047 Move X0, X23
	048 Move X1, X22
	049 Move W2, W21
	050 Move W3, W20
	051 Move W4, W19
	052 Move V0, V11
	053 Move V1, V10
	054 Move V2, V9
	055 Move V3, V8
	056 Move W5, W31
	057 Move [X31], X31
	058 Call CoreUtils.SetRenderTarget, X0, X1, X2, X3, X4, X5, X6, X7, X8
	059 Move X20, [X31+96]
	060 Move X19, [X31+104]
	061 Move X22, [X31+80]
	062 Move X21, [X31+88]
	063 Move X24, [X31+64]
	064 Move X23, [X31+72]
	065 Move X30, [X31+48]
	066 Move X25, [X31+56]
	067 Move D9, [X31+32]
	068 Move D8, [X31+40]
	069 Move D11, [X31+16]
	070 Move D10, [X31+24]
	071 Add X31, X31, 112
	072 Return 

Method: System.Void SetRenderTarget(UnityEngine.Rendering.CommandBuffer cmd, UnityEngine.Rendering.RenderTargetIdentifier colorAttachment, UnityEngine.Rendering.RenderBufferLoadAction colorLoadAction, UnityEngine.Rendering.RenderBufferStoreAction colorStoreAction, UnityEngine.Rendering.RenderTargetIdentifier depthAttachment, UnityEngine.Rendering.RenderBufferLoadAction depthLoadAction, UnityEngine.Rendering.RenderBufferStoreAction depthStoreAction, UnityEngine.Rendering.ClearFlag clearFlags, UnityEngine.Color clearColor)

Disassembly:
	0x03A5201C STR V1, [X31 + 0x9C]
	0x03A52020 STR X8, [X31 + 0x9D0]
	0x03A52024 CBZ X20, 0x3A52B98
	0x03A52028 LDR V0, [X31 + 0x9B]
	0x03A5202C LDR V1, [X31 + 0x9C]
	0x03A52030 LDR X8, [X31 + 0x9D0]
	0x03A52034 STR V0, [X31 + 0x7D]
	0x03A52038 STR V1, [X31 + 0x7E]
	0x03A5203C STR X8, [X31 + 0x7F0]
	0x03A52040 LDR W8, [X20 + 0x18]
	0x03A52044 CBZ W8, 0x3A52B94
	0x03A52048 LDR X8, [X31 + 0x7F0]
	0x03A5204C LDR V0, [X31 + 0x7E]
	0x03A52050 LDR V1, [X31 + 0x7D]
	0x03A52054 STR X8, [X20 + 0x40]
	0x03A52058 STP V1, V0, [X20 + 0x20]
	0x03A5205C LDR W8, [X19 + 0x18]
	0x03A52060 CMP W8, 0x1
	0x03A52064 B.LS 0x3A52B94
	0x03A52068 STR X20, [X19 + 0x28]
	0x03A5206C LDR X0, [X22]
	0x03A52070 MOVZ W1, 0x2
	0x03A52074 BL 0x1C16D6C
	0x03A52078 MOV X20, X0
	0x03A5207C ADD X8, X31, 0x7A0
	0x03A52080 MOV W0, W31
	0x03A52084 MOV X1, X31
	0x03A52088 BL 0x3C4B258
	0x03A5208C LDR V0, [X31 + 0x7A]
	0x03A52090 LDR V1, [X31 + 0x7B]
	0x03A52094 LDR X8, [X31 + 0x7C0]
	0x03A52098 STR V0, [X31 + 0x80]
	0x03A5209C STR V1, [X31 + 0x81]
	0x03A520A0 STR X8, [X31 + 0x820]
	0x03A520A4 CBZ X20, 0x3A52B98
	0x03A520A8 LDR V0, [X31 + 0x80]
	0x03A520AC LDR V1, [X31 + 0x81]
	0x03A520B0 LDR X8, [X31 + 0x820]
	0x03A520B4 STR V0, [X31 + 0x77]
	0x03A520B8 STR V1, [X31 + 0x78]
	0x03A520BC STR X8, [X31 + 0x790]
	0x03A520C0 LDR W8, [X20 + 0x18]
	0x03A520C4 CBZ W8, 0x3A52B94
	0x03A520C8 LDR X8, [X31 + 0x790]
	0x03A520CC LDR V0, [X31 + 0x78]
	0x03A520D0 LDR V1, [X31 + 0x77]
	0x03A520D4 MOV W0, W31
	0x03A520D8 STR X8, [X20 + 0x40]
	0x03A520DC ADD X8, X31, 0x7A0
	0x03A520E0 MOV X1, X31
	0x03A520E4 STP V1, V0, [X20 + 0x20]
	0x03A520E8 BL 0x3C4B258
	0x03A520EC LDR V0, [X31 + 0x7A]
	0x03A520F0 LDR V1, [X31 + 0x7B]
	0x03A520F4 LDR X8, [X31 + 0x7C0]
	0x03A520F8 STR V0, [X31 + 0x74]
	0x03A520FC STR V1, [X31 + 0x75]
	0x03A52100 STR X8, [X31 + 0x760]
	0x03A52104 LDR W8, [X20 + 0x18]
	0x03A52108 CMP W8, 0x1
	0x03A5210C B.LS 0x3A52B94
	0x03A52110 LDR X8, [X31 + 0x760]
	0x03A52114 LDR V0, [X31 + 0x75]
	0x03A52118 LDR V1, [X31 + 0x74]
	0x03A5211C STR X8, [X20 + 0x68]
	0x03A52120 STUR V0, [X20 + 0x58]
	0x03A52124 STUR V1, [X20 + 0x48]
	0x03A52128 LDR W8, [X19 + 0x18]
	0x03A5212C CMP W8, 0x2
	0x03A52130 B.LS 0x3A52B94
	0x03A52134 STR X20, [X19 + 0x30]
	0x03A52138 LDR X0, [X22]
	0x03A5213C MOVZ W1, 0x3
	0x03A52140 BL 0x1C16D6C
	0x03A52144 MOV X20, X0
	0x03A52148 ADD X8, X31, 0x710
	0x03A5214C MOV W0, W31
	0x03A52150 MOV X1, X31
	0x03A52154 BL 0x3C4B258
	0x03A52158 LDR V0, [X31 + 0x71]
	0x03A5215C LDR V1, [X31 + 0x72]
	0x03A52160 LDR X8, [X31 + 0x730]
	0x03A52164 STR V0, [X31 + 0x7A]
	0x03A52168 STR V1, [X31 + 0x7B]
	0x03A5216C STR X8, [X31 + 0x7C0]
	0x03A52170 CBZ X20, 0x3A52B98
	0x03A52174 LDR V0, [X31 + 0x7A]
	0x03A52178 LDR V1, [X31 + 0x7B]
	0x03A5217C LDR X8, [X31 + 0x7C0]
	0x03A52180 STR V0, [X31 + 0x6E]
	0x03A52184 STR V1, [X31 + 0x6F]
	0x03A52188 STR X8, [X31 + 0x700]
	0x03A5218C LDR W8, [X20 + 0x18]
	0x03A52190 CBZ W8, 0x3A52B94
	0x03A52194 LDR X8, [X31 + 0x700]
	0x03A52198 LDR V0, [X31 + 0x6F]
	0x03A5219C LDR V1, [X31 + 0x6E]
	0x03A521A0 MOV W0, W31
	0x03A521A4 STR X8, [X20 + 0x40]
	0x03A521A8 ADD X8, X31, 0x710
	0x03A521AC MOV X1, X31
	0x03A521B0 STP V1, V0, [X20 + 0x20]
	0x03A521B4 BL 0x3C4B258
	0x03A521B8 LDR V0, [X31 + 0x71]
	0x03A521BC LDR V1, [X31 + 0x72]
	0x03A521C0 LDR X8, [X31 + 0x730]
	0x03A521C4 STR V0, [X31 + 0x6B]
	0x03A521C8 STR V1, [X31 + 0x6C]
	0x03A521CC STR X8, [X31 + 0x6D0]
	0x03A521D0 LDR W8, [X20 + 0x18]
	0x03A521D4 CMP W8, 0x1
	0x03A521D8 B.LS 0x3A52B94
	0x03A521DC LDR X8, [X31 + 0x6D0]
	0x03A521E0 LDR V0, [X31 + 0x6C]
	0x03A521E4 LDR V1, [X31 + 0x6B]
	0x03A521E8 MOV W0, W31
	0x03A521EC STR X8, [X20 + 0x68]
	0x03A521F0 ADD X8, X31, 0x710
	0x03A521F4 MOV X1, X31
	0x03A521F8 STUR V0, [X20 + 0x58]
	0x03A521FC STUR V1, [X20 + 0x48]
	0x03A52200 BL 0x3C4B258

ISIL:
	001 Subtract X31, X31, 480
	002 Move [X31+352], D11
	003 Move [X31+360], D10
	004 Move [X31+368], D9
	005 Move [X31+376], D8
	006 Move [X31+384], X29
	007 Move [X31+400], X30
	008 Move [X31+408], X27
	009 Move [X31+416], X26
	010 Move [X31+424], X25
	011 Move [X31+432], X24
	012 Move [X31+440], X23
	013 Move [X31+448], X22
	014 Move [X31+456], X21
	015 Move [X31+464], X20
	016 Move [X31+472], X19
	017 Move X27, 0x991000
	018 Move W8, [X27+441]
	019 Move V8, V3
	020 Move V9, V2
	021 Move V10, V1
	022 Move V11, V0
	023 Move W19, W7
	024 Move W20, W6
	025 Move W21, W5
	026 Move X25, X4
	027 Move W22, W3
	028 Move W23, W2
	029 Move X26, X1
	030 Move X24, X0
	031 Move TEMP, X8
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfEqual {40}
	035 Move X0, 0x6CA000
	036 Move X0, [X0+2296]
	037 Call 0x1C17CF4
	038 Move W8, 1
	039 Move [X27+441], W8
	040 Move X8, [X25+32]
	041 Move V1, [X25]
	042 Move V0, [X25+16]
	043 Move X27, 0x6CA000
	044 Move X27, [X27+2296]
	045 Move [X31+336], X8
	046 Add X8, X31, 256
	047 Move W0, 2
	048 Move X1, X31
	049 Move [X31+304], V1
	050 Move [X31+312], V0
	051 Call RenderTargetIdentifier.op_Implicit, X0
	052 Move V0, [X31+256]
	053 Move V1, [X31+272]
	054 Move X8, [X31+288]
	055 Move V2, [X31+304]
	056 Move V3, [X31+320]
	057 Move X9, [X31+336]
	058 Add X0, X31, 208
	059 Add X1, X31, 160
	060 Move X2, X31
	061 Move [X31+160], V0
	062 Move [X31+168], V1
	063 Move [X31+192], X8
	064 Move [X31+208], V2
	065 Move [X31+216], V3
	066 Move [X31+240], X9
	067 Call RenderTargetIdentifier.op_Equality, X0, X1
	068 Move TEMP, X0
	069 And TEMP, TEMP, 1
	070 Compare TEMP, 1
	071 JumpIfNotEqual {102}
	072 Move X8, [X26+32]
	073 Move V1, [X26]
	074 Move V0, [X26+16]
	075 Move X0, [X27]
	076 Move [X31+336], X8
	077 Move [X31+304], V1
	078 Move [X31+312], V0
	079 Move W8, [X0+224]
	080 Compare W8, 0
	081 JumpIfNotEqual {83}
	082 Call 0x1C17DFC
	083 Move V0, [X31+304]
	084 Move V1, [X31+320]
	085 Move X8, [X31+336]
	086 Add X1, X31, 112
	087 Move X0, X24
	088 Move [X31+112], V0
	089 Move [X31+120], V1
	090 Move W2, W23
	091 Move W3, W22
	092 Move W4, W21
	093 Move W5, W20
	094 Move W6, W19
	095 Move V0, V11
	096 Move V1, V10
	097 Move V2, V9
	098 Move V3, V8
	099 Move X7, X31
	100 Move [X31+144], X8
	101 Call CoreUtils.SetRenderTarget, X0, X1, X2, X3, X4, X5, X6, X7
	102 Move X8, [X26+32]
	103 Move V1, [X26]
	104 Move V0, [X26+16]
	105 Move X0, [X27]
	106 Move [X31+336], X8
	107 Move [X31+304], V1
	108 Move [X31+312], V0
	109 Move X8, [X25+32]
	110 Move V1, [X25]
	111 Move V0, [X25+16]
	112 Move [X31+288], X8
	113 Move [X31+256], V1
	114 Move [X31+264], V0
	115 Move W8, [X0+224]
	116 Compare W8, 0
	117 JumpIfNotEqual {119}
	118 Call 0x1C17DFC
	119 Move V0, [X31+304]
	120 Move V1, [X31+320]
	121 Move V2, [X31+256]
	122 Move V3, [X31+272]
	123 Move X8, [X31+336]
	124 Move X9, [X31+288]
	125 Move [X31+64], V0
	126 Move [X31+72], V1
	127 Move [X31+16], V2
	128 Move [X31+24], V3
	129 Add X1, X31, 64
	130 Add X4, X31, 16
	131 Move X0, X24
	132 Move W2, W23
	133 Move W3, W22
	134 Move W5, W21
	135 Move W6, W20
	136 Move W7, W19
	137 Move V0, V11
	138 Move V1, V10
	139 Move V2, V9
	140 Move V3, V8
	141 Move [X31+96], X8
	142 Move [X31+48], X9
	143 Move [X31], X31
	144 Call CoreUtils.SetRenderTarget, X0, X1, X2, X3, X4, X5, X6, X7, X8
	145 Move X20, [X31+464]
	146 Move X19, [X31+472]
	147 Move X22, [X31+448]
	148 Move X21, [X31+456]
	149 Move X24, [X31+432]
	150 Move X23, [X31+440]
	151 Move X26, [X31+416]
	152 Move X25, [X31+424]
	153 Move X30, [X31+400]
	154 Move X27, [X31+408]
	155 Move X29, [X31+384]
	156 Move D9, [X31+368]
	157 Move D8, [X31+376]
	158 Move D11, [X31+352]
	159 Move D10, [X31+360]
	160 Add X31, X31, 480
	161 Return 

Method: System.Void SetRenderTarget(UnityEngine.Rendering.CommandBuffer cmd, UnityEngine.Rendering.RTHandle colorAttachment, UnityEngine.Rendering.RenderBufferLoadAction colorLoadAction, UnityEngine.Rendering.RenderBufferStoreAction colorStoreAction, UnityEngine.Rendering.RTHandle depthAttachment, UnityEngine.Rendering.RenderBufferLoadAction depthLoadAction, UnityEngine.Rendering.RenderBufferStoreAction depthStoreAction, UnityEngine.Rendering.ClearFlag clearFlags, UnityEngine.Color clearColor)

Disassembly:
	0x03A525D0 BL 0x3C4B258
	0x03A525D4 LDR V0, [X31 + 0x44]
	0x03A525D8 LDR V1, [X31 + 0x45]
	0x03A525DC LDR X8, [X31 + 0x460]
	0x03A525E0 STP V0, V1, [X31 + 0x3E0]
	0x03A525E4 STR X8, [X31 + 0x400]
	0x03A525E8 LDR W8, [X20 + 0x18]
	0x03A525EC CMP W8, 0x1
	0x03A525F0 B.LS 0x3A52B94
	0x03A525F4 LDR X8, [X31 + 0x400]
	0x03A525F8 LDP V1, V0, [X31 + 0x3E0]
	0x03A525FC MOV W0, W31
	0x03A52600 MOV X1, X31
	0x03A52604 STR X8, [X20 + 0x68]
	0x03A52608 ADD X8, X31, 0x440
	0x03A5260C STUR V0, [X20 + 0x58]
	0x03A52610 STUR V1, [X20 + 0x48]
	0x03A52614 BL 0x3C4B258
	0x03A52618 LDR V0, [X31 + 0x44]
	0x03A5261C LDR V1, [X31 + 0x45]
	0x03A52620 LDR X8, [X31 + 0x460]
	0x03A52624 STP V0, V1, [X31 + 0x3B0]
	0x03A52628 STR X8, [X31 + 0x3D0]
	0x03A5262C LDR W8, [X20 + 0x18]
	0x03A52630 CMP W8, 0x2
	0x03A52634 B.LS 0x3A52B94
	0x03A52638 LDR X8, [X31 + 0x3D0]
	0x03A5263C LDP V1, V0, [X31 + 0x3B0]
	0x03A52640 MOV W0, W31
	0x03A52644 MOV X1, X31
	0x03A52648 STR X8, [X20 + 0x90]
	0x03A5264C ADD X8, X31, 0x440
	0x03A52650 STP V1, V0, [X20 + 0x70]
	0x03A52654 BL 0x3C4B258
	0x03A52658 LDR V0, [X31 + 0x44]
	0x03A5265C LDR V1, [X31 + 0x45]
	0x03A52660 LDR X8, [X31 + 0x460]
	0x03A52664 STP V0, V1, [X31 + 0x380]
	0x03A52668 STR X8, [X31 + 0x3A0]
	0x03A5266C LDR W8, [X20 + 0x18]
	0x03A52670 CMP W8, 0x3
	0x03A52674 B.LS 0x3A52B94
	0x03A52678 LDR X8, [X31 + 0x3A0]
	0x03A5267C LDP V1, V0, [X31 + 0x380]
	0x03A52680 MOV W0, W31
	0x03A52684 MOV X1, X31
	0x03A52688 STR X8, [X20 + 0xB8]
	0x03A5268C ADD X8, X31, 0x440
	0x03A52690 STUR V0, [X20 + 0xA8]
	0x03A52694 STUR V1, [X20 + 0x98]
	0x03A52698 BL 0x3C4B258
	0x03A5269C LDR V0, [X31 + 0x44]
	0x03A526A0 LDR V1, [X31 + 0x45]
	0x03A526A4 LDR X8, [X31 + 0x460]
	0x03A526A8 STP V0, V1, [X31 + 0x350]
	0x03A526AC STR X8, [X31 + 0x370]
	0x03A526B0 LDR W8, [X20 + 0x18]
	0x03A526B4 CMP W8, 0x4
	0x03A526B8 B.LS 0x3A52B94
	0x03A526BC LDR X8, [X31 + 0x370]
	0x03A526C0 LDP V1, V0, [X31 + 0x350]
	0x03A526C4 MOV W0, W31
	0x03A526C8 MOV X1, X31
	0x03A526CC STR X8, [X20 + 0xE0]
	0x03A526D0 ADD X8, X31, 0x440
	0x03A526D4 STP V1, V0, [X20 + 0xC0]
	0x03A526D8 BL 0x3C4B258
	0x03A526DC LDR V0, [X31 + 0x44]
	0x03A526E0 LDR V1, [X31 + 0x45]
	0x03A526E4 LDR X8, [X31 + 0x460]
	0x03A526E8 STP V0, V1, [X31 + 0x320]
	0x03A526EC STR X8, [X31 + 0x340]
	0x03A526F0 LDR W8, [X20 + 0x18]
	0x03A526F4 CMP W8, 0x5
	0x03A526F8 B.LS 0x3A52B94
	0x03A526FC LDR X8, [X31 + 0x340]
	0x03A52700 LDP V1, V0, [X31 + 0x320]
	0x03A52704 STR X8, [X20 + 0x108]
	0x03A52708 STUR V0, [X20 + 0xF8]
	0x03A5270C STUR V1, [X20 + 0xE8]
	0x03A52710 LDR W8, [X19 + 0x18]
	0x03A52714 CMP W8, 0x6
	0x03A52718 B.LS 0x3A52B94
	0x03A5271C STR X20, [X19 + 0x50]
	0x03A52720 LDR X0, [X22]
	0x03A52724 MOVZ W1, 0x7
	0x03A52728 BL 0x1C16D6C
	0x03A5272C MOV X20, X0
	0x03A52730 ADD X8, X31, 0x2F0
	0x03A52734 MOV W0, W31
	0x03A52738 MOV X1, X31
	0x03A5273C BL 0x3C4B258
	0x03A52740 LDP V0, V1, [X31 + 0x2F0]
	0x03A52744 LDR X8, [X31 + 0x310]
	0x03A52748 STR V0, [X31 + 0x44]
	0x03A5274C STR V1, [X31 + 0x45]
	0x03A52750 STR X8, [X31 + 0x460]
	0x03A52754 CBZ X20, 0x3A52B98
	0x03A52758 LDR V0, [X31 + 0x44]
	0x03A5275C LDR V1, [X31 + 0x45]
	0x03A52760 LDR X8, [X31 + 0x460]
	0x03A52764 STP V0, V1, [X31 + 0x2C0]
	0x03A52768 STR X8, [X31 + 0x2E0]
	0x03A5276C LDR W8, [X20 + 0x18]
	0x03A52770 CBZ W8, 0x3A52B94
	0x03A52774 LDR X8, [X31 + 0x2E0]

ISIL:
	001 Subtract X31, X31, 336
	002 Move [X31+208], D11
	003 Move [X31+216], D10
	004 Move [X31+224], D9
	005 Move [X31+232], D8
	006 Move [X31+240], X29
	007 Move [X31+256], X30
	008 Move [X31+264], X27
	009 Move [X31+272], X26
	010 Move [X31+280], X25
	011 Move [X31+288], X24
	012 Move [X31+296], X23
	013 Move [X31+304], X22
	014 Move [X31+312], X21
	015 Move [X31+320], X20
	016 Move [X31+328], X19
	017 Move X27, 0x991000
	018 Move W8, [X27+442]
	019 Move V8, V3
	020 Move V9, V2
	021 Move V10, V1
	022 Move V11, V0
	023 Move W19, W7
	024 Move W20, W6
	025 Move W21, W5
	026 Move X26, X4
	027 Move W22, W3
	028 Move W23, W2
	029 Move X24, X1
	030 Move X25, X0
	031 Move TEMP, X8
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfEqual {40}
	035 Move X0, 0x6CA000
	036 Move X0, [X0+2296]
	037 Call 0x1C17CF4
	038 Move W8, 1
	039 Move [X27+442], W8
	040 Compare X26, 0
	041 JumpIfEqual {138}
	042 Move X8, [X26+72]
	043 NotImplemented "Instruction LDUR not yet implemented."
	044 NotImplemented "Instruction LDUR not yet implemented."
	045 Move X27, 0x6CA000
	046 Move X27, [X27+2296]
	047 Move [X31+192], X8
	048 Add X8, X31, 120
	049 Move W0, 2
	050 Move X1, X31
	051 Move [X31+160], V1
	052 Move [X31+168], V0
	053 Call RenderTargetIdentifier.op_Implicit, X0
	054 NotImplemented "Instruction LDUR not yet implemented."
	055 NotImplemented "Instruction LDUR not yet implemented."
	056 Move X8, [X31+152]
	057 Move V2, [X31+160]
	058 Move V3, [X31+176]
	059 Move X9, [X31+192]
	060 Add X0, X31, 80
	061 Add X1, X31, 32
	062 Move X2, X31
	063 Move [X31+32], V0
	064 Move [X31+40], V1
	065 Move [X31+64], X8
	066 Move [X31+80], V2
	067 Move [X31+88], V3
	068 Move [X31+112], X9
	069 Call RenderTargetIdentifier.op_Equality, X0, X1
	070 Move X8, [X27]
	071 Move W27, W0
	072 Move W9, [X8+224]
	073 Compare W9, 0
	074 JumpIfEqual {95}
	075 Move TEMP, X27
	076 And TEMP, TEMP, 1
	077 Compare TEMP, 1
	078 JumpIfNotEqual {101}
	079 Move TEMP, 0
	080 Not TEMP
	081 Move W8, TEMP
	082 Move [X31+24], X31
	083 Move [X31+16], W8
	084 Move [X31+8], W8
	085 Move [X31], W31
	086 Move V0, V11
	087 Move V1, V10
	088 Move V2, V9
	089 Move V3, V8
	090 Move X0, X25
	091 Move X1, X24
	092 Move W2, W23
	093 Move W3, W22
	094 Move X4, X24
	095 Move X0, X8
	096 Call 0x1C17DFC
	097 Move TEMP, X27
	098 And TEMP, TEMP, 1
	099 Compare TEMP, 1
	100 JumpIfEqual {79}
	101 Move TEMP, 0
	102 Not TEMP
	103 Move W8, TEMP
	104 Move V0, V11
	105 Move V1, V10
	106 Move V2, V9
	107 Move V3, V8
	108 Move X0, X25
	109 Move X1, X24
	110 Move W2, W23
	111 Move W3, W22
	112 Move X4, X26
	113 Move [X31+24], X31
	114 Move [X31+16], W8
	115 Move [X31+8], W8
	116 Move [X31], W31
	117 Move W5, W21
	118 Move W6, W20
	119 Move W7, W19
	120 Call CoreUtils.SetRenderTarget, X0, X1, X2, X3, X4, X5, X6, X7, X8, X9, X10, X11
	121 Move X20, [X31+320]
	122 Move X19, [X31+328]
	123 Move X22, [X31+304]
	124 Move X21, [X31+312]
	125 Move X24, [X31+288]
	126 Move X23, [X31+296]
	127 Move X26, [X31+272]
	128 Move X25, [X31+280]
	129 Move X30, [X31+256]
	130 Move X27, [X31+264]
	131 Move X29, [X31+240]
	132 Move D9, [X31+224]
	133 Move D8, [X31+232]
	134 Move D11, [X31+208]
	135 Move D10, [X31+216]
	136 Add X31, X31, 336
	137 Return 
	138 Call 0x1C17F20

Method: System.Void SetRenderTarget(UnityEngine.Rendering.CommandBuffer cmd, UnityEngine.Rendering.RenderTargetIdentifier[] colorAttachments, UnityEngine.Rendering.RenderTargetIdentifier depthAttachment, UnityEngine.Rendering.ClearFlag clearFlag, UnityEngine.Color clearColor)

Disassembly:
	0x03A517E4 LDP V1, V0, [X23]
	0x03A517E8 LDR X0, [X24]
	0x03A517EC STR X8, [X31 + 0x50]
	0x03A517F0 STP V1, V0, [X31 + 0x30]
	0x03A517F4 LDR W8, [X0 + 0xE0]
	0x03A517F8 CBNZ W8, 0x3A51800
	0x03A517FC BL 0x1C16DFC
	0x03A51800 LDP V0, V1, [X31 + 0x30]
	0x03A51804 LDR X8, [X31 + 0x50]
	0x03A51808 ADD X1, X31, 0x0
	0x03A5180C MOV X0, X22
	0x03A51810 STP V0, V1, [X31]
	0x03A51814 MOV W2, W21
	0x03A51818 MOV W3, W20
	0x03A5181C MOV W4, W19
	0x03A51820 MOV V0.16B, V11.16B
	0x03A51824 MOV V1.16B, V10.16B
	0x03A51828 MOV V2.16B, V9.16B
	0x03A5182C MOV V3.16B, V8.16B
	0x03A51830 MOV X5, X31
	0x03A51834 STR X8, [X31 + 0x20]
	0x03A51838 BL 0x39E6D34
	0x03A5183C LDP X20, X19, [X31 + 0xB0]
	0x03A51840 LDP X22, X21, [X31 + 0xA0]
	0x03A51844 LDP X24, X23, [X31 + 0x90]
	0x03A51848 LDP X30, X25, [X31 + 0x80]
	0x03A5184C LDP D9, D8, [X31 + 0x70]
	0x03A51850 LDP D11, D10, [X31 + 0x60]
	0x03A51854 ADD X31, X31, 0xC0
	0x03A51858 RET
	0x03A5185C SUB X31, X31, 0x70
	0x03A51860 STP D11, D10, [X31 + 0x10]
	0x03A51864 STP D9, D8, [X31 + 0x20]
	0x03A51868 STP X30, X25, [X31 + 0x30]
	0x03A5186C STP X24, X23, [X31 + 0x40]
	0x03A51870 STP X22, X21, [X31 + 0x50]
	0x03A51874 STP X20, X19, [X31 + 0x60]
	0x03A51878 ADRP X25, 0x991000
	0x03A5187C ADRP X24, 0x6CA000
	0x03A51880 LDRB W8, [X25 + 0x1B8]
	0x03A51884 LDR X24, [X24 + 0x8F8]
	0x03A51888 MOV V8.16B, V3.16B
	0x03A5188C MOV V9.16B, V2.16B
	0x03A51890 MOV V10.16B, V1.16B
	0x03A51894 MOV V11.16B, V0.16B
	0x03A51898 MOV W19, W4
	0x03A5189C MOV W20, W3
	0x03A518A0 MOV W21, W2
	0x03A518A4 MOV X22, X1
	0x03A518A8 MOV X23, X0
	0x03A518AC TBNZ X8, 0x0, 0x3A518C4
	0x03A518B0 ADRP X0, 0x6CA000
	0x03A518B4 LDR X0, [X0 + 0x8F8]
	0x03A518B8 BL 0x1C16CF4
	0x03A518BC MOVZ W8, 0x1
	0x03A518C0 STRB W8, [X25 + 0x1B8]
	0x03A518C4 LDR X0, [X24]
	0x03A518C8 LDR W8, [X0 + 0xE0]
	0x03A518CC CBNZ W8, 0x3A518D4
	0x03A518D0 BL 0x1C16DFC
	0x03A518D4 MOVN W6, 0x0
	0x03A518D8 MOVN W7, 0x0
	0x03A518DC MOV X0, X23
	0x03A518E0 MOV X1, X22
	0x03A518E4 MOV W2, W21
	0x03A518E8 MOV W3, W20
	0x03A518EC MOV W4, W19
	0x03A518F0 MOV V0.16B, V11.16B
	0x03A518F4 MOV V1.16B, V10.16B
	0x03A518F8 MOV V2.16B, V9.16B
	0x03A518FC MOV V3.16B, V8.16B

ISIL:
	001 Subtract X31, X31, 192
	002 Move [X31+96], D11
	003 Move [X31+104], D10
	004 Move [X31+112], D9
	005 Move [X31+120], D8
	006 Move [X31+128], X30
	007 Move [X31+144], X24
	008 Move [X31+152], X23
	009 Move [X31+160], X22
	010 Move [X31+168], X21
	011 Move [X31+176], X20
	012 Move [X31+184], X19
	013 Move X23, 0x992000
	014 Move X24, 0x704000
	015 Move W8, [X23+443]
	016 Move X24, [X24+2248]
	017 Move V8, V3
	018 Move V9, V2
	019 Move V10, V1
	020 Move V11, V0
	021 Move W19, W3
	022 Move X22, X2
	023 Move X20, X1
	024 Move X21, X0
	025 Move TEMP, X8
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {37}
	029 Move X0, 0x6CB000
	030 Move X0, [X0+2296]
	031 Call 0x1C17CF4
	032 Move X0, 0x704000
	033 Move X0, [X0+2248]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X23+443], W8
	037 Move X0, [X24]
	038 Move X23, 0x6CB000
	039 Move W8, [X0+224]
	040 Move X23, [X23+2296]
	041 Compare W8, 0
	042 JumpIfNotEqual {45}
	043 Call 0x1C17DFC
	044 Move X0, [X24]
	045 Move X8, [X0+184]
	046 Move [X8+24], X20
	047 Move X9, [X22+32]
	048 Move V1, [X22]
	049 Move V0, [X22+16]
	050 Move [X8+64], X9
	051 Move [X8+32], V1
	052 Move [X8+40], V0
	053 Move X8, [X22+32]
	054 Move V1, [X22]
	055 Move V0, [X22+16]
	056 Move X0, [X23]
	057 Move [X31+80], X8
	058 Move [X31+48], V1
	059 Move [X31+56], V0
	060 Move W8, [X0+224]
	061 Compare W8, 0
	062 JumpIfNotEqual {64}
	063 Call 0x1C17DFC
	064 Move V0, [X31+48]
	065 Move V1, [X31+64]
	066 Move X8, [X31+80]
	067 Add X2, X31, 0
	068 Move X0, X21
	069 Move [X31], V0
	070 Move [X31+8], V1
	071 Move X1, X20
	072 Move W3, W19
	073 Move V0, V11
	074 Move V1, V10
	075 Move V2, V9
	076 Move V3, V8
	077 Move X4, X31
	078 Move [X31+32], X8
	079 Call CoreUtils.SetRenderTarget, X0, X1, X2, X3, X4
	080 Move X20, [X31+176]
	081 Move X19, [X31+184]
	082 Move X22, [X31+160]
	083 Move X21, [X31+168]
	084 Move X24, [X31+144]
	085 Move X23, [X31+152]
	086 Move X30, [X31+128]
	087 Move D9, [X31+112]
	088 Move D8, [X31+120]
	089 Move D11, [X31+96]
	090 Move D10, [X31+104]
	091 Add X31, X31, 192
	092 Return 

Method: System.Void SetRenderTarget(UnityEngine.Rendering.CommandBuffer cmd, UnityEngine.Rendering.RenderTargetIdentifier[] colorAttachments, UnityEngine.Rendering.RTHandle depthAttachment, UnityEngine.Rendering.ClearFlag clearFlag, UnityEngine.Color clearColor)

Disassembly:
	0x03A51900 MOV W5, W31
	0x03A51904 STR X31, [X31]
	0x03A51908 BL 0x39E329C
	0x03A5190C LDP X20, X19, [X31 + 0x60]
	0x03A51910 LDP X22, X21, [X31 + 0x50]
	0x03A51914 LDP X24, X23, [X31 + 0x40]
	0x03A51918 LDP X30, X25, [X31 + 0x30]
	0x03A5191C LDP D9, D8, [X31 + 0x20]
	0x03A51920 LDP D11, D10, [X31 + 0x10]
	0x03A51924 ADD X31, X31, 0x70
	0x03A51928 RET
	0x03A5192C SUB X31, X31, 0xD0
	0x03A51930 STP D11, D10, [X31 + 0x60]
	0x03A51934 STP D9, D8, [X31 + 0x70]
	0x03A51938 STR X30, [X31 + 0x80]
	0x03A5193C STP X26, X25, [X31 + 0x90]
	0x03A51940 STP X24, X23, [X31 + 0xA0]
	0x03A51944 STP X22, X21, [X31 + 0xB0]
	0x03A51948 STP X20, X19, [X31 + 0xC0]
	0x03A5194C ADRP X23, 0x991000
	0x03A51950 ADRP X24, 0x703000
	0x03A51954 LDRB W8, [X23 + 0x1BD]
	0x03A51958 LDR X24, [X24 + 0x8C8]
	0x03A5195C MOV V8.16B, V3.16B
	0x03A51960 MOV V9.16B, V2.16B
	0x03A51964 MOV V10.16B, V1.16B
	0x03A51968 MOV V11.16B, V0.16B
	0x03A5196C MOV W19, W3
	0x03A51970 MOV X20, X2
	0x03A51974 MOV X22, X1
	0x03A51978 MOV X21, X0
	0x03A5197C TBNZ X8, 0x0, 0x3A519AC
	0x03A51980 ADRP X0, 0x6CA000
	0x03A51984 LDR X0, [X0 + 0x8F8]
	0x03A51988 BL 0x1C16CF4
	0x03A5198C ADRP X0, 0x703000
	0x03A51990 LDR X0, [X0 + 0xB18]
	0x03A51994 BL 0x1C16CF4
	0x03A51998 ADRP X0, 0x703000
	0x03A5199C LDR X0, [X0 + 0x8C8]
	0x03A519A0 BL 0x1C16CF4
	0x03A519A4 MOVZ W8, 0x1
	0x03A519A8 STRB W8, [X23 + 0x1BD]
	0x03A519AC LDR X8, [X24]
	0x03A519B0 LDR W9, [X8 + 0xE0]
	0x03A519B4 CBNZ W9, 0x3A519C4
	0x03A519B8 MOV X0, X8
	0x03A519BC BL 0x1C16DFC
	0x03A519C0 LDR X8, [X24]
	0x03A519C4 LDR X9, [X8 + 0xB8]
	0x03A519C8 LDR X9, [X9 + 0x18]
	0x03A519CC CBZ X9, 0x3A51B78
	0x03A519D0 CBZ X22, 0x3A51B78
	0x03A519D4 LDR W9, [X9 + 0x18]
	0x03A519D8 LDR X1, [X22 + 0x18]
	0x03A519DC CMP W9, W1
	0x03A519E0 B.EQ 0x3A51A1C
	0x03A519E4 ADRP X8, 0x703000
	0x03A519E8 LDR X8, [X8 + 0xB18]
	0x03A519EC LDR X0, [X8]
	0x03A519F0 BL 0x1C16D6C
	0x03A519F4 LDR X8, [X24]
	0x03A519F8 MOV X23, X0
	0x03A519FC LDR W9, [X8 + 0xE0]
	0x03A51A00 CBNZ W9, 0x3A51A10
	0x03A51A04 MOV X0, X8

ISIL:
	001 Move [X31-96], D11
	002 Move [X31-88], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X30
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X24, 0x992000
	013 Move X23, 0x704000
	014 Move W8, [X24+444]
	015 Move X23, [X23+2248]
	016 Move V8, V3
	017 Move V9, V2
	018 Move V10, V1
	019 Move V11, V0
	020 Move W19, W3
	021 Move X20, X2
	022 Move X22, X1
	023 Move X21, X0
	024 Move TEMP, X8
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {36}
	028 Move X0, 0x6CB000
	029 Move X0, [X0+2296]
	030 Call 0x1C17CF4
	031 Move X0, 0x704000
	032 Move X0, [X0+2248]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X24+444], W8
	036 Move X0, [X23]
	037 Move W8, [X0+224]
	038 Compare W8, 0
	039 JumpIfNotEqual {42}
	040 Call 0x1C17DFC
	041 Move X0, [X23]
	042 Move X8, [X0+184]
	043 Move [X8+24], X22
	044 Compare X20, 0
	045 JumpIfEqual {84}
	046 Move X9, [X20+72]
	047 NotImplemented "Instruction LDUR not yet implemented."
	048 NotImplemented "Instruction LDUR not yet implemented."
	049 Move X10, 0x6CB000
	050 Move X10, [X10+2296]
	051 Move [X8+64], X9
	052 Move [X8+32], V1
	053 Move [X8+40], V0
	054 Move X9, [X0+184]
	055 Move X8, [X10]
	056 Move X22, [X9+24]
	057 Move W10, [X8+224]
	058 Compare W10, 0
	059 JumpIfNotEqual {62}
	060 Move X0, X8
	061 Call 0x1C17DFC
	062 Move X0, X21
	063 Move X1, X22
	064 Move X2, X20
	065 Move W3, W19
	066 Move V2, V9
	067 Move V3, V8
	068 Move X20, [X31+80]
	069 Move X19, [X31+88]
	070 Move X22, [X31+64]
	071 Move X21, [X31+72]
	072 Move X24, [X31+48]
	073 Move X23, [X31+56]
	074 Move X30, [X31+32]
	075 Move D9, [X31+16]
	076 Move D8, [X31+24]
	077 Move V0, V11
	078 Move V1, V10
	079 Move X4, X31
	080 Move D11, [X31+96]
	081 Move D10, [X31+104]
	082 Call CoreUtils.SetRenderTarget, X0, X1, X2, X3, X4
	083 Return 
	084 Call 0x1C17F20

Method: System.Void SetRenderTarget(UnityEngine.Rendering.CommandBuffer cmd, UnityEngine.Rendering.RTHandle[] colorAttachments, UnityEngine.Rendering.RTHandle depthAttachment, UnityEngine.Rendering.ClearFlag clearFlag, UnityEngine.Color clearColor)

Disassembly:
	0x03A5292C LDP V0, V1, [X22]
	0x03A52930 LDR X8, [X31 + 0x198]
	0x03A52934 STP V0, V1, [X31 + 0x2F0]
	0x03A52938 STR X8, [X31 + 0x310]
	0x03A5293C CBZ X20, 0x3A52B98
	0x03A52940 LDP V0, V1, [X31 + 0x2F0]
	0x03A52944 LDR X8, [X31 + 0x310]
	0x03A52948 STP V0, V1, [X31 + 0x150]
	0x03A5294C STR X8, [X31 + 0x170]
	0x03A52950 LDR W8, [X20 + 0x18]
	0x03A52954 CBZ W8, 0x3A52B94
	0x03A52958 LDR X8, [X31 + 0x170]
	0x03A5295C LDP V1, V0, [X31 + 0x150]
	0x03A52960 MOV W0, W31
	0x03A52964 MOV X1, X31
	0x03A52968 STR X8, [X20 + 0x40]
	0x03A5296C ADD X8, X31, 0x178
	0x03A52970 STP V1, V0, [X20 + 0x20]
	0x03A52974 BL 0x3C4B258
	0x03A52978 LDP V0, V1, [X22]
	0x03A5297C LDR X8, [X31 + 0x198]
	0x03A52980 STP V0, V1, [X31 + 0x120]
	0x03A52984 STR X8, [X31 + 0x140]
	0x03A52988 LDR W8, [X20 + 0x18]
	0x03A5298C CMP W8, 0x1
	0x03A52990 B.LS 0x3A52B94
	0x03A52994 LDR X8, [X31 + 0x140]
	0x03A52998 LDP V1, V0, [X31 + 0x120]
	0x03A5299C MOV W0, W31
	0x03A529A0 MOV X1, X31
	0x03A529A4 STR X8, [X20 + 0x68]
	0x03A529A8 ADD X8, X31, 0x178
	0x03A529AC STUR V0, [X20 + 0x58]
	0x03A529B0 STUR V1, [X20 + 0x48]
	0x03A529B4 BL 0x3C4B258
	0x03A529B8 LDP V0, V1, [X22]
	0x03A529BC LDR X8, [X31 + 0x198]
	0x03A529C0 STP V0, V1, [X31 + 0xF0]
	0x03A529C4 STR X8, [X31 + 0x110]
	0x03A529C8 LDR W8, [X20 + 0x18]
	0x03A529CC CMP W8, 0x2
	0x03A529D0 B.LS 0x3A52B94
	0x03A529D4 LDR X8, [X31 + 0x110]
	0x03A529D8 LDP V1, V0, [X31 + 0xF0]
	0x03A529DC MOV W0, W31
	0x03A529E0 MOV X1, X31
	0x03A529E4 STR X8, [X20 + 0x90]
	0x03A529E8 ADD X8, X31, 0x178
	0x03A529EC STP V1, V0, [X20 + 0x70]
	0x03A529F0 BL 0x3C4B258
	0x03A529F4 LDP V0, V1, [X22]
	0x03A529F8 LDR X8, [X31 + 0x198]
	0x03A529FC STP V0, V1, [X31 + 0xC0]
	0x03A52A00 STR X8, [X31 + 0xE0]
	0x03A52A04 LDR W8, [X20 + 0x18]
	0x03A52A08 CMP W8, 0x3
	0x03A52A0C B.LS 0x3A52B94
	0x03A52A10 LDR X8, [X31 + 0xE0]
	0x03A52A14 LDP V1, V0, [X31 + 0xC0]
	0x03A52A18 MOV W0, W31
	0x03A52A1C MOV X1, X31
	0x03A52A20 STR X8, [X20 + 0xB8]
	0x03A52A24 ADD X8, X31, 0x178
	0x03A52A28 STUR V0, [X20 + 0xA8]
	0x03A52A2C STUR V1, [X20 + 0x98]
	0x03A52A30 BL 0x3C4B258
	0x03A52A34 LDP V0, V1, [X22]
	0x03A52A38 LDR X8, [X31 + 0x198]
	0x03A52A3C STP V0, V1, [X31 + 0x90]
	0x03A52A40 STR X8, [X31 + 0xB0]
	0x03A52A44 LDR W8, [X20 + 0x18]
	0x03A52A48 CMP W8, 0x4
	0x03A52A4C B.LS 0x3A52B94
	0x03A52A50 LDR X8, [X31 + 0xB0]
	0x03A52A54 LDP V1, V0, [X31 + 0x90]
	0x03A52A58 MOV W0, W31
	0x03A52A5C MOV X1, X31
	0x03A52A60 STR X8, [X20 + 0xE0]
	0x03A52A64 ADD X8, X31, 0x178
	0x03A52A68 STP V1, V0, [X20 + 0xC0]
	0x03A52A6C BL 0x3C4B258
	0x03A52A70 LDP V0, V1, [X22]
	0x03A52A74 LDR X8, [X31 + 0x198]
	0x03A52A78 STP V0, V1, [X31 + 0x60]
	0x03A52A7C STR X8, [X31 + 0x80]
	0x03A52A80 LDR W8, [X20 + 0x18]
	0x03A52A84 CMP W8, 0x5
	0x03A52A88 B.LS 0x3A52B94
	0x03A52A8C LDR X8, [X31 + 0x80]
	0x03A52A90 LDP V1, V0, [X31 + 0x60]
	0x03A52A94 MOV W0, W31
	0x03A52A98 MOV X1, X31
	0x03A52A9C STR X8, [X20 + 0x108]
	0x03A52AA0 ADD X8, X31, 0x178
	0x03A52AA4 STUR V0, [X20 + 0xF8]
	0x03A52AA8 STUR V1, [X20 + 0xE8]
	0x03A52AAC BL 0x3C4B258
	0x03A52AB0 LDP V0, V1, [X22]
	0x03A52AB4 LDR X8, [X31 + 0x198]
	0x03A52AB8 STP V0, V1, [X31 + 0x30]
	0x03A52ABC STR X8, [X31 + 0x50]
	0x03A52AC0 LDR W8, [X20 + 0x18]
	0x03A52AC4 CMP W8, 0x6
	0x03A52AC8 B.LS 0x3A52B94
	0x03A52ACC LDR X8, [X31 + 0x50]
	0x03A52AD0 LDP V1, V0, [X31 + 0x30]
	0x03A52AD4 MOV W0, W31
	0x03A52AD8 MOV X1, X31
	0x03A52ADC STR X8, [X20 + 0x130]
	0x03A52AE0 ADD X8, X31, 0x178
	0x03A52AE4 STP V1, V0, [X20 + 0x110]
	0x03A52AE8 BL 0x3C4B258
	0x03A52AEC LDP V0, V1, [X22]
	0x03A52AF0 LDR X8, [X31 + 0x198]
	0x03A52AF4 STP V0, V1, [X31]
	0x03A52AF8 STR X8, [X31 + 0x20]
	0x03A52AFC LDR W8, [X20 + 0x18]
	0x03A52B00 CMP W8, 0x7
	0x03A52B04 B.LS 0x3A52B94
	0x03A52B08 LDR X8, [X31 + 0x20]
	0x03A52B0C LDP V0, V1, [X31]
	0x03A52B10 ADD X9, X20, 0x138
	0x03A52B14 ADD X10, X20, 0x148
	0x03A52B18 STR X8, [X20 + 0x158]
	0x03A52B1C STR V1, [X10]
	0x03A52B20 STR V0, [X9]
	0x03A52B24 LDR W8, [X19 + 0x18]
	0x03A52B28 CMP W8, 0x8
	0x03A52B2C B.LS 0x3A52B94
	0x03A52B30 STR X20, [X19 + 0x60]
	0x03A52B34 LDR X8, [X21]
	0x03A52B38 ADRP X9, 0x700000
	0x03A52B3C MOVZ W1, 0x6
	0x03A52B40 LDR X8, [X8 + 0xB8]
	0x03A52B44 LDR X9, [X9 + 0x590]
	0x03A52B48 STR X19, [X8 + 0x58]
	0x03A52B4C LDR X0, [X9]
	0x03A52B50 ADRP X19, 0x6FC000
	0x03A52B54 LDR X19, [X19 + 0x48]
	0x03A52B58 BL 0x1C16D6C
	0x03A52B5C LDR X8, [X21]
	0x03A52B60 MOVZ W1, 0x6
	0x03A52B64 LDR X8, [X8 + 0xB8]
	0x03A52B68 STR X0, [X8 + 0x60]
	0x03A52B6C LDR X0, [X19]
	0x03A52B70 BL 0x1C16D6C
	0x03A52B74 LDR X8, [X21]
	0x03A52B78 LDR X8, [X8 + 0xB8]

ISIL:
	001 Subtract X31, X31, 208
	002 Move [X31+96], D11
	003 Move [X31+104], D10
	004 Move [X31+112], D9
	005 Move [X31+120], D8
	006 Move [X31+128], X30
	007 Move [X31+144], X26
	008 Move [X31+152], X25
	009 Move [X31+160], X24
	010 Move [X31+168], X23
	011 Move [X31+176], X22
	012 Move [X31+184], X21
	013 Move [X31+192], X20
	014 Move [X31+200], X19
	015 Move X23, 0x991000
	016 Move X24, 0x703000
	017 Move W8, [X23+445]
	018 Move X24, [X24+2248]
	019 Move V8, V3
	020 Move V9, V2
	021 Move V10, V1
	022 Move V11, V0
	023 Move W19, W3
	024 Move X20, X2
	025 Move X22, X1
	026 Move X21, X0
	027 Move TEMP, X8
	028 And TEMP, TEMP, 1
	029 Compare TEMP, 1
	030 JumpIfEqual {42}
	031 Move X0, 0x6CA000
	032 Move X0, [X0+2296]
	033 Call 0x1C17CF4
	034 Move X0, 0x703000
	035 Move X0, [X0+2840]
	036 Call 0x1C17CF4
	037 Move X0, 0x703000
	038 Move X0, [X0+2248]
	039 Call 0x1C17CF4
	040 Move W8, 1
	041 Move [X23+445], W8
	042 Move X8, [X24]
	043 Move W9, [X8+224]
	044 Compare W9, 0
	045 JumpIfNotEqual {49}
	046 Move X0, X8
	047 Call 0x1C17DFC
	048 Move X8, [X24]
	049 Move X9, [X8+184]
	050 Move X9, [X9+24]
	051 Compare X9, 0
	052 JumpIfEqual {176}
	053 Compare X22, 0
	054 JumpIfEqual {176}
	055 Move W9, [X9+24]
	056 Move X1, [X22+24]
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Move X8, 0x703000
	059 Move X8, [X8+2840]
	060 Move X0, [X8]
	061 Call 0x1C17D6C
	062 Move X8, [X24]
	063 Move X23, X0
	064 Move W9, [X8+224]
	065 Compare W9, 0
	066 JumpIfNotEqual {70}
	067 Move X0, X8
	068 Call 0x1C17DFC
	069 Move X8, [X24]
	070 Move X9, [X8+184]
	071 Move [X9+24], X23
	072 Move X1, [X22+24]
	073 NotImplemented "Instruction CMP not yet implemented."
	074 Move X23, X31
	075 Add X25, X22, 32
	076 Move W26, 32
	077 Move W9, [X8+224]
	078 Compare W9, 0
	079 JumpIfNotEqual {84}
	080 Move X0, X8
	081 Call 0x1C17DFC
	082 Move X8, [X24]
	083 Move X1, [X22+24]
	084 NotImplemented "Instruction CMP not yet implemented."
	085 Move X9, [X25]
	086 Compare X9, 0
	087 JumpIfEqual {176}
	088 Move X8, [X8+184]
	089 NotImplemented "Instruction LDUR not yet implemented."
	090 Move X10, [X9+72]
	091 NotImplemented "Instruction LDUR not yet implemented."
	092 Move X8, [X8+24]
	093 Move [X31+80], X10
	094 Move [X31+48], V1
	095 Move [X31+56], V0
	096 Compare X8, 0
	097 JumpIfEqual {176}
	098 Move V0, [X31+48]
	099 Move V1, [X31+64]
	100 Move X9, [X31+80]
	101 Move [X31], V0
	102 Move [X31+8], V1
	103 Move [X31+32], X9
	104 Move W9, [X8+24]
	105 NotImplemented "Instruction CMP not yet implemented."
	106 Move X9, [X31+32]
	107 Move V1, [X31]
	108 Move V0, [X31+16]
	109 Add X8, X8, X26
	110 Move [X8+32], X9
	111 Move [X8], V1
	112 Move [X8+8], V0
	113 Move X1, [X22+24]
	114 Add W8, W23, 1
	115 NotImplemented "Instruction CMP not yet implemented."
	116 Move X8, [X24]
	117 Add X23, X23, 1
	118 Add X26, X26, 40
	119 Compare X20, 0
	120 JumpIfEqual {176}
	121 Move X8, [X20+72]
	122 NotImplemented "Instruction LDUR not yet implemented."
	123 NotImplemented "Instruction LDUR not yet implemented."
	124 Move X0, [X24]
	125 Move [X31+80], X8
	126 Move X22, 0x6CA000
	127 Move [X31+48], V1
	128 Move [X31+56], V0
	129 Move W8, [X0+224]
	130 Move X22, [X22+2296]
	131 Compare W8, 0
	132 JumpIfNotEqual {135}
	133 Call 0x1C17DFC
	134 Move X0, [X24]
	135 Move X8, [X0+184]
	136 Move X9, [X31+80]
	137 Move V1, [X31+48]
	138 Move V0, [X31+64]
	139 Move [X8+64], X9
	140 Move [X8+32], V1
	141 Move [X8+40], V0
	142 Move X8, [X22]
	143 Move X9, [X0+184]
	144 Move W10, [X8+224]
	145 Move X22, [X9+24]
	146 Compare W10, 0
	147 JumpIfNotEqual {150}
	148 Move X0, X8
	149 Call 0x1C17DFC
	150 Move X0, X21
	151 Move X1, X22
	152 Move X2, X20
	153 Move W3, W19
	154 Move V0, V11
	155 Move V1, V10
	156 Move V2, V9
	157 Move V3, V8
	158 Move X20, [X31+192]
	159 Move X19, [X31+200]
	160 Move X22, [X31+176]
	161 Move X21, [X31+184]
	162 Move X24, [X31+160]
	163 Move X23, [X31+168]
	164 Move X26, [X31+144]
	165 Move X25, [X31+152]
	166 Move X30, [X31+128]
	167 Move D9, [X31+112]
	168 Move D8, [X31+120]
	169 Move D11, [X31+96]
	170 Move D10, [X31+104]
	171 Move X4, X31
	172 Add X31, X31, 208
	173 Call CoreUtils.SetRenderTarget, X0, X1, X2, X3, X4
	174 Return 
	175 Call 0x1C17F28
	176 Call 0x1C17F20

Method: System.Void SwapColorBuffer(UnityEngine.Rendering.CommandBuffer cmd)

Disassembly:
	0x03A52B7C STR X0, [X8 + 0x68]

ISIL:
	001 Return 

Method: System.Void EnableSwapBufferMSAA(System.Boolean enable)

Disassembly:
	0x03A52B80 ADD X31, X31, 0xA70

ISIL:
	001 Return 

Method: System.Void DrawGizmos(UnityEngine.Rendering.ScriptableRenderContext context, UnityEngine.Camera camera, UnityEngine.Rendering.GizmoSubset gizmoSubset, ref UnityEngine.Rendering.Universal.RenderingData renderingData)

Disassembly:
	0x03A52B84 LDP X20, X19, [X31 + 0x20]

ISIL:
	001 Return 

Method: System.Void DrawWireOverlay(UnityEngine.Rendering.ScriptableRenderContext context, UnityEngine.Camera camera)

Disassembly:
	0x03A52B88 LDP X22, X21, [X31 + 0x10]
	0x03A52B8C LDP X29, X30, [X31], #0x30
	0x03A52B90 RET
	0x03A52B94 BL 0x1C16F28
	0x03A52B98 BL 0x1C16F20
	0x03A52B9C MOV X9, X1
	0x03A52BA0 LDP V1, V0, [X0]
	0x03A52BA4 UNIMPLEMENTED
	0x03A52BA8 LDP S19, S20, [X1 + 0x20]
	0x03A52BAC LDP S7, S16, [X1 + 0x10]
	0x03A52BB0 LDP S23, S24, [X1 + 0x30]
	0x03A52BB4 LDP V3, V4, [X0 + 0x20]
	0x03A52BB8 LDP S6, S5, [X1 + 0x8]
	0x03A52BBC LDP S17, S18, [X1 + 0x18]
	0x03A52BC0 LDP S21, S22, [X1 + 0x28]
	0x03A52BC4 LDP S25, S26, [X1 + 0x38]
	0x03A52BC8 UNIMPLEMENTED
	0x00000000 INVALID
	0x00000000 INVALID
	0x00000000 INVALID
	0x00000000 INVALID
	0x00000000 INVALID
	0x00000000 INVALID
	0x00000000 INVALID
	0x03A52BE8 FADD V19.4S, V19.4S, V20.4S
	0x00000000 INVALID
	0x03A52BF0 FADD V1.4S, V1.4S, V20.4S

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x991000
	007 Move [X31+8], X1
	008 Move X21, 0x6FF000
	009 Move W8, [X20+446]
	010 Move X21, [X21+3200]
	011 Move X19, X2
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x6FF000
	017 Move X0, [X0+3200]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X20+446], W8
	021 Move X0, [X21]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Add X0, X31, 8
	027 Move X1, X19
	028 Move X2, X31
	029 Call ScriptableRenderContext.DrawWireOverlay, X0, X1
	030 Move X20, [X31+32]
	031 Move X19, [X31+40]
	032 Move X30, [X31+16]
	033 Move X21, [X31+24]
	034 Add X31, X31, 48
	035 Return 

Method: System.Void InternalStartRendering(UnityEngine.Rendering.ScriptableRenderContext context, ref UnityEngine.Rendering.Universal.RenderingData renderingData)

Disassembly:
	0x03A4EE14 CBNZ X8, 0x3A4EDE0
	0x03A4EE18 BL 0x1C16F20
	0x03A4EE1C CMP W21, 0x1
	0x03A4EE20 B.LT 0x3A4EE50
	0x03A4EE24 LDR W8, [X19 + 0xF8]
	0x03A4EE28 CBNZ W8, 0x3A4EE50
	0x03A4EE2C ADRP X19, 0x706000
	0x03A4EE30 LDR X19, [X19 + 0x8C8]
	0x03A4EE34 LDR X0, [X19]
	0x03A4EE38 LDR W8, [X0 + 0xE0]
	0x03A4EE3C CBNZ W8, 0x3A4EE48
	0x03A4EE40 BL 0x1C16DFC
	0x03A4EE44 LDR X0, [X19]
	0x03A4EE48 LDR X8, [X0 + 0xB8]
	0x03A4EE4C STRB W31, [X8 + 0x8]
	0x03A4EE50 ADD X0, X31, 0x8
	0x03A4EE54 MOV X1, X31
	0x03A4EE58 BL 0x39B1DB4
	0x03A4EE5C LDP X20, X19, [X31 + 0x30]
	0x03A4EE60 LDP X22, X21, [X31 + 0x20]
	0x03A4EE64 LDP X30, X23, [X31 + 0x10]
	0x03A4EE68 ADD X31, X31, 0x40
	0x03A4EE6C RET
	0x03A4EE70 BL 0x1C16F20
	0x03A4EE74 BL 0x1C16F20
	0x03A4EE78 BL 0x1C16F20
	0x03A4EE7C BL 0x1C16F20
	0x03A4EE80 BL 0x1C16F20
	0x03A4EE84 BL 0x1C16F20
	0x03A4EE88 BL 0x1C16F20
	0x03A4EE8C B 0x3A4EECC
	0x03A4EE90 B 0x3A4EECC
	0x03A4EE94 B 0x3A4EECC
	0x03A4EE98 B 0x3A4EECC
	0x03A4EE9C B 0x3A4EECC
	0x03A4EEA0 B 0x3A4EECC
	0x03A4EEA4 B 0x3A4EECC
	0x03A4EEA8 B 0x3A4EECC
	0x03A4EEAC B 0x3A4EECC
	0x03A4EEB0 B 0x3A4EECC
	0x03A4EEB4 B 0x3A4EECC
	0x03A4EEB8 B 0x3A4EECC
	0x03A4EEBC B 0x3A4EECC
	0x03A4EEC0 B 0x3A4EECC
	0x03A4EEC4 B 0x3A4EECC
	0x03A4EEC8 B 0x3A4EECC
	0x03A4EECC MOV X19, X0
	0x03A4EED0 CMP W1, 0x1
	0x03A4EED4 B.NE 0x3A4EF00
	0x03A4EED8 MOV X0, X19
	0x03A4EEDC BL 0x3EB1AD0
	0x03A4EEE0 LDR X20, [X0]
	0x03A4EEE4 BL 0x3EB1AE0
	0x03A4EEE8 ADD X0, X31, 0x8
	0x03A4EEEC MOV X1, X31
	0x03A4EEF0 BL 0x39B1DB4
	0x03A4EEF4 CBZ X20, 0x3A4EE5C
	0x03A4EEF8 MOV X0, X20
	0x03A4EEFC BL 0x1C16F18
	0x03A4EF00 MOV X20, X31
	0x03A4EF04 B 0x3A4EF0C
	0x03A4EF08 MOV X19, X0
	0x03A4EF0C ADD X0, X31, 0x8
	0x03A4EF10 MOV X1, X31
	0x03A4EF14 BL 0x39B1DB4
	0x03A4EF18 CBNZ X20, 0x3A4EF24
	0x03A4EF1C MOV X0, X19
	0x03A4EF20 BL 0x1D2C690
	0x03A4EF24 MOV X0, X20
	0x03A4EF28 BL 0x1C16F18
	0x03A4EF2C BL 0x1990590
	0x03A4EF30 SUB X31, X31, 0x70
	0x03A4EF34 STP X30, X25, [X31 + 0x30]
	0x03A4EF38 STP X24, X23, [X31 + 0x40]
	0x03A4EF3C STP X22, X21, [X31 + 0x50]
	0x03A4EF40 STP X20, X19, [X31 + 0x60]
	0x03A4EF44 ADRP X19, 0x994000
	0x03A4EF48 LDRB W8, [X19 + 0x1AF]
	0x03A4EF4C MOV X20, X3
	0x03A4EF50 MOV X21, X2
	0x03A4EF54 MOV X22, X0
	0x03A4EF58 STR X1, [X31 + 0x28]
	0x03A4EF5C TBNZ X8, 0x0, 0x3A4EF8C
	0x03A4EF60 ADRP X0, 0x707000
	0x03A4EF64 LDR X0, [X0 + 0xF08]
	0x03A4EF68 BL 0x1C16CF4
	0x03A4EF6C ADRP X0, 0x702000
	0x03A4EF70 LDR X0, [X0 + 0xC80]
	0x03A4EF74 BL 0x1C16CF4
	0x03A4EF78 ADRP X0, 0x707000
	0x03A4EF7C LDR X0, [X0 + 0xDC8]
	0x03A4EF80 BL 0x1C16CF4
	0x03A4EF84 MOVZ W8, 0x1
	0x03A4EF88 STRB W8, [X19 + 0x1AF]
	0x03A4EF8C STRB W31, [X31 + 0x20]
	0x03A4EF90 STRB W31, [X31 + 0x18]
	0x03A4EF94 CBZ X21, 0x3A4F1E4
	0x03A4EF98 LDR X2, [X21 + 0x38]
	0x03A4EF9C ADD X0, X31, 0x20
	0x03A4EFA0 MOV X1, X31
	0x03A4EFA4 MOV X3, X31
	0x03A4EFA8 BL 0x39B1DB0
	0x03A4EFAC LDR X0, [X20 + 0x190]
	0x03A4EFB0 CBZ X0, 0x3A4F1E8
	0x03A4EFB4 LDR X19, [X20]
	0x03A4EFB8 MOV X1, X31
	0x03A4EFBC BL 0x398841C
	0x03A4EFC0 TBZ X0, 0x0, 0x3A4EFE8
	0x03A4EFC4 LDR W8, [X21 + 0x10]
	0x03A4EFC8 SUB W8, W8, 0x96
	0x03A4EFCC CMP W8, 0x18F

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X1
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X22, 0x995000
	009 Move X21, 0x708000
	010 Move W8, [X22+447]
	011 Move X21, [X21+3376]
	012 Move X19, X2
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {32}
	018 Move X0, 0x707000
	019 Move X0, [X0+2312]
	020 Call 0x1C17CF4
	021 Move X0, 0x707000
	022 Move X0, [X0+2320]
	023 Call 0x1C17CF4
	024 Move X0, 0x708000
	025 Move X0, [X0+3376]
	026 Call 0x1C17CF4
	027 Move X0, 0x703000
	028 Move X0, [X0+3200]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X22+447], W8
	032 Move X0, [X21]
	033 Move [X31+8], W31
	034 Move W8, [X0+224]
	035 Compare W8, 0
	036 JumpIfNotEqual {39}
	037 Call 0x1C17DFC
	038 Move X0, [X21]
	039 Move X8, [X0+184]
	040 Add X0, X31, 8
	041 Move X1, X31
	042 Move X3, X31
	043 Move X2, [X8+96]
	044 Call ProfilingScope..ctor, X0, X1, X2
	045 Move X0, [X20+256]
	046 Compare X0, 0
	047 JumpIfEqual {68}
	048 Move X22, 0x707000
	049 Move X22, [X22+2320]
	050 Move W21, W31
	051 Move W8, [X0+24]
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Move X2, [X22]
	054 Move W1, W21
	055 Call List`1<Object>.get_Item, X0, X1
	056 Compare X0, 0
	057 JumpIfEqual {96}
	058 Move X8, [X0]
	059 Move X1, [X19]
	060 Move X9, [X8+392]
	061 Move X3, [X8+400]
	062 Move X2, X19
	063 NotImplemented "Instruction BLR not yet implemented."
	064 Move X0, [X20+256]
	065 Add W21, W21, 1
	066 Compare X0, 0
	067 JumpIfNotEqual {51}
	068 Call 0x1C17F20
	069 Add X0, X31, 8
	070 Move X1, X31
	071 Call ProfilingScope.Dispose, X0
	072 Move X8, 0x703000
	073 Move X8, [X8+3200]
	074 Move X20, [X19]
	075 Move X0, [X8]
	076 Move W8, [X0+224]
	077 Compare W8, 0
	078 JumpIfNotEqual {80}
	079 Call 0x1C17DFC
	080 Add X0, X31, 24
	081 Move X1, X20
	082 Move X2, X31
	083 Call ScriptableRenderContext.ExecuteCommandBuffer, X0, X1
	084 Move X0, [X19]
	085 Compare X0, 0
	086 JumpIfEqual {97}
	087 Move X1, X31
	088 Call CommandBuffer.Clear, X0
	089 Move X20, [X31+48]
	090 Move X19, [X31+56]
	091 Move X22, [X31+32]
	092 Move X21, [X31+40]
	093 Move X30, [X31+16]
	094 Add X31, X31, 64
	095 Return 
	096 Call 0x1C17F20
	097 Call 0x1C17F20
	098 Move X20, X0
	099 NotImplemented "Instruction CMP not yet implemented."
	100 Move X0, X20
	101 Call 0x3EB2AD0
	102 Move X21, [X0]
	103 Call 0x3EB2AE0
	104 Add X0, X31, 8
	105 Move X1, X31
	106 Call ProfilingScope.Dispose, X0
	107 Compare X21, 0
	108 JumpIfEqual {72}
	109 Move X0, X21
	110 Call 0x1C17F18
	111 Move X21, X31
	112 Move X20, X0
	113 Add X0, X31, 8
	114 Move X1, X31
	115 Call ProfilingScope.Dispose, X0
	116 Compare X21, 0
	117 JumpIfNotEqual {120}
	118 Move X0, X20
	119 Call 0x1D2D690
	120 Move X0, X21
	121 Call 0x1C17F18
	122 Call 0x1991590

Method: System.Void InternalFinishRendering(System.Boolean resolveFinalTarget, UnityEngine.Rendering.Universal.RenderingData renderingData)

Disassembly:
	0x03A4D7C0 ADRP X28, 0x703000
	0x03A4D7C4 LDR X28, [X28 + 0xD20]
	0x03A4D7C8 B 0x3A4D5A0
	0x03A4D7CC MOV X23, X31
	0x03A4D7D0 ADD X0, X31, 0x300
	0x03A4D7D4 MOV X1, X31
	0x03A4D7D8 BL 0x39B1DB4
	0x03A4D7DC CBZ X23, 0x3A4DB1C
	0x03A4D7E0 MOV X0, X23
	0x03A4D7E4 BL 0x1C16F18
	0x03A4D7E8 MOV X24, X1
	0x03A4D7EC MOV X28, X0
	0x03A4D7F0 B 0x3A4D7D0
	0x03A4D7F4 B 0x3A4DB14
	0x03A4D7F8 B 0x3A4D8E0
	0x03A4D7FC MOV X24, X1
	0x03A4D800 MOV X28, X0
	0x03A4D804 CMP W24, 0x1
	0x03A4D808 B.NE 0x3A4D82C
	0x03A4D80C MOV X0, X28
	0x03A4D810 BL 0x3EB1AD0
	0x03A4D814 LDR X23, [X0]
	0x03A4D818 BL 0x3EB1AE0
	0x03A4D81C ADRP X28, 0x703000
	0x03A4D820 LDR X28, [X28 + 0xD20]
	0x03A4D824 MOV W27, W31
	0x03A4D828 B 0x3A4D4C0
	0x03A4D82C MOV X23, X31
	0x03A4D830 ADD X0, X31, 0x308
	0x03A4D834 MOV X1, X31
	0x03A4D838 BL 0x39B1DB4
	0x03A4D83C CBZ X23, 0x3A4DB1C
	0x03A4D840 MOV X0, X23
	0x03A4D844 BL 0x1C16F18
	0x03A4D848 MOV X24, X1
	0x03A4D84C MOV X28, X0
	0x03A4D850 B 0x3A4D830
	0x03A4D854 B 0x3A4DB14
	0x03A4D858 MOV X24, X1
	0x03A4D85C MOV X28, X0
	0x03A4D860 CMP W24, 0x1
	0x03A4D864 B.NE 0x3A4D888
	0x03A4D868 MOV X0, X28
	0x03A4D86C BL 0x3EB1AD0
	0x03A4D870 LDR X23, [X0]
	0x03A4D874 BL 0x3EB1AE0
	0x03A4D878 ADRP X28, 0x703000
	0x03A4D87C LDR X28, [X28 + 0xD20]
	0x03A4D880 MOV W27, W31
	0x03A4D884 B 0x3A4D404
	0x03A4D888 MOV X23, X31
	0x03A4D88C ADD X0, X31, 0x310
	0x03A4D890 MOV X1, X31
	0x03A4D894 BL 0x39B1DB4
	0x03A4D898 CBZ X23, 0x3A4DB1C
	0x03A4D89C MOV X0, X23
	0x03A4D8A0 BL 0x1C16F18
	0x03A4D8A4 MOV X24, X1
	0x03A4D8A8 MOV X28, X0
	0x03A4D8AC B 0x3A4D88C
	0x03A4D8B0 B 0x3A4DB14
	0x03A4D8B4 B 0x3A4DB14
	0x03A4D8B8 B 0x3A4DB14
	0x03A4D8BC B 0x3A4DB14
	0x03A4D8C0 B 0x3A4DB14
	0x03A4D8C4 B 0x3A4DB14
	0x03A4D8C8 B 0x3A4DB14
	0x03A4D8CC B 0x3A4DB14
	0x03A4D8D0 B 0x3A4DB14
	0x03A4D8D4 B 0x3A4DB14
	0x03A4D8D8 B 0x3A4DB14
	0x03A4D8DC B 0x3A4DB14
	0x03A4D8E0 MOV X24, X1
	0x03A4D8E4 MOV X28, X0
	0x03A4D8E8 CMP W24, 0x1
	0x03A4D8EC B.NE 0x3A4D918
	0x03A4D8F0 MOV X0, X28
	0x03A4D8F4 BL 0x3EB1AD0
	0x03A4D8F8 LDR X8, [X0]
	0x03A4D8FC STR X8, [X31 + 0x3C8]
	0x03A4D900 BL 0x3EB1AE0
	0x03A4D904 ADRP X28, 0x703000
	0x03A4D908 LDR X24, [X31 + 0x3C8]
	0x03A4D90C LDR X28, [X28 + 0xD20]
	0x03A4D910 MOV W27, W31
	0x03A4D914 B 0x3A4D26C
	0x03A4D918 STR X31, [X31 + 0x3C8]
	0x03A4D91C ADD X0, X31, 0x318
	0x03A4D920 MOV X1, X31
	0x03A4D924 BL 0x39B1DB4
	0x03A4D928 LDR X8, [X31 + 0x3C8]
	0x03A4D92C CBZ X8, 0x3A4DB1C
	0x03A4D930 LDR X0, [X31 + 0x3C8]
	0x03A4D934 BL 0x1C16F18
	0x03A4D938 MOV X24, X1
	0x03A4D93C MOV X28, X0
	0x03A4D940 B 0x3A4D91C
	0x03A4D944 B 0x3A4DB14
	0x03A4D948 B 0x3A4DB14
	0x03A4D94C B 0x3A4DB14
	0x03A4D950 B 0x3A4DB14
	0x03A4D954 B 0x3A4D964
	0x03A4D958 B 0x3A4DB14
	0x03A4D95C B 0x3A4DAEC
	0x03A4D960 B 0x3A4DB14
	0x03A4D964 MOV X24, X1
	0x03A4D968 MOV X28, X0
	0x03A4D96C CMP W24, 0x1
	0x03A4D970 B.NE 0x3A4D994
	0x03A4D974 MOV X0, X28
	0x03A4D978 BL 0x3EB1AD0
	0x03A4D97C LDR X23, [X0]
	0x03A4D980 BL 0x3EB1AE0
	0x03A4D984 ADRP X28, 0x703000
	0x03A4D988 LDR X28, [X28 + 0xD20]
	0x03A4D98C MOV W27, W31
	0x03A4D990 B 0x3A4D304
	0x03A4D994 MOV X23, X31
	0x03A4D998 ADD X0, X31, 0x338
	0x03A4D99C MOV X1, X31
	0x03A4D9A0 BL 0x39B1DB4
	0x03A4D9A4 CBZ X23, 0x3A4DB1C
	0x03A4D9A8 MOV X0, X23
	0x03A4D9AC BL 0x1C16F18
	0x03A4D9B0 MOV X24, X1
	0x03A4D9B4 MOV X28, X0
	0x03A4D9B8 B 0x3A4D998
	0x03A4D9BC B 0x3A4DB14
	0x03A4D9C0 MOV X24, X1
	0x03A4D9C4 CMP W24, 0x1
	0x03A4D9C8 MOV X28, X0
	0x03A4D9CC B.NE 0x3A4D9F8
	0x03A4D9D0 MOV X0, X28
	0x03A4D9D4 BL 0x3EB1AD0
	0x03A4D9D8 LDR X8, [X0]
	0x03A4D9DC STR X8, [X31 + 0x3C8]
	0x03A4D9E0 BL 0x3EB1AE0
	0x03A4D9E4 ADRP X28, 0x703000
	0x03A4D9E8 LDR X24, [X31 + 0x3C8]
	0x03A4D9EC LDR X28, [X28 + 0xD20]
	0x03A4D9F0 MOV W27, W31
	0x03A4D9F4 B 0x3A4D1A8

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0x996000
	009 Move X22, 0x709000
	010 Move W8, [X23+448]
	011 Move X22, [X22+3376]
	012 Move X20, X2
	013 Move W21, W1
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {33}
	019 Move X0, 0x709000
	020 Move X0, [X0+3280]
	021 Call 0x1C17CF4
	022 Move X0, 0x708000
	023 Move X0, [X0+2312]
	024 Call 0x1C17CF4
	025 Move X0, 0x708000
	026 Move X0, [X0+2320]
	027 Call 0x1C17CF4
	028 Move X0, 0x709000
	029 Move X0, [X0+3376]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X23+448], W8
	033 Move X0, [X22]
	034 Move [X31+8], W31
	035 Move W8, [X0+224]
	036 Compare W8, 0
	037 JumpIfNotEqual {40}
	038 Call 0x1C17DFC
	039 Move X0, [X22]
	040 Move X8, [X0+184]
	041 Add X0, X31, 8
	042 Move X1, X31
	043 Move X3, X31
	044 Move X2, [X8+104]
	045 Call ProfilingScope..ctor, X0, X1, X2
	046 Move X8, [X19+256]
	047 Compare X8, 0
	048 JumpIfEqual {69}
	049 Move X23, 0x708000
	050 Move X23, [X23+2320]
	051 Move W22, W31
	052 Move W9, [X8+24]
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Move X2, [X23]
	055 Move X0, X8
	056 Move W1, W22
	057 Call List`1<Object>.get_Item, X0, X1
	058 Compare X0, 0
	059 JumpIfEqual {124}
	060 Move X8, [X0]
	061 Move X1, [X20]
	062 Move X9, [X8+376]
	063 Move X2, [X8+384]
	064 NotImplemented "Instruction BLR not yet implemented."
	065 Move X8, [X19+256]
	066 Add W22, W22, 1
	067 Compare X8, 0
	068 JumpIfNotEqual {52}
	069 Call 0x1C17F20
	070 Move TEMP, X21
	071 And TEMP, TEMP, 1
	072 Compare TEMP, 1
	073 JumpIfNotEqual {103}
	074 NotImplemented "Instruction CMP not yet implemented."
	075 Move W21, W31
	076 Move X2, [X23]
	077 Move X0, X8
	078 Move W1, W21
	079 Call List`1<Object>.get_Item, X0, X1
	080 Compare X0, 0
	081 JumpIfEqual {125}
	082 Move X8, [X0]
	083 Move X1, [X20]
	084 Move X9, [X8+440]
	085 Move X2, [X8+448]
	086 NotImplemented "Instruction BLR not yet implemented."
	087 Move X8, [X19+256]
	088 Compare X8, 0
	089 JumpIfEqual {126}
	090 Move W9, [X8+24]
	091 Add W21, W21, 1
	092 NotImplemented "Instruction CMP not yet implemented."
	093 Move X8, [X19]
	094 Move X1, [X20]
	095 Move X9, [X8+520]
	096 Move X2, [X8+528]
	097 Move X0, X19
	098 NotImplemented "Instruction BLR not yet implemented."
	099 Move X8, [X19+256]
	100 Move [X19+418], W31
	101 Compare X8, 0
	102 JumpIfEqual {127}
	103 Move W2, [X8+24]
	104 Move W9, [X8+28]
	105 Add W9, W9, 1
	106 NotImplemented "Instruction CMP not yet implemented."
	107 Move [X8+24], W31
	108 Move [X8+28], W9
	109 Move X0, [X8+16]
	110 Move W1, W31
	111 Move X3, X31
	112 Call Array.Clear, X0, X1, X2
	113 Add X0, X31, 8
	114 Move X1, X31
	115 Call ProfilingScope.Dispose, X0
	116 Move X20, [X31+48]
	117 Move X19, [X31+56]
	118 Move X22, [X31+32]
	119 Move X21, [X31+40]
	120 Move X30, [X31+16]
	121 Move X23, [X31+24]
	122 Add X31, X31, 64
	123 Return 
	124 Call 0x1C17F20
	125 Call 0x1C17F20
	126 Call 0x1C17F20
	127 Call 0x1C17F20
	128 Move X19, X0
	129 NotImplemented "Instruction CMP not yet implemented."
	130 Move X0, X19
	131 Call 0x3EB2AD0
	132 Move X20, [X0]
	133 Call 0x3EB2AE0
	134 Add X0, X31, 8
	135 Move X1, X31
	136 Call ProfilingScope.Dispose, X0
	137 Compare X20, 0
	138 JumpIfEqual {116}
	139 Move X0, X20
	140 Call 0x1C17F18
	141 Move X20, X31
	142 Move X19, X0
	143 Add X0, X31, 8
	144 Move X1, X31
	145 Call ProfilingScope.Dispose, X0
	146 Compare X20, 0
	147 JumpIfNotEqual {150}
	148 Move X0, X19
	149 Call 0x1D2D690
	150 Move X0, X20
	151 Call 0x1C17F18
	152 Call 0x1991590

Method: System.Void InternalFinishRendering(UnityEngine.Rendering.ScriptableRenderContext context, System.Boolean resolveFinalTarget, UnityEngine.Rendering.Universal.RenderingData renderingData)

Disassembly:
	0x03A4F8A8 MOV X1, X31
	0x03A4F8AC BL 0x3A53368
	0x03A4F8B0 LDR X8, [X31 + 0x140]
	0x03A4F8B4 LDP V0, V1, [X31 + 0x120]
	0x03A4F8B8 MOV X0, X23
	0x03A4F8BC MOV X1, X31
	0x03A4F8C0 STR X8, [X31 + 0x170]
	0x03A4F8C4 ADD X8, X31, 0x120
	0x03A4F8C8 STP V0, V1, [X31 + 0x150]
	0x03A4F8CC BL 0x3A53368
	0x03A4F8D0 LDP V0, V1, [X31 + 0x120]
	0x03A4F8D4 LDR X8, [X31 + 0x140]
	0x03A4F8D8 LDP V2, V3, [X31 + 0x150]
	0x03A4F8DC LDR X9, [X31 + 0x170]
	0x03A4F8E0 ADD X0, X31, 0x2D0
	0x03A4F8E4 ADD X1, X31, 0x2A0
	0x03A4F8E8 MOV X2, X31
	0x03A4F8EC STP V0, V1, [X31 + 0x2A0]
	0x03A4F8F0 STR X8, [X31 + 0x2C0]
	0x03A4F8F4 STP V2, V3, [X31 + 0x2D0]
	0x03A4F8F8 STR X9, [X31 + 0x2F0]
	0x03A4F8FC BL 0x3C4B6D8
	0x03A4F900 TBZ X0, 0x0, 0x3A4F914
	0x03A4F904 LDRB W8, [X22 + 0x1A1]
	0x03A4F908 CBZ W8, 0x3A4F914
	0x03A4F90C STRB W31, [X22 + 0x1A1]
	0x03A4F910 B 0x3A4F918
	0x03A4F914 LDR W19, [X21 + 0xCC]
	0x03A4F918 LDR X0, [X22 + 0xE0]
	0x03A4F91C CBZ X0, 0x3A4F944
	0x03A4F920 MOV X1, X20
	0x03A4F924 MOV X2, X31
	0x03A4F928 BL 0x3A35D04
	0x03A4F92C TBZ X0, 0x0, 0x3A4F944
	0x03A4F930 LDR X0, [X22 + 0xE0]
	0x03A4F934 CBZ X0, 0x3A507DC
	0x03A4F938 ADD X1, X31, 0x900
	0x03A4F93C MOV X2, X31
	0x03A4F940 BL 0x3A359E0
	0x03A4F944 LDRB W8, [X21 + 0x42]
	0x03A4F948 AND W9, W19, 0x6
	0x03A4F94C ORR W23, W9, W24, 0x0
	0x03A4F950 CBZ W8, 0x3A4F9AC
	0x03A4F954 LDRB W8, [X21 + 0x70]
	0x03A4F958 CBZ W8, 0x3A4F9AC
	0x03A4F95C LDRB W8, [X22 + 0x1A4]
	0x03A4F960 CBZ W8, 0x3A4F9AC
	0x03A4F964 MOV X0, X20
	0x03A4F968 MOV X1, X31

ISIL:
	001 Move [X31-64], X29
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Subtract X31, X31, 704
	009 Move X23, 0x994000
	010 Move [X31+712], X1
	011 Move X22, 0x702000
	012 Move W8, [X23+449]
	013 Move X22, [X22+3200]
	014 Move X19, X3
	015 Move W21, W2
	016 Move X20, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {26}
	021 Move X0, 0x702000
	022 Move X0, [X0+3200]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X23+449], W8
	026 Add X0, X31, 8
	027 Move W2, 696
	028 Move X1, X19
	029 Call 0x3EB2AC0
	030 And W1, W21, 1
	031 Add X2, X31, 8
	032 Move X0, X20
	033 Call ScriptableRenderer.InternalFinishRendering, X0, X1, X2
	034 Move X0, X20
	035 Call ScriptableRenderer.ResetNativeRenderPassFrameData, X0
	036 Move X0, [X22]
	037 Move X20, [X19]
	038 Move W8, [X0+224]
	039 Compare W8, 0
	040 JumpIfNotEqual {42}
	041 Call 0x1C17DFC
	042 Add X0, X31, 712
	043 Move X1, X20
	044 Move X2, X31
	045 Call ScriptableRenderContext.ExecuteCommandBuffer, X0, X1
	046 Move X0, [X19]
	047 Compare X0, 0
	048 JumpIfEqual {60}
	049 Move X1, X31
	050 Call CommandBuffer.Clear, X0
	051 Add X31, X31, 704
	052 Move X20, [X31+48]
	053 Move X19, [X31+56]
	054 Move X22, [X31+32]
	055 Move X21, [X31+40]
	056 Move X30, [X31+16]
	057 Move X23, [X31+24]
	058 Move X29, [X31+64]
	059 Return 
	060 Call 0x1C17F20

Method: System.Void SortStable(System.Collections.Generic.List`1<UnityEngine.Rendering.Universal.ScriptableRenderPass> list)

Disassembly:
	0x03A4D600 LDR X23, [X23 + 0x148]
	0x03A4D604 MOV W21, W31
	0x03A4D608 LDR W8, [X0 + 0x18]
	0x03A4D60C CMP W21, W8
	0x03A4D610 B.GE 0x3A4D66C
	0x03A4D614 LDR X2, [X22]
	0x03A4D618 MOV W1, W21
	0x03A4D61C BL 0x301BCCC
	0x03A4D620 CBZ X0, 0x3A4D72C
	0x03A4D624 LDR X1, [X23]
	0x03A4D628 ADD X0, X0, 0x48
	0x03A4D62C BL 0x23D5AD4
	0x03A4D630 LDR X0, [X20 + 0x100]
	0x03A4D634 CBZ X0, 0x3A4D724
	0x03A4D638 LDR X2, [X22]
	0x03A4D63C MOV W1, W21
	0x03A4D640 BL 0x301BCCC
	0x03A4D644 CBZ X0, 0x3A4D728
	0x03A4D648 LDR X1, [X23]
	0x03A4D64C ADD X0, X0, 0x58
	0x03A4D650 BL 0x23D5AD4
	0x03A4D654 LDR X0, [X20 + 0x100]
	0x03A4D658 ADD W21, W21, 0x1
	0x03A4D65C CBNZ X0, 0x3A4D608
	0x03A4D660 BL 0x1C16F20
	0x03A4D664 MOV X20, X31
	0x03A4D668 B 0x3A4D674
	0x03A4D66C MOV X20, X31
	0x03A4D670 MOVZ W27, 0x13
	0x03A4D674 ADD X0, X31, 0x340
	0x03A4D678 MOV X1, X31
	0x03A4D67C BL 0x3A536BC
	0x03A4D680 CBNZ X20, 0x3A4D758
	0x03A4D684 CBZ W27, 0x3A4D6A4
	0x03A4D688 ADD X0, X31, 0x370
	0x03A4D68C MOV X1, X31
	0x03A4D690 BL 0x39B1DB4
	0x03A4D694 CMP W27, 0x13
	0x03A4D698 B.EQ 0x3A4D6B0
	0x03A4D69C CBZ W27, 0x3A4D6B0
	0x03A4D6A0 B 0x3A4D6F4
	0x03A4D6A4 ADD X0, X31, 0x370
	0x03A4D6A8 MOV X1, X31
	0x03A4D6AC BL 0x39B1DB4
	0x03A4D6B0 ADRP X8, 0x703000
	0x03A4D6B4 LDR X8, [X8 + 0xC80]
	0x03A4D6B8 LDR X0, [X8]
	0x03A4D6BC LDR W8, [X0 + 0xE0]
	0x03A4D6C0 CBNZ W8, 0x3A4D6C8
	0x03A4D6C4 BL 0x1C16DFC
	0x03A4D6C8 ADD X0, X31, 0x378
	0x03A4D6CC MOV X1, X19
	0x03A4D6D0 MOV X2, X31
	0x03A4D6D4 BL 0x3C58FE4
	0x03A4D6D8 LDR X0, [X28]
	0x03A4D6DC LDR W8, [X0 + 0xE0]
	0x03A4D6E0 CBNZ W8, 0x3A4D6E8
	0x03A4D6E4 BL 0x1C16DFC
	0x03A4D6E8 MOV X0, X19
	0x03A4D6EC MOV X1, X31
	0x03A4D6F0 BL 0x399D650
	0x03A4D6F4 ADD X31, X31, 0x3C0
	0x03A4D6F8 LDP X20, X19, [X31 + 0x70]
	0x03A4D6FC LDP X22, X21, [X31 + 0x60]
	0x03A4D700 LDP X24, X23, [X31 + 0x50]
	0x03A4D704 LDP X26, X25, [X31 + 0x40]
	0x03A4D708 LDP X28, X27, [X31 + 0x30]
	0x03A4D70C LDP X29, X30, [X31 + 0x20]
	0x03A4D710 LDP D9, D8, [X31 + 0x10]
	0x03A4D714 LDR V10, [X31], #0x80
	0x03A4D718 RET
	0x03A4D71C BL 0x1C16F20
	0x03A4D720 BL 0x1C16F20
	0x03A4D724 BL 0x1C16F20
	0x03A4D728 BL 0x1C16F20
	0x03A4D72C BL 0x1C16F20
	0x03A4D730 BL 0x1C16F20
	0x03A4D734 MOV X0, X24
	0x03A4D738 BL 0x1C16F18
	0x03A4D73C BL 0x1C16F20
	0x03A4D740 MOV X0, X25
	0x03A4D744 BL 0x1C16F18
	0x03A4D748 MOV X0, X25
	0x03A4D74C BL 0x1C16F18
	0x03A4D750 MOV X0, X24
	0x03A4D754 BL 0x1C16F18
	0x03A4D758 MOV X0, X20
	0x03A4D75C BL 0x1C16F18

ISIL:
	001 Move [X31-96], X30
	002 Move [X31+16], X28
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X20, 0x996000
	013 Move W8, [X20+450]
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {33}
	019 Move X0, 0x708000
	020 Move X0, [X0+2312]
	021 Call 0x1C17CF4
	022 Move X0, 0x708000
	023 Move X0, [X0+2320]
	024 Call 0x1C17CF4
	025 Move X0, 0x709000
	026 Move X0, [X0+3792]
	027 Call 0x1C17CF4
	028 Move X0, 0x707000
	029 Move X0, [X0+4080]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X20+450], W8
	033 Compare X19, 0
	034 JumpIfEqual {103}
	035 Move W8, [X19+24]
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Move X26, 0x708000
	038 Move X27, 0x707000
	039 Move X28, 0x709000
	040 Move X26, [X26+2320]
	041 Move X27, [X27+4080]
	042 Move X28, [X28+3792]
	043 Move W20, 1
	044 Move W25, 2
	045 Move X2, [X26]
	046 Move X0, X19
	047 Move W1, W20
	048 Call List`1<Object>.get_Item, X0, X1
	049 Move X21, X0
	050 Move W22, W25
	051 Move X2, [X26]
	052 Subtract W23, W22, 2
	053 Move X0, X19
	054 Move W1, W23
	055 Call List`1<Object>.get_Item, X0, X1
	056 Move X8, [X27]
	057 Move X24, X0
	058 Move W9, [X8+224]
	059 Compare W9, 0
	060 JumpIfNotEqual {63}
	061 Move X0, X8
	062 Call 0x1C17DFC
	063 Move X0, X21
	064 Move X1, X24
	065 Subtract W22, W22, 1
	066 Call ScriptableRenderPass.op_LessThan, X0, X1
	067 Move TEMP, X0
	068 And TEMP, TEMP, 1
	069 Compare TEMP, 1
	070 JumpIfNotEqual {82}
	071 Move X2, [X26]
	072 Move X0, X19
	073 Move W1, W23
	074 Call List`1<Object>.get_Item, X0, X1
	075 Move X3, [X28]
	076 Move X2, X0
	077 Move X0, X19
	078 Move W1, W22
	079 Call List`1<Object>.set_Item, X0, X1, X2
	080 NotImplemented "Instruction CMP not yet implemented."
	081 Move W22, W31
	082 Move X3, [X28]
	083 Move X0, X19
	084 Move W1, W22
	085 Move X2, X21
	086 Call List`1<Object>.set_Item, X0, X1, X2
	087 Move W8, [X19+24]
	088 Add W20, W20, 1
	089 Add W25, W25, 1
	090 NotImplemented "Instruction CMP not yet implemented."
	091 Move X20, [X31+80]
	092 Move X19, [X31+88]
	093 Move X22, [X31+64]
	094 Move X21, [X31+72]
	095 Move X24, [X31+48]
	096 Move X23, [X31+56]
	097 Move X26, [X31+32]
	098 Move X25, [X31+40]
	099 Move X28, [X31+16]
	100 Move X27, [X31+24]
	101 Move X30, [X31+96]
	102 Return 
	103 Call 0x1C17F20

Method: System.Void .cctor()

Disassembly:
	0x03A52BF4 UNIMPLEMENTED
	0x03A52BF8 UNIMPLEMENTED
	0x00000000 INVALID
	0x00000000 INVALID
	0x00000000 INVALID
	0x00000000 INVALID
	0x00000000 INVALID
	0x00000000 INVALID
	0x00000000 INVALID
	0x03A52C18 FADD V16.2S, V27.2S, V16.2S
	0x03A52C1C FADD V16.2S, V16.2S, V17.2S
	0x03A52C20 LDR V17, [X9]
	0x03A52C24 FADD V7.2S, V7.2S, V23.2S
	0x00000000 INVALID
	0x00000000 INVALID
	0x03A52C30 UNIMPLEMENTED
	0x00000000 INVALID
	0x00000000 INVALID
	0x00000000 INVALID
	0x03A52C40 FADD V3.2S, V7.2S, V3.2S
	0x03A52C44 FADD V7.4S, V19.4S, V21.4S
	0x03A52C48 FADD V3.2S, V3.2S, V4.2S
	0x03A52C4C FADD V4.4S, V7.4S, V22.4S
	0x00000000 INVALID
	0x00000000 INVALID
	0x03A52C58 FADD V0.2S, V28.2S, V0.2S
	0x03A52C5C FADD V2.2S, V2.2S, V7.2S
	0x00000000 INVALID
	0x00000000 INVALID
	0x03A52C68 FADD V1.4S, V1.4S, V25.4S
	0x03A52C6C FADD V0.2S, V0.2S, V29.2S
	0x03A52C70 FADD V2.2S, V2.2S, V6.2S
	0x03A52C74 FADD V1.4S, V1.4S, V26.4S
	0x03A52C78 FADD V16.2S, V16.2S, V18.2S
	0x03A52C7C FADD V0.2S, V0.2S, V23.2S
	0x03A52C80 FADD V2.2S, V2.2S, V5.2S
	0x03A52C84 STP D3, D16, [X8 + 0x10]
	0x03A52C88 STP D0, D2, [X8]
	0x03A52C8C STP V4, V1, [X8 + 0x20]
	0x03A52C90 RET
	0x03A52C94 STP X29, X30, [X31 - 0x60]!
	0x03A52C98 STP X28, X27, [X31 + 0x10]
	0x03A52C9C STP X26, X25, [X31 + 0x20]
	0x03A52CA0 STP X24, X23, [X31 + 0x30]
	0x03A52CA4 STP X22, X21, [X31 + 0x40]
	0x03A52CA8 STP X20, X19, [X31 + 0x50]
	0x03A52CAC ADRP X22, 0x990000
	0x03A52CB0 ADRP X21, 0x6FE000
	0x03A52CB4 ADRP X19, 0x703000
	0x03A52CB8 ADRP X20, 0x703000
	0x03A52CBC ADRP X29, 0x703000
	0x03A52CC0 ADRP X28, 0x703000
	0x03A52CC4 ADRP X27, 0x703000
	0x03A52CC8 ADRP X26, 0x703000
	0x03A52CCC ADRP X25, 0x703000
	0x03A52CD0 ADRP X24, 0x703000
	0x03A52CD4 ADRP X23, 0x704000
	0x03A52CD8 LDR X21, [X21 + 0x598]
	0x03A52CDC LDR X19, [X19 + 0xFC8]
	0x03A52CE0 LDR X20, [X20 + 0xD30]
	0x03A52CE4 LDR X29, [X29 + 0xFD0]
	0x03A52CE8 LDR X28, [X28 + 0xFD8]
	0x03A52CEC LDR X27, [X27 + 0xFE0]
	0x03A52CF0 LDR X26, [X26 + 0xFE8]
	0x03A52CF4 LDR X25, [X25 + 0xFF0]
	0x03A52CF8 LDR X24, [X24 + 0xFF8]
	0x03A52CFC LDR X23, [X23]
	0x03A52D00 LDRB W8, [X22 + 0x1C5]
	0x03A52D04 TBNZ X8, 0x0, 0x3A52DF4
	0x03A52D08 ADRP X0, 0x6FE000
	0x03A52D0C LDR X0, [X0 + 0x598]
	0x03A52D10 BL 0x1C16CF4
	0x03A52D14 ADRP X0, 0x703000
	0x03A52D18 LDR X0, [X0 + 0xD30]
	0x03A52D1C BL 0x1C16CF4
	0x03A52D20 ADRP X0, 0x703000
	0x03A52D24 LDR X0, [X0 + 0xFE8]
	0x03A52D28 BL 0x1C16CF4
	0x03A52D2C ADRP X0, 0x703000
	0x03A52D30 LDR X0, [X0 + 0xFD8]
	0x03A52D34 BL 0x1C16CF4
	0x03A52D38 ADRP X0, 0x704000
	0x03A52D3C LDR X0, [X0 + 0x8]
	0x03A52D40 BL 0x1C16CF4
	0x03A52D44 ADRP X0, 0x704000
	0x03A52D48 LDR X0, [X0 + 0x10]
	0x03A52D4C BL 0x1C16CF4
	0x03A52D50 ADRP X0, 0x704000
	0x03A52D54 LDR X0, [X0 + 0x18]
	0x03A52D58 BL 0x1C16CF4
	0x03A52D5C ADRP X0, 0x704000
	0x03A52D60 LDR X0, [X0 + 0x20]
	0x03A52D64 BL 0x1C16CF4
	0x03A52D68 ADRP X0, 0x704000
	0x03A52D6C LDR X0, [X0 + 0x28]
	0x03A52D70 BL 0x1C16CF4
	0x03A52D74 ADRP X0, 0x703000
	0x03A52D78 LDR X0, [X0 + 0xFD0]
	0x03A52D7C BL 0x1C16CF4
	0x03A52D80 ADRP X0, 0x703000
	0x03A52D84 LDR X0, [X0 + 0xFF0]
	0x03A52D88 BL 0x1C16CF4
	0x03A52D8C ADRP X0, 0x704000
	0x03A52D90 LDR X0, [X0 + 0x30]
	0x03A52D94 BL 0x1C16CF4
	0x03A52D98 ADRP X0, 0x703000
	0x03A52D9C LDR X0, [X0 + 0xFE0]
	0x03A52DA0 BL 0x1C16CF4
	0x03A52DA4 ADRP X0, 0x704000
	0x03A52DA8 LDR X0, [X0 + 0x38]
	0x03A52DAC BL 0x1C16CF4
	0x03A52DB0 ADRP X0, 0x704000
	0x03A52DB4 LDR X0, [X0]
	0x03A52DB8 BL 0x1C16CF4
	0x03A52DBC ADRP X0, 0x703000
	0x03A52DC0 LDR X0, [X0 + 0xFF8]
	0x03A52DC4 BL 0x1C16CF4
	0x03A52DC8 ADRP X0, 0x704000
	0x03A52DCC LDR X0, [X0 + 0x40]
	0x03A52DD0 BL 0x1C16CF4
	0x03A52DD4 ADRP X0, 0x704000
	0x03A52DD8 LDR X0, [X0 + 0x48]
	0x03A52DDC BL 0x1C16CF4
	0x03A52DE0 ADRP X0, 0x703000
	0x03A52DE4 LDR X0, [X0 + 0xFC8]
	0x03A52DE8 BL 0x1C16CF4
	0x03A52DEC MOVZ W8, 0x1
	0x03A52DF0 STRB W8, [X22 + 0x1C5]
	0x03A52DF4 LDR X0, [X21]
	0x03A52DF8 BL 0x1C16F10
	0x03A52DFC LDR X1, [X19]
	0x03A52E00 MOV X2, X31
	0x03A52E04 MOV X19, X0
	0x03A52E08 BL 0x39B19AC
	0x03A52E0C LDR X8, [X20]
	0x03A52E10 LDR X8, [X8 + 0xB8]
	0x03A52E14 STR X19, [X8]
	0x03A52E18 LDR X0, [X21]
	0x03A52E1C BL 0x1C16F10
	0x03A52E20 LDR X1, [X29]
	0x03A52E24 MOV X2, X31
	0x03A52E28 MOV X19, X0
	0x03A52E2C BL 0x39B19AC
	0x03A52E30 LDR X8, [X20]
	0x03A52E34 LDR X8, [X8 + 0xB8]
	0x03A52E38 STR X19, [X8 + 0x8]
	0x03A52E3C LDR X0, [X21]
	0x03A52E40 BL 0x1C16F10
	0x03A52E44 LDR X1, [X28]
	0x03A52E48 MOV X2, X31
	0x03A52E4C MOV X19, X0
	0x03A52E50 BL 0x39B19AC
	0x03A52E54 LDR X8, [X20]
	0x03A52E58 LDR X8, [X8 + 0xB8]
	0x03A52E5C STR X19, [X8 + 0x10]
	0x03A52E60 LDR X0, [X21]
	0x03A52E64 BL 0x1C16F10
	0x03A52E68 LDR X1, [X27]
	0x03A52E6C MOV X2, X31
	0x03A52E70 MOV X19, X0
	0x03A52E74 BL 0x39B19AC
	0x03A52E78 LDR X8, [X20]
	0x03A52E7C LDR X8, [X8 + 0xB8]
	0x03A52E80 STR X19, [X8 + 0x18]
	0x03A52E84 LDR X0, [X21]
	0x03A52E88 BL 0x1C16F10
	0x03A52E8C LDR X1, [X26]
	0x03A52E90 MOV X2, X31
	0x03A52E94 MOV X19, X0
	0x03A52E98 BL 0x39B19AC
	0x03A52E9C LDR X8, [X20]
	0x03A52EA0 LDR X8, [X8 + 0xB8]
	0x03A52EA4 STR X19, [X8 + 0x20]
	0x03A52EA8 LDR X0, [X21]
	0x03A52EAC BL 0x1C16F10
	0x03A52EB0 LDR X1, [X25]
	0x03A52EB4 MOV X2, X31
	0x03A52EB8 MOV X19, X0
	0x03A52EBC BL 0x39B19AC
	0x03A52EC0 LDR X8, [X20]
	0x03A52EC4 LDR X8, [X8 + 0xB8]
	0x03A52EC8 STR X19, [X8 + 0x28]
	0x03A52ECC LDR X0, [X21]
	0x03A52ED0 BL 0x1C16F10
	0x03A52ED4 LDR X1, [X24]
	0x03A52ED8 MOV X2, X31
	0x03A52EDC MOV X19, X0
	0x03A52EE0 BL 0x39B19AC
	0x03A52EE4 LDR X8, [X20]
	0x03A52EE8 LDR X8, [X8 + 0xB8]
	0x03A52EEC STR X19, [X8 + 0x30]
	0x03A52EF0 LDR X0, [X21]
	0x03A52EF4 BL 0x1C16F10
	0x03A52EF8 LDR X1, [X23]
	0x03A52EFC MOV X2, X31
	0x03A52F00 MOV X19, X0
	0x03A52F04 BL 0x39B19AC
	0x03A52F08 LDR X8, [X20]
	0x03A52F0C LDR X8, [X8 + 0xB8]
	0x03A52F10 STR X19, [X8 + 0x38]
	0x03A52F14 LDR X0, [X21]
	0x03A52F18 BL 0x1C16F10
	0x03A52F1C ADRP X8, 0x704000
	0x03A52F20 LDR X8, [X8 + 0x8]
	0x03A52F24 MOV X2, X31
	0x03A52F28 MOV X19, X0
	0x03A52F2C LDR X1, [X8]
	0x03A52F30 BL 0x39B19AC
	0x03A52F34 LDR X8, [X20]
	0x03A52F38 LDR X8, [X8 + 0xB8]
	0x03A52F3C STR X19, [X8 + 0x40]
	0x03A52F40 LDR X0, [X21]
	0x03A52F44 BL 0x1C16F10
	0x03A52F48 ADRP X8, 0x704000
	0x03A52F4C LDR X8, [X8 + 0x28]
	0x03A52F50 MOV X2, X31
	0x03A52F54 MOV X19, X0
	0x03A52F58 LDR X1, [X8]
	0x03A52F5C BL 0x39B19AC
	0x03A52F60 LDR X8, [X20]
	0x03A52F64 LDR X8, [X8 + 0xB8]
	0x03A52F68 STR X19, [X8 + 0x48]
	0x03A52F6C LDR X0, [X21]
	0x03A52F70 BL 0x1C16F10
	0x03A52F74 ADRP X8, 0x704000
	0x03A52F78 LDR X8, [X8 + 0x48]
	0x03A52F7C MOV X2, X31
	0x03A52F80 MOV X19, X0
	0x03A52F84 LDR X1, [X8]
	0x03A52F88 BL 0x39B19AC
	0x03A52F8C LDR X8, [X20]
	0x03A52F90 LDR X8, [X8 + 0xB8]
	0x03A52F94 STR X19, [X8 + 0x50]
	0x03A52F98 LDR X0, [X21]
	0x03A52F9C BL 0x1C16F10
	0x03A52FA0 ADRP X8, 0x704000
	0x03A52FA4 LDR X8, [X8 + 0x20]
	0x03A52FA8 MOV X2, X31
	0x03A52FAC MOV X19, X0
	0x03A52FB0 LDR X1, [X8]
	0x03A52FB4 BL 0x39B19AC
	0x03A52FB8 LDR X8, [X20]
	0x03A52FBC LDR X8, [X8 + 0xB8]
	0x03A52FC0 STR X19, [X8 + 0x58]
	0x03A52FC4 LDR X0, [X21]
	0x03A52FC8 BL 0x1C16F10
	0x03A52FCC ADRP X8, 0x704000
	0x03A52FD0 LDR X8, [X8 + 0x30]
	0x03A52FD4 MOV X2, X31
	0x03A52FD8 MOV X19, X0
	0x03A52FDC LDR X1, [X8]
	0x03A52FE0 BL 0x39B19AC
	0x03A52FE4 LDR X8, [X20]
	0x03A52FE8 LDR X8, [X8 + 0xB8]
	0x03A52FEC STR X19, [X8 + 0x60]
	0x03A52FF0 LDR X0, [X21]
	0x03A52FF4 BL 0x1C16F10
	0x03A52FF8 ADRP X8, 0x704000
	0x03A52FFC LDR X8, [X8 + 0x38]
	0x03A53000 MOV X2, X31
	0x03A53004 MOV X19, X0
	0x03A53008 LDR X1, [X8]
	0x03A5300C BL 0x39B19AC
	0x03A53010 LDR X8, [X20]
	0x03A53014 LDR X8, [X8 + 0xB8]
	0x03A53018 STR X19, [X8 + 0x68]
	0x03A5301C LDR X0, [X21]
	0x03A53020 BL 0x1C16F10
	0x03A53024 ADRP X8, 0x703000
	0x03A53028 LDR X8, [X8 + 0x18]
	0x03A5302C MOV X2, X31
	0x03A53030 MOV X19, X0
	0x03A53034 LDR X1, [X8]
	0x03A53038 BL 0x39B19AC
	0x03A5303C LDR X8, [X20]
	0x03A53040 LDR X8, [X8 + 0xB8]
	0x03A53044 STR X19, [X8 + 0x70]
	0x03A53048 LDR X0, [X21]
	0x03A5304C BL 0x1C16F10
	0x03A53050 ADRP X8, 0x703000
	0x03A53054 LDR X8, [X8 + 0x10]
	0x03A53058 MOV X2, X31
	0x03A5305C MOV X19, X0
	0x03A53060 LDR X1, [X8]
	0x03A53064 BL 0x39B19AC
	0x03A53068 LDR X8, [X20]
	0x03A5306C LDR X8, [X8 + 0xB8]
	0x03A53070 STR X19, [X8 + 0x78]
	0x03A53074 LDR X0, [X21]
	0x03A53078 BL 0x1C16F10
	0x03A5307C ADRP X8, 0x703000
	0x03A53080 LDR X8, [X8 + 0x40]
	0x03A53084 MOV X2, X31
	0x03A53088 MOV X19, X0
	0x03A5308C LDR X1, [X8]
	0x03A53090 BL 0x39B19AC
	0x03A53094 LDR X8, [X20]
	0x03A53098 LDP X22, X21, [X31 + 0x40]
	0x03A5309C LDP X24, X23, [X31 + 0x30]
	0x03A530A0 LDP X26, X25, [X31 + 0x20]
	0x03A530A4 LDR X8, [X8 + 0xB8]
	0x03A530A8 LDP X28, X27, [X31 + 0x10]
	0x03A530AC STR X19, [X8 + 0x80]
	0x03A530B0 LDP X20, X19, [X31 + 0x50]
	0x03A530B4 LDP X29, X30, [X31], #0x60
	0x03A530B8 RET
	0x03A530BC STP X30, X25, [X31 - 0x40]!
	0x03A530C0 STP X24, X23, [X31 + 0x10]
	0x03A530C4 STP X22, X21, [X31 + 0x20]
	0x03A530C8 STP X20, X19, [X31 + 0x30]
	0x03A530CC ADRP X25, 0x98F000
	0x03A530D0 ADRP X22, 0x6FD000
	0x03A530D4 ADRP X19, 0x703000
	0x03A530D8 ADRP X20, 0x702000
	0x03A530DC ADRP X24, 0x703000
	0x03A530E0 ADRP X23, 0x703000
	0x03A530E4 ADRP X21, 0x703000
	0x03A530E8 LDR X22, [X22 + 0x598]
	0x03A530EC LDRB W8, [X25 + 0x1C6]
	0x03A530F0 LDR X19, [X19 + 0x50]
	0x03A530F4 LDR X20, [X20 + 0xEF8]
	0x03A530F8 LDR X24, [X24 + 0x58]
	0x03A530FC LDR X23, [X23 + 0x60]
	0x03A53100 LDR X21, [X21 + 0x68]
	0x03A53104 TBNZ X8, 0x0, 0x3A53158
	0x03A53108 ADRP X0, 0x6FD000
	0x03A5310C LDR X0, [X0 + 0x598]
	0x03A53110 BL 0x1C16CF4
	0x03A53114 ADRP X0, 0x702000
	0x03A53118 LDR X0, [X0 + 0xEF8]
	0x03A5311C BL 0x1C16CF4
	0x03A53120 ADRP X0, 0x703000
	0x03A53124 LDR X0, [X0 + 0x60]
	0x03A53128 BL 0x1C16CF4
	0x03A5312C ADRP X0, 0x703000
	0x03A53130 LDR X0, [X0 + 0x68]
	0x03A53134 BL 0x1C16CF4
	0x03A53138 ADRP X0, 0x703000
	0x03A5313C LDR X0, [X0 + 0x50]
	0x03A53140 BL 0x1C16CF4
	0x03A53144 ADRP X0, 0x703000
	0x03A53148 LDR X0, [X0 + 0x58]
	0x03A5314C BL 0x1C16CF4
	0x03A53150 MOVZ W8, 0x1
	0x03A53154 STRB W8, [X25 + 0x1C6]
	0x03A53158 LDR X0, [X22]
	0x03A5315C BL 0x1C16F10
	0x03A53160 LDR X1, [X19]
	0x03A53164 MOV X2, X31
	0x03A53168 MOV X19, X0
	0x03A5316C BL 0x39B19AC
	0x03A53170 LDR X8, [X20]
	0x03A53174 LDR X8, [X8 + 0xB8]
	0x03A53178 STR X19, [X8]
	0x03A5317C LDR X0, [X22]
	0x03A53180 BL 0x1C16F10
	0x03A53184 LDR X1, [X24]
	0x03A53188 MOV X2, X31
	0x03A5318C MOV X19, X0
	0x03A53190 BL 0x39B19AC
	0x03A53194 LDR X8, [X20]
	0x03A53198 LDR X8, [X8 + 0xB8]
	0x03A5319C STR X19, [X8 + 0x8]
	0x03A531A0 LDR X0, [X22]
	0x03A531A4 BL 0x1C16F10
	0x03A531A8 LDR X1, [X23]
	0x03A531AC MOV X2, X31
	0x03A531B0 MOV X19, X0
	0x03A531B4 BL 0x39B19AC
	0x03A531B8 LDR X8, [X20]
	0x03A531BC LDR X8, [X8 + 0xB8]
	0x03A531C0 STR X19, [X8 + 0x10]
	0x03A531C4 LDR X0, [X22]
	0x03A531C8 BL 0x1C16F10
	0x03A531CC LDR X1, [X21]
	0x03A531D0 MOV X2, X31
	0x03A531D4 MOV X19, X0
	0x03A531D8 BL 0x39B19AC
	0x03A531DC LDR X8, [X20]
	0x03A531E0 LDP X22, X21, [X31 + 0x20]
	0x03A531E4 LDP X24, X23, [X31 + 0x10]
	0x03A531E8 LDR X8, [X8 + 0xB8]
	0x03A531EC STR X19, [X8 + 0x18]
	0x03A531F0 LDP X20, X19, [X31 + 0x30]
	0x03A531F4 LDP X30, X25, [X31], #0x40
	0x03A531F8 RET
	0x03A531FC STP X30, X23, [X31 - 0x30]!
	0x03A53200 STP X22, X21, [X31 + 0x10]
	0x03A53204 STP X20, X19, [X31 + 0x20]
	0x03A53208 ADRP X23, 0x98F000
	0x03A5320C ADRP X22, 0x6FD000
	0x03A53210 ADRP X19, 0x703000
	0x03A53214 ADRP X20, 0x702000
	0x03A53218 ADRP X21, 0x703000
	0x03A5321C LDRB W8, [X23 + 0x1C7]
	0x03A53220 LDR X22, [X22 + 0x598]
	0x03A53224 LDR X19, [X19 + 0x70]
	0x03A53228 LDR X20, [X20 + 0xF08]
	0x03A5322C LDR X21, [X21 + 0x78]
	0x03A53230 TBNZ X8, 0x0, 0x3A5326C
	0x03A53234 ADRP X0, 0x6FD000
	0x03A53238 LDR X0, [X0 + 0x598]
	0x03A5323C BL 0x1C16CF4
	0x03A53240 ADRP X0, 0x702000
	0x03A53244 LDR X0, [X0 + 0xF08]
	0x03A53248 BL 0x1C16CF4
	0x03A5324C ADRP X0, 0x703000
	0x03A53250 LDR X0, [X0 + 0x70]
	0x03A53254 BL 0x1C16CF4
	0x03A53258 ADRP X0, 0x703000
	0x03A5325C LDR X0, [X0 + 0x78]
	0x03A53260 BL 0x1C16CF4
	0x03A53264 MOVZ W8, 0x1
	0x03A53268 STRB W8, [X23 + 0x1C7]
	0x03A5326C LDR X0, [X22]
	0x03A53270 BL 0x1C16F10
	0x03A53274 LDR X1, [X19]
	0x03A53278 MOV X2, X31
	0x03A5327C MOV X19, X0
	0x03A53280 BL 0x39B19AC
	0x03A53284 LDR X8, [X20]
	0x03A53288 LDR X8, [X8 + 0xB8]
	0x03A5328C STR X19, [X8]
	0x03A53290 LDR X0, [X22]
	0x03A53294 BL 0x1C16F10
	0x03A53298 LDR X1, [X21]
	0x03A5329C MOV X2, X31
	0x03A532A0 MOV X19, X0
	0x03A532A4 BL 0x39B19AC
	0x03A532A8 LDR X8, [X20]
	0x03A532AC LDP X22, X21, [X31 + 0x10]
	0x03A532B0 LDR X8, [X8 + 0xB8]
	0x03A532B4 STR X19, [X8 + 0x8]
	0x03A532B8 LDP X20, X19, [X31 + 0x20]
	0x03A532BC LDP X30, X23, [X31], #0x30
	0x03A532C0 RET
	0x03A532C4 STP W1, W2, [X0]
	0x03A532C8 STP W3, W4, [X0 + 0x8]
	0x03A532CC RET
	0x03A532D0 LDRB W0, [X0 + 0x10]
	0x03A532D4 RET
	0x03A532D8 AND W8, W1, 0x1
	0x03A532DC STRB W8, [X0 + 0x10]
	0x03A532E0 RET
	0x03A532E4 LDRB W0, [X0 + 0x11]
	0x03A532E8 RET
	0x03A532EC AND W8, W1, 0x1
	0x03A532F0 STRB W8, [X0 + 0x11]
	0x03A532F4 RET
	0x03A532F8 MOVZ W8, 0x1
	0x03A532FC MOV X1, X31
	0x03A53300 STRB W8, [X0 + 0x11]
	0x03A53304 B 0x33BDD8C
	0x03A53308 STR X30, [X31 - 0x20]!
	0x03A5330C STP X20, X19, [X31 + 0x10]
	0x03A53310 ADRP X19, 0x98F000
	0x03A53314 ADRP X20, 0x702000
	0x03A53318 LDRB W8, [X19 + 0x1C8]
	0x03A5331C LDR X20, [X20 + 0xF00]
	0x03A53320 TBNZ X8, 0x0, 0x3A53338
	0x03A53324 ADRP X0, 0x702000
	0x03A53328 LDR X0, [X0 + 0xF00]
	0x03A5332C BL 0x1C16CF4
	0x03A53330 MOVZ W8, 0x1
	0x03A53334 STRB W8, [X19 + 0x1C8]
	0x03A53338 LDR X8, [X20]
	0x03A5333C ADRP X9, 0xFFFFFFFFFD099000
	0x03A53340 LDR V0, [X9 + 0x71]
	0x03A53344 LDP X20, X19, [X31 + 0x10]
	0x03A53348 LDR X8, [X8 + 0xB8]
	0x03A5334C STR V0, [X8]
	0x03A53350 LDR X30, [X31], #0x20
	0x03A53354 RET
	0x03A53358 LDR X8, [X0]
	0x03A5335C CMP X8, 0x0
	0x03A53360 CSET W0, NE
	0x03A53364 RET
	0x03A53368 SUB X31, X31, 0x40
	0x03A5336C STR X30, [X31 + 0x30]
	0x03A53370 LDR X9, [X0]
	0x03A53374 CBZ X9, 0x3A533B8
	0x03A53378 LDUR V0, [X9 + 0x28]
	0x03A5337C LDR X10, [X9 + 0x48]
	0x03A53380 LDUR V1, [X9 + 0x38]
	0x03A53384 MOVI V2.2D, 0x0
	0x03A53388 ADD X1, X31, 0x0
	0x03A5338C MOVN W3, 0x0
	0x03A53390 MOVN W4, 0x0
	0x03A53394 MOV X0, X8
	0x03A53398 MOV W2, W31
	0x03A5339C MOV X5, X31
	0x03A533A0 STR X31, [X8 + 0x20]
	0x03A533A4 STR X10, [X31 + 0x20]
	0x03A533A8 STP V0, V1, [X31]
	0x03A533AC STP V2, V2, [X8]
	0x03A533B0 BL 0x3C4B098
	0x03A533B4 B 0x3A533CC
	0x03A533B8 LDR X9, [X0 + 0x28]
	0x03A533BC LDUR V0, [X0 + 0x18]
	0x03A533C0 LDUR V1, [X0 + 0x8]
	0x03A533C4 STR X9, [X8 + 0x20]
	0x03A533C8 STP V1, V0, [X8]
	0x03A533CC LDR X30, [X31 + 0x30]
	0x03A533D0 ADD X31, X31, 0x40
	0x03A533D4 RET
	0x03A533D8 MOV X1, X31
	0x03A533DC B 0x33BDD8C
	0x03A533E0 MOV X1, X31
	0x03A533E4 B 0x33BDD8C
	0x03A533E8 MOV X1, X31
	0x03A533EC B 0x33BDD8C
	0x03A533F0 MOV X1, X31
	0x03A533F4 B 0x33BDD8C
	0x03A533F8 MOV X1, X31
	0x03A533FC B 0x33BDD8C
	0x03A53400 SUB X31, X31, 0x70
	0x03A53404 STR X30, [X31 + 0x30]
	0x03A53408 STP X24, X23, [X31 + 0x40]
	0x03A5340C STP X22, X21, [X31 + 0x50]
	0x03A53410 STP X20, X19, [X31 + 0x60]
	0x03A53414 ADRP X24, 0x98F000
	0x03A53418 ADRP X22, 0x703000
	0x03A5341C ADRP X23, 0x6CA000
	0x03A53420 ADRP X21, 0x702000
	0x03A53424 LDRB W8, [X24 + 0x1C9]
	0x03A53428 LDR X22, [X22 + 0x80]
	0x03A5342C LDR X23, [X23 + 0x138]
	0x03A53430 LDR X21, [X21 + 0xF00]
	0x03A53434 MOV X20, X1
	0x03A53438 MOV X19, X0
	0x03A5343C TBNZ X8, 0x0, 0x3A53478
	0x03A53440 ADRP X0, 0x703000
	0x03A53444 LDR X0, [X0 + 0x88]
	0x03A53448 BL 0x1C16CF4
	0x03A5344C ADRP X0, 0x703000
	0x03A53450 LDR X0, [X0 + 0x80]
	0x03A53454 BL 0x1C16CF4
	0x03A53458 ADRP X0, 0x6CA000
	0x03A5345C LDR X0, [X0 + 0x138]
	0x03A53460 BL 0x1C16CF4
	0x03A53464 ADRP X0, 0x702000
	0x03A53468 LDR X0, [X0 + 0xF00]
	0x03A5346C BL 0x1C16CF4
	0x03A53470 MOVZ W8, 0x1
	0x03A53474 STRB W8, [X24 + 0x1C9]
	0x03A53478 LDR X4, [X22]
	0x03A5347C ADRP X22, 0x703000
	0x03A53480 LDR X22, [X22 + 0x88]
	0x03A53484 ADD X0, X31, 0x20
	0x03A53488 MOVZ W1, 0x4
	0x03A5348C MOVZ W2, 0x2
	0x03A53490 MOVZ W3, 0x1
	0x03A53494 STP X31, X31, [X31 + 0x20]
	0x03A53498 BL 0x23D66F8
	0x03A5349C LDR V0, [X31 + 0x2]
	0x03A534A0 ADD X0, X31, 0x10
	0x03A534A4 MOVZ W2, 0x2
	0x03A534A8 MOVZ W3, 0x1
	0x03A534AC STR V0, [X19]
	0x03A534B0 LDR W8, [X19 + 0x8]
	0x03A534B4 LDR X4, [X23]
	0x03A534B8 STP X31, X31, [X31 + 0x10]
	0x03A534BC ADD W1, W8, 0x1
	0x03A534C0 BL 0x23D58AC
	0x03A534C4 LDR V0, [X31 + 0x1]
	0x03A534C8 ADD X0, X31, 0x0
	0x03A534CC MOVZ W2, 0x2
	0x03A534D0 MOVZ W3, 0x1
	0x03A534D4 STR V0, [X19 + 0x1]
	0x03A534D8 LDR W1, [X19 + 0x18]
	0x03A534DC LDR X4, [X23]
	0x03A534E0 STP X31, X31, [X31]
	0x03A534E4 BL 0x23D58AC
	0x03A534E8 LDR V0, [X31]
	0x03A534EC STR V0, [X19 + 0x2]
	0x03A534F0 LDR X0, [X21]
	0x03A534F4 LDR W8, [X0 + 0xE0]
	0x03A534F8 CBNZ W8, 0x3A53504
	0x03A534FC BL 0x1C16DFC
	0x03A53500 LDR X0, [X21]
	0x03A53504 LDR X8, [X0 + 0xB8]
	0x03A53508 LDR X10, [X19]
	0x03A5350C MOVZ W11, 0x96
	0x03A53510 MOV X0, X19
	0x03A53514 LDRSW X9, [X8]
	0x03A53518 MOV X1, X20
	0x03A5351C STR W11, [X10, X9, LSL #2]
	0x03A53520 LDRSW X9, [X8 + 0x4]
	0x03A53524 MOVZ W11, 0x12C
	0x03A53528 STR W11, [X10, X9, LSL #2]
	0x03A5352C LDRSW X9, [X8 + 0x8]
	0x03A53530 MOVZ W11, 0x258
	0x03A53534 STR W11, [X10, X9, LSL #2]
	0x03A53538 LDRSW X8, [X8 + 0xC]
	0x03A5353C MOVN W9, 0x80000000
	0x03A53540 STR W9, [X10, X8, LSL #2]
	0x03A53544 BL 0x3A535B4
	0x03A53548 LDR X1, [X22]
	0x03A5354C MOV X0, X19
	0x03A53550 BL 0x23D6920
	0x03A53554 LDR W8, [X19 + 0x18]
	0x03A53558 SUB W8, W8, 0x1
	0x03A5355C CMP W8, 0x1
	0x03A53560 B.LT 0x3A5359C
	0x03A53564 ADD X8, X19, 0x10
	0x03A53568 ADD X9, X19, 0x20
	0x03A5356C LDR X8, [X8]
	0x03A53570 LDR X9, [X9]
	0x03A53574 MOV X10, X31
	0x03A53578 ADD X11, X8, X10, 0x2, LSL
	0x03A5357C LDP W11, W12, [X11]
	0x03A53580 SUB W11, W12, W11
	0x03A53584 STR W11, [X9, X10, LSL #2]
	0x03A53588 LDR W11, [X19 + 0x18]
	0x03A5358C ADD X10, X10, 0x1
	0x03A53590 SUB W11, W11, 0x1
	0x03A53594 CMP X10, W11, SXTW
	0x03A53598 B.LT 0x3A53578
	0x03A5359C LDP X20, X19, [X31 + 0x60]
	0x03A535A0 LDP X22, X21, [X31 + 0x50]
	0x03A535A4 LDP X24, X23, [X31 + 0x40]
	0x03A535A8 LDR X30, [X31 + 0x30]
	0x03A535AC ADD X31, X31, 0x70
	0x03A535B0 RET
	0x03A535B4 STR X30, [X31 - 0x40]!
	0x03A535B8 STP X24, X23, [X31 + 0x10]
	0x03A535BC STP X22, X21, [X31 + 0x20]
	0x03A535C0 STP X20, X19, [X31 + 0x30]
	0x03A535C4 ADRP X21, 0x98F000
	0x03A535C8 LDRB W8, [X21 + 0x1CB]
	0x03A535CC MOV X19, X1
	0x03A535D0 MOV X20, X0
	0x03A535D4 TBNZ X8, 0x0, 0x3A535F8
	0x03A535D8 ADRP X0, 0x701000
	0x03A535DC LDR X0, [X0 + 0x908]
	0x03A535E0 BL 0x1C16CF4
	0x03A535E4 ADRP X0, 0x701000
	0x03A535E8 LDR X0, [X0 + 0x910]
	0x03A535EC BL 0x1C16CF4
	0x03A535F0 MOVZ W8, 0x1
	0x03A535F4 STRB W8, [X21 + 0x1CB]
	0x03A535F8 LDR X8, [X20 + 0x10]
	0x03A535FC STR W31, [X8]
	0x03A53600 LDR W9, [X20 + 0x8]
	0x03A53604 SUB W9, W9, 0x1
	0x03A53608 CMP W9, 0x1
	0x03A5360C B.LT 0x3A53694
	0x03A53610 CBZ X19, 0x3A536B8
	0x03A53614 ADRP X23, 0x701000
	0x03A53618 LDR X23, [X23 + 0x910]
	0x03A5361C MOV X22, X31
	0x03A53620 MOV W21, W31
	0x03A53624 MOVZ W24, 0x1
	0x03A53628 LDR W8, [X19 + 0x18]
	0x03A5362C CMP W21, W8
	0x03A53630 B.GE 0x3A53668
	0x03A53634 LDR X2, [X23]
	0x03A53638 MOV X0, X19
	0x03A5363C MOV W1, W21
	0x03A53640 BL 0x301BCCC
	0x03A53644 CBZ X0, 0x3A536B8
	0x03A53648 LDR X8, [X20]
	0x03A5364C LDR W9, [X0 + 0x10]
	0x03A53650 LDR W8, [X8, X22, LSL #2]
	0x03A53654 CMP W9, W8
	0x03A53658 B.GE 0x3A53668
	0x03A5365C LDR W8, [X19 + 0x18]
	0x03A53660 ADD W21, W21, 0x1
	0x03A53664 B 0x3A5362C
	0x03A53668 LDR X8, [X20 + 0x10]
	0x03A5366C ADD X9, X24, 0x1
	0x03A53670 ADD X22, X22, 0x1
	0x03A53674 STR W21, [X8, X24, LSL #2]
	0x03A53678 LDR W10, [X20 + 0x8]
	0x03A5367C MOV X24, X9
	0x03A53680 SUB W10, W10, 0x1
	0x03A53684 CMP X22, W10, SXTW
	0x03A53688 B.LT 0x3A53628
	0x03A5368C SXTW X9, W9
	0x03A53690 B 0x3A5369C
	0x03A53694 CBZ X19, 0x3A536B8
	0x03A53698 MOVZ W9, 0x1
	0x03A5369C LDR W10, [X19 + 0x18]
	0x03A536A0 LDP X20, X19, [X31 + 0x30]
	0x03A536A4 LDP X22, X21, [X31 + 0x20]
	0x03A536A8 LDP X24, X23, [X31 + 0x10]
	0x03A536AC STR W10, [X8, X9, LSL #2]
	0x03A536B0 LDR X30, [X31], #0x40
	0x03A536B4 RET
	0x03A536B8 BL 0x1C16F20
	0x03A536BC STP X30, X21, [X31 - 0x20]!
	0x03A536C0 STP X20, X19, [X31 + 0x10]
	0x03A536C4 ADRP X21, 0x98F000
	0x03A536C8 ADRP X20, 0x6CA000
	0x03A536CC LDRB W8, [X21 + 0x1CA]
	0x03A536D0 LDR X20, [X20 + 0x148]
	0x03A536D4 MOV X19, X0
	0x03A536D8 TBNZ X8, 0x0, 0x3A536F0
	0x03A536DC ADRP X0, 0x6CA000
	0x03A536E0 LDR X0, [X0 + 0x148]
	0x03A536E4 BL 0x1C16CF4
	0x03A536E8 MOVZ W8, 0x1
	0x03A536EC STRB W8, [X21 + 0x1CA]
	0x03A536F0 LDR X1, [X20]
	0x03A536F4 ADD X0, X19, 0x20
	0x03A536F8 BL 0x23D5AD4
	0x03A536FC LDR X1, [X20]
	0x03A53700 ADD X0, X19, 0x10
	0x03A53704 LDP X20, X19, [X31 + 0x10]
	0x03A53708 LDP X30, X21, [X31], #0x20
	0x03A5370C B 0x23D5AD4
	0x03A53710 LDR X8, [X0 + 0x20]
	0x03A53714 LDR W0, [X8, W1, SXTW]
	0x03A53718 RET
	0x03A5371C LDR X8, [X0 + 0x10]
	0x03A53720 ADD W9, W1, 0x1
	0x03A53724 LDR W10, [X8, W1, SXTW]
	0x03A53728 LDR W8, [X8, W9, SXTW]
	0x03A5372C CMP W10, W8
	0x03A53730 CSEL W9, W10, W8, LT
	0x03A53734 CMP W8, W10
	0x03A53738 CSEL W8, W10, W8, LT
	0x03A5373C SUB W0, W9, 0x1
	0x03A53740 BFM X0, X8, 0x20, 0x1F
	0x03A53744 RET
	0x03A53748 CMP W1, W2
	0x03A5374C CSEL W8, W1, W2, LT
	0x03A53750 CMP W2, W1
	0x03A53754 CSEL W9, W1, W2, LT
	0x03A53758 SUB W8, W8, 0x1
	0x03A5375C STP W8, W9, [X0]
	0x03A53760 RET
	0x03A53764 LDR X0, [X0]
	0x03A53768 RET
	0x03A5376C LDP W8, W9, [X0]
	0x03A53770 ADD W10, W8, 0x1
	0x03A53774 CMP W10, W9
	0x03A53778 CSET W8, LT
	0x03A5377C STR W10, [X0]
	0x03A53780 MOV W0, W8
	0x03A53784 RET
	0x03A53788 LDR W0, [X0]
	0x03A5378C RET
	0x03A53790 RET
	0x03A53794 STR X30, [X31 - 0x20]!
	0x03A53798 STP X20, X19, [X31 + 0x10]
	0x03A5379C ADRP X19, 0x98F000
	0x03A537A0 ADRP X20, 0x702000
	0x03A537A4 LDRB W8, [X19 + 0x1CC]
	0x03A537A8 LDR X20, [X20 + 0xE10]
	0x03A537AC TBNZ X8, 0x0, 0x3A537C4
	0x03A537B0 ADRP X0, 0x702000
	0x03A537B4 LDR X0, [X0 + 0xE10]
	0x03A537B8 BL 0x1C16CF4
	0x03A537BC MOVZ W8, 0x1
	0x03A537C0 STRB W8, [X19 + 0x1CC]
	0x03A537C4 LDR X0, [X20]
	0x03A537C8 BL 0x1C16F10
	0x03A537CC MOV X1, X31
	0x03A537D0 MOV X19, X0
	0x03A537D4 BL 0x33BDD8C
	0x03A537D8 LDR X8, [X20]
	0x03A537DC LDR X8, [X8 + 0xB8]
	0x03A537E0 STR X19, [X8]
	0x03A537E4 LDP X20, X19, [X31 + 0x10]
	0x03A537E8 LDR X30, [X31], #0x20
	0x03A537EC RET
	0x03A537F0 MOV X1, X31
	0x03A537F4 B 0x33BDD8C
	0x03A537F8 STR D10, [X31 - 0x40]!
	0x03A537FC STP D9, D8, [X31 + 0x8]
	0x03A53800 STR X30, [X31 + 0x18]
	0x03A53804 STP X22, X21, [X31 + 0x20]
	0x03A53808 STP X20, X19, [X31 + 0x30]
	0x03A5380C ADRP X21, 0x98F000
	0x03A53810 LDRB W8, [X21 + 0x1CD]
	0x03A53814 MOV X19, X2
	0x03A53818 MOV X20, X1
	0x03A5381C TBNZ X8, 0x0, 0x3A53834
	0x03A53820 ADRP X0, 0x701000
	0x03A53824 LDR X0, [X0 + 0x8C8]
	0x03A53828 BL 0x1C16CF4
	0x03A5382C MOVZ W8, 0x1
	0x03A53830 STRB W8, [X21 + 0x1CD]
	0x03A53834 CBZ X19, 0x3A538D0
	0x03A53838 ADRP X22, 0x701000
	0x03A5383C LDR X21, [X19 + 0x18]
	0x03A53840 LDR X22, [X22 + 0x8C8]
	0x03A53844 MOV X0, X31
	0x03A53848 BL 0x3C3C6C4
	0x03A5384C MOV X0, X31
	0x03A53850 MOV V8.16B, V0.16B
	0x03A53854 BL 0x3C3C714
	0x03A53858 MOV X0, X31
	0x03A5385C MOV V9.16B, V0.16B
	0x03A53860 BL 0x3C3C83C
	0x03A53864 LDR X0, [X22]
	0x03A53868 MOV V10.16B, V0.16B
	0x03A5386C LDR W8, [X0 + 0xE0]
	0x03A53870 CBNZ W8, 0x3A53878
	0x03A53874 BL 0x1C16DFC
	0x03A53878 MOV X0, X21
	0x03A5387C MOV X1, X31
	0x03A53880 BL 0x3A4DFD0
	0x03A53884 MOV X0, X21
	0x03A53888 MOV V0.16B, V8.16B
	0x03A5388C MOV V1.16B, V9.16B
	0x03A53890 MOV V2.16B, V10.16B
	0x03A53894 MOV X1, X31
	0x03A53898 BL 0x3A4AB50
	0x03A5389C CBZ X20, 0x3A538D0
	0x03A538A0 LDR X0, [X20 + 0x2C8]
	0x03A538A4 CBZ X0, 0x3A538D0
	0x03A538A8 LDR X8, [X0]
	0x03A538AC LDR X1, [X19 + 0x10]
	0x03A538B0 ADD X2, X20, 0x10
	0x03A538B4 LDP X20, X19, [X31 + 0x30]
	0x03A538B8 LDP X4, X3, [X8 + 0x1E8]
	0x03A538BC LDP X22, X21, [X31 + 0x20]
	0x03A538C0 LDR X30, [X31 + 0x18]
	0x03A538C4 LDP D9, D8, [X31 + 0x8]
	0x03A538C8 LDR V10, [X31], #0x40
	0x03A538CC BR X4
	0x03A538D0 BL 0x1C16F20
	0x03A538D4 STP X30, X23, [X31 - 0x30]!
	0x03A538D8 STP X22, X21, [X31 + 0x10]
	0x03A538DC STP X20, X19, [X31 + 0x20]
	0x03A538E0 ADRP X21, 0x98F000
	0x03A538E4 LDRB W8, [X21 + 0x1CE]
	0x03A538E8 MOV X19, X2
	0x03A538EC MOV X20, X1
	0x03A538F0 TBNZ X8, 0x0, 0x3A53908
	0x03A538F4 ADRP X0, 0x703000
	0x03A538F8 LDR X0, [X0 + 0x90]
	0x03A538FC BL 0x1C16CF4
	0x03A53900 MOVZ W8, 0x1
	0x03A53904 STRB W8, [X21 + 0x1CE]
	0x03A53908 CBZ X20, 0x3A53960
	0x03A5390C CBZ X19, 0x3A53960
	0x03A53910 ADRP X8, 0x703000
	0x03A53914 LDR X8, [X8 + 0x90]
	0x03A53918 LDR X22, [X19 + 0x18]
	0x03A5391C LDR X21, [X20 + 0x10]
	0x03A53920 LDP X19, X23, [X20 + 0x18]
	0x03A53924 LDR X0, [X8]
	0x03A53928 LDR W8, [X0 + 0xE0]
	0x03A5392C CBNZ W8, 0x3A53934
	0x03A53930 BL 0x1C16DFC
	0x03A53934 MOV X1, X22
	0x03A53938 MOV X4, X21
	0x03A5393C MOV X5, X19
	0x03A53940 LDP X20, X19, [X31 + 0x20]
	0x03A53944 LDP X22, X21, [X31 + 0x10]
	0x03A53948 MOV X0, X23
	0x03A5394C MOV X2, X31
	0x03A53950 MOV X3, X31
	0x03A53954 MOV X6, X31
	0x03A53958 LDP X30, X23, [X31], #0x30
	0x03A5395C B 0x3E61B98
	0x03A53960 BL 0x1C16F20
	0x03A53964 STR D10, [X31 - 0x50]!
	0x03A53968 STP D9, D8, [X31 + 0x10]
	0x03A5396C STP X30, X23, [X31 + 0x20]
	0x03A53970 STP X22, X21, [X31 + 0x30]
	0x03A53974 STP X20, X19, [X31 + 0x40]
	0x03A53978 ADRP X21, 0x98F000
	0x03A5397C LDRB W8, [X21 + 0x1CF]
	0x03A53980 MOV X19, X2
	0x03A53984 MOV X20, X1
	0x03A53988 TBNZ X8, 0x0, 0x3A539AC
	0x03A5398C ADRP X0, 0x6FD000
	0x03A53990 LDR X0, [X0 + 0xC80]
	0x03A53994 BL 0x1C16CF4
	0x03A53998 ADRP X0, 0x701000
	0x03A5399C LDR X0, [X0 + 0x8C8]
	0x03A539A0 BL 0x1C16CF4
	0x03A539A4 MOVZ W8, 0x1
	0x03A539A8 STRB W8, [X21 + 0x1CF]
	0x03A539AC CBZ X20, 0x3A53AEC
	0x03A539B0 LDR W8, [X20 + 0x398]
	0x03A539B4 ADD X21, X20, 0x2D0
	0x03A539B8 CBZ W8, 0x3A53A24
	0x03A539BC CBZ X19, 0x3A53AEC
	0x03A539C0 LDR X0, [X20 + 0x2C8]
	0x03A539C4 CBZ X0, 0x3A53AEC
	0x03A539C8 LDRB W8, [X20 + 0x4E0]
	0x03A539CC LDR X1, [X19 + 0x18]
	0x03A539D0 MOV X2, X21
	0x03A539D4 MOV X4, X31
	0x03A539D8 CMP W8, 0x0
	0x03A539DC CSET W3, EQ
	0x03A539E0 BL 0x3A49D2C
	0x03A539E4 LDR X0, [X20 + 0x2C8]
	0x03A539E8 CBZ X0, 0x3A53AEC
	0x03A539EC LDRB W8, [X20 + 0x4E0]
	0x03A539F0 LDR X1, [X19 + 0x18]
	0x03A539F4 MOV X2, X21
	0x03A539F8 MOV X4, X31
	0x03A539FC CMP W8, 0x0
	0x03A53A00 CSET W3, EQ
	0x03A53A04 BL 0x3A4A948
	0x03A53A08 LDR X0, [X20 + 0x2C8]
	0x03A53A0C CBZ X0, 0x3A53AEC
	0x03A53A10 LDR X1, [X19 + 0x18]
	0x03A53A14 MOV X2, X21
	0x03A53A18 MOV X3, X31
	0x03A53A1C BL 0x3A4A370
	0x03A53A20 B 0x3A53A80
	0x03A53A24 CBZ X19, 0x3A53AEC
	0x03A53A28 ADRP X8, 0x6FD000
	0x03A53A2C LDR X8, [X8 + 0xC80]
	0x03A53A30 LDR X22, [X20 + 0x390]
	0x03A53A34 ADD X23, X19, 0x10
	0x03A53A38 LDR X0, [X8]
	0x03A53A3C LDR W8, [X0 + 0xE0]
	0x03A53A40 CBNZ W8, 0x3A53A48
	0x03A53A44 BL 0x1C16DFC
	0x03A53A48 MOV X0, X23
	0x03A53A4C MOV X1, X22
	0x03A53A50 MOV W2, W31
	0x03A53A54 MOV X3, X31
	0x03A53A58 BL 0x3C591D4
	0x03A53A5C LDR X0, [X20 + 0x2C8]
	0x03A53A60 CBZ X0, 0x3A53AEC
	0x03A53A64 LDRB W8, [X20 + 0x4E0]
	0x03A53A68 LDR X1, [X19 + 0x18]
	0x03A53A6C MOV X2, X21
	0x03A53A70 MOV X4, X31
	0x03A53A74 CMP W8, 0x0
	0x03A53A78 CSET W3, EQ
	0x03A53A7C BL 0x3A49D2C
	0x03A53A80 ADRP X20, 0x701000
	0x03A53A84 LDR X20, [X20 + 0x8C8]
	0x03A53A88 MOV X0, X31
	0x03A53A8C BL 0x3C3C6C4
	0x03A53A90 MOV X0, X31
	0x03A53A94 MOV V8.16B, V0.16B
	0x03A53A98 BL 0x3C3C714
	0x03A53A9C MOV X0, X31
	0x03A53AA0 MOV V9.16B, V0.16B
	0x03A53AA4 BL 0x3C3C83C
	0x03A53AA8 LDR X0, [X20]
	0x03A53AAC LDR X19, [X19 + 0x18]
	0x03A53AB0 MOV V10.16B, V0.16B
	0x03A53AB4 LDR W8, [X0 + 0xE0]
	0x03A53AB8 CBNZ W8, 0x3A53AC0
	0x03A53ABC BL 0x1C16DFC
	0x03A53AC0 MOV X0, X19
	0x03A53AC4 MOV V0.16B, V8.16B
	0x03A53AC8 MOV V1.16B, V9.16B
	0x03A53ACC LDP X20, X19, [X31 + 0x40]
	0x03A53AD0 LDP X22, X21, [X31 + 0x30]
	0x03A53AD4 LDP X30, X23, [X31 + 0x20]
	0x03A53AD8 LDP D9, D8, [X31 + 0x10]
	0x03A53ADC MOV V2.16B, V10.16B
	0x03A53AE0 MOV X1, X31
	0x03A53AE4 LDR V10, [X31], #0x50
	0x03A53AE8 B 0x3A4AB50
	0x03A53AEC BL 0x1C16F20
	0x03A53AF0 CBZ X1, 0x3A53AF8
	0x03A53AF4 RET
	0x03A53AF8 STR X30, [X31 - 0x10]!
	0x03A53AFC BL 0x1C16F20
	0x03A53B00 STR X29, [X31 - 0x30]!
	0x03A53B04 STP X30, X21, [X31 + 0x10]
	0x03A53B08 STP X20, X19, [X31 + 0x20]
	0x03A53B0C SUB X31, X31, 0x210
	0x03A53B10 ADRP X21, 0x98F000
	0x03A53B14 LDRB W8, [X21 + 0x1D0]
	0x03A53B18 MOV X19, X2
	0x03A53B1C MOV X20, X1
	0x03A53B20 TBNZ X8, 0x0, 0x3A53B38
	0x03A53B24 ADRP X0, 0x6FD000
	0x03A53B28 LDR X0, [X0 + 0xC80]
	0x03A53B2C BL 0x1C16CF4
	0x03A53B30 MOVZ W8, 0x1
	0x03A53B34 STRB W8, [X21 + 0x1D0]
	0x03A53B38 CBZ X20, 0x3A53BFC
	0x03A53B3C ADD X1, X20, 0x2C8
	0x03A53B40 ADD X0, X31, 0x0
	0x03A53B44 MOVZ W2, 0x210
	0x03A53B48 BL 0x3EB1AC0
	0x03A53B4C LDR X0, [X31 + 0x178]
	0x03A53B50 CBZ X0, 0x3A53BFC
	0x03A53B54 LDR X20, [X20 + 0x10]
	0x03A53B58 MOV X1, X31
	0x03A53B5C BL 0x3984C98
	0x03A53B60 TBZ X0, 0x0, 0x3A53BE8
	0x03A53B64 ADD X0, X31, 0x0
	0x03A53B68 MOV X1, X31
	0x03A53B6C BL 0x3A8F13C
	0x03A53B70 CBZ X0, 0x3A53BFC
	0x03A53B74 LDRB W8, [X0 + 0x6C8]
	0x03A53B78 CBZ W8, 0x3A53B94
	0x03A53B7C ADD X0, X31, 0x0
	0x03A53B80 MOV X1, X31
	0x03A53B84 BL 0x3A8F13C
	0x03A53B88 CBZ X0, 0x3A53BFC
	0x03A53B8C MOVZ W8, 0x1
	0x03A53B90 STRB W8, [X0 + 0x6C9]
	0x03A53B94 LDR X0, [X31 + 0x178]
	0x03A53B98 CBZ X0, 0x3A53BFC
	0x03A53B9C MOV X1, X20
	0x03A53BA0 MOV X2, X31
	0x03A53BA4 BL 0x3987918
	0x03A53BA8 CBZ X19, 0x3A53BFC
	0x03A53BAC ADRP X8, 0x6FD000
	0x03A53BB0 LDR X8, [X8 + 0xC80]
	0x03A53BB4 ADD X19, X19, 0x10
	0x03A53BB8 LDR X0, [X8]
	0x03A53BBC LDR W8, [X0 + 0xE0]
	0x03A53BC0 CBNZ W8, 0x3A53BC8
	0x03A53BC4 BL 0x1C16DFC
	0x03A53BC8 MOV X0, X19
	0x03A53BCC MOV X1, X20
	0x03A53BD0 MOV X2, X31
	0x03A53BD4 BL 0x3C58FE4
	0x03A53BD8 CBZ X20, 0x3A53BFC
	0x03A53BDC MOV X0, X20
	0x03A53BE0 MOV X1, X31
	0x03A53BE4 BL 0x3C4C310
	0x03A53BE8 ADD X31, X31, 0x210
	0x03A53BEC LDP X20, X19, [X31 + 0x20]
	0x03A53BF0 LDP X30, X21, [X31 + 0x10]
	0x03A53BF4 LDR X29, [X31], #0x30
	0x03A53BF8 RET
	0x03A53BFC BL 0x1C16F20
	0x03A53C00 STP X30, X21, [X31 - 0x20]!
	0x03A53C04 STP X20, X19, [X31 + 0x10]
	0x03A53C08 ADRP X21, 0x98F000
	0x03A53C0C LDRB W8, [X21 + 0x1D1]
	0x03A53C10 MOV X19, X2
	0x03A53C14 MOV X20, X1
	0x03A53C18 TBNZ X8, 0x0, 0x3A53C30
	0x03A53C1C ADRP X0, 0x6FD000
	0x03A53C20 LDR X0, [X0 + 0xC80]
	0x03A53C24 BL 0x1C16CF4
	0x03A53C28 MOVZ W8, 0x1
	0x03A53C2C STRB W8, [X21 + 0x1D1]
	0x03A53C30 CBZ X20, 0x3A53CB4
	0x03A53C34 LDR X21, [X20 + 0x440]
	0x03A53C38 CBZ X21, 0x3A53CB4
	0x03A53C3C LDR X20, [X20 + 0x10]
	0x03A53C40 MOV X0, X21
	0x03A53C44 MOV X1, X31
	0x03A53C48 BL 0x3984C98
	0x03A53C4C TBZ X0, 0x0, 0x3A53CA8
	0x03A53C50 MOV X0, X21
	0x03A53C54 MOV X1, X20
	0x03A53C58 MOV X2, X31
	0x03A53C5C BL 0x398784C
	0x03A53C60 CBZ X19, 0x3A53CB4
	0x03A53C64 ADRP X8, 0x6FD000
	0x03A53C68 LDR X8, [X8 + 0xC80]
	0x03A53C6C ADD X19, X19, 0x10
	0x03A53C70 LDR X0, [X8]
	0x03A53C74 LDR W8, [X0 + 0xE0]
	0x03A53C78 CBNZ W8, 0x3A53C80
	0x03A53C7C BL 0x1C16DFC
	0x03A53C80 MOV X0, X19
	0x03A53C84 MOV X1, X20
	0x03A53C88 MOV X2, X31
	0x03A53C8C BL 0x3C58FE4
	0x03A53C90 CBZ X20, 0x3A53CB4

ISIL:
	001 Move [X31-48], X29
	002 Move [X31-40], X30
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Subtract X31, X31, 2672
	008 Move X20, 0x991000
	009 Move X21, 0x703000
	010 Move X19, 0x6FF000
	011 Move W8, [X20+451]
	012 Move X21, [X21+2248]
	013 Move X19, [X19+2480]
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {41}
	018 Move X0, 0x701000
	019 Move X0, [X0+1424]
	020 Call 0x1C17CF4
	021 Move X0, 0x6FF000
	022 Move X0, [X0+2480]
	023 Call 0x1C17CF4
	024 Move X0, 0x704000
	025 Move X0, [X0+3056]
	026 Call 0x1C17CF4
	027 Move X0, 0x704000
	028 Move X0, [X0+4032]
	029 Call 0x1C17CF4
	030 Move X0, 0x703000
	031 Move X0, [X0+2840]
	032 Call 0x1C17CF4
	033 Move X0, 0x703000
	034 Move X0, [X0+2248]
	035 Call 0x1C17CF4
	036 Move X0, 0x6FD000
	037 Move X0, [X0+72]
	038 Call 0x1C17CF4
	039 Move W8, 1
	040 Move [X20+451], W8
	041 Move X8, [X21]
	042 Move X22, 0x703000
	043 Move W0, 2
	044 Move X1, X31
	045 Move X8, [X8+184]
	046 Move [X8], X31
	047 Move X8, [X21]
	048 Move X8, [X8+184]
	049 Move X22, [X22+2840]
	050 Move [X8+8], W31
	051 Add X8, X31, 2576
	052 Call RenderTargetIdentifier.op_Implicit, X0
	053 Move V0, [X31+161]
	054 Move V1, [X31+162]
	055 Move X8, [X31+2608]
	056 Move X0, [X19]
	057 Move [X31+164], V0
	058 Move [X31+165], V1
	059 Move [X31+2656], X8
	060 Move W8, [X0+224]
	061 Compare W8, 0
	062 JumpIfNotEqual {64}
	063 Call 0x1C17DFC
	064 Move V0, [X31+164]
	065 Move V1, [X31+165]
	066 Move X8, [X31+2656]
	067 Add X0, X31, 2528
	068 Move X1, X31
	069 Move [X31+158], V0
	070 Move [X31+159], V1
	071 Move [X31+2560], X8
	072 Call RTHandles.Alloc, X0
	073 Move X8, [X21]
	074 Move W1, 8
	075 Move X8, [X8+184]
	076 Move [X8+16], X0
	077 Move X0, [X22]
	078 Call 0x1C17D6C
	079 Move X19, X0
	080 Add X8, X31, 2480
	081 Move W0, W31
	082 Move X1, X31
	083 Call RenderTargetIdentifier.op_Implicit, X0
	084 Move V0, [X31+155]
	085 Move V1, [X31+156]
	086 Move X8, [X31+2512]
	087 Move [X31+161], V0
	088 Move [X31+162], V1
	089 Move [X31+2608], X8
	090 Compare X19, 0
	091 JumpIfEqual {1070}
	092 Move V0, [X31+161]
	093 Move V1, [X31+162]
	094 Move X8, [X31+2608]
	095 Move [X31+152], V0
	096 Move [X31+153], V1
	097 Move [X31+2464], X8
	098 Move W8, [X19+24]
	099 Compare W8, 0
	100 JumpIfEqual {1069}
	101 Move X8, [X31+2464]
	102 Move V0, [X31+153]
	103 Move V1, [X31+152]
	104 Move W0, W31
	105 Move [X19+64], X8
	106 Add X8, X31, 2480
	107 Move X1, X31
	108 Move [X19+32], V1
	109 Move [X19+40], V0
	110 Call RenderTargetIdentifier.op_Implicit, X0
	111 Move V0, [X31+155]
	112 Move V1, [X31+156]
	113 Move X8, [X31+2512]
	114 Move [X31+149], V0
	115 Move [X31+150], V1
	116 Move [X31+2416], X8
	117 Move W8, [X19+24]
	118 NotImplemented "Instruction CMP not yet implemented."
	119 Move X8, [X31+2416]
	120 Move V0, [X31+150]
	121 Move V1, [X31+149]
	122 Move W0, W31
	123 Move [X19+104], X8
	124 Add X8, X31, 2480
	125 Move X1, X31
	126 Move [X19+88], V0
	127 Move [X19+72], V1
	128 Call RenderTargetIdentifier.op_Implicit, X0
	129 Move V0, [X31+155]
	130 Move V1, [X31+156]
	131 Move X8, [X31+2512]
	132 Move [X31+146], V0
	133 Move [X31+147], V1
	134 Move [X31+2368], X8
	135 Move W8, [X19+24]
	136 NotImplemented "Instruction CMP not yet implemented."
	137 Move X8, [X31+2368]
	138 Move V0, [X31+147]
	139 Move V1, [X31+146]
	140 Move W0, W31
	141 Move [X19+144], X8
	142 Add X8, X31, 2480
	143 Move X1, X31
	144 Move [X19+112], V1
	145 Move [X19+120], V0
	146 Call RenderTargetIdentifier.op_Implicit, X0
	147 Move V0, [X31+155]
	148 Move V1, [X31+156]
	149 Move X8, [X31+2512]
	150 Move [X31+143], V0
	151 Move [X31+144], V1
	152 Move [X31+2320], X8
	153 Move W8, [X19+24]
	154 NotImplemented "Instruction CMP not yet implemented."
	155 Move X8, [X31+2320]
	156 Move V0, [X31+144]
	157 Move V1, [X31+143]
	158 Move W0, W31
	159 Move [X19+184], X8
	160 Add X8, X31, 2480
	161 Move X1, X31
	162 Move [X19+168], V0
	163 Move [X19+152], V1
	164 Call RenderTargetIdentifier.op_Implicit, X0
	165 Move V0, [X31+155]
	166 Move V1, [X31+156]
	167 Move X8, [X31+2512]
	168 Move [X31+140], V0
	169 Move [X31+141], V1
	170 Move [X31+2272], X8
	171 Move W8, [X19+24]
	172 NotImplemented "Instruction CMP not yet implemented."
	173 Move X8, [X31+2272]
	174 Move V0, [X31+141]
	175 Move V1, [X31+140]
	176 Move W0, W31
	177 Move [X19+224], X8
	178 Add X8, X31, 2480
	179 Move X1, X31
	180 Move [X19+192], V1
	181 Move [X19+200], V0
	182 Call RenderTargetIdentifier.op_Implicit, X0
	183 Move V0, [X31+155]
	184 Move V1, [X31+156]
	185 Move X8, [X31+2512]
	186 Move [X31+137], V0
	187 Move [X31+138], V1
	188 Move [X31+2224], X8
	189 Move W8, [X19+24]
	190 NotImplemented "Instruction CMP not yet implemented."
	191 Move X8, [X31+2224]
	192 Move V0, [X31+138]
	193 Move V1, [X31+137]
	194 Move W0, W31
	195 Move [X19+264], X8
	196 Add X8, X31, 2480
	197 Move X1, X31
	198 Move [X19+248], V0
	199 Move [X19+232], V1
	200 Call RenderTargetIdentifier.op_Implicit, X0
	201 Move V0, [X31+155]
	202 Move V1, [X31+156]
	203 Move X8, [X31+2512]
	204 Move [X31+134], V0
	205 Move [X31+135], V1
	206 Move [X31+2176], X8
	207 Move W8, [X19+24]
	208 NotImplemented "Instruction CMP not yet implemented."
	209 Move X8, [X31+2176]
	210 Move V0, [X31+135]
	211 Move V1, [X31+134]
	212 Move W0, W31
	213 Move [X19+304], X8
	214 Add X8, X31, 2480
	215 Move X1, X31
	216 Move [X19+272], V1
	217 Move [X19+280], V0
	218 Call RenderTargetIdentifier.op_Implicit, X0
	219 Move V0, [X31+155]
	220 Move V1, [X31+156]
	221 Move X8, [X31+2512]
	222 Move [X31+131], V0
	223 Move [X31+132], V1
	224 Move [X31+2128], X8
	225 Move W8, [X19+24]
	226 NotImplemented "Instruction CMP not yet implemented."
	227 Move X8, [X31+2128]
	228 Move V0, [X31+131]
	229 Move V1, [X31+132]
	230 Add X9, X19, 312
	231 Add X10, X19, 328
	232 Move [X19+344], X8
	233 Move [X10], V1
	234 Move [X9], V0
	235 Move X8, [X21]
	236 Move X9, 0x704000
	237 Move W1, 8
	238 Move X8, [X8+184]
	239 Move X9, [X9+3056]
	240 Move [X8+24], X19
	241 Move X0, [X9]
	242 Move X19, 0x704000
	243 Move X19, [X19+4032]
	244 Call 0x1C17D6C
	245 Move X8, [X21]
	246 Move W1, 9
	247 Move X8, [X8+184]
	248 Move [X8+72], X0
	249 Move [X8+80], W31
	250 Move X0, [X19]
	251 Call 0x1C17D6C
	252 Move X8, [X22]
	253 Move X19, X0
	254 Move W1, W31
	255 Move X0, X8
	256 Call 0x1C17D6C
	257 Compare X19, 0
	258 JumpIfEqual {1070}
	259 Move W8, [X19+24]
	260 Compare W8, 0
	261 JumpIfEqual {1069}
	262 Move [X19+32], X0
	263 Move X0, [X22]
	264 Move W1, 1
	265 Call 0x1C17D6C
	266 Move X20, X0
	267 Add X8, X31, 2048
	268 Move W0, W31
	269 Move X1, X31
	270 Call RenderTargetIdentifier.op_Implicit, X0
	271 Move V0, [X31+128]
	272 Move V1, [X31+129]
	273 Move X8, [X31+2080]
	274 Move [X31+155], V0
	275 Move [X31+156], V1
	276 Move [X31+2512], X8
	277 Compare X20, 0
	278 JumpIfEqual {1070}
	279 Move V0, [X31+155]
	280 Move V1, [X31+156]
	281 Move X8, [X31+2512]
	282 Move [X31+125], V0
	283 Move [X31+126], V1
	284 Move [X31+2032], X8
	285 Move W8, [X20+24]
	286 Compare W8, 0
	287 JumpIfEqual {1069}
	288 Move X8, [X31+2032]
	289 Move V0, [X31+126]
	290 Move V1, [X31+125]
	291 Move [X20+64], X8
	292 Move [X20+32], V1
	293 Move [X20+40], V0
	294 Move W8, [X19+24]
	295 NotImplemented "Instruction CMP not yet implemented."
	296 Move [X19+40], X20
	297 Move X0, [X22]
	298 Move W1, 2
	299 Call 0x1C17D6C
	300 Move X20, X0
	301 Add X8, X31, 1952
	302 Move W0, W31
	303 Move X1, X31
	304 Call RenderTargetIdentifier.op_Implicit, X0
	305 Move V0, [X31+122]
	306 Move V1, [X31+123]
	307 Move X8, [X31+1984]
	308 Move [X31+128], V0
	309 Move [X31+129], V1
	310 Move [X31+2080], X8
	311 Compare X20, 0
	312 JumpIfEqual {1070}
	313 Move V0, [X31+128]
	314 Move V1, [X31+129]
	315 Move X8, [X31+2080]
	316 Move [X31+119], V0
	317 Move [X31+120], V1
	318 Move [X31+1936], X8
	319 Move W8, [X20+24]
	320 Compare W8, 0
	321 JumpIfEqual {1069}
	322 Move X8, [X31+1936]
	323 Move V0, [X31+120]
	324 Move V1, [X31+119]
	325 Move W0, W31
	326 Move [X20+64], X8
	327 Add X8, X31, 1952
	328 Move X1, X31
	329 Move [X20+32], V1
	330 Move [X20+40], V0
	331 Call RenderTargetIdentifier.op_Implicit, X0
	332 Move V0, [X31+122]
	333 Move V1, [X31+123]
	334 Move X8, [X31+1984]
	335 Move [X31+116], V0
	336 Move [X31+117], V1
	337 Move [X31+1888], X8
	338 Move W8, [X20+24]
	339 NotImplemented "Instruction CMP not yet implemented."
	340 Move X8, [X31+1888]
	341 Move V0, [X31+117]
	342 Move V1, [X31+116]
	343 Move [X20+104], X8
	344 Move [X20+88], V0
	345 Move [X20+72], V1
	346 Move W8, [X19+24]
	347 NotImplemented "Instruction CMP not yet implemented."
	348 Move [X19+48], X20
	349 Move X0, [X22]
	350 Move W1, 3
	351 Call 0x1C17D6C
	352 Move X20, X0
	353 Add X8, X31, 1808
	354 Move W0, W31
	355 Move X1, X31
	356 Call RenderTargetIdentifier.op_Implicit, X0
	357 Move V0, [X31+113]
	358 Move V1, [X31+114]
	359 Move X8, [X31+1840]
	360 Move [X31+122], V0
	361 Move [X31+123], V1
	362 Move [X31+1984], X8
	363 Compare X20, 0
	364 JumpIfEqual {1070}
	365 Move V0, [X31+122]
	366 Move V1, [X31+123]
	367 Move X8, [X31+1984]
	368 Move [X31+110], V0
	369 Move [X31+111], V1
	370 Move [X31+1792], X8
	371 Move W8, [X20+24]
	372 Compare W8, 0
	373 JumpIfEqual {1069}
	374 Move X8, [X31+1792]
	375 Move V0, [X31+111]
	376 Move V1, [X31+110]
	377 Move W0, W31
	378 Move [X20+64], X8
	379 Add X8, X31, 1808
	380 Move X1, X31
	381 Move [X20+32], V1
	382 Move [X20+40], V0
	383 Call RenderTargetIdentifier.op_Implicit, X0
	384 Move V0, [X31+113]
	385 Move V1, [X31+114]
	386 Move X8, [X31+1840]
	387 Move [X31+107], V0
	388 Move [X31+108], V1
	389 Move [X31+1744], X8
	390 Move W8, [X20+24]
	391 NotImplemented "Instruction CMP not yet implemented."
	392 Move X8, [X31+1744]
	393 Move V0, [X31+108]
	394 Move V1, [X31+107]
	395 Move W0, W31
	396 Move [X20+104], X8
	397 Add X8, X31, 1808
	398 Move X1, X31
	399 Move [X20+88], V0
	400 Move [X20+72], V1
	401 Call RenderTargetIdentifier.op_Implicit, X0
	402 Move V0, [X31+113]
	403 Move V1, [X31+114]
	404 Move X8, [X31+1840]
	405 Move [X31+104], V0
	406 Move [X31+105], V1
	407 Move [X31+1696], X8
	408 Move W8, [X20+24]
	409 NotImplemented "Instruction CMP not yet implemented."
	410 Move X8, [X31+1696]
	411 Move V0, [X31+105]
	412 Move V1, [X31+104]
	413 Move [X20+144], X8
	414 Move [X20+112], V1
	415 Move [X20+120], V0
	416 Move W8, [X19+24]
	417 NotImplemented "Instruction CMP not yet implemented."
	418 Move [X19+56], X20
	419 Move X0, [X22]
	420 Move W1, 4
	421 Call 0x1C17D6C
	422 Move X20, X0
	423 Add X8, X31, 1616
	424 Move W0, W31
	425 Move X1, X31
	426 Call RenderTargetIdentifier.op_Implicit, X0
	427 Move V0, [X31+101]
	428 Move V1, [X31+102]
	429 Move X8, [X31+1648]
	430 Move [X31+113], V0
	431 Move [X31+114], V1
	432 Move [X31+1840], X8
	433 Compare X20, 0
	434 JumpIfEqual {1070}
	435 Move V0, [X31+113]
	436 Move V1, [X31+114]
	437 Move X8, [X31+1840]
	438 Move [X31+98], V0
	439 Move [X31+99], V1
	440 Move [X31+1600], X8
	441 Move W8, [X20+24]
	442 Compare W8, 0
	443 JumpIfEqual {1069}
	444 Move X8, [X31+1600]
	445 Move V0, [X31+99]
	446 Move V1, [X31+98]
	447 Move W0, W31
	448 Move [X20+64], X8
	449 Add X8, X31, 1616
	450 Move X1, X31
	451 Move [X20+32], V1
	452 Move [X20+40], V0
	453 Call RenderTargetIdentifier.op_Implicit, X0
	454 Move V0, [X31+101]
	455 Move V1, [X31+102]
	456 Move X8, [X31+1648]
	457 Move [X31+95], V0
	458 Move [X31+96], V1
	459 Move [X31+1552], X8
	460 Move W8, [X20+24]
	461 NotImplemented "Instruction CMP not yet implemented."
	462 Move X8, [X31+1552]
	463 Move V0, [X31+96]
	464 Move V1, [X31+95]
	465 Move W0, W31
	466 Move [X20+104], X8
	467 Add X8, X31, 1616
	468 Move X1, X31
	469 Move [X20+88], V0
	470 Move [X20+72], V1
	471 Call RenderTargetIdentifier.op_Implicit, X0
	472 Move V0, [X31+101]
	473 Move V1, [X31+102]
	474 Move X8, [X31+1648]
	475 Move [X31+92], V0
	476 Move [X31+93], V1
	477 Move [X31+1504], X8
	478 Move W8, [X20+24]
	479 NotImplemented "Instruction CMP not yet implemented."
	480 Move X8, [X31+1504]
	481 Move V0, [X31+93]
	482 Move V1, [X31+92]
	483 Move W0, W31
	484 Move [X20+144], X8
	485 Add X8, X31, 1616
	486 Move X1, X31
	487 Move [X20+112], V1
	488 Move [X20+120], V0
	489 Call RenderTargetIdentifier.op_Implicit, X0
	490 Move V0, [X31+101]
	491 Move V1, [X31+102]
	492 Move X8, [X31+1648]
	493 Move [X31+89], V0
	494 Move [X31+90], V1
	495 Move [X31+1456], X8
	496 Move W8, [X20+24]
	497 NotImplemented "Instruction CMP not yet implemented."
	498 Move X8, [X31+1456]
	499 Move V0, [X31+90]
	500 Move V1, [X31+89]
	501 Move [X20+184], X8
	502 Move [X20+168], V0
	503 Move [X20+152], V1
	504 Move W8, [X19+24]
	505 NotImplemented "Instruction CMP not yet implemented."
	506 Move [X19+64], X20
	507 Move X0, [X22]
	508 Move W1, 5
	509 Call 0x1C17D6C
	510 Move X20, X0
	511 Add X8, X31, 1376
	512 Move W0, W31
	513 Move X1, X31
	514 Call RenderTargetIdentifier.op_Implicit, X0
	515 Move V0, [X31+86]
	516 Move V1, [X31+87]
	517 Move X8, [X31+1408]
	518 Move [X31+101], V0
	519 Move [X31+102], V1
	520 Move [X31+1648], X8
	521 Compare X20, 0
	522 JumpIfEqual {1070}
	523 Move V0, [X31+101]
	524 Move V1, [X31+102]
	525 Move X8, [X31+1648]
	526 Move [X31+83], V0
	527 Move [X31+84], V1
	528 Move [X31+1360], X8
	529 Move W8, [X20+24]
	530 Compare W8, 0
	531 JumpIfEqual {1069}
	532 Move X8, [X31+1360]
	533 Move V0, [X31+84]
	534 Move V1, [X31+83]
	535 Move W0, W31
	536 Move [X20+64], X8
	537 Add X8, X31, 1376
	538 Move X1, X31
	539 Move [X20+32], V1
	540 Move [X20+40], V0
	541 Call RenderTargetIdentifier.op_Implicit, X0
	542 Move V0, [X31+86]
	543 Move V1, [X31+87]
	544 Move X8, [X31+1408]
	545 Move [X31+80], V0
	546 Move [X31+81], V1
	547 Move [X31+1312], X8
	548 Move W8, [X20+24]
	549 NotImplemented "Instruction CMP not yet implemented."
	550 Move X8, [X31+1312]
	551 Move V0, [X31+81]
	552 Move V1, [X31+80]
	553 Move W0, W31
	554 Move [X20+104], X8
	555 Add X8, X31, 1376
	556 Move X1, X31
	557 Move [X20+88], V0
	558 Move [X20+72], V1
	559 Call RenderTargetIdentifier.op_Implicit, X0
	560 Move V0, [X31+86]
	561 Move V1, [X31+87]
	562 Move X8, [X31+1408]
	563 Move [X31+77], V0
	564 Move [X31+78], V1
	565 Move [X31+1264], X8
	566 Move W8, [X20+24]
	567 NotImplemented "Instruction CMP not yet implemented."
	568 Move X8, [X31+1264]
	569 Move V0, [X31+78]
	570 Move V1, [X31+77]
	571 Move W0, W31
	572 Move [X20+144], X8
	573 Add X8, X31, 1376
	574 Move X1, X31
	575 Move [X20+112], V1
	576 Move [X20+120], V0
	577 Call RenderTargetIdentifier.op_Implicit, X0
	578 Move V0, [X31+86]
	579 Move V1, [X31+87]
	580 Move X8, [X31+1408]
	581 Move [X31+74], V0
	582 Move [X31+75], V1
	583 Move [X31+1216], X8
	584 Move W8, [X20+24]
	585 NotImplemented "Instruction CMP not yet implemented."
	586 Move X8, [X31+1216]
	587 Move V0, [X31+75]
	588 Move V1, [X31+74]
	589 Move W0, W31
	590 Move [X20+184], X8
	591 Add X8, X31, 1376
	592 Move X1, X31
	593 Move [X20+168], V0
	594 Move [X20+152], V1
	595 Call RenderTargetIdentifier.op_Implicit, X0
	596 Move V0, [X31+86]
	597 Move V1, [X31+87]
	598 Move X8, [X31+1408]
	599 Move [X31+71], V0
	600 Move [X31+72], V1
	601 Move [X31+1168], X8
	602 Move W8, [X20+24]
	603 NotImplemented "Instruction CMP not yet implemented."
	604 Move X8, [X31+1168]
	605 Move V0, [X31+72]
	606 Move V1, [X31+71]
	607 Move [X20+224], X8
	608 Move [X20+192], V1
	609 Move [X20+200], V0
	610 Move W8, [X19+24]
	611 NotImplemented "Instruction CMP not yet implemented."
	612 Move [X19+72], X20
	613 Move X0, [X22]
	614 Move W1, 6
	615 Call 0x1C17D6C
	616 Move X20, X0
	617 Add X8, X31, 1088
	618 Move W0, W31
	619 Move X1, X31
	620 Call RenderTargetIdentifier.op_Implicit, X0
	621 Move V0, [X31+68]
	622 Move V1, [X31+69]
	623 Move X8, [X31+1120]
	624 Move [X31+86], V0
	625 Move [X31+87], V1
	626 Move [X31+1408], X8
	627 Compare X20, 0
	628 JumpIfEqual {1070}
	629 Move V0, [X31+86]
	630 Move V1, [X31+87]
	631 Move X8, [X31+1408]
	632 Move [X31+65], V0
	633 Move [X31+66], V1
	634 Move [X31+1072], X8
	635 Move W8, [X20+24]
	636 Compare W8, 0
	637 JumpIfEqual {1069}
	638 Move X8, [X31+1072]
	639 Move V0, [X31+66]
	640 Move V1, [X31+65]
	641 Move W0, W31
	642 Move [X20+64], X8
	643 Add X8, X31, 1088
	644 Move X1, X31
	645 Move [X20+32], V1
	646 Move [X20+40], V0
	647 Call RenderTargetIdentifier.op_Implicit, X0
	648 Move V0, [X31+68]
	649 Move V1, [X31+69]
	650 Move X8, [X31+1120]
	651 Move [X31+992], V0
	652 Move [X31+1000], V1
	653 Move [X31+1024], X8
	654 Move W8, [X20+24]
	655 NotImplemented "Instruction CMP not yet implemented."
	656 Move X8, [X31+1024]
	657 Move V1, [X31+992]
	658 Move V0, [X31+1008]
	659 Move W0, W31
	660 Move X1, X31
	661 Move [X20+104], X8
	662 Add X8, X31, 1088
	663 Move [X20+88], V0
	664 Move [X20+72], V1
	665 Call RenderTargetIdentifier.op_Implicit, X0
	666 Move V0, [X31+68]
	667 Move V1, [X31+69]
	668 Move X8, [X31+1120]
	669 Move [X31+944], V0
	670 Move [X31+952], V1
	671 Move [X31+976], X8
	672 Move W8, [X20+24]
	673 NotImplemented "Instruction CMP not yet implemented."
	674 Move X8, [X31+976]
	675 Move V1, [X31+944]
	676 Move V0, [X31+960]
	677 Move W0, W31
	678 Move X1, X31
	679 Move [X20+144], X8
	680 Add X8, X31, 1088
	681 Move [X20+112], V1
	682 Move [X20+120], V0
	683 Call RenderTargetIdentifier.op_Implicit, X0
	684 Move V0, [X31+68]
	685 Move V1, [X31+69]
	686 Move X8, [X31+1120]
	687 Move [X31+896], V0
	688 Move [X31+904], V1
	689 Move [X31+928], X8
	690 Move W8, [X20+24]
	691 NotImplemented "Instruction CMP not yet implemented."
	692 Move X8, [X31+928]
	693 Move V1, [X31+896]
	694 Move V0, [X31+912]
	695 Move W0, W31
	696 Move X1, X31
	697 Move [X20+184], X8
	698 Add X8, X31, 1088
	699 Move [X20+168], V0
	700 Move [X20+152], V1
	701 Call RenderTargetIdentifier.op_Implicit, X0
	702 Move V0, [X31+68]
	703 Move V1, [X31+69]
	704 Move X8, [X31+1120]
	705 Move [X31+848], V0
	706 Move [X31+856], V1
	707 Move [X31+880], X8
	708 Move W8, [X20+24]
	709 NotImplemented "Instruction CMP not yet implemented."
	710 Move X8, [X31+880]
	711 Move V1, [X31+848]
	712 Move V0, [X31+864]
	713 Move W0, W31
	714 Move X1, X31
	715 Move [X20+224], X8
	716 Add X8, X31, 1088
	717 Move [X20+192], V1
	718 Move [X20+200], V0
	719 Call RenderTargetIdentifier.op_Implicit, X0
	720 Move V0, [X31+68]
	721 Move V1, [X31+69]
	722 Move X8, [X31+1120]
	723 Move [X31+800], V0
	724 Move [X31+808], V1
	725 Move [X31+832], X8
	726 Move W8, [X20+24]
	727 NotImplemented "Instruction CMP not yet implemented."
	728 Move X8, [X31+832]
	729 Move V1, [X31+800]
	730 Move V0, [X31+816]
	731 Move [X20+264], X8
	732 Move [X20+248], V0
	733 Move [X20+232], V1
	734 Move W8, [X19+24]
	735 NotImplemented "Instruction CMP not yet implemented."
	736 Move [X19+80], X20
	737 Move X0, [X22]
	738 Move W1, 7
	739 Call 0x1C17D6C
	740 Move X20, X0
	741 Add X8, X31, 752
	742 Move W0, W31
	743 Move X1, X31
	744 Call RenderTargetIdentifier.op_Implicit, X0
	745 Move V0, [X31+752]
	746 Move V1, [X31+768]
	747 Move X8, [X31+784]
	748 Move [X31+68], V0
	749 Move [X31+69], V1
	750 Move [X31+1120], X8
	751 Compare X20, 0
	752 JumpIfEqual {1070}
	753 Move V0, [X31+68]
	754 Move V1, [X31+69]
	755 Move X8, [X31+1120]
	756 Move [X31+704], V0
	757 Move [X31+712], V1
	758 Move [X31+736], X8
	759 Move W8, [X20+24]
	760 Compare W8, 0
	761 JumpIfEqual {1069}
	762 Move X8, [X31+736]
	763 Move V1, [X31+704]
	764 Move V0, [X31+720]
	765 Move W0, W31
	766 Move X1, X31
	767 Move [X20+64], X8
	768 Add X8, X31, 752
	769 Move [X20+32], V1
	770 Move [X20+40], V0
	771 Call RenderTargetIdentifier.op_Implicit, X0
	772 Move V0, [X31+752]
	773 Move V1, [X31+768]
	774 Move X8, [X31+784]
	775 Move [X31+656], V0
	776 Move [X31+664], V1
	777 Move [X31+688], X8
	778 Move W8, [X20+24]
	779 NotImplemented "Instruction CMP not yet implemented."
	780 Move X8, [X31+688]
	781 Move V1, [X31+656]
	782 Move V0, [X31+672]
	783 Move W0, W31
	784 Move X1, X31
	785 Move [X20+104], X8
	786 Add X8, X31, 752
	787 Move [X20+88], V0
	788 Move [X20+72], V1
	789 Call RenderTargetIdentifier.op_Implicit, X0
	790 Move V0, [X31+752]
	791 Move V1, [X31+768]
	792 Move X8, [X31+784]
	793 Move [X31+608], V0
	794 Move [X31+616], V1
	795 Move [X31+640], X8
	796 Move W8, [X20+24]
	797 NotImplemented "Instruction CMP not yet implemented."
	798 Move X8, [X31+640]
	799 Move V1, [X31+608]
	800 Move V0, [X31+624]
	801 Move W0, W31
	802 Move X1, X31
	803 Move [X20+144], X8
	804 Add X8, X31, 752
	805 Move [X20+112], V1
	806 Move [X20+120], V0
	807 Call RenderTargetIdentifier.op_Implicit, X0
	808 Move V0, [X31+752]
	809 Move V1, [X31+768]
	810 Move X8, [X31+784]
	811 Move [X31+560], V0
	812 Move [X31+568], V1
	813 Move [X31+592], X8
	814 Move W8, [X20+24]
	815 NotImplemented "Instruction CMP not yet implemented."
	816 Move X8, [X31+592]
	817 Move V1, [X31+560]
	818 Move V0, [X31+576]
	819 Move W0, W31
	820 Move X1, X31
	821 Move [X20+184], X8
	822 Add X8, X31, 752
	823 Move [X20+168], V0
	824 Move [X20+152], V1
	825 Call RenderTargetIdentifier.op_Implicit, X0
	826 Move V0, [X31+752]
	827 Move V1, [X31+768]
	828 Move X8, [X31+784]
	829 Move [X31+512], V0
	830 Move [X31+520], V1
	831 Move [X31+544], X8
	832 Move W8, [X20+24]
	833 NotImplemented "Instruction CMP not yet implemented."
	834 Move X8, [X31+544]
	835 Move V1, [X31+512]
	836 Move V0, [X31+528]
	837 Move W0, W31
	838 Move X1, X31
	839 Move [X20+224], X8
	840 Add X8, X31, 752
	841 Move [X20+192], V1
	842 Move [X20+200], V0
	843 Call RenderTargetIdentifier.op_Implicit, X0
	844 Move V0, [X31+752]
	845 Move V1, [X31+768]
	846 Move X8, [X31+784]
	847 Move [X31+464], V0
	848 Move [X31+472], V1
	849 Move [X31+496], X8
	850 Move W8, [X20+24]
	851 NotImplemented "Instruction CMP not yet implemented."
	852 Move X8, [X31+496]
	853 Move V1, [X31+464]
	854 Move V0, [X31+480]
	855 Move W0, W31
	856 Move X1, X31
	857 Move [X20+264], X8
	858 Add X8, X31, 752
	859 Move [X20+248], V0
	860 Move [X20+232], V1
	861 Call RenderTargetIdentifier.op_Implicit, X0
	862 Move V0, [X31+752]
	863 Move V1, [X31+768]
	864 Move X8, [X31+784]
	865 Move [X31+416], V0
	866 Move [X31+424], V1
	867 Move [X31+448], X8
	868 Move W8, [X20+24]
	869 NotImplemented "Instruction CMP not yet implemented."
	870 Move X8, [X31+448]
	871 Move V1, [X31+416]
	872 Move V0, [X31+432]
	873 Move [X20+304], X8
	874 Move [X20+272], V1
	875 Move [X20+280], V0
	876 Move W8, [X19+24]
	877 NotImplemented "Instruction CMP not yet implemented."
	878 Move [X19+88], X20
	879 Move X0, [X22]
	880 Move W1, 8
	881 Add X22, X31, 376
	882 Call 0x1C17D6C
	883 Move X20, X0
	884 Add X8, X31, 376
	885 Move W0, W31
	886 Move X1, X31
	887 Call RenderTargetIdentifier.op_Implicit, X0
	888 Move V0, [X22]
	889 Move V1, [X22+16]
	890 Move X8, [X31+408]
	891 Move [X31+752], V0
	892 Move [X31+760], V1
	893 Move [X31+784], X8
	894 Compare X20, 0
	895 JumpIfEqual {1070}
	896 Move V0, [X31+752]
	897 Move V1, [X31+768]
	898 Move X8, [X31+784]
	899 Move [X31+336], V0
	900 Move [X31+344], V1
	901 Move [X31+368], X8
	902 Move W8, [X20+24]
	903 Compare W8, 0
	904 JumpIfEqual {1069}
	905 Move X8, [X31+368]
	906 Move V1, [X31+336]
	907 Move V0, [X31+352]
	908 Move W0, W31
	909 Move X1, X31
	910 Move [X20+64], X8
	911 Add X8, X31, 376
	912 Move [X20+32], V1
	913 Move [X20+40], V0
	914 Call RenderTargetIdentifier.op_Implicit, X0
	915 Move V0, [X22]
	916 Move V1, [X22+16]
	917 Move X8, [X31+408]
	918 Move [X31+288], V0
	919 Move [X31+296], V1
	920 Move [X31+320], X8
	921 Move W8, [X20+24]
	922 NotImplemented "Instruction CMP not yet implemented."
	923 Move X8, [X31+320]
	924 Move V1, [X31+288]
	925 Move V0, [X31+304]
	926 Move W0, W31
	927 Move X1, X31
	928 Move [X20+104], X8
	929 Add X8, X31, 376
	930 Move [X20+88], V0
	931 Move [X20+72], V1
	932 Call RenderTargetIdentifier.op_Implicit, X0
	933 Move V0, [X22]
	934 Move V1, [X22+16]
	935 Move X8, [X31+408]
	936 Move [X31+240], V0
	937 Move [X31+248], V1
	938 Move [X31+272], X8
	939 Move W8, [X20+24]
	940 NotImplemented "Instruction CMP not yet implemented."
	941 Move X8, [X31+272]
	942 Move V1, [X31+240]
	943 Move V0, [X31+256]
	944 Move W0, W31
	945 Move X1, X31
	946 Move [X20+144], X8
	947 Add X8, X31, 376
	948 Move [X20+112], V1
	949 Move [X20+120], V0
	950 Call RenderTargetIdentifier.op_Implicit, X0
	951 Move V0, [X22]
	952 Move V1, [X22+16]
	953 Move X8, [X31+408]
	954 Move [X31+192], V0
	955 Move [X31+200], V1
	956 Move [X31+224], X8
	957 Move W8, [X20+24]
	958 NotImplemented "Instruction CMP not yet implemented."
	959 Move X8, [X31+224]
	960 Move V1, [X31+192]
	961 Move V0, [X31+208]
	962 Move W0, W31
	963 Move X1, X31
	964 Move [X20+184], X8
	965 Add X8, X31, 376
	966 Move [X20+168], V0
	967 Move [X20+152], V1
	968 Call RenderTargetIdentifier.op_Implicit, X0
	969 Move V0, [X22]
	970 Move V1, [X22+16]
	971 Move X8, [X31+408]
	972 Move [X31+144], V0
	973 Move [X31+152], V1
	974 Move [X31+176], X8
	975 Move W8, [X20+24]
	976 NotImplemented "Instruction CMP not yet implemented."
	977 Move X8, [X31+176]
	978 Move V1, [X31+144]
	979 Move V0, [X31+160]
	980 Move W0, W31
	981 Move X1, X31
	982 Move [X20+224], X8
	983 Add X8, X31, 376
	984 Move [X20+192], V1
	985 Move [X20+200], V0
	986 Call RenderTargetIdentifier.op_Implicit, X0
	987 Move V0, [X22]
	988 Move V1, [X22+16]
	989 Move X8, [X31+408]
	990 Move [X31+96], V0
	991 Move [X31+104], V1
	992 Move [X31+128], X8
	993 Move W8, [X20+24]
	994 NotImplemented "Instruction CMP not yet implemented."
	995 Move X8, [X31+128]
	996 Move V1, [X31+96]
	997 Move V0, [X31+112]
	998 Move W0, W31
	999 Move X1, X31
	1000 Move [X20+264], X8
	1001 Add X8, X31, 376
	1002 Move [X20+248], V0
	1003 Move [X20+232], V1
	1004 Call RenderTargetIdentifier.op_Implicit, X0
	1005 Move V0, [X22]
	1006 Move V1, [X22+16]
	1007 Move X8, [X31+408]
	1008 Move [X31+48], V0
	1009 Move [X31+56], V1
	1010 Move [X31+80], X8
	1011 Move W8, [X20+24]
	1012 NotImplemented "Instruction CMP not yet implemented."
	1013 Move X8, [X31+80]
	1014 Move V1, [X31+48]
	1015 Move V0, [X31+64]
	1016 Move W0, W31
	1017 Move X1, X31
	1018 Move [X20+304], X8
	1019 Add X8, X31, 376
	1020 Move [X20+272], V1
	1021 Move [X20+280], V0
	1022 Call RenderTargetIdentifier.op_Implicit, X0
	1023 Move V0, [X22]
	1024 Move V1, [X22+16]
	1025 Move X8, [X31+408]
	1026 Move [X31], V0
	1027 Move [X31+8], V1
	1028 Move [X31+32], X8
	1029 Move W8, [X20+24]
	1030 NotImplemented "Instruction CMP not yet implemented."
	1031 Move X8, [X31+32]
	1032 Move V0, [X31]
	1033 Move V1, [X31+16]
	1034 Add X9, X20, 312
	1035 Add X10, X20, 328
	1036 Move [X20+344], X8
	1037 Move [X10], V1
	1038 Move [X9], V0
	1039 Move W8, [X19+24]
	1040 NotImplemented "Instruction CMP not yet implemented."
	1041 Move [X19+96], X20
	1042 Move X8, [X21]
	1043 Move X9, 0x700000
	1044 Move W1, 6
	1045 Move X8, [X8+184]
	1046 Move X9, [X9+1424]
	1047 Move [X8+88], X19
	1048 Move X0, [X9]
	1049 Move X19, 0x6FC000
	1050 Move X19, [X19+72]
	1051 Call 0x1C17D6C
	1052 Move X8, [X21]
	1053 Move W1, 6
	1054 Move X8, [X8+184]
	1055 Move [X8+96], X0
	1056 Move X0, [X19]
	1057 Call 0x1C17D6C
	1058 Move X8, [X21]
	1059 Move X8, [X8+184]
	1060 Move [X8+104], X0
	1061 Add X31, X31, 2672
	1062 Move X20, [X31+32]
	1063 Move X19, [X31+40]
	1064 Move X22, [X31+16]
	1065 Move X21, [X31+24]
	1066 Move X29, [X31+48]
	1067 Move X30, [X31+56]
	1068 Return 
	1069 Call 0x1C17F28
	1070 Call 0x1C17F20
	1071 Move X9, X1
	1072 Move V1, [X0]
	1073 Move V0, [X0+16]
	1074 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	1075 Move S19, [X1+32]
	1076 Move S20, [X1+36]
	1077 Move S7, [X1+16]
	1078 Move S16, [X1+20]
	1079 Move S23, [X1+48]
	1080 Move S24, [X1+52]
	1081 Move V3, [X0+32]
	1082 Move V4, [X0+48]
	1083 Move S6, [X1+8]
	1084 Move S5, [X1+12]
	1085 Move S17, [X1+24]
	1086 Move S18, [X1+28]
	1087 Move S21, [X1+40]
	1088 Move S22, [X1+44]
	1089 Move S25, [X1+56]
	1090 Move S26, [X1+60]
	1091 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	1092 NotImplemented "Instruction INVALID not yet implemented."
	1093 NotImplemented "Instruction INVALID not yet implemented."
	1094 NotImplemented "Instruction INVALID not yet implemented."
	1095 NotImplemented "Instruction INVALID not yet implemented."
	1096 NotImplemented "Instruction INVALID not yet implemented."
	1097 NotImplemented "Instruction INVALID not yet implemented."
	1098 NotImplemented "Instruction INVALID not yet implemented."
	1099 Add V19, V19, V20
	1100 NotImplemented "Instruction INVALID not yet implemented."
	1101 Add V1, V1, V20
	1102 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	1103 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	1104 NotImplemented "Instruction INVALID not yet implemented."
	1105 NotImplemented "Instruction INVALID not yet implemented."
	1106 NotImplemented "Instruction INVALID not yet implemented."
	1107 NotImplemented "Instruction INVALID not yet implemented."
	1108 NotImplemented "Instruction INVALID not yet implemented."
	1109 NotImplemented "Instruction INVALID not yet implemented."
	1110 NotImplemented "Instruction INVALID not yet implemented."
	1111 Add V16, V27, V16
	1112 Add V16, V16, V17
	1113 Move V17, [X9]
	1114 Add V7, V7, V23
	1115 NotImplemented "Instruction INVALID not yet implemented."
	1116 NotImplemented "Instruction INVALID not yet implemented."
	1117 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	1118 NotImplemented "Instruction INVALID not yet implemented."
	1119 NotImplemented "Instruction INVALID not yet implemented."
	1120 NotImplemented "Instruction INVALID not yet implemented."
	1121 Add V3, V7, V3
	1122 Add V7, V19, V21
	1123 Add V3, V3, V4
	1124 Add V4, V7, V22
	1125 NotImplemented "Instruction INVALID not yet implemented."
	1126 NotImplemented "Instruction INVALID not yet implemented."
	1127 Add V0, V28, V0
	1128 Add V2, V2, V7
	1129 NotImplemented "Instruction INVALID not yet implemented."
	1130 NotImplemented "Instruction INVALID not yet implemented."
	1131 Add V1, V1, V25
	1132 Add V0, V0, V29
	1133 Add V2, V2, V6
	1134 Add V1, V1, V26
	1135 Add V16, V16, V18
	1136 Add V0, V0, V23
	1137 Add V2, V2, V5
	1138 Move [X8+16], D3
	1139 Move [X8+24], D16
	1140 Move [X8], D0
	1141 Move [X8+8], D2
	1142 Move [X8+32], V4
	1143 Move [X8+40], V1
	1144 Return 

