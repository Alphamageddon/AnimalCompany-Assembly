Type: UnityEngine.Rendering.Universal.LensDistortion

Method: System.Boolean IsActive()

Disassembly:
	0x03A5AE10 ADRP X22, 0x988000
	0x03A5AE14 ADRP X21, 0x6F9000
	0x03A5AE18 LDRB W8, [X22 + 0x213]
	0x03A5AE1C LDR X21, [X21 + 0xFF0]
	0x03A5AE20 MOV W19, W1
	0x03A5AE24 MOV X20, X0
	0x03A5AE28 TBNZ X8, 0x0, 0x3A5AE58
	0x03A5AE2C ADRP X0, 0x6F6000
	0x03A5AE30 LDR X0, [X0 + 0x598]
	0x03A5AE34 BL 0x1C16CF4
	0x03A5AE38 ADRP X0, 0x6F9000
	0x03A5AE3C LDR X0, [X0 + 0xFF0]
	0x03A5AE40 BL 0x1C16CF4
	0x03A5AE44 ADRP X0, 0x6FC000
	0x03A5AE48 LDR X0, [X0 + 0x398]
	0x03A5AE4C BL 0x1C16CF4
	0x03A5AE50 MOVZ W8, 0x1
	0x03A5AE54 STRB W8, [X22 + 0x213]
	0x03A5AE58 LDR X0, [X21]
	0x03A5AE5C ADRP X22, 0x6F6000
	0x03A5AE60 ADRP X21, 0x6FC000
	0x03A5AE64 LDR W8, [X0 + 0xE0]
	0x03A5AE68 LDR X22, [X22 + 0x598]
	0x03A5AE6C LDR X21, [X21 + 0x398]
	0x03A5AE70 CBNZ W8, 0x3A5AE78
	0x03A5AE74 BL 0x1C16DFC
	0x03A5AE78 MOV X0, X20
	0x03A5AE7C MOV X1, X31
	0x03A5AE80 BL 0x3A4225C
	0x03A5AE84 LDR X0, [X22]
	0x03A5AE88 BL 0x1C16F10
	0x03A5AE8C LDR X1, [X21]
	0x03A5AE90 MOV X2, X31

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move X0, [X0+56]
	005 Compare X0, 0
	006 JumpIfEqual {34}
	007 Move X8, [X0]
	008 Move X9, [X8+536]
	009 Move X1, [X8+544]
	010 NotImplemented "Instruction BLR not yet implemented."
	011 NotImplemented "Instruction FCMP not yet implemented."
	012 Move W0, W31
	013 Move X0, [X19+64]
	014 Compare X0, 0
	015 JumpIfEqual {34}
	016 Move X8, [X0]
	017 Move X9, [X8+536]
	018 Move X1, [X8+544]
	019 NotImplemented "Instruction BLR not yet implemented."
	020 NotImplemented "Instruction FCMP not yet implemented."
	021 Move W0, 1
	022 Move X0, [X19+72]
	023 Compare X0, 0
	024 JumpIfEqual {34}
	025 Move X8, [X0]
	026 Move X9, [X8+536]
	027 Move X1, [X8+544]
	028 NotImplemented "Instruction BLR not yet implemented."
	029 NotImplemented "Instruction FCMP not yet implemented."
	030 NotImplemented "Instruction CSET not yet implemented."
	031 Move X30, [X31+16]
	032 Move X19, [X31+24]
	033 Return X0
	034 Call 0x1C17F20

Method: System.Boolean IsTileCompatible()

Disassembly:
	0x03A5AE94 MOV X21, X0
	0x03A5AE98 BL 0x39B19AC

ISIL:
	001 Move W0, W31
	002 Return X0

Method: System.Void .ctor()

Disassembly:
	0x03A5AE9C STR X21, [X20 + 0x38]
	0x03A5AEA0 STR W19, [X20 + 0x10]
	0x03A5AEA4 LDP X20, X19, [X31 + 0x20]
	0x03A5AEA8 LDP X22, X21, [X31 + 0x10]
	0x03A5AEAC LDR X30, [X31], #0x30
	0x03A5AEB0 RET
	0x03A5AEB4 SUB X31, X31, 0xC0
	0x03A5AEB8 STR X30, [X31 + 0x90]
	0x03A5AEBC STP X22, X21, [X31 + 0xA0]
	0x03A5AEC0 STP X20, X19, [X31 + 0xB0]
	0x03A5AEC4 ADRP X21, 0x988000
	0x03A5AEC8 LDRB W8, [X21 + 0x214]
	0x03A5AECC MOV X19, X2
	0x03A5AED0 MOV X20, X0
	0x03A5AED4 TBNZ X8, 0x0, 0x3A5AF04
	0x03A5AED8 ADRP X0, 0x6FC000
	0x03A5AEDC LDR X0, [X0 + 0x3A0]
	0x03A5AEE0 BL 0x1C16CF4
	0x03A5AEE4 ADRP X0, 0x6FC000
	0x03A5AEE8 LDR X0, [X0 + 0x3A8]
	0x03A5AEEC BL 0x1C16CF4
	0x03A5AEF0 ADRP X0, 0x699000
	0x03A5AEF4 LDR X0, [X0 + 0xE18]
	0x03A5AEF8 BL 0x1C16CF4
	0x03A5AEFC MOVZ W8, 0x1
	0x03A5AF00 STRB W8, [X21 + 0x214]
	0x03A5AF04 STRB W31, [X31 + 0x98]
	0x03A5AF08 LDR X0, [X19 + 0x1D0]
	0x03A5AF0C CBZ X0, 0x3A5B108
	0x03A5AF10 LDR X8, [X0]
	0x03A5AF14 LDR X21, [X19]
	0x03A5AF18 ADRP X22, 0x6FC000
	0x03A5AF1C LDP X9, X2, [X8 + 0x1A8]
	0x03A5AF20 LDR X22, [X22 + 0x3A0]
	0x03A5AF24 MOV X1, X21
	0x03A5AF28 BLR X9
	0x03A5AF2C STR X0, [X20 + 0xE0]
	0x03A5AF30 LDR X0, [X22]
	0x03A5AF34 LDR W8, [X0 + 0xE0]
	0x03A5AF38 CBNZ W8, 0x3A5AF44
	0x03A5AF3C BL 0x1C16DFC
	0x03A5AF40 LDR X0, [X22]
	0x03A5AF44 LDR X8, [X0 + 0xB8]
	0x03A5AF48 ADD X0, X31, 0x98
	0x03A5AF4C MOV X1, X21
	0x03A5AF50 MOV X3, X31
	0x03A5AF54 LDR X2, [X8]
	0x03A5AF58 BL 0x39B1DB0
	0x03A5AF5C LDR X8, [X20 + 0xE0]
	0x03A5AF60 CBZ X8, 0x3A5B10C
	0x03A5AF64 LDR X9, [X8 + 0x48]
	0x03A5AF68 LDUR V0, [X8 + 0x38]
	0x03A5AF6C LDUR V1, [X8 + 0x28]
	0x03A5AF70 STR X9, [X31 + 0x50]
	0x03A5AF74 STP V1, V0, [X31 + 0x30]
	0x03A5AF78 LDR X20, [X19 + 0x1A8]
	0x03A5AF7C CBZ X20, 0x3A5B110
	0x03A5AF80 ADRP X21, 0x699000
	0x03A5AF84 LDR X8, [X20]
	0x03A5AF88 LDR X21, [X21 + 0xE18]
	0x03A5AF8C LDRH W9, [X8 + 0x12E]
	0x03A5AF90 LDR X1, [X21]
	0x03A5AF94 CBZ X9, 0x3A5AFB8
	0x03A5AF98 LDR X10, [X8 + 0xB0]
	0x03A5AF9C ADD X10, X10, 0x8
	0x03A5AFA0 LDUR X11, [X10 - 0x8]
	0x03A5AFA4 CMP X11, X1
	0x03A5AFA8 B.EQ 0x3A5AFC8
	0x03A5AFAC SUBS X9, X9, 0x1
	0x03A5AFB0 ADD X10, X10, 0x10
	0x03A5AFB4 B.NE 0x3A5AFA0
	0x03A5AFB8 MOVZ W2, 0x2
	0x03A5AFBC MOV X0, X20
	0x03A5AFC0 BL 0x1C5C788
	0x03A5AFC4 B 0x3A5AFD8

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x989000
	007 Move X21, 0x6FD000
	008 Move X22, 0x6FD000
	009 Move W8, [X20+514]
	010 Move X21, [X21+168]
	011 Move X22, [X22+816]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x6FD000
	018 Move X0, [X0+168]
	019 Call 0x1C17CF4
	020 Move X0, 0x6FD000
	021 Move X0, [X0+816]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X20+514], W8
	025 Move X0, [X21]
	026 Call 0x1C17F10
	027 Move S0, W31
	028 Move S1, -1
	029 Move S2, 1
	030 Move W1, W31
	031 Move X2, X31
	032 Move X20, X0
	033 Call ClampedFloatParameter..ctor, X0, V0, V1, V2, X1
	034 Move [X19+56], X20
	035 Move X0, [X21]
	036 Call 0x1C17F10
	037 Move S0, 1
	038 Move S1, W31
	039 Move S2, 1
	040 Move W1, W31
	041 Move X2, X31
	042 Move X20, X0
	043 Call ClampedFloatParameter..ctor, X0, V0, V1, V2, X1
	044 Move [X19+64], X20
	045 Move X0, [X21]
	046 Call 0x1C17F10
	047 Move S0, 1
	048 Move S1, W31
	049 Move S2, 1
	050 Move W1, W31
	051 Move X2, X31
	052 Move X20, X0
	053 Call ClampedFloatParameter..ctor, X0, V0, V1, V2, X1
	054 Move [X19+72], X20
	055 Move X0, [X22]
	056 Call 0x1C17F10
	057 Move S0, 0.5
	058 Move S1, 0.5
	059 Move W1, W31
	060 Move X2, X31
	061 Move X20, X0
	062 Call Vector2Parameter..ctor, X0, X1, X2
	063 Move [X19+80], X20
	064 Move X0, [X21]
	065 Call 0x1C17F10
	066 Move X8, -49737728
	067 Move V1, [X8+816]
	068 Move S0, 1
	069 Move S2, 5
	070 Move W1, W31
	071 Move X2, X31
	072 Move X20, X0
	073 Call ClampedFloatParameter..ctor, X0, V0, V1, V2, X1
	074 Move [X19+88], X20
	075 Move X0, X19
	076 Move X20, [X31+32]
	077 Move X19, [X31+40]
	078 Move X22, [X31+16]
	079 Move X21, [X31+24]
	080 Move X1, X31
	081 Move X30, [X31+48]
	082 Call VolumeComponent..ctor, X0
	083 Return 

