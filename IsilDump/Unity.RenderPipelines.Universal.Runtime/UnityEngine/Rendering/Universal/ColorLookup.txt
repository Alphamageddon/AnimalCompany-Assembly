Type: UnityEngine.Rendering.Universal.ColorLookup

Method: System.Boolean IsActive()

Disassembly:
	0x03A5A53C LDR X0, [X22]
	0x03A5A540 BL 0x1C16F10
	0x03A5A544 FMOV S0, 1
	0x03A5A548 FMOV S1, 1
	0x03A5A54C FMOV S2, 1
	0x03A5A550 FMOV S3, W31
	0x03A5A554 MOV W1, W31
	0x03A5A558 MOV X2, X31
	0x03A5A55C MOV X20, X0
	0x03A5A560 BL 0x39F3854
	0x03A5A564 STR X20, [X19 + 0x38]
	0x03A5A568 LDR X0, [X22]
	0x03A5A56C BL 0x1C16F10
	0x03A5A570 FMOV S0, 1
	0x03A5A574 FMOV S1, 1
	0x03A5A578 FMOV S2, 1
	0x03A5A57C FMOV S3, W31

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move X0, [X0+64]
	005 Compare X0, 0
	006 JumpIfEqual {19}
	007 Move X8, [X0]
	008 Move X9, [X8+536]
	009 Move X1, [X8+544]
	010 NotImplemented "Instruction BLR not yet implemented."
	011 NotImplemented "Instruction FCMP not yet implemented."
	012 Move X0, X19
	013 Move X30, [X31+16]
	014 Move X19, [X31+24]
	015 Move W0, W31
	016 Move X30, [X31+16]
	017 Move X19, [X31+24]
	018 Return X0
	019 Call 0x1C17F20

Method: System.Boolean IsTileCompatible()

Disassembly:
	0x03A5A7D0 FMOV S1, W8
	0x03A5A7D4 FMOV S2, W9

ISIL:
	001 Move W0, 1
	002 Return X0

Method: System.Boolean ValidateLUT()

Disassembly:
	0x03A5A580 MOV W1, W31
	0x03A5A584 MOV X2, X31
	0x03A5A588 MOV X20, X0
	0x03A5A58C BL 0x39F3854
	0x03A5A590 STR X20, [X19 + 0x40]
	0x03A5A594 LDR X0, [X22]
	0x03A5A598 BL 0x1C16F10
	0x03A5A59C FMOV S0, 1
	0x03A5A5A0 FMOV S1, 1
	0x03A5A5A4 FMOV S2, 1
	0x03A5A5A8 FMOV S3, W31
	0x03A5A5AC MOV W1, W31
	0x03A5A5B0 MOV X2, X31
	0x03A5A5B4 MOV X20, X0
	0x03A5A5B8 BL 0x39F3854
	0x03A5A5BC STR X20, [X19 + 0x48]
	0x03A5A5C0 LDR X0, [X21]
	0x03A5A5C4 BL 0x1C16F10
	0x03A5A5C8 FMOV S0, W31
	0x03A5A5CC FMOV S1, W31
	0x03A5A5D0 MOV W1, W31
	0x03A5A5D4 MOV X2, X31
	0x03A5A5D8 MOV X20, X0
	0x03A5A5DC BL 0x39F2F34
	0x03A5A5E0 STR X20, [X19 + 0x50]
	0x03A5A5E4 LDR X0, [X21]
	0x03A5A5E8 BL 0x1C16F10
	0x03A5A5EC ADRP X8, 0xFFFFFFFFFD090000
	0x03A5A5F0 LDR V0, [X8 + 0x44C]
	0x03A5A5F4 FMOV S1, W31
	0x03A5A5F8 MOV W1, W31
	0x03A5A5FC MOV X2, X31
	0x03A5A600 MOV X20, X0
	0x03A5A604 BL 0x39F2F34
	0x03A5A608 STR X20, [X19 + 0x58]
	0x03A5A60C LDR X0, [X21]
	0x03A5A610 BL 0x1C16F10
	0x03A5A614 ADRP X8, 0xFFFFFFFFFD090000
	0x03A5A618 LDR V0, [X8 + 0x440]
	0x03A5A61C FMOV S1, W31
	0x03A5A620 MOV W1, W31
	0x03A5A624 MOV X2, X31
	0x03A5A628 MOV X20, X0
	0x03A5A62C BL 0x39F2F34
	0x03A5A630 STR X20, [X19 + 0x60]
	0x03A5A634 LDR X0, [X21]
	0x03A5A638 BL 0x1C16F10
	0x03A5A63C FMOV S0, 1
	0x03A5A640 FMOV S1, W31
	0x03A5A644 MOV W1, W31
	0x03A5A648 MOV X2, X31
	0x03A5A64C MOV X20, X0
	0x03A5A650 BL 0x39F2F34
	0x03A5A654 STR X20, [X19 + 0x68]
	0x03A5A658 MOV X0, X19
	0x03A5A65C LDP X20, X19, [X31 + 0x20]
	0x03A5A660 LDP X22, X21, [X31 + 0x10]
	0x03A5A664 MOV X1, X31
	0x03A5A668 LDR X30, [X31], #0x30
	0x03A5A66C B 0x39F05AC
	0x03A5A670 STP X30, X21, [X31 - 0x20]!
	0x03A5A674 STP X20, X19, [X31 + 0x10]
	0x03A5A678 ADRP X21, 0x988000
	0x03A5A67C ADRP X20, 0x6FC000
	0x03A5A680 LDRB W8, [X21 + 0x20B]
	0x03A5A684 LDR X20, [X20 + 0x2F0]
	0x03A5A688 MOV X19, X0
	0x03A5A68C TBNZ X8, 0x0, 0x3A5A6A4
	0x03A5A690 ADRP X0, 0x6FC000
	0x03A5A694 LDR X0, [X0 + 0x2F0]
	0x03A5A698 BL 0x1C16CF4
	0x03A5A69C MOVZ W8, 0x1
	0x03A5A6A0 STRB W8, [X21 + 0x20B]
	0x03A5A6A4 LDR X0, [X19 + 0x38]
	0x03A5A6A8 LDR X1, [X20]
	0x03A5A6AC FMOV S0, 0.5
	0x03A5A6B0 FMOV S1, 0.5
	0x03A5A6B4 FMOV S2, 0.5
	0x03A5A6B8 FMOV S3, 1
	0x03A5A6BC BL 0x2849D08
	0x03A5A6C0 TBZ X0, 0x0, 0x3A5A6D4
	0x03A5A6C4 LDP X20, X19, [X31 + 0x10]
	0x03A5A6C8 MOVZ W0, 0x1
	0x03A5A6CC LDP X30, X21, [X31], #0x20
	0x03A5A6D0 RET
	0x03A5A6D4 LDR X0, [X19 + 0x40]
	0x03A5A6D8 LDR X1, [X20]
	0x03A5A6DC LDP X20, X19, [X31 + 0x10]
	0x03A5A6E0 FMOV S0, 0.5
	0x03A5A6E4 FMOV S1, 0.5
	0x03A5A6E8 FMOV S2, 0.5
	0x03A5A6EC FMOV S3, 1
	0x03A5A6F0 LDP X30, X21, [X31], #0x20
	0x03A5A6F4 B 0x2849D08
	0x03A5A6F8 MOVZ W0, 0x1
	0x03A5A6FC RET
	0x03A5A700 STR X30, [X31 - 0x30]!
	0x03A5A704 STP X22, X21, [X31 + 0x10]
	0x03A5A708 STP X20, X19, [X31 + 0x20]
	0x03A5A70C ADRP X20, 0x988000
	0x03A5A710 ADRP X22, 0x6F7000
	0x03A5A714 ADRP X21, 0x6FC000
	0x03A5A718 LDRB W8, [X20 + 0x20C]
	0x03A5A71C LDR X22, [X22 + 0x5B0]
	0x03A5A720 LDR X21, [X21 + 0xA8]
	0x03A5A724 MOV X19, X0
	0x03A5A728 TBNZ X8, 0x0, 0x3A5A74C
	0x03A5A72C ADRP X0, 0x6FC000
	0x03A5A730 LDR X0, [X0 + 0xA8]
	0x03A5A734 BL 0x1C16CF4
	0x03A5A738 ADRP X0, 0x6F7000
	0x03A5A73C LDR X0, [X0 + 0x5B0]
	0x03A5A740 BL 0x1C16CF4
	0x03A5A744 MOVZ W8, 0x1
	0x03A5A748 STRB W8, [X20 + 0x20C]
	0x03A5A74C LDR X0, [X22]
	0x03A5A750 BL 0x1C16F10
	0x03A5A754 FMOV S0, 0.5
	0x03A5A758 FMOV S1, 0.5
	0x03A5A75C FMOV S2, 0.5
	0x03A5A760 FMOV S3, 1
	0x03A5A764 MOVZ W3, 0x1
	0x03A5A768 MOV W1, W31
	0x03A5A76C MOV W2, W31
	0x03A5A770 MOV W4, W31
	0x03A5A774 MOV X5, X31
	0x03A5A778 MOV X20, X0
	0x03A5A77C BL 0x39F33BC
	0x03A5A780 STR X20, [X19 + 0x38]
	0x03A5A784 LDR X0, [X22]
	0x03A5A788 BL 0x1C16F10
	0x03A5A78C FMOV S0, 0.5
	0x03A5A790 FMOV S1, 0.5
	0x03A5A794 FMOV S2, 0.5
	0x03A5A798 FMOV S3, 1
	0x03A5A79C MOVZ W3, 0x1
	0x03A5A7A0 MOV W1, W31
	0x03A5A7A4 MOV W2, W31
	0x03A5A7A8 MOV W4, W31
	0x03A5A7AC MOV X5, X31
	0x03A5A7B0 MOV X20, X0
	0x03A5A7B4 BL 0x39F33BC
	0x03A5A7B8 STR X20, [X19 + 0x40]
	0x03A5A7BC LDR X0, [X21]
	0x03A5A7C0 BL 0x1C16F10
	0x03A5A7C4 MOVZ W8, 0xC2C80000
	0x03A5A7C8 MOVZ W9, 0x42C80000
	0x03A5A7CC FMOV S0, W31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x989000
	006 Move X20, 0x6C3000
	007 Move W8, [X21+507]
	008 Move X20, [X20+2216]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {31}
	014 Move X0, 0x6FA000
	015 Move X0, [X0+144]
	016 Call 0x1C17CF4
	017 Move X0, 0x69A000
	018 Move X0, [X0+1432]
	019 Call 0x1C17CF4
	020 Move X0, 0x69C000
	021 Move X0, [X0+304]
	022 Call 0x1C17CF4
	023 Move X0, 0x6C4000
	024 Move X0, [X0+592]
	025 Call 0x1C17CF4
	026 Move X0, 0x6C3000
	027 Move X0, [X0+2216]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X21+507], W8
	031 Move X0, [X20]
	032 Move X21, 0x69A000
	033 Move W8, [X0+224]
	034 Move X21, [X21+1432]
	035 Compare W8, 0
	036 JumpIfNotEqual {38}
	037 Call 0x1C17DFC
	038 Move X0, X31
	039 Call UniversalRenderPipeline.get_asset
	040 Move X8, [X21]
	041 Move X20, X0
	042 Move W9, [X8+224]
	043 Compare W9, 0
	044 JumpIfNotEqual {47}
	045 Move X0, X8
	046 Call 0x1C17DFC
	047 Move X0, X20
	048 Move X1, X31
	049 Move X2, X31
	050 Call Object.op_Equality, X0, X1
	051 Move TEMP, X0
	052 And TEMP, TEMP, 1
	053 Compare TEMP, 1
	054 JumpIfEqual {162}
	055 Move X0, [X19+56]
	056 Compare X0, 0
	057 JumpIfEqual {169}
	058 Move X8, [X0]
	059 Move X9, [X8+536]
	060 Move X1, [X8+544]
	061 NotImplemented "Instruction BLR not yet implemented."
	062 Move X8, [X21]
	063 Move X21, X0
	064 Move W9, [X8+224]
	065 Compare W9, 0
	066 JumpIfNotEqual {69}
	067 Move X0, X8
	068 Call 0x1C17DFC
	069 Move X0, X21
	070 Move X1, X31
	071 Move X2, X31
	072 Call Object.op_Equality, X0, X1
	073 Move TEMP, X0
	074 And TEMP, TEMP, 1
	075 Compare TEMP, 1
	076 JumpIfEqual {162}
	077 Compare X20, 0
	078 JumpIfEqual {169}
	079 Move X0, [X19+56]
	080 Compare X0, 0
	081 JumpIfEqual {169}
	082 Move X8, [X0]
	083 Move W20, [X20+256]
	084 Move X9, [X8+536]
	085 Move X1, [X8+544]
	086 NotImplemented "Instruction BLR not yet implemented."
	087 Compare X0, 0
	088 JumpIfEqual {169}
	089 Move X8, [X0]
	090 Move X9, [X8+424]
	091 Move X1, [X8+432]
	092 NotImplemented "Instruction BLR not yet implemented."
	093 NotImplemented "Instruction CMP not yet implemented."
	094 Move X0, [X19+56]
	095 Compare X0, 0
	096 JumpIfEqual {169}
	097 Move X8, [X0]
	098 Move X9, [X8+536]
	099 Move X1, [X8+544]
	100 NotImplemented "Instruction BLR not yet implemented."
	101 Compare X0, 0
	102 JumpIfEqual {162}
	103 Move X8, 0x6C4000
	104 Move X8, [X8+592]
	105 Move X19, X0
	106 Move X9, [X8]
	107 Move X8, [X0]
	108 NotImplemented "Instruction CMP not yet implemented."
	109 Move X9, 0x69C000
	110 Move X9, [X9+304]
	111 Move W11, [X8+304]
	112 Move X9, [X9]
	113 Move W10, [X9+304]
	114 NotImplemented "Instruction CMP not yet implemented."
	115 Move X8, [X8+200]
	116 Add X8, X8, X10
	117 NotImplemented "Instruction LDUR not yet implemented."
	118 NotImplemented "Instruction CMP not yet implemented."
	119 NotImplemented "Instruction CSEL not yet implemented."
	120 Compare X19, 0
	121 JumpIfEqual {162}
	122 Move X8, [X19]
	123 Move X0, X19
	124 Move X9, [X8+456]
	125 Move X1, [X8+464]
	126 NotImplemented "Instruction BLR not yet implemented."
	127 NotImplemented "Instruction CMP not yet implemented."
	128 Move X8, [X19]
	129 Move X0, X19
	130 Move X9, [X8+392]
	131 Move X1, [X8+400]
	132 NotImplemented "Instruction BLR not yet implemented."
	133 Multiply W8, W20, W20
	134 NotImplemented "Instruction CMP not yet implemented."
	135 Move X0, X19
	136 Move X1, X31
	137 Call RenderTexture.get_sRGB, X0
	138 Move X8, [X9+392]
	139 Move X1, [X9+400]
	140 Move X0, X19
	141 NotImplemented "Instruction BLR not yet implemented."
	142 Multiply W8, W20, W20
	143 NotImplemented "Instruction CMP not yet implemented."
	144 Move X8, [X19]
	145 Move X0, X19
	146 Move X9, [X8+376]
	147 Move X1, [X8+384]
	148 NotImplemented "Instruction BLR not yet implemented."
	149 Move X8, 0x6FA000
	150 Move X8, [X8+144]
	151 Move W19, W0
	152 Move X8, [X8]
	153 Move W9, [X8+224]
	154 Compare W9, 0
	155 JumpIfNotEqual {158}
	156 Move X0, X8
	157 Call 0x1C17DFC
	158 Move W0, W19
	159 Move X1, X31
	160 Call GraphicsFormatUtility.IsSRGBFormat, X0
	161 Xor W8, W0, 1
	162 Move W8, W31
	163 Move X20, [X31+16]
	164 Move X19, [X31+24]
	165 And W0, W8, 1
	166 Move X30, [X31+32]
	167 Move X21, [X31+40]
	168 Return X0
	169 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x03A5A7D8 MOV W1, W31
	0x03A5A7DC MOV X2, X31
	0x03A5A7E0 MOV X20, X0
	0x03A5A7E4 BL 0x39F30E4
	0x03A5A7E8 STR X20, [X19 + 0x48]
	0x03A5A7EC MOV X0, X19
	0x03A5A7F0 LDP X20, X19, [X31 + 0x20]
	0x03A5A7F4 LDP X22, X21, [X31 + 0x10]
	0x03A5A7F8 MOV X1, X31
	0x03A5A7FC LDR X30, [X31], #0x30
	0x03A5A800 B 0x39F05AC
	0x03A5A804 STR X30, [X31 - 0x10]!
	0x03A5A808 LDR X0, [X0 + 0x38]
	0x03A5A80C CBZ X0, 0x3A5A830
	0x03A5A810 LDR X8, [X0]
	0x03A5A814 LDR X9, [X8 + 0x218]
	0x03A5A818 LDR X1, [X8 + 0x220]
	0x03A5A81C BLR X9
	0x03A5A820 CMP W0, 0x0
	0x03A5A824 CSET W0, NE
	0x03A5A828 LDR X30, [X31], #0x10
	0x03A5A82C RET
	0x03A5A830 BL 0x1C16F20
	0x03A5A834 MOVZ W0, 0x1
	0x03A5A838 RET
	0x03A5A83C STP X30, X25, [X31 - 0x40]!
	0x03A5A840 STP X24, X23, [X31 + 0x10]
	0x03A5A844 STP X22, X21, [X31 + 0x20]
	0x03A5A848 STP X20, X19, [X31 + 0x30]
	0x03A5A84C ADRP X20, 0x988000
	0x03A5A850 ADRP X25, 0x6FC000
	0x03A5A854 ADRP X24, 0x6FC000
	0x03A5A858 ADRP X23, 0x6FC000
	0x03A5A85C ADRP X21, 0x6FC000
	0x03A5A860 ADRP X22, 0x6F7000
	0x03A5A864 LDRB W8, [X20 + 0x20D]
	0x03A5A868 LDR X25, [X25 + 0x368]
	0x03A5A86C LDR X24, [X24 + 0x370]
	0x03A5A870 LDR X23, [X23 + 0x378]
	0x03A5A874 LDR X21, [X21 + 0xA8]
	0x03A5A878 LDR X22, [X22 + 0x598]
	0x03A5A87C MOV X19, X0
	0x03A5A880 TBNZ X8, 0x0, 0x3A5A8C8

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x989000
	007 Move X22, 0x6FD000
	008 Move X21, 0x6FD000
	009 Move W8, [X20+508]
	010 Move X22, [X22+184]
	011 Move X21, [X21+168]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x6FD000
	018 Move X0, [X0+168]
	019 Call 0x1C17CF4
	020 Move X0, 0x6FD000
	021 Move X0, [X0+184]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X20+508], W8
	025 Move X0, [X22]
	026 Call 0x1C17F10
	027 Move X1, X31
	028 Move W2, W31
	029 Move X3, X31
	030 Move X20, X0
	031 Call TextureParameter..ctor, X0, X1, X2
	032 Move [X19+56], X20
	033 Move X0, [X21]
	034 Call 0x1C17F10
	035 Move S0, W31
	036 Move S1, W31
	037 Move S2, 1
	038 Move W1, W31
	039 Move X2, X31
	040 Move X20, X0
	041 Call ClampedFloatParameter..ctor, X0, V0, V1, V2, X1
	042 Move [X19+64], X20
	043 Move X0, X19
	044 Move X20, [X31+32]
	045 Move X19, [X31+40]
	046 Move X22, [X31+16]
	047 Move X21, [X31+24]
	048 Move X1, X31
	049 Move X30, [X31+48]
	050 Call VolumeComponent..ctor, X0
	051 Return 

