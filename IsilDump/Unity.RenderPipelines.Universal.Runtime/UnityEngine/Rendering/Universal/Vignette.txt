Type: UnityEngine.Rendering.Universal.Vignette

Method: System.Boolean IsActive()

Disassembly:
	0x03A5BB50 STR W9, [X31 + 0xF0]
	0x03A5BB54 STP V1, V0, [X31 + 0xD0]
	0x03A5BB58 STR V2, [X31 + 0xC]
	0x03A5BB5C LDR V8, [X20 + 0x158]
	0x03A5BB60 ADD X0, X31, 0xC0
	0x03A5BB64 MOV W1, W31
	0x03A5BB68 MOV X2, X31
	0x03A5BB6C BL 0x3C2240C
	0x03A5BB70 ADD X0, X31, 0xC0
	0x03A5BB74 MOV W1, W22
	0x03A5BB78 MOV X2, X31
	0x03A5BB7C BL 0x3C22520

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+72]
	003 Compare X0, 0
	004 JumpIfEqual {13}
	005 Move X8, [X0]
	006 Move X9, [X8+536]
	007 Move X1, [X8+544]
	008 NotImplemented "Instruction BLR not yet implemented."
	009 NotImplemented "Instruction FCMP not yet implemented."
	010 NotImplemented "Instruction CSET not yet implemented."
	011 Move X30, [X31+16]
	012 Return X0
	013 Call 0x1C17F20

Method: System.Boolean IsTileCompatible()

Disassembly:
	0x03A5BB80 ADRP X8, 0x6FB000
	0x03A5BB84 LDR X8, [X8 + 0x3C8]

ISIL:
	001 Move W0, 1
	002 Return X0

Method: System.Void .ctor()

Disassembly:
	0x03A5BB88 STR D8, [X31 + 0xC0]
	0x03A5BB8C LDP V1, V0, [X31 + 0xD0]
	0x03A5BB90 LDR W9, [X31 + 0xF0]
	0x03A5BB94 LDR V2, [X31 + 0xC]
	0x03A5BB98 LDR X2, [X8]
	0x03A5BB9C STP V1, V0, [X31 + 0x10]
	0x03A5BBA0 STR W9, [X31 + 0x30]
	0x03A5BBA4 STR V2, [X31]
	0x03A5BBA8 ADD X1, X31, 0x0
	0x03A5BBAC MOVZ W5, 0x1
	0x03A5BBB0 MOV X0, X21
	0x03A5BBB4 MOV W3, W31
	0x03A5BBB8 MOV W4, W31
	0x03A5BBBC MOV X6, X31
	0x03A5BBC0 BL 0x3A87660
	0x03A5BBC4 STR X0, [X31 + 0xB8]
	0x03A5BBC8 ADD X0, X31, 0x140
	0x03A5BBCC ADD X1, X31, 0xB8
	0x03A5BBD0 MOVZ W2, 0x3
	0x03A5BBD4 MOV X3, X31
	0x03A5BBD8 BL 0x3996A00
	0x03A5BBDC LDR X8, [X31 + 0x168]
	0x03A5BBE0 CBZ X8, 0x3A5BCC0
	0x03A5BBE4 LDR X9, [X20]
	0x03A5BBE8 ADRP X21, 0x6FB000
	0x03A5BBEC STR X9, [X8 + 0x10]
	0x03A5BBF0 LDR X9, [X20 + 0xD8]
	0x03A5BBF4 STR X9, [X8 + 0x18]
	0x03A5BBF8 LDR X9, [X19]
	0x03A5BBFC LDR X21, [X21 + 0x3F8]
	0x03A5BC00 STR X9, [X8 + 0x20]
	0x03A5BC04 LDR X8, [X21]
	0x03A5BC08 LDR W9, [X8 + 0xE0]
	0x03A5BC0C CBNZ W9, 0x3A5BC1C
	0x03A5BC10 MOV X0, X8
	0x03A5BC14 BL 0x1C16DFC
	0x03A5BC18 LDR X8, [X21]
	0x03A5BC1C LDR X9, [X8 + 0xB8]
	0x03A5BC20 LDR X19, [X9 + 0x8]
	0x03A5BC24 CBNZ X19, 0x3A5BC7C
	0x03A5BC28 LDR W9, [X8 + 0xE0]
	0x03A5BC2C CBNZ W9, 0x3A5BC3C
	0x03A5BC30 MOV X0, X8
	0x03A5BC34 BL 0x1C16DFC
	0x03A5BC38 LDR X8, [X21]
	0x03A5BC3C ADRP X9, 0x6FB000
	0x03A5BC40 LDR X8, [X8 + 0xB8]
	0x03A5BC44 LDR X9, [X9 + 0x3D8]
	0x03A5BC48 LDR X20, [X8]
	0x03A5BC4C LDR X0, [X9]
	0x03A5BC50 BL 0x1C16F10
	0x03A5BC54 ADRP X8, 0x6FB000
	0x03A5BC58 LDR X8, [X8 + 0x3F0]
	0x03A5BC5C MOV X19, X0
	0x03A5BC60 LDR X2, [X8]
	0x03A5BC64 MOV X1, X20
	0x03A5BC68 MOV X3, X31
	0x03A5BC6C BL 0x25C78AC
	0x03A5BC70 LDR X8, [X21]
	0x03A5BC74 LDR X8, [X8 + 0xB8]
	0x03A5BC78 STR X19, [X8 + 0x8]
	0x03A5BC7C ADRP X8, 0x6FB000
	0x03A5BC80 LDR X8, [X8 + 0x3E0]
	0x03A5BC84 LDR X2, [X8]
	0x03A5BC88 ADD X0, X31, 0x140
	0x03A5BC8C MOV X1, X19
	0x03A5BC90 BL 0x224107C
	0x03A5BC94 ADD X0, X31, 0x140
	0x03A5BC98 MOV X1, X31
	0x03A5BC9C BL 0x39972C0
	0x03A5BCA0 LDP X20, X19, [X31 + 0x1A0]
	0x03A5BCA4 LDP X22, X21, [X31 + 0x190]
	0x03A5BCA8 LDP X24, X23, [X31 + 0x180]
	0x03A5BCAC LDP X29, X30, [X31 + 0x170]
	0x03A5BCB0 LDR V8, [X31 + 0x160]
	0x03A5BCB4 ADD X31, X31, 0x1B0
	0x03A5BCB8 RET
	0x03A5BCBC BL 0x1C16F20
	0x03A5BCC0 BL 0x1C16F20
	0x03A5BCC4 B 0x3A5BCEC
	0x03A5BCC8 B 0x3A5BCEC
	0x03A5BCCC B 0x3A5BCEC
	0x03A5BCD0 B 0x3A5BCEC
	0x03A5BCD4 B 0x3A5BCEC
	0x03A5BCD8 B 0x3A5BCEC
	0x03A5BCDC B 0x3A5BCEC
	0x03A5BCE0 B 0x3A5BCEC
	0x03A5BCE4 B 0x3A5BCEC
	0x03A5BCE8 B 0x3A5BCEC
	0x03A5BCEC MOV X19, X0

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0x988000
	009 Move X24, 0x6F7000
	010 Move X23, 0x6FC000
	011 Move X22, 0x6FC000
	012 Move X21, 0x6F7000
	013 Move W8, [X20+529]
	014 Move X24, [X24+1456]
	015 Move X23, [X23+816]
	016 Move X22, [X22+168]
	017 Move X21, [X21+1432]
	018 Move X19, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {37}
	023 Move X0, 0x6F7000
	024 Move X0, [X0+1432]
	025 Call 0x1C17CF4
	026 Move X0, 0x6FC000
	027 Move X0, [X0+168]
	028 Call 0x1C17CF4
	029 Move X0, 0x6F7000
	030 Move X0, [X0+1456]
	031 Call 0x1C17CF4
	032 Move X0, 0x6FC000
	033 Move X0, [X0+816]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X20+529], W8
	037 Move X0, [X24]
	038 Call 0x1C17F10
	039 Move S0, W31
	040 Move S1, W31
	041 Move S2, W31
	042 Move S3, 1
	043 Move W3, 1
	044 Move W1, W31
	045 Move W2, W31
	046 Move W4, W31
	047 Move X5, X31
	048 Move X20, X0
	049 Call ColorParameter..ctor, X0, X1, X2, X3, X4, X5
	050 Move [X19+56], X20
	051 Move X0, [X23]
	052 Call 0x1C17F10
	053 Move S0, 0.5
	054 Move S1, 0.5
	055 Move W1, W31
	056 Move X2, X31
	057 Move X20, X0
	058 Call Vector2Parameter..ctor, X0, X1, X2
	059 Move [X19+64], X20
	060 Move X0, [X22]
	061 Call 0x1C17F10
	062 Move S0, W31
	063 Move S1, W31
	064 Move S2, 1
	065 Move W1, W31
	066 Move X2, X31
	067 Move X20, X0
	068 Call ClampedFloatParameter..ctor, X0, V0, V1, V2, X1
	069 Move [X19+72], X20
	070 Move X0, [X22]
	071 Call 0x1C17F10
	072 Move X8, -49741824
	073 Move X9, -49741824
	074 Move V0, [X8+860]
	075 Move V1, [X9+816]
	076 Move S2, 1
	077 Move W1, W31
	078 Move X2, X31
	079 Move X20, X0
	080 Call ClampedFloatParameter..ctor, X0, V0, V1, V2, X1
	081 Move [X19+80], X20
	082 Move X0, [X21]
	083 Call 0x1C17F10
	084 Move W1, W31
	085 Move W2, W31
	086 Move X3, X31
	087 Move X20, X0
	088 Call BoolParameter..ctor, X0, X1, X2
	089 Move [X19+88], X20
	090 Move X0, X19
	091 Move X20, [X31+48]
	092 Move X19, [X31+56]
	093 Move X22, [X31+32]
	094 Move X21, [X31+40]
	095 Move X24, [X31+16]
	096 Move X23, [X31+24]
	097 Move X1, X31
	098 Move X30, [X31+64]
	099 Call VolumeComponent..ctor, X0
	100 Return 

