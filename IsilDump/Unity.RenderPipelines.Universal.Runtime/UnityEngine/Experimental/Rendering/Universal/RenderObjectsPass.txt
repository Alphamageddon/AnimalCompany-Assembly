Type: UnityEngine.Experimental.Rendering.Universal.RenderObjectsPass

Method: UnityEngine.Material get_overrideMaterial()

Disassembly:
	0x03A03484 B 0x3A03494
	0x03A03488 B 0x3A03494

ISIL:
	001 Move X0, [X0+280]
	002 Return X0

Method: System.Void set_overrideMaterial(UnityEngine.Material value)

Disassembly:
	0x03A0348C B 0x3A03494
	0x03A03490 B 0x3A03494

ISIL:
	001 Move [X0+280], X1
	002 Return 

Method: System.Int32 get_overrideMaterialPassIndex()

Disassembly:
	0x03A03494 MOV X19, X0
	0x03A03498 CMP W1, 0x1

ISIL:
	001 Move W0, [X0+288]
	002 Return X0

Method: System.Void set_overrideMaterialPassIndex(System.Int32 value)

Disassembly:
	0x03A0349C B.NE 0x3A034C8
	0x03A034A0 MOV X0, X19

ISIL:
	001 Move [X0+288], W1
	002 Return 

Method: UnityEngine.Shader get_overrideShader()

Disassembly:
	0x03A034A4 BL 0x3EB1AD0
	0x03A034A8 LDR X20, [X0]

ISIL:
	001 Move X0, [X0+296]
	002 Return X0

Method: System.Void set_overrideShader(UnityEngine.Shader value)

Disassembly:
	0x03A034AC BL 0x3EB1AE0
	0x03A034B0 ADD X0, X31, 0x30

ISIL:
	001 Move [X0+296], X1
	002 Return 

Method: System.Int32 get_overrideShaderPassIndex()

Disassembly:
	0x03A034B4 MOV X1, X31
	0x03A034B8 BL 0x39972C0

ISIL:
	001 Move W0, [X0+304]
	002 Return X0

Method: System.Void set_overrideShaderPassIndex(System.Int32 value)

Disassembly:
	0x03A034BC CBZ X20, 0x3A03444
	0x03A034C0 MOV X0, X20

ISIL:
	001 Move [X0+304], W1
	002 Return 

Method: System.Void SetDetphState(System.Boolean writeEnabled, UnityEngine.Rendering.CompareFunction function = 2)

Disassembly:
	0x03A034C4 BL 0x1C16F18
	0x03A034C8 MOV X20, X31
	0x03A034CC B 0x3A034D4
	0x03A034D0 MOV X19, X0
	0x03A034D4 ADD X0, X31, 0x30
	0x03A034D8 MOV X1, X31
	0x03A034DC BL 0x39972C0
	0x03A034E0 CBNZ X20, 0x3A034EC
	0x03A034E4 MOV X0, X19
	0x03A034E8 BL 0x1D2C690
	0x03A034EC MOV X0, X20
	0x03A034F0 BL 0x1C16F18
	0x03A034F4 BL 0x1990590
	0x03A034F8 MOV X1, X31
	0x03A034FC B 0x33BDD8C
	0x03A03500 STR X30, [X31 - 0x20]!
	0x03A03504 STP X20, X19, [X31 + 0x10]
	0x03A03508 ADRP X19, 0x9DE000
	0x03A0350C ADRP X20, 0x751000
	0x03A03510 LDRB W8, [X19 + 0xF59]
	0x03A03514 LDR X20, [X20 + 0xC8]
	0x03A03518 TBNZ X8, 0x0, 0x3A03530
	0x03A0351C ADRP X0, 0x751000
	0x03A03520 LDR X0, [X0 + 0xC8]
	0x03A03524 BL 0x1C16CF4
	0x03A03528 MOVZ W8, 0x1
	0x03A0352C STRB W8, [X19 + 0xF59]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Add X21, X0, 320
	007 Move W20, W1
	008 Move X0, X21
	009 Move X1, X31
	010 Move W19, W2
	011 Call RenderStateBlock.get_mask, X0
	012 Or W1, W0, 4
	013 Move X0, X21
	014 Move X2, X31
	015 Call RenderStateBlock.set_mask, X0, X1
	016 And W1, W20, 1
	017 Add X0, X31, 12
	018 Move W2, W19
	019 Move X3, X31
	020 NotImplemented "Instruction STRH not yet implemented."
	021 Call DepthState..ctor, X0, X1, X2
	022 NotImplemented "Instruction LDRH not yet implemented."
	023 Move X0, X21
	024 Move X2, X31
	025 Call RenderStateBlock.set_depthState, X0, X1
	026 Move X20, [X31+32]
	027 Move X19, [X31+40]
	028 Move X30, [X31+16]
	029 Move X21, [X31+24]
	030 Add X31, X31, 48
	031 Return 

Method: System.Void SetStencilState(System.Int32 reference, UnityEngine.Rendering.CompareFunction compareFunction, UnityEngine.Rendering.StencilOp passOp, UnityEngine.Rendering.StencilOp failOp, UnityEngine.Rendering.StencilOp zFailOp)

Disassembly:
	0x03A03530 LDR X0, [X20]
	0x03A03534 BL 0x1C16F10
	0x03A03538 MOV X1, X31
	0x03A0353C MOV X19, X0
	0x03A03540 BL 0x33BDD8C
	0x03A03544 LDR X8, [X20]
	0x03A03548 LDR X8, [X8 + 0xB8]
	0x03A0354C STR X19, [X8]
	0x03A03550 LDP X20, X19, [X31 + 0x10]
	0x03A03554 LDR X30, [X31], #0x20
	0x03A03558 RET
	0x03A0355C MOV X1, X31
	0x03A03560 B 0x33BDD8C
	0x03A03564 STR X30, [X31 - 0x40]!
	0x03A03568 STP X24, X23, [X31 + 0x10]
	0x03A0356C STP X22, X21, [X31 + 0x20]
	0x03A03570 STP X20, X19, [X31 + 0x30]
	0x03A03574 ADRP X24, 0x9DE000
	0x03A03578 STR X1, [X31 + 0x8]
	0x03A0357C ADRP X23, 0x74D000
	0x03A03580 LDRB W8, [X24 + 0xF5A]
	0x03A03584 LDR X23, [X23 + 0xC80]
	0x03A03588 MOV X19, X5
	0x03A0358C MOV X20, X4
	0x03A03590 MOV X21, X3
	0x03A03594 MOV X22, X2
	0x03A03598 TBNZ X8, 0x0, 0x3A035B0
	0x03A0359C ADRP X0, 0x74D000
	0x03A035A0 LDR X0, [X0 + 0xC80]
	0x03A035A4 BL 0x1C16CF4
	0x03A035A8 MOVZ W8, 0x1
	0x03A035AC STRB W8, [X24 + 0xF5A]
	0x03A035B0 LDR X0, [X23]
	0x03A035B4 LDP X23, X22, [X22 + 0x8]
	0x03A035B8 LDR W8, [X0 + 0xE0]
	0x03A035BC CBNZ W8, 0x3A035C4
	0x03A035C0 BL 0x1C16DFC
	0x03A035C4 ADD X0, X31, 0x8
	0x03A035C8 MOV X1, X23
	0x03A035CC MOV X2, X22
	0x03A035D0 MOV X3, X21
	0x03A035D4 MOV X4, X20
	0x03A035D8 MOV X5, X19
	0x03A035DC MOV X6, X31
	0x03A035E0 BL 0x3C58B84
	0x03A035E4 LDP X20, X19, [X31 + 0x30]
	0x03A035E8 LDP X22, X21, [X31 + 0x20]
	0x03A035EC LDP X24, X23, [X31 + 0x10]
	0x03A035F0 LDR X30, [X31], #0x40
	0x03A035F4 RET
	0x03A035F8 STR X30, [X31 - 0x10]!
	0x03A035FC CBZ X1, 0x3A03628
	0x03A03600 CBZ X2, 0x3A03628
	0x03A03604 LDR X0, [X1 + 0x10]
	0x03A03608 CBZ X0, 0x3A03628
	0x03A0360C LDR X9, [X0]
	0x03A03610 LDR X8, [X2 + 0x10]
	0x03A03614 ADD X2, X1, 0x18

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+32], X24
	004 Move [X31+40], X23
	005 Move [X31+48], X22
	006 Move [X31+56], X21
	007 Move [X31+64], X20
	008 Move [X31+72], X19
	009 Move X24, X0
	010 Move X0, X31
	011 Move W19, W5
	012 Move W20, W4
	013 Move W21, W3
	014 Move W22, W2
	015 Move W23, W1
	016 Call StencilState.get_defaultValue
	017 Move [X31], X0
	018 Move [X31+8], W1
	019 Add X0, X31, 0
	020 Move W1, 1
	021 Move X2, X31
	022 Call StencilState.set_enabled, X0, X1
	023 Add X0, X31, 0
	024 Move W1, W22
	025 Move X2, X31
	026 Call StencilState.SetCompareFunction, X0, X1
	027 Add X0, X31, 0
	028 Move W1, W21
	029 Move X2, X31
	030 Call StencilState.SetPassOperation, X0, X1
	031 Add X0, X31, 0
	032 Move W1, W20
	033 Move X2, X31
	034 Call StencilState.SetFailOperation, X0, X1
	035 Add X0, X31, 0
	036 Move W1, W19
	037 Move X2, X31
	038 Call StencilState.SetZFailOperation, X0, X1
	039 Add X19, X24, 320
	040 Move X0, X19
	041 Move X1, X31
	042 Call RenderStateBlock.get_mask, X0
	043 Or W1, W0, 8
	044 Move X0, X19
	045 Move X2, X31
	046 Call RenderStateBlock.set_mask, X0, X1
	047 Move X0, X19
	048 Move W1, W23
	049 Move X2, X31
	050 Call RenderStateBlock.set_stencilReference, X0, X1
	051 Move X1, [X31]
	052 Move W2, [X31+8]
	053 Move X0, X19
	054 Move X3, X31
	055 Call RenderStateBlock.set_stencilState, X0, X1
	056 Move X20, [X31+64]
	057 Move X19, [X31+72]
	058 Move X22, [X31+48]
	059 Move X21, [X31+56]
	060 Move X24, [X31+32]
	061 Move X23, [X31+40]
	062 Move X30, [X31+16]
	063 Add X31, X31, 80
	064 Return 

Method: System.Void .ctor(System.String profilerTag, UnityEngine.Rendering.Universal.RenderPassEvent renderPassEvent, System.String[] shaderTags, UnityEngine.Experimental.Rendering.Universal.RenderQueueType renderQueueType, System.Int32 layerMask, UnityEngine.Experimental.Rendering.Universal.RenderObjects/CustomCameraSettings cameraSettings)

Disassembly:
	0x03A03618 LDP X4, X3, [X9 + 0x1C8]
	0x03A0361C MOV X1, X8
	0x03A03620 LDR X30, [X31], #0x10
	0x03A03624 BR X4
	0x03A03628 BL 0x1C16F20
	0x03A0362C STR X30, [X31 - 0x50]!
	0x03A03630 STP X26, X25, [X31 + 0x10]
	0x03A03634 STP X24, X23, [X31 + 0x20]
	0x03A03638 STP X22, X21, [X31 + 0x30]
	0x03A0363C STP X20, X19, [X31 + 0x40]
	0x03A03640 ADRP X20, 0x9DE000
	0x03A03644 LDRB W8, [X20 + 0xF5B]
	0x03A03648 MOV X19, X0
	0x03A0364C TBNZ X8, 0x0, 0x3A03664
	0x03A03650 ADRP X0, 0x751000
	0x03A03654 LDR X0, [X0 + 0x100]
	0x03A03658 BL 0x1C16CF4
	0x03A0365C MOVZ W8, 0x1
	0x03A03660 STRB W8, [X20 + 0xF5B]
	0x03A03664 LDR X8, [X19 + 0x20]
	0x03A03668 CBZ X8, 0x3A037BC
	0x03A0366C LDR W21, [X8 + 0x18]
	0x03A03670 LDR X9, [X8 + 0x20]
	0x03A03674 CMP W21, 0x95
	0x03A03678 B.GT 0x3A03684
	0x03A0367C MOVZ W21, 0x96
	0x03A03680 STR W21, [X8 + 0x18]
	0x03A03684 CBZ X9, 0x3A037BC
	0x03A03688 LDP W23, W0, [X9 + 0x10]
	0x03A0368C LDR X24, [X8 + 0x10]
	0x03A03690 LDR X22, [X9 + 0x18]
	0x03A03694 MOV X1, X31
	0x03A03698 BL 0x3C35CB8
	0x03A0369C LDR X8, [X19 + 0x20]
	0x03A036A0 CBZ X8, 0x3A037BC
	0x03A036A4 ADRP X9, 0x751000
	0x03A036A8 LDR X9, [X9 + 0x100]
	0x03A036AC MOV W25, W0
	0x03A036B0 LDR X26, [X8 + 0x60]
	0x03A036B4 LDR X0, [X9]
	0x03A036B8 BL 0x1C16F10
	0x03A036BC MOV X1, X24
	0x03A036C0 MOV W2, W21
	0x03A036C4 MOV X3, X22
	0x03A036C8 MOV W4, W23
	0x03A036CC MOV W5, W25
	0x03A036D0 MOV X6, X26
	0x03A036D4 MOV X20, X0
	0x03A036D8 BL 0x3A02618
	0x03A036DC LDR X8, [X19 + 0x20]
	0x03A036E0 STR X20, [X19 + 0x28]
	0x03A036E4 CBZ X8, 0x3A037BC
	0x03A036E8 LDR W9, [X8 + 0x44]
	0x03A036EC CMP W9, 0x2
	0x03A036F0 B.EQ 0x3A03710
	0x03A036F4 CMP W9, 0x1
	0x03A036F8 B.EQ 0x3A0372C
	0x03A036FC CBNZ W9, 0x3A03744
	0x03A03700 CBZ X20, 0x3A037BC
	0x03A03704 STR X31, [X20 + 0x118]
	0x03A03708 STR X31, [X20 + 0x128]
	0x03A0370C B 0x3A03744
	0x03A03710 CBZ X20, 0x3A037BC
	0x03A03714 STR X31, [X20 + 0x118]
	0x03A03718 LDR X9, [X8 + 0x38]
	0x03A0371C STR X9, [X20 + 0x128]
	0x03A03720 LDR W9, [X8 + 0x40]
	0x03A03724 STR W9, [X20 + 0x130]
	0x03A03728 B 0x3A03744
	0x03A0372C CBZ X20, 0x3A037BC
	0x03A03730 LDR X9, [X8 + 0x28]
	0x03A03734 STR X9, [X20 + 0x118]
	0x03A03738 LDR W9, [X8 + 0x30]
	0x03A0373C STR X31, [X20 + 0x128]
	0x03A03740 STR W9, [X20 + 0x120]
	0x03A03744 LDRB W9, [X8 + 0x48]
	0x03A03748 CBZ W9, 0x3A03768
	0x03A0374C CBZ X20, 0x3A037BC
	0x03A03750 LDR W2, [X8 + 0x4C]
	0x03A03754 LDRB W1, [X8 + 0x50]
	0x03A03758 MOV X0, X20
	0x03A0375C BL 0x3A024C4
	0x03A03760 LDR X8, [X19 + 0x20]
	0x03A03764 CBZ X8, 0x3A037BC
	0x03A03768 LDR X8, [X8 + 0x58]
	0x03A0376C CBZ X8, 0x3A037BC
	0x03A03770 LDRB W9, [X8 + 0x10]
	0x03A03774 CBZ W9, 0x3A037A4
	0x03A03778 LDR X0, [X19 + 0x28]
	0x03A0377C CBZ X0, 0x3A037BC
	0x03A03780 LDP W4, W5, [X8 + 0x20]
	0x03A03784 LDP W2, W3, [X8 + 0x18]
	0x03A03788 LDR W1, [X8 + 0x14]
	0x03A0378C LDP X20, X19, [X31 + 0x40]
	0x03A03790 LDP X22, X21, [X31 + 0x30]
	0x03A03794 LDP X24, X23, [X31 + 0x20]
	0x03A03798 LDP X26, X25, [X31 + 0x10]
	0x03A0379C LDR X30, [X31], #0x50
	0x03A037A0 B 0x3A02530
	0x03A037A4 LDP X20, X19, [X31 + 0x40]
	0x03A037A8 LDP X22, X21, [X31 + 0x30]
	0x03A037AC LDP X24, X23, [X31 + 0x20]
	0x03A037B0 LDP X26, X25, [X31 + 0x10]
	0x03A037B4 LDR X30, [X31], #0x50
	0x03A037B8 RET
	0x03A037BC BL 0x1C16F20
	0x03A037C0 STR X30, [X31 - 0x30]!
	0x03A037C4 STP X22, X21, [X31 + 0x10]
	0x03A037C8 STP X20, X19, [X31 + 0x20]
	0x03A037CC ADRP X22, 0x9DE000
	0x03A037D0 LDRB W8, [X22 + 0xF5C]
	0x03A037D4 MOV X21, X2
	0x03A037D8 MOV X19, X1
	0x03A037DC MOV X20, X0
	0x03A037E0 TBNZ X8, 0x0, 0x3A037F8
	0x03A037E4 ADRP X0, 0x750000
	0x03A037E8 LDR X0, [X0 + 0xFF8]
	0x03A037EC BL 0x1C16CF4
	0x03A037F0 MOVZ W8, 0x1
	0x03A037F4 STRB W8, [X22 + 0xF5C]
	0x03A037F8 LDR W8, [X21 + 0x180]
	0x03A037FC CMP W8, 0x4
	0x03A03800 B.EQ 0x3A03830
	0x03A03804 ADRP X8, 0x750000
	0x03A03808 LDR X8, [X8 + 0xFF8]
	0x03A0380C ADD X21, X21, 0x18
	0x03A03810 LDR X0, [X8]
	0x03A03814 LDR W8, [X0 + 0xE0]
	0x03A03818 CBNZ W8, 0x3A03820
	0x03A0381C BL 0x1C16DFC
	0x03A03820 MOV X0, X21
	0x03A03824 MOV X1, X31
	0x03A03828 BL 0x3A83C1C
	0x03A0382C TBZ X0, 0x0, 0x3A03840
	0x03A03830 LDP X20, X19, [X31 + 0x20]
	0x03A03834 LDP X22, X21, [X31 + 0x10]
	0x03A03838 LDR X30, [X31], #0x30
	0x03A0383C RET
	0x03A03840 CBZ X19, 0x3A03860
	0x03A03844 LDR X1, [X20 + 0x28]
	0x03A03848 MOV X0, X19
	0x03A0384C LDP X20, X19, [X31 + 0x20]
	0x03A03850 LDP X22, X21, [X31 + 0x10]
	0x03A03854 MOV X2, X31
	0x03A03858 LDR X30, [X31], #0x30
	0x03A0385C B 0x3A4E96C
	0x03A03860 BL 0x1C16F20
	0x03A03864 MOVZ W0, 0x1
	0x03A03868 RET
	0x03A0386C STP X30, X21, [X31 - 0x20]!
	0x03A03870 STP X20, X19, [X31 + 0x10]
	0x03A03874 ADRP X20, 0x9DE000
	0x03A03878 ADRP X21, 0x751000
	0x03A0387C LDRB W8, [X20 + 0xF5D]
	0x03A03880 LDR X21, [X21 + 0x108]
	0x03A03884 MOV X19, X0
	0x03A03888 TBNZ X8, 0x0, 0x3A038A0
	0x03A0388C ADRP X0, 0x751000
	0x03A03890 LDR X0, [X0 + 0x108]
	0x03A03894 BL 0x1C16CF4
	0x03A03898 MOVZ W8, 0x1
	0x03A0389C STRB W8, [X20 + 0xF5D]
	0x03A038A0 LDR X0, [X21]
	0x03A038A4 BL 0x1C16F10
	0x03A038A8 MOV X20, X0
	0x03A038AC BL 0x3A038C8
	0x03A038B0 STR X20, [X19 + 0x20]
	0x03A038B4 MOV X0, X19
	0x03A038B8 LDP X20, X19, [X31 + 0x10]
	0x03A038BC MOV X1, X31
	0x03A038C0 LDP X30, X21, [X31], #0x20
	0x03A038C4 B 0x3A6BA9C
	0x03A038C8 STR X30, [X31 - 0x40]!
	0x03A038CC STP X24, X23, [X31 + 0x10]
	0x03A038D0 STP X22, X21, [X31 + 0x20]
	0x03A038D4 STP X20, X19, [X31 + 0x30]
	0x03A038D8 ADRP X23, 0x9DE000
	0x03A038DC ADRP X24, 0x751000
	0x03A038E0 ADRP X20, 0x751000
	0x03A038E4 ADRP X22, 0x751000
	0x03A038E8 ADRP X21, 0x751000
	0x03A038EC LDRB W8, [X23 + 0xF5E]
	0x03A038F0 LDR X24, [X24 + 0x110]
	0x03A038F4 LDR X20, [X20 + 0x118]
	0x03A038F8 LDR X22, [X22 + 0x120]
	0x03A038FC LDR X21, [X21 + 0x128]
	0x03A03900 MOV X19, X0
	0x03A03904 TBNZ X8, 0x0, 0x3A03940
	0x03A03908 ADRP X0, 0x751000
	0x03A0390C LDR X0, [X0 + 0x128]
	0x03A03910 BL 0x1C16CF4
	0x03A03914 ADRP X0, 0x751000
	0x03A03918 LDR X0, [X0 + 0x118]
	0x03A0391C BL 0x1C16CF4
	0x03A03920 ADRP X0, 0x751000
	0x03A03924 LDR X0, [X0 + 0x120]
	0x03A03928 BL 0x1C16CF4
	0x03A0392C ADRP X0, 0x751000
	0x03A03930 LDR X0, [X0 + 0x110]
	0x03A03934 BL 0x1C16CF4
	0x03A03938 MOVZ W8, 0x1
	0x03A0393C STRB W8, [X23 + 0xF5E]
	0x03A03940 LDR X8, [X24]
	0x03A03944 MOVZ W9, 0x12C
	0x03A03948 STR W9, [X19 + 0x18]
	0x03A0394C STR X8, [X19 + 0x10]
	0x03A03950 LDR X0, [X20]
	0x03A03954 BL 0x1C16F10
	0x03A03958 MOV X1, X31
	0x03A0395C MOV X20, X0
	0x03A03960 BL 0x33BDD8C
	0x03A03964 MOV W0, W31
	0x03A03968 MOV X1, X31
	0x03A0396C STR W31, [X20 + 0x10]
	0x03A03970 BL 0x3C35CBC
	0x03A03974 MOVZ W23, 0x1
	0x03A03978 MOVZ W8, 0x4
	0x03A0397C STR W0, [X20 + 0x14]
	0x03A03980 STR X20, [X19 + 0x20]
	0x03A03984 STR W23, [X19 + 0x44]
	0x03A03988 STR W8, [X19 + 0x4C]
	0x03A0398C STRB W23, [X19 + 0x50]
	0x03A03990 LDR X0, [X22]
	0x03A03994 BL 0x1C16F10
	0x03A03998 MOV X1, X31
	0x03A0399C MOV X20, X0
	0x03A039A0 BL 0x3A2B4FC
	0x03A039A4 STR X20, [X19 + 0x58]
	0x03A039A8 LDR X0, [X21]
	0x03A039AC BL 0x1C16F10
	0x03A039B0 MOVZ W8, 0x42700000
	0x03A039B4 MOV X1, X31
	0x03A039B8 MOV X20, X0
	0x03A039BC STRB W23, [X0 + 0x11]
	0x03A039C0 STR W8, [X0 + 0x24]
	0x03A039C4 BL 0x33BDD8C
	0x03A039C8 STR X20, [X19 + 0x60]
	0x03A039CC MOV X0, X19
	0x03A039D0 LDP X20, X19, [X31 + 0x30]
	0x03A039D4 LDP X22, X21, [X31 + 0x20]
	0x03A039D8 LDP X24, X23, [X31 + 0x10]
	0x03A039DC MOV X1, X31
	0x03A039E0 LDR X30, [X31], #0x40
	0x03A039E4 B 0x33BDD8C
	0x03A039E8 STP X30, X19, [X31 - 0x10]!
	0x03A039EC MOV X1, X31
	0x03A039F0 MOV X19, X0
	0x03A039F4 BL 0x33BDD8C
	0x03A039F8 MOV W0, W31
	0x03A039FC MOV X1, X31
	0x03A03A00 STR W31, [X19 + 0x10]
	0x03A03A04 BL 0x3C35CBC
	0x03A03A08 STR W0, [X19 + 0x14]
	0x03A03A0C LDP X30, X19, [X31], #0x10
	0x03A03A10 RET
	0x03A03A14 MOVZ W8, 0x1
	0x03A03A18 MOVZ W9, 0x42700000
	0x03A03A1C MOV X1, X31
	0x03A03A20 STRB W8, [X0 + 0x11]
	0x03A03A24 STR W9, [X0 + 0x24]
	0x03A03A28 B 0x33BDD8C
	0x03A03A2C STR X30, [X31 - 0x20]!
	0x03A03A30 STP X20, X19, [X31 + 0x10]
	0x03A03A34 ADRP X20, 0x9DE000
	0x03A03A38 ADRP X19, 0x6F0000
	0x03A03A3C LDRB W8, [X20 + 0xF5F]
	0x03A03A40 LDR X19, [X19 + 0xA28]
	0x03A03A44 TBNZ X8, 0x0, 0x3A03A68
	0x03A03A48 ADRP X0, 0x6F0000
	0x03A03A4C LDR X0, [X0 + 0xA28]
	0x03A03A50 BL 0x1C16CF4
	0x03A03A54 ADRP X0, 0x751000
	0x03A03A58 LDR X0, [X0 + 0x130]
	0x03A03A5C BL 0x1C16CF4
	0x03A03A60 MOVZ W8, 0x1
	0x03A03A64 STRB W8, [X20 + 0xF5F]
	0x03A03A68 LDR X0, [X19]
	0x03A03A6C ADRP X19, 0x751000
	0x03A03A70 LDR W8, [X0 + 0xE0]
	0x03A03A74 LDR X19, [X19 + 0x130]
	0x03A03A78 CBNZ W8, 0x3A03A80
	0x03A03A7C BL 0x1C16DFC
	0x03A03A80 LDR X0, [X19]
	0x03A03A84 LDP X20, X19, [X31 + 0x10]
	0x03A03A88 MOV X1, X31
	0x03A03A8C LDR X30, [X31], #0x20
	0x03A03A90 B 0x3C0649C
	0x03A03A94 MOV X1, X31

ISIL:
	001 Subtract X31, X31, 256
	002 Move [X31+160], X29
	003 Move [X31+168], X30
	004 Move [X31+176], X28
	005 Move [X31+184], X27
	006 Move [X31+192], X26
	007 Move [X31+200], X25
	008 Move [X31+208], X24
	009 Move [X31+216], X23
	010 Move [X31+224], X22
	011 Move [X31+232], X21
	012 Move [X31+240], X20
	013 Move [X31+248], X19
	014 Move [X31+8], X6
	015 Move X29, 0x9DF000
	016 Move X28, 0x752000
	017 Move X26, 0x752000
	018 Move X27, 0x751000
	019 Move W8, [X29+3925]
	020 Move X28, [X28+96]
	021 Move X26, [X26+104]
	022 Move X27, [X27+4080]
	023 Move W22, W5
	024 Move W23, W4
	025 Move X21, X3
	026 Move W24, W2
	027 Move X25, X1
	028 Move X20, X0
	029 Move TEMP, X8
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfEqual {68}
	033 Move X0, 0x752000
	034 Move X0, [X0+112]
	035 Call 0x1C17CF4
	036 Move X0, 0x752000
	037 Move X0, [X0+104]
	038 Call 0x1C17CF4
	039 Move X0, 0x752000
	040 Move X0, [X0+96]
	041 Call 0x1C17CF4
	042 Move X0, 0x752000
	043 Move X0, [X0+120]
	044 Call 0x1C17CF4
	045 Move X0, 0x74E000
	046 Move X0, [X0+1432]
	047 Call 0x1C17CF4
	048 Move X0, 0x71A000
	049 Move X0, [X0+3368]
	050 Call 0x1C17CF4
	051 Move X0, 0x751000
	052 Move X0, [X0+4080]
	053 Call 0x1C17CF4
	054 Move X0, 0x752000
	055 Move X0, [X0+128]
	056 Call 0x1C17CF4
	057 Move X0, 0x752000
	058 Move X0, [X0+136]
	059 Call 0x1C17CF4
	060 Move X0, 0x752000
	061 Move X0, [X0+144]
	062 Call 0x1C17CF4
	063 Move X0, 0x752000
	064 Move X0, [X0+152]
	065 Call 0x1C17CF4
	066 Move W8, 1
	067 Move [X29+3925], W8
	068 Move X0, [X28]
	069 Move X29, 0x74E000
	070 Move X19, 0x752000
	071 Move X28, 0x71A000
	072 Move X29, [X29+1432]
	073 Move X19, [X19+128]
	074 Move X28, [X28+3368]
	075 Call 0x1C17F10
	076 Move X1, [X26]
	077 Move X26, X0
	078 Call List`1<ShaderTagId>..ctor, X0
	079 Move [X20+312], X26
	080 Move X0, [X27]
	081 Move W8, [X0+224]
	082 Compare W8, 0
	083 JumpIfNotEqual {85}
	084 Call 0x1C17DFC
	085 Move X0, X20
	086 Move X1, X31
	087 Call ScriptableRenderPass..ctor, X0
	088 Move X0, [X29]
	089 Call 0x1C17F10
	090 Move X1, [X19]
	091 Move X2, X31
	092 Move X26, X0
	093 Call ProfilingSampler..ctor, X0, X1
	094 Move [X20+56], X26
	095 Move [X20+264], X25
	096 Move X0, [X29]
	097 Call 0x1C17F10
	098 Move X1, X25
	099 Move X2, X31
	100 Move X26, X0
	101 Call ProfilingSampler..ctor, X0, X1
	102 Move [X20+16], W24
	103 Move [X20+224], W23
	104 Move [X20+272], X26
	105 Move [X20+280], X31
	106 Move [X20+288], W31
	107 Move [X20+296], X31
	108 Move [X20+304], W31
	109 Move X0, [X28]
	110 Move W8, [X0+224]
	111 Compare W8, 0
	112 JumpIfNotEqual {114}
	113 Call 0x1C17DFC
	114 Move X19, 0x752000
	115 Move X19, [X19+120]
	116 NotImplemented "Instruction CMP not yet implemented."
	117 Move X0, X31
	118 Call RenderQueueRange.get_transparent
	119 Call RenderQueueRange.get_opaque
	120 Move X2, [X19]
	121 Move X23, 0x752000
	122 Move X23, [X23+112]
	123 Move X1, X0
	124 Add X0, X31, 144
	125 Move [X31+152], W31
	126 Move [X31+144], X31
	127 Call Nullable`1<RenderQueueRange>..ctor, X0, X1
	128 Move X1, [X31+144]
	129 Move W2, [X31+152]
	130 Add X0, X31, 16
	131 Move TEMP, 0
	132 Not TEMP
	133 Move W4, TEMP
	134 Move W3, W22
	135 Move W5, W31
	136 Move X6, X31
	137 Move [X31+16], X31
	138 Move [X31+24], X31
	139 Move [X31+32], X31
	140 Call FilteringSettings..ctor, X0, X1, X2, X3, X4
	141 Move X8, [X31+32]
	142 Move V0, [X31+1]
	143 Move [X20+244], X8
	144 Move [X20+228], V0
	145 Compare X21, 0
	146 JumpIfEqual {185}
	147 Move X8, [X21+24]
	148 Compare X8, 0
	149 JumpIfEqual {185}
	150 NotImplemented "Instruction CMP not yet implemented."
	151 Move X24, X31
	152 Add X25, X21, 32
	153 NotImplemented "Instruction CMP not yet implemented."
	154 Move X1, [X25]
	155 Move X22, [X20+312]
	156 Add X0, X31, 16
	157 Move X2, X31
	158 Move [X31+16], W31
	159 Call ShaderTagId..ctor, X0, X1
	160 Compare X22, 0
	161 JumpIfEqual {307}
	162 Move W10, [X22+28]
	163 Move W1, [X31+16]
	164 Move X8, [X22+16]
	165 Move X9, [X23]
	166 Add W10, W10, 1
	167 Move [X22+28], W10
	168 Compare X8, 0
	169 JumpIfEqual {307}
	170 NotImplemented "Instruction LDRSW not yet implemented."
	171 Move W11, [X8+24]
	172 NotImplemented "Instruction CMP not yet implemented."
	173 Add W9, W10, 1
	174 Add X8, X8, X10
	175 Move [X22+24], W9
	176 Move [X8+32], W1
	177 Move X8, [X9+32]
	178 Move X0, X22
	179 Move X8, [X8+192]
	180 Move X2, [X8+112]
	181 Call List`1<ShaderTagId>.AddWithResize, X0, X1
	182 Move W8, [X21+24]
	183 Add X24, X24, 1
	184 NotImplemented "Instruction CMP not yet implemented."
	185 Move X8, 0x752000
	186 Move X8, [X8+144]
	187 Move X21, [X20+312]
	188 Add X0, X31, 16
	189 Move X2, X31
	190 Move X1, [X8]
	191 Move [X31+16], W31
	192 Call ShaderTagId..ctor, X0, X1
	193 Compare X21, 0
	194 JumpIfEqual {307}
	195 Move W10, [X21+28]
	196 Move W1, [X31+16]
	197 Move X8, [X21+16]
	198 Move X9, [X23]
	199 Add W10, W10, 1
	200 Move [X21+28], W10
	201 Compare X8, 0
	202 JumpIfEqual {307}
	203 NotImplemented "Instruction LDRSW not yet implemented."
	204 Move W11, [X8+24]
	205 Move X19, 0x752000
	206 Move X19, [X19+136]
	207 NotImplemented "Instruction CMP not yet implemented."
	208 Add W9, W10, 1
	209 Add X8, X8, X10
	210 Move [X21+24], W9
	211 Move [X8+32], W1
	212 Move X8, [X9+32]
	213 Move X0, X21
	214 Move X8, [X8+192]
	215 Move X2, [X8+112]
	216 Call List`1<ShaderTagId>.AddWithResize, X0, X1
	217 Move X1, [X19]
	218 Move X21, [X20+312]
	219 Add X0, X31, 144
	220 Move X2, X31
	221 Move [X31+144], W31
	222 Call ShaderTagId..ctor, X0, X1
	223 Compare X21, 0
	224 JumpIfEqual {307}
	225 Move W10, [X21+28]
	226 Move W1, [X31+144]
	227 Move X8, [X21+16]
	228 Move X9, [X23]
	229 Add W10, W10, 1
	230 Move [X21+28], W10
	231 Compare X8, 0
	232 JumpIfEqual {307}
	233 NotImplemented "Instruction LDRSW not yet implemented."
	234 Move W11, [X8+24]
	235 Move X19, 0x752000
	236 Move X19, [X19+152]
	237 NotImplemented "Instruction CMP not yet implemented."
	238 Add W9, W10, 1
	239 Add X8, X8, X10
	240 Move [X21+24], W9
	241 Move [X8+32], W1
	242 Move X8, [X9+32]
	243 Move X0, X21
	244 Move X8, [X8+192]
	245 Move X2, [X8+112]
	246 Call List`1<ShaderTagId>.AddWithResize, X0, X1
	247 Move X1, [X19]
	248 Move X21, [X20+312]
	249 Add X0, X31, 136
	250 Move X2, X31
	251 Move [X31+136], W31
	252 Call ShaderTagId..ctor, X0, X1
	253 Compare X21, 0
	254 JumpIfEqual {307}
	255 Move W10, [X21+28]
	256 Move W1, [X31+136]
	257 Move X8, [X21+16]
	258 Move X9, [X23]
	259 Add W10, W10, 1
	260 Move [X21+28], W10
	261 Compare X8, 0
	262 JumpIfEqual {307}
	263 NotImplemented "Instruction LDRSW not yet implemented."
	264 Move W11, [X8+24]
	265 NotImplemented "Instruction CMP not yet implemented."
	266 Add W9, W10, 1
	267 Add X8, X8, X10
	268 Move [X21+24], W9
	269 Move [X8+32], W1
	270 Move X8, [X9+32]
	271 Move X0, X21
	272 Move X8, [X8+192]
	273 Move X2, [X8+112]
	274 Call List`1<ShaderTagId>.AddWithResize, X0, X1
	275 NotImplemented "Instruction MOVI not yet implemented."
	276 Add X0, X31, 16
	277 Move W1, W31
	278 Move X2, X31
	279 Move [X31+108], V0
	280 Move [X31+80], V0
	281 Move [X31+88], V0
	282 Move [X31+48], V0
	283 Move [X31+56], V0
	284 Move [X31+16], V0
	285 Move [X31+24], V0
	286 Call RenderStateBlock..ctor, X0, X1
	287 Add X0, X20, 320
	288 Add X1, X31, 16
	289 Move W2, 108
	290 Call 0x3EB2AC0
	291 Move X8, [X31+8]
	292 Move X22, [X31+224]
	293 Move X21, [X31+232]
	294 Move X24, [X31+208]
	295 Move X23, [X31+216]
	296 Move X26, [X31+192]
	297 Move X25, [X31+200]
	298 Move [X20+256], X8
	299 Move X20, [X31+240]
	300 Move X19, [X31+248]
	301 Move X28, [X31+176]
	302 Move X27, [X31+184]
	303 Move X29, [X31+160]
	304 Move X30, [X31+168]
	305 Add X31, X31, 256
	306 Return 
	307 Call 0x1C17F20
	308 Call 0x1C17F28

Method: System.Void .ctor(UnityEngine.Rendering.Universal.URPProfileId profileId, UnityEngine.Rendering.Universal.RenderPassEvent renderPassEvent, System.String[] shaderTags, UnityEngine.Experimental.Rendering.Universal.RenderQueueType renderQueueType, System.Int32 layerMask, UnityEngine.Experimental.Rendering.Universal.RenderObjects/CustomCameraSettings cameraSettings)

Disassembly:
	0x03A03A98 B 0x3C36C30
	0x03A03A9C STP D0, D1, [X0]
	0x03A03AA0 RET
	0x03A03AA4 STP D0, D1, [X0]
	0x03A03AA8 RET
	0x03A03AAC LDR V0, [X1 + 0x8]
	0x03A03AB0 SCVTF D0, D0
	0x03A03AB4 STR D0, [X0]
	0x03A03AB8 LDR V0, [X1 + 0x10]
	0x03A03ABC SCVTF D0, D0
	0x03A03AC0 STR D0, [X0 + 0x8]
	0x03A03AC4 RET
	0x03A03AC8 STP X30, X21, [X31 - 0x20]!
	0x03A03ACC STP X20, X19, [X31 + 0x10]
	0x03A03AD0 ADRP X20, 0x9DE000
	0x03A03AD4 LDRB W8, [X20 + 0xF60]
	0x03A03AD8 MOV X19, X0
	0x03A03ADC TBNZ X8, 0x0, 0x3A03B0C
	0x03A03AE0 ADRP X0, 0x751000
	0x03A03AE4 LDR X0, [X0 + 0x138]
	0x03A03AE8 BL 0x1C16CF4
	0x03A03AEC ADRP X0, 0x751000
	0x03A03AF0 LDR X0, [X0 + 0x140]
	0x03A03AF4 BL 0x1C16CF4
	0x03A03AF8 ADRP X0, 0x751000
	0x03A03AFC LDR X0, [X0 + 0x148]
	0x03A03B00 BL 0x1C16CF4
	0x03A03B04 MOVZ W8, 0x1
	0x03A03B08 STRB W8, [X20 + 0xF60]
	0x03A03B0C LDR X0, [X19 + 0x40]
	0x03A03B10 CBZ X0, 0x3A03B48
	0x03A03B14 ADRP X21, 0x751000
	0x03A03B18 LDR X21, [X21 + 0x148]
	0x03A03B1C MOV W20, W31
	0x03A03B20 LDR W2, [X0 + 0x18]
	0x03A03B24 CMP W20, W2
	0x03A03B28 B.GE 0x3A03B4C
	0x03A03B2C LDR X3, [X21]
	0x03A03B30 MOV W1, W20
	0x03A03B34 MOV X2, X31
	0x03A03B38 BL 0x301BD20
	0x03A03B3C LDR X0, [X19 + 0x40]
	0x03A03B40 ADD W20, W20, 0x1
	0x03A03B44 CBNZ X0, 0x3A03B20
	0x03A03B48 BL 0x1C16F20
	0x03A03B4C LDR W8, [X0 + 0x1C]
	0x03A03B50 CMP W2, 0x1
	0x03A03B54 ADD W8, W8, 0x1
	0x03A03B58 STP W31, W8, [X0 + 0x18]
	0x03A03B5C B.LT 0x3A03B70
	0x03A03B60 LDR X0, [X0 + 0x10]
	0x03A03B64 MOV W1, W31
	0x03A03B68 MOV X3, X31
	0x03A03B6C BL 0x339FA34
	0x03A03B70 LDR X8, [X19 + 0x30]
	0x03A03B74 CBZ X8, 0x3A03B48
	0x03A03B78 LDP W2, W9, [X8 + 0x18]
	0x03A03B7C ADD W9, W9, 0x1

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+16], X30
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X27, 0x9DF000
	013 Move X26, 0x752000
	014 Move W8, [X27+3926]
	015 Move X26, [X26+160]
	016 Move X21, X6
	017 Move W22, W5
	018 Move W23, W4
	019 Move X24, X3
	020 Move W25, W2
	021 Move W20, W1
	022 Move X19, X0
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {35}
	027 Move X0, 0x752000
	028 Move X0, [X0+168]
	029 Call 0x1C17CF4
	030 Move X0, 0x752000
	031 Move X0, [X0+160]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X27+3926], W8
	035 Move X0, [X26]
	036 Add X1, X31, 12
	037 Move [X31+12], W20
	038 Call 0x1C17E04
	039 Move X1, X31
	040 Call "il2cpp_vm_object_is_inst", X0
	041 Compare X0, 0
	042 JumpIfEqual {73}
	043 Move X8, [X0]
	044 Move X26, 0x752000
	045 Move X9, [X8+424]
	046 Move X1, [X8+432]
	047 Move X26, [X26+168]
	048 NotImplemented "Instruction BLR not yet implemented."
	049 Move X1, X0
	050 Move X0, X19
	051 Move W2, W25
	052 Move X3, X24
	053 Move W4, W23
	054 Move W5, W22
	055 Move X6, X21
	056 Call RenderObjectsPass..ctor, X0, X1, X2, X3, X4, X5, X6
	057 Move X1, [X26]
	058 Move W0, W20
	059 Call 0x2236BC0, X0
	060 Move [X19+272], X0
	061 Move X20, [X31+80]
	062 Move X19, [X31+88]
	063 Move X22, [X31+64]
	064 Move X21, [X31+72]
	065 Move X24, [X31+48]
	066 Move X23, [X31+56]
	067 Move X26, [X31+32]
	068 Move X25, [X31+40]
	069 Move X30, [X31+16]
	070 Move X27, [X31+24]
	071 Add X31, X31, 96
	072 Return 
	073 Call 0x1C17F20

Method: System.Void Execute(UnityEngine.Rendering.ScriptableRenderContext context, ref UnityEngine.Rendering.Universal.RenderingData renderingData)

Disassembly:
	0x03A03B80 CMP W2, 0x1
	0x03A03B84 STP W31, W9, [X8 + 0x18]
	0x03A03B88 B.LT 0x3A03BA4
	0x03A03B8C LDR X0, [X8 + 0x10]
	0x03A03B90 LDP X20, X19, [X31 + 0x10]
	0x03A03B94 MOV W1, W31
	0x03A03B98 MOV X3, X31
	0x03A03B9C LDP X30, X21, [X31], #0x20
	0x03A03BA0 B 0x339FA34
	0x03A03BA4 LDP X20, X19, [X31 + 0x10]
	0x03A03BA8 LDP X30, X21, [X31], #0x20
	0x03A03BAC RET
	0x03A03BB0 STR X30, [X31 - 0x20]!
	0x03A03BB4 STP X20, X19, [X31 + 0x10]
	0x03A03BB8 ADRP X20, 0x9DE000
	0x03A03BBC LDRB W8, [X20 + 0xF61]
	0x03A03BC0 MOV X19, X0
	0x03A03BC4 TBNZ X8, 0x0, 0x3A03BE8
	0x03A03BC8 ADRP X0, 0x751000
	0x03A03BCC LDR X0, [X0 + 0x140]
	0x03A03BD0 BL 0x1C16CF4
	0x03A03BD4 ADRP X0, 0x751000
	0x03A03BD8 LDR X0, [X0 + 0x150]
	0x03A03BDC BL 0x1C16CF4
	0x03A03BE0 MOVZ W8, 0x1
	0x03A03BE4 STRB W8, [X20 + 0xF61]
	0x03A03BE8 LDR X0, [X19 + 0x30]
	0x03A03BEC CBZ X0, 0x3A03C28
	0x03A03BF0 LDR W8, [X0 + 0x18]
	0x03A03BF4 CMP W8, 0x1
	0x03A03BF8 B.LT 0x3A03C18
	0x03A03BFC ADRP X8, 0x751000
	0x03A03C00 LDR X8, [X8 + 0x150]
	0x03A03C04 LDP X20, X19, [X31 + 0x10]
	0x03A03C08 MOV W1, W31
	0x03A03C0C LDR X2, [X8]
	0x03A03C10 LDR X30, [X31], #0x20
	0x03A03C14 B 0x301BCCC
	0x03A03C18 LDP X20, X19, [X31 + 0x10]
	0x03A03C1C MOV X0, X31
	0x03A03C20 LDR X30, [X31], #0x20
	0x03A03C24 RET
	0x03A03C28 BL 0x1C16F20
	0x03A03C2C STP X30, X21, [X31 - 0x20]!
	0x03A03C30 STP X20, X19, [X31 + 0x10]
	0x03A03C34 ADRP X20, 0x9DE000
	0x03A03C38 LDRB W8, [X20 + 0xF62]
	0x03A03C3C MOV X19, X0
	0x03A03C40 TBNZ X8, 0x0, 0x3A03C64
	0x03A03C44 ADRP X0, 0x751000
	0x03A03C48 LDR X0, [X0 + 0x140]
	0x03A03C4C BL 0x1C16CF4
	0x03A03C50 ADRP X0, 0x751000
	0x03A03C54 LDR X0, [X0 + 0x150]
	0x03A03C58 BL 0x1C16CF4
	0x03A03C5C MOVZ W8, 0x1
	0x03A03C60 STRB W8, [X20 + 0xF62]
	0x03A03C64 LDR X8, [X19 + 0x40]
	0x03A03C68 CBZ X8, 0x3A03CD0
	0x03A03C6C LDR W20, [X8 + 0x18]
	0x03A03C70 CMP W20, 0x1
	0x03A03C74 B.LT 0x3A03CC0
	0x03A03C78 LDR X0, [X19 + 0x30]
	0x03A03C7C CBZ X0, 0x3A03CD0
	0x03A03C80 ADRP X21, 0x751000
	0x03A03C84 LDR X21, [X21 + 0x150]
	0x03A03C88 MOV W1, W31
	0x03A03C8C LDR X2, [X21]
	0x03A03C90 BL 0x301BCCC
	0x03A03C94 LDR X8, [X19 + 0x40]
	0x03A03C98 CBZ X8, 0x3A03CD0
	0x03A03C9C LDR X2, [X21]
	0x03A03CA0 MOV X19, X0
	0x03A03CA4 MOV X0, X8
	0x03A03CA8 MOV W1, W31
	0x03A03CAC BL 0x301BCCC
	0x03A03CB0 CMP X19, X0
	0x03A03CB4 CSET W8, NE
	0x03A03CB8 SUB W0, W20, W8
	0x03A03CBC B 0x3A03CC4
	0x03A03CC0 MOV W0, W20
	0x03A03CC4 LDP X20, X19, [X31 + 0x10]
	0x03A03CC8 LDP X30, X21, [X31], #0x20
	0x03A03CCC RET
	0x03A03CD0 BL 0x1C16F20
	0x03A03CD4 STR X30, [X31 - 0x30]!
	0x03A03CD8 STP X22, X21, [X31 + 0x10]
	0x03A03CDC STP X20, X19, [X31 + 0x20]
	0x03A03CE0 ADRP X21, 0x9DE000
	0x03A03CE4 ADRP X22, 0x751000
	0x03A03CE8 ADRP X20, 0x751000
	0x03A03CEC LDRB W8, [X21 + 0xF63]
	0x03A03CF0 LDR X22, [X22 + 0x158]
	0x03A03CF4 LDR X20, [X20 + 0x160]
	0x03A03CF8 MOV X19, X0
	0x03A03CFC TBNZ X8, 0x0, 0x3A03D20
	0x03A03D00 ADRP X0, 0x751000
	0x03A03D04 LDR X0, [X0 + 0x160]
	0x03A03D08 BL 0x1C16CF4
	0x03A03D0C ADRP X0, 0x751000
	0x03A03D10 LDR X0, [X0 + 0x158]
	0x03A03D14 BL 0x1C16CF4
	0x03A03D18 MOVZ W8, 0x1
	0x03A03D1C STRB W8, [X21 + 0xF63]
	0x03A03D20 LDR X0, [X22]
	0x03A03D24 BL 0x1C16F10
	0x03A03D28 LDR X1, [X20]
	0x03A03D2C MOV X20, X0
	0x03A03D30 BL 0x301B7C4
	0x03A03D34 STR X20, [X19 + 0x40]
	0x03A03D38 MOV X0, X19
	0x03A03D3C LDP X20, X19, [X31 + 0x20]
	0x03A03D40 LDP X22, X21, [X31 + 0x10]
	0x03A03D44 LDR X30, [X31], #0x30
	0x03A03D48 B 0x3A03D4C
	0x03A03D4C STR X30, [X31 - 0x40]!
	0x03A03D50 STP X24, X23, [X31 + 0x10]
	0x03A03D54 STP X22, X21, [X31 + 0x20]
	0x03A03D58 STP X20, X19, [X31 + 0x30]
	0x03A03D5C ADRP X23, 0x9DE000
	0x03A03D60 ADRP X24, 0x751000
	0x03A03D64 ADRP X20, 0x751000
	0x03A03D68 ADRP X22, 0x751000
	0x03A03D6C ADRP X21, 0x751000
	0x03A03D70 LDRB W8, [X23 + 0xF68]
	0x03A03D74 LDR X24, [X24 + 0x168]
	0x03A03D78 LDR X20, [X20 + 0x170]
	0x03A03D7C LDR X22, [X22 + 0x158]
	0x03A03D80 LDR X21, [X21 + 0x160]
	0x03A03D84 MOV X19, X0
	0x03A03D88 TBNZ X8, 0x0, 0x3A03DC4
	0x03A03D8C ADRP X0, 0x751000
	0x03A03D90 LDR X0, [X0 + 0x170]
	0x03A03D94 BL 0x1C16CF4
	0x03A03D98 ADRP X0, 0x751000
	0x03A03D9C LDR X0, [X0 + 0x160]
	0x03A03DA0 BL 0x1C16CF4
	0x03A03DA4 ADRP X0, 0x751000
	0x03A03DA8 LDR X0, [X0 + 0x158]
	0x03A03DAC BL 0x1C16CF4
	0x03A03DB0 ADRP X0, 0x751000
	0x03A03DB4 LDR X0, [X0 + 0x168]
	0x03A03DB8 BL 0x1C16CF4
	0x03A03DBC MOVZ W8, 0x1
	0x03A03DC0 STRB W8, [X23 + 0xF68]
	0x03A03DC4 LDR X0, [X24]
	0x03A03DC8 BL 0x1C16F10
	0x03A03DCC LDR X1, [X20]
	0x03A03DD0 MOV X20, X0
	0x03A03DD4 BL 0x2FE3E58
	0x03A03DD8 STR X20, [X19 + 0x18]
	0x03A03DDC LDR X0, [X22]
	0x03A03DE0 BL 0x1C16F10
	0x03A03DE4 LDR X1, [X21]
	0x03A03DE8 MOV X20, X0
	0x03A03DEC BL 0x301B7C4
	0x03A03DF0 STR X20, [X19 + 0x30]
	0x03A03DF4 MOV X0, X19
	0x03A03DF8 LDP X20, X19, [X31 + 0x30]
	0x03A03DFC LDP X22, X21, [X31 + 0x20]
	0x03A03E00 LDP X24, X23, [X31 + 0x10]
	0x03A03E04 MOV X1, X31
	0x03A03E08 LDR X30, [X31], #0x40
	0x03A03E0C B 0x33BDD8C
	0x03A03E10 MOVZ W8, 0x1
	0x03A03E14 LDR X0, [X0 + 0x10]
	0x03A03E18 MOV W9, W8
	0x03A03E1C EOR W8, W8, 0x1
	0x03A03E20 CBNZ X0, 0x3A03E14
	0x03A03E24 AND W0, W9, 0x1
	0x03A03E28 RET
	0x03A03E2C STR X30, [X31 - 0x20]!
	0x03A03E30 STP X20, X19, [X31 + 0x10]
	0x03A03E34 ADRP X20, 0x9DE000
	0x03A03E38 LDRB W8, [X20 + 0xF64]
	0x03A03E3C MOV X19, X0
	0x03A03E40 TBNZ X8, 0x0, 0x3A03E58
	0x03A03E44 ADRP X0, 0x751000
	0x03A03E48 LDR X0, [X0 + 0x140]
	0x03A03E4C BL 0x1C16CF4
	0x03A03E50 MOVZ W8, 0x1
	0x03A03E54 STRB W8, [X20 + 0xF64]
	0x03A03E58 LDR X8, [X19 + 0x30]
	0x03A03E5C CBZ X8, 0x3A03E70
	0x03A03E60 LDR W0, [X8 + 0x18]
	0x03A03E64 LDP X20, X19, [X31 + 0x10]
	0x03A03E68 LDR X30, [X31], #0x20
	0x03A03E6C RET
	0x03A03E70 BL 0x1C16F20
	0x03A03E74 LDR X0, [X0 + 0x18]
	0x03A03E78 RET
	0x03A03E7C STP X30, X21, [X31 - 0x20]!
	0x03A03E80 STP X20, X19, [X31 + 0x10]
	0x03A03E84 ADRP X21, 0x9DE000
	0x03A03E88 LDRB W8, [X21 + 0xF65]
	0x03A03E8C MOV X19, X1
	0x03A03E90 MOV X20, X0
	0x03A03E94 TBNZ X8, 0x0, 0x3A03EB8
	0x03A03E98 ADRP X0, 0x751000
	0x03A03E9C LDR X0, [X0 + 0x178]
	0x03A03EA0 BL 0x1C16CF4
	0x03A03EA4 ADRP X0, 0x751000
	0x03A03EA8 LDR X0, [X0 + 0x140]
	0x03A03EAC BL 0x1C16CF4
	0x03A03EB0 MOVZ W8, 0x1
	0x03A03EB4 STRB W8, [X21 + 0xF65]
	0x03A03EB8 LDR X0, [X20 + 0x30]
	0x03A03EBC CBZ X0, 0x3A03F30
	0x03A03EC0 ADRP X9, 0x751000
	0x03A03EC4 LDR X9, [X9 + 0x178]
	0x03A03EC8 LDP W21, W10, [X0 + 0x18]
	0x03A03ECC LDR X8, [X0 + 0x10]
	0x03A03ED0 LDR X9, [X9]
	0x03A03ED4 ADD W10, W10, 0x1
	0x03A03ED8 STR W10, [X0 + 0x1C]
	0x03A03EDC CBZ X8, 0x3A03F30
	0x03A03EE0 LDR W10, [X8 + 0x18]
	0x03A03EE4 CMP W21, W10
	0x03A03EE8 B.CS 0x3A03F04
	0x03A03EEC SXTW X9, W21
	0x03A03EF0 ADD W10, W21, 0x1
	0x03A03EF4 ADD X8, X8, X9, 0x3, LSL
	0x03A03EF8 STR W10, [X0 + 0x18]
	0x03A03EFC STR X19, [X8 + 0x20]
	0x03A03F00 B 0x3A03F18
	0x03A03F04 LDR X8, [X9 + 0x20]
	0x03A03F08 MOV X1, X19
	0x03A03F0C LDR X8, [X8 + 0xC0]
	0x03A03F10 LDR X2, [X8 + 0x70]
	0x03A03F14 BL 0x301BF90
	0x03A03F18 CBZ X19, 0x3A03F30
	0x03A03F1C STR X20, [X19 + 0x10]
	0x03A03F20 STR W21, [X19 + 0x20]
	0x03A03F24 LDP X20, X19, [X31 + 0x10]
	0x03A03F28 LDP X30, X21, [X31], #0x20
	0x03A03F2C RET
	0x03A03F30 BL 0x1C16F20
	0x03A03F34 STR X30, [X31 - 0x20]!
	0x03A03F38 STP X20, X19, [X31 + 0x10]
	0x03A03F3C ADRP X20, 0x9DE000
	0x03A03F40 LDRB W8, [X20 + 0xF66]
	0x03A03F44 MOV X19, X0
	0x03A03F48 TBNZ X8, 0x0, 0x3A03F6C
	0x03A03F4C ADRP X0, 0x751000
	0x03A03F50 LDR X0, [X0 + 0x140]
	0x03A03F54 BL 0x1C16CF4
	0x03A03F58 ADRP X0, 0x751000
	0x03A03F5C LDR X0, [X0 + 0x150]
	0x03A03F60 BL 0x1C16CF4
	0x03A03F64 MOVZ W8, 0x1
	0x03A03F68 STRB W8, [X20 + 0xF66]
	0x03A03F6C LDR X0, [X19 + 0x30]
	0x03A03F70 CBZ X0, 0x3A03FAC
	0x03A03F74 LDR W8, [X0 + 0x18]
	0x03A03F78 CMP W8, 0x1
	0x03A03F7C B.LT 0x3A03F9C
	0x03A03F80 ADRP X8, 0x751000
	0x03A03F84 LDR X8, [X8 + 0x150]
	0x03A03F88 LDP X20, X19, [X31 + 0x10]
	0x03A03F8C MOV W1, W31
	0x03A03F90 LDR X2, [X8]
	0x03A03F94 LDR X30, [X31], #0x20
	0x03A03F98 B 0x301BCCC
	0x03A03F9C MOV X0, X19
	0x03A03FA0 LDP X20, X19, [X31 + 0x10]
	0x03A03FA4 LDR X30, [X31], #0x20
	0x03A03FA8 B 0x3A03FB0
	0x03A03FAC BL 0x1C16F20
	0x03A03FB0 STP X30, X23, [X31 - 0x30]!
	0x03A03FB4 STP X22, X21, [X31 + 0x10]
	0x03A03FB8 STP X20, X19, [X31 + 0x20]
	0x03A03FBC ADRP X22, 0x9DE000
	0x03A03FC0 ADRP X20, 0x751000
	0x03A03FC4 ADRP X19, 0x751000
	0x03A03FC8 LDRB W9, [X22 + 0xF67]
	0x03A03FCC LDR X20, [X20 + 0x140]
	0x03A03FD0 LDR X19, [X19 + 0x150]
	0x03A03FD4 MOV X21, X0
	0x03A03FD8 MOVZ W23, 0x1
	0x03A03FDC TBNZ X9, 0x0, 0x3A03FF4
	0x03A03FE0 MOV X0, X20
	0x03A03FE4 BL 0x1C16CF4
	0x03A03FE8 MOV X0, X19
	0x03A03FEC BL 0x1C16CF4
	0x03A03FF0 STRB W23, [X22 + 0xF67]
	0x03A03FF4 LDR X8, [X21 + 0x10]
	0x03A03FF8 CBZ X8, 0x3A04038
	0x03A03FFC LDR X0, [X8 + 0x30]
	0x03A04000 CBZ X0, 0x3A0404C
	0x03A04004 LDR W9, [X0 + 0x18]
	0x03A04008 LDR W10, [X21 + 0x20]
	0x03A0400C MOV X21, X8
	0x03A04010 SUB W9, W9, 0x1
	0x03A04014 CMP W10, W9
	0x03A04018 MOVZ W9, 0x1
	0x03A0401C B.EQ 0x3A03FDC
	0x03A04020 LDR X2, [X19]
	0x03A04024 LDP X20, X19, [X31 + 0x20]
	0x03A04028 LDP X22, X21, [X31 + 0x10]
	0x03A0402C ADD W1, W10, 0x1
	0x03A04030 LDP X30, X23, [X31], #0x30
	0x03A04034 B 0x301BCCC
	0x03A04038 LDP X20, X19, [X31 + 0x20]
	0x03A0403C LDP X22, X21, [X31 + 0x10]
	0x03A04040 MOV X0, X31
	0x03A04044 LDP X30, X23, [X31], #0x30
	0x03A04048 RET
	0x03A0404C BL 0x1C16F20
	0x03A04050 LDR X0, [X0 + 0x30]
	0x03A04054 RET
	0x03A04058 LDR X0, [X0 + 0x10]
	0x03A0405C RET
	0x03A04060 MOVZ W8, 0x1
	0x03A04064 LDR X0, [X0 + 0x10]
	0x03A04068 MOV W9, W8
	0x03A0406C EOR W8, W8, 0x1
	0x03A04070 CBNZ X0, 0x3A04064
	0x03A04074 AND W0, W9, 0x1
	0x03A04078 RET
	0x03A0407C LDRB W0, [X0 + 0x38]
	0x03A04080 RET
	0x03A04084 AND W8, W1, 0x1
	0x03A04088 STRB W8, [X0 + 0x38]
	0x03A0408C RET
	0x03A04090 SBFM X8, X1, 0x3F, 0x3F
	0x03A04094 STP X8, X1, [X0]
	0x03A04098 RET
	0x03A0409C STP X1, X2, [X0]
	0x03A040A0 RET
	0x03A040A4 STP X1, X2, [X0]
	0x03A040A8 RET
	0x03A040AC LDR X8, [X0]
	0x03A040B0 UBFM X0, X8, 0x3F, 0x3F
	0x03A040B4 RET
	0x03A040B8 SUB X31, X31, 0x60
	0x03A040BC STR X30, [X31 + 0x20]
	0x03A040C0 STP X24, X23, [X31 + 0x30]
	0x03A040C4 STP X22, X21, [X31 + 0x40]
	0x03A040C8 STP X20, X19, [X31 + 0x50]
	0x03A040CC ADRP X23, 0x9DD000
	0x03A040D0 ADRP X24, 0x750000
	0x03A040D4 LDRB W8, [X23 + 0xF69]
	0x03A040D8 LDR X24, [X24 + 0x180]
	0x03A040DC MOV X19, X3
	0x03A040E0 MOV X21, X2
	0x03A040E4 MOV X20, X1
	0x03A040E8 MOV X22, X0
	0x03A040EC TBNZ X8, 0x0, 0x3A04104
	0x03A040F0 ADRP X0, 0x750000
	0x03A040F4 LDR X0, [X0 + 0x180]
	0x03A040F8 BL 0x1C16CF4
	0x03A040FC MOVZ W8, 0x1
	0x03A04100 STRB W8, [X23 + 0xF69]
	0x03A04104 LDR X0, [X24]
	0x03A04108 ADD X1, X31, 0x10
	0x03A0410C STP X22, X20, [X31 + 0x10]
	0x03A04110 BL 0x1C16E04
	0x03A04114 MOV X23, X0
	0x03A04118 LDR X0, [X24]
	0x03A0411C ADD X1, X31, 0x0
	0x03A04120 STP X21, X19, [X31]
	0x03A04124 BL 0x1C16E04
	0x03A04128 CMP X23, X0
	0x03A0412C B.EQ 0x3A04148
	0x03A04130 CMP X22, X21
	0x03A04134 CSET W8, EQ
	0x03A04138 CMP X20, X19
	0x03A0413C CSET W9, EQ
	0x03A04140 AND W0, W8, W9, 0x0
	0x03A04144 B 0x3A0414C
	0x03A04148 MOVZ W0, 0x1
	0x03A0414C LDP X20, X19, [X31 + 0x50]
	0x03A04150 LDP X22, X21, [X31 + 0x40]
	0x03A04154 LDP X24, X23, [X31 + 0x30]
	0x03A04158 LDR X30, [X31 + 0x20]
	0x03A0415C ADD X31, X31, 0x60
	0x03A04160 RET
	0x03A04164 STR X30, [X31 - 0x10]!
	0x03A04168 BL 0x3A040B8
	0x03A0416C ORN W8, W31, W0, 0x0
	0x03A04170 AND W0, W8, 0x1
	0x03A04174 LDR X30, [X31], #0x10
	0x03A04178 RET
	0x03A0417C STP X30, X21, [X31 - 0x20]!
	0x03A04180 STP X20, X19, [X31 + 0x10]
	0x03A04184 ADRP X21, 0x9DD000
	0x03A04188 LDRB W8, [X21 + 0xF6A]
	0x03A0418C MOV X20, X1
	0x03A04190 MOV X19, X0
	0x03A04194 TBNZ X8, 0x0, 0x3A041AC
	0x03A04198 ADRP X0, 0x750000
	0x03A0419C LDR X0, [X0 + 0x180]
	0x03A041A0 BL 0x1C16CF4
	0x03A041A4 MOVZ W8, 0x1
	0x03A041A8 STRB W8, [X21 + 0xF6A]
	0x03A041AC CBZ X20, 0x3A041F4
	0x03A041B0 ADRP X8, 0x750000
	0x03A041B4 LDR X8, [X8 + 0x180]
	0x03A041B8 LDR X9, [X20]
	0x03A041BC LDR X8, [X8]
	0x03A041C0 CMP X9, X8
	0x03A041C4 B.NE 0x3A041F4
	0x03A041C8 MOV X0, X20
	0x03A041CC BL 0x1C16E08
	0x03A041D0 LDR X8, [X0]
	0x03A041D4 LDR X9, [X19]
	0x03A041D8 CMP X8, X9
	0x03A041DC B.NE 0x3A041F4
	0x03A041E0 LDR X8, [X0 + 0x8]
	0x03A041E4 LDR X9, [X19 + 0x8]
	0x03A041E8 CMP X8, X9
	0x03A041EC CSET W0, EQ
	0x03A041F0 B 0x3A041F8
	0x03A041F4 MOV W0, W31
	0x03A041F8 LDP X20, X19, [X31 + 0x10]
	0x03A041FC LDP X30, X21, [X31], #0x20
	0x03A04200 RET
	0x03A04204 STR X30, [X31 - 0x20]!
	0x03A04208 STP X20, X19, [X31 + 0x10]
	0x03A0420C MOV X1, X31
	0x03A04210 MOV X19, X0
	0x03A04214 BL 0x337C960
	0x03A04218 MOV W20, W0
	0x03A0421C ADD X0, X19, 0x8

ISIL:
	001 Move [X31-128], D11
	002 Move [X31-120], D10
	003 Move [X31+16], D9
	004 Move [X31+24], D8
	005 Move [X31+32], X29
	006 Move [X31+40], X30
	007 Move [X31+48], X28
	008 Move [X31+56], X27
	009 Move [X31+64], X26
	010 Move [X31+72], X25
	011 Move [X31+80], X24
	012 Move [X31+88], X23
	013 Move [X31+96], X22
	014 Move [X31+104], X21
	015 Move [X31+112], X20
	016 Move [X31+120], X19
	017 Subtract X31, X31, 1024
	018 NotImplemented "Instruction MRS not yet implemented."
	019 Move X8, [X27+40]
	020 Move X21, 0x9DF000
	021 Move X19, X2
	022 Move X20, X0
	023 Move [X31+1016], X8
	024 Move W8, [X21+3927]
	025 Move [X31+600], X1
	026 Move TEMP, X8
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {59}
	030 Move X0, 0x6F1000
	031 Move X0, [X0+2600]
	032 Call 0x1C17CF4
	033 Move X0, 0x752000
	034 Move X0, [X0+176]
	035 Call 0x1C17CF4
	036 Move X0, 0x752000
	037 Move X0, [X0+184]
	038 Call 0x1C17CF4
	039 Move X0, 0x752000
	040 Move X0, [X0+16]
	041 Call 0x1C17CF4
	042 Move X0, 0x74E000
	043 Move X0, [X0+3200]
	044 Call 0x1C17CF4
	045 Move X0, 0x751000
	046 Move X0, [X0+4080]
	047 Call 0x1C17CF4
	048 Move X0, 0x752000
	049 Move X0, [X0+192]
	050 Call 0x1C17CF4
	051 Move X0, 0x752000
	052 Move X0, [X0+200]
	053 Call 0x1C17CF4
	054 Move X0, 0x752000
	055 Move X0, [X0+208]
	056 Call 0x1C17CF4
	057 Move W8, 1
	058 Move [X21+3927], W8
	059 Move X21, 0x752000
	060 Move X21, [X21+184]
	061 Add X0, X31, 816
	062 Move W2, 196
	063 Move W1, W31
	064 Call 0x3EB2B10
	065 NotImplemented "Instruction MOVI not yet implemented."
	066 Move [X31+592], W31
	067 Move [X31+560], V0
	068 Move [X31+568], V0
	069 Move [X31+528], V0
	070 Move [X31+536], V0
	071 Move [X31+496], V0
	072 Move [X31+504], V0
	073 Move [X31+464], V0
	074 Move [X31+472], V0
	075 Move W8, [X20+224]
	076 NotImplemented "Instruction CMP not yet implemented."
	077 Move W3, 23
	078 Move W3, [X19+396]
	079 Move X1, [X20+312]
	080 Add X8, X31, 608
	081 Move X0, X20
	082 Move X2, X19
	083 Move X4, X31
	084 Call ScriptableRenderPass.CreateDrawingSettings, X0, X1, X2, X3
	085 Add X0, X31, 816
	086 Add X1, X31, 608
	087 Move W2, 196
	088 Call 0x3EB2AC0
	089 Move X0, [X21]
	090 Move X21, [X20+280]
	091 Move W8, [X0+224]
	092 Compare W8, 0
	093 JumpIfNotEqual {95}
	094 Call 0x1C17DFC
	095 Add X0, X31, 816
	096 Move X1, X21
	097 Move X2, X31
	098 Call DrawingSettings.set_overrideMaterial, X0, X1
	099 Move W1, [X20+288]
	100 Add X0, X31, 816
	101 Move X2, X31
	102 Call DrawingSettings.set_overrideMaterialPassIndex, X0, X1
	103 Move X1, [X20+296]
	104 Add X0, X31, 816
	105 Move X2, X31
	106 Call DrawingSettings.set_overrideShader, X0, X1
	107 Move W1, [X20+304]
	108 Add X0, X31, 816
	109 Move X2, X31
	110 Call DrawingSettings.set_overrideShaderPassIndex, X0, X1
	111 Move X21, [X19]
	112 Move X2, [X20+272]
	113 Move X23, [X19+216]
	114 Move V10, [X19+300]
	115 Move V11, [X19+304]
	116 Add X0, X31, 592
	117 Move X1, X21
	118 Move X3, X31
	119 Call ProfilingScope..ctor, X0, X1, X2
	120 Move X8, [X20+256]
	121 Compare X8, 0
	122 JumpIfEqual {461}
	123 Move W8, [X8+16]
	124 Add X22, X19, 24
	125 Compare W8, 0
	126 JumpIfEqual {281}
	127 Move X0, [X19+400]
	128 Compare X0, 0
	129 JumpIfEqual {463}
	130 Move X1, X31
	131 Call XRPass.get_enabled, X0
	132 Move TEMP, X0
	133 And TEMP, TEMP, 1
	134 Compare TEMP, 1
	135 JumpIfNotEqual {148}
	136 Move X8, 0x6F1000
	137 Move X8, [X8+2600]
	138 Move X0, [X8]
	139 Move W8, [X0+224]
	140 Compare W8, 0
	141 JumpIfNotEqual {143}
	142 Call 0x1C17DFC
	143 Move X8, 0x752000
	144 Move X8, [X8+208]
	145 Move X0, [X8]
	146 Move X1, X31
	147 Call Debug.LogWarning, X0
	148 Move X8, [X20+256]
	149 Compare X8, 0
	150 JumpIfEqual {466}
	151 Compare X23, 0
	152 JumpIfEqual {467}
	153 Move V8, [X8+36]
	154 Move X0, X23
	155 Move X1, X31
	156 Call Camera.get_nearClipPlane, X0
	157 Move V9, V0
	158 Move X0, X23
	159 Move X1, X31
	160 Call Camera.get_farClipPlane, X0
	161 Move V3, V0
	162 NotImplemented "Instruction FDIV not yet implemented."
	163 Add X8, X31, 608
	164 Move V0, V8
	165 Move V2, V9
	166 Move X0, X31
	167 Call Matrix4x4.Perspective, V0, V1, V2, V3
	168 Move V0, [X31+608]
	169 Move V1, [X31+624]
	170 Move V2, [X31+640]
	171 Move V3, [X31+656]
	172 Move [X31+528], V0
	173 Move [X31+536], V1
	174 Move [X31+560], V2
	175 Move [X31+568], V3
	176 Move [X31+608], V0
	177 Move [X31+616], V1
	178 Move [X31+640], V2
	179 Move [X31+648], V3
	180 Move X0, X22
	181 Move X1, X31
	182 Call CameraData.IsCameraProjectionMatrixFlipped, X0
	183 Move V0, [X31+608]
	184 Move V1, [X31+624]
	185 Move V2, [X31+640]
	186 Move V3, [X31+656]
	187 Move [X31+336], V0
	188 Move [X31+344], V1
	189 Move [X31+368], V2
	190 Move [X31+376], V3
	191 And W1, W0, 1
	192 Add X8, X31, 400
	193 Add X0, X31, 336
	194 Move X2, X31
	195 Call GL.GetGPUProjectionMatrix, X0, X1
	196 Move V0, [X31+400]
	197 Move V1, [X31+416]
	198 Move V2, [X31+432]
	199 Move V3, [X31+448]
	200 Move [X31+528], V0
	201 Move [X31+536], V1
	202 Move [X31+560], V2
	203 Move [X31+568], V3
	204 Add X8, X31, 400
	205 Move X0, X22
	206 Move W1, W31
	207 Move X2, X31
	208 Call CameraData.GetViewMatrix, X0, X1
	209 Move V0, [X31+400]
	210 Move V1, [X31+416]
	211 Move V2, [X31+432]
	212 Move V3, [X31+448]
	213 Move [X31+464], V0
	214 Move [X31+472], V1
	215 Move [X31+496], V2
	216 Move [X31+504], V3
	217 Add X0, X31, 464
	218 Move W1, 3
	219 Move X2, X31
	220 Call Matrix4x4.GetColumn, X0, X1
	221 Move X8, [X20+256]
	222 Compare X8, 0
	223 JumpIfEqual {468}
	224 Move S4, [X8+20]
	225 Move S5, [X8+24]
	226 Move S6, [X8+28]
	227 Move S7, [X8+32]
	228 Add S0, S0, S4
	229 Add S1, S1, S5
	230 Add S2, S2, S6
	231 Add S3, S3, S7
	232 Add X0, X31, 464
	233 Move W1, 3
	234 Move X2, X31
	235 Call Matrix4x4.SetColumn, X0, X1, X2
	236 Move V0, [X31+464]
	237 Move V1, [X31+480]
	238 Move V2, [X31+496]
	239 Move V3, [X31+512]
	240 Move X8, 0x752000
	241 Move [X31+400], V0
	242 Move [X31+408], V1
	243 Move [X31+432], V2
	244 Move [X31+440], V3
	245 Move V0, [X31+528]
	246 Move V1, [X31+544]
	247 Move V2, [X31+560]
	248 Move V3, [X31+576]
	249 Move X8, [X8+16]
	250 Move [X31+272], V0
	251 Move [X31+280], V1
	252 Move [X31+304], V2
	253 Move [X31+312], V3
	254 Move X0, [X8]
	255 Move W8, [X0+224]
	256 Compare W8, 0
	257 JumpIfNotEqual {259}
	258 Call 0x1C17DFC
	259 Move V0, [X31+400]
	260 Move V1, [X31+416]
	261 Move V2, [X31+432]
	262 Move V3, [X31+448]
	263 Move [X31+208], V0
	264 Move [X31+216], V1
	265 Move V0, [X31+272]
	266 Move V1, [X31+288]
	267 Move [X31+240], V2
	268 Move [X31+248], V3
	269 Move V2, [X31+304]
	270 Move V3, [X31+320]
	271 Move [X31+144], V0
	272 Move [X31+152], V1
	273 Move [X31+176], V2
	274 Move [X31+184], V3
	275 Add X1, X31, 208
	276 Add X2, X31, 144
	277 Move X0, X21
	278 Move W3, W31
	279 Move X4, X31
	280 Call RenderingUtils.SetViewAndProjectionMatrices, X0, X1, X2, X3
	281 Move X8, 0x751000
	282 Move X8, [X8+4080]
	283 Move X0, [X8]
	284 Move W8, [X0+224]
	285 Compare W8, 0
	286 JumpIfNotEqual {288}
	287 Call 0x1C17DFC
	288 Move X0, X19
	289 Move X1, X31
	290 Call ScriptableRenderPass.GetActiveDebugHandler, X0
	291 Move X23, X0
	292 Compare X0, 0
	293 JumpIfEqual {340}
	294 Move X28, 0x752000
	295 Move X28, [X28+200]
	296 Move X24, [X31+600]
	297 Move X8, [X28]
	298 Move W9, [X8+224]
	299 Compare W9, 0
	300 JumpIfNotEqual {304}
	301 Move X0, X8
	302 Call 0x1C17DFC
	303 Move X8, [X28]
	304 Move X9, [X8+184]
	305 Move X25, [X9+8]
	306 Compare X25, 0
	307 JumpIfNotEqual {330}
	308 Move W9, [X8+224]
	309 Compare W9, 0
	310 JumpIfNotEqual {314}
	311 Move X0, X8
	312 Call 0x1C17DFC
	313 Move X8, [X28]
	314 Move X9, 0x752000
	315 Move X8, [X8+184]
	316 Move X9, [X9+176]
	317 Move X26, [X8]
	318 Move X0, [X9]
	319 Call 0x1C17F10
	320 Move X8, 0x752000
	321 Move X8, [X8+192]
	322 Move X25, X0
	323 Move X2, [X8]
	324 Move X1, X26
	325 Move X3, X31
	326 Call DrawFunction..ctor, X0, X1, X2
	327 Move X8, [X28]
	328 Move X8, [X8+184]
	329 Move [X8+8], X25
	330 Add X5, X20, 228
	331 Add X6, X20, 320
	332 Add X4, X31, 816
	333 Move X0, X23
	334 Move X1, X24
	335 Move X2, X21
	336 Move X3, X19
	337 Move X7, X25
	338 Move [X31], X31
	339 Call DebugHandler.DrawWithDebugRenderState, X0, X1, X2, X3, X4, X5, X6, X7
	340 Move X8, 0x74E000
	341 Move X8, [X8+3200]
	342 Move X0, [X8]
	343 Move W8, [X0+224]
	344 Compare W8, 0
	345 JumpIfNotEqual {347}
	346 Call 0x1C17DFC
	347 Add X0, X31, 600
	348 Move X1, X21
	349 Move X2, X31
	350 Call ScriptableRenderContext.ExecuteCommandBuffer, X0, X1
	351 Compare X21, 0
	352 JumpIfEqual {465}
	353 Move X0, X21
	354 Move X1, X31
	355 Call CommandBuffer.Clear, X0
	356 Move X1, [X19+8]
	357 Move X2, [X19+16]
	358 Add X4, X20, 228
	359 Add X5, X20, 320
	360 Add X0, X31, 600
	361 Add X3, X31, 816
	362 Move X6, X31
	363 Call ScriptableRenderContext.DrawRenderers, X0, X1, X2, X3, X4
	364 Move X8, [X20+256]
	365 Compare X8, 0
	366 JumpIfEqual {462}
	367 Move W9, [X8+16]
	368 Compare W9, 0
	369 JumpIfEqual {437}
	370 Move W8, [X8+17]
	371 Compare W8, 0
	372 JumpIfEqual {437}
	373 Move X0, [X19+400]
	374 Compare X0, 0
	375 JumpIfEqual {464}
	376 Move X1, X31
	377 Call XRPass.get_enabled, X0
	378 Move TEMP, X0
	379 And TEMP, TEMP, 1
	380 Compare TEMP, 1
	381 JumpIfEqual {437}
	382 Add X8, X31, 400
	383 Move X0, X22
	384 Move W1, W31
	385 Move X2, X31
	386 Call CameraData.GetViewMatrix, X0, X1
	387 Move V0, [X31+400]
	388 Move V1, [X31+416]
	389 Move V2, [X31+432]
	390 Move V3, [X31+448]
	391 Move [X31+608], V0
	392 Move [X31+616], V1
	393 Move [X31+640], V2
	394 Move [X31+648], V3
	395 Add X8, X31, 272
	396 Move X0, X22
	397 Move W1, W31
	398 Move X2, X31
	399 Call CameraData.GetGPUProjectionMatrix, X0, X1
	400 Move X8, 0x751000
	401 Move V0, [X31+272]
	402 Move V1, [X31+288]
	403 Move V2, [X31+304]
	404 Move V3, [X31+320]
	405 Move X8, [X8+16]
	406 Move [X31+400], V0
	407 Move [X31+408], V1
	408 Move [X31+432], V2
	409 Move [X31+440], V3
	410 Move X0, [X8]
	411 Move W8, [X0+224]
	412 Compare W8, 0
	413 JumpIfNotEqual {415}
	414 Call 0x1C17DFC
	415 Move V0, [X31+608]
	416 Move V1, [X31+624]
	417 Move V2, [X31+640]
	418 Move V3, [X31+656]
	419 Move [X31+80], V0
	420 Move [X31+88], V1
	421 Move V0, [X31+400]
	422 Move V1, [X31+416]
	423 Move [X31+112], V2
	424 Move [X31+120], V3
	425 Move V2, [X31+432]
	426 Move V3, [X31+448]
	427 Move [X31+16], V0
	428 Move [X31+24], V1
	429 Move [X31+48], V2
	430 Move [X31+56], V3
	431 Add X1, X31, 80
	432 Add X2, X31, 16
	433 Move X0, X21
	434 Move W3, W31
	435 Move X4, X31
	436 Call RenderingUtils.SetViewAndProjectionMatrices, X0, X1, X2, X3
	437 Add X0, X31, 592
	438 Move X1, X31
	439 Call ProfilingScope.Dispose, X0
	440 Move X8, [X27+40]
	441 Move X9, [X31+1016]
	442 NotImplemented "Instruction CMP not yet implemented."
	443 Add X31, X31, 1024
	444 Move X20, [X31+112]
	445 Move X19, [X31+120]
	446 Move X22, [X31+96]
	447 Move X21, [X31+104]
	448 Move X24, [X31+80]
	449 Move X23, [X31+88]
	450 Move X26, [X31+64]
	451 Move X25, [X31+72]
	452 Move X28, [X31+48]
	453 Move X27, [X31+56]
	454 Move X29, [X31+32]
	455 Move X30, [X31+40]
	456 Move D9, [X31+16]
	457 Move D8, [X31+24]
	458 Move D11, [X31+128]
	459 Move D10, [X31+136]
	460 Return 
	461 Call 0x1C17F20
	462 Call 0x1C17F20
	463 Call 0x1C17F20
	464 Call 0x1C17F20
	465 Call 0x1C17F20
	466 Call 0x1C17F20
	467 Call 0x1C17F20
	468 Call 0x1C17F20
	469 Call 0x3EB2B20
	470 Move X19, X0
	471 NotImplemented "Instruction CMP not yet implemented."
	472 Move X0, X19
	473 Call 0x3EB2AD0
	474 Move X20, [X0]
	475 Call 0x3EB2AE0
	476 Add X0, X31, 592
	477 Move X1, X31
	478 Call ProfilingScope.Dispose, X0
	479 Compare X20, 0
	480 JumpIfEqual {440}
	481 Move X0, X20
	482 Call 0x1C17F18
	483 Move X20, X31
	484 Move X19, X0
	485 Add X0, X31, 592
	486 Move X1, X31
	487 Call ProfilingScope.Dispose, X0
	488 Compare X20, 0
	489 JumpIfNotEqual {492}
	490 Move X0, X19
	491 Call 0x1D2D690
	492 Move X0, X20
	493 Call 0x1C17F18
	494 Call 0x1991590

Method: System.Void RecordRenderGraph(UnityEngine.Experimental.Rendering.RenderGraphModule.RenderGraph renderGraph, ref UnityEngine.Rendering.Universal.RenderingData renderingData)

Disassembly:
	0x03A04220 MOV X1, X31
	0x03A04224 BL 0x339A95C
	0x03A04228 EOR W0, W0, W20, 0x0
	0x03A0422C LDP X20, X19, [X31 + 0x10]
	0x03A04230 LDR X30, [X31], #0x20
	0x03A04234 RET
	0x03A04238 CMP X1, X3
	0x03A0423C CSET W8, HI
	0x03A04240 CMP X0, X2
	0x03A04244 CSET W9, GT
	0x03A04248 CSEL W0, W8, W9, EQ
	0x03A0424C RET
	0x03A04250 CMP X1, X3
	0x03A04254 CSET W8, CC
	0x03A04258 CMP X0, X2
	0x03A0425C CSET W9, LT
	0x03A04260 CSEL W0, W8, W9, EQ
	0x03A04264 RET
	0x03A04268 ADD X8, X2, X0
	0x03A0426C ADDS X1, X3, X1
	0x03A04270 CINC X0, X8, CS
	0x03A04274 RET
	0x03A04278 SUB X8, X31, X2
	0x03A0427C CMP X3, 0x0
	0x03A04280 SUB X9, X31, X3
	0x03A04284 SUB X1, X1, X3
	0x03A04288 CSINV X8, X8, X2, EQ
	0x03A0428C ADD X8, X8, X0
	0x03A04290 CMP X1, X9
	0x03A04294 CINC X0, X8, CC
	0x03A04298 RET
	0x03A0429C SUB X9, X31, X0
	0x03A042A0 SUB X8, X31, X1
	0x03A042A4 CMP X1, 0x0
	0x03A042A8 CSINV X0, X9, X0, EQ
	0x03A042AC MOV X1, X8
	0x03A042B0 RET
	0x03A042B4 TBNZ X0, 0x0, 0x3A042D4
	0x03A042B8 MOVZ X8, 0x43F00000
	0x03A042BC SCVTF D1, X0
	0x03A042C0 FMOV D2, X8
	0x03A042C4 UCVTF D0, X1
	0x03A042C8 FMUL D1, D1, D2
	0x03A042CC FADD D0, D1, D0
	0x03A042D0 RET
	0x03A042D4 CBZ X1, 0x3A04300
	0x03A042D8 ORN X9, X31, X0, 0x0
	0x03A042DC MOVZ X10, 0x43F00000
	0x03A042E0 ORN X8, X31, X1, 0x0
	0x03A042E4 SCVTF D1, X9
	0x03A042E8 FMOV D2, X10
	0x03A042EC UCVTF D0, X8
	0x03A042F0 FMUL D1, D1, D2
	0x03A042F4 FADD D0, D1, D0
	0x03A042F8 FNEG D0, D0
	0x03A042FC RET
	0x03A04300 MOVZ X8, 0x43F00000
	0x03A04304 SCVTF D0, X0
	0x03A04308 FMOV D1, X8
	0x03A0430C FMUL D0, D0, D1
	0x03A04310 RET
	0x03A04314 CMP X0, 0x0
	0x03A04318 CSNEG X9, X0, X0, PL
	0x03A0431C CMP X1, 0x0
	0x03A04320 CSNEG X10, X1, X1, PL
	0x03A04324 UBFM X12, X9, 0x20, 0x3F
	0x03A04328 UBFM X13, X10, 0x20, 0x3F
	0x03A0432C AND X14, X10, 0x0
	0x03A04330 AND X11, X9, 0x0
	0x03A04334 UMADDL X9, X10, X9, X31
	0x03A04338 MUL X10, X13, X12
	0x03A0433C MUL X12, X14, X12
	0x03A04340 MADD X11, X13, X11, X12
	0x03A04344 EOR X8, X1, X0, 0x0
	0x03A04348 ADD X10, X10, X11, 0x20, LSR
	0x03A0434C ADDS X1, X9, X11, 0x20, LSL
	0x03A04350 CINC X0, X10, CS
	0x03A04354 TBNZ X8, 0x0, 0x3A0435C
	0x03A04358 RET
	0x03A0435C SUB X8, X31, X0
	0x03A04360 CMP X1, 0x0
	0x03A04364 SUB X1, X31, X1
	0x03A04368 CSINV X0, X8, X0, EQ
	0x03A0436C RET
	0x03A04370 MOVN X8, 0x0
	0x03A04374 STP X31, X31, [X0 + 0x20]
	0x03A04378 STP X8, X1, [X0]
	0x03A0437C STP X2, X31, [X0 + 0x10]
	0x03A04380 RET
	0x03A04384 MOVZ X9, 0x7FF00000
	0x03A04388 FMOV D2, X9
	0x03A0438C FCVTZS X8, D0
	0x03A04390 MOVZ X10, 0x80000000
	0x03A04394 FCMP D0, D2
	0x03A04398 FCVTZS X9, D1
	0x03A0439C CSEL X8, X10, X8, EQ
	0x03A043A0 FCMP D1, D2
	0x03A043A4 CSEL X9, X10, X9, EQ
	0x03A043A8 MOVN X10, 0x0
	0x03A043AC STP X31, X31, [X0 + 0x20]
	0x03A043B0 STP X10, X8, [X0]
	0x03A043B4 STP X9, X31, [X0 + 0x10]
	0x03A043B8 RET
	0x03A043BC LDR X8, [X1 + 0x8]
	0x03A043C0 STR X8, [X0 + 0x8]
	0x03A043C4 LDR X8, [X1 + 0x10]
	0x03A043C8 STR X8, [X0 + 0x10]
	0x03A043CC LDR V0, [X1 + 0x20]
	0x03A043D0 STR D0, [X0 + 0x20]
	0x03A043D4 LDR V0, [X1 + 0x28]
	0x03A043D8 STR D0, [X0 + 0x28]
	0x03A043DC LDR X8, [X1]
	0x03A043E0 STR X8, [X0]
	0x03A043E4 LDR X8, [X1 + 0x18]
	0x03A043E8 STR X8, [X0 + 0x18]
	0x03A043EC RET
	0x03A043F0 LDR X8, [X0 + 0x8]
	0x03A043F4 LDR X9, [X1 + 0x8]
	0x03A043F8 CMP X8, X9
	0x03A043FC B.NE 0x3A04414
	0x03A04400 LDR X8, [X0 + 0x10]
	0x03A04404 LDR X9, [X1 + 0x10]
	0x03A04408 CMP X8, X9
	0x03A0440C CSET W0, EQ
	0x03A04410 RET
	0x03A04414 MOV W0, W31
	0x03A04418 RET
	0x03A0441C LDR X8, [X0 + 0x8]
	0x03A04420 LDR X9, [X1 + 0x8]
	0x03A04424 CMP X8, X9
	0x03A04428 B.NE 0x3A04440
	0x03A0442C LDR X8, [X0 + 0x10]
	0x03A04430 LDR X9, [X1 + 0x10]
	0x03A04434 CMP X8, X9
	0x03A04438 CSET W0, NE
	0x03A0443C RET
	0x03A04440 MOVZ W0, 0x1
	0x03A04444 RET
	0x03A04448 STP X30, X21, [X31 - 0x20]!
	0x03A0444C STP X20, X19, [X31 + 0x10]
	0x03A04450 ADRP X21, 0x9DD000
	0x03A04454 LDRB W8, [X21 + 0xF6B]
	0x03A04458 MOV X20, X1
	0x03A0445C MOV X19, X0
	0x03A04460 TBNZ X8, 0x0, 0x3A04478
	0x03A04464 ADRP X0, 0x71A000
	0x03A04468 LDR X0, [X0 + 0x508]
	0x03A0446C BL 0x1C16CF4
	0x03A04470 MOVZ W8, 0x1
	0x03A04474 STRB W8, [X21 + 0xF6B]
	0x03A04478 CBZ X20, 0x3A044C0
	0x03A0447C ADRP X8, 0x71A000
	0x03A04480 LDR X8, [X8 + 0x508]
	0x03A04484 LDR X9, [X20]
	0x03A04488 LDR X8, [X8]
	0x03A0448C CMP X9, X8
	0x03A04490 B.NE 0x3A044C0
	0x03A04494 MOV X0, X20
	0x03A04498 BL 0x1C16E08
	0x03A0449C LDR X8, [X0 + 0x8]
	0x03A044A0 LDR X9, [X19 + 0x8]
	0x03A044A4 CMP X9, X8
	0x03A044A8 B.NE 0x3A044C0
	0x03A044AC LDR X8, [X0 + 0x10]
	0x03A044B0 LDR X9, [X19 + 0x10]
	0x03A044B4 CMP X9, X8
	0x03A044B8 CSET W0, EQ
	0x03A044BC B 0x3A044C4
	0x03A044C0 MOV W0, W31
	0x03A044C4 LDP X20, X19, [X31 + 0x10]
	0x03A044C8 LDP X30, X21, [X31], #0x20
	0x03A044CC RET
	0x03A044D0 SUB X31, X31, 0x50
	0x03A044D4 STP X30, X21, [X31 + 0x30]
	0x03A044D8 STP X20, X19, [X31 + 0x40]
	0x03A044DC ADRP X21, 0x9DD000
	0x03A044E0 ADRP X20, 0x71A000
	0x03A044E4 LDRB W8, [X21 + 0xF6C]
	0x03A044E8 LDR X20, [X20 + 0x508]
	0x03A044EC MOV X19, X0
	0x03A044F0 TBNZ X8, 0x0, 0x3A04508
	0x03A044F4 ADRP X0, 0x71A000

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+80], X30
	003 Move [X31+88], X23
	004 Move [X31+96], X22
	005 Move [X31+104], X21
	006 Move [X31+112], X20
	007 Move [X31+120], X19
	008 Move X21, 0x9DE000
	009 Move W8, [X21+3928]
	010 Move X19, X2
	011 Move X22, X1
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {40}
	017 Move X0, 0x751000
	018 Move X0, [X0+216]
	019 Call 0x1C17CF4
	020 Move X0, 0x751000
	021 Move X0, [X0+224]
	022 Call 0x1C17CF4
	023 Move X0, 0x751000
	024 Move X0, [X0+232]
	025 Call 0x1C17CF4
	026 Move X0, 0x751000
	027 Move X0, [X0+240]
	028 Call 0x1C17CF4
	029 Move X0, 0x751000
	030 Move X0, [X0+200]
	031 Call 0x1C17CF4
	032 Move X0, 0x750000
	033 Move X0, [X0+4088]
	034 Call 0x1C17CF4
	035 Move X0, 0x751000
	036 Move X0, [X0+248]
	037 Call 0x1C17CF4
	038 Move W8, 1
	039 Move [X21+3928], W8
	040 NotImplemented "Instruction MOVI not yet implemented."
	041 Move [X31+32], X31
	042 Move [X31+40], X31
	043 Move [X31+48], V0
	044 Move [X31+56], V0
	045 Move X23, 0x750000
	046 Move X21, [X19+464]
	047 Move X23, [X23+4088]
	048 Compare X21, 0
	049 JumpIfEqual {53}
	050 Move X1, [X23]
	051 Move X8, [X21]
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Compare X22, 0
	054 JumpIfEqual {164}
	055 Move X8, 0x751000
	056 Move X9, 0x751000
	057 Move X8, [X8+248]
	058 Move X9, [X9+232]
	059 Move X3, [X20+272]
	060 Add X2, X31, 40
	061 Move X1, [X8]
	062 Move X4, [X9]
	063 Add X8, X31, 0
	064 Move X0, X22
	065 Call 0x2241F24, X0, X1, X2, X3
	066 Move V0, [X31]
	067 Move V1, [X31+16]
	068 Move X0, [X23]
	069 Move [X31+48], V0
	070 Move [X31+56], V1
	071 Move W8, [X0+224]
	072 Compare W8, 0
	073 JumpIfNotEqual {76}
	074 Call 0x1C17DFC
	075 Move X0, [X23]
	076 Move X8, [X0+184]
	077 Move X8, [X8+24]
	078 Move [X31+32], X8
	079 Add X0, X31, 48
	080 Add X1, X31, 32
	081 Move W2, W31
	082 Move X3, X31
	083 Call RenderGraphBuilder.UseColorBuffer, X0, X1, X2
	084 Move X8, [X23]
	085 Move X8, [X8+184]
	086 Add X1, X8, 32
	087 Add X0, X31, 48
	088 Move W2, 2
	089 Move X3, X31
	090 Call RenderGraphBuilder.UseDepthBuffer, X0, X1, X2
	091 Compare X21, 0
	092 JumpIfEqual {165}
	093 Move X8, [X21+912]
	094 Compare X8, 0
	095 JumpIfEqual {166}
	096 Add X1, X8, 40
	097 Add X0, X31, 48
	098 Move X2, X31
	099 Call RenderGraphBuilder.ReadTexture, X0, X1
	100 Add X0, X31, 48
	101 Move W1, W31
	102 Move X2, X31
	103 Call RenderGraphBuilder.AllowPassCulling, X0, X1
	104 Move X8, [X31+40]
	105 Compare X8, 0
	106 JumpIfEqual {167}
	107 Move X21, 0x751000
	108 Move X21, [X21+200]
	109 Add X0, X8, 24
	110 Move W2, 696
	111 Move X1, X19
	112 Move [X8+16], X20
	113 Call 0x3EB2B30
	114 Move X8, [X21]
	115 Move W9, [X8+224]
	116 Compare W9, 0
	117 JumpIfNotEqual {121}
	118 Move X0, X8
	119 Call 0x1C17DFC
	120 Move X8, [X21]
	121 Move X9, [X8+184]
	122 Move X19, [X9+16]
	123 Compare X19, 0
	124 JumpIfNotEqual {147}
	125 Move W9, [X8+224]
	126 Compare W9, 0
	127 JumpIfNotEqual {131}
	128 Move X0, X8
	129 Call 0x1C17DFC
	130 Move X8, [X21]
	131 Move X9, 0x751000
	132 Move X8, [X8+184]
	133 Move X9, [X9+216]
	134 Move X20, [X8]
	135 Move X0, [X9]
	136 Call 0x1C17F10
	137 Move X8, 0x751000
	138 Move X8, [X8+240]
	139 Move X19, X0
	140 Move X2, [X8]
	141 Move X1, X20
	142 Move X3, X31
	143 Call 0x25C88AC, X0, X1, X2
	144 Move X8, [X21]
	145 Move X8, [X8+184]
	146 Move [X8+16], X19
	147 Move X8, 0x751000
	148 Move X8, [X8+224]
	149 Move X2, [X8]
	150 Add X0, X31, 48
	151 Move X1, X19
	152 Call 0x224207C, X0, X1
	153 Add X0, X31, 48
	154 Move X1, X31
	155 Call RenderGraphBuilder.Dispose, X0
	156 Move X20, [X31+112]
	157 Move X19, [X31+120]
	158 Move X22, [X31+96]
	159 Move X21, [X31+104]
	160 Move X30, [X31+80]
	161 Move X23, [X31+88]
	162 Add X31, X31, 128
	163 Return 
	164 Call 0x1C17F20
	165 Call 0x1C17F20
	166 Call 0x1C17F20
	167 Call 0x1C17F20
	168 Move X0, X21
	169 Call 0x1C181E0
	170 Move X19, X0
	171 NotImplemented "Instruction CMP not yet implemented."
	172 Move X0, X19
	173 Call 0x3EB2AD0
	174 Move X20, [X0]
	175 Call 0x3EB2AE0
	176 Add X0, X31, 48
	177 Move X1, X31
	178 Call RenderGraphBuilder.Dispose, X0
	179 Compare X20, 0
	180 JumpIfEqual {156}
	181 Move X0, X20
	182 Call 0x1C17F18
	183 Move X20, X31
	184 Move X19, X0
	185 Add X0, X31, 48
	186 Move X1, X31
	187 Call RenderGraphBuilder.Dispose, X0
	188 Compare X20, 0
	189 JumpIfNotEqual {192}
	190 Move X0, X19
	191 Call 0x1D2D690
	192 Move X0, X20
	193 Call 0x1C17F18
	194 Call 0x1991590

