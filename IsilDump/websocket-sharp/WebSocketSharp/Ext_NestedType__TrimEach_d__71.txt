Type: WebSocketSharp.Ext/<TrimEach>d__71

Method: System.Void .ctor(System.Int32 <>1__state)

Disassembly:
	0x03E6BB74 ADRP X0, 0x2D2000
	0x03E6BB78 LDR X0, [X0 + 0x630]
	0x03E6BB7C BL 0x1C16CF4
	0x03E6BB80 ADRP X0, 0x2D2000
	0x03E6BB84 LDR X0, [X0 + 0x640]
	0x03E6BB88 BL 0x1C16CF4
	0x03E6BB8C ADRP X0, 0x2D2000
	0x03E6BB90 LDR X0, [X0 + 0x648]
	0x03E6BB94 BL 0x1C16CF4
	0x03E6BB98 ADRP X0, 0x2D2000
	0x03E6BB9C LDR X0, [X0 + 0x658]
	0x03E6BBA0 BL 0x1C16CF4
	0x03E6BBA4 ADRP X0, 0x2D2000
	0x03E6BBA8 LDR X0, [X0 + 0x660]
	0x03E6BBAC BL 0x1C16CF4
	0x03E6BBB0 ADRP X0, 0x2D2000
	0x03E6BBB4 LDR X0, [X0 + 0x670]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W20, W1
	005 Move X1, X31
	006 Move X19, X0
	007 Call Object..ctor, X0
	008 Move X0, X31
	009 Move [X19+16], W20
	010 Call Thread.get_CurrentThread
	011 Compare X0, 0
	012 JumpIfEqual {20}
	013 Move X1, X31
	014 Call Thread.get_ManagedThreadId, X0
	015 Move [X19+32], W0
	016 Move X20, [X31+16]
	017 Move X19, [X31+24]
	018 Move X30, [X31+32]
	019 Return 
	020 Call 0x1C17F20

Method: System.Void System.IDisposable.Dispose()

Disassembly:
	0x03E6DF10 ADRP X0, 0x2FF000
	0x03E6DF14 LDR X0, [X0 + 0x3E0]
	0x03E6DF18 BL 0x1C16CF4
	0x03E6DF1C MOVZ W8, 0x1
	0x03E6DF20 STRB W8, [X24 + 0xD18]
	0x03E6DF24 MOV X0, X19
	0x03E6DF28 MOV X1, X31

ISIL:
	001 Move W8, [X0+16]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 Add W31, W8, 3
	004 Call <TrimEach>d__71.<>m__Finally1, X0
	005 Return 
	006 Return 

Method: System.Boolean MoveNext()

Disassembly:
	0x03E6DF2C BL 0x33BDD8C
	0x03E6DF30 STR X20, [X19 + 0x38]
	0x03E6DF34 STR X21, [X19 + 0xE0]
	0x03E6DF38 LDR X0, [X23]
	0x03E6DF3C BL 0x1C16F10
	0x03E6DF40 LDR X2, [X22]
	0x03E6DF44 MOV X1, X20
	0x03E6DF48 MOV X3, X31
	0x03E6DF4C MOV X21, X0
	0x03E6DF50 BL 0x3314368
	0x03E6DF54 STR X21, [X19 + 0x28]
	0x03E6DF58 CBZ X20, 0x3E6E00C
	0x03E6DF5C ADRP X22, 0x2FF000
	0x03E6DF60 ADRP X23, 0x2FF000
	0x03E6DF64 ADRP X24, 0x288000
	0x03E6DF68 LDR X22, [X22 + 0x3D8]
	0x03E6DF6C LDR X23, [X23 + 0x3E0]
	0x03E6DF70 LDR X24, [X24 + 0x570]
	0x03E6DF74 MOV X0, X20
	0x03E6DF78 MOV X1, X31
	0x03E6DF7C BL 0x3EA34E4
	0x03E6DF80 MOV X21, X0
	0x03E6DF84 BL 0x1C16D44
	0x03E6DF88 STR X21, [X19 + 0xA8]
	0x03E6DF8C LDR X0, [X22]
	0x03E6DF90 BL 0x1C16F10
	0x03E6DF94 LDR X2, [X23]
	0x03E6DF98 MOV X1, X19
	0x03E6DF9C MOV X3, X31
	0x03E6DFA0 MOV X21, X0
	0x03E6DFA4 BL 0x2A6B948
	0x03E6DFA8 STR X21, [X19 + 0xB0]
	0x03E6DFAC LDR X8, [X20]
	0x03E6DFB0 MOV X0, X20
	0x03E6DFB4 LDP X9, X1, [X8 + 0x1C8]
	0x03E6DFB8 BLR X9
	0x03E6DFBC AND W8, W0, 0x1
	0x03E6DFC0 MOV X0, X20
	0x03E6DFC4 MOV X1, X31
	0x03E6DFC8 STRB W8, [X19 + 0x11C]
	0x03E6DFCC BL 0x3EA34EC
	0x03E6DFD0 STR X0, [X19 + 0x128]
	0x03E6DFD4 LDR X0, [X24]
	0x03E6DFD8 LDR W8, [X0 + 0xE0]
	0x03E6DFDC CBNZ W8, 0x3E6DFE4
	0x03E6DFE0 BL 0x1C16DFC
	0x03E6DFE4 FMOV D0, 1
	0x03E6DFE8 MOV X0, X31
	0x03E6DFEC BL 0x3394754
	0x03E6DFF0 STR X0, [X19 + 0x140]
	0x03E6DFF4 MOV X0, X19
	0x03E6DFF8 LDP X20, X19, [X31 + 0x30]
	0x03E6DFFC LDP X22, X21, [X31 + 0x20]
	0x03E6E000 LDP X24, X23, [X31 + 0x10]
	0x03E6E004 LDR X30, [X31], #0x40
	0x03E6E008 B 0x3E6DD1C
	0x03E6E00C BL 0x1C16F20
	0x03E6E010 STR X30, [X31 - 0x30]!
	0x03E6E014 STP X22, X21, [X31 + 0x10]
	0x03E6E018 STP X20, X19, [X31 + 0x20]
	0x03E6E01C ADRP X22, 0x57A000
	0x03E6E020 LDRB W8, [X22 + 0xD19]
	0x03E6E024 MOV X20, X2
	0x03E6E028 MOV X21, X1
	0x03E6E02C MOV X19, X0
	0x03E6E030 TBNZ X8, 0x0, 0x3E6E090
	0x03E6E034 ADRP X0, 0x2FE000
	0x03E6E038 LDR X0, [X0 + 0x3D8]
	0x03E6E03C BL 0x1C16CF4
	0x03E6E040 ADRP X0, 0x28C000
	0x03E6E044 LDR X0, [X0 + 0x248]
	0x03E6E048 BL 0x1C16CF4
	0x03E6E04C ADRP X0, 0x2FE000
	0x03E6E050 LDR X0, [X0 + 0x400]
	0x03E6E054 BL 0x1C16CF4
	0x03E6E058 ADRP X0, 0x287000
	0x03E6E05C LDR X0, [X0 + 0x570]
	0x03E6E060 BL 0x1C16CF4
	0x03E6E064 ADRP X0, 0x2FE000
	0x03E6E068 LDR X0, [X0 + 0x408]
	0x03E6E06C BL 0x1C16CF4
	0x03E6E070 ADRP X0, 0x2FE000
	0x03E6E074 LDR X0, [X0 + 0x3C8]
	0x03E6E078 BL 0x1C16CF4
	0x03E6E07C ADRP X0, 0x2C2000
	0x03E6E080 LDR X0, [X0 + 0xDE8]
	0x03E6E084 BL 0x1C16CF4
	0x03E6E088 MOVZ W8, 0x1
	0x03E6E08C STRB W8, [X22 + 0xD19]
	0x03E6E090 MOV X0, X19
	0x03E6E094 MOV X1, X31
	0x03E6E098 STR X31, [X31 + 0x8]
	0x03E6E09C BL 0x33BDD8C
	0x03E6E0A0 CBZ X21, 0x3E6E1F0
	0x03E6E0A4 LDR W8, [X21 + 0x10]
	0x03E6E0A8 CBZ W8, 0x3E6E224
	0x03E6E0AC ADRP X8, 0x28C000
	0x03E6E0B0 LDR X8, [X8 + 0x248]
	0x03E6E0B4 ADD X22, X19, 0x138
	0x03E6E0B8 LDR X0, [X8]
	0x03E6E0BC LDR W8, [X0 + 0xE0]
	0x03E6E0C0 CBNZ W8, 0x3E6E0C8
	0x03E6E0C4 BL 0x1C16DFC
	0x03E6E0C8 ADD X2, X31, 0x8
	0x03E6E0CC MOV X0, X21
	0x03E6E0D0 MOV X1, X22
	0x03E6E0D4 BL 0x3E6AE2C
	0x03E6E0D8 TBZ X0, 0x0, 0x3E6E280
	0x03E6E0DC ADRP X21, 0x2FE000
	0x03E6E0E0 LDR X21, [X21 + 0x3C8]
	0x03E6E0E4 CBZ X20, 0x3E6E114
	0x03E6E0E8 LDR W8, [X20 + 0x18]
	0x03E6E0EC CBZ W8, 0x3E6E114
	0x03E6E0F0 LDR X0, [X21]
	0x03E6E0F4 LDR W8, [X0 + 0xE0]
	0x03E6E0F8 CBNZ W8, 0x3E6E100
	0x03E6E0FC BL 0x1C16DFC
	0x03E6E100 ADD X1, X31, 0x8
	0x03E6E104 MOV X0, X20
	0x03E6E108 BL 0x3E6E2F8
	0x03E6E10C TBZ X0, 0x0, 0x3E6E2A8
	0x03E6E110 STR X20, [X19 + 0xE8]
	0x03E6E114 LDR X0, [X21]
	0x03E6E118 ADRP X20, 0x2FE000
	0x03E6E11C ADRP X22, 0x2FE000
	0x03E6E120 ADRP X21, 0x2FE000
	0x03E6E124 LDR W8, [X0 + 0xE0]
	0x03E6E128 LDR X20, [X20 + 0x400]
	0x03E6E12C LDR X22, [X22 + 0x3D8]
	0x03E6E130 LDR X21, [X21 + 0x408]
	0x03E6E134 CBNZ W8, 0x3E6E13C
	0x03E6E138 BL 0x1C16DFC
	0x03E6E13C BL 0x3E6E480
	0x03E6E140 MOVZ W8, 0x1
	0x03E6E144 STR X0, [X19 + 0x18]
	0x03E6E148 STRB W8, [X19 + 0x20]
	0x03E6E14C LDR X0, [X20]
	0x03E6E150 BL 0x1C16F10
	0x03E6E154 MOV X1, X31
	0x03E6E158 MOV X20, X0
	0x03E6E15C BL 0x3E7B074
	0x03E6E160 BL 0x1C16D44
	0x03E6E164 STR X20, [X19 + 0xA8]
	0x03E6E168 LDR X0, [X22]
	0x03E6E16C BL 0x1C16F10
	0x03E6E170 LDR X2, [X21]
	0x03E6E174 MOV X1, X19
	0x03E6E178 MOV X3, X31
	0x03E6E17C MOV X20, X0
	0x03E6E180 BL 0x2A6B948
	0x03E6E184 LDR X0, [X19 + 0x138]
	0x03E6E188 STR X20, [X19 + 0xB0]
	0x03E6E18C CBZ X0, 0x3E6E2A4
	0x03E6E190 ADRP X20, 0x2C2000
	0x03E6E194 ADRP X21, 0x287000
	0x03E6E198 LDR X20, [X20 + 0xDE8]
	0x03E6E19C LDR X21, [X21 + 0x570]
	0x03E6E1A0 MOV X1, X31
	0x03E6E1A4 BL 0x361CEF0
	0x03E6E1A8 LDR X1, [X20]
	0x03E6E1AC MOV X2, X31
	0x03E6E1B0 BL 0x321BA08
	0x03E6E1B4 AND W8, W0, 0x1
	0x03E6E1B8 STRB W8, [X19 + 0x11C]
	0x03E6E1BC LDR X0, [X21]
	0x03E6E1C0 LDR W8, [X0 + 0xE0]
	0x03E6E1C4 CBNZ W8, 0x3E6E1CC
	0x03E6E1C8 BL 0x1C16DFC
	0x03E6E1CC FMOV D0, 4.000000000232831
	0x03E6E1D0 MOV X0, X31
	0x03E6E1D4 BL 0x3394754
	0x03E6E1D8 STR X0, [X19 + 0x140]
	0x03E6E1DC MOV X0, X19

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X0
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, 0x57C000
	007 Move W8, [X19+3341]
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {24}
	013 Move X0, 0x287000
	014 Move X0, [X0+3952]
	015 Call 0x1C17CF4
	016 Move X0, 0x287000
	017 Move X0, [X0+3960]
	018 Call 0x1C17CF4
	019 Move X0, 0x287000
	020 Move X0, [X0+3608]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X19+3341], W8
	024 Add X8, X31, 24
	025 Move [X31+8], X8
	026 Move W8, [X20+16]
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Compare W8, 0
	029 JumpIfNotEqual {156}
	030 Move X19, [X20+40]
	031 Move TEMP, 0
	032 Not TEMP
	033 Move W8, TEMP
	034 Move [X20+16], W8
	035 Compare X19, 0
	036 JumpIfEqual {146}
	037 Move X10, 0x287000
	038 Move X8, [X19]
	039 Move X10, [X10+3952]
	040 NotImplemented "Instruction LDRH not yet implemented."
	041 Move X1, [X10]
	042 Compare X9, 0
	043 JumpIfEqual {50}
	044 Move X10, [X8+176]
	045 Add X10, X10, 8
	046 NotImplemented "Instruction LDUR not yet implemented."
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Subtract X9, X9, 1
	049 Add X10, X10, 16
	050 Move X0, X19
	051 Move W2, W31
	052 Call 0x1C5D788
	053 Move X19, [X20+56]
	054 Move TEMP, 2
	055 Not TEMP
	056 Move W8, TEMP
	057 Move [X20+16], W8
	058 Move [X20+64], X31
	059 NotImplemented "Instruction LDRSW not yet implemented."
	060 Add X8, X8, X9
	061 Add X0, X8, 312
	062 Move X8, [X0]
	063 Move X1, [X0+8]
	064 Move X0, X19
	065 NotImplemented "Instruction BLR not yet implemented."
	066 Move X8, [X31+24]
	067 Move TEMP, 2
	068 Not TEMP
	069 Move W9, TEMP
	070 Move X19, X0
	071 Move [X8+56], X0
	072 Move [X8+16], W9
	073 Compare X19, 0
	074 JumpIfEqual {145}
	075 Move X10, 0x286000
	076 Move X8, [X19]
	077 Move X10, [X10+3608]
	078 NotImplemented "Instruction LDRH not yet implemented."
	079 Move X1, [X10]
	080 Compare X9, 0
	081 JumpIfEqual {88}
	082 Move X10, [X8+176]
	083 Add X10, X10, 8
	084 NotImplemented "Instruction LDUR not yet implemented."
	085 NotImplemented "Instruction CMP not yet implemented."
	086 Subtract X9, X9, 1
	087 Add X10, X10, 16
	088 Move X0, X19
	089 Move W2, W31
	090 Call 0x1C5D788
	091 NotImplemented "Instruction LDRSW not yet implemented."
	092 Add X8, X8, X9
	093 Add X0, X8, 312
	094 Move X8, [X0]
	095 Move X1, [X0+8]
	096 Move X0, X19
	097 NotImplemented "Instruction BLR not yet implemented."
	098 Move W8, W0
	099 Move X0, [X31+24]
	100 Move TEMP, X8
	101 And TEMP, TEMP, 1
	102 Compare TEMP, 1
	103 JumpIfNotEqual {123}
	104 Move X19, [X0+56]
	105 Compare X19, 0
	106 JumpIfEqual {147}
	107 Move X10, 0x286000
	108 Move X8, [X19]
	109 Move X10, [X10+3960]
	110 NotImplemented "Instruction LDRH not yet implemented."
	111 Move X1, [X10]
	112 Compare X9, 0
	113 JumpIfEqual {120}
	114 Move X10, [X8+176]
	115 Add X10, X10, 8
	116 NotImplemented "Instruction LDUR not yet implemented."
	117 NotImplemented "Instruction CMP not yet implemented."
	118 Subtract X9, X9, 1
	119 Add X10, X10, 16
	120 Move X0, X19
	121 Move W2, W31
	122 Call 0x1C5D788
	123 Call <TrimEach>d__71.<>m__Finally1, X0
	124 Move X8, [X31+24]
	125 Move W0, W31
	126 Move [X8+56], X31
	127 NotImplemented "Instruction LDRSW not yet implemented."
	128 Add X8, X8, X9
	129 Add X0, X8, 312
	130 Move X8, [X0]
	131 Move X1, [X0+8]
	132 Move X0, X19
	133 NotImplemented "Instruction BLR not yet implemented."
	134 Move X8, [X31+24]
	135 Move [X8+64], X0
	136 Compare X0, 0
	137 JumpIfEqual {148}
	138 Move X1, X31
	139 Call String.Trim, X0
	140 Move X9, [X31+24]
	141 Move X8, X0
	142 Move W0, 1
	143 Move [X9+24], X8
	144 Move [X9+16], W0
	145 Call 0x1C17F20
	146 Call 0x1C17F20
	147 Call 0x1C17F20
	148 Call 0x1C17F20
	149 NotImplemented "Instruction CMP not yet implemented."
	150 Call 0x3EB2AD0
	151 Move X19, [X0]
	152 Move [X31], X19
	153 Call 0x3EB2AE0
	154 Compare X19, 0
	155 JumpIfNotEqual {162}
	156 Move W0, W31
	157 Move X20, [X31+32]
	158 Move X19, [X31+40]
	159 Move X30, [X31+16]
	160 Add X31, X31, 48
	161 Return X0
	162 Add X8, X31, 0
	163 Add X0, X8, 8
	164 Call 0x1C17688
	165 Move X0, X19
	166 Call 0x1C17F18
	167 Compare X19, 0
	168 JumpIfNotEqual {170}
	169 Call 0x1D2D690
	170 Move X0, [X31+24]
	171 Move W8, [X0+16]
	172 NotImplemented "Instruction CMP not yet implemented."
	173 Add W31, W8, 3
	174 Call <TrimEach>d__71.<>m__Finally1, X0
	175 Move X0, X19
	176 Call 0x1C17F18
	177 Call 0x1991590

Method: System.Void <>m__Finally1()

Disassembly:
	0x03E6E1E0 LDP X20, X19, [X31 + 0x20]
	0x03E6E1E4 LDP X22, X21, [X31 + 0x10]
	0x03E6E1E8 LDR X30, [X31], #0x30
	0x03E6E1EC B 0x3E6DD1C
	0x03E6E1F0 ADRP X0, 0x28A000
	0x03E6E1F4 LDR X0, [X0 + 0x528]
	0x03E6E1F8 BL 0x1C16D08
	0x03E6E1FC BL 0x1C16F10
	0x03E6E200 MOV X19, X0
	0x03E6E204 ADRP X0, 0x2B5000
	0x03E6E208 LDR X0, [X0 + 0xFF0]
	0x03E6E20C BL 0x1C16D08
	0x03E6E210 MOV X1, X0
	0x03E6E214 MOV X0, X19
	0x03E6E218 MOV X2, X31
	0x03E6E21C BL 0x330E100
	0x03E6E220 B 0x3E6E268
	0x03E6E224 ADRP X0, 0x28D000
	0x03E6E228 LDR X0, [X0 + 0x578]
	0x03E6E22C BL 0x1C16D08
	0x03E6E230 BL 0x1C16F10
	0x03E6E234 MOV X19, X0
	0x03E6E238 ADRP X0, 0x2AE000
	0x03E6E23C LDR X0, [X0 + 0x9B8]
	0x03E6E240 BL 0x1C16D08
	0x03E6E244 MOV X20, X0
	0x03E6E248 ADRP X0, 0x2B5000
	0x03E6E24C LDR X0, [X0 + 0xFF0]
	0x03E6E250 BL 0x1C16D08
	0x03E6E254 MOV X2, X0
	0x03E6E258 MOV X0, X19
	0x03E6E25C MOV X1, X20
	0x03E6E260 MOV X3, X31
	0x03E6E264 BL 0x330E16C
	0x03E6E268 ADRP X0, 0x2FE000
	0x03E6E26C LDR X0, [X0 + 0x410]
	0x03E6E270 BL 0x1C16D08
	0x03E6E274 MOV X1, X0
	0x03E6E278 MOV X0, X19
	0x03E6E27C BL 0x1C16DEC
	0x03E6E280 ADRP X0, 0x28D000
	0x03E6E284 LDR X19, [X31 + 0x8]
	0x03E6E288 LDR X0, [X0 + 0x578]
	0x03E6E28C BL 0x1C16D08

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x57B000
	005 Move W8, [X19+3342]
	006 Move X20, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x286000
	012 Move X0, [X0+3584]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X19+3342], W8
	016 Move X19, [X20+56]
	017 Move TEMP, 0
	018 Not TEMP
	019 Move W8, TEMP
	020 Move [X20+16], W8
	021 Compare X19, 0
	022 JumpIfEqual {39}
	023 Move X10, 0x286000
	024 Move X8, [X19]
	025 Move X10, [X10+3584]
	026 NotImplemented "Instruction LDRH not yet implemented."
	027 Move X1, [X10]
	028 Compare X9, 0
	029 JumpIfEqual {36}
	030 Move X10, [X8+176]
	031 Add X10, X10, 8
	032 NotImplemented "Instruction LDUR not yet implemented."
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Subtract X9, X9, 1
	035 Add X10, X10, 16
	036 Move X0, X19
	037 Move W2, W31
	038 Call 0x1C5D788
	039 Move X20, [X31+16]
	040 Move X19, [X31+24]
	041 Move X30, [X31+32]
	042 Return 
	043 NotImplemented "Instruction LDRSW not yet implemented."
	044 Add X8, X8, X9
	045 Add X0, X8, 312
	046 Move X2, [X0]
	047 Move X1, [X0+8]
	048 Move X0, X19
	049 Move X20, [X31+16]
	050 Move X19, [X31+24]
	051 Move X30, [X31+32]
	052 CallNoReturn X2

Method: System.String System.Collections.Generic.IEnumerator<System.String>.get_Current()

Disassembly:
	0x03E6E290 BL 0x1C16F10
	0x03E6E294 MOV X20, X0

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Void System.Collections.IEnumerator.Reset()

Disassembly:
	0x03E6E298 ADRP X0, 0x2B5000
	0x03E6E29C LDR X0, [X0 + 0xFF0]
	0x03E6E2A0 B 0x3E6E2C8
	0x03E6E2A4 BL 0x1C16F20
	0x03E6E2A8 ADRP X0, 0x28D000
	0x03E6E2AC LDR X19, [X31 + 0x8]
	0x03E6E2B0 LDR X0, [X0 + 0x578]
	0x03E6E2B4 BL 0x1C16D08
	0x03E6E2B8 BL 0x1C16F10
	0x03E6E2BC MOV X20, X0
	0x03E6E2C0 ADRP X0, 0x2C3000
	0x03E6E2C4 LDR X0, [X0 + 0x320]
	0x03E6E2C8 BL 0x1C16D08
	0x03E6E2CC MOV X2, X0

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0x286000
	004 Move X0, [X0+2880]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X1, X31
	008 Move X19, X0
	009 Call NotSupportedException..ctor, X0
	010 Move X0, 0x2FF000
	011 Move X0, [X0+936]
	012 Call 0x1C17D08
	013 Move X1, X0
	014 Move X0, X19
	015 Call 0x1C17DEC

Method: System.Object System.Collections.IEnumerator.get_Current()

Disassembly:
	0x03E6E2D0 MOV X0, X20
	0x03E6E2D4 MOV X1, X19

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Collections.Generic.IEnumerator`1<System.String> System.Collections.Generic.IEnumerable<System.String>.GetEnumerator()

Disassembly:
	0x03E6E2D8 MOV X3, X31
	0x03E6E2DC BL 0x330E16C
	0x03E6E2E0 ADRP X0, 0x2FE000
	0x03E6E2E4 LDR X0, [X0 + 0x410]
	0x03E6E2E8 BL 0x1C16D08
	0x03E6E2EC MOV X1, X0
	0x03E6E2F0 MOV X0, X20
	0x03E6E2F4 BL 0x1C16DEC
	0x03E6E2F8 STR X30, [X31 - 0x40]!
	0x03E6E2FC STP X24, X23, [X31 + 0x10]
	0x03E6E300 STP X22, X21, [X31 + 0x20]
	0x03E6E304 STP X20, X19, [X31 + 0x30]
	0x03E6E308 ADRP X21, 0x57A000
	0x03E6E30C ADRP X23, 0x2FE000
	0x03E6E310 LDRB W8, [X21 + 0xD2E]
	0x03E6E314 LDR X23, [X23 + 0x418]
	0x03E6E318 MOV X19, X1
	0x03E6E31C MOV X20, X0
	0x03E6E320 TBNZ X8, 0x0, 0x3E6E380
	0x03E6E324 ADRP X0, 0x2FE000
	0x03E6E328 LDR X0, [X0 + 0x420]
	0x03E6E32C BL 0x1C16CF4
	0x03E6E330 ADRP X0, 0x28C000
	0x03E6E334 LDR X0, [X0 + 0x248]
	0x03E6E338 BL 0x1C16CF4
	0x03E6E33C ADRP X0, 0x286000
	0x03E6E340 LDR X0, [X0 + 0xBF8]
	0x03E6E344 BL 0x1C16CF4
	0x03E6E348 ADRP X0, 0x2FE000
	0x03E6E34C LDR X0, [X0 + 0x428]
	0x03E6E350 BL 0x1C16CF4
	0x03E6E354 ADRP X0, 0x2FE000
	0x03E6E358 LDR X0, [X0 + 0x418]
	0x03E6E35C BL 0x1C16CF4
	0x03E6E360 ADRP X0, 0x2FE000
	0x03E6E364 LDR X0, [X0 + 0x430]
	0x03E6E368 BL 0x1C16CF4
	0x03E6E36C ADRP X0, 0x2FE000
	0x03E6E370 LDR X0, [X0 + 0x438]
	0x03E6E374 BL 0x1C16CF4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x57B000
	005 Move W8, [X20+3343]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x2FF000
	012 Move X0, [X0+824]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+3343], W8
	016 Move W8, [X19+16]
	017 Add W31, W8, 2
	018 Move W20, [X19+32]
	019 Move X0, X31
	020 Call Thread.get_CurrentThread
	021 Compare X0, 0
	022 JumpIfEqual {44}
	023 Move X1, X31
	024 Call Thread.get_ManagedThreadId, X0
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move [X19+16], W31
	027 Move X20, X19
	028 Move X8, 0x2FF000
	029 Move X8, [X8+824]
	030 Move X0, [X8]
	031 Call 0x1C17F10
	032 Move W1, W31
	033 Move X20, X0
	034 Call <TrimEach>d__71..ctor, X0, X1
	035 Compare X20, 0
	036 JumpIfEqual {44}
	037 Move X8, [X19+48]
	038 Move X0, X20
	039 Move [X20+40], X8
	040 Move X20, [X31+16]
	041 Move X19, [X31+24]
	042 Move X30, [X31+32]
	043 Return X0
	044 Call 0x1C17F20

Method: System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()

Disassembly:
	0x03E6E378 MOVZ W8, 0x1

ISIL:
	001 Call <TrimEach>d__71.System.Collections.Generic.IEnumerable<System.String>.GetEnumerator, X0
	002 Return X0

