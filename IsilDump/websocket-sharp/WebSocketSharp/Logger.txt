Type: WebSocketSharp.Logger

Method: System.Void .ctor()

Disassembly:
	0x03E7C074 LDR X0, [X0 + 0x10]
	0x03E7C078 RET
	0x03E7C07C LDRB W0, [X0 + 0x18]
	0x03E7C080 RET

ISIL:
	001 Move W1, 4
	002 Move X2, X31
	003 Move X3, X31

Method: System.Void .ctor(WebSocketSharp.LogLevel level)

Disassembly:
	0x03E7C158 STR X30, [X31 - 0x20]!
	0x03E7C15C STP X20, X19, [X31 + 0x10]
	0x03E7C160 LDR X19, [X0 + 0x10]

ISIL:
	001 Move X2, X31
	002 Move X3, X31
	003 Call Logger..ctor, X0, X1, X2, X3
	004 Return 

Method: System.Void .ctor(WebSocketSharp.LogLevel level, System.String file, System.Action`2<WebSocketSharp.LogData, System.String> output)

Disassembly:
	0x03E7C084 LDRB W8, [X0 + 0x28]
	0x03E7C088 CMP W8, 0x2
	0x03E7C08C CSET W0, EQ
	0x03E7C090 RET
	0x03E7C094 LDRB W8, [X0 + 0x28]
	0x03E7C098 CMP W8, 0x8
	0x03E7C09C CSET W0, EQ
	0x03E7C0A0 RET
	0x03E7C0A4 LDRB W8, [X0 + 0x39]
	0x03E7C0A8 CMP W8, 0x1
	0x03E7C0AC CSET W0, EQ
	0x03E7C0B0 RET
	0x03E7C0B4 LDRB W8, [X0 + 0x28]
	0x03E7C0B8 CMP W8, 0x0
	0x03E7C0BC CSET W0, EQ
	0x03E7C0C0 RET
	0x03E7C0C4 LDRB W8, [X0 + 0x28]
	0x03E7C0C8 CMP W8, 0x7
	0x03E7C0CC CSET W0, HI
	0x03E7C0D0 RET
	0x03E7C0D4 LDRB W8, [X0 + 0x28]
	0x03E7C0D8 SUB W8, W8, 0x1
	0x03E7C0DC CMP W8, 0x2
	0x03E7C0E0 CSET W0, CC
	0x03E7C0E4 RET
	0x03E7C0E8 LDRB W8, [X0 + 0x18]
	0x03E7C0EC CMP W8, 0x1
	0x03E7C0F0 CSET W0, EQ
	0x03E7C0F4 RET
	0x03E7C0F8 LDRB W8, [X0 + 0x18]
	0x03E7C0FC CBZ W8, 0x3E7C110
	0x03E7C100 LDRB W8, [X0 + 0x28]
	0x03E7C104 CMP W8, 0x0
	0x03E7C108 CSET W0, EQ
	0x03E7C10C RET
	0x03E7C110 MOVZ W0, 0x1
	0x03E7C114 RET
	0x03E7C118 LDRB W8, [X0 + 0x19]
	0x03E7C11C CMP W8, 0x1
	0x03E7C120 CSET W0, EQ
	0x03E7C124 RET
	0x03E7C128 LDRB W8, [X0 + 0x28]
	0x03E7C12C CMP W8, 0x9
	0x03E7C130 CSET W0, EQ
	0x03E7C134 RET
	0x03E7C138 LDRB W8, [X0 + 0x28]
	0x03E7C13C CMP W8, 0xA
	0x03E7C140 CSET W0, EQ
	0x03E7C144 RET
	0x03E7C148 LDRB W8, [X0 + 0x28]
	0x03E7C14C CMP W8, 0x1
	0x03E7C150 CSET W0, EQ
	0x03E7C154 RET

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x56D000
	008 Move W8, [X23+3473]
	009 Move X20, X3
	010 Move X21, X2
	011 Move W22, W1
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {28}
	017 Move X0, 0x2F1000
	018 Move X0, [X0+2640]
	019 Call 0x1C17CF4
	020 Move X0, 0x2F1000
	021 Move X0, [X0+2648]
	022 Call 0x1C17CF4
	023 Move X0, 0x27E000
	024 Move X0, [X0+3264]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X23+3473], W8
	028 Move X23, 0x27E000
	029 Move X23, [X23+3264]
	030 Move X0, X19
	031 Move X1, X31
	032 Call Object..ctor, X0
	033 Call 0x1C17D44
	034 Move [X19+24], W22
	035 Call 0x1C17D44
	036 Move [X19+16], X21
	037 Compare X20, 0
	038 JumpIfNotEqual {50}
	039 Move X8, 0x2F1000
	040 Move X8, [X8+2640]
	041 Move X0, [X8]
	042 Call 0x1C17F10
	043 Move X8, 0x2F1000
	044 Move X8, [X8+2648]
	045 Move X1, X31
	046 Move X3, X31
	047 Move X20, X0
	048 Move X2, [X8]
	049 Call Action`2<Object, Object>..ctor, X0, X1, X2
	050 Move [X19+32], X20
	051 Move X0, [X23]
	052 Call 0x1C17F10
	053 Move X1, X31
	054 Move X20, X0
	055 Call Object..ctor, X0
	056 Move [X19+40], X20
	057 Move X20, [X31+32]
	058 Move X19, [X31+40]
	059 Move X22, [X31+16]
	060 Move X21, [X31+24]
	061 Move X30, [X31+48]
	062 Move X23, [X31+56]
	063 Return 

Method: System.String get_File()

Disassembly:
	0x03E7C164 CBZ X19, 0x3E7C1A0
	0x03E7C168 LDR X20, [X0 + 0x20]
	0x03E7C16C CBZ X20, 0x3E7C1A0
	0x03E7C170 LDR X0, [X0 + 0x30]
	0x03E7C174 CBZ X0, 0x3E7C1A0
	0x03E7C178 MOV X1, X31

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, [X0+16]
	004 Call 0x1C17D44
	005 Move X0, X19
	006 Move X30, [X31+16]
	007 Move X19, [X31+24]
	008 Return X0

Method: System.Void set_File(System.String value)

Disassembly:
	0x03E7C17C BL 0x3E7A73C
	0x03E7C180 LDR W8, [X19 + 0x18]
	0x03E7C184 LDR W9, [X20 + 0x18]
	0x03E7C188 LDP X20, X19, [X31 + 0x10]
	0x03E7C18C ADD W8, W9, W8
	0x03E7C190 ADD X8, X0, W8, SXTW
	0x03E7C194 ADD X0, X8, 0x2
	0x03E7C198 LDR X30, [X31], #0x20
	0x03E7C19C RET
	0x03E7C1A0 BL 0x1C16F20
	0x03E7C1A4 LDRB W0, [X0 + 0x19]
	0x03E7C1A8 RET
	0x03E7C1AC LDR X0, [X0 + 0x20]
	0x03E7C1B0 RET
	0x03E7C1B4 LDRB W0, [X0 + 0x28]
	0x03E7C1B8 RET
	0x03E7C1BC LDR X0, [X0 + 0x30]
	0x03E7C1C0 RET
	0x03E7C1C4 LDRB W0, [X0 + 0x38]
	0x03E7C1C8 RET
	0x03E7C1CC LDRB W0, [X0 + 0x39]
	0x03E7C1D0 RET
	0x03E7C1D4 LDRB W0, [X0 + 0x3A]
	0x03E7C1D8 RET
	0x03E7C1DC LDRB W0, [X0 + 0x3B]
	0x03E7C1E0 RET
	0x03E7C1E4 SUB X31, X31, 0x80
	0x03E7C1E8 STP X29, X30, [X31 + 0x20]
	0x03E7C1EC STP X28, X27, [X31 + 0x30]
	0x03E7C1F0 STP X26, X25, [X31 + 0x40]
	0x03E7C1F4 STP X24, X23, [X31 + 0x50]
	0x03E7C1F8 STP X22, X21, [X31 + 0x60]
	0x03E7C1FC STP X20, X19, [X31 + 0x70]
	0x03E7C200 ADRP X19, 0x56C000
	0x03E7C204 ADRP X20, 0x2F0000
	0x03E7C208 LDRB W8, [X19 + 0xD9C]
	0x03E7C20C LDR X20, [X20 + 0xA80]
	0x03E7C210 MOV X22, X0
	0x03E7C214 TBNZ X8, 0x0, 0x3E7C2E0
	0x03E7C218 ADRP X0, 0x280000
	0x03E7C21C LDR X0, [X0 + 0x9E8]
	0x03E7C220 BL 0x1C16CF4
	0x03E7C224 ADRP X0, 0x2F0000
	0x03E7C228 LDR X0, [X0 + 0xA88]
	0x03E7C22C BL 0x1C16CF4
	0x03E7C230 ADRP X0, 0x277000
	0x03E7C234 LDR X0, [X0 + 0x758]
	0x03E7C238 BL 0x1C16CF4
	0x03E7C23C ADRP X0, 0x277000
	0x03E7C240 LDR X0, [X0 + 0x8F0]
	0x03E7C244 BL 0x1C16CF4
	0x03E7C248 ADRP X0, 0x279000
	0x03E7C24C LDR X0, [X0 + 0x278]
	0x03E7C250 BL 0x1C16CF4
	0x03E7C254 ADRP X0, 0x2F0000
	0x03E7C258 LDR X0, [X0 + 0xA90]
	0x03E7C25C BL 0x1C16CF4
	0x03E7C260 ADRP X0, 0x2F0000
	0x03E7C264 LDR X0, [X0 + 0xA80]
	0x03E7C268 BL 0x1C16CF4
	0x03E7C26C ADRP X0, 0x2F0000
	0x03E7C270 LDR X0, [X0 + 0xA98]
	0x03E7C274 BL 0x1C16CF4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, 0x56D000
	006 Move W8, [X19+3474]
	007 Move X21, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x2F1000
	014 Move X0, [X0+2656]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X19+3474], W8
	018 Move X19, [X20+40]
	019 Move X1, X31
	020 Move X0, X19
	021 Call Monitor.Enter, X0
	022 Call 0x1C17D44
	023 Move [X20+16], X21
	024 Call 0x1C17D44
	025 Move X8, 0x2F1000
	026 Move X8, [X8+2656]
	027 Move X0, [X8]
	028 Move X1, X21
	029 Move X2, X31
	030 Call String.Format, X0, X1
	031 Move X1, X0
	032 Move X0, X20
	033 Call Logger.Warn, X0, X1
	034 Move X0, X19
	035 Move X20, [X31+16]
	036 Move X19, [X31+24]
	037 Move X1, X31
	038 Move X30, [X31+32]
	039 Move X21, [X31+40]
	040 Call Monitor.Exit, X0
	041 Return 
	042 Move X20, X0
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Move X0, X20
	045 Call 0x3EB2AD0
	046 Move X21, [X0]
	047 Call 0x3EB2AE0
	048 Move X0, X19
	049 Move X1, X31
	050 Call Monitor.Exit, X0
	051 Compare X21, 0
	052 JumpIfNotEqual {59}
	053 Move X20, [X31+16]
	054 Move X19, [X31+24]
	055 Move X30, [X31+32]
	056 Move X21, [X31+40]
	057 Return 
	058 Move X21, X31
	059 Move X0, X21
	060 Call 0x1C17F18
	061 Move X20, X0
	062 Move X0, X19
	063 Move X1, X31
	064 Call Monitor.Exit, X0
	065 Compare X21, 0
	066 JumpIfNotEqual {69}
	067 Move X0, X20
	068 Call 0x1D2D690
	069 Move X0, X21
	070 Call 0x1C17F18
	071 Call 0x1991590

Method: WebSocketSharp.LogLevel get_Level()

Disassembly:
	0x03E7C2BC BL 0x1C16CF4
	0x03E7C2C0 ADRP X0, 0x2F0000
	0x03E7C2C4 LDR X0, [X0 + 0xAD0]
	0x03E7C2C8 BL 0x1C16CF4
	0x03E7C2CC ADRP X0, 0x2F0000
	0x03E7C2D0 LDR X0, [X0 + 0xAD8]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move W19, [X0+24]
	004 Call 0x1C17D44
	005 Move W0, W19
	006 Move X30, [X31+16]
	007 Move X19, [X31+24]
	008 Return X0

Method: System.Void set_Level(WebSocketSharp.LogLevel value)

Disassembly:
	0x03E7C2D4 BL 0x1C16CF4
	0x03E7C2D8 MOVZ W8, 0x1
	0x03E7C2DC STRB W8, [X19 + 0xD9C]
	0x03E7C2E0 LDR X0, [X20]
	0x03E7C2E4 BL 0x1C16F10
	0x03E7C2E8 MOV X1, X31
	0x03E7C2EC MOV X27, X0
	0x03E7C2F0 BL 0x33BDD8C
	0x03E7C2F4 CBZ X22, 0x3E7C7D8
	0x03E7C2F8 ADRP X25, 0x277000
	0x03E7C2FC ADRP X24, 0x2F0000
	0x03E7C300 ADRP X20, 0x2F0000
	0x03E7C304 ADRP X19, 0x2F0000
	0x03E7C308 LDR X25, [X25 + 0x758]
	0x03E7C30C LDR X24, [X24 + 0xAA8]
	0x03E7C310 LDR X20, [X20 + 0xAC0]
	0x03E7C314 LDR X19, [X19 + 0xAB8]
	0x03E7C318 MOV X0, X22
	0x03E7C31C BL 0x3E7C158
	0x03E7C320 UBFM X8, X0, 0x6, 0x3F
	0x03E7C324 MOV X23, X0
	0x03E7C328 CMP X8, 0x271
	0x03E7C32C B.CS 0x3E7C33C
	0x03E7C330 ADRP X9, 0x2F0000
	0x03E7C334 LDR X9, [X9 + 0xAA0]
	0x03E7C338 B 0x3E7C34C
	0x03E7C33C CMP X23, 0x40000
	0x03E7C340 B.CS 0x3E7C354
	0x03E7C344 ADRP X9, 0x2F0000
	0x03E7C348 LDR X9, [X9 + 0xAC8]
	0x03E7C34C MOVZ W8, 0x4
	0x03E7C350 B 0x3E7C37C
	0x03E7C354 ADRP X8, 0x2F0000
	0x03E7C358 ADRP X9, 0x2F0000
	0x03E7C35C LDR X8, [X8 + 0xAD8]
	0x03E7C360 LDR X9, [X9 + 0xAD0]
	0x03E7C364 UBFM X10, X23, 0x22, 0x3F
	0x03E7C368 MOVZ W11, 0x10
	0x03E7C36C MOVZ W12, 0x8
	0x03E7C370 CMP X10, 0x0
	0x03E7C374 CSEL X9, X9, X8, EQ
	0x03E7C378 CSEL W8, W12, W11, EQ
	0x03E7C37C LDR X0, [X25]
	0x03E7C380 LDR X21, [X9]
	0x03E7C384 ADD X1, X31, 0x1C
	0x03E7C388 STR W8, [X31 + 0x1C]
	0x03E7C38C BL 0x1C16E04
	0x03E7C390 LDR X8, [X24]
	0x03E7C394 MOV X1, X0
	0x03E7C398 MOV X2, X31
	0x03E7C39C MOV X0, X8
	0x03E7C3A0 BL 0x321EFD0
	0x03E7C3A4 LDR X8, [X20]
	0x03E7C3A8 MOV X20, X0
	0x03E7C3AC MOV X1, X20
	0x03E7C3B0 MOV X2, X31
	0x03E7C3B4 MOV X0, X8
	0x03E7C3B8 BL 0x321EFD0
	0x03E7C3BC LDR X8, [X19]
	0x03E7C3C0 MOV X24, X0
	0x03E7C3C4 MOV X1, X21
	0x03E7C3C8 MOV X2, X31
	0x03E7C3CC MOV X0, X8
	0x03E7C3D0 BL 0x321EFD0
	0x03E7C3D4 CBZ X27, 0x3E7C7D8
	0x03E7C3D8 ADRP X8, 0x2F0000
	0x03E7C3DC LDR X8, [X8 + 0xAB0]
	0x03E7C3E0 STR X0, [X27 + 0x18]
	0x03E7C3E4 ADRP X19, 0x277000
	0x03E7C3E8 ADRP X25, 0x2F0000
	0x03E7C3EC LDR X0, [X8]
	0x03E7C3F0 ADRP X26, 0x2F0000
	0x03E7C3F4 LDR X19, [X19 + 0x8F0]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, 0x56D000
	007 Move W8, [X19+3475]
	008 Move W21, W1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x2F1000
	015 Move X0, [X0+2600]
	016 Call 0x1C17CF4
	017 Move X0, 0x2F1000
	018 Move X0, [X0+2664]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X19+3475], W8
	022 Move X19, [X20+40]
	023 Move X1, X31
	024 Move X0, X19
	025 Call Monitor.Enter, X0
	026 Call 0x1C17D44
	027 Move [X20+24], W21
	028 Call 0x1C17D44
	029 Move X8, 0x2F1000
	030 Move X8, [X8+2600]
	031 Move [X31+12], W21
	032 Move X0, [X8]
	033 Add X1, X31, 12
	034 Call 0x1C17E04
	035 Move X1, X0
	036 Move X8, 0x2F1000
	037 Move X8, [X8+2664]
	038 Move X0, [X8]
	039 Move X2, X31
	040 Call String.Format, X0, X1
	041 Move X1, X0
	042 Move X0, X20
	043 Call Logger.Warn, X0, X1
	044 Move X0, X19
	045 Move X1, X31
	046 Call Monitor.Exit, X0
	047 Move X20, [X31+32]
	048 Move X19, [X31+40]
	049 Move X30, [X31+16]
	050 Move X21, [X31+24]
	051 Add X31, X31, 48
	052 Return 
	053 Move X20, X0
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Move X0, X20
	056 Call 0x3EB2AD0
	057 Move X21, [X0]
	058 Call 0x3EB2AE0
	059 Move X0, X19
	060 Move X1, X31
	061 Call Monitor.Exit, X0
	062 Compare X21, 0
	063 JumpIfEqual {47}
	064 Move X0, X21
	065 Call 0x1C17F18
	066 Move X21, X31
	067 Move X20, X0
	068 Move X0, X19
	069 Move X1, X31
	070 Call Monitor.Exit, X0
	071 Compare X21, 0
	072 JumpIfNotEqual {75}
	073 Move X0, X20
	074 Call 0x1D2D690
	075 Move X0, X21
	076 Call 0x1C17F18
	077 Call 0x1991590

Method: System.Action`2<WebSocketSharp.LogData, System.String> get_Output()

Disassembly:
	0x03E7C3F8 LDR X25, [X25 + 0xA88]
	0x03E7C3FC LDR X26, [X26 + 0xA90]

ISIL:
	001 Move X0, [X0+32]
	002 Return X0

Method: System.Void set_Output(System.Action`2<WebSocketSharp.LogData, System.String> value)

Disassembly:
	0x03E7C400 MOV X1, X20
	0x03E7C404 MOV X2, X31
	0x03E7C408 BL 0x321EFD0
	0x03E7C40C LDR X8, [X19]
	0x03E7C410 MOV X19, X0
	0x03E7C414 MOV X0, X8
	0x03E7C418 BL 0x1C16F10
	0x03E7C41C MOVZ W1, 0x40
	0x03E7C420 MOV X2, X31
	0x03E7C424 MOV X21, X0
	0x03E7C428 BL 0x3231B28
	0x03E7C42C STR X21, [X27 + 0x10]
	0x03E7C430 LDR X0, [X25]
	0x03E7C434 BL 0x1C16F10
	0x03E7C438 LDR X2, [X26]
	0x03E7C43C MOV X1, X27
	0x03E7C440 MOV X3, X31
	0x03E7C444 MOV X21, X0
	0x03E7C448 BL 0x2D27AA8
	0x03E7C44C CBZ X21, 0x3E7C7D8
	0x03E7C450 LDR X8, [X21 + 0x18]
	0x03E7C454 LDR X0, [X21 + 0x40]
	0x03E7C458 LDR X1, [X21 + 0x28]
	0x03E7C45C STR X19, [X31 + 0x8]
	0x03E7C460 BLR X8
	0x03E7C464 MOV X21, X0
	0x03E7C468 MOV X0, X22
	0x03E7C46C BL 0x3E7C7E8
	0x03E7C470 LDR X8, [X27 + 0x10]
	0x03E7C474 STR X27, [X31 + 0x10]
	0x03E7C478 CBZ X8, 0x3E7C7D8
	0x03E7C47C ADRP X9, 0x279000
	0x03E7C480 LDR X9, [X9 + 0x278]
	0x03E7C484 MOV X22, X0
	0x03E7C488 MOV X0, X8
	0x03E7C48C MOV X1, X24
	0x03E7C490 LDR X9, [X9]
	0x03E7C494 MOV X3, X31
	0x03E7C498 AND W27, W23, 0x3
	0x03E7C49C UBFM X29, X23, 0x2, 0x3F
	0x03E7C4A0 LDR X9, [X9 + 0xB8]
	0x03E7C4A4 LDR X2, [X9]
	0x03E7C4A8 BL 0x3234224
	0x03E7C4AC MOV X20, X31
	0x03E7C4B0 MOV X19, X31
	0x03E7C4B4 ADD X26, X29, 0x1
	0x03E7C4B8 ADD X28, X22, 0x20
	0x03E7C4BC CMP X19, X29
	0x03E7C4C0 B.CS 0x3E7C5F0
	0x03E7C4C4 CBZ X22, 0x3E7C7D8
	0x03E7C4C8 LDR W8, [X22 + 0x18]
	0x03E7C4CC CMP W20, W8
	0x03E7C4D0 B.CS 0x3E7C7DC
	0x03E7C4D4 ADRP X8, 0x280000
	0x03E7C4D8 LDR X8, [X8 + 0x9E8]
	0x03E7C4DC LDRB W23, [X28, X20, LSL]
	0x03E7C4E0 LDR X0, [X8]
	0x03E7C4E4 LDR W8, [X0 + 0xE0]
	0x03E7C4E8 CBNZ W8, 0x3E7C4F0
	0x03E7C4EC BL 0x1C16DFC
	0x03E7C4F0 MOVZ W1, 0x2
	0x03E7C4F4 MOV W0, W23
	0x03E7C4F8 MOV X2, X31
	0x03E7C4FC BL 0x332241C
	0x03E7C500 CBZ X0, 0x3E7C7D8
	0x03E7C504 MOVZ W1, 0x8
	0x03E7C508 MOVZ W2, 0x30
	0x03E7C50C MOV X3, X31
	0x03E7C510 BL 0x3228948
	0x03E7C514 LDR W8, [X22 + 0x18]
	0x03E7C518 ADD W9, W20, 0x1
	0x03E7C51C CMP W9, W8
	0x03E7C520 B.CS 0x3E7C7DC
	0x03E7C524 ADD X8, X28, X20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, 0x56D000
	006 Move W8, [X19+3476]
	007 Move X21, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {24}
	013 Move X0, 0x2F1000
	014 Move X0, [X0+2640]
	015 Call 0x1C17CF4
	016 Move X0, 0x2F1000
	017 Move X0, [X0+2648]
	018 Call 0x1C17CF4
	019 Move X0, 0x2F1000
	020 Move X0, [X0+2672]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X19+3476], W8
	024 Move X19, [X20+40]
	025 Move X1, X31
	026 Move X0, X19
	027 Call Monitor.Enter, X0
	028 Compare X21, 0
	029 JumpIfNotEqual {41}
	030 Move X8, 0x2F1000
	031 Move X8, [X8+2640]
	032 Move X0, [X8]
	033 Call 0x1C17F10
	034 Move X8, 0x2F1000
	035 Move X8, [X8+2648]
	036 Move X21, X0
	037 Move X2, [X8]
	038 Move X1, X31
	039 Move X3, X31
	040 Call Action`2<Object, Object>..ctor, X0, X1, X2
	041 Move X8, 0x2F1000
	042 Move X8, [X8+2672]
	043 Move [X20+32], X21
	044 Move X1, [X8]
	045 Move X0, X20
	046 Call Logger.Warn, X0, X1
	047 Move X0, X19
	048 Move X20, [X31+16]
	049 Move X19, [X31+24]
	050 Move X1, X31
	051 Move X30, [X31+32]
	052 Move X21, [X31+40]
	053 Call Monitor.Exit, X0
	054 Return 
	055 Move X21, X0
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Move X0, X21
	058 Call 0x3EB2AD0
	059 Move X20, [X0]
	060 Call 0x3EB2AE0
	061 Move X0, X19
	062 Move X1, X31
	063 Call Monitor.Exit, X0
	064 Compare X20, 0
	065 JumpIfNotEqual {72}
	066 Move X20, [X31+16]
	067 Move X19, [X31+24]
	068 Move X30, [X31+32]
	069 Move X21, [X31+40]
	070 Return 
	071 Move X20, X31
	072 Move X0, X20
	073 Call 0x1C17F18
	074 Move X21, X0
	075 Move X0, X19
	076 Move X1, X31
	077 Call Monitor.Exit, X0
	078 Compare X20, 0
	079 JumpIfNotEqual {82}
	080 Move X0, X21
	081 Call 0x1D2D690
	082 Move X0, X20
	083 Call 0x1C17F18
	084 Call 0x1991590

Method: System.Void defaultOutput(WebSocketSharp.LogData data, System.String path)

Disassembly:
	0x03E7C528 MOV X23, X0
	0x03E7C52C LDRB W0, [X8 + 0x1]
	0x03E7C530 MOVZ W1, 0x2
	0x03E7C534 MOV X2, X31
	0x03E7C538 BL 0x332241C
	0x03E7C53C CBZ X0, 0x3E7C7D8
	0x03E7C540 MOVZ W1, 0x8
	0x03E7C544 MOVZ W2, 0x30
	0x03E7C548 MOV X3, X31
	0x03E7C54C BL 0x3228948
	0x03E7C550 LDR W8, [X22 + 0x18]
	0x03E7C554 ADD W9, W20, 0x2
	0x03E7C558 CMP W9, W8
	0x03E7C55C B.CS 0x3E7C7DC
	0x03E7C560 ADD X8, X28, X20
	0x03E7C564 MOV X24, X0
	0x03E7C568 LDRB W0, [X8 + 0x2]
	0x03E7C56C MOVZ W1, 0x2
	0x03E7C570 MOV X2, X31
	0x03E7C574 BL 0x332241C
	0x03E7C578 CBZ X0, 0x3E7C7D8
	0x03E7C57C MOVZ W1, 0x8
	0x03E7C580 MOVZ W2, 0x30
	0x03E7C584 MOV X3, X31
	0x03E7C588 BL 0x3228948
	0x03E7C58C LDR W8, [X22 + 0x18]
	0x03E7C590 ADD W9, W20, 0x3
	0x03E7C594 CMP W9, W8
	0x03E7C598 B.CS 0x3E7C7DC
	0x03E7C59C ADD X8, X28, X20
	0x03E7C5A0 MOV X25, X0
	0x03E7C5A4 LDRB W0, [X8 + 0x3]
	0x03E7C5A8 MOVZ W1, 0x2
	0x03E7C5AC MOV X2, X31
	0x03E7C5B0 BL 0x332241C
	0x03E7C5B4 CBZ X0, 0x3E7C7D8
	0x03E7C5B8 MOVZ W1, 0x8
	0x03E7C5BC MOVZ W2, 0x30
	0x03E7C5C0 MOV X3, X31
	0x03E7C5C4 BL 0x3228948
	0x03E7C5C8 CBZ X21, 0x3E7C7D8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x56D000
	006 Move W8, [X21+3477]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x280000
	014 Move X0, [X0+2392]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+3477], W8
	018 Compare X20, 0
	019 JumpIfEqual {52}
	020 Move X8, [X20]
	021 Move X21, 0x280000
	022 Move X0, X20
	023 Move X9, [X8+360]
	024 Move X1, [X8+368]
	025 Move X21, [X21+2392]
	026 NotImplemented "Instruction BLR not yet implemented."
	027 Move X8, [X21]
	028 Move X20, X0
	029 Move W9, [X8+224]
	030 Compare W9, 0
	031 JumpIfNotEqual {34}
	032 Move X0, X8
	033 Call 0x1C17DFC
	034 Move X0, X20
	035 Move X1, X31
	036 Call Console.WriteLine, X0
	037 Compare X19, 0
	038 JumpIfEqual {47}
	039 Move W8, [X19+16]
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Move X0, X20
	042 Move X1, X19
	043 Move X20, [X31+16]
	044 Move X19, [X31+24]
	045 Move X30, [X31+32]
	046 Move X21, [X31+40]
	047 Move X20, [X31+16]
	048 Move X19, [X31+24]
	049 Move X30, [X31+32]
	050 Move X21, [X31+40]
	051 Return 
	052 Call 0x1C17F20

Method: System.Void output(System.String message, WebSocketSharp.LogLevel level)

Disassembly:
	0x03E7C8D4 MOV W2, W31
	0x03E7C8D8 BLR X9
	0x03E7C8DC LDRB W8, [X20 + 0x38]
	0x03E7C8E0 CMP W8, 0x7D
	0x03E7C8E4 B.LS 0x3E7C914
	0x03E7C8E8 LDR X9, [X19]
	0x03E7C8EC LDR X1, [X20 + 0x10]
	0x03E7C8F0 CMP W8, 0x7E
	0x03E7C8F4 MOVZ W10, 0x2
	0x03E7C8F8 LDR X8, [X9 + 0x388]
	0x03E7C8FC LDR X4, [X9 + 0x390]
	0x03E7C900 MOVZ W9, 0x8
	0x03E7C904 CSEL W3, W10, W9, EQ
	0x03E7C908 MOV X0, X19
	0x03E7C90C MOV W2, W31
	0x03E7C910 BLR X8
	0x03E7C914 LDRB W8, [X20 + 0x19]
	0x03E7C918 CMP W8, 0x1
	0x03E7C91C B.NE 0x3E7C940
	0x03E7C920 LDR X8, [X19]
	0x03E7C924 LDR X1, [X20 + 0x20]
	0x03E7C928 LDR X9, [X8 + 0x388]
	0x03E7C92C LDR X4, [X8 + 0x390]
	0x03E7C930 MOVZ W3, 0x4
	0x03E7C934 MOV X0, X19
	0x03E7C938 MOV W2, W31
	0x03E7C93C BLR X9
	0x03E7C940 LDRB W8, [X20 + 0x38]
	0x03E7C944 CBZ W8, 0x3E7C9B4
	0x03E7C948 LDR X0, [X20 + 0x30]
	0x03E7C94C CBZ X0, 0x3E7CA6C
	0x03E7C950 MOV X1, X31
	0x03E7C954 BL 0x3E7A850
	0x03E7C958 LDRB W8, [X20 + 0x38]
	0x03E7C95C MOV X21, X0
	0x03E7C960 CMP W8, 0x7F
	0x03E7C964 B.CS 0x3E7C990
	0x03E7C968 CBZ X21, 0x3E7CA70
	0x03E7C96C LDR X8, [X19]
	0x03E7C970 LDR W3, [X21 + 0x18]
	0x03E7C974 LDR X9, [X8 + 0x388]
	0x03E7C978 LDR X4, [X8 + 0x390]
	0x03E7C97C MOV X0, X19
	0x03E7C980 MOV X1, X21
	0x03E7C984 MOV W2, W31
	0x03E7C988 BLR X9
	0x03E7C98C B 0x3E7C9B4
	0x03E7C990 LDR X0, [X23]
	0x03E7C994 LDR W8, [X0 + 0xE0]
	0x03E7C998 CBNZ W8, 0x3E7C9A0
	0x03E7C99C BL 0x1C16DFC
	0x03E7C9A0 MOVZ W2, 0x400
	0x03E7C9A4 MOV X0, X19
	0x03E7C9A8 MOV X1, X21
	0x03E7C9AC MOV X3, X31
	0x03E7C9B0 BL 0x3E6B638
	0x03E7C9B4 LDR X8, [X19]
	0x03E7C9B8 LDR X1, [X8 + 0x280]
	0x03E7C9BC LDR X9, [X8 + 0x278]
	0x03E7C9C0 MOV X0, X19
	0x03E7C9C4 BLR X9
	0x03E7C9C8 LDR X8, [X19]
	0x03E7C9CC LDR X1, [X8 + 0x400]
	0x03E7C9D0 LDR X9, [X8 + 0x3F8]
	0x03E7C9D4 MOV X0, X19
	0x03E7C9D8 BLR X9
	0x03E7C9DC MOV X21, X0
	0x03E7C9E0 MOV X20, X31
	0x03E7C9E4 LDR X8, [X19]
	0x03E7C9E8 LDR X1, [X22]
	0x03E7C9EC LDRH W9, [X8 + 0x12E]
	0x03E7C9F0 CBZ X9, 0x3E7CA14
	0x03E7C9F4 LDR X10, [X8 + 0xB0]
	0x03E7C9F8 ADD X10, X10, 0x8
	0x03E7C9FC LDUR X11, [X10 - 0x8]
	0x03E7CA00 CMP X11, X1
	0x03E7CA04 B.EQ 0x3E7CA24
	0x03E7CA08 SUBS X9, X9, 0x1
	0x03E7CA0C ADD X10, X10, 0x10
	0x03E7CA10 B.NE 0x3E7C9FC
	0x03E7CA14 MOV X0, X19
	0x03E7CA18 MOV W2, W31
	0x03E7CA1C BL 0x1C5C788
	0x03E7CA20 B 0x3E7CA30
	0x03E7CA24 LDRSW X9, [X10]
	0x03E7CA28 ADD X8, X8, X9, 0x4, LSL
	0x03E7CA2C ADD X0, X8, 0x138
	0x03E7CA30 LDP X8, X1, [X0]
	0x03E7CA34 MOV X0, X19
	0x03E7CA38 BLR X8
	0x03E7CA3C CBNZ X20, 0x3E7CA60
	0x03E7CA40 MOV X0, X21
	0x03E7CA44 LDP X20, X19, [X31 + 0x50]
	0x03E7CA48 LDP X22, X21, [X31 + 0x40]
	0x03E7CA4C LDP X24, X23, [X31 + 0x30]
	0x03E7CA50 LDP X26, X25, [X31 + 0x20]
	0x03E7CA54 LDP X28, X27, [X31 + 0x10]
	0x03E7CA58 LDP X29, X30, [X31], #0x60
	0x03E7CA5C RET
	0x03E7CA60 MOV X0, X20
	0x03E7CA64 BL 0x1C16F18
	0x03E7CA68 BL 0x1C16F20
	0x03E7CA6C BL 0x1C16F20
	0x03E7CA70 BL 0x1C16F20
	0x03E7CA74 B 0x3E7CA9C
	0x03E7CA78 B 0x3E7CA9C
	0x03E7CA7C B 0x3E7CA9C
	0x03E7CA80 B 0x3E7CA9C
	0x03E7CA84 B 0x3E7CA9C
	0x03E7CA88 B 0x3E7CA9C
	0x03E7CA8C B 0x3E7CA9C
	0x03E7CA90 B 0x3E7CA9C
	0x03E7CA94 B 0x3E7CA9C
	0x03E7CA98 B 0x3E7CA9C
	0x03E7CA9C MOV X21, X0
	0x03E7CAA0 CMP W1, 0x1
	0x03E7CAA4 B.NE 0x3E7CAC4
	0x03E7CAA8 MOV X0, X21
	0x03E7CAAC BL 0x3EB1AD0
	0x03E7CAB0 LDR X20, [X0]
	0x03E7CAB4 BL 0x3EB1AE0
	0x03E7CAB8 MOV X21, X31
	0x03E7CABC CBNZ X19, 0x3E7C9E4
	0x03E7CAC0 B 0x3E7CA3C
	0x03E7CAC4 MOV X20, X31
	0x03E7CAC8 B 0x3E7CAD0
	0x03E7CACC MOV X21, X0
	0x03E7CAD0 CBZ X19, 0x3E7CB2C
	0x03E7CAD4 LDR X8, [X19]
	0x03E7CAD8 LDR X1, [X22]
	0x03E7CADC LDRH W9, [X8 + 0x12E]
	0x03E7CAE0 CBZ X9, 0x3E7CB04
	0x03E7CAE4 LDR X10, [X8 + 0xB0]
	0x03E7CAE8 ADD X10, X10, 0x8
	0x03E7CAEC LDUR X11, [X10 - 0x8]
	0x03E7CAF0 CMP X11, X1
	0x03E7CAF4 B.EQ 0x3E7CB14
	0x03E7CAF8 SUBS X9, X9, 0x1
	0x03E7CAFC ADD X10, X10, 0x10
	0x03E7CB00 B.NE 0x3E7CAEC
	0x03E7CB04 MOV X0, X19
	0x03E7CB08 MOV W2, W31
	0x03E7CB0C BL 0x1C5C788
	0x03E7CB10 B 0x3E7CB20
	0x03E7CB14 LDRSW X9, [X10]
	0x03E7CB18 ADD X8, X8, X9, 0x4, LSL
	0x03E7CB1C ADD X0, X8, 0x138
	0x03E7CB20 LDP X8, X1, [X0]
	0x03E7CB24 MOV X0, X19
	0x03E7CB28 BLR X8
	0x03E7CB2C CBNZ X20, 0x3E7CB38
	0x03E7CB30 MOV X0, X21
	0x03E7CB34 BL 0x1D2C690
	0x03E7CB38 MOV X0, X20
	0x03E7CB3C BL 0x1C16F18
	0x03E7CB40 BL 0x1990590
	0x03E7CB44 SUB X31, X31, 0x80
	0x03E7CB48 STP X30, X27, [X31 + 0x30]
	0x03E7CB4C STP X26, X25, [X31 + 0x40]
	0x03E7CB50 STP X24, X23, [X31 + 0x50]
	0x03E7CB54 STP X22, X21, [X31 + 0x60]
	0x03E7CB58 STP X20, X19, [X31 + 0x70]
	0x03E7CB5C ADRP X19, 0x56C000
	0x03E7CB60 LDRB W8, [X19 + 0xD9D]
	0x03E7CB64 MOV X21, X0
	0x03E7CB68 TBNZ X8, 0x0, 0x3E7CBE0
	0x03E7CB6C ADRP X0, 0x278000
	0x03E7CB70 LDR X0, [X0 + 0x9D8]
	0x03E7CB74 BL 0x1C16CF4
	0x03E7CB78 ADRP X0, 0x2F0000
	0x03E7CB7C LDR X0, [X0 + 0xAE0]
	0x03E7CB80 BL 0x1C16CF4
	0x03E7CB84 ADRP X0, 0x2F0000
	0x03E7CB88 LDR X0, [X0 + 0xAE8]
	0x03E7CB8C BL 0x1C16CF4

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X19, 0x56D000
	009 Move W8, [X19+3478]
	010 Move W22, W2
	011 Move X21, X1
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x2F1000
	018 Move X0, [X0+2680]
	019 Call 0x1C17CF4
	020 Move X0, 0x2AF000
	021 Move X0, [X0+392]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X19+3478], W8
	025 Move X19, [X20+40]
	026 Move X1, X31
	027 Move X0, X19
	028 Call Monitor.Enter, X0
	029 Move W23, [X20+24]
	030 Call 0x1C17D44
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Move X8, 0x2AF000
	033 Move X8, [X8+392]
	034 Move X0, [X8]
	035 Call 0x1C17F10
	036 Move X24, X0
	037 Move W1, 2
	038 Move W2, 1
	039 Move X3, X31
	040 Call StackFrame..ctor, X0, X1, X2
	041 Move X8, 0x2F1000
	042 Move X8, [X8+2680]
	043 Move X0, [X8]
	044 Call 0x1C17F10
	045 Move X23, X0
	046 Move W1, W22
	047 Move X2, X24
	048 Move X3, X21
	049 Call LogData..ctor, X0, X1, X2, X3
	050 Move X21, [X20+32]
	051 Move X20, [X20+16]
	052 Call 0x1C17D44
	053 Compare X21, 0
	054 JumpIfEqual {72}
	055 Move X0, [X21+64]
	056 Move X8, [X21+24]
	057 Move X3, [X21+40]
	058 Move X1, X23
	059 Move X2, X20
	060 NotImplemented "Instruction BLR not yet implemented."
	061 Move X0, X19
	062 Move X20, [X31+48]
	063 Move X19, [X31+56]
	064 Move X22, [X31+32]
	065 Move X21, [X31+40]
	066 Move X24, [X31+16]
	067 Move X23, [X31+24]
	068 Move X1, X31
	069 Move X30, [X31+64]
	070 Call Monitor.Exit, X0
	071 Return 
	072 Call 0x1C17F20
	073 Move X20, X0
	074 Move W23, 1
	075 Move X20, X0
	076 NotImplemented "Instruction CMP not yet implemented."
	077 Move W23, 1
	078 Move X0, X20
	079 Call 0x3EB2AD0
	080 Move X20, X0
	081 Move X0, 0x278000
	082 Move X0, [X0+2000]
	083 Call 0x1C17D08
	084 Move X8, [X20]
	085 Move X1, [X8]
	086 Call 0x1C18270
	087 Move TEMP, X0
	088 And TEMP, TEMP, 1
	089 Compare TEMP, 1
	090 JumpIfNotEqual {137}
	091 Move X21, [X20]
	092 Call 0x3EB2AE0
	093 Move X0, 0x2AF000
	094 Move X0, [X0+392]
	095 Call 0x1C17D08
	096 Call 0x1C17F10
	097 Move X20, X0
	098 Move W2, 1
	099 Move W1, W31
	100 Move X3, X31
	101 Call StackFrame..ctor, X0, X1, X2
	102 Compare X21, 0
	103 JumpIfEqual {145}
	104 Move X8, [X21]
	105 Move X9, [X8+392]
	106 Move X1, [X8+400]
	107 Move X0, X21
	108 NotImplemented "Instruction BLR not yet implemented."
	109 Move X21, X0
	110 Move X0, 0x2F1000
	111 Move X0, [X0+2680]
	112 Call 0x1C17D08
	113 Call 0x1C17F10
	114 Move X22, X0
	115 Move W1, 5
	116 Move X2, X20
	117 Move X3, X21
	118 Call LogData..ctor, X0, X1, X2, X3
	119 Compare X22, 0
	120 JumpIfEqual {146}
	121 Move X8, [X22]
	122 Move X9, [X8+360]
	123 Move X1, [X8+368]
	124 Move X0, X22
	125 NotImplemented "Instruction BLR not yet implemented."
	126 Move X20, X0
	127 Move X0, 0x280000
	128 Move X0, [X0+2392]
	129 Call 0x1C17D08
	130 Move W8, [X0+224]
	131 Compare W8, 0
	132 JumpIfNotEqual {134}
	133 Call 0x1C17DFC
	134 Move X0, X20
	135 Move X1, X31
	136 Call Console.WriteLine, X0
	137 Move W0, 8
	138 Call 0x3EB2AF0
	139 Move X8, [X20]
	140 Move [X0], X8
	141 Move X1, 0x39000
	142 Add X1, X1, 3672
	143 Move X2, X31
	144 Call 0x3EB2B00
	145 Call 0x1C17F20
	146 Call 0x1C17F20
	147 Move X20, X0
	148 Move X21, X1
	149 Move X20, X0
	150 Call 0x3EB2AE0
	151 Move W1, W21
	152 Move X20, X0
	153 NotImplemented "Instruction CMP not yet implemented."
	154 Move X0, X20
	155 Call 0x3EB2AD0
	156 Move X21, [X0]
	157 Call 0x3EB2AE0
	158 Move X0, X19
	159 Move X1, X31
	160 Call Monitor.Exit, X0
	161 Compare X21, 0
	162 JumpIfNotEqual {172}
	163 Move X20, [X31+48]
	164 Move X19, [X31+56]
	165 Move X22, [X31+32]
	166 Move X21, [X31+40]
	167 Move X24, [X31+16]
	168 Move X23, [X31+24]
	169 Move X30, [X31+64]
	170 Return 
	171 Move X21, X31
	172 Move X0, X21
	173 Call 0x1C17F18
	174 Move X20, X0
	175 Move X0, X19
	176 Move X1, X31
	177 Call Monitor.Exit, X0
	178 Compare X21, 0
	179 JumpIfNotEqual {182}
	180 Move X0, X20
	181 Call 0x1D2D690
	182 Move X0, X21
	183 Call 0x1C17F18
	184 Call 0x1991590

Method: System.Void writeToFile(System.String value, System.String path)

Disassembly:
	0x03E7C5CC MOV X4, X0
	0x03E7C5D0 LDR X8, [X21 + 0x18]
	0x03E7C5D4 LDR X0, [X21 + 0x40]
	0x03E7C5D8 LDR X5, [X21 + 0x28]
	0x03E7C5DC MOV X1, X23
	0x03E7C5E0 MOV X2, X24
	0x03E7C5E4 MOV X3, X25
	0x03E7C5E8 BLR X8
	0x03E7C5EC B 0x3E7C768
	0x03E7C5F0 CBZ W27, 0x3E7C768
	0x03E7C5F4 CBZ X22, 0x3E7C7D8
	0x03E7C5F8 LDR W8, [X22 + 0x18]
	0x03E7C5FC CMP W20, W8
	0x03E7C600 B.CS 0x3E7C7DC
	0x03E7C604 ADRP X8, 0x280000
	0x03E7C608 LDR X8, [X8 + 0x9E8]
	0x03E7C60C LDRB W23, [X28, X20, LSL]
	0x03E7C610 LDR X0, [X8]
	0x03E7C614 LDR W8, [X0 + 0xE0]
	0x03E7C618 CBNZ W8, 0x3E7C620
	0x03E7C61C BL 0x1C16DFC
	0x03E7C620 MOVZ W1, 0x2
	0x03E7C624 MOV W0, W23
	0x03E7C628 MOV X2, X31
	0x03E7C62C BL 0x332241C
	0x03E7C630 CBZ X0, 0x3E7C7D8
	0x03E7C634 MOVZ W1, 0x8
	0x03E7C638 MOVZ W2, 0x30
	0x03E7C63C MOV X3, X31
	0x03E7C640 BL 0x3228948
	0x03E7C644 CMP W27, 0x1
	0x03E7C648 MOV X23, X0
	0x03E7C64C B.LS 0x3E7C6AC
	0x03E7C650 LDR W8, [X22 + 0x18]
	0x03E7C654 ADD W9, W20, 0x1
	0x03E7C658 CMP W9, W8
	0x03E7C65C B.CS 0x3E7C7DC
	0x03E7C660 ADRP X8, 0x280000
	0x03E7C664 LDR X8, [X8 + 0x9E8]
	0x03E7C668 LDR X0, [X8]
	0x03E7C66C ADD X8, X28, X20
	0x03E7C670 LDRB W24, [X8 + 0x1]
	0x03E7C674 LDR W9, [X0 + 0xE0]
	0x03E7C678 CBNZ W9, 0x3E7C680
	0x03E7C67C BL 0x1C16DFC
	0x03E7C680 MOVZ W1, 0x2
	0x03E7C684 MOV W0, W24
	0x03E7C688 MOV X2, X31
	0x03E7C68C BL 0x332241C
	0x03E7C690 CBZ X0, 0x3E7C7D8
	0x03E7C694 MOVZ W1, 0x8
	0x03E7C698 MOVZ W2, 0x30
	0x03E7C69C MOV X3, X31
	0x03E7C6A0 BL 0x3228948
	0x03E7C6A4 MOV X24, X0
	0x03E7C6A8 B 0x3E7C6C0
	0x03E7C6AC ADRP X8, 0x279000
	0x03E7C6B0 LDR X8, [X8 + 0x278]
	0x03E7C6B4 LDR X8, [X8]
	0x03E7C6B8 LDR X8, [X8 + 0xB8]
	0x03E7C6BC LDR X24, [X8]
	0x03E7C6C0 CMP W27, 0x3
	0x03E7C6C4 B.NE 0x3E7C724
	0x03E7C6C8 LDR W8, [X22 + 0x18]
	0x03E7C6CC ADD W9, W20, 0x2
	0x03E7C6D0 CMP W9, W8
	0x03E7C6D4 B.CS 0x3E7C7DC
	0x03E7C6D8 ADRP X8, 0x280000
	0x03E7C6DC LDR X8, [X8 + 0x9E8]
	0x03E7C6E0 LDR X0, [X8]
	0x03E7C6E4 ADD X8, X28, X20
	0x03E7C6E8 LDRB W25, [X8 + 0x2]
	0x03E7C6EC LDR W9, [X0 + 0xE0]
	0x03E7C6F0 CBNZ W9, 0x3E7C6F8
	0x03E7C6F4 BL 0x1C16DFC
	0x03E7C6F8 MOVZ W1, 0x2
	0x03E7C6FC MOV W0, W25
	0x03E7C700 MOV X2, X31
	0x03E7C704 BL 0x332241C
	0x03E7C708 CBZ X0, 0x3E7C7D8
	0x03E7C70C MOVZ W1, 0x8
	0x03E7C710 MOVZ W2, 0x30
	0x03E7C714 MOV X3, X31
	0x03E7C718 BL 0x3228948
	0x03E7C71C MOV X3, X0
	0x03E7C720 B 0x3E7C738
	0x03E7C724 ADRP X8, 0x279000
	0x03E7C728 LDR X8, [X8 + 0x278]
	0x03E7C72C LDR X8, [X8]
	0x03E7C730 LDR X8, [X8 + 0xB8]
	0x03E7C734 LDR X3, [X8]
	0x03E7C738 CBZ X21, 0x3E7C7D8
	0x03E7C73C ADRP X8, 0x279000
	0x03E7C740 LDR X8, [X8 + 0x278]
	0x03E7C744 LDR X9, [X21 + 0x18]
	0x03E7C748 LDR X0, [X21 + 0x40]
	0x03E7C74C LDR X5, [X21 + 0x28]
	0x03E7C750 LDR X8, [X8]
	0x03E7C754 MOV X1, X23
	0x03E7C758 MOV X2, X24
	0x03E7C75C LDR X8, [X8 + 0xB8]
	0x03E7C760 LDR X4, [X8]
	0x03E7C764 BLR X9
	0x03E7C768 ADD X19, X19, 0x1
	0x03E7C76C CMP X26, X19
	0x03E7C770 ADD X20, X20, 0x4
	0x03E7C774 B.NE 0x3E7C4BC
	0x03E7C778 LDR X19, [X31 + 0x10]
	0x03E7C77C LDR X0, [X19 + 0x10]
	0x03E7C780 CBZ X0, 0x3E7C7D8
	0x03E7C784 ADRP X8, 0x279000
	0x03E7C788 LDR X8, [X8 + 0x278]
	0x03E7C78C LDR X1, [X31 + 0x8]
	0x03E7C790 MOV X3, X31
	0x03E7C794 LDR X8, [X8]
	0x03E7C798 LDR X8, [X8 + 0xB8]
	0x03E7C79C LDR X2, [X8]
	0x03E7C7A0 BL 0x3234224
	0x03E7C7A4 LDR X0, [X19 + 0x10]
	0x03E7C7A8 CBZ X0, 0x3E7C7D8
	0x03E7C7AC LDR X8, [X0]
	0x03E7C7B0 LDP X9, X1, [X8 + 0x168]
	0x03E7C7B4 BLR X9
	0x03E7C7B8 LDP X20, X19, [X31 + 0x70]
	0x03E7C7BC LDP X22, X21, [X31 + 0x60]
	0x03E7C7C0 LDP X24, X23, [X31 + 0x50]
	0x03E7C7C4 LDP X26, X25, [X31 + 0x40]
	0x03E7C7C8 LDP X28, X27, [X31 + 0x30]
	0x03E7C7CC LDP X29, X30, [X31 + 0x20]
	0x03E7C7D0 ADD X31, X31, 0x80
	0x03E7C7D4 RET
	0x03E7C7D8 BL 0x1C16F20
	0x03E7C7DC BL 0x1C16F28
	0x03E7C7E0 MOV X1, X31
	0x03E7C7E4 B 0x33BDD8C
	0x03E7C7E8 STP X29, X30, [X31 - 0x60]!
	0x03E7C7EC STP X28, X27, [X31 + 0x10]
	0x03E7C7F0 STP X26, X25, [X31 + 0x20]
	0x03E7C7F4 STP X24, X23, [X31 + 0x30]
	0x03E7C7F8 STP X22, X21, [X31 + 0x40]
	0x03E7C7FC STP X20, X19, [X31 + 0x50]
	0x03E7C800 ADRP X21, 0x56C000
	0x03E7C804 ADRP X19, 0x27F000
	0x03E7C808 ADRP X23, 0x27E000
	0x03E7C80C LDRB W8, [X21 + 0xDAF]
	0x03E7C810 LDR X19, [X19 + 0x558]
	0x03E7C814 LDR X23, [X23 + 0x248]
	0x03E7C818 MOV X20, X0
	0x03E7C81C TBNZ X8, 0x0, 0x3E7C84C
	0x03E7C820 ADRP X0, 0x27E000
	0x03E7C824 LDR X0, [X0 + 0x248]
	0x03E7C828 BL 0x1C16CF4
	0x03E7C82C ADRP X0, 0x277000
	0x03E7C830 LDR X0, [X0 + 0xE00]
	0x03E7C834 BL 0x1C16CF4
	0x03E7C838 ADRP X0, 0x27F000
	0x03E7C83C LDR X0, [X0 + 0x558]
	0x03E7C840 BL 0x1C16CF4
	0x03E7C844 MOVZ W8, 0x1
	0x03E7C848 STRB W8, [X21 + 0xDAF]
	0x03E7C84C LDR X0, [X19]
	0x03E7C850 ADRP X22, 0x277000
	0x03E7C854 LDR X22, [X22 + 0xE00]
	0x03E7C858 BL 0x1C16F10
	0x03E7C85C MOV X1, X31
	0x03E7C860 MOV X19, X0
	0x03E7C864 BL 0x32E23B4
	0x03E7C868 LDR X0, [X23]
	0x03E7C86C LDRB W21, [X20 + 0x18]
	0x03E7C870 LDRB W24, [X20 + 0x39]
	0x03E7C874 LDRB W25, [X20 + 0x3A]
	0x03E7C878 LDRB W29, [X20 + 0x3B]
	0x03E7C87C LDRB W28, [X20 + 0x28]
	0x03E7C880 LDRB W26, [X20 + 0x19]
	0x03E7C884 LDR W8, [X0 + 0xE0]
	0x03E7C888 LDRB W27, [X20 + 0x38]
	0x03E7C88C CBNZ W8, 0x3E7C894
	0x03E7C890 BL 0x1C16DFC
	0x03E7C894 ADD W8, W24, W21, 0x1, LSL
	0x03E7C898 ADD W8, W25, W8, 0x1, LSL
	0x03E7C89C ADD W8, W29, W8, 0x1, LSL
	0x03E7C8A0 ADD W8, W28, W8, 0x4, LSL
	0x03E7C8A4 ADD W8, W26, W8, 0x1, LSL
	0x03E7C8A8 ADD W0, W27, W8, 0x7, LSL
	0x03E7C8AC MOVZ W1, 0x1
	0x03E7C8B0 MOV X2, X31
	0x03E7C8B4 BL 0x3E68228
	0x03E7C8B8 MOV X1, X0
	0x03E7C8BC CBZ X19, 0x3E7CA68
	0x03E7C8C0 LDR X8, [X19]
	0x03E7C8C4 LDR X9, [X8 + 0x388]
	0x03E7C8C8 LDR X4, [X8 + 0x390]
	0x03E7C8CC MOVZ W3, 0x2
	0x03E7C8D0 MOV X0, X19

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0x56D000
	009 Move X19, 0x2A6000
	010 Move X22, 0x2AB000
	011 Move W8, [X23+3479]
	012 Move X19, [X19+3336]
	013 Move X22, [X22+3696]
	014 Move X21, X1
	015 Move X20, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {31}
	020 Move X0, 0x278000
	021 Move X0, [X0+3584]
	022 Call 0x1C17CF4
	023 Move X0, 0x2A6000
	024 Move X0, [X0+3336]
	025 Call 0x1C17CF4
	026 Move X0, 0x2AB000
	027 Move X0, [X0+3696]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X23+3479], W8
	031 Move X0, [X19]
	032 Move X23, 0x278000
	033 Move X23, [X23+3584]
	034 Call 0x1C17F10
	035 Move W2, 1
	036 Move X1, X21
	037 Move X3, X31
	038 Move X19, X0
	039 Call StreamWriter..ctor, X0, X1, X2
	040 Move X0, [X22]
	041 Move W8, [X0+224]
	042 Compare W8, 0
	043 JumpIfNotEqual {45}
	044 Call 0x1C17DFC
	045 Move X0, X19
	046 Move X1, X31
	047 Call TextWriter.Synchronized, X0
	048 Move X21, X0
	049 Compare X0, 0
	050 JumpIfEqual {117}
	051 Move X8, [X21]
	052 Move X9, [X8+632]
	053 Move X2, [X8+640]
	054 Move X0, X21
	055 Move X1, X20
	056 NotImplemented "Instruction BLR not yet implemented."
	057 Move X20, X31
	058 Move X8, [X21]
	059 Move X1, [X23]
	060 NotImplemented "Instruction LDRH not yet implemented."
	061 Compare X9, 0
	062 JumpIfEqual {69}
	063 Move X10, [X8+176]
	064 Add X10, X10, 8
	065 NotImplemented "Instruction LDUR not yet implemented."
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Subtract X9, X9, 1
	068 Add X10, X10, 16
	069 Move X0, X21
	070 Move W2, W31
	071 Call 0x1C5D788
	072 NotImplemented "Instruction LDRSW not yet implemented."
	073 Add X8, X8, X9
	074 Add X0, X8, 312
	075 Move X8, [X0]
	076 Move X1, [X0+8]
	077 Move X0, X21
	078 NotImplemented "Instruction BLR not yet implemented."
	079 Compare X20, 0
	080 JumpIfNotEqual {118}
	081 Move X21, X31
	082 Compare X19, 0
	083 JumpIfEqual {105}
	084 Move X8, [X19]
	085 Move X1, [X23]
	086 NotImplemented "Instruction LDRH not yet implemented."
	087 Compare X9, 0
	088 JumpIfEqual {95}
	089 Move X10, [X8+176]
	090 Add X10, X10, 8
	091 NotImplemented "Instruction LDUR not yet implemented."
	092 NotImplemented "Instruction CMP not yet implemented."
	093 Subtract X9, X9, 1
	094 Add X10, X10, 16
	095 Move X0, X19
	096 Move W2, W31
	097 Call 0x1C5D788
	098 NotImplemented "Instruction LDRSW not yet implemented."
	099 Add X8, X8, X9
	100 Add X0, X8, 312
	101 Move X8, [X0]
	102 Move X1, [X0+8]
	103 Move X0, X19
	104 NotImplemented "Instruction BLR not yet implemented."
	105 Compare X21, 0
	106 JumpIfNotEqual {115}
	107 Move X20, [X31+48]
	108 Move X19, [X31+56]
	109 Move X22, [X31+32]
	110 Move X21, [X31+40]
	111 Move X30, [X31+16]
	112 Move X23, [X31+24]
	113 Add X31, X31, 64
	114 Return 
	115 Move X0, X21
	116 Call 0x1C17F18
	117 Call 0x1C17F20
	118 Move X0, X20
	119 Call 0x1C17F18
	120 Move X22, X1
	121 NotImplemented "Instruction CMP not yet implemented."
	122 Move X20, X0
	123 Move X0, X20
	124 Call 0x3EB2AD0
	125 Move X8, [X0]
	126 Move [X31+8], X8
	127 Call 0x3EB2AE0
	128 Move X20, [X31+8]
	129 Compare X21, 0
	130 JumpIfNotEqual {58}
	131 Move [X31+8], X31
	132 Compare X21, 0
	133 JumpIfEqual {155}
	134 Move X8, [X21]
	135 Move X1, [X23]
	136 NotImplemented "Instruction LDRH not yet implemented."
	137 Compare X9, 0
	138 JumpIfEqual {145}
	139 Move X10, [X8+176]
	140 Add X10, X10, 8
	141 NotImplemented "Instruction LDUR not yet implemented."
	142 NotImplemented "Instruction CMP not yet implemented."
	143 Subtract X9, X9, 1
	144 Add X10, X10, 16
	145 Move X0, X21
	146 Move W2, W31
	147 Call 0x1C5D788
	148 NotImplemented "Instruction LDRSW not yet implemented."
	149 Add X8, X8, X9
	150 Add X0, X8, 312
	151 Move X8, [X0]
	152 Move X1, [X0+8]
	153 Move X0, X21
	154 NotImplemented "Instruction BLR not yet implemented."
	155 Move X8, [X31+8]
	156 Compare X8, 0
	157 JumpIfEqual {166}
	158 Move X0, [X31+8]
	159 Call 0x1C17F18
	160 Move X22, X1
	161 Move X20, X0
	162 Compare X21, 0
	163 JumpIfNotEqual {134}
	164 Move X22, X1
	165 Move X20, X0
	166 NotImplemented "Instruction CMP not yet implemented."
	167 Move X0, X20
	168 Call 0x3EB2AD0
	169 Move X21, [X0]
	170 Call 0x3EB2AE0
	171 Move X21, X31
	172 Move X20, X0
	173 Compare X19, 0
	174 JumpIfEqual {196}
	175 Move X8, [X19]
	176 Move X1, [X23]
	177 NotImplemented "Instruction LDRH not yet implemented."
	178 Compare X9, 0
	179 JumpIfEqual {186}
	180 Move X10, [X8+176]
	181 Add X10, X10, 8
	182 NotImplemented "Instruction LDUR not yet implemented."
	183 NotImplemented "Instruction CMP not yet implemented."
	184 Subtract X9, X9, 1
	185 Add X10, X10, 16
	186 Move X0, X19
	187 Move W2, W31
	188 Call 0x1C5D788
	189 NotImplemented "Instruction LDRSW not yet implemented."
	190 Add X8, X8, X9
	191 Add X0, X8, 312
	192 Move X8, [X0]
	193 Move X1, [X0+8]
	194 Move X0, X19
	195 NotImplemented "Instruction BLR not yet implemented."
	196 Compare X21, 0
	197 JumpIfNotEqual {200}
	198 Move X0, X20
	199 Call 0x1D2D690
	200 Move X0, X21
	201 Call 0x1C17F18
	202 Call 0x1991590

Method: System.Void Debug(System.String message)

Disassembly:
	0x03E7CB90 ADRP X0, 0x277000
	0x03E7CB94 LDR X0, [X0 + 0x9D0]
	0x03E7CB98 BL 0x1C16CF4
	0x03E7CB9C ADRP X0, 0x2F0000
	0x03E7CBA0 LDR X0, [X0 + 0xAF0]
	0x03E7CBA4 BL 0x1C16CF4
	0x03E7CBA8 ADRP X0, 0x2F0000
	0x03E7CBAC LDR X0, [X0 + 0xAF8]
	0x03E7CBB0 BL 0x1C16CF4
	0x03E7CBB4 ADRP X0, 0x279000
	0x03E7CBB8 LDR X0, [X0 + 0x278]
	0x03E7CBBC BL 0x1C16CF4
	0x03E7CBC0 ADRP X0, 0x2BE000
	0x03E7CBC4 LDR X0, [X0 + 0xFC8]
	0x03E7CBC8 BL 0x1C16CF4
	0x03E7CBCC ADRP X0, 0x2F0000
	0x03E7CBD0 LDR X0, [X0 + 0xB00]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move W21, [X0+24]
	006 Move X19, X0
	007 Move X20, X1
	008 Call 0x1C17D44
	009 NotImplemented "Instruction CMP not yet implemented."
	010 Move X0, X19
	011 Move X1, X20
	012 Move X20, [X31+16]
	013 Move X19, [X31+24]
	014 Move W2, 1
	015 Move X30, [X31+32]
	016 Move X21, [X31+40]
	017 Call Logger.output, X0, X1, X2
	018 Return 
	019 Move X20, [X31+16]
	020 Move X19, [X31+24]
	021 Move X30, [X31+32]
	022 Move X21, [X31+40]
	023 Return 

Method: System.Void Error(System.String message)

Disassembly:
	0x03E7CBD4 BL 0x1C16CF4
	0x03E7CBD8 MOVZ W8, 0x1
	0x03E7CBDC STRB W8, [X19 + 0xD9D]
	0x03E7CBE0 STR X31, [X31 + 0x28]
	0x03E7CBE4 CBZ X21, 0x3E7CF80
	0x03E7CBE8 LDRB W26, [X21 + 0x38]
	0x03E7CBEC CMP W26, 0x7D
	0x03E7CBF0 B.LS 0x3E7CC14
	0x03E7CBF4 MOV X0, X21
	0x03E7CBF8 BL 0x3E7BFC0
	0x03E7CBFC STR X0, [X31 + 0x28]
	0x03E7CC00 ADD X0, X31, 0x28
	0x03E7CC04 MOV X1, X31
	0x03E7CC08 BL 0x339A968
	0x03E7CC0C MOV X20, X0
	0x03E7CC10 B 0x3E7CC28
	0x03E7CC14 ADRP X8, 0x279000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move W21, [X0+24]
	006 Move X19, X0
	007 Move X20, X1
	008 Call 0x1C17D44
	009 NotImplemented "Instruction CMP not yet implemented."
	010 Move X0, X19
	011 Move X1, X20
	012 Move X20, [X31+16]
	013 Move X19, [X31+24]
	014 Move W2, 4
	015 Move X30, [X31+32]
	016 Move X21, [X31+40]
	017 Call Logger.output, X0, X1, X2
	018 Return 
	019 Move X20, [X31+16]
	020 Move X19, [X31+24]
	021 Move X30, [X31+32]
	022 Move X21, [X31+40]
	023 Return 

Method: System.Void Fatal(System.String message)

Disassembly:
	0x03E7CC18 LDR X8, [X8 + 0x278]
	0x03E7CC1C LDR X8, [X8]

ISIL:
	001 Move W2, 5
	002 Call Logger.output, X0, X1, X2
	003 Return 

Method: System.Void Info(System.String message)

Disassembly:
	0x03E7CC20 LDR X8, [X8 + 0xB8]
	0x03E7CC24 LDR X20, [X8]
	0x03E7CC28 LDR X0, [X21 + 0x20]
	0x03E7CC2C MOV X1, X31
	0x03E7CC30 BL 0x3317424
	0x03E7CC34 MOV X19, X0
	0x03E7CC38 CBZ W26, 0x3E7CC50
	0x03E7CC3C CMP W26, 0x7D
	0x03E7CC40 B.LS 0x3E7CC68
	0x03E7CC44 ADRP X8, 0x2BE000
	0x03E7CC48 LDR X8, [X8 + 0xFC8]
	0x03E7CC4C B 0x3E7CC60
	0x03E7CC50 ADRP X8, 0x279000
	0x03E7CC54 LDR X8, [X8 + 0x278]
	0x03E7CC58 LDR X8, [X8]
	0x03E7CC5C LDR X8, [X8 + 0xB8]
	0x03E7CC60 LDR X22, [X8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move W21, [X0+24]
	006 Move X19, X0
	007 Move X20, X1
	008 Call 0x1C17D44
	009 NotImplemented "Instruction CMP not yet implemented."
	010 Move X0, X19
	011 Move X1, X20
	012 Move X20, [X31+16]
	013 Move X19, [X31+24]
	014 Move W2, 2
	015 Move X30, [X31+32]
	016 Move X21, [X31+40]
	017 Call Logger.output, X0, X1, X2
	018 Return 
	019 Move X20, [X31+16]
	020 Move X19, [X31+24]
	021 Move X30, [X31+32]
	022 Move X21, [X31+40]
	023 Return 

Method: System.Void Trace(System.String message)

Disassembly:
	0x03E7CC64 B 0x3E7CCAC
	0x03E7CC68 LDRB W8, [X21 + 0x28]
	0x03E7CC6C CMP W8, 0x1
	0x03E7CC70 B.NE 0x3E7CC94
	0x03E7CC74 LDRB W8, [X21 + 0x18]
	0x03E7CC78 CBZ W8, 0x3E7CC94
	0x03E7CC7C LDRB W8, [X21 + 0x19]
	0x03E7CC80 CMP W8, 0x1
	0x03E7CC84 B.EQ 0x3E7CC94
	0x03E7CC88 LDRB W8, [X21 + 0x39]
	0x03E7CC8C CMP W8, 0x1
	0x03E7CC90 B.NE 0x3E7CF58
	0x03E7CC94 LDR X0, [X21 + 0x30]
	0x03E7CC98 CBZ X0, 0x3E7CF80
	0x03E7CC9C LDR X8, [X0]
	0x03E7CCA0 LDP X9, X1, [X8 + 0x168]
	0x03E7CCA4 BLR X9

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move W21, [X0+24]
	006 Move X19, X0
	007 Move X20, X1
	008 Call 0x1C17D44
	009 NotImplemented "Instruction CMP not yet implemented."
	010 Move X20, [X31+16]
	011 Move X19, [X31+24]
	012 Move X30, [X31+32]
	013 Move X21, [X31+40]
	014 Return 
	015 Move X0, X19
	016 Move X1, X20
	017 Move X20, [X31+16]
	018 Move X19, [X31+24]
	019 Move W2, W31
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 Call Logger.output, X0, X1, X2
	023 Return 

Method: System.Void Warn(System.String message)

Disassembly:
	0x03E7C278 ADRP X0, 0x2F0000
	0x03E7C27C LDR X0, [X0 + 0xAA0]
	0x03E7C280 BL 0x1C16CF4
	0x03E7C284 ADRP X0, 0x2F0000
	0x03E7C288 LDR X0, [X0 + 0xAA8]
	0x03E7C28C BL 0x1C16CF4
	0x03E7C290 ADRP X0, 0x2F0000
	0x03E7C294 LDR X0, [X0 + 0xAB0]
	0x03E7C298 BL 0x1C16CF4
	0x03E7C29C ADRP X0, 0x2F0000
	0x03E7C2A0 LDR X0, [X0 + 0xAB8]
	0x03E7C2A4 BL 0x1C16CF4
	0x03E7C2A8 ADRP X0, 0x2F0000
	0x03E7C2AC LDR X0, [X0 + 0xAC0]
	0x03E7C2B0 BL 0x1C16CF4
	0x03E7C2B4 ADRP X0, 0x2F0000
	0x03E7C2B8 LDR X0, [X0 + 0xAC8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move W21, [X0+24]
	006 Move X19, X0
	007 Move X20, X1
	008 Call 0x1C17D44
	009 NotImplemented "Instruction CMP not yet implemented."
	010 Move X0, X19
	011 Move X1, X20
	012 Move X20, [X31+16]
	013 Move X19, [X31+24]
	014 Move W2, 3
	015 Move X30, [X31+32]
	016 Move X21, [X31+40]
	017 Call Logger.output, X0, X1, X2
	018 Return 
	019 Move X20, [X31+16]
	020 Move X19, [X31+24]
	021 Move X30, [X31+32]
	022 Move X21, [X31+40]
	023 Return 

