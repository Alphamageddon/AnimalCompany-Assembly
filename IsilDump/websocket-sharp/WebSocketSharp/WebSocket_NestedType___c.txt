Type: WebSocketSharp.WebSocket/<>c

Method: System.Void .cctor()

Disassembly:
	0x03E7AF80 BL 0x3231D14
	0x03E7AF84 CBZ X20, 0x3E7B060
	0x03E7AF88 LDR W8, [X20 + 0x10]
	0x03E7AF8C LDR X0, [X24]
	0x03E7AF90 ADD X1, X31, 0x18
	0x03E7AF94 STR W8, [X31 + 0x18]
	0x03E7AF98 BL 0x1C16E04
	0x03E7AF9C ADRP X8, 0x2F2000
	0x03E7AFA0 LDR X8, [X8 + 0xA40]
	0x03E7AFA4 MOV X1, X0
	0x03E7AFA8 MOV X2, X31
	0x03E7AFAC LDR X8, [X8]
	0x03E7AFB0 MOV X0, X8
	0x03E7AFB4 BL 0x321EFD0
	0x03E7AFB8 LDR X8, [X21 + 0x18]
	0x03E7AFBC CMP W8, 0x2
	0x03E7AFC0 B.LT 0x3E7B018
	0x03E7AFC4 ADRP X23, 0x279000
	0x03E7AFC8 LDR X23, [X23 + 0x988]
	0x03E7AFCC MOV X20, X0
	0x03E7AFD0 AND X8, X8, 0x0
	0x03E7AFD4 MOVZ W22, 0x5
	0x03E7AFD8 SUB X9, X22, 0x4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x56F000
	005 Move X20, 0x2F3000
	006 Move W8, [X19+3455]
	007 Move X20, [X20+1048]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x2F3000
	013 Move X0, [X0+1048]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+3455], W8
	017 Move X0, [X20]
	018 Call 0x1C17F10
	019 Move X1, X31
	020 Move X19, X0
	021 Call Object..ctor, X0
	022 Move X8, [X20]
	023 Move X8, [X8+184]
	024 Move [X8], X19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Return 

Method: System.Void .ctor()

Disassembly:
	0x03E7AFDC CMP X9, W8, UXTW
	0x03E7AFE0 B.CS 0x3E7B064

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: System.Boolean <checkProtocols>b__120_0(System.String protocol)

Disassembly:
	0x03E7AFE4 CBZ X19, 0x3E7B060
	0x03E7AFE8 LDR X3, [X21, X22, LSL #3]
	0x03E7AFEC LDR X2, [X23]
	0x03E7AFF0 MOV X0, X19
	0x03E7AFF4 MOV X1, X20
	0x03E7AFF8 MOV X4, X31
	0x03E7AFFC BL 0x3234D98
	0x03E7B000 LDR W8, [X21 + 0x18]
	0x03E7B004 SUB X9, X22, 0x3
	0x03E7B008 ADD X22, X22, 0x1
	0x03E7B00C CMP X9, W8, SXTW
	0x03E7B010 B.LT 0x3E7AFD8
	0x03E7B014 B 0x3E7B01C
	0x03E7B018 CBZ X19, 0x3E7B060
	0x03E7B01C MOV X0, X19
	0x03E7B020 MOV X1, X31
	0x03E7B024 BL 0x323260C
	0x03E7B028 SUB W1, W0, 0x1
	0x03E7B02C MOV X0, X19
	0x03E7B030 MOV X2, X31
	0x03E7B034 BL 0x3232ADC
	0x03E7B038 LDR X8, [X19]
	0x03E7B03C MOV X0, X19
	0x03E7B040 LDP X9, X1, [X8 + 0x168]
	0x03E7B044 BLR X9
	0x03E7B048 LDP X20, X19, [X31 + 0x40]
	0x03E7B04C LDP X22, X21, [X31 + 0x30]
	0x03E7B050 LDP X24, X23, [X31 + 0x20]
	0x03E7B054 LDR X30, [X31 + 0x10]
	0x03E7B058 ADD X31, X31, 0x50
	0x03E7B05C RET
	0x03E7B060 BL 0x1C16F20
	0x03E7B064 BL 0x1C16F28
	0x03E7B068 BL 0x1C16F44
	0x03E7B06C MOV X1, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x56F000
	006 Move X20, 0x281000
	007 Move W8, [X21+3456]
	008 Move X20, [X20+584]
	009 Move X19, X1
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x280000
	015 Move X0, [X0+584]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+3456], W8
	019 Move X0, [X20]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfEqual {25}
	023 Compare X19, 0
	024 JumpIfNotEqual {28}
	025 Call 0x1C17DFC
	026 Compare X19, 0
	027 JumpIfEqual {39}
	028 Move W8, [X19+16]
	029 Compare W8, 0
	030 JumpIfEqual {39}
	031 Move X0, [X20]
	032 Move W8, [X0+224]
	033 Compare W8, 0
	034 JumpIfNotEqual {36}
	035 Call 0x1C17DFC
	036 Move X0, X19
	037 Call Ext.IsToken, X0
	038 Xor W8, W0, 1
	039 Move W8, 1
	040 Move X20, [X31+16]
	041 Move X19, [X31+24]
	042 And W0, W8, 1
	043 Move X30, [X31+32]
	044 Move X21, [X31+40]
	045 Return X0

