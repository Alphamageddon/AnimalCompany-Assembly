Type: WebSocketSharp.LogData

Method: System.Void .ctor(WebSocketSharp.LogLevel level, System.Diagnostics.StackFrame caller, System.String message)

Disassembly:
	0x03E7BAF0 B 0x3E7BAFC
	0x03E7BAF4 B 0x3E7BAFC
	0x03E7BAF8 B 0x3E7BAFC
	0x03E7BAFC MOV X20, X0
	0x03E7BB00 B 0x3E7B9DC
	0x03E7BB04 MOV X21, X1
	0x03E7BB08 MOV X20, X0
	0x03E7BB0C BL 0x3EB1AE0
	0x03E7BB10 MOV W1, W21
	0x03E7BB14 B 0x3E7BB1C
	0x03E7BB18 MOV X20, X0
	0x03E7BB1C CMP W1, W23
	0x03E7BB20 B.NE 0x3E7BB58
	0x03E7BB24 MOV X0, X20
	0x03E7BB28 BL 0x3EB1AD0
	0x03E7BB2C LDR X21, [X0]
	0x03E7BB30 BL 0x3EB1AE0
	0x03E7BB34 MOV X0, X19
	0x03E7BB38 MOV X1, X31
	0x03E7BB3C BL 0x33E14E4
	0x03E7BB40 CBNZ X21, 0x3E7BB60
	0x03E7BB44 LDP X20, X19, [X31 + 0x30]
	0x03E7BB48 LDP X22, X21, [X31 + 0x20]
	0x03E7BB4C LDP X24, X23, [X31 + 0x10]
	0x03E7BB50 LDR X30, [X31], #0x40
	0x03E7BB54 RET
	0x03E7BB58 MOV X21, X31
	0x03E7BB5C B 0x3E7BB6C
	0x03E7BB60 MOV X0, X21
	0x03E7BB64 BL 0x1C16F18
	0x03E7BB68 MOV X20, X0
	0x03E7BB6C MOV X0, X19
	0x03E7BB70 MOV X1, X31
	0x03E7BB74 BL 0x33E14E4
	0x03E7BB78 CBNZ X21, 0x3E7BB84
	0x03E7BB7C MOV X0, X20
	0x03E7BB80 BL 0x1D2C690
	0x03E7BB84 MOV X0, X21
	0x03E7BB88 BL 0x1C16F18
	0x03E7BB8C BL 0x1990590
	0x03E7BB90 STP X30, X21, [X31 - 0x20]!
	0x03E7BB94 STP X20, X19, [X31 + 0x10]
	0x03E7BB98 LDR W21, [X0 + 0x18]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x56E000
	008 Move W8, [X23+3471]
	009 Move X20, X3
	010 Move X21, X2
	011 Move W22, W1
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x27A000
	018 Move X0, [X0+2544]
	019 Call 0x1C17CF4
	020 Move X0, 0x27B000
	021 Move X0, [X0+632]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X23+3471], W8
	025 Move X23, 0x27A000
	026 Move X23, [X23+2544]
	027 Move X0, X19
	028 Move X1, X31
	029 Call Object..ctor, X0
	030 Move [X19+32], W22
	031 Move [X19+16], X21
	032 Compare X20, 0
	033 JumpIfNotEqual {39}
	034 Move X8, 0x27B000
	035 Move X8, [X8+632]
	036 Move X8, [X8]
	037 Move X8, [X8+184]
	038 Move X20, [X8]
	039 Move [X19+40], X20
	040 Move X0, [X23]
	041 Move W8, [X0+224]
	042 Compare W8, 0
	043 JumpIfNotEqual {45}
	044 Call 0x1C17DFC
	045 Move X0, X31
	046 Call DateTime.get_Now
	047 Move [X19+24], X0
	048 Move X20, [X31+32]
	049 Move X19, [X31+40]
	050 Move X22, [X31+16]
	051 Move X21, [X31+24]
	052 Move X30, [X31+48]
	053 Move X23, [X31+56]
	054 Return 

Method: System.Diagnostics.StackFrame get_Caller()

Disassembly:
	0x03E7BB9C MOV X19, X0
	0x03E7BBA0 MOV X20, X1

ISIL:
	001 Move X0, [X0+16]
	002 Return X0

Method: System.DateTime get_Date()

Disassembly:
	0x03E7BBA4 BL 0x1C16D44
	0x03E7BBA8 CMP W21, 0x1

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: WebSocketSharp.LogLevel get_Level()

Disassembly:
	0x03E7BBAC B.GT 0x3E7BBC8
	0x03E7BBB0 MOV X0, X19

ISIL:
	001 Move W0, [X0+32]
	002 Return X0

Method: System.String get_Message()

Disassembly:
	0x03E7BBB4 MOV X1, X20
	0x03E7BBB8 LDP X20, X19, [X31 + 0x10]

ISIL:
	001 Move X0, [X0+40]
	002 Return X0

Method: System.String ToString()

Disassembly:
	0x03E7BBBC MOVZ W2, 0x1
	0x03E7BBC0 LDP X30, X21, [X31], #0x20
	0x03E7BBC4 B 0x3E7B8D4
	0x03E7BBC8 LDP X20, X19, [X31 + 0x10]
	0x03E7BBCC LDP X30, X21, [X31], #0x20
	0x03E7BBD0 RET
	0x03E7BBD4 STP X30, X21, [X31 - 0x20]!
	0x03E7BBD8 STP X20, X19, [X31 + 0x10]
	0x03E7BBDC LDR W21, [X0 + 0x18]
	0x03E7BBE0 MOV X19, X0
	0x03E7BBE4 MOV X20, X1
	0x03E7BBE8 BL 0x1C16D44
	0x03E7BBEC CMP W21, 0x4
	0x03E7BBF0 B.GT 0x3E7BC0C
	0x03E7BBF4 MOV X0, X19
	0x03E7BBF8 MOV X1, X20
	0x03E7BBFC LDP X20, X19, [X31 + 0x10]
	0x03E7BC00 MOVZ W2, 0x4
	0x03E7BC04 LDP X30, X21, [X31], #0x20
	0x03E7BC08 B 0x3E7B8D4
	0x03E7BC0C LDP X20, X19, [X31 + 0x10]
	0x03E7BC10 LDP X30, X21, [X31], #0x20
	0x03E7BC14 RET
	0x03E7BC18 MOVZ W2, 0x5
	0x03E7BC1C B 0x3E7B8D4
	0x03E7BC20 STP X30, X21, [X31 - 0x20]!
	0x03E7BC24 STP X20, X19, [X31 + 0x10]
	0x03E7BC28 LDR W21, [X0 + 0x18]
	0x03E7BC2C MOV X19, X0
	0x03E7BC30 MOV X20, X1
	0x03E7BC34 BL 0x1C16D44
	0x03E7BC38 CMP W21, 0x2
	0x03E7BC3C B.GT 0x3E7BC58
	0x03E7BC40 MOV X0, X19
	0x03E7BC44 MOV X1, X20
	0x03E7BC48 LDP X20, X19, [X31 + 0x10]
	0x03E7BC4C MOVZ W2, 0x2
	0x03E7BC50 LDP X30, X21, [X31], #0x20
	0x03E7BC54 B 0x3E7B8D4
	0x03E7BC58 LDP X20, X19, [X31 + 0x10]
	0x03E7BC5C LDP X30, X21, [X31], #0x20
	0x03E7BC60 RET
	0x03E7BC64 STP X30, X21, [X31 - 0x20]!
	0x03E7BC68 STP X20, X19, [X31 + 0x10]
	0x03E7BC6C LDR W21, [X0 + 0x18]
	0x03E7BC70 MOV X19, X0
	0x03E7BC74 MOV X20, X1
	0x03E7BC78 BL 0x1C16D44
	0x03E7BC7C CMP W21, 0x0
	0x03E7BC80 B.LE 0x3E7BC90
	0x03E7BC84 LDP X20, X19, [X31 + 0x10]
	0x03E7BC88 LDP X30, X21, [X31], #0x20
	0x03E7BC8C RET
	0x03E7BC90 MOV X0, X19
	0x03E7BC94 MOV X1, X20
	0x03E7BC98 LDP X20, X19, [X31 + 0x10]
	0x03E7BC9C MOV W2, W31
	0x03E7BCA0 LDP X30, X21, [X31], #0x20
	0x03E7BCA4 B 0x3E7B8D4
	0x03E7BCA8 MOV X1, X31
	0x03E7BCAC B 0x33BDD8C
	0x03E7BCB0 MOV X8, X2
	0x03E7BCB4 MOV W2, W1
	0x03E7BCB8 AND W5, W3, 0x1
	0x03E7BCBC MOVZ W1, 0x1
	0x03E7BCC0 MOV X3, X8
	0x03E7BCC4 MOV W4, W31
	0x03E7BCC8 B 0x3E7BCCC
	0x03E7BCCC STR X30, [X31 - 0x50]!
	0x03E7BCD0 STP X26, X25, [X31 + 0x10]
	0x03E7BCD4 STP X24, X23, [X31 + 0x20]
	0x03E7BCD8 STP X22, X21, [X31 + 0x30]
	0x03E7BCDC STP X20, X19, [X31 + 0x40]
	0x03E7BCE0 ADRP X26, 0x56D000
	0x03E7BCE4 ADRP X25, 0x27F000
	0x03E7BCE8 LDRB W8, [X26 + 0xD99]
	0x03E7BCEC LDR X25, [X25 + 0x248]
	0x03E7BCF0 MOV W21, W5
	0x03E7BCF4 MOV W22, W4
	0x03E7BCF8 MOV X19, X3
	0x03E7BCFC MOV W23, W2
	0x03E7BD00 MOV W24, W1
	0x03E7BD04 MOV X20, X0
	0x03E7BD08 TBNZ X8, 0x0, 0x3E7BD2C
	0x03E7BD0C ADRP X0, 0x27F000
	0x03E7BD10 LDR X0, [X0 + 0x248]
	0x03E7BD14 BL 0x1C16CF4
	0x03E7BD18 ADRP X0, 0x2F1000
	0x03E7BD1C LDR X0, [X0 + 0x3C8]
	0x03E7BD20 BL 0x1C16CF4
	0x03E7BD24 MOVZ W8, 0x1
	0x03E7BD28 STRB W8, [X26 + 0xD99]
	0x03E7BD2C MOV X0, X20
	0x03E7BD30 MOV X1, X31
	0x03E7BD34 BL 0x33BDD8C
	0x03E7BD38 STRB W24, [X20 + 0x18]
	0x03E7BD3C STRB W23, [X20 + 0x28]
	0x03E7BD40 LDR X0, [X25]
	0x03E7BD44 LDR W8, [X0 + 0xE0]
	0x03E7BD48 CBNZ W8, 0x3E7BD50
	0x03E7BD4C BL 0x1C16DFC
	0x03E7BD50 MOV W0, W23
	0x03E7BD54 MOV X1, X31
	0x03E7BD58 BL 0x3E693DC
	0x03E7BD5C AND W8, W0, W22, 0x0
	0x03E7BD60 AND W8, W8, 0x1
	0x03E7BD64 STRB W8, [X20 + 0x39]
	0x03E7BD68 STRH W31, [X20 + 0x3A]
	0x03E7BD6C CBZ X19, 0x3E7BE84
	0x03E7BD70 MOV X0, X19
	0x03E7BD74 MOV X1, X31
	0x03E7BD78 BL 0x3E7A73C
	0x03E7BD7C MOV X22, X0
	0x03E7BD80 CMP X0, 0x7D
	0x03E7BD84 B.HI 0x3E7BDB4
	0x03E7BD88 STRB W22, [X20 + 0x38]
	0x03E7BD8C ADRP X22, 0x2F1000
	0x03E7BD90 LDR X22, [X22 + 0x3C8]
	0x03E7BD94 LDR X0, [X22]
	0x03E7BD98 LDR W8, [X0 + 0xE0]
	0x03E7BD9C CBNZ W8, 0x3E7BDA8
	0x03E7BDA0 BL 0x1C16DFC
	0x03E7BDA4 LDR X0, [X22]
	0x03E7BDA8 LDR X8, [X0 + 0xB8]
	0x03E7BDAC LDR X0, [X8 + 0x8]
	0x03E7BDB0 B 0x3E7BE10
	0x03E7BDB4 UBFM X8, X22, 0x10, 0x3F
	0x03E7BDB8 CBNZ X8, 0x3E7BDE8
	0x03E7BDBC MOVZ W8, 0x7E
	0x03E7BDC0 STRB W8, [X20 + 0x38]
	0x03E7BDC4 LDR X0, [X25]
	0x03E7BDC8 LDR W8, [X0 + 0xE0]
	0x03E7BDCC CBNZ W8, 0x3E7BDD4
	0x03E7BDD0 BL 0x1C16DFC
	0x03E7BDD4 MOVZ W1, 0x1
	0x03E7BDD8 MOV W0, W22
	0x03E7BDDC MOV X2, X31
	0x03E7BDE0 BL 0x3E68228
	0x03E7BDE4 B 0x3E7BE10
	0x03E7BDE8 MOVZ W8, 0x7F
	0x03E7BDEC STRB W8, [X20 + 0x38]
	0x03E7BDF0 LDR X0, [X25]
	0x03E7BDF4 LDR W8, [X0 + 0xE0]
	0x03E7BDF8 CBNZ W8, 0x3E7BE00
	0x03E7BDFC BL 0x1C16DFC
	0x03E7BE00 MOVZ W1, 0x1
	0x03E7BE04 MOV X0, X22
	0x03E7BE08 MOV X2, X31
	0x03E7BE0C BL 0x3E6A320
	0x03E7BE10 STR X0, [X20 + 0x10]
	0x03E7BE14 TBZ X21, 0x0, 0x3E7BE3C
	0x03E7BE18 MOVZ W8, 0x1
	0x03E7BE1C STRB W8, [X20 + 0x19]
	0x03E7BE20 BL 0x3E7BF24
	0x03E7BE24 MOV X1, X0
	0x03E7BE28 STR X0, [X20 + 0x20]
	0x03E7BE2C MOV X0, X19
	0x03E7BE30 MOV X2, X31
	0x03E7BE34 BL 0x3E7A744
	0x03E7BE38 B 0x3E7BE68
	0x03E7BE3C STRB W31, [X20 + 0x19]
	0x03E7BE40 ADRP X21, 0x2F1000
	0x03E7BE44 LDR X21, [X21 + 0x3C8]
	0x03E7BE48 LDR X0, [X21]
	0x03E7BE4C LDR W8, [X0 + 0xE0]
	0x03E7BE50 CBNZ W8, 0x3E7BE5C
	0x03E7BE54 BL 0x1C16DFC
	0x03E7BE58 LDR X0, [X21]
	0x03E7BE5C LDR X8, [X0 + 0xB8]
	0x03E7BE60 LDR X8, [X8 + 0x8]
	0x03E7BE64 STR X8, [X20 + 0x20]
	0x03E7BE68 STR X19, [X20 + 0x30]
	0x03E7BE6C LDP X20, X19, [X31 + 0x40]
	0x03E7BE70 LDP X22, X21, [X31 + 0x30]
	0x03E7BE74 LDP X24, X23, [X31 + 0x20]
	0x03E7BE78 LDP X26, X25, [X31 + 0x10]
	0x03E7BE7C LDR X30, [X31], #0x50
	0x03E7BE80 RET
	0x03E7BE84 BL 0x1C16F20
	0x03E7BE88 STR X30, [X31 - 0x50]!
	0x03E7BE8C STP X26, X25, [X31 + 0x10]
	0x03E7BE90 STP X24, X23, [X31 + 0x20]
	0x03E7BE94 STP X22, X21, [X31 + 0x30]
	0x03E7BE98 STP X20, X19, [X31 + 0x40]
	0x03E7BE9C ADRP X25, 0x56D000
	0x03E7BEA0 ADRP X26, 0x2F1000
	0x03E7BEA4 LDRB W8, [X25 + 0xD98]
	0x03E7BEA8 LDR X26, [X26 + 0x3B8]
	0x03E7BEAC MOV W19, W5
	0x03E7BEB0 MOV W21, W4
	0x03E7BEB4 MOV X24, X3
	0x03E7BEB8 MOV W20, W2
	0x03E7BEBC MOV W22, W1
	0x03E7BEC0 MOV X23, X0
	0x03E7BEC4 TBNZ X8, 0x0, 0x3E7BEDC
	0x03E7BEC8 ADRP X0, 0x2F1000
	0x03E7BECC LDR X0, [X0 + 0x3B8]
	0x03E7BED0 BL 0x1C16CF4
	0x03E7BED4 MOVZ W8, 0x1
	0x03E7BED8 STRB W8, [X25 + 0xD98]
	0x03E7BEDC LDR X0, [X26]
	0x03E7BEE0 BL 0x1C16F10
	0x03E7BEE4 MOV X1, X24
	0x03E7BEE8 MOV X2, X31
	0x03E7BEEC MOV X25, X0
	0x03E7BEF0 BL 0x3E7A634
	0x03E7BEF4 AND W4, W21, 0x1
	0x03E7BEF8 AND W5, W19, 0x1
	0x03E7BEFC MOV X0, X23
	0x03E7BF00 MOV W1, W22
	0x03E7BF04 MOV W2, W20
	0x03E7BF08 MOV X3, X25
	0x03E7BF0C LDP X20, X19, [X31 + 0x40]
	0x03E7BF10 LDP X22, X21, [X31 + 0x30]
	0x03E7BF14 LDP X24, X23, [X31 + 0x20]
	0x03E7BF18 LDP X26, X25, [X31 + 0x10]
	0x03E7BF1C LDR X30, [X31], #0x50
	0x03E7BF20 B 0x3E7BCCC
	0x03E7BF24 STP X30, X21, [X31 - 0x20]!
	0x03E7BF28 STP X20, X19, [X31 + 0x10]
	0x03E7BF2C ADRP X19, 0x56D000
	0x03E7BF30 ADRP X21, 0x278000
	0x03E7BF34 ADRP X20, 0x2F1000
	0x03E7BF38 LDRB W8, [X19 + 0xD9B]
	0x03E7BF3C LDR X21, [X21 + 0x618]
	0x03E7BF40 LDR X20, [X20 + 0x3C8]
	0x03E7BF44 TBNZ X8, 0x0, 0x3E7BF68
	0x03E7BF48 ADRP X0, 0x278000
	0x03E7BF4C LDR X0, [X0 + 0x618]
	0x03E7BF50 BL 0x1C16CF4
	0x03E7BF54 ADRP X0, 0x2F1000
	0x03E7BF58 LDR X0, [X0 + 0x3C8]
	0x03E7BF5C BL 0x1C16CF4
	0x03E7BF60 MOVZ W8, 0x1
	0x03E7BF64 STRB W8, [X19 + 0xD9B]
	0x03E7BF68 LDR X0, [X21]
	0x03E7BF6C MOVZ W1, 0x4
	0x03E7BF70 BL 0x1C16D6C
	0x03E7BF74 LDR X8, [X20]
	0x03E7BF78 MOV X19, X0
	0x03E7BF7C LDR W9, [X8 + 0xE0]
	0x03E7BF80 CBNZ W9, 0x3E7BF90
	0x03E7BF84 MOV X0, X8
	0x03E7BF88 BL 0x1C16DFC
	0x03E7BF8C LDR X8, [X20]
	0x03E7BF90 LDR X8, [X8 + 0xB8]
	0x03E7BF94 LDR X0, [X8 + 0x18]
	0x03E7BF98 CBZ X0, 0x3E7BFBC
	0x03E7BF9C LDR X8, [X0]
	0x03E7BFA0 MOV X1, X19
	0x03E7BFA4 LDP X9, X2, [X8 + 0x198]
	0x03E7BFA8 BLR X9
	0x03E7BFAC MOV X0, X19
	0x03E7BFB0 LDP X20, X19, [X31 + 0x10]
	0x03E7BFB4 LDP X30, X21, [X31], #0x20
	0x03E7BFB8 RET
	0x03E7BFBC BL 0x1C16F20
	0x03E7BFC0 STR X30, [X31 - 0x20]!
	0x03E7BFC4 STP X20, X19, [X31 + 0x10]
	0x03E7BFC8 ADRP X19, 0x56D000
	0x03E7BFCC LDRB W8, [X19 + 0xD9A]
	0x03E7BFD0 MOV X20, X0
	0x03E7BFD4 TBNZ X8, 0x0, 0x3E7BFEC
	0x03E7BFD8 ADRP X0, 0x27F000
	0x03E7BFDC LDR X0, [X0 + 0x248]
	0x03E7BFE0 BL 0x1C16CF4
	0x03E7BFE4 MOVZ W8, 0x1
	0x03E7BFE8 STRB W8, [X19 + 0xD9A]
	0x03E7BFEC LDRB W19, [X20 + 0x38]
	0x03E7BFF0 CMP X19, 0x7E
	0x03E7BFF4 B.CC 0x3E7C030
	0x03E7BFF8 ADRP X8, 0x27F000
	0x03E7BFFC LDR X8, [X8 + 0x248]
	0x03E7C000 LDR X20, [X20 + 0x10]
	0x03E7C004 LDR X0, [X8]
	0x03E7C008 LDR W8, [X0 + 0xE0]
	0x03E7C00C CBNZ W8, 0x3E7C014
	0x03E7C010 BL 0x1C16DFC
	0x03E7C014 MOVZ W1, 0x1
	0x03E7C018 MOV X0, X20
	0x03E7C01C CMP W19, 0x7E
	0x03E7C020 B.NE 0x3E7C040
	0x03E7C024 MOV X2, X31
	0x03E7C028 BL 0x3E6A940
	0x03E7C02C AND X19, X0, 0xFFFF
	0x03E7C030 MOV X0, X19
	0x03E7C034 LDP X20, X19, [X31 + 0x10]
	0x03E7C038 LDR X30, [X31], #0x20
	0x03E7C03C RET
	0x03E7C040 LDP X20, X19, [X31 + 0x10]
	0x03E7C044 MOV X2, X31
	0x03E7C048 LDR X30, [X31], #0x20
	0x03E7C04C B 0x3E6AAA0
	0x03E7C050 LDRB W8, [X0 + 0x38]
	0x03E7C054 CMP W8, 0x7E
	0x03E7C058 B.CC 0x3E7C06C
	0x03E7C05C MOVZ W8, 0x8
	0x03E7C060 MOVZ W9, 0x2
	0x03E7C064 CSEL W0, W9, W8, EQ
	0x03E7C068 RET
	0x03E7C06C MOV W0, W31
	0x03E7C070 RET

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+32], X24
	004 Move [X31+40], X23
	005 Move [X31+48], X22
	006 Move [X31+56], X21
	007 Move [X31+64], X20
	008 Move [X31+72], X19
	009 Move X23, 0x56E000
	010 Move X20, 0x27A000
	011 Move X22, 0x2F2000
	012 Move X21, 0x2F2000
	013 Move W8, [X23+3472]
	014 Move X20, [X20+2544]
	015 Move X22, [X22+2600]
	016 Move X21, [X21+2608]
	017 Move X19, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {66}
	022 Move X0, 0x282000
	023 Move X0, [X0+2264]
	024 Call 0x1C17CF4
	025 Move X0, 0x27A000
	026 Move X0, [X0+2544]
	027 Call 0x1C17CF4
	028 Move X0, 0x279000
	029 Move X0, [X0+1880]
	030 Call 0x1C17CF4
	031 Move X0, 0x2F2000
	032 Move X0, [X0+2600]
	033 Call 0x1C17CF4
	034 Move X0, 0x279000
	035 Move X0, [X0+2512]
	036 Call 0x1C17CF4
	037 Move X0, 0x279000
	038 Move X0, [X0+2288]
	039 Call 0x1C17CF4
	040 Move X0, 0x27A000
	041 Move X0, [X0+4064]
	042 Call 0x1C17CF4
	043 Move X0, 0x2A1000
	044 Move X0, [X0+2712]
	045 Call 0x1C17CF4
	046 Move X0, 0x2F2000
	047 Move X0, [X0+2616]
	048 Call 0x1C17CF4
	049 Move X0, 0x2B7000
	050 Move X0, [X0+1056]
	051 Call 0x1C17CF4
	052 Move X0, 0x2F2000
	053 Move X0, [X0+2624]
	054 Call 0x1C17CF4
	055 Move X0, 0x2F2000
	056 Move X0, [X0+2632]
	057 Call 0x1C17CF4
	058 Move X0, 0x2F2000
	059 Move X0, [X0+2608]
	060 Call 0x1C17CF4
	061 Move X0, 0x279000
	062 Move X0, [X0+2440]
	063 Call 0x1C17CF4
	064 Move W8, 1
	065 Move [X23+3472], W8
	066 Move X8, [X19+24]
	067 Move X0, [X20]
	068 Add X1, X31, 24
	069 Move [X31+24], X8
	070 Call 0x1C17E04
	071 Move X20, X0
	072 Move W8, [X19+32]
	073 Move X0, [X22]
	074 Add X1, X31, 12
	075 Move [X31+12], W8
	076 Call 0x1C17E04
	077 Move X8, [X21]
	078 Move X2, X0
	079 Move X1, X20
	080 Move X3, X31
	081 Move X0, X8
	082 Call String.Format, X0, X1, X2
	083 Move X8, [X19+16]
	084 Compare X8, 0
	085 JumpIfEqual {329}
	086 Move X9, [X8]
	087 Move X20, X0
	088 Move X0, X8
	089 Move X10, [X9+424]
	090 Move X1, [X9+432]
	091 NotImplemented "Instruction BLR not yet implemented."
	092 Compare X0, 0
	093 JumpIfEqual {329}
	094 Move X8, [X0]
	095 Move X22, X0
	096 Move X9, [X8+440]
	097 Move X1, [X8+448]
	098 NotImplemented "Instruction BLR not yet implemented."
	099 Move X8, [X19+16]
	100 Compare X8, 0
	101 JumpIfEqual {329}
	102 Move X9, [X8]
	103 Move X21, 0x279000
	104 Move X24, X0
	105 Move X0, X8
	106 Move X10, [X9+376]
	107 Move X1, [X9+384]
	108 Move X21, [X21+2512]
	109 NotImplemented "Instruction BLR not yet implemented."
	110 Move X8, [X21]
	111 Move W23, W0
	112 Move W1, 4
	113 Move X0, X8
	114 Call 0x1C17D6C
	115 Compare X0, 0
	116 JumpIfEqual {329}
	117 Move X21, X0
	118 Compare X20, 0
	119 JumpIfEqual {126}
	120 Move X8, [X21]
	121 Move X0, X20
	122 Move X1, [X8+64]
	123 Call 0x1C17E00
	124 Compare X0, 0
	125 JumpIfEqual {331}
	126 Move W8, [X21+24]
	127 Compare W8, 0
	128 JumpIfEqual {330}
	129 Move [X21+32], X20
	130 Compare X24, 0
	131 JumpIfEqual {329}
	132 Move X8, [X24]
	133 Move X0, X24
	134 Move X9, [X8+424]
	135 Move X1, [X8+432]
	136 NotImplemented "Instruction BLR not yet implemented."
	137 Move X24, X0
	138 Compare X0, 0
	139 JumpIfEqual {146}
	140 Move X8, [X21]
	141 Move X0, X24
	142 Move X1, [X8+64]
	143 Call 0x1C17E00
	144 Compare X0, 0
	145 JumpIfEqual {331}
	146 Move W8, [X21+24]
	147 NotImplemented "Instruction CMP not yet implemented."
	148 Move [X21+40], X24
	149 Move X8, [X22]
	150 Move X0, X22
	151 Move X9, [X8+424]
	152 Move X1, [X8+432]
	153 NotImplemented "Instruction BLR not yet implemented."
	154 Move X22, X0
	155 Compare X0, 0
	156 JumpIfEqual {163}
	157 Move X8, [X21]
	158 Move X0, X22
	159 Move X1, [X8+64]
	160 Call 0x1C17E00
	161 Compare X0, 0
	162 JumpIfEqual {331}
	163 Move W8, [X21+24]
	164 NotImplemented "Instruction CMP not yet implemented."
	165 Move X24, 0x279000
	166 Move X24, [X24+1880]
	167 Move [X21+48], X22
	168 Add X1, X31, 8
	169 Move [X31+8], W23
	170 Move X0, [X24]
	171 Call 0x1C17E04
	172 Move X22, X0
	173 Compare X0, 0
	174 JumpIfEqual {181}
	175 Move X8, [X21]
	176 Move X0, X22
	177 Move X1, [X8+64]
	178 Call 0x1C17E00
	179 Compare X0, 0
	180 JumpIfEqual {331}
	181 Move W8, [X21+24]
	182 NotImplemented "Instruction CMP not yet implemented."
	183 Move X8, 0x2F2000
	184 Move X8, [X8+2632]
	185 Move [X21+56], X22
	186 Move X1, X21
	187 Move X2, X31
	188 Move X0, [X8]
	189 Call String.Format, X0, X1
	190 Move X8, [X19+40]
	191 Compare X8, 0
	192 JumpIfEqual {329}
	193 Move X9, 0x2B7000
	194 Move X10, 0x27A000
	195 Move X9, [X9+1056]
	196 Move X10, [X10+4064]
	197 Move X23, 0x282000
	198 Move X22, X0
	199 Move X1, [X9]
	200 Move X2, [X10]
	201 Move X23, [X23+2264]
	202 Move X0, X8
	203 Move X3, X31
	204 Call String.Replace, X0, X1, X2
	205 Move X8, [X23]
	206 Move X21, X0
	207 Move W1, 1
	208 Move X0, X8
	209 Call 0x1C17D6C
	210 Compare X0, 0
	211 JumpIfEqual {329}
	212 Move W8, [X0+24]
	213 Move X1, X0
	214 Compare W8, 0
	215 JumpIfEqual {330}
	216 Move W8, 10
	217 NotImplemented "Instruction STRH not yet implemented."
	218 Compare X21, 0
	219 JumpIfEqual {329}
	220 Move X0, X21
	221 Move X2, X31
	222 Call String.TrimEnd, X0, X1
	223 Move X8, [X23]
	224 Move X21, X0
	225 Move W1, 1
	226 Move X0, X8
	227 Call 0x1C17D6C
	228 Compare X0, 0
	229 JumpIfEqual {329}
	230 Move W8, [X0+24]
	231 Move X1, X0
	232 Compare W8, 0
	233 JumpIfEqual {330}
	234 Move W8, 10
	235 NotImplemented "Instruction STRH not yet implemented."
	236 Compare X21, 0
	237 JumpIfEqual {329}
	238 Move X0, X21
	239 Move X2, X31
	240 Call String.Split, X0, X1
	241 Compare X0, 0
	242 JumpIfEqual {329}
	243 Move W8, [X0+24]
	244 Move X21, X0
	245 NotImplemented "Instruction CMP not yet implemented."
	246 Move X8, 0x2A1000
	247 Move X2, [X19+40]
	248 Move X8, [X8+2712]
	249 Move X1, X22
	250 Move X3, X31
	251 Move X0, [X8]
	252 Call String.Format, X0, X1, X2
	253 Move X8, 0x2F2000
	254 Move X2, [X21+32]
	255 Move X8, [X8+2616]
	256 Move X1, X22
	257 Move X3, X31
	258 Move X0, [X8]
	259 Call String.Format, X0, X1, X2
	260 Move X8, 0x279000
	261 Move X8, [X8+2288]
	262 Move X22, X0
	263 Move X8, [X8]
	264 Move X0, X8
	265 Call 0x1C17F10
	266 Move W2, 64
	267 Move X1, X22
	268 Move X3, X31
	269 Move X19, X0
	270 Call StringBuilder..ctor, X0, X1, X2
	271 Compare X20, 0
	272 JumpIfEqual {329}
	273 Move W8, [X20+16]
	274 Move X0, [X24]
	275 Add X1, X31, 24
	276 Move [X31+24], W8
	277 Call 0x1C17E04
	278 Move X8, 0x2F2000
	279 Move X8, [X8+2624]
	280 Move X1, X0
	281 Move X2, X31
	282 Move X8, [X8]
	283 Move X0, X8
	284 Call String.Format, X0, X1
	285 Move X8, [X21+24]
	286 NotImplemented "Instruction CMP not yet implemented."
	287 Move X23, 0x279000
	288 Move X23, [X23+2440]
	289 Move X20, X0
	290 And X8, X8, 0
	291 Move W22, 5
	292 Subtract X9, X22, 4
	293 NotImplemented "Instruction CMP not yet implemented."
	294 Compare X19, 0
	295 JumpIfEqual {329}
	296 Move X3, [X21]
	297 Move X2, [X23]
	298 Move X0, X19
	299 Move X1, X20
	300 Move X4, X31
	301 Call StringBuilder.AppendFormat, X0, X1, X2, X3
	302 Move W8, [X21+24]
	303 Subtract X9, X22, 3
	304 Add X22, X22, 1
	305 NotImplemented "Instruction CMP not yet implemented."
	306 Compare X19, 0
	307 JumpIfEqual {329}
	308 Move X0, X19
	309 Move X1, X31
	310 Call StringBuilder.get_Length, X0
	311 Subtract W1, W0, 1
	312 Move X0, X19
	313 Move X2, X31
	314 Call StringBuilder.set_Length, X0, X1
	315 Move X8, [X19]
	316 Move X0, X19
	317 Move X9, [X8+360]
	318 Move X1, [X8+368]
	319 NotImplemented "Instruction BLR not yet implemented."
	320 Move X20, [X31+64]
	321 Move X19, [X31+72]
	322 Move X22, [X31+48]
	323 Move X21, [X31+56]
	324 Move X24, [X31+32]
	325 Move X23, [X31+40]
	326 Move X30, [X31+16]
	327 Add X31, X31, 80
	328 Return X0
	329 Call 0x1C17F20
	330 Call 0x1C17F28
	331 Call 0x1C17F44
	332 Move X1, X31
	333 Call 0x1C17DEC

