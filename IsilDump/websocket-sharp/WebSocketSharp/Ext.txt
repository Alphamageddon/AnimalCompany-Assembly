Type: WebSocketSharp.Ext

Method: System.Byte[] compress(System.Byte[] data)

Disassembly:
	0x03E67FD0 MOV X0, X19
	0x03E67FD4 MOV X2, X31
	0x03E67FD8 LDR X1, [X8]
	0x03E67FDC BL 0x321BA08
	0x03E67FE0 TBNZ X0, 0x0, 0x3E680B4
	0x03E67FE4 ADRP X8, 0x2D4000
	0x03E67FE8 LDR X8, [X8 + 0x600]
	0x03E67FEC B 0x3E680D8
	0x03E67FF0 CMP W9, 0x77
	0x03E67FF4 B.NE 0x3E680B8
	0x03E67FF8 ADRP X8, 0x295000
	0x03E67FFC LDR X8, [X8 + 0x3A8]
	0x03E68000 MOV X0, X19
	0x03E68004 MOV X2, X31
	0x03E68008 LDR X1, [X8]
	0x03E6800C BL 0x321BA08
	0x03E68010 TBNZ X0, 0x0, 0x3E680B4
	0x03E68014 ADRP X8, 0x2C8000
	0x03E68018 LDR X8, [X8 + 0xDE8]
	0x03E6801C B 0x3E680D8
	0x03E68020 ADRP X8, 0x2D3000
	0x03E68024 LDR X8, [X8 + 0x618]
	0x03E68028 B 0x3E680D8
	0x03E6802C ADRP X8, 0x2C7000
	0x03E68030 LDR X8, [X8 + 0x5E8]
	0x03E68034 MOV X0, X19
	0x03E68038 MOV X2, X31
	0x03E6803C LDR X1, [X8]
	0x03E68040 BL 0x321BA08
	0x03E68044 TBNZ X0, 0x0, 0x3E680B4
	0x03E68048 ADRP X8, 0x2C9000
	0x03E6804C LDR X8, [X8 + 0x4C8]
	0x03E68050 B 0x3E680D8
	0x03E68054 ADRP X8, 0x2D3000
	0x03E68058 LDR X8, [X8 + 0x630]
	0x03E6805C B 0x3E680D8
	0x03E68060 MOVZ W1, 0x1
	0x03E68064 MOV X0, X19
	0x03E68068 MOV X2, X31
	0x03E6806C BL 0x3222A1C
	0x03E68070 AND W8, W0, 0xFFFF
	0x03E68074 CMP W8, 0x65
	0x03E68078 B.NE 0x3E680C4
	0x03E6807C ADRP X8, 0x2D3000
	0x03E68080 LDR X8, [X8 + 0x5F0]
	0x03E68084 MOV X0, X19
	0x03E68088 MOV X2, X31
	0x03E6808C LDR X1, [X8]
	0x03E68090 BL 0x321BA08
	0x03E68094 TBNZ X0, 0x0, 0x3E680B4
	0x03E68098 ADRP X8, 0x2D3000
	0x03E6809C LDR X8, [X8 + 0x5E0]
	0x03E680A0 MOV X0, X19
	0x03E680A4 MOV X2, X31
	0x03E680A8 LDR X1, [X8]
	0x03E680AC BL 0x321BA08
	0x03E680B0 TBZ X0, 0x0, 0x3E680D0
	0x03E680B4 MOVZ W0, 0x1
	0x03E680B8 LDP X20, X19, [X31 + 0x10]
	0x03E680BC LDR X30, [X31], #0x20
	0x03E680C0 RET
	0x03E680C4 ADRP X8, 0x2D3000
	0x03E680C8 LDR X8, [X8 + 0x610]
	0x03E680CC B 0x3E680D8
	0x03E680D0 ADRP X8, 0x2D3000
	0x03E680D4 LDR X8, [X8 + 0x628]
	0x03E680D8 LDR X1, [X8]
	0x03E680DC MOV X0, X19
	0x03E680E0 LDP X20, X19, [X31 + 0x10]
	0x03E680E4 MOV X2, X31
	0x03E680E8 LDR X30, [X31], #0x20
	0x03E680EC B 0x321BA08
	0x03E680F0 BL 0x1C16F20
	0x03E680F4 STR X30, [X31 - 0x30]!
	0x03E680F8 STP X22, X21, [X31 + 0x10]
	0x03E680FC STP X20, X19, [X31 + 0x20]
	0x03E68100 ADRP X22, 0x580000
	0x03E68104 ADRP X21, 0x292000
	0x03E68108 LDRB W8, [X22 + 0xCD1]
	0x03E6810C LDR X21, [X21 + 0x248]
	0x03E68110 MOV X19, X1
	0x03E68114 MOV W20, W0
	0x03E68118 TBNZ X8, 0x0, 0x3E68160
	0x03E6811C ADRP X0, 0x292000
	0x03E68120 LDR X0, [X0 + 0x248]
	0x03E68124 BL 0x1C16CF4
	0x03E68128 ADRP X0, 0x303000
	0x03E6812C LDR X0, [X0 + 0xEB8]
	0x03E68130 BL 0x1C16CF4
	0x03E68134 ADRP X0, 0x2B8000
	0x03E68138 LDR X0, [X0 + 0x5D0]
	0x03E6813C BL 0x1C16CF4
	0x03E68140 ADRP X0, 0x304000
	0x03E68144 LDR X0, [X0 + 0x228]
	0x03E68148 BL 0x1C16CF4
	0x03E6814C ADRP X0, 0x28F000
	0x03E68150 LDR X0, [X0 + 0x808]
	0x03E68154 BL 0x1C16CF4
	0x03E68158 MOVZ W8, 0x1
	0x03E6815C STRB W8, [X22 + 0xCD1]
	0x03E68160 LDR X0, [X21]
	0x03E68164 LDR W8, [X0 + 0xE0]
	0x03E68168 CBNZ W8, 0x3E68170
	0x03E6816C BL 0x1C16DFC
	0x03E68170 MOVZ W1, 0x1
	0x03E68174 MOV W0, W20
	0x03E68178 BL 0x3E68228
	0x03E6817C MOV X21, X0
	0x03E68180 CBZ X19, 0x3E68210
	0x03E68184 LDR W8, [X19 + 0x10]
	0x03E68188 CBZ W8, 0x3E68210
	0x03E6818C ADRP X8, 0x28F000
	0x03E68190 LDR X8, [X8 + 0x808]
	0x03E68194 LDR X0, [X8]
	0x03E68198 BL 0x1C16F10
	0x03E6819C ADRP X8, 0x304000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, 0x582000
	006 Move W8, [X19+3272]
	007 Move X21, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {23}
	012 Move X0, 0x294000
	013 Move X0, [X0+584]
	014 Call 0x1C17CF4
	015 Move X0, 0x28D000
	016 Move X0, [X0+3584]
	017 Call 0x1C17CF4
	018 Move X0, 0x294000
	019 Move X0, [X0+1368]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X19+3272], W8
	023 Compare X21, 0
	024 JumpIfEqual {80}
	025 Move W8, [X21+24]
	026 Compare W8, 0
	027 JumpIfEqual {74}
	028 Move X8, 0x294000
	029 Move X8, [X8+1368]
	030 Move X20, 0x293000
	031 Move X0, [X8]
	032 Move X20, [X20+584]
	033 Call 0x1C17F10
	034 Move X1, X21
	035 Move X2, X31
	036 Move X19, X0
	037 Call MemoryStream..ctor, X0, X1
	038 Move X0, [X20]
	039 Move W8, [X0+224]
	040 Compare W8, 0
	041 JumpIfNotEqual {43}
	042 Call 0x1C17DFC
	043 Move X0, X19
	044 Call Ext.compressToArray, X0
	045 Move X21, X0
	046 Move X20, X31
	047 Compare X19, 0
	048 JumpIfEqual {72}
	049 Move X10, 0x28C000
	050 Move X8, [X19]
	051 Move X10, [X10+3584]
	052 NotImplemented "Instruction LDRH not yet implemented."
	053 Move X1, [X10]
	054 Compare X9, 0
	055 JumpIfEqual {62}
	056 Move X10, [X8+176]
	057 Add X10, X10, 8
	058 NotImplemented "Instruction LDUR not yet implemented."
	059 NotImplemented "Instruction CMP not yet implemented."
	060 Subtract X9, X9, 1
	061 Add X10, X10, 16
	062 Move X0, X19
	063 Move W2, W31
	064 Call 0x1C5D788
	065 NotImplemented "Instruction LDRSW not yet implemented."
	066 Add X8, X8, X9
	067 Add X0, X8, 312
	068 Move X8, [X0]
	069 Move X1, [X0+8]
	070 Move X0, X19
	071 NotImplemented "Instruction BLR not yet implemented."
	072 Compare X20, 0
	073 JumpIfNotEqual {81}
	074 Move X20, [X31+16]
	075 Move X19, [X31+24]
	076 Move X0, X21
	077 Move X30, [X31+32]
	078 Move X21, [X31+40]
	079 Return X0
	080 Call 0x1C17F20
	081 Move X0, X20
	082 Call 0x1C17F18
	083 Move X21, X0
	084 NotImplemented "Instruction CMP not yet implemented."
	085 Move X0, X21
	086 Call 0x3EB2AD0
	087 Move X20, [X0]
	088 Call 0x3EB2AE0
	089 Move X21, X31
	090 Compare X19, 0
	091 JumpIfNotEqual {49}
	092 Move X20, X31
	093 Move X21, X0
	094 Compare X19, 0
	095 JumpIfEqual {119}
	096 Move X10, 0x28C000
	097 Move X8, [X19]
	098 Move X10, [X10+3584]
	099 NotImplemented "Instruction LDRH not yet implemented."
	100 Move X1, [X10]
	101 Compare X9, 0
	102 JumpIfEqual {109}
	103 Move X10, [X8+176]
	104 Add X10, X10, 8
	105 NotImplemented "Instruction LDUR not yet implemented."
	106 NotImplemented "Instruction CMP not yet implemented."
	107 Subtract X9, X9, 1
	108 Add X10, X10, 16
	109 Move X0, X19
	110 Move W2, W31
	111 Call 0x1C5D788
	112 NotImplemented "Instruction LDRSW not yet implemented."
	113 Add X8, X8, X9
	114 Add X0, X8, 312
	115 Move X8, [X0]
	116 Move X1, [X0+8]
	117 Move X0, X19
	118 NotImplemented "Instruction BLR not yet implemented."
	119 Compare X20, 0
	120 JumpIfNotEqual {123}
	121 Move X0, X21
	122 Call 0x1D2D690
	123 Move X0, X20
	124 Call 0x1C17F18
	125 Call 0x1991590

Method: System.IO.MemoryStream compress(System.IO.Stream stream)

Disassembly:
	0x03E68364 ADRP X8, 0x292000
	0x03E68368 LDR X8, [X8 + 0x248]
	0x03E6836C LDR X0, [X8]
	0x03E68370 LDR W8, [X0 + 0xE0]
	0x03E68374 CBNZ W8, 0x3E6837C
	0x03E68378 BL 0x1C16DFC
	0x03E6837C MOV X0, X19
	0x03E68380 LDP X20, X19, [X31 + 0x10]
	0x03E68384 LDP X30, X21, [X31], #0x20
	0x03E68388 B 0x3E67364
	0x03E6838C MOV X0, X19
	0x03E68390 LDP X20, X19, [X31 + 0x10]
	0x03E68394 LDP X30, X21, [X31], #0x20
	0x03E68398 RET
	0x03E6839C STR X30, [X31 - 0x30]!
	0x03E683A0 STP X22, X21, [X31 + 0x10]
	0x03E683A4 STP X20, X19, [X31 + 0x20]
	0x03E683A8 ADRP X21, 0x580000
	0x03E683AC ADRP X22, 0x292000
	0x03E683B0 LDRB W8, [X21 + 0xCD4]
	0x03E683B4 LDR X22, [X22 + 0x248]
	0x03E683B8 MOV W20, W1
	0x03E683BC MOV X19, X0
	0x03E683C0 TBNZ X8, 0x0, 0x3E683D8
	0x03E683C4 ADRP X0, 0x292000
	0x03E683C8 LDR X0, [X0 + 0x248]
	0x03E683CC BL 0x1C16CF4
	0x03E683D0 MOVZ W8, 0x1
	0x03E683D4 STRB W8, [X21 + 0xCD4]
	0x03E683D8 LDR X0, [X22]
	0x03E683DC LDR W8, [X0 + 0xE0]
	0x03E683E0 CBNZ W8, 0x3E683E8
	0x03E683E4 BL 0x1C16DFC
	0x03E683E8 AND W8, W20, 0xFF
	0x03E683EC MOV X0, X19
	0x03E683F0 CMP W8, 0x1
	0x03E683F4 B.NE 0x3E68408
	0x03E683F8 LDP X20, X19, [X31 + 0x20]
	0x03E683FC LDP X22, X21, [X31 + 0x10]
	0x03E68400 LDR X30, [X31], #0x30
	0x03E68404 B 0x3E671A0
	0x03E68408 LDP X20, X19, [X31 + 0x20]
	0x03E6840C LDP X22, X21, [X31 + 0x10]
	0x03E68410 LDR X30, [X31], #0x30
	0x03E68414 B 0x3E68418
	0x03E68418 STR X30, [X31 - 0x30]!
	0x03E6841C STP X22, X21, [X31 + 0x10]
	0x03E68420 STP X20, X19, [X31 + 0x20]
	0x03E68424 ADRP X19, 0x580000
	0x03E68428 LDRB W8, [X19 + 0xCEE]
	0x03E6842C MOV X20, X0
	0x03E68430 TBNZ X8, 0x0, 0x3E68460
	0x03E68434 ADRP X0, 0x292000
	0x03E68438 LDR X0, [X0 + 0x248]
	0x03E6843C BL 0x1C16CF4
	0x03E68440 ADRP X0, 0x28B000
	0x03E68444 LDR X0, [X0 + 0xE00]
	0x03E68448 BL 0x1C16CF4
	0x03E6844C ADRP X0, 0x293000
	0x03E68450 LDR X0, [X0 + 0x558]
	0x03E68454 BL 0x1C16CF4
	0x03E68458 MOVZ W8, 0x1
	0x03E6845C STRB W8, [X19 + 0xCEE]
	0x03E68460 CBZ X20, 0x3E6856C
	0x03E68464 LDR X8, [X20]
	0x03E68468 ADRP X19, 0x293000
	0x03E6846C ADRP X21, 0x292000
	0x03E68470 ADRP X22, 0x28B000
	0x03E68474 LDR X9, [X8 + 0x208]
	0x03E68478 LDR X2, [X8 + 0x210]
	0x03E6847C LDR X19, [X19 + 0x558]
	0x03E68480 LDR X21, [X21 + 0x248]
	0x03E68484 LDR X22, [X22 + 0xE00]
	0x03E68488 MOV X0, X20
	0x03E6848C MOV X1, X31
	0x03E68490 BLR X9
	0x03E68494 LDR X0, [X19]
	0x03E68498 BL 0x1C16F10
	0x03E6849C MOV X1, X31
	0x03E684A0 MOV X19, X0
	0x03E684A4 BL 0x32E23B4
	0x03E684A8 LDR X0, [X21]
	0x03E684AC LDR W8, [X0 + 0xE0]
	0x03E684B0 CBNZ W8, 0x3E684B8
	0x03E684B4 BL 0x1C16DFC
	0x03E684B8 MOVZ W2, 0x400
	0x03E684BC MOV X0, X20
	0x03E684C0 MOV X1, X19
	0x03E684C4 BL 0x3E675F4
	0x03E684C8 CBZ X19, 0x3E68578
	0x03E684CC LDR X8, [X19]
	0x03E684D0 LDR X1, [X8 + 0x280]
	0x03E684D4 LDR X9, [X8 + 0x278]
	0x03E684D8 MOV X0, X19
	0x03E684DC BLR X9
	0x03E684E0 LDR X8, [X19]
	0x03E684E4 LDR X1, [X8 + 0x400]
	0x03E684E8 LDR X9, [X8 + 0x3F8]
	0x03E684EC MOV X0, X19
	0x03E684F0 BLR X9
	0x03E684F4 MOV X21, X0
	0x03E684F8 MOV X20, X31
	0x03E684FC LDR X8, [X19]
	0x03E68500 LDR X1, [X22]
	0x03E68504 LDRH W9, [X8 + 0x12E]
	0x03E68508 CBZ X9, 0x3E6852C
	0x03E6850C LDR X10, [X8 + 0xB0]
	0x03E68510 ADD X10, X10, 0x8
	0x03E68514 LDUR X11, [X10 - 0x8]
	0x03E68518 CMP X11, X1
	0x03E6851C B.EQ 0x3E6853C
	0x03E68520 SUBS X9, X9, 0x1
	0x03E68524 ADD X10, X10, 0x10
	0x03E68528 B.NE 0x3E68514
	0x03E6852C MOV X0, X19
	0x03E68530 MOV W2, W31
	0x03E68534 BL 0x1C5C788
	0x03E68538 B 0x3E68548
	0x03E6853C LDRSW X9, [X10]
	0x03E68540 ADD X8, X8, X9, 0x4, LSL
	0x03E68544 ADD X0, X8, 0x138
	0x03E68548 LDP X8, X1, [X0]
	0x03E6854C MOV X0, X19
	0x03E68550 BLR X8
	0x03E68554 CBNZ X20, 0x3E68570
	0x03E68558 MOV X0, X21
	0x03E6855C LDP X20, X19, [X31 + 0x20]
	0x03E68560 LDP X22, X21, [X31 + 0x10]
	0x03E68564 LDR X30, [X31], #0x30
	0x03E68568 RET
	0x03E6856C BL 0x1C16F20
	0x03E68570 MOV X0, X20
	0x03E68574 BL 0x1C16F18
	0x03E68578 BL 0x1C16F20
	0x03E6857C B 0x3E68584
	0x03E68580 B 0x3E68584
	0x03E68584 MOV X21, X0
	0x03E68588 CMP W1, 0x1
	0x03E6858C B.NE 0x3E685AC
	0x03E68590 MOV X0, X21
	0x03E68594 BL 0x3EB1AD0
	0x03E68598 LDR X20, [X0]
	0x03E6859C BL 0x3EB1AE0
	0x03E685A0 MOV X21, X31
	0x03E685A4 CBNZ X19, 0x3E684FC
	0x03E685A8 B 0x3E68554
	0x03E685AC MOV X20, X31
	0x03E685B0 B 0x3E685B8
	0x03E685B4 MOV X21, X0
	0x03E685B8 CBZ X19, 0x3E68614
	0x03E685BC LDR X8, [X19]
	0x03E685C0 LDR X1, [X22]
	0x03E685C4 LDRH W9, [X8 + 0x12E]
	0x03E685C8 CBZ X9, 0x3E685EC
	0x03E685CC LDR X10, [X8 + 0xB0]
	0x03E685D0 ADD X10, X10, 0x8
	0x03E685D4 LDUR X11, [X10 - 0x8]
	0x03E685D8 CMP X11, X1
	0x03E685DC B.EQ 0x3E685FC
	0x03E685E0 SUBS X9, X9, 0x1
	0x03E685E4 ADD X10, X10, 0x10
	0x03E685E8 B.NE 0x3E685D4
	0x03E685EC MOV X0, X19
	0x03E685F0 MOV W2, W31

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X19, 0x581000
	008 Move X20, 0x294000
	009 Move W8, [X19+3273]
	010 Move X20, [X20+1368]
	011 Move X21, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {30}
	016 Move X0, 0x2CA000
	017 Move X0, [X0+2584]
	018 Call 0x1C17CF4
	019 Move X0, 0x293000
	020 Move X0, [X0+584]
	021 Call 0x1C17CF4
	022 Move X0, 0x28C000
	023 Move X0, [X0+3584]
	024 Call 0x1C17CF4
	025 Move X0, 0x294000
	026 Move X0, [X0+1368]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X19+3273], W8
	030 Move X0, [X20]
	031 Call 0x1C17F10
	032 Move X1, X31
	033 Move X20, X0
	034 Call MemoryStream..ctor, X0
	035 Compare X21, 0
	036 JumpIfEqual {130}
	037 Move X8, [X21]
	038 Move X0, X21
	039 Move X9, [X8+488]
	040 Move X1, [X8+496]
	041 NotImplemented "Instruction BLR not yet implemented."
	042 Compare X0, 0
	043 JumpIfEqual {122}
	044 Move X8, [X21]
	045 Move X19, 0x2CA000
	046 Move X23, 0x293000
	047 Move X22, 0x28C000
	048 Move X9, [X8+520]
	049 Move X2, [X8+528]
	050 Move X19, [X19+2584]
	051 Move X23, [X23+584]
	052 Move X22, [X22+3584]
	053 Move X0, X21
	054 Move X1, X31
	055 NotImplemented "Instruction BLR not yet implemented."
	056 Move X0, [X19]
	057 Call 0x1C17F10
	058 Move W2, 1
	059 Move W3, 1
	060 Move X1, X20
	061 Move X4, X31
	062 Move X19, X0
	063 Call DeflateStream..ctor, X0, X1, X2, X3
	064 Move X0, [X23]
	065 Move W8, [X0+224]
	066 Compare W8, 0
	067 JumpIfNotEqual {69}
	068 Call 0x1C17DFC
	069 Move W2, 1024
	070 Move X0, X21
	071 Move X1, X19
	072 Call Ext.CopyTo, X0, X1, X2
	073 Compare X19, 0
	074 JumpIfEqual {133}
	075 Move X8, [X19]
	076 Move X1, [X8+640]
	077 Move X9, [X8+632]
	078 Move X0, X19
	079 NotImplemented "Instruction BLR not yet implemented."
	080 Compare X20, 0
	081 JumpIfEqual {134}
	082 Move X8, [X23]
	083 Move X9, [X20]
	084 Move X8, [X8+184]
	085 Move X10, [X9+904]
	086 Move X4, [X9+912]
	087 Move X1, [X8]
	088 Move W3, 1
	089 Move X0, X20
	090 Move W2, W31
	091 NotImplemented "Instruction BLR not yet implemented."
	092 Move X8, [X20]
	093 Move X9, [X8+520]
	094 Move X2, [X8+528]
	095 Move X0, X20
	096 Move X1, X31
	097 NotImplemented "Instruction BLR not yet implemented."
	098 Move X21, X31
	099 Move X8, [X19]
	100 Move X1, [X22]
	101 NotImplemented "Instruction LDRH not yet implemented."
	102 Compare X9, 0
	103 JumpIfEqual {110}
	104 Move X10, [X8+176]
	105 Add X10, X10, 8
	106 NotImplemented "Instruction LDUR not yet implemented."
	107 NotImplemented "Instruction CMP not yet implemented."
	108 Subtract X9, X9, 1
	109 Add X10, X10, 16
	110 Move X0, X19
	111 Move W2, W31
	112 Call 0x1C5D788
	113 NotImplemented "Instruction LDRSW not yet implemented."
	114 Add X8, X8, X9
	115 Add X0, X8, 312
	116 Move X8, [X0]
	117 Move X1, [X0+8]
	118 Move X0, X19
	119 NotImplemented "Instruction BLR not yet implemented."
	120 Compare X21, 0
	121 JumpIfNotEqual {131}
	122 Move X0, X20
	123 Move X20, [X31+32]
	124 Move X19, [X31+40]
	125 Move X22, [X31+16]
	126 Move X21, [X31+24]
	127 Move X30, [X31+48]
	128 Move X23, [X31+56]
	129 Return X0
	130 Call 0x1C17F20
	131 Move X0, X21
	132 Call 0x1C17F18
	133 Call 0x1C17F20
	134 Call 0x1C17F20
	135 Move X20, X0
	136 NotImplemented "Instruction CMP not yet implemented."
	137 Move X0, X20
	138 Call 0x3EB2AD0
	139 Move X21, [X0]
	140 Call 0x3EB2AE0
	141 Move X20, X31
	142 Compare X19, 0
	143 JumpIfNotEqual {99}
	144 Move X21, X31
	145 Move X20, X0
	146 Compare X19, 0
	147 JumpIfEqual {169}
	148 Move X8, [X19]
	149 Move X1, [X22]
	150 NotImplemented "Instruction LDRH not yet implemented."
	151 Compare X9, 0
	152 JumpIfEqual {159}
	153 Move X10, [X8+176]
	154 Add X10, X10, 8
	155 NotImplemented "Instruction LDUR not yet implemented."
	156 NotImplemented "Instruction CMP not yet implemented."
	157 Subtract X9, X9, 1
	158 Add X10, X10, 16
	159 Move X0, X19
	160 Move W2, W31
	161 Call 0x1C5D788
	162 NotImplemented "Instruction LDRSW not yet implemented."
	163 Add X8, X8, X9
	164 Add X0, X8, 312
	165 Move X8, [X0]
	166 Move X1, [X0+8]
	167 Move X0, X19
	168 NotImplemented "Instruction BLR not yet implemented."
	169 Compare X21, 0
	170 JumpIfNotEqual {173}
	171 Move X0, X20
	172 Call 0x1D2D690
	173 Move X0, X21
	174 Call 0x1C17F18
	175 Call 0x1991590

Method: System.Byte[] compressToArray(System.IO.Stream stream)

Disassembly:
	0x03E681A0 LDR X8, [X8 + 0x228]
	0x03E681A4 MOV X1, X21
	0x03E681A8 MOV X20, X0
	0x03E681AC LDR X2, [X8]
	0x03E681B0 BL 0x2F67830
	0x03E681B4 MOV X0, X31
	0x03E681B8 BL 0x3241948
	0x03E681BC CBZ X0, 0x3E68224
	0x03E681C0 LDR X8, [X0]
	0x03E681C4 MOV X1, X19
	0x03E681C8 LDR X9, [X8 + 0x268]
	0x03E681CC LDR X2, [X8 + 0x270]
	0x03E681D0 BLR X9
	0x03E681D4 CBZ X20, 0x3E68224
	0x03E681D8 ADRP X8, 0x303000
	0x03E681DC LDR X8, [X8 + 0xEB8]
	0x03E681E0 MOV X1, X0
	0x03E681E4 MOV X0, X20
	0x03E681E8 LDR X2, [X8]
	0x03E681EC BL 0x2F68118
	0x03E681F0 ADRP X8, 0x2B8000
	0x03E681F4 LDR X8, [X8 + 0x5D0]
	0x03E681F8 MOV X0, X20
	0x03E681FC LDP X20, X19, [X31 + 0x20]
	0x03E68200 LDP X22, X21, [X31 + 0x10]
	0x03E68204 LDR X1, [X8]
	0x03E68208 LDR X30, [X31], #0x30
	0x03E6820C B 0x2F69CD0
	0x03E68210 MOV X0, X21
	0x03E68214 LDP X20, X19, [X31 + 0x20]
	0x03E68218 LDP X22, X21, [X31 + 0x10]
	0x03E6821C LDR X30, [X31], #0x30
	0x03E68220 RET
	0x03E68224 BL 0x1C16F20
	0x03E68228 STR X30, [X31 - 0x30]!
	0x03E6822C STP X22, X21, [X31 + 0x10]
	0x03E68230 STP X20, X19, [X31 + 0x20]
	0x03E68234 ADRP X22, 0x580000
	0x03E68238 ADRP X21, 0x292000
	0x03E6823C LDRB W8, [X22 + 0xCEF]
	0x03E68240 LDR X21, [X21 + 0x248]
	0x03E68244 MOV W19, W1
	0x03E68248 MOV W20, W0
	0x03E6824C TBNZ X8, 0x0, 0x3E68264
	0x03E68250 ADRP X0, 0x292000
	0x03E68254 LDR X0, [X0 + 0x248]
	0x03E68258 BL 0x1C16CF4
	0x03E6825C MOVZ W8, 0x1
	0x03E68260 STRB W8, [X22 + 0xCEF]
	0x03E68264 MOV W0, W20
	0x03E68268 MOV X1, X31
	0x03E6826C BL 0x3316D5C
	0x03E68270 LDR X8, [X21]
	0x03E68274 MOV X20, X0
	0x03E68278 LDR W9, [X8 + 0xE0]
	0x03E6827C CBZ W9, 0x3E682A4
	0x03E68280 CBZ W19, 0x3E68290
	0x03E68284 MOV X0, X20
	0x03E68288 MOV X1, X31
	0x03E6828C BL 0x33A1B08
	0x03E68290 MOV X0, X20
	0x03E68294 LDP X20, X19, [X31 + 0x20]
	0x03E68298 LDP X22, X21, [X31 + 0x10]
	0x03E6829C LDR X30, [X31], #0x30
	0x03E682A0 RET
	0x03E682A4 MOV X0, X8
	0x03E682A8 BL 0x1C16DFC
	0x03E682AC CBNZ W19, 0x3E68284
	0x03E682B0 B 0x3E68290
	0x03E682B4 STP X30, X21, [X31 - 0x20]!
	0x03E682B8 STP X20, X19, [X31 + 0x10]
	0x03E682BC ADRP X21, 0x580000
	0x03E682C0 LDRB W8, [X21 + 0xCD2]
	0x03E682C4 MOV W20, W1
	0x03E682C8 MOV X19, X0
	0x03E682CC TBNZ X8, 0x0, 0x3E682E4
	0x03E682D0 ADRP X0, 0x292000
	0x03E682D4 LDR X0, [X0 + 0x248]
	0x03E682D8 BL 0x1C16CF4
	0x03E682DC MOVZ W8, 0x1
	0x03E682E0 STRB W8, [X21 + 0xCD2]
	0x03E682E4 AND W8, W20, 0xFF
	0x03E682E8 CMP W8, 0x1
	0x03E682EC B.NE 0x3E68318
	0x03E682F0 ADRP X8, 0x292000
	0x03E682F4 LDR X8, [X8 + 0x248]
	0x03E682F8 LDR X0, [X8]
	0x03E682FC LDR W8, [X0 + 0xE0]
	0x03E68300 CBNZ W8, 0x3E68308
	0x03E68304 BL 0x1C16DFC
	0x03E68308 MOV X0, X19
	0x03E6830C LDP X20, X19, [X31 + 0x10]
	0x03E68310 LDP X30, X21, [X31], #0x20
	0x03E68314 B 0x3E66FD0
	0x03E68318 MOV X0, X19
	0x03E6831C LDP X20, X19, [X31 + 0x10]
	0x03E68320 LDP X30, X21, [X31], #0x20
	0x03E68324 RET
	0x03E68328 STP X30, X21, [X31 - 0x20]!
	0x03E6832C STP X20, X19, [X31 + 0x10]
	0x03E68330 ADRP X21, 0x580000
	0x03E68334 LDRB W8, [X21 + 0xCD3]
	0x03E68338 MOV W20, W1
	0x03E6833C MOV X19, X0
	0x03E68340 TBNZ X8, 0x0, 0x3E68358
	0x03E68344 ADRP X0, 0x292000
	0x03E68348 LDR X0, [X0 + 0x248]
	0x03E6834C BL 0x1C16CF4
	0x03E68350 MOVZ W8, 0x1
	0x03E68354 STRB W8, [X21 + 0xCD3]
	0x03E68358 AND W8, W20, 0xFF
	0x03E6835C CMP W8, 0x1
	0x03E68360 B.NE 0x3E6838C

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x581000
	007 Move X21, 0x293000
	008 Move W8, [X20+3274]
	009 Move X21, [X21+584]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x293000
	016 Move X0, [X0+584]
	017 Call 0x1C17CF4
	018 Move X0, 0x28C000
	019 Move X0, [X0+3584]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X20+3274], W8
	023 Move X0, [X21]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Move X22, 0x28C000
	029 Move X22, [X22+3584]
	030 Move X0, X19
	031 Call Ext.compress, X0
	032 Move X19, X0
	033 Compare X0, 0
	034 JumpIfEqual {77}
	035 Move X8, [X19]
	036 Move X1, [X8+640]
	037 Move X9, [X8+632]
	038 Move X0, X19
	039 NotImplemented "Instruction BLR not yet implemented."
	040 Move X8, [X19]
	041 Move X1, [X8+1024]
	042 Move X9, [X8+1016]
	043 Move X0, X19
	044 NotImplemented "Instruction BLR not yet implemented."
	045 Move X21, X0
	046 Move X20, X31
	047 Move X8, [X19]
	048 Move X1, [X22]
	049 NotImplemented "Instruction LDRH not yet implemented."
	050 Compare X9, 0
	051 JumpIfEqual {58}
	052 Move X10, [X8+176]
	053 Add X10, X10, 8
	054 NotImplemented "Instruction LDUR not yet implemented."
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Subtract X9, X9, 1
	057 Add X10, X10, 16
	058 Move X0, X19
	059 Move W2, W31
	060 Call 0x1C5D788
	061 NotImplemented "Instruction LDRSW not yet implemented."
	062 Add X8, X8, X9
	063 Add X0, X8, 312
	064 Move X8, [X0]
	065 Move X1, [X0+8]
	066 Move X0, X19
	067 NotImplemented "Instruction BLR not yet implemented."
	068 Compare X20, 0
	069 JumpIfNotEqual {78}
	070 Move X0, X21
	071 Move X20, [X31+32]
	072 Move X19, [X31+40]
	073 Move X22, [X31+16]
	074 Move X21, [X31+24]
	075 Move X30, [X31+48]
	076 Return X0
	077 Call 0x1C17F20
	078 Move X0, X20
	079 Call 0x1C17F18
	080 Move X21, X0
	081 NotImplemented "Instruction CMP not yet implemented."
	082 Move X0, X21
	083 Call 0x3EB2AD0
	084 Move X20, [X0]
	085 Call 0x3EB2AE0
	086 Move X21, X31
	087 Compare X19, 0
	088 JumpIfNotEqual {47}
	089 Move X20, X31
	090 Move X21, X0
	091 Compare X19, 0
	092 JumpIfEqual {114}
	093 Move X8, [X19]
	094 Move X1, [X22]
	095 NotImplemented "Instruction LDRH not yet implemented."
	096 Compare X9, 0
	097 JumpIfEqual {104}
	098 Move X10, [X8+176]
	099 Add X10, X10, 8
	100 NotImplemented "Instruction LDUR not yet implemented."
	101 NotImplemented "Instruction CMP not yet implemented."
	102 Subtract X9, X9, 1
	103 Add X10, X10, 16
	104 Move X0, X19
	105 Move W2, W31
	106 Call 0x1C5D788
	107 NotImplemented "Instruction LDRSW not yet implemented."
	108 Add X8, X8, X9
	109 Add X0, X8, 312
	110 Move X8, [X0]
	111 Move X1, [X0+8]
	112 Move X0, X19
	113 NotImplemented "Instruction BLR not yet implemented."
	114 Compare X20, 0
	115 JumpIfNotEqual {118}
	116 Move X0, X21
	117 Call 0x1D2D690
	118 Move X0, X20
	119 Call 0x1C17F18
	120 Call 0x1991590

Method: System.Byte[] decompress(System.Byte[] data)

Disassembly:
	0x03E686D4 BL 0x366456C
	0x03E686D8 CBZ X0, 0x3E6877C
	0x03E686DC ADRP X8, 0x294000
	0x03E686E0 LDR X8, [X8 + 0x8D8]
	0x03E686E4 MOV X21, X0
	0x03E686E8 MOVZ W1, 0x1
	0x03E686EC LDR X0, [X8]
	0x03E686F0 BL 0x1C16D6C
	0x03E686F4 CBZ X0, 0x3E68790
	0x03E686F8 LDR W8, [X0 + 0x18]
	0x03E686FC MOV X1, X0
	0x03E68700 CBZ W8, 0x3E68794
	0x03E68704 MOVZ W8, 0x2C
	0x03E68708 MOV X0, X21
	0x03E6870C MOV X2, X31
	0x03E68710 STRH W8, [X1 + 0x20]
	0x03E68714 BL 0x3229E68
	0x03E68718 CBZ X0, 0x3E68790
	0x03E6871C LDR W8, [X0 + 0x18]
	0x03E68720 MOV X21, X0
	0x03E68724 CMP W8, 0x1
	0x03E68728 B.LT 0x3E68778
	0x03E6872C MOV W22, W31
	0x03E68730 CMP W22, W8
	0x03E68734 B.CS 0x3E68794
	0x03E68738 ADD X8, X21, W22, 0x3, SXTW
	0x03E6873C LDR X0, [X8 + 0x20]
	0x03E68740 CBZ X0, 0x3E68790
	0x03E68744 MOV X1, X31
	0x03E68748 BL 0x322B8DC
	0x03E6874C CBZ X0, 0x3E68790
	0x03E68750 MOV X1, X20
	0x03E68754 MOV W2, W19
	0x03E68758 MOV X3, X31
	0x03E6875C BL 0x322697C
	0x03E68760 TBNZ X0, 0x0, 0x3E6877C
	0x03E68764 LDR W8, [X21 + 0x18]
	0x03E68768 ADD W22, W22, 0x1
	0x03E6876C CMP W22, W8
	0x03E68770 B.LT 0x3E68730
	0x03E68774 B 0x3E6877C
	0x03E68778 MOV W0, W31
	0x03E6877C LDP X20, X19, [X31 + 0x20]
	0x03E68780 LDP X22, X21, [X31 + 0x10]
	0x03E68784 AND W0, W0, 0x1
	0x03E68788 LDP X30, X23, [X31], #0x30
	0x03E6878C RET
	0x03E68790 BL 0x1C16F20
	0x03E68794 BL 0x1C16F28
	0x03E68798 STP X30, X21, [X31 - 0x20]!
	0x03E6879C STP X20, X19, [X31 + 0x10]
	0x03E687A0 ADRP X20, 0x580000
	0x03E687A4 ADRP X21, 0x304000
	0x03E687A8 LDRB W8, [X20 + 0xCD6]
	0x03E687AC LDR X21, [X21 + 0x230]
	0x03E687B0 MOV X19, X0
	0x03E687B4 TBNZ X8, 0x0, 0x3E687E4
	0x03E687B8 ADRP X0, 0x2EB000
	0x03E687BC LDR X0, [X0 + 0xA08]
	0x03E687C0 BL 0x1C16CF4
	0x03E687C4 ADRP X0, 0x304000
	0x03E687C8 LDR X0, [X0 + 0x238]
	0x03E687CC BL 0x1C16CF4
	0x03E687D0 ADRP X0, 0x304000
	0x03E687D4 LDR X0, [X0 + 0x230]
	0x03E687D8 BL 0x1C16CF4
	0x03E687DC MOVZ W8, 0x1
	0x03E687E0 STRB W8, [X20 + 0xCD6]
	0x03E687E4 LDR X0, [X21]
	0x03E687E8 BL 0x1C16F10
	0x03E687EC MOV X1, X31
	0x03E687F0 MOV X20, X0
	0x03E687F4 BL 0x33BDD8C
	0x03E687F8 CBZ X20, 0x3E68868
	0x03E687FC STR X19, [X20 + 0x18]
	0x03E68800 CBZ X19, 0x3E68868
	0x03E68804 LDR W8, [X19 + 0x18]
	0x03E68808 ADRP X9, 0x2EB000
	0x03E6880C LDR X9, [X9 + 0xA08]
	0x03E68810 STR X31, [X20 + 0x28]
	0x03E68814 STR W8, [X20 + 0x20]
	0x03E68818 SUB W8, W8, 0x1
	0x03E6881C STR W8, [X20 + 0x10]
	0x03E68820 LDR X0, [X9]
	0x03E68824 ADRP X19, 0x304000
	0x03E68828 LDR X19, [X19 + 0x238]
	0x03E6882C BL 0x1C16F10
	0x03E68830 LDR X2, [X19]
	0x03E68834 MOV X1, X20
	0x03E68838 MOV X3, X31
	0x03E6883C MOV X19, X0
	0x03E68840 BL 0x2D2CE34
	0x03E68844 STR X19, [X20 + 0x28]
	0x03E68848 CBZ X19, 0x3E68868
	0x03E6884C LDR X3, [X19 + 0x18]
	0x03E68850 LDR X0, [X19 + 0x40]
	0x03E68854 LDR X2, [X19 + 0x28]
	0x03E68858 LDP X20, X19, [X31 + 0x10]
	0x03E6885C MOV W1, W31
	0x03E68860 LDP X30, X21, [X31], #0x20
	0x03E68864 BR X3
	0x03E68868 BL 0x1C16F20
	0x03E6886C MOV X1, X31
	0x03E68870 B 0x33BDD8C
	0x03E68874 STP X30, X25, [X31 - 0x40]!
	0x03E68878 STP X24, X23, [X31 + 0x10]
	0x03E6887C STP X22, X21, [X31 + 0x20]
	0x03E68880 STP X20, X19, [X31 + 0x30]
	0x03E68884 ADRP X19, 0x580000
	0x03E68888 ADRP X25, 0x304000
	0x03E6888C LDRB W8, [X19 + 0xCD8]
	0x03E68890 LDR X25, [X25 + 0x240]
	0x03E68894 MOV X21, X4
	0x03E68898 MOV X22, X3
	0x03E6889C MOV W20, W2
	0x03E688A0 MOV X23, X1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, 0x581000
	006 Move W8, [X19+3275]
	007 Move X21, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {23}
	012 Move X0, 0x293000
	013 Move X0, [X0+584]
	014 Call 0x1C17CF4
	015 Move X0, 0x28C000
	016 Move X0, [X0+3584]
	017 Call 0x1C17CF4
	018 Move X0, 0x294000
	019 Move X0, [X0+1368]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X19+3275], W8
	023 Compare X21, 0
	024 JumpIfEqual {80}
	025 Move W8, [X21+24]
	026 Compare W8, 0
	027 JumpIfEqual {74}
	028 Move X8, 0x294000
	029 Move X8, [X8+1368]
	030 Move X20, 0x293000
	031 Move X0, [X8]
	032 Move X20, [X20+584]
	033 Call 0x1C17F10
	034 Move X1, X21
	035 Move X2, X31
	036 Move X19, X0
	037 Call MemoryStream..ctor, X0, X1
	038 Move X0, [X20]
	039 Move W8, [X0+224]
	040 Compare W8, 0
	041 JumpIfNotEqual {43}
	042 Call 0x1C17DFC
	043 Move X0, X19
	044 Call Ext.decompressToArray, X0
	045 Move X21, X0
	046 Move X20, X31
	047 Compare X19, 0
	048 JumpIfEqual {72}
	049 Move X10, 0x28C000
	050 Move X8, [X19]
	051 Move X10, [X10+3584]
	052 NotImplemented "Instruction LDRH not yet implemented."
	053 Move X1, [X10]
	054 Compare X9, 0
	055 JumpIfEqual {62}
	056 Move X10, [X8+176]
	057 Add X10, X10, 8
	058 NotImplemented "Instruction LDUR not yet implemented."
	059 NotImplemented "Instruction CMP not yet implemented."
	060 Subtract X9, X9, 1
	061 Add X10, X10, 16
	062 Move X0, X19
	063 Move W2, W31
	064 Call 0x1C5D788
	065 NotImplemented "Instruction LDRSW not yet implemented."
	066 Add X8, X8, X9
	067 Add X0, X8, 312
	068 Move X8, [X0]
	069 Move X1, [X0+8]
	070 Move X0, X19
	071 NotImplemented "Instruction BLR not yet implemented."
	072 Compare X20, 0
	073 JumpIfNotEqual {81}
	074 Move X20, [X31+16]
	075 Move X19, [X31+24]
	076 Move X0, X21
	077 Move X30, [X31+32]
	078 Move X21, [X31+40]
	079 Return X0
	080 Call 0x1C17F20
	081 Move X0, X20
	082 Call 0x1C17F18
	083 Move X21, X0
	084 NotImplemented "Instruction CMP not yet implemented."
	085 Move X0, X21
	086 Call 0x3EB2AD0
	087 Move X20, [X0]
	088 Call 0x3EB2AE0
	089 Move X21, X31
	090 Compare X19, 0
	091 JumpIfNotEqual {49}
	092 Move X20, X31
	093 Move X21, X0
	094 Compare X19, 0
	095 JumpIfEqual {119}
	096 Move X10, 0x28C000
	097 Move X8, [X19]
	098 Move X10, [X10+3584]
	099 NotImplemented "Instruction LDRH not yet implemented."
	100 Move X1, [X10]
	101 Compare X9, 0
	102 JumpIfEqual {109}
	103 Move X10, [X8+176]
	104 Add X10, X10, 8
	105 NotImplemented "Instruction LDUR not yet implemented."
	106 NotImplemented "Instruction CMP not yet implemented."
	107 Subtract X9, X9, 1
	108 Add X10, X10, 16
	109 Move X0, X19
	110 Move W2, W31
	111 Call 0x1C5D788
	112 NotImplemented "Instruction LDRSW not yet implemented."
	113 Add X8, X8, X9
	114 Add X0, X8, 312
	115 Move X8, [X0]
	116 Move X1, [X0+8]
	117 Move X0, X19
	118 NotImplemented "Instruction BLR not yet implemented."
	119 Compare X20, 0
	120 JumpIfNotEqual {123}
	121 Move X0, X21
	122 Call 0x1D2D690
	123 Move X0, X20
	124 Call 0x1C17F18
	125 Call 0x1991590

Method: System.IO.MemoryStream decompress(System.IO.Stream stream)

Disassembly:
	0x03E68A68 LDR X0, [X0 + 0x248]
	0x03E68A6C BL 0x1C16CF4
	0x03E68A70 MOVZ W8, 0x1
	0x03E68A74 STRB W8, [X21 + 0xCD9]
	0x03E68A78 AND W8, W20, 0xFF
	0x03E68A7C CMP W8, 0x1
	0x03E68A80 B.NE 0x3E68AAC
	0x03E68A84 ADRP X8, 0x292000
	0x03E68A88 LDR X8, [X8 + 0x248]
	0x03E68A8C LDR X0, [X8]
	0x03E68A90 LDR W8, [X0 + 0xE0]
	0x03E68A94 CBNZ W8, 0x3E68A9C
	0x03E68A98 BL 0x1C16DFC
	0x03E68A9C MOV X0, X19
	0x03E68AA0 LDP X20, X19, [X31 + 0x10]
	0x03E68AA4 LDP X30, X21, [X31], #0x20
	0x03E68AA8 B 0x3E676D4
	0x03E68AAC MOV X0, X19
	0x03E68AB0 LDP X20, X19, [X31 + 0x10]
	0x03E68AB4 LDP X30, X21, [X31], #0x20
	0x03E68AB8 RET
	0x03E68ABC STP X30, X21, [X31 - 0x20]!
	0x03E68AC0 STP X20, X19, [X31 + 0x10]
	0x03E68AC4 ADRP X21, 0x580000
	0x03E68AC8 LDRB W8, [X21 + 0xCDA]
	0x03E68ACC MOV W20, W1
	0x03E68AD0 MOV X19, X0
	0x03E68AD4 TBNZ X8, 0x0, 0x3E68AEC
	0x03E68AD8 ADRP X0, 0x292000
	0x03E68ADC LDR X0, [X0 + 0x248]
	0x03E68AE0 BL 0x1C16CF4
	0x03E68AE4 MOVZ W8, 0x1
	0x03E68AE8 STRB W8, [X21 + 0xCDA]
	0x03E68AEC AND W8, W20, 0xFF
	0x03E68AF0 CMP W8, 0x1
	0x03E68AF4 B.NE 0x3E68B20
	0x03E68AF8 ADRP X8, 0x292000
	0x03E68AFC LDR X8, [X8 + 0x248]
	0x03E68B00 LDR X0, [X8]
	0x03E68B04 LDR W8, [X0 + 0xE0]
	0x03E68B08 CBNZ W8, 0x3E68B10
	0x03E68B0C BL 0x1C16DFC
	0x03E68B10 MOV X0, X19
	0x03E68B14 LDP X20, X19, [X31 + 0x10]
	0x03E68B18 LDP X30, X21, [X31], #0x20
	0x03E68B1C B 0x3E67A68
	0x03E68B20 MOV X0, X19
	0x03E68B24 LDP X20, X19, [X31 + 0x10]
	0x03E68B28 LDP X30, X21, [X31], #0x20
	0x03E68B2C RET
	0x03E68B30 STR X30, [X31 - 0x30]!
	0x03E68B34 STP X22, X21, [X31 + 0x10]
	0x03E68B38 STP X20, X19, [X31 + 0x20]
	0x03E68B3C ADRP X21, 0x580000
	0x03E68B40 ADRP X22, 0x292000
	0x03E68B44 LDRB W8, [X21 + 0xCDB]
	0x03E68B48 LDR X22, [X22 + 0x248]
	0x03E68B4C MOV W20, W1
	0x03E68B50 MOV X19, X0
	0x03E68B54 TBNZ X8, 0x0, 0x3E68B6C
	0x03E68B58 ADRP X0, 0x292000
	0x03E68B5C LDR X0, [X0 + 0x248]
	0x03E68B60 BL 0x1C16CF4
	0x03E68B64 MOVZ W8, 0x1
	0x03E68B68 STRB W8, [X21 + 0xCDB]
	0x03E68B6C LDR X0, [X22]
	0x03E68B70 LDR W8, [X0 + 0xE0]
	0x03E68B74 CBNZ W8, 0x3E68B7C
	0x03E68B78 BL 0x1C16DFC
	0x03E68B7C AND W8, W20, 0xFF
	0x03E68B80 MOV X0, X19
	0x03E68B84 CMP W8, 0x1
	0x03E68B88 B.NE 0x3E68B9C
	0x03E68B8C LDP X20, X19, [X31 + 0x20]
	0x03E68B90 LDP X22, X21, [X31 + 0x10]
	0x03E68B94 LDR X30, [X31], #0x30
	0x03E68B98 B 0x3E678A4
	0x03E68B9C LDP X20, X19, [X31 + 0x20]
	0x03E68BA0 LDP X22, X21, [X31 + 0x10]
	0x03E68BA4 LDR X30, [X31], #0x30
	0x03E68BA8 B 0x3E68418
	0x03E68BAC CBZ X0, 0x3E68BC4
	0x03E68BB0 LDR X8, [X0 + 0x40]
	0x03E68BB4 LDR X4, [X0 + 0x18]
	0x03E68BB8 LDR X3, [X0 + 0x28]
	0x03E68BBC MOV X0, X8
	0x03E68BC0 BR X4
	0x03E68BC4 RET
	0x03E68BC8 STR X30, [X31 - 0x20]!
	0x03E68BCC STP X20, X19, [X31 + 0x10]
	0x03E68BD0 ADRP X20, 0x580000
	0x03E68BD4 LDRB W8, [X20 + 0xCDC]
	0x03E68BD8 MOV X19, X0
	0x03E68BDC TBNZ X8, 0x0, 0x3E68BF4
	0x03E68BE0 ADRP X0, 0x294000
	0x03E68BE4 LDR X0, [X0 + 0x8D8]
	0x03E68BE8 BL 0x1C16CF4
	0x03E68BEC MOVZ W8, 0x1
	0x03E68BF0 STRB W8, [X20 + 0xCDC]
	0x03E68BF4 CBZ X19, 0x3E68CC8
	0x03E68BF8 MOV X0, X19
	0x03E68BFC MOV X1, X31
	0x03E68C00 BL 0x3619A24
	0x03E68C04 TBZ X0, 0x0, 0x3E68C1C
	0x03E68C08 MOV X0, X19
	0x03E68C0C LDP X20, X19, [X31 + 0x10]
	0x03E68C10 MOV X1, X31
	0x03E68C14 LDR X30, [X31], #0x20
	0x03E68C18 B 0x361B448
	0x03E68C1C MOV X0, X19
	0x03E68C20 MOV X1, X31
	0x03E68C24 BL 0x361A77C
	0x03E68C28 CBZ X0, 0x3E68CC8
	0x03E68C2C MOV W1, W31
	0x03E68C30 MOV X2, X31
	0x03E68C34 MOV X19, X0
	0x03E68C38 BL 0x3222A1C
	0x03E68C3C AND W8, W0, 0xFFFF
	0x03E68C40 CMP W8, 0x2F
	0x03E68C44 MOV X0, X31
	0x03E68C48 B.NE 0x3E68CBC
	0x03E68C4C ADRP X8, 0x294000
	0x03E68C50 LDR X8, [X8 + 0x8D8]
	0x03E68C54 MOVZ W1, 0x2
	0x03E68C58 LDR X0, [X8]
	0x03E68C5C BL 0x1C16D6C
	0x03E68C60 CBZ X0, 0x3E68CC8
	0x03E68C64 LDR W8, [X0 + 0x18]
	0x03E68C68 MOV X1, X0
	0x03E68C6C CBZ W8, 0x3E68CCC
	0x03E68C70 MOVZ W9, 0x3F
	0x03E68C74 CMP W8, 0x1
	0x03E68C78 STRH W9, [X1 + 0x20]
	0x03E68C7C B.EQ 0x3E68CCC
	0x03E68C80 MOVZ W8, 0x23
	0x03E68C84 MOV X0, X19
	0x03E68C88 MOV X2, X31
	0x03E68C8C STRH W8, [X1 + 0x22]
	0x03E68C90 BL 0x322BE8C
	0x03E68C94 CMP W0, 0x1
	0x03E68C98 B.LT 0x3E68CB8
	0x03E68C9C MOV W2, W0
	0x03E68CA0 MOV X0, X19
	0x03E68CA4 LDP X20, X19, [X31 + 0x10]
	0x03E68CA8 MOV W1, W31
	0x03E68CAC MOV X3, X31
	0x03E68CB0 LDR X30, [X31], #0x20
	0x03E68CB4 B 0x3228DE4

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, 0x581000
	007 Move X20, 0x294000
	008 Move W8, [X19+3276]
	009 Move X20, [X20+1368]
	010 Move X21, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {29}
	015 Move X0, 0x2CA000
	016 Move X0, [X0+2584]
	017 Call 0x1C17CF4
	018 Move X0, 0x293000
	019 Move X0, [X0+584]
	020 Call 0x1C17CF4
	021 Move X0, 0x28C000
	022 Move X0, [X0+3584]
	023 Call 0x1C17CF4
	024 Move X0, 0x294000
	025 Move X0, [X0+1368]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X19+3276], W8
	029 Move X0, [X20]
	030 Call 0x1C17F10
	031 Move X1, X31
	032 Move X20, X0
	033 Call MemoryStream..ctor, X0
	034 Compare X21, 0
	035 JumpIfEqual {113}
	036 Move X8, [X21]
	037 Move X0, X21
	038 Move X9, [X8+488]
	039 Move X1, [X8+496]
	040 NotImplemented "Instruction BLR not yet implemented."
	041 Compare X0, 0
	042 JumpIfEqual {106}
	043 Move X8, [X21]
	044 Move X19, 0x2CA000
	045 Move X22, 0x293000
	046 Move X0, X21
	047 Move X9, [X8+520]
	048 Move X2, [X8+528]
	049 Move X19, [X19+2584]
	050 Move X22, [X22+584]
	051 Move X1, X31
	052 NotImplemented "Instruction BLR not yet implemented."
	053 Move X0, [X19]
	054 Call 0x1C17F10
	055 Move W3, 1
	056 Move X1, X21
	057 Move W2, W31
	058 Move X4, X31
	059 Move X19, X0
	060 Call DeflateStream..ctor, X0, X1, X2, X3
	061 Move X0, [X22]
	062 Move W8, [X0+224]
	063 Compare W8, 0
	064 JumpIfNotEqual {66}
	065 Call 0x1C17DFC
	066 Move W2, 1024
	067 Move X0, X19
	068 Move X1, X20
	069 Call Ext.CopyTo, X0, X1, X2
	070 Compare X20, 0
	071 JumpIfEqual {116}
	072 Move X8, [X20]
	073 Move X9, [X8+520]
	074 Move X2, [X8+528]
	075 Move X0, X20
	076 Move X1, X31
	077 NotImplemented "Instruction BLR not yet implemented."
	078 Move X21, X31
	079 Compare X19, 0
	080 JumpIfEqual {104}
	081 Move X10, 0x28C000
	082 Move X8, [X19]
	083 Move X10, [X10+3584]
	084 NotImplemented "Instruction LDRH not yet implemented."
	085 Move X1, [X10]
	086 Compare X9, 0
	087 JumpIfEqual {94}
	088 Move X10, [X8+176]
	089 Add X10, X10, 8
	090 NotImplemented "Instruction LDUR not yet implemented."
	091 NotImplemented "Instruction CMP not yet implemented."
	092 Subtract X9, X9, 1
	093 Add X10, X10, 16
	094 Move X0, X19
	095 Move W2, W31
	096 Call 0x1C5D788
	097 NotImplemented "Instruction LDRSW not yet implemented."
	098 Add X8, X8, X9
	099 Add X0, X8, 312
	100 Move X8, [X0]
	101 Move X1, [X0+8]
	102 Move X0, X19
	103 NotImplemented "Instruction BLR not yet implemented."
	104 Compare X21, 0
	105 JumpIfNotEqual {114}
	106 Move X0, X20
	107 Move X20, [X31+32]
	108 Move X19, [X31+40]
	109 Move X22, [X31+16]
	110 Move X21, [X31+24]
	111 Move X30, [X31+48]
	112 Return X0
	113 Call 0x1C17F20
	114 Move X0, X21
	115 Call 0x1C17F18
	116 Call 0x1C17F20
	117 Move X20, X0
	118 NotImplemented "Instruction CMP not yet implemented."
	119 Move X0, X20
	120 Call 0x3EB2AD0
	121 Move X21, [X0]
	122 Call 0x3EB2AE0
	123 Move X20, X31
	124 Compare X19, 0
	125 JumpIfNotEqual {81}
	126 Move X21, X31
	127 Move X20, X0
	128 Compare X19, 0
	129 JumpIfEqual {153}
	130 Move X10, 0x28C000
	131 Move X8, [X19]
	132 Move X10, [X10+3584]
	133 NotImplemented "Instruction LDRH not yet implemented."
	134 Move X1, [X10]
	135 Compare X9, 0
	136 JumpIfEqual {143}
	137 Move X10, [X8+176]
	138 Add X10, X10, 8
	139 NotImplemented "Instruction LDUR not yet implemented."
	140 NotImplemented "Instruction CMP not yet implemented."
	141 Subtract X9, X9, 1
	142 Add X10, X10, 16
	143 Move X0, X19
	144 Move W2, W31
	145 Call 0x1C5D788
	146 NotImplemented "Instruction LDRSW not yet implemented."
	147 Add X8, X8, X9
	148 Add X0, X8, 312
	149 Move X8, [X0]
	150 Move X1, [X0+8]
	151 Move X0, X19
	152 NotImplemented "Instruction BLR not yet implemented."
	153 Compare X21, 0
	154 JumpIfNotEqual {157}
	155 Move X0, X20
	156 Call 0x1D2D690
	157 Move X0, X21
	158 Call 0x1C17F18
	159 Call 0x1991590

Method: System.Byte[] decompressToArray(System.IO.Stream stream)

Disassembly:
	0x03E688A4 MOV X24, X0
	0x03E688A8 TBNZ X8, 0x0, 0x3E688E4
	0x03E688AC ADRP X0, 0x2B3000
	0x03E688B0 LDR X0, [X0 + 0x720]
	0x03E688B4 BL 0x1C16CF4
	0x03E688B8 ADRP X0, 0x28B000
	0x03E688BC LDR X0, [X0 + 0x618]
	0x03E688C0 BL 0x1C16CF4
	0x03E688C4 ADRP X0, 0x304000
	0x03E688C8 LDR X0, [X0 + 0x248]
	0x03E688CC BL 0x1C16CF4
	0x03E688D0 ADRP X0, 0x304000
	0x03E688D4 LDR X0, [X0 + 0x240]
	0x03E688D8 BL 0x1C16CF4
	0x03E688DC MOVZ W8, 0x1
	0x03E688E0 STRB W8, [X19 + 0xCD8]
	0x03E688E4 LDR X0, [X25]
	0x03E688E8 BL 0x1C16F10
	0x03E688EC MOV X1, X31
	0x03E688F0 MOV X19, X0
	0x03E688F4 BL 0x33BDD8C
	0x03E688F8 CBZ X19, 0x3E68998
	0x03E688FC ADRP X8, 0x28B000
	0x03E68900 LDR X8, [X8 + 0x618]
	0x03E68904 STP X24, X22, [X19 + 0x10]
	0x03E68908 STR X23, [X19 + 0x20]
	0x03E6890C STR W20, [X19 + 0x30]
	0x03E68910 STR X21, [X19 + 0x40]
	0x03E68914 LDR X0, [X8]
	0x03E68918 ADRP X21, 0x2B3000
	0x03E6891C ADRP X22, 0x304000
	0x03E68920 LDR X21, [X21 + 0x720]
	0x03E68924 LDR X22, [X22 + 0x248]
	0x03E68928 MOV W1, W20
	0x03E6892C BL 0x1C16D6C
	0x03E68930 STR X0, [X19 + 0x28]
	0x03E68934 STR X31, [X19 + 0x38]
	0x03E68938 LDR X0, [X21]
	0x03E6893C BL 0x1C16F10
	0x03E68940 LDR X2, [X22]
	0x03E68944 MOV X1, X19
	0x03E68948 MOV X3, X31
	0x03E6894C MOV X20, X0
	0x03E68950 BL 0x3316570
	0x03E68954 LDR X0, [X19 + 0x10]
	0x03E68958 STR X20, [X19 + 0x38]
	0x03E6895C CBZ X0, 0x3E6899C
	0x03E68960 LDR X8, [X0]
	0x03E68964 LDR X1, [X19 + 0x28]
	0x03E68968 LDR W3, [X19 + 0x30]
	0x03E6896C LDR X9, [X8 + 0x2B8]
	0x03E68970 LDR X6, [X8 + 0x2C0]
	0x03E68974 MOV W2, W31
	0x03E68978 MOV X4, X20
	0x03E6897C MOV X5, X31
	0x03E68980 BLR X9
	0x03E68984 LDP X20, X19, [X31 + 0x30]
	0x03E68988 LDP X22, X21, [X31 + 0x20]
	0x03E6898C LDP X24, X23, [X31 + 0x10]
	0x03E68990 LDP X30, X25, [X31], #0x40
	0x03E68994 RET
	0x03E68998 BL 0x1C16F20
	0x03E6899C BL 0x1C16F20
	0x03E689A0 B 0x3E689A4
	0x03E689A4 MOV X20, X0
	0x03E689A8 CMP W1, 0x1
	0x03E689AC B.NE 0x3E68A34
	0x03E689B0 MOV X0, X20
	0x03E689B4 BL 0x3EB1AD0
	0x03E689B8 MOV X20, X0
	0x03E689BC ADRP X0, 0x28B000
	0x03E689C0 LDR X0, [X0 + 0x7D0]
	0x03E689C4 BL 0x1C16D08
	0x03E689C8 LDR X8, [X20]
	0x03E689CC LDR X1, [X8]
	0x03E689D0 BL 0x1C17270
	0x03E689D4 TBZ X0, 0x0, 0x3E68A0C
	0x03E689D8 LDR X20, [X20]
	0x03E689DC BL 0x3EB1AE0
	0x03E689E0 LDR X8, [X19 + 0x40]
	0x03E689E4 CBZ X8, 0x3E68984
	0x03E689E8 LDR X3, [X8 + 0x18]
	0x03E689EC LDR X0, [X8 + 0x40]
	0x03E689F0 LDR X2, [X8 + 0x28]
	0x03E689F4 MOV X1, X20
	0x03E689F8 LDP X20, X19, [X31 + 0x30]
	0x03E689FC LDP X22, X21, [X31 + 0x20]
	0x03E68A00 LDP X24, X23, [X31 + 0x10]
	0x03E68A04 LDP X30, X25, [X31], #0x40
	0x03E68A08 BR X3
	0x03E68A0C MOVZ W0, 0x8
	0x03E68A10 BL 0x3EB1AF0
	0x03E68A14 LDR X8, [X20]
	0x03E68A18 STR X8, [X0]
	0x03E68A1C ADRP X1, 0x4C000
	0x03E68A20 ADD X1, X1, 0xE58
	0x03E68A24 MOV X2, X31
	0x03E68A28 BL 0x3EB1B00
	0x03E68A2C MOV X20, X0
	0x03E68A30 BL 0x3EB1AE0
	0x03E68A34 MOV X0, X20
	0x03E68A38 BL 0x1D2C690
	0x03E68A3C BL 0x1990590
	0x03E68A40 MOV X1, X31
	0x03E68A44 B 0x33BDD8C
	0x03E68A48 STP X30, X21, [X31 - 0x20]!
	0x03E68A4C STP X20, X19, [X31 + 0x10]
	0x03E68A50 ADRP X21, 0x580000
	0x03E68A54 LDRB W8, [X21 + 0xCD9]
	0x03E68A58 MOV W20, W1
	0x03E68A5C MOV X19, X0
	0x03E68A60 TBNZ X8, 0x0, 0x3E68A78
	0x03E68A64 ADRP X0, 0x292000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x581000
	007 Move X21, 0x293000
	008 Move W8, [X20+3277]
	009 Move X21, [X21+584]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x293000
	016 Move X0, [X0+584]
	017 Call 0x1C17CF4
	018 Move X0, 0x28C000
	019 Move X0, [X0+3584]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X20+3277], W8
	023 Move X0, [X21]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Move X22, 0x28C000
	029 Move X22, [X22+3584]
	030 Move X0, X19
	031 Call Ext.decompress, X0
	032 Move X19, X0
	033 Compare X0, 0
	034 JumpIfEqual {77}
	035 Move X8, [X19]
	036 Move X1, [X8+640]
	037 Move X9, [X8+632]
	038 Move X0, X19
	039 NotImplemented "Instruction BLR not yet implemented."
	040 Move X8, [X19]
	041 Move X1, [X8+1024]
	042 Move X9, [X8+1016]
	043 Move X0, X19
	044 NotImplemented "Instruction BLR not yet implemented."
	045 Move X21, X0
	046 Move X20, X31
	047 Move X8, [X19]
	048 Move X1, [X22]
	049 NotImplemented "Instruction LDRH not yet implemented."
	050 Compare X9, 0
	051 JumpIfEqual {58}
	052 Move X10, [X8+176]
	053 Add X10, X10, 8
	054 NotImplemented "Instruction LDUR not yet implemented."
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Subtract X9, X9, 1
	057 Add X10, X10, 16
	058 Move X0, X19
	059 Move W2, W31
	060 Call 0x1C5D788
	061 NotImplemented "Instruction LDRSW not yet implemented."
	062 Add X8, X8, X9
	063 Add X0, X8, 312
	064 Move X8, [X0]
	065 Move X1, [X0+8]
	066 Move X0, X19
	067 NotImplemented "Instruction BLR not yet implemented."
	068 Compare X20, 0
	069 JumpIfNotEqual {78}
	070 Move X0, X21
	071 Move X20, [X31+32]
	072 Move X19, [X31+40]
	073 Move X22, [X31+16]
	074 Move X21, [X31+24]
	075 Move X30, [X31+48]
	076 Return X0
	077 Call 0x1C17F20
	078 Move X0, X20
	079 Call 0x1C17F18
	080 Move X21, X0
	081 NotImplemented "Instruction CMP not yet implemented."
	082 Move X0, X21
	083 Call 0x3EB2AD0
	084 Move X20, [X0]
	085 Call 0x3EB2AE0
	086 Move X21, X31
	087 Compare X19, 0
	088 JumpIfNotEqual {47}
	089 Move X20, X31
	090 Move X21, X0
	091 Compare X19, 0
	092 JumpIfEqual {114}
	093 Move X8, [X19]
	094 Move X1, [X22]
	095 NotImplemented "Instruction LDRH not yet implemented."
	096 Compare X9, 0
	097 JumpIfEqual {104}
	098 Move X10, [X8+176]
	099 Add X10, X10, 8
	100 NotImplemented "Instruction LDUR not yet implemented."
	101 NotImplemented "Instruction CMP not yet implemented."
	102 Subtract X9, X9, 1
	103 Add X10, X10, 16
	104 Move X0, X19
	105 Move W2, W31
	106 Call 0x1C5D788
	107 NotImplemented "Instruction LDRSW not yet implemented."
	108 Add X8, X8, X9
	109 Add X0, X8, 312
	110 Move X8, [X0]
	111 Move X1, [X0+8]
	112 Move X0, X19
	113 NotImplemented "Instruction BLR not yet implemented."
	114 Compare X20, 0
	115 JumpIfNotEqual {118}
	116 Move X0, X21
	117 Call 0x1D2D690
	118 Move X0, X20
	119 Call 0x1C17F18
	120 Call 0x1991590

Method: System.Boolean isHttpMethod(System.String value)

Disassembly:
	0x03E68CB8 MOV X0, X19
	0x03E68CBC LDP X20, X19, [X31 + 0x10]
	0x03E68CC0 LDR X30, [X31], #0x20
	0x03E68CC4 RET
	0x03E68CC8 BL 0x1C16F20
	0x03E68CCC BL 0x1C16F28
	0x03E68CD0 STP X30, X21, [X31 - 0x20]!
	0x03E68CD4 STP X20, X19, [X31 + 0x10]
	0x03E68CD8 ADRP X21, 0x580000
	0x03E68CDC LDRB W8, [X21 + 0xCDD]
	0x03E68CE0 MOV W19, W1
	0x03E68CE4 MOV X20, X0
	0x03E68CE8 TBNZ X8, 0x0, 0x3E68D18
	0x03E68CEC ADRP X0, 0x304000
	0x03E68CF0 LDR X0, [X0 + 0x250]
	0x03E68CF4 BL 0x1C16CF4
	0x03E68CF8 ADRP X0, 0x2D6000
	0x03E68CFC LDR X0, [X0]
	0x03E68D00 BL 0x1C16CF4
	0x03E68D04 ADRP X0, 0x2D6000
	0x03E68D08 LDR X0, [X0 + 0x200]
	0x03E68D0C BL 0x1C16CF4
	0x03E68D10 MOVZ W8, 0x1
	0x03E68D14 STRB W8, [X21 + 0xCDD]
	0x03E68D18 CBZ X20, 0x3E68D88
	0x03E68D1C ADRP X8, 0x2D6000
	0x03E68D20 ADRP X9, 0x2D6000
	0x03E68D24 LDR X8, [X8]
	0x03E68D28 LDR X9, [X9 + 0x200]
	0x03E68D2C ANDS W31, W19, 0x1
	0x03E68D30 MOV X0, X20
	0x03E68D34 MOV X2, X31
	0x03E68D38 CSEL X8, X8, X9, NE
	0x03E68D3C LDR X1, [X8]
	0x03E68D40 BL 0x366456C
	0x03E68D44 CBZ X0, 0x3E68D5C
	0x03E68D48 AND W1, W19, 0x1
	0x03E68D4C LDP X20, X19, [X31 + 0x10]
	0x03E68D50 MOV X2, X31
	0x03E68D54 LDP X30, X21, [X31], #0x20
	0x03E68D58 B 0x3E85450
	0x03E68D5C ADRP X8, 0x304000
	0x03E68D60 LDR X8, [X8 + 0x250]
	0x03E68D64 LDR X0, [X8]
	0x03E68D68 BL 0x1C16F10
	0x03E68D6C MOV X1, X31
	0x03E68D70 MOV X19, X0
	0x03E68D74 BL 0x3E83C9C
	0x03E68D78 MOV X0, X19
	0x03E68D7C LDP X20, X19, [X31 + 0x10]
	0x03E68D80 LDP X30, X21, [X31], #0x20
	0x03E68D84 RET
	0x03E68D88 BL 0x1C16F20
	0x03E68D8C STP X30, X19, [X31 - 0x10]!
	0x03E68D90 MOV X19, X0
	0x03E68D94 TBZ X1, 0x0, 0x3E68DC0
	0x03E68D98 CBZ X19, 0x3E68DD4
	0x03E68D9C MOV X0, X19
	0x03E68DA0 MOV X1, X31
	0x03E68DA4 BL 0x361BD78
	0x03E68DA8 CMP W0, 0x4
	0x03E68DAC B.NE 0x3E68DC4
	0x03E68DB0 MOV X0, X19
	0x03E68DB4 MOV X1, X31
	0x03E68DB8 LDP X30, X19, [X31], #0x10
	0x03E68DBC B 0x361C394
	0x03E68DC0 CBZ X19, 0x3E68DD4
	0x03E68DC4 MOV X0, X19
	0x03E68DC8 MOV X1, X31
	0x03E68DCC LDP X30, X19, [X31], #0x10
	0x03E68DD0 B 0x361CFA8
	0x03E68DD4 BL 0x1C16F20
	0x03E68DD8 STR X30, [X31 - 0x20]!
	0x03E68DDC STP X20, X19, [X31 + 0x10]
	0x03E68DE0 ADRP X20, 0x580000
	0x03E68DE4 LDRB W8, [X20 + 0xCDE]
	0x03E68DE8 MOV W19, W0
	0x03E68DEC TBNZ X8, 0x0, 0x3E68E70
	0x03E68DF0 ADRP X0, 0x28D000
	0x03E68DF4 LDR X0, [X0 + 0x278]
	0x03E68DF8 BL 0x1C16CF4
	0x03E68DFC ADRP X0, 0x304000
	0x03E68E00 LDR X0, [X0 + 0x258]
	0x03E68E04 BL 0x1C16CF4
	0x03E68E08 ADRP X0, 0x304000
	0x03E68E0C LDR X0, [X0 + 0x260]
	0x03E68E10 BL 0x1C16CF4
	0x03E68E14 ADRP X0, 0x304000
	0x03E68E18 LDR X0, [X0 + 0x268]
	0x03E68E1C BL 0x1C16CF4
	0x03E68E20 ADRP X0, 0x304000
	0x03E68E24 LDR X0, [X0 + 0x270]
	0x03E68E28 BL 0x1C16CF4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x581000
	006 Move X21, 0x2B5000
	007 Move W8, [X20+3278]
	008 Move X21, [X21+1232]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {40}
	014 Move X0, 0x2B5000
	015 Move X0, [X0+1248]
	016 Call 0x1C17CF4
	017 Move X0, 0x2B5000
	018 Move X0, [X0+1240]
	019 Call 0x1C17CF4
	020 Move X0, 0x2B5000
	021 Move X0, [X0+1232]
	022 Call 0x1C17CF4
	023 Move X0, 0x2D3000
	024 Move X0, [X0+536]
	025 Call 0x1C17CF4
	026 Move X0, 0x2D3000
	027 Move X0, [X0+544]
	028 Call 0x1C17CF4
	029 Move X0, 0x2D3000
	030 Move X0, [X0+1224]
	031 Call 0x1C17CF4
	032 Move X0, 0x2CF000
	033 Move X0, [X0+2824]
	034 Call 0x1C17CF4
	035 Move X0, 0x2B5000
	036 Move X0, [X0+1224]
	037 Call 0x1C17CF4
	038 Move W8, 1
	039 Move [X20+3278], W8
	040 Move X1, [X21]
	041 Move X0, X19
	042 Move X2, X31
	043 Call String.op_Equality, X0, X1
	044 Move TEMP, X0
	045 And TEMP, TEMP, 1
	046 Compare TEMP, 1
	047 JumpIfEqual {108}
	048 Move X8, 0x2CF000
	049 Move X8, [X8+2824]
	050 Move X0, X19
	051 Move X2, X31
	052 Move X1, [X8]
	053 Call String.op_Equality, X0, X1
	054 Move TEMP, X0
	055 And TEMP, TEMP, 1
	056 Compare TEMP, 1
	057 JumpIfEqual {108}
	058 Move X8, 0x2B5000
	059 Move X8, [X8+1240]
	060 Move X0, X19
	061 Move X2, X31
	062 Move X1, [X8]
	063 Call String.op_Equality, X0, X1
	064 Move TEMP, X0
	065 And TEMP, TEMP, 1
	066 Compare TEMP, 1
	067 JumpIfEqual {108}
	068 Move X8, 0x2B5000
	069 Move X8, [X8+1248]
	070 Move X0, X19
	071 Move X2, X31
	072 Move X1, [X8]
	073 Call String.op_Equality, X0, X1
	074 Move TEMP, X0
	075 And TEMP, TEMP, 1
	076 Compare TEMP, 1
	077 JumpIfEqual {108}
	078 Move X8, 0x2B5000
	079 Move X8, [X8+1224]
	080 Move X0, X19
	081 Move X2, X31
	082 Move X1, [X8]
	083 Call String.op_Equality, X0, X1
	084 Move TEMP, X0
	085 And TEMP, TEMP, 1
	086 Compare TEMP, 1
	087 JumpIfEqual {108}
	088 Move X8, 0x2D3000
	089 Move X8, [X8+536]
	090 Move X0, X19
	091 Move X2, X31
	092 Move X1, [X8]
	093 Call String.op_Equality, X0, X1
	094 Move TEMP, X0
	095 And TEMP, TEMP, 1
	096 Compare TEMP, 1
	097 JumpIfEqual {108}
	098 Move X8, 0x2D3000
	099 Move X8, [X8+1224]
	100 Move X0, X19
	101 Move X2, X31
	102 Move X1, [X8]
	103 Call String.op_Equality, X0, X1
	104 Move TEMP, X0
	105 And TEMP, TEMP, 1
	106 Compare TEMP, 1
	107 JumpIfNotEqual {114}
	108 Move X20, [X31+16]
	109 Move X19, [X31+24]
	110 Move W0, 1
	111 Move X30, [X31+32]
	112 Move X21, [X31+40]
	113 Return X0
	114 Move X8, 0x2D3000
	115 Move X8, [X8+544]
	116 Move X0, X19
	117 Move X20, [X31+16]
	118 Move X19, [X31+24]
	119 Move X2, X31
	120 Move X1, [X8]
	121 Move X30, [X31+32]
	122 Move X21, [X31+40]
	123 Call String.op_Equality, X0, X1
	124 Return X0

Method: System.Boolean isHttpMethod10(System.String value)

Disassembly:
	0x03E68E2C ADRP X0, 0x304000
	0x03E68E30 LDR X0, [X0 + 0x278]
	0x03E68E34 BL 0x1C16CF4
	0x03E68E38 ADRP X0, 0x304000
	0x03E68E3C LDR X0, [X0 + 0x280]
	0x03E68E40 BL 0x1C16CF4
	0x03E68E44 ADRP X0, 0x304000
	0x03E68E48 LDR X0, [X0 + 0x288]
	0x03E68E4C BL 0x1C16CF4
	0x03E68E50 ADRP X0, 0x304000
	0x03E68E54 LDR X0, [X0 + 0x290]
	0x03E68E58 BL 0x1C16CF4
	0x03E68E5C ADRP X0, 0x304000
	0x03E68E60 LDR X0, [X0 + 0x298]
	0x03E68E64 BL 0x1C16CF4
	0x03E68E68 MOVZ W8, 0x1
	0x03E68E6C STRB W8, [X20 + 0xCDE]
	0x03E68E70 SUB W8, W19, 0x3EA
	0x03E68E74 AND W9, W8, 0xFFFF
	0x03E68E78 CMP W9, 0xE
	0x03E68E7C B.CS 0x3E68E8C
	0x03E68E80 MOVZ W9, 0x23F3
	0x03E68E84 LSRV W9, W9, W8
	0x03E68E88 TBNZ X9, 0x0, 0x3E68EA0
	0x03E68E8C ADRP X8, 0x28D000
	0x03E68E90 LDR X8, [X8 + 0x278]
	0x03E68E94 LDR X8, [X8]
	0x03E68E98 ADD X8, X8, 0xB8
	0x03E68E9C B 0x3E68EAC
	0x03E68EA0 ADRP X9, 0x8C000
	0x03E68EA4 ADD X9, X9, 0xC00
	0x03E68EA8 ADD X8, X9, W8, 0x3, SXTH
	0x03E68EAC LDR X8, [X8]
	0x03E68EB0 LDP X20, X19, [X31 + 0x10]
	0x03E68EB4 LDR X0, [X8]
	0x03E68EB8 LDR X30, [X31], #0x20
	0x03E68EBC RET
	0x03E68EC0 STP X30, X19, [X31 - 0x10]!
	0x03E68EC4 CBZ X0, 0x3E68F0C
	0x03E68EC8 MOV X2, X31
	0x03E68ECC MOV X19, X0
	0x03E68ED0 BL 0x322BD98
	0x03E68ED4 CMP W0, 0x1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x581000
	006 Move X21, 0x2B5000
	007 Move W8, [X20+3279]
	008 Move X21, [X21+1232]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {25}
	014 Move X0, 0x2B5000
	015 Move X0, [X0+1240]
	016 Call 0x1C17CF4
	017 Move X0, 0x2B5000
	018 Move X0, [X0+1232]
	019 Call 0x1C17CF4
	020 Move X0, 0x2CF000
	021 Move X0, [X0+2824]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X20+3279], W8
	025 Move X1, [X21]
	026 Move X0, X19
	027 Move X2, X31
	028 Call String.op_Equality, X0, X1
	029 Move TEMP, X0
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfEqual {43}
	033 Move X8, 0x2CF000
	034 Move X8, [X8+2824]
	035 Move X0, X19
	036 Move X2, X31
	037 Move X1, [X8]
	038 Call String.op_Equality, X0, X1
	039 Move TEMP, X0
	040 And TEMP, TEMP, 1
	041 Compare TEMP, 1
	042 JumpIfNotEqual {49}
	043 Move X20, [X31+16]
	044 Move X19, [X31+24]
	045 Move W0, 1
	046 Move X30, [X31+32]
	047 Move X21, [X31+40]
	048 Return X0
	049 Move X8, 0x2B5000
	050 Move X8, [X8+1240]
	051 Move X0, X19
	052 Move X20, [X31+16]
	053 Move X19, [X31+24]
	054 Move X2, X31
	055 Move X1, [X8]
	056 Move X30, [X31+32]
	057 Move X21, [X31+40]
	058 Call String.op_Equality, X0, X1
	059 Return X0

Method: System.Boolean isPredefinedScheme(System.String value)

Disassembly:
	0x03E68ED8 B.LT 0x3E68F00
	0x03E68EDC MOV W2, W0
	0x03E68EE0 MOV X0, X19
	0x03E68EE4 MOV W1, W31
	0x03E68EE8 MOV X3, X31
	0x03E68EEC BL 0x3228DE4
	0x03E68EF0 CBZ X0, 0x3E68F0C
	0x03E68EF4 MOV X1, X31
	0x03E68EF8 LDP X30, X19, [X31], #0x10
	0x03E68EFC B 0x322B8DC
	0x03E68F00 MOV X0, X31
	0x03E68F04 LDP X30, X19, [X31], #0x10
	0x03E68F08 RET
	0x03E68F0C BL 0x1C16F20
	0x03E68F10 STP X30, X19, [X31 - 0x10]!
	0x03E68F14 MOV X19, X0
	0x03E68F18 MOV X0, X31
	0x03E68F1C BL 0x3241948
	0x03E68F20 CBZ X0, 0x3E68F3C
	0x03E68F24 LDR X8, [X0]
	0x03E68F28 MOV X1, X19
	0x03E68F2C LDR X3, [X8 + 0x378]
	0x03E68F30 LDR X2, [X8 + 0x380]
	0x03E68F34 LDP X30, X19, [X31], #0x10
	0x03E68F38 BR X3
	0x03E68F3C BL 0x1C16F20
	0x03E68F40 STP X30, X19, [X31 - 0x10]!
	0x03E68F44 MOV X19, X0
	0x03E68F48 MOV X0, X31
	0x03E68F4C BL 0x3241948
	0x03E68F50 CBZ X0, 0x3E68F6C
	0x03E68F54 LDR X8, [X0]
	0x03E68F58 MOV X1, X19
	0x03E68F5C LDR X3, [X8 + 0x268]
	0x03E68F60 LDR X2, [X8 + 0x270]
	0x03E68F64 LDP X30, X19, [X31], #0x10
	0x03E68F68 BR X3
	0x03E68F6C BL 0x1C16F20
	0x03E68F70 STR X30, [X31 - 0x30]!
	0x03E68F74 STP X22, X21, [X31 + 0x10]
	0x03E68F78 STP X20, X19, [X31 + 0x20]
	0x03E68F7C ADRP X22, 0x580000
	0x03E68F80 ADRP X21, 0x292000
	0x03E68F84 LDRB W8, [X22 + 0xCDF]
	0x03E68F88 LDR X21, [X21 + 0x248]
	0x03E68F8C MOV W19, W1
	0x03E68F90 MOV X20, X0
	0x03E68F94 TBNZ X8, 0x0, 0x3E68FAC
	0x03E68F98 ADRP X0, 0x292000
	0x03E68F9C LDR X0, [X0 + 0x248]
	0x03E68FA0 BL 0x1C16CF4
	0x03E68FA4 MOVZ W8, 0x1
	0x03E68FA8 STRB W8, [X22 + 0xCDF]
	0x03E68FAC LDR X0, [X21]
	0x03E68FB0 LDR W8, [X0 + 0xE0]
	0x03E68FB4 CBNZ W8, 0x3E68FBC
	0x03E68FB8 BL 0x1C16DFC
	0x03E68FBC MOV X0, X20
	0x03E68FC0 MOV W1, W19
	0x03E68FC4 LDP X20, X19, [X31 + 0x20]
	0x03E68FC8 LDP X22, X21, [X31 + 0x10]
	0x03E68FCC MOV W2, W31
	0x03E68FD0 LDR X30, [X31], #0x30
	0x03E68FD4 B 0x3E68FD8
	0x03E68FD8 STR X30, [X31 - 0x30]!
	0x03E68FDC STP X22, X21, [X31 + 0x10]
	0x03E68FE0 STP X20, X19, [X31 + 0x20]
	0x03E68FE4 ADRP X22, 0x580000
	0x03E68FE8 LDRB W8, [X22 + 0xCE0]
	0x03E68FEC MOV W19, W2
	0x03E68FF0 MOV W21, W1
	0x03E68FF4 MOV X20, X0
	0x03E68FF8 TBNZ X8, 0x0, 0x3E69010
	0x03E68FFC ADRP X0, 0x292000
	0x03E69000 LDR X0, [X0 + 0x248]
	0x03E69004 BL 0x1C16CF4
	0x03E69008 MOVZ W8, 0x1
	0x03E6900C STRB W8, [X22 + 0xCE0]
	0x03E69010 CBZ X20, 0x3E690A0
	0x03E69014 MOV X0, X20
	0x03E69018 MOV W1, W21
	0x03E6901C MOV X2, X31
	0x03E69020 BL 0x322BD98
	0x03E69024 TBNZ X0, 0x1F, 0x3E69038
	0x03E69028 LDR W8, [X20 + 0x10]
	0x03E6902C SUB W8, W8, 0x1
	0x03E69030 CMP W0, W8
	0x03E69034 B.NE 0x3E69050
	0x03E69038 MOV X20, X31
	0x03E6903C MOV X0, X20
	0x03E69040 LDP X20, X19, [X31 + 0x20]
	0x03E69044 LDP X22, X21, [X31 + 0x10]
	0x03E69048 LDR X30, [X31], #0x30
	0x03E6904C RET
	0x03E69050 ADD W1, W0, 0x1
	0x03E69054 MOV X0, X20
	0x03E69058 MOV X2, X31
	0x03E6905C BL 0x322B484
	0x03E69060 CBZ X0, 0x3E690A0
	0x03E69064 MOV X1, X31
	0x03E69068 BL 0x322B8DC
	0x03E6906C MOV X20, X0
	0x03E69070 TBZ X19, 0x0, 0x3E6903C
	0x03E69074 ADRP X8, 0x291000
	0x03E69078 LDR X8, [X8 + 0x248]
	0x03E6907C LDR X0, [X8]
	0x03E69080 LDR W8, [X0 + 0xE0]
	0x03E69084 CBNZ W8, 0x3E6908C
	0x03E69088 BL 0x1C16DFC
	0x03E6908C MOV X0, X20
	0x03E69090 LDP X20, X19, [X31 + 0x20]
	0x03E69094 LDP X22, X21, [X31 + 0x10]
	0x03E69098 LDR X30, [X31], #0x30
	0x03E6909C B 0x3E690A4
	0x03E690A0 BL 0x1C16F20
	0x03E690A4 STR X30, [X31 - 0x20]!
	0x03E690A8 STP X20, X19, [X31 + 0x10]
	0x03E690AC ADRP X20, 0x57F000
	0x03E690B0 LDRB W8, [X20 + 0xCFC]
	0x03E690B4 MOV X19, X0
	0x03E690B8 TBNZ X8, 0x0, 0x3E690E8
	0x03E690BC ADRP X0, 0x28C000
	0x03E690C0 LDR X0, [X0 + 0x278]
	0x03E690C4 BL 0x1C16CF4
	0x03E690C8 ADRP X0, 0x2BE000
	0x03E690CC LDR X0, [X0 + 0x810]
	0x03E690D0 BL 0x1C16CF4
	0x03E690D4 ADRP X0, 0x295000
	0x03E690D8 LDR X0, [X0 + 0xCD8]
	0x03E690DC BL 0x1C16CF4
	0x03E690E0 MOVZ W8, 0x1
	0x03E690E4 STRB W8, [X20 + 0xCFC]
	0x03E690E8 CBZ X19, 0x3E69190
	0x03E690EC MOVZ W1, 0x22
	0x03E690F0 MOV X0, X19

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x581000
	005 Move W8, [X20+3280]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {49}
	011 Move X0, 0x2D4000
	012 Move X0, [X0+1504]
	013 Call 0x1C17CF4
	014 Move X0, 0x2C9000
	015 Move X0, [X0+3560]
	016 Call 0x1C17CF4
	017 Move X0, 0x295000
	018 Move X0, [X0+936]
	019 Call 0x1C17CF4
	020 Move X0, 0x2C8000
	021 Move X0, [X0+1512]
	022 Call 0x1C17CF4
	023 Move X0, 0x2D4000
	024 Move X0, [X0+1520]
	025 Call 0x1C17CF4
	026 Move X0, 0x2D4000
	027 Move X0, [X0+1536]
	028 Call 0x1C17CF4
	029 Move X0, 0x2D4000
	030 Move X0, [X0+1552]
	031 Call 0x1C17CF4
	032 Move X0, 0x2D4000
	033 Move X0, [X0+1560]
	034 Call 0x1C17CF4
	035 Move X0, 0x2D4000
	036 Move X0, [X0+1568]
	037 Call 0x1C17CF4
	038 Move X0, 0x2D4000
	039 Move X0, [X0+1576]
	040 Call 0x1C17CF4
	041 Move X0, 0x2D4000
	042 Move X0, [X0+1584]
	043 Call 0x1C17CF4
	044 Move X0, 0x2CA000
	045 Move X0, [X0+1224]
	046 Call 0x1C17CF4
	047 Move W8, 1
	048 Move [X20+3280], W8
	049 Compare X19, 0
	050 JumpIfEqual {149}
	051 Move X0, X19
	052 Move W1, W31
	053 Move X2, X31
	054 Call String.get_Chars, X0, X1
	055 And W9, W0, 0xFFFF
	056 Subtract W8, W9, 102
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Move W0, W31
	059 Move X9, -53276672
	060 Add X9, X9, 1593
	061 NotImplemented "Instruction ADR not yet implemented."
	062 Move W11, [X9]
	063 Add X10, X10, X11
	064 CallNoReturn X10
	065 Move X8, 0x2D4000
	066 Move X8, [X8+1568]
	067 Move X0, X19
	068 Move X2, X31
	069 Move X1, [X8]
	070 Call String.op_Equality, X0, X1
	071 Move TEMP, X0
	072 And TEMP, TEMP, 1
	073 Compare TEMP, 1
	074 JumpIfEqual {132}
	075 Move X8, 0x2D4000
	076 Move X8, [X8+1536]
	077 NotImplemented "Instruction CMP not yet implemented."
	078 Move X8, 0x295000
	079 Move X8, [X8+936]
	080 Move X0, X19
	081 Move X2, X31
	082 Move X1, [X8]
	083 Call String.op_Equality, X0, X1
	084 Move TEMP, X0
	085 And TEMP, TEMP, 1
	086 Compare TEMP, 1
	087 JumpIfEqual {132}
	088 Move X8, 0x2C8000
	089 Move X8, [X8+3560]
	090 Move X8, 0x2D3000
	091 Move X8, [X8+1560]
	092 Move X8, 0x2C7000
	093 Move X8, [X8+1512]
	094 Move X0, X19
	095 Move X2, X31
	096 Move X1, [X8]
	097 Call String.op_Equality, X0, X1
	098 Move TEMP, X0
	099 And TEMP, TEMP, 1
	100 Compare TEMP, 1
	101 JumpIfEqual {132}
	102 Move X8, 0x2C9000
	103 Move X8, [X8+1224]
	104 Move X8, 0x2D3000
	105 Move X8, [X8+1584]
	106 Move W1, 1
	107 Move X0, X19
	108 Move X2, X31
	109 Call String.get_Chars, X0, X1
	110 And W8, W0, 0xFFFF
	111 NotImplemented "Instruction CMP not yet implemented."
	112 Move X8, 0x2D3000
	113 Move X8, [X8+1520]
	114 Move X0, X19
	115 Move X2, X31
	116 Move X1, [X8]
	117 Call String.op_Equality, X0, X1
	118 Move TEMP, X0
	119 And TEMP, TEMP, 1
	120 Compare TEMP, 1
	121 JumpIfEqual {132}
	122 Move X8, 0x2D3000
	123 Move X8, [X8+1504]
	124 Move X0, X19
	125 Move X2, X31
	126 Move X1, [X8]
	127 Call String.op_Equality, X0, X1
	128 Move TEMP, X0
	129 And TEMP, TEMP, 1
	130 Compare TEMP, 1
	131 JumpIfNotEqual {139}
	132 Move W0, 1
	133 Move X20, [X31+16]
	134 Move X19, [X31+24]
	135 Move X30, [X31+32]
	136 Return X0
	137 Move X8, 0x2D3000
	138 Move X8, [X8+1552]
	139 Move X8, 0x2D3000
	140 Move X8, [X8+1576]
	141 Move X1, [X8]
	142 Move X0, X19
	143 Move X20, [X31+16]
	144 Move X19, [X31+24]
	145 Move X2, X31
	146 Move X30, [X31+32]
	147 Call String.op_Equality, X0, X1
	148 Return X0
	149 Call 0x1C17F20

Method: System.Byte[] Append(System.UInt16 code, System.String reason)

Disassembly:
	0x03E690F4 MOV X2, X31
	0x03E690F8 BL 0x322BD98
	0x03E690FC ADDS W31, W0, 0x1
	0x03E69100 B.EQ 0x3E69180
	0x03E69104 MOV W20, W0
	0x03E69108 MOVZ W1, 0x22
	0x03E6910C MOV X0, X19
	0x03E69110 MOV X2, X31
	0x03E69114 BL 0x322C668
	0x03E69118 CMP W0, W20
	0x03E6911C B.EQ 0x3E69180
	0x03E69120 ORN W8, W31, W20, 0x0
	0x03E69124 ADD W2, W0, W8
	0x03E69128 CMP W2, 0x0
	0x03E6912C B.LE 0x3E6916C
	0x03E69130 ADD W1, W20, 0x1
	0x03E69134 MOV X0, X19
	0x03E69138 MOV X3, X31
	0x03E6913C BL 0x3228DE4
	0x03E69140 CBZ X0, 0x3E69190
	0x03E69144 ADRP X8, 0x2BE000
	0x03E69148 ADRP X9, 0x295000
	0x03E6914C LDR X8, [X8 + 0x810]
	0x03E69150 LDR X9, [X9 + 0xCD8]
	0x03E69154 LDP X20, X19, [X31 + 0x10]
	0x03E69158 MOV X3, X31
	0x03E6915C LDR X1, [X8]
	0x03E69160 LDR X2, [X9]
	0x03E69164 LDR X30, [X31], #0x20
	0x03E69168 B 0x32293BC
	0x03E6916C ADRP X8, 0x28C000
	0x03E69170 LDR X8, [X8 + 0x278]
	0x03E69174 LDR X8, [X8]
	0x03E69178 LDR X8, [X8 + 0xB8]
	0x03E6917C LDR X19, [X8]
	0x03E69180 MOV X0, X19
	0x03E69184 LDP X20, X19, [X31 + 0x10]
	0x03E69188 LDR X30, [X31], #0x20
	0x03E6918C RET
	0x03E69190 BL 0x1C16F20
	0x03E69194 STP X30, X23, [X31 - 0x30]!
	0x03E69198 STP X22, X21, [X31 + 0x10]
	0x03E6919C STP X20, X19, [X31 + 0x20]
	0x03E691A0 ADRP X23, 0x57F000
	0x03E691A4 ADRP X22, 0x28A000
	0x03E691A8 ADRP X21, 0x291000
	0x03E691AC LDRB W8, [X23 + 0xCE1]
	0x03E691B0 LDR X22, [X22 + 0xAC8]
	0x03E691B4 LDR X21, [X21 + 0x248]
	0x03E691B8 MOV W20, W1
	0x03E691BC MOV X19, X0
	0x03E691C0 TBNZ X8, 0x0, 0x3E691E4
	0x03E691C4 ADRP X0, 0x291000
	0x03E691C8 LDR X0, [X0 + 0x248]
	0x03E691CC BL 0x1C16CF4
	0x03E691D0 ADRP X0, 0x28A000
	0x03E691D4 LDR X0, [X0 + 0xAC8]
	0x03E691D8 BL 0x1C16CF4
	0x03E691DC MOVZ W8, 0x1
	0x03E691E0 STRB W8, [X23 + 0xCE1]
	0x03E691E4 LDR X0, [X22]
	0x03E691E8 MOV W1, W31
	0x03E691EC BL 0x1C16D6C
	0x03E691F0 LDR X8, [X21]
	0x03E691F4 MOV X21, X0
	0x03E691F8 LDR W9, [X8 + 0xE0]
	0x03E691FC CBNZ W9, 0x3E69208
	0x03E69200 MOV X0, X8
	0x03E69204 BL 0x1C16DFC
	0x03E69208 MOV W0, W20
	0x03E6920C MOV X1, X21
	0x03E69210 BL 0x3E6923C
	0x03E69214 CBZ X19, 0x3E69238
	0x03E69218 MOV X1, X0
	0x03E6921C MOV X0, X19
	0x03E69220 LDP X20, X19, [X31 + 0x20]
	0x03E69224 LDP X22, X21, [X31 + 0x10]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x580000
	007 Move X21, 0x292000
	008 Move W8, [X22+3281]
	009 Move X21, [X21+584]
	010 Move X19, X1
	011 Move W20, W0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {33}
	016 Move X0, 0x292000
	017 Move X0, [X0+584]
	018 Call 0x1C17CF4
	019 Move X0, 0x303000
	020 Move X0, [X0+3768]
	021 Call 0x1C17CF4
	022 Move X0, 0x2B8000
	023 Move X0, [X0+1488]
	024 Call 0x1C17CF4
	025 Move X0, 0x304000
	026 Move X0, [X0+552]
	027 Call 0x1C17CF4
	028 Move X0, 0x28F000
	029 Move X0, [X0+2056]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X22+3281], W8
	033 Move X0, [X21]
	034 Move W8, [X0+224]
	035 Compare W8, 0
	036 JumpIfNotEqual {38}
	037 Call 0x1C17DFC
	038 Move W1, 1
	039 Move W0, W20
	040 Call Ext.ToByteArray, X0, X1
	041 Move X21, X0
	042 Compare X19, 0
	043 JumpIfEqual {85}
	044 Move W8, [X19+16]
	045 Compare W8, 0
	046 JumpIfEqual {85}
	047 Move X8, 0x28F000
	048 Move X8, [X8+2056]
	049 Move X0, [X8]
	050 Call 0x1C17F10
	051 Move X8, 0x304000
	052 Move X8, [X8+552]
	053 Move X1, X21
	054 Move X20, X0
	055 Move X2, [X8]
	056 Call List`1<Byte>..ctor, X0, X1
	057 Move X0, X31
	058 Call Encoding.get_UTF8
	059 Compare X0, 0
	060 JumpIfEqual {92}
	061 Move X8, [X0]
	062 Move X1, X19
	063 Move X9, [X8+616]
	064 Move X2, [X8+624]
	065 NotImplemented "Instruction BLR not yet implemented."
	066 Compare X20, 0
	067 JumpIfEqual {92}
	068 Move X8, 0x303000
	069 Move X8, [X8+3768]
	070 Move X1, X0
	071 Move X0, X20
	072 Move X2, [X8]
	073 Call List`1<Byte>.AddRange, X0, X1
	074 Move X8, 0x2B8000
	075 Move X8, [X8+1488]
	076 Move X0, X20
	077 Move X20, [X31+32]
	078 Move X19, [X31+40]
	079 Move X22, [X31+16]
	080 Move X21, [X31+24]
	081 Move X1, [X8]
	082 Move X30, [X31+48]
	083 Call List`1<Byte>.ToArray, X0
	084 Return X0
	085 Move X0, X21
	086 Move X20, [X31+32]
	087 Move X19, [X31+40]
	088 Move X22, [X31+16]
	089 Move X21, [X31+24]
	090 Move X30, [X31+48]
	091 Return X0
	092 Call 0x1C17F20

Method: System.Byte[] Compress(System.Byte[] data, WebSocketSharp.CompressionMethod method)

Disassembly:
	0x03E692B4 STRB W8, [X21 + 0xCF2]
	0x03E692B8 ANDS W31, W20, 0xFF
	0x03E692BC B.EQ 0x3E6937C
	0x03E692C0 ADRP X8, 0x303000
	0x03E692C4 LDR X8, [X8 + 0x2A0]
	0x03E692C8 MOVN X9, 0x0
	0x03E692CC ADD X0, X31, 0x8
	0x03E692D0 MOV X1, X31
	0x03E692D4 LDR X8, [X8]
	0x03E692D8 STRB W20, [X31 + 0x18]
	0x03E692DC STP X8, X9, [X31 + 0x8]
	0x03E692E0 BL 0x33B162C
	0x03E692E4 CBZ X0, 0x3E693A4
	0x03E692E8 ADRP X20, 0x303000
	0x03E692EC LDR X20, [X20 + 0x2B0]
	0x03E692F0 MOV X1, X31
	0x03E692F4 BL 0x322B5E4
	0x03E692F8 LDR X8, [X20]
	0x03E692FC MOV X1, X0
	0x03E69300 MOV X2, X31
	0x03E69304 MOV X0, X8
	0x03E69308 BL 0x321EFD0
	0x03E6930C MOV X20, X0
	0x03E69310 CBZ X19, 0x3E69390
	0x03E69314 LDR X8, [X19 + 0x18]
	0x03E69318 CBZ X8, 0x3E69390
	0x03E6931C ADRP X8, 0x291000
	0x03E69320 LDR X8, [X8 + 0x248]
	0x03E69324 LDR X0, [X8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x580000
	006 Move W8, [X21+3282]
	007 Move W20, W1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x292000
	014 Move X0, [X0+584]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+3282], W8
	018 And W8, W20, 255
	019 NotImplemented "Instruction CMP not yet implemented."
	020 Move X8, 0x292000
	021 Move X8, [X8+584]
	022 Move X0, [X8]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 Move X0, X19
	028 Move X20, [X31+16]
	029 Move X19, [X31+24]
	030 Move X30, [X31+32]
	031 Move X21, [X31+40]
	032 Call Ext.compress, X0
	033 Return X0
	034 Move X0, X19
	035 Move X20, [X31+16]
	036 Move X19, [X31+24]
	037 Move X30, [X31+32]
	038 Move X21, [X31+40]
	039 Return X0

Method: System.IO.Stream Compress(System.IO.Stream stream, WebSocketSharp.CompressionMethod method)

Disassembly:
	0x03E69328 LDR W8, [X0 + 0xE0]
	0x03E6932C CBNZ W8, 0x3E69334
	0x03E69330 BL 0x1C16DFC
	0x03E69334 ADRP X8, 0x2B2000
	0x03E69338 ADRP X9, 0x303000
	0x03E6933C LDR X8, [X8 + 0x8B0]
	0x03E69340 LDR X9, [X9 + 0x2A8]
	0x03E69344 MOV X0, X19
	0x03E69348 LDR X1, [X8]
	0x03E6934C LDR X2, [X9]
	0x03E69350 BL 0x21E2C44
	0x03E69354 ADRP X8, 0x303000
	0x03E69358 LDR X8, [X8 + 0x2B8]
	0x03E6935C MOV X2, X0
	0x03E69360 MOV X1, X20
	0x03E69364 MOV X3, X31
	0x03E69368 LDR X8, [X8]
	0x03E6936C MOV X0, X8
	0x03E69370 BL 0x3227BD4
	0x03E69374 MOV X20, X0
	0x03E69378 B 0x3E69390
	0x03E6937C ADRP X8, 0x28C000
	0x03E69380 LDR X8, [X8 + 0x278]
	0x03E69384 LDR X8, [X8]
	0x03E69388 LDR X8, [X8 + 0xB8]
	0x03E6938C LDR X20, [X8]
	0x03E69390 MOV X0, X20
	0x03E69394 LDP X20, X19, [X31 + 0x30]
	0x03E69398 LDP X30, X21, [X31 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x580000
	006 Move W8, [X21+3283]
	007 Move W20, W1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x292000
	014 Move X0, [X0+584]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+3283], W8
	018 And W8, W20, 255
	019 NotImplemented "Instruction CMP not yet implemented."
	020 Move X8, 0x292000
	021 Move X8, [X8+584]
	022 Move X0, [X8]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 Move X0, X19
	028 Move X20, [X31+16]
	029 Move X19, [X31+24]
	030 Move X30, [X31+32]
	031 Move X21, [X31+40]
	032 Call Ext.compress, X0
	033 Return X0
	034 Move X0, X19
	035 Move X20, [X31+16]
	036 Move X19, [X31+24]
	037 Move X30, [X31+32]
	038 Move X21, [X31+40]
	039 Return X0

Method: System.Byte[] CompressToArray(System.IO.Stream stream, WebSocketSharp.CompressionMethod method)

Disassembly:
	0x03E6939C ADD X31, X31, 0x40
	0x03E693A0 RET
	0x03E693A4 BL 0x1C16F20
	0x03E693A8 AND W8, W0, 0xF8
	0x03E693AC CMP W8, 0x8
	0x03E693B0 CSET W0, EQ
	0x03E693B4 RET
	0x03E693B8 AND W8, W0, 0xFF
	0x03E693BC CMP W8, 0x7
	0x03E693C0 CSET W0, HI
	0x03E693C4 RET
	0x03E693C8 SUB W8, W0, 0x1
	0x03E693CC AND W8, W8, 0xFF
	0x03E693D0 CMP W8, 0x2
	0x03E693D4 CSET W0, CC
	0x03E693D8 RET
	0x03E693DC SUB W8, W0, 0x1
	0x03E693E0 AND W8, W8, 0xFF
	0x03E693E4 CMP W8, 0x2
	0x03E693E8 CSET W0, CC
	0x03E693EC RET
	0x03E693F0 STR X30, [X31 - 0x20]!
	0x03E693F4 STP X20, X19, [X31 + 0x10]
	0x03E693F8 CBZ X2, 0x3E6942C
	0x03E693FC MOV W20, W0
	0x03E69400 LDR X8, [X2 + 0x18]
	0x03E69404 LDR X0, [X2 + 0x40]
	0x03E69408 LDR X2, [X2 + 0x28]
	0x03E6940C MOV W19, W1
	0x03E69410 MOV W1, W20
	0x03E69414 BLR X8

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x580000
	007 Move X22, 0x292000
	008 Move W8, [X21+3284]
	009 Move X22, [X22+584]
	010 Move W20, W1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x292000
	017 Move X0, [X0+584]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+3284], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 And W8, W20, 255
	027 Move X0, X19
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Move X20, [X31+32]
	030 Move X19, [X31+40]
	031 Move X22, [X31+16]
	032 Move X21, [X31+24]
	033 Move X30, [X31+48]
	034 Call Ext.compressToArray, X0
	035 Return X0
	036 Move X20, [X31+32]
	037 Move X19, [X31+40]
	038 Move X22, [X31+16]
	039 Move X21, [X31+24]
	040 Move X30, [X31+48]

Method: System.Boolean Contains(System.String value, System.Char[] anyOf)

Disassembly:
	0x03E6962C LDP X20, X19, [X31 + 0x20]
	0x03E69630 LDP X22, X21, [X31 + 0x10]
	0x03E69634 AND W0, W0, 0x1
	0x03E69638 LDR X30, [X31], #0x30
	0x03E6963C RET
	0x03E69640 STR X30, [X31 - 0x40]!
	0x03E69644 STP X24, X23, [X31 + 0x10]
	0x03E69648 STP X22, X21, [X31 + 0x20]
	0x03E6964C STP X20, X19, [X31 + 0x30]
	0x03E69650 ADRP X20, 0x57F000
	0x03E69654 LDRB W8, [X20 + 0xCE4]
	0x03E69658 MOV X19, X0
	0x03E6965C TBNZ X8, 0x0, 0x3E69680
	0x03E69660 ADRP X0, 0x303000

ISIL:
	001 Move [X31-16], X30
	002 Compare X1, 0
	003 JumpIfEqual {15}
	004 Move X8, [X1+24]
	005 Compare X8, 0
	006 JumpIfEqual {15}
	007 Compare X0, 0
	008 JumpIfEqual {18}
	009 Move X2, X31
	010 Call String.IndexOfAny, X0, X1
	011 NotImplemented "Instruction ORN not yet implemented."
	012 Move W0, W8
	013 ShiftRight W0, 31
	014 And W0, W0, 0x7FFFFFFF
	015 Move W0, W31
	016 Move X30, [X31+16]
	017 Return X0
	018 Call 0x1C17F20

Method: System.Boolean Contains(System.Collections.Specialized.NameValueCollection collection, System.String name)

Disassembly:
	0x03E69664 LDR X0, [X0 + 0x2D0]
	0x03E69668 BL 0x1C16CF4
	0x03E6966C ADRP X0, 0x303000
	0x03E69670 LDR X0, [X0 + 0x2D8]
	0x03E69674 BL 0x1C16CF4
	0x03E69678 MOVZ W8, 0x1
	0x03E6967C STRB W8, [X20 + 0xCE4]
	0x03E69680 CBZ X19, 0x3E69760
	0x03E69684 LDR W22, [X19 + 0x10]

ISIL:
	001 Move [X31-16], X30
	002 Compare X0, 0
	003 JumpIfEqual {10}
	004 Move X2, X31
	005 Call NameValueCollection.get_Item, X0, X1
	006 NotImplemented "Instruction CMP not yet implemented."
	007 NotImplemented "Instruction CSET not yet implemented."
	008 Move X30, [X31+16]
	009 Return X0
	010 Call 0x1C17F20

Method: System.Boolean Contains(System.Collections.Specialized.NameValueCollection collection, System.String name, System.String value, System.StringComparison comparisonTypeForValue)

Disassembly:
	0x03E69688 CMP W22, 0x1
	0x03E6968C B.LT 0x3E69740
	0x03E69690 ADRP X23, 0x303000
	0x03E69694 ADRP X24, 0x303000
	0x03E69698 LDR X23, [X23 + 0x2D0]
	0x03E6969C LDR X24, [X24 + 0x2D8]
	0x03E696A0 MOV W20, W31
	0x03E696A4 MOV X0, X19
	0x03E696A8 MOV W1, W20
	0x03E696AC MOV X2, X31
	0x03E696B0 BL 0x3222A1C
	0x03E696B4 AND W8, W0, 0xFFFF
	0x03E696B8 CMP W8, 0x1F
	0x03E696BC B.HI 0x3E6972C
	0x03E696C0 MOV W21, W0
	0x03E696C4 LDR X0, [X23]
	0x03E696C8 CBZ X0, 0x3E69760
	0x03E696CC MOV W1, W21
	0x03E696D0 MOV X2, X31
	0x03E696D4 BL 0x322BD98
	0x03E696D8 ADDS W31, W0, 0x1
	0x03E696DC B.EQ 0x3E69748
	0x03E696E0 AND W8, W21, 0xFFFF
	0x03E696E4 CMP W8, 0xA
	0x03E696E8 B.NE 0x3E69734
	0x03E696EC ADD W20, W20, 0x1
	0x03E696F0 CMP W20, W22
	0x03E696F4 B.EQ 0x3E69740
	0x03E696F8 MOV X0, X19
	0x03E696FC MOV W1, W20
	0x03E69700 MOV X2, X31
	0x03E69704 BL 0x3222A1C
	0x03E69708 LDR X8, [X24]
	0x03E6970C CBZ X8, 0x3E69760
	0x03E69710 MOV W1, W0
	0x03E69714 MOV X0, X8
	0x03E69718 MOV X2, X31
	0x03E6971C BL 0x322BD98
	0x03E69720 ADDS W31, W0, 0x1
	0x03E69724 B.NE 0x3E69734
	0x03E69728 B 0x3E69748
	0x03E6972C CMP W8, 0x7F
	0x03E69730 B.EQ 0x3E69748
	0x03E69734 ADD W20, W20, 0x1
	0x03E69738 CMP W20, W22
	0x03E6973C B.LT 0x3E696A4
	0x03E69740 MOVZ W0, 0x1
	0x03E69744 B 0x3E6974C
	0x03E69748 MOV W0, W31
	0x03E6974C LDP X20, X19, [X31 + 0x30]
	0x03E69750 LDP X22, X21, [X31 + 0x20]
	0x03E69754 LDP X24, X23, [X31 + 0x10]
	0x03E69758 LDR X30, [X31], #0x40
	0x03E6975C RET
	0x03E69760 BL 0x1C16F20
	0x03E69764 STP X30, X21, [X31 - 0x20]!
	0x03E69768 STP X20, X19, [X31 + 0x10]
	0x03E6976C ADRP X20, 0x57F000
	0x03E69770 LDRB W8, [X20 + 0xCE5]
	0x03E69774 MOV X19, X0
	0x03E69778 TBNZ X8, 0x0, 0x3E69790
	0x03E6977C ADRP X0, 0x303000
	0x03E69780 LDR X0, [X0 + 0x2E0]
	0x03E69784 BL 0x1C16CF4
	0x03E69788 MOVZ W8, 0x1
	0x03E6978C STRB W8, [X20 + 0xCE5]
	0x03E69790 CBZ X19, 0x3E6980C
	0x03E69794 LDR W8, [X19 + 0x10]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x580000
	008 Move W8, [X23+3285]
	009 Move W19, W3
	010 Move X20, X2
	011 Move X21, X1
	012 Move X22, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0x294000
	018 Move X0, [X0+2264]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X23+3285], W8
	022 Compare X22, 0
	023 JumpIfEqual {82}
	024 Move X0, X22
	025 Move X1, X21
	026 Move X2, X31
	027 Call NameValueCollection.get_Item, X0, X1
	028 Compare X0, 0
	029 JumpIfEqual {74}
	030 Move X8, 0x294000
	031 Move X8, [X8+2264]
	032 Move X21, X0
	033 Move W1, 1
	034 Move X0, [X8]
	035 Call 0x1C17D6C
	036 Compare X0, 0
	037 JumpIfEqual {82}
	038 Move W8, [X0+24]
	039 Move X1, X0
	040 Compare W8, 0
	041 JumpIfEqual {83}
	042 Move W8, 44
	043 Move X0, X21
	044 Move X2, X31
	045 NotImplemented "Instruction STRH not yet implemented."
	046 Call String.Split, X0, X1
	047 Compare X0, 0
	048 JumpIfEqual {82}
	049 Move W8, [X0+24]
	050 Move X21, X0
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Move W22, W31
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Add X8, X21, W22
	055 Move X0, [X8+32]
	056 Compare X0, 0
	057 JumpIfEqual {82}
	058 Move X1, X31
	059 Call String.Trim, X0
	060 Compare X0, 0
	061 JumpIfEqual {82}
	062 Move X1, X20
	063 Move W2, W19
	064 Move X3, X31
	065 Call String.Equals, X0, X1, X2
	066 Move TEMP, X0
	067 And TEMP, TEMP, 1
	068 Compare TEMP, 1
	069 JumpIfEqual {74}
	070 Move W8, [X21+24]
	071 Add W22, W22, 1
	072 NotImplemented "Instruction CMP not yet implemented."
	073 Move W0, W31
	074 Move X20, [X31+32]
	075 Move X19, [X31+40]
	076 Move X22, [X31+16]
	077 Move X21, [X31+24]
	078 And W0, W0, 1
	079 Move X30, [X31+48]
	080 Move X23, [X31+56]
	081 Return X0
	082 Call 0x1C17F20
	083 Call 0x1C17F28

Method: System.Boolean Contains(System.Collections.Generic.IEnumerable`1<T> source, System.Func`2<T, System.Boolean> condition)

Disassembly:
	0x021E2B10 LDR X0, [X0 + 0x640]
	0x021E2B14 BL 0x1C16D08
	0x021E2B18 MOV X1, X0
	0x021E2B1C MOV X0, X20
	0x021E2B20 MOV X2, X31
	0x021E2B24 BL 0x330E100
	0x021E2B28 B 0x21E2B7C
	0x021E2B2C ADRP X0, 0x1F19000
	0x021E2B30 LDR X0, [X0 + 0x760]
	0x021E2B34 BL 0x1C16D08
	0x021E2B38 BL 0x1C16F10
	0x021E2B3C MOV X20, X0
	0x021E2B40 ADRP X0, 0x1F39000
	0x021E2B44 LDR X0, [X0 + 0x658]
	0x021E2B48 B 0x21E2B68
	0x021E2B4C ADRP X0, 0x1F19000
	0x021E2B50 LDR X0, [X0 + 0x760]
	0x021E2B54 BL 0x1C16D08
	0x021E2B58 BL 0x1C16F10
	0x021E2B5C MOV X20, X0
	0x021E2B60 ADRP X0, 0x1F19000
	0x021E2B64 LDR X0, [X0 + 0x768]
	0x021E2B68 BL 0x1C16D08
	0x021E2B6C MOV X1, X0
	0x021E2B70 MOV X0, X20
	0x021E2B74 MOV X2, X31
	0x021E2B78 BL 0x3316014
	0x021E2B7C MOV X0, X20
	0x021E2B80 MOV X1, X19
	0x021E2B84 BL 0x1C16DEC
	0x021E2B88 STR X30, [X31 - 0x20]!
	0x021E2B8C STP X20, X19, [X31 + 0x10]
	0x021E2B90 LDR X8, [X1 + 0x38]
	0x021E2B94 MOV X20, X1
	0x021E2B98 MOV X19, X0
	0x021E2B9C CBNZ X8, 0x21E2BAC
	0x021E2BA0 MOV X0, X20
	0x021E2BA4 BL 0x1C5C6E0
	0x021E2BA8 LDR X8, [X20 + 0x38]
	0x021E2BAC LDR X0, [X8 + 0x8]
	0x021E2BB0 LDRB W8, [X0 + 0x135]
	0x021E2BB4 TBNZ X8, 0x0, 0x21E2BBC
	0x021E2BB8 BL 0x1C5C684
	0x021E2BBC BL 0x1C16F10
	0x021E2BC0 LDR X8, [X20 + 0x38]
	0x021E2BC4 MOV X1, X19
	0x021E2BC8 MOV X20, X0
	0x021E2BCC LDR X2, [X8 + 0x10]
	0x021E2BD0 BL 0x301B8E0
	0x021E2BD4 MOV X0, X20
	0x021E2BD8 LDP X20, X19, [X31 + 0x10]
	0x021E2BDC LDR X30, [X31], #0x20
	0x021E2BE0 RET
	0x021E2BE4 STR X30, [X31 - 0x20]!
	0x021E2BE8 STP X20, X19, [X31 + 0x10]
	0x021E2BEC LDR X8, [X1 + 0x38]
	0x021E2BF0 MOV X20, X1
	0x021E2BF4 MOV X19, X0
	0x021E2BF8 CBNZ X8, 0x21E2C08
	0x021E2BFC MOV X0, X20
	0x021E2C00 BL 0x1C5C6E0
	0x021E2C04 LDR X8, [X20 + 0x38]
	0x021E2C08 LDR X0, [X8 + 0x8]
	0x021E2C0C LDRB W8, [X0 + 0x135]
	0x021E2C10 TBNZ X8, 0x0, 0x21E2C18
	0x021E2C14 BL 0x1C5C684
	0x021E2C18 BL 0x1C16F10
	0x021E2C1C LDR X8, [X20 + 0x38]
	0x021E2C20 MOV X1, X19
	0x021E2C24 MOV X20, X0
	0x021E2C28 LDR X2, [X8 + 0x10]
	0x021E2C2C LDR X8, [X2]
	0x021E2C30 BLR X8
	0x021E2C34 MOV X0, X20
	0x021E2C38 LDP X20, X19, [X31 + 0x10]
	0x021E2C3C LDR X30, [X31], #0x20
	0x021E2C40 RET
	0x021E2C44 STR X30, [X31 - 0x50]!
	0x021E2C48 STP X26, X25, [X31 + 0x10]
	0x021E2C4C STP X24, X23, [X31 + 0x20]
	0x021E2C50 STP X22, X21, [X31 + 0x30]
	0x021E2C54 STP X20, X19, [X31 + 0x40]
	0x021E2C58 ADRP X22, 0x21F7000
	0x021E2C5C LDRB W8, [X22 + 0x82F]
	0x021E2C60 MOV X21, X2
	0x021E2C64 MOV X20, X1
	0x021E2C68 MOV X19, X0
	0x021E2C6C TBNZ X8, 0x0, 0x21E2CA8
	0x021E2C70 ADRP X0, 0x1F11000
	0x021E2C74 LDR X0, [X0 + 0x8F0]
	0x021E2C78 BL 0x1C16CF4
	0x021E2C7C ADRP X0, 0x1F13000
	0x021E2C80 LDR X0, [X0 + 0x278]
	0x021E2C84 BL 0x1C16CF4
	0x021E2C88 ADRP X0, 0x1F39000
	0x021E2C8C LDR X0, [X0 + 0xA98]
	0x021E2C90 BL 0x1C16CF4
	0x021E2C94 ADRP X0, 0x1F15000
	0x021E2C98 LDR X0, [X0 + 0x110]
	0x021E2C9C BL 0x1C16CF4
	0x021E2CA0 MOVZ W8, 0x1
	0x021E2CA4 STRB W8, [X22 + 0x82F]
	0x021E2CA8 CBZ X19, 0x21E2DB0
	0x021E2CAC LDR W22, [X19 + 0x18]
	0x021E2CB0 CBZ W22, 0x21E2D7C
	0x021E2CB4 ADRP X8, 0x1F11000
	0x021E2CB8 LDR X8, [X8 + 0x8F0]
	0x021E2CBC LDR X0, [X8]
	0x021E2CC0 BL 0x1C16F10
	0x021E2CC4 MOVZ W1, 0x40
	0x021E2CC8 MOV X2, X31
	0x021E2CCC MOV X21, X0
	0x021E2CD0 BL 0x3231B28
	0x021E2CD4 LDR W8, [X19 + 0x18]
	0x021E2CD8 SUB W22, W22, 0x1
	0x021E2CDC CMP W22, 0x1
	0x021E2CE0 B.LT 0x21E2D2C
	0x021E2CE4 ADRP X26, 0x1F39000
	0x021E2CE8 LDR X26, [X26 + 0xA98]
	0x021E2CEC MOV X23, X31
	0x021E2CF0 MOV W24, W22
	0x021E2CF4 ADD X25, X19, 0x20
	0x021E2CF8 CMP X23, W8, UXTW
	0x021E2CFC B.CS 0x21E2DA8
	0x021E2D00 CBZ X21, 0x21E2DAC
	0x021E2D04 LDR X2, [X25, X23, LSL #3]
	0x021E2D08 LDR X1, [X26]
	0x021E2D0C MOV X0, X21
	0x021E2D10 MOV X3, X20
	0x021E2D14 MOV X4, X31
	0x021E2D18 BL 0x3234D98
	0x021E2D1C LDR W8, [X19 + 0x18]
	0x021E2D20 ADD X23, X23, 0x1
	0x021E2D24 CMP X24, X23
	0x021E2D28 B.NE 0x21E2CF8
	0x021E2D2C CMP W22, W8
	0x021E2D30 B.CS 0x21E2DA8
	0x021E2D34 CBZ X21, 0x21E2DAC
	0x021E2D38 ADRP X8, 0x1F15000
	0x021E2D3C LDR X8, [X8 + 0x110]
	0x021E2D40 ADD X9, X19, W22, 0x3, SXTW
	0x021E2D44 LDR X2, [X9 + 0x20]
	0x021E2D48 MOV X0, X21
	0x021E2D4C LDR X1, [X8]
	0x021E2D50 MOV X3, X31
	0x021E2D54 BL 0x3234224
	0x021E2D58 LDR X8, [X21]
	0x021E2D5C MOV X0, X21
	0x021E2D60 LDP X20, X19, [X31 + 0x40]
	0x021E2D64 LDP X22, X21, [X31 + 0x30]
	0x021E2D68 LDP X2, X1, [X8 + 0x168]
	0x021E2D6C LDP X24, X23, [X31 + 0x20]
	0x021E2D70 LDP X26, X25, [X31 + 0x10]
	0x021E2D74 LDR X30, [X31], #0x50
	0x021E2D78 BR X2
	0x021E2D7C ADRP X8, 0x1F13000
	0x021E2D80 LDR X8, [X8 + 0x278]
	0x021E2D84 LDP X20, X19, [X31 + 0x40]
	0x021E2D88 LDP X22, X21, [X31 + 0x30]
	0x021E2D8C LDP X24, X23, [X31 + 0x20]
	0x021E2D90 LDR X8, [X8]
	0x021E2D94 LDP X26, X25, [X31 + 0x10]
	0x021E2D98 LDR X8, [X8 + 0xB8]
	0x021E2D9C LDR X0, [X8]
	0x021E2DA0 LDR X30, [X31], #0x50
	0x021E2DA4 RET
	0x021E2DA8 BL 0x1C16F28
	0x021E2DAC BL 0x1C16F20
	0x021E2DB0 ADRP X0, 0x1F16000
	0x021E2DB4 LDR X0, [X0 + 0x528]
	0x021E2DB8 BL 0x1C16D08
	0x021E2DBC BL 0x1C16F10
	0x021E2DC0 MOV X19, X0
	0x021E2DC4 ADRP X0, 0x1F39000
	0x021E2DC8 LDR X0, [X0 + 0x640]
	0x021E2DCC BL 0x1C16D08
	0x021E2DD0 MOV X1, X0
	0x021E2DD4 MOV X0, X19
	0x021E2DD8 MOV X2, X31
	0x021E2DDC BL 0x330E100
	0x021E2DE0 MOV X0, X19
	0x021E2DE4 MOV X1, X21
	0x021E2DE8 BL 0x1C16DEC
	0x021E2DEC STP X29, X30, [X31 - 0x60]!
	0x021E2DF0 STP X28, X27, [X31 + 0x10]
	0x021E2DF4 STP X26, X25, [X31 + 0x20]
	0x021E2DF8 STP X24, X23, [X31 + 0x30]
	0x021E2DFC STP X22, X21, [X31 + 0x40]
	0x021E2E00 STP X20, X19, [X31 + 0x50]
	0x021E2E04 ADD X29, X31, 0x0
	0x021E2E08 SUB X31, X31, 0x10
	0x021E2E0C MRS X22, 0xC000
	0x021E2E10 LDR X8, [X22 + 0x28]
	0x021E2E14 MOV X19, X2
	0x021E2E18 MOV X21, X1
	0x021E2E1C MOV X20, X0
	0x021E2E20 STUR X8, [X29 - 0x8]
	0x021E2E24 LDR X8, [X2 + 0x38]
	0x021E2E28 CBNZ X8, 0x21E2E70
	0x021E2E2C ADRP X0, 0x1F11000
	0x021E2E30 LDR X0, [X0 + 0x8F0]
	0x021E2E34 BL 0x1C16CF4
	0x021E2E38 ADRP X0, 0x1F13000
	0x021E2E3C LDR X0, [X0 + 0x278]
	0x021E2E40 BL 0x1C16CF4
	0x021E2E44 ADRP X0, 0x1F39000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X8, [X2+56]
	008 Move X20, X2
	009 Move X21, X1
	010 Move X19, X0
	011 Compare X8, 0
	012 JumpIfNotEqual {24}
	013 Move X0, 0x1F12000
	014 Move X0, [X0+3584]
	015 Call 0x1C17CF4
	016 Move X0, 0x1F12000
	017 Move X0, [X0+3608]
	018 Call 0x1C17CF4
	019 Move X8, [X20+56]
	020 Compare X8, 0
	021 JumpIfNotEqual {24}
	022 Move X0, X20
	023 Call 0x1C5D6E0
	024 Compare X19, 0
	025 JumpIfEqual {175}
	026 Move X8, [X20+56]
	027 Move X1, [X8]
	028 Move W8, [X1+309]
	029 Move TEMP, X8
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfEqual {36}
	033 Move X0, X1
	034 Call 0x1C5D684
	035 Move X1, X0
	036 Move X8, [X19]
	037 NotImplemented "Instruction LDRH not yet implemented."
	038 Compare X9, 0
	039 JumpIfEqual {46}
	040 Move X10, [X8+176]
	041 Add X10, X10, 8
	042 NotImplemented "Instruction LDUR not yet implemented."
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Subtract X9, X9, 1
	045 Add X10, X10, 16
	046 Move X0, X19
	047 Move W2, W31
	048 Call 0x1C5D788
	049 NotImplemented "Instruction LDRSW not yet implemented."
	050 Add X8, X8, X9
	051 Add X0, X8, 312
	052 Move X8, [X0]
	053 Move X1, [X0+8]
	054 Move X0, X19
	055 NotImplemented "Instruction BLR not yet implemented."
	056 Move X19, X0
	057 Compare X0, 0
	058 JumpIfEqual {176}
	059 Move X23, 0x1F12000
	060 Move X23, [X23+3608]
	061 Move X8, [X19]
	062 Move X1, [X23]
	063 NotImplemented "Instruction LDRH not yet implemented."
	064 Compare X9, 0
	065 JumpIfEqual {72}
	066 Move X10, [X8+176]
	067 Add X10, X10, 8
	068 NotImplemented "Instruction LDUR not yet implemented."
	069 NotImplemented "Instruction CMP not yet implemented."
	070 Subtract X9, X9, 1
	071 Add X10, X10, 16
	072 Move X0, X19
	073 Move W2, W31
	074 Call 0x1C5D788
	075 NotImplemented "Instruction LDRSW not yet implemented."
	076 Add X8, X8, X9
	077 Add X0, X8, 312
	078 Move X8, [X0]
	079 Move X1, [X0+8]
	080 Move X0, X19
	081 NotImplemented "Instruction BLR not yet implemented."
	082 Move W22, W0
	083 Move TEMP, X0
	084 And TEMP, TEMP, 1
	085 Compare TEMP, 1
	086 JumpIfNotEqual {132}
	087 Move X8, [X20+56]
	088 Move X1, [X8+16]
	089 Move W8, [X1+309]
	090 Move TEMP, X8
	091 And TEMP, TEMP, 1
	092 Compare TEMP, 1
	093 JumpIfEqual {97}
	094 Move X0, X1
	095 Call 0x1C5D684
	096 Move X1, X0
	097 Move X8, [X19]
	098 NotImplemented "Instruction LDRH not yet implemented."
	099 Compare X9, 0
	100 JumpIfEqual {107}
	101 Move X10, [X8+176]
	102 Add X10, X10, 8
	103 NotImplemented "Instruction LDUR not yet implemented."
	104 NotImplemented "Instruction CMP not yet implemented."
	105 Subtract X9, X9, 1
	106 Add X10, X10, 16
	107 Move X0, X19
	108 Move W2, W31
	109 Call 0x1C5D788
	110 NotImplemented "Instruction LDRSW not yet implemented."
	111 Add X8, X8, X9
	112 Add X0, X8, 312
	113 Move X8, [X0]
	114 Move X1, [X0+8]
	115 Move X0, X19
	116 NotImplemented "Instruction BLR not yet implemented."
	117 Move X1, X0
	118 Compare X21, 0
	119 JumpIfEqual {174}
	120 Move X0, [X21+64]
	121 Move X8, [X21+24]
	122 Move X2, [X21+40]
	123 NotImplemented "Instruction BLR not yet implemented."
	124 Move TEMP, X0
	125 And TEMP, TEMP, 1
	126 Compare TEMP, 1
	127 JumpIfNotEqual {61}
	128 Move X20, X31
	129 Move W21, 5
	130 Compare X19, 0
	131 JumpIfNotEqual {137}
	132 Move X20, X31
	133 Move W22, W31
	134 Move W21, 6
	135 Compare X19, 0
	136 JumpIfEqual {160}
	137 Move X10, 0x1F12000
	138 Move X8, [X19]
	139 Move X10, [X10+3584]
	140 NotImplemented "Instruction LDRH not yet implemented."
	141 Move X1, [X10]
	142 Compare X9, 0
	143 JumpIfEqual {150}
	144 Move X10, [X8+176]
	145 Add X10, X10, 8
	146 NotImplemented "Instruction LDUR not yet implemented."
	147 NotImplemented "Instruction CMP not yet implemented."
	148 Subtract X9, X9, 1
	149 Add X10, X10, 16
	150 Move X0, X19
	151 Move W2, W31
	152 Call 0x1C5D788
	153 NotImplemented "Instruction LDRSW not yet implemented."
	154 Add X8, X8, X9
	155 Add X0, X8, 312
	156 Move X8, [X0]
	157 Move X1, [X0+8]
	158 Move X0, X19
	159 NotImplemented "Instruction BLR not yet implemented."
	160 Compare X20, 0
	161 JumpIfNotEqual {177}
	162 NotImplemented "Instruction CMP not yet implemented."
	163 Compare W21, 0
	164 JumpIfNotEqual {166}
	165 Move W22, W31
	166 And W0, W22, 1
	167 Move X20, [X31+32]
	168 Move X19, [X31+40]
	169 Move X22, [X31+16]
	170 Move X21, [X31+24]
	171 Move X30, [X31+48]
	172 Move X23, [X31+56]
	173 Return X0
	174 Call 0x1C17F20
	175 Call 0x1C17F20
	176 Call 0x1C17F20
	177 Move X0, X20
	178 Call 0x1C17F18
	179 Move X21, X0
	180 NotImplemented "Instruction CMP not yet implemented."
	181 Move X0, X21
	182 Call 0x3EB2AD0
	183 Move X20, [X0]
	184 Call 0x3EB2AE0
	185 Move W21, W31
	186 Move W22, W31
	187 Compare X19, 0
	188 JumpIfNotEqual {137}
	189 Move X20, X31
	190 Move X21, X0
	191 Compare X19, 0
	192 JumpIfEqual {216}
	193 Move X10, 0x1F12000
	194 Move X8, [X19]
	195 Move X10, [X10+3584]
	196 NotImplemented "Instruction LDRH not yet implemented."
	197 Move X1, [X10]
	198 Compare X9, 0
	199 JumpIfEqual {206}
	200 Move X10, [X8+176]
	201 Add X10, X10, 8
	202 NotImplemented "Instruction LDUR not yet implemented."
	203 NotImplemented "Instruction CMP not yet implemented."
	204 Subtract X9, X9, 1
	205 Add X10, X10, 16
	206 Move X0, X19
	207 Move W2, W31
	208 Call 0x1C5D788
	209 NotImplemented "Instruction LDRSW not yet implemented."
	210 Add X8, X8, X9
	211 Add X0, X8, 312
	212 Move X8, [X0]
	213 Move X1, [X0+8]
	214 Move X0, X19
	215 NotImplemented "Instruction BLR not yet implemented."
	216 Compare X20, 0
	217 JumpIfNotEqual {220}
	218 Move X0, X21
	219 Call 0x1D2D690
	220 Move X0, X20
	221 Call 0x1C17F18
	222 Call 0x1991590

Method: System.Boolean ContainsTwice(System.String[] values)

Disassembly:
	0x03E69798 CMP W8, 0x1
	0x03E6979C B.LT 0x3E697F4
	0x03E697A0 ADRP X21, 0x303000
	0x03E697A4 LDR X21, [X21 + 0x2E0]
	0x03E697A8 MOV W20, W31
	0x03E697AC MOV X0, X19
	0x03E697B0 MOV W1, W20
	0x03E697B4 MOV X2, X31
	0x03E697B8 BL 0x3222A1C
	0x03E697BC SUB W8, W0, 0x20
	0x03E697C0 AND W8, W8, 0xFFFF
	0x03E697C4 CMP W8, 0x5E
	0x03E697C8 B.HI 0x3E697FC
	0x03E697CC MOV W1, W0
	0x03E697D0 LDR X0, [X21]
	0x03E697D4 CBZ X0, 0x3E6980C
	0x03E697D8 MOV X2, X31
	0x03E697DC BL 0x322BD98
	0x03E697E0 TBZ X0, 0x1F, 0x3E697FC
	0x03E697E4 LDR W8, [X19 + 0x10]
	0x03E697E8 ADD W20, W20, 0x1
	0x03E697EC CMP W20, W8
	0x03E697F0 B.LT 0x3E697AC
	0x03E697F4 MOVZ W0, 0x1
	0x03E697F8 B 0x3E69800
	0x03E697FC MOV W0, W31
	0x03E69800 LDP X20, X19, [X31 + 0x10]
	0x03E69804 LDP X30, X21, [X31], #0x20
	0x03E69808 RET
	0x03E6980C BL 0x1C16F20
	0x03E69810 STR X30, [X31 - 0x30]!
	0x03E69814 STP X22, X21, [X31 + 0x10]
	0x03E69818 STP X20, X19, [X31 + 0x20]
	0x03E6981C ADRP X22, 0x57F000
	0x03E69820 ADRP X21, 0x303000
	0x03E69824 LDRB W8, [X22 + 0xCE6]
	0x03E69828 LDR X21, [X21 + 0x2C0]
	0x03E6982C MOV X20, X1
	0x03E69830 MOV X19, X0
	0x03E69834 TBNZ X8, 0x0, 0x3E6987C
	0x03E69838 ADRP X0, 0x291000
	0x03E6983C LDR X0, [X0 + 0x248]
	0x03E69840 BL 0x1C16CF4
	0x03E69844 ADRP X0, 0x303000
	0x03E69848 LDR X0, [X0 + 0x2C0]
	0x03E6984C BL 0x1C16CF4
	0x03E69850 ADRP X0, 0x2D1000
	0x03E69854 LDR X0, [X0 + 0xB88]
	0x03E69858 BL 0x1C16CF4
	0x03E6985C ADRP X0, 0x2D5000
	0x03E69860 LDR X0, [X0 + 0x950]
	0x03E69864 BL 0x1C16CF4
	0x03E69868 ADRP X0, 0x2D1000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x580000
	006 Move X21, 0x304000
	007 Move W8, [X20+3286]
	008 Move X21, [X21+560]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {25}
	014 Move X0, 0x2EB000
	015 Move X0, [X0+2568]
	016 Call 0x1C17CF4
	017 Move X0, 0x304000
	018 Move X0, [X0+568]
	019 Call 0x1C17CF4
	020 Move X0, 0x304000
	021 Move X0, [X0+560]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X20+3286], W8
	025 Move X0, [X21]
	026 Call 0x1C17F10
	027 Move X1, X31
	028 Move X20, X0
	029 Call Object..ctor, X0
	030 Compare X20, 0
	031 JumpIfEqual {63}
	032 Move [X20+24], X19
	033 Compare X19, 0
	034 JumpIfEqual {63}
	035 Move W8, [X19+24]
	036 Move X9, 0x2EB000
	037 Move X9, [X9+2568]
	038 Move [X20+40], X31
	039 Move [X20+32], W8
	040 Subtract W8, W8, 1
	041 Move [X20+16], W8
	042 Move X0, [X9]
	043 Move X19, 0x304000
	044 Move X19, [X19+568]
	045 Call 0x1C17F10
	046 Move X2, [X19]
	047 Move X1, X20
	048 Move X3, X31
	049 Move X19, X0
	050 Call Func`2<Int32, Boolean>..ctor, X0, X1, X2
	051 Move [X20+40], X19
	052 Compare X19, 0
	053 JumpIfEqual {63}
	054 Move X3, [X19+24]
	055 Move X0, [X19+64]
	056 Move X2, [X19+40]
	057 Move X20, [X31+16]
	058 Move X19, [X31+24]
	059 Move W1, W31
	060 Move X30, [X31+32]
	061 Move X21, [X31+40]
	062 CallNoReturn X3
	063 Call 0x1C17F20

Method: T[] Copy(T[] sourceArray, System.Int32 length)

Disassembly:
	0x021E3260 MOV X24, X31
	0x021E3264 ADD X25, X22, 0x20
	0x021E3268 SUB X26, X29, 0xC
	0x021E326C LDR X8, [X19 + 0x38]
	0x021E3270 SUB X3, X29, 0x20
	0x021E3274 MOV X2, X20
	0x021E3278 MOV X4, X21
	0x021E327C LDR X1, [X8 + 0x10]
	0x021E3280 LDR X0, [X1]
	0x021E3284 STUR W24, [X29 - 0xC]
	0x021E3288 STP X26, X21, [X29 - 0x20]
	0x021E328C LDR X8, [X1 + 0x10]
	0x021E3290 BLR X8
	0x021E3294 LDR X8, [X19 + 0x38]
	0x021E3298 MOV X1, X21
	0x021E329C LDR X0, [X8 + 0x18]
	0x021E32A0 BL 0x1C16E04
	0x021E32A4 CBZ X0, 0x21E32BC
	0x021E32A8 LDR X8, [X0]
	0x021E32AC LDP X9, X1, [X8 + 0x168]
	0x021E32B0 BLR X9
	0x021E32B4 CBNZ X22, 0x21E32C4
	0x021E32B8 B 0x21E334C
	0x021E32BC LDR X0, [X27]
	0x021E32C0 CBZ X22, 0x21E334C
	0x021E32C4 LDR W8, [X22 + 0x18]
	0x021E32C8 CMP X24, X8
	0x021E32CC B.CS 0x21E3350

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X2+56]
	006 Move W19, W1
	007 Move X20, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {14}
	010 Move X0, X2
	011 Move X21, X2
	012 Call 0x1C5D6E0
	013 Move X8, [X21+56]
	014 Move X0, [X8]
	015 Move W8, [X0+309]
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {21}
	020 Call 0x1C5D684
	021 Move W1, W19
	022 Call 0x1C17D6C
	023 Move X21, X0
	024 Move X0, X20
	025 Move W1, W31
	026 Move X2, X21
	027 Move W3, W31
	028 Move W4, W19
	029 Move X5, X31
	030 Call Array.Copy, X0, X1, X2, X3, X4
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X0, X21
	034 Move X30, [X31+32]
	035 Move X21, [X31+40]
	036 Return X0

Method: T[] Copy(T[] sourceArray, System.Int64 length)

Disassembly:
	0x021E32D0 STR X0, [X25, X24, LSL #3]
	0x021E32D4 LDR X8, [X19 + 0x38]
	0x021E32D8 MOV X0, X20
	0x021E32DC ADD X24, X24, 0x1
	0x021E32E0 LDR X1, [X8 + 0x8]
	0x021E32E4 LDR X8, [X1]
	0x021E32E8 BLR X8
	0x021E32EC CMP X24, W0, SXTW
	0x021E32F0 B.LT 0x21E326C
	0x021E32F4 ADRP X8, 0x1F10000
	0x021E32F8 LDR X8, [X8 + 0x838]
	0x021E32FC MOV X1, X22
	0x021E3300 MOV X2, X31
	0x021E3304 LDR X0, [X8]
	0x021E3308 BL 0x3227FF8
	0x021E330C B 0x21E331C
	0x021E3310 ADRP X8, 0x1F10000
	0x021E3314 LDR X8, [X8 + 0x830]
	0x021E3318 LDR X0, [X8]
	0x021E331C LDR X8, [X23 + 0x28]
	0x021E3320 LDUR X9, [X29 - 0x8]
	0x021E3324 CMP X8, X9
	0x021E3328 B.NE 0x21E3354
	0x021E332C ADD X31, X29, 0x0
	0x021E3330 LDP X20, X19, [X31 + 0x50]
	0x021E3334 LDP X22, X21, [X31 + 0x40]
	0x021E3338 LDP X24, X23, [X31 + 0x30]
	0x021E333C LDP X26, X25, [X31 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X2+56]
	006 Move X19, X1
	007 Move X20, X0
	008 Compare X8, 0
	009 JumpIfNotEqual {14}
	010 Move X0, X2
	011 Move X21, X2
	012 Call 0x1C5D6E0
	013 Move X8, [X21+56]
	014 Move X0, [X8]
	015 Move W8, [X0+309]
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {21}
	020 Call 0x1C5D684
	021 Move W1, W19
	022 Call 0x1C17D6C
	023 Move X21, X0
	024 Move X0, X20
	025 Move X1, X31
	026 Move X2, X21
	027 Move X3, X31
	028 Move X4, X19
	029 Move X5, X31
	030 Call Array.Copy, X0, X1, X2, X3, X4
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X0, X21
	034 Move X30, [X31+32]
	035 Move X21, [X31+40]
	036 Return X0

Method: System.Void CopyTo(System.IO.Stream sourceStream, System.IO.Stream destinationStream, System.Int32 bufferLength)

Disassembly:
	0x03E685F4 BL 0x1C5C788
	0x03E685F8 B 0x3E68608
	0x03E685FC LDRSW X9, [X10]
	0x03E68600 ADD X8, X8, X9, 0x4, LSL
	0x03E68604 ADD X0, X8, 0x138
	0x03E68608 LDP X8, X1, [X0]
	0x03E6860C MOV X0, X19
	0x03E68610 BLR X8
	0x03E68614 CBNZ X20, 0x3E68620
	0x03E68618 MOV X0, X21
	0x03E6861C BL 0x1D2C690
	0x03E68620 MOV X0, X20
	0x03E68624 BL 0x1C16F18
	0x03E68628 BL 0x1990590
	0x03E6862C STR X30, [X31 - 0x10]!
	0x03E68630 CBZ X1, 0x3E68654
	0x03E68634 LDR X8, [X1 + 0x18]
	0x03E68638 CBZ X8, 0x3E68654
	0x03E6863C CBZ X0, 0x3E68660
	0x03E68640 MOV X2, X31
	0x03E68644 BL 0x322BE8C
	0x03E68648 ORN W8, W31, W0, 0x0
	0x03E6864C UBFM W0, W8, 0x1F, 0x1F
	0x03E68650 B 0x3E68658
	0x03E68654 MOV W0, W31
	0x03E68658 LDR X30, [X31], #0x10
	0x03E6865C RET
	0x03E68660 BL 0x1C16F20
	0x03E68664 STR X30, [X31 - 0x10]!
	0x03E68668 CBZ X0, 0x3E68684
	0x03E6866C MOV X2, X31
	0x03E68670 BL 0x366456C
	0x03E68674 CMP X0, 0x0
	0x03E68678 CSET W0, NE
	0x03E6867C LDR X30, [X31], #0x10
	0x03E68680 RET
	0x03E68684 BL 0x1C16F20
	0x03E68688 STP X30, X23, [X31 - 0x30]!
	0x03E6868C STP X22, X21, [X31 + 0x10]
	0x03E68690 STP X20, X19, [X31 + 0x20]
	0x03E68694 ADRP X23, 0x580000
	0x03E68698 LDRB W8, [X23 + 0xCD5]
	0x03E6869C MOV W19, W3
	0x03E686A0 MOV X20, X2
	0x03E686A4 MOV X21, X1
	0x03E686A8 MOV X22, X0
	0x03E686AC TBNZ X8, 0x0, 0x3E686C4
	0x03E686B0 ADRP X0, 0x294000
	0x03E686B4 LDR X0, [X0 + 0x8D8]
	0x03E686B8 BL 0x1C16CF4
	0x03E686BC MOVZ W8, 0x1
	0x03E686C0 STRB W8, [X23 + 0xCD5]
	0x03E686C4 CBZ X22, 0x3E68790
	0x03E686C8 MOV X0, X22
	0x03E686CC MOV X1, X21
	0x03E686D0 MOV X2, X31

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x581000
	008 Move X23, 0x28C000
	009 Move W8, [X22+3287]
	010 Move X23, [X23+1560]
	011 Move W19, W2
	012 Move X20, X1
	013 Move X21, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0x28C000
	019 Move X0, [X0+1560]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+3287], W8
	023 Move X0, [X23]
	024 Move W1, W19
	025 Call 0x1C17D6C
	026 Compare X21, 0
	027 JumpIfEqual {65}
	028 Move X8, [X21]
	029 Move X22, X0
	030 Move X0, X21
	031 Move X1, X22
	032 Move X9, [X8+856]
	033 Move X4, [X8+864]
	034 Move W2, W31
	035 Move W3, W19
	036 NotImplemented "Instruction BLR not yet implemented."
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move W3, W0
	039 Compare X20, 0
	040 JumpIfEqual {65}
	041 Move X8, [X20]
	042 Move X0, X20
	043 Move X1, X22
	044 Move W2, W31
	045 Move X9, [X8+904]
	046 Move X4, [X8+912]
	047 NotImplemented "Instruction BLR not yet implemented."
	048 Move X8, [X21]
	049 Move X0, X21
	050 Move X1, X22
	051 Move W2, W31
	052 Move X9, [X8+856]
	053 Move X4, [X8+864]
	054 Move W3, W19
	055 NotImplemented "Instruction BLR not yet implemented."
	056 Move W3, W0
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Move X20, [X31+32]
	059 Move X19, [X31+40]
	060 Move X22, [X31+16]
	061 Move X21, [X31+24]
	062 Move X30, [X31+48]
	063 Move X23, [X31+56]
	064 Return 
	065 Call 0x1C17F20

Method: System.Void CopyToAsync(System.IO.Stream sourceStream, System.IO.Stream destinationStream, System.Int32 bufferLength, System.Action completed, System.Action`1<System.Exception> error)

Disassembly:
	0x03E69874 MOVZ W8, 0x1
	0x03E69878 STRB W8, [X22 + 0xCE6]
	0x03E6987C LDR X0, [X21]
	0x03E69880 ADRP X22, 0x291000
	0x03E69884 LDR W8, [X0 + 0xE0]
	0x03E69888 LDR X22, [X22 + 0x248]
	0x03E6988C CBNZ W8, 0x3E69898
	0x03E69890 BL 0x1C16DFC
	0x03E69894 LDR X0, [X21]
	0x03E69898 LDR X8, [X0 + 0xB8]
	0x03E6989C ADRP X21, 0x2D1000
	0x03E698A0 MOV X0, X20
	0x03E698A4 MOV X2, X31
	0x03E698A8 LDR X1, [X8 + 0x8]
	0x03E698AC LDR X21, [X21 + 0x158]
	0x03E698B0 BL 0x339D108
	0x03E698B4 LDR X8, [X22]
	0x03E698B8 MOV W20, W0
	0x03E698BC LDR W9, [X8 + 0xE0]
	0x03E698C0 CBNZ W9, 0x3E698CC
	0x03E698C4 MOV X0, X8
	0x03E698C8 BL 0x1C16DFC
	0x03E698CC LDR X1, [X21]
	0x03E698D0 TBZ X20, 0x0, 0x3E698F8
	0x03E698D4 ADRP X8, 0x2D5000
	0x03E698D8 LDR X8, [X8 + 0x950]
	0x03E698DC MOV X0, X19
	0x03E698E0 LDP X20, X19, [X31 + 0x20]
	0x03E698E4 LDP X22, X21, [X31 + 0x10]
	0x03E698E8 LDR X2, [X8]
	0x03E698EC MOVZ W3, 0x5
	0x03E698F0 LDR X30, [X31], #0x30
	0x03E698F4 B 0x3E68688
	0x03E698F8 ADRP X8, 0x2D1000
	0x03E698FC LDR X8, [X8 + 0xB88]
	0x03E69900 MOVZ W3, 0x5
	0x03E69904 MOV X0, X19
	0x03E69908 LDR X2, [X8]
	0x03E6990C BL 0x3E68688
	0x03E69910 LDP X20, X19, [X31 + 0x20]
	0x03E69914 LDP X22, X21, [X31 + 0x10]
	0x03E69918 ORN W8, W31, W0, 0x0
	0x03E6991C AND W0, W8, 0x1
	0x03E69920 LDR X30, [X31], #0x30
	0x03E69924 RET
	0x03E69928 STR X30, [X31 - 0x20]!
	0x03E6992C STP X20, X19, [X31 + 0x10]
	0x03E69930 ADRP X20, 0x57F000
	0x03E69934 LDRB W8, [X20 + 0xCE7]
	0x03E69938 MOV X19, X0
	0x03E6993C TBNZ X8, 0x0, 0x3E69954
	0x03E69940 ADRP X0, 0x291000
	0x03E69944 LDR X0, [X0 + 0x248]
	0x03E69948 BL 0x1C16CF4
	0x03E6994C MOVZ W8, 0x1
	0x03E69950 STRB W8, [X20 + 0xCE7]
	0x03E69954 CBZ X19, 0x3E699C8
	0x03E69958 MOVZ W1, 0x3A
	0x03E6995C MOV X0, X19
	0x03E69960 MOV X2, X31
	0x03E69964 BL 0x322BD98
	0x03E69968 SUB W8, W0, 0x2
	0x03E6996C CMP W8, 0x7
	0x03E69970 B.HI 0x3E699B8
	0x03E69974 MOV W2, W0
	0x03E69978 MOV X0, X19
	0x03E6997C MOV W1, W31
	0x03E69980 MOV X3, X31
	0x03E69984 BL 0x3228DE4
	0x03E69988 ADRP X8, 0x291000
	0x03E6998C LDR X8, [X8 + 0x248]
	0x03E69990 MOV X19, X0
	0x03E69994 LDR X8, [X8]
	0x03E69998 LDR W9, [X8 + 0xE0]
	0x03E6999C CBNZ W9, 0x3E699A8
	0x03E699A0 MOV X0, X8
	0x03E699A4 BL 0x1C16DFC
	0x03E699A8 MOV X0, X19
	0x03E699AC LDP X20, X19, [X31 + 0x10]
	0x03E699B0 LDR X30, [X31], #0x20
	0x03E699B4 B 0x3E67ED8
	0x03E699B8 LDP X20, X19, [X31 + 0x10]
	0x03E699BC MOV W0, W31
	0x03E699C0 LDR X30, [X31], #0x20
	0x03E699C4 RET
	0x03E699C8 BL 0x1C16F20
	0x03E699CC STR X30, [X31 - 0x20]!
	0x03E699D0 STP X20, X19, [X31 + 0x10]
	0x03E699D4 ADRP X20, 0x57F000
	0x03E699D8 LDRB W8, [X20 + 0xCE8]
	0x03E699DC MOV X19, X0
	0x03E699E0 TBNZ X8, 0x0, 0x3E69A10
	0x03E699E4 ADRP X0, 0x2BD000
	0x03E699E8 LDR X0, [X0 + 0x130]
	0x03E699EC BL 0x1C16CF4
	0x03E699F0 ADRP X0, 0x2BE000
	0x03E699F4 LDR X0, [X0 + 0x810]
	0x03E699F8 BL 0x1C16CF4
	0x03E699FC ADRP X0, 0x295000
	0x03E69A00 LDR X0, [X0 + 0xCD8]
	0x03E69A04 BL 0x1C16CF4
	0x03E69A08 MOVZ W8, 0x1
	0x03E69A0C STRB W8, [X20 + 0xCE8]
	0x03E69A10 CBZ X19, 0x3E69A5C
	0x03E69A14 ADRP X8, 0x2BD000
	0x03E69A18 ADRP X9, 0x295000
	0x03E69A1C ADRP X10, 0x2BE000
	0x03E69A20 LDR X8, [X8 + 0x130]
	0x03E69A24 LDR X9, [X9 + 0xCD8]
	0x03E69A28 LDR X10, [X10 + 0x810]
	0x03E69A2C MOV X0, X19
	0x03E69A30 LDR X20, [X8]
	0x03E69A34 LDR X1, [X9]
	0x03E69A38 LDR X2, [X10]
	0x03E69A3C MOV X3, X31

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X19, 0x580000
	010 Move X25, 0x304000
	011 Move W8, [X19+3288]
	012 Move X25, [X25+576]
	013 Move X21, X4
	014 Move X22, X3
	015 Move W20, W2
	016 Move X23, X1
	017 Move X24, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {36}
	022 Move X0, 0x2B3000
	023 Move X0, [X0+1824]
	024 Call 0x1C17CF4
	025 Move X0, 0x28B000
	026 Move X0, [X0+1560]
	027 Call 0x1C17CF4
	028 Move X0, 0x304000
	029 Move X0, [X0+584]
	030 Call 0x1C17CF4
	031 Move X0, 0x304000
	032 Move X0, [X0+576]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X19+3288], W8
	036 Move X0, [X25]
	037 Call 0x1C17F10
	038 Move X1, X31
	039 Move X19, X0
	040 Call Object..ctor, X0
	041 Compare X19, 0
	042 JumpIfEqual {88}
	043 Move X8, 0x28B000
	044 Move X8, [X8+1560]
	045 Move [X19+16], X24
	046 Move [X19+24], X22
	047 Move [X19+32], X23
	048 Move [X19+48], W20
	049 Move [X19+64], X21
	050 Move X0, [X8]
	051 Move X21, 0x2B3000
	052 Move X22, 0x304000
	053 Move X21, [X21+1824]
	054 Move X22, [X22+584]
	055 Move W1, W20
	056 Call 0x1C17D6C
	057 Move [X19+40], X0
	058 Move [X19+56], X31
	059 Move X0, [X21]
	060 Call 0x1C17F10
	061 Move X2, [X22]
	062 Move X1, X19
	063 Move X3, X31
	064 Move X20, X0
	065 Call AsyncCallback..ctor, X0, X1, X2
	066 Move X0, [X19+16]
	067 Move [X19+56], X20
	068 Compare X0, 0
	069 JumpIfEqual {89}
	070 Move X8, [X0]
	071 Move X1, [X19+40]
	072 Move W3, [X19+48]
	073 Move X9, [X8+696]
	074 Move X6, [X8+704]
	075 Move W2, W31
	076 Move X4, X20
	077 Move X5, X31
	078 NotImplemented "Instruction BLR not yet implemented."
	079 Move X20, [X31+48]
	080 Move X19, [X31+56]
	081 Move X22, [X31+32]
	082 Move X21, [X31+40]
	083 Move X24, [X31+16]
	084 Move X23, [X31+24]
	085 Move X30, [X31+64]
	086 Move X25, [X31+72]
	087 Return 
	088 Call 0x1C17F20
	089 Call 0x1C17F20
	090 Move X20, X0
	091 NotImplemented "Instruction CMP not yet implemented."
	092 Move X0, X20
	093 Call 0x3EB2AD0
	094 Move X20, X0
	095 Move X0, 0x28B000
	096 Move X0, [X0+2000]
	097 Call 0x1C17D08
	098 Move X8, [X20]
	099 Move X1, [X8]
	100 Call 0x1C18270
	101 Move TEMP, X0
	102 And TEMP, TEMP, 1
	103 Compare TEMP, 1
	104 JumpIfNotEqual {123}
	105 Move X20, [X20]
	106 Call 0x3EB2AE0
	107 Move X8, [X19+64]
	108 Compare X8, 0
	109 JumpIfEqual {79}
	110 Move X3, [X8+24]
	111 Move X0, [X8+64]
	112 Move X2, [X8+40]
	113 Move X1, X20
	114 Move X20, [X31+48]
	115 Move X19, [X31+56]
	116 Move X22, [X31+32]
	117 Move X21, [X31+40]
	118 Move X24, [X31+16]
	119 Move X23, [X31+24]
	120 Move X30, [X31+64]
	121 Move X25, [X31+72]
	122 CallNoReturn X3
	123 Move W0, 8
	124 Call 0x3EB2AF0
	125 Move X8, [X20]
	126 Move [X0], X8
	127 Move X1, 0x4C000
	128 Add X1, X1, 3672
	129 Move X2, X31
	130 Call 0x3EB2B00
	131 Move X20, X0
	132 Call 0x3EB2AE0
	133 Move X0, X20
	134 Call 0x1D2D690
	135 Call 0x1991590

Method: System.Byte[] Decompress(System.Byte[] data, WebSocketSharp.CompressionMethod method)

Disassembly:
	0x03E69A48 MOV X0, X20
	0x03E69A4C LDP X20, X19, [X31 + 0x10]
	0x03E69A50 MOV X2, X31
	0x03E69A54 LDR X30, [X31], #0x20
	0x03E69A58 B 0x321EFD0
	0x03E69A5C BL 0x1C16F20
	0x03E69A60 STP X30, X25, [X31 - 0x40]!
	0x03E69A64 STP X24, X23, [X31 + 0x10]
	0x03E69A68 STP X22, X21, [X31 + 0x20]
	0x03E69A6C STP X20, X19, [X31 + 0x30]
	0x03E69A70 ADRP X21, 0x57F000
	0x03E69A74 ADRP X22, 0x28A000
	0x03E69A78 LDRB W8, [X21 + 0xCE9]
	0x03E69A7C LDR X22, [X22 + 0x618]
	0x03E69A80 MOV W19, W1
	0x03E69A84 MOV X20, X0
	0x03E69A88 TBNZ X8, 0x0, 0x3E69AB8
	0x03E69A8C ADRP X0, 0x28A000
	0x03E69A90 LDR X0, [X0 + 0x618]
	0x03E69A94 BL 0x1C16CF4
	0x03E69A98 ADRP X0, 0x303000
	0x03E69A9C LDR X0, [X0 + 0x2E8]
	0x03E69AA0 BL 0x1C16CF4
	0x03E69AA4 ADRP X0, 0x291000
	0x03E69AA8 LDR X0, [X0 + 0x248]
	0x03E69AAC BL 0x1C16CF4
	0x03E69AB0 MOVZ W8, 0x1
	0x03E69AB4 STRB W8, [X21 + 0xCE9]
	0x03E69AB8 LDR X0, [X22]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x580000
	006 Move W8, [X21+3289]
	007 Move W20, W1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x292000
	014 Move X0, [X0+584]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+3289], W8
	018 And W8, W20, 255
	019 NotImplemented "Instruction CMP not yet implemented."
	020 Move X8, 0x292000
	021 Move X8, [X8+584]
	022 Move X0, [X8]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 Move X0, X19
	028 Move X20, [X31+16]
	029 Move X19, [X31+24]
	030 Move X30, [X31+32]
	031 Move X21, [X31+40]
	032 Call Ext.decompress, X0
	033 Return X0
	034 Move X0, X19
	035 Move X20, [X31+16]
	036 Move X19, [X31+24]
	037 Move X30, [X31+32]
	038 Move X21, [X31+40]
	039 Return X0

Method: System.IO.Stream Decompress(System.IO.Stream stream, WebSocketSharp.CompressionMethod method)

Disassembly:
	0x03E69ABC MOV W1, W19
	0x03E69AC0 BL 0x1C16D6C
	0x03E69AC4 CMP W19, 0x1
	0x03E69AC8 MOV X21, X0
	0x03E69ACC B.LT 0x3E69B74
	0x03E69AD0 CBZ X20, 0x3E69BBC
	0x03E69AD4 ADRP X24, 0x291000
	0x03E69AD8 ADRP X23, 0x303000
	0x03E69ADC LDR X24, [X24 + 0x248]
	0x03E69AE0 LDR X23, [X23 + 0x2E8]
	0x03E69AE4 MOV W22, W31
	0x03E69AE8 LDR X8, [X20]
	0x03E69AEC MOV X0, X20
	0x03E69AF0 MOV X1, X21
	0x03E69AF4 MOV W2, W22
	0x03E69AF8 LDR X9, [X8 + 0x358]
	0x03E69AFC LDR X4, [X8 + 0x360]
	0x03E69B00 MOV W3, W19
	0x03E69B04 BLR X9
	0x03E69B08 CMP W0, 0x0
	0x03E69B0C B.GT 0x3E69B64
	0x03E69B10 MOVN W25, 0x0
	0x03E69B14 LDR X0, [X24]
	0x03E69B18 LDR W8, [X0 + 0xE0]
	0x03E69B1C CBNZ W8, 0x3E69B28
	0x03E69B20 BL 0x1C16DFC
	0x03E69B24 LDR X0, [X24]
	0x03E69B28 LDR X8, [X0 + 0xB8]
	0x03E69B2C ADD W25, W25, 0x1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x580000
	006 Move W8, [X21+3290]
	007 Move W20, W1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x292000
	014 Move X0, [X0+584]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+3290], W8
	018 And W8, W20, 255
	019 NotImplemented "Instruction CMP not yet implemented."
	020 Move X8, 0x292000
	021 Move X8, [X8+584]
	022 Move X0, [X8]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 Move X0, X19
	028 Move X20, [X31+16]
	029 Move X19, [X31+24]
	030 Move X30, [X31+32]
	031 Move X21, [X31+40]
	032 Call Ext.decompress, X0
	033 Return X0
	034 Move X0, X19
	035 Move X20, [X31+16]
	036 Move X19, [X31+24]
	037 Move X30, [X31+32]
	038 Move X21, [X31+40]
	039 Return X0

Method: System.Byte[] DecompressToArray(System.IO.Stream stream, WebSocketSharp.CompressionMethod method)

Disassembly:
	0x03E69B30 LDR W8, [X8 + 0x8]
	0x03E69B34 CMP W25, W8
	0x03E69B38 B.GE 0x3E69B8C
	0x03E69B3C LDR X8, [X20]
	0x03E69B40 MOV X0, X20
	0x03E69B44 MOV X1, X21
	0x03E69B48 MOV W2, W22
	0x03E69B4C LDR X9, [X8 + 0x358]
	0x03E69B50 LDR X4, [X8 + 0x360]
	0x03E69B54 MOV W3, W19
	0x03E69B58 BLR X9
	0x03E69B5C CMP W0, 0x0
	0x03E69B60 B.LE 0x3E69B14
	0x03E69B64 SUB W19, W19, W0
	0x03E69B68 CMP W19, 0x1
	0x03E69B6C ADD W22, W0, W22
	0x03E69B70 B.GE 0x3E69AE8
	0x03E69B74 MOV X0, X21
	0x03E69B78 LDP X20, X19, [X31 + 0x30]
	0x03E69B7C LDP X22, X21, [X31 + 0x20]
	0x03E69B80 LDP X24, X23, [X31 + 0x10]
	0x03E69B84 LDP X30, X25, [X31], #0x40
	0x03E69B88 RET
	0x03E69B8C LDR W8, [X0 + 0xE0]
	0x03E69B90 CBNZ W8, 0x3E69B98
	0x03E69B94 BL 0x1C16DFC
	0x03E69B98 LDR X3, [X23]
	0x03E69B9C MOV X0, X21
	0x03E69BA0 MOV W2, W22
	0x03E69BA4 LDP X20, X19, [X31 + 0x30]
	0x03E69BA8 LDP X22, X21, [X31 + 0x20]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x580000
	007 Move X22, 0x292000
	008 Move W8, [X21+3291]
	009 Move X22, [X22+584]
	010 Move W20, W1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x292000
	017 Move X0, [X0+584]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+3291], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 And W8, W20, 255
	027 Move X0, X19
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Move X20, [X31+32]
	030 Move X19, [X31+40]
	031 Move X22, [X31+16]
	032 Move X21, [X31+24]
	033 Move X30, [X31+48]
	034 Call Ext.decompressToArray, X0
	035 Return X0
	036 Move X20, [X31+32]
	037 Move X19, [X31+40]
	038 Move X22, [X31+16]
	039 Move X21, [X31+24]
	040 Move X30, [X31+48]
	041 Call Ext.ToByteArray, X0
	042 Return X0

Method: System.Void Emit(System.EventHandler eventHandler, System.Object sender, System.EventArgs e)

Disassembly:
	0x03E69BAC LDP X24, X23, [X31 + 0x10]
	0x03E69BB0 MOV W1, W31
	0x03E69BB4 LDP X30, X25, [X31], #0x40
	0x03E69BB8 B 0x21E25A8
	0x03E69BBC BL 0x1C16F20
	0x03E69BC0 STP X30, X27, [X31 - 0x50]!
	0x03E69BC4 STP X26, X25, [X31 + 0x10]

ISIL:
	001 Compare X0, 0
	002 JumpIfEqual {8}
	003 Move X8, [X0+64]
	004 Move X4, [X0+24]
	005 Move X3, [X0+40]
	006 Move X0, X8
	007 CallNoReturn X4
	008 Return 

Method: System.Void Emit(System.EventHandler`1<TEventArgs> eventHandler, System.Object sender, TEventArgs e)

Disassembly:
	0x021E3340 LDR X27, [X31 + 0x10]
	0x021E3344 LDP X29, X30, [X31], #0x60
	0x021E3348 RET
	0x021E334C BL 0x1C16F20
	0x021E3350 BL 0x1C16F28
	0x021E3354 BL 0x3EB1B20
	0x021E3358 STR X30, [X31 - 0x40]!
	0x021E335C STP X24, X23, [X31 + 0x10]
	0x021E3360 STP X22, X21, [X31 + 0x20]
	0x021E3364 STP X20, X19, [X31 + 0x30]
	0x021E3368 LDR X8, [X1 + 0x38]
	0x021E336C MOV X19, X1
	0x021E3370 MOV X20, X0
	0x021E3374 CBNZ X8, 0x21E33A4
	0x021E3378 ADRP X0, 0x1F10000
	0x021E337C LDR X0, [X0 + 0xAC8]
	0x021E3380 BL 0x1C16CF4
	0x021E3384 ADRP X0, 0x1F10000
	0x021E3388 LDR X0, [X0 + 0x830]
	0x021E338C BL 0x1C16CF4
	0x021E3390 ADRP X0, 0x1F10000
	0x021E3394 LDR X0, [X0 + 0x838]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X3+56]
	006 Move X19, X2
	007 Move X20, X1
	008 Move X21, X0
	009 Compare X8, 0
	010 JumpIfEqual {23}
	011 Compare X21, 0
	012 JumpIfEqual {27}
	013 Move X4, [X21+24]
	014 Move X0, [X21+64]
	015 Move X3, [X21+40]
	016 Move X1, X20
	017 Move X2, X19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X4
	023 Move X0, X3
	024 Call 0x1C5D6E0
	025 Compare X21, 0
	026 JumpIfNotEqual {13}
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]
	031 Return 

Method: System.String GetAbsolutePath(System.Uri uri)

Disassembly:
	0x03E69BC8 STP X24, X23, [X31 + 0x20]
	0x03E69BCC STP X22, X21, [X31 + 0x30]
	0x03E69BD0 STP X20, X19, [X31 + 0x40]
	0x03E69BD4 ADRP X24, 0x57F000
	0x03E69BD8 ADRP X19, 0x292000
	0x03E69BDC ADRP X23, 0x28A000
	0x03E69BE0 LDRB W8, [X24 + 0xCEA]
	0x03E69BE4 LDR X19, [X19 + 0x558]
	0x03E69BE8 LDR X23, [X23 + 0x618]
	0x03E69BEC MOV W20, W2
	0x03E69BF0 MOV X21, X1
	0x03E69BF4 MOV X22, X0
	0x03E69BF8 TBNZ X8, 0x0, 0x3E69C34
	0x03E69BFC ADRP X0, 0x28A000
	0x03E69C00 LDR X0, [X0 + 0x618]
	0x03E69C04 BL 0x1C16CF4
	0x03E69C08 ADRP X0, 0x291000
	0x03E69C0C LDR X0, [X0 + 0x248]
	0x03E69C10 BL 0x1C16CF4
	0x03E69C14 ADRP X0, 0x28A000
	0x03E69C18 LDR X0, [X0 + 0xE00]
	0x03E69C1C BL 0x1C16CF4
	0x03E69C20 ADRP X0, 0x292000
	0x03E69C24 LDR X0, [X0 + 0x558]
	0x03E69C28 BL 0x1C16CF4
	0x03E69C2C MOVZ W8, 0x1
	0x03E69C30 STRB W8, [X24 + 0xCEA]
	0x03E69C34 LDR X0, [X19]
	0x03E69C38 ADRP X25, 0x28A000
	0x03E69C3C LDR X25, [X25 + 0xE00]
	0x03E69C40 BL 0x1C16F10
	0x03E69C44 MOV X1, X31
	0x03E69C48 MOV X19, X0
	0x03E69C4C BL 0x32E23B4
	0x03E69C50 LDR X0, [X23]
	0x03E69C54 MOV W1, W20
	0x03E69C58 BL 0x1C16D6C
	0x03E69C5C CMP X21, 0x1
	0x03E69C60 B.LT 0x3E69D0C
	0x03E69C64 CBZ X22, 0x3E69DC4
	0x03E69C68 ADRP X26, 0x291000
	0x03E69C6C LDR X26, [X26 + 0x248]
	0x03E69C70 MOV X23, X0
	0x03E69C74 MOVN W27, 0x0
	0x03E69C78 LDR X8, [X22]
	0x03E69C7C CMP X21, W20, SXTW
	0x03E69C80 CSEL W20, W21, W20, LT
	0x03E69C84 LDR X9, [X8 + 0x358]
	0x03E69C88 LDR X4, [X8 + 0x360]
	0x03E69C8C MOV X0, X22
	0x03E69C90 MOV X1, X23
	0x03E69C94 MOV W2, W31
	0x03E69C98 MOV W3, W20
	0x03E69C9C BLR X9
	0x03E69CA0 MOV W24, W0
	0x03E69CA4 CMP W0, 0x1
	0x03E69CA8 B.GE 0x3E69CD8
	0x03E69CAC LDR X0, [X26]
	0x03E69CB0 LDR W8, [X0 + 0xE0]
	0x03E69CB4 CBNZ W8, 0x3E69CC0
	0x03E69CB8 BL 0x1C16DFC
	0x03E69CBC LDR X0, [X26]
	0x03E69CC0 LDR X8, [X0 + 0xB8]
	0x03E69CC4 ADD W27, W27, 0x1
	0x03E69CC8 LDR W8, [X8 + 0x8]
	0x03E69CCC CMP W27, W8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x580000
	005 Move W8, [X20+3292]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x294000
	012 Move X0, [X0+2264]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+3292], W8
	016 Compare X19, 0
	017 JumpIfEqual {78}
	018 Move X0, X19
	019 Move X1, X31
	020 Call Uri.get_IsAbsoluteUri, X0
	021 Move TEMP, X0
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfNotEqual {32}
	025 Move X0, X19
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X1, X31
	029 Move X30, [X31+32]
	030 Call Uri.get_AbsolutePath, X0
	031 Return X0
	032 Move X0, X19
	033 Move X1, X31
	034 Call Uri.get_OriginalString, X0
	035 Compare X0, 0
	036 JumpIfEqual {78}
	037 Move W1, W31
	038 Move X2, X31
	039 Move X19, X0
	040 Call String.get_Chars, X0, X1
	041 And W8, W0, 0xFFFF
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X0, X31
	044 Move X8, 0x294000
	045 Move X8, [X8+2264]
	046 Move W1, 2
	047 Move X0, [X8]
	048 Call 0x1C17D6C
	049 Compare X0, 0
	050 JumpIfEqual {78}
	051 Move W8, [X0+24]
	052 Move X1, X0
	053 Compare W8, 0
	054 JumpIfEqual {79}
	055 Move W9, 63
	056 NotImplemented "Instruction CMP not yet implemented."
	057 NotImplemented "Instruction STRH not yet implemented."
	058 Move W8, 35
	059 Move X0, X19
	060 Move X2, X31
	061 NotImplemented "Instruction STRH not yet implemented."
	062 Call String.IndexOfAny, X0, X1
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Move W2, W0
	065 Move X0, X19
	066 Move X20, [X31+16]
	067 Move X19, [X31+24]
	068 Move W1, W31
	069 Move X3, X31
	070 Move X30, [X31+32]
	071 Call String.Substring, X0, X1, X2
	072 Return X0
	073 Move X0, X19
	074 Move X20, [X31+16]
	075 Move X19, [X31+24]
	076 Move X30, [X31+32]
	077 Return X0
	078 Call 0x1C17F20
	079 Call 0x1C17F28

Method: WebSocketSharp.Net.CookieCollection GetCookies(System.Collections.Specialized.NameValueCollection headers, System.Boolean response)

Disassembly:
	0x03E69CD0 B.LT 0x3E69C78
	0x03E69CD4 B 0x3E69D0C
	0x03E69CD8 CBZ X19, 0x3E69DC8
	0x03E69CDC LDR X8, [X19]
	0x03E69CE0 LDR X9, [X8 + 0x388]
	0x03E69CE4 LDR X4, [X8 + 0x390]
	0x03E69CE8 MOV X0, X19
	0x03E69CEC MOV X1, X23
	0x03E69CF0 MOV W2, W31
	0x03E69CF4 MOV W3, W24
	0x03E69CF8 BLR X9
	0x03E69CFC SUB X21, X21, W24, UXTW
	0x03E69D00 CMP X21, 0x1
	0x03E69D04 B.GE 0x3E69C74
	0x03E69D08 B 0x3E69D10
	0x03E69D0C CBZ X19, 0x3E69DC0
	0x03E69D10 LDR X8, [X19]
	0x03E69D14 LDR X1, [X8 + 0x280]
	0x03E69D18 LDR X9, [X8 + 0x278]
	0x03E69D1C MOV X0, X19
	0x03E69D20 BLR X9
	0x03E69D24 LDR X8, [X19]
	0x03E69D28 LDR X1, [X8 + 0x400]
	0x03E69D2C LDR X9, [X8 + 0x3F8]
	0x03E69D30 MOV X0, X19
	0x03E69D34 BLR X9
	0x03E69D38 MOV X21, X0
	0x03E69D3C MOV X20, X31
	0x03E69D40 LDR X8, [X19]
	0x03E69D44 LDR X1, [X25]
	0x03E69D48 LDRH W9, [X8 + 0x12E]
	0x03E69D4C CBZ X9, 0x3E69D70
	0x03E69D50 LDR X10, [X8 + 0xB0]
	0x03E69D54 ADD X10, X10, 0x8
	0x03E69D58 LDUR X11, [X10 - 0x8]
	0x03E69D5C CMP X11, X1
	0x03E69D60 B.EQ 0x3E69D80
	0x03E69D64 SUBS X9, X9, 0x1
	0x03E69D68 ADD X10, X10, 0x10
	0x03E69D6C B.NE 0x3E69D58
	0x03E69D70 MOV X0, X19
	0x03E69D74 MOV W2, W31
	0x03E69D78 BL 0x1C5C788
	0x03E69D7C B 0x3E69D8C
	0x03E69D80 LDRSW X9, [X10]
	0x03E69D84 ADD X8, X8, X9, 0x4, LSL
	0x03E69D88 ADD X0, X8, 0x138

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x580000
	006 Move W8, [X21+3293]
	007 Move W19, W1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {24}
	013 Move X0, 0x304000
	014 Move X0, [X0+592]
	015 Call 0x1C17CF4
	016 Move X0, 0x2D6000
	017 Move X0, [X0]
	018 Call 0x1C17CF4
	019 Move X0, 0x2D6000
	020 Move X0, [X0+512]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X21+3293], W8
	024 Compare X20, 0
	025 JumpIfEqual {59}
	026 Move X8, 0x2D6000
	027 Move X9, 0x2D6000
	028 Move X8, [X8]
	029 Move X9, [X9+512]
	030 And W31, W19, 1
	031 Move X0, X20
	032 Move X2, X31
	033 NotImplemented "Instruction CSEL not yet implemented."
	034 Move X1, [X8]
	035 Call NameValueCollection.get_Item, X0, X1
	036 Compare X0, 0
	037 JumpIfEqual {46}
	038 And W1, W19, 1
	039 Move X20, [X31+16]
	040 Move X19, [X31+24]
	041 Move X2, X31
	042 Move X30, [X31+32]
	043 Move X21, [X31+40]
	044 Call CookieCollection.Parse, X0, X1
	045 Return X0
	046 Move X8, 0x304000
	047 Move X8, [X8+592]
	048 Move X0, [X8]
	049 Call 0x1C17F10
	050 Move X1, X31
	051 Move X19, X0
	052 Call CookieCollection..ctor, X0
	053 Move X0, X19
	054 Move X20, [X31+16]
	055 Move X19, [X31+24]
	056 Move X30, [X31+32]
	057 Move X21, [X31+40]
	058 Return X0
	059 Call 0x1C17F20

Method: System.String GetDnsSafeHost(System.Uri uri, System.Boolean bracketIPv6)

Disassembly:
	0x03E69D8C LDP X8, X1, [X0]
	0x03E69D90 MOV X0, X19
	0x03E69D94 BLR X8
	0x03E69D98 CBNZ X20, 0x3E69DB8
	0x03E69D9C MOV X0, X21
	0x03E69DA0 LDP X20, X19, [X31 + 0x40]
	0x03E69DA4 LDP X22, X21, [X31 + 0x30]
	0x03E69DA8 LDP X24, X23, [X31 + 0x20]
	0x03E69DAC LDP X26, X25, [X31 + 0x10]
	0x03E69DB0 LDP X30, X27, [X31], #0x50
	0x03E69DB4 RET
	0x03E69DB8 MOV X0, X20
	0x03E69DBC BL 0x1C16F18
	0x03E69DC0 BL 0x1C16F20
	0x03E69DC4 BL 0x1C16F20
	0x03E69DC8 BL 0x1C16F20
	0x03E69DCC B 0x3E69DE8
	0x03E69DD0 B 0x3E69DE8
	0x03E69DD4 B 0x3E69DE8

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move TEMP, X1
	005 And TEMP, TEMP, 1
	006 Compare TEMP, 1
	007 JumpIfNotEqual {20}
	008 Compare X19, 0
	009 JumpIfEqual {28}
	010 Move X0, X19
	011 Move X1, X31
	012 Call Uri.get_HostNameType, X0
	013 NotImplemented "Instruction CMP not yet implemented."
	014 Move X0, X19
	015 Move X1, X31
	016 Move X30, [X31+16]
	017 Move X19, [X31+24]
	018 Call Uri.get_Host, X0
	019 Return X0
	020 Compare X19, 0
	021 JumpIfEqual {28}
	022 Move X0, X19
	023 Move X1, X31
	024 Move X30, [X31+16]
	025 Move X19, [X31+24]
	026 Call Uri.get_DnsSafeHost, X0
	027 Return X0
	028 Call 0x1C17F20

Method: System.String GetMessage(WebSocketSharp.CloseStatusCode code)

Disassembly:
	0x03E69DD8 B 0x3E69DE8
	0x03E69DDC B 0x3E69DE8
	0x03E69DE0 B 0x3E69DE8
	0x03E69DE4 B 0x3E69DE8
	0x03E69DE8 MOV X21, X0
	0x03E69DEC CMP W1, 0x1
	0x03E69DF0 B.NE 0x3E69E10
	0x03E69DF4 MOV X0, X21
	0x03E69DF8 BL 0x3EB1AD0
	0x03E69DFC LDR X20, [X0]
	0x03E69E00 BL 0x3EB1AE0
	0x03E69E04 MOV X21, X31
	0x03E69E08 CBNZ X19, 0x3E69D40
	0x03E69E0C B 0x3E69D98
	0x03E69E10 MOV X20, X31
	0x03E69E14 B 0x3E69E1C
	0x03E69E18 MOV X21, X0
	0x03E69E1C CBZ X19, 0x3E69E78
	0x03E69E20 LDR X8, [X19]
	0x03E69E24 LDR X1, [X25]
	0x03E69E28 LDRH W9, [X8 + 0x12E]
	0x03E69E2C CBZ X9, 0x3E69E50
	0x03E69E30 LDR X10, [X8 + 0xB0]
	0x03E69E34 ADD X10, X10, 0x8
	0x03E69E38 LDUR X11, [X10 - 0x8]
	0x03E69E3C CMP X11, X1
	0x03E69E40 B.EQ 0x3E69E60
	0x03E69E44 SUBS X9, X9, 0x1
	0x03E69E48 ADD X10, X10, 0x10
	0x03E69E4C B.NE 0x3E69E38
	0x03E69E50 MOV X0, X19
	0x03E69E54 MOV W2, W31
	0x03E69E58 BL 0x1C5C788
	0x03E69E5C B 0x3E69E6C
	0x03E69E60 LDRSW X9, [X10]
	0x03E69E64 ADD X8, X8, X9, 0x4, LSL
	0x03E69E68 ADD X0, X8, 0x138
	0x03E69E6C LDP X8, X1, [X0]
	0x03E69E70 MOV X0, X19
	0x03E69E74 BLR X8
	0x03E69E78 CBNZ X20, 0x3E69E84
	0x03E69E7C MOV X0, X21
	0x03E69E80 BL 0x1D2C690
	0x03E69E84 MOV X0, X20
	0x03E69E88 BL 0x1C16F18
	0x03E69E8C BL 0x1990590
	0x03E69E90 STR X30, [X31 - 0x40]!
	0x03E69E94 STP X24, X23, [X31 + 0x10]
	0x03E69E98 STP X22, X21, [X31 + 0x20]
	0x03E69E9C STP X20, X19, [X31 + 0x30]
	0x03E69EA0 ADRP X19, 0x57F000
	0x03E69EA4 ADRP X24, 0x303000
	0x03E69EA8 LDRB W8, [X19 + 0xCEB]
	0x03E69EAC LDR X24, [X24 + 0x2F0]
	0x03E69EB0 MOV X21, X3
	0x03E69EB4 MOV X22, X2
	0x03E69EB8 MOV W20, W1
	0x03E69EBC MOV X23, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x580000
	005 Move W8, [X20+3294]
	006 Move W19, W0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {43}
	011 Move X0, 0x28D000
	012 Move X0, [X0+632]
	013 Call 0x1C17CF4
	014 Move X0, 0x304000
	015 Move X0, [X0+600]
	016 Call 0x1C17CF4
	017 Move X0, 0x304000
	018 Move X0, [X0+608]
	019 Call 0x1C17CF4
	020 Move X0, 0x304000
	021 Move X0, [X0+616]
	022 Call 0x1C17CF4
	023 Move X0, 0x304000
	024 Move X0, [X0+624]
	025 Call 0x1C17CF4
	026 Move X0, 0x304000
	027 Move X0, [X0+632]
	028 Call 0x1C17CF4
	029 Move X0, 0x304000
	030 Move X0, [X0+640]
	031 Call 0x1C17CF4
	032 Move X0, 0x304000
	033 Move X0, [X0+648]
	034 Call 0x1C17CF4
	035 Move X0, 0x304000
	036 Move X0, [X0+656]
	037 Call 0x1C17CF4
	038 Move X0, 0x304000
	039 Move X0, [X0+664]
	040 Call 0x1C17CF4
	041 Move W8, 1
	042 Move [X20+3294], W8
	043 Subtract W8, W19, 1002
	044 And W9, W8, 0xFFFF
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Move W9, 0x23F3
	047 NotImplemented "Instruction LSRV not yet implemented."
	048 Move TEMP, X9
	049 And TEMP, TEMP, 1
	050 Compare TEMP, 1
	051 JumpIfEqual {56}
	052 Move X8, 0x28D000
	053 Move X8, [X8+632]
	054 Move X8, [X8]
	055 Add X8, X8, 184
	056 Move X9, 0x8C000
	057 Add X9, X9, 3072
	058 Add X8, X9, W8
	059 Move X8, [X8]
	060 Move X20, [X31+16]
	061 Move X19, [X31+24]
	062 Move X0, [X8]
	063 Move X30, [X31+32]
	064 Return X0

Method: System.String GetName(System.String nameAndValue, System.Char separator)

Disassembly:
	0x03E69EC0 TBNZ X8, 0x0, 0x3E69EFC
	0x03E69EC4 ADRP X0, 0x2B2000
	0x03E69EC8 LDR X0, [X0 + 0x720]
	0x03E69ECC BL 0x1C16CF4
	0x03E69ED0 ADRP X0, 0x28A000
	0x03E69ED4 LDR X0, [X0 + 0x618]
	0x03E69ED8 BL 0x1C16CF4
	0x03E69EDC ADRP X0, 0x303000
	0x03E69EE0 LDR X0, [X0 + 0x2F8]
	0x03E69EE4 BL 0x1C16CF4
	0x03E69EE8 ADRP X0, 0x303000
	0x03E69EEC LDR X0, [X0 + 0x2F0]
	0x03E69EF0 BL 0x1C16CF4
	0x03E69EF4 MOVZ W8, 0x1
	0x03E69EF8 STRB W8, [X19 + 0xCEB]
	0x03E69EFC LDR X0, [X24]
	0x03E69F00 BL 0x1C16F10
	0x03E69F04 MOV X1, X31
	0x03E69F08 MOV X19, X0
	0x03E69F0C BL 0x33BDD8C

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Compare X0, 0
	004 JumpIfEqual {25}
	005 Move X2, X31
	006 Move X19, X0
	007 Call String.IndexOf, X0, X1
	008 NotImplemented "Instruction CMP not yet implemented."
	009 Move W2, W0
	010 Move X0, X19
	011 Move W1, W31
	012 Move X3, X31
	013 Call String.Substring, X0, X1, X2
	014 Compare X0, 0
	015 JumpIfEqual {25}
	016 Move X1, X31
	017 Move X30, [X31+16]
	018 Move X19, [X31+24]
	019 Call String.Trim, X0
	020 Return X0
	021 Move X0, X31
	022 Move X30, [X31+16]
	023 Move X19, [X31+24]
	024 Return X0
	025 Call 0x1C17F20

Method: System.String GetUTF8DecodedString(System.Byte[] bytes)

Disassembly:
	0x03E69F10 CBZ X19, 0x3E69FB0
	0x03E69F14 ADRP X8, 0x28A000
	0x03E69F18 LDR X8, [X8 + 0x618]
	0x03E69F1C STR X23, [X19 + 0x10]
	0x03E69F20 STR W20, [X19 + 0x2C]
	0x03E69F24 STP X22, X21, [X19 + 0x38]
	0x03E69F28 LDR X0, [X8]
	0x03E69F2C ADRP X21, 0x2B2000
	0x03E69F30 ADRP X22, 0x303000
	0x03E69F34 LDR X21, [X21 + 0x720]
	0x03E69F38 LDR X22, [X22 + 0x2F8]
	0x03E69F3C MOV W1, W20

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move X0, X31
	005 Call Encoding.get_UTF8
	006 Compare X0, 0
	007 JumpIfEqual {15}
	008 Move X8, [X0]
	009 Move X1, X19
	010 Move X3, [X8+888]
	011 Move X2, [X8+896]
	012 Move X30, [X31+16]
	013 Move X19, [X31+24]
	014 CallNoReturn X3
	015 Call 0x1C17F20

Method: System.Byte[] GetUTF8EncodedBytes(System.String s)

Disassembly:
	0x03E69F40 BL 0x1C16D6C
	0x03E69F44 STR X0, [X19 + 0x20]
	0x03E69F48 STR W31, [X19 + 0x28]
	0x03E69F4C STR W31, [X19 + 0x18]
	0x03E69F50 STR X31, [X19 + 0x30]
	0x03E69F54 LDR X0, [X21]
	0x03E69F58 BL 0x1C16F10
	0x03E69F5C LDR X2, [X22]
	0x03E69F60 MOV X1, X19
	0x03E69F64 MOV X3, X31
	0x03E69F68 MOV X20, X0
	0x03E69F6C BL 0x3316570

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move X0, X31
	005 Call Encoding.get_UTF8
	006 Compare X0, 0
	007 JumpIfEqual {15}
	008 Move X8, [X0]
	009 Move X1, X19
	010 Move X3, [X8+616]
	011 Move X2, [X8+624]
	012 Move X30, [X31+16]
	013 Move X19, [X31+24]
	014 CallNoReturn X3
	015 Call 0x1C17F20

Method: System.String GetValue(System.String nameAndValue, System.Char separator)

Disassembly:
	0x03E69F70 LDR X0, [X19 + 0x10]
	0x03E69F74 STR X20, [X19 + 0x30]
	0x03E69F78 CBZ X0, 0x3E69FB4
	0x03E69F7C LDR X8, [X0]
	0x03E69F80 LDR X1, [X19 + 0x20]
	0x03E69F84 LDP W2, W3, [X19 + 0x28]
	0x03E69F88 LDR X9, [X8 + 0x2B8]
	0x03E69F8C LDR X6, [X8 + 0x2C0]
	0x03E69F90 MOV X4, X20
	0x03E69F94 MOV X5, X31
	0x03E69F98 BLR X9
	0x03E69F9C LDP X20, X19, [X31 + 0x30]
	0x03E69FA0 LDP X22, X21, [X31 + 0x20]
	0x03E69FA4 LDP X24, X23, [X31 + 0x10]
	0x03E69FA8 LDR X30, [X31], #0x40
	0x03E69FAC RET
	0x03E69FB0 BL 0x1C16F20
	0x03E69FB4 BL 0x1C16F20
	0x03E69FB8 B 0x3E69FBC
	0x03E69FBC MOV X20, X0
	0x03E69FC0 CMP W1, 0x1
	0x03E69FC4 B.NE 0x3E6A04C
	0x03E69FC8 MOV X0, X20
	0x03E69FCC BL 0x3EB1AD0
	0x03E69FD0 MOV X20, X0
	0x03E69FD4 ADRP X0, 0x28A000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x580000
	007 Move X21, 0x292000
	008 Move W8, [X22+3295]
	009 Move X21, [X21+584]
	010 Move W19, W1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x292000
	017 Move X0, [X0+584]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+3295], W8
	021 Move X0, [X21]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move X0, X20
	027 Move W1, W19
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move W2, W31
	033 Move X30, [X31+48]

Method: System.String GetValue(System.String nameAndValue, System.Char separator, System.Boolean unquote)

Disassembly:
	0x03E69FD8 LDR X0, [X0 + 0x7D0]
	0x03E69FDC BL 0x1C16D08
	0x03E69FE0 LDR X8, [X20]
	0x03E69FE4 LDR X1, [X8]
	0x03E69FE8 BL 0x1C17270
	0x03E69FEC TBZ X0, 0x0, 0x3E6A024
	0x03E69FF0 LDR X20, [X20]
	0x03E69FF4 BL 0x3EB1AE0
	0x03E69FF8 LDR X8, [X19 + 0x40]
	0x03E69FFC CBZ X8, 0x3E69F9C
	0x03E6A000 LDR X3, [X8 + 0x18]
	0x03E6A004 LDR X0, [X8 + 0x40]
	0x03E6A008 LDR X2, [X8 + 0x28]
	0x03E6A00C MOV X1, X20
	0x03E6A010 LDP X20, X19, [X31 + 0x30]
	0x03E6A014 LDP X22, X21, [X31 + 0x20]
	0x03E6A018 LDP X24, X23, [X31 + 0x10]
	0x03E6A01C LDR X30, [X31], #0x40
	0x03E6A020 BR X3
	0x03E6A024 MOVZ W0, 0x8
	0x03E6A028 BL 0x3EB1AF0
	0x03E6A02C LDR X8, [X20]
	0x03E6A030 STR X8, [X0]
	0x03E6A034 ADRP X1, 0x4A000
	0x03E6A038 ADD X1, X1, 0xE58
	0x03E6A03C MOV X2, X31
	0x03E6A040 BL 0x3EB1B00
	0x03E6A044 MOV X20, X0
	0x03E6A048 BL 0x3EB1AE0
	0x03E6A04C MOV X0, X20
	0x03E6A050 BL 0x1D2C690
	0x03E6A054 BL 0x1990590
	0x03E6A058 MOV X1, X31
	0x03E6A05C B 0x33BDD8C
	0x03E6A060 STP X30, X25, [X31 - 0x40]!
	0x03E6A064 STP X24, X23, [X31 + 0x10]
	0x03E6A068 STP X22, X21, [X31 + 0x20]
	0x03E6A06C STP X20, X19, [X31 + 0x30]
	0x03E6A070 ADRP X19, 0x57E000
	0x03E6A074 ADRP X25, 0x302000
	0x03E6A078 LDRB W8, [X19 + 0xCEC]
	0x03E6A07C LDR X25, [X25 + 0x300]
	0x03E6A080 MOV X21, X4
	0x03E6A084 MOV X22, X3
	0x03E6A088 MOV W23, W2
	0x03E6A08C MOV X20, X1
	0x03E6A090 MOV X24, X0
	0x03E6A094 TBNZ X8, 0x0, 0x3E6A0DC
	0x03E6A098 ADRP X0, 0x302000
	0x03E6A09C LDR X0, [X0 + 0x308]
	0x03E6A0A0 BL 0x1C16CF4

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x580000
	007 Move W8, [X22+3296]
	008 Move W19, W2
	009 Move W21, W1
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x292000
	016 Move X0, [X0+584]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X22+3296], W8
	020 Compare X20, 0
	021 JumpIfEqual {67}
	022 Move X0, X20
	023 Move W1, W21
	024 Move X2, X31
	025 Call String.IndexOf, X0, X1
	026 Move TEMP, X0
	027 And TEMP, TEMP, -2147483648
	028 Compare TEMP, -2147483648
	029 JumpIfEqual {33}
	030 Move W8, [X20+16]
	031 Subtract W8, W8, 1
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move X20, X31
	034 Move X0, X20
	035 Move X20, [X31+32]
	036 Move X19, [X31+40]
	037 Move X22, [X31+16]
	038 Move X21, [X31+24]
	039 Move X30, [X31+48]
	040 Return X0
	041 Add W1, W0, 1
	042 Move X0, X20
	043 Move X2, X31
	044 Call String.Substring, X0, X1
	045 Compare X0, 0
	046 JumpIfEqual {67}
	047 Move X1, X31
	048 Call String.Trim, X0
	049 Move X20, X0
	050 Move TEMP, X19
	051 And TEMP, TEMP, 1
	052 Compare TEMP, 1
	053 JumpIfNotEqual {34}
	054 Move X8, 0x291000
	055 Move X8, [X8+584]
	056 Move X0, [X8]
	057 Move W8, [X0+224]
	058 Compare W8, 0
	059 JumpIfNotEqual {61}
	060 Call 0x1C17DFC
	061 Move X0, X20
	062 Move X20, [X31+32]
	063 Move X19, [X31+40]
	064 Move X22, [X31+16]
	065 Move X21, [X31+24]
	066 Move X30, [X31+48]
	067 Call 0x1C17F20

Method: System.Boolean IsCompressionExtension(System.String value, WebSocketSharp.CompressionMethod method)

Disassembly:
	0x03E6A194 LDP X24, X23, [X31 + 0x10]
	0x03E6A198 LDP X30, X25, [X31], #0x40
	0x03E6A19C RET
	0x03E6A1A0 BL 0x1C16F20
	0x03E6A1A4 CMP W1, 0x1
	0x03E6A1A8 MOV X20, X0
	0x03E6A1AC B.NE 0x3E6A248
	0x03E6A1B0 MOV X0, X20
	0x03E6A1B4 BL 0x3EB1AD0
	0x03E6A1B8 MOV X20, X0
	0x03E6A1BC ADRP X0, 0x289000
	0x03E6A1C0 LDR X0, [X0 + 0x7D0]
	0x03E6A1C4 BL 0x1C16D08
	0x03E6A1C8 LDR X8, [X20]
	0x03E6A1CC LDR X1, [X8]
	0x03E6A1D0 BL 0x1C17270
	0x03E6A1D4 TBZ X0, 0x0, 0x3E6A220
	0x03E6A1D8 LDR X20, [X20]
	0x03E6A1DC BL 0x3EB1AE0
	0x03E6A1E0 LDR X0, [X19 + 0x40]
	0x03E6A1E4 CBZ X0, 0x3E6A21C
	0x03E6A1E8 MOV X1, X31
	0x03E6A1EC BL 0x32F02B8
	0x03E6A1F0 LDR X8, [X19 + 0x48]
	0x03E6A1F4 CBZ X8, 0x3E6A18C
	0x03E6A1F8 LDR X3, [X8 + 0x18]
	0x03E6A1FC LDR X0, [X8 + 0x40]
	0x03E6A200 LDR X2, [X8 + 0x28]
	0x03E6A204 MOV X1, X20
	0x03E6A208 LDP X20, X19, [X31 + 0x30]
	0x03E6A20C LDP X22, X21, [X31 + 0x20]
	0x03E6A210 LDP X24, X23, [X31 + 0x10]
	0x03E6A214 LDP X30, X25, [X31], #0x40
	0x03E6A218 BR X3
	0x03E6A21C BL 0x1C16F20
	0x03E6A220 MOVZ W0, 0x8
	0x03E6A224 BL 0x3EB1AF0
	0x03E6A228 LDR X8, [X20]
	0x03E6A22C STR X8, [X0]
	0x03E6A230 ADRP X1, 0x4A000
	0x03E6A234 ADD X1, X1, 0xE58
	0x03E6A238 MOV X2, X31

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x57F000
	008 Move X22, 0x28A000
	009 Move X21, 0x291000
	010 Move W8, [X23+3297]
	011 Move X22, [X22+2760]
	012 Move X21, [X21+584]
	013 Move W20, W1
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {27}
	019 Move X0, 0x291000
	020 Move X0, [X0+584]
	021 Call 0x1C17CF4
	022 Move X0, 0x28A000
	023 Move X0, [X0+2760]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X23+3297], W8
	027 Move X0, [X22]
	028 Move W1, W31
	029 Call 0x1C17D6C
	030 Move X8, [X21]
	031 Move X21, X0
	032 Move W9, [X8+224]
	033 Compare W9, 0
	034 JumpIfNotEqual {37}
	035 Move X0, X8
	036 Call 0x1C17DFC
	037 Move W0, W20
	038 Move X1, X21
	039 Call Ext.ToExtensionString, X0, X1
	040 Compare X19, 0
	041 JumpIfEqual {54}
	042 Move X1, X0
	043 Move X0, X19
	044 Move X20, [X31+32]
	045 Move X19, [X31+40]
	046 Move X22, [X31+16]
	047 Move X21, [X31+24]
	048 Move W2, 4
	049 Move X3, X31
	050 Move X30, [X31+48]
	051 Move X23, [X31+56]
	052 Call String.StartsWith, X0, X1, X2
	053 Return X0
	054 Call 0x1C17F20

Method: System.Boolean IsControl(System.Byte opcode)

Disassembly:
	0x03E6A3A8 B 0x3E6A388
	0x03E6A3AC STP X30, X27, [X31 - 0x50]!
	0x03E6A3B0 STP X26, X25, [X31 + 0x10]
	0x03E6A3B4 STP X24, X23, [X31 + 0x20]

ISIL:
	001 And W8, W0, 248
	002 NotImplemented "Instruction CMP not yet implemented."
	003 NotImplemented "Instruction CSET not yet implemented."
	004 Return X0

Method: System.Boolean IsControl(WebSocketSharp.Opcode opcode)

Disassembly:
	0x03E6A3B8 STP X22, X21, [X31 + 0x30]
	0x03E6A3BC STP X20, X19, [X31 + 0x40]
	0x03E6A3C0 ADRP X22, 0x57E000
	0x03E6A3C4 ADRP X19, 0x302000

ISIL:
	001 And W8, W0, 255
	002 NotImplemented "Instruction CMP not yet implemented."
	003 NotImplemented "Instruction CSET not yet implemented."
	004 Return X0

Method: System.Boolean IsData(System.Byte opcode)

Disassembly:
	0x03E6A3C8 ADRP X21, 0x289000
	0x03E6A3CC LDRB W8, [X22 + 0xCF1]
	0x03E6A3D0 LDR X19, [X19 + 0x320]
	0x03E6A3D4 LDR X21, [X21 + 0x6C0]
	0x03E6A3D8 MOV X20, X0

ISIL:
	001 Subtract W8, W0, 1
	002 And W8, W8, 255
	003 NotImplemented "Instruction CMP not yet implemented."
	004 NotImplemented "Instruction CSET not yet implemented."
	005 Return X0

Method: System.Boolean IsData(WebSocketSharp.Opcode opcode)

Disassembly:
	0x03E6A3DC TBNZ X8, 0x0, 0x3E6A448
	0x03E6A3E0 ADRP X0, 0x302000
	0x03E6A3E4 LDR X0, [X0 + 0x320]
	0x03E6A3E8 BL 0x1C16CF4
	0x03E6A3EC ADRP X0, 0x302000

ISIL:
	001 Subtract W8, W0, 1
	002 And W8, W8, 255
	003 NotImplemented "Instruction CMP not yet implemented."
	004 NotImplemented "Instruction CSET not yet implemented."
	005 Return X0

Method: System.Boolean IsEqualTo(System.Int32 value, System.Char c, System.Action`1<System.Int32> beforeComparing)

Disassembly:
	0x03E6A3F0 LDR X0, [X0 + 0x2A0]
	0x03E6A3F4 BL 0x1C16CF4
	0x03E6A3F8 ADRP X0, 0x289000
	0x03E6A3FC LDR X0, [X0 + 0xDF8]
	0x03E6A400 BL 0x1C16CF4
	0x03E6A404 ADRP X0, 0x290000
	0x03E6A408 LDR X0, [X0 + 0x248]
	0x03E6A40C BL 0x1C16CF4
	0x03E6A410 ADRP X0, 0x289000
	0x03E6A414 LDR X0, [X0 + 0xE00]
	0x03E6A418 BL 0x1C16CF4
	0x03E6A41C ADRP X0, 0x289000
	0x03E6A420 LDR X0, [X0 + 0xE18]
	0x03E6A424 BL 0x1C16CF4
	0x03E6A428 ADRP X0, 0x289000
	0x03E6A42C LDR X0, [X0 + 0xAC8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Compare X2, 0
	005 JumpIfEqual {19}
	006 Move W20, W0
	007 Move X8, [X2+24]
	008 Move X0, [X2+64]
	009 Move X2, [X2+40]
	010 Move W19, W1
	011 Move W1, W20
	012 NotImplemented "Instruction BLR not yet implemented."
	013 NotImplemented "Instruction CMP not yet implemented."
	014 Move X20, [X31+16]
	015 Move X19, [X31+24]
	016 NotImplemented "Instruction CSET not yet implemented."
	017 Move X30, [X31+32]
	018 Return X0
	019 Call 0x1C17F20

Method: System.Boolean IsHttpMethod(System.String value, System.Version version)

Disassembly:
	0x03E6A430 BL 0x1C16CF4
	0x03E6A434 ADRP X0, 0x289000
	0x03E6A438 LDR X0, [X0 + 0x6C0]
	0x03E6A43C BL 0x1C16CF4
	0x03E6A440 MOVZ W8, 0x1
	0x03E6A444 STRB W8, [X22 + 0xCF1]
	0x03E6A448 LDR X0, [X21]
	0x03E6A44C ADRP X21, 0x289000
	0x03E6A450 LDR X19, [X19]
	0x03E6A454 LDR W8, [X0 + 0xE0]
	0x03E6A458 LDR X21, [X21 + 0xDF8]
	0x03E6A45C CBNZ W8, 0x3E6A464
	0x03E6A460 BL 0x1C16DFC
	0x03E6A464 MOV X0, X19
	0x03E6A468 MOV X1, X31
	0x03E6A46C BL 0x338C698
	0x03E6A470 LDR X8, [X21]
	0x03E6A474 MOV X19, X0
	0x03E6A478 LDR W9, [X8 + 0xE0]
	0x03E6A47C CBNZ W9, 0x3E6A488
	0x03E6A480 MOV X0, X8
	0x03E6A484 BL 0x1C16DFC
	0x03E6A488 MOV X0, X19
	0x03E6A48C MOV X1, X31
	0x03E6A490 BL 0x33B02B8
	0x03E6A494 CBZ X0, 0x3E6A6A4
	0x03E6A498 ADRP X23, 0x289000
	0x03E6A49C LDR X23, [X23 + 0xE00]
	0x03E6A4A0 MOV X1, X31
	0x03E6A4A4 BL 0x33A2834
	0x03E6A4A8 MOV X19, X0
	0x03E6A4AC CBZ X0, 0x3E6A6A8
	0x03E6A4B0 ADRP X24, 0x289000
	0x03E6A4B4 ADRP X25, 0x302000
	0x03E6A4B8 ADRP X26, 0x289000
	0x03E6A4BC ADRP X27, 0x290000
	0x03E6A4C0 LDR X24, [X24 + 0xE18]
	0x03E6A4C4 LDR X25, [X25 + 0x2A0]
	0x03E6A4C8 LDR X26, [X26 + 0xAC8]
	0x03E6A4CC LDR X27, [X27 + 0x248]
	0x03E6A4D0 LDR X8, [X19]
	0x03E6A4D4 LDR X1, [X24]
	0x03E6A4D8 LDRH W9, [X8 + 0x12E]
	0x03E6A4DC CBZ X9, 0x3E6A500
	0x03E6A4E0 LDR X10, [X8 + 0xB0]
	0x03E6A4E4 ADD X10, X10, 0x8

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x57F000
	007 Move X21, 0x303000
	008 Move W8, [X22+3298]
	009 Move X21, [X21+704]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x291000
	017 Move X0, [X0+584]
	018 Call 0x1C17CF4
	019 Move X0, 0x303000
	020 Move X0, [X0+704]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+3298], W8
	024 Move X0, [X21]
	025 Move X22, 0x291000
	026 Move W8, [X0+224]
	027 Move X22, [X22+584]
	028 Compare W8, 0
	029 JumpIfNotEqual {32}
	030 Call 0x1C17DFC
	031 Move X0, [X21]
	032 Move X8, [X0+184]
	033 Move X0, X20
	034 Move X2, X31
	035 Move X1, [X8]
	036 Call Version.op_Equality, X0, X1
	037 Move X8, [X22]
	038 Move W20, W0
	039 Move W9, [X8+224]
	040 Compare W9, 0
	041 JumpIfNotEqual {44}
	042 Move X0, X8
	043 Call 0x1C17DFC
	044 Move X0, X19
	045 Move TEMP, X20
	046 And TEMP, TEMP, 1
	047 Compare TEMP, 1
	048 JumpIfNotEqual {56}
	049 Move X20, [X31+32]
	050 Move X19, [X31+40]
	051 Move X22, [X31+16]
	052 Move X21, [X31+24]
	053 Move X30, [X31+48]
	054 Call Ext.isHttpMethod10, X0
	055 Return X0
	056 Move X20, [X31+32]
	057 Move X19, [X31+40]
	058 Move X22, [X31+16]
	059 Move X21, [X31+24]
	060 Move X30, [X31+48]
	061 Call Ext.isHttpMethod, X0
	062 Return X0

Method: System.Boolean IsPortNumber(System.Int32 value)

Disassembly:
	0x03E6A4E8 LDUR X11, [X10 - 0x8]
	0x03E6A4EC CMP X11, X1
	0x03E6A4F0 B.EQ 0x3E6A510
	0x03E6A4F4 SUBS X9, X9, 0x1
	0x03E6A4F8 ADD X10, X10, 0x10

ISIL:
	001 Subtract W8, W0, 1
	002 Move W9, 0xFFFF
	003 NotImplemented "Instruction CMP not yet implemented."
	004 NotImplemented "Instruction CSET not yet implemented."
	005 Return X0

Method: System.Boolean IsReserved(System.UInt16 code)

Disassembly:
	0x03E6A4FC B.NE 0x3E6A4E8
	0x03E6A500 MOV X0, X19
	0x03E6A504 MOV W2, W31
	0x03E6A508 BL 0x1C5C788
	0x03E6A50C B 0x3E6A51C
	0x03E6A510 LDRSW X9, [X10]
	0x03E6A514 ADD X8, X8, X9, 0x4, LSL
	0x03E6A518 ADD X0, X8, 0x138
	0x03E6A51C LDP X8, X1, [X0]
	0x03E6A520 MOV X0, X19
	0x03E6A524 BLR X8
	0x03E6A528 TBZ X0, 0x0, 0x3E6A5F4

ISIL:
	001 And W8, W0, 0xFFFE
	002 NotImplemented "Instruction CMP not yet implemented."
	003 Move W0, 1
	004 Return X0
	005 And W8, W0, 0xFFFF
	006 NotImplemented "Instruction CMP not yet implemented."
	007 NotImplemented "Instruction CSET not yet implemented."
	008 NotImplemented "Instruction CMP not yet implemented."
	009 NotImplemented "Instruction CSET not yet implemented."
	010 Or W0, W9, W8
	011 Return X0

Method: System.Boolean IsReserved(WebSocketSharp.CloseStatusCode code)

Disassembly:
	0x03E6A52C LDR X8, [X19]
	0x03E6A530 LDR X1, [X24]
	0x03E6A534 LDRH W9, [X8 + 0x12E]
	0x03E6A538 CBZ X9, 0x3E6A55C
	0x03E6A53C LDR X10, [X8 + 0xB0]
	0x03E6A540 ADD X10, X10, 0x8
	0x03E6A544 LDUR X11, [X10 - 0x8]
	0x03E6A548 CMP X11, X1
	0x03E6A54C B.EQ 0x3E6A56C
	0x03E6A550 SUBS X9, X9, 0x1
	0x03E6A554 ADD X10, X10, 0x10
	0x03E6A558 B.NE 0x3E6A544

ISIL:
	001 And W8, W0, 0xFFFE
	002 NotImplemented "Instruction CMP not yet implemented."
	003 Move W0, 1
	004 Return X0
	005 And W8, W0, 0xFFFF
	006 NotImplemented "Instruction CMP not yet implemented."
	007 NotImplemented "Instruction CSET not yet implemented."
	008 NotImplemented "Instruction CMP not yet implemented."
	009 NotImplemented "Instruction CSET not yet implemented."
	010 Or W0, W9, W8
	011 Return X0

Method: System.Boolean IsSupported(System.Byte opcode)

Disassembly:
	0x03E6A55C MOVZ W2, 0x1
	0x03E6A560 MOV X0, X19
	0x03E6A564 BL 0x1C5C788
	0x03E6A568 B 0x3E6A57C
	0x03E6A56C LDR W9, [X10]
	0x03E6A570 ADD W9, W9, 0x1
	0x03E6A574 ADD X8, X8, W9, 0x4, SXTW
	0x03E6A578 ADD X0, X8, 0x138
	0x03E6A57C LDP X8, X1, [X0]
	0x03E6A580 MOV X0, X19
	0x03E6A584 BLR X8
	0x03E6A588 CBZ X0, 0x3E6A69C
	0x03E6A58C LDR X8, [X0]
	0x03E6A590 LDR X1, [X25]
	0x03E6A594 LDR X8, [X8 + 0x40]
	0x03E6A598 LDR X9, [X1 + 0x40]
	0x03E6A59C CMP X8, X9
	0x03E6A5A0 B.NE 0x3E6A6A0
	0x03E6A5A4 BL 0x1C16E08
	0x03E6A5A8 LDRB W21, [X0]
	0x03E6A5AC LDR X0, [X26]
	0x03E6A5B0 MOV W1, W31
	0x03E6A5B4 BL 0x1C16D6C
	0x03E6A5B8 MOV X22, X0
	0x03E6A5BC LDR X0, [X27]
	0x03E6A5C0 LDR W8, [X0 + 0xE0]
	0x03E6A5C4 CBNZ W8, 0x3E6A5CC
	0x03E6A5C8 BL 0x1C16DFC
	0x03E6A5CC MOV W0, W21
	0x03E6A5D0 MOV X1, X22
	0x03E6A5D4 BL 0x3E6923C
	0x03E6A5D8 MOV X1, X20
	0x03E6A5DC MOV X2, X31
	0x03E6A5E0 BL 0x321BA08
	0x03E6A5E4 TBZ X0, 0x0, 0x3E6A4D0
	0x03E6A5E8 MOV X20, X31
	0x03E6A5EC MOVZ W22, 0x5
	0x03E6A5F0 B 0x3E6A600
	0x03E6A5F4 MOV X20, X31
	0x03E6A5F8 MOV W21, W31
	0x03E6A5FC MOVZ W22, 0x6
	0x03E6A600 LDR X1, [X23]
	0x03E6A604 MOV X0, X19
	0x03E6A608 BL 0x1C16E00
	0x03E6A60C CBZ X0, 0x3E6A66C
	0x03E6A610 LDR X8, [X0]
	0x03E6A614 LDR X1, [X23]
	0x03E6A618 MOV X19, X0
	0x03E6A61C LDRH W9, [X8 + 0x12E]
	0x03E6A620 CBZ X9, 0x3E6A644
	0x03E6A624 LDR X10, [X8 + 0xB0]
	0x03E6A628 ADD X10, X10, 0x8
	0x03E6A62C LDUR X11, [X10 - 0x8]
	0x03E6A630 CMP X11, X1
	0x03E6A634 B.EQ 0x3E6A654
	0x03E6A638 SUBS X9, X9, 0x1
	0x03E6A63C ADD X10, X10, 0x10

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x57F000
	007 Move X20, 0x303000
	008 Move X21, 0x28A000
	009 Move W8, [X22+3299]
	010 Move X20, [X20+712]
	011 Move X21, [X21+1728]
	012 Move W19, W0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {31}
	017 Move X0, 0x28B000
	018 Move X0, [X0+2520]
	019 Call 0x1C17CF4
	020 Move X0, 0x28A000
	021 Move X0, [X0+3576]
	022 Call 0x1C17CF4
	023 Move X0, 0x303000
	024 Move X0, [X0+712]
	025 Call 0x1C17CF4
	026 Move X0, 0x28A000
	027 Move X0, [X0+1728]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X22+3299], W8
	031 Move X0, [X21]
	032 Move X22, 0x28B000
	033 Move X21, 0x28A000
	034 Move X20, [X20]
	035 Move W8, [X0+224]
	036 Move X22, [X22+2520]
	037 Move X21, [X21+3576]
	038 Compare W8, 0
	039 JumpIfNotEqual {41}
	040 Call 0x1C17DFC
	041 Move X0, X20
	042 Move X1, X31
	043 Call Type.GetTypeFromHandle, X0
	044 Move X20, X0
	045 Move X0, [X22]
	046 Add X1, X31, 12
	047 Move [X31+12], W19
	048 Call 0x1C17E04
	049 Move X8, [X21]
	050 Move X19, X0
	051 Move W9, [X8+224]
	052 Compare W9, 0
	053 JumpIfNotEqual {56}
	054 Move X0, X8
	055 Call 0x1C17DFC
	056 Move X0, X20
	057 Move X1, X19
	058 Move X2, X31
	059 Call Enum.IsDefined, X0, X1
	060 Move X20, [X31+32]
	061 Move X19, [X31+40]
	062 Move X22, [X31+16]
	063 Move X21, [X31+24]
	064 And W0, W0, 1
	065 Move X30, [X31+48]
	066 Return X0

Method: System.Boolean IsText(System.String value)

Disassembly:
	0x03E6A640 B.NE 0x3E6A62C
	0x03E6A644 MOV X0, X19
	0x03E6A648 MOV W2, W31
	0x03E6A64C BL 0x1C5C788
	0x03E6A650 B 0x3E6A660
	0x03E6A654 LDRSW X9, [X10]
	0x03E6A658 ADD X8, X8, X9, 0x4, LSL
	0x03E6A65C ADD X0, X8, 0x138
	0x03E6A660 LDP X8, X1, [X0]
	0x03E6A664 MOV X0, X19
	0x03E6A668 BLR X8
	0x03E6A66C CBNZ X20, 0x3E6A6AC
	0x03E6A670 CMP W22, 0x6
	0x03E6A674 B.EQ 0x3E6A67C
	0x03E6A678 CBNZ W22, 0x3E6A680
	0x03E6A67C MOV W21, W31
	0x03E6A680 MOV W0, W21
	0x03E6A684 LDP X20, X19, [X31 + 0x40]
	0x03E6A688 LDP X22, X21, [X31 + 0x30]
	0x03E6A68C LDP X24, X23, [X31 + 0x20]
	0x03E6A690 LDP X26, X25, [X31 + 0x10]
	0x03E6A694 LDP X30, X27, [X31], #0x50
	0x03E6A698 RET
	0x03E6A69C BL 0x1C16F20
	0x03E6A6A0 BL 0x1C171E0
	0x03E6A6A4 BL 0x1C16F20
	0x03E6A6A8 BL 0x1C16F20
	0x03E6A6AC MOV X0, X20
	0x03E6A6B0 BL 0x1C16F18
	0x03E6A6B4 B 0x3E6A6CC
	0x03E6A6B8 B 0x3E6A6CC
	0x03E6A6BC B 0x3E6A6CC
	0x03E6A6C0 B 0x3E6A6CC
	0x03E6A6C4 B 0x3E6A6CC
	0x03E6A6C8 B 0x3E6A6CC
	0x03E6A6CC MOV X21, X0
	0x03E6A6D0 CMP W1, 0x1
	0x03E6A6D4 B.NE 0x3E6A6F4
	0x03E6A6D8 MOV X0, X21
	0x03E6A6DC BL 0x3EB1AD0
	0x03E6A6E0 LDR X20, [X0]
	0x03E6A6E4 BL 0x3EB1AE0
	0x03E6A6E8 MOV W22, W31
	0x03E6A6EC MOV W21, W31
	0x03E6A6F0 B 0x3E6A600
	0x03E6A6F4 MOV X20, X31
	0x03E6A6F8 B 0x3E6A700
	0x03E6A6FC MOV X21, X0
	0x03E6A700 LDR X1, [X23]
	0x03E6A704 MOV X0, X19
	0x03E6A708 BL 0x1C16E00
	0x03E6A70C MOV X19, X0
	0x03E6A710 CBZ X0, 0x3E6A76C
	0x03E6A714 LDR X8, [X19]
	0x03E6A718 LDR X1, [X23]
	0x03E6A71C LDRH W9, [X8 + 0x12E]
	0x03E6A720 CBZ X9, 0x3E6A744
	0x03E6A724 LDR X10, [X8 + 0xB0]
	0x03E6A728 ADD X10, X10, 0x8
	0x03E6A72C LDUR X11, [X10 - 0x8]
	0x03E6A730 CMP X11, X1
	0x03E6A734 B.EQ 0x3E6A754
	0x03E6A738 SUBS X9, X9, 0x1
	0x03E6A73C ADD X10, X10, 0x10
	0x03E6A740 B.NE 0x3E6A72C
	0x03E6A744 MOV X0, X19
	0x03E6A748 MOV W2, W31
	0x03E6A74C BL 0x1C5C788
	0x03E6A750 B 0x3E6A760
	0x03E6A754 LDRSW X9, [X10]
	0x03E6A758 ADD X8, X8, X9, 0x4, LSL
	0x03E6A75C ADD X0, X8, 0x138
	0x03E6A760 LDP X8, X1, [X0]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0x57F000
	009 Move W8, [X20+3300]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x303000
	016 Move X0, [X0+720]
	017 Call 0x1C17CF4
	018 Move X0, 0x303000
	019 Move X0, [X0+728]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X20+3300], W8
	023 Compare X19, 0
	024 JumpIfEqual {75}
	025 Move W22, [X19+16]
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move X23, 0x303000
	028 Move X24, 0x303000
	029 Move X23, [X23+720]
	030 Move X24, [X24+728]
	031 Move W20, W31
	032 Move X0, X19
	033 Move W1, W20
	034 Move X2, X31
	035 Call String.get_Chars, X0, X1
	036 And W8, W0, 0xFFFF
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move W21, W0
	039 Move X0, [X23]
	040 Compare X0, 0
	041 JumpIfEqual {75}
	042 Move W1, W21
	043 Move X2, X31
	044 Call String.IndexOf, X0, X1
	045 Add W31, W0, 1
	046 And W8, W21, 0xFFFF
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Add W20, W20, 1
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Move X0, X19
	051 Move W1, W20
	052 Move X2, X31
	053 Call String.get_Chars, X0, X1
	054 Move X8, [X24]
	055 Compare X8, 0
	056 JumpIfEqual {75}
	057 Move W1, W0
	058 Move X0, X8
	059 Move X2, X31
	060 Call String.IndexOf, X0, X1
	061 Add W31, W0, 1
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Add W20, W20, 1
	064 NotImplemented "Instruction CMP not yet implemented."
	065 Move W0, 1
	066 Move W0, W31
	067 Move X20, [X31+48]
	068 Move X19, [X31+56]
	069 Move X22, [X31+32]
	070 Move X21, [X31+40]
	071 Move X24, [X31+16]
	072 Move X23, [X31+24]
	073 Move X30, [X31+64]
	074 Return X0
	075 Call 0x1C17F20

Method: System.Boolean IsToken(System.String value)

Disassembly:
	0x03E6A764 MOV X0, X19
	0x03E6A768 BLR X8
	0x03E6A76C CBNZ X20, 0x3E6A778
	0x03E6A770 MOV X0, X21
	0x03E6A774 BL 0x1D2C690
	0x03E6A778 MOV X0, X20
	0x03E6A77C BL 0x1C16F18
	0x03E6A780 BL 0x1990590
	0x03E6A784 STR X30, [X31 - 0x20]!
	0x03E6A788 STP X20, X19, [X31 + 0x10]
	0x03E6A78C ADRP X20, 0x57E000
	0x03E6A790 LDRB W8, [X20 + 0xCF3]
	0x03E6A794 MOV X19, X0
	0x03E6A798 TBNZ X8, 0x0, 0x3E6A7B0
	0x03E6A79C ADRP X0, 0x296000
	0x03E6A7A0 LDR X0, [X0 + 0x968]
	0x03E6A7A4 BL 0x1C16CF4
	0x03E6A7A8 MOVZ W8, 0x1
	0x03E6A7AC STRB W8, [X20 + 0xCF3]
	0x03E6A7B0 STR X31, [X31 + 0x8]
	0x03E6A7B4 CBZ X19, 0x3E6A85C
	0x03E6A7B8 LDR W8, [X19 + 0x10]
	0x03E6A7BC CBZ W8, 0x3E6A85C
	0x03E6A7C0 ADRP X8, 0x296000
	0x03E6A7C4 LDR X8, [X8 + 0x968]
	0x03E6A7C8 LDR X0, [X8]
	0x03E6A7CC LDR W8, [X0 + 0xE0]
	0x03E6A7D0 CBNZ W8, 0x3E6A7D8
	0x03E6A7D4 BL 0x1C16DFC
	0x03E6A7D8 ADD X1, X31, 0x8
	0x03E6A7DC MOV X0, X19
	0x03E6A7E0 MOV X2, X31
	0x03E6A7E4 BL 0x366D010
	0x03E6A7E8 TBZ X0, 0x0, 0x3E6A7F4
	0x03E6A7EC LDR X0, [X31 + 0x8]
	0x03E6A7F0 B 0x3E6A860
	0x03E6A7F4 MOV X0, X19
	0x03E6A7F8 MOV X1, X31
	0x03E6A7FC BL 0x369B574
	0x03E6A800 CBZ X0, 0x3E6A814
	0x03E6A804 LDR W8, [X0 + 0x18]
	0x03E6A808 CBZ W8, 0x3E6A818
	0x03E6A80C LDR X0, [X0 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x57F000
	006 Move W8, [X20+3301]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x303000
	013 Move X0, [X0+736]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+3301], W8
	017 Compare X19, 0
	018 JumpIfEqual {51}
	019 Move W8, [X19+16]
	020 NotImplemented "Instruction CMP not yet implemented."
	021 Move X21, 0x303000
	022 Move X21, [X21+736]
	023 Move W20, W31
	024 Move X0, X19
	025 Move W1, W20
	026 Move X2, X31
	027 Call String.get_Chars, X0, X1
	028 Subtract W8, W0, 32
	029 And W8, W8, 0xFFFF
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move W1, W0
	032 Move X0, [X21]
	033 Compare X0, 0
	034 JumpIfEqual {51}
	035 Move X2, X31
	036 Call String.IndexOf, X0, X1
	037 Move TEMP, X0
	038 And TEMP, TEMP, -2147483648
	039 Compare TEMP, -2147483648
	040 JumpIfNotEqual {45}
	041 Move W8, [X19+16]
	042 Add W20, W20, 1
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Move W0, 1
	045 Move W0, W31
	046 Move X20, [X31+16]
	047 Move X19, [X31+24]
	048 Move X30, [X31+32]
	049 Move X21, [X31+40]
	050 Return X0
	051 Call 0x1C17F20

Method: System.Boolean KeepsAlive(System.Collections.Specialized.NameValueCollection headers, System.Version version)

Disassembly:
	0x03E6A810 B 0x3E6A860
	0x03E6A814 BL 0x1C16F20
	0x03E6A818 BL 0x1C16F28
	0x03E6A81C B 0x3E6A824
	0x03E6A820 B 0x3E6A824
	0x03E6A824 MOV X19, X0
	0x03E6A828 CMP W1, 0x1
	0x03E6A82C B.NE 0x3E6A894
	0x03E6A830 MOV X0, X19
	0x03E6A834 BL 0x3EB1AD0
	0x03E6A838 MOV X19, X0
	0x03E6A83C ADRP X0, 0x28F000
	0x03E6A840 LDR X0, [X0 + 0xCC0]
	0x03E6A844 BL 0x1C16D08
	0x03E6A848 LDR X8, [X19]
	0x03E6A84C LDR X1, [X8]
	0x03E6A850 BL 0x1C17270
	0x03E6A854 TBZ X0, 0x0, 0x3E6A86C
	0x03E6A858 BL 0x3EB1AE0
	0x03E6A85C MOV X0, X31
	0x03E6A860 LDP X20, X19, [X31 + 0x10]
	0x03E6A864 LDR X30, [X31], #0x20
	0x03E6A868 RET
	0x03E6A86C MOVZ W0, 0x8
	0x03E6A870 BL 0x3EB1AF0
	0x03E6A874 LDR X8, [X19]
	0x03E6A878 STR X8, [X0]
	0x03E6A87C ADRP X1, 0x4A000
	0x03E6A880 ADD X1, X1, 0xE58
	0x03E6A884 MOV X2, X31
	0x03E6A888 BL 0x3EB1B00
	0x03E6A88C MOV X19, X0
	0x03E6A890 BL 0x3EB1AE0
	0x03E6A894 MOV X0, X19
	0x03E6A898 BL 0x1D2C690
	0x03E6A89C BL 0x1990590
	0x03E6A8A0 STP X30, X21, [X31 - 0x20]!
	0x03E6A8A4 STP X20, X19, [X31 + 0x10]
	0x03E6A8A8 ADRP X21, 0x57E000
	0x03E6A8AC LDRB W8, [X21 + 0xCF4]
	0x03E6A8B0 MOV W20, W1
	0x03E6A8B4 MOV X19, X0
	0x03E6A8B8 TBNZ X8, 0x0, 0x3E6A8D0
	0x03E6A8BC ADRP X0, 0x2CF000
	0x03E6A8C0 LDR X0, [X0 + 0x418]
	0x03E6A8C4 BL 0x1C16CF4
	0x03E6A8C8 MOVZ W8, 0x1
	0x03E6A8CC STRB W8, [X21 + 0xCF4]
	0x03E6A8D0 TBZ X20, 0x0, 0x3E6A920
	0x03E6A8D4 CBZ X19, 0x3E6A93C
	0x03E6A8D8 MOV X0, X19
	0x03E6A8DC MOV X1, X31
	0x03E6A8E0 BL 0x366D604
	0x03E6A8E4 CMP W0, 0x17
	0x03E6A8E8 B.NE 0x3E6A924
	0x03E6A8EC LDR X8, [X19]
	0x03E6A8F0 MOV X0, X19
	0x03E6A8F4 LDP X9, X1, [X8 + 0x168]
	0x03E6A8F8 BLR X9
	0x03E6A8FC ADRP X8, 0x2CF000
	0x03E6A900 LDR X8, [X8 + 0x418]
	0x03E6A904 LDP X20, X19, [X31 + 0x10]
	0x03E6A908 MOV X1, X0
	0x03E6A90C MOV X2, X31
	0x03E6A910 LDR X8, [X8]
	0x03E6A914 MOV X0, X8
	0x03E6A918 LDP X30, X21, [X31], #0x20
	0x03E6A91C B 0x321EFD0
	0x03E6A920 CBZ X19, 0x3E6A93C
	0x03E6A924 LDR X8, [X19]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x57F000
	007 Move X21, 0x303000
	008 Move W8, [X22+3302]
	009 Move X21, [X21+704]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {33}
	016 Move X0, 0x291000
	017 Move X0, [X0+584]
	018 Call 0x1C17CF4
	019 Move X0, 0x303000
	020 Move X0, [X0+704]
	021 Call 0x1C17CF4
	022 Move X0, 0x2D1000
	023 Move X0, [X0+2952]
	024 Call 0x1C17CF4
	025 Move X0, 0x2D5000
	026 Move X0, [X0+2384]
	027 Call 0x1C17CF4
	028 Move X0, 0x2D1000
	029 Move X0, [X0+344]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X22+3302], W8
	033 Move X0, [X21]
	034 Move X22, 0x291000
	035 Move W8, [X0+224]
	036 Move X22, [X22+584]
	037 Compare W8, 0
	038 JumpIfNotEqual {41}
	039 Call 0x1C17DFC
	040 Move X0, [X21]
	041 Move X8, [X0+184]
	042 Move X21, 0x2D1000
	043 Move X0, X20
	044 Move X2, X31
	045 Move X1, [X8+8]
	046 Move X21, [X21+344]
	047 Call Version.op_LessThan, X0, X1
	048 Move X8, [X22]
	049 Move W20, W0
	050 Move W9, [X8+224]
	051 Compare W9, 0
	052 JumpIfNotEqual {55}
	053 Move X0, X8
	054 Call 0x1C17DFC
	055 Move X1, [X21]
	056 Move TEMP, X20
	057 And TEMP, TEMP, 1
	058 Compare TEMP, 1
	059 JumpIfNotEqual {72}
	060 Move X8, 0x2D5000
	061 Move X8, [X8+2384]
	062 Move X0, X19
	063 Move X20, [X31+32]
	064 Move X19, [X31+40]
	065 Move X22, [X31+16]
	066 Move X21, [X31+24]
	067 Move X2, [X8]
	068 Move W3, 5
	069 Move X30, [X31+48]
	070 Call Ext.Contains, X0, X1, X2, X3
	071 Return X0
	072 Move X8, 0x2D1000
	073 Move X8, [X8+2952]
	074 Move W3, 5
	075 Move X0, X19
	076 Move X2, [X8]
	077 Call Ext.Contains, X0, X1, X2, X3
	078 Move X20, [X31+32]
	079 Move X19, [X31+40]
	080 Move X22, [X31+16]
	081 Move X21, [X31+24]
	082 NotImplemented "Instruction ORN not yet implemented."
	083 And W0, W8, 1
	084 Move X30, [X31+48]
	085 Return X0

Method: System.Boolean MaybeUri(System.String value)

Disassembly:
	0x03E6A928 MOV X0, X19
	0x03E6A92C LDP X20, X19, [X31 + 0x10]
	0x03E6A930 LDP X2, X1, [X8 + 0x168]
	0x03E6A934 LDP X30, X21, [X31], #0x20
	0x03E6A938 BR X2
	0x03E6A93C BL 0x1C16F20
	0x03E6A940 STR X30, [X31 - 0x30]!
	0x03E6A944 STP X22, X21, [X31 + 0x10]
	0x03E6A948 STP X20, X19, [X31 + 0x20]
	0x03E6A94C ADRP X21, 0x57E000
	0x03E6A950 ADRP X22, 0x290000
	0x03E6A954 LDRB W8, [X21 + 0xCF5]
	0x03E6A958 LDR X22, [X22 + 0x248]
	0x03E6A95C MOV W19, W1
	0x03E6A960 MOV X20, X0
	0x03E6A964 TBNZ X8, 0x0, 0x3E6A97C
	0x03E6A968 ADRP X0, 0x290000
	0x03E6A96C LDR X0, [X0 + 0x248]
	0x03E6A970 BL 0x1C16CF4
	0x03E6A974 MOVZ W8, 0x1
	0x03E6A978 STRB W8, [X21 + 0xCF5]
	0x03E6A97C LDR X0, [X22]
	0x03E6A980 LDR W8, [X0 + 0xE0]
	0x03E6A984 CBNZ W8, 0x3E6A98C
	0x03E6A988 BL 0x1C16DFC
	0x03E6A98C MOV X0, X20
	0x03E6A990 MOV W1, W19
	0x03E6A994 BL 0x3E6A9B0
	0x03E6A998 LDP X20, X19, [X31 + 0x20]
	0x03E6A99C LDP X22, X21, [X31 + 0x10]
	0x03E6A9A0 MOV W1, W31
	0x03E6A9A4 MOV X2, X31
	0x03E6A9A8 LDR X30, [X31], #0x30
	0x03E6A9AC B 0x331710C
	0x03E6A9B0 STP X30, X21, [X31 - 0x20]!
	0x03E6A9B4 STP X20, X19, [X31 + 0x10]
	0x03E6A9B8 ADRP X21, 0x57E000
	0x03E6A9BC LDRB W8, [X21 + 0xD05]
	0x03E6A9C0 MOV W20, W1
	0x03E6A9C4 MOV X19, X0
	0x03E6A9C8 TBNZ X8, 0x0, 0x3E6A9EC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x57F000
	005 Move W8, [X20+3303]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x291000
	012 Move X0, [X0+584]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+3303], W8
	016 Compare X19, 0
	017 JumpIfEqual {49}
	018 Move W1, 58
	019 Move X0, X19
	020 Move X2, X31
	021 Call String.IndexOf, X0, X1
	022 Subtract W8, W0, 2
	023 NotImplemented "Instruction CMP not yet implemented."
	024 Move W2, W0
	025 Move X0, X19
	026 Move W1, W31
	027 Move X3, X31
	028 Call String.Substring, X0, X1, X2
	029 Move X8, 0x291000
	030 Move X8, [X8+584]
	031 Move X19, X0
	032 Move X8, [X8]
	033 Move W9, [X8+224]
	034 Compare W9, 0
	035 JumpIfNotEqual {38}
	036 Move X0, X8
	037 Call 0x1C17DFC
	038 Move X0, X19
	039 Move X20, [X31+16]
	040 Move X19, [X31+24]
	041 Move X30, [X31+32]
	042 Call Ext.isPredefinedScheme, X0
	043 Return X0
	044 Move X20, [X31+16]
	045 Move X19, [X31+24]
	046 Move W0, W31
	047 Move X30, [X31+32]
	048 Return X0
	049 Call 0x1C17F20

Method: System.String Quote(System.String value)

Disassembly:
	0x03E6A9CC ADRP X0, 0x302000
	0x03E6A9D0 LDR X0, [X0 + 0x328]
	0x03E6A9D4 BL 0x1C16CF4
	0x03E6A9D8 ADRP X0, 0x290000
	0x03E6A9DC LDR X0, [X0 + 0x248]
	0x03E6A9E0 BL 0x1C16CF4
	0x03E6A9E4 MOVZ W8, 0x1
	0x03E6A9E8 STRB W8, [X21 + 0xD05]
	0x03E6A9EC CBZ X19, 0x3E6AA58
	0x03E6A9F0 LDR W8, [X19 + 0x18]
	0x03E6A9F4 CMP W8, 0x2
	0x03E6A9F8 B.LT 0x3E6AA48
	0x03E6A9FC ADRP X21, 0x290000
	0x03E6AA00 LDR X21, [X21 + 0x248]
	0x03E6AA04 LDR X0, [X21]
	0x03E6AA08 LDR W8, [X0 + 0xE0]
	0x03E6AA0C CBZ W8, 0x3E6AA40
	0x03E6AA10 CBZ W20, 0x3E6AA48
	0x03E6AA14 LDR X0, [X21]
	0x03E6AA18 LDR W8, [X0 + 0xE0]
	0x03E6AA1C CBNZ W8, 0x3E6AA24
	0x03E6AA20 BL 0x1C16DFC
	0x03E6AA24 ADRP X8, 0x302000
	0x03E6AA28 LDR X8, [X8 + 0x328]
	0x03E6AA2C MOV X0, X19
	0x03E6AA30 LDP X20, X19, [X31 + 0x10]
	0x03E6AA34 LDR X1, [X8]
	0x03E6AA38 LDP X30, X21, [X31], #0x20
	0x03E6AA3C B 0x21E2398
	0x03E6AA40 BL 0x1C16DFC
	0x03E6AA44 CBNZ W20, 0x3E6AA14
	0x03E6AA48 MOV X0, X19
	0x03E6AA4C LDP X20, X19, [X31 + 0x10]
	0x03E6AA50 LDP X30, X21, [X31], #0x20
	0x03E6AA54 RET
	0x03E6AA58 ADRP X0, 0x28E000
	0x03E6AA5C LDR X0, [X0 + 0x528]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x57F000
	005 Move W8, [X20+3304]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {22}
	011 Move X0, 0x2BD000
	012 Move X0, [X0+304]
	013 Call 0x1C17CF4
	014 Move X0, 0x2BE000
	015 Move X0, [X0+2064]
	016 Call 0x1C17CF4
	017 Move X0, 0x295000
	018 Move X0, [X0+3288]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X20+3304], W8
	022 Compare X19, 0
	023 JumpIfEqual {44}
	024 Move X8, 0x2BD000
	025 Move X9, 0x295000
	026 Move X10, 0x2BE000
	027 Move X8, [X8+304]
	028 Move X9, [X9+3288]
	029 Move X10, [X10+2064]
	030 Move X0, X19
	031 Move X20, [X8]
	032 Move X1, [X9]
	033 Move X2, [X10]
	034 Move X3, X31
	035 Call String.Replace, X0, X1, X2
	036 Move X1, X0
	037 Move X0, X20
	038 Move X20, [X31+16]
	039 Move X19, [X31+24]
	040 Move X2, X31
	041 Move X30, [X31+32]
	042 Call String.Format, X0, X1
	043 Return X0
	044 Call 0x1C17F20

Method: System.Byte[] ReadBytes(System.IO.Stream stream, System.Int32 length)

Disassembly:
	0x03E6AA60 BL 0x1C16D08
	0x03E6AA64 BL 0x1C16F10
	0x03E6AA68 MOV X19, X0
	0x03E6AA6C ADRP X0, 0x294000
	0x03E6AA70 LDR X0, [X0 + 0x580]
	0x03E6AA74 BL 0x1C16D08
	0x03E6AA78 MOV X1, X0
	0x03E6AA7C MOV X0, X19
	0x03E6AA80 MOV X2, X31
	0x03E6AA84 BL 0x330E100
	0x03E6AA88 ADRP X0, 0x302000
	0x03E6AA8C LDR X0, [X0 + 0x330]
	0x03E6AA90 BL 0x1C16D08
	0x03E6AA94 MOV X1, X0
	0x03E6AA98 MOV X0, X19
	0x03E6AA9C BL 0x1C16DEC
	0x03E6AAA0 STR X30, [X31 - 0x30]!
	0x03E6AAA4 STP X22, X21, [X31 + 0x10]
	0x03E6AAA8 STP X20, X19, [X31 + 0x20]
	0x03E6AAAC ADRP X21, 0x57E000
	0x03E6AAB0 ADRP X22, 0x290000
	0x03E6AAB4 LDRB W8, [X21 + 0xCF6]
	0x03E6AAB8 LDR X22, [X22 + 0x248]
	0x03E6AABC MOV W19, W1
	0x03E6AAC0 MOV X20, X0
	0x03E6AAC4 TBNZ X8, 0x0, 0x3E6AADC
	0x03E6AAC8 ADRP X0, 0x290000
	0x03E6AACC LDR X0, [X0 + 0x248]
	0x03E6AAD0 BL 0x1C16CF4
	0x03E6AAD4 MOVZ W8, 0x1
	0x03E6AAD8 STRB W8, [X21 + 0xCF6]
	0x03E6AADC LDR X0, [X22]
	0x03E6AAE0 LDR W8, [X0 + 0xE0]
	0x03E6AAE4 CBNZ W8, 0x3E6AAEC
	0x03E6AAE8 BL 0x1C16DFC
	0x03E6AAEC MOV X0, X20
	0x03E6AAF0 MOV W1, W19
	0x03E6AAF4 BL 0x3E6A9B0
	0x03E6AAF8 LDP X20, X19, [X31 + 0x20]
	0x03E6AAFC LDP X22, X21, [X31 + 0x10]
	0x03E6AB00 MOV W1, W31
	0x03E6AB04 MOV X2, X31
	0x03E6AB08 LDR X30, [X31], #0x30
	0x03E6AB0C B 0x3317114
	0x03E6AB10 STP X30, X21, [X31 - 0x20]!
	0x03E6AB14 STP X20, X19, [X31 + 0x10]
	0x03E6AB18 ADRP X20, 0x57E000
	0x03E6AB1C ADRP X21, 0x302000
	0x03E6AB20 LDRB W8, [X20 + 0xCF7]
	0x03E6AB24 LDR X21, [X21 + 0x338]
	0x03E6AB28 MOV X19, X0
	0x03E6AB2C TBNZ X8, 0x0, 0x3E6AB44
	0x03E6AB30 ADRP X0, 0x302000
	0x03E6AB34 LDR X0, [X0 + 0x338]
	0x03E6AB38 BL 0x1C16CF4
	0x03E6AB3C MOVZ W8, 0x1
	0x03E6AB40 STRB W8, [X20 + 0xCF7]
	0x03E6AB44 LDR X0, [X21]
	0x03E6AB48 BL 0x1C16F10
	0x03E6AB4C MOVN W1, 0x1
	0x03E6AB50 MOV X20, X0
	0x03E6AB54 BL 0x3E6AB74
	0x03E6AB58 CBZ X20, 0x3E6AB70
	0x03E6AB5C STR X19, [X20 + 0x30]
	0x03E6AB60 MOV X0, X20
	0x03E6AB64 LDP X20, X19, [X31 + 0x10]
	0x03E6AB68 LDP X30, X21, [X31], #0x20
	0x03E6AB6C RET
	0x03E6AB70 BL 0x1C16F20
	0x03E6AB74 STR X30, [X31 - 0x20]!
	0x03E6AB78 STP X20, X19, [X31 + 0x10]
	0x03E6AB7C MOV W20, W1
	0x03E6AB80 MOV X1, X31
	0x03E6AB84 MOV X19, X0
	0x03E6AB88 BL 0x33BDD8C
	0x03E6AB8C MOV X0, X31
	0x03E6AB90 STR W20, [X19 + 0x10]
	0x03E6AB94 BL 0x33E3C68
	0x03E6AB98 CBZ X0, 0x3E6ABB4
	0x03E6AB9C MOV X1, X31
	0x03E6ABA0 BL 0x33E3CC4
	0x03E6ABA4 STR W0, [X19 + 0x20]
	0x03E6ABA8 LDP X20, X19, [X31 + 0x10]
	0x03E6ABAC LDR X30, [X31], #0x20
	0x03E6ABB0 RET
	0x03E6ABB4 BL 0x1C16F20
	0x03E6ABB8 STP X30, X21, [X31 - 0x20]!
	0x03E6ABBC STP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X21, 0x57F000
	010 Move X22, 0x28A000
	011 Move W8, [X21+3305]
	012 Move X22, [X22+1560]
	013 Move W19, W1
	014 Move X20, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {30}
	019 Move X0, 0x28A000
	020 Move X0, [X0+1560]
	021 Call 0x1C17CF4
	022 Move X0, 0x303000
	023 Move X0, [X0+744]
	024 Call 0x1C17CF4
	025 Move X0, 0x291000
	026 Move X0, [X0+584]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X21+3305], W8
	030 Move X0, [X22]
	031 Move W1, W19
	032 Call 0x1C17D6C
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move X21, X0
	035 Compare X20, 0
	036 JumpIfEqual {104}
	037 Move X24, 0x291000
	038 Move X23, 0x303000
	039 Move X24, [X24+584]
	040 Move X23, [X23+744]
	041 Move W22, W31
	042 Move X8, [X20]
	043 Move X0, X20
	044 Move X1, X21
	045 Move W2, W22
	046 Move X9, [X8+856]
	047 Move X4, [X8+864]
	048 Move W3, W19
	049 NotImplemented "Instruction BLR not yet implemented."
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Move TEMP, 0
	052 Not TEMP
	053 Move W25, TEMP
	054 Move X0, [X24]
	055 Move W8, [X0+224]
	056 Compare W8, 0
	057 JumpIfNotEqual {60}
	058 Call 0x1C17DFC
	059 Move X0, [X24]
	060 Move X8, [X0+184]
	061 Add W25, W25, 1
	062 Move W8, [X8+8]
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Move X8, [X20]
	065 Move X0, X20
	066 Move X1, X21
	067 Move W2, W22
	068 Move X9, [X8+856]
	069 Move X4, [X8+864]
	070 Move W3, W19
	071 NotImplemented "Instruction BLR not yet implemented."
	072 NotImplemented "Instruction CMP not yet implemented."
	073 Subtract W19, W19, W0
	074 NotImplemented "Instruction CMP not yet implemented."
	075 Add W22, W0, W22
	076 Move X0, X21
	077 Move X20, [X31+48]
	078 Move X19, [X31+56]
	079 Move X22, [X31+32]
	080 Move X21, [X31+40]
	081 Move X24, [X31+16]
	082 Move X23, [X31+24]
	083 Move X30, [X31+64]
	084 Move X25, [X31+72]
	085 Return X0
	086 Move W8, [X0+224]
	087 Compare W8, 0
	088 JumpIfNotEqual {90}
	089 Call 0x1C17DFC
	090 Move X3, [X23]
	091 Move X0, X21
	092 Move W2, W22
	093 Move X20, [X31+48]
	094 Move X19, [X31+56]
	095 Move X22, [X31+32]
	096 Move X21, [X31+40]
	097 Move X24, [X31+16]
	098 Move X23, [X31+24]
	099 Move W1, W31
	100 Move X30, [X31+64]
	101 Move X25, [X31+72]
	102 Call 0x21E35A8, X0, X1, X2
	103 Return X0
	104 Call 0x1C17F20

Method: System.Byte[] ReadBytes(System.IO.Stream stream, System.Int64 length, System.Int32 bufferLength)

Disassembly:
	0x03E6ABC0 ADRP X20, 0x57E000
	0x03E6ABC4 ADRP X21, 0x292000
	0x03E6ABC8 LDRB W8, [X20 + 0xCF8]
	0x03E6ABCC LDR X21, [X21 + 0x8D8]
	0x03E6ABD0 MOV X19, X0
	0x03E6ABD4 TBNZ X8, 0x0, 0x3E6ABF8
	0x03E6ABD8 ADRP X0, 0x292000
	0x03E6ABDC LDR X0, [X0 + 0x8D8]
	0x03E6ABE0 BL 0x1C16CF4
	0x03E6ABE4 ADRP X0, 0x28A000
	0x03E6ABE8 LDR X0, [X0 + 0xEC8]
	0x03E6ABEC BL 0x1C16CF4
	0x03E6ABF0 MOVZ W8, 0x1
	0x03E6ABF4 STRB W8, [X20 + 0xCF8]
	0x03E6ABF8 LDR X0, [X21]
	0x03E6ABFC MOVZ W1, 0x1
	0x03E6AC00 BL 0x1C16D6C
	0x03E6AC04 CBZ X0, 0x3E6AC54
	0x03E6AC08 LDR W8, [X0 + 0x18]
	0x03E6AC0C MOV X1, X0
	0x03E6AC10 CBZ W8, 0x3E6AC58
	0x03E6AC14 MOVZ W8, 0x2F
	0x03E6AC18 STRH W8, [X1 + 0x20]
	0x03E6AC1C CBZ X19, 0x3E6AC54
	0x03E6AC20 MOV X0, X19
	0x03E6AC24 MOV X2, X31
	0x03E6AC28 BL 0x322BC58
	0x03E6AC2C CBZ X0, 0x3E6AC54
	0x03E6AC30 ADRP X8, 0x28A000
	0x03E6AC34 LDR X8, [X8 + 0xEC8]
	0x03E6AC38 LDR W9, [X0 + 0x10]
	0x03E6AC3C LDP X20, X19, [X31 + 0x10]
	0x03E6AC40 LDR X8, [X8]
	0x03E6AC44 CMP W9, 0x1
	0x03E6AC48 CSEL X0, X8, X0, LT
	0x03E6AC4C LDP X30, X21, [X31], #0x20
	0x03E6AC50 RET
	0x03E6AC54 BL 0x1C16F20
	0x03E6AC58 BL 0x1C16F28
	0x03E6AC5C SUB X31, X31, 0x30
	0x03E6AC60 STP X30, X21, [X31 + 0x10]
	0x03E6AC64 STP X20, X19, [X31 + 0x20]
	0x03E6AC68 ADRP X20, 0x57E000
	0x03E6AC6C ADRP X21, 0x292000
	0x03E6AC70 LDRB W8, [X20 + 0xCF9]
	0x03E6AC74 LDR X21, [X21 + 0x8D8]
	0x03E6AC78 MOV X19, X0
	0x03E6AC7C TBNZ X8, 0x0, 0x3E6ACA0
	0x03E6AC80 ADRP X0, 0x292000
	0x03E6AC84 LDR X0, [X0 + 0x8D8]
	0x03E6AC88 BL 0x1C16CF4
	0x03E6AC8C ADRP X0, 0x28B000
	0x03E6AC90 LDR X0, [X0 + 0x170]
	0x03E6AC94 BL 0x1C16CF4
	0x03E6AC98 MOVZ W8, 0x1
	0x03E6AC9C STRB W8, [X20 + 0xCF9]
	0x03E6ACA0 LDR X0, [X21]
	0x03E6ACA4 MOVZ W1, 0x2
	0x03E6ACA8 BL 0x1C16D6C
	0x03E6ACAC CBZ X0, 0x3E6AD40
	0x03E6ACB0 LDR W8, [X0 + 0x18]
	0x03E6ACB4 MOV X1, X0
	0x03E6ACB8 CBZ W8, 0x3E6AD44
	0x03E6ACBC MOVZ W9, 0x2F
	0x03E6ACC0 CMP W8, 0x1
	0x03E6ACC4 STRH W9, [X1 + 0x20]
	0x03E6ACC8 B.EQ 0x3E6AD44
	0x03E6ACCC MOVZ W8, 0x5C
	0x03E6ACD0 STRH W8, [X1 + 0x22]
	0x03E6ACD4 CBZ X19, 0x3E6AD40
	0x03E6ACD8 MOV X0, X19
	0x03E6ACDC MOV X2, X31
	0x03E6ACE0 BL 0x322BC58
	0x03E6ACE4 CBZ X0, 0x3E6AD40
	0x03E6ACE8 LDR W8, [X0 + 0x10]
	0x03E6ACEC CMP W8, 0x0
	0x03E6ACF0 B.GT 0x3E6AD30
	0x03E6ACF4 MOV X0, X19
	0x03E6ACF8 MOV W1, W31
	0x03E6ACFC MOV X2, X31
	0x03E6AD00 BL 0x3222A1C
	0x03E6AD04 ADRP X8, 0x28B000
	0x03E6AD08 LDR X8, [X8 + 0x170]
	0x03E6AD0C STRH W0, [X31 + 0xC]
	0x03E6AD10 LDR X8, [X8]
	0x03E6AD14 LDR W9, [X8 + 0xE0]
	0x03E6AD18 CBNZ W9, 0x3E6AD24
	0x03E6AD1C MOV X0, X8
	0x03E6AD20 BL 0x1C16DFC
	0x03E6AD24 ADD X0, X31, 0xC
	0x03E6AD28 MOV X1, X31
	0x03E6AD2C BL 0x330A76C
	0x03E6AD30 LDP X20, X19, [X31 + 0x20]
	0x03E6AD34 LDP X30, X21, [X31 + 0x10]
	0x03E6AD38 ADD X31, X31, 0x30
	0x03E6AD3C RET
	0x03E6AD40 BL 0x1C16F20
	0x03E6AD44 BL 0x1C16F28
	0x03E6AD48 STR X30, [X31 - 0x30]!
	0x03E6AD4C STP X22, X21, [X31 + 0x10]
	0x03E6AD50 STP X20, X19, [X31 + 0x20]
	0x03E6AD54 ADRP X22, 0x57E000
	0x03E6AD58 ADRP X21, 0x291000
	0x03E6AD5C LDRB W8, [X22 + 0xCFA]
	0x03E6AD60 LDR X21, [X21 + 0x7C0]
	0x03E6AD64 MOV X19, X1
	0x03E6AD68 MOV X20, X0
	0x03E6AD6C TBNZ X8, 0x0, 0x3E6AD84
	0x03E6AD70 ADRP X0, 0x291000
	0x03E6AD74 LDR X0, [X0 + 0x7C0]
	0x03E6AD78 BL 0x1C16CF4
	0x03E6AD7C MOVZ W8, 0x1
	0x03E6AD80 STRB W8, [X22 + 0xCFA]
	0x03E6AD84 STR X31, [X19]
	0x03E6AD88 LDR X0, [X21]
	0x03E6AD8C BL 0x1C16F10
	0x03E6AD90 MOV X21, X0
	0x03E6AD94 MOV X1, X20
	0x03E6AD98 MOV X2, X31
	0x03E6AD9C BL 0x339C314
	0x03E6ADA0 STR X21, [X19]
	0x03E6ADA4 MOVZ W0, 0x1
	0x03E6ADA8 LDP X20, X19, [X31 + 0x20]
	0x03E6ADAC LDP X22, X21, [X31 + 0x10]
	0x03E6ADB0 LDR X30, [X31], #0x30
	0x03E6ADB4 RET
	0x03E6ADB8 CMP W1, 0x1
	0x03E6ADBC MOV X19, X0
	0x03E6ADC0 B.NE 0x3E6AE20
	0x03E6ADC4 MOV X0, X19
	0x03E6ADC8 BL 0x3EB1AD0
	0x03E6ADCC MOV X19, X0
	0x03E6ADD0 ADRP X0, 0x28F000
	0x03E6ADD4 LDR X0, [X0 + 0xCC0]
	0x03E6ADD8 BL 0x1C16D08
	0x03E6ADDC LDR X8, [X19]
	0x03E6ADE0 LDR X1, [X8]
	0x03E6ADE4 BL 0x1C17270
	0x03E6ADE8 TBZ X0, 0x0, 0x3E6ADF8
	0x03E6ADEC BL 0x3EB1AE0
	0x03E6ADF0 MOV W0, W31
	0x03E6ADF4 B 0x3E6ADA8
	0x03E6ADF8 MOVZ W0, 0x8
	0x03E6ADFC BL 0x3EB1AF0
	0x03E6AE00 LDR X8, [X19]
	0x03E6AE04 STR X8, [X0]
	0x03E6AE08 ADRP X1, 0x4A000
	0x03E6AE0C ADD X1, X1, 0xE58
	0x03E6AE10 MOV X2, X31
	0x03E6AE14 BL 0x3EB1B00
	0x03E6AE18 MOV X19, X0
	0x03E6AE1C BL 0x3EB1AE0
	0x03E6AE20 MOV X0, X19
	0x03E6AE24 BL 0x1D2C690
	0x03E6AE28 BL 0x1990590
	0x03E6AE2C SUB X31, X31, 0x50
	0x03E6AE30 STP X30, X25, [X31 + 0x10]
	0x03E6AE34 STP X24, X23, [X31 + 0x20]
	0x03E6AE38 STP X22, X21, [X31 + 0x30]
	0x03E6AE3C STP X20, X19, [X31 + 0x40]
	0x03E6AE40 ADRP X23, 0x57E000
	0x03E6AE44 ADRP X22, 0x290000
	0x03E6AE48 LDRB W8, [X23 + 0xCFB]
	0x03E6AE4C LDR X22, [X22 + 0x248]
	0x03E6AE50 MOV X21, X2
	0x03E6AE54 MOV X19, X1
	0x03E6AE58 MOV X20, X0
	0x03E6AE5C TBNZ X8, 0x0, 0x3E6AEF8
	0x03E6AE60 ADRP X0, 0x290000
	0x03E6AE64 LDR X0, [X0 + 0x248]
	0x03E6AE68 BL 0x1C16CF4
	0x03E6AE6C ADRP X0, 0x289000
	0x03E6AE70 LDR X0, [X0 + 0x758]
	0x03E6AE74 BL 0x1C16CF4
	0x03E6AE78 ADRP X0, 0x289000
	0x03E6AE7C LDR X0, [X0 + 0x9D0]
	0x03E6AE80 BL 0x1C16CF4
	0x03E6AE84 ADRP X0, 0x28B000
	0x03E6AE88 LDR X0, [X0 + 0xA28]
	0x03E6AE8C BL 0x1C16CF4

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X24, 0x57F000
	012 Move X19, 0x292000
	013 Move X23, 0x28A000
	014 Move W8, [X24+3306]
	015 Move X19, [X19+1368]
	016 Move X23, [X23+1560]
	017 Move W20, W2
	018 Move X21, X1
	019 Move X22, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {38}
	024 Move X0, 0x28A000
	025 Move X0, [X0+1560]
	026 Call 0x1C17CF4
	027 Move X0, 0x291000
	028 Move X0, [X0+584]
	029 Call 0x1C17CF4
	030 Move X0, 0x28A000
	031 Move X0, [X0+3584]
	032 Call 0x1C17CF4
	033 Move X0, 0x292000
	034 Move X0, [X0+1368]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X24+3306], W8
	038 Move X0, [X19]
	039 Move X25, 0x28A000
	040 Move X25, [X25+3584]
	041 Call 0x1C17F10
	042 Move X1, X31
	043 Move X19, X0
	044 Call MemoryStream..ctor, X0
	045 Move X0, [X23]
	046 Move W1, W20
	047 Call 0x1C17D6C
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Compare X22, 0
	050 JumpIfEqual {143}
	051 Move X26, 0x291000
	052 Move X26, [X26+584]
	053 Move X23, X0
	054 Move TEMP, 0
	055 Not TEMP
	056 Move W27, TEMP
	057 Move X8, [X22]
	058 NotImplemented "Instruction CMP not yet implemented."
	059 NotImplemented "Instruction CSEL not yet implemented."
	060 Move X9, [X8+856]
	061 Move X4, [X8+864]
	062 Move X0, X22
	063 Move X1, X23
	064 Move W2, W31
	065 Move W3, W20
	066 NotImplemented "Instruction BLR not yet implemented."
	067 Move W24, W0
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Move X0, [X26]
	070 Move W8, [X0+224]
	071 Compare W8, 0
	072 JumpIfNotEqual {75}
	073 Call 0x1C17DFC
	074 Move X0, [X26]
	075 Move X8, [X0+184]
	076 Add W27, W27, 1
	077 Move W8, [X8+8]
	078 NotImplemented "Instruction CMP not yet implemented."
	079 Compare X19, 0
	080 JumpIfEqual {144}
	081 Move X8, [X19]
	082 Move X9, [X8+904]
	083 Move X4, [X8+912]
	084 Move X0, X19
	085 Move X1, X23
	086 Move W2, W31
	087 Move W3, W24
	088 NotImplemented "Instruction BLR not yet implemented."
	089 Subtract X21, X21, W24
	090 NotImplemented "Instruction CMP not yet implemented."
	091 Compare X19, 0
	092 JumpIfEqual {142}
	093 Move X8, [X19]
	094 Move X1, [X8+640]
	095 Move X9, [X8+632]
	096 Move X0, X19
	097 NotImplemented "Instruction BLR not yet implemented."
	098 Move X8, [X19]
	099 Move X1, [X8+1024]
	100 Move X9, [X8+1016]
	101 Move X0, X19
	102 NotImplemented "Instruction BLR not yet implemented."
	103 Move X21, X0
	104 Move X20, X31
	105 Move X8, [X19]
	106 Move X1, [X25]
	107 NotImplemented "Instruction LDRH not yet implemented."
	108 Compare X9, 0
	109 JumpIfEqual {116}
	110 Move X10, [X8+176]
	111 Add X10, X10, 8
	112 NotImplemented "Instruction LDUR not yet implemented."
	113 NotImplemented "Instruction CMP not yet implemented."
	114 Subtract X9, X9, 1
	115 Add X10, X10, 16
	116 Move X0, X19
	117 Move W2, W31
	118 Call 0x1C5D788
	119 NotImplemented "Instruction LDRSW not yet implemented."
	120 Add X8, X8, X9
	121 Add X0, X8, 312
	122 Move X8, [X0]
	123 Move X1, [X0+8]
	124 Move X0, X19
	125 NotImplemented "Instruction BLR not yet implemented."
	126 Compare X20, 0
	127 JumpIfNotEqual {140}
	128 Move X0, X21
	129 Move X20, [X31+64]
	130 Move X19, [X31+72]
	131 Move X22, [X31+48]
	132 Move X21, [X31+56]
	133 Move X24, [X31+32]
	134 Move X23, [X31+40]
	135 Move X26, [X31+16]
	136 Move X25, [X31+24]
	137 Move X30, [X31+80]
	138 Move X27, [X31+88]
	139 Return X0
	140 Move X0, X20
	141 Call 0x1C17F18
	142 Call 0x1C17F20
	143 Call 0x1C17F20
	144 Call 0x1C17F20
	145 Move X21, X0
	146 NotImplemented "Instruction CMP not yet implemented."
	147 Move X0, X21
	148 Call 0x3EB2AD0
	149 Move X20, [X0]
	150 Call 0x3EB2AE0
	151 Move X21, X31
	152 Compare X19, 0
	153 JumpIfNotEqual {105}
	154 Move X20, X31
	155 Move X21, X0
	156 Compare X19, 0
	157 JumpIfEqual {179}
	158 Move X8, [X19]
	159 Move X1, [X25]
	160 NotImplemented "Instruction LDRH not yet implemented."
	161 Compare X9, 0
	162 JumpIfEqual {169}
	163 Move X10, [X8+176]
	164 Add X10, X10, 8
	165 NotImplemented "Instruction LDUR not yet implemented."
	166 NotImplemented "Instruction CMP not yet implemented."
	167 Subtract X9, X9, 1
	168 Add X10, X10, 16
	169 Move X0, X19
	170 Move W2, W31
	171 Call 0x1C5D788
	172 NotImplemented "Instruction LDRSW not yet implemented."
	173 Add X8, X8, X9
	174 Add X0, X8, 312
	175 Move X8, [X0]
	176 Move X1, [X0+8]
	177 Move X0, X19
	178 NotImplemented "Instruction BLR not yet implemented."
	179 Compare X20, 0
	180 JumpIfNotEqual {183}
	181 Move X0, X21
	182 Call 0x1D2D690
	183 Move X0, X20
	184 Call 0x1C17F18
	185 Call 0x1991590

Method: System.Void ReadBytesAsync(System.IO.Stream stream, System.Int32 length, System.Action`1<System.Byte[]> completed, System.Action`1<System.Exception> error)

Disassembly:
	0x03E6AE90 ADRP X0, 0x302000
	0x03E6AE94 LDR X0, [X0 + 0x340]
	0x03E6AE98 BL 0x1C16CF4
	0x03E6AE9C ADRP X0, 0x302000
	0x03E6AEA0 LDR X0, [X0 + 0x348]
	0x03E6AEA4 BL 0x1C16CF4
	0x03E6AEA8 ADRP X0, 0x2C6000
	0x03E6AEAC LDR X0, [X0 + 0xDE8]
	0x03E6AEB0 BL 0x1C16CF4
	0x03E6AEB4 ADRP X0, 0x292000
	0x03E6AEB8 LDR X0, [X0 + 0x3A8]
	0x03E6AEBC BL 0x1C16CF4
	0x03E6AEC0 ADRP X0, 0x302000
	0x03E6AEC4 LDR X0, [X0 + 0x350]
	0x03E6AEC8 BL 0x1C16CF4
	0x03E6AECC ADRP X0, 0x302000
	0x03E6AED0 LDR X0, [X0 + 0x358]
	0x03E6AED4 BL 0x1C16CF4
	0x03E6AED8 ADRP X0, 0x291000
	0x03E6AEDC LDR X0, [X0 + 0xFE8]
	0x03E6AEE0 BL 0x1C16CF4
	0x03E6AEE4 ADRP X0, 0x302000
	0x03E6AEE8 LDR X0, [X0 + 0x360]
	0x03E6AEEC BL 0x1C16CF4
	0x03E6AEF0 MOVZ W8, 0x1
	0x03E6AEF4 STRB W8, [X23 + 0xCFB]
	0x03E6AEF8 STR X31, [X19]
	0x03E6AEFC STR X31, [X21]
	0x03E6AF00 LDR X0, [X22]
	0x03E6AF04 ADRP X24, 0x28B000
	0x03E6AF08 LDR W8, [X0 + 0xE0]
	0x03E6AF0C LDR X24, [X24 + 0xA28]
	0x03E6AF10 CBNZ W8, 0x3E6AF18
	0x03E6AF14 BL 0x1C16DFC
	0x03E6AF18 MOV X0, X20
	0x03E6AF1C BL 0x3E6B1A8
	0x03E6AF20 LDR X8, [X24]
	0x03E6AF24 MOV X20, X0
	0x03E6AF28 LDR W9, [X8 + 0xE0]
	0x03E6AF2C CBNZ W9, 0x3E6AF38
	0x03E6AF30 MOV X0, X8
	0x03E6AF34 BL 0x1C16DFC
	0x03E6AF38 MOV X0, X20
	0x03E6AF3C MOV X1, X31
	0x03E6AF40 MOV X2, X31
	0x03E6AF44 BL 0x361DC84
	0x03E6AF48 TBZ X0, 0x0, 0x3E6AF58
	0x03E6AF4C ADRP X8, 0x302000
	0x03E6AF50 LDR X8, [X8 + 0x340]
	0x03E6AF54 B 0x3E6AFF4
	0x03E6AF58 CBZ X20, 0x3E6B194
	0x03E6AF5C MOV X0, X20
	0x03E6AF60 MOV X1, X31
	0x03E6AF64 BL 0x3619A24
	0x03E6AF68 TBZ X0, 0x0, 0x3E6AFEC
	0x03E6AF6C MOV X0, X20
	0x03E6AF70 MOV X1, X31
	0x03E6AF74 BL 0x361CEF0
	0x03E6AF78 ADRP X25, 0x292000
	0x03E6AF7C LDR X25, [X25 + 0x3A8]
	0x03E6AF80 MOV X2, X31
	0x03E6AF84 MOV X22, X0
	0x03E6AF88 LDR X1, [X25]
	0x03E6AF8C BL 0x321BA08
	0x03E6AF90 TBNZ X0, 0x0, 0x3E6AFB0
	0x03E6AF94 ADRP X8, 0x2C6000
	0x03E6AF98 LDR X8, [X8 + 0xDE8]
	0x03E6AF9C MOV X0, X22
	0x03E6AFA0 MOV X2, X31
	0x03E6AFA4 LDR X1, [X8]
	0x03E6AFA8 BL 0x321BA08
	0x03E6AFAC TBZ X0, 0x0, 0x3E6B024
	0x03E6AFB0 MOV X0, X20
	0x03E6AFB4 MOV X1, X31
	0x03E6AFB8 BL 0x361CC2C
	0x03E6AFBC CBZ W0, 0x3E6B018
	0x03E6AFC0 MOV W23, W0
	0x03E6AFC4 MOV X0, X20
	0x03E6AFC8 MOV X1, X31
	0x03E6AFCC BL 0x361CDF0
	0x03E6AFD0 CBZ X0, 0x3E6B194
	0x03E6AFD4 LDR W8, [X0 + 0x10]
	0x03E6AFD8 CMP W8, 0x1
	0x03E6AFDC B.LT 0x3E6B030
	0x03E6AFE0 ADRP X8, 0x302000
	0x03E6AFE4 LDR X8, [X8 + 0x360]
	0x03E6AFE8 B 0x3E6AFF4
	0x03E6AFEC ADRP X8, 0x302000
	0x03E6AFF0 LDR X8, [X8 + 0x350]
	0x03E6AFF4 MOV W0, W31
	0x03E6AFF8 LDR X8, [X8]
	0x03E6AFFC STR X8, [X21]
	0x03E6B000 LDP X20, X19, [X31 + 0x40]
	0x03E6B004 LDP X22, X21, [X31 + 0x30]
	0x03E6B008 LDP X24, X23, [X31 + 0x20]
	0x03E6B00C LDP X30, X25, [X31 + 0x10]
	0x03E6B010 ADD X31, X31, 0x50
	0x03E6B014 RET
	0x03E6B018 ADRP X8, 0x301000
	0x03E6B01C LDR X8, [X8 + 0x348]
	0x03E6B020 B 0x3E6AFF8
	0x03E6B024 ADRP X8, 0x301000
	0x03E6B028 LDR X8, [X8 + 0x358]
	0x03E6B02C B 0x3E6AFF4
	0x03E6B030 ADDS W31, W23, 0x1
	0x03E6B034 B.NE 0x3E6B188
	0x03E6B038 ADRP X8, 0x288000
	0x03E6B03C LDR X8, [X8 + 0x9D0]
	0x03E6B040 MOVZ W1, 0x4
	0x03E6B044 LDR X0, [X8]
	0x03E6B048 BL 0x1C16D6C
	0x03E6B04C CBZ X0, 0x3E6B194
	0x03E6B050 MOV X21, X0
	0x03E6B054 CBZ X22, 0x3E6B06C

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X19, 0x57F000
	009 Move X24, 0x303000
	010 Move W8, [X19+3307]
	011 Move X24, [X24+752]
	012 Move X21, X3
	013 Move X22, X2
	014 Move W20, W1
	015 Move X23, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {34}
	020 Move X0, 0x2B2000
	021 Move X0, [X0+1824]
	022 Call 0x1C17CF4
	023 Move X0, 0x28A000
	024 Move X0, [X0+1560]
	025 Call 0x1C17CF4
	026 Move X0, 0x303000
	027 Move X0, [X0+760]
	028 Call 0x1C17CF4
	029 Move X0, 0x303000
	030 Move X0, [X0+752]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X19+3307], W8
	034 Move X0, [X24]
	035 Call 0x1C17F10
	036 Move X1, X31
	037 Move X19, X0
	038 Call Object..ctor, X0
	039 Compare X19, 0
	040 JumpIfEqual {86}
	041 Move X8, 0x28A000
	042 Move X8, [X8+1560]
	043 Move [X19+16], X23
	044 Move [X19+44], W20
	045 Move [X19+56], X22
	046 Move [X19+64], X21
	047 Move X0, [X8]
	048 Move X21, 0x2B2000
	049 Move X22, 0x303000
	050 Move X21, [X21+1824]
	051 Move X22, [X22+760]
	052 Move W1, W20
	053 Call 0x1C17D6C
	054 Move [X19+32], X0
	055 Move [X19+40], W31
	056 Move [X19+24], W31
	057 Move [X19+48], X31
	058 Move X0, [X21]
	059 Call 0x1C17F10
	060 Move X2, [X22]
	061 Move X1, X19
	062 Move X3, X31
	063 Move X20, X0
	064 Call AsyncCallback..ctor, X0, X1, X2
	065 Move X0, [X19+16]
	066 Move [X19+48], X20
	067 Compare X0, 0
	068 JumpIfEqual {87}
	069 Move X8, [X0]
	070 Move X1, [X19+32]
	071 Move W2, [X19+40]
	072 Move W3, [X19+44]
	073 Move X9, [X8+696]
	074 Move X6, [X8+704]
	075 Move X4, X20
	076 Move X5, X31
	077 NotImplemented "Instruction BLR not yet implemented."
	078 Move X20, [X31+48]
	079 Move X19, [X31+56]
	080 Move X22, [X31+32]
	081 Move X21, [X31+40]
	082 Move X24, [X31+16]
	083 Move X23, [X31+24]
	084 Move X30, [X31+64]
	085 Return 
	086 Call 0x1C17F20
	087 Call 0x1C17F20
	088 Move X20, X0
	089 NotImplemented "Instruction CMP not yet implemented."
	090 Move X0, X20
	091 Call 0x3EB2AD0
	092 Move X20, X0
	093 Move X0, 0x28A000
	094 Move X0, [X0+2000]
	095 Call 0x1C17D08
	096 Move X8, [X20]
	097 Move X1, [X8]
	098 Call 0x1C18270
	099 Move TEMP, X0
	100 And TEMP, TEMP, 1
	101 Compare TEMP, 1
	102 JumpIfNotEqual {120}
	103 Move X20, [X20]
	104 Call 0x3EB2AE0
	105 Move X8, [X19+64]
	106 Compare X8, 0
	107 JumpIfEqual {78}
	108 Move X3, [X8+24]
	109 Move X0, [X8+64]
	110 Move X2, [X8+40]
	111 Move X1, X20
	112 Move X20, [X31+48]
	113 Move X19, [X31+56]
	114 Move X22, [X31+32]
	115 Move X21, [X31+40]
	116 Move X24, [X31+16]
	117 Move X23, [X31+24]
	118 Move X30, [X31+64]
	119 CallNoReturn X3
	120 Move W0, 8
	121 Call 0x3EB2AF0
	122 Move X8, [X20]
	123 Move [X0], X8
	124 Move X1, 0x4A000
	125 Add X1, X1, 3672
	126 Move X2, X31
	127 Call 0x3EB2B00
	128 Move X20, X0
	129 Call 0x3EB2AE0
	130 Move X0, X20
	131 Call 0x1D2D690
	132 Call 0x1991590

Method: System.Void ReadBytesAsync(System.IO.Stream stream, System.Int64 length, System.Int32 bufferLength, System.Action`1<System.Byte[]> completed, System.Action`1<System.Exception> error)

Disassembly:
	0x03E6B060 LDR X1, [X8 + 0x40]
	0x03E6B064 BL 0x1C16E00
	0x03E6B068 CBZ X0, 0x3E6B19C
	0x03E6B06C LDR W8, [X21 + 0x18]
	0x03E6B070 CBZ W8, 0x3E6B198
	0x03E6B074 MOV X0, X20
	0x03E6B078 MOV X1, X31
	0x03E6B07C STR X22, [X21 + 0x20]
	0x03E6B080 BL 0x361C394
	0x03E6B084 MOV X23, X0
	0x03E6B088 CBZ X0, 0x3E6B0A0
	0x03E6B08C LDR X8, [X21]
	0x03E6B090 MOV X0, X23
	0x03E6B094 LDR X1, [X8 + 0x40]
	0x03E6B098 BL 0x1C16E00
	0x03E6B09C CBZ X0, 0x3E6B19C
	0x03E6B0A0 LDR W8, [X21 + 0x18]
	0x03E6B0A4 CMP W8, 0x1
	0x03E6B0A8 B.LS 0x3E6B198
	0x03E6B0AC STR X23, [X21 + 0x28]
	0x03E6B0B0 LDR X1, [X25]
	0x03E6B0B4 MOV X0, X22
	0x03E6B0B8 MOV X2, X31
	0x03E6B0BC BL 0x321BA08
	0x03E6B0C0 ADRP X8, 0x290000
	0x03E6B0C4 ADRP X10, 0x288000
	0x03E6B0C8 LDR X8, [X8 + 0xFE8]
	0x03E6B0CC LDR X10, [X10 + 0x758]
	0x03E6B0D0 ANDS W31, W0, 0x1
	0x03E6B0D4 MOVZ W9, 0x1BB
	0x03E6B0D8 LDR X22, [X8]
	0x03E6B0DC LDR X0, [X10]
	0x03E6B0E0 MOVZ W8, 0x50
	0x03E6B0E4 CSEL W8, W8, W9, NE
	0x03E6B0E8 ADD X1, X31, 0xC
	0x03E6B0EC STR W8, [X31 + 0xC]
	0x03E6B0F0 BL 0x1C16E04
	0x03E6B0F4 MOV X23, X0
	0x03E6B0F8 CBZ X0, 0x3E6B110
	0x03E6B0FC LDR X8, [X21]
	0x03E6B100 MOV X0, X23
	0x03E6B104 LDR X1, [X8 + 0x40]
	0x03E6B108 BL 0x1C16E00
	0x03E6B10C CBZ X0, 0x3E6B19C
	0x03E6B110 LDR W8, [X21 + 0x18]
	0x03E6B114 CMP W8, 0x2
	0x03E6B118 B.LS 0x3E6B198
	0x03E6B11C MOV X0, X20
	0x03E6B120 MOV X1, X31
	0x03E6B124 STR X23, [X21 + 0x30]
	0x03E6B128 BL 0x361C058
	0x03E6B12C MOV X20, X0
	0x03E6B130 CBZ X0, 0x3E6B148
	0x03E6B134 LDR X8, [X21]
	0x03E6B138 MOV X0, X20
	0x03E6B13C LDR X1, [X8 + 0x40]
	0x03E6B140 BL 0x1C16E00
	0x03E6B144 CBZ X0, 0x3E6B19C
	0x03E6B148 LDR W8, [X21 + 0x18]
	0x03E6B14C CMP W8, 0x3
	0x03E6B150 B.LS 0x3E6B198
	0x03E6B154 MOV X0, X22
	0x03E6B158 MOV X1, X21
	0x03E6B15C MOV X2, X31
	0x03E6B160 STR X20, [X21 + 0x38]
	0x03E6B164 BL 0x3227C5C
	0x03E6B168 LDR X8, [X24]
	0x03E6B16C MOV X21, X0
	0x03E6B170 MOV X0, X8
	0x03E6B174 BL 0x1C16F10
	0x03E6B178 MOV X1, X21
	0x03E6B17C MOV X2, X31
	0x03E6B180 MOV X20, X0
	0x03E6B184 BL 0x36196A8
	0x03E6B188 MOVZ W0, 0x1
	0x03E6B18C STR X20, [X19]
	0x03E6B190 B 0x3E6B000
	0x03E6B194 BL 0x1C16F20
	0x03E6B198 BL 0x1C16F28
	0x03E6B19C BL 0x1C16F44
	0x03E6B1A0 MOV X1, X31
	0x03E6B1A4 BL 0x1C16DEC
	0x03E6B1A8 STR X30, [X31 - 0x20]!
	0x03E6B1AC STP X20, X19, [X31 + 0x10]
	0x03E6B1B0 ADRP X20, 0x57D000
	0x03E6B1B4 LDRB W8, [X20 + 0xD06]
	0x03E6B1B8 MOV X19, X0
	0x03E6B1BC TBNZ X8, 0x0, 0x3E6B1E0
	0x03E6B1C0 ADRP X0, 0x28F000
	0x03E6B1C4 LDR X0, [X0 + 0x248]
	0x03E6B1C8 BL 0x1C16CF4
	0x03E6B1CC ADRP X0, 0x28A000
	0x03E6B1D0 LDR X0, [X0 + 0xA28]
	0x03E6B1D4 BL 0x1C16CF4
	0x03E6B1D8 MOVZ W8, 0x1
	0x03E6B1DC STRB W8, [X20 + 0xD06]
	0x03E6B1E0 STR X31, [X31 + 0x8]
	0x03E6B1E4 CBZ X19, 0x3E6B254
	0x03E6B1E8 LDR W8, [X19 + 0x10]
	0x03E6B1EC CBZ W8, 0x3E6B254
	0x03E6B1F0 ADRP X8, 0x28F000
	0x03E6B1F4 LDR X8, [X8 + 0x248]
	0x03E6B1F8 LDR X0, [X8]
	0x03E6B1FC LDR W8, [X0 + 0xE0]
	0x03E6B200 CBNZ W8, 0x3E6B208
	0x03E6B204 BL 0x1C16DFC
	0x03E6B208 MOV X0, X19
	0x03E6B20C BL 0x3E69928
	0x03E6B210 ADRP X9, 0x28A000
	0x03E6B214 LDR X9, [X9 + 0xA28]
	0x03E6B218 MOV W8, W0
	0x03E6B21C ANDS W31, W8, 0x1
	0x03E6B220 MOVZ W8, 0x1
	0x03E6B224 LDR X0, [X9]
	0x03E6B228 CINC W20, W8, EQ
	0x03E6B22C LDR W9, [X0 + 0xE0]
	0x03E6B230 CBNZ W9, 0x3E6B238
	0x03E6B234 BL 0x1C16DFC
	0x03E6B238 ADD X2, X31, 0x8
	0x03E6B23C MOV X0, X19
	0x03E6B240 MOV W1, W20
	0x03E6B244 MOV X3, X31
	0x03E6B248 BL 0x361E23C
	0x03E6B24C LDR X0, [X31 + 0x8]
	0x03E6B250 B 0x3E6B258

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X19, 0x57E000
	010 Move X25, 0x302000
	011 Move W8, [X19+3308]
	012 Move X25, [X25+768]
	013 Move X21, X4
	014 Move X22, X3
	015 Move W23, W2
	016 Move X20, X1
	017 Move X24, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {39}
	022 Move X0, 0x302000
	023 Move X0, [X0+776]
	024 Call 0x1C17CF4
	025 Move X0, 0x289000
	026 Move X0, [X0+1560]
	027 Call 0x1C17CF4
	028 Move X0, 0x291000
	029 Move X0, [X0+1368]
	030 Call 0x1C17CF4
	031 Move X0, 0x302000
	032 Move X0, [X0+784]
	033 Call 0x1C17CF4
	034 Move X0, 0x302000
	035 Move X0, [X0+768]
	036 Call 0x1C17CF4
	037 Move W8, 1
	038 Move [X19+3308], W8
	039 Move X0, [X25]
	040 Call 0x1C17F10
	041 Move X1, X31
	042 Move X19, X0
	043 Call Object..ctor, X0
	044 Compare X19, 0
	045 JumpIfEqual {133}
	046 Move X8, 0x291000
	047 Move X8, [X8+1368]
	048 Move [X19+16], W23
	049 Move [X19+24], X24
	050 Move [X19+56], X22
	051 Move [X19+72], X21
	052 Move X0, [X8]
	053 Move X22, 0x289000
	054 Move X23, 0x302000
	055 Move X24, 0x302000
	056 Move X22, [X22+1560]
	057 Move X23, [X23+776]
	058 Move X24, [X24+784]
	059 Call 0x1C17F10
	060 Move X1, X31
	061 Move X21, X0
	062 Call MemoryStream..ctor, X0
	063 Move [X19+64], X21
	064 Move W1, [X19+16]
	065 Move X0, [X22]
	066 Call 0x1C17D6C
	067 Move [X19+32], X0
	068 Move [X19+40], W31
	069 Move [X19+48], X31
	070 Move X0, [X23]
	071 Call 0x1C17F10
	072 Move X2, [X24]
	073 Move X1, X19
	074 Move X3, X31
	075 Move X21, X0
	076 Call Action`1<Int64>..ctor, X0, X1, X2
	077 Move [X19+48], X21
	078 Compare X21, 0
	079 JumpIfEqual {94}
	080 Move X0, [X21+64]
	081 Move X8, [X21+24]
	082 Move X2, [X21+40]
	083 Move X1, X20
	084 NotImplemented "Instruction BLR not yet implemented."
	085 Move X20, [X31+48]
	086 Move X19, [X31+56]
	087 Move X22, [X31+32]
	088 Move X21, [X31+40]
	089 Move X24, [X31+16]
	090 Move X23, [X31+24]
	091 Move X30, [X31+64]
	092 Move X25, [X31+72]
	093 Return 
	094 Call 0x1C17F20
	095 NotImplemented "Instruction CMP not yet implemented."
	096 Move X20, X0
	097 Move X0, X20
	098 Call 0x3EB2AD0
	099 Move X20, X0
	100 Move X0, 0x289000
	101 Move X0, [X0+2000]
	102 Call 0x1C17D08
	103 Move X8, [X20]
	104 Move X1, [X8]
	105 Call 0x1C18270
	106 Move TEMP, X0
	107 And TEMP, TEMP, 1
	108 Compare TEMP, 1
	109 JumpIfNotEqual {134}
	110 Move X20, [X20]
	111 Call 0x3EB2AE0
	112 Move X0, [X19+64]
	113 Compare X0, 0
	114 JumpIfEqual {133}
	115 Move X1, X31
	116 Call Stream.Dispose, X0
	117 Move X8, [X19+72]
	118 Compare X8, 0
	119 JumpIfEqual {85}
	120 Move X3, [X8+24]
	121 Move X0, [X8+64]
	122 Move X2, [X8+40]
	123 Move X1, X20
	124 Move X20, [X31+48]
	125 Move X19, [X31+56]
	126 Move X22, [X31+32]
	127 Move X21, [X31+40]
	128 Move X24, [X31+16]
	129 Move X23, [X31+24]
	130 Move X30, [X31+64]
	131 Move X25, [X31+72]
	132 CallNoReturn X3
	133 Call 0x1C17F20
	134 Move W0, 8
	135 Call 0x3EB2AF0
	136 Move X8, [X20]
	137 Move [X0], X8
	138 Move X1, 0x4A000
	139 Add X1, X1, 3672
	140 Move X2, X31
	141 Call 0x3EB2B00
	142 Move X20, X0
	143 Call 0x3EB2AE0
	144 Move X0, X20
	145 Call 0x1D2D690
	146 Call 0x1991590

Method: T[] Reverse(T[] array)

Disassembly:
	0x021E3398 BL 0x1C16CF4
	0x021E339C LDR X8, [X19 + 0x38]
	0x021E33A0 CBZ X8, 0x21E3460
	0x021E33A4 CBZ X20, 0x21E346C
	0x021E33A8 ADRP X8, 0x1F10000
	0x021E33AC LDR W1, [X20 + 0x18]
	0x021E33B0 LDR X8, [X8 + 0xAC8]
	0x021E33B4 LDR X0, [X8]
	0x021E33B8 BL 0x1C16D6C
	0x021E33BC LDR W8, [X20 + 0x18]
	0x021E33C0 MOV X21, X0
	0x021E33C4 CMP W8, 0x1
	0x021E33C8 B.LT 0x21E3444
	0x021E33CC ADRP X24, 0x1F10000
	0x021E33D0 LDR X24, [X24 + 0x830]
	0x021E33D4 MOV X22, X31
	0x021E33D8 ADD X23, X21, 0x20
	0x021E33DC LDR X8, [X19 + 0x38]
	0x021E33E0 MOV X0, X20
	0x021E33E4 MOV W1, W22
	0x021E33E8 LDR X2, [X8 + 0x10]
	0x021E33EC BL 0x2FDC41C
	0x021E33F0 STR W0, [X31 + 0xC]
	0x021E33F4 LDR X8, [X19 + 0x38]
	0x021E33F8 ADD X1, X31, 0xC
	0x021E33FC LDR X0, [X8 + 0x18]
	0x021E3400 BL 0x1C16E04
	0x021E3404 CBZ X0, 0x21E341C
	0x021E3408 LDR X8, [X0]
	0x021E340C LDP X9, X1, [X8 + 0x168]
	0x021E3410 BLR X9
	0x021E3414 CBNZ X21, 0x21E3424
	0x021E3418 B 0x21E348C
	0x021E341C LDR X0, [X24]
	0x021E3420 CBZ X21, 0x21E348C
	0x021E3424 LDR W8, [X21 + 0x18]
	0x021E3428 CMP X22, X8
	0x021E342C B.CS 0x21E3490
	0x021E3430 STR X0, [X23, X22, LSL #3]
	0x021E3434 LDRSW X8, [X20 + 0x18]
	0x021E3438 ADD X22, X22, 0x1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X1+56]
	005 Move X20, X1
	006 Move X19, X0
	007 Compare X8, 0
	008 JumpIfNotEqual {11}
	009 Move X0, X20
	010 Call 0x1C5D6E0
	011 Compare X19, 0
	012 JumpIfEqual {45}
	013 Move X8, [X20+56]
	014 Move W20, [X19+24]
	015 Move X0, [X8+8]
	016 Move W8, [X0+309]
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {22}
	021 Call 0x1C5D684
	022 Move W1, W20
	023 Call 0x1C17D6C
	024 Subtract W8, W20, 1
	025 Move W9, W31
	026 Move W10, W8
	027 Move W11, [X19+24]
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Compare X0, 0
	030 JumpIfEqual {45}
	031 Move W11, [X0+24]
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Add X11, X19, W10
	034 Move W11, [X11+32]
	035 Add X12, X0, W9
	036 Add W9, W9, 1
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Subtract W10, W10, 1
	039 Move [X12+32], W11
	040 Move X20, [X31+16]
	041 Move X19, [X31+24]
	042 Move X30, [X31+32]
	043 Return X0
	044 Call 0x1C17F28
	045 Call 0x1C17F20

Method: System.Collections.Generic.IEnumerable`1<System.String> SplitHeaderValue(System.String value, System.Char[] separators)

Disassembly:
	0x03E6B25C LDR X30, [X31], #0x20
	0x03E6B260 RET
	0x03E6B264 STR X30, [X31 - 0x20]!
	0x03E6B268 STP X20, X19, [X31 + 0x10]
	0x03E6B26C MOV X19, X1
	0x03E6B270 MOV X20, X0
	0x03E6B274 STR X31, [X1]
	0x03E6B278 MOV X0, X31
	0x03E6B27C BL 0x3241948
	0x03E6B280 CBZ X0, 0x3E6B2AC
	0x03E6B284 LDR X8, [X0]
	0x03E6B288 LDR X9, [X8 + 0x378]
	0x03E6B28C LDR X2, [X8 + 0x380]
	0x03E6B290 MOV X1, X20
	0x03E6B294 BLR X9
	0x03E6B298 STR X0, [X19]
	0x03E6B29C MOVZ W0, 0x1
	0x03E6B2A0 LDP X20, X19, [X31 + 0x10]
	0x03E6B2A4 LDR X30, [X31], #0x20
	0x03E6B2A8 RET
	0x03E6B2AC BL 0x1C16F20
	0x03E6B2B0 B 0x3E6B2B8
	0x03E6B2B4 B 0x3E6B2B8
	0x03E6B2B8 MOV X19, X0
	0x03E6B2BC CMP W1, 0x1
	0x03E6B2C0 B.NE 0x3E6B320
	0x03E6B2C4 MOV X0, X19
	0x03E6B2C8 BL 0x3EB1AD0
	0x03E6B2CC MOV X19, X0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x57E000
	007 Move X22, 0x302000
	008 Move W8, [X21+3309]
	009 Move X22, [X22+792]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x302000
	017 Move X0, [X0+792]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+3309], W8
	021 Move X0, [X22]
	022 Call 0x1C17F10
	023 Move TEMP, 1
	024 Not TEMP
	025 Move W1, TEMP
	026 Move X21, X0
	027 Call <SplitHeaderValue>d__60..ctor, X0, X1
	028 Compare X21, 0
	029 JumpIfEqual {39}
	030 Move [X21+48], X20
	031 Move [X21+64], X19
	032 Move X0, X21
	033 Move X20, [X31+32]
	034 Move X19, [X31+40]
	035 Move X22, [X31+16]
	036 Move X21, [X31+24]
	037 Move X30, [X31+48]
	038 Return X0
	039 Call 0x1C17F20

Method: System.Byte[] ToByteArray(System.IO.Stream stream)

Disassembly:
	0x03E69418 CMP W20, W19, UXTH
	0x03E6941C LDP X20, X19, [X31 + 0x10]
	0x03E69420 CSET W0, EQ
	0x03E69424 LDR X30, [X31], #0x20
	0x03E69428 RET
	0x03E6942C BL 0x1C16F20
	0x03E69430 STR X30, [X31 - 0x30]!
	0x03E69434 STP X22, X21, [X31 + 0x10]
	0x03E69438 STP X20, X19, [X31 + 0x20]
	0x03E6943C ADRP X22, 0x57F000
	0x03E69440 ADRP X21, 0x303000
	0x03E69444 LDRB W8, [X22 + 0xCE2]
	0x03E69448 LDR X21, [X21 + 0x2C0]
	0x03E6944C MOV X20, X1
	0x03E69450 MOV X19, X0
	0x03E69454 TBNZ X8, 0x0, 0x3E69478
	0x03E69458 ADRP X0, 0x291000
	0x03E6945C LDR X0, [X0 + 0x248]
	0x03E69460 BL 0x1C16CF4
	0x03E69464 ADRP X0, 0x303000
	0x03E69468 LDR X0, [X0 + 0x2C0]
	0x03E6946C BL 0x1C16CF4
	0x03E69470 MOVZ W8, 0x1
	0x03E69474 STRB W8, [X22 + 0xCE2]
	0x03E69478 LDR X0, [X21]
	0x03E6947C ADRP X22, 0x291000
	0x03E69480 LDR W8, [X0 + 0xE0]
	0x03E69484 LDR X22, [X22 + 0x248]
	0x03E69488 CBNZ W8, 0x3E69494
	0x03E6948C BL 0x1C16DFC
	0x03E69490 LDR X0, [X21]
	0x03E69494 LDR X8, [X0 + 0xB8]
	0x03E69498 MOV X0, X20
	0x03E6949C MOV X2, X31
	0x03E694A0 LDR X1, [X8]
	0x03E694A4 BL 0x339C580
	0x03E694A8 LDR X8, [X22]
	0x03E694AC MOV W20, W0
	0x03E694B0 LDR W9, [X8 + 0xE0]
	0x03E694B4 CBNZ W9, 0x3E694C0
	0x03E694B8 MOV X0, X8
	0x03E694BC BL 0x1C16DFC
	0x03E694C0 MOV X0, X19
	0x03E694C4 TBZ X20, 0x0, 0x3E694D8
	0x03E694C8 LDP X20, X19, [X31 + 0x20]
	0x03E694CC LDP X22, X21, [X31 + 0x10]
	0x03E694D0 LDR X30, [X31], #0x30
	0x03E694D4 B 0x3E67E2C
	0x03E694D8 LDP X20, X19, [X31 + 0x20]
	0x03E694DC LDP X22, X21, [X31 + 0x10]
	0x03E694E0 LDR X30, [X31], #0x30
	0x03E694E4 B 0x3E67CB8
	0x03E694E8 SUB W8, W0, 0x1
	0x03E694EC MOVZ W9, 0xFFFF
	0x03E694F0 CMP W8, W9
	0x03E694F4 CSET W0, CC
	0x03E694F8 RET
	0x03E694FC AND W8, W0, 0xFFFE
	0x03E69500 CMP W8, 0x3EC
	0x03E69504 B.NE 0x3E69510
	0x03E69508 MOVZ W0, 0x1
	0x03E6950C RET
	0x03E69510 AND W8, W0, 0xFFFF
	0x03E69514 CMP W8, 0x3EE
	0x03E69518 CSET W9, EQ
	0x03E6951C CMP W8, 0x3F7
	0x03E69520 CSET W8, EQ
	0x03E69524 ORR W0, W9, W8, 0x0
	0x03E69528 RET
	0x03E6952C AND W8, W0, 0xFFFE
	0x03E69530 CMP W8, 0x3EC
	0x03E69534 B.NE 0x3E69540
	0x03E69538 MOVZ W0, 0x1
	0x03E6953C RET
	0x03E69540 AND W8, W0, 0xFFFF
	0x03E69544 CMP W8, 0x3EE
	0x03E69548 CSET W9, EQ
	0x03E6954C CMP W8, 0x3F7
	0x03E69550 CSET W8, EQ
	0x03E69554 ORR W0, W9, W8, 0x0
	0x03E69558 RET
	0x03E6955C STR X30, [X31 - 0x30]!
	0x03E69560 STP X22, X21, [X31 + 0x10]
	0x03E69564 STP X20, X19, [X31 + 0x20]
	0x03E69568 ADRP X22, 0x57F000
	0x03E6956C ADRP X20, 0x303000
	0x03E69570 ADRP X21, 0x28A000
	0x03E69574 LDRB W8, [X22 + 0xCE3]
	0x03E69578 LDR X20, [X20 + 0x2C8]
	0x03E6957C LDR X21, [X21 + 0x6C0]
	0x03E69580 MOV W19, W0
	0x03E69584 TBNZ X8, 0x0, 0x3E695C0
	0x03E69588 ADRP X0, 0x28B000
	0x03E6958C LDR X0, [X0 + 0x9D8]
	0x03E69590 BL 0x1C16CF4
	0x03E69594 ADRP X0, 0x28A000
	0x03E69598 LDR X0, [X0 + 0xDF8]
	0x03E6959C BL 0x1C16CF4
	0x03E695A0 ADRP X0, 0x303000
	0x03E695A4 LDR X0, [X0 + 0x2C8]
	0x03E695A8 BL 0x1C16CF4
	0x03E695AC ADRP X0, 0x28A000
	0x03E695B0 LDR X0, [X0 + 0x6C0]
	0x03E695B4 BL 0x1C16CF4
	0x03E695B8 MOVZ W8, 0x1
	0x03E695BC STRB W8, [X22 + 0xCE3]
	0x03E695C0 LDR X0, [X21]
	0x03E695C4 ADRP X22, 0x28B000
	0x03E695C8 ADRP X21, 0x28A000
	0x03E695CC LDR X20, [X20]
	0x03E695D0 LDR W8, [X0 + 0xE0]
	0x03E695D4 LDR X22, [X22 + 0x9D8]
	0x03E695D8 LDR X21, [X21 + 0xDF8]
	0x03E695DC CBNZ W8, 0x3E695E4
	0x03E695E0 BL 0x1C16DFC
	0x03E695E4 MOV X0, X20
	0x03E695E8 MOV X1, X31
	0x03E695EC BL 0x338C698
	0x03E695F0 MOV X20, X0
	0x03E695F4 LDR X0, [X22]
	0x03E695F8 ADD X1, X31, 0xC
	0x03E695FC STRB W19, [X31 + 0xC]
	0x03E69600 BL 0x1C16E04
	0x03E69604 LDR X8, [X21]
	0x03E69608 MOV X19, X0
	0x03E6960C LDR W9, [X8 + 0xE0]
	0x03E69610 CBNZ W9, 0x3E6961C
	0x03E69614 MOV X0, X8
	0x03E69618 BL 0x1C16DFC
	0x03E6961C MOV X0, X20
	0x03E69620 MOV X1, X19
	0x03E69624 MOV X2, X31
	0x03E69628 BL 0x33B153C

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, 0x580000
	007 Move W8, [X19+3310]
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {24}
	013 Move X0, 0x292000
	014 Move X0, [X0+584]
	015 Call 0x1C17CF4
	016 Move X0, 0x28B000
	017 Move X0, [X0+3584]
	018 Call 0x1C17CF4
	019 Move X0, 0x293000
	020 Move X0, [X0+1368]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X19+3310], W8
	024 Compare X20, 0
	025 JumpIfEqual {96}
	026 Move X8, [X20]
	027 Move X19, 0x293000
	028 Move X21, 0x292000
	029 Move X22, 0x28B000
	030 Move X9, [X8+520]
	031 Move X2, [X8+528]
	032 Move X19, [X19+1368]
	033 Move X21, [X21+584]
	034 Move X22, [X22+3584]
	035 Move X0, X20
	036 Move X1, X31
	037 NotImplemented "Instruction BLR not yet implemented."
	038 Move X0, [X19]
	039 Call 0x1C17F10
	040 Move X1, X31
	041 Move X19, X0
	042 Call MemoryStream..ctor, X0
	043 Move X0, [X21]
	044 Move W8, [X0+224]
	045 Compare W8, 0
	046 JumpIfNotEqual {48}
	047 Call 0x1C17DFC
	048 Move W2, 1024
	049 Move X0, X20
	050 Move X1, X19
	051 Call Ext.CopyTo, X0, X1, X2
	052 Compare X19, 0
	053 JumpIfEqual {99}
	054 Move X8, [X19]
	055 Move X1, [X8+640]
	056 Move X9, [X8+632]
	057 Move X0, X19
	058 NotImplemented "Instruction BLR not yet implemented."
	059 Move X8, [X19]
	060 Move X1, [X8+1024]
	061 Move X9, [X8+1016]
	062 Move X0, X19
	063 NotImplemented "Instruction BLR not yet implemented."
	064 Move X21, X0
	065 Move X20, X31
	066 Move X8, [X19]
	067 Move X1, [X22]
	068 NotImplemented "Instruction LDRH not yet implemented."
	069 Compare X9, 0
	070 JumpIfEqual {77}
	071 Move X10, [X8+176]
	072 Add X10, X10, 8
	073 NotImplemented "Instruction LDUR not yet implemented."
	074 NotImplemented "Instruction CMP not yet implemented."
	075 Subtract X9, X9, 1
	076 Add X10, X10, 16
	077 Move X0, X19
	078 Move W2, W31
	079 Call 0x1C5D788
	080 NotImplemented "Instruction LDRSW not yet implemented."
	081 Add X8, X8, X9
	082 Add X0, X8, 312
	083 Move X8, [X0]
	084 Move X1, [X0+8]
	085 Move X0, X19
	086 NotImplemented "Instruction BLR not yet implemented."
	087 Compare X20, 0
	088 JumpIfNotEqual {97}
	089 Move X0, X21
	090 Move X20, [X31+32]
	091 Move X19, [X31+40]
	092 Move X22, [X31+16]
	093 Move X21, [X31+24]
	094 Move X30, [X31+48]
	095 Return X0
	096 Call 0x1C17F20
	097 Move X0, X20
	098 Call 0x1C17F18
	099 Call 0x1C17F20
	100 Move X21, X0
	101 NotImplemented "Instruction CMP not yet implemented."
	102 Move X0, X21
	103 Call 0x3EB2AD0
	104 Move X20, [X0]
	105 Call 0x3EB2AE0
	106 Move X21, X31
	107 Compare X19, 0
	108 JumpIfNotEqual {66}
	109 Move X20, X31
	110 Move X21, X0
	111 Compare X19, 0
	112 JumpIfEqual {134}
	113 Move X8, [X19]
	114 Move X1, [X22]
	115 NotImplemented "Instruction LDRH not yet implemented."
	116 Compare X9, 0
	117 JumpIfEqual {124}
	118 Move X10, [X8+176]
	119 Add X10, X10, 8
	120 NotImplemented "Instruction LDUR not yet implemented."
	121 NotImplemented "Instruction CMP not yet implemented."
	122 Subtract X9, X9, 1
	123 Add X10, X10, 16
	124 Move X0, X19
	125 Move W2, W31
	126 Call 0x1C5D788
	127 NotImplemented "Instruction LDRSW not yet implemented."
	128 Add X8, X8, X9
	129 Add X0, X8, 312
	130 Move X8, [X0]
	131 Move X1, [X0+8]
	132 Move X0, X19
	133 NotImplemented "Instruction BLR not yet implemented."
	134 Compare X20, 0
	135 JumpIfNotEqual {138}
	136 Move X0, X21
	137 Call 0x1D2D690
	138 Move X0, X20
	139 Call 0x1C17F18
	140 Call 0x1991590

Method: System.Byte[] ToByteArray(System.UInt16 value, WebSocketSharp.ByteOrder order)

Disassembly:
	0x03E69228 MOVZ W2, 0x4
	0x03E6922C MOV X3, X31
	0x03E69230 LDP X30, X23, [X31], #0x30
	0x03E69234 B 0x3226FBC
	0x03E69238 BL 0x1C16F20
	0x03E6923C SUB X31, X31, 0x40
	0x03E69240 STP X30, X21, [X31 + 0x20]
	0x03E69244 STP X20, X19, [X31 + 0x30]
	0x03E69248 ADRP X21, 0x57F000
	0x03E6924C LDRB W8, [X21 + 0xCF2]
	0x03E69250 MOV X19, X1
	0x03E69254 MOV W20, W0
	0x03E69258 TBNZ X8, 0x0, 0x3E692B8
	0x03E6925C ADRP X0, 0x303000
	0x03E69260 LDR X0, [X0 + 0x2A0]
	0x03E69264 BL 0x1C16CF4
	0x03E69268 ADRP X0, 0x303000
	0x03E6926C LDR X0, [X0 + 0x2A8]
	0x03E69270 BL 0x1C16CF4
	0x03E69274 ADRP X0, 0x291000
	0x03E69278 LDR X0, [X0 + 0x248]
	0x03E6927C BL 0x1C16CF4
	0x03E69280 ADRP X0, 0x28C000
	0x03E69284 LDR X0, [X0 + 0x278]
	0x03E69288 BL 0x1C16CF4
	0x03E6928C ADRP X0, 0x303000
	0x03E69290 LDR X0, [X0 + 0x2B0]
	0x03E69294 BL 0x1C16CF4
	0x03E69298 ADRP X0, 0x303000
	0x03E6929C LDR X0, [X0 + 0x2B8]
	0x03E692A0 BL 0x1C16CF4
	0x03E692A4 ADRP X0, 0x2B2000
	0x03E692A8 LDR X0, [X0 + 0x8B0]
	0x03E692AC BL 0x1C16CF4
	0x03E692B0 MOVZ W8, 0x1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x580000
	007 Move X21, 0x292000
	008 Move W8, [X22+3311]
	009 Move X21, [X21+584]
	010 Move W19, W1
	011 Move W20, W0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x292000
	017 Move X0, [X0+584]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+3311], W8
	021 Move W0, W20
	022 Move X1, X31
	023 Call BitConverter.GetBytes, X0
	024 Move X8, [X21]
	025 Move X20, X0
	026 Move W9, [X8+224]
	027 Compare W9, 0
	028 JumpIfEqual {41}
	029 Compare W19, 0
	030 JumpIfEqual {34}
	031 Move X0, X20
	032 Move X1, X31
	033 Call Array.Reverse, X0
	034 Move X0, X20
	035 Move X20, [X31+32]
	036 Move X19, [X31+40]
	037 Move X22, [X31+16]
	038 Move X21, [X31+24]
	039 Move X30, [X31+48]
	040 Return X0
	041 Move X0, X8
	042 Call 0x1C17DFC
	043 Compare W19, 0
	044 JumpIfNotEqual {31}

Method: System.Byte[] ToByteArray(System.UInt64 value, WebSocketSharp.ByteOrder order)

Disassembly:
	0x03E6B320 MOV X0, X19
	0x03E6B324 BL 0x1D2C690
	0x03E6B328 BL 0x1990590
	0x03E6B32C STR X30, [X31 - 0x20]!
	0x03E6B330 STP X20, X19, [X31 + 0x10]
	0x03E6B334 MOV X19, X1
	0x03E6B338 MOV X20, X0
	0x03E6B33C STR X31, [X1]
	0x03E6B340 MOV X0, X31
	0x03E6B344 BL 0x3241948
	0x03E6B348 CBZ X0, 0x3E6B374
	0x03E6B34C LDR X8, [X0]
	0x03E6B350 LDR X9, [X8 + 0x268]
	0x03E6B354 LDR X2, [X8 + 0x270]
	0x03E6B358 MOV X1, X20
	0x03E6B35C BLR X9
	0x03E6B360 STR X0, [X19]
	0x03E6B364 MOVZ W0, 0x1
	0x03E6B368 LDP X20, X19, [X31 + 0x10]
	0x03E6B36C LDR X30, [X31], #0x20
	0x03E6B370 RET
	0x03E6B374 BL 0x1C16F20
	0x03E6B378 B 0x3E6B380
	0x03E6B37C B 0x3E6B380
	0x03E6B380 MOV X19, X0
	0x03E6B384 CMP W1, 0x1
	0x03E6B388 B.NE 0x3E6B3E8
	0x03E6B38C MOV X0, X19
	0x03E6B390 BL 0x3EB1AD0
	0x03E6B394 MOV X19, X0
	0x03E6B398 ADRP X0, 0x28E000
	0x03E6B39C LDR X0, [X0 + 0xCC0]
	0x03E6B3A0 BL 0x1C16D08
	0x03E6B3A4 LDR X8, [X19]
	0x03E6B3A8 LDR X1, [X8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x57E000
	007 Move X21, 0x290000
	008 Move W8, [X22+3312]
	009 Move X21, [X21+584]
	010 Move W19, W1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x290000
	017 Move X0, [X0+584]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+3312], W8
	021 Move X0, X20
	022 Move X1, X31
	023 Call BitConverter.GetBytes, X0
	024 Move X8, [X21]
	025 Move X20, X0
	026 Move W9, [X8+224]
	027 Compare W9, 0
	028 JumpIfEqual {41}
	029 Compare W19, 0
	030 JumpIfEqual {34}
	031 Move X0, X20
	032 Move X1, X31
	033 Call Array.Reverse, X0
	034 Move X0, X20
	035 Move X20, [X31+32]
	036 Move X19, [X31+40]
	037 Move X22, [X31+16]
	038 Move X21, [X31+24]
	039 Move X30, [X31+48]
	040 Return X0
	041 Move X0, X8
	042 Call 0x1C17DFC
	043 Compare W19, 0
	044 JumpIfNotEqual {31}

Method: WebSocketSharp.CompressionMethod ToCompressionMethod(System.String value)

Disassembly:
	0x03E6B3AC BL 0x1C17270
	0x03E6B3B0 TBZ X0, 0x0, 0x3E6B3C0
	0x03E6B3B4 BL 0x3EB1AE0
	0x03E6B3B8 MOV W0, W31
	0x03E6B3BC B 0x3E6B368
	0x03E6B3C0 MOVZ W0, 0x8
	0x03E6B3C4 BL 0x3EB1AF0
	0x03E6B3C8 LDR X8, [X19]
	0x03E6B3CC STR X8, [X0]
	0x03E6B3D0 ADRP X1, 0x49000
	0x03E6B3D4 ADD X1, X1, 0xE58
	0x03E6B3D8 MOV X2, X31
	0x03E6B3DC BL 0x3EB1B00
	0x03E6B3E0 MOV X19, X0
	0x03E6B3E4 BL 0x3EB1AE0
	0x03E6B3E8 MOV X0, X19
	0x03E6B3EC BL 0x1D2C690
	0x03E6B3F0 BL 0x1990590
	0x03E6B3F4 STP X30, X19, [X31 - 0x10]!
	0x03E6B3F8 STR X31, [X1]
	0x03E6B3FC CBZ X0, 0x3E6B41C
	0x03E6B400 MOV X19, X1
	0x03E6B404 MOV X1, X31
	0x03E6B408 BL 0x32EE970
	0x03E6B40C STR X0, [X19]
	0x03E6B410 MOVZ W0, 0x1
	0x03E6B414 LDP X30, X19, [X31], #0x10
	0x03E6B418 RET
	0x03E6B41C BL 0x1C16F20
	0x03E6B420 B 0x3E6B424
	0x03E6B424 MOV X19, X0
	0x03E6B428 CMP W1, 0x1
	0x03E6B42C B.NE 0x3E6B48C
	0x03E6B430 MOV X0, X19
	0x03E6B434 BL 0x3EB1AD0
	0x03E6B438 MOV X19, X0
	0x03E6B43C ADRP X0, 0x28E000
	0x03E6B440 LDR X0, [X0 + 0xCC0]
	0x03E6B444 BL 0x1C16D08
	0x03E6B448 LDR X8, [X19]
	0x03E6B44C LDR X1, [X8]
	0x03E6B450 BL 0x1C17270
	0x03E6B454 TBZ X0, 0x0, 0x3E6B464
	0x03E6B458 BL 0x3EB1AE0
	0x03E6B45C MOV W0, W31
	0x03E6B460 B 0x3E6B414
	0x03E6B464 MOVZ W0, 0x8
	0x03E6B468 BL 0x3EB1AF0
	0x03E6B46C LDR X8, [X19]
	0x03E6B470 STR X8, [X0]
	0x03E6B474 ADRP X1, 0x49000
	0x03E6B478 ADD X1, X1, 0xE58
	0x03E6B47C MOV X2, X31
	0x03E6B480 BL 0x3EB1B00
	0x03E6B484 MOV X19, X0
	0x03E6B488 BL 0x3EB1AE0
	0x03E6B48C MOV X0, X19
	0x03E6B490 BL 0x1D2C690
	0x03E6B494 BL 0x1990590
	0x03E6B498 STR X30, [X31 - 0x30]!
	0x03E6B49C STP X22, X21, [X31 + 0x10]
	0x03E6B4A0 STP X20, X19, [X31 + 0x20]
	0x03E6B4A4 ADRP X22, 0x57D000
	0x03E6B4A8 ADRP X21, 0x28F000
	0x03E6B4AC LDRB W8, [X22 + 0xCFD]
	0x03E6B4B0 LDR X21, [X21 + 0x248]
	0x03E6B4B4 MOV X20, X1
	0x03E6B4B8 MOV X19, X0
	0x03E6B4BC TBNZ X8, 0x0, 0x3E6B4EC
	0x03E6B4C0 ADRP X0, 0x28F000
	0x03E6B4C4 LDR X0, [X0 + 0x248]
	0x03E6B4C8 BL 0x1C16CF4
	0x03E6B4CC ADRP X0, 0x2CF000
	0x03E6B4D0 LDR X0, [X0 + 0xA08]
	0x03E6B4D4 BL 0x1C16CF4
	0x03E6B4D8 ADRP X0, 0x2CF000
	0x03E6B4DC LDR X0, [X0 + 0x158]
	0x03E6B4E0 BL 0x1C16CF4
	0x03E6B4E4 MOVZ W8, 0x1
	0x03E6B4E8 STRB W8, [X22 + 0xCFD]
	0x03E6B4EC LDR X0, [X21]
	0x03E6B4F0 ADRP X22, 0x2CF000
	0x03E6B4F4 LDR W8, [X0 + 0xE0]
	0x03E6B4F8 LDR X22, [X22 + 0xA08]
	0x03E6B4FC CBNZ W8, 0x3E6B504
	0x03E6B500 BL 0x1C16DFC
	0x03E6B504 LDR X1, [X22]
	0x03E6B508 MOVZ W3, 0x5
	0x03E6B50C MOV X0, X19
	0x03E6B510 MOV X2, X20
	0x03E6B514 BL 0x3E68688
	0x03E6B518 TBZ X0, 0x0, 0x3E6B554
	0x03E6B51C LDR X0, [X21]
	0x03E6B520 ADRP X20, 0x2CF000
	0x03E6B524 LDR W8, [X0 + 0xE0]
	0x03E6B528 LDR X20, [X20 + 0x158]
	0x03E6B52C CBNZ W8, 0x3E6B534
	0x03E6B530 BL 0x1C16DFC
	0x03E6B534 LDR X1, [X20]
	0x03E6B538 LDR X2, [X22]
	0x03E6B53C MOV X0, X19
	0x03E6B540 LDP X20, X19, [X31 + 0x20]
	0x03E6B544 LDP X22, X21, [X31 + 0x10]
	0x03E6B548 MOVZ W3, 0x5
	0x03E6B54C LDR X30, [X31], #0x30
	0x03E6B550 B 0x3E68688
	0x03E6B554 LDP X20, X19, [X31 + 0x20]
	0x03E6B558 LDP X22, X21, [X31 + 0x10]
	0x03E6B55C MOV W0, W31
	0x03E6B560 LDR X30, [X31], #0x30
	0x03E6B564 RET
	0x03E6B568 STR X30, [X31 - 0x30]!
	0x03E6B56C STP X22, X21, [X31 + 0x10]
	0x03E6B570 STP X20, X19, [X31 + 0x20]
	0x03E6B574 ADRP X21, 0x57D000
	0x03E6B578 ADRP X22, 0x301000
	0x03E6B57C LDRB W8, [X21 + 0xCFE]
	0x03E6B580 LDR X22, [X22 + 0x368]
	0x03E6B584 MOV X19, X1
	0x03E6B588 MOV X20, X0
	0x03E6B58C TBNZ X8, 0x0, 0x3E6B5A4
	0x03E6B590 ADRP X0, 0x301000
	0x03E6B594 LDR X0, [X0 + 0x368]
	0x03E6B598 BL 0x1C16CF4
	0x03E6B59C MOVZ W8, 0x1
	0x03E6B5A0 STRB W8, [X21 + 0xCFE]
	0x03E6B5A4 LDR X0, [X22]
	0x03E6B5A8 LDR W8, [X0 + 0xE0]
	0x03E6B5AC CBNZ W8, 0x3E6B5B4
	0x03E6B5B0 BL 0x1C16DFC
	0x03E6B5B4 MOV X0, X20
	0x03E6B5B8 MOV X1, X19
	0x03E6B5BC LDP X20, X19, [X31 + 0x20]
	0x03E6B5C0 LDP X22, X21, [X31 + 0x10]
	0x03E6B5C4 MOV X2, X31
	0x03E6B5C8 LDR X30, [X31], #0x30
	0x03E6B5CC B 0x3E97B08
	0x03E6B5D0 STR X30, [X31 - 0x30]!
	0x03E6B5D4 STP X22, X21, [X31 + 0x10]
	0x03E6B5D8 STP X20, X19, [X31 + 0x20]
	0x03E6B5DC ADRP X21, 0x57D000
	0x03E6B5E0 ADRP X22, 0x301000
	0x03E6B5E4 LDRB W8, [X21 + 0xCFF]
	0x03E6B5E8 LDR X22, [X22 + 0x368]
	0x03E6B5EC MOV X19, X1
	0x03E6B5F0 MOV X20, X0
	0x03E6B5F4 TBNZ X8, 0x0, 0x3E6B60C
	0x03E6B5F8 ADRP X0, 0x301000
	0x03E6B5FC LDR X0, [X0 + 0x368]
	0x03E6B600 BL 0x1C16CF4
	0x03E6B604 MOVZ W8, 0x1
	0x03E6B608 STRB W8, [X21 + 0xCFF]
	0x03E6B60C LDR X0, [X22]
	0x03E6B610 LDR W8, [X0 + 0xE0]
	0x03E6B614 CBNZ W8, 0x3E6B61C
	0x03E6B618 BL 0x1C16DFC
	0x03E6B61C MOV X0, X20
	0x03E6B620 MOV X1, X19
	0x03E6B624 LDP X20, X19, [X31 + 0x20]
	0x03E6B628 LDP X22, X21, [X31 + 0x10]
	0x03E6B62C MOV X2, X31
	0x03E6B630 LDR X30, [X31], #0x30
	0x03E6B634 B 0x3E983A0
	0x03E6B638 STR X30, [X31 - 0x40]!
	0x03E6B63C STP X24, X23, [X31 + 0x10]
	0x03E6B640 STP X22, X21, [X31 + 0x20]
	0x03E6B644 STP X20, X19, [X31 + 0x30]
	0x03E6B648 ADRP X23, 0x57D000
	0x03E6B64C ADRP X19, 0x290000
	0x03E6B650 ADRP X24, 0x28F000
	0x03E6B654 LDRB W8, [X23 + 0xD00]
	0x03E6B658 LDR X19, [X19 + 0x558]
	0x03E6B65C LDR X24, [X24 + 0x248]
	0x03E6B660 MOV W20, W2
	0x03E6B664 MOV X22, X1
	0x03E6B668 MOV X21, X0
	0x03E6B66C TBNZ X8, 0x0, 0x3E6B69C
	0x03E6B670 ADRP X0, 0x28F000
	0x03E6B674 LDR X0, [X0 + 0x248]
	0x03E6B678 BL 0x1C16CF4
	0x03E6B67C ADRP X0, 0x288000
	0x03E6B680 LDR X0, [X0 + 0xE00]
	0x03E6B684 BL 0x1C16CF4
	0x03E6B688 ADRP X0, 0x290000
	0x03E6B68C LDR X0, [X0 + 0x558]
	0x03E6B690 BL 0x1C16CF4
	0x03E6B694 MOVZ W8, 0x1
	0x03E6B698 STRB W8, [X23 + 0xD00]
	0x03E6B69C LDR X0, [X19]
	0x03E6B6A0 ADRP X23, 0x288000
	0x03E6B6A4 LDR X23, [X23 + 0xE00]
	0x03E6B6A8 BL 0x1C16F10
	0x03E6B6AC MOV X1, X22
	0x03E6B6B0 MOV X2, X31
	0x03E6B6B4 MOV X19, X0
	0x03E6B6B8 BL 0x32E2528
	0x03E6B6BC LDR X0, [X24]
	0x03E6B6C0 LDR W8, [X0 + 0xE0]
	0x03E6B6C4 CBNZ W8, 0x3E6B6CC
	0x03E6B6C8 BL 0x1C16DFC
	0x03E6B6CC MOV X0, X19
	0x03E6B6D0 MOV X1, X21
	0x03E6B6D4 MOV W2, W20
	0x03E6B6D8 BL 0x3E675F4
	0x03E6B6DC MOV X20, X31
	0x03E6B6E0 CBZ X19, 0x3E6B73C
	0x03E6B6E4 LDR X8, [X19]
	0x03E6B6E8 LDR X1, [X23]
	0x03E6B6EC LDRH W9, [X8 + 0x12E]
	0x03E6B6F0 CBZ X9, 0x3E6B714
	0x03E6B6F4 LDR X10, [X8 + 0xB0]
	0x03E6B6F8 ADD X10, X10, 0x8
	0x03E6B6FC LDUR X11, [X10 - 0x8]
	0x03E6B700 CMP X11, X1
	0x03E6B704 B.EQ 0x3E6B724
	0x03E6B708 SUBS X9, X9, 0x1
	0x03E6B70C ADD X10, X10, 0x10
	0x03E6B710 B.NE 0x3E6B6FC
	0x03E6B714 MOV X0, X19
	0x03E6B718 MOV W2, W31
	0x03E6B71C BL 0x1C5C788
	0x03E6B720 B 0x3E6B730
	0x03E6B724 LDRSW X9, [X10]
	0x03E6B728 ADD X8, X8, X9, 0x4, LSL
	0x03E6B72C ADD X0, X8, 0x138
	0x03E6B730 LDP X8, X1, [X0]
	0x03E6B734 MOV X0, X19
	0x03E6B738 BLR X8
	0x03E6B73C CBNZ X20, 0x3E6B754
	0x03E6B740 LDP X20, X19, [X31 + 0x30]
	0x03E6B744 LDP X22, X21, [X31 + 0x20]
	0x03E6B748 LDP X24, X23, [X31 + 0x10]
	0x03E6B74C LDR X30, [X31], #0x40
	0x03E6B750 RET
	0x03E6B754 MOV X0, X20
	0x03E6B758 BL 0x1C16F18
	0x03E6B75C CMP W1, 0x1
	0x03E6B760 MOV X21, X0
	0x03E6B764 B.NE 0x3E6B77C
	0x03E6B768 MOV X0, X21
	0x03E6B76C BL 0x3EB1AD0
	0x03E6B770 LDR X20, [X0]
	0x03E6B774 BL 0x3EB1AE0
	0x03E6B778 B 0x3E6B6E0
	0x03E6B77C MOV X20, X31
	0x03E6B780 B 0x3E6B788

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X22, 0x57E000
	012 Move X19, 0x302000
	013 Move X21, 0x289000
	014 Move W8, [X22+3313]
	015 Move X19, [X19+800]
	016 Move X21, [X21+1728]
	017 Move X20, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {48}
	022 Move X0, 0x302000
	023 Move X0, [X0+800]
	024 Call 0x1C17CF4
	025 Move X0, 0x302000
	026 Move X0, [X0+672]
	027 Call 0x1C17CF4
	028 Move X0, 0x289000
	029 Move X0, [X0+3576]
	030 Call 0x1C17CF4
	031 Move X0, 0x290000
	032 Move X0, [X0+584]
	033 Call 0x1C17CF4
	034 Move X0, 0x289000
	035 Move X0, [X0+3584]
	036 Call 0x1C17CF4
	037 Move X0, 0x289000
	038 Move X0, [X0+3608]
	039 Call 0x1C17CF4
	040 Move X0, 0x289000
	041 Move X0, [X0+2760]
	042 Call 0x1C17CF4
	043 Move X0, 0x289000
	044 Move X0, [X0+1728]
	045 Call 0x1C17CF4
	046 Move W8, 1
	047 Move [X22+3313], W8
	048 Move X0, [X21]
	049 Move X21, 0x289000
	050 Move X19, [X19]
	051 Move W8, [X0+224]
	052 Move X21, [X21+3576]
	053 Compare W8, 0
	054 JumpIfNotEqual {56}
	055 Call 0x1C17DFC
	056 Move X0, X19
	057 Move X1, X31
	058 Call Type.GetTypeFromHandle, X0
	059 Move X8, [X21]
	060 Move X19, X0
	061 Move W9, [X8+224]
	062 Compare W9, 0
	063 JumpIfNotEqual {66}
	064 Move X0, X8
	065 Call 0x1C17DFC
	066 Move X0, X19
	067 Move X1, X31
	068 Call Enum.GetValues, X0
	069 Compare X0, 0
	070 JumpIfEqual {213}
	071 Move X23, 0x289000
	072 Move X23, [X23+3584]
	073 Move X1, X31
	074 Call Array.GetEnumerator, X0
	075 Move X19, X0
	076 Compare X0, 0
	077 JumpIfEqual {214}
	078 Move X24, 0x289000
	079 Move X25, 0x302000
	080 Move X26, 0x289000
	081 Move X27, 0x290000
	082 Move X24, [X24+3608]
	083 Move X25, [X25+672]
	084 Move X26, [X26+2760]
	085 Move X27, [X27+584]
	086 Move X8, [X19]
	087 Move X1, [X24]
	088 NotImplemented "Instruction LDRH not yet implemented."
	089 Compare X9, 0
	090 JumpIfEqual {97}
	091 Move X10, [X8+176]
	092 Add X10, X10, 8
	093 NotImplemented "Instruction LDUR not yet implemented."
	094 NotImplemented "Instruction CMP not yet implemented."
	095 Subtract X9, X9, 1
	096 Add X10, X10, 16
	097 Move X0, X19
	098 Move W2, W31
	099 Call 0x1C5D788
	100 NotImplemented "Instruction LDRSW not yet implemented."
	101 Add X8, X8, X9
	102 Add X0, X8, 312
	103 Move X8, [X0]
	104 Move X1, [X0+8]
	105 Move X0, X19
	106 NotImplemented "Instruction BLR not yet implemented."
	107 Move TEMP, X0
	108 And TEMP, TEMP, 1
	109 Compare TEMP, 1
	110 JumpIfNotEqual {163}
	111 Move X8, [X19]
	112 Move X1, [X24]
	113 NotImplemented "Instruction LDRH not yet implemented."
	114 Compare X9, 0
	115 JumpIfEqual {122}
	116 Move X10, [X8+176]
	117 Add X10, X10, 8
	118 NotImplemented "Instruction LDUR not yet implemented."
	119 NotImplemented "Instruction CMP not yet implemented."
	120 Subtract X9, X9, 1
	121 Add X10, X10, 16
	122 Move W2, 1
	123 Move X0, X19
	124 Call 0x1C5D788
	125 Move W9, [X10]
	126 Add W9, W9, 1
	127 Add X8, X8, W9
	128 Add X0, X8, 312
	129 Move X8, [X0]
	130 Move X1, [X0+8]
	131 Move X0, X19
	132 NotImplemented "Instruction BLR not yet implemented."
	133 Compare X0, 0
	134 JumpIfEqual {211}
	135 Move X8, [X0]
	136 Move X1, [X25]
	137 Move X8, [X8+64]
	138 Move X9, [X1+64]
	139 NotImplemented "Instruction CMP not yet implemented."
	140 Call 0x1C17E08
	141 Move W21, [X0]
	142 Move X0, [X26]
	143 Move W1, W31
	144 Call 0x1C17D6C
	145 Move X22, X0
	146 Move X0, [X27]
	147 Move W8, [X0+224]
	148 Compare W8, 0
	149 JumpIfNotEqual {151}
	150 Call 0x1C17DFC
	151 Move W0, W21
	152 Move X1, X22
	153 Call Ext.ToExtensionString, X0, X1
	154 Move X1, X20
	155 Move X2, X31
	156 Call String.op_Equality, X0, X1
	157 Move TEMP, X0
	158 And TEMP, TEMP, 1
	159 Compare TEMP, 1
	160 JumpIfNotEqual {86}
	161 Move X20, X31
	162 Move W22, 5
	163 Move X20, X31
	164 Move W21, W31
	165 Move W22, 6
	166 Move X1, [X23]
	167 Move X0, X19
	168 Call 0x1C17E00
	169 Compare X0, 0
	170 JumpIfEqual {193}
	171 Move X8, [X0]
	172 Move X1, [X23]
	173 Move X19, X0
	174 NotImplemented "Instruction LDRH not yet implemented."
	175 Compare X9, 0
	176 JumpIfEqual {183}
	177 Move X10, [X8+176]
	178 Add X10, X10, 8
	179 NotImplemented "Instruction LDUR not yet implemented."
	180 NotImplemented "Instruction CMP not yet implemented."
	181 Subtract X9, X9, 1
	182 Add X10, X10, 16
	183 Move X0, X19
	184 Move W2, W31
	185 Call 0x1C5D788
	186 NotImplemented "Instruction LDRSW not yet implemented."
	187 Add X8, X8, X9
	188 Add X0, X8, 312
	189 Move X8, [X0]
	190 Move X1, [X0+8]
	191 Move X0, X19
	192 NotImplemented "Instruction BLR not yet implemented."
	193 Compare X20, 0
	194 JumpIfNotEqual {215}
	195 NotImplemented "Instruction CMP not yet implemented."
	196 Compare W22, 0
	197 JumpIfNotEqual {199}
	198 Move W21, W31
	199 Move W0, W21
	200 Move X20, [X31+64]
	201 Move X19, [X31+72]
	202 Move X22, [X31+48]
	203 Move X21, [X31+56]
	204 Move X24, [X31+32]
	205 Move X23, [X31+40]
	206 Move X26, [X31+16]
	207 Move X25, [X31+24]
	208 Move X30, [X31+80]
	209 Move X27, [X31+88]
	210 Return X0
	211 Call 0x1C17F20
	212 Call 0x1C181E0
	213 Call 0x1C17F20
	214 Call 0x1C17F20
	215 Move X0, X20
	216 Call 0x1C17F18
	217 Move X21, X0
	218 NotImplemented "Instruction CMP not yet implemented."
	219 Move X0, X21
	220 Call 0x3EB2AD0
	221 Move X20, [X0]
	222 Call 0x3EB2AE0
	223 Move W22, W31
	224 Move W21, W31
	225 Move X20, X31
	226 Move X21, X0
	227 Move X1, [X23]
	228 Move X0, X19
	229 Call 0x1C17E00
	230 Move X19, X0
	231 Compare X0, 0
	232 JumpIfEqual {254}
	233 Move X8, [X19]
	234 Move X1, [X23]
	235 NotImplemented "Instruction LDRH not yet implemented."
	236 Compare X9, 0
	237 JumpIfEqual {244}
	238 Move X10, [X8+176]
	239 Add X10, X10, 8
	240 NotImplemented "Instruction LDUR not yet implemented."
	241 NotImplemented "Instruction CMP not yet implemented."
	242 Subtract X9, X9, 1
	243 Add X10, X10, 16
	244 Move X0, X19
	245 Move W2, W31
	246 Call 0x1C5D788
	247 NotImplemented "Instruction LDRSW not yet implemented."
	248 Add X8, X8, X9
	249 Add X0, X8, 312
	250 Move X8, [X0]
	251 Move X1, [X0+8]
	252 Move X0, X19
	253 NotImplemented "Instruction BLR not yet implemented."
	254 Compare X20, 0
	255 JumpIfNotEqual {258}
	256 Move X0, X21
	257 Call 0x1D2D690
	258 Move X0, X20
	259 Call 0x1C17F18
	260 Call 0x1991590

Method: System.String ToExtensionString(WebSocketSharp.CompressionMethod method, System.String[] parameters)

Disassembly:
	0x03E6A23C BL 0x3EB1B00
	0x03E6A240 MOV X20, X0
	0x03E6A244 BL 0x3EB1AE0
	0x03E6A248 MOV X0, X20
	0x03E6A24C BL 0x1D2C690
	0x03E6A250 BL 0x1990590
	0x03E6A254 MOV X1, X31
	0x03E6A258 B 0x33BDD8C
	0x03E6A25C STR X30, [X31 - 0x30]!
	0x03E6A260 STP X22, X21, [X31 + 0x10]
	0x03E6A264 STP X20, X19, [X31 + 0x20]
	0x03E6A268 ADRP X21, 0x57E000
	0x03E6A26C ADRP X22, 0x302000
	0x03E6A270 LDRB W8, [X21 + 0xCED]
	0x03E6A274 LDR X22, [X22 + 0x318]
	0x03E6A278 MOV X19, X1
	0x03E6A27C MOV X20, X0
	0x03E6A280 TBNZ X8, 0x0, 0x3E6A298
	0x03E6A284 ADRP X0, 0x302000
	0x03E6A288 LDR X0, [X0 + 0x318]
	0x03E6A28C BL 0x1C16CF4
	0x03E6A290 MOVZ W8, 0x1
	0x03E6A294 STRB W8, [X21 + 0xCED]
	0x03E6A298 LDR X0, [X22]
	0x03E6A29C BL 0x1C16F10
	0x03E6A2A0 MOVN W1, 0x1
	0x03E6A2A4 MOV X21, X0
	0x03E6A2A8 BL 0x3E6A2D0
	0x03E6A2AC CBZ X21, 0x3E6A2CC
	0x03E6A2B0 STR X20, [X21 + 0x30]
	0x03E6A2B4 STR X19, [X21 + 0x40]
	0x03E6A2B8 MOV X0, X21
	0x03E6A2BC LDP X20, X19, [X31 + 0x20]
	0x03E6A2C0 LDP X22, X21, [X31 + 0x10]
	0x03E6A2C4 LDR X30, [X31], #0x30
	0x03E6A2C8 RET
	0x03E6A2CC BL 0x1C16F20
	0x03E6A2D0 STR X30, [X31 - 0x20]!
	0x03E6A2D4 STP X20, X19, [X31 + 0x10]
	0x03E6A2D8 MOV W20, W1
	0x03E6A2DC MOV X1, X31
	0x03E6A2E0 MOV X19, X0
	0x03E6A2E4 BL 0x33BDD8C
	0x03E6A2E8 MOV X0, X31
	0x03E6A2EC STR W20, [X19 + 0x10]
	0x03E6A2F0 BL 0x33E3C68
	0x03E6A2F4 CBZ X0, 0x3E6A310
	0x03E6A2F8 MOV X1, X31
	0x03E6A2FC BL 0x33E3CC4
	0x03E6A300 STR W0, [X19 + 0x20]
	0x03E6A304 LDP X20, X19, [X31 + 0x10]
	0x03E6A308 LDR X30, [X31], #0x20
	0x03E6A30C RET
	0x03E6A310 BL 0x1C16F20
	0x03E6A314 CMP W0, 0x0
	0x03E6A318 CSET W0, EQ
	0x03E6A31C RET
	0x03E6A320 STR X30, [X31 - 0x30]!
	0x03E6A324 STP X22, X21, [X31 + 0x10]
	0x03E6A328 STP X20, X19, [X31 + 0x20]
	0x03E6A32C ADRP X22, 0x57E000
	0x03E6A330 ADRP X21, 0x290000
	0x03E6A334 LDRB W8, [X22 + 0xCF0]
	0x03E6A338 LDR X21, [X21 + 0x248]
	0x03E6A33C MOV W19, W1
	0x03E6A340 MOV X20, X0
	0x03E6A344 TBNZ X8, 0x0, 0x3E6A35C
	0x03E6A348 ADRP X0, 0x290000
	0x03E6A34C LDR X0, [X0 + 0x248]
	0x03E6A350 BL 0x1C16CF4
	0x03E6A354 MOVZ W8, 0x1
	0x03E6A358 STRB W8, [X22 + 0xCF0]
	0x03E6A35C MOV X0, X20
	0x03E6A360 MOV X1, X31
	0x03E6A364 BL 0x3316EA4
	0x03E6A368 LDR X8, [X21]
	0x03E6A36C MOV X20, X0
	0x03E6A370 LDR W9, [X8 + 0xE0]
	0x03E6A374 CBZ W9, 0x3E6A39C
	0x03E6A378 CBZ W19, 0x3E6A388
	0x03E6A37C MOV X0, X20
	0x03E6A380 MOV X1, X31
	0x03E6A384 BL 0x33A1B08
	0x03E6A388 MOV X0, X20
	0x03E6A38C LDP X20, X19, [X31 + 0x20]
	0x03E6A390 LDP X22, X21, [X31 + 0x10]
	0x03E6A394 LDR X30, [X31], #0x30
	0x03E6A398 RET
	0x03E6A39C MOV X0, X8
	0x03E6A3A0 BL 0x1C16DFC
	0x03E6A3A4 CBNZ W19, 0x3E6A37C

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+32], X30
	003 Move [X31+40], X21
	004 Move [X31+48], X20
	005 Move [X31+56], X19
	006 Move X21, 0x57F000
	007 Move W8, [X21+3314]
	008 Move X19, X1
	009 Move W20, W0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {37}
	014 Move X0, 0x303000
	015 Move X0, [X0+672]
	016 Call 0x1C17CF4
	017 Move X0, 0x303000
	018 Move X0, [X0+680]
	019 Call 0x1C17CF4
	020 Move X0, 0x291000
	021 Move X0, [X0+584]
	022 Call 0x1C17CF4
	023 Move X0, 0x28C000
	024 Move X0, [X0+632]
	025 Call 0x1C17CF4
	026 Move X0, 0x303000
	027 Move X0, [X0+688]
	028 Call 0x1C17CF4
	029 Move X0, 0x303000
	030 Move X0, [X0+696]
	031 Call 0x1C17CF4
	032 Move X0, 0x2B2000
	033 Move X0, [X0+2224]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X21+3314], W8
	037 And W31, W20, 255
	038 Move X8, 0x303000
	039 Move X8, [X8+672]
	040 Move TEMP, 0
	041 Not TEMP
	042 Move X9, TEMP
	043 Add X0, X31, 8
	044 Move X1, X31
	045 Move X8, [X8]
	046 Move [X31+24], W20
	047 Move [X31+8], X8
	048 Move [X31+16], X9
	049 Call Enum.ToString, X0
	050 Compare X0, 0
	051 JumpIfEqual {103}
	052 Move X20, 0x303000
	053 Move X20, [X20+688]
	054 Move X1, X31
	055 Call String.ToLower, X0
	056 Move X8, [X20]
	057 Move X1, X0
	058 Move X2, X31
	059 Move X0, X8
	060 Call String.Format, X0, X1
	061 Move X20, X0
	062 Compare X19, 0
	063 JumpIfEqual {96}
	064 Move X8, [X19+24]
	065 Compare X8, 0
	066 JumpIfEqual {96}
	067 Move X8, 0x291000
	068 Move X8, [X8+584]
	069 Move X0, [X8]
	070 Move W8, [X0+224]
	071 Compare W8, 0
	072 JumpIfNotEqual {74}
	073 Call 0x1C17DFC
	074 Move X8, 0x2B2000
	075 Move X9, 0x303000
	076 Move X8, [X8+2224]
	077 Move X9, [X9+680]
	078 Move X0, X19
	079 Move X1, [X8]
	080 Move X2, [X9]
	081 Call 0x21E3C44, X0, X1
	082 Move X8, 0x303000
	083 Move X8, [X8+696]
	084 Move X2, X0
	085 Move X1, X20
	086 Move X3, X31
	087 Move X8, [X8]
	088 Move X0, X8
	089 Call String.Format, X0, X1, X2
	090 Move X20, X0
	091 Move X8, 0x28C000
	092 Move X8, [X8+632]
	093 Move X8, [X8]
	094 Move X8, [X8+184]
	095 Move X20, [X8]
	096 Move X0, X20
	097 Move X20, [X31+48]
	098 Move X19, [X31+56]
	099 Move X30, [X31+32]
	100 Move X21, [X31+40]
	101 Add X31, X31, 64
	102 Return X0
	103 Call 0x1C17F20

Method: System.Net.IPAddress ToIPAddress(System.String value)

Disassembly:
	0x03E6B784 MOV X21, X0
	0x03E6B788 CBZ X19, 0x3E6B7E4
	0x03E6B78C LDR X8, [X19]
	0x03E6B790 LDR X1, [X23]
	0x03E6B794 LDRH W9, [X8 + 0x12E]
	0x03E6B798 CBZ X9, 0x3E6B7BC
	0x03E6B79C LDR X10, [X8 + 0xB0]
	0x03E6B7A0 ADD X10, X10, 0x8
	0x03E6B7A4 LDUR X11, [X10 - 0x8]
	0x03E6B7A8 CMP X11, X1
	0x03E6B7AC B.EQ 0x3E6B7CC
	0x03E6B7B0 SUBS X9, X9, 0x1
	0x03E6B7B4 ADD X10, X10, 0x10
	0x03E6B7B8 B.NE 0x3E6B7A4
	0x03E6B7BC MOV X0, X19
	0x03E6B7C0 MOV W2, W31
	0x03E6B7C4 BL 0x1C5C788
	0x03E6B7C8 B 0x3E6B7D8
	0x03E6B7CC LDRSW X9, [X10]
	0x03E6B7D0 ADD X8, X8, X9, 0x4, LSL
	0x03E6B7D4 ADD X0, X8, 0x138
	0x03E6B7D8 LDP X8, X1, [X0]
	0x03E6B7DC MOV X0, X19
	0x03E6B7E0 BLR X8
	0x03E6B7E4 CBNZ X20, 0x3E6B7F0
	0x03E6B7E8 MOV X0, X21
	0x03E6B7EC BL 0x1D2C690
	0x03E6B7F0 MOV X0, X20
	0x03E6B7F4 BL 0x1C16F18
	0x03E6B7F8 BL 0x1990590
	0x03E6B7FC STR X30, [X31 - 0x60]!
	0x03E6B800 STP X28, X27, [X31 + 0x10]
	0x03E6B804 STP X26, X25, [X31 + 0x20]
	0x03E6B808 STP X24, X23, [X31 + 0x30]
	0x03E6B80C STP X22, X21, [X31 + 0x40]
	0x03E6B810 STP X20, X19, [X31 + 0x50]
	0x03E6B814 ADRP X24, 0x57D000
	0x03E6B818 ADRP X25, 0x301000
	0x03E6B81C LDRB W8, [X24 + 0xD01]
	0x03E6B820 LDR X25, [X25 + 0x370]
	0x03E6B824 MOV X22, X4
	0x03E6B828 MOV X23, X3
	0x03E6B82C MOV W19, W2
	0x03E6B830 MOV X21, X1
	0x03E6B834 MOV X20, X0
	0x03E6B838 TBNZ X8, 0x0, 0x3E6B898
	0x03E6B83C ADRP X0, 0x28B000
	0x03E6B840 LDR X0, [X0 + 0x2C8]
	0x03E6B844 BL 0x1C16CF4
	0x03E6B848 ADRP X0, 0x289000
	0x03E6B84C LDR X0, [X0 + 0xE70]
	0x03E6B850 BL 0x1C16CF4
	0x03E6B854 ADRP X0, 0x28F000
	0x03E6B858 LDR X0, [X0 + 0x248]
	0x03E6B85C BL 0x1C16CF4
	0x03E6B860 ADRP X0, 0x290000
	0x03E6B864 LDR X0, [X0 + 0x558]
	0x03E6B868 BL 0x1C16CF4
	0x03E6B86C ADRP X0, 0x301000
	0x03E6B870 LDR X0, [X0 + 0x378]
	0x03E6B874 BL 0x1C16CF4
	0x03E6B878 ADRP X0, 0x301000
	0x03E6B87C LDR X0, [X0 + 0x380]
	0x03E6B880 BL 0x1C16CF4
	0x03E6B884 ADRP X0, 0x301000
	0x03E6B888 LDR X0, [X0 + 0x370]
	0x03E6B88C BL 0x1C16CF4
	0x03E6B890 MOVZ W8, 0x1
	0x03E6B894 STRB W8, [X24 + 0xD01]
	0x03E6B898 LDR X0, [X25]
	0x03E6B89C BL 0x1C16F10

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x57E000
	005 Move W8, [X20+3315]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x296000
	012 Move X0, [X0+2408]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+3315], W8
	016 Move [X31+8], X31
	017 Compare X19, 0
	018 JumpIfEqual {65}
	019 Move W8, [X19+16]
	020 Compare W8, 0
	021 JumpIfEqual {65}
	022 Move X8, 0x296000
	023 Move X8, [X8+2408]
	024 Move X0, [X8]
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 Add X1, X31, 8
	030 Move X0, X19
	031 Move X2, X31
	032 Call IPAddress.TryParse, X0, X1
	033 Move TEMP, X0
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfNotEqual {38}
	037 Move X0, [X31+8]
	038 Move X0, X19
	039 Move X1, X31
	040 Call Dns.GetHostAddresses, X0
	041 Compare X0, 0
	042 JumpIfEqual {47}
	043 Move W8, [X0+24]
	044 Compare W8, 0
	045 JumpIfEqual {48}
	046 Move X0, [X0+32]
	047 Call 0x1C17F20
	048 Call 0x1C17F28
	049 Move X19, X0
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Move X0, X19
	052 Call 0x3EB2AD0
	053 Move X19, X0
	054 Move X0, 0x28F000
	055 Move X0, [X0+3264]
	056 Call 0x1C17D08
	057 Move X8, [X19]
	058 Move X1, [X8]
	059 Call 0x1C18270
	060 Move TEMP, X0
	061 And TEMP, TEMP, 1
	062 Compare TEMP, 1
	063 JumpIfNotEqual {70}
	064 Call 0x3EB2AE0
	065 Move X0, X31
	066 Move X20, [X31+16]
	067 Move X19, [X31+24]
	068 Move X30, [X31+32]
	069 Return X0
	070 Move W0, 8
	071 Call 0x3EB2AF0
	072 Move X8, [X19]
	073 Move [X0], X8
	074 Move X1, 0x4A000
	075 Add X1, X1, 3672
	076 Move X2, X31
	077 Call 0x3EB2B00
	078 Move X19, X0
	079 Call 0x3EB2AE0
	080 Move X0, X19
	081 Call 0x1D2D690
	082 Call 0x1991590

Method: System.Collections.Generic.List`1<TSource> ToList(System.Collections.Generic.IEnumerable`1<TSource> source)

Disassembly:
	0x021E3B88 AND X9, X9, 0x1FFFFFFFF
	0x021E3B8C SUB X22, X10, X9
	0x021E3B90 ADD X31, X22, 0x0
	0x021E3B94 ADD X10, X21, 0xF
	0x021E3B98 ADD X9, X31, 0x0
	0x021E3B9C AND X10, X10, 0x1FFFFFFFF
	0x021E3BA0 SUB X23, X9, X10
	0x021E3BA4 ADD X31, X23, 0x0
	0x021E3BA8 LDR X1, [X8 + 0x38]
	0x021E3BAC SUB X0, X29, 0x28
	0x021E3BB0 LDR X8, [X1]
	0x021E3BB4 BLR X8
	0x021E3BB8 CMP W0, 0x1
	0x021E3BBC B.LT 0x21E3C4C
	0x021E3BC0 MOV W24, W31
	0x021E3BC4 LDR X8, [X19 + 0x38]
	0x021E3BC8 SUB X0, X29, 0x28
	0x021E3BCC MOV W1, W24
	0x021E3BD0 LDR X2, [X8 + 0x8]
	0x021E3BD4 LDR X8, [X2]
	0x021E3BD8 BLR X8
	0x021E3BDC MOV X25, X0
	0x021E3BE0 MOV X0, X23

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X1+56]
	005 Move X20, X1
	006 Move X19, X0
	007 Compare X8, 0
	008 JumpIfNotEqual {12}
	009 Move X0, X20
	010 Call 0x1C5D6E0
	011 Move X8, [X20+56]
	012 Move X0, [X8+8]
	013 Move W8, [X0+309]
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {19}
	018 Call 0x1C5D684
	019 Call 0x1C17F10
	020 Move X8, [X20+56]
	021 Move X1, X19
	022 Move X20, X0
	023 Move X2, [X8+16]
	024 Call List`1<Object>..ctor, X0, X1
	025 Move X0, X20
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Return X0

Method: System.String ToString(System.Net.IPAddress address, System.Boolean bracketIPv6)

Disassembly:
	0x03E6B8A0 MOV X1, X31
	0x03E6B8A4 MOV X24, X0
	0x03E6B8A8 BL 0x33BDD8C
	0x03E6B8AC CBZ X24, 0x3E6B97C
	0x03E6B8B0 ADRP X8, 0x290000
	0x03E6B8B4 LDR X8, [X8 + 0x558]
	0x03E6B8B8 ADRP X25, 0x289000
	0x03E6B8BC ADRP X26, 0x301000
	0x03E6B8C0 LDR X25, [X25 + 0xE70]
	0x03E6B8C4 LDR X26, [X26 + 0x378]
	0x03E6B8C8 STR X23, [X24 + 0x10]
	0x03E6B8CC STR X22, [X24 + 0x20]
	0x03E6B8D0 LDR X0, [X8]
	0x03E6B8D4 ADRP X23, 0x28B000
	0x03E6B8D8 ADRP X27, 0x301000
	0x03E6B8DC ADRP X28, 0x28F000
	0x03E6B8E0 LDR X23, [X23 + 0x2C8]
	0x03E6B8E4 LDR X27, [X27 + 0x380]
	0x03E6B8E8 LDR X28, [X28 + 0x248]
	0x03E6B8EC BL 0x1C16F10
	0x03E6B8F0 MOV X1, X21
	0x03E6B8F4 MOV X2, X31
	0x03E6B8F8 MOV X22, X0
	0x03E6B8FC BL 0x32E2528
	0x03E6B900 STR X22, [X24 + 0x18]
	0x03E6B904 LDR X0, [X25]
	0x03E6B908 BL 0x1C16F10
	0x03E6B90C LDR X2, [X26]
	0x03E6B910 MOV X1, X24
	0x03E6B914 MOV X3, X31
	0x03E6B918 MOV X21, X0
	0x03E6B91C BL 0x3314368
	0x03E6B920 LDR X0, [X23]
	0x03E6B924 BL 0x1C16F10
	0x03E6B928 LDR X2, [X27]
	0x03E6B92C MOV X1, X24
	0x03E6B930 MOV X3, X31
	0x03E6B934 MOV X23, X0
	0x03E6B938 BL 0x2A6B948
	0x03E6B93C LDR X0, [X28]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x57E000
	006 Move W8, [X21+3316]
	007 Move W20, W1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x2CF000
	014 Move X0, [X0+1048]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+3316], W8
	018 Move TEMP, X20
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfNotEqual {45}
	022 Compare X19, 0
	023 JumpIfEqual {56}
	024 Move X0, X19
	025 Move X1, X31
	026 Call IPAddress.get_AddressFamily, X0
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Move X8, [X19]
	029 Move X0, X19
	030 Move X9, [X8+360]
	031 Move X1, [X8+368]
	032 NotImplemented "Instruction BLR not yet implemented."
	033 Move X8, 0x2CF000
	034 Move X8, [X8+1048]
	035 Move X20, [X31+16]
	036 Move X19, [X31+24]
	037 Move X1, X0
	038 Move X2, X31
	039 Move X8, [X8]
	040 Move X0, X8
	041 Move X30, [X31+32]
	042 Move X21, [X31+40]
	043 Call String.Format, X0, X1
	044 Return X0
	045 Compare X19, 0
	046 JumpIfEqual {56}
	047 Move X8, [X19]
	048 Move X0, X19
	049 Move X20, [X31+16]
	050 Move X19, [X31+24]
	051 Move X2, [X8+360]
	052 Move X1, [X8+368]
	053 Move X30, [X31+32]
	054 Move X21, [X31+40]
	055 CallNoReturn X2
	056 Call 0x1C17F20

Method: System.UInt16 ToUInt16(System.Byte[] source, WebSocketSharp.ByteOrder sourceOrder)

Disassembly:
	0x03E6B940 LDR W8, [X0 + 0xE0]
	0x03E6B944 CBNZ W8, 0x3E6B94C
	0x03E6B948 BL 0x1C16DFC
	0x03E6B94C MOV X0, X22
	0x03E6B950 MOV X1, X20
	0x03E6B954 MOV W2, W19
	0x03E6B958 MOV X3, X21
	0x03E6B95C MOV X4, X23
	0x03E6B960 LDP X20, X19, [X31 + 0x50]
	0x03E6B964 LDP X22, X21, [X31 + 0x40]
	0x03E6B968 LDP X24, X23, [X31 + 0x30]
	0x03E6B96C LDP X26, X25, [X31 + 0x20]
	0x03E6B970 LDP X28, X27, [X31 + 0x10]
	0x03E6B974 LDR X30, [X31], #0x60
	0x03E6B978 B 0x3E68874
	0x03E6B97C BL 0x1C16F20
	0x03E6B980 MOV X1, X31
	0x03E6B984 B 0x33BDD8C
	0x03E6B988 STP X30, X21, [X31 - 0x20]!
	0x03E6B98C STP X20, X19, [X31 + 0x10]
	0x03E6B990 ADRP X20, 0x57D000
	0x03E6B994 ADRP X21, 0x28F000
	0x03E6B998 LDRB W8, [X20 + 0xD02]
	0x03E6B99C LDR X21, [X21 + 0x248]
	0x03E6B9A0 MOV W19, W0
	0x03E6B9A4 TBNZ X8, 0x0, 0x3E6B9BC
	0x03E6B9A8 ADRP X0, 0x28F000
	0x03E6B9AC LDR X0, [X0 + 0x248]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x57E000
	007 Move X22, 0x290000
	008 Move W8, [X21+3317]
	009 Move X22, [X22+584]
	010 Move W19, W1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x290000
	017 Move X0, [X0+584]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+3317], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move X0, X20
	027 Move W1, W19
	028 Call Ext.ToHostOrder, X0, X1
	029 Move X20, [X31+32]
	030 Move X19, [X31+40]
	031 Move X22, [X31+16]
	032 Move X21, [X31+24]
	033 Move W1, W31
	034 Move X2, X31
	035 Move X30, [X31+48]
	036 Call BitConverter.ToUInt16, X0, X1
	037 Return X0

Method: System.UInt64 ToUInt64(System.Byte[] source, WebSocketSharp.ByteOrder sourceOrder)

Disassembly:
	0x03E6BAA0 LDR X0, [X0 + 0x568]
	0x03E6BAA4 BL 0x1C16CF4
	0x03E6BAA8 ADRP X0, 0x2D2000
	0x03E6BAAC LDR X0, [X0 + 0x570]
	0x03E6BAB0 BL 0x1C16CF4
	0x03E6BAB4 ADRP X0, 0x2D2000
	0x03E6BAB8 LDR X0, [X0 + 0x580]
	0x03E6BABC BL 0x1C16CF4
	0x03E6BAC0 ADRP X0, 0x2D2000
	0x03E6BAC4 LDR X0, [X0 + 0x588]
	0x03E6BAC8 BL 0x1C16CF4
	0x03E6BACC ADRP X0, 0x2D2000
	0x03E6BAD0 LDR X0, [X0 + 0x598]
	0x03E6BAD4 BL 0x1C16CF4
	0x03E6BAD8 ADRP X0, 0x2D2000
	0x03E6BADC LDR X0, [X0 + 0x5A0]
	0x03E6BAE0 BL 0x1C16CF4
	0x03E6BAE4 ADRP X0, 0x2D2000
	0x03E6BAE8 LDR X0, [X0 + 0x5A8]
	0x03E6BAEC BL 0x1C16CF4
	0x03E6BAF0 ADRP X0, 0x2D2000
	0x03E6BAF4 LDR X0, [X0 + 0x5B0]
	0x03E6BAF8 BL 0x1C16CF4
	0x03E6BAFC ADRP X0, 0x2D2000
	0x03E6BB00 LDR X0, [X0 + 0x5C8]
	0x03E6BB04 BL 0x1C16CF4
	0x03E6BB08 ADRP X0, 0x2D2000
	0x03E6BB0C LDR X0, [X0 + 0x5D8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x57E000
	007 Move X22, 0x290000
	008 Move W8, [X21+3318]
	009 Move X22, [X22+584]
	010 Move W19, W1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x290000
	017 Move X0, [X0+584]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+3318], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move X0, X20
	027 Move W1, W19
	028 Call Ext.ToHostOrder, X0, X1
	029 Move X20, [X31+32]
	030 Move X19, [X31+40]
	031 Move X22, [X31+16]
	032 Move X21, [X31+24]
	033 Move W1, W31
	034 Move X2, X31
	035 Move X30, [X31+48]
	036 Call BitConverter.ToUInt64, X0, X1
	037 Return X0

Method: System.Collections.Generic.IEnumerable`1<System.String> TrimEach(System.Collections.Generic.IEnumerable`1<System.String> source)

Disassembly:
	0x03E6BB10 BL 0x1C16CF4
	0x03E6BB14 ADRP X0, 0x2D2000
	0x03E6BB18 LDR X0, [X0 + 0x5E0]
	0x03E6BB1C BL 0x1C16CF4
	0x03E6BB20 ADRP X0, 0x2D2000
	0x03E6BB24 LDR X0, [X0 + 0x5E8]
	0x03E6BB28 BL 0x1C16CF4
	0x03E6BB2C ADRP X0, 0x2D2000
	0x03E6BB30 LDR X0, [X0 + 0x5F0]
	0x03E6BB34 BL 0x1C16CF4
	0x03E6BB38 ADRP X0, 0x2D2000
	0x03E6BB3C LDR X0, [X0 + 0x5F8]
	0x03E6BB40 BL 0x1C16CF4
	0x03E6BB44 ADRP X0, 0x2D2000
	0x03E6BB48 LDR X0, [X0 + 0x600]
	0x03E6BB4C BL 0x1C16CF4
	0x03E6BB50 ADRP X0, 0x2D2000
	0x03E6BB54 LDR X0, [X0 + 0x608]
	0x03E6BB58 BL 0x1C16CF4
	0x03E6BB5C ADRP X0, 0x2D2000
	0x03E6BB60 LDR X0, [X0 + 0x620]
	0x03E6BB64 BL 0x1C16CF4
	0x03E6BB68 ADRP X0, 0x2D2000
	0x03E6BB6C LDR X0, [X0 + 0x628]
	0x03E6BB70 BL 0x1C16CF4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x57E000
	006 Move X21, 0x302000
	007 Move W8, [X20+3319]
	008 Move X21, [X21+824]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x302000
	015 Move X0, [X0+824]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3319], W8
	019 Move X0, [X21]
	020 Call 0x1C17F10
	021 Move TEMP, 1
	022 Not TEMP
	023 Move W1, TEMP
	024 Move X20, X0
	025 Call <TrimEach>d__71..ctor, X0, X1
	026 Compare X20, 0
	027 JumpIfEqual {35}
	028 Move [X20+48], X19
	029 Move X0, X20
	030 Move X20, [X31+16]
	031 Move X19, [X31+24]
	032 Move X30, [X31+32]
	033 Move X21, [X31+40]
	034 Return X0
	035 Call 0x1C17F20

Method: System.String TrimSlashFromEnd(System.String value)

Disassembly:
	0x03E6BBB8 BL 0x1C16CF4
	0x03E6BBBC ADRP X0, 0x2D2000
	0x03E6BBC0 LDR X0, [X0 + 0x678]
	0x03E6BBC4 BL 0x1C16CF4
	0x03E6BBC8 ADRP X0, 0x2D2000
	0x03E6BBCC LDR X0, [X0 + 0x688]
	0x03E6BBD0 BL 0x1C16CF4
	0x03E6BBD4 ADRP X0, 0x2D2000
	0x03E6BBD8 LDR X0, [X0 + 0x690]
	0x03E6BBDC BL 0x1C16CF4
	0x03E6BBE0 ADRP X0, 0x2D2000
	0x03E6BBE4 LDR X0, [X0 + 0x6A0]
	0x03E6BBE8 BL 0x1C16CF4
	0x03E6BBEC ADRP X0, 0x2D2000
	0x03E6BBF0 LDR X0, [X0 + 0x6A8]
	0x03E6BBF4 BL 0x1C16CF4
	0x03E6BBF8 ADRP X0, 0x2D2000
	0x03E6BBFC LDR X0, [X0 + 0x6B0]
	0x03E6BC00 BL 0x1C16CF4
	0x03E6BC04 ADRP X0, 0x2D2000
	0x03E6BC08 LDR X0, [X0 + 0x6B8]
	0x03E6BC0C BL 0x1C16CF4
	0x03E6BC10 ADRP X0, 0x2D2000
	0x03E6BC14 LDR X0, [X0 + 0x6D0]
	0x03E6BC18 BL 0x1C16CF4
	0x03E6BC1C ADRP X0, 0x2D2000
	0x03E6BC20 LDR X0, [X0 + 0x6D8]
	0x03E6BC24 BL 0x1C16CF4
	0x03E6BC28 MOVZ W8, 0x1
	0x03E6BC2C STRB W8, [X20 + 0xD03]
	0x03E6BC30 CMP W19, 0xCF
	0x03E6BC34 B.LE 0x3E6BC68
	0x03E6BC38 SUB W8, W19, 0x190
	0x03E6BC3C CMP W8, 0x18
	0x03E6BC40 B.HI 0x3E6BCA0
	0x03E6BC44 ADRP X9, 0xFFFFFFFFFCD2D000
	0x03E6BC48 ADD X9, X9, 0x652
	0x03E6BC4C ADR X10, 0x10
	0x03E6BC50 LDRB W11, [X9, X8, LSL]
	0x03E6BC54 ADD X10, X10, X11, 0x2, LSL
	0x03E6BC58 BR X10

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x57E000
	006 Move X21, 0x292000
	007 Move W8, [X20+3320]
	008 Move X21, [X21+2264]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x292000
	015 Move X0, [X0+2264]
	016 Call 0x1C17CF4
	017 Move X0, 0x28A000
	018 Move X0, [X0+3784]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X20+3320], W8
	022 Move X0, [X21]
	023 Move W1, 1
	024 Call 0x1C17D6C
	025 Compare X0, 0
	026 JumpIfEqual {51}
	027 Move W8, [X0+24]
	028 Move X1, X0
	029 Compare W8, 0
	030 JumpIfEqual {52}
	031 Move W8, 47
	032 NotImplemented "Instruction STRH not yet implemented."
	033 Compare X19, 0
	034 JumpIfEqual {51}
	035 Move X0, X19
	036 Move X2, X31
	037 Call String.TrimEnd, X0, X1
	038 Compare X0, 0
	039 JumpIfEqual {51}
	040 Move X8, 0x28A000
	041 Move X8, [X8+3784]
	042 Move W9, [X0+16]
	043 Move X20, [X31+16]
	044 Move X19, [X31+24]
	045 Move X8, [X8]
	046 NotImplemented "Instruction CMP not yet implemented."
	047 NotImplemented "Instruction CSEL not yet implemented."
	048 Move X30, [X31+32]
	049 Move X21, [X31+40]
	050 Return X0
	051 Call 0x1C17F20
	052 Call 0x1C17F28

Method: System.String TrimSlashOrBackslashFromEnd(System.String value)

Disassembly:
	0x03E6BC5C ADRP X8, 0x2D2000
	0x03E6BC60 LDR X8, [X8 + 0x690]
	0x03E6BC64 B 0x3E6BF1C
	0x03E6BC68 CMP W19, 0xC7
	0x03E6BC6C B.LE 0x3E6BCD8
	0x03E6BC70 SUB W8, W19, 0xC8
	0x03E6BC74 CMP W8, 0x7
	0x03E6BC78 B.HI 0x3E6BD2C
	0x03E6BC7C ADRP X9, 0xFFFFFFFFFCD2D000
	0x03E6BC80 ADD X9, X9, 0x642
	0x03E6BC84 ADR X10, 0x10
	0x03E6BC88 LDRB W11, [X9, X8, LSL]
	0x03E6BC8C ADD X10, X10, X11, 0x2, LSL
	0x03E6BC90 BR X10
	0x03E6BC94 ADRP X8, 0x2D2000
	0x03E6BC98 LDR X8, [X8 + 0x540]
	0x03E6BC9C B 0x3E6BF1C
	0x03E6BCA0 SUB W8, W19, 0x12C
	0x03E6BCA4 CMP W8, 0x7
	0x03E6BCA8 B.HI 0x3E6BCFC
	0x03E6BCAC ADRP X9, 0xFFFFFFFFFCD2D000
	0x03E6BCB0 ADD X9, X9, 0x64A
	0x03E6BCB4 ADR X10, 0x18
	0x03E6BCB8 LDRB W11, [X9, X8, LSL]
	0x03E6BCBC ADD X10, X10, X11, 0x2, LSL
	0x03E6BCC0 ADRP X8, 0x2D2000
	0x03E6BCC4 LDR X8, [X8 + 0x600]
	0x03E6BCC8 BR X10
	0x03E6BCCC ADRP X8, 0x2D2000
	0x03E6BCD0 LDR X8, [X8 + 0x6B8]
	0x03E6BCD4 B 0x3E6BF1C
	0x03E6BCD8 CMP W19, 0x64
	0x03E6BCDC B.EQ 0x3E6BD94
	0x03E6BCE0 CMP W19, 0x65
	0x03E6BCE4 B.EQ 0x3E6BDA0
	0x03E6BCE8 CMP W19, 0x66
	0x03E6BCEC B.NE 0x3E6BD2C
	0x03E6BCF0 ADRP X8, 0x2D2000
	0x03E6BCF4 LDR X8, [X8 + 0x568]
	0x03E6BCF8 B 0x3E6BF1C
	0x03E6BCFC SUB W8, W19, 0x1F4
	0x03E6BD00 CMP W8, 0x7
	0x03E6BD04 B.HI 0x3E6BD2C
	0x03E6BD08 ADRP X9, 0xFFFFFFFFFCD2D000
	0x03E6BD0C ADD X9, X9, 0x66B
	0x03E6BD10 ADR X10, 0x10
	0x03E6BD14 LDRB W11, [X9, X8, LSL]
	0x03E6BD18 ADD X10, X10, X11, 0x2, LSL
	0x03E6BD1C BR X10
	0x03E6BD20 ADRP X8, 0x2D2000
	0x03E6BD24 LDR X8, [X8 + 0x588]
	0x03E6BD28 B 0x3E6BF1C
	0x03E6BD2C ADRP X8, 0x28A000
	0x03E6BD30 LDR X8, [X8 + 0x278]
	0x03E6BD34 LDR X8, [X8]
	0x03E6BD38 LDR X8, [X8 + 0xB8]
	0x03E6BD3C B 0x3E6BF1C
	0x03E6BD40 ADRP X8, 0x2D2000
	0x03E6BD44 LDR X8, [X8 + 0x5F8]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x57E000
	007 Move X21, 0x292000
	008 Move W8, [X20+3321]
	009 Move X21, [X21+2264]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x292000
	016 Move X0, [X0+2264]
	017 Call 0x1C17CF4
	018 Move X0, 0x28B000
	019 Move X0, [X0+368]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X20+3321], W8
	023 Move X0, [X21]
	024 Move W1, 2
	025 Call 0x1C17D6C
	026 Compare X0, 0
	027 JumpIfEqual {68}
	028 Move W8, [X0+24]
	029 Move X1, X0
	030 Compare W8, 0
	031 JumpIfEqual {69}
	032 Move W9, 47
	033 NotImplemented "Instruction CMP not yet implemented."
	034 NotImplemented "Instruction STRH not yet implemented."
	035 Move W8, 92
	036 NotImplemented "Instruction STRH not yet implemented."
	037 Compare X19, 0
	038 JumpIfEqual {68}
	039 Move X0, X19
	040 Move X2, X31
	041 Call String.TrimEnd, X0, X1
	042 Compare X0, 0
	043 JumpIfEqual {68}
	044 Move W8, [X0+16]
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Move X0, X19
	047 Move W1, W31
	048 Move X2, X31
	049 Call String.get_Chars, X0, X1
	050 Move X8, 0x28B000
	051 Move X8, [X8+368]
	052 NotImplemented "Instruction STRH not yet implemented."
	053 Move X8, [X8]
	054 Move W9, [X8+224]
	055 Compare W9, 0
	056 JumpIfNotEqual {59}
	057 Move X0, X8
	058 Call 0x1C17DFC
	059 Add X0, X31, 12
	060 Move X1, X31
	061 Call Char.ToString, X0
	062 Move X20, [X31+32]
	063 Move X19, [X31+40]
	064 Move X30, [X31+16]
	065 Move X21, [X31+24]
	066 Add X31, X31, 48
	067 Return X0
	068 Call 0x1C17F20
	069 Call 0x1C17F28

Method: System.Boolean TryCreateVersion(System.String versionString, out System.Version result)

Disassembly:
	0x03E6BD48 B 0x3E6BF1C
	0x03E6BD4C ADRP X8, 0x2D2000
	0x03E6BD50 LDR X8, [X8 + 0x6B0]
	0x03E6BD54 B 0x3E6BF1C
	0x03E6BD58 ADRP X8, 0x2D2000
	0x03E6BD5C LDR X8, [X8 + 0x5F0]
	0x03E6BD60 B 0x3E6BF1C
	0x03E6BD64 ADRP X8, 0x2D2000
	0x03E6BD68 LDR X8, [X8 + 0x620]
	0x03E6BD6C B 0x3E6BF1C
	0x03E6BD70 ADRP X8, 0x2D2000
	0x03E6BD74 LDR X8, [X8 + 0x510]
	0x03E6BD78 B 0x3E6BF1C
	0x03E6BD7C ADRP X8, 0x2D2000
	0x03E6BD80 LDR X8, [X8 + 0x520]
	0x03E6BD84 B 0x3E6BF1C
	0x03E6BD88 ADRP X8, 0x2D2000
	0x03E6BD8C LDR X8, [X8 + 0x630]
	0x03E6BD90 B 0x3E6BF1C
	0x03E6BD94 ADRP X8, 0x2D2000
	0x03E6BD98 LDR X8, [X8 + 0x6A8]
	0x03E6BD9C B 0x3E6BF1C
	0x03E6BDA0 ADRP X8, 0x2D2000
	0x03E6BDA4 LDR X8, [X8 + 0x6A0]
	0x03E6BDA8 B 0x3E6BF1C
	0x03E6BDAC ADRP X8, 0x2D2000
	0x03E6BDB0 LDR X8, [X8 + 0x558]
	0x03E6BDB4 B 0x3E6BF1C
	0x03E6BDB8 ADRP X8, 0x2D2000
	0x03E6BDBC LDR X8, [X8 + 0x548]
	0x03E6BDC0 B 0x3E6BF1C
	0x03E6BDC4 ADRP X8, 0x2D2000
	0x03E6BDC8 LDR X8, [X8 + 0x658]
	0x03E6BDCC B 0x3E6BF1C
	0x03E6BDD0 ADRP X8, 0x2D2000
	0x03E6BDD4 LDR X8, [X8 + 0x5A8]
	0x03E6BDD8 B 0x3E6BF1C
	0x03E6BDDC ADRP X8, 0x2D2000
	0x03E6BDE0 LDR X8, [X8 + 0x608]
	0x03E6BDE4 B 0x3E6BF1C
	0x03E6BDE8 ADRP X8, 0x2D2000
	0x03E6BDEC LDR X8, [X8 + 0x5D8]
	0x03E6BDF0 B 0x3E6BF1C
	0x03E6BDF4 ADRP X8, 0x2D2000
	0x03E6BDF8 LDR X8, [X8 + 0x5C8]
	0x03E6BDFC B 0x3E6BF1C
	0x03E6BE00 ADRP X8, 0x2D2000
	0x03E6BE04 LDR X8, [X8 + 0x508]
	0x03E6BE08 B 0x3E6BF1C
	0x03E6BE0C ADRP X8, 0x2D2000
	0x03E6BE10 LDR X8, [X8 + 0x628]
	0x03E6BE14 B 0x3E6BF1C
	0x03E6BE18 ADRP X8, 0x2D2000
	0x03E6BE1C LDR X8, [X8 + 0x538]
	0x03E6BE20 B 0x3E6BF1C
	0x03E6BE24 ADRP X8, 0x2D2000
	0x03E6BE28 LDR X8, [X8 + 0x580]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x57E000
	007 Move X21, 0x291000
	008 Move W8, [X22+3322]
	009 Move X21, [X21+1984]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x291000
	017 Move X0, [X0+1984]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+3322], W8
	021 Move [X19], X31
	022 Move X0, [X21]
	023 Call 0x1C17F10
	024 Move X21, X0
	025 Move X1, X20
	026 Move X2, X31
	027 Call Version..ctor, X0, X1
	028 Move [X19], X21
	029 Move W0, 1
	030 Move X20, [X31+32]
	031 Move X19, [X31+40]
	032 Move X22, [X31+16]
	033 Move X21, [X31+24]
	034 Move X30, [X31+48]
	035 Return X0
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Move X19, X0
	038 Move X0, X19
	039 Call 0x3EB2AD0
	040 Move X19, X0
	041 Move X0, 0x28F000
	042 Move X0, [X0+3264]
	043 Call 0x1C17D08
	044 Move X8, [X19]
	045 Move X1, [X8]
	046 Call 0x1C18270
	047 Move TEMP, X0
	048 And TEMP, TEMP, 1
	049 Compare TEMP, 1
	050 JumpIfNotEqual {53}
	051 Call 0x3EB2AE0
	052 Move W0, W31
	053 Move W0, 8
	054 Call 0x3EB2AF0
	055 Move X8, [X19]
	056 Move [X0], X8
	057 Move X1, 0x4A000
	058 Add X1, X1, 3672
	059 Move X2, X31
	060 Call 0x3EB2B00
	061 Move X19, X0
	062 Call 0x3EB2AE0
	063 Move X0, X19
	064 Call 0x1D2D690
	065 Call 0x1991590

Method: System.Boolean TryCreateWebSocketUri(System.String uriString, out System.Uri result, out System.String message)

Disassembly:
	0x03E6BE2C B 0x3E6BF1C
	0x03E6BE30 ADRP X8, 0x2D2000
	0x03E6BE34 LDR X8, [X8 + 0x670]
	0x03E6BE38 B 0x3E6BF1C
	0x03E6BE3C ADRP X8, 0x2D2000
	0x03E6BE40 LDR X8, [X8 + 0x5B0]
	0x03E6BE44 B 0x3E6BF1C
	0x03E6BE48 ADRP X8, 0x2D2000
	0x03E6BE4C LDR X8, [X8 + 0x598]
	0x03E6BE50 B 0x3E6BF1C
	0x03E6BE54 ADRP X8, 0x2D2000
	0x03E6BE58 LDR X8, [X8 + 0x5A0]
	0x03E6BE5C B 0x3E6BF1C
	0x03E6BE60 ADRP X8, 0x2D2000
	0x03E6BE64 LDR X8, [X8 + 0x688]
	0x03E6BE68 B 0x3E6BF1C
	0x03E6BE6C ADRP X8, 0x2D2000
	0x03E6BE70 LDR X8, [X8 + 0x678]
	0x03E6BE74 B 0x3E6BF1C
	0x03E6BE78 ADRP X8, 0x2D2000
	0x03E6BE7C LDR X8, [X8 + 0x570]
	0x03E6BE80 B 0x3E6BF1C
	0x03E6BE84 ADRP X8, 0x2D2000
	0x03E6BE88 LDR X8, [X8 + 0x500]
	0x03E6BE8C B 0x3E6BF1C
	0x03E6BE90 ADRP X8, 0x2D2000
	0x03E6BE94 LDR X8, [X8 + 0x640]
	0x03E6BE98 B 0x3E6BF1C
	0x03E6BE9C ADRP X8, 0x2D2000
	0x03E6BEA0 LDR X8, [X8 + 0x550]
	0x03E6BEA4 B 0x3E6BF1C
	0x03E6BEA8 ADRP X8, 0x2D2000
	0x03E6BEAC LDR X8, [X8 + 0x6D0]
	0x03E6BEB0 B 0x3E6BF1C
	0x03E6BEB4 ADRP X8, 0x2D2000
	0x03E6BEB8 LDR X8, [X8 + 0x5E8]
	0x03E6BEBC B 0x3E6BF1C
	0x03E6BEC0 ADRP X8, 0x2D2000
	0x03E6BEC4 LDR X8, [X8 + 0x528]
	0x03E6BEC8 B 0x3E6BF1C
	0x03E6BECC ADRP X8, 0x2D2000
	0x03E6BED0 LDR X8, [X8 + 0x5E0]
	0x03E6BED4 B 0x3E6BF1C
	0x03E6BED8 ADRP X8, 0x2D2000
	0x03E6BEDC LDR X8, [X8 + 0x530]
	0x03E6BEE0 B 0x3E6BF1C
	0x03E6BEE4 ADRP X8, 0x2D2000
	0x03E6BEE8 LDR X8, [X8 + 0x648]
	0x03E6BEEC B 0x3E6BF1C
	0x03E6BEF0 ADRP X8, 0x2D2000
	0x03E6BEF4 LDR X8, [X8 + 0x518]
	0x03E6BEF8 B 0x3E6BF1C
	0x03E6BEFC ADRP X8, 0x2D2000
	0x03E6BF00 LDR X8, [X8 + 0x560]
	0x03E6BF04 B 0x3E6BF1C
	0x03E6BF08 ADRP X8, 0x2D2000
	0x03E6BF0C LDR X8, [X8 + 0x6D8]
	0x03E6BF10 B 0x3E6BF1C
	0x03E6BF14 ADRP X8, 0x2D2000
	0x03E6BF18 LDR X8, [X8 + 0x660]
	0x03E6BF1C LDR X0, [X8]
	0x03E6BF20 LDP X20, X19, [X31 + 0x10]
	0x03E6BF24 LDR X30, [X31], #0x20
	0x03E6BF28 RET
	0x03E6BF2C SUB W8, W0, 0x3E8
	0x03E6BF30 AND W8, W8, 0xFFFF
	0x03E6BF34 CMP W8, 0xFA0
	0x03E6BF38 CSET W0, CC
	0x03E6BF3C RET
	0x03E6BF40 STP X30, X21, [X31 - 0x20]!
	0x03E6BF44 STP X20, X19, [X31 + 0x10]
	0x03E6BF48 CBZ X0, 0x3E6BFA4
	0x03E6BF4C LDR W21, [X0 + 0x10]
	0x03E6BF50 MOV X20, X0
	0x03E6BF54 CMP W21, 0x2
	0x03E6BF58 B.LT 0x3E6BFA0
	0x03E6BF5C MOV W19, W1
	0x03E6BF60 MOV X0, X20
	0x03E6BF64 MOV W1, W31
	0x03E6BF68 MOV X2, X31
	0x03E6BF6C BL 0x3222A1C
	0x03E6BF70 AND W8, W0, 0xFFFF
	0x03E6BF74 CMP W8, W19, UXTH
	0x03E6BF78 MOV W0, W31
	0x03E6BF7C B.NE 0x3E6BFA4
	0x03E6BF80 SUB W1, W21, 0x1
	0x03E6BF84 MOV X0, X20
	0x03E6BF88 MOV X2, X31
	0x03E6BF8C BL 0x3222A1C
	0x03E6BF90 AND W8, W0, 0xFFFF
	0x03E6BF94 CMP W8, W19, UXTH
	0x03E6BF98 CSET W0, EQ
	0x03E6BF9C B 0x3E6BFA4
	0x03E6BFA0 MOV W0, W31
	0x03E6BFA4 LDP X20, X19, [X31 + 0x10]
	0x03E6BFA8 LDP X30, X21, [X31], #0x20
	0x03E6BFAC RET
	0x03E6BFB0 STR X30, [X31 - 0x30]!
	0x03E6BFB4 STP X22, X21, [X31 + 0x10]
	0x03E6BFB8 STP X20, X19, [X31 + 0x20]
	0x03E6BFBC ADRP X20, 0x57D000
	0x03E6BFC0 LDRB W8, [X20 + 0xD04]
	0x03E6BFC4 MOV X19, X0
	0x03E6BFC8 TBNZ X8, 0x0, 0x3E6BFEC
	0x03E6BFCC ADRP X0, 0x295000
	0x03E6BFD0 LDR X0, [X0 + 0x968]
	0x03E6BFD4 BL 0x1C16CF4
	0x03E6BFD8 ADRP X0, 0x291000
	0x03E6BFDC LDR X0, [X0 + 0x788]
	0x03E6BFE0 BL 0x1C16CF4
	0x03E6BFE4 MOVZ W8, 0x1
	0x03E6BFE8 STRB W8, [X20 + 0xD04]
	0x03E6BFEC CBZ X19, 0x3E6C164
	0x03E6BFF0 ADRP X20, 0x295000
	0x03E6BFF4 LDR X20, [X20 + 0x968]
	0x03E6BFF8 LDR X0, [X20]
	0x03E6BFFC LDR W8, [X0 + 0xE0]
	0x03E6C000 CBNZ W8, 0x3E6C00C
	0x03E6C004 BL 0x1C16DFC
	0x03E6C008 LDR X0, [X20]
	0x03E6C00C LDR X8, [X0 + 0xB8]
	0x03E6C010 LDR X9, [X19]
	0x03E6C014 MOV X0, X19
	0x03E6C018 LDR X1, [X8]
	0x03E6C01C LDP X8, X2, [X9 + 0x138]
	0x03E6C020 BLR X8
	0x03E6C024 TBNZ X0, 0x0, 0x3E6C0DC
	0x03E6C028 LDR X0, [X20]
	0x03E6C02C LDR W8, [X0 + 0xE0]
	0x03E6C030 CBNZ W8, 0x3E6C03C
	0x03E6C034 BL 0x1C16DFC
	0x03E6C038 LDR X0, [X20]
	0x03E6C03C LDR X8, [X0 + 0xB8]
	0x03E6C040 LDR X9, [X19]
	0x03E6C044 MOV X0, X19
	0x03E6C048 LDR X1, [X8 + 0x8]
	0x03E6C04C LDP X8, X2, [X9 + 0x138]
	0x03E6C050 BLR X8
	0x03E6C054 TBNZ X0, 0x0, 0x3E6C0DC
	0x03E6C058 ADRP X8, 0x290000
	0x03E6C05C LDR X8, [X8 + 0x788]
	0x03E6C060 LDR X0, [X8]
	0x03E6C064 LDR W8, [X0 + 0xE0]
	0x03E6C068 CBNZ W8, 0x3E6C070
	0x03E6C06C BL 0x1C16DFC
	0x03E6C070 MOV X0, X31
	0x03E6C074 BL 0x36BF1C0
	0x03E6C078 TBZ X0, 0x0, 0x3E6C0F4
	0x03E6C07C LDR X0, [X20]
	0x03E6C080 LDR W8, [X0 + 0xE0]
	0x03E6C084 CBNZ W8, 0x3E6C090
	0x03E6C088 BL 0x1C16DFC
	0x03E6C08C LDR X0, [X20]
	0x03E6C090 LDR X8, [X0 + 0xB8]
	0x03E6C094 LDR X9, [X19]
	0x03E6C098 MOV X0, X19
	0x03E6C09C LDR X1, [X8 + 0x20]
	0x03E6C0A0 LDP X8, X2, [X9 + 0x138]
	0x03E6C0A4 BLR X8
	0x03E6C0A8 TBNZ X0, 0x0, 0x3E6C0DC
	0x03E6C0AC LDR X0, [X20]
	0x03E6C0B0 LDR W8, [X0 + 0xE0]
	0x03E6C0B4 CBNZ W8, 0x3E6C0C0
	0x03E6C0B8 BL 0x1C16DFC
	0x03E6C0BC LDR X0, [X20]
	0x03E6C0C0 LDR X8, [X0 + 0xB8]
	0x03E6C0C4 LDR X9, [X19]
	0x03E6C0C8 MOV X0, X19
	0x03E6C0CC LDR X1, [X8 + 0x28]
	0x03E6C0D0 LDP X8, X2, [X9 + 0x138]
	0x03E6C0D4 BLR X8
	0x03E6C0D8 TBZ X0, 0x0, 0x3E6C0F4
	0x03E6C0DC MOVZ W0, 0x1
	0x03E6C0E0 LDP X20, X19, [X31 + 0x20]
	0x03E6C0E4 LDP X22, X21, [X31 + 0x10]
	0x03E6C0E8 AND W0, W0, 0x1
	0x03E6C0EC LDR X30, [X31], #0x30
	0x03E6C0F0 RET
	0x03E6C0F4 MOV X0, X31
	0x03E6C0F8 BL 0x369B748
	0x03E6C0FC MOV X1, X31
	0x03E6C100 BL 0x369B574
	0x03E6C104 CBZ X0, 0x3E6C1AC
	0x03E6C108 LDR X8, [X0 + 0x18]
	0x03E6C10C MOV X20, X0
	0x03E6C110 CMP W8, 0x1
	0x03E6C114 B.LT 0x3E6C158
	0x03E6C118 MOV X21, X31
	0x03E6C11C AND X8, X8, 0x0
	0x03E6C120 ADD X22, X20, 0x20
	0x03E6C124 CMP X21, W8, UXTW
	0x03E6C128 B.CS 0x3E6C160
	0x03E6C12C LDR X8, [X19]
	0x03E6C130 LDR X1, [X22, X21, LSL #3]
	0x03E6C134 MOV X0, X19
	0x03E6C138 LDP X9, X2, [X8 + 0x138]
	0x03E6C13C BLR X9
	0x03E6C140 TBNZ X0, 0x0, 0x3E6C0E0
	0x03E6C144 LDR W8, [X20 + 0x18]
	0x03E6C148 ADD X21, X21, 0x1
	0x03E6C14C CMP X21, W8, SXTW
	0x03E6C150 B.LT 0x3E6C124
	0x03E6C154 B 0x3E6C0E0
	0x03E6C158 MOV W0, W31
	0x03E6C15C B 0x3E6C0E0
	0x03E6C160 BL 0x1C16F28
	0x03E6C164 ADRP X0, 0x28C000
	0x03E6C168 LDR X0, [X0 + 0x528]
	0x03E6C16C BL 0x1C16D08
	0x03E6C170 BL 0x1C16F10
	0x03E6C174 MOV X19, X0
	0x03E6C178 ADRP X0, 0x2D1000
	0x03E6C17C LDR X0, [X0 + 0x738]
	0x03E6C180 BL 0x1C16D08
	0x03E6C184 MOV X1, X0
	0x03E6C188 MOV X0, X19
	0x03E6C18C MOV X2, X31
	0x03E6C190 BL 0x330E100
	0x03E6C194 ADRP X0, 0x300000
	0x03E6C198 LDR X0, [X0 + 0x388]
	0x03E6C19C BL 0x1C16D08
	0x03E6C1A0 MOV X1, X0
	0x03E6C1A4 MOV X0, X19

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X23, 0x57E000
	011 Move X22, 0x290000
	012 Move W8, [X23+3323]
	013 Move X22, [X22+584]
	014 Move X21, X2
	015 Move X19, X1
	016 Move X20, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {59}
	021 Move X0, 0x290000
	022 Move X0, [X0+584]
	023 Call 0x1C17CF4
	024 Move X0, 0x289000
	025 Move X0, [X0+1880]
	026 Call 0x1C17CF4
	027 Move X0, 0x289000
	028 Move X0, [X0+2512]
	029 Call 0x1C17CF4
	030 Move X0, 0x28B000
	031 Move X0, [X0+2600]
	032 Call 0x1C17CF4
	033 Move X0, 0x302000
	034 Move X0, [X0+832]
	035 Call 0x1C17CF4
	036 Move X0, 0x302000
	037 Move X0, [X0+840]
	038 Call 0x1C17CF4
	039 Move X0, 0x2C6000
	040 Move X0, [X0+3560]
	041 Call 0x1C17CF4
	042 Move X0, 0x292000
	043 Move X0, [X0+936]
	044 Call 0x1C17CF4
	045 Move X0, 0x302000
	046 Move X0, [X0+848]
	047 Call 0x1C17CF4
	048 Move X0, 0x302000
	049 Move X0, [X0+856]
	050 Call 0x1C17CF4
	051 Move X0, 0x291000
	052 Move X0, [X0+4072]
	053 Call 0x1C17CF4
	054 Move X0, 0x302000
	055 Move X0, [X0+864]
	056 Call 0x1C17CF4
	057 Move W8, 1
	058 Move [X23+3323], W8
	059 Move [X19], X31
	060 Move [X21], X31
	061 Move X0, [X22]
	062 Move X24, 0x28B000
	063 Move W8, [X0+224]
	064 Move X24, [X24+2600]
	065 Compare W8, 0
	066 JumpIfNotEqual {68}
	067 Call 0x1C17DFC
	068 Move X0, X20
	069 Call Ext.ToUri, X0
	070 Move X8, [X24]
	071 Move X20, X0
	072 Move W9, [X8+224]
	073 Compare W9, 0
	074 JumpIfNotEqual {77}
	075 Move X0, X8
	076 Call 0x1C17DFC
	077 Move X0, X20
	078 Move X1, X31
	079 Move X2, X31
	080 Call Uri.op_Equality, X0, X1
	081 Move TEMP, X0
	082 And TEMP, TEMP, 1
	083 Compare TEMP, 1
	084 JumpIfNotEqual {87}
	085 Move X8, 0x302000
	086 Move X8, [X8+832]
	087 Compare X20, 0
	088 JumpIfEqual {247}
	089 Move X0, X20
	090 Move X1, X31
	091 Call Uri.get_IsAbsoluteUri, X0
	092 Move TEMP, X0
	093 And TEMP, TEMP, 1
	094 Compare TEMP, 1
	095 JumpIfNotEqual {134}
	096 Move X0, X20
	097 Move X1, X31
	098 Call Uri.get_Scheme, X0
	099 Move X25, 0x292000
	100 Move X25, [X25+936]
	101 Move X2, X31
	102 Move X22, X0
	103 Move X1, [X25]
	104 Call String.op_Equality, X0, X1
	105 Move TEMP, X0
	106 And TEMP, TEMP, 1
	107 Compare TEMP, 1
	108 JumpIfEqual {119}
	109 Move X8, 0x2C6000
	110 Move X8, [X8+3560]
	111 Move X0, X22
	112 Move X2, X31
	113 Move X1, [X8]
	114 Call String.op_Equality, X0, X1
	115 Move TEMP, X0
	116 And TEMP, TEMP, 1
	117 Compare TEMP, 1
	118 JumpIfNotEqual {151}
	119 Move X0, X20
	120 Move X1, X31
	121 Call Uri.get_Port, X0
	122 Compare W0, 0
	123 JumpIfEqual {149}
	124 Move W23, W0
	125 Move X0, X20
	126 Move X1, X31
	127 Call Uri.get_Fragment, X0
	128 Compare X0, 0
	129 JumpIfEqual {247}
	130 Move W8, [X0+16]
	131 NotImplemented "Instruction CMP not yet implemented."
	132 Move X8, 0x302000
	133 Move X8, [X8+864]
	134 Move X8, 0x302000
	135 Move X8, [X8+848]
	136 Move W0, W31
	137 Move X8, [X8]
	138 Move [X21], X8
	139 Move X20, [X31+64]
	140 Move X19, [X31+72]
	141 Move X22, [X31+48]
	142 Move X21, [X31+56]
	143 Move X24, [X31+32]
	144 Move X23, [X31+40]
	145 Move X30, [X31+16]
	146 Move X25, [X31+24]
	147 Add X31, X31, 80
	148 Return X0
	149 Move X8, 0x301000
	150 Move X8, [X8+840]
	151 Move X8, 0x301000
	152 Move X8, [X8+856]
	153 Add W31, W23, 1
	154 Move X8, 0x288000
	155 Move X8, [X8+2512]
	156 Move W1, 4
	157 Move X0, [X8]
	158 Call 0x1C17D6C
	159 Compare X0, 0
	160 JumpIfEqual {247}
	161 Move X21, X0
	162 Compare X22, 0
	163 JumpIfEqual {170}
	164 Move X8, [X21]
	165 Move X0, X22
	166 Move X1, [X8+64]
	167 Call 0x1C17E00
	168 Compare X0, 0
	169 JumpIfEqual {249}
	170 Move W8, [X21+24]
	171 Compare W8, 0
	172 JumpIfEqual {248}
	173 Move X0, X20
	174 Move X1, X31
	175 Move [X21+32], X22
	176 Call Uri.get_Host, X0
	177 Move X23, X0
	178 Compare X0, 0
	179 JumpIfEqual {186}
	180 Move X8, [X21]
	181 Move X0, X23
	182 Move X1, [X8+64]
	183 Call 0x1C17E00
	184 Compare X0, 0
	185 JumpIfEqual {249}
	186 Move W8, [X21+24]
	187 NotImplemented "Instruction CMP not yet implemented."
	188 Move [X21+40], X23
	189 Move X1, [X25]
	190 Move X0, X22
	191 Move X2, X31
	192 Call String.op_Equality, X0, X1
	193 Move X8, 0x290000
	194 Move X10, 0x288000
	195 Move X8, [X8+4072]
	196 Move X10, [X10+1880]
	197 And W31, W0, 1
	198 Move W9, 443
	199 Move X22, [X8]
	200 Move X0, [X10]
	201 Move W8, 80
	202 NotImplemented "Instruction CSEL not yet implemented."
	203 Add X1, X31, 12
	204 Move [X31+12], W8
	205 Call 0x1C17E04
	206 Move X23, X0
	207 Compare X0, 0
	208 JumpIfEqual {215}
	209 Move X8, [X21]
	210 Move X0, X23
	211 Move X1, [X8+64]
	212 Call 0x1C17E00
	213 Compare X0, 0
	214 JumpIfEqual {249}
	215 Move W8, [X21+24]
	216 NotImplemented "Instruction CMP not yet implemented."
	217 Move X0, X20
	218 Move X1, X31
	219 Move [X21+48], X23
	220 Call Uri.get_PathAndQuery, X0
	221 Move X20, X0
	222 Compare X0, 0
	223 JumpIfEqual {230}
	224 Move X8, [X21]
	225 Move X0, X20
	226 Move X1, [X8+64]
	227 Call 0x1C17E00
	228 Compare X0, 0
	229 JumpIfEqual {249}
	230 Move W8, [X21+24]
	231 NotImplemented "Instruction CMP not yet implemented."
	232 Move X0, X22
	233 Move X1, X21
	234 Move X2, X31
	235 Move [X21+56], X20
	236 Call String.Format, X0, X1
	237 Move X8, [X24]
	238 Move X21, X0
	239 Move X0, X8
	240 Call 0x1C17F10
	241 Move X1, X21
	242 Move X2, X31
	243 Move X20, X0
	244 Call Uri..ctor, X0, X1
	245 Move W0, 1
	246 Move [X19], X20
	247 Call 0x1C17F20
	248 Call 0x1C17F28
	249 Call 0x1C17F44
	250 Move X1, X31
	251 Call 0x1C17DEC

Method: System.Boolean TryGetUTF8DecodedString(System.Byte[] bytes, out System.String s)

Disassembly:
	0x03E6C264 STP X30, X21, [X31 - 0x20]!
	0x03E6C268 STP X20, X19, [X31 + 0x10]
	0x03E6C26C ADRP X20, 0x57C000
	0x03E6C270 ADRP X21, 0x287000
	0x03E6C274 ADRP X19, 0x28E000
	0x03E6C278 LDRB W8, [X20 + 0xD07]
	0x03E6C27C LDR X21, [X21 + 0x618]
	0x03E6C280 LDR X19, [X19 + 0x248]
	0x03E6C284 TBNZ X8, 0x0, 0x3E6C2A8
	0x03E6C288 ADRP X0, 0x287000
	0x03E6C28C LDR X0, [X0 + 0x618]
	0x03E6C290 BL 0x1C16CF4
	0x03E6C294 ADRP X0, 0x28E000
	0x03E6C298 LDR X0, [X0 + 0x248]
	0x03E6C29C BL 0x1C16CF4
	0x03E6C2A0 MOVZ W8, 0x1
	0x03E6C2A4 STRB W8, [X20 + 0xD07]
	0x03E6C2A8 LDR X0, [X21]
	0x03E6C2AC MOVZ W1, 0x1
	0x03E6C2B0 BL 0x1C16D6C
	0x03E6C2B4 LDR X8, [X19]
	0x03E6C2B8 MOVZ W9, 0x5
	0x03E6C2BC LDR X8, [X8 + 0xB8]
	0x03E6C2C0 STR X0, [X8]
	0x03E6C2C4 LDR X8, [X19]
	0x03E6C2C8 LDP X20, X19, [X31 + 0x10]
	0x03E6C2CC LDR X8, [X8 + 0xB8]
	0x03E6C2D0 STR W9, [X8 + 0x8]
	0x03E6C2D4 LDP X30, X21, [X31], #0x20
	0x03E6C2D8 RET
	0x03E6C2DC STP X30, X23, [X31 - 0x30]!
	0x03E6C2E0 STP X22, X21, [X31 + 0x10]
	0x03E6C2E4 STP X20, X19, [X31 + 0x20]
	0x03E6C2E8 LDR W8, [X0 + 0x10]
	0x03E6C2EC CMP W8, W1
	0x03E6C2F0 B.NE 0x3E6C2FC
	0x03E6C2F4 MOV W0, W31
	0x03E6C2F8 B 0x3E6C3A4
	0x03E6C2FC LDR X8, [X0 + 0x18]
	0x03E6C300 MOV X19, X0
	0x03E6C304 CBZ X8, 0x3E6C374
	0x03E6C308 LDR W9, [X8 + 0x18]
	0x03E6C30C CMP W9, W1
	0x03E6C310 B.LS 0x3E6C3B4
	0x03E6C314 LDR W9, [X19 + 0x20]
	0x03E6C318 ADD W20, W1, 0x1
	0x03E6C31C CMP W20, W9
	0x03E6C320 B.GE 0x3E6C378
	0x03E6C324 ADD X9, X8, W1, 0x3, SXTW
	0x03E6C328 LDR X21, [X9 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X1
	005 Move X20, X0
	006 Move [X1], X31
	007 Move X0, X31
	008 Call Encoding.get_UTF8
	009 Compare X0, 0
	010 JumpIfEqual {22}
	011 Move X8, [X0]
	012 Move X9, [X8+888]
	013 Move X2, [X8+896]
	014 Move X1, X20
	015 NotImplemented "Instruction BLR not yet implemented."
	016 Move [X19], X0
	017 Move W0, 1
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Return X0
	022 Call 0x1C17F20
	023 Move X19, X0
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move X0, X19
	026 Call 0x3EB2AD0
	027 Move X19, X0
	028 Move X0, 0x28E000
	029 Move X0, [X0+3264]
	030 Call 0x1C17D08
	031 Move X8, [X19]
	032 Move X1, [X8]
	033 Call 0x1C18270
	034 Move TEMP, X0
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfNotEqual {40}
	038 Call 0x3EB2AE0
	039 Move W0, W31
	040 Move W0, 8
	041 Call 0x3EB2AF0
	042 Move X8, [X19]
	043 Move [X0], X8
	044 Move X1, 0x49000
	045 Add X1, X1, 3672
	046 Move X2, X31
	047 Call 0x3EB2B00
	048 Move X19, X0
	049 Call 0x3EB2AE0
	050 Move X0, X19
	051 Call 0x1D2D690
	052 Call 0x1991590

Method: System.Boolean TryGetUTF8EncodedBytes(System.String s, out System.Byte[] bytes)

Disassembly:
	0x03E6C32C SBFM X9, X20, 0x3D, 0x1F
	0x03E6C330 ADD X22, X9, 0x20
	0x03E6C334 MOV W23, W20
	0x03E6C338 LDR W9, [X8 + 0x18]
	0x03E6C33C CMP W23, W9
	0x03E6C340 B.CS 0x3E6C3B4
	0x03E6C344 LDR X0, [X8, X22, LSL]
	0x03E6C348 MOV X1, X21
	0x03E6C34C MOV X2, X31
	0x03E6C350 BL 0x321BA08
	0x03E6C354 TBNZ X0, 0x0, 0x3E6C3A0
	0x03E6C358 LDR W8, [X19 + 0x20]
	0x03E6C35C ADD W23, W23, 0x1
	0x03E6C360 CMP W23, W8
	0x03E6C364 B.GE 0x3E6C378
	0x03E6C368 LDR X8, [X19 + 0x18]
	0x03E6C36C ADD X22, X22, 0x8
	0x03E6C370 CBNZ X8, 0x3E6C338
	0x03E6C374 BL 0x1C16F20
	0x03E6C378 LDR X8, [X19 + 0x28]
	0x03E6C37C CBZ X8, 0x3E6C374
	0x03E6C380 LDR X3, [X8 + 0x18]
	0x03E6C384 LDR X0, [X8 + 0x40]
	0x03E6C388 LDR X2, [X8 + 0x28]
	0x03E6C38C MOV W1, W20
	0x03E6C390 LDP X20, X19, [X31 + 0x20]
	0x03E6C394 LDP X22, X21, [X31 + 0x10]
	0x03E6C398 LDP X30, X23, [X31], #0x30
	0x03E6C39C BR X3
	0x03E6C3A0 MOVZ W0, 0x1
	0x03E6C3A4 LDP X20, X19, [X31 + 0x20]
	0x03E6C3A8 LDP X22, X21, [X31 + 0x10]
	0x03E6C3AC LDP X30, X23, [X31], #0x30
	0x03E6C3B0 RET
	0x03E6C3B4 BL 0x1C16F28
	0x03E6C3B8 STR X30, [X31 - 0x20]!
	0x03E6C3BC STP X20, X19, [X31 + 0x10]
	0x03E6C3C0 MOV X19, X0
	0x03E6C3C4 LDR X0, [X0 + 0x10]
	0x03E6C3C8 CBZ X0, 0x3E6C45C
	0x03E6C3CC LDR X8, [X0]
	0x03E6C3D0 LDR X9, [X8 + 0x2C8]
	0x03E6C3D4 LDR X2, [X8 + 0x2D0]
	0x03E6C3D8 BLR X9
	0x03E6C3DC MOV W3, W0
	0x03E6C3E0 CMP W0, 0x1
	0x03E6C3E4 B.LT 0x3E6C438
	0x03E6C3E8 LDR X0, [X19 + 0x20]
	0x03E6C3EC CBZ X0, 0x3E6C460
	0x03E6C3F0 LDR X8, [X0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X1
	005 Move X20, X0
	006 Move [X1], X31
	007 Move X0, X31
	008 Call Encoding.get_UTF8
	009 Compare X0, 0
	010 JumpIfEqual {22}
	011 Move X8, [X0]
	012 Move X9, [X8+616]
	013 Move X2, [X8+624]
	014 Move X1, X20
	015 NotImplemented "Instruction BLR not yet implemented."
	016 Move [X19], X0
	017 Move W0, 1
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Return X0
	022 Call 0x1C17F20
	023 Move X19, X0
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move X0, X19
	026 Call 0x3EB2AD0
	027 Move X19, X0
	028 Move X0, 0x28E000
	029 Move X0, [X0+3264]
	030 Call 0x1C17D08
	031 Move X8, [X19]
	032 Move X1, [X8]
	033 Call 0x1C18270
	034 Move TEMP, X0
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfNotEqual {40}
	038 Call 0x3EB2AE0
	039 Move W0, W31
	040 Move W0, 8
	041 Call 0x3EB2AF0
	042 Move X8, [X19]
	043 Move [X0], X8
	044 Move X1, 0x49000
	045 Add X1, X1, 3672
	046 Move X2, X31
	047 Call 0x3EB2B00
	048 Move X19, X0
	049 Call 0x3EB2AE0
	050 Move X0, X19
	051 Call 0x1D2D690
	052 Call 0x1991590

Method: System.Boolean TryOpenRead(System.IO.FileInfo fileInfo, out System.IO.FileStream fileStream)

Disassembly:
	0x03E6C3F4 LDR X1, [X19 + 0x28]
	0x03E6C3F8 LDR X9, [X8 + 0x388]
	0x03E6C3FC LDR X4, [X8 + 0x390]
	0x03E6C400 MOV W2, W31
	0x03E6C404 BLR X9
	0x03E6C408 LDR X0, [X19 + 0x10]
	0x03E6C40C CBZ X0, 0x3E6C464
	0x03E6C410 LDR X8, [X0]
	0x03E6C414 LDR X1, [X19 + 0x28]
	0x03E6C418 LDR X4, [X19 + 0x38]
	0x03E6C41C LDR W3, [X19 + 0x30]
	0x03E6C420 LDR X9, [X8 + 0x2B8]
	0x03E6C424 LDR X6, [X8 + 0x2C0]
	0x03E6C428 MOV W2, W31
	0x03E6C42C MOV X5, X31
	0x03E6C430 BLR X9
	0x03E6C434 B 0x3E6C450
	0x03E6C438 LDR X8, [X19 + 0x18]
	0x03E6C43C CBZ X8, 0x3E6C450
	0x03E6C440 LDR X0, [X8 + 0x40]
	0x03E6C444 LDR X1, [X8 + 0x28]
	0x03E6C448 LDR X9, [X8 + 0x18]
	0x03E6C44C BLR X9
	0x03E6C450 LDP X20, X19, [X31 + 0x10]
	0x03E6C454 LDR X30, [X31], #0x20
	0x03E6C458 RET
	0x03E6C45C BL 0x1C16F20
	0x03E6C460 BL 0x1C16F20
	0x03E6C464 BL 0x1C16F20
	0x03E6C468 B 0x3E6C47C
	0x03E6C46C B 0x3E6C47C
	0x03E6C470 B 0x3E6C47C
	0x03E6C474 B 0x3E6C47C
	0x03E6C478 B 0x3E6C47C
	0x03E6C47C MOV X20, X0
	0x03E6C480 CMP W1, 0x1
	0x03E6C484 B.NE 0x3E6C504
	0x03E6C488 MOV X0, X20
	0x03E6C48C BL 0x3EB1AD0
	0x03E6C490 MOV X20, X0
	0x03E6C494 ADRP X0, 0x287000

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move [X1], X31
	004 Compare X0, 0
	005 JumpIfEqual {14}
	006 Move X19, X1
	007 Move X1, X31
	008 Call FileInfo.OpenRead, X0
	009 Move [X19], X0
	010 Move W0, 1
	011 Move X30, [X31+16]
	012 Move X19, [X31+24]
	013 Return X0
	014 Call 0x1C17F20
	015 Move X19, X0
	016 NotImplemented "Instruction CMP not yet implemented."
	017 Move X0, X19
	018 Call 0x3EB2AD0
	019 Move X19, X0
	020 Move X0, 0x28E000
	021 Move X0, [X0+3264]
	022 Call 0x1C17D08
	023 Move X8, [X19]
	024 Move X1, [X8]
	025 Call 0x1C18270
	026 Move TEMP, X0
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfNotEqual {32}
	030 Call 0x3EB2AE0
	031 Move W0, W31
	032 Move W0, 8
	033 Call 0x3EB2AF0
	034 Move X8, [X19]
	035 Move [X0], X8
	036 Move X1, 0x49000
	037 Add X1, X1, 3672
	038 Move X2, X31
	039 Call 0x3EB2B00
	040 Move X19, X0
	041 Call 0x3EB2AE0
	042 Move X0, X19
	043 Call 0x1D2D690
	044 Call 0x1991590

Method: System.String Unquote(System.String value)

Disassembly:
	0x03E6A0A4 ADRP X0, 0x289000
	0x03E6A0A8 LDR X0, [X0 + 0x618]
	0x03E6A0AC BL 0x1C16CF4
	0x03E6A0B0 ADRP X0, 0x291000
	0x03E6A0B4 LDR X0, [X0 + 0x558]
	0x03E6A0B8 BL 0x1C16CF4
	0x03E6A0BC ADRP X0, 0x302000
	0x03E6A0C0 LDR X0, [X0 + 0x310]
	0x03E6A0C4 BL 0x1C16CF4
	0x03E6A0C8 ADRP X0, 0x302000
	0x03E6A0CC LDR X0, [X0 + 0x300]
	0x03E6A0D0 BL 0x1C16CF4
	0x03E6A0D4 MOVZ W8, 0x1
	0x03E6A0D8 STRB W8, [X19 + 0xCEC]
	0x03E6A0DC LDR X0, [X25]
	0x03E6A0E0 BL 0x1C16F10
	0x03E6A0E4 MOV X1, X31
	0x03E6A0E8 MOV X19, X0
	0x03E6A0EC BL 0x33BDD8C
	0x03E6A0F0 CBZ X19, 0x3E6A21C
	0x03E6A0F4 ADRP X8, 0x291000
	0x03E6A0F8 LDR X8, [X8 + 0x558]
	0x03E6A0FC STR W23, [X19 + 0x10]
	0x03E6A100 STR X24, [X19 + 0x18]
	0x03E6A104 STR X22, [X19 + 0x38]
	0x03E6A108 STR X21, [X19 + 0x48]
	0x03E6A10C LDR X0, [X8]
	0x03E6A110 ADRP X22, 0x289000
	0x03E6A114 ADRP X23, 0x302000
	0x03E6A118 ADRP X24, 0x302000
	0x03E6A11C LDR X22, [X22 + 0x618]
	0x03E6A120 LDR X23, [X23 + 0x308]
	0x03E6A124 LDR X24, [X24 + 0x310]
	0x03E6A128 BL 0x1C16F10
	0x03E6A12C MOV X1, X31
	0x03E6A130 MOV X21, X0
	0x03E6A134 BL 0x32E23B4
	0x03E6A138 STR X21, [X19 + 0x40]
	0x03E6A13C LDR W1, [X19 + 0x10]
	0x03E6A140 LDR X0, [X22]
	0x03E6A144 BL 0x1C16D6C
	0x03E6A148 STR X0, [X19 + 0x20]
	0x03E6A14C STR W31, [X19 + 0x28]
	0x03E6A150 STR X31, [X19 + 0x30]
	0x03E6A154 LDR X0, [X23]
	0x03E6A158 BL 0x1C16F10
	0x03E6A15C LDR X2, [X24]
	0x03E6A160 MOV X1, X19
	0x03E6A164 MOV X3, X31
	0x03E6A168 MOV X21, X0
	0x03E6A16C BL 0x2984164
	0x03E6A170 STR X21, [X19 + 0x30]
	0x03E6A174 CBZ X21, 0x3E6A1A0
	0x03E6A178 LDR X0, [X21 + 0x40]
	0x03E6A17C LDR X8, [X21 + 0x18]
	0x03E6A180 LDR X2, [X21 + 0x28]
	0x03E6A184 MOV X1, X20
	0x03E6A188 BLR X8
	0x03E6A18C LDP X20, X19, [X31 + 0x30]
	0x03E6A190 LDP X22, X21, [X31 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x57F000
	005 Move W8, [X20+3324]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {22}
	011 Move X0, 0x28C000
	012 Move X0, [X0+632]
	013 Call 0x1C17CF4
	014 Move X0, 0x2BE000
	015 Move X0, [X0+2064]
	016 Call 0x1C17CF4
	017 Move X0, 0x295000
	018 Move X0, [X0+3288]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X20+3324], W8
	022 Compare X19, 0
	023 JumpIfEqual {66}
	024 Move W1, 34
	025 Move X0, X19
	026 Move X2, X31
	027 Call String.IndexOf, X0, X1
	028 Add W31, W0, 1
	029 Move W20, W0
	030 Move W1, 34
	031 Move X0, X19
	032 Move X2, X31
	033 Call String.LastIndexOf, X0, X1
	034 NotImplemented "Instruction CMP not yet implemented."
	035 NotImplemented "Instruction ORN not yet implemented."
	036 Add W2, W0, W8
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Add W1, W20, 1
	039 Move X0, X19
	040 Move X3, X31
	041 Call String.Substring, X0, X1, X2
	042 Compare X0, 0
	043 JumpIfEqual {66}
	044 Move X8, 0x2BE000
	045 Move X9, 0x295000
	046 Move X8, [X8+2064]
	047 Move X9, [X9+3288]
	048 Move X20, [X31+16]
	049 Move X19, [X31+24]
	050 Move X3, X31
	051 Move X1, [X8]
	052 Move X2, [X9]
	053 Move X30, [X31+32]
	054 Call String.Replace, X0, X1, X2
	055 Return X0
	056 Move X8, 0x28C000
	057 Move X8, [X8+632]
	058 Move X8, [X8]
	059 Move X8, [X8+184]
	060 Move X19, [X8]
	061 Move X0, X19
	062 Move X20, [X31+16]
	063 Move X19, [X31+24]
	064 Move X30, [X31+32]
	065 Return X0
	066 Call 0x1C17F20

Method: System.Boolean Upgrades(System.Collections.Specialized.NameValueCollection headers, System.String protocol)

Disassembly:
	0x03E6C498 LDR X0, [X0 + 0x7D0]
	0x03E6C49C BL 0x1C16D08
	0x03E6C4A0 LDR X8, [X20]
	0x03E6C4A4 LDR X1, [X8]
	0x03E6C4A8 BL 0x1C17270
	0x03E6C4AC TBZ X0, 0x0, 0x3E6C4DC
	0x03E6C4B0 LDR X20, [X20]
	0x03E6C4B4 BL 0x3EB1AE0
	0x03E6C4B8 LDR X8, [X19 + 0x40]
	0x03E6C4BC CBZ X8, 0x3E6C450
	0x03E6C4C0 LDR X3, [X8 + 0x18]
	0x03E6C4C4 LDR X0, [X8 + 0x40]
	0x03E6C4C8 LDR X2, [X8 + 0x28]
	0x03E6C4CC MOV X1, X20
	0x03E6C4D0 LDP X20, X19, [X31 + 0x10]
	0x03E6C4D4 LDR X30, [X31], #0x20
	0x03E6C4D8 BR X3
	0x03E6C4DC MOVZ W0, 0x8
	0x03E6C4E0 BL 0x3EB1AF0
	0x03E6C4E4 LDR X8, [X20]
	0x03E6C4E8 STR X8, [X0]
	0x03E6C4EC ADRP X1, 0x48000
	0x03E6C4F0 ADD X1, X1, 0xE58
	0x03E6C4F4 MOV X2, X31
	0x03E6C4F8 BL 0x3EB1B00
	0x03E6C4FC MOV X20, X0
	0x03E6C500 BL 0x3EB1AE0
	0x03E6C504 MOV X0, X20
	0x03E6C508 BL 0x1D2C690
	0x03E6C50C BL 0x1990590
	0x03E6C510 STR X30, [X31 - 0x30]!
	0x03E6C514 STP X22, X21, [X31 + 0x10]
	0x03E6C518 STP X20, X19, [X31 + 0x20]
	0x03E6C51C ADRP X21, 0x57C000
	0x03E6C520 LDRB W8, [X21 + 0xD08]
	0x03E6C524 MOV X20, X1
	0x03E6C528 MOV X19, X0
	0x03E6C52C TBNZ X8, 0x0, 0x3E6C550
	0x03E6C530 ADRP X0, 0x300000
	0x03E6C534 LDR X0, [X0 + 0x2E8]
	0x03E6C538 BL 0x1C16CF4
	0x03E6C53C ADRP X0, 0x28E000
	0x03E6C540 LDR X0, [X0 + 0x248]
	0x03E6C544 BL 0x1C16CF4
	0x03E6C548 MOVZ W8, 0x1
	0x03E6C54C STRB W8, [X21 + 0xD08]
	0x03E6C550 LDR X0, [X19 + 0x10]
	0x03E6C554 CBZ X0, 0x3E6C6A8
	0x03E6C558 LDR X8, [X0]
	0x03E6C55C LDR X9, [X8 + 0x2C8]
	0x03E6C560 LDR X2, [X8 + 0x2D0]
	0x03E6C564 MOV X1, X20

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x57D000
	007 Move X21, 0x28F000
	008 Move W8, [X22+3325]
	009 Move X21, [X21+584]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {27}
	016 Move X0, 0x28F000
	017 Move X0, [X0+584]
	018 Call 0x1C17CF4
	019 Move X0, 0x2CF000
	020 Move X0, [X0+2568]
	021 Call 0x1C17CF4
	022 Move X0, 0x2CF000
	023 Move X0, [X0+344]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X22+3325], W8
	027 Move X0, [X21]
	028 Move X22, 0x2CF000
	029 Move W8, [X0+224]
	030 Move X22, [X22+2568]
	031 Compare W8, 0
	032 JumpIfNotEqual {34}
	033 Call 0x1C17DFC
	034 Move X1, [X22]
	035 Move W3, 5
	036 Move X0, X19
	037 Move X2, X20
	038 Call Ext.Contains, X0, X1, X2, X3
	039 Move TEMP, X0
	040 And TEMP, TEMP, 1
	041 Compare TEMP, 1
	042 JumpIfNotEqual {61}
	043 Move X0, [X21]
	044 Move X20, 0x2CF000
	045 Move W8, [X0+224]
	046 Move X20, [X20+344]
	047 Compare W8, 0
	048 JumpIfNotEqual {50}
	049 Call 0x1C17DFC
	050 Move X1, [X20]
	051 Move X2, [X22]
	052 Move X0, X19
	053 Move X20, [X31+32]
	054 Move X19, [X31+40]
	055 Move X22, [X31+16]
	056 Move X21, [X31+24]
	057 Move W3, 5
	058 Move X30, [X31+48]
	059 Call Ext.Contains, X0, X1, X2, X3
	060 Return X0
	061 Move X20, [X31+32]
	062 Move X19, [X31+40]
	063 Move X22, [X31+16]
	064 Move X21, [X31+24]
	065 Move W0, W31
	066 Move X30, [X31+48]
	067 Return X0

Method: System.String UrlDecode(System.String value, System.Text.Encoding encoding)

Disassembly:
	0x03E6C568 BLR X9
	0x03E6C56C CMP W0, 0x1
	0x03E6C570 B.LT 0x3E6C5A0
	0x03E6C574 LDR W8, [X19 + 0x2C]
	0x03E6C578 SUBS W3, W8, W0
	0x03E6C57C B.NE 0x3E6C60C
	0x03E6C580 LDR X8, [X19 + 0x38]
	0x03E6C584 CBZ X8, 0x3E6C698
	0x03E6C588 LDR X1, [X19 + 0x20]
	0x03E6C58C LDR X0, [X8 + 0x40]
	0x03E6C590 LDR X9, [X8 + 0x18]
	0x03E6C594 LDR X2, [X8 + 0x28]
	0x03E6C598 BLR X9
	0x03E6C59C B 0x3E6C698
	0x03E6C5A0 ADRP X21, 0x28E000
	0x03E6C5A4 LDR X21, [X21 + 0x248]
	0x03E6C5A8 LDR W20, [X19 + 0x18]
	0x03E6C5AC LDR X8, [X21]
	0x03E6C5B0 LDR W9, [X8 + 0xE0]
	0x03E6C5B4 CBNZ W9, 0x3E6C5C4
	0x03E6C5B8 MOV X0, X8
	0x03E6C5BC BL 0x1C16DFC
	0x03E6C5C0 LDR X8, [X21]
	0x03E6C5C4 LDR X9, [X8 + 0xB8]
	0x03E6C5C8 LDR W9, [X9 + 0x8]
	0x03E6C5CC CMP W20, W9

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x57D000
	007 Move X22, 0x301000
	008 Move W8, [X21+3326]
	009 Move X22, [X22+872]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x301000
	017 Move X0, [X0+872]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+3326], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move X0, X20
	027 Move X1, X19
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X2, X31
	033 Move X30, [X31+48]
	034 Call HttpUtility.UrlDecode, X0, X1
	035 Return X0

Method: System.String UrlEncode(System.String value, System.Text.Encoding encoding)

Disassembly:
	0x03E6C5D0 B.GE 0x3E6C648
	0x03E6C5D4 LDR W8, [X19 + 0x18]
	0x03E6C5D8 LDR X0, [X19 + 0x10]
	0x03E6C5DC ADD W8, W8, 0x1
	0x03E6C5E0 STR W8, [X19 + 0x18]
	0x03E6C5E4 CBZ X0, 0x3E6C6B0
	0x03E6C5E8 LDR X8, [X0]
	0x03E6C5EC LDR X1, [X19 + 0x20]
	0x03E6C5F0 LDR X4, [X19 + 0x30]
	0x03E6C5F4 LDP W2, W3, [X19 + 0x28]
	0x03E6C5F8 LDR X9, [X8 + 0x2B8]
	0x03E6C5FC LDR X6, [X8 + 0x2C0]
	0x03E6C600 MOV X5, X31
	0x03E6C604 BLR X9
	0x03E6C608 B 0x3E6C698
	0x03E6C60C LDR W9, [X19 + 0x28]
	0x03E6C610 LDR X8, [X19 + 0x10]
	0x03E6C614 STR W31, [X19 + 0x18]
	0x03E6C618 ADD W2, W9, W0
	0x03E6C61C STP W2, W3, [X19 + 0x28]
	0x03E6C620 CBZ X8, 0x3E6C6AC
	0x03E6C624 LDR X9, [X8]
	0x03E6C628 LDR X1, [X19 + 0x20]
	0x03E6C62C LDR X4, [X19 + 0x30]
	0x03E6C630 LDR X10, [X9 + 0x2B8]
	0x03E6C634 LDR X6, [X9 + 0x2C0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x57D000
	007 Move X22, 0x301000
	008 Move W8, [X21+3327]
	009 Move X22, [X22+872]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x301000
	017 Move X0, [X0+872]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+3327], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move X0, X20
	027 Move X1, X19
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X2, X31
	033 Move X30, [X31+48]
	034 Call HttpUtility.UrlEncode, X0, X1
	035 Return X0

Method: System.Void WriteBytes(System.IO.Stream stream, System.Byte[] bytes, System.Int32 bufferLength)

Disassembly:
	0x03E6C638 MOV X0, X8
	0x03E6C63C MOV X5, X31
	0x03E6C640 BLR X10
	0x03E6C644 B 0x3E6C698
	0x03E6C648 LDR X22, [X19 + 0x38]
	0x03E6C64C CBZ X22, 0x3E6C698
	0x03E6C650 LDR X20, [X19 + 0x20]
	0x03E6C654 LDR W9, [X8 + 0xE0]
	0x03E6C658 LDR W21, [X19 + 0x28]
	0x03E6C65C CBNZ W9, 0x3E6C668
	0x03E6C660 MOV X0, X8
	0x03E6C664 BL 0x1C16DFC
	0x03E6C668 ADRP X8, 0x300000
	0x03E6C66C LDR X8, [X8 + 0x2E8]
	0x03E6C670 LDR X3, [X8]
	0x03E6C674 MOV X0, X20
	0x03E6C678 MOV W1, W31
	0x03E6C67C MOV W2, W21
	0x03E6C680 BL 0x21E25A8
	0x03E6C684 MOV X1, X0
	0x03E6C688 LDR X0, [X22 + 0x40]
	0x03E6C68C LDR X8, [X22 + 0x18]
	0x03E6C690 LDR X2, [X22 + 0x28]
	0x03E6C694 BLR X8
	0x03E6C698 LDP X20, X19, [X31 + 0x20]
	0x03E6C69C LDP X22, X21, [X31 + 0x10]
	0x03E6C6A0 LDR X30, [X31], #0x30
	0x03E6C6A4 RET
	0x03E6C6A8 BL 0x1C16F20
	0x03E6C6AC BL 0x1C16F20
	0x03E6C6B0 BL 0x1C16F20
	0x03E6C6B4 B 0x3E6C6D8
	0x03E6C6B8 B 0x3E6C6D8
	0x03E6C6BC B 0x3E6C6D8
	0x03E6C6C0 B 0x3E6C6D8
	0x03E6C6C4 B 0x3E6C6D8
	0x03E6C6C8 B 0x3E6C6D8
	0x03E6C6CC B 0x3E6C6D8
	0x03E6C6D0 B 0x3E6C6D8
	0x03E6C6D4 B 0x3E6C6D8
	0x03E6C6D8 MOV X20, X0
	0x03E6C6DC CMP W1, 0x1
	0x03E6C6E0 B.NE 0x3E6C764
	0x03E6C6E4 MOV X0, X20
	0x03E6C6E8 BL 0x3EB1AD0
	0x03E6C6EC MOV X20, X0
	0x03E6C6F0 ADRP X0, 0x287000
	0x03E6C6F4 LDR X0, [X0 + 0x7D0]
	0x03E6C6F8 BL 0x1C16D08
	0x03E6C6FC LDR X8, [X20]
	0x03E6C700 LDR X1, [X8]
	0x03E6C704 BL 0x1C17270
	0x03E6C708 TBZ X0, 0x0, 0x3E6C73C
	0x03E6C70C LDR X20, [X20]
	0x03E6C710 BL 0x3EB1AE0
	0x03E6C714 LDR X8, [X19 + 0x40]
	0x03E6C718 CBZ X8, 0x3E6C698
	0x03E6C71C LDR X3, [X8 + 0x18]
	0x03E6C720 LDR X0, [X8 + 0x40]
	0x03E6C724 LDR X2, [X8 + 0x28]
	0x03E6C728 MOV X1, X20
	0x03E6C72C LDP X20, X19, [X31 + 0x20]
	0x03E6C730 LDP X22, X21, [X31 + 0x10]
	0x03E6C734 LDR X30, [X31], #0x30
	0x03E6C738 BR X3
	0x03E6C73C MOVZ W0, 0x8
	0x03E6C740 BL 0x3EB1AF0
	0x03E6C744 LDR X8, [X20]
	0x03E6C748 STR X8, [X0]
	0x03E6C74C ADRP X1, 0x48000
	0x03E6C750 ADD X1, X1, 0xE58
	0x03E6C754 MOV X2, X31
	0x03E6C758 BL 0x3EB1B00
	0x03E6C75C MOV X20, X0
	0x03E6C760 BL 0x3EB1AE0
	0x03E6C764 MOV X0, X20
	0x03E6C768 BL 0x1D2C690
	0x03E6C76C BL 0x1990590
	0x03E6C770 STP X30, X23, [X31 - 0x30]!
	0x03E6C774 STP X22, X21, [X31 + 0x10]
	0x03E6C778 STP X20, X19, [X31 + 0x20]
	0x03E6C77C ADRP X21, 0x57C000
	0x03E6C780 ADRP X22, 0x300000
	0x03E6C784 LDRB W8, [X21 + 0xD09]
	0x03E6C788 LDR X22, [X22 + 0x390]
	0x03E6C78C MOV X20, X1
	0x03E6C790 MOV X19, X0
	0x03E6C794 TBNZ X8, 0x0, 0x3E6C7C4
	0x03E6C798 ADRP X0, 0x2AF000
	0x03E6C79C LDR X0, [X0 + 0x720]
	0x03E6C7A0 BL 0x1C16CF4
	0x03E6C7A4 ADRP X0, 0x300000
	0x03E6C7A8 LDR X0, [X0 + 0x398]
	0x03E6C7AC BL 0x1C16CF4
	0x03E6C7B0 ADRP X0, 0x300000
	0x03E6C7B4 LDR X0, [X0 + 0x390]
	0x03E6C7B8 BL 0x1C16CF4
	0x03E6C7BC MOVZ W8, 0x1
	0x03E6C7C0 STRB W8, [X21 + 0xD09]
	0x03E6C7C4 LDR X0, [X22]
	0x03E6C7C8 BL 0x1C16F10
	0x03E6C7CC MOV X1, X31
	0x03E6C7D0 MOV X22, X0
	0x03E6C7D4 BL 0x33BDD8C
	0x03E6C7D8 CBZ X22, 0x3E6C85C
	0x03E6C7DC STP X20, X19, [X22 + 0x10]
	0x03E6C7E0 LDRSW X21, [X19 + 0x10]
	0x03E6C7E4 ADRP X8, 0x2AF000
	0x03E6C7E8 ADRP X23, 0x300000
	0x03E6C7EC LDR X8, [X8 + 0x720]
	0x03E6C7F0 LDR X23, [X23 + 0x398]
	0x03E6C7F4 CMP X21, X20
	0x03E6C7F8 B.LE 0x3E6C804

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0x57D000
	009 Move X19, 0x290000
	010 Move X24, 0x28F000
	011 Move W8, [X23+3328]
	012 Move X19, [X19+1368]
	013 Move X24, [X24+584]
	014 Move W20, W2
	015 Move X22, X1
	016 Move X21, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {32}
	021 Move X0, 0x28F000
	022 Move X0, [X0+584]
	023 Call 0x1C17CF4
	024 Move X0, 0x288000
	025 Move X0, [X0+3584]
	026 Call 0x1C17CF4
	027 Move X0, 0x290000
	028 Move X0, [X0+1368]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X23+3328], W8
	032 Move X0, [X19]
	033 Move X23, 0x288000
	034 Move X23, [X23+3584]
	035 Call 0x1C17F10
	036 Move X1, X22
	037 Move X2, X31
	038 Move X19, X0
	039 Call MemoryStream..ctor, X0, X1
	040 Move X0, [X24]
	041 Move W8, [X0+224]
	042 Compare W8, 0
	043 JumpIfNotEqual {45}
	044 Call 0x1C17DFC
	045 Move X0, X19
	046 Move X1, X21
	047 Move W2, W20
	048 Call Ext.CopyTo, X0, X1, X2
	049 Move X20, X31
	050 Compare X19, 0
	051 JumpIfEqual {73}
	052 Move X8, [X19]
	053 Move X1, [X23]
	054 NotImplemented "Instruction LDRH not yet implemented."
	055 Compare X9, 0
	056 JumpIfEqual {63}
	057 Move X10, [X8+176]
	058 Add X10, X10, 8
	059 NotImplemented "Instruction LDUR not yet implemented."
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Subtract X9, X9, 1
	062 Add X10, X10, 16
	063 Move X0, X19
	064 Move W2, W31
	065 Call 0x1C5D788
	066 NotImplemented "Instruction LDRSW not yet implemented."
	067 Add X8, X8, X9
	068 Add X0, X8, 312
	069 Move X8, [X0]
	070 Move X1, [X0+8]
	071 Move X0, X19
	072 NotImplemented "Instruction BLR not yet implemented."
	073 Compare X20, 0
	074 JumpIfNotEqual {83}
	075 Move X20, [X31+48]
	076 Move X19, [X31+56]
	077 Move X22, [X31+32]
	078 Move X21, [X31+40]
	079 Move X24, [X31+16]
	080 Move X23, [X31+24]
	081 Move X30, [X31+64]
	082 Return 
	083 Move X0, X20
	084 Call 0x1C17F18
	085 NotImplemented "Instruction CMP not yet implemented."
	086 Move X21, X0
	087 Move X0, X21
	088 Call 0x3EB2AD0
	089 Move X20, [X0]
	090 Call 0x3EB2AE0
	091 Move X20, X31
	092 Move X21, X0
	093 Compare X19, 0
	094 JumpIfEqual {116}
	095 Move X8, [X19]
	096 Move X1, [X23]
	097 NotImplemented "Instruction LDRH not yet implemented."
	098 Compare X9, 0
	099 JumpIfEqual {106}
	100 Move X10, [X8+176]
	101 Add X10, X10, 8
	102 NotImplemented "Instruction LDUR not yet implemented."
	103 NotImplemented "Instruction CMP not yet implemented."
	104 Subtract X9, X9, 1
	105 Add X10, X10, 16
	106 Move X0, X19
	107 Move W2, W31
	108 Call 0x1C5D788
	109 NotImplemented "Instruction LDRSW not yet implemented."
	110 Add X8, X8, X9
	111 Add X0, X8, 312
	112 Move X8, [X0]
	113 Move X1, [X0+8]
	114 Move X0, X19
	115 NotImplemented "Instruction BLR not yet implemented."
	116 Compare X20, 0
	117 JumpIfNotEqual {120}
	118 Move X0, X21
	119 Call 0x1D2D690
	120 Move X0, X20
	121 Call 0x1C17F18
	122 Call 0x1991590

Method: System.Void WriteBytesAsync(System.IO.Stream stream, System.Byte[] bytes, System.Int32 bufferLength, System.Action completed, System.Action`1<System.Exception> error)

Disassembly:
	0x03E6C7FC MOV W21, W20
	0x03E6C800 STR W20, [X19 + 0x10]
	0x03E6C804 LDR X0, [X8]
	0x03E6C808 LDP X20, X19, [X19 + 0x18]
	0x03E6C80C BL 0x1C16F10
	0x03E6C810 LDR X2, [X23]
	0x03E6C814 MOV X1, X22
	0x03E6C818 MOV X3, X31
	0x03E6C81C MOV X23, X0
	0x03E6C820 BL 0x3316570
	0x03E6C824 CBZ X20, 0x3E6C85C
	0x03E6C828 LDR X8, [X20]
	0x03E6C82C MOV X0, X20
	0x03E6C830 MOV X1, X19
	0x03E6C834 MOV W3, W21
	0x03E6C838 LDR X7, [X8 + 0x2B8]
	0x03E6C83C LDR X6, [X8 + 0x2C0]
	0x03E6C840 LDP X20, X19, [X31 + 0x20]
	0x03E6C844 LDP X22, X21, [X31 + 0x10]
	0x03E6C848 MOV W2, W31
	0x03E6C84C MOV X4, X23
	0x03E6C850 MOV X5, X31
	0x03E6C854 LDP X30, X23, [X31], #0x30
	0x03E6C858 BR X7
	0x03E6C85C BL 0x1C16F20
	0x03E6C860 MOV X1, X31
	0x03E6C864 B 0x33BDD8C
	0x03E6C868 STP X30, X21, [X31 - 0x20]!
	0x03E6C86C STP X20, X19, [X31 + 0x10]
	0x03E6C870 ADRP X21, 0x57C000
	0x03E6C874 LDRB W8, [X21 + 0xD0A]
	0x03E6C878 MOV X20, X1
	0x03E6C87C MOV X19, X0
	0x03E6C880 TBNZ X8, 0x0, 0x3E6C898
	0x03E6C884 ADRP X0, 0x28E000
	0x03E6C888 LDR X0, [X0 + 0x248]
	0x03E6C88C BL 0x1C16CF4
	0x03E6C890 MOVZ W8, 0x1
	0x03E6C894 STRB W8, [X21 + 0xD0A]
	0x03E6C898 LDR X8, [X19 + 0x18]
	0x03E6C89C CBZ X8, 0x3E6CA94
	0x03E6C8A0 LDR X0, [X8 + 0x18]
	0x03E6C8A4 CBZ X0, 0x3E6CA98
	0x03E6C8A8 LDR X8, [X0]
	0x03E6C8AC LDR X9, [X8 + 0x2C8]
	0x03E6C8B0 LDR X2, [X8 + 0x2D0]
	0x03E6C8B4 MOV X1, X20
	0x03E6C8B8 BLR X9
	0x03E6C8BC LDR X8, [X19 + 0x18]
	0x03E6C8C0 MOV W20, W0
	0x03E6C8C4 CMP W0, 0x1
	0x03E6C8C8 B.LT 0x3E6C97C
	0x03E6C8CC CBZ X8, 0x3E6CA9C
	0x03E6C8D0 LDR X0, [X8 + 0x40]
	0x03E6C8D4 CBZ X0, 0x3E6CAA0
	0x03E6C8D8 LDR X9, [X0]
	0x03E6C8DC LDR X1, [X8 + 0x20]
	0x03E6C8E0 LDR X8, [X9 + 0x388]
	0x03E6C8E4 LDR X4, [X9 + 0x390]
	0x03E6C8E8 MOV W2, W31
	0x03E6C8EC MOV W3, W20
	0x03E6C8F0 BLR X8
	0x03E6C8F4 LDP X9, X8, [X19 + 0x10]
	0x03E6C8F8 CMP X9, W20, UXTW
	0x03E6C8FC B.NE 0x3E6C9E4
	0x03E6C900 CBZ X8, 0x3E6CAA8
	0x03E6C904 LDR X9, [X8 + 0x38]
	0x03E6C908 CBZ X9, 0x3E6C968
	0x03E6C90C LDR X0, [X8 + 0x40]
	0x03E6C910 CBZ X0, 0x3E6CAB8
	0x03E6C914 LDR X8, [X0]
	0x03E6C918 LDR X1, [X8 + 0x280]
	0x03E6C91C LDR X9, [X8 + 0x278]
	0x03E6C920 BLR X9
	0x03E6C924 LDR X8, [X19 + 0x18]
	0x03E6C928 CBZ X8, 0x3E6CABC
	0x03E6C92C LDR X0, [X8 + 0x40]
	0x03E6C930 CBZ X0, 0x3E6CAC0
	0x03E6C934 LDR X9, [X0]
	0x03E6C938 LDR X20, [X8 + 0x38]
	0x03E6C93C LDR X1, [X9 + 0x400]
	0x03E6C940 LDR X8, [X9 + 0x3F8]
	0x03E6C944 BLR X8
	0x03E6C948 MOV X1, X0
	0x03E6C94C CBZ X20, 0x3E6CAC4
	0x03E6C950 LDR X0, [X20 + 0x40]
	0x03E6C954 LDR X8, [X20 + 0x18]
	0x03E6C958 LDR X2, [X20 + 0x28]
	0x03E6C95C BLR X8
	0x03E6C960 LDR X8, [X19 + 0x18]
	0x03E6C964 CBZ X8, 0x3E6CAC8
	0x03E6C968 LDR X0, [X8 + 0x40]
	0x03E6C96C CBZ X0, 0x3E6CAB4
	0x03E6C970 MOV X1, X31
	0x03E6C974 BL 0x32F02B8
	0x03E6C978 B 0x3E6CA88
	0x03E6C97C CBZ X8, 0x3E6CAA4

ISIL:
	001 Move [X31-96], X30
	002 Move [X31+16], X28
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X24, 0x57D000
	013 Move X25, 0x301000
	014 Move W8, [X24+3329]
	015 Move X25, [X25+880]
	016 Move X22, X4
	017 Move X23, X3
	018 Move W19, W2
	019 Move X21, X1
	020 Move X20, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {48}
	025 Move X0, 0x28B000
	026 Move X0, [X0+712]
	027 Call 0x1C17CF4
	028 Move X0, 0x289000
	029 Move X0, [X0+3696]
	030 Call 0x1C17CF4
	031 Move X0, 0x28F000
	032 Move X0, [X0+584]
	033 Call 0x1C17CF4
	034 Move X0, 0x290000
	035 Move X0, [X0+1368]
	036 Call 0x1C17CF4
	037 Move X0, 0x301000
	038 Move X0, [X0+888]
	039 Call 0x1C17CF4
	040 Move X0, 0x301000
	041 Move X0, [X0+896]
	042 Call 0x1C17CF4
	043 Move X0, 0x301000
	044 Move X0, [X0+880]
	045 Call 0x1C17CF4
	046 Move W8, 1
	047 Move [X24+3329], W8
	048 Move X0, [X25]
	049 Call 0x1C17F10
	050 Move X1, X31
	051 Move X24, X0
	052 Call Object..ctor, X0
	053 Compare X24, 0
	054 JumpIfEqual {113}
	055 Move X8, 0x290000
	056 Move X8, [X8+1368]
	057 Move X25, 0x289000
	058 Move X26, 0x301000
	059 Move X25, [X25+3696]
	060 Move X26, [X26+888]
	061 Move [X24+16], X23
	062 Move [X24+32], X22
	063 Move X0, [X8]
	064 Move X23, 0x28B000
	065 Move X27, 0x301000
	066 Move X28, 0x28F000
	067 Move X23, [X23+712]
	068 Move X27, [X27+896]
	069 Move X28, [X28+584]
	070 Call 0x1C17F10
	071 Move X1, X21
	072 Move X2, X31
	073 Move X22, X0
	074 Call MemoryStream..ctor, X0, X1
	075 Move [X24+24], X22
	076 Move X0, [X25]
	077 Call 0x1C17F10
	078 Move X2, [X26]
	079 Move X1, X24
	080 Move X3, X31
	081 Move X21, X0
	082 Call Action..ctor, X0, X1, X2
	083 Move X0, [X23]
	084 Call 0x1C17F10
	085 Move X2, [X27]
	086 Move X1, X24
	087 Move X3, X31
	088 Move X23, X0
	089 Call Action`1<Object>..ctor, X0, X1, X2
	090 Move X0, [X28]
	091 Move W8, [X0+224]
	092 Compare W8, 0
	093 JumpIfNotEqual {95}
	094 Call 0x1C17DFC
	095 Move X0, X22
	096 Move X1, X20
	097 Move W2, W19
	098 Move X3, X21
	099 Move X4, X23
	100 Move X20, [X31+80]
	101 Move X19, [X31+88]
	102 Move X22, [X31+64]
	103 Move X21, [X31+72]
	104 Move X24, [X31+48]
	105 Move X23, [X31+56]
	106 Move X26, [X31+32]
	107 Move X25, [X31+40]
	108 Move X28, [X31+16]
	109 Move X27, [X31+24]
	110 Move X30, [X31+96]
	111 Call Ext.CopyToAsync, X0, X1, X2, X3, X4
	112 Return 
	113 Call 0x1C17F20

Method: System.String GetDescription(WebSocketSharp.Net.HttpStatusCode code)

Disassembly:
	0x03E6C988 LDR W20, [X8 + 0x28]
	0x03E6C98C LDR X0, [X21]
	0x03E6C990 LDR W9, [X0 + 0xE0]
	0x03E6C994 CBNZ W9, 0x3E6C9A4
	0x03E6C998 BL 0x1C16DFC
	0x03E6C99C LDR X0, [X21]
	0x03E6C9A0 LDR X8, [X19 + 0x18]
	0x03E6C9A4 LDR X9, [X0 + 0xB8]
	0x03E6C9A8 LDR W9, [X9 + 0x8]
	0x03E6C9AC CMP W20, W9
	0x03E6C9B0 B.GE 0x3E6CA10
	0x03E6C9B4 CBZ X8, 0x3E6CACC
	0x03E6C9B8 LDR W10, [X8 + 0x28]
	0x03E6C9BC LDR X9, [X8 + 0x30]
	0x03E6C9C0 ADD W10, W10, 0x1
	0x03E6C9C4 STR W10, [X8 + 0x28]
	0x03E6C9C8 CBZ X9, 0x3E6CAD4
	0x03E6C9CC LDR X1, [X19 + 0x10]
	0x03E6C9D0 LDR X0, [X9 + 0x40]
	0x03E6C9D4 LDR X8, [X9 + 0x18]
	0x03E6C9D8 LDR X2, [X9 + 0x28]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x57D000
	006 Move X21, 0x28F000
	007 Move W8, [X20+3330]
	008 Move X21, [X21+584]
	009 Move W19, W0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x28F000
	015 Move X0, [X0+584]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3330], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move W0, W19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Move X21, [X31+40]

Method: System.String GetStatusDescription(System.Int32 code)

Disassembly:
	0x03E6C9DC BLR X8
	0x03E6C9E0 B 0x3E6CA88
	0x03E6C9E4 CBZ X8, 0x3E6CAAC
	0x03E6C9E8 LDR X10, [X8 + 0x30]
	0x03E6C9EC STR W31, [X8 + 0x28]
	0x03E6C9F0 CBZ X10, 0x3E6CAB0
	0x03E6C9F4 LDR X0, [X10 + 0x40]
	0x03E6C9F8 LDR X8, [X10 + 0x18]
	0x03E6C9FC LDR X2, [X10 + 0x28]
	0x03E6CA00 MOV W10, W20
	0x03E6CA04 SUB X1, X9, X10
	0x03E6CA08 BLR X8
	0x03E6CA0C B 0x3E6CA88
	0x03E6CA10 CBZ X8, 0x3E6CAD0
	0x03E6CA14 LDR X9, [X8 + 0x38]
	0x03E6CA18 CBZ X9, 0x3E6CA78
	0x03E6CA1C LDR X0, [X8 + 0x40]
	0x03E6CA20 CBZ X0, 0x3E6CADC
	0x03E6CA24 LDR X8, [X0]
	0x03E6CA28 LDR X1, [X8 + 0x280]
	0x03E6CA2C LDR X9, [X8 + 0x278]
	0x03E6CA30 BLR X9
	0x03E6CA34 LDR X8, [X19 + 0x18]
	0x03E6CA38 CBZ X8, 0x3E6CAE0
	0x03E6CA3C LDR X0, [X8 + 0x40]
	0x03E6CA40 CBZ X0, 0x3E6CAE4
	0x03E6CA44 LDR X9, [X0]
	0x03E6CA48 LDR X20, [X8 + 0x38]
	0x03E6CA4C LDR X1, [X9 + 0x400]
	0x03E6CA50 LDR X8, [X9 + 0x3F8]
	0x03E6CA54 BLR X8
	0x03E6CA58 MOV X1, X0
	0x03E6CA5C CBZ X20, 0x3E6CAE8
	0x03E6CA60 LDR X0, [X20 + 0x40]
	0x03E6CA64 LDR X8, [X20 + 0x18]
	0x03E6CA68 LDR X2, [X20 + 0x28]
	0x03E6CA6C BLR X8
	0x03E6CA70 LDR X8, [X19 + 0x18]
	0x03E6CA74 CBZ X8, 0x3E6CAEC
	0x03E6CA78 LDR X0, [X8 + 0x40]
	0x03E6CA7C CBZ X0, 0x3E6CAD8
	0x03E6CA80 MOV X1, X31
	0x03E6CA84 BL 0x32F02B8
	0x03E6CA88 LDP X20, X19, [X31 + 0x10]
	0x03E6CA8C LDP X30, X21, [X31], #0x20
	0x03E6CA90 RET
	0x03E6CA94 BL 0x1C16F20
	0x03E6CA98 BL 0x1C16F20
	0x03E6CA9C BL 0x1C16F20
	0x03E6CAA0 BL 0x1C16F20
	0x03E6CAA4 BL 0x1C16F20
	0x03E6CAA8 BL 0x1C16F20
	0x03E6CAAC BL 0x1C16F20
	0x03E6CAB0 BL 0x1C16F20
	0x03E6CAB4 BL 0x1C16F20
	0x03E6CAB8 BL 0x1C16F20
	0x03E6CABC BL 0x1C16F20
	0x03E6CAC0 BL 0x1C16F20
	0x03E6CAC4 BL 0x1C16F20
	0x03E6CAC8 BL 0x1C16F20
	0x03E6CACC BL 0x1C16F20
	0x03E6CAD0 BL 0x1C16F20
	0x03E6CAD4 BL 0x1C16F20
	0x03E6CAD8 BL 0x1C16F20
	0x03E6CADC BL 0x1C16F20
	0x03E6CAE0 BL 0x1C16F20
	0x03E6CAE4 BL 0x1C16F20
	0x03E6CAE8 BL 0x1C16F20
	0x03E6CAEC BL 0x1C16F20
	0x03E6CAF0 B 0x3E6CB50
	0x03E6CAF4 B 0x3E6CB50
	0x03E6CAF8 B 0x3E6CB50
	0x03E6CAFC B 0x3E6CB50
	0x03E6CB00 B 0x3E6CB50
	0x03E6CB04 B 0x3E6CB50
	0x03E6CB08 B 0x3E6CB50
	0x03E6CB0C B 0x3E6CB50
	0x03E6CB10 B 0x3E6CB50
	0x03E6CB14 B 0x3E6CB50
	0x03E6CB18 B 0x3E6CB50
	0x03E6CB1C B 0x3E6CB50
	0x03E6CB20 B 0x3E6CB50
	0x03E6CB24 B 0x3E6CB50
	0x03E6CB28 B 0x3E6CB50
	0x03E6CB2C B 0x3E6CB50
	0x03E6CB30 B 0x3E6CB50
	0x03E6CB34 B 0x3E6CB50
	0x03E6CB38 B 0x3E6CB50
	0x03E6CB3C B 0x3E6CB50
	0x03E6CB40 B 0x3E6CB50
	0x03E6CB44 B 0x3E6CB50
	0x03E6CB48 B 0x3E6CB50
	0x03E6CB4C B 0x3E6CB50
	0x03E6CB50 MOV X20, X0
	0x03E6CB54 CMP W1, 0x1
	0x03E6CB58 B.NE 0x3E6CBFC
	0x03E6CB5C MOV X0, X20
	0x03E6CB60 BL 0x3EB1AD0
	0x03E6CB64 MOV X20, X0
	0x03E6CB68 ADRP X0, 0x287000
	0x03E6CB6C LDR X0, [X0 + 0x7D0]
	0x03E6CB70 BL 0x1C16D08
	0x03E6CB74 LDR X8, [X20]
	0x03E6CB78 LDR X1, [X8]
	0x03E6CB7C BL 0x1C17270
	0x03E6CB80 TBZ X0, 0x0, 0x3E6CBD4
	0x03E6CB84 LDR X20, [X20]
	0x03E6CB88 BL 0x3EB1AE0
	0x03E6CB8C LDR X8, [X19 + 0x18]
	0x03E6CB90 CBZ X8, 0x3E6CBD0
	0x03E6CB94 LDR X0, [X8 + 0x40]
	0x03E6CB98 CBZ X0, 0x3E6CBD0
	0x03E6CB9C MOV X1, X31
	0x03E6CBA0 BL 0x32F02B8
	0x03E6CBA4 LDR X8, [X19 + 0x18]
	0x03E6CBA8 CBZ X8, 0x3E6CBD0
	0x03E6CBAC LDR X8, [X8 + 0x48]
	0x03E6CBB0 CBZ X8, 0x3E6CA88
	0x03E6CBB4 LDR X3, [X8 + 0x18]
	0x03E6CBB8 LDR X0, [X8 + 0x40]
	0x03E6CBBC LDR X2, [X8 + 0x28]
	0x03E6CBC0 MOV X1, X20
	0x03E6CBC4 LDP X20, X19, [X31 + 0x10]
	0x03E6CBC8 LDP X30, X21, [X31], #0x20
	0x03E6CBCC BR X3
	0x03E6CBD0 BL 0x1C16F20
	0x03E6CBD4 MOVZ W0, 0x8
	0x03E6CBD8 BL 0x3EB1AF0
	0x03E6CBDC LDR X8, [X20]
	0x03E6CBE0 STR X8, [X0]
	0x03E6CBE4 ADRP X1, 0x48000
	0x03E6CBE8 ADD X1, X1, 0xE58
	0x03E6CBEC MOV X2, X31
	0x03E6CBF0 BL 0x3EB1B00
	0x03E6CBF4 MOV X20, X0
	0x03E6CBF8 BL 0x3EB1AE0
	0x03E6CBFC MOV X0, X20
	0x03E6CC00 BL 0x1D2C690
	0x03E6CC04 BL 0x1990590
	0x03E6CC08 RET
	0x03E6CC0C STR X30, [X31 - 0x20]!
	0x03E6CC10 STP X20, X19, [X31 + 0x10]
	0x03E6CC14 ADRP X20, 0x57C000
	0x03E6CC18 LDRB W8, [X20 + 0xD0B]
	0x03E6CC1C MOV X19, X0
	0x03E6CC20 TBNZ X8, 0x0, 0x3E6CC44
	0x03E6CC24 ADRP X0, 0x2FE000
	0x03E6CC28 LDR X0, [X0 + 0x7B0]
	0x03E6CC2C BL 0x1C16CF4
	0x03E6CC30 ADRP X0, 0x287000
	0x03E6CC34 LDR X0, [X0 + 0x8F0]
	0x03E6CC38 BL 0x1C16CF4
	0x03E6CC3C MOVZ W8, 0x1
	0x03E6CC40 STRB W8, [X20 + 0xD0B]
	0x03E6CC44 LDR W8, [X19 + 0x10]
	0x03E6CC48 MOV W0, W31
	0x03E6CC4C CMP W8, 0x2
	0x03E6CC50 B.EQ 0x3E6CCB0
	0x03E6CC54 CMP W8, 0x1
	0x03E6CC58 B.EQ 0x3E6CCB8
	0x03E6CC5C CBNZ W8, 0x3E6CE0C
	0x03E6CC60 LDR X8, [X19 + 0x28]
	0x03E6CC64 MOVN W9, 0x0
	0x03E6CC68 STR W9, [X19 + 0x10]
	0x03E6CC6C CBZ X8, 0x3E6CE18
	0x03E6CC70 LDR W8, [X8 + 0x10]
	0x03E6CC74 SUB W9, W8, 0x1
	0x03E6CC78 STP W8, W9, [X19 + 0x48]
	0x03E6CC7C ADRP X8, 0x287000
	0x03E6CC80 LDR X8, [X8 + 0x8F0]
	0x03E6CC84 LDR X0, [X8]
	0x03E6CC88 BL 0x1C16F10
	0x03E6CC8C MOVZ W1, 0x20
	0x03E6CC90 MOV X2, X31
	0x03E6CC94 MOV X20, X0
	0x03E6CC98 BL 0x3231B28
	0x03E6CC9C MOV W1, W31
	0x03E6CCA0 STR X20, [X19 + 0x50]
	0x03E6CCA4 STRH W31, [X19 + 0x58]
	0x03E6CCA8 STR W31, [X19 + 0x5C]
	0x03E6CCAC B 0x3E6CDDC
	0x03E6CCB0 MOVN W8, 0x0
	0x03E6CCB4 B 0x3E6CE08
	0x03E6CCB8 LDR X0, [X19 + 0x50]
	0x03E6CCBC MOVN W8, 0x0
	0x03E6CCC0 STR W8, [X19 + 0x10]
	0x03E6CCC4 CBZ X0, 0x3E6CE18
	0x03E6CCC8 MOV W1, W31
	0x03E6CCCC MOV X2, X31
	0x03E6CCD0 BL 0x3232ADC
	0x03E6CCD4 B 0x3E6CDD0
	0x03E6CCD8 LDR X0, [X19 + 0x28]
	0x03E6CCDC CBZ X0, 0x3E6CE18
	0x03E6CCE0 MOV X2, X31
	0x03E6CCE4 BL 0x3222A1C
	0x03E6CCE8 LDR X8, [X19 + 0x50]
	0x03E6CCEC STRH W0, [X19 + 0x60]
	0x03E6CCF0 CBZ X8, 0x3E6CE18
	0x03E6CCF4 MOV W1, W0
	0x03E6CCF8 MOV X0, X8
	0x03E6CCFC MOV X2, X31
	0x03E6CD00 BL 0x3233D30
	0x03E6CD04 LDRH W1, [X19 + 0x60]
	0x03E6CD08 CMP W1, 0x5C
	0x03E6CD0C B.EQ 0x3E6CD28
	0x03E6CD10 CMP W1, 0x22
	0x03E6CD14 B.NE 0x3E6CD64
	0x03E6CD18 LDRB W8, [X19 + 0x58]
	0x03E6CD1C CBZ W8, 0x3E6CDC4
	0x03E6CD20 STRB W31, [X19 + 0x58]
	0x03E6CD24 B 0x3E6CDD0
	0x03E6CD28 LDR W8, [X19 + 0x5C]
	0x03E6CD2C LDR W9, [X19 + 0x4C]
	0x03E6CD30 CMP W8, W9
	0x03E6CD34 B.EQ 0x3E6CDE8
	0x03E6CD38 LDR X0, [X19 + 0x28]
	0x03E6CD3C CBZ X0, 0x3E6CE18
	0x03E6CD40 ADD W1, W8, 0x1
	0x03E6CD44 MOV X2, X31
	0x03E6CD48 BL 0x3222A1C
	0x03E6CD4C AND W8, W0, 0xFFFF
	0x03E6CD50 CMP W8, 0x22
	0x03E6CD54 B.NE 0x3E6CDD0
	0x03E6CD58 MOVZ W8, 0x1
	0x03E6CD5C STRB W8, [X19 + 0x58]
	0x03E6CD60 B 0x3E6CDD0
	0x03E6CD64 ADRP X8, 0x2FE000
	0x03E6CD68 LDR X8, [X8 + 0x7B0]
	0x03E6CD6C LDR X0, [X19 + 0x38]
	0x03E6CD70 LDR X2, [X8]
	0x03E6CD74 BL 0x22E7490
	0x03E6CD78 TBNZ X0, 0x1F, 0x3E6CDD0
	0x03E6CD7C LDRB W8, [X19 + 0x59]
	0x03E6CD80 CBNZ W8, 0x3E6CDD0
	0x03E6CD84 LDR X20, [X19 + 0x50]
	0x03E6CD88 CBZ X20, 0x3E6CE18
	0x03E6CD8C MOV X0, X20
	0x03E6CD90 MOV X1, X31
	0x03E6CD94 BL 0x323260C
	0x03E6CD98 SUB W1, W0, 0x1
	0x03E6CD9C MOV X0, X20
	0x03E6CDA0 MOV X2, X31
	0x03E6CDA4 BL 0x3232ADC
	0x03E6CDA8 LDR X0, [X19 + 0x50]
	0x03E6CDAC CBZ X0, 0x3E6CE18
	0x03E6CDB0 LDR X8, [X0]
	0x03E6CDB4 LDP X9, X1, [X8 + 0x168]
	0x03E6CDB8 BLR X9
	0x03E6CDBC MOVZ W8, 0x1
	0x03E6CDC0 B 0x3E6CE00
	0x03E6CDC4 LDRB W8, [X19 + 0x59]
	0x03E6CDC8 EOR W8, W8, 0x1
	0x03E6CDCC STRB W8, [X19 + 0x59]
	0x03E6CDD0 LDR W8, [X19 + 0x5C]
	0x03E6CDD4 ADD W1, W8, 0x1
	0x03E6CDD8 STR W1, [X19 + 0x5C]
	0x03E6CDDC LDR W8, [X19 + 0x4C]
	0x03E6CDE0 CMP W1, W8
	0x03E6CDE4 B.LE 0x3E6CCD8
	0x03E6CDE8 LDR X0, [X19 + 0x50]
	0x03E6CDEC CBZ X0, 0x3E6CE18
	0x03E6CDF0 LDR X8, [X0]
	0x03E6CDF4 LDP X9, X1, [X8 + 0x168]
	0x03E6CDF8 BLR X9
	0x03E6CDFC MOVZ W8, 0x2
	0x03E6CE00 STR X0, [X19 + 0x18]
	0x03E6CE04 MOVZ W0, 0x1
	0x03E6CE08 STR W8, [X19 + 0x10]
	0x03E6CE0C LDP X20, X19, [X31 + 0x10]
	0x03E6CE10 LDR X30, [X31], #0x20
	0x03E6CE14 RET
	0x03E6CE18 BL 0x1C16F20
	0x03E6CE1C LDR X0, [X0 + 0x18]
	0x03E6CE20 RET
	0x03E6CE24 STP X30, X19, [X31 - 0x10]!
	0x03E6CE28 ADRP X0, 0x287000
	0x03E6CE2C LDR X0, [X0 + 0xB40]
	0x03E6CE30 BL 0x1C16D08
	0x03E6CE34 BL 0x1C16F10
	0x03E6CE38 MOV X1, X31
	0x03E6CE3C MOV X19, X0
	0x03E6CE40 BL 0x3380310
	0x03E6CE44 ADRP X0, 0x300000
	0x03E6CE48 LDR X0, [X0 + 0x3A0]
	0x03E6CE4C BL 0x1C16D08
	0x03E6CE50 MOV X1, X0
	0x03E6CE54 MOV X0, X19
	0x03E6CE58 BL 0x1C16DEC
	0x03E6CE5C LDR X0, [X0 + 0x18]
	0x03E6CE60 RET
	0x03E6CE64 STR X30, [X31 - 0x20]!
	0x03E6CE68 STP X20, X19, [X31 + 0x10]
	0x03E6CE6C ADRP X20, 0x57C000
	0x03E6CE70 LDRB W8, [X20 + 0xD0C]
	0x03E6CE74 MOV X19, X0
	0x03E6CE78 TBNZ X8, 0x0, 0x3E6CE90
	0x03E6CE7C ADRP X0, 0x300000
	0x03E6CE80 LDR X0, [X0 + 0x318]
	0x03E6CE84 BL 0x1C16CF4
	0x03E6CE88 MOVZ W8, 0x1
	0x03E6CE8C STRB W8, [X20 + 0xD0C]
	0x03E6CE90 LDR W8, [X19 + 0x10]
	0x03E6CE94 ADDS W31, W8, 0x2
	0x03E6CE98 B.NE 0x3E6CEC8
	0x03E6CE9C LDR W20, [X19 + 0x20]
	0x03E6CEA0 MOV X0, X31
	0x03E6CEA4 BL 0x33E3C68
	0x03E6CEA8 CBZ X0, 0x3E6CF08
	0x03E6CEAC MOV X1, X31
	0x03E6CEB0 BL 0x33E3CC4
	0x03E6CEB4 CMP W20, W0
	0x03E6CEB8 B.NE 0x3E6CEC8
	0x03E6CEBC STR W31, [X19 + 0x10]
	0x03E6CEC0 MOV X20, X19
	0x03E6CEC4 B 0x3E6CEE8
	0x03E6CEC8 ADRP X8, 0x300000
	0x03E6CECC LDR X8, [X8 + 0x318]
	0x03E6CED0 LDR X0, [X8]
	0x03E6CED4 BL 0x1C16F10
	0x03E6CED8 MOV W1, W31
	0x03E6CEDC MOV X20, X0
	0x03E6CEE0 BL 0x3E6A2D0
	0x03E6CEE4 CBZ X20, 0x3E6CF08
	0x03E6CEE8 LDR X8, [X19 + 0x30]
	0x03E6CEEC MOV X0, X20
	0x03E6CEF0 STR X8, [X20 + 0x28]
	0x03E6CEF4 LDR X8, [X19 + 0x40]
	0x03E6CEF8 STR X8, [X20 + 0x38]
	0x03E6CEFC LDP X20, X19, [X31 + 0x10]
	0x03E6CF00 LDR X30, [X31], #0x20
	0x03E6CF04 RET
	0x03E6CF08 BL 0x1C16F20
	0x03E6CF0C B 0x3E6CE64
	0x03E6CF10 LDR W8, [X0 + 0x10]
	0x03E6CF14 CMP W8, 0x1
	0x03E6CF18 B.EQ 0x3E6CF24
	0x03E6CF1C ADDS W31, W8, 0x3
	0x03E6CF20 B.NE 0x3E6CF28
	0x03E6CF24 B 0x3E6D1E0
	0x03E6CF28 RET

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x57D000
	005 Move W8, [X20+3331]
	006 Move W19, W0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {154}
	011 Move X0, 0x28A000
	012 Move X0, [X0+632]
	013 Call 0x1C17CF4
	014 Move X0, 0x2D2000
	015 Move X0, [X0+1280]
	016 Call 0x1C17CF4
	017 Move X0, 0x2D2000
	018 Move X0, [X0+1288]
	019 Call 0x1C17CF4
	020 Move X0, 0x2D2000
	021 Move X0, [X0+1296]
	022 Call 0x1C17CF4
	023 Move X0, 0x2D2000
	024 Move X0, [X0+1304]
	025 Call 0x1C17CF4
	026 Move X0, 0x2D2000
	027 Move X0, [X0+1312]
	028 Call 0x1C17CF4
	029 Move X0, 0x2D2000
	030 Move X0, [X0+1320]
	031 Call 0x1C17CF4
	032 Move X0, 0x2D2000
	033 Move X0, [X0+1328]
	034 Call 0x1C17CF4
	035 Move X0, 0x2D2000
	036 Move X0, [X0+1336]
	037 Call 0x1C17CF4
	038 Move X0, 0x2D2000
	039 Move X0, [X0+1344]
	040 Call 0x1C17CF4
	041 Move X0, 0x2D2000
	042 Move X0, [X0+1352]
	043 Call 0x1C17CF4
	044 Move X0, 0x2D2000
	045 Move X0, [X0+1360]
	046 Call 0x1C17CF4
	047 Move X0, 0x2D2000
	048 Move X0, [X0+1368]
	049 Call 0x1C17CF4
	050 Move X0, 0x2D2000
	051 Move X0, [X0+1376]
	052 Call 0x1C17CF4
	053 Move X0, 0x2D2000
	054 Move X0, [X0+1384]
	055 Call 0x1C17CF4
	056 Move X0, 0x2D2000
	057 Move X0, [X0+1392]
	058 Call 0x1C17CF4
	059 Move X0, 0x2D2000
	060 Move X0, [X0+1408]
	061 Call 0x1C17CF4
	062 Move X0, 0x2D2000
	063 Move X0, [X0+1416]
	064 Call 0x1C17CF4
	065 Move X0, 0x2D2000
	066 Move X0, [X0+1432]
	067 Call 0x1C17CF4
	068 Move X0, 0x2D2000
	069 Move X0, [X0+1440]
	070 Call 0x1C17CF4
	071 Move X0, 0x2D2000
	072 Move X0, [X0+1448]
	073 Call 0x1C17CF4
	074 Move X0, 0x2D2000
	075 Move X0, [X0+1456]
	076 Call 0x1C17CF4
	077 Move X0, 0x2D2000
	078 Move X0, [X0+1480]
	079 Call 0x1C17CF4
	080 Move X0, 0x2D2000
	081 Move X0, [X0+1496]
	082 Call 0x1C17CF4
	083 Move X0, 0x2D2000
	084 Move X0, [X0+1504]
	085 Call 0x1C17CF4
	086 Move X0, 0x2D2000
	087 Move X0, [X0+1512]
	088 Call 0x1C17CF4
	089 Move X0, 0x2D2000
	090 Move X0, [X0+1520]
	091 Call 0x1C17CF4
	092 Move X0, 0x2D2000
	093 Move X0, [X0+1528]
	094 Call 0x1C17CF4
	095 Move X0, 0x2D2000
	096 Move X0, [X0+1536]
	097 Call 0x1C17CF4
	098 Move X0, 0x2D2000
	099 Move X0, [X0+1544]
	100 Call 0x1C17CF4
	101 Move X0, 0x2D2000
	102 Move X0, [X0+1568]
	103 Call 0x1C17CF4
	104 Move X0, 0x2D2000
	105 Move X0, [X0+1576]
	106 Call 0x1C17CF4
	107 Move X0, 0x2D2000
	108 Move X0, [X0+1584]
	109 Call 0x1C17CF4
	110 Move X0, 0x2D2000
	111 Move X0, [X0+1600]
	112 Call 0x1C17CF4
	113 Move X0, 0x2D2000
	114 Move X0, [X0+1608]
	115 Call 0x1C17CF4
	116 Move X0, 0x2D2000
	117 Move X0, [X0+1624]
	118 Call 0x1C17CF4
	119 Move X0, 0x2D2000
	120 Move X0, [X0+1632]
	121 Call 0x1C17CF4
	122 Move X0, 0x2D2000
	123 Move X0, [X0+1648]
	124 Call 0x1C17CF4
	125 Move X0, 0x2D2000
	126 Move X0, [X0+1656]
	127 Call 0x1C17CF4
	128 Move X0, 0x2D2000
	129 Move X0, [X0+1672]
	130 Call 0x1C17CF4
	131 Move X0, 0x2D2000
	132 Move X0, [X0+1680]
	133 Call 0x1C17CF4
	134 Move X0, 0x2D2000
	135 Move X0, [X0+1696]
	136 Call 0x1C17CF4
	137 Move X0, 0x2D2000
	138 Move X0, [X0+1704]
	139 Call 0x1C17CF4
	140 Move X0, 0x2D2000
	141 Move X0, [X0+1712]
	142 Call 0x1C17CF4
	143 Move X0, 0x2D2000
	144 Move X0, [X0+1720]
	145 Call 0x1C17CF4
	146 Move X0, 0x2D2000
	147 Move X0, [X0+1744]
	148 Call 0x1C17CF4
	149 Move X0, 0x2D2000
	150 Move X0, [X0+1752]
	151 Call 0x1C17CF4
	152 Move W8, 1
	153 Move [X20+3331], W8
	154 NotImplemented "Instruction CMP not yet implemented."
	155 Subtract W8, W19, 400
	156 NotImplemented "Instruction CMP not yet implemented."
	157 Move X9, -53293056
	158 Add X9, X9, 1618
	159 NotImplemented "Instruction ADR not yet implemented."
	160 Move W11, [X9]
	161 Add X10, X10, X11
	162 CallNoReturn X10
	163 Move X8, 0x2D2000
	164 Move X8, [X8+1680]
	165 NotImplemented "Instruction CMP not yet implemented."
	166 Subtract W8, W19, 200
	167 NotImplemented "Instruction CMP not yet implemented."
	168 Move X9, -53293056
	169 Add X9, X9, 1602
	170 NotImplemented "Instruction ADR not yet implemented."
	171 Move W11, [X9]
	172 Add X10, X10, X11
	173 CallNoReturn X10
	174 Move X8, 0x2D2000
	175 Move X8, [X8+1344]
	176 Subtract W8, W19, 300
	177 NotImplemented "Instruction CMP not yet implemented."
	178 Move X9, -53293056
	179 Add X9, X9, 1610
	180 NotImplemented "Instruction ADR not yet implemented."
	181 Move W11, [X9]
	182 Add X10, X10, X11
	183 Move X8, 0x2D2000
	184 Move X8, [X8+1536]
	185 CallNoReturn X10
	186 Move X8, 0x2D2000
	187 Move X8, [X8+1720]
	188 NotImplemented "Instruction CMP not yet implemented."
	189 NotImplemented "Instruction CMP not yet implemented."
	190 NotImplemented "Instruction CMP not yet implemented."
	191 Move X8, 0x2D2000
	192 Move X8, [X8+1384]
	193 Subtract W8, W19, 500
	194 NotImplemented "Instruction CMP not yet implemented."
	195 Move X9, -53293056
	196 Add X9, X9, 1643
	197 NotImplemented "Instruction ADR not yet implemented."
	198 Move W11, [X9]
	199 Add X10, X10, X11
	200 CallNoReturn X10
	201 Move X8, 0x2D2000
	202 Move X8, [X8+1416]
	203 Move X8, 0x28A000
	204 Move X8, [X8+632]
	205 Move X8, [X8]
	206 Move X8, [X8+184]
	207 Move X8, 0x2D2000
	208 Move X8, [X8+1528]
	209 Move X8, 0x2D2000
	210 Move X8, [X8+1712]
	211 Move X8, 0x2D2000
	212 Move X8, [X8+1520]
	213 Move X8, 0x2D2000
	214 Move X8, [X8+1568]
	215 Move X8, 0x2D2000
	216 Move X8, [X8+1296]
	217 Move X8, 0x2D2000
	218 Move X8, [X8+1312]
	219 Move X8, 0x2D2000
	220 Move X8, [X8+1584]
	221 Move X8, 0x2D2000
	222 Move X8, [X8+1704]
	223 Move X8, 0x2D2000
	224 Move X8, [X8+1696]
	225 Move X8, 0x2D2000
	226 Move X8, [X8+1368]
	227 Move X8, 0x2D2000
	228 Move X8, [X8+1352]
	229 Move X8, 0x2D2000
	230 Move X8, [X8+1624]
	231 Move X8, 0x2D2000
	232 Move X8, [X8+1448]
	233 Move X8, 0x2D2000
	234 Move X8, [X8+1544]
	235 Move X8, 0x2D2000
	236 Move X8, [X8+1496]
	237 Move X8, 0x2D2000
	238 Move X8, [X8+1480]
	239 Move X8, 0x2D2000
	240 Move X8, [X8+1288]
	241 Move X8, 0x2D2000
	242 Move X8, [X8+1576]
	243 Move X8, 0x2D2000
	244 Move X8, [X8+1336]
	245 Move X8, 0x2D2000
	246 Move X8, [X8+1408]
	247 Move X8, 0x2D2000
	248 Move X8, [X8+1648]
	249 Move X8, 0x2D2000
	250 Move X8, [X8+1456]
	251 Move X8, 0x2D2000
	252 Move X8, [X8+1432]
	253 Move X8, 0x2D2000
	254 Move X8, [X8+1440]
	255 Move X8, 0x2D2000
	256 Move X8, [X8+1672]
	257 Move X8, 0x2D2000
	258 Move X8, [X8+1656]
	259 Move X8, 0x2D2000
	260 Move X8, [X8+1392]
	261 Move X8, 0x2D2000
	262 Move X8, [X8+1280]
	263 Move X8, 0x2D2000
	264 Move X8, [X8+1600]
	265 Move X8, 0x2D2000
	266 Move X8, [X8+1360]
	267 Move X8, 0x2D2000
	268 Move X8, [X8+1744]
	269 Move X8, 0x2D2000
	270 Move X8, [X8+1512]
	271 Move X8, 0x2D2000
	272 Move X8, [X8+1320]
	273 Move X8, 0x2D2000
	274 Move X8, [X8+1504]
	275 Move X8, 0x2D2000
	276 Move X8, [X8+1328]
	277 Move X8, 0x2D2000
	278 Move X8, [X8+1608]
	279 Move X8, 0x2D2000
	280 Move X8, [X8+1304]
	281 Move X8, 0x2D2000
	282 Move X8, [X8+1376]
	283 Move X8, 0x2D2000
	284 Move X8, [X8+1752]
	285 Move X8, 0x2D2000
	286 Move X8, [X8+1632]
	287 Move X0, [X8]
	288 Move X20, [X31+16]
	289 Move X19, [X31+24]
	290 Move X30, [X31+32]
	291 Return X0

Method: System.Boolean IsCloseStatusCode(System.UInt16 value)

Disassembly:
	0x03E6CF2C SUB X31, X31, 0x30
	0x03E6CF30 STP X30, X0, [X31 + 0x10]
	0x03E6CF34 STP X20, X19, [X31 + 0x20]
	0x03E6CF38 ADRP X19, 0x57C000
	0x03E6CF3C LDRB W8, [X19 + 0xD0D]

ISIL:
	001 Subtract W8, W0, 1000
	002 And W8, W8, 0xFFFF
	003 NotImplemented "Instruction CMP not yet implemented."
	004 NotImplemented "Instruction CSET not yet implemented."
	005 Return X0

Method: System.Boolean IsEnclosedIn(System.String value, System.Char c)

Disassembly:
	0x03E6CF40 MOV X20, X0
	0x03E6CF44 TBNZ X8, 0x0, 0x3E6CF74
	0x03E6CF48 ADRP X0, 0x287000
	0x03E6CF4C LDR X0, [X0 + 0xF70]
	0x03E6CF50 BL 0x1C16CF4
	0x03E6CF54 ADRP X0, 0x287000
	0x03E6CF58 LDR X0, [X0 + 0xF78]
	0x03E6CF5C BL 0x1C16CF4
	0x03E6CF60 ADRP X0, 0x287000
	0x03E6CF64 LDR X0, [X0 + 0xE18]
	0x03E6CF68 BL 0x1C16CF4
	0x03E6CF6C MOVZ W8, 0x1
	0x03E6CF70 STRB W8, [X19 + 0xD0D]
	0x03E6CF74 ADD X8, X31, 0x18
	0x03E6CF78 STR X8, [X31 + 0x8]
	0x03E6CF7C LDR W8, [X20 + 0x10]
	0x03E6CF80 CMP W8, 0x1
	0x03E6CF84 B.EQ 0x3E6CFE4
	0x03E6CF88 CBNZ W8, 0x3E6D188
	0x03E6CF8C LDR X19, [X20 + 0x28]
	0x03E6CF90 MOVN W8, 0x0
	0x03E6CF94 STR W8, [X20 + 0x10]
	0x03E6CF98 CBZ X19, 0x3E6D140
	0x03E6CF9C ADRP X10, 0x287000
	0x03E6CFA0 LDR X8, [X19]
	0x03E6CFA4 LDR X10, [X10 + 0xF70]
	0x03E6CFA8 LDRH W9, [X8 + 0x12E]
	0x03E6CFAC LDR X1, [X10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Compare X0, 0
	006 JumpIfEqual {26}
	007 Move W21, [X0+16]
	008 Move X20, X0
	009 NotImplemented "Instruction CMP not yet implemented."
	010 Move W19, W1
	011 Move X0, X20
	012 Move W1, W31
	013 Move X2, X31
	014 Call String.get_Chars, X0, X1
	015 And W8, W0, 0xFFFF
	016 NotImplemented "Instruction CMP not yet implemented."
	017 Move W0, W31
	018 Subtract W1, W21, 1
	019 Move X0, X20
	020 Move X2, X31
	021 Call String.get_Chars, X0, X1
	022 And W8, W0, 0xFFFF
	023 NotImplemented "Instruction CMP not yet implemented."
	024 NotImplemented "Instruction CSET not yet implemented."
	025 Move W0, W31
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Return X0

Method: System.Boolean IsHostOrder(WebSocketSharp.ByteOrder order)

Disassembly:
	0x03E6B314 BL 0x3EB1B00
	0x03E6B318 MOV X19, X0
	0x03E6B31C BL 0x3EB1AE0

ISIL:
	001 NotImplemented "Instruction CMP not yet implemented."
	002 NotImplemented "Instruction CSET not yet implemented."
	003 Return X0

Method: System.Boolean IsLocal(System.Net.IPAddress address)

Disassembly:
	0x03E6CFB0 CBZ X9, 0x3E6CFD4
	0x03E6CFB4 LDR X10, [X8 + 0xB0]
	0x03E6CFB8 ADD X10, X10, 0x8
	0x03E6CFBC LDUR X11, [X10 - 0x8]
	0x03E6CFC0 CMP X11, X1
	0x03E6CFC4 B.EQ 0x3E6CFF8
	0x03E6CFC8 SUBS X9, X9, 0x1
	0x03E6CFCC ADD X10, X10, 0x10
	0x03E6CFD0 B.NE 0x3E6CFBC
	0x03E6CFD4 MOV X0, X19
	0x03E6CFD8 MOV W2, W31
	0x03E6CFDC BL 0x1C5C788
	0x03E6CFE0 B 0x3E6D004
	0x03E6CFE4 LDR X19, [X20 + 0x38]
	0x03E6CFE8 MOVN W8, 0x2
	0x03E6CFEC STR W8, [X20 + 0x10]
	0x03E6CFF0 STR X31, [X20 + 0x40]
	0x03E6CFF4 B 0x3E6D024
	0x03E6CFF8 LDRSW X9, [X10]
	0x03E6CFFC ADD X8, X8, X9, 0x4, LSL
	0x03E6D000 ADD X0, X8, 0x138
	0x03E6D004 LDP X8, X1, [X0]
	0x03E6D008 MOV X0, X19
	0x03E6D00C BLR X8
	0x03E6D010 LDR X8, [X31 + 0x18]
	0x03E6D014 MOVN W9, 0x2
	0x03E6D018 MOV X19, X0
	0x03E6D01C STR X0, [X8 + 0x38]
	0x03E6D020 STR W9, [X8 + 0x10]
	0x03E6D024 CBZ X19, 0x3E6D13C
	0x03E6D028 ADRP X10, 0x286000
	0x03E6D02C LDR X8, [X19]
	0x03E6D030 LDR X10, [X10 + 0xE18]
	0x03E6D034 LDRH W9, [X8 + 0x12E]
	0x03E6D038 LDR X1, [X10]
	0x03E6D03C CBZ X9, 0x3E6D060
	0x03E6D040 LDR X10, [X8 + 0xB0]
	0x03E6D044 ADD X10, X10, 0x8
	0x03E6D048 LDUR X11, [X10 - 0x8]
	0x03E6D04C CMP X11, X1
	0x03E6D050 B.EQ 0x3E6D070
	0x03E6D054 SUBS X9, X9, 0x1
	0x03E6D058 ADD X10, X10, 0x10
	0x03E6D05C B.NE 0x3E6D048
	0x03E6D060 MOV X0, X19
	0x03E6D064 MOV W2, W31
	0x03E6D068 BL 0x1C5C788
	0x03E6D06C B 0x3E6D07C
	0x03E6D070 LDRSW X9, [X10]
	0x03E6D074 ADD X8, X8, X9, 0x4, LSL
	0x03E6D078 ADD X0, X8, 0x138
	0x03E6D07C LDP X8, X1, [X0]
	0x03E6D080 MOV X0, X19
	0x03E6D084 BLR X8
	0x03E6D088 MOV W8, W0
	0x03E6D08C LDR X0, [X31 + 0x18]
	0x03E6D090 TBZ X8, 0x0, 0x3E6D0E4
	0x03E6D094 LDR X19, [X0 + 0x38]
	0x03E6D098 CBZ X19, 0x3E6D144
	0x03E6D09C ADRP X10, 0x286000
	0x03E6D0A0 LDR X8, [X19]
	0x03E6D0A4 LDR X10, [X10 + 0xF78]
	0x03E6D0A8 LDRH W9, [X8 + 0x12E]
	0x03E6D0AC LDR X1, [X10]
	0x03E6D0B0 CBZ X9, 0x3E6D0D4
	0x03E6D0B4 LDR X10, [X8 + 0xB0]
	0x03E6D0B8 ADD X10, X10, 0x8
	0x03E6D0BC LDUR X11, [X10 - 0x8]
	0x03E6D0C0 CMP X11, X1
	0x03E6D0C4 B.EQ 0x3E6D0F8
	0x03E6D0C8 SUBS X9, X9, 0x1
	0x03E6D0CC ADD X10, X10, 0x10
	0x03E6D0D0 B.NE 0x3E6D0BC
	0x03E6D0D4 MOV X0, X19
	0x03E6D0D8 MOV W2, W31
	0x03E6D0DC BL 0x1C5C788
	0x03E6D0E0 B 0x3E6D104
	0x03E6D0E4 BL 0x3E6D1E0
	0x03E6D0E8 LDR X8, [X31 + 0x18]
	0x03E6D0EC MOV W0, W31
	0x03E6D0F0 STR X31, [X8 + 0x38]
	0x03E6D0F4 B 0x3E6D18C
	0x03E6D0F8 LDRSW X9, [X10]
	0x03E6D0FC ADD X8, X8, X9, 0x4, LSL
	0x03E6D100 ADD X0, X8, 0x138
	0x03E6D104 LDP X8, X1, [X0]
	0x03E6D108 MOV X0, X19
	0x03E6D10C BLR X8
	0x03E6D110 LDR X8, [X31 + 0x18]
	0x03E6D114 STR X0, [X8 + 0x40]
	0x03E6D118 CBZ X0, 0x3E6D148
	0x03E6D11C MOV X1, X31
	0x03E6D120 BL 0x322B8DC
	0x03E6D124 LDR X9, [X31 + 0x18]
	0x03E6D128 MOV X8, X0
	0x03E6D12C MOVZ W0, 0x1
	0x03E6D130 STR X8, [X9 + 0x18]
	0x03E6D134 STR W0, [X9 + 0x10]
	0x03E6D138 B 0x3E6D18C
	0x03E6D13C BL 0x1C16F20
	0x03E6D140 BL 0x1C16F20
	0x03E6D144 BL 0x1C16F20
	0x03E6D148 BL 0x1C16F20
	0x03E6D14C B 0x3E6D16C
	0x03E6D150 B 0x3E6D16C
	0x03E6D154 B 0x3E6D16C
	0x03E6D158 B 0x3E6D16C
	0x03E6D15C B 0x3E6D16C
	0x03E6D160 B 0x3E6D16C
	0x03E6D164 B 0x3E6D16C
	0x03E6D168 B 0x3E6D16C
	0x03E6D16C CMP W1, 0x1
	0x03E6D170 B.NE 0x3E6D1B4
	0x03E6D174 BL 0x3EB1AD0
	0x03E6D178 LDR X19, [X0]
	0x03E6D17C STR X19, [X31]
	0x03E6D180 BL 0x3EB1AE0
	0x03E6D184 CBNZ X19, 0x3E6D19C
	0x03E6D188 MOV W0, W31
	0x03E6D18C LDP X20, X19, [X31 + 0x20]
	0x03E6D190 LDR X30, [X31 + 0x10]
	0x03E6D194 ADD X31, X31, 0x30
	0x03E6D198 RET
	0x03E6D19C ADD X8, X31, 0x0
	0x03E6D1A0 ADD X0, X8, 0x8
	0x03E6D1A4 BL 0x1C16688
	0x03E6D1A8 MOV X0, X19
	0x03E6D1AC BL 0x1C16F18

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x57D000
	007 Move W8, [X20+3332]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0x295000
	014 Move X0, [X0+2408]
	015 Call 0x1C17CF4
	016 Move X0, 0x291000
	017 Move X0, [X0+1928]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X20+3332], W8
	021 Compare X19, 0
	022 JumpIfEqual {142}
	023 Move X20, 0x295000
	024 Move X20, [X20+2408]
	025 Move X0, [X20]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {31}
	029 Call 0x1C17DFC
	030 Move X0, [X20]
	031 Move X8, [X0+184]
	032 Move X9, [X19]
	033 Move X0, X19
	034 Move X1, [X8]
	035 Move X8, [X9+312]
	036 Move X2, [X9+320]
	037 NotImplemented "Instruction BLR not yet implemented."
	038 Move TEMP, X0
	039 And TEMP, TEMP, 1
	040 Compare TEMP, 1
	041 JumpIfEqual {106}
	042 Move X0, [X20]
	043 Move W8, [X0+224]
	044 Compare W8, 0
	045 JumpIfNotEqual {48}
	046 Call 0x1C17DFC
	047 Move X0, [X20]
	048 Move X8, [X0+184]
	049 Move X9, [X19]
	050 Move X0, X19
	051 Move X1, [X8+8]
	052 Move X8, [X9+312]
	053 Move X2, [X9+320]
	054 NotImplemented "Instruction BLR not yet implemented."
	055 Move TEMP, X0
	056 And TEMP, TEMP, 1
	057 Compare TEMP, 1
	058 JumpIfEqual {106}
	059 Move X8, 0x290000
	060 Move X8, [X8+1928]
	061 Move X0, [X8]
	062 Move W8, [X0+224]
	063 Compare W8, 0
	064 JumpIfNotEqual {66}
	065 Call 0x1C17DFC
	066 Move X0, X31
	067 Call Socket.get_OSSupportsIPv6
	068 Move TEMP, X0
	069 And TEMP, TEMP, 1
	070 Compare TEMP, 1
	071 JumpIfNotEqual {114}
	072 Move X0, [X20]
	073 Move W8, [X0+224]
	074 Compare W8, 0
	075 JumpIfNotEqual {78}
	076 Call 0x1C17DFC
	077 Move X0, [X20]
	078 Move X8, [X0+184]
	079 Move X9, [X19]
	080 Move X0, X19
	081 Move X1, [X8+32]
	082 Move X8, [X9+312]
	083 Move X2, [X9+320]
	084 NotImplemented "Instruction BLR not yet implemented."
	085 Move TEMP, X0
	086 And TEMP, TEMP, 1
	087 Compare TEMP, 1
	088 JumpIfEqual {106}
	089 Move X0, [X20]
	090 Move W8, [X0+224]
	091 Compare W8, 0
	092 JumpIfNotEqual {95}
	093 Call 0x1C17DFC
	094 Move X0, [X20]
	095 Move X8, [X0+184]
	096 Move X9, [X19]
	097 Move X0, X19
	098 Move X1, [X8+40]
	099 Move X8, [X9+312]
	100 Move X2, [X9+320]
	101 NotImplemented "Instruction BLR not yet implemented."
	102 Move TEMP, X0
	103 And TEMP, TEMP, 1
	104 Compare TEMP, 1
	105 JumpIfNotEqual {114}
	106 Move W0, 1
	107 Move X20, [X31+32]
	108 Move X19, [X31+40]
	109 Move X22, [X31+16]
	110 Move X21, [X31+24]
	111 And W0, W0, 1
	112 Move X30, [X31+48]
	113 Return X0
	114 Move X0, X31
	115 Call Dns.GetHostName
	116 Move X1, X31
	117 Call Dns.GetHostAddresses, X0
	118 Compare X0, 0
	119 JumpIfEqual {160}
	120 Move X8, [X0+24]
	121 Move X20, X0
	122 NotImplemented "Instruction CMP not yet implemented."
	123 Move X21, X31
	124 And X8, X8, 0
	125 Add X22, X20, 32
	126 NotImplemented "Instruction CMP not yet implemented."
	127 Move X8, [X19]
	128 Move X1, [X22]
	129 Move X0, X19
	130 Move X9, [X8+312]
	131 Move X2, [X8+320]
	132 NotImplemented "Instruction BLR not yet implemented."
	133 Move TEMP, X0
	134 And TEMP, TEMP, 1
	135 Compare TEMP, 1
	136 JumpIfEqual {107}
	137 Move W8, [X20+24]
	138 Add X21, X21, 1
	139 NotImplemented "Instruction CMP not yet implemented."
	140 Move W0, W31
	141 Call 0x1C17F28
	142 Move X0, 0x28C000
	143 Move X0, [X0+1320]
	144 Call 0x1C17D08
	145 Call 0x1C17F10
	146 Move X19, X0
	147 Move X0, 0x2D1000
	148 Move X0, [X0+1848]
	149 Call 0x1C17D08
	150 Move X1, X0
	151 Move X0, X19
	152 Move X2, X31
	153 Call ArgumentNullException..ctor, X0, X1
	154 Move X0, 0x300000
	155 Move X0, [X0+904]
	156 Call 0x1C17D08
	157 Move X1, X0
	158 Move X0, X19
	159 Call 0x1C17DEC
	160 Call 0x1C17F20

Method: System.Boolean IsNullOrEmpty(System.String value)

Disassembly:
	0x03E6D1B0 CBNZ X19, 0x3E6D1B8
	0x03E6D1B4 BL 0x1D2C690
	0x03E6D1B8 LDR X0, [X31 + 0x18]
	0x03E6D1BC LDR W8, [X0 + 0x10]
	0x03E6D1C0 CMP W8, 0x1
	0x03E6D1C4 B.EQ 0x3E6D1D0
	0x03E6D1C8 ADDS W31, W8, 0x3

ISIL:
	001 Compare X0, 0
	002 JumpIfEqual {7}
	003 Move W8, [X0+16]
	004 NotImplemented "Instruction CMP not yet implemented."
	005 NotImplemented "Instruction CSET not yet implemented."
	006 Return X0
	007 Move W0, 1
	008 Return X0

Method: T[] SubArray(T[] array, System.Int32 startIndex, System.Int32 length)

Disassembly:
	0x021E35A8 BLR X8
	0x021E35AC LDR X8, [X19 + 0x38]
	0x021E35B0 MOV X1, X21
	0x021E35B4 LDR X0, [X8 + 0x18]
	0x021E35B8 BL 0x1C16E04
	0x021E35BC CBZ X0, 0x21E35D4
	0x021E35C0 LDR X8, [X0]
	0x021E35C4 LDP X9, X1, [X8 + 0x168]
	0x021E35C8 BLR X9
	0x021E35CC CBNZ X22, 0x21E35DC
	0x021E35D0 B 0x21E3664
	0x021E35D4 LDR X0, [X27]
	0x021E35D8 CBZ X22, 0x21E3664
	0x021E35DC LDR W8, [X22 + 0x18]
	0x021E35E0 CMP X24, X8
	0x021E35E4 B.CS 0x21E3668
	0x021E35E8 STR X0, [X25, X24, LSL #3]
	0x021E35EC LDR X8, [X19 + 0x38]
	0x021E35F0 MOV X0, X20
	0x021E35F4 ADD X24, X24, 0x1
	0x021E35F8 LDR X1, [X8 + 0x8]
	0x021E35FC LDR X8, [X1]
	0x021E3600 BLR X8
	0x021E3604 CMP X24, W0, SXTW
	0x021E3608 B.LT 0x21E3584
	0x021E360C ADRP X8, 0x1F10000
	0x021E3610 LDR X8, [X8 + 0x838]
	0x021E3614 MOV X1, X22
	0x021E3618 MOV X2, X31
	0x021E361C LDR X0, [X8]
	0x021E3620 BL 0x3227FF8
	0x021E3624 B 0x21E3634
	0x021E3628 ADRP X8, 0x1F10000
	0x021E362C LDR X8, [X8 + 0x830]
	0x021E3630 LDR X0, [X8]
	0x021E3634 LDR X8, [X23 + 0x28]
	0x021E3638 LDUR X9, [X29 - 0x8]
	0x021E363C CMP X8, X9
	0x021E3640 B.NE 0x21E366C
	0x021E3644 ADD X31, X29, 0x0
	0x021E3648 LDP X20, X19, [X31 + 0x50]
	0x021E364C LDP X22, X21, [X31 + 0x40]
	0x021E3650 LDP X24, X23, [X31 + 0x30]
	0x021E3654 LDP X26, X25, [X31 + 0x20]
	0x021E3658 LDR X27, [X31 + 0x10]
	0x021E365C LDP X29, X30, [X31], #0x60
	0x021E3660 RET
	0x021E3664 BL 0x1C16F20
	0x021E3668 BL 0x1C16F28
	0x021E366C BL 0x3EB1B20
	0x021E3670 STP X30, X23, [X31 - 0x30]!
	0x021E3674 STP X22, X21, [X31 + 0x10]
	0x021E3678 STP X20, X19, [X31 + 0x20]
	0x021E367C MOV X23, X2
	0x021E3680 LDR X8, [X23 + 0x38]!
	0x021E3684 MOV W21, W1
	0x021E3688 MOV X19, X0
	0x021E368C CBNZ X8, 0x21E36A0
	0x021E3690 MOV X0, X2
	0x021E3694 MOV X20, X2
	0x021E3698 BL 0x1C5C6E0
	0x021E369C LDR X8, [X20 + 0x38]
	0x021E36A0 LDR X0, [X8]
	0x021E36A4 LDRB W8, [X0 + 0x135]
	0x021E36A8 TBNZ X8, 0x0, 0x21E36B0
	0x021E36AC BL 0x1C5C684
	0x021E36B0 BL 0x1C16F10
	0x021E36B4 LDR X8, [X23]
	0x021E36B8 MOV X20, X0
	0x021E36BC LDR X1, [X8 + 0x8]
	0x021E36C0 LDR X8, [X1]
	0x021E36C4 BLR X8
	0x021E36C8 CBZ X20, 0x21E3948
	0x021E36CC STR W21, [X20 + 0x10]
	0x021E36D0 LDR X8, [X23]
	0x021E36D4 LDR X0, [X8 + 0x28]
	0x021E36D8 LDRB W8, [X0 + 0x135]
	0x021E36DC TBNZ X8, 0x0, 0x21E36E4
	0x021E36E0 BL 0x1C5C684
	0x021E36E4 LDR W8, [X0 + 0xE0]
	0x021E36E8 CBNZ W8, 0x21E36F0
	0x021E36EC BL 0x1C16DFC
	0x021E36F0 LDR X8, [X23]
	0x021E36F4 LDR X0, [X8 + 0x28]
	0x021E36F8 LDRB W8, [X0 + 0x135]
	0x021E36FC TBNZ X8, 0x0, 0x21E3704
	0x021E3700 BL 0x1C5C684
	0x021E3704 LDR X8, [X0 + 0xB8]
	0x021E3708 LDR X21, [X8 + 0x8]
	0x021E370C CBNZ X21, 0x21E37B8
	0x021E3710 LDR X8, [X23]
	0x021E3714 LDR X0, [X8 + 0x28]
	0x021E3718 LDRB W8, [X0 + 0x135]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X3+56]
	007 Move X19, X3
	008 Move W21, W2
	009 Move W22, W1
	010 Move X20, X0
	011 Compare X8, 0
	012 JumpIfNotEqual {15}
	013 Move X0, X19
	014 Call 0x1C5D6E0
	015 Compare X20, 0
	016 JumpIfEqual {79}
	017 Move W8, [X20+24]
	018 Compare W8, 0
	019 JumpIfEqual {52}
	020 Move TEMP, X22
	021 And TEMP, TEMP, -2147483648
	022 Compare TEMP, -2147483648
	023 JumpIfEqual {91}
	024 Subtract W9, W8, W22
	025 Move TEMP, X21
	026 And TEMP, TEMP, -2147483648
	027 Compare TEMP, -2147483648
	028 JumpIfEqual {98}
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Compare W21, 0
	031 JumpIfEqual {63}
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move X8, [X19+56]
	034 Move X0, [X8+8]
	035 Move W8, [X0+309]
	036 Move TEMP, X8
	037 And TEMP, TEMP, 1
	038 Compare TEMP, 1
	039 JumpIfEqual {41}
	040 Call 0x1C5D684
	041 Move W1, W21
	042 Call 0x1C17D6C
	043 Move X19, X0
	044 Move X0, X20
	045 Move W1, W22
	046 Move X2, X19
	047 Move W3, W31
	048 Move W4, W21
	049 Move X5, X31
	050 Call Array.Copy, X0, X1, X2, X3, X4
	051 Move X20, X19
	052 Compare W22, 0
	053 JumpIfNotEqual {91}
	054 Compare W21, 0
	055 JumpIfNotEqual {98}
	056 Move X0, X20
	057 Move X20, [X31+32]
	058 Move X19, [X31+40]
	059 Move X22, [X31+16]
	060 Move X21, [X31+24]
	061 Move X30, [X31+48]
	062 Return X0
	063 Move X8, [X19+56]
	064 Move X0, [X8+8]
	065 Move W8, [X0+309]
	066 Move TEMP, X8
	067 And TEMP, TEMP, 1
	068 Compare TEMP, 1
	069 JumpIfEqual {71}
	070 Call 0x1C5D684
	071 Move X20, [X31+32]
	072 Move X19, [X31+40]
	073 Move X22, [X31+16]
	074 Move X21, [X31+24]
	075 Move W1, W31
	076 Move X30, [X31+48]
	077 Call 0x1C17D6C
	078 Return X0
	079 Move X0, 0x1F16000
	080 Move X0, [X0+1320]
	081 Call 0x1C17D08
	082 Call 0x1C17F10
	083 Move X20, X0
	084 Move X0, 0x1F39000
	085 Move X0, [X0+1600]
	086 Call 0x1C17D08
	087 Move X1, X0
	088 Move X0, X20
	089 Move X2, X31
	090 Call ArgumentNullException..ctor, X0, X1
	091 Move X0, 0x1F19000
	092 Move X0, [X0+1888]
	093 Call 0x1C17D08
	094 Call 0x1C17F10
	095 Move X20, X0
	096 Move X0, 0x1F39000
	097 Move X0, [X0+1624]
	098 Move X0, 0x1F19000
	099 Move X0, [X0+1888]
	100 Call 0x1C17D08
	101 Call 0x1C17F10
	102 Move X20, X0
	103 Move X0, 0x1F19000
	104 Move X0, [X0+1896]
	105 Call 0x1C17D08
	106 Move X1, X0
	107 Move X0, X20
	108 Move X2, X31
	109 Call ArgumentOutOfRangeException..ctor, X0, X1
	110 Move X0, X20
	111 Move X1, X19
	112 Call 0x1C17DEC

Method: T[] SubArray(T[] array, System.Int64 startIndex, System.Int64 length)

Disassembly:
	0x021E371C TBNZ X8, 0x0, 0x21E3724
	0x021E3720 BL 0x1C5C684
	0x021E3724 LDR W8, [X0 + 0xE0]
	0x021E3728 CBNZ W8, 0x21E3730
	0x021E372C BL 0x1C16DFC
	0x021E3730 LDR X8, [X23]
	0x021E3734 LDR X0, [X8 + 0x28]
	0x021E3738 LDRB W9, [X0 + 0x135]
	0x021E373C TBNZ X9, 0x0, 0x21E3748
	0x021E3740 BL 0x1C5C684
	0x021E3744 LDR X8, [X23]
	0x021E3748 LDR X8, [X8 + 0x20]
	0x021E374C LDR X9, [X0 + 0xB8]
	0x021E3750 LDRB W10, [X8 + 0x135]
	0x021E3754 LDR X22, [X9]
	0x021E3758 TBNZ X10, 0x0, 0x21E3768
	0x021E375C MOV X0, X8
	0x021E3760 BL 0x1C5C684
	0x021E3764 MOV X8, X0
	0x021E3768 MOV X0, X8
	0x021E376C BL 0x1C16F10
	0x021E3770 LDR X8, [X23]
	0x021E3774 MOV X1, X22
	0x021E3778 MOV X21, X0
	0x021E377C LDP X2, X3, [X8 + 0x30]
	0x021E3780 LDR X8, [X3]
	0x021E3784 BLR X8
	0x021E3788 LDR X8, [X23]
	0x021E378C LDR X0, [X8 + 0x28]
	0x021E3790 LDRB W8, [X0 + 0x135]
	0x021E3794 TBNZ X8, 0x0, 0x21E379C
	0x021E3798 BL 0x1C5C684
	0x021E379C LDR X8, [X0 + 0xB8]
	0x021E37A0 STR X21, [X8 + 0x8]
	0x021E37A4 LDR X8, [X23]
	0x021E37A8 LDR X0, [X8 + 0x28]
	0x021E37AC LDRB W8, [X0 + 0x135]
	0x021E37B0 TBNZ X8, 0x0, 0x21E37B8
	0x021E37B4 BL 0x1C5C684
	0x021E37B8 LDR X8, [X23]
	0x021E37BC MOV X0, X19
	0x021E37C0 MOV X1, X21
	0x021E37C4 LDR X2, [X8 + 0x40]
	0x021E37C8 LDR X8, [X2]
	0x021E37CC BLR X8
	0x021E37D0 LDR X8, [X23]
	0x021E37D4 MOV X19, X0
	0x021E37D8 LDR X8, [X8 + 0x58]
	0x021E37DC LDRB W9, [X8 + 0x135]
	0x021E37E0 TBNZ X9, 0x0, 0x21E37F0
	0x021E37E4 MOV X0, X8
	0x021E37E8 BL 0x1C5C684
	0x021E37EC MOV X8, X0
	0x021E37F0 MOV X0, X8
	0x021E37F4 BL 0x1C16F10
	0x021E37F8 LDR X8, [X23]
	0x021E37FC MOV X1, X20
	0x021E3800 MOV X21, X0
	0x021E3804 LDR X3, [X8 + 0x60]
	0x021E3808 LDR X2, [X8 + 0x50]
	0x021E380C LDR X9, [X3]
	0x021E3810 BLR X9
	0x021E3814 LDR X8, [X23]
	0x021E3818 MOV X0, X19
	0x021E381C MOV X1, X21
	0x021E3820 LDR X2, [X8 + 0x68]
	0x021E3824 LDR X8, [X2]
	0x021E3828 BLR X8
	0x021E382C LDR X8, [X23]
	0x021E3830 MOV X19, X0
	0x021E3834 LDR X8, [X8 + 0x28]
	0x021E3838 LDRB W9, [X8 + 0x135]
	0x021E383C TBNZ X9, 0x0, 0x21E384C
	0x021E3840 MOV X0, X8
	0x021E3844 BL 0x1C5C684
	0x021E3848 MOV X8, X0
	0x021E384C LDR W9, [X8 + 0xE0]
	0x021E3850 CBNZ W9, 0x21E385C
	0x021E3854 MOV X0, X8
	0x021E3858 BL 0x1C16DFC
	0x021E385C LDR X8, [X23]
	0x021E3860 LDR X0, [X8 + 0x28]
	0x021E3864 LDRB W8, [X0 + 0x135]
	0x021E3868 TBNZ X8, 0x0, 0x21E3870
	0x021E386C BL 0x1C5C684
	0x021E3870 LDR X8, [X0 + 0xB8]
	0x021E3874 LDR X20, [X8 + 0x18]
	0x021E3878 CBNZ X20, 0x21E3924
	0x021E387C LDR X8, [X23]
	0x021E3880 LDR X0, [X8 + 0x28]
	0x021E3884 LDRB W8, [X0 + 0x135]
	0x021E3888 TBNZ X8, 0x0, 0x21E3890
	0x021E388C BL 0x1C5C684
	0x021E3890 LDR W8, [X0 + 0xE0]
	0x021E3894 CBNZ W8, 0x21E389C

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X3+56]
	007 Move X19, X3
	008 Move X21, X2
	009 Move X22, X1
	010 Move X20, X0
	011 Compare X8, 0
	012 JumpIfNotEqual {15}
	013 Move X0, X19
	014 Call 0x1C5D6E0
	015 Compare X20, 0
	016 JumpIfEqual {83}
	017 Move X8, [X20+24]
	018 Move X9, X8
	019 ShiftRight X9, 32
	020 And X9, X9, 0x7FFFFFFF
	021 Compare X9, 0
	022 JumpIfEqual {56}
	023 Move TEMP, X22
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {95}
	027 Move X8, W8
	028 Subtract X9, X8, X22
	029 Move TEMP, X21
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfEqual {102}
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Compare X21, 0
	035 JumpIfEqual {67}
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Move X8, [X19+56]
	038 Move X0, [X8+8]
	039 Move W8, [X0+309]
	040 Move TEMP, X8
	041 And TEMP, TEMP, 1
	042 Compare TEMP, 1
	043 JumpIfEqual {45}
	044 Call 0x1C5D684
	045 Move W1, W21
	046 Call 0x1C17D6C
	047 Move X19, X0
	048 Move X0, X20
	049 Move X1, X22
	050 Move X2, X19
	051 Move X3, X31
	052 Move X4, X21
	053 Move X5, X31
	054 Call Array.Copy, X0, X1, X2, X3, X4
	055 Move X20, X19
	056 Compare X22, 0
	057 JumpIfNotEqual {95}
	058 Compare X21, 0
	059 JumpIfNotEqual {102}
	060 Move X0, X20
	061 Move X20, [X31+32]
	062 Move X19, [X31+40]
	063 Move X22, [X31+16]
	064 Move X21, [X31+24]
	065 Move X30, [X31+48]
	066 Return X0
	067 Move X8, [X19+56]
	068 Move X0, [X8+8]
	069 Move W8, [X0+309]
	070 Move TEMP, X8
	071 And TEMP, TEMP, 1
	072 Compare TEMP, 1
	073 JumpIfEqual {75}
	074 Call 0x1C5D684
	075 Move X20, [X31+32]
	076 Move X19, [X31+40]
	077 Move X22, [X31+16]
	078 Move X21, [X31+24]
	079 Move W1, W31
	080 Move X30, [X31+48]
	081 Call 0x1C17D6C
	082 Return X0
	083 Move X0, 0x1F16000
	084 Move X0, [X0+1320]
	085 Call 0x1C17D08
	086 Call 0x1C17F10
	087 Move X20, X0
	088 Move X0, 0x1F39000
	089 Move X0, [X0+1600]
	090 Call 0x1C17D08
	091 Move X1, X0
	092 Move X0, X20
	093 Move X2, X31
	094 Call ArgumentNullException..ctor, X0, X1
	095 Move X0, 0x1F19000
	096 Move X0, [X0+1888]
	097 Call 0x1C17D08
	098 Call 0x1C17F10
	099 Move X20, X0
	100 Move X0, 0x1F39000
	101 Move X0, [X0+1624]
	102 Move X0, 0x1F19000
	103 Move X0, [X0+1888]
	104 Call 0x1C17D08
	105 Call 0x1C17F10
	106 Move X20, X0
	107 Move X0, 0x1F19000
	108 Move X0, [X0+1896]
	109 Call 0x1C17D08
	110 Move X1, X0
	111 Move X0, X20
	112 Move X2, X31
	113 Call ArgumentOutOfRangeException..ctor, X0, X1
	114 Move X0, X20
	115 Move X1, X19
	116 Call 0x1C17DEC

Method: System.Void Times(System.Int32 n, System.Action`1<System.Int32> action)

Disassembly:
	0x03E6D1CC B.NE 0x3E6D1D4
	0x03E6D1D0 BL 0x3E6D1E0
	0x03E6D1D4 MOV X0, X19
	0x03E6D1D8 BL 0x1C16F18
	0x03E6D1DC BL 0x1990590
	0x03E6D1E0 STR X30, [X31 - 0x20]!
	0x03E6D1E4 STP X20, X19, [X31 + 0x10]
	0x03E6D1E8 ADRP X19, 0x57B000
	0x03E6D1EC LDRB W8, [X19 + 0xD0E]
	0x03E6D1F0 MOV X20, X0
	0x03E6D1F4 TBNZ X8, 0x0, 0x3E6D20C
	0x03E6D1F8 ADRP X0, 0x286000
	0x03E6D1FC LDR X0, [X0 + 0xE00]
	0x03E6D200 BL 0x1C16CF4
	0x03E6D204 MOVZ W8, 0x1
	0x03E6D208 STRB W8, [X19 + 0xD0E]
	0x03E6D20C LDR X19, [X20 + 0x38]
	0x03E6D210 MOVN W8, 0x0
	0x03E6D214 STR W8, [X20 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 NotImplemented "Instruction CMP not yet implemented."
	006 Move X20, X1
	007 Compare X1, 0
	008 JumpIfEqual {18}
	009 Move W19, W0
	010 Move W21, W31
	011 Move X8, [X20+24]
	012 Move X0, [X20+64]
	013 Move X2, [X20+40]
	014 Move W1, W21
	015 NotImplemented "Instruction BLR not yet implemented."
	016 Add W21, W21, 1
	017 NotImplemented "Instruction CMP not yet implemented."
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 Return 

Method: System.Void Times(System.Int64 n, System.Action`1<System.Int64> action)

Disassembly:
	0x03E6D218 CBZ X19, 0x3E6D264
	0x03E6D21C ADRP X10, 0x286000
	0x03E6D220 LDR X8, [X19]
	0x03E6D224 LDR X10, [X10 + 0xE00]
	0x03E6D228 LDRH W9, [X8 + 0x12E]
	0x03E6D22C LDR X1, [X10]
	0x03E6D230 CBZ X9, 0x3E6D254
	0x03E6D234 LDR X10, [X8 + 0xB0]
	0x03E6D238 ADD X10, X10, 0x8
	0x03E6D23C LDUR X11, [X10 - 0x8]
	0x03E6D240 CMP X11, X1
	0x03E6D244 B.EQ 0x3E6D270
	0x03E6D248 SUBS X9, X9, 0x1
	0x03E6D24C ADD X10, X10, 0x10
	0x03E6D250 B.NE 0x3E6D23C
	0x03E6D254 MOV X0, X19
	0x03E6D258 MOV W2, W31
	0x03E6D25C BL 0x1C5C788
	0x03E6D260 B 0x3E6D27C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 NotImplemented "Instruction CMP not yet implemented."
	006 Move X20, X1
	007 Compare X1, 0
	008 JumpIfEqual {18}
	009 Move X19, X0
	010 Move X21, X31
	011 Move X8, [X20+24]
	012 Move X0, [X20+64]
	013 Move X2, [X20+40]
	014 Move X1, X21
	015 NotImplemented "Instruction BLR not yet implemented."
	016 Add X21, X21, 1
	017 NotImplemented "Instruction CMP not yet implemented."
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 Return 

Method: System.Byte[] ToHostOrder(System.Byte[] source, WebSocketSharp.ByteOrder sourceOrder)

Disassembly:
	0x03E6B9B0 BL 0x1C16CF4
	0x03E6B9B4 MOVZ W8, 0x1
	0x03E6B9B8 STRB W8, [X20 + 0xD02]
	0x03E6B9BC LDR X0, [X21]
	0x03E6B9C0 LDR W8, [X0 + 0xE0]
	0x03E6B9C4 CBNZ W8, 0x3E6B9CC
	0x03E6B9C8 BL 0x1C16DFC
	0x03E6B9CC MOV W0, W19
	0x03E6B9D0 LDP X20, X19, [X31 + 0x10]
	0x03E6B9D4 LDP X30, X21, [X31], #0x20
	0x03E6B9D8 B 0x3E6B9DC
	0x03E6B9DC STR X30, [X31 - 0x20]!
	0x03E6B9E0 STP X20, X19, [X31 + 0x10]
	0x03E6B9E4 ADRP X20, 0x57D000
	0x03E6B9E8 LDRB W8, [X20 + 0xD03]
	0x03E6B9EC MOV W19, W0
	0x03E6B9F0 TBNZ X8, 0x0, 0x3E6BC30
	0x03E6B9F4 ADRP X0, 0x28A000
	0x03E6B9F8 LDR X0, [X0 + 0x278]
	0x03E6B9FC BL 0x1C16CF4
	0x03E6BA00 ADRP X0, 0x2D2000
	0x03E6BA04 LDR X0, [X0 + 0x500]
	0x03E6BA08 BL 0x1C16CF4
	0x03E6BA0C ADRP X0, 0x2D2000
	0x03E6BA10 LDR X0, [X0 + 0x508]
	0x03E6BA14 BL 0x1C16CF4
	0x03E6BA18 ADRP X0, 0x2D2000
	0x03E6BA1C LDR X0, [X0 + 0x510]
	0x03E6BA20 BL 0x1C16CF4
	0x03E6BA24 ADRP X0, 0x2D2000
	0x03E6BA28 LDR X0, [X0 + 0x518]
	0x03E6BA2C BL 0x1C16CF4
	0x03E6BA30 ADRP X0, 0x2D2000
	0x03E6BA34 LDR X0, [X0 + 0x520]
	0x03E6BA38 BL 0x1C16CF4
	0x03E6BA3C ADRP X0, 0x2D2000
	0x03E6BA40 LDR X0, [X0 + 0x528]
	0x03E6BA44 BL 0x1C16CF4
	0x03E6BA48 ADRP X0, 0x2D2000
	0x03E6BA4C LDR X0, [X0 + 0x530]
	0x03E6BA50 BL 0x1C16CF4
	0x03E6BA54 ADRP X0, 0x2D2000
	0x03E6BA58 LDR X0, [X0 + 0x538]
	0x03E6BA5C BL 0x1C16CF4
	0x03E6BA60 ADRP X0, 0x2D2000
	0x03E6BA64 LDR X0, [X0 + 0x540]
	0x03E6BA68 BL 0x1C16CF4
	0x03E6BA6C ADRP X0, 0x2D2000
	0x03E6BA70 LDR X0, [X0 + 0x548]
	0x03E6BA74 BL 0x1C16CF4
	0x03E6BA78 ADRP X0, 0x2D2000
	0x03E6BA7C LDR X0, [X0 + 0x550]
	0x03E6BA80 BL 0x1C16CF4
	0x03E6BA84 ADRP X0, 0x2D2000
	0x03E6BA88 LDR X0, [X0 + 0x558]
	0x03E6BA8C BL 0x1C16CF4
	0x03E6BA90 ADRP X0, 0x2D2000
	0x03E6BA94 LDR X0, [X0 + 0x560]
	0x03E6BA98 BL 0x1C16CF4
	0x03E6BA9C ADRP X0, 0x2D2000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x57E000
	006 Move W8, [X21+3333]
	007 Move W20, W1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0x302000
	014 Move X0, [X0+808]
	015 Call 0x1C17CF4
	016 Move X0, 0x290000
	017 Move X0, [X0+584]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+3333], W8
	021 Compare X19, 0
	022 JumpIfEqual {57}
	023 Move W8, [X19+24]
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move X21, 0x290000
	026 Move X21, [X21+584]
	027 Move X0, [X21]
	028 Move W8, [X0+224]
	029 Compare W8, 0
	030 JumpIfEqual {48}
	031 Compare W20, 0
	032 JumpIfEqual {51}
	033 Move X0, [X21]
	034 Move W8, [X0+224]
	035 Compare W8, 0
	036 JumpIfNotEqual {38}
	037 Call 0x1C17DFC
	038 Move X8, 0x302000
	039 Move X8, [X8+808]
	040 Move X0, X19
	041 Move X20, [X31+16]
	042 Move X19, [X31+24]
	043 Move X1, [X8]
	044 Move X30, [X31+32]
	045 Move X21, [X31+40]
	046 Call 0x21E3398, X0
	047 Return X0
	048 Call 0x1C17DFC
	049 Compare W20, 0
	050 JumpIfNotEqual {33}
	051 Move X0, X19
	052 Move X20, [X31+16]
	053 Move X19, [X31+24]
	054 Move X30, [X31+32]
	055 Move X21, [X31+40]
	056 Return X0
	057 Move X0, 0x28E000
	058 Move X0, [X0+1320]
	059 Call 0x1C17D08
	060 Call 0x1C17F10
	061 Move X19, X0
	062 Move X0, 0x294000
	063 Move X0, [X0+1408]
	064 Call 0x1C17D08
	065 Move X1, X0
	066 Move X0, X19
	067 Move X2, X31
	068 Call ArgumentNullException..ctor, X0, X1
	069 Move X0, 0x302000
	070 Move X0, [X0+816]
	071 Call 0x1C17D08
	072 Move X1, X0
	073 Move X0, X19
	074 Call 0x1C17DEC

Method: System.String ToString(T[] array, System.String separator)

Disassembly:
	0x021E3C44 CMP W24, W0
	0x021E3C48 B.LT 0x21E3BC4
	0x021E3C4C MOVN W24, 0x0
	0x021E3C50 LDR X8, [X26 + 0x28]
	0x021E3C54 LDUR X9, [X29 - 0x8]
	0x021E3C58 CMP X8, X9
	0x021E3C5C B.NE 0x21E3C80
	0x021E3C60 MOV W0, W24
	0x021E3C64 ADD X31, X29, 0x0
	0x021E3C68 LDP X20, X19, [X31 + 0x40]
	0x021E3C6C LDP X22, X21, [X31 + 0x30]
	0x021E3C70 LDP X24, X23, [X31 + 0x20]
	0x021E3C74 LDP X26, X25, [X31 + 0x10]
	0x021E3C78 LDP X29, X30, [X31], #0x50
	0x021E3C7C RET
	0x021E3C80 BL 0x3EB1B20
	0x021E3C84 STP X30, X19, [X31 - 0x10]!
	0x021E3C88 LDR X8, [X0 + 0x38]
	0x021E3C8C CBNZ X8, 0x21E3C9C
	0x021E3C90 MOV X19, X0
	0x021E3C94 BL 0x1C5C6E0
	0x021E3C98 LDR X8, [X19 + 0x38]
	0x021E3C9C LDR X8, [X8]
	0x021E3CA0 LDR W8, [X8 + 0xFC]
	0x021E3CA4 ADD W9, W8, 0x3
	0x021E3CA8 CMP W8, 0x0
	0x021E3CAC CSEL W8, W9, W8, LT
	0x021E3CB0 SBFM W0, W8, 0x2, 0x1F
	0x021E3CB4 LDP X30, X19, [X31], #0x10
	0x021E3CB8 RET
	0x021E3CBC STP X29, X30, [X31 - 0x60]!
	0x021E3CC0 STP X28, X27, [X31 + 0x10]
	0x021E3CC4 STP X26, X25, [X31 + 0x20]
	0x021E3CC8 STP X24, X23, [X31 + 0x30]
	0x021E3CCC STP X22, X21, [X31 + 0x40]
	0x021E3CD0 STP X20, X19, [X31 + 0x50]
	0x021E3CD4 ADD X29, X31, 0x0
	0x021E3CD8 SUB X31, X31, 0x30
	0x021E3CDC MRS X25, 0xC000
	0x021E3CE0 LDR X8, [X25 + 0x28]
	0x021E3CE4 MOV X19, X3
	0x021E3CE8 MOV X20, X2
	0x021E3CEC MOV X21, X1
	0x021E3CF0 STUR X8, [X29 - 0x8]
	0x021E3CF4 LDR X8, [X3 + 0x38]
	0x021E3CF8 CBNZ X8, 0x21E3D08
	0x021E3CFC MOV X0, X19
	0x021E3D00 BL 0x1C5C6E0
	0x021E3D04 LDR X8, [X19 + 0x38]
	0x021E3D08 LDR X9, [X8 + 0x30]
	0x021E3D0C LDR W22, [X9 + 0xFC]
	0x021E3D10 ADD X9, X31, 0x0
	0x021E3D14 ADD X10, X22, 0xF
	0x021E3D18 AND X10, X10, 0x1FFFFFFFF
	0x021E3D1C SUB X23, X9, X10
	0x021E3D20 ADD X31, X23, 0x0
	0x021E3D24 CBZ X21, 0x21E3E54
	0x021E3D28 LDR X1, [X8 + 0x8]
	0x021E3D2C MOV X0, X21
	0x021E3D30 LDR X8, [X1]
	0x021E3D34 BLR X8
	0x021E3D38 LDR X9, [X20]
	0x021E3D3C LDR X8, [X19 + 0x38]
	0x021E3D40 MOV W24, W0
	0x021E3D44 STUR X25, [X29 - 0x28]
	0x021E3D48 CBZ X9, 0x21E3D64
	0x021E3D4C LDR X2, [X8 + 0x20]
	0x021E3D50 MOV X0, X20
	0x021E3D54 MOV W1, W24
	0x021E3D58 LDR X8, [X2]
	0x021E3D5C BLR X8
	0x021E3D60 B 0x21E3D80
	0x021E3D64 LDR X0, [X8 + 0x18]
	0x021E3D68 LDRB W8, [X0 + 0x135]
	0x021E3D6C TBNZ X8, 0x0, 0x21E3D74
	0x021E3D70 BL 0x1C5C684
	0x021E3D74 MOV W1, W24
	0x021E3D78 BL 0x1C16D6C
	0x021E3D7C STR X0, [X20]
	0x021E3D80 CMP W24, 0x1
	0x021E3D84 B.LT 0x21E3E1C
	0x021E3D88 MOV X26, X31
	0x021E3D8C MOV W24, W24
	0x021E3D90 SUB X27, X29, 0xC
	0x021E3D94 LDR X8, [X19 + 0x38]
	0x021E3D98 LDR X28, [X20]
	0x021E3D9C SUB X3, X29, 0x20
	0x021E3DA0 MOV X2, X21
	0x021E3DA4 LDR X1, [X8 + 0x28]
	0x021E3DA8 MOV X4, X23
	0x021E3DAC LDR X0, [X1]
	0x021E3DB0 STUR W26, [X29 - 0xC]
	0x021E3DB4 STP X27, X23, [X29 - 0x20]
	0x021E3DB8 LDR X8, [X1 + 0x10]
	0x021E3DBC BLR X8
	0x021E3DC0 CBZ X28, 0x21E3E54
	0x021E3DC4 LDR W25, [X28 + 0x18]
	0x021E3DC8 CMP X26, X25
	0x021E3DCC B.CS 0x21E3E50
	0x021E3DD0 LDR X8, [X28]
	0x021E3DD4 MOV X1, X23
	0x021E3DD8 MOV X2, X22
	0x021E3DDC LDR W8, [X8 + 0x104]
	0x021E3DE0 NOP
	0x021E3DE4 MADD X8, X26, X8, X28
	0x021E3DE8 ADD X0, X8, 0x20

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X22, 0x21F7000
	011 Move W8, [X22+2095]
	012 Move X21, X2
	013 Move X20, X1
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {33}
	019 Move X0, 0x1F11000
	020 Move X0, [X0+2288]
	021 Call 0x1C17CF4
	022 Move X0, 0x1F13000
	023 Move X0, [X0+632]
	024 Call 0x1C17CF4
	025 Move X0, 0x1F39000
	026 Move X0, [X0+2712]
	027 Call 0x1C17CF4
	028 Move X0, 0x1F15000
	029 Move X0, [X0+272]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X22+2095], W8
	033 Compare X19, 0
	034 JumpIfEqual {108}
	035 Move W22, [X19+24]
	036 Compare W22, 0
	037 JumpIfEqual {91}
	038 Move X8, 0x1F11000
	039 Move X8, [X8+2288]
	040 Move X0, [X8]
	041 Call 0x1C17F10
	042 Move W1, 64
	043 Move X2, X31
	044 Move X21, X0
	045 Call StringBuilder..ctor, X0, X1
	046 Move W8, [X19+24]
	047 Subtract W22, W22, 1
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Move X26, 0x1F39000
	050 Move X26, [X26+2712]
	051 Move X23, X31
	052 Move W24, W22
	053 Add X25, X19, 32
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Compare X21, 0
	056 JumpIfEqual {107}
	057 Move X2, [X25]
	058 Move X1, [X26]
	059 Move X0, X21
	060 Move X3, X20
	061 Move X4, X31
	062 Call StringBuilder.AppendFormat, X0, X1, X2, X3
	063 Move W8, [X19+24]
	064 Add X23, X23, 1
	065 NotImplemented "Instruction CMP not yet implemented."
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Compare X21, 0
	068 JumpIfEqual {107}
	069 Move X8, 0x1F15000
	070 Move X8, [X8+272]
	071 Add X9, X19, W22
	072 Move X2, [X9+32]
	073 Move X0, X21
	074 Move X1, [X8]
	075 Move X3, X31
	076 Call StringBuilder.AppendFormat, X0, X1, X2
	077 Move X8, [X21]
	078 Move X0, X21
	079 Move X20, [X31+64]
	080 Move X19, [X31+72]
	081 Move X22, [X31+48]
	082 Move X21, [X31+56]
	083 Move X2, [X8+360]
	084 Move X1, [X8+368]
	085 Move X24, [X31+32]
	086 Move X23, [X31+40]
	087 Move X26, [X31+16]
	088 Move X25, [X31+24]
	089 Move X30, [X31+80]
	090 CallNoReturn X2
	091 Move X8, 0x1F13000
	092 Move X8, [X8+632]
	093 Move X20, [X31+64]
	094 Move X19, [X31+72]
	095 Move X22, [X31+48]
	096 Move X21, [X31+56]
	097 Move X24, [X31+32]
	098 Move X23, [X31+40]
	099 Move X8, [X8]
	100 Move X26, [X31+16]
	101 Move X25, [X31+24]
	102 Move X8, [X8+184]
	103 Move X0, [X8]
	104 Move X30, [X31+80]
	105 Return X0
	106 Call 0x1C17F28
	107 Call 0x1C17F20
	108 Move X0, 0x1F16000
	109 Move X0, [X0+1320]
	110 Call 0x1C17D08
	111 Call 0x1C17F10
	112 Move X19, X0
	113 Move X0, 0x1F39000
	114 Move X0, [X0+1600]
	115 Call 0x1C17D08
	116 Move X1, X0
	117 Move X0, X19
	118 Move X2, X31
	119 Call ArgumentNullException..ctor, X0, X1
	120 Move X0, X19
	121 Move X1, X21
	122 Call 0x1C17DEC

Method: System.Uri ToUri(System.String value)

Disassembly:
	0x03E6C1A8 BL 0x1C16DEC
	0x03E6C1AC BL 0x1C16F20
	0x03E6C1B0 CBZ X0, 0x3E6C1C4
	0x03E6C1B4 LDR W8, [X0 + 0x10]
	0x03E6C1B8 CMP W8, 0x0
	0x03E6C1BC CSET W0, EQ
	0x03E6C1C0 RET
	0x03E6C1C4 MOVZ W0, 0x1
	0x03E6C1C8 RET
	0x03E6C1CC STP X30, X21, [X31 - 0x20]!
	0x03E6C1D0 STP X20, X19, [X31 + 0x10]
	0x03E6C1D4 CMP W0, 0x1
	0x03E6C1D8 B.LT 0x3E6C20C
	0x03E6C1DC MOV X20, X1
	0x03E6C1E0 CBZ X1, 0x3E6C20C
	0x03E6C1E4 MOV W19, W0
	0x03E6C1E8 MOV W21, W31
	0x03E6C1EC LDR X8, [X20 + 0x18]
	0x03E6C1F0 LDR X0, [X20 + 0x40]
	0x03E6C1F4 LDR X2, [X20 + 0x28]
	0x03E6C1F8 MOV W1, W21
	0x03E6C1FC BLR X8
	0x03E6C200 ADD W21, W21, 0x1
	0x03E6C204 CMP W19, W21
	0x03E6C208 B.NE 0x3E6C1EC
	0x03E6C20C LDP X20, X19, [X31 + 0x10]
	0x03E6C210 LDP X30, X21, [X31], #0x20
	0x03E6C214 RET
	0x03E6C218 STP X30, X21, [X31 - 0x20]!
	0x03E6C21C STP X20, X19, [X31 + 0x10]
	0x03E6C220 CMP X0, 0x1
	0x03E6C224 B.LT 0x3E6C258
	0x03E6C228 MOV X20, X1
	0x03E6C22C CBZ X1, 0x3E6C258
	0x03E6C230 MOV X19, X0
	0x03E6C234 MOV X21, X31
	0x03E6C238 LDR X8, [X20 + 0x18]
	0x03E6C23C LDR X0, [X20 + 0x40]
	0x03E6C240 LDR X2, [X20 + 0x28]
	0x03E6C244 MOV X1, X21
	0x03E6C248 BLR X8
	0x03E6C24C ADD X21, X21, 0x1
	0x03E6C250 CMP X19, X21
	0x03E6C254 B.NE 0x3E6C238
	0x03E6C258 LDP X20, X19, [X31 + 0x10]
	0x03E6C25C LDP X30, X21, [X31], #0x20
	0x03E6C260 RET

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x57D000
	005 Move W8, [X20+3334]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0x28F000
	012 Move X0, [X0+584]
	013 Call 0x1C17CF4
	014 Move X0, 0x28A000
	015 Move X0, [X0+2600]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3334], W8
	019 Move [X31+8], X31
	020 Compare X19, 0
	021 JumpIfEqual {51}
	022 Move W8, [X19+16]
	023 Compare W8, 0
	024 JumpIfEqual {51}
	025 Move X8, 0x28F000
	026 Move X8, [X8+584]
	027 Move X0, [X8]
	028 Move W8, [X0+224]
	029 Compare W8, 0
	030 JumpIfNotEqual {32}
	031 Call 0x1C17DFC
	032 Move X0, X19
	033 Call Ext.MaybeUri, X0
	034 Move X9, 0x28A000
	035 Move X9, [X9+2600]
	036 Move W8, W0
	037 And W31, W8, 1
	038 Move W8, 1
	039 Move X0, [X9]
	040 NotImplemented "Instruction CINC not yet implemented."
	041 Move W9, [X0+224]
	042 Compare W9, 0
	043 JumpIfNotEqual {45}
	044 Call 0x1C17DFC
	045 Add X2, X31, 8
	046 Move X0, X19
	047 Move W1, W20
	048 Move X3, X31
	049 Call Uri.TryCreate, X0, X1, X2
	050 Move X0, [X31+8]
	051 Move X0, X31
	052 Move X20, [X31+16]
	053 Move X19, [X31+24]
	054 Move X30, [X31+32]
	055 Return X0

Method: System.Void .cctor()

Disassembly:
	0x03E6D264 LDP X20, X19, [X31 + 0x10]
	0x03E6D268 LDR X30, [X31], #0x20
	0x03E6D26C RET
	0x03E6D270 LDRSW X9, [X10]
	0x03E6D274 ADD X8, X8, X9, 0x4, LSL
	0x03E6D278 ADD X0, X8, 0x138
	0x03E6D27C LDP X2, X1, [X0]
	0x03E6D280 MOV X0, X19
	0x03E6D284 LDP X20, X19, [X31 + 0x10]
	0x03E6D288 LDR X30, [X31], #0x20
	0x03E6D28C BR X2
	0x03E6D290 LDR X0, [X0 + 0x18]
	0x03E6D294 RET
	0x03E6D298 STP X30, X19, [X31 - 0x10]!
	0x03E6D29C ADRP X0, 0x286000
	0x03E6D2A0 LDR X0, [X0 + 0xB40]
	0x03E6D2A4 BL 0x1C16D08
	0x03E6D2A8 BL 0x1C16F10
	0x03E6D2AC MOV X1, X31
	0x03E6D2B0 MOV X19, X0
	0x03E6D2B4 BL 0x3380310
	0x03E6D2B8 ADRP X0, 0x2FF000
	0x03E6D2BC LDR X0, [X0 + 0x3A8]
	0x03E6D2C0 BL 0x1C16D08
	0x03E6D2C4 MOV X1, X0
	0x03E6D2C8 MOV X0, X19
	0x03E6D2CC BL 0x1C16DEC
	0x03E6D2D0 LDR X0, [X0 + 0x18]
	0x03E6D2D4 RET
	0x03E6D2D8 STR X30, [X31 - 0x20]!

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x57C000
	006 Move X21, 0x287000
	007 Move X19, 0x28E000
	008 Move W8, [X20+3335]
	009 Move X21, [X21+1560]
	010 Move X19, [X19+584]
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x287000
	016 Move X0, [X0+1560]
	017 Call 0x1C17CF4
	018 Move X0, 0x28E000
	019 Move X0, [X0+584]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X20+3335], W8
	023 Move X0, [X21]
	024 Move W1, 1
	025 Call 0x1C17D6C
	026 Move X8, [X19]
	027 Move W9, 5
	028 Move X8, [X8+184]
	029 Move [X8], X0
	030 Move X8, [X19]
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X8, [X8+184]
	034 Move [X8+8], W9
	035 Move X30, [X31+32]
	036 Move X21, [X31+40]
	037 Return 

