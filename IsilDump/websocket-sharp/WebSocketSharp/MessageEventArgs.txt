Type: WebSocketSharp.MessageEventArgs

Method: System.Void .ctor(WebSocketSharp.WebSocketFrame frame)

Disassembly:
	0x03E6E408 LDR X22, [X22 + 0x420]
	0x03E6E40C CBNZ W8, 0x3E6E414
	0x03E6E410 BL 0x1C16DFC
	0x03E6E414 LDR X2, [X22]
	0x03E6E418 MOV X0, X20
	0x03E6E41C MOV X1, X21
	0x03E6E420 BL 0x21E1B10
	0x03E6E424 TBZ X0, 0x0, 0x3E6E434
	0x03E6E428 ADRP X8, 0x2FE000
	0x03E6E42C LDR X8, [X8 + 0x430]
	0x03E6E430 B 0x3E6E458
	0x03E6E434 LDR X0, [X24]
	0x03E6E438 LDR W8, [X0 + 0xE0]
	0x03E6E43C CBNZ W8, 0x3E6E444
	0x03E6E440 BL 0x1C16DFC
	0x03E6E444 MOV X0, X20
	0x03E6E448 BL 0x3E68798
	0x03E6E44C TBZ X0, 0x0, 0x3E6E468
	0x03E6E450 ADRP X8, 0x2FE000
	0x03E6E454 LDR X8, [X8 + 0x438]
	0x03E6E458 LDR X8, [X8]
	0x03E6E45C MOV W0, W31
	0x03E6E460 STR X8, [X19]
	0x03E6E464 B 0x3E6E46C
	0x03E6E468 MOVZ W0, 0x1
	0x03E6E46C LDP X20, X19, [X31 + 0x30]
	0x03E6E470 LDP X22, X21, [X31 + 0x20]
	0x03E6E474 LDP X24, X23, [X31 + 0x10]
	0x03E6E478 LDR X30, [X31], #0x40
	0x03E6E47C RET
	0x03E6E480 STP X30, X21, [X31 - 0x20]!
	0x03E6E484 STP X20, X19, [X31 + 0x10]
	0x03E6E488 ADRP X19, 0x57A000
	0x03E6E48C ADRP X21, 0x285000
	0x03E6E490 ADRP X20, 0x2FE000
	0x03E6E494 LDRB W8, [X19 + 0xD5E]
	0x03E6E498 LDR X21, [X21 + 0x618]
	0x03E6E49C LDR X20, [X20 + 0x3C8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x57B000
	007 Move X22, 0x2B2000
	008 Move W8, [X21+3344]
	009 Move X22, [X22+344]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x2B2000
	017 Move X0, [X0+344]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+3344], W8
	021 Move X0, [X22]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move X0, X19
	027 Move X1, X31
	028 Call EventArgs..ctor, X0
	029 Compare X20, 0
	030 JumpIfEqual {48}
	031 Move X0, X20
	032 Move X1, X31
	033 Call WebSocketFrame.get_Opcode, X0
	034 Move [X19+25], W0
	035 Move X0, X20
	036 Move X1, X31
	037 Call WebSocketFrame.get_PayloadData, X0
	038 Compare X0, 0
	039 JumpIfEqual {48}
	040 Call PayloadData.get_ApplicationData, X0
	041 Move [X19+32], X0
	042 Move X20, [X31+32]
	043 Move X19, [X31+40]
	044 Move X22, [X31+16]
	045 Move X21, [X31+24]
	046 Move X30, [X31+48]
	047 Return 
	048 Call 0x1C17F20

Method: System.Void .ctor(WebSocketSharp.Opcode opcode, System.Byte[] rawData)

Disassembly:
	0x03E6E540 BL 0x1C16F20
	0x03E6E544 LDR X0, [X0 + 0x40]
	0x03E6E548 RET
	0x03E6E54C LDR X0, [X0 + 0x98]
	0x03E6E550 RET
	0x03E6E554 STR X1, [X0 + 0x98]
	0x03E6E558 RET
	0x03E6E55C STP X30, X21, [X31 - 0x20]!
	0x03E6E560 STP X20, X19, [X31 + 0x10]
	0x03E6E564 ADRP X19, 0x57A000
	0x03E6E568 LDRB W8, [X19 + 0xD1A]
	0x03E6E56C MOV X20, X0
	0x03E6E570 TBNZ X8, 0x0, 0x3E6E588
	0x03E6E574 ADRP X0, 0x2FE000
	0x03E6E578 LDR X0, [X0 + 0x440]
	0x03E6E57C BL 0x1C16CF4
	0x03E6E580 MOVZ W8, 0x1
	0x03E6E584 STRB W8, [X19 + 0xD1A]
	0x03E6E588 LDR X19, [X20 + 0x68]
	0x03E6E58C MOV X1, X31
	0x03E6E590 MOV X0, X19
	0x03E6E594 BL 0x33E14E0
	0x03E6E598 LDR X8, [X20 + 0xB8]
	0x03E6E59C CBZ X8, 0x3E6E5C8
	0x03E6E5A0 LDR W8, [X8 + 0x20]
	0x03E6E5A4 MOV X0, X19
	0x03E6E5A8 MOV X1, X31
	0x03E6E5AC CMP W8, 0x0
	0x03E6E5B0 CSET W20, GT
	0x03E6E5B4 BL 0x33E14E4
	0x03E6E5B8 MOV W0, W20
	0x03E6E5BC LDP X20, X19, [X31 + 0x10]
	0x03E6E5C0 LDP X30, X21, [X31], #0x20
	0x03E6E5C4 RET
	0x03E6E5C8 BL 0x1C16F20
	0x03E6E5CC CMP W1, 0x1
	0x03E6E5D0 MOV X21, X0
	0x03E6E5D4 B.NE 0x3E6E600
	0x03E6E5D8 MOV X0, X21
	0x03E6E5DC BL 0x3EB1AD0
	0x03E6E5E0 LDR X20, [X0]
	0x03E6E5E4 BL 0x3EB1AE0
	0x03E6E5E8 MOV X0, X19
	0x03E6E5EC MOV X1, X31
	0x03E6E5F0 BL 0x33E14E4
	0x03E6E5F4 CBZ X20, 0x3E6E5B8
	0x03E6E5F8 MOV X0, X20
	0x03E6E5FC BL 0x1C16F18
	0x03E6E600 MOV X20, X31
	0x03E6E604 B 0x3E6E60C
	0x03E6E608 MOV X21, X0
	0x03E6E60C MOV X0, X19
	0x03E6E610 MOV X1, X31
	0x03E6E614 BL 0x33E14E4
	0x03E6E618 CBNZ X20, 0x3E6E624
	0x03E6E61C MOV X0, X21
	0x03E6E620 BL 0x1D2C690
	0x03E6E624 MOV X0, X20
	0x03E6E628 BL 0x1C16F18
	0x03E6E62C BL 0x1990590

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x57B000
	008 Move X23, 0x2B2000
	009 Move W8, [X22+3345]
	010 Move X23, [X23+344]
	011 Move X19, X2
	012 Move W21, W1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0x2B2000
	019 Move X0, [X0+344]
	020 Call 0x1C17CF4
	021 Move X0, 0x2FF000
	022 Move X0, [X0+952]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X22+3345], W8
	026 Move X0, [X23]
	027 Move W8, [X0+224]
	028 Compare W8, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X0, X20
	032 Move X1, X31
	033 Call EventArgs..ctor, X0
	034 Compare X19, 0
	035 JumpIfEqual {57}
	036 Move X22, 0x2FF000
	037 Move X22, [X22+952]
	038 Move X0, [X22]
	039 Move W8, [X0+224]
	040 Compare W8, 0
	041 JumpIfNotEqual {44}
	042 Call 0x1C17DFC
	043 Move X0, [X22]
	044 Move X8, [X0+184]
	045 NotImplemented "Instruction LDRSW not yet implemented."
	046 Move X8, [X8+8]
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Move [X20+25], W21
	049 Move [X20+32], X19
	050 Move X20, [X31+32]
	051 Move X19, [X31+40]
	052 Move X22, [X31+16]
	053 Move X21, [X31+24]
	054 Move X30, [X31+48]
	055 Move X23, [X31+56]
	056 Return 
	057 Call 0x1C17F20
	058 Move X0, 0x2AE000
	059 Move X0, [X0+2872]
	060 Call 0x1C17D08
	061 Call 0x1C17F10
	062 Move W1, 1009
	063 Move X2, X31
	064 Move X19, X0
	065 Call WebSocketException..ctor, X0, X1
	066 Move X0, 0x2FF000
	067 Move X0, [X0+960]
	068 Call 0x1C17D08
	069 Move X1, X0
	070 Move X0, X19
	071 Call 0x1C17DEC

Method: WebSocketSharp.Opcode get_Opcode()

Disassembly:
	0x03E6E630 LDRB W0, [X0 + 0xA0]
	0x03E6E634 RET

ISIL:
	001 Move W0, [X0+25]
	002 Return X0

Method: System.String get_Data()

Disassembly:
	0x03E6E638 AND W8, W1, 0x1
	0x03E6E63C STRB W8, [X0 + 0xA0]
	0x03E6E640 RET
	0x03E6E644 STR X30, [X31 - 0x20]!
	0x03E6E648 STP X20, X19, [X31 + 0x10]
	0x03E6E64C LDRH W20, [X0 + 0x108]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Call MessageEventArgs.setData, X0
	005 Move X0, [X19+16]
	006 Move X30, [X31+16]
	007 Move X19, [X31+24]
	008 Return X0

Method: System.Boolean get_IsBinary()

Disassembly:
	0x03E6E6DC B 0x3E6E71C
	0x03E6E6E0 LDR X19, [X20 + 0xA8]
	0x03E6E6E4 BL 0x1C16D44
	0x03E6E6E8 CBZ X19, 0x3E6E780

ISIL:
	001 Move W8, [X0+25]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 NotImplemented "Instruction CSET not yet implemented."
	004 Return X0

Method: System.Boolean get_IsPing()

Disassembly:
	0x03E6E6EC LDR X1, [X31 + 0x8]
	0x03E6E6F0 MOV X0, X19
	0x03E6E6F4 MOV X2, X31
	0x03E6E6F8 BL 0x3E7B278

ISIL:
	001 Move W8, [X0+25]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 NotImplemented "Instruction CSET not yet implemented."
	004 Return X0

Method: System.Boolean get_IsText()

Disassembly:
	0x03E6E6FC B 0x3E6E728
	0x03E6E700 LDR X20, [X20 + 0xA8]
	0x03E6E704 BL 0x1C16D44
	0x03E6E708 CBZ X20, 0x3E6E784

ISIL:
	001 Move W8, [X0+25]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 NotImplemented "Instruction CSET not yet implemented."
	004 Return X0

Method: System.Byte[] get_RawData()

Disassembly:
	0x03E6E70C LDR X1, [X31 + 0x8]
	0x03E6E710 MOV X0, X20
	0x03E6E714 MOV X2, X31
	0x03E6E718 BL 0x3E7B278
	0x03E6E71C MOV X0, X19
	0x03E6E720 MOV X1, X31

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Call MessageEventArgs.setData, X0
	005 Move X0, [X19+32]
	006 Move X30, [X31+16]
	007 Move X19, [X31+24]
	008 Return X0

Method: System.Void setData()

Disassembly:
	0x03E6E650 MOV X19, X0
	0x03E6E654 BL 0x1C16D44
	0x03E6E658 CMP W20, 0x1
	0x03E6E65C B.NE 0x3E6E668
	0x03E6E660 MOVZ W0, 0x1
	0x03E6E664 B 0x3E6E678
	0x03E6E668 LDRH W19, [X19 + 0x108]
	0x03E6E66C BL 0x1C16D44
	0x03E6E670 CMP W19, 0x2
	0x03E6E674 CSET W0, EQ
	0x03E6E678 LDP X20, X19, [X31 + 0x10]
	0x03E6E67C LDR X30, [X31], #0x20
	0x03E6E680 RET
	0x03E6E684 LDRB W0, [X0 + 0x30]
	0x03E6E688 RET
	0x03E6E68C SUB X31, X31, 0x30
	0x03E6E690 STP X30, X21, [X31 + 0x10]
	0x03E6E694 STP X20, X19, [X31 + 0x20]
	0x03E6E698 STR X31, [X31 + 0x8]
	0x03E6E69C LDRB W8, [X0 + 0x20]
	0x03E6E6A0 CBZ W8, 0x3E6E738
	0x03E6E6A4 MOV W21, W1
	0x03E6E6A8 ADD X1, X31, 0x8
	0x03E6E6AC MOV X20, X0
	0x03E6E6B0 BL 0x3E6E7F4
	0x03E6E6B4 TBZ X0, 0x0, 0x3E6E6E0
	0x03E6E6B8 LDR X19, [X20 + 0x80]
	0x03E6E6BC MOV X1, X31
	0x03E6E6C0 MOV X0, X19
	0x03E6E6C4 BL 0x33E14E0
	0x03E6E6C8 ADD X1, X31, 0x8
	0x03E6E6CC MOV X0, X20
	0x03E6E6D0 BL 0x3E6E7F4
	0x03E6E6D4 TBZ X0, 0x0, 0x3E6E700
	0x03E6E6D8 STRB W21, [X20 + 0x30]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x57B000
	005 Move W8, [X20+3346]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x28D000
	012 Move X0, [X0+584]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+3346], W8
	016 Move [X31+8], X31
	017 Move W8, [X19+24]
	018 Compare W8, 0
	019 JumpIfNotEqual {41}
	020 Move W8, [X19+25]
	021 NotImplemented "Instruction CMP not yet implemented."
	022 Move X8, 0x28D000
	023 Move X8, [X8+584]
	024 Move X20, [X19+32]
	025 Move X0, [X8]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {30}
	029 Call 0x1C17DFC
	030 Add X1, X31, 8
	031 Move X0, X20
	032 Call Ext.TryGetUTF8DecodedString, X0, X1
	033 Move TEMP, X0
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfNotEqual {39}
	037 Move X8, [X31+8]
	038 Move [X19+16], X8
	039 Move W8, 1
	040 Move [X19+24], W8
	041 Move X20, [X31+16]
	042 Move X19, [X31+24]
	043 Move X30, [X31+32]
	044 Return 

