Type: WebSocketSharp.HttpBase

Method: System.Void .ctor(System.Version version, System.Collections.Specialized.NameValueCollection headers)

Disassembly:
	0x03E7F98C MOV X0, X8
	0x03E7F990 BL 0x1C16F10
	0x03E7F994 MOV X1, X19
	0x03E7F998 MOV X2, X31
	0x03E7F99C MOV X21, X0
	0x03E7F9A0 BL 0x339C314
	0x03E7F9A4 LDR X0, [X24]
	0x03E7F9A8 BL 0x1C16F10
	0x03E7F9AC MOV X1, X31
	0x03E7F9B0 MOV X19, X0
	0x03E7F9B4 BL 0x33BDD8C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, X1
	006 Move X1, X31
	007 Move X19, X2
	008 Move X21, X0
	009 Call Object..ctor, X0
	010 Move [X21+16], X19
	011 Move [X21+24], X20
	012 Move X20, [X31+16]
	013 Move X19, [X31+24]
	014 Move X30, [X31+32]
	015 Move X21, [X31+40]
	016 Return 

Method: System.String get_EntityBody()

Disassembly:
	0x03E7F9B8 STP X20, X21, [X19 + 0x10]
	0x03E7F9BC STP X22, X23, [X19 + 0x30]
	0x03E7F9C0 MOV X0, X19
	0x03E7F9C4 LDP X20, X19, [X31 + 0x30]
	0x03E7F9C8 LDP X22, X21, [X31 + 0x20]
	0x03E7F9CC LDP X24, X23, [X31 + 0x10]
	0x03E7F9D0 LDR X30, [X31], #0x40
	0x03E7F9D4 RET
	0x03E7F9D8 BL 0x1C16F28
	0x03E7F9DC BL 0x1C16F20
	0x03E7F9E0 MOV X0, X19
	0x03E7F9E4 MOV X1, X31
	0x03E7F9E8 BL 0x1BB5160
	0x03E7F9EC MOV X19, X0
	0x03E7F9F0 ADRP X0, 0x2ED000
	0x03E7F9F4 LDR X0, [X0 + 0xC88]
	0x03E7F9F8 BL 0x1C16D08
	0x03E7F9FC MOV X1, X19
	0x03E7FA00 MOV X2, X31
	0x03E7FA04 BL 0x321B938
	0x03E7FA08 MOV X19, X0
	0x03E7FA0C ADRP X0, 0x27C000
	0x03E7FA10 LDR X0, [X0 + 0x578]
	0x03E7FA14 BL 0x1C16D08
	0x03E7FA18 BL 0x1C16F10
	0x03E7FA1C MOV X1, X19
	0x03E7FA20 MOV X2, X31
	0x03E7FA24 MOV X20, X0
	0x03E7FA28 BL 0x3314A68
	0x03E7FA2C ADRP X0, 0x2ED000
	0x03E7FA30 LDR X0, [X0 + 0xC90]
	0x03E7FA34 BL 0x1C16D08
	0x03E7FA38 MOV X1, X0
	0x03E7FA3C MOV X0, X20
	0x03E7FA40 BL 0x1C16DEC
	0x03E7FA44 STR X30, [X31 - 0x40]!
	0x03E7FA48 STP X24, X23, [X31 + 0x10]
	0x03E7FA4C STP X22, X21, [X31 + 0x20]
	0x03E7FA50 STP X20, X19, [X31 + 0x30]
	0x03E7FA54 ADRP X23, 0x569000
	0x03E7FA58 ADRP X24, 0x2ED000
	0x03E7FA5C ADRP X21, 0x2ED000
	0x03E7FA60 ADRP X22, 0x2ED000
	0x03E7FA64 LDRB W8, [X23 + 0xDC3]
	0x03E7FA68 LDR X24, [X24 + 0xC98]
	0x03E7FA6C LDR X21, [X21 + 0xC90]
	0x03E7FA70 LDR X22, [X22 + 0xCA0]
	0x03E7FA74 MOV W19, W1
	0x03E7FA78 MOV X20, X0
	0x03E7FA7C TBNZ X8, 0x0, 0x3E7FAAC
	0x03E7FA80 ADRP X0, 0x2ED000
	0x03E7FA84 LDR X0, [X0 + 0xC98]
	0x03E7FA88 BL 0x1C16CF4
	0x03E7FA8C ADRP X0, 0x2ED000
	0x03E7FA90 LDR X0, [X0 + 0xCA0]
	0x03E7FA94 BL 0x1C16CF4
	0x03E7FA98 ADRP X0, 0x2ED000
	0x03E7FA9C LDR X0, [X0 + 0xC90]
	0x03E7FAA0 BL 0x1C16CF4
	0x03E7FAA4 MOVZ W8, 0x1
	0x03E7FAA8 STRB W8, [X23 + 0xDC3]
	0x03E7FAAC LDR X0, [X24]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x56A000
	005 Move W8, [X20+3511]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {22}
	011 Move X0, 0x2EE000
	012 Move X0, [X0+872]
	013 Call 0x1C17CF4
	014 Move X0, 0x277000
	015 Move X0, [X0+632]
	016 Call 0x1C17CF4
	017 Move X0, 0x2B0000
	018 Move X0, [X0+2440]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X20+3511], W8
	022 Move X8, [X19+32]
	023 Compare X8, 0
	024 JumpIfEqual {65}
	025 Move W8, [X8+24]
	026 Compare W8, 0
	027 JumpIfEqual {65}
	028 Move X0, [X19+16]
	029 Compare X0, 0
	030 JumpIfEqual {74}
	031 Move X8, 0x2B0000
	032 Move X8, [X8+2440]
	033 Move X2, X31
	034 Move X1, [X8]
	035 Call NameValueCollection.get_Item, X0, X1
	036 Compare X0, 0
	037 JumpIfEqual {53}
	038 Move W8, [X0+16]
	039 Move X20, X0
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Move X8, 0x2EE000
	042 Move X8, [X8+872]
	043 Move X0, [X8]
	044 Move W8, [X0+224]
	045 Compare W8, 0
	046 JumpIfNotEqual {48}
	047 Call 0x1C17DFC
	048 Move X0, X20
	049 Move X1, X31
	050 Call HttpUtility.GetEncoding, X0
	051 Compare X0, 0
	052 JumpIfNotEqual {57}
	053 Move X0, X31
	054 Call Encoding.get_UTF8
	055 Compare X0, 0
	056 JumpIfEqual {74}
	057 Move X8, [X0]
	058 Move X1, [X19+32]
	059 Move X20, [X31+16]
	060 Move X19, [X31+24]
	061 Move X3, [X8+888]
	062 Move X2, [X8+896]
	063 Move X30, [X31+32]
	064 CallNoReturn X3
	065 Move X8, 0x277000
	066 Move X8, [X8+632]
	067 Move X20, [X31+16]
	068 Move X19, [X31+24]
	069 Move X8, [X8]
	070 Move X8, [X8+184]
	071 Move X0, [X8]
	072 Move X30, [X31+32]
	073 Return X0
	074 Call 0x1C17F20

Method: System.Collections.Specialized.NameValueCollection get_Headers()

Disassembly:
	0x03E7FAB0 BL 0x1C16F10
	0x03E7FAB4 LDR X2, [X21]

ISIL:
	001 Move X0, [X0+16]
	002 Return X0

Method: System.Version get_ProtocolVersion()

Disassembly:
	0x03E7FAB8 MOV X1, X31
	0x03E7FABC MOV X3, X31

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Byte[] readEntityBody(System.IO.Stream stream, System.String length)

Disassembly:
	0x03E7FAC0 MOV X21, X0
	0x03E7FAC4 BL 0x2D30578
	0x03E7FAC8 LDR X3, [X22]
	0x03E7FACC MOV X0, X20
	0x03E7FAD0 MOV X1, X21
	0x03E7FAD4 MOV W2, W19
	0x03E7FAD8 LDP X20, X19, [X31 + 0x30]
	0x03E7FADC LDP X22, X21, [X31 + 0x20]
	0x03E7FAE0 LDP X24, X23, [X31 + 0x10]
	0x03E7FAE4 LDR X30, [X31], #0x40
	0x03E7FAE8 B 0x21EC27C
	0x03E7FAEC STP X30, X25, [X31 - 0x40]!
	0x03E7FAF0 STP X24, X23, [X31 + 0x10]
	0x03E7FAF4 STP X22, X21, [X31 + 0x20]
	0x03E7FAF8 STP X20, X19, [X31 + 0x30]
	0x03E7FAFC ADRP X20, 0x569000
	0x03E7FB00 LDRB W8, [X20 + 0xDC4]
	0x03E7FB04 MOV X21, X1
	0x03E7FB08 MOV X19, X0
	0x03E7FB0C TBNZ X8, 0x0, 0x3E7FB6C
	0x03E7FB10 ADRP X0, 0x274000
	0x03E7FB14 LDR X0, [X0 + 0xE00]
	0x03E7FB18 BL 0x1C16CF4
	0x03E7FB1C ADRP X0, 0x2ED000
	0x03E7FB20 LDR X0, [X0 + 0xCA8]
	0x03E7FB24 BL 0x1C16CF4
	0x03E7FB28 ADRP X0, 0x2ED000
	0x03E7FB2C LDR X0, [X0 + 0x9D8]
	0x03E7FB30 BL 0x1C16CF4
	0x03E7FB34 ADRP X0, 0x274000
	0x03E7FB38 LDR X0, [X0 + 0xE18]
	0x03E7FB3C BL 0x1C16CF4
	0x03E7FB40 ADRP X0, 0x274000
	0x03E7FB44 LDR X0, [X0 + 0x8F0]
	0x03E7FB48 BL 0x1C16CF4
	0x03E7FB4C ADRP X0, 0x2ED000
	0x03E7FB50 LDR X0, [X0 + 0xCB0]
	0x03E7FB54 BL 0x1C16CF4
	0x03E7FB58 ADRP X0, 0x2BF000
	0x03E7FB5C LDR X0, [X0 + 0x200]
	0x03E7FB60 BL 0x1C16CF4
	0x03E7FB64 MOVZ W8, 0x1
	0x03E7FB68 STRB W8, [X20 + 0xDC4]
	0x03E7FB6C CBZ X21, 0x3E7FDF4
	0x03E7FB70 MOV X0, X21
	0x03E7FB74 BL 0x3E7FEE4
	0x03E7FB78 CBZ W0, 0x3E7FDF4
	0x03E7FB7C ADRP X8, 0x274000
	0x03E7FB80 LDR X8, [X8 + 0x8F0]
	0x03E7FB84 LDR X0, [X8]
	0x03E7FB88 BL 0x1C16F10
	0x03E7FB8C MOVZ W1, 0x40
	0x03E7FB90 MOV X2, X31
	0x03E7FB94 MOV X20, X0
	0x03E7FB98 BL 0x3231B28
	0x03E7FB9C MOV X0, X21
	0x03E7FBA0 BL 0x3E7FF2C
	0x03E7FBA4 CBZ X0, 0x3E7FE10
	0x03E7FBA8 ADRP X10, 0x2ED000
	0x03E7FBAC LDR X8, [X0]
	0x03E7FBB0 LDR X10, [X10 + 0xCA8]
	0x03E7FBB4 MOV X21, X0
	0x03E7FBB8 LDRH W9, [X8 + 0x12E]
	0x03E7FBBC LDR X1, [X10]
	0x03E7FBC0 CBZ X9, 0x3E7FBE4
	0x03E7FBC4 LDR X10, [X8 + 0xB0]
	0x03E7FBC8 ADD X10, X10, 0x8
	0x03E7FBCC LDUR X11, [X10 - 0x8]
	0x03E7FBD0 CMP X11, X1
	0x03E7FBD4 B.EQ 0x3E7FBF4
	0x03E7FBD8 SUBS X9, X9, 0x1
	0x03E7FBDC ADD X10, X10, 0x10
	0x03E7FBE0 B.NE 0x3E7FBCC
	0x03E7FBE4 MOV X0, X21
	0x03E7FBE8 MOV W2, W31
	0x03E7FBEC BL 0x1C5C788
	0x03E7FBF0 B 0x3E7FC00
	0x03E7FBF4 LDRSW X9, [X10]
	0x03E7FBF8 ADD X8, X8, X9, 0x4, LSL
	0x03E7FBFC ADD X0, X8, 0x138
	0x03E7FC00 LDP X8, X1, [X0]
	0x03E7FC04 MOV X0, X21
	0x03E7FC08 BLR X8
	0x03E7FC0C MOV X21, X0
	0x03E7FC10 CBZ X0, 0x3E7FE14
	0x03E7FC14 ADRP X23, 0x274000
	0x03E7FC18 ADRP X24, 0x2ED000
	0x03E7FC1C ADRP X25, 0x2ED000
	0x03E7FC20 LDR X23, [X23 + 0xE18]
	0x03E7FC24 LDR X24, [X24 + 0x9D8]
	0x03E7FC28 LDR X25, [X25 + 0xCB0]
	0x03E7FC2C LDR X8, [X21]
	0x03E7FC30 LDR X1, [X23]
	0x03E7FC34 LDRH W9, [X8 + 0x12E]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x56A000
	007 Move W8, [X21+3512]
	008 Move X20, X1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x27C000
	015 Move X0, [X0+584]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+3512], W8
	019 Add X1, X31, 8
	020 Move X0, X20
	021 Move X2, X31
	022 Move [X31+8], X31
	023 Call Int64.TryParse, X0, X1
	024 Move TEMP, X0
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfNotEqual {65}
	028 Move X20, [X31+8]
	029 Move TEMP, X20
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfEqual {82}
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move X8, 0x27C000
	035 Move X8, [X8+584]
	036 Move X0, [X8]
	037 Move W8, [X0+224]
	038 Compare W8, 0
	039 JumpIfNotEqual {41}
	040 Call 0x1C17DFC
	041 Move W2, 1024
	042 Move X0, X19
	043 Move X1, X20
	044 Move X3, X31
	045 Call Ext.ReadBytes, X0, X1, X2
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Move X8, 0x27C000
	048 Move X8, [X8+584]
	049 Move X0, [X8]
	050 Move W8, [X0+224]
	051 Compare W8, 0
	052 JumpIfNotEqual {54}
	053 Call 0x1C17DFC
	054 Move X0, X19
	055 Move W1, W20
	056 Move X2, X31
	057 Call Ext.ReadBytes, X0, X1
	058 Move X0, X31
	059 Move X20, [X31+32]
	060 Move X19, [X31+40]
	061 Move X30, [X31+16]
	062 Move X21, [X31+24]
	063 Add X31, X31, 48
	064 Return X0
	065 Move X0, 0x27D000
	066 Move X0, [X0+1400]
	067 Call 0x1C17D08
	068 Call 0x1C17F10
	069 Move X19, X0
	070 Move X0, 0x2EE000
	071 Move X0, [X0+3088]
	072 Call 0x1C17D08
	073 Move X20, X0
	074 Move X0, 0x27D000
	075 Move X0, [X0+1896]
	076 Call 0x1C17D08
	077 Move X2, X0
	078 Move X0, X19
	079 Move X1, X20
	080 Move X3, X31
	081 Call ArgumentException..ctor, X0, X1, X2
	082 Move X0, 0x27D000
	083 Move X0, [X0+1888]
	084 Call 0x1C17D08
	085 Call 0x1C17F10
	086 Move X19, X0
	087 Move X0, 0x27D000
	088 Move X0, [X0+1896]
	089 Call 0x1C17D08
	090 Move X20, X0
	091 Move X0, 0x2EE000
	092 Move X0, [X0+3096]
	093 Call 0x1C17D08
	094 Move X2, X0
	095 Move X0, X19
	096 Move X1, X20
	097 Move X3, X31
	098 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	099 Move X0, 0x2EE000
	100 Move X0, [X0+3104]
	101 Call 0x1C17D08
	102 Move X1, X0
	103 Move X0, X19
	104 Call 0x1C17DEC

Method: System.String[] readHeaders(System.IO.Stream stream, System.Int32 maxLength)

Disassembly:
	0x03E7FC38 CBZ X9, 0x3E7FC5C
	0x03E7FC3C LDR X10, [X8 + 0xB0]
	0x03E7FC40 ADD X10, X10, 0x8
	0x03E7FC44 LDUR X11, [X10 - 0x8]
	0x03E7FC48 CMP X11, X1
	0x03E7FC4C B.EQ 0x3E7FC6C
	0x03E7FC50 SUBS X9, X9, 0x1
	0x03E7FC54 ADD X10, X10, 0x10
	0x03E7FC58 B.NE 0x3E7FC44
	0x03E7FC5C MOV X0, X21
	0x03E7FC60 MOV W2, W31
	0x03E7FC64 BL 0x1C5C788
	0x03E7FC68 B 0x3E7FC78
	0x03E7FC6C LDRSW X9, [X10]
	0x03E7FC70 ADD X8, X8, X9, 0x4, LSL
	0x03E7FC74 ADD X0, X8, 0x138
	0x03E7FC78 LDP X8, X1, [X0]
	0x03E7FC7C MOV X0, X21
	0x03E7FC80 BLR X8
	0x03E7FC84 TBZ X0, 0x0, 0x3E7FD20
	0x03E7FC88 LDR X8, [X21]
	0x03E7FC8C LDR X1, [X24]
	0x03E7FC90 LDRH W9, [X8 + 0x12E]
	0x03E7FC94 CBZ X9, 0x3E7FCB8
	0x03E7FC98 LDR X10, [X8 + 0xB0]
	0x03E7FC9C ADD X10, X10, 0x8
	0x03E7FCA0 LDUR X11, [X10 - 0x8]
	0x03E7FCA4 CMP X11, X1
	0x03E7FCA8 B.EQ 0x3E7FCC8
	0x03E7FCAC SUBS X9, X9, 0x1
	0x03E7FCB0 ADD X10, X10, 0x10
	0x03E7FCB4 B.NE 0x3E7FCA0
	0x03E7FCB8 MOV X0, X21
	0x03E7FCBC MOV W2, W31
	0x03E7FCC0 BL 0x1C5C788
	0x03E7FCC4 B 0x3E7FCD4
	0x03E7FCC8 LDRSW X9, [X10]
	0x03E7FCCC ADD X8, X8, X9, 0x4, LSL
	0x03E7FCD0 ADD X0, X8, 0x138
	0x03E7FCD4 LDP X8, X1, [X0]
	0x03E7FCD8 MOV X0, X21
	0x03E7FCDC BLR X8
	0x03E7FCE0 MOV X22, X0
	0x03E7FCE4 CBZ X0, 0x3E7FE08
	0x03E7FCE8 MOV X0, X22
	0x03E7FCEC BL 0x3E80030
	0x03E7FCF0 TBNZ X0, 0x0, 0x3E7FC2C
	0x03E7FCF4 LDR X8, [X22]
	0x03E7FCF8 LDP X9, X1, [X8 + 0x168]
	0x03E7FCFC MOV X0, X22
	0x03E7FD00 BLR X9
	0x03E7FD04 CBZ X20, 0x3E7FE0C
	0x03E7FD08 LDR X1, [X25]
	0x03E7FD0C MOV X2, X0
	0x03E7FD10 MOV X0, X20
	0x03E7FD14 MOV X3, X31
	0x03E7FD18 BL 0x3234224
	0x03E7FD1C B 0x3E7FC2C
	0x03E7FD20 MOV X22, X31
	0x03E7FD24 CBZ X21, 0x3E7FD88
	0x03E7FD28 ADRP X10, 0x274000
	0x03E7FD2C LDR X8, [X21]
	0x03E7FD30 LDR X10, [X10 + 0xE00]
	0x03E7FD34 LDRH W9, [X8 + 0x12E]
	0x03E7FD38 LDR X1, [X10]
	0x03E7FD3C CBZ X9, 0x3E7FD60
	0x03E7FD40 LDR X10, [X8 + 0xB0]
	0x03E7FD44 ADD X10, X10, 0x8
	0x03E7FD48 LDUR X11, [X10 - 0x8]
	0x03E7FD4C CMP X11, X1
	0x03E7FD50 B.EQ 0x3E7FD70
	0x03E7FD54 SUBS X9, X9, 0x1
	0x03E7FD58 ADD X10, X10, 0x10
	0x03E7FD5C B.NE 0x3E7FD48
	0x03E7FD60 MOV X0, X21
	0x03E7FD64 MOV W2, W31
	0x03E7FD68 BL 0x1C5C788
	0x03E7FD6C B 0x3E7FD7C
	0x03E7FD70 LDRSW X9, [X10]
	0x03E7FD74 ADD X8, X8, X9, 0x4, LSL
	0x03E7FD78 ADD X0, X8, 0x138
	0x03E7FD7C LDP X8, X1, [X0]
	0x03E7FD80 MOV X0, X21
	0x03E7FD84 BLR X8
	0x03E7FD88 CBNZ X22, 0x3E7FE18
	0x03E7FD8C CBZ X20, 0x3E7FE10
	0x03E7FD90 MOV X0, X20
	0x03E7FD94 MOV X1, X31
	0x03E7FD98 BL 0x323260C
	0x03E7FD9C SUBS W1, W0, 0x2
	0x03E7FDA0 B.LE 0x3E7FDF4
	0x03E7FDA4 MOV X0, X20
	0x03E7FDA8 MOV X2, X31
	0x03E7FDAC BL 0x3232ADC
	0x03E7FDB0 LDR X8, [X20]
	0x03E7FDB4 LDR X19, [X19 + 0x10]
	0x03E7FDB8 MOV X0, X20
	0x03E7FDBC LDP X9, X1, [X8 + 0x168]
	0x03E7FDC0 BLR X9
	0x03E7FDC4 CBZ X19, 0x3E7FE10
	0x03E7FDC8 ADRP X8, 0x2BF000
	0x03E7FDCC LDR X8, [X8 + 0x200]
	0x03E7FDD0 MOV X2, X0
	0x03E7FDD4 MOV X0, X19
	0x03E7FDD8 LDP X20, X19, [X31 + 0x30]
	0x03E7FDDC LDR X1, [X8]
	0x03E7FDE0 LDP X22, X21, [X31 + 0x20]
	0x03E7FDE4 LDP X24, X23, [X31 + 0x10]
	0x03E7FDE8 MOV X3, X31
	0x03E7FDEC LDP X30, X25, [X31], #0x40
	0x03E7FDF0 B 0x366457C
	0x03E7FDF4 LDP X20, X19, [X31 + 0x30]
	0x03E7FDF8 LDP X22, X21, [X31 + 0x20]
	0x03E7FDFC LDP X24, X23, [X31 + 0x10]
	0x03E7FE00 LDP X30, X25, [X31], #0x40
	0x03E7FE04 RET
	0x03E7FE08 BL 0x1C16F20
	0x03E7FE0C BL 0x1C16F20
	0x03E7FE10 BL 0x1C16F20
	0x03E7FE14 BL 0x1C16F20
	0x03E7FE18 MOV X0, X22
	0x03E7FE1C BL 0x1C16F18
	0x03E7FE20 B 0x3E7FE3C
	0x03E7FE24 B 0x3E7FE3C
	0x03E7FE28 B 0x3E7FE3C
	0x03E7FE2C B 0x3E7FE3C
	0x03E7FE30 B 0x3E7FE3C
	0x03E7FE34 B 0x3E7FE3C
	0x03E7FE38 B 0x3E7FE3C
	0x03E7FE3C MOV X23, X0
	0x03E7FE40 CMP W1, 0x1
	0x03E7FE44 B.NE 0x3E7FE5C
	0x03E7FE48 MOV X0, X23
	0x03E7FE4C BL 0x3EB1AD0
	0x03E7FE50 LDR X22, [X0]
	0x03E7FE54 BL 0x3EB1AE0
	0x03E7FE58 B 0x3E7FD24
	0x03E7FE5C MOV X22, X31
	0x03E7FE60 B 0x3E7FE68
	0x03E7FE64 MOV X23, X0
	0x03E7FE68 CBZ X21, 0x3E7FECC
	0x03E7FE6C ADRP X10, 0x274000
	0x03E7FE70 LDR X8, [X21]
	0x03E7FE74 LDR X10, [X10 + 0xE00]
	0x03E7FE78 LDRH W9, [X8 + 0x12E]
	0x03E7FE7C LDR X1, [X10]
	0x03E7FE80 CBZ X9, 0x3E7FEA4
	0x03E7FE84 LDR X10, [X8 + 0xB0]
	0x03E7FE88 ADD X10, X10, 0x8
	0x03E7FE8C LDUR X11, [X10 - 0x8]
	0x03E7FE90 CMP X11, X1
	0x03E7FE94 B.EQ 0x3E7FEB4
	0x03E7FE98 SUBS X9, X9, 0x1
	0x03E7FE9C ADD X10, X10, 0x10
	0x03E7FEA0 B.NE 0x3E7FE8C
	0x03E7FEA4 MOV X0, X21
	0x03E7FEA8 MOV W2, W31
	0x03E7FEAC BL 0x1C5C788
	0x03E7FEB0 B 0x3E7FEC0
	0x03E7FEB4 LDRSW X9, [X10]
	0x03E7FEB8 ADD X8, X8, X9, 0x4, LSL
	0x03E7FEBC ADD X0, X8, 0x138
	0x03E7FEC0 LDP X8, X1, [X0]
	0x03E7FEC4 MOV X0, X21
	0x03E7FEC8 BLR X8
	0x03E7FECC CBNZ X22, 0x3E7FED8
	0x03E7FED0 MOV X0, X23
	0x03E7FED4 BL 0x1D2C690
	0x03E7FED8 MOV X0, X22
	0x03E7FEDC BL 0x1C16F18
	0x03E7FEE0 BL 0x1990590
	0x03E7FEE4 STR X30, [X31 - 0x20]!
	0x03E7FEE8 STP X20, X19, [X31 + 0x10]
	0x03E7FEEC ADRP X20, 0x569000
	0x03E7FEF0 LDRB W8, [X20 + 0xDF7]
	0x03E7FEF4 MOV X19, X0
	0x03E7FEF8 TBNZ X8, 0x0, 0x3E7FF10
	0x03E7FEFC ADRP X0, 0x2ED000
	0x03E7FF00 LDR X0, [X0 + 0xCB8]
	0x03E7FF04 BL 0x1C16CF4
	0x03E7FF08 MOVZ W8, 0x1
	0x03E7FF0C STRB W8, [X20 + 0xDF7]
	0x03E7FF10 LDR X8, [X19 + 0x10]
	0x03E7FF14 CBZ X8, 0x3E7FF28
	0x03E7FF18 LDR W0, [X8 + 0x18]
	0x03E7FF1C LDP X20, X19, [X31 + 0x10]
	0x03E7FF20 LDR X30, [X31], #0x20
	0x03E7FF24 RET
	0x03E7FF28 BL 0x1C16F20
	0x03E7FF2C STR X30, [X31 - 0x30]!
	0x03E7FF30 STP X22, X21, [X31 + 0x10]
	0x03E7FF34 STP X20, X19, [X31 + 0x20]
	0x03E7FF38 ADRP X20, 0x569000
	0x03E7FF3C ADRP X22, 0x2ED000
	0x03E7FF40 ADRP X21, 0x2ED000
	0x03E7FF44 LDRB W8, [X20 + 0xDF6]
	0x03E7FF48 LDR X22, [X22 + 0xCC0]
	0x03E7FF4C LDR X21, [X21 + 0xCC8]
	0x03E7FF50 MOV X19, X0
	0x03E7FF54 TBNZ X8, 0x0, 0x3E7FFA8
	0x03E7FF58 ADRP X0, 0x2ED000
	0x03E7FF5C LDR X0, [X0 + 0xCD0]
	0x03E7FF60 BL 0x1C16CF4
	0x03E7FF64 ADRP X0, 0x2ED000
	0x03E7FF68 LDR X0, [X0 + 0xCD8]
	0x03E7FF6C BL 0x1C16CF4
	0x03E7FF70 ADRP X0, 0x2ED000
	0x03E7FF74 LDR X0, [X0 + 0xCE0]
	0x03E7FF78 BL 0x1C16CF4
	0x03E7FF7C ADRP X0, 0x2ED000
	0x03E7FF80 LDR X0, [X0 + 0xCC8]
	0x03E7FF84 BL 0x1C16CF4
	0x03E7FF88 ADRP X0, 0x2ED000
	0x03E7FF8C LDR X0, [X0 + 0xCB8]
	0x03E7FF90 BL 0x1C16CF4
	0x03E7FF94 ADRP X0, 0x2ED000
	0x03E7FF98 LDR X0, [X0 + 0xCC0]
	0x03E7FF9C BL 0x1C16CF4
	0x03E7FFA0 MOVZ W8, 0x1
	0x03E7FFA4 STRB W8, [X20 + 0xDF6]
	0x03E7FFA8 LDR X0, [X22]
	0x03E7FFAC LDR X20, [X19 + 0x10]
	0x03E7FFB0 BL 0x1C16F10
	0x03E7FFB4 LDR X2, [X21]
	0x03E7FFB8 MOV X1, X20
	0x03E7FFBC MOV X19, X0
	0x03E7FFC0 BL 0x301B8E0
	0x03E7FFC4 CBZ X19, 0x3E8002C
	0x03E7FFC8 LDR W8, [X19 + 0x18]
	0x03E7FFCC CMP W8, 0x2
	0x03E7FFD0 B.LT 0x3E80018
	0x03E7FFD4 ADRP X8, 0x2ED000
	0x03E7FFD8 LDR X8, [X8 + 0xCD0]
	0x03E7FFDC LDR X0, [X8]
	0x03E7FFE0 BL 0x1C16F10

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X21, 0x56A000
	014 Move X24, 0x2EE000
	015 Move X23, 0x279000
	016 Move X22, 0x279000
	017 Move W8, [X21+3513]
	018 Move X24, [X24+3112]
	019 Move X23, [X23+2056]
	020 Move X22, [X22+2032]
	021 Move W19, W1
	022 Move X20, X0
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {65}
	027 Move X0, 0x279000
	028 Move X0, [X0+2816]
	029 Call 0x1C17CF4
	030 Move X0, 0x27C000
	031 Move X0, [X0+584]
	032 Call 0x1C17CF4
	033 Move X0, 0x2A2000
	034 Move X0, [X0+1488]
	035 Call 0x1C17CF4
	036 Move X0, 0x279000
	037 Move X0, [X0+2032]
	038 Call 0x1C17CF4
	039 Move X0, 0x279000
	040 Move X0, [X0+2056]
	041 Call 0x1C17CF4
	042 Move X0, 0x275000
	043 Move X0, [X0+2760]
	044 Call 0x1C17CF4
	045 Move X0, 0x2EE000
	046 Move X0, [X0+3120]
	047 Call 0x1C17CF4
	048 Move X0, 0x2EE000
	049 Move X0, [X0+3112]
	050 Call 0x1C17CF4
	051 Move X0, 0x275000
	052 Move X0, [X0+3544]
	053 Call 0x1C17CF4
	054 Move X0, 0x2EE000
	055 Move X0, [X0+3128]
	056 Call 0x1C17CF4
	057 Move X0, 0x2EE000
	058 Move X0, [X0+720]
	059 Call 0x1C17CF4
	060 Move X0, 0x2B3000
	061 Move X0, [X0+1056]
	062 Call 0x1C17CF4
	063 Move W8, 1
	064 Move [X21+3513], W8
	065 Move X0, [X24]
	066 Call 0x1C17F10
	067 Move X1, X31
	068 Move X21, X0
	069 Call Object..ctor, X0
	070 Move X0, [X23]
	071 Call 0x1C17F10
	072 Move X1, [X22]
	073 Move X22, X0
	074 Call List`1<Byte>..ctor, X0
	075 Compare X21, 0
	076 JumpIfEqual {255}
	077 Move X8, 0x279000
	078 Move X8, [X8+2816]
	079 Move X23, 0x2EE000
	080 Move X24, 0x27C000
	081 Move X29, 0x2A2000
	082 Move X28, 0x2EE000
	083 Move X25, 0x275000
	084 Move X23, [X23+3120]
	085 Move X24, [X24+584]
	086 Move X29, [X29+1488]
	087 Move X28, [X28+3128]
	088 Move X25, [X25+3544]
	089 Move [X21+16], X22
	090 Move [X21+24], W31
	091 Move X0, [X8]
	092 Move X27, 0x2EE000
	093 Move X26, 0x275000
	094 Move X27, [X27+720]
	095 Move X26, [X26+2760]
	096 Call 0x1C17F10
	097 Move X2, [X23]
	098 Move X1, X21
	099 Move X3, X31
	100 Move X22, X0
	101 Call Action`1<Int32>..ctor, X0, X1, X2
	102 Move W8, [X21+24]
	103 NotImplemented "Instruction CMP not yet implemented."
	104 Compare X20, 0
	105 JumpIfEqual {255}
	106 Move X8, [X20]
	107 Move X0, X20
	108 Move X9, [X8+888]
	109 Move X1, [X8+896]
	110 NotImplemented "Instruction BLR not yet implemented."
	111 Move X8, [X24]
	112 Move W23, W0
	113 Move W9, [X8+224]
	114 Compare W9, 0
	115 JumpIfNotEqual {118}
	116 Move X0, X8
	117 Call 0x1C17DFC
	118 Move W1, 13
	119 Move W0, W23
	120 Move X2, X22
	121 Move X3, X31
	122 Call Ext.IsEqualTo, X0, X1, X2
	123 Move TEMP, X0
	124 And TEMP, TEMP, 1
	125 Compare TEMP, 1
	126 JumpIfNotEqual {189}
	127 Move X8, [X20]
	128 Move X0, X20
	129 Move X9, [X8+888]
	130 Move X1, [X8+896]
	131 NotImplemented "Instruction BLR not yet implemented."
	132 Move X8, [X24]
	133 Move W23, W0
	134 Move W9, [X8+224]
	135 Compare W9, 0
	136 JumpIfNotEqual {139}
	137 Move X0, X8
	138 Call 0x1C17DFC
	139 Move W1, 10
	140 Move W0, W23
	141 Move X2, X22
	142 Move X3, X31
	143 Call Ext.IsEqualTo, X0, X1, X2
	144 Move TEMP, X0
	145 And TEMP, TEMP, 1
	146 Compare TEMP, 1
	147 JumpIfNotEqual {189}
	148 Move X8, [X20]
	149 Move X0, X20
	150 Move X9, [X8+888]
	151 Move X1, [X8+896]
	152 NotImplemented "Instruction BLR not yet implemented."
	153 Move X8, [X24]
	154 Move W23, W0
	155 Move W9, [X8+224]
	156 Compare W9, 0
	157 JumpIfNotEqual {160}
	158 Move X0, X8
	159 Call 0x1C17DFC
	160 Move W1, 13
	161 Move W0, W23
	162 Move X2, X22
	163 Move X3, X31
	164 Call Ext.IsEqualTo, X0, X1, X2
	165 Move TEMP, X0
	166 And TEMP, TEMP, 1
	167 Compare TEMP, 1
	168 JumpIfNotEqual {189}
	169 Move X8, [X20]
	170 Move X0, X20
	171 Move X9, [X8+888]
	172 Move X1, [X8+896]
	173 NotImplemented "Instruction BLR not yet implemented."
	174 Move X8, [X24]
	175 Move W23, W0
	176 Move W9, [X8+224]
	177 Compare W9, 0
	178 JumpIfNotEqual {181}
	179 Move X0, X8
	180 Call 0x1C17DFC
	181 Move W1, 10
	182 Move W0, W23
	183 Move X2, X22
	184 Move X3, X31
	185 Call Ext.IsEqualTo, X0, X1, X2
	186 And W8, W0, 1
	187 Compare W8, 0
	188 JumpIfEqual {102}
	189 Move W8, W31
	190 Compare W8, 0
	191 JumpIfEqual {102}
	192 Move X0, X31
	193 Call Encoding.get_UTF8
	194 Move X8, [X21+16]
	195 Compare X8, 0
	196 JumpIfEqual {255}
	197 Move X1, [X29]
	198 Move X19, X0
	199 Move X0, X8
	200 Call List`1<Byte>.ToArray, X0
	201 Compare X19, 0
	202 JumpIfEqual {255}
	203 Move X8, [X19]
	204 Move X1, X0
	205 Move X0, X19
	206 Move X9, [X8+888]
	207 Move X2, [X8+896]
	208 NotImplemented "Instruction BLR not yet implemented."
	209 Compare X0, 0
	210 JumpIfEqual {255}
	211 Move X1, [X28]
	212 Move X2, [X25]
	213 Move X3, X31
	214 Call String.Replace, X0, X1, X2
	215 Compare X0, 0
	216 JumpIfEqual {255}
	217 Move X1, [X27]
	218 Move X2, [X25]
	219 Move X3, X31
	220 Call String.Replace, X0, X1, X2
	221 Move X8, [X26]
	222 Move X19, X0
	223 Move W1, 1
	224 Move X0, X8
	225 Call 0x1C17D6C
	226 Compare X0, 0
	227 JumpIfEqual {255}
	228 Move W8, [X0+24]
	229 Move X1, X0
	230 Compare W8, 0
	231 JumpIfEqual {273}
	232 Move X8, 0x2B3000
	233 Move X8, [X8+1056]
	234 Move X8, [X8]
	235 Move [X1+32], X8
	236 Compare X19, 0
	237 JumpIfEqual {255}
	238 Move X0, X19
	239 Move X20, [X31+80]
	240 Move X19, [X31+88]
	241 Move X22, [X31+64]
	242 Move X21, [X31+72]
	243 Move X24, [X31+48]
	244 Move X23, [X31+56]
	245 Move X26, [X31+32]
	246 Move X25, [X31+40]
	247 Move X28, [X31+16]
	248 Move X27, [X31+24]
	249 Move W2, 1
	250 Move X3, X31
	251 Move X29, [X31+96]
	252 Move X30, [X31+104]
	253 Call String.Split, X0, X1, X2
	254 Return X0
	255 Call 0x1C17F20
	256 Move X0, 0x29D000
	257 Move X0, [X0+2872]
	258 Call 0x1C17D08
	259 Call 0x1C17F10
	260 Move X19, X0
	261 Move X0, 0x2EE000
	262 Move X0, [X0+3136]
	263 Call 0x1C17D08
	264 Move X1, X0
	265 Move X0, X19
	266 Call WebSocketException..ctor, X0, X1
	267 Move X0, 0x2EE000
	268 Move X0, [X0+3144]
	269 Call 0x1C17D08
	270 Move X1, X0
	271 Move X0, X19
	272 Call 0x1C17DEC
	273 Call 0x1C17F28

Method: T Read(System.IO.Stream stream, System.Func`2<System.String[], T> parser, System.Int32 millisecondsTimeout)

Disassembly:
	0x021ED27C BL 0x1C5C6E0
	0x021ED280 LDR X25, [X23 + 0x38]
	0x021ED284 LDR X8, [X25]
	0x021ED288 ADD X9, X31, 0x0
	0x021ED28C LDR W2, [X8 + 0xFC]
	0x021ED290 ADD X10, X2, 0xF
	0x021ED294 AND X10, X10, 0x1FFFFFFFF
	0x021ED298 SUB X23, X9, X10
	0x021ED29C ADD X31, X23, 0x0
	0x021ED2A0 LDR W8, [X8 + 0x28]
	0x021ED2A4 LDR X22, [X22 + 0x10]
	0x021ED2A8 MOV X0, X23
	0x021ED2AC CMP W8, 0x0
	0x021ED2B0 SUB X8, X29, 0x10
	0x021ED2B4 CSEL X1, X21, X8, LT
	0x021ED2B8 BL 0x3EB1AC0
	0x021ED2BC LDR X0, [X25]
	0x021ED2C0 MOV X1, X23
	0x021ED2C4 BL 0x1C16E04
	0x021ED2C8 ADRP X8, 0x1F2E000
	0x021ED2CC LDR X8, [X8 + 0xB70]
	0x021ED2D0 MOV X23, X0
	0x021ED2D4 LDR X8, [X8]
	0x021ED2D8 MOV X0, X8
	0x021ED2DC BL 0x1C16F10
	0x021ED2E0 MOV X1, X23
	0x021ED2E4 MOV X2, X20
	0x021ED2E8 MOV X3, X31
	0x021ED2EC MOV X21, X0
	0x021ED2F0 BL 0x3603A64
	0x021ED2F4 CBZ X22, 0x21ED340
	0x021ED2F8 ADRP X8, 0x1F2E000
	0x021ED2FC LDR X8, [X8 + 0xB80]
	0x021ED300 MOV X0, X22
	0x021ED304 MOV X1, X19
	0x021ED308 MOV X2, X21
	0x021ED30C LDR X3, [X8]
	0x021ED310 BL 0x2AA5084
	0x021ED314 LDR X8, [X24 + 0x28]
	0x021ED318 LDUR X9, [X29 - 0x8]
	0x021ED31C CMP X8, X9
	0x021ED320 B.NE 0x21ED344
	0x021ED324 ADD X31, X29, 0x0
	0x021ED328 LDP X20, X19, [X31 + 0x40]
	0x021ED32C LDP X22, X21, [X31 + 0x30]
	0x021ED330 LDP X24, X23, [X31 + 0x20]
	0x021ED334 LDR X25, [X31 + 0x10]
	0x021ED338 LDP X29, X30, [X31], #0x50
	0x021ED33C RET
	0x021ED340 BL 0x1C16F20
	0x021ED344 BL 0x3EB1B20
	0x021ED348 STP X30, X21, [X31 - 0x20]!
	0x021ED34C STP X20, X19, [X31 + 0x10]
	0x021ED350 LDR X8, [X2 + 0x38]
	0x021ED354 MOV X20, X2
	0x021ED358 MOV X19, X1
	0x021ED35C MOV X21, X0
	0x021ED360 CBNZ X8, 0x21ED36C
	0x021ED364 MOV X0, X20
	0x021ED368 BL 0x1C5C6E0
	0x021ED36C LDR X0, [X21 + 0x50]
	0x021ED370 CBZ X0, 0x21ED390
	0x021ED374 LDR X8, [X20 + 0x38]
	0x021ED378 MOV X1, X19
	0x021ED37C LDP X20, X19, [X31 + 0x10]
	0x021ED380 MOV X2, X31
	0x021ED384 LDR X3, [X8]
	0x021ED388 LDP X30, X21, [X31], #0x20
	0x021ED38C B 0x22ACE68
	0x021ED390 BL 0x1C16F20
	0x021ED394 STR X30, [X31 - 0x30]!
	0x021ED398 STP X22, X21, [X31 + 0x10]
	0x021ED39C STP X20, X19, [X31 + 0x20]
	0x021ED3A0 LDR X8, [X3 + 0x38]
	0x021ED3A4 MOV X21, X3
	0x021ED3A8 MOV X19, X2
	0x021ED3AC MOV X20, X1
	0x021ED3B0 MOV X22, X0
	0x021ED3B4 CBNZ X8, 0x21ED3C0
	0x021ED3B8 MOV X0, X21
	0x021ED3BC BL 0x1C5C6E0
	0x021ED3C0 LDR X0, [X22 + 0x50]
	0x021ED3C4 CBZ X0, 0x21ED3E8
	0x021ED3C8 LDR X8, [X21 + 0x38]
	0x021ED3CC MOV X1, X20
	0x021ED3D0 MOV X2, X19
	0x021ED3D4 LDP X20, X19, [X31 + 0x20]
	0x021ED3D8 LDR X3, [X8 + 0x8]
	0x021ED3DC LDP X22, X21, [X31 + 0x10]
	0x021ED3E0 LDR X30, [X31], #0x30
	0x021ED3E4 B 0x22ACE68
	0x021ED3E8 BL 0x1C16F20
	0x021ED3EC MOV X1, X31
	0x021ED3F0 B 0x369DD78
	0x021ED3F4 MOV X1, X31
	0x021ED3F8 B 0x369DD78
	0x021ED3FC STP X30, X25, [X31 - 0x40]!
	0x021ED400 STP X24, X23, [X31 + 0x10]
	0x021ED404 STP X22, X21, [X31 + 0x20]
	0x021ED408 STP X20, X19, [X31 + 0x30]
	0x021ED40C LDR X8, [X2 + 0x38]
	0x021ED410 MOV X19, X2
	0x021ED414 MOV X22, X1
	0x021ED418 MOV X20, X0
	0x021ED41C CBNZ X8, 0x21ED460
	0x021ED420 ADRP X0, 0x1F07000
	0x021ED424 LDR X0, [X0 + 0xE70]
	0x021ED428 BL 0x1C16CF4
	0x021ED42C ADRP X0, 0x1F08000
	0x021ED430 LDR X0, [X0 + 0xA50]
	0x021ED434 BL 0x1C16CF4
	0x021ED438 ADRP X0, 0x1F0F000
	0x021ED43C LDR X0, [X0 + 0x940]
	0x021ED440 BL 0x1C16CF4
	0x021ED444 ADRP X0, 0x1F2E000
	0x021ED448 LDR X0, [X0 + 0xB88]
	0x021ED44C BL 0x1C16CF4
	0x021ED450 LDR X8, [X19 + 0x38]
	0x021ED454 CBNZ X8, 0x21ED460
	0x021ED458 MOV X0, X19
	0x021ED45C BL 0x1C5C6E0
	0x021ED460 ADRP X8, 0x1F08000
	0x021ED464 LDR X8, [X8 + 0xA50]
	0x021ED468 LDR X0, [X8]
	0x021ED46C BL 0x1C16F10
	0x021ED470 MOV X1, X31
	0x021ED474 MOV X21, X0
	0x021ED478 BL 0x33DFA8C
	0x021ED47C CBZ X21, 0x21ED548
	0x021ED480 MOV X0, X21
	0x021ED484 MOV X1, X31
	0x021ED488 BL 0x33DFA08
	0x021ED48C CBZ X22, 0x21ED548
	0x021ED490 MOV X1, X0
	0x021ED494 LDR X8, [X22 + 0x18]
	0x021ED498 LDR X0, [X22 + 0x40]
	0x021ED49C LDR X2, [X22 + 0x28]
	0x021ED4A0 BLR X8
	0x021ED4A4 ADRP X8, 0x1F07000
	0x021ED4A8 LDR W22, [X20 + 0xD8]
	0x021ED4AC LDR X8, [X8 + 0xE70]
	0x021ED4B0 MOV X23, X0
	0x021ED4B4 LDR X8, [X8]
	0x021ED4B8 MOV X0, X8
	0x021ED4BC BL 0x1C16F10
	0x021ED4C0 LDR X8, [X20]
	0x021ED4C4 MOV X1, X20
	0x021ED4C8 MOV X3, X31
	0x021ED4CC MOV X24, X0
	0x021ED4D0 LDR X2, [X8 + 0x310]
	0x021ED4D4 BL 0x3314368
	0x021ED4D8 ADRP X8, 0x1F0F000
	0x021ED4DC LDR X8, [X8 + 0x940]
	0x021ED4E0 LDR X0, [X8]
	0x021ED4E4 BL 0x1C16F10
	0x021ED4E8 LDR X8, [X19 + 0x38]
	0x021ED4EC MOV X1, X20
	0x021ED4F0 MOV X3, X31
	0x021ED4F4 MOV X25, X0
	0x021ED4F8 LDR X2, [X8 + 0x18]
	0x021ED4FC BL 0x2D27194
	0x021ED500 ADRP X8, 0x1F2E000
	0x021ED504 LDR X8, [X8 + 0xB88]
	0x021ED508 LDR X0, [X8]
	0x021ED50C LDR W8, [X0 + 0xE0]
	0x021ED510 CBNZ W8, 0x21ED518
	0x021ED514 BL 0x1C16DFC
	0x021ED518 LDR X8, [X19 + 0x38]
	0x021ED51C MOV X0, X23
	0x021ED520 MOV W1, W22
	0x021ED524 MOV X2, X24
	0x021ED528 LDR X5, [X8 + 0x20]
	0x021ED52C MOV X4, X21
	0x021ED530 LDP X20, X19, [X31 + 0x30]
	0x021ED534 LDP X22, X21, [X31 + 0x20]
	0x021ED538 LDP X24, X23, [X31 + 0x10]
	0x021ED53C MOV X3, X25
	0x021ED540 LDP X30, X25, [X31], #0x40
	0x021ED544 B 0x21ED9C8
	0x021ED548 BL 0x1C16F20
	0x021ED54C SUB X31, X31, 0x60
	0x021ED550 STP X30, X25, [X31 + 0x20]
	0x021ED554 STP X24, X23, [X31 + 0x30]
	0x021ED558 STP X22, X21, [X31 + 0x40]
	0x021ED55C STP X20, X19, [X31 + 0x50]
	0x021ED560 LDR X8, [X2 + 0x38]
	0x021ED564 MOV X19, X2
	0x021ED568 MOV X22, X1
	0x021ED56C MOV X20, X0
	0x021ED570 CBNZ X8, 0x21ED5B4
	0x021ED574 ADRP X0, 0x1F07000
	0x021ED578 LDR X0, [X0 + 0xE70]
	0x021ED57C BL 0x1C16CF4
	0x021ED580 ADRP X0, 0x1F08000
	0x021ED584 LDR X0, [X0 + 0xA50]
	0x021ED588 BL 0x1C16CF4
	0x021ED58C ADRP X0, 0x1F0F000
	0x021ED590 LDR X0, [X0 + 0x940]
	0x021ED594 BL 0x1C16CF4
	0x021ED598 ADRP X0, 0x1F2E000
	0x021ED59C LDR X0, [X0 + 0xB88]
	0x021ED5A0 BL 0x1C16CF4
	0x021ED5A4 LDR X8, [X19 + 0x38]
	0x021ED5A8 CBNZ X8, 0x21ED5B4
	0x021ED5AC MOV X0, X19
	0x021ED5B0 BL 0x1C5C6E0
	0x021ED5B4 ADRP X8, 0x1F08000
	0x021ED5B8 LDR X8, [X8 + 0xA50]
	0x021ED5BC LDR X0, [X8]
	0x021ED5C0 BL 0x1C16F10
	0x021ED5C4 MOV X1, X31
	0x021ED5C8 MOV X21, X0
	0x021ED5CC BL 0x33DFA8C
	0x021ED5D0 CBZ X21, 0x21ED6C0
	0x021ED5D4 MOV X0, X21
	0x021ED5D8 MOV X1, X31
	0x021ED5DC BL 0x33DFA08

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X8, [X3+56]
	010 Move X19, X3
	011 Move W23, W2
	012 Move X22, X1
	013 Move X21, X0
	014 Compare X8, 0
	015 JumpIfNotEqual {37}
	016 Move X0, 0x1F0F000
	017 Move X0, [X0+3192]
	018 Call 0x1C17CF4
	019 Move X0, 0x1F0F000
	020 Move X0, [X0+3200]
	021 Call 0x1C17CF4
	022 Move X0, 0x1F2F000
	023 Move X0, [X0+2848]
	024 Call 0x1C17CF4
	025 Move X0, 0x1F2F000
	026 Move X0, [X0+2856]
	027 Call 0x1C17CF4
	028 Move X0, 0x1F2F000
	029 Move X0, [X0+2864]
	030 Call 0x1C17CF4
	031 Move X8, [X19+56]
	032 Compare X8, 0
	033 JumpIfNotEqual {37}
	034 Move X0, X19
	035 Call 0x1C5D6E0
	036 Move X8, [X19+56]
	037 Move X0, [X8]
	038 Move W8, [X0+309]
	039 Move TEMP, X8
	040 And TEMP, TEMP, 1
	041 Compare TEMP, 1
	042 JumpIfEqual {44}
	043 Call 0x1C5D684
	044 Call 0x1C17F10
	045 Move X8, [X19+56]
	046 Move X20, X0
	047 Move X1, [X8+8]
	048 Call 0x2373B8C, X0
	049 Compare X20, 0
	050 JumpIfEqual {218}
	051 Move [X20+24], X21
	052 Move [X20+16], W31
	053 Move X8, 0x1F0F000
	054 Move X8, [X8+3192]
	055 Move X0, [X8]
	056 Call 0x1C17F10
	057 Move X8, [X19+56]
	058 Move X1, X20
	059 Move X3, X31
	060 Move X24, X0
	061 Move X2, [X8+16]
	062 Call TimerCallback..ctor, X0, X1, X2
	063 Move X8, 0x1F0F000
	064 Move X8, [X8+3200]
	065 Move X0, [X8]
	066 Call 0x1C17F10
	067 Move TEMP, 0
	068 Not TEMP
	069 Move W4, TEMP
	070 Move X1, X24
	071 Move X2, X31
	072 Move W3, W23
	073 Move X5, X31
	074 Move X21, X0
	075 Call Timer..ctor, X0, X1, X2, X3, X4
	076 Move X0, [X20+24]
	077 Move W1, 0x2000
	078 Move X2, X31
	079 Call HttpBase.readHeaders, X0, X1
	080 Move X1, X0
	081 Compare X22, 0
	082 JumpIfEqual {156}
	083 Move X0, [X22+64]
	084 Move X8, [X22+24]
	085 Move X2, [X22+40]
	086 NotImplemented "Instruction BLR not yet implemented."
	087 Move X22, X0
	088 Compare X0, 0
	089 JumpIfEqual {159}
	090 Move X0, X22
	091 Move X1, X31
	092 Call HttpBase.get_Headers, X0
	093 Compare X0, 0
	094 JumpIfEqual {160}
	095 Move X8, 0x1F2F000
	096 Move X8, [X8+2856]
	097 Move X1, [X8]
	098 Move X2, X31
	099 Call NameValueCollection.get_Item, X0, X1
	100 Move X1, X0
	101 Compare X1, 0
	102 JumpIfEqual {111}
	103 Move W8, [X1+16]
	104 NotImplemented "Instruction CMP not yet implemented."
	105 Move X0, [X20+24]
	106 Move X2, X31
	107 Call HttpBase.readEntityBody, X0, X1
	108 Move X24, X31
	109 Move X23, X31
	110 Move [X22+32], X0
	111 Move X24, X31
	112 Move X23, X31
	113 Move W25, 7
	114 Compare X21, 0
	115 JumpIfEqual {218}
	116 Move TEMP, 0
	117 Not TEMP
	118 Move W1, TEMP
	119 Move TEMP, 0
	120 Not TEMP
	121 Move W2, TEMP
	122 Move X0, X21
	123 Move X3, X31
	124 Call Timer.Change, X0, X1, X2
	125 Move X0, X21
	126 Move X1, X31
	127 Call Timer.Dispose, X0
	128 Compare X24, 0
	129 JumpIfNotEqual {157}
	130 NotImplemented "Instruction CMP not yet implemented."
	131 Compare W25, 0
	132 JumpIfNotEqual {146}
	133 Move X9, 0x1F2F000
	134 Move W8, [X20+16]
	135 Move X9, [X9+2848]
	136 Move X10, 0x1F2F000
	137 NotImplemented "Instruction CMP not yet implemented."
	138 Move X9, [X9]
	139 Move X10, [X10+2864]
	140 NotImplemented "Instruction CSEL not yet implemented."
	141 Move X10, [X10]
	142 NotImplemented "Instruction CMP not yet implemented."
	143 NotImplemented "Instruction CSEL not yet implemented."
	144 Compare X20, 0
	145 JumpIfNotEqual {161}
	146 Move X0, X22
	147 Move X20, [X31+48]
	148 Move X19, [X31+56]
	149 Move X22, [X31+32]
	150 Move X21, [X31+40]
	151 Move X24, [X31+16]
	152 Move X23, [X31+24]
	153 Move X30, [X31+64]
	154 Move X25, [X31+72]
	155 Return X0
	156 Call 0x1C17F20
	157 Move X0, X24
	158 Call 0x1C17F18
	159 Call 0x1C17F20
	160 Call 0x1C17F20
	161 Move X0, 0x1F2F000
	162 Move X0, [X0+2872]
	163 Call 0x1C17D08
	164 Call 0x1C17F10
	165 Move X1, X20
	166 Move X2, X23
	167 Move X3, X31
	168 Move X21, X0
	169 Call WebSocketException..ctor, X0, X1, X2
	170 Move X0, X21
	171 Move X1, X19
	172 Call 0x1C17DEC
	173 Move X23, X0
	174 Move X22, X31
	175 Move X23, X0
	176 Move X23, X0
	177 Move X22, X31
	178 NotImplemented "Instruction CMP not yet implemented."
	179 Move X0, X23
	180 Call 0x3EB2AD0
	181 Move X23, X0
	182 Move X0, 0x1F07000
	183 Move X0, [X0+2000]
	184 Call 0x1C17D08
	185 Move X8, [X23]
	186 Move X1, [X8]
	187 Call 0x1C18270
	188 Move TEMP, X0
	189 And TEMP, TEMP, 1
	190 Compare TEMP, 1
	191 JumpIfNotEqual {195}
	192 Move X23, [X23]
	193 Call 0x3EB2AE0
	194 Move X24, X31
	195 Move W0, 8
	196 Call 0x3EB2AF0
	197 Move X8, [X23]
	198 Move [X0], X8
	199 Move X1, 0x1CC8000
	200 Add X1, X1, 3672
	201 Move X2, X31
	202 Call 0x3EB2B00
	203 Move X23, X0
	204 Move X24, X1
	205 Move X23, X0
	206 Call 0x3EB2AE0
	207 Move W1, W24
	208 Move W8, 1
	209 NotImplemented "Instruction CMP not yet implemented."
	210 Move X0, X23
	211 Call 0x3EB2AD0
	212 Move X24, [X0]
	213 Call 0x3EB2AE0
	214 Move W25, W31
	215 Move X23, X31
	216 Compare X21, 0
	217 JumpIfNotEqual {116}
	218 Call 0x1C17F20
	219 Move X24, X31
	220 Move X23, X0
	221 Compare X21, 0
	222 JumpIfNotEqual {224}
	223 Call 0x1C17F20
	224 Move TEMP, 0
	225 Not TEMP
	226 Move W1, TEMP
	227 Move TEMP, 0
	228 Not TEMP
	229 Move W2, TEMP
	230 Move X0, X21
	231 Move X3, X31
	232 Call Timer.Change, X0, X1, X2
	233 Move X0, X21
	234 Move X1, X31
	235 Call Timer.Dispose, X0
	236 Compare X24, 0
	237 JumpIfNotEqual {240}
	238 Move X0, X23
	239 Call 0x1D2D690
	240 Move X0, X24
	241 Call 0x1C17F18
	242 Call 0x1991590

Method: System.Byte[] ToByteArray()

Disassembly:
	0x03E7FFEC MOV X1, X31
	0x03E7FFF0 MOV X3, X31
	0x03E7FFF4 MOV X20, X0
	0x03E7FFF8 LDR X2, [X8]
	0x03E7FFFC BL 0x295A080
	0x03E80000 ADRP X8, 0x2EC000
	0x03E80004 LDR X8, [X8 + 0xCE0]
	0x03E80008 MOV X0, X19
	0x03E8000C MOV X1, X20
	0x03E80010 LDR X2, [X8]
	0x03E80014 BL 0x301DD30
	0x03E80018 MOV X0, X19
	0x03E8001C LDP X20, X19, [X31 + 0x20]
	0x03E80020 LDP X22, X21, [X31 + 0x10]
	0x03E80024 LDR X30, [X31], #0x30
	0x03E80028 RET
	0x03E8002C BL 0x1C16F20
	0x03E80030 STP X30, X21, [X31 - 0x20]!
	0x03E80034 STP X20, X19, [X31 + 0x10]
	0x03E80038 ADRP X20, 0x568000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, X0
	005 Move X0, X31
	006 Call Encoding.get_UTF8
	007 Move X8, [X20]
	008 Move X19, X0
	009 Move X0, X20
	010 Move X9, [X8+360]
	011 Move X1, [X8+368]
	012 NotImplemented "Instruction BLR not yet implemented."
	013 Compare X19, 0
	014 JumpIfEqual {24}
	015 Move X8, [X19]
	016 Move X1, X0
	017 Move X0, X19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X3, [X8+616]
	021 Move X2, [X8+624]
	022 Move X30, [X31+32]
	023 CallNoReturn X3
	024 Call 0x1C17F20

