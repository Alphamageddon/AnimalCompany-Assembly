Type: WebSocketSharp.WebSocketFrame/<GetEnumerator>d__84

Method: System.Void .ctor(System.Int32 <>1__state)

Disassembly:
	0x03E7F0C0 LDR X8, [X9 + 0x20]
	0x03E7F0C4 MOV W1, W20
	0x03E7F0C8 LDR X8, [X8 + 0xC0]
	0x03E7F0CC LDR X2, [X8 + 0x70]
	0x03E7F0D0 BL 0x2F67F0C
	0x03E7F0D4 LDR W8, [X19 + 0x18]
	0x03E7F0D8 ADD W8, W8, 0x1
	0x03E7F0DC STR W8, [X19 + 0x18]
	0x03E7F0E0 LDP X20, X19, [X31 + 0x10]
	0x03E7F0E4 LDP X30, X21, [X31], #0x20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W19, W1
	005 Move X1, X31
	006 Move X20, X0
	007 Call Object..ctor, X0
	008 Move [X20+16], W19
	009 Move X20, [X31+16]
	010 Move X19, [X31+24]
	011 Move X30, [X31+32]
	012 Return 

Method: System.Void System.IDisposable.Dispose()

Disassembly:
	0x03E7F848 BL 0x1C16CF4

ISIL:
	001 Return 

Method: System.Boolean MoveNext()

Disassembly:
	0x03E7F84C ADRP X0, 0x2ED000
	0x03E7F850 LDR X0, [X0 + 0xC60]
	0x03E7F854 BL 0x1C16CF4
	0x03E7F858 ADRP X0, 0x27C000
	0x03E7F85C LDR X0, [X0 + 0x7C0]
	0x03E7F860 BL 0x1C16CF4
	0x03E7F864 ADRP X0, 0x2ED000
	0x03E7F868 LDR X0, [X0 + 0xC80]
	0x03E7F86C BL 0x1C16CF4
	0x03E7F870 MOVZ W8, 0x1
	0x03E7F874 STRB W8, [X20 + 0xDC2]
	0x03E7F878 CBZ X19, 0x3E7F9DC
	0x03E7F87C LDR W8, [X19 + 0x18]
	0x03E7F880 CBZ W8, 0x3E7F9D8
	0x03E7F884 ADRP X8, 0x27D000
	0x03E7F888 LDR X8, [X8 + 0x8D8]
	0x03E7F88C LDR X20, [X19 + 0x20]
	0x03E7F890 MOVZ W1, 0x1
	0x03E7F894 LDR X0, [X8]
	0x03E7F898 BL 0x1C16D6C
	0x03E7F89C CBZ X0, 0x3E7F9DC
	0x03E7F8A0 LDR W8, [X0 + 0x18]
	0x03E7F8A4 MOV X1, X0
	0x03E7F8A8 CBZ W8, 0x3E7F9D8
	0x03E7F8AC MOVZ W8, 0x20
	0x03E7F8B0 STRH W8, [X1 + 0x20]
	0x03E7F8B4 CBZ X20, 0x3E7F9DC
	0x03E7F8B8 MOVZ W2, 0x3
	0x03E7F8BC MOV X0, X20
	0x03E7F8C0 MOV X3, X31
	0x03E7F8C4 BL 0x3229EDC
	0x03E7F8C8 CBZ X0, 0x3E7F9DC
	0x03E7F8CC LDR W8, [X0 + 0x18]
	0x03E7F8D0 MOV X21, X0
	0x03E7F8D4 CMP W8, 0x3
	0x03E7F8D8 B.NE 0x3E7F9E0
	0x03E7F8DC ADRP X8, 0x2ED000
	0x03E7F8E0 LDR X8, [X8 + 0xC80]
	0x03E7F8E4 LDR X0, [X8]
	0x03E7F8E8 BL 0x1C16F10
	0x03E7F8EC MOV X1, X31

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move W8, [X0+16]
	004 Move X19, X0
	005 NotImplemented "Instruction CMP not yet implemented."
	006 Compare W8, 0
	007 JumpIfNotEqual {37}
	008 Move X0, [X19+24]
	009 Move TEMP, 0
	010 Not TEMP
	011 Move W8, TEMP
	012 Move [X19+16], W8
	013 Compare X0, 0
	014 JumpIfEqual {43}
	015 Call WebSocketFrame.ToArray, X0
	016 Move W8, W31
	017 Move [X19+32], X0
	018 Move [X19+40], W31
	019 Move W8, [X19+40]
	020 Move X0, [X19+32]
	021 Move TEMP, 0
	022 Not TEMP
	023 Move W9, TEMP
	024 Move [X19+16], W9
	025 Add W8, W8, 1
	026 Move [X19+40], W8
	027 Compare X0, 0
	028 JumpIfEqual {43}
	029 Move W9, [X0+24]
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Add X8, X0, W8
	032 Move W8, [X8+32]
	033 Move W0, 1
	034 Move [X19+16], W0
	035 Move [X19+44], W8
	036 Move [X19+20], W8
	037 Move W0, W31
	038 Move W0, W31
	039 Move [X19+32], X31
	040 Move X30, [X31+16]
	041 Move X19, [X31+24]
	042 Return X0
	043 Call 0x1C17F20
	044 Call 0x1C17F28

Method: System.Byte System.Collections.Generic.IEnumerator<System.Byte>.get_Current()

Disassembly:
	0x03E7F8F0 MOV X20, X0
	0x03E7F8F4 BL 0x3E9BFF4

ISIL:
	001 Move W0, [X0+20]
	002 Return X0

Method: System.Void System.Collections.IEnumerator.Reset()

Disassembly:
	0x03E7F8F8 LDR X8, [X19 + 0x18]
	0x03E7F8FC CMP W8, 0x2
	0x03E7F900 B.LT 0x3E7F944
	0x03E7F904 AND X8, X8, 0x0
	0x03E7F908 MOVZ W22, 0x5
	0x03E7F90C SUB X9, X22, 0x4
	0x03E7F910 CMP X9, W8, UXTW
	0x03E7F914 B.CS 0x3E7F9D8
	0x03E7F918 CBZ X20, 0x3E7F9DC
	0x03E7F91C LDR X1, [X19, X22, LSL #3]
	0x03E7F920 MOV X0, X20
	0x03E7F924 MOV W2, W31
	0x03E7F928 MOV X3, X31
	0x03E7F92C BL 0x3E9CC08

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0x275000
	004 Move X0, [X0+2880]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X1, X31
	008 Move X19, X0
	009 Call NotSupportedException..ctor, X0
	010 Move X0, 0x2EE000
	011 Move X0, [X0+3080]
	012 Call 0x1C17D08
	013 Move X1, X0
	014 Move X0, X19
	015 Call 0x1C17DEC

Method: System.Object System.Collections.IEnumerator.get_Current()

Disassembly:
	0x03E7F930 LDR W8, [X19 + 0x18]
	0x03E7F934 SUB X9, X22, 0x3
	0x03E7F938 ADD X22, X22, 0x1
	0x03E7F93C CMP X9, W8, SXTW
	0x03E7F940 B.LT 0x3E7F90C
	0x03E7F944 LDR W8, [X21 + 0x18]
	0x03E7F948 CBZ W8, 0x3E7F9D8
	0x03E7F94C CMP W8, 0x1
	0x03E7F950 B.EQ 0x3E7F9D8
	0x03E7F954 CMP W8, 0x2
	0x03E7F958 B.LS 0x3E7F9D8
	0x03E7F95C LDR X0, [X21 + 0x30]
	0x03E7F960 CBZ X0, 0x3E7F9DC
	0x03E7F964 ADRP X19, 0x27C000
	0x03E7F968 ADRP X24, 0x2ED000
	0x03E7F96C LDP X22, X23, [X21 + 0x20]
	0x03E7F970 LDR X19, [X19 + 0x7C0]
	0x03E7F974 LDR X24, [X24 + 0xC60]
	0x03E7F978 MOVZ W1, 0x5
	0x03E7F97C MOV X2, X31
	0x03E7F980 BL 0x322B484
	0x03E7F984 LDR X8, [X19]
	0x03E7F988 MOV X19, X0

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x56A000
	007 Move X20, 0x276000
	008 Move W8, [X21+3510]
	009 Move X20, [X20+2520]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0x276000
	016 Move X0, [X0+2520]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X21+3510], W8
	020 Move W8, [X19+20]
	021 Move X0, [X20]
	022 Add X1, X31, 12
	023 Move [X31+12], W8
	024 Call 0x1C17E04
	025 Move X20, [X31+32]
	026 Move X19, [X31+40]
	027 Move X30, [X31+16]
	028 Move X21, [X31+24]
	029 Add X31, X31, 48
	030 Return X0

