Type: WebSocketSharp.Ext/<SplitHeaderValue>d__60

Method: System.Void .ctor(System.Int32 <>1__state)

Disassembly:
	0x03E6B2D0 ADRP X0, 0x28E000
	0x03E6B2D4 LDR X0, [X0 + 0xCC0]
	0x03E6B2D8 BL 0x1C16D08
	0x03E6B2DC LDR X8, [X19]
	0x03E6B2E0 LDR X1, [X8]
	0x03E6B2E4 BL 0x1C17270
	0x03E6B2E8 TBZ X0, 0x0, 0x3E6B2F8
	0x03E6B2EC BL 0x3EB1AE0
	0x03E6B2F0 MOV W0, W31
	0x03E6B2F4 B 0x3E6B2A0
	0x03E6B2F8 MOVZ W0, 0x8
	0x03E6B2FC BL 0x3EB1AF0
	0x03E6B300 LDR X8, [X19]
	0x03E6B304 STR X8, [X0]
	0x03E6B308 ADRP X1, 0x49000
	0x03E6B30C ADD X1, X1, 0xE58
	0x03E6B310 MOV X2, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W20, W1
	005 Move X1, X31
	006 Move X19, X0
	007 Call Object..ctor, X0
	008 Move X0, X31
	009 Move [X19+16], W20
	010 Call Thread.get_CurrentThread
	011 Compare X0, 0
	012 JumpIfEqual {20}
	013 Move X1, X31
	014 Call Thread.get_ManagedThreadId, X0
	015 Move [X19+32], W0
	016 Move X20, [X31+16]
	017 Move X19, [X31+24]
	018 Move X30, [X31+32]
	019 Return 
	020 Call 0x1C17F20

Method: System.Void System.IDisposable.Dispose()

Disassembly:
	0x03E6DC08 LDR X0, [X0 + 0x3D0]

ISIL:
	001 Return 

Method: System.Boolean MoveNext()

Disassembly:
	0x03E6DC0C BL 0x1C16CF4
	0x03E6DC10 ADRP X0, 0x288000
	0x03E6DC14 LDR X0, [X0 + 0x570]
	0x03E6DC18 BL 0x1C16CF4
	0x03E6DC1C ADRP X0, 0x2FF000
	0x03E6DC20 LDR X0, [X0 + 0x3E0]
	0x03E6DC24 BL 0x1C16CF4
	0x03E6DC28 MOVZ W8, 0x1
	0x03E6DC2C STRB W8, [X24 + 0xD17]
	0x03E6DC30 MOV X0, X19
	0x03E6DC34 MOV X1, X31
	0x03E6DC38 BL 0x33BDD8C
	0x03E6DC3C STR X20, [X19 + 0x38]
	0x03E6DC40 STR X21, [X19 + 0xE0]
	0x03E6DC44 LDR X0, [X23]
	0x03E6DC48 BL 0x1C16F10
	0x03E6DC4C LDR X2, [X22]
	0x03E6DC50 MOV X1, X20
	0x03E6DC54 MOV X3, X31
	0x03E6DC58 MOV X21, X0
	0x03E6DC5C BL 0x3314368
	0x03E6DC60 STR X21, [X19 + 0x28]
	0x03E6DC64 CBZ X20, 0x3E6DD18
	0x03E6DC68 ADRP X22, 0x2FF000
	0x03E6DC6C ADRP X23, 0x2FF000
	0x03E6DC70 ADRP X24, 0x288000
	0x03E6DC74 LDR X22, [X22 + 0x3D8]
	0x03E6DC78 LDR X23, [X23 + 0x3E0]
	0x03E6DC7C LDR X24, [X24 + 0x570]
	0x03E6DC80 MOV X0, X20
	0x03E6DC84 MOV X1, X31
	0x03E6DC88 BL 0x3EA2C30
	0x03E6DC8C MOV X21, X0
	0x03E6DC90 BL 0x1C16D44
	0x03E6DC94 STR X21, [X19 + 0xA8]
	0x03E6DC98 LDR X0, [X22]
	0x03E6DC9C BL 0x1C16F10
	0x03E6DCA0 LDR X2, [X23]
	0x03E6DCA4 MOV X1, X19
	0x03E6DCA8 MOV X3, X31
	0x03E6DCAC MOV X21, X0
	0x03E6DCB0 BL 0x2A6B948
	0x03E6DCB4 STR X21, [X19 + 0xB0]
	0x03E6DCB8 LDR X8, [X20]
	0x03E6DCBC MOV X0, X20
	0x03E6DCC0 LDP X9, X1, [X8 + 0x1C8]
	0x03E6DCC4 BLR X9
	0x03E6DCC8 AND W8, W0, 0x1
	0x03E6DCCC MOV X0, X20
	0x03E6DCD0 MOV X1, X31
	0x03E6DCD4 STRB W8, [X19 + 0x11C]
	0x03E6DCD8 BL 0x3EA2C58
	0x03E6DCDC STR X0, [X19 + 0x128]
	0x03E6DCE0 LDR X0, [X24]
	0x03E6DCE4 LDR W8, [X0 + 0xE0]
	0x03E6DCE8 CBNZ W8, 0x3E6DCF0
	0x03E6DCEC BL 0x1C16DFC
	0x03E6DCF0 FMOV D0, 1
	0x03E6DCF4 MOV X0, X31
	0x03E6DCF8 BL 0x3394754
	0x03E6DCFC STR X0, [X19 + 0x140]
	0x03E6DD00 MOV X0, X19
	0x03E6DD04 LDP X20, X19, [X31 + 0x30]
	0x03E6DD08 LDP X22, X21, [X31 + 0x20]
	0x03E6DD0C LDP X24, X23, [X31 + 0x10]
	0x03E6DD10 LDR X30, [X31], #0x40
	0x03E6DD14 B 0x3E6DD1C
	0x03E6DD18 BL 0x1C16F20
	0x03E6DD1C STR X30, [X31 - 0x40]!
	0x03E6DD20 STP X24, X23, [X31 + 0x10]
	0x03E6DD24 STP X22, X21, [X31 + 0x20]
	0x03E6DD28 STP X20, X19, [X31 + 0x30]
	0x03E6DD2C ADRP X24, 0x57B000
	0x03E6DD30 ADRP X20, 0x2FF000
	0x03E6DD34 ADRP X23, 0x28C000
	0x03E6DD38 ADRP X22, 0x2FF000
	0x03E6DD3C ADRP X21, 0x2FF000
	0x03E6DD40 LDRB W8, [X24 + 0xD42]
	0x03E6DD44 LDR X20, [X20 + 0x250]
	0x03E6DD48 LDR X23, [X23 + 0xCC0]
	0x03E6DD4C LDR X22, [X22 + 0x3E8]
	0x03E6DD50 LDR X21, [X21 + 0x3F0]
	0x03E6DD54 MOV X19, X0
	0x03E6DD58 TBNZ X8, 0x0, 0x3E6DDA0
	0x03E6DD5C ADRP X0, 0x2FF000
	0x03E6DD60 LDR X0, [X0 + 0x250]
	0x03E6DD64 BL 0x1C16CF4
	0x03E6DD68 ADRP X0, 0x28D000
	0x03E6DD6C LDR X0, [X0 + 0x2F0]
	0x03E6DD70 BL 0x1C16CF4
	0x03E6DD74 ADRP X0, 0x2FF000
	0x03E6DD78 LDR X0, [X0 + 0x3F0]
	0x03E6DD7C BL 0x1C16CF4
	0x03E6DD80 ADRP X0, 0x2FF000
	0x03E6DD84 LDR X0, [X0 + 0x3E8]
	0x03E6DD88 BL 0x1C16CF4
	0x03E6DD8C ADRP X0, 0x28C000
	0x03E6DD90 LDR X0, [X0 + 0xCC0]
	0x03E6DD94 BL 0x1C16CF4
	0x03E6DD98 MOVZ W8, 0x1
	0x03E6DD9C STRB W8, [X24 + 0xD42]
	0x03E6DDA0 STRB W31, [X19 + 0x30]
	0x03E6DDA4 LDR X0, [X20]
	0x03E6DDA8 BL 0x1C16F10
	0x03E6DDAC MOV X1, X31
	0x03E6DDB0 MOV X20, X0
	0x03E6DDB4 BL 0x3E83C9C
	0x03E6DDB8 STR X20, [X19 + 0x40]
	0x03E6DDBC LDR X0, [X23]
	0x03E6DDC0 BL 0x1C16F10
	0x03E6DDC4 MOV X1, X31
	0x03E6DDC8 MOV X20, X0
	0x03E6DDCC BL 0x33BDD8C
	0x03E6DDD0 STR X20, [X19 + 0x70]
	0x03E6DDD4 LDR X0, [X23]
	0x03E6DDD8 BL 0x1C16F10
	0x03E6DDDC MOV X1, X31
	0x03E6DDE0 MOV X20, X0
	0x03E6DDE4 BL 0x33BDD8C
	0x03E6DDE8 STR X20, [X19 + 0x78]
	0x03E6DDEC LDR X0, [X23]
	0x03E6DDF0 BL 0x1C16F10
	0x03E6DDF4 MOV X1, X31
	0x03E6DDF8 MOV X20, X0
	0x03E6DDFC BL 0x33BDD8C
	0x03E6DE00 STR X20, [X19 + 0x80]
	0x03E6DE04 LDR X0, [X22]
	0x03E6DE08 BL 0x1C16F10
	0x03E6DE0C LDR X1, [X21]
	0x03E6DE10 MOV X20, X0
	0x03E6DE14 BL 0x24F1248
	0x03E6DE18 STR X20, [X19 + 0xB8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x57C000
	005 Move W8, [X20+3339]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0x2FE000
	012 Move X0, [X0+1968]
	013 Call 0x1C17CF4
	014 Move X0, 0x287000
	015 Move X0, [X0+2288]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3339], W8
	019 Move W8, [X19+16]
	020 Move W0, W31
	021 NotImplemented "Instruction CMP not yet implemented."
	022 NotImplemented "Instruction CMP not yet implemented."
	023 Compare W8, 0
	024 JumpIfNotEqual {143}
	025 Move X8, [X19+40]
	026 Move TEMP, 0
	027 Not TEMP
	028 Move W9, TEMP
	029 Move [X19+16], W9
	030 Compare X8, 0
	031 JumpIfEqual {147}
	032 Move W8, [X8+16]
	033 Subtract W9, W8, 1
	034 Move [X19+72], W8
	035 Move [X19+76], W9
	036 Move X8, 0x287000
	037 Move X8, [X8+2288]
	038 Move X0, [X8]
	039 Call 0x1C17F10
	040 Move W1, 32
	041 Move X2, X31
	042 Move X20, X0
	043 Call StringBuilder..ctor, X0, X1
	044 Move W1, W31
	045 Move [X19+80], X20
	046 NotImplemented "Instruction STRH not yet implemented."
	047 Move [X19+92], W31
	048 Move TEMP, 0
	049 Not TEMP
	050 Move W8, TEMP
	051 Move X0, [X19+80]
	052 Move TEMP, 0
	053 Not TEMP
	054 Move W8, TEMP
	055 Move [X19+16], W8
	056 Compare X0, 0
	057 JumpIfEqual {147}
	058 Move W1, W31
	059 Move X2, X31
	060 Call StringBuilder.set_Length, X0, X1
	061 Move X0, [X19+40]
	062 Compare X0, 0
	063 JumpIfEqual {147}
	064 Move X2, X31
	065 Call String.get_Chars, X0, X1
	066 Move X8, [X19+80]
	067 NotImplemented "Instruction STRH not yet implemented."
	068 Compare X8, 0
	069 JumpIfEqual {147}
	070 Move W1, W0
	071 Move X0, X8
	072 Move X2, X31
	073 Call StringBuilder.Append, X0, X1
	074 NotImplemented "Instruction LDRH not yet implemented."
	075 NotImplemented "Instruction CMP not yet implemented."
	076 NotImplemented "Instruction CMP not yet implemented."
	077 Move W8, [X19+88]
	078 Compare W8, 0
	079 JumpIfEqual {124}
	080 Move [X19+88], W31
	081 Move W8, [X19+92]
	082 Move W9, [X19+76]
	083 NotImplemented "Instruction CMP not yet implemented."
	084 Move X0, [X19+40]
	085 Compare X0, 0
	086 JumpIfEqual {147}
	087 Add W1, W8, 1
	088 Move X2, X31
	089 Call String.get_Chars, X0, X1
	090 And W8, W0, 0xFFFF
	091 NotImplemented "Instruction CMP not yet implemented."
	092 Move W8, 1
	093 Move [X19+88], W8
	094 Move X8, 0x2FE000
	095 Move X8, [X8+1968]
	096 Move X0, [X19+56]
	097 Move X2, [X8]
	098 Call Array.IndexOf, X0, X1
	099 Move TEMP, X0
	100 And TEMP, TEMP, -2147483648
	101 Compare TEMP, -2147483648
	102 JumpIfEqual {127}
	103 Move W8, [X19+89]
	104 Compare W8, 0
	105 JumpIfNotEqual {127}
	106 Move X20, [X19+80]
	107 Compare X20, 0
	108 JumpIfEqual {147}
	109 Move X0, X20
	110 Move X1, X31
	111 Call StringBuilder.get_Length, X0
	112 Subtract W1, W0, 1
	113 Move X0, X20
	114 Move X2, X31
	115 Call StringBuilder.set_Length, X0, X1
	116 Move X0, [X19+80]
	117 Compare X0, 0
	118 JumpIfEqual {147}
	119 Move X8, [X0]
	120 Move X9, [X8+360]
	121 Move X1, [X8+368]
	122 NotImplemented "Instruction BLR not yet implemented."
	123 Move W8, 1
	124 Move W8, [X19+89]
	125 Xor W8, W8, 1
	126 Move [X19+89], W8
	127 Move W8, [X19+92]
	128 Add W1, W8, 1
	129 Move [X19+92], W1
	130 Move W8, [X19+76]
	131 NotImplemented "Instruction CMP not yet implemented."
	132 Move X0, [X19+80]
	133 Compare X0, 0
	134 JumpIfEqual {147}
	135 Move X8, [X0]
	136 Move X9, [X8+360]
	137 Move X1, [X8+368]
	138 NotImplemented "Instruction BLR not yet implemented."
	139 Move W8, 2
	140 Move [X19+24], X0
	141 Move W0, 1
	142 Move [X19+16], W8
	143 Move X20, [X31+16]
	144 Move X19, [X31+24]
	145 Move X30, [X31+32]
	146 Return X0
	147 Call 0x1C17F20

Method: System.String System.Collections.Generic.IEnumerator<System.String>.get_Current()

Disassembly:
	0x03E6DE1C CBZ X20, 0x3E6DEA4
	0x03E6DE20 ADRP X10, 0x28D000

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Void System.Collections.IEnumerator.Reset()

Disassembly:
	0x03E6DE24 LDR X8, [X20]
	0x03E6DE28 LDR X10, [X10 + 0x2F0]
	0x03E6DE2C LDRH W9, [X8 + 0x12E]
	0x03E6DE30 LDR X1, [X10]
	0x03E6DE34 CBZ X9, 0x3E6DE58
	0x03E6DE38 LDR X10, [X8 + 0xB0]
	0x03E6DE3C ADD X10, X10, 0x8
	0x03E6DE40 LDUR X11, [X10 - 0x8]
	0x03E6DE44 CMP X11, X1
	0x03E6DE48 B.EQ 0x3E6DE68
	0x03E6DE4C SUBS X9, X9, 0x1
	0x03E6DE50 ADD X10, X10, 0x10
	0x03E6DE54 B.NE 0x3E6DE40
	0x03E6DE58 MOVZ W2, 0x2

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0x287000
	004 Move X0, [X0+2880]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X1, X31
	008 Move X19, X0
	009 Call NotSupportedException..ctor, X0
	010 Move X0, 0x300000
	011 Move X0, [X0+928]
	012 Call 0x1C17D08
	013 Move X1, X0
	014 Move X0, X19
	015 Call 0x1C17DEC

Method: System.Object System.Collections.IEnumerator.get_Current()

Disassembly:
	0x03E6DE5C MOV X0, X20
	0x03E6DE60 BL 0x1C5C788

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Collections.Generic.IEnumerator`1<System.String> System.Collections.Generic.IEnumerable<System.String>.GetEnumerator()

Disassembly:
	0x03E6DE64 B 0x3E6DE78
	0x03E6DE68 LDR W9, [X10]
	0x03E6DE6C ADD W9, W9, 0x2
	0x03E6DE70 ADD X8, X8, W9, 0x4, SXTW
	0x03E6DE74 ADD X0, X8, 0x138
	0x03E6DE78 LDP X8, X1, [X0]
	0x03E6DE7C MOV X0, X20
	0x03E6DE80 BLR X8
	0x03E6DE84 STR X0, [X19 + 0x68]
	0x03E6DE88 BL 0x1C16D44
	0x03E6DE8C STRH W31, [X19 + 0x108]
	0x03E6DE90 LDP X20, X19, [X31 + 0x30]
	0x03E6DE94 LDP X22, X21, [X31 + 0x20]
	0x03E6DE98 LDP X24, X23, [X31 + 0x10]
	0x03E6DE9C LDR X30, [X31], #0x40
	0x03E6DEA0 RET
	0x03E6DEA4 BL 0x1C16F20
	0x03E6DEA8 STR X30, [X31 - 0x40]!
	0x03E6DEAC STP X24, X23, [X31 + 0x10]
	0x03E6DEB0 STP X22, X21, [X31 + 0x20]
	0x03E6DEB4 STP X20, X19, [X31 + 0x30]
	0x03E6DEB8 ADRP X24, 0x57B000
	0x03E6DEBC ADRP X23, 0x287000
	0x03E6DEC0 ADRP X22, 0x2FF000
	0x03E6DEC4 LDRB W8, [X24 + 0xD18]
	0x03E6DEC8 LDR X23, [X23 + 0xE70]
	0x03E6DECC LDR X22, [X22 + 0x3F8]
	0x03E6DED0 MOV X21, X2
	0x03E6DED4 MOV X20, X1
	0x03E6DED8 MOV X19, X0
	0x03E6DEDC TBNZ X8, 0x0, 0x3E6DF24
	0x03E6DEE0 ADRP X0, 0x2FF000
	0x03E6DEE4 LDR X0, [X0 + 0x3D8]
	0x03E6DEE8 BL 0x1C16CF4
	0x03E6DEEC ADRP X0, 0x287000
	0x03E6DEF0 LDR X0, [X0 + 0xE70]
	0x03E6DEF4 BL 0x1C16CF4
	0x03E6DEF8 ADRP X0, 0x2FF000
	0x03E6DEFC LDR X0, [X0 + 0x3F8]
	0x03E6DF00 BL 0x1C16CF4
	0x03E6DF04 ADRP X0, 0x288000
	0x03E6DF08 LDR X0, [X0 + 0x570]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x57C000
	005 Move W8, [X20+3340]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x300000
	012 Move X0, [X0+792]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+3340], W8
	016 Move W8, [X19+16]
	017 Add W31, W8, 2
	018 Move W20, [X19+32]
	019 Move X0, X31
	020 Call Thread.get_CurrentThread
	021 Compare X0, 0
	022 JumpIfEqual {46}
	023 Move X1, X31
	024 Call Thread.get_ManagedThreadId, X0
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move [X19+16], W31
	027 Move X20, X19
	028 Move X8, 0x300000
	029 Move X8, [X8+792]
	030 Move X0, [X8]
	031 Call 0x1C17F10
	032 Move W1, W31
	033 Move X20, X0
	034 Call <SplitHeaderValue>d__60..ctor, X0, X1
	035 Compare X20, 0
	036 JumpIfEqual {46}
	037 Move X8, [X19+48]
	038 Move X0, X20
	039 Move [X20+40], X8
	040 Move X8, [X19+64]
	041 Move [X20+56], X8
	042 Move X20, [X31+16]
	043 Move X19, [X31+24]
	044 Move X30, [X31+32]
	045 Return X0
	046 Call 0x1C17F20

Method: System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()

Disassembly:
	0x03E6DF0C BL 0x1C16CF4

ISIL:
	001 Call <SplitHeaderValue>d__60.System.Collections.Generic.IEnumerable<System.String>.GetEnumerator, X0
	002 Return X0

