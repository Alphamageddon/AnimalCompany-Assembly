Type: WebSocketSharp.Net.RequestStream

Method: System.Void .ctor(System.IO.Stream innerStream, System.Byte[] initialBuffer, System.Int32 offset, System.Int32 count, System.Int64 contentLength)

Disassembly:
	0x03E99A78 MOV X2, X31
	0x03E99A7C BL 0x321BA08
	0x03E99A80 CBZ X19, 0x3E99AB0
	0x03E99A84 AND W8, W0, 0x1
	0x03E99A88 MOVZ W0, 0x1
	0x03E99A8C STRB W8, [X19 + 0x10]
	0x03E99A90 B 0x3E99A98
	0x03E99A94 MOV W0, W31
	0x03E99A98 LDP X20, X19, [X31 + 0x40]
	0x03E99A9C LDP X22, X21, [X31 + 0x30]
	0x03E99AA0 LDP X24, X23, [X31 + 0x20]
	0x03E99AA4 LDP X26, X25, [X31 + 0x10]
	0x03E99AA8 LDR X30, [X31], #0x50
	0x03E99AAC RET
	0x03E99AB0 BL 0x1C16F20
	0x03E99AB4 BL 0x1C16F20
	0x03E99AB8 MOV X0, X22
	0x03E99ABC BL 0x1C16F18
	0x03E99AC0 BL 0x1C16F20
	0x03E99AC4 BL 0x1C16F20
	0x03E99AC8 BL 0x1C16F20
	0x03E99ACC BL 0x1C16F20
	0x03E99AD0 BL 0x1C16F20
	0x03E99AD4 B 0x3E99AFC
	0x03E99AD8 B 0x3E99AFC
	0x03E99ADC B 0x3E99AFC
	0x03E99AE0 B 0x3E99AFC
	0x03E99AE4 B 0x3E99AFC
	0x03E99AE8 B 0x3E99AFC
	0x03E99AEC B 0x3E99AFC
	0x03E99AF0 B 0x3E99AFC
	0x03E99AF4 B 0x3E99AFC
	0x03E99AF8 B 0x3E99AFC
	0x03E99AFC MOV X23, X0
	0x03E99B00 CMP W1, 0x1
	0x03E99B04 B.NE 0x3E99B24
	0x03E99B08 MOV X0, X23
	0x03E99B0C BL 0x3EB1AD0

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X25, 0x550000
	011 Move X26, 0x28A000
	012 Move W8, [X25+3740]
	013 Move X26, [X26+3344]
	014 Move X19, X5
	015 Move W20, W4
	016 Move W21, W3
	017 Move X23, X2
	018 Move X24, X1
	019 Move X22, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {29}
	024 Move X0, 0x28A000
	025 Move X0, [X0+3344]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X25+3740], W8
	029 Move X0, [X26]
	030 Move W8, [X0+224]
	031 Compare W8, 0
	032 JumpIfNotEqual {34}
	033 Call 0x1C17DFC
	034 Move X0, X22
	035 Move X1, X31
	036 Call Stream..ctor, X0
	037 Move [X22+56], X23
	038 Move [X22+64], X24
	039 Move [X22+72], W21
	040 Move [X22+48], W20
	041 Move [X22+40], X19
	042 Move X20, [X31+64]
	043 Move X19, [X31+72]
	044 Move X22, [X31+48]
	045 Move X21, [X31+56]
	046 Move X24, [X31+32]
	047 Move X23, [X31+40]
	048 Move X26, [X31+16]
	049 Move X25, [X31+24]
	050 Move X30, [X31+80]
	051 Return 

Method: System.Int32 get_Count()

Disassembly:
	0x03E99B10 LDR X22, [X0]
	0x03E99B14 BL 0x3EB1AE0

ISIL:
	001 Move W0, [X0+48]
	002 Return X0

Method: System.Byte[] get_InitialBuffer()

Disassembly:
	0x03E99B18 MOV W23, W31
	0x03E99B1C CBNZ X20, 0x3E999E4

ISIL:
	001 Move X0, [X0+56]
	002 Return X0

Method: System.Int32 get_Offset()

Disassembly:
	0x03E99B20 B 0x3E99A3C
	0x03E99B24 MOV X22, X31

ISIL:
	001 Move W0, [X0+72]
	002 Return X0

Method: System.Boolean get_CanRead()

Disassembly:
	0x03E99B28 B 0x3E99B30
	0x03E99B2C MOV X23, X0

ISIL:
	001 Move W0, 1
	002 Return X0

Method: System.Boolean get_CanSeek()

Disassembly:
	0x03E99B30 CBZ X20, 0x3E99B8C
	0x03E99B34 LDR X8, [X20]

ISIL:
	001 Move W0, W31
	002 Return X0

Method: System.Boolean get_CanWrite()

Disassembly:
	0x03E99B38 LDR X1, [X25]
	0x03E99B3C LDRH W9, [X8 + 0x12E]

ISIL:
	001 Move W0, W31
	002 Return X0

Method: System.Int64 get_Length()

Disassembly:
	0x03E99B40 CBZ X9, 0x3E99B64
	0x03E99B44 LDR X10, [X8 + 0xB0]
	0x03E99B48 ADD X10, X10, 0x8
	0x03E99B4C LDUR X11, [X10 - 0x8]
	0x03E99B50 CMP X11, X1
	0x03E99B54 B.EQ 0x3E99B74
	0x03E99B58 SUBS X9, X9, 0x1
	0x03E99B5C ADD X10, X10, 0x10
	0x03E99B60 B.NE 0x3E99B4C
	0x03E99B64 MOV X0, X20
	0x03E99B68 MOV W2, W31
	0x03E99B6C BL 0x1C5C788
	0x03E99B70 B 0x3E99B80
	0x03E99B74 LDRSW X9, [X10]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0x25B000
	004 Move X0, [X0+2880]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X1, X31
	008 Move X19, X0
	009 Call NotSupportedException..ctor, X0
	010 Move X0, 0x2D5000
	011 Move X0, [X0+3480]
	012 Call 0x1C17D08
	013 Move X1, X0
	014 Move X0, X19
	015 Call 0x1C17DEC

Method: System.Int64 get_Position()

Disassembly:
	0x03E99B78 ADD X8, X8, X9, 0x4, LSL
	0x03E99B7C ADD X0, X8, 0x138
	0x03E99B80 LDP X8, X1, [X0]
	0x03E99B84 MOV X0, X20
	0x03E99B88 BLR X8
	0x03E99B8C CBNZ X22, 0x3E99B98
	0x03E99B90 MOV X0, X23
	0x03E99B94 BL 0x1D2C690
	0x03E99B98 MOV X0, X22
	0x03E99B9C BL 0x1C16F18
	0x03E99BA0 BL 0x1990590
	0x03E99BA4 STR X30, [X31 - 0x40]!
	0x03E99BA8 STP X24, X23, [X31 + 0x10]
	0x03E99BAC STP X22, X21, [X31 + 0x20]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0x25B000
	004 Move X0, [X0+2880]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X1, X31
	008 Move X19, X0
	009 Call NotSupportedException..ctor, X0
	010 Move X0, 0x2D5000
	011 Move X0, [X0+3488]
	012 Call 0x1C17D08
	013 Move X1, X0
	014 Move X0, X19
	015 Call 0x1C17DEC

Method: System.Void set_Position(System.Int64 value)

Disassembly:
	0x03E99BB0 STP X20, X19, [X31 + 0x30]
	0x03E99BB4 ADRP X20, 0x54F000
	0x03E99BB8 LDRB W8, [X20 + 0xEA1]
	0x03E99BBC MOV W21, W1
	0x03E99BC0 MOV X19, X0
	0x03E99BC4 TBNZ X8, 0x0, 0x3E99C00
	0x03E99BC8 ADRP X0, 0x25A000
	0x03E99BCC LDR X0, [X0 + 0x618]
	0x03E99BD0 BL 0x1C16CF4
	0x03E99BD4 ADRP X0, 0x25A000
	0x03E99BD8 LDR X0, [X0 + 0xE00]
	0x03E99BDC BL 0x1C16CF4
	0x03E99BE0 ADRP X0, 0x262000
	0x03E99BE4 LDR X0, [X0 + 0x558]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0x25B000
	004 Move X0, [X0+2880]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X1, X31
	008 Move X19, X0
	009 Call NotSupportedException..ctor, X0
	010 Move X0, 0x2D5000
	011 Move X0, [X0+3496]
	012 Call 0x1C17D08
	013 Move X1, X0
	014 Move X0, X19
	015 Call 0x1C17DEC

Method: System.Int32 fillFromInitialBuffer(System.Byte[] buffer, System.Int32 offset, System.Int32 count)

Disassembly:
	0x03E99BE8 BL 0x1C16CF4
	0x03E99BEC ADRP X0, 0x2D4000
	0x03E99BF0 LDR X0, [X0 + 0x1F8]
	0x03E99BF4 BL 0x1C16CF4
	0x03E99BF8 MOVZ W8, 0x1
	0x03E99BFC STRB W8, [X20 + 0xEA1]
	0x03E99C00 ADRP X24, 0x25A000
	0x03E99C04 LDR X20, [X19 + 0x28]
	0x03E99C08 LDR X24, [X24 + 0xE00]
	0x03E99C0C CBZ X20, 0x3E99DFC
	0x03E99C10 LDR X8, [X20]
	0x03E99C14 LDP X9, X1, [X8 + 0x1E8]
	0x03E99C18 MOV X0, X20
	0x03E99C1C BLR X9
	0x03E99C20 MOVN W8, 0x80000000
	0x03E99C24 MOV X22, X0
	0x03E99C28 CMP X0, X8
	0x03E99C2C B.LE 0x3E99CB8
	0x03E99C30 LDR X0, [X19 + 0x28]
	0x03E99C34 CBZ X0, 0x3E99E08
	0x03E99C38 LDR X8, [X0]
	0x03E99C3C LDR X9, [X8 + 0x208]
	0x03E99C40 LDR X2, [X8 + 0x210]
	0x03E99C44 MOV X1, X31
	0x03E99C48 BLR X9
	0x03E99C4C ADRP X8, 0x25A000
	0x03E99C50 LDR X8, [X8 + 0x618]
	0x03E99C54 LDR X0, [X8]
	0x03E99C58 MOVZ W1, 0x400
	0x03E99C5C BL 0x1C16D6C
	0x03E99C60 MOV X22, X0
	0x03E99C64 LDR X0, [X19 + 0x28]
	0x03E99C68 CBZ X0, 0x3E99DF4
	0x03E99C6C LDR X8, [X0]
	0x03E99C70 LDR X9, [X8 + 0x358]
	0x03E99C74 LDR X4, [X8 + 0x360]
	0x03E99C78 MOVZ W3, 0x400
	0x03E99C7C MOV X1, X22
	0x03E99C80 MOV W2, W31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X9, [X0+40]
	005 Compare X9, 0
	006 JumpIfEqual {34}
	007 Move W10, [X0+48]
	008 Move X19, X0
	009 Compare W10, 0
	010 JumpIfEqual {37}
	011 NotImplemented "Instruction CMP not yet implemented."
	012 NotImplemented "Instruction CSEL not yet implemented."
	013 Move W8, W2
	014 Move X2, X1
	015 Move X0, [X19+56]
	016 Move W1, [X19+72]
	017 NotImplemented "Instruction CMP not yet implemented."
	018 NotImplemented "Instruction CCMP not yet implemented."
	019 NotImplemented "Instruction CSEL not yet implemented."
	020 Move W3, W8
	021 Move W4, W20
	022 Move X5, X31
	023 Call Buffer.BlockCopy, X0, X1, X2, X3, X4
	024 Move W9, [X19+72]
	025 Move W10, [X19+48]
	026 Move X8, [X19+40]
	027 Add W9, W9, W20
	028 Subtract W10, W10, W20
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move [X19+72], W9
	031 Move [X19+48], W10
	032 Subtract X8, X8, W20
	033 Move [X19+40], X8
	034 Move TEMP, 0
	035 Not TEMP
	036 Move W20, TEMP
	037 Move W20, W31
	038 Move W0, W20
	039 Move X20, [X31+16]
	040 Move X19, [X31+24]
	041 Move X30, [X31+32]
	042 Return X0

Method: System.IAsyncResult BeginRead(System.Byte[] buffer, System.Int32 offset, System.Int32 count, System.AsyncCallback callback, System.Object state)

Disassembly:
	0x03E99C84 BLR X9
	0x03E99C88 MOV W3, W0
	0x03E99C8C CMP W0, 0x1
	0x03E99C90 B.LT 0x3E99D04
	0x03E99C94 LDR X8, [X19 + 0x58]
	0x03E99C98 CBZ X8, 0x3E99DF8
	0x03E99C9C LDR X0, [X8 + 0x40]
	0x03E99CA0 LDR X9, [X8 + 0x18]
	0x03E99CA4 LDR X4, [X8 + 0x28]
	0x03E99CA8 MOV X1, X22
	0x03E99CAC MOV W2, W31
	0x03E99CB0 BLR X9
	0x03E99CB4 B 0x3E99C64
	0x03E99CB8 CMP X22, 0x1
	0x03E99CBC B.LT 0x3E99CFC
	0x03E99CC0 LDR X0, [X19 + 0x28]
	0x03E99CC4 CBZ X0, 0x3E99E10
	0x03E99CC8 LDR X8, [X0]
	0x03E99CCC LDR X23, [X19 + 0x58]
	0x03E99CD0 LDR X1, [X8 + 0x3C0]
	0x03E99CD4 LDR X9, [X8 + 0x3B8]
	0x03E99CD8 BLR X9
	0x03E99CDC MOV X1, X0
	0x03E99CE0 CBZ X23, 0x3E99E14
	0x03E99CE4 LDR X0, [X23 + 0x40]
	0x03E99CE8 LDR X8, [X23 + 0x18]
	0x03E99CEC LDR X4, [X23 + 0x28]
	0x03E99CF0 MOV W2, W31
	0x03E99CF4 MOV W3, W22
	0x03E99CF8 BLR X8
	0x03E99CFC MOV X22, X31
	0x03E99D00 B 0x3E99D0C
	0x03E99D04 MOV X22, X31
	0x03E99D08 CBZ X20, 0x3E99D64
	0x03E99D0C LDR X8, [X20]
	0x03E99D10 LDR X1, [X24]
	0x03E99D14 LDRH W9, [X8 + 0x12E]
	0x03E99D18 CBZ X9, 0x3E99D3C
	0x03E99D1C LDR X10, [X8 + 0xB0]
	0x03E99D20 ADD X10, X10, 0x8
	0x03E99D24 LDUR X11, [X10 - 0x8]
	0x03E99D28 CMP X11, X1
	0x03E99D2C B.EQ 0x3E99D4C
	0x03E99D30 SUBS X9, X9, 0x1
	0x03E99D34 ADD X10, X10, 0x10
	0x03E99D38 B.NE 0x3E99D24
	0x03E99D3C MOV X0, X20
	0x03E99D40 MOV W2, W31
	0x03E99D44 BL 0x1C5C788
	0x03E99D48 B 0x3E99D58
	0x03E99D4C LDRSW X9, [X10]
	0x03E99D50 ADD X8, X8, X9, 0x4, LSL
	0x03E99D54 ADD X0, X8, 0x138
	0x03E99D58 LDP X8, X1, [X0]
	0x03E99D5C MOV X0, X20
	0x03E99D60 BLR X8
	0x03E99D64 CBNZ X22, 0x3E99E00
	0x03E99D68 TBZ X21, 0x0, 0x3E99DC0
	0x03E99D6C LDRB W8, [X19 + 0x48]
	0x03E99D70 CBZ W8, 0x3E99DB8
	0x03E99D74 ADRP X21, 0x2D4000
	0x03E99D78 LDR X21, [X21 + 0x1F8]
	0x03E99D7C LDR X20, [X19 + 0x50]
	0x03E99D80 LDR X0, [X21]
	0x03E99D84 LDR W8, [X0 + 0xE0]
	0x03E99D88 CBNZ W8, 0x3E99D90
	0x03E99D8C BL 0x1C16DFC
	0x03E99D90 CBZ X20, 0x3E99E0C
	0x03E99D94 LDR X8, [X21]
	0x03E99D98 LDR X9, [X20 + 0x18]
	0x03E99D9C LDR X0, [X20 + 0x40]
	0x03E99DA0 LDR X4, [X20 + 0x28]
	0x03E99DA4 LDR X8, [X8 + 0xB8]
	0x03E99DA8 MOVZ W3, 0x5
	0x03E99DAC MOV W2, W31
	0x03E99DB0 LDR X1, [X8 + 0x8]
	0x03E99DB4 BLR X9
	0x03E99DB8 STR X31, [X19 + 0x28]
	0x03E99DBC B 0x3E99DE0
	0x03E99DC0 ADRP X8, 0x262000
	0x03E99DC4 LDR X8, [X8 + 0x558]
	0x03E99DC8 LDR X0, [X8]
	0x03E99DCC BL 0x1C16F10
	0x03E99DD0 MOV X1, X31
	0x03E99DD4 MOV X20, X0
	0x03E99DD8 BL 0x32E23B4
	0x03E99DDC STR X20, [X19 + 0x28]
	0x03E99DE0 LDP X20, X19, [X31 + 0x30]
	0x03E99DE4 LDP X22, X21, [X31 + 0x20]
	0x03E99DE8 LDP X24, X23, [X31 + 0x10]
	0x03E99DEC LDR X30, [X31], #0x40
	0x03E99DF0 RET
	0x03E99DF4 BL 0x1C16F20
	0x03E99DF8 BL 0x1C16F20
	0x03E99DFC BL 0x1C16F20
	0x03E99E00 MOV X0, X22
	0x03E99E04 BL 0x1C16F18
	0x03E99E08 BL 0x1C16F20
	0x03E99E0C BL 0x1C16F20
	0x03E99E10 BL 0x1C16F20
	0x03E99E14 BL 0x1C16F20
	0x03E99E18 B 0x3E99E40
	0x03E99E1C B 0x3E99E40
	0x03E99E20 B 0x3E99E40
	0x03E99E24 B 0x3E99E40
	0x03E99E28 B 0x3E99E40
	0x03E99E2C B 0x3E99E40
	0x03E99E30 B 0x3E99E40
	0x03E99E34 B 0x3E99E40
	0x03E99E38 B 0x3E99E40
	0x03E99E3C B 0x3E99E40
	0x03E99E40 MOV X23, X0
	0x03E99E44 CMP W1, 0x1
	0x03E99E48 B.NE 0x3E99E60
	0x03E99E4C MOV X0, X23
	0x03E99E50 BL 0x3EB1AD0
	0x03E99E54 LDR X22, [X0]
	0x03E99E58 BL 0x3EB1AE0
	0x03E99E5C B 0x3E99D08
	0x03E99E60 MOV X22, X31
	0x03E99E64 B 0x3E99E6C
	0x03E99E68 MOV X23, X0
	0x03E99E6C CBZ X20, 0x3E99EC8
	0x03E99E70 LDR X8, [X20]
	0x03E99E74 LDR X1, [X24]
	0x03E99E78 LDRH W9, [X8 + 0x12E]
	0x03E99E7C CBZ X9, 0x3E99EA0
	0x03E99E80 LDR X10, [X8 + 0xB0]
	0x03E99E84 ADD X10, X10, 0x8
	0x03E99E88 LDUR X11, [X10 - 0x8]
	0x03E99E8C CMP X11, X1
	0x03E99E90 B.EQ 0x3E99EB0
	0x03E99E94 SUBS X9, X9, 0x1
	0x03E99E98 ADD X10, X10, 0x10
	0x03E99E9C B.NE 0x3E99E88
	0x03E99EA0 MOV X0, X20
	0x03E99EA4 MOV W2, W31
	0x03E99EA8 BL 0x1C5C788
	0x03E99EAC B 0x3E99EBC
	0x03E99EB0 LDRSW X9, [X10]
	0x03E99EB4 ADD X8, X8, X9, 0x4, LSL
	0x03E99EB8 ADD X0, X8, 0x138
	0x03E99EBC LDP X8, X1, [X0]
	0x03E99EC0 MOV X0, X20
	0x03E99EC4 BLR X8
	0x03E99EC8 CBNZ X22, 0x3E99ED4
	0x03E99ECC MOV X0, X23
	0x03E99ED0 BL 0x1D2C690
	0x03E99ED4 MOV X0, X22
	0x03E99ED8 BL 0x1C16F18
	0x03E99EDC BL 0x1990590
	0x03E99EE0 STP X29, X30, [X31 - 0x60]!
	0x03E99EE4 STP X28, X27, [X31 + 0x10]
	0x03E99EE8 STP X26, X25, [X31 + 0x20]
	0x03E99EEC STP X24, X23, [X31 + 0x30]
	0x03E99EF0 STP X22, X21, [X31 + 0x40]
	0x03E99EF4 STP X20, X19, [X31 + 0x50]
	0x03E99EF8 ADRP X20, 0x54F000
	0x03E99EFC LDRB W8, [X20 + 0xEB4]
	0x03E99F00 MOV W23, W1
	0x03E99F04 MOV X19, X0
	0x03E99F08 TBNZ X8, 0x0, 0x3E99F44
	0x03E99F0C ADRP X0, 0x25A000
	0x03E99F10 LDR X0, [X0 + 0x8F0]
	0x03E99F14 BL 0x1C16CF4
	0x03E99F18 ADRP X0, 0x2D3000
	0x03E99F1C LDR X0, [X0 + 0xC80]
	0x03E99F20 BL 0x1C16CF4
	0x03E99F24 ADRP X0, 0x298000
	0x03E99F28 LDR X0, [X0 + 0x420]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X25, 0x550000
	010 Move W8, [X25+3741]
	011 Move X19, X5
	012 Move X21, X4
	013 Move W23, W3
	014 Move W20, W2
	015 Move X22, X1
	016 Move X24, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {26}
	021 Move X0, 0x2D5000
	022 Move X0, [X0+3504]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X25+3741], W8
	026 Move W8, [X24+52]
	027 Compare W8, 0
	028 JumpIfNotEqual {111}
	029 Compare X22, 0
	030 JumpIfEqual {130}
	031 Move TEMP, X20
	032 And TEMP, TEMP, -2147483648
	033 Compare TEMP, -2147483648
	034 JumpIfEqual {148}
	035 Move TEMP, X23
	036 And TEMP, TEMP, -2147483648
	037 Compare TEMP, -2147483648
	038 JumpIfEqual {159}
	039 Move W8, [X22+24]
	040 Add W9, W23, W20
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Compare W23, 0
	043 JumpIfEqual {79}
	044 Move X0, X24
	045 Move X1, X22
	046 Move W2, W20
	047 Move W3, W23
	048 Call RequestStream.fillFromInitialBuffer, X0, X1, X2, X3
	049 Compare W0, 0
	050 JumpIfEqual {88}
	051 Move X8, 0x2D5000
	052 Move X8, [X8+3504]
	053 Move W25, W0
	054 Move X0, [X8]
	055 Call 0x1C17F10
	056 Move X1, X21
	057 Move X2, X19
	058 Move X24, X0
	059 Call HttpStreamAsyncResult..ctor, X0, X1, X2
	060 Compare X24, 0
	061 JumpIfEqual {194}
	062 NotImplemented "Instruction BIC not yet implemented."
	063 Move X0, X24
	064 Move [X24+16], X22
	065 Move [X24+48], W20
	066 Move [X24+36], W23
	067 Move [X24+72], W8
	068 Call HttpStreamAsyncResult.Complete, X0
	069 Move X0, X24
	070 Move X20, [X31+48]
	071 Move X19, [X31+56]
	072 Move X22, [X31+32]
	073 Move X21, [X31+40]
	074 Move X24, [X31+16]
	075 Move X23, [X31+24]
	076 Move X30, [X31+64]
	077 Move X25, [X31+72]
	078 Return X0
	079 Move X0, [X24+64]
	080 Compare X0, 0
	081 JumpIfEqual {194}
	082 Move X8, [X0]
	083 Move X1, X22
	084 Move W2, W20
	085 Move W3, W31
	086 Move X7, [X8+696]
	087 Move X6, [X8+704]
	088 Move X0, [X24+64]
	089 Compare X0, 0
	090 JumpIfEqual {194}
	091 Move X8, [X0]
	092 Move X9, [X24+40]
	093 Move X1, X22
	094 Move W2, W20
	095 Move X7, [X8+696]
	096 Move X6, [X8+704]
	097 NotImplemented "Instruction CMP not yet implemented."
	098 NotImplemented "Instruction CCMP not yet implemented."
	099 NotImplemented "Instruction CSEL not yet implemented."
	100 Move X4, X21
	101 Move X5, X19
	102 Move X20, [X31+48]
	103 Move X19, [X31+56]
	104 Move X22, [X31+32]
	105 Move X21, [X31+40]
	106 Move X24, [X31+16]
	107 Move X23, [X31+24]
	108 Move X30, [X31+64]
	109 Move X25, [X31+72]
	110 CallNoReturn X7
	111 Move X0, X24
	112 Move X1, X31
	113 Call "il2cpp_vm_object_is_inst", X0
	114 Move X19, X0
	115 Call 0x19913C0
	116 Move X8, [X19]
	117 Move X0, X19
	118 Move X9, [X8+360]
	119 Move X1, [X8+368]
	120 NotImplemented "Instruction BLR not yet implemented."
	121 Move X19, X0
	122 Move X0, 0x284000
	123 Move X0, [X0+1208]
	124 Call 0x1C17D08
	125 Call 0x1C17F10
	126 Move X1, X19
	127 Move X2, X31
	128 Move X20, X0
	129 Call ObjectDisposedException..ctor, X0, X1
	130 Move X0, 0x260000
	131 Move X0, [X0+1320]
	132 Call 0x1C17D08
	133 Call 0x1C17F10
	134 Move X19, X0
	135 Move X0, 0x286000
	136 Move X0, [X0+3912]
	137 Call 0x1C17D08
	138 Move X1, X0
	139 Move X0, X19
	140 Move X2, X31
	141 Call ArgumentNullException..ctor, X0, X1
	142 Move X0, 0x2D5000
	143 Move X0, [X0+3512]
	144 Call 0x1C17D08
	145 Move X1, X0
	146 Move X0, X19
	147 Call 0x1C17DEC
	148 Move X0, 0x2D5000
	149 Move X0, [X0+3520]
	150 Call 0x1C17D08
	151 Move X19, X0
	152 Move X0, 0x263000
	153 Move X0, [X0+1888]
	154 Call 0x1C17D08
	155 Call 0x1C17F10
	156 Move X20, X0
	157 Move X0, 0x28A000
	158 Move X0, [X0+3472]
	159 Move X0, 0x2D5000
	160 Move X0, [X0+3520]
	161 Call 0x1C17D08
	162 Move X19, X0
	163 Move X0, 0x263000
	164 Move X0, [X0+1888]
	165 Call 0x1C17D08
	166 Call 0x1C17F10
	167 Move X20, X0
	168 Move X0, 0x283000
	169 Move X0, [X0+1608]
	170 Call 0x1C17D08
	171 Move X1, X0
	172 Move X0, X20
	173 Move X2, X19
	174 Move X3, X31
	175 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	176 Move X0, 0x2D5000
	177 Move X0, [X0+3528]
	178 Call 0x1C17D08
	179 Move X19, X0
	180 Move X0, 0x263000
	181 Move X0, [X0+1400]
	182 Call 0x1C17D08
	183 Call 0x1C17F10
	184 Move X1, X19
	185 Move X2, X31
	186 Move X20, X0
	187 Call ArgumentException..ctor, X0, X1
	188 Move X0, 0x2D5000
	189 Move X0, [X0+3512]
	190 Call 0x1C17D08
	191 Move X1, X0
	192 Move X0, X20
	193 Call 0x1C17DEC
	194 Call 0x1C17F20

Method: System.IAsyncResult BeginWrite(System.Byte[] buffer, System.Int32 offset, System.Int32 count, System.AsyncCallback callback, System.Object state)

Disassembly:
	0x03E99F2C BL 0x1C16CF4
	0x03E99F30 ADRP X0, 0x2D4000
	0x03E99F34 LDR X0, [X0 + 0xE48]
	0x03E99F38 BL 0x1C16CF4
	0x03E99F3C MOVZ W8, 0x1
	0x03E99F40 STRB W8, [X20 + 0xEB4]
	0x03E99F44 LDR X8, [X19]
	0x03E99F48 ADRP X20, 0x298000
	0x03E99F4C MOV X0, X19
	0x03E99F50 LDR X9, [X8 + 0x218]
	0x03E99F54 LDR X1, [X8 + 0x220]
	0x03E99F58 LDR X20, [X20 + 0x420]
	0x03E99F5C BLR X9
	0x03E99F60 CBZ W0, 0x3E9A0D4

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0x25B000
	004 Move X0, [X0+2880]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X1, X31
	008 Move X19, X0
	009 Call NotSupportedException..ctor, X0
	010 Move X0, 0x2D5000
	011 Move X0, [X0+3536]
	012 Call 0x1C17D08
	013 Move X1, X0
	014 Move X0, X19
	015 Call 0x1C17DEC

Method: System.Void Close()

Disassembly:
	0x03E99F64 ADRP X8, 0x25A000
	0x03E99F68 LDR X8, [X8 + 0x8F0]
	0x03E99F6C MOV W21, W0

ISIL:
	001 Move W8, 1
	002 Move [X0+52], W8
	003 Return 

Method: System.Int32 EndRead(System.IAsyncResult asyncResult)

Disassembly:
	0x03E99F70 LDR X0, [X8]
	0x03E99F74 BL 0x1C16F10
	0x03E99F78 MOV X1, X31
	0x03E99F7C MOV X20, X0
	0x03E99F80 BL 0x3231AC4
	0x03E99F84 CMP W21, 0x1
	0x03E99F88 B.LT 0x3E9A090
	0x03E99F8C ADRP X27, 0x2D3000
	0x03E99F90 ADRP X28, 0x2D4000
	0x03E99F94 LDR X27, [X27 + 0xC80]
	0x03E99F98 LDR X28, [X28 + 0xE48]
	0x03E99F9C MOV W22, W31
	0x03E99FA0 AND W23, W23, 0x1
	0x03E99FA4 LDR X8, [X19]
	0x03E99FA8 MOV X0, X19
	0x03E99FAC MOV W1, W22
	0x03E99FB0 LDR X9, [X8 + 0x2B8]
	0x03E99FB4 LDR X2, [X8 + 0x2C0]
	0x03E99FB8 BLR X9
	0x03E99FBC LDR X8, [X27]
	0x03E99FC0 MOV X24, X0
	0x03E99FC4 LDR W9, [X8 + 0xE0]
	0x03E99FC8 CBNZ W9, 0x3E99FD4
	0x03E99FCC MOV X0, X8
	0x03E99FD0 BL 0x1C16DFC
	0x03E99FD4 MOV X0, X24
	0x03E99FD8 MOV W1, W23
	0x03E99FDC BL 0x3E9CAE4
	0x03E99FE0 LDR X8, [X19]
	0x03E99FE4 TBZ X0, 0x0, 0x3E9A054
	0x03E99FE8 LDR X9, [X8 + 0x2A8]
	0x03E99FEC LDR X2, [X8 + 0x2B0]
	0x03E99FF0 MOV X0, X19
	0x03E99FF4 MOV W1, W22
	0x03E99FF8 BLR X9
	0x03E99FFC CBZ X0, 0x3E9A0F8
	0x03E9A000 LDR X8, [X0 + 0x18]
	0x03E9A004 MOV X25, X0
	0x03E9A008 CMP W8, 0x1
	0x03E9A00C B.LT 0x3E9A084
	0x03E9A010 MOV X29, X31
	0x03E9A014 AND X8, X8, 0x0
	0x03E9A018 ADD X26, X25, 0x20
	0x03E9A01C CMP X29, W8, UXTW
	0x03E9A020 B.CS 0x3E9A0F4
	0x03E9A024 CBZ X20, 0x3E9A0F8
	0x03E9A028 LDR X3, [X26, X29, LSL #3]
	0x03E9A02C LDR X1, [X28]
	0x03E9A030 MOV X0, X20
	0x03E9A034 MOV X2, X24
	0x03E9A038 MOV X4, X31
	0x03E9A03C BL 0x3234D98
	0x03E9A040 LDR W8, [X25 + 0x18]
	0x03E9A044 ADD X29, X29, 0x1
	0x03E9A048 CMP X29, W8, SXTW
	0x03E9A04C B.LT 0x3E9A01C
	0x03E9A050 B 0x3E9A084
	0x03E9A054 LDR X9, [X8 + 0x298]
	0x03E9A058 LDR X2, [X8 + 0x2A0]
	0x03E9A05C MOV X0, X19
	0x03E9A060 MOV W1, W22
	0x03E9A064 BLR X9
	0x03E9A068 CBZ X20, 0x3E9A0F8
	0x03E9A06C LDR X1, [X28]
	0x03E9A070 MOV X3, X0
	0x03E9A074 MOV X0, X20
	0x03E9A078 MOV X2, X24
	0x03E9A07C MOV X4, X31
	0x03E9A080 BL 0x3234D98
	0x03E9A084 ADD W22, W22, 0x1
	0x03E9A088 CMP W22, W21
	0x03E9A08C B.NE 0x3E99FA4
	0x03E9A090 CBZ X20, 0x3E9A0F8
	0x03E9A094 ADRP X8, 0x297000
	0x03E9A098 LDR X8, [X8 + 0x420]
	0x03E9A09C MOV X0, X20
	0x03E9A0A0 MOV X2, X31
	0x03E9A0A4 LDR X1, [X8]
	0x03E9A0A8 BL 0x32333E0
	0x03E9A0AC LDR X8, [X20]
	0x03E9A0B0 MOV X0, X20
	0x03E9A0B4 LDP X20, X19, [X31 + 0x50]
	0x03E9A0B8 LDP X22, X21, [X31 + 0x40]
	0x03E9A0BC LDP X2, X1, [X8 + 0x168]
	0x03E9A0C0 LDP X24, X23, [X31 + 0x30]
	0x03E9A0C4 LDP X26, X25, [X31 + 0x20]
	0x03E9A0C8 LDP X28, X27, [X31 + 0x10]
	0x03E9A0CC LDP X29, X30, [X31], #0x60
	0x03E9A0D0 BR X2
	0x03E9A0D4 LDR X0, [X20]
	0x03E9A0D8 LDP X20, X19, [X31 + 0x50]
	0x03E9A0DC LDP X22, X21, [X31 + 0x40]
	0x03E9A0E0 LDP X24, X23, [X31 + 0x30]
	0x03E9A0E4 LDP X26, X25, [X31 + 0x20]
	0x03E9A0E8 LDP X28, X27, [X31 + 0x10]
	0x03E9A0EC LDP X29, X30, [X31], #0x60
	0x03E9A0F0 RET
	0x03E9A0F4 BL 0x1C16F28
	0x03E9A0F8 BL 0x1C16F20
	0x03E9A0FC STR X30, [X31 - 0x30]!
	0x03E9A100 STP X22, X21, [X31 + 0x10]
	0x03E9A104 STP X20, X19, [X31 + 0x20]
	0x03E9A108 ADRP X22, 0x54E000
	0x03E9A10C ADRP X21, 0x259000
	0x03E9A110 ADRP X20, 0x2D3000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x550000
	006 Move W8, [X21+3742]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x2D5000
	014 Move X0, [X0+3504]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+3742], W8
	018 Move W8, [X20+52]
	019 Compare W8, 0
	020 JumpIfNotEqual {71}
	021 Compare X19, 0
	022 JumpIfEqual {96}
	023 Move X8, 0x2D5000
	024 Move X8, [X8+3504]
	025 Move X9, [X19]
	026 Move X8, [X8]
	027 Move W11, [X9+304]
	028 Move W10, [X8+304]
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move X9, [X9+200]
	031 Add X9, X9, X10
	032 NotImplemented "Instruction LDUR not yet implemented."
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move X0, [X20+64]
	035 Compare X0, 0
	036 JumpIfEqual {114}
	037 Move X8, [X0]
	038 Move X1, X19
	039 Move X9, [X8+712]
	040 Move X2, [X8+720]
	041 NotImplemented "Instruction BLR not yet implemented."
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X8, [X20+40]
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Subtract X8, X8, W0
	046 Move [X20+40], X8
	047 Move X20, [X19+64]
	048 Move X1, X31
	049 Move X0, X20
	050 Call Monitor.Enter, X0
	051 Move W21, [X19+32]
	052 Move X0, X20
	053 Move X1, X31
	054 Call Monitor.Exit, X0
	055 Compare W21, 0
	056 JumpIfNotEqual {65}
	057 Move X0, X19
	058 Call HttpStreamAsyncResult.get_AsyncWaitHandle, X0
	059 Compare X0, 0
	060 JumpIfEqual {114}
	061 Move X8, [X0]
	062 Move X9, [X8+472]
	063 Move X1, [X8+480]
	064 NotImplemented "Instruction BLR not yet implemented."
	065 Move W0, [X19+72]
	066 Move X20, [X31+16]
	067 Move X19, [X31+24]
	068 Move X30, [X31+32]
	069 Move X21, [X31+40]
	070 Return X0
	071 Move X0, X20
	072 Move X1, X31
	073 Call "il2cpp_vm_object_is_inst", X0
	074 Move X19, X0
	075 Call 0x19913C0
	076 Move X8, [X19]
	077 Move X0, X19
	078 Move X9, [X8+360]
	079 Move X1, [X8+368]
	080 NotImplemented "Instruction BLR not yet implemented."
	081 Move X19, X0
	082 Move X0, 0x283000
	083 Move X0, [X0+1208]
	084 Call 0x1C17D08
	085 Call 0x1C17F10
	086 Move X1, X19
	087 Move X2, X31
	088 Move X20, X0
	089 Call ObjectDisposedException..ctor, X0, X1
	090 Move X0, 0x2D4000
	091 Move X0, [X0+3544]
	092 Call 0x1C17D08
	093 Move X1, X0
	094 Move X0, X20
	095 Call 0x1C17DEC
	096 Move X0, 0x25F000
	097 Move X0, [X0+1320]
	098 Call 0x1C17D08
	099 Call 0x1C17F10
	100 Move X19, X0
	101 Move X0, 0x285000
	102 Move X0, [X0+3536]
	103 Call 0x1C17D08
	104 Move X1, X0
	105 Move X0, X19
	106 Move X2, X31
	107 Call ArgumentNullException..ctor, X0, X1
	108 Move X0, 0x2D4000
	109 Move X0, [X0+3544]
	110 Call 0x1C17D08
	111 Move X1, X0
	112 Move X0, X19
	113 Call 0x1C17DEC
	114 Call 0x1C17F20

Method: System.Void EndWrite(System.IAsyncResult asyncResult)

Disassembly:
	0x03E9A114 LDRB W8, [X22 + 0xEA3]
	0x03E9A118 LDR X21, [X21 + 0x758]
	0x03E9A11C LDR X20, [X20 + 0xE50]
	0x03E9A120 MOV W19, W0
	0x03E9A124 TBNZ X8, 0x0, 0x3E9A148
	0x03E9A128 ADRP X0, 0x259000
	0x03E9A12C LDR X0, [X0 + 0x758]
	0x03E9A130 BL 0x1C16CF4
	0x03E9A134 ADRP X0, 0x2D3000
	0x03E9A138 LDR X0, [X0 + 0xE50]
	0x03E9A13C BL 0x1C16CF4
	0x03E9A140 MOVZ W8, 0x1
	0x03E9A144 STRB W8, [X22 + 0xEA3]
	0x03E9A148 LDR X0, [X21]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0x25A000
	004 Move X0, [X0+2880]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X1, X31
	008 Move X19, X0
	009 Call NotSupportedException..ctor, X0
	010 Move X0, 0x2D4000
	011 Move X0, [X0+3552]
	012 Call 0x1C17D08
	013 Move X1, X0
	014 Move X0, X19
	015 Call 0x1C17DEC

Method: System.Void Flush()

Disassembly:
	0x03E9A14C ADD X1, X31, 0xC

ISIL:
	001 Return 

Method: System.Int32 Read(System.Byte[] buffer, System.Int32 offset, System.Int32 count)

Disassembly:
	0x03E9A150 STR W19, [X31 + 0xC]
	0x03E9A154 BL 0x1C16E04
	0x03E9A158 LDR X8, [X20]
	0x03E9A15C MOV X1, X0
	0x03E9A160 MOV X2, X31
	0x03E9A164 MOV X0, X8
	0x03E9A168 BL 0x321EFD0
	0x03E9A16C MOV X19, X0
	0x03E9A170 MOV X0, X31
	0x03E9A174 BL 0x3242EC8
	0x03E9A178 CBZ X0, 0x3E9A1A0
	0x03E9A17C LDR X8, [X0]
	0x03E9A180 MOV X1, X19
	0x03E9A184 LDR X9, [X8 + 0x268]
	0x03E9A188 LDR X2, [X8 + 0x270]
	0x03E9A18C BLR X9
	0x03E9A190 LDP X20, X19, [X31 + 0x20]
	0x03E9A194 LDP X22, X21, [X31 + 0x10]
	0x03E9A198 LDR X30, [X31], #0x30
	0x03E9A19C RET
	0x03E9A1A0 BL 0x1C16F20
	0x03E9A1A4 STR X30, [X31 - 0x40]!
	0x03E9A1A8 STP X24, X23, [X31 + 0x10]
	0x03E9A1AC STP X22, X21, [X31 + 0x20]
	0x03E9A1B0 STP X20, X19, [X31 + 0x30]
	0x03E9A1B4 ADRP X24, 0x54E000
	0x03E9A1B8 ADRP X23, 0x2D3000
	0x03E9A1BC LDRB W8, [X24 + 0xEA4]
	0x03E9A1C0 LDR X23, [X23 + 0x1F8]
	0x03E9A1C4 MOV W20, W3
	0x03E9A1C8 MOV W21, W2
	0x03E9A1CC MOV X22, X1
	0x03E9A1D0 MOV X19, X0
	0x03E9A1D4 TBNZ X8, 0x0, 0x3E9A1EC
	0x03E9A1D8 ADRP X0, 0x2D3000
	0x03E9A1DC LDR X0, [X0 + 0x1F8]
	0x03E9A1E0 BL 0x1C16CF4
	0x03E9A1E4 MOVZ W8, 0x1
	0x03E9A1E8 STRB W8, [X24 + 0xEA4]
	0x03E9A1EC LDR X0, [X23]
	0x03E9A1F0 LDR W8, [X0 + 0xE0]
	0x03E9A1F4 CBNZ W8, 0x3E9A1FC
	0x03E9A1F8 BL 0x1C16DFC
	0x03E9A1FC MOV W0, W20
	0x03E9A200 BL 0x3E9A0FC
	0x03E9A204 CBZ X0, 0x3E9A28C
	0x03E9A208 MOV X1, X0
	0x03E9A20C LDR X0, [X19 + 0x38]
	0x03E9A210 CBZ X0, 0x3E9A28C
	0x03E9A214 LDR X8, [X0]
	0x03E9A218 LDR W3, [X1 + 0x18]
	0x03E9A21C MOV W2, W31
	0x03E9A220 LDR X9, [X8 + 0x388]
	0x03E9A224 LDR X4, [X8 + 0x390]
	0x03E9A228 BLR X9
	0x03E9A22C LDR X0, [X19 + 0x38]
	0x03E9A230 CBZ X0, 0x3E9A28C
	0x03E9A234 LDR X8, [X0]
	0x03E9A238 MOV X1, X22
	0x03E9A23C MOV W2, W21
	0x03E9A240 MOV W3, W20
	0x03E9A244 LDR X9, [X8 + 0x388]
	0x03E9A248 LDR X4, [X8 + 0x390]
	0x03E9A24C BLR X9
	0x03E9A250 LDR X0, [X19 + 0x38]
	0x03E9A254 CBZ X0, 0x3E9A28C
	0x03E9A258 LDR X8, [X23]
	0x03E9A25C LDR X9, [X0]
	0x03E9A260 LDP X20, X19, [X31 + 0x30]
	0x03E9A264 LDP X22, X21, [X31 + 0x20]
	0x03E9A268 LDR X8, [X8 + 0xB8]
	0x03E9A26C LDR X5, [X9 + 0x388]
	0x03E9A270 LDR X4, [X9 + 0x390]
	0x03E9A274 LDP X24, X23, [X31 + 0x10]
	0x03E9A278 LDR X1, [X8]
	0x03E9A27C MOVZ W3, 0x2
	0x03E9A280 MOV W2, W31
	0x03E9A284 LDR X30, [X31], #0x40
	0x03E9A288 BR X5
	0x03E9A28C BL 0x1C16F20
	0x03E9A290 STP X30, X19, [X31 - 0x10]!
	0x03E9A294 BL 0x3E9A1A4
	0x03E9A298 LDP X30, X19, [X31], #0x10
	0x03E9A29C RET
	0x03E9A2A0 CMP W1, 0x1
	0x03E9A2A4 MOV X19, X0
	0x03E9A2A8 B.NE 0x3E9A304
	0x03E9A2AC MOV X0, X19
	0x03E9A2B0 BL 0x3EB1AD0
	0x03E9A2B4 MOV X19, X0
	0x03E9A2B8 ADRP X0, 0x25F000
	0x03E9A2BC LDR X0, [X0 + 0xCC0]
	0x03E9A2C0 BL 0x1C16D08
	0x03E9A2C4 LDR X8, [X19]
	0x03E9A2C8 LDR X1, [X8]
	0x03E9A2CC BL 0x1C17270
	0x03E9A2D0 TBZ X0, 0x0, 0x3E9A2DC
	0x03E9A2D4 LDP X30, X19, [X31], #0x10
	0x03E9A2D8 B 0x3EB1AE0
	0x03E9A2DC MOVZ W0, 0x8
	0x03E9A2E0 BL 0x3EB1AF0
	0x03E9A2E4 LDR X8, [X19]
	0x03E9A2E8 STR X8, [X0]
	0x03E9A2EC ADRP X1, 0x1A000
	0x03E9A2F0 ADD X1, X1, 0xE58
	0x03E9A2F4 MOV X2, X31
	0x03E9A2F8 BL 0x3EB1B00
	0x03E9A2FC MOV X19, X0
	0x03E9A300 BL 0x3EB1AE0
	0x03E9A304 MOV X0, X19
	0x03E9A308 BL 0x1D2C690
	0x03E9A30C BL 0x1990590
	0x03E9A310 STP X30, X19, [X31 - 0x10]!
	0x03E9A314 LDR X0, [X0 + 0x38]
	0x03E9A318 CBZ X0, 0x3E9A334
	0x03E9A31C LDR X8, [X0]
	0x03E9A320 LDR X9, [X8 + 0x388]
	0x03E9A324 LDR X4, [X8 + 0x390]
	0x03E9A328 BLR X9
	0x03E9A32C LDP X30, X19, [X31], #0x10
	0x03E9A330 RET
	0x03E9A334 BL 0x1C16F20
	0x03E9A338 CMP W1, 0x1
	0x03E9A33C MOV X19, X0
	0x03E9A340 B.NE 0x3E9A39C
	0x03E9A344 MOV X0, X19
	0x03E9A348 BL 0x3EB1AD0
	0x03E9A34C MOV X19, X0
	0x03E9A350 ADRP X0, 0x25F000
	0x03E9A354 LDR X0, [X0 + 0xCC0]
	0x03E9A358 BL 0x1C16D08
	0x03E9A35C LDR X8, [X19]
	0x03E9A360 LDR X1, [X8]
	0x03E9A364 BL 0x1C17270
	0x03E9A368 TBZ X0, 0x0, 0x3E9A374
	0x03E9A36C LDP X30, X19, [X31], #0x10
	0x03E9A370 B 0x3EB1AE0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move W8, [X0+52]
	007 Move X19, X0
	008 Compare W8, 0
	009 JumpIfNotEqual {60}
	010 Move X22, X1
	011 Compare X1, 0
	012 JumpIfEqual {79}
	013 Move W20, W2
	014 Move TEMP, X2
	015 And TEMP, TEMP, -2147483648
	016 Compare TEMP, -2147483648
	017 JumpIfEqual {97}
	018 Move W21, W3
	019 Move TEMP, X3
	020 And TEMP, TEMP, -2147483648
	021 Compare TEMP, -2147483648
	022 JumpIfEqual {108}
	023 Move W8, [X22+24]
	024 Add W9, W21, W20
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Compare W21, 0
	027 JumpIfEqual {53}
	028 Move X0, X19
	029 Move X1, X22
	030 Move W2, W20
	031 Move W3, W21
	032 Call RequestStream.fillFromInitialBuffer, X0, X1, X2, X3
	033 Add W31, W0, 1
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Move X0, [X19+64]
	036 Compare X0, 0
	037 JumpIfEqual {143}
	038 Move X8, [X0]
	039 Move X9, [X19+40]
	040 Move X1, X22
	041 Move W2, W20
	042 Move X10, [X8+856]
	043 Move X4, [X8+864]
	044 NotImplemented "Instruction CMP not yet implemented."
	045 NotImplemented "Instruction CCMP not yet implemented."
	046 NotImplemented "Instruction CSEL not yet implemented."
	047 NotImplemented "Instruction BLR not yet implemented."
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Move X8, [X19+40]
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Subtract X8, X8, W0
	052 Move [X19+40], X8
	053 Move W0, W31
	054 Move X20, [X31+32]
	055 Move X19, [X31+40]
	056 Move X22, [X31+16]
	057 Move X21, [X31+24]
	058 Move X30, [X31+48]
	059 Return X0
	060 Move X0, X19
	061 Move X1, X31
	062 Call "il2cpp_vm_object_is_inst", X0
	063 Move X19, X0
	064 Call 0x19913C0
	065 Move X8, [X19]
	066 Move X0, X19
	067 Move X9, [X8+360]
	068 Move X1, [X8+368]
	069 NotImplemented "Instruction BLR not yet implemented."
	070 Move X19, X0
	071 Move X0, 0x283000
	072 Move X0, [X0+1208]
	073 Call 0x1C17D08
	074 Call 0x1C17F10
	075 Move X1, X19
	076 Move X2, X31
	077 Move X20, X0
	078 Call ObjectDisposedException..ctor, X0, X1
	079 Move X0, 0x25F000
	080 Move X0, [X0+1320]
	081 Call 0x1C17D08
	082 Call 0x1C17F10
	083 Move X19, X0
	084 Move X0, 0x285000
	085 Move X0, [X0+3912]
	086 Call 0x1C17D08
	087 Move X1, X0
	088 Move X0, X19
	089 Move X2, X31
	090 Call ArgumentNullException..ctor, X0, X1
	091 Move X0, 0x2D4000
	092 Move X0, [X0+3560]
	093 Call 0x1C17D08
	094 Move X1, X0
	095 Move X0, X19
	096 Call 0x1C17DEC
	097 Move X0, 0x2D4000
	098 Move X0, [X0+3520]
	099 Call 0x1C17D08
	100 Move X19, X0
	101 Move X0, 0x262000
	102 Move X0, [X0+1888]
	103 Call 0x1C17D08
	104 Call 0x1C17F10
	105 Move X20, X0
	106 Move X0, 0x289000
	107 Move X0, [X0+3472]
	108 Move X0, 0x2D4000
	109 Move X0, [X0+3520]
	110 Call 0x1C17D08
	111 Move X19, X0
	112 Move X0, 0x262000
	113 Move X0, [X0+1888]
	114 Call 0x1C17D08
	115 Call 0x1C17F10
	116 Move X20, X0
	117 Move X0, 0x282000
	118 Move X0, [X0+1608]
	119 Call 0x1C17D08
	120 Move X1, X0
	121 Move X0, X20
	122 Move X2, X19
	123 Move X3, X31
	124 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	125 Move X0, 0x2D4000
	126 Move X0, [X0+3528]
	127 Call 0x1C17D08
	128 Move X19, X0
	129 Move X0, 0x262000
	130 Move X0, [X0+1400]
	131 Call 0x1C17D08
	132 Call 0x1C17F10
	133 Move X1, X19
	134 Move X2, X31
	135 Move X20, X0
	136 Call ArgumentException..ctor, X0, X1
	137 Move X0, 0x2D4000
	138 Move X0, [X0+3560]
	139 Call 0x1C17D08
	140 Move X1, X0
	141 Move X0, X20
	142 Call 0x1C17DEC
	143 Call 0x1C17F20

Method: System.Int64 Seek(System.Int64 offset, System.IO.SeekOrigin origin)

Disassembly:
	0x03E9A374 MOVZ W0, 0x8
	0x03E9A378 BL 0x3EB1AF0
	0x03E9A37C LDR X8, [X19]
	0x03E9A380 STR X8, [X0]
	0x03E9A384 ADRP X1, 0x1A000
	0x03E9A388 ADD X1, X1, 0xE58
	0x03E9A38C MOV X2, X31
	0x03E9A390 BL 0x3EB1B00
	0x03E9A394 MOV X19, X0
	0x03E9A398 BL 0x3EB1AE0
	0x03E9A39C MOV X0, X19
	0x03E9A3A0 BL 0x1D2C690
	0x03E9A3A4 BL 0x1990590
	0x03E9A3A8 STP X30, X21, [X31 - 0x20]!

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0x25A000
	004 Move X0, [X0+2880]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X1, X31
	008 Move X19, X0
	009 Call NotSupportedException..ctor, X0
	010 Move X0, 0x2D4000
	011 Move X0, [X0+3568]
	012 Call 0x1C17D08
	013 Move X1, X0
	014 Move X0, X19
	015 Call 0x1C17DEC

Method: System.Void SetLength(System.Int64 value)

Disassembly:
	0x03E9A3AC STP X20, X19, [X31 + 0x10]
	0x03E9A3B0 ADRP X21, 0x54E000
	0x03E9A3B4 LDRB W8, [X21 + 0xEA5]
	0x03E9A3B8 MOV W20, W1
	0x03E9A3BC MOV X19, X0
	0x03E9A3C0 TBNZ X8, 0x0, 0x3E9A3D8
	0x03E9A3C4 ADRP X0, 0x2D3000
	0x03E9A3C8 LDR X0, [X0 + 0x1F8]
	0x03E9A3CC BL 0x1C16CF4
	0x03E9A3D0 MOVZ W8, 0x1
	0x03E9A3D4 STRB W8, [X21 + 0xEA5]
	0x03E9A3D8 LDRB W8, [X19 + 0x30]
	0x03E9A3DC CBNZ W8, 0x3E9A4A0
	0x03E9A3E0 MOVZ W8, 0x1

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0x25A000
	004 Move X0, [X0+2880]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X1, X31
	008 Move X19, X0
	009 Call NotSupportedException..ctor, X0
	010 Move X0, 0x2D4000
	011 Move X0, [X0+3576]
	012 Call 0x1C17D08
	013 Move X1, X0
	014 Move X0, X19
	015 Call 0x1C17DEC

Method: System.Void Write(System.Byte[] buffer, System.Int32 offset, System.Int32 count)

Disassembly:
	0x03E9A3E4 STRB W8, [X19 + 0x30]
	0x03E9A3E8 TBNZ X20, 0x0, 0x3E9A424
	0x03E9A3EC MOVZ W1, 0x1
	0x03E9A3F0 MOV X0, X19
	0x03E9A3F4 BL 0x3E99730
	0x03E9A3F8 LDR X8, [X19 + 0x40]
	0x03E9A3FC CBZ X8, 0x3E9A4AC
	0x03E9A400 TBZ X0, 0x0, 0x3E9A41C
	0x03E9A404 LDRB W9, [X8 + 0x40]
	0x03E9A408 CBNZ W9, 0x3E9A49C
	0x03E9A40C MOV X0, X8
	0x03E9A410 MOV W1, W31
	0x03E9A414 BL 0x3E90C14
	0x03E9A418 B 0x3E9A49C

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0x25A000
	004 Move X0, [X0+2880]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X1, X31
	008 Move X19, X0
	009 Call NotSupportedException..ctor, X0
	010 Move X0, 0x2D4000
	011 Move X0, [X0+3584]
	012 Call 0x1C17D08
	013 Move X1, X0
	014 Move X0, X19
	015 Call 0x1C17DEC

