Type: WebSocketSharp.Net.AuthenticationBase

Method: System.Void .ctor(WebSocketSharp.Net.AuthenticationSchemes scheme, System.Collections.Specialized.NameValueCollection parameters)

Disassembly:
	0x03EA0A30 STRB W8, [X24 + 0xED2]
	0x03EA0A34 LDR X2, [X22 + 0x10]
	0x03EA0A38 CBNZ X2, 0x3EA0A50
	0x03EA0A3C ADRP X8, 0x255000
	0x03EA0A40 LDR X8, [X8 + 0x278]
	0x03EA0A44 LDR X8, [X8]
	0x03EA0A48 LDR X8, [X8 + 0xB8]
	0x03EA0A4C LDR X2, [X8]
	0x03EA0A50 CBZ X23, 0x3EA0AA4
	0x03EA0A54 ADRP X8, 0x283000
	0x03EA0A58 LDR X8, [X8 + 0xE18]
	0x03EA0A5C MOV X0, X23

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move W20, W1
	006 Move X1, X31
	007 Move X19, X2
	008 Move X21, X0
	009 Call Object..ctor, X0
	010 Move [X21+16], W20
	011 Move [X21+24], X19
	012 Move X20, [X31+16]
	013 Move X19, [X31+24]
	014 Move X30, [X31+32]
	015 Move X21, [X31+40]
	016 Return 

Method: System.String get_Algorithm()

Disassembly:
	0x03EA2A90 CMP W1, 0x1
	0x03EA2A94 MOV X22, X0
	0x03EA2A98 B.NE 0x3EA2AC4
	0x03EA2A9C MOV X0, X22
	0x03EA2AA0 BL 0x3EB1AD0
	0x03EA2AA4 LDR X21, [X0]
	0x03EA2AA8 BL 0x3EB1AE0
	0x03EA2AAC MOV X0, X20
	0x03EA2AB0 MOV X1, X31
	0x03EA2AB4 BL 0x33E14E4
	0x03EA2AB8 CBZ X21, 0x3EA2A30
	0x03EA2ABC MOV X0, X21
	0x03EA2AC0 BL 0x1C16F18
	0x03EA2AC4 MOV X21, X31
	0x03EA2AC8 B 0x3EA2AD0
	0x03EA2ACC MOV X22, X0
	0x03EA2AD0 MOV X0, X20
	0x03EA2AD4 MOV X1, X31
	0x03EA2AD8 BL 0x33E14E4
	0x03EA2ADC CBNZ X21, 0x3EA2AE8
	0x03EA2AE0 MOV X0, X22

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x547000
	005 Move W8, [X20+3836]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x29B000
	012 Move X0, [X0+2776]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+3836], W8
	016 Move X0, [X19+24]
	017 Compare X0, 0
	018 JumpIfEqual {28}
	019 Move X8, 0x29B000
	020 Move X8, [X8+2776]
	021 Move X20, [X31+16]
	022 Move X19, [X31+24]
	023 Move X2, X31
	024 Move X1, [X8]
	025 Move X30, [X31+32]
	026 Call NameValueCollection.get_Item, X0, X1
	027 Return X0
	028 Call 0x1C17F20

Method: System.String get_Nonce()

Disassembly:
	0x03EA2AE4 BL 0x1D2C690
	0x03EA2AE8 MOV X0, X21
	0x03EA2AEC BL 0x1C16F18
	0x03EA2AF0 BL 0x1990590
	0x03EA2AF4 STR X1, [X0 + 0x30]
	0x03EA2AF8 B 0x3EA29C0
	0x03EA2AFC AND W8, W2, 0x1
	0x03EA2B00 STR X1, [X0 + 0x20]
	0x03EA2B04 STRB W8, [X0 + 0x19]
	0x03EA2B08 B 0x3EA29C0
	0x03EA2B0C STP X30, X19, [X31 - 0x10]!
	0x03EA2B10 LDR X8, [X0 + 0x10]
	0x03EA2B14 CBZ X8, 0x3EA2B34
	0x03EA2B18 MOV X1, X0
	0x03EA2B1C LDR X0, [X8 + 0x40]
	0x03EA2B20 LDR X9, [X8 + 0x18]
	0x03EA2B24 LDR X2, [X8 + 0x28]
	0x03EA2B28 BLR X9
	0x03EA2B2C LDP X30, X19, [X31], #0x10
	0x03EA2B30 RET
	0x03EA2B34 BL 0x1C16F20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x547000
	005 Move W8, [X20+3837]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x253000
	012 Move X0, [X0+2160]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+3837], W8
	016 Move X0, [X19+24]
	017 Compare X0, 0
	018 JumpIfEqual {28}
	019 Move X8, 0x253000
	020 Move X8, [X8+2160]
	021 Move X20, [X31+16]
	022 Move X19, [X31+24]
	023 Move X2, X31
	024 Move X1, [X8]
	025 Move X30, [X31+32]
	026 Call NameValueCollection.get_Item, X0, X1
	027 Return X0
	028 Call 0x1C17F20

Method: System.String get_Opaque()

Disassembly:
	0x03EA2B38 CMP W1, 0x1
	0x03EA2B3C MOV X19, X0
	0x03EA2B40 B.NE 0x3EA2B9C
	0x03EA2B44 MOV X0, X19
	0x03EA2B48 BL 0x3EB1AD0
	0x03EA2B4C MOV X19, X0
	0x03EA2B50 ADRP X0, 0x257000
	0x03EA2B54 LDR X0, [X0 + 0xCC0]
	0x03EA2B58 BL 0x1C16D08
	0x03EA2B5C LDR X8, [X19]
	0x03EA2B60 LDR X1, [X8]
	0x03EA2B64 BL 0x1C17270
	0x03EA2B68 TBZ X0, 0x0, 0x3EA2B74
	0x03EA2B6C LDP X30, X19, [X31], #0x10
	0x03EA2B70 B 0x3EB1AE0
	0x03EA2B74 MOVZ W0, 0x8
	0x03EA2B78 BL 0x3EB1AF0
	0x03EA2B7C LDR X8, [X19]
	0x03EA2B80 STR X8, [X0]
	0x03EA2B84 ADRP X1, 0x12000
	0x03EA2B88 ADD X1, X1, 0xE58

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x547000
	005 Move W8, [X20+3838]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x29D000
	012 Move X0, [X0+1568]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+3838], W8
	016 Move X0, [X19+24]
	017 Compare X0, 0
	018 JumpIfEqual {28}
	019 Move X8, 0x29D000
	020 Move X8, [X8+1568]
	021 Move X20, [X31+16]
	022 Move X19, [X31+24]
	023 Move X2, X31
	024 Move X1, [X8]
	025 Move X30, [X31+32]
	026 Call NameValueCollection.get_Item, X0, X1
	027 Return X0
	028 Call 0x1C17F20

Method: System.String get_Qop()

Disassembly:
	0x03EA2B8C MOV X2, X31
	0x03EA2B90 BL 0x3EB1B00
	0x03EA2B94 MOV X19, X0
	0x03EA2B98 BL 0x3EB1AE0
	0x03EA2B9C MOV X0, X19
	0x03EA2BA0 BL 0x1D2C690
	0x03EA2BA4 BL 0x1990590
	0x03EA2BA8 STP X30, X23, [X31 - 0x30]!
	0x03EA2BAC STP X22, X21, [X31 + 0x10]
	0x03EA2BB0 STP X20, X19, [X31 + 0x20]
	0x03EA2BB4 ADRP X23, 0x546000
	0x03EA2BB8 ADRP X22, 0x2CA000
	0x03EA2BBC LDRB W8, [X23 + 0xF0D]
	0x03EA2BC0 LDR X22, [X22 + 0x3C8]
	0x03EA2BC4 MOV X20, X2
	0x03EA2BC8 MOV X21, X1
	0x03EA2BCC MOV X19, X0
	0x03EA2BD0 TBNZ X8, 0x0, 0x3EA2BE8
	0x03EA2BD4 ADRP X0, 0x2CA000
	0x03EA2BD8 LDR X0, [X0 + 0x3C8]
	0x03EA2BDC BL 0x1C16CF4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x547000
	005 Move W8, [X20+3839]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x29D000
	012 Move X0, [X0+1560]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+3839], W8
	016 Move X0, [X19+24]
	017 Compare X0, 0
	018 JumpIfEqual {28}
	019 Move X8, 0x29D000
	020 Move X8, [X8+1560]
	021 Move X20, [X31+16]
	022 Move X19, [X31+24]
	023 Move X2, X31
	024 Move X1, [X8]
	025 Move X30, [X31+32]
	026 Call NameValueCollection.get_Item, X0, X1
	027 Return X0
	028 Call 0x1C17F20

Method: System.String get_Realm()

Disassembly:
	0x03EA2BE0 MOVZ W8, 0x1
	0x03EA2BE4 STRB W8, [X23 + 0xF0D]
	0x03EA2BE8 MOV X0, X19
	0x03EA2BEC MOV X1, X31
	0x03EA2BF0 BL 0x33BDD8C
	0x03EA2BF4 STR X21, [X19 + 0x10]
	0x03EA2BF8 LDR X0, [X22]
	0x03EA2BFC BL 0x1C16F10
	0x03EA2C00 MOV X1, X19
	0x03EA2C04 MOV X2, X20
	0x03EA2C08 MOV X3, X31
	0x03EA2C0C MOV X21, X0
	0x03EA2C10 BL 0x3E6DBB4
	0x03EA2C14 STR X21, [X19 + 0x18]
	0x03EA2C18 LDP X20, X19, [X31 + 0x20]
	0x03EA2C1C LDP X22, X21, [X31 + 0x10]
	0x03EA2C20 LDP X30, X23, [X31], #0x30
	0x03EA2C24 RET
	0x03EA2C28 MOV X1, X31
	0x03EA2C2C B 0x33BDD8C
	0x03EA2C30 STR X30, [X31 - 0x10]!

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x547000
	005 Move W8, [X20+3840]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x29D000
	012 Move X0, [X0+1576]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+3840], W8
	016 Move X0, [X19+24]
	017 Compare X0, 0
	018 JumpIfEqual {28}
	019 Move X8, 0x29D000
	020 Move X8, [X8+1576]
	021 Move X20, [X31+16]
	022 Move X19, [X31+24]
	023 Move X2, X31
	024 Move X1, [X8]
	025 Move X30, [X31+32]
	026 Call NameValueCollection.get_Item, X0, X1
	027 Return X0
	028 Call 0x1C17F20

Method: WebSocketSharp.Net.AuthenticationSchemes get_Scheme()

Disassembly:
	0x03EA1AD0 MOV X2, X31
	0x03EA1AD4 LDR X1, [X8]

ISIL:
	001 Move W0, [X0+16]
	002 Return X0

Method: System.String CreateNonceValue()

Disassembly:
	0x03EA0BD0 BL 0x366456C
	0x03EA0BD4 CBZ X0, 0x3EA0D88
	0x03EA0BD8 ADRP X8, 0x25C000
	0x03EA0BDC LDR X8, [X8 + 0x8D8]
	0x03EA0BE0 MOV X20, X0
	0x03EA0BE4 MOVZ W1, 0x1
	0x03EA0BE8 LDR X0, [X8]
	0x03EA0BEC BL 0x1C16D6C
	0x03EA0BF0 CBZ X0, 0x3EA0DF4
	0x03EA0BF4 LDR W8, [X0 + 0x18]
	0x03EA0BF8 MOV X1, X0
	0x03EA0BFC CBZ W8, 0x3EA0DF8
	0x03EA0C00 ADRP X24, 0x2CE000
	0x03EA0C04 LDR X24, [X24 + 0x178]
	0x03EA0C08 MOVZ W8, 0x2C
	0x03EA0C0C MOV X0, X20
	0x03EA0C10 MOV X2, X31
	0x03EA0C14 STRH W8, [X1 + 0x20]
	0x03EA0C18 BL 0x3229E68
	0x03EA0C1C LDR X8, [X24]
	0x03EA0C20 MOV X20, X0
	0x03EA0C24 LDR W9, [X8 + 0xE0]
	0x03EA0C28 CBNZ W9, 0x3EA0C38
	0x03EA0C2C MOV X0, X8
	0x03EA0C30 BL 0x1C16DFC
	0x03EA0C34 LDR X8, [X24]
	0x03EA0C38 LDR X9, [X8 + 0xB8]
	0x03EA0C3C ADRP X25, 0x25A000
	0x03EA0C40 LDR X21, [X9 + 0x8]
	0x03EA0C44 LDR X25, [X25 + 0x248]
	0x03EA0C48 CBNZ X21, 0x3EA0CA0
	0x03EA0C4C LDR W9, [X8 + 0xE0]
	0x03EA0C50 CBNZ W9, 0x3EA0C60
	0x03EA0C54 MOV X0, X8
	0x03EA0C58 BL 0x1C16DFC
	0x03EA0C5C LDR X8, [X24]
	0x03EA0C60 ADRP X9, 0x254000
	0x03EA0C64 LDR X8, [X8 + 0xB8]
	0x03EA0C68 LDR X9, [X9 + 0xBF8]
	0x03EA0C6C LDR X22, [X8]
	0x03EA0C70 LDR X0, [X9]
	0x03EA0C74 BL 0x1C16F10
	0x03EA0C78 ADRP X8, 0x2CE000
	0x03EA0C7C LDR X8, [X8 + 0x170]
	0x03EA0C80 MOV X1, X22
	0x03EA0C84 MOV X3, X31
	0x03EA0C88 MOV X21, X0
	0x03EA0C8C LDR X2, [X8]
	0x03EA0C90 BL 0x2D2F428
	0x03EA0C94 LDR X8, [X24]
	0x03EA0C98 LDR X8, [X8 + 0xB8]
	0x03EA0C9C STR X21, [X8 + 0x8]
	0x03EA0CA0 LDR X0, [X25]
	0x03EA0CA4 ADRP X22, 0x2CC000
	0x03EA0CA8 LDR W8, [X0 + 0xE0]
	0x03EA0CAC LDR X22, [X22 + 0x420]
	0x03EA0CB0 CBNZ W8, 0x3EA0CB8
	0x03EA0CB4 BL 0x1C16DFC
	0x03EA0CB8 LDR X2, [X22]
	0x03EA0CBC MOV X0, X20
	0x03EA0CC0 MOV X1, X21
	0x03EA0CC4 BL 0x21E1B10
	0x03EA0CC8 LDR X8, [X19 + 0x18]
	0x03EA0CCC CBZ X8, 0x3EA0DF4
	0x03EA0CD0 LDR X1, [X23]
	0x03EA0CD4 TBZ X0, 0x0, 0x3EA0D78
	0x03EA0CD8 ADRP X9, 0x253000
	0x03EA0CDC LDR X9, [X9 + 0xEE8]
	0x03EA0CE0 MOV X0, X8
	0x03EA0CE4 MOV X3, X31
	0x03EA0CE8 LDR X2, [X9]
	0x03EA0CEC BL 0x366457C
	0x03EA0CF0 LDR X20, [X19 + 0x18]
	0x03EA0CF4 BL 0x3E9FBD0
	0x03EA0CF8 CBZ X20, 0x3EA0DF4
	0x03EA0CFC ADRP X8, 0x2CE000
	0x03EA0D00 LDR X8, [X8 + 0xC8]
	0x03EA0D04 MOV X2, X0
	0x03EA0D08 MOV X0, X20
	0x03EA0D0C MOV X3, X31
	0x03EA0D10 LDR X1, [X8]
	0x03EA0D14 BL 0x366457C
	0x03EA0D18 LDR W8, [X19 + 0x20]
	0x03EA0D1C ADRP X9, 0x25B000
	0x03EA0D20 LDR X20, [X19 + 0x18]
	0x03EA0D24 ADD X1, X31, 0xC
	0x03EA0D28 ADD W8, W8, 0x1
	0x03EA0D2C STR W8, [X19 + 0x20]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x549000
	009 Move X20, 0x254000
	010 Move X19, 0x25B000
	011 Move W8, [X21+3841]
	012 Move X20, [X20+1560]
	013 Move X19, [X19+744]
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {32}
	018 Move X0, 0x254000
	019 Move X0, [X0+1560]
	020 Call 0x1C17CF4
	021 Move X0, 0x25B000
	022 Move X0, [X0+744]
	023 Call 0x1C17CF4
	024 Move X0, 0x254000
	025 Move X0, [X0+2288]
	026 Call 0x1C17CF4
	027 Move X0, 0x287000
	028 Move X0, [X0+848]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X21+3841], W8
	032 Move X0, [X20]
	033 Move W1, 16
	034 Move [X31+12], W31
	035 Call 0x1C17D6C
	036 Move X8, [X19]
	037 Move X19, X0
	038 Move X0, X8
	039 Call 0x1C17F10
	040 Move X1, X31
	041 Move X20, X0
	042 Call Random..ctor, X0
	043 Compare X20, 0
	044 JumpIfEqual {99}
	045 Move X8, [X20]
	046 Move X21, 0x254000
	047 Move X0, X20
	048 Move X1, X19
	049 Move X9, [X8+456]
	050 Move X2, [X8+464]
	051 Move X21, [X21+2288]
	052 NotImplemented "Instruction BLR not yet implemented."
	053 Move X0, [X21]
	054 Call 0x1C17F10
	055 Move W1, 32
	056 Move X2, X31
	057 Move X20, X0
	058 Call StringBuilder..ctor, X0, X1
	059 Compare X19, 0
	060 JumpIfEqual {99}
	061 Move X8, [X19+24]
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Move X22, 0x287000
	064 Move X22, [X22+848]
	065 Move X21, X31
	066 And X8, X8, 0
	067 Add X23, X19, 32
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Move W8, [X23]
	070 Move X1, [X22]
	071 Add X0, X31, 12
	072 Move X2, X31
	073 Move [X31+12], W8
	074 Call Byte.ToString, X0, X1
	075 Compare X20, 0
	076 JumpIfEqual {99}
	077 Move X1, X0
	078 Move X0, X20
	079 Move X2, X31
	080 Call StringBuilder.Append, X0, X1
	081 Move W8, [X19+24]
	082 Add X21, X21, 1
	083 NotImplemented "Instruction CMP not yet implemented."
	084 Compare X20, 0
	085 JumpIfEqual {99}
	086 Move X8, [X20]
	087 Move X0, X20
	088 Move X9, [X8+360]
	089 Move X1, [X8+368]
	090 NotImplemented "Instruction BLR not yet implemented."
	091 Move X20, [X31+48]
	092 Move X19, [X31+56]
	093 Move X22, [X31+32]
	094 Move X21, [X31+40]
	095 Move X30, [X31+16]
	096 Move X23, [X31+24]
	097 Add X31, X31, 64
	098 Return X0
	099 Call 0x1C17F20
	100 Call 0x1C17F28

Method: System.Collections.Specialized.NameValueCollection ParseParameters(System.String value)

Disassembly:
	0x03EA1024 MOV X19, X1
	0x03EA1028 MOV X21, X0
	0x03EA102C TBNZ X8, 0x0, 0x3EA1044
	0x03EA1030 ADRP X0, 0x29D000
	0x03EA1034 LDR X0, [X0 + 0x638]
	0x03EA1038 BL 0x1C16CF4
	0x03EA103C MOVZ W8, 0x1
	0x03EA1040 STRB W8, [X22 + 0xEEE]
	0x03EA1044 LDR X0, [X23]
	0x03EA1048 MOV X1, X21
	0x03EA104C MOV X2, X20
	0x03EA1050 MOV X3, X19
	0x03EA1054 LDP X20, X19, [X31 + 0x20]
	0x03EA1058 LDP X22, X21, [X31 + 0x10]
	0x03EA105C MOV X4, X31
	0x03EA1060 LDP X30, X23, [X31], #0x30
	0x03EA1064 B 0x3227C18
	0x03EA1068 STP X30, X25, [X31 - 0x40]!
	0x03EA106C STP X24, X23, [X31 + 0x10]
	0x03EA1070 STP X22, X21, [X31 + 0x20]
	0x03EA1074 STP X20, X19, [X31 + 0x30]
	0x03EA1078 ADRP X25, 0x547000
	0x03EA107C ADRP X24, 0x29D000
	0x03EA1080 LDRB W8, [X25 + 0xEEF]
	0x03EA1084 LDR X24, [X24 + 0x638]
	0x03EA1088 MOV X19, X4
	0x03EA108C MOV X20, X3
	0x03EA1090 MOV X21, X2
	0x03EA1094 MOV X22, X1
	0x03EA1098 MOV X23, X0
	0x03EA109C TBNZ X8, 0x0, 0x3EA10B4
	0x03EA10A0 ADRP X0, 0x29D000
	0x03EA10A4 LDR X0, [X0 + 0x638]
	0x03EA10A8 BL 0x1C16CF4
	0x03EA10AC MOVZ W8, 0x1
	0x03EA10B0 STRB W8, [X25 + 0xEEF]
	0x03EA10B4 MOV X0, X23
	0x03EA10B8 MOV X1, X22
	0x03EA10BC MOV X2, X21
	0x03EA10C0 BL 0x3EA1004
	0x03EA10C4 BL 0x3EA10F4
	0x03EA10C8 LDR X8, [X24]
	0x03EA10CC MOV X2, X20
	0x03EA10D0 MOV X3, X19
	0x03EA10D4 LDP X20, X19, [X31 + 0x30]
	0x03EA10D8 LDP X22, X21, [X31 + 0x20]
	0x03EA10DC LDP X24, X23, [X31 + 0x10]
	0x03EA10E0 MOV X1, X0
	0x03EA10E4 MOV X0, X8
	0x03EA10E8 MOV X4, X31
	0x03EA10EC LDP X30, X25, [X31], #0x40
	0x03EA10F0 B 0x3227C18
	0x03EA10F4 SUB X31, X31, 0x40
	0x03EA10F8 STP X30, X23, [X31 + 0x10]
	0x03EA10FC STP X22, X21, [X31 + 0x20]
	0x03EA1100 STP X20, X19, [X31 + 0x30]
	0x03EA1104 ADRP X20, 0x547000
	0x03EA1108 LDRB W8, [X20 + 0xEF2]
	0x03EA110C MOV X19, X0
	0x03EA1110 TBNZ X8, 0x0, 0x3EA1134
	0x03EA1114 ADRP X0, 0x252000
	0x03EA1118 LDR X0, [X0 + 0x8F0]
	0x03EA111C BL 0x1C16CF4
	0x03EA1120 ADRP X0, 0x285000
	0x03EA1124 LDR X0, [X0 + 0x350]
	0x03EA1128 BL 0x1C16CF4
	0x03EA112C MOVZ W8, 0x1
	0x03EA1130 STRB W8, [X20 + 0xEF2]
	0x03EA1134 MOV X0, X31
	0x03EA1138 STRB W31, [X31 + 0xC]
	0x03EA113C BL 0x3241948
	0x03EA1140 CBZ X0, 0x3EA122C
	0x03EA1144 LDR X8, [X0]
	0x03EA1148 MOV X1, X19
	0x03EA114C LDR X9, [X8 + 0x268]
	0x03EA1150 LDR X2, [X8 + 0x270]
	0x03EA1154 BLR X9
	0x03EA1158 MOV X19, X0
	0x03EA115C MOV X0, X31
	0x03EA1160 BL 0x32560FC
	0x03EA1164 CBZ X0, 0x3EA122C
	0x03EA1168 ADRP X20, 0x252000
	0x03EA116C LDR X20, [X20 + 0x8F0]
	0x03EA1170 MOV X1, X19
	0x03EA1174 MOV X2, X31
	0x03EA1178 BL 0x32513F4
	0x03EA117C LDR X8, [X20]
	0x03EA1180 MOV X20, X0
	0x03EA1184 MOV X0, X8
	0x03EA1188 BL 0x1C16F10
	0x03EA118C MOVZ W1, 0x40
	0x03EA1190 MOV X2, X31
	0x03EA1194 MOV X19, X0
	0x03EA1198 BL 0x3231B28
	0x03EA119C CBZ X20, 0x3EA122C
	0x03EA11A0 LDR X8, [X20 + 0x18]
	0x03EA11A4 CMP W8, 0x1
	0x03EA11A8 B.LT 0x3EA1204
	0x03EA11AC ADRP X22, 0x285000
	0x03EA11B0 LDR X22, [X22 + 0x350]
	0x03EA11B4 MOV X21, X31
	0x03EA11B8 AND X8, X8, 0x0
	0x03EA11BC ADD X23, X20, 0x20
	0x03EA11C0 CMP X21, W8, UXTW
	0x03EA11C4 B.CS 0x3EA1230
	0x03EA11C8 LDRB W8, [X23, X21, LSL]
	0x03EA11CC LDR X1, [X22]
	0x03EA11D0 ADD X0, X31, 0xC
	0x03EA11D4 MOV X2, X31
	0x03EA11D8 STRB W8, [X31 + 0xC]
	0x03EA11DC BL 0x3319C4C
	0x03EA11E0 CBZ X19, 0x3EA122C
	0x03EA11E4 MOV X1, X0
	0x03EA11E8 MOV X0, X19
	0x03EA11EC MOV X2, X31
	0x03EA11F0 BL 0x32333E0
	0x03EA11F4 LDR W8, [X20 + 0x18]
	0x03EA11F8 ADD X21, X21, 0x1
	0x03EA11FC CMP X21, W8, SXTW
	0x03EA1200 B.LT 0x3EA11C0
	0x03EA1204 CBZ X19, 0x3EA122C
	0x03EA1208 LDR X8, [X19]
	0x03EA120C MOV X0, X19
	0x03EA1210 LDP X9, X1, [X8 + 0x168]
	0x03EA1214 BLR X9
	0x03EA1218 LDP X20, X19, [X31 + 0x30]
	0x03EA121C LDP X22, X21, [X31 + 0x20]
	0x03EA1220 LDP X30, X23, [X31 + 0x10]
	0x03EA1224 ADD X31, X31, 0x40
	0x03EA1228 RET
	0x03EA122C BL 0x1C16F20
	0x03EA1230 BL 0x1C16F28
	0x03EA1234 STR X30, [X31 - 0x30]!
	0x03EA1238 STP X22, X21, [X31 + 0x10]
	0x03EA123C STP X20, X19, [X31 + 0x20]
	0x03EA1240 ADRP X21, 0x547000
	0x03EA1244 ADRP X22, 0x25A000
	0x03EA1248 LDRB W8, [X21 + 0xEF0]
	0x03EA124C LDR X22, [X22 + 0xFF0]
	0x03EA1250 MOV X19, X1
	0x03EA1254 MOV X20, X0
	0x03EA1258 TBNZ X8, 0x0, 0x3EA1270
	0x03EA125C ADRP X0, 0x25A000
	0x03EA1260 LDR X0, [X0 + 0xFF0]
	0x03EA1264 BL 0x1C16CF4
	0x03EA1268 MOVZ W8, 0x1
	0x03EA126C STRB W8, [X21 + 0xEF0]
	0x03EA1270 LDR X0, [X22]
	0x03EA1274 MOV X1, X20
	0x03EA1278 MOV X2, X19
	0x03EA127C LDP X20, X19, [X31 + 0x20]
	0x03EA1280 LDP X22, X21, [X31 + 0x10]
	0x03EA1284 MOV X3, X31
	0x03EA1288 LDR X30, [X31], #0x30
	0x03EA128C B 0x3227BD4
	0x03EA1290 STP X30, X23, [X31 - 0x30]!
	0x03EA1294 STP X22, X21, [X31 + 0x10]
	0x03EA1298 STP X20, X19, [X31 + 0x20]
	0x03EA129C ADRP X23, 0x547000
	0x03EA12A0 ADRP X22, 0x29D000
	0x03EA12A4 LDRB W8, [X23 + 0xEF1]
	0x03EA12A8 LDR X22, [X22 + 0x638]
	0x03EA12AC MOV X21, X2
	0x03EA12B0 MOV X19, X1
	0x03EA12B4 MOV X20, X0
	0x03EA12B8 TBNZ X8, 0x0, 0x3EA12D0
	0x03EA12BC ADRP X0, 0x29D000
	0x03EA12C0 LDR X0, [X0 + 0x638]
	0x03EA12C4 BL 0x1C16CF4
	0x03EA12C8 MOVZ W8, 0x1
	0x03EA12CC STRB W8, [X23 + 0xEF1]
	0x03EA12D0 MOV X0, X21
	0x03EA12D4 BL 0x3EA10F4
	0x03EA12D8 LDR X8, [X22]
	0x03EA12DC MOV X1, X20
	0x03EA12E0 MOV X2, X19
	0x03EA12E4 LDP X20, X19, [X31 + 0x20]
	0x03EA12E8 LDP X22, X21, [X31 + 0x10]
	0x03EA12EC MOV X3, X0
	0x03EA12F0 MOV X0, X8
	0x03EA12F4 MOV X4, X31
	0x03EA12F8 LDP X30, X23, [X31], #0x30
	0x03EA12FC B 0x3227C18
	0x03EA1300 STR X30, [X31 - 0x30]!
	0x03EA1304 STP X22, X21, [X31 + 0x10]
	0x03EA1308 STP X20, X19, [X31 + 0x20]
	0x03EA130C ADRP X21, 0x547000
	0x03EA1310 ADRP X20, 0x25B000
	0x03EA1314 LDRB W8, [X21 + 0xEF6]
	0x03EA1318 LDR X20, [X20 + 0x9E8]
	0x03EA131C MOV X19, X0
	0x03EA1320 TBNZ X8, 0x0, 0x3EA1368
	0x03EA1324 ADRP X0, 0x25B000
	0x03EA1328 LDR X0, [X0 + 0x9E8]
	0x03EA132C BL 0x1C16CF4
	0x03EA1330 ADRP X0, 0x29C000
	0x03EA1334 LDR X0, [X0 + 0xF28]
	0x03EA1338 BL 0x1C16CF4
	0x03EA133C ADRP X0, 0x254000
	0x03EA1340 LDR X0, [X0 + 0x278]
	0x03EA1344 BL 0x1C16CF4
	0x03EA1348 ADRP X0, 0x2CB000
	0x03EA134C LDR X0, [X0 + 0x9B8]
	0x03EA1350 BL 0x1C16CF4
	0x03EA1354 ADRP X0, 0x27C000
	0x03EA1358 LDR X0, [X0 + 0xCB8]
	0x03EA135C BL 0x1C16CF4
	0x03EA1360 MOVZ W8, 0x1
	0x03EA1364 STRB W8, [X21 + 0xEF6]
	0x03EA1368 MOV X0, X31
	0x03EA136C BL 0x3242BB4
	0x03EA1370 LDR X8, [X20]
	0x03EA1374 MOV X20, X0
	0x03EA1378 LDR W9, [X8 + 0xE0]
	0x03EA137C CBNZ W9, 0x3EA1388
	0x03EA1380 MOV X0, X8
	0x03EA1384 BL 0x1C16DFC
	0x03EA1388 MOV X0, X19
	0x03EA138C MOV X1, X31
	0x03EA1390 BL 0x3322D04
	0x03EA1394 CBZ X20, 0x3EA14B4
	0x03EA1398 LDR X8, [X20]
	0x03EA139C MOV X1, X0
	0x03EA13A0 MOV X0, X20
	0x03EA13A4 LDR X9, [X8 + 0x378]
	0x03EA13A8 LDR X2, [X8 + 0x380]
	0x03EA13AC BLR X9
	0x03EA13B0 CBZ X0, 0x3EA14B4
	0x03EA13B4 MOVZ W1, 0x3A
	0x03EA13B8 MOV X2, X31
	0x03EA13BC MOV X20, X0
	0x03EA13C0 BL 0x322BD98
	0x03EA13C4 MOV W21, W0
	0x03EA13C8 MOV X0, X20
	0x03EA13CC MOV W1, W31
	0x03EA13D0 MOV W2, W21
	0x03EA13D4 MOV X3, X31
	0x03EA13D8 BL 0x3228DE4
	0x03EA13DC LDR W8, [X20 + 0x10]
	0x03EA13E0 MOV X19, X0
	0x03EA13E4 SUB W8, W8, 0x1
	0x03EA13E8 CMP W21, W8
	0x03EA13EC B.GE 0x3EA1408
	0x03EA13F0 ADD W1, W21, 0x1
	0x03EA13F4 MOV X0, X20
	0x03EA13F8 MOV X2, X31
	0x03EA13FC BL 0x322B484
	0x03EA1400 MOV X20, X0
	0x03EA1404 B 0x3EA141C
	0x03EA1408 ADRP X8, 0x254000
	0x03EA140C LDR X8, [X8 + 0x278]
	0x03EA1410 LDR X8, [X8]
	0x03EA1414 LDR X8, [X8 + 0xB8]
	0x03EA1418 LDR X20, [X8]
	0x03EA141C CBZ X19, 0x3EA14B4
	0x03EA1420 ADRP X21, 0x29C000
	0x03EA1424 LDR X21, [X21 + 0xF28]
	0x03EA1428 MOVZ W1, 0x5C
	0x03EA142C MOV X0, X19
	0x03EA1430 MOV X2, X31
	0x03EA1434 BL 0x322BD98
	0x03EA1438 TBNZ X0, 0x1F, 0x3EA1450
	0x03EA143C ADD W1, W0, 0x1
	0x03EA1440 MOV X0, X19
	0x03EA1444 MOV X2, X31
	0x03EA1448 BL 0x322B484
	0x03EA144C MOV X19, X0
	0x03EA1450 LDR X0, [X21]
	0x03EA1454 BL 0x1C16F10
	0x03EA1458 MOV X1, X31
	0x03EA145C MOV X21, X0
	0x03EA1460 BL 0x3663550
	0x03EA1464 CBZ X21, 0x3EA14B4
	0x03EA1468 ADRP X8, 0x2CB000
	0x03EA146C LDR X8, [X8 + 0x9B8]
	0x03EA1470 ADRP X22, 0x27C000
	0x03EA1474 MOV X0, X21
	0x03EA1478 MOV X2, X19
	0x03EA147C LDR X1, [X8]
	0x03EA1480 LDR X22, [X22 + 0xCB8]
	0x03EA1484 MOV X3, X31
	0x03EA1488 BL 0x366457C
	0x03EA148C LDR X1, [X22]
	0x03EA1490 MOV X0, X21
	0x03EA1494 MOV X2, X20
	0x03EA1498 MOV X3, X31
	0x03EA149C BL 0x366457C
	0x03EA14A0 MOV X0, X21
	0x03EA14A4 LDP X20, X19, [X31 + 0x20]
	0x03EA14A8 LDP X22, X21, [X31 + 0x10]
	0x03EA14AC LDR X30, [X31], #0x30
	0x03EA14B0 RET
	0x03EA14B4 BL 0x1C16F20
	0x03EA14B8 STP X30, X21, [X31 - 0x20]!
	0x03EA14BC STP X20, X19, [X31 + 0x10]
	0x03EA14C0 ADRP X20, 0x547000
	0x03EA14C4 LDRB W8, [X20 + 0xEF7]
	0x03EA14C8 MOV X19, X0
	0x03EA14CC TBNZ X8, 0x0, 0x3EA1514
	0x03EA14D0 ADRP X0, 0x25B000
	0x03EA14D4 LDR X0, [X0 + 0x9E8]
	0x03EA14D8 BL 0x1C16CF4
	0x03EA14DC ADRP X0, 0x28D000
	0x03EA14E0 LDR X0, [X0 + 0x850]
	0x03EA14E4 BL 0x1C16CF4
	0x03EA14E8 ADRP X0, 0x25A000
	0x03EA14EC LDR X0, [X0 + 0xFF0]
	0x03EA14F0 BL 0x1C16CF4
	0x03EA14F4 ADRP X0, 0x2CB000
	0x03EA14F8 LDR X0, [X0 + 0x9B8]
	0x03EA14FC BL 0x1C16CF4
	0x03EA1500 ADRP X0, 0x27C000
	0x03EA1504 LDR X0, [X0 + 0xCB8]
	0x03EA1508 BL 0x1C16CF4
	0x03EA150C MOVZ W8, 0x1
	0x03EA1510 STRB W8, [X20 + 0xEF7]
	0x03EA1514 LDR X0, [X19 + 0x18]
	0x03EA1518 CBZ X0, 0x3EA15E8
	0x03EA151C ADRP X8, 0x2CB000
	0x03EA1520 LDR X8, [X8 + 0x9B8]
	0x03EA1524 MOV X2, X31
	0x03EA1528 LDR X1, [X8]
	0x03EA152C BL 0x366456C
	0x03EA1530 LDR X8, [X19 + 0x18]
	0x03EA1534 CBZ X8, 0x3EA15E8
	0x03EA1538 ADRP X9, 0x27C000
	0x03EA153C LDR X9, [X9 + 0xCB8]
	0x03EA1540 ADRP X20, 0x25A000
	0x03EA1544 MOV X19, X0
	0x03EA1548 MOV X0, X8
	0x03EA154C LDR X1, [X9]

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X19, 0x548000
	014 Move X21, 0x29D000
	015 Move X25, 0x25C000
	016 Move W8, [X19+3842]
	017 Move X21, [X21+3880]
	018 Move X25, [X25+2264]
	019 Move X20, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {50}
	024 Move X0, 0x25C000
	025 Move X0, [X0+2264]
	026 Call 0x1C17CF4
	027 Move X0, 0x25A000
	028 Move X0, [X0+584]
	029 Call 0x1C17CF4
	030 Move X0, 0x253000
	031 Move X0, [X0+3584]
	032 Call 0x1C17CF4
	033 Move X0, 0x253000
	034 Move X0, [X0+3952]
	035 Call 0x1C17CF4
	036 Move X0, 0x253000
	037 Move X0, [X0+3960]
	038 Call 0x1C17CF4
	039 Move X0, 0x253000
	040 Move X0, [X0+3608]
	041 Call 0x1C17CF4
	042 Move X0, 0x29D000
	043 Move X0, [X0+3880]
	044 Call 0x1C17CF4
	045 Move X0, 0x255000
	046 Move X0, [X0+632]
	047 Call 0x1C17CF4
	048 Move W8, 1
	049 Move [X19+3842], W8
	050 Move X0, [X21]
	051 Call 0x1C17F10
	052 Move X1, X31
	053 Move X19, X0
	054 Call NameValueCollection..ctor, X0
	055 Move X0, [X25]
	056 Move W1, 1
	057 Call 0x1C17D6C
	058 Compare X0, 0
	059 JumpIfEqual {299}
	060 Move W8, [X0+24]
	061 Move X21, X0
	062 Compare W8, 0
	063 JumpIfEqual {300}
	064 Move X8, 0x25A000
	065 Move X8, [X8+584]
	066 Move W9, 44
	067 NotImplemented "Instruction STRH not yet implemented."
	068 Move X0, [X8]
	069 Move W8, [X0+224]
	070 Compare W8, 0
	071 JumpIfNotEqual {73}
	072 Call 0x1C17DFC
	073 Move X0, X20
	074 Move X1, X21
	075 Move X2, X31
	076 Call Ext.SplitHeaderValue, X0, X1
	077 Compare X0, 0
	078 JumpIfEqual {299}
	079 Move X10, 0x253000
	080 Move X8, [X0]
	081 Move X10, [X10+3952]
	082 Move X20, X0
	083 NotImplemented "Instruction LDRH not yet implemented."
	084 Move X1, [X10]
	085 Compare X9, 0
	086 JumpIfEqual {93}
	087 Move X10, [X8+176]
	088 Add X10, X10, 8
	089 NotImplemented "Instruction LDUR not yet implemented."
	090 NotImplemented "Instruction CMP not yet implemented."
	091 Subtract X9, X9, 1
	092 Add X10, X10, 16
	093 Move X0, X20
	094 Move W2, W31
	095 Call 0x1C5D788
	096 NotImplemented "Instruction LDRSW not yet implemented."
	097 Add X8, X8, X9
	098 Add X0, X8, 312
	099 Move X8, [X0]
	100 Move X1, [X0+8]
	101 Move X24, 0x253000
	102 Move X24, [X24+3584]
	103 Move X0, X20
	104 NotImplemented "Instruction BLR not yet implemented."
	105 Move X20, X0
	106 Compare X0, 0
	107 JumpIfEqual {301}
	108 Move X26, 0x253000
	109 Move X27, 0x253000
	110 Move X29, 0x255000
	111 Move X26, [X26+3608]
	112 Move X27, [X27+3960]
	113 Move X29, [X29+632]
	114 Move W28, 34
	115 Move X8, [X20]
	116 Move X1, [X26]
	117 NotImplemented "Instruction LDRH not yet implemented."
	118 Compare X9, 0
	119 JumpIfEqual {126}
	120 Move X10, [X8+176]
	121 Add X10, X10, 8
	122 NotImplemented "Instruction LDUR not yet implemented."
	123 NotImplemented "Instruction CMP not yet implemented."
	124 Subtract X9, X9, 1
	125 Add X10, X10, 16
	126 Move X0, X20
	127 Move W2, W31
	128 Call 0x1C5D788
	129 NotImplemented "Instruction LDRSW not yet implemented."
	130 Add X8, X8, X9
	131 Add X0, X8, 312
	132 Move X8, [X0]
	133 Move X1, [X0+8]
	134 Move X0, X20
	135 NotImplemented "Instruction BLR not yet implemented."
	136 Move TEMP, X0
	137 And TEMP, TEMP, 1
	138 Compare TEMP, 1
	139 JumpIfNotEqual {249}
	140 Move X8, [X20]
	141 Move X1, [X27]
	142 NotImplemented "Instruction LDRH not yet implemented."
	143 Compare X9, 0
	144 JumpIfEqual {151}
	145 Move X10, [X8+176]
	146 Add X10, X10, 8
	147 NotImplemented "Instruction LDUR not yet implemented."
	148 NotImplemented "Instruction CMP not yet implemented."
	149 Subtract X9, X9, 1
	150 Add X10, X10, 16
	151 Move X0, X20
	152 Move W2, W31
	153 Call 0x1C5D788
	154 NotImplemented "Instruction LDRSW not yet implemented."
	155 Add X8, X8, X9
	156 Add X0, X8, 312
	157 Move X8, [X0]
	158 Move X1, [X0+8]
	159 Move X0, X20
	160 NotImplemented "Instruction BLR not yet implemented."
	161 Move X22, X0
	162 Compare X0, 0
	163 JumpIfEqual {290}
	164 Move W1, 61
	165 Move X0, X22
	166 Move X2, X31
	167 Call String.IndexOf, X0, X1
	168 Move W23, W0
	169 NotImplemented "Instruction CMP not yet implemented."
	170 Move X0, X22
	171 Move W1, W31
	172 Move W2, W23
	173 Move X3, X31
	174 Call String.Substring, X0, X1, X2
	175 Compare X0, 0
	176 JumpIfEqual {291}
	177 Move X1, X31
	178 Call String.Trim, X0
	179 Move X21, X0
	180 Move TEMP, X23
	181 And TEMP, TEMP, -2147483648
	182 Compare TEMP, -2147483648
	183 JumpIfEqual {220}
	184 Move X21, X31
	185 Move W8, [X22+16]
	186 Subtract W8, W8, 1
	187 NotImplemented "Instruction CMP not yet implemented."
	188 Add W1, W23, 1
	189 Move X0, X22
	190 Move X2, X31
	191 Call String.Substring, X0, X1
	192 Compare X0, 0
	193 JumpIfEqual {293}
	194 Move X1, X31
	195 Call String.Trim, X0
	196 Move X22, X0
	197 Move X0, [X25]
	198 Move W1, 1
	199 Call 0x1C17D6C
	200 Move X1, X0
	201 Compare X1, 0
	202 JumpIfEqual {295}
	203 Move W8, [X1+24]
	204 Compare W8, 0
	205 JumpIfEqual {294}
	206 NotImplemented "Instruction STRH not yet implemented."
	207 Compare X22, 0
	208 JumpIfEqual {292}
	209 Move X0, X22
	210 Move X2, X31
	211 Call String.Trim, X0, X1
	212 Move X2, X0
	213 Compare X19, 0
	214 JumpIfNotEqual {243}
	215 Move X8, [X29]
	216 Move X8, [X8+184]
	217 Move X2, [X8]
	218 Compare X19, 0
	219 JumpIfNotEqual {243}
	220 Move X0, X22
	221 Move X1, X31
	222 Call String.Trim, X0
	223 Move X21, X0
	224 Move X0, [X25]
	225 Move W1, 1
	226 Call 0x1C17D6C
	227 Move X1, X0
	228 Compare X1, 0
	229 JumpIfEqual {298}
	230 Move W8, [X1+24]
	231 Compare W8, 0
	232 JumpIfEqual {296}
	233 NotImplemented "Instruction STRH not yet implemented."
	234 Compare X21, 0
	235 JumpIfEqual {297}
	236 Move X0, X21
	237 Move X2, X31
	238 Call String.Trim, X0, X1
	239 Move X2, X0
	240 Move X21, X31
	241 Compare X19, 0
	242 JumpIfEqual {289}
	243 Move X8, [X19]
	244 Move X9, [X8+584]
	245 Move X3, [X8+592]
	246 Move X0, X19
	247 Move X1, X21
	248 NotImplemented "Instruction BLR not yet implemented."
	249 Move X21, X31
	250 Compare X20, 0
	251 JumpIfEqual {273}
	252 Move X8, [X20]
	253 Move X1, [X24]
	254 NotImplemented "Instruction LDRH not yet implemented."
	255 Compare X9, 0
	256 JumpIfEqual {263}
	257 Move X10, [X8+176]
	258 Add X10, X10, 8
	259 NotImplemented "Instruction LDUR not yet implemented."
	260 NotImplemented "Instruction CMP not yet implemented."
	261 Subtract X9, X9, 1
	262 Add X10, X10, 16
	263 Move X0, X20
	264 Move W2, W31
	265 Call 0x1C5D788
	266 NotImplemented "Instruction LDRSW not yet implemented."
	267 Add X8, X8, X9
	268 Add X0, X8, 312
	269 Move X8, [X0]
	270 Move X1, [X0+8]
	271 Move X0, X20
	272 NotImplemented "Instruction BLR not yet implemented."
	273 Compare X21, 0
	274 JumpIfNotEqual {302}
	275 Move X0, X19
	276 Move X20, [X31+80]
	277 Move X19, [X31+88]
	278 Move X22, [X31+64]
	279 Move X21, [X31+72]
	280 Move X24, [X31+48]
	281 Move X23, [X31+56]
	282 Move X26, [X31+32]
	283 Move X25, [X31+40]
	284 Move X28, [X31+16]
	285 Move X27, [X31+24]
	286 Move X29, [X31+96]
	287 Move X30, [X31+104]
	288 Return X0
	289 Call 0x1C17F20
	290 Call 0x1C17F20
	291 Call 0x1C17F20
	292 Call 0x1C17F20
	293 Call 0x1C17F20
	294 Call 0x1C17F28
	295 Call 0x1C17F20
	296 Call 0x1C17F28
	297 Call 0x1C17F20
	298 Call 0x1C17F20
	299 Call 0x1C17F20
	300 Call 0x1C17F28
	301 Call 0x1C17F20
	302 Move X0, X21
	303 Call 0x1C17F18
	304 NotImplemented "Instruction CMP not yet implemented."
	305 Call 0x3EB2AD0
	306 Move X21, [X0]
	307 Call 0x3EB2AE0
	308 Move X19, X0
	309 Move X21, X31
	310 Move X19, X0
	311 Compare X20, 0
	312 JumpIfEqual {334}
	313 Move X8, [X20]
	314 Move X1, [X24]
	315 NotImplemented "Instruction LDRH not yet implemented."
	316 Compare X9, 0
	317 JumpIfEqual {324}
	318 Move X10, [X8+176]
	319 Add X10, X10, 8
	320 NotImplemented "Instruction LDUR not yet implemented."
	321 NotImplemented "Instruction CMP not yet implemented."
	322 Subtract X9, X9, 1
	323 Add X10, X10, 16
	324 Move X0, X20
	325 Move W2, W31
	326 Call 0x1C5D788
	327 NotImplemented "Instruction LDRSW not yet implemented."
	328 Add X8, X8, X9
	329 Add X0, X8, 312
	330 Move X8, [X0]
	331 Move X1, [X0+8]
	332 Move X0, X20
	333 NotImplemented "Instruction BLR not yet implemented."
	334 Compare X21, 0
	335 JumpIfNotEqual {338}
	336 Move X0, X19
	337 Call 0x1D2D690
	338 Move X0, X21
	339 Call 0x1C17F18
	340 Call 0x1991590

Method: System.String ToBasicString()

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.String ToDigestString()

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.String ToString()

Disassembly:
	0x03EA2C34 LDR X0, [X0 + 0x10]
	0x03EA2C38 CBZ X0, 0x3EA2C54
	0x03EA2C3C MOV X1, X31
	0x03EA2C40 BL 0x3E8C03C
	0x03EA2C44 CBZ X0, 0x3EA2C54
	0x03EA2C48 MOV X1, X31
	0x03EA2C4C LDR X30, [X31], #0x10
	0x03EA2C50 B 0x3E8C5EC
	0x03EA2C54 BL 0x1C16F20
	0x03EA2C58 STR X30, [X31 - 0x10]!
	0x03EA2C5C LDR X0, [X0 + 0x10]
	0x03EA2C60 CBZ X0, 0x3EA2C7C
	0x03EA2C64 MOV X1, X31
	0x03EA2C68 BL 0x3E8D034
	0x03EA2C6C CBZ X0, 0x3EA2C7C
	0x03EA2C70 MOV X1, X31
	0x03EA2C74 LDR X30, [X31], #0x10
	0x03EA2C78 B 0x3E8A168
	0x03EA2C7C BL 0x1C16F20
	0x03EA2C80 STR X30, [X31 - 0x10]!
	0x03EA2C84 LDR X0, [X0 + 0x10]
	0x03EA2C88 CBZ X0, 0x3EA2CA4
	0x03EA2C8C MOV X1, X31
	0x03EA2C90 BL 0x3E8AEB0
	0x03EA2C94 CBZ X0, 0x3EA2CA4
	0x03EA2C98 MOV X1, X31
	0x03EA2C9C LDR X30, [X31], #0x10
	0x03EA2CA0 B 0x3E8EAA4
	0x03EA2CA4 BL 0x1C16F20
	0x03EA2CA8 STR X30, [X31 - 0x10]!
	0x03EA2CAC LDR X0, [X0 + 0x10]
	0x03EA2CB0 CBZ X0, 0x3EA2CCC
	0x03EA2CB4 MOV X1, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x547000
	005 Move W8, [X20+3843]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x254000
	012 Move X0, [X0+632]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+3843], W8
	016 Move W8, [X19+16]
	017 NotImplemented "Instruction CMP not yet implemented."
	018 NotImplemented "Instruction CMP not yet implemented."
	019 Move X8, [X19]
	020 Move X2, [X8+376]
	021 Move X1, [X8+384]
	022 Move X8, [X19]
	023 Move X2, [X8+392]
	024 Move X1, [X8+400]
	025 Move X0, X19
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 CallNoReturn X2
	030 Move X8, 0x254000
	031 Move X8, [X8+632]
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move X8, [X8]
	035 Move X8, [X8+184]
	036 Move X0, [X8]
	037 Move X30, [X31+32]
	038 Return X0

