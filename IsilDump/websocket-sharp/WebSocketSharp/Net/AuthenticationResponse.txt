Type: WebSocketSharp.Net.AuthenticationResponse

Method: System.Void .ctor(WebSocketSharp.Net.AuthenticationSchemes scheme, System.Collections.Specialized.NameValueCollection parameters)

Disassembly:
	0x03EA187C LDR X8, [X8 + 0x188]
	0x03EA1880 MOV X0, X20
	0x03EA1884 MOV X2, X21
	0x03EA1888 MOV X3, X31
	0x03EA188C LDR X1, [X8]
	0x03EA1890 BL 0x3234E54
	0x03EA1894 LDR X0, [X19 + 0x18]
	0x03EA1898 CBZ X0, 0x3EA19B0
	0x03EA189C ADRP X8, 0x29D000
	0x03EA18A0 LDR X8, [X8 + 0x620]
	0x03EA18A4 MOV X2, X31
	0x03EA18A8 LDR X1, [X8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move W20, W1
	006 Move X1, X31
	007 Move X19, X2
	008 Move X21, X0
	009 Call Object..ctor, X0
	010 Move [X21+16], W20
	011 Move [X21+24], X19
	012 Move X20, [X31+16]
	013 Move X19, [X31+24]
	014 Move X30, [X31+32]
	015 Move X21, [X31+40]
	016 Return 

Method: System.Void .ctor(WebSocketSharp.Net.NetworkCredential credentials)

Disassembly:
	0x03EA18AC BL 0x366456C
	0x03EA18B0 CBZ X0, 0x3EA18D0
	0x03EA18B4 ADRP X8, 0x2CD000
	0x03EA18B8 LDR X8, [X8 + 0x148]
	0x03EA18BC MOV X2, X0
	0x03EA18C0 MOV X0, X20
	0x03EA18C4 MOV X3, X31
	0x03EA18C8 LDR X1, [X8]
	0x03EA18CC BL 0x3234224
	0x03EA18D0 LDR X0, [X19 + 0x18]
	0x03EA18D4 CBZ X0, 0x3EA19B0
	0x03EA18D8 ADRP X8, 0x29B000
	0x03EA18DC LDR X8, [X8 + 0xAD8]
	0x03EA18E0 MOV X2, X31
	0x03EA18E4 LDR X1, [X8]
	0x03EA18E8 BL 0x366456C
	0x03EA18EC CBZ X0, 0x3EA190C
	0x03EA18F0 ADRP X8, 0x2CD000
	0x03EA18F4 LDR X8, [X8 + 0x168]
	0x03EA18F8 MOV X2, X0
	0x03EA18FC MOV X0, X20
	0x03EA1900 MOV X3, X31
	0x03EA1904 LDR X1, [X8]
	0x03EA1908 BL 0x3234224
	0x03EA190C LDR X0, [X19 + 0x18]
	0x03EA1910 CBZ X0, 0x3EA19B0
	0x03EA1914 ADRP X8, 0x29D000
	0x03EA1918 LDR X8, [X8 + 0x618]
	0x03EA191C MOV X2, X31

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x548000
	007 Move X22, 0x29D000
	008 Move W8, [X21+3814]
	009 Move X22, [X22+3880]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x29D000
	017 Move X0, [X0+3880]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+3814], W8
	021 Move X0, [X22]
	022 Call 0x1C17F10
	023 Move X1, X31
	024 Move X21, X0
	025 Call NameValueCollection..ctor, X0
	026 Move X0, X20
	027 Move X2, X21
	028 Move X3, X19
	029 Move X20, [X31+32]
	030 Move X19, [X31+40]
	031 Move X22, [X31+16]
	032 Move X21, [X31+24]
	033 Move W1, 8
	034 Move W4, W31
	035 Move X30, [X31+48]

Method: System.Void .ctor(WebSocketSharp.Net.AuthenticationChallenge challenge, WebSocketSharp.Net.NetworkCredential credentials, System.UInt32 nonceCount)

Disassembly:
	0x03EA1AA8 ADRP X0, 0x29B000
	0x03EA1AAC LDR X0, [X0 + 0xAD8]
	0x03EA1AB0 BL 0x1C16CF4
	0x03EA1AB4 MOVZ W8, 0x1
	0x03EA1AB8 STRB W8, [X20 + 0xEFC]
	0x03EA1ABC LDR X0, [X19 + 0x18]
	0x03EA1AC0 CBZ X0, 0x3EA1AE0
	0x03EA1AC4 ADRP X8, 0x29B000
	0x03EA1AC8 LDR X8, [X8 + 0xAD8]
	0x03EA1ACC LDP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X31-16], X30
	002 Compare X1, 0
	003 JumpIfEqual {12}
	004 Move W8, [X1+16]
	005 Move W4, W3
	006 Move X3, X2
	007 Move X2, [X1+24]
	008 Move W1, W8
	009 Move X30, [X31+16]
	010 Call AuthenticationResponse..ctor, X0, X1, X2, X3, X4
	011 Return 
	012 Call 0x1C17F20

Method: System.Void .ctor(WebSocketSharp.Net.AuthenticationSchemes scheme, System.Collections.Specialized.NameValueCollection parameters, WebSocketSharp.Net.NetworkCredential credentials, System.UInt32 nonceCount)

Disassembly:
	0x03EA1920 LDR X1, [X8]
	0x03EA1924 BL 0x366456C
	0x03EA1928 CBZ X0, 0x3EA1994
	0x03EA192C MOV X21, X0
	0x03EA1930 LDR X0, [X19 + 0x18]
	0x03EA1934 CBZ X0, 0x3EA19B0
	0x03EA1938 ADRP X8, 0x2CD000
	0x03EA193C LDR X8, [X8 + 0xC8]
	0x03EA1940 MOV X2, X31
	0x03EA1944 LDR X1, [X8]
	0x03EA1948 BL 0x366456C
	0x03EA194C LDR X8, [X19 + 0x18]
	0x03EA1950 CBZ X8, 0x3EA19B0
	0x03EA1954 ADRP X9, 0x2CD000
	0x03EA1958 LDR X9, [X9 + 0xD0]
	0x03EA195C ADRP X22, 0x2CD000
	0x03EA1960 MOV X19, X0
	0x03EA1964 MOV X0, X8
	0x03EA1968 LDR X1, [X9]
	0x03EA196C LDR X22, [X22 + 0x190]
	0x03EA1970 MOV X2, X31
	0x03EA1974 BL 0x366456C
	0x03EA1978 LDR X1, [X22]
	0x03EA197C MOV X4, X0
	0x03EA1980 MOV X0, X20
	0x03EA1984 MOV X2, X21
	0x03EA1988 MOV X3, X19
	0x03EA198C MOV X5, X31
	0x03EA1990 BL 0x3234DF4
	0x03EA1994 LDR X8, [X20]
	0x03EA1998 MOV X0, X20
	0x03EA199C LDP X20, X19, [X31 + 0x20]
	0x03EA19A0 LDP X22, X21, [X31 + 0x10]
	0x03EA19A4 LDP X2, X1, [X8 + 0x168]
	0x03EA19A8 LDR X30, [X31], #0x30
	0x03EA19AC BR X2
	0x03EA19B0 BL 0x1C16F20
	0x03EA19B4 BL 0x1C16F28
	0x03EA19B8 BL 0x1C16F44
	0x03EA19BC MOV X1, X31
	0x03EA19C0 BL 0x1C16DEC
	0x03EA19C4 STR X30, [X31 - 0x20]!
	0x03EA19C8 STP X20, X19, [X31 + 0x10]
	0x03EA19CC ADRP X19, 0x547000
	0x03EA19D0 ADRP X20, 0x2CD000
	0x03EA19D4 LDRB W8, [X19 + 0xEFA]
	0x03EA19D8 LDR X20, [X20 + 0x178]
	0x03EA19DC TBNZ X8, 0x0, 0x3EA19F4
	0x03EA19E0 ADRP X0, 0x2CD000
	0x03EA19E4 LDR X0, [X0 + 0x178]
	0x03EA19E8 BL 0x1C16CF4
	0x03EA19EC MOVZ W8, 0x1
	0x03EA19F0 STRB W8, [X19 + 0xEFA]
	0x03EA19F4 LDR X0, [X20]
	0x03EA19F8 BL 0x1C16F10
	0x03EA19FC MOV X1, X31
	0x03EA1A00 MOV X19, X0
	0x03EA1A04 BL 0x33BDD8C
	0x03EA1A08 LDR X8, [X20]
	0x03EA1A0C LDR X8, [X8 + 0xB8]
	0x03EA1A10 STR X19, [X8]
	0x03EA1A14 LDP X20, X19, [X31 + 0x10]
	0x03EA1A18 LDR X30, [X31], #0x20
	0x03EA1A1C RET
	0x03EA1A20 MOV X1, X31
	0x03EA1A24 B 0x33BDD8C
	0x03EA1A28 STR X30, [X31 - 0x20]!
	0x03EA1A2C STP X20, X19, [X31 + 0x10]
	0x03EA1A30 ADRP X20, 0x547000
	0x03EA1A34 LDRB W8, [X20 + 0xEFB]
	0x03EA1A38 MOV X19, X1
	0x03EA1A3C TBNZ X8, 0x0, 0x3EA1A54
	0x03EA1A40 ADRP X0, 0x252000
	0x03EA1A44 LDR X0, [X0 + 0xEE8]
	0x03EA1A48 BL 0x1C16CF4
	0x03EA1A4C MOVZ W8, 0x1
	0x03EA1A50 STRB W8, [X20 + 0xEFB]
	0x03EA1A54 CBZ X19, 0x3EA1A8C
	0x03EA1A58 MOV X0, X19
	0x03EA1A5C MOV X1, X31
	0x03EA1A60 BL 0x322B8DC
	0x03EA1A64 CBZ X0, 0x3EA1A8C
	0x03EA1A68 ADRP X19, 0x252000
	0x03EA1A6C LDR X19, [X19 + 0xEE8]
	0x03EA1A70 MOV X1, X31
	0x03EA1A74 BL 0x322B5E4
	0x03EA1A78 LDR X1, [X19]
	0x03EA1A7C LDP X20, X19, [X31 + 0x10]
	0x03EA1A80 MOV X2, X31
	0x03EA1A84 LDR X30, [X31], #0x20
	0x03EA1A88 B 0x321BA08
	0x03EA1A8C BL 0x1C16F20
	0x03EA1A90 STR X30, [X31 - 0x20]!
	0x03EA1A94 STP X20, X19, [X31 + 0x10]
	0x03EA1A98 ADRP X20, 0x547000
	0x03EA1A9C LDRB W8, [X20 + 0xEFC]
	0x03EA1AA0 MOV X19, X0
	0x03EA1AA4 TBNZ X8, 0x0, 0x3EA1ABC

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0x548000
	009 Move W8, [X24+3815]
	010 Move W19, W4
	011 Move X22, X3
	012 Move X23, X2
	013 Move W21, W1
	014 Move X20, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {30}
	019 Move X0, 0x283000
	020 Move X0, [X0+3608]
	021 Call 0x1C17CF4
	022 Move X0, 0x2CC000
	023 Move X0, [X0+2488]
	024 Call 0x1C17CF4
	025 Move X0, 0x27D000
	026 Move X0, [X0+3256]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X24+3815], W8
	030 Move X0, X20
	031 Move X1, X31
	032 Call Object..ctor, X0
	033 Move [X20+16], W21
	034 Move [X20+24], X23
	035 Compare X22, 0
	036 JumpIfEqual {122}
	037 Compare X23, 0
	038 JumpIfEqual {122}
	039 Move X8, 0x2CC000
	040 Move X8, [X8+2488]
	041 Move X2, [X22+40]
	042 Move X0, X23
	043 Move X3, X31
	044 Move X1, [X8]
	045 Call NameValueCollection.set_Item, X0, X1, X2
	046 Move X24, 0x548000
	047 Move W8, [X24+3795]
	048 Move X23, [X20+24]
	049 Move TEMP, X8
	050 And TEMP, TEMP, 1
	051 Compare TEMP, 1
	052 JumpIfEqual {58}
	053 Move X0, 0x255000
	054 Move X0, [X0+632]
	055 Call 0x1C17CF4
	056 Move W8, 1
	057 Move [X24+3795], W8
	058 Move X2, [X22+24]
	059 Compare X2, 0
	060 JumpIfNotEqual {66}
	061 Move X8, 0x255000
	062 Move X8, [X8+632]
	063 Move X8, [X8]
	064 Move X8, [X8+184]
	065 Move X2, [X8]
	066 Compare X23, 0
	067 JumpIfEqual {122}
	068 Move X8, 0x27D000
	069 Move X8, [X8+3256]
	070 Move X0, X23
	071 Move X3, X31
	072 Move X1, [X8]
	073 Call NameValueCollection.set_Item, X0, X1, X2
	074 Move X24, 0x548000
	075 Move W8, [X24+3794]
	076 Move X23, [X20+24]
	077 Move TEMP, X8
	078 And TEMP, TEMP, 1
	079 Compare TEMP, 1
	080 JumpIfEqual {86}
	081 Move X0, 0x255000
	082 Move X0, [X0+632]
	083 Call 0x1C17CF4
	084 Move W8, 1
	085 Move [X24+3794], W8
	086 Move X2, [X22+16]
	087 Compare X2, 0
	088 JumpIfNotEqual {94}
	089 Move X8, 0x255000
	090 Move X8, [X8+632]
	091 Move X8, [X8]
	092 Move X8, [X8+184]
	093 Move X2, [X8]
	094 Compare X23, 0
	095 JumpIfEqual {122}
	096 Move X8, 0x283000
	097 Move X8, [X8+3608]
	098 Move X0, X23
	099 Move X3, X31
	100 Move X1, [X8]
	101 Call NameValueCollection.set_Item, X0, X1, X2
	102 NotImplemented "Instruction CMP not yet implemented."
	103 Move [X20+32], W19
	104 Move X0, X20
	105 Move X20, [X31+48]
	106 Move X19, [X31+56]
	107 Move X22, [X31+32]
	108 Move X21, [X31+40]
	109 Move X24, [X31+16]
	110 Move X23, [X31+24]
	111 Move X30, [X31+64]
	112 Call AuthenticationResponse.initAsDigest, X0
	113 Return 
	114 Move X20, [X31+48]
	115 Move X19, [X31+56]
	116 Move X22, [X31+32]
	117 Move X21, [X31+40]
	118 Move X24, [X31+16]
	119 Move X23, [X31+24]
	120 Move X30, [X31+64]
	121 Return 
	122 Call 0x1C17F20

Method: System.UInt32 get_NonceCount()

Disassembly:
	0x03EA1DFC MOV X0, X20
	0x03EA1E00 MOV W1, W25
	0x03EA1E04 MOV X2, X31
	0x03EA1E08 BL 0x3222A1C

ISIL:
	001 Move W8, [X0+32]
	002 Add W31, W8, 1
	003 NotImplemented "Instruction CSEL not yet implemented."
	004 Return X0

Method: System.String get_Cnonce()

Disassembly:
	0x03EA1E0C SUBS W2, W24, W22
	0x03EA1E10 B.LE 0x3EA1E50
	0x03EA1E14 AND W8, W0, 0xFFFF
	0x03EA1E18 CMP W8, 0x5D
	0x03EA1E1C B.EQ 0x3EA1E50
	0x03EA1E20 MOV X0, X20
	0x03EA1E24 MOV W1, W22
	0x03EA1E28 MOV X3, X31
	0x03EA1E2C BL 0x3228DE4
	0x03EA1E30 ORN W8, W31, W24, 0x0
	0x03EA1E34 STR X0, [X19 + 0x10]
	0x03EA1E38 ADD W1, W24, 0x1
	0x03EA1E3C ADD W2, W21, W8
	0x03EA1E40 MOV X0, X20
	0x03EA1E44 MOV X3, X31
	0x03EA1E48 BL 0x3228DE4
	0x03EA1E4C B 0x3EA1E88
	0x03EA1E50 MOV X0, X20
	0x03EA1E54 MOV W1, W22
	0x03EA1E58 MOV W2, W23
	0x03EA1E5C MOV X3, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x548000
	005 Move W8, [X20+3816]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x2CE000
	012 Move X0, [X0+200]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+3816], W8
	016 Move X0, [X19+24]
	017 Compare X0, 0
	018 JumpIfEqual {28}
	019 Move X8, 0x2CE000
	020 Move X8, [X8+200]
	021 Move X20, [X31+16]
	022 Move X19, [X31+24]
	023 Move X2, X31
	024 Move X1, [X8]
	025 Move X30, [X31+32]
	026 Call NameValueCollection.get_Item, X0, X1
	027 Return X0
	028 Call 0x1C17F20

Method: System.String get_Nc()

Disassembly:
	0x03EA1E60 BL 0x3228DE4
	0x03EA1E64 LDRB W8, [X19 + 0x40]
	0x03EA1E68 STR X0, [X19 + 0x10]
	0x03EA1E6C ADRP X9, 0x259000
	0x03EA1E70 ADRP X10, 0x275000
	0x03EA1E74 LDR X9, [X9 + 0xD68]
	0x03EA1E78 LDR X10, [X10 + 0x468]
	0x03EA1E7C CMP W8, 0x0
	0x03EA1E80 CSEL X8, X9, X10, EQ
	0x03EA1E84 LDR X0, [X8]
	0x03EA1E88 STR X0, [X19 + 0x30]
	0x03EA1E8C MOV X0, X20
	0x03EA1E90 MOV W1, W21
	0x03EA1E94 MOV X2, X31
	0x03EA1E98 BL 0x322B484
	0x03EA1E9C STR X0, [X19 + 0x28]
	0x03EA1EA0 LDR X0, [X28]
	0x03EA1EA4 MOVZ W1, 0x4
	0x03EA1EA8 BL 0x1C16D6C
	0x03EA1EAC LDRB W8, [X19 + 0x40]
	0x03EA1EB0 CMP W8, 0x0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x548000
	005 Move W8, [X20+3817]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x2CE000
	012 Move X0, [X0+208]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+3817], W8
	016 Move X0, [X19+24]
	017 Compare X0, 0
	018 JumpIfEqual {28}
	019 Move X8, 0x2CE000
	020 Move X8, [X8+208]
	021 Move X20, [X31+16]
	022 Move X19, [X31+24]
	023 Move X2, X31
	024 Move X1, [X8]
	025 Move X30, [X31+32]
	026 Call NameValueCollection.get_Item, X0, X1
	027 Return X0
	028 Call 0x1C17F20

Method: System.String get_Password()

Disassembly:
	0x03EA1EB4 CSEL X8, X27, X26, EQ
	0x03EA1EB8 CBZ X0, 0x3EA1FB8
	0x03EA1EBC ADRP X9, 0x25A000
	0x03EA1EC0 LDR X9, [X9 + 0xFE8]
	0x03EA1EC4 LDR X22, [X8]
	0x03EA1EC8 MOV X20, X0
	0x03EA1ECC LDR X21, [X9]
	0x03EA1ED0 CBZ X22, 0x3EA1EE8
	0x03EA1ED4 LDR X8, [X20]
	0x03EA1ED8 MOV X0, X22
	0x03EA1EDC LDR X1, [X8 + 0x40]
	0x03EA1EE0 BL 0x1C16E00
	0x03EA1EE4 CBZ X0, 0x3EA1FAC
	0x03EA1EE8 LDR W8, [X20 + 0x18]
	0x03EA1EEC CBZ W8, 0x3EA1FA8
	0x03EA1EF0 STR X22, [X20 + 0x20]
	0x03EA1EF4 LDR X22, [X19 + 0x10]
	0x03EA1EF8 CBZ X22, 0x3EA1F14
	0x03EA1EFC LDR X8, [X20]
	0x03EA1F00 MOV X0, X22
	0x03EA1F04 LDR X1, [X8 + 0x40]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x548000
	005 Move W8, [X20+3818]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x27D000
	012 Move X0, [X0+3256]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+3818], W8
	016 Move X0, [X19+24]
	017 Compare X0, 0
	018 JumpIfEqual {28}
	019 Move X8, 0x27D000
	020 Move X8, [X8+3256]
	021 Move X20, [X31+16]
	022 Move X19, [X31+24]
	023 Move X2, X31
	024 Move X1, [X8]
	025 Move X30, [X31+32]
	026 Call NameValueCollection.get_Item, X0, X1
	027 Return X0
	028 Call 0x1C17F20

Method: System.String get_Response()

Disassembly:
	0x03EA1F08 BL 0x1C16E00
	0x03EA1F0C CBZ X0, 0x3EA1FAC
	0x03EA1F10 LDR W8, [X20 + 0x18]
	0x03EA1F14 CMP W8, 0x1
	0x03EA1F18 B.LS 0x3EA1FA8
	0x03EA1F1C STR X22, [X20 + 0x28]
	0x03EA1F20 LDR X22, [X19 + 0x30]
	0x03EA1F24 CBZ X22, 0x3EA1F40
	0x03EA1F28 LDR X8, [X20]
	0x03EA1F2C MOV X0, X22
	0x03EA1F30 LDR X1, [X8 + 0x40]
	0x03EA1F34 BL 0x1C16E00
	0x03EA1F38 CBZ X0, 0x3EA1FAC
	0x03EA1F3C LDR W8, [X20 + 0x18]
	0x03EA1F40 CMP W8, 0x2
	0x03EA1F44 B.LS 0x3EA1FA8
	0x03EA1F48 STR X22, [X20 + 0x30]
	0x03EA1F4C LDR X22, [X19 + 0x28]
	0x03EA1F50 CBZ X22, 0x3EA1F6C
	0x03EA1F54 LDR X8, [X20]
	0x03EA1F58 MOV X0, X22

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x548000
	005 Move W8, [X20+3819]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x2CD000
	012 Move X0, [X0+3320]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+3819], W8
	016 Move X0, [X19+24]
	017 Compare X0, 0
	018 JumpIfEqual {28}
	019 Move X8, 0x2CD000
	020 Move X8, [X8+3320]
	021 Move X20, [X31+16]
	022 Move X19, [X31+24]
	023 Move X2, X31
	024 Move X1, [X8]
	025 Move X30, [X31+32]
	026 Call NameValueCollection.get_Item, X0, X1
	027 Return X0
	028 Call 0x1C17F20

Method: System.String get_Uri()

Disassembly:
	0x03EA1F5C LDR X1, [X8 + 0x40]
	0x03EA1F60 BL 0x1C16E00
	0x03EA1F64 CBZ X0, 0x3EA1FAC
	0x03EA1F68 LDR W8, [X20 + 0x18]
	0x03EA1F6C CMP W8, 0x3
	0x03EA1F70 B.LS 0x3EA1FA8
	0x03EA1F74 MOV X0, X21
	0x03EA1F78 MOV X1, X20
	0x03EA1F7C MOV X2, X31
	0x03EA1F80 STR X22, [X20 + 0x38]
	0x03EA1F84 BL 0x3227C5C
	0x03EA1F88 STR X0, [X19 + 0x38]
	0x03EA1F8C LDP X20, X19, [X31 + 0x50]
	0x03EA1F90 LDP X22, X21, [X31 + 0x40]
	0x03EA1F94 LDP X24, X23, [X31 + 0x30]
	0x03EA1F98 LDP X26, X25, [X31 + 0x20]
	0x03EA1F9C LDP X28, X27, [X31 + 0x10]
	0x03EA1FA0 LDR X30, [X31], #0x60
	0x03EA1FA4 RET
	0x03EA1FA8 BL 0x1C16F28
	0x03EA1FAC BL 0x1C16F44

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x548000
	005 Move W8, [X20+3820]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x283000
	012 Move X0, [X0+3608]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+3820], W8
	016 Move X0, [X19+24]
	017 Compare X0, 0
	018 JumpIfEqual {28}
	019 Move X8, 0x283000
	020 Move X8, [X8+3608]
	021 Move X20, [X31+16]
	022 Move X19, [X31+24]
	023 Move X2, X31
	024 Move X1, [X8]
	025 Move X30, [X31+32]
	026 Call NameValueCollection.get_Item, X0, X1
	027 Return X0
	028 Call 0x1C17F20

Method: System.String get_UserName()

Disassembly:
	0x03EA1FB0 MOV X1, X31
	0x03EA1FB4 BL 0x1C16DEC
	0x03EA1FB8 BL 0x1C16F20
	0x03EA1FBC LDR X0, [X0 + 0x10]
	0x03EA1FC0 RET
	0x03EA1FC4 LDRB W0, [X0 + 0x40]
	0x03EA1FC8 RET
	0x03EA1FCC LDR X0, [X0 + 0x18]
	0x03EA1FD0 RET
	0x03EA1FD4 LDR X0, [X0 + 0x20]
	0x03EA1FD8 RET
	0x03EA1FDC LDR X0, [X0 + 0x28]
	0x03EA1FE0 RET
	0x03EA1FE4 LDR X0, [X0 + 0x30]
	0x03EA1FE8 RET
	0x03EA1FEC STR X30, [X31 - 0x30]!
	0x03EA1FF0 STP X22, X21, [X31 + 0x10]
	0x03EA1FF4 STP X20, X19, [X31 + 0x20]
	0x03EA1FF8 ADRP X20, 0x547000
	0x03EA1FFC LDRB W8, [X20 + 0xF05]
	0x03EA2000 MOV X19, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x548000
	005 Move W8, [X20+3821]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x2CC000
	012 Move X0, [X0+2488]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+3821], W8
	016 Move X0, [X19+24]
	017 Compare X0, 0
	018 JumpIfEqual {28}
	019 Move X8, 0x2CC000
	020 Move X8, [X8+2488]
	021 Move X20, [X31+16]
	022 Move X19, [X31+24]
	023 Move X2, X31
	024 Move X1, [X8]
	025 Move X30, [X31+32]
	026 Call NameValueCollection.get_Item, X0, X1
	027 Return X0
	028 Call 0x1C17F20

Method: System.String createA1(System.String username, System.String password, System.String realm)

Disassembly:
	0x03EA2004 TBNZ X8, 0x0, 0x3EA2028
	0x03EA2008 ADRP X0, 0x25A000
	0x03EA200C LDR X0, [X0 + 0x7A8]
	0x03EA2010 BL 0x1C16CF4
	0x03EA2014 ADRP X0, 0x25A000
	0x03EA2018 LDR X0, [X0 + 0x7B8]
	0x03EA201C BL 0x1C16CF4
	0x03EA2020 MOVZ W8, 0x1
	0x03EA2024 STRB W8, [X20 + 0xF05]
	0x03EA2028 CBZ X19, 0x3EA212C
	0x03EA202C LDR W22, [X19 + 0x10]
	0x03EA2030 CBZ W22, 0x3EA2174
	0x03EA2034 ADRP X8, 0x25A000
	0x03EA2038 LDR X8, [X8 + 0x7A8]
	0x03EA203C MOV X0, X19
	0x03EA2040 MOV X2, X31
	0x03EA2044 LDR X1, [X8]
	0x03EA2048 BL 0x3226F64
	0x03EA204C TBNZ X0, 0x0, 0x3EA206C
	0x03EA2050 ADRP X8, 0x25A000
	0x03EA2054 LDR X8, [X8 + 0x7B8]
	0x03EA2058 MOV X0, X19
	0x03EA205C MOV X2, X31
	0x03EA2060 LDR X1, [X8]
	0x03EA2064 BL 0x3226F64

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x547000
	008 Move X23, 0x29D000
	009 Move W8, [X22+3822]
	010 Move X23, [X23+1592]
	011 Move X20, X2
	012 Move X19, X1
	013 Move X21, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0x29D000
	019 Move X0, [X0+1592]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+3822], W8
	023 Move X0, [X23]
	024 Move X1, X21
	025 Move X2, X20
	026 Move X3, X19
	027 Move X20, [X31+32]
	028 Move X19, [X31+40]
	029 Move X22, [X31+16]
	030 Move X21, [X31+24]
	031 Move X4, X31
	032 Move X30, [X31+48]
	033 Move X23, [X31+56]
	034 Call String.Format, X0, X1, X2, X3
	035 Return X0

Method: System.String createA1(System.String username, System.String password, System.String realm, System.String nonce, System.String cnonce)

Disassembly:
	0x03EA2068 TBZ X0, 0x0, 0x3EA21A4
	0x03EA206C SUB W21, W22, 0x1
	0x03EA2070 MOV X0, X19
	0x03EA2074 MOV W1, W21
	0x03EA2078 MOV X2, X31
	0x03EA207C BL 0x3222A1C
	0x03EA2080 AND W8, W0, 0xFFFF
	0x03EA2084 CMP W8, 0x2F
	0x03EA2088 B.NE 0x3EA2180
	0x03EA208C MOVZ W1, 0x3A
	0x03EA2090 MOV X0, X19
	0x03EA2094 MOV X2, X31
	0x03EA2098 BL 0x322BD98
	0x03EA209C ADD W20, W0, 0x3
	0x03EA20A0 CMP W20, W21
	0x03EA20A4 B.GE 0x3EA2120
	0x03EA20A8 MOV X0, X19
	0x03EA20AC MOV W1, W20
	0x03EA20B0 MOV X2, X31
	0x03EA20B4 BL 0x3222A1C
	0x03EA20B8 AND W8, W0, 0xFFFF
	0x03EA20BC CMP W8, 0x3A
	0x03EA20C0 B.EQ 0x3EA2120
	0x03EA20C4 SUB W3, W22, W20
	0x03EA20C8 MOVZ W1, 0x2F
	0x03EA20CC MOV X0, X19
	0x03EA20D0 MOV W2, W20
	0x03EA20D4 MOV X4, X31
	0x03EA20D8 BL 0x322BDB4
	0x03EA20DC CMP W0, W20
	0x03EA20E0 B.EQ 0x3EA2120
	0x03EA20E4 MOV W21, W0
	0x03EA20E8 SUB W1, W0, 0x1
	0x03EA20EC MOV X0, X19
	0x03EA20F0 MOV X2, X31

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X25, 0x547000
	010 Move X24, 0x29D000
	011 Move W8, [X25+3823]
	012 Move X24, [X24+1592]
	013 Move X19, X4
	014 Move X20, X3
	015 Move X21, X2
	016 Move X22, X1
	017 Move X23, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {27}
	022 Move X0, 0x29D000
	023 Move X0, [X0+1592]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X25+3823], W8
	027 Move X0, X23
	028 Move X1, X22
	029 Move X2, X21
	030 Call AuthenticationResponse.createA1, X0, X1, X2
	031 Call AuthenticationResponse.hash, X0
	032 Move X8, [X24]
	033 Move X2, X20
	034 Move X3, X19
	035 Move X20, [X31+48]
	036 Move X19, [X31+56]
	037 Move X22, [X31+32]
	038 Move X21, [X31+40]
	039 Move X24, [X31+16]
	040 Move X23, [X31+24]
	041 Move X1, X0
	042 Move X0, X8
	043 Move X4, X31
	044 Move X30, [X31+64]
	045 Move X25, [X31+72]
	046 Call String.Format, X0, X1, X2, X3
	047 Return X0

Method: System.String createA2(System.String method, System.String uri)

Disassembly:
	0x03EA2234 ADRP X8, 0x2CB000
	0x03EA2238 LDR X8, [X8 + 0xF0]
	0x03EA223C LDR X9, [X20]
	0x03EA2240 LDR X8, [X8]
	0x03EA2244 CMP X9, X8
	0x03EA2248 CSEL X8, X20, X31, EQ
	0x03EA224C B.EQ 0x3EA2260
	0x03EA2250 LDP X20, X19, [X31 + 0x10]
	0x03EA2254 MOV W0, W31
	0x03EA2258 LDP X30, X21, [X31], #0x20
	0x03EA225C RET
	0x03EA2260 CBZ X8, 0x3EA2280
	0x03EA2264 LDR X0, [X19 + 0x38]
	0x03EA2268 CBZ X0, 0x3EA2280
	0x03EA226C LDR X1, [X8 + 0x38]
	0x03EA2270 LDP X20, X19, [X31 + 0x10]
	0x03EA2274 MOV X2, X31
	0x03EA2278 LDP X30, X21, [X31], #0x20
	0x03EA227C B 0x322693C
	0x03EA2280 BL 0x1C16F20
	0x03EA2284 STR X30, [X31 - 0x10]!
	0x03EA2288 LDR X0, [X0 + 0x38]
	0x03EA228C CBZ X0, 0x3EA22A0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x547000
	007 Move X22, 0x25A000
	008 Move W8, [X21+3824]
	009 Move X22, [X22+4080]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x25A000
	017 Move X0, [X0+4080]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+3824], W8
	021 Move X0, [X22]
	022 Move X1, X20
	023 Move X2, X19
	024 Move X20, [X31+32]
	025 Move X19, [X31+40]
	026 Move X22, [X31+16]
	027 Move X21, [X31+24]
	028 Move X3, X31
	029 Move X30, [X31+48]
	030 Call String.Format, X0, X1, X2
	031 Return X0

Method: System.String createA2(System.String method, System.String uri, System.String entity)

Disassembly:
	0x03EA2290 LDR X8, [X0]
	0x03EA2294 LDP X2, X1, [X8 + 0x158]
	0x03EA2298 LDR X30, [X31], #0x10
	0x03EA229C BR X2
	0x03EA22A0 BL 0x1C16F20
	0x03EA22A4 LDR X0, [X0 + 0x38]
	0x03EA22A8 RET
	0x03EA22AC STR X30, [X31 - 0x20]!
	0x03EA22B0 STP X20, X19, [X31 + 0x10]
	0x03EA22B4 MOV X20, X1
	0x03EA22B8 MOV X1, X31
	0x03EA22BC MOV X19, X0
	0x03EA22C0 BL 0x33BDD8C
	0x03EA22C4 CBZ X20, 0x3EA22E4
	0x03EA22C8 LDR W8, [X20 + 0x10]
	0x03EA22CC CBZ W8, 0x3EA2318
	0x03EA22D0 STR X20, [X19 + 0x38]
	0x03EA22D4 STR W31, [X19 + 0x28]
	0x03EA22D8 LDP X20, X19, [X31 + 0x10]
	0x03EA22DC LDR X30, [X31], #0x20
	0x03EA22E0 RET
	0x03EA22E4 ADRP X0, 0x256000
	0x03EA22E8 LDR X0, [X0 + 0x528]
	0x03EA22EC BL 0x1C16D08
	0x03EA22F0 BL 0x1C16F10
	0x03EA22F4 MOV X19, X0
	0x03EA22F8 ADRP X0, 0x2CC000
	0x03EA22FC LDR X0, [X0 + 0x1C8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x547000
	008 Move X22, 0x29D000
	009 Move W8, [X23+3825]
	010 Move X22, [X22+1592]
	011 Move X21, X2
	012 Move X19, X1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0x29D000
	019 Move X0, [X0+1592]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X23+3825], W8
	023 Move X0, X21
	024 Call AuthenticationResponse.hash, X0
	025 Move X8, [X22]
	026 Move X1, X20
	027 Move X2, X19
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X3, X0
	033 Move X0, X8
	034 Move X4, X31
	035 Move X30, [X31+48]
	036 Move X23, [X31+56]
	037 Call String.Format, X0, X1, X2, X3
	038 Return X0

Method: System.String hash(System.String value)

Disassembly:
	0x03EA20F4 BL 0x3222A1C
	0x03EA20F8 AND W8, W0, 0xFFFF
	0x03EA20FC CMP W8, 0x3A
	0x03EA2100 B.EQ 0x3EA218C
	0x03EA2104 SUB W8, W22, 0x2
	0x03EA2108 CMP W21, W8
	0x03EA210C B.EQ 0x3EA2198
	0x03EA2110 LDP X20, X19, [X31 + 0x20]
	0x03EA2114 LDP X22, X21, [X31 + 0x10]
	0x03EA2118 LDR X30, [X31], #0x30
	0x03EA211C RET
	0x03EA2120 ADRP X0, 0x2CC000
	0x03EA2124 LDR X0, [X0 + 0x198]
	0x03EA2128 B 0x3EA21AC
	0x03EA212C ADRP X0, 0x256000
	0x03EA2130 LDR X0, [X0 + 0x528]
	0x03EA2134 BL 0x1C16D08
	0x03EA2138 BL 0x1C16F10
	0x03EA213C MOV X19, X0
	0x03EA2140 ADRP X0, 0x2CB000
	0x03EA2144 LDR X0, [X0 + 0x3E8]
	0x03EA2148 BL 0x1C16D08
	0x03EA214C MOV X1, X0
	0x03EA2150 MOV X0, X19
	0x03EA2154 MOV X2, X31
	0x03EA2158 BL 0x330E100
	0x03EA215C ADRP X0, 0x2CC000
	0x03EA2160 LDR X0, [X0 + 0x1A0]
	0x03EA2164 BL 0x1C16D08
	0x03EA2168 MOV X1, X0
	0x03EA216C MOV X0, X19
	0x03EA2170 BL 0x1C16DEC
	0x03EA2174 ADRP X0, 0x27A000
	0x03EA2178 LDR X0, [X0 + 0x9B8]
	0x03EA217C B 0x3EA21AC
	0x03EA2180 ADRP X0, 0x2CC000
	0x03EA2184 LDR X0, [X0 + 0x1A8]
	0x03EA2188 B 0x3EA21AC
	0x03EA218C ADRP X0, 0x2CC000
	0x03EA2190 LDR X0, [X0 + 0x1B0]
	0x03EA2194 B 0x3EA21AC
	0x03EA2198 ADRP X0, 0x2CC000
	0x03EA219C LDR X0, [X0 + 0x1B8]
	0x03EA21A0 B 0x3EA21AC
	0x03EA21A4 ADRP X0, 0x2CC000
	0x03EA21A8 LDR X0, [X0 + 0x1C0]
	0x03EA21AC BL 0x1C16D08
	0x03EA21B0 MOV X19, X0
	0x03EA21B4 ADRP X0, 0x259000
	0x03EA21B8 LDR X0, [X0 + 0x578]
	0x03EA21BC BL 0x1C16D08
	0x03EA21C0 BL 0x1C16F10
	0x03EA21C4 MOV X20, X0
	0x03EA21C8 ADRP X0, 0x2CB000
	0x03EA21CC LDR X0, [X0 + 0x3E8]
	0x03EA21D0 BL 0x1C16D08
	0x03EA21D4 MOV X2, X0
	0x03EA21D8 MOV X0, X20
	0x03EA21DC MOV X1, X19
	0x03EA21E0 MOV X3, X31
	0x03EA21E4 BL 0x330E16C
	0x03EA21E8 ADRP X0, 0x2CC000
	0x03EA21EC LDR X0, [X0 + 0x1A0]
	0x03EA21F0 BL 0x1C16D08
	0x03EA21F4 MOV X1, X0
	0x03EA21F8 MOV X0, X20
	0x03EA21FC BL 0x1C16DEC
	0x03EA2200 STP X30, X21, [X31 - 0x20]!
	0x03EA2204 STP X20, X19, [X31 + 0x10]
	0x03EA2208 ADRP X21, 0x546000
	0x03EA220C LDRB W8, [X21 + 0xF06]
	0x03EA2210 MOV X20, X1
	0x03EA2214 MOV X19, X0
	0x03EA2218 TBNZ X8, 0x0, 0x3EA2230
	0x03EA221C ADRP X0, 0x2CB000
	0x03EA2220 LDR X0, [X0 + 0xF0]
	0x03EA2224 BL 0x1C16CF4
	0x03EA2228 MOVZ W8, 0x1
	0x03EA222C STRB W8, [X21 + 0xF06]
	0x03EA2230 CBZ X20, 0x3EA2250

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0x547000
	009 Move W8, [X20+3826]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x252000
	016 Move X0, [X0+2288]
	017 Call 0x1C17CF4
	018 Move X0, 0x285000
	019 Move X0, [X0+848]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X20+3826], W8
	023 Move X0, X31
	024 Move [X31+12], W31
	025 Call Encoding.get_UTF8
	026 Compare X0, 0
	027 JumpIfEqual {91}
	028 Move X8, [X0]
	029 Move X1, X19
	030 Move X9, [X8+616]
	031 Move X2, [X8+624]
	032 NotImplemented "Instruction BLR not yet implemented."
	033 Move X19, X0
	034 Move X0, X31
	035 Call MD5.Create
	036 Compare X0, 0
	037 JumpIfEqual {91}
	038 Move X20, 0x252000
	039 Move X20, [X20+2288]
	040 Move X1, X19
	041 Move X2, X31
	042 Call HashAlgorithm.ComputeHash, X0, X1
	043 Move X8, [X20]
	044 Move X20, X0
	045 Move X0, X8
	046 Call 0x1C17F10
	047 Move W1, 64
	048 Move X2, X31
	049 Move X19, X0
	050 Call StringBuilder..ctor, X0, X1
	051 Compare X20, 0
	052 JumpIfEqual {91}
	053 Move X8, [X20+24]
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Move X22, 0x285000
	056 Move X22, [X22+848]
	057 Move X21, X31
	058 And X8, X8, 0
	059 Add X23, X20, 32
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Move W8, [X23]
	062 Move X1, [X22]
	063 Add X0, X31, 12
	064 Move X2, X31
	065 Move [X31+12], W8
	066 Call Byte.ToString, X0, X1
	067 Compare X19, 0
	068 JumpIfEqual {91}
	069 Move X1, X0
	070 Move X0, X19
	071 Move X2, X31
	072 Call StringBuilder.Append, X0, X1
	073 Move W8, [X20+24]
	074 Add X21, X21, 1
	075 NotImplemented "Instruction CMP not yet implemented."
	076 Compare X19, 0
	077 JumpIfEqual {91}
	078 Move X8, [X19]
	079 Move X0, X19
	080 Move X9, [X8+360]
	081 Move X1, [X8+368]
	082 NotImplemented "Instruction BLR not yet implemented."
	083 Move X20, [X31+48]
	084 Move X19, [X31+56]
	085 Move X22, [X31+32]
	086 Move X21, [X31+40]
	087 Move X30, [X31+16]
	088 Move X23, [X31+24]
	089 Add X31, X31, 64
	090 Return X0
	091 Call 0x1C17F20
	092 Call 0x1C17F28

Method: System.Void initAsDigest()

Disassembly:
	0x03EA1AD8 LDR X30, [X31], #0x20
	0x03EA1ADC B 0x366456C
	0x03EA1AE0 BL 0x1C16F20
	0x03EA1AE4 STR X30, [X31 - 0x20]!
	0x03EA1AE8 STP X20, X19, [X31 + 0x10]
	0x03EA1AEC ADRP X20, 0x547000
	0x03EA1AF0 LDRB W8, [X20 + 0xEFD]
	0x03EA1AF4 MOV X19, X0
	0x03EA1AF8 TBNZ X8, 0x0, 0x3EA1B10
	0x03EA1AFC ADRP X0, 0x253000
	0x03EA1B00 LDR X0, [X0 + 0x870]
	0x03EA1B04 BL 0x1C16CF4
	0x03EA1B08 MOVZ W8, 0x1
	0x03EA1B0C STRB W8, [X20 + 0xEFD]
	0x03EA1B10 LDR X0, [X19 + 0x18]
	0x03EA1B14 CBZ X0, 0x3EA1B34
	0x03EA1B18 ADRP X8, 0x253000
	0x03EA1B1C LDR X8, [X8 + 0x870]
	0x03EA1B20 LDP X20, X19, [X31 + 0x10]
	0x03EA1B24 MOV X2, X31
	0x03EA1B28 LDR X1, [X8]
	0x03EA1B2C LDR X30, [X31], #0x20
	0x03EA1B30 B 0x366456C
	0x03EA1B34 BL 0x1C16F20
	0x03EA1B38 STR X30, [X31 - 0x20]!
	0x03EA1B3C STP X20, X19, [X31 + 0x10]
	0x03EA1B40 ADRP X20, 0x547000
	0x03EA1B44 LDRB W8, [X20 + 0xEFE]
	0x03EA1B48 MOV X19, X0
	0x03EA1B4C TBNZ X8, 0x0, 0x3EA1B64
	0x03EA1B50 ADRP X0, 0x29D000
	0x03EA1B54 LDR X0, [X0 + 0x620]
	0x03EA1B58 BL 0x1C16CF4
	0x03EA1B5C MOVZ W8, 0x1
	0x03EA1B60 STRB W8, [X20 + 0xEFE]
	0x03EA1B64 LDR X0, [X19 + 0x18]
	0x03EA1B68 CBZ X0, 0x3EA1B88
	0x03EA1B6C ADRP X8, 0x29D000
	0x03EA1B70 LDR X8, [X8 + 0x620]
	0x03EA1B74 LDP X20, X19, [X31 + 0x10]
	0x03EA1B78 MOV X2, X31
	0x03EA1B7C LDR X1, [X8]
	0x03EA1B80 LDR X30, [X31], #0x20
	0x03EA1B84 B 0x366456C
	0x03EA1B88 BL 0x1C16F20
	0x03EA1B8C STR X30, [X31 - 0x20]!
	0x03EA1B90 STP X20, X19, [X31 + 0x10]
	0x03EA1B94 ADRP X20, 0x547000
	0x03EA1B98 LDRB W8, [X20 + 0xEFF]
	0x03EA1B9C MOV X19, X0
	0x03EA1BA0 TBNZ X8, 0x0, 0x3EA1BB8
	0x03EA1BA4 ADRP X0, 0x29D000
	0x03EA1BA8 LDR X0, [X0 + 0x618]
	0x03EA1BAC BL 0x1C16CF4
	0x03EA1BB0 MOVZ W8, 0x1
	0x03EA1BB4 STRB W8, [X20 + 0xEFF]
	0x03EA1BB8 LDR X0, [X19 + 0x18]
	0x03EA1BBC CBZ X0, 0x3EA1BDC
	0x03EA1BC0 ADRP X8, 0x29D000
	0x03EA1BC4 LDR X8, [X8 + 0x618]
	0x03EA1BC8 LDP X20, X19, [X31 + 0x10]
	0x03EA1BCC MOV X2, X31
	0x03EA1BD0 LDR X1, [X8]
	0x03EA1BD4 LDR X30, [X31], #0x20
	0x03EA1BD8 B 0x366456C
	0x03EA1BDC BL 0x1C16F20
	0x03EA1BE0 STR X30, [X31 - 0x20]!
	0x03EA1BE4 STP X20, X19, [X31 + 0x10]
	0x03EA1BE8 ADRP X20, 0x547000
	0x03EA1BEC LDRB W8, [X20 + 0xF00]
	0x03EA1BF0 MOV X19, X0
	0x03EA1BF4 TBNZ X8, 0x0, 0x3EA1C0C
	0x03EA1BF8 ADRP X0, 0x29D000
	0x03EA1BFC LDR X0, [X0 + 0x628]
	0x03EA1C00 BL 0x1C16CF4
	0x03EA1C04 MOVZ W8, 0x1
	0x03EA1C08 STRB W8, [X20 + 0xF00]
	0x03EA1C0C LDR X0, [X19 + 0x18]
	0x03EA1C10 CBZ X0, 0x3EA1C30
	0x03EA1C14 ADRP X8, 0x29D000
	0x03EA1C18 LDR X8, [X8 + 0x628]
	0x03EA1C1C LDP X20, X19, [X31 + 0x10]
	0x03EA1C20 MOV X2, X31
	0x03EA1C24 LDR X1, [X8]
	0x03EA1C28 LDR X30, [X31], #0x20
	0x03EA1C2C B 0x366456C
	0x03EA1C30 BL 0x1C16F20
	0x03EA1C34 STR X30, [X31 - 0x20]!
	0x03EA1C38 STP X20, X19, [X31 + 0x10]
	0x03EA1C3C ADRP X20, 0x547000
	0x03EA1C40 LDRB W8, [X20 + 0xF03]
	0x03EA1C44 MOV X19, X0
	0x03EA1C48 TBNZ X8, 0x0, 0x3EA1C60
	0x03EA1C4C ADRP X0, 0x254000
	0x03EA1C50 LDR X0, [X0 + 0x278]
	0x03EA1C54 BL 0x1C16CF4
	0x03EA1C58 MOVZ W8, 0x1
	0x03EA1C5C STRB W8, [X20 + 0xF03]
	0x03EA1C60 LDR W8, [X19 + 0x10]
	0x03EA1C64 CMP W8, 0x1
	0x03EA1C68 B.EQ 0x3EA1C80
	0x03EA1C6C CMP W8, 0x8
	0x03EA1C70 B.NE 0x3EA1C98
	0x03EA1C74 LDR X8, [X19]
	0x03EA1C78 LDP X2, X1, [X8 + 0x178]
	0x03EA1C7C B 0x3EA1C88
	0x03EA1C80 LDR X8, [X19]
	0x03EA1C84 LDP X2, X1, [X8 + 0x188]
	0x03EA1C88 MOV X0, X19
	0x03EA1C8C LDP X20, X19, [X31 + 0x10]
	0x03EA1C90 LDR X30, [X31], #0x20
	0x03EA1C94 BR X2
	0x03EA1C98 ADRP X8, 0x254000
	0x03EA1C9C LDR X8, [X8 + 0x278]
	0x03EA1CA0 LDP X20, X19, [X31 + 0x10]
	0x03EA1CA4 LDR X8, [X8]
	0x03EA1CA8 LDR X8, [X8 + 0xB8]
	0x03EA1CAC LDR X0, [X8]
	0x03EA1CB0 LDR X30, [X31], #0x20
	0x03EA1CB4 RET
	0x03EA1CB8 STP X30, X21, [X31 - 0x20]!
	0x03EA1CBC STP X20, X19, [X31 + 0x10]
	0x03EA1CC0 MOV X20, X1
	0x03EA1CC4 MOV X1, X31
	0x03EA1CC8 MOV X19, X2
	0x03EA1CCC MOV X21, X0
	0x03EA1CD0 BL 0x33BDD8C
	0x03EA1CD4 STP X19, X20, [X21 + 0x18]
	0x03EA1CD8 MOV X1, X20
	0x03EA1CDC LDP X20, X19, [X31 + 0x10]
	0x03EA1CE0 MOV X0, X21
	0x03EA1CE4 LDP X30, X21, [X31], #0x20
	0x03EA1CE8 B 0x3EA1CEC
	0x03EA1CEC STR X30, [X31 - 0x60]!
	0x03EA1CF0 STP X28, X27, [X31 + 0x10]
	0x03EA1CF4 STP X26, X25, [X31 + 0x20]
	0x03EA1CF8 STP X24, X23, [X31 + 0x30]
	0x03EA1CFC STP X22, X21, [X31 + 0x40]
	0x03EA1D00 STP X20, X19, [X31 + 0x50]
	0x03EA1D04 ADRP X21, 0x547000
	0x03EA1D08 LDRB W8, [X21 + 0xF04]
	0x03EA1D0C MOV X20, X1
	0x03EA1D10 MOV X19, X0
	0x03EA1D14 TBNZ X8, 0x0, 0x3EA1D68
	0x03EA1D18 ADRP X0, 0x252000
	0x03EA1D1C LDR X0, [X0 + 0x9D0]
	0x03EA1D20 BL 0x1C16CF4
	0x03EA1D24 ADRP X0, 0x259000
	0x03EA1D28 LDR X0, [X0 + 0xD68]
	0x03EA1D2C BL 0x1C16CF4
	0x03EA1D30 ADRP X0, 0x28E000
	0x03EA1D34 LDR X0, [X0 + 0x5E8]
	0x03EA1D38 BL 0x1C16CF4
	0x03EA1D3C ADRP X0, 0x25A000
	0x03EA1D40 LDR X0, [X0 + 0xFE8]
	0x03EA1D44 BL 0x1C16CF4
	0x03EA1D48 ADRP X0, 0x275000
	0x03EA1D4C LDR X0, [X0 + 0x468]
	0x03EA1D50 BL 0x1C16CF4
	0x03EA1D54 ADRP X0, 0x290000
	0x03EA1D58 LDR X0, [X0 + 0x4C8]
	0x03EA1D5C BL 0x1C16CF4
	0x03EA1D60 MOVZ W8, 0x1
	0x03EA1D64 STRB W8, [X21 + 0xF04]
	0x03EA1D68 CBZ X20, 0x3EA1FB8
	0x03EA1D6C ADRP X26, 0x290000
	0x03EA1D70 LDR X26, [X26 + 0x4C8]
	0x03EA1D74 MOV X0, X20
	0x03EA1D78 MOV X2, X31
	0x03EA1D7C LDR X1, [X26]
	0x03EA1D80 BL 0x3226F64
	0x03EA1D84 TBZ X0, 0x0, 0x3EA1D90
	0x03EA1D88 MOVZ W8, 0x1
	0x03EA1D8C STRB W8, [X19 + 0x40]
	0x03EA1D90 ADRP X28, 0x252000
	0x03EA1D94 ADRP X27, 0x28E000
	0x03EA1D98 LDR W21, [X20 + 0x10]
	0x03EA1D9C LDR X28, [X28 + 0x9D0]
	0x03EA1DA0 LDR X27, [X27 + 0x5E8]
	0x03EA1DA4 MOVZ W1, 0x3A
	0x03EA1DA8 MOV X0, X20
	0x03EA1DAC MOV X2, X31
	0x03EA1DB0 BL 0x322BD98
	0x03EA1DB4 SUB W8, W21, W0
	0x03EA1DB8 ADD W22, W0, 0x3
	0x03EA1DBC ADD W2, W0, 0x4
	0x03EA1DC0 SUB W3, W8, 0x4
	0x03EA1DC4 MOVZ W1, 0x2F
	0x03EA1DC8 MOV X0, X20
	0x03EA1DCC MOV X4, X31
	0x03EA1DD0 BL 0x322BDB4
	0x03EA1DD4 SUB W25, W0, 0x1
	0x03EA1DD8 SUB W23, W0, W22
	0x03EA1DDC MOV W21, W0
	0x03EA1DE0 SUB W3, W23, 0x1
	0x03EA1DE4 MOVZ W1, 0x3A
	0x03EA1DE8 MOV X0, X20
	0x03EA1DEC MOV W2, W25
	0x03EA1DF0 MOV X4, X31
	0x03EA1DF4 BL 0x322C680
	0x03EA1DF8 MOV W24, W0

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X20, 0x548000
	011 Move W8, [X20+3827]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {64}
	017 Move X0, 0x25C000
	018 Move X0, [X0+2264]
	019 Call 0x1C17CF4
	020 Move X0, 0x2CC000
	021 Move X0, [X0+1056]
	022 Call 0x1C17CF4
	023 Move X0, 0x25A000
	024 Move X0, [X0+584]
	025 Call 0x1C17CF4
	026 Move X0, 0x254000
	027 Move X0, [X0+3064]
	028 Call 0x1C17CF4
	029 Move X0, 0x2CE000
	030 Move X0, [X0+368]
	031 Call 0x1C17CF4
	032 Move X0, 0x2CE000
	033 Move X0, [X0+376]
	034 Call 0x1C17CF4
	035 Move X0, 0x25B000
	036 Move X0, [X0+1824]
	037 Call 0x1C17CF4
	038 Move X0, 0x2CE000
	039 Move X0, [X0+208]
	040 Call 0x1C17CF4
	041 Move X0, 0x2CD000
	042 Move X0, [X0+3320]
	043 Call 0x1C17CF4
	044 Move X0, 0x27C000
	045 Move X0, [X0+1232]
	046 Call 0x1C17CF4
	047 Move X0, 0x29E000
	048 Move X0, [X0+1560]
	049 Call 0x1C17CF4
	050 Move X0, 0x2CE000
	051 Move X0, [X0+200]
	052 Call 0x1C17CF4
	053 Move X0, 0x254000
	054 Move X0, [X0+1768]
	055 Call 0x1C17CF4
	056 Move X0, 0x253000
	057 Move X0, [X0+3816]
	058 Call 0x1C17CF4
	059 Move X0, 0x2CE000
	060 Move X0, [X0+384]
	061 Call 0x1C17CF4
	062 Move W8, 1
	063 Move [X20+3827], W8
	064 Move X0, [X19+24]
	065 Compare X0, 0
	066 JumpIfEqual {226}
	067 Move X23, 0x29E000
	068 Move X23, [X23+1560]
	069 Move X2, X31
	070 Move X1, [X23]
	071 Call NameValueCollection.get_Item, X0, X1
	072 Compare X0, 0
	073 JumpIfEqual {193}
	074 Move X8, 0x25C000
	075 Move X8, [X8+2264]
	076 Move X20, X0
	077 Move W1, 1
	078 Move X0, [X8]
	079 Call 0x1C17D6C
	080 Compare X0, 0
	081 JumpIfEqual {226}
	082 Move W8, [X0+24]
	083 Move X1, X0
	084 Compare W8, 0
	085 JumpIfEqual {227}
	086 Move X24, 0x2CE000
	087 Move X24, [X24+376]
	088 Move W8, 44
	089 Move X0, X20
	090 Move X2, X31
	091 NotImplemented "Instruction STRH not yet implemented."
	092 Call String.Split, X0, X1
	093 Move X8, [X24]
	094 Move X20, X0
	095 Move W9, [X8+224]
	096 Compare W9, 0
	097 JumpIfNotEqual {101}
	098 Move X0, X8
	099 Call 0x1C17DFC
	100 Move X8, [X24]
	101 Move X9, [X8+184]
	102 Move X25, 0x25A000
	103 Move X21, [X9+8]
	104 Move X25, [X25+584]
	105 Compare X21, 0
	106 JumpIfNotEqual {129}
	107 Move W9, [X8+224]
	108 Compare W9, 0
	109 JumpIfNotEqual {113}
	110 Move X0, X8
	111 Call 0x1C17DFC
	112 Move X8, [X24]
	113 Move X9, 0x254000
	114 Move X8, [X8+184]
	115 Move X9, [X9+3064]
	116 Move X22, [X8]
	117 Move X0, [X9]
	118 Call 0x1C17F10
	119 Move X8, 0x2CE000
	120 Move X8, [X8+368]
	121 Move X1, X22
	122 Move X3, X31
	123 Move X21, X0
	124 Move X2, [X8]
	125 Call Func`2<Object, Boolean>..ctor, X0, X1, X2
	126 Move X8, [X24]
	127 Move X8, [X8+184]
	128 Move [X8+8], X21
	129 Move X0, [X25]
	130 Move X22, 0x2CC000
	131 Move W8, [X0+224]
	132 Move X22, [X22+1056]
	133 Compare W8, 0
	134 JumpIfNotEqual {136}
	135 Call 0x1C17DFC
	136 Move X2, [X22]
	137 Move X0, X20
	138 Move X1, X21
	139 Call 0x21E2B10, X0, X1
	140 Move X8, [X19+24]
	141 Compare X8, 0
	142 JumpIfEqual {226}
	143 Move X1, [X23]
	144 Move TEMP, X0
	145 And TEMP, TEMP, 1
	146 Compare TEMP, 1
	147 JumpIfNotEqual {189}
	148 Move X9, 0x253000
	149 Move X9, [X9+3816]
	150 Move X0, X8
	151 Move X3, X31
	152 Move X2, [X9]
	153 Call NameValueCollection.set_Item, X0, X1, X2
	154 Move X20, [X19+24]
	155 Call AuthenticationBase.CreateNonceValue
	156 Compare X20, 0
	157 JumpIfEqual {226}
	158 Move X8, 0x2CE000
	159 Move X8, [X8+200]
	160 Move X2, X0
	161 Move X0, X20
	162 Move X3, X31
	163 Move X1, [X8]
	164 Call NameValueCollection.set_Item, X0, X1, X2
	165 Move W8, [X19+32]
	166 Move X9, 0x25B000
	167 Move X20, [X19+24]
	168 Add X1, X31, 12
	169 Add W8, W8, 1
	170 Move [X19+32], W8
	171 Move X9, [X9+1824]
	172 Move [X31+12], W8
	173 Move X0, [X9]
	174 Call 0x1C17E04
	175 Move X8, 0x2CE000
	176 Move X8, [X8+384]
	177 Move X1, X0
	178 Move X2, X31
	179 Move X8, [X8]
	180 Move X0, X8
	181 Call String.Format, X0, X1
	182 Compare X20, 0
	183 JumpIfEqual {226}
	184 Move X8, 0x2CE000
	185 Move X8, [X8+208]
	186 Move X2, X0
	187 Move X0, X20
	188 Move X1, [X8]
	189 Move X0, X8
	190 Move X2, X31
	191 Move X3, X31
	192 Call NameValueCollection.set_Item, X0, X1, X2
	193 Move X0, [X19+24]
	194 Compare X0, 0
	195 JumpIfEqual {226}
	196 Move X8, 0x254000
	197 Move X9, 0x27C000
	198 Move X8, [X8+1768]
	199 Move X9, [X9+1232]
	200 Move X3, X31
	201 Move X1, [X8]
	202 Move X2, [X9]
	203 Call NameValueCollection.set_Item, X0, X1, X2
	204 Move X19, [X19+24]
	205 Move X0, X19
	206 Call AuthenticationResponse.CreateRequestDigest, X0
	207 Compare X19, 0
	208 JumpIfEqual {226}
	209 Move X8, 0x2CD000
	210 Move X8, [X8+3320]
	211 Move X2, X0
	212 Move X0, X19
	213 Move X3, X31
	214 Move X1, [X8]
	215 Call NameValueCollection.set_Item, X0, X1, X2
	216 Move X20, [X31+64]
	217 Move X19, [X31+72]
	218 Move X22, [X31+48]
	219 Move X21, [X31+56]
	220 Move X24, [X31+32]
	221 Move X23, [X31+40]
	222 Move X30, [X31+16]
	223 Move X25, [X31+24]
	224 Add X31, X31, 80
	225 Return 
	226 Call 0x1C17F20
	227 Call 0x1C17F28

Method: System.String CreateRequestDigest(System.Collections.Specialized.NameValueCollection parameters)

Disassembly:
	0x03E9F080 LDR X0, [X26]
	0x03E9F084 ADRP X9, 0x254000
	0x03E9F088 LDR X8, [X0 + 0xB8]
	0x03E9F08C LDR X9, [X9 + 0x618]
	0x03E9F090 LDR W1, [X8]
	0x03E9F094 LDR X0, [X9]
	0x03E9F098 BL 0x1C16D6C
	0x03E9F09C CBZ X22, 0x3E9F178
	0x03E9F0A0 STR X0, [X22 + 0x10]
	0x03E9F0A4 STR W31, [X22 + 0x30]
	0x03E9F0A8 LDR X8, [X26]
	0x03E9F0AC ADD W24, W24, W23
	0x03E9F0B0 LDR X8, [X8 + 0xB8]
	0x03E9F0B4 LDR W8, [X8]
	0x03E9F0B8 STR W8, [X22 + 0x24]
	0x03E9F0BC ADRP X8, 0x2CF000
	0x03E9F0C0 LDR X8, [X8 + 0xF8]
	0x03E9F0C4 LDR X0, [X8]
	0x03E9F0C8 BL 0x1C16F10
	0x03E9F0CC MOV X1, X31
	0x03E9F0D0 MOV X23, X0
	0x03E9F0D4 BL 0x33BDD8C
	0x03E9F0D8 STP W20, W24, [X23 + 0x24]
	0x03E9F0DC STP X22, X21, [X23 + 0x10]
	0x03E9F0E0 STR W25, [X23 + 0x20]
	0x03E9F0E4 ADRP X8, 0x27C000
	0x03E9F0E8 LDR X8, [X8 + 0x720]
	0x03E9F0EC LDR X20, [X22 + 0x10]
	0x03E9F0F0 LDR W21, [X22 + 0x30]
	0x03E9F0F4 LDR W24, [X22 + 0x24]
	0x03E9F0F8 LDR X0, [X8]
	0x03E9F0FC BL 0x1C16F10
	0x03E9F100 ADRP X8, 0x2CF000
	0x03E9F104 LDR X8, [X8 + 0xF0]
	0x03E9F108 MOV X1, X19
	0x03E9F10C MOV X3, X31
	0x03E9F110 MOV X25, X0
	0x03E9F114 LDR X2, [X8]
	0x03E9F118 BL 0x3316570
	0x03E9F11C MOV X0, X19
	0x03E9F120 MOV X1, X20
	0x03E9F124 MOV W2, W21
	0x03E9F128 MOV W3, W24
	0x03E9F12C MOV X4, X25
	0x03E9F130 MOV X5, X23
	0x03E9F134 BL 0x3E98C84
	0x03E9F138 B 0x3E9F14C
	0x03E9F13C CBZ X22, 0x3E9F178
	0x03E9F140 STR W24, [X22 + 0x24]
	0x03E9F144 MOV X0, X22
	0x03E9F148 BL 0x3E91AE8
	0x03E9F14C MOV X0, X22
	0x03E9F150 LDP X20, X19, [X31 + 0x40]
	0x03E9F154 LDP X22, X21, [X31 + 0x30]
	0x03E9F158 LDP X24, X23, [X31 + 0x20]
	0x03E9F15C LDP X26, X25, [X31 + 0x10]
	0x03E9F160 LDR X30, [X31], #0x50
	0x03E9F164 RET
	0x03E9F168 CMP W24, 0x0
	0x03E9F16C CSET W8, EQ
	0x03E9F170 STRB W8, [X19 + 0x61]
	0x03E9F174 CBNZ X22, 0x3E9F140
	0x03E9F178 BL 0x1C16F20
	0x03E9F17C MOV X0, X19
	0x03E9F180 MOV X1, X31
	0x03E9F184 BL 0x33BE520
	0x03E9F188 MOV X19, X0
	0x03E9F18C BL 0x19903C0
	0x03E9F190 LDR X8, [X19]
	0x03E9F194 MOV X0, X19
	0x03E9F198 LDP X9, X1, [X8 + 0x168]
	0x03E9F19C BLR X9
	0x03E9F1A0 MOV X19, X0
	0x03E9F1A4 ADRP X0, 0x27D000
	0x03E9F1A8 LDR X0, [X0 + 0x4B8]
	0x03E9F1AC BL 0x1C16D08
	0x03E9F1B0 BL 0x1C16F10
	0x03E9F1B4 MOV X1, X19
	0x03E9F1B8 MOV X2, X31
	0x03E9F1BC MOV X20, X0
	0x03E9F1C0 BL 0x338C448
	0x03E9F1C4 B 0x3E9F2B8
	0x03E9F1C8 ADRP X0, 0x259000
	0x03E9F1CC LDR X0, [X0 + 0x528]
	0x03E9F1D0 BL 0x1C16D08
	0x03E9F1D4 BL 0x1C16F10
	0x03E9F1D8 MOV X19, X0
	0x03E9F1DC ADRP X0, 0x27F000
	0x03E9F1E0 LDR X0, [X0 + 0xF48]
	0x03E9F1E4 BL 0x1C16D08
	0x03E9F1E8 MOV X1, X0
	0x03E9F1EC MOV X0, X19
	0x03E9F1F0 MOV X2, X31
	0x03E9F1F4 BL 0x330E100
	0x03E9F1F8 ADRP X0, 0x2CF000
	0x03E9F1FC LDR X0, [X0 + 0x108]
	0x03E9F200 BL 0x1C16D08
	0x03E9F204 MOV X1, X0
	0x03E9F208 MOV X0, X19
	0x03E9F20C BL 0x1C16DEC
	0x03E9F210 ADRP X0, 0x2CE000
	0x03E9F214 LDR X0, [X0 + 0xDC0]
	0x03E9F218 BL 0x1C16D08
	0x03E9F21C MOV X19, X0
	0x03E9F220 ADRP X0, 0x25C000
	0x03E9F224 LDR X0, [X0 + 0x760]
	0x03E9F228 BL 0x1C16D08
	0x03E9F22C BL 0x1C16F10
	0x03E9F230 MOV X20, X0
	0x03E9F234 ADRP X0, 0x283000
	0x03E9F238 LDR X0, [X0 + 0xD90]
	0x03E9F23C B 0x3E9F26C
	0x03E9F240 ADRP X0, 0x2CE000
	0x03E9F244 LDR X0, [X0 + 0xDC0]
	0x03E9F248 BL 0x1C16D08
	0x03E9F24C MOV X19, X0
	0x03E9F250 ADRP X0, 0x25C000
	0x03E9F254 LDR X0, [X0 + 0x760]
	0x03E9F258 BL 0x1C16D08
	0x03E9F25C BL 0x1C16F10
	0x03E9F260 MOV X20, X0
	0x03E9F264 ADRP X0, 0x27C000
	0x03E9F268 LDR X0, [X0 + 0x648]
	0x03E9F26C BL 0x1C16D08
	0x03E9F270 MOV X1, X0
	0x03E9F274 MOV X0, X20
	0x03E9F278 MOV X2, X19
	0x03E9F27C MOV X3, X31
	0x03E9F280 BL 0x3311888
	0x03E9F284 B 0x3E9F2B8
	0x03E9F288 ADRP X0, 0x2CE000
	0x03E9F28C LDR X0, [X0 + 0xDC8]
	0x03E9F290 BL 0x1C16D08
	0x03E9F294 MOV X19, X0
	0x03E9F298 ADRP X0, 0x25C000
	0x03E9F29C LDR X0, [X0 + 0x578]
	0x03E9F2A0 BL 0x1C16D08
	0x03E9F2A4 BL 0x1C16F10
	0x03E9F2A8 MOV X1, X19
	0x03E9F2AC MOV X2, X31
	0x03E9F2B0 MOV X20, X0
	0x03E9F2B4 BL 0x3314A68
	0x03E9F2B8 ADRP X0, 0x2CF000
	0x03E9F2BC LDR X0, [X0 + 0x108]
	0x03E9F2C0 BL 0x1C16D08
	0x03E9F2C4 MOV X1, X0
	0x03E9F2C8 MOV X0, X20
	0x03E9F2CC BL 0x1C16DEC
	0x03E9F2D0 LDRB W8, [X0 + 0x60]
	0x03E9F2D4 CBZ W8, 0x3E9F2DC
	0x03E9F2D8 RET
	0x03E9F2DC MOVZ W8, 0x1
	0x03E9F2E0 STRB W8, [X0 + 0x34]
	0x03E9F2E4 STRB W8, [X0 + 0x60]
	0x03E9F2E8 RET
	0x03E9F2EC STP X30, X21, [X31 - 0x20]!
	0x03E9F2F0 STP X20, X19, [X31 + 0x10]
	0x03E9F2F4 ADRP X21, 0x549000
	0x03E9F2F8 LDRB W8, [X21 + 0xEDA]
	0x03E9F2FC MOV X19, X1
	0x03E9F300 MOV X20, X0
	0x03E9F304 TBNZ X8, 0x0, 0x3E9F31C
	0x03E9F308 ADRP X0, 0x2CE000
	0x03E9F30C LDR X0, [X0 + 0xDB0]
	0x03E9F310 BL 0x1C16CF4
	0x03E9F314 MOVZ W8, 0x1
	0x03E9F318 STRB W8, [X21 + 0xEDA]
	0x03E9F31C LDRB W8, [X20 + 0x60]
	0x03E9F320 CBNZ W8, 0x3E9F3F8
	0x03E9F324 CBZ X19, 0x3E9F444
	0x03E9F328 ADRP X8, 0x2CE000
	0x03E9F32C LDR X8, [X8 + 0xDB0]
	0x03E9F330 LDR X9, [X19]
	0x03E9F334 LDR X8, [X8]
	0x03E9F338 LDRB W11, [X9 + 0x130]
	0x03E9F33C LDRB W10, [X8 + 0x130]
	0x03E9F340 CMP W11, W10
	0x03E9F344 B.CC 0x3E9F3B0
	0x03E9F348 LDR X9, [X9 + 0xC8]
	0x03E9F34C ADD X9, X9, X10, 0x3, LSL
	0x03E9F350 LDUR X9, [X9 - 0x8]
	0x03E9F354 CMP X9, X8
	0x03E9F358 B.NE 0x3E9F3B0
	0x03E9F35C LDR X20, [X19 + 0x40]
	0x03E9F360 MOV X1, X31
	0x03E9F364 MOV X0, X20
	0x03E9F368 BL 0x33E14E0
	0x03E9F36C LDRB W21, [X19 + 0x20]
	0x03E9F370 MOV X0, X20
	0x03E9F374 MOV X1, X31
	0x03E9F378 BL 0x33E14E4
	0x03E9F37C CBNZ W21, 0x3E9F398
	0x03E9F380 MOV X0, X19
	0x03E9F384 BL 0x3E9199C
	0x03E9F388 CBZ X0, 0x3E9F4D8
	0x03E9F38C LDR X8, [X0]
	0x03E9F390 LDP X9, X1, [X8 + 0x1D8]
	0x03E9F394 BLR X9
	0x03E9F398 LDR X8, [X19 + 0x28]
	0x03E9F39C CBNZ X8, 0x3E9F48C
	0x03E9F3A0 LDR W0, [X19 + 0x24]
	0x03E9F3A4 LDP X20, X19, [X31 + 0x10]
	0x03E9F3A8 LDP X30, X21, [X31], #0x20
	0x03E9F3AC RET
	0x03E9F3B0 ADRP X0, 0x2CE000
	0x03E9F3B4 LDR X0, [X0 + 0x390]
	0x03E9F3B8 BL 0x1C16D08
	0x03E9F3BC MOV X19, X0
	0x03E9F3C0 ADRP X0, 0x25C000
	0x03E9F3C4 LDR X0, [X0 + 0x578]
	0x03E9F3C8 BL 0x1C16D08
	0x03E9F3CC BL 0x1C16F10
	0x03E9F3D0 MOV X20, X0
	0x03E9F3D4 ADRP X0, 0x27F000
	0x03E9F3D8 LDR X0, [X0 + 0xDD0]
	0x03E9F3DC BL 0x1C16D08
	0x03E9F3E0 MOV X2, X0
	0x03E9F3E4 MOV X0, X20
	0x03E9F3E8 MOV X1, X19
	0x03E9F3EC MOV X3, X31
	0x03E9F3F0 BL 0x330E16C
	0x03E9F3F4 B 0x3E9F4C0
	0x03E9F3F8 MOV X0, X20
	0x03E9F3FC MOV X1, X31
	0x03E9F400 BL 0x33BE520
	0x03E9F404 MOV X19, X0
	0x03E9F408 BL 0x19903C0
	0x03E9F40C LDR X8, [X19]
	0x03E9F410 MOV X0, X19
	0x03E9F414 LDP X9, X1, [X8 + 0x168]
	0x03E9F418 BLR X9
	0x03E9F41C MOV X19, X0
	0x03E9F420 ADRP X0, 0x27D000
	0x03E9F424 LDR X0, [X0 + 0x4B8]
	0x03E9F428 BL 0x1C16D08
	0x03E9F42C BL 0x1C16F10
	0x03E9F430 MOV X1, X19
	0x03E9F434 MOV X2, X31
	0x03E9F438 MOV X20, X0
	0x03E9F43C BL 0x338C448
	0x03E9F440 B 0x3E9F4C0
	0x03E9F444 ADRP X0, 0x259000
	0x03E9F448 LDR X0, [X0 + 0x528]
	0x03E9F44C BL 0x1C16D08
	0x03E9F450 BL 0x1C16F10
	0x03E9F454 MOV X19, X0
	0x03E9F458 ADRP X0, 0x27F000
	0x03E9F45C LDR X0, [X0 + 0xDD0]
	0x03E9F460 BL 0x1C16D08
	0x03E9F464 MOV X1, X0
	0x03E9F468 MOV X0, X19
	0x03E9F46C MOV X2, X31
	0x03E9F470 BL 0x330E100
	0x03E9F474 ADRP X0, 0x2CF000
	0x03E9F478 LDR X0, [X0 + 0x110]
	0x03E9F47C BL 0x1C16D08
	0x03E9F480 MOV X1, X0
	0x03E9F484 MOV X0, X19
	0x03E9F488 BL 0x1C16DEC
	0x03E9F48C ADRP X0, 0x2CF000
	0x03E9F490 LDR X0, [X0 + 0x118]
	0x03E9F494 BL 0x1C16D08
	0x03E9F498 MOV X19, X0
	0x03E9F49C ADRP X0, 0x2CE000
	0x03E9F4A0 LDR X0, [X0 + 0x28]
	0x03E9F4A4 BL 0x1C16D08
	0x03E9F4A8 BL 0x1C16F10
	0x03E9F4AC MOVZ W1, 0x3E3
	0x03E9F4B0 MOV X2, X19
	0x03E9F4B4 MOV X3, X31
	0x03E9F4B8 MOV X20, X0
	0x03E9F4BC BL 0x3E86858
	0x03E9F4C0 ADRP X0, 0x2CF000
	0x03E9F4C4 LDR X0, [X0 + 0x110]
	0x03E9F4C8 BL 0x1C16D08
	0x03E9F4CC MOV X1, X0
	0x03E9F4D0 MOV X0, X20
	0x03E9F4D4 BL 0x1C16DEC
	0x03E9F4D8 BL 0x1C16F20
	0x03E9F4DC STP X30, X19, [X31 - 0x10]!

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X20, 0x54A000
	015 Move W8, [X20+3828]
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {71}
	021 Move X0, 0x255000
	022 Move X0, [X0+2512]
	023 Call 0x1C17CF4
	024 Move X0, 0x285000
	025 Move X0, [X0+3608]
	026 Call 0x1C17CF4
	027 Move X0, 0x2D0000
	028 Move X0, [X0+208]
	029 Call 0x1C17CF4
	030 Move X0, 0x256000
	031 Move X0, [X0+2160]
	032 Call 0x1C17CF4
	033 Move X0, 0x2A0000
	034 Move X0, [X0+1608]
	035 Call 0x1C17CF4
	036 Move X0, 0x2A0000
	037 Move X0, [X0+1560]
	038 Call 0x1C17CF4
	039 Move X0, 0x2D0000
	040 Move X0, [X0+200]
	041 Call 0x1C17CF4
	042 Move X0, 0x256000
	043 Move X0, [X0+1768]
	044 Call 0x1C17CF4
	045 Move X0, 0x29E000
	046 Move X0, [X0+2776]
	047 Call 0x1C17CF4
	048 Move X0, 0x25D000
	049 Move X0, [X0+4080]
	050 Call 0x1C17CF4
	051 Move X0, 0x2A0000
	052 Move X0, [X0+1576]
	053 Call 0x1C17CF4
	054 Move X0, 0x2CF000
	055 Move X0, [X0+3328]
	056 Call 0x1C17CF4
	057 Move X0, 0x2CE000
	058 Move X0, [X0+2488]
	059 Call 0x1C17CF4
	060 Move X0, 0x27F000
	061 Move X0, [X0+3256]
	062 Call 0x1C17CF4
	063 Move X0, 0x2D0000
	064 Move X0, [X0+216]
	065 Call 0x1C17CF4
	066 Move X0, 0x2A0000
	067 Move X0, [X0+1600]
	068 Call 0x1C17CF4
	069 Move W8, 1
	070 Move [X20+3828], W8
	071 Compare X19, 0
	072 JumpIfEqual {310}
	073 Move X8, 0x2CE000
	074 Move X8, [X8+2488]
	075 Move X20, 0x27F000
	076 Move X22, 0x2A0000
	077 Move X24, 0x256000
	078 Move X28, 0x285000
	079 Move X29, 0x29E000
	080 Move X23, 0x2A0000
	081 Move X20, [X20+3256]
	082 Move X22, [X22+1576]
	083 Move X24, [X24+2160]
	084 Move X28, [X28+3608]
	085 Move X29, [X29+2776]
	086 Move X23, [X23+1560]
	087 Move X1, [X8]
	088 Move X21, 0x2D0000
	089 Move X21, [X21+200]
	090 Move X0, X19
	091 Move X2, X31
	092 Call NameValueCollection.get_Item, X0, X1
	093 Move X1, [X20]
	094 Move X25, X0
	095 Move X0, X19
	096 Move X2, X31
	097 Call NameValueCollection.get_Item, X0, X1
	098 Move X1, [X22]
	099 Move X26, X0
	100 Move X0, X19
	101 Move X2, X31
	102 Call NameValueCollection.get_Item, X0, X1
	103 Move X1, [X24]
	104 Move X27, X0
	105 Move X0, X19
	106 Move X2, X31
	107 Call NameValueCollection.get_Item, X0, X1
	108 Move X1, [X28]
	109 Move X22, X0
	110 Move X0, X19
	111 Move X2, X31
	112 Call NameValueCollection.get_Item, X0, X1
	113 Move X1, [X29]
	114 Move [X31+8], X0
	115 Move X0, X19
	116 Move X2, X31
	117 Call NameValueCollection.get_Item, X0, X1
	118 Move X1, [X23]
	119 Move X29, X0
	120 Move X0, X19
	121 Move X2, X31
	122 Call NameValueCollection.get_Item, X0, X1
	123 Move X1, [X21]
	124 Move X20, X0
	125 Move X0, X19
	126 Move X2, X31
	127 Call NameValueCollection.get_Item, X0, X1
	128 Move X8, 0x2D0000
	129 Move X8, [X8+208]
	130 Move X21, X0
	131 Move X0, X19
	132 Move X2, X31
	133 Move X1, [X8]
	134 Call NameValueCollection.get_Item, X0, X1
	135 Move X8, 0x256000
	136 Move X8, [X8+1768]
	137 Move X23, X0
	138 Move X0, X19
	139 Move X2, X31
	140 Move X1, [X8]
	141 Call NameValueCollection.get_Item, X0, X1
	142 Move X28, X0
	143 Compare X29, 0
	144 JumpIfEqual {163}
	145 Move X24, 0x2A0000
	146 Move X24, [X24+1600]
	147 Move X0, X29
	148 Move X1, X31
	149 Call String.ToLower, X0
	150 Move X1, [X24]
	151 Move X2, X31
	152 Call String.op_Equality, X0, X1
	153 Move TEMP, X0
	154 And TEMP, TEMP, 1
	155 Compare TEMP, 1
	156 JumpIfNotEqual {163}
	157 Move X0, X25
	158 Move X1, X26
	159 Move X2, X27
	160 Move X3, X22
	161 Move X4, X21
	162 Call AuthenticationResponse.createA1, X0, X1, X2, X3, X4
	163 Move X0, X25
	164 Move X1, X26
	165 Move X2, X27
	166 Call AuthenticationResponse.createA1, X0, X1, X2
	167 Move X26, 0x25D000
	168 Move X26, [X26+4080]
	169 Move X25, X0
	170 Compare X20, 0
	171 JumpIfEqual {198}
	172 Move X24, 0x2A0000
	173 Move X24, [X24+1608]
	174 Move X0, X20
	175 Move X1, X31
	176 Call String.ToLower, X0
	177 Move X1, [X24]
	178 Move X2, X31
	179 Call String.op_Equality, X0, X1
	180 Move TEMP, X0
	181 And TEMP, TEMP, 1
	182 Compare TEMP, 1
	183 JumpIfNotEqual {198}
	184 Move X8, 0x2CF000
	185 Move X8, [X8+3328]
	186 Move X0, X19
	187 Move X2, X31
	188 Move X1, [X8]
	189 Call NameValueCollection.get_Item, X0, X1
	190 Move X1, [X31+8]
	191 Move X2, X0
	192 Move X0, X28
	193 Call AuthenticationResponse.createA2, X0, X1, X2
	194 Move X24, X0
	195 Move X0, X25
	196 Call AuthenticationResponse.hash, X0
	197 Move X19, X0
	198 Move X1, [X31+8]
	199 Move X0, X28
	200 Call AuthenticationResponse.createA2, X0, X1
	201 Move X24, X0
	202 Move X0, X25
	203 Call AuthenticationResponse.hash, X0
	204 Move X19, X0
	205 Compare X20, 0
	206 JumpIfEqual {278}
	207 Move X8, 0x255000
	208 Move X8, [X8+2512]
	209 Move W1, 5
	210 Move X0, [X8]
	211 Call 0x1C17D6C
	212 Compare X0, 0
	213 JumpIfEqual {310}
	214 Move X25, X0
	215 Compare X22, 0
	216 JumpIfEqual {223}
	217 Move X8, [X25]
	218 Move X0, X22
	219 Move X1, [X8+64]
	220 Call 0x1C17E00
	221 Compare X0, 0
	222 JumpIfEqual {307}
	223 Move W8, [X25+24]
	224 Compare W8, 0
	225 JumpIfEqual {306}
	226 Move [X25+32], X22
	227 Compare X23, 0
	228 JumpIfEqual {236}
	229 Move X8, [X25]
	230 Move X0, X23
	231 Move X1, [X8+64]
	232 Call 0x1C17E00
	233 Compare X0, 0
	234 JumpIfEqual {307}
	235 Move W8, [X25+24]
	236 NotImplemented "Instruction CMP not yet implemented."
	237 Move [X25+40], X23
	238 Compare X21, 0
	239 JumpIfEqual {247}
	240 Move X8, [X25]
	241 Move X0, X21
	242 Move X1, [X8+64]
	243 Call 0x1C17E00
	244 Compare X0, 0
	245 JumpIfEqual {307}
	246 Move W8, [X25+24]
	247 NotImplemented "Instruction CMP not yet implemented."
	248 Move X8, [X25]
	249 Move [X25+48], X21
	250 Move X0, X20
	251 Move X1, [X8+64]
	252 Call 0x1C17E00
	253 Compare X0, 0
	254 JumpIfEqual {307}
	255 Move W8, [X25+24]
	256 NotImplemented "Instruction CMP not yet implemented."
	257 Move X0, X24
	258 Move [X25+56], X20
	259 Call AuthenticationResponse.hash, X0
	260 Move X20, X0
	261 Compare X0, 0
	262 JumpIfEqual {269}
	263 Move X8, [X25]
	264 Move X0, X20
	265 Move X1, [X8+64]
	266 Call 0x1C17E00
	267 Compare X0, 0
	268 JumpIfEqual {307}
	269 Move W8, [X25+24]
	270 NotImplemented "Instruction CMP not yet implemented."
	271 Move X8, 0x2D0000
	272 Move X8, [X8+216]
	273 Move [X25+64], X20
	274 Move X1, X25
	275 Move X2, X31
	276 Move X0, [X8]
	277 Call String.Format, X0, X1
	278 Move X0, X24
	279 Call AuthenticationResponse.hash, X0
	280 Move X8, [X26]
	281 Move X2, X0
	282 Move X1, X22
	283 Move X3, X31
	284 Move X0, X8
	285 Call String.Format, X0, X1, X2
	286 Move X2, X0
	287 Move X0, [X26]
	288 Move X1, X19
	289 Move X3, X31
	290 Call String.Format, X0, X1, X2
	291 Move X20, [X31+96]
	292 Move X19, [X31+104]
	293 Move X22, [X31+80]
	294 Move X21, [X31+88]
	295 Move X24, [X31+64]
	296 Move X23, [X31+72]
	297 Move X26, [X31+48]
	298 Move X25, [X31+56]
	299 Move X28, [X31+32]
	300 Move X27, [X31+40]
	301 Move X29, [X31+16]
	302 Move X30, [X31+24]
	303 Add X31, X31, 112
	304 Call AuthenticationResponse.hash, X0
	305 Return X0
	306 Call 0x1C17F28
	307 Call 0x1C17F44
	308 Move X1, X31
	309 Call 0x1C17DEC
	310 Call 0x1C17F20

Method: WebSocketSharp.Net.AuthenticationResponse Parse(System.String value)

Disassembly:
	0x03E97B0C STP X20, X19, [X31 + 0x10]
	0x03E97B10 ADRP X21, 0x551000
	0x03E97B14 LDRB W8, [X21 + 0xE8F]
	0x03E97B18 MOV X19, X1
	0x03E97B1C MOV X20, X0
	0x03E97B20 TBNZ X8, 0x0, 0x3E97B38
	0x03E97B24 ADRP X0, 0x2D5000
	0x03E97B28 LDR X0, [X0 + 0x368]
	0x03E97B2C BL 0x1C16CF4
	0x03E97B30 MOVZ W8, 0x1
	0x03E97B34 STRB W8, [X21 + 0xE8F]
	0x03E97B38 CBZ X20, 0x3E97BDC
	0x03E97B3C LDR W8, [X20 + 0x10]
	0x03E97B40 CBZ W8, 0x3E97BC8
	0x03E97B44 MOV X0, X31
	0x03E97B48 BL 0x3242EC8
	0x03E97B4C CBZ X0, 0x3E97BD8
	0x03E97B50 LDR X8, [X0]
	0x03E97B54 MOV X1, X20
	0x03E97B58 LDR X9, [X8 + 0x268]
	0x03E97B5C LDR X2, [X8 + 0x270]
	0x03E97B60 BLR X9
	0x03E97B64 MOV X20, X0
	0x03E97B68 CBNZ X19, 0x3E97B78
	0x03E97B6C MOV X0, X31
	0x03E97B70 BL 0x3241948
	0x03E97B74 MOV X19, X0
	0x03E97B78 CBZ X20, 0x3E97BD8
	0x03E97B7C ADRP X8, 0x2D5000
	0x03E97B80 LDR X8, [X8 + 0x368]
	0x03E97B84 LDR X0, [X8]
	0x03E97B88 LDR W8, [X0 + 0xE0]
	0x03E97B8C CBNZ W8, 0x3E97B94
	0x03E97B90 BL 0x1C16DFC
	0x03E97B94 LDR W2, [X20 + 0x18]
	0x03E97B98 MOV X0, X20
	0x03E97B9C MOV W1, W31
	0x03E97BA0 BL 0x3E95D88
	0x03E97BA4 CBZ X19, 0x3E97BD8
	0x03E97BA8 LDR X8, [X19]
	0x03E97BAC MOV X1, X0
	0x03E97BB0 MOV X0, X19
	0x03E97BB4 LDP X20, X19, [X31 + 0x10]
	0x03E97BB8 LDR X3, [X8 + 0x378]
	0x03E97BBC LDR X2, [X8 + 0x380]
	0x03E97BC0 LDP X30, X21, [X31], #0x20
	0x03E97BC4 BR X3
	0x03E97BC8 MOV X0, X20
	0x03E97BCC LDP X20, X19, [X31 + 0x10]
	0x03E97BD0 LDP X30, X21, [X31], #0x20
	0x03E97BD4 RET
	0x03E97BD8 BL 0x1C16F20
	0x03E97BDC ADRP X0, 0x261000
	0x03E97BE0 LDR X0, [X0 + 0x528]
	0x03E97BE4 BL 0x1C16D08
	0x03E97BE8 BL 0x1C16F10
	0x03E97BEC MOV X19, X0
	0x03E97BF0 ADRP X0, 0x285000
	0x03E97BF4 LDR X0, [X0 + 0xCC0]
	0x03E97BF8 BL 0x1C16D08
	0x03E97BFC MOV X1, X0
	0x03E97C00 MOV X0, X19
	0x03E97C04 MOV X2, X31
	0x03E97C08 BL 0x330E100
	0x03E97C0C ADRP X0, 0x2D6000
	0x03E97C10 LDR X0, [X0 + 0xD38]
	0x03E97C14 BL 0x1C16D08
	0x03E97C18 MOV X1, X0
	0x03E97C1C MOV X0, X19
	0x03E97C20 BL 0x1C16DEC
	0x03E97C24 STR X30, [X31 - 0x30]!
	0x03E97C28 STP X22, X21, [X31 + 0x10]
	0x03E97C2C STP X20, X19, [X31 + 0x20]
	0x03E97C30 ADRP X21, 0x551000
	0x03E97C34 LDRB W8, [X21 + 0xE8E]
	0x03E97C38 MOV X19, X1
	0x03E97C3C MOV X20, X0
	0x03E97C40 TBNZ X8, 0x0, 0x3E97C64
	0x03E97C44 ADRP X0, 0x2D5000
	0x03E97C48 LDR X0, [X0 + 0x368]
	0x03E97C4C BL 0x1C16CF4
	0x03E97C50 ADRP X0, 0x25E000
	0x03E97C54 LDR X0, [X0 + 0x278]
	0x03E97C58 BL 0x1C16CF4
	0x03E97C5C MOVZ W8, 0x1
	0x03E97C60 STRB W8, [X21 + 0xE8E]
	0x03E97C64 CBZ X20, 0x3E97CF8
	0x03E97C68 LDR W21, [X20 + 0x18]
	0x03E97C6C CMP W21, 0x0
	0x03E97C70 B.LE 0x3E97CD4
	0x03E97C74 ADRP X22, 0x2D5000
	0x03E97C78 LDR X22, [X22 + 0x368]
	0x03E97C7C CBNZ X19, 0x3E97C8C
	0x03E97C80 MOV X0, X31
	0x03E97C84 BL 0x3241948
	0x03E97C88 MOV X19, X0
	0x03E97C8C LDR X0, [X22]
	0x03E97C90 LDR W8, [X0 + 0xE0]
	0x03E97C94 CBNZ W8, 0x3E97C9C
	0x03E97C98 BL 0x1C16DFC
	0x03E97C9C MOV X0, X20
	0x03E97CA0 MOV W1, W31
	0x03E97CA4 MOV W2, W21
	0x03E97CA8 BL 0x3E95D88
	0x03E97CAC CBZ X19, 0x3E97D40
	0x03E97CB0 LDR X8, [X19]
	0x03E97CB4 MOV X1, X0
	0x03E97CB8 MOV X0, X19
	0x03E97CBC LDP X20, X19, [X31 + 0x20]
	0x03E97CC0 LDR X3, [X8 + 0x378]
	0x03E97CC4 LDR X2, [X8 + 0x380]
	0x03E97CC8 LDP X22, X21, [X31 + 0x10]
	0x03E97CCC LDR X30, [X31], #0x30
	0x03E97CD0 BR X3
	0x03E97CD4 ADRP X8, 0x25E000
	0x03E97CD8 LDR X8, [X8 + 0x278]
	0x03E97CDC LDP X20, X19, [X31 + 0x20]
	0x03E97CE0 LDP X22, X21, [X31 + 0x10]
	0x03E97CE4 LDR X8, [X8]
	0x03E97CE8 LDR X8, [X8 + 0xB8]
	0x03E97CEC LDR X0, [X8]
	0x03E97CF0 LDR X30, [X31], #0x30
	0x03E97CF4 RET
	0x03E97CF8 ADRP X0, 0x261000
	0x03E97CFC LDR X0, [X0 + 0x528]
	0x03E97D00 BL 0x1C16D08
	0x03E97D04 BL 0x1C16F10
	0x03E97D08 MOV X19, X0
	0x03E97D0C ADRP X0, 0x28B000
	0x03E97D10 LDR X0, [X0 + 0x308]
	0x03E97D14 BL 0x1C16D08
	0x03E97D18 MOV X1, X0
	0x03E97D1C MOV X0, X19
	0x03E97D20 MOV X2, X31
	0x03E97D24 BL 0x330E100
	0x03E97D28 ADRP X0, 0x2D6000
	0x03E97D2C LDR X0, [X0 + 0xD40]
	0x03E97D30 BL 0x1C16D08
	0x03E97D34 MOV X1, X0
	0x03E97D38 MOV X0, X19
	0x03E97D3C BL 0x1C16DEC
	0x03E97D40 BL 0x1C16F20
	0x03E97D44 STP X30, X23, [X31 - 0x30]!

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x552000
	006 Move X21, 0x266000
	007 Move W8, [X20+3829]
	008 Move X21, [X21+2264]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {28}
	014 Move X0, 0x2D6000
	015 Move X0, [X0+1696]
	016 Call 0x1C17CF4
	017 Move X0, 0x266000
	018 Move X0, [X0+2264]
	019 Call 0x1C17CF4
	020 Move X0, 0x2A7000
	021 Move X0, [X0+2664]
	022 Call 0x1C17CF4
	023 Move X0, 0x2A8000
	024 Move X0, [X0+1688]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X20+3829], W8
	028 Move X0, [X21]
	029 Move W1, 1
	030 Call 0x1C17D6C
	031 Move X1, X0
	032 Compare X1, 0
	033 JumpIfEqual {103}
	034 Move W8, [X1+24]
	035 Compare W8, 0
	036 JumpIfEqual {104}
	037 Move W8, 32
	038 NotImplemented "Instruction STRH not yet implemented."
	039 Compare X19, 0
	040 JumpIfEqual {105}
	041 Move W2, 2
	042 Move X0, X19
	043 Move X3, X31
	044 Call String.Split, X0, X1, X2
	045 Move X19, X0
	046 Compare X0, 0
	047 JumpIfEqual {106}
	048 Move W8, [X19+24]
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Move X0, [X19+32]
	051 Compare X0, 0
	052 JumpIfEqual {107}
	053 Move X1, X31
	054 Call String.ToLower, X0
	055 Move X8, 0x2A7000
	056 Move X8, [X8+2664]
	057 Move X20, X0
	058 Move X1, [X8]
	059 Move X2, X31
	060 Call String.op_Equality, X0, X1
	061 Move TEMP, X0
	062 And TEMP, TEMP, 1
	063 Compare TEMP, 1
	064 JumpIfNotEqual {78}
	065 Move W8, [X19+24]
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Move X0, [X19+40]
	068 Call AuthenticationResponse.ParseBasicCredentials, X0
	069 Move X8, 0x2D6000
	070 Move X8, [X8+1696]
	071 Move X20, X0
	072 Move X0, [X8]
	073 Call 0x1C17F10
	074 Move X19, X0
	075 Move X1, X31
	076 Call Object..ctor, X0
	077 Move W8, 8
	078 Move X8, 0x2A8000
	079 Move X8, [X8+1688]
	080 Move X1, [X8]
	081 Move X0, X20
	082 Move X2, X31
	083 Call String.op_Equality, X0, X1
	084 Move TEMP, X0
	085 And TEMP, TEMP, 1
	086 Compare TEMP, 1
	087 JumpIfNotEqual {126}
	088 Move W8, [X19+24]
	089 NotImplemented "Instruction CMP not yet implemented."
	090 Move X0, [X19+40]
	091 Call AuthenticationBase.ParseParameters, X0
	092 Move X8, 0x2D6000
	093 Move X8, [X8+1696]
	094 Move X20, X0
	095 Move X0, [X8]
	096 Call 0x1C17F10
	097 Move X19, X0
	098 Move X1, X31
	099 Call Object..ctor, X0
	100 Move W8, 1
	101 Move [X19+16], W8
	102 Move [X19+24], X20
	103 Call 0x1C17F20
	104 Call 0x1C17F28
	105 Call 0x1C17F20
	106 Call 0x1C17F20
	107 Call 0x1C17F20
	108 Call 0x1C17F28
	109 Call 0x1C17F28
	110 Move X19, X0
	111 NotImplemented "Instruction CMP not yet implemented."
	112 Move X0, X19
	113 Call 0x3EB2AD0
	114 Move X19, X0
	115 Move X0, 0x263000
	116 Move X0, [X0+3264]
	117 Call 0x1C17D08
	118 Move X8, [X19]
	119 Move X1, [X8]
	120 Call 0x1C18270
	121 Move TEMP, X0
	122 And TEMP, TEMP, 1
	123 Compare TEMP, 1
	124 JumpIfNotEqual {133}
	125 Call 0x3EB2AE0
	126 Move X19, X31
	127 Move X0, X19
	128 Move X20, [X31+16]
	129 Move X19, [X31+24]
	130 Move X30, [X31+32]
	131 Move X21, [X31+40]
	132 Return X0
	133 Move W0, 8
	134 Call 0x3EB2AF0
	135 Move X8, [X19]
	136 Move [X0], X8
	137 Move X1, 0x1E000
	138 Add X1, X1, 3672
	139 Move X2, X31
	140 Call 0x3EB2B00
	141 Move X19, X0
	142 Call 0x3EB2AE0
	143 Move X0, X19
	144 Call 0x1D2D690
	145 Call 0x1991590

Method: System.Collections.Specialized.NameValueCollection ParseBasicCredentials(System.String value)

Disassembly:
	0x03EA2300 BL 0x1C16D08
	0x03EA2304 MOV X1, X0
	0x03EA2308 MOV X0, X19
	0x03EA230C MOV X2, X31
	0x03EA2310 BL 0x330E100
	0x03EA2314 B 0x3EA235C
	0x03EA2318 ADRP X0, 0x259000
	0x03EA231C LDR X0, [X0 + 0x578]
	0x03EA2320 BL 0x1C16D08
	0x03EA2324 BL 0x1C16F10
	0x03EA2328 MOV X19, X0
	0x03EA232C ADRP X0, 0x27A000
	0x03EA2330 LDR X0, [X0 + 0x9B8]
	0x03EA2334 BL 0x1C16D08
	0x03EA2338 MOV X20, X0
	0x03EA233C ADRP X0, 0x2CC000
	0x03EA2340 LDR X0, [X0 + 0x1C8]
	0x03EA2344 BL 0x1C16D08
	0x03EA2348 MOV X2, X0
	0x03EA234C MOV X0, X19
	0x03EA2350 MOV X1, X20
	0x03EA2354 MOV X3, X31
	0x03EA2358 BL 0x330E16C
	0x03EA235C ADRP X0, 0x2CC000
	0x03EA2360 LDR X0, [X0 + 0x1D0]
	0x03EA2364 BL 0x1C16D08
	0x03EA2368 MOV X1, X0
	0x03EA236C MOV X0, X19
	0x03EA2370 BL 0x1C16DEC
	0x03EA2374 STR X30, [X31 - 0x20]!
	0x03EA2378 STP X20, X19, [X31 + 0x10]
	0x03EA237C MOV X20, X1
	0x03EA2380 MOV X1, X31
	0x03EA2384 MOV X19, X0
	0x03EA2388 BL 0x33BDD8C
	0x03EA238C CBZ X20, 0x3EA23CC
	0x03EA2390 LDRB W8, [X20 + 0x10]
	0x03EA2394 STRB W8, [X19 + 0x10]
	0x03EA2398 LDR X8, [X20 + 0x18]
	0x03EA239C STR X8, [X19 + 0x18]
	0x03EA23A0 LDR X8, [X20 + 0x20]
	0x03EA23A4 STR X8, [X19 + 0x20]
	0x03EA23A8 LDR W8, [X20 + 0x28]
	0x03EA23AC STR W8, [X19 + 0x28]
	0x03EA23B0 LDR X8, [X20 + 0x30]
	0x03EA23B4 STR X8, [X19 + 0x30]
	0x03EA23B8 LDR X8, [X20 + 0x38]
	0x03EA23BC STR X8, [X19 + 0x38]
	0x03EA23C0 LDP X20, X19, [X31 + 0x10]
	0x03EA23C4 LDR X30, [X31], #0x20
	0x03EA23C8 RET
	0x03EA23CC ADRP X0, 0x256000
	0x03EA23D0 LDR X0, [X0 + 0x528]
	0x03EA23D4 BL 0x1C16D08
	0x03EA23D8 BL 0x1C16F10
	0x03EA23DC MOV X19, X0
	0x03EA23E0 ADRP X0, 0x2CC000
	0x03EA23E4 LDR X0, [X0 + 0x1D8]
	0x03EA23E8 BL 0x1C16D08
	0x03EA23EC MOV X1, X0
	0x03EA23F0 MOV X0, X19
	0x03EA23F4 MOV X2, X31
	0x03EA23F8 BL 0x330E100
	0x03EA23FC ADRP X0, 0x2CC000
	0x03EA2400 LDR X0, [X0 + 0x1E0]
	0x03EA2404 BL 0x1C16D08
	0x03EA2408 MOV X1, X0
	0x03EA240C MOV X0, X19
	0x03EA2410 BL 0x1C16DEC
	0x03EA2414 LDRB W0, [X0 + 0x10]
	0x03EA2418 RET
	0x03EA241C AND W8, W1, 0x1
	0x03EA2420 STRB W8, [X0 + 0x10]
	0x03EA2424 RET
	0x03EA2428 LDR X0, [X0 + 0x20]
	0x03EA242C RET
	0x03EA2430 STR X1, [X0 + 0x20]
	0x03EA2434 RET
	0x03EA2438 STR X30, [X31 - 0x20]!
	0x03EA243C STP X20, X19, [X31 + 0x10]
	0x03EA2440 ADRP X20, 0x546000
	0x03EA2444 LDRB W8, [X20 + 0xF07]
	0x03EA2448 MOV X19, X0
	0x03EA244C TBNZ X8, 0x0, 0x3EA2470
	0x03EA2450 ADRP X0, 0x2CC000
	0x03EA2454 LDR X0, [X0 + 0x1E8]
	0x03EA2458 BL 0x1C16CF4
	0x03EA245C ADRP X0, 0x298000
	0x03EA2460 LDR X0, [X0 + 0xF0]
	0x03EA2464 BL 0x1C16CF4
	0x03EA2468 MOVZ W8, 0x1
	0x03EA246C STRB W8, [X20 + 0xF07]
	0x03EA2470 LDR X20, [X19 + 0x18]
	0x03EA2474 CBNZ X20, 0x3EA24A8
	0x03EA2478 ADRP X8, 0x298000
	0x03EA247C LDR X8, [X8 + 0xF0]
	0x03EA2480 LDR X0, [X8]
	0x03EA2484 BL 0x1C16F10
	0x03EA2488 ADRP X8, 0x2CC000
	0x03EA248C LDR X8, [X8 + 0x1E8]
	0x03EA2490 MOV X1, X31
	0x03EA2494 MOV X3, X31
	0x03EA2498 MOV X20, X0
	0x03EA249C LDR X2, [X8]
	0x03EA24A0 BL 0x36DE178
	0x03EA24A4 STR X20, [X19 + 0x18]
	0x03EA24A8 MOV X0, X20
	0x03EA24AC LDP X20, X19, [X31 + 0x10]
	0x03EA24B0 LDR X30, [X31], #0x20
	0x03EA24B4 RET

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x547000
	007 Move X20, 0x25B000
	008 Move W8, [X21+3830]
	009 Move X20, [X20+2536]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {32}
	015 Move X0, 0x25B000
	016 Move X0, [X0+2536]
	017 Call 0x1C17CF4
	018 Move X0, 0x29C000
	019 Move X0, [X0+3880]
	020 Call 0x1C17CF4
	021 Move X0, 0x254000
	022 Move X0, [X0+632]
	023 Call 0x1C17CF4
	024 Move X0, 0x2CB000
	025 Move X0, [X0+2488]
	026 Call 0x1C17CF4
	027 Move X0, 0x27C000
	028 Move X0, [X0+3256]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X21+3830], W8
	032 Move X0, X31
	033 Call Encoding.get_Default
	034 Move X8, [X20]
	035 Move X20, X0
	036 Move W9, [X8+224]
	037 Compare W9, 0
	038 JumpIfNotEqual {41}
	039 Move X0, X8
	040 Call 0x1C17DFC
	041 Move X0, X19
	042 Move X1, X31
	043 Call Convert.FromBase64String, X0
	044 Compare X20, 0
	045 JumpIfEqual {123}
	046 Move X8, [X20]
	047 Move X1, X0
	048 Move X0, X20
	049 Move X9, [X8+888]
	050 Move X2, [X8+896]
	051 NotImplemented "Instruction BLR not yet implemented."
	052 Compare X0, 0
	053 JumpIfEqual {123}
	054 Move W1, 58
	055 Move X2, X31
	056 Move X20, X0
	057 Call String.IndexOf, X0, X1
	058 Move W21, W0
	059 Move X0, X20
	060 Move W1, W31
	061 Move W2, W21
	062 Move X3, X31
	063 Call String.Substring, X0, X1, X2
	064 Move W8, [X20+16]
	065 Move X19, X0
	066 Subtract W8, W8, 1
	067 NotImplemented "Instruction CMP not yet implemented."
	068 Add W1, W21, 1
	069 Move X0, X20
	070 Move X2, X31
	071 Call String.Substring, X0, X1
	072 Move X20, X0
	073 Move X8, 0x254000
	074 Move X8, [X8+632]
	075 Move X8, [X8]
	076 Move X8, [X8+184]
	077 Move X20, [X8]
	078 Compare X19, 0
	079 JumpIfEqual {123}
	080 Move X21, 0x29C000
	081 Move X21, [X21+3880]
	082 Move W1, 92
	083 Move X0, X19
	084 Move X2, X31
	085 Call String.IndexOf, X0, X1
	086 Move TEMP, X0
	087 And TEMP, TEMP, -2147483648
	088 Compare TEMP, -2147483648
	089 JumpIfEqual {95}
	090 Add W1, W0, 1
	091 Move X0, X19
	092 Move X2, X31
	093 Call String.Substring, X0, X1
	094 Move X19, X0
	095 Move X0, [X21]
	096 Call 0x1C17F10
	097 Move X1, X31
	098 Move X21, X0
	099 Call NameValueCollection..ctor, X0
	100 Compare X21, 0
	101 JumpIfEqual {123}
	102 Move X8, 0x2CB000
	103 Move X8, [X8+2488]
	104 Move X22, 0x27C000
	105 Move X0, X21
	106 Move X2, X19
	107 Move X1, [X8]
	108 Move X22, [X22+3256]
	109 Move X3, X31
	110 Call NameValueCollection.set_Item, X0, X1, X2
	111 Move X1, [X22]
	112 Move X0, X21
	113 Move X2, X20
	114 Move X3, X31
	115 Call NameValueCollection.set_Item, X0, X1, X2
	116 Move X0, X21
	117 Move X20, [X31+32]
	118 Move X19, [X31+40]
	119 Move X22, [X31+16]
	120 Move X21, [X31+24]
	121 Move X30, [X31+48]
	122 Return X0
	123 Call 0x1C17F20

Method: System.String ToBasicString()

Disassembly:
	0x03EA24B8 STR X1, [X0 + 0x18]
	0x03EA24BC RET
	0x03EA24C0 LDR W0, [X0 + 0x28]
	0x03EA24C4 RET
	0x03EA24C8 STR W1, [X0 + 0x28]
	0x03EA24CC RET
	0x03EA24D0 STR X30, [X31 - 0x20]!
	0x03EA24D4 STP X20, X19, [X31 + 0x10]
	0x03EA24D8 ADRP X20, 0x546000
	0x03EA24DC LDRB W8, [X20 + 0xF08]
	0x03EA24E0 MOV X19, X0
	0x03EA24E4 TBNZ X8, 0x0, 0x3EA2508
	0x03EA24E8 ADRP X0, 0x2CC000
	0x03EA24EC LDR X0, [X0 + 0x1F0]
	0x03EA24F0 BL 0x1C16CF4
	0x03EA24F4 ADRP X0, 0x28F000
	0x03EA24F8 LDR X0, [X0 + 0x500]
	0x03EA24FC BL 0x1C16CF4
	0x03EA2500 MOVZ W8, 0x1
	0x03EA2504 STRB W8, [X20 + 0xF08]
	0x03EA2508 LDR X20, [X19 + 0x30]
	0x03EA250C CBNZ X20, 0x3EA2540
	0x03EA2510 ADRP X8, 0x28F000
	0x03EA2514 LDR X8, [X8 + 0x500]
	0x03EA2518 LDR X0, [X8]
	0x03EA251C BL 0x1C16F10
	0x03EA2520 ADRP X8, 0x2CC000
	0x03EA2524 LDR X8, [X8 + 0x1F0]
	0x03EA2528 MOV X1, X31
	0x03EA252C MOV X3, X31
	0x03EA2530 MOV X20, X0
	0x03EA2534 LDR X2, [X8]
	0x03EA2538 BL 0x36DE290
	0x03EA253C STR X20, [X19 + 0x30]
	0x03EA2540 MOV X0, X20
	0x03EA2544 LDP X20, X19, [X31 + 0x10]
	0x03EA2548 LDR X30, [X31], #0x20
	0x03EA254C RET
	0x03EA2550 STR X1, [X0 + 0x30]
	0x03EA2554 RET
	0x03EA2558 LDR X0, [X0 + 0x38]
	0x03EA255C RET
	0x03EA2560 STR X30, [X31 - 0x20]!
	0x03EA2564 STP X20, X19, [X31 + 0x10]
	0x03EA2568 CBZ X1, 0x3EA2584
	0x03EA256C LDR W8, [X1 + 0x10]
	0x03EA2570 CBZ W8, 0x3EA25B8
	0x03EA2574 LDP X20, X19, [X31 + 0x10]
	0x03EA2578 STR X1, [X0 + 0x38]
	0x03EA257C LDR X30, [X31], #0x20
	0x03EA2580 RET
	0x03EA2584 ADRP X0, 0x256000
	0x03EA2588 LDR X0, [X0 + 0x528]
	0x03EA258C BL 0x1C16D08
	0x03EA2590 BL 0x1C16F10
	0x03EA2594 MOV X19, X0
	0x03EA2598 ADRP X0, 0x25B000
	0x03EA259C LDR X0, [X0 + 0xEC8]
	0x03EA25A0 BL 0x1C16D08
	0x03EA25A4 MOV X1, X0
	0x03EA25A8 MOV X0, X19
	0x03EA25AC MOV X2, X31
	0x03EA25B0 BL 0x330E100
	0x03EA25B4 B 0x3EA25FC
	0x03EA25B8 ADRP X0, 0x259000
	0x03EA25BC LDR X0, [X0 + 0x578]
	0x03EA25C0 BL 0x1C16D08
	0x03EA25C4 BL 0x1C16F10
	0x03EA25C8 MOV X19, X0
	0x03EA25CC ADRP X0, 0x27A000
	0x03EA25D0 LDR X0, [X0 + 0x9B8]
	0x03EA25D4 BL 0x1C16D08
	0x03EA25D8 MOV X20, X0
	0x03EA25DC ADRP X0, 0x25B000
	0x03EA25E0 LDR X0, [X0 + 0xEC8]
	0x03EA25E4 BL 0x1C16D08
	0x03EA25E8 MOV X2, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x547000
	006 Move W8, [X20+3831]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {29}
	012 Move X0, 0x25B000
	013 Move X0, [X0+2536]
	014 Call 0x1C17CF4
	015 Move X0, 0x28D000
	016 Move X0, [X0+2128]
	017 Call 0x1C17CF4
	018 Move X0, 0x25A000
	019 Move X0, [X0+4080]
	020 Call 0x1C17CF4
	021 Move X0, 0x2CB000
	022 Move X0, [X0+2488]
	023 Call 0x1C17CF4
	024 Move X0, 0x27C000
	025 Move X0, [X0+3256]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X20+3831], W8
	029 Move X0, [X19+24]
	030 Compare X0, 0
	031 JumpIfEqual {89}
	032 Move X8, 0x2CB000
	033 Move X8, [X8+2488]
	034 Move X2, X31
	035 Move X1, [X8]
	036 Call NameValueCollection.get_Item, X0, X1
	037 Move X8, [X19+24]
	038 Compare X8, 0
	039 JumpIfEqual {89}
	040 Move X9, 0x27C000
	041 Move X9, [X9+3256]
	042 Move X20, 0x25A000
	043 Move X19, X0
	044 Move X0, X8
	045 Move X1, [X9]
	046 Move X20, [X20+4080]
	047 Move X2, X31
	048 Call NameValueCollection.get_Item, X0, X1
	049 Move X8, [X20]
	050 Move X2, X0
	051 Move X1, X19
	052 Move X3, X31
	053 Move X0, X8
	054 Call String.Format, X0, X1, X2
	055 Move X19, X0
	056 Move X0, X31
	057 Call Encoding.get_UTF8
	058 Compare X0, 0
	059 JumpIfEqual {89}
	060 Move X8, [X0]
	061 Move X21, 0x25B000
	062 Move X20, 0x28D000
	063 Move X1, X19
	064 Move X9, [X8+616]
	065 Move X2, [X8+624]
	066 Move X21, [X21+2536]
	067 Move X20, [X20+2128]
	068 NotImplemented "Instruction BLR not yet implemented."
	069 Move X8, [X21]
	070 Move X19, X0
	071 Move W9, [X8+224]
	072 Compare W9, 0
	073 JumpIfNotEqual {76}
	074 Move X0, X8
	075 Call 0x1C17DFC
	076 Move X0, X19
	077 Move X1, X31
	078 Call Convert.ToBase64String, X0
	079 Move X8, [X20]
	080 Move X20, [X31+16]
	081 Move X19, [X31+24]
	082 Move X1, X0
	083 Move X2, X31
	084 Move X0, X8
	085 Move X30, [X31+32]
	086 Move X21, [X31+40]
	087 Call String.Concat, X0, X1
	088 Return X0
	089 Call 0x1C17F20

Method: System.String ToDigestString()

Disassembly:
	0x03EA25EC MOV X0, X19
	0x03EA25F0 MOV X1, X20
	0x03EA25F4 MOV X3, X31
	0x03EA25F8 BL 0x330E16C
	0x03EA25FC ADRP X0, 0x2CC000
	0x03EA2600 LDR X0, [X0 + 0x1F8]
	0x03EA2604 BL 0x1C16D08
	0x03EA2608 MOV X1, X0
	0x03EA260C MOV X0, X19
	0x03EA2610 BL 0x1C16DEC
	0x03EA2614 MOV X0, X31
	0x03EA2618 RET
	0x03EA261C MOVZ W0, 0x1
	0x03EA2620 RET
	0x03EA2624 STP X30, X19, [X31 - 0x10]!
	0x03EA2628 MOV X1, X31
	0x03EA262C MOV X19, X0
	0x03EA2630 BL 0x33BDD8C
	0x03EA2634 STR W31, [X19 + 0x20]
	0x03EA2638 LDP X30, X19, [X31], #0x10
	0x03EA263C RET
	0x03EA2640 STR X30, [X31 - 0x20]!
	0x03EA2644 STP X20, X19, [X31 + 0x10]
	0x03EA2648 MOV X20, X1
	0x03EA264C MOV X1, X31
	0x03EA2650 MOV X19, X0
	0x03EA2654 BL 0x33BDD8C
	0x03EA2658 CBZ X20, 0x3EA2690
	0x03EA265C LDRB W8, [X20 + 0x10]
	0x03EA2660 STRB W8, [X19 + 0x10]
	0x03EA2664 LDRB W8, [X20 + 0x11]
	0x03EA2668 STRB W8, [X19 + 0x11]
	0x03EA266C LDR X8, [X20 + 0x18]
	0x03EA2670 STR X8, [X19 + 0x18]
	0x03EA2674 LDR W8, [X20 + 0x20]
	0x03EA2678 STR W8, [X19 + 0x20]
	0x03EA267C LDR X8, [X20 + 0x28]
	0x03EA2680 STR X8, [X19 + 0x28]
	0x03EA2684 LDP X20, X19, [X31 + 0x10]
	0x03EA2688 LDR X30, [X31], #0x20
	0x03EA268C RET
	0x03EA2690 ADRP X0, 0x256000
	0x03EA2694 LDR X0, [X0 + 0x528]
	0x03EA2698 BL 0x1C16D08
	0x03EA269C BL 0x1C16F10
	0x03EA26A0 MOV X19, X0
	0x03EA26A4 ADRP X0, 0x2CC000
	0x03EA26A8 LDR X0, [X0 + 0x1D8]
	0x03EA26AC BL 0x1C16D08
	0x03EA26B0 MOV X1, X0
	0x03EA26B4 MOV X0, X19
	0x03EA26B8 MOV X2, X31
	0x03EA26BC BL 0x330E100
	0x03EA26C0 ADRP X0, 0x2CC000
	0x03EA26C4 LDR X0, [X0 + 0x200]
	0x03EA26C8 BL 0x1C16D08
	0x03EA26CC MOV X1, X0
	0x03EA26D0 MOV X0, X19
	0x03EA26D4 BL 0x1C16DEC
	0x03EA26D8 LDRB W0, [X0 + 0x10]
	0x03EA26DC RET
	0x03EA26E0 AND W8, W1, 0x1
	0x03EA26E4 STRB W8, [X0 + 0x10]
	0x03EA26E8 RET
	0x03EA26EC LDRB W0, [X0 + 0x11]
	0x03EA26F0 RET
	0x03EA26F4 AND W8, W1, 0x1
	0x03EA26F8 STRB W8, [X0 + 0x11]
	0x03EA26FC RET
	0x03EA2700 STR X30, [X31 - 0x20]!
	0x03EA2704 STP X20, X19, [X31 + 0x10]
	0x03EA2708 ADRP X20, 0x546000
	0x03EA270C LDRB W8, [X20 + 0xF09]
	0x03EA2710 MOV X19, X0
	0x03EA2714 TBNZ X8, 0x0, 0x3EA2738
	0x03EA2718 ADRP X0, 0x28F000
	0x03EA271C LDR X0, [X0 + 0x500]
	0x03EA2720 BL 0x1C16CF4
	0x03EA2724 ADRP X0, 0x2CC000
	0x03EA2728 LDR X0, [X0 + 0x208]
	0x03EA272C BL 0x1C16CF4
	0x03EA2730 MOVZ W8, 0x1
	0x03EA2734 STRB W8, [X20 + 0xF09]
	0x03EA2738 LDR X20, [X19 + 0x18]
	0x03EA273C CBNZ X20, 0x3EA2770
	0x03EA2740 ADRP X8, 0x28F000
	0x03EA2744 LDR X8, [X8 + 0x500]
	0x03EA2748 LDR X0, [X8]
	0x03EA274C BL 0x1C16F10
	0x03EA2750 ADRP X8, 0x2CC000
	0x03EA2754 LDR X8, [X8 + 0x208]
	0x03EA2758 MOV X1, X31
	0x03EA275C MOV X3, X31
	0x03EA2760 MOV X20, X0
	0x03EA2764 LDR X2, [X8]
	0x03EA2768 BL 0x36DE290
	0x03EA276C STR X20, [X19 + 0x18]
	0x03EA2770 MOV X0, X20
	0x03EA2774 LDP X20, X19, [X31 + 0x10]
	0x03EA2778 LDR X30, [X31], #0x20
	0x03EA277C RET
	0x03EA2780 STR X1, [X0 + 0x18]
	0x03EA2784 RET
	0x03EA2788 LDR W0, [X0 + 0x20]
	0x03EA278C RET
	0x03EA2790 STR W1, [X0 + 0x20]
	0x03EA2794 RET
	0x03EA2798 LDR X0, [X0 + 0x28]
	0x03EA279C RET
	0x03EA27A0 STR X1, [X0 + 0x28]
	0x03EA27A4 RET
	0x03EA27A8 MOVZ W0, 0x1
	0x03EA27AC RET
	0x03EA27B0 STP X30, X23, [X31 - 0x30]!
	0x03EA27B4 STP X22, X21, [X31 + 0x10]
	0x03EA27B8 STP X20, X19, [X31 + 0x20]
	0x03EA27BC ADRP X23, 0x546000
	0x03EA27C0 ADRP X22, 0x257000
	0x03EA27C4 LDRB W8, [X23 + 0xF0A]
	0x03EA27C8 LDR X22, [X22 + 0xCC0]
	0x03EA27CC MOV X20, X2
	0x03EA27D0 MOV X21, X1
	0x03EA27D4 MOV X19, X0
	0x03EA27D8 TBNZ X8, 0x0, 0x3EA27F0
	0x03EA27DC ADRP X0, 0x257000
	0x03EA27E0 LDR X0, [X0 + 0xCC0]
	0x03EA27E4 BL 0x1C16CF4
	0x03EA27E8 MOVZ W8, 0x1
	0x03EA27EC STRB W8, [X23 + 0xF0A]
	0x03EA27F0 MOV X0, X19
	0x03EA27F4 MOV X1, X31
	0x03EA27F8 BL 0x33BDD8C
	0x03EA27FC STR X21, [X19 + 0x10]
	0x03EA2800 STR X20, [X19 + 0x38]
	0x03EA2804 LDR X0, [X22]
	0x03EA2808 BL 0x1C16F10
	0x03EA280C MOV X1, X31
	0x03EA2810 MOV X20, X0
	0x03EA2814 BL 0x33BDD8C
	0x03EA2818 STR X20, [X19 + 0x40]
	0x03EA281C LDP X20, X19, [X31 + 0x20]
	0x03EA2820 LDP X22, X21, [X31 + 0x10]
	0x03EA2824 LDP X30, X23, [X31], #0x30
	0x03EA2828 RET
	0x03EA282C STP X30, X19, [X31 - 0x10]!
	0x03EA2830 LDR X19, [X0 + 0x30]
	0x03EA2834 CBNZ X19, 0x3EA2844
	0x03EA2838 LDR X0, [X0 + 0x20]
	0x03EA283C LDP X30, X19, [X31], #0x10
	0x03EA2840 RET
	0x03EA2844 ADRP X0, 0x2CC000
	0x03EA2848 LDR X0, [X0 + 0x210]
	0x03EA284C BL 0x1C16D08
	0x03EA2850 MOV X1, X0
	0x03EA2854 MOV X0, X19
	0x03EA2858 BL 0x1C16DEC
	0x03EA285C LDRB W0, [X0 + 0x28]
	0x03EA2860 RET
	0x03EA2864 AND W8, W1, 0x1
	0x03EA2868 STRB W8, [X0 + 0x28]
	0x03EA286C RET
	0x03EA2870 LDR X0, [X0 + 0x40]
	0x03EA2874 RET
	0x03EA2878 LDR X0, [X0 + 0x38]
	0x03EA287C RET
	0x03EA2880 STR X30, [X31 - 0x30]!
	0x03EA2884 STP X22, X21, [X31 + 0x10]
	0x03EA2888 STP X20, X19, [X31 + 0x20]
	0x03EA288C ADRP X19, 0x546000
	0x03EA2890 LDRB W8, [X19 + 0xF0B]
	0x03EA2894 MOV X20, X0
	0x03EA2898 TBNZ X8, 0x0, 0x3EA28B0
	0x03EA289C ADRP X0, 0x282000
	0x03EA28A0 LDR X0, [X0 + 0x7C8]
	0x03EA28A4 BL 0x1C16CF4
	0x03EA28A8 MOVZ W8, 0x1
	0x03EA28AC STRB W8, [X19 + 0xF0B]
	0x03EA28B0 LDR X19, [X20 + 0x40]
	0x03EA28B4 MOV X1, X31
	0x03EA28B8 MOV X0, X19
	0x03EA28BC BL 0x33E14E0
	0x03EA28C0 LDR X21, [X20 + 0x48]
	0x03EA28C4 CBNZ X21, 0x3EA28F4
	0x03EA28C8 ADRP X8, 0x282000
	0x03EA28CC LDRB W22, [X20 + 0x18]
	0x03EA28D0 LDR X8, [X8 + 0x7C8]
	0x03EA28D4 LDR X0, [X8]
	0x03EA28D8 BL 0x1C16F10
	0x03EA28DC CMP W22, 0x0
	0x03EA28E0 MOV X21, X0
	0x03EA28E4 CSET W1, NE
	0x03EA28E8 MOV X2, X31
	0x03EA28EC BL 0x33DCD78
	0x03EA28F0 STR X21, [X20 + 0x48]
	0x03EA28F4 MOV X0, X19
	0x03EA28F8 MOV X1, X31
	0x03EA28FC BL 0x33E14E4
	0x03EA2900 MOV X0, X21
	0x03EA2904 LDP X20, X19, [X31 + 0x20]
	0x03EA2908 LDP X22, X21, [X31 + 0x10]
	0x03EA290C LDR X30, [X31], #0x30
	0x03EA2910 RET
	0x03EA2914 CMP W1, 0x1
	0x03EA2918 MOV X21, X0
	0x03EA291C B.NE 0x3EA294C
	0x03EA2920 MOV X0, X21
	0x03EA2924 BL 0x3EB1AD0
	0x03EA2928 LDR X20, [X0]
	0x03EA292C BL 0x3EB1AE0
	0x03EA2930 MOV X0, X19
	0x03EA2934 MOV X1, X31
	0x03EA2938 BL 0x33E14E4
	0x03EA293C MOV X21, X31
	0x03EA2940 CBZ X20, 0x3EA2900
	0x03EA2944 MOV X0, X20
	0x03EA2948 BL 0x1C16F18
	0x03EA294C MOV X20, X31
	0x03EA2950 B 0x3EA2958
	0x03EA2954 MOV X21, X0
	0x03EA2958 MOV X0, X19
	0x03EA295C MOV X1, X31
	0x03EA2960 BL 0x33E14E4
	0x03EA2964 CBNZ X20, 0x3EA2970
	0x03EA2968 MOV X0, X21
	0x03EA296C BL 0x1D2C690
	0x03EA2970 MOV X0, X20
	0x03EA2974 BL 0x1C16F18
	0x03EA2978 BL 0x1990590
	0x03EA297C LDRB W0, [X0 + 0x19]
	0x03EA2980 RET
	0x03EA2984 STR X30, [X31 - 0x20]!
	0x03EA2988 STP X20, X19, [X31 + 0x10]
	0x03EA298C LDR X20, [X0 + 0x40]
	0x03EA2990 MOV X19, X0
	0x03EA2994 MOV X1, X31
	0x03EA2998 MOV X0, X20
	0x03EA299C BL 0x33E14E0
	0x03EA29A0 LDRB W19, [X19 + 0x18]
	0x03EA29A4 MOV X0, X20
	0x03EA29A8 MOV X1, X31
	0x03EA29AC BL 0x33E14E4
	0x03EA29B0 MOV W0, W19
	0x03EA29B4 LDP X20, X19, [X31 + 0x10]
	0x03EA29B8 LDR X30, [X31], #0x20
	0x03EA29BC RET
	0x03EA29C0 STR X30, [X31 - 0x30]!

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x547000
	007 Move X22, 0x252000
	008 Move X21, 0x252000
	009 Move W8, [X20+3832]
	010 Move X22, [X22+2288]
	011 Move X21, [X21+2512]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {67}
	017 Move X0, 0x252000
	018 Move X0, [X0+2512]
	019 Call 0x1C17CF4
	020 Move X0, 0x252000
	021 Move X0, [X0+2288]
	022 Call 0x1C17CF4
	023 Move X0, 0x282000
	024 Move X0, [X0+3608]
	025 Call 0x1C17CF4
	026 Move X0, 0x2CD000
	027 Move X0, [X0+208]
	028 Call 0x1C17CF4
	029 Move X0, 0x253000
	030 Move X0, [X0+2160]
	031 Call 0x1C17CF4
	032 Move X0, 0x2CD000
	033 Move X0, [X0+392]
	034 Call 0x1C17CF4
	035 Move X0, 0x2CC000
	036 Move X0, [X0+3320]
	037 Call 0x1C17CF4
	038 Move X0, 0x29D000
	039 Move X0, [X0+1560]
	040 Call 0x1C17CF4
	041 Move X0, 0x2CD000
	042 Move X0, [X0+328]
	043 Call 0x1C17CF4
	044 Move X0, 0x2CD000
	045 Move X0, [X0+200]
	046 Call 0x1C17CF4
	047 Move X0, 0x29D000
	048 Move X0, [X0+1568]
	049 Call 0x1C17CF4
	050 Move X0, 0x29B000
	051 Move X0, [X0+2776]
	052 Call 0x1C17CF4
	053 Move X0, 0x29D000
	054 Move X0, [X0+1576]
	055 Call 0x1C17CF4
	056 Move X0, 0x2CB000
	057 Move X0, [X0+2488]
	058 Call 0x1C17CF4
	059 Move X0, 0x2CD000
	060 Move X0, [X0+360]
	061 Call 0x1C17CF4
	062 Move X0, 0x2CD000
	063 Move X0, [X0+400]
	064 Call 0x1C17CF4
	065 Move W8, 1
	066 Move [X20+3832], W8
	067 Move X0, [X22]
	068 Call 0x1C17F10
	069 Move W1, 256
	070 Move X2, X31
	071 Move X20, X0
	072 Call StringBuilder..ctor, X0, X1
	073 Move X0, [X21]
	074 Move W1, 5
	075 Call 0x1C17D6C
	076 Move X8, [X19+24]
	077 Compare X8, 0
	078 JumpIfEqual {272}
	079 Move X9, 0x2CB000
	080 Move X9, [X9+2488]
	081 Move X21, X0
	082 Move X0, X8
	083 Move X2, X31
	084 Move X1, [X9]
	085 Call NameValueCollection.get_Item, X0, X1
	086 Compare X21, 0
	087 JumpIfEqual {272}
	088 Move X22, X0
	089 Compare X0, 0
	090 JumpIfEqual {97}
	091 Move X8, [X21]
	092 Move X0, X22
	093 Move X1, [X8+64]
	094 Call 0x1C17E00
	095 Compare X0, 0
	096 JumpIfEqual {274}
	097 Move W8, [X21+24]
	098 Compare W8, 0
	099 JumpIfEqual {273}
	100 Move [X21+32], X22
	101 Move X0, [X19+24]
	102 Compare X0, 0
	103 JumpIfEqual {272}
	104 Move X8, 0x29D000
	105 Move X8, [X8+1576]
	106 Move X2, X31
	107 Move X1, [X8]
	108 Call NameValueCollection.get_Item, X0, X1
	109 Move X22, X0
	110 Compare X0, 0
	111 JumpIfEqual {118}
	112 Move X8, [X21]
	113 Move X0, X22
	114 Move X1, [X8+64]
	115 Call 0x1C17E00
	116 Compare X0, 0
	117 JumpIfEqual {274}
	118 Move W8, [X21+24]
	119 NotImplemented "Instruction CMP not yet implemented."
	120 Move [X21+40], X22
	121 Move X0, [X19+24]
	122 Compare X0, 0
	123 JumpIfEqual {272}
	124 Move X8, 0x253000
	125 Move X8, [X8+2160]
	126 Move X2, X31
	127 Move X1, [X8]
	128 Call NameValueCollection.get_Item, X0, X1
	129 Move X22, X0
	130 Compare X0, 0
	131 JumpIfEqual {138}
	132 Move X8, [X21]
	133 Move X0, X22
	134 Move X1, [X8+64]
	135 Call 0x1C17E00
	136 Compare X0, 0
	137 JumpIfEqual {274}
	138 Move W8, [X21+24]
	139 NotImplemented "Instruction CMP not yet implemented."
	140 Move [X21+48], X22
	141 Move X0, [X19+24]
	142 Compare X0, 0
	143 JumpIfEqual {272}
	144 Move X8, 0x282000
	145 Move X8, [X8+3608]
	146 Move X2, X31
	147 Move X1, [X8]
	148 Call NameValueCollection.get_Item, X0, X1
	149 Move X22, X0
	150 Compare X0, 0
	151 JumpIfEqual {158}
	152 Move X8, [X21]
	153 Move X0, X22
	154 Move X1, [X8+64]
	155 Call 0x1C17E00
	156 Compare X0, 0
	157 JumpIfEqual {274}
	158 Move W8, [X21+24]
	159 NotImplemented "Instruction CMP not yet implemented."
	160 Move [X21+56], X22
	161 Move X0, [X19+24]
	162 Compare X0, 0
	163 JumpIfEqual {272}
	164 Move X8, 0x2CC000
	165 Move X8, [X8+3320]
	166 Move X2, X31
	167 Move X1, [X8]
	168 Call NameValueCollection.get_Item, X0, X1
	169 Move X22, X0
	170 Compare X0, 0
	171 JumpIfEqual {178}
	172 Move X8, [X21]
	173 Move X0, X22
	174 Move X1, [X8+64]
	175 Call 0x1C17E00
	176 Compare X0, 0
	177 JumpIfEqual {274}
	178 Move W8, [X21+24]
	179 NotImplemented "Instruction CMP not yet implemented."
	180 Move [X21+64], X22
	181 Compare X20, 0
	182 JumpIfEqual {272}
	183 Move X8, 0x2CD000
	184 Move X8, [X8+392]
	185 Move X0, X20
	186 Move X2, X21
	187 Move X3, X31
	188 Move X1, [X8]
	189 Call StringBuilder.AppendFormat, X0, X1, X2
	190 Move X0, [X19+24]
	191 Compare X0, 0
	192 JumpIfEqual {272}
	193 Move X8, 0x29D000
	194 Move X8, [X8+1568]
	195 Move X2, X31
	196 Move X1, [X8]
	197 Call NameValueCollection.get_Item, X0, X1
	198 Compare X0, 0
	199 JumpIfEqual {207}
	200 Move X8, 0x2CD000
	201 Move X8, [X8+328]
	202 Move X2, X0
	203 Move X0, X20
	204 Move X3, X31
	205 Move X1, [X8]
	206 Call StringBuilder.AppendFormat, X0, X1, X2
	207 Move X0, [X19+24]
	208 Compare X0, 0
	209 JumpIfEqual {272}
	210 Move X8, 0x29B000
	211 Move X8, [X8+2776]
	212 Move X2, X31
	213 Move X1, [X8]
	214 Call NameValueCollection.get_Item, X0, X1
	215 Compare X0, 0
	216 JumpIfEqual {224}
	217 Move X8, 0x2CD000
	218 Move X8, [X8+360]
	219 Move X2, X0
	220 Move X0, X20
	221 Move X3, X31
	222 Move X1, [X8]
	223 Call StringBuilder.AppendFormat, X0, X1, X2
	224 Move X0, [X19+24]
	225 Compare X0, 0
	226 JumpIfEqual {272}
	227 Move X8, 0x29D000
	228 Move X8, [X8+1560]
	229 Move X2, X31
	230 Move X1, [X8]
	231 Call NameValueCollection.get_Item, X0, X1
	232 Compare X0, 0
	233 JumpIfEqual {262}
	234 Move X21, X0
	235 Move X0, [X19+24]
	236 Compare X0, 0
	237 JumpIfEqual {272}
	238 Move X8, 0x2CD000
	239 Move X8, [X8+200]
	240 Move X2, X31
	241 Move X1, [X8]
	242 Call NameValueCollection.get_Item, X0, X1
	243 Move X8, [X19+24]
	244 Compare X8, 0
	245 JumpIfEqual {272}
	246 Move X9, 0x2CD000
	247 Move X9, [X9+208]
	248 Move X22, 0x2CD000
	249 Move X19, X0
	250 Move X0, X8
	251 Move X1, [X9]
	252 Move X22, [X22+400]
	253 Move X2, X31
	254 Call NameValueCollection.get_Item, X0, X1
	255 Move X1, [X22]
	256 Move X4, X0
	257 Move X0, X20
	258 Move X2, X21
	259 Move X3, X19
	260 Move X5, X31
	261 Call StringBuilder.AppendFormat, X0, X1, X2, X3, X4
	262 Move X8, [X20]
	263 Move X0, X20
	264 Move X20, [X31+32]
	265 Move X19, [X31+40]
	266 Move X22, [X31+16]
	267 Move X21, [X31+24]
	268 Move X2, [X8+360]
	269 Move X1, [X8+368]
	270 Move X30, [X31+48]
	271 CallNoReturn X2
	272 Call 0x1C17F20
	273 Call 0x1C17F28
	274 Call 0x1C17F44
	275 Move X1, X31
	276 Call 0x1C17DEC

Method: System.Security.Principal.IIdentity ToIdentity()

Disassembly:
	0x03E97D48 STP X22, X21, [X31 + 0x10]
	0x03E97D4C STP X20, X19, [X31 + 0x20]
	0x03E97D50 ADRP X23, 0x551000
	0x03E97D54 LDRB W8, [X23 + 0xE90]
	0x03E97D58 MOV X19, X3
	0x03E97D5C MOV W20, W2
	0x03E97D60 MOV W21, W1
	0x03E97D64 MOV X22, X0
	0x03E97D68 TBNZ X8, 0x0, 0x3E97D8C
	0x03E97D6C ADRP X0, 0x2D5000
	0x03E97D70 LDR X0, [X0 + 0x368]
	0x03E97D74 BL 0x1C16CF4
	0x03E97D78 ADRP X0, 0x25E000
	0x03E97D7C LDR X0, [X0 + 0x278]
	0x03E97D80 BL 0x1C16CF4
	0x03E97D84 MOVZ W8, 0x1
	0x03E97D88 STRB W8, [X23 + 0xE90]
	0x03E97D8C CBZ X22, 0x3E97E44
	0x03E97D90 LDR W8, [X22 + 0x18]
	0x03E97D94 CBZ W8, 0x3E97E18
	0x03E97D98 TBNZ X21, 0x1F, 0x3E97E78
	0x03E97D9C SUBS W8, W8, W21
	0x03E97DA0 B.LE 0x3E97E78
	0x03E97DA4 TBNZ X20, 0x1F, 0x3E97E98
	0x03E97DA8 CMP W8, W20
	0x03E97DAC B.LT 0x3E97E98
	0x03E97DB0 CMP W20, 0x0
	0x03E97DB4 B.LE 0x3E97E20
	0x03E97DB8 CBNZ X19, 0x3E97DC8
	0x03E97DBC MOV X0, X31
	0x03E97DC0 BL 0x3241948
	0x03E97DC4 MOV X19, X0
	0x03E97DC8 ADRP X8, 0x2D5000
	0x03E97DCC LDR X8, [X8 + 0x368]
	0x03E97DD0 LDR X0, [X8]
	0x03E97DD4 LDR W8, [X0 + 0xE0]
	0x03E97DD8 CBNZ W8, 0x3E97DE0
	0x03E97DDC BL 0x1C16DFC
	0x03E97DE0 MOV X0, X22
	0x03E97DE4 MOV W1, W21
	0x03E97DE8 MOV W2, W20
	0x03E97DEC BL 0x3E95D88
	0x03E97DF0 CBZ X19, 0x3E97EE0
	0x03E97DF4 LDR X8, [X19]
	0x03E97DF8 MOV X1, X0
	0x03E97DFC MOV X0, X19
	0x03E97E00 LDP X20, X19, [X31 + 0x20]
	0x03E97E04 LDR X3, [X8 + 0x378]
	0x03E97E08 LDR X2, [X8 + 0x380]
	0x03E97E0C LDP X22, X21, [X31 + 0x10]
	0x03E97E10 LDP X30, X23, [X31], #0x30
	0x03E97E14 BR X3
	0x03E97E18 CBNZ W21, 0x3E97E78
	0x03E97E1C CBNZ W20, 0x3E97E98
	0x03E97E20 ADRP X8, 0x25E000
	0x03E97E24 LDR X8, [X8 + 0x278]
	0x03E97E28 LDP X20, X19, [X31 + 0x20]
	0x03E97E2C LDP X22, X21, [X31 + 0x10]
	0x03E97E30 LDR X8, [X8]
	0x03E97E34 LDR X8, [X8 + 0xB8]
	0x03E97E38 LDR X0, [X8]
	0x03E97E3C LDP X30, X23, [X31], #0x30
	0x03E97E40 RET
	0x03E97E44 ADRP X0, 0x261000
	0x03E97E48 LDR X0, [X0 + 0x528]
	0x03E97E4C BL 0x1C16D08
	0x03E97E50 BL 0x1C16F10

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x552000
	006 Move W8, [X20+3833]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {26}
	012 Move X0, 0x2D7000
	013 Move X0, [X0+3304]
	014 Call 0x1C17CF4
	015 Move X0, 0x2D7000
	016 Move X0, [X0+3312]
	017 Call 0x1C17CF4
	018 Move X0, 0x2D6000
	019 Move X0, [X0+2488]
	020 Call 0x1C17CF4
	021 Move X0, 0x287000
	022 Move X0, [X0+3256]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X20+3833], W8
	026 Move W8, [X19+16]
	027 NotImplemented "Instruction CMP not yet implemented."
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Move X8, 0x2D7000
	030 Move X20, [X19+24]
	031 Move X8, [X8+3312]
	032 Move X0, [X8]
	033 Call 0x1C17F10
	034 Move X1, X20
	035 Move X19, X0
	036 Call HttpDigestIdentity..ctor, X0, X1
	037 Move X0, [X19+24]
	038 Compare X0, 0
	039 JumpIfEqual {72}
	040 Move X8, 0x2D6000
	041 Move X8, [X8+2488]
	042 Move X2, X31
	043 Move X1, [X8]
	044 Call NameValueCollection.get_Item, X0, X1
	045 Move X8, [X19+24]
	046 Compare X8, 0
	047 JumpIfEqual {72}
	048 Move X9, 0x287000
	049 Move X9, [X9+3256]
	050 Move X20, X0
	051 Move X0, X8
	052 Move X2, X31
	053 Move X1, [X9]
	054 Call NameValueCollection.get_Item, X0, X1
	055 Move X8, 0x2D7000
	056 Move X8, [X8+3304]
	057 Move X21, X0
	058 Move X8, [X8]
	059 Move X0, X8
	060 Call 0x1C17F10
	061 Move X1, X20
	062 Move X2, X21
	063 Move X19, X0
	064 Call HttpBasicIdentity..ctor, X0, X1, X2
	065 Move X19, X31
	066 Move X0, X19
	067 Move X20, [X31+16]
	068 Move X19, [X31+24]
	069 Move X30, [X31+32]
	070 Move X21, [X31+40]
	071 Return X0
	072 Call 0x1C17F20

