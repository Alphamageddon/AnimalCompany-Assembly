Type: WebSocketSharp.Net.ChunkStream

Method: System.Void .ctor(WebSocketSharp.Net.WebHeaderCollection headers)

Disassembly:
	0x03E82310 MOV X19, X0
	0x03E82314 ADRP X0, 0x279000
	0x03E82318 LDR X0, [X0 + 0x578]
	0x03E8231C BL 0x1C16D08
	0x03E82320 BL 0x1C16F10
	0x03E82324 MOV X20, X0
	0x03E82328 ADRP X0, 0x27B000
	0x03E8232C LDR X0, [X0 + 0xEC8]
	0x03E82330 BL 0x1C16D08
	0x03E82334 MOV X2, X0
	0x03E82338 MOV X0, X20
	0x03E8233C MOV X1, X19
	0x03E82340 MOV X3, X31
	0x03E82344 BL 0x330E16C
	0x03E82348 ADRP X0, 0x2EA000
	0x03E8234C LDR X0, [X0 + 0xD98]
	0x03E82350 BL 0x1C16D08
	0x03E82354 MOV X1, X0
	0x03E82358 MOV X0, X20
	0x03E8235C BL 0x1C16DEC
	0x03E82360 STR X30, [X31 - 0x40]!
	0x03E82364 STP X24, X23, [X31 + 0x10]
	0x03E82368 STP X22, X21, [X31 + 0x20]
	0x03E8236C STP X20, X19, [X31 + 0x30]
	0x03E82370 ADRP X23, 0x566000
	0x03E82374 ADRP X24, 0x273000
	0x03E82378 LDRB W8, [X23 + 0xDE0]
	0x03E8237C LDR X24, [X24 + 0x278]
	0x03E82380 MOV X19, X3
	0x03E82384 MOV X20, X2
	0x03E82388 MOV X21, X1
	0x03E8238C MOV X22, X0
	0x03E82390 TBNZ X8, 0x0, 0x3E823A8
	0x03E82394 ADRP X0, 0x273000
	0x03E82398 LDR X0, [X0 + 0x278]
	0x03E8239C BL 0x1C16CF4
	0x03E823A0 MOVZ W8, 0x1
	0x03E823A4 STRB W8, [X23 + 0xDE0]
	0x03E823A8 LDR X8, [X24]
	0x03E823AC MOV X0, X22
	0x03E823B0 MOV X1, X21
	0x03E823B4 MOV X2, X20
	0x03E823B8 LDR X8, [X8 + 0xB8]
	0x03E823BC MOV X3, X19
	0x03E823C0 LDP X20, X19, [X31 + 0x30]
	0x03E823C4 LDP X22, X21, [X31 + 0x20]
	0x03E823C8 LDR X4, [X8]
	0x03E823CC LDP X24, X23, [X31 + 0x10]
	0x03E823D0 LDR X30, [X31], #0x40

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0x567000
	009 Move X23, 0x2EB000
	010 Move X22, 0x2EB000
	011 Move X21, 0x272000
	012 Move W8, [X24+3541]
	013 Move X23, [X23+3344]
	014 Move X22, [X22+3352]
	015 Move X21, [X21+2288]
	016 Move X20, X1
	017 Move X19, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {33}
	022 Move X0, 0x2EB000
	023 Move X0, [X0+3352]
	024 Call 0x1C17CF4
	025 Move X0, 0x2EB000
	026 Move X0, [X0+3344]
	027 Call 0x1C17CF4
	028 Move X0, 0x272000
	029 Move X0, [X0+2288]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X24+3541], W8
	033 Move X0, X19
	034 Move X1, X31
	035 Call Object..ctor, X0
	036 Move TEMP, 0
	037 Not TEMP
	038 Move W8, TEMP
	039 Move [X19+56], X20
	040 Move [X19+20], W8
	041 Move X0, [X23]
	042 Call 0x1C17F10
	043 Move X1, [X22]
	044 Move X20, X0
	045 Call List`1<Object>..ctor, X0
	046 Move [X19+24], X20
	047 Move X0, [X21]
	048 Call 0x1C17F10
	049 Move X1, X31
	050 Move X20, X0
	051 Call StringBuilder..ctor, X0
	052 Move [X19+72], X20
	053 Move X20, [X31+48]
	054 Move X19, [X31+56]
	055 Move X22, [X31+32]
	056 Move X21, [X31+40]
	057 Move X24, [X31+16]
	058 Move X23, [X31+24]
	059 Move X30, [X31+64]
	060 Return 

Method: System.Int32 get_Count()

Disassembly:
	0x03E823D4 B 0x3E82090
	0x03E823D8 STR X30, [X31 - 0x10]!

ISIL:
	001 Move W0, [X0+32]
	002 Return X0

Method: System.Byte[] get_EndBuffer()

Disassembly:
	0x03E823DC LDR X0, [X0 + 0x28]
	0x03E823E0 CBZ X0, 0x3E82414

ISIL:
	001 Move X0, [X0+40]
	002 Return X0

Method: System.Int32 get_Offset()

Disassembly:
	0x03E823E4 LDR W8, [X0 + 0x10]
	0x03E823E8 CBZ W8, 0x3E82408

ISIL:
	001 Move W0, [X0+64]
	002 Return X0

Method: WebSocketSharp.Net.WebHeaderCollection get_Headers()

Disassembly:
	0x03E823EC MOV W1, W31
	0x03E823F0 MOV X2, X31

ISIL:
	001 Move X0, [X0+56]
	002 Return X0

Method: System.Boolean get_WantsMore()

Disassembly:
	0x03E823F4 BL 0x3222A1C
	0x03E823F8 AND W8, W0, 0xFFFF
	0x03E823FC CMP W8, 0x2E
	0x03E82400 CSET W0, NE

ISIL:
	001 Move W8, [X0+84]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 NotImplemented "Instruction CSET not yet implemented."
	004 Return X0

Method: System.Int32 read(System.Byte[] buffer, System.Int32 offset, System.Int32 count)

Disassembly:
	0x03E82404 B 0x3E8240C
	0x03E82408 MOVZ W0, 0x1
	0x03E8240C LDR X30, [X31], #0x10
	0x03E82410 RET
	0x03E82414 BL 0x1C16F20
	0x03E82418 SUB X31, X31, 0x30
	0x03E8241C STP X30, X21, [X31 + 0x10]
	0x03E82420 STP X20, X19, [X31 + 0x20]
	0x03E82424 ADRP X20, 0x566000
	0x03E82428 ADRP X21, 0x272000
	0x03E8242C LDRB W8, [X20 + 0xDE2]
	0x03E82430 LDR X21, [X21 + 0x9F0]
	0x03E82434 MOV X19, X0
	0x03E82438 TBNZ X8, 0x0, 0x3E8245C
	0x03E8243C ADRP X0, 0x272000
	0x03E82440 LDR X0, [X0 + 0x9F0]
	0x03E82444 BL 0x1C16CF4
	0x03E82448 ADRP X0, 0x273000
	0x03E8244C LDR X0, [X0 + 0x570]
	0x03E82450 BL 0x1C16CF4
	0x03E82454 MOVZ W8, 0x1
	0x03E82458 STRB W8, [X20 + 0xDE2]
	0x03E8245C LDR X0, [X21]
	0x03E82460 LDR X20, [X19 + 0x30]
	0x03E82464 LDR W8, [X0 + 0xE0]
	0x03E82468 CBNZ W8, 0x3E82474
	0x03E8246C BL 0x1C16DFC
	0x03E82470 LDR X0, [X21]
	0x03E82474 LDR X8, [X0 + 0xB8]
	0x03E82478 MOV X0, X20
	0x03E8247C MOV X2, X31
	0x03E82480 LDR X1, [X8 + 0x10]
	0x03E82484 BL 0x3363078
	0x03E82488 TBNZ X0, 0x0, 0x3E8257C
	0x03E8248C LDR X0, [X21]
	0x03E82490 ADD X20, X19, 0x30
	0x03E82494 LDR W8, [X0 + 0xE0]
	0x03E82498 CBNZ W8, 0x3E824A0
	0x03E8249C BL 0x1C16DFC
	0x03E824A0 MOV X0, X20
	0x03E824A4 MOV X1, X31
	0x03E824A8 BL 0x336139C
	0x03E824AC CMP W0, 0x2
	0x03E824B0 B.NE 0x3E824BC
	0x03E824B4 LDR X19, [X19 + 0x30]
	0x03E824B8 B 0x3E824DC
	0x03E824BC LDR X0, [X21]
	0x03E824C0 LDR W8, [X0 + 0xE0]
	0x03E824C4 CBNZ W8, 0x3E824CC
	0x03E824C8 BL 0x1C16DFC
	0x03E824CC MOV X0, X20
	0x03E824D0 MOV X1, X31
	0x03E824D4 BL 0x3361FC4
	0x03E824D8 MOV X19, X0
	0x03E824DC LDR X0, [X21]
	0x03E824E0 LDR W8, [X0 + 0xE0]
	0x03E824E4 CBNZ W8, 0x3E824EC
	0x03E824E8 BL 0x1C16DFC
	0x03E824EC MOV X0, X31
	0x03E824F0 BL 0x3361584
	0x03E824F4 MOV X1, X0
	0x03E824F8 MOV X0, X19
	0x03E824FC MOV X2, X31
	0x03E82500 BL 0x3363010
	0x03E82504 ADRP X20, 0x273000
	0x03E82508 LDR X20, [X20 + 0x570]
	0x03E8250C STR X0, [X31 + 0x8]
	0x03E82510 MOV X19, X0
	0x03E82514 LDR X8, [X20]
	0x03E82518 LDR W9, [X8 + 0xE0]
	0x03E8251C CBNZ W9, 0x3E8252C
	0x03E82520 MOV X0, X8
	0x03E82524 BL 0x1C16DFC
	0x03E82528 LDR X8, [X20]
	0x03E8252C LDR X8, [X8 + 0xB8]
	0x03E82530 MOV X0, X19

ISIL:
	001 Move [X31-96], X30
	002 Move [X31+16], X28
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X23, 0x567000
	013 Move W8, [X23+3542]
	014 Move W19, W3
	015 Move W20, W2
	016 Move X21, X1
	017 Move X22, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {33}
	022 Move X0, 0x2EB000
	023 Move X0, [X0+3360]
	024 Call 0x1C17CF4
	025 Move X0, 0x2EB000
	026 Move X0, [X0+3368]
	027 Call 0x1C17CF4
	028 Move X0, 0x2EB000
	029 Move X0, [X0+3376]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X23+3542], W8
	033 Move X0, [X22+24]
	034 Compare X0, 0
	035 JumpIfEqual {74}
	036 Move W8, [X0+24]
	037 Subtract W25, W8, 1
	038 Move X27, 0x2EB000
	039 Move X28, 0x2EB000
	040 Move X27, [X27+3368]
	041 Move X28, [X28+3376]
	042 Move W23, W31
	043 Move W26, W31
	044 Move X2, [X27]
	045 Move W1, W23
	046 Call List`1<Object>.get_Item, X0, X1
	047 Compare X0, 0
	048 JumpIfEqual {69}
	049 Move X1, X31
	050 Move X24, X0
	051 Call Chunk.get_ReadLeft, X0
	052 Compare W0, 0
	053 JumpIfEqual {62}
	054 Add W2, W26, W20
	055 Subtract W3, W19, W26
	056 Move X0, X24
	057 Move X1, X21
	058 Move X4, X31
	059 Call Chunk.Read, X0, X1, X2, X3
	060 Add W26, W0, W26
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Move X0, [X22+24]
	063 Compare X0, 0
	064 JumpIfEqual {74}
	065 Move X3, [X28]
	066 Move W1, W23
	067 Move X2, X31
	068 Call List`1<Object>.set_Item, X0, X1, X2
	069 NotImplemented "Instruction CMP not yet implemented."
	070 Move X0, [X22+24]
	071 Add W23, W23, 1
	072 Compare X0, 0
	073 JumpIfNotEqual {44}
	074 Call 0x1C17F20
	075 Move W19, W26
	076 Move W19, W31
	077 Move W0, W19
	078 Move X20, [X31+80]
	079 Move X19, [X31+88]
	080 Move X22, [X31+64]
	081 Move X21, [X31+72]
	082 Move X24, [X31+48]
	083 Move X23, [X31+56]
	084 Move X26, [X31+32]
	085 Move X25, [X31+40]
	086 Move X28, [X31+16]
	087 Move X27, [X31+24]
	088 Move X30, [X31+96]
	089 Return X0

Method: WebSocketSharp.Net.InputChunkState seekCrLf(System.Byte[] buffer, ref System.Int32 offset, System.Int32 length)

Disassembly:
	0x03E82534 MOV X2, X31
	0x03E82538 LDR X1, [X8]
	0x03E8253C BL 0x3394D08
	0x03E82540 TBZ X0, 0x0, 0x3E8257C
	0x03E82544 LDR X0, [X20]
	0x03E82548 LDR W8, [X0 + 0xE0]
	0x03E8254C CBNZ W8, 0x3E82554
	0x03E82550 BL 0x1C16DFC
	0x03E82554 ADD X0, X31, 0x8
	0x03E82558 MOV X1, X31
	0x03E8255C BL 0x3394234
	0x03E82560 MOVZ X8, 0x7FF00000
	0x03E82564 FMOV D1, X8
	0x03E82568 FCVTZS W9, D0
	0x03E8256C FCMP D0, D1
	0x03E82570 MOVZ W8, 0x80000000
	0x03E82574 CSEL W0, W8, W9, EQ
	0x03E82578 B 0x3E82580
	0x03E8257C MOV W0, W31
	0x03E82580 LDP X20, X19, [X31 + 0x20]
	0x03E82584 LDP X30, X21, [X31 + 0x10]
	0x03E82588 ADD X31, X31, 0x30
	0x03E8258C RET
	0x03E82590 STR X30, [X31 - 0x30]!
	0x03E82594 STP X22, X21, [X31 + 0x10]
	0x03E82598 STP X20, X19, [X31 + 0x20]
	0x03E8259C ADRP X22, 0x566000
	0x03E825A0 ADRP X21, 0x272000
	0x03E825A4 LDRB W8, [X22 + 0xDE3]
	0x03E825A8 LDR X21, [X21 + 0x9F0]
	0x03E825AC MOV W20, W1
	0x03E825B0 MOV X19, X0
	0x03E825B4 TBNZ X8, 0x0, 0x3E825CC
	0x03E825B8 ADRP X0, 0x272000
	0x03E825BC LDR X0, [X0 + 0x9F0]
	0x03E825C0 BL 0x1C16CF4
	0x03E825C4 MOVZ W8, 0x1
	0x03E825C8 STRB W8, [X22 + 0xDE3]
	0x03E825CC LDR X0, [X21]
	0x03E825D0 STR X31, [X31 + 0x8]
	0x03E825D4 LDR W8, [X0 + 0xE0]
	0x03E825D8 CBNZ W8, 0x3E825E0
	0x03E825DC BL 0x1C16DFC
	0x03E825E0 MOV X0, X31
	0x03E825E4 BL 0x3361584
	0x03E825E8 CMP W20, 0x1
	0x03E825EC B.LT 0x3E82604
	0x03E825F0 STR X0, [X31 + 0x8]
	0x03E825F4 SCVTF D0, W20
	0x03E825F8 ADD X0, X31, 0x8
	0x03E825FC MOV X1, X31
	0x03E82600 BL 0x336059C
	0x03E82604 CBZ X19, 0x3E8261C
	0x03E82608 STR X0, [X19 + 0x30]
	0x03E8260C LDP X20, X19, [X31 + 0x20]
	0x03E82610 LDP X22, X21, [X31 + 0x10]
	0x03E82614 LDR X30, [X31], #0x30
	0x03E82618 RET
	0x03E8261C BL 0x1C16F20
	0x03E82620 STR X30, [X31 - 0x20]!
	0x03E82624 STP X20, X19, [X31 + 0x10]
	0x03E82628 ADRP X20, 0x566000
	0x03E8262C LDRB W8, [X20 + 0xDE4]
	0x03E82630 MOV X19, X0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x567000
	008 Move W8, [X23+3543]
	009 Move W21, W3
	010 Move X20, X2
	011 Move X19, X1
	012 Move X22, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x2EB000
	018 Move X0, [X0+3384]
	019 Call 0x1C17CF4
	020 Move X0, 0x2EB000
	021 Move X0, [X0+3392]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X23+3543], W8
	025 Move W8, [X20]
	026 Move W10, [X22+80]
	027 Add W9, W8, 1
	028 Move [X20], W9
	029 Compare W10, 0
	030 JumpIfEqual {33}
	031 Compare X19, 0
	032 JumpIfNotEqual {48}
	033 Compare X19, 0
	034 JumpIfEqual {62}
	035 Move W10, [X19+24]
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Move X10, W8
	038 Add X10, X19, X10
	039 Move W10, [X10+32]
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Move W10, 1
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move [X22+80], W10
	044 Move W0, 2
	045 Add W8, W8, 2
	046 Move [X20], W8
	047 Move W8, W9
	048 Move W9, [X19+24]
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Add X8, X19, W8
	051 Move W8, [X8+32]
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Move W0, W31
	054 Move X20, [X31+32]
	055 Move X19, [X31+40]
	056 Move X22, [X31+16]
	057 Move X21, [X31+24]
	058 Move X30, [X31+48]
	059 Move X23, [X31+56]
	060 Return X0
	061 Call 0x1C17F28
	062 Call 0x1C17F20
	063 Move X8, 0x2EB000
	064 Move X8, [X8+3384]
	065 Move X8, 0x2EB000
	066 Move X8, [X8+3392]
	067 Move X0, [X8]
	068 Call ChunkStream.throwProtocolViolation, X0

Method: WebSocketSharp.Net.InputChunkState setChunkSize(System.Byte[] buffer, ref System.Int32 offset, System.Int32 length)

Disassembly:
	0x03E82684 LDR X0, [X0 + 0x60]
	0x03E82688 RET
	0x03E8268C STR X1, [X0 + 0x60]
	0x03E82690 RET
	0x03E82694 LDR X0, [X0 + 0x10]
	0x03E82698 RET
	0x03E8269C STR X1, [X0 + 0x10]
	0x03E826A0 RET
	0x03E826A4 LDR X0, [X0 + 0x18]
	0x03E826A8 RET
	0x03E826AC STR X1, [X0 + 0x18]
	0x03E826B0 RET
	0x03E826B4 LDRB W0, [X0 + 0x20]
	0x03E826B8 RET
	0x03E826BC AND W8, W1, 0x1
	0x03E826C0 STRB W8, [X0 + 0x20]
	0x03E826C4 RET
	0x03E826C8 LDR X0, [X0 + 0x28]
	0x03E826CC RET
	0x03E826D0 STP X30, X21, [X31 - 0x20]!
	0x03E826D4 STP X20, X19, [X31 + 0x10]
	0x03E826D8 ADRP X21, 0x566000
	0x03E826DC LDRB W8, [X21 + 0xDE5]
	0x03E826E0 MOV X20, X1
	0x03E826E4 MOV X19, X0
	0x03E826E8 TBZ X8, 0x0, 0x3E82704
	0x03E826EC CBZ X20, 0x3E8271C
	0x03E826F0 CBZ X19, 0x3E82734
	0x03E826F4 STR X20, [X19 + 0x28]
	0x03E826F8 LDP X20, X19, [X31 + 0x10]
	0x03E826FC LDP X30, X21, [X31], #0x20
	0x03E82700 RET
	0x03E82704 ADRP X0, 0x273000
	0x03E82708 LDR X0, [X0 + 0x278]
	0x03E8270C BL 0x1C16CF4
	0x03E82710 MOVZ W8, 0x1
	0x03E82714 STRB W8, [X21 + 0xDE5]
	0x03E82718 CBNZ X20, 0x3E826F0
	0x03E8271C ADRP X8, 0x273000
	0x03E82720 LDR X8, [X8 + 0x278]
	0x03E82724 LDR X8, [X8]
	0x03E82728 LDR X8, [X8 + 0xB8]
	0x03E8272C LDR X20, [X8]
	0x03E82730 CBNZ X19, 0x3E826F4
	0x03E82734 BL 0x1C16F20
	0x03E82738 STR X30, [X31 - 0x30]!
	0x03E8273C STP X22, X21, [X31 + 0x10]
	0x03E82740 STP X20, X19, [X31 + 0x20]
	0x03E82744 ADRP X22, 0x566000
	0x03E82748 ADRP X21, 0x272000
	0x03E8274C LDRB W8, [X22 + 0xDE7]
	0x03E82750 LDR X21, [X21 + 0x9F0]
	0x03E82754 MOV W20, W1
	0x03E82758 MOV X19, X0
	0x03E8275C TBNZ X8, 0x0, 0x3E82774
	0x03E82760 ADRP X0, 0x272000
	0x03E82764 LDR X0, [X0 + 0x9F0]
	0x03E82768 BL 0x1C16CF4
	0x03E8276C MOVZ W8, 0x1
	0x03E82770 STRB W8, [X22 + 0xDE7]
	0x03E82774 LDR X0, [X21]
	0x03E82778 LDR W8, [X0 + 0xE0]
	0x03E8277C CBZ W8, 0x3E82790
	0x03E82780 TBZ X20, 0x0, 0x3E82798
	0x03E82784 MOV X0, X31
	0x03E82788 BL 0x3361584
	0x03E8278C B 0x3E827A4
	0x03E82790 BL 0x1C16DFC
	0x03E82794 TBNZ X20, 0x0, 0x3E82784
	0x03E82798 LDR X8, [X21]
	0x03E8279C LDR X8, [X8 + 0xB8]
	0x03E827A0 LDR X0, [X8 + 0x10]
	0x03E827A4 CBZ X19, 0x3E827BC
	0x03E827A8 STR X0, [X19 + 0x30]
	0x03E827AC LDP X20, X19, [X31 + 0x20]
	0x03E827B0 LDP X22, X21, [X31 + 0x10]
	0x03E827B4 LDR X30, [X31], #0x30
	0x03E827B8 RET
	0x03E827BC BL 0x1C16F20
	0x03E827C0 LDR X0, [X0 + 0x30]
	0x03E827C4 RET
	0x03E827C8 STR X1, [X0 + 0x30]
	0x03E827CC RET
	0x03E827D0 LDRB W0, [X0 + 0x38]
	0x03E827D4 RET
	0x03E827D8 AND W8, W1, 0x1
	0x03E827DC STRB W8, [X0 + 0x38]
	0x03E827E0 RET
	0x03E827E4 LDR X0, [X0 + 0x40]
	0x03E827E8 RET
	0x03E827EC STP X30, X21, [X31 - 0x20]!
	0x03E827F0 STP X20, X19, [X31 + 0x10]
	0x03E827F4 ADRP X21, 0x566000
	0x03E827F8 LDRB W8, [X21 + 0xDE8]
	0x03E827FC MOV X19, X1
	0x03E82800 MOV X20, X0
	0x03E82804 TBNZ X8, 0x0, 0x3E8281C
	0x03E82808 ADRP X0, 0x278000
	0x03E8280C LDR X0, [X0 + 0x248]
	0x03E82810 BL 0x1C16CF4
	0x03E82814 MOVZ W8, 0x1
	0x03E82818 STRB W8, [X21 + 0xDE8]
	0x03E8281C CBZ X19, 0x3E8287C
	0x03E82820 LDR W8, [X19 + 0x10]
	0x03E82824 CBZ W8, 0x3E828B0
	0x03E82828 MOV X0, X19
	0x03E8282C MOV W1, W31
	0x03E82830 MOV X2, X31
	0x03E82834 BL 0x3222A1C
	0x03E82838 AND W8, W0, 0xFFFF
	0x03E8283C CMP W8, 0x24
	0x03E82840 B.EQ 0x3E8290C
	0x03E82844 ADRP X8, 0x278000
	0x03E82848 LDR X8, [X8 + 0x248]
	0x03E8284C LDR X0, [X8]
	0x03E82850 LDR W8, [X0 + 0xE0]
	0x03E82854 CBNZ W8, 0x3E8285C
	0x03E82858 BL 0x1C16DFC
	0x03E8285C MOV X0, X19
	0x03E82860 MOV X1, X31
	0x03E82864 BL 0x3E69764
	0x03E82868 TBZ X0, 0x0, 0x3E82918
	0x03E8286C STR X19, [X20 + 0x40]
	0x03E82870 LDP X20, X19, [X31 + 0x10]
	0x03E82874 LDP X30, X21, [X31], #0x20
	0x03E82878 RET
	0x03E8287C ADRP X0, 0x276000
	0x03E82880 LDR X0, [X0 + 0x528]
	0x03E82884 BL 0x1C16D08
	0x03E82888 BL 0x1C16F10
	0x03E8288C MOV X19, X0
	0x03E82890 ADRP X0, 0x27B000
	0x03E82894 LDR X0, [X0 + 0xEC8]
	0x03E82898 BL 0x1C16D08
	0x03E8289C MOV X1, X0
	0x03E828A0 MOV X0, X19
	0x03E828A4 MOV X2, X31

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0x567000
	009 Move W8, [X23+3544]
	010 Move W20, W3
	011 Move X21, X2
	012 Move X22, X1
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {29}
	018 Move X0, 0x2EB000
	019 Move X0, [X0+3408]
	020 Call 0x1C17CF4
	021 Move X0, 0x2EB000
	022 Move X0, [X0+3384]
	023 Call 0x1C17CF4
	024 Move X0, 0x2EB000
	025 Move X0, [X0+3416]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X23+3544], W8
	029 Move W9, [X21]
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move W24, 1
	032 Add W8, W9, 1
	033 Move [X21], W8
	034 Compare X22, 0
	035 JumpIfEqual {97}
	036 Move W10, [X22+24]
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Add X9, X22, W9
	039 Move W10, [X19+80]
	040 Move W23, [X9+32]
	041 Compare W10, 0
	042 JumpIfNotEqual {62}
	043 NotImplemented "Instruction CMP not yet implemented."
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Move W9, [X19+48]
	046 Compare W9, 0
	047 JumpIfNotEqual {52}
	048 NotImplemented "Instruction CMP not yet implemented."
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Move [X19+48], W24
	051 Move [X19+80], W24
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Move W9, W8
	054 Move X0, [X19+72]
	055 Compare X0, 0
	056 JumpIfEqual {97}
	057 Move W1, W23
	058 Move X2, X31
	059 Call StringBuilder.Append, X0, X1
	060 Move W8, [X21]
	061 Move W23, W31
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Move X0, [X19+72]
	064 Compare X0, 0
	065 JumpIfEqual {97}
	066 Move X1, X31
	067 Call StringBuilder.get_Length, X0
	068 NotImplemented "Instruction CMP not yet implemented."
	069 NotImplemented "Instruction CMP not yet implemented."
	070 Move X0, [X19+72]
	071 Compare X0, 0
	072 JumpIfEqual {97}
	073 Move X8, [X0]
	074 Move X9, [X8+360]
	075 Move X1, [X8+368]
	076 NotImplemented "Instruction BLR not yet implemented."
	077 Move W1, 515
	078 Move X2, X31
	079 Call Int32.Parse, X0, X1
	080 Move [X19+16], W31
	081 Move [X19+20], W0
	082 Compare W0, 0
	083 JumpIfEqual {86}
	084 Move W0, 1
	085 Move W0, W31
	086 Move W8, 2
	087 Move W0, 3
	088 Move [X19+88], W8
	089 Move X20, [X31+48]
	090 Move X19, [X31+56]
	091 Move X22, [X31+32]
	092 Move X21, [X31+40]
	093 Move X24, [X31+16]
	094 Move X23, [X31+24]
	095 Move X30, [X31+64]
	096 Return X0
	097 Call 0x1C17F20
	098 Call 0x1C17F28
	099 Move X8, 0x2EB000
	100 Move X8, [X8+3416]
	101 Move X8, 0x2EB000
	102 Move X8, [X8+3408]
	103 Move X8, 0x2EB000
	104 Move X8, [X8+3384]
	105 Move X0, [X8]
	106 Call ChunkStream.throwProtocolViolation, X0
	107 NotImplemented "Instruction CMP not yet implemented."
	108 Move X19, X0
	109 Move X0, X19
	110 Call 0x3EB2AD0
	111 Move X19, X0
	112 Move X0, 0x278000
	113 Move X0, [X0+3264]
	114 Call 0x1C17D08
	115 Move X8, [X19]
	116 Move X1, [X8]
	117 Call 0x1C18270
	118 Move TEMP, X0
	119 And TEMP, TEMP, 1
	120 Compare TEMP, 1
	121 JumpIfNotEqual {127}
	122 Call 0x3EB2AE0
	123 Move X0, 0x2EB000
	124 Move X0, [X0+3424]
	125 Call 0x1C17D08
	126 Call ChunkStream.throwProtocolViolation, X0
	127 Move W0, 8
	128 Call 0x3EB2AF0
	129 Move X8, [X19]
	130 Move [X0], X8
	131 Move X1, 0x33000
	132 Add X1, X1, 3672
	133 Move X2, X31
	134 Call 0x3EB2B00
	135 Move X19, X0
	136 Call 0x3EB2AE0
	137 Move X0, X19
	138 Call 0x1D2D690
	139 Call 0x1991590

Method: WebSocketSharp.Net.InputChunkState setTrailer(System.Byte[] buffer, ref System.Int32 offset, System.Int32 length)

Disassembly:
	0x03E828A8 BL 0x330E100
	0x03E828AC B 0x3E828F4
	0x03E828B0 ADRP X0, 0x279000
	0x03E828B4 LDR X0, [X0 + 0x578]
	0x03E828B8 BL 0x1C16D08
	0x03E828BC BL 0x1C16F10
	0x03E828C0 MOV X19, X0
	0x03E828C4 ADRP X0, 0x29A000
	0x03E828C8 LDR X0, [X0 + 0x9B8]
	0x03E828CC BL 0x1C16D08
	0x03E828D0 MOV X20, X0
	0x03E828D4 ADRP X0, 0x27B000
	0x03E828D8 LDR X0, [X0 + 0xEC8]
	0x03E828DC BL 0x1C16D08
	0x03E828E0 MOV X2, X0
	0x03E828E4 MOV X0, X19
	0x03E828E8 MOV X1, X20
	0x03E828EC MOV X3, X31
	0x03E828F0 BL 0x330E16C
	0x03E828F4 ADRP X0, 0x2EA000
	0x03E828F8 LDR X0, [X0 + 0xDB0]
	0x03E828FC BL 0x1C16D08
	0x03E82900 MOV X1, X0
	0x03E82904 MOV X0, X19
	0x03E82908 BL 0x1C16DEC
	0x03E8290C ADRP X0, 0x2EA000
	0x03E82910 LDR X0, [X0 + 0xDA0]
	0x03E82914 B 0x3E82920
	0x03E82918 ADRP X0, 0x2EA000
	0x03E8291C LDR X0, [X0 + 0x9B0]
	0x03E82920 BL 0x1C16D08
	0x03E82924 MOV X19, X0
	0x03E82928 ADRP X0, 0x279000
	0x03E8292C LDR X0, [X0 + 0x578]
	0x03E82930 BL 0x1C16D08
	0x03E82934 BL 0x1C16F10
	0x03E82938 MOV X20, X0
	0x03E8293C ADRP X0, 0x27B000
	0x03E82940 LDR X0, [X0 + 0xEC8]
	0x03E82944 BL 0x1C16D08
	0x03E82948 MOV X2, X0
	0x03E8294C MOV X0, X20
	0x03E82950 MOV X1, X19
	0x03E82954 MOV X3, X31
	0x03E82958 BL 0x330E16C
	0x03E8295C ADRP X0, 0x2EA000
	0x03E82960 LDR X0, [X0 + 0xDB0]
	0x03E82964 BL 0x1C16D08
	0x03E82968 MOV X1, X0
	0x03E8296C MOV X0, X20
	0x03E82970 BL 0x1C16DEC
	0x03E82974 LDR X0, [X0 + 0x48]
	0x03E82978 RET
	0x03E8297C STP X30, X21, [X31 - 0x20]!
	0x03E82980 STP X20, X19, [X31 + 0x10]
	0x03E82984 ADRP X21, 0x566000
	0x03E82988 LDRB W8, [X21 + 0xDE9]
	0x03E8298C MOV X20, X1
	0x03E82990 MOV X19, X0
	0x03E82994 TBZ X8, 0x0, 0x3E829B0
	0x03E82998 CBZ X20, 0x3E829C8
	0x03E8299C CBZ X19, 0x3E829E0
	0x03E829A0 STR X20, [X19 + 0x48]
	0x03E829A4 LDP X20, X19, [X31 + 0x10]
	0x03E829A8 LDP X30, X21, [X31], #0x20
	0x03E829AC RET
	0x03E829B0 ADRP X0, 0x273000
	0x03E829B4 LDR X0, [X0 + 0x278]
	0x03E829B8 BL 0x1C16CF4
	0x03E829BC MOVZ W8, 0x1
	0x03E829C0 STRB W8, [X21 + 0xDE9]
	0x03E829C4 CBNZ X20, 0x3E8299C
	0x03E829C8 ADRP X8, 0x273000
	0x03E829CC LDR X8, [X8 + 0x278]
	0x03E829D0 LDR X8, [X8]
	0x03E829D4 LDR X8, [X8 + 0xB8]
	0x03E829D8 LDR X20, [X8]
	0x03E829DC CBNZ X19, 0x3E829A0
	0x03E829E0 BL 0x1C16F20
	0x03E829E4 LDR X0, [X0 + 0x50]
	0x03E829E8 RET
	0x03E829EC STR X30, [X31 - 0x30]!
	0x03E829F0 STP X22, X21, [X31 + 0x10]
	0x03E829F4 STP X20, X19, [X31 + 0x20]
	0x03E829F8 ADRP X22, 0x566000
	0x03E829FC ADRP X21, 0x2EA000
	0x03E82A00 LDRB W8, [X22 + 0xDEA]
	0x03E82A04 LDR X21, [X21 + 0xD90]
	0x03E82A08 MOV X20, X1
	0x03E82A0C MOV X19, X0
	0x03E82A10 TBNZ X8, 0x0, 0x3E82A28
	0x03E82A14 ADRP X0, 0x2EA000
	0x03E82A18 LDR X0, [X0 + 0xD90]
	0x03E82A1C BL 0x1C16CF4
	0x03E82A20 MOVZ W8, 0x1
	0x03E82A24 STRB W8, [X22 + 0xDEA]
	0x03E82A28 LDR X0, [X21]
	0x03E82A2C STR X31, [X31 + 0x8]
	0x03E82A30 LDR W8, [X0 + 0xE0]
	0x03E82A34 CBNZ W8, 0x3E82A3C
	0x03E82A38 BL 0x1C16DFC
	0x03E82A3C ADD X1, X31, 0x8
	0x03E82A40 MOV X0, X20
	0x03E82A44 BL 0x3E82A64
	0x03E82A48 TBZ X0, 0x0, 0x3E82A54
	0x03E82A4C LDR X8, [X31 + 0x8]
	0x03E82A50 STP X20, X8, [X19 + 0x50]
	0x03E82A54 LDP X20, X19, [X31 + 0x20]
	0x03E82A58 LDP X22, X21, [X31 + 0x10]
	0x03E82A5C LDR X30, [X31], #0x30
	0x03E82A60 RET
	0x03E82A64 STP X30, X25, [X31 - 0x40]!
	0x03E82A68 STP X24, X23, [X31 + 0x10]
	0x03E82A6C STP X22, X21, [X31 + 0x20]
	0x03E82A70 STP X20, X19, [X31 + 0x30]
	0x03E82A74 ADRP X22, 0x566000
	0x03E82A78 ADRP X21, 0x27A000
	0x03E82A7C LDRB W8, [X22 + 0xDEF]
	0x03E82A80 LDR X21, [X21 + 0x8D8]
	0x03E82A84 MOV X19, X1
	0x03E82A88 MOV X20, X0
	0x03E82A8C TBNZ X8, 0x0, 0x3E82AB0
	0x03E82A90 ADRP X0, 0x27A000
	0x03E82A94 LDR X0, [X0 + 0x8D8]
	0x03E82A98 BL 0x1C16CF4
	0x03E82A9C ADRP X0, 0x272000
	0x03E82AA0 LDR X0, [X0 + 0xE58]
	0x03E82AA4 BL 0x1C16CF4
	0x03E82AA8 MOVZ W8, 0x1
	0x03E82AAC STRB W8, [X22 + 0xDEF]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x567000
	008 Move W8, [X23+3545]
	009 Move W20, W3
	010 Move X21, X2
	011 Move X22, X1
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {31}
	017 Move X0, 0x29E000
	018 Move X0, [X0+3952]
	019 Call 0x1C17CF4
	020 Move X0, 0x2EB000
	021 Move X0, [X0+3432]
	022 Call 0x1C17CF4
	023 Move X0, 0x2EB000
	024 Move X0, [X0+3384]
	025 Call 0x1C17CF4
	026 Move X0, 0x2EB000
	027 Move X0, [X0+3416]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X23+3545], W8
	031 Move W8, [X21]
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move W9, [X19+88]
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Add W9, W8, 1
	036 Move [X21], W9
	037 Compare X22, 0
	038 JumpIfEqual {127}
	039 Move W9, [X22+24]
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Move X0, [X19+72]
	042 Compare X0, 0
	043 JumpIfEqual {127}
	044 Add X8, X22, W8
	045 Move W23, [X8+32]
	046 Move X2, X31
	047 Move W1, W23
	048 Call StringBuilder.Append, X0, X1
	049 Move W8, [X19+88]
	050 Or W9, W8, 2
	051 NotImplemented "Instruction CMP not yet implemented."
	052 NotImplemented "Instruction CMP not yet implemented."
	053 NotImplemented "Instruction CMP not yet implemented."
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Move W9, W31
	056 Add W9, W8, 1
	057 Move [X19+88], W9
	058 Move W8, [X21]
	059 NotImplemented "Instruction CMP not yet implemented."
	060 Move X0, [X19+72]
	061 Compare X0, 0
	062 JumpIfEqual {127}
	063 Move X1, X31
	064 Call StringBuilder.get_Length, X0
	065 Move W8, 0x1065
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Move W8, [X19+88]
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Subtract W1, W0, 2
	070 Move X0, [X19+72]
	071 Compare X0, 0
	072 JumpIfEqual {127}
	073 Move X2, X31
	074 Call StringBuilder.set_Length, X0, X1
	075 Move X0, [X19+72]
	076 Compare X0, 0
	077 JumpIfEqual {127}
	078 Move X8, [X0]
	079 Move X9, [X8+360]
	080 Move X1, [X8+368]
	081 NotImplemented "Instruction BLR not yet implemented."
	082 Move X8, 0x29E000
	083 Move X8, [X8+3952]
	084 Move X21, X0
	085 Move X8, [X8]
	086 Move X0, X8
	087 Call 0x1C17F10
	088 Move X1, X21
	089 Move X2, X31
	090 Move X20, X0
	091 Call StringReader..ctor, X0, X1
	092 Compare X20, 0
	093 JumpIfEqual {127}
	094 Move X8, [X20]
	095 Move X0, X20
	096 Move X9, [X8+504]
	097 Move X1, [X8+512]
	098 NotImplemented "Instruction BLR not yet implemented."
	099 Compare X0, 0
	100 JumpIfEqual {118}
	101 Move X1, X0
	102 Move W8, [X1+16]
	103 Compare W8, 0
	104 JumpIfEqual {118}
	105 Move X0, [X19+56]
	106 Compare X0, 0
	107 JumpIfEqual {127}
	108 Move X2, X31
	109 Call WebHeaderCollection.Add, X0, X1
	110 Move X8, [X20]
	111 Move X0, X20
	112 Move X9, [X8+504]
	113 Move X1, [X8+512]
	114 NotImplemented "Instruction BLR not yet implemented."
	115 Move X1, X0
	116 Compare X0, 0
	117 JumpIfNotEqual {102}
	118 Move W0, 4
	119 Move W0, 3
	120 Move X20, [X31+32]
	121 Move X19, [X31+40]
	122 Move X22, [X31+16]
	123 Move X21, [X31+24]
	124 Move X30, [X31+48]
	125 Move X23, [X31+56]
	126 Return X0
	127 Call 0x1C17F20
	128 Call 0x1C17F28
	129 Move X8, 0x2EB000
	130 Move X8, [X8+3384]
	131 Move X0, [X8]
	132 Call ChunkStream.throwProtocolViolation, X0
	133 Move X8, 0x2EB000
	134 Move X8, [X8+3416]
	135 Move X8, 0x2EB000
	136 Move X8, [X8+3432]

Method: System.Void throwProtocolViolation(System.String message)

Disassembly:
	0x03E82634 TBNZ X8, 0x0, 0x3E8264C
	0x03E82638 ADRP X0, 0x2EA000
	0x03E8263C LDR X0, [X0 + 0xD90]
	0x03E82640 BL 0x1C16CF4
	0x03E82644 MOVZ W8, 0x1
	0x03E82648 STRB W8, [X20 + 0xDE4]
	0x03E8264C LDR X0, [X19 + 0x58]
	0x03E82650 CBNZ X0, 0x3E82678
	0x03E82654 ADRP X19, 0x2EA000
	0x03E82658 LDR X19, [X19 + 0xD90]
	0x03E8265C LDR X0, [X19]
	0x03E82660 LDR W8, [X0 + 0xE0]
	0x03E82664 CBNZ W8, 0x3E82670
	0x03E82668 BL 0x1C16DFC
	0x03E8266C LDR X0, [X19]
	0x03E82670 LDR X8, [X0 + 0xB8]
	0x03E82674 LDR X0, [X8]
	0x03E82678 LDP X20, X19, [X31 + 0x10]
	0x03E8267C LDR X30, [X31], #0x20
	0x03E82680 RET

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X0
	005 Move X0, 0x29D000
	006 Move X0, [X0+816]
	007 Call 0x1C17D08
	008 Call 0x1C17F10
	009 Move W3, 11
	010 Move X1, X19
	011 Move X2, X31
	012 Move X4, X31
	013 Move X5, X31
	014 Move X20, X0
	015 Call WebException..ctor, X0, X1, X2, X3, X4
	016 Move X0, 0x2EB000
	017 Move X0, [X0+3400]
	018 Call 0x1C17D08
	019 Move X1, X0
	020 Move X0, X20
	021 Call 0x1C17DEC

Method: System.Void write(System.Byte[] buffer, System.Int32 offset, System.Int32 length)

Disassembly:
	0x03E82AB0 STR X31, [X19]
	0x03E82AB4 LDR X0, [X21]
	0x03E82AB8 MOVZ W1, 0x1
	0x03E82ABC BL 0x1C16D6C
	0x03E82AC0 CBZ X0, 0x3E82BFC
	0x03E82AC4 LDR W8, [X0 + 0x18]
	0x03E82AC8 MOV X1, X0
	0x03E82ACC CBZ W8, 0x3E82C00
	0x03E82AD0 MOVZ W8, 0x22
	0x03E82AD4 STRH W8, [X1 + 0x20]
	0x03E82AD8 CBZ X20, 0x3E82BFC
	0x03E82ADC MOV X0, X20
	0x03E82AE0 MOV X2, X31
	0x03E82AE4 BL 0x322BBA0
	0x03E82AE8 LDR X8, [X21]
	0x03E82AEC MOV X20, X0
	0x03E82AF0 MOVZ W1, 0x1
	0x03E82AF4 MOV X0, X8
	0x03E82AF8 BL 0x1C16D6C
	0x03E82AFC CBZ X0, 0x3E82BFC
	0x03E82B00 LDR W8, [X0 + 0x18]
	0x03E82B04 MOV X1, X0
	0x03E82B08 CBZ W8, 0x3E82C00
	0x03E82B0C MOVZ W8, 0x2C
	0x03E82B10 STRH W8, [X1 + 0x20]
	0x03E82B14 CBZ X20, 0x3E82BFC
	0x03E82B18 MOV X0, X20
	0x03E82B1C MOV X2, X31
	0x03E82B20 BL 0x3229E68
	0x03E82B24 CBZ X0, 0x3E82BFC
	0x03E82B28 ADRP X8, 0x272000
	0x03E82B2C LDR X8, [X8 + 0xE58]
	0x03E82B30 LDR W21, [X0 + 0x18]
	0x03E82B34 MOV X20, X0
	0x03E82B38 LDR X0, [X8]
	0x03E82B3C MOV W1, W21
	0x03E82B40 BL 0x1C16D6C
	0x03E82B44 CMP W21, 0x1
	0x03E82B48 MOV X22, X0
	0x03E82B4C B.LT 0x3E82BD8
	0x03E82B50 MOV W8, W31
	0x03E82B54 MOVZ W24, 0x1
	0x03E82B58 MOVZ W23, 0x80000000
	0x03E82B5C LDR W9, [X20 + 0x18]
	0x03E82B60 CMP W8, W9
	0x03E82B64 B.CS 0x3E82C00
	0x03E82B68 SXTW X25, W8
	0x03E82B6C ADD X8, X20, X25, 0x3, LSL
	0x03E82B70 LDR X0, [X8 + 0x20]
	0x03E82B74 CBZ X0, 0x3E82BFC
	0x03E82B78 MOV X1, X31
	0x03E82B7C BL 0x322B8DC
	0x03E82B80 CBZ X0, 0x3E82BFC
	0x03E82B84 CBZ X22, 0x3E82BFC
	0x03E82B88 LDR W8, [X22 + 0x18]
	0x03E82B8C LDR W9, [X0 + 0x10]
	0x03E82B90 CMP W25, W8
	0x03E82B94 CBZ W9, 0x3E82BB4
	0x03E82B98 B.CS 0x3E82C00
	0x03E82B9C ADD X8, X22, X25, 0x2, LSL
	0x03E82BA0 ADD X1, X8, 0x20
	0x03E82BA4 MOV X2, X31
	0x03E82BA8 BL 0x337BDF4
	0x03E82BAC TBNZ X0, 0x0, 0x3E82BC0
	0x03E82BB0 B 0x3E82BE0
	0x03E82BB4 B.CS 0x3E82C00
	0x03E82BB8 ADD X8, X22, X25, 0x2, LSL
	0x03E82BBC STR W23, [X8 + 0x20]
	0x03E82BC0 ADD W8, W25, 0x1
	0x03E82BC4 CMP W8, W21
	0x03E82BC8 CSET W24, LT
	0x03E82BCC CMP W21, W8
	0x03E82BD0 B.NE 0x3E82B5C
	0x03E82BD4 B 0x3E82BDC
	0x03E82BD8 MOV W24, W31
	0x03E82BDC STR X22, [X19]
	0x03E82BE0 ORN W8, W31, W24, 0x0
	0x03E82BE4 LDP X20, X19, [X31 + 0x30]
	0x03E82BE8 LDP X22, X21, [X31 + 0x20]
	0x03E82BEC LDP X24, X23, [X31 + 0x10]
	0x03E82BF0 AND W0, W8, 0x1
	0x03E82BF4 LDP X30, X25, [X31], #0x40
	0x03E82BF8 RET
	0x03E82BFC BL 0x1C16F20
	0x03E82C00 BL 0x1C16F28
	0x03E82C04 LDRB W0, [X0 + 0x68]
	0x03E82C08 RET
	0x03E82C0C AND W8, W1, 0x1
	0x03E82C10 STRB W8, [X0 + 0x68]
	0x03E82C14 RET
	0x03E82C18 LDR X0, [X0 + 0x70]
	0x03E82C1C RET
	0x03E82C20 LDR X0, [X0 + 0x78]
	0x03E82C24 RET
	0x03E82C28 STR X30, [X31 - 0x30]!
	0x03E82C2C STP X22, X21, [X31 + 0x10]
	0x03E82C30 STP X20, X19, [X31 + 0x20]
	0x03E82C34 ADRP X21, 0x566000
	0x03E82C38 LDRB W8, [X21 + 0xDEB]
	0x03E82C3C MOV X20, X1
	0x03E82C40 MOV X19, X0
	0x03E82C44 TBNZ X8, 0x0, 0x3E82C74
	0x03E82C48 ADRP X0, 0x2EA000
	0x03E82C4C LDR X0, [X0 + 0xD90]
	0x03E82C50 BL 0x1C16CF4
	0x03E82C54 ADRP X0, 0x278000
	0x03E82C58 LDR X0, [X0 + 0x248]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x567000
	007 Move W8, [X22+3546]
	008 Move W19, W3
	009 Move X21, X1
	010 Move X20, X0
	011 Move [X31+12], W2
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x2EB000
	017 Move X0, [X0+3440]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+3546], W8
	021 Move W0, [X20+84]
	022 Compare W0, 0
	023 JumpIfEqual {29}
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move X8, 0x2EB000
	026 Move X8, [X8+3440]
	027 Move X0, [X8]
	028 Call ChunkStream.throwProtocolViolation, X0
	029 Add X2, X31, 12
	030 Move X0, X20
	031 Move X1, X21
	032 Move W3, W19
	033 Call ChunkStream.setChunkSize, X0, X1, X2, X3
	034 Move [X20+84], W0
	035 Compare W0, 0
	036 JumpIfEqual {100}
	037 Move X0, [X20+72]
	038 Compare X0, 0
	039 JumpIfEqual {106}
	040 Move W1, W31
	041 Move X2, X31
	042 Call StringBuilder.set_Length, X0, X1
	043 Move W0, [X20+84]
	044 Move [X20+80], W31
	045 Move [X20+48], W31
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Move W8, [X31+12]
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Add X2, X31, 12
	050 Move X0, X20
	051 Move X1, X21
	052 Move W3, W19
	053 Call ChunkStream.writeData, X0, X1, X2, X3
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Move [X20+84], W0
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Move W8, [X31+12]
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Add X2, X31, 12
	060 Move X0, X20
	061 Move X1, X21
	062 Move W3, W19
	063 Call ChunkStream.seekCrLf, X0, X1, X2, X3
	064 NotImplemented "Instruction CMP not yet implemented."
	065 Move [X20+84], W0
	066 Move [X20+80], W31
	067 NotImplemented "Instruction CMP not yet implemented."
	068 Move W8, [X31+12]
	069 NotImplemented "Instruction CMP not yet implemented."
	070 Add X2, X31, 12
	071 Move X0, X20
	072 Move X1, X21
	073 Move W3, W19
	074 Call ChunkStream.setTrailer, X0, X1, X2, X3
	075 NotImplemented "Instruction CMP not yet implemented."
	076 Move [X20+84], W0
	077 Move X0, [X20+72]
	078 Compare X0, 0
	079 JumpIfEqual {106}
	080 Move W1, W31
	081 Move X2, X31
	082 Call StringBuilder.set_Length, X0, X1
	083 Move W0, [X20+84]
	084 NotImplemented "Instruction CMP not yet implemented."
	085 Move [X20+40], X21
	086 Move W8, [X31+12]
	087 Move [X20+64], W8
	088 Subtract W8, W19, W8
	089 Move [X20+32], W8
	090 Move W2, [X31+12]
	091 NotImplemented "Instruction CMP not yet implemented."
	092 Move X0, X20
	093 Move X1, X21
	094 Move W3, W19
	095 Move X20, [X31+32]
	096 Move X19, [X31+40]
	097 Move X22, [X31+16]
	098 Move X21, [X31+24]
	099 Move X30, [X31+48]
	100 Move X20, [X31+32]
	101 Move X19, [X31+40]
	102 Move X22, [X31+16]
	103 Move X21, [X31+24]
	104 Move X30, [X31+48]
	105 Return 
	106 Call 0x1C17F20

Method: WebSocketSharp.Net.InputChunkState writeData(System.Byte[] buffer, ref System.Int32 offset, System.Int32 length)

Disassembly:
	0x03E82C5C BL 0x1C16CF4
	0x03E82C60 ADRP X0, 0x273000
	0x03E82C64 LDR X0, [X0 + 0x278]
	0x03E82C68 BL 0x1C16CF4
	0x03E82C6C MOVZ W8, 0x1
	0x03E82C70 STRB W8, [X21 + 0xDEB]
	0x03E82C74 ADRP X21, 0x2EA000
	0x03E82C78 LDR X21, [X21 + 0xD90]
	0x03E82C7C CBNZ X20, 0x3E82C94
	0x03E82C80 ADRP X8, 0x273000
	0x03E82C84 LDR X8, [X8 + 0x278]
	0x03E82C88 LDR X8, [X8]
	0x03E82C8C LDR X8, [X8 + 0xB8]
	0x03E82C90 LDR X20, [X8]
	0x03E82C94 LDR X0, [X21]
	0x03E82C98 ADRP X22, 0x278000
	0x03E82C9C LDR W8, [X0 + 0xE0]
	0x03E82CA0 LDR X22, [X22 + 0x248]
	0x03E82CA4 CBNZ W8, 0x3E82CB0
	0x03E82CA8 BL 0x1C16DFC
	0x03E82CAC LDR X0, [X21]
	0x03E82CB0 LDR X8, [X22]
	0x03E82CB4 LDR X9, [X0 + 0xB8]
	0x03E82CB8 LDR W10, [X8 + 0xE0]
	0x03E82CBC LDR X21, [X9 + 0x8]
	0x03E82CC0 CBNZ W10, 0x3E82CCC
	0x03E82CC4 MOV X0, X8
	0x03E82CC8 BL 0x1C16DFC
	0x03E82CCC MOV X0, X20
	0x03E82CD0 MOV X1, X21
	0x03E82CD4 MOV X2, X31
	0x03E82CD8 BL 0x3E6862C
	0x03E82CDC TBZ X0, 0x0, 0x3E82D04
	0x03E82CE0 LDR X0, [X22]
	0x03E82CE4 LDR W8, [X0 + 0xE0]
	0x03E82CE8 CBNZ W8, 0x3E82CF0
	0x03E82CEC BL 0x1C16DFC
	0x03E82CF0 MOVZ W1, 0x22
	0x03E82CF4 MOV X0, X20
	0x03E82CF8 MOV X2, X31
	0x03E82CFC BL 0x3E6BF40
	0x03E82D00 TBZ X0, 0x0, 0x3E82D18
	0x03E82D04 STR X20, [X19 + 0x78]
	0x03E82D08 LDP X20, X19, [X31 + 0x20]
	0x03E82D0C LDP X22, X21, [X31 + 0x10]
	0x03E82D10 LDR X30, [X31], #0x30
	0x03E82D14 RET
	0x03E82D18 ADRP X0, 0x2EA000
	0x03E82D1C LDR X0, [X0 + 0xDA8]
	0x03E82D20 BL 0x1C16D08
	0x03E82D24 MOV X19, X0
	0x03E82D28 ADRP X0, 0x279000
	0x03E82D2C LDR X0, [X0 + 0x578]
	0x03E82D30 BL 0x1C16D08
	0x03E82D34 BL 0x1C16F10
	0x03E82D38 MOV X20, X0
	0x03E82D3C ADRP X0, 0x27B000
	0x03E82D40 LDR X0, [X0 + 0xEC8]
	0x03E82D44 BL 0x1C16D08
	0x03E82D48 MOV X2, X0
	0x03E82D4C MOV X0, X20
	0x03E82D50 MOV X1, X19
	0x03E82D54 MOV X3, X31
	0x03E82D58 BL 0x330E16C
	0x03E82D5C ADRP X0, 0x2EA000
	0x03E82D60 LDR X0, [X0 + 0xDB8]
	0x03E82D64 BL 0x1C16D08
	0x03E82D68 MOV X1, X0
	0x03E82D6C MOV X0, X20
	0x03E82D70 BL 0x1C16DEC
	0x03E82D74 LDR W0, [X0 + 0x80]
	0x03E82D78 RET
	0x03E82D7C CMP W1, 0x1
	0x03E82D80 B.HI 0x3E82D88
	0x03E82D84 STR W1, [X0 + 0x80]
	0x03E82D88 RET
	0x03E82D8C UBFM W8, W1, 0x13, 0x12
	0x03E82D90 ORR W8, W8, W1, 0x13
	0x03E82D94 UBFM W9, W2, 0x6, 0x5
	0x03E82D98 ORR W9, W9, W2, 0x6
	0x03E82D9C UBFM W10, W3, 0x19, 0x18
	0x03E82DA0 EOR W8, W8, W0, 0x0
	0x03E82DA4 ORR W10, W10, W3, 0x19
	0x03E82DA8 UBFM W11, W4, 0xC, 0xB
	0x03E82DAC EOR W8, W8, W9, 0x0
	0x03E82DB0 EOR W8, W8, W10, 0x0
	0x03E82DB4 ORR W9, W11, W4, 0xC
	0x03E82DB8 EOR W0, W8, W9, 0x0

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X25, 0x567000
	010 Move X23, 0x272000
	011 Move X24, 0x2EB000
	012 Move W8, [X25+3547]
	013 Move X23, [X23+1560]
	014 Move X24, [X24+3448]
	015 Move W21, W3
	016 Move X20, X2
	017 Move X22, X1
	018 Move X19, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {34}
	023 Move X0, 0x272000
	024 Move X0, [X0+1560]
	025 Call 0x1C17CF4
	026 Move X0, 0x2EB000
	027 Move X0, [X0+3448]
	028 Call 0x1C17CF4
	029 Move X0, 0x2EB000
	030 Move X0, [X0+3456]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X25+3547], W8
	034 Move W8, [X20]
	035 Move W10, [X19+16]
	036 Move W9, [X19+20]
	037 Move X0, [X23]
	038 Subtract W8, W21, W8
	039 Subtract W9, W9, W10
	040 NotImplemented "Instruction CMP not yet implemented."
	041 NotImplemented "Instruction CSEL not yet implemented."
	042 Move W1, W21
	043 Call 0x1C17D6C
	044 Move W1, [X20]
	045 Move X23, X0
	046 Move X0, X22
	047 Move X2, X23
	048 Move W3, W31
	049 Move W4, W21
	050 Move X5, X31
	051 Call Buffer.BlockCopy, X0, X1, X2, X3, X4
	052 Move X0, [X24]
	053 Call 0x1C17F10
	054 Move X1, X23
	055 Move X2, X31
	056 Move X22, X0
	057 Call Chunk..ctor, X0, X1
	058 Move X0, [X19+24]
	059 Compare X0, 0
	060 JumpIfEqual {101}
	061 Move X9, 0x2EB000
	062 Move X9, [X9+3456]
	063 Move W10, [X0+28]
	064 Move X8, [X0+16]
	065 Move X9, [X9]
	066 Add W10, W10, 1
	067 Move [X0+28], W10
	068 Compare X8, 0
	069 JumpIfEqual {101}
	070 NotImplemented "Instruction LDRSW not yet implemented."
	071 Move W11, [X8+24]
	072 NotImplemented "Instruction CMP not yet implemented."
	073 Add W9, W10, 1
	074 Add X8, X8, X10
	075 Move [X0+24], W9
	076 Move [X8+32], X22
	077 Move X8, [X9+32]
	078 Move X1, X22
	079 Move X8, [X8+192]
	080 Move X2, [X8+112]
	081 Call List`1<Object>.AddWithResize, X0, X1
	082 Move W8, [X20]
	083 Move X24, [X31+16]
	084 Move X23, [X31+24]
	085 Add W8, W8, W21
	086 Move [X20], W8
	087 Move W8, [X19+16]
	088 Move W9, [X19+20]
	089 Add W8, W8, W21
	090 Move [X19+16], W8
	091 Move X20, [X31+48]
	092 Move X19, [X31+56]
	093 Move X22, [X31+32]
	094 Move X21, [X31+40]
	095 NotImplemented "Instruction CMP not yet implemented."
	096 Move W9, 1
	097 NotImplemented "Instruction CINC not yet implemented."
	098 Move X30, [X31+64]
	099 Move X25, [X31+72]
	100 Return X0
	101 Call 0x1C17F20

Method: System.Void ResetChunkStore()

Disassembly:
	0x03E82DBC RET
	0x03E82DC0 SUB X31, X31, 0x40
	0x03E82DC4 STP X30, X23, [X31 + 0x10]
	0x03E82DC8 STP X22, X21, [X31 + 0x20]
	0x03E82DCC STP X20, X19, [X31 + 0x30]
	0x03E82DD0 ADRP X21, 0x566000
	0x03E82DD4 ADRP X20, 0x271000
	0x03E82DD8 LDRB W8, [X21 + 0xDED]
	0x03E82DDC LDR X20, [X20 + 0x8F0]
	0x03E82DE0 MOV X19, X0
	0x03E82DE4 TBNZ X8, 0x0, 0x3E82E8C
	0x03E82DE8 ADRP X0, 0x273000
	0x03E82DEC LDR X0, [X0 + 0xC48]
	0x03E82DF0 BL 0x1C16CF4
	0x03E82DF4 ADRP X0, 0x272000
	0x03E82DF8 LDR X0, [X0 + 0x9F0]
	0x03E82DFC BL 0x1C16CF4
	0x03E82E00 ADRP X0, 0x278000
	0x03E82E04 LDR X0, [X0 + 0x248]
	0x03E82E08 BL 0x1C16CF4
	0x03E82E0C ADRP X0, 0x271000
	0x03E82E10 LDR X0, [X0 + 0x8F0]
	0x03E82E14 BL 0x1C16CF4
	0x03E82E18 ADRP X0, 0x271000
	0x03E82E1C LDR X0, [X0 + 0xEF8]
	0x03E82E20 BL 0x1C16CF4
	0x03E82E24 ADRP X0, 0x2EA000
	0x03E82E28 LDR X0, [X0 + 0xDC0]
	0x03E82E2C BL 0x1C16CF4
	0x03E82E30 ADRP X0, 0x284000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x567000
	005 Move W8, [X20+3548]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x2EB000
	012 Move X0, [X0+3464]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+3548], W8
	016 Move X8, [X19+24]
	017 NotImplemented "Instruction MOVI not yet implemented."
	018 Move [X19+16], D0
	019 Compare X8, 0
	020 JumpIfEqual {39}
	021 Move W2, [X8+24]
	022 Move W9, [X8+28]
	023 Add W9, W9, 1
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move [X8+24], W31
	026 Move [X8+28], W9
	027 Move X0, [X8+16]
	028 Move X20, [X31+16]
	029 Move X19, [X31+24]
	030 Move W1, W31
	031 Move X3, X31
	032 Move X30, [X31+32]
	033 Call Array.Clear, X0, X1, X2
	034 Return 
	035 Move X20, [X31+16]
	036 Move X19, [X31+24]
	037 Move X30, [X31+32]
	038 Return 
	039 Call 0x1C17F20

Method: System.Int32 Read(System.Byte[] buffer, System.Int32 offset, System.Int32 count)

Disassembly:
	0x03E82E34 LDR X0, [X0 + 0xA28]
	0x03E82E38 BL 0x1C16CF4
	0x03E82E3C ADRP X0, 0x2EA000
	0x03E82E40 LDR X0, [X0 + 0xDC8]
	0x03E82E44 BL 0x1C16CF4

ISIL:
	001 NotImplemented "Instruction CMP not yet implemented."
	002 Call ChunkStream.read, X0, X1, X2, X3
	003 Return X0
	004 Move W0, W31
	005 Return X0

Method: System.Void Write(System.Byte[] buffer, System.Int32 offset, System.Int32 count)

Disassembly:
	0x03E82E48 ADRP X0, 0x2EA000
	0x03E82E4C LDR X0, [X0 + 0xDD0]
	0x03E82E50 BL 0x1C16CF4
	0x03E82E54 ADRP X0, 0x2EA000
	0x03E82E58 LDR X0, [X0 + 0xDD8]

ISIL:
	001 NotImplemented "Instruction CMP not yet implemented."
	002 Add W3, W3, W2
	003 Call ChunkStream.write, X0, X1, X2, X3
	004 Return 
	005 Return 

