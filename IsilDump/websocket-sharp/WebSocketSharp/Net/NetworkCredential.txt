Type: WebSocketSharp.Net.NetworkCredential

Method: System.Void .cctor()

Disassembly:
	0x03E9F4E0 LDR X8, [X0]
	0x03E9F4E4 MOV X4, X31
	0x03E9F4E8 MOV X5, X31
	0x03E9F4EC MOV X19, X0
	0x03E9F4F0 LDR X9, [X8 + 0x2B8]
	0x03E9F4F4 LDR X6, [X8 + 0x2C0]
	0x03E9F4F8 BLR X9
	0x03E9F4FC LDR X8, [X19]
	0x03E9F500 MOV X1, X0
	0x03E9F504 MOV X0, X19
	0x03E9F508 LDR X3, [X8 + 0x2C8]
	0x03E9F50C LDR X2, [X8 + 0x2D0]
	0x03E9F510 LDP X30, X19, [X31], #0x10
	0x03E9F514 BR X3
	0x03E9F518 MOV X1, X31
	0x03E9F51C B 0x3663550
	0x03E9F520 MOV X2, X31
	0x03E9F524 B 0x3663874
	0x03E9F528 STR X30, [X31 - 0x30]!
	0x03E9F52C STP X22, X21, [X31 + 0x10]
	0x03E9F530 STP X20, X19, [X31 + 0x20]
	0x03E9F534 ADRP X21, 0x549000
	0x03E9F538 ADRP X22, 0x25D000
	0x03E9F53C LDRB W8, [X21 + 0xEDB]
	0x03E9F540 LDR X22, [X22 + 0x8D8]
	0x03E9F544 MOV X19, X1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x54A000
	006 Move X21, 0x255000
	007 Move X19, 0x2CE000
	008 Move W8, [X20+3793]
	009 Move X21, [X21+2760]
	010 Move X19, [X19+2472]
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x2CE000
	016 Move X0, [X0+2472]
	017 Call 0x1C17CF4
	018 Move X0, 0x255000
	019 Move X0, [X0+2760]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X20+3793], W8
	023 Move X0, [X21]
	024 Move W1, W31
	025 Call 0x1C17D6C
	026 Move X8, [X19]
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X8, [X8+184]
	030 Move [X8], X0
	031 Move X30, [X31+32]
	032 Move X21, [X31+40]
	033 Return 

Method: System.Void .ctor(System.String username, System.String password)

Disassembly:
	0x03E9F548 MOV X20, X0
	0x03E9F54C TBNZ X8, 0x0, 0x3E9F570
	0x03E9F550 ADRP X0, 0x25D000

ISIL:
	001 Move X3, X31
	002 Move X4, X31

Method: System.Void .ctor(System.String username, System.String password, System.String domain, System.String[] roles)

Disassembly:
	0x03E9F554 LDR X0, [X0 + 0x8D8]
	0x03E9F558 BL 0x1C16CF4
	0x03E9F55C ADRP X0, 0x2CD000
	0x03E9F560 LDR X0, [X0 + 0x368]
	0x03E9F564 BL 0x1C16CF4
	0x03E9F568 MOVZ W8, 0x1
	0x03E9F56C STRB W8, [X21 + 0xEDB]
	0x03E9F570 LDR X0, [X22]
	0x03E9F574 MOVZ W1, 0x2
	0x03E9F578 BL 0x1C16D6C
	0x03E9F57C CBZ X0, 0x3E9F5FC
	0x03E9F580 LDR W8, [X0 + 0x18]
	0x03E9F584 MOV X1, X0
	0x03E9F588 CBZ W8, 0x3E9F600
	0x03E9F58C MOVZ W9, 0x25
	0x03E9F590 CMP W8, 0x1
	0x03E9F594 STRH W9, [X1 + 0x20]
	0x03E9F598 B.EQ 0x3E9F600
	0x03E9F59C MOVZ W8, 0x2B
	0x03E9F5A0 STRH W8, [X1 + 0x22]
	0x03E9F5A4 CBZ X20, 0x3E9F5FC
	0x03E9F5A8 MOV X0, X20
	0x03E9F5AC MOV X2, X31
	0x03E9F5B0 BL 0x322BE8C
	0x03E9F5B4 TBNZ X0, 0x1F, 0x3E9F5E8
	0x03E9F5B8 ADRP X8, 0x2CD000
	0x03E9F5BC LDR X8, [X8 + 0x368]
	0x03E9F5C0 LDR X0, [X8]
	0x03E9F5C4 LDR W8, [X0 + 0xE0]
	0x03E9F5C8 CBNZ W8, 0x3E9F5D0
	0x03E9F5CC BL 0x1C16DFC
	0x03E9F5D0 MOV X0, X20
	0x03E9F5D4 MOV X1, X19
	0x03E9F5D8 LDP X20, X19, [X31 + 0x20]
	0x03E9F5DC LDP X22, X21, [X31 + 0x10]
	0x03E9F5E0 LDR X30, [X31], #0x30
	0x03E9F5E4 B 0x3E97B08
	0x03E9F5E8 MOV X0, X20
	0x03E9F5EC LDP X20, X19, [X31 + 0x20]
	0x03E9F5F0 LDP X22, X21, [X31 + 0x10]
	0x03E9F5F4 LDR X30, [X31], #0x30
	0x03E9F5F8 RET
	0x03E9F5FC BL 0x1C16F20
	0x03E9F600 BL 0x1C16F28
	0x03E9F604 STP X30, X19, [X31 - 0x10]!
	0x03E9F608 MOV X19, X0
	0x03E9F60C MOV X0, X31
	0x03E9F610 BL 0x3241948
	0x03E9F614 MOV X1, X0
	0x03E9F618 MOV X0, X19
	0x03E9F61C LDP X30, X19, [X31], #0x10
	0x03E9F620 B 0x3E9F624
	0x03E9F624 STP X30, X27, [X31 - 0x50]!
	0x03E9F628 STP X26, X25, [X31 + 0x10]
	0x03E9F62C STP X24, X23, [X31 + 0x20]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, X1
	008 Move X1, X31
	009 Move X19, X4
	010 Move X20, X3
	011 Move X23, X2
	012 Move X22, X0
	013 Call Object..ctor, X0
	014 Compare X21, 0
	015 JumpIfEqual {30}
	016 Move W8, [X21+16]
	017 Compare W8, 0
	018 JumpIfEqual {42}
	019 Move [X22+16], X20
	020 Move [X22+24], X23
	021 Move [X22+32], X19
	022 Move [X22+40], X21
	023 Move X20, [X31+32]
	024 Move X19, [X31+40]
	025 Move X22, [X31+16]
	026 Move X21, [X31+24]
	027 Move X30, [X31+48]
	028 Move X23, [X31+56]
	029 Return 
	030 Move X0, 0x25A000
	031 Move X0, [X0+1320]
	032 Call 0x1C17D08
	033 Call 0x1C17F10
	034 Move X19, X0
	035 Move X0, 0x2CE000
	036 Move X0, [X0+2488]
	037 Call 0x1C17D08
	038 Move X1, X0
	039 Move X0, X19
	040 Move X2, X31
	041 Call ArgumentNullException..ctor, X0, X1
	042 Move X0, 0x25D000
	043 Move X0, [X0+1400]
	044 Call 0x1C17D08
	045 Call 0x1C17F10
	046 Move X19, X0
	047 Move X0, 0x27E000
	048 Move X0, [X0+2488]
	049 Call 0x1C17D08
	050 Move X20, X0
	051 Move X0, 0x2CE000
	052 Move X0, [X0+2488]
	053 Call 0x1C17D08
	054 Move X2, X0
	055 Move X0, X19
	056 Move X1, X20
	057 Move X3, X31
	058 Call ArgumentException..ctor, X0, X1, X2
	059 Move X0, 0x2D0000
	060 Move X0, [X0+224]
	061 Call 0x1C17D08
	062 Move X1, X0
	063 Move X0, X19
	064 Call 0x1C17DEC

Method: System.String get_Domain()

Disassembly:
	0x03E9F630 STP X22, X21, [X31 + 0x30]
	0x03E9F634 STP X20, X19, [X31 + 0x40]
	0x03E9F638 ADRP X20, 0x549000
	0x03E9F63C LDRB W8, [X20 + 0xEDC]
	0x03E9F640 MOV X19, X1
	0x03E9F644 MOV X21, X0
	0x03E9F648 TBNZ X8, 0x0, 0x3E9F690
	0x03E9F64C ADRP X0, 0x25D000
	0x03E9F650 LDR X0, [X0 + 0x8D8]
	0x03E9F654 BL 0x1C16CF4
	0x03E9F658 ADRP X0, 0x2CF000
	0x03E9F65C LDR X0, [X0 + 0x120]
	0x03E9F660 BL 0x1C16CF4
	0x03E9F664 ADRP X0, 0x256000
	0x03E9F668 LDR X0, [X0 + 0x278]
	0x03E9F66C BL 0x1C16CF4
	0x03E9F670 ADRP X0, 0x281000
	0x03E9F674 LDR X0, [X0 + 0xFB8]
	0x03E9F678 BL 0x1C16CF4
	0x03E9F67C ADRP X0, 0x282000
	0x03E9F680 LDR X0, [X0 + 0x990]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x54A000
	005 Move W8, [X20+3794]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x257000
	012 Move X0, [X0+632]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+3794], W8
	016 Move X0, [X19+16]
	017 Compare X0, 0
	018 JumpIfNotEqual {24}
	019 Move X8, 0x257000
	020 Move X8, [X8+632]
	021 Move X8, [X8]
	022 Move X8, [X8+184]
	023 Move X0, [X8]
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X30, [X31+32]
	027 Return X0

Method: System.Void set_Domain(System.String value)

Disassembly:
	0x03E9F684 BL 0x1C16CF4
	0x03E9F688 MOVZ W8, 0x1

ISIL:
	001 Move [X0+16], X1
	002 Return 

Method: System.String get_Password()

Disassembly:
	0x03E97E54 MOV X19, X0
	0x03E97E58 ADRP X0, 0x28B000
	0x03E97E5C LDR X0, [X0 + 0x308]
	0x03E97E60 BL 0x1C16D08
	0x03E97E64 MOV X1, X0
	0x03E97E68 MOV X0, X19
	0x03E97E6C MOV X2, X31
	0x03E97E70 BL 0x330E100
	0x03E97E74 B 0x3E97EC8
	0x03E97E78 ADRP X0, 0x264000
	0x03E97E7C LDR X0, [X0 + 0x760]
	0x03E97E80 BL 0x1C16D08
	0x03E97E84 BL 0x1C16F10
	0x03E97E88 MOV X19, X0
	0x03E97E8C ADRP X0, 0x28B000
	0x03E97E90 LDR X0, [X0 + 0xD90]
	0x03E97E94 B 0x3E97EB4
	0x03E97E98 ADRP X0, 0x264000
	0x03E97E9C LDR X0, [X0 + 0x760]
	0x03E97EA0 BL 0x1C16D08
	0x03E97EA4 BL 0x1C16F10

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x552000
	005 Move W8, [X20+3795]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x25F000
	012 Move X0, [X0+632]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+3795], W8
	016 Move X0, [X19+24]
	017 Compare X0, 0
	018 JumpIfNotEqual {24}
	019 Move X8, 0x25F000
	020 Move X8, [X8+632]
	021 Move X8, [X8]
	022 Move X8, [X8+184]
	023 Move X0, [X8]
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X30, [X31+32]
	027 Return X0

Method: System.Void set_Password(System.String value)

Disassembly:
	0x03E9F68C STRB W8, [X20 + 0xEDC]
	0x03E9F690 CBZ X21, 0x3E9F6B8

ISIL:
	001 Move [X0+24], X1
	002 Return 

Method: System.String[] get_Roles()

Disassembly:
	0x03E97EA8 MOV X19, X0
	0x03E97EAC ADRP X0, 0x284000
	0x03E97EB0 LDR X0, [X0 + 0x648]
	0x03E97EB4 BL 0x1C16D08
	0x03E97EB8 MOV X1, X0
	0x03E97EBC MOV X0, X19
	0x03E97EC0 MOV X2, X31
	0x03E97EC4 BL 0x3316014
	0x03E97EC8 ADRP X0, 0x2D6000
	0x03E97ECC LDR X0, [X0 + 0xD48]
	0x03E97ED0 BL 0x1C16D08
	0x03E97ED4 MOV X1, X0
	0x03E97ED8 MOV X0, X19
	0x03E97EDC BL 0x1C16DEC
	0x03E97EE0 BL 0x1C16F20
	0x03E97EE4 STR X30, [X31 - 0x20]!
	0x03E97EE8 STP X20, X19, [X31 + 0x10]
	0x03E97EEC ADRP X20, 0x551000
	0x03E97EF0 LDRB W8, [X20 + 0xE91]
	0x03E97EF4 MOV X19, X0
	0x03E97EF8 TBNZ X8, 0x0, 0x3E97F10
	0x03E97EFC ADRP X0, 0x2D5000
	0x03E97F00 LDR X0, [X0 + 0x368]
	0x03E97F04 BL 0x1C16CF4
	0x03E97F08 MOVZ W8, 0x1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x552000
	005 Move W8, [X20+3796]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x2D6000
	012 Move X0, [X0+2472]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+3796], W8
	016 Move X0, [X19+32]
	017 Compare X0, 0
	018 JumpIfNotEqual {29}
	019 Move X19, 0x2D6000
	020 Move X19, [X19+2472]
	021 Move X0, [X19]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {27}
	025 Call 0x1C17DFC
	026 Move X0, [X19]
	027 Move X8, [X0+184]
	028 Move X0, [X8]
	029 Move X20, [X31+16]
	030 Move X19, [X31+24]
	031 Move X30, [X31+32]
	032 Return X0

Method: System.Void set_Roles(System.String[] value)

Disassembly:
	0x03E9F694 LDR W8, [X21 + 0x10]
	0x03E9F698 CBZ W8, 0x3E9F6B8

ISIL:
	001 Move [X0+32], X1
	002 Return 

Method: System.String get_Username()

Disassembly:
	0x03E9F69C ADRP X8, 0x282000
	0x03E9F6A0 LDR X8, [X8 + 0x990]

ISIL:
	001 Move X0, [X0+40]
	002 Return X0

Method: System.Void set_Username(System.String value)

Disassembly:
	0x03E9F6A4 MOV X0, X21
	0x03E9F6A8 MOV X2, X31

ISIL:
	001 Move [X0+40], X1
	002 Return 

