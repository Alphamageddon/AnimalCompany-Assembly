Type: WebSocketSharp.Net.HttpListenerRequest

Method: System.Void .cctor()

Disassembly:
	0x03E8F7A8 LDR X2, [X8]
	0x03E8F7AC MOVZ W3, 0x1
	0x03E8F7B0 MOV X0, X19
	0x03E8F7B4 LDR X1, [X9]
	0x03E8F7B8 BL 0x3E8FB50
	0x03E8F7BC ADRP X8, 0x266000
	0x03E8F7C0 LDR X8, [X8 + 0xA28]
	0x03E8F7C4 LDR X21, [X20 + 0x60]
	0x03E8F7C8 LDR X0, [X8]
	0x03E8F7CC LDR W8, [X0 + 0xE0]
	0x03E8F7D0 CBNZ W8, 0x3E8F7D8
	0x03E8F7D4 BL 0x1C16DFC
	0x03E8F7D8 MOV X0, X21
	0x03E8F7DC MOV X1, X31
	0x03E8F7E0 MOV X2, X31
	0x03E8F7E4 BL 0x361A090
	0x03E8F7E8 TBZ X0, 0x0, 0x3E8F818
	0x03E8F7EC LDR X0, [X20 + 0x60]
	0x03E8F7F0 CBZ X0, 0x3E8F9A8
	0x03E8F7F4 MOV X1, X31
	0x03E8F7F8 BL 0x361B5B0
	0x03E8F7FC ADRP X8, 0x2AB000
	0x03E8F800 LDR X8, [X8 + 0x9E0]
	0x03E8F804 MOV X2, X0
	0x03E8F808 MOVZ W3, 0x1
	0x03E8F80C MOV X0, X19
	0x03E8F810 LDR X1, [X8]
	0x03E8F814 BL 0x3E8FB50
	0x03E8F818 LDR X0, [X20 + 0x38]
	0x03E8F81C CBZ X0, 0x3E8F98C

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, 0x55A000
	004 Move W8, [X19+3662]
	005 Move TEMP, X8
	006 And TEMP, TEMP, 1
	007 Compare TEMP, 1
	008 JumpIfEqual {17}
	009 Move X0, 0x2DF000
	010 Move X0, [X0+360]
	011 Call 0x1C17CF4
	012 Move X0, 0x2DF000
	013 Move X0, [X0+1032]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+3662], W8
	017 Move X0, X31
	018 Call Encoding.get_ASCII
	019 Compare X0, 0
	020 JumpIfEqual {36}
	021 Move X9, 0x2DF000
	022 Move X8, [X0]
	023 Move X9, [X9+1032]
	024 Move X19, 0x2DF000
	025 Move X2, [X8+624]
	026 Move X1, [X9]
	027 Move X9, [X8+616]
	028 Move X19, [X19+360]
	029 NotImplemented "Instruction BLR not yet implemented."
	030 Move X8, [X19]
	031 Move X8, [X8+184]
	032 Move [X8], X0
	033 Move X30, [X31+16]
	034 Move X19, [X31+24]
	035 Return 
	036 Call 0x1C17F20

Method: System.Void .ctor(WebSocketSharp.Net.HttpListenerContext context)

Disassembly:
	0x03E8EF84 BL 0x1C16F20
	0x03E8EF88 LDR X0, [X0 + 0xA0]
	0x03E8EF8C RET
	0x03E8EF90 STR X30, [X31 - 0x20]!
	0x03E8EF94 STP X20, X19, [X31 + 0x10]
	0x03E8EF98 ADRP X20, 0x55A000
	0x03E8EF9C LDRB W8, [X20 + 0xE5A]
	0x03E8EFA0 MOV X19, X0
	0x03E8EFA4 TBNZ X8, 0x0, 0x3E8EFEC
	0x03E8EFA8 ADRP X0, 0x26E000
	0x03E8EFAC LDR X0, [X0 + 0x8D8]
	0x03E8EFB0 BL 0x1C16CF4
	0x03E8EFB4 ADRP X0, 0x2DE000
	0x03E8EFB8 LDR X0, [X0 + 0xE98]
	0x03E8EFBC BL 0x1C16CF4
	0x03E8EFC0 ADRP X0, 0x26C000
	0x03E8EFC4 LDR X0, [X0 + 0x248]
	0x03E8EFC8 BL 0x1C16CF4
	0x03E8EFCC ADRP X0, 0x267000
	0x03E8EFD0 LDR X0, [X0 + 0xE78]
	0x03E8EFD4 BL 0x1C16CF4
	0x03E8EFD8 ADRP X0, 0x2AC000
	0x03E8EFDC LDR X0, [X0 + 0x9C8]
	0x03E8EFE0 BL 0x1C16CF4
	0x03E8EFE4 MOVZ W8, 0x1
	0x03E8EFE8 STRB W8, [X20 + 0xE5A]
	0x03E8EFEC LDR X0, [X19 + 0x48]
	0x03E8EFF0 CBZ X0, 0x3E8F0B0
	0x03E8EFF4 ADRP X8, 0x2AC000
	0x03E8EFF8 LDR X8, [X8 + 0x9C8]
	0x03E8EFFC MOV X2, X31
	0x03E8F000 LDR X1, [X8]
	0x03E8F004 BL 0x366456C
	0x03E8F008 CBZ X0, 0x3E8F0A4
	0x03E8F00C MOV X20, X0
	0x03E8F010 LDR X0, [X19 + 0xA8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x55B000
	006 Move W8, [X21+3663]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x2DF000
	014 Move X0, [X0+3200]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+3663], W8
	018 Move X0, X19
	019 Move X1, X31
	020 Call Object..ctor, X0
	021 Move [X19+56], X20
	022 Compare X20, 0
	023 JumpIfEqual {47}
	024 Move X8, [X20+16]
	025 Move X9, 0x2DF000
	026 Move X9, [X9+3200]
	027 Move TEMP, 0
	028 Not TEMP
	029 Move X10, TEMP
	030 Move [X19+32], X8
	031 Move [X19+48], X10
	032 Move X0, [X9]
	033 Call 0x1C17F10
	034 Move X1, X31
	035 Move X20, X0
	036 Call WebHeaderCollection..ctor, X0
	037 Move X0, X31
	038 Move [X19+72], X20
	039 Call Guid.NewGuid
	040 Move [X19+120], X0
	041 Move [X19+128], X1
	042 Move X20, [X31+16]
	043 Move X19, [X31+24]
	044 Move X30, [X31+32]
	045 Move X21, [X31+40]
	046 Return 
	047 Call 0x1C17F20

Method: System.String[] get_AcceptTypes()

Disassembly:
	0x03E8F820 MOV X1, X31
	0x03E8F824 BL 0x3E85D6C
	0x03E8F828 MOV X20, X0
	0x03E8F82C CBZ X0, 0x3E8F9AC
	0x03E8F830 ADRP X21, 0x264000
	0x03E8F834 ADRP X22, 0x2DD000
	0x03E8F838 ADRP X23, 0x2AF000
	0x03E8F83C LDR X21, [X21 + 0xE18]
	0x03E8F840 LDR X22, [X22 + 0x9D8]
	0x03E8F844 LDR X23, [X23]
	0x03E8F848 LDR X8, [X20]
	0x03E8F84C LDR X1, [X21]
	0x03E8F850 LDRH W9, [X8 + 0x12E]
	0x03E8F854 CBZ X9, 0x3E8F878
	0x03E8F858 LDR X10, [X8 + 0xB0]
	0x03E8F85C ADD X10, X10, 0x8
	0x03E8F860 LDUR X11, [X10 - 0x8]
	0x03E8F864 CMP X11, X1
	0x03E8F868 B.EQ 0x3E8F888
	0x03E8F86C SUBS X9, X9, 0x1
	0x03E8F870 ADD X10, X10, 0x10
	0x03E8F874 B.NE 0x3E8F860
	0x03E8F878 MOV X0, X20
	0x03E8F87C MOV W2, W31
	0x03E8F880 BL 0x1C5C788
	0x03E8F884 B 0x3E8F894
	0x03E8F888 LDRSW X9, [X10]
	0x03E8F88C ADD X8, X8, X9, 0x4, LSL
	0x03E8F890 ADD X0, X8, 0x138
	0x03E8F894 LDP X8, X1, [X0]
	0x03E8F898 MOV X0, X20
	0x03E8F89C BLR X8
	0x03E8F8A0 TBZ X0, 0x0, 0x3E8F920
	0x03E8F8A4 LDR X8, [X20]
	0x03E8F8A8 LDR X1, [X22]
	0x03E8F8AC LDRH W9, [X8 + 0x12E]
	0x03E8F8B0 CBZ X9, 0x3E8F8D4
	0x03E8F8B4 LDR X10, [X8 + 0xB0]
	0x03E8F8B8 ADD X10, X10, 0x8
	0x03E8F8BC LDUR X11, [X10 - 0x8]
	0x03E8F8C0 CMP X11, X1
	0x03E8F8C4 B.EQ 0x3E8F8E4
	0x03E8F8C8 SUBS X9, X9, 0x1
	0x03E8F8CC ADD X10, X10, 0x10
	0x03E8F8D0 B.NE 0x3E8F8BC
	0x03E8F8D4 MOV X0, X20
	0x03E8F8D8 MOV W2, W31
	0x03E8F8DC BL 0x1C5C788
	0x03E8F8E0 B 0x3E8F8F0
	0x03E8F8E4 LDRSW X9, [X10]
	0x03E8F8E8 ADD X8, X8, X9, 0x4, LSL
	0x03E8F8EC ADD X0, X8, 0x138
	0x03E8F8F0 LDP X8, X1, [X0]
	0x03E8F8F4 MOV X0, X20
	0x03E8F8F8 BLR X8
	0x03E8F8FC CBZ X0, 0x3E8F9A4
	0x03E8F900 MOV X1, X31
	0x03E8F904 BL 0x3E81014
	0x03E8F908 LDR X1, [X23]
	0x03E8F90C MOV X2, X0
	0x03E8F910 MOVZ W3, 0x1
	0x03E8F914 MOV X0, X19
	0x03E8F918 BL 0x3E8FB50
	0x03E8F91C B 0x3E8F848
	0x03E8F920 MOV X21, X31
	0x03E8F924 CBZ X20, 0x3E8F988
	0x03E8F928 ADRP X10, 0x264000
	0x03E8F92C LDR X8, [X20]
	0x03E8F930 LDR X10, [X10 + 0xE00]
	0x03E8F934 LDRH W9, [X8 + 0x12E]
	0x03E8F938 LDR X1, [X10]
	0x03E8F93C CBZ X9, 0x3E8F960

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x55A000
	006 Move W8, [X20+3664]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {29}
	012 Move X0, 0x26E000
	013 Move X0, [X0+2264]
	014 Call 0x1C17CF4
	015 Move X0, 0x2DE000
	016 Move X0, [X0+3736]
	017 Call 0x1C17CF4
	018 Move X0, 0x26C000
	019 Move X0, [X0+584]
	020 Call 0x1C17CF4
	021 Move X0, 0x267000
	022 Move X0, [X0+3704]
	023 Call 0x1C17CF4
	024 Move X0, 0x2AC000
	025 Move X0, [X0+1776]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X20+3664], W8
	029 Move X0, [X19+72]
	030 Compare X0, 0
	031 JumpIfEqual {85}
	032 Move X8, 0x2AC000
	033 Move X8, [X8+1776]
	034 Move X2, X31
	035 Move X1, [X8]
	036 Call NameValueCollection.get_Item, X0, X1
	037 Compare X0, 0
	038 JumpIfEqual {80}
	039 Move X20, X0
	040 Move X0, [X19+16]
	041 Compare X0, 0
	042 JumpIfNotEqual {80}
	043 Move X8, 0x26E000
	044 Move X8, [X8+2264]
	045 Move W1, 1
	046 Move X0, [X8]
	047 Call 0x1C17D6C
	048 Compare X0, 0
	049 JumpIfEqual {85}
	050 Move W8, [X0+24]
	051 Move X21, X0
	052 Compare W8, 0
	053 JumpIfEqual {86}
	054 Move W8, 44
	055 NotImplemented "Instruction STRH not yet implemented."
	056 Move X8, 0x26C000
	057 Move X8, [X8+584]
	058 Move X0, [X8]
	059 Move W8, [X0+224]
	060 Compare W8, 0
	061 JumpIfNotEqual {63}
	062 Call 0x1C17DFC
	063 Move X0, X20
	064 Move X1, X21
	065 Move X2, X31
	066 Call Ext.SplitHeaderValue, X0, X1
	067 Move X1, X31
	068 Call Ext.TrimEach, X0
	069 Move X8, 0x2DE000
	070 Move X8, [X8+3736]
	071 Move X1, [X8]
	072 Call 0x21E3B88, X0
	073 Compare X0, 0
	074 JumpIfEqual {85}
	075 Move X8, 0x267000
	076 Move X8, [X8+3704]
	077 Move X1, [X8]
	078 Call List`1<Object>.ToArray, X0
	079 Move [X19+16], X0
	080 Move X20, [X31+16]
	081 Move X19, [X31+24]
	082 Move X30, [X31+32]
	083 Move X21, [X31+40]
	084 Return X0
	085 Call 0x1C17F20
	086 Call 0x1C17F28

Method: System.Int32 get_ClientCertificateError()

Disassembly:
	0x03E8F940 LDR X10, [X8 + 0xB0]
	0x03E8F944 ADD X10, X10, 0x8
	0x03E8F948 LDUR X11, [X10 - 0x8]
	0x03E8F94C CMP X11, X1
	0x03E8F950 B.EQ 0x3E8F970
	0x03E8F954 SUBS X9, X9, 0x1
	0x03E8F958 ADD X10, X10, 0x10
	0x03E8F95C B.NE 0x3E8F948
	0x03E8F960 MOV X0, X20
	0x03E8F964 MOV W2, W31
	0x03E8F968 BL 0x1C5C788
	0x03E8F96C B 0x3E8F97C
	0x03E8F970 LDRSW X9, [X10]
	0x03E8F974 ADD X8, X8, X9, 0x4, LSL

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0x265000
	004 Move X0, [X0+2880]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X1, X31
	008 Move X19, X0
	009 Call NotSupportedException..ctor, X0
	010 Move X0, 0x2DF000
	011 Move X0, [X0+1040]
	012 Call 0x1C17D08
	013 Move X1, X0
	014 Move X0, X19
	015 Call 0x1C17DEC

Method: System.Text.Encoding get_ContentEncoding()

Disassembly:
	0x03E8F978 ADD X0, X8, 0x138
	0x03E8F97C LDP X8, X1, [X0]
	0x03E8F980 MOV X0, X20
	0x03E8F984 BLR X8
	0x03E8F988 CBNZ X21, 0x3E8F9B0
	0x03E8F98C MOV X0, X19
	0x03E8F990 LDP X20, X19, [X31 + 0x30]
	0x03E8F994 LDP X22, X21, [X31 + 0x20]
	0x03E8F998 LDP X30, X23, [X31 + 0x10]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move X0, [X0+40]
	005 Compare X0, 0
	006 JumpIfNotEqual {10}
	007 Move X0, X19
	008 Call HttpListenerRequest.getContentEncoding, X0
	009 Move [X19+40], X0
	010 Move X30, [X31+16]
	011 Move X19, [X31+24]
	012 Return X0

Method: System.Int64 get_ContentLength64()

Disassembly:
	0x03E8FA48 ADD X0, X8, 0x138
	0x03E8FA4C LDP X8, X1, [X0]

ISIL:
	001 Move X0, [X0+48]
	002 Return X0

Method: System.String get_ContentType()

Disassembly:
	0x03E8FA50 MOV X0, X20
	0x03E8FA54 BLR X8
	0x03E8FA58 CBNZ X21, 0x3E8FA64
	0x03E8FA5C MOV X0, X22
	0x03E8FA60 BL 0x1D2C690
	0x03E8FA64 MOV X0, X21
	0x03E8FA68 BL 0x1C16F18
	0x03E8FA6C BL 0x1990590
	0x03E8FA70 STP X30, X21, [X31 - 0x20]!
	0x03E8FA74 STP X20, X19, [X31 + 0x10]
	0x03E8FA78 MOV W19, W1
	0x03E8FA7C MOV X1, X31
	0x03E8FA80 MOV X20, X0
	0x03E8FA84 AND W21, W2, 0x1
	0x03E8FA88 BL 0x3663550
	0x03E8FA8C STR W19, [X20 + 0x6C]
	0x03E8FA90 STRB W21, [X20 + 0x68]
	0x03E8FA94 LDP X20, X19, [X31 + 0x10]
	0x03E8FA98 LDP X30, X21, [X31], #0x20
	0x03E8FA9C RET
	0x03E8FAA0 STP X30, X21, [X31 - 0x20]!

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x55A000
	005 Move W8, [X20+3665]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x2A0000
	012 Move X0, [X0+2440]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+3665], W8
	016 Move X0, [X19+72]
	017 Compare X0, 0
	018 JumpIfEqual {28}
	019 Move X8, 0x2A0000
	020 Move X8, [X8+2440]
	021 Move X20, [X31+16]
	022 Move X19, [X31+24]
	023 Move X2, X31
	024 Move X1, [X8]
	025 Move X30, [X31+32]
	026 Call NameValueCollection.get_Item, X0, X1
	027 Return X0
	028 Call 0x1C17F20

Method: WebSocketSharp.Net.CookieCollection get_Cookies()

Disassembly:
	0x03E8FAA4 STP X20, X19, [X31 + 0x10]
	0x03E8FAA8 ADRP X21, 0x559000
	0x03E8FAAC LDRB W8, [X21 + 0xE6D]
	0x03E8FAB0 MOV X20, X1
	0x03E8FAB4 MOV X19, X0
	0x03E8FAB8 TBNZ X8, 0x0, 0x3E8FADC
	0x03E8FABC ADRP X0, 0x2DE000
	0x03E8FAC0 LDR X0, [X0 + 0x440]
	0x03E8FAC4 BL 0x1C16CF4
	0x03E8FAC8 ADRP X0, 0x2DE000
	0x03E8FACC LDR X0, [X0 + 0x448]
	0x03E8FAD0 BL 0x1C16CF4
	0x03E8FAD4 MOVZ W8, 0x1
	0x03E8FAD8 STRB W8, [X21 + 0xE6D]
	0x03E8FADC CBZ X19, 0x3E8FB4C
	0x03E8FAE0 ADRP X8, 0x2DE000
	0x03E8FAE4 LDR X8, [X8 + 0x448]
	0x03E8FAE8 MOVZ W2, 0x4
	0x03E8FAEC MOV X0, X19
	0x03E8FAF0 MOV X3, X31
	0x03E8FAF4 LDR X1, [X8]
	0x03E8FAF8 BL 0x322BD40
	0x03E8FAFC CBZ X20, 0x3E8FB3C
	0x03E8FB00 TBZ X0, 0x1F, 0x3E8FB3C
	0x03E8FB04 LDR X8, [X20]
	0x03E8FB08 MOV X0, X20
	0x03E8FB0C LDP X9, X1, [X8 + 0x1D8]
	0x03E8FB10 BLR X9

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x55A000
	005 Move W8, [X20+3666]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x26C000
	012 Move X0, [X0+584]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+3666], W8
	016 Move X0, [X19+64]
	017 Compare X0, 0
	018 JumpIfNotEqual {32}
	019 Move X8, 0x26C000
	020 Move X8, [X8+584]
	021 Move X20, [X19+72]
	022 Move X0, [X8]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 Move X0, X20
	028 Move W1, W31
	029 Move X2, X31
	030 Call Ext.GetCookies, X0, X1
	031 Move [X19+64], X0
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move X30, [X31+32]
	035 Return X0

Method: System.Boolean get_HasEntityBody()

Disassembly:
	0x03E8FB14 ADRP X8, 0x2DE000
	0x03E8FB18 LDR X8, [X8 + 0x440]
	0x03E8FB1C MOV X1, X19
	0x03E8FB20 LDP X20, X19, [X31 + 0x10]
	0x03E8FB24 MOV X2, X0
	0x03E8FB28 LDR X8, [X8]
	0x03E8FB2C MOV X3, X31
	0x03E8FB30 MOV X0, X8
	0x03E8FB34 LDP X30, X21, [X31], #0x20

ISIL:
	001 Move X8, [X0+48]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 Move W0, 1
	004 Return X0
	005 Move W8, [X0+24]
	006 NotImplemented "Instruction CMP not yet implemented."
	007 NotImplemented "Instruction CSET not yet implemented."
	008 Return X0

Method: System.Collections.Specialized.NameValueCollection get_Headers()

Disassembly:
	0x03E8DB20 MOV X2, X31
	0x03E8DB24 MOV X20, X0

ISIL:
	001 Move X0, [X0+72]
	002 Return X0

Method: System.String get_HttpMethod()

Disassembly:
	0x03E8DB28 BL 0x338C448
	0x03E8DB2C B 0x3E8DB6C

ISIL:
	001 Move X0, [X0+80]
	002 Return X0

Method: System.IO.Stream get_InputStream()

Disassembly:
	0x03E8FB38 B 0x3227BD4
	0x03E8FB3C MOV X0, X19
	0x03E8FB40 LDP X20, X19, [X31 + 0x10]
	0x03E8FB44 LDP X30, X21, [X31], #0x20
	0x03E8FB48 RET
	0x03E8FB4C BL 0x1C16F20
	0x03E8FB50 STR X30, [X31 - 0x40]!
	0x03E8FB54 STP X24, X23, [X31 + 0x10]
	0x03E8FB58 STP X22, X21, [X31 + 0x20]
	0x03E8FB5C STP X20, X19, [X31 + 0x30]
	0x03E8FB60 ADRP X24, 0x559000
	0x03E8FB64 ADRP X23, 0x2DD000
	0x03E8FB68 LDRB W8, [X24 + 0xEB3]
	0x03E8FB6C LDR X23, [X23 + 0xC80]
	0x03E8FB70 MOV W21, W3
	0x03E8FB74 MOV X22, X2
	0x03E8FB78 MOV X19, X1
	0x03E8FB7C MOV X20, X0
	0x03E8FB80 TBNZ X8, 0x0, 0x3E8FBA4
	0x03E8FB84 ADRP X0, 0x2DD000
	0x03E8FB88 LDR X0, [X0 + 0xC80]
	0x03E8FB8C BL 0x1C16CF4
	0x03E8FB90 ADRP X0, 0x26E000
	0x03E8FB94 LDR X0, [X0 + 0xEC8]
	0x03E8FB98 BL 0x1C16CF4
	0x03E8FB9C MOVZ W8, 0x1
	0x03E8FBA0 STRB W8, [X24 + 0xEB3]
	0x03E8FBA4 LDR X0, [X23]
	0x03E8FBA8 ADRP X23, 0x26E000
	0x03E8FBAC LDR W8, [X0 + 0xE0]
	0x03E8FBB0 LDR X23, [X23 + 0xEC8]
	0x03E8FBB4 CBNZ W8, 0x3E8FBBC
	0x03E8FBB8 BL 0x1C16DFC
	0x03E8FBBC LDR X1, [X23]
	0x03E8FBC0 MOV X0, X22
	0x03E8FBC4 BL 0x3E9C768
	0x03E8FBC8 MOV X22, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x55A000
	005 Move W8, [X20+3667]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x294000
	012 Move X0, [X0+3344]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+3667], W8
	016 Move X0, [X19+88]
	017 Compare X0, 0
	018 JumpIfNotEqual {30}
	019 Move X1, [X19+48]
	020 NotImplemented "Instruction CMP not yet implemented."
	021 Move W8, [X19+24]
	022 Compare W8, 0
	023 JumpIfEqual {34}
	024 Move X0, [X19+32]
	025 Compare X0, 0
	026 JumpIfEqual {44}
	027 Move W2, [X19+24]
	028 Call HttpConnection.GetRequestStream, X0, X1, X2
	029 Move [X19+88], X0
	030 Move X20, [X31+16]
	031 Move X19, [X31+24]
	032 Move X30, [X31+32]
	033 Return X0
	034 Move X20, 0x294000
	035 Move X20, [X20+3344]
	036 Move X0, [X20]
	037 Move W8, [X0+224]
	038 Compare W8, 0
	039 JumpIfNotEqual {42}
	040 Call 0x1C17DFC
	041 Move X0, [X20]
	042 Move X8, [X0+184]
	043 Move X0, [X8]
	044 Call 0x1C17F20

Method: System.Boolean get_IsAuthenticated()

Disassembly:
	0x03E8FBCC AND W1, W21, 0x1
	0x03E8FBD0 MOV X0, X19
	0x03E8FBD4 BL 0x3E9CAE4
	0x03E8FBD8 TBZ X0, 0x0, 0x3E8FC00
	0x03E8FBDC MOV X0, X20
	0x03E8FBE0 MOV X1, X19
	0x03E8FBE4 MOV X2, X22
	0x03E8FBE8 LDP X20, X19, [X31 + 0x30]
	0x03E8FBEC LDP X22, X21, [X31 + 0x20]

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+56]
	003 Compare X8, 0
	004 JumpIfEqual {10}
	005 Move X8, [X8+64]
	006 NotImplemented "Instruction CMP not yet implemented."
	007 NotImplemented "Instruction CSET not yet implemented."
	008 Move X30, [X31+16]
	009 Return X0
	010 Call 0x1C17F20

Method: System.Boolean get_IsLocal()

Disassembly:
	0x03E8FBF0 LDP X24, X23, [X31 + 0x10]
	0x03E8FBF4 MOV X3, X31
	0x03E8FBF8 LDR X30, [X31], #0x40
	0x03E8FBFC B 0x3663DE0
	0x03E8FC00 MOV X0, X20
	0x03E8FC04 MOV X1, X19

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+32]
	003 Compare X0, 0
	004 JumpIfEqual {8}
	005 Move X30, [X31+16]
	006 Call HttpConnection.get_IsLocal, X0
	007 Return X0
	008 Call 0x1C17F20

Method: System.Boolean get_IsSecureConnection()

Disassembly:
	0x03E8FC08 MOV X2, X22
	0x03E8FC0C LDP X20, X19, [X31 + 0x30]
	0x03E8FC10 LDP X22, X21, [X31 + 0x20]
	0x03E8FC14 LDP X24, X23, [X31 + 0x10]
	0x03E8FC18 MOV X3, X31
	0x03E8FC1C LDR X30, [X31], #0x40
	0x03E8FC20 B 0x36641D0

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+32]
	003 Compare X8, 0
	004 JumpIfEqual {8}
	005 Move W0, [X8+124]
	006 Move X30, [X31+16]
	007 Return X0
	008 Call 0x1C17F20

Method: System.Boolean get_IsWebSocketRequest()

Disassembly:
	0x03E8FC24 LDRB W0, [X0 + 0x50]
	0x03E8FC28 RET
	0x03E8FC2C AND W8, W1, 0x1
	0x03E8FC30 STRB W8, [X0 + 0x50]
	0x03E8FC34 RET
	0x03E8FC38 STR X30, [X31 - 0x30]!
	0x03E8FC3C STP X22, X21, [X31 + 0x10]
	0x03E8FC40 STP X20, X19, [X31 + 0x20]
	0x03E8FC44 ADRP X20, 0x559000
	0x03E8FC48 ADRP X22, 0x264000
	0x03E8FC4C ADRP X21, 0x2DE000
	0x03E8FC50 LDRB W8, [X20 + 0xE64]
	0x03E8FC54 LDR X22, [X22 + 0x758]
	0x03E8FC58 LDR X21, [X21 + 0x450]
	0x03E8FC5C MOV X19, X0
	0x03E8FC60 TBNZ X8, 0x0, 0x3E8FC84
	0x03E8FC64 ADRP X0, 0x264000
	0x03E8FC68 LDR X0, [X0 + 0x758]
	0x03E8FC6C BL 0x1C16CF4
	0x03E8FC70 ADRP X0, 0x2DE000
	0x03E8FC74 LDR X0, [X0 + 0x450]
	0x03E8FC78 BL 0x1C16CF4
	0x03E8FC7C MOVZ W8, 0x1
	0x03E8FC80 STRB W8, [X20 + 0xE64]
	0x03E8FC84 LDR W8, [X19 + 0x6C]
	0x03E8FC88 LDR X0, [X22]
	0x03E8FC8C LDR X20, [X19 + 0x78]
	0x03E8FC90 ADD X1, X31, 0xC
	0x03E8FC94 STR W8, [X31 + 0xC]
	0x03E8FC98 BL 0x1C16E04
	0x03E8FC9C LDR X8, [X21]
	0x03E8FCA0 LDR X3, [X19 + 0x70]
	0x03E8FCA4 MOV X2, X0
	0x03E8FCA8 MOV X1, X20
	0x03E8FCAC MOV X0, X8
	0x03E8FCB0 MOV X4, X31
	0x03E8FCB4 BL 0x3227C18
	0x03E8FCB8 LDP X20, X19, [X31 + 0x20]
	0x03E8FCBC LDP X22, X21, [X31 + 0x10]
	0x03E8FCC0 LDR X30, [X31], #0x30
	0x03E8FCC4 RET
	0x03E8FCC8 LDR X0, [X0 + 0x18]
	0x03E8FCCC RET

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x55A000
	006 Move X20, 0x28E000
	007 Move W8, [X21+3668]
	008 Move X20, [X20+1232]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {25}
	014 Move X0, 0x26C000
	015 Move X0, [X0+584]
	016 Call 0x1C17CF4
	017 Move X0, 0x2B2000
	018 Move X0, [X0+952]
	019 Call 0x1C17CF4
	020 Move X0, 0x28E000
	021 Move X0, [X0+1232]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+3668], W8
	025 Move X0, [X19+80]
	026 Move X1, [X20]
	027 Move X2, X31
	028 Call String.op_Equality, X0, X1
	029 Move TEMP, X0
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfNotEqual {52}
	033 Move X8, 0x26C000
	034 Move X8, [X8+584]
	035 Move X20, 0x2B2000
	036 Move X19, [X19+72]
	037 Move X0, [X8]
	038 Move W8, [X0+224]
	039 Move X20, [X20+952]
	040 Compare W8, 0
	041 JumpIfNotEqual {43}
	042 Call 0x1C17DFC
	043 Move X1, [X20]
	044 Move X0, X19
	045 Move X20, [X31+16]
	046 Move X19, [X31+24]
	047 Move X2, X31
	048 Move X30, [X31+32]
	049 Move X21, [X31+40]
	050 Call Ext.Upgrades, X0, X1
	051 Return X0
	052 Move X20, [X31+16]
	053 Move X19, [X31+24]
	054 Move W0, W31
	055 Move X30, [X31+32]
	056 Move X21, [X31+40]
	057 Return X0

Method: System.Boolean get_KeepAlive()

Disassembly:
	0x03E8FCD0 STR X30, [X31 - 0x20]!
	0x03E8FCD4 STP X20, X19, [X31 + 0x10]
	0x03E8FCD8 LDRB W8, [X0 + 0x40]
	0x03E8FCDC CBNZ W8, 0x3E8FCF8
	0x03E8FCE0 LDRB W8, [X0 + 0x50]
	0x03E8FCE4 CBNZ W8, 0x3E8FD40
	0x03E8FCE8 LDP X20, X19, [X31 + 0x10]
	0x03E8FCEC STR X1, [X0 + 0x18]
	0x03E8FCF0 LDR X30, [X31], #0x20
	0x03E8FCF4 RET
	0x03E8FCF8 MOV X1, X31
	0x03E8FCFC BL 0x33BE520
	0x03E8FD00 MOV X19, X0
	0x03E8FD04 BL 0x19903C0
	0x03E8FD08 LDR X8, [X19]
	0x03E8FD0C MOV X0, X19
	0x03E8FD10 LDP X9, X1, [X8 + 0x168]
	0x03E8FD14 BLR X9
	0x03E8FD18 MOV X19, X0
	0x03E8FD1C ADRP X0, 0x28D000
	0x03E8FD20 LDR X0, [X0 + 0x4B8]
	0x03E8FD24 BL 0x1C16D08
	0x03E8FD28 BL 0x1C16F10
	0x03E8FD2C MOV X1, X19
	0x03E8FD30 MOV X2, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x55A000
	006 Move X20, 0x26C000
	007 Move W8, [X21+3669]
	008 Move X20, [X20+584]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x26C000
	015 Move X0, [X0+584]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+3669], W8
	019 Move X0, [X20]
	020 Move X20, [X19+72]
	021 Move X19, [X19+96]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move X0, X20
	027 Move X1, X19
	028 Move X20, [X31+16]
	029 Move X19, [X31+24]
	030 Move X2, X31
	031 Move X30, [X31+32]
	032 Move X21, [X31+40]
	033 Call Ext.KeepsAlive, X0, X1
	034 Return X0

Method: System.Net.IPEndPoint get_LocalEndPoint()

Disassembly:
	0x03E8FD34 MOV X20, X0
	0x03E8FD38 BL 0x338C448
	0x03E8FD3C B 0x3E8FD70
	0x03E8FD40 ADRP X0, 0x2DE000
	0x03E8FD44 LDR X0, [X0 + 0x458]
	0x03E8FD48 BL 0x1C16D08

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+32]
	003 Compare X0, 0
	004 JumpIfEqual {8}
	005 Move X30, [X31+16]
	006 Call HttpConnection.get_LocalEndPoint, X0
	007 Return X0
	008 Call 0x1C17F20

Method: System.Version get_ProtocolVersion()

Disassembly:
	0x03E8FD4C MOV X19, X0
	0x03E8FD50 ADRP X0, 0x264000

ISIL:
	001 Move X0, [X0+96]
	002 Return X0

Method: System.Collections.Specialized.NameValueCollection get_QueryString()

Disassembly:
	0x03E8FD54 LDR X0, [X0 + 0x5B0]
	0x03E8FD58 BL 0x1C16D08
	0x03E8FD5C BL 0x1C16F10
	0x03E8FD60 MOV X1, X19
	0x03E8FD64 MOV X2, X31
	0x03E8FD68 MOV X20, X0
	0x03E8FD6C BL 0x337DF1C
	0x03E8FD70 ADRP X0, 0x2DE000
	0x03E8FD74 LDR X0, [X0 + 0x460]
	0x03E8FD78 BL 0x1C16D08
	0x03E8FD7C MOV X1, X0
	0x03E8FD80 MOV X0, X20
	0x03E8FD84 BL 0x1C16DEC
	0x03E8FD88 LDR X0, [X0 + 0x20]
	0x03E8FD8C RET
	0x03E8FD90 STR X30, [X31 - 0x20]!
	0x03E8FD94 STP X20, X19, [X31 + 0x10]
	0x03E8FD98 LDRB W8, [X0 + 0x40]
	0x03E8FD9C CBNZ W8, 0x3E8FDBC
	0x03E8FDA0 LDRB W8, [X0 + 0x50]
	0x03E8FDA4 CBNZ W8, 0x3E8FE04
	0x03E8FDA8 TBNZ X1, 0x0, 0x3E8FE38
	0x03E8FDAC LDP X20, X19, [X31 + 0x10]
	0x03E8FDB0 STR X1, [X0 + 0x20]
	0x03E8FDB4 LDR X30, [X31], #0x20
	0x03E8FDB8 RET
	0x03E8FDBC MOV X1, X31
	0x03E8FDC0 BL 0x33BE520
	0x03E8FDC4 MOV X19, X0
	0x03E8FDC8 BL 0x19903C0
	0x03E8FDCC LDR X8, [X19]
	0x03E8FDD0 MOV X0, X19
	0x03E8FDD4 LDP X9, X1, [X8 + 0x168]
	0x03E8FDD8 BLR X9
	0x03E8FDDC MOV X19, X0
	0x03E8FDE0 ADRP X0, 0x28D000
	0x03E8FDE4 LDR X0, [X0 + 0x4B8]
	0x03E8FDE8 BL 0x1C16D08
	0x03E8FDEC BL 0x1C16F10
	0x03E8FDF0 MOV X1, X19
	0x03E8FDF4 MOV X2, X31
	0x03E8FDF8 MOV X20, X0
	0x03E8FDFC BL 0x338C448
	0x03E8FE00 B 0x3E8FE7C
	0x03E8FE04 ADRP X0, 0x2DE000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x55A000
	006 Move W8, [X20+3670]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x267000
	013 Move X0, [X0+2600]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+3670], W8
	017 Move X0, [X19+104]
	018 Compare X0, 0
	019 JumpIfNotEqual {53}
	020 Move X0, X19
	021 Call HttpListenerRequest.get_Url, X0
	022 Move X8, 0x267000
	023 Move X8, [X8+2600]
	024 Move X20, X0
	025 Move X8, [X8]
	026 Move W9, [X8+224]
	027 Compare W9, 0
	028 JumpIfNotEqual {31}
	029 Move X0, X8
	030 Call 0x1C17DFC
	031 Move X0, X20
	032 Move X1, X31
	033 Move X2, X31
	034 Call Uri.op_Inequality, X0, X1
	035 Move X21, X31
	036 Move TEMP, X0
	037 And TEMP, TEMP, 1
	038 Compare TEMP, 1
	039 JumpIfNotEqual {46}
	040 Compare X20, 0
	041 JumpIfEqual {58}
	042 Move X0, X20
	043 Move X1, X31
	044 Call Uri.get_Query, X0
	045 Move X21, X0
	046 Move X0, X31
	047 Call Encoding.get_UTF8
	048 Move X1, X0
	049 Move X0, X21
	050 Move X2, X31
	051 Call QueryStringCollection.Parse, X0, X1
	052 Move [X19+104], X0
	053 Move X20, [X31+16]
	054 Move X19, [X31+24]
	055 Move X30, [X31+32]
	056 Move X21, [X31+40]
	057 Return X0
	058 Call 0x1C17F20

Method: System.String get_RawUrl()

Disassembly:
	0x03E8FE08 LDR X0, [X0 + 0x458]
	0x03E8FE0C BL 0x1C16D08

ISIL:
	001 Move X0, [X0+112]
	002 Return X0

Method: System.Net.IPEndPoint get_RemoteEndPoint()

Disassembly:
	0x03E8FE10 MOV X19, X0
	0x03E8FE14 ADRP X0, 0x264000
	0x03E8FE18 LDR X0, [X0 + 0x5B0]
	0x03E8FE1C BL 0x1C16D08
	0x03E8FE20 BL 0x1C16F10
	0x03E8FE24 MOV X1, X19

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+32]
	003 Compare X0, 0
	004 JumpIfEqual {8}
	005 Move X30, [X31+16]
	006 Call HttpConnection.get_RemoteEndPoint, X0
	007 Return X0
	008 Call 0x1C17F20

Method: System.Guid get_RequestTraceIdentifier()

Disassembly:
	0x03E8FE28 MOV X2, X31
	0x03E8FE2C MOV X20, X0
	0x03E8FE30 BL 0x337DF1C

ISIL:
	001 Move X8, [X0+120]
	002 Move X1, [X0+128]
	003 Move X0, X8
	004 Return X0

Method: System.Uri get_Url()

Disassembly:
	0x03E8C838 STRB W8, [X20 + 0xE33]
	0x03E8C83C CBZ X19, 0x3E8CA00
	0x03E8C840 LDR X23, [X19 + 0x30]
	0x03E8C844 MOV X0, X22
	0x03E8C848 MOV X1, X23
	0x03E8C84C BL 0x3E8CA04
	0x03E8C850 CMP W0, 0x8000
	0x03E8C854 B.EQ 0x3E8C9D0
	0x03E8C858 MOV W20, W0
	0x03E8C85C CBNZ W0, 0x3E8C884
	0x03E8C860 ADRP X8, 0x2E1000
	0x03E8C864 LDR X8, [X8 + 0x2C0]
	0x03E8C868 MOVZ W9, 0x193
	0x03E8C86C MOV X0, X19
	0x03E8C870 LDR X8, [X8]
	0x03E8C874 STR W9, [X19 + 0x20]
	0x03E8C878 STR X8, [X19 + 0x18]
	0x03E8C87C BL 0x3E8B668
	0x03E8C880 B 0x3E8C9E8
	0x03E8C884 MOV X0, X22
	0x03E8C888 BL 0x3E8CAB0
	0x03E8C88C CBZ X23, 0x3E8CA00
	0x03E8C890 MOV X21, X0
	0x03E8C894 LDR X0, [X23 + 0x48]
	0x03E8C898 CBZ X0, 0x3E8CA00
	0x03E8C89C ADRP X8, 0x2A2000
	0x03E8C8A0 LDR X8, [X8 + 0x7D0]
	0x03E8C8A4 MOV X2, X31
	0x03E8C8A8 LDR X1, [X8]
	0x03E8C8AC BL 0x366456C
	0x03E8C8B0 ADRP X8, 0x2E0000
	0x03E8C8B4 LDR X8, [X8 + 0x368]
	0x03E8C8B8 LDR X23, [X23 + 0x50]
	0x03E8C8BC LDR X22, [X22 + 0x78]
	0x03E8C8C0 MOV X24, X0
	0x03E8C8C4 LDR X8, [X8]
	0x03E8C8C8 LDR W9, [X8 + 0xE0]
	0x03E8C8CC CBNZ W9, 0x3E8C8D8
	0x03E8C8D0 MOV X0, X8
	0x03E8C8D4 BL 0x1C16DFC
	0x03E8C8D8 MOV X0, X24
	0x03E8C8DC MOV W1, W20
	0x03E8C8E0 MOV X2, X21
	0x03E8C8E4 MOV X3, X23
	0x03E8C8E8 MOV X4, X22
	0x03E8C8EC MOV X5, X31
	0x03E8C8F0 BL 0x3E967F0
	0x03E8C8F4 CBZ X0, 0x3E8C9D8
	0x03E8C8F8 ADRP X10, 0x2E1000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x55D000
	008 Move W8, [X20+3671]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x2E1000
	015 Move X0, [X0+872]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3671], W8
	019 Move W8, [X19+152]
	020 Compare W8, 0
	021 JumpIfEqual {23}
	022 Move X0, [X19+136]
	023 Move X21, [X19+160]
	024 Move X20, [X19+112]
	025 Compare X21, 0
	026 JumpIfNotEqual {30}
	027 Move X0, X19
	028 Call HttpListenerRequest.get_UserHostAddress, X0
	029 Move X21, X0
	030 Move X0, X19
	031 Call HttpListenerRequest.get_IsWebSocketRequest, X0
	032 Move X8, [X19+32]
	033 Compare X8, 0
	034 JumpIfEqual {61}
	035 Move X9, 0x2E1000
	036 Move X9, [X9+872]
	037 Move W22, W0
	038 Move W23, [X8+124]
	039 Move X0, [X9]
	040 Move W9, [X0+224]
	041 Compare W9, 0
	042 JumpIfNotEqual {44}
	043 Call 0x1C17DFC
	044 NotImplemented "Instruction CMP not yet implemented."
	045 NotImplemented "Instruction CSET not yet implemented."
	046 And W2, W22, 1
	047 Move X0, X20
	048 Move X1, X21
	049 Move X4, X31
	050 Call HttpUtility.CreateRequestUrl, X0, X1, X2, X3
	051 Move W8, 1
	052 Move [X19+136], X0
	053 Move [X19+152], W8
	054 Move X20, [X31+32]
	055 Move X19, [X31+40]
	056 Move X22, [X31+16]
	057 Move X21, [X31+24]
	058 Move X30, [X31+48]
	059 Move X23, [X31+56]
	060 Return X0
	061 Call 0x1C17F20

Method: System.Uri get_UrlReferrer()

Disassembly:
	0x03E8FE5C ADRP X0, 0x26E000
	0x03E8FE60 LDR X0, [X0 + 0xEC8]
	0x03E8FE64 BL 0x1C16D08
	0x03E8FE68 MOV X2, X0
	0x03E8FE6C MOV X0, X20
	0x03E8FE70 MOV X1, X19
	0x03E8FE74 MOV X3, X31
	0x03E8FE78 BL 0x3311888
	0x03E8FE7C ADRP X0, 0x2DE000
	0x03E8FE80 LDR X0, [X0 + 0x468]
	0x03E8FE84 BL 0x1C16D08
	0x03E8FE88 MOV X1, X0
	0x03E8FE8C MOV X0, X20
	0x03E8FE90 BL 0x1C16DEC
	0x03E8FE94 LDR X0, [X0 + 0x28]
	0x03E8FE98 RET
	0x03E8FE9C STR X30, [X31 - 0x20]!
	0x03E8FEA0 STP X20, X19, [X31 + 0x10]
	0x03E8FEA4 LDRB W8, [X0 + 0x40]
	0x03E8FEA8 MOV X19, X0
	0x03E8FEAC CBNZ W8, 0x3E8FEE4
	0x03E8FEB0 LDRB W8, [X19 + 0x50]
	0x03E8FEB4 CBNZ W8, 0x3E8FF30
	0x03E8FEB8 MOV X20, X1
	0x03E8FEBC CBZ X1, 0x3E8FED4
	0x03E8FEC0 LDR W8, [X20 + 0x10]
	0x03E8FEC4 CBZ W8, 0x3E8FF64
	0x03E8FEC8 MOV X0, X20
	0x03E8FECC BL 0x3E8FFCC
	0x03E8FED0 TBZ X0, 0x0, 0x3E8FF70
	0x03E8FED4 STR X20, [X19 + 0x28]
	0x03E8FED8 LDP X20, X19, [X31 + 0x10]
	0x03E8FEDC LDR X30, [X31], #0x20
	0x03E8FEE0 RET
	0x03E8FEE4 MOV X0, X19
	0x03E8FEE8 MOV X1, X31
	0x03E8FEEC BL 0x33BE520
	0x03E8FEF0 MOV X19, X0
	0x03E8FEF4 BL 0x19903C0
	0x03E8FEF8 LDR X8, [X19]
	0x03E8FEFC MOV X0, X19
	0x03E8FF00 LDP X9, X1, [X8 + 0x168]
	0x03E8FF04 BLR X9
	0x03E8FF08 MOV X19, X0
	0x03E8FF0C ADRP X0, 0x28D000
	0x03E8FF10 LDR X0, [X0 + 0x4B8]
	0x03E8FF14 BL 0x1C16D08
	0x03E8FF18 BL 0x1C16F10
	0x03E8FF1C MOV X1, X19
	0x03E8FF20 MOV X2, X31
	0x03E8FF24 MOV X20, X0
	0x03E8FF28 BL 0x338C448
	0x03E8FF2C B 0x3E8FFB4
	0x03E8FF30 ADRP X0, 0x2DE000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x55A000
	006 Move W8, [X20+3672]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {23}
	012 Move X0, 0x26C000
	013 Move X0, [X0+584]
	014 Call 0x1C17CF4
	015 Move X0, 0x267000
	016 Move X0, [X0+2600]
	017 Call 0x1C17CF4
	018 Move X0, 0x2AC000
	019 Move X0, [X0+2544]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X20+3672], W8
	023 Move X0, [X19+72]
	024 Compare X0, 0
	025 JumpIfEqual {67}
	026 Move X8, 0x2AC000
	027 Move X8, [X8+2544]
	028 Move X2, X31
	029 Move X1, [X8]
	030 Call NameValueCollection.get_Item, X0, X1
	031 Compare X0, 0
	032 JumpIfEqual {62}
	033 Move X8, 0x267000
	034 Move X8, [X8+2600]
	035 Move X20, X0
	036 Move X21, [X19+144]
	037 Move X0, [X8]
	038 Move W8, [X0+224]
	039 Compare W8, 0
	040 JumpIfNotEqual {42}
	041 Call 0x1C17DFC
	042 Move X0, X21
	043 Move X1, X31
	044 Move X2, X31
	045 Call Uri.op_Equality, X0, X1
	046 Move TEMP, X0
	047 And TEMP, TEMP, 1
	048 Compare TEMP, 1
	049 JumpIfNotEqual {61}
	050 Move X8, 0x26C000
	051 Move X8, [X8+584]
	052 Move X0, [X8]
	053 Move W8, [X0+224]
	054 Compare W8, 0
	055 JumpIfNotEqual {57}
	056 Call 0x1C17DFC
	057 Move X0, X20
	058 Move X1, X31
	059 Call Ext.ToUri, X0
	060 Move [X19+144], X0
	061 Move X0, [X19+144]
	062 Move X20, [X31+16]
	063 Move X19, [X31+24]
	064 Move X30, [X31+32]
	065 Move X21, [X31+40]
	066 Return X0
	067 Call 0x1C17F20

Method: System.String get_UserAgent()

Disassembly:
	0x03E8FF34 LDR X0, [X0 + 0x458]
	0x03E8FF38 BL 0x1C16D08
	0x03E8FF3C MOV X19, X0
	0x03E8FF40 ADRP X0, 0x264000
	0x03E8FF44 LDR X0, [X0 + 0x5B0]
	0x03E8FF48 BL 0x1C16D08
	0x03E8FF4C BL 0x1C16F10
	0x03E8FF50 MOV X1, X19
	0x03E8FF54 MOV X2, X31
	0x03E8FF58 MOV X20, X0
	0x03E8FF5C BL 0x337DF1C
	0x03E8FF60 B 0x3E8FFB4
	0x03E8FF64 ADRP X0, 0x28D000
	0x03E8FF68 LDR X0, [X0 + 0x9B8]
	0x03E8FF6C B 0x3E8FF78
	0x03E8FF70 ADRP X0, 0x2DD000
	0x03E8FF74 LDR X0, [X0 + 0x9B0]
	0x03E8FF78 BL 0x1C16D08
	0x03E8FF7C MOV X19, X0
	0x03E8FF80 ADRP X0, 0x26C000
	0x03E8FF84 LDR X0, [X0 + 0x578]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x55A000
	005 Move W8, [X20+3673]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x2AC000
	012 Move X0, [X0+2608]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+3673], W8
	016 Move X0, [X19+72]
	017 Compare X0, 0
	018 JumpIfEqual {28}
	019 Move X8, 0x2AC000
	020 Move X8, [X8+2608]
	021 Move X20, [X31+16]
	022 Move X19, [X31+24]
	023 Move X2, X31
	024 Move X1, [X8]
	025 Move X30, [X31+32]
	026 Call NameValueCollection.get_Item, X0, X1
	027 Return X0
	028 Call 0x1C17F20

Method: System.String get_UserHostAddress()

Disassembly:
	0x03E8FE34 B 0x3E8FE7C
	0x03E8FE38 ADRP X0, 0x2DD000
	0x03E8FE3C LDR X0, [X0 + 0xC18]
	0x03E8FE40 BL 0x1C16D08
	0x03E8FE44 MOV X19, X0
	0x03E8FE48 ADRP X0, 0x26C000
	0x03E8FE4C LDR X0, [X0 + 0x760]
	0x03E8FE50 BL 0x1C16D08
	0x03E8FE54 BL 0x1C16F10
	0x03E8FE58 MOV X20, X0

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+32]
	003 Compare X0, 0
	004 JumpIfEqual {13}
	005 Call HttpConnection.get_LocalEndPoint, X0
	006 Compare X0, 0
	007 JumpIfEqual {13}
	008 Move X8, [X0]
	009 Move X2, [X8+360]
	010 Move X1, [X8+368]
	011 Move X30, [X31+16]
	012 CallNoReturn X2
	013 Call 0x1C17F20

Method: System.String get_UserHostName()

Disassembly:
	0x03E8FF88 BL 0x1C16D08
	0x03E8FF8C BL 0x1C16F10

ISIL:
	001 Move X0, [X0+160]
	002 Return X0

Method: System.String[] get_UserLanguages()

Disassembly:
	0x03E8FF90 MOV X20, X0
	0x03E8FF94 ADRP X0, 0x26E000
	0x03E8FF98 LDR X0, [X0 + 0xEC8]
	0x03E8FF9C BL 0x1C16D08
	0x03E8FFA0 MOV X2, X0
	0x03E8FFA4 MOV X0, X20
	0x03E8FFA8 MOV X1, X19
	0x03E8FFAC MOV X3, X31
	0x03E8FFB0 BL 0x330E16C
	0x03E8FFB4 ADRP X0, 0x2DE000
	0x03E8FFB8 LDR X0, [X0 + 0x470]
	0x03E8FFBC BL 0x1C16D08
	0x03E8FFC0 MOV X1, X0
	0x03E8FFC4 MOV X0, X20
	0x03E8FFC8 BL 0x1C16DEC
	0x03E8FFCC STP X30, X21, [X31 - 0x20]!
	0x03E8FFD0 STP X20, X19, [X31 + 0x10]
	0x03E8FFD4 ADRP X20, 0x559000
	0x03E8FFD8 LDRB W8, [X20 + 0xE6F]
	0x03E8FFDC MOV X19, X0
	0x03E8FFE0 TBNZ X8, 0x0, 0x3E8FFF8
	0x03E8FFE4 ADRP X0, 0x2DE000
	0x03E8FFE8 LDR X0, [X0 + 0x478]
	0x03E8FFEC BL 0x1C16CF4
	0x03E8FFF0 MOVZ W8, 0x1
	0x03E8FFF4 STRB W8, [X20 + 0xE6F]
	0x03E8FFF8 CBZ X19, 0x3E90074
	0x03E8FFFC LDR W8, [X19 + 0x10]
	0x03E90000 CMP W8, 0x1
	0x03E90004 B.LT 0x3E9005C
	0x03E90008 ADRP X21, 0x2DD000
	0x03E9000C LDR X21, [X21 + 0x478]
	0x03E90010 MOV W20, W31
	0x03E90014 MOV X0, X19
	0x03E90018 MOV W1, W20
	0x03E9001C MOV X2, X31
	0x03E90020 BL 0x3222A1C
	0x03E90024 SUB W8, W0, 0x20
	0x03E90028 AND W8, W8, 0xFFFF
	0x03E9002C CMP W8, 0x5E
	0x03E90030 B.HI 0x3E90064
	0x03E90034 MOV W1, W0
	0x03E90038 LDR X0, [X21]
	0x03E9003C CBZ X0, 0x3E90074
	0x03E90040 MOV X2, X31
	0x03E90044 BL 0x322BD98
	0x03E90048 TBZ X0, 0x1F, 0x3E90064
	0x03E9004C LDR W8, [X19 + 0x10]
	0x03E90050 ADD W20, W20, 0x1
	0x03E90054 CMP W20, W8
	0x03E90058 B.LT 0x3E90014
	0x03E9005C MOVZ W0, 0x1
	0x03E90060 B 0x3E90068
	0x03E90064 MOV W0, W31
	0x03E90068 LDP X20, X19, [X31 + 0x10]
	0x03E9006C LDP X30, X21, [X31], #0x20
	0x03E90070 RET
	0x03E90074 BL 0x1C16F20
	0x03E90078 STR X30, [X31 - 0x20]!
	0x03E9007C STP X20, X19, [X31 + 0x10]
	0x03E90080 ADRP X20, 0x558000
	0x03E90084 LDRB W8, [X20 + 0xE65]
	0x03E90088 MOV X19, X0
	0x03E9008C TBNZ X8, 0x0, 0x3E900A4
	0x03E90090 ADRP X0, 0x2DC000
	0x03E90094 LDR X0, [X0 + 0x250]
	0x03E90098 BL 0x1C16CF4
	0x03E9009C MOVZ W8, 0x1
	0x03E900A0 STRB W8, [X20 + 0xE65]
	0x03E900A4 LDR X20, [X19 + 0x38]
	0x03E900A8 CBNZ X20, 0x3E900CC
	0x03E900AC ADRP X8, 0x2DC000
	0x03E900B0 LDR X8, [X8 + 0x250]
	0x03E900B4 LDR X0, [X8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x55A000
	005 Move W8, [X20+3674]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {28}
	011 Move X0, 0x26E000
	012 Move X0, [X0+2264]
	013 Call 0x1C17CF4
	014 Move X0, 0x2DE000
	015 Move X0, [X0+3736]
	016 Call 0x1C17CF4
	017 Move X0, 0x26C000
	018 Move X0, [X0+584]
	019 Call 0x1C17CF4
	020 Move X0, 0x267000
	021 Move X0, [X0+3704]
	022 Call 0x1C17CF4
	023 Move X0, 0x2AC000
	024 Move X0, [X0+2504]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X20+3674], W8
	028 Move X0, [X19+72]
	029 Compare X0, 0
	030 JumpIfEqual {85}
	031 Move X8, 0x2AC000
	032 Move X8, [X8+2504]
	033 Move X2, X31
	034 Move X1, [X8]
	035 Call NameValueCollection.get_Item, X0, X1
	036 Compare X0, 0
	037 JumpIfEqual {81}
	038 Move X20, X0
	039 Move X0, [X19+168]
	040 Compare X0, 0
	041 JumpIfNotEqual {81}
	042 Move X8, 0x26D000
	043 Move X8, [X8+2264]
	044 Move W1, 1
	045 Move X0, [X8]
	046 Call 0x1C17D6C
	047 Compare X0, 0
	048 JumpIfEqual {85}
	049 Move W8, [X0+24]
	050 Move X1, X0
	051 Compare W8, 0
	052 JumpIfEqual {86}
	053 Move W8, 44
	054 Move X0, X20
	055 Move X2, X31
	056 NotImplemented "Instruction STRH not yet implemented."
	057 Call String.Split, X0, X1
	058 Move X8, 0x26B000
	059 Move X8, [X8+584]
	060 Move X20, X0
	061 Move X8, [X8]
	062 Move W9, [X8+224]
	063 Compare W9, 0
	064 JumpIfNotEqual {67}
	065 Move X0, X8
	066 Call 0x1C17DFC
	067 Move X0, X20
	068 Move X1, X31
	069 Call Ext.TrimEach, X0
	070 Move X8, 0x2DD000
	071 Move X8, [X8+3736]
	072 Move X1, [X8]
	073 Call 0x21E3B88, X0
	074 Compare X0, 0
	075 JumpIfEqual {85}
	076 Move X8, 0x266000
	077 Move X8, [X8+3704]
	078 Move X1, [X8]
	079 Call List`1<Object>.ToArray, X0
	080 Move [X19+168], X0
	081 Move X20, [X31+16]
	082 Move X19, [X31+24]
	083 Move X30, [X31+32]
	084 Return X0
	085 Call 0x1C17F20
	086 Call 0x1C17F28

Method: System.Text.Encoding getContentEncoding()

Disassembly:
	0x03E8F99C ADD X31, X31, 0x40
	0x03E8F9A0 RET
	0x03E8F9A4 BL 0x1C16F20
	0x03E8F9A8 BL 0x1C16F20
	0x03E8F9AC BL 0x1C16F20
	0x03E8F9B0 MOV X0, X21
	0x03E8F9B4 BL 0x1C16F18
	0x03E8F9B8 B 0x3E8F9C8
	0x03E8F9BC B 0x3E8F9C8
	0x03E8F9C0 B 0x3E8F9C8
	0x03E8F9C4 B 0x3E8F9C8
	0x03E8F9C8 MOV X22, X0
	0x03E8F9CC CMP W1, 0x1
	0x03E8F9D0 B.NE 0x3E8F9E8
	0x03E8F9D4 MOV X0, X22
	0x03E8F9D8 BL 0x3EB1AD0
	0x03E8F9DC LDR X21, [X0]
	0x03E8F9E0 BL 0x3EB1AE0
	0x03E8F9E4 B 0x3E8F924
	0x03E8F9E8 MOV X21, X31
	0x03E8F9EC B 0x3E8F9F4
	0x03E8F9F0 MOV X22, X0
	0x03E8F9F4 CBZ X20, 0x3E8FA58
	0x03E8F9F8 ADRP X10, 0x264000
	0x03E8F9FC LDR X8, [X20]
	0x03E8FA00 LDR X10, [X10 + 0xE00]
	0x03E8FA04 LDRH W9, [X8 + 0x12E]
	0x03E8FA08 LDR X1, [X10]
	0x03E8FA0C CBZ X9, 0x3E8FA30
	0x03E8FA10 LDR X10, [X8 + 0xB0]
	0x03E8FA14 ADD X10, X10, 0x8
	0x03E8FA18 LDUR X11, [X10 - 0x8]
	0x03E8FA1C CMP X11, X1
	0x03E8FA20 B.EQ 0x3E8FA40
	0x03E8FA24 SUBS X9, X9, 0x1
	0x03E8FA28 ADD X10, X10, 0x10
	0x03E8FA2C B.NE 0x3E8FA18
	0x03E8FA30 MOV X0, X20
	0x03E8FA34 MOV W2, W31
	0x03E8FA38 BL 0x1C5C788
	0x03E8FA3C B 0x3E8FA4C
	0x03E8FA40 LDRSW X9, [X10]
	0x03E8FA44 ADD X8, X8, X9, 0x4, LSL

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x55A000
	005 Move W8, [X20+3675]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0x2DE000
	012 Move X0, [X0+872]
	013 Call 0x1C17CF4
	014 Move X0, 0x2A0000
	015 Move X0, [X0+2440]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3675], W8
	019 Move [X31+8], X31
	020 Move X0, [X19+72]
	021 Compare X0, 0
	022 JumpIfEqual {53}
	023 Move X8, 0x2A0000
	024 Move X8, [X8+2440]
	025 Move X2, X31
	026 Move X1, [X8]
	027 Call NameValueCollection.get_Item, X0, X1
	028 Compare X0, 0
	029 JumpIfEqual {48}
	030 Move X8, 0x2DE000
	031 Move X8, [X8+872]
	032 Move X19, X0
	033 Move X0, [X8]
	034 Move W8, [X0+224]
	035 Compare W8, 0
	036 JumpIfNotEqual {38}
	037 Call 0x1C17DFC
	038 Add X1, X31, 8
	039 Move X0, X19
	040 Move X2, X31
	041 Call HttpUtility.TryGetEncoding, X0, X1
	042 Move TEMP, X0
	043 And TEMP, TEMP, 1
	044 Compare TEMP, 1
	045 JumpIfNotEqual {47}
	046 Move X0, [X31+8]
	047 Move X0, X31
	048 Call Encoding.get_UTF8
	049 Move X20, [X31+16]
	050 Move X19, [X31+24]
	051 Move X30, [X31+32]
	052 Return X0
	053 Call 0x1C17F20

Method: System.Void AddHeader(System.String headerField)

Disassembly:
	0x03E8C150 LDR X0, [X0 + 0x2F0]
	0x03E8C154 BL 0x1C16CF4
	0x03E8C158 ADRP X0, 0x2E1000
	0x03E8C15C LDR X0, [X0 + 0x238]
	0x03E8C160 BL 0x1C16CF4
	0x03E8C164 ADRP X0, 0x2E1000
	0x03E8C168 LDR X0, [X0 + 0x230]
	0x03E8C16C BL 0x1C16CF4
	0x03E8C170 ADRP X0, 0x2E0000
	0x03E8C174 LDR X0, [X0 + 0x400]
	0x03E8C178 BL 0x1C16CF4
	0x03E8C17C ADRP X0, 0x2E1000
	0x03E8C180 LDR X0, [X0 + 0x228]
	0x03E8C184 BL 0x1C16CF4
	0x03E8C188 ADRP X0, 0x2E1000
	0x03E8C18C LDR X0, [X0 + 0x248]
	0x03E8C190 BL 0x1C16CF4
	0x03E8C194 ADRP X0, 0x2E1000
	0x03E8C198 LDR X0, [X0 + 0x220]
	0x03E8C19C BL 0x1C16CF4
	0x03E8C1A0 ADRP X0, 0x2E1000
	0x03E8C1A4 LDR X0, [X0 + 0x250]
	0x03E8C1A8 BL 0x1C16CF4
	0x03E8C1AC MOVZ W8, 0x1
	0x03E8C1B0 STRB W8, [X24 + 0xE31]
	0x03E8C1B4 MOV X0, X19
	0x03E8C1B8 MOV X1, X31
	0x03E8C1BC BL 0x33BDD8C
	0x03E8C1C0 MOVZ W8, 0x8000
	0x03E8C1C4 STR W8, [X19 + 0x10]
	0x03E8C1C8 LDR X0, [X23]
	0x03E8C1CC BL 0x1C16F10
	0x03E8C1D0 LDR X1, [X20]
	0x03E8C1D4 MOV X20, X0
	0x03E8C1D8 BL 0x24F1248
	0x03E8C1DC STR X20, [X19 + 0x28]
	0x03E8C1E0 LDR X0, [X22]
	0x03E8C1E4 BL 0x1C16F10
	0x03E8C1E8 LDR X1, [X21]
	0x03E8C1EC MOV X20, X0
	0x03E8C1F0 BL 0x2EECE50
	0x03E8C1F4 STR X20, [X19 + 0x30]
	0x03E8C1F8 CBZ X20, 0x3E8C308
	0x03E8C1FC ADRP X10, 0x26E000
	0x03E8C200 LDR X8, [X20]
	0x03E8C204 LDR X10, [X10 + 0x2F0]
	0x03E8C208 ADRP X21, 0x2E0000
	0x03E8C20C LDRH W9, [X8 + 0x12E]
	0x03E8C210 LDR X1, [X10]
	0x03E8C214 LDR X21, [X21 + 0x400]
	0x03E8C218 CBZ X9, 0x3E8C23C
	0x03E8C21C LDR X10, [X8 + 0xB0]
	0x03E8C220 ADD X10, X10, 0x8
	0x03E8C224 LDUR X11, [X10 - 0x8]
	0x03E8C228 CMP X11, X1
	0x03E8C22C B.EQ 0x3E8C24C
	0x03E8C230 SUBS X9, X9, 0x1
	0x03E8C234 ADD X10, X10, 0x10
	0x03E8C238 B.NE 0x3E8C224
	0x03E8C23C MOVZ W2, 0x2
	0x03E8C240 MOV X0, X20
	0x03E8C244 BL 0x1C5C788
	0x03E8C248 B 0x3E8C25C
	0x03E8C24C LDR W9, [X10]
	0x03E8C250 ADD W9, W9, 0x2
	0x03E8C254 ADD X8, X8, W9, 0x4, SXTW
	0x03E8C258 ADD X0, X8, 0x138
	0x03E8C25C LDP X8, X1, [X0]
	0x03E8C260 MOV X0, X20
	0x03E8C264 BLR X8
	0x03E8C268 STR X0, [X19 + 0x38]
	0x03E8C26C LDR X0, [X21]
	0x03E8C270 BL 0x1C16F10
	0x03E8C274 MOVZ W1, 0x4
	0x03E8C278 MOV X2, X31
	0x03E8C27C MOV X3, X31
	0x03E8C280 MOV X20, X0
	0x03E8C284 BL 0x3E7B084
	0x03E8C288 MOV X0, X19
	0x03E8C28C MOV X1, X31
	0x03E8C290 STR X20, [X19 + 0x48]
	0x03E8C294 BL 0x33BE520
	0x03E8C298 CBZ X0, 0x3E8C308
	0x03E8C29C LDR X8, [X0]
	0x03E8C2A0 ADRP X20, 0x2E1000
	0x03E8C2A4 ADRP X21, 0x2E1000
	0x03E8C2A8 ADRP X22, 0x2E1000
	0x03E8C2AC LDP X9, X1, [X8 + 0x168]
	0x03E8C2B0 LDR X20, [X20 + 0x240]
	0x03E8C2B4 LDR X21, [X21 + 0x250]
	0x03E8C2B8 LDR X22, [X22 + 0x248]
	0x03E8C2BC BLR X9
	0x03E8C2C0 STR X0, [X19 + 0x50]
	0x03E8C2C4 LDR X0, [X20]
	0x03E8C2C8 BL 0x1C16F10
	0x03E8C2CC MOV X1, X19
	0x03E8C2D0 MOV X20, X0
	0x03E8C2D4 BL 0x3E8C30C
	0x03E8C2D8 STR X20, [X19 + 0x58]
	0x03E8C2DC LDR X0, [X21]
	0x03E8C2E0 BL 0x1C16F10
	0x03E8C2E4 LDR X1, [X22]
	0x03E8C2E8 MOV X20, X0
	0x03E8C2EC BL 0x24F1248
	0x03E8C2F0 STR X20, [X19 + 0x80]
	0x03E8C2F4 LDP X20, X19, [X31 + 0x30]
	0x03E8C2F8 LDP X22, X21, [X31 + 0x20]
	0x03E8C2FC LDP X24, X23, [X31 + 0x10]
	0x03E8C300 LDR X30, [X31], #0x40
	0x03E8C304 RET
	0x03E8C308 BL 0x1C16F20
	0x03E8C30C STP X30, X23, [X31 - 0x30]!
	0x03E8C310 STP X22, X21, [X31 + 0x10]
	0x03E8C314 STP X20, X19, [X31 + 0x20]
	0x03E8C318 ADRP X23, 0x55C000
	0x03E8C31C ADRP X22, 0x268000
	0x03E8C320 ADRP X21, 0x268000
	0x03E8C324 LDRB W8, [X23 + 0xE45]
	0x03E8C328 LDR X22, [X22 + 0x1D0]
	0x03E8C32C LDR X21, [X21 + 0x1C0]
	0x03E8C330 MOV X20, X1
	0x03E8C334 MOV X19, X0
	0x03E8C338 TBNZ X8, 0x0, 0x3E8C35C
	0x03E8C33C ADRP X0, 0x268000
	0x03E8C340 LDR X0, [X0 + 0x1C0]
	0x03E8C344 BL 0x1C16CF4
	0x03E8C348 ADRP X0, 0x268000
	0x03E8C34C LDR X0, [X0 + 0x1D0]
	0x03E8C350 BL 0x1C16CF4
	0x03E8C354 MOVZ W8, 0x1
	0x03E8C358 STRB W8, [X23 + 0xE45]
	0x03E8C35C MOV X0, X19
	0x03E8C360 MOV X1, X31
	0x03E8C364 BL 0x33BDD8C
	0x03E8C368 STR X20, [X19 + 0x10]
	0x03E8C36C LDR X0, [X22]
	0x03E8C370 BL 0x1C16F10
	0x03E8C374 LDR X1, [X21]
	0x03E8C378 MOV X20, X0
	0x03E8C37C BL 0x301B7C4
	0x03E8C380 STR X20, [X19 + 0x18]
	0x03E8C384 LDP X20, X19, [X31 + 0x20]
	0x03E8C388 LDP X22, X21, [X31 + 0x10]
	0x03E8C38C LDP X30, X23, [X31], #0x30
	0x03E8C390 RET
	0x03E8C394 AND W8, W1, 0x1
	0x03E8C398 STRB W8, [X0 + 0x68]
	0x03E8C39C RET
	0x03E8C3A0 STR X30, [X31 - 0x20]!
	0x03E8C3A4 STP X20, X19, [X31 + 0x10]
	0x03E8C3A8 LDRB W8, [X0 + 0x40]
	0x03E8C3AC CBNZ W8, 0x3E8C3C0
	0x03E8C3B0 LDR W0, [X0 + 0x10]
	0x03E8C3B4 LDP X20, X19, [X31 + 0x10]
	0x03E8C3B8 LDR X30, [X31], #0x20
	0x03E8C3BC RET
	0x03E8C3C0 LDR X19, [X0 + 0x50]
	0x03E8C3C4 ADRP X0, 0x290000
	0x03E8C3C8 LDR X0, [X0 + 0x4B8]
	0x03E8C3CC BL 0x1C16D08
	0x03E8C3D0 BL 0x1C16F10
	0x03E8C3D4 MOV X1, X19
	0x03E8C3D8 MOV X2, X31
	0x03E8C3DC MOV X20, X0
	0x03E8C3E0 BL 0x338C448
	0x03E8C3E4 ADRP X0, 0x2E1000
	0x03E8C3E8 LDR X0, [X0 + 0x258]
	0x03E8C3EC BL 0x1C16D08
	0x03E8C3F0 MOV X1, X0
	0x03E8C3F4 MOV X0, X20
	0x03E8C3F8 BL 0x1C16DEC
	0x03E8C3FC STR X30, [X31 - 0x20]!
	0x03E8C400 STP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x55D000
	007 Move W8, [X21+3676]
	008 Move X20, X1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {43}
	014 Move X0, 0x26A000
	015 Move X0, [X0+3144]
	016 Call 0x1C17CF4
	017 Move X0, 0x26F000
	018 Move X0, [X0+584]
	019 Call 0x1C17CF4
	020 Move X0, 0x26A000
	021 Move X0, [X0+632]
	022 Call 0x1C17CF4
	023 Move X0, 0x2E2000
	024 Move X0, [X0+432]
	025 Call 0x1C17CF4
	026 Move X0, 0x2E2000
	027 Move X0, [X0+440]
	028 Call 0x1C17CF4
	029 Move X0, 0x2E2000
	030 Move X0, [X0+448]
	031 Call 0x1C17CF4
	032 Move X0, 0x2E2000
	033 Move X0, [X0+456]
	034 Call 0x1C17CF4
	035 Move X0, 0x2E2000
	036 Move X0, [X0+464]
	037 Call 0x1C17CF4
	038 Move X0, 0x2B3000
	039 Move X0, [X0+1320]
	040 Call 0x1C17CF4
	041 Move W8, 1
	042 Move [X21+3676], W8
	043 Move [X31+8], X31
	044 Compare X20, 0
	045 JumpIfEqual {203}
	046 Move X21, 0x2E2000
	047 Move X21, [X21+432]
	048 Move X0, X20
	049 Move W1, W31
	050 Move X2, X31
	051 Call String.get_Chars, X0, X1
	052 And W8, W0, 0xFFFF
	053 NotImplemented "Instruction CMP not yet implemented."
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Move W1, 58
	056 Move X0, X20
	057 Move X2, X31
	058 Call String.IndexOf, X0, X1
	059 NotImplemented "Instruction CMP not yet implemented."
	060 Move W22, W0
	061 Move X0, X20
	062 Move W1, W31
	063 Move W2, W22
	064 Move X3, X31
	065 Call String.Substring, X0, X1, X2
	066 Compare X0, 0
	067 JumpIfEqual {203}
	068 Move X1, X31
	069 Call String.Trim, X0
	070 Compare X0, 0
	071 JumpIfEqual {203}
	072 Move W8, [X0+16]
	073 Move X21, X0
	074 Compare W8, 0
	075 JumpIfEqual {113}
	076 Move X8, 0x26F000
	077 Move X8, [X8+584]
	078 Move X0, [X8]
	079 Move W8, [X0+224]
	080 Compare W8, 0
	081 JumpIfNotEqual {83}
	082 Call 0x1C17DFC
	083 Move X0, X21
	084 Move X1, X31
	085 Call Ext.IsToken, X0
	086 Move TEMP, X0
	087 And TEMP, TEMP, 1
	088 Compare TEMP, 1
	089 JumpIfNotEqual {113}
	090 Move W8, [X20+16]
	091 Subtract W8, W8, 1
	092 NotImplemented "Instruction CMP not yet implemented."
	093 Add W1, W22, 1
	094 Move X0, X20
	095 Move X2, X31
	096 Call String.Substring, X0, X1
	097 Compare X0, 0
	098 JumpIfEqual {203}
	099 Move X1, X31
	100 Call String.Trim, X0
	101 Move X20, X0
	102 Move X8, [X19+56]
	103 Compare X8, 0
	104 JumpIfEqual {203}
	105 Move X9, [X21]
	106 Move [X8+24], X9
	107 Move X20, [X31+32]
	108 Move X19, [X31+40]
	109 Move X22, [X31+16]
	110 Move X21, [X31+24]
	111 Move X30, [X31+48]
	112 Return 
	113 Move X8, [X19+56]
	114 Compare X8, 0
	115 JumpIfEqual {203}
	116 Move X9, 0x2E2000
	117 Move X9, [X9+448]
	118 Move X9, [X9]
	119 Move X8, 0x26A000
	120 Move X8, [X8+632]
	121 Move X8, [X8]
	122 Move X8, [X8+184]
	123 Move X20, [X8]
	124 Move X0, [X19+72]
	125 Compare X0, 0
	126 JumpIfEqual {203}
	127 Move X1, X21
	128 Move X2, X20
	129 Move W3, W31
	130 Move X4, X31
	131 Call WebHeaderCollection.InternalSet, X0, X1, X2, X3
	132 Move X8, 0x26A000
	133 Move X8, [X8+3144]
	134 Move X0, [X8]
	135 Move W8, [X0+224]
	136 Compare W8, 0
	137 JumpIfNotEqual {139}
	138 Call 0x1C17DFC
	139 Move X0, X31
	140 Call CultureInfo.get_InvariantCulture
	141 Move X1, X0
	142 Move X0, X21
	143 Move X2, X31
	144 Call String.ToLower, X0, X1
	145 Move X8, 0x2B3000
	146 Move X8, [X8+1320]
	147 Move X2, X31
	148 Move X21, X0
	149 Move X1, [X8]
	150 Call String.op_Equality, X0, X1
	151 Move TEMP, X0
	152 And TEMP, TEMP, 1
	153 Compare TEMP, 1
	154 JumpIfNotEqual {163}
	155 Move X8, [X19+160]
	156 Compare X8, 0
	157 JumpIfEqual {197}
	158 Move X8, [X19+56]
	159 Compare X8, 0
	160 JumpIfEqual {203}
	161 Move X9, 0x2E2000
	162 Move X9, [X9+456]
	163 Move X8, 0x2E2000
	164 Move X8, [X8+464]
	165 Move X0, X21
	166 Move X2, X31
	167 Move X1, [X8]
	168 Call String.op_Equality, X0, X1
	169 Move TEMP, X0
	170 And TEMP, TEMP, 1
	171 Compare TEMP, 1
	172 JumpIfNotEqual {107}
	173 Move X8, [X19+48]
	174 Move TEMP, X8
	175 And TEMP, TEMP, 1
	176 Compare TEMP, 1
	177 JumpIfNotEqual {192}
	178 Add X1, X31, 8
	179 Move X0, X20
	180 Move X2, X31
	181 Call Int64.TryParse, X0, X1
	182 Move TEMP, X0
	183 And TEMP, TEMP, 1
	184 Compare TEMP, 1
	185 JumpIfNotEqual {192}
	186 Move X8, [X31+8]
	187 Move TEMP, X8
	188 And TEMP, TEMP, 1
	189 Compare TEMP, 1
	190 JumpIfEqual {192}
	191 Move [X19+48], X8
	192 Move X8, [X19+56]
	193 Compare X8, 0
	194 JumpIfEqual {203}
	195 Move X9, 0x2E2000
	196 Move X9, [X9+440]
	197 Compare X20, 0
	198 JumpIfEqual {203}
	199 Move W8, [X20+16]
	200 Compare W8, 0
	201 JumpIfEqual {158}
	202 Move [X19+160], X20
	203 Call 0x1C17F20

Method: System.Void FinishInitialization()

Disassembly:
	0x03E8C414 LDR X30, [X31], #0x20
	0x03E8C418 RET
	0x03E8C41C LDR X19, [X0 + 0x50]
	0x03E8C420 ADRP X0, 0x290000
	0x03E8C424 LDR X0, [X0 + 0x4B8]
	0x03E8C428 BL 0x1C16D08
	0x03E8C42C BL 0x1C16F10
	0x03E8C430 MOV X1, X19
	0x03E8C434 MOV X2, X31
	0x03E8C438 MOV X20, X0
	0x03E8C43C BL 0x338C448
	0x03E8C440 ADRP X0, 0x2E1000
	0x03E8C444 LDR X0, [X0 + 0x260]
	0x03E8C448 BL 0x1C16D08
	0x03E8C44C MOV X1, X0
	0x03E8C450 MOV X0, X20
	0x03E8C454 BL 0x1C16DEC
	0x03E8C458 STR X30, [X31 - 0x20]!
	0x03E8C45C STP X20, X19, [X31 + 0x10]
	0x03E8C460 LDRB W8, [X0 + 0x40]
	0x03E8C464 CBNZ W8, 0x3E8C478
	0x03E8C468 LDR X0, [X0 + 0x18]
	0x03E8C46C LDP X20, X19, [X31 + 0x10]
	0x03E8C470 LDR X30, [X31], #0x20
	0x03E8C474 RET
	0x03E8C478 LDR X19, [X0 + 0x50]
	0x03E8C47C ADRP X0, 0x290000
	0x03E8C480 LDR X0, [X0 + 0x4B8]
	0x03E8C484 BL 0x1C16D08
	0x03E8C488 BL 0x1C16F10
	0x03E8C48C MOV X1, X19
	0x03E8C490 MOV X2, X31
	0x03E8C494 MOV X20, X0
	0x03E8C498 BL 0x338C448
	0x03E8C49C ADRP X0, 0x2E1000
	0x03E8C4A0 LDR X0, [X0 + 0x268]
	0x03E8C4A4 BL 0x1C16D08
	0x03E8C4A8 MOV X1, X0
	0x03E8C4AC MOV X0, X20
	0x03E8C4B0 BL 0x1C16DEC
	0x03E8C4B4 STR X30, [X31 - 0x20]!
	0x03E8C4B8 STP X20, X19, [X31 + 0x10]
	0x03E8C4BC LDRB W8, [X0 + 0x40]
	0x03E8C4C0 CBNZ W8, 0x3E8C4D4
	0x03E8C4C4 LDP X20, X19, [X31 + 0x10]
	0x03E8C4C8 STR X1, [X0 + 0x18]
	0x03E8C4CC LDR X30, [X31], #0x20
	0x03E8C4D0 RET
	0x03E8C4D4 LDR X19, [X0 + 0x50]
	0x03E8C4D8 ADRP X0, 0x290000
	0x03E8C4DC LDR X0, [X0 + 0x4B8]
	0x03E8C4E0 BL 0x1C16D08
	0x03E8C4E4 BL 0x1C16F10
	0x03E8C4E8 MOV X1, X19
	0x03E8C4EC MOV X2, X31
	0x03E8C4F0 MOV X20, X0
	0x03E8C4F4 BL 0x338C448
	0x03E8C4F8 ADRP X0, 0x2E1000
	0x03E8C4FC LDR X0, [X0 + 0x270]
	0x03E8C500 BL 0x1C16D08
	0x03E8C504 MOV X1, X0
	0x03E8C508 MOV X0, X20
	0x03E8C50C BL 0x1C16DEC
	0x03E8C510 STR X30, [X31 - 0x20]!
	0x03E8C514 STP X20, X19, [X31 + 0x10]
	0x03E8C518 LDRB W8, [X0 + 0x40]
	0x03E8C51C CBNZ W8, 0x3E8C530
	0x03E8C520 LDP X20, X19, [X31 + 0x10]
	0x03E8C524 STR X1, [X0 + 0x20]
	0x03E8C528 LDR X30, [X31], #0x20
	0x03E8C52C RET
	0x03E8C530 LDR X19, [X0 + 0x50]
	0x03E8C534 ADRP X0, 0x290000
	0x03E8C538 LDR X0, [X0 + 0x4B8]
	0x03E8C53C BL 0x1C16D08
	0x03E8C540 BL 0x1C16F10
	0x03E8C544 MOV X1, X19
	0x03E8C548 MOV X2, X31
	0x03E8C54C MOV X20, X0
	0x03E8C550 BL 0x338C448
	0x03E8C554 ADRP X0, 0x2E1000
	0x03E8C558 LDR X0, [X0 + 0x278]
	0x03E8C55C BL 0x1C16D08
	0x03E8C560 MOV X1, X0
	0x03E8C564 MOV X0, X20
	0x03E8C568 BL 0x1C16DEC
	0x03E8C56C STR X30, [X31 - 0x20]!
	0x03E8C570 STP X20, X19, [X31 + 0x10]
	0x03E8C574 LDRB W8, [X0 + 0x40]
	0x03E8C578 CBNZ W8, 0x3E8C590
	0x03E8C57C LDP X20, X19, [X31 + 0x10]
	0x03E8C580 AND W8, W1, 0x1
	0x03E8C584 STRB W8, [X0 + 0x41]
	0x03E8C588 LDR X30, [X31], #0x20
	0x03E8C58C RET
	0x03E8C590 LDR X19, [X0 + 0x50]
	0x03E8C594 ADRP X0, 0x290000
	0x03E8C598 LDR X0, [X0 + 0x4B8]
	0x03E8C59C BL 0x1C16D08
	0x03E8C5A0 BL 0x1C16F10
	0x03E8C5A4 MOV X1, X19
	0x03E8C5A8 MOV X2, X31
	0x03E8C5AC MOV X20, X0
	0x03E8C5B0 BL 0x338C448
	0x03E8C5B4 ADRP X0, 0x2E1000
	0x03E8C5B8 LDR X0, [X0 + 0x280]
	0x03E8C5BC BL 0x1C16D08
	0x03E8C5C0 MOV X1, X0
	0x03E8C5C4 MOV X0, X20
	0x03E8C5C8 BL 0x1C16DEC
	0x03E8C5CC STP X30, X19, [X31 - 0x10]!
	0x03E8C5D0 LDRB W19, [X0 + 0x42]
	0x03E8C5D4 BL 0x1C16D44
	0x03E8C5D8 MOV W0, W19
	0x03E8C5DC LDP X30, X19, [X31], #0x10
	0x03E8C5E0 RET
	0x03E8C5E4 MOVZ W0, 0x1
	0x03E8C5E8 RET
	0x03E8C5EC LDR X0, [X0 + 0x48]
	0x03E8C5F0 RET
	0x03E8C5F4 STR X30, [X31 - 0x20]!
	0x03E8C5F8 STP X20, X19, [X31 + 0x10]
	0x03E8C5FC LDRB W8, [X0 + 0x40]
	0x03E8C600 CBNZ W8, 0x3E8C614
	0x03E8C604 LDR X0, [X0 + 0x60]
	0x03E8C608 LDP X20, X19, [X31 + 0x10]
	0x03E8C60C LDR X30, [X31], #0x20
	0x03E8C610 RET
	0x03E8C614 LDR X19, [X0 + 0x50]
	0x03E8C618 ADRP X0, 0x290000
	0x03E8C61C LDR X0, [X0 + 0x4B8]
	0x03E8C620 BL 0x1C16D08
	0x03E8C624 BL 0x1C16F10
	0x03E8C628 MOV X1, X19
	0x03E8C62C MOV X2, X31
	0x03E8C630 MOV X20, X0
	0x03E8C634 BL 0x338C448
	0x03E8C638 ADRP X0, 0x2E1000
	0x03E8C63C LDR X0, [X0 + 0x288]
	0x03E8C640 BL 0x1C16D08
	0x03E8C644 MOV X1, X0
	0x03E8C648 MOV X0, X20
	0x03E8C64C BL 0x1C16DEC
	0x03E8C650 STR X30, [X31 - 0x20]!
	0x03E8C654 STP X20, X19, [X31 + 0x10]
	0x03E8C658 LDRB W8, [X0 + 0x40]
	0x03E8C65C CBNZ W8, 0x3E8C670
	0x03E8C660 LDP X20, X19, [X31 + 0x10]
	0x03E8C664 STR X1, [X0 + 0x60]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x55D000
	005 Move W8, [X20+3677]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {46}
	011 Move X0, 0x2E2000
	012 Move X0, [X0+360]
	013 Call 0x1C17CF4
	014 Move X0, 0x26A000
	015 Move X0, [X0+632]
	016 Call 0x1C17CF4
	017 Move X0, 0x291000
	018 Move X0, [X0+1248]
	019 Call 0x1C17CF4
	020 Move X0, 0x291000
	021 Move X0, [X0+1240]
	022 Call 0x1C17CF4
	023 Move X0, 0x2E2000
	024 Move X0, [X0+472]
	025 Call 0x1C17CF4
	026 Move X0, 0x2AF000
	027 Move X0, [X0+400]
	028 Call 0x1C17CF4
	029 Move X0, 0x2AF000
	030 Move X0, [X0+600]
	031 Call 0x1C17CF4
	032 Move X0, 0x2E2000
	033 Move X0, [X0+480]
	034 Call 0x1C17CF4
	035 Move X0, 0x2E2000
	036 Move X0, [X0+488]
	037 Call 0x1C17CF4
	038 Move X0, 0x2AF000
	039 Move X0, [X0+2960]
	040 Call 0x1C17CF4
	041 Move X0, 0x2AF000
	042 Move X0, [X0+2776]
	043 Call 0x1C17CF4
	044 Move W8, 1
	045 Move [X20+3677], W8
	046 Move X8, [X19+160]
	047 Compare X8, 0
	048 JumpIfEqual {145}
	049 Move X0, [X19+72]
	050 Compare X0, 0
	051 JumpIfEqual {178}
	052 Move X8, 0x2AF000
	053 Move X8, [X8+400]
	054 Move X2, X31
	055 Move X1, [X8]
	056 Call NameValueCollection.get_Item, X0, X1
	057 Compare X0, 0
	058 JumpIfEqual {71}
	059 Move X8, 0x2AF000
	060 Move X8, [X8+600]
	061 Move W2, 5
	062 Move X3, X31
	063 Move X1, [X8]
	064 Call String.Equals, X0, X1, X2
	065 Move TEMP, X0
	066 And TEMP, TEMP, 1
	067 Compare TEMP, 1
	068 JumpIfNotEqual {150}
	069 Move W8, 1
	070 Move [X19+24], W8
	071 Move X8, 0x291000
	072 Move X0, [X19+80]
	073 Move X8, [X8+1240]
	074 Move X2, X31
	075 Move X1, [X8]
	076 Call String.op_Equality, X0, X1
	077 Move TEMP, X0
	078 And TEMP, TEMP, 1
	079 Compare TEMP, 1
	080 JumpIfEqual {91}
	081 Move X8, 0x291000
	082 Move X0, [X19+80]
	083 Move X8, [X8+1248]
	084 Move X2, X31
	085 Move X1, [X8]
	086 Call String.op_Equality, X0, X1
	087 Move TEMP, X0
	088 And TEMP, TEMP, 1
	089 Compare TEMP, 1
	090 JumpIfNotEqual {96}
	091 Move X8, [X19+48]
	092 NotImplemented "Instruction CMP not yet implemented."
	093 Move W8, [X19+24]
	094 Compare W8, 0
	095 JumpIfEqual {170}
	096 Move X0, [X19+72]
	097 Compare X0, 0
	098 JumpIfEqual {178}
	099 Move X8, 0x2AF000
	100 Move X8, [X8+2776]
	101 Move X2, X31
	102 Move X1, [X8]
	103 Call NameValueCollection.get_Item, X0, X1
	104 Compare X0, 0
	105 JumpIfEqual {166}
	106 Move X8, 0x2AF000
	107 Move X8, [X8+2960]
	108 Move W2, 5
	109 Move X3, X31
	110 Move X1, [X8]
	111 Call String.Equals, X0, X1, X2
	112 Move TEMP, X0
	113 And TEMP, TEMP, 1
	114 Compare TEMP, 1
	115 JumpIfNotEqual {159}
	116 Move X0, [X19+32]
	117 Compare X0, 0
	118 JumpIfEqual {178}
	119 Call HttpConnection.GetResponseStream, X0
	120 Move X20, 0x2E2000
	121 Move X20, [X20+360]
	122 Move X19, X0
	123 Move X8, [X20]
	124 Move W9, [X8+224]
	125 Compare W9, 0
	126 JumpIfNotEqual {130}
	127 Move X0, X8
	128 Call 0x1C17DFC
	129 Move X8, [X20]
	130 Move X8, [X8+184]
	131 Move X1, [X8]
	132 Compare X1, 0
	133 JumpIfEqual {178}
	134 Compare X19, 0
	135 JumpIfEqual {178}
	136 Move W3, [X1+24]
	137 Move X0, X19
	138 Move X20, [X31+16]
	139 Move X19, [X31+24]
	140 Move W2, W31
	141 Move X4, X31
	142 Move X30, [X31+32]
	143 Call ResponseStream.InternalWrite, X0, X1, X2, X3
	144 Return 
	145 Move X8, [X19+56]
	146 Compare X8, 0
	147 JumpIfEqual {178}
	148 Move X9, 0x2E2000
	149 Move X9, [X9+480]
	150 Move X8, [X19+56]
	151 Compare X8, 0
	152 JumpIfEqual {178}
	153 Move X9, 0x2E2000
	154 Move X9, [X9+472]
	155 Move W10, 501
	156 Move X9, [X9]
	157 Move [X8+24], X9
	158 Move [X8+32], W10
	159 Move X8, [X19+56]
	160 Compare X8, 0
	161 JumpIfEqual {178}
	162 Move X9, 0x2E2000
	163 Move X9, [X9+488]
	164 Move X9, [X9]
	165 Move [X8+24], X9
	166 Move X20, [X31+16]
	167 Move X19, [X31+24]
	168 Move X30, [X31+32]
	169 Return 
	170 Move X8, [X19+56]
	171 Compare X8, 0
	172 JumpIfEqual {178}
	173 Move X9, 0x26A000
	174 Move X9, [X9+632]
	175 Move W10, 411
	176 Move X9, [X9]
	177 Move X9, [X9+184]
	178 Call 0x1C17F20

Method: System.Boolean FlushInput()

Disassembly:
	0x03E8CBC0 LDR X8, [X19 + 0x38]
	0x03E8CBC4 CBZ X8, 0x3E8CC14
	0x03E8CBC8 MOV X20, X0
	0x03E8CBCC MOV X0, X8
	0x03E8CBD0 MOV X1, X31
	0x03E8CBD4 BL 0x3E900E4
	0x03E8CBD8 CBZ X0, 0x3E8CC14
	0x03E8CBDC ADRP X8, 0x2AE000
	0x03E8CBE0 LDR X8, [X8 + 0xA80]
	0x03E8CBE4 MOVZ W3, 0x1
	0x03E8CBE8 MOV X2, X20
	0x03E8CBEC MOV X4, X31
	0x03E8CBF0 LDR X1, [X8]
	0x03E8CBF4 BL 0x3E8FB50
	0x03E8CBF8 LDR X0, [X19 + 0x38]
	0x03E8CBFC CBZ X0, 0x3E8CC14
	0x03E8CC00 LDP X20, X19, [X31 + 0x20]
	0x03E8CC04 LDP X22, X21, [X31 + 0x10]
	0x03E8CC08 MOV X1, X31
	0x03E8CC0C LDR X30, [X31], #0x30
	0x03E8CC10 B 0x3E90E20
	0x03E8CC14 BL 0x1C16F20
	0x03E8CC18 STR X1, [X0 + 0x40]
	0x03E8CC1C RET
	0x03E8CC20 STP X30, X23, [X31 - 0x30]!
	0x03E8CC24 STP X22, X21, [X31 + 0x10]
	0x03E8CC28 STP X20, X19, [X31 + 0x20]
	0x03E8CC2C ADRP X19, 0x55C000
	0x03E8CC30 LDRB W8, [X19 + 0xE34]
	0x03E8CC34 MOV X22, X2
	0x03E8CC38 MOV X23, X1
	0x03E8CC3C MOV X21, X0
	0x03E8CC40 TBNZ X8, 0x0, 0x3E8CC7C
	0x03E8CC44 ADRP X0, 0x2E1000
	0x03E8CC48 LDR X0, [X0 + 0x2D0]
	0x03E8CC4C BL 0x1C16CF4
	0x03E8CC50 ADRP X0, 0x2E1000
	0x03E8CC54 LDR X0, [X0 + 0x2D8]
	0x03E8CC58 BL 0x1C16CF4
	0x03E8CC5C ADRP X0, 0x2E1000
	0x03E8CC60 LDR X0, [X0 + 0x2E0]
	0x03E8CC64 BL 0x1C16CF4
	0x03E8CC68 ADRP X0, 0x2E1000
	0x03E8CC6C LDR X0, [X0 + 0x2E8]
	0x03E8CC70 BL 0x1C16CF4
	0x03E8CC74 MOVZ W8, 0x1
	0x03E8CC78 STRB W8, [X19 + 0xE34]
	0x03E8CC7C LDR X19, [X21 + 0x38]
	0x03E8CC80 MOV X1, X31
	0x03E8CC84 MOV X0, X19
	0x03E8CC88 BL 0x33E14E0
	0x03E8CC8C LDRB W20, [X21 + 0x42]
	0x03E8CC90 BL 0x1C16D44
	0x03E8CC94 CBZ W20, 0x3E8CD38
	0x03E8CC98 ADRP X8, 0x2E1000
	0x03E8CC9C LDR X8, [X8 + 0x2D0]
	0x03E8CCA0 LDR X0, [X8]
	0x03E8CCA4 BL 0x1C16F10
	0x03E8CCA8 MOV X20, X0
	0x03E8CCAC MOV X1, X23
	0x03E8CCB0 MOV X2, X22
	0x03E8CCB4 MOV X3, X31
	0x03E8CCB8 BL 0x3EA27B0
	0x03E8CCBC LDR X8, [X21 + 0x28]
	0x03E8CCC0 CBZ X8, 0x3E8CD50
	0x03E8CCC4 LDR W9, [X8 + 0x20]
	0x03E8CCC8 CBZ W9, 0x3E8CCFC
	0x03E8CCCC ADRP X9, 0x2E1000
	0x03E8CCD0 LDR X9, [X9 + 0x2D8]
	0x03E8CCD4 LDR X1, [X9]
	0x03E8CCD8 MOV X0, X8
	0x03E8CCDC BL 0x24F18D4
	0x03E8CCE0 MOV X1, X0
	0x03E8CCE4 CBZ X20, 0x3E8CD54
	0x03E8CCE8 MOVZ W2, 0x1
	0x03E8CCEC MOV X0, X20
	0x03E8CCF0 MOV X3, X31
	0x03E8CCF4 BL 0x3EA2AFC
	0x03E8CCF8 B 0x3E8CD18
	0x03E8CCFC LDR X0, [X21 + 0x80]
	0x03E8CD00 CBZ X0, 0x3E8CDA4
	0x03E8CD04 ADRP X8, 0x2E1000
	0x03E8CD08 LDR X8, [X8 + 0x2E0]
	0x03E8CD0C LDR X2, [X8]
	0x03E8CD10 MOV X1, X20
	0x03E8CD14 BL 0x24F1750
	0x03E8CD18 MOV X0, X19
	0x03E8CD1C MOV X1, X31
	0x03E8CD20 BL 0x33E14E4
	0x03E8CD24 MOV X0, X20
	0x03E8CD28 LDP X20, X19, [X31 + 0x20]
	0x03E8CD2C LDP X22, X21, [X31 + 0x10]
	0x03E8CD30 LDP X30, X23, [X31], #0x30
	0x03E8CD34 RET
	0x03E8CD38 LDRB W8, [X21 + 0x40]
	0x03E8CD3C CBNZ W8, 0x3E8CD58
	0x03E8CD40 ADRP X0, 0x2E1000
	0x03E8CD44 LDR X0, [X0 + 0x2F0]
	0x03E8CD48 BL 0x1C16D08
	0x03E8CD4C B 0x3E8CD64
	0x03E8CD50 BL 0x1C16F20
	0x03E8CD54 BL 0x1C16F20
	0x03E8CD58 ADRP X0, 0x2E1000
	0x03E8CD5C LDR X0, [X0 + 0x2F8]
	0x03E8CD60 BL 0x1C16D08
	0x03E8CD64 MOV X20, X0
	0x03E8CD68 ADRP X0, 0x2E1000
	0x03E8CD6C LDR X0, [X0 + 0x28]
	0x03E8CD70 BL 0x1C16D08
	0x03E8CD74 BL 0x1C16F10
	0x03E8CD78 MOV X21, X0
	0x03E8CD7C MOVZ W1, 0x3E3
	0x03E8CD80 MOV X2, X20
	0x03E8CD84 MOV X3, X31
	0x03E8CD88 BL 0x3661F90
	0x03E8CD8C ADRP X0, 0x2E1000
	0x03E8CD90 LDR X0, [X0 + 0x300]
	0x03E8CD94 BL 0x1C16D08
	0x03E8CD98 MOV X1, X0
	0x03E8CD9C MOV X0, X21
	0x03E8CDA0 BL 0x1C16DEC
	0x03E8CDA4 BL 0x1C16F20
	0x03E8CDA8 B 0x3E8CDC4
	0x03E8CDAC B 0x3E8CDC4
	0x03E8CDB0 B 0x3E8CDC4
	0x03E8CDB4 B 0x3E8CDC4
	0x03E8CDB8 B 0x3E8CDC4
	0x03E8CDBC B 0x3E8CDC4
	0x03E8CDC0 B 0x3E8CDC4
	0x03E8CDC4 MOV X20, X0
	0x03E8CDC8 CMP W1, 0x1
	0x03E8CDCC B.NE 0x3E8CDFC
	0x03E8CDD0 MOV X0, X20
	0x03E8CDD4 BL 0x3EB1AD0
	0x03E8CDD8 LDR X21, [X0]
	0x03E8CDDC BL 0x3EB1AE0
	0x03E8CDE0 MOV X0, X19
	0x03E8CDE4 MOV X1, X31
	0x03E8CDE8 BL 0x33E14E4
	0x03E8CDEC MOV X20, X31
	0x03E8CDF0 CBZ X21, 0x3E8CD24
	0x03E8CDF4 MOV X0, X21
	0x03E8CDF8 BL 0x1C16F18
	0x03E8CDFC MOV X21, X31
	0x03E8CE00 B 0x3E8CE08
	0x03E8CE04 MOV X20, X0
	0x03E8CE08 MOV X0, X19
	0x03E8CE0C MOV X1, X31
	0x03E8CE10 BL 0x33E14E4
	0x03E8CE14 CBNZ X21, 0x3E8CE20
	0x03E8CE18 MOV X0, X20
	0x03E8CE1C BL 0x1D2C690
	0x03E8CE20 MOV X0, X21
	0x03E8CE24 BL 0x1C16F18
	0x03E8CE28 BL 0x1990590
	0x03E8CE2C STP X30, X21, [X31 - 0x20]!
	0x03E8CE30 STP X20, X19, [X31 + 0x10]
	0x03E8CE34 ADRP X21, 0x55C000
	0x03E8CE38 LDRB W8, [X21 + 0xE35]
	0x03E8CE3C MOV W20, W1
	0x03E8CE40 MOV X19, X0
	0x03E8CE44 TBNZ X8, 0x0, 0x3E8CE74
	0x03E8CE48 ADRP X0, 0x2E1000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X19, 0x55D000
	008 Move X21, 0x297000
	009 Move W8, [X19+3678]
	010 Move X21, [X21+3344]
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {27}
	016 Move X0, 0x268000
	017 Move X0, [X0+1560]
	018 Call 0x1C17CF4
	019 Move X0, 0x290000
	020 Move X0, [X0+1816]
	021 Call 0x1C17CF4
	022 Move X0, 0x297000
	023 Move X0, [X0+3344]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X19+3678], W8
	027 Move X0, X20
	028 Call HttpListenerRequest.get_InputStream, X0
	029 Move X8, [X21]
	030 Move X19, X0
	031 Move W9, [X8+224]
	032 Compare W9, 0
	033 JumpIfNotEqual {37}
	034 Move X0, X8
	035 Call 0x1C17DFC
	036 Move X8, [X21]
	037 Move X8, [X8+184]
	038 Move X8, [X8]
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Move X9, 0x268000
	041 Move X8, [X20+48]
	042 Move X9, [X9+1560]
	043 Move X0, [X9]
	044 Subtract X9, X8, 1
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Move W9, 2048
	047 NotImplemented "Instruction CSEL not yet implemented."
	048 Move W1, W20
	049 Call 0x1C17D6C
	050 Compare X19, 0
	051 JumpIfEqual {136}
	052 Move X23, 0x290000
	053 Move X23, [X23+1816]
	054 Move X21, X0
	055 Move X8, [X19]
	056 Move X9, [X8+696]
	057 Move X6, [X8+704]
	058 Move X0, X19
	059 Move X1, X21
	060 Move W2, W31
	061 Move W3, W20
	062 Move X4, X31
	063 Move X5, X31
	064 NotImplemented "Instruction BLR not yet implemented."
	065 Move X22, X0
	066 Compare X0, 0
	067 JumpIfEqual {134}
	068 Move X8, [X22]
	069 Move X1, [X23]
	070 NotImplemented "Instruction LDRH not yet implemented."
	071 Compare X9, 0
	072 JumpIfEqual {79}
	073 Move X10, [X8+176]
	074 Add X10, X10, 8
	075 NotImplemented "Instruction LDUR not yet implemented."
	076 NotImplemented "Instruction CMP not yet implemented."
	077 Subtract X9, X9, 1
	078 Add X10, X10, 16
	079 Move X0, X22
	080 Move W2, W31
	081 Call 0x1C5D788
	082 NotImplemented "Instruction LDRSW not yet implemented."
	083 Add X8, X8, X9
	084 Add X0, X8, 312
	085 Move X8, [X0]
	086 Move X1, [X0+8]
	087 Move X0, X22
	088 NotImplemented "Instruction BLR not yet implemented."
	089 Move TEMP, X0
	090 And TEMP, TEMP, 1
	091 Compare TEMP, 1
	092 JumpIfEqual {126}
	093 Move X8, [X22]
	094 Move X1, [X23]
	095 NotImplemented "Instruction LDRH not yet implemented."
	096 Compare X9, 0
	097 JumpIfEqual {104}
	098 Move X10, [X8+176]
	099 Add X10, X10, 8
	100 NotImplemented "Instruction LDUR not yet implemented."
	101 NotImplemented "Instruction CMP not yet implemented."
	102 Subtract X9, X9, 1
	103 Add X10, X10, 16
	104 Move W2, 1
	105 Move X0, X22
	106 Call 0x1C5D788
	107 Move W9, [X10]
	108 Add W9, W9, 1
	109 Add X8, X8, W9
	110 Add X0, X8, 312
	111 Move X8, [X0]
	112 Move X1, [X0+8]
	113 Move X0, X22
	114 NotImplemented "Instruction BLR not yet implemented."
	115 Compare X0, 0
	116 JumpIfEqual {135}
	117 Move X8, [X0]
	118 Move X9, [X8+488]
	119 Move X2, [X8+496]
	120 Move W1, 100
	121 NotImplemented "Instruction BLR not yet implemented."
	122 Move TEMP, X0
	123 And TEMP, TEMP, 1
	124 Compare TEMP, 1
	125 JumpIfNotEqual {153}
	126 Move X8, [X19]
	127 Move X9, [X8+712]
	128 Move X2, [X8+720]
	129 Move X0, X19
	130 Move X1, X22
	131 NotImplemented "Instruction BLR not yet implemented."
	132 NotImplemented "Instruction CMP not yet implemented."
	133 Move W0, 1
	134 Call 0x1C17F20
	135 Call 0x1C17F20
	136 Call 0x1C17F20
	137 Move X19, X0
	138 NotImplemented "Instruction CMP not yet implemented."
	139 Move X0, X19
	140 Call 0x3EB2AD0
	141 Move X19, X0
	142 Move X0, 0x26E000
	143 Move X0, [X0+3264]
	144 Call 0x1C17D08
	145 Move X8, [X19]
	146 Move X1, [X8]
	147 Call 0x1C18270
	148 Move TEMP, X0
	149 And TEMP, TEMP, 1
	150 Compare TEMP, 1
	151 JumpIfNotEqual {161}
	152 Call 0x3EB2AE0
	153 Move W0, W31
	154 Move X20, [X31+32]
	155 Move X19, [X31+40]
	156 Move X22, [X31+16]
	157 Move X21, [X31+24]
	158 Move X30, [X31+48]
	159 Move X23, [X31+56]
	160 Return X0
	161 Move W0, 8
	162 Call 0x3EB2AF0
	163 Move X8, [X19]
	164 Move [X0], X8
	165 Move X1, 0x29000
	166 Add X1, X1, 3672
	167 Move X2, X31
	168 Call 0x3EB2B00
	169 Move X19, X0
	170 Call 0x3EB2AE0
	171 Move X0, X19
	172 Call 0x1D2D690
	173 Call 0x1991590

Method: System.Boolean IsUpgradeRequest(System.String protocol)

Disassembly:
	0x03E900B8 BL 0x1C16F10
	0x03E900BC MOV X1, X31
	0x03E900C0 MOV X20, X0
	0x03E900C4 BL 0x3E83C9C
	0x03E900C8 STR X20, [X19 + 0x38]
	0x03E900CC MOV X0, X20
	0x03E900D0 LDP X20, X19, [X31 + 0x10]
	0x03E900D4 LDR X30, [X31], #0x20
	0x03E900D8 RET
	0x03E900DC STR X1, [X0 + 0x38]
	0x03E900E0 RET
	0x03E900E4 STR X30, [X31 - 0x20]!
	0x03E900E8 STP X20, X19, [X31 + 0x10]
	0x03E900EC ADRP X20, 0x558000
	0x03E900F0 LDRB W8, [X20 + 0xE66]
	0x03E900F4 MOV X19, X0
	0x03E900F8 TBNZ X8, 0x0, 0x3E90110
	0x03E900FC ADRP X0, 0x2DC000
	0x03E90100 LDR X0, [X0 + 0xC80]
	0x03E90104 BL 0x1C16CF4
	0x03E90108 MOVZ W8, 0x1
	0x03E9010C STRB W8, [X20 + 0xE66]
	0x03E90110 LDR X20, [X19 + 0x48]
	0x03E90114 CBNZ X20, 0x3E90144
	0x03E90118 ADRP X8, 0x2DC000
	0x03E9011C LDR X8, [X8 + 0xC80]
	0x03E90120 LDR X0, [X8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x559000
	007 Move X21, 0x26B000
	008 Move W8, [X22+3679]
	009 Move X21, [X21+584]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x26B000
	017 Move X0, [X0+584]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+3679], W8
	021 Move X0, [X21]
	022 Move X20, [X20+72]
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 Move X0, X20
	028 Move X1, X19
	029 Move X20, [X31+32]
	030 Move X19, [X31+40]
	031 Move X22, [X31+16]
	032 Move X21, [X31+24]
	033 Move X2, X31
	034 Move X30, [X31+48]
	035 Call Ext.Upgrades, X0, X1
	036 Return X0

Method: System.Void SetRequestLine(System.String requestLine)

Disassembly:
	0x03E8BEB8 LDR X23, [X20 + 0x38]
	0x03E8BEBC CBNZ X23, 0x3E8BF8C
	0x03E8BEC0 LDR X0, [X20 + 0x70]
	0x03E8BEC4 CBZ X0, 0x3E8BFB4
	0x03E8BEC8 LDR X8, [X0]
	0x03E8BECC LDR X1, [X8 + 0x3C0]
	0x03E8BED0 LDR X9, [X8 + 0x3B8]
	0x03E8BED4 BLR X9
	0x03E8BED8 MOV X24, X0
	0x03E8BEDC LDR X0, [X20 + 0x70]
	0x03E8BEE0 CBZ X0, 0x3E8BFB8
	0x03E8BEE4 LDR X8, [X0]
	0x03E8BEE8 LDP X9, X1, [X8 + 0x1E8]
	0x03E8BEEC BLR X9
	0x03E8BEF0 LDR W25, [X20 + 0x60]
	0x03E8BEF4 LDR X27, [X20 + 0x88]
	0x03E8BEF8 SUB W26, W0, W25
	0x03E8BEFC TBZ X22, 0x0, 0x3E8BF40
	0x03E8BF00 ADRP X8, 0x2E2000
	0x03E8BF04 LDR X21, [X20 + 0x20]
	0x03E8BF08 LDR X8, [X8 + 0x160]
	0x03E8BF0C LDR X0, [X8]
	0x03E8BF10 BL 0x1C16F10
	0x03E8BF14 MOV X23, X0
	0x03E8BF18 MOV X1, X27
	0x03E8BF1C MOV X2, X24
	0x03E8BF20 MOV W3, W25
	0x03E8BF24 MOV W4, W26
	0x03E8BF28 MOV X5, X21
	0x03E8BF2C MOV X6, X31
	0x03E8BF30 BL 0x3E9E844
	0x03E8BF34 B 0x3E8BF70
	0x03E8BF38 MOV X23, X31
	0x03E8BF3C B 0x3E8BF8C
	0x03E8BF40 ADRP X8, 0x2E2000
	0x03E8BF44 LDR X8, [X8 + 0x200]
	0x03E8BF48 LDR X0, [X8]
	0x03E8BF4C BL 0x1C16F10
	0x03E8BF50 MOV X23, X0
	0x03E8BF54 MOV X1, X27
	0x03E8BF58 MOV X2, X24
	0x03E8BF5C MOV W3, W25
	0x03E8BF60 MOV W4, W26
	0x03E8BF64 MOV X5, X21
	0x03E8BF68 MOV X6, X31
	0x03E8BF6C BL 0x3E98A78
	0x03E8BF70 LDR X0, [X20 + 0x70]
	0x03E8BF74 STR X23, [X20 + 0x38]
	0x03E8BF78 CBZ X0, 0x3E8BF8C
	0x03E8BF7C MOV X1, X31
	0x03E8BF80 BL 0x32F02B8
	0x03E8BF84 LDR X23, [X20 + 0x38]
	0x03E8BF88 STR X31, [X20 + 0x70]
	0x03E8BF8C MOV X0, X19
	0x03E8BF90 MOV X1, X31
	0x03E8BF94 BL 0x33E14E4
	0x03E8BF98 MOV X0, X23
	0x03E8BF9C LDP X20, X19, [X31 + 0x40]
	0x03E8BFA0 LDP X22, X21, [X31 + 0x30]
	0x03E8BFA4 LDP X24, X23, [X31 + 0x20]
	0x03E8BFA8 LDP X26, X25, [X31 + 0x10]
	0x03E8BFAC LDP X30, X27, [X31], #0x50
	0x03E8BFB0 RET
	0x03E8BFB4 BL 0x1C16F20
	0x03E8BFB8 BL 0x1C16F20
	0x03E8BFBC B 0x3E8BFD4
	0x03E8BFC0 B 0x3E8BFD4
	0x03E8BFC4 B 0x3E8BFD4
	0x03E8BFC8 B 0x3E8BFD4
	0x03E8BFCC B 0x3E8BFD4
	0x03E8BFD0 B 0x3E8BFD4
	0x03E8BFD4 MOV X20, X0
	0x03E8BFD8 CMP W1, 0x1
	0x03E8BFDC B.NE 0x3E8C00C
	0x03E8BFE0 MOV X0, X20
	0x03E8BFE4 BL 0x3EB1AD0
	0x03E8BFE8 LDR X21, [X0]
	0x03E8BFEC BL 0x3EB1AE0
	0x03E8BFF0 MOV X0, X19
	0x03E8BFF4 MOV X1, X31
	0x03E8BFF8 BL 0x33E14E4
	0x03E8BFFC MOV X23, X31
	0x03E8C000 CBZ X21, 0x3E8BF98
	0x03E8C004 MOV X0, X21
	0x03E8C008 BL 0x1C16F18
	0x03E8C00C MOV X21, X31
	0x03E8C010 B 0x3E8C018
	0x03E8C014 MOV X20, X0
	0x03E8C018 MOV X0, X19
	0x03E8C01C MOV X1, X31
	0x03E8C020 BL 0x33E14E4
	0x03E8C024 CBNZ X21, 0x3E8C030
	0x03E8C028 MOV X0, X20
	0x03E8C02C BL 0x1D2C690
	0x03E8C030 MOV X0, X21
	0x03E8C034 BL 0x1C16F18
	0x03E8C038 BL 0x1990590
	0x03E8C03C LDR X0, [X0 + 0x28]
	0x03E8C040 RET
	0x03E8C044 STR X30, [X31 - 0x20]!
	0x03E8C048 STP X20, X19, [X31 + 0x10]
	0x03E8C04C LDRB W8, [X0 + 0x40]
	0x03E8C050 CBNZ W8, 0x3E8C064
	0x03E8C054 LDRB W0, [X0 + 0x41]
	0x03E8C058 LDP X20, X19, [X31 + 0x10]
	0x03E8C05C LDR X30, [X31], #0x20
	0x03E8C060 RET
	0x03E8C064 LDR X19, [X0 + 0x50]
	0x03E8C068 ADRP X0, 0x290000
	0x03E8C06C LDR X0, [X0 + 0x4B8]
	0x03E8C070 BL 0x1C16D08
	0x03E8C074 BL 0x1C16F10
	0x03E8C078 MOV X1, X19
	0x03E8C07C MOV X2, X31
	0x03E8C080 MOV X20, X0
	0x03E8C084 BL 0x338C448
	0x03E8C088 ADRP X0, 0x2E1000
	0x03E8C08C LDR X0, [X0 + 0x208]
	0x03E8C090 BL 0x1C16D08
	0x03E8C094 MOV X1, X0
	0x03E8C098 MOV X0, X20
	0x03E8C09C BL 0x1C16DEC
	0x03E8C0A0 STP X30, X21, [X31 - 0x20]!
	0x03E8C0A4 STP X20, X19, [X31 + 0x10]
	0x03E8C0A8 ADRP X20, 0x55C000
	0x03E8C0AC ADRP X19, 0x2E1000
	0x03E8C0B0 ADRP X21, 0x2E1000
	0x03E8C0B4 LDRB W8, [X20 + 0xE30]
	0x03E8C0B8 LDR X19, [X19 + 0x210]
	0x03E8C0BC LDR X21, [X21 + 0x218]
	0x03E8C0C0 TBNZ X8, 0x0, 0x3E8C0E4
	0x03E8C0C4 ADRP X0, 0x2E1000
	0x03E8C0C8 LDR X0, [X0 + 0x218]
	0x03E8C0CC BL 0x1C16CF4
	0x03E8C0D0 ADRP X0, 0x2E1000
	0x03E8C0D4 LDR X0, [X0 + 0x210]
	0x03E8C0D8 BL 0x1C16CF4
	0x03E8C0DC MOVZ W8, 0x1
	0x03E8C0E0 STRB W8, [X20 + 0xE30]
	0x03E8C0E4 LDR X8, [X21]
	0x03E8C0E8 LDR X9, [X19]
	0x03E8C0EC LDP X20, X19, [X31 + 0x10]
	0x03E8C0F0 LDR X8, [X8 + 0xB8]
	0x03E8C0F4 STR X9, [X8]
	0x03E8C0F8 LDP X30, X21, [X31], #0x20
	0x03E8C0FC RET
	0x03E8C100 STR X30, [X31 - 0x40]!
	0x03E8C104 STP X24, X23, [X31 + 0x10]
	0x03E8C108 STP X22, X21, [X31 + 0x20]
	0x03E8C10C STP X20, X19, [X31 + 0x30]
	0x03E8C110 ADRP X24, 0x55C000
	0x03E8C114 ADRP X23, 0x2E1000
	0x03E8C118 ADRP X20, 0x2E1000
	0x03E8C11C ADRP X22, 0x2E1000
	0x03E8C120 ADRP X21, 0x2E1000
	0x03E8C124 LDRB W8, [X24 + 0xE31]
	0x03E8C128 LDR X23, [X23 + 0x220]
	0x03E8C12C LDR X20, [X20 + 0x228]
	0x03E8C130 LDR X22, [X22 + 0x230]
	0x03E8C134 LDR X21, [X21 + 0x238]
	0x03E8C138 MOV X19, X0
	0x03E8C13C TBNZ X8, 0x0, 0x3E8C1B4
	0x03E8C140 ADRP X0, 0x2E1000
	0x03E8C144 LDR X0, [X0 + 0x240]
	0x03E8C148 BL 0x1C16CF4
	0x03E8C14C ADRP X0, 0x26E000

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X22, 0x55E000
	009 Move X21, 0x272000
	010 Move W8, [X22+3680]
	011 Move X21, [X21+2264]
	012 Move X20, X1
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {44}
	018 Move X0, 0x272000
	019 Move X0, [X0+2264]
	020 Call 0x1C17CF4
	021 Move X0, 0x270000
	022 Move X0, [X0+584]
	023 Call 0x1C17CF4
	024 Move X0, 0x2E2000
	025 Move X0, [X0+704]
	026 Call 0x1C17CF4
	027 Move X0, 0x2E3000
	028 Move X0, [X0+392]
	029 Call 0x1C17CF4
	030 Move X0, 0x2E3000
	031 Move X0, [X0+400]
	032 Call 0x1C17CF4
	033 Move X0, 0x2E3000
	034 Move X0, [X0+408]
	035 Call 0x1C17CF4
	036 Move X0, 0x2E3000
	037 Move X0, [X0+416]
	038 Call 0x1C17CF4
	039 Move X0, 0x2E3000
	040 Move X0, [X0+424]
	041 Call 0x1C17CF4
	042 Move W8, 1
	043 Move [X22+3680], W8
	044 Move X0, [X21]
	045 Move W1, 1
	046 Move [X31+8], X31
	047 Call 0x1C17D6C
	048 Compare X0, 0
	049 JumpIfEqual {196}
	050 Move W8, [X0+24]
	051 Move X1, X0
	052 Compare W8, 0
	053 JumpIfEqual {197}
	054 Move W8, 32
	055 NotImplemented "Instruction STRH not yet implemented."
	056 Compare X20, 0
	057 JumpIfEqual {196}
	058 Move W2, 3
	059 Move X0, X20
	060 Move X3, X31
	061 Call String.Split, X0, X1, X2
	062 Compare X0, 0
	063 JumpIfEqual {196}
	064 Move W8, [X0+24]
	065 NotImplemented "Instruction CMP not yet implemented."
	066 Move X8, [X19+56]
	067 Compare X8, 0
	068 JumpIfEqual {196}
	069 Move X9, 0x2E3000
	070 Move X9, [X9+424]
	071 Move X20, [X0+32]
	072 Compare X20, 0
	073 JumpIfEqual {196}
	074 Move W8, [X20+16]
	075 Compare W8, 0
	076 JumpIfEqual {144}
	077 Move X22, [X0+40]
	078 Compare X22, 0
	079 JumpIfEqual {196}
	080 Move W8, [X22+16]
	081 Compare W8, 0
	082 JumpIfEqual {154}
	083 Move X21, [X0+48]
	084 Compare X21, 0
	085 JumpIfEqual {196}
	086 Move W8, [X21+16]
	087 NotImplemented "Instruction CMP not yet implemented."
	088 Move X8, 0x2E3000
	089 Move X8, [X8+416]
	090 Move W2, 4
	091 Move X0, X21
	092 Move X3, X31
	093 Move X1, [X8]
	094 Call String.StartsWith, X0, X1, X2
	095 Move TEMP, X0
	096 And TEMP, TEMP, 1
	097 Compare TEMP, 1
	098 JumpIfNotEqual {149}
	099 Move W1, 5
	100 Move X0, X21
	101 Move X2, X31
	102 Call String.Substring, X0, X1
	103 Move X23, 0x26F000
	104 Move X23, [X23+584]
	105 Move X21, X0
	106 Move X8, [X23]
	107 Move W9, [X8+224]
	108 Compare W9, 0
	109 JumpIfNotEqual {112}
	110 Move X0, X8
	111 Call 0x1C17DFC
	112 Add X1, X31, 8
	113 Move X0, X21
	114 Move X2, X31
	115 Call Ext.TryCreateVersion, X0, X1
	116 Move TEMP, X0
	117 And TEMP, TEMP, 1
	118 Compare TEMP, 1
	119 JumpIfNotEqual {149}
	120 Move X24, 0x2E1000
	121 Move X24, [X24+704]
	122 Move X21, [X31+8]
	123 Move X0, [X24]
	124 Move W8, [X0+224]
	125 Compare W8, 0
	126 JumpIfNotEqual {129}
	127 Call 0x1C17DFC
	128 Move X0, [X24]
	129 Move X8, [X0+184]
	130 Move X0, X21
	131 Move X2, X31
	132 Move X1, [X8+8]
	133 Call Version.op_Inequality, X0, X1
	134 Move TEMP, X0
	135 And TEMP, TEMP, 1
	136 Compare TEMP, 1
	137 JumpIfNotEqual {169}
	138 Move X8, [X19+56]
	139 Compare X8, 0
	140 JumpIfEqual {196}
	141 Move X9, 0x2E2000
	142 Move X9, [X9+400]
	143 Move W10, 505
	144 Move X8, [X19+56]
	145 Compare X8, 0
	146 JumpIfEqual {196}
	147 Move X9, 0x2E2000
	148 Move X9, [X9+392]
	149 Move X8, [X19+56]
	150 Compare X8, 0
	151 JumpIfEqual {196}
	152 Move X9, 0x2E2000
	153 Move X9, [X9+400]
	154 Move X8, [X19+56]
	155 Compare X8, 0
	156 JumpIfEqual {196}
	157 Move X9, 0x2E2000
	158 Move X9, [X9+408]
	159 Move X9, [X9]
	160 Move [X8+24], X9
	161 Move X20, [X31+48]
	162 Move X19, [X31+56]
	163 Move X22, [X31+32]
	164 Move X21, [X31+40]
	165 Move X24, [X31+16]
	166 Move X23, [X31+24]
	167 Move X30, [X31+64]
	168 Return 
	169 Move X0, [X23]
	170 Move X21, [X31+8]
	171 Move W8, [X0+224]
	172 Compare W8, 0
	173 JumpIfNotEqual {175}
	174 Call 0x1C17DFC
	175 Move X0, X20
	176 Move X1, X21
	177 Move X2, X31
	178 Call Ext.IsHttpMethod, X0, X1
	179 Move TEMP, X0
	180 And TEMP, TEMP, 1
	181 Compare TEMP, 1
	182 JumpIfNotEqual {187}
	183 Move [X19+80], X20
	184 Move [X19+112], X22
	185 Move X8, [X31+8]
	186 Move [X19+96], X8
	187 Move X8, [X19+56]
	188 Compare X8, 0
	189 JumpIfEqual {196}
	190 Move X9, 0x2E2000
	191 Move X9, [X9+392]
	192 Move W10, 501
	193 Move X9, [X9]
	194 Move [X8+24], X9
	195 Move [X8+32], W10
	196 Call 0x1C17F20
	197 Call 0x1C17F28

Method: System.IAsyncResult BeginGetClientCertificate(System.AsyncCallback requestCallback, System.Object state)

Disassembly:
	0x03E90124 BL 0x1C16F10
	0x03E90128 MOV X1, X31
	0x03E9012C MOV X20, X0
	0x03E90130 BL 0x3663550
	0x03E90134 MOVZ W8, 0x2
	0x03E90138 STRB W31, [X20 + 0x68]
	0x03E9013C STR W8, [X20 + 0x6C]
	0x03E90140 STR X20, [X19 + 0x48]
	0x03E90144 MOV X0, X20
	0x03E90148 LDP X20, X19, [X31 + 0x10]
	0x03E9014C LDR X30, [X31], #0x20
	0x03E90150 RET
	0x03E90154 STR X30, [X31 - 0x20]!
	0x03E90158 STP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0x264000
	004 Move X0, [X0+2880]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X1, X31
	008 Move X19, X0
	009 Call NotSupportedException..ctor, X0
	010 Move X0, 0x2DE000
	011 Move X0, [X0+1048]
	012 Call 0x1C17D08
	013 Move X1, X0
	014 Move X0, X19
	015 Call 0x1C17DEC

Method: System.Security.Cryptography.X509Certificates.X509Certificate2 EndGetClientCertificate(System.IAsyncResult asyncResult)

Disassembly:
	0x03E9015C CBZ X1, 0x3E9016C
	0x03E90160 LDR W8, [X1 + 0x6C]
	0x03E90164 CMP W8, 0x2
	0x03E90168 B.NE 0x3E9017C
	0x03E9016C LDP X20, X19, [X31 + 0x10]
	0x03E90170 STR X1, [X0 + 0x48]
	0x03E90174 LDR X30, [X31], #0x20
	0x03E90178 RET
	0x03E9017C ADRP X0, 0x2DD000
	0x03E90180 LDR X0, [X0 + 0x480]
	0x03E90184 BL 0x1C16D08
	0x03E90188 MOV X19, X0
	0x03E9018C ADRP X0, 0x263000
	0x03E90190 LDR X0, [X0 + 0x5B0]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0x264000
	004 Move X0, [X0+2880]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X1, X31
	008 Move X19, X0
	009 Call NotSupportedException..ctor, X0
	010 Move X0, 0x2DE000
	011 Move X0, [X0+1056]
	012 Call 0x1C17D08
	013 Move X1, X0
	014 Move X0, X19
	015 Call 0x1C17DEC

Method: System.Security.Cryptography.X509Certificates.X509Certificate2 GetClientCertificate()

Disassembly:
	0x03E90194 BL 0x1C16D08
	0x03E90198 BL 0x1C16F10
	0x03E9019C MOV X1, X19
	0x03E901A0 MOV X2, X31
	0x03E901A4 MOV X20, X0
	0x03E901A8 BL 0x337DF1C
	0x03E901AC ADRP X0, 0x2DD000
	0x03E901B0 LDR X0, [X0 + 0x488]
	0x03E901B4 BL 0x1C16D08
	0x03E901B8 MOV X1, X0
	0x03E901BC MOV X0, X20
	0x03E901C0 BL 0x1C16DEC
	0x03E901C4 LDR W0, [X0 + 0x6C]
	0x03E901C8 RET

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0x264000
	004 Move X0, [X0+2880]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X1, X31
	008 Move X19, X0
	009 Call NotSupportedException..ctor, X0
	010 Move X0, 0x2DE000
	011 Move X0, [X0+1064]
	012 Call 0x1C17D08
	013 Move X1, X0
	014 Move X0, X19
	015 Call 0x1C17DEC

Method: System.String ToString()

Disassembly:
	0x03E901CC LDRB W0, [X0 + 0x51]
	0x03E901D0 RET
	0x03E901D4 STR X30, [X31 - 0x20]!
	0x03E901D8 STP X20, X19, [X31 + 0x10]
	0x03E901DC LDRB W8, [X0 + 0x40]
	0x03E901E0 CBNZ W8, 0x3E90200
	0x03E901E4 LDRB W8, [X0 + 0x50]
	0x03E901E8 CBNZ W8, 0x3E90248
	0x03E901EC LDP X20, X19, [X31 + 0x10]
	0x03E901F0 AND W8, W1, 0x1
	0x03E901F4 STRB W8, [X0 + 0x51]
	0x03E901F8 LDR X30, [X31], #0x20
	0x03E901FC RET
	0x03E90200 MOV X1, X31
	0x03E90204 BL 0x33BE520
	0x03E90208 MOV X19, X0
	0x03E9020C BL 0x19903C0
	0x03E90210 LDR X8, [X19]
	0x03E90214 MOV X0, X19
	0x03E90218 LDP X9, X1, [X8 + 0x168]
	0x03E9021C BLR X9
	0x03E90220 MOV X19, X0
	0x03E90224 ADRP X0, 0x28C000
	0x03E90228 LDR X0, [X0 + 0x4B8]
	0x03E9022C BL 0x1C16D08
	0x03E90230 BL 0x1C16F10
	0x03E90234 MOV X1, X19
	0x03E90238 MOV X2, X31
	0x03E9023C MOV X20, X0
	0x03E90240 BL 0x338C448
	0x03E90244 B 0x3E90278
	0x03E90248 ADRP X0, 0x2DD000
	0x03E9024C LDR X0, [X0 + 0x458]
	0x03E90250 BL 0x1C16D08
	0x03E90254 MOV X19, X0
	0x03E90258 ADRP X0, 0x263000
	0x03E9025C LDR X0, [X0 + 0x5B0]
	0x03E90260 BL 0x1C16D08
	0x03E90264 BL 0x1C16F10
	0x03E90268 MOV X1, X19
	0x03E9026C MOV X2, X31
	0x03E90270 MOV X20, X0
	0x03E90274 BL 0x337DF1C
	0x03E90278 ADRP X0, 0x2DD000
	0x03E9027C LDR X0, [X0 + 0x490]
	0x03E90280 BL 0x1C16D08
	0x03E90284 MOV X1, X0
	0x03E90288 MOV X0, X20
	0x03E9028C BL 0x1C16DEC
	0x03E90290 STR X30, [X31 - 0x20]!
	0x03E90294 STP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, 0x559000
	006 Move X21, 0x264000
	007 Move W8, [X19+3681]
	008 Move X21, [X21+2288]
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x264000
	015 Move X0, [X0+2288]
	016 Call 0x1C17CF4
	017 Move X0, 0x2DE000
	018 Move X0, [X0+1072]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X19+3681], W8
	022 Move X0, [X21]
	023 Call 0x1C17F10
	024 Move W1, 64
	025 Move X2, X31
	026 Move X19, X0
	027 Call StringBuilder..ctor, X0, X1
	028 Compare X19, 0
	029 JumpIfEqual {63}
	030 Move X8, 0x2DE000
	031 Move X8, [X8+1072]
	032 Move X4, [X20+96]
	033 Move X3, [X20+112]
	034 Move X2, [X20+80]
	035 Move X1, [X8]
	036 Move X0, X19
	037 Move X5, X31
	038 Call StringBuilder.AppendFormat, X0, X1, X2, X3, X4
	039 Move X8, [X20+72]
	040 Compare X8, 0
	041 JumpIfEqual {63}
	042 Move X9, [X8]
	043 Move X20, X0
	044 Move X0, X8
	045 Move X10, [X9+360]
	046 Move X1, [X9+368]
	047 NotImplemented "Instruction BLR not yet implemented."
	048 Compare X20, 0
	049 JumpIfEqual {63}
	050 Move X1, X0
	051 Move X0, X20
	052 Move X2, X31
	053 Call StringBuilder.Append, X0, X1
	054 Move X8, [X19]
	055 Move X0, X19
	056 Move X20, [X31+16]
	057 Move X19, [X31+24]
	058 Move X2, [X8+360]
	059 Move X1, [X8+368]
	060 Move X30, [X31+32]
	061 Move X21, [X31+40]
	062 CallNoReturn X2
	063 Call 0x1C17F20

