Type: WebSocketSharp.Net.HttpStreamAsyncResult

Method: System.Void .ctor(System.AsyncCallback callback, System.Object state)

Disassembly:
	0x03E928C0 LDR X0, [X0 + 0xAD8]
	0x03E928C4 BL 0x1C16CF4
	0x03E928C8 ADRP X0, 0x2DB000
	0x03E928CC LDR X0, [X0 + 0xAE0]
	0x03E928D0 BL 0x1C16CF4
	0x03E928D4 ADRP X0, 0x2DB000
	0x03E928D8 LDR X0, [X0 + 0xAE8]
	0x03E928DC BL 0x1C16CF4
	0x03E928E0 ADRP X0, 0x297000
	0x03E928E4 LDR X0, [X0 + 0xE88]
	0x03E928E8 BL 0x1C16CF4
	0x03E928EC ADRP X0, 0x2DB000
	0x03E928F0 LDR X0, [X0 + 0xAF0]
	0x03E928F4 BL 0x1C16CF4
	0x03E928F8 ADRP X0, 0x2DB000
	0x03E928FC LDR X0, [X0 + 0xAF8]
	0x03E92900 BL 0x1C16CF4
	0x03E92904 ADRP X0, 0x289000
	0x03E92908 LDR X0, [X0 + 0xF68]
	0x03E9290C BL 0x1C16CF4
	0x03E92910 ADRP X0, 0x2DB000
	0x03E92914 LDR X0, [X0 + 0xB00]
	0x03E92918 BL 0x1C16CF4
	0x03E9291C ADRP X0, 0x2DB000
	0x03E92920 LDR X0, [X0 + 0xB08]
	0x03E92924 BL 0x1C16CF4
	0x03E92928 ADRP X0, 0x2DB000
	0x03E9292C LDR X0, [X0 + 0xB10]
	0x03E92930 BL 0x1C16CF4
	0x03E92934 ADRP X0, 0x2DB000
	0x03E92938 LDR X0, [X0 + 0xB18]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x557000
	008 Move X22, 0x268000
	009 Move W8, [X23+3701]
	010 Move X22, [X22+3264]
	011 Move X20, X2
	012 Move X21, X1
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0x268000
	019 Move X0, [X0+3264]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X23+3701], W8
	023 Move X0, X19
	024 Move X1, X31
	025 Call Object..ctor, X0
	026 Move [X19+24], X21
	027 Move [X19+56], X20
	028 Move X0, [X22]
	029 Call 0x1C17F10
	030 Move X1, X31
	031 Move X20, X0
	032 Call Object..ctor, X0
	033 Move [X19+64], X20
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X30, [X31+48]
	039 Move X23, [X31+56]
	040 Return 

Method: System.Byte[] get_Buffer()

Disassembly:
	0x03E9293C BL 0x1C16CF4
	0x03E92940 ADRP X0, 0x2DB000

ISIL:
	001 Move X0, [X0+16]
	002 Return X0

Method: System.Void set_Buffer(System.Byte[] value)

Disassembly:
	0x03E92944 LDR X0, [X0 + 0xB20]
	0x03E92948 BL 0x1C16CF4

ISIL:
	001 Move [X0+16], X1
	002 Return 

Method: System.Int32 get_Count()

Disassembly:
	0x03E9294C ADRP X0, 0x2DB000
	0x03E92950 LDR X0, [X0 + 0xB28]

ISIL:
	001 Move W0, [X0+36]
	002 Return X0

Method: System.Void set_Count(System.Int32 value)

Disassembly:
	0x03E92954 BL 0x1C16CF4
	0x03E92958 ADRP X0, 0x2DB000

ISIL:
	001 Move [X0+36], W1
	002 Return 

Method: System.Exception get_Exception()

Disassembly:
	0x03E9295C LDR X0, [X0 + 0xB30]
	0x03E92960 BL 0x1C16CF4

ISIL:
	001 Move X0, [X0+40]
	002 Return X0

Method: System.Boolean get_HasException()

Disassembly:
	0x03E92964 ADRP X0, 0x2DB000
	0x03E92968 LDR X0, [X0 + 0xB38]
	0x03E9296C BL 0x1C16CF4
	0x03E92970 ADRP X0, 0x2DB000

ISIL:
	001 Move X8, [X0+40]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 NotImplemented "Instruction CSET not yet implemented."
	004 Return X0

Method: System.Int32 get_Offset()

Disassembly:
	0x03E92974 LDR X0, [X0 + 0xB40]
	0x03E92978 BL 0x1C16CF4

ISIL:
	001 Move W0, [X0+48]
	002 Return X0

Method: System.Void set_Offset(System.Int32 value)

Disassembly:
	0x03E9297C ADRP X0, 0x2DB000
	0x03E92980 LDR X0, [X0 + 0xB48]

ISIL:
	001 Move [X0+48], W1
	002 Return 

Method: System.Int32 get_SyncRead()

Disassembly:
	0x03E92984 BL 0x1C16CF4
	0x03E92988 ADRP X0, 0x2DB000

ISIL:
	001 Move W0, [X0+72]
	002 Return X0

Method: System.Void set_SyncRead(System.Int32 value)

Disassembly:
	0x03E9298C LDR X0, [X0 + 0xB50]
	0x03E92990 BL 0x1C16CF4

ISIL:
	001 Move [X0+72], W1
	002 Return 

Method: System.Object get_AsyncState()

Disassembly:
	0x03E92994 ADRP X0, 0x2DB000
	0x03E92998 LDR X0, [X0 + 0xB58]

ISIL:
	001 Move X0, [X0+56]
	002 Return X0

Method: System.Threading.WaitHandle get_AsyncWaitHandle()

Disassembly:
	0x03E9299C BL 0x1C16CF4
	0x03E929A0 ADRP X0, 0x2DB000
	0x03E929A4 LDR X0, [X0 + 0xB60]
	0x03E929A8 BL 0x1C16CF4
	0x03E929AC ADRP X0, 0x2DB000
	0x03E929B0 LDR X0, [X0 + 0xB68]
	0x03E929B4 BL 0x1C16CF4
	0x03E929B8 ADRP X0, 0x2DB000
	0x03E929BC LDR X0, [X0 + 0xB70]
	0x03E929C0 BL 0x1C16CF4
	0x03E929C4 ADRP X0, 0x2DB000
	0x03E929C8 LDR X0, [X0 + 0xB78]
	0x03E929CC BL 0x1C16CF4
	0x03E929D0 ADRP X0, 0x2DB000
	0x03E929D4 LDR X0, [X0 + 0xB80]
	0x03E929D8 BL 0x1C16CF4
	0x03E929DC ADRP X0, 0x2DB000
	0x03E929E0 LDR X0, [X0 + 0xB88]
	0x03E929E4 BL 0x1C16CF4
	0x03E929E8 ADRP X0, 0x2DB000
	0x03E929EC LDR X0, [X0 + 0xB90]
	0x03E929F0 BL 0x1C16CF4
	0x03E929F4 ADRP X0, 0x2DB000
	0x03E929F8 LDR X0, [X0 + 0xB98]
	0x03E929FC BL 0x1C16CF4
	0x03E92A00 ADRP X0, 0x2DB000
	0x03E92A04 LDR X0, [X0 + 0xBA0]
	0x03E92A08 BL 0x1C16CF4
	0x03E92A0C ADRP X0, 0x2DB000
	0x03E92A10 LDR X0, [X0 + 0xBA8]
	0x03E92A14 BL 0x1C16CF4
	0x03E92A18 ADRP X0, 0x2DB000
	0x03E92A1C LDR X0, [X0 + 0xBB0]
	0x03E92A20 BL 0x1C16CF4
	0x03E92A24 ADRP X0, 0x2DB000
	0x03E92A28 LDR X0, [X0 + 0xBB8]
	0x03E92A2C BL 0x1C16CF4
	0x03E92A30 ADRP X0, 0x2DB000
	0x03E92A34 LDR X0, [X0 + 0xBC0]
	0x03E92A38 BL 0x1C16CF4
	0x03E92A3C ADRP X0, 0x2DB000
	0x03E92A40 LDR X0, [X0 + 0xBC8]
	0x03E92A44 BL 0x1C16CF4
	0x03E92A48 ADRP X0, 0x297000
	0x03E92A4C LDR X0, [X0 + 0xED0]
	0x03E92A50 BL 0x1C16CF4
	0x03E92A54 ADRP X0, 0x2DB000
	0x03E92A58 LDR X0, [X0 + 0xBD0]
	0x03E92A5C BL 0x1C16CF4
	0x03E92A60 ADRP X0, 0x2DB000
	0x03E92A64 LDR X0, [X0 + 0xBD8]
	0x03E92A68 BL 0x1C16CF4
	0x03E92A6C ADRP X0, 0x2DB000
	0x03E92A70 LDR X0, [X0 + 0xBE0]
	0x03E92A74 BL 0x1C16CF4
	0x03E92A78 ADRP X0, 0x2DB000
	0x03E92A7C LDR X0, [X0 + 0xBE8]
	0x03E92A80 BL 0x1C16CF4
	0x03E92A84 ADRP X0, 0x2DB000
	0x03E92A88 LDR X0, [X0 + 0xBF0]
	0x03E92A8C BL 0x1C16CF4
	0x03E92A90 ADRP X0, 0x2DB000
	0x03E92A94 LDR X0, [X0 + 0xBF8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, 0x557000
	007 Move W8, [X19+3702]
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x293000
	014 Move X0, [X0+1992]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X19+3702], W8
	018 Move X19, [X20+64]
	019 Move X1, X31
	020 Move X0, X19
	021 Call Monitor.Enter, X0
	022 Move X21, [X20+80]
	023 Compare X21, 0
	024 JumpIfNotEqual {36}
	025 Move X8, 0x293000
	026 Move W22, [X20+32]
	027 Move X8, [X8+1992]
	028 Move X0, [X8]
	029 Call 0x1C17F10
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move X21, X0
	032 NotImplemented "Instruction CSET not yet implemented."
	033 Move X2, X31
	034 Call ManualResetEvent..ctor, X0, X1
	035 Move [X20+80], X21
	036 Move X0, X19
	037 Move X1, X31
	038 Call Monitor.Exit, X0
	039 Move X0, X21
	040 Move X20, [X31+32]
	041 Move X19, [X31+40]
	042 Move X22, [X31+16]
	043 Move X21, [X31+24]
	044 Move X30, [X31+48]
	045 Return X0
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Move X21, X0
	048 Move X0, X21
	049 Call 0x3EB2AD0
	050 Move X20, [X0]
	051 Call 0x3EB2AE0
	052 Move X0, X19
	053 Move X1, X31
	054 Call Monitor.Exit, X0
	055 Move X21, X31
	056 Compare X20, 0
	057 JumpIfEqual {39}
	058 Move X0, X20
	059 Call 0x1C17F18
	060 Move X20, X31
	061 Move X21, X0
	062 Move X0, X19
	063 Move X1, X31
	064 Call Monitor.Exit, X0
	065 Compare X20, 0
	066 JumpIfNotEqual {69}
	067 Move X0, X21
	068 Call 0x1D2D690
	069 Move X0, X20
	070 Call 0x1C17F18
	071 Call 0x1991590

Method: System.Boolean get_CompletedSynchronously()

Disassembly:
	0x03E92A98 BL 0x1C16CF4
	0x03E92A9C ADRP X0, 0x2DB000
	0x03E92AA0 LDR X0, [X0 + 0xC00]
	0x03E92AA4 BL 0x1C16CF4
	0x03E92AA8 ADRP X0, 0x2DB000

ISIL:
	001 Move W8, [X0+72]
	002 Move W9, [X0+36]
	003 NotImplemented "Instruction CMP not yet implemented."
	004 NotImplemented "Instruction CSET not yet implemented."
	005 Return X0

Method: System.Boolean get_IsCompleted()

Disassembly:
	0x03E92AAC LDR X0, [X0 + 0xC08]
	0x03E92AB0 BL 0x1C16CF4
	0x03E92AB4 ADRP X0, 0x2DB000
	0x03E92AB8 LDR X0, [X0 + 0xC10]
	0x03E92ABC BL 0x1C16CF4
	0x03E92AC0 ADRP X0, 0x2DB000
	0x03E92AC4 LDR X0, [X0 + 0xC18]
	0x03E92AC8 BL 0x1C16CF4
	0x03E92ACC ADRP X0, 0x2DB000
	0x03E92AD0 LDR X0, [X0 + 0xC20]
	0x03E92AD4 BL 0x1C16CF4
	0x03E92AD8 ADRP X0, 0x2DB000
	0x03E92ADC LDR X0, [X0 + 0xC28]
	0x03E92AE0 BL 0x1C16CF4
	0x03E92AE4 ADRP X0, 0x2DB000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, [X0+64]
	005 Move X19, X0
	006 Move X1, X31
	007 Move X0, X20
	008 Call Monitor.Enter, X0
	009 Move W19, [X19+32]
	010 Move X0, X20
	011 Move X1, X31
	012 Call Monitor.Exit, X0
	013 Move W0, W19
	014 Move X20, [X31+16]
	015 Move X19, [X31+24]
	016 Move X30, [X31+32]
	017 Return X0

Method: System.Void Complete()

Disassembly:
	0x03E92AE8 LDR X0, [X0 + 0xC30]
	0x03E92AEC BL 0x1C16CF4
	0x03E92AF0 ADRP X0, 0x2DB000
	0x03E92AF4 LDR X0, [X0 + 0xC38]
	0x03E92AF8 BL 0x1C16CF4
	0x03E92AFC ADRP X0, 0x2A3000
	0x03E92B00 LDR X0, [X0 + 0x7C8]
	0x03E92B04 BL 0x1C16CF4
	0x03E92B08 ADRP X0, 0x2DB000
	0x03E92B0C LDR X0, [X0 + 0xC40]
	0x03E92B10 BL 0x1C16CF4
	0x03E92B14 ADRP X0, 0x2DB000
	0x03E92B18 LDR X0, [X0 + 0xC48]
	0x03E92B1C BL 0x1C16CF4
	0x03E92B20 ADRP X0, 0x2DB000
	0x03E92B24 LDR X0, [X0 + 0xC50]
	0x03E92B28 BL 0x1C16CF4
	0x03E92B2C ADRP X0, 0x2DB000
	0x03E92B30 LDR X0, [X0 + 0xC58]
	0x03E92B34 BL 0x1C16CF4
	0x03E92B38 ADRP X0, 0x2DB000
	0x03E92B3C LDR X0, [X0 + 0xC60]
	0x03E92B40 BL 0x1C16CF4
	0x03E92B44 ADRP X0, 0x2DB000
	0x03E92B48 LDR X0, [X0 + 0xC68]
	0x03E92B4C BL 0x1C16CF4
	0x03E92B50 ADRP X0, 0x2DB000
	0x03E92B54 LDR X0, [X0 + 0xC70]
	0x03E92B58 BL 0x1C16CF4
	0x03E92B5C ADRP X0, 0x2DB000
	0x03E92B60 LDR X0, [X0 + 0xC78]
	0x03E92B64 BL 0x1C16CF4
	0x03E92B68 ADRP X0, 0x2DB000
	0x03E92B6C LDR X0, [X0 + 0xC80]
	0x03E92B70 BL 0x1C16CF4
	0x03E92B74 ADRP X0, 0x2DB000
	0x03E92B78 LDR X0, [X0 + 0xC88]
	0x03E92B7C BL 0x1C16CF4
	0x03E92B80 ADRP X0, 0x2DB000
	0x03E92B84 LDR X0, [X0 + 0xC90]
	0x03E92B88 BL 0x1C16CF4
	0x03E92B8C ADRP X0, 0x2DB000
	0x03E92B90 LDR X0, [X0 + 0xC98]
	0x03E92B94 BL 0x1C16CF4
	0x03E92B98 ADRP X0, 0x2DB000
	0x03E92B9C LDR X0, [X0 + 0xCA0]
	0x03E92BA0 BL 0x1C16CF4
	0x03E92BA4 ADRP X0, 0x2DB000
	0x03E92BA8 LDR X0, [X0 + 0xCA8]
	0x03E92BAC BL 0x1C16CF4
	0x03E92BB0 ADRP X0, 0x2DB000
	0x03E92BB4 LDR X0, [X0 + 0xCB0]
	0x03E92BB8 BL 0x1C16CF4
	0x03E92BBC ADRP X0, 0x2DB000
	0x03E92BC0 LDR X0, [X0 + 0xCB8]
	0x03E92BC4 BL 0x1C16CF4
	0x03E92BC8 MOVZ W8, 0x1
	0x03E92BCC STRB W8, [X21 + 0xE7F]
	0x03E92BD0 LDR X0, [X22]
	0x03E92BD4 BL 0x1C16F10
	0x03E92BD8 LDR X1, [X19]
	0x03E92BDC MOV X19, X0
	0x03E92BE0 BL 0x2A92360
	0x03E92BE4 LDR X0, [X20]
	0x03E92BE8 LDR W8, [X0 + 0xE0]
	0x03E92BEC CBNZ W8, 0x3E92BF8
	0x03E92BF0 BL 0x1C16DFC
	0x03E92BF4 LDR X0, [X20]
	0x03E92BF8 LDR X8, [X0 + 0xB8]
	0x03E92BFC STR X19, [X8]
	0x03E92C00 LDR X8, [X20]
	0x03E92C04 LDR X8, [X8 + 0xB8]
	0x03E92C08 LDR X0, [X8]
	0x03E92C0C CBZ X0, 0x3E95374
	0x03E92C10 ADRP X8, 0x2DB000
	0x03E92C14 ADRP X19, 0x2DB000
	0x03E92C18 LDR X8, [X8 + 0x848]
	0x03E92C1C LDR X19, [X19 + 0x558]
	0x03E92C20 MOVZ W2, 0xA0
	0x03E92C24 LDR X1, [X8]
	0x03E92C28 LDR X3, [X19]
	0x03E92C2C BL 0x2A92BF8
	0x03E92C30 LDR X8, [X20]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, 0x557000
	007 Move W8, [X19+3703]
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0x28A000
	014 Move X0, [X0+1824]
	015 Call 0x1C17CF4
	016 Move X0, 0x2DC000
	017 Move X0, [X0+1336]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X19+3703], W8
	021 Move X19, [X20+64]
	022 Move X1, X31
	023 Move X0, X19
	024 Call Monitor.Enter, X0
	025 Move W8, [X20+32]
	026 Compare W8, 0
	027 JumpIfNotEqual {55}
	028 Move X0, [X20+80]
	029 Move W8, 1
	030 Move [X20+32], W8
	031 Compare X0, 0
	032 JumpIfEqual {35}
	033 Move X1, X31
	034 Call EventWaitHandle.Set, X0
	035 Move X21, [X20+24]
	036 Compare X21, 0
	037 JumpIfEqual {55}
	038 Move X8, 0x28A000
	039 Move X8, [X8+1824]
	040 Move X0, [X8]
	041 Call 0x1C17F10
	042 Move X8, 0x2DC000
	043 Move X8, [X8+1336]
	044 Move X22, X0
	045 Move X2, [X8]
	046 Move X1, X20
	047 Move X3, X31
	048 Call AsyncCallback..ctor, X0, X1, X2
	049 Move X0, X21
	050 Move X1, X20
	051 Move X2, X22
	052 Move X3, X31
	053 Move X4, X31
	054 Call AsyncCallback.BeginInvoke, X0, X1, X2, X3
	055 Move X0, X19
	056 Move X20, [X31+32]
	057 Move X19, [X31+40]
	058 Move X22, [X31+16]
	059 Move X21, [X31+24]
	060 Move X1, X31
	061 Move X30, [X31+48]
	062 Call Monitor.Exit, X0
	063 Return 
	064 Move X20, X0
	065 NotImplemented "Instruction CMP not yet implemented."
	066 Move X0, X20
	067 Call 0x3EB2AD0
	068 Move X21, [X0]
	069 Call 0x3EB2AE0
	070 Move X0, X19
	071 Move X1, X31
	072 Call Monitor.Exit, X0
	073 Compare X21, 0
	074 JumpIfNotEqual {82}
	075 Move X20, [X31+32]
	076 Move X19, [X31+40]
	077 Move X22, [X31+16]
	078 Move X21, [X31+24]
	079 Move X30, [X31+48]
	080 Return 
	081 Move X21, X31
	082 Move X0, X21
	083 Call 0x1C17F18
	084 Move X20, X0
	085 Move X0, X19
	086 Move X1, X31
	087 Call Monitor.Exit, X0
	088 Compare X21, 0
	089 JumpIfNotEqual {92}
	090 Move X0, X20
	091 Call 0x1D2D690
	092 Move X0, X21
	093 Call 0x1C17F18
	094 Call 0x1991590

Method: System.Void Complete(System.Exception exception)

Disassembly:
	0x03E92C34 LDR X8, [X8 + 0xB8]
	0x03E92C38 LDR X0, [X8]
	0x03E92C3C CBZ X0, 0x3E95374
	0x03E92C40 ADRP X8, 0x2DB000
	0x03E92C44 LDR X8, [X8 + 0x7A0]
	0x03E92C48 LDR X3, [X19]
	0x03E92C4C MOVZ W2, 0xA1
	0x03E92C50 LDR X1, [X8]
	0x03E92C54 BL 0x2A92BF8
	0x03E92C58 LDR X8, [X20]
	0x03E92C5C LDR X8, [X8 + 0xB8]
	0x03E92C60 LDR X0, [X8]
	0x03E92C64 CBZ X0, 0x3E95374
	0x03E92C68 ADRP X8, 0x2DB000
	0x03E92C6C LDR X8, [X8 + 0x8B0]
	0x03E92C70 LDR X3, [X19]
	0x03E92C74 MOVZ W2, 0xA2
	0x03E92C78 LDR X1, [X8]
	0x03E92C7C BL 0x2A92BF8
	0x03E92C80 LDR X8, [X20]
	0x03E92C84 LDR X8, [X8 + 0xB8]
	0x03E92C88 LDR X0, [X8]
	0x03E92C8C CBZ X0, 0x3E95374
	0x03E92C90 ADRP X8, 0x2DB000
	0x03E92C94 LDR X8, [X8 + 0x718]
	0x03E92C98 LDR X3, [X19]
	0x03E92C9C MOVZ W2, 0xA3
	0x03E92CA0 LDR X1, [X8]
	0x03E92CA4 BL 0x2A92BF8
	0x03E92CA8 LDR X8, [X20]
	0x03E92CAC LDR X8, [X8 + 0xB8]
	0x03E92CB0 LDR X0, [X8]
	0x03E92CB4 CBZ X0, 0x3E95374
	0x03E92CB8 ADRP X8, 0x2DB000
	0x03E92CBC LDR X8, [X8 + 0xA10]
	0x03E92CC0 LDR X3, [X19]
	0x03E92CC4 MOVZ W2, 0xA4
	0x03E92CC8 LDR X1, [X8]
	0x03E92CCC BL 0x2A92BF8
	0x03E92CD0 LDR X8, [X20]
	0x03E92CD4 LDR X8, [X8 + 0xB8]
	0x03E92CD8 LDR X0, [X8]
	0x03E92CDC CBZ X0, 0x3E95374
	0x03E92CE0 ADRP X8, 0x2DB000
	0x03E92CE4 LDR X8, [X8 + 0xA68]
	0x03E92CE8 LDR X3, [X19]
	0x03E92CEC MOVZ W2, 0xA5
	0x03E92CF0 LDR X1, [X8]
	0x03E92CF4 BL 0x2A92BF8
	0x03E92CF8 LDR X8, [X20]
	0x03E92CFC LDR X8, [X8 + 0xB8]
	0x03E92D00 LDR X0, [X8]
	0x03E92D04 CBZ X0, 0x3E95374
	0x03E92D08 ADRP X8, 0x2DB000
	0x03E92D0C LDR X8, [X8 + 0xAC8]
	0x03E92D10 LDR X3, [X19]
	0x03E92D14 MOVZ W2, 0xA6
	0x03E92D18 LDR X1, [X8]
	0x03E92D1C BL 0x2A92BF8
	0x03E92D20 LDR X8, [X20]
	0x03E92D24 LDR X8, [X8 + 0xB8]
	0x03E92D28 LDR X0, [X8]
	0x03E92D2C CBZ X0, 0x3E95374
	0x03E92D30 ADRP X8, 0x2DB000
	0x03E92D34 LDR X8, [X8 + 0x730]
	0x03E92D38 LDR X3, [X19]
	0x03E92D3C MOVZ W2, 0xA7
	0x03E92D40 LDR X1, [X8]
	0x03E92D44 BL 0x2A92BF8
	0x03E92D48 LDR X8, [X20]
	0x03E92D4C LDR X8, [X8 + 0xB8]
	0x03E92D50 LDR X0, [X8]
	0x03E92D54 CBZ X0, 0x3E95374
	0x03E92D58 ADRP X8, 0x2DB000
	0x03E92D5C LDR X8, [X8 + 0x6C8]
	0x03E92D60 LDR X3, [X19]
	0x03E92D64 MOVZ W2, 0xA8
	0x03E92D68 LDR X1, [X8]
	0x03E92D6C BL 0x2A92BF8
	0x03E92D70 LDR X8, [X20]
	0x03E92D74 LDR X8, [X8 + 0xB8]
	0x03E92D78 LDR X0, [X8]
	0x03E92D7C CBZ X0, 0x3E95374
	0x03E92D80 ADRP X8, 0x2DB000
	0x03E92D84 LDR X8, [X8 + 0x888]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, 0x557000
	007 Move W8, [X19+3704]
	008 Move X21, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x28A000
	015 Move X0, [X0+1824]
	016 Call 0x1C17CF4
	017 Move X0, 0x2DC000
	018 Move X0, [X0+1344]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X19+3704], W8
	022 Move X19, [X20+64]
	023 Move X1, X31
	024 Move X0, X19
	025 Call Monitor.Enter, X0
	026 Move W8, [X20+32]
	027 Compare W8, 0
	028 JumpIfNotEqual {57}
	029 Move X0, [X20+80]
	030 Move W8, 1
	031 Move [X20+32], W8
	032 Move [X20+40], X21
	033 Compare X0, 0
	034 JumpIfEqual {37}
	035 Move X1, X31
	036 Call EventWaitHandle.Set, X0
	037 Move X21, [X20+24]
	038 Compare X21, 0
	039 JumpIfEqual {57}
	040 Move X8, 0x28A000
	041 Move X8, [X8+1824]
	042 Move X0, [X8]
	043 Call 0x1C17F10
	044 Move X8, 0x2DC000
	045 Move X8, [X8+1344]
	046 Move X22, X0
	047 Move X2, [X8]
	048 Move X1, X20
	049 Move X3, X31
	050 Call AsyncCallback..ctor, X0, X1, X2
	051 Move X0, X21
	052 Move X1, X20
	053 Move X2, X22
	054 Move X3, X31
	055 Move X4, X31
	056 Call AsyncCallback.BeginInvoke, X0, X1, X2, X3
	057 Move X0, X19
	058 Move X20, [X31+32]
	059 Move X19, [X31+40]
	060 Move X22, [X31+16]
	061 Move X21, [X31+24]
	062 Move X1, X31
	063 Move X30, [X31+48]
	064 Call Monitor.Exit, X0
	065 Return 
	066 Move X20, X0
	067 NotImplemented "Instruction CMP not yet implemented."
	068 Move X0, X20
	069 Call 0x3EB2AD0
	070 Move X21, [X0]
	071 Call 0x3EB2AE0
	072 Move X0, X19
	073 Move X1, X31
	074 Call Monitor.Exit, X0
	075 Compare X21, 0
	076 JumpIfNotEqual {84}
	077 Move X20, [X31+32]
	078 Move X19, [X31+40]
	079 Move X22, [X31+16]
	080 Move X21, [X31+24]
	081 Move X30, [X31+48]
	082 Return 
	083 Move X21, X31
	084 Move X0, X21
	085 Call 0x1C17F18
	086 Move X20, X0
	087 Move X0, X19
	088 Move X1, X31
	089 Call Monitor.Exit, X0
	090 Compare X21, 0
	091 JumpIfNotEqual {94}
	092 Move X0, X20
	093 Call 0x1D2D690
	094 Move X0, X21
	095 Call 0x1C17F18
	096 Call 0x1991590

Method: System.Void <Complete>b__35_0(System.IAsyncResult ar)

Disassembly:
	0x03E92D88 LDR X3, [X19]
	0x03E92D8C MOVZ W2, 0xA9
	0x03E92D90 LDR X1, [X8]
	0x03E92D94 BL 0x2A92BF8
	0x03E92D98 LDR X8, [X20]
	0x03E92D9C LDR X8, [X8 + 0xB8]
	0x03E92DA0 LDR X0, [X8]

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+24]
	003 Compare X0, 0
	004 JumpIfEqual {9}
	005 Move X2, X31
	006 Move X30, [X31+16]
	007 Call AsyncCallback.EndInvoke, X0, X1
	008 Return 
	009 Call 0x1C17F20

Method: System.Void <Complete>b__36_0(System.IAsyncResult ar)

Disassembly:
	0x03E92DA4 CBZ X0, 0x3E95374
	0x03E92DA8 ADRP X8, 0x2DB000
	0x03E92DAC LDR X8, [X8 + 0x838]
	0x03E92DB0 LDR X3, [X19]
	0x03E92DB4 MOVZ W2, 0xAA
	0x03E92DB8 LDR X1, [X8]
	0x03E92DBC BL 0x2A92BF8

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+24]
	003 Compare X0, 0
	004 JumpIfEqual {9}
	005 Move X2, X31
	006 Move X30, [X31+16]
	007 Call AsyncCallback.EndInvoke, X0, X1
	008 Return 
	009 Call 0x1C17F20

