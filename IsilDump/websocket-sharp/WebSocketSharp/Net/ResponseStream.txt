Type: WebSocketSharp.Net.ResponseStream

Method: System.Void .cctor()

Disassembly:
	0x03E9A41C MOVZ W9, 0x1
	0x03E9A420 STRB W9, [X8 + 0x10]
	0x03E9A424 LDRB W8, [X19 + 0x48]
	0x03E9A428 CBZ W8, 0x3E9A470
	0x03E9A42C ADRP X21, 0x2D3000
	0x03E9A430 LDR X21, [X21 + 0x1F8]
	0x03E9A434 LDR X20, [X19 + 0x50]
	0x03E9A438 LDR X0, [X21]
	0x03E9A43C LDR W8, [X0 + 0xE0]
	0x03E9A440 CBNZ W8, 0x3E9A448
	0x03E9A444 BL 0x1C16DFC
	0x03E9A448 CBZ X20, 0x3E9A4AC
	0x03E9A44C LDR X8, [X21]
	0x03E9A450 LDR X9, [X20 + 0x18]
	0x03E9A454 LDR X0, [X20 + 0x40]
	0x03E9A458 LDR X4, [X20 + 0x28]
	0x03E9A45C LDR X8, [X8 + 0xB8]
	0x03E9A460 MOVZ W3, 0x5
	0x03E9A464 MOV W2, W31
	0x03E9A468 LDR X1, [X8 + 0x8]
	0x03E9A46C BLR X9
	0x03E9A470 LDR X0, [X19 + 0x28]
	0x03E9A474 CBZ X0, 0x3E9A4AC
	0x03E9A478 MOV X1, X31
	0x03E9A47C BL 0x32F02B8
	0x03E9A480 LDR X0, [X19 + 0x40]
	0x03E9A484 CBZ X0, 0x3E9A4AC
	0x03E9A488 LDRB W8, [X0 + 0x40]
	0x03E9A48C CBNZ W8, 0x3E9A498
	0x03E9A490 MOVZ W1, 0x1
	0x03E9A494 BL 0x3E90C14
	0x03E9A498 STR X31, [X19 + 0x28]
	0x03E9A49C STP X31, X31, [X19 + 0x38]
	0x03E9A4A0 LDP X20, X19, [X31 + 0x10]
	0x03E9A4A4 LDP X30, X21, [X31], #0x20
	0x03E9A4A8 RET
	0x03E9A4AC BL 0x1C16F20
	0x03E9A4B0 STR X30, [X31 - 0x10]!
	0x03E9A4B4 LDR X8, [X0 + 0x50]
	0x03E9A4B8 CBZ X8, 0x3E9A4D0
	0x03E9A4BC LDR X5, [X8 + 0x18]
	0x03E9A4C0 LDR X0, [X8 + 0x40]
	0x03E9A4C4 LDR X4, [X8 + 0x28]
	0x03E9A4C8 LDR X30, [X31], #0x10
	0x03E9A4CC BR X5
	0x03E9A4D0 BL 0x1C16F20
	0x03E9A4D4 STP X30, X19, [X31 - 0x10]!
	0x03E9A4D8 ADRP X0, 0x259000
	0x03E9A4DC LDR X0, [X0 + 0xB40]
	0x03E9A4E0 BL 0x1C16D08
	0x03E9A4E4 BL 0x1C16F10
	0x03E9A4E8 MOV X1, X31
	0x03E9A4EC MOV X19, X0
	0x03E9A4F0 BL 0x3380310

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x54F000
	005 Move X19, 0x25A000
	006 Move W8, [X20+3743]
	007 Move X19, [X19+1560]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {23}
	012 Move X0, 0x25A000
	013 Move X0, [X0+1560]
	014 Call 0x1C17CF4
	015 Move X0, 0x2D4000
	016 Move X0, [X0+504]
	017 Call 0x1C17CF4
	018 Move X0, 0x2D4000
	019 Move X0, [X0+3592]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X20+3743], W8
	023 Move X0, [X19]
	024 Move W1, 2
	025 Call 0x1C17D6C
	026 Compare X0, 0
	027 JumpIfEqual {60}
	028 Move W8, [X0+24]
	029 Compare W8, 0
	030 JumpIfEqual {59}
	031 Move W9, 13
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move [X0+32], W9
	034 Move X20, 0x2D4000
	035 Move X20, [X20+504]
	036 Move W8, 10
	037 Move [X0+33], W8
	038 Move W1, 5
	039 Move X8, [X20]
	040 Move X8, [X8+184]
	041 Move [X8], X0
	042 Move X0, [X19]
	043 Move X19, 0x2D4000
	044 Move X19, [X19+3592]
	045 Call 0x1C17D6C
	046 Move X1, [X19]
	047 Move X2, X31
	048 Move X19, X0
	049 Call RuntimeHelpers.InitializeArray, X0, X1
	050 Move X8, [X20]
	051 Move W9, 0x8000
	052 Move X8, [X8+184]
	053 Move [X8+8], X19
	054 Move X20, [X31+16]
	055 Move X19, [X31+24]
	056 Move [X8+16], W9
	057 Move X30, [X31+32]
	058 Return 
	059 Call 0x1C17F28
	060 Call 0x1C17F20

Method: System.Void .ctor(System.IO.Stream innerStream, WebSocketSharp.Net.HttpListenerResponse response, System.Boolean ignoreWriteExceptions)

Disassembly:
	0x03E9A4F4 ADRP X0, 0x2D3000
	0x03E9A4F8 LDR X0, [X0 + 0xE58]
	0x03E9A4FC BL 0x1C16D08
	0x03E9A500 MOV X1, X0
	0x03E9A504 MOV X0, X19
	0x03E9A508 BL 0x1C16DEC
	0x03E9A50C STR X30, [X31 - 0x20]!
	0x03E9A510 STP X20, X19, [X31 + 0x10]
	0x03E9A514 LDRB W8, [X0 + 0x30]
	0x03E9A518 CBNZ W8, 0x3E9A53C
	0x03E9A51C LDR X0, [X0 + 0x28]
	0x03E9A520 CBZ X0, 0x3E9A598
	0x03E9A524 LDR X8, [X0]
	0x03E9A528 LDP X20, X19, [X31 + 0x10]
	0x03E9A52C LDR X7, [X8 + 0x2F8]
	0x03E9A530 LDR X6, [X8 + 0x300]
	0x03E9A534 LDR X30, [X31], #0x20
	0x03E9A538 BR X7
	0x03E9A53C MOV X1, X31
	0x03E9A540 BL 0x33BE520
	0x03E9A544 MOV X19, X0
	0x03E9A548 BL 0x19903C0
	0x03E9A54C LDR X8, [X19]
	0x03E9A550 MOV X0, X19
	0x03E9A554 LDP X9, X1, [X8 + 0x168]
	0x03E9A558 BLR X9
	0x03E9A55C MOV X19, X0
	0x03E9A560 ADRP X0, 0x282000
	0x03E9A564 LDR X0, [X0 + 0x4B8]
	0x03E9A568 BL 0x1C16D08
	0x03E9A56C BL 0x1C16F10
	0x03E9A570 MOV X1, X19
	0x03E9A574 MOV X2, X31
	0x03E9A578 MOV X20, X0
	0x03E9A57C BL 0x338C448
	0x03E9A580 ADRP X0, 0x2D3000
	0x03E9A584 LDR X0, [X0 + 0xE60]
	0x03E9A588 BL 0x1C16D08
	0x03E9A58C MOV X1, X0
	0x03E9A590 MOV X0, X20
	0x03E9A594 BL 0x1C16DEC
	0x03E9A598 BL 0x1C16F20
	0x03E9A59C MOV W1, W31
	0x03E9A5A0 B 0x3E9A3A8
	0x03E9A5A4 ORN W8, W31, W1, 0x0
	0x03E9A5A8 AND W1, W8, 0x1
	0x03E9A5AC B 0x3E9A3A8
	0x03E9A5B0 STP X30, X19, [X31 - 0x10]!
	0x03E9A5B4 ADRP X0, 0x259000
	0x03E9A5B8 LDR X0, [X0 + 0xB40]
	0x03E9A5BC BL 0x1C16D08
	0x03E9A5C0 BL 0x1C16F10
	0x03E9A5C4 MOV X1, X31
	0x03E9A5C8 MOV X19, X0
	0x03E9A5CC BL 0x3380310
	0x03E9A5D0 ADRP X0, 0x2D3000
	0x03E9A5D4 LDR X0, [X0 + 0xE68]
	0x03E9A5D8 BL 0x1C16D08
	0x03E9A5DC MOV X1, X0
	0x03E9A5E0 MOV X0, X19
	0x03E9A5E4 BL 0x1C16DEC
	0x03E9A5E8 STR X30, [X31 - 0x20]!
	0x03E9A5EC STP X20, X19, [X31 + 0x10]
	0x03E9A5F0 LDRB W8, [X0 + 0x30]
	0x03E9A5F4 CBNZ W8, 0x3E9A618
	0x03E9A5F8 LDR X0, [X0 + 0x28]
	0x03E9A5FC CBZ X0, 0x3E9A674
	0x03E9A600 LDR X8, [X0]
	0x03E9A604 LDP X20, X19, [X31 + 0x10]
	0x03E9A608 LDR X3, [X8 + 0x308]
	0x03E9A60C LDR X2, [X8 + 0x310]
	0x03E9A610 LDR X30, [X31], #0x20
	0x03E9A614 BR X3
	0x03E9A618 MOV X1, X31
	0x03E9A61C BL 0x33BE520
	0x03E9A620 MOV X19, X0
	0x03E9A624 BL 0x19903C0
	0x03E9A628 LDR X8, [X19]
	0x03E9A62C MOV X0, X19
	0x03E9A630 LDP X9, X1, [X8 + 0x168]
	0x03E9A634 BLR X9
	0x03E9A638 MOV X19, X0
	0x03E9A63C ADRP X0, 0x282000
	0x03E9A640 LDR X0, [X0 + 0x4B8]
	0x03E9A644 BL 0x1C16D08
	0x03E9A648 BL 0x1C16F10
	0x03E9A64C MOV X1, X19
	0x03E9A650 MOV X2, X31
	0x03E9A654 MOV X20, X0
	0x03E9A658 BL 0x338C448
	0x03E9A65C ADRP X0, 0x2D3000
	0x03E9A660 LDR X0, [X0 + 0xE70]
	0x03E9A664 BL 0x1C16D08

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0x54F000
	009 Move X23, 0x289000
	010 Move W8, [X24+3744]
	011 Move X23, [X23+3344]
	012 Move W21, W3
	013 Move X22, X2
	014 Move X20, X1
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {40}
	020 Move X0, 0x2D4000
	021 Move X0, [X0+3600]
	022 Call 0x1C17CF4
	023 Move X0, 0x262000
	024 Move X0, [X0+1368]
	025 Call 0x1C17CF4
	026 Move X0, 0x2D4000
	027 Move X0, [X0+3608]
	028 Call 0x1C17CF4
	029 Move X0, 0x2D4000
	030 Move X0, [X0+3616]
	031 Call 0x1C17CF4
	032 Move X0, 0x2D4000
	033 Move X0, [X0+3624]
	034 Call 0x1C17CF4
	035 Move X0, 0x289000
	036 Move X0, [X0+3344]
	037 Call 0x1C17CF4
	038 Move W8, 1
	039 Move [X24+3744], W8
	040 Move X0, [X23]
	041 Move X23, 0x2D4000
	042 Move W8, [X0+224]
	043 Move X23, [X23+3600]
	044 Compare W8, 0
	045 JumpIfNotEqual {47}
	046 Call 0x1C17DFC
	047 Move X0, X19
	048 Move X1, X31
	049 Call Stream..ctor, X0
	050 Move [X19+56], X20
	051 Move [X19+64], X22
	052 Move X0, [X23]
	053 Call 0x1C17F10
	054 Move X22, X0
	055 Move TEMP, X21
	056 And TEMP, TEMP, 1
	057 Compare TEMP, 1
	058 JumpIfNotEqual {71}
	059 Move X8, 0x2D4000
	060 Move X8, [X8+3624]
	061 Move X0, X22
	062 Move X1, X19
	063 Move X3, X31
	064 Move X2, [X8]
	065 Call Action`3<Object, Int32, Int32>..ctor, X0, X1, X2
	066 Move [X19+80], X22
	067 Move X0, [X23]
	068 Call 0x1C17F10
	069 Move X8, 0x2D4000
	070 Move X8, [X8+3608]
	071 Compare X20, 0
	072 JumpIfEqual {107}
	073 Move X8, [X20]
	074 Move X0, X22
	075 Move X1, X20
	076 Move X3, X31
	077 Move X2, [X8+912]
	078 Call Action`3<Object, Int32, Int32>..ctor, X0, X1, X2
	079 Move [X19+80], X22
	080 Move X0, [X23]
	081 Call 0x1C17F10
	082 Move X8, 0x2D4000
	083 Move X8, [X8+3616]
	084 Move X20, X0
	085 Move X2, [X8]
	086 Move X21, 0x262000
	087 Move X21, [X21+1368]
	088 Move X0, X20
	089 Move X1, X19
	090 Move X3, X31
	091 Call Action`3<Object, Int32, Int32>..ctor, X0, X1, X2
	092 Move [X19+96], X20
	093 Move X0, [X21]
	094 Call 0x1C17F10
	095 Move X1, X31
	096 Move X20, X0
	097 Call MemoryStream..ctor, X0
	098 Move [X19+40], X20
	099 Move X20, [X31+48]
	100 Move X19, [X31+56]
	101 Move X22, [X31+32]
	102 Move X21, [X31+40]
	103 Move X24, [X31+16]
	104 Move X23, [X31+24]
	105 Move X30, [X31+64]
	106 Return 
	107 Call 0x1C17F20

Method: System.Boolean get_CanRead()

Disassembly:
	0x03E9A668 MOV X1, X0
	0x03E9A66C MOV X0, X20

ISIL:
	001 Move W0, W31
	002 Return X0

Method: System.Boolean get_CanSeek()

Disassembly:
	0x03E9A670 BL 0x1C16DEC
	0x03E9A674 BL 0x1C16F20

ISIL:
	001 Move W0, W31
	002 Return X0

Method: System.Boolean get_CanWrite()

Disassembly:
	0x03E9A678 STR X30, [X31 - 0x10]!
	0x03E9A67C LDRB W8, [X0 + 0x30]
	0x03E9A680 CBZ W8, 0x3E9A68C
	0x03E9A684 LDR X30, [X31], #0x10

ISIL:
	001 Move W8, [X0+48]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 NotImplemented "Instruction CSET not yet implemented."
	004 Return X0

Method: System.Int64 get_Length()

Disassembly:
	0x03E9A688 RET
	0x03E9A68C LDRB W8, [X0 + 0x48]
	0x03E9A690 CBNZ W8, 0x3E9A6A4
	0x03E9A694 LDR X8, [X0 + 0x40]
	0x03E9A698 CBZ X8, 0x3E9A6B0
	0x03E9A69C LDRB W8, [X8 + 0x68]
	0x03E9A6A0 CBZ W8, 0x3E9A684
	0x03E9A6A4 MOV W1, W31
	0x03E9A6A8 LDR X30, [X31], #0x10
	0x03E9A6AC B 0x3E99730
	0x03E9A6B0 BL 0x1C16F20
	0x03E9A6B4 STP X30, X19, [X31 - 0x10]!
	0x03E9A6B8 ADRP X0, 0x259000
	0x03E9A6BC LDR X0, [X0 + 0xB40]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0x25A000
	004 Move X0, [X0+2880]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X1, X31
	008 Move X19, X0
	009 Call NotSupportedException..ctor, X0
	010 Move X0, 0x2D4000
	011 Move X0, [X0+3632]
	012 Call 0x1C17D08
	013 Move X1, X0
	014 Move X0, X19
	015 Call 0x1C17DEC

Method: System.Int64 get_Position()

Disassembly:
	0x03E9A6C0 BL 0x1C16D08
	0x03E9A6C4 BL 0x1C16F10
	0x03E9A6C8 MOV X1, X31
	0x03E9A6CC MOV X19, X0
	0x03E9A6D0 BL 0x3380310
	0x03E9A6D4 ADRP X0, 0x2D3000
	0x03E9A6D8 LDR X0, [X0 + 0xE78]
	0x03E9A6DC BL 0x1C16D08
	0x03E9A6E0 MOV X1, X0
	0x03E9A6E4 MOV X0, X19
	0x03E9A6E8 BL 0x1C16DEC
	0x03E9A6EC STP X30, X19, [X31 - 0x10]!
	0x03E9A6F0 ADRP X0, 0x259000
	0x03E9A6F4 LDR X0, [X0 + 0xB40]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0x25A000
	004 Move X0, [X0+2880]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X1, X31
	008 Move X19, X0
	009 Call NotSupportedException..ctor, X0
	010 Move X0, 0x2D4000
	011 Move X0, [X0+3640]
	012 Call 0x1C17D08
	013 Move X1, X0
	014 Move X0, X19
	015 Call 0x1C17DEC

Method: System.Void set_Position(System.Int64 value)

Disassembly:
	0x03E9A6F8 BL 0x1C16D08
	0x03E9A6FC BL 0x1C16F10
	0x03E9A700 MOV X1, X31
	0x03E9A704 MOV X19, X0
	0x03E9A708 BL 0x3380310
	0x03E9A70C ADRP X0, 0x2D3000
	0x03E9A710 LDR X0, [X0 + 0xE80]
	0x03E9A714 BL 0x1C16D08
	0x03E9A718 MOV X1, X0
	0x03E9A71C MOV X0, X19
	0x03E9A720 BL 0x1C16DEC
	0x03E9A724 STP X30, X19, [X31 - 0x10]!
	0x03E9A728 ADRP X0, 0x259000
	0x03E9A72C LDR X0, [X0 + 0xB40]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0x25A000
	004 Move X0, [X0+2880]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X1, X31
	008 Move X19, X0
	009 Call NotSupportedException..ctor, X0
	010 Move X0, 0x2D4000
	011 Move X0, [X0+3648]
	012 Call 0x1C17D08
	013 Move X1, X0
	014 Move X0, X19
	015 Call 0x1C17DEC

Method: System.Boolean flush(System.Boolean closing)

Disassembly:
	0x03E9A730 BL 0x1C16D08
	0x03E9A734 BL 0x1C16F10
	0x03E9A738 MOV X1, X31
	0x03E9A73C MOV X19, X0
	0x03E9A740 BL 0x3380310
	0x03E9A744 ADRP X0, 0x2D3000
	0x03E9A748 LDR X0, [X0 + 0xE88]
	0x03E9A74C BL 0x1C16D08
	0x03E9A750 MOV X1, X0
	0x03E9A754 MOV X0, X19
	0x03E9A758 BL 0x1C16DEC
	0x03E9A75C STR X30, [X31 - 0x20]!
	0x03E9A760 STP X20, X19, [X31 + 0x10]
	0x03E9A764 LDRB W8, [X0 + 0x30]
	0x03E9A768 CBNZ W8, 0x3E9A78C
	0x03E9A76C LDR X0, [X0 + 0x28]
	0x03E9A770 CBZ X0, 0x3E9A7E8
	0x03E9A774 LDR X8, [X0]
	0x03E9A778 LDP X20, X19, [X31 + 0x10]
	0x03E9A77C LDR X5, [X8 + 0x388]
	0x03E9A780 LDR X4, [X8 + 0x390]
	0x03E9A784 LDR X30, [X31], #0x20
	0x03E9A788 BR X5
	0x03E9A78C MOV X1, X31
	0x03E9A790 BL 0x33BE520
	0x03E9A794 MOV X19, X0
	0x03E9A798 BL 0x19903C0
	0x03E9A79C LDR X8, [X19]
	0x03E9A7A0 MOV X0, X19
	0x03E9A7A4 LDP X9, X1, [X8 + 0x168]
	0x03E9A7A8 BLR X9
	0x03E9A7AC MOV X19, X0
	0x03E9A7B0 ADRP X0, 0x282000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X8, [X0+64]
	005 Compare X8, 0
	006 JumpIfEqual {40}
	007 Move W8, [X8+80]
	008 Move X19, X0
	009 Move W20, W1
	010 Compare W8, 0
	011 JumpIfNotEqual {31}
	012 Move X0, X19
	013 Call ResponseStream.flushHeaders, X0
	014 Move TEMP, X0
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfNotEqual {39}
	018 Move X8, [X19+64]
	019 Compare X8, 0
	020 JumpIfEqual {40}
	021 Move W9, [X8+104]
	022 Move W10, 1
	023 Move W11, 96
	024 Move [X8+80], W10
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move W8, 80
	027 Move [X19+72], W9
	028 NotImplemented "Instruction CSEL not yet implemented."
	029 Move X8, [X19]
	030 Move [X19+88], X8
	031 And W1, W20, 1
	032 Move X0, X19
	033 Call ResponseStream.flushBody, X0, X1
	034 Move W0, 1
	035 Move X20, [X31+16]
	036 Move X19, [X31+24]
	037 Move X30, [X31+32]
	038 Return X0
	039 Move W0, W31
	040 Call 0x1C17F20

Method: System.Void flushBody(System.Boolean closing)

Disassembly:
	0x03E9ABA4 BL 0x1C16CF4
	0x03E9ABA8 ADRP X0, 0x2A0000
	0x03E9ABAC LDR X0, [X0 + 0xAB0]
	0x03E9ABB0 BL 0x1C16CF4
	0x03E9ABB4 ADRP X0, 0x2A0000
	0x03E9ABB8 LDR X0, [X0 + 0x158]
	0x03E9ABBC BL 0x1C16CF4
	0x03E9ABC0 ADRP X0, 0x2D3000
	0x03E9ABC4 LDR X0, [X0 + 0xF80]
	0x03E9ABC8 BL 0x1C16CF4
	0x03E9ABCC ADRP X0, 0x2A0000
	0x03E9ABD0 LDR X0, [X0 + 0xAB8]
	0x03E9ABD4 BL 0x1C16CF4
	0x03E9ABD8 ADRP X0, 0x2D3000
	0x03E9ABDC LDR X0, [X0 + 0xF88]
	0x03E9ABE0 BL 0x1C16CF4
	0x03E9ABE4 ADRP X0, 0x2A0000
	0x03E9ABE8 LDR X0, [X0 + 0xAC0]
	0x03E9ABEC BL 0x1C16CF4
	0x03E9ABF0 ADRP X0, 0x2A0000
	0x03E9ABF4 LDR X0, [X0 + 0xAC8]
	0x03E9ABF8 BL 0x1C16CF4
	0x03E9ABFC ADRP X0, 0x2D3000
	0x03E9AC00 LDR X0, [X0 + 0xF90]
	0x03E9AC04 BL 0x1C16CF4
	0x03E9AC08 ADRP X0, 0x2D3000
	0x03E9AC0C LDR X0, [X0 + 0xF98]
	0x03E9AC10 BL 0x1C16CF4
	0x03E9AC14 ADRP X0, 0x2A0000
	0x03E9AC18 LDR X0, [X0 + 0xAD0]
	0x03E9AC1C BL 0x1C16CF4
	0x03E9AC20 ADRP X0, 0x2D3000
	0x03E9AC24 LDR X0, [X0 + 0xFA0]
	0x03E9AC28 BL 0x1C16CF4
	0x03E9AC2C ADRP X0, 0x2A0000
	0x03E9AC30 LDR X0, [X0 + 0xAD8]
	0x03E9AC34 BL 0x1C16CF4
	0x03E9AC38 ADRP X0, 0x2D3000
	0x03E9AC3C LDR X0, [X0 + 0xFA8]
	0x03E9AC40 BL 0x1C16CF4
	0x03E9AC44 ADRP X0, 0x2D3000
	0x03E9AC48 LDR X0, [X0 + 0xFB0]
	0x03E9AC4C BL 0x1C16CF4
	0x03E9AC50 ADRP X0, 0x2D3000
	0x03E9AC54 LDR X0, [X0 + 0xFB8]
	0x03E9AC58 BL 0x1C16CF4
	0x03E9AC5C ADRP X0, 0x2A0000
	0x03E9AC60 LDR X0, [X0 + 0xAE0]
	0x03E9AC64 BL 0x1C16CF4
	0x03E9AC68 ADRP X0, 0x2A4000
	0x03E9AC6C LDR X0, [X0 + 0x10]
	0x03E9AC70 BL 0x1C16CF4
	0x03E9AC74 ADRP X0, 0x2A4000
	0x03E9AC78 LDR X0, [X0 + 0x578]
	0x03E9AC7C BL 0x1C16CF4
	0x03E9AC80 ADRP X0, 0x2D3000
	0x03E9AC84 LDR X0, [X0 + 0xFC0]
	0x03E9AC88 BL 0x1C16CF4
	0x03E9AC8C ADRP X0, 0x2A4000
	0x03E9AC90 LDR X0, [X0 + 0x208]
	0x03E9AC94 BL 0x1C16CF4
	0x03E9AC98 ADRP X0, 0x2D3000
	0x03E9AC9C LDR X0, [X0 + 0xFC8]
	0x03E9ACA0 BL 0x1C16CF4
	0x03E9ACA4 ADRP X0, 0x2A0000
	0x03E9ACA8 LDR X0, [X0 + 0xAE8]
	0x03E9ACAC BL 0x1C16CF4
	0x03E9ACB0 ADRP X0, 0x2D3000
	0x03E9ACB4 LDR X0, [X0 + 0xFD0]
	0x03E9ACB8 BL 0x1C16CF4
	0x03E9ACBC ADRP X0, 0x2A0000
	0x03E9ACC0 LDR X0, [X0 + 0xAF0]
	0x03E9ACC4 BL 0x1C16CF4
	0x03E9ACC8 ADRP X0, 0x2A0000
	0x03E9ACCC LDR X0, [X0 + 0xAF8]
	0x03E9ACD0 BL 0x1C16CF4
	0x03E9ACD4 MOVZ W8, 0x1
	0x03E9ACD8 STRB W8, [X20 + 0xEA6]
	0x03E9ACDC LDR X0, [X19]
	0x03E9ACE0 LDR W8, [X0 + 0xE0]
	0x03E9ACE4 CBNZ W8, 0x3E9ACEC
	0x03E9ACE8 BL 0x1C16DFC
	0x03E9ACEC ADRP X20, 0x546000
	0x03E9ACF0 LDRB W8, [X20 + 0x4B3]
	0x03E9ACF4 CBNZ W8, 0x3E9AD0C
	0x03E9ACF8 ADRP X0, 0x266000
	0x03E9ACFC LDR X0, [X0 + 0x2F0]
	0x03E9AD00 BL 0x1C16CF4
	0x03E9AD04 MOVZ W8, 0x1
	0x03E9AD08 STRB W8, [X20 + 0x4B3]
	0x03E9AD0C LDR X0, [X19]
	0x03E9AD10 ADRP X23, 0x2D3000
	0x03E9AD14 ADRP X22, 0x2D3000
	0x03E9AD18 ADRP X21, 0x2D3000
	0x03E9AD1C ADRP X26, 0x2A0000
	0x03E9AD20 LDR W8, [X0 + 0xE0]
	0x03E9AD24 LDR X23, [X23 + 0xEA8]
	0x03E9AD28 LDR X22, [X22 + 0xEA0]
	0x03E9AD2C LDR X21, [X21 + 0xEB0]
	0x03E9AD30 LDR X26, [X26 + 0x6F0]
	0x03E9AD34 CBNZ W8, 0x3E9AD40
	0x03E9AD38 BL 0x1C16DFC
	0x03E9AD3C LDR X0, [X19]
	0x03E9AD40 LDR X8, [X0 + 0xB8]
	0x03E9AD44 LDR X0, [X23]
	0x03E9AD48 LDR X20, [X8 + 0x8]
	0x03E9AD4C BL 0x1C16F10
	0x03E9AD50 LDR X2, [X22]
	0x03E9AD54 MOV X1, X20
	0x03E9AD58 MOV X19, X0
	0x03E9AD5C BL 0x2AA4830
	0x03E9AD60 LDR X0, [X21]
	0x03E9AD64 BL 0x1C16F10
	0x03E9AD68 LDR X22, [X26]
	0x03E9AD6C MOV X1, X31
	0x03E9AD70 MOV X20, X0
	0x03E9AD74 BL 0x33BDD8C
	0x03E9AD78 MOVZ W8, 0xD
	0x03E9AD7C STR X22, [X20 + 0x10]
	0x03E9AD80 STR W8, [X20 + 0x18]
	0x03E9AD84 CBZ X19, 0x3E9BD40
	0x03E9AD88 ADRP X22, 0x2D3000
	0x03E9AD8C LDR X22, [X22 + 0xE98]
	0x03E9AD90 ADRP X24, 0x2A0000
	0x03E9AD94 ADRP X25, 0x2D3000
	0x03E9AD98 ADRP X27, 0x2A0000
	0x03E9AD9C ADRP X23, 0x2D3000
	0x03E9ADA0 ADRP X29, 0x2A0000
	0x03E9ADA4 ADRP X28, 0x2A0000
	0x03E9ADA8 LDR X24, [X24 + 0xA00]
	0x03E9ADAC LDR X25, [X25 + 0xF78]
	0x03E9ADB0 LDR X27, [X27 + 0x9E8]
	0x03E9ADB4 LDR X23, [X23 + 0xEC0]
	0x03E9ADB8 LDR X29, [X29 + 0xA68]
	0x03E9ADBC LDR X28, [X28 + 0xA28]
	0x03E9ADC0 LDR X1, [X26]
	0x03E9ADC4 LDR X3, [X22]
	0x03E9ADC8 MOV X0, X19
	0x03E9ADCC MOV X2, X20
	0x03E9ADD0 BL 0x2AA5098
	0x03E9ADD4 LDR X0, [X21]
	0x03E9ADD8 BL 0x1C16F10
	0x03E9ADDC LDR X24, [X24]
	0x03E9ADE0 MOV X1, X31
	0x03E9ADE4 MOV X20, X0
	0x03E9ADE8 BL 0x33BDD8C
	0x03E9ADEC MOVZ W26, 0x9
	0x03E9ADF0 STR X24, [X20 + 0x10]
	0x03E9ADF4 STR W26, [X20 + 0x18]
	0x03E9ADF8 LDR X1, [X25]
	0x03E9ADFC LDR X3, [X22]
	0x03E9AE00 MOV X0, X19
	0x03E9AE04 MOV X2, X20
	0x03E9AE08 BL 0x2AA5098
	0x03E9AE0C LDR X0, [X21]
	0x03E9AE10 BL 0x1C16F10
	0x03E9AE14 LDR X24, [X27]
	0x03E9AE18 MOV X1, X31
	0x03E9AE1C MOV X20, X0
	0x03E9AE20 BL 0x33BDD8C
	0x03E9AE24 STR X24, [X20 + 0x10]
	0x03E9AE28 STR W26, [X20 + 0x18]
	0x03E9AE2C LDR X1, [X23]
	0x03E9AE30 LDR X3, [X22]
	0x03E9AE34 MOV X0, X19
	0x03E9AE38 MOV X2, X20
	0x03E9AE3C BL 0x2AA5098
	0x03E9AE40 LDR X0, [X21]
	0x03E9AE44 BL 0x1C16F10
	0x03E9AE48 ADRP X8, 0x2A0000
	0x03E9AE4C LDR X8, [X8 + 0x9C8]
	0x03E9AE50 MOV X1, X31
	0x03E9AE54 MOV X20, X0
	0x03E9AE58 LDR X23, [X8]
	0x03E9AE5C BL 0x33BDD8C
	0x03E9AE60 STR X23, [X20 + 0x10]
	0x03E9AE64 STR W26, [X20 + 0x18]
	0x03E9AE68 ADRP X8, 0x2D3000
	0x03E9AE6C LDR X8, [X8 + 0xF40]
	0x03E9AE70 LDR X3, [X22]
	0x03E9AE74 MOV X0, X19
	0x03E9AE78 MOV X2, X20
	0x03E9AE7C LDR X1, [X8]
	0x03E9AE80 BL 0x2AA5098
	0x03E9AE84 LDR X0, [X21]
	0x03E9AE88 BL 0x1C16F10
	0x03E9AE8C ADRP X8, 0x2A0000
	0x03E9AE90 LDR X8, [X8 + 0xA98]
	0x03E9AE94 MOV X1, X31
	0x03E9AE98 MOV X20, X0
	0x03E9AE9C LDR X23, [X8]
	0x03E9AEA0 BL 0x33BDD8C
	0x03E9AEA4 MOVZ W8, 0xA
	0x03E9AEA8 STR X23, [X20 + 0x10]
	0x03E9AEAC STR W8, [X20 + 0x18]
	0x03E9AEB0 ADRP X8, 0x2D3000
	0x03E9AEB4 LDR X8, [X8 + 0xF68]
	0x03E9AEB8 LDR X3, [X22]
	0x03E9AEBC MOV X0, X19
	0x03E9AEC0 MOV X2, X20
	0x03E9AEC4 LDR X1, [X8]
	0x03E9AEC8 BL 0x2AA5098
	0x03E9AECC LDR X0, [X21]
	0x03E9AED0 BL 0x1C16F10
	0x03E9AED4 LDR X23, [X29]
	0x03E9AED8 MOV X1, X31
	0x03E9AEDC MOV X20, X0

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0x54F000
	009 Move W8, [X20+3745]
	010 Move W21, W1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {30}
	016 Move X0, 0x25A000
	017 Move X0, [X0+1560]
	018 Call 0x1C17CF4
	019 Move X0, 0x25A000
	020 Move X0, [X0+3584]
	021 Call 0x1C17CF4
	022 Move X0, 0x262000
	023 Move X0, [X0+1368]
	024 Call 0x1C17CF4
	025 Move X0, 0x2D4000
	026 Move X0, [X0+504]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X20+3745], W8
	030 Move X24, 0x25A000
	031 Move X20, [X19+40]
	032 Move X24, [X24+3584]
	033 Compare X20, 0
	034 JumpIfEqual {170}
	035 Move X8, [X20]
	036 Move X9, [X8+488]
	037 Move X1, [X8+496]
	038 Move X0, X20
	039 NotImplemented "Instruction BLR not yet implemented."
	040 Move TEMP, 0x80000000
	041 Not TEMP
	042 Move W8, TEMP
	043 Move X22, X0
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Move X0, [X19+40]
	046 Compare X0, 0
	047 JumpIfEqual {173}
	048 Move X8, [X0]
	049 Move X9, [X8+520]
	050 Move X2, [X8+528]
	051 Move X1, X31
	052 NotImplemented "Instruction BLR not yet implemented."
	053 Move X8, 0x25A000
	054 Move X8, [X8+1560]
	055 Move X0, [X8]
	056 Move W1, 1024
	057 Call 0x1C17D6C
	058 Move X22, X0
	059 Move X0, [X19+40]
	060 Compare X0, 0
	061 JumpIfEqual {168}
	062 Move X8, [X0]
	063 Move X9, [X8+856]
	064 Move X4, [X8+864]
	065 Move W3, 1024
	066 Move X1, X22
	067 Move W2, W31
	068 NotImplemented "Instruction BLR not yet implemented."
	069 Move W3, W0
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Move X8, [X19+88]
	072 Compare X8, 0
	073 JumpIfEqual {169}
	074 Move X0, [X8+64]
	075 Move X9, [X8+24]
	076 Move X4, [X8+40]
	077 Move X1, X22
	078 Move W2, W31
	079 NotImplemented "Instruction BLR not yet implemented."
	080 NotImplemented "Instruction CMP not yet implemented."
	081 Move X0, [X19+40]
	082 Compare X0, 0
	083 JumpIfEqual {175}
	084 Move X8, [X0]
	085 Move X23, [X19+88]
	086 Move X1, [X8+960]
	087 Move X9, [X8+952]
	088 NotImplemented "Instruction BLR not yet implemented."
	089 Move X1, X0
	090 Compare X23, 0
	091 JumpIfEqual {176}
	092 Move X0, [X23+64]
	093 Move X8, [X23+24]
	094 Move X4, [X23+40]
	095 Move W2, W31
	096 Move W3, W22
	097 NotImplemented "Instruction BLR not yet implemented."
	098 Move X22, X31
	099 Move X22, X31
	100 Compare X20, 0
	101 JumpIfEqual {123}
	102 Move X8, [X20]
	103 Move X1, [X24]
	104 NotImplemented "Instruction LDRH not yet implemented."
	105 Compare X9, 0
	106 JumpIfEqual {113}
	107 Move X10, [X8+176]
	108 Add X10, X10, 8
	109 NotImplemented "Instruction LDUR not yet implemented."
	110 NotImplemented "Instruction CMP not yet implemented."
	111 Subtract X9, X9, 1
	112 Add X10, X10, 16
	113 Move X0, X20
	114 Move W2, W31
	115 Call 0x1C5D788
	116 NotImplemented "Instruction LDRSW not yet implemented."
	117 Add X8, X8, X9
	118 Add X0, X8, 312
	119 Move X8, [X0]
	120 Move X1, [X0+8]
	121 Move X0, X20
	122 NotImplemented "Instruction BLR not yet implemented."
	123 Compare X22, 0
	124 JumpIfNotEqual {171}
	125 Move TEMP, X21
	126 And TEMP, TEMP, 1
	127 Compare TEMP, 1
	128 JumpIfNotEqual {152}
	129 Move W8, [X19+72]
	130 Compare W8, 0
	131 JumpIfEqual {151}
	132 Move X21, 0x2D4000
	133 Move X21, [X21+504]
	134 Move X20, [X19+80]
	135 Move X0, [X21]
	136 Move W8, [X0+224]
	137 Compare W8, 0
	138 JumpIfNotEqual {140}
	139 Call 0x1C17DFC
	140 Compare X20, 0
	141 JumpIfEqual {174}
	142 Move X8, [X21]
	143 Move X9, [X20+24]
	144 Move X0, [X20+64]
	145 Move X4, [X20+40]
	146 Move X8, [X8+184]
	147 Move W3, 5
	148 Move W2, W31
	149 Move X1, [X8+8]
	150 NotImplemented "Instruction BLR not yet implemented."
	151 Move [X19+40], X31
	152 Move X8, 0x262000
	153 Move X8, [X8+1368]
	154 Move X0, [X8]
	155 Call 0x1C17F10
	156 Move X1, X31
	157 Move X20, X0
	158 Call MemoryStream..ctor, X0
	159 Move [X19+40], X20
	160 Move X20, [X31+48]
	161 Move X19, [X31+56]
	162 Move X22, [X31+32]
	163 Move X21, [X31+40]
	164 Move X24, [X31+16]
	165 Move X23, [X31+24]
	166 Move X30, [X31+64]
	167 Return 
	168 Call 0x1C17F20
	169 Call 0x1C17F20
	170 Call 0x1C17F20
	171 Move X0, X22
	172 Call 0x1C17F18
	173 Call 0x1C17F20
	174 Call 0x1C17F20
	175 Call 0x1C17F20
	176 Call 0x1C17F20
	177 Move X23, X0
	178 NotImplemented "Instruction CMP not yet implemented."
	179 Move X0, X23
	180 Call 0x3EB2AD0
	181 Move X22, [X0]
	182 Call 0x3EB2AE0
	183 Move X22, X31
	184 Move X23, X0
	185 Compare X20, 0
	186 JumpIfEqual {208}
	187 Move X8, [X20]
	188 Move X1, [X24]
	189 NotImplemented "Instruction LDRH not yet implemented."
	190 Compare X9, 0
	191 JumpIfEqual {198}
	192 Move X10, [X8+176]
	193 Add X10, X10, 8
	194 NotImplemented "Instruction LDUR not yet implemented."
	195 NotImplemented "Instruction CMP not yet implemented."
	196 Subtract X9, X9, 1
	197 Add X10, X10, 16
	198 Move X0, X20
	199 Move W2, W31
	200 Call 0x1C5D788
	201 NotImplemented "Instruction LDRSW not yet implemented."
	202 Add X8, X8, X9
	203 Add X0, X8, 312
	204 Move X8, [X0]
	205 Move X1, [X0+8]
	206 Move X0, X20
	207 NotImplemented "Instruction BLR not yet implemented."
	208 Compare X22, 0
	209 JumpIfNotEqual {212}
	210 Move X0, X23
	211 Call 0x1D2D690
	212 Move X0, X22
	213 Call 0x1C17F18
	214 Call 0x1991590

Method: System.Boolean flushHeaders()

Disassembly:
	0x03E9A7B4 LDR X0, [X0 + 0x4B8]
	0x03E9A7B8 BL 0x1C16D08
	0x03E9A7BC BL 0x1C16F10
	0x03E9A7C0 MOV X1, X19
	0x03E9A7C4 MOV X2, X31
	0x03E9A7C8 MOV X20, X0
	0x03E9A7CC BL 0x338C448
	0x03E9A7D0 ADRP X0, 0x2D3000
	0x03E9A7D4 LDR X0, [X0 + 0xE90]
	0x03E9A7D8 BL 0x1C16D08
	0x03E9A7DC MOV X1, X0
	0x03E9A7E0 MOV X0, X20
	0x03E9A7E4 BL 0x1C16DEC
	0x03E9A7E8 BL 0x1C16F20
	0x03E9A7EC STP X29, X30, [X31 - 0x60]!
	0x03E9A7F0 STP X28, X27, [X31 + 0x10]
	0x03E9A7F4 STP X26, X25, [X31 + 0x20]
	0x03E9A7F8 STP X24, X23, [X31 + 0x30]
	0x03E9A7FC STP X22, X21, [X31 + 0x40]
	0x03E9A800 STP X20, X19, [X31 + 0x50]
	0x03E9A804 ADRP X20, 0x54E000
	0x03E9A808 ADRP X19, 0x266000
	0x03E9A80C LDRB W8, [X20 + 0xEA6]
	0x03E9A810 LDR X19, [X19 + 0x2F0]
	0x03E9A814 TBNZ X8, 0x0, 0x3E9ACDC
	0x03E9A818 ADRP X0, 0x2D3000
	0x03E9A81C LDR X0, [X0 + 0xE98]
	0x03E9A820 BL 0x1C16CF4
	0x03E9A824 ADRP X0, 0x2D3000
	0x03E9A828 LDR X0, [X0 + 0xEA0]
	0x03E9A82C BL 0x1C16CF4
	0x03E9A830 ADRP X0, 0x2D3000
	0x03E9A834 LDR X0, [X0 + 0xEA8]
	0x03E9A838 BL 0x1C16CF4
	0x03E9A83C ADRP X0, 0x2D3000
	0x03E9A840 LDR X0, [X0 + 0xEB0]
	0x03E9A844 BL 0x1C16CF4
	0x03E9A848 ADRP X0, 0x266000
	0x03E9A84C LDR X0, [X0 + 0x2F0]
	0x03E9A850 BL 0x1C16CF4
	0x03E9A854 ADRP X0, 0x2D2000
	0x03E9A858 LDR X0, [X0 + 0xC80]
	0x03E9A85C BL 0x1C16CF4
	0x03E9A860 ADRP X0, 0x2A0000
	0x03E9A864 LDR X0, [X0 + 0x9C8]
	0x03E9A868 BL 0x1C16CF4
	0x03E9A86C ADRP X0, 0x2A0000
	0x03E9A870 LDR X0, [X0 + 0x188]
	0x03E9A874 BL 0x1C16CF4
	0x03E9A878 ADRP X0, 0x2D3000
	0x03E9A87C LDR X0, [X0 + 0xEB8]
	0x03E9A880 BL 0x1C16CF4
	0x03E9A884 ADRP X0, 0x2A0000
	0x03E9A888 LDR X0, [X0 + 0x9D0]
	0x03E9A88C BL 0x1C16CF4
	0x03E9A890 ADRP X0, 0x2A0000
	0x03E9A894 LDR X0, [X0 + 0x9D8]
	0x03E9A898 BL 0x1C16CF4
	0x03E9A89C ADRP X0, 0x2A0000
	0x03E9A8A0 LDR X0, [X0 + 0x9E0]
	0x03E9A8A4 BL 0x1C16CF4
	0x03E9A8A8 ADRP X0, 0x2A0000
	0x03E9A8AC LDR X0, [X0 + 0x9E8]
	0x03E9A8B0 BL 0x1C16CF4
	0x03E9A8B4 ADRP X0, 0x2D3000
	0x03E9A8B8 LDR X0, [X0 + 0xEC0]
	0x03E9A8BC BL 0x1C16CF4
	0x03E9A8C0 ADRP X0, 0x2A0000
	0x03E9A8C4 LDR X0, [X0 + 0x9F0]
	0x03E9A8C8 BL 0x1C16CF4
	0x03E9A8CC ADRP X0, 0x2A0000
	0x03E9A8D0 LDR X0, [X0 + 0x6F0]
	0x03E9A8D4 BL 0x1C16CF4
	0x03E9A8D8 ADRP X0, 0x2D3000
	0x03E9A8DC LDR X0, [X0 + 0xEC8]
	0x03E9A8E0 BL 0x1C16CF4
	0x03E9A8E4 ADRP X0, 0x2D2000
	0x03E9A8E8 LDR X0, [X0 + 0x528]
	0x03E9A8EC BL 0x1C16CF4
	0x03E9A8F0 ADRP X0, 0x2D3000
	0x03E9A8F4 LDR X0, [X0 + 0xED0]
	0x03E9A8F8 BL 0x1C16CF4
	0x03E9A8FC ADRP X0, 0x2A4000
	0x03E9A900 LDR X0, [X0 + 0x570]
	0x03E9A904 BL 0x1C16CF4
	0x03E9A908 ADRP X0, 0x2A0000
	0x03E9A90C LDR X0, [X0 + 0x9F8]
	0x03E9A910 BL 0x1C16CF4
	0x03E9A914 ADRP X0, 0x2D3000
	0x03E9A918 LDR X0, [X0 + 0xED8]
	0x03E9A91C BL 0x1C16CF4
	0x03E9A920 ADRP X0, 0x2A0000
	0x03E9A924 LDR X0, [X0 + 0xA00]
	0x03E9A928 BL 0x1C16CF4
	0x03E9A92C ADRP X0, 0x2A0000
	0x03E9A930 LDR X0, [X0 + 0xA08]
	0x03E9A934 BL 0x1C16CF4
	0x03E9A938 ADRP X0, 0x2D3000
	0x03E9A93C LDR X0, [X0 + 0xEE0]
	0x03E9A940 BL 0x1C16CF4
	0x03E9A944 ADRP X0, 0x2A0000
	0x03E9A948 LDR X0, [X0 + 0xA10]
	0x03E9A94C BL 0x1C16CF4
	0x03E9A950 ADRP X0, 0x2A6000
	0x03E9A954 LDR X0, [X0 + 0x258]
	0x03E9A958 BL 0x1C16CF4
	0x03E9A95C ADRP X0, 0x2A0000
	0x03E9A960 LDR X0, [X0 + 0xA18]
	0x03E9A964 BL 0x1C16CF4
	0x03E9A968 ADRP X0, 0x2A0000
	0x03E9A96C LDR X0, [X0 + 0xA20]
	0x03E9A970 BL 0x1C16CF4
	0x03E9A974 ADRP X0, 0x262000
	0x03E9A978 LDR X0, [X0 + 0xD70]
	0x03E9A97C BL 0x1C16CF4
	0x03E9A980 ADRP X0, 0x2A0000
	0x03E9A984 LDR X0, [X0 + 0x6D0]
	0x03E9A988 BL 0x1C16CF4
	0x03E9A98C ADRP X0, 0x2A0000
	0x03E9A990 LDR X0, [X0 + 0xA28]
	0x03E9A994 BL 0x1C16CF4
	0x03E9A998 ADRP X0, 0x2A0000
	0x03E9A99C LDR X0, [X0 + 0xA30]
	0x03E9A9A0 BL 0x1C16CF4
	0x03E9A9A4 ADRP X0, 0x2A0000
	0x03E9A9A8 LDR X0, [X0 + 0x250]
	0x03E9A9AC BL 0x1C16CF4
	0x03E9A9B0 ADRP X0, 0x2A0000
	0x03E9A9B4 LDR X0, [X0 + 0xA38]
	0x03E9A9B8 BL 0x1C16CF4
	0x03E9A9BC ADRP X0, 0x2D3000
	0x03E9A9C0 LDR X0, [X0 + 0xEE8]
	0x03E9A9C4 BL 0x1C16CF4
	0x03E9A9C8 ADRP X0, 0x2A0000
	0x03E9A9CC LDR X0, [X0 + 0xA40]
	0x03E9A9D0 BL 0x1C16CF4
	0x03E9A9D4 ADRP X0, 0x2A0000
	0x03E9A9D8 LDR X0, [X0 + 0xA48]
	0x03E9A9DC BL 0x1C16CF4
	0x03E9A9E0 ADRP X0, 0x294000
	0x03E9A9E4 LDR X0, [X0 + 0x988]
	0x03E9A9E8 BL 0x1C16CF4
	0x03E9A9EC ADRP X0, 0x2A4000
	0x03E9A9F0 LDR X0, [X0]
	0x03E9A9F4 BL 0x1C16CF4
	0x03E9A9F8 ADRP X0, 0x2A0000
	0x03E9A9FC LDR X0, [X0 + 0xA50]
	0x03E9AA00 BL 0x1C16CF4
	0x03E9AA04 ADRP X0, 0x2D3000
	0x03E9AA08 LDR X0, [X0 + 0xEF0]
	0x03E9AA0C BL 0x1C16CF4
	0x03E9AA10 ADRP X0, 0x2A0000
	0x03E9AA14 LDR X0, [X0 + 0xA58]
	0x03E9AA18 BL 0x1C16CF4
	0x03E9AA1C ADRP X0, 0x2D3000
	0x03E9AA20 LDR X0, [X0 + 0xEF8]
	0x03E9AA24 BL 0x1C16CF4
	0x03E9AA28 ADRP X0, 0x2D3000
	0x03E9AA2C LDR X0, [X0 + 0xF00]
	0x03E9AA30 BL 0x1C16CF4
	0x03E9AA34 ADRP X0, 0x2A4000
	0x03E9AA38 LDR X0, [X0 + 0x200]
	0x03E9AA3C BL 0x1C16CF4
	0x03E9AA40 ADRP X0, 0x2A0000
	0x03E9AA44 LDR X0, [X0 + 0x190]
	0x03E9AA48 BL 0x1C16CF4
	0x03E9AA4C ADRP X0, 0x2A0000
	0x03E9AA50 LDR X0, [X0 + 0xA60]
	0x03E9AA54 BL 0x1C16CF4
	0x03E9AA58 ADRP X0, 0x2A0000
	0x03E9AA5C LDR X0, [X0 + 0xA68]
	0x03E9AA60 BL 0x1C16CF4
	0x03E9AA64 ADRP X0, 0x2D3000
	0x03E9AA68 LDR X0, [X0 + 0xF08]
	0x03E9AA6C BL 0x1C16CF4
	0x03E9AA70 ADRP X0, 0x2D3000
	0x03E9AA74 LDR X0, [X0 + 0xF10]
	0x03E9AA78 BL 0x1C16CF4
	0x03E9AA7C ADRP X0, 0x2D3000
	0x03E9AA80 LDR X0, [X0 + 0xF18]
	0x03E9AA84 BL 0x1C16CF4
	0x03E9AA88 ADRP X0, 0x2D3000
	0x03E9AA8C LDR X0, [X0 + 0xF20]
	0x03E9AA90 BL 0x1C16CF4
	0x03E9AA94 ADRP X0, 0x2D2000
	0x03E9AA98 LDR X0, [X0 + 0x518]
	0x03E9AA9C BL 0x1C16CF4
	0x03E9AAA0 ADRP X0, 0x2A0000
	0x03E9AAA4 LDR X0, [X0 + 0xA70]
	0x03E9AAA8 BL 0x1C16CF4
	0x03E9AAAC ADRP X0, 0x2A0000
	0x03E9AAB0 LDR X0, [X0 + 0xA78]
	0x03E9AAB4 BL 0x1C16CF4
	0x03E9AAB8 ADRP X0, 0x2D3000
	0x03E9AABC LDR X0, [X0 + 0xF28]
	0x03E9AAC0 BL 0x1C16CF4
	0x03E9AAC4 ADRP X0, 0x2D3000
	0x03E9AAC8 LDR X0, [X0 + 0xF30]
	0x03E9AACC BL 0x1C16CF4
	0x03E9AAD0 ADRP X0, 0x2A0000
	0x03E9AAD4 LDR X0, [X0 + 0xA80]
	0x03E9AAD8 BL 0x1C16CF4
	0x03E9AADC ADRP X0, 0x281000
	0x03E9AAE0 LDR X0, [X0 + 0xB28]
	0x03E9AAE4 BL 0x1C16CF4
	0x03E9AAE8 ADRP X0, 0x2D3000
	0x03E9AAEC LDR X0, [X0 + 0xF38]
	0x03E9AAF0 BL 0x1C16CF4
	0x03E9AAF4 ADRP X0, 0x2A0000
	0x03E9AAF8 LDR X0, [X0 + 0xA88]
	0x03E9AAFC BL 0x1C16CF4
	0x03E9AB00 ADRP X0, 0x2D3000
	0x03E9AB04 LDR X0, [X0 + 0xF40]
	0x03E9AB08 BL 0x1C16CF4
	0x03E9AB0C ADRP X0, 0x2D3000
	0x03E9AB10 LDR X0, [X0 + 0xF48]
	0x03E9AB14 BL 0x1C16CF4
	0x03E9AB18 ADRP X0, 0x2D3000
	0x03E9AB1C LDR X0, [X0 + 0xF50]
	0x03E9AB20 BL 0x1C16CF4
	0x03E9AB24 ADRP X0, 0x2D3000
	0x03E9AB28 LDR X0, [X0 + 0xF58]
	0x03E9AB2C BL 0x1C16CF4
	0x03E9AB30 ADRP X0, 0x2A0000
	0x03E9AB34 LDR X0, [X0 + 0xA90]
	0x03E9AB38 BL 0x1C16CF4
	0x03E9AB3C ADRP X0, 0x2A6000
	0x03E9AB40 LDR X0, [X0 + 0x3C0]
	0x03E9AB44 BL 0x1C16CF4
	0x03E9AB48 ADRP X0, 0x2D3000
	0x03E9AB4C LDR X0, [X0 + 0xF60]
	0x03E9AB50 BL 0x1C16CF4
	0x03E9AB54 ADRP X0, 0x2D2000
	0x03E9AB58 LDR X0, [X0 + 0x520]
	0x03E9AB5C BL 0x1C16CF4
	0x03E9AB60 ADRP X0, 0x294000
	0x03E9AB64 LDR X0, [X0 + 0x7D0]
	0x03E9AB68 BL 0x1C16CF4
	0x03E9AB6C ADRP X0, 0x2D3000
	0x03E9AB70 LDR X0, [X0 + 0xF68]
	0x03E9AB74 BL 0x1C16CF4
	0x03E9AB78 ADRP X0, 0x2A0000
	0x03E9AB7C LDR X0, [X0 + 0xA98]
	0x03E9AB80 BL 0x1C16CF4
	0x03E9AB84 ADRP X0, 0x2D3000
	0x03E9AB88 LDR X0, [X0 + 0xF70]
	0x03E9AB8C BL 0x1C16CF4
	0x03E9AB90 ADRP X0, 0x2A0000
	0x03E9AB94 LDR X0, [X0 + 0xAA0]
	0x03E9AB98 BL 0x1C16CF4
	0x03E9AB9C ADRP X0, 0x2D3000
	0x03E9ABA0 LDR X0, [X0 + 0xF78]

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X20, 0x54F000
	011 Move W8, [X20+3746]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {37}
	017 Move X0, 0x25A000
	018 Move X0, [X0+3584]
	019 Call 0x1C17CF4
	020 Move X0, 0x262000
	021 Move X0, [X0+1368]
	022 Call 0x1C17CF4
	023 Move X0, 0x2D4000
	024 Move X0, [X0+504]
	025 Call 0x1C17CF4
	026 Move X0, 0x288000
	027 Move X0, [X0+3336]
	028 Call 0x1C17CF4
	029 Move X0, 0x2A1000
	030 Move X0, [X0+2952]
	031 Call 0x1C17CF4
	032 Move X0, 0x2A1000
	033 Move X0, [X0+344]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X20+3746], W8
	037 Move X0, [X19+64]
	038 Compare X0, 0
	039 JumpIfEqual {217}
	040 Move W8, [X0+104]
	041 Compare W8, 0
	042 JumpIfNotEqual {56}
	043 Move X8, [X19+40]
	044 Compare X8, 0
	045 JumpIfEqual {217}
	046 Move X9, [X8]
	047 Move X20, [X0+32]
	048 Move X0, X8
	049 Move X10, [X9+488]
	050 Move X1, [X9+496]
	051 NotImplemented "Instruction BLR not yet implemented."
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Move X0, [X19+64]
	054 Compare X0, 0
	055 JumpIfEqual {217}
	056 Call HttpListenerResponse.get_StatusLine, X0
	057 Move X8, [X19+64]
	058 Compare X8, 0
	059 JumpIfEqual {217}
	060 Move X20, 0x262000
	061 Move X23, 0x288000
	062 Move X25, 0x25A000
	063 Move X20, [X20+1368]
	064 Move X23, [X23+3336]
	065 Move X25, [X25+3584]
	066 Move X24, X0
	067 Move X0, X8
	068 Call HttpListenerResponse.get_FullHeaders, X0
	069 Move X8, [X20]
	070 Move X21, X0
	071 Move X0, X8
	072 Call 0x1C17F10
	073 Move X1, X31
	074 Move X22, X0
	075 Call MemoryStream..ctor, X0
	076 Move X0, X31
	077 Call Encoding.get_UTF8
	078 Move X8, [X23]
	079 Move X23, X0
	080 Move X0, X8
	081 Call 0x1C17F10
	082 Move W3, 256
	083 Move X1, X22
	084 Move X2, X23
	085 Move X4, X31
	086 Move X20, X0
	087 Call StreamWriter..ctor, X0, X1, X2, X3
	088 Compare X20, 0
	089 JumpIfEqual {218}
	090 Move X8, [X20]
	091 Move X9, [X8+584]
	092 Move X2, [X8+592]
	093 Move X0, X20
	094 Move X1, X24
	095 NotImplemented "Instruction BLR not yet implemented."
	096 Compare X21, 0
	097 JumpIfEqual {221}
	098 Move W1, 1
	099 Move X0, X21
	100 Call WebHeaderCollection.ToStringMultiValue, X0, X1
	101 Move X1, X0
	102 Move X8, [X20]
	103 Move X9, [X8+584]
	104 Move X2, [X8+592]
	105 Move X0, X20
	106 NotImplemented "Instruction BLR not yet implemented."
	107 Move X8, [X20]
	108 Move X9, [X8+472]
	109 Move X1, [X8+480]
	110 Move X0, X20
	111 NotImplemented "Instruction BLR not yet implemented."
	112 Compare X23, 0
	113 JumpIfEqual {222}
	114 Move X8, [X23]
	115 Move X9, [X8+408]
	116 Move X1, [X8+416]
	117 Move X0, X23
	118 NotImplemented "Instruction BLR not yet implemented."
	119 Compare X0, 0
	120 JumpIfEqual {223}
	121 Compare X22, 0
	122 JumpIfEqual {224}
	123 Move X8, [X22]
	124 Move X23, [X0+24]
	125 Move X9, [X8+488]
	126 Move X1, [X8+496]
	127 Move X0, X22
	128 NotImplemented "Instruction BLR not yet implemented."
	129 Move X26, 0x2D4000
	130 Move X26, [X26+504]
	131 Move X24, X0
	132 Move X0, [X26]
	133 Move W8, [X0+224]
	134 Compare W8, 0
	135 JumpIfNotEqual {138}
	136 Call 0x1C17DFC
	137 Move X0, [X26]
	138 Move X8, [X0+184]
	139 Subtract X24, X24, W23
	140 NotImplemented "Instruction LDRSW not yet implemented."
	141 NotImplemented "Instruction CMP not yet implemented."
	142 Move X22, X31
	143 Move W23, 4
	144 Move X8, [X22]
	145 Move X26, [X19+80]
	146 Move X1, [X8+960]
	147 Move X9, [X8+952]
	148 Move X0, X22
	149 NotImplemented "Instruction BLR not yet implemented."
	150 Move X1, X0
	151 Compare X26, 0
	152 JumpIfEqual {225}
	153 Move X0, [X26+64]
	154 Move X8, [X26+24]
	155 Move X4, [X26+40]
	156 Move W2, W23
	157 Move W3, W24
	158 NotImplemented "Instruction BLR not yet implemented."
	159 Move X22, X31
	160 Move W23, 6
	161 Move X8, [X20]
	162 Move X1, [X25]
	163 NotImplemented "Instruction LDRH not yet implemented."
	164 Compare X9, 0
	165 JumpIfEqual {172}
	166 Move X10, [X8+176]
	167 Add X10, X10, 8
	168 NotImplemented "Instruction LDUR not yet implemented."
	169 NotImplemented "Instruction CMP not yet implemented."
	170 Subtract X9, X9, 1
	171 Add X10, X10, 16
	172 Move X0, X20
	173 Move W2, W31
	174 Call 0x1C5D788
	175 NotImplemented "Instruction LDRSW not yet implemented."
	176 Add X8, X8, X9
	177 Add X0, X8, 312
	178 Move X8, [X0]
	179 Move X1, [X0+8]
	180 Move X0, X20
	181 NotImplemented "Instruction BLR not yet implemented."
	182 Compare X22, 0
	183 JumpIfNotEqual {219}
	184 NotImplemented "Instruction CMP not yet implemented."
	185 Compare W23, 0
	186 JumpIfNotEqual {206}
	187 Compare X21, 0
	188 JumpIfEqual {217}
	189 Move X8, 0x2A1000
	190 Move X8, [X8+344]
	191 Move X20, 0x2A1000
	192 Move X19, [X19+64]
	193 Move X0, X21
	194 Move X1, [X8]
	195 Move X20, [X20+2952]
	196 Move X2, X31
	197 Call NameValueCollection.get_Item, X0, X1
	198 Move X1, [X20]
	199 Move X2, X31
	200 Call String.op_Equality, X0, X1
	201 Compare X19, 0
	202 JumpIfEqual {217}
	203 And W8, W0, 1
	204 Move W0, 1
	205 Move [X19+16], W8
	206 Move W0, W31
	207 Move X20, [X31+64]
	208 Move X19, [X31+72]
	209 Move X22, [X31+48]
	210 Move X21, [X31+56]
	211 Move X24, [X31+32]
	212 Move X23, [X31+40]
	213 Move X26, [X31+16]
	214 Move X25, [X31+24]
	215 Move X30, [X31+80]
	216 Return X0
	217 Call 0x1C17F20
	218 Call 0x1C17F20
	219 Move X0, X22
	220 Call 0x1C17F18
	221 Call 0x1C17F20
	222 Call 0x1C17F20
	223 Call 0x1C17F20
	224 Call 0x1C17F20
	225 Call 0x1C17F20
	226 Move X23, X0
	227 NotImplemented "Instruction CMP not yet implemented."
	228 Move X0, X23
	229 Call 0x3EB2AD0
	230 Move X22, [X0]
	231 Call 0x3EB2AE0
	232 Move W23, W31
	233 Compare X20, 0
	234 JumpIfNotEqual {161}
	235 Move X22, X31
	236 Move X23, X0
	237 Compare X20, 0
	238 JumpIfEqual {260}
	239 Move X8, [X20]
	240 Move X1, [X25]
	241 NotImplemented "Instruction LDRH not yet implemented."
	242 Compare X9, 0
	243 JumpIfEqual {250}
	244 Move X10, [X8+176]
	245 Add X10, X10, 8
	246 NotImplemented "Instruction LDUR not yet implemented."
	247 NotImplemented "Instruction CMP not yet implemented."
	248 Subtract X9, X9, 1
	249 Add X10, X10, 16
	250 Move X0, X20
	251 Move W2, W31
	252 Call 0x1C5D788
	253 NotImplemented "Instruction LDRSW not yet implemented."
	254 Add X8, X8, X9
	255 Add X0, X8, 312
	256 Move X8, [X0]
	257 Move X1, [X0+8]
	258 Move X0, X20
	259 NotImplemented "Instruction BLR not yet implemented."
	260 Compare X22, 0
	261 JumpIfNotEqual {264}
	262 Move X0, X23
	263 Call 0x1D2D690
	264 Move X0, X22
	265 Call 0x1C17F18
	266 Call 0x1991590

Method: System.Byte[] getChunkSizeBytes(System.Int32 size)

Disassembly:
	0x03E9B0FC STR X23, [X20 + 0x10]
	0x03E9B100 STR W24, [X20 + 0x18]
	0x03E9B104 ADRP X8, 0x2D2000
	0x03E9B108 LDR X8, [X8 + 0xF80]
	0x03E9B10C LDR X3, [X22]
	0x03E9B110 MOV X0, X19
	0x03E9B114 MOV X2, X20
	0x03E9B118 LDR X1, [X8]
	0x03E9B11C BL 0x2AA5098
	0x03E9B120 LDR X0, [X21]
	0x03E9B124 BL 0x1C16F10
	0x03E9B128 ADRP X8, 0x29F000
	0x03E9B12C LDR X8, [X8 + 0xA38]
	0x03E9B130 MOV X1, X31
	0x03E9B134 MOV X20, X0
	0x03E9B138 LDR X23, [X8]
	0x03E9B13C BL 0x33BDD8C
	0x03E9B140 STR X23, [X20 + 0x10]
	0x03E9B144 STR W24, [X20 + 0x18]
	0x03E9B148 ADRP X8, 0x2D2000
	0x03E9B14C LDR X8, [X8 + 0xF28]
	0x03E9B150 LDR X3, [X22]
	0x03E9B154 MOV X0, X19
	0x03E9B158 MOV X2, X20
	0x03E9B15C LDR X1, [X8]
	0x03E9B160 BL 0x2AA5098
	0x03E9B164 LDR X0, [X21]
	0x03E9B168 BL 0x1C16F10
	0x03E9B16C ADRP X8, 0x29F000
	0x03E9B170 LDR X8, [X8 + 0xAF8]
	0x03E9B174 MOV X1, X31
	0x03E9B178 MOV X20, X0
	0x03E9B17C LDR X23, [X8]
	0x03E9B180 BL 0x33BDD8C
	0x03E9B184 STR X23, [X20 + 0x10]
	0x03E9B188 STR W24, [X20 + 0x18]
	0x03E9B18C ADRP X8, 0x2D2000
	0x03E9B190 LDR X8, [X8 + 0xEC8]
	0x03E9B194 LDR X3, [X22]
	0x03E9B198 MOV X0, X19
	0x03E9B19C MOV X2, X20
	0x03E9B1A0 LDR X1, [X8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x54E000
	007 Move X21, 0x259000
	008 Move X20, 0x2D3000
	009 Move W8, [X22+3747]
	010 Move X21, [X21+1880]
	011 Move X20, [X20+3664]
	012 Move W19, W0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x259000
	018 Move X0, [X0+1880]
	019 Call 0x1C17CF4
	020 Move X0, 0x2D3000
	021 Move X0, [X0+3664]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X22+3747], W8
	025 Move X0, [X21]
	026 Add X1, X31, 12
	027 Move [X31+12], W19
	028 Call 0x1C17E04
	029 Move X8, [X20]
	030 Move X1, X0
	031 Move X2, X31
	032 Move X0, X8
	033 Call String.Format, X0, X1
	034 Move X19, X0
	035 Move X0, X31
	036 Call Encoding.get_ASCII
	037 Compare X0, 0
	038 JumpIfEqual {50}
	039 Move X8, [X0]
	040 Move X1, X19
	041 Move X9, [X8+616]
	042 Move X2, [X8+624]
	043 NotImplemented "Instruction BLR not yet implemented."
	044 Move X20, [X31+32]
	045 Move X19, [X31+40]
	046 Move X22, [X31+16]
	047 Move X21, [X31+24]
	048 Move X30, [X31+48]
	049 Return X0
	050 Call 0x1C17F20

Method: System.Void writeChunked(System.Byte[] buffer, System.Int32 offset, System.Int32 count)

Disassembly:
	0x03E9B1A4 BL 0x2AA5098
	0x03E9B1A8 LDR X0, [X21]
	0x03E9B1AC BL 0x1C16F10
	0x03E9B1B0 ADRP X8, 0x293000
	0x03E9B1B4 LDR X8, [X8 + 0x988]
	0x03E9B1B8 MOV X1, X31
	0x03E9B1BC MOV X20, X0
	0x03E9B1C0 LDR X23, [X8]
	0x03E9B1C4 BL 0x33BDD8C
	0x03E9B1C8 STR X23, [X20 + 0x10]
	0x03E9B1CC STR W25, [X20 + 0x18]
	0x03E9B1D0 ADRP X8, 0x2D2000
	0x03E9B1D4 LDR X8, [X8 + 0xF20]
	0x03E9B1D8 LDR X3, [X22]
	0x03E9B1DC MOV X0, X19
	0x03E9B1E0 MOV X2, X20
	0x03E9B1E4 LDR X1, [X8]
	0x03E9B1E8 MOVZ W25, 0x7
	0x03E9B1EC BL 0x2AA5098
	0x03E9B1F0 LDR X0, [X21]
	0x03E9B1F4 BL 0x1C16F10
	0x03E9B1F8 ADRP X28, 0x2A3000
	0x03E9B1FC LDR X28, [X28 + 0x200]
	0x03E9B200 MOV X1, X31
	0x03E9B204 MOV X20, X0
	0x03E9B208 LDR X23, [X28]
	0x03E9B20C BL 0x33BDD8C
	0x03E9B210 MOVZ W27, 0x1
	0x03E9B214 STR X23, [X20 + 0x10]
	0x03E9B218 STR W27, [X20 + 0x18]
	0x03E9B21C LDR X1, [X28]
	0x03E9B220 LDR X3, [X22]
	0x03E9B224 MOV X0, X19
	0x03E9B228 MOV X2, X20
	0x03E9B22C BL 0x2AA5098
	0x03E9B230 LDR X0, [X21]
	0x03E9B234 BL 0x1C16F10
	0x03E9B238 ADRP X28, 0x2D2000
	0x03E9B23C LDR X28, [X28 + 0xFB8]
	0x03E9B240 MOV X1, X31
	0x03E9B244 MOV X20, X0
	0x03E9B248 LDR X23, [X28]
	0x03E9B24C BL 0x33BDD8C
	0x03E9B250 STR X23, [X20 + 0x10]
	0x03E9B254 STR W27, [X20 + 0x18]
	0x03E9B258 LDR X1, [X28]
	0x03E9B25C LDR X3, [X22]
	0x03E9B260 MOV X0, X19
	0x03E9B264 MOV X2, X20
	0x03E9B268 BL 0x2AA5098
	0x03E9B26C LDR X0, [X21]
	0x03E9B270 BL 0x1C16F10
	0x03E9B274 ADRP X28, 0x29F000
	0x03E9B278 LDR X28, [X28 + 0xA18]
	0x03E9B27C MOV X1, X31
	0x03E9B280 MOV X20, X0
	0x03E9B284 LDR X23, [X28]
	0x03E9B288 BL 0x33BDD8C
	0x03E9B28C STR X23, [X20 + 0x10]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0x54E000
	009 Move X23, 0x2D3000
	010 Move W8, [X24+3748]
	011 Move X23, [X23+504]
	012 Move W20, W3
	013 Move W21, W2
	014 Move X22, X1
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {25}
	020 Move X0, 0x2D3000
	021 Move X0, [X0+504]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X24+3748], W8
	025 Move X0, [X23]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {30}
	029 Call 0x1C17DFC
	030 Move W0, W20
	031 Call ResponseStream.getChunkSizeBytes, X0
	032 Compare X0, 0
	033 JumpIfEqual {73}
	034 Move X1, X0
	035 Move X0, [X19+56]
	036 Compare X0, 0
	037 JumpIfEqual {73}
	038 Move X8, [X0]
	039 Move W3, [X1+24]
	040 Move W2, W31
	041 Move X9, [X8+904]
	042 Move X4, [X8+912]
	043 NotImplemented "Instruction BLR not yet implemented."
	044 Move X0, [X19+56]
	045 Compare X0, 0
	046 JumpIfEqual {73}
	047 Move X8, [X0]
	048 Move X1, X22
	049 Move W2, W21
	050 Move W3, W20
	051 Move X9, [X8+904]
	052 Move X4, [X8+912]
	053 NotImplemented "Instruction BLR not yet implemented."
	054 Move X0, [X19+56]
	055 Compare X0, 0
	056 JumpIfEqual {73}
	057 Move X8, [X23]
	058 Move X9, [X0]
	059 Move X20, [X31+48]
	060 Move X19, [X31+56]
	061 Move X22, [X31+32]
	062 Move X21, [X31+40]
	063 Move X8, [X8+184]
	064 Move X5, [X9+904]
	065 Move X4, [X9+912]
	066 Move X24, [X31+16]
	067 Move X23, [X31+24]
	068 Move X1, [X8]
	069 Move W3, 2
	070 Move W2, W31
	071 Move X30, [X31+64]
	072 CallNoReturn X5
	073 Call 0x1C17F20

Method: System.Void writeChunkedWithoutThrowingException(System.Byte[] buffer, System.Int32 offset, System.Int32 count)

Disassembly:
	0x03E9B290 STR W25, [X20 + 0x18]
	0x03E9B294 LDR X1, [X28]
	0x03E9B298 LDR X3, [X22]
	0x03E9B29C MOV X0, X19
	0x03E9B2A0 MOV X2, X20
	0x03E9B2A4 BL 0x2AA5098
	0x03E9B2A8 LDR X0, [X21]
	0x03E9B2AC BL 0x1C16F10
	0x03E9B2B0 ADRP X25, 0x29F000
	0x03E9B2B4 LDR X25, [X25 + 0xAD8]
	0x03E9B2B8 MOV X1, X31
	0x03E9B2BC MOV X20, X0
	0x03E9B2C0 LDR X23, [X25]
	0x03E9B2C4 BL 0x33BDD8C
	0x03E9B2C8 MOVZ W8, 0xD
	0x03E9B2CC STR X23, [X20 + 0x10]
	0x03E9B2D0 STR W8, [X20 + 0x18]
	0x03E9B2D4 LDR X1, [X25]
	0x03E9B2D8 LDR X3, [X22]
	0x03E9B2DC MOV X0, X19
	0x03E9B2E0 MOV X2, X20
	0x03E9B2E4 BL 0x2AA5098
	0x03E9B2E8 LDR X0, [X21]
	0x03E9B2EC BL 0x1C16F10
	0x03E9B2F0 ADRP X25, 0x29F000
	0x03E9B2F4 LDR X25, [X25 + 0xA78]
	0x03E9B2F8 MOV X1, X31
	0x03E9B2FC MOV X20, X0
	0x03E9B300 LDR X23, [X25]
	0x03E9B304 BL 0x33BDD8C
	0x03E9B308 STR X23, [X20 + 0x10]
	0x03E9B30C STR W24, [X20 + 0x18]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Call ResponseStream.writeChunked, X0, X1, X2, X3
	004 Move X30, [X31+16]
	005 Move X19, [X31+24]
	006 Return 
	007 NotImplemented "Instruction CMP not yet implemented."
	008 Move X19, X0
	009 Move X0, X19
	010 Call 0x3EB2AD0
	011 Move X19, X0
	012 Move X0, 0x25F000
	013 Move X0, [X0+3264]
	014 Call 0x1C17D08
	015 Move X8, [X19]
	016 Move X1, [X8]
	017 Call 0x1C18270
	018 Move TEMP, X0
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfNotEqual {26}
	022 Move X30, [X31+16]
	023 Move X19, [X31+24]
	024 Call 0x3EB2AE0
	025 Return 
	026 Move W0, 8
	027 Call 0x3EB2AF0
	028 Move X8, [X19]
	029 Move [X0], X8
	030 Move X1, 0x1A000
	031 Add X1, X1, 3672
	032 Move X2, X31
	033 Call 0x3EB2B00
	034 Move X19, X0
	035 Call 0x3EB2AE0
	036 Move X0, X19
	037 Call 0x1D2D690
	038 Call 0x1991590

Method: System.Void writeWithoutThrowingException(System.Byte[] buffer, System.Int32 offset, System.Int32 count)

Disassembly:
	0x03E9B310 LDR X1, [X25]
	0x03E9B314 LDR X3, [X22]
	0x03E9B318 MOV X0, X19
	0x03E9B31C MOV X2, X20
	0x03E9B320 BL 0x2AA5098
	0x03E9B324 LDR X0, [X21]
	0x03E9B328 BL 0x1C16F10
	0x03E9B32C ADRP X25, 0x29F000
	0x03E9B330 LDR X25, [X25 + 0xA10]
	0x03E9B334 MOV X1, X31
	0x03E9B338 MOV X20, X0
	0x03E9B33C LDR X23, [X25]
	0x03E9B340 BL 0x33BDD8C
	0x03E9B344 MOVZ W29, 0x2
	0x03E9B348 STR X23, [X20 + 0x10]
	0x03E9B34C STR W29, [X20 + 0x18]
	0x03E9B350 LDR X1, [X25]
	0x03E9B354 LDR X3, [X22]
	0x03E9B358 MOV X0, X19
	0x03E9B35C MOV X2, X20
	0x03E9B360 BL 0x2AA5098
	0x03E9B364 LDR X0, [X21]
	0x03E9B368 BL 0x1C16F10
	0x03E9B36C ADRP X25, 0x29F000
	0x03E9B370 LDR X25, [X25 + 0xA70]
	0x03E9B374 MOV X1, X31
	0x03E9B378 MOV X20, X0
	0x03E9B37C LDR X23, [X25]
	0x03E9B380 BL 0x33BDD8C
	0x03E9B384 STR X23, [X20 + 0x10]
	0x03E9B388 STR W27, [X20 + 0x18]
	0x03E9B38C LDR X1, [X25]
	0x03E9B390 LDR X3, [X22]
	0x03E9B394 MOV X0, X19
	0x03E9B398 MOV X2, X20
	0x03E9B39C BL 0x2AA5098
	0x03E9B3A0 LDR X0, [X21]
	0x03E9B3A4 BL 0x1C16F10

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, [X0+56]
	004 Compare X0, 0
	005 JumpIfEqual {13}
	006 Move X8, [X0]
	007 Move X9, [X8+904]
	008 Move X4, [X8+912]
	009 NotImplemented "Instruction BLR not yet implemented."
	010 Move X30, [X31+16]
	011 Move X19, [X31+24]
	012 Return 
	013 Call 0x1C17F20
	014 NotImplemented "Instruction CMP not yet implemented."
	015 Move X19, X0
	016 Move X0, X19
	017 Call 0x3EB2AD0
	018 Move X19, X0
	019 Move X0, 0x25F000
	020 Move X0, [X0+3264]
	021 Call 0x1C17D08
	022 Move X8, [X19]
	023 Move X1, [X8]
	024 Call 0x1C18270
	025 Move TEMP, X0
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfNotEqual {33}
	029 Move X30, [X31+16]
	030 Move X19, [X31+24]
	031 Call 0x3EB2AE0
	032 Return 
	033 Move W0, 8
	034 Call 0x3EB2AF0
	035 Move X8, [X19]
	036 Move [X0], X8
	037 Move X1, 0x1A000
	038 Add X1, X1, 3672
	039 Move X2, X31
	040 Call 0x3EB2B00
	041 Move X19, X0
	042 Call 0x3EB2AE0
	043 Move X0, X19
	044 Call 0x1D2D690
	045 Call 0x1991590

Method: System.Void Close(System.Boolean force)

Disassembly:
	0x03E9B3A8 ADRP X28, 0x29F000
	0x03E9B3AC LDR X28, [X28 + 0x188]
	0x03E9B3B0 MOV X1, X31
	0x03E9B3B4 MOV X20, X0
	0x03E9B3B8 LDR X23, [X28]
	0x03E9B3BC BL 0x33BDD8C
	0x03E9B3C0 MOVZ W8, 0x5
	0x03E9B3C4 STR X23, [X20 + 0x10]
	0x03E9B3C8 STR W8, [X20 + 0x18]
	0x03E9B3CC LDR X1, [X28]
	0x03E9B3D0 LDR X3, [X22]
	0x03E9B3D4 MOV X0, X19
	0x03E9B3D8 MOV X2, X20
	0x03E9B3DC MOVZ W25, 0x5
	0x03E9B3E0 BL 0x2AA5098
	0x03E9B3E4 LDR X0, [X21]
	0x03E9B3E8 BL 0x1C16F10
	0x03E9B3EC ADRP X8, 0x29F000
	0x03E9B3F0 LDR X8, [X8 + 0xA58]
	0x03E9B3F4 MOV X1, X31
	0x03E9B3F8 MOV X20, X0
	0x03E9B3FC LDR X23, [X8]
	0x03E9B400 BL 0x33BDD8C
	0x03E9B404 STR X23, [X20 + 0x10]
	0x03E9B408 STR W26, [X20 + 0x18]
	0x03E9B40C ADRP X8, 0x2D2000
	0x03E9B410 LDR X8, [X8 + 0xFB0]
	0x03E9B414 LDR X3, [X22]
	0x03E9B418 MOV X0, X19
	0x03E9B41C MOV X2, X20
	0x03E9B420 LDR X1, [X8]
	0x03E9B424 BL 0x2AA5098
	0x03E9B428 LDR X0, [X21]
	0x03E9B42C BL 0x1C16F10
	0x03E9B430 ADRP X8, 0x29F000
	0x03E9B434 LDR X8, [X8 + 0xAA0]
	0x03E9B438 MOV X1, X31
	0x03E9B43C MOV X20, X0
	0x03E9B440 LDR X23, [X8]
	0x03E9B444 BL 0x33BDD8C
	0x03E9B448 STR X23, [X20 + 0x10]
	0x03E9B44C STR W25, [X20 + 0x18]
	0x03E9B450 ADRP X8, 0x2D2000
	0x03E9B454 LDR X8, [X8 + 0xF00]
	0x03E9B458 LDR X3, [X22]
	0x03E9B45C MOV X0, X19
	0x03E9B460 MOV X2, X20
	0x03E9B464 LDR X1, [X8]
	0x03E9B468 MOVZ W28, 0x5
	0x03E9B46C BL 0x2AA5098
	0x03E9B470 LDR X0, [X21]
	0x03E9B474 BL 0x1C16F10
	0x03E9B478 ADRP X8, 0x29F000
	0x03E9B47C LDR X8, [X8 + 0xAE0]
	0x03E9B480 MOV X1, X31
	0x03E9B484 MOV X20, X0
	0x03E9B488 LDR X23, [X8]
	0x03E9B48C BL 0x33BDD8C
	0x03E9B490 STR X23, [X20 + 0x10]
	0x03E9B494 STR W26, [X20 + 0x18]
	0x03E9B498 ADRP X8, 0x2D2000
	0x03E9B49C LDR X8, [X8 + 0xF70]
	0x03E9B4A0 LDR X3, [X22]
	0x03E9B4A4 MOV X0, X19
	0x03E9B4A8 MOV X2, X20
	0x03E9B4AC LDR X1, [X8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x54E000
	006 Move W8, [X21+3749]
	007 Move W20, W1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x2D3000
	014 Move X0, [X0+504]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+3749], W8
	018 Move W8, [X19+48]
	019 Compare W8, 0
	020 JumpIfNotEqual {83}
	021 Move W8, 1
	022 Move [X19+48], W8
	023 Move TEMP, X20
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {45}
	027 Move W1, 1
	028 Move X0, X19
	029 Call ResponseStream.flush, X0, X1
	030 Move X8, [X19+64]
	031 Compare X8, 0
	032 JumpIfEqual {88}
	033 Move TEMP, X0
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfNotEqual {43}
	037 Move W9, [X8+64]
	038 Compare W9, 0
	039 JumpIfNotEqual {81}
	040 Move X0, X8
	041 Move W1, W31
	042 Call HttpListenerResponse.close, X0, X1
	043 Move W9, 1
	044 Move [X8+16], W9
	045 Move W8, [X19+72]
	046 Compare W8, 0
	047 JumpIfEqual {67}
	048 Move X21, 0x2D3000
	049 Move X21, [X21+504]
	050 Move X20, [X19+80]
	051 Move X0, [X21]
	052 Move W8, [X0+224]
	053 Compare W8, 0
	054 JumpIfNotEqual {56}
	055 Call 0x1C17DFC
	056 Compare X20, 0
	057 JumpIfEqual {88}
	058 Move X8, [X21]
	059 Move X9, [X20+24]
	060 Move X0, [X20+64]
	061 Move X4, [X20+40]
	062 Move X8, [X8+184]
	063 Move W3, 5
	064 Move W2, W31
	065 Move X1, [X8+8]
	066 NotImplemented "Instruction BLR not yet implemented."
	067 Move X0, [X19+40]
	068 Compare X0, 0
	069 JumpIfEqual {88}
	070 Move X1, X31
	071 Call Stream.Dispose, X0
	072 Move X0, [X19+64]
	073 Compare X0, 0
	074 JumpIfEqual {88}
	075 Move W8, [X0+64]
	076 Compare W8, 0
	077 JumpIfNotEqual {80}
	078 Move W1, 1
	079 Call HttpListenerResponse.close, X0, X1
	080 Move [X19+40], X31
	081 Move [X19+56], X31
	082 Move [X19+64], X31
	083 Move X20, [X31+16]
	084 Move X19, [X31+24]
	085 Move X30, [X31+32]
	086 Move X21, [X31+40]
	087 Return 
	088 Call 0x1C17F20

Method: System.Void InternalWrite(System.Byte[] buffer, System.Int32 offset, System.Int32 count)

Disassembly:
	0x03E9B4B0 BL 0x2AA5098
	0x03E9B4B4 LDR X0, [X21]
	0x03E9B4B8 BL 0x1C16F10
	0x03E9B4BC ADRP X8, 0x29F000
	0x03E9B4C0 LDR X8, [X8 + 0xA50]
	0x03E9B4C4 MOV X1, X31
	0x03E9B4C8 MOV X20, X0
	0x03E9B4CC LDR X23, [X8]
	0x03E9B4D0 BL 0x33BDD8C

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+80]
	003 Compare X8, 0
	004 JumpIfEqual {10}
	005 Move X5, [X8+24]
	006 Move X0, [X8+64]
	007 Move X4, [X8+40]
	008 Move X30, [X31+16]
	009 CallNoReturn X5
	010 Call 0x1C17F20

Method: System.IAsyncResult BeginRead(System.Byte[] buffer, System.Int32 offset, System.Int32 count, System.AsyncCallback callback, System.Object state)

Disassembly:
	0x03E9B4D4 STR X23, [X20 + 0x10]
	0x03E9B4D8 STR W27, [X20 + 0x18]
	0x03E9B4DC ADRP X8, 0x2D2000
	0x03E9B4E0 LDR X8, [X8 + 0xEB8]
	0x03E9B4E4 LDR X3, [X22]
	0x03E9B4E8 MOV X0, X19
	0x03E9B4EC MOV X2, X20
	0x03E9B4F0 LDR X1, [X8]
	0x03E9B4F4 BL 0x2AA5098
	0x03E9B4F8 LDR X0, [X21]
	0x03E9B4FC BL 0x1C16F10
	0x03E9B500 ADRP X8, 0x29F000
	0x03E9B504 LDR X8, [X8 + 0xAB8]
	0x03E9B508 MOV X1, X31

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0x259000
	004 Move X0, [X0+2880]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X1, X31
	008 Move X19, X0
	009 Call NotSupportedException..ctor, X0
	010 Move X0, 0x2D3000
	011 Move X0, [X0+3672]
	012 Call 0x1C17D08
	013 Move X1, X0
	014 Move X0, X19
	015 Call 0x1C17DEC

Method: System.IAsyncResult BeginWrite(System.Byte[] buffer, System.Int32 offset, System.Int32 count, System.AsyncCallback callback, System.Object state)

Disassembly:
	0x03E9B50C MOV X20, X0
	0x03E9B510 LDR X23, [X8]
	0x03E9B514 BL 0x33BDD8C
	0x03E9B518 STR X23, [X20 + 0x10]
	0x03E9B51C STR W27, [X20 + 0x18]
	0x03E9B520 ADRP X8, 0x2D2000
	0x03E9B524 LDR X8, [X8 + 0xED0]
	0x03E9B528 LDR X3, [X22]
	0x03E9B52C MOV X0, X19
	0x03E9B530 MOV X2, X20
	0x03E9B534 LDR X1, [X8]
	0x03E9B538 BL 0x2AA5098
	0x03E9B53C LDR X0, [X21]
	0x03E9B540 BL 0x1C16F10
	0x03E9B544 ADRP X8, 0x29F000
	0x03E9B548 LDR X8, [X8 + 0x250]
	0x03E9B54C MOV X1, X31
	0x03E9B550 MOV X20, X0
	0x03E9B554 LDR X23, [X8]
	0x03E9B558 BL 0x33BDD8C
	0x03E9B55C MOVZ W8, 0xB
	0x03E9B560 STR X23, [X20 + 0x10]
	0x03E9B564 STR W8, [X20 + 0x18]
	0x03E9B568 ADRP X8, 0x2D2000
	0x03E9B56C LDR X8, [X8 + 0xF10]
	0x03E9B570 LDR X3, [X22]
	0x03E9B574 MOV X0, X19
	0x03E9B578 MOV X2, X20
	0x03E9B57C LDR X1, [X8]
	0x03E9B580 BL 0x2AA5098
	0x03E9B584 LDR X0, [X21]
	0x03E9B588 BL 0x1C16F10
	0x03E9B58C ADRP X8, 0x29F000
	0x03E9B590 LDR X8, [X8 + 0xA88]
	0x03E9B594 MOV X1, X31
	0x03E9B598 MOV X20, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W8, [X0+48]
	005 Compare W8, 0
	006 JumpIfNotEqual {17}
	007 Move X0, [X0+40]
	008 Compare X0, 0
	009 JumpIfEqual {41}
	010 Move X8, [X0]
	011 Move X20, [X31+16]
	012 Move X19, [X31+24]
	013 Move X7, [X8+760]
	014 Move X6, [X8+768]
	015 Move X30, [X31+32]
	016 CallNoReturn X7
	017 Move X1, X31
	018 Call "il2cpp_vm_object_is_inst", X0
	019 Move X19, X0
	020 Call 0x19913C0
	021 Move X8, [X19]
	022 Move X0, X19
	023 Move X9, [X8+360]
	024 Move X1, [X8+368]
	025 NotImplemented "Instruction BLR not yet implemented."
	026 Move X19, X0
	027 Move X0, 0x282000
	028 Move X0, [X0+1208]
	029 Call 0x1C17D08
	030 Call 0x1C17F10
	031 Move X1, X19
	032 Move X2, X31
	033 Move X20, X0
	034 Call ObjectDisposedException..ctor, X0, X1
	035 Move X0, 0x2D3000
	036 Move X0, [X0+3680]
	037 Call 0x1C17D08
	038 Move X1, X0
	039 Move X0, X20
	040 Call 0x1C17DEC
	041 Call 0x1C17F20

Method: System.Void Close()

Disassembly:
	0x03E9B59C LDR X23, [X8]
	0x03E9B5A0 BL 0x33BDD8C

ISIL:
	001 Move W1, W31
	002 Call ResponseStream.Close, X0, X1
	003 Return 

Method: System.Void Dispose(System.Boolean disposing)

Disassembly:
	0x03E9B5A4 STR X23, [X20 + 0x10]
	0x03E9B5A8 STR W24, [X20 + 0x18]
	0x03E9B5AC ADRP X8, 0x2D2000

ISIL:
	001 NotImplemented "Instruction ORN not yet implemented."
	002 And W1, W8, 1
	003 Call ResponseStream.Close, X0, X1
	004 Return 

Method: System.Int32 EndRead(System.IAsyncResult asyncResult)

Disassembly:
	0x03E9B5B0 LDR X8, [X8 + 0xF60]
	0x03E9B5B4 LDR X3, [X22]
	0x03E9B5B8 MOV X0, X19
	0x03E9B5BC MOV X2, X20
	0x03E9B5C0 LDR X1, [X8]
	0x03E9B5C4 BL 0x2AA5098
	0x03E9B5C8 LDR X0, [X21]
	0x03E9B5CC BL 0x1C16F10
	0x03E9B5D0 ADRP X26, 0x29F000
	0x03E9B5D4 LDR X26, [X26 + 0x9E0]
	0x03E9B5D8 MOV X1, X31
	0x03E9B5DC MOV X20, X0
	0x03E9B5E0 LDR X23, [X26]
	0x03E9B5E4 BL 0x33BDD8C

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0x259000
	004 Move X0, [X0+2880]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X1, X31
	008 Move X19, X0
	009 Call NotSupportedException..ctor, X0
	010 Move X0, 0x2D3000
	011 Move X0, [X0+3688]
	012 Call 0x1C17D08
	013 Move X1, X0
	014 Move X0, X19
	015 Call 0x1C17DEC

Method: System.Void EndWrite(System.IAsyncResult asyncResult)

Disassembly:
	0x03E9B5E8 STR X23, [X20 + 0x10]
	0x03E9B5EC STR W29, [X20 + 0x18]
	0x03E9B5F0 LDR X1, [X26]
	0x03E9B5F4 LDR X3, [X22]
	0x03E9B5F8 MOV X0, X19
	0x03E9B5FC MOV X2, X20
	0x03E9B600 BL 0x2AA5098
	0x03E9B604 LDR X0, [X21]
	0x03E9B608 BL 0x1C16F10
	0x03E9B60C ADRP X8, 0x29F000
	0x03E9B610 LDR X8, [X8 + 0xA20]
	0x03E9B614 MOV X1, X31
	0x03E9B618 MOV X20, X0
	0x03E9B61C LDR X23, [X8]
	0x03E9B620 BL 0x33BDD8C
	0x03E9B624 STR X23, [X20 + 0x10]
	0x03E9B628 STR W27, [X20 + 0x18]
	0x03E9B62C ADRP X8, 0x2D2000
	0x03E9B630 LDR X8, [X8 + 0xF58]
	0x03E9B634 LDR X3, [X22]
	0x03E9B638 MOV X0, X19
	0x03E9B63C MOV X2, X20
	0x03E9B640 LDR X1, [X8]
	0x03E9B644 BL 0x2AA5098
	0x03E9B648 LDR X0, [X21]
	0x03E9B64C BL 0x1C16F10
	0x03E9B650 ADRP X29, 0x29F000
	0x03E9B654 LDR X29, [X29 + 0x9F8]
	0x03E9B658 MOV X1, X31
	0x03E9B65C MOV X20, X0
	0x03E9B660 LDR X23, [X29]
	0x03E9B664 BL 0x33BDD8C
	0x03E9B668 STR X23, [X20 + 0x10]
	0x03E9B66C STR W24, [X20 + 0x18]
	0x03E9B670 LDR X1, [X29]
	0x03E9B674 LDR X3, [X22]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W8, [X0+48]
	005 Compare W8, 0
	006 JumpIfNotEqual {17}
	007 Move X0, [X0+40]
	008 Compare X0, 0
	009 JumpIfEqual {41}
	010 Move X8, [X0]
	011 Move X20, [X31+16]
	012 Move X19, [X31+24]
	013 Move X3, [X8+776]
	014 Move X2, [X8+784]
	015 Move X30, [X31+32]
	016 CallNoReturn X3
	017 Move X1, X31
	018 Call "il2cpp_vm_object_is_inst", X0
	019 Move X19, X0
	020 Call 0x19913C0
	021 Move X8, [X19]
	022 Move X0, X19
	023 Move X9, [X8+360]
	024 Move X1, [X8+368]
	025 NotImplemented "Instruction BLR not yet implemented."
	026 Move X19, X0
	027 Move X0, 0x282000
	028 Move X0, [X0+1208]
	029 Call 0x1C17D08
	030 Call 0x1C17F10
	031 Move X1, X19
	032 Move X2, X31
	033 Move X20, X0
	034 Call ObjectDisposedException..ctor, X0, X1
	035 Move X0, 0x2D3000
	036 Move X0, [X0+3696]
	037 Call 0x1C17D08
	038 Move X1, X0
	039 Move X0, X20
	040 Call 0x1C17DEC
	041 Call 0x1C17F20

Method: System.Void Flush()

Disassembly:
	0x03E9B678 MOV X0, X19
	0x03E9B67C MOV X2, X20
	0x03E9B680 BL 0x2AA5098
	0x03E9B684 LDR X0, [X21]
	0x03E9B688 BL 0x1C16F10
	0x03E9B68C ADRP X8, 0x29F000
	0x03E9B690 LDR X8, [X8 + 0xAC8]
	0x03E9B694 MOV X1, X31
	0x03E9B698 MOV X20, X0
	0x03E9B69C LDR X23, [X8]
	0x03E9B6A0 BL 0x33BDD8C
	0x03E9B6A4 MOVZ W29, 0xA
	0x03E9B6A8 STR X23, [X20 + 0x10]
	0x03E9B6AC STR W29, [X20 + 0x18]
	0x03E9B6B0 ADRP X8, 0x2D2000

ISIL:
	001 Move [X31-16], X30
	002 Move W8, [X0+48]
	003 Compare W8, 0
	004 JumpIfEqual {7}
	005 Move X30, [X31+16]
	006 Return 
	007 Move W8, [X0+72]
	008 Compare W8, 0
	009 JumpIfNotEqual {16}
	010 Move X8, [X0+64]
	011 Compare X8, 0
	012 JumpIfEqual {20}
	013 Move W8, [X8+104]
	014 Compare W8, 0
	015 JumpIfEqual {5}
	016 Move W1, W31
	017 Move X30, [X31+16]
	018 Call ResponseStream.flush, X0, X1
	019 Return 
	020 Call 0x1C17F20

Method: System.Int32 Read(System.Byte[] buffer, System.Int32 offset, System.Int32 count)

Disassembly:
	0x03E9B6B4 LDR X8, [X8 + 0xFC0]
	0x03E9B6B8 LDR X3, [X22]
	0x03E9B6BC MOV X0, X19
	0x03E9B6C0 MOV X2, X20
	0x03E9B6C4 LDR X1, [X8]
	0x03E9B6C8 BL 0x2AA5098
	0x03E9B6CC LDR X0, [X21]
	0x03E9B6D0 BL 0x1C16F10
	0x03E9B6D4 ADRP X8, 0x29F000
	0x03E9B6D8 LDR X8, [X8 + 0xAB0]
	0x03E9B6DC MOV X1, X31
	0x03E9B6E0 MOV X20, X0
	0x03E9B6E4 LDR X23, [X8]
	0x03E9B6E8 BL 0x33BDD8C

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0x259000
	004 Move X0, [X0+2880]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X1, X31
	008 Move X19, X0
	009 Call NotSupportedException..ctor, X0
	010 Move X0, 0x2D3000
	011 Move X0, [X0+3704]
	012 Call 0x1C17D08
	013 Move X1, X0
	014 Move X0, X19
	015 Call 0x1C17DEC

Method: System.Int64 Seek(System.Int64 offset, System.IO.SeekOrigin origin)

Disassembly:
	0x03E9B6EC STR X23, [X20 + 0x10]
	0x03E9B6F0 STR W27, [X20 + 0x18]
	0x03E9B6F4 ADRP X8, 0x2D2000
	0x03E9B6F8 LDR X8, [X8 + 0xFA0]
	0x03E9B6FC LDR X3, [X22]
	0x03E9B700 MOV X0, X19
	0x03E9B704 MOV X2, X20
	0x03E9B708 LDR X1, [X8]
	0x03E9B70C BL 0x2AA5098
	0x03E9B710 LDR X0, [X21]
	0x03E9B714 BL 0x1C16F10
	0x03E9B718 ADRP X8, 0x2A3000
	0x03E9B71C LDR X8, [X8 + 0x208]
	0x03E9B720 MOV X1, X31

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0x259000
	004 Move X0, [X0+2880]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X1, X31
	008 Move X19, X0
	009 Call NotSupportedException..ctor, X0
	010 Move X0, 0x2D3000
	011 Move X0, [X0+3712]
	012 Call 0x1C17D08
	013 Move X1, X0
	014 Move X0, X19
	015 Call 0x1C17DEC

Method: System.Void SetLength(System.Int64 value)

Disassembly:
	0x03E9B724 MOV X20, X0
	0x03E9B728 LDR X23, [X8]
	0x03E9B72C BL 0x33BDD8C
	0x03E9B730 MOVZ W8, 0x7
	0x03E9B734 STR X23, [X20 + 0x10]
	0x03E9B738 STR W8, [X20 + 0x18]
	0x03E9B73C ADRP X8, 0x2D2000
	0x03E9B740 LDR X8, [X8 + 0xFD0]
	0x03E9B744 LDR X3, [X22]
	0x03E9B748 MOV X0, X19
	0x03E9B74C MOV X2, X20
	0x03E9B750 LDR X1, [X8]
	0x03E9B754 BL 0x2AA5098
	0x03E9B758 LDR X0, [X21]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0x259000
	004 Move X0, [X0+2880]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X1, X31
	008 Move X19, X0
	009 Call NotSupportedException..ctor, X0
	010 Move X0, 0x2D3000
	011 Move X0, [X0+3720]
	012 Call 0x1C17D08
	013 Move X1, X0
	014 Move X0, X19
	015 Call 0x1C17DEC

Method: System.Void Write(System.Byte[] buffer, System.Int32 offset, System.Int32 count)

Disassembly:
	0x03E9B75C BL 0x1C16F10
	0x03E9B760 ADRP X25, 0x2D2000
	0x03E9B764 LDR X25, [X25 + 0xF98]
	0x03E9B768 MOV X1, X31
	0x03E9B76C MOV X20, X0
	0x03E9B770 LDR X23, [X25]
	0x03E9B774 BL 0x33BDD8C
	0x03E9B778 STR X23, [X20 + 0x10]
	0x03E9B77C STR W29, [X20 + 0x18]
	0x03E9B780 LDR X1, [X25]
	0x03E9B784 LDR X3, [X22]
	0x03E9B788 MOV X0, X19
	0x03E9B78C MOV X2, X20
	0x03E9B790 BL 0x2AA5098
	0x03E9B794 LDR X0, [X21]
	0x03E9B798 BL 0x1C16F10
	0x03E9B79C ADRP X25, 0x29F000
	0x03E9B7A0 LDR X25, [X25 + 0xAE8]
	0x03E9B7A4 MOV X1, X31
	0x03E9B7A8 MOV X20, X0
	0x03E9B7AC LDR X23, [X25]
	0x03E9B7B0 BL 0x33BDD8C
	0x03E9B7B4 MOVZ W8, 0xD
	0x03E9B7B8 STR X23, [X20 + 0x10]
	0x03E9B7BC STR W8, [X20 + 0x18]
	0x03E9B7C0 LDR X1, [X25]
	0x03E9B7C4 LDR X3, [X22]
	0x03E9B7C8 MOV X0, X19
	0x03E9B7CC MOV X2, X20
	0x03E9B7D0 BL 0x2AA5098
	0x03E9B7D4 LDR X0, [X21]
	0x03E9B7D8 BL 0x1C16F10
	0x03E9B7DC ADRP X25, 0x29F000
	0x03E9B7E0 LDR X25, [X25 + 0x9F0]
	0x03E9B7E4 MOV X1, X31
	0x03E9B7E8 MOV X20, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W8, [X0+48]
	005 Compare W8, 0
	006 JumpIfNotEqual {17}
	007 Move X0, [X0+40]
	008 Compare X0, 0
	009 JumpIfEqual {41}
	010 Move X8, [X0]
	011 Move X20, [X31+16]
	012 Move X19, [X31+24]
	013 Move X5, [X8+904]
	014 Move X4, [X8+912]
	015 Move X30, [X31+32]
	016 CallNoReturn X5
	017 Move X1, X31
	018 Call "il2cpp_vm_object_is_inst", X0
	019 Move X19, X0
	020 Call 0x19913C0
	021 Move X8, [X19]
	022 Move X0, X19
	023 Move X9, [X8+360]
	024 Move X1, [X8+368]
	025 NotImplemented "Instruction BLR not yet implemented."
	026 Move X19, X0
	027 Move X0, 0x282000
	028 Move X0, [X0+1208]
	029 Call 0x1C17D08
	030 Call 0x1C17F10
	031 Move X1, X19
	032 Move X2, X31
	033 Move X20, X0
	034 Call ObjectDisposedException..ctor, X0, X1
	035 Move X0, 0x2D3000
	036 Move X0, [X0+3728]
	037 Call 0x1C17D08
	038 Move X1, X0
	039 Move X0, X20
	040 Call 0x1C17DEC
	041 Call 0x1C17F20

