Type: WebSocketSharp.Net.HttpListenerPrefix

Method: System.Void .ctor(System.String uriPrefix, WebSocketSharp.Net.HttpListener listener)

Disassembly:
	0x03EA2CB8 BL 0x3E8AEB0
	0x03EA2CBC CBZ X0, 0x3EA2CCC
	0x03EA2CC0 MOV X1, X31
	0x03EA2CC4 LDR X30, [X31], #0x10
	0x03EA2CC8 B 0x3E8CB20
	0x03EA2CCC BL 0x1C16F20
	0x03EA2CD0 STR X30, [X31 - 0x10]!
	0x03EA2CD4 LDR X0, [X0 + 0x10]
	0x03EA2CD8 CBZ X0, 0x3EA2CF4
	0x03EA2CDC MOV X1, X31
	0x03EA2CE0 BL 0x3E8AEB0
	0x03EA2CE4 CBZ X0, 0x3EA2CF4
	0x03EA2CE8 MOV X1, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, X1
	006 Move X1, X31
	007 Move X19, X2
	008 Move X21, X0
	009 Call Object..ctor, X0
	010 Move [X21+24], X19
	011 Move [X21+32], X20
	012 Move X1, X20
	013 Move X20, [X31+16]
	014 Move X19, [X31+24]
	015 Move X0, X21
	016 Move X30, [X31+32]
	017 Move X21, [X31+40]

Method: System.String get_Host()

Disassembly:
	0x03EA2FBC LDP X20, X19, [X31 + 0x10]
	0x03EA2FC0 MOV X2, X31

ISIL:
	001 Move X0, [X0+16]
	002 Return X0

Method: System.Boolean get_IsSecure()

Disassembly:
	0x03EA2FC4 LDR X1, [X8]
	0x03EA2FC8 LDR X30, [X31], #0x20

ISIL:
	001 Move W0, [X0+64]
	002 Return X0

Method: WebSocketSharp.Net.HttpListener get_Listener()

Disassembly:
	0x03EA2FCC B 0x366456C
	0x03EA2FD0 BL 0x1C16F20

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.String get_Original()

Disassembly:
	0x03EA2FD4 STR X30, [X31 - 0x10]!
	0x03EA2FD8 LDR X0, [X0 + 0x10]

ISIL:
	001 Move X0, [X0+32]
	002 Return X0

Method: System.String get_Path()

Disassembly:
	0x03EA2FDC CBZ X0, 0x3EA2FF8
	0x03EA2FE0 MOV X1, X31

ISIL:
	001 Move X0, [X0+40]
	002 Return X0

Method: System.String get_Port()

Disassembly:
	0x03EA2FE4 BL 0x3E8AEB0
	0x03EA2FE8 CBZ X0, 0x3EA2FF8

ISIL:
	001 Move X0, [X0+48]
	002 Return X0

Method: System.Void parse(System.String uriPrefix)

Disassembly:
	0x03EA2CEC LDR X30, [X31], #0x10
	0x03EA2CF0 B 0x3E8EF88
	0x03EA2CF4 BL 0x1C16F20
	0x03EA2CF8 STR X30, [X31 - 0x10]!
	0x03EA2CFC LDR X0, [X0 + 0x10]
	0x03EA2D00 CBZ X0, 0x3EA2D1C
	0x03EA2D04 MOV X1, X31
	0x03EA2D08 BL 0x3E8AEB0
	0x03EA2D0C CBZ X0, 0x3EA2D1C
	0x03EA2D10 MOV X1, X31
	0x03EA2D14 LDR X30, [X31], #0x10
	0x03EA2D18 B 0x3E8EBCC
	0x03EA2D1C BL 0x1C16F20
	0x03EA2D20 STR X30, [X31 - 0x10]!
	0x03EA2D24 LDR X0, [X0 + 0x10]
	0x03EA2D28 CBZ X0, 0x3EA2D44
	0x03EA2D2C MOV X1, X31
	0x03EA2D30 BL 0x3E8AEB0
	0x03EA2D34 CBZ X0, 0x3EA2D44
	0x03EA2D38 MOV X1, X31
	0x03EA2D3C LDR X30, [X31], #0x10
	0x03EA2D40 B 0x3E8EBF0
	0x03EA2D44 BL 0x1C16F20
	0x03EA2D48 STR X30, [X31 - 0x10]!
	0x03EA2D4C LDR X0, [X0 + 0x10]
	0x03EA2D50 CBZ X0, 0x3EA2D6C
	0x03EA2D54 MOV X1, X31
	0x03EA2D58 BL 0x3E8AEB0
	0x03EA2D5C CBZ X0, 0x3EA2D6C
	0x03EA2D60 MOV X1, X31
	0x03EA2D64 LDR X30, [X31], #0x10
	0x03EA2D68 B 0x3E8EC08
	0x03EA2D6C BL 0x1C16F20
	0x03EA2D70 STR X30, [X31 - 0x10]!
	0x03EA2D74 LDR X0, [X0 + 0x10]
	0x03EA2D78 CBZ X0, 0x3EA2D94
	0x03EA2D7C MOV X1, X31
	0x03EA2D80 BL 0x3E8AEB0
	0x03EA2D84 CBZ X0, 0x3EA2D94
	0x03EA2D88 MOV X1, X31
	0x03EA2D8C LDR X30, [X31], #0x10
	0x03EA2D90 B 0x3E8EC24
	0x03EA2D94 BL 0x1C16F20
	0x03EA2D98 STR X30, [X31 - 0x20]!
	0x03EA2D9C STP X20, X19, [X31 + 0x10]
	0x03EA2DA0 ADRP X20, 0x546000
	0x03EA2DA4 LDRB W8, [X20 + 0xF0E]
	0x03EA2DA8 MOV X19, X0
	0x03EA2DAC TBNZ X8, 0x0, 0x3EA2DC4
	0x03EA2DB0 ADRP X0, 0x2CA000
	0x03EA2DB4 LDR X0, [X0 + 0x6A8]
	0x03EA2DB8 BL 0x1C16CF4
	0x03EA2DBC MOVZ W8, 0x1
	0x03EA2DC0 STRB W8, [X20 + 0xF0E]
	0x03EA2DC4 LDR X0, [X19 + 0x10]
	0x03EA2DC8 CBZ X0, 0x3EA2E00
	0x03EA2DCC MOV X1, X31
	0x03EA2DD0 BL 0x3E8AEB0
	0x03EA2DD4 CBZ X0, 0x3EA2E00
	0x03EA2DD8 MOV X1, X31
	0x03EA2DDC BL 0x3E8CB20
	0x03EA2DE0 CBZ X0, 0x3EA2E00
	0x03EA2DE4 ADRP X8, 0x2CA000
	0x03EA2DE8 LDR X8, [X8 + 0x6A8]
	0x03EA2DEC LDP X20, X19, [X31 + 0x10]
	0x03EA2DF0 MOV X2, X31
	0x03EA2DF4 LDR X1, [X8]
	0x03EA2DF8 LDR X30, [X31], #0x20
	0x03EA2DFC B 0x366456C
	0x03EA2E00 BL 0x1C16F20
	0x03EA2E04 STR X30, [X31 - 0x10]!
	0x03EA2E08 LDR X0, [X0 + 0x10]
	0x03EA2E0C CBZ X0, 0x3EA2E28
	0x03EA2E10 MOV X1, X31
	0x03EA2E14 BL 0x3E8AEB0
	0x03EA2E18 CBZ X0, 0x3EA2E28
	0x03EA2E1C MOV X1, X31
	0x03EA2E20 LDR X30, [X31], #0x10
	0x03EA2E24 B 0x3E8ED54
	0x03EA2E28 BL 0x1C16F20
	0x03EA2E2C STR X30, [X31 - 0x10]!
	0x03EA2E30 LDR X0, [X0 + 0x10]
	0x03EA2E34 CBZ X0, 0x3EA2E50
	0x03EA2E38 MOV X1, X31
	0x03EA2E3C BL 0x3E8AEB0
	0x03EA2E40 CBZ X0, 0x3EA2E50
	0x03EA2E44 MOV X1, X31
	0x03EA2E48 LDR X30, [X31], #0x10
	0x03EA2E4C B 0x3E8B838
	0x03EA2E50 BL 0x1C16F20
	0x03EA2E54 STR X30, [X31 - 0x20]!
	0x03EA2E58 STP X20, X19, [X31 + 0x10]
	0x03EA2E5C ADRP X20, 0x546000
	0x03EA2E60 LDRB W8, [X20 + 0xF0F]
	0x03EA2E64 MOV X19, X0
	0x03EA2E68 TBNZ X8, 0x0, 0x3EA2E80
	0x03EA2E6C ADRP X0, 0x2CA000
	0x03EA2E70 LDR X0, [X0 + 0x518]
	0x03EA2E74 BL 0x1C16CF4
	0x03EA2E78 MOVZ W8, 0x1
	0x03EA2E7C STRB W8, [X20 + 0xF0F]
	0x03EA2E80 LDR X0, [X19 + 0x10]
	0x03EA2E84 CBZ X0, 0x3EA2EBC
	0x03EA2E88 MOV X1, X31
	0x03EA2E8C BL 0x3E8AEB0
	0x03EA2E90 CBZ X0, 0x3EA2EBC
	0x03EA2E94 MOV X1, X31
	0x03EA2E98 BL 0x3E8CB20
	0x03EA2E9C CBZ X0, 0x3EA2EBC
	0x03EA2EA0 ADRP X8, 0x2CA000
	0x03EA2EA4 LDR X8, [X8 + 0x518]
	0x03EA2EA8 LDP X20, X19, [X31 + 0x10]
	0x03EA2EAC MOV X2, X31
	0x03EA2EB0 LDR X1, [X8]
	0x03EA2EB4 LDR X30, [X31], #0x20
	0x03EA2EB8 B 0x366456C
	0x03EA2EBC BL 0x1C16F20
	0x03EA2EC0 STP X30, X21, [X31 - 0x20]!
	0x03EA2EC4 STP X20, X19, [X31 + 0x10]
	0x03EA2EC8 ADRP X20, 0x546000
	0x03EA2ECC ADRP X21, 0x2CC000
	0x03EA2ED0 LDRB W8, [X20 + 0xF10]
	0x03EA2ED4 LDR X21, [X21 + 0x220]
	0x03EA2ED8 MOV X19, X0
	0x03EA2EDC TBNZ X8, 0x0, 0x3EA2EF4
	0x03EA2EE0 ADRP X0, 0x2CC000
	0x03EA2EE4 LDR X0, [X0 + 0x220]
	0x03EA2EE8 BL 0x1C16CF4
	0x03EA2EEC MOVZ W8, 0x1
	0x03EA2EF0 STRB W8, [X20 + 0xF10]
	0x03EA2EF4 LDR X0, [X21]
	0x03EA2EF8 BL 0x1C16F10
	0x03EA2EFC MOVN W1, 0x1
	0x03EA2F00 MOV X20, X0
	0x03EA2F04 BL 0x3EA2F24
	0x03EA2F08 CBZ X20, 0x3EA2F20
	0x03EA2F0C STR X19, [X20 + 0x28]
	0x03EA2F10 MOV X0, X20
	0x03EA2F14 LDP X20, X19, [X31 + 0x10]
	0x03EA2F18 LDP X30, X21, [X31], #0x20
	0x03EA2F1C RET
	0x03EA2F20 BL 0x1C16F20
	0x03EA2F24 STR X30, [X31 - 0x20]!
	0x03EA2F28 STP X20, X19, [X31 + 0x10]
	0x03EA2F2C MOV W20, W1
	0x03EA2F30 MOV X1, X31
	0x03EA2F34 MOV X19, X0
	0x03EA2F38 BL 0x33BDD8C
	0x03EA2F3C MOV X0, X31
	0x03EA2F40 STR W20, [X19 + 0x10]
	0x03EA2F44 BL 0x33E3C68
	0x03EA2F48 CBZ X0, 0x3EA2F64
	0x03EA2F4C MOV X1, X31
	0x03EA2F50 BL 0x33E3CC4
	0x03EA2F54 STR W0, [X19 + 0x20]
	0x03EA2F58 LDP X20, X19, [X31 + 0x10]
	0x03EA2F5C LDR X30, [X31], #0x20
	0x03EA2F60 RET
	0x03EA2F64 BL 0x1C16F20
	0x03EA2F68 STR X30, [X31 - 0x20]!
	0x03EA2F6C STP X20, X19, [X31 + 0x10]
	0x03EA2F70 ADRP X20, 0x546000
	0x03EA2F74 LDRB W8, [X20 + 0xF11]
	0x03EA2F78 MOV X19, X0
	0x03EA2F7C TBNZ X8, 0x0, 0x3EA2F94
	0x03EA2F80 ADRP X0, 0x2CA000
	0x03EA2F84 LDR X0, [X0 + 0x528]
	0x03EA2F88 BL 0x1C16CF4
	0x03EA2F8C MOVZ W8, 0x1
	0x03EA2F90 STRB W8, [X20 + 0xF11]
	0x03EA2F94 LDR X0, [X19 + 0x10]
	0x03EA2F98 CBZ X0, 0x3EA2FD0
	0x03EA2F9C MOV X1, X31
	0x03EA2FA0 BL 0x3E8AEB0
	0x03EA2FA4 CBZ X0, 0x3EA2FD0
	0x03EA2FA8 MOV X1, X31
	0x03EA2FAC BL 0x3E8CB20
	0x03EA2FB0 CBZ X0, 0x3EA2FD0
	0x03EA2FB4 ADRP X8, 0x2CA000
	0x03EA2FB8 LDR X8, [X8 + 0x528]

ISIL:
	001 Move [X31-96], X30
	002 Move [X31+16], X28
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X21, 0x547000
	013 Move W8, [X21+3844]
	014 Move X20, X1
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {40}
	020 Move X0, 0x252000
	021 Move X0, [X0+2512]
	022 Call 0x1C17CF4
	023 Move X0, 0x259000
	024 Move X0, [X0+3432]
	025 Call 0x1C17CF4
	026 Move X0, 0x28E000
	027 Move X0, [X0+1512]
	028 Call 0x1C17CF4
	029 Move X0, 0x25A000
	030 Move X0, [X0+4072]
	031 Call 0x1C17CF4
	032 Move X0, 0x275000
	033 Move X0, [X0+1128]
	034 Call 0x1C17CF4
	035 Move X0, 0x290000
	036 Move X0, [X0+1224]
	037 Call 0x1C17CF4
	038 Move W8, 1
	039 Move [X21+3844], W8
	040 Compare X20, 0
	041 JumpIfEqual {201}
	042 Move X26, 0x290000
	043 Move X26, [X26+1224]
	044 Move X0, X20
	045 Move X2, X31
	046 Move X1, [X26]
	047 Call String.StartsWith, X0, X1
	048 Move TEMP, X0
	049 And TEMP, TEMP, 1
	050 Compare TEMP, 1
	051 JumpIfNotEqual {54}
	052 Move W8, 1
	053 Move [X19+64], W8
	054 Move X28, 0x252000
	055 Move X27, 0x28E000
	056 Move W21, [X20+16]
	057 Move X28, [X28+2512]
	058 Move X27, [X27+1512]
	059 Move W1, 58
	060 Move X0, X20
	061 Move X2, X31
	062 Call String.IndexOf, X0, X1
	063 Subtract W8, W21, W0
	064 Add W22, W0, 3
	065 Add W2, W0, 4
	066 Subtract W3, W8, 4
	067 Move W1, 47
	068 Move X0, X20
	069 Move X4, X31
	070 Call String.IndexOf, X0, X1, X2, X3
	071 Subtract W25, W0, 1
	072 Subtract W23, W0, W22
	073 Move W21, W0
	074 Subtract W3, W23, 1
	075 Move W1, 58
	076 Move X0, X20
	077 Move W2, W25
	078 Move X4, X31
	079 Call String.LastIndexOf, X0, X1, X2, X3
	080 Move W24, W0
	081 Move X0, X20
	082 Move W1, W25
	083 Move X2, X31
	084 Call String.get_Chars, X0, X1
	085 Subtract W2, W24, W22
	086 And W8, W0, 0xFFFF
	087 NotImplemented "Instruction CMP not yet implemented."
	088 Move X0, X20
	089 Move W1, W22
	090 Move X3, X31
	091 Call String.Substring, X0, X1, X2
	092 NotImplemented "Instruction ORN not yet implemented."
	093 Move [X19+16], X0
	094 Add W1, W24, 1
	095 Add W2, W21, W8
	096 Move X0, X20
	097 Move X3, X31
	098 Call String.Substring, X0, X1, X2
	099 Move X0, X20
	100 Move W1, W22
	101 Move W2, W23
	102 Move X3, X31
	103 Call String.Substring, X0, X1, X2
	104 Move W8, [X19+64]
	105 Move [X19+16], X0
	106 Move X9, 0x259000
	107 Move X10, 0x275000
	108 Move X9, [X9+3432]
	109 Move X10, [X10+1128]
	110 NotImplemented "Instruction CMP not yet implemented."
	111 NotImplemented "Instruction CSEL not yet implemented."
	112 Move X0, [X8]
	113 Move [X19+48], X0
	114 Move X0, X20
	115 Move W1, W21
	116 Move X2, X31
	117 Call String.Substring, X0, X1
	118 Move [X19+40], X0
	119 Move X0, [X28]
	120 Move W1, 4
	121 Call 0x1C17D6C
	122 Move W8, [X19+64]
	123 NotImplemented "Instruction CMP not yet implemented."
	124 NotImplemented "Instruction CSEL not yet implemented."
	125 Compare X0, 0
	126 JumpIfEqual {201}
	127 Move X9, 0x25A000
	128 Move X9, [X9+4072]
	129 Move X22, [X8]
	130 Move X20, X0
	131 Move X21, [X9]
	132 Compare X22, 0
	133 JumpIfEqual {140}
	134 Move X8, [X20]
	135 Move X0, X22
	136 Move X1, [X8+64]
	137 Call 0x1C17E00
	138 Compare X0, 0
	139 JumpIfEqual {198}
	140 Move W8, [X20+24]
	141 Compare W8, 0
	142 JumpIfEqual {197}
	143 Move [X20+32], X22
	144 Move X22, [X19+16]
	145 Compare X22, 0
	146 JumpIfEqual {154}
	147 Move X8, [X20]
	148 Move X0, X22
	149 Move X1, [X8+64]
	150 Call 0x1C17E00
	151 Compare X0, 0
	152 JumpIfEqual {198}
	153 Move W8, [X20+24]
	154 NotImplemented "Instruction CMP not yet implemented."
	155 Move [X20+40], X22
	156 Move X22, [X19+48]
	157 Compare X22, 0
	158 JumpIfEqual {166}
	159 Move X8, [X20]
	160 Move X0, X22
	161 Move X1, [X8+64]
	162 Call 0x1C17E00
	163 Compare X0, 0
	164 JumpIfEqual {198}
	165 Move W8, [X20+24]
	166 NotImplemented "Instruction CMP not yet implemented."
	167 Move [X20+48], X22
	168 Move X22, [X19+40]
	169 Compare X22, 0
	170 JumpIfEqual {178}
	171 Move X8, [X20]
	172 Move X0, X22
	173 Move X1, [X8+64]
	174 Call 0x1C17E00
	175 Compare X0, 0
	176 JumpIfEqual {198}
	177 Move W8, [X20+24]
	178 NotImplemented "Instruction CMP not yet implemented."
	179 Move X0, X21
	180 Move X1, X20
	181 Move X2, X31
	182 Move [X20+56], X22
	183 Call String.Format, X0, X1
	184 Move [X19+56], X0
	185 Move X20, [X31+80]
	186 Move X19, [X31+88]
	187 Move X22, [X31+64]
	188 Move X21, [X31+72]
	189 Move X24, [X31+48]
	190 Move X23, [X31+56]
	191 Move X26, [X31+32]
	192 Move X25, [X31+40]
	193 Move X28, [X31+16]
	194 Move X27, [X31+24]
	195 Move X30, [X31+96]
	196 Return 
	197 Call 0x1C17F28
	198 Call 0x1C17F44
	199 Move X1, X31
	200 Call 0x1C17DEC
	201 Call 0x1C17F20

Method: System.Void CheckPrefix(System.String uriPrefix)

Disassembly:
	0x03EA2FEC MOV X1, X31
	0x03EA2FF0 LDR X30, [X31], #0x10
	0x03EA2FF4 B 0x3E8ED34
	0x03EA2FF8 BL 0x1C16F20
	0x03EA2FFC STR X30, [X31 - 0x10]!
	0x03EA3000 LDR X0, [X0 + 0x10]
	0x03EA3004 CBZ X0, 0x3EA3014
	0x03EA3008 MOV X1, X31
	0x03EA300C LDR X30, [X31], #0x10
	0x03EA3010 B 0x3E8E02C
	0x03EA3014 BL 0x1C16F20
	0x03EA3018 STR X30, [X31 - 0x10]!
	0x03EA301C LDR X0, [X0 + 0x10]
	0x03EA3020 CBZ X0, 0x3EA303C
	0x03EA3024 MOV X1, X31
	0x03EA3028 BL 0x3E8AEB0
	0x03EA302C CBZ X0, 0x3EA303C
	0x03EA3030 MOV X1, X31
	0x03EA3034 LDR X30, [X31], #0x10
	0x03EA3038 B 0x3E8EE10
	0x03EA303C BL 0x1C16F20
	0x03EA3040 LDR X0, [X0 + 0x18]
	0x03EA3044 RET
	0x03EA3048 STR X30, [X31 - 0x10]!
	0x03EA304C LDR X0, [X0 + 0x10]
	0x03EA3050 CBZ X0, 0x3EA3070
	0x03EA3054 MOV X1, X31
	0x03EA3058 BL 0x3E8D034
	0x03EA305C CBZ X0, 0x3EA3070
	0x03EA3060 MOVZ W1, 0x1
	0x03EA3064 MOV X2, X31
	0x03EA3068 LDR X30, [X31], #0x10
	0x03EA306C B 0x3E86A60
	0x03EA3070 BL 0x1C16F20
	0x03EA3074 STR X30, [X31 - 0x20]!
	0x03EA3078 STP X20, X19, [X31 + 0x10]
	0x03EA307C MOV X19, X0
	0x03EA3080 LDR X0, [X0 + 0x10]
	0x03EA3084 CBZ X0, 0x3EA30C8
	0x03EA3088 MOV W20, W1
	0x03EA308C MOV X1, X31
	0x03EA3090 BL 0x3E8BBB8
	0x03EA3094 CBZ X0, 0x3EA30C8
	0x03EA3098 MOV W1, W20
	0x03EA309C MOV X2, X31
	0x03EA30A0 BL 0x3E90624
	0x03EA30A4 LDR X0, [X19 + 0x10]
	0x03EA30A8 CBZ X0, 0x3EA30C8
	0x03EA30AC MOV X1, X31
	0x03EA30B0 BL 0x3E8BBB8
	0x03EA30B4 CBZ X0, 0x3EA30C8
	0x03EA30B8 LDP X20, X19, [X31 + 0x10]
	0x03EA30BC MOV X1, X31
	0x03EA30C0 LDR X30, [X31], #0x20
	0x03EA30C4 B 0x3E90E20
	0x03EA30C8 BL 0x1C16F20
	0x03EA30CC STR X30, [X31 - 0x10]!
	0x03EA30D0 LDR X0, [X0 + 0x10]
	0x03EA30D4 CBZ X0, 0x3EA30F4
	0x03EA30D8 MOV X1, X31
	0x03EA30DC BL 0x3E8AEB0
	0x03EA30E0 CBZ X0, 0x3EA30F4
	0x03EA30E4 LDR X8, [X0]
	0x03EA30E8 LDP X2, X1, [X8 + 0x168]
	0x03EA30EC LDR X30, [X31], #0x10
	0x03EA30F0 BR X2
	0x03EA30F4 BL 0x1C16F20
	0x03EA30F8 RET
	0x03EA30FC STR X30, [X31 - 0x20]!
	0x03EA3100 STP X20, X19, [X31 + 0x10]
	0x03EA3104 ADRP X20, 0x545000
	0x03EA3108 LDRB W8, [X20 + 0xF12]
	0x03EA310C MOV X19, X0
	0x03EA3110 TBNZ X8, 0x0, 0x3EA3134
	0x03EA3114 ADRP X0, 0x259000
	0x03EA3118 LDR X0, [X0 + 0x8D8]
	0x03EA311C BL 0x1C16CF4
	0x03EA3120 ADRP X0, 0x29D000
	0x03EA3124 LDR X0, [X0 + 0x258]
	0x03EA3128 BL 0x1C16CF4
	0x03EA312C MOVZ W8, 0x1
	0x03EA3130 STRB W8, [X20 + 0xF12]
	0x03EA3134 LDR W8, [X19 + 0x10]
	0x03EA3138 CMP W8, 0x1
	0x03EA313C B.EQ 0x3EA31EC
	0x03EA3140 CBNZ W8, 0x3EA31E4
	0x03EA3144 LDR X8, [X19 + 0x28]
	0x03EA3148 MOVN W9, 0x0
	0x03EA314C STR W9, [X19 + 0x10]
	0x03EA3150 CBZ X8, 0x3EA326C
	0x03EA3154 LDR X0, [X8 + 0x10]
	0x03EA3158 CBZ X0, 0x3EA326C
	0x03EA315C MOV X1, X31
	0x03EA3160 BL 0x3E8AEB0
	0x03EA3164 CBZ X0, 0x3EA326C
	0x03EA3168 MOV X1, X31
	0x03EA316C BL 0x3E8CB20
	0x03EA3170 CBZ X0, 0x3EA326C
	0x03EA3174 ADRP X8, 0x29D000
	0x03EA3178 LDR X8, [X8 + 0x258]
	0x03EA317C MOV X2, X31
	0x03EA3180 LDR X1, [X8]
	0x03EA3184 BL 0x366456C
	0x03EA3188 STR X0, [X19 + 0x30]
	0x03EA318C CBZ X0, 0x3EA3260
	0x03EA3190 LDR W8, [X0 + 0x10]
	0x03EA3194 MOV X20, X0
	0x03EA3198 CBZ W8, 0x3EA31E4
	0x03EA319C ADRP X8, 0x259000
	0x03EA31A0 LDR X8, [X8 + 0x8D8]
	0x03EA31A4 MOVZ W1, 0x1
	0x03EA31A8 LDR X0, [X8]
	0x03EA31AC BL 0x1C16D6C
	0x03EA31B0 CBZ X0, 0x3EA326C
	0x03EA31B4 LDR W8, [X0 + 0x18]
	0x03EA31B8 MOV X1, X0
	0x03EA31BC CBZ W8, 0x3EA3270
	0x03EA31C0 MOVZ W8, 0x2C
	0x03EA31C4 MOV X0, X20
	0x03EA31C8 MOV X2, X31
	0x03EA31CC STRH W8, [X1 + 0x20]
	0x03EA31D0 BL 0x3229E68
	0x03EA31D4 MOV W8, W31
	0x03EA31D8 STR X0, [X19 + 0x38]
	0x03EA31DC STR W31, [X19 + 0x40]
	0x03EA31E0 B 0x3EA3238
	0x03EA31E4 MOV W0, W31
	0x03EA31E8 B 0x3EA3260
	0x03EA31EC MOVN W8, 0x0
	0x03EA31F0 STR W8, [X19 + 0x10]
	0x03EA31F4 STP X31, X31, [X19 + 0x48]
	0x03EA31F8 B 0x3EA3228
	0x03EA31FC B.CS 0x3EA3270

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x547000
	007 Move W8, [X20+3845]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0x25A000
	014 Move X0, [X0+1960]
	015 Call 0x1C17CF4
	016 Move X0, 0x25A000
	017 Move X0, [X0+1976]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X20+3845], W8
	021 Compare X19, 0
	022 JumpIfEqual {89}
	023 Move W22, [X19+16]
	024 Compare W22, 0
	025 JumpIfEqual {107}
	026 Move X8, 0x25A000
	027 Move X8, [X8+1960]
	028 Move X0, X19
	029 Move X2, X31
	030 Move X1, [X8]
	031 Call String.StartsWith, X0, X1
	032 Move TEMP, X0
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfEqual {46}
	036 Move X8, 0x25A000
	037 Move X8, [X8+1976]
	038 Move X0, X19
	039 Move X2, X31
	040 Move X1, [X8]
	041 Call String.StartsWith, X0, X1
	042 Move TEMP, X0
	043 And TEMP, TEMP, 1
	044 Compare TEMP, 1
	045 JumpIfNotEqual {115}
	046 Subtract W21, W22, 1
	047 Move X0, X19
	048 Move W1, W21
	049 Move X2, X31
	050 Call String.get_Chars, X0, X1
	051 And W8, W0, 0xFFFF
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Move W1, 58
	054 Move X0, X19
	055 Move X2, X31
	056 Call String.IndexOf, X0, X1
	057 Add W20, W0, 3
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Move X0, X19
	060 Move W1, W20
	061 Move X2, X31
	062 Call String.get_Chars, X0, X1
	063 And W8, W0, 0xFFFF
	064 NotImplemented "Instruction CMP not yet implemented."
	065 Subtract W3, W22, W20
	066 Move W1, 47
	067 Move X0, X19
	068 Move W2, W20
	069 Move X4, X31
	070 Call String.IndexOf, X0, X1, X2, X3
	071 NotImplemented "Instruction CMP not yet implemented."
	072 Move W21, W0
	073 Subtract W1, W0, 1
	074 Move X0, X19
	075 Move X2, X31
	076 Call String.get_Chars, X0, X1
	077 And W8, W0, 0xFFFF
	078 NotImplemented "Instruction CMP not yet implemented."
	079 Subtract W8, W22, 2
	080 NotImplemented "Instruction CMP not yet implemented."
	081 Move X20, [X31+32]
	082 Move X19, [X31+40]
	083 Move X22, [X31+16]
	084 Move X21, [X31+24]
	085 Move X30, [X31+48]
	086 Return 
	087 Move X0, 0x2CC000
	088 Move X0, [X0+408]
	089 Move X0, 0x256000
	090 Move X0, [X0+1320]
	091 Call 0x1C17D08
	092 Call 0x1C17F10
	093 Move X19, X0
	094 Move X0, 0x2CB000
	095 Move X0, [X0+1000]
	096 Call 0x1C17D08
	097 Move X1, X0
	098 Move X0, X19
	099 Move X2, X31
	100 Call ArgumentNullException..ctor, X0, X1
	101 Move X0, 0x2CC000
	102 Move X0, [X0+416]
	103 Call 0x1C17D08
	104 Move X1, X0
	105 Move X0, X19
	106 Call 0x1C17DEC
	107 Move X0, 0x27A000
	108 Move X0, [X0+2488]
	109 Move X0, 0x2CC000
	110 Move X0, [X0+424]
	111 Move X0, 0x2CC000
	112 Move X0, [X0+432]
	113 Move X0, 0x2CC000
	114 Move X0, [X0+440]
	115 Move X0, 0x2CC000
	116 Move X0, [X0+448]
	117 Call 0x1C17D08
	118 Move X19, X0
	119 Move X0, 0x259000
	120 Move X0, [X0+1400]
	121 Call 0x1C17D08
	122 Call 0x1C17F10
	123 Move X20, X0
	124 Move X0, 0x2CB000
	125 Move X0, [X0+1000]
	126 Call 0x1C17D08
	127 Move X2, X0
	128 Move X0, X20
	129 Move X1, X19
	130 Move X3, X31
	131 Call ArgumentException..ctor, X0, X1, X2
	132 Move X0, 0x2CC000
	133 Move X0, [X0+416]
	134 Call 0x1C17D08
	135 Move X1, X0
	136 Move X0, X20
	137 Call 0x1C17DEC

Method: System.Boolean Equals(System.Object obj)

Disassembly:
	0x03EA3200 ADD X8, X0, W8, 0x3, SXTW
	0x03EA3204 LDR X0, [X8 + 0x20]
	0x03EA3208 STR X0, [X19 + 0x48]
	0x03EA320C CBZ X0, 0x3EA326C
	0x03EA3210 MOV X1, X31
	0x03EA3214 BL 0x322B8DC
	0x03EA3218 STR X0, [X19 + 0x50]
	0x03EA321C CBZ X0, 0x3EA326C
	0x03EA3220 LDR W8, [X0 + 0x10]
	0x03EA3224 CBNZ W8, 0x3EA3254
	0x03EA3228 LDR W8, [X19 + 0x40]
	0x03EA322C LDR X0, [X19 + 0x38]
	0x03EA3230 ADD W8, W8, 0x1
	0x03EA3234 STR W8, [X19 + 0x40]
	0x03EA3238 CBZ X0, 0x3EA326C
	0x03EA323C LDR W9, [X0 + 0x18]
	0x03EA3240 CMP W8, W9
	0x03EA3244 B.LT 0x3EA31FC
	0x03EA3248 MOV W0, W31
	0x03EA324C STR X31, [X19 + 0x38]
	0x03EA3250 B 0x3EA3260
	0x03EA3254 STR X0, [X19 + 0x18]
	0x03EA3258 MOVZ W0, 0x1
	0x03EA325C STR W0, [X19 + 0x10]
	0x03EA3260 LDP X20, X19, [X31 + 0x10]
	0x03EA3264 LDR X30, [X31], #0x20
	0x03EA3268 RET
	0x03EA326C BL 0x1C16F20
	0x03EA3270 BL 0x1C16F28
	0x03EA3274 LDR X0, [X0 + 0x18]
	0x03EA3278 RET
	0x03EA327C STP X30, X19, [X31 - 0x10]!
	0x03EA3280 ADRP X0, 0x250000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x546000
	006 Move W8, [X21+3846]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x2CB000
	014 Move X0, [X0+240]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+3846], W8
	018 Compare X20, 0
	019 JumpIfEqual {26}
	020 Move X8, 0x2CB000
	021 Move X8, [X8+240]
	022 Move X9, [X20]
	023 Move X8, [X8]
	024 NotImplemented "Instruction CMP not yet implemented."
	025 NotImplemented "Instruction CSEL not yet implemented."
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move W0, W31
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]
	031 Return X0
	032 Compare X8, 0
	033 JumpIfEqual {45}
	034 Move X0, [X19+56]
	035 Compare X0, 0
	036 JumpIfEqual {45}
	037 Move X1, [X8+56]
	038 Move X20, [X31+16]
	039 Move X19, [X31+24]
	040 Move X2, X31
	041 Move X30, [X31+32]
	042 Move X21, [X31+40]
	043 Call String.Equals, X0, X1
	044 Return X0
	045 Call 0x1C17F20

Method: System.Int32 GetHashCode()

Disassembly:
	0x03EA3284 LDR X0, [X0 + 0xB40]
	0x03EA3288 BL 0x1C16D08
	0x03EA328C BL 0x1C16F10
	0x03EA3290 MOV X1, X31
	0x03EA3294 MOV X19, X0
	0x03EA3298 BL 0x3380310
	0x03EA329C ADRP X0, 0x2CB000
	0x03EA32A0 LDR X0, [X0 + 0x228]

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+56]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 Move X8, [X0]
	006 Move X2, [X8+344]
	007 Move X1, [X8+352]
	008 Move X30, [X31+16]
	009 CallNoReturn X2
	010 Call 0x1C17F20

Method: System.String ToString()

Disassembly:
	0x03EA32A4 BL 0x1C16D08
	0x03EA32A8 MOV X1, X0

ISIL:
	001 Move X0, [X0+56]
	002 Return X0

