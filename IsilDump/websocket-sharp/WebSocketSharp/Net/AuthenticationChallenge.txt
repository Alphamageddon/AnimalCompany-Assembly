Type: WebSocketSharp.Net.AuthenticationChallenge

Method: System.Void .ctor(WebSocketSharp.Net.AuthenticationSchemes scheme, System.Collections.Specialized.NameValueCollection parameters)

Disassembly:
	0x03EA0A00 MOV X0, X23
	0x03EA0A04 MOV X3, X31
	0x03EA0A08 LDR X1, [X8]
	0x03EA0A0C BL 0x366457C
	0x03EA0A10 ADRP X24, 0x548000
	0x03EA0A14 LDRB W8, [X24 + 0xED2]
	0x03EA0A18 LDR X23, [X20 + 0x18]
	0x03EA0A1C TBNZ X8, 0x0, 0x3EA0A34
	0x03EA0A20 ADRP X0, 0x255000
	0x03EA0A24 LDR X0, [X0 + 0x278]
	0x03EA0A28 BL 0x1C16CF4
	0x03EA0A2C MOVZ W8, 0x1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move W20, W1
	006 Move X1, X31
	007 Move X19, X2
	008 Move X21, X0
	009 Call Object..ctor, X0
	010 Move [X21+16], W20
	011 Move [X21+24], X19
	012 Move X20, [X31+16]
	013 Move X19, [X31+24]
	014 Move X30, [X31+32]
	015 Move X21, [X31+40]
	016 Return 

Method: System.Void .ctor(WebSocketSharp.Net.AuthenticationSchemes scheme, System.String realm)

Disassembly:
	0x03EA0A60 MOV X3, X31
	0x03EA0A64 LDR X1, [X8]
	0x03EA0A68 BL 0x366457C
	0x03EA0A6C CMP W21, 0x1
	0x03EA0A70 STR W19, [X20 + 0x20]
	0x03EA0A74 B.NE 0x3EA0A90
	0x03EA0A78 MOV X0, X20
	0x03EA0A7C LDP X20, X19, [X31 + 0x30]
	0x03EA0A80 LDP X22, X21, [X31 + 0x20]
	0x03EA0A84 LDP X24, X23, [X31 + 0x10]
	0x03EA0A88 LDR X30, [X31], #0x40
	0x03EA0A8C B 0x3EA0AD8
	0x03EA0A90 LDP X20, X19, [X31 + 0x30]
	0x03EA0A94 LDP X22, X21, [X31 + 0x20]
	0x03EA0A98 LDP X24, X23, [X31 + 0x10]
	0x03EA0A9C LDR X30, [X31], #0x40
	0x03EA0AA0 RET
	0x03EA0AA4 BL 0x1C16F20
	0x03EA0AA8 STR X30, [X31 - 0x10]!
	0x03EA0AAC CBZ X1, 0x3EA0ACC
	0x03EA0AB0 LDR W8, [X1 + 0x10]
	0x03EA0AB4 MOV W4, W3
	0x03EA0AB8 MOV X3, X2
	0x03EA0ABC LDR X2, [X1 + 0x18]
	0x03EA0AC0 MOV W1, W8
	0x03EA0AC4 LDR X30, [X31], #0x10
	0x03EA0AC8 B 0x3EA0920
	0x03EA0ACC BL 0x1C16F20
	0x03EA0AD0 LDR W0, [X0 + 0x10]
	0x03EA0AD4 RET
	0x03EA0AD8 SUB X31, X31, 0x50
	0x03EA0ADC STP X30, X25, [X31 + 0x10]
	0x03EA0AE0 STP X24, X23, [X31 + 0x20]
	0x03EA0AE4 STP X22, X21, [X31 + 0x30]
	0x03EA0AE8 STP X20, X19, [X31 + 0x40]
	0x03EA0AEC ADRP X20, 0x548000
	0x03EA0AF0 LDRB W8, [X20 + 0xEF3]
	0x03EA0AF4 MOV X19, X0
	0x03EA0AF8 TBNZ X8, 0x0, 0x3EA0BB8
	0x03EA0AFC ADRP X0, 0x25C000
	0x03EA0B00 LDR X0, [X0 + 0x8D8]
	0x03EA0B04 BL 0x1C16CF4
	0x03EA0B08 ADRP X0, 0x2CC000
	0x03EA0B0C LDR X0, [X0 + 0x420]
	0x03EA0B10 BL 0x1C16CF4
	0x03EA0B14 ADRP X0, 0x25A000
	0x03EA0B18 LDR X0, [X0 + 0x248]
	0x03EA0B1C BL 0x1C16CF4
	0x03EA0B20 ADRP X0, 0x254000
	0x03EA0B24 LDR X0, [X0 + 0xBF8]
	0x03EA0B28 BL 0x1C16CF4
	0x03EA0B2C ADRP X0, 0x2CE000
	0x03EA0B30 LDR X0, [X0 + 0x170]
	0x03EA0B34 BL 0x1C16CF4
	0x03EA0B38 ADRP X0, 0x2CE000
	0x03EA0B3C LDR X0, [X0 + 0x178]
	0x03EA0B40 BL 0x1C16CF4
	0x03EA0B44 ADRP X0, 0x25B000
	0x03EA0B48 LDR X0, [X0 + 0x720]
	0x03EA0B4C BL 0x1C16CF4
	0x03EA0B50 ADRP X0, 0x2CE000
	0x03EA0B54 LDR X0, [X0 + 0xD0]
	0x03EA0B58 BL 0x1C16CF4
	0x03EA0B5C ADRP X0, 0x2CD000
	0x03EA0B60 LDR X0, [X0 + 0xCF8]
	0x03EA0B64 BL 0x1C16CF4
	0x03EA0B68 ADRP X0, 0x27C000
	0x03EA0B6C LDR X0, [X0 + 0x4D0]
	0x03EA0B70 BL 0x1C16CF4
	0x03EA0B74 ADRP X0, 0x29E000
	0x03EA0B78 LDR X0, [X0 + 0x618]
	0x03EA0B7C BL 0x1C16CF4
	0x03EA0B80 ADRP X0, 0x2CE000
	0x03EA0B84 LDR X0, [X0 + 0xC8]
	0x03EA0B88 BL 0x1C16CF4
	0x03EA0B8C ADRP X0, 0x254000
	0x03EA0B90 LDR X0, [X0 + 0x6E8]
	0x03EA0B94 BL 0x1C16CF4
	0x03EA0B98 ADRP X0, 0x253000
	0x03EA0B9C LDR X0, [X0 + 0xEE8]
	0x03EA0BA0 BL 0x1C16CF4
	0x03EA0BA4 ADRP X0, 0x2CE000
	0x03EA0BA8 LDR X0, [X0 + 0x180]
	0x03EA0BAC BL 0x1C16CF4
	0x03EA0BB0 MOVZ W8, 0x1
	0x03EA0BB4 STRB W8, [X20 + 0xEF3]
	0x03EA0BB8 LDR X0, [X19 + 0x18]
	0x03EA0BBC CBZ X0, 0x3EA0DF4
	0x03EA0BC0 ADRP X23, 0x29E000
	0x03EA0BC4 LDR X23, [X23 + 0x618]
	0x03EA0BC8 MOV X2, X31
	0x03EA0BCC LDR X1, [X23]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x549000
	008 Move X23, 0x29E000
	009 Move W8, [X22+3806]
	010 Move X23, [X23+3880]
	011 Move X21, X2
	012 Move W20, W1
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {41}
	018 Move X0, 0x29E000
	019 Move X0, [X0+3880]
	020 Call 0x1C17CF4
	021 Move X0, 0x255000
	022 Move X0, [X0+2160]
	023 Call 0x1C17CF4
	024 Move X0, 0x29F000
	025 Move X0, [X0+1560]
	026 Call 0x1C17CF4
	027 Move X0, 0x29D000
	028 Move X0, [X0+2776]
	029 Call 0x1C17CF4
	030 Move X0, 0x29F000
	031 Move X0, [X0+1576]
	032 Call 0x1C17CF4
	033 Move X0, 0x281000
	034 Move X0, [X0+3408]
	035 Call 0x1C17CF4
	036 Move X0, 0x254000
	037 Move X0, [X0+3816]
	038 Call 0x1C17CF4
	039 Move W8, 1
	040 Move [X22+3806], W8
	041 Move X0, [X23]
	042 Call 0x1C17F10
	043 Move X1, X31
	044 Move X22, X0
	045 Call NameValueCollection..ctor, X0
	046 Move X0, X19
	047 Move X1, X31
	048 Call Object..ctor, X0
	049 Move [X19+16], W20
	050 Move [X19+24], X22
	051 Compare X22, 0
	052 JumpIfEqual {108}
	053 Move X8, 0x29F000
	054 Move X8, [X8+1576]
	055 Move X0, X22
	056 Move X2, X21
	057 Move X3, X31
	058 Move X1, [X8]
	059 Call NameValueCollection.set_Item, X0, X1, X2
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Move X20, [X19+24]
	062 Call AuthenticationBase.CreateNonceValue
	063 Compare X20, 0
	064 JumpIfEqual {108}
	065 Move X8, 0x255000
	066 Move X8, [X8+2160]
	067 Move X2, X0
	068 Move X0, X20
	069 Move X3, X31
	070 Move X1, [X8]
	071 Call NameValueCollection.set_Item, X0, X1, X2
	072 Move X0, [X19+24]
	073 Compare X0, 0
	074 JumpIfEqual {108}
	075 Move X8, 0x29D000
	076 Move X9, 0x281000
	077 Move X8, [X8+2776]
	078 Move X9, [X9+3408]
	079 Move X3, X31
	080 Move X1, [X8]
	081 Move X2, [X9]
	082 Call NameValueCollection.set_Item, X0, X1, X2
	083 Move X0, [X19+24]
	084 Compare X0, 0
	085 JumpIfEqual {108}
	086 Move X8, 0x29F000
	087 Move X9, 0x254000
	088 Move X8, [X8+1560]
	089 Move X9, [X9+3816]
	090 Move X20, [X31+32]
	091 Move X19, [X31+40]
	092 Move X22, [X31+16]
	093 Move X21, [X31+24]
	094 Move X1, [X8]
	095 Move X2, [X9]
	096 Move X3, X31
	097 Move X30, [X31+48]
	098 Move X23, [X31+56]
	099 Call NameValueCollection.set_Item, X0, X1, X2
	100 Return 
	101 Move X20, [X31+32]
	102 Move X19, [X31+40]
	103 Move X22, [X31+16]
	104 Move X21, [X31+24]
	105 Move X30, [X31+48]
	106 Move X23, [X31+56]
	107 Return 
	108 Call 0x1C17F20

Method: System.String get_Domain()

Disassembly:
	0x03EA0D30 LDR X9, [X9 + 0x720]
	0x03EA0D34 STR W8, [X31 + 0xC]
	0x03EA0D38 LDR X0, [X9]
	0x03EA0D3C BL 0x1C16E04
	0x03EA0D40 ADRP X8, 0x2CE000
	0x03EA0D44 LDR X8, [X8 + 0x180]
	0x03EA0D48 MOV X1, X0
	0x03EA0D4C MOV X2, X31
	0x03EA0D50 LDR X8, [X8]
	0x03EA0D54 MOV X0, X8
	0x03EA0D58 BL 0x321EFD0
	0x03EA0D5C CBZ X20, 0x3EA0DF4
	0x03EA0D60 ADRP X8, 0x2CE000
	0x03EA0D64 LDR X8, [X8 + 0xD0]
	0x03EA0D68 MOV X2, X0
	0x03EA0D6C MOV X0, X20
	0x03EA0D70 LDR X1, [X8]
	0x03EA0D74 B 0x3EA0D80
	0x03EA0D78 MOV X0, X8
	0x03EA0D7C MOV X2, X31
	0x03EA0D80 MOV X3, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x549000
	005 Move W8, [X20+3807]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x2CD000
	012 Move X0, [X0+3776]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+3807], W8
	016 Move X0, [X19+24]
	017 Compare X0, 0
	018 JumpIfEqual {28}
	019 Move X8, 0x2CD000
	020 Move X8, [X8+3776]
	021 Move X20, [X31+16]
	022 Move X19, [X31+24]
	023 Move X2, X31
	024 Move X1, [X8]
	025 Move X30, [X31+32]
	026 Call NameValueCollection.get_Item, X0, X1
	027 Return X0
	028 Call 0x1C17F20

Method: System.String get_Stale()

Disassembly:
	0x03EA0D84 BL 0x366457C
	0x03EA0D88 LDR X0, [X19 + 0x18]
	0x03EA0D8C CBZ X0, 0x3EA0DF4
	0x03EA0D90 ADRP X8, 0x254000
	0x03EA0D94 ADRP X9, 0x27C000
	0x03EA0D98 LDR X8, [X8 + 0x6E8]
	0x03EA0D9C LDR X9, [X9 + 0x4D0]
	0x03EA0DA0 MOV X3, X31
	0x03EA0DA4 LDR X1, [X8]
	0x03EA0DA8 LDR X2, [X9]
	0x03EA0DAC BL 0x366457C
	0x03EA0DB0 LDR X19, [X19 + 0x18]
	0x03EA0DB4 MOV X0, X19
	0x03EA0DB8 BL 0x3E9E080
	0x03EA0DBC CBZ X19, 0x3EA0DF4
	0x03EA0DC0 ADRP X8, 0x2CD000
	0x03EA0DC4 LDR X8, [X8 + 0xCF8]
	0x03EA0DC8 MOV X2, X0
	0x03EA0DCC MOV X0, X19
	0x03EA0DD0 MOV X3, X31
	0x03EA0DD4 LDR X1, [X8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x549000
	005 Move W8, [X20+3808]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x2CF000
	012 Move X0, [X0+304]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+3808], W8
	016 Move X0, [X19+24]
	017 Compare X0, 0
	018 JumpIfEqual {28}
	019 Move X8, 0x2CF000
	020 Move X8, [X8+304]
	021 Move X20, [X31+16]
	022 Move X19, [X31+24]
	023 Move X2, X31
	024 Move X1, [X8]
	025 Move X30, [X31+32]
	026 Call NameValueCollection.get_Item, X0, X1
	027 Return X0
	028 Call 0x1C17F20

Method: WebSocketSharp.Net.AuthenticationChallenge CreateBasicChallenge(System.String realm)

Disassembly:
	0x03EA0DD8 BL 0x366457C
	0x03EA0DDC LDP X20, X19, [X31 + 0x40]
	0x03EA0DE0 LDP X22, X21, [X31 + 0x30]
	0x03EA0DE4 LDP X24, X23, [X31 + 0x20]
	0x03EA0DE8 LDP X30, X25, [X31 + 0x10]
	0x03EA0DEC ADD X31, X31, 0x50
	0x03EA0DF0 RET
	0x03EA0DF4 BL 0x1C16F20
	0x03EA0DF8 BL 0x1C16F28
	0x03EA0DFC LDR W8, [X0 + 0x20]
	0x03EA0E00 ADDS W31, W8, 0x1
	0x03EA0E04 CSEL W0, W31, W8, EQ
	0x03EA0E08 RET
	0x03EA0E0C STR X30, [X31 - 0x20]!
	0x03EA0E10 STP X20, X19, [X31 + 0x10]
	0x03EA0E14 ADRP X20, 0x548000
	0x03EA0E18 LDRB W8, [X20 + 0xEE8]
	0x03EA0E1C MOV X19, X0
	0x03EA0E20 TBNZ X8, 0x0, 0x3EA0E38
	0x03EA0E24 ADRP X0, 0x2CE000
	0x03EA0E28 LDR X0, [X0 + 0xC8]
	0x03EA0E2C BL 0x1C16CF4
	0x03EA0E30 MOVZ W8, 0x1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x549000
	006 Move X21, 0x2CE000
	007 Move W8, [X20+3809]
	008 Move X21, [X21+712]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x2CE000
	015 Move X0, [X0+712]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3809], W8
	019 Move X0, [X21]
	020 Call 0x1C17F10
	021 Move W1, 8
	022 Move X2, X19
	023 Move X20, X0
	024 Call AuthenticationChallenge..ctor, X0, X1, X2
	025 Move X0, X20
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Return X0

Method: WebSocketSharp.Net.AuthenticationChallenge CreateDigestChallenge(System.String realm)

Disassembly:
	0x03EA0E34 STRB W8, [X20 + 0xEE8]
	0x03EA0E38 LDR X0, [X19 + 0x18]
	0x03EA0E3C CBZ X0, 0x3EA0E5C
	0x03EA0E40 ADRP X8, 0x2CE000
	0x03EA0E44 LDR X8, [X8 + 0xC8]
	0x03EA0E48 LDP X20, X19, [X31 + 0x10]
	0x03EA0E4C MOV X2, X31
	0x03EA0E50 LDR X1, [X8]
	0x03EA0E54 LDR X30, [X31], #0x20
	0x03EA0E58 B 0x366456C
	0x03EA0E5C BL 0x1C16F20
	0x03EA0E60 STR X30, [X31 - 0x20]!
	0x03EA0E64 STP X20, X19, [X31 + 0x10]
	0x03EA0E68 ADRP X20, 0x548000
	0x03EA0E6C LDRB W8, [X20 + 0xEE9]
	0x03EA0E70 MOV X19, X0
	0x03EA0E74 TBNZ X8, 0x0, 0x3EA0E8C
	0x03EA0E78 ADRP X0, 0x2CE000
	0x03EA0E7C LDR X0, [X0 + 0xD0]
	0x03EA0E80 BL 0x1C16CF4
	0x03EA0E84 MOVZ W8, 0x1
	0x03EA0E88 STRB W8, [X20 + 0xEE9]
	0x03EA0E8C LDR X0, [X19 + 0x18]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x549000
	006 Move X21, 0x2CE000
	007 Move W8, [X20+3810]
	008 Move X21, [X21+712]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x2CE000
	015 Move X0, [X0+712]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3810], W8
	019 Move X0, [X21]
	020 Call 0x1C17F10
	021 Move W1, 1
	022 Move X2, X19
	023 Move X20, X0
	024 Call AuthenticationChallenge..ctor, X0, X1, X2
	025 Move X0, X20
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Return X0

Method: WebSocketSharp.Net.AuthenticationChallenge Parse(System.String value)

Disassembly:
	0x03EA0E90 CBZ X0, 0x3EA0EB0
	0x03EA0E94 ADRP X8, 0x2CE000
	0x03EA0E98 LDR X8, [X8 + 0xD0]
	0x03EA0E9C LDP X20, X19, [X31 + 0x10]
	0x03EA0EA0 MOV X2, X31
	0x03EA0EA4 LDR X1, [X8]
	0x03EA0EA8 LDR X30, [X31], #0x20
	0x03EA0EAC B 0x366456C
	0x03EA0EB0 BL 0x1C16F20
	0x03EA0EB4 STR X30, [X31 - 0x20]!
	0x03EA0EB8 STP X20, X19, [X31 + 0x10]
	0x03EA0EBC ADRP X20, 0x548000
	0x03EA0EC0 LDRB W8, [X20 + 0xEEA]
	0x03EA0EC4 MOV X19, X0
	0x03EA0EC8 TBNZ X8, 0x0, 0x3EA0EE0
	0x03EA0ECC ADRP X0, 0x27D000
	0x03EA0ED0 LDR X0, [X0 + 0xCB8]
	0x03EA0ED4 BL 0x1C16CF4
	0x03EA0ED8 MOVZ W8, 0x1
	0x03EA0EDC STRB W8, [X20 + 0xEEA]
	0x03EA0EE0 LDR X0, [X19 + 0x18]
	0x03EA0EE4 CBZ X0, 0x3EA0F04
	0x03EA0EE8 ADRP X8, 0x27D000
	0x03EA0EEC LDR X8, [X8 + 0xCB8]
	0x03EA0EF0 LDP X20, X19, [X31 + 0x10]
	0x03EA0EF4 MOV X2, X31
	0x03EA0EF8 LDR X1, [X8]
	0x03EA0EFC LDR X30, [X31], #0x20
	0x03EA0F00 B 0x366456C
	0x03EA0F04 BL 0x1C16F20
	0x03EA0F08 STR X30, [X31 - 0x20]!
	0x03EA0F0C STP X20, X19, [X31 + 0x10]
	0x03EA0F10 ADRP X20, 0x548000
	0x03EA0F14 LDRB W8, [X20 + 0xEEB]
	0x03EA0F18 MOV X19, X0
	0x03EA0F1C TBNZ X8, 0x0, 0x3EA0F34
	0x03EA0F20 ADRP X0, 0x2CD000
	0x03EA0F24 LDR X0, [X0 + 0xCF8]
	0x03EA0F28 BL 0x1C16CF4
	0x03EA0F2C MOVZ W8, 0x1
	0x03EA0F30 STRB W8, [X20 + 0xEEB]
	0x03EA0F34 LDR X0, [X19 + 0x18]
	0x03EA0F38 CBZ X0, 0x3EA0F58
	0x03EA0F3C ADRP X8, 0x2CD000
	0x03EA0F40 LDR X8, [X8 + 0xCF8]
	0x03EA0F44 LDP X20, X19, [X31 + 0x10]
	0x03EA0F48 MOV X2, X31
	0x03EA0F4C LDR X1, [X8]
	0x03EA0F50 LDR X30, [X31], #0x20
	0x03EA0F54 B 0x366456C
	0x03EA0F58 BL 0x1C16F20
	0x03EA0F5C STR X30, [X31 - 0x20]!
	0x03EA0F60 STP X20, X19, [X31 + 0x10]
	0x03EA0F64 ADRP X20, 0x548000
	0x03EA0F68 LDRB W8, [X20 + 0xEEC]
	0x03EA0F6C MOV X19, X0
	0x03EA0F70 TBNZ X8, 0x0, 0x3EA0F88
	0x03EA0F74 ADRP X0, 0x283000
	0x03EA0F78 LDR X0, [X0 + 0xE18]
	0x03EA0F7C BL 0x1C16CF4
	0x03EA0F80 MOVZ W8, 0x1
	0x03EA0F84 STRB W8, [X20 + 0xEEC]
	0x03EA0F88 LDR X0, [X19 + 0x18]
	0x03EA0F8C CBZ X0, 0x3EA0FAC
	0x03EA0F90 ADRP X8, 0x283000
	0x03EA0F94 LDR X8, [X8 + 0xE18]
	0x03EA0F98 LDP X20, X19, [X31 + 0x10]
	0x03EA0F9C MOV X2, X31
	0x03EA0FA0 LDR X1, [X8]
	0x03EA0FA4 LDR X30, [X31], #0x20
	0x03EA0FA8 B 0x366456C
	0x03EA0FAC BL 0x1C16F20
	0x03EA0FB0 STR X30, [X31 - 0x20]!
	0x03EA0FB4 STP X20, X19, [X31 + 0x10]
	0x03EA0FB8 ADRP X20, 0x548000
	0x03EA0FBC LDRB W8, [X20 + 0xEED]
	0x03EA0FC0 MOV X19, X0
	0x03EA0FC4 TBNZ X8, 0x0, 0x3EA0FDC
	0x03EA0FC8 ADRP X0, 0x2CC000
	0x03EA0FCC LDR X0, [X0 + 0x9B8]
	0x03EA0FD0 BL 0x1C16CF4
	0x03EA0FD4 MOVZ W8, 0x1
	0x03EA0FD8 STRB W8, [X20 + 0xEED]
	0x03EA0FDC LDR X0, [X19 + 0x18]
	0x03EA0FE0 CBZ X0, 0x3EA1000
	0x03EA0FE4 ADRP X8, 0x2CC000
	0x03EA0FE8 LDR X8, [X8 + 0x9B8]
	0x03EA0FEC LDP X20, X19, [X31 + 0x10]
	0x03EA0FF0 MOV X2, X31
	0x03EA0FF4 LDR X1, [X8]
	0x03EA0FF8 LDR X30, [X31], #0x20
	0x03EA0FFC B 0x366456C
	0x03EA1000 BL 0x1C16F20
	0x03EA1004 STP X30, X23, [X31 - 0x30]!
	0x03EA1008 STP X22, X21, [X31 + 0x10]
	0x03EA100C STP X20, X19, [X31 + 0x20]
	0x03EA1010 ADRP X22, 0x547000
	0x03EA1014 ADRP X23, 0x29D000
	0x03EA1018 LDRB W8, [X22 + 0xEEE]
	0x03EA101C LDR X23, [X23 + 0x638]
	0x03EA1020 MOV X20, X2

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x549000
	006 Move X21, 0x25D000
	007 Move W8, [X20+3811]
	008 Move X21, [X21+2264]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {28}
	014 Move X0, 0x2CE000
	015 Move X0, [X0+712]
	016 Call 0x1C17CF4
	017 Move X0, 0x25D000
	018 Move X0, [X0+2264]
	019 Call 0x1C17CF4
	020 Move X0, 0x29E000
	021 Move X0, [X0+2664]
	022 Call 0x1C17CF4
	023 Move X0, 0x29F000
	024 Move X0, [X0+1688]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X20+3811], W8
	028 Move X0, [X21]
	029 Move W1, 1
	030 Call 0x1C17D6C
	031 Compare X0, 0
	032 JumpIfEqual {113}
	033 Move W8, [X0+24]
	034 Move X1, X0
	035 Compare W8, 0
	036 JumpIfEqual {114}
	037 Move W8, 32
	038 NotImplemented "Instruction STRH not yet implemented."
	039 Compare X19, 0
	040 JumpIfEqual {113}
	041 Move W2, 2
	042 Move X0, X19
	043 Move X3, X31
	044 Call String.Split, X0, X1, X2
	045 Compare X0, 0
	046 JumpIfEqual {113}
	047 Move W8, [X0+24]
	048 Move X19, X0
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Move X0, [X19+32]
	051 Compare X0, 0
	052 JumpIfEqual {113}
	053 Move X1, X31
	054 Call String.ToLower, X0
	055 Move X8, 0x29E000
	056 Move X8, [X8+2664]
	057 Move X2, X31
	058 Move X20, X0
	059 Move X1, [X8]
	060 Call String.op_Equality, X0, X1
	061 Move TEMP, X0
	062 And TEMP, TEMP, 1
	063 Compare TEMP, 1
	064 JumpIfNotEqual {80}
	065 Move W8, [X19+24]
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Move X0, [X19+40]
	068 Call AuthenticationBase.ParseParameters, X0
	069 Move X8, 0x2CE000
	070 Move X8, [X8+712]
	071 Move X19, X0
	072 Move X8, [X8]
	073 Move X0, X8
	074 Call 0x1C17F10
	075 Move X1, X31
	076 Move X20, X0
	077 Call Object..ctor, X0
	078 Move W8, 8
	079 Move X20, X31
	080 Move X8, 0x29F000
	081 Move X8, [X8+1688]
	082 Move X0, X20
	083 Move X2, X31
	084 Move X1, [X8]
	085 Call String.op_Equality, X0, X1
	086 Move X20, X31
	087 Move TEMP, X0
	088 And TEMP, TEMP, 1
	089 Compare TEMP, 1
	090 JumpIfNotEqual {107}
	091 Move W8, [X19+24]
	092 NotImplemented "Instruction CMP not yet implemented."
	093 Move X0, [X19+40]
	094 Call AuthenticationBase.ParseParameters, X0
	095 Move X8, 0x2CE000
	096 Move X8, [X8+712]
	097 Move X19, X0
	098 Move X8, [X8]
	099 Move X0, X8
	100 Call 0x1C17F10
	101 Move X1, X31
	102 Move X20, X0
	103 Call Object..ctor, X0
	104 Move W8, 1
	105 Move [X20+16], W8
	106 Move [X20+24], X19
	107 Move X0, X20
	108 Move X20, [X31+16]
	109 Move X19, [X31+24]
	110 Move X30, [X31+32]
	111 Move X21, [X31+40]
	112 Return X0
	113 Call 0x1C17F20
	114 Call 0x1C17F28

Method: System.String ToBasicString()

Disassembly:
	0x03EA1550 LDR X20, [X20 + 0xFF0]
	0x03EA1554 MOV X2, X31
	0x03EA1558 BL 0x366456C
	0x03EA155C LDR X8, [X20]
	0x03EA1560 MOV X2, X0
	0x03EA1564 MOV X1, X19
	0x03EA1568 MOV X3, X31
	0x03EA156C MOV X0, X8
	0x03EA1570 BL 0x3227BD4
	0x03EA1574 MOV X19, X0
	0x03EA1578 MOV X0, X31
	0x03EA157C BL 0x3241948
	0x03EA1580 CBZ X0, 0x3EA15E8
	0x03EA1584 LDR X8, [X0]
	0x03EA1588 ADRP X21, 0x25B000
	0x03EA158C ADRP X20, 0x28D000
	0x03EA1590 MOV X1, X19
	0x03EA1594 LDR X9, [X8 + 0x268]
	0x03EA1598 LDR X2, [X8 + 0x270]
	0x03EA159C LDR X21, [X21 + 0x9E8]
	0x03EA15A0 LDR X20, [X20 + 0x850]
	0x03EA15A4 BLR X9
	0x03EA15A8 LDR X8, [X21]
	0x03EA15AC MOV X19, X0
	0x03EA15B0 LDR W9, [X8 + 0xE0]
	0x03EA15B4 CBNZ W9, 0x3EA15C0
	0x03EA15B8 MOV X0, X8
	0x03EA15BC BL 0x1C16DFC
	0x03EA15C0 MOV X0, X19
	0x03EA15C4 MOV X1, X31
	0x03EA15C8 BL 0x33225A0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x548000
	005 Move W8, [X20+3812]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0x2CE000
	012 Move X0, [X0+312]
	013 Call 0x1C17CF4
	014 Move X0, 0x29E000
	015 Move X0, [X0+1576]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3812], W8
	019 Move X0, [X19+24]
	020 Compare X0, 0
	021 JumpIfEqual {38}
	022 Move X8, 0x29E000
	023 Move X8, [X8+1576]
	024 Move X19, 0x2CE000
	025 Move X2, X31
	026 Move X1, [X8]
	027 Move X19, [X19+312]
	028 Call NameValueCollection.get_Item, X0, X1
	029 Move X8, [X19]
	030 Move X20, [X31+16]
	031 Move X19, [X31+24]
	032 Move X1, X0
	033 Move X2, X31
	034 Move X0, X8
	035 Move X30, [X31+32]
	036 Call String.Format, X0, X1
	037 Return X0
	038 Call 0x1C17F20

Method: System.String ToDigestString()

Disassembly:
	0x03EA15CC LDR X8, [X20]
	0x03EA15D0 LDP X20, X19, [X31 + 0x10]
	0x03EA15D4 MOV X1, X0
	0x03EA15D8 MOV X2, X31
	0x03EA15DC MOV X0, X8
	0x03EA15E0 LDP X30, X21, [X31], #0x20
	0x03EA15E4 B 0x321B938
	0x03EA15E8 BL 0x1C16F20
	0x03EA15EC STR X30, [X31 - 0x30]!
	0x03EA15F0 STP X22, X21, [X31 + 0x10]
	0x03EA15F4 STP X20, X19, [X31 + 0x20]
	0x03EA15F8 ADRP X20, 0x547000
	0x03EA15FC ADRP X22, 0x252000
	0x03EA1600 ADRP X21, 0x252000
	0x03EA1604 LDRB W8, [X20 + 0xEF8]
	0x03EA1608 LDR X22, [X22 + 0x8F0]
	0x03EA160C LDR X21, [X21 + 0x9D0]
	0x03EA1610 MOV X19, X0
	0x03EA1614 TBNZ X8, 0x0, 0x3EA16E0
	0x03EA1618 ADRP X0, 0x252000
	0x03EA161C LDR X0, [X0 + 0x9D0]
	0x03EA1620 BL 0x1C16CF4
	0x03EA1624 ADRP X0, 0x252000
	0x03EA1628 LDR X0, [X0 + 0x8F0]
	0x03EA162C BL 0x1C16CF4
	0x03EA1630 ADRP X0, 0x282000
	0x03EA1634 LDR X0, [X0 + 0xE18]
	0x03EA1638 BL 0x1C16CF4
	0x03EA163C ADRP X0, 0x2CD000
	0x03EA1640 LDR X0, [X0 + 0xD0]
	0x03EA1644 BL 0x1C16CF4
	0x03EA1648 ADRP X0, 0x253000
	0x03EA164C LDR X0, [X0 + 0x870]
	0x03EA1650 BL 0x1C16CF4
	0x03EA1654 ADRP X0, 0x2CD000
	0x03EA1658 LDR X0, [X0 + 0x188]
	0x03EA165C BL 0x1C16CF4
	0x03EA1660 ADRP X0, 0x2CC000
	0x03EA1664 LDR X0, [X0 + 0xCF8]
	0x03EA1668 BL 0x1C16CF4
	0x03EA166C ADRP X0, 0x29D000
	0x03EA1670 LDR X0, [X0 + 0x618]
	0x03EA1674 BL 0x1C16CF4
	0x03EA1678 ADRP X0, 0x2CD000
	0x03EA167C LDR X0, [X0 + 0x148]
	0x03EA1680 BL 0x1C16CF4
	0x03EA1684 ADRP X0, 0x2CD000
	0x03EA1688 LDR X0, [X0 + 0xC8]
	0x03EA168C BL 0x1C16CF4
	0x03EA1690 ADRP X0, 0x29D000
	0x03EA1694 LDR X0, [X0 + 0x620]
	0x03EA1698 BL 0x1C16CF4
	0x03EA169C ADRP X0, 0x29B000
	0x03EA16A0 LDR X0, [X0 + 0xAD8]
	0x03EA16A4 BL 0x1C16CF4
	0x03EA16A8 ADRP X0, 0x29D000
	0x03EA16AC LDR X0, [X0 + 0x628]
	0x03EA16B0 BL 0x1C16CF4
	0x03EA16B4 ADRP X0, 0x2CB000
	0x03EA16B8 LDR X0, [X0 + 0x9B8]
	0x03EA16BC BL 0x1C16CF4
	0x03EA16C0 ADRP X0, 0x2CD000
	0x03EA16C4 LDR X0, [X0 + 0x168]
	0x03EA16C8 BL 0x1C16CF4
	0x03EA16CC ADRP X0, 0x2CD000
	0x03EA16D0 LDR X0, [X0 + 0x190]
	0x03EA16D4 BL 0x1C16CF4
	0x03EA16D8 MOVZ W8, 0x1
	0x03EA16DC STRB W8, [X20 + 0xEF8]
	0x03EA16E0 LDR X0, [X22]
	0x03EA16E4 BL 0x1C16F10
	0x03EA16E8 MOVZ W1, 0x100
	0x03EA16EC MOV X2, X31
	0x03EA16F0 MOV X20, X0
	0x03EA16F4 BL 0x3231B28
	0x03EA16F8 LDR X0, [X21]
	0x03EA16FC MOVZ W1, 0x5
	0x03EA1700 BL 0x1C16D6C
	0x03EA1704 LDR X8, [X19 + 0x18]
	0x03EA1708 CBZ X8, 0x3EA19B0
	0x03EA170C ADRP X9, 0x2CB000
	0x03EA1710 LDR X9, [X9 + 0x9B8]
	0x03EA1714 MOV X21, X0
	0x03EA1718 MOV X0, X8
	0x03EA171C MOV X2, X31
	0x03EA1720 LDR X1, [X9]
	0x03EA1724 BL 0x366456C
	0x03EA1728 CBZ X21, 0x3EA19B0
	0x03EA172C MOV X22, X0
	0x03EA1730 CBZ X0, 0x3EA1748
	0x03EA1734 LDR X8, [X21]
	0x03EA1738 MOV X0, X22
	0x03EA173C LDR X1, [X8 + 0x40]
	0x03EA1740 BL 0x1C16E00
	0x03EA1744 CBZ X0, 0x3EA19B8
	0x03EA1748 LDR W8, [X21 + 0x18]
	0x03EA174C CBZ W8, 0x3EA19B4
	0x03EA1750 STR X22, [X21 + 0x20]
	0x03EA1754 LDR X0, [X19 + 0x18]
	0x03EA1758 CBZ X0, 0x3EA19B0
	0x03EA175C ADRP X8, 0x29D000
	0x03EA1760 LDR X8, [X8 + 0x628]
	0x03EA1764 MOV X2, X31
	0x03EA1768 LDR X1, [X8]
	0x03EA176C BL 0x366456C
	0x03EA1770 MOV X22, X0
	0x03EA1774 CBZ X0, 0x3EA178C
	0x03EA1778 LDR X8, [X21]
	0x03EA177C MOV X0, X22
	0x03EA1780 LDR X1, [X8 + 0x40]
	0x03EA1784 BL 0x1C16E00
	0x03EA1788 CBZ X0, 0x3EA19B8
	0x03EA178C LDR W8, [X21 + 0x18]
	0x03EA1790 CMP W8, 0x1
	0x03EA1794 B.LS 0x3EA19B4
	0x03EA1798 STR X22, [X21 + 0x28]
	0x03EA179C LDR X0, [X19 + 0x18]
	0x03EA17A0 CBZ X0, 0x3EA19B0
	0x03EA17A4 ADRP X8, 0x253000
	0x03EA17A8 LDR X8, [X8 + 0x870]
	0x03EA17AC MOV X2, X31
	0x03EA17B0 LDR X1, [X8]
	0x03EA17B4 BL 0x366456C
	0x03EA17B8 MOV X22, X0
	0x03EA17BC CBZ X0, 0x3EA17D4
	0x03EA17C0 LDR X8, [X21]
	0x03EA17C4 MOV X0, X22
	0x03EA17C8 LDR X1, [X8 + 0x40]
	0x03EA17CC BL 0x1C16E00
	0x03EA17D0 CBZ X0, 0x3EA19B8
	0x03EA17D4 LDR W8, [X21 + 0x18]
	0x03EA17D8 CMP W8, 0x2
	0x03EA17DC B.LS 0x3EA19B4
	0x03EA17E0 STR X22, [X21 + 0x30]
	0x03EA17E4 LDR X0, [X19 + 0x18]
	0x03EA17E8 CBZ X0, 0x3EA19B0
	0x03EA17EC ADRP X8, 0x282000
	0x03EA17F0 LDR X8, [X8 + 0xE18]
	0x03EA17F4 MOV X2, X31
	0x03EA17F8 LDR X1, [X8]
	0x03EA17FC BL 0x366456C
	0x03EA1800 MOV X22, X0
	0x03EA1804 CBZ X0, 0x3EA181C
	0x03EA1808 LDR X8, [X21]
	0x03EA180C MOV X0, X22
	0x03EA1810 LDR X1, [X8 + 0x40]
	0x03EA1814 BL 0x1C16E00
	0x03EA1818 CBZ X0, 0x3EA19B8
	0x03EA181C LDR W8, [X21 + 0x18]
	0x03EA1820 CMP W8, 0x3
	0x03EA1824 B.LS 0x3EA19B4
	0x03EA1828 STR X22, [X21 + 0x38]
	0x03EA182C LDR X0, [X19 + 0x18]
	0x03EA1830 CBZ X0, 0x3EA19B0
	0x03EA1834 ADRP X8, 0x2CC000
	0x03EA1838 LDR X8, [X8 + 0xCF8]
	0x03EA183C MOV X2, X31
	0x03EA1840 LDR X1, [X8]
	0x03EA1844 BL 0x366456C
	0x03EA1848 MOV X22, X0
	0x03EA184C CBZ X0, 0x3EA1864
	0x03EA1850 LDR X8, [X21]
	0x03EA1854 MOV X0, X22
	0x03EA1858 LDR X1, [X8 + 0x40]
	0x03EA185C BL 0x1C16E00
	0x03EA1860 CBZ X0, 0x3EA19B8
	0x03EA1864 LDR W8, [X21 + 0x18]
	0x03EA1868 CMP W8, 0x4
	0x03EA186C B.LS 0x3EA19B4
	0x03EA1870 STR X22, [X21 + 0x40]
	0x03EA1874 CBZ X20, 0x3EA19B0
	0x03EA1878 ADRP X8, 0x2CD000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x548000
	007 Move X21, 0x253000
	008 Move W8, [X20+3813]
	009 Move X21, [X21+2288]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {59}
	015 Move X0, 0x253000
	016 Move X0, [X0+2288]
	017 Call 0x1C17CF4
	018 Move X0, 0x2CC000
	019 Move X0, [X0+3776]
	020 Call 0x1C17CF4
	021 Move X0, 0x2CE000
	022 Move X0, [X0+320]
	023 Call 0x1C17CF4
	024 Move X0, 0x254000
	025 Move X0, [X0+2160]
	026 Call 0x1C17CF4
	027 Move X0, 0x29E000
	028 Move X0, [X0+1560]
	029 Call 0x1C17CF4
	030 Move X0, 0x2CE000
	031 Move X0, [X0+328]
	032 Call 0x1C17CF4
	033 Move X0, 0x2CE000
	034 Move X0, [X0+304]
	035 Call 0x1C17CF4
	036 Move X0, 0x29E000
	037 Move X0, [X0+1568]
	038 Call 0x1C17CF4
	039 Move X0, 0x2CE000
	040 Move X0, [X0+336]
	041 Call 0x1C17CF4
	042 Move X0, 0x29C000
	043 Move X0, [X0+2776]
	044 Call 0x1C17CF4
	045 Move X0, 0x2CE000
	046 Move X0, [X0+344]
	047 Call 0x1C17CF4
	048 Move X0, 0x29E000
	049 Move X0, [X0+1576]
	050 Call 0x1C17CF4
	051 Move X0, 0x2CE000
	052 Move X0, [X0+352]
	053 Call 0x1C17CF4
	054 Move X0, 0x2CE000
	055 Move X0, [X0+360]
	056 Call 0x1C17CF4
	057 Move W8, 1
	058 Move [X20+3813], W8
	059 Move X0, [X21]
	060 Call 0x1C17F10
	061 Move W1, 128
	062 Move X2, X31
	063 Move X20, X0
	064 Call StringBuilder..ctor, X0, X1
	065 Move X0, [X19+24]
	066 Compare X0, 0
	067 JumpIfEqual {192}
	068 Move X8, 0x2CC000
	069 Move X8, [X8+3776]
	070 Move X2, X31
	071 Move X1, [X8]
	072 Call NameValueCollection.get_Item, X0, X1
	073 Move X8, [X19+24]
	074 Compare X8, 0
	075 JumpIfEqual {192}
	076 Move X9, 0x29E000
	077 Move X9, [X9+1576]
	078 Move X21, X0
	079 Move X0, X8
	080 Move X2, X31
	081 Move X1, [X9]
	082 Call NameValueCollection.get_Item, X0, X1
	083 Move X8, [X19+24]
	084 Compare X8, 0
	085 JumpIfEqual {192}
	086 Move X9, 0x254000
	087 Move X9, [X9+2160]
	088 Move X22, X0
	089 Move X0, X8
	090 Move X2, X31
	091 Move X1, [X9]
	092 Call NameValueCollection.get_Item, X0, X1
	093 Compare X20, 0
	094 JumpIfEqual {192}
	095 Move X4, X0
	096 Compare X21, 0
	097 JumpIfEqual {106}
	098 Move X8, 0x2CE000
	099 Move X8, [X8+344]
	100 Move X0, X20
	101 Move X2, X22
	102 Move X3, X21
	103 Move X1, [X8]
	104 Move X5, X31
	105 Call StringBuilder.AppendFormat, X0, X1, X2, X3, X4
	106 Move X8, 0x2CE000
	107 Move X8, [X8+320]
	108 Move X0, X20
	109 Move X2, X22
	110 Move X3, X4
	111 Move X1, [X8]
	112 Move X4, X31
	113 Call StringBuilder.AppendFormat, X0, X1, X2, X3
	114 Move X0, [X19+24]
	115 Compare X0, 0
	116 JumpIfEqual {192}
	117 Move X8, 0x29E000
	118 Move X8, [X8+1568]
	119 Move X2, X31
	120 Move X1, [X8]
	121 Call NameValueCollection.get_Item, X0, X1
	122 Compare X0, 0
	123 JumpIfEqual {131}
	124 Move X8, 0x2CE000
	125 Move X8, [X8+328]
	126 Move X2, X0
	127 Move X0, X20
	128 Move X3, X31
	129 Move X1, [X8]
	130 Call StringBuilder.AppendFormat, X0, X1, X2
	131 Move X0, [X19+24]
	132 Compare X0, 0
	133 JumpIfEqual {192}
	134 Move X8, 0x2CE000
	135 Move X8, [X8+304]
	136 Move X2, X31
	137 Move X1, [X8]
	138 Call NameValueCollection.get_Item, X0, X1
	139 Compare X0, 0
	140 JumpIfEqual {148}
	141 Move X8, 0x2CE000
	142 Move X8, [X8+336]
	143 Move X2, X0
	144 Move X0, X20
	145 Move X3, X31
	146 Move X1, [X8]
	147 Call StringBuilder.AppendFormat, X0, X1, X2
	148 Move X0, [X19+24]
	149 Compare X0, 0
	150 JumpIfEqual {192}
	151 Move X8, 0x29C000
	152 Move X8, [X8+2776]
	153 Move X2, X31
	154 Move X1, [X8]
	155 Call NameValueCollection.get_Item, X0, X1
	156 Compare X0, 0
	157 JumpIfEqual {165}
	158 Move X8, 0x2CE000
	159 Move X8, [X8+360]
	160 Move X2, X0
	161 Move X0, X20
	162 Move X3, X31
	163 Move X1, [X8]
	164 Call StringBuilder.AppendFormat, X0, X1, X2
	165 Move X0, [X19+24]
	166 Compare X0, 0
	167 JumpIfEqual {192}
	168 Move X8, 0x29E000
	169 Move X8, [X8+1560]
	170 Move X2, X31
	171 Move X1, [X8]
	172 Call NameValueCollection.get_Item, X0, X1
	173 Compare X0, 0
	174 JumpIfEqual {182}
	175 Move X8, 0x2CE000
	176 Move X8, [X8+352]
	177 Move X2, X0
	178 Move X0, X20
	179 Move X3, X31
	180 Move X1, [X8]
	181 Call StringBuilder.AppendFormat, X0, X1, X2
	182 Move X8, [X20]
	183 Move X0, X20
	184 Move X20, [X31+32]
	185 Move X19, [X31+40]
	186 Move X22, [X31+16]
	187 Move X21, [X31+24]
	188 Move X2, [X8+360]
	189 Move X1, [X8+368]
	190 Move X30, [X31+48]
	191 CallNoReturn X2
	192 Call 0x1C17F20

