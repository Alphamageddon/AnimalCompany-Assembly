Type: WebSocketSharp.Net.HttpListenerResponse

Method: System.Void .ctor(WebSocketSharp.Net.HttpListenerContext context)

Disassembly:
	0x03E90298 LDRB W8, [X0 + 0x40]
	0x03E9029C MOV X19, X0
	0x03E902A0 CBNZ W8, 0x3E902D8
	0x03E902A4 LDR X0, [X19 + 0x58]
	0x03E902A8 CBNZ X0, 0x3E902CC
	0x03E902AC LDR X0, [X19 + 0x30]
	0x03E902B0 CBZ X0, 0x3E90338
	0x03E902B4 MOV X1, X31
	0x03E902B8 BL 0x3E8D034
	0x03E902BC CBZ X0, 0x3E90338
	0x03E902C0 MOV X1, X31
	0x03E902C4 BL 0x3E8BA60
	0x03E902C8 STR X0, [X19 + 0x58]
	0x03E902CC LDP X20, X19, [X31 + 0x10]
	0x03E902D0 LDR X30, [X31], #0x20
	0x03E902D4 RET
	0x03E902D8 MOV X0, X19
	0x03E902DC MOV X1, X31
	0x03E902E0 BL 0x33BE520
	0x03E902E4 MOV X19, X0
	0x03E902E8 BL 0x19903C0
	0x03E902EC LDR X8, [X19]
	0x03E902F0 MOV X0, X19
	0x03E902F4 LDP X9, X1, [X8 + 0x168]
	0x03E902F8 BLR X9
	0x03E902FC MOV X19, X0
	0x03E90300 ADRP X0, 0x28C000
	0x03E90304 LDR X0, [X0 + 0x4B8]
	0x03E90308 BL 0x1C16D08
	0x03E9030C BL 0x1C16F10
	0x03E90310 MOV X1, X19
	0x03E90314 MOV X2, X31
	0x03E90318 MOV X20, X0
	0x03E9031C BL 0x338C448
	0x03E90320 ADRP X0, 0x2DD000
	0x03E90324 LDR X0, [X0 + 0x498]
	0x03E90328 BL 0x1C16D08
	0x03E9032C MOV X1, X0
	0x03E90330 MOV X0, X20
	0x03E90334 BL 0x1C16DEC
	0x03E90338 BL 0x1C16F20
	0x03E9033C LDR X0, [X0 + 0x78]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x559000
	008 Move X22, 0x2AE000
	009 Move X21, 0x2DD000
	010 Move W8, [X23+3682]
	011 Move X22, [X22+1344]
	012 Move X21, [X21+704]
	013 Move X20, X1
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {27}
	019 Move X0, 0x2DD000
	020 Move X0, [X0+704]
	021 Call 0x1C17CF4
	022 Move X0, 0x2AE000
	023 Move X0, [X0+1344]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X23+3682], W8
	027 Move X0, X19
	028 Move X1, X31
	029 Call Object..ctor, X0
	030 Move W8, 1
	031 Move W9, 200
	032 Move [X19+48], X20
	033 Move [X19+81], W8
	034 Move [X19+108], W9
	035 Move X8, [X22]
	036 Move [X19+112], X8
	037 Move X0, [X21]
	038 Move W8, [X0+224]
	039 Compare W8, 0
	040 JumpIfNotEqual {43}
	041 Call 0x1C17DFC
	042 Move X0, [X21]
	043 Move X8, [X0+184]
	044 Move X22, [X31+16]
	045 Move X21, [X31+24]
	046 Move X8, [X8+8]
	047 Move [X19+120], X8
	048 Move X20, [X31+32]
	049 Move X19, [X31+40]
	050 Move X30, [X31+48]
	051 Move X23, [X31+56]
	052 Return 

Method: System.Boolean get_CloseConnection()

Disassembly:
	0x03E90340 RET
	0x03E90344 STP X30, X21, [X31 - 0x20]!

ISIL:
	001 Move W0, [X0+16]
	002 Return X0

Method: System.Void set_CloseConnection(System.Boolean value)

Disassembly:
	0x03E90348 STP X20, X19, [X31 + 0x10]
	0x03E9034C ADRP X21, 0x558000
	0x03E90350 ADRP X20, 0x265000

ISIL:
	001 And W8, W1, 1
	002 Move [X0+16], W8
	003 Return 

Method: WebSocketSharp.Net.WebHeaderCollection get_FullHeaders()

Disassembly:
	0x03E90354 LDRB W8, [X21 + 0xE67]
	0x03E90358 LDR X20, [X20 + 0xA28]
	0x03E9035C MOV X19, X0
	0x03E90360 TBNZ X8, 0x0, 0x3E90378
	0x03E90364 ADRP X0, 0x265000
	0x03E90368 LDR X0, [X0 + 0xA28]
	0x03E9036C BL 0x1C16CF4
	0x03E90370 MOVZ W8, 0x1
	0x03E90374 STRB W8, [X21 + 0xE67]
	0x03E90378 LDR X0, [X20]
	0x03E9037C LDR X20, [X19 + 0x60]
	0x03E90380 LDR W8, [X0 + 0xE0]
	0x03E90384 CBNZ W8, 0x3E9038C
	0x03E90388 BL 0x1C16DFC
	0x03E9038C MOV X0, X20
	0x03E90390 MOV X1, X31
	0x03E90394 MOV X2, X31
	0x03E90398 BL 0x361A090
	0x03E9039C TBZ X0, 0x0, 0x3E903B8
	0x03E903A0 LDR X0, [X19 + 0x60]
	0x03E903A4 CBZ X0, 0x3E903C8
	0x03E903A8 LDP X20, X19, [X31 + 0x10]
	0x03E903AC MOV X1, X31
	0x03E903B0 LDP X30, X21, [X31], #0x20
	0x03E903B4 B 0x361A77C
	0x03E903B8 LDP X20, X19, [X31 + 0x10]
	0x03E903BC MOV X0, X31
	0x03E903C0 LDP X30, X21, [X31], #0x20
	0x03E903C4 RET
	0x03E903C8 BL 0x1C16F20
	0x03E903CC SUB X31, X31, 0x30
	0x03E903D0 STP X30, X21, [X31 + 0x10]
	0x03E903D4 STP X20, X19, [X31 + 0x20]
	0x03E903D8 ADRP X21, 0x558000
	0x03E903DC LDRB W8, [X21 + 0xE68]
	0x03E903E0 MOV X20, X1
	0x03E903E4 MOV X19, X0
	0x03E903E8 TBNZ X8, 0x0, 0x3E90400
	0x03E903EC ADRP X0, 0x265000
	0x03E903F0 LDR X0, [X0 + 0xA28]
	0x03E903F4 BL 0x1C16CF4
	0x03E903F8 MOVZ W8, 0x1
	0x03E903FC STRB W8, [X21 + 0xE68]
	0x03E90400 STR X31, [X31 + 0x8]
	0x03E90404 LDRB W8, [X19 + 0x40]
	0x03E90408 CBNZ W8, 0x3E90470
	0x03E9040C LDRB W8, [X19 + 0x50]
	0x03E90410 CBNZ W8, 0x3E904BC
	0x03E90414 CBZ X20, 0x3E90458
	0x03E90418 LDR W8, [X20 + 0x10]
	0x03E9041C CBZ W8, 0x3E904F0
	0x03E90420 ADRP X8, 0x265000
	0x03E90424 LDR X8, [X8 + 0xA28]
	0x03E90428 LDR X0, [X8]
	0x03E9042C LDR W8, [X0 + 0xE0]
	0x03E90430 CBNZ W8, 0x3E90438
	0x03E90434 BL 0x1C16DFC
	0x03E90438 ADD X2, X31, 0x8
	0x03E9043C MOVZ W1, 0x1
	0x03E90440 MOV X0, X20
	0x03E90444 MOV X3, X31
	0x03E90448 BL 0x361E23C
	0x03E9044C TBZ X0, 0x0, 0x3E904FC
	0x03E90450 LDR X8, [X31 + 0x8]
	0x03E90454 B 0x3E9045C
	0x03E90458 MOV X8, X31
	0x03E9045C STR X8, [X19 + 0x60]
	0x03E90460 LDP X20, X19, [X31 + 0x20]
	0x03E90464 LDP X30, X21, [X31 + 0x10]
	0x03E90468 ADD X31, X31, 0x30
	0x03E9046C RET
	0x03E90470 MOV X0, X19
	0x03E90474 MOV X1, X31
	0x03E90478 BL 0x33BE520
	0x03E9047C MOV X19, X0
	0x03E90480 BL 0x19903C0
	0x03E90484 LDR X8, [X19]
	0x03E90488 MOV X0, X19
	0x03E9048C LDP X9, X1, [X8 + 0x168]
	0x03E90490 BLR X9
	0x03E90494 MOV X19, X0
	0x03E90498 ADRP X0, 0x28C000
	0x03E9049C LDR X0, [X0 + 0x4B8]
	0x03E904A0 BL 0x1C16D08
	0x03E904A4 BL 0x1C16F10
	0x03E904A8 MOV X1, X19
	0x03E904AC MOV X2, X31
	0x03E904B0 MOV X20, X0
	0x03E904B4 BL 0x338C448
	0x03E904B8 B 0x3E90540
	0x03E904BC ADRP X0, 0x2DD000
	0x03E904C0 LDR X0, [X0 + 0x458]
	0x03E904C4 BL 0x1C16D08
	0x03E904C8 MOV X19, X0
	0x03E904CC ADRP X0, 0x263000
	0x03E904D0 LDR X0, [X0 + 0x5B0]
	0x03E904D4 BL 0x1C16D08
	0x03E904D8 BL 0x1C16F10
	0x03E904DC MOV X1, X19
	0x03E904E0 MOV X2, X31
	0x03E904E4 MOV X20, X0
	0x03E904E8 BL 0x337DF1C
	0x03E904EC B 0x3E90540
	0x03E904F0 ADRP X0, 0x28C000
	0x03E904F4 LDR X0, [X0 + 0x9B8]
	0x03E904F8 B 0x3E90504
	0x03E904FC ADRP X0, 0x2DD000
	0x03E90500 LDR X0, [X0 + 0x4A0]
	0x03E90504 BL 0x1C16D08
	0x03E90508 MOV X19, X0
	0x03E9050C ADRP X0, 0x26B000
	0x03E90510 LDR X0, [X0 + 0x578]
	0x03E90514 BL 0x1C16D08
	0x03E90518 BL 0x1C16F10
	0x03E9051C MOV X20, X0
	0x03E90520 ADRP X0, 0x26D000
	0x03E90524 LDR X0, [X0 + 0xEC8]
	0x03E90528 BL 0x1C16D08
	0x03E9052C MOV X2, X0
	0x03E90530 MOV X0, X20
	0x03E90534 MOV X1, X19
	0x03E90538 MOV X3, X31
	0x03E9053C BL 0x330E16C
	0x03E90540 ADRP X0, 0x2DD000
	0x03E90544 LDR X0, [X0 + 0x4A8]
	0x03E90548 BL 0x1C16D08
	0x03E9054C MOV X1, X0
	0x03E90550 MOV X0, X20
	0x03E90554 BL 0x1C16DEC
	0x03E90558 LDRB W0, [X0 + 0x68]
	0x03E9055C RET
	0x03E90560 STR X30, [X31 - 0x20]!
	0x03E90564 STP X20, X19, [X31 + 0x10]
	0x03E90568 LDRB W8, [X0 + 0x40]
	0x03E9056C CBNZ W8, 0x3E9058C
	0x03E90570 LDRB W8, [X0 + 0x50]
	0x03E90574 CBNZ W8, 0x3E905D4
	0x03E90578 LDP X20, X19, [X31 + 0x10]
	0x03E9057C AND W8, W1, 0x1
	0x03E90580 STRB W8, [X0 + 0x68]
	0x03E90584 LDR X30, [X31], #0x20
	0x03E90588 RET
	0x03E9058C MOV X1, X31
	0x03E90590 BL 0x33BE520
	0x03E90594 MOV X19, X0
	0x03E90598 BL 0x19903C0
	0x03E9059C LDR X8, [X19]
	0x03E905A0 MOV X0, X19
	0x03E905A4 LDP X9, X1, [X8 + 0x168]
	0x03E905A8 BLR X9
	0x03E905AC MOV X19, X0
	0x03E905B0 ADRP X0, 0x28C000
	0x03E905B4 LDR X0, [X0 + 0x4B8]
	0x03E905B8 BL 0x1C16D08
	0x03E905BC BL 0x1C16F10
	0x03E905C0 MOV X1, X19
	0x03E905C4 MOV X2, X31
	0x03E905C8 MOV X20, X0
	0x03E905CC BL 0x338C448
	0x03E905D0 B 0x3E90604
	0x03E905D4 ADRP X0, 0x2DD000
	0x03E905D8 LDR X0, [X0 + 0x458]
	0x03E905DC BL 0x1C16D08
	0x03E905E0 MOV X19, X0
	0x03E905E4 ADRP X0, 0x263000
	0x03E905E8 LDR X0, [X0 + 0x5B0]
	0x03E905EC BL 0x1C16D08
	0x03E905F0 BL 0x1C16F10
	0x03E905F4 MOV X1, X19
	0x03E905F8 MOV X2, X31
	0x03E905FC MOV X20, X0
	0x03E90600 BL 0x337DF1C
	0x03E90604 ADRP X0, 0x2DD000
	0x03E90608 LDR X0, [X0 + 0x4B0]
	0x03E9060C BL 0x1C16D08
	0x03E90610 MOV X1, X0
	0x03E90614 MOV X0, X20
	0x03E90618 BL 0x1C16DEC
	0x03E9061C LDR W0, [X0 + 0x6C]
	0x03E90620 RET
	0x03E90624 STP X30, X21, [X31 - 0x20]!
	0x03E90628 STP X20, X19, [X31 + 0x10]
	0x03E9062C ADRP X21, 0x558000
	0x03E90630 LDRB W8, [X21 + 0xE69]
	0x03E90634 MOV W20, W1
	0x03E90638 MOV X19, X0
	0x03E9063C TBNZ X8, 0x0, 0x3E90654
	0x03E90640 ADRP X0, 0x26A000
	0x03E90644 LDR X0, [X0 + 0x248]
	0x03E90648 BL 0x1C16CF4
	0x03E9064C MOVZ W8, 0x1
	0x03E90650 STRB W8, [X21 + 0xE69]
	0x03E90654 LDRB W8, [X19 + 0x40]
	0x03E90658 CBNZ W8, 0x3E906A8
	0x03E9065C LDRB W8, [X19 + 0x50]
	0x03E90660 CBNZ W8, 0x3E906F4
	0x03E90664 SUB W8, W20, 0x64
	0x03E90668 CMP W8, 0x384
	0x03E9066C B.CS 0x3E90728
	0x03E90670 ADRP X8, 0x26A000
	0x03E90674 LDR X8, [X8 + 0x248]
	0x03E90678 STR W20, [X19 + 0x6C]
	0x03E9067C LDR X0, [X8]
	0x03E90680 LDR W8, [X0 + 0xE0]
	0x03E90684 CBNZ W8, 0x3E9068C
	0x03E90688 BL 0x1C16DFC
	0x03E9068C MOV W0, W20
	0x03E90690 MOV X1, X31
	0x03E90694 BL 0x3E6B9DC
	0x03E90698 STR X0, [X19 + 0x70]
	0x03E9069C LDP X20, X19, [X31 + 0x10]
	0x03E906A0 LDP X30, X21, [X31], #0x20
	0x03E906A4 RET
	0x03E906A8 MOV X0, X19
	0x03E906AC MOV X1, X31
	0x03E906B0 BL 0x33BE520
	0x03E906B4 MOV X19, X0
	0x03E906B8 BL 0x19903C0
	0x03E906BC LDR X8, [X19]
	0x03E906C0 MOV X0, X19
	0x03E906C4 LDP X9, X1, [X8 + 0x168]
	0x03E906C8 BLR X9
	0x03E906CC MOV X19, X0
	0x03E906D0 ADRP X0, 0x28C000
	0x03E906D4 LDR X0, [X0 + 0x4B8]
	0x03E906D8 BL 0x1C16D08
	0x03E906DC BL 0x1C16F10
	0x03E906E0 MOV X1, X19
	0x03E906E4 MOV X2, X31
	0x03E906E8 MOV X20, X0
	0x03E906EC BL 0x338C448
	0x03E906F0 B 0x3E90758
	0x03E906F4 ADRP X0, 0x2DD000
	0x03E906F8 LDR X0, [X0 + 0x458]
	0x03E906FC BL 0x1C16D08
	0x03E90700 MOV X19, X0
	0x03E90704 ADRP X0, 0x263000
	0x03E90708 LDR X0, [X0 + 0x5B0]
	0x03E9070C BL 0x1C16D08
	0x03E90710 BL 0x1C16F10
	0x03E90714 MOV X1, X19
	0x03E90718 MOV X2, X31
	0x03E9071C MOV X20, X0
	0x03E90720 BL 0x337DF1C
	0x03E90724 B 0x3E90758
	0x03E90728 ADRP X0, 0x2DD000
	0x03E9072C LDR X0, [X0 + 0x4B8]
	0x03E90730 BL 0x1C16D08
	0x03E90734 MOV X19, X0
	0x03E90738 ADRP X0, 0x2AD000
	0x03E9073C LDR X0, [X0 + 0xCD8]
	0x03E90740 BL 0x1C16D08
	0x03E90744 BL 0x1C16F10
	0x03E90748 MOV X1, X19
	0x03E9074C MOV X2, X31
	0x03E90750 MOV X20, X0
	0x03E90754 BL 0x36792F8
	0x03E90758 ADRP X0, 0x2DD000
	0x03E9075C LDR X0, [X0 + 0x4C0]
	0x03E90760 BL 0x1C16D08
	0x03E90764 MOV X1, X0
	0x03E90768 MOV X0, X20
	0x03E9076C BL 0x1C16DEC
	0x03E90770 LDR X0, [X0 + 0x70]
	0x03E90774 RET
	0x03E90778 STP X30, X21, [X31 - 0x20]!
	0x03E9077C STP X20, X19, [X31 + 0x10]
	0x03E90780 ADRP X21, 0x558000
	0x03E90784 LDRB W8, [X21 + 0xE6A]
	0x03E90788 MOV X20, X1
	0x03E9078C MOV X19, X0
	0x03E90790 TBNZ X8, 0x0, 0x3E907A8
	0x03E90794 ADRP X0, 0x26A000
	0x03E90798 LDR X0, [X0 + 0x248]
	0x03E9079C BL 0x1C16CF4
	0x03E907A0 MOVZ W8, 0x1
	0x03E907A4 STRB W8, [X21 + 0xE6A]
	0x03E907A8 LDRB W8, [X19 + 0x40]
	0x03E907AC CBNZ W8, 0x3E90854
	0x03E907B0 LDRB W8, [X19 + 0x50]
	0x03E907B4 CBNZ W8, 0x3E908A0
	0x03E907B8 CBZ X20, 0x3E908E8
	0x03E907BC LDR W8, [X20 + 0x10]
	0x03E907C0 CBZ W8, 0x3E90818
	0x03E907C4 MOV X0, X20
	0x03E907C8 BL 0x3E90930
	0x03E907CC TBNZ X0, 0x0, 0x3E90844
	0x03E907D0 ADRP X0, 0x2DC000
	0x03E907D4 LDR X0, [X0 + 0x9B0]
	0x03E907D8 BL 0x1C16D08
	0x03E907DC MOV X19, X0
	0x03E907E0 ADRP X0, 0x26B000
	0x03E907E4 LDR X0, [X0 + 0x578]
	0x03E907E8 BL 0x1C16D08
	0x03E907EC BL 0x1C16F10
	0x03E907F0 MOV X20, X0
	0x03E907F4 ADRP X0, 0x26D000
	0x03E907F8 LDR X0, [X0 + 0xEC8]
	0x03E907FC BL 0x1C16D08
	0x03E90800 MOV X2, X0
	0x03E90804 MOV X0, X20
	0x03E90808 MOV X1, X19
	0x03E9080C MOV X3, X31
	0x03E90810 BL 0x330E16C
	0x03E90814 B 0x3E908D0
	0x03E90818 ADRP X8, 0x26A000
	0x03E9081C LDR X8, [X8 + 0x248]
	0x03E90820 LDR W20, [X19 + 0x6C]
	0x03E90824 LDR X0, [X8]
	0x03E90828 LDR W8, [X0 + 0xE0]
	0x03E9082C CBNZ W8, 0x3E90834
	0x03E90830 BL 0x1C16DFC
	0x03E90834 MOV W0, W20
	0x03E90838 MOV X1, X31
	0x03E9083C BL 0x3E6B9DC
	0x03E90840 MOV X20, X0
	0x03E90844 STR X20, [X19 + 0x70]
	0x03E90848 LDP X20, X19, [X31 + 0x10]
	0x03E9084C LDP X30, X21, [X31], #0x20
	0x03E90850 RET
	0x03E90854 MOV X0, X19
	0x03E90858 MOV X1, X31
	0x03E9085C BL 0x33BE520
	0x03E90860 MOV X19, X0
	0x03E90864 BL 0x19903C0
	0x03E90868 LDR X8, [X19]
	0x03E9086C MOV X0, X19
	0x03E90870 LDP X9, X1, [X8 + 0x168]
	0x03E90874 BLR X9
	0x03E90878 MOV X19, X0
	0x03E9087C ADRP X0, 0x28C000
	0x03E90880 LDR X0, [X0 + 0x4B8]
	0x03E90884 BL 0x1C16D08
	0x03E90888 BL 0x1C16F10
	0x03E9088C MOV X1, X19
	0x03E90890 MOV X2, X31
	0x03E90894 MOV X20, X0
	0x03E90898 BL 0x338C448
	0x03E9089C B 0x3E908D0
	0x03E908A0 ADRP X0, 0x2DD000
	0x03E908A4 LDR X0, [X0 + 0x458]
	0x03E908A8 BL 0x1C16D08
	0x03E908AC MOV X19, X0
	0x03E908B0 ADRP X0, 0x263000
	0x03E908B4 LDR X0, [X0 + 0x5B0]
	0x03E908B8 BL 0x1C16D08
	0x03E908BC BL 0x1C16F10
	0x03E908C0 MOV X1, X19
	0x03E908C4 MOV X2, X31
	0x03E908C8 MOV X20, X0
	0x03E908CC BL 0x337DF1C
	0x03E908D0 ADRP X0, 0x2DD000
	0x03E908D4 LDR X0, [X0 + 0x4C8]
	0x03E908D8 BL 0x1C16D08
	0x03E908DC MOV X1, X0
	0x03E908E0 MOV X0, X20
	0x03E908E4 BL 0x1C16DEC
	0x03E908E8 ADRP X0, 0x268000
	0x03E908EC LDR X0, [X0 + 0x528]
	0x03E908F0 BL 0x1C16D08
	0x03E908F4 BL 0x1C16F10
	0x03E908F8 MOV X19, X0
	0x03E908FC ADRP X0, 0x26D000
	0x03E90900 LDR X0, [X0 + 0xEC8]
	0x03E90904 BL 0x1C16D08
	0x03E90908 MOV X1, X0
	0x03E9090C MOV X0, X19
	0x03E90910 MOV X2, X31
	0x03E90914 BL 0x330E100
	0x03E90918 ADRP X0, 0x2DD000
	0x03E9091C LDR X0, [X0 + 0x4C8]
	0x03E90920 BL 0x1C16D08
	0x03E90924 MOV X1, X0
	0x03E90928 MOV X0, X19
	0x03E9092C BL 0x1C16DEC
	0x03E90930 STP X30, X21, [X31 - 0x20]!
	0x03E90934 STP X20, X19, [X31 + 0x10]
	0x03E90938 CBZ X0, 0x3E909A0
	0x03E9093C LDR W8, [X0 + 0x10]
	0x03E90940 MOV X19, X0
	0x03E90944 CMP W8, 0x0
	0x03E90948 CSET W21, GT
	0x03E9094C CMP W8, 0x1
	0x03E90950 B.LT 0x3E9098C
	0x03E90954 MOV W20, W31
	0x03E90958 MOV X0, X19
	0x03E9095C MOV W1, W20
	0x03E90960 MOV X2, X31
	0x03E90964 BL 0x3222A1C
	0x03E90968 SUB W8, W0, 0x20
	0x03E9096C AND W8, W8, 0xFFFF
	0x03E90970 CMP W8, 0x5F
	0x03E90974 B.CS 0x3E9098C
	0x03E90978 LDR W8, [X19 + 0x10]
	0x03E9097C ADD W20, W20, 0x1
	0x03E90980 CMP W20, W8
	0x03E90984 CSET W21, LT
	0x03E90988 B.LT 0x3E90958
	0x03E9098C LDP X20, X19, [X31 + 0x10]
	0x03E90990 ORN W8, W31, W21, 0x0
	0x03E90994 AND W0, W8, 0x1
	0x03E90998 LDP X30, X21, [X31], #0x20
	0x03E9099C RET
	0x03E909A0 BL 0x1C16F20
	0x03E909A4 SUB X31, X31, 0x50
	0x03E909A8 STR X30, [X31 + 0x20]
	0x03E909AC STP X22, X21, [X31 + 0x30]
	0x03E909B0 STP X20, X19, [X31 + 0x40]
	0x03E909B4 ADRP X22, 0x558000
	0x03E909B8 ADRP X21, 0x26A000
	0x03E909BC LDRB W8, [X22 + 0xE6B]
	0x03E909C0 LDR X21, [X21 + 0x248]
	0x03E909C4 MOV X19, X1
	0x03E909C8 MOV X20, X0
	0x03E909CC TBNZ X8, 0x0, 0x3E90A2C
	0x03E909D0 ADRP X0, 0x2DC000
	0x03E909D4 LDR X0, [X0 + 0xF20]
	0x03E909D8 BL 0x1C16CF4
	0x03E909DC ADRP X0, 0x2DC000
	0x03E909E0 LDR X0, [X0 + 0xF28]
	0x03E909E4 BL 0x1C16CF4
	0x03E909E8 ADRP X0, 0x2DC000
	0x03E909EC LDR X0, [X0 + 0xF30]
	0x03E909F0 BL 0x1C16CF4
	0x03E909F4 ADRP X0, 0x2DD000
	0x03E909F8 LDR X0, [X0 + 0x4D0]
	0x03E909FC BL 0x1C16CF4
	0x03E90A00 ADRP X0, 0x26A000
	0x03E90A04 LDR X0, [X0 + 0x248]
	0x03E90A08 BL 0x1C16CF4
	0x03E90A0C ADRP X0, 0x2DC000
	0x03E90A10 LDR X0, [X0 + 0xF38]
	0x03E90A14 BL 0x1C16CF4
	0x03E90A18 ADRP X0, 0x2DC000
	0x03E90A1C LDR X0, [X0 + 0xCB8]
	0x03E90A20 BL 0x1C16CF4
	0x03E90A24 MOVZ W8, 0x1
	0x03E90A28 STRB W8, [X22 + 0xE6B]
	0x03E90A2C ADRP X22, 0x2DD000
	0x03E90A30 LDR X22, [X22 + 0x4D0]
	0x03E90A34 MOV X0, X20
	0x03E90A38 MOV X1, X19
	0x03E90A3C STP X31, X31, [X31 + 0x8]
	0x03E90A40 STR X31, [X31 + 0x18]
	0x03E90A44 BL 0x3E90BA4
	0x03E90A48 LDR X8, [X21]
	0x03E90A4C MOV X20, X0
	0x03E90A50 LDR W9, [X8 + 0xE0]
	0x03E90A54 CBNZ W9, 0x3E90A60
	0x03E90A58 MOV X0, X8
	0x03E90A5C BL 0x1C16DFC
	0x03E90A60 LDR X1, [X22]
	0x03E90A64 MOV X0, X20
	0x03E90A68 BL 0x21E2B88
	0x03E90A6C CBZ X0, 0x3E90B24

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x559000
	009 Move X19, 0x2DD000
	010 Move W8, [X21+3683]
	011 Move X19, [X19+3200]
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {91}
	017 Move X0, 0x266000
	018 Move X0, [X0+3144]
	019 Call 0x1C17CF4
	020 Move X0, 0x265000
	021 Move X0, [X0+2544]
	022 Call 0x1C17CF4
	023 Move X0, 0x2DD000
	024 Move X0, [X0+704]
	025 Call 0x1C17CF4
	026 Move X0, 0x264000
	027 Move X0, [X0+3584]
	028 Call 0x1C17CF4
	029 Move X0, 0x2DD000
	030 Move X0, [X0+2520]
	031 Call 0x1C17CF4
	032 Move X0, 0x264000
	033 Move X0, [X0+3608]
	034 Call 0x1C17CF4
	035 Move X0, 0x264000
	036 Move X0, [X0+1880]
	037 Call 0x1C17CF4
	038 Move X0, 0x266000
	039 Move X0, [X0+2600]
	040 Call 0x1C17CF4
	041 Move X0, 0x2DD000
	042 Move X0, [X0+3200]
	043 Call 0x1C17CF4
	044 Move X0, 0x2AB000
	045 Move X0, [X0+2952]
	046 Call 0x1C17CF4
	047 Move X0, 0x2AB000
	048 Move X0, [X0+2520]
	049 Call 0x1C17CF4
	050 Move X0, 0x2AB000
	051 Move X0, [X0+2528]
	052 Call 0x1C17CF4
	053 Move X0, 0x2DE000
	054 Move X0, [X0+1080]
	055 Call 0x1C17CF4
	056 Move X0, 0x2AB000
	057 Move X0, [X0+2584]
	058 Call 0x1C17CF4
	059 Move X0, 0x2AB000
	060 Move X0, [X0+592]
	061 Call 0x1C17CF4
	062 Move X0, 0x29F000
	063 Move X0, [X0+2440]
	064 Call 0x1C17CF4
	065 Move X0, 0x2AF000
	066 Move X0, [X0]
	067 Call 0x1C17CF4
	068 Move X0, 0x2AB000
	069 Move X0, [X0+400]
	070 Call 0x1C17CF4
	071 Move X0, 0x2AB000
	072 Move X0, [X0+600]
	073 Call 0x1C17CF4
	074 Move X0, 0x28C000
	075 Move X0, [X0+2856]
	076 Call 0x1C17CF4
	077 Move X0, 0x2AF000
	078 Move X0, [X0+2384]
	079 Call 0x1C17CF4
	080 Move X0, 0x291000
	081 Move X0, [X0+936]
	082 Call 0x1C17CF4
	083 Move X0, 0x2AB000
	084 Move X0, [X0+344]
	085 Call 0x1C17CF4
	086 Move X0, 0x2DD000
	087 Move X0, [X0+3160]
	088 Call 0x1C17CF4
	089 Move W8, 1
	090 Move [X21+3683], W8
	091 Move X0, [X19]
	092 Move [X31+8], X31
	093 Call 0x1C17F10
	094 Move X1, X31
	095 Move X19, X0
	096 Call NameValueCollection..ctor, X0
	097 Move W8, 2
	098 Move W9, 1
	099 Move [X19+108], W8
	100 Move [X19+104], W9
	101 Move X1, [X20+72]
	102 Compare X1, 0
	103 JumpIfEqual {107}
	104 Move X0, X19
	105 Move X2, X31
	106 Call NameValueCollection.Add, X0, X1
	107 Move X22, 0x2AB000
	108 Move X0, [X20+40]
	109 Move X22, [X22+2520]
	110 Compare X0, 0
	111 JumpIfEqual {121}
	112 Move X1, [X20+24]
	113 Move X21, 0x29F000
	114 Move X21, [X21+2440]
	115 Call HttpListenerResponse.createContentTypeHeaderText, X0, X1
	116 Move X1, [X21]
	117 Move X2, X0
	118 Move W3, 1
	119 Move X0, X19
	120 Call WebHeaderCollection.InternalSet, X0, X1, X2, X3
	121 Move X1, [X22]
	122 Move X21, 0x2AB000
	123 Move X21, [X21+2584]
	124 Move X0, X19
	125 Move X2, X31
	126 Call NameValueCollection.get_Item, X0, X1
	127 Compare X0, 0
	128 JumpIfNotEqual {136}
	129 Move X8, 0x2DD000
	130 Move X1, [X22]
	131 Move X8, [X8+3160]
	132 Move W3, 1
	133 Move X0, X19
	134 Move X2, [X8]
	135 Call WebHeaderCollection.InternalSet, X0, X1, X2, X3
	136 Move X1, [X21]
	137 Move X0, X19
	138 Move X2, X31
	139 Call NameValueCollection.get_Item, X0, X1
	140 Compare X0, 0
	141 JumpIfNotEqual {174}
	142 Move X8, 0x265000
	143 Move X8, [X8+2544]
	144 Move X0, [X8]
	145 Move W8, [X0+224]
	146 Compare W8, 0
	147 JumpIfNotEqual {149}
	148 Call 0x1C17DFC
	149 Move X0, X31
	150 Call DateTime.get_UtcNow
	151 Move X8, 0x266000
	152 Move X8, [X8+3144]
	153 Move [X31+8], X0
	154 Move X8, [X8]
	155 Move W9, [X8+224]
	156 Compare W9, 0
	157 JumpIfNotEqual {160}
	158 Move X0, X8
	159 Call 0x1C17DFC
	160 Move X0, X31
	161 Call CultureInfo.get_InvariantCulture
	162 Move X8, 0x291000
	163 Move X8, [X8+936]
	164 Move X2, X0
	165 Add X0, X31, 8
	166 Move X3, X31
	167 Move X1, [X8]
	168 Call DateTime.ToString, X0, X1, X2
	169 Move X1, [X21]
	170 Move X2, X0
	171 Move W3, 1
	172 Move X0, X19
	173 Call WebHeaderCollection.InternalSet, X0, X1, X2, X3
	174 Move W8, [X20+104]
	175 Compare W8, 0
	176 JumpIfEqual {182}
	177 Move X8, 0x2AB000
	178 Move X8, [X8+600]
	179 Move X2, [X8]
	180 Move X8, 0x2AB000
	181 Move X8, [X8+400]
	182 Move X8, 0x266000
	183 Move X8, [X8+3144]
	184 Add X21, X20, 32
	185 Move X0, [X8]
	186 Move W8, [X0+224]
	187 Compare W8, 0
	188 JumpIfNotEqual {190}
	189 Call 0x1C17DFC
	190 Move X0, X31
	191 Call CultureInfo.get_InvariantCulture
	192 Move X1, X0
	193 Move X0, X21
	194 Move X2, X31
	195 Call Int64.ToString, X0, X1
	196 Move X8, 0x28C000
	197 Move X8, [X8+2856]
	198 Move X2, X0
	199 Move X1, [X8]
	200 Move W3, 1
	201 Move X0, X19
	202 Call WebHeaderCollection.InternalSet, X0, X1, X2, X3
	203 Move X0, [X20+48]
	204 Compare X0, 0
	205 JumpIfEqual {441}
	206 Move X1, X31
	207 Call HttpListenerContext.get_Request, X0
	208 Compare X0, 0
	209 JumpIfEqual {441}
	210 Move X1, X31
	211 Call HttpListenerRequest.get_KeepAlive, X0
	212 Move TEMP, X0
	213 And TEMP, TEMP, 1
	214 Compare TEMP, 1
	215 JumpIfNotEqual {229}
	216 Move W8, [X20+81]
	217 Compare W8, 0
	218 JumpIfEqual {229}
	219 Move W8, [X20+108]
	220 Move W21, 1
	221 Subtract W9, W8, 400
	222 NotImplemented "Instruction CMP not yet implemented."
	223 NotImplemented "Instruction LSLV not yet implemented."
	224 Move W10, 0x6901
	225 And W31, W9, W10
	226 NotImplemented "Instruction CMP not yet implemented."
	227 NotImplemented "Instruction CMP not yet implemented."
	228 NotImplemented "Instruction CSET not yet implemented."
	229 Move W21, 1
	230 Move X0, [X20+48]
	231 Compare X0, 0
	232 JumpIfEqual {441}
	233 Move X1, X31
	234 Call HttpListenerContext.get_Connection, X0
	235 Compare X0, 0
	236 JumpIfEqual {441}
	237 Move X1, X31
	238 Call HttpConnection.get_Reuses, X0
	239 NotImplemented "Instruction CMP not yet implemented."
	240 NotImplemented "Instruction CSET not yet implemented."
	241 Or W8, W21, W8
	242 Compare W8, 0
	243 JumpIfEqual {246}
	244 Move X8, 0x2AB000
	245 Move X8, [X8+2952]
	246 Move X8, 0x264000
	247 Move X8, [X8+1880]
	248 Move W9, 100
	249 Subtract W9, W9, W0
	250 Add X1, X31, 4
	251 Move X8, [X8]
	252 Move [X31+4], W9
	253 Move X0, X8
	254 Call 0x1C17E04
	255 Move X8, 0x2DE000
	256 Move X8, [X8+1080]
	257 Move X1, X0
	258 Move X2, X31
	259 Move X8, [X8]
	260 Move X0, X8
	261 Call String.Format, X0, X1
	262 Move X8, 0x2AB000
	263 Move X8, [X8+592]
	264 Move X2, X0
	265 Move W3, 1
	266 Move X0, X19
	267 Move X1, [X8]
	268 Call WebHeaderCollection.InternalSet, X0, X1, X2, X3
	269 Move X0, [X20+48]
	270 Compare X0, 0
	271 JumpIfEqual {441}
	272 Move X1, X31
	273 Call HttpListenerContext.get_Request, X0
	274 Compare X0, 0
	275 JumpIfEqual {441}
	276 Move X1, X31
	277 Call HttpListenerRequest.get_ProtocolVersion, X0
	278 Move X22, 0x2DD000
	279 Move X22, [X22+704]
	280 Move X21, X0
	281 Move X8, [X22]
	282 Move W9, [X8+224]
	283 Compare W9, 0
	284 JumpIfNotEqual {288}
	285 Move X0, X8
	286 Call 0x1C17DFC
	287 Move X8, [X22]
	288 Move X8, [X8+184]
	289 Move X0, X21
	290 Move X2, X31
	291 Move X1, [X8+8]
	292 Call Version.op_LessThan, X0, X1
	293 Move TEMP, X0
	294 And TEMP, TEMP, 1
	295 Compare TEMP, 1
	296 JumpIfNotEqual {306}
	297 Move X8, 0x2AF000
	298 Move X8, [X8+2384]
	299 Move X9, 0x2AB000
	300 Move X9, [X9+344]
	301 Move X2, [X8]
	302 Move W3, 1
	303 Move X0, X19
	304 Move X1, [X9]
	305 Call WebHeaderCollection.InternalSet, X0, X1, X2, X3
	306 Move X8, 0x266000
	307 Move X8, [X8+2600]
	308 Move X21, [X20+96]
	309 Move X0, [X8]
	310 Move W8, [X0+224]
	311 Compare W8, 0
	312 JumpIfNotEqual {314}
	313 Call 0x1C17DFC
	314 Move X0, X21
	315 Move X1, X31
	316 Move X2, X31
	317 Call Uri.op_Inequality, X0, X1
	318 Move TEMP, X0
	319 And TEMP, TEMP, 1
	320 Compare TEMP, 1
	321 JumpIfNotEqual {334}
	322 Move X0, [X20+96]
	323 Compare X0, 0
	324 JumpIfEqual {441}
	325 Move X1, X31
	326 Call Uri.get_AbsoluteUri, X0
	327 Move X8, 0x2AB000
	328 Move X8, [X8+2528]
	329 Move X2, X0
	330 Move W3, 1
	331 Move X0, X19
	332 Move X1, [X8]
	333 Call WebHeaderCollection.InternalSet, X0, X1, X2, X3
	334 Move X0, [X20+56]
	335 Compare X0, 0
	336 JumpIfEqual {431}
	337 Move X1, X31
	338 Call CookieCollection.GetEnumerator, X0
	339 Move X20, X0
	340 Compare X0, 0
	341 JumpIfEqual {442}
	342 Move X21, 0x264000
	343 Move X22, 0x2DD000
	344 Move X23, 0x2AF000
	345 Move X21, [X21+3608]
	346 Move X22, [X22+2520]
	347 Move X23, [X23]
	348 Move X8, [X20]
	349 Move X1, [X21]
	350 NotImplemented "Instruction LDRH not yet implemented."
	351 Compare X9, 0
	352 JumpIfEqual {359}
	353 Move X10, [X8+176]
	354 Add X10, X10, 8
	355 NotImplemented "Instruction LDUR not yet implemented."
	356 NotImplemented "Instruction CMP not yet implemented."
	357 Subtract X9, X9, 1
	358 Add X10, X10, 16
	359 Move X0, X20
	360 Move W2, W31
	361 Call 0x1C5D788
	362 NotImplemented "Instruction LDRSW not yet implemented."
	363 Add X8, X8, X9
	364 Add X0, X8, 312
	365 Move X8, [X0]
	366 Move X1, [X0+8]
	367 Move X0, X20
	368 NotImplemented "Instruction BLR not yet implemented."
	369 Move TEMP, X0
	370 And TEMP, TEMP, 1
	371 Compare TEMP, 1
	372 JumpIfNotEqual {403}
	373 Move X8, [X20]
	374 Move X1, [X22]
	375 NotImplemented "Instruction LDRH not yet implemented."
	376 Compare X9, 0
	377 JumpIfEqual {384}
	378 Move X10, [X8+176]
	379 Add X10, X10, 8
	380 NotImplemented "Instruction LDUR not yet implemented."
	381 NotImplemented "Instruction CMP not yet implemented."
	382 Subtract X9, X9, 1
	383 Add X10, X10, 16
	384 Move X0, X20
	385 Move W2, W31
	386 Call 0x1C5D788
	387 NotImplemented "Instruction LDRSW not yet implemented."
	388 Add X8, X8, X9
	389 Add X0, X8, 312
	390 Move X8, [X0]
	391 Move X1, [X0+8]
	392 Move X0, X20
	393 NotImplemented "Instruction BLR not yet implemented."
	394 Compare X0, 0
	395 JumpIfEqual {440}
	396 Move X1, X31
	397 Call Cookie.ToResponseString, X0
	398 Move X1, [X23]
	399 Move X2, X0
	400 Move W3, 1
	401 Move X0, X19
	402 Call WebHeaderCollection.InternalSet, X0, X1, X2, X3
	403 Move X21, X31
	404 Compare X20, 0
	405 JumpIfEqual {429}
	406 Move X10, 0x264000
	407 Move X8, [X20]
	408 Move X10, [X10+3584]
	409 NotImplemented "Instruction LDRH not yet implemented."
	410 Move X1, [X10]
	411 Compare X9, 0
	412 JumpIfEqual {419}
	413 Move X10, [X8+176]
	414 Add X10, X10, 8
	415 NotImplemented "Instruction LDUR not yet implemented."
	416 NotImplemented "Instruction CMP not yet implemented."
	417 Subtract X9, X9, 1
	418 Add X10, X10, 16
	419 Move X0, X20
	420 Move W2, W31
	421 Call 0x1C5D788
	422 NotImplemented "Instruction LDRSW not yet implemented."
	423 Add X8, X8, X9
	424 Add X0, X8, 312
	425 Move X8, [X0]
	426 Move X1, [X0+8]
	427 Move X0, X20
	428 NotImplemented "Instruction BLR not yet implemented."
	429 Compare X21, 0
	430 JumpIfNotEqual {443}
	431 Move X0, X19
	432 Move X20, [X31+48]
	433 Move X19, [X31+56]
	434 Move X22, [X31+32]
	435 Move X21, [X31+40]
	436 Move X30, [X31+16]
	437 Move X23, [X31+24]
	438 Add X31, X31, 64
	439 Return X0
	440 Call 0x1C17F20
	441 Call 0x1C17F20
	442 Call 0x1C17F20
	443 Move X0, X21
	444 Call 0x1C17F18
	445 Move X22, X0
	446 NotImplemented "Instruction CMP not yet implemented."
	447 Move X0, X22
	448 Call 0x3EB2AD0
	449 Move X21, [X0]
	450 Call 0x3EB2AE0
	451 Move X21, X31
	452 Move X22, X0
	453 Compare X20, 0
	454 JumpIfEqual {478}
	455 Move X10, 0x264000
	456 Move X8, [X20]
	457 Move X10, [X10+3584]
	458 NotImplemented "Instruction LDRH not yet implemented."
	459 Move X1, [X10]
	460 Compare X9, 0
	461 JumpIfEqual {468}
	462 Move X10, [X8+176]
	463 Add X10, X10, 8
	464 NotImplemented "Instruction LDUR not yet implemented."
	465 NotImplemented "Instruction CMP not yet implemented."
	466 Subtract X9, X9, 1
	467 Add X10, X10, 16
	468 Move X0, X20
	469 Move W2, W31
	470 Call 0x1C5D788
	471 NotImplemented "Instruction LDRSW not yet implemented."
	472 Add X8, X8, X9
	473 Add X0, X8, 312
	474 Move X8, [X0]
	475 Move X1, [X0+8]
	476 Move X0, X20
	477 NotImplemented "Instruction BLR not yet implemented."
	478 Compare X21, 0
	479 JumpIfNotEqual {482}
	480 Move X0, X22
	481 Call 0x1D2D690
	482 Move X0, X21
	483 Call 0x1C17F18
	484 Call 0x1991590

Method: System.Boolean get_HeadersSent()

Disassembly:
	0x03E90C24 STRB W9, [X8 + 0x40]
	0x03E90C28 CBZ X0, 0x3E90C4C

ISIL:
	001 Move W0, [X0+80]
	002 Return X0

Method: System.Void set_HeadersSent(System.Boolean value)

Disassembly:
	0x03E90C2C MOV W19, W1
	0x03E90C30 MOV X1, X31
	0x03E90C34 BL 0x3E8D034

ISIL:
	001 And W8, W1, 1
	002 Move [X0+80], W8
	003 Return 

Method: System.String get_StatusLine()

Disassembly:
	0x03E90C38 CBZ X0, 0x3E90C4C
	0x03E90C3C AND W1, W19, 0x1
	0x03E90C40 MOV X2, X31
	0x03E90C44 LDP X30, X19, [X31], #0x10
	0x03E90C48 B 0x3E86A60
	0x03E90C4C BL 0x1C16F20
	0x03E90C50 STR X30, [X31 - 0x40]!
	0x03E90C54 STP X24, X23, [X31 + 0x10]
	0x03E90C58 STP X22, X21, [X31 + 0x20]
	0x03E90C5C STP X20, X19, [X31 + 0x30]
	0x03E90C60 ADRP X22, 0x558000
	0x03E90C64 LDRB W8, [X22 + 0xE6C]
	0x03E90C68 MOV W23, W3
	0x03E90C6C MOV W19, W2
	0x03E90C70 MOV X20, X1
	0x03E90C74 MOV X21, X0
	0x03E90C78 TBNZ X8, 0x0, 0x3E90CA8
	0x03E90C7C ADRP X0, 0x264000
	0x03E90C80 LDR X0, [X0 + 0xE70]
	0x03E90C84 BL 0x1C16CF4
	0x03E90C88 ADRP X0, 0x26A000
	0x03E90C8C LDR X0, [X0 + 0x248]
	0x03E90C90 BL 0x1C16CF4
	0x03E90C94 ADRP X0, 0x2DD000
	0x03E90C98 LDR X0, [X0 + 0x4E0]
	0x03E90C9C BL 0x1C16CF4
	0x03E90CA0 MOVZ W8, 0x1
	0x03E90CA4 STRB W8, [X22 + 0xE6C]
	0x03E90CA8 ADRP X24, 0x26A000
	0x03E90CAC LDR X24, [X24 + 0x248]
	0x03E90CB0 MOV X0, X21
	0x03E90CB4 BL 0x3E90290
	0x03E90CB8 MOV X22, X0
	0x03E90CBC TBZ X23, 0x0, 0x3E90D00
	0x03E90CC0 LDR X0, [X24]
	0x03E90CC4 LDR W8, [X0 + 0xE0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x559000
	007 Move X22, 0x264000
	008 Move X21, 0x2DE000
	009 Move W8, [X20+3684]
	010 Move X22, [X22+1880]
	011 Move X21, [X21+1104]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x264000
	018 Move X0, [X0+1880]
	019 Call 0x1C17CF4
	020 Move X0, 0x2DE000
	021 Move X0, [X0+1104]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X20+3684], W8
	025 Move W8, [X19+108]
	026 Move X0, [X22]
	027 Move X20, [X19+120]
	028 Add X1, X31, 12
	029 Move [X31+12], W8
	030 Call 0x1C17E04
	031 Move X8, [X21]
	032 Move X3, [X19+112]
	033 Move X2, X0
	034 Move X1, X20
	035 Move X0, X8
	036 Move X4, X31
	037 Call String.Format, X0, X1, X2, X3
	038 Move X20, [X31+32]
	039 Move X19, [X31+40]
	040 Move X22, [X31+16]
	041 Move X21, [X31+24]
	042 Move X30, [X31+48]
	043 Return X0

Method: System.Text.Encoding get_ContentEncoding()

Disassembly:
	0x03E90CC8 CBNZ W8, 0x3E90CD0
	0x03E90CCC BL 0x1C16DFC

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Void set_ContentEncoding(System.Text.Encoding value)

Disassembly:
	0x03E90CD0 MOV X0, X22
	0x03E90CD4 MOV X1, X20
	0x03E90CD8 MOV W2, W19
	0x03E90CDC MOV X3, X31
	0x03E90CE0 BL 0x3E6B638
	0x03E90CE4 MOV X0, X21
	0x03E90CE8 LDP X20, X19, [X31 + 0x30]
	0x03E90CEC LDP X22, X21, [X31 + 0x20]
	0x03E90CF0 LDP X24, X23, [X31 + 0x10]
	0x03E90CF4 MOV W1, W31
	0x03E90CF8 LDR X30, [X31], #0x40
	0x03E90CFC B 0x3E90C14
	0x03E90D00 ADRP X8, 0x264000
	0x03E90D04 LDR X8, [X8 + 0xE70]
	0x03E90D08 ADRP X23, 0x2DD000
	0x03E90D0C LDR X0, [X8]
	0x03E90D10 LDR X23, [X23 + 0x4E0]
	0x03E90D14 BL 0x1C16F10
	0x03E90D18 LDR X2, [X23]
	0x03E90D1C MOV X1, X21
	0x03E90D20 MOV X3, X31
	0x03E90D24 MOV X23, X0
	0x03E90D28 BL 0x3314368
	0x03E90D2C LDR X0, [X24]
	0x03E90D30 LDR W8, [X0 + 0xE0]
	0x03E90D34 CBNZ W8, 0x3E90D3C
	0x03E90D38 BL 0x1C16DFC
	0x03E90D3C MOV X0, X22
	0x03E90D40 MOV X1, X20
	0x03E90D44 MOV W2, W19
	0x03E90D48 MOV X3, X23
	0x03E90D4C LDP X20, X19, [X31 + 0x30]
	0x03E90D50 LDP X22, X21, [X31 + 0x20]
	0x03E90D54 LDP X24, X23, [X31 + 0x10]
	0x03E90D58 MOV X4, X31
	0x03E90D5C MOV X5, X31
	0x03E90D60 LDR X30, [X31], #0x40
	0x03E90D64 B 0x3E6B7FC
	0x03E90D68 STR X30, [X31 - 0x20]!
	0x03E90D6C STP X20, X19, [X31 + 0x10]
	0x03E90D70 MOV W20, W1
	0x03E90D74 MOV X1, X31
	0x03E90D78 MOV X19, X0
	0x03E90D7C BL 0x33BDD8C
	0x03E90D80 MOV X0, X31
	0x03E90D84 STR W20, [X19 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W8, [X0+64]
	005 Compare W8, 0
	006 JumpIfNotEqual {15}
	007 Move W8, [X0+80]
	008 Compare W8, 0
	009 JumpIfNotEqual {33}
	010 Move X20, [X31+16]
	011 Move X19, [X31+24]
	012 Move [X0+24], X1
	013 Move X30, [X31+32]
	014 Return 
	015 Move X1, X31
	016 Call "il2cpp_vm_object_is_inst", X0
	017 Move X19, X0
	018 Call 0x19913C0
	019 Move X8, [X19]
	020 Move X0, X19
	021 Move X9, [X8+360]
	022 Move X1, [X8+368]
	023 NotImplemented "Instruction BLR not yet implemented."
	024 Move X19, X0
	025 Move X0, 0x28D000
	026 Move X0, [X0+1208]
	027 Call 0x1C17D08
	028 Call 0x1C17F10
	029 Move X1, X19
	030 Move X2, X31
	031 Move X20, X0
	032 Call ObjectDisposedException..ctor, X0, X1
	033 Move X0, 0x2DE000
	034 Move X0, [X0+1112]
	035 Call 0x1C17D08
	036 Move X19, X0
	037 Move X0, 0x264000
	038 Move X0, [X0+1456]
	039 Call 0x1C17D08
	040 Call 0x1C17F10
	041 Move X1, X19
	042 Move X2, X31
	043 Move X20, X0
	044 Call InvalidOperationException..ctor, X0, X1
	045 Move X0, 0x2DE000
	046 Move X0, [X0+1120]
	047 Call 0x1C17D08
	048 Move X1, X0
	049 Move X0, X20
	050 Call 0x1C17DEC

Method: System.Int64 get_ContentLength64()

Disassembly:
	0x03E90D88 BL 0x33E3C68
	0x03E90D8C CBZ X0, 0x3E90DA8

ISIL:
	001 Move X0, [X0+32]
	002 Return X0

Method: System.Void set_ContentLength64(System.Int64 value)

Disassembly:
	0x03E90D90 MOV X1, X31
	0x03E90D94 BL 0x33E3CC4
	0x03E90D98 STR W0, [X19 + 0x20]
	0x03E90D9C LDP X20, X19, [X31 + 0x10]
	0x03E90DA0 LDR X30, [X31], #0x20
	0x03E90DA4 RET
	0x03E90DA8 BL 0x1C16F20
	0x03E90DAC LDRB W8, [X0 + 0x40]
	0x03E90DB0 CBZ W8, 0x3E90DB8
	0x03E90DB4 RET
	0x03E90DB8 MOVZ W1, 0x1
	0x03E90DBC B 0x3E90C14
	0x03E90DC0 STP X30, X19, [X31 - 0x10]!
	0x03E90DC4 MOV X19, X1
	0x03E90DC8 BL 0x3E90078
	0x03E90DCC CBZ X0, 0x3E90DE0
	0x03E90DD0 MOV X1, X19
	0x03E90DD4 MOV X2, X31
	0x03E90DD8 LDP X30, X19, [X31], #0x10
	0x03E90DDC B 0x3E85860
	0x03E90DE0 BL 0x1C16F20
	0x03E90DE4 STR X30, [X31 - 0x20]!
	0x03E90DE8 STP X20, X19, [X31 + 0x10]
	0x03E90DEC MOV X19, X2
	0x03E90DF0 MOV X20, X1
	0x03E90DF4 BL 0x3E900E4
	0x03E90DF8 CBZ X0, 0x3E90E1C
	0x03E90DFC LDR X8, [X0]
	0x03E90E00 MOV X1, X20
	0x03E90E04 MOV X2, X19
	0x03E90E08 LDP X20, X19, [X31 + 0x10]
	0x03E90E0C LDR X4, [X8 + 0x248]
	0x03E90E10 LDR X3, [X8 + 0x250]
	0x03E90E14 LDR X30, [X31], #0x20
	0x03E90E18 BR X4
	0x03E90E1C BL 0x1C16F20
	0x03E90E20 LDRB W8, [X0 + 0x40]
	0x03E90E24 CBZ W8, 0x3E90E2C
	0x03E90E28 RET
	0x03E90E2C MOV W1, W31
	0x03E90E30 B 0x3E90C14
	0x03E90E34 STR X30, [X31 - 0x40]!
	0x03E90E38 STP X24, X23, [X31 + 0x10]
	0x03E90E3C STP X22, X21, [X31 + 0x20]
	0x03E90E40 STP X20, X19, [X31 + 0x30]
	0x03E90E44 ADRP X22, 0x558000
	0x03E90E48 ADRP X23, 0x2DD000
	0x03E90E4C LDRB W8, [X22 + 0xE70]
	0x03E90E50 LDR X23, [X23 + 0x4E8]
	0x03E90E54 MOV W21, W2
	0x03E90E58 MOV X19, X1
	0x03E90E5C MOV X20, X0
	0x03E90E60 TBNZ X8, 0x0, 0x3E90E90
	0x03E90E64 ADRP X0, 0x28B000
	0x03E90E68 LDR X0, [X0 + 0x720]
	0x03E90E6C BL 0x1C16CF4
	0x03E90E70 ADRP X0, 0x2DD000
	0x03E90E74 LDR X0, [X0 + 0x4F0]
	0x03E90E78 BL 0x1C16CF4
	0x03E90E7C ADRP X0, 0x2DD000
	0x03E90E80 LDR X0, [X0 + 0x4E8]
	0x03E90E84 BL 0x1C16CF4
	0x03E90E88 MOVZ W8, 0x1
	0x03E90E8C STRB W8, [X22 + 0xE70]
	0x03E90E90 LDR X0, [X23]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W8, [X0+64]
	005 Compare W8, 0
	006 JumpIfNotEqual {19}
	007 Move W8, [X0+80]
	008 Compare W8, 0
	009 JumpIfNotEqual {37}
	010 Move TEMP, X1
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {49}
	014 Move X20, [X31+16]
	015 Move X19, [X31+24]
	016 Move [X0+32], X1
	017 Move X30, [X31+32]
	018 Return 
	019 Move X1, X31
	020 Call "il2cpp_vm_object_is_inst", X0
	021 Move X19, X0
	022 Call 0x19913C0
	023 Move X8, [X19]
	024 Move X0, X19
	025 Move X9, [X8+360]
	026 Move X1, [X8+368]
	027 NotImplemented "Instruction BLR not yet implemented."
	028 Move X19, X0
	029 Move X0, 0x28D000
	030 Move X0, [X0+1208]
	031 Call 0x1C17D08
	032 Call 0x1C17F10
	033 Move X1, X19
	034 Move X2, X31
	035 Move X20, X0
	036 Call ObjectDisposedException..ctor, X0, X1
	037 Move X0, 0x2DE000
	038 Move X0, [X0+1112]
	039 Call 0x1C17D08
	040 Move X19, X0
	041 Move X0, 0x264000
	042 Move X0, [X0+1456]
	043 Call 0x1C17D08
	044 Call 0x1C17F10
	045 Move X1, X19
	046 Move X2, X31
	047 Move X20, X0
	048 Call InvalidOperationException..ctor, X0, X1
	049 Move X0, 0x2DD000
	050 Move X0, [X0+3096]
	051 Call 0x1C17D08
	052 Move X19, X0
	053 Move X0, 0x26C000
	054 Move X0, [X0+1888]
	055 Call 0x1C17D08
	056 Call 0x1C17F10
	057 Move X20, X0
	058 Move X0, 0x26E000
	059 Move X0, [X0+3784]
	060 Call 0x1C17D08
	061 Move X2, X0
	062 Move X0, X20
	063 Move X1, X19
	064 Move X3, X31
	065 Call ArgumentOutOfRangeException..ctor, X0, X1, X2
	066 Move X0, 0x2DE000
	067 Move X0, [X0+1128]
	068 Call 0x1C17D08
	069 Move X1, X0
	070 Move X0, X20
	071 Call 0x1C17DEC

Method: System.String get_ContentType()

Disassembly:
	0x03E90E94 BL 0x1C16F10
	0x03E90E98 MOV X1, X31

ISIL:
	001 Move X0, [X0+40]
	002 Return X0

Method: System.Void set_ContentType(System.String value)

Disassembly:
	0x03E90E9C MOV X23, X0
	0x03E90EA0 BL 0x33BDD8C
	0x03E90EA4 CBZ X23, 0x3E90F78
	0x03E90EA8 STR X20, [X23 + 0x18]
	0x03E90EAC LDRB W8, [X20 + 0x40]
	0x03E90EB0 CBNZ W8, 0x3E90F7C
	0x03E90EB4 CBZ X19, 0x3E90FDC
	0x03E90EB8 LDR W22, [X19 + 0x18]
	0x03E90EBC MOV X0, X20
	0x03E90EC0 BL 0x3E90290
	0x03E90EC4 MOV X24, X0
	0x03E90EC8 STR X0, [X23 + 0x10]
	0x03E90ECC TBZ X21, 0x0, 0x3E90F10
	0x03E90ED0 CBZ X24, 0x3E90F78
	0x03E90ED4 LDR X8, [X24]
	0x03E90ED8 MOV X0, X24
	0x03E90EDC MOV X1, X19
	0x03E90EE0 MOV W2, W31
	0x03E90EE4 LDR X9, [X8 + 0x388]
	0x03E90EE8 LDR X4, [X8 + 0x390]
	0x03E90EEC MOV W3, W22
	0x03E90EF0 BLR X9
	0x03E90EF4 MOV X0, X20
	0x03E90EF8 LDP X20, X19, [X31 + 0x30]
	0x03E90EFC LDP X22, X21, [X31 + 0x20]
	0x03E90F00 LDP X24, X23, [X31 + 0x10]
	0x03E90F04 MOV W1, W31
	0x03E90F08 LDR X30, [X31], #0x40
	0x03E90F0C B 0x3E90C14
	0x03E90F10 ADRP X8, 0x28B000
	0x03E90F14 LDR X8, [X8 + 0x720]
	0x03E90F18 LDR X0, [X8]
	0x03E90F1C BL 0x1C16F10
	0x03E90F20 ADRP X8, 0x2DD000
	0x03E90F24 LDR X8, [X8 + 0x4F0]
	0x03E90F28 MOV X1, X23
	0x03E90F2C MOV X3, X31
	0x03E90F30 MOV X20, X0
	0x03E90F34 LDR X2, [X8]
	0x03E90F38 BL 0x3316570
	0x03E90F3C CBZ X24, 0x3E90F78
	0x03E90F40 LDR X8, [X24]
	0x03E90F44 MOV X0, X24
	0x03E90F48 MOV X1, X19
	0x03E90F4C MOV W3, W22
	0x03E90F50 LDR X7, [X8 + 0x2F8]
	0x03E90F54 LDR X6, [X8 + 0x300]
	0x03E90F58 MOV X4, X20
	0x03E90F5C LDP X20, X19, [X31 + 0x30]
	0x03E90F60 LDP X22, X21, [X31 + 0x20]
	0x03E90F64 LDP X24, X23, [X31 + 0x10]
	0x03E90F68 MOV W2, W31
	0x03E90F6C MOV X5, X31
	0x03E90F70 LDR X30, [X31], #0x40
	0x03E90F74 BR X7
	0x03E90F78 BL 0x1C16F20
	0x03E90F7C MOV X0, X20
	0x03E90F80 MOV X1, X31
	0x03E90F84 BL 0x33BE520
	0x03E90F88 MOV X19, X0
	0x03E90F8C BL 0x19903C0
	0x03E90F90 LDR X8, [X19]
	0x03E90F94 MOV X0, X19
	0x03E90F98 LDP X9, X1, [X8 + 0x168]
	0x03E90F9C BLR X9
	0x03E90FA0 MOV X19, X0
	0x03E90FA4 ADRP X0, 0x28C000
	0x03E90FA8 LDR X0, [X0 + 0x4B8]
	0x03E90FAC BL 0x1C16D08
	0x03E90FB0 BL 0x1C16F10
	0x03E90FB4 MOV X1, X19
	0x03E90FB8 MOV X2, X31
	0x03E90FBC MOV X20, X0
	0x03E90FC0 BL 0x338C448
	0x03E90FC4 ADRP X0, 0x2DD000
	0x03E90FC8 LDR X0, [X0 + 0x4F8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W8, [X0+64]
	005 Move X19, X0
	006 Compare W8, 0
	007 JumpIfNotEqual {28}
	008 Move W8, [X19+80]
	009 Compare W8, 0
	010 JumpIfNotEqual {47}
	011 Move X20, X1
	012 Compare X1, 0
	013 JumpIfEqual {23}
	014 Move W8, [X20+16]
	015 Compare W8, 0
	016 JumpIfEqual {59}
	017 Move X0, X20
	018 Call HttpListenerResponse.isValidForContentType, X0
	019 Move TEMP, X0
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfNotEqual {61}
	023 Move [X19+40], X20
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X30, [X31+32]
	027 Return 
	028 Move X0, X19
	029 Move X1, X31
	030 Call "il2cpp_vm_object_is_inst", X0
	031 Move X19, X0
	032 Call 0x19913C0
	033 Move X8, [X19]
	034 Move X0, X19
	035 Move X9, [X8+360]
	036 Move X1, [X8+368]
	037 NotImplemented "Instruction BLR not yet implemented."
	038 Move X19, X0
	039 Move X0, 0x28D000
	040 Move X0, [X0+1208]
	041 Call 0x1C17D08
	042 Call 0x1C17F10
	043 Move X1, X19
	044 Move X2, X31
	045 Move X20, X0
	046 Call ObjectDisposedException..ctor, X0, X1
	047 Move X0, 0x2DE000
	048 Move X0, [X0+1112]
	049 Call 0x1C17D08
	050 Move X19, X0
	051 Move X0, 0x264000
	052 Move X0, [X0+1456]
	053 Call 0x1C17D08
	054 Call 0x1C17F10
	055 Move X1, X19
	056 Move X2, X31
	057 Move X20, X0
	058 Call InvalidOperationException..ctor, X0, X1
	059 Move X0, 0x28D000
	060 Move X0, [X0+2488]
	061 Move X0, 0x2DD000
	062 Move X0, [X0+2480]
	063 Call 0x1C17D08
	064 Move X19, X0
	065 Move X0, 0x26C000
	066 Move X0, [X0+1400]
	067 Call 0x1C17D08
	068 Call 0x1C17F10
	069 Move X20, X0
	070 Move X0, 0x26E000
	071 Move X0, [X0+3784]
	072 Call 0x1C17D08
	073 Move X2, X0
	074 Move X0, X20
	075 Move X1, X19
	076 Move X3, X31
	077 Call ArgumentException..ctor, X0, X1, X2
	078 Move X0, 0x2DE000
	079 Move X0, [X0+1136]
	080 Call 0x1C17D08
	081 Move X1, X0
	082 Move X0, X20
	083 Call 0x1C17DEC

Method: WebSocketSharp.Net.CookieCollection get_Cookies()

Disassembly:
	0x03E91078 B 0x3E91080
	0x03E9107C STR X31, [X19 + 0x48]
	0x03E91080 LDR X8, [X20 + 0x20]
	0x03E91084 STR X8, [X19 + 0x20]
	0x03E91088 LDR W8, [X20 + 0x6C]
	0x03E9108C STR W8, [X19 + 0x6C]
	0x03E91090 LDR X8, [X20 + 0x70]
	0x03E91094 STR X8, [X19 + 0x70]
	0x03E91098 LDRB W8, [X20 + 0x51]
	0x03E9109C STRB W8, [X19 + 0x51]
	0x03E910A0 LDR X8, [X20 + 0x78]
	0x03E910A4 STR X8, [X19 + 0x78]
	0x03E910A8 LDP X20, X19, [X31 + 0x10]
	0x03E910AC LDP X30, X21, [X31], #0x20
	0x03E910B0 RET
	0x03E910B4 ADRP X0, 0x267000
	0x03E910B8 LDR X0, [X0 + 0x528]
	0x03E910BC BL 0x1C16D08
	0x03E910C0 BL 0x1C16F10
	0x03E910C4 MOV X19, X0
	0x03E910C8 ADRP X0, 0x2DC000
	0x03E910CC LDR X0, [X0 + 0x508]
	0x03E910D0 BL 0x1C16D08
	0x03E910D4 MOV X1, X0
	0x03E910D8 MOV X0, X19

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x558000
	005 Move W8, [X20+3685]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x2DC000
	012 Move X0, [X0+592]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+3685], W8
	016 Move X20, [X19+56]
	017 Compare X20, 0
	018 JumpIfNotEqual {27}
	019 Move X8, 0x2DC000
	020 Move X8, [X8+592]
	021 Move X0, [X8]
	022 Call 0x1C17F10
	023 Move X1, X31
	024 Move X20, X0
	025 Call CookieCollection..ctor, X0
	026 Move [X19+56], X20
	027 Move X0, X20
	028 Move X20, [X31+16]
	029 Move X19, [X31+24]
	030 Move X30, [X31+32]
	031 Return X0

Method: System.Void set_Cookies(WebSocketSharp.Net.CookieCollection value)

Disassembly:
	0x03E910DC MOV X2, X31
	0x03E910E0 BL 0x330E100

ISIL:
	001 Move [X0+56], X1
	002 Return 

Method: WebSocketSharp.Net.WebHeaderCollection get_Headers()

Disassembly:
	0x03E910E4 ADRP X0, 0x2DC000
	0x03E910E8 LDR X0, [X0 + 0x510]
	0x03E910EC BL 0x1C16D08
	0x03E910F0 MOV X1, X0
	0x03E910F4 MOV X0, X19
	0x03E910F8 BL 0x1C16DEC
	0x03E910FC BL 0x1C16F20
	0x03E91100 SUB X31, X31, 0x30
	0x03E91104 STP X30, X21, [X31 + 0x10]
	0x03E91108 STP X20, X19, [X31 + 0x20]
	0x03E9110C ADRP X21, 0x557000
	0x03E91110 LDRB W8, [X21 + 0xE71]
	0x03E91114 MOV X20, X1
	0x03E91118 MOV X19, X0
	0x03E9111C TBNZ X8, 0x0, 0x3E91140
	0x03E91120 ADRP X0, 0x264000
	0x03E91124 LDR X0, [X0 + 0xA28]
	0x03E91128 BL 0x1C16CF4
	0x03E9112C ADRP X0, 0x2AC000
	0x03E91130 LDR X0, [X0 + 0x550]
	0x03E91134 BL 0x1C16CF4
	0x03E91138 MOVZ W8, 0x1
	0x03E9113C STRB W8, [X21 + 0xE71]
	0x03E91140 STR X31, [X31 + 0x8]
	0x03E91144 LDRB W8, [X19 + 0x40]
	0x03E91148 CBNZ W8, 0x3E911C0
	0x03E9114C LDRB W8, [X19 + 0x50]
	0x03E91150 CBNZ W8, 0x3E9120C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x558000
	005 Move W8, [X20+3686]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x2DC000
	012 Move X0, [X0+3200]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+3686], W8
	016 Move X20, [X19+72]
	017 Compare X20, 0
	018 JumpIfNotEqual {30}
	019 Move X8, 0x2DC000
	020 Move X8, [X8+3200]
	021 Move X0, [X8]
	022 Call 0x1C17F10
	023 Move X1, X31
	024 Move X20, X0
	025 Call NameValueCollection..ctor, X0
	026 Move W8, 2
	027 Move [X20+104], W31
	028 Move [X20+108], W8
	029 Move [X19+72], X20
	030 Move X0, X20
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X30, [X31+32]
	034 Return X0

Method: System.Void set_Headers(WebSocketSharp.Net.WebHeaderCollection value)

Disassembly:
	0x03E91154 CBZ X20, 0x3E91240
	0x03E91158 LDR W8, [X20 + 0x10]
	0x03E9115C CBZ W8, 0x3E91288
	0x03E91160 ADRP X8, 0x264000
	0x03E91164 LDR X8, [X8 + 0xA28]
	0x03E91168 LDR X0, [X8]
	0x03E9116C LDR W8, [X0 + 0xE0]
	0x03E91170 CBNZ W8, 0x3E91178
	0x03E91174 BL 0x1C16DFC
	0x03E91178 ADD X2, X31, 0x8
	0x03E9117C MOVZ W1, 0x1
	0x03E91180 MOV X0, X20
	0x03E91184 MOV X3, X31
	0x03E91188 BL 0x361E23C
	0x03E9118C TBZ X0, 0x0, 0x3E91294
	0x03E91190 LDR X8, [X31 + 0x8]
	0x03E91194 ADRP X9, 0x2AC000
	0x03E91198 LDR X9, [X9 + 0x550]
	0x03E9119C MOVZ W10, 0x12E
	0x03E911A0 STR X8, [X19 + 0x60]
	0x03E911A4 STR W10, [X19 + 0x6C]
	0x03E911A8 LDR X8, [X9]
	0x03E911AC LDP X30, X21, [X31 + 0x10]
	0x03E911B0 STR X8, [X19 + 0x70]
	0x03E911B4 LDP X20, X19, [X31 + 0x20]
	0x03E911B8 ADD X31, X31, 0x30
	0x03E911BC RET
	0x03E911C0 MOV X0, X19

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Compare X1, 0
	005 JumpIfEqual {8}
	006 Move W8, [X1+108]
	007 NotImplemented "Instruction CMP not yet implemented."
	008 Move X20, [X31+16]
	009 Move X19, [X31+24]
	010 Move [X0+72], X1
	011 Move X30, [X31+32]
	012 Return 
	013 Move X0, 0x2DD000
	014 Move X0, [X0+1152]
	015 Call 0x1C17D08
	016 Move X19, X0
	017 Move X0, 0x263000
	018 Move X0, [X0+1456]
	019 Call 0x1C17D08
	020 Call 0x1C17F10
	021 Move X1, X19
	022 Move X2, X31
	023 Move X20, X0
	024 Call InvalidOperationException..ctor, X0, X1
	025 Move X0, 0x2DD000
	026 Move X0, [X0+1160]
	027 Call 0x1C17D08
	028 Move X1, X0
	029 Move X0, X20
	030 Call 0x1C17DEC

Method: System.Boolean get_KeepAlive()

Disassembly:
	0x03E911CC MOV X19, X0
	0x03E911D0 BL 0x19903C0

ISIL:
	001 Move W0, [X0+81]
	002 Return X0

Method: System.Void set_KeepAlive(System.Boolean value)

Disassembly:
	0x03E911D4 LDR X8, [X19]
	0x03E911D8 MOV X0, X19
	0x03E911DC LDP X9, X1, [X8 + 0x168]
	0x03E911E0 BLR X9
	0x03E911E4 MOV X19, X0
	0x03E911E8 ADRP X0, 0x28B000
	0x03E911EC LDR X0, [X0 + 0x4B8]
	0x03E911F0 BL 0x1C16D08
	0x03E911F4 BL 0x1C16F10
	0x03E911F8 MOV X1, X19
	0x03E911FC MOV X2, X31
	0x03E91200 MOV X20, X0
	0x03E91204 BL 0x338C448
	0x03E91208 B 0x3E912D8
	0x03E9120C ADRP X0, 0x2DC000
	0x03E91210 LDR X0, [X0 + 0x458]
	0x03E91214 BL 0x1C16D08
	0x03E91218 MOV X19, X0
	0x03E9121C ADRP X0, 0x262000
	0x03E91220 LDR X0, [X0 + 0x5B0]
	0x03E91224 BL 0x1C16D08
	0x03E91228 BL 0x1C16F10
	0x03E9122C MOV X1, X19
	0x03E91230 MOV X2, X31
	0x03E91234 MOV X20, X0
	0x03E91238 BL 0x337DF1C
	0x03E9123C B 0x3E912D8
	0x03E91240 ADRP X0, 0x267000
	0x03E91244 LDR X0, [X0 + 0x528]
	0x03E91248 BL 0x1C16D08
	0x03E9124C BL 0x1C16F10
	0x03E91250 MOV X19, X0
	0x03E91254 ADRP X0, 0x292000
	0x03E91258 LDR X0, [X0 + 0xFF0]
	0x03E9125C BL 0x1C16D08
	0x03E91260 MOV X1, X0
	0x03E91264 MOV X0, X19
	0x03E91268 MOV X2, X31
	0x03E9126C BL 0x330E100
	0x03E91270 ADRP X0, 0x2DC000
	0x03E91274 LDR X0, [X0 + 0x518]
	0x03E91278 BL 0x1C16D08
	0x03E9127C MOV X1, X0
	0x03E91280 MOV X0, X19
	0x03E91284 BL 0x1C16DEC
	0x03E91288 ADRP X0, 0x28B000
	0x03E9128C LDR X0, [X0 + 0x9B8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W8, [X0+64]
	005 Compare W8, 0
	006 JumpIfNotEqual {16}
	007 Move W8, [X0+80]
	008 Compare W8, 0
	009 JumpIfNotEqual {34}
	010 Move X20, [X31+16]
	011 Move X19, [X31+24]
	012 And W8, W1, 1
	013 Move [X0+81], W8
	014 Move X30, [X31+32]
	015 Return 
	016 Move X1, X31
	017 Call "il2cpp_vm_object_is_inst", X0
	018 Move X19, X0
	019 Call 0x19913C0
	020 Move X8, [X19]
	021 Move X0, X19
	022 Move X9, [X8+360]
	023 Move X1, [X8+368]
	024 NotImplemented "Instruction BLR not yet implemented."
	025 Move X19, X0
	026 Move X0, 0x28C000
	027 Move X0, [X0+1208]
	028 Call 0x1C17D08
	029 Call 0x1C17F10
	030 Move X1, X19
	031 Move X2, X31
	032 Move X20, X0
	033 Call ObjectDisposedException..ctor, X0, X1
	034 Move X0, 0x2DD000
	035 Move X0, [X0+1112]
	036 Call 0x1C17D08
	037 Move X19, X0
	038 Move X0, 0x263000
	039 Move X0, [X0+1456]
	040 Call 0x1C17D08
	041 Call 0x1C17F10
	042 Move X1, X19
	043 Move X2, X31
	044 Move X20, X0
	045 Call InvalidOperationException..ctor, X0, X1
	046 Move X0, 0x2DD000
	047 Move X0, [X0+1168]
	048 Call 0x1C17D08
	049 Move X1, X0
	050 Move X0, X20
	051 Call 0x1C17DEC

Method: System.IO.Stream get_OutputStream()

Disassembly:
	0x03E91290 B 0x3E9129C
	0x03E91294 ADRP X0, 0x2DC000
	0x03E91298 LDR X0, [X0 + 0x4A0]
	0x03E9129C BL 0x1C16D08
	0x03E912A0 MOV X19, X0
	0x03E912A4 ADRP X0, 0x26A000
	0x03E912A8 LDR X0, [X0 + 0x578]
	0x03E912AC BL 0x1C16D08
	0x03E912B0 BL 0x1C16F10
	0x03E912B4 MOV X20, X0
	0x03E912B8 ADRP X0, 0x292000
	0x03E912BC LDR X0, [X0 + 0xFF0]
	0x03E912C0 BL 0x1C16D08
	0x03E912C4 MOV X2, X0
	0x03E912C8 MOV X0, X20
	0x03E912CC MOV X1, X19
	0x03E912D0 MOV X3, X31
	0x03E912D4 BL 0x330E16C
	0x03E912D8 ADRP X0, 0x2DC000
	0x03E912DC LDR X0, [X0 + 0x518]
	0x03E912E0 BL 0x1C16D08
	0x03E912E4 MOV X1, X0
	0x03E912E8 MOV X0, X20
	0x03E912EC BL 0x1C16DEC
	0x03E912F0 STR X30, [X31 - 0x20]!
	0x03E912F4 STP X20, X19, [X31 + 0x10]
	0x03E912F8 CBZ X1, 0x3E9132C
	0x03E912FC MOV X19, X1
	0x03E91300 MOV X20, X0
	0x03E91304 BL 0x3E909A4
	0x03E91308 TBZ X0, 0x0, 0x3E91374
	0x03E9130C MOV X0, X20
	0x03E91310 BL 0x3E90078
	0x03E91314 CBZ X0, 0x3E913D0
	0x03E91318 MOV X1, X19
	0x03E9131C LDP X20, X19, [X31 + 0x10]
	0x03E91320 MOV X2, X31
	0x03E91324 LDR X30, [X31], #0x20
	0x03E91328 B 0x3E85860
	0x03E9132C ADRP X0, 0x267000
	0x03E91330 LDR X0, [X0 + 0x528]
	0x03E91334 BL 0x1C16D08
	0x03E91338 BL 0x1C16F10

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W8, [X0+64]
	005 Move X19, X0
	006 Compare W8, 0
	007 JumpIfNotEqual {25}
	008 Move X0, [X19+88]
	009 Compare X0, 0
	010 JumpIfNotEqual {21}
	011 Move X0, [X19+48]
	012 Compare X0, 0
	013 JumpIfEqual {50}
	014 Move X1, X31
	015 Call HttpListenerContext.get_Connection, X0
	016 Compare X0, 0
	017 JumpIfEqual {50}
	018 Move X1, X31
	019 Call HttpConnection.GetResponseStream, X0
	020 Move [X19+88], X0
	021 Move X20, [X31+16]
	022 Move X19, [X31+24]
	023 Move X30, [X31+32]
	024 Return X0
	025 Move X0, X19
	026 Move X1, X31
	027 Call "il2cpp_vm_object_is_inst", X0
	028 Move X19, X0
	029 Call 0x19913C0
	030 Move X8, [X19]
	031 Move X0, X19
	032 Move X9, [X8+360]
	033 Move X1, [X8+368]
	034 NotImplemented "Instruction BLR not yet implemented."
	035 Move X19, X0
	036 Move X0, 0x28C000
	037 Move X0, [X0+1208]
	038 Call 0x1C17D08
	039 Call 0x1C17F10
	040 Move X1, X19
	041 Move X2, X31
	042 Move X20, X0
	043 Call ObjectDisposedException..ctor, X0, X1
	044 Move X0, 0x2DD000
	045 Move X0, [X0+1176]
	046 Call 0x1C17D08
	047 Move X1, X0
	048 Move X0, X20
	049 Call 0x1C17DEC
	050 Call 0x1C17F20

Method: System.Version get_ProtocolVersion()

Disassembly:
	0x03E9133C MOV X19, X0
	0x03E91340 ADRP X0, 0x2AD000

ISIL:
	001 Move X0, [X0+120]
	002 Return X0

Method: System.String get_RedirectLocation()

Disassembly:
	0x03E91344 LDR X0, [X0 + 0x380]
	0x03E91348 BL 0x1C16D08
	0x03E9134C MOV X1, X0
	0x03E91350 MOV X0, X19
	0x03E91354 MOV X2, X31
	0x03E91358 BL 0x330E100
	0x03E9135C ADRP X0, 0x2DC000
	0x03E91360 LDR X0, [X0 + 0x520]
	0x03E91364 BL 0x1C16D08
	0x03E91368 MOV X1, X0
	0x03E9136C MOV X0, X19
	0x03E91370 BL 0x1C16DEC
	0x03E91374 ADRP X0, 0x2DC000
	0x03E91378 LDR X0, [X0 + 0x528]
	0x03E9137C BL 0x1C16D08
	0x03E91380 MOV X19, X0
	0x03E91384 ADRP X0, 0x26A000
	0x03E91388 LDR X0, [X0 + 0x578]
	0x03E9138C BL 0x1C16D08
	0x03E91390 BL 0x1C16F10
	0x03E91394 MOV X20, X0
	0x03E91398 ADRP X0, 0x2AD000
	0x03E9139C LDR X0, [X0 + 0x380]
	0x03E913A0 BL 0x1C16D08
	0x03E913A4 MOV X2, X0
	0x03E913A8 MOV X0, X20
	0x03E913AC MOV X1, X19
	0x03E913B0 MOV X3, X31
	0x03E913B4 BL 0x330E16C
	0x03E913B8 ADRP X0, 0x2DC000
	0x03E913BC LDR X0, [X0 + 0x520]
	0x03E913C0 BL 0x1C16D08
	0x03E913C4 MOV X1, X0
	0x03E913C8 MOV X0, X20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x558000
	006 Move X20, 0x265000
	007 Move W8, [X21+3687]
	008 Move X20, [X20+2600]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x265000
	015 Move X0, [X0+2600]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+3687], W8
	019 Move X0, [X20]
	020 Move X20, [X19+96]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {25}
	024 Call 0x1C17DFC
	025 Move X0, X20
	026 Move X1, X31
	027 Move X2, X31
	028 Call Uri.op_Inequality, X0, X1
	029 Move TEMP, X0
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfNotEqual {43}
	033 Move X0, [X19+96]
	034 Compare X0, 0
	035 JumpIfEqual {49}
	036 Move X20, [X31+16]
	037 Move X19, [X31+24]
	038 Move X1, X31
	039 Move X30, [X31+32]
	040 Move X21, [X31+40]
	041 Call Uri.get_OriginalString, X0
	042 Return X0
	043 Move X20, [X31+16]
	044 Move X19, [X31+24]
	045 Move X0, X31
	046 Move X30, [X31+32]
	047 Move X21, [X31+40]
	048 Return X0
	049 Call 0x1C17F20

Method: System.Void set_RedirectLocation(System.String value)

Disassembly:
	0x03E913CC BL 0x1C16DEC
	0x03E913D0 BL 0x1C16F20
	0x03E913D4 STR X30, [X31 - 0x20]!
	0x03E913D8 STP X20, X19, [X31 + 0x10]
	0x03E913DC MOV X19, X2
	0x03E913E0 MOV X20, X1
	0x03E913E4 BL 0x3E900E4
	0x03E913E8 CBZ X0, 0x3E9140C
	0x03E913EC LDR X8, [X0]
	0x03E913F0 MOV X1, X20
	0x03E913F4 MOV X2, X19
	0x03E913F8 LDP X20, X19, [X31 + 0x10]
	0x03E913FC LDR X4, [X8 + 0x278]
	0x03E91400 LDR X3, [X8 + 0x280]
	0x03E91404 LDR X30, [X31], #0x20
	0x03E91408 BR X4
	0x03E9140C BL 0x1C16F20
	0x03E91410 LDRB W8, [X0 + 0x40]
	0x03E91414 CBZ W8, 0x3E9141C
	0x03E91418 RET
	0x03E9141C MOVZ W1, 0x1
	0x03E91420 B 0x3E90C14
	0x03E91424 MOV W1, W31
	0x03E91428 B 0x3E90C14
	0x03E9142C LDR W8, [X0 + 0x10]
	0x03E91430 CMP W8, 0x1
	0x03E91434 B.EQ 0x3E91440
	0x03E91438 ADDS W31, W8, 0x3
	0x03E9143C B.NE 0x3E91444
	0x03E91440 B 0x3E916E4
	0x03E91444 RET
	0x03E91448 SUB X31, X31, 0x30
	0x03E9144C STP X30, X0, [X31 + 0x10]
	0x03E91450 STP X20, X19, [X31 + 0x20]
	0x03E91454 ADRP X19, 0x557000
	0x03E91458 LDRB W8, [X19 + 0xE72]
	0x03E9145C MOV X20, X0
	0x03E91460 TBNZ X8, 0x0, 0x3E91484
	0x03E91464 ADRP X0, 0x2DB000
	0x03E91468 LDR X0, [X0 + 0x9D8]
	0x03E9146C BL 0x1C16CF4
	0x03E91470 ADRP X0, 0x262000
	0x03E91474 LDR X0, [X0 + 0xE18]
	0x03E91478 BL 0x1C16CF4
	0x03E9147C MOVZ W8, 0x1
	0x03E91480 STRB W8, [X19 + 0xE72]
	0x03E91484 ADD X8, X31, 0x18
	0x03E91488 STR X8, [X31 + 0x8]
	0x03E9148C LDR W8, [X20 + 0x10]
	0x03E91490 CMP W8, 0x1
	0x03E91494 B.EQ 0x3E914F4
	0x03E91498 CBNZ W8, 0x3E91520
	0x03E9149C LDR X8, [X20 + 0x38]
	0x03E914A0 MOVN W9, 0x0
	0x03E914A4 STR W9, [X20 + 0x10]
	0x03E914A8 CBZ X8, 0x3E91500
	0x03E914AC LDR X0, [X8 + 0x38]
	0x03E914B0 CBZ X0, 0x3E91520
	0x03E914B4 MOV X1, X31
	0x03E914B8 BL 0x3E7FEE4
	0x03E914BC CBZ W0, 0x3E91520
	0x03E914C0 LDR X8, [X31 + 0x18]
	0x03E914C4 LDR X8, [X8 + 0x38]
	0x03E914C8 CBZ X8, 0x3E91504
	0x03E914CC LDR X0, [X8 + 0x38]
	0x03E914D0 CBZ X0, 0x3E91508
	0x03E914D4 MOV X1, X31
	0x03E914D8 BL 0x3E85D6C
	0x03E914DC LDR X8, [X31 + 0x18]
	0x03E914E0 MOVN W9, 0x2
	0x03E914E4 MOV X19, X0
	0x03E914E8 STR X0, [X8 + 0x40]
	0x03E914EC STR W9, [X8 + 0x10]
	0x03E914F0 B 0x3E915B8
	0x03E914F4 MOVN W8, 0x2
	0x03E914F8 STR W8, [X20 + 0x10]
	0x03E914FC B 0x3E915B0
	0x03E91500 BL 0x1C16F20
	0x03E91504 BL 0x1C16F20
	0x03E91508 BL 0x1C16F20
	0x03E9150C B 0x3E91684
	0x03E91510 B 0x3E91684
	0x03E91514 B 0x3E91684
	0x03E91518 B 0x3E91684
	0x03E9151C B 0x3E91684
	0x03E91520 MOV W8, W31
	0x03E91524 B 0x3E9164C
	0x03E91528 LDR X19, [X0 + 0x40]
	0x03E9152C CBZ X19, 0x3E91664
	0x03E91530 ADRP X10, 0x2DB000
	0x03E91534 LDR X8, [X19]
	0x03E91538 LDR X10, [X10 + 0x9D8]
	0x03E9153C LDRH W9, [X8 + 0x12E]
	0x03E91540 LDR X1, [X10]
	0x03E91544 CBZ X9, 0x3E91568
	0x03E91548 LDR X10, [X8 + 0xB0]
	0x03E9154C ADD X10, X10, 0x8
	0x03E91550 LDUR X11, [X10 - 0x8]
	0x03E91554 CMP X11, X1

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x558000
	007 Move W8, [X21+3688]
	008 Move X20, X1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x265000
	015 Move X0, [X0+2600]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+3688], W8
	019 Move [X31+8], X31
	020 Move W8, [X19+64]
	021 Compare W8, 0
	022 JumpIfNotEqual {56}
	023 Move W8, [X19+80]
	024 Compare W8, 0
	025 JumpIfNotEqual {75}
	026 Compare X20, 0
	027 JumpIfEqual {48}
	028 Move W8, [X20+16]
	029 Compare W8, 0
	030 JumpIfEqual {87}
	031 Move X8, 0x265000
	032 Move X8, [X8+2600]
	033 Move X0, [X8]
	034 Move W8, [X0+224]
	035 Compare W8, 0
	036 JumpIfNotEqual {38}
	037 Call 0x1C17DFC
	038 Add X2, X31, 8
	039 Move W1, 1
	040 Move X0, X20
	041 Move X3, X31
	042 Call Uri.TryCreate, X0, X1, X2
	043 Move TEMP, X0
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfNotEqual {89}
	047 Move X8, [X31+8]
	048 Move X8, X31
	049 Move [X19+96], X8
	050 Move X20, [X31+32]
	051 Move X19, [X31+40]
	052 Move X30, [X31+16]
	053 Move X21, [X31+24]
	054 Add X31, X31, 48
	055 Return 
	056 Move X0, X19
	057 Move X1, X31
	058 Call "il2cpp_vm_object_is_inst", X0
	059 Move X19, X0
	060 Call 0x19913C0
	061 Move X8, [X19]
	062 Move X0, X19
	063 Move X9, [X8+360]
	064 Move X1, [X8+368]
	065 NotImplemented "Instruction BLR not yet implemented."
	066 Move X19, X0
	067 Move X0, 0x28C000
	068 Move X0, [X0+1208]
	069 Call 0x1C17D08
	070 Call 0x1C17F10
	071 Move X1, X19
	072 Move X2, X31
	073 Move X20, X0
	074 Call ObjectDisposedException..ctor, X0, X1
	075 Move X0, 0x2DD000
	076 Move X0, [X0+1112]
	077 Call 0x1C17D08
	078 Move X19, X0
	079 Move X0, 0x263000
	080 Move X0, [X0+1456]
	081 Call 0x1C17D08
	082 Call 0x1C17F10
	083 Move X1, X19
	084 Move X2, X31
	085 Move X20, X0
	086 Call InvalidOperationException..ctor, X0, X1
	087 Move X0, 0x28C000
	088 Move X0, [X0+2488]
	089 Move X0, 0x2DD000
	090 Move X0, [X0+1184]
	091 Call 0x1C17D08
	092 Move X19, X0
	093 Move X0, 0x26B000
	094 Move X0, [X0+1400]
	095 Call 0x1C17D08
	096 Call 0x1C17F10
	097 Move X20, X0
	098 Move X0, 0x26D000
	099 Move X0, [X0+3784]
	100 Call 0x1C17D08
	101 Move X2, X0
	102 Move X0, X20
	103 Move X1, X19
	104 Move X3, X31
	105 Call ArgumentException..ctor, X0, X1, X2
	106 Move X0, 0x2DD000
	107 Move X0, [X0+1192]
	108 Call 0x1C17D08
	109 Move X1, X0
	110 Move X0, X20
	111 Call 0x1C17DEC

Method: System.Boolean get_SendChunked()

Disassembly:
	0x03E91558 B.EQ 0x3E91578
	0x03E9155C SUBS X9, X9, 0x1

ISIL:
	001 Move W0, [X0+104]
	002 Return X0

Method: System.Void set_SendChunked(System.Boolean value)

Disassembly:
	0x03E91560 ADD X10, X10, 0x10
	0x03E91564 B.NE 0x3E91550
	0x03E91568 MOV X0, X19
	0x03E9156C MOV W2, W31
	0x03E91570 BL 0x1C5C788
	0x03E91574 B 0x3E91584
	0x03E91578 LDRSW X9, [X10]
	0x03E9157C ADD X8, X8, X9, 0x4, LSL
	0x03E91580 ADD X0, X8, 0x138
	0x03E91584 LDP X8, X1, [X0]
	0x03E91588 MOV X0, X19
	0x03E9158C BLR X8
	0x03E91590 LDR X8, [X31 + 0x18]
	0x03E91594 STR X0, [X8 + 0x48]
	0x03E91598 CBZ X0, 0x3E91668
	0x03E9159C LDR X1, [X8 + 0x28]
	0x03E915A0 MOV X2, X31
	0x03E915A4 BL 0x3E83558
	0x03E915A8 LDR X20, [X31 + 0x18]
	0x03E915AC TBNZ X0, 0x0, 0x3E9163C
	0x03E915B0 LDR X19, [X20 + 0x40]
	0x03E915B4 STR X31, [X20 + 0x48]
	0x03E915B8 CBZ X19, 0x3E91660
	0x03E915BC ADRP X10, 0x262000
	0x03E915C0 LDR X8, [X19]
	0x03E915C4 LDR X10, [X10 + 0xE18]
	0x03E915C8 LDRH W9, [X8 + 0x12E]
	0x03E915CC LDR X1, [X10]
	0x03E915D0 CBZ X9, 0x3E915F4
	0x03E915D4 LDR X10, [X8 + 0xB0]
	0x03E915D8 ADD X10, X10, 0x8
	0x03E915DC LDUR X11, [X10 - 0x8]
	0x03E915E0 CMP X11, X1
	0x03E915E4 B.EQ 0x3E91604
	0x03E915E8 SUBS X9, X9, 0x1
	0x03E915EC ADD X10, X10, 0x10
	0x03E915F0 B.NE 0x3E915DC
	0x03E915F4 MOV X0, X19
	0x03E915F8 MOV W2, W31
	0x03E915FC BL 0x1C5C788
	0x03E91600 B 0x3E91610
	0x03E91604 LDRSW X9, [X10]
	0x03E91608 ADD X8, X8, X9, 0x4, LSL
	0x03E9160C ADD X0, X8, 0x138
	0x03E91610 LDP X8, X1, [X0]
	0x03E91614 MOV X0, X19
	0x03E91618 BLR X8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W8, [X0+64]
	005 Compare W8, 0
	006 JumpIfNotEqual {16}
	007 Move W8, [X0+80]
	008 Compare W8, 0
	009 JumpIfNotEqual {34}
	010 Move X20, [X31+16]
	011 Move X19, [X31+24]
	012 And W8, W1, 1
	013 Move [X0+104], W8
	014 Move X30, [X31+32]
	015 Return 
	016 Move X1, X31
	017 Call "il2cpp_vm_object_is_inst", X0
	018 Move X19, X0
	019 Call 0x19913C0
	020 Move X8, [X19]
	021 Move X0, X19
	022 Move X9, [X8+360]
	023 Move X1, [X8+368]
	024 NotImplemented "Instruction BLR not yet implemented."
	025 Move X19, X0
	026 Move X0, 0x28C000
	027 Move X0, [X0+1208]
	028 Call 0x1C17D08
	029 Call 0x1C17F10
	030 Move X1, X19
	031 Move X2, X31
	032 Move X20, X0
	033 Call ObjectDisposedException..ctor, X0, X1
	034 Move X0, 0x2DD000
	035 Move X0, [X0+1112]
	036 Call 0x1C17D08
	037 Move X19, X0
	038 Move X0, 0x263000
	039 Move X0, [X0+1456]
	040 Call 0x1C17D08
	041 Call 0x1C17F10
	042 Move X1, X19
	043 Move X2, X31
	044 Move X20, X0
	045 Call InvalidOperationException..ctor, X0, X1
	046 Move X0, 0x2DD000
	047 Move X0, [X0+1200]
	048 Call 0x1C17D08
	049 Move X1, X0
	050 Move X0, X20
	051 Call 0x1C17DEC

Method: System.Int32 get_StatusCode()

Disassembly:
	0x03E9161C MOV W8, W0
	0x03E91620 LDR X0, [X31 + 0x18]

ISIL:
	001 Move W0, [X0+108]
	002 Return X0

Method: System.Void set_StatusCode(System.Int32 value)

Disassembly:
	0x03E91624 TBNZ X8, 0x0, 0x3E91528
	0x03E91628 BL 0x3E916E4
	0x03E9162C LDR X9, [X31 + 0x18]
	0x03E91630 MOV W8, W31
	0x03E91634 STR X31, [X9 + 0x40]
	0x03E91638 B 0x3E9164C
	0x03E9163C LDR X9, [X20 + 0x48]
	0x03E91640 MOVZ W8, 0x1
	0x03E91644 STR W8, [X20 + 0x10]
	0x03E91648 STR X9, [X20 + 0x18]
	0x03E9164C LDP X20, X19, [X31 + 0x20]
	0x03E91650 LDR X30, [X31 + 0x10]
	0x03E91654 MOV W0, W8
	0x03E91658 ADD X31, X31, 0x30
	0x03E9165C RET
	0x03E91660 BL 0x1C16F20
	0x03E91664 BL 0x1C16F20
	0x03E91668 BL 0x1C16F20
	0x03E9166C B 0x3E91684
	0x03E91670 B 0x3E91684
	0x03E91674 B 0x3E91684
	0x03E91678 B 0x3E91684
	0x03E9167C B 0x3E91684
	0x03E91680 B 0x3E91684
	0x03E91684 CMP W1, 0x1
	0x03E91688 B.NE 0x3E916B8
	0x03E9168C BL 0x3EB1AD0
	0x03E91690 LDR X19, [X0]
	0x03E91694 STR X19, [X31]
	0x03E91698 BL 0x3EB1AE0
	0x03E9169C CBZ X19, 0x3E91520
	0x03E916A0 ADD X8, X31, 0x0
	0x03E916A4 ADD X0, X8, 0x8
	0x03E916A8 BL 0x1C166B4
	0x03E916AC MOV X0, X19
	0x03E916B0 BL 0x1C16F18
	0x03E916B4 CBNZ X19, 0x3E916BC
	0x03E916B8 BL 0x1D2C690
	0x03E916BC LDR X0, [X31 + 0x18]
	0x03E916C0 LDR W8, [X0 + 0x10]
	0x03E916C4 CMP W8, 0x1
	0x03E916C8 B.EQ 0x3E916D4
	0x03E916CC ADDS W31, W8, 0x3
	0x03E916D0 B.NE 0x3E916D8
	0x03E916D4 BL 0x3E916E4
	0x03E916D8 MOV X0, X19
	0x03E916DC BL 0x1C16F18
	0x03E916E0 BL 0x1990590
	0x03E916E4 STR X30, [X31 - 0x20]!
	0x03E916E8 STP X20, X19, [X31 + 0x10]
	0x03E916EC ADRP X19, 0x557000
	0x03E916F0 LDRB W8, [X19 + 0xE73]
	0x03E916F4 MOV X20, X0
	0x03E916F8 TBNZ X8, 0x0, 0x3E91710
	0x03E916FC ADRP X0, 0x262000
	0x03E91700 LDR X0, [X0 + 0xE00]
	0x03E91704 BL 0x1C16CF4
	0x03E91708 MOVZ W8, 0x1
	0x03E9170C STRB W8, [X19 + 0xE73]
	0x03E91710 LDR X19, [X20 + 0x40]
	0x03E91714 MOVN W8, 0x0
	0x03E91718 STR W8, [X20 + 0x10]
	0x03E9171C CBZ X19, 0x3E91768
	0x03E91720 ADRP X10, 0x262000
	0x03E91724 LDR X8, [X19]
	0x03E91728 LDR X10, [X10 + 0xE00]
	0x03E9172C LDRH W9, [X8 + 0x12E]
	0x03E91730 LDR X1, [X10]
	0x03E91734 CBZ X9, 0x3E91758
	0x03E91738 LDR X10, [X8 + 0xB0]
	0x03E9173C ADD X10, X10, 0x8
	0x03E91740 LDUR X11, [X10 - 0x8]
	0x03E91744 CMP X11, X1
	0x03E91748 B.EQ 0x3E91774
	0x03E9174C SUBS X9, X9, 0x1
	0x03E91750 ADD X10, X10, 0x10
	0x03E91754 B.NE 0x3E91740
	0x03E91758 MOV X0, X19
	0x03E9175C MOV W2, W31
	0x03E91760 BL 0x1C5C788
	0x03E91764 B 0x3E91780
	0x03E91768 LDP X20, X19, [X31 + 0x10]
	0x03E9176C LDR X30, [X31], #0x20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x558000
	006 Move W8, [X21+3689]
	007 Move W20, W1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x26A000
	014 Move X0, [X0+584]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+3689], W8
	018 Move W8, [X19+64]
	019 Compare W8, 0
	020 JumpIfNotEqual {43}
	021 Move W8, [X19+80]
	022 Compare W8, 0
	023 JumpIfNotEqual {62}
	024 Subtract W8, W20, 100
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move X8, 0x26A000
	027 Move X8, [X8+584]
	028 Move [X19+108], W20
	029 Move X0, [X8]
	030 Move W8, [X0+224]
	031 Compare W8, 0
	032 JumpIfNotEqual {34}
	033 Call 0x1C17DFC
	034 Move W0, W20
	035 Move X1, X31
	036 Call Ext.GetStatusDescription, X0
	037 Move [X19+112], X0
	038 Move X20, [X31+16]
	039 Move X19, [X31+24]
	040 Move X30, [X31+32]
	041 Move X21, [X31+40]
	042 Return 
	043 Move X0, X19
	044 Move X1, X31
	045 Call "il2cpp_vm_object_is_inst", X0
	046 Move X19, X0
	047 Call 0x19913C0
	048 Move X8, [X19]
	049 Move X0, X19
	050 Move X9, [X8+360]
	051 Move X1, [X8+368]
	052 NotImplemented "Instruction BLR not yet implemented."
	053 Move X19, X0
	054 Move X0, 0x28C000
	055 Move X0, [X0+1208]
	056 Call 0x1C17D08
	057 Call 0x1C17F10
	058 Move X1, X19
	059 Move X2, X31
	060 Move X20, X0
	061 Call ObjectDisposedException..ctor, X0, X1
	062 Move X0, 0x2DD000
	063 Move X0, [X0+1112]
	064 Call 0x1C17D08
	065 Move X19, X0
	066 Move X0, 0x263000
	067 Move X0, [X0+1456]
	068 Call 0x1C17D08
	069 Call 0x1C17F10
	070 Move X1, X19
	071 Move X2, X31
	072 Move X20, X0
	073 Call InvalidOperationException..ctor, X0, X1
	074 Move X0, 0x2DD000
	075 Move X0, [X0+1208]
	076 Call 0x1C17D08
	077 Move X19, X0
	078 Move X0, 0x2AD000
	079 Move X0, [X0+3288]
	080 Call 0x1C17D08
	081 Call 0x1C17F10
	082 Move X1, X19
	083 Move X2, X31
	084 Move X20, X0
	085 Call ProtocolViolationException..ctor, X0, X1
	086 Move X0, 0x2DD000
	087 Move X0, [X0+1216]
	088 Call 0x1C17D08
	089 Move X1, X0
	090 Move X0, X20
	091 Call 0x1C17DEC

Method: System.String get_StatusDescription()

Disassembly:
	0x03E91770 RET
	0x03E91774 LDRSW X9, [X10]

ISIL:
	001 Move X0, [X0+112]
	002 Return X0

Method: System.Void set_StatusDescription(System.String value)

Disassembly:
	0x03E91778 ADD X8, X8, X9, 0x4, LSL
	0x03E9177C ADD X0, X8, 0x138
	0x03E91780 LDP X2, X1, [X0]
	0x03E91784 MOV X0, X19
	0x03E91788 LDP X20, X19, [X31 + 0x10]
	0x03E9178C LDR X30, [X31], #0x20
	0x03E91790 BR X2
	0x03E91794 LDR X0, [X0 + 0x18]
	0x03E91798 RET
	0x03E9179C STP X30, X19, [X31 - 0x10]!
	0x03E917A0 ADRP X0, 0x262000
	0x03E917A4 LDR X0, [X0 + 0xB40]
	0x03E917A8 BL 0x1C16D08
	0x03E917AC BL 0x1C16F10
	0x03E917B0 MOV X1, X31
	0x03E917B4 MOV X19, X0
	0x03E917B8 BL 0x3380310
	0x03E917BC ADRP X0, 0x2DC000
	0x03E917C0 LDR X0, [X0 + 0x530]
	0x03E917C4 BL 0x1C16D08
	0x03E917C8 MOV X1, X0
	0x03E917CC MOV X0, X19
	0x03E917D0 BL 0x1C16DEC
	0x03E917D4 LDR X0, [X0 + 0x18]
	0x03E917D8 RET
	0x03E917DC STR X30, [X31 - 0x20]!
	0x03E917E0 STP X20, X19, [X31 + 0x10]
	0x03E917E4 ADRP X20, 0x557000
	0x03E917E8 LDRB W8, [X20 + 0xE74]
	0x03E917EC MOV X19, X0
	0x03E917F0 TBNZ X8, 0x0, 0x3E91808
	0x03E917F4 ADRP X0, 0x2DC000
	0x03E917F8 LDR X0, [X0 + 0x4D8]
	0x03E917FC BL 0x1C16CF4
	0x03E91800 MOVZ W8, 0x1
	0x03E91804 STRB W8, [X20 + 0xE74]
	0x03E91808 LDR W8, [X19 + 0x10]
	0x03E9180C ADDS W31, W8, 0x2
	0x03E91810 B.NE 0x3E91840
	0x03E91814 LDR W20, [X19 + 0x20]
	0x03E91818 MOV X0, X31
	0x03E9181C BL 0x33E3C68
	0x03E91820 CBZ X0, 0x3E91880
	0x03E91824 MOV X1, X31
	0x03E91828 BL 0x33E3CC4
	0x03E9182C CMP W20, W0
	0x03E91830 B.NE 0x3E91840
	0x03E91834 STR W31, [X19 + 0x10]
	0x03E91838 MOV X20, X19
	0x03E9183C B 0x3E91868
	0x03E91840 ADRP X8, 0x2DC000
	0x03E91844 LDR X8, [X8 + 0x4D8]
	0x03E91848 LDR X0, [X8]
	0x03E9184C BL 0x1C16F10
	0x03E91850 MOV W1, W31
	0x03E91854 MOV X20, X0
	0x03E91858 BL 0x3E90D68
	0x03E9185C CBZ X20, 0x3E91880
	0x03E91860 LDR X8, [X19 + 0x38]
	0x03E91864 STR X8, [X20 + 0x38]
	0x03E91868 LDR X8, [X19 + 0x30]
	0x03E9186C MOV X0, X20
	0x03E91870 STR X8, [X20 + 0x28]
	0x03E91874 LDP X20, X19, [X31 + 0x10]
	0x03E91878 LDR X30, [X31], #0x20
	0x03E9187C RET
	0x03E91880 BL 0x1C16F20
	0x03E91884 B 0x3E917DC
	0x03E91888 STP X30, X19, [X31 - 0x10]!
	0x03E9188C MOV X19, X0
	0x03E91890 LDR X0, [X0 + 0x10]
	0x03E91894 CBZ X0, 0x3E918BC
	0x03E91898 LDR X8, [X0]
	0x03E9189C LDR X9, [X8 + 0x308]
	0x03E918A0 LDR X2, [X8 + 0x310]
	0x03E918A4 BLR X9
	0x03E918A8 LDR X0, [X19 + 0x18]
	0x03E918AC CBZ X0, 0x3E918BC
	0x03E918B0 MOV W1, W31
	0x03E918B4 LDP X30, X19, [X31], #0x10
	0x03E918B8 B 0x3E90C14
	0x03E918BC BL 0x1C16F20
	0x03E918C0 STP X30, X23, [X31 - 0x30]!
	0x03E918C4 STP X22, X21, [X31 + 0x10]
	0x03E918C8 STP X20, X19, [X31 + 0x20]
	0x03E918CC ADRP X23, 0x557000
	0x03E918D0 ADRP X22, 0x268000
	0x03E918D4 LDRB W8, [X23 + 0xE75]
	0x03E918D8 LDR X22, [X22 + 0xCC0]
	0x03E918DC MOV X20, X2
	0x03E918E0 MOV X21, X1
	0x03E918E4 MOV X19, X0
	0x03E918E8 TBNZ X8, 0x0, 0x3E91900
	0x03E918EC ADRP X0, 0x268000
	0x03E918F0 LDR X0, [X0 + 0xCC0]
	0x03E918F4 BL 0x1C16CF4
	0x03E918F8 MOVZ W8, 0x1
	0x03E918FC STRB W8, [X23 + 0xE75]
	0x03E91900 MOV X0, X19
	0x03E91904 MOV X1, X31
	0x03E91908 BL 0x33BDD8C
	0x03E9190C STR X21, [X19 + 0x18]
	0x03E91910 STR X20, [X19 + 0x38]
	0x03E91914 LDR X0, [X22]
	0x03E91918 BL 0x1C16F10
	0x03E9191C MOV X1, X31
	0x03E91920 MOV X20, X0
	0x03E91924 BL 0x33BDD8C
	0x03E91928 STR X20, [X19 + 0x40]
	0x03E9192C LDP X20, X19, [X31 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x558000
	006 Move W8, [X21+3690]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x26A000
	014 Move X0, [X0+584]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+3690], W8
	018 Move W8, [X19+64]
	019 Compare W8, 0
	020 JumpIfNotEqual {70}
	021 Move W8, [X19+80]
	022 Compare W8, 0
	023 JumpIfNotEqual {89}
	024 Compare X20, 0
	025 JumpIfEqual {107}
	026 Move W8, [X20+16]
	027 Compare W8, 0
	028 JumpIfEqual {52}
	029 Move X0, X20
	030 Call HttpListenerResponse.isValidForStatusDescription, X0
	031 Move TEMP, X0
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfEqual {64}
	035 Move X0, 0x2DC000
	036 Move X0, [X0+2480]
	037 Call 0x1C17D08
	038 Move X19, X0
	039 Move X0, 0x26B000
	040 Move X0, [X0+1400]
	041 Call 0x1C17D08
	042 Call 0x1C17F10
	043 Move X20, X0
	044 Move X0, 0x26D000
	045 Move X0, [X0+3784]
	046 Call 0x1C17D08
	047 Move X2, X0
	048 Move X0, X20
	049 Move X1, X19
	050 Move X3, X31
	051 Call ArgumentException..ctor, X0, X1, X2
	052 Move X8, 0x26A000
	053 Move X8, [X8+584]
	054 Move W20, [X19+108]
	055 Move X0, [X8]
	056 Move W8, [X0+224]
	057 Compare W8, 0
	058 JumpIfNotEqual {60}
	059 Call 0x1C17DFC
	060 Move W0, W20
	061 Move X1, X31
	062 Call Ext.GetStatusDescription, X0
	063 Move X20, X0
	064 Move [X19+112], X20
	065 Move X20, [X31+16]
	066 Move X19, [X31+24]
	067 Move X30, [X31+32]
	068 Move X21, [X31+40]
	069 Return 
	070 Move X0, X19
	071 Move X1, X31
	072 Call "il2cpp_vm_object_is_inst", X0
	073 Move X19, X0
	074 Call 0x19913C0
	075 Move X8, [X19]
	076 Move X0, X19
	077 Move X9, [X8+360]
	078 Move X1, [X8+368]
	079 NotImplemented "Instruction BLR not yet implemented."
	080 Move X19, X0
	081 Move X0, 0x28C000
	082 Move X0, [X0+1208]
	083 Call 0x1C17D08
	084 Call 0x1C17F10
	085 Move X1, X19
	086 Move X2, X31
	087 Move X20, X0
	088 Call ObjectDisposedException..ctor, X0, X1
	089 Move X0, 0x2DD000
	090 Move X0, [X0+1112]
	091 Call 0x1C17D08
	092 Move X19, X0
	093 Move X0, 0x263000
	094 Move X0, [X0+1456]
	095 Call 0x1C17D08
	096 Call 0x1C17F10
	097 Move X1, X19
	098 Move X2, X31
	099 Move X20, X0
	100 Call InvalidOperationException..ctor, X0, X1
	101 Move X0, 0x2DD000
	102 Move X0, [X0+1224]
	103 Call 0x1C17D08
	104 Move X1, X0
	105 Move X0, X20
	106 Call 0x1C17DEC
	107 Move X0, 0x268000
	108 Move X0, [X0+1320]
	109 Call 0x1C17D08
	110 Call 0x1C17F10
	111 Move X19, X0
	112 Move X0, 0x26D000
	113 Move X0, [X0+3784]
	114 Call 0x1C17D08
	115 Move X1, X0
	116 Move X0, X19
	117 Move X2, X31
	118 Call ArgumentNullException..ctor, X0, X1
	119 Move X0, 0x2DD000
	120 Move X0, [X0+1224]
	121 Call 0x1C17D08
	122 Move X1, X0
	123 Move X0, X19
	124 Call 0x1C17DEC

Method: System.Boolean canSetCookie(WebSocketSharp.Net.Cookie cookie)

Disassembly:
	0x03E919A4 STP X20, X19, [X31 + 0x20]
	0x03E919A8 ADRP X19, 0x557000
	0x03E919AC LDRB W8, [X19 + 0xE76]
	0x03E919B0 MOV X20, X0
	0x03E919B4 TBNZ X8, 0x0, 0x3E919CC
	0x03E919B8 ADRP X0, 0x293000
	0x03E919BC LDR X0, [X0 + 0x7C8]
	0x03E919C0 BL 0x1C16CF4
	0x03E919C4 MOVZ W8, 0x1
	0x03E919C8 STRB W8, [X19 + 0xE76]
	0x03E919CC LDR X19, [X20 + 0x40]
	0x03E919D0 MOV X1, X31
	0x03E919D4 MOV X0, X19
	0x03E919D8 BL 0x33E14E0
	0x03E919DC LDR X21, [X20 + 0x50]
	0x03E919E0 CBNZ X21, 0x3E91A10
	0x03E919E4 ADRP X8, 0x293000
	0x03E919E8 LDRB W22, [X20 + 0x20]
	0x03E919EC LDR X8, [X8 + 0x7C8]
	0x03E919F0 LDR X0, [X8]
	0x03E919F4 BL 0x1C16F10
	0x03E919F8 CMP W22, 0x0
	0x03E919FC MOV X21, X0
	0x03E91A00 CSET W1, NE
	0x03E91A04 MOV X2, X31
	0x03E91A08 BL 0x33DCD78
	0x03E91A0C STR X21, [X20 + 0x50]
	0x03E91A10 MOV X0, X19
	0x03E91A14 MOV X1, X31
	0x03E91A18 BL 0x33E14E4
	0x03E91A1C MOV X0, X21
	0x03E91A20 LDP X20, X19, [X31 + 0x20]
	0x03E91A24 LDP X22, X21, [X31 + 0x10]
	0x03E91A28 LDR X30, [X31], #0x30
	0x03E91A2C RET
	0x03E91A30 CMP W1, 0x1
	0x03E91A34 MOV X21, X0
	0x03E91A38 B.NE 0x3E91A68
	0x03E91A3C MOV X0, X21
	0x03E91A40 BL 0x3EB1AD0
	0x03E91A44 LDR X20, [X0]
	0x03E91A48 BL 0x3EB1AE0
	0x03E91A4C MOV X0, X19
	0x03E91A50 MOV X1, X31
	0x03E91A54 BL 0x33E14E4
	0x03E91A58 MOV X21, X31
	0x03E91A5C CBZ X20, 0x3E91A1C
	0x03E91A60 MOV X0, X20
	0x03E91A64 BL 0x1C16F18
	0x03E91A68 MOV X20, X31
	0x03E91A6C B 0x3E91A74
	0x03E91A70 MOV X21, X0
	0x03E91A74 MOV X0, X19
	0x03E91A78 MOV X1, X31
	0x03E91A7C BL 0x33E14E4
	0x03E91A80 CBNZ X20, 0x3E91A8C
	0x03E91A84 MOV X0, X21
	0x03E91A88 BL 0x1D2C690
	0x03E91A8C MOV X0, X20
	0x03E91A90 BL 0x1C16F18
	0x03E91A94 BL 0x1990590
	0x03E91A98 LDR W8, [X0 + 0x48]
	0x03E91A9C LDR W9, [X0 + 0x24]
	0x03E91AA0 CMP W8, W9
	0x03E91AA4 CSET W0, EQ
	0x03E91AA8 RET
	0x03E91AAC STR X30, [X31 - 0x20]!
	0x03E91AB0 STP X20, X19, [X31 + 0x10]
	0x03E91AB4 LDR X20, [X0 + 0x40]
	0x03E91AB8 MOV X19, X0
	0x03E91ABC MOV X1, X31
	0x03E91AC0 MOV X0, X20
	0x03E91AC4 BL 0x33E14E0
	0x03E91AC8 LDRB W19, [X19 + 0x20]
	0x03E91ACC MOV X0, X20
	0x03E91AD0 MOV X1, X31
	0x03E91AD4 BL 0x33E14E4
	0x03E91AD8 MOV W0, W19
	0x03E91ADC LDP X20, X19, [X31 + 0x10]
	0x03E91AE0 LDR X30, [X31], #0x20
	0x03E91AE4 RET
	0x03E91AE8 STR X30, [X31 - 0x30]!
	0x03E91AEC STP X22, X21, [X31 + 0x10]
	0x03E91AF0 STP X20, X19, [X31 + 0x20]
	0x03E91AF4 ADRP X19, 0x557000
	0x03E91AF8 LDRB W8, [X19 + 0xE77]
	0x03E91AFC MOV X20, X0
	0x03E91B00 TBNZ X8, 0x0, 0x3E91B24
	0x03E91B04 ADRP X0, 0x28A000
	0x03E91B08 LDR X0, [X0 + 0x720]
	0x03E91B0C BL 0x1C16CF4
	0x03E91B10 ADRP X0, 0x2DC000
	0x03E91B14 LDR X0, [X0 + 0x538]
	0x03E91B18 BL 0x1C16CF4
	0x03E91B1C MOVZ W8, 0x1
	0x03E91B20 STRB W8, [X19 + 0xE77]
	0x03E91B24 LDR X19, [X20 + 0x40]
	0x03E91B28 MOV X1, X31
	0x03E91B2C MOV X0, X19
	0x03E91B30 BL 0x33E14E0
	0x03E91B34 LDRB W8, [X20 + 0x20]
	0x03E91B38 CBNZ W8, 0x3E91BA0
	0x03E91B3C LDR X0, [X20 + 0x50]
	0x03E91B40 MOVZ W8, 0x1
	0x03E91B44 STRB W8, [X20 + 0x20]
	0x03E91B48 CBZ X0, 0x3E91B54
	0x03E91B4C MOV X1, X31
	0x03E91B50 BL 0x33DE66C
	0x03E91B54 LDR X21, [X20 + 0x18]
	0x03E91B58 CBZ X21, 0x3E91BA0
	0x03E91B5C ADRP X8, 0x28A000
	0x03E91B60 LDR X8, [X8 + 0x720]
	0x03E91B64 LDR X0, [X8]
	0x03E91B68 BL 0x1C16F10
	0x03E91B6C ADRP X8, 0x2DC000
	0x03E91B70 LDR X8, [X8 + 0x538]
	0x03E91B74 MOV X22, X0
	0x03E91B78 LDR X2, [X8]
	0x03E91B7C MOV X1, X20
	0x03E91B80 MOV X3, X31
	0x03E91B84 BL 0x3316570
	0x03E91B88 MOV X0, X21
	0x03E91B8C MOV X1, X20
	0x03E91B90 MOV X2, X22
	0x03E91B94 MOV X3, X31
	0x03E91B98 MOV X4, X31
	0x03E91B9C BL 0x3316684
	0x03E91BA0 MOV X0, X19

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+32], X30
	003 Move [X31+48], X22
	004 Move [X31+56], X21
	005 Move [X31+64], X20
	006 Move [X31+72], X19
	007 Move X22, 0x558000
	008 Move X21, 0x26A000
	009 Move W8, [X22+3691]
	010 Move X21, [X21+584]
	011 Move X19, X1
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {40}
	017 Move X0, 0x2DC000
	018 Move X0, [X0+3872]
	019 Call 0x1C17CF4
	020 Move X0, 0x2DC000
	021 Move X0, [X0+3880]
	022 Call 0x1C17CF4
	023 Move X0, 0x2DC000
	024 Move X0, [X0+3888]
	025 Call 0x1C17CF4
	026 Move X0, 0x2DD000
	027 Move X0, [X0+1232]
	028 Call 0x1C17CF4
	029 Move X0, 0x26A000
	030 Move X0, [X0+584]
	031 Call 0x1C17CF4
	032 Move X0, 0x2DC000
	033 Move X0, [X0+3896]
	034 Call 0x1C17CF4
	035 Move X0, 0x2DC000
	036 Move X0, [X0+3256]
	037 Call 0x1C17CF4
	038 Move W8, 1
	039 Move [X22+3691], W8
	040 Move X22, 0x2DD000
	041 Move X22, [X22+1232]
	042 Move X0, X20
	043 Move X1, X19
	044 Move [X31+8], X31
	045 Move [X31+16], X31
	046 Move [X31+24], X31
	047 Call HttpListenerResponse.findCookie, X0, X1
	048 Move X8, [X21]
	049 Move X20, X0
	050 Move W9, [X8+224]
	051 Compare W9, 0
	052 JumpIfNotEqual {55}
	053 Move X0, X8
	054 Call 0x1C17DFC
	055 Move X1, [X22]
	056 Move X0, X20
	057 Call 0x21E3B88, X0
	058 Compare X0, 0
	059 JumpIfEqual {111}
	060 Move W8, [X0+24]
	061 Move X20, X0
	062 Compare W8, 0
	063 JumpIfEqual {96}
	064 Compare X19, 0
	065 JumpIfEqual {111}
	066 Move X22, 0x2DC000
	067 Move X21, 0x2DC000
	068 Move X22, [X22+3896]
	069 Move X21, [X21+3880]
	070 Move X0, X19
	071 Move X1, X31
	072 Call Cookie.get_Version, X0
	073 Move X1, [X22]
	074 Move W19, W0
	075 Add X8, X31, 8
	076 Move X0, X20
	077 Call List`1<Object>.GetEnumerator, X0
	078 Move X1, [X21]
	079 Add X0, X31, 8
	080 Call Enumerator<Object>.MoveNext, X0
	081 Move TEMP, X0
	082 And TEMP, TEMP, 1
	083 Compare TEMP, 1
	084 JumpIfNotEqual {97}
	085 Move X0, [X31+24]
	086 Compare X0, 0
	087 JumpIfEqual {110}
	088 Move X1, X31
	089 Call Cookie.get_Version, X0
	090 NotImplemented "Instruction CMP not yet implemented."
	091 Move X8, 0x2DC000
	092 Move X8, [X8+3872]
	093 Add X0, X31, 8
	094 Move X1, [X8]
	095 Call Enumerator<Object>.Dispose, X0
	096 Move W0, 1
	097 Move X8, 0x2DC000
	098 Move X8, [X8+3872]
	099 Add X0, X31, 8
	100 Move X1, [X8]
	101 Call Enumerator<Object>.Dispose, X0
	102 Move W0, W31
	103 Move X20, [X31+64]
	104 Move X19, [X31+72]
	105 Move X22, [X31+48]
	106 Move X21, [X31+56]
	107 Move X30, [X31+32]
	108 Add X31, X31, 80
	109 Return X0
	110 Call 0x1C17F20
	111 Call 0x1C17F20
	112 Move X19, X0
	113 NotImplemented "Instruction CMP not yet implemented."
	114 Move X0, X19
	115 Call 0x3EB2AD0
	116 Move X20, [X0]
	117 Call 0x3EB2AE0
	118 Move X8, 0x2DC000
	119 Move X8, [X8+3872]
	120 Add X0, X31, 8
	121 Move X1, [X8]
	122 Call Enumerator<Object>.Dispose, X0
	123 Compare X20, 0
	124 JumpIfEqual {102}
	125 Move X0, X20
	126 Call 0x1C17F18
	127 Move X20, X31
	128 Move X19, X0
	129 Move X8, 0x2DC000
	130 Move X8, [X8+3872]
	131 Move X1, [X8]
	132 Add X0, X31, 8
	133 Call Enumerator<Object>.Dispose, X0
	134 Compare X20, 0
	135 JumpIfNotEqual {138}
	136 Move X0, X19
	137 Call 0x1D2D690
	138 Move X0, X20
	139 Call 0x1C17F18
	140 Call 0x1991590

Method: System.Void close(System.Boolean force)

Disassembly:
	0x03E91C14 MOV X1, X31
	0x03E91C18 BL 0x33E14E4
	0x03E91C1C CBNZ X21, 0x3E91C28
	0x03E91C20 MOV X0, X20
	0x03E91C24 BL 0x1D2C690
	0x03E91C28 MOV X0, X21
	0x03E91C2C BL 0x1C16F18
	0x03E91C30 BL 0x1990590
	0x03E91C34 STR X30, [X31 - 0x30]!
	0x03E91C38 STP X22, X21, [X31 + 0x10]
	0x03E91C3C STP X20, X19, [X31 + 0x20]
	0x03E91C40 ADRP X19, 0x557000
	0x03E91C44 LDRB W8, [X19 + 0xE78]
	0x03E91C48 MOV X21, X1
	0x03E91C4C MOV X20, X0

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, X0
	004 Move X0, [X0+48]
	005 Move W9, 1
	006 Move [X8+64], W9
	007 Compare X0, 0
	008 JumpIfEqual {20}
	009 Move W19, W1
	010 Move X1, X31
	011 Call HttpListenerContext.get_Connection, X0
	012 Compare X0, 0
	013 JumpIfEqual {20}
	014 And W1, W19, 1
	015 Move X2, X31
	016 Move X30, [X31+16]
	017 Move X19, [X31+24]
	018 Call HttpConnection.Close, X0, X1
	019 Return 
	020 Call 0x1C17F20

Method: System.Void close(System.Byte[] responseEntity, System.Int32 bufferLength, System.Boolean willBlock)

Disassembly:
	0x03E91C50 TBNZ X8, 0x0, 0x3E91C74
	0x03E91C54 ADRP X0, 0x28A000
	0x03E91C58 LDR X0, [X0 + 0x720]
	0x03E91C5C BL 0x1C16CF4
	0x03E91C60 ADRP X0, 0x2DC000
	0x03E91C64 LDR X0, [X0 + 0x540]
	0x03E91C68 BL 0x1C16CF4
	0x03E91C6C MOVZ W8, 0x1
	0x03E91C70 STRB W8, [X19 + 0xE78]
	0x03E91C74 LDR X19, [X20 + 0x40]
	0x03E91C78 MOV X1, X31
	0x03E91C7C MOV X0, X19
	0x03E91C80 BL 0x33E14E0
	0x03E91C84 LDRB W8, [X20 + 0x20]
	0x03E91C88 CBNZ W8, 0x3E91CF4
	0x03E91C8C LDR X0, [X20 + 0x50]
	0x03E91C90 MOVZ W8, 0x1
	0x03E91C94 STRB W8, [X20 + 0x20]
	0x03E91C98 STR X21, [X20 + 0x28]
	0x03E91C9C CBZ X0, 0x3E91CA8
	0x03E91CA0 MOV X1, X31
	0x03E91CA4 BL 0x33DE66C
	0x03E91CA8 LDR X21, [X20 + 0x18]
	0x03E91CAC CBZ X21, 0x3E91CF4
	0x03E91CB0 ADRP X8, 0x28A000
	0x03E91CB4 LDR X8, [X8 + 0x720]
	0x03E91CB8 LDR X0, [X8]
	0x03E91CBC BL 0x1C16F10
	0x03E91CC0 ADRP X8, 0x2DC000
	0x03E91CC4 LDR X8, [X8 + 0x540]
	0x03E91CC8 MOV X22, X0
	0x03E91CCC LDR X2, [X8]
	0x03E91CD0 MOV X1, X20
	0x03E91CD4 MOV X3, X31
	0x03E91CD8 BL 0x3316570
	0x03E91CDC MOV X0, X21
	0x03E91CE0 MOV X1, X20
	0x03E91CE4 MOV X2, X22
	0x03E91CE8 MOV X3, X31
	0x03E91CEC MOV X4, X31
	0x03E91CF0 BL 0x3316684
	0x03E91CF4 MOV X0, X19
	0x03E91CF8 LDP X20, X19, [X31 + 0x20]
	0x03E91CFC LDP X22, X21, [X31 + 0x10]
	0x03E91D00 MOV X1, X31
	0x03E91D04 LDR X30, [X31], #0x30
	0x03E91D08 B 0x33E14E4
	0x03E91D0C B 0x3E91D14
	0x03E91D10 B 0x3E91D14
	0x03E91D14 MOV X20, X0
	0x03E91D18 CMP W1, 0x1
	0x03E91D1C B.NE 0x3E91D50
	0x03E91D20 MOV X0, X20
	0x03E91D24 BL 0x3EB1AD0
	0x03E91D28 LDR X21, [X0]
	0x03E91D2C BL 0x3EB1AE0
	0x03E91D30 MOV X0, X19
	0x03E91D34 MOV X1, X31
	0x03E91D38 BL 0x33E14E4
	0x03E91D3C CBNZ X21, 0x3E91D58
	0x03E91D40 LDP X20, X19, [X31 + 0x20]
	0x03E91D44 LDP X22, X21, [X31 + 0x10]
	0x03E91D48 LDR X30, [X31], #0x30
	0x03E91D4C RET
	0x03E91D50 MOV X21, X31
	0x03E91D54 B 0x3E91D64
	0x03E91D58 MOV X0, X21
	0x03E91D5C BL 0x1C16F18
	0x03E91D60 MOV X20, X0
	0x03E91D64 MOV X0, X19

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X22, 0x558000
	009 Move W8, [X22+3692]
	010 Move W23, W3
	011 Move W19, W2
	012 Move X20, X1
	013 Move X21, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {29}
	018 Move X0, 0x264000
	019 Move X0, [X0+3696]
	020 Call 0x1C17CF4
	021 Move X0, 0x26A000
	022 Move X0, [X0+584]
	023 Call 0x1C17CF4
	024 Move X0, 0x2DD000
	025 Move X0, [X0+1248]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X22+3692], W8
	029 Move X24, 0x26A000
	030 Move X24, [X24+584]
	031 Move X0, X21
	032 Call HttpListenerResponse.get_OutputStream, X0
	033 Move X22, X0
	034 Move TEMP, X23
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfNotEqual {59}
	038 Move X0, [X24]
	039 Move W8, [X0+224]
	040 Compare W8, 0
	041 JumpIfNotEqual {43}
	042 Call 0x1C17DFC
	043 Move X0, X22
	044 Move X1, X20
	045 Move W2, W19
	046 Move X3, X31
	047 Call Ext.WriteBytes, X0, X1, X2
	048 Move X0, X21
	049 Move X20, [X31+48]
	050 Move X19, [X31+56]
	051 Move X22, [X31+32]
	052 Move X21, [X31+40]
	053 Move X24, [X31+16]
	054 Move X23, [X31+24]
	055 Move W1, W31
	056 Move X30, [X31+64]
	057 Call HttpListenerResponse.close, X0, X1
	058 Return 
	059 Move X8, 0x264000
	060 Move X8, [X8+3696]
	061 Move X23, 0x2DD000
	062 Move X0, [X8]
	063 Move X23, [X23+1248]
	064 Call 0x1C17F10
	065 Move X2, [X23]
	066 Move X1, X21
	067 Move X3, X31
	068 Move X23, X0
	069 Call Action..ctor, X0, X1, X2
	070 Move X0, [X24]
	071 Move W8, [X0+224]
	072 Compare W8, 0
	073 JumpIfNotEqual {75}
	074 Call 0x1C17DFC
	075 Move X0, X22
	076 Move X1, X20
	077 Move W2, W19
	078 Move X3, X23
	079 Move X20, [X31+48]
	080 Move X19, [X31+56]
	081 Move X22, [X31+32]
	082 Move X21, [X31+40]
	083 Move X24, [X31+16]
	084 Move X23, [X31+24]
	085 Move X4, X31
	086 Move X5, X31
	087 Move X30, [X31+64]
	088 Call Ext.WriteBytesAsync, X0, X1, X2, X3, X4
	089 Return 

Method: System.String createContentTypeHeaderText(System.String value, System.Text.Encoding encoding)

Disassembly:
	0x03E90AA0 MOV W19, W0
	0x03E90AA4 ADD X8, X31, 0x8
	0x03E90AA8 MOV X0, X20
	0x03E90AAC BL 0x301CB58
	0x03E90AB0 LDR X1, [X21]
	0x03E90AB4 ADD X0, X31, 0x8
	0x03E90AB8 BL 0x2BC4350
	0x03E90ABC TBZ X0, 0x0, 0x3E90AF4
	0x03E90AC0 LDR X0, [X31 + 0x18]
	0x03E90AC4 CBZ X0, 0x3E90B20
	0x03E90AC8 MOV X1, X31
	0x03E90ACC BL 0x3E82D74
	0x03E90AD0 CMP W0, W19
	0x03E90AD4 B.NE 0x3E90AB0
	0x03E90AD8 ADRP X8, 0x2DC000
	0x03E90ADC LDR X8, [X8 + 0xF20]
	0x03E90AE0 ADD X0, X31, 0x8
	0x03E90AE4 LDR X1, [X8]
	0x03E90AE8 BL 0x2BC434C
	0x03E90AEC MOVZ W0, 0x1
	0x03E90AF0 B 0x3E90B0C
	0x03E90AF4 ADRP X8, 0x2DC000
	0x03E90AF8 LDR X8, [X8 + 0xF20]
	0x03E90AFC ADD X0, X31, 0x8
	0x03E90B00 LDR X1, [X8]
	0x03E90B04 BL 0x2BC434C
	0x03E90B08 MOV W0, W31
	0x03E90B0C LDP X20, X19, [X31 + 0x40]
	0x03E90B10 LDP X22, X21, [X31 + 0x30]
	0x03E90B14 LDR X30, [X31 + 0x20]
	0x03E90B18 ADD X31, X31, 0x50
	0x03E90B1C RET
	0x03E90B20 BL 0x1C16F20
	0x03E90B24 BL 0x1C16F20
	0x03E90B28 B 0x3E90B30
	0x03E90B2C B 0x3E90B30
	0x03E90B30 MOV X19, X0
	0x03E90B34 CMP W1, 0x1
	0x03E90B38 B.NE 0x3E90B6C
	0x03E90B3C MOV X0, X19
	0x03E90B40 BL 0x3EB1AD0
	0x03E90B44 LDR X20, [X0]
	0x03E90B48 BL 0x3EB1AE0
	0x03E90B4C ADRP X8, 0x2DC000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x559000
	006 Move W8, [X21+3693]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0x2DE000
	014 Move X0, [X0+1088]
	015 Call 0x1C17CF4
	016 Move X0, 0x2DE000
	017 Move X0, [X0+1096]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+3693], W8
	021 Compare X19, 0
	022 JumpIfEqual {60}
	023 Move X8, 0x2DE000
	024 Move X8, [X8+1096]
	025 Move W2, 4
	026 Move X0, X19
	027 Move X3, X31
	028 Move X1, [X8]
	029 Call String.IndexOf, X0, X1, X2
	030 Compare X20, 0
	031 JumpIfEqual {54}
	032 Move TEMP, X0
	033 And TEMP, TEMP, -2147483648
	034 Compare TEMP, -2147483648
	035 JumpIfNotEqual {54}
	036 Move X8, [X20]
	037 Move X0, X20
	038 Move X9, [X8+472]
	039 Move X1, [X8+480]
	040 NotImplemented "Instruction BLR not yet implemented."
	041 Move X8, 0x2DE000
	042 Move X8, [X8+1088]
	043 Move X1, X19
	044 Move X20, [X31+16]
	045 Move X19, [X31+24]
	046 Move X2, X0
	047 Move X8, [X8]
	048 Move X3, X31
	049 Move X0, X8
	050 Move X30, [X31+32]
	051 Move X21, [X31+40]
	052 Call String.Format, X0, X1, X2
	053 Return X0
	054 Move X0, X19
	055 Move X20, [X31+16]
	056 Move X19, [X31+24]
	057 Move X30, [X31+32]
	058 Move X21, [X31+40]
	059 Return X0
	060 Call 0x1C17F20

Method: System.Collections.Generic.IEnumerable`1<WebSocketSharp.Net.Cookie> findCookie(WebSocketSharp.Net.Cookie cookie)

Disassembly:
	0x03E91BA4 LDP X20, X19, [X31 + 0x20]
	0x03E91BA8 LDP X22, X21, [X31 + 0x10]
	0x03E91BAC MOV X1, X31
	0x03E91BB0 LDR X30, [X31], #0x30
	0x03E91BB4 B 0x33E14E4
	0x03E91BB8 B 0x3E91BC0
	0x03E91BBC B 0x3E91BC0
	0x03E91BC0 MOV X20, X0
	0x03E91BC4 CMP W1, 0x1
	0x03E91BC8 B.NE 0x3E91BFC
	0x03E91BCC MOV X0, X20
	0x03E91BD0 BL 0x3EB1AD0
	0x03E91BD4 LDR X21, [X0]
	0x03E91BD8 BL 0x3EB1AE0
	0x03E91BDC MOV X0, X19
	0x03E91BE0 MOV X1, X31
	0x03E91BE4 BL 0x33E14E4
	0x03E91BE8 CBNZ X21, 0x3E91C04
	0x03E91BEC LDP X20, X19, [X31 + 0x20]
	0x03E91BF0 LDP X22, X21, [X31 + 0x10]
	0x03E91BF4 LDR X30, [X31], #0x30
	0x03E91BF8 RET
	0x03E91BFC MOV X21, X31
	0x03E91C00 B 0x3E91C10
	0x03E91C04 MOV X0, X21
	0x03E91C08 BL 0x1C16F18
	0x03E91C0C MOV X20, X0
	0x03E91C10 MOV X0, X19

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x558000
	007 Move X22, 0x2DD000
	008 Move W8, [X21+3694]
	009 Move X22, [X22+1240]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x2DD000
	017 Move X0, [X0+1240]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+3694], W8
	021 Move X0, [X22]
	022 Call 0x1C17F10
	023 Move TEMP, 1
	024 Not TEMP
	025 Move W1, TEMP
	026 Move X21, X0
	027 Call <findCookie>d__65..ctor, X0, X1
	028 Compare X21, 0
	029 JumpIfEqual {39}
	030 Move [X21+48], X19
	031 Move [X21+56], X20
	032 Move X0, X21
	033 Move X20, [X31+32]
	034 Move X19, [X31+40]
	035 Move X22, [X31+16]
	036 Move X21, [X31+24]
	037 Move X30, [X31+48]
	038 Return X0
	039 Call 0x1C17F20

Method: System.Boolean isValidForContentType(System.String value)

Disassembly:
	0x03E90FCC BL 0x1C16D08
	0x03E90FD0 MOV X1, X0
	0x03E90FD4 MOV X0, X20
	0x03E90FD8 BL 0x1C16DEC
	0x03E90FDC ADRP X0, 0x268000
	0x03E90FE0 LDR X0, [X0 + 0x528]
	0x03E90FE4 BL 0x1C16D08
	0x03E90FE8 BL 0x1C16F10
	0x03E90FEC MOV X19, X0
	0x03E90FF0 ADRP X0, 0x2DD000
	0x03E90FF4 LDR X0, [X0 + 0x500]
	0x03E90FF8 BL 0x1C16D08
	0x03E90FFC MOV X1, X0
	0x03E91000 MOV X0, X19
	0x03E91004 MOV X2, X31
	0x03E91008 BL 0x330E100
	0x03E9100C ADRP X0, 0x2DC000
	0x03E91010 LDR X0, [X0 + 0x4F8]
	0x03E91014 BL 0x1C16D08
	0x03E91018 MOV X1, X0
	0x03E9101C MOV X0, X19
	0x03E91020 BL 0x1C16DEC
	0x03E91024 MOV X1, X31
	0x03E91028 B 0x33BDD8C
	0x03E9102C STP X30, X21, [X31 - 0x20]!
	0x03E91030 STP X20, X19, [X31 + 0x10]
	0x03E91034 CBZ X1, 0x3E910B4
	0x03E91038 LDR X21, [X1 + 0x48]
	0x03E9103C MOV X20, X1
	0x03E91040 MOV X19, X0
	0x03E91044 CBZ X21, 0x3E9107C
	0x03E91048 LDR X0, [X19 + 0x48]
	0x03E9104C CBZ X0, 0x3E91060
	0x03E91050 LDR X8, [X0]
	0x03E91054 LDR X9, [X8 + 0x238]
	0x03E91058 LDR X1, [X8 + 0x240]
	0x03E9105C BLR X9
	0x03E91060 MOV X0, X19
	0x03E91064 BL 0x3E900E4
	0x03E91068 CBZ X0, 0x3E910FC
	0x03E9106C MOV X1, X21
	0x03E91070 MOV X2, X31
	0x03E91074 BL 0x3663714

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x559000
	006 Move W8, [X20+3695]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0x2DE000
	013 Move X0, [X0+1144]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+3695], W8
	017 Compare X19, 0
	018 JumpIfEqual {51}
	019 Move W8, [X19+16]
	020 NotImplemented "Instruction CMP not yet implemented."
	021 Move X21, 0x2DD000
	022 Move X21, [X21+1144]
	023 Move W20, W31
	024 Move X0, X19
	025 Move W1, W20
	026 Move X2, X31
	027 Call String.get_Chars, X0, X1
	028 Subtract W8, W0, 32
	029 And W8, W8, 0xFFFF
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move W1, W0
	032 Move X0, [X21]
	033 Compare X0, 0
	034 JumpIfEqual {51}
	035 Move X2, X31
	036 Call String.IndexOf, X0, X1
	037 Move TEMP, X0
	038 And TEMP, TEMP, -2147483648
	039 Compare TEMP, -2147483648
	040 JumpIfNotEqual {45}
	041 Move W8, [X19+16]
	042 Add W20, W20, 1
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Move W0, 1
	045 Move W0, W31
	046 Move X20, [X31+16]
	047 Move X19, [X31+24]
	048 Move X30, [X31+32]
	049 Move X21, [X31+40]
	050 Return X0
	051 Call 0x1C17F20

Method: System.Boolean isValidForStatusDescription(System.String value)

Disassembly:
	0x03E91930 LDP X22, X21, [X31 + 0x10]
	0x03E91934 LDP X30, X23, [X31], #0x30
	0x03E91938 RET
	0x03E9193C LDR X0, [X0 + 0x10]
	0x03E91940 RET
	0x03E91944 STR X1, [X0 + 0x10]
	0x03E91948 RET
	0x03E9194C LDR W0, [X0 + 0x24]
	0x03E91950 RET
	0x03E91954 STR W1, [X0 + 0x24]
	0x03E91958 RET
	0x03E9195C LDR X0, [X0 + 0x28]
	0x03E91960 RET
	0x03E91964 LDR X8, [X0 + 0x28]
	0x03E91968 CMP X8, 0x0
	0x03E9196C CSET W0, NE
	0x03E91970 RET
	0x03E91974 LDR W0, [X0 + 0x30]
	0x03E91978 RET
	0x03E9197C STR W1, [X0 + 0x30]
	0x03E91980 RET
	0x03E91984 LDR W0, [X0 + 0x48]
	0x03E91988 RET
	0x03E9198C STR W1, [X0 + 0x48]
	0x03E91990 RET
	0x03E91994 LDR X0, [X0 + 0x38]
	0x03E91998 RET
	0x03E9199C STR X30, [X31 - 0x30]!
	0x03E919A0 STP X22, X21, [X31 + 0x10]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Compare X0, 0
	006 JumpIfEqual {31}
	007 Move W8, [X0+16]
	008 Move X19, X0
	009 NotImplemented "Instruction CMP not yet implemented."
	010 NotImplemented "Instruction CSET not yet implemented."
	011 NotImplemented "Instruction CMP not yet implemented."
	012 Move W20, W31
	013 Move X0, X19
	014 Move W1, W20
	015 Move X2, X31
	016 Call String.get_Chars, X0, X1
	017 Subtract W8, W0, 32
	018 And W8, W8, 0xFFFF
	019 NotImplemented "Instruction CMP not yet implemented."
	020 Move W8, [X19+16]
	021 Add W20, W20, 1
	022 NotImplemented "Instruction CMP not yet implemented."
	023 NotImplemented "Instruction CSET not yet implemented."
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 NotImplemented "Instruction ORN not yet implemented."
	027 And W0, W8, 1
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Return X0
	031 Call 0x1C17F20

Method: System.Void Abort()

Disassembly:
	0x03E91DAC CBZ X0, 0x3E91DBC
	0x03E91DB0 MOV X2, X31
	0x03E91DB4 LDR X30, [X31], #0x10
	0x03E91DB8 B 0x33166A4
	0x03E91DBC BL 0x1C16F20

ISIL:
	001 Move W8, [X0+64]
	002 Compare W8, 0
	003 JumpIfEqual {5}
	004 Return 
	005 Move W1, 1
	006 Call HttpListenerResponse.close, X0, X1
	007 Return 

Method: System.Void AppendCookie(WebSocketSharp.Net.Cookie cookie)

Disassembly:
	0x03E91DC0 STR X30, [X31 - 0x20]!
	0x03E91DC4 STP X20, X19, [X31 + 0x10]
	0x03E91DC8 ADRP X19, 0x557000
	0x03E91DCC ADRP X20, 0x296000
	0x03E91DD0 LDRB W8, [X19 + 0xE79]
	0x03E91DD4 LDR X20, [X20 + 0xFF0]
	0x03E91DD8 TBNZ X8, 0x0, 0x3E91E08
	0x03E91DDC ADRP X0, 0x2DB000
	0x03E91DE0 LDR X0, [X0 + 0x368]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X1
	004 Call HttpListenerResponse.get_Cookies, X0
	005 Compare X0, 0
	006 JumpIfEqual {13}
	007 Move X1, X19
	008 Move X2, X31
	009 Move X30, [X31+16]
	010 Move X19, [X31+24]
	011 Call CookieCollection.Add, X0, X1
	012 Return 
	013 Call 0x1C17F20

Method: System.Void AppendHeader(System.String name, System.String value)

Disassembly:
	0x03E91DE4 BL 0x1C16CF4
	0x03E91DE8 ADRP X0, 0x268000
	0x03E91DEC LDR X0, [X0 + 0xCC0]
	0x03E91DF0 BL 0x1C16CF4
	0x03E91DF4 ADRP X0, 0x296000
	0x03E91DF8 LDR X0, [X0 + 0xFF0]
	0x03E91DFC BL 0x1C16CF4
	0x03E91E00 MOVZ W8, 0x1
	0x03E91E04 STRB W8, [X19 + 0xE79]
	0x03E91E08 LDR X0, [X20]
	0x03E91E0C CBZ X0, 0x3E91E60
	0x03E91E10 ADRP X20, 0x2DB000
	0x03E91E14 ADRP X19, 0x268000
	0x03E91E18 LDR X20, [X20 + 0x368]
	0x03E91E1C LDR X19, [X19 + 0xCC0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X2
	005 Move X20, X1
	006 Call HttpListenerResponse.get_Headers, X0
	007 Compare X0, 0
	008 JumpIfEqual {18}
	009 Move X8, [X0]
	010 Move X1, X20
	011 Move X2, X19
	012 Move X20, [X31+16]
	013 Move X19, [X31+24]
	014 Move X4, [X8+584]
	015 Move X3, [X8+592]
	016 Move X30, [X31+32]
	017 CallNoReturn X4
	018 Call 0x1C17F20

Method: System.Void Close()

Disassembly:
	0x03E91E20 MOV X1, X31
	0x03E91E24 BL 0x322D958
	0x03E91E28 LDR X8, [X20]
	0x03E91E2C LDR X8, [X8 + 0xB8]
	0x03E91E30 STR X0, [X8 + 0x8]

ISIL:
	001 Move W8, [X0+64]
	002 Compare W8, 0
	003 JumpIfEqual {5}
	004 Return 
	005 Move W1, W31
	006 Call HttpListenerResponse.close, X0, X1
	007 Return 

Method: System.Void Close(System.Byte[] responseEntity, System.Boolean willBlock)

Disassembly:
	0x03E91E34 LDR X0, [X19]
	0x03E91E38 BL 0x1C16F10
	0x03E91E3C MOV X1, X31
	0x03E91E40 MOV X19, X0
	0x03E91E44 BL 0x33BDD8C
	0x03E91E48 LDR X8, [X20]
	0x03E91E4C LDR X8, [X8 + 0xB8]
	0x03E91E50 STR X19, [X8 + 0x10]
	0x03E91E54 LDP X20, X19, [X31 + 0x10]
	0x03E91E58 LDR X30, [X31], #0x20
	0x03E91E5C RET
	0x03E91E60 BL 0x1C16F20
	0x03E91E64 STP X30, X21, [X31 - 0x20]!
	0x03E91E68 STP X20, X19, [X31 + 0x10]
	0x03E91E6C ADRP X19, 0x557000
	0x03E91E70 ADRP X20, 0x2DB000
	0x03E91E74 LDRB W8, [X19 + 0xE7A]
	0x03E91E78 LDR X20, [X20 + 0x368]
	0x03E91E7C TBNZ X8, 0x0, 0x3E91E94
	0x03E91E80 ADRP X0, 0x2DB000
	0x03E91E84 LDR X0, [X0 + 0x368]
	0x03E91E88 BL 0x1C16CF4
	0x03E91E8C MOVZ W8, 0x1
	0x03E91E90 STRB W8, [X19 + 0xE7A]
	0x03E91E94 LDR X0, [X20]
	0x03E91E98 LDR W8, [X0 + 0xE0]
	0x03E91E9C CBNZ W8, 0x3E91EA8
	0x03E91EA0 BL 0x1C16DFC
	0x03E91EA4 LDR X0, [X20]
	0x03E91EA8 LDR X8, [X0 + 0xB8]
	0x03E91EAC MOV X1, X31
	0x03E91EB0 LDR X19, [X8 + 0x10]
	0x03E91EB4 MOV X0, X19
	0x03E91EB8 BL 0x33E14E0
	0x03E91EBC LDR X8, [X20]
	0x03E91EC0 LDR W9, [X8 + 0xE0]
	0x03E91EC4 CBNZ W9, 0x3E91ED4
	0x03E91EC8 MOV X0, X8
	0x03E91ECC BL 0x1C16DFC
	0x03E91ED0 LDR X8, [X20]
	0x03E91ED4 LDR X9, [X8 + 0xB8]
	0x03E91ED8 LDR X9, [X9]
	0x03E91EDC CBNZ X9, 0x3E91EF8
	0x03E91EE0 LDR W9, [X8 + 0xE0]
	0x03E91EE4 CBNZ W9, 0x3E91EF0
	0x03E91EE8 MOV X0, X8
	0x03E91EEC BL 0x1C16DFC
	0x03E91EF0 BL 0x3E91F98
	0x03E91EF4 LDR X8, [X20]
	0x03E91EF8 LDR W9, [X8 + 0xE0]
	0x03E91EFC CBNZ W9, 0x3E91F0C
	0x03E91F00 MOV X0, X8
	0x03E91F04 BL 0x1C16DFC
	0x03E91F08 LDR X8, [X20]
	0x03E91F0C LDR X8, [X8 + 0xB8]
	0x03E91F10 MOV X0, X19
	0x03E91F14 MOV X1, X31
	0x03E91F18 LDR X21, [X8]
	0x03E91F1C BL 0x33E14E4
	0x03E91F20 LDP X20, X19, [X31 + 0x10]
	0x03E91F24 MOV X0, X21
	0x03E91F28 LDP X30, X21, [X31], #0x20
	0x03E91F2C RET
	0x03E91F30 CMP W1, 0x1
	0x03E91F34 MOV X21, X0
	0x03E91F38 B.NE 0x3E91F68
	0x03E91F3C MOV X0, X21
	0x03E91F40 BL 0x3EB1AD0
	0x03E91F44 LDR X20, [X0]
	0x03E91F48 BL 0x3EB1AE0
	0x03E91F4C MOV X0, X19
	0x03E91F50 MOV X1, X31
	0x03E91F54 BL 0x33E14E4
	0x03E91F58 MOV X21, X31
	0x03E91F5C CBZ X20, 0x3E91F20
	0x03E91F60 MOV X0, X20
	0x03E91F64 BL 0x1C16F18
	0x03E91F68 MOV X20, X31
	0x03E91F6C B 0x3E91F74
	0x03E91F70 MOV X21, X0
	0x03E91F74 MOV X0, X19
	0x03E91F78 MOV X1, X31
	0x03E91F7C BL 0x33E14E4
	0x03E91F80 CBNZ X20, 0x3E91F8C
	0x03E91F84 MOV X0, X21
	0x03E91F88 BL 0x1D2C690
	0x03E91F8C MOV X0, X20
	0x03E91F90 BL 0x1C16F18
	0x03E91F94 BL 0x1990590
	0x03E91F98 STR X30, [X31 - 0x30]!
	0x03E91F9C STP X22, X21, [X31 + 0x10]
	0x03E91FA0 STP X20, X19, [X31 + 0x20]
	0x03E91FA4 ADRP X21, 0x557000
	0x03E91FA8 ADRP X22, 0x2DC000
	0x03E91FAC ADRP X19, 0x2DC000
	0x03E91FB0 ADRP X20, 0x2DB000
	0x03E91FB4 LDRB W8, [X21 + 0xE7F]
	0x03E91FB8 LDR X22, [X22 + 0x548]
	0x03E91FBC LDR X19, [X19 + 0x550]
	0x03E91FC0 LDR X20, [X20 + 0x368]
	0x03E91FC4 TBNZ X8, 0x0, 0x3E92BD0
	0x03E91FC8 ADRP X0, 0x2DC000
	0x03E91FCC LDR X0, [X0 + 0x558]
	0x03E91FD0 BL 0x1C16CF4
	0x03E91FD4 ADRP X0, 0x2DC000
	0x03E91FD8 LDR X0, [X0 + 0x550]
	0x03E91FDC BL 0x1C16CF4
	0x03E91FE0 ADRP X0, 0x2DC000
	0x03E91FE4 LDR X0, [X0 + 0x548]
	0x03E91FE8 BL 0x1C16CF4
	0x03E91FEC ADRP X0, 0x2DB000
	0x03E91FF0 LDR X0, [X0 + 0x368]
	0x03E91FF4 BL 0x1C16CF4
	0x03E91FF8 ADRP X0, 0x2DC000
	0x03E91FFC LDR X0, [X0 + 0x560]
	0x03E92000 BL 0x1C16CF4
	0x03E92004 ADRP X0, 0x2DB000
	0x03E92008 LDR X0, [X0 + 0x568]
	0x03E9200C BL 0x1C16CF4
	0x03E92010 ADRP X0, 0x2DB000
	0x03E92014 LDR X0, [X0 + 0x570]
	0x03E92018 BL 0x1C16CF4
	0x03E9201C ADRP X0, 0x2DB000
	0x03E92020 LDR X0, [X0 + 0x578]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X22, 0x558000
	009 Move X23, 0x2DD000
	010 Move W8, [X22+3696]
	011 Move X23, [X23+1256]
	012 Move W21, W2
	013 Move X19, X1
	014 Move X20, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {30}
	019 Move X0, 0x28B000
	020 Move X0, [X0+1824]
	021 Call 0x1C17CF4
	022 Move X0, 0x2DD000
	023 Move X0, [X0+1264]
	024 Call 0x1C17CF4
	025 Move X0, 0x2DD000
	026 Move X0, [X0+1256]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X22+3696], W8
	030 Move X0, [X23]
	031 Call 0x1C17F10
	032 Move X1, X31
	033 Move X23, X0
	034 Call Object..ctor, X0
	035 Compare X23, 0
	036 JumpIfEqual {103}
	037 Move [X23+24], X20
	038 Move W8, [X20+64]
	039 Compare W8, 0
	040 JumpIfNotEqual {104}
	041 Compare X19, 0
	042 JumpIfEqual {129}
	043 Move W22, [X19+24]
	044 Move X0, X20
	045 Call HttpListenerResponse.get_OutputStream, X0
	046 Move X24, X0
	047 Move [X23+16], X0
	048 Move TEMP, X21
	049 And TEMP, TEMP, 1
	050 Compare TEMP, 1
	051 JumpIfNotEqual {73}
	052 Compare X24, 0
	053 JumpIfEqual {103}
	054 Move X8, [X24]
	055 Move X0, X24
	056 Move X1, X19
	057 Move W2, W31
	058 Move X9, [X8+904]
	059 Move X4, [X8+912]
	060 Move W3, W22
	061 NotImplemented "Instruction BLR not yet implemented."
	062 Move X0, X20
	063 Move X20, [X31+48]
	064 Move X19, [X31+56]
	065 Move X22, [X31+32]
	066 Move X21, [X31+40]
	067 Move X24, [X31+16]
	068 Move X23, [X31+24]
	069 Move W1, W31
	070 Move X30, [X31+64]
	071 Call HttpListenerResponse.close, X0, X1
	072 Return 
	073 Move X8, 0x28B000
	074 Move X8, [X8+1824]
	075 Move X0, [X8]
	076 Call 0x1C17F10
	077 Move X8, 0x2DD000
	078 Move X8, [X8+1264]
	079 Move X1, X23
	080 Move X3, X31
	081 Move X20, X0
	082 Move X2, [X8]
	083 Call AsyncCallback..ctor, X0, X1, X2
	084 Compare X24, 0
	085 JumpIfEqual {103}
	086 Move X8, [X24]
	087 Move X0, X24
	088 Move X1, X19
	089 Move W3, W22
	090 Move X7, [X8+760]
	091 Move X6, [X8+768]
	092 Move X4, X20
	093 Move X20, [X31+48]
	094 Move X19, [X31+56]
	095 Move X22, [X31+32]
	096 Move X21, [X31+40]
	097 Move X24, [X31+16]
	098 Move X23, [X31+24]
	099 Move W2, W31
	100 Move X5, X31
	101 Move X30, [X31+64]
	102 CallNoReturn X7
	103 Call 0x1C17F20
	104 Move X0, X20
	105 Move X1, X31
	106 Call "il2cpp_vm_object_is_inst", X0
	107 Move X19, X0
	108 Call 0x19913C0
	109 Move X8, [X19]
	110 Move X0, X19
	111 Move X9, [X8+360]
	112 Move X1, [X8+368]
	113 NotImplemented "Instruction BLR not yet implemented."
	114 Move X19, X0
	115 Move X0, 0x28C000
	116 Move X0, [X0+1208]
	117 Call 0x1C17D08
	118 Call 0x1C17F10
	119 Move X1, X19
	120 Move X2, X31
	121 Move X20, X0
	122 Call ObjectDisposedException..ctor, X0, X1
	123 Move X0, 0x2DD000
	124 Move X0, [X0+1272]
	125 Call 0x1C17D08
	126 Move X1, X0
	127 Move X0, X20
	128 Call 0x1C17DEC
	129 Move X0, 0x268000
	130 Move X0, [X0+1320]
	131 Call 0x1C17D08
	132 Call 0x1C17F10
	133 Move X19, X0
	134 Move X0, 0x2DD000
	135 Move X0, [X0+1280]
	136 Call 0x1C17D08
	137 Move X1, X0
	138 Move X0, X19
	139 Move X2, X31
	140 Call ArgumentNullException..ctor, X0, X1
	141 Move X0, 0x2DC000
	142 Move X0, [X0+1272]
	143 Call 0x1C17D08
	144 Move X1, X0
	145 Move X0, X19
	146 Call 0x1C17DEC

Method: System.Void CopyFrom(WebSocketSharp.Net.HttpListenerResponse templateResponse)

Disassembly:
	0x03E9202C LDR X0, [X0 + 0x580]
	0x03E92030 BL 0x1C16CF4
	0x03E92034 ADRP X0, 0x2DB000
	0x03E92038 LDR X0, [X0 + 0x588]
	0x03E9203C BL 0x1C16CF4
	0x03E92040 ADRP X0, 0x2DB000
	0x03E92044 LDR X0, [X0 + 0x590]
	0x03E92048 BL 0x1C16CF4
	0x03E9204C ADRP X0, 0x2DB000
	0x03E92050 LDR X0, [X0 + 0x598]
	0x03E92054 BL 0x1C16CF4
	0x03E92058 ADRP X0, 0x2DB000
	0x03E9205C LDR X0, [X0 + 0x5A0]
	0x03E92060 BL 0x1C16CF4
	0x03E92064 ADRP X0, 0x2DB000
	0x03E92068 LDR X0, [X0 + 0x5A8]
	0x03E9206C BL 0x1C16CF4
	0x03E92070 ADRP X0, 0x2B4000
	0x03E92074 LDR X0, [X0 + 0x608]
	0x03E92078 BL 0x1C16CF4
	0x03E9207C ADRP X0, 0x2DB000
	0x03E92080 LDR X0, [X0 + 0x5B0]
	0x03E92084 BL 0x1C16CF4
	0x03E92088 ADRP X0, 0x2DB000
	0x03E9208C LDR X0, [X0 + 0x5B8]
	0x03E92090 BL 0x1C16CF4
	0x03E92094 ADRP X0, 0x2DB000
	0x03E92098 LDR X0, [X0 + 0x5C0]
	0x03E9209C BL 0x1C16CF4
	0x03E920A0 ADRP X0, 0x2DB000
	0x03E920A4 LDR X0, [X0 + 0x5C8]
	0x03E920A8 BL 0x1C16CF4
	0x03E920AC ADRP X0, 0x2DB000
	0x03E920B0 LDR X0, [X0 + 0x5D0]
	0x03E920B4 BL 0x1C16CF4
	0x03E920B8 ADRP X0, 0x2DB000
	0x03E920BC LDR X0, [X0 + 0x5D8]
	0x03E920C0 BL 0x1C16CF4
	0x03E920C4 ADRP X0, 0x2DB000
	0x03E920C8 LDR X0, [X0 + 0x5E0]
	0x03E920CC BL 0x1C16CF4
	0x03E920D0 ADRP X0, 0x2DB000
	0x03E920D4 LDR X0, [X0 + 0x5E8]
	0x03E920D8 BL 0x1C16CF4
	0x03E920DC ADRP X0, 0x28F000
	0x03E920E0 LDR X0, [X0 + 0x940]
	0x03E920E4 BL 0x1C16CF4
	0x03E920E8 ADRP X0, 0x2DB000
	0x03E920EC LDR X0, [X0 + 0x5F0]
	0x03E920F0 BL 0x1C16CF4
	0x03E920F4 ADRP X0, 0x2DB000
	0x03E920F8 LDR X0, [X0 + 0x5F8]
	0x03E920FC BL 0x1C16CF4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Compare X1, 0
	006 JumpIfEqual {42}
	007 Move X21, [X1+72]
	008 Move X20, X1
	009 Move X19, X0
	010 Compare X21, 0
	011 JumpIfEqual {26}
	012 Move X0, [X19+72]
	013 Compare X0, 0
	014 JumpIfEqual {19}
	015 Move X8, [X0]
	016 Move X9, [X8+568]
	017 Move X1, [X8+576]
	018 NotImplemented "Instruction BLR not yet implemented."
	019 Move X0, X19
	020 Call HttpListenerResponse.get_Headers, X0
	021 Compare X0, 0
	022 JumpIfEqual {60}
	023 Move X1, X21
	024 Move X2, X31
	025 Call NameValueCollection.Add, X0, X1
	026 Move [X19+72], X31
	027 Move X8, [X20+32]
	028 Move [X19+32], X8
	029 Move W8, [X20+108]
	030 Move [X19+108], W8
	031 Move X8, [X20+112]
	032 Move [X19+112], X8
	033 Move W8, [X20+81]
	034 Move [X19+81], W8
	035 Move X8, [X20+120]
	036 Move [X19+120], X8
	037 Move X20, [X31+16]
	038 Move X19, [X31+24]
	039 Move X30, [X31+32]
	040 Move X21, [X31+40]
	041 Return 
	042 Move X0, 0x267000
	043 Move X0, [X0+1320]
	044 Call 0x1C17D08
	045 Call 0x1C17F10
	046 Move X19, X0
	047 Move X0, 0x2DC000
	048 Move X0, [X0+1288]
	049 Call 0x1C17D08
	050 Move X1, X0
	051 Move X0, X19
	052 Move X2, X31
	053 Call ArgumentNullException..ctor, X0, X1
	054 Move X0, 0x2DC000
	055 Move X0, [X0+1296]
	056 Call 0x1C17D08
	057 Move X1, X0
	058 Move X0, X19
	059 Call 0x1C17DEC
	060 Call 0x1C17F20

Method: System.Void Redirect(System.String url)

Disassembly:
	0x03E92100 ADRP X0, 0x2DB000
	0x03E92104 LDR X0, [X0 + 0x600]
	0x03E92108 BL 0x1C16CF4
	0x03E9210C ADRP X0, 0x2DB000
	0x03E92110 LDR X0, [X0 + 0x608]
	0x03E92114 BL 0x1C16CF4
	0x03E92118 ADRP X0, 0x2DB000
	0x03E9211C LDR X0, [X0 + 0x610]
	0x03E92120 BL 0x1C16CF4
	0x03E92124 ADRP X0, 0x2DB000
	0x03E92128 LDR X0, [X0 + 0x618]
	0x03E9212C BL 0x1C16CF4
	0x03E92130 ADRP X0, 0x2DB000
	0x03E92134 LDR X0, [X0 + 0x620]
	0x03E92138 BL 0x1C16CF4
	0x03E9213C ADRP X0, 0x2DB000
	0x03E92140 LDR X0, [X0 + 0x628]
	0x03E92144 BL 0x1C16CF4
	0x03E92148 ADRP X0, 0x2DB000
	0x03E9214C LDR X0, [X0 + 0x630]
	0x03E92150 BL 0x1C16CF4
	0x03E92154 ADRP X0, 0x2DB000
	0x03E92158 LDR X0, [X0 + 0x638]
	0x03E9215C BL 0x1C16CF4
	0x03E92160 ADRP X0, 0x2DB000
	0x03E92164 LDR X0, [X0 + 0x640]
	0x03E92168 BL 0x1C16CF4
	0x03E9216C ADRP X0, 0x2DB000
	0x03E92170 LDR X0, [X0 + 0x648]
	0x03E92174 BL 0x1C16CF4
	0x03E92178 ADRP X0, 0x2DB000
	0x03E9217C LDR X0, [X0 + 0x650]
	0x03E92180 BL 0x1C16CF4
	0x03E92184 ADRP X0, 0x2DB000
	0x03E92188 LDR X0, [X0 + 0x658]
	0x03E9218C BL 0x1C16CF4
	0x03E92190 ADRP X0, 0x2DB000
	0x03E92194 LDR X0, [X0 + 0x660]
	0x03E92198 BL 0x1C16CF4
	0x03E9219C ADRP X0, 0x2DB000
	0x03E921A0 LDR X0, [X0 + 0x668]
	0x03E921A4 BL 0x1C16CF4
	0x03E921A8 ADRP X0, 0x2DB000
	0x03E921AC LDR X0, [X0 + 0x670]
	0x03E921B0 BL 0x1C16CF4
	0x03E921B4 ADRP X0, 0x2DB000
	0x03E921B8 LDR X0, [X0 + 0x678]
	0x03E921BC BL 0x1C16CF4
	0x03E921C0 ADRP X0, 0x2DB000
	0x03E921C4 LDR X0, [X0 + 0x680]
	0x03E921C8 BL 0x1C16CF4
	0x03E921CC ADRP X0, 0x2DB000
	0x03E921D0 LDR X0, [X0 + 0x688]
	0x03E921D4 BL 0x1C16CF4
	0x03E921D8 ADRP X0, 0x2DB000
	0x03E921DC LDR X0, [X0 + 0x690]
	0x03E921E0 BL 0x1C16CF4
	0x03E921E4 ADRP X0, 0x2DB000
	0x03E921E8 LDR X0, [X0 + 0x698]
	0x03E921EC BL 0x1C16CF4
	0x03E921F0 ADRP X0, 0x2DB000
	0x03E921F4 LDR X0, [X0 + 0x6A0]
	0x03E921F8 BL 0x1C16CF4
	0x03E921FC ADRP X0, 0x2DB000
	0x03E92200 LDR X0, [X0 + 0x6A8]
	0x03E92204 BL 0x1C16CF4
	0x03E92208 ADRP X0, 0x2DB000
	0x03E9220C LDR X0, [X0 + 0x6B0]
	0x03E92210 BL 0x1C16CF4
	0x03E92214 ADRP X0, 0x2DB000
	0x03E92218 LDR X0, [X0 + 0x6B8]
	0x03E9221C BL 0x1C16CF4
	0x03E92220 ADRP X0, 0x28F000
	0x03E92224 LDR X0, [X0 + 0x948]
	0x03E92228 BL 0x1C16CF4
	0x03E9222C ADRP X0, 0x2DB000
	0x03E92230 LDR X0, [X0 + 0x6C0]
	0x03E92234 BL 0x1C16CF4
	0x03E92238 ADRP X0, 0x2DB000
	0x03E9223C LDR X0, [X0 + 0x6C8]
	0x03E92240 BL 0x1C16CF4
	0x03E92244 ADRP X0, 0x2DB000
	0x03E92248 LDR X0, [X0 + 0x6D0]
	0x03E9224C BL 0x1C16CF4
	0x03E92250 ADRP X0, 0x2DB000
	0x03E92254 LDR X0, [X0 + 0x6D8]
	0x03E92258 BL 0x1C16CF4
	0x03E9225C ADRP X0, 0x2DB000
	0x03E92260 LDR X0, [X0 + 0x6E0]
	0x03E92264 BL 0x1C16CF4
	0x03E92268 ADRP X0, 0x2D3000
	0x03E9226C LDR X0, [X0 + 0xAA8]
	0x03E92270 BL 0x1C16CF4
	0x03E92274 ADRP X0, 0x2DB000
	0x03E92278 LDR X0, [X0 + 0x6E8]
	0x03E9227C BL 0x1C16CF4
	0x03E92280 ADRP X0, 0x2DB000
	0x03E92284 LDR X0, [X0 + 0x6F0]
	0x03E92288 BL 0x1C16CF4
	0x03E9228C ADRP X0, 0x2DB000
	0x03E92290 LDR X0, [X0 + 0x6F8]
	0x03E92294 BL 0x1C16CF4
	0x03E92298 ADRP X0, 0x2DB000
	0x03E9229C LDR X0, [X0 + 0x700]
	0x03E922A0 BL 0x1C16CF4
	0x03E922A4 ADRP X0, 0x2DB000
	0x03E922A8 LDR X0, [X0 + 0x708]
	0x03E922AC BL 0x1C16CF4
	0x03E922B0 ADRP X0, 0x2DB000
	0x03E922B4 LDR X0, [X0 + 0x710]
	0x03E922B8 BL 0x1C16CF4
	0x03E922BC ADRP X0, 0x2DB000
	0x03E922C0 LDR X0, [X0 + 0x718]
	0x03E922C4 BL 0x1C16CF4
	0x03E922C8 ADRP X0, 0x2DB000
	0x03E922CC LDR X0, [X0 + 0x720]
	0x03E922D0 BL 0x1C16CF4
	0x03E922D4 ADRP X0, 0x2DB000
	0x03E922D8 LDR X0, [X0 + 0x728]
	0x03E922DC BL 0x1C16CF4
	0x03E922E0 ADRP X0, 0x2DB000
	0x03E922E4 LDR X0, [X0 + 0x730]
	0x03E922E8 BL 0x1C16CF4
	0x03E922EC ADRP X0, 0x2DB000

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x557000
	007 Move W8, [X21+3697]
	008 Move X20, X1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x264000
	015 Move X0, [X0+2600]
	016 Call 0x1C17CF4
	017 Move X0, 0x2AC000
	018 Move X0, [X0+1360]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+3697], W8
	022 Move [X31+8], X31
	023 Move W8, [X19+64]
	024 Compare W8, 0
	025 JumpIfNotEqual {64}
	026 Move W8, [X19+80]
	027 Compare W8, 0
	028 JumpIfNotEqual {83}
	029 Compare X20, 0
	030 JumpIfEqual {95}
	031 Move W8, [X20+16]
	032 Compare W8, 0
	033 JumpIfEqual {113}
	034 Move X8, 0x264000
	035 Move X8, [X8+2600]
	036 Move X0, [X8]
	037 Move W8, [X0+224]
	038 Compare W8, 0
	039 JumpIfNotEqual {41}
	040 Call 0x1C17DFC
	041 Add X2, X31, 8
	042 Move W1, 1
	043 Move X0, X20
	044 Move X3, X31
	045 Call Uri.TryCreate, X0, X1, X2
	046 Move TEMP, X0
	047 And TEMP, TEMP, 1
	048 Compare TEMP, 1
	049 JumpIfNotEqual {115}
	050 Move X8, [X31+8]
	051 Move X9, 0x2AC000
	052 Move X9, [X9+1360]
	053 Move W10, 302
	054 Move [X19+96], X8
	055 Move [X19+108], W10
	056 Move X8, [X9]
	057 Move X30, [X31+16]
	058 Move X21, [X31+24]
	059 Move [X19+112], X8
	060 Move X20, [X31+32]
	061 Move X19, [X31+40]
	062 Add X31, X31, 48
	063 Return 
	064 Move X0, X19
	065 Move X1, X31
	066 Call "il2cpp_vm_object_is_inst", X0
	067 Move X19, X0
	068 Call 0x19913C0
	069 Move X8, [X19]
	070 Move X0, X19
	071 Move X9, [X8+360]
	072 Move X1, [X8+368]
	073 NotImplemented "Instruction BLR not yet implemented."
	074 Move X19, X0
	075 Move X0, 0x28B000
	076 Move X0, [X0+1208]
	077 Call 0x1C17D08
	078 Call 0x1C17F10
	079 Move X1, X19
	080 Move X2, X31
	081 Move X20, X0
	082 Call ObjectDisposedException..ctor, X0, X1
	083 Move X0, 0x2DC000
	084 Move X0, [X0+1112]
	085 Call 0x1C17D08
	086 Move X19, X0
	087 Move X0, 0x262000
	088 Move X0, [X0+1456]
	089 Call 0x1C17D08
	090 Call 0x1C17F10
	091 Move X1, X19
	092 Move X2, X31
	093 Move X20, X0
	094 Call InvalidOperationException..ctor, X0, X1
	095 Move X0, 0x267000
	096 Move X0, [X0+1320]
	097 Call 0x1C17D08
	098 Call 0x1C17F10
	099 Move X19, X0
	100 Move X0, 0x292000
	101 Move X0, [X0+4080]
	102 Call 0x1C17D08
	103 Move X1, X0
	104 Move X0, X19
	105 Move X2, X31
	106 Call ArgumentNullException..ctor, X0, X1
	107 Move X0, 0x2DC000
	108 Move X0, [X0+1304]
	109 Call 0x1C17D08
	110 Move X1, X0
	111 Move X0, X19
	112 Call 0x1C17DEC
	113 Move X0, 0x28B000
	114 Move X0, [X0+2488]
	115 Move X0, 0x2DC000
	116 Move X0, [X0+1184]
	117 Call 0x1C17D08
	118 Move X19, X0
	119 Move X0, 0x26A000
	120 Move X0, [X0+1400]
	121 Call 0x1C17D08
	122 Call 0x1C17F10
	123 Move X20, X0
	124 Move X0, 0x292000
	125 Move X0, [X0+4080]
	126 Call 0x1C17D08
	127 Move X2, X0
	128 Move X0, X20
	129 Move X1, X19
	130 Move X3, X31
	131 Call ArgumentException..ctor, X0, X1, X2
	132 Move X0, 0x2DC000
	133 Move X0, [X0+1304]
	134 Call 0x1C17D08
	135 Move X1, X0
	136 Move X0, X20
	137 Call 0x1C17DEC

Method: System.Void SetCookie(WebSocketSharp.Net.Cookie cookie)

Disassembly:
	0x03E922F0 LDR X0, [X0 + 0x738]
	0x03E922F4 BL 0x1C16CF4
	0x03E922F8 ADRP X0, 0x2DB000
	0x03E922FC LDR X0, [X0 + 0x740]
	0x03E92300 BL 0x1C16CF4
	0x03E92304 ADRP X0, 0x2DB000
	0x03E92308 LDR X0, [X0 + 0x748]
	0x03E9230C BL 0x1C16CF4
	0x03E92310 ADRP X0, 0x2DB000
	0x03E92314 LDR X0, [X0 + 0x750]
	0x03E92318 BL 0x1C16CF4
	0x03E9231C ADRP X0, 0x2DB000
	0x03E92320 LDR X0, [X0 + 0x758]
	0x03E92324 BL 0x1C16CF4
	0x03E92328 ADRP X0, 0x2DB000
	0x03E9232C LDR X0, [X0 + 0x760]
	0x03E92330 BL 0x1C16CF4
	0x03E92334 ADRP X0, 0x2DB000
	0x03E92338 LDR X0, [X0 + 0x768]
	0x03E9233C BL 0x1C16CF4
	0x03E92340 ADRP X0, 0x2DB000
	0x03E92344 LDR X0, [X0 + 0x770]
	0x03E92348 BL 0x1C16CF4
	0x03E9234C ADRP X0, 0x2DB000
	0x03E92350 LDR X0, [X0 + 0x778]
	0x03E92354 BL 0x1C16CF4
	0x03E92358 ADRP X0, 0x2DB000
	0x03E9235C LDR X0, [X0 + 0x780]
	0x03E92360 BL 0x1C16CF4
	0x03E92364 ADRP X0, 0x2DB000
	0x03E92368 LDR X0, [X0 + 0x788]
	0x03E9236C BL 0x1C16CF4
	0x03E92370 ADRP X0, 0x2DB000
	0x03E92374 LDR X0, [X0 + 0x790]
	0x03E92378 BL 0x1C16CF4
	0x03E9237C ADRP X0, 0x2DB000
	0x03E92380 LDR X0, [X0 + 0x798]
	0x03E92384 BL 0x1C16CF4
	0x03E92388 ADRP X0, 0x2DB000
	0x03E9238C LDR X0, [X0 + 0x7A0]
	0x03E92390 BL 0x1C16CF4
	0x03E92394 ADRP X0, 0x2DB000
	0x03E92398 LDR X0, [X0 + 0x7A8]
	0x03E9239C BL 0x1C16CF4
	0x03E923A0 ADRP X0, 0x2DB000
	0x03E923A4 LDR X0, [X0 + 0x7B0]
	0x03E923A8 BL 0x1C16CF4
	0x03E923AC ADRP X0, 0x2DB000
	0x03E923B0 LDR X0, [X0 + 0x7B8]
	0x03E923B4 BL 0x1C16CF4
	0x03E923B8 ADRP X0, 0x2DB000
	0x03E923BC LDR X0, [X0 + 0x7C0]
	0x03E923C0 BL 0x1C16CF4
	0x03E923C4 ADRP X0, 0x2DB000
	0x03E923C8 LDR X0, [X0 + 0x7C8]
	0x03E923CC BL 0x1C16CF4
	0x03E923D0 ADRP X0, 0x2DB000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Compare X1, 0
	005 JumpIfEqual {24}
	006 Move X19, X1
	007 Move X20, X0
	008 Call HttpListenerResponse.canSetCookie, X0, X1
	009 Move TEMP, X0
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfNotEqual {42}
	013 Move X0, X20
	014 Call HttpListenerResponse.get_Cookies, X0
	015 Compare X0, 0
	016 JumpIfEqual {65}
	017 Move X1, X19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X2, X31
	021 Move X30, [X31+32]
	022 Call CookieCollection.Add, X0, X1
	023 Return 
	024 Move X0, 0x267000
	025 Move X0, [X0+1320]
	026 Call 0x1C17D08
	027 Call 0x1C17F10
	028 Move X19, X0
	029 Move X0, 0x2AD000
	030 Move X0, [X0+896]
	031 Call 0x1C17D08
	032 Move X1, X0
	033 Move X0, X19
	034 Move X2, X31
	035 Call ArgumentNullException..ctor, X0, X1
	036 Move X0, 0x2DC000
	037 Move X0, [X0+1312]
	038 Call 0x1C17D08
	039 Move X1, X0
	040 Move X0, X19
	041 Call 0x1C17DEC
	042 Move X0, 0x2DC000
	043 Move X0, [X0+1320]
	044 Call 0x1C17D08
	045 Move X19, X0
	046 Move X0, 0x26A000
	047 Move X0, [X0+1400]
	048 Call 0x1C17D08
	049 Call 0x1C17F10
	050 Move X20, X0
	051 Move X0, 0x2AD000
	052 Move X0, [X0+896]
	053 Call 0x1C17D08
	054 Move X2, X0
	055 Move X0, X20
	056 Move X1, X19
	057 Move X3, X31
	058 Call ArgumentException..ctor, X0, X1, X2
	059 Move X0, 0x2DC000
	060 Move X0, [X0+1312]
	061 Call 0x1C17D08
	062 Move X1, X0
	063 Move X0, X20
	064 Call 0x1C17DEC
	065 Call 0x1C17F20

Method: System.Void SetHeader(System.String name, System.String value)

Disassembly:
	0x03E923D4 LDR X0, [X0 + 0x7D0]
	0x03E923D8 BL 0x1C16CF4
	0x03E923DC ADRP X0, 0x2DB000
	0x03E923E0 LDR X0, [X0 + 0x7D8]
	0x03E923E4 BL 0x1C16CF4
	0x03E923E8 ADRP X0, 0x2DB000
	0x03E923EC LDR X0, [X0 + 0x7E0]
	0x03E923F0 BL 0x1C16CF4
	0x03E923F4 ADRP X0, 0x2DB000
	0x03E923F8 LDR X0, [X0 + 0x7E8]
	0x03E923FC BL 0x1C16CF4
	0x03E92400 ADRP X0, 0x2DB000
	0x03E92404 LDR X0, [X0 + 0x7F0]
	0x03E92408 BL 0x1C16CF4
	0x03E9240C ADRP X0, 0x2DB000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X2
	005 Move X20, X1
	006 Call HttpListenerResponse.get_Headers, X0
	007 Compare X0, 0
	008 JumpIfEqual {18}
	009 Move X8, [X0]
	010 Move X1, X20
	011 Move X2, X19
	012 Move X20, [X31+16]
	013 Move X19, [X31+24]
	014 Move X4, [X8+632]
	015 Move X3, [X8+640]
	016 Move X30, [X31+32]
	017 CallNoReturn X4
	018 Call 0x1C17F20

Method: System.Void System.IDisposable.Dispose()

Disassembly:
	0x03E92410 LDR X0, [X0 + 0x7F8]
	0x03E92414 BL 0x1C16CF4
	0x03E92418 ADRP X0, 0x2DB000
	0x03E9241C LDR X0, [X0 + 0x800]
	0x03E92420 BL 0x1C16CF4

ISIL:
	001 Move W8, [X0+64]
	002 Compare W8, 0
	003 JumpIfEqual {5}
	004 Return 
	005 Move W1, 1
	006 Call HttpListenerResponse.close, X0, X1
	007 Return 

Method: System.Void <close>b__63_0()

Disassembly:
	0x03E92424 ADRP X0, 0x2DB000
	0x03E92428 LDR X0, [X0 + 0x808]

ISIL:
	001 Move W1, W31
	002 Call HttpListenerResponse.close, X0, X1
	003 Return 

