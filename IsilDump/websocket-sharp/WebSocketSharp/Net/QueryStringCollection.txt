Type: WebSocketSharp.Net.QueryStringCollection

Method: System.Void .ctor()

Disassembly:
	0x03EA0518 BL 0x1C5C788
	0x03EA051C B 0x3EA052C

ISIL:
	001 Move X1, X31
	002 Call NameValueCollection..ctor, X0
	003 Return 

Method: System.Void .ctor(System.Int32 capacity)

Disassembly:
	0x03EA0520 LDRSW X9, [X10]
	0x03EA0524 ADD X8, X8, X9, 0x4, LSL

ISIL:
	001 Move X2, X31
	002 Call NameValueCollection..ctor, X0, X1
	003 Return 

Method: System.String urlDecode(System.String s, System.Text.Encoding encoding)

Disassembly:
	0x03EA0528 ADD X0, X8, 0x138
	0x03EA052C LDP X8, X1, [X0]
	0x03EA0530 MOV X0, X20
	0x03EA0534 BLR X8
	0x03EA0538 CBNZ X21, 0x3EA0544
	0x03EA053C MOV X0, X19
	0x03EA0540 BL 0x1D2C690
	0x03EA0544 MOV X0, X21
	0x03EA0548 BL 0x1C16F18
	0x03EA054C BL 0x1990590
	0x03EA0550 STR X30, [X31 - 0x20]!
	0x03EA0554 STP X20, X19, [X31 + 0x10]
	0x03EA0558 ADRP X20, 0x548000
	0x03EA055C LDRB W8, [X20 + 0xEE4]
	0x03EA0560 MOV X19, X0
	0x03EA0564 TBNZ X8, 0x0, 0x3EA0588
	0x03EA0568 ADRP X0, 0x2CE000
	0x03EA056C LDR X0, [X0 + 0x138]
	0x03EA0570 BL 0x1C16CF4
	0x03EA0574 ADRP X0, 0x29E000
	0x03EA0578 LDR X0, [X0 + 0x628]
	0x03EA057C BL 0x1C16CF4
	0x03EA0580 MOVZ W8, 0x1
	0x03EA0584 STRB W8, [X20 + 0xEE4]
	0x03EA0588 LDR X0, [X19 + 0x18]
	0x03EA058C CBZ X0, 0x3EA05C8
	0x03EA0590 ADRP X8, 0x29E000
	0x03EA0594 LDR X8, [X8 + 0x628]
	0x03EA0598 ADRP X19, 0x2CE000
	0x03EA059C MOV X2, X31
	0x03EA05A0 LDR X1, [X8]
	0x03EA05A4 LDR X19, [X19 + 0x138]
	0x03EA05A8 BL 0x366456C
	0x03EA05AC LDR X8, [X19]
	0x03EA05B0 LDP X20, X19, [X31 + 0x10]
	0x03EA05B4 MOV X1, X0
	0x03EA05B8 MOV X2, X31
	0x03EA05BC MOV X0, X8
	0x03EA05C0 LDR X30, [X31], #0x20
	0x03EA05C4 B 0x321EFD0
	0x03EA05C8 BL 0x1C16F20
	0x03EA05CC STR X30, [X31 - 0x30]!
	0x03EA05D0 STP X22, X21, [X31 + 0x10]
	0x03EA05D4 STP X20, X19, [X31 + 0x20]
	0x03EA05D8 ADRP X20, 0x548000
	0x03EA05DC ADRP X21, 0x253000
	0x03EA05E0 LDRB W8, [X20 + 0xEE5]
	0x03EA05E4 LDR X21, [X21 + 0x8F0]
	0x03EA05E8 MOV X19, X0
	0x03EA05EC TBNZ X8, 0x0, 0x3EA06A0
	0x03EA05F0 ADRP X0, 0x253000
	0x03EA05F4 LDR X0, [X0 + 0x8F0]
	0x03EA05F8 BL 0x1C16CF4
	0x03EA05FC ADRP X0, 0x2CC000
	0x03EA0600 LDR X0, [X0 + 0xEC0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x549000
	007 Move X22, 0x25D000
	008 Move W8, [X21+3803]
	009 Move X22, [X22+2264]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0x25D000
	017 Move X0, [X0+2264]
	018 Call 0x1C17CF4
	019 Move X0, 0x2CD000
	020 Move X0, [X0+872]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X21+3803], W8
	024 Move X0, [X22]
	025 Move W1, 2
	026 Call 0x1C17D6C
	027 Compare X0, 0
	028 JumpIfEqual {70}
	029 Move W8, [X0+24]
	030 Move X1, X0
	031 Compare W8, 0
	032 JumpIfEqual {71}
	033 Move W9, 37
	034 NotImplemented "Instruction CMP not yet implemented."
	035 NotImplemented "Instruction STRH not yet implemented."
	036 Move W8, 43
	037 NotImplemented "Instruction STRH not yet implemented."
	038 Compare X20, 0
	039 JumpIfEqual {70}
	040 Move X0, X20
	041 Move X2, X31
	042 Call String.IndexOfAny, X0, X1
	043 Move TEMP, X0
	044 And TEMP, TEMP, -2147483648
	045 Compare TEMP, -2147483648
	046 JumpIfEqual {63}
	047 Move X8, 0x2CD000
	048 Move X8, [X8+872]
	049 Move X0, [X8]
	050 Move W8, [X0+224]
	051 Compare W8, 0
	052 JumpIfNotEqual {54}
	053 Call 0x1C17DFC
	054 Move X0, X20
	055 Move X1, X19
	056 Move X20, [X31+32]
	057 Move X19, [X31+40]
	058 Move X22, [X31+16]
	059 Move X21, [X31+24]
	060 Move X30, [X31+48]
	061 Call HttpUtility.UrlDecode, X0, X1
	062 Return X0
	063 Move X0, X20
	064 Move X20, [X31+32]
	065 Move X19, [X31+40]
	066 Move X22, [X31+16]
	067 Move X21, [X31+24]
	068 Move X30, [X31+48]
	069 Return X0
	070 Call 0x1C17F20
	071 Call 0x1C17F28

Method: WebSocketSharp.Net.QueryStringCollection Parse(System.String query)

Disassembly:
	0x03EA0604 BL 0x1C16CF4
	0x03EA0608 ADRP X0, 0x2CE000
	0x03EA060C LDR X0, [X0 + 0x140]
	0x03EA0610 BL 0x1C16CF4
	0x03EA0614 ADRP X0, 0x254000
	0x03EA0618 LDR X0, [X0 + 0x870]
	0x03EA061C BL 0x1C16CF4
	0x03EA0620 ADRP X0, 0x29E000

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move X0, X31
	005 Call Encoding.get_UTF8
	006 Move X1, X0
	007 Move X0, X19
	008 Move X30, [X31+16]
	009 Move X19, [X31+24]

Method: WebSocketSharp.Net.QueryStringCollection Parse(System.String query, System.Text.Encoding encoding)

Disassembly:
	0x03EA0624 LDR X0, [X0 + 0x618]
	0x03EA0628 BL 0x1C16CF4
	0x03EA062C ADRP X0, 0x2CE000
	0x03EA0630 LDR X0, [X0 + 0x148]
	0x03EA0634 BL 0x1C16CF4
	0x03EA0638 ADRP X0, 0x2CE000
	0x03EA063C LDR X0, [X0 + 0x130]
	0x03EA0640 BL 0x1C16CF4
	0x03EA0644 ADRP X0, 0x29E000
	0x03EA0648 LDR X0, [X0 + 0x620]
	0x03EA064C BL 0x1C16CF4
	0x03EA0650 ADRP X0, 0x2CE000
	0x03EA0654 LDR X0, [X0 + 0x150]
	0x03EA0658 BL 0x1C16CF4
	0x03EA065C ADRP X0, 0x29C000
	0x03EA0660 LDR X0, [X0 + 0xAD8]
	0x03EA0664 BL 0x1C16CF4
	0x03EA0668 ADRP X0, 0x2CE000
	0x03EA066C LDR X0, [X0 + 0x158]
	0x03EA0670 BL 0x1C16CF4
	0x03EA0674 ADRP X0, 0x29E000
	0x03EA0678 LDR X0, [X0 + 0x628]
	0x03EA067C BL 0x1C16CF4
	0x03EA0680 ADRP X0, 0x2CE000
	0x03EA0684 LDR X0, [X0 + 0x160]
	0x03EA0688 BL 0x1C16CF4
	0x03EA068C ADRP X0, 0x2CE000
	0x03EA0690 LDR X0, [X0 + 0x168]
	0x03EA0694 BL 0x1C16CF4
	0x03EA0698 MOVZ W8, 0x1
	0x03EA069C STRB W8, [X20 + 0xEE5]
	0x03EA06A0 LDR X0, [X21]
	0x03EA06A4 BL 0x1C16F10
	0x03EA06A8 MOVZ W1, 0x80
	0x03EA06AC MOV X2, X31
	0x03EA06B0 MOV X20, X0
	0x03EA06B4 BL 0x3231B28
	0x03EA06B8 LDR X0, [X19 + 0x18]
	0x03EA06BC CBZ X0, 0x3EA0878
	0x03EA06C0 ADRP X8, 0x2CC000
	0x03EA06C4 LDR X8, [X8 + 0xEC0]
	0x03EA06C8 MOV X2, X31
	0x03EA06CC LDR X1, [X8]
	0x03EA06D0 BL 0x366456C
	0x03EA06D4 LDR X8, [X19 + 0x18]
	0x03EA06D8 CBZ X8, 0x3EA0878
	0x03EA06DC ADRP X9, 0x29E000
	0x03EA06E0 LDR X9, [X9 + 0x628]
	0x03EA06E4 MOV X21, X0
	0x03EA06E8 MOV X0, X8
	0x03EA06EC MOV X2, X31
	0x03EA06F0 LDR X1, [X9]
	0x03EA06F4 BL 0x366456C
	0x03EA06F8 LDR X8, [X19 + 0x18]
	0x03EA06FC CBZ X8, 0x3EA0878
	0x03EA0700 ADRP X9, 0x254000
	0x03EA0704 LDR X9, [X9 + 0x870]
	0x03EA0708 MOV X22, X0
	0x03EA070C MOV X0, X8
	0x03EA0710 MOV X2, X31
	0x03EA0714 LDR X1, [X9]
	0x03EA0718 BL 0x366456C
	0x03EA071C CBZ X20, 0x3EA0878
	0x03EA0720 MOV X4, X0
	0x03EA0724 CBZ X21, 0x3EA074C
	0x03EA0728 ADRP X8, 0x2CE000
	0x03EA072C LDR X8, [X8 + 0x158]
	0x03EA0730 MOV X0, X20
	0x03EA0734 MOV X2, X22
	0x03EA0738 MOV X3, X21
	0x03EA073C LDR X1, [X8]
	0x03EA0740 MOV X5, X31
	0x03EA0744 BL 0x3234DF4
	0x03EA0748 B 0x3EA076C
	0x03EA074C ADRP X8, 0x2CE000
	0x03EA0750 LDR X8, [X8 + 0x140]
	0x03EA0754 MOV X0, X20
	0x03EA0758 MOV X2, X22
	0x03EA075C MOV X3, X4
	0x03EA0760 LDR X1, [X8]
	0x03EA0764 MOV X4, X31
	0x03EA0768 BL 0x3234D98
	0x03EA076C LDR X0, [X19 + 0x18]
	0x03EA0770 CBZ X0, 0x3EA0878
	0x03EA0774 ADRP X8, 0x29E000
	0x03EA0778 LDR X8, [X8 + 0x620]
	0x03EA077C MOV X2, X31
	0x03EA0780 LDR X1, [X8]
	0x03EA0784 BL 0x366456C
	0x03EA0788 CBZ X0, 0x3EA07A8
	0x03EA078C ADRP X8, 0x2CE000
	0x03EA0790 LDR X8, [X8 + 0x148]
	0x03EA0794 MOV X2, X0
	0x03EA0798 MOV X0, X20
	0x03EA079C MOV X3, X31
	0x03EA07A0 LDR X1, [X8]
	0x03EA07A4 BL 0x3234224
	0x03EA07A8 LDR X0, [X19 + 0x18]
	0x03EA07AC CBZ X0, 0x3EA0878
	0x03EA07B0 ADRP X8, 0x2CE000
	0x03EA07B4 LDR X8, [X8 + 0x130]
	0x03EA07B8 MOV X2, X31
	0x03EA07BC LDR X1, [X8]
	0x03EA07C0 BL 0x366456C
	0x03EA07C4 CBZ X0, 0x3EA07E4
	0x03EA07C8 ADRP X8, 0x2CE000
	0x03EA07CC LDR X8, [X8 + 0x150]
	0x03EA07D0 MOV X2, X0
	0x03EA07D4 MOV X0, X20
	0x03EA07D8 MOV X3, X31
	0x03EA07DC LDR X1, [X8]
	0x03EA07E0 BL 0x3234224
	0x03EA07E4 LDR X0, [X19 + 0x18]
	0x03EA07E8 CBZ X0, 0x3EA0878
	0x03EA07EC ADRP X8, 0x29C000
	0x03EA07F0 LDR X8, [X8 + 0xAD8]
	0x03EA07F4 MOV X2, X31
	0x03EA07F8 LDR X1, [X8]
	0x03EA07FC BL 0x366456C
	0x03EA0800 CBZ X0, 0x3EA0820
	0x03EA0804 ADRP X8, 0x2CE000
	0x03EA0808 LDR X8, [X8 + 0x168]
	0x03EA080C MOV X2, X0
	0x03EA0810 MOV X0, X20
	0x03EA0814 MOV X3, X31
	0x03EA0818 LDR X1, [X8]
	0x03EA081C BL 0x3234224
	0x03EA0820 LDR X0, [X19 + 0x18]
	0x03EA0824 CBZ X0, 0x3EA0878
	0x03EA0828 ADRP X8, 0x29E000
	0x03EA082C LDR X8, [X8 + 0x618]
	0x03EA0830 MOV X2, X31
	0x03EA0834 LDR X1, [X8]
	0x03EA0838 BL 0x366456C
	0x03EA083C CBZ X0, 0x3EA085C
	0x03EA0840 ADRP X8, 0x2CE000
	0x03EA0844 LDR X8, [X8 + 0x160]
	0x03EA0848 MOV X2, X0
	0x03EA084C MOV X0, X20
	0x03EA0850 MOV X3, X31
	0x03EA0854 LDR X1, [X8]
	0x03EA0858 BL 0x3234224
	0x03EA085C LDR X8, [X20]
	0x03EA0860 MOV X0, X20
	0x03EA0864 LDP X20, X19, [X31 + 0x20]
	0x03EA0868 LDP X22, X21, [X31 + 0x10]
	0x03EA086C LDP X2, X1, [X8 + 0x168]
	0x03EA0870 LDR X30, [X31], #0x30
	0x03EA0874 BR X2
	0x03EA0878 BL 0x1C16F20
	0x03EA087C STP X30, X21, [X31 - 0x20]!
	0x03EA0880 STP X20, X19, [X31 + 0x10]
	0x03EA0884 MOV W20, W1
	0x03EA0888 MOV X1, X31
	0x03EA088C MOV X19, X2
	0x03EA0890 MOV X21, X0
	0x03EA0894 BL 0x33BDD8C
	0x03EA0898 STR W20, [X21 + 0x10]
	0x03EA089C STR X19, [X21 + 0x18]
	0x03EA08A0 LDP X20, X19, [X31 + 0x10]
	0x03EA08A4 LDP X30, X21, [X31], #0x20
	0x03EA08A8 RET
	0x03EA08AC STR X30, [X31 - 0x30]!
	0x03EA08B0 STP X22, X21, [X31 + 0x10]
	0x03EA08B4 STP X20, X19, [X31 + 0x20]
	0x03EA08B8 ADRP X21, 0x548000
	0x03EA08BC ADRP X22, 0x29D000
	0x03EA08C0 LDRB W8, [X21 + 0xEE6]

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X20, 0x549000
	012 Move W8, [X20+3804]
	013 Move X19, X1
	014 Move X21, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {36}
	019 Move X0, 0x25D000
	020 Move X0, [X0+2264]
	021 Call 0x1C17CF4
	022 Move X0, 0x2CF000
	023 Move X0, [X0+288]
	024 Call 0x1C17CF4
	025 Move X0, 0x256000
	026 Move X0, [X0+632]
	027 Call 0x1C17CF4
	028 Move X0, 0x281000
	029 Move X0, [X0+4024]
	030 Call 0x1C17CF4
	031 Move X0, 0x282000
	032 Move X0, [X0+2448]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X20+3804], W8
	036 Compare X21, 0
	037 JumpIfEqual {51}
	038 Move W8, [X21+16]
	039 Compare W8, 0
	040 JumpIfEqual {51}
	041 Move X8, 0x282000
	042 Move X8, [X8+2448]
	043 Move X0, X21
	044 Move X2, X31
	045 Move X1, [X8]
	046 Call String.op_Equality, X0, X1
	047 Move TEMP, X0
	048 And TEMP, TEMP, 1
	049 Compare TEMP, 1
	050 JumpIfNotEqual {71}
	051 Move X8, 0x2CF000
	052 Move X8, [X8+288]
	053 Move X0, [X8]
	054 Call 0x1C17F10
	055 Move W1, 1
	056 Move X2, X31
	057 Move X20, X0
	058 Call NameValueCollection..ctor, X0, X1
	059 Move X0, X20
	060 Move X20, [X31+64]
	061 Move X19, [X31+72]
	062 Move X22, [X31+48]
	063 Move X21, [X31+56]
	064 Move X24, [X31+32]
	065 Move X23, [X31+40]
	066 Move X26, [X31+16]
	067 Move X25, [X31+24]
	068 Move X30, [X31+80]
	069 Move X27, [X31+88]
	070 Return X0
	071 Move X0, X21
	072 Move W1, W31
	073 Move X2, X31
	074 Call String.get_Chars, X0, X1
	075 And W8, W0, 0xFFFF
	076 NotImplemented "Instruction CMP not yet implemented."
	077 Move W1, 1
	078 Move X0, X21
	079 Move X2, X31
	080 Call String.Substring, X0, X1
	081 Move X21, X0
	082 Compare X19, 0
	083 JumpIfNotEqual {87}
	084 Move X0, X31
	085 Call Encoding.get_UTF8
	086 Move X19, X0
	087 Move X8, 0x2CF000
	088 Move X8, [X8+288]
	089 Move X0, [X8]
	090 Call 0x1C17F10
	091 Move X1, X31
	092 Move X20, X0
	093 Call NameValueCollection..ctor, X0
	094 Move X8, 0x25D000
	095 Move X8, [X8+2264]
	096 Move W1, 1
	097 Move X0, [X8]
	098 Call 0x1C17D6C
	099 Compare X0, 0
	100 JumpIfEqual {192}
	101 Move W8, [X0+24]
	102 Move X1, X0
	103 Compare W8, 0
	104 JumpIfEqual {193}
	105 Move W8, 38
	106 NotImplemented "Instruction STRH not yet implemented."
	107 Compare X21, 0
	108 JumpIfEqual {192}
	109 Move X0, X21
	110 Move X2, X31
	111 Call String.Split, X0, X1
	112 Compare X0, 0
	113 JumpIfEqual {192}
	114 Move W8, [X0+24]
	115 Move X21, X0
	116 NotImplemented "Instruction CMP not yet implemented."
	117 Move X25, 0x281000
	118 Move X26, 0x256000
	119 Move X25, [X25+4024]
	120 Move X26, [X26+632]
	121 Move W24, W31
	122 NotImplemented "Instruction CMP not yet implemented."
	123 Add X8, X21, W24
	124 Move X22, [X8+32]
	125 Compare X22, 0
	126 JumpIfEqual {192}
	127 Move W27, [X22+16]
	128 Compare W27, 0
	129 JumpIfEqual {189}
	130 Move X1, [X25]
	131 Move X0, X22
	132 Move X2, X31
	133 Call String.op_Equality, X0, X1
	134 Move TEMP, X0
	135 And TEMP, TEMP, 1
	136 Compare TEMP, 1
	137 JumpIfEqual {189}
	138 Move W1, 61
	139 Move X0, X22
	140 Move X2, X31
	141 Call String.IndexOf, X0, X1
	142 Move TEMP, X0
	143 And TEMP, TEMP, -2147483648
	144 Compare TEMP, -2147483648
	145 JumpIfEqual {165}
	146 Move W23, W0
	147 Compare W0, 0
	148 JumpIfEqual {166}
	149 Move X0, X22
	150 Move W1, W31
	151 Move W2, W23
	152 Move X3, X31
	153 Call String.Substring, X0, X1, X2
	154 Move X1, X19
	155 Call QueryStringCollection.urlDecode, X0, X1
	156 Add W1, W23, 1
	157 NotImplemented "Instruction CMP not yet implemented."
	158 Move X23, X0
	159 Move X0, X22
	160 Move X2, X31
	161 Call String.Substring, X0, X1
	162 Move X1, X19
	163 Call QueryStringCollection.urlDecode, X0, X1
	164 Move X2, X0
	165 Move X0, X22
	166 Move W1, 1
	167 Move X0, X22
	168 Move X2, X31
	169 Call String.Substring, X0, X1
	170 Move X1, X19
	171 Call QueryStringCollection.urlDecode, X0, X1
	172 Compare X20, 0
	173 JumpIfEqual {192}
	174 Move X8, [X20]
	175 Move X2, X0
	176 Move X0, X20
	177 Move X1, X31
	178 Move X8, [X26]
	179 Move X8, [X8+184]
	180 Move X2, [X8]
	181 Compare X20, 0
	182 JumpIfEqual {192}
	183 Move X8, [X20]
	184 Move X0, X20
	185 Move X1, X23
	186 Move X9, [X8+584]
	187 Move X3, [X8+592]
	188 NotImplemented "Instruction BLR not yet implemented."
	189 Move W8, [X21+24]
	190 Add W24, W24, 1
	191 NotImplemented "Instruction CMP not yet implemented."
	192 Call 0x1C17F20
	193 Call 0x1C17F28

Method: System.String ToString()

Disassembly:
	0x03EA08C4 LDR X22, [X22 + 0xF28]
	0x03EA08C8 MOV X19, X1
	0x03EA08CC MOV X20, X0
	0x03EA08D0 TBNZ X8, 0x0, 0x3EA08E8
	0x03EA08D4 ADRP X0, 0x29D000
	0x03EA08D8 LDR X0, [X0 + 0xF28]
	0x03EA08DC BL 0x1C16CF4
	0x03EA08E0 MOVZ W8, 0x1
	0x03EA08E4 STRB W8, [X21 + 0xEE6]
	0x03EA08E8 LDR X0, [X22]
	0x03EA08EC BL 0x1C16F10
	0x03EA08F0 MOV X1, X31
	0x03EA08F4 MOV X21, X0
	0x03EA08F8 BL 0x3663550
	0x03EA08FC MOV X0, X20
	0x03EA0900 MOV X2, X21
	0x03EA0904 MOV X3, X19
	0x03EA0908 LDP X20, X19, [X31 + 0x20]
	0x03EA090C LDP X22, X21, [X31 + 0x10]
	0x03EA0910 MOVZ W1, 0x8
	0x03EA0914 MOV W4, W31
	0x03EA0918 LDR X30, [X31], #0x30
	0x03EA091C B 0x3EA0920
	0x03EA0920 STR X30, [X31 - 0x40]!
	0x03EA0924 STP X24, X23, [X31 + 0x10]
	0x03EA0928 STP X22, X21, [X31 + 0x20]
	0x03EA092C STP X20, X19, [X31 + 0x30]
	0x03EA0930 ADRP X24, 0x548000
	0x03EA0934 LDRB W8, [X24 + 0xEE7]
	0x03EA0938 MOV W19, W4
	0x03EA093C MOV X22, X3
	0x03EA0940 MOV X23, X2
	0x03EA0944 MOV W21, W1
	0x03EA0948 MOV X20, X0
	0x03EA094C TBNZ X8, 0x0, 0x3EA097C
	0x03EA0950 ADRP X0, 0x283000
	0x03EA0954 LDR X0, [X0 + 0xE18]
	0x03EA0958 BL 0x1C16CF4
	0x03EA095C ADRP X0, 0x2CC000
	0x03EA0960 LDR X0, [X0 + 0x9B8]
	0x03EA0964 BL 0x1C16CF4
	0x03EA0968 ADRP X0, 0x27D000
	0x03EA096C LDR X0, [X0 + 0xCB8]
	0x03EA0970 BL 0x1C16CF4
	0x03EA0974 MOVZ W8, 0x1
	0x03EA0978 STRB W8, [X24 + 0xEE7]
	0x03EA097C MOV X0, X20
	0x03EA0980 MOV X1, X31
	0x03EA0984 BL 0x33BDD8C
	0x03EA0988 STR W21, [X20 + 0x10]
	0x03EA098C STR X23, [X20 + 0x18]
	0x03EA0990 CBZ X22, 0x3EA0AA4
	0x03EA0994 CBZ X23, 0x3EA0AA4
	0x03EA0998 ADRP X8, 0x2CC000
	0x03EA099C LDR X8, [X8 + 0x9B8]
	0x03EA09A0 LDR X2, [X22 + 0x28]
	0x03EA09A4 MOV X0, X23
	0x03EA09A8 MOV X3, X31
	0x03EA09AC LDR X1, [X8]
	0x03EA09B0 BL 0x366457C
	0x03EA09B4 ADRP X24, 0x548000
	0x03EA09B8 LDRB W8, [X24 + 0xED3]
	0x03EA09BC LDR X23, [X20 + 0x18]
	0x03EA09C0 TBNZ X8, 0x0, 0x3EA09D8
	0x03EA09C4 ADRP X0, 0x255000
	0x03EA09C8 LDR X0, [X0 + 0x278]
	0x03EA09CC BL 0x1C16CF4
	0x03EA09D0 MOVZ W8, 0x1
	0x03EA09D4 STRB W8, [X24 + 0xED3]
	0x03EA09D8 LDR X2, [X22 + 0x18]
	0x03EA09DC CBNZ X2, 0x3EA09F4
	0x03EA09E0 ADRP X8, 0x255000
	0x03EA09E4 LDR X8, [X8 + 0x278]
	0x03EA09E8 LDR X8, [X8]
	0x03EA09EC LDR X8, [X8 + 0xB8]
	0x03EA09F0 LDR X2, [X8]
	0x03EA09F4 CBZ X23, 0x3EA0AA4
	0x03EA09F8 ADRP X8, 0x27D000
	0x03EA09FC LDR X8, [X8 + 0xCB8]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X19, 0x549000
	010 Move X21, 0x254000
	011 Move W8, [X19+3805]
	012 Move X21, [X21+2288]
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0x254000
	019 Move X0, [X0+2288]
	020 Call 0x1C17CF4
	021 Move X0, 0x2CF000
	022 Move X0, [X0+296]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X19+3805], W8
	026 Move X0, [X21]
	027 Call 0x1C17F10
	028 Move X1, X31
	029 Move X19, X0
	030 Call StringBuilder..ctor, X0
	031 Move X8, [X20]
	032 Move X0, X20
	033 Move X9, [X8+712]
	034 Move X1, [X8+720]
	035 NotImplemented "Instruction BLR not yet implemented."
	036 Compare X0, 0
	037 JumpIfEqual {90}
	038 Move X8, [X0+24]
	039 Move X21, X0
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Move X24, 0x2CF000
	042 Move X24, [X24+296]
	043 Move X23, X31
	044 And X8, X8, 0
	045 Add X25, X21, 32
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Move X22, [X25]
	048 Move X0, X20
	049 Move X2, X31
	050 Move X1, X22
	051 Call NameValueCollection.get_Item, X0, X1
	052 Compare X19, 0
	053 JumpIfEqual {90}
	054 Move X1, [X24]
	055 Move X3, X0
	056 Move X0, X19
	057 Move X2, X22
	058 Move X4, X31
	059 Call StringBuilder.AppendFormat, X0, X1, X2, X3
	060 Move W8, [X21+24]
	061 Add X23, X23, 1
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Compare X19, 0
	064 JumpIfEqual {90}
	065 Move X0, X19
	066 Move X1, X31
	067 Call StringBuilder.get_Length, X0
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Move X0, X19
	070 Move X1, X31
	071 Call StringBuilder.get_Length, X0
	072 Subtract W1, W0, 1
	073 Move X0, X19
	074 Move X2, X31
	075 Call StringBuilder.set_Length, X0, X1
	076 Move X8, [X19]
	077 Move X0, X19
	078 Move X20, [X31+48]
	079 Move X19, [X31+56]
	080 Move X22, [X31+32]
	081 Move X21, [X31+40]
	082 Move X2, [X8+360]
	083 Move X1, [X8+368]
	084 Move X24, [X31+16]
	085 Move X23, [X31+24]
	086 Move X30, [X31+64]
	087 Move X25, [X31+72]
	088 CallNoReturn X2
	089 Call 0x1C17F28
	090 Call 0x1C17F20

