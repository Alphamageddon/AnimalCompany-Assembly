Type: WebSocketSharp.Net.Cookie

Method: System.Void .cctor()

Disassembly:
	0x03E82E5C BL 0x1C16CF4
	0x03E82E60 ADRP X0, 0x2EA000
	0x03E82E64 LDR X0, [X0 + 0xDE0]
	0x03E82E68 BL 0x1C16CF4
	0x03E82E6C ADRP X0, 0x2EA000
	0x03E82E70 LDR X0, [X0 + 0xDE8]
	0x03E82E74 BL 0x1C16CF4
	0x03E82E78 ADRP X0, 0x2EA000
	0x03E82E7C LDR X0, [X0 + 0xDF0]
	0x03E82E80 BL 0x1C16CF4
	0x03E82E84 MOVZ W8, 0x1
	0x03E82E88 STRB W8, [X21 + 0xDED]
	0x03E82E8C LDR X0, [X20]
	0x03E82E90 STR X31, [X31 + 0x8]
	0x03E82E94 BL 0x1C16F10
	0x03E82E98 MOVZ W1, 0x40
	0x03E82E9C MOV X2, X31
	0x03E82EA0 MOV X20, X0
	0x03E82EA4 BL 0x3231B28
	0x03E82EA8 CBZ X20, 0x3E830BC
	0x03E82EAC ADRP X8, 0x271000
	0x03E82EB0 LDR X8, [X8 + 0xEF8]
	0x03E82EB4 LDR X3, [X19 + 0x78]
	0x03E82EB8 LDR X2, [X19 + 0x40]
	0x03E82EBC ADRP X23, 0x272000
	0x03E82EC0 LDR X1, [X8]
	0x03E82EC4 LDR X23, [X23 + 0x9F0]
	0x03E82EC8 MOV X0, X20
	0x03E82ECC MOV X4, X31
	0x03E82ED0 BL 0x3234D98
	0x03E82ED4 LDR X0, [X23]
	0x03E82ED8 LDR X21, [X19 + 0x30]
	0x03E82EDC LDR W8, [X0 + 0xE0]
	0x03E82EE0 CBNZ W8, 0x3E82EEC
	0x03E82EE4 BL 0x1C16DFC
	0x03E82EE8 LDR X0, [X23]
	0x03E82EEC LDR X8, [X0 + 0xB8]
	0x03E82EF0 ADRP X22, 0x278000
	0x03E82EF4 MOV X0, X21
	0x03E82EF8 MOV X2, X31
	0x03E82EFC LDR X1, [X8 + 0x10]
	0x03E82F00 LDR X22, [X22 + 0x248]
	0x03E82F04 BL 0x33630E0
	0x03E82F08 TBZ X0, 0x0, 0x3E82F98
	0x03E82F0C LDR X0, [X23]
	0x03E82F10 ADD X21, X19, 0x30
	0x03E82F14 LDR W8, [X0 + 0xE0]
	0x03E82F18 CBNZ W8, 0x3E82F20
	0x03E82F1C BL 0x1C16DFC
	0x03E82F20 MOV X0, X21

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x567000
	007 Move X22, 0x273000
	008 Move X19, 0x2EB000
	009 Move X20, 0x27B000
	010 Move W8, [X21+3549]
	011 Move X22, [X22+3672]
	012 Move X19, [X19+3472]
	013 Move X20, [X20+2264]
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {29}
	018 Move X0, 0x27B000
	019 Move X0, [X0+2264]
	020 Call 0x1C17CF4
	021 Move X0, 0x2EB000
	022 Move X0, [X0+3472]
	023 Call 0x1C17CF4
	024 Move X0, 0x273000
	025 Move X0, [X0+3672]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X21+3549], W8
	029 Move X0, [X22]
	030 Move W1, W31
	031 Call 0x1C17D6C
	032 Move X8, [X19]
	033 Move W1, 2
	034 Move X8, [X8+184]
	035 Move [X8], X0
	036 Move X0, [X20]
	037 Call 0x1C17D6C
	038 Compare X0, 0
	039 JumpIfEqual {58}
	040 Move W8, [X0+24]
	041 Compare W8, 0
	042 JumpIfEqual {57}
	043 Move W9, 59
	044 NotImplemented "Instruction CMP not yet implemented."
	045 NotImplemented "Instruction STRH not yet implemented."
	046 Move W8, 44
	047 NotImplemented "Instruction STRH not yet implemented."
	048 Move X8, [X19]
	049 Move X20, [X31+32]
	050 Move X19, [X31+40]
	051 Move X22, [X31+16]
	052 Move X21, [X31+24]
	053 Move X8, [X8+184]
	054 Move [X8+8], X0
	055 Move X30, [X31+48]
	056 Return 
	057 Call 0x1C17F28
	058 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x03E82F24 MOV X1, X31
	0x03E82F28 BL 0x3362548
	0x03E82F2C ADRP X8, 0x273000
	0x03E82F30 LDR X8, [X8 + 0xC48]
	0x03E82F34 STR X0, [X31 + 0x8]
	0x03E82F38 LDR X8, [X8]
	0x03E82F3C LDR W9, [X8 + 0xE0]
	0x03E82F40 CBNZ W9, 0x3E82F4C
	0x03E82F44 MOV X0, X8
	0x03E82F48 BL 0x1C16DFC
	0x03E82F4C ADRP X8, 0x284000
	0x03E82F50 LDR X8, [X8 + 0xA28]
	0x03E82F54 MOV X1, X31
	0x03E82F58 LDR X0, [X8]
	0x03E82F5C BL 0x3347554
	0x03E82F60 ADRP X8, 0x2EA000
	0x03E82F64 LDR X8, [X8 + 0xDD8]
	0x03E82F68 MOV X2, X0
	0x03E82F6C ADD X0, X31, 0x8
	0x03E82F70 MOV X3, X31
	0x03E82F74 LDR X1, [X8]
	0x03E82F78 BL 0x3362380
	0x03E82F7C ADRP X8, 0x2EA000
	0x03E82F80 LDR X8, [X8 + 0xDE0]
	0x03E82F84 MOV X2, X0
	0x03E82F88 MOV X0, X20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x567000
	006 Move X20, 0x274000
	007 Move W8, [X21+3550]
	008 Move X20, [X20+632]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x274000
	015 Move X0, [X0+632]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+3550], W8
	019 Move X0, X19
	020 Move X1, X31
	021 Call Object..ctor, X0
	022 Move X8, [X20]
	023 Move X0, X19
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X8, [X8+184]
	027 Move X1, [X8]
	028 Move X2, X1
	029 Move X3, X1
	030 Move X4, X1
	031 Move X30, [X31+32]
	032 Move X21, [X31+40]

Method: System.Void .ctor(System.String name, System.String value)

Disassembly:
	0x03E83024 CBNZ W8, 0x3E8302C
	0x03E83028 BL 0x1C16DFC
	0x03E8302C MOV X0, X21
	0x03E83030 MOV X1, X31
	0x03E83034 BL 0x3E6C1B0
	0x03E83038 TBNZ X0, 0x0, 0x3E83058
	0x03E8303C ADRP X8, 0x2E9000
	0x03E83040 LDR X2, [X19 + 0x60]
	0x03E83044 LDR X8, [X8 + 0xDC8]
	0x03E83048 MOV X0, X20
	0x03E8304C MOV X3, X31
	0x03E83050 LDR X1, [X8]
	0x03E83054 BL 0x3234224
	0x03E83058 LDRB W8, [X19 + 0x68]
	0x03E8305C CBZ W8, 0x3E83078
	0x03E83060 ADRP X8, 0x2E9000
	0x03E83064 LDR X8, [X8 + 0xDD0]
	0x03E83068 MOV X0, X20
	0x03E8306C MOV X2, X31
	0x03E83070 LDR X1, [X8]
	0x03E83074 BL 0x32333E0
	0x03E83078 LDRB W8, [X19 + 0x38]
	0x03E8307C CBZ W8, 0x3E83098
	0x03E83080 ADRP X8, 0x2E9000
	0x03E83084 LDR X8, [X8 + 0xDC0]
	0x03E83088 MOV X0, X20
	0x03E8308C MOV X2, X31

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x566000
	008 Move X23, 0x273000
	009 Move W8, [X22+3551]
	010 Move X23, [X23+632]
	011 Move X19, X2
	012 Move X20, X1
	013 Move X21, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0x273000
	019 Move X0, [X0+632]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+3551], W8
	023 Move X8, [X23]
	024 Move X0, X21
	025 Move X1, X20
	026 Move X2, X19
	027 Move X8, [X8+184]
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X3, [X8]
	033 Move X4, X3
	034 Move X30, [X31+48]
	035 Move X23, [X31+56]

Method: System.Void .ctor(System.String name, System.String value, System.String path)

Disassembly:
	0x03E83360 MOV X0, X20
	0x03E83364 MOV X2, X31
	0x03E83368 LDR X1, [X8]
	0x03E8336C BL 0x32333E0
	0x03E83370 ADRP X22, 0x272000
	0x03E83374 LDR X21, [X19 + 0x10]
	0x03E83378 LDR X22, [X22 + 0xA28]
	0x03E8337C CBZ X21, 0x3E833C0
	0x03E83380 ADRP X8, 0x2E9000
	0x03E83384 LDR X8, [X8 + 0x368]
	0x03E83388 ADRP X24, 0x2E9000
	0x03E8338C LDR X0, [X8]
	0x03E83390 LDR W8, [X0 + 0xE0]
	0x03E83394 LDR X24, [X24 + 0xE00]
	0x03E83398 CBNZ W8, 0x3E833A0
	0x03E8339C BL 0x1C16DFC
	0x03E833A0 MOV X0, X21
	0x03E833A4 MOV X1, X31
	0x03E833A8 BL 0x3E98338
	0x03E833AC LDR X1, [X24]
	0x03E833B0 MOV X2, X0
	0x03E833B4 MOV X0, X20
	0x03E833B8 MOV X3, X31
	0x03E833BC BL 0x3234224
	0x03E833C0 LDR X0, [X22]
	0x03E833C4 LDR X21, [X19 + 0x18]
	0x03E833C8 LDR W8, [X0 + 0xE0]
	0x03E833CC CBNZ W8, 0x3E833D4
	0x03E833D0 BL 0x1C16DFC
	0x03E833D4 MOV X0, X21

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0x566000
	009 Move X24, 0x273000
	010 Move W8, [X23+3552]
	011 Move X24, [X24+632]
	012 Move X19, X3
	013 Move X20, X2
	014 Move X21, X1
	015 Move X22, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {25}
	020 Move X0, 0x273000
	021 Move X0, [X0+632]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X23+3552], W8
	025 Move X8, [X24]
	026 Move X0, X22
	027 Move X1, X21
	028 Move X2, X20
	029 Move X8, [X8+184]
	030 Move X3, X19
	031 Move X20, [X31+48]
	032 Move X19, [X31+56]
	033 Move X22, [X31+32]
	034 Move X21, [X31+40]
	035 Move X4, [X8]
	036 Move X24, [X31+16]
	037 Move X23, [X31+24]
	038 Move X30, [X31+64]
	039 Call Cookie..ctor, X0, X1, X2, X3, X4
	040 Return 

Method: System.Void .ctor(System.String name, System.String value, System.String path, System.String domain)

Disassembly:
	0x03E83090 LDR X1, [X8]
	0x03E83094 BL 0x32333E0
	0x03E83098 LDR X8, [X20]
	0x03E8309C MOV X0, X20
	0x03E830A0 LDP X9, X1, [X8 + 0x168]
	0x03E830A4 BLR X9
	0x03E830A8 LDP X20, X19, [X31 + 0x30]
	0x03E830AC LDP X22, X21, [X31 + 0x20]
	0x03E830B0 LDP X30, X23, [X31 + 0x10]
	0x03E830B4 ADD X31, X31, 0x40
	0x03E830B8 RET
	0x03E830BC BL 0x1C16F20
	0x03E830C0 STR X30, [X31 - 0x40]!
	0x03E830C4 STP X24, X23, [X31 + 0x10]
	0x03E830C8 STP X22, X21, [X31 + 0x20]
	0x03E830CC STP X20, X19, [X31 + 0x30]
	0x03E830D0 ADRP X20, 0x565000
	0x03E830D4 ADRP X21, 0x270000
	0x03E830D8 ADRP X24, 0x270000
	0x03E830DC LDRB W8, [X20 + 0xDEE]
	0x03E830E0 LDR X21, [X21 + 0x8F0]
	0x03E830E4 LDR X24, [X24 + 0x758]
	0x03E830E8 MOV X19, X0
	0x03E830EC TBNZ X8, 0x0, 0x3E831C4
	0x03E830F0 ADRP X0, 0x271000
	0x03E830F4 LDR X0, [X0 + 0x9F0]
	0x03E830F8 BL 0x1C16CF4
	0x03E830FC ADRP X0, 0x277000
	0x03E83100 LDR X0, [X0 + 0x248]
	0x03E83104 BL 0x1C16CF4
	0x03E83108 ADRP X0, 0x2E9000
	0x03E8310C LDR X0, [X0 + 0x368]
	0x03E83110 BL 0x1C16CF4
	0x03E83114 ADRP X0, 0x270000
	0x03E83118 LDR X0, [X0 + 0x758]
	0x03E8311C BL 0x1C16CF4
	0x03E83120 ADRP X0, 0x270000
	0x03E83124 LDR X0, [X0 + 0x8F0]
	0x03E83128 BL 0x1C16CF4
	0x03E8312C ADRP X0, 0x272000
	0x03E83130 LDR X0, [X0 + 0xA28]
	0x03E83134 BL 0x1C16CF4
	0x03E83138 ADRP X0, 0x2E9000
	0x03E8313C LDR X0, [X0 + 0xDF8]
	0x03E83140 BL 0x1C16CF4
	0x03E83144 ADRP X0, 0x2E9000
	0x03E83148 LDR X0, [X0 + 0xE00]
	0x03E8314C BL 0x1C16CF4
	0x03E83150 ADRP X0, 0x2E9000
	0x03E83154 LDR X0, [X0 + 0xDD0]
	0x03E83158 BL 0x1C16CF4
	0x03E8315C ADRP X0, 0x2E9000
	0x03E83160 LDR X0, [X0 + 0xE08]
	0x03E83164 BL 0x1C16CF4
	0x03E83168 ADRP X0, 0x2E9000
	0x03E8316C LDR X0, [X0 + 0xE10]
	0x03E83170 BL 0x1C16CF4
	0x03E83174 ADRP X0, 0x2E9000
	0x03E83178 LDR X0, [X0 + 0xE18]
	0x03E8317C BL 0x1C16CF4
	0x03E83180 ADRP X0, 0x2E9000
	0x03E83184 LDR X0, [X0 + 0xE20]
	0x03E83188 BL 0x1C16CF4
	0x03E8318C ADRP X0, 0x2E9000
	0x03E83190 LDR X0, [X0 + 0xE28]
	0x03E83194 BL 0x1C16CF4
	0x03E83198 ADRP X0, 0x2E9000
	0x03E8319C LDR X0, [X0 + 0xDE8]
	0x03E831A0 BL 0x1C16CF4
	0x03E831A4 ADRP X0, 0x2E9000
	0x03E831A8 LDR X0, [X0 + 0xDF0]
	0x03E831AC BL 0x1C16CF4
	0x03E831B0 ADRP X0, 0x2E9000
	0x03E831B4 LDR X0, [X0 + 0xE30]
	0x03E831B8 BL 0x1C16CF4
	0x03E831BC MOVZ W8, 0x1
	0x03E831C0 STRB W8, [X20 + 0xDEE]
	0x03E831C4 LDR X0, [X21]
	0x03E831C8 BL 0x1C16F10
	0x03E831CC MOVZ W1, 0x40
	0x03E831D0 MOV X2, X31
	0x03E831D4 MOV X20, X0
	0x03E831D8 BL 0x3231B28
	0x03E831DC LDR W8, [X19 + 0x80]
	0x03E831E0 LDR X0, [X24]
	0x03E831E4 LDR X21, [X19 + 0x40]
	0x03E831E8 LDR X22, [X19 + 0x78]
	0x03E831EC ADD X1, X31, 0xC
	0x03E831F0 STR W8, [X31 + 0xC]
	0x03E831F4 BL 0x1C16E04
	0x03E831F8 CBZ X20, 0x3E834C4
	0x03E831FC ADRP X8, 0x2E9000
	0x03E83200 LDR X8, [X8 + 0xE20]
	0x03E83204 ADRP X23, 0x271000
	0x03E83208 MOV X4, X0
	0x03E8320C MOV X0, X20
	0x03E83210 LDR X1, [X8]
	0x03E83214 LDR X23, [X23 + 0x9F0]
	0x03E83218 MOV X2, X21
	0x03E8321C MOV X3, X22
	0x03E83220 MOV X5, X31
	0x03E83224 BL 0x3234DF4
	0x03E83228 LDR X0, [X23]
	0x03E8322C LDR X21, [X19 + 0x30]
	0x03E83230 LDR W8, [X0 + 0xE0]
	0x03E83234 CBNZ W8, 0x3E83240
	0x03E83238 BL 0x1C16DFC
	0x03E8323C LDR X0, [X23]
	0x03E83240 LDR X8, [X0 + 0xB8]
	0x03E83244 ADRP X23, 0x277000
	0x03E83248 MOV X0, X21
	0x03E8324C MOV X2, X31
	0x03E83250 LDR X1, [X8 + 0x10]
	0x03E83254 LDR X23, [X23 + 0x248]
	0x03E83258 BL 0x33630E0
	0x03E8325C TBZ X0, 0x0, 0x3E83298
	0x03E83260 MOV X0, X19
	0x03E83264 BL 0x3E82418
	0x03E83268 LDR X8, [X24]
	0x03E8326C STR W0, [X31 + 0x8]
	0x03E83270 ADD X1, X31, 0x8
	0x03E83274 MOV X0, X8
	0x03E83278 BL 0x1C16E04
	0x03E8327C ADRP X8, 0x2E9000
	0x03E83280 LDR X8, [X8 + 0xE10]
	0x03E83284 MOV X2, X0
	0x03E83288 MOV X0, X20
	0x03E8328C MOV X3, X31
	0x03E83290 LDR X1, [X8]
	0x03E83294 BL 0x3234224
	0x03E83298 LDR X0, [X23]
	0x03E8329C LDR X21, [X19 + 0x48]
	0x03E832A0 LDR W8, [X0 + 0xE0]
	0x03E832A4 CBNZ W8, 0x3E832AC
	0x03E832A8 BL 0x1C16DFC
	0x03E832AC MOV X0, X21
	0x03E832B0 MOV X1, X31
	0x03E832B4 BL 0x3E6C1B0
	0x03E832B8 TBNZ X0, 0x0, 0x3E832D8
	0x03E832BC ADRP X8, 0x2E9000
	0x03E832C0 LDR X2, [X19 + 0x48]
	0x03E832C4 LDR X8, [X8 + 0xDE8]
	0x03E832C8 MOV X0, X20
	0x03E832CC MOV X3, X31
	0x03E832D0 LDR X1, [X8]
	0x03E832D4 BL 0x3234224
	0x03E832D8 LDR X0, [X23]
	0x03E832DC LDR X21, [X19 + 0x28]
	0x03E832E0 LDR W8, [X0 + 0xE0]
	0x03E832E4 CBNZ W8, 0x3E832EC
	0x03E832E8 BL 0x1C16DFC
	0x03E832EC MOV X0, X21
	0x03E832F0 MOV X1, X31
	0x03E832F4 BL 0x3E6C1B0
	0x03E832F8 TBNZ X0, 0x0, 0x3E83318
	0x03E832FC ADRP X8, 0x2E9000
	0x03E83300 LDR X2, [X19 + 0x28]
	0x03E83304 LDR X8, [X8 + 0xDF0]
	0x03E83308 MOV X0, X20
	0x03E8330C MOV X3, X31
	0x03E83310 LDR X1, [X8]
	0x03E83314 BL 0x3234224
	0x03E83318 LDR X0, [X19 + 0x50]
	0x03E8331C CBZ X0, 0x3E83370
	0x03E83320 ADRP X8, 0x2E9000
	0x03E83324 LDR X8, [X8 + 0xE30]
	0x03E83328 MOV X2, X31
	0x03E8332C LDR X1, [X8]
	0x03E83330 BL 0x3226EF8
	0x03E83334 TBZ X0, 0x0, 0x3E83358
	0x03E83338 ADRP X8, 0x2E9000
	0x03E8333C LDR X2, [X19 + 0x50]
	0x03E83340 LDR X8, [X8 + 0xDF8]
	0x03E83344 MOV X0, X20
	0x03E83348 MOV X3, X31
	0x03E8334C LDR X1, [X8]
	0x03E83350 BL 0x3234224
	0x03E83354 B 0x3E83370
	0x03E83358 ADRP X8, 0x2E9000
	0x03E8335C LDR X8, [X8 + 0xE18]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X24, 0x566000
	010 Move W8, [X24+3553]
	011 Move X19, X4
	012 Move X21, X3
	013 Move X22, X2
	014 Move X20, X1
	015 Move X23, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {31}
	020 Move X0, 0x2EA000
	021 Move X0, [X0+3472]
	022 Call 0x1C17CF4
	023 Move X0, 0x278000
	024 Move X0, [X0+584]
	025 Call 0x1C17CF4
	026 Move X0, 0x273000
	027 Move X0, [X0+632]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X24+3553], W8
	031 Move X0, X23
	032 Move X1, X31
	033 Call Object..ctor, X0
	034 Compare X20, 0
	035 JumpIfEqual {139}
	036 Move W8, [X20+16]
	037 Compare W8, 0
	038 JumpIfEqual {151}
	039 Move X0, X20
	040 Move W1, W31
	041 Move X2, X31
	042 Call String.get_Chars, X0, X1
	043 And W8, W0, 0xFFFF
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Move X25, 0x278000
	046 Move X25, [X25+584]
	047 Move X0, [X25]
	048 Move W8, [X0+224]
	049 Compare W8, 0
	050 JumpIfNotEqual {52}
	051 Call 0x1C17DFC
	052 Move X0, X20
	053 Move X1, X31
	054 Call Ext.IsToken, X0
	055 Move TEMP, X0
	056 And TEMP, TEMP, 1
	057 Compare TEMP, 1
	058 JumpIfNotEqual {176}
	059 Move X24, 0x2EA000
	060 Move X24, [X24+3472]
	061 Compare X22, 0
	062 JumpIfNotEqual {68}
	063 Move X8, 0x273000
	064 Move X8, [X8+632]
	065 Move X8, [X8]
	066 Move X8, [X8+184]
	067 Move X22, [X8]
	068 Move X0, [X24]
	069 Move W8, [X0+224]
	070 Compare W8, 0
	071 JumpIfNotEqual {74}
	072 Call 0x1C17DFC
	073 Move X0, [X24]
	074 Move X8, [X25]
	075 Move X9, [X0+184]
	076 Move W10, [X8+224]
	077 Move X24, [X9+8]
	078 Compare W10, 0
	079 JumpIfNotEqual {82}
	080 Move X0, X8
	081 Call 0x1C17DFC
	082 Move X0, X22
	083 Move X1, X24
	084 Move X2, X31
	085 Call Ext.Contains, X0, X1
	086 Move TEMP, X0
	087 And TEMP, TEMP, 1
	088 Compare TEMP, 1
	089 JumpIfNotEqual {103}
	090 Move X0, [X25]
	091 Move W8, [X0+224]
	092 Compare W8, 0
	093 JumpIfNotEqual {95}
	094 Call 0x1C17DFC
	095 Move W1, 34
	096 Move X0, X22
	097 Move X2, X31
	098 Call Ext.IsEnclosedIn, X0, X1
	099 Move TEMP, X0
	100 And TEMP, TEMP, 1
	101 Compare TEMP, 1
	102 JumpIfNotEqual {187}
	103 Compare X21, 0
	104 JumpIfEqual {124}
	105 Compare X19, 0
	106 JumpIfEqual {131}
	107 Compare X23, 0
	108 JumpIfEqual {138}
	109 Move X0, X23
	110 Move X1, X20
	111 Move X2, X22
	112 Move X3, X21
	113 Move X4, X19
	114 Move X20, [X31+48]
	115 Move X19, [X31+56]
	116 Move X22, [X31+32]
	117 Move X21, [X31+40]
	118 Move X24, [X31+16]
	119 Move X23, [X31+24]
	120 Move X30, [X31+64]
	121 Move X25, [X31+72]
	122 Call Cookie.init, X0, X1, X2, X3, X4
	123 Return 
	124 Move X8, 0x273000
	125 Move X8, [X8+632]
	126 Move X8, [X8]
	127 Move X8, [X8+184]
	128 Move X21, [X8]
	129 Compare X19, 0
	130 JumpIfNotEqual {107}
	131 Move X8, 0x273000
	132 Move X8, [X8+632]
	133 Move X8, [X8]
	134 Move X8, [X8+184]
	135 Move X19, [X8]
	136 Compare X23, 0
	137 JumpIfNotEqual {109}
	138 Call 0x1C17F20
	139 Move X0, 0x276000
	140 Move X0, [X0+1320]
	141 Call 0x1C17D08
	142 Call 0x1C17F10
	143 Move X19, X0
	144 Move X0, 0x279000
	145 Move X0, [X0+1416]
	146 Call 0x1C17D08
	147 Move X1, X0
	148 Move X0, X19
	149 Move X2, X31
	150 Call ArgumentNullException..ctor, X0, X1
	151 Move X0, 0x279000
	152 Move X0, [X0+1400]
	153 Call 0x1C17D08
	154 Call 0x1C17F10
	155 Move X19, X0
	156 Move X0, 0x29A000
	157 Move X0, [X0+2488]
	158 Call 0x1C17D08
	159 Move X20, X0
	160 Move X0, 0x279000
	161 Move X0, [X0+1416]
	162 Call 0x1C17D08
	163 Move X2, X0
	164 Move X0, X19
	165 Move X1, X20
	166 Move X3, X31
	167 Call ArgumentException..ctor, X0, X1, X2
	168 Move X0, 0x2EA000
	169 Move X0, [X0+3480]
	170 Call 0x1C17D08
	171 Move X1, X0
	172 Move X0, X19
	173 Call 0x1C17DEC
	174 Move X0, 0x2EA000
	175 Move X0, [X0+3488]
	176 Move X0, 0x2EA000
	177 Move X0, [X0+2480]
	178 Call 0x1C17D08
	179 Move X19, X0
	180 Move X0, 0x279000
	181 Move X0, [X0+1400]
	182 Call 0x1C17D08
	183 Call 0x1C17F10
	184 Move X20, X0
	185 Move X0, 0x279000
	186 Move X0, [X0+1416]
	187 Move X0, 0x2EA000
	188 Move X0, [X0+3496]
	189 Call 0x1C17D08
	190 Move X19, X0
	191 Move X0, 0x279000
	192 Move X0, [X0+1400]
	193 Call 0x1C17D08
	194 Call 0x1C17F10
	195 Move X20, X0
	196 Move X0, 0x27B000
	197 Move X0, [X0+3784]
	198 Call 0x1C17D08
	199 Move X2, X0
	200 Move X0, X20
	201 Move X1, X19
	202 Move X3, X31
	203 Call ArgumentException..ctor, X0, X1, X2
	204 Move X0, 0x2EA000
	205 Move X0, [X0+3480]
	206 Call 0x1C17D08
	207 Move X1, X0
	208 Move X0, X20
	209 Call 0x1C17DEC

Method: System.Boolean get_ExactDomain()

Disassembly:
	0x03E833D8 MOV X1, X31
	0x03E833DC MOV X2, X31
	0x03E833E0 BL 0x361A090
	0x03E833E4 TBZ X0, 0x0, 0x3E83460
	0x03E833E8 LDR X0, [X19 + 0x18]
	0x03E833EC CBZ X0, 0x3E834C4
	0x03E833F0 MOV X1, X31
	0x03E833F4 BL 0x361A77C
	0x03E833F8 LDR X8, [X23]
	0x03E833FC MOV X21, X0
	0x03E83400 LDR W9, [X8 + 0xE0]
	0x03E83404 CBNZ W9, 0x3E83410
	0x03E83408 MOV X0, X8
	0x03E8340C BL 0x1C16DFC
	0x03E83410 MOV X0, X21
	0x03E83414 MOV X1, X31

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+40]
	003 Compare X0, 0
	004 JumpIfEqual {17}
	005 Move W8, [X0+16]
	006 Compare W8, 0
	007 JumpIfEqual {14}
	008 Move W1, W31
	009 Move X2, X31
	010 Call String.get_Chars, X0, X1
	011 And W8, W0, 0xFFFF
	012 NotImplemented "Instruction CMP not yet implemented."
	013 NotImplemented "Instruction CSET not yet implemented."
	014 Move W0, 1
	015 Move X30, [X31+16]
	016 Return X0
	017 Call 0x1C17F20

Method: System.Int32 get_MaxAge()

Disassembly:
	0x03E83418 BL 0x3E69764
	0x03E8341C ADRP X8, 0x2E9000
	0x03E83420 LDR X8, [X8 + 0xE28]
	0x03E83424 LDR X22, [X8]
	0x03E83428 TBNZ X0, 0x0, 0x3E8344C
	0x03E8342C LDR X0, [X23]
	0x03E83430 LDR W8, [X0 + 0xE0]
	0x03E83434 CBNZ W8, 0x3E8343C
	0x03E83438 BL 0x1C16DFC
	0x03E8343C MOV X0, X21
	0x03E83440 MOV X1, X31
	0x03E83444 BL 0x3E699CC
	0x03E83448 MOV X21, X0
	0x03E8344C MOV X0, X20
	0x03E83450 MOV X1, X22
	0x03E83454 MOV X2, X21
	0x03E83458 MOV X3, X31
	0x03E8345C BL 0x3234224
	0x03E83460 LDRB W8, [X19 + 0x20]
	0x03E83464 CBZ W8, 0x3E83480
	0x03E83468 ADRP X8, 0x2E9000
	0x03E8346C LDR X8, [X8 + 0xE08]
	0x03E83470 MOV X0, X20
	0x03E83474 MOV X2, X31
	0x03E83478 LDR X1, [X8]
	0x03E8347C BL 0x32333E0
	0x03E83480 LDRB W8, [X19 + 0x68]
	0x03E83484 CBZ W8, 0x3E834A0
	0x03E83488 ADRP X8, 0x2E9000
	0x03E8348C LDR X8, [X8 + 0xDD0]
	0x03E83490 MOV X0, X20
	0x03E83494 MOV X2, X31
	0x03E83498 LDR X1, [X8]
	0x03E8349C BL 0x32333E0
	0x03E834A0 LDR X8, [X20]
	0x03E834A4 MOV X0, X20
	0x03E834A8 LDP X9, X1, [X8 + 0x168]
	0x03E834AC BLR X9
	0x03E834B0 LDP X20, X19, [X31 + 0x30]
	0x03E834B4 LDP X22, X21, [X31 + 0x20]
	0x03E834B8 LDP X24, X23, [X31 + 0x10]
	0x03E834BC LDR X30, [X31], #0x40
	0x03E834C0 RET
	0x03E834C4 BL 0x1C16F20
	0x03E834C8 STR X30, [X31 - 0x20]!
	0x03E834CC STP X20, X19, [X31 + 0x10]
	0x03E834D0 CBZ X1, 0x3E83554
	0x03E834D4 MOV X20, X0
	0x03E834D8 LDR X0, [X0 + 0x40]
	0x03E834DC CBZ X0, 0x3E83554
	0x03E834E0 MOV X19, X1
	0x03E834E4 LDR X1, [X1 + 0x40]
	0x03E834E8 MOVZ W2, 0x3
	0x03E834EC MOV X3, X31
	0x03E834F0 BL 0x322697C
	0x03E834F4 TBZ X0, 0x0, 0x3E83544
	0x03E834F8 LDR X0, [X20 + 0x48]
	0x03E834FC CBZ X0, 0x3E83554
	0x03E83500 LDR X1, [X19 + 0x48]
	0x03E83504 MOVZ W2, 0x2
	0x03E83508 MOV X3, X31
	0x03E8350C BL 0x322697C
	0x03E83510 TBZ X0, 0x0, 0x3E83544
	0x03E83514 LDR X0, [X20 + 0x28]
	0x03E83518 CBZ X0, 0x3E83554
	0x03E8351C LDR X1, [X19 + 0x28]
	0x03E83520 MOVZ W2, 0x3
	0x03E83524 MOV X3, X31
	0x03E83528 BL 0x322697C
	0x03E8352C TBZ X0, 0x0, 0x3E83544
	0x03E83530 LDR W8, [X20 + 0x80]
	0x03E83534 LDR W9, [X19 + 0x80]
	0x03E83538 CMP W8, W9
	0x03E8353C CSET W0, EQ
	0x03E83540 B 0x3E83548
	0x03E83544 MOV W0, W31
	0x03E83548 LDP X20, X19, [X31 + 0x10]
	0x03E8354C LDR X30, [X31], #0x20
	0x03E83550 RET
	0x03E83554 BL 0x1C16F20
	0x03E83558 STR X30, [X31 - 0x20]!
	0x03E8355C STP X20, X19, [X31 + 0x10]
	0x03E83560 CBZ X1, 0x3E835D4
	0x03E83564 MOV X20, X0
	0x03E83568 LDR X0, [X0 + 0x40]
	0x03E8356C CBZ X0, 0x3E835D4
	0x03E83570 MOV X19, X1
	0x03E83574 LDR X1, [X1 + 0x40]
	0x03E83578 MOVZ W2, 0x3
	0x03E8357C MOV X3, X31
	0x03E83580 BL 0x322697C
	0x03E83584 TBZ X0, 0x0, 0x3E835C4
	0x03E83588 LDR X0, [X20 + 0x48]
	0x03E8358C CBZ X0, 0x3E835D4

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x566000
	007 Move X21, 0x272000
	008 Move W8, [X20+3554]
	009 Move X21, [X21+2544]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x272000
	016 Move X0, [X0+2544]
	017 Call 0x1C17CF4
	018 Move X0, 0x273000
	019 Move X0, [X0+1392]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X20+3554], W8
	023 Move X0, [X21]
	024 Move X20, [X19+48]
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {30}
	028 Call 0x1C17DFC
	029 Move X0, [X21]
	030 Move X8, [X0+184]
	031 Move X0, X20
	032 Move X2, X31
	033 Move X1, [X8+16]
	034 Call DateTime.op_Equality, X0, X1
	035 Move TEMP, X0
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfEqual {104}
	039 Move X0, [X21]
	040 Add X20, X19, 48
	041 Move W8, [X0+224]
	042 Compare W8, 0
	043 JumpIfNotEqual {45}
	044 Call 0x1C17DFC
	045 Move X0, X20
	046 Move X1, X31
	047 Call DateTime.get_Kind, X0
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Move X19, [X19+48]
	050 Move X0, [X21]
	051 Move W8, [X0+224]
	052 Compare W8, 0
	053 JumpIfNotEqual {55}
	054 Call 0x1C17DFC
	055 Move X0, X20
	056 Move X1, X31
	057 Call DateTime.ToLocalTime, X0
	058 Move X19, X0
	059 Move X0, [X21]
	060 Move W8, [X0+224]
	061 Compare W8, 0
	062 JumpIfNotEqual {64}
	063 Call 0x1C17DFC
	064 Move X0, X31
	065 Call DateTime.get_Now
	066 Move X1, X0
	067 Move X0, X19
	068 Move X2, X31
	069 Call DateTime.op_Subtraction, X0, X1
	070 Move X20, 0x273000
	071 Move X20, [X20+1392]
	072 Move [X31+8], X0
	073 Move X19, X0
	074 Move X8, [X20]
	075 Move W9, [X8+224]
	076 Compare W9, 0
	077 JumpIfNotEqual {81}
	078 Move X0, X8
	079 Call 0x1C17DFC
	080 Move X8, [X20]
	081 Move X8, [X8+184]
	082 Move X0, X19
	083 Move X2, X31
	084 Move X1, [X8]
	085 Call TimeSpan.op_GreaterThan, X0, X1
	086 Move TEMP, X0
	087 And TEMP, TEMP, 1
	088 Compare TEMP, 1
	089 JumpIfNotEqual {104}
	090 Move X0, [X20]
	091 Move W8, [X0+224]
	092 Compare W8, 0
	093 JumpIfNotEqual {95}
	094 Call 0x1C17DFC
	095 Add X0, X31, 8
	096 Move X1, X31
	097 Call TimeSpan.get_TotalSeconds, X0
	098 Move X8, 0x7FF00000
	099 Move D1, X8
	100 NotImplemented "Instruction FCVTZS not yet implemented."
	101 NotImplemented "Instruction FCMP not yet implemented."
	102 Move W8, 0x80000000
	103 NotImplemented "Instruction CSEL not yet implemented."
	104 Move W0, W31
	105 Move X20, [X31+32]
	106 Move X19, [X31+40]
	107 Move X30, [X31+16]
	108 Move X21, [X31+24]
	109 Add X31, X31, 48
	110 Return X0

Method: System.Void set_MaxAge(System.Int32 value)

Disassembly:
	0x03E83590 LDR X1, [X19 + 0x48]
	0x03E83594 MOVZ W2, 0x2
	0x03E83598 MOV X3, X31
	0x03E8359C BL 0x322697C
	0x03E835A0 TBZ X0, 0x0, 0x3E835C4
	0x03E835A4 LDR X0, [X20 + 0x28]
	0x03E835A8 CBZ X0, 0x3E835D4
	0x03E835AC LDR X1, [X19 + 0x28]
	0x03E835B0 LDP X20, X19, [X31 + 0x10]
	0x03E835B4 MOVZ W2, 0x3
	0x03E835B8 MOV X3, X31
	0x03E835BC LDR X30, [X31], #0x20
	0x03E835C0 B 0x322697C
	0x03E835C4 LDP X20, X19, [X31 + 0x10]
	0x03E835C8 MOV W0, W31
	0x03E835CC LDR X30, [X31], #0x20
	0x03E835D0 RET
	0x03E835D4 BL 0x1C16F20
	0x03E835D8 SUB X31, X31, 0x40
	0x03E835DC STP X30, X23, [X31 + 0x10]
	0x03E835E0 STP X22, X21, [X31 + 0x20]
	0x03E835E4 STP X20, X19, [X31 + 0x30]
	0x03E835E8 ADRP X21, 0x565000
	0x03E835EC LDRB W8, [X21 + 0xDF0]
	0x03E835F0 MOV X20, X1
	0x03E835F4 MOV X19, X0
	0x03E835F8 TBNZ X8, 0x0, 0x3E836A0
	0x03E835FC ADRP X0, 0x277000
	0x03E83600 LDR X0, [X0 + 0x248]
	0x03E83604 BL 0x1C16CF4
	0x03E83608 ADRP X0, 0x270000
	0x03E8360C LDR X0, [X0 + 0x758]
	0x03E83610 BL 0x1C16CF4
	0x03E83614 ADRP X0, 0x270000
	0x03E83618 LDR X0, [X0 + 0x8F0]
	0x03E8361C BL 0x1C16CF4

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x566000
	007 Move X21, 0x272000
	008 Move W8, [X22+3555]
	009 Move X21, [X21+2544]
	010 Move W20, W1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x272000
	017 Move X0, [X0+2544]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+3555], W8
	021 Move X0, [X21]
	022 Move [X31+8], X31
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 Move X0, X31
	028 Call DateTime.get_Now
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move [X31+8], X0
	031 NotImplemented "Instruction SCVTF not yet implemented."
	032 Add X0, X31, 8
	033 Move X1, X31
	034 Call DateTime.AddSeconds, X0, V0
	035 Compare X19, 0
	036 JumpIfEqual {44}
	037 Move [X19+48], X0
	038 Move X20, [X31+32]
	039 Move X19, [X31+40]
	040 Move X22, [X31+16]
	041 Move X21, [X31+24]
	042 Move X30, [X31+48]
	043 Return 
	044 Call 0x1C17F20

Method: System.Int32[] get_Ports()

Disassembly:
	0x03E83620 ADRP X0, 0x272000
	0x03E83624 LDR X0, [X0 + 0x278]
	0x03E83628 BL 0x1C16CF4
	0x03E8362C ADRP X0, 0x272000
	0x03E83630 LDR X0, [X0 + 0xA28]
	0x03E83634 BL 0x1C16CF4
	0x03E83638 ADRP X0, 0x270000
	0x03E8363C LDR X0, [X0 + 0xEF8]
	0x03E83640 BL 0x1C16CF4
	0x03E83644 ADRP X0, 0x2E9000
	0x03E83648 LDR X0, [X0 + 0xE38]
	0x03E8364C BL 0x1C16CF4
	0x03E83650 ADRP X0, 0x2E9000
	0x03E83654 LDR X0, [X0 + 0xE40]
	0x03E83658 BL 0x1C16CF4
	0x03E8365C ADRP X0, 0x2E9000
	0x03E83660 LDR X0, [X0 + 0xE48]
	0x03E83664 BL 0x1C16CF4
	0x03E83668 ADRP X0, 0x2E9000
	0x03E8366C LDR X0, [X0 + 0xE50]
	0x03E83670 BL 0x1C16CF4
	0x03E83674 ADRP X0, 0x2E9000
	0x03E83678 LDR X0, [X0 + 0xE58]
	0x03E8367C BL 0x1C16CF4
	0x03E83680 ADRP X0, 0x2E9000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x566000
	005 Move W8, [X20+3556]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x2EA000
	012 Move X0, [X0+3472]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+3556], W8
	016 Move X0, [X19+88]
	017 Compare X0, 0
	018 JumpIfNotEqual {29}
	019 Move X19, 0x2EA000
	020 Move X19, [X19+3472]
	021 Move X0, [X19]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {27}
	025 Call 0x1C17DFC
	026 Move X0, [X19]
	027 Move X8, [X0+184]
	028 Move X0, [X8]
	029 Move X20, [X31+16]
	030 Move X19, [X31+24]
	031 Move X30, [X31+32]
	032 Return X0

Method: System.String get_SameSite()

Disassembly:
	0x03E83684 LDR X0, [X0 + 0xE60]
	0x03E83688 BL 0x1C16CF4

ISIL:
	001 Move X0, [X0+96]
	002 Return X0

Method: System.Void set_SameSite(System.String value)

Disassembly:
	0x03E8368C ADRP X0, 0x2E9000
	0x03E83690 LDR X0, [X0 + 0xE30]

ISIL:
	001 Move [X0+96], X1
	002 Return 

Method: System.String get_Comment()

Disassembly:
	0x03E83694 BL 0x1C16CF4
	0x03E83698 MOVZ W8, 0x1

ISIL:
	001 Move X0, [X0+16]
	002 Return X0

Method: System.Void set_Comment(System.String value)

Disassembly:
	0x03E8369C STRB W8, [X21 + 0xDF0]
	0x03E836A0 LDR X1, [X19 + 0x40]

ISIL:
	001 Move [X0+16], X1
	002 Return 

Method: System.Uri get_CommentUri()

Disassembly:
	0x03E836A4 CBZ X1, 0x3E83920
	0x03E836A8 LDR W8, [X1 + 0x10]

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Void set_CommentUri(System.Uri value)

Disassembly:
	0x03E836AC CBZ W8, 0x3E837A0
	0x03E836B0 LDR W8, [X19 + 0x80]

ISIL:
	001 Move [X0+24], X1
	002 Return 

Method: System.Boolean get_Discard()

Disassembly:
	0x03E836B4 CBZ W8, 0x3E837B8
	0x03E836B8 ADRP X8, 0x270000

ISIL:
	001 Move W0, [X0+32]
	002 Return X0

Method: System.Void set_Discard(System.Boolean value)

Disassembly:
	0x03E836BC LDR X8, [X8 + 0x8F0]
	0x03E836C0 LDR X0, [X8]
	0x03E836C4 BL 0x1C16F10

ISIL:
	001 And W8, W1, 1
	002 Move [X0+32], W8
	003 Return 

Method: System.String get_Domain()

Disassembly:
	0x03E836C8 MOVZ W1, 0x40
	0x03E836CC MOV X2, X31

ISIL:
	001 Move X0, [X0+40]
	002 Return X0

Method: System.Void set_Domain(System.String value)

Disassembly:
	0x03E836D0 MOV X21, X0
	0x03E836D4 BL 0x3231B28
	0x03E836D8 ADRP X9, 0x270000
	0x03E836DC LDR W8, [X19 + 0x80]
	0x03E836E0 LDR X9, [X9 + 0x758]
	0x03E836E4 ADD X1, X31, 0xC
	0x03E836E8 STR W8, [X31 + 0xC]
	0x03E836EC LDR X0, [X9]
	0x03E836F0 BL 0x1C16E04
	0x03E836F4 CBZ X21, 0x3E83920
	0x03E836F8 ADRP X8, 0x2E9000
	0x03E836FC LDR X4, [X19 + 0x78]
	0x03E83700 LDR X3, [X19 + 0x40]
	0x03E83704 LDR X8, [X8 + 0xE50]
	0x03E83708 MOV X2, X0
	0x03E8370C MOV X0, X21
	0x03E83710 MOV X5, X31
	0x03E83714 LDR X1, [X8]
	0x03E83718 BL 0x3234DF4
	0x03E8371C ADRP X23, 0x277000
	0x03E83720 LDR X23, [X23 + 0x248]
	0x03E83724 LDR X22, [X19 + 0x48]
	0x03E83728 LDR X0, [X23]
	0x03E8372C LDR W8, [X0 + 0xE0]
	0x03E83730 CBNZ W8, 0x3E83738
	0x03E83734 BL 0x1C16DFC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x566000
	006 Move W8, [X21+3557]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfNotEqual {23}
	013 Compare X20, 0
	014 JumpIfEqual {30}
	015 Compare X19, 0
	016 JumpIfEqual {37}
	017 Move [X19+40], X20
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 Return 
	023 Move X0, 0x273000
	024 Move X0, [X0+632]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X21+3557], W8
	028 Compare X20, 0
	029 JumpIfNotEqual {15}
	030 Move X8, 0x273000
	031 Move X8, [X8+632]
	032 Move X8, [X8]
	033 Move X8, [X8+184]
	034 Move X20, [X8]
	035 Compare X19, 0
	036 JumpIfNotEqual {17}
	037 Call 0x1C17F20

Method: System.Boolean get_Expired()

Disassembly:
	0x03E81030 LDR X0, [X0 + 0x278]
	0x03E81034 BL 0x1C16CF4
	0x03E81038 MOVZ W8, 0x1
	0x03E8103C STRB W8, [X20 + 0xDF1]
	0x03E81040 LDR X8, [X19 + 0x40]
	0x03E81044 CBZ X8, 0x3E81098
	0x03E81048 LDR W8, [X8 + 0x10]
	0x03E8104C CBZ W8, 0x3E81068
	0x03E81050 LDR W8, [X19 + 0x80]
	0x03E81054 CBZ W8, 0x3E81088
	0x03E81058 MOV X0, X19
	0x03E8105C LDP X20, X19, [X31 + 0x10]
	0x03E81060 LDR X30, [X31], #0x20
	0x03E81064 B 0x3E830C0
	0x03E81068 ADRP X8, 0x274000
	0x03E8106C LDR X8, [X8 + 0x278]
	0x03E81070 LDP X20, X19, [X31 + 0x10]
	0x03E81074 LDR X8, [X8]
	0x03E81078 LDR X8, [X8 + 0xB8]
	0x03E8107C LDR X0, [X8]
	0x03E81080 LDR X30, [X31], #0x20
	0x03E81084 RET
	0x03E81088 MOV X0, X19
	0x03E8108C LDP X20, X19, [X31 + 0x10]
	0x03E81090 LDR X30, [X31], #0x20
	0x03E81094 B 0x3E82DC0
	0x03E81098 BL 0x1C16F20
	0x03E8109C STP X30, X27, [X31 - 0x50]!
	0x03E810A0 STP X26, X25, [X31 + 0x10]
	0x03E810A4 STP X24, X23, [X31 + 0x20]
	0x03E810A8 STP X22, X21, [X31 + 0x30]
	0x03E810AC STP X20, X19, [X31 + 0x40]
	0x03E810B0 ADRP X20, 0x567000
	0x03E810B4 ADRP X22, 0x272000
	0x03E810B8 ADRP X21, 0x272000
	0x03E810BC LDRB W8, [X20 + 0xDD4]
	0x03E810C0 LDR X22, [X22 + 0x8F0]
	0x03E810C4 LDR X21, [X21 + 0x9D0]
	0x03E810C8 MOV X19, X0
	0x03E810CC TBNZ X8, 0x0, 0x3E81114
	0x03E810D0 ADRP X0, 0x272000
	0x03E810D4 LDR X0, [X0 + 0x9D0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x568000
	006 Move X21, 0x274000
	007 Move W8, [X20+3558]
	008 Move X21, [X21+2544]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x274000
	015 Move X0, [X0+2544]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3558], W8
	019 Move X0, [X21]
	020 Move X20, [X19+48]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {26}
	024 Call 0x1C17DFC
	025 Move X0, [X21]
	026 Move X8, [X0+184]
	027 Move X0, X20
	028 Move X2, X31
	029 Move X1, [X8+16]
	030 Call DateTime.op_Inequality, X0, X1
	031 Move TEMP, X0
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfNotEqual {52}
	035 Move X0, [X21]
	036 Move X19, [X19+48]
	037 Move W8, [X0+224]
	038 Compare W8, 0
	039 JumpIfNotEqual {41}
	040 Call 0x1C17DFC
	041 Move X0, X31
	042 Call DateTime.get_Now
	043 Move X1, X0
	044 Move X0, X19
	045 Move X20, [X31+16]
	046 Move X19, [X31+24]
	047 Move X2, X31
	048 Move X30, [X31+32]
	049 Move X21, [X31+40]
	050 Call DateTime.op_LessThanOrEqual, X0, X1
	051 Return X0
	052 Move X20, [X31+16]
	053 Move X19, [X31+24]
	054 Move W0, W31
	055 Move X30, [X31+32]
	056 Move X21, [X31+40]
	057 Return X0

Method: System.Void set_Expired(System.Boolean value)

Disassembly:
	0x03E83738 MOV X0, X22
	0x03E8373C MOV X1, X31
	0x03E83740 BL 0x3E6C1B0
	0x03E83744 TBZ X0, 0x0, 0x3E837E0
	0x03E83748 ADRP X8, 0x272000
	0x03E8374C LDR X8, [X8 + 0xA28]
	0x03E83750 LDR X0, [X8]
	0x03E83754 LDR W8, [X0 + 0xE0]
	0x03E83758 CBNZ W8, 0x3E83760
	0x03E8375C BL 0x1C16DFC
	0x03E83760 MOV X0, X20
	0x03E83764 MOV X1, X31
	0x03E83768 MOV X2, X31
	0x03E8376C BL 0x361A090
	0x03E83770 TBZ X0, 0x0, 0x3E83800
	0x03E83774 LDR X0, [X23]
	0x03E83778 LDR W8, [X0 + 0xE0]
	0x03E8377C CBNZ W8, 0x3E83784
	0x03E83780 BL 0x1C16DFC
	0x03E83784 MOV X0, X20
	0x03E83788 MOV X1, X31
	0x03E8378C BL 0x3E68BC8
	0x03E83790 ADRP X8, 0x2E9000
	0x03E83794 LDR X8, [X8 + 0xE58]
	0x03E83798 MOV X2, X0
	0x03E8379C B 0x3E837EC
	0x03E837A0 ADRP X8, 0x272000
	0x03E837A4 LDR X8, [X8 + 0x278]
	0x03E837A8 LDR X8, [X8]
	0x03E837AC LDR X8, [X8 + 0xB8]
	0x03E837B0 LDR X0, [X8]
	0x03E837B4 B 0x3E8390C
	0x03E837B8 ADRP X8, 0x270000
	0x03E837BC LDR X2, [X19 + 0x78]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x566000
	007 Move X21, 0x272000
	008 Move W8, [X22+3559]
	009 Move X21, [X21+2544]
	010 Move W20, W1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x272000
	017 Move X0, [X0+2544]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+3559], W8
	021 Move X0, [X21]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfEqual {31}
	025 Move TEMP, X20
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfNotEqual {36}
	029 Move X0, X31
	030 Call DateTime.get_Now
	031 Call 0x1C17DFC
	032 Move TEMP, X20
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfEqual {29}
	036 Move X8, [X21]
	037 Move X8, [X8+184]
	038 Move X0, [X8+16]
	039 Compare X19, 0
	040 JumpIfEqual {48}
	041 Move [X19+48], X0
	042 Move X20, [X31+32]
	043 Move X19, [X31+40]
	044 Move X22, [X31+16]
	045 Move X21, [X31+24]
	046 Move X30, [X31+48]
	047 Return 
	048 Call 0x1C17F20

Method: System.DateTime get_Expires()

Disassembly:
	0x03E837C0 LDR X8, [X8 + 0xEF8]
	0x03E837C4 LDP X20, X19, [X31 + 0x30]

ISIL:
	001 Move X0, [X0+48]
	002 Return X0

Method: System.Void set_Expires(System.DateTime value)

Disassembly:
	0x03E837C8 LDP X22, X21, [X31 + 0x20]
	0x03E837CC LDP X30, X23, [X31 + 0x10]

ISIL:
	001 Move [X0+48], X1
	002 Return 

Method: System.Boolean get_HttpOnly()

Disassembly:
	0x03E837D0 LDR X0, [X8]
	0x03E837D4 MOV X3, X31

ISIL:
	001 Move W0, [X0+56]
	002 Return X0

Method: System.Void set_HttpOnly(System.Boolean value)

Disassembly:
	0x03E837D8 ADD X31, X31, 0x40
	0x03E837DC B 0x3227BD4
	0x03E837E0 ADRP X8, 0x2E9000

ISIL:
	001 And W8, W1, 1
	002 Move [X0+56], W8
	003 Return 

Method: System.String get_Name()

Disassembly:
	0x03E837E4 LDR X2, [X19 + 0x48]
	0x03E837E8 LDR X8, [X8 + 0xE58]

ISIL:
	001 Move X0, [X0+64]
	002 Return X0

Method: System.Void set_Name(System.String value)

Disassembly:
	0x03E837EC LDR X1, [X8]
	0x03E837F0 MOV X0, X21
	0x03E837F4 MOV X3, X31
	0x03E837F8 BL 0x3234224
	0x03E837FC B 0x3E83818
	0x03E83800 ADRP X8, 0x2E9000
	0x03E83804 LDR X8, [X8 + 0xE48]
	0x03E83808 MOV X0, X21
	0x03E8380C MOV X2, X31
	0x03E83810 LDR X1, [X8]
	0x03E83814 BL 0x32333E0
	0x03E83818 LDR X0, [X23]
	0x03E8381C LDR X22, [X19 + 0x28]
	0x03E83820 LDR W8, [X0 + 0xE0]
	0x03E83824 CBNZ W8, 0x3E8382C
	0x03E83828 BL 0x1C16DFC
	0x03E8382C MOV X0, X22
	0x03E83830 MOV X1, X31
	0x03E83834 BL 0x3E6C1B0
	0x03E83838 TBNZ X0, 0x0, 0x3E838A4
	0x03E8383C ADRP X8, 0x272000
	0x03E83840 LDR X8, [X8 + 0xA28]
	0x03E83844 LDR X0, [X8]
	0x03E83848 LDR W8, [X0 + 0xE0]
	0x03E8384C CBNZ W8, 0x3E83854
	0x03E83850 BL 0x1C16DFC
	0x03E83854 MOV X0, X20
	0x03E83858 MOV X1, X31
	0x03E8385C MOV X2, X31
	0x03E83860 BL 0x361DC84
	0x03E83864 TBNZ X0, 0x0, 0x3E83888
	0x03E83868 CBZ X20, 0x3E83920
	0x03E8386C MOV X0, X20
	0x03E83870 MOV X1, X31
	0x03E83874 BL 0x361C394
	0x03E83878 LDR X1, [X19 + 0x28]
	0x03E8387C MOV X2, X31
	0x03E83880 BL 0x3226EF8
	0x03E83884 TBZ X0, 0x0, 0x3E838A4
	0x03E83888 ADRP X8, 0x2E9000
	0x03E8388C LDR X2, [X19 + 0x28]
	0x03E83890 LDR X8, [X8 + 0xE40]
	0x03E83894 MOV X0, X21
	0x03E83898 MOV X3, X31
	0x03E8389C LDR X1, [X8]
	0x03E838A0 BL 0x3234224
	0x03E838A4 LDR X0, [X19 + 0x50]
	0x03E838A8 CBZ X0, 0x3E838FC
	0x03E838AC ADRP X8, 0x2E9000
	0x03E838B0 LDR X8, [X8 + 0xE30]
	0x03E838B4 MOV X2, X31
	0x03E838B8 LDR X1, [X8]
	0x03E838BC BL 0x3226EF8
	0x03E838C0 TBZ X0, 0x0, 0x3E838E4
	0x03E838C4 ADRP X8, 0x2E9000
	0x03E838C8 LDR X2, [X19 + 0x50]
	0x03E838CC LDR X8, [X8 + 0xE38]
	0x03E838D0 MOV X0, X21
	0x03E838D4 MOV X3, X31
	0x03E838D8 LDR X1, [X8]
	0x03E838DC BL 0x3234224
	0x03E838E0 B 0x3E838FC
	0x03E838E4 ADRP X8, 0x2E9000
	0x03E838E8 LDR X8, [X8 + 0xE60]
	0x03E838EC MOV X0, X21
	0x03E838F0 MOV X2, X31
	0x03E838F4 LDR X1, [X8]
	0x03E838F8 BL 0x32333E0
	0x03E838FC LDR X8, [X21]
	0x03E83900 MOV X0, X21
	0x03E83904 LDP X9, X1, [X8 + 0x168]
	0x03E83908 BLR X9
	0x03E8390C LDP X20, X19, [X31 + 0x30]
	0x03E83910 LDP X22, X21, [X31 + 0x20]
	0x03E83914 LDP X30, X23, [X31 + 0x10]
	0x03E83918 ADD X31, X31, 0x40
	0x03E8391C RET
	0x03E83920 BL 0x1C16F20
	0x03E83924 STP X30, X23, [X31 - 0x30]!
	0x03E83928 STP X22, X21, [X31 + 0x10]
	0x03E8392C STP X20, X19, [X31 + 0x20]
	0x03E83930 ADRP X23, 0x565000
	0x03E83934 ADRP X22, 0x2E9000
	0x03E83938 LDRB W8, [X23 + 0xDF2]
	0x03E8393C LDR X22, [X22 + 0xD90]
	0x03E83940 MOV X19, X2
	0x03E83944 MOV X20, X1
	0x03E83948 MOV X21, X0
	0x03E8394C TBNZ X8, 0x0, 0x3E83964
	0x03E83950 ADRP X0, 0x2E9000
	0x03E83954 LDR X0, [X0 + 0xD90]
	0x03E83958 BL 0x1C16CF4
	0x03E8395C MOVZ W8, 0x1
	0x03E83960 STRB W8, [X23 + 0xDF2]
	0x03E83964 STR X31, [X19]
	0x03E83968 LDR X0, [X22]
	0x03E8396C BL 0x1C16F10
	0x03E83970 MOV X22, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x566000
	006 Move W8, [X21+3560]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x278000
	014 Move X0, [X0+584]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+3560], W8
	018 Compare X19, 0
	019 JumpIfEqual {49}
	020 Move W8, [X19+16]
	021 Compare W8, 0
	022 JumpIfEqual {61}
	023 Move X0, X19
	024 Move W1, W31
	025 Move X2, X31
	026 Call String.get_Chars, X0, X1
	027 And W8, W0, 0xFFFF
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Move X8, 0x278000
	030 Move X8, [X8+584]
	031 Move X0, [X8]
	032 Move W8, [X0+224]
	033 Compare W8, 0
	034 JumpIfNotEqual {36}
	035 Call 0x1C17DFC
	036 Move X0, X19
	037 Move X1, X31
	038 Call Ext.IsToken, X0
	039 Move TEMP, X0
	040 And TEMP, TEMP, 1
	041 Compare TEMP, 1
	042 JumpIfNotEqual {86}
	043 Move [X20+64], X19
	044 Move X20, [X31+16]
	045 Move X19, [X31+24]
	046 Move X30, [X31+32]
	047 Move X21, [X31+40]
	048 Return 
	049 Move X0, 0x276000
	050 Move X0, [X0+1320]
	051 Call 0x1C17D08
	052 Call 0x1C17F10
	053 Move X19, X0
	054 Move X0, 0x27B000
	055 Move X0, [X0+3784]
	056 Call 0x1C17D08
	057 Move X1, X0
	058 Move X0, X19
	059 Move X2, X31
	060 Call ArgumentNullException..ctor, X0, X1
	061 Move X0, 0x279000
	062 Move X0, [X0+1400]
	063 Call 0x1C17D08
	064 Call 0x1C17F10
	065 Move X19, X0
	066 Move X0, 0x29A000
	067 Move X0, [X0+2488]
	068 Call 0x1C17D08
	069 Move X20, X0
	070 Move X0, 0x27B000
	071 Move X0, [X0+3784]
	072 Call 0x1C17D08
	073 Move X2, X0
	074 Move X0, X19
	075 Move X1, X20
	076 Move X3, X31
	077 Call ArgumentException..ctor, X0, X1, X2
	078 Move X0, 0x2EA000
	079 Move X0, [X0+3504]
	080 Call 0x1C17D08
	081 Move X1, X0
	082 Move X0, X19
	083 Call 0x1C17DEC
	084 Move X0, 0x2EA000
	085 Move X0, [X0+3488]
	086 Move X0, 0x2EA000
	087 Move X0, [X0+2480]
	088 Call 0x1C17D08
	089 Move X19, X0
	090 Move X0, 0x279000
	091 Move X0, [X0+1400]
	092 Call 0x1C17D08
	093 Call 0x1C17F10
	094 Move X20, X0
	095 Move X0, 0x27B000
	096 Move X0, [X0+3784]
	097 Call 0x1C17D08
	098 Move X2, X0
	099 Move X0, X20
	100 Move X1, X19
	101 Move X3, X31
	102 Call ArgumentException..ctor, X0, X1, X2
	103 Move X0, 0x2EA000
	104 Move X0, [X0+3504]
	105 Call 0x1C17D08
	106 Move X1, X0
	107 Move X0, X20
	108 Call 0x1C17DEC

Method: System.String get_Path()

Disassembly:
	0x03E83974 MOV X1, X21
	0x03E83978 MOV X2, X20

ISIL:
	001 Move X0, [X0+72]
	002 Return X0

Method: System.Void set_Path(System.String value)

Disassembly:
	0x03E8397C BL 0x3E82024
	0x03E83980 STR X22, [X19]
	0x03E83984 MOVZ W0, 0x1
	0x03E83988 LDP X20, X19, [X31 + 0x20]
	0x03E8398C LDP X22, X21, [X31 + 0x10]
	0x03E83990 LDP X30, X23, [X31], #0x30
	0x03E83994 RET
	0x03E83998 CMP W1, 0x1
	0x03E8399C MOV X19, X0
	0x03E839A0 B.NE 0x3E83A00
	0x03E839A4 MOV X0, X19
	0x03E839A8 BL 0x3EB1AD0
	0x03E839AC MOV X19, X0
	0x03E839B0 ADRP X0, 0x276000
	0x03E839B4 LDR X0, [X0 + 0xCC0]
	0x03E839B8 BL 0x1C16D08
	0x03E839BC LDR X8, [X19]
	0x03E839C0 LDR X1, [X8]
	0x03E839C4 BL 0x1C17270
	0x03E839C8 TBZ X0, 0x0, 0x3E839D8
	0x03E839CC BL 0x3EB1AE0
	0x03E839D0 MOV W0, W31
	0x03E839D4 B 0x3E83988
	0x03E839D8 MOVZ W0, 0x8
	0x03E839DC BL 0x3EB1AF0
	0x03E839E0 LDR X8, [X19]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x566000
	006 Move W8, [X21+3561]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfNotEqual {23}
	013 Compare X20, 0
	014 JumpIfEqual {30}
	015 Compare X19, 0
	016 JumpIfEqual {37}
	017 Move [X19+72], X20
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 Return 
	023 Move X0, 0x273000
	024 Move X0, [X0+632]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X21+3561], W8
	028 Compare X20, 0
	029 JumpIfNotEqual {15}
	030 Move X8, 0x273000
	031 Move X8, [X8+632]
	032 Move X8, [X8]
	033 Move X8, [X8+184]
	034 Move X20, [X8]
	035 Compare X19, 0
	036 JumpIfNotEqual {17}
	037 Call 0x1C17F20

Method: System.String get_Port()

Disassembly:
	0x03E839E4 STR X8, [X0]
	0x03E839E8 ADRP X1, 0x31000

ISIL:
	001 Move X0, [X0+80]
	002 Return X0

Method: System.Void set_Port(System.String value)

Disassembly:
	0x03E839EC ADD X1, X1, 0xE58
	0x03E839F0 MOV X2, X31
	0x03E839F4 BL 0x3EB1B00
	0x03E839F8 MOV X19, X0
	0x03E839FC BL 0x3EB1AE0
	0x03E83A00 MOV X0, X19
	0x03E83A04 BL 0x1D2C690
	0x03E83A08 BL 0x1990590
	0x03E83A0C STP X30, X21, [X31 - 0x20]!
	0x03E83A10 STP X20, X19, [X31 + 0x10]
	0x03E83A14 ADRP X21, 0x565000
	0x03E83A18 LDRB W8, [X21 + 0xDF3]
	0x03E83A1C MOV X20, X1
	0x03E83A20 MOV X19, X0
	0x03E83A24 TBNZ X8, 0x0, 0x3E83A3C
	0x03E83A28 ADRP X0, 0x2E9000
	0x03E83A2C LDR X0, [X0 + 0xD90]
	0x03E83A30 BL 0x1C16CF4
	0x03E83A34 MOVZ W8, 0x1
	0x03E83A38 STRB W8, [X21 + 0xDF3]
	0x03E83A3C CBZ X20, 0x3E83AE4
	0x03E83A40 ADRP X8, 0x2E9000
	0x03E83A44 LDR X8, [X8 + 0xD90]
	0x03E83A48 LDR X9, [X20]
	0x03E83A4C LDR X8, [X8]
	0x03E83A50 CMP X9, X8
	0x03E83A54 CSEL X20, X20, X31, EQ
	0x03E83A58 B.NE 0x3E83AE4
	0x03E83A5C CBZ X20, 0x3E83AF4
	0x03E83A60 LDR X0, [X19 + 0x40]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x566000
	007 Move X21, 0x2EA000
	008 Move W8, [X22+3562]
	009 Move X21, [X21+3472]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x2EA000
	017 Move X0, [X0+3472]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+3562], W8
	021 Move X0, [X21]
	022 Move [X31+8], X31
	023 Move W8, [X0+224]
	024 Compare W8, 0
	025 JumpIfNotEqual {27}
	026 Call 0x1C17DFC
	027 Add X1, X31, 8
	028 Move X0, X20
	029 Call Cookie.tryCreatePorts, X0, X1
	030 Move TEMP, X0
	031 And TEMP, TEMP, 1
	032 Compare TEMP, 1
	033 JumpIfNotEqual {37}
	034 Move X8, [X31+8]
	035 Move [X19+80], X20
	036 Move [X19+88], X8
	037 Move X20, [X31+32]
	038 Move X19, [X31+40]
	039 Move X22, [X31+16]
	040 Move X21, [X31+24]
	041 Move X30, [X31+48]
	042 Return 

Method: System.Boolean get_Secure()

Disassembly:
	0x03E83C04 BL 0x1C16DFC
	0x03E83C08 LDR X0, [X23]

ISIL:
	001 Move W0, [X0+104]
	002 Return X0

Method: System.Void set_Secure(System.Boolean value)

Disassembly:
	0x03E83C0C LDR X8, [X0 + 0xB8]
	0x03E83C10 LDR X0, [X8 + 0x8]
	0x03E83C14 CBZ X0, 0x3E83C90

ISIL:
	001 And W8, W1, 1
	002 Move [X0+104], W8
	003 Return 

Method: System.DateTime get_TimeStamp()

Disassembly:
	0x03E83C18 LDR X8, [X0]
	0x03E83C1C LDR X1, [X19 + 0x28]

ISIL:
	001 Move X0, [X0+112]
	002 Return X0

Method: System.String get_Value()

Disassembly:
	0x03E83C20 ADRP X23, 0x2E9000
	0x03E83C24 LDP X9, X2, [X8 + 0x1F8]

ISIL:
	001 Move X0, [X0+120]
	002 Return X0

Method: System.Void set_Value(System.String value)

Disassembly:
	0x03E83C28 LDR X23, [X23 + 0xD90]
	0x03E83C2C BLR X9
	0x03E83C30 LDR X8, [X23]
	0x03E83C34 LDR W23, [X19 + 0x80]
	0x03E83C38 MOV W19, W0
	0x03E83C3C LDR W9, [X8 + 0xE0]
	0x03E83C40 CBNZ W9, 0x3E83C4C
	0x03E83C44 MOV X0, X8
	0x03E83C48 BL 0x1C16DFC
	0x03E83C4C UBFM W8, W21, 0x13, 0x12
	0x03E83C50 UBFM W9, W22, 0x6, 0x5
	0x03E83C54 ORR W8, W8, W21, 0x13
	0x03E83C58 UBFM W10, W19, 0x19, 0x18
	0x03E83C5C UBFM W11, W23, 0xC, 0xB
	0x03E83C60 ORR W9, W9, W22, 0x6
	0x03E83C64 EOR W8, W8, W20, 0x0
	0x03E83C68 ORR W10, W10, W19, 0x19
	0x03E83C6C EOR W8, W8, W9, 0x0
	0x03E83C70 ORR W9, W11, W23, 0xC
	0x03E83C74 LDP X20, X19, [X31 + 0x30]
	0x03E83C78 LDP X22, X21, [X31 + 0x20]
	0x03E83C7C LDP X24, X23, [X31 + 0x10]
	0x03E83C80 EOR W8, W8, W10, 0x0
	0x03E83C84 EOR W0, W8, W9, 0x0
	0x03E83C88 LDR X30, [X31], #0x40
	0x03E83C8C RET
	0x03E83C90 BL 0x1C16F20
	0x03E83C94 MOV X1, X31
	0x03E83C98 B 0x3E835D8
	0x03E83C9C STR X30, [X31 - 0x30]!
	0x03E83CA0 STP X22, X21, [X31 + 0x10]
	0x03E83CA4 STP X20, X19, [X31 + 0x20]
	0x03E83CA8 ADRP X22, 0x565000
	0x03E83CAC ADRP X21, 0x2E9000
	0x03E83CB0 ADRP X20, 0x2E9000
	0x03E83CB4 LDRB W8, [X22 + 0xDF5]
	0x03E83CB8 LDR X21, [X21 + 0xCC0]
	0x03E83CBC LDR X20, [X20 + 0xE68]
	0x03E83CC0 MOV X19, X0
	0x03E83CC4 TBNZ X8, 0x0, 0x3E83CF4
	0x03E83CC8 ADRP X0, 0x277000
	0x03E83CCC LDR X0, [X0 + 0x2F0]
	0x03E83CD0 BL 0x1C16CF4
	0x03E83CD4 ADRP X0, 0x2E9000
	0x03E83CD8 LDR X0, [X0 + 0xE68]
	0x03E83CDC BL 0x1C16CF4
	0x03E83CE0 ADRP X0, 0x2E9000
	0x03E83CE4 LDR X0, [X0 + 0xCC0]
	0x03E83CE8 BL 0x1C16CF4
	0x03E83CEC MOVZ W8, 0x1
	0x03E83CF0 STRB W8, [X22 + 0xDF5]
	0x03E83CF4 MOV X0, X19
	0x03E83CF8 MOV X1, X31
	0x03E83CFC BL 0x33BDD8C
	0x03E83D00 LDR X0, [X21]
	0x03E83D04 BL 0x1C16F10
	0x03E83D08 LDR X1, [X20]
	0x03E83D0C MOV X20, X0
	0x03E83D10 BL 0x301B7C4
	0x03E83D14 STR X20, [X19 + 0x10]
	0x03E83D18 CBZ X20, 0x3E83D94
	0x03E83D1C ADRP X10, 0x277000
	0x03E83D20 LDR X8, [X20]
	0x03E83D24 LDR X10, [X10 + 0x2F0]
	0x03E83D28 LDRH W9, [X8 + 0x12E]
	0x03E83D2C LDR X1, [X10]
	0x03E83D30 CBZ X9, 0x3E83D54
	0x03E83D34 LDR X10, [X8 + 0xB0]
	0x03E83D38 ADD X10, X10, 0x8
	0x03E83D3C LDUR X11, [X10 - 0x8]
	0x03E83D40 CMP X11, X1
	0x03E83D44 B.EQ 0x3E83D64
	0x03E83D48 SUBS X9, X9, 0x1
	0x03E83D4C ADD X10, X10, 0x10
	0x03E83D50 B.NE 0x3E83D3C
	0x03E83D54 MOVZ W2, 0x2
	0x03E83D58 MOV X0, X20
	0x03E83D5C BL 0x1C5C788
	0x03E83D60 B 0x3E83D74
	0x03E83D64 LDR W9, [X10]
	0x03E83D68 ADD W9, W9, 0x2
	0x03E83D6C ADD X8, X8, W9, 0x4, SXTW
	0x03E83D70 ADD X0, X8, 0x138

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x566000
	007 Move W8, [X21+3563]
	008 Move X20, X1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {25}
	014 Move X0, 0x2EA000
	015 Move X0, [X0+3472]
	016 Call 0x1C17CF4
	017 Move X0, 0x278000
	018 Move X0, [X0+584]
	019 Call 0x1C17CF4
	020 Move X0, 0x273000
	021 Move X0, [X0+632]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+3563], W8
	025 Move X21, 0x2EA000
	026 Move X21, [X21+3472]
	027 Compare X20, 0
	028 JumpIfNotEqual {34}
	029 Move X8, 0x273000
	030 Move X8, [X8+632]
	031 Move X8, [X8]
	032 Move X8, [X8+184]
	033 Move X20, [X8]
	034 Move X0, [X21]
	035 Move X22, 0x278000
	036 Move W8, [X0+224]
	037 Move X22, [X22+584]
	038 Compare W8, 0
	039 JumpIfNotEqual {42}
	040 Call 0x1C17DFC
	041 Move X0, [X21]
	042 Move X8, [X22]
	043 Move X9, [X0+184]
	044 Move W10, [X8+224]
	045 Move X21, [X9+8]
	046 Compare W10, 0
	047 JumpIfNotEqual {50}
	048 Move X0, X8
	049 Call 0x1C17DFC
	050 Move X0, X20
	051 Move X1, X21
	052 Move X2, X31
	053 Call Ext.Contains, X0, X1
	054 Move TEMP, X0
	055 And TEMP, TEMP, 1
	056 Compare TEMP, 1
	057 JumpIfNotEqual {71}
	058 Move X0, [X22]
	059 Move W8, [X0+224]
	060 Compare W8, 0
	061 JumpIfNotEqual {63}
	062 Call 0x1C17DFC
	063 Move W1, 34
	064 Move X0, X20
	065 Move X2, X31
	066 Call Ext.IsEnclosedIn, X0, X1
	067 Move TEMP, X0
	068 And TEMP, TEMP, 1
	069 Compare TEMP, 1
	070 JumpIfNotEqual {78}
	071 Move [X19+120], X20
	072 Move X20, [X31+32]
	073 Move X19, [X31+40]
	074 Move X22, [X31+16]
	075 Move X21, [X31+24]
	076 Move X30, [X31+48]
	077 Return 
	078 Move X0, 0x2EA000
	079 Move X0, [X0+3496]
	080 Call 0x1C17D08
	081 Move X19, X0
	082 Move X0, 0x279000
	083 Move X0, [X0+1400]
	084 Call 0x1C17D08
	085 Call 0x1C17F10
	086 Move X20, X0
	087 Move X0, 0x27B000
	088 Move X0, [X0+3784]
	089 Call 0x1C17D08
	090 Move X2, X0
	091 Move X0, X20
	092 Move X1, X19
	093 Move X3, X31
	094 Call ArgumentException..ctor, X0, X1, X2
	095 Move X0, 0x2EA000
	096 Move X0, [X0+3512]
	097 Call 0x1C17D08
	098 Move X1, X0
	099 Move X0, X20
	100 Call 0x1C17DEC

Method: System.Int32 get_Version()

Disassembly:
	0x03E83D74 LDP X8, X1, [X0]
	0x03E83D78 MOV X0, X20

ISIL:
	001 Move W0, [X0+128]
	002 Return X0

Method: System.Void set_Version(System.Int32 value)

Disassembly:
	0x03E83D7C BLR X8
	0x03E83D80 STR X0, [X19 + 0x20]
	0x03E83D84 LDP X20, X19, [X31 + 0x20]
	0x03E83D88 LDP X22, X21, [X31 + 0x10]

ISIL:
	001 NotImplemented "Instruction CMP not yet implemented."
	002 Move [X0+128], W1
	003 Return 

Method: System.Int32 hash(System.Int32 i, System.Int32 j, System.Int32 k, System.Int32 l, System.Int32 m)

Disassembly:
	0x03E83D8C LDR X30, [X31], #0x30
	0x03E83D90 RET
	0x03E83D94 BL 0x1C16F20
	0x03E83D98 LDR X0, [X0 + 0x10]
	0x03E83D9C RET
	0x03E83DA0 LDRB W0, [X0 + 0x18]
	0x03E83DA4 RET
	0x03E83DA8 AND W8, W1, 0x1
	0x03E83DAC STRB W8, [X0 + 0x18]
	0x03E83DB0 RET
	0x03E83DB4 MOV W0, W31
	0x03E83DB8 RET
	0x03E83DBC STP X30, X21, [X31 - 0x20]!

ISIL:
	001 Move W8, W1
	002 ShiftRight W8, 19
	003 And W8, W8, 0x3FFFF
	004 Or W8, W8, W1
	005 Move W9, W2
	006 ShiftRight W9, 6
	007 And W9, W9, 31
	008 Or W9, W9, W2
	009 Move W10, W3
	010 ShiftRight W10, 25
	011 And W10, W10, 0xFFFFFF
	012 Xor W8, W8, W0
	013 Or W10, W10, W3
	014 Move W11, W4
	015 ShiftRight W11, 12
	016 And W11, W11, 2047
	017 Xor W8, W8, W9
	018 Xor W8, W8, W10
	019 Or W9, W11, W4
	020 Xor W0, W8, W9
	021 Return X0

Method: System.Void init(System.String name, System.String value, System.String path, System.String domain)

Disassembly:
	0x03E82F8C MOV X3, X31
	0x03E82F90 LDR X1, [X8]
	0x03E82F94 BL 0x3234224
	0x03E82F98 LDR X0, [X22]
	0x03E82F9C LDR X21, [X19 + 0x48]
	0x03E82FA0 LDR W8, [X0 + 0xE0]
	0x03E82FA4 CBNZ W8, 0x3E82FAC
	0x03E82FA8 BL 0x1C16DFC
	0x03E82FAC MOV X0, X21
	0x03E82FB0 MOV X1, X31
	0x03E82FB4 BL 0x3E6C1B0
	0x03E82FB8 TBNZ X0, 0x0, 0x3E82FD8
	0x03E82FBC ADRP X8, 0x2EA000
	0x03E82FC0 LDR X2, [X19 + 0x48]
	0x03E82FC4 LDR X8, [X8 + 0xDE8]
	0x03E82FC8 MOV X0, X20
	0x03E82FCC MOV X3, X31
	0x03E82FD0 LDR X1, [X8]
	0x03E82FD4 BL 0x3234224
	0x03E82FD8 LDR X0, [X22]
	0x03E82FDC LDR X21, [X19 + 0x28]
	0x03E82FE0 LDR W8, [X0 + 0xE0]
	0x03E82FE4 CBNZ W8, 0x3E82FEC
	0x03E82FE8 BL 0x1C16DFC
	0x03E82FEC MOV X0, X21
	0x03E82FF0 MOV X1, X31
	0x03E82FF4 BL 0x3E6C1B0
	0x03E82FF8 TBNZ X0, 0x0, 0x3E83018
	0x03E82FFC ADRP X8, 0x2EA000
	0x03E83000 LDR X2, [X19 + 0x28]
	0x03E83004 B 0x3EB1A6C
	0x03E83008 MOV X0, X20
	0x03E8300C MOV X3, X31
	0x03E83010 LDR X1, [X8]
	0x03E83014 BL 0x3234224
	0x03E83018 LDR X0, [X22]
	0x03E8301C LDR X21, [X19 + 0x60]
	0x03E83020 LDR W8, [X0 + 0xE0]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X25, 0x567000
	010 Move X24, 0x273000
	011 Move W8, [X25+3564]
	012 Move X24, [X24+2544]
	013 Move X20, X4
	014 Move X21, X3
	015 Move X22, X2
	016 Move X23, X1
	017 Move X19, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {27}
	022 Move X0, 0x273000
	023 Move X0, [X0+2544]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X25+3564], W8
	027 Move [X19+120], X22
	028 Move [X19+64], X23
	029 Move [X19+72], X21
	030 Move [X19+40], X20
	031 Move X0, [X24]
	032 Move W8, [X0+224]
	033 Compare W8, 0
	034 JumpIfNotEqual {37}
	035 Call 0x1C17DFC
	036 Move X0, [X24]
	037 Move X8, [X0+184]
	038 Move X0, X31
	039 Move X8, [X8+16]
	040 Move [X19+48], X8
	041 Call DateTime.get_Now
	042 Move [X19+112], X0
	043 Move X20, [X31+48]
	044 Move X19, [X31+56]
	045 Move X22, [X31+32]
	046 Move X21, [X31+40]
	047 Move X24, [X31+16]
	048 Move X23, [X31+24]
	049 Move X30, [X31+64]
	050 Move X25, [X31+72]
	051 Return 

Method: System.String toResponseStringVersion0()

Disassembly:
	0x03E83DC0 STP X20, X19, [X31 + 0x10]
	0x03E83DC4 ADRP X21, 0x565000
	0x03E83DC8 LDRB W8, [X21 + 0xDF8]
	0x03E83DCC MOV W19, W1
	0x03E83DD0 MOV X20, X0
	0x03E83DD4 TBNZ X8, 0x0, 0x3E83DF8
	0x03E83DD8 ADRP X0, 0x2E9000
	0x03E83DDC LDR X0, [X0 + 0xCB8]
	0x03E83DE0 BL 0x1C16CF4
	0x03E83DE4 ADRP X0, 0x2E9000
	0x03E83DE8 LDR X0, [X0 + 0xE70]
	0x03E83DEC BL 0x1C16CF4
	0x03E83DF0 MOVZ W8, 0x1
	0x03E83DF4 STRB W8, [X21 + 0xDF8]
	0x03E83DF8 TBNZ X19, 0x1F, 0x3E83E2C
	0x03E83DFC LDR X0, [X20 + 0x10]
	0x03E83E00 CBZ X0, 0x3E83E74
	0x03E83E04 LDR W8, [X0 + 0x18]
	0x03E83E08 CMP W8, W19
	0x03E83E0C B.LE 0x3E83E2C
	0x03E83E10 ADRP X8, 0x2E9000
	0x03E83E14 LDR X8, [X8 + 0xE70]
	0x03E83E18 MOV W1, W19
	0x03E83E1C LDP X20, X19, [X31 + 0x10]
	0x03E83E20 LDR X2, [X8]
	0x03E83E24 LDP X30, X21, [X31], #0x20
	0x03E83E28 B 0x301BCCC
	0x03E83E2C ADRP X0, 0x278000
	0x03E83E30 LDR X0, [X0 + 0x760]
	0x03E83E34 BL 0x1C16D08
	0x03E83E38 BL 0x1C16F10
	0x03E83E3C MOV X19, X0
	0x03E83E40 ADRP X0, 0x27B000
	0x03E83E44 LDR X0, [X0 + 0x130]
	0x03E83E48 BL 0x1C16D08
	0x03E83E4C MOV X1, X0
	0x03E83E50 MOV X0, X19
	0x03E83E54 MOV X2, X31
	0x03E83E58 BL 0x3316014
	0x03E83E5C ADRP X0, 0x2E9000
	0x03E83E60 LDR X0, [X0 + 0xE78]
	0x03E83E64 BL 0x1C16D08
	0x03E83E68 MOV X1, X0
	0x03E83E6C MOV X0, X19
	0x03E83E70 BL 0x1C16DEC
	0x03E83E74 BL 0x1C16F20
	0x03E83E78 STR X30, [X31 - 0x40]!
	0x03E83E7C STP X24, X23, [X31 + 0x10]
	0x03E83E80 STP X22, X21, [X31 + 0x20]
	0x03E83E84 STP X20, X19, [X31 + 0x30]
	0x03E83E88 ADRP X21, 0x565000
	0x03E83E8C LDRB W8, [X21 + 0xDF9]
	0x03E83E90 MOV X20, X1
	0x03E83E94 MOV X19, X0
	0x03E83E98 TBNZ X8, 0x0, 0x3E83ED4
	0x03E83E9C ADRP X0, 0x270000
	0x03E83EA0 LDR X0, [X0 + 0xE00]
	0x03E83EA4 BL 0x1C16CF4
	0x03E83EA8 ADRP X0, 0x2E9000
	0x03E83EAC LDR X0, [X0 + 0xCA8]
	0x03E83EB0 BL 0x1C16CF4
	0x03E83EB4 ADRP X0, 0x2E9000
	0x03E83EB8 LDR X0, [X0 + 0x9D8]
	0x03E83EBC BL 0x1C16CF4
	0x03E83EC0 ADRP X0, 0x270000
	0x03E83EC4 LDR X0, [X0 + 0xE18]
	0x03E83EC8 BL 0x1C16CF4
	0x03E83ECC MOVZ W8, 0x1
	0x03E83ED0 STRB W8, [X21 + 0xDF9]
	0x03E83ED4 CBZ X20, 0x3E840EC
	0x03E83ED8 MOV X0, X19
	0x03E83EDC BL 0x3E7FF2C
	0x03E83EE0 CBZ X0, 0x3E84134
	0x03E83EE4 ADRP X10, 0x2E9000
	0x03E83EE8 LDR X8, [X0]
	0x03E83EEC LDR X10, [X10 + 0xCA8]
	0x03E83EF0 MOV X19, X0
	0x03E83EF4 LDRH W9, [X8 + 0x12E]
	0x03E83EF8 LDR X1, [X10]
	0x03E83EFC CBZ X9, 0x3E83F20
	0x03E83F00 LDR X10, [X8 + 0xB0]
	0x03E83F04 ADD X10, X10, 0x8
	0x03E83F08 LDUR X11, [X10 - 0x8]
	0x03E83F0C CMP X11, X1
	0x03E83F10 B.EQ 0x3E83F30
	0x03E83F14 SUBS X9, X9, 0x1
	0x03E83F18 ADD X10, X10, 0x10
	0x03E83F1C B.NE 0x3E83F08
	0x03E83F20 MOV X0, X19
	0x03E83F24 MOV W2, W31
	0x03E83F28 BL 0x1C5C788
	0x03E83F2C B 0x3E83F3C
	0x03E83F30 LDRSW X9, [X10]
	0x03E83F34 ADD X8, X8, X9, 0x4, LSL
	0x03E83F38 ADD X0, X8, 0x138
	0x03E83F3C LDP X8, X1, [X0]
	0x03E83F40 ADRP X22, 0x270000
	0x03E83F44 LDR X22, [X22 + 0xE00]
	0x03E83F48 MOV X0, X19
	0x03E83F4C BLR X8
	0x03E83F50 MOV X19, X0
	0x03E83F54 CBZ X0, 0x3E84138
	0x03E83F58 ADRP X23, 0x270000
	0x03E83F5C ADRP X24, 0x2E9000
	0x03E83F60 LDR X23, [X23 + 0xE18]
	0x03E83F64 LDR X24, [X24 + 0x9D8]
	0x03E83F68 LDR X8, [X19]
	0x03E83F6C LDR X1, [X23]
	0x03E83F70 LDRH W9, [X8 + 0x12E]
	0x03E83F74 CBZ X9, 0x3E83F98
	0x03E83F78 LDR X10, [X8 + 0xB0]
	0x03E83F7C ADD X10, X10, 0x8
	0x03E83F80 LDUR X11, [X10 - 0x8]
	0x03E83F84 CMP X11, X1
	0x03E83F88 B.EQ 0x3E83FA8
	0x03E83F8C SUBS X9, X9, 0x1
	0x03E83F90 ADD X10, X10, 0x10
	0x03E83F94 B.NE 0x3E83F80
	0x03E83F98 MOV X0, X19
	0x03E83F9C MOV W2, W31
	0x03E83FA0 BL 0x1C5C788
	0x03E83FA4 B 0x3E83FB4
	0x03E83FA8 LDRSW X9, [X10]
	0x03E83FAC ADD X8, X8, X9, 0x4, LSL
	0x03E83FB0 ADD X0, X8, 0x138
	0x03E83FB4 LDP X8, X1, [X0]
	0x03E83FB8 MOV X0, X19
	0x03E83FBC BLR X8
	0x03E83FC0 TBZ X0, 0x0, 0x3E84050
	0x03E83FC4 LDR X8, [X19]
	0x03E83FC8 LDR X1, [X24]
	0x03E83FCC LDRH W9, [X8 + 0x12E]
	0x03E83FD0 CBZ X9, 0x3E83FF4
	0x03E83FD4 LDR X10, [X8 + 0xB0]
	0x03E83FD8 ADD X10, X10, 0x8
	0x03E83FDC LDUR X11, [X10 - 0x8]
	0x03E83FE0 CMP X11, X1
	0x03E83FE4 B.EQ 0x3E84004
	0x03E83FE8 SUBS X9, X9, 0x1
	0x03E83FEC ADD X10, X10, 0x10
	0x03E83FF0 B.NE 0x3E83FDC
	0x03E83FF4 MOV X0, X19
	0x03E83FF8 MOV W2, W31
	0x03E83FFC BL 0x1C5C788
	0x03E84000 B 0x3E84010
	0x03E84004 LDRSW X9, [X10]
	0x03E84008 ADD X8, X8, X9, 0x4, LSL
	0x03E8400C ADD X0, X8, 0x138
	0x03E84010 LDP X8, X1, [X0]
	0x03E84014 MOV X0, X19
	0x03E84018 BLR X8
	0x03E8401C MOV X21, X0
	0x03E84020 CBZ X0, 0x3E840E4
	0x03E84024 LDR X0, [X21 + 0x40]
	0x03E84028 CBZ X0, 0x3E840E8
	0x03E8402C MOVZ W2, 0x3
	0x03E84030 MOV X1, X20
	0x03E84034 MOV X3, X31
	0x03E84038 BL 0x322697C
	0x03E8403C TBZ X0, 0x0, 0x3E83F68
	0x03E84040 MOV X20, X31
	0x03E84044 MOVZ W23, 0x8
	0x03E84048 CBNZ X19, 0x3E84060
	0x03E8404C B 0x3E840B8
	0x03E84050 MOV X20, X31
	0x03E84054 MOV X21, X31
	0x03E84058 MOVZ W23, 0x9
	0x03E8405C CBZ X19, 0x3E840B8
	0x03E84060 LDR X8, [X19]
	0x03E84064 LDR X1, [X22]
	0x03E84068 LDRH W9, [X8 + 0x12E]
	0x03E8406C CBZ X9, 0x3E84090
	0x03E84070 LDR X10, [X8 + 0xB0]
	0x03E84074 ADD X10, X10, 0x8
	0x03E84078 LDUR X11, [X10 - 0x8]
	0x03E8407C CMP X11, X1
	0x03E84080 B.EQ 0x3E840A0
	0x03E84084 SUBS X9, X9, 0x1
	0x03E84088 ADD X10, X10, 0x10
	0x03E8408C B.NE 0x3E84078
	0x03E84090 MOV X0, X19
	0x03E84094 MOV W2, W31
	0x03E84098 BL 0x1C5C788
	0x03E8409C B 0x3E840AC
	0x03E840A0 LDRSW X9, [X10]
	0x03E840A4 ADD X8, X8, X9, 0x4, LSL
	0x03E840A8 ADD X0, X8, 0x138
	0x03E840AC LDP X8, X1, [X0]
	0x03E840B0 MOV X0, X19
	0x03E840B4 BLR X8
	0x03E840B8 CBNZ X20, 0x3E8413C
	0x03E840BC CMP W23, 0x9

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x566000
	009 Move X20, 0x271000
	010 Move W8, [X21+3565]
	011 Move X20, [X20+2288]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {58}
	017 Move X0, 0x273000
	018 Move X0, [X0+3144]
	019 Call 0x1C17CF4
	020 Move X0, 0x272000
	021 Move X0, [X0+2544]
	022 Call 0x1C17CF4
	023 Move X0, 0x278000
	024 Move X0, [X0+584]
	025 Call 0x1C17CF4
	026 Move X0, 0x271000
	027 Move X0, [X0+2288]
	028 Call 0x1C17CF4
	029 Move X0, 0x271000
	030 Move X0, [X0+3832]
	031 Call 0x1C17CF4
	032 Move X0, 0x2EA000
	033 Move X0, [X0+3520]
	034 Call 0x1C17CF4
	035 Move X0, 0x284000
	036 Move X0, [X0+2600]
	037 Call 0x1C17CF4
	038 Move X0, 0x2EA000
	039 Move X0, [X0+3528]
	040 Call 0x1C17CF4
	041 Move X0, 0x2EA000
	042 Move X0, [X0+3536]
	043 Call 0x1C17CF4
	044 Move X0, 0x2EA000
	045 Move X0, [X0+3544]
	046 Call 0x1C17CF4
	047 Move X0, 0x2EA000
	048 Move X0, [X0+3552]
	049 Call 0x1C17CF4
	050 Move X0, 0x2EA000
	051 Move X0, [X0+3560]
	052 Call 0x1C17CF4
	053 Move X0, 0x2EA000
	054 Move X0, [X0+3568]
	055 Call 0x1C17CF4
	056 Move W8, 1
	057 Move [X21+3565], W8
	058 Move X0, [X20]
	059 Move [X31+8], X31
	060 Call 0x1C17F10
	061 Move W1, 64
	062 Move X2, X31
	063 Move X20, X0
	064 Call StringBuilder..ctor, X0, X1
	065 Compare X20, 0
	066 JumpIfEqual {224}
	067 Move X8, 0x271000
	068 Move X8, [X8+3832]
	069 Move X3, [X19+120]
	070 Move X2, [X19+64]
	071 Move X23, 0x272000
	072 Move X1, [X8]
	073 Move X23, [X23+2544]
	074 Move X0, X20
	075 Move X4, X31
	076 Call StringBuilder.AppendFormat, X0, X1, X2, X3
	077 Move X0, [X23]
	078 Move X21, [X19+48]
	079 Move W8, [X0+224]
	080 Compare W8, 0
	081 JumpIfNotEqual {84}
	082 Call 0x1C17DFC
	083 Move X0, [X23]
	084 Move X8, [X0+184]
	085 Move X22, 0x278000
	086 Move X0, X21
	087 Move X2, X31
	088 Move X1, [X8+16]
	089 Move X22, [X22+584]
	090 Call DateTime.op_Inequality, X0, X1
	091 Move TEMP, X0
	092 And TEMP, TEMP, 1
	093 Compare TEMP, 1
	094 JumpIfNotEqual {132}
	095 Move X0, [X23]
	096 Add X21, X19, 48
	097 Move W8, [X0+224]
	098 Compare W8, 0
	099 JumpIfNotEqual {101}
	100 Call 0x1C17DFC
	101 Move X0, X21
	102 Move X1, X31
	103 Call DateTime.ToUniversalTime, X0
	104 Move X8, 0x273000
	105 Move X8, [X8+3144]
	106 Move [X31+8], X0
	107 Move X8, [X8]
	108 Move W9, [X8+224]
	109 Compare W9, 0
	110 JumpIfNotEqual {113}
	111 Move X0, X8
	112 Call 0x1C17DFC
	113 Move X8, 0x284000
	114 Move X8, [X8+2600]
	115 Move X1, X31
	116 Move X0, [X8]
	117 Call CultureInfo.CreateSpecificCulture, X0
	118 Move X8, 0x2EA000
	119 Move X8, [X8+3544]
	120 Move X2, X0
	121 Add X0, X31, 8
	122 Move X3, X31
	123 Move X1, [X8]
	124 Call DateTime.ToString, X0, X1, X2
	125 Move X8, 0x2EA000
	126 Move X8, [X8+3552]
	127 Move X2, X0
	128 Move X0, X20
	129 Move X3, X31
	130 Move X1, [X8]
	131 Call StringBuilder.AppendFormat, X0, X1, X2
	132 Move X0, [X22]
	133 Move X21, [X19+72]
	134 Move W8, [X0+224]
	135 Compare W8, 0
	136 JumpIfNotEqual {138}
	137 Call 0x1C17DFC
	138 Move X0, X21
	139 Move X1, X31
	140 Call Ext.IsNullOrEmpty, X0
	141 Move TEMP, X0
	142 And TEMP, TEMP, 1
	143 Compare TEMP, 1
	144 JumpIfEqual {152}
	145 Move X8, 0x2EA000
	146 Move X2, [X19+72]
	147 Move X8, [X8+3560]
	148 Move X0, X20
	149 Move X3, X31
	150 Move X1, [X8]
	151 Call StringBuilder.AppendFormat, X0, X1, X2
	152 Move X0, [X22]
	153 Move X21, [X19+40]
	154 Move W8, [X0+224]
	155 Compare W8, 0
	156 JumpIfNotEqual {158}
	157 Call 0x1C17DFC
	158 Move X0, X21
	159 Move X1, X31
	160 Call Ext.IsNullOrEmpty, X0
	161 Move TEMP, X0
	162 And TEMP, TEMP, 1
	163 Compare TEMP, 1
	164 JumpIfEqual {173}
	165 Move X8, 0x2EA000
	166 Move X2, [X19+40]
	167 Call 0x3EB2A6C
	168 Return X0
	169 Move X0, X20
	170 Move X3, X31
	171 Move X1, [X8]
	172 Call StringBuilder.AppendFormat, X0, X1, X2
	173 Move X0, [X22]
	174 Move X21, [X19+96]
	175 Move W8, [X0+224]
	176 Compare W8, 0
	177 JumpIfNotEqual {179}
	178 Call 0x1C17DFC
	179 Move X0, X21
	180 Move X1, X31
	181 Call Ext.IsNullOrEmpty, X0
	182 Move TEMP, X0
	183 And TEMP, TEMP, 1
	184 Compare TEMP, 1
	185 JumpIfEqual {193}
	186 Move X8, 0x2E9000
	187 Move X2, [X19+96]
	188 Move X8, [X8+3528]
	189 Move X0, X20
	190 Move X3, X31
	191 Move X1, [X8]
	192 Call StringBuilder.AppendFormat, X0, X1, X2
	193 Move W8, [X19+104]
	194 Compare W8, 0
	195 JumpIfEqual {202}
	196 Move X8, 0x2E9000
	197 Move X8, [X8+3536]
	198 Move X0, X20
	199 Move X2, X31
	200 Move X1, [X8]
	201 Call StringBuilder.Append, X0, X1
	202 Move W8, [X19+56]
	203 Compare W8, 0
	204 JumpIfEqual {211}
	205 Move X8, 0x2E9000
	206 Move X8, [X8+3520]
	207 Move X0, X20
	208 Move X2, X31
	209 Move X1, [X8]
	210 Call StringBuilder.Append, X0, X1
	211 Move X8, [X20]
	212 Move X0, X20
	213 Move X9, [X8+360]
	214 Move X1, [X8+368]
	215 NotImplemented "Instruction BLR not yet implemented."
	216 Move X20, [X31+48]
	217 Move X19, [X31+56]
	218 Move X22, [X31+32]
	219 Move X21, [X31+40]
	220 Move X30, [X31+16]
	221 Move X23, [X31+24]
	222 Add X31, X31, 64
	223 Return X0
	224 Call 0x1C17F20

Method: System.String toResponseStringVersion1()

Disassembly:
	0x03E840C0 B.EQ 0x3E840C8
	0x03E840C4 CBNZ W23, 0x3E840CC
	0x03E840C8 MOV X21, X31
	0x03E840CC MOV X0, X21
	0x03E840D0 LDP X20, X19, [X31 + 0x30]
	0x03E840D4 LDP X22, X21, [X31 + 0x20]
	0x03E840D8 LDP X24, X23, [X31 + 0x10]
	0x03E840DC LDR X30, [X31], #0x40
	0x03E840E0 RET
	0x03E840E4 BL 0x1C16F20
	0x03E840E8 BL 0x1C16F20
	0x03E840EC ADRP X0, 0x274000
	0x03E840F0 LDR X0, [X0 + 0x528]
	0x03E840F4 BL 0x1C16D08
	0x03E840F8 BL 0x1C16F10
	0x03E840FC MOV X19, X0
	0x03E84100 ADRP X0, 0x277000
	0x03E84104 LDR X0, [X0 + 0x588]
	0x03E84108 BL 0x1C16D08
	0x03E8410C MOV X1, X0
	0x03E84110 MOV X0, X19
	0x03E84114 MOV X2, X31
	0x03E84118 BL 0x330E100
	0x03E8411C ADRP X0, 0x2E8000
	0x03E84120 LDR X0, [X0 + 0xE80]
	0x03E84124 BL 0x1C16D08
	0x03E84128 MOV X1, X0
	0x03E8412C MOV X0, X19
	0x03E84130 BL 0x1C16DEC
	0x03E84134 BL 0x1C16F20
	0x03E84138 BL 0x1C16F20
	0x03E8413C MOV X0, X20
	0x03E84140 BL 0x1C16F18
	0x03E84144 B 0x3E84158
	0x03E84148 B 0x3E84158
	0x03E8414C B 0x3E84158
	0x03E84150 B 0x3E84158
	0x03E84154 B 0x3E84158
	0x03E84158 MOV X21, X0
	0x03E8415C CMP W1, 0x1
	0x03E84160 B.NE 0x3E84184
	0x03E84164 MOV X0, X21
	0x03E84168 BL 0x3EB1AD0
	0x03E8416C LDR X20, [X0]
	0x03E84170 BL 0x3EB1AE0
	0x03E84174 MOV W23, W31
	0x03E84178 MOV X21, X31
	0x03E8417C CBNZ X19, 0x3E84060
	0x03E84180 B 0x3E840B8
	0x03E84184 MOV X20, X31
	0x03E84188 B 0x3E84190
	0x03E8418C MOV X21, X0
	0x03E84190 CBZ X19, 0x3E841EC
	0x03E84194 LDR X8, [X19]
	0x03E84198 LDR X1, [X22]
	0x03E8419C LDRH W9, [X8 + 0x12E]
	0x03E841A0 CBZ X9, 0x3E841C4
	0x03E841A4 LDR X10, [X8 + 0xB0]
	0x03E841A8 ADD X10, X10, 0x8
	0x03E841AC LDUR X11, [X10 - 0x8]
	0x03E841B0 CMP X11, X1
	0x03E841B4 B.EQ 0x3E841D4
	0x03E841B8 SUBS X9, X9, 0x1
	0x03E841BC ADD X10, X10, 0x10
	0x03E841C0 B.NE 0x3E841AC
	0x03E841C4 MOV X0, X19
	0x03E841C8 MOV W2, W31
	0x03E841CC BL 0x1C5C788
	0x03E841D0 B 0x3E841E0
	0x03E841D4 LDRSW X9, [X10]
	0x03E841D8 ADD X8, X8, X9, 0x4, LSL
	0x03E841DC ADD X0, X8, 0x138
	0x03E841E0 LDP X8, X1, [X0]
	0x03E841E4 MOV X0, X19
	0x03E841E8 BLR X8
	0x03E841EC CBNZ X20, 0x3E841F8
	0x03E841F0 MOV X0, X21
	0x03E841F4 BL 0x1D2C690
	0x03E841F8 MOV X0, X20
	0x03E841FC BL 0x1C16F18
	0x03E84200 BL 0x1990590
	0x03E84204 LDR X0, [X0 + 0x20]
	0x03E84208 RET
	0x03E8420C STP X30, X21, [X31 - 0x20]!
	0x03E84210 STP X20, X19, [X31 + 0x10]
	0x03E84214 ADRP X21, 0x564000
	0x03E84218 LDRB W8, [X21 + 0xDFA]
	0x03E8421C MOV X19, X1
	0x03E84220 MOV X20, X0
	0x03E84224 TBNZ X8, 0x0, 0x3E84248
	0x03E84228 ADRP X0, 0x2E8000
	0x03E8422C LDR X0, [X0 + 0xE88]
	0x03E84230 BL 0x1C16CF4
	0x03E84234 ADRP X0, 0x2E8000
	0x03E84238 LDR X0, [X0 + 0xE90]
	0x03E8423C BL 0x1C16CF4
	0x03E84240 MOVZ W8, 0x1
	0x03E84244 STRB W8, [X21 + 0xDFA]
	0x03E84248 MOV X0, X20
	0x03E8424C MOV X1, X19
	0x03E84250 BL 0x3E842F8
	0x03E84254 LDR X8, [X20 + 0x10]
	0x03E84258 CBZ X8, 0x3E842F4
	0x03E8425C MOV W1, W0
	0x03E84260 ADDS W31, W0, 0x1
	0x03E84264 B.EQ 0x3E84288
	0x03E84268 ADRP X9, 0x2E8000
	0x03E8426C LDR X9, [X9 + 0xE90]
	0x03E84270 MOV X2, X19
	0x03E84274 LDP X20, X19, [X31 + 0x10]
	0x03E84278 MOV X0, X8
	0x03E8427C LDR X3, [X9]
	0x03E84280 LDP X30, X21, [X31], #0x20
	0x03E84284 B 0x301BD20
	0x03E84288 ADRP X10, 0x2E8000
	0x03E8428C LDR X10, [X10 + 0xE88]
	0x03E84290 LDR W11, [X8 + 0x1C]
	0x03E84294 LDR X9, [X8 + 0x10]
	0x03E84298 LDR X10, [X10]
	0x03E8429C ADD W11, W11, 0x1
	0x03E842A0 STR W11, [X8 + 0x1C]
	0x03E842A4 CBZ X9, 0x3E842F4
	0x03E842A8 LDRSW X11, [X8 + 0x18]
	0x03E842AC LDR W12, [X9 + 0x18]
	0x03E842B0 CMP W11, W12
	0x03E842B4 B.CS 0x3E842D4
	0x03E842B8 ADD W10, W11, 0x1
	0x03E842BC ADD X9, X9, X11, 0x3, LSL
	0x03E842C0 STR W10, [X8 + 0x18]
	0x03E842C4 STR X19, [X9 + 0x20]
	0x03E842C8 LDP X20, X19, [X31 + 0x10]
	0x03E842CC LDP X30, X21, [X31], #0x20
	0x03E842D0 RET
	0x03E842D4 LDR X9, [X10 + 0x20]
	0x03E842D8 MOV X1, X19
	0x03E842DC LDP X20, X19, [X31 + 0x10]
	0x03E842E0 MOV X0, X8
	0x03E842E4 LDR X9, [X9 + 0xC0]
	0x03E842E8 LDR X2, [X9 + 0x70]
	0x03E842EC LDP X30, X21, [X31], #0x20
	0x03E842F0 B 0x301BF90
	0x03E842F4 BL 0x1C16F20
	0x03E842F8 STR X30, [X31 - 0x30]!
	0x03E842FC STP X22, X21, [X31 + 0x10]
	0x03E84300 STP X20, X19, [X31 + 0x20]
	0x03E84304 ADRP X21, 0x564000
	0x03E84308 LDRB W8, [X21 + 0xDFD]
	0x03E8430C MOV X19, X1
	0x03E84310 MOV X20, X0
	0x03E84314 TBNZ X8, 0x0, 0x3E84338
	0x03E84318 ADRP X0, 0x2E8000
	0x03E8431C LDR X0, [X0 + 0xCB8]
	0x03E84320 BL 0x1C16CF4
	0x03E84324 ADRP X0, 0x2E8000
	0x03E84328 LDR X0, [X0 + 0xE70]
	0x03E8432C BL 0x1C16CF4
	0x03E84330 MOVZ W8, 0x1
	0x03E84334 STRB W8, [X21 + 0xDFD]
	0x03E84338 LDR X8, [X20 + 0x10]
	0x03E8433C CBZ X8, 0x3E84394
	0x03E84340 ADRP X22, 0x2E8000
	0x03E84344 LDR W21, [X8 + 0x18]
	0x03E84348 LDR X22, [X22 + 0xE70]
	0x03E8434C SUBS W21, W21, 0x1
	0x03E84350 B.MI 0x3E8437C
	0x03E84354 LDR X0, [X20 + 0x10]
	0x03E84358 CBZ X0, 0x3E84394
	0x03E8435C LDR X2, [X22]
	0x03E84360 MOV W1, W21
	0x03E84364 BL 0x301BCCC
	0x03E84368 CBZ X0, 0x3E84394
	0x03E8436C MOV X1, X19
	0x03E84370 BL 0x3E834C8
	0x03E84374 TBZ X0, 0x0, 0x3E8434C
	0x03E84378 B 0x3E84380
	0x03E8437C MOVN W21, 0x0
	0x03E84380 MOV W0, W21
	0x03E84384 LDP X20, X19, [X31 + 0x20]
	0x03E84388 LDP X22, X21, [X31 + 0x10]
	0x03E8438C LDR X30, [X31], #0x30
	0x03E84390 RET
	0x03E84394 BL 0x1C16F20
	0x03E84398 STR X30, [X31 - 0x10]!
	0x03E8439C CBZ X0, 0x3E843E8
	0x03E843A0 LDR X8, [X0 + 0x40]
	0x03E843A4 CBZ X8, 0x3E843E8
	0x03E843A8 LDR X9, [X0 + 0x78]
	0x03E843AC CBZ X9, 0x3E843E8
	0x03E843B0 CBZ X1, 0x3E843E8
	0x03E843B4 LDR X10, [X1 + 0x40]
	0x03E843B8 CBZ X10, 0x3E843E8
	0x03E843BC LDR X11, [X1 + 0x78]
	0x03E843C0 CBZ X11, 0x3E843E8
	0x03E843C4 LDR W8, [X8 + 0x10]
	0x03E843C8 LDR W9, [X9 + 0x10]
	0x03E843CC LDR W10, [X10 + 0x10]
	0x03E843D0 LDR W11, [X11 + 0x10]
	0x03E843D4 ADD W8, W9, W8
	0x03E843D8 SUB W8, W8, W10
	0x03E843DC SUB W0, W8, W11
	0x03E843E0 LDR X30, [X31], #0x10
	0x03E843E4 RET
	0x03E843E8 BL 0x1C16F20
	0x03E843EC STR X30, [X31 - 0x20]!
	0x03E843F0 STP X20, X19, [X31 + 0x10]
	0x03E843F4 CBZ X0, 0x3E84454
	0x03E843F8 MOV X20, X1
	0x03E843FC CBZ X1, 0x3E84454
	0x03E84400 LDR W8, [X0 + 0x80]
	0x03E84404 LDR W9, [X20 + 0x80]
	0x03E84408 MOV X19, X0
	0x03E8440C SUBS W0, W8, W9
	0x03E84410 B.NE 0x3E84448
	0x03E84414 LDR X0, [X19 + 0x40]
	0x03E84418 CBZ X0, 0x3E84454
	0x03E8441C LDR X1, [X20 + 0x40]
	0x03E84420 MOV X2, X31
	0x03E84424 BL 0x3226580
	0x03E84428 CBNZ W0, 0x3E84448
	0x03E8442C LDR X8, [X20 + 0x48]
	0x03E84430 CBZ X8, 0x3E84454
	0x03E84434 LDR X9, [X19 + 0x48]
	0x03E84438 CBZ X9, 0x3E84454
	0x03E8443C LDR W8, [X8 + 0x10]
	0x03E84440 LDR W9, [X9 + 0x10]
	0x03E84444 SUB W0, W8, W9
	0x03E84448 LDP X20, X19, [X31 + 0x10]
	0x03E8444C LDR X30, [X31], #0x20
	0x03E84450 RET
	0x03E84454 BL 0x1C16F20
	0x03E84458 SUB X31, X31, 0x70
	0x03E8445C STP X29, X30, [X31 + 0x10]
	0x03E84460 STP X28, X27, [X31 + 0x20]
	0x03E84464 STP X26, X25, [X31 + 0x30]
	0x03E84468 STP X24, X23, [X31 + 0x40]
	0x03E8446C STP X22, X21, [X31 + 0x50]
	0x03E84470 STP X20, X19, [X31 + 0x60]
	0x03E84474 ADRP X21, 0x564000
	0x03E84478 ADRP X19, 0x2E8000
	0x03E8447C ADRP X25, 0x278000
	0x03E84480 LDRB W8, [X21 + 0xDFB]
	0x03E84484 LDR X19, [X19 + 0x250]
	0x03E84488 LDR X25, [X25 + 0x8D8]
	0x03E8448C MOV X20, X0
	0x03E84490 TBNZ X8, 0x0, 0x3E84538
	0x03E84494 ADRP X0, 0x278000
	0x03E84498 LDR X0, [X0 + 0x8D8]
	0x03E8449C BL 0x1C16CF4
	0x03E844A0 ADRP X0, 0x2E8000
	0x03E844A4 LDR X0, [X0 + 0x250]
	0x03E844A8 BL 0x1C16CF4
	0x03E844AC ADRP X0, 0x2E8000
	0x03E844B0 LDR X0, [X0 + 0xD90]
	0x03E844B4 BL 0x1C16CF4
	0x03E844B8 ADRP X0, 0x2E8000
	0x03E844BC LDR X0, [X0 + 0xE98]
	0x03E844C0 BL 0x1C16CF4
	0x03E844C4 ADRP X0, 0x276000

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0x565000
	009 Move X21, 0x270000
	010 Move X24, 0x270000
	011 Move W8, [X20+3566]
	012 Move X21, [X21+2288]
	013 Move X24, [X24+1880]
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {72}
	019 Move X0, 0x271000
	020 Move X0, [X0+2544]
	021 Call 0x1C17CF4
	022 Move X0, 0x277000
	023 Move X0, [X0+584]
	024 Call 0x1C17CF4
	025 Move X0, 0x2E9000
	026 Move X0, [X0+872]
	027 Call 0x1C17CF4
	028 Move X0, 0x270000
	029 Move X0, [X0+1880]
	030 Call 0x1C17CF4
	031 Move X0, 0x270000
	032 Move X0, [X0+2288]
	033 Call 0x1C17CF4
	034 Move X0, 0x272000
	035 Move X0, [X0+2600]
	036 Call 0x1C17CF4
	037 Move X0, 0x2E9000
	038 Move X0, [X0+3576]
	039 Call 0x1C17CF4
	040 Move X0, 0x2E9000
	041 Move X0, [X0+3584]
	042 Call 0x1C17CF4
	043 Move X0, 0x2E9000
	044 Move X0, [X0+3536]
	045 Call 0x1C17CF4
	046 Move X0, 0x2E9000
	047 Move X0, [X0+3592]
	048 Call 0x1C17CF4
	049 Move X0, 0x2E9000
	050 Move X0, [X0+3600]
	051 Call 0x1C17CF4
	052 Move X0, 0x2E9000
	053 Move X0, [X0+3608]
	054 Call 0x1C17CF4
	055 Move X0, 0x2E9000
	056 Move X0, [X0+3616]
	057 Call 0x1C17CF4
	058 Move X0, 0x2E9000
	059 Move X0, [X0+3624]
	060 Call 0x1C17CF4
	061 Move X0, 0x2E9000
	062 Move X0, [X0+3560]
	063 Call 0x1C17CF4
	064 Move X0, 0x2E9000
	065 Move X0, [X0+3568]
	066 Call 0x1C17CF4
	067 Move X0, 0x2E9000
	068 Move X0, [X0+3632]
	069 Call 0x1C17CF4
	070 Move W8, 1
	071 Move [X20+3566], W8
	072 Move X0, [X21]
	073 Call 0x1C17F10
	074 Move W1, 64
	075 Move X2, X31
	076 Move X20, X0
	077 Call StringBuilder..ctor, X0, X1
	078 Move W8, [X19+128]
	079 Move X0, [X24]
	080 Move X21, [X19+64]
	081 Move X22, [X19+120]
	082 Add X1, X31, 12
	083 Move [X31+12], W8
	084 Call 0x1C17E04
	085 Compare X20, 0
	086 JumpIfEqual {298}
	087 Move X8, 0x2E9000
	088 Move X8, [X8+3616]
	089 Move X23, 0x271000
	090 Move X4, X0
	091 Move X0, X20
	092 Move X1, [X8]
	093 Move X23, [X23+2544]
	094 Move X2, X21
	095 Move X3, X22
	096 Move X5, X31
	097 Call StringBuilder.AppendFormat, X0, X1, X2, X3, X4
	098 Move X0, [X23]
	099 Move X21, [X19+48]
	100 Move W8, [X0+224]
	101 Compare W8, 0
	102 JumpIfNotEqual {105}
	103 Call 0x1C17DFC
	104 Move X0, [X23]
	105 Move X8, [X0+184]
	106 Move X23, 0x277000
	107 Move X0, X21
	108 Move X2, X31
	109 Move X1, [X8+16]
	110 Move X23, [X23+584]
	111 Call DateTime.op_Inequality, X0, X1
	112 Move TEMP, X0
	113 And TEMP, TEMP, 1
	114 Compare TEMP, 1
	115 JumpIfNotEqual {130}
	116 Move X0, X19
	117 Call Cookie.get_MaxAge, X0
	118 Move X8, [X24]
	119 Move [X31+8], W0
	120 Add X1, X31, 8
	121 Move X0, X8
	122 Call 0x1C17E04
	123 Move X8, 0x2E9000
	124 Move X8, [X8+3600]
	125 Move X2, X0
	126 Move X0, X20
	127 Move X3, X31
	128 Move X1, [X8]
	129 Call StringBuilder.AppendFormat, X0, X1, X2
	130 Move X0, [X23]
	131 Move X21, [X19+72]
	132 Move W8, [X0+224]
	133 Compare W8, 0
	134 JumpIfNotEqual {136}
	135 Call 0x1C17DFC
	136 Move X0, X21
	137 Move X1, X31
	138 Call Ext.IsNullOrEmpty, X0
	139 Move TEMP, X0
	140 And TEMP, TEMP, 1
	141 Compare TEMP, 1
	142 JumpIfEqual {150}
	143 Move X8, 0x2E9000
	144 Move X2, [X19+72]
	145 Move X8, [X8+3560]
	146 Move X0, X20
	147 Move X3, X31
	148 Move X1, [X8]
	149 Call StringBuilder.AppendFormat, X0, X1, X2
	150 Move X0, [X23]
	151 Move X21, [X19+40]
	152 Move W8, [X0+224]
	153 Compare W8, 0
	154 JumpIfNotEqual {156}
	155 Call 0x1C17DFC
	156 Move X0, X21
	157 Move X1, X31
	158 Call Ext.IsNullOrEmpty, X0
	159 Move TEMP, X0
	160 And TEMP, TEMP, 1
	161 Compare TEMP, 1
	162 JumpIfEqual {170}
	163 Move X8, 0x2E9000
	164 Move X2, [X19+40]
	165 Move X8, [X8+3568]
	166 Move X0, X20
	167 Move X3, X31
	168 Move X1, [X8]
	169 Call StringBuilder.AppendFormat, X0, X1, X2
	170 Move X0, [X19+80]
	171 Compare X0, 0
	172 JumpIfEqual {195}
	173 Move X8, 0x2E9000
	174 Move X8, [X8+3632]
	175 Move X2, X31
	176 Move X1, [X8]
	177 Call String.op_Inequality, X0, X1
	178 Move TEMP, X0
	179 And TEMP, TEMP, 1
	180 Compare TEMP, 1
	181 JumpIfNotEqual {189}
	182 Move X8, 0x2E9000
	183 Move X2, [X19+80]
	184 Move X8, [X8+3576]
	185 Move X0, X20
	186 Move X3, X31
	187 Move X1, [X8]
	188 Call StringBuilder.AppendFormat, X0, X1, X2
	189 Move X8, 0x2E9000
	190 Move X8, [X8+3608]
	191 Move X0, X20
	192 Move X2, X31
	193 Move X1, [X8]
	194 Call StringBuilder.Append, X0, X1
	195 Move X22, 0x272000
	196 Move X21, [X19+16]
	197 Move X22, [X22+2600]
	198 Compare X21, 0
	199 JumpIfEqual {217}
	200 Move X8, 0x2E9000
	201 Move X8, [X8+872]
	202 Move X24, 0x2E9000
	203 Move X0, [X8]
	204 Move W8, [X0+224]
	205 Move X24, [X24+3584]
	206 Compare W8, 0
	207 JumpIfNotEqual {209}
	208 Call 0x1C17DFC
	209 Move X0, X21
	210 Move X1, X31
	211 Call HttpUtility.UrlEncode, X0
	212 Move X1, [X24]
	213 Move X2, X0
	214 Move X0, X20
	215 Move X3, X31
	216 Call StringBuilder.AppendFormat, X0, X1, X2
	217 Move X0, [X22]
	218 Move X21, [X19+24]
	219 Move W8, [X0+224]
	220 Compare W8, 0
	221 JumpIfNotEqual {223}
	222 Call 0x1C17DFC
	223 Move X0, X21
	224 Move X1, X31
	225 Move X2, X31
	226 Call Uri.op_Inequality, X0, X1
	227 Move TEMP, X0
	228 And TEMP, TEMP, 1
	229 Compare TEMP, 1
	230 JumpIfNotEqual {267}
	231 Move X0, [X19+24]
	232 Compare X0, 0
	233 JumpIfEqual {298}
	234 Move X1, X31
	235 Call Uri.get_OriginalString, X0
	236 Move X8, [X23]
	237 Move X21, X0
	238 Move W9, [X8+224]
	239 Compare W9, 0
	240 JumpIfNotEqual {243}
	241 Move X0, X8
	242 Call 0x1C17DFC
	243 Move X0, X21
	244 Move X1, X31
	245 Call Ext.IsToken, X0
	246 Move X8, 0x2E9000
	247 Move X8, [X8+3624]
	248 Move X22, [X8]
	249 Move TEMP, X0
	250 And TEMP, TEMP, 1
	251 Compare TEMP, 1
	252 JumpIfEqual {262}
	253 Move X0, [X23]
	254 Move W8, [X0+224]
	255 Compare W8, 0
	256 JumpIfNotEqual {258}
	257 Call 0x1C17DFC
	258 Move X0, X21
	259 Move X1, X31
	260 Call Ext.Quote, X0
	261 Move X21, X0
	262 Move X0, X20
	263 Move X1, X22
	264 Move X2, X21
	265 Move X3, X31
	266 Call StringBuilder.AppendFormat, X0, X1, X2
	267 Move W8, [X19+32]
	268 Compare W8, 0
	269 JumpIfEqual {276}
	270 Move X8, 0x2E9000
	271 Move X8, [X8+3592]
	272 Move X0, X20
	273 Move X2, X31
	274 Move X1, [X8]
	275 Call StringBuilder.Append, X0, X1
	276 Move W8, [X19+104]
	277 Compare W8, 0
	278 JumpIfEqual {285}
	279 Move X8, 0x2E9000
	280 Move X8, [X8+3536]
	281 Move X0, X20
	282 Move X2, X31
	283 Move X1, [X8]
	284 Call StringBuilder.Append, X0, X1
	285 Move X8, [X20]
	286 Move X0, X20
	287 Move X9, [X8+360]
	288 Move X1, [X8+368]
	289 NotImplemented "Instruction BLR not yet implemented."
	290 Move X20, [X31+48]
	291 Move X19, [X31+56]
	292 Move X22, [X31+32]
	293 Move X21, [X31+40]
	294 Move X24, [X31+16]
	295 Move X23, [X31+24]
	296 Move X30, [X31+64]
	297 Return X0
	298 Call 0x1C17F20

Method: System.Boolean tryCreatePorts(System.String value, out System.Int32[] result)

Disassembly:
	0x03E83A64 CBZ X0, 0x3E83AF4
	0x03E83A68 LDR X1, [X20 + 0x40]
	0x03E83A6C MOVZ W2, 0x3
	0x03E83A70 MOV X3, X31
	0x03E83A74 BL 0x322697C
	0x03E83A78 TBZ X0, 0x0, 0x3E83AE4
	0x03E83A7C LDR X0, [X19 + 0x78]
	0x03E83A80 CBZ X0, 0x3E83AF4
	0x03E83A84 LDR X1, [X20 + 0x78]
	0x03E83A88 MOVZ W2, 0x2
	0x03E83A8C MOV X3, X31
	0x03E83A90 BL 0x322697C
	0x03E83A94 TBZ X0, 0x0, 0x3E83AE4
	0x03E83A98 LDR X0, [X19 + 0x48]
	0x03E83A9C CBZ X0, 0x3E83AF4
	0x03E83AA0 LDR X1, [X20 + 0x48]
	0x03E83AA4 MOVZ W2, 0x2
	0x03E83AA8 MOV X3, X31
	0x03E83AAC BL 0x322697C
	0x03E83AB0 TBZ X0, 0x0, 0x3E83AE4
	0x03E83AB4 LDR X0, [X19 + 0x28]
	0x03E83AB8 CBZ X0, 0x3E83AF4
	0x03E83ABC LDR X1, [X20 + 0x28]
	0x03E83AC0 MOVZ W2, 0x3
	0x03E83AC4 MOV X3, X31
	0x03E83AC8 BL 0x322697C
	0x03E83ACC TBZ X0, 0x0, 0x3E83AE4
	0x03E83AD0 LDR W8, [X19 + 0x80]
	0x03E83AD4 LDR W9, [X20 + 0x80]
	0x03E83AD8 CMP W8, W9
	0x03E83ADC CSET W0, EQ
	0x03E83AE0 B 0x3E83AE8
	0x03E83AE4 MOV W0, W31
	0x03E83AE8 LDP X20, X19, [X31 + 0x10]
	0x03E83AEC LDP X30, X21, [X31], #0x20
	0x03E83AF0 RET
	0x03E83AF4 BL 0x1C16F20
	0x03E83AF8 STR X30, [X31 - 0x40]!
	0x03E83AFC STP X24, X23, [X31 + 0x10]
	0x03E83B00 STP X22, X21, [X31 + 0x20]
	0x03E83B04 STP X20, X19, [X31 + 0x30]
	0x03E83B08 ADRP X20, 0x565000
	0x03E83B0C ADRP X23, 0x27D000
	0x03E83B10 LDRB W8, [X20 + 0xDF4]
	0x03E83B14 LDR X23, [X23 + 0x2F0]
	0x03E83B18 MOV X19, X0
	0x03E83B1C TBNZ X8, 0x0, 0x3E83B40
	0x03E83B20 ADRP X0, 0x2E9000
	0x03E83B24 LDR X0, [X0 + 0xD90]
	0x03E83B28 BL 0x1C16CF4
	0x03E83B2C ADRP X0, 0x27D000
	0x03E83B30 LDR X0, [X0 + 0x2F0]
	0x03E83B34 BL 0x1C16CF4
	0x03E83B38 MOVZ W8, 0x1
	0x03E83B3C STRB W8, [X20 + 0xDF4]
	0x03E83B40 LDR X0, [X23]
	0x03E83B44 LDR W8, [X0 + 0xE0]
	0x03E83B48 CBNZ W8, 0x3E83B50
	0x03E83B4C BL 0x1C16DFC
	0x03E83B50 ADRP X24, 0x55D000
	0x03E83B54 LDRB W8, [X24 + 0x4B3]
	0x03E83B58 CBNZ W8, 0x3E83B70
	0x03E83B5C ADRP X0, 0x27D000
	0x03E83B60 LDR X0, [X0 + 0x2F0]
	0x03E83B64 BL 0x1C16CF4
	0x03E83B68 MOVZ W8, 0x1
	0x03E83B6C STRB W8, [X24 + 0x4B3]
	0x03E83B70 LDR X0, [X23]
	0x03E83B74 LDR W8, [X0 + 0xE0]
	0x03E83B78 CBNZ W8, 0x3E83B84
	0x03E83B7C BL 0x1C16DFC
	0x03E83B80 LDR X0, [X23]
	0x03E83B84 LDR X8, [X0 + 0xB8]
	0x03E83B88 LDR X0, [X8 + 0x8]
	0x03E83B8C CBZ X0, 0x3E83C90
	0x03E83B90 LDR X8, [X0]
	0x03E83B94 LDR X1, [X19 + 0x40]
	0x03E83B98 LDP X9, X2, [X8 + 0x1F8]
	0x03E83B9C BLR X9
	0x03E83BA0 LDR X8, [X19 + 0x78]
	0x03E83BA4 CBZ X8, 0x3E83C90
	0x03E83BA8 LDR X9, [X8]
	0x03E83BAC MOV W20, W0
	0x03E83BB0 MOV X0, X8
	0x03E83BB4 LDP X10, X1, [X9 + 0x158]
	0x03E83BB8 BLR X10
	0x03E83BBC LDR X8, [X19 + 0x48]
	0x03E83BC0 CBZ X8, 0x3E83C90
	0x03E83BC4 LDR X9, [X8]
	0x03E83BC8 MOV W21, W0
	0x03E83BCC MOV X0, X8
	0x03E83BD0 LDP X10, X1, [X9 + 0x158]
	0x03E83BD4 BLR X10
	0x03E83BD8 LDRB W8, [X24 + 0x4B3]
	0x03E83BDC MOV W22, W0
	0x03E83BE0 CBNZ W8, 0x3E83BF8
	0x03E83BE4 ADRP X0, 0x27D000
	0x03E83BE8 LDR X0, [X0 + 0x2F0]
	0x03E83BEC BL 0x1C16CF4
	0x03E83BF0 MOVZ W8, 0x1
	0x03E83BF4 STRB W8, [X24 + 0x4B3]
	0x03E83BF8 LDR X0, [X23]
	0x03E83BFC LDR W8, [X0 + 0xE0]
	0x03E83C00 CBNZ W8, 0x3E83C0C

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X22, 0x566000
	010 Move X21, 0x27A000
	011 Move W8, [X22+3567]
	012 Move X21, [X21+2264]
	013 Move X19, X1
	014 Move X20, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {27}
	019 Move X0, 0x27A000
	020 Move X0, [X0+2264]
	021 Call 0x1C17CF4
	022 Move X0, 0x272000
	023 Move X0, [X0+3672]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X22+3567], W8
	027 Move [X19], X31
	028 Move X0, [X21]
	029 Move W1, 1
	030 Call 0x1C17D6C
	031 Compare X0, 0
	032 JumpIfEqual {121}
	033 Move W8, [X0+24]
	034 Move X1, X0
	035 Compare W8, 0
	036 JumpIfEqual {122}
	037 Move W8, 34
	038 NotImplemented "Instruction STRH not yet implemented."
	039 Compare X20, 0
	040 JumpIfEqual {121}
	041 Move X0, X20
	042 Move X2, X31
	043 Call String.Trim, X0, X1
	044 Move X8, [X21]
	045 Move X20, X0
	046 Move W1, 1
	047 Move X0, X8
	048 Call 0x1C17D6C
	049 Compare X0, 0
	050 JumpIfEqual {121}
	051 Move W8, [X0+24]
	052 Move X1, X0
	053 Compare W8, 0
	054 JumpIfEqual {122}
	055 Move W8, 44
	056 NotImplemented "Instruction STRH not yet implemented."
	057 Compare X20, 0
	058 JumpIfEqual {121}
	059 Move X0, X20
	060 Move X2, X31
	061 Call String.Split, X0, X1
	062 Compare X0, 0
	063 JumpIfEqual {121}
	064 Move X8, 0x272000
	065 Move X8, [X8+3672]
	066 Move W21, [X0+24]
	067 Move X20, X0
	068 Move X0, [X8]
	069 Move W1, W21
	070 Call 0x1C17D6C
	071 NotImplemented "Instruction CMP not yet implemented."
	072 Move X22, X0
	073 Move W8, W31
	074 Move W24, 1
	075 Move W23, 0x80000000
	076 Move W9, [X20+24]
	077 NotImplemented "Instruction CMP not yet implemented."
	078 Move X25, W8
	079 Add X8, X20, X25
	080 Move X0, [X8+32]
	081 Compare X0, 0
	082 JumpIfEqual {121}
	083 Move X1, X31
	084 Call String.Trim, X0
	085 Compare X0, 0
	086 JumpIfEqual {121}
	087 Compare X22, 0
	088 JumpIfEqual {121}
	089 Move W8, [X22+24]
	090 Move W9, [X0+16]
	091 NotImplemented "Instruction CMP not yet implemented."
	092 Compare W9, 0
	093 Invalid "Jump target not found in method."
	094 Add X8, X22, X25
	095 Add X1, X8, 32
	096 Move X2, X31
	097 Call Int32.TryParse, X0, X1
	098 Move TEMP, X0
	099 And TEMP, TEMP, 1
	100 Compare TEMP, 1
	101 JumpIfEqual {104}
	102 Add X8, X22, X25
	103 Move [X8+32], W23
	104 Add W8, W25, 1
	105 NotImplemented "Instruction CMP not yet implemented."
	106 NotImplemented "Instruction CSET not yet implemented."
	107 NotImplemented "Instruction CMP not yet implemented."
	108 Move W24, W31
	109 Move [X19], X22
	110 NotImplemented "Instruction ORN not yet implemented."
	111 Move X20, [X31+48]
	112 Move X19, [X31+56]
	113 Move X22, [X31+32]
	114 Move X21, [X31+40]
	115 Move X24, [X31+16]
	116 Move X23, [X31+24]
	117 And W0, W8, 1
	118 Move X30, [X31+64]
	119 Move X25, [X31+72]
	120 Return X0
	121 Call 0x1C17F20
	122 Call 0x1C17F28

Method: System.Boolean EqualsWithoutValue(WebSocketSharp.Net.Cookie cookie)

Disassembly:
	0x03E844C8 LDR X0, [X0 + 0x248]
	0x03E844CC BL 0x1C16CF4
	0x03E844D0 ADRP X0, 0x270000
	0x03E844D4 LDR X0, [X0 + 0x1C8]
	0x03E844D8 BL 0x1C16CF4
	0x03E844DC ADRP X0, 0x297000
	0x03E844E0 LDR X0, [X0 + 0xB58]
	0x03E844E4 BL 0x1C16CF4
	0x03E844E8 ADRP X0, 0x271000
	0x03E844EC LDR X0, [X0 + 0x278]
	0x03E844F0 BL 0x1C16CF4
	0x03E844F4 ADRP X0, 0x2E8000
	0x03E844F8 LDR X0, [X0 + 0xEA0]
	0x03E844FC BL 0x1C16CF4
	0x03E84500 ADRP X0, 0x2E8000
	0x03E84504 LDR X0, [X0 + 0xEA8]
	0x03E84508 BL 0x1C16CF4
	0x03E8450C ADRP X0, 0x2E8000
	0x03E84510 LDR X0, [X0 + 0xEB0]
	0x03E84514 BL 0x1C16CF4
	0x03E84518 ADRP X0, 0x2E8000
	0x03E8451C LDR X0, [X0 + 0xEB8]
	0x03E84520 BL 0x1C16CF4
	0x03E84524 ADRP X0, 0x2E8000
	0x03E84528 LDR X0, [X0 + 0xE30]
	0x03E8452C BL 0x1C16CF4
	0x03E84530 MOVZ W8, 0x1
	0x03E84534 STRB W8, [X21 + 0xDFB]
	0x03E84538 LDR X0, [X19]
	0x03E8453C STR W31, [X31 + 0x4]
	0x03E84540 BL 0x1C16F10
	0x03E84544 MOV X19, X0
	0x03E84548 BL 0x3E83C9C
	0x03E8454C LDR X0, [X25]
	0x03E84550 MOVZ W1, 0x2
	0x03E84554 STR X31, [X31 + 0x8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Compare X1, 0
	005 JumpIfEqual {50}
	006 Move X20, X0
	007 Move X0, [X0+64]
	008 Compare X0, 0
	009 JumpIfEqual {50}
	010 Move X19, X1
	011 Move X1, [X1+64]
	012 Move W2, 3
	013 Move X3, X31
	014 Call String.Equals, X0, X1, X2
	015 Move TEMP, X0
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfNotEqual {45}
	019 Move X0, [X20+72]
	020 Compare X0, 0
	021 JumpIfEqual {50}
	022 Move X1, [X19+72]
	023 Move W2, 2
	024 Move X3, X31
	025 Call String.Equals, X0, X1, X2
	026 Move TEMP, X0
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfNotEqual {45}
	030 Move X0, [X20+40]
	031 Compare X0, 0
	032 JumpIfEqual {50}
	033 Move X1, [X19+40]
	034 Move W2, 3
	035 Move X3, X31
	036 Call String.Equals, X0, X1, X2
	037 Move TEMP, X0
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfNotEqual {45}
	041 Move W8, [X20+128]
	042 Move W9, [X19+128]
	043 NotImplemented "Instruction CMP not yet implemented."
	044 NotImplemented "Instruction CSET not yet implemented."
	045 Move W0, W31
	046 Move X20, [X31+16]
	047 Move X19, [X31+24]
	048 Move X30, [X31+32]
	049 Return X0
	050 Call 0x1C17F20

Method: System.Boolean EqualsWithoutValueAndVersion(WebSocketSharp.Net.Cookie cookie)

Disassembly:
	0x03E84558 BL 0x1C16D6C
	0x03E8455C CBZ X0, 0x3E84920
	0x03E84560 LDR W8, [X0 + 0x18]
	0x03E84564 MOV X21, X0
	0x03E84568 CBZ W8, 0x3E84924
	0x03E8456C MOVZ W9, 0x2C
	0x03E84570 CMP W8, 0x1
	0x03E84574 STRH W9, [X21 + 0x20]
	0x03E84578 B.EQ 0x3E84924
	0x03E8457C ADRP X9, 0x276000
	0x03E84580 LDR X9, [X9 + 0x248]
	0x03E84584 MOVZ W8, 0x3B
	0x03E84588 STRH W8, [X21 + 0x22]
	0x03E8458C ADRP X22, 0x2E8000
	0x03E84590 LDR X0, [X9]
	0x03E84594 LDR W8, [X0 + 0xE0]
	0x03E84598 LDR X22, [X22 + 0xE98]
	0x03E8459C CBNZ W8, 0x3E845A4
	0x03E845A0 BL 0x1C16DFC
	0x03E845A4 MOV X0, X20
	0x03E845A8 MOV X1, X21
	0x03E845AC MOV X2, X31
	0x03E845B0 BL 0x3E6A25C
	0x03E845B4 LDR X1, [X22]
	0x03E845B8 BL 0x21E2B88
	0x03E845BC CBZ X0, 0x3E84920
	0x03E845C0 LDR W8, [X0 + 0x18]
	0x03E845C4 MOV X20, X0
	0x03E845C8 CMP W8, 0x1
	0x03E845CC B.LT 0x3E848E8
	0x03E845D0 ADRP X27, 0x297000
	0x03E845D4 ADRP X26, 0x2E8000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Compare X1, 0
	005 JumpIfEqual {46}
	006 Move X20, X0
	007 Move X0, [X0+64]
	008 Compare X0, 0
	009 JumpIfEqual {46}
	010 Move X19, X1
	011 Move X1, [X1+64]
	012 Move W2, 3
	013 Move X3, X31
	014 Call String.Equals, X0, X1, X2
	015 Move TEMP, X0
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfNotEqual {41}
	019 Move X0, [X20+72]
	020 Compare X0, 0
	021 JumpIfEqual {46}
	022 Move X1, [X19+72]
	023 Move W2, 2
	024 Move X3, X31
	025 Call String.Equals, X0, X1, X2
	026 Move TEMP, X0
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfNotEqual {41}
	030 Move X0, [X20+40]
	031 Compare X0, 0
	032 JumpIfEqual {46}
	033 Move X1, [X19+40]
	034 Move X20, [X31+16]
	035 Move X19, [X31+24]
	036 Move W2, 3
	037 Move X3, X31
	038 Move X30, [X31+32]
	039 Call String.Equals, X0, X1, X2
	040 Return X0
	041 Move X20, [X31+16]
	042 Move X19, [X31+24]
	043 Move W0, W31
	044 Move X30, [X31+32]
	045 Return X0
	046 Call 0x1C17F20

Method: System.String ToRequestString(System.Uri uri)

Disassembly:
	0x03E845D8 LDR X27, [X27 + 0xB58]
	0x03E845DC LDR X26, [X26 + 0xEB8]
	0x03E845E0 MOV W21, W31
	0x03E845E4 MOV W28, W31
	0x03E845E8 MOVZ W29, 0x20
	0x03E845EC LDR X2, [X27]
	0x03E845F0 MOV X0, X20
	0x03E845F4 MOV W1, W21
	0x03E845F8 BL 0x301BCCC
	0x03E845FC CBZ X0, 0x3E84920
	0x03E84600 MOV X1, X31
	0x03E84604 BL 0x322B8DC
	0x03E84608 CBZ X0, 0x3E84920
	0x03E8460C LDR W8, [X0 + 0x10]
	0x03E84610 MOV X22, X0
	0x03E84614 CBZ W8, 0x3E848D8
	0x03E84618 MOVZ W1, 0x3D
	0x03E8461C MOV X0, X22
	0x03E84620 MOV X2, X31
	0x03E84624 BL 0x322BD98
	0x03E84628 CBZ W0, 0x3E84678
	0x03E8462C MOV W24, W0
	0x03E84630 ADDS W31, W0, 0x1
	0x03E84634 B.NE 0x3E84694
	0x03E84638 LDR X23, [X31 + 0x8]
	0x03E8463C CBZ X23, 0x3E848D8
	0x03E84640 ADRP X8, 0x2E8000
	0x03E84644 LDR X8, [X8 + 0xEA0]
	0x03E84648 MOVZ W2, 0x3
	0x03E8464C MOV X0, X22
	0x03E84650 MOV X3, X31
	0x03E84654 LDR X1, [X8]
	0x03E84658 BL 0x322697C
	0x03E8465C TBZ X0, 0x0, 0x3E848D8
	0x03E84660 ADRP X8, 0x2E8000
	0x03E84664 LDR X8, [X8 + 0xE30]
	0x03E84668 MOV X0, X23
	0x03E8466C LDR X1, [X8]
	0x03E84670 BL 0x3E829EC
	0x03E84674 B 0x3E848D8
	0x03E84678 LDR X1, [X31 + 0x8]
	0x03E8467C CBZ X1, 0x3E848D8
	0x03E84680 CBZ X19, 0x3E84920
	0x03E84684 MOV X0, X19
	0x03E84688 BL 0x3E8420C
	0x03E8468C STR X31, [X31 + 0x8]
	0x03E84690 B 0x3E848D8
	0x03E84694 MOV X0, X22
	0x03E84698 MOV W1, W31
	0x03E8469C MOV W2, W24
	0x03E846A0 MOV X3, X31
	0x03E846A4 BL 0x3228DE4
	0x03E846A8 LDR X8, [X25]
	0x03E846AC MOV X23, X0
	0x03E846B0 MOVZ W1, 0x1
	0x03E846B4 MOV X0, X8
	0x03E846B8 BL 0x1C16D6C
	0x03E846BC CBZ X0, 0x3E84920
	0x03E846C0 LDR W8, [X0 + 0x18]
	0x03E846C4 MOV X1, X0
	0x03E846C8 CBZ W8, 0x3E84924
	0x03E846CC STRH W29, [X1 + 0x20]
	0x03E846D0 CBZ X23, 0x3E84920
	0x03E846D4 MOV X0, X23
	0x03E846D8 MOV X2, X31
	0x03E846DC BL 0x322BC58
	0x03E846E0 LDR W8, [X22 + 0x10]
	0x03E846E4 MOV X23, X0
	0x03E846E8 SUB W8, W8, 0x1
	0x03E846EC CMP W24, W8
	0x03E846F0 B.GE 0x3E84744
	0x03E846F4 ADD W1, W24, 0x1
	0x03E846F8 MOV X0, X22
	0x03E846FC MOV X2, X31
	0x03E84700 BL 0x322B484
	0x03E84704 LDR X8, [X25]
	0x03E84708 MOV X22, X0
	0x03E8470C MOVZ W1, 0x1
	0x03E84710 MOV X0, X8
	0x03E84714 BL 0x1C16D6C
	0x03E84718 CBZ X0, 0x3E84920
	0x03E8471C LDR W8, [X0 + 0x18]
	0x03E84720 MOV X1, X0
	0x03E84724 CBZ W8, 0x3E84924
	0x03E84728 STRH W29, [X1 + 0x20]
	0x03E8472C CBZ X22, 0x3E84920
	0x03E84730 MOV X0, X22
	0x03E84734 MOV X2, X31
	0x03E84738 BL 0x322BBFC
	0x03E8473C MOV X22, X0
	0x03E84740 B 0x3E84758
	0x03E84744 ADRP X8, 0x271000
	0x03E84748 LDR X8, [X8 + 0x278]
	0x03E8474C LDR X8, [X8]
	0x03E84750 LDR X8, [X8 + 0xB8]
	0x03E84754 LDR X22, [X8]
	0x03E84758 CBZ X23, 0x3E84920
	0x03E8475C LDR X1, [X26]
	0x03E84760 MOVZ W2, 0x3
	0x03E84764 MOV X0, X23
	0x03E84768 MOV X3, X31
	0x03E8476C BL 0x322697C
	0x03E84770 TBZ X0, 0x0, 0x3E847C0
	0x03E84774 CBZ X22, 0x3E84920
	0x03E84778 LDR W8, [X22 + 0x10]
	0x03E8477C CBZ W8, 0x3E848D8
	0x03E84780 ADRP X8, 0x276000
	0x03E84784 LDR X8, [X8 + 0x248]
	0x03E84788 LDR X0, [X8]
	0x03E8478C LDR W8, [X0 + 0xE0]
	0x03E84790 CBNZ W8, 0x3E84798
	0x03E84794 BL 0x1C16DFC
	0x03E84798 MOV X0, X22
	0x03E8479C MOV X1, X31
	0x03E847A0 BL 0x3E690A4
	0x03E847A4 ADD X1, X31, 0x4
	0x03E847A8 MOV X2, X31
	0x03E847AC BL 0x337BDF4
	0x03E847B0 LDR W8, [X31 + 0x4]
	0x03E847B4 ANDS W31, W0, 0x1
	0x03E847B8 CSEL W28, W8, W28, NE
	0x03E847BC B 0x3E848D8
	0x03E847C0 ADRP X8, 0x2E8000
	0x03E847C4 LDR X8, [X8 + 0xEB0]
	0x03E847C8 MOVZ W2, 0x3
	0x03E847CC MOV X0, X23
	0x03E847D0 MOV X3, X31
	0x03E847D4 LDR X1, [X8]
	0x03E847D8 BL 0x322697C
	0x03E847DC TBZ X0, 0x0, 0x3E84800
	0x03E847E0 LDR X0, [X31 + 0x8]
	0x03E847E4 CBZ X0, 0x3E848D8
	0x03E847E8 CBZ X22, 0x3E84920
	0x03E847EC LDR W8, [X22 + 0x10]
	0x03E847F0 CBZ W8, 0x3E848D8
	0x03E847F4 MOV X1, X22
	0x03E847F8 BL 0x3E8297C
	0x03E847FC B 0x3E848D8
	0x03E84800 ADRP X8, 0x2E8000
	0x03E84804 LDR X8, [X8 + 0xEA8]
	0x03E84808 MOVZ W2, 0x3
	0x03E8480C MOV X0, X23
	0x03E84810 MOV X3, X31
	0x03E84814 LDR X1, [X8]
	0x03E84818 BL 0x322697C
	0x03E8481C TBZ X0, 0x0, 0x3E84840
	0x03E84820 LDR X0, [X31 + 0x8]
	0x03E84824 CBZ X0, 0x3E848D8
	0x03E84828 CBZ X22, 0x3E84920
	0x03E8482C LDR W8, [X22 + 0x10]
	0x03E84830 CBZ W8, 0x3E848D8
	0x03E84834 MOV X1, X22
	0x03E84838 BL 0x3E826D0
	0x03E8483C B 0x3E848D8
	0x03E84840 ADRP X8, 0x2E8000
	0x03E84844 LDR X8, [X8 + 0xEA0]
	0x03E84848 MOVZ W2, 0x3
	0x03E8484C MOV X0, X23
	0x03E84850 MOV X3, X31
	0x03E84854 LDR X1, [X8]
	0x03E84858 BL 0x322697C
	0x03E8485C LDR X1, [X31 + 0x8]
	0x03E84860 TBZ X0, 0x0, 0x3E84880
	0x03E84864 CBZ X1, 0x3E848D8
	0x03E84868 CBZ X22, 0x3E84920
	0x03E8486C LDR W8, [X22 + 0x10]
	0x03E84870 CBZ W8, 0x3E848D8
	0x03E84874 MOV X0, X1
	0x03E84878 MOV X1, X22
	0x03E8487C B 0x3E84670
	0x03E84880 CBZ X1, 0x3E84890
	0x03E84884 CBZ X19, 0x3E84920
	0x03E84888 MOV X0, X19
	0x03E8488C BL 0x3E8420C
	0x03E84890 ADRP X8, 0x2E8000
	0x03E84894 LDR X8, [X8 + 0xD90]
	0x03E84898 LDR X0, [X8]
	0x03E8489C LDR W8, [X0 + 0xE0]
	0x03E848A0 CBNZ W8, 0x3E848A8
	0x03E848A4 BL 0x1C16DFC
	0x03E848A8 ADD X2, X31, 0x8
	0x03E848AC MOV X0, X23
	0x03E848B0 MOV X1, X22
	0x03E848B4 BL 0x3E83924
	0x03E848B8 CBZ W28, 0x3E848D8
	0x03E848BC TBZ X0, 0x0, 0x3E848D8
	0x03E848C0 LDR X8, [X31 + 0x8]
	0x03E848C4 CBZ X8, 0x3E84920
	0x03E848C8 CMP W28, 0x1
	0x03E848CC B.HI 0x3E848D8
	0x03E848D0 STR W28, [X8 + 0x80]
	0x03E848D4 MOVZ W28, 0x1
	0x03E848D8 LDR W8, [X20 + 0x18]
	0x03E848DC ADD W21, W21, 0x1
	0x03E848E0 CMP W21, W8
	0x03E848E4 B.LT 0x3E845EC
	0x03E848E8 LDR X1, [X31 + 0x8]
	0x03E848EC CBZ X1, 0x3E848FC
	0x03E848F0 CBZ X19, 0x3E84920
	0x03E848F4 MOV X0, X19
	0x03E848F8 BL 0x3E8420C
	0x03E848FC MOV X0, X19
	0x03E84900 LDP X20, X19, [X31 + 0x60]
	0x03E84904 LDP X22, X21, [X31 + 0x50]
	0x03E84908 LDP X24, X23, [X31 + 0x40]
	0x03E8490C LDP X26, X25, [X31 + 0x30]
	0x03E84910 LDP X28, X27, [X31 + 0x20]
	0x03E84914 LDP X29, X30, [X31 + 0x10]
	0x03E84918 ADD X31, X31, 0x70
	0x03E8491C RET
	0x03E84920 BL 0x1C16F20

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x565000
	009 Move W8, [X21+3568]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {57}
	016 Move X0, 0x277000
	017 Move X0, [X0+584]
	018 Call 0x1C17CF4
	019 Move X0, 0x270000
	020 Move X0, [X0+1880]
	021 Call 0x1C17CF4
	022 Move X0, 0x270000
	023 Move X0, [X0+2288]
	024 Call 0x1C17CF4
	025 Move X0, 0x272000
	026 Move X0, [X0+632]
	027 Call 0x1C17CF4
	028 Move X0, 0x272000
	029 Move X0, [X0+2600]
	030 Call 0x1C17CF4
	031 Move X0, 0x270000
	032 Move X0, [X0+3832]
	033 Call 0x1C17CF4
	034 Move X0, 0x2E9000
	035 Move X0, [X0+3640]
	036 Call 0x1C17CF4
	037 Move X0, 0x2E9000
	038 Move X0, [X0+3648]
	039 Call 0x1C17CF4
	040 Move X0, 0x2E9000
	041 Move X0, [X0+3656]
	042 Call 0x1C17CF4
	043 Move X0, 0x2E9000
	044 Move X0, [X0+3664]
	045 Call 0x1C17CF4
	046 Move X0, 0x2E9000
	047 Move X0, [X0+3672]
	048 Call 0x1C17CF4
	049 Move X0, 0x2E9000
	050 Move X0, [X0+3680]
	051 Call 0x1C17CF4
	052 Move X0, 0x2E9000
	053 Move X0, [X0+3632]
	054 Call 0x1C17CF4
	055 Move W8, 1
	056 Move [X21+3568], W8
	057 Move X1, [X19+64]
	058 Compare X1, 0
	059 JumpIfEqual {250}
	060 Move W8, [X1+16]
	061 Compare W8, 0
	062 JumpIfEqual {133}
	063 Move W8, [X19+128]
	064 Compare W8, 0
	065 JumpIfEqual {138}
	066 Move X8, 0x270000
	067 Move X8, [X8+2288]
	068 Move X0, [X8]
	069 Call 0x1C17F10
	070 Move W1, 64
	071 Move X2, X31
	072 Move X21, X0
	073 Call StringBuilder..ctor, X0, X1
	074 Move X9, 0x270000
	075 Move W8, [X19+128]
	076 Move X9, [X9+1880]
	077 Add X1, X31, 12
	078 Move [X31+12], W8
	079 Move X0, [X9]
	080 Call 0x1C17E04
	081 Compare X21, 0
	082 JumpIfEqual {250}
	083 Move X8, 0x2E9000
	084 Move X4, [X19+120]
	085 Move X3, [X19+64]
	086 Move X8, [X8+3664]
	087 Move X2, X0
	088 Move X0, X21
	089 Move X5, X31
	090 Move X1, [X8]
	091 Call StringBuilder.AppendFormat, X0, X1, X2, X3, X4
	092 Move X23, 0x277000
	093 Move X23, [X23+584]
	094 Move X22, [X19+72]
	095 Move X0, [X23]
	096 Move W8, [X0+224]
	097 Compare W8, 0
	098 JumpIfNotEqual {100}
	099 Call 0x1C17DFC
	100 Move X0, X22
	101 Move X1, X31
	102 Call Ext.IsNullOrEmpty, X0
	103 Move TEMP, X0
	104 And TEMP, TEMP, 1
	105 Compare TEMP, 1
	106 JumpIfNotEqual {152}
	107 Move X8, 0x272000
	108 Move X8, [X8+2600]
	109 Move X0, [X8]
	110 Move W8, [X0+224]
	111 Compare W8, 0
	112 JumpIfNotEqual {114}
	113 Call 0x1C17DFC
	114 Move X0, X20
	115 Move X1, X31
	116 Move X2, X31
	117 Call Uri.op_Inequality, X0, X1
	118 Move TEMP, X0
	119 And TEMP, TEMP, 1
	120 Compare TEMP, 1
	121 JumpIfNotEqual {159}
	122 Move X0, [X23]
	123 Move W8, [X0+224]
	124 Compare W8, 0
	125 JumpIfNotEqual {127}
	126 Call 0x1C17DFC
	127 Move X0, X20
	128 Move X1, X31
	129 Call Ext.GetAbsolutePath, X0
	130 Move X8, 0x2E9000
	131 Move X8, [X8+3672]
	132 Move X2, X0
	133 Move X8, 0x272000
	134 Move X8, [X8+632]
	135 Move X8, [X8]
	136 Move X8, [X8+184]
	137 Move X0, [X8]
	138 Move X8, 0x270000
	139 Move X2, [X19+120]
	140 Move X8, [X8+3832]
	141 Move X20, [X31+48]
	142 Move X19, [X31+56]
	143 Move X22, [X31+32]
	144 Move X21, [X31+40]
	145 Move X30, [X31+16]
	146 Move X23, [X31+24]
	147 Move X0, [X8]
	148 Move X3, X31
	149 Add X31, X31, 64
	150 Call String.Format, X0, X1, X2
	151 Return X0
	152 Move X8, 0x2E9000
	153 Move X2, [X19+72]
	154 Move X8, [X8+3672]
	155 Move X1, [X8]
	156 Move X0, X21
	157 Move X3, X31
	158 Call StringBuilder.AppendFormat, X0, X1, X2
	159 Move X8, 0x2E9000
	160 Move X8, [X8+3656]
	161 Move X0, X21
	162 Move X2, X31
	163 Move X1, [X8]
	164 Call StringBuilder.Append, X0, X1
	165 Move X0, [X23]
	166 Move X22, [X19+40]
	167 Move W8, [X0+224]
	168 Compare W8, 0
	169 JumpIfNotEqual {171}
	170 Call 0x1C17DFC
	171 Move X0, X22
	172 Move X1, X31
	173 Call Ext.IsNullOrEmpty, X0
	174 Move TEMP, X0
	175 And TEMP, TEMP, 1
	176 Compare TEMP, 1
	177 JumpIfEqual {212}
	178 Move X8, 0x272000
	179 Move X8, [X8+2600]
	180 Move X0, [X8]
	181 Move W8, [X0+224]
	182 Compare W8, 0
	183 JumpIfNotEqual {185}
	184 Call 0x1C17DFC
	185 Move X0, X20
	186 Move X1, X31
	187 Move X2, X31
	188 Call Uri.op_Equality, X0, X1
	189 Move TEMP, X0
	190 And TEMP, TEMP, 1
	191 Compare TEMP, 1
	192 JumpIfEqual {205}
	193 Compare X20, 0
	194 JumpIfEqual {250}
	195 Move X0, X20
	196 Move X1, X31
	197 Call Uri.get_Host, X0
	198 Move X1, [X19+40]
	199 Move X2, X31
	200 Call String.op_Inequality, X0, X1
	201 Move TEMP, X0
	202 And TEMP, TEMP, 1
	203 Compare TEMP, 1
	204 JumpIfNotEqual {212}
	205 Move X8, 0x2E9000
	206 Move X2, [X19+40]
	207 Move X8, [X8+3648]
	208 Move X0, X21
	209 Move X3, X31
	210 Move X1, [X8]
	211 Call StringBuilder.AppendFormat, X0, X1, X2
	212 Move X0, [X19+80]
	213 Compare X0, 0
	214 JumpIfEqual {237}
	215 Move X8, 0x2E9000
	216 Move X8, [X8+3632]
	217 Move X2, X31
	218 Move X1, [X8]
	219 Call String.op_Inequality, X0, X1
	220 Move TEMP, X0
	221 And TEMP, TEMP, 1
	222 Compare TEMP, 1
	223 JumpIfNotEqual {231}
	224 Move X8, 0x2E9000
	225 Move X2, [X19+80]
	226 Move X8, [X8+3640]
	227 Move X0, X21
	228 Move X3, X31
	229 Move X1, [X8]
	230 Call StringBuilder.AppendFormat, X0, X1, X2
	231 Move X8, 0x2E9000
	232 Move X8, [X8+3680]
	233 Move X0, X21
	234 Move X2, X31
	235 Move X1, [X8]
	236 Call StringBuilder.Append, X0, X1
	237 Move X8, [X21]
	238 Move X0, X21
	239 Move X9, [X8+360]
	240 Move X1, [X8+368]
	241 NotImplemented "Instruction BLR not yet implemented."
	242 Move X20, [X31+48]
	243 Move X19, [X31+56]
	244 Move X22, [X31+32]
	245 Move X21, [X31+40]
	246 Move X30, [X31+16]
	247 Move X23, [X31+24]
	248 Add X31, X31, 64
	249 Return X0
	250 Call 0x1C17F20

Method: System.String ToResponseString()

Disassembly:
	0x03E82014 LDP X22, X21, [X31 + 0x20]
	0x03E82018 LDP X24, X23, [X31 + 0x10]
	0x03E8201C LDP X30, X25, [X31], #0x40
	0x03E82020 RET
	0x03E82024 STP X30, X23, [X31 - 0x30]!
	0x03E82028 STP X22, X21, [X31 + 0x10]
	0x03E8202C STP X20, X19, [X31 + 0x20]
	0x03E82030 ADRP X22, 0x566000
	0x03E82034 ADRP X23, 0x273000
	0x03E82038 LDRB W8, [X22 + 0xDDF]
	0x03E8203C LDR X23, [X23 + 0x278]
	0x03E82040 MOV X19, X2
	0x03E82044 MOV X20, X1
	0x03E82048 MOV X21, X0
	0x03E8204C TBNZ X8, 0x0, 0x3E82064
	0x03E82050 ADRP X0, 0x273000
	0x03E82054 LDR X0, [X0 + 0x278]
	0x03E82058 BL 0x1C16CF4
	0x03E8205C MOVZ W8, 0x1
	0x03E82060 STRB W8, [X22 + 0xDDF]
	0x03E82064 LDR X8, [X23]
	0x03E82068 MOV X0, X21
	0x03E8206C MOV X1, X20
	0x03E82070 MOV X2, X19
	0x03E82074 LDR X8, [X8 + 0xB8]
	0x03E82078 LDP X20, X19, [X31 + 0x20]
	0x03E8207C LDP X22, X21, [X31 + 0x10]
	0x03E82080 LDR X3, [X8]
	0x03E82084 MOV X4, X3
	0x03E82088 LDP X30, X23, [X31], #0x30
	0x03E8208C B 0x3E82090
	0x03E82090 STP X30, X25, [X31 - 0x40]!
	0x03E82094 STP X24, X23, [X31 + 0x10]
	0x03E82098 STP X22, X21, [X31 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x567000
	005 Move W8, [X20+3569]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x274000
	012 Move X0, [X0+632]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+3569], W8
	016 Move X8, [X19+64]
	017 Compare X8, 0
	018 JumpIfEqual {46}
	019 Move W8, [X8+16]
	020 Compare W8, 0
	021 JumpIfEqual {31}
	022 Move W8, [X19+128]
	023 Compare W8, 0
	024 JumpIfEqual {40}
	025 Move X0, X19
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Call Cookie.toResponseStringVersion1, X0
	030 Return X0
	031 Move X8, 0x274000
	032 Move X8, [X8+632]
	033 Move X20, [X31+16]
	034 Move X19, [X31+24]
	035 Move X8, [X8]
	036 Move X8, [X8+184]
	037 Move X0, [X8]
	038 Move X30, [X31+32]
	039 Return X0
	040 Move X0, X19
	041 Move X20, [X31+16]
	042 Move X19, [X31+24]
	043 Move X30, [X31+32]
	044 Call Cookie.toResponseStringVersion0, X0
	045 Return X0
	046 Call 0x1C17F20

Method: System.Boolean TryCreate(System.String name, System.String value, out WebSocketSharp.Net.Cookie result)

Disassembly:
	0x03E84924 BL 0x1C16F28
	0x03E84928 SUB X31, X31, 0x80
	0x03E8492C STP X29, X30, [X31 + 0x20]
	0x03E84930 STP X28, X27, [X31 + 0x30]
	0x03E84934 STP X26, X25, [X31 + 0x40]
	0x03E84938 STP X24, X23, [X31 + 0x50]
	0x03E8493C STP X22, X21, [X31 + 0x60]
	0x03E84940 STP X20, X19, [X31 + 0x70]
	0x03E84944 ADRP X21, 0x564000
	0x03E84948 ADRP X19, 0x2E8000
	0x03E8494C ADRP X25, 0x278000
	0x03E84950 LDRB W8, [X21 + 0xDFC]
	0x03E84954 LDR X19, [X19 + 0x250]
	0x03E84958 LDR X25, [X25 + 0x8D8]
	0x03E8495C MOV X20, X0
	0x03E84960 TBNZ X8, 0x0, 0x3E84AC8
	0x03E84964 ADRP X0, 0x278000
	0x03E84968 LDR X0, [X0 + 0x8D8]
	0x03E8496C BL 0x1C16CF4
	0x03E84970 ADRP X0, 0x2E8000
	0x03E84974 LDR X0, [X0 + 0x250]
	0x03E84978 BL 0x1C16CF4
	0x03E8497C ADRP X0, 0x2E8000
	0x03E84980 LDR X0, [X0 + 0xD90]
	0x03E84984 BL 0x1C16CF4
	0x03E84988 ADRP X0, 0x271000
	0x03E8498C LDR X0, [X0 + 0xC48]
	0x03E84990 BL 0x1C16CF4
	0x03E84994 ADRP X0, 0x270000
	0x03E84998 LDR X0, [X0 + 0x9F0]
	0x03E8499C BL 0x1C16CF4
	0x03E849A0 ADRP X0, 0x2E8000
	0x03E849A4 LDR X0, [X0 + 0xE98]
	0x03E849A8 BL 0x1C16CF4
	0x03E849AC ADRP X0, 0x276000
	0x03E849B0 LDR X0, [X0 + 0x248]
	0x03E849B4 BL 0x1C16CF4
	0x03E849B8 ADRP X0, 0x270000
	0x03E849BC LDR X0, [X0 + 0x1C8]
	0x03E849C0 BL 0x1C16CF4
	0x03E849C4 ADRP X0, 0x297000
	0x03E849C8 LDR X0, [X0 + 0xB58]
	0x03E849CC BL 0x1C16CF4
	0x03E849D0 ADRP X0, 0x26F000
	0x03E849D4 LDR X0, [X0 + 0x8F0]
	0x03E849D8 BL 0x1C16CF4
	0x03E849DC ADRP X0, 0x26F000
	0x03E849E0 LDR X0, [X0 + 0xAC8]
	0x03E849E4 BL 0x1C16CF4
	0x03E849E8 ADRP X0, 0x271000
	0x03E849EC LDR X0, [X0 + 0x278]
	0x03E849F0 BL 0x1C16CF4
	0x03E849F4 ADRP X0, 0x2E8000
	0x03E849F8 LDR X0, [X0 + 0xEC0]
	0x03E849FC BL 0x1C16CF4
	0x03E84A00 ADRP X0, 0x2E8000
	0x03E84A04 LDR X0, [X0 + 0xEC8]
	0x03E84A08 BL 0x1C16CF4

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x565000
	008 Move X22, 0x2E9000
	009 Move W8, [X23+3570]
	010 Move X22, [X22+3472]
	011 Move X19, X2
	012 Move X20, X1
	013 Move X21, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0x2E9000
	019 Move X0, [X0+3472]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X23+3570], W8
	023 Move [X19], X31
	024 Move X0, [X22]
	025 Call 0x1C17F10
	026 Move X22, X0
	027 Move X1, X21
	028 Move X2, X20
	029 Call Cookie..ctor, X0, X1, X2
	030 Move [X19], X22
	031 Move W0, 1
	032 Move X20, [X31+32]
	033 Move X19, [X31+40]
	034 Move X22, [X31+16]
	035 Move X21, [X31+24]
	036 Move X30, [X31+48]
	037 Move X23, [X31+56]
	038 Return X0
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Move X19, X0
	041 Move X0, X19
	042 Call 0x3EB2AD0
	043 Move X19, X0
	044 Move X0, 0x276000
	045 Move X0, [X0+3264]
	046 Call 0x1C17D08
	047 Move X8, [X19]
	048 Move X1, [X8]
	049 Call 0x1C18270
	050 Move TEMP, X0
	051 And TEMP, TEMP, 1
	052 Compare TEMP, 1
	053 JumpIfNotEqual {56}
	054 Call 0x3EB2AE0
	055 Move W0, W31
	056 Move W0, 8
	057 Call 0x3EB2AF0
	058 Move X8, [X19]
	059 Move [X0], X8
	060 Move X1, 0x31000
	061 Add X1, X1, 3672
	062 Move X2, X31
	063 Call 0x3EB2B00
	064 Move X19, X0
	065 Call 0x3EB2AE0
	066 Move X0, X19
	067 Call 0x1D2D690
	068 Call 0x1991590

Method: System.Boolean Equals(System.Object comparand)

Disassembly:
	0x03E84A0C ADRP X0, 0x282000
	0x03E84A10 LDR X0, [X0 + 0xA28]
	0x03E84A14 BL 0x1C16CF4
	0x03E84A18 ADRP X0, 0x2E8000
	0x03E84A1C LDR X0, [X0 + 0xED0]
	0x03E84A20 BL 0x1C16CF4
	0x03E84A24 ADRP X0, 0x2B9000
	0x03E84A28 LDR X0, [X0 + 0x7C8]
	0x03E84A2C BL 0x1C16CF4
	0x03E84A30 ADRP X0, 0x2E8000
	0x03E84A34 LDR X0, [X0 + 0xED8]
	0x03E84A38 BL 0x1C16CF4
	0x03E84A3C ADRP X0, 0x2E8000
	0x03E84A40 LDR X0, [X0 + 0xEE0]
	0x03E84A44 BL 0x1C16CF4
	0x03E84A48 ADRP X0, 0x29C000
	0x03E84A4C LDR X0, [X0 + 0x3A8]
	0x03E84A50 BL 0x1C16CF4
	0x03E84A54 ADRP X0, 0x2E8000
	0x03E84A58 LDR X0, [X0 + 0xDD8]
	0x03E84A5C BL 0x1C16CF4
	0x03E84A60 ADRP X0, 0x2A2000
	0x03E84A64 LDR X0, [X0 + 0x150]
	0x03E84A68 BL 0x1C16CF4
	0x03E84A6C ADRP X0, 0x2E8000
	0x03E84A70 LDR X0, [X0 + 0xEE8]
	0x03E84A74 BL 0x1C16CF4
	0x03E84A78 ADRP X0, 0x2A1000
	0x03E84A7C LDR X0, [X0 + 0xA30]
	0x03E84A80 BL 0x1C16CF4
	0x03E84A84 ADRP X0, 0x2B6000
	0x03E84A88 LDR X0, [X0 + 0x608]
	0x03E84A8C BL 0x1C16CF4
	0x03E84A90 ADRP X0, 0x2E8000
	0x03E84A94 LDR X0, [X0 + 0xEF0]
	0x03E84A98 BL 0x1C16CF4
	0x03E84A9C ADRP X0, 0x2E8000
	0x03E84AA0 LDR X0, [X0 + 0xEF8]
	0x03E84AA4 BL 0x1C16CF4
	0x03E84AA8 ADRP X0, 0x27A000
	0x03E84AAC LDR X0, [X0 + 0x120]
	0x03E84AB0 BL 0x1C16CF4
	0x03E84AB4 ADRP X0, 0x2E8000
	0x03E84AB8 LDR X0, [X0 + 0xE30]
	0x03E84ABC BL 0x1C16CF4
	0x03E84AC0 MOVZ W8, 0x1
	0x03E84AC4 STRB W8, [X21 + 0xDFC]
	0x03E84AC8 LDR X0, [X19]
	0x03E84ACC STR W31, [X31 + 0x14]
	0x03E84AD0 STR X31, [X31 + 0x8]
	0x03E84AD4 STR W31, [X31 + 0x4]
	0x03E84AD8 BL 0x1C16F10
	0x03E84ADC MOV X19, X0
	0x03E84AE0 BL 0x3E83C9C
	0x03E84AE4 LDR X0, [X25]
	0x03E84AE8 MOVZ W1, 0x2
	0x03E84AEC STR X31, [X31 + 0x18]
	0x03E84AF0 BL 0x1C16D6C
	0x03E84AF4 CBZ X0, 0x3E852F4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x565000
	006 Move W8, [X21+3571]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x2E9000
	014 Move X0, [X0+3472]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+3571], W8
	018 Compare X20, 0
	019 JumpIfEqual {76}
	020 Move X8, 0x2E9000
	021 Move X8, [X8+3472]
	022 Move X9, [X20]
	023 Move X8, [X8]
	024 NotImplemented "Instruction CMP not yet implemented."
	025 NotImplemented "Instruction CSEL not yet implemented."
	026 Compare X20, 0
	027 JumpIfEqual {82}
	028 Move X0, [X19+64]
	029 Compare X0, 0
	030 JumpIfEqual {82}
	031 Move X1, [X20+64]
	032 Move W2, 3
	033 Move X3, X31
	034 Call String.Equals, X0, X1, X2
	035 Move TEMP, X0
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfNotEqual {76}
	039 Move X0, [X19+120]
	040 Compare X0, 0
	041 JumpIfEqual {82}
	042 Move X1, [X20+120]
	043 Move W2, 2
	044 Move X3, X31
	045 Call String.Equals, X0, X1, X2
	046 Move TEMP, X0
	047 And TEMP, TEMP, 1
	048 Compare TEMP, 1
	049 JumpIfNotEqual {76}
	050 Move X0, [X19+72]
	051 Compare X0, 0
	052 JumpIfEqual {82}
	053 Move X1, [X20+72]
	054 Move W2, 2
	055 Move X3, X31
	056 Call String.Equals, X0, X1, X2
	057 Move TEMP, X0
	058 And TEMP, TEMP, 1
	059 Compare TEMP, 1
	060 JumpIfNotEqual {76}
	061 Move X0, [X19+40]
	062 Compare X0, 0
	063 JumpIfEqual {82}
	064 Move X1, [X20+40]
	065 Move W2, 3
	066 Move X3, X31
	067 Call String.Equals, X0, X1, X2
	068 Move TEMP, X0
	069 And TEMP, TEMP, 1
	070 Compare TEMP, 1
	071 JumpIfNotEqual {76}
	072 Move W8, [X19+128]
	073 Move W9, [X20+128]
	074 NotImplemented "Instruction CMP not yet implemented."
	075 NotImplemented "Instruction CSET not yet implemented."
	076 Move W0, W31
	077 Move X20, [X31+16]
	078 Move X19, [X31+24]
	079 Move X30, [X31+32]
	080 Move X21, [X31+40]
	081 Return X0
	082 Call 0x1C17F20

Method: System.Int32 GetHashCode()

Disassembly:
	0x03E84AF8 LDR W8, [X0 + 0x18]
	0x03E84AFC MOV X21, X0
	0x03E84B00 CBZ W8, 0x3E852F8
	0x03E84B04 MOVZ W9, 0x2C
	0x03E84B08 CMP W8, 0x1
	0x03E84B0C STRH W9, [X21 + 0x20]
	0x03E84B10 B.EQ 0x3E852F8
	0x03E84B14 ADRP X9, 0x276000
	0x03E84B18 LDR X9, [X9 + 0x248]
	0x03E84B1C MOVZ W8, 0x3B
	0x03E84B20 STRH W8, [X21 + 0x22]
	0x03E84B24 ADRP X22, 0x2E8000
	0x03E84B28 LDR X0, [X9]
	0x03E84B2C LDR W8, [X0 + 0xE0]
	0x03E84B30 LDR X22, [X22 + 0xE98]
	0x03E84B34 CBNZ W8, 0x3E84B3C
	0x03E84B38 BL 0x1C16DFC
	0x03E84B3C MOV X0, X20
	0x03E84B40 MOV X1, X21
	0x03E84B44 MOV X2, X31
	0x03E84B48 BL 0x3E6A25C
	0x03E84B4C LDR X1, [X22]
	0x03E84B50 BL 0x21E2B88
	0x03E84B54 CBZ X0, 0x3E852F4
	0x03E84B58 LDR W8, [X0 + 0x18]
	0x03E84B5C MOV X20, X0
	0x03E84B60 CMP W8, 0x1
	0x03E84B64 B.LT 0x3E852BC
	0x03E84B68 ADRP X27, 0x297000
	0x03E84B6C ADRP X28, 0x2B9000
	0x03E84B70 ADRP X26, 0x2E8000
	0x03E84B74 ADRP X23, 0x270000
	0x03E84B78 LDR X27, [X27 + 0xB58]
	0x03E84B7C LDR X28, [X28 + 0x7C8]
	0x03E84B80 LDR X26, [X26 + 0xE30]
	0x03E84B84 LDR X23, [X23 + 0x9F0]
	0x03E84B88 MOV W21, W31
	0x03E84B8C LDR X2, [X27]
	0x03E84B90 MOV X0, X20
	0x03E84B94 MOV W1, W21
	0x03E84B98 BL 0x301BCCC
	0x03E84B9C CBZ X0, 0x3E852F4
	0x03E84BA0 MOV X1, X31
	0x03E84BA4 BL 0x322B8DC
	0x03E84BA8 CBZ X0, 0x3E852F4
	0x03E84BAC LDR W8, [X0 + 0x10]
	0x03E84BB0 MOV X22, X0
	0x03E84BB4 CBZ W8, 0x3E850D0
	0x03E84BB8 MOVZ W1, 0x3D
	0x03E84BBC MOV X0, X22
	0x03E84BC0 MOV X2, X31
	0x03E84BC4 BL 0x322BD98
	0x03E84BC8 CBZ W0, 0x3E84C0C
	0x03E84BCC MOV W24, W0
	0x03E84BD0 ADDS W31, W0, 0x1
	0x03E84BD4 B.NE 0x3E84C28
	0x03E84BD8 LDR X8, [X31 + 0x18]
	0x03E84BDC CBZ X8, 0x3E850D0
	0x03E84BE0 LDR X1, [X28]
	0x03E84BE4 MOVZ W2, 0x3
	0x03E84BE8 MOV X0, X22
	0x03E84BEC MOV X3, X31
	0x03E84BF0 BL 0x322697C
	0x03E84BF4 TBZ X0, 0x0, 0x3E84F60
	0x03E84BF8 LDR X0, [X31 + 0x18]
	0x03E84BFC CBZ X0, 0x3E852F4
	0x03E84C00 LDR X1, [X26]
	0x03E84C04 BL 0x3E829EC
	0x03E84C08 B 0x3E850D0
	0x03E84C0C LDR X1, [X31 + 0x18]
	0x03E84C10 CBZ X1, 0x3E850D0
	0x03E84C14 CBZ X19, 0x3E852F4
	0x03E84C18 MOV X0, X19
	0x03E84C1C BL 0x3E8420C
	0x03E84C20 STR X31, [X31 + 0x18]
	0x03E84C24 B 0x3E850D0
	0x03E84C28 MOV X0, X22
	0x03E84C2C MOV W1, W31
	0x03E84C30 MOV W2, W24
	0x03E84C34 MOV X3, X31
	0x03E84C38 MOV X29, X23
	0x03E84C3C BL 0x3228DE4
	0x03E84C40 LDR X8, [X25]
	0x03E84C44 MOV X23, X0
	0x03E84C48 MOVZ W1, 0x1
	0x03E84C4C MOV X0, X8
	0x03E84C50 BL 0x1C16D6C
	0x03E84C54 CBZ X0, 0x3E852F4
	0x03E84C58 LDR W8, [X0 + 0x18]
	0x03E84C5C MOV X1, X0
	0x03E84C60 CBZ W8, 0x3E852F8
	0x03E84C64 MOVZ W8, 0x20
	0x03E84C68 STRH W8, [X1 + 0x20]
	0x03E84C6C CBZ X23, 0x3E852F4
	0x03E84C70 MOV X0, X23
	0x03E84C74 MOV X2, X31
	0x03E84C78 BL 0x322BC58
	0x03E84C7C LDR W8, [X22 + 0x10]
	0x03E84C80 MOV X23, X0
	0x03E84C84 SUB W8, W8, 0x1
	0x03E84C88 CMP W24, W8
	0x03E84C8C B.GE 0x3E84CE4
	0x03E84C90 ADD W1, W24, 0x1

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0x565000
	009 Move X23, 0x27D000
	010 Move W8, [X20+3572]
	011 Move X23, [X23+752]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0x2E9000
	018 Move X0, [X0+3472]
	019 Call 0x1C17CF4
	020 Move X0, 0x27D000
	021 Move X0, [X0+752]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X20+3572], W8
	025 Move X0, [X23]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {30}
	029 Call 0x1C17DFC
	030 Move X24, 0x55D000
	031 Move W8, [X24+1203]
	032 Compare W8, 0
	033 JumpIfNotEqual {39}
	034 Move X0, 0x27D000
	035 Move X0, [X0+752]
	036 Call 0x1C17CF4
	037 Move W8, 1
	038 Move [X24+1203], W8
	039 Move X0, [X23]
	040 Move W8, [X0+224]
	041 Compare W8, 0
	042 JumpIfNotEqual {45}
	043 Call 0x1C17DFC
	044 Move X0, [X23]
	045 Move X8, [X0+184]
	046 Move X0, [X8+8]
	047 Compare X0, 0
	048 JumpIfEqual {134}
	049 Move X8, [X0]
	050 Move X1, [X19+64]
	051 Move X9, [X8+504]
	052 Move X2, [X8+512]
	053 NotImplemented "Instruction BLR not yet implemented."
	054 Move X8, [X19+120]
	055 Compare X8, 0
	056 JumpIfEqual {134}
	057 Move X9, [X8]
	058 Move W20, W0
	059 Move X0, X8
	060 Move X10, [X9+344]
	061 Move X1, [X9+352]
	062 NotImplemented "Instruction BLR not yet implemented."
	063 Move X8, [X19+72]
	064 Compare X8, 0
	065 JumpIfEqual {134}
	066 Move X9, [X8]
	067 Move W21, W0
	068 Move X0, X8
	069 Move X10, [X9+344]
	070 Move X1, [X9+352]
	071 NotImplemented "Instruction BLR not yet implemented."
	072 Move W8, [X24+1203]
	073 Move W22, W0
	074 Compare W8, 0
	075 JumpIfNotEqual {81}
	076 Move X0, 0x27D000
	077 Move X0, [X0+752]
	078 Call 0x1C17CF4
	079 Move W8, 1
	080 Move [X24+1203], W8
	081 Move X0, [X23]
	082 Move W8, [X0+224]
	083 Compare W8, 0
	084 JumpIfNotEqual {87}
	085 Call 0x1C17DFC
	086 Move X0, [X23]
	087 Move X8, [X0+184]
	088 Move X0, [X8+8]
	089 Compare X0, 0
	090 JumpIfEqual {134}
	091 Move X8, [X0]
	092 Move X1, [X19+40]
	093 Move X23, 0x2E9000
	094 Move X9, [X8+504]
	095 Move X2, [X8+512]
	096 Move X23, [X23+3472]
	097 NotImplemented "Instruction BLR not yet implemented."
	098 Move X8, [X23]
	099 Move W23, [X19+128]
	100 Move W19, W0
	101 Move W9, [X8+224]
	102 Compare W9, 0
	103 JumpIfNotEqual {106}
	104 Move X0, X8
	105 Call 0x1C17DFC
	106 Move W8, W21
	107 ShiftRight W8, 19
	108 And W8, W8, 0x3FFFF
	109 Move W9, W22
	110 ShiftRight W9, 6
	111 And W9, W9, 31
	112 Or W8, W8, W21
	113 Move W10, W19
	114 ShiftRight W10, 25
	115 And W10, W10, 0xFFFFFF
	116 Move W11, W23
	117 ShiftRight W11, 12
	118 And W11, W11, 2047
	119 Or W9, W9, W22
	120 Xor W8, W8, W20
	121 Or W10, W10, W19
	122 Xor W8, W8, W9
	123 Or W9, W11, W23
	124 Move X20, [X31+48]
	125 Move X19, [X31+56]
	126 Move X22, [X31+32]
	127 Move X21, [X31+40]
	128 Move X24, [X31+16]
	129 Move X23, [X31+24]
	130 Xor W8, W8, W10
	131 Xor W0, W8, W9
	132 Move X30, [X31+64]
	133 Return X0
	134 Call 0x1C17F20

Method: System.String ToString()

Disassembly:
	0x03E84C94 MOV X0, X22
	0x03E84C98 MOV X2, X31

ISIL:
	001 Move X1, X31
	002 Call Cookie.ToRequestString, X0, X1
	003 Return X0

