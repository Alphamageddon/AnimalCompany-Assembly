Type: WebSocketSharp.Server.WebSocketSessionManager/<get_InactiveIDs>d__21

Method: System.Void .ctor(System.Int32 <>1__state)

Disassembly:
	0x03EAC934 BL 0x1C16F18
	0x03EAC938 MOVZ W0, 0x8
	0x03EAC93C BL 0x3EB1AF0
	0x03EAC940 LDR X8, [X20]
	0x03EAC944 STR X8, [X0]
	0x03EAC948 ADRP X1, 0x8000
	0x03EAC94C ADD X1, X1, 0xE58
	0x03EAC950 MOV X2, X31
	0x03EAC954 BL 0x3EB1B00
	0x03EAC958 BL 0x1C16F20
	0x03EAC95C BL 0x1C16F20
	0x03EAC960 BL 0x1C16F20
	0x03EAC964 B 0x3EAC978
	0x03EAC968 B 0x3EAC978
	0x03EAC96C MOV X22, X0
	0x03EAC970 B 0x3EAC83C
	0x03EAC974 B 0x3EAC978

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W20, W1
	005 Move X1, X31
	006 Move X19, X0
	007 Call Object..ctor, X0
	008 Move X0, X31
	009 Move [X19+16], W20
	010 Call Thread.get_CurrentThread
	011 Compare X0, 0
	012 JumpIfEqual {20}
	013 Move X1, X31
	014 Call Thread.get_ManagedThreadId, X0
	015 Move [X19+32], W0
	016 Move X20, [X31+16]
	017 Move X19, [X31+24]
	018 Move X30, [X31+32]
	019 Return 
	020 Call 0x1C17F20

Method: System.Void System.IDisposable.Dispose()

Disassembly:
	0x03EB0BB0 MOV X19, X0
	0x03EB0BB4 ADRP X0, 0x243000
	0x03EB0BB8 LDR X0, [X0 + 0x5B0]
	0x03EB0BBC BL 0x1C16D08
	0x03EB0BC0 BL 0x1C16F10
	0x03EB0BC4 MOV X1, X19
	0x03EB0BC8 MOV X2, X31

ISIL:
	001 Move W8, [X0+16]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 Add W31, W8, 3
	004 Call <get_InactiveIDs>d__21.<>m__Finally1, X0
	005 Return 
	006 Return 

Method: System.Boolean MoveNext()

Disassembly:
	0x03EB0BCC MOV X20, X0
	0x03EB0BD0 BL 0x337DF1C
	0x03EB0BD4 ADRP X0, 0x2BE000
	0x03EB0BD8 LDR X0, [X0 + 0x6C8]
	0x03EB0BDC BL 0x1C16D08
	0x03EB0BE0 MOV X1, X0
	0x03EB0BE4 MOV X0, X20
	0x03EB0BE8 BL 0x1C16DEC
	0x03EB0BEC LDR X0, [X0 + 0x50]
	0x03EB0BF0 RET
	0x03EB0BF4 STP X30, X21, [X31 - 0x20]!
	0x03EB0BF8 STP X20, X19, [X31 + 0x10]
	0x03EB0BFC ADRP X21, 0x538000
	0x03EB0C00 LDRB W8, [X21 + 0xF95]
	0x03EB0C04 MOV X20, X1
	0x03EB0C08 MOV X19, X0
	0x03EB0C0C TBNZ X8, 0x0, 0x3EB0C30
	0x03EB0C10 ADRP X0, 0x2BE000
	0x03EB0C14 LDR X0, [X0 + 0x6D0]
	0x03EB0C18 BL 0x1C16CF4
	0x03EB0C1C ADRP X0, 0x2BE000
	0x03EB0C20 LDR X0, [X0 + 0x6D8]
	0x03EB0C24 BL 0x1C16CF4
	0x03EB0C28 MOVZ W8, 0x1
	0x03EB0C2C STRB W8, [X21 + 0xF95]
	0x03EB0C30 LDR X21, [X19 + 0x38]
	0x03EB0C34 CBZ X21, 0x3EB0C68
	0x03EB0C38 CBZ X20, 0x3EB0D00
	0x03EB0C3C LDR X8, [X20]
	0x03EB0C40 MOV X0, X20
	0x03EB0C44 LDP X9, X1, [X8 + 0x1E8]
	0x03EB0C48 BLR X9
	0x03EB0C4C LDR X8, [X21 + 0x40]
	0x03EB0C50 LDR X9, [X21 + 0x18]
	0x03EB0C54 LDR X2, [X21 + 0x28]
	0x03EB0C58 MOV X1, X0
	0x03EB0C5C MOV X0, X8
	0x03EB0C60 BLR X9
	0x03EB0C64 TBZ X0, 0x0, 0x3EB0CE0
	0x03EB0C68 LDR X8, [X19 + 0x18]
	0x03EB0C6C CBZ X8, 0x3EB0CF0
	0x03EB0C70 CBZ X20, 0x3EB0D00
	0x03EB0C74 LDR X8, [X20]
	0x03EB0C78 MOV X0, X20
	0x03EB0C7C LDP X9, X1, [X8 + 0x178]
	0x03EB0C80 BLR X9
	0x03EB0C84 LDR X8, [X20]
	0x03EB0C88 MOV X21, X0
	0x03EB0C8C MOV X0, X20
	0x03EB0C90 LDR X9, [X8 + 0x278]
	0x03EB0C94 LDR X1, [X8 + 0x280]
	0x03EB0C98 BLR X9
	0x03EB0C9C CBZ X0, 0x3EB0D00
	0x03EB0CA0 MOV X1, X31
	0x03EB0CA4 BL 0x3E6E544
	0x03EB0CA8 LDR X8, [X19 + 0x18]
	0x03EB0CAC CBZ X8, 0x3EB0D00
	0x03EB0CB0 MOV X2, X0
	0x03EB0CB4 LDR X9, [X8 + 0x18]
	0x03EB0CB8 LDR X0, [X8 + 0x40]
	0x03EB0CBC LDR X3, [X8 + 0x28]
	0x03EB0CC0 MOV X1, X21
	0x03EB0CC4 BLR X9
	0x03EB0CC8 ADRP X8, 0x2BE000
	0x03EB0CCC LDR X8, [X8 + 0x6D8]
	0x03EB0CD0 ANDS W31, W0, 0x1
	0x03EB0CD4 LDR X8, [X8]
	0x03EB0CD8 CSEL X0, X31, X8, NE
	0x03EB0CDC B 0x3EB0CF4
	0x03EB0CE0 ADRP X8, 0x2BE000
	0x03EB0CE4 LDR X8, [X8 + 0x6D0]
	0x03EB0CE8 LDR X0, [X8]
	0x03EB0CEC B 0x3EB0CF4
	0x03EB0CF0 MOV X0, X31
	0x03EB0CF4 LDP X20, X19, [X31 + 0x10]
	0x03EB0CF8 LDP X30, X21, [X31], #0x20
	0x03EB0CFC RET
	0x03EB0D00 BL 0x1C16F20
	0x03EB0D04 STR X30, [X31 - 0x20]!
	0x03EB0D08 STP X20, X19, [X31 + 0x10]
	0x03EB0D0C LDR X1, [X0 + 0x28]
	0x03EB0D10 CBZ X1, 0x3EB0D44
	0x03EB0D14 MOV X19, X0
	0x03EB0D18 LDR X0, [X0 + 0x48]
	0x03EB0D1C CBZ X0, 0x3EB0D50
	0x03EB0D20 MOV X20, X2
	0x03EB0D24 BL 0x3EAD578
	0x03EB0D28 LDR X8, [X19]
	0x03EB0D2C MOV X0, X19
	0x03EB0D30 MOV X1, X20
	0x03EB0D34 LDP X20, X19, [X31 + 0x10]
	0x03EB0D38 LDP X3, X2, [X8 + 0x1C8]
	0x03EB0D3C LDR X30, [X31], #0x20
	0x03EB0D40 BR X3
	0x03EB0D44 LDP X20, X19, [X31 + 0x10]
	0x03EB0D48 LDR X30, [X31], #0x20
	0x03EB0D4C RET
	0x03EB0D50 BL 0x1C16F20
	0x03EB0D54 LDR X8, [X0]
	0x03EB0D58 MOV X1, X2
	0x03EB0D5C LDP X3, X8, [X8 + 0x1D8]
	0x03EB0D60 MOV X2, X8
	0x03EB0D64 BR X3
	0x03EB0D68 LDR X8, [X0]
	0x03EB0D6C MOV X1, X2
	0x03EB0D70 LDP X3, X8, [X8 + 0x1E8]
	0x03EB0D74 MOV X2, X8
	0x03EB0D78 BR X3
	0x03EB0D7C STR X30, [X31 - 0x20]!
	0x03EB0D80 STP X20, X19, [X31 + 0x10]
	0x03EB0D84 ADRP X20, 0x538000
	0x03EB0D88 LDRB W8, [X20 + 0xF96]
	0x03EB0D8C MOV X19, X0
	0x03EB0D90 TBNZ X8, 0x0, 0x3EB0DA8
	0x03EB0D94 ADRP X0, 0x244000
	0x03EB0D98 LDR X0, [X0 + 0x9F0]
	0x03EB0D9C BL 0x1C16CF4
	0x03EB0DA0 MOVZ W8, 0x1
	0x03EB0DA4 STRB W8, [X20 + 0xF96]
	0x03EB0DA8 LDR X0, [X19 + 0x48]
	0x03EB0DAC CBZ X0, 0x3EB0E18
	0x03EB0DB0 MOV X1, X19
	0x03EB0DB4 BL 0x3EAD438
	0x03EB0DB8 STR X0, [X19 + 0x28]
	0x03EB0DBC CBZ X0, 0x3EB0DFC
	0x03EB0DC0 ADRP X8, 0x244000
	0x03EB0DC4 LDR X8, [X8 + 0x9F0]
	0x03EB0DC8 LDR X0, [X8]

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+112], X30
	003 Move [X31+120], X0
	004 Move [X31+128], X20
	005 Move [X31+136], X19
	006 Move X20, 0x539000
	007 Move W8, [X20+3970]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {33}
	013 Move X0, 0x2BF000
	014 Move X0, [X0+1576]
	015 Call 0x1C17CF4
	016 Move X0, 0x2BF000
	017 Move X0, [X0+1584]
	018 Call 0x1C17CF4
	019 Move X0, 0x2BF000
	020 Move X0, [X0+1592]
	021 Call 0x1C17CF4
	022 Move X0, 0x2BF000
	023 Move X0, [X0+1600]
	024 Call 0x1C17CF4
	025 Move X0, 0x2BF000
	026 Move X0, [X0+1608]
	027 Call 0x1C17CF4
	028 Move X0, 0x2BF000
	029 Move X0, [X0+1000]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X20+3970], W8
	033 Add X8, X31, 120
	034 Move [X31+104], X8
	035 Move W8, [X19+16]
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Compare W8, 0
	038 JumpIfNotEqual {85}
	039 Move TEMP, 0
	040 Not TEMP
	041 Move W8, TEMP
	042 Move [X19+16], W8
	043 Move X20, 0x2BF000
	044 Move X20, [X20+1000]
	045 Move X19, [X19+40]
	046 Move X0, [X20]
	047 Move W8, [X0+224]
	048 Compare W8, 0
	049 JumpIfNotEqual {51}
	050 Call 0x1C17DFC
	051 Compare X19, 0
	052 JumpIfEqual {83}
	053 Move X8, [X20]
	054 Move X8, [X8+184]
	055 Move X1, [X8]
	056 Move X0, X19
	057 Call WebSocketSessionManager.broadping, X0, X1
	058 Compare X0, 0
	059 JumpIfEqual {84}
	060 Move X8, 0x2BF000
	061 Move X8, [X8+1576]
	062 Move X1, [X8]
	063 Add X8, X31, 8
	064 Call Dictionary`2<Object, Boolean>.GetEnumerator, X0
	065 NotImplemented "Instruction LDUR not yet implemented."
	066 NotImplemented "Instruction LDUR not yet implemented."
	067 Move X8, [X31+40]
	068 Move X19, [X31+120]
	069 Move TEMP, 2
	070 Not TEMP
	071 Move W9, TEMP
	072 Move [X31+48], V0
	073 Move [X31+56], V1
	074 Move [X31+80], X8
	075 Move [X19+80], X8
	076 Move [X19+48], V0
	077 Move [X19+56], V1
	078 Move [X19+16], W9
	079 Move TEMP, 2
	080 Not TEMP
	081 Move W8, TEMP
	082 Move [X19+16], W8
	083 Call 0x1C17F20
	084 Call 0x1C17F20
	085 Move W0, W31
	086 Move X8, [X19+64]
	087 Move X9, [X19+72]
	088 And W31, W9, 255
	089 Move [X19+88], X8
	090 Move [X19+96], X9
	091 Move [X19+88], X31
	092 Move [X19+96], X31
	093 Move X8, 0x2BF000
	094 Move X8, [X8+1584]
	095 Add X0, X19, 48
	096 Move X1, [X8]
	097 Call Enumerator<Object, Boolean>.MoveNext, X0
	098 Move X19, [X31+120]
	099 Move TEMP, X0
	100 And TEMP, TEMP, 1
	101 Compare TEMP, 1
	102 JumpIfEqual {86}
	103 Move X0, X19
	104 Call <get_InactiveIDs>d__21.<>m__Finally1, X0
	105 Move X8, [X31+120]
	106 Move W0, W31
	107 NotImplemented "Instruction MOVI not yet implemented."
	108 Move [X8+80], X31
	109 Move [X8+48], V0
	110 Move [X8+56], V0
	111 Move W0, 1
	112 Move [X19+24], X8
	113 Move [X19+16], W0
	114 Move X20, [X31+128]
	115 Move X19, [X31+136]
	116 Move X30, [X31+112]
	117 Add X31, X31, 144
	118 Return X0
	119 NotImplemented "Instruction CMP not yet implemented."
	120 Call 0x3EB2AD0
	121 Move X19, [X0]
	122 Move [X31+96], X19
	123 Call 0x3EB2AE0
	124 Compare X19, 0
	125 JumpIfEqual {85}
	126 Add X8, X31, 96
	127 Add X0, X8, 8
	128 Call 0x1C17868
	129 Move X0, X19
	130 Call 0x1C17F18
	131 Compare X19, 0
	132 JumpIfNotEqual {134}
	133 Call 0x1D2D690
	134 Move X0, [X31+120]
	135 Move W8, [X0+16]
	136 NotImplemented "Instruction CMP not yet implemented."
	137 Add W31, W8, 3
	138 Call <get_InactiveIDs>d__21.<>m__Finally1, X0
	139 Move X0, X19
	140 Call 0x1C17F18
	141 Call 0x1991590

Method: System.Void <>m__Finally1()

Disassembly:
	0x03EB0DCC LDR W8, [X0 + 0xE0]
	0x03EB0DD0 CBNZ W8, 0x3EB0DD8
	0x03EB0DD4 BL 0x1C16DFC
	0x03EB0DD8 MOV X0, X31
	0x03EB0DDC BL 0x3361584
	0x03EB0DE0 LDR X8, [X19]
	0x03EB0DE4 STR X0, [X19 + 0x50]
	0x03EB0DE8 MOV X0, X19
	0x03EB0DEC LDP X20, X19, [X31 + 0x10]
	0x03EB0DF0 LDP X2, X1, [X8 + 0x1F8]
	0x03EB0DF4 LDR X30, [X31], #0x20
	0x03EB0DF8 BR X2
	0x03EB0DFC LDR X0, [X19 + 0x58]
	0x03EB0E00 CBZ X0, 0x3EB0E18
	0x03EB0E04 LDP X20, X19, [X31 + 0x10]
	0x03EB0E08 MOVZ W1, 0x3E9
	0x03EB0E0C MOV X2, X31
	0x03EB0E10 LDR X30, [X31], #0x20
	0x03EB0E14 B 0x3E77028
	0x03EB0E18 BL 0x1C16F20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x539000
	006 Move X20, 0x2BF000
	007 Move W8, [X21+3971]
	008 Move X20, [X20+1616]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x2BF000
	015 Move X0, [X0+1616]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+3971], W8
	019 Move TEMP, 0
	020 Not TEMP
	021 Move W8, TEMP
	022 Move [X19+16], W8
	023 Move X1, [X20]
	024 Add X0, X19, 48
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Move X21, [X31+40]
	029 Call Enumerator<Object, Boolean>.Dispose, X0
	030 Return 

Method: System.String System.Collections.Generic.IEnumerator<System.String>.get_Current()

Disassembly:
	0x03EB0E1C STR X30, [X31 - 0x20]!
	0x03EB0E20 STP X20, X19, [X31 + 0x10]

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Void System.Collections.IEnumerator.Reset()

Disassembly:
	0x03EB0E24 LDR X0, [X0 + 0x58]
	0x03EB0E28 CBZ X0, 0x3EB0E3C
	0x03EB0E2C LDP X20, X19, [X31 + 0x10]
	0x03EB0E30 MOV X1, X31
	0x03EB0E34 LDR X30, [X31], #0x20
	0x03EB0E38 B 0x3E76E70
	0x03EB0E3C ADRP X0, 0x2BE000
	0x03EB0E40 LDR X0, [X0 + 0x6E0]
	0x03EB0E44 BL 0x1C16D08
	0x03EB0E48 MOV X19, X0
	0x03EB0E4C ADRP X0, 0x243000
	0x03EB0E50 LDR X0, [X0 + 0x5B0]
	0x03EB0E54 BL 0x1C16D08
	0x03EB0E58 BL 0x1C16F10

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0x244000
	004 Move X0, [X0+2880]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X1, X31
	008 Move X19, X0
	009 Call NotSupportedException..ctor, X0
	010 Move X0, 0x2BF000
	011 Move X0, [X0+1632]
	012 Call 0x1C17D08
	013 Move X1, X0
	014 Move X0, X19
	015 Call 0x1C17DEC

Method: System.Object System.Collections.IEnumerator.get_Current()

Disassembly:
	0x03EB0E5C MOV X1, X19
	0x03EB0E60 MOV X2, X31

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Collections.Generic.IEnumerator`1<System.String> System.Collections.Generic.IEnumerable<System.String>.GetEnumerator()

Disassembly:
	0x03EB0E64 MOV X20, X0
	0x03EB0E68 BL 0x337DF1C
	0x03EB0E6C ADRP X0, 0x2BE000
	0x03EB0E70 LDR X0, [X0 + 0x6E8]
	0x03EB0E74 BL 0x1C16D08
	0x03EB0E78 MOV X1, X0
	0x03EB0E7C MOV X0, X20
	0x03EB0E80 BL 0x1C16DEC
	0x03EB0E84 STR X30, [X31 - 0x20]!
	0x03EB0E88 STP X20, X19, [X31 + 0x10]
	0x03EB0E8C LDR X0, [X0 + 0x58]
	0x03EB0E90 CBZ X0, 0x3EB0EA4
	0x03EB0E94 LDP X20, X19, [X31 + 0x10]
	0x03EB0E98 MOV X3, X31
	0x03EB0E9C LDR X30, [X31], #0x20
	0x03EB0EA0 B 0x3E77108
	0x03EB0EA4 ADRP X0, 0x2BE000
	0x03EB0EA8 LDR X0, [X0 + 0x6E0]
	0x03EB0EAC BL 0x1C16D08
	0x03EB0EB0 MOV X19, X0
	0x03EB0EB4 ADRP X0, 0x243000
	0x03EB0EB8 LDR X0, [X0 + 0x5B0]
	0x03EB0EBC BL 0x1C16D08
	0x03EB0EC0 BL 0x1C16F10
	0x03EB0EC4 MOV X1, X19
	0x03EB0EC8 MOV X2, X31
	0x03EB0ECC MOV X20, X0
	0x03EB0ED0 BL 0x337DF1C
	0x03EB0ED4 ADRP X0, 0x2BE000
	0x03EB0ED8 LDR X0, [X0 + 0x6F0]
	0x03EB0EDC BL 0x1C16D08
	0x03EB0EE0 MOV X1, X0
	0x03EB0EE4 MOV X0, X20
	0x03EB0EE8 BL 0x1C16DEC
	0x03EB0EEC STR X30, [X31 - 0x20]!
	0x03EB0EF0 STP X20, X19, [X31 + 0x10]
	0x03EB0EF4 LDR X0, [X0 + 0x58]
	0x03EB0EF8 CBZ X0, 0x3EB0F0C
	0x03EB0EFC LDP X20, X19, [X31 + 0x10]
	0x03EB0F00 MOV X3, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x539000
	005 Move W8, [X20+3972]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x2BF000
	012 Move X0, [X0+1152]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+3972], W8
	016 Move W8, [X19+16]
	017 Add W31, W8, 2
	018 Move W20, [X19+32]
	019 Move X0, X31
	020 Call Thread.get_CurrentThread
	021 Compare X0, 0
	022 JumpIfEqual {44}
	023 Move X1, X31
	024 Call Thread.get_ManagedThreadId, X0
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move [X19+16], W31
	027 Move X8, 0x2BF000
	028 Move X8, [X8+1152]
	029 Move X0, [X8]
	030 Call 0x1C17F10
	031 Move W1, W31
	032 Move X20, X0
	033 Call <get_InactiveIDs>d__21..ctor, X0, X1
	034 Compare X20, 0
	035 JumpIfEqual {44}
	036 Move X8, [X19+40]
	037 Move X19, X20
	038 Move [X20+40], X8
	039 Move X0, X19
	040 Move X20, [X31+16]
	041 Move X19, [X31+24]
	042 Move X30, [X31+32]
	043 Return X0
	044 Call 0x1C17F20

Method: System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()

Disassembly:
	0x03EB0F04 LDR X30, [X31], #0x20

ISIL:
	001 Call <get_InactiveIDs>d__21.System.Collections.Generic.IEnumerable<System.String>.GetEnumerator, X0
	002 Return X0

