Type: WebSocketSharp.Server.WebSocketSessionManager/<get_ActiveIDs>d__15

Method: System.Void .ctor(System.Int32 <>1__state)

Disassembly:
	0x03EAC588 LDR X1, [X26]
	0x03EAC58C LDRH W9, [X8 + 0x12E]
	0x03EAC590 CBZ X9, 0x3EAC5B4
	0x03EAC594 LDR X10, [X8 + 0xB0]
	0x03EAC598 ADD X10, X10, 0x8
	0x03EAC59C LDUR X11, [X10 - 0x8]
	0x03EAC5A0 CMP X11, X1
	0x03EAC5A4 B.EQ 0x3EAC5C4
	0x03EAC5A8 SUBS X9, X9, 0x1
	0x03EAC5AC ADD X10, X10, 0x10
	0x03EAC5B0 B.NE 0x3EAC59C
	0x03EAC5B4 MOV X0, X21
	0x03EAC5B8 MOV W2, W31
	0x03EAC5BC BL 0x1C5C788
	0x03EAC5C0 B 0x3EAC5D0
	0x03EAC5C4 LDRSW X9, [X10]
	0x03EAC5C8 ADD X8, X8, X9, 0x4, LSL

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W20, W1
	005 Move X1, X31
	006 Move X19, X0
	007 Call Object..ctor, X0
	008 Move X0, X31
	009 Move [X19+16], W20
	010 Call Thread.get_CurrentThread
	011 Compare X0, 0
	012 JumpIfEqual {20}
	013 Move X1, X31
	014 Call Thread.get_ManagedThreadId, X0
	015 Move [X19+32], W0
	016 Move X20, [X31+16]
	017 Move X19, [X31+24]
	018 Move X30, [X31+32]
	019 Return 
	020 Call 0x1C17F20

Method: System.Void System.IDisposable.Dispose()

Disassembly:
	0x03EB0858 MOV X1, X0
	0x03EB085C MOV X0, X19
	0x03EB0860 MOV X2, X31
	0x03EB0864 BL 0x330E100
	0x03EB0868 B 0x3EB08B0
	0x03EB086C ADRP X0, 0x24B000
	0x03EB0870 LDR X0, [X0 + 0x578]

ISIL:
	001 Move W8, [X0+16]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 Add W31, W8, 3
	004 Call <get_ActiveIDs>d__15.<>m__Finally1, X0
	005 Return 
	006 Return 

Method: System.Boolean MoveNext()

Disassembly:
	0x03EB0874 BL 0x1C16D08
	0x03EB0878 BL 0x1C16F10
	0x03EB087C MOV X19, X0
	0x03EB0880 ADRP X0, 0x26C000
	0x03EB0884 LDR X0, [X0 + 0x9B8]
	0x03EB0888 BL 0x1C16D08
	0x03EB088C MOV X20, X0
	0x03EB0890 ADRP X0, 0x24E000
	0x03EB0894 LDR X0, [X0 + 0x120]
	0x03EB0898 BL 0x1C16D08
	0x03EB089C MOV X2, X0
	0x03EB08A0 MOV X0, X19
	0x03EB08A4 MOV X1, X20
	0x03EB08A8 MOV X3, X31
	0x03EB08AC BL 0x330E16C
	0x03EB08B0 ADRP X0, 0x2BE000
	0x03EB08B4 LDR X0, [X0 + 0x6B0]
	0x03EB08B8 BL 0x1C16D08
	0x03EB08BC MOV X1, X0
	0x03EB08C0 MOV X0, X19
	0x03EB08C4 BL 0x1C16DEC
	0x03EB08C8 ADRP X0, 0x26C000
	0x03EB08CC LDR X0, [X0 + 0x9C0]
	0x03EB08D0 B 0x3EB08E0
	0x03EB08D4 BL 0x1C16F20
	0x03EB08D8 ADRP X0, 0x26C000
	0x03EB08DC LDR X0, [X0 + 0x9C8]
	0x03EB08E0 BL 0x1C16D08
	0x03EB08E4 MOV X19, X0
	0x03EB08E8 ADRP X0, 0x24B000
	0x03EB08EC LDR X0, [X0 + 0x578]
	0x03EB08F0 BL 0x1C16D08
	0x03EB08F4 BL 0x1C16F10
	0x03EB08F8 MOV X20, X0
	0x03EB08FC ADRP X0, 0x24E000
	0x03EB0900 LDR X0, [X0 + 0x120]
	0x03EB0904 BL 0x1C16D08
	0x03EB0908 MOV X2, X0
	0x03EB090C MOV X0, X20
	0x03EB0910 MOV X1, X19
	0x03EB0914 MOV X3, X31
	0x03EB0918 BL 0x330E16C
	0x03EB091C ADRP X0, 0x2BE000
	0x03EB0920 LDR X0, [X0 + 0x6B0]
	0x03EB0924 BL 0x1C16D08
	0x03EB0928 MOV X1, X0
	0x03EB092C MOV X0, X20
	0x03EB0930 BL 0x1C16DEC
	0x03EB0934 STP X30, X21, [X31 - 0x20]!
	0x03EB0938 STP X20, X19, [X31 + 0x10]
	0x03EB093C ADRP X21, 0x538000
	0x03EB0940 ADRP X20, 0x244000
	0x03EB0944 LDRB W8, [X21 + 0xF92]
	0x03EB0948 LDR X20, [X20 + 0x9F0]
	0x03EB094C MOV X19, X0
	0x03EB0950 TBNZ X8, 0x0, 0x3EB0968
	0x03EB0954 ADRP X0, 0x244000
	0x03EB0958 LDR X0, [X0 + 0x9F0]
	0x03EB095C BL 0x1C16CF4
	0x03EB0960 MOVZ W8, 0x1
	0x03EB0964 STRB W8, [X21 + 0xF92]
	0x03EB0968 MOV X0, X19
	0x03EB096C MOV X1, X31
	0x03EB0970 BL 0x33BDD8C
	0x03EB0974 LDR X0, [X20]
	0x03EB0978 LDR W8, [X0 + 0xE0]
	0x03EB097C CBNZ W8, 0x3EB0988
	0x03EB0980 BL 0x1C16DFC
	0x03EB0984 LDR X0, [X20]
	0x03EB0988 LDR X8, [X0 + 0xB8]
	0x03EB098C LDR X8, [X8 + 0x18]
	0x03EB0990 STR X8, [X19 + 0x50]
	0x03EB0994 LDP X20, X19, [X31 + 0x10]
	0x03EB0998 LDP X30, X21, [X31], #0x20
	0x03EB099C RET
	0x03EB09A0 LDR X0, [X0 + 0x10]
	0x03EB09A4 CBZ X0, 0x3EB09B4
	0x03EB09A8 LDR X8, [X0]
	0x03EB09AC LDP X2, X1, [X8 + 0x188]
	0x03EB09B0 BR X2
	0x03EB09B4 RET
	0x03EB09B8 LDR X0, [X0 + 0x10]
	0x03EB09BC CBZ X0, 0x3EB09CC
	0x03EB09C0 LDR X8, [X0]
	0x03EB09C4 LDP X2, X1, [X8 + 0x1F8]
	0x03EB09C8 BR X2
	0x03EB09CC RET
	0x03EB09D0 LDR X0, [X0 + 0x48]
	0x03EB09D4 RET
	0x03EB09D8 LDR X0, [X0 + 0x58]
	0x03EB09DC CBZ X0, 0x3EB09E8
	0x03EB09E0 MOV X1, X31
	0x03EB09E4 B 0x3E6F098
	0x03EB09E8 RET
	0x03EB09EC LDR X0, [X0 + 0x10]
	0x03EB09F0 RET
	0x03EB09F4 LDR X0, [X0 + 0x18]
	0x03EB09F8 RET
	0x03EB09FC STR X1, [X0 + 0x18]
	0x03EB0A00 RET
	0x03EB0A04 MOV X8, X0
	0x03EB0A08 LDR X0, [X0 + 0x58]
	0x03EB0A0C CBZ X0, 0x3EB0A18
	0x03EB0A10 MOV X1, X31
	0x03EB0A14 B 0x3E6E938
	0x03EB0A18 LDRB W0, [X8 + 0x20]
	0x03EB0A1C RET
	0x03EB0A20 MOV X8, X0
	0x03EB0A24 LDR X0, [X0 + 0x58]
	0x03EB0A28 CBZ X0, 0x3EB0A38
	0x03EB0A2C AND W1, W1, 0x1
	0x03EB0A30 MOV X2, X31
	0x03EB0A34 B 0x3E6E940
	0x03EB0A38 AND W9, W1, 0x1
	0x03EB0A3C STRB W9, [X8 + 0x20]
	0x03EB0A40 RET
	0x03EB0A44 LDR X0, [X0 + 0x28]
	0x03EB0A48 RET
	0x03EB0A4C LDRB W0, [X0 + 0x30]
	0x03EB0A50 RET
	0x03EB0A54 AND W8, W1, 0x1
	0x03EB0A58 STRB W8, [X0 + 0x30]
	0x03EB0A5C RET
	0x03EB0A60 LDR X0, [X0 + 0x38]
	0x03EB0A64 RET
	0x03EB0A68 STR X1, [X0 + 0x38]
	0x03EB0A6C RET
	0x03EB0A70 STR X30, [X31 - 0x20]!

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+112], X30
	003 Move [X31+120], X0
	004 Move [X31+128], X20
	005 Move [X31+136], X19
	006 Move X20, 0x539000
	007 Move W8, [X20+3967]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {33}
	013 Move X0, 0x2BF000
	014 Move X0, [X0+1576]
	015 Call 0x1C17CF4
	016 Move X0, 0x2BF000
	017 Move X0, [X0+1584]
	018 Call 0x1C17CF4
	019 Move X0, 0x2BF000
	020 Move X0, [X0+1592]
	021 Call 0x1C17CF4
	022 Move X0, 0x2BF000
	023 Move X0, [X0+1600]
	024 Call 0x1C17CF4
	025 Move X0, 0x2BF000
	026 Move X0, [X0+1608]
	027 Call 0x1C17CF4
	028 Move X0, 0x2BF000
	029 Move X0, [X0+1000]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X20+3967], W8
	033 Add X8, X31, 120
	034 Move [X31+104], X8
	035 Move W8, [X19+16]
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Compare W8, 0
	038 JumpIfNotEqual {85}
	039 Move TEMP, 0
	040 Not TEMP
	041 Move W8, TEMP
	042 Move [X19+16], W8
	043 Move X20, 0x2BF000
	044 Move X20, [X20+1000]
	045 Move X19, [X19+40]
	046 Move X0, [X20]
	047 Move W8, [X0+224]
	048 Compare W8, 0
	049 JumpIfNotEqual {51}
	050 Call 0x1C17DFC
	051 Compare X19, 0
	052 JumpIfEqual {83}
	053 Move X8, [X20]
	054 Move X8, [X8+184]
	055 Move X1, [X8]
	056 Move X0, X19
	057 Call WebSocketSessionManager.broadping, X0, X1
	058 Compare X0, 0
	059 JumpIfEqual {84}
	060 Move X8, 0x2BF000
	061 Move X8, [X8+1576]
	062 Move X1, [X8]
	063 Add X8, X31, 8
	064 Call Dictionary`2<Object, Boolean>.GetEnumerator, X0
	065 NotImplemented "Instruction LDUR not yet implemented."
	066 NotImplemented "Instruction LDUR not yet implemented."
	067 Move X8, [X31+40]
	068 Move X19, [X31+120]
	069 Move TEMP, 2
	070 Not TEMP
	071 Move W9, TEMP
	072 Move [X31+48], V0
	073 Move [X31+56], V1
	074 Move [X31+80], X8
	075 Move [X19+80], X8
	076 Move [X19+48], V0
	077 Move [X19+56], V1
	078 Move [X19+16], W9
	079 Move TEMP, 2
	080 Not TEMP
	081 Move W8, TEMP
	082 Move [X19+16], W8
	083 Call 0x1C17F20
	084 Call 0x1C17F20
	085 Move W0, W31
	086 Move X8, [X19+64]
	087 Move X9, [X19+72]
	088 And W31, W9, 255
	089 Move [X19+88], X8
	090 Move [X19+96], X9
	091 Move [X19+88], X31
	092 Move [X19+96], X31
	093 Move X8, 0x2BF000
	094 Move X8, [X8+1584]
	095 Add X0, X19, 48
	096 Move X1, [X8]
	097 Call Enumerator<Object, Boolean>.MoveNext, X0
	098 Move X19, [X31+120]
	099 Move TEMP, X0
	100 And TEMP, TEMP, 1
	101 Compare TEMP, 1
	102 JumpIfEqual {86}
	103 Move X0, X19
	104 Call <get_ActiveIDs>d__15.<>m__Finally1, X0
	105 Move X8, [X31+120]
	106 Move W0, W31
	107 NotImplemented "Instruction MOVI not yet implemented."
	108 Move [X8+80], X31
	109 Move [X8+48], V0
	110 Move [X8+56], V0
	111 Move W0, 1
	112 Move [X19+24], X8
	113 Move [X19+16], W0
	114 Move X20, [X31+128]
	115 Move X19, [X31+136]
	116 Move X30, [X31+112]
	117 Add X31, X31, 144
	118 Return X0
	119 NotImplemented "Instruction CMP not yet implemented."
	120 Call 0x3EB2AD0
	121 Move X19, [X0]
	122 Move [X31+96], X19
	123 Call 0x3EB2AE0
	124 Compare X19, 0
	125 JumpIfEqual {85}
	126 Add X8, X31, 96
	127 Add X0, X8, 8
	128 Call 0x1C17848
	129 Move X0, X19
	130 Call 0x1C17F18
	131 Compare X19, 0
	132 JumpIfNotEqual {134}
	133 Call 0x1D2D690
	134 Move X0, [X31+120]
	135 Move W8, [X0+16]
	136 NotImplemented "Instruction CMP not yet implemented."
	137 Add W31, W8, 3
	138 Call <get_ActiveIDs>d__15.<>m__Finally1, X0
	139 Move X0, X19
	140 Call 0x1C17F18
	141 Call 0x1991590

Method: System.Void <>m__Finally1()

Disassembly:
	0x03EB0A74 STP X20, X19, [X31 + 0x10]
	0x03EB0A78 ADRP X20, 0x538000
	0x03EB0A7C LDRB W8, [X20 + 0xF93]
	0x03EB0A80 MOV X19, X0
	0x03EB0A84 TBNZ X8, 0x0, 0x3EB0A9C
	0x03EB0A88 ADRP X0, 0x245000
	0x03EB0A8C LDR X0, [X0 + 0x278]
	0x03EB0A90 BL 0x1C16CF4
	0x03EB0A94 MOVZ W8, 0x1
	0x03EB0A98 STRB W8, [X20 + 0xF93]
	0x03EB0A9C LDR X0, [X19 + 0x58]
	0x03EB0AA0 CBZ X0, 0x3EB0AB4
	0x03EB0AA4 LDP X20, X19, [X31 + 0x10]
	0x03EB0AA8 MOV X1, X31
	0x03EB0AAC LDR X30, [X31], #0x20
	0x03EB0AB0 B 0x3E6F03C
	0x03EB0AB4 LDR X0, [X19 + 0x40]
	0x03EB0AB8 CBNZ X0, 0x3EB0AD0
	0x03EB0ABC ADRP X8, 0x245000
	0x03EB0AC0 LDR X8, [X8 + 0x278]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x539000
	006 Move X20, 0x2BF000
	007 Move W8, [X21+3968]
	008 Move X20, [X20+1616]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x2BF000
	015 Move X0, [X0+1616]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+3968], W8
	019 Move TEMP, 0
	020 Not TEMP
	021 Move W8, TEMP
	022 Move [X19+16], W8
	023 Move X1, [X20]
	024 Add X0, X19, 48
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X30, [X31+32]
	028 Move X21, [X31+40]
	029 Call Enumerator<Object, Boolean>.Dispose, X0
	030 Return 

Method: System.String System.Collections.Generic.IEnumerator<System.String>.get_Current()

Disassembly:
	0x03EB0AC4 LDR X8, [X8]
	0x03EB0AC8 LDR X8, [X8 + 0xB8]

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Void System.Collections.IEnumerator.Reset()

Disassembly:
	0x03EB0ACC LDR X0, [X8]
	0x03EB0AD0 LDP X20, X19, [X31 + 0x10]
	0x03EB0AD4 LDR X30, [X31], #0x20
	0x03EB0AD8 RET
	0x03EB0ADC STP X30, X21, [X31 - 0x20]!
	0x03EB0AE0 STP X20, X19, [X31 + 0x10]
	0x03EB0AE4 ADRP X21, 0x538000
	0x03EB0AE8 LDRB W8, [X21 + 0xF94]
	0x03EB0AEC MOV X20, X1
	0x03EB0AF0 MOV X19, X0
	0x03EB0AF4 TBNZ X8, 0x0, 0x3EB0B0C
	0x03EB0AF8 ADRP X0, 0x24A000
	0x03EB0AFC LDR X0, [X0 + 0x248]
	0x03EB0B00 BL 0x1C16CF4

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, 0x244000
	004 Move X0, [X0+2880]
	005 Call 0x1C17D08
	006 Call 0x1C17F10
	007 Move X1, X31
	008 Move X19, X0
	009 Call NotSupportedException..ctor, X0
	010 Move X0, 0x2BF000
	011 Move X0, [X0+1624]
	012 Call 0x1C17D08
	013 Move X1, X0
	014 Move X0, X19
	015 Call 0x1C17DEC

Method: System.Object System.Collections.IEnumerator.get_Current()

Disassembly:
	0x03EB0B04 MOVZ W8, 0x1
	0x03EB0B08 STRB W8, [X21 + 0xF94]

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Collections.Generic.IEnumerator`1<System.String> System.Collections.Generic.IEnumerable<System.String>.GetEnumerator()

Disassembly:
	0x03EB0B0C LDR X8, [X19 + 0x58]
	0x03EB0B10 CBNZ X8, 0x3EB0BA4
	0x03EB0B14 CBZ X20, 0x3EB0B94
	0x03EB0B18 LDR W8, [X20 + 0x10]
	0x03EB0B1C CBZ W8, 0x3EB0B90
	0x03EB0B20 ADRP X8, 0x24A000
	0x03EB0B24 LDR X8, [X8 + 0x248]
	0x03EB0B28 LDR X0, [X8]
	0x03EB0B2C LDR W8, [X0 + 0xE0]
	0x03EB0B30 CBNZ W8, 0x3EB0B38
	0x03EB0B34 BL 0x1C16DFC
	0x03EB0B38 MOV X0, X20
	0x03EB0B3C MOV X1, X31
	0x03EB0B40 BL 0x3E69764
	0x03EB0B44 TBNZ X0, 0x0, 0x3EB0B94
	0x03EB0B48 ADRP X0, 0x2BE000
	0x03EB0B4C LDR X0, [X0 + 0x6B8]
	0x03EB0B50 BL 0x1C16D08
	0x03EB0B54 MOV X19, X0
	0x03EB0B58 ADRP X0, 0x24B000
	0x03EB0B5C LDR X0, [X0 + 0x578]
	0x03EB0B60 BL 0x1C16D08
	0x03EB0B64 BL 0x1C16F10
	0x03EB0B68 MOV X20, X0
	0x03EB0B6C ADRP X0, 0x24D000
	0x03EB0B70 LDR X0, [X0 + 0xEC8]
	0x03EB0B74 BL 0x1C16D08
	0x03EB0B78 MOV X2, X0
	0x03EB0B7C MOV X0, X20
	0x03EB0B80 MOV X1, X19
	0x03EB0B84 MOV X3, X31
	0x03EB0B88 BL 0x330E16C
	0x03EB0B8C B 0x3EB0BD4
	0x03EB0B90 MOV X20, X31
	0x03EB0B94 STR X20, [X19 + 0x40]
	0x03EB0B98 LDP X20, X19, [X31 + 0x10]
	0x03EB0B9C LDP X30, X21, [X31], #0x20
	0x03EB0BA0 RET
	0x03EB0BA4 ADRP X0, 0x2BE000
	0x03EB0BA8 LDR X0, [X0 + 0x6C0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x539000
	005 Move W8, [X20+3969]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x2BF000
	012 Move X0, [X0+1120]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+3969], W8
	016 Move W8, [X19+16]
	017 Add W31, W8, 2
	018 Move W20, [X19+32]
	019 Move X0, X31
	020 Call Thread.get_CurrentThread
	021 Compare X0, 0
	022 JumpIfEqual {44}
	023 Move X1, X31
	024 Call Thread.get_ManagedThreadId, X0
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move [X19+16], W31
	027 Move X8, 0x2BF000
	028 Move X8, [X8+1120]
	029 Move X0, [X8]
	030 Call 0x1C17F10
	031 Move W1, W31
	032 Move X20, X0
	033 Call <get_ActiveIDs>d__15..ctor, X0, X1
	034 Compare X20, 0
	035 JumpIfEqual {44}
	036 Move X8, [X19+40]
	037 Move X19, X20
	038 Move [X20+40], X8
	039 Move X0, X19
	040 Move X20, [X31+16]
	041 Move X19, [X31+24]
	042 Move X30, [X31+32]
	043 Return X0
	044 Call 0x1C17F20

Method: System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()

Disassembly:
	0x03EB0BAC BL 0x1C16D08

ISIL:
	001 Call <get_ActiveIDs>d__15.System.Collections.Generic.IEnumerable<System.String>.GetEnumerator, X0
	002 Return X0

