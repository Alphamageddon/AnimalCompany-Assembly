Type: WebSocketSharp.CloseEventArgs

Method: System.Void .ctor(WebSocketSharp.PayloadData payloadData, System.Boolean clean)

Disassembly:
	0x03E6E724 BL 0x33E14E4
	0x03E6E728 LDP X20, X19, [X31 + 0x20]
	0x03E6E72C LDP X30, X21, [X31 + 0x10]
	0x03E6E730 ADD X31, X31, 0x30
	0x03E6E734 RET
	0x03E6E738 ADRP X0, 0x2FE000
	0x03E6E73C LDR X0, [X0 + 0x448]
	0x03E6E740 BL 0x1C16D08
	0x03E6E744 MOV X19, X0
	0x03E6E748 ADRP X0, 0x285000
	0x03E6E74C LDR X0, [X0 + 0x5B0]
	0x03E6E750 BL 0x1C16D08
	0x03E6E754 BL 0x1C16F10
	0x03E6E758 MOV X1, X19
	0x03E6E75C MOV X2, X31
	0x03E6E760 MOV X20, X0
	0x03E6E764 BL 0x337DF1C
	0x03E6E768 ADRP X0, 0x2FE000
	0x03E6E76C LDR X0, [X0 + 0x450]
	0x03E6E770 BL 0x1C16D08
	0x03E6E774 MOV X1, X0
	0x03E6E778 MOV X0, X20
	0x03E6E77C BL 0x1C16DEC
	0x03E6E780 BL 0x1C16F20
	0x03E6E784 BL 0x1C16F20
	0x03E6E788 B 0x3E6E790
	0x03E6E78C B 0x3E6E790
	0x03E6E790 MOV X20, X0
	0x03E6E794 CMP W1, 0x1
	0x03E6E798 B.NE 0x3E6E7C4

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x57B000
	008 Move X23, 0x2B2000
	009 Move W8, [X22+3347]
	010 Move X23, [X23+344]
	011 Move W21, W2
	012 Move X20, X1
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0x2B2000
	019 Move X0, [X0+344]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+3347], W8
	023 Move X0, [X23]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {28}
	027 Call 0x1C17DFC
	028 Move X0, X19
	029 Move X1, X31
	030 And W21, W21, 1
	031 Call EventArgs..ctor, X0
	032 Move [X19+24], X20
	033 Move [X19+16], W21
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X30, [X31+48]
	039 Move X23, [X31+56]
	040 Return 

Method: System.Void .ctor(System.UInt16 code, System.String reason, System.Boolean clean)

Disassembly:
	0x03E6E79C MOV X0, X20
	0x03E6E7A0 BL 0x3EB1AD0
	0x03E6E7A4 LDR X21, [X0]
	0x03E6E7A8 BL 0x3EB1AE0
	0x03E6E7AC MOV X0, X19
	0x03E6E7B0 MOV X1, X31
	0x03E6E7B4 BL 0x33E14E4
	0x03E6E7B8 CBZ X21, 0x3E6E728
	0x03E6E7BC MOV X0, X21
	0x03E6E7C0 BL 0x1C16F18
	0x03E6E7C4 MOV X21, X31
	0x03E6E7C8 B 0x3E6E7D0
	0x03E6E7CC MOV X20, X0
	0x03E6E7D0 MOV X0, X19
	0x03E6E7D4 MOV X1, X31
	0x03E6E7D8 BL 0x33E14E4
	0x03E6E7DC CBNZ X21, 0x3E6E7E8
	0x03E6E7E0 MOV X0, X20
	0x03E6E7E4 BL 0x1D2C690
	0x03E6E7E8 MOV X0, X21
	0x03E6E7EC BL 0x1C16F18
	0x03E6E7F0 BL 0x1990590
	0x03E6E7F4 STP X30, X21, [X31 - 0x20]!
	0x03E6E7F8 STP X20, X19, [X31 + 0x10]
	0x03E6E7FC ADRP X21, 0x57A000
	0x03E6E800 LDRB W8, [X21 + 0xD2B]
	0x03E6E804 MOV X19, X1
	0x03E6E808 MOV X20, X0
	0x03E6E80C TBNZ X8, 0x0, 0x3E6E830
	0x03E6E810 ADRP X0, 0x2FE000
	0x03E6E814 LDR X0, [X0 + 0x458]
	0x03E6E818 BL 0x1C16CF4
	0x03E6E81C ADRP X0, 0x2FE000
	0x03E6E820 LDR X0, [X0 + 0x460]
	0x03E6E824 BL 0x1C16CF4
	0x03E6E828 MOVZ W8, 0x1
	0x03E6E82C STRB W8, [X21 + 0xD2B]
	0x03E6E830 STR X31, [X19]
	0x03E6E834 LDRH W21, [X20 + 0x108]
	0x03E6E838 BL 0x1C16D44
	0x03E6E83C CMP W21, 0x1
	0x03E6E840 B.NE 0x3E6E850
	0x03E6E844 ADRP X8, 0x2FE000
	0x03E6E848 LDR X8, [X8 + 0x458]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0x57B000
	009 Move X23, 0x2B2000
	010 Move W8, [X24+3348]
	011 Move X23, [X23+344]
	012 Move W22, W3
	013 Move X20, X2
	014 Move W21, W1
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {28}
	020 Move X0, 0x2B2000
	021 Move X0, [X0+344]
	022 Call 0x1C17CF4
	023 Move X0, 0x2FF000
	024 Move X0, [X0+952]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X24+3348], W8
	028 Move X0, [X23]
	029 Move X23, 0x2FF000
	030 Move W8, [X0+224]
	031 Move X23, [X23+952]
	032 Compare W8, 0
	033 JumpIfNotEqual {35}
	034 Call 0x1C17DFC
	035 Move X0, X19
	036 Move X1, X31
	037 And W24, W22, 1
	038 Call EventArgs..ctor, X0
	039 Move X0, [X23]
	040 Call 0x1C17F10
	041 Move W1, W21
	042 Move X2, X20
	043 Move X22, X0
	044 Call PayloadData..ctor, X0, X1, X2
	045 Move [X19+24], X22
	046 Move [X19+16], W24
	047 Move X20, [X31+48]
	048 Move X19, [X31+56]
	049 Move X22, [X31+32]
	050 Move X21, [X31+40]
	051 Move X24, [X31+16]
	052 Move X23, [X31+24]
	053 Move X30, [X31+64]
	054 Return 

Method: System.UInt16 get_Code()

Disassembly:
	0x03E6E8D8 MOV X0, X20
	0x03E6E8DC LDP X20, X19, [X31 + 0x10]
	0x03E6E8E0 LDP X30, X21, [X31], #0x20
	0x03E6E8E4 RET
	0x03E6E8E8 BL 0x1C16F20
	0x03E6E8EC STR X30, [X31 - 0x20]!

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+24]
	003 Compare X0, 0
	004 JumpIfEqual {6}
	005 Move X30, [X31+16]
	006 Call 0x1C17F20

Method: System.String get_Reason()

Disassembly:
	0x03E6E98C BL 0x33E14E0
	0x03E6E990 ADD X1, X31, 0x8
	0x03E6E994 MOV X0, X20
	0x03E6E998 BL 0x3E6E7F4
	0x03E6E99C TBZ X0, 0x0, 0x3E6E9CC
	0x03E6E9A0 AND W8, W21, 0x1

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+24]
	003 Compare X0, 0
	004 JumpIfEqual {6}
	005 Move X30, [X31+16]
	006 Call 0x1C17F20

Method: System.Boolean get_WasClean()

Disassembly:
	0x03E6EA68 MOV X0, X20
	0x03E6EA6C BL 0x3EB1AD0

ISIL:
	001 Move W0, [X0+16]
	002 Return X0

