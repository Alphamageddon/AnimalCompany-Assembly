Type: WebSocketSharp.WebSocketFrame

Method: System.Void .ctor()

Disassembly:
	0x03E7CCA8 MOV X22, X0
	0x03E7CCAC ADRP X8, 0x2F0000

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: System.Void .ctor(WebSocketSharp.Opcode opcode, WebSocketSharp.PayloadData payloadData, System.Boolean mask)

Disassembly:
	0x03E7CCB0 ADRP X9, 0x277000
	0x03E7CCB4 LDR X8, [X8 + 0xB00]
	0x03E7CCB8 LDR X9, [X9 + 0x9D0]
	0x03E7CCBC ADRP X25, 0x2F0000
	0x03E7CCC0 MOVZ W1, 0xA
	0x03E7CCC4 LDR X23, [X8]
	0x03E7CCC8 LDR X0, [X9]

ISIL:
	001 Move X8, X2
	002 Move W2, W1
	003 And W5, W3, 1
	004 Move W1, 1
	005 Move X3, X8
	006 Move W4, W31

Method: System.Void .ctor(WebSocketSharp.Fin fin, WebSocketSharp.Opcode opcode, System.Byte[] data, System.Boolean compressed, System.Boolean mask)

Disassembly:
	0x03E7CE88 MOV X21, X0
	0x03E7CE8C CBZ X0, 0x3E7CEA4
	0x03E7CE90 LDR X8, [X24]
	0x03E7CE94 MOV X0, X21
	0x03E7CE98 LDR X1, [X8 + 0x40]
	0x03E7CE9C BL 0x1C16E00
	0x03E7CEA0 CBZ X0, 0x3E7CF74
	0x03E7CEA4 LDR W8, [X24 + 0x18]
	0x03E7CEA8 CMP W8, 0x6
	0x03E7CEAC B.LS 0x3E7CF70
	0x03E7CEB0 STR X21, [X24 + 0x50]
	0x03E7CEB4 CBZ X20, 0x3E7CED0
	0x03E7CEB8 LDR X8, [X24]
	0x03E7CEBC MOV X0, X20
	0x03E7CEC0 LDR X1, [X8 + 0x40]
	0x03E7CEC4 BL 0x1C16E00
	0x03E7CEC8 CBZ X0, 0x3E7CF74
	0x03E7CECC LDR W8, [X24 + 0x18]
	0x03E7CED0 CMP W8, 0x7
	0x03E7CED4 B.LS 0x3E7CF70
	0x03E7CED8 STR X20, [X24 + 0x58]
	0x03E7CEDC CBZ X19, 0x3E7CEF8
	0x03E7CEE0 LDR X8, [X24]
	0x03E7CEE4 MOV X0, X19
	0x03E7CEE8 LDR X1, [X8 + 0x40]
	0x03E7CEEC BL 0x1C16E00
	0x03E7CEF0 CBZ X0, 0x3E7CF74
	0x03E7CEF4 LDR W8, [X24 + 0x18]
	0x03E7CEF8 CMP W8, 0x8
	0x03E7CEFC B.LS 0x3E7CF70
	0x03E7CF00 STR X19, [X24 + 0x60]
	0x03E7CF04 CBZ X22, 0x3E7CF20
	0x03E7CF08 LDR X8, [X24]
	0x03E7CF0C MOV X0, X22
	0x03E7CF10 LDR X1, [X8 + 0x40]
	0x03E7CF14 BL 0x1C16E00
	0x03E7CF18 CBZ X0, 0x3E7CF74
	0x03E7CF1C LDR W8, [X24 + 0x18]
	0x03E7CF20 CMP W8, 0x9

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X25, 0x56D000
	011 Move X26, 0x2F1000
	012 Move W8, [X25+3480]
	013 Move X26, [X26+952]
	014 Move W19, W5
	015 Move W21, W4
	016 Move X24, X3
	017 Move W20, W2
	018 Move W22, W1
	019 Move X23, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {29}
	024 Move X0, 0x2F1000
	025 Move X0, [X0+952]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X25+3480], W8
	029 Move X0, [X26]
	030 Call 0x1C17F10
	031 Move X1, X24
	032 Move X2, X31
	033 Move X25, X0
	034 Call PayloadData..ctor, X0, X1
	035 And W4, W21, 1
	036 And W5, W19, 1
	037 Move X0, X23
	038 Move W1, W22
	039 Move W2, W20
	040 Move X3, X25
	041 Move X20, [X31+64]
	042 Move X19, [X31+72]
	043 Move X22, [X31+48]
	044 Move X21, [X31+56]
	045 Move X24, [X31+32]
	046 Move X23, [X31+40]
	047 Move X26, [X31+16]
	048 Move X25, [X31+24]
	049 Move X30, [X31+80]
	050 Call WebSocketFrame..ctor, X0, X1, X2, X3, X4, X5
	051 Return 

Method: System.Void .ctor(WebSocketSharp.Fin fin, WebSocketSharp.Opcode opcode, WebSocketSharp.PayloadData payloadData, System.Boolean compressed, System.Boolean mask)

Disassembly:
	0x03E7CCCC LDR X25, [X25 + 0xAE0]
	0x03E7CCD0 BL 0x1C16D6C
	0x03E7CCD4 MOV X24, X0
	0x03E7CCD8 LDRB W8, [X21 + 0x18]
	0x03E7CCDC LDR X0, [X25]
	0x03E7CCE0 ADD X1, X31, 0x24
	0x03E7CCE4 STRB W8, [X31 + 0x24]
	0x03E7CCE8 BL 0x1C16E04
	0x03E7CCEC CBZ X24, 0x3E7CF80
	0x03E7CCF0 MOV X25, X0
	0x03E7CCF4 CBZ X0, 0x3E7CD0C
	0x03E7CCF8 LDR X8, [X24]
	0x03E7CCFC MOV X0, X25
	0x03E7CD00 LDR X1, [X8 + 0x40]
	0x03E7CD04 BL 0x1C16E00
	0x03E7CD08 CBZ X0, 0x3E7CF74
	0x03E7CD0C LDR W8, [X24 + 0x18]
	0x03E7CD10 CBZ W8, 0x3E7CF70
	0x03E7CD14 ADRP X27, 0x2F0000
	0x03E7CD18 LDR X27, [X27 + 0xAF8]
	0x03E7CD1C STR X25, [X24 + 0x20]
	0x03E7CD20 LDRB W8, [X21 + 0x39]
	0x03E7CD24 ADD X1, X31, 0x20
	0x03E7CD28 LDR X0, [X27]
	0x03E7CD2C STRB W8, [X31 + 0x20]
	0x03E7CD30 BL 0x1C16E04
	0x03E7CD34 MOV X25, X0
	0x03E7CD38 CBZ X0, 0x3E7CD50
	0x03E7CD3C LDR X8, [X24]
	0x03E7CD40 MOV X0, X25
	0x03E7CD44 LDR X1, [X8 + 0x40]
	0x03E7CD48 BL 0x1C16E00
	0x03E7CD4C CBZ X0, 0x3E7CF74
	0x03E7CD50 LDR W8, [X24 + 0x18]
	0x03E7CD54 CMP W8, 0x1
	0x03E7CD58 B.LS 0x3E7CF70
	0x03E7CD5C STR X25, [X24 + 0x28]
	0x03E7CD60 LDRB W8, [X21 + 0x3A]
	0x03E7CD64 LDR X0, [X27]
	0x03E7CD68 ADD X1, X31, 0x1C
	0x03E7CD6C STRB W8, [X31 + 0x1C]
	0x03E7CD70 BL 0x1C16E04
	0x03E7CD74 MOV X25, X0
	0x03E7CD78 CBZ X0, 0x3E7CD90
	0x03E7CD7C LDR X8, [X24]
	0x03E7CD80 MOV X0, X25
	0x03E7CD84 LDR X1, [X8 + 0x40]
	0x03E7CD88 BL 0x1C16E00
	0x03E7CD8C CBZ X0, 0x3E7CF74
	0x03E7CD90 LDR W8, [X24 + 0x18]
	0x03E7CD94 CMP W8, 0x2
	0x03E7CD98 B.LS 0x3E7CF70
	0x03E7CD9C STR X25, [X24 + 0x30]
	0x03E7CDA0 LDRB W8, [X21 + 0x3B]
	0x03E7CDA4 LDR X0, [X27]
	0x03E7CDA8 ADD X1, X31, 0x18
	0x03E7CDAC STRB W8, [X31 + 0x18]
	0x03E7CDB0 BL 0x1C16E04
	0x03E7CDB4 MOV X25, X0
	0x03E7CDB8 CBZ X0, 0x3E7CDD0
	0x03E7CDBC LDR X8, [X24]
	0x03E7CDC0 MOV X0, X25
	0x03E7CDC4 LDR X1, [X8 + 0x40]
	0x03E7CDC8 BL 0x1C16E00
	0x03E7CDCC CBZ X0, 0x3E7CF74
	0x03E7CDD0 LDR W8, [X24 + 0x18]
	0x03E7CDD4 CMP W8, 0x3
	0x03E7CDD8 B.LS 0x3E7CF70
	0x03E7CDDC ADRP X8, 0x2F0000
	0x03E7CDE0 LDR X8, [X8 + 0xAF0]
	0x03E7CDE4 STR X25, [X24 + 0x38]
	0x03E7CDE8 LDRB W9, [X21 + 0x28]
	0x03E7CDEC ADD X1, X31, 0x14
	0x03E7CDF0 LDR X0, [X8]
	0x03E7CDF4 STRB W9, [X31 + 0x14]
	0x03E7CDF8 BL 0x1C16E04
	0x03E7CDFC MOV X25, X0
	0x03E7CE00 CBZ X0, 0x3E7CE18
	0x03E7CE04 LDR X8, [X24]
	0x03E7CE08 MOV X0, X25
	0x03E7CE0C LDR X1, [X8 + 0x40]
	0x03E7CE10 BL 0x1C16E00
	0x03E7CE14 CBZ X0, 0x3E7CF74
	0x03E7CE18 LDR W8, [X24 + 0x18]
	0x03E7CE1C CMP W8, 0x4
	0x03E7CE20 B.LS 0x3E7CF70
	0x03E7CE24 ADRP X8, 0x2F0000
	0x03E7CE28 LDR X8, [X8 + 0xAE8]
	0x03E7CE2C STR X25, [X24 + 0x40]
	0x03E7CE30 LDRB W9, [X21 + 0x19]
	0x03E7CE34 ADD X1, X31, 0x10
	0x03E7CE38 LDR X0, [X8]
	0x03E7CE3C STRB W9, [X31 + 0x10]
	0x03E7CE40 BL 0x1C16E04
	0x03E7CE44 MOV X21, X0
	0x03E7CE48 CBZ X0, 0x3E7CE60
	0x03E7CE4C LDR X8, [X24]
	0x03E7CE50 MOV X0, X21
	0x03E7CE54 LDR X1, [X8 + 0x40]
	0x03E7CE58 BL 0x1C16E00
	0x03E7CE5C CBZ X0, 0x3E7CF74
	0x03E7CE60 LDR W8, [X24 + 0x18]
	0x03E7CE64 CMP W8, 0x5
	0x03E7CE68 B.LS 0x3E7CF70
	0x03E7CE6C ADRP X8, 0x278000
	0x03E7CE70 LDR X8, [X8 + 0x9D8]
	0x03E7CE74 STR X21, [X24 + 0x48]
	0x03E7CE78 ADD X1, X31, 0xC
	0x03E7CE7C STRB W26, [X31 + 0xC]
	0x03E7CE80 LDR X0, [X8]
	0x03E7CE84 BL 0x1C16E04

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X26, 0x56D000
	011 Move X25, 0x27F000
	012 Move W8, [X26+3481]
	013 Move X25, [X25+584]
	014 Move W21, W5
	015 Move W22, W4
	016 Move X19, X3
	017 Move W23, W2
	018 Move W24, W1
	019 Move X20, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {32}
	024 Move X0, 0x27F000
	025 Move X0, [X0+584]
	026 Call 0x1C17CF4
	027 Move X0, 0x2F1000
	028 Move X0, [X0+968]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X26+3481], W8
	032 Move X0, X20
	033 Move X1, X31
	034 Call Object..ctor, X0
	035 Move [X20+24], W24
	036 Move [X20+40], W23
	037 Move X0, [X25]
	038 Move W8, [X0+224]
	039 Compare W8, 0
	040 JumpIfNotEqual {42}
	041 Call 0x1C17DFC
	042 Move W0, W23
	043 Move X1, X31
	044 Call Ext.IsData, X0
	045 And W8, W0, W22
	046 And W8, W8, 1
	047 Move [X20+57], W8
	048 NotImplemented "Instruction STRH not yet implemented."
	049 Compare X19, 0
	050 JumpIfEqual {130}
	051 Move X0, X19
	052 Move X1, X31
	053 Call PayloadData.get_Length, X0
	054 Move X22, X0
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Move [X20+56], W22
	057 Move X22, 0x2F1000
	058 Move X22, [X22+968]
	059 Move X0, [X22]
	060 Move W8, [X0+224]
	061 Compare W8, 0
	062 JumpIfNotEqual {65}
	063 Call 0x1C17DFC
	064 Move X0, [X22]
	065 Move X8, [X0+184]
	066 Move X0, [X8+8]
	067 Move X8, X22
	068 ShiftRight X8, 16
	069 And X8, X8, 0x7FFFFFFF
	070 Compare X8, 0
	071 JumpIfNotEqual {83}
	072 Move W8, 126
	073 Move [X20+56], W8
	074 Move X0, [X25]
	075 Move W8, [X0+224]
	076 Compare W8, 0
	077 JumpIfNotEqual {79}
	078 Call 0x1C17DFC
	079 Move W1, 1
	080 Move W0, W22
	081 Move X2, X31
	082 Call Ext.ToByteArray, X0, X1
	083 Move W8, 127
	084 Move [X20+56], W8
	085 Move X0, [X25]
	086 Move W8, [X0+224]
	087 Compare W8, 0
	088 JumpIfNotEqual {90}
	089 Call 0x1C17DFC
	090 Move W1, 1
	091 Move X0, X22
	092 Move X2, X31
	093 Call Ext.ToByteArray, X0, X1
	094 Move [X20+16], X0
	095 Move TEMP, X21
	096 And TEMP, TEMP, 1
	097 Compare TEMP, 1
	098 JumpIfNotEqual {107}
	099 Move W8, 1
	100 Move [X20+25], W8
	101 Call WebSocketFrame.createMaskingKey
	102 Move X1, X0
	103 Move [X20+32], X0
	104 Move X0, X19
	105 Move X2, X31
	106 Call PayloadData.Mask, X0, X1
	107 Move [X20+25], W31
	108 Move X21, 0x2F1000
	109 Move X21, [X21+968]
	110 Move X0, [X21]
	111 Move W8, [X0+224]
	112 Compare W8, 0
	113 JumpIfNotEqual {116}
	114 Call 0x1C17DFC
	115 Move X0, [X21]
	116 Move X8, [X0+184]
	117 Move X8, [X8+8]
	118 Move [X20+32], X8
	119 Move [X20+48], X19
	120 Move X20, [X31+64]
	121 Move X19, [X31+72]
	122 Move X22, [X31+48]
	123 Move X21, [X31+56]
	124 Move X24, [X31+32]
	125 Move X23, [X31+40]
	126 Move X26, [X31+16]
	127 Move X25, [X31+24]
	128 Move X30, [X31+80]
	129 Return 
	130 Call 0x1C17F20

Method: System.UInt64 get_ExactPayloadLength()

Disassembly:
	0x03E7CFC0 MOV X19, X0
	0x03E7CFC4 CMP W1, 0x1
	0x03E7CFC8 B.NE 0x3E7D028
	0x03E7CFCC MOV X0, X19
	0x03E7CFD0 BL 0x3EB1AD0
	0x03E7CFD4 MOV X19, X0
	0x03E7CFD8 ADRP X0, 0x27D000
	0x03E7CFDC LDR X0, [X0 + 0xCC0]
	0x03E7CFE0 BL 0x1C16D08
	0x03E7CFE4 LDR X8, [X19]
	0x03E7CFE8 LDR X1, [X8]
	0x03E7CFEC BL 0x1C17270
	0x03E7CFF0 TBZ X0, 0x0, 0x3E7D000
	0x03E7CFF4 BL 0x3EB1AE0
	0x03E7CFF8 MOV X0, X31
	0x03E7CFFC B 0x3E7CFAC
	0x03E7D000 MOVZ W0, 0x8
	0x03E7D004 BL 0x3EB1AF0
	0x03E7D008 LDR X8, [X19]
	0x03E7D00C STR X8, [X0]
	0x03E7D010 ADRP X1, 0x37000
	0x03E7D014 ADD X1, X1, 0xE58
	0x03E7D018 MOV X2, X31
	0x03E7D01C BL 0x3EB1B00
	0x03E7D020 MOV X19, X0
	0x03E7D024 BL 0x3EB1AE0
	0x03E7D028 MOV X0, X19
	0x03E7D02C BL 0x1D2C690
	0x03E7D030 BL 0x1990590
	0x03E7D034 STP X30, X23, [X31 - 0x30]!
	0x03E7D038 STP X22, X21, [X31 + 0x10]
	0x03E7D03C STP X20, X19, [X31 + 0x20]
	0x03E7D040 ADRP X20, 0x56B000
	0x03E7D044 LDRB W8, [X20 + 0xD9E]
	0x03E7D048 MOV X19, X0
	0x03E7D04C TBNZ X8, 0x0, 0x3E7D070

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0x56D000
	005 Move W8, [X19+3482]
	006 Move X20, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x27F000
	012 Move X0, [X0+584]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X19+3482], W8
	016 Move W19, [X20+56]
	017 NotImplemented "Instruction CMP not yet implemented."
	018 Move X8, 0x27F000
	019 Move X8, [X8+584]
	020 Move X20, [X20+16]
	021 Move X0, [X8]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move W1, 1
	027 Move X0, X20
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Move X2, X31
	030 Call Ext.ToUInt16, X0, X1
	031 And X19, X0, 0xFFFF
	032 Move X0, X19
	033 Move X20, [X31+16]
	034 Move X19, [X31+24]
	035 Move X30, [X31+32]
	036 Return X0
	037 Move X20, [X31+16]
	038 Move X19, [X31+24]
	039 Move X2, X31
	040 Move X30, [X31+32]
	041 Call Ext.ToUInt64, X0, X1
	042 Return X0

Method: System.Int32 get_ExtendedPayloadLengthWidth()

Disassembly:
	0x03E7D050 ADRP X0, 0x27D000
	0x03E7D054 LDR X0, [X0 + 0x248]
	0x03E7D058 BL 0x1C16CF4
	0x03E7D05C ADRP X0, 0x2EF000
	0x03E7D060 LDR X0, [X0 + 0x748]
	0x03E7D064 BL 0x1C16CF4
	0x03E7D068 MOVZ W8, 0x1
	0x03E7D06C STRB W8, [X20 + 0xD9E]
	0x03E7D070 CBZ X19, 0x3E7D170

ISIL:
	001 Move W8, [X0+56]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 Move W8, 8
	004 Move W9, 2
	005 NotImplemented "Instruction CSEL not yet implemented."
	006 Return X0
	007 Move W0, W31
	008 Return X0

Method: System.Byte[] get_ExtendedPayloadLength()

Disassembly:
	0x03E7D074 LDR W8, [X19 + 0x18]
	0x03E7D078 CMP W8, 0x2

ISIL:
	001 Move X0, [X0+16]
	002 Return X0

Method: WebSocketSharp.Fin get_Fin()

Disassembly:
	0x03E7D07C B.NE 0x3E7D174
	0x03E7D080 ADRP X20, 0x27D000

ISIL:
	001 Move W0, [X0+24]
	002 Return X0

Method: System.Boolean get_IsBinary()

Disassembly:
	0x03E7D084 LDR X20, [X20 + 0x248]
	0x00000000 INVALID
	0x03E7D08C LDRB W22, [X19 + 0x21]
	0x03E7D090 LDR X0, [X20]

ISIL:
	001 Move W8, [X0+40]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 NotImplemented "Instruction CSET not yet implemented."
	004 Return X0

Method: System.Boolean get_IsClose()

Disassembly:
	0x03E7D094 AND W19, W21, 0xF
	0x03E7D098 LDR W8, [X0 + 0xE0]
	0x03E7D09C CBNZ W8, 0x3E7D0A4
	0x03E7D0A0 BL 0x1C16DFC

ISIL:
	001 Move W8, [X0+40]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 NotImplemented "Instruction CSET not yet implemented."
	004 Return X0

Method: System.Boolean get_IsCompressed()

Disassembly:
	0x03E7D0A4 MOV W0, W19
	0x03E7D0A8 MOV X1, X31
	0x03E7D0AC BL 0x3E6955C
	0x03E7D0B0 TBZ X0, 0x0, 0x3E7D1A4

ISIL:
	001 Move W8, [X0+57]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 NotImplemented "Instruction CSET not yet implemented."
	004 Return X0

Method: System.Boolean get_IsContinuation()

Disassembly:
	0x03E7D0B4 LDR X0, [X20]
	0x03E7D0B8 LDR W8, [X0 + 0xE0]
	0x03E7D0BC CBNZ W8, 0x3E7D0C4
	0x03E7D0C0 BL 0x1C16DFC

ISIL:
	001 Move W8, [X0+40]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 NotImplemented "Instruction CSET not yet implemented."
	004 Return X0

Method: System.Boolean get_IsControl()

Disassembly:
	0x03E7D0C4 MOV W0, W19
	0x03E7D0C8 MOV X1, X31
	0x03E7D0CC BL 0x3E693C8
	0x03E7D0D0 TBZ X21, 0x6, 0x3E7D0D8

ISIL:
	001 Move W8, [X0+40]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 NotImplemented "Instruction CSET not yet implemented."
	004 Return X0

Method: System.Boolean get_IsData()

Disassembly:
	0x03E7D0D4 TBZ X0, 0x0, 0x3E7D1B0
	0x03E7D0D8 LDR X0, [X20]
	0x03E7D0DC LDR W8, [X0 + 0xE0]
	0x03E7D0E0 CBNZ W8, 0x3E7D0E8
	0x03E7D0E4 BL 0x1C16DFC

ISIL:
	001 Move W8, [X0+40]
	002 Subtract W8, W8, 1
	003 NotImplemented "Instruction CMP not yet implemented."
	004 NotImplemented "Instruction CSET not yet implemented."
	005 Return X0

Method: System.Boolean get_IsFinal()

Disassembly:
	0x03E7D0E8 MOV W0, W19
	0x03E7D0EC MOV X1, X31
	0x03E7D0F0 AND W23, W22, 0x7F
	0x03E7D0F4 BL 0x3E693A8

ISIL:
	001 Move W8, [X0+24]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 NotImplemented "Instruction CSET not yet implemented."
	004 Return X0

Method: System.Boolean get_IsFragment()

Disassembly:
	0x03E7D0F8 TBZ X0, 0x0, 0x3E7D108
	0x03E7D0FC TBZ X21, 0x1F, 0x3E7D1BC
	0x03E7D100 CMP W23, 0x7E
	0x03E7D104 B.CS 0x3E7D1C8
	0x03E7D108 ADRP X8, 0x2EF000
	0x03E7D10C LDR X8, [X8 + 0x748]
	0x03E7D110 LDR X0, [X8]
	0x03E7D114 BL 0x1C16F10

ISIL:
	001 Move W8, [X0+24]
	002 Compare W8, 0
	003 JumpIfEqual {8}
	004 Move W8, [X0+40]
	005 NotImplemented "Instruction CMP not yet implemented."
	006 NotImplemented "Instruction CSET not yet implemented."
	007 Return X0
	008 Move W0, 1
	009 Return X0

Method: System.Boolean get_IsMasked()

Disassembly:
	0x03E7D118 MOV X1, X31
	0x03E7D11C MOV X20, X0
	0x03E7D120 BL 0x33BDD8C
	0x03E7D124 CBZ X20, 0x3E7D170

ISIL:
	001 Move W8, [X0+25]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 NotImplemented "Instruction CSET not yet implemented."
	004 Return X0

Method: System.Boolean get_IsPing()

Disassembly:
	0x03E7D128 AND W8, W21, 0xFF
	0x03E7D12C UBFM W9, W21, 0x6, 0x6
	0x03E7D130 UBFM W10, W22, 0x7, 0x1F
	0x03E7D134 UBFM W11, W21, 0x7, 0x7

ISIL:
	001 Move W8, [X0+40]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 NotImplemented "Instruction CSET not yet implemented."
	004 Return X0

Method: System.Boolean get_IsPong()

Disassembly:
	0x03E7D138 UBFM W12, W8, 0x4, 0x4
	0x03E7D13C UBFM W8, W8, 0x5, 0x5
	0x03E7D140 STRB W19, [X20 + 0x28]
	0x03E7D144 STRB W11, [X20 + 0x18]

ISIL:
	001 Move W8, [X0+40]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 NotImplemented "Instruction CSET not yet implemented."
	004 Return X0

Method: System.Boolean get_IsText()

Disassembly:
	0x03E7D148 STRB W9, [X20 + 0x39]
	0x03E7D14C STRB W10, [X20 + 0x19]
	0x03E7D150 STRB W8, [X20 + 0x3A]
	0x03E7D154 STRB W12, [X20 + 0x3B]

ISIL:
	001 Move W8, [X0+40]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 NotImplemented "Instruction CSET not yet implemented."
	004 Return X0

Method: System.UInt64 get_Length()

Disassembly:
	0x03E7D158 STRB W23, [X20 + 0x38]
	0x03E7D15C MOV X0, X20
	0x03E7D160 LDP X20, X19, [X31 + 0x20]
	0x03E7D164 LDP X22, X21, [X31 + 0x10]
	0x03E7D168 LDP X30, X23, [X31], #0x30
	0x03E7D16C RET
	0x03E7D170 BL 0x1C16F20
	0x03E7D174 ADRP X0, 0x2EF000
	0x03E7D178 LDR X0, [X0 + 0xB08]
	0x03E7D17C BL 0x1C16D08
	0x03E7D180 MOV X19, X0
	0x03E7D184 ADRP X0, 0x29E000
	0x03E7D188 LDR X0, [X0 + 0xB38]
	0x03E7D18C BL 0x1C16D08
	0x03E7D190 BL 0x1C16F10
	0x03E7D194 MOV X1, X19
	0x03E7D198 MOV X20, X0
	0x03E7D19C BL 0x3E7AAA8
	0x03E7D1A0 B 0x3E7D1F8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, [X0+16]
	005 Compare X19, 0
	006 JumpIfEqual {24}
	007 Move X20, [X0+32]
	008 Compare X20, 0
	009 JumpIfEqual {24}
	010 Move X0, [X0+48]
	011 Compare X0, 0
	012 JumpIfEqual {24}
	013 Move X1, X31
	014 Call PayloadData.get_Length, X0
	015 Move W8, [X19+24]
	016 Move W9, [X20+24]
	017 Move X20, [X31+16]
	018 Move X19, [X31+24]
	019 Add W8, W9, W8
	020 Add X8, X0, W8
	021 Add X0, X8, 2
	022 Move X30, [X31+32]
	023 Return X0
	024 Call 0x1C17F20

Method: WebSocketSharp.Mask get_Mask()

Disassembly:
	0x03E7D1A4 ADRP X0, 0x2EF000
	0x03E7D1A8 LDR X0, [X0 + 0xB10]

ISIL:
	001 Move W0, [X0+25]
	002 Return X0

Method: System.Byte[] get_MaskingKey()

Disassembly:
	0x03E7D1AC B 0x3E7D1D0
	0x03E7D1B0 ADRP X0, 0x2EF000

ISIL:
	001 Move X0, [X0+32]
	002 Return X0

Method: WebSocketSharp.Opcode get_Opcode()

Disassembly:
	0x03E7D1B4 LDR X0, [X0 + 0xB18]
	0x03E7D1B8 B 0x3E7D1D0

ISIL:
	001 Move W0, [X0+40]
	002 Return X0

Method: WebSocketSharp.PayloadData get_PayloadData()

Disassembly:
	0x03E7D1BC ADRP X0, 0x2EF000
	0x03E7D1C0 LDR X0, [X0 + 0xB20]

ISIL:
	001 Move X0, [X0+48]
	002 Return X0

Method: System.Byte get_PayloadLength()

Disassembly:
	0x03E7D1C4 B 0x3E7D1D0
	0x03E7D1C8 ADRP X0, 0x2EF000

ISIL:
	001 Move W0, [X0+56]
	002 Return X0

Method: WebSocketSharp.Rsv get_Rsv1()

Disassembly:
	0x03E7D1CC LDR X0, [X0 + 0xB28]
	0x03E7D1D0 BL 0x1C16D08

ISIL:
	001 Move W0, [X0+57]
	002 Return X0

Method: WebSocketSharp.Rsv get_Rsv2()

Disassembly:
	0x03E7D1D4 MOV X19, X0
	0x03E7D1D8 ADRP X0, 0x29E000

ISIL:
	001 Move W0, [X0+58]
	002 Return X0

Method: WebSocketSharp.Rsv get_Rsv3()

Disassembly:
	0x03E7D1DC LDR X0, [X0 + 0xB38]
	0x03E7D1E0 BL 0x1C16D08

ISIL:
	001 Move W0, [X0+59]
	002 Return X0

Method: System.Byte[] createMaskingKey()

Disassembly:
	0x03E7CF24 B.LS 0x3E7CF70
	0x03E7CF28 MOV X0, X23
	0x03E7CF2C MOV X1, X24
	0x03E7CF30 MOV X2, X31
	0x03E7CF34 STR X22, [X24 + 0x68]
	0x03E7CF38 BL 0x3227C5C
	0x03E7CF3C LDP X20, X19, [X31 + 0x70]
	0x03E7CF40 LDP X22, X21, [X31 + 0x60]
	0x03E7CF44 LDP X24, X23, [X31 + 0x50]
	0x03E7CF48 LDP X26, X25, [X31 + 0x40]
	0x03E7CF4C LDP X30, X27, [X31 + 0x30]
	0x03E7CF50 ADD X31, X31, 0x80
	0x03E7CF54 RET
	0x03E7CF58 LDR X0, [X21 + 0x30]
	0x03E7CF5C CBZ X0, 0x3E7CF80
	0x03E7CF60 MOV X1, X31
	0x03E7CF64 BL 0x3E6D4A0
	0x03E7CF68 BL 0x3E7CF84
	0x03E7CF6C B 0x3E7CCA8
	0x03E7CF70 BL 0x1C16F28
	0x03E7CF74 BL 0x1C16F44
	0x03E7CF78 MOV X1, X31
	0x03E7CF7C BL 0x1C16DEC
	0x03E7CF80 BL 0x1C16F20
	0x03E7CF84 STP X30, X19, [X31 - 0x10]!
	0x03E7CF88 MOV X19, X0
	0x03E7CF8C MOV X0, X31
	0x03E7CF90 BL 0x3241948
	0x03E7CF94 CBZ X0, 0x3E7CFB4
	0x03E7CF98 LDR X8, [X0]
	0x03E7CF9C LDR X9, [X8 + 0x378]
	0x03E7CFA0 LDR X2, [X8 + 0x380]
	0x03E7CFA4 MOV X1, X19
	0x03E7CFA8 BLR X9
	0x03E7CFAC LDP X30, X19, [X31], #0x10
	0x03E7CFB0 RET
	0x03E7CFB4 BL 0x1C16F20
	0x03E7CFB8 B 0x3E7CFC0
	0x03E7CFBC B 0x3E7CFC0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, 0x56D000
	006 Move X21, 0x278000
	007 Move X20, 0x2F1000
	008 Move W8, [X19+3483]
	009 Move X21, [X21+1560]
	010 Move X20, [X20+968]
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x278000
	016 Move X0, [X0+1560]
	017 Call 0x1C17CF4
	018 Move X0, 0x2F1000
	019 Move X0, [X0+968]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X19+3483], W8
	023 Move X0, [X21]
	024 Move W1, 4
	025 Call 0x1C17D6C
	026 Move X8, [X20]
	027 Move X19, X0
	028 Move W9, [X8+224]
	029 Compare W9, 0
	030 JumpIfNotEqual {34}
	031 Move X0, X8
	032 Call 0x1C17DFC
	033 Move X8, [X20]
	034 Move X8, [X8+184]
	035 Move X0, [X8+24]
	036 Compare X0, 0
	037 JumpIfEqual {49}
	038 Move X8, [X0]
	039 Move X1, X19
	040 Move X9, [X8+408]
	041 Move X2, [X8+416]
	042 NotImplemented "Instruction BLR not yet implemented."
	043 Move X0, X19
	044 Move X20, [X31+16]
	045 Move X19, [X31+24]
	046 Move X30, [X31+32]
	047 Move X21, [X31+40]
	048 Return X0
	049 Call 0x1C17F20

Method: System.String dump(WebSocketSharp.WebSocketFrame frame)

Disassembly:
	0x03E7D1E4 BL 0x1C16F10
	0x03E7D1E8 MOVZ W1, 0x3EA
	0x03E7D1EC MOV X2, X19
	0x03E7D1F0 MOV X20, X0
	0x03E7D1F4 BL 0x3E7AAE0
	0x03E7D1F8 ADRP X0, 0x2EF000
	0x03E7D1FC LDR X0, [X0 + 0xB30]
	0x03E7D200 BL 0x1C16D08
	0x03E7D204 MOV X1, X0
	0x03E7D208 MOV X0, X20
	0x03E7D20C BL 0x1C16DEC
	0x03E7D210 STP X30, X21, [X31 - 0x20]!
	0x03E7D214 STP X20, X19, [X31 + 0x10]
	0x03E7D218 ADRP X21, 0x56B000
	0x03E7D21C LDRB W8, [X21 + 0xD9F]
	0x03E7D220 MOV X19, X1
	0x03E7D224 MOV X20, X0
	0x03E7D228 TBNZ X8, 0x0, 0x3E7D24C
	0x03E7D22C ADRP X0, 0x27D000
	0x03E7D230 LDR X0, [X0 + 0x248]
	0x03E7D234 BL 0x1C16CF4
	0x03E7D238 ADRP X0, 0x2EF000
	0x03E7D23C LDR X0, [X0 + 0x3C8]
	0x03E7D240 BL 0x1C16CF4
	0x03E7D244 MOVZ W8, 0x1
	0x03E7D248 STRB W8, [X21 + 0xD9F]
	0x03E7D24C CBZ X19, 0x3E7D31C
	0x03E7D250 LDRB W8, [X19 + 0x38]
	0x03E7D254 CMP W8, 0x7E
	0x03E7D258 B.CC 0x3E7D2E4
	0x03E7D25C ADRP X8, 0x27D000
	0x03E7D260 LDR X8, [X8 + 0x248]
	0x03E7D264 MOVZ W9, 0x8
	0x03E7D268 MOVZ W10, 0x2
	0x03E7D26C CSEL W21, W10, W9, EQ
	0x03E7D270 LDR X0, [X8]
	0x03E7D274 LDR W8, [X0 + 0xE0]
	0x03E7D278 CBNZ W8, 0x3E7D280
	0x03E7D27C BL 0x1C16DFC
	0x03E7D280 MOV X0, X20
	0x03E7D284 MOV W1, W21
	0x03E7D288 MOV X2, X31
	0x03E7D28C BL 0x3E69A60
	0x03E7D290 CBZ X0, 0x3E7D31C
	0x03E7D294 LDR W8, [X0 + 0x18]
	0x03E7D298 CMP W21, W8
	0x03E7D29C B.EQ 0x3E7D308
	0x03E7D2A0 ADRP X0, 0x2EF000
	0x03E7D2A4 LDR X0, [X0 + 0xB38]
	0x03E7D2A8 BL 0x1C16D08
	0x03E7D2AC MOV X19, X0
	0x03E7D2B0 ADRP X0, 0x29E000
	0x03E7D2B4 LDR X0, [X0 + 0xB38]
	0x03E7D2B8 BL 0x1C16D08
	0x03E7D2BC BL 0x1C16F10
	0x03E7D2C0 MOV X1, X19
	0x03E7D2C4 MOV X20, X0
	0x03E7D2C8 BL 0x3E7AAA8
	0x03E7D2CC ADRP X0, 0x2EF000
	0x03E7D2D0 LDR X0, [X0 + 0xB40]
	0x03E7D2D4 BL 0x1C16D08
	0x03E7D2D8 MOV X1, X0
	0x03E7D2DC MOV X0, X20
	0x03E7D2E0 BL 0x1C16DEC
	0x03E7D2E4 ADRP X20, 0x2EF000
	0x03E7D2E8 LDR X20, [X20 + 0x3C8]
	0x03E7D2EC LDR X0, [X20]
	0x03E7D2F0 LDR W8, [X0 + 0xE0]
	0x03E7D2F4 CBNZ W8, 0x3E7D300
	0x03E7D2F8 BL 0x1C16DFC
	0x03E7D2FC LDR X0, [X20]
	0x03E7D300 LDR X8, [X0 + 0xB8]
	0x03E7D304 LDR X0, [X8 + 0x8]
	0x03E7D308 STR X0, [X19 + 0x10]
	0x03E7D30C MOV X0, X19
	0x03E7D310 LDP X20, X19, [X31 + 0x10]
	0x03E7D314 LDP X30, X21, [X31], #0x20
	0x03E7D318 RET
	0x03E7D31C BL 0x1C16F20
	0x03E7D320 STR X30, [X31 - 0x40]!
	0x03E7D324 STP X24, X23, [X31 + 0x10]
	0x03E7D328 STP X22, X21, [X31 + 0x20]
	0x03E7D32C STP X20, X19, [X31 + 0x30]
	0x03E7D330 ADRP X23, 0x56B000
	0x03E7D334 ADRP X24, 0x2EF000
	0x03E7D338 LDRB W8, [X23 + 0xDA0]
	0x03E7D33C LDR X24, [X24 + 0xB48]
	0x03E7D340 MOV X19, X3
	0x03E7D344 MOV X21, X2
	0x03E7D348 MOV X22, X1
	0x03E7D34C MOV X20, X0
	0x03E7D350 TBNZ X8, 0x0, 0x3E7D398
	0x03E7D354 ADRP X0, 0x2EF000
	0x03E7D358 LDR X0, [X0 + 0xB50]
	0x03E7D35C BL 0x1C16CF4
	0x03E7D360 ADRP X0, 0x27D000
	0x03E7D364 LDR X0, [X0 + 0x248]
	0x03E7D368 BL 0x1C16CF4
	0x03E7D36C ADRP X0, 0x2EF000
	0x03E7D370 LDR X0, [X0 + 0xB58]
	0x03E7D374 BL 0x1C16CF4
	0x03E7D378 ADRP X0, 0x2EF000
	0x03E7D37C LDR X0, [X0 + 0xB48]
	0x03E7D380 BL 0x1C16CF4
	0x03E7D384 ADRP X0, 0x2EF000
	0x03E7D388 LDR X0, [X0 + 0x3C8]
	0x03E7D38C BL 0x1C16CF4
	0x03E7D390 MOVZ W8, 0x1
	0x03E7D394 STRB W8, [X23 + 0xDA0]
	0x03E7D398 LDR X0, [X24]
	0x03E7D39C BL 0x1C16F10
	0x03E7D3A0 MOV X1, X31
	0x03E7D3A4 MOV X23, X0
	0x03E7D3A8 BL 0x33BDD8C
	0x03E7D3AC CBZ X23, 0x3E7D49C
	0x03E7D3B0 STP X22, X21, [X23 + 0x18]
	0x03E7D3B4 CBZ X22, 0x3E7D49C
	0x03E7D3B8 LDRB W8, [X22 + 0x38]
	0x03E7D3BC CMP W8, 0x7D
	0x03E7D3C0 B.LS 0x3E7D444
	0x03E7D3C4 CMP W8, 0x7E
	0x03E7D3C8 MOVZ W8, 0x8
	0x03E7D3CC MOVZ W9, 0x2
	0x03E7D3D0 CSEL W21, W9, W8, EQ
	0x03E7D3D4 STR W21, [X23 + 0x10]
	0x03E7D3D8 ADRP X8, 0x2EF000
	0x03E7D3DC LDR X8, [X8 + 0xB50]
	0x03E7D3E0 LDR X0, [X8]
	0x03E7D3E4 BL 0x1C16F10
	0x03E7D3E8 ADRP X8, 0x2EF000
	0x03E7D3EC LDR X8, [X8 + 0xB58]
	0x03E7D3F0 MOV X1, X23
	0x03E7D3F4 MOV X3, X31
	0x03E7D3F8 MOV X22, X0
	0x03E7D3FC LDR X2, [X8]
	0x03E7D400 BL 0x2A6B948
	0x03E7D404 ADRP X8, 0x27D000
	0x03E7D408 LDR X8, [X8 + 0x248]
	0x03E7D40C LDR X0, [X8]
	0x03E7D410 LDR W8, [X0 + 0xE0]
	0x03E7D414 CBNZ W8, 0x3E7D41C
	0x03E7D418 BL 0x1C16DFC
	0x03E7D41C MOV X0, X20
	0x03E7D420 MOV W1, W21
	0x03E7D424 MOV X2, X22
	0x03E7D428 MOV X3, X19
	0x03E7D42C LDP X20, X19, [X31 + 0x30]
	0x03E7D430 LDP X22, X21, [X31 + 0x20]
	0x03E7D434 LDP X24, X23, [X31 + 0x10]
	0x03E7D438 MOV X4, X31
	0x03E7D43C LDR X30, [X31], #0x40
	0x03E7D440 B 0x3E69E90
	0x03E7D444 STR W31, [X23 + 0x10]
	0x03E7D448 ADRP X19, 0x2EF000
	0x03E7D44C LDR X19, [X19 + 0x3C8]
	0x03E7D450 LDR X0, [X19]
	0x03E7D454 LDR W8, [X0 + 0xE0]
	0x03E7D458 CBNZ W8, 0x3E7D468
	0x03E7D45C BL 0x1C16DFC
	0x03E7D460 LDR X0, [X19]
	0x03E7D464 LDR X21, [X23 + 0x20]
	0x03E7D468 LDR X8, [X0 + 0xB8]
	0x03E7D46C LDR X8, [X8 + 0x8]
	0x03E7D470 STR X8, [X22 + 0x10]
	0x03E7D474 CBZ X21, 0x3E7D49C
	0x03E7D478 LDR X1, [X23 + 0x18]
	0x03E7D47C LDR X3, [X21 + 0x18]
	0x03E7D480 LDR X0, [X21 + 0x40]
	0x03E7D484 LDR X2, [X21 + 0x28]
	0x03E7D488 LDP X20, X19, [X31 + 0x30]
	0x03E7D48C LDP X22, X21, [X31 + 0x20]
	0x03E7D490 LDP X24, X23, [X31 + 0x10]
	0x03E7D494 LDR X30, [X31], #0x40
	0x03E7D498 BR X3
	0x03E7D49C BL 0x1C16F20
	0x03E7D4A0 MOV X1, X31
	0x03E7D4A4 B 0x33BDD8C
	0x03E7D4A8 STP X30, X21, [X31 - 0x20]!
	0x03E7D4AC STP X20, X19, [X31 + 0x10]
	0x03E7D4B0 ADRP X20, 0x56B000
	0x03E7D4B4 ADRP X21, 0x27D000
	0x03E7D4B8 LDRB W8, [X20 + 0xDA1]
	0x03E7D4BC LDR X21, [X21 + 0x248]
	0x03E7D4C0 MOV X19, X0
	0x03E7D4C4 TBNZ X8, 0x0, 0x3E7D4DC
	0x03E7D4C8 ADRP X0, 0x27D000
	0x03E7D4CC LDR X0, [X0 + 0x248]
	0x03E7D4D0 BL 0x1C16CF4
	0x03E7D4D4 MOVZ W8, 0x1
	0x03E7D4D8 STRB W8, [X20 + 0xDA1]
	0x03E7D4DC LDR X0, [X21]
	0x03E7D4E0 LDR W8, [X0 + 0xE0]
	0x03E7D4E4 CBNZ W8, 0x3E7D4EC
	0x03E7D4E8 BL 0x1C16DFC
	0x03E7D4EC MOVZ W1, 0x2
	0x03E7D4F0 MOV X0, X19
	0x03E7D4F4 MOV X2, X31
	0x03E7D4F8 BL 0x3E69A60
	0x03E7D4FC LDP X20, X19, [X31 + 0x10]
	0x03E7D500 LDP X30, X21, [X31], #0x20
	0x03E7D504 B 0x3E7D034
	0x03E7D508 STP X30, X23, [X31 - 0x30]!
	0x03E7D50C STP X22, X21, [X31 + 0x10]
	0x03E7D510 STP X20, X19, [X31 + 0x20]
	0x03E7D514 ADRP X22, 0x56B000
	0x03E7D518 ADRP X23, 0x2EF000
	0x03E7D51C LDRB W8, [X22 + 0xDA2]
	0x03E7D520 LDR X23, [X23 + 0xB60]
	0x03E7D524 MOV X19, X2
	0x03E7D528 MOV X21, X1
	0x03E7D52C MOV X20, X0
	0x03E7D530 TBNZ X8, 0x0, 0x3E7D56C
	0x03E7D534 ADRP X0, 0x2EF000
	0x03E7D538 LDR X0, [X0 + 0xB50]
	0x03E7D53C BL 0x1C16CF4
	0x03E7D540 ADRP X0, 0x27D000
	0x03E7D544 LDR X0, [X0 + 0x248]
	0x03E7D548 BL 0x1C16CF4
	0x03E7D54C ADRP X0, 0x2EF000
	0x03E7D550 LDR X0, [X0 + 0xB68]
	0x03E7D554 BL 0x1C16CF4
	0x03E7D558 ADRP X0, 0x2EF000
	0x03E7D55C LDR X0, [X0 + 0xB60]
	0x03E7D560 BL 0x1C16CF4
	0x03E7D564 MOVZ W8, 0x1
	0x03E7D568 STRB W8, [X22 + 0xDA2]
	0x03E7D56C LDR X0, [X23]
	0x03E7D570 BL 0x1C16F10
	0x03E7D574 MOV X1, X31
	0x03E7D578 MOV X22, X0
	0x03E7D57C BL 0x33BDD8C
	0x03E7D580 CBZ X22, 0x3E7D5F0
	0x03E7D584 ADRP X8, 0x2EF000
	0x03E7D588 LDR X8, [X8 + 0xB50]
	0x03E7D58C STR X21, [X22 + 0x10]
	0x03E7D590 ADRP X21, 0x2EF000
	0x03E7D594 ADRP X23, 0x27D000
	0x03E7D598 LDR X0, [X8]
	0x03E7D59C LDR X21, [X21 + 0xB68]
	0x03E7D5A0 LDR X23, [X23 + 0x248]
	0x03E7D5A4 BL 0x1C16F10
	0x03E7D5A8 LDR X2, [X21]
	0x03E7D5AC MOV X1, X22
	0x03E7D5B0 MOV X3, X31
	0x03E7D5B4 MOV X21, X0
	0x03E7D5B8 BL 0x2A6B948
	0x03E7D5BC LDR X0, [X23]
	0x03E7D5C0 LDR W8, [X0 + 0xE0]
	0x03E7D5C4 CBNZ W8, 0x3E7D5CC
	0x03E7D5C8 BL 0x1C16DFC
	0x03E7D5CC MOV X0, X20
	0x03E7D5D0 MOV X2, X21
	0x03E7D5D4 MOV X3, X19
	0x03E7D5D8 LDP X20, X19, [X31 + 0x20]
	0x03E7D5DC LDP X22, X21, [X31 + 0x10]
	0x03E7D5E0 MOVZ W1, 0x2
	0x03E7D5E4 MOV X4, X31
	0x03E7D5E8 LDP X30, X23, [X31], #0x30
	0x03E7D5EC B 0x3E69E90
	0x03E7D5F0 BL 0x1C16F20
	0x03E7D5F4 MOV X1, X31
	0x03E7D5F8 B 0x33BDD8C
	0x03E7D5FC STP X30, X21, [X31 - 0x20]!
	0x03E7D600 STP X20, X19, [X31 + 0x10]
	0x03E7D604 ADRP X21, 0x56B000
	0x03E7D608 LDRB W8, [X21 + 0xDA3]
	0x03E7D60C MOV X19, X1
	0x03E7D610 MOV X20, X0
	0x03E7D614 TBNZ X8, 0x0, 0x3E7D638
	0x03E7D618 ADRP X0, 0x27D000
	0x03E7D61C LDR X0, [X0 + 0x248]
	0x03E7D620 BL 0x1C16CF4
	0x03E7D624 ADRP X0, 0x2EF000
	0x03E7D628 LDR X0, [X0 + 0x3C8]
	0x03E7D62C BL 0x1C16CF4
	0x03E7D630 MOVZ W8, 0x1
	0x03E7D634 STRB W8, [X21 + 0xDA3]
	0x03E7D638 CBZ X19, 0x3E7D6FC
	0x03E7D63C LDRB W8, [X19 + 0x19]
	0x03E7D640 CMP W8, 0x1
	0x03E7D644 B.NE 0x3E7D6C4
	0x03E7D648 ADRP X8, 0x27D000
	0x03E7D64C LDR X8, [X8 + 0x248]
	0x03E7D650 LDR X0, [X8]
	0x03E7D654 LDR W8, [X0 + 0xE0]
	0x03E7D658 CBNZ W8, 0x3E7D660
	0x03E7D65C BL 0x1C16DFC
	0x03E7D660 MOVZ W1, 0x4
	0x03E7D664 MOV X0, X20
	0x03E7D668 MOV X2, X31
	0x03E7D66C BL 0x3E69A60
	0x03E7D670 CBZ X0, 0x3E7D6FC
	0x03E7D674 LDR W8, [X0 + 0x18]
	0x03E7D678 CMP W8, 0x4
	0x03E7D67C B.EQ 0x3E7D6E8
	0x03E7D680 ADRP X0, 0x2EF000
	0x03E7D684 LDR X0, [X0 + 0xB70]
	0x03E7D688 BL 0x1C16D08
	0x03E7D68C MOV X19, X0
	0x03E7D690 ADRP X0, 0x29E000
	0x03E7D694 LDR X0, [X0 + 0xB38]
	0x03E7D698 BL 0x1C16D08
	0x03E7D69C BL 0x1C16F10
	0x03E7D6A0 MOV X1, X19
	0x03E7D6A4 MOV X20, X0
	0x03E7D6A8 BL 0x3E7AAA8
	0x03E7D6AC ADRP X0, 0x2EF000
	0x03E7D6B0 LDR X0, [X0 + 0xB78]
	0x03E7D6B4 BL 0x1C16D08
	0x03E7D6B8 MOV X1, X0
	0x03E7D6BC MOV X0, X20
	0x03E7D6C0 BL 0x1C16DEC
	0x03E7D6C4 ADRP X20, 0x2EF000
	0x03E7D6C8 LDR X20, [X20 + 0x3C8]
	0x03E7D6CC LDR X0, [X20]
	0x03E7D6D0 LDR W8, [X0 + 0xE0]
	0x03E7D6D4 CBNZ W8, 0x3E7D6E0
	0x03E7D6D8 BL 0x1C16DFC
	0x03E7D6DC LDR X0, [X20]
	0x03E7D6E0 LDR X8, [X0 + 0xB8]
	0x03E7D6E4 LDR X0, [X8 + 0x8]
	0x03E7D6E8 STR X0, [X19 + 0x20]
	0x03E7D6EC MOV X0, X19
	0x03E7D6F0 LDP X20, X19, [X31 + 0x10]
	0x03E7D6F4 LDP X30, X21, [X31], #0x20
	0x03E7D6F8 RET
	0x03E7D6FC BL 0x1C16F20
	0x03E7D700 STR X30, [X31 - 0x40]!
	0x03E7D704 STP X24, X23, [X31 + 0x10]
	0x03E7D708 STP X22, X21, [X31 + 0x20]
	0x03E7D70C STP X20, X19, [X31 + 0x30]
	0x03E7D710 ADRP X23, 0x56B000
	0x03E7D714 ADRP X24, 0x2EF000
	0x03E7D718 LDRB W8, [X23 + 0xDA4]
	0x03E7D71C LDR X24, [X24 + 0xB80]
	0x03E7D720 MOV X19, X3
	0x03E7D724 MOV X21, X2
	0x03E7D728 MOV X22, X1
	0x03E7D72C MOV X20, X0
	0x03E7D730 TBNZ X8, 0x0, 0x3E7D778
	0x03E7D734 ADRP X0, 0x2EF000
	0x03E7D738 LDR X0, [X0 + 0xB50]
	0x03E7D73C BL 0x1C16CF4
	0x03E7D740 ADRP X0, 0x27D000
	0x03E7D744 LDR X0, [X0 + 0x248]
	0x03E7D748 BL 0x1C16CF4
	0x03E7D74C ADRP X0, 0x2EF000
	0x03E7D750 LDR X0, [X0 + 0xB88]
	0x03E7D754 BL 0x1C16CF4
	0x03E7D758 ADRP X0, 0x2EF000
	0x03E7D75C LDR X0, [X0 + 0xB80]
	0x03E7D760 BL 0x1C16CF4
	0x03E7D764 ADRP X0, 0x2EF000
	0x03E7D768 LDR X0, [X0 + 0x3C8]
	0x03E7D76C BL 0x1C16CF4
	0x03E7D770 MOVZ W8, 0x1
	0x03E7D774 STRB W8, [X23 + 0xDA4]
	0x03E7D778 LDR X0, [X24]
	0x03E7D77C BL 0x1C16F10
	0x03E7D780 MOV X1, X31
	0x03E7D784 MOV X23, X0
	0x03E7D788 BL 0x33BDD8C
	0x03E7D78C CBZ X23, 0x3E7D86C
	0x03E7D790 STP X22, X21, [X23 + 0x18]
	0x03E7D794 CBZ X22, 0x3E7D86C
	0x03E7D798 LDRB W8, [X22 + 0x19]
	0x03E7D79C CMP W8, 0x1
	0x03E7D7A0 B.NE 0x3E7D818
	0x03E7D7A4 MOVZ W8, 0x4
	0x03E7D7A8 STR W8, [X23 + 0x10]
	0x03E7D7AC ADRP X8, 0x2EF000
	0x03E7D7B0 LDR X8, [X8 + 0xB50]
	0x03E7D7B4 LDR X0, [X8]
	0x03E7D7B8 BL 0x1C16F10
	0x03E7D7BC ADRP X8, 0x2EF000
	0x03E7D7C0 LDR X8, [X8 + 0xB88]
	0x03E7D7C4 MOV X1, X23
	0x03E7D7C8 MOV X3, X31
	0x03E7D7CC MOV X21, X0
	0x03E7D7D0 LDR X2, [X8]
	0x03E7D7D4 BL 0x2A6B948
	0x03E7D7D8 ADRP X8, 0x27D000
	0x03E7D7DC LDR X8, [X8 + 0x248]

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+32], X29
	003 Move [X31+40], X30
	004 Move [X31+48], X28
	005 Move [X31+56], X27
	006 Move [X31+64], X26
	007 Move [X31+72], X25
	008 Move [X31+80], X24
	009 Move [X31+88], X23
	010 Move [X31+96], X22
	011 Move [X31+104], X21
	012 Move [X31+112], X20
	013 Move [X31+120], X19
	014 Move X19, 0x56C000
	015 Move X20, 0x2F0000
	016 Move W8, [X19+3484]
	017 Move X20, [X20+2688]
	018 Move X22, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {73}
	023 Move X0, 0x280000
	024 Move X0, [X0+2536]
	025 Call 0x1C17CF4
	026 Move X0, 0x2F0000
	027 Move X0, [X0+2696]
	028 Call 0x1C17CF4
	029 Move X0, 0x277000
	030 Move X0, [X0+1880]
	031 Call 0x1C17CF4
	032 Move X0, 0x277000
	033 Move X0, [X0+2288]
	034 Call 0x1C17CF4
	035 Move X0, 0x279000
	036 Move X0, [X0+632]
	037 Call 0x1C17CF4
	038 Move X0, 0x2F0000
	039 Move X0, [X0+2704]
	040 Call 0x1C17CF4
	041 Move X0, 0x2F0000
	042 Move X0, [X0+2688]
	043 Call 0x1C17CF4
	044 Move X0, 0x2F0000
	045 Move X0, [X0+2712]
	046 Call 0x1C17CF4
	047 Move X0, 0x2F0000
	048 Move X0, [X0+2720]
	049 Call 0x1C17CF4
	050 Move X0, 0x2F0000
	051 Move X0, [X0+2728]
	052 Call 0x1C17CF4
	053 Move X0, 0x2F0000
	054 Move X0, [X0+2736]
	055 Call 0x1C17CF4
	056 Move X0, 0x2F0000
	057 Move X0, [X0+2744]
	058 Call 0x1C17CF4
	059 Move X0, 0x2F0000
	060 Move X0, [X0+2752]
	061 Call 0x1C17CF4
	062 Move X0, 0x2F0000
	063 Move X0, [X0+2760]
	064 Call 0x1C17CF4
	065 Move X0, 0x2F0000
	066 Move X0, [X0+2768]
	067 Call 0x1C17CF4
	068 Move X0, 0x2F0000
	069 Move X0, [X0+2776]
	070 Call 0x1C17CF4
	071 Move W8, 1
	072 Move [X19+3484], W8
	073 Move X0, [X20]
	074 Call 0x1C17F10
	075 Move X1, X31
	076 Move X27, X0
	077 Call Object..ctor, X0
	078 Compare X22, 0
	079 JumpIfEqual {408}
	080 Move X25, 0x277000
	081 Move X24, 0x2F0000
	082 Move X20, 0x2F0000
	083 Move X19, 0x2F0000
	084 Move X25, [X25+1880]
	085 Move X24, [X24+2728]
	086 Move X20, [X20+2752]
	087 Move X19, [X19+2744]
	088 Move X0, X22
	089 Call WebSocketFrame.get_Length, X0
	090 Move X8, X0
	091 ShiftRight X8, 6
	092 And X8, X8, 0x7FFFFFFF
	093 Move X23, X0
	094 NotImplemented "Instruction CMP not yet implemented."
	095 Move X9, 0x2F0000
	096 Move X9, [X9+2720]
	097 NotImplemented "Instruction CMP not yet implemented."
	098 Move X9, 0x2F0000
	099 Move X9, [X9+2760]
	100 Move W8, 4
	101 Move X8, 0x2F0000
	102 Move X9, 0x2F0000
	103 Move X8, [X8+2776]
	104 Move X9, [X9+2768]
	105 Move X10, X23
	106 ShiftRight X10, 34
	107 And X10, X10, 0x7FFFFFFF
	108 Move W11, 16
	109 Move W12, 8
	110 NotImplemented "Instruction CMP not yet implemented."
	111 NotImplemented "Instruction CSEL not yet implemented."
	112 NotImplemented "Instruction CSEL not yet implemented."
	113 Move X0, [X25]
	114 Move X21, [X9]
	115 Add X1, X31, 28
	116 Move [X31+28], W8
	117 Call 0x1C17E04
	118 Move X8, [X24]
	119 Move X1, X0
	120 Move X2, X31
	121 Move X0, X8
	122 Call String.Format, X0, X1
	123 Move X8, [X20]
	124 Move X20, X0
	125 Move X1, X20
	126 Move X2, X31
	127 Move X0, X8
	128 Call String.Format, X0, X1
	129 Move X8, [X19]
	130 Move X24, X0
	131 Move X1, X21
	132 Move X2, X31
	133 Move X0, X8
	134 Call String.Format, X0, X1
	135 Compare X27, 0
	136 JumpIfEqual {408}
	137 Move X8, 0x2F0000
	138 Move X8, [X8+2736]
	139 Move [X27+24], X0
	140 Move X19, 0x277000
	141 Move X25, 0x2F0000
	142 Move X0, [X8]
	143 Move X26, 0x2F0000
	144 Move X19, [X19+2288]
	145 Move X25, [X25+2696]
	146 Move X26, [X26+2704]
	147 Move X1, X20
	148 Move X2, X31
	149 Call String.Format, X0, X1
	150 Move X8, [X19]
	151 Move X19, X0
	152 Move X0, X8
	153 Call 0x1C17F10
	154 Move W1, 64
	155 Move X2, X31
	156 Move X21, X0
	157 Call StringBuilder..ctor, X0, X1
	158 Move [X27+16], X21
	159 Move X0, [X25]
	160 Call 0x1C17F10
	161 Move X2, [X26]
	162 Move X1, X27
	163 Move X3, X31
	164 Move X21, X0
	165 Call Func`1<Object>..ctor, X0, X1, X2
	166 Compare X21, 0
	167 JumpIfEqual {408}
	168 Move X8, [X21+24]
	169 Move X0, [X21+64]
	170 Move X1, [X21+40]
	171 Move [X31+8], X19
	172 NotImplemented "Instruction BLR not yet implemented."
	173 Move X21, X0
	174 Move X0, X22
	175 Call WebSocketFrame.ToArray, X0
	176 Move X8, [X27+16]
	177 Move [X31+16], X27
	178 Compare X8, 0
	179 JumpIfEqual {408}
	180 Move X9, 0x279000
	181 Move X9, [X9+632]
	182 Move X22, X0
	183 Move X0, X8
	184 Move X1, X24
	185 Move X9, [X9]
	186 Move X3, X31
	187 And W27, W23, 3
	188 Move X29, X23
	189 ShiftRight X29, 2
	190 And X29, X29, 0x7FFFFFFF
	191 Move X9, [X9+184]
	192 Move X2, [X9]
	193 Call StringBuilder.AppendFormat, X0, X1, X2
	194 Move X20, X31
	195 Move X19, X31
	196 Add X26, X29, 1
	197 Add X28, X22, 32
	198 NotImplemented "Instruction CMP not yet implemented."
	199 Compare X22, 0
	200 JumpIfEqual {408}
	201 Move W8, [X22+24]
	202 NotImplemented "Instruction CMP not yet implemented."
	203 Move X8, 0x280000
	204 Move X8, [X8+2536]
	205 Move W23, [X28]
	206 Move X0, [X8]
	207 Move W8, [X0+224]
	208 Compare W8, 0
	209 JumpIfNotEqual {211}
	210 Call 0x1C17DFC
	211 Move W1, 2
	212 Move W0, W23
	213 Move X2, X31
	214 Call Convert.ToString, X0, X1
	215 Compare X0, 0
	216 JumpIfEqual {408}
	217 Move W1, 8
	218 Move W2, 48
	219 Move X3, X31
	220 Call String.PadLeft, X0, X1, X2
	221 Move W8, [X22+24]
	222 Add W9, W20, 1
	223 NotImplemented "Instruction CMP not yet implemented."
	224 Add X8, X28, X20
	225 Move X23, X0
	226 Move W0, [X8+1]
	227 Move W1, 2
	228 Move X2, X31
	229 Call Convert.ToString, X0, X1
	230 Compare X0, 0
	231 JumpIfEqual {408}
	232 Move W1, 8
	233 Move W2, 48
	234 Move X3, X31
	235 Call String.PadLeft, X0, X1, X2
	236 Move W8, [X22+24]
	237 Add W9, W20, 2
	238 NotImplemented "Instruction CMP not yet implemented."
	239 Add X8, X28, X20
	240 Move X24, X0
	241 Move W0, [X8+2]
	242 Move W1, 2
	243 Move X2, X31
	244 Call Convert.ToString, X0, X1
	245 Compare X0, 0
	246 JumpIfEqual {408}
	247 Move W1, 8
	248 Move W2, 48
	249 Move X3, X31
	250 Call String.PadLeft, X0, X1, X2
	251 Move W8, [X22+24]
	252 Add W9, W20, 3
	253 NotImplemented "Instruction CMP not yet implemented."
	254 Add X8, X28, X20
	255 Move X25, X0
	256 Move W0, [X8+3]
	257 Move W1, 2
	258 Move X2, X31
	259 Call Convert.ToString, X0, X1
	260 Compare X0, 0
	261 JumpIfEqual {408}
	262 Move W1, 8
	263 Move W2, 48
	264 Move X3, X31
	265 Call String.PadLeft, X0, X1, X2
	266 Compare X21, 0
	267 JumpIfEqual {408}
	268 Move X4, X0
	269 Move X8, [X21+24]
	270 Move X0, [X21+64]
	271 Move X5, [X21+40]
	272 Move X1, X23
	273 Move X2, X24
	274 Move X3, X25
	275 NotImplemented "Instruction BLR not yet implemented."
	276 Compare W27, 0
	277 JumpIfEqual {372}
	278 Compare X22, 0
	279 JumpIfEqual {408}
	280 Move W8, [X22+24]
	281 NotImplemented "Instruction CMP not yet implemented."
	282 Move X8, 0x280000
	283 Move X8, [X8+2536]
	284 Move W23, [X28]
	285 Move X0, [X8]
	286 Move W8, [X0+224]
	287 Compare W8, 0
	288 JumpIfNotEqual {290}
	289 Call 0x1C17DFC
	290 Move W1, 2
	291 Move W0, W23
	292 Move X2, X31
	293 Call Convert.ToString, X0, X1
	294 Compare X0, 0
	295 JumpIfEqual {408}
	296 Move W1, 8
	297 Move W2, 48
	298 Move X3, X31
	299 Call String.PadLeft, X0, X1, X2
	300 NotImplemented "Instruction CMP not yet implemented."
	301 Move X23, X0
	302 Move W8, [X22+24]
	303 Add W9, W20, 1
	304 NotImplemented "Instruction CMP not yet implemented."
	305 Move X8, 0x280000
	306 Move X8, [X8+2536]
	307 Move X0, [X8]
	308 Add X8, X28, X20
	309 Move W24, [X8+1]
	310 Move W9, [X0+224]
	311 Compare W9, 0
	312 JumpIfNotEqual {314}
	313 Call 0x1C17DFC
	314 Move W1, 2
	315 Move W0, W24
	316 Move X2, X31
	317 Call Convert.ToString, X0, X1
	318 Compare X0, 0
	319 JumpIfEqual {408}
	320 Move W1, 8
	321 Move W2, 48
	322 Move X3, X31
	323 Call String.PadLeft, X0, X1, X2
	324 Move X24, X0
	325 Move X8, 0x279000
	326 Move X8, [X8+632]
	327 Move X8, [X8]
	328 Move X8, [X8+184]
	329 Move X24, [X8]
	330 NotImplemented "Instruction CMP not yet implemented."
	331 Move W8, [X22+24]
	332 Add W9, W20, 2
	333 NotImplemented "Instruction CMP not yet implemented."
	334 Move X8, 0x280000
	335 Move X8, [X8+2536]
	336 Move X0, [X8]
	337 Add X8, X28, X20
	338 Move W25, [X8+2]
	339 Move W9, [X0+224]
	340 Compare W9, 0
	341 JumpIfNotEqual {343}
	342 Call 0x1C17DFC
	343 Move W1, 2
	344 Move W0, W25
	345 Move X2, X31
	346 Call Convert.ToString, X0, X1
	347 Compare X0, 0
	348 JumpIfEqual {408}
	349 Move W1, 8
	350 Move W2, 48
	351 Move X3, X31
	352 Call String.PadLeft, X0, X1, X2
	353 Move X3, X0
	354 Move X8, 0x279000
	355 Move X8, [X8+632]
	356 Move X8, [X8]
	357 Move X8, [X8+184]
	358 Move X3, [X8]
	359 Compare X21, 0
	360 JumpIfEqual {408}
	361 Move X8, 0x279000
	362 Move X8, [X8+632]
	363 Move X9, [X21+24]
	364 Move X0, [X21+64]
	365 Move X5, [X21+40]
	366 Move X8, [X8]
	367 Move X1, X23
	368 Move X2, X24
	369 Move X8, [X8+184]
	370 Move X4, [X8]
	371 NotImplemented "Instruction BLR not yet implemented."
	372 Add X19, X19, 1
	373 NotImplemented "Instruction CMP not yet implemented."
	374 Add X20, X20, 4
	375 Move X19, [X31+16]
	376 Move X0, [X19+16]
	377 Compare X0, 0
	378 JumpIfEqual {408}
	379 Move X8, 0x279000
	380 Move X8, [X8+632]
	381 Move X1, [X31+8]
	382 Move X3, X31
	383 Move X8, [X8]
	384 Move X8, [X8+184]
	385 Move X2, [X8]
	386 Call StringBuilder.AppendFormat, X0, X1, X2
	387 Move X0, [X19+16]
	388 Compare X0, 0
	389 JumpIfEqual {408}
	390 Move X8, [X0]
	391 Move X9, [X8+360]
	392 Move X1, [X8+368]
	393 NotImplemented "Instruction BLR not yet implemented."
	394 Move X20, [X31+112]
	395 Move X19, [X31+120]
	396 Move X22, [X31+96]
	397 Move X21, [X31+104]
	398 Move X24, [X31+80]
	399 Move X23, [X31+88]
	400 Move X26, [X31+64]
	401 Move X25, [X31+72]
	402 Move X28, [X31+48]
	403 Move X27, [X31+56]
	404 Move X29, [X31+32]
	405 Move X30, [X31+40]
	406 Add X31, X31, 128
	407 Return X0
	408 Call 0x1C17F20
	409 Call 0x1C17F28

Method: System.String print(WebSocketSharp.WebSocketFrame frame)

Disassembly:
	0x03E7DB44 CMP W8, 0x7E
	0x03E7DB48 B.HI 0x3E7DBE0
	0x03E7DB4C ADRP X8, 0x27D000
	0x03E7DB50 LDR X8, [X8 + 0x248]
	0x03E7DB54 LDR X0, [X8]
	0x03E7DB58 LDR W8, [X0 + 0xE0]
	0x03E7DB5C CBNZ W8, 0x3E7DB64
	0x03E7DB60 BL 0x1C16DFC
	0x03E7DB64 MOV X0, X20
	0x03E7DB68 MOV W1, W22
	0x03E7DB6C MOV X2, X23
	0x03E7DB70 MOV X3, X19
	0x03E7DB74 LDP X20, X19, [X31 + 0x30]
	0x03E7DB78 LDP X22, X21, [X31 + 0x20]
	0x03E7DB7C LDP X24, X23, [X31 + 0x10]
	0x03E7DB80 MOV X4, X31
	0x03E7DB84 LDR X30, [X31], #0x40
	0x03E7DB88 B 0x3E69E90
	0x03E7DB8C LDR W9, [X8 + 0xE0]
	0x03E7DB90 LDR X19, [X21 + 0x18]
	0x03E7DB94 CBNZ W9, 0x3E7DBA0
	0x03E7DB98 MOV X0, X8
	0x03E7DB9C BL 0x1C16DFC
	0x03E7DBA0 CBZ X19, 0x3E7DC28
	0x03E7DBA4 LDR X8, [X23]
	0x03E7DBA8 LDR X8, [X8 + 0xB8]
	0x03E7DBAC LDR X8, [X8]
	0x03E7DBB0 STR X8, [X19 + 0x30]
	0x03E7DBB4 LDR X8, [X21 + 0x20]
	0x03E7DBB8 CBZ X8, 0x3E7DC28
	0x03E7DBBC LDR X1, [X21 + 0x18]
	0x03E7DBC0 LDR X3, [X8 + 0x18]
	0x03E7DBC4 LDR X0, [X8 + 0x40]
	0x03E7DBC8 LDR X2, [X8 + 0x28]
	0x03E7DBCC LDP X20, X19, [X31 + 0x30]
	0x03E7DBD0 LDP X22, X21, [X31 + 0x20]
	0x03E7DBD4 LDP X24, X23, [X31 + 0x10]
	0x03E7DBD8 LDR X30, [X31], #0x40
	0x03E7DBDC BR X3
	0x03E7DBE0 ADRP X8, 0x27D000
	0x03E7DBE4 LDR X8, [X8 + 0x248]
	0x03E7DBE8 LDR X21, [X21 + 0x10]
	0x03E7DBEC LDR X0, [X8]
	0x03E7DBF0 LDR W8, [X0 + 0xE0]
	0x03E7DBF4 CBNZ W8, 0x3E7DBFC
	0x03E7DBF8 BL 0x1C16DFC
	0x03E7DBFC MOV X0, X20
	0x03E7DC00 MOV X1, X21
	0x03E7DC04 MOV X3, X23
	0x03E7DC08 MOV X4, X19
	0x03E7DC0C LDP X20, X19, [X31 + 0x30]
	0x03E7DC10 LDP X22, X21, [X31 + 0x20]
	0x03E7DC14 LDP X24, X23, [X31 + 0x10]
	0x03E7DC18 MOVZ W2, 0x400
	0x03E7DC1C MOV X5, X31
	0x03E7DC20 LDR X30, [X31], #0x40
	0x03E7DC24 B 0x3E6A060
	0x03E7DC28 BL 0x1C16F20
	0x03E7DC2C ADRP X0, 0x2EF000
	0x03E7DC30 LDR X0, [X0 + 0xB90]
	0x03E7DC34 BL 0x1C16D08
	0x03E7DC38 MOV X19, X0
	0x03E7DC3C ADRP X0, 0x29E000
	0x03E7DC40 LDR X0, [X0 + 0xB38]
	0x03E7DC44 BL 0x1C16D08
	0x03E7DC48 BL 0x1C16F10
	0x03E7DC4C MOVZ W1, 0x3F1
	0x03E7DC50 MOV X2, X19
	0x03E7DC54 MOV X20, X0
	0x03E7DC58 BL 0x3E7AAE0
	0x03E7DC5C ADRP X0, 0x2EF000
	0x03E7DC60 LDR X0, [X0 + 0xBB8]
	0x03E7DC64 BL 0x1C16D08
	0x03E7DC68 MOV X1, X0
	0x03E7DC6C MOV X0, X20
	0x03E7DC70 BL 0x1C16DEC
	0x03E7DC74 MOV X1, X31
	0x03E7DC78 B 0x33BDD8C
	0x03E7DC7C STR X30, [X31 - 0x30]!
	0x03E7DC80 STP X22, X21, [X31 + 0x10]
	0x03E7DC84 STP X20, X19, [X31 + 0x20]
	0x03E7DC88 ADRP X21, 0x56B000
	0x03E7DC8C ADRP X22, 0x2EF000
	0x03E7DC90 LDRB W8, [X21 + 0xDA7]
	0x03E7DC94 LDR X22, [X22 + 0x748]
	0x03E7DC98 MOV W20, W1
	0x03E7DC9C MOV X19, X0
	0x03E7DCA0 TBNZ X8, 0x0, 0x3E7DCB8
	0x03E7DCA4 ADRP X0, 0x2EF000
	0x03E7DCA8 LDR X0, [X0 + 0x748]
	0x03E7DCAC BL 0x1C16CF4
	0x03E7DCB0 MOVZ W8, 0x1
	0x03E7DCB4 STRB W8, [X21 + 0xDA7]
	0x03E7DCB8 LDR X0, [X22]
	0x03E7DCBC BL 0x1C16F10
	0x03E7DCC0 AND W5, W20, 0x1
	0x03E7DCC4 MOVZ W1, 0x1
	0x03E7DCC8 MOVZ W2, 0x8
	0x03E7DCCC MOV X3, X19
	0x03E7DCD0 MOV W4, W31
	0x03E7DCD4 MOV X21, X0
	0x03E7DCD8 BL 0x3E7BCCC
	0x03E7DCDC MOV X0, X21
	0x03E7DCE0 LDP X20, X19, [X31 + 0x20]
	0x03E7DCE4 LDP X22, X21, [X31 + 0x10]
	0x03E7DCE8 LDR X30, [X31], #0x30
	0x03E7DCEC RET
	0x03E7DCF0 STP X30, X21, [X31 - 0x20]!
	0x03E7DCF4 STP X20, X19, [X31 + 0x10]
	0x03E7DCF8 ADRP X21, 0x56B000
	0x03E7DCFC ADRP X20, 0x2EF000
	0x03E7DD00 LDRB W8, [X21 + 0xDA8]
	0x03E7DD04 LDR X20, [X20 + 0x3B8]
	0x03E7DD08 MOV W19, W0
	0x03E7DD0C TBNZ X8, 0x0, 0x3E7DD30
	0x03E7DD10 ADRP X0, 0x2EF000
	0x03E7DD14 LDR X0, [X0 + 0x3B8]
	0x03E7DD18 BL 0x1C16CF4
	0x03E7DD1C ADRP X0, 0x2EF000
	0x03E7DD20 LDR X0, [X0 + 0x748]
	0x03E7DD24 BL 0x1C16CF4
	0x03E7DD28 MOVZ W8, 0x1
	0x03E7DD2C STRB W8, [X21 + 0xDA8]
	0x03E7DD30 LDR X0, [X20]
	0x03E7DD34 ADRP X21, 0x2EF000
	0x03E7DD38 LDR W8, [X0 + 0xE0]
	0x03E7DD3C LDR X21, [X21 + 0x748]
	0x03E7DD40 CBNZ W8, 0x3E7DD4C
	0x03E7DD44 BL 0x1C16DFC
	0x03E7DD48 LDR X0, [X20]
	0x03E7DD4C LDR X8, [X0 + 0xB8]
	0x03E7DD50 LDR X0, [X21]
	0x03E7DD54 LDR X20, [X8]
	0x03E7DD58 BL 0x1C16F10
	0x03E7DD5C AND W5, W19, 0x1
	0x03E7DD60 MOVZ W1, 0x1
	0x03E7DD64 MOVZ W2, 0x9
	0x03E7DD68 MOV X3, X20
	0x03E7DD6C MOV W4, W31
	0x03E7DD70 MOV X21, X0
	0x03E7DD74 BL 0x3E7BCCC
	0x03E7DD78 LDP X20, X19, [X31 + 0x10]
	0x03E7DD7C MOV X0, X21
	0x03E7DD80 LDP X30, X21, [X31], #0x20
	0x03E7DD84 RET
	0x03E7DD88 STP X30, X23, [X31 - 0x30]!
	0x03E7DD8C STP X22, X21, [X31 + 0x10]
	0x03E7DD90 STP X20, X19, [X31 + 0x20]
	0x03E7DD94 ADRP X21, 0x56B000
	0x03E7DD98 ADRP X23, 0x2EF000
	0x03E7DD9C ADRP X22, 0x2EF000
	0x03E7DDA0 LDRB W8, [X21 + 0xDA9]
	0x03E7DDA4 LDR X23, [X23 + 0x3B8]
	0x03E7DDA8 LDR X22, [X22 + 0x748]
	0x03E7DDAC MOV W19, W1
	0x03E7DDB0 MOV X20, X0
	0x03E7DDB4 TBNZ X8, 0x0, 0x3E7DDD8
	0x03E7DDB8 ADRP X0, 0x2EF000
	0x03E7DDBC LDR X0, [X0 + 0x3B8]
	0x03E7DDC0 BL 0x1C16CF4
	0x03E7DDC4 ADRP X0, 0x2EF000
	0x03E7DDC8 LDR X0, [X0 + 0x748]
	0x03E7DDCC BL 0x1C16CF4
	0x03E7DDD0 MOVZ W8, 0x1
	0x03E7DDD4 STRB W8, [X21 + 0xDA9]
	0x03E7DDD8 LDR X0, [X23]
	0x03E7DDDC BL 0x1C16F10
	0x03E7DDE0 MOV X1, X20
	0x03E7DDE4 MOV X2, X31
	0x03E7DDE8 MOV X21, X0
	0x03E7DDEC BL 0x3E7A634
	0x03E7DDF0 LDR X0, [X22]
	0x03E7DDF4 BL 0x1C16F10
	0x03E7DDF8 AND W5, W19, 0x1
	0x03E7DDFC MOVZ W1, 0x1
	0x03E7DE00 MOVZ W2, 0x9
	0x03E7DE04 MOV X3, X21
	0x03E7DE08 MOV W4, W31
	0x03E7DE0C MOV X20, X0
	0x03E7DE10 BL 0x3E7BCCC
	0x03E7DE14 MOV X0, X20
	0x03E7DE18 LDP X20, X19, [X31 + 0x20]
	0x03E7DE1C LDP X22, X21, [X31 + 0x10]
	0x03E7DE20 LDP X30, X23, [X31], #0x30
	0x03E7DE24 RET
	0x03E7DE28 STR X30, [X31 - 0x30]!
	0x03E7DE2C STP X22, X21, [X31 + 0x10]
	0x03E7DE30 STP X20, X19, [X31 + 0x20]
	0x03E7DE34 ADRP X21, 0x56B000
	0x03E7DE38 ADRP X22, 0x2EF000
	0x03E7DE3C LDRB W8, [X21 + 0xDAA]
	0x03E7DE40 LDR X22, [X22 + 0x748]
	0x03E7DE44 MOV W20, W1
	0x03E7DE48 MOV X19, X0
	0x03E7DE4C TBNZ X8, 0x0, 0x3E7DE64
	0x03E7DE50 ADRP X0, 0x2EF000
	0x03E7DE54 LDR X0, [X0 + 0x748]
	0x03E7DE58 BL 0x1C16CF4
	0x03E7DE5C MOVZ W8, 0x1
	0x03E7DE60 STRB W8, [X21 + 0xDAA]
	0x03E7DE64 LDR X0, [X22]
	0x03E7DE68 BL 0x1C16F10
	0x03E7DE6C AND W5, W20, 0x1
	0x03E7DE70 MOVZ W1, 0x1
	0x03E7DE74 MOVZ W2, 0xA
	0x03E7DE78 MOV X3, X19
	0x03E7DE7C MOV W4, W31
	0x03E7DE80 MOV X21, X0
	0x03E7DE84 BL 0x3E7BCCC
	0x03E7DE88 MOV X0, X21
	0x03E7DE8C LDP X20, X19, [X31 + 0x20]
	0x03E7DE90 LDP X22, X21, [X31 + 0x10]
	0x03E7DE94 LDR X30, [X31], #0x30
	0x03E7DE98 RET
	0x03E7DE9C STP X30, X21, [X31 - 0x20]!
	0x03E7DEA0 STP X20, X19, [X31 + 0x10]
	0x03E7DEA4 MOV W20, W1
	0x03E7DEA8 MOV X21, X0
	0x03E7DEAC BL 0x3E7D4A8
	0x03E7DEB0 MOV X19, X0
	0x03E7DEB4 MOV X0, X21
	0x03E7DEB8 MOV X1, X19
	0x03E7DEBC BL 0x3E7D210
	0x03E7DEC0 MOV X0, X21
	0x03E7DEC4 MOV X1, X19
	0x03E7DEC8 BL 0x3E7D5FC
	0x03E7DECC MOV X0, X21
	0x03E7DED0 MOV X1, X19
	0x03E7DED4 BL 0x3E7D878
	0x03E7DED8 TBZ X20, 0x0, 0x3E7DEE8
	0x03E7DEDC CBZ X19, 0x3E7DEF8
	0x03E7DEE0 MOV X0, X19
	0x03E7DEE4 BL 0x3E7DEFC
	0x03E7DEE8 MOV X0, X19
	0x03E7DEEC LDP X20, X19, [X31 + 0x10]
	0x03E7DEF0 LDP X30, X21, [X31], #0x20
	0x03E7DEF4 RET
	0x03E7DEF8 BL 0x1C16F20
	0x03E7DEFC STR X30, [X31 - 0x20]!
	0x03E7DF00 STP X20, X19, [X31 + 0x10]
	0x03E7DF04 ADRP X20, 0x56B000
	0x03E7DF08 LDRB W8, [X20 + 0xDAC]
	0x03E7DF0C MOV X19, X0
	0x03E7DF10 TBNZ X8, 0x0, 0x3E7DF28
	0x03E7DF14 ADRP X0, 0x2EF000
	0x03E7DF18 LDR X0, [X0 + 0x3C8]
	0x03E7DF1C BL 0x1C16CF4
	0x03E7DF20 MOVZ W8, 0x1
	0x03E7DF24 STRB W8, [X20 + 0xDAC]
	0x03E7DF28 LDRB W8, [X19 + 0x19]
	0x03E7DF2C CBZ W8, 0x3E7DF70
	0x03E7DF30 LDR X0, [X19 + 0x30]
	0x03E7DF34 CBZ X0, 0x3E7DF7C
	0x03E7DF38 LDR X1, [X19 + 0x20]
	0x03E7DF3C ADRP X20, 0x2EF000
	0x03E7DF40 LDR X20, [X20 + 0x3C8]
	0x03E7DF44 MOV X2, X31
	0x03E7DF48 BL 0x3E7A744
	0x03E7DF4C LDR X0, [X20]
	0x03E7DF50 LDR W8, [X0 + 0xE0]
	0x03E7DF54 CBNZ W8, 0x3E7DF60
	0x03E7DF58 BL 0x1C16DFC
	0x03E7DF5C LDR X0, [X20]
	0x03E7DF60 LDR X8, [X0 + 0xB8]
	0x03E7DF64 LDR X8, [X8 + 0x8]
	0x03E7DF68 STRB W31, [X19 + 0x19]
	0x03E7DF6C STR X8, [X19 + 0x20]
	0x03E7DF70 LDP X20, X19, [X31 + 0x10]
	0x03E7DF74 LDR X30, [X31], #0x20
	0x03E7DF78 RET
	0x03E7DF7C BL 0x1C16F20
	0x03E7DF80 STR X30, [X31 - 0x40]!

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+48], X30
	003 Move [X31+56], X27
	004 Move [X31+64], X26
	005 Move [X31+72], X25
	006 Move [X31+80], X24
	007 Move [X31+88], X23
	008 Move [X31+96], X22
	009 Move [X31+104], X21
	010 Move [X31+112], X20
	011 Move [X31+120], X19
	012 Move X19, 0x56C000
	013 Move W8, [X19+3485]
	014 Move X21, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {48}
	019 Move X0, 0x278000
	020 Move X0, [X0+2520]
	021 Call 0x1C17CF4
	022 Move X0, 0x2F0000
	023 Move X0, [X0+2784]
	024 Call 0x1C17CF4
	025 Move X0, 0x2F0000
	026 Move X0, [X0+2792]
	027 Call 0x1C17CF4
	028 Move X0, 0x277000
	029 Move X0, [X0+2512]
	030 Call 0x1C17CF4
	031 Move X0, 0x2F0000
	032 Move X0, [X0+2800]
	033 Call 0x1C17CF4
	034 Move X0, 0x2F0000
	035 Move X0, [X0+2808]
	036 Call 0x1C17CF4
	037 Move X0, 0x279000
	038 Move X0, [X0+632]
	039 Call 0x1C17CF4
	040 Move X0, 0x2BE000
	041 Move X0, [X0+4040]
	042 Call 0x1C17CF4
	043 Move X0, 0x2F0000
	044 Move X0, [X0+2816]
	045 Call 0x1C17CF4
	046 Move W8, 1
	047 Move [X19+3485], W8
	048 Move [X31+40], X31
	049 Compare X21, 0
	050 JumpIfEqual {295}
	051 Move W26, [X21+56]
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Move X0, X21
	054 Call WebSocketFrame.get_ExactPayloadLength, X0
	055 Move [X31+40], X0
	056 Add X0, X31, 40
	057 Move X1, X31
	058 Call UInt64.ToString, X0
	059 Move X20, X0
	060 Move X8, 0x279000
	061 Move X8, [X8+632]
	062 Move X8, [X8]
	063 Move X8, [X8+184]
	064 Move X20, [X8]
	065 Move X0, [X21+32]
	066 Move X1, X31
	067 Call BitConverter.ToString, X0
	068 Move X19, X0
	069 Compare W26, 0
	070 JumpIfEqual {74}
	071 NotImplemented "Instruction CMP not yet implemented."
	072 Move X8, 0x2BE000
	073 Move X8, [X8+4040]
	074 Move X8, 0x279000
	075 Move X8, [X8+632]
	076 Move X8, [X8]
	077 Move X8, [X8+184]
	078 Move X22, [X8]
	079 Move W8, [X21+40]
	080 NotImplemented "Instruction CMP not yet implemented."
	081 Move W8, [X21+24]
	082 Compare W8, 0
	083 JumpIfEqual {88}
	084 Move W8, [X21+25]
	085 NotImplemented "Instruction CMP not yet implemented."
	086 Move W8, [X21+57]
	087 NotImplemented "Instruction CMP not yet implemented."
	088 Move X0, [X21+48]
	089 Compare X0, 0
	090 JumpIfEqual {295}
	091 Move X8, [X0]
	092 Move X9, [X8+360]
	093 Move X1, [X8+368]
	094 NotImplemented "Instruction BLR not yet implemented."
	095 Move X22, X0
	096 Move X8, 0x2F0000
	097 Move X9, 0x277000
	098 Move X8, [X8+2816]
	099 Move X9, [X9+2512]
	100 Move X25, 0x2F0000
	101 Move W1, 10
	102 Move X23, [X8]
	103 Move X0, [X9]
	104 Move X25, [X25+2784]
	105 Call 0x1C17D6C
	106 Move X24, X0
	107 Move W8, [X21+24]
	108 Move X0, [X25]
	109 Add X1, X31, 36
	110 Move [X31+36], W8
	111 Call 0x1C17E04
	112 Compare X24, 0
	113 JumpIfEqual {295}
	114 Move X25, X0
	115 Compare X0, 0
	116 JumpIfEqual {123}
	117 Move X8, [X24]
	118 Move X0, X25
	119 Move X1, [X8+64]
	120 Call 0x1C17E00
	121 Compare X0, 0
	122 JumpIfEqual {292}
	123 Move W8, [X24+24]
	124 Compare W8, 0
	125 JumpIfEqual {291}
	126 Move X27, 0x2F0000
	127 Move X27, [X27+2808]
	128 Move [X24+32], X25
	129 Move W8, [X21+57]
	130 Add X1, X31, 32
	131 Move X0, [X27]
	132 Move [X31+32], W8
	133 Call 0x1C17E04
	134 Move X25, X0
	135 Compare X0, 0
	136 JumpIfEqual {143}
	137 Move X8, [X24]
	138 Move X0, X25
	139 Move X1, [X8+64]
	140 Call 0x1C17E00
	141 Compare X0, 0
	142 JumpIfEqual {292}
	143 Move W8, [X24+24]
	144 NotImplemented "Instruction CMP not yet implemented."
	145 Move [X24+40], X25
	146 Move W8, [X21+58]
	147 Move X0, [X27]
	148 Add X1, X31, 28
	149 Move [X31+28], W8
	150 Call 0x1C17E04
	151 Move X25, X0
	152 Compare X0, 0
	153 JumpIfEqual {160}
	154 Move X8, [X24]
	155 Move X0, X25
	156 Move X1, [X8+64]
	157 Call 0x1C17E00
	158 Compare X0, 0
	159 JumpIfEqual {292}
	160 Move W8, [X24+24]
	161 NotImplemented "Instruction CMP not yet implemented."
	162 Move [X24+48], X25
	163 Move W8, [X21+59]
	164 Move X0, [X27]
	165 Add X1, X31, 24
	166 Move [X31+24], W8
	167 Call 0x1C17E04
	168 Move X25, X0
	169 Compare X0, 0
	170 JumpIfEqual {177}
	171 Move X8, [X24]
	172 Move X0, X25
	173 Move X1, [X8+64]
	174 Call 0x1C17E00
	175 Compare X0, 0
	176 JumpIfEqual {292}
	177 Move W8, [X24+24]
	178 NotImplemented "Instruction CMP not yet implemented."
	179 Move X8, 0x2F0000
	180 Move X8, [X8+2800]
	181 Move [X24+56], X25
	182 Move W9, [X21+40]
	183 Add X1, X31, 20
	184 Move X0, [X8]
	185 Move [X31+20], W9
	186 Call 0x1C17E04
	187 Move X25, X0
	188 Compare X0, 0
	189 JumpIfEqual {196}
	190 Move X8, [X24]
	191 Move X0, X25
	192 Move X1, [X8+64]
	193 Call 0x1C17E00
	194 Compare X0, 0
	195 JumpIfEqual {292}
	196 Move W8, [X24+24]
	197 NotImplemented "Instruction CMP not yet implemented."
	198 Move X8, 0x2F0000
	199 Move X8, [X8+2792]
	200 Move [X24+64], X25
	201 Move W9, [X21+25]
	202 Add X1, X31, 16
	203 Move X0, [X8]
	204 Move [X31+16], W9
	205 Call 0x1C17E04
	206 Move X21, X0
	207 Compare X0, 0
	208 JumpIfEqual {215}
	209 Move X8, [X24]
	210 Move X0, X21
	211 Move X1, [X8+64]
	212 Call 0x1C17E00
	213 Compare X0, 0
	214 JumpIfEqual {292}
	215 Move W8, [X24+24]
	216 NotImplemented "Instruction CMP not yet implemented."
	217 Move X8, 0x278000
	218 Move X8, [X8+2520]
	219 Move [X24+72], X21
	220 Add X1, X31, 12
	221 Move [X31+12], W26
	222 Move X0, [X8]
	223 Call 0x1C17E04
	224 Move X21, X0
	225 Compare X0, 0
	226 JumpIfEqual {233}
	227 Move X8, [X24]
	228 Move X0, X21
	229 Move X1, [X8+64]
	230 Call 0x1C17E00
	231 Compare X0, 0
	232 JumpIfEqual {292}
	233 Move W8, [X24+24]
	234 NotImplemented "Instruction CMP not yet implemented."
	235 Move [X24+80], X21
	236 Compare X20, 0
	237 JumpIfEqual {245}
	238 Move X8, [X24]
	239 Move X0, X20
	240 Move X1, [X8+64]
	241 Call 0x1C17E00
	242 Compare X0, 0
	243 JumpIfEqual {292}
	244 Move W8, [X24+24]
	245 NotImplemented "Instruction CMP not yet implemented."
	246 Move [X24+88], X20
	247 Compare X19, 0
	248 JumpIfEqual {256}
	249 Move X8, [X24]
	250 Move X0, X19
	251 Move X1, [X8+64]
	252 Call 0x1C17E00
	253 Compare X0, 0
	254 JumpIfEqual {292}
	255 Move W8, [X24+24]
	256 NotImplemented "Instruction CMP not yet implemented."
	257 Move [X24+96], X19
	258 Compare X22, 0
	259 JumpIfEqual {267}
	260 Move X8, [X24]
	261 Move X0, X22
	262 Move X1, [X8+64]
	263 Call 0x1C17E00
	264 Compare X0, 0
	265 JumpIfEqual {292}
	266 Move W8, [X24+24]
	267 NotImplemented "Instruction CMP not yet implemented."
	268 Move X0, X23
	269 Move X1, X24
	270 Move X2, X31
	271 Move [X24+104], X22
	272 Call String.Format, X0, X1
	273 Move X20, [X31+112]
	274 Move X19, [X31+120]
	275 Move X22, [X31+96]
	276 Move X21, [X31+104]
	277 Move X24, [X31+80]
	278 Move X23, [X31+88]
	279 Move X26, [X31+64]
	280 Move X25, [X31+72]
	281 Move X30, [X31+48]
	282 Move X27, [X31+56]
	283 Add X31, X31, 128
	284 Return X0
	285 Move X0, [X21+48]
	286 Compare X0, 0
	287 JumpIfEqual {295}
	288 Move X1, X31
	289 Call PayloadData.get_ApplicationData, X0
	290 Call WebSocketFrame.utf8Decode, X0
	291 Call 0x1C17F28
	292 Call 0x1C17F44
	293 Move X1, X31
	294 Call 0x1C17DEC
	295 Call 0x1C17F20

Method: WebSocketSharp.WebSocketFrame processHeader(System.Byte[] header)

Disassembly:
	0x03E7E034 LDR X2, [X23 + 0x28]
	0x03E7E038 MOV X0, X19
	0x03E7E03C MOV X1, X20
	0x03E7E040 LDP X20, X19, [X31 + 0x30]
	0x03E7E044 LDP X22, X21, [X31 + 0x20]
	0x03E7E048 LDP X24, X23, [X31 + 0x10]
	0x03E7E04C LDR X30, [X31], #0x40
	0x03E7E050 B 0x3E7D508
	0x03E7E054 BL 0x1C16F20
	0x03E7E058 MOV X1, X31
	0x03E7E05C B 0x33BDD8C
	0x03E7E060 STP X30, X21, [X31 - 0x20]!
	0x03E7E064 STP X20, X19, [X31 + 0x10]
	0x03E7E068 ADRP X20, 0x56A000
	0x03E7E06C ADRP X21, 0x2EE000
	0x03E7E070 LDRB W8, [X20 + 0xDAD]
	0x03E7E074 LDR X21, [X21 + 0xBD0]
	0x03E7E078 MOV X19, X0
	0x03E7E07C TBNZ X8, 0x0, 0x3E7E094
	0x03E7E080 ADRP X0, 0x2EE000
	0x03E7E084 LDR X0, [X0 + 0xBD0]
	0x03E7E088 BL 0x1C16CF4
	0x03E7E08C MOVZ W8, 0x1
	0x03E7E090 STRB W8, [X20 + 0xDAD]
	0x03E7E094 LDR X0, [X21]
	0x03E7E098 BL 0x1C16F10
	0x03E7E09C MOV X1, X31
	0x03E7E0A0 MOV X20, X0
	0x03E7E0A4 BL 0x33BDD8C
	0x03E7E0A8 STR W31, [X20 + 0x10]
	0x03E7E0AC STR X19, [X20 + 0x18]
	0x03E7E0B0 MOV X0, X20
	0x03E7E0B4 LDP X20, X19, [X31 + 0x10]
	0x03E7E0B8 LDP X30, X21, [X31], #0x20
	0x03E7E0BC RET
	0x03E7E0C0 STR X30, [X31 - 0x20]!
	0x03E7E0C4 STP X20, X19, [X31 + 0x10]
	0x03E7E0C8 MOV W19, W1
	0x03E7E0CC MOV X1, X31
	0x03E7E0D0 MOV X20, X0
	0x03E7E0D4 BL 0x33BDD8C
	0x03E7E0D8 STR W19, [X20 + 0x10]
	0x03E7E0DC LDP X20, X19, [X31 + 0x10]
	0x03E7E0E0 LDR X30, [X31], #0x20
	0x03E7E0E4 RET
	0x03E7E0E8 STP X30, X21, [X31 - 0x20]!
	0x03E7E0EC STP X20, X19, [X31 + 0x10]
	0x03E7E0F0 ADRP X21, 0x56A000
	0x03E7E0F4 LDRB W8, [X21 + 0xDAE]
	0x03E7E0F8 MOV W20, W1
	0x03E7E0FC MOV X19, X0
	0x03E7E100 TBNZ X8, 0x0, 0x3E7E118
	0x03E7E104 ADRP X0, 0x27D000
	0x03E7E108 LDR X0, [X0 + 0x958]
	0x03E7E10C BL 0x1C16CF4
	0x03E7E110 MOVZ W8, 0x1
	0x03E7E114 STRB W8, [X21 + 0xDAE]
	0x03E7E118 ADRP X21, 0x27D000
	0x03E7E11C LDR X21, [X21 + 0x958]
	0x03E7E120 MOV X0, X19
	0x03E7E124 TBZ X20, 0x0, 0x3E7E130
	0x03E7E128 BL 0x3E7C1E4
	0x03E7E12C B 0x3E7E134
	0x03E7E130 BL 0x3E7CB44
	0x03E7E134 MOV X19, X0
	0x03E7E138 LDR X0, [X21]
	0x03E7E13C LDR W8, [X0 + 0xE0]
	0x03E7E140 CBNZ W8, 0x3E7E148
	0x03E7E144 BL 0x1C16DFC
	0x03E7E148 MOV X0, X19
	0x03E7E14C LDP X20, X19, [X31 + 0x10]
	0x03E7E150 MOV X1, X31
	0x03E7E154 LDP X30, X21, [X31], #0x20
	0x03E7E158 B 0x33C33A0
	0x03E7E15C TBZ X1, 0x0, 0x3E7E164
	0x03E7E160 B 0x3E7C1E4
	0x03E7E164 B 0x3E7CB44
	0x03E7E168 STR X30, [X31 - 0x10]!
	0x03E7E16C BL 0x3E7C7E8
	0x03E7E170 MOV X1, X31
	0x03E7E174 LDR X30, [X31], #0x10
	0x03E7E178 B 0x3317424
	0x03E7E17C B 0x3E7E060
	0x03E7E180 STP X30, X21, [X31 - 0x20]!
	0x03E7E184 STP X20, X19, [X31 + 0x10]
	0x03E7E188 ADRP X20, 0x56A000
	0x03E7E18C ADRP X21, 0x2EE000
	0x03E7E190 LDRB W8, [X20 + 0xDB0]
	0x03E7E194 LDR X21, [X21 + 0xBD8]
	0x03E7E198 MOV X19, X0
	0x03E7E19C TBNZ X8, 0x0, 0x3E7E1CC
	0x03E7E1A0 ADRP X0, 0x2EE000
	0x03E7E1A4 LDR X0, [X0 + 0xBE0]
	0x03E7E1A8 BL 0x1C16CF4
	0x03E7E1AC ADRP X0, 0x2EE000
	0x03E7E1B0 LDR X0, [X0 + 0xBE8]
	0x03E7E1B4 BL 0x1C16CF4
	0x03E7E1B8 ADRP X0, 0x2EE000
	0x03E7E1BC LDR X0, [X0 + 0xBD8]
	0x03E7E1C0 BL 0x1C16CF4
	0x03E7E1C4 MOVZ W8, 0x1
	0x03E7E1C8 STRB W8, [X20 + 0xDB0]
	0x03E7E1CC LDR X0, [X21]
	0x03E7E1D0 BL 0x1C16F10
	0x03E7E1D4 MOV X1, X31
	0x03E7E1D8 MOV X20, X0
	0x03E7E1DC BL 0x33BDD8C
	0x03E7E1E0 CBZ X20, 0x3E7E224
	0x03E7E1E4 ADRP X8, 0x2EE000
	0x03E7E1E8 LDR X8, [X8 + 0xBE0]
	0x03E7E1EC STP X31, X19, [X20 + 0x10]
	0x03E7E1F0 ADRP X19, 0x2EE000
	0x03E7E1F4 LDR X0, [X8]
	0x03E7E1F8 LDR X19, [X19 + 0xBE8]
	0x03E7E1FC BL 0x1C16F10
	0x03E7E200 LDR X2, [X19]
	0x03E7E204 MOV X1, X20
	0x03E7E208 MOV X3, X31
	0x03E7E20C MOV X19, X0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x56B000
	008 Move W8, [X20+3486]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x27D000
	015 Move X0, [X0+584]
	016 Call 0x1C17CF4
	017 Move X0, 0x2EF000
	018 Move X0, [X0+1864]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X20+3486], W8
	022 Compare X19, 0
	023 JumpIfEqual {117}
	024 Move W8, [X19+24]
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move X20, 0x27D000
	027 Move X20, [X20+584]
	028 NotImplemented "Instruction INVALID not yet implemented."
	029 Move W22, [X19+33]
	030 Move X0, [X20]
	031 And W19, W21, 15
	032 Move W8, [X0+224]
	033 Compare W8, 0
	034 JumpIfNotEqual {36}
	035 Call 0x1C17DFC
	036 Move W0, W19
	037 Move X1, X31
	038 Call Ext.IsSupported, X0
	039 Move TEMP, X0
	040 And TEMP, TEMP, 1
	041 Compare TEMP, 1
	042 JumpIfNotEqual {129}
	043 Move X0, [X20]
	044 Move W8, [X0+224]
	045 Compare W8, 0
	046 JumpIfNotEqual {48}
	047 Call 0x1C17DFC
	048 Move W0, W19
	049 Move X1, X31
	050 Call Ext.IsData, X0
	051 Move TEMP, X21
	052 And TEMP, TEMP, 64
	053 Compare TEMP, 64
	054 JumpIfNotEqual {59}
	055 Move TEMP, X0
	056 And TEMP, TEMP, 1
	057 Compare TEMP, 1
	058 JumpIfNotEqual {131}
	059 Move X0, [X20]
	060 Move W8, [X0+224]
	061 Compare W8, 0
	062 JumpIfNotEqual {64}
	063 Call 0x1C17DFC
	064 Move W0, W19
	065 Move X1, X31
	066 And W23, W22, 127
	067 Call Ext.IsControl, X0
	068 Move TEMP, X0
	069 And TEMP, TEMP, 1
	070 Compare TEMP, 1
	071 JumpIfNotEqual {77}
	072 Move TEMP, X21
	073 And TEMP, TEMP, -2147483648
	074 Compare TEMP, -2147483648
	075 JumpIfNotEqual {133}
	076 NotImplemented "Instruction CMP not yet implemented."
	077 Move X8, 0x2EF000
	078 Move X8, [X8+1864]
	079 Move X0, [X8]
	080 Call 0x1C17F10
	081 Move X1, X31
	082 Move X20, X0
	083 Call Object..ctor, X0
	084 Compare X20, 0
	085 JumpIfEqual {117}
	086 And W8, W21, 255
	087 Move W9, W21
	088 ShiftRight W9, 6
	089 And W9, W9, 63
	090 Move W10, W22
	091 ShiftRight W10, 7
	092 And W10, W10, 0x7FFFFFFF
	093 Move W11, W21
	094 ShiftRight W11, 7
	095 And W11, W11, 127
	096 Move W12, W8
	097 ShiftRight W12, 4
	098 And W12, W12, 15
	099 Move W8, W8
	100 ShiftRight W8, 5
	101 And W8, W8, 31
	102 Move [X20+40], W19
	103 Move [X20+24], W11
	104 Move [X20+57], W9
	105 Move [X20+25], W10
	106 Move [X20+58], W8
	107 Move [X20+59], W12
	108 Move [X20+56], W23
	109 Move X0, X20
	110 Move X20, [X31+32]
	111 Move X19, [X31+40]
	112 Move X22, [X31+16]
	113 Move X21, [X31+24]
	114 Move X30, [X31+48]
	115 Move X23, [X31+56]
	116 Return X0
	117 Call 0x1C17F20
	118 Move X0, 0x2EF000
	119 Move X0, [X0+2824]
	120 Call 0x1C17D08
	121 Move X19, X0
	122 Move X0, 0x29E000
	123 Move X0, [X0+2872]
	124 Call 0x1C17D08
	125 Call 0x1C17F10
	126 Move X1, X19
	127 Move X20, X0
	128 Call WebSocketException..ctor, X0, X1
	129 Move X0, 0x2EF000
	130 Move X0, [X0+2832]
	131 Move X0, 0x2EF000
	132 Move X0, [X0+2840]
	133 Move X0, 0x2EF000
	134 Move X0, [X0+2848]
	135 Move X0, 0x2EF000
	136 Move X0, [X0+2856]
	137 Call 0x1C17D08
	138 Move X19, X0
	139 Move X0, 0x29E000
	140 Move X0, [X0+2872]
	141 Call 0x1C17D08
	142 Call 0x1C17F10
	143 Move W1, 1002
	144 Move X2, X19
	145 Move X20, X0
	146 Call WebSocketException..ctor, X0, X1, X2
	147 Move X0, 0x2EF000
	148 Move X0, [X0+2864]
	149 Call 0x1C17D08
	150 Move X1, X0
	151 Move X0, X20
	152 Call 0x1C17DEC

Method: WebSocketSharp.WebSocketFrame readExtendedPayloadLength(System.IO.Stream stream, WebSocketSharp.WebSocketFrame frame)

Disassembly:
	0x03E7E210 BL 0x2A7918C
	0x03E7E214 MOV X0, X19
	0x03E7E218 LDP X20, X19, [X31 + 0x10]
	0x03E7E21C LDP X30, X21, [X31], #0x20
	0x03E7E220 RET
	0x03E7E224 BL 0x1C16F20
	0x03E7E228 MOV X1, X31
	0x03E7E22C B 0x33BDD8C
	0x03E7E230 SUB X31, X31, 0x60
	0x03E7E234 STP X30, X27, [X31 + 0x10]
	0x03E7E238 STP X26, X25, [X31 + 0x20]
	0x03E7E23C STP X24, X23, [X31 + 0x30]
	0x03E7E240 STP X22, X21, [X31 + 0x40]
	0x03E7E244 STP X20, X19, [X31 + 0x50]
	0x03E7E248 ADRP X20, 0x56A000
	0x03E7E24C LDRB W8, [X20 + 0xDB1]
	0x03E7E250 MOV X19, X4
	0x03E7E254 MOV X22, X3
	0x03E7E258 MOV X24, X2
	0x03E7E25C MOV X25, X1
	0x03E7E260 MOV X26, X0
	0x03E7E264 TBNZ X8, 0x0, 0x3E7E288
	0x03E7E268 ADRP X0, 0x277000
	0x03E7E26C LDR X0, [X0 + 0xA60]
	0x03E7E270 BL 0x1C16CF4
	0x03E7E274 ADRP X0, 0x275000
	0x03E7E278 LDR X0, [X0 + 0x9D0]
	0x03E7E27C BL 0x1C16CF4
	0x03E7E280 MOVZ W8, 0x1
	0x03E7E284 STRB W8, [X20 + 0xDB1]
	0x03E7E288 LDR X8, [X26 + 0x18]
	0x03E7E28C CBZ X8, 0x3E7E3E0
	0x03E7E290 ADRP X9, 0x275000
	0x03E7E294 LDR X9, [X9 + 0x9D0]
	0x03E7E298 ADRP X27, 0x277000
	0x03E7E29C LDP X20, X21, [X8 + 0x10]
	0x03E7E2A0 MOVZ W1, 0x5
	0x03E7E2A4 LDR X0, [X9]
	0x03E7E2A8 LDR X27, [X27 + 0xA60]
	0x03E7E2AC BL 0x1C16D6C
	0x03E7E2B0 LDR X8, [X26 + 0x10]
	0x03E7E2B4 MOV X23, X0
	0x03E7E2B8 ADD X1, X31, 0x8
	0x03E7E2BC ADD X8, X8, 0x1
	0x03E7E2C0 STR X8, [X26 + 0x10]
	0x03E7E2C4 LDR X0, [X27]
	0x03E7E2C8 STR X8, [X31 + 0x8]
	0x03E7E2CC BL 0x1C16E04
	0x03E7E2D0 CBZ X23, 0x3E7E3E0
	0x03E7E2D4 MOV X26, X0
	0x03E7E2D8 CBZ X0, 0x3E7E2F0
	0x03E7E2DC LDR X8, [X23]
	0x03E7E2E0 MOV X0, X26
	0x03E7E2E4 LDR X1, [X8 + 0x40]
	0x03E7E2E8 BL 0x1C16E00
	0x03E7E2EC CBZ X0, 0x3E7E3D4
	0x03E7E2F0 LDR W8, [X23 + 0x18]
	0x03E7E2F4 CBZ W8, 0x3E7E3D0
	0x03E7E2F8 STR X26, [X23 + 0x20]
	0x03E7E2FC CBZ X25, 0x3E7E318
	0x03E7E300 LDR X8, [X23]
	0x03E7E304 MOV X0, X25
	0x03E7E308 LDR X1, [X8 + 0x40]
	0x03E7E30C BL 0x1C16E00
	0x03E7E310 CBZ X0, 0x3E7E3D4
	0x03E7E314 LDR W8, [X23 + 0x18]
	0x03E7E318 CMP W8, 0x1
	0x03E7E31C B.LS 0x3E7E3D0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x56B000
	006 Move W8, [X21+3487]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0x27D000
	014 Move X0, [X0+584]
	015 Call 0x1C17CF4
	016 Move X0, 0x2EF000
	017 Move X0, [X0+968]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+3487], W8
	021 Compare X19, 0
	022 JumpIfEqual {77}
	023 Move W8, [X19+56]
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move X8, 0x27D000
	026 Move X8, [X8+584]
	027 Move W9, 8
	028 Move W10, 2
	029 NotImplemented "Instruction CSEL not yet implemented."
	030 Move X0, [X8]
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {35}
	034 Call 0x1C17DFC
	035 Move X0, X20
	036 Move W1, W21
	037 Move X2, X31
	038 Call Ext.ReadBytes, X0, X1
	039 Compare X0, 0
	040 JumpIfEqual {77}
	041 Move W8, [X0+24]
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X0, 0x2EF000
	044 Move X0, [X0+2872]
	045 Call 0x1C17D08
	046 Move X19, X0
	047 Move X0, 0x29E000
	048 Move X0, [X0+2872]
	049 Call 0x1C17D08
	050 Call 0x1C17F10
	051 Move X1, X19
	052 Move X20, X0
	053 Call WebSocketException..ctor, X0, X1
	054 Move X0, 0x2EF000
	055 Move X0, [X0+2880]
	056 Call 0x1C17D08
	057 Move X1, X0
	058 Move X0, X20
	059 Call 0x1C17DEC
	060 Move X20, 0x2EF000
	061 Move X20, [X20+968]
	062 Move X0, [X20]
	063 Move W8, [X0+224]
	064 Compare W8, 0
	065 JumpIfNotEqual {68}
	066 Call 0x1C17DFC
	067 Move X0, [X20]
	068 Move X8, [X0+184]
	069 Move X0, [X8+8]
	070 Move [X19+16], X0
	071 Move X0, X19
	072 Move X20, [X31+16]
	073 Move X19, [X31+24]
	074 Move X30, [X31+32]
	075 Move X21, [X31+40]
	076 Return X0
	077 Call 0x1C17F20

Method: System.Void readExtendedPayloadLengthAsync(System.IO.Stream stream, WebSocketSharp.WebSocketFrame frame, System.Action`1<WebSocketSharp.WebSocketFrame> completed, System.Action`1<System.Exception> error)

Disassembly:
	0x03E7E320 STR X25, [X23 + 0x28]
	0x03E7E324 CBZ X24, 0x3E7E340
	0x03E7E328 LDR X8, [X23]
	0x03E7E32C MOV X0, X24
	0x03E7E330 LDR X1, [X8 + 0x40]
	0x03E7E334 BL 0x1C16E00
	0x03E7E338 CBZ X0, 0x3E7E3D4
	0x03E7E33C LDR W8, [X23 + 0x18]
	0x03E7E340 CMP W8, 0x2
	0x03E7E344 B.LS 0x3E7E3D0
	0x03E7E348 STR X24, [X23 + 0x30]
	0x03E7E34C CBZ X22, 0x3E7E368
	0x03E7E350 LDR X8, [X23]
	0x03E7E354 MOV X0, X22
	0x03E7E358 LDR X1, [X8 + 0x40]
	0x03E7E35C BL 0x1C16E00
	0x03E7E360 CBZ X0, 0x3E7E3D4
	0x03E7E364 LDR W8, [X23 + 0x18]
	0x03E7E368 CMP W8, 0x3
	0x03E7E36C B.LS 0x3E7E3D0
	0x03E7E370 STR X22, [X23 + 0x38]
	0x03E7E374 CBZ X19, 0x3E7E390
	0x03E7E378 LDR X8, [X23]
	0x03E7E37C MOV X0, X19
	0x03E7E380 LDR X1, [X8 + 0x40]
	0x03E7E384 BL 0x1C16E00
	0x03E7E388 CBZ X0, 0x3E7E3D4
	0x03E7E38C LDR W8, [X23 + 0x18]
	0x03E7E390 CMP W8, 0x4
	0x03E7E394 B.LS 0x3E7E3D0
	0x03E7E398 STR X19, [X23 + 0x40]
	0x03E7E39C CBZ X20, 0x3E7E3E0
	0x03E7E3A0 MOV X0, X20
	0x03E7E3A4 MOV X1, X21
	0x03E7E3A8 MOV X2, X23
	0x03E7E3AC MOV X3, X31
	0x03E7E3B0 BL 0x3234E54
	0x03E7E3B4 LDP X20, X19, [X31 + 0x50]
	0x03E7E3B8 LDP X22, X21, [X31 + 0x40]
	0x03E7E3BC LDP X24, X23, [X31 + 0x30]
	0x03E7E3C0 LDP X26, X25, [X31 + 0x20]
	0x03E7E3C4 LDP X30, X27, [X31 + 0x10]
	0x03E7E3C8 ADD X31, X31, 0x60
	0x03E7E3CC RET
	0x03E7E3D0 BL 0x1C16F28
	0x03E7E3D4 BL 0x1C16F44
	0x03E7E3D8 MOV X1, X31
	0x03E7E3DC BL 0x1C16DEC
	0x03E7E3E0 BL 0x1C16F20
	0x03E7E3E4 STR X30, [X31 - 0x20]!
	0x03E7E3E8 STP X20, X19, [X31 + 0x10]
	0x03E7E3EC CBZ X1, 0x3E7E430
	0x03E7E3F0 LDR W8, [X0 + 0x10]
	0x03E7E3F4 LDR W9, [X1 + 0x18]
	0x03E7E3F8 CMP W8, W9
	0x03E7E3FC B.NE 0x3E7E434
	0x03E7E400 LDR X8, [X0 + 0x18]
	0x03E7E404 CBZ X8, 0x3E7E430
	0x03E7E408 STR X1, [X8 + 0x10]
	0x03E7E40C LDR X9, [X0 + 0x20]
	0x03E7E410 CBZ X9, 0x3E7E430
	0x03E7E414 LDR X3, [X9 + 0x18]
	0x03E7E418 LDR X0, [X9 + 0x40]
	0x03E7E41C LDR X2, [X9 + 0x28]
	0x03E7E420 LDP X20, X19, [X31 + 0x10]
	0x03E7E424 MOV X1, X8
	0x03E7E428 LDR X30, [X31], #0x20
	0x03E7E42C BR X3
	0x03E7E430 BL 0x1C16F20
	0x03E7E434 ADRP X0, 0x2EE000
	0x03E7E438 LDR X0, [X0 + 0xB38]
	0x03E7E43C BL 0x1C16D08
	0x03E7E440 MOV X19, X0
	0x03E7E444 ADRP X0, 0x29D000
	0x03E7E448 LDR X0, [X0 + 0xB38]
	0x03E7E44C BL 0x1C16D08
	0x03E7E450 BL 0x1C16F10
	0x03E7E454 MOV X1, X19
	0x03E7E458 MOV X20, X0
	0x03E7E45C BL 0x3E7AAA8
	0x03E7E460 ADRP X0, 0x2EE000
	0x03E7E464 LDR X0, [X0 + 0xB58]
	0x03E7E468 BL 0x1C16D08
	0x03E7E46C MOV X1, X0
	0x03E7E470 MOV X0, X20
	0x03E7E474 BL 0x1C16DEC
	0x03E7E478 STP X30, X19, [X31 - 0x10]!
	0x03E7E47C MOV X19, X0
	0x03E7E480 MOV X0, X1
	0x03E7E484 BL 0x3E7D034
	0x03E7E488 LDR X8, [X19 + 0x10]
	0x03E7E48C CBZ X8, 0x3E7E4A8
	0x03E7E490 MOV X1, X0
	0x03E7E494 LDR X3, [X8 + 0x18]
	0x03E7E498 LDR X0, [X8 + 0x40]
	0x03E7E49C LDR X2, [X8 + 0x28]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0x56B000
	009 Move X24, 0x2EF000
	010 Move W8, [X23+3488]
	011 Move X24, [X24+2888]
	012 Move X19, X3
	013 Move X21, X2
	014 Move X22, X1
	015 Move X20, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {37}
	020 Move X0, 0x2EF000
	021 Move X0, [X0+2896]
	022 Call 0x1C17CF4
	023 Move X0, 0x27D000
	024 Move X0, [X0+584]
	025 Call 0x1C17CF4
	026 Move X0, 0x2EF000
	027 Move X0, [X0+2904]
	028 Call 0x1C17CF4
	029 Move X0, 0x2EF000
	030 Move X0, [X0+2888]
	031 Call 0x1C17CF4
	032 Move X0, 0x2EF000
	033 Move X0, [X0+968]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X23+3488], W8
	037 Move X0, [X24]
	038 Call 0x1C17F10
	039 Move X1, X31
	040 Move X23, X0
	041 Call Object..ctor, X0
	042 Compare X23, 0
	043 JumpIfEqual {114}
	044 Move [X23+24], X22
	045 Move [X23+32], X21
	046 Compare X22, 0
	047 JumpIfEqual {114}
	048 Move W8, [X22+56]
	049 NotImplemented "Instruction CMP not yet implemented."
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Move W8, 8
	052 Move W9, 2
	053 NotImplemented "Instruction CSEL not yet implemented."
	054 Move [X23+16], W21
	055 Move X8, 0x2EF000
	056 Move X8, [X8+2896]
	057 Move X0, [X8]
	058 Call 0x1C17F10
	059 Move X8, 0x2EF000
	060 Move X8, [X8+2904]
	061 Move X1, X23
	062 Move X3, X31
	063 Move X22, X0
	064 Move X2, [X8]
	065 Call Action`1<Object>..ctor, X0, X1, X2
	066 Move X8, 0x27D000
	067 Move X8, [X8+584]
	068 Move X0, [X8]
	069 Move W8, [X0+224]
	070 Compare W8, 0
	071 JumpIfNotEqual {73}
	072 Call 0x1C17DFC
	073 Move X0, X20
	074 Move W1, W21
	075 Move X2, X22
	076 Move X3, X19
	077 Move X20, [X31+48]
	078 Move X19, [X31+56]
	079 Move X22, [X31+32]
	080 Move X21, [X31+40]
	081 Move X24, [X31+16]
	082 Move X23, [X31+24]
	083 Move X4, X31
	084 Move X30, [X31+64]
	085 Call Ext.ReadBytesAsync, X0, X1, X2, X3
	086 Return 
	087 Move [X23+16], W31
	088 Move X19, 0x2EF000
	089 Move X19, [X19+968]
	090 Move X0, [X19]
	091 Move W8, [X0+224]
	092 Compare W8, 0
	093 JumpIfNotEqual {97}
	094 Call 0x1C17DFC
	095 Move X0, [X19]
	096 Move X21, [X23+32]
	097 Move X8, [X0+184]
	098 Move X8, [X8+8]
	099 Move [X22+16], X8
	100 Compare X21, 0
	101 JumpIfEqual {114}
	102 Move X1, [X23+24]
	103 Move X3, [X21+24]
	104 Move X0, [X21+64]
	105 Move X2, [X21+40]
	106 Move X20, [X31+48]
	107 Move X19, [X31+56]
	108 Move X22, [X31+32]
	109 Move X21, [X31+40]
	110 Move X24, [X31+16]
	111 Move X23, [X31+24]
	112 Move X30, [X31+64]
	113 CallNoReturn X3
	114 Call 0x1C17F20

Method: WebSocketSharp.WebSocketFrame readHeader(System.IO.Stream stream)

Disassembly:
	0x03E7E4A8 BL 0x1C16F20
	0x03E7E4AC STR X30, [X31 - 0x20]!
	0x03E7E4B0 STP X20, X19, [X31 + 0x10]
	0x03E7E4B4 CBZ X1, 0x3E7E4F8
	0x03E7E4B8 LDR W8, [X0 + 0x10]
	0x03E7E4BC LDR W9, [X1 + 0x18]
	0x03E7E4C0 CMP W8, W9
	0x03E7E4C4 B.NE 0x3E7E4FC
	0x03E7E4C8 LDR X8, [X0 + 0x18]
	0x03E7E4CC CBZ X8, 0x3E7E4F8
	0x03E7E4D0 STR X1, [X8 + 0x20]
	0x03E7E4D4 LDR X9, [X0 + 0x20]
	0x03E7E4D8 CBZ X9, 0x3E7E4F8
	0x03E7E4DC LDR X3, [X9 + 0x18]
	0x03E7E4E0 LDR X0, [X9 + 0x40]
	0x03E7E4E4 LDR X2, [X9 + 0x28]
	0x03E7E4E8 LDP X20, X19, [X31 + 0x10]
	0x03E7E4EC MOV X1, X8
	0x03E7E4F0 LDR X30, [X31], #0x20
	0x03E7E4F4 BR X3
	0x03E7E4F8 BL 0x1C16F20
	0x03E7E4FC ADRP X0, 0x2EE000
	0x03E7E500 LDR X0, [X0 + 0xB70]
	0x03E7E504 BL 0x1C16D08

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x56B000
	006 Move X21, 0x27D000
	007 Move W8, [X20+3489]
	008 Move X21, [X21+584]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x27D000
	015 Move X0, [X0+584]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3489], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move W1, 2
	025 Move X0, X19
	026 Move X2, X31
	027 Call Ext.ReadBytes, X0, X1
	028 Move X20, [X31+16]
	029 Move X19, [X31+24]
	030 Move X30, [X31+32]
	031 Move X21, [X31+40]
	032 Call WebSocketFrame.processHeader, X0
	033 Return X0

Method: System.Void readHeaderAsync(System.IO.Stream stream, System.Action`1<WebSocketSharp.WebSocketFrame> completed, System.Action`1<System.Exception> error)

Disassembly:
	0x03E7E508 MOV X19, X0
	0x03E7E50C ADRP X0, 0x29D000
	0x03E7E510 LDR X0, [X0 + 0xB38]
	0x03E7E514 BL 0x1C16D08
	0x03E7E518 BL 0x1C16F10
	0x03E7E51C MOV X1, X19
	0x03E7E520 MOV X20, X0
	0x03E7E524 BL 0x3E7AAA8
	0x03E7E528 ADRP X0, 0x2EE000
	0x03E7E52C LDR X0, [X0 + 0xB88]
	0x03E7E530 BL 0x1C16D08
	0x03E7E534 MOV X1, X0
	0x03E7E538 MOV X0, X20
	0x03E7E53C BL 0x1C16DEC
	0x03E7E540 STP X30, X23, [X31 - 0x30]!
	0x03E7E544 STP X22, X21, [X31 + 0x10]
	0x03E7E548 STP X20, X19, [X31 + 0x20]
	0x03E7E54C ADRP X21, 0x56A000
	0x03E7E550 LDRB W8, [X21 + 0xDB2]
	0x03E7E554 MOV X20, X1
	0x03E7E558 MOV X19, X0
	0x03E7E55C TBNZ X8, 0x0, 0x3E7E574
	0x03E7E560 ADRP X0, 0x2EE000
	0x03E7E564 LDR X0, [X0 + 0x3B8]
	0x03E7E568 BL 0x1C16CF4
	0x03E7E56C MOVZ W8, 0x1
	0x03E7E570 STRB W8, [X21 + 0xDB2]
	0x03E7E574 CBZ X20, 0x3E7E5E0
	0x03E7E578 LDR X21, [X19 + 0x10]
	0x03E7E57C LDRSW X8, [X20 + 0x18]
	0x03E7E580 CMP X8, X21
	0x03E7E584 B.NE 0x3E7E5E4
	0x03E7E588 ADRP X8, 0x2EE000
	0x03E7E58C LDR X8, [X8 + 0x3B8]
	0x03E7E590 LDR X23, [X19 + 0x18]
	0x03E7E594 LDR X0, [X8]
	0x03E7E598 BL 0x1C16F10
	0x03E7E59C MOV X1, X20
	0x03E7E5A0 MOV X2, X21
	0x03E7E5A4 MOV X3, X31
	0x03E7E5A8 MOV X22, X0
	0x03E7E5AC BL 0x3E7A604
	0x03E7E5B0 CBZ X23, 0x3E7E5E0
	0x03E7E5B4 STR X22, [X23 + 0x30]
	0x03E7E5B8 LDR X8, [X19 + 0x20]
	0x03E7E5BC CBZ X8, 0x3E7E5E0
	0x03E7E5C0 LDR X1, [X19 + 0x18]
	0x03E7E5C4 LDR X3, [X8 + 0x18]
	0x03E7E5C8 LDR X0, [X8 + 0x40]
	0x03E7E5CC LDR X2, [X8 + 0x28]
	0x03E7E5D0 LDP X20, X19, [X31 + 0x20]
	0x03E7E5D4 LDP X22, X21, [X31 + 0x10]
	0x03E7E5D8 LDP X30, X23, [X31], #0x30
	0x03E7E5DC BR X3
	0x03E7E5E0 BL 0x1C16F20
	0x03E7E5E4 ADRP X0, 0x2EE000
	0x03E7E5E8 LDR X0, [X0 + 0xB98]
	0x03E7E5EC BL 0x1C16D08
	0x03E7E5F0 MOV X19, X0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x56B000
	008 Move X23, 0x2EF000
	009 Move W8, [X22+3490]
	010 Move X23, [X23+2912]
	011 Move X19, X2
	012 Move X21, X1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {32}
	018 Move X0, 0x2EF000
	019 Move X0, [X0+2896]
	020 Call 0x1C17CF4
	021 Move X0, 0x27D000
	022 Move X0, [X0+584]
	023 Call 0x1C17CF4
	024 Move X0, 0x2EF000
	025 Move X0, [X0+2920]
	026 Call 0x1C17CF4
	027 Move X0, 0x2EF000
	028 Move X0, [X0+2912]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X22+3490], W8
	032 Move X0, [X23]
	033 Call 0x1C17F10
	034 Move X1, X31
	035 Move X22, X0
	036 Call Object..ctor, X0
	037 Compare X22, 0
	038 JumpIfEqual {71}
	039 Move X8, 0x2EF000
	040 Move X8, [X8+2896]
	041 Move [X22+16], X21
	042 Move X21, 0x2EF000
	043 Move X23, 0x27D000
	044 Move X0, [X8]
	045 Move X21, [X21+2920]
	046 Move X23, [X23+584]
	047 Call 0x1C17F10
	048 Move X2, [X21]
	049 Move X1, X22
	050 Move X3, X31
	051 Move X21, X0
	052 Call Action`1<Object>..ctor, X0, X1, X2
	053 Move X0, [X23]
	054 Move W8, [X0+224]
	055 Compare W8, 0
	056 JumpIfNotEqual {58}
	057 Call 0x1C17DFC
	058 Move X0, X20
	059 Move X2, X21
	060 Move X3, X19
	061 Move X20, [X31+32]
	062 Move X19, [X31+40]
	063 Move X22, [X31+16]
	064 Move X21, [X31+24]
	065 Move W1, 2
	066 Move X4, X31
	067 Move X30, [X31+48]
	068 Move X23, [X31+56]
	069 Call Ext.ReadBytesAsync, X0, X1, X2, X3
	070 Return 
	071 Call 0x1C17F20

Method: WebSocketSharp.WebSocketFrame readMaskingKey(System.IO.Stream stream, WebSocketSharp.WebSocketFrame frame)

Disassembly:
	0x03E7E5FC BL 0x1C16D08
	0x03E7E600 BL 0x1C16F10
	0x03E7E604 MOV X1, X19
	0x03E7E608 MOV X20, X0
	0x03E7E60C BL 0x3E7AAA8
	0x03E7E610 ADRP X0, 0x2EE000
	0x03E7E614 LDR X0, [X0 + 0xBB0]
	0x03E7E618 BL 0x1C16D08
	0x03E7E61C MOV X1, X0
	0x03E7E620 MOV X0, X20
	0x03E7E624 BL 0x1C16DEC
	0x03E7E628 STR X30, [X31 - 0x30]!
	0x03E7E62C STP X22, X21, [X31 + 0x10]
	0x03E7E630 STP X20, X19, [X31 + 0x20]
	0x03E7E634 ADRP X21, 0x56A000
	0x03E7E638 LDRB W8, [X21 + 0xDB3]
	0x03E7E63C MOV X19, X1
	0x03E7E640 MOV X20, X0
	0x03E7E644 TBNZ X8, 0x0, 0x3E7E668
	0x03E7E648 ADRP X0, 0x2EE000
	0x03E7E64C LDR X0, [X0 + 0x9F0]
	0x03E7E650 BL 0x1C16CF4
	0x03E7E654 ADRP X0, 0x2EE000
	0x03E7E658 LDR X0, [X0 + 0xBF0]
	0x03E7E65C BL 0x1C16CF4
	0x03E7E660 MOVZ W8, 0x1
	0x03E7E664 STRB W8, [X21 + 0xDB3]
	0x03E7E668 LDR X22, [X20 + 0x40]
	0x03E7E66C LDR X21, [X20 + 0x10]
	0x03E7E670 CBNZ X22, 0x3E7E6A4
	0x03E7E674 ADRP X8, 0x2EE000
	0x03E7E678 LDR X8, [X8 + 0x9F0]
	0x03E7E67C LDR X0, [X8]
	0x03E7E680 BL 0x1C16F10
	0x03E7E684 ADRP X8, 0x2EE000
	0x03E7E688 LDR X8, [X8 + 0xBF0]
	0x03E7E68C MOV X1, X20
	0x03E7E690 MOV X3, X31
	0x03E7E694 MOV X22, X0
	0x03E7E698 LDR X2, [X8]
	0x03E7E69C BL 0x2A6B948
	0x03E7E6A0 STR X22, [X20 + 0x40]
	0x03E7E6A4 LDR X3, [X20 + 0x28]
	0x03E7E6A8 MOV X0, X21
	0x03E7E6AC MOV X1, X19
	0x03E7E6B0 MOV X2, X22
	0x03E7E6B4 LDP X20, X19, [X31 + 0x20]
	0x03E7E6B8 LDP X22, X21, [X31 + 0x10]
	0x03E7E6BC LDR X30, [X31], #0x30
	0x03E7E6C0 B 0x3E7D320
	0x03E7E6C4 STR X30, [X31 - 0x30]!
	0x03E7E6C8 STP X22, X21, [X31 + 0x10]
	0x03E7E6CC STP X20, X19, [X31 + 0x20]
	0x03E7E6D0 ADRP X21, 0x56A000
	0x03E7E6D4 LDRB W8, [X21 + 0xDB4]
	0x03E7E6D8 MOV X19, X1
	0x03E7E6DC MOV X20, X0
	0x03E7E6E0 TBNZ X8, 0x0, 0x3E7E704
	0x03E7E6E4 ADRP X0, 0x2EE000
	0x03E7E6E8 LDR X0, [X0 + 0x9F0]
	0x03E7E6EC BL 0x1C16CF4
	0x03E7E6F0 ADRP X0, 0x2EE000
	0x03E7E6F4 LDR X0, [X0 + 0xBF8]
	0x03E7E6F8 BL 0x1C16CF4
	0x03E7E6FC MOVZ W8, 0x1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x56B000
	006 Move W8, [X21+3491]
	007 Move X19, X1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0x27D000
	014 Move X0, [X0+584]
	015 Call 0x1C17CF4
	016 Move X0, 0x2EF000
	017 Move X0, [X0+968]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+3491], W8
	021 Compare X19, 0
	022 JumpIfEqual {74}
	023 Move W8, [X19+25]
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move X8, 0x27D000
	026 Move X8, [X8+584]
	027 Move X0, [X8]
	028 Move W8, [X0+224]
	029 Compare W8, 0
	030 JumpIfNotEqual {32}
	031 Call 0x1C17DFC
	032 Move W1, 4
	033 Move X0, X20
	034 Move X2, X31
	035 Call Ext.ReadBytes, X0, X1
	036 Compare X0, 0
	037 JumpIfEqual {74}
	038 Move W8, [X0+24]
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Move X0, 0x2EF000
	041 Move X0, [X0+2928]
	042 Call 0x1C17D08
	043 Move X19, X0
	044 Move X0, 0x29E000
	045 Move X0, [X0+2872]
	046 Call 0x1C17D08
	047 Call 0x1C17F10
	048 Move X1, X19
	049 Move X20, X0
	050 Call WebSocketException..ctor, X0, X1
	051 Move X0, 0x2EF000
	052 Move X0, [X0+2936]
	053 Call 0x1C17D08
	054 Move X1, X0
	055 Move X0, X20
	056 Call 0x1C17DEC
	057 Move X20, 0x2EF000
	058 Move X20, [X20+968]
	059 Move X0, [X20]
	060 Move W8, [X0+224]
	061 Compare W8, 0
	062 JumpIfNotEqual {65}
	063 Call 0x1C17DFC
	064 Move X0, [X20]
	065 Move X8, [X0+184]
	066 Move X0, [X8+8]
	067 Move [X19+32], X0
	068 Move X0, X19
	069 Move X20, [X31+16]
	070 Move X19, [X31+24]
	071 Move X30, [X31+32]
	072 Move X21, [X31+40]
	073 Return X0
	074 Call 0x1C17F20

Method: System.Void readMaskingKeyAsync(System.IO.Stream stream, WebSocketSharp.WebSocketFrame frame, System.Action`1<WebSocketSharp.WebSocketFrame> completed, System.Action`1<System.Exception> error)

Disassembly:
	0x03E7E700 STRB W8, [X21 + 0xDB4]
	0x03E7E704 LDR X22, [X20 + 0x38]
	0x03E7E708 LDR X21, [X20 + 0x10]
	0x03E7E70C CBNZ X22, 0x3E7E740
	0x03E7E710 ADRP X8, 0x2EE000
	0x03E7E714 LDR X8, [X8 + 0x9F0]
	0x03E7E718 LDR X0, [X8]
	0x03E7E71C BL 0x1C16F10
	0x03E7E720 ADRP X8, 0x2EE000
	0x03E7E724 LDR X8, [X8 + 0xBF8]
	0x03E7E728 MOV X1, X20
	0x03E7E72C MOV X3, X31
	0x03E7E730 MOV X22, X0
	0x03E7E734 LDR X2, [X8]
	0x03E7E738 BL 0x2A6B948
	0x03E7E73C STR X22, [X20 + 0x38]
	0x03E7E740 LDR X3, [X20 + 0x28]
	0x03E7E744 MOV X0, X21
	0x03E7E748 MOV X1, X19
	0x03E7E74C MOV X2, X22
	0x03E7E750 LDP X20, X19, [X31 + 0x20]
	0x03E7E754 LDP X22, X21, [X31 + 0x10]
	0x03E7E758 LDR X30, [X31], #0x30
	0x03E7E75C B 0x3E7D700
	0x03E7E760 STR X30, [X31 - 0x30]!
	0x03E7E764 STP X22, X21, [X31 + 0x10]
	0x03E7E768 STP X20, X19, [X31 + 0x20]
	0x03E7E76C ADRP X21, 0x56A000
	0x03E7E770 LDRB W8, [X21 + 0xDB5]
	0x03E7E774 MOV X19, X1
	0x03E7E778 MOV X20, X0
	0x03E7E77C TBNZ X8, 0x0, 0x3E7E7A0
	0x03E7E780 ADRP X0, 0x2EE000
	0x03E7E784 LDR X0, [X0 + 0x9F0]
	0x03E7E788 BL 0x1C16CF4
	0x03E7E78C ADRP X0, 0x2EE000
	0x03E7E790 LDR X0, [X0 + 0xC00]
	0x03E7E794 BL 0x1C16CF4
	0x03E7E798 MOVZ W8, 0x1
	0x03E7E79C STRB W8, [X21 + 0xDB5]
	0x03E7E7A0 LDR X22, [X20 + 0x30]
	0x03E7E7A4 LDR X21, [X20 + 0x10]
	0x03E7E7A8 CBNZ X22, 0x3E7E7DC
	0x03E7E7AC ADRP X8, 0x2EE000
	0x03E7E7B0 LDR X8, [X8 + 0x9F0]
	0x03E7E7B4 LDR X0, [X8]
	0x03E7E7B8 BL 0x1C16F10
	0x03E7E7BC ADRP X8, 0x2EE000
	0x03E7E7C0 LDR X8, [X8 + 0xC00]
	0x03E7E7C4 MOV X1, X20
	0x03E7E7C8 MOV X3, X31
	0x03E7E7CC MOV X22, X0
	0x03E7E7D0 LDR X2, [X8]
	0x03E7E7D4 BL 0x2A6B948
	0x03E7E7D8 STR X22, [X20 + 0x30]
	0x03E7E7DC LDR X3, [X20 + 0x28]
	0x03E7E7E0 MOV X0, X21
	0x03E7E7E4 MOV X1, X19
	0x03E7E7E8 MOV X2, X22
	0x03E7E7EC LDP X20, X19, [X31 + 0x20]
	0x03E7E7F0 LDP X22, X21, [X31 + 0x10]
	0x03E7E7F4 LDR X30, [X31], #0x30
	0x03E7E7F8 B 0x3E7DA30
	0x03E7E7FC STR X30, [X31 - 0x20]!
	0x03E7E800 STP X20, X19, [X31 + 0x10]
	0x03E7E804 LDRB W8, [X0 + 0x18]
	0x03E7E808 MOV X20, X0
	0x03E7E80C MOV X19, X1
	0x03E7E810 CBZ W8, 0x3E7E820
	0x03E7E814 CBZ X19, 0x3E7E844
	0x03E7E818 MOV X0, X19
	0x03E7E81C BL 0x3E7DEFC
	0x03E7E820 LDR X8, [X20 + 0x20]
	0x03E7E824 CBZ X8, 0x3E7E844
	0x03E7E828 LDR X3, [X8 + 0x18]
	0x03E7E82C LDR X0, [X8 + 0x40]
	0x03E7E830 LDR X2, [X8 + 0x28]
	0x03E7E834 MOV X1, X19
	0x03E7E838 LDP X20, X19, [X31 + 0x10]
	0x03E7E83C LDR X30, [X31], #0x20
	0x03E7E840 BR X3
	0x03E7E844 BL 0x1C16F20
	0x03E7E848 RET
	0x03E7E84C STP X30, X19, [X31 - 0x10]!
	0x03E7E850 LDR W8, [X0 + 0x10]
	0x03E7E854 MOV X19, X0
	0x03E7E858 CMP W8, 0x1
	0x03E7E85C B.EQ 0x3E7E888
	0x03E7E860 CBNZ W8, 0x3E7E8D0
	0x03E7E864 LDR X0, [X19 + 0x18]
	0x03E7E868 MOVN W8, 0x0
	0x03E7E86C STR W8, [X19 + 0x10]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0x56B000
	009 Move X24, 0x2EF000
	010 Move W8, [X23+3492]
	011 Move X24, [X24+2944]
	012 Move X19, X3
	013 Move X21, X2
	014 Move X22, X1
	015 Move X20, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {37}
	020 Move X0, 0x2EF000
	021 Move X0, [X0+2896]
	022 Call 0x1C17CF4
	023 Move X0, 0x27D000
	024 Move X0, [X0+584]
	025 Call 0x1C17CF4
	026 Move X0, 0x2EF000
	027 Move X0, [X0+2952]
	028 Call 0x1C17CF4
	029 Move X0, 0x2EF000
	030 Move X0, [X0+2944]
	031 Call 0x1C17CF4
	032 Move X0, 0x2EF000
	033 Move X0, [X0+968]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X23+3492], W8
	037 Move X0, [X24]
	038 Call 0x1C17F10
	039 Move X1, X31
	040 Move X23, X0
	041 Call Object..ctor, X0
	042 Compare X23, 0
	043 JumpIfEqual {110}
	044 Move [X23+24], X22
	045 Move [X23+32], X21
	046 Compare X22, 0
	047 JumpIfEqual {110}
	048 Move W8, [X22+25]
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Move W8, 4
	051 Move [X23+16], W8
	052 Move X8, 0x2EF000
	053 Move X8, [X8+2896]
	054 Move X0, [X8]
	055 Call 0x1C17F10
	056 Move X8, 0x2EF000
	057 Move X8, [X8+2952]
	058 Move X1, X23
	059 Move X3, X31
	060 Move X21, X0
	061 Move X2, [X8]
	062 Call Action`1<Object>..ctor, X0, X1, X2
	063 Move X8, 0x27D000
	064 Move X8, [X8+584]
	065 Move X0, [X8]
	066 Move W8, [X0+224]
	067 Compare W8, 0
	068 JumpIfNotEqual {70}
	069 Call 0x1C17DFC
	070 Move X0, X20
	071 Move X2, X21
	072 Move X3, X19
	073 Move X20, [X31+48]
	074 Move X19, [X31+56]
	075 Move X22, [X31+32]
	076 Move X21, [X31+40]
	077 Move X24, [X31+16]
	078 Move X23, [X31+24]
	079 Move W1, 4
	080 Move X4, X31
	081 Move X30, [X31+64]
	082 Call Ext.ReadBytesAsync, X0, X1, X2, X3
	083 Return 
	084 Move X19, 0x2EF000
	085 Move X19, [X19+968]
	086 Move X0, [X19]
	087 Move W8, [X0+224]
	088 Compare W8, 0
	089 JumpIfNotEqual {93}
	090 Call 0x1C17DFC
	091 Move X0, [X19]
	092 Move X21, [X23+32]
	093 Move X8, [X0+184]
	094 Move X8, [X8+8]
	095 Move [X22+32], X8
	096 Compare X21, 0
	097 JumpIfEqual {110}
	098 Move X1, [X23+24]
	099 Move X3, [X21+24]
	100 Move X0, [X21+64]
	101 Move X2, [X21+40]
	102 Move X20, [X31+48]
	103 Move X19, [X31+56]
	104 Move X22, [X31+32]
	105 Move X21, [X31+40]
	106 Move X24, [X31+16]
	107 Move X23, [X31+24]
	108 Move X30, [X31+64]
	109 CallNoReturn X3
	110 Call 0x1C17F20

Method: WebSocketSharp.WebSocketFrame readPayloadData(System.IO.Stream stream, WebSocketSharp.WebSocketFrame frame)

Disassembly:
	0x03E7E878 MOV W8, W31
	0x03E7E87C STR X0, [X19 + 0x20]
	0x03E7E880 STR W31, [X19 + 0x28]
	0x03E7E884 B 0x3E7E8A0
	0x03E7E888 LDR W8, [X19 + 0x28]
	0x03E7E88C LDR X0, [X19 + 0x20]
	0x03E7E890 MOVN W9, 0x0
	0x03E7E894 STR W9, [X19 + 0x10]
	0x03E7E898 ADD W8, W8, 0x1
	0x03E7E89C STR W8, [X19 + 0x28]
	0x03E7E8A0 CBZ X0, 0x3E7E8E8
	0x03E7E8A4 LDR W9, [X0 + 0x18]
	0x03E7E8A8 CMP W8, W9
	0x03E7E8AC B.GE 0x3E7E8D8
	0x03E7E8B0 B.CS 0x3E7E8EC
	0x03E7E8B4 ADD X8, X0, W8, SXTW
	0x03E7E8B8 LDRB W8, [X8 + 0x20]
	0x03E7E8BC MOVZ W0, 0x1
	0x03E7E8C0 STR W0, [X19 + 0x10]
	0x03E7E8C4 STRB W8, [X19 + 0x2C]
	0x03E7E8C8 STRB W8, [X19 + 0x14]
	0x03E7E8CC B 0x3E7E8E0
	0x03E7E8D0 MOV W0, W31
	0x03E7E8D4 B 0x3E7E8E0
	0x03E7E8D8 MOV W0, W31
	0x03E7E8DC STR X31, [X19 + 0x20]
	0x03E7E8E0 LDP X30, X19, [X31], #0x10
	0x03E7E8E4 RET
	0x03E7E8E8 BL 0x1C16F20
	0x03E7E8EC BL 0x1C16F28
	0x03E7E8F0 LDRB W0, [X0 + 0x14]
	0x03E7E8F4 RET
	0x03E7E8F8 STP X30, X19, [X31 - 0x10]!
	0x03E7E8FC ADRP X0, 0x275000
	0x03E7E900 LDR X0, [X0 + 0xB40]
	0x03E7E904 BL 0x1C16D08
	0x03E7E908 BL 0x1C16F10
	0x03E7E90C MOV X1, X31
	0x03E7E910 MOV X19, X0
	0x03E7E914 BL 0x3380310
	0x03E7E918 ADRP X0, 0x2EE000
	0x03E7E91C LDR X0, [X0 + 0xC08]
	0x03E7E920 BL 0x1C16D08
	0x03E7E924 MOV X1, X0
	0x03E7E928 MOV X0, X19
	0x03E7E92C BL 0x1C16DEC
	0x03E7E930 SUB X31, X31, 0x30
	0x03E7E934 STP X30, X21, [X31 + 0x10]
	0x03E7E938 STP X20, X19, [X31 + 0x20]
	0x03E7E93C ADRP X21, 0x56A000
	0x03E7E940 ADRP X20, 0x276000
	0x03E7E944 LDRB W8, [X21 + 0xDB6]
	0x03E7E948 LDR X20, [X20 + 0x9D8]
	0x03E7E94C MOV X19, X0
	0x03E7E950 TBNZ X8, 0x0, 0x3E7E968
	0x03E7E954 ADRP X0, 0x276000
	0x03E7E958 LDR X0, [X0 + 0x9D8]
	0x03E7E95C BL 0x1C16CF4
	0x03E7E960 MOVZ W8, 0x1
	0x03E7E964 STRB W8, [X21 + 0xDB6]
	0x03E7E968 LDRB W8, [X19 + 0x14]
	0x03E7E96C LDR X0, [X20]
	0x03E7E970 ADD X1, X31, 0xC
	0x03E7E974 STRB W8, [X31 + 0xC]
	0x03E7E978 BL 0x1C16E04
	0x03E7E97C LDP X20, X19, [X31 + 0x20]
	0x03E7E980 LDP X30, X21, [X31 + 0x10]
	0x03E7E984 ADD X31, X31, 0x30
	0x03E7E988 RET
	0x03E7E98C STP X30, X21, [X31 - 0x20]!
	0x03E7E990 STP X20, X19, [X31 + 0x10]
	0x03E7E994 MOV X20, X1
	0x03E7E998 MOV X1, X31
	0x03E7E99C MOV X19, X2
	0x03E7E9A0 MOV X21, X0
	0x03E7E9A4 BL 0x33BDD8C
	0x03E7E9A8 STP X19, X20, [X21 + 0x10]
	0x03E7E9AC LDP X20, X19, [X31 + 0x10]
	0x03E7E9B0 LDP X30, X21, [X31], #0x20
	0x03E7E9B4 RET
	0x03E7E9B8 STR X30, [X31 - 0x20]!
	0x03E7E9BC STP X20, X19, [X31 + 0x10]
	0x03E7E9C0 ADRP X20, 0x56A000
	0x03E7E9C4 LDRB W8, [X20 + 0xDB7]
	0x03E7E9C8 MOV X19, X0
	0x03E7E9CC TBNZ X8, 0x0, 0x3E7E9FC
	0x03E7E9D0 ADRP X0, 0x2EE000
	0x03E7E9D4 LDR X0, [X0 + 0x368]
	0x03E7E9D8 BL 0x1C16CF4
	0x03E7E9DC ADRP X0, 0x277000
	0x03E7E9E0 LDR X0, [X0 + 0x278]
	0x03E7E9E4 BL 0x1C16CF4
	0x03E7E9E8 ADRP X0, 0x2B0000
	0x03E7E9EC LDR X0, [X0 + 0x988]
	0x03E7E9F0 BL 0x1C16CF4
	0x03E7E9F4 MOVZ W8, 0x1
	0x03E7E9F8 STRB W8, [X20 + 0xDB7]
	0x03E7E9FC LDR X8, [X19 + 0x20]
	0x03E7EA00 CBZ X8, 0x3E7EA8C
	0x03E7EA04 LDR W8, [X8 + 0x18]
	0x03E7EA08 CBZ W8, 0x3E7EA8C
	0x03E7EA0C LDR X0, [X19 + 0x10]
	0x03E7EA10 CBZ X0, 0x3E7EAAC
	0x03E7EA14 ADRP X8, 0x2B0000
	0x03E7EA18 LDR X8, [X8 + 0x988]
	0x03E7EA1C MOV X2, X31
	0x03E7EA20 LDR X1, [X8]
	0x03E7EA24 BL 0x366456C
	0x03E7EA28 CBZ X0, 0x3E7EA64
	0x03E7EA2C LDR W8, [X0 + 0x10]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0x56B000
	008 Move W8, [X20+3493]
	009 Move X19, X1
	010 Move X21, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0x27D000
	016 Move X0, [X0+584]
	017 Call 0x1C17CF4
	018 Move X0, 0x2EF000
	019 Move X0, [X0+952]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X20+3493], W8
	023 Compare X19, 0
	024 JumpIfEqual {90}
	025 Move X22, 0x2EF000
	026 Move X22, [X22+952]
	027 Move X0, X19
	028 Call WebSocketFrame.get_ExactPayloadLength, X0
	029 Move X8, [X22]
	030 Move X20, X0
	031 Move W9, [X8+224]
	032 Compare W9, 0
	033 JumpIfNotEqual {37}
	034 Move X0, X8
	035 Call 0x1C17DFC
	036 Move X8, [X22]
	037 Move X9, [X8+184]
	038 Move X9, [X9+8]
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Compare X20, 0
	041 JumpIfEqual {55}
	042 Move X8, 0x27D000
	043 Move X8, [X8+584]
	044 Move W23, [X19+56]
	045 Move X0, [X8]
	046 Move W8, [X0+224]
	047 Compare W8, 0
	048 JumpIfNotEqual {50}
	049 Call 0x1C17DFC
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Move X0, X21
	052 Move W1, W20
	053 Move X2, X31
	054 Call Ext.ReadBytes, X0, X1
	055 Move W9, [X8+224]
	056 Compare W9, 0
	057 JumpIfNotEqual {61}
	058 Move X0, X8
	059 Call 0x1C17DFC
	060 Move X8, [X22]
	061 Move X8, [X8+184]
	062 Move X8, [X8]
	063 Move [X19+48], X8
	064 Move W2, 1024
	065 Move X0, X21
	066 Move X1, X20
	067 Move X3, X31
	068 Call Ext.ReadBytes, X0, X1, X2
	069 Move X21, X0
	070 Compare X0, 0
	071 JumpIfEqual {90}
	072 NotImplemented "Instruction LDRSW not yet implemented."
	073 NotImplemented "Instruction CMP not yet implemented."
	074 Move X0, [X22]
	075 Call 0x1C17F10
	076 Move X1, X21
	077 Move X2, X20
	078 Move X3, X31
	079 Move X22, X0
	080 Call PayloadData..ctor, X0, X1, X2
	081 Move [X19+48], X22
	082 Move X0, X19
	083 Move X20, [X31+32]
	084 Move X19, [X31+40]
	085 Move X22, [X31+16]
	086 Move X21, [X31+24]
	087 Move X30, [X31+48]
	088 Move X23, [X31+56]
	089 Return X0
	090 Call 0x1C17F20
	091 Move X0, 0x2EF000
	092 Move X0, [X0+2960]
	093 Call 0x1C17D08
	094 Move X19, X0
	095 Move X0, 0x29E000
	096 Move X0, [X0+2872]
	097 Call 0x1C17D08
	098 Call 0x1C17F10
	099 Move W1, 1009
	100 Move X2, X19
	101 Move X20, X0
	102 Call WebSocketException..ctor, X0, X1, X2
	103 Move X0, 0x2EF000
	104 Move X0, [X0+2968]
	105 Call 0x1C17D08
	106 Move X19, X0
	107 Move X0, 0x29E000
	108 Move X0, [X0+2872]
	109 Call 0x1C17D08
	110 Call 0x1C17F10
	111 Move X1, X19
	112 Move X20, X0
	113 Call WebSocketException..ctor, X0, X1
	114 Move X0, 0x2EF000
	115 Move X0, [X0+2976]
	116 Call 0x1C17D08
	117 Move X1, X0
	118 Move X0, X20
	119 Call 0x1C17DEC

Method: System.Void readPayloadDataAsync(System.IO.Stream stream, WebSocketSharp.WebSocketFrame frame, System.Action`1<WebSocketSharp.WebSocketFrame> completed, System.Action`1<System.Exception> error)

Disassembly:
	0x03E7EA30 MOV X20, X0
	0x03E7EA34 CMP W8, 0x1
	0x03E7EA38 B.LT 0x3E7EA64
	0x03E7EA3C ADRP X8, 0x2EE000
	0x03E7EA40 LDR X8, [X8 + 0x368]
	0x03E7EA44 LDR X0, [X8]
	0x03E7EA48 LDR W8, [X0 + 0xE0]
	0x03E7EA4C CBNZ W8, 0x3E7EA54
	0x03E7EA50 BL 0x1C16DFC
	0x03E7EA54 MOV X0, X20
	0x03E7EA58 MOV X1, X31
	0x03E7EA5C BL 0x3E97078
	0x03E7EA60 CBNZ X0, 0x3E7EA70
	0x03E7EA64 MOV X0, X31
	0x03E7EA68 BL 0x3241948
	0x03E7EA6C CBZ X0, 0x3E7EAAC
	0x03E7EA70 LDR X8, [X0]
	0x03E7EA74 LDR X1, [X19 + 0x20]
	0x03E7EA78 LDP X20, X19, [X31 + 0x10]
	0x03E7EA7C LDR X3, [X8 + 0x378]
	0x03E7EA80 LDR X2, [X8 + 0x380]
	0x03E7EA84 LDR X30, [X31], #0x20
	0x03E7EA88 BR X3
	0x03E7EA8C ADRP X8, 0x277000
	0x03E7EA90 LDR X8, [X8 + 0x278]
	0x03E7EA94 LDP X20, X19, [X31 + 0x10]
	0x03E7EA98 LDR X8, [X8]
	0x03E7EA9C LDR X8, [X8 + 0xB8]
	0x03E7EAA0 LDR X0, [X8]
	0x03E7EAA4 LDR X30, [X31], #0x20
	0x03E7EAA8 RET
	0x03E7EAAC BL 0x1C16F20
	0x03E7EAB0 LDR X0, [X0 + 0x10]
	0x03E7EAB4 RET
	0x03E7EAB8 LDR X0, [X0 + 0x18]
	0x03E7EABC RET
	0x03E7EAC0 SUB X31, X31, 0x30
	0x03E7EAC4 STP X30, X21, [X31 + 0x10]
	0x03E7EAC8 STP X20, X19, [X31 + 0x20]
	0x03E7EACC ADRP X21, 0x56A000
	0x03E7EAD0 LDRB W8, [X21 + 0xDB8]
	0x03E7EAD4 MOV X20, X1
	0x03E7EAD8 MOV X19, X0
	0x03E7EADC TBNZ X8, 0x0, 0x3E7EAF4
	0x03E7EAE0 ADRP X0, 0x27C000
	0x03E7EAE4 LDR X0, [X0 + 0x248]
	0x03E7EAE8 BL 0x1C16CF4
	0x03E7EAEC MOVZ W8, 0x1
	0x03E7EAF0 STRB W8, [X21 + 0xDB8]
	0x03E7EAF4 ADD X1, X31, 0x8
	0x03E7EAF8 MOV X0, X20
	0x03E7EAFC MOV X2, X31
	0x03E7EB00 STR X31, [X31 + 0x8]
	0x03E7EB04 BL 0x337D588
	0x03E7EB08 TBZ X0, 0x0, 0x3E7EB94
	0x03E7EB0C LDR X20, [X31 + 0x8]
	0x03E7EB10 TBNZ X20, 0x0, 0x3E7EBDC
	0x03E7EB14 CMP X20, 0x400
	0x03E7EB18 B.LE 0x3E7EB4C
	0x03E7EB1C ADRP X8, 0x27C000
	0x03E7EB20 LDR X8, [X8 + 0x248]
	0x03E7EB24 LDR X0, [X8]
	0x03E7EB28 LDR W8, [X0 + 0xE0]
	0x03E7EB2C CBNZ W8, 0x3E7EB34
	0x03E7EB30 BL 0x1C16DFC
	0x03E7EB34 MOVZ W2, 0x400
	0x03E7EB38 MOV X0, X19
	0x03E7EB3C MOV X1, X20
	0x03E7EB40 MOV X3, X31
	0x03E7EB44 BL 0x3E69BC0
	0x03E7EB48 B 0x3E7EB84
	0x03E7EB4C CMP X20, 0x1
	0x03E7EB50 B.LT 0x3E7EB80
	0x03E7EB54 ADRP X8, 0x27C000
	0x03E7EB58 LDR X8, [X8 + 0x248]
	0x03E7EB5C LDR X0, [X8]
	0x03E7EB60 LDR W8, [X0 + 0xE0]
	0x03E7EB64 CBNZ W8, 0x3E7EB6C
	0x03E7EB68 BL 0x1C16DFC
	0x03E7EB6C MOV X0, X19
	0x03E7EB70 MOV W1, W20
	0x03E7EB74 MOV X2, X31
	0x03E7EB78 BL 0x3E69A60
	0x03E7EB7C B 0x3E7EB84
	0x03E7EB80 MOV X0, X31
	0x03E7EB84 LDP X20, X19, [X31 + 0x20]
	0x03E7EB88 LDP X30, X21, [X31 + 0x10]
	0x03E7EB8C ADD X31, X31, 0x30
	0x03E7EB90 RET
	0x03E7EB94 ADRP X0, 0x27D000
	0x03E7EB98 LDR X0, [X0 + 0x578]
	0x03E7EB9C BL 0x1C16D08
	0x03E7EBA0 BL 0x1C16F10
	0x03E7EBA4 MOV X19, X0
	0x03E7EBA8 ADRP X0, 0x2EE000
	0x03E7EBAC LDR X0, [X0 + 0xC10]
	0x03E7EBB0 BL 0x1C16D08
	0x03E7EBB4 MOV X20, X0
	0x03E7EBB8 ADRP X0, 0x27D000
	0x03E7EBBC LDR X0, [X0 + 0x768]
	0x03E7EBC0 BL 0x1C16D08
	0x03E7EBC4 MOV X2, X0
	0x03E7EBC8 MOV X0, X19
	0x03E7EBCC MOV X1, X20
	0x03E7EBD0 MOV X3, X31
	0x03E7EBD4 BL 0x330E16C
	0x03E7EBD8 B 0x3E7EC20
	0x03E7EBDC ADRP X0, 0x27D000
	0x03E7EBE0 LDR X0, [X0 + 0x760]
	0x03E7EBE4 BL 0x1C16D08
	0x03E7EBE8 BL 0x1C16F10
	0x03E7EBEC MOV X19, X0
	0x03E7EBF0 ADRP X0, 0x27D000
	0x03E7EBF4 LDR X0, [X0 + 0x768]
	0x03E7EBF8 BL 0x1C16D08
	0x03E7EBFC MOV X20, X0
	0x03E7EC00 ADRP X0, 0x2EE000
	0x03E7EC04 LDR X0, [X0 + 0xC18]
	0x03E7EC08 BL 0x1C16D08
	0x03E7EC0C MOV X2, X0
	0x03E7EC10 MOV X0, X19
	0x03E7EC14 MOV X1, X20
	0x03E7EC18 MOV X3, X31
	0x03E7EC1C BL 0x3311888
	0x03E7EC20 ADRP X0, 0x2EE000
	0x03E7EC24 LDR X0, [X0 + 0xC20]
	0x03E7EC28 BL 0x1C16D08
	0x03E7EC2C MOV X1, X0
	0x03E7EC30 MOV X0, X19
	0x03E7EC34 BL 0x1C16DEC
	0x03E7EC38 STP X29, X30, [X31 - 0x60]!
	0x03E7EC3C STP X28, X27, [X31 + 0x10]
	0x03E7EC40 STP X26, X25, [X31 + 0x20]
	0x03E7EC44 STP X24, X23, [X31 + 0x30]
	0x03E7EC48 STP X22, X21, [X31 + 0x40]
	0x03E7EC4C STP X20, X19, [X31 + 0x50]
	0x03E7EC50 ADRP X21, 0x56A000
	0x03E7EC54 ADRP X24, 0x2EE000
	0x03E7EC58 ADRP X23, 0x279000
	0x03E7EC5C ADRP X22, 0x279000
	0x03E7EC60 LDRB W8, [X21 + 0xDB9]
	0x03E7EC64 LDR X24, [X24 + 0xC28]
	0x03E7EC68 LDR X23, [X23 + 0x808]
	0x03E7EC6C LDR X22, [X22 + 0x7F0]
	0x03E7EC70 MOV W19, W1

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0x56B000
	009 Move X24, 0x2EF000
	010 Move W8, [X21+3494]
	011 Move X24, [X24+2984]
	012 Move X19, X3
	013 Move X23, X2
	014 Move X22, X1
	015 Move X20, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {37}
	020 Move X0, 0x2EF000
	021 Move X0, [X0+2896]
	022 Call 0x1C17CF4
	023 Move X0, 0x27D000
	024 Move X0, [X0+584]
	025 Call 0x1C17CF4
	026 Move X0, 0x2EF000
	027 Move X0, [X0+952]
	028 Call 0x1C17CF4
	029 Move X0, 0x2EF000
	030 Move X0, [X0+2992]
	031 Call 0x1C17CF4
	032 Move X0, 0x2EF000
	033 Move X0, [X0+2984]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X21+3494], W8
	037 Move X0, [X24]
	038 Call 0x1C17F10
	039 Move X1, X31
	040 Move X21, X0
	041 Call Object..ctor, X0
	042 Compare X21, 0
	043 JumpIfEqual {153}
	044 Move [X21+24], X22
	045 Move [X21+32], X23
	046 Compare X22, 0
	047 JumpIfEqual {153}
	048 Move X23, 0x2EF000
	049 Move X23, [X23+952]
	050 Move X0, X22
	051 Call WebSocketFrame.get_ExactPayloadLength, X0
	052 Move X8, [X23]
	053 Move X22, X0
	054 Move W9, [X8+224]
	055 Compare W9, 0
	056 JumpIfNotEqual {60}
	057 Move X0, X8
	058 Call 0x1C17DFC
	059 Move X8, [X23]
	060 Move X9, [X8+184]
	061 Move X9, [X9+8]
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Compare X22, 0
	064 JumpIfEqual {103}
	065 Move X8, 0x2EF000
	066 Move X8, [X8+2896]
	067 Move [X21+16], X22
	068 Move X23, 0x2EF000
	069 Move X0, [X8]
	070 Move X23, [X23+2992]
	071 Call 0x1C17F10
	072 Move X2, [X23]
	073 Move X1, X21
	074 Move X3, X31
	075 Move X23, X0
	076 Call Action`1<Object>..ctor, X0, X1, X2
	077 Move X8, [X21+24]
	078 Compare X8, 0
	079 JumpIfEqual {153}
	080 Move W8, [X8+56]
	081 NotImplemented "Instruction CMP not yet implemented."
	082 Move X8, 0x27D000
	083 Move X8, [X8+584]
	084 Move X0, [X8]
	085 Move W8, [X0+224]
	086 Compare W8, 0
	087 JumpIfNotEqual {89}
	088 Call 0x1C17DFC
	089 Move X0, X20
	090 Move W1, W22
	091 Move X2, X23
	092 Move X3, X19
	093 Move X20, [X31+48]
	094 Move X19, [X31+56]
	095 Move X22, [X31+32]
	096 Move X21, [X31+40]
	097 Move X24, [X31+16]
	098 Move X23, [X31+24]
	099 Move X4, X31
	100 Move X30, [X31+64]
	101 Call Ext.ReadBytesAsync, X0, X1, X2, X3
	102 Return 
	103 Move W9, [X8+224]
	104 Move X19, [X21+24]
	105 Compare W9, 0
	106 JumpIfNotEqual {109}
	107 Move X0, X8
	108 Call 0x1C17DFC
	109 Compare X19, 0
	110 JumpIfEqual {153}
	111 Move X8, [X23]
	112 Move X8, [X8+184]
	113 Move X8, [X8]
	114 Move [X19+48], X8
	115 Move X8, [X21+32]
	116 Compare X8, 0
	117 JumpIfEqual {153}
	118 Move X1, [X21+24]
	119 Move X3, [X8+24]
	120 Move X0, [X8+64]
	121 Move X2, [X8+40]
	122 Move X20, [X31+48]
	123 Move X19, [X31+56]
	124 Move X22, [X31+32]
	125 Move X21, [X31+40]
	126 Move X24, [X31+16]
	127 Move X23, [X31+24]
	128 Move X30, [X31+64]
	129 CallNoReturn X3
	130 Move X8, 0x27D000
	131 Move X8, [X8+584]
	132 Move X21, [X21+16]
	133 Move X0, [X8]
	134 Move W8, [X0+224]
	135 Compare W8, 0
	136 JumpIfNotEqual {138}
	137 Call 0x1C17DFC
	138 Move X0, X20
	139 Move X1, X21
	140 Move X3, X23
	141 Move X4, X19
	142 Move X20, [X31+48]
	143 Move X19, [X31+56]
	144 Move X22, [X31+32]
	145 Move X21, [X31+40]
	146 Move X24, [X31+16]
	147 Move X23, [X31+24]
	148 Move W2, 1024
	149 Move X5, X31
	150 Move X30, [X31+64]
	151 Call Ext.ReadBytesAsync, X0, X1, X2, X3, X4
	152 Return 
	153 Call 0x1C17F20
	154 Move X0, 0x2EF000
	155 Move X0, [X0+2960]
	156 Call 0x1C17D08
	157 Move X19, X0
	158 Move X0, 0x29E000
	159 Move X0, [X0+2872]
	160 Call 0x1C17D08
	161 Call 0x1C17F10
	162 Move W1, 1009
	163 Move X2, X19
	164 Move X20, X0
	165 Call WebSocketException..ctor, X0, X1, X2
	166 Move X0, 0x2EF000
	167 Move X0, [X0+3000]
	168 Call 0x1C17D08
	169 Move X1, X0
	170 Move X0, X20
	171 Call 0x1C17DEC

Method: System.String utf8Decode(System.Byte[] bytes)

Disassembly:
	0x03E7DF84 STP X24, X23, [X31 + 0x10]
	0x03E7DF88 STP X22, X21, [X31 + 0x20]
	0x03E7DF8C STP X20, X19, [X31 + 0x30]
	0x03E7DF90 ADRP X23, 0x56B000
	0x03E7DF94 ADRP X24, 0x2EF000
	0x03E7DF98 LDRB W8, [X23 + 0xDAB]
	0x03E7DF9C LDR X24, [X24 + 0xBC0]
	0x03E7DFA0 MOV X20, X3
	0x03E7DFA4 MOV X21, X2
	0x03E7DFA8 MOV W22, W1
	0x03E7DFAC MOV X19, X0
	0x03E7DFB0 TBNZ X8, 0x0, 0x3E7DFE0
	0x03E7DFB4 ADRP X0, 0x2EF000
	0x03E7DFB8 LDR X0, [X0 + 0x9F0]
	0x03E7DFBC BL 0x1C16CF4
	0x03E7DFC0 ADRP X0, 0x2EF000
	0x03E7DFC4 LDR X0, [X0 + 0xBC8]
	0x03E7DFC8 BL 0x1C16CF4
	0x03E7DFCC ADRP X0, 0x2EF000
	0x03E7DFD0 LDR X0, [X0 + 0xBC0]
	0x03E7DFD4 BL 0x1C16CF4
	0x03E7DFD8 MOVZ W8, 0x1
	0x03E7DFDC STRB W8, [X23 + 0xDAB]
	0x03E7DFE0 LDR X0, [X24]
	0x03E7DFE4 BL 0x1C16F10
	0x03E7DFE8 MOV X1, X31
	0x03E7DFEC MOV X23, X0
	0x03E7DFF0 BL 0x33BDD8C
	0x03E7DFF4 CBZ X23, 0x3E7E054
	0x03E7DFF8 ADRP X8, 0x2EF000
	0x03E7DFFC LDR X8, [X8 + 0x9F0]
	0x03E7E000 AND W9, W22, 0x1
	0x03E7E004 STR X19, [X23 + 0x10]
	0x03E7E008 STRB W9, [X23 + 0x18]
	0x03E7E00C STP X21, X20, [X23 + 0x20]
	0x03E7E010 LDR X0, [X8]
	0x03E7E014 ADRP X20, 0x2EE000
	0x03E7E018 LDR X20, [X20 + 0xBC8]
	0x03E7E01C BL 0x1C16F10
	0x03E7E020 LDR X2, [X20]
	0x03E7E024 MOV X1, X23
	0x03E7E028 MOV X3, X31
	0x03E7E02C MOV X20, X0
	0x03E7E030 BL 0x2A6B948

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move X0, X31
	005 Call Encoding.get_UTF8
	006 Compare X0, 0
	007 JumpIfEqual {16}
	008 Move X8, [X0]
	009 Move X9, [X8+888]
	010 Move X2, [X8+896]
	011 Move X1, X19
	012 NotImplemented "Instruction BLR not yet implemented."
	013 Move X30, [X31+16]
	014 Move X19, [X31+24]
	015 Return X0
	016 Call 0x1C17F20
	017 Move X19, X0
	018 NotImplemented "Instruction CMP not yet implemented."
	019 Move X0, X19
	020 Call 0x3EB2AD0
	021 Move X19, X0
	022 Move X0, 0x27D000
	023 Move X0, [X0+3264]
	024 Call 0x1C17D08
	025 Move X8, [X19]
	026 Move X1, [X8]
	027 Call 0x1C18270
	028 Move TEMP, X0
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfNotEqual {34}
	032 Call 0x3EB2AE0
	033 Move X0, X31
	034 Move W0, 8
	035 Call 0x3EB2AF0
	036 Move X8, [X19]
	037 Move [X0], X8
	038 Move X1, 0x37000
	039 Add X1, X1, 3672
	040 Move X2, X31
	041 Call 0x3EB2B00
	042 Move X19, X0
	043 Call 0x3EB2AE0
	044 Move X0, X19
	045 Call 0x1D2D690
	046 Call 0x1991590

Method: WebSocketSharp.WebSocketFrame CreateCloseFrame(WebSocketSharp.PayloadData payloadData, System.Boolean mask)

Disassembly:
	0x03E7EC7C ADRP X0, 0x279000
	0x03E7EC80 LDR X0, [X0 + 0xB00]
	0x03E7EC84 BL 0x1C16CF4
	0x03E7EC88 ADRP X0, 0x27C000
	0x03E7EC8C LDR X0, [X0 + 0x248]
	0x03E7EC90 BL 0x1C16CF4
	0x03E7EC94 ADRP X0, 0x2A2000
	0x03E7EC98 LDR X0, [X0 + 0x5D0]
	0x03E7EC9C BL 0x1C16CF4
	0x03E7ECA0 ADRP X0, 0x279000
	0x03E7ECA4 LDR X0, [X0 + 0x7F0]
	0x03E7ECA8 BL 0x1C16CF4
	0x03E7ECAC ADRP X0, 0x279000
	0x03E7ECB0 LDR X0, [X0 + 0x808]
	0x03E7ECB4 BL 0x1C16CF4
	0x03E7ECB8 ADRP X0, 0x275000
	0x03E7ECBC LDR X0, [X0 + 0xAC8]
	0x03E7ECC0 BL 0x1C16CF4
	0x03E7ECC4 ADRP X0, 0x2EE000
	0x03E7ECC8 LDR X0, [X0 + 0xC30]
	0x03E7ECCC BL 0x1C16CF4
	0x03E7ECD0 ADRP X0, 0x2EE000
	0x03E7ECD4 LDR X0, [X0 + 0xC28]
	0x03E7ECD8 BL 0x1C16CF4
	0x03E7ECDC ADRP X0, 0x275000
	0x03E7ECE0 LDR X0, [X0 + 0xDD8]
	0x03E7ECE4 BL 0x1C16CF4
	0x03E7ECE8 ADRP X0, 0x2EE000
	0x03E7ECEC LDR X0, [X0 + 0xC38]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x56B000
	007 Move X22, 0x2EF000
	008 Move W8, [X21+3495]
	009 Move X22, [X22+1864]
	010 Move W20, W1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x2EF000
	017 Move X0, [X0+1864]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+3495], W8
	021 Move X0, [X22]
	022 Call 0x1C17F10
	023 And W5, W20, 1
	024 Move W1, 1
	025 Move W2, 8
	026 Move X3, X19
	027 Move W4, W31
	028 Move X21, X0
	029 Call WebSocketFrame..ctor, X0, X1, X2, X3, X4, X5
	030 Move X0, X21
	031 Move X20, [X31+32]
	032 Move X19, [X31+40]
	033 Move X22, [X31+16]
	034 Move X21, [X31+24]
	035 Move X30, [X31+48]
	036 Return X0

Method: WebSocketSharp.WebSocketFrame CreatePingFrame(System.Boolean mask)

Disassembly:
	0x03E7ECF0 BL 0x1C16CF4
	0x03E7ECF4 ADRP X0, 0x2EE000
	0x03E7ECF8 LDR X0, [X0 + 0x2D0]
	0x03E7ECFC BL 0x1C16CF4
	0x03E7ED00 ADRP X0, 0x2B3000
	0x03E7ED04 LDR X0, [X0 + 0x420]
	0x03E7ED08 BL 0x1C16CF4
	0x03E7ED0C MOVZ W8, 0x1
	0x03E7ED10 STRB W8, [X21 + 0xDB9]
	0x03E7ED14 LDR X0, [X24]
	0x03E7ED18 BL 0x1C16F10
	0x03E7ED1C MOV X1, X31
	0x03E7ED20 MOV X21, X0
	0x03E7ED24 BL 0x33BDD8C
	0x03E7ED28 LDR X0, [X23]
	0x03E7ED2C BL 0x1C16F10
	0x03E7ED30 LDR X1, [X22]
	0x03E7ED34 MOV X22, X0
	0x03E7ED38 BL 0x2F67714
	0x03E7ED3C CBZ X21, 0x3E7EF98
	0x03E7ED40 ADRP X8, 0x279000
	0x03E7ED44 LDR X8, [X8 + 0xB00]
	0x03E7ED48 ADRP X23, 0x2EE000
	0x03E7ED4C ADRP X24, 0x27C000
	0x03E7ED50 ADRP X29, 0x2A2000
	0x03E7ED54 ADRP X28, 0x2EE000
	0x03E7ED58 ADRP X25, 0x275000
	0x03E7ED5C LDR X23, [X23 + 0xC30]
	0x03E7ED60 LDR X24, [X24 + 0x248]
	0x03E7ED64 LDR X29, [X29 + 0x5D0]
	0x03E7ED68 LDR X28, [X28 + 0xC38]
	0x03E7ED6C LDR X25, [X25 + 0xDD8]
	0x03E7ED70 STR X22, [X21 + 0x10]
	0x03E7ED74 STR W31, [X21 + 0x18]
	0x03E7ED78 LDR X0, [X8]
	0x03E7ED7C ADRP X27, 0x2EE000
	0x03E7ED80 ADRP X26, 0x275000
	0x03E7ED84 LDR X27, [X27 + 0x2D0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x56B000
	006 Move X20, 0x2EF000
	007 Move W8, [X21+3496]
	008 Move X20, [X20+952]
	009 Move W19, W0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0x2EF000
	015 Move X0, [X0+952]
	016 Call 0x1C17CF4
	017 Move X0, 0x2EF000
	018 Move X0, [X0+1864]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+3496], W8
	022 Move X0, [X20]
	023 Move X21, 0x2EF000
	024 Move W8, [X0+224]
	025 Move X21, [X21+1864]
	026 Compare W8, 0
	027 JumpIfNotEqual {30}
	028 Call 0x1C17DFC
	029 Move X0, [X20]
	030 Move X8, [X0+184]
	031 Move X0, [X21]
	032 Move X20, [X8]
	033 Call 0x1C17F10
	034 And W5, W19, 1
	035 Move W1, 1
	036 Move W2, 9
	037 Move X3, X20
	038 Move W4, W31
	039 Move X21, X0
	040 Call WebSocketFrame..ctor, X0, X1, X2, X3, X4, X5
	041 Move X20, [X31+16]
	042 Move X19, [X31+24]
	043 Move X0, X21
	044 Move X30, [X31+32]
	045 Move X21, [X31+40]
	046 Return X0

Method: WebSocketSharp.WebSocketFrame CreatePingFrame(System.Byte[] data, System.Boolean mask)

Disassembly:
	0x03E7ED88 LDR X26, [X26 + 0xAC8]
	0x03E7ED8C BL 0x1C16F10
	0x03E7ED90 LDR X2, [X23]
	0x03E7ED94 MOV X1, X21
	0x03E7ED98 MOV X3, X31
	0x03E7ED9C MOV X22, X0
	0x03E7EDA0 BL 0x2983F04
	0x03E7EDA4 LDR W8, [X21 + 0x18]
	0x03E7EDA8 CMP W8, W19
	0x03E7EDAC B.GE 0x3E7EF9C
	0x03E7EDB0 CBZ X20, 0x3E7EF98
	0x03E7EDB4 LDR X8, [X20]
	0x03E7EDB8 MOV X0, X20
	0x03E7EDBC LDR X9, [X8 + 0x378]
	0x03E7EDC0 LDR X1, [X8 + 0x380]
	0x03E7EDC4 BLR X9
	0x03E7EDC8 LDR X8, [X24]
	0x03E7EDCC MOV W23, W0
	0x03E7EDD0 LDR W9, [X8 + 0xE0]
	0x03E7EDD4 CBNZ W9, 0x3E7EDE0
	0x03E7EDD8 MOV X0, X8
	0x03E7EDDC BL 0x1C16DFC
	0x03E7EDE0 MOVZ W1, 0xD
	0x03E7EDE4 MOV W0, W23
	0x03E7EDE8 MOV X2, X22
	0x03E7EDEC MOV X3, X31
	0x03E7EDF0 BL 0x3E693F0
	0x03E7EDF4 TBZ X0, 0x0, 0x3E7EECC
	0x03E7EDF8 LDR X8, [X20]
	0x03E7EDFC MOV X0, X20
	0x03E7EE00 LDR X9, [X8 + 0x378]
	0x03E7EE04 LDR X1, [X8 + 0x380]
	0x03E7EE08 BLR X9
	0x03E7EE0C LDR X8, [X24]
	0x03E7EE10 MOV W23, W0
	0x03E7EE14 LDR W9, [X8 + 0xE0]
	0x03E7EE18 CBNZ W9, 0x3E7EE24
	0x03E7EE1C MOV X0, X8
	0x03E7EE20 BL 0x1C16DFC
	0x03E7EE24 MOVZ W1, 0xA

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0x56B000
	008 Move X23, 0x2EF000
	009 Move X22, 0x2EF000
	010 Move W8, [X21+3497]
	011 Move X23, [X23+952]
	012 Move X22, [X22+1864]
	013 Move W19, W1
	014 Move X20, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {27}
	019 Move X0, 0x2EF000
	020 Move X0, [X0+952]
	021 Call 0x1C17CF4
	022 Move X0, 0x2EF000
	023 Move X0, [X0+1864]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X21+3497], W8
	027 Move X0, [X23]
	028 Call 0x1C17F10
	029 Move X1, X20
	030 Move X2, X31
	031 Move X21, X0
	032 Call PayloadData..ctor, X0, X1
	033 Move X0, [X22]
	034 Call 0x1C17F10
	035 And W5, W19, 1
	036 Move W1, 1
	037 Move W2, 9
	038 Move X3, X21
	039 Move W4, W31
	040 Move X20, X0
	041 Call WebSocketFrame..ctor, X0, X1, X2, X3, X4, X5
	042 Move X0, X20
	043 Move X20, [X31+32]
	044 Move X19, [X31+40]
	045 Move X22, [X31+16]
	046 Move X21, [X31+24]
	047 Move X30, [X31+48]
	048 Move X23, [X31+56]
	049 Return X0

Method: WebSocketSharp.WebSocketFrame CreatePongFrame(WebSocketSharp.PayloadData payloadData, System.Boolean mask)

Disassembly:
	0x03E7EE28 MOV W0, W23
	0x03E7EE2C MOV X2, X22
	0x03E7EE30 MOV X3, X31
	0x03E7EE34 BL 0x3E693F0
	0x03E7EE38 TBZ X0, 0x0, 0x3E7EECC
	0x03E7EE3C LDR X8, [X20]
	0x03E7EE40 MOV X0, X20
	0x03E7EE44 LDR X9, [X8 + 0x378]
	0x03E7EE48 LDR X1, [X8 + 0x380]
	0x03E7EE4C BLR X9
	0x03E7EE50 LDR X8, [X24]
	0x03E7EE54 MOV W23, W0
	0x03E7EE58 LDR W9, [X8 + 0xE0]
	0x03E7EE5C CBNZ W9, 0x3E7EE68
	0x03E7EE60 MOV X0, X8
	0x03E7EE64 BL 0x1C16DFC
	0x03E7EE68 MOVZ W1, 0xD
	0x03E7EE6C MOV W0, W23
	0x03E7EE70 MOV X2, X22
	0x03E7EE74 MOV X3, X31
	0x03E7EE78 BL 0x3E693F0
	0x03E7EE7C TBZ X0, 0x0, 0x3E7EECC
	0x03E7EE80 LDR X8, [X20]
	0x03E7EE84 MOV X0, X20
	0x03E7EE88 LDR X9, [X8 + 0x378]
	0x03E7EE8C LDR X1, [X8 + 0x380]
	0x03E7EE90 BLR X9
	0x03E7EE94 LDR X8, [X24]
	0x03E7EE98 MOV W23, W0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0x56B000
	007 Move X22, 0x2EF000
	008 Move W8, [X21+3498]
	009 Move X22, [X22+1864]
	010 Move W20, W1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x2EF000
	017 Move X0, [X0+1864]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+3498], W8
	021 Move X0, [X22]
	022 Call 0x1C17F10
	023 And W5, W20, 1
	024 Move W1, 1
	025 Move W2, 10
	026 Move X3, X19
	027 Move W4, W31
	028 Move X21, X0
	029 Call WebSocketFrame..ctor, X0, X1, X2, X3, X4, X5
	030 Move X0, X21
	031 Move X20, [X31+32]
	032 Move X19, [X31+40]
	033 Move X22, [X31+16]
	034 Move X21, [X31+24]
	035 Move X30, [X31+48]
	036 Return X0

Method: WebSocketSharp.WebSocketFrame ReadFrame(System.IO.Stream stream, System.Boolean unmask)

Disassembly:
	0x03E7EE9C LDR W9, [X8 + 0xE0]
	0x03E7EEA0 CBNZ W9, 0x3E7EEAC
	0x03E7EEA4 MOV X0, X8
	0x03E7EEA8 BL 0x1C16DFC
	0x03E7EEAC MOVZ W1, 0xA
	0x03E7EEB0 MOV W0, W23
	0x03E7EEB4 MOV X2, X22
	0x03E7EEB8 MOV X3, X31
	0x03E7EEBC BL 0x3E693F0
	0x03E7EEC0 AND W8, W0, 0x1
	0x03E7EEC4 CBZ W8, 0x3E7EDA4
	0x03E7EEC8 B 0x3E7EED4
	0x03E7EECC MOV W8, W31
	0x03E7EED0 CBZ W8, 0x3E7EDA4
	0x03E7EED4 MOV X0, X31
	0x03E7EED8 BL 0x3241948
	0x03E7EEDC LDR X8, [X21 + 0x10]
	0x03E7EEE0 CBZ X8, 0x3E7EF98
	0x03E7EEE4 LDR X1, [X29]
	0x03E7EEE8 MOV X19, X0
	0x03E7EEEC MOV X0, X8
	0x03E7EEF0 BL 0x2F69CD0
	0x03E7EEF4 CBZ X19, 0x3E7EF98
	0x03E7EEF8 LDR X8, [X19]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move W20, W1
	006 Move X21, X0
	007 Call WebSocketFrame.readHeader, X0
	008 Move X19, X0
	009 Move X0, X21
	010 Move X1, X19
	011 Call WebSocketFrame.readExtendedPayloadLength, X0, X1
	012 Move X0, X21
	013 Move X1, X19
	014 Call WebSocketFrame.readMaskingKey, X0, X1
	015 Move X0, X21
	016 Move X1, X19
	017 Call WebSocketFrame.readPayloadData, X0, X1
	018 Move TEMP, X20
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfNotEqual {26}
	022 Compare X19, 0
	023 JumpIfEqual {32}
	024 Move X0, X19
	025 Call WebSocketFrame.Unmask, X0
	026 Move X0, X19
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]
	031 Return X0
	032 Call 0x1C17F20

Method: System.Void ReadFrameAsync(System.IO.Stream stream, System.Boolean unmask, System.Action`1<WebSocketSharp.WebSocketFrame> completed, System.Action`1<System.Exception> error)

Disassembly:
	0x03E7EF80 LDP X26, X25, [X31 + 0x20]
	0x03E7EF84 LDP X28, X27, [X31 + 0x10]
	0x03E7EF88 MOVZ W2, 0x1
	0x03E7EF8C MOV X3, X31
	0x03E7EF90 LDP X29, X30, [X31], #0x60
	0x03E7EF94 B 0x322ADF0
	0x03E7EF98 BL 0x1C16F20
	0x03E7EF9C ADRP X0, 0x29D000
	0x03E7EFA0 LDR X0, [X0 + 0xB38]
	0x03E7EFA4 BL 0x1C16D08
	0x03E7EFA8 BL 0x1C16F10
	0x03E7EFAC MOV X19, X0
	0x03E7EFB0 ADRP X0, 0x2EE000
	0x03E7EFB4 LDR X0, [X0 + 0xC40]
	0x03E7EFB8 BL 0x1C16D08
	0x03E7EFBC MOV X1, X0
	0x03E7EFC0 MOV X0, X19
	0x03E7EFC4 BL 0x3E7AAA8
	0x03E7EFC8 ADRP X0, 0x2EE000
	0x03E7EFCC LDR X0, [X0 + 0xC48]
	0x03E7EFD0 BL 0x1C16D08
	0x03E7EFD4 MOV X1, X0
	0x03E7EFD8 MOV X0, X19
	0x03E7EFDC BL 0x1C16DEC
	0x03E7EFE0 BL 0x1C16F28
	0x03E7EFE4 MOV X1, X31
	0x03E7EFE8 B 0x33BDD8C
	0x03E7EFEC STR X30, [X31 - 0x20]!
	0x03E7EFF0 STP X20, X19, [X31 + 0x10]
	0x03E7EFF4 MOV X20, X0
	0x03E7EFF8 MOV X0, X31
	0x03E7EFFC BL 0x3241948
	0x03E7F000 LDR X8, [X20]
	0x03E7F004 MOV X19, X0
	0x03E7F008 MOV X0, X20
	0x03E7F00C LDP X9, X1, [X8 + 0x168]
	0x03E7F010 BLR X9
	0x03E7F014 CBZ X19, 0x3E7F038
	0x03E7F018 LDR X8, [X19]
	0x03E7F01C MOV X1, X0
	0x03E7F020 MOV X0, X19
	0x03E7F024 LDP X20, X19, [X31 + 0x10]
	0x03E7F028 LDR X3, [X8 + 0x268]
	0x03E7F02C LDR X2, [X8 + 0x270]
	0x03E7F030 LDR X30, [X31], #0x20
	0x03E7F034 BR X3
	0x03E7F038 BL 0x1C16F20
	0x03E7F03C STP X30, X21, [X31 - 0x20]!
	0x03E7F040 STP X20, X19, [X31 + 0x10]
	0x03E7F044 ADRP X21, 0x569000
	0x03E7F048 LDRB W8, [X21 + 0xDBA]
	0x03E7F04C MOV W20, W1
	0x03E7F050 MOV X19, X0
	0x03E7F054 TBNZ X8, 0x0, 0x3E7F06C

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0x56B000
	009 Move X24, 0x2EF000
	010 Move W8, [X23+3499]
	011 Move X24, [X24+3008]
	012 Move X20, X3
	013 Move X21, X2
	014 Move W22, W1
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {31}
	020 Move X0, 0x2EF000
	021 Move X0, [X0+2544]
	022 Call 0x1C17CF4
	023 Move X0, 0x2EF000
	024 Move X0, [X0+3016]
	025 Call 0x1C17CF4
	026 Move X0, 0x2EF000
	027 Move X0, [X0+3008]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X23+3499], W8
	031 Move X0, [X24]
	032 Call 0x1C17F10
	033 Move X1, X31
	034 Move X23, X0
	035 Call Object..ctor, X0
	036 Compare X23, 0
	037 JumpIfEqual {66}
	038 Move X8, 0x2EF000
	039 Move X8, [X8+2544]
	040 And W9, W22, 1
	041 Move [X23+16], X19
	042 Move [X23+24], W9
	043 Move [X23+32], X21
	044 Move [X23+40], X20
	045 Move X0, [X8]
	046 Move X20, 0x2EE000
	047 Move X20, [X20+3016]
	048 Call 0x1C17F10
	049 Move X2, [X20]
	050 Move X1, X23
	051 Move X3, X31
	052 Move X20, X0
	053 Call Action`1<Object>..ctor, X0, X1, X2
	054 Move X2, [X23+40]
	055 Move X0, X19
	056 Move X1, X20
	057 Move X20, [X31+48]
	058 Move X19, [X31+56]
	059 Move X22, [X31+32]
	060 Move X21, [X31+40]
	061 Move X24, [X31+16]
	062 Move X23, [X31+24]
	063 Move X30, [X31+64]
	064 Call WebSocketFrame.readHeaderAsync, X0, X1, X2
	065 Return 
	066 Call 0x1C17F20

Method: System.Void Unmask()

Disassembly:
	0x03E7EEFC MOV X1, X0
	0x03E7EF00 MOV X0, X19
	0x03E7EF04 LDR X9, [X8 + 0x378]
	0x03E7EF08 LDR X2, [X8 + 0x380]
	0x03E7EF0C BLR X9
	0x03E7EF10 CBZ X0, 0x3E7EF98
	0x03E7EF14 LDR X1, [X28]
	0x03E7EF18 LDR X2, [X25]
	0x03E7EF1C MOV X3, X31
	0x03E7EF20 BL 0x32293BC
	0x03E7EF24 CBZ X0, 0x3E7EF98
	0x03E7EF28 LDR X1, [X27]
	0x03E7EF2C LDR X2, [X25]
	0x03E7EF30 MOV X3, X31
	0x03E7EF34 BL 0x32293BC
	0x03E7EF38 LDR X8, [X26]
	0x03E7EF3C MOV X19, X0
	0x03E7EF40 MOVZ W1, 0x1
	0x03E7EF44 MOV X0, X8
	0x03E7EF48 BL 0x1C16D6C
	0x03E7EF4C CBZ X0, 0x3E7EF98
	0x03E7EF50 LDR W8, [X0 + 0x18]
	0x03E7EF54 MOV X1, X0
	0x03E7EF58 CBZ W8, 0x3E7EFE0
	0x03E7EF5C ADRP X8, 0x2B3000
	0x03E7EF60 LDR X8, [X8 + 0x420]
	0x03E7EF64 LDR X8, [X8]
	0x03E7EF68 STR X8, [X1 + 0x20]
	0x03E7EF6C CBZ X19, 0x3E7EF98
	0x03E7EF70 MOV X0, X19
	0x03E7EF74 LDP X20, X19, [X31 + 0x50]
	0x03E7EF78 LDP X22, X21, [X31 + 0x40]
	0x03E7EF7C LDP X24, X23, [X31 + 0x30]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x56B000
	005 Move W8, [X20+3500]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0x2EF000
	012 Move X0, [X0+968]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+3500], W8
	016 Move W8, [X19+25]
	017 Compare W8, 0
	018 JumpIfEqual {37}
	019 Move X0, [X19+48]
	020 Compare X0, 0
	021 JumpIfEqual {41}
	022 Move X1, [X19+32]
	023 Move X20, 0x2EF000
	024 Move X20, [X20+968]
	025 Move X2, X31
	026 Call PayloadData.Mask, X0, X1
	027 Move X0, [X20]
	028 Move W8, [X0+224]
	029 Compare W8, 0
	030 JumpIfNotEqual {33}
	031 Call 0x1C17DFC
	032 Move X0, [X20]
	033 Move X8, [X0+184]
	034 Move X8, [X8+8]
	035 Move [X19+25], W31
	036 Move [X19+32], X8
	037 Move X20, [X31+16]
	038 Move X19, [X31+24]
	039 Move X30, [X31+32]
	040 Return 
	041 Call 0x1C17F20

Method: System.Collections.Generic.IEnumerator`1<System.Byte> GetEnumerator()

Disassembly:
	0x03E7F060 BL 0x1C16CF4
	0x03E7F064 MOVZ W8, 0x1
	0x03E7F068 STRB W8, [X21 + 0xDBA]
	0x03E7F06C ADDS W31, W20, 0x1
	0x03E7F070 B.EQ 0x3E7F0F0
	0x03E7F074 LDR X0, [X19 + 0x10]
	0x03E7F078 CBZ X0, 0x3E7F0EC
	0x03E7F07C ADRP X9, 0x278000
	0x03E7F080 LDR X9, [X9 + 0x7D8]
	0x03E7F084 LDR W10, [X0 + 0x1C]
	0x03E7F088 LDR X8, [X0 + 0x10]
	0x03E7F08C LDR X9, [X9]
	0x03E7F090 ADD W10, W10, 0x1
	0x03E7F094 STR W10, [X0 + 0x1C]
	0x03E7F098 CBZ X8, 0x3E7F0EC
	0x03E7F09C LDRSW X10, [X0 + 0x18]
	0x03E7F0A0 LDR W11, [X8 + 0x18]
	0x03E7F0A4 CMP W10, W11
	0x03E7F0A8 B.CS 0x3E7F0C0
	0x03E7F0AC ADD W9, W10, 0x1
	0x03E7F0B0 ADD X8, X8, X10
	0x03E7F0B4 STR W9, [X0 + 0x18]
	0x03E7F0B8 STRB W20, [X8 + 0x20]
	0x03E7F0BC B 0x3E7F0D4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x56A000
	006 Move X21, 0x2EE000
	007 Move W8, [X20+3501]
	008 Move X21, [X21+3024]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0x2EE000
	015 Move X0, [X0+3024]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+3501], W8
	019 Move X0, [X21]
	020 Call 0x1C17F10
	021 Move X1, X31
	022 Move X20, X0
	023 Call Object..ctor, X0
	024 Move [X20+16], W31
	025 Move [X20+24], X19
	026 Move X0, X20
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]
	031 Return X0

Method: System.Void Print(System.Boolean dumped)

Disassembly:
	0x03E7F0E8 RET
	0x03E7F0EC BL 0x1C16F20
	0x03E7F0F0 ADRP X0, 0x2A6000
	0x03E7F0F4 LDR X0, [X0 + 0x3D8]
	0x03E7F0F8 BL 0x1C16D08
	0x03E7F0FC BL 0x1C16F10
	0x03E7F100 MOV X19, X0
	0x03E7F104 ADRP X0, 0x2ED000
	0x03E7F108 LDR X0, [X0 + 0xC50]
	0x03E7F10C BL 0x1C16D08
	0x03E7F110 MOV X1, X0
	0x03E7F114 MOV X0, X19
	0x03E7F118 MOV X2, X31
	0x03E7F11C BL 0x32E1770
	0x03E7F120 ADRP X0, 0x2ED000
	0x03E7F124 LDR X0, [X0 + 0xC30]
	0x03E7F128 BL 0x1C16D08
	0x03E7F12C MOV X1, X0
	0x03E7F130 MOV X0, X19
	0x03E7F134 BL 0x1C16DEC
	0x03E7F138 STP X30, X23, [X31 - 0x30]!
	0x03E7F13C STP X22, X21, [X31 + 0x10]
	0x03E7F140 STP X20, X19, [X31 + 0x20]
	0x03E7F144 MOV X22, X1
	0x03E7F148 MOV X1, X31
	0x03E7F14C MOV X19, X4
	0x03E7F150 MOV X20, X3
	0x03E7F154 MOV X21, X2
	0x03E7F158 MOV X23, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x56A000
	006 Move W8, [X21+3502]
	007 Move W20, W1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0x27D000
	014 Move X0, [X0+2392]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+3502], W8
	018 Move X21, 0x27D000
	019 Move X21, [X21+2392]
	020 Move X0, X19
	021 Move TEMP, X20
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfNotEqual {26}
	025 Call WebSocketFrame.dump, X0
	026 Call WebSocketFrame.print, X0
	027 Move X19, X0
	028 Move X0, [X21]
	029 Move W8, [X0+224]
	030 Compare W8, 0
	031 JumpIfNotEqual {33}
	032 Call 0x1C17DFC
	033 Move X0, X19
	034 Move X20, [X31+16]
	035 Move X19, [X31+24]
	036 Move X1, X31
	037 Move X30, [X31+32]
	038 Move X21, [X31+40]
	039 Call Console.WriteLine, X0
	040 Return 

Method: System.String PrintToString(System.Boolean dumped)

Disassembly:
	0x03E7F15C BL 0x33BDD8C
	0x03E7F160 STP X19, X20, [X23 + 0x10]
	0x03E7F164 STP X22, X21, [X23 + 0x30]

ISIL:
	001 Move TEMP, X1
	002 And TEMP, TEMP, 1
	003 Compare TEMP, 1
	004 JumpIfNotEqual {7}
	005 Call WebSocketFrame.dump, X0
	006 Return X0
	007 Call WebSocketFrame.print, X0
	008 Return X0

Method: System.Byte[] ToArray()

Disassembly:
	0x03E7D7E8 CBNZ W8, 0x3E7D7F0
	0x03E7D7EC BL 0x1C16DFC
	0x03E7D7F0 MOV X0, X20
	0x03E7D7F4 MOV X2, X21
	0x03E7D7F8 MOV X3, X19
	0x03E7D7FC LDP X20, X19, [X31 + 0x30]
	0x03E7D800 LDP X22, X21, [X31 + 0x20]
	0x03E7D804 LDP X24, X23, [X31 + 0x10]
	0x03E7D808 MOVZ W1, 0x4
	0x03E7D80C MOV X4, X31
	0x03E7D810 LDR X30, [X31], #0x40
	0x03E7D814 B 0x3E69E90
	0x03E7D818 ADRP X19, 0x2EF000
	0x03E7D81C LDR X19, [X19 + 0x3C8]
	0x03E7D820 LDR X0, [X19]
	0x03E7D824 LDR W8, [X0 + 0xE0]
	0x03E7D828 CBNZ W8, 0x3E7D838
	0x03E7D82C BL 0x1C16DFC
	0x03E7D830 LDR X0, [X19]
	0x03E7D834 LDR X21, [X23 + 0x20]
	0x03E7D838 LDR X8, [X0 + 0xB8]
	0x03E7D83C LDR X8, [X8 + 0x8]
	0x03E7D840 STR X8, [X22 + 0x20]
	0x03E7D844 CBZ X21, 0x3E7D86C
	0x03E7D848 LDR X1, [X23 + 0x18]
	0x03E7D84C LDR X3, [X21 + 0x18]
	0x03E7D850 LDR X0, [X21 + 0x40]
	0x03E7D854 LDR X2, [X21 + 0x28]
	0x03E7D858 LDP X20, X19, [X31 + 0x30]
	0x03E7D85C LDP X22, X21, [X31 + 0x20]
	0x03E7D860 LDP X24, X23, [X31 + 0x10]
	0x03E7D864 LDR X30, [X31], #0x40
	0x03E7D868 BR X3
	0x03E7D86C BL 0x1C16F20
	0x03E7D870 MOV X1, X31
	0x03E7D874 B 0x33BDD8C
	0x03E7D878 STP X30, X23, [X31 - 0x30]!
	0x03E7D87C STP X22, X21, [X31 + 0x10]
	0x03E7D880 STP X20, X19, [X31 + 0x20]
	0x03E7D884 ADRP X20, 0x56B000
	0x03E7D888 LDRB W8, [X20 + 0xDA5]
	0x03E7D88C MOV X19, X1
	0x03E7D890 MOV X21, X0
	0x03E7D894 TBNZ X8, 0x0, 0x3E7D8B8
	0x03E7D898 ADRP X0, 0x27D000
	0x03E7D89C LDR X0, [X0 + 0x248]
	0x03E7D8A0 BL 0x1C16CF4
	0x03E7D8A4 ADRP X0, 0x2EF000
	0x03E7D8A8 LDR X0, [X0 + 0x3B8]
	0x03E7D8AC BL 0x1C16CF4
	0x03E7D8B0 MOVZ W8, 0x1
	0x03E7D8B4 STRB W8, [X20 + 0xDA5]
	0x03E7D8B8 CBZ X19, 0x3E7D9B4
	0x03E7D8BC ADRP X22, 0x2EF000
	0x03E7D8C0 LDR X22, [X22 + 0x3B8]
	0x03E7D8C4 MOV X0, X19
	0x03E7D8C8 BL 0x3E7BFC0
	0x03E7D8CC LDR X8, [X22]
	0x03E7D8D0 MOV X20, X0
	0x03E7D8D4 LDR W9, [X8 + 0xE0]
	0x03E7D8D8 CBNZ W9, 0x3E7D8E8
	0x03E7D8DC MOV X0, X8
	0x03E7D8E0 BL 0x1C16DFC
	0x03E7D8E4 LDR X8, [X22]
	0x03E7D8E8 LDR X9, [X8 + 0xB8]
	0x03E7D8EC LDR X9, [X9 + 0x8]
	0x03E7D8F0 CMP X20, X9
	0x03E7D8F4 B.HI 0x3E7D9B8
	0x03E7D8F8 CBZ X20, 0x3E7D934
	0x03E7D8FC ADRP X8, 0x27D000
	0x03E7D900 LDR X8, [X8 + 0x248]
	0x03E7D904 LDRB W23, [X19 + 0x38]
	0x03E7D908 LDR X0, [X8]
	0x03E7D90C LDR W8, [X0 + 0xE0]
	0x03E7D910 CBNZ W8, 0x3E7D918
	0x03E7D914 BL 0x1C16DFC
	0x03E7D918 CMP W23, 0x7F
	0x03E7D91C B.CS 0x3E7D958
	0x03E7D920 MOV X0, X21
	0x03E7D924 MOV W1, W20
	0x03E7D928 MOV X2, X31
	0x03E7D92C BL 0x3E69A60
	0x03E7D930 B 0x3E7D96C
	0x03E7D934 LDR W9, [X8 + 0xE0]
	0x03E7D938 CBNZ W9, 0x3E7D948
	0x03E7D93C MOV X0, X8
	0x03E7D940 BL 0x1C16DFC
	0x03E7D944 LDR X8, [X22]
	0x03E7D948 LDR X8, [X8 + 0xB8]
	0x03E7D94C LDR X8, [X8]
	0x03E7D950 STR X8, [X19 + 0x30]
	0x03E7D954 B 0x3E7D9A0
	0x03E7D958 MOVZ W2, 0x400
	0x03E7D95C MOV X0, X21
	0x03E7D960 MOV X1, X20
	0x03E7D964 MOV X3, X31
	0x03E7D968 BL 0x3E69BC0
	0x03E7D96C MOV X21, X0
	0x03E7D970 CBZ X0, 0x3E7D9B4
	0x03E7D974 LDRSW X8, [X21 + 0x18]
	0x03E7D978 CMP X8, X20
	0x03E7D97C B.NE 0x3E7D9EC
	0x03E7D980 LDR X0, [X22]
	0x03E7D984 BL 0x1C16F10
	0x03E7D988 MOV X1, X21
	0x03E7D98C MOV X2, X20
	0x03E7D990 MOV X3, X31
	0x03E7D994 MOV X22, X0
	0x03E7D998 BL 0x3E7A604
	0x03E7D99C STR X22, [X19 + 0x30]
	0x03E7D9A0 MOV X0, X19
	0x03E7D9A4 LDP X20, X19, [X31 + 0x20]
	0x03E7D9A8 LDP X22, X21, [X31 + 0x10]
	0x03E7D9AC LDP X30, X23, [X31], #0x30
	0x03E7D9B0 RET
	0x03E7D9B4 BL 0x1C16F20
	0x03E7D9B8 ADRP X0, 0x2EF000
	0x03E7D9BC LDR X0, [X0 + 0xB90]
	0x03E7D9C0 BL 0x1C16D08
	0x03E7D9C4 MOV X19, X0
	0x03E7D9C8 ADRP X0, 0x29E000
	0x03E7D9CC LDR X0, [X0 + 0xB38]
	0x03E7D9D0 BL 0x1C16D08
	0x03E7D9D4 BL 0x1C16F10
	0x03E7D9D8 MOVZ W1, 0x3F1
	0x03E7D9DC MOV X2, X19
	0x03E7D9E0 MOV X20, X0
	0x03E7D9E4 BL 0x3E7AAE0
	0x03E7D9E8 B 0x3E7DA18
	0x03E7D9EC ADRP X0, 0x2EF000
	0x03E7D9F0 LDR X0, [X0 + 0xB98]
	0x03E7D9F4 BL 0x1C16D08
	0x03E7D9F8 MOV X19, X0
	0x03E7D9FC ADRP X0, 0x29E000
	0x03E7DA00 LDR X0, [X0 + 0xB38]
	0x03E7DA04 BL 0x1C16D08
	0x03E7DA08 BL 0x1C16F10
	0x03E7DA0C MOV X1, X19
	0x03E7DA10 MOV X20, X0
	0x03E7DA14 BL 0x3E7AAA8
	0x03E7DA18 ADRP X0, 0x2EF000
	0x03E7DA1C LDR X0, [X0 + 0xBA0]
	0x03E7DA20 BL 0x1C16D08
	0x03E7DA24 MOV X1, X0
	0x03E7DA28 MOV X0, X20
	0x03E7DA2C BL 0x1C16DEC
	0x03E7DA30 STR X30, [X31 - 0x40]!
	0x03E7DA34 STP X24, X23, [X31 + 0x10]
	0x03E7DA38 STP X22, X21, [X31 + 0x20]
	0x03E7DA3C STP X20, X19, [X31 + 0x30]
	0x03E7DA40 ADRP X21, 0x56B000
	0x03E7DA44 ADRP X24, 0x2EF000
	0x03E7DA48 LDRB W8, [X21 + 0xDA6]
	0x03E7DA4C LDR X24, [X24 + 0xBA8]
	0x03E7DA50 MOV X19, X3
	0x03E7DA54 MOV X23, X2
	0x03E7DA58 MOV X22, X1
	0x03E7DA5C MOV X20, X0
	0x03E7DA60 TBNZ X8, 0x0, 0x3E7DAA8
	0x03E7DA64 ADRP X0, 0x2EF000
	0x03E7DA68 LDR X0, [X0 + 0xB50]
	0x03E7DA6C BL 0x1C16CF4
	0x03E7DA70 ADRP X0, 0x27D000
	0x03E7DA74 LDR X0, [X0 + 0x248]
	0x03E7DA78 BL 0x1C16CF4
	0x03E7DA7C ADRP X0, 0x2EF000
	0x03E7DA80 LDR X0, [X0 + 0x3B8]
	0x03E7DA84 BL 0x1C16CF4
	0x03E7DA88 ADRP X0, 0x2EF000
	0x03E7DA8C LDR X0, [X0 + 0xBB0]
	0x03E7DA90 BL 0x1C16CF4
	0x03E7DA94 ADRP X0, 0x2EF000
	0x03E7DA98 LDR X0, [X0 + 0xBA8]
	0x03E7DA9C BL 0x1C16CF4
	0x03E7DAA0 MOVZ W8, 0x1
	0x03E7DAA4 STRB W8, [X21 + 0xDA6]
	0x03E7DAA8 LDR X0, [X24]
	0x03E7DAAC BL 0x1C16F10
	0x03E7DAB0 MOV X1, X31
	0x03E7DAB4 MOV X21, X0
	0x03E7DAB8 BL 0x33BDD8C
	0x03E7DABC CBZ X21, 0x3E7DC28
	0x03E7DAC0 STP X22, X23, [X21 + 0x18]
	0x03E7DAC4 CBZ X22, 0x3E7DC28
	0x03E7DAC8 ADRP X23, 0x2EF000
	0x03E7DACC LDR X23, [X23 + 0x3B8]
	0x03E7DAD0 MOV X0, X22
	0x03E7DAD4 BL 0x3E7BFC0
	0x03E7DAD8 LDR X8, [X23]
	0x03E7DADC MOV X22, X0
	0x03E7DAE0 LDR W9, [X8 + 0xE0]
	0x03E7DAE4 CBNZ W9, 0x3E7DAF4
	0x03E7DAE8 MOV X0, X8
	0x03E7DAEC BL 0x1C16DFC
	0x03E7DAF0 LDR X8, [X23]
	0x03E7DAF4 LDR X9, [X8 + 0xB8]
	0x03E7DAF8 LDR X9, [X9 + 0x8]
	0x03E7DAFC CMP X22, X9
	0x03E7DB00 B.HI 0x3E7DC2C
	0x03E7DB04 CBZ X22, 0x3E7DB8C
	0x03E7DB08 ADRP X8, 0x2EF000
	0x03E7DB0C LDR X8, [X8 + 0xB50]
	0x03E7DB10 STR X22, [X21 + 0x10]
	0x03E7DB14 ADRP X23, 0x2EF000
	0x03E7DB18 LDR X0, [X8]
	0x03E7DB1C LDR X23, [X23 + 0xBB0]
	0x03E7DB20 BL 0x1C16F10
	0x03E7DB24 LDR X2, [X23]
	0x03E7DB28 MOV X1, X21
	0x03E7DB2C MOV X3, X31
	0x03E7DB30 MOV X23, X0
	0x03E7DB34 BL 0x2A6B948
	0x03E7DB38 LDR X8, [X21 + 0x18]
	0x03E7DB3C CBZ X8, 0x3E7DC28
	0x03E7DB40 LDRB W8, [X8 + 0x38]

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X21, 0x56C000
	014 Move X19, 0x27F000
	015 Move X23, 0x27E000
	016 Move W8, [X21+3503]
	017 Move X19, [X19+1368]
	018 Move X23, [X23+584]
	019 Move X20, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {35}
	024 Move X0, 0x27E000
	025 Move X0, [X0+584]
	026 Call 0x1C17CF4
	027 Move X0, 0x277000
	028 Move X0, [X0+3584]
	029 Call 0x1C17CF4
	030 Move X0, 0x27F000
	031 Move X0, [X0+1368]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X21+3503], W8
	035 Move X0, [X19]
	036 Move X22, 0x277000
	037 Move X22, [X22+3584]
	038 Call 0x1C17F10
	039 Move X1, X31
	040 Move X19, X0
	041 Call MemoryStream..ctor, X0
	042 Move X0, [X23]
	043 Move W21, [X20+24]
	044 Move W24, [X20+57]
	045 Move W25, [X20+58]
	046 Move W29, [X20+59]
	047 Move W28, [X20+40]
	048 Move W26, [X20+25]
	049 Move W8, [X0+224]
	050 Move W27, [X20+56]
	051 Compare W8, 0
	052 JumpIfNotEqual {54}
	053 Call 0x1C17DFC
	054 Add W8, W24, W21
	055 Add W8, W25, W8
	056 Add W8, W29, W8
	057 Add W8, W28, W8
	058 Add W8, W26, W8
	059 Add W0, W27, W8
	060 Move W1, 1
	061 Move X2, X31
	062 Call Ext.ToByteArray, X0, X1
	063 Move X1, X0
	064 Compare X19, 0
	065 JumpIfEqual {178}
	066 Move X8, [X19]
	067 Move X9, [X8+904]
	068 Move X4, [X8+912]
	069 Move W3, 2
	070 Move X0, X19
	071 Move W2, W31
	072 NotImplemented "Instruction BLR not yet implemented."
	073 Move W8, [X20+56]
	074 NotImplemented "Instruction CMP not yet implemented."
	075 Move X9, [X19]
	076 Move X1, [X20+16]
	077 NotImplemented "Instruction CMP not yet implemented."
	078 Move W10, 2
	079 Move X8, [X9+904]
	080 Move X4, [X9+912]
	081 Move W9, 8
	082 NotImplemented "Instruction CSEL not yet implemented."
	083 Move X0, X19
	084 Move W2, W31
	085 NotImplemented "Instruction BLR not yet implemented."
	086 Move W8, [X20+25]
	087 NotImplemented "Instruction CMP not yet implemented."
	088 Move X8, [X19]
	089 Move X1, [X20+32]
	090 Move X9, [X8+904]
	091 Move X4, [X8+912]
	092 Move W3, 4
	093 Move X0, X19
	094 Move W2, W31
	095 NotImplemented "Instruction BLR not yet implemented."
	096 Move W8, [X20+56]
	097 Compare W8, 0
	098 JumpIfEqual {127}
	099 Move X0, [X20+48]
	100 Compare X0, 0
	101 JumpIfEqual {179}
	102 Move X1, X31
	103 Call PayloadData.ToArray, X0
	104 Move W8, [X20+56]
	105 Move X21, X0
	106 NotImplemented "Instruction CMP not yet implemented."
	107 Compare X21, 0
	108 JumpIfEqual {180}
	109 Move X8, [X19]
	110 Move W3, [X21+24]
	111 Move X9, [X8+904]
	112 Move X4, [X8+912]
	113 Move X0, X19
	114 Move X1, X21
	115 Move W2, W31
	116 NotImplemented "Instruction BLR not yet implemented."
	117 Move X0, [X23]
	118 Move W8, [X0+224]
	119 Compare W8, 0
	120 JumpIfNotEqual {122}
	121 Call 0x1C17DFC
	122 Move W2, 1024
	123 Move X0, X19
	124 Move X1, X21
	125 Move X3, X31
	126 Call Ext.WriteBytes, X0, X1, X2
	127 Move X8, [X19]
	128 Move X1, [X8+640]
	129 Move X9, [X8+632]
	130 Move X0, X19
	131 NotImplemented "Instruction BLR not yet implemented."
	132 Move X8, [X19]
	133 Move X1, [X8+1024]
	134 Move X9, [X8+1016]
	135 Move X0, X19
	136 NotImplemented "Instruction BLR not yet implemented."
	137 Move X21, X0
	138 Move X20, X31
	139 Move X8, [X19]
	140 Move X1, [X22]
	141 NotImplemented "Instruction LDRH not yet implemented."
	142 Compare X9, 0
	143 JumpIfEqual {150}
	144 Move X10, [X8+176]
	145 Add X10, X10, 8
	146 NotImplemented "Instruction LDUR not yet implemented."
	147 NotImplemented "Instruction CMP not yet implemented."
	148 Subtract X9, X9, 1
	149 Add X10, X10, 16
	150 Move X0, X19
	151 Move W2, W31
	152 Call 0x1C5D788
	153 NotImplemented "Instruction LDRSW not yet implemented."
	154 Add X8, X8, X9
	155 Add X0, X8, 312
	156 Move X8, [X0]
	157 Move X1, [X0+8]
	158 Move X0, X19
	159 NotImplemented "Instruction BLR not yet implemented."
	160 Compare X20, 0
	161 JumpIfNotEqual {176}
	162 Move X0, X21
	163 Move X20, [X31+80]
	164 Move X19, [X31+88]
	165 Move X22, [X31+64]
	166 Move X21, [X31+72]
	167 Move X24, [X31+48]
	168 Move X23, [X31+56]
	169 Move X26, [X31+32]
	170 Move X25, [X31+40]
	171 Move X28, [X31+16]
	172 Move X27, [X31+24]
	173 Move X29, [X31+96]
	174 Move X30, [X31+104]
	175 Return X0
	176 Move X0, X20
	177 Call 0x1C17F18
	178 Call 0x1C17F20
	179 Call 0x1C17F20
	180 Call 0x1C17F20
	181 Move X21, X0
	182 NotImplemented "Instruction CMP not yet implemented."
	183 Move X0, X21
	184 Call 0x3EB2AD0
	185 Move X20, [X0]
	186 Call 0x3EB2AE0
	187 Move X21, X31
	188 Compare X19, 0
	189 JumpIfNotEqual {139}
	190 Move X20, X31
	191 Move X21, X0
	192 Compare X19, 0
	193 JumpIfEqual {215}
	194 Move X8, [X19]
	195 Move X1, [X22]
	196 NotImplemented "Instruction LDRH not yet implemented."
	197 Compare X9, 0
	198 JumpIfEqual {205}
	199 Move X10, [X8+176]
	200 Add X10, X10, 8
	201 NotImplemented "Instruction LDUR not yet implemented."
	202 NotImplemented "Instruction CMP not yet implemented."
	203 Subtract X9, X9, 1
	204 Add X10, X10, 16
	205 Move X0, X19
	206 Move W2, W31
	207 Call 0x1C5D788
	208 NotImplemented "Instruction LDRSW not yet implemented."
	209 Add X8, X8, X9
	210 Add X0, X8, 312
	211 Move X8, [X0]
	212 Move X1, [X0+8]
	213 Move X0, X19
	214 NotImplemented "Instruction BLR not yet implemented."
	215 Compare X20, 0
	216 JumpIfNotEqual {219}
	217 Move X0, X21
	218 Call 0x1D2D690
	219 Move X0, X20
	220 Call 0x1C17F18
	221 Call 0x1991590

Method: System.String ToString()

Disassembly:
	0x03E7F168 LDP X20, X19, [X31 + 0x20]
	0x03E7F16C LDP X22, X21, [X31 + 0x10]
	0x03E7F170 LDP X30, X23, [X31], #0x30
	0x03E7F174 RET
	0x03E7F178 STR X30, [X31 - 0x40]!

ISIL:
	001 Move [X31-16], X30
	002 Call WebSocketFrame.ToArray, X0
	003 Move X1, X31
	004 Move X30, [X31+16]
	005 Call BitConverter.ToString, X0
	006 Return X0

Method: System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()

Disassembly:
	0x03E7F17C STP X24, X23, [X31 + 0x10]

ISIL:
	001 Call WebSocketFrame.GetEnumerator, X0
	002 Return X0

