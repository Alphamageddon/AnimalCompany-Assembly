Type: ExitGames.Client.Photon.EventData

Method: System.Void .ctor()

Disassembly:
	0x03506A40 MOV X22, X31
	0x03506A44 B 0x3506A4C
	0x03506A48 MOV X23, X0
	0x03506A4C LDRB W8, [X31 + 0xC]
	0x03506A50 CBZ W8, 0x3506A60
	0x03506A54 MOV X0, X21
	0x03506A58 MOV X1, X31
	0x03506A5C BL 0x33E14E4
	0x03506A60 CBNZ X22, 0x3506A6C
	0x03506A64 MOV X0, X23
	0x03506A68 BL 0x1D2C690
	0x03506A6C MOV X0, X22
	0x03506A70 BL 0x1C16F18
	0x03506A74 BL 0x1990590
	0x03506A78 STR X30, [X31 - 0x10]!
	0x03506A7C LDRSW X8, [X2]
	0x03506A80 ADD W11, W8, 0x1
	0x03506A84 STR W11, [X2]
	0x03506A88 CBZ X1, 0x3506B08
	0x03506A8C LDR W9, [X1 + 0x18]
	0x03506A90 CMP W8, W9
	0x03506A94 B.CS 0x3506B04
	0x03506A98 ADD X10, X1, X8
	0x03506A9C LDRB W10, [X10 + 0x20]
	0x03506AA0 ADD W12, W8, 0x2
	0x03506AA4 CMP W11, W9
	0x03506AA8 STR W12, [X2]
	0x03506AAC B.CS 0x3506B04
	0x03506AB0 ADD X11, X1, W11, SXTW
	0x03506AB4 LDRB W11, [X11 + 0x20]
	0x03506AB8 ADD W13, W8, 0x3

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xEDA000
	006 Move X20, 0xBF7000
	007 Move W8, [X21+2728]
	008 Move X20, [X20+1784]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xBF7000
	015 Move X0, [X0+1784]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+2728], W8
	019 Move W8, 254
	020 Move TEMP, 0
	021 Not TEMP
	022 Move W9, TEMP
	023 Move W10, 245
	024 Move X0, X19
	025 Move X1, X31
	026 Move [X19+32], W8
	027 Move [X19+36], W9
	028 Move [X19+40], W10
	029 Call Object..ctor, X0
	030 Move X0, [X20]
	031 Call 0x1C17F10
	032 Move X1, X31
	033 Move X20, X0
	034 Call ParameterDictionary..ctor, X0
	035 Move [X19+24], X20
	036 Move X20, [X31+16]
	037 Move X19, [X31+24]
	038 Move X30, [X31+32]
	039 Move X21, [X31+40]
	040 Return 

Method: System.Object get_Item(System.Byte key)

Disassembly:
	0x03506ABC CMP W12, W9
	0x03506AC0 STR W13, [X2]
	0x03506AC4 B.CS 0x3506B04
	0x03506AC8 ADD X12, X1, W12, SXTW
	0x03506ACC LDRB W12, [X12 + 0x20]
	0x03506AD0 ADD W8, W8, 0x4
	0x03506AD4 CMP W13, W9
	0x03506AD8 STR W8, [X2]
	0x03506ADC B.CS 0x3506B04
	0x03506AE0 ADD X8, X1, W13, SXTW
	0x03506AE4 LDRB W8, [X8 + 0x20]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31+8], X31
	003 Move X0, [X0+24]
	004 Compare X0, 0
	005 JumpIfEqual {12}
	006 Add X2, X31, 8
	007 Move X3, X31
	008 Call ParameterDictionary.TryGetValue, X0, X1, X2
	009 Move X0, [X31+8]
	010 Move X30, [X31+16]
	011 Return X0
	012 Call 0x1C17F20

Method: System.Void set_Item(System.Byte key, System.Object value)

Disassembly:
	0x03506AE8 UBFM W9, W10, 0x8, 0x7
	0x03506AEC BFM W9, W11, 0x10, 0x7
	0x03506AF0 BFM W9, W12, 0x18, 0x7
	0x03506AF4 ORR W8, W9, W8, 0x0
	0x03506AF8 STR W8, [X0]
	0x03506AFC LDR X30, [X31], #0x10
	0x03506B00 RET

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+24]
	003 Compare X0, 0
	004 JumpIfEqual {9}
	005 Move X3, X31
	006 Move X30, [X31+16]
	007 Call ParameterDictionary.Add, X0, X1, X2
	008 Return 
	009 Call 0x1C17F20

Method: System.Int32 get_Sender()

Disassembly:
	0x03506B04 BL 0x1C16F28
	0x03506B08 BL 0x1C16F20
	0x03506B0C STR X30, [X31 - 0x10]!
	0x03506B10 LDRSW X9, [X2]
	0x03506B14 ADD W8, W9, 0x1
	0x03506B18 STR W8, [X2]
	0x03506B1C CBZ X1, 0x3506B60
	0x03506B20 LDR W10, [X1 + 0x18]
	0x03506B24 CMP W9, W10
	0x03506B28 B.CS 0x3506B5C
	0x03506B2C ADD X11, X1, X9
	0x03506B30 LDRB W11, [X11 + 0x20]
	0x03506B34 ADD W9, W9, 0x2
	0x03506B38 CMP W8, W10
	0x03506B3C STR W9, [X2]
	0x03506B40 B.CS 0x3506B5C
	0x03506B44 ADD X8, X1, W8, SXTW
	0x03506B48 LDRB W8, [X8 + 0x20]
	0x03506B4C BFM W8, W11, 0x18, 0x7
	0x03506B50 STRH W8, [X0]
	0x03506B54 LDR X30, [X31], #0x10
	0x03506B58 RET
	0x03506B5C BL 0x1C16F28
	0x03506B60 BL 0x1C16F20
	0x03506B64 SUB X31, X31, 0x40
	0x03506B68 STP X30, X23, [X31 + 0x10]
	0x03506B6C STP X22, X21, [X31 + 0x20]
	0x03506B70 STP X20, X19, [X31 + 0x30]
	0x03506B74 ADRP X19, 0xED9000
	0x03506B78 ADRP X23, 0xBF5000
	0x03506B7C LDRB W8, [X19 + 0xAB2]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xEDA000
	005 Move W8, [X20+2729]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xC2E000
	012 Move X0, [X0+4048]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2729], W8
	016 Move [X31+12], W31
	017 Move W0, [X19+36]
	018 Add W31, W0, 1
	019 Move X0, [X19+24]
	020 Compare X0, 0
	021 JumpIfEqual {36}
	022 Move X8, 0xC2E000
	023 Move X8, [X8+4048]
	024 Move W1, [X19+32]
	025 Add X2, X31, 12
	026 Move X3, [X8]
	027 Call 0x2230324, X0, X1, X2
	028 Move W8, [X31+12]
	029 And W31, W0, 1
	030 NotImplemented "Instruction CSINV not yet implemented."
	031 Move [X19+36], W0
	032 Move X20, [X31+16]
	033 Move X19, [X31+24]
	034 Move X30, [X31+32]
	035 Return X0
	036 Call 0x1C17F20

Method: System.Void set_Sender(System.Int32 value)

Disassembly:
	0x03506B80 LDR X23, [X23 + 0xF00]
	0x03506B84 MOV X22, X2

ISIL:
	001 Move [X0+36], W1
	002 Return 

Method: System.Object get_CustomData()

Disassembly:
	0x03506B88 MOV X21, X1
	0x03506B8C MOV X20, X0
	0x03506B90 TBNZ X8, 0x0, 0x3506BA8
	0x03506B94 ADRP X0, 0xBF5000
	0x03506B98 LDR X0, [X0 + 0xF00]
	0x03506B9C BL 0x1C16CF4
	0x03506BA0 MOVZ W8, 0x1
	0x03506BA4 STRB W8, [X19 + 0xAB2]
	0x03506BA8 LDR X0, [X23]
	0x03506BAC LDR W8, [X0 + 0xE0]
	0x03506BB0 CBNZ W8, 0x3506BBC
	0x03506BB4 BL 0x1C16DFC
	0x03506BB8 LDR X0, [X23]
	0x03506BBC LDR X8, [X0 + 0xB8]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X2, X0
	004 Move X19, X0
	005 Add X2, X2, 48
	006 Move X0, [X2]
	007 Compare X0, 0
	008 JumpIfNotEqual {16}
	009 Move X0, [X19+24]
	010 Compare X0, 0
	011 JumpIfEqual {19}
	012 Move W1, [X19+40]
	013 Move X3, X31
	014 Call ParameterDictionary.TryGetValue, X0, X1, X2
	015 Move X0, [X19+48]
	016 Move X30, [X31+16]
	017 Move X19, [X31+24]
	018 Return X0
	019 Call 0x1C17F20

Method: System.Void set_CustomData(System.Object value)

Disassembly:
	0x03506BC0 LDR X19, [X8 + 0x20]
	0x03506BC4 STRB W31, [X31 + 0xC]

ISIL:
	001 Move [X0+48], X1
	002 Return 

Method: System.Void Reset()

Disassembly:
	0x03506BC8 ADD X1, X31, 0xC
	0x03506BCC MOV X0, X19
	0x03506BD0 MOV X2, X31
	0x03506BD4 BL 0x33DE64C
	0x03506BD8 LDR X0, [X23]
	0x03506BDC LDR W8, [X0 + 0xE0]
	0x03506BE0 CBNZ W8, 0x3506BEC
	0x03506BE4 BL 0x1C16DFC
	0x03506BE8 LDR X0, [X23]
	0x03506BEC LDR X9, [X0 + 0xB8]
	0x03506BF0 LDRSW X8, [X22]
	0x03506BF4 LDR X0, [X9 + 0x20]
	0x03506BF8 ADD W9, W8, 0x1

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move X0, [X0+24]
	005 Move [X19+16], W31
	006 Compare X0, 0
	007 JumpIfEqual {18}
	008 Move X1, X31
	009 Call ParameterDictionary.Clear, X0
	010 Move TEMP, 0
	011 Not TEMP
	012 Move W8, TEMP
	013 Move [X19+36], W8
	014 Move [X19+48], X31
	015 Move X30, [X31+16]
	016 Move X19, [X31+24]
	017 Return 
	018 Call 0x1C17F20

Method: System.String ToString()

Disassembly:
	0x03506BFC STR W9, [X22]
	0x03506C00 CBZ X21, 0x3506CE0
	0x03506C04 LDR W9, [X21 + 0x18]
	0x03506C08 CMP W8, W9
	0x03506C0C B.CS 0x3506CE4
	0x03506C10 CBZ X0, 0x3506CE8
	0x03506C14 LDR W9, [X0 + 0x18]
	0x03506C18 CMP W9, 0x3
	0x03506C1C B.LS 0x3506CEC
	0x03506C20 ADD X8, X21, X8
	0x03506C24 LDRB W8, [X8 + 0x20]
	0x03506C28 STRB W8, [X0 + 0x23]
	0x03506C2C LDRSW X8, [X22]
	0x03506C30 ADD W9, W8, 0x1
	0x03506C34 STR W9, [X22]
	0x03506C38 LDR W9, [X21 + 0x18]
	0x03506C3C CMP W8, W9
	0x03506C40 B.CS 0x3506CF0
	0x03506C44 ADD X8, X21, X8
	0x03506C48 LDRB W8, [X8 + 0x20]
	0x03506C4C STRB W8, [X0 + 0x22]
	0x03506C50 LDRSW X8, [X22]
	0x03506C54 ADD W9, W8, 0x1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xEDA000
	006 Move X20, 0xC2E000
	007 Move W8, [X21+2730]
	008 Move X20, [X20+4056]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xC2E000
	015 Move X0, [X0+4056]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+2730], W8
	019 Add X0, X19, 16
	020 Move X1, X31
	021 Call Byte.ToString, X0
	022 Move X8, [X20]
	023 Move X20, [X31+16]
	024 Move X19, [X31+24]
	025 Move X1, X0
	026 Move X2, X31
	027 Move X0, X8
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Call String.Format, X0, X1
	031 Return X0

Method: System.String ToStringFull()

Disassembly:
	0x03506C58 STR W9, [X22]
	0x03506C5C LDR W9, [X21 + 0x18]
	0x03506C60 CMP W8, W9
	0x03506C64 B.CS 0x3506CF4
	0x03506C68 ADD X8, X21, X8
	0x03506C6C LDRB W8, [X8 + 0x20]
	0x03506C70 STRB W8, [X0 + 0x21]
	0x03506C74 LDRSW X8, [X22]
	0x03506C78 ADD W9, W8, 0x1
	0x03506C7C STR W9, [X22]
	0x03506C80 LDR W9, [X21 + 0x18]
	0x03506C84 CMP W8, W9
	0x03506C88 B.CS 0x3506CF8
	0x03506C8C ADD X8, X21, X8
	0x03506C90 LDRB W8, [X8 + 0x20]
	0x03506C94 STRB W8, [X0 + 0x20]
	0x03506C98 MOV W1, W31
	0x03506C9C MOV X2, X31
	0x03506CA0 BL 0x3317118
	0x03506CA4 MOV X21, X31
	0x03506CA8 STR S0, [X20]
	0x03506CAC LDRB W8, [X31 + 0xC]
	0x03506CB0 CBZ W8, 0x3506CC0
	0x03506CB4 MOV X0, X19
	0x03506CB8 MOV X1, X31
	0x03506CBC BL 0x33E14E4
	0x03506CC0 CBNZ X21, 0x3506CD8
	0x03506CC4 LDP X20, X19, [X31 + 0x30]
	0x03506CC8 LDP X22, X21, [X31 + 0x20]
	0x03506CCC LDP X30, X23, [X31 + 0x10]
	0x03506CD0 ADD X31, X31, 0x40
	0x03506CD4 RET
	0x03506CD8 MOV X0, X21
	0x03506CDC BL 0x1C16F18
	0x03506CE0 BL 0x1C16F20
	0x03506CE4 BL 0x1C16F28
	0x03506CE8 BL 0x1C16F20
	0x03506CEC BL 0x1C16F28
	0x03506CF0 BL 0x1C16F28
	0x03506CF4 BL 0x1C16F28
	0x03506CF8 BL 0x1C16F28
	0x03506CFC B 0x3506D14
	0x03506D00 B 0x3506D14
	0x03506D04 B 0x3506D14
	0x03506D08 B 0x3506D14
	0x03506D0C B 0x3506D14
	0x03506D10 B 0x3506D14
	0x03506D14 MOV X20, X0
	0x03506D18 CMP W1, 0x1
	0x03506D1C B.NE 0x3506D34
	0x03506D20 MOV X0, X20
	0x03506D24 BL 0x3EB1AD0
	0x03506D28 LDR X21, [X0]
	0x03506D2C BL 0x3EB1AE0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xEDA000
	007 Move X21, 0xBEF000
	008 Move X20, 0xBF6000
	009 Move W8, [X22+2731]
	010 Move X21, [X21+2520]
	011 Move X20, [X20+3680]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {28}
	017 Move X0, 0xBEF000
	018 Move X0, [X0+2520]
	019 Call 0x1C17CF4
	020 Move X0, 0xBF6000
	021 Move X0, [X0+3680]
	022 Call 0x1C17CF4
	023 Move X0, 0xC2E000
	024 Move X0, [X0+4064]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X22+2731], W8
	028 Move W8, [X19+16]
	029 Move X0, [X21]
	030 Move X21, 0xC2E000
	031 Move X21, [X21+4064]
	032 Add X1, X31, 12
	033 Move [X31+12], W8
	034 Call 0x1C17E04
	035 Move X8, [X19+24]
	036 Move X19, X0
	037 Move X1, X31
	038 Move X0, X8
	039 Call ParameterDictionary.op_Implicit, X0
	040 Move X8, [X20]
	041 Move X20, X0
	042 Move W9, [X8+224]
	043 Compare W9, 0
	044 JumpIfNotEqual {47}
	045 Move X0, X8
	046 Call 0x1C17DFC
	047 Move W1, 1
	048 Move X0, X20
	049 Move X2, X31
	050 Call SupportClass.DictionaryToString, X0, X1
	051 Move X8, [X21]
	052 Move X2, X0
	053 Move X1, X19
	054 Move X3, X31
	055 Move X0, X8
	056 Call String.Format, X0, X1, X2
	057 Move X20, [X31+32]
	058 Move X19, [X31+40]
	059 Move X22, [X31+16]
	060 Move X21, [X31+24]
	061 Move X30, [X31+48]
	062 Return X0

