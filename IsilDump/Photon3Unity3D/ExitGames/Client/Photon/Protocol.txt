Type: ExitGames.Client.Photon.Protocol

Method: System.Boolean TryRegisterType(System.Type type, System.Byte typeCode, ExitGames.Client.Photon.SerializeMethod serializeFunction, ExitGames.Client.Photon.DeserializeMethod deserializeFunction)

Disassembly:
	0x0350630C LDR X21, [X21 + 0xF00]
	0x03506310 MOV X20, X0
	0x03506314 TBNZ X8, 0x0, 0x3506338
	0x03506318 ADRP X0, 0xC2D000
	0x0350631C LDR X0, [X0 + 0xBE0]
	0x03506320 BL 0x1C16CF4
	0x03506324 ADRP X0, 0xBF5000
	0x03506328 LDR X0, [X0 + 0xF00]
	0x0350632C BL 0x1C16CF4
	0x03506330 MOVZ W8, 0x1
	0x03506334 STRB W8, [X19 + 0xAAF]
	0x03506338 LDR X0, [X21]
	0x0350633C LDR W8, [X0 + 0xE0]
	0x03506340 CBNZ W8, 0x350634C
	0x03506344 BL 0x1C16DFC
	0x03506348 LDR X0, [X21]
	0x0350634C LDR X8, [X0 + 0xB8]
	0x03506350 LDR X8, [X8 + 0x10]
	0x03506354 CBNZ X8, 0x350638C
	0x03506358 ADRP X8, 0xC2D000
	0x0350635C LDR X8, [X8 + 0xBE0]
	0x03506360 LDR X0, [X8]
	0x03506364 BL 0x1C16F10
	0x03506368 MOV X19, X0
	0x0350636C BL 0x3506488
	0x03506370 LDR X0, [X21]
	0x03506374 LDR W8, [X0 + 0xE0]
	0x03506378 CBNZ W8, 0x3506384
	0x0350637C BL 0x1C16DFC
	0x03506380 LDR X0, [X21]
	0x03506384 LDR X8, [X0 + 0xB8]
	0x03506388 STR X19, [X8 + 0x10]
	0x0350638C LDR W8, [X0 + 0xE0]
	0x03506390 CBNZ W8, 0x350639C
	0x03506394 BL 0x1C16DFC
	0x03506398 LDR X0, [X21]
	0x0350639C LDR X8, [X0 + 0xB8]
	0x035063A0 LDR X19, [X8 + 0x10]
	0x035063A4 STRB W31, [X31 + 0xC]
	0x035063A8 ADD X1, X31, 0xC
	0x035063AC MOV X0, X19
	0x035063B0 MOV X2, X31
	0x035063B4 BL 0x33DE64C
	0x035063B8 LDR X0, [X21]
	0x035063BC LDR W8, [X0 + 0xE0]
	0x035063C0 CBNZ W8, 0x35063CC
	0x035063C4 BL 0x1C16DFC
	0x035063C8 LDR X0, [X21]
	0x035063CC LDR X8, [X0 + 0xB8]
	0x035063D0 LDR X0, [X8 + 0x10]
	0x035063D4 CBZ X0, 0x3506420
	0x035063D8 MOV X1, X20
	0x035063DC MOV X2, X31
	0x035063E0 BL 0x34FA408
	0x035063E4 MOV X21, X0
	0x035063E8 MOV X20, X31
	0x035063EC LDRB W8, [X31 + 0xC]
	0x035063F0 CBZ W8, 0x3506400
	0x035063F4 MOV X0, X19
	0x035063F8 MOV X1, X31
	0x035063FC BL 0x33E14E4
	0x03506400 CBNZ X20, 0x3506418
	0x03506404 MOV X0, X21
	0x03506408 LDP X20, X19, [X31 + 0x20]
	0x0350640C LDP X30, X21, [X31 + 0x10]
	0x03506410 ADD X31, X31, 0x30
	0x03506414 RET
	0x03506418 MOV X0, X20
	0x0350641C BL 0x1C16F18
	0x03506420 BL 0x1C16F20
	0x03506424 B 0x350642C
	0x03506428 B 0x350642C
	0x0350642C MOV X21, X0
	0x03506430 CMP W1, 0x1
	0x03506434 B.NE 0x3506450
	0x03506438 MOV X0, X21
	0x0350643C BL 0x3EB1AD0
	0x03506440 LDR X20, [X0]
	0x03506444 BL 0x3EB1AE0
	0x03506448 MOV X21, X31
	0x0350644C B 0x35063EC
	0x03506450 MOV X20, X31
	0x03506454 B 0x350645C
	0x03506458 MOV X21, X0
	0x0350645C LDRB W8, [X31 + 0xC]
	0x03506460 CBZ W8, 0x3506470
	0x03506464 MOV X0, X19
	0x03506468 MOV X1, X31
	0x0350646C BL 0x33E14E4
	0x03506470 CBNZ X20, 0x350647C
	0x03506474 MOV X0, X21
	0x03506478 BL 0x1D2C690
	0x0350647C MOV X0, X20
	0x03506480 BL 0x1C16F18
	0x03506484 BL 0x1990590
	0x03506488 STR X30, [X31 - 0x30]!
	0x0350648C STP X22, X21, [X31 + 0x10]
	0x03506490 STP X20, X19, [X31 + 0x20]
	0x03506494 ADRP X21, 0xED9000
	0x03506498 ADRP X20, 0xBED000
	0x0350649C LDRB W8, [X21 + 0xAD6]
	0x035064A0 LDR X20, [X20 + 0x618]
	0x035064A4 MOV X19, X0
	0x035064A8 TBNZ X8, 0x0, 0x35064D8

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0xEDA000
	009 Move X24, 0xBF6000
	010 Move W8, [X23+2733]
	011 Move X24, [X24+3840]
	012 Move X21, X3
	013 Move X22, X2
	014 Move W20, W1
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {40}
	020 Move X0, 0xC2E000
	021 Move X0, [X0+3992]
	022 Call 0x1C17CF4
	023 Move X0, 0xC2E000
	024 Move X0, [X0+4000]
	025 Call 0x1C17CF4
	026 Move X0, 0xC2E000
	027 Move X0, [X0+4008]
	028 Call 0x1C17CF4
	029 Move X0, 0xC2E000
	030 Move X0, [X0+4016]
	031 Call 0x1C17CF4
	032 Move X0, 0xC2E000
	033 Move X0, [X0+4024]
	034 Call 0x1C17CF4
	035 Move X0, 0xBF6000
	036 Move X0, [X0+3840]
	037 Call 0x1C17CF4
	038 Move W8, 1
	039 Move [X23+2733], W8
	040 Move X0, [X24]
	041 Move W8, [X0+224]
	042 Compare W8, 0
	043 JumpIfNotEqual {46}
	044 Call 0x1C17DFC
	045 Move X0, [X24]
	046 Move X8, [X0+184]
	047 Move X0, [X8+8]
	048 Compare X0, 0
	049 JumpIfEqual {126}
	050 Move X8, 0xC2E000
	051 Move X8, [X8+4016]
	052 Move W1, W20
	053 Move X2, [X8]
	054 Call Dictionary`2<Byte, Object>.ContainsKey, X0, X1
	055 Move TEMP, X0
	056 And TEMP, TEMP, 1
	057 Compare TEMP, 1
	058 JumpIfEqual {78}
	059 Move X0, [X24]
	060 Move W8, [X0+224]
	061 Compare W8, 0
	062 JumpIfNotEqual {65}
	063 Call 0x1C17DFC
	064 Move X0, [X24]
	065 Move X8, [X0+184]
	066 Move X0, [X8]
	067 Compare X0, 0
	068 JumpIfEqual {126}
	069 Move X8, 0xC2E000
	070 Move X8, [X8+4024]
	071 Move X1, X19
	072 Move X2, [X8]
	073 Call Dictionary`2<Object, Object>.ContainsKey, X0, X1
	074 Move TEMP, X0
	075 And TEMP, TEMP, 1
	076 Compare TEMP, 1
	077 JumpIfNotEqual {79}
	078 Move W0, W31
	079 Move X8, 0xC2E000
	080 Move X8, [X8+3992]
	081 Move X0, [X8]
	082 Call 0x1C17F10
	083 Move X1, X31
	084 Move X23, X0
	085 Call Object..ctor, X0
	086 Move [X23+16], W20
	087 Move [X23+24], X19
	088 Move [X23+32], X22
	089 Move [X23+40], X21
	090 Move X0, [X24]
	091 Move W8, [X0+224]
	092 Compare W8, 0
	093 JumpIfNotEqual {96}
	094 Call 0x1C17DFC
	095 Move X0, [X24]
	096 Move X8, [X0+184]
	097 Move X0, [X8+8]
	098 Compare X0, 0
	099 JumpIfEqual {126}
	100 Move X8, 0xC2E000
	101 Move X8, [X8+4000]
	102 Move W1, W20
	103 Move X2, X23
	104 Move X3, [X8]
	105 Call Dictionary`2<Byte, Object>.Add, X0, X1, X2
	106 Move X8, [X24]
	107 Move X8, [X8+184]
	108 Move X0, [X8]
	109 Compare X0, 0
	110 JumpIfEqual {126}
	111 Move X8, 0xC2E000
	112 Move X8, [X8+4008]
	113 Move X1, X19
	114 Move X2, X23
	115 Move X3, [X8]
	116 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	117 Move W0, 1
	118 Move X20, [X31+48]
	119 Move X19, [X31+56]
	120 Move X22, [X31+32]
	121 Move X21, [X31+40]
	122 Move X24, [X31+16]
	123 Move X23, [X31+24]
	124 Move X30, [X31+64]
	125 Return X0
	126 Call 0x1C17F20

Method: System.Boolean TryRegisterType(System.Type type, System.Byte typeCode, ExitGames.Client.Photon.SerializeStreamMethod serializeFunction, ExitGames.Client.Photon.DeserializeStreamMethod deserializeFunction)

Disassembly:
	0x03506528 STR X0, [X19 + 0x20]
	0x0350652C LDR X0, [X21]
	0x03506530 MOVZ W1, 0x1
	0x03506534 BL 0x1C16D6C
	0x03506538 STR X0, [X19 + 0x28]
	0x0350653C LDR X0, [X20]
	0x03506540 MOVZ W1, 0x8
	0x03506544 BL 0x1C16D6C
	0x03506548 STR X0, [X19 + 0x30]
	0x0350654C LDR X0, [X22]
	0x03506550 MOVZ W1, 0x1
	0x03506554 BL 0x1C16D6C
	0x03506558 STR X0, [X19 + 0x38]
	0x0350655C LDR X0, [X20]
	0x03506560 MOVZ W1, 0x8
	0x03506564 BL 0x1C16D6C
	0x03506568 STR X0, [X19 + 0x40]
	0x0350656C LDR X0, [X20]
	0x03506570 MOVZ W1, 0x4
	0x03506574 BL 0x1C16D6C
	0x03506578 STR X0, [X19 + 0x48]
	0x0350657C LDR X0, [X20]
	0x03506580 MOVZ W1, 0x8
	0x03506584 BL 0x1C16D6C
	0x03506588 STR X0, [X19 + 0x50]
	0x0350658C LDR X0, [X20]
	0x03506590 MOVZ W1, 0x4
	0x03506594 BL 0x1C16D6C
	0x03506598 STR X0, [X19 + 0x58]
	0x0350659C LDR X0, [X20]
	0x035065A0 MOVZ W1, 0x8
	0x035065A4 BL 0x1C16D6C
	0x035065A8 STR X0, [X19 + 0x60]
	0x035065AC MOV X0, X19
	0x035065B0 LDP X20, X19, [X31 + 0x20]
	0x035065B4 LDP X22, X21, [X31 + 0x10]
	0x035065B8 MOV X1, X31
	0x035065BC LDR X30, [X31], #0x30
	0x035065C0 B 0x34FA5D4
	0x035065C4 BL 0x1C16F28
	0x035065C8 BL 0x1C16F20
	0x035065CC SUB X31, X31, 0x30
	0x035065D0 STP X30, X21, [X31 + 0x10]
	0x035065D4 STP X20, X19, [X31 + 0x20]
	0x035065D8 ADRP X19, 0xED9000
	0x035065DC ADRP X21, 0xBF5000
	0x035065E0 LDRB W8, [X19 + 0xAB0]
	0x035065E4 LDR X21, [X21 + 0xF00]
	0x035065E8 MOV X20, X0
	0x035065EC TBNZ X8, 0x0, 0x3506610
	0x035065F0 ADRP X0, 0xC2D000
	0x035065F4 LDR X0, [X0 + 0xBE0]
	0x035065F8 BL 0x1C16CF4
	0x035065FC ADRP X0, 0xBF5000
	0x03506600 LDR X0, [X0 + 0xF00]
	0x03506604 BL 0x1C16CF4
	0x03506608 MOVZ W8, 0x1
	0x0350660C STRB W8, [X19 + 0xAB0]
	0x03506610 LDR X0, [X21]
	0x03506614 LDR W8, [X0 + 0xE0]
	0x03506618 CBNZ W8, 0x3506624
	0x0350661C BL 0x1C16DFC
	0x03506620 LDR X0, [X21]
	0x03506624 LDR X8, [X0 + 0xB8]
	0x03506628 LDR X8, [X8 + 0x10]
	0x0350662C CBNZ X8, 0x3506664
	0x03506630 ADRP X8, 0xC2D000
	0x03506634 LDR X8, [X8 + 0xBE0]
	0x03506638 LDR X0, [X8]
	0x0350663C BL 0x1C16F10
	0x03506640 MOV X19, X0
	0x03506644 BL 0x3506488
	0x03506648 LDR X0, [X21]
	0x0350664C LDR W8, [X0 + 0xE0]
	0x03506650 CBNZ W8, 0x350665C
	0x03506654 BL 0x1C16DFC
	0x03506658 LDR X0, [X21]
	0x0350665C LDR X8, [X0 + 0xB8]
	0x03506660 STR X19, [X8 + 0x10]
	0x03506664 LDR W8, [X0 + 0xE0]
	0x03506668 CBNZ W8, 0x3506674
	0x0350666C BL 0x1C16DFC
	0x03506670 LDR X0, [X21]
	0x03506674 LDR X8, [X0 + 0xB8]
	0x03506678 LDR X19, [X8 + 0x10]
	0x0350667C STRB W31, [X31 + 0xC]
	0x03506680 ADD X1, X31, 0xC
	0x03506684 MOV X0, X19
	0x03506688 MOV X2, X31
	0x0350668C BL 0x33DE64C
	0x03506690 LDR X0, [X21]
	0x03506694 LDR W8, [X0 + 0xE0]
	0x03506698 CBNZ W8, 0x35066A4
	0x0350669C BL 0x1C16DFC
	0x035066A0 LDR X0, [X21]
	0x035066A4 LDR X8, [X0 + 0xB8]
	0x035066A8 LDR X0, [X8 + 0x10]
	0x035066AC CBZ X0, 0x35066F8
	0x035066B0 MOV X1, X20
	0x035066B4 MOV X2, X31
	0x035066B8 BL 0x34FA4E4
	0x035066BC MOV X21, X0
	0x035066C0 MOV X20, X31
	0x035066C4 LDRB W8, [X31 + 0xC]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0xEDA000
	009 Move X24, 0xBF6000
	010 Move W8, [X23+2734]
	011 Move X24, [X24+3840]
	012 Move X21, X3
	013 Move X22, X2
	014 Move W20, W1
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {40}
	020 Move X0, 0xC2E000
	021 Move X0, [X0+3992]
	022 Call 0x1C17CF4
	023 Move X0, 0xC2E000
	024 Move X0, [X0+4000]
	025 Call 0x1C17CF4
	026 Move X0, 0xC2E000
	027 Move X0, [X0+4008]
	028 Call 0x1C17CF4
	029 Move X0, 0xC2E000
	030 Move X0, [X0+4016]
	031 Call 0x1C17CF4
	032 Move X0, 0xC2E000
	033 Move X0, [X0+4024]
	034 Call 0x1C17CF4
	035 Move X0, 0xBF6000
	036 Move X0, [X0+3840]
	037 Call 0x1C17CF4
	038 Move W8, 1
	039 Move [X23+2734], W8
	040 Move X0, [X24]
	041 Move W8, [X0+224]
	042 Compare W8, 0
	043 JumpIfNotEqual {46}
	044 Call 0x1C17DFC
	045 Move X0, [X24]
	046 Move X8, [X0+184]
	047 Move X0, [X8+8]
	048 Compare X0, 0
	049 JumpIfEqual {126}
	050 Move X8, 0xC2E000
	051 Move X8, [X8+4016]
	052 Move W1, W20
	053 Move X2, [X8]
	054 Call Dictionary`2<Byte, Object>.ContainsKey, X0, X1
	055 Move TEMP, X0
	056 And TEMP, TEMP, 1
	057 Compare TEMP, 1
	058 JumpIfEqual {78}
	059 Move X0, [X24]
	060 Move W8, [X0+224]
	061 Compare W8, 0
	062 JumpIfNotEqual {65}
	063 Call 0x1C17DFC
	064 Move X0, [X24]
	065 Move X8, [X0+184]
	066 Move X0, [X8]
	067 Compare X0, 0
	068 JumpIfEqual {126}
	069 Move X8, 0xC2E000
	070 Move X8, [X8+4024]
	071 Move X1, X19
	072 Move X2, [X8]
	073 Call Dictionary`2<Object, Object>.ContainsKey, X0, X1
	074 Move TEMP, X0
	075 And TEMP, TEMP, 1
	076 Compare TEMP, 1
	077 JumpIfNotEqual {79}
	078 Move W0, W31
	079 Move X8, 0xC2E000
	080 Move X8, [X8+3992]
	081 Move X0, [X8]
	082 Call 0x1C17F10
	083 Move X1, X31
	084 Move X23, X0
	085 Call Object..ctor, X0
	086 Move [X23+24], X19
	087 Move [X23+16], W20
	088 Move [X23+48], X22
	089 Move [X23+56], X21
	090 Move X0, [X24]
	091 Move W8, [X0+224]
	092 Compare W8, 0
	093 JumpIfNotEqual {96}
	094 Call 0x1C17DFC
	095 Move X0, [X24]
	096 Move X8, [X0+184]
	097 Move X0, [X8+8]
	098 Compare X0, 0
	099 JumpIfEqual {126}
	100 Move X8, 0xC2E000
	101 Move X8, [X8+4000]
	102 Move W1, W20
	103 Move X2, X23
	104 Move X3, [X8]
	105 Call Dictionary`2<Byte, Object>.Add, X0, X1, X2
	106 Move X8, [X24]
	107 Move X8, [X8+184]
	108 Move X0, [X8]
	109 Compare X0, 0
	110 JumpIfEqual {126}
	111 Move X8, 0xC2E000
	112 Move X8, [X8+4008]
	113 Move X1, X19
	114 Move X2, X23
	115 Move X3, [X8]
	116 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	117 Move W0, 1
	118 Move X20, [X31+48]
	119 Move X19, [X31+56]
	120 Move X22, [X31+32]
	121 Move X21, [X31+40]
	122 Move X24, [X31+16]
	123 Move X23, [X31+24]
	124 Move X30, [X31+64]
	125 Return X0
	126 Call 0x1C17F20

Method: System.Byte[] Serialize(System.Object obj)

Disassembly:
	0x035072F4 LDRB W8, [X8 + 0x10]
	0x035072F8 ADD X0, X31, 0x14
	0x035072FC MOV X1, X31
	0x03507300 STRB W8, [X31 + 0x14]
	0x03507304 BL 0x3319BB4
	0x03507308 ADRP X8, 0xC2D000
	0x0350730C LDR X8, [X8 + 0x18]
	0x03507310 MOV X1, X0
	0x03507314 MOV X2, X31
	0x03507318 LDR X8, [X8]
	0x0350731C MOV X0, X8
	0x03507320 BL 0x321B938
	0x03507324 LDR W2, [X21 + 0x18]
	0x03507328 MOV X3, X0
	0x0350732C MOV X0, X20
	0x03507330 MOV X1, X19
	0x03507334 BL 0x350736C
	0x03507338 LDR W3, [X21 + 0x18]
	0x0350733C MOV X0, X19
	0x03507340 MOV X1, X21
	0x03507344 MOV W2, W31
	0x03507348 MOV X4, X31
	0x0350734C BL 0x3517F60
	0x03507350 MOVZ W0, 0x1
	0x03507354 LDP X20, X19, [X31 + 0x40]
	0x03507358 LDP X22, X21, [X31 + 0x30]
	0x0350735C LDP X30, X23, [X31 + 0x20]
	0x03507360 ADD X31, X31, 0x50
	0x03507364 RET
	0x03507368 BL 0x1C16F20
	0x0350736C STR X30, [X31 - 0x30]!
	0x03507370 STP X22, X21, [X31 + 0x10]
	0x03507374 STP X20, X19, [X31 + 0x20]
	0x03507378 MOV W21, W2
	0x0350737C CMP W2, 0x8000
	0x03507380 STRB W31, [X31 + 0xC]
	0x03507384 B.CS 0x3507410
	0x03507388 LDR X19, [X0 + 0x20]
	0x0350738C MOV X20, X1
	0x03507390 MOV X22, X0
	0x03507394 STRB W31, [X31 + 0xC]
	0x03507398 ADD X1, X31, 0xC
	0x0350739C MOV X0, X19
	0x035073A0 MOV X2, X31
	0x035073A4 BL 0x33DE64C
	0x035073A8 LDR X1, [X22 + 0x20]
	0x035073AC CBZ X1, 0x3507490
	0x035073B0 LDR W8, [X1 + 0x18]
	0x035073B4 CBZ W8, 0x3507494
	0x035073B8 UBFM W9, W21, 0x8, 0x1F
	0x035073BC CMP W8, 0x1
	0x035073C0 STRB W9, [X1 + 0x20]
	0x035073C4 B.EQ 0x3507498
	0x035073C8 STRB W21, [X1 + 0x21]
	0x035073CC CBZ X20, 0x350749C
	0x035073D0 MOVZ W3, 0x2
	0x035073D4 MOV X0, X20
	0x035073D8 MOV W2, W31
	0x035073DC MOV X4, X31
	0x035073E0 BL 0x3517F60
	0x035073E4 MOV X21, X31
	0x035073E8 LDRB W8, [X31 + 0xC]
	0x035073EC CBZ W8, 0x35073FC
	0x035073F0 MOV X0, X19
	0x035073F4 MOV X1, X31
	0x035073F8 BL 0x33E14E4
	0x035073FC CBNZ X21, 0x3507488
	0x03507400 LDP X20, X19, [X31 + 0x20]
	0x03507404 LDP X22, X21, [X31 + 0x10]
	0x03507408 LDR X30, [X31], #0x30
	0x0350740C RET
	0x03507410 STR W21, [X31 + 0x8]
	0x03507414 ADRP X0, 0xBEC000
	0x03507418 LDR X0, [X0 + 0x758]
	0x0350741C MOV X19, X3
	0x03507420 BL 0x1C16D08
	0x03507424 ADD X1, X31, 0x8
	0x03507428 BL 0x1C16E04
	0x0350742C MOV X20, X0
	0x03507430 ADRP X0, 0xC2D000
	0x03507434 LDR X0, [X0 + 0x40]
	0x03507438 BL 0x1C16D08
	0x0350743C MOV X1, X19
	0x03507440 MOV X2, X20
	0x03507444 MOV X3, X31
	0x03507448 BL 0x3227BD4
	0x0350744C MOV X19, X0
	0x03507450 ADRP X0, 0xBEC000
	0x03507454 LDR X0, [X0 + 0xB40]
	0x03507458 BL 0x1C16D08
	0x0350745C BL 0x1C16F10
	0x03507460 MOV X1, X19
	0x03507464 MOV X2, X31
	0x03507468 MOV X20, X0
	0x0350746C BL 0x3379A44
	0x03507470 ADRP X0, 0xC2D000
	0x03507474 LDR X0, [X0 + 0x48]
	0x03507478 BL 0x1C16D08
	0x0350747C MOV X1, X0
	0x03507480 MOV X0, X20
	0x03507484 BL 0x1C16DEC

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, 0xED9000
	007 Move X21, 0xBF5000
	008 Move W8, [X19+2735]
	009 Move X21, [X21+3840]
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0xC2D000
	016 Move X0, [X0+3040]
	017 Call 0x1C17CF4
	018 Move X0, 0xBF5000
	019 Move X0, [X0+3840]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X19+2735], W8
	023 Move X0, [X21]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {29}
	027 Call 0x1C17DFC
	028 Move X0, [X21]
	029 Move X8, [X0+184]
	030 Move X8, [X8+16]
	031 Compare X8, 0
	032 JumpIfNotEqual {47}
	033 Move X8, 0xC2D000
	034 Move X8, [X8+3040]
	035 Move X0, [X8]
	036 Call 0x1C17F10
	037 Move X19, X0
	038 Call Protocol16..ctor, X0
	039 Move X0, [X21]
	040 Move W8, [X0+224]
	041 Compare W8, 0
	042 JumpIfNotEqual {45}
	043 Call 0x1C17DFC
	044 Move X0, [X21]
	045 Move X8, [X0+184]
	046 Move [X8+16], X19
	047 Move W8, [X0+224]
	048 Compare W8, 0
	049 JumpIfNotEqual {52}
	050 Call 0x1C17DFC
	051 Move X0, [X21]
	052 Move X8, [X0+184]
	053 Move X19, [X8+16]
	054 Move [X31+12], W31
	055 Add X1, X31, 12
	056 Move X0, X19
	057 Move X2, X31
	058 Call Monitor.Enter, X0, X1
	059 Move X0, [X21]
	060 Move W8, [X0+224]
	061 Compare W8, 0
	062 JumpIfNotEqual {65}
	063 Call 0x1C17DFC
	064 Move X0, [X21]
	065 Move X8, [X0+184]
	066 Move X0, [X8+16]
	067 Compare X0, 0
	068 JumpIfEqual {91}
	069 Move X1, X20
	070 Move X2, X31
	071 Call IProtocol.Serialize, X0, X1
	072 Move X21, X0
	073 Move X20, X31
	074 Move W8, [X31+12]
	075 Compare W8, 0
	076 JumpIfEqual {80}
	077 Move X0, X19
	078 Move X1, X31
	079 Call Monitor.Exit, X0
	080 Compare X20, 0
	081 JumpIfNotEqual {89}
	082 Move X0, X21
	083 Move X20, [X31+32]
	084 Move X19, [X31+40]
	085 Move X30, [X31+16]
	086 Move X21, [X31+24]
	087 Add X31, X31, 48
	088 Return X0
	089 Move X0, X20
	090 Call 0x1C17F18
	091 Call 0x1C17F20
	092 Move X21, X0
	093 NotImplemented "Instruction CMP not yet implemented."
	094 Move X0, X21
	095 Call 0x3EB2AD0
	096 Move X20, [X0]
	097 Call 0x3EB2AE0
	098 Move X21, X31
	099 Move X20, X31
	100 Move X21, X0
	101 Move W8, [X31+12]
	102 Compare W8, 0
	103 JumpIfEqual {107}
	104 Move X0, X19
	105 Move X1, X31
	106 Call Monitor.Exit, X0
	107 Compare X20, 0
	108 JumpIfNotEqual {111}
	109 Move X0, X21
	110 Call 0x1D2D690
	111 Move X0, X20
	112 Call 0x1C17F18
	113 Call 0x1991590

Method: System.Object Deserialize(System.Byte[] serializedData)

Disassembly:
	0x035075CC ADRP X8, 0xC2D000
	0x035075D0 LDR X8, [X8 + 0x50]
	0x035075D4 ADD X2, X31, 0x8
	0x035075D8 MOV W1, W20
	0x035075DC LDR X3, [X8]
	0x035075E0 BL 0x29D4F58
	0x035075E4 TBZ X0, 0x0, 0x3507664
	0x035075E8 LDR X8, [X31 + 0x8]
	0x035075EC CBZ X8, 0x350772C
	0x035075F0 LDR X8, [X8 + 0x38]
	0x035075F4 CBZ X8, 0x35076D8
	0x035075F8 MOV X0, X19
	0x035075FC MOV X1, X31
	0x03507600 BL 0x3517FD4
	0x03507604 LDR X8, [X31 + 0x8]
	0x03507608 CBZ X8, 0x350772C
	0x0350760C LDR X8, [X8 + 0x38]
	0x03507610 CBZ X8, 0x350772C
	0x03507614 MOV W21, W0
	0x03507618 LDR X9, [X8 + 0x18]
	0x0350761C LDR X0, [X8 + 0x40]
	0x03507620 LDR X3, [X8 + 0x28]
	0x03507624 LDRH W2, [X31 + 0x1C]
	0x03507628 MOV X1, X19
	0x0350762C BLR X9
	0x03507630 MOV X20, X0
	0x03507634 MOV X0, X19
	0x03507638 MOV X1, X31
	0x0350763C BL 0x3517FD4
	0x03507640 LDRSH W8, [X31 + 0x1C]
	0x03507644 SUB W9, W0, W21
	0x03507648 CMP W9, W8
	0x0350764C B.EQ 0x35076C0
	0x03507650 ADD W1, W21, W8
	0x03507654 MOV X0, X19
	0x03507658 MOV X2, X31
	0x0350765C BL 0x3517FDC
	0x03507660 B 0x35076C0
	0x03507664 LDRH W22, [X31 + 0x1C]
	0x03507668 MOV X0, X19
	0x0350766C MOV X1, X31
	0x03507670 BL 0x351EDB0
	0x03507674 CMP W0, W22, SXTH
	0x03507678 B.GE 0x350768C
	0x0350767C MOV X0, X19
	0x03507680 MOV X1, X31
	0x03507684 BL 0x351EDB0
	0x03507688 B 0x3507690
	0x0350768C LDRH W0, [X31 + 0x1C]
	0x03507690 LDR X8, [X21]
	0x03507694 SXTH W21, W0
	0x03507698 MOV W1, W21
	0x0350769C MOV X0, X8
	0x035076A0 BL 0x1C16D6C
	0x035076A4 MOV X20, X0
	0x035076A8 MOV X0, X19
	0x035076AC MOV X1, X20
	0x035076B0 MOV W2, W31
	0x035076B4 MOV W3, W21
	0x035076B8 MOV X4, X31
	0x035076BC BL 0x351EE98
	0x035076C0 MOV X0, X20
	0x035076C4 LDP X20, X19, [X31 + 0x30]
	0x035076C8 LDP X22, X21, [X31 + 0x20]
	0x035076CC LDR X30, [X31 + 0x10]
	0x035076D0 ADD X31, X31, 0x40
	0x035076D4 RET
	0x035076D8 LDRSH W1, [X31 + 0x1C]
	0x035076DC LDR X0, [X21]
	0x035076E0 BL 0x1C16D6C
	0x035076E4 LDRSH W3, [X31 + 0x1C]
	0x035076E8 MOV X20, X0
	0x035076EC MOV X0, X19
	0x035076F0 MOV X1, X20
	0x035076F4 MOV W2, W31
	0x035076F8 MOV X4, X31
	0x035076FC BL 0x351EE98
	0x03507700 LDR X8, [X31 + 0x8]
	0x03507704 CBZ X8, 0x350772C
	0x03507708 LDR X8, [X8 + 0x28]
	0x0350770C CBZ X8, 0x350772C
	0x03507710 LDR X9, [X8 + 0x18]
	0x03507714 LDR X0, [X8 + 0x40]
	0x03507718 LDR X2, [X8 + 0x28]
	0x0350771C MOV X1, X20
	0x03507720 BLR X9
	0x03507724 MOV X20, X0
	0x03507728 B 0x35076C0
	0x0350772C BL 0x1C16F20
	0x03507730 ADD X0, X31, 0x1C
	0x03507734 MOV X1, X31
	0x03507738 BL 0x3379CF4
	0x0350773C MOV X20, X0
	0x03507740 MOV X0, X19
	0x03507744 BL 0x19903C0
	0x03507748 MOV X0, X19
	0x0350774C MOV X1, X31
	0x03507750 BL 0x3517FD4
	0x03507754 STR W0, [X31 + 0x18]
	0x03507758 ADD X0, X31, 0x18
	0x0350775C MOV X1, X31

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, 0xED9000
	007 Move X21, 0xBF5000
	008 Move W8, [X19+2736]
	009 Move X21, [X21+3840]
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0xC2D000
	016 Move X0, [X0+3040]
	017 Call 0x1C17CF4
	018 Move X0, 0xBF5000
	019 Move X0, [X0+3840]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X19+2736], W8
	023 Move X0, [X21]
	024 Move W8, [X0+224]
	025 Compare W8, 0
	026 JumpIfNotEqual {29}
	027 Call 0x1C17DFC
	028 Move X0, [X21]
	029 Move X8, [X0+184]
	030 Move X8, [X8+16]
	031 Compare X8, 0
	032 JumpIfNotEqual {47}
	033 Move X8, 0xC2D000
	034 Move X8, [X8+3040]
	035 Move X0, [X8]
	036 Call 0x1C17F10
	037 Move X19, X0
	038 Call Protocol16..ctor, X0
	039 Move X0, [X21]
	040 Move W8, [X0+224]
	041 Compare W8, 0
	042 JumpIfNotEqual {45}
	043 Call 0x1C17DFC
	044 Move X0, [X21]
	045 Move X8, [X0+184]
	046 Move [X8+16], X19
	047 Move W8, [X0+224]
	048 Compare W8, 0
	049 JumpIfNotEqual {52}
	050 Call 0x1C17DFC
	051 Move X0, [X21]
	052 Move X8, [X0+184]
	053 Move X19, [X8+16]
	054 Move [X31+12], W31
	055 Add X1, X31, 12
	056 Move X0, X19
	057 Move X2, X31
	058 Call Monitor.Enter, X0, X1
	059 Move X0, [X21]
	060 Move W8, [X0+224]
	061 Compare W8, 0
	062 JumpIfNotEqual {65}
	063 Call 0x1C17DFC
	064 Move X0, [X21]
	065 Move X8, [X0+184]
	066 Move X0, [X8+16]
	067 Compare X0, 0
	068 JumpIfEqual {91}
	069 Move X1, X20
	070 Move X2, X31
	071 Call IProtocol.Deserialize, X0, X1
	072 Move X21, X0
	073 Move X20, X31
	074 Move W8, [X31+12]
	075 Compare W8, 0
	076 JumpIfEqual {80}
	077 Move X0, X19
	078 Move X1, X31
	079 Call Monitor.Exit, X0
	080 Compare X20, 0
	081 JumpIfNotEqual {89}
	082 Move X0, X21
	083 Move X20, [X31+32]
	084 Move X19, [X31+40]
	085 Move X30, [X31+16]
	086 Move X21, [X31+24]
	087 Add X31, X31, 48
	088 Return X0
	089 Move X0, X20
	090 Call 0x1C17F18
	091 Call 0x1C17F20
	092 Move X21, X0
	093 NotImplemented "Instruction CMP not yet implemented."
	094 Move X0, X21
	095 Call 0x3EB2AD0
	096 Move X20, [X0]
	097 Call 0x3EB2AE0
	098 Move X21, X31
	099 Move X20, X31
	100 Move X21, X0
	101 Move W8, [X31+12]
	102 Compare W8, 0
	103 JumpIfEqual {107}
	104 Move X0, X19
	105 Move X1, X31
	106 Call Monitor.Exit, X0
	107 Compare X20, 0
	108 JumpIfNotEqual {111}
	109 Move X0, X21
	110 Call 0x1D2D690
	111 Move X0, X20
	112 Call 0x1C17F18
	113 Call 0x1991590

Method: System.Void Serialize(System.Int16 value, System.Byte[] target, ref System.Int32 targetOffset)

Disassembly:
	0x03507760 BL 0x337B6E0
	0x03507764 MOV X19, X0
	0x03507768 ADRP X0, 0xC2D000
	0x0350776C LDR X0, [X0 + 0x58]
	0x03507770 BL 0x1C16D08
	0x03507774 MOV X21, X0
	0x03507778 ADRP X0, 0xC2D000
	0x0350777C LDR X0, [X0 + 0x60]
	0x03507780 BL 0x1C16D08
	0x03507784 MOV X2, X0
	0x03507788 MOV X0, X21
	0x0350778C MOV X1, X20
	0x03507790 MOV X3, X19
	0x03507794 MOV X4, X31
	0x03507798 BL 0x32277C4
	0x0350779C MOV X19, X0
	0x035077A0 ADRP X0, 0xC2D000
	0x035077A4 LDR X0, [X0 + 0x68]
	0x035077A8 BL 0x1C16D08
	0x035077AC BL 0x1C16F10
	0x035077B0 MOV X1, X19
	0x035077B4 MOV X20, X0
	0x035077B8 BL 0x35077D4

ISIL:
	001 Move [X31-16], X30
	002 NotImplemented "Instruction LDRSW not yet implemented."
	003 Add W9, W8, 1
	004 Move [X2], W9
	005 Compare X1, 0
	006 JumpIfEqual {24}
	007 Move W9, [X1+24]
	008 NotImplemented "Instruction CMP not yet implemented."
	009 Move W9, W0
	010 ShiftRight W9, 8
	011 And W9, W9, 0x7FFFFFFF
	012 Add X8, X1, X8
	013 Move [X8+32], W9
	014 NotImplemented "Instruction LDRSW not yet implemented."
	015 Add W9, W8, 1
	016 Move [X2], W9
	017 Move W9, [X1+24]
	018 NotImplemented "Instruction CMP not yet implemented."
	019 Add X8, X1, X8
	020 Move [X8+32], W0
	021 Move X30, [X31+16]
	022 Return 
	023 Call 0x1C17F28
	024 Call 0x1C17F20

Method: System.Void Serialize(System.Int32 value, System.Byte[] target, ref System.Int32 targetOffset)

Disassembly:
	0x035077BC ADRP X0, 0xC2D000
	0x035077C0 LDR X0, [X0 + 0x70]
	0x035077C4 BL 0x1C16D08
	0x035077C8 MOV X1, X0
	0x035077CC MOV X0, X20
	0x035077D0 BL 0x1C16DEC
	0x035077D4 STR X30, [X31 - 0x30]!
	0x035077D8 STP X22, X21, [X31 + 0x10]
	0x035077DC STP X20, X19, [X31 + 0x20]
	0x035077E0 ADRP X21, 0xED8000
	0x035077E4 ADRP X22, 0xBEC000
	0x035077E8 LDRB W8, [X21 + 0xAD8]
	0x035077EC LDR X22, [X22 + 0x7D0]
	0x035077F0 MOV X19, X1
	0x035077F4 MOV X20, X0
	0x035077F8 TBNZ X8, 0x0, 0x3507810
	0x035077FC ADRP X0, 0xBEC000
	0x03507800 LDR X0, [X0 + 0x7D0]
	0x03507804 BL 0x1C16CF4
	0x03507808 MOVZ W8, 0x1
	0x0350780C STRB W8, [X21 + 0xAD8]
	0x03507810 LDR X0, [X22]
	0x03507814 LDR W8, [X0 + 0xE0]
	0x03507818 CBNZ W8, 0x3507820
	0x0350781C BL 0x1C16DFC
	0x03507820 MOV X0, X20
	0x03507824 MOV X1, X19
	0x03507828 LDP X20, X19, [X31 + 0x20]
	0x0350782C LDP X22, X21, [X31 + 0x10]
	0x03507830 MOV X2, X31
	0x03507834 LDR X30, [X31], #0x30
	0x03507838 B 0x33B2C70
	0x0350783C STR X30, [X31 - 0x20]!
	0x03507840 STP X20, X19, [X31 + 0x10]
	0x03507844 ADRP X20, 0xED8000
	0x03507848 LDRB W8, [X20 + 0xAB7]
	0x0350784C MOV W19, W1
	0x03507850 STRB W1, [X31 + 0xC]
	0x03507854 TBNZ X8, 0x0, 0x350795C
	0x03507858 ADRP X0, 0xC15000
	0x0350785C LDR X0, [X0 + 0x248]

ISIL:
	001 Move [X31-16], X30
	002 NotImplemented "Instruction LDRSW not yet implemented."
	003 Add W9, W8, 1
	004 Move [X2], W9
	005 Compare X1, 0
	006 JumpIfEqual {44}
	007 Move W9, [X1+24]
	008 NotImplemented "Instruction CMP not yet implemented."
	009 Move W9, W0
	010 ShiftRight W9, 24
	011 And W9, W9, 0x7FFFFFFF
	012 Add X8, X1, X8
	013 Move [X8+32], W9
	014 NotImplemented "Instruction LDRSW not yet implemented."
	015 Add W9, W8, 1
	016 Move [X2], W9
	017 Move W9, [X1+24]
	018 NotImplemented "Instruction CMP not yet implemented."
	019 Move W9, W0
	020 ShiftRight W9, 16
	021 And W9, W9, 0x7FFFFFFF
	022 Add X8, X1, X8
	023 Move [X8+32], W9
	024 NotImplemented "Instruction LDRSW not yet implemented."
	025 Add W9, W8, 1
	026 Move [X2], W9
	027 Move W9, [X1+24]
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Move W9, W0
	030 ShiftRight W9, 8
	031 And W9, W9, 0x7FFFFFFF
	032 Add X8, X1, X8
	033 Move [X8+32], W9
	034 NotImplemented "Instruction LDRSW not yet implemented."
	035 Add W9, W8, 1
	036 Move [X2], W9
	037 Move W9, [X1+24]
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Add X8, X1, X8
	040 Move [X8+32], W0
	041 Move X30, [X31+16]
	042 Return 
	043 Call 0x1C17F28
	044 Call 0x1C17F20

Method: System.Void Serialize(System.Single value, System.Byte[] target, ref System.Int32 targetOffset)

Disassembly:
	0x03507860 BL 0x1C16CF4
	0x03507864 ADRP X0, 0xC1E000
	0x03507868 LDR X0, [X0 + 0x118]
	0x0350786C BL 0x1C16CF4
	0x03507870 ADRP X0, 0xC13000
	0x03507874 LDR X0, [X0 + 0xD68]
	0x03507878 BL 0x1C16CF4
	0x0350787C ADRP X0, 0xC2D000
	0x03507880 LDR X0, [X0 + 0x78]
	0x03507884 BL 0x1C16CF4
	0x03507888 ADRP X0, 0xC14000
	0x0350788C LDR X0, [X0 + 0xA78]
	0x03507890 BL 0x1C16CF4
	0x03507894 ADRP X0, 0xC2D000
	0x03507898 LDR X0, [X0 + 0x80]
	0x0350789C BL 0x1C16CF4
	0x035078A0 ADRP X0, 0xC2D000
	0x035078A4 LDR X0, [X0 + 0x88]
	0x035078A8 BL 0x1C16CF4
	0x035078AC ADRP X0, 0xC1C000
	0x035078B0 LDR X0, [X0 + 0xF38]
	0x035078B4 BL 0x1C16CF4
	0x035078B8 ADRP X0, 0xC13000
	0x035078BC LDR X0, [X0 + 0xD78]
	0x035078C0 BL 0x1C16CF4
	0x035078C4 ADRP X0, 0xC1E000
	0x035078C8 LDR X0, [X0 + 0x150]
	0x035078CC BL 0x1C16CF4
	0x035078D0 ADRP X0, 0xC13000
	0x035078D4 LDR X0, [X0 + 0xD80]
	0x035078D8 BL 0x1C16CF4
	0x035078DC ADRP X0, 0xC13000
	0x035078E0 LDR X0, [X0 + 0xD88]
	0x035078E4 BL 0x1C16CF4
	0x035078E8 ADRP X0, 0xC1E000
	0x035078EC LDR X0, [X0 + 0x160]
	0x035078F0 BL 0x1C16CF4
	0x035078F4 ADRP X0, 0xC2D000
	0x035078F8 LDR X0, [X0 + 0x90]
	0x035078FC BL 0x1C16CF4
	0x03507900 ADRP X0, 0xC2D000
	0x03507904 LDR X0, [X0 + 0x98]
	0x03507908 BL 0x1C16CF4
	0x0350790C ADRP X0, 0xC15000
	0x03507910 LDR X0, [X0 + 0x6A8]
	0x03507914 BL 0x1C16CF4
	0x03507918 ADRP X0, 0xBF6000
	0x0350791C LDR X0, [X0 + 0x968]
	0x03507920 BL 0x1C16CF4
	0x03507924 ADRP X0, 0xC14000
	0x03507928 LDR X0, [X0 + 0xA80]
	0x0350792C BL 0x1C16CF4
	0x03507930 ADRP X0, 0xC1E000
	0x03507934 LDR X0, [X0 + 0x170]
	0x03507938 BL 0x1C16CF4
	0x0350793C ADRP X0, 0xC14000
	0x03507940 LDR X0, [X0 + 0xB60]
	0x03507944 BL 0x1C16CF4
	0x03507948 ADRP X0, 0xBEC000
	0x0350794C LDR X0, [X0 + 0x6C0]
	0x03507950 BL 0x1C16CF4
	0x03507954 MOVZ W8, 0x1
	0x03507958 STRB W8, [X20 + 0xAB7]
	0x0350795C AND W8, W19, 0xFF
	0x03507960 CMP W8, 0x2A
	0x03507964 B.HI 0x35079B0
	0x03507968 ANDS W8, W19, 0xFF
	0x0350796C B.EQ 0x3507978
	0x03507970 CMP W8, 0x2A
	0x03507974 B.NE 0x3507BA4
	0x03507978 ADRP X8, 0xBEC000
	0x0350797C LDR X8, [X8 + 0x6C0]
	0x03507980 LDR X0, [X8]
	0x03507984 ADRP X8, 0xBF6000
	0x03507988 LDR X8, [X8 + 0x968]
	0x0350798C LDR W9, [X0 + 0xE0]
	0x03507990 LDR X19, [X8]
	0x03507994 CBNZ W9, 0x350799C
	0x03507998 BL 0x1C16DFC
	0x0350799C MOV X0, X19
	0x035079A0 LDP X20, X19, [X31 + 0x10]
	0x035079A4 MOV X1, X31
	0x035079A8 LDR X30, [X31], #0x20
	0x035079AC B 0x338C698
	0x035079B0 SUB W9, W8, 0x61
	0x035079B4 CMP W9, 0x19
	0x035079B8 B.HI 0x35079EC
	0x035079BC ADRP X8, 0xFFFFFFFFFD68F000
	0x035079C0 ADD X8, X8, 0xAC2
	0x035079C4 ADR X10, 0x10
	0x035079C8 LDRB W11, [X8, X9, LSL]
	0x035079CC ADD X10, X10, X11, 0x2, LSL
	0x035079D0 BR X10
	0x035079D4 ADRP X8, 0xBEC000
	0x035079D8 LDR X8, [X8 + 0x6C0]
	0x035079DC LDR X0, [X8]
	0x035079E0 ADRP X8, 0xC1E000
	0x035079E4 LDR X8, [X8 + 0x170]
	0x035079E8 B 0x350798C
	0x035079EC CMP W8, 0x44
	0x035079F0 B.NE 0x3507BA4
	0x035079F4 ADRP X8, 0xBEC000
	0x035079F8 LDR X8, [X8 + 0x6C0]
	0x035079FC LDR X0, [X8]
	0x03507A00 ADRP X8, 0xC1C000
	0x03507A04 LDR X8, [X8 + 0xF38]
	0x03507A08 B 0x350798C
	0x03507A0C ADRP X8, 0xBEC000
	0x03507A10 LDR X8, [X8 + 0x6C0]
	0x03507A14 LDR X0, [X8]
	0x03507A18 ADRP X8, 0xC13000
	0x03507A1C LDR X8, [X8 + 0xD68]
	0x03507A20 B 0x350798C
	0x03507A24 ADRP X8, 0xBEC000
	0x03507A28 LDR X8, [X8 + 0x6C0]
	0x03507A2C LDR X0, [X8]
	0x03507A30 ADRP X8, 0xC2D000
	0x03507A34 LDR X8, [X8 + 0x78]
	0x03507A38 B 0x350798C
	0x03507A3C ADRP X8, 0xBEC000
	0x03507A40 LDR X8, [X8 + 0x6C0]
	0x03507A44 LDR X0, [X8]
	0x03507A48 ADRP X8, 0xC14000
	0x03507A4C LDR X8, [X8 + 0xA78]
	0x03507A50 B 0x350798C
	0x03507A54 ADRP X8, 0xBEC000
	0x03507A58 LDR X8, [X8 + 0x6C0]
	0x03507A5C LDR X0, [X8]
	0x03507A60 ADRP X8, 0xC2D000
	0x03507A64 LDR X8, [X8 + 0x80]
	0x03507A68 B 0x350798C
	0x03507A6C ADRP X8, 0xBEC000
	0x03507A70 LDR X8, [X8 + 0x6C0]
	0x03507A74 LDR X0, [X8]

ISIL:
	001 Move [X31-64], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0xED9000
	009 Move X22, 0xBF5000
	010 Move W8, [X21+2737]
	011 Move X22, [X22+3840]
	012 Move X19, X1
	013 Move X20, X0
	014 Move V8, V0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {24}
	019 Move X0, 0xBF5000
	020 Move X0, [X0+3840]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X21+2737], W8
	024 Move X0, [X22]
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {30}
	028 Call 0x1C17DFC
	029 Move X0, [X22]
	030 Move X8, [X0+184]
	031 Move X21, [X8+24]
	032 Move [X31+12], W31
	033 Add X1, X31, 12
	034 Move X0, X21
	035 Move X2, X31
	036 Call Monitor.Enter, X0, X1
	037 Move X0, [X22]
	038 Move W8, [X0+224]
	039 Compare W8, 0
	040 JumpIfNotEqual {43}
	041 Call 0x1C17DFC
	042 Move X0, [X22]
	043 Move X8, [X0+184]
	044 Move X0, [X8+24]
	045 Compare X0, 0
	046 JumpIfEqual {119}
	047 Move W8, [X0+24]
	048 Compare W8, 0
	049 JumpIfEqual {120}
	050 Move [X0+32], S8
	051 Move W3, [X19]
	052 Move W4, 4
	053 Move W1, W31
	054 Move X2, X20
	055 Move X5, X31
	056 Call Buffer.BlockCopy, X0, X1, X2, X3, X4
	057 Move X22, X31
	058 Move W8, [X31+12]
	059 Compare W8, 0
	060 JumpIfEqual {64}
	061 Move X0, X21
	062 Move X1, X31
	063 Call Monitor.Exit, X0
	064 Compare X22, 0
	065 JumpIfNotEqual {116}
	066 Compare X20, 0
	067 JumpIfEqual {118}
	068 NotImplemented "Instruction LDRSW not yet implemented."
	069 Move W11, [X20+24]
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Add X10, X20, X9
	072 Add X10, X10, 32
	073 Move W8, [X10]
	074 Add W12, W9, 1
	075 NotImplemented "Instruction CMP not yet implemented."
	076 Add W9, W9, 3
	077 NotImplemented "Instruction CMP not yet implemented."
	078 Add X9, X20, W9
	079 Move W11, [X9+32]
	080 Add X9, X20, W12
	081 Move W9, [X9+32]
	082 Move [X10], W11
	083 Move W11, [X19]
	084 Move W12, [X20+24]
	085 Add W10, W11, 2
	086 NotImplemented "Instruction CMP not yet implemented."
	087 Add W11, W11, 1
	088 NotImplemented "Instruction CMP not yet implemented."
	089 Add X12, X20, 32
	090 Move W10, [X12]
	091 Move [X12], W10
	092 Move W10, [X19]
	093 Move W11, [X20+24]
	094 Add W10, W10, 2
	095 NotImplemented "Instruction CMP not yet implemented."
	096 Add X10, X20, W10
	097 Move [X10+32], W9
	098 Move W9, [X19]
	099 Move W10, [X20+24]
	100 Add W9, W9, 3
	101 NotImplemented "Instruction CMP not yet implemented."
	102 Add X9, X20, W9
	103 Move [X9+32], W8
	104 Move W8, [X19]
	105 Move X22, [X31+32]
	106 Move X21, [X31+40]
	107 Move X30, [X31+16]
	108 Move X23, [X31+24]
	109 Add W8, W8, 4
	110 Move [X19], W8
	111 Move X20, [X31+48]
	112 Move X19, [X31+56]
	113 Move V8, [X31+64]
	114 Return 
	115 Call 0x1C17F28
	116 Move X0, X22
	117 Call 0x1C17F18
	118 Call 0x1C17F20
	119 Call 0x1C17F20
	120 Call 0x1C17F28
	121 Move X23, X0
	122 NotImplemented "Instruction CMP not yet implemented."
	123 Move X0, X23
	124 Call 0x3EB2AD0
	125 Move X22, [X0]
	126 Call 0x3EB2AE0
	127 Move X22, X31
	128 Move X23, X0
	129 Move W8, [X31+12]
	130 Compare W8, 0
	131 JumpIfEqual {135}
	132 Move X0, X21
	133 Move X1, X31
	134 Call Monitor.Exit, X0
	135 Compare X22, 0
	136 JumpIfNotEqual {139}
	137 Move X0, X23
	138 Call 0x1D2D690
	139 Move X0, X22
	140 Call 0x1C17F18
	141 Call 0x1991590

Method: System.Void Deserialize(out System.Int32 value, System.Byte[] source, ref System.Int32 offset)

Disassembly:
	0x03507A78 ADRP X8, 0xC14000
	0x03507A7C LDR X8, [X8 + 0xA80]
	0x03507A80 B 0x350798C
	0x03507A84 ADRP X8, 0xBEC000
	0x03507A88 LDR X8, [X8 + 0x6C0]
	0x03507A8C LDR X0, [X8]
	0x03507A90 ADRP X8, 0xC2D000
	0x03507A94 LDR X8, [X8 + 0x88]
	0x03507A98 B 0x350798C
	0x03507A9C ADRP X8, 0xBEC000
	0x03507AA0 LDR X8, [X8 + 0x6C0]
	0x03507AA4 LDR X0, [X8]
	0x03507AA8 ADRP X8, 0xC13000
	0x03507AAC LDR X8, [X8 + 0xD80]
	0x03507AB0 B 0x350798C
	0x03507AB4 ADRP X8, 0xBEC000
	0x03507AB8 LDR X8, [X8 + 0x6C0]
	0x03507ABC LDR X0, [X8]
	0x03507AC0 ADRP X8, 0xC13000
	0x03507AC4 LDR X8, [X8 + 0xD78]
	0x03507AC8 B 0x350798C
	0x03507ACC ADRP X8, 0xBEC000
	0x03507AD0 LDR X8, [X8 + 0x6C0]
	0x03507AD4 LDR X0, [X8]
	0x03507AD8 ADRP X8, 0xC13000
	0x03507ADC LDR X8, [X8 + 0xD88]
	0x03507AE0 B 0x350798C
	0x03507AE4 ADRP X8, 0xBEC000
	0x03507AE8 LDR X8, [X8 + 0x6C0]
	0x03507AEC LDR X0, [X8]
	0x03507AF0 ADRP X8, 0xC1E000
	0x03507AF4 LDR X8, [X8 + 0x150]
	0x03507AF8 B 0x350798C
	0x03507AFC ADRP X8, 0xBEC000
	0x03507B00 LDR X8, [X8 + 0x6C0]
	0x03507B04 LDR X0, [X8]
	0x03507B08 ADRP X8, 0xC15000

ISIL:
	001 Move [X31-16], X30
	002 NotImplemented "Instruction LDRSW not yet implemented."
	003 Add W11, W8, 1
	004 Move [X2], W11
	005 Compare X1, 0
	006 JumpIfEqual {36}
	007 Move W9, [X1+24]
	008 NotImplemented "Instruction CMP not yet implemented."
	009 Add X10, X1, X8
	010 Move W10, [X10+32]
	011 Add W12, W8, 2
	012 NotImplemented "Instruction CMP not yet implemented."
	013 Move [X2], W12
	014 Add X11, X1, W11
	015 Move W11, [X11+32]
	016 Add W13, W8, 3
	017 NotImplemented "Instruction CMP not yet implemented."
	018 Move [X2], W13
	019 Add X12, X1, W12
	020 Move W12, [X12+32]
	021 Add W8, W8, 4
	022 NotImplemented "Instruction CMP not yet implemented."
	023 Move [X2], W8
	024 Add X8, X1, W13
	025 Move W8, [X8+32]
	026 Move W9, W10
	027 ShiftRight W9, 8
	028 And W9, W9, 127
	029 NotImplemented "Instruction BFM not yet implemented."
	030 NotImplemented "Instruction BFM not yet implemented."
	031 Or W8, W9, W8
	032 Move [X0], W8
	033 Move X30, [X31+16]
	034 Return 
	035 Call 0x1C17F28
	036 Call 0x1C17F20

Method: System.Void Deserialize(out System.Int16 value, System.Byte[] source, ref System.Int32 offset)

Disassembly:
	0x03507B0C LDR X8, [X8 + 0x248]
	0x03507B10 B 0x350798C
	0x03507B14 ADRP X8, 0xBEC000
	0x03507B18 LDR X8, [X8 + 0x6C0]
	0x03507B1C LDR X0, [X8]
	0x03507B20 ADRP X8, 0xC2D000
	0x03507B24 LDR X8, [X8 + 0x98]
	0x03507B28 B 0x350798C
	0x03507B2C ADRP X8, 0xBEC000
	0x03507B30 LDR X8, [X8 + 0x6C0]
	0x03507B34 LDR X0, [X8]
	0x03507B38 ADRP X8, 0xC2D000
	0x03507B3C LDR X8, [X8 + 0x90]
	0x03507B40 B 0x350798C
	0x03507B44 ADRP X8, 0xBEC000
	0x03507B48 LDR X8, [X8 + 0x6C0]
	0x03507B4C LDR X0, [X8]
	0x03507B50 ADRP X8, 0xC14000
	0x03507B54 LDR X8, [X8 + 0xB60]
	0x03507B58 B 0x350798C
	0x03507B5C ADRP X8, 0xBEC000
	0x03507B60 LDR X8, [X8 + 0x6C0]

ISIL:
	001 Move [X31-16], X30
	002 NotImplemented "Instruction LDRSW not yet implemented."
	003 Add W8, W9, 1
	004 Move [X2], W8
	005 Compare X1, 0
	006 JumpIfEqual {21}
	007 Move W10, [X1+24]
	008 NotImplemented "Instruction CMP not yet implemented."
	009 Add X11, X1, X9
	010 Move W11, [X11+32]
	011 Add W9, W9, 2
	012 NotImplemented "Instruction CMP not yet implemented."
	013 Move [X2], W9
	014 Add X8, X1, W8
	015 Move W8, [X8+32]
	016 NotImplemented "Instruction BFM not yet implemented."
	017 NotImplemented "Instruction STRH not yet implemented."
	018 Move X30, [X31+16]
	019 Return 
	020 Call 0x1C17F28
	021 Call 0x1C17F20

Method: System.Void Deserialize(out System.Single value, System.Byte[] source, ref System.Int32 offset)

Disassembly:
	0x03507B64 LDR X0, [X8]
	0x03507B68 ADRP X8, 0xC1E000
	0x03507B6C LDR X8, [X8 + 0x118]
	0x03507B70 B 0x350798C
	0x03507B74 ADRP X8, 0xBEC000
	0x03507B78 LDR X8, [X8 + 0x6C0]
	0x03507B7C LDR X0, [X8]
	0x03507B80 ADRP X8, 0xC15000
	0x03507B84 LDR X8, [X8 + 0x6A8]
	0x03507B88 B 0x350798C
	0x03507B8C ADRP X8, 0xBEC000
	0x03507B90 LDR X8, [X8 + 0x6C0]
	0x03507B94 LDR X0, [X8]
	0x03507B98 ADRP X8, 0xC1E000
	0x03507B9C LDR X8, [X8 + 0x160]
	0x03507BA0 B 0x350798C
	0x03507BA4 ADD X0, X31, 0xC
	0x03507BA8 MOV X1, X31
	0x03507BAC BL 0x3319BB4
	0x03507BB0 MOV X19, X0
	0x03507BB4 ADRP X0, 0xC2D000
	0x03507BB8 LDR X0, [X0 + 0xA0]
	0x03507BBC BL 0x1C16D08
	0x03507BC0 MOV X1, X19
	0x03507BC4 MOV X2, X31
	0x03507BC8 BL 0x321B938
	0x03507BCC MOV X1, X31
	0x03507BD0 BL 0x364871C
	0x03507BD4 ADD X0, X31, 0xC
	0x03507BD8 MOV X1, X31
	0x03507BDC BL 0x3319BB4
	0x03507BE0 MOV X19, X0
	0x03507BE4 ADRP X0, 0xC2D000
	0x03507BE8 LDR X0, [X0 + 0xA8]
	0x03507BEC BL 0x1C16D08
	0x03507BF0 MOV X1, X19
	0x03507BF4 MOV X2, X31
	0x03507BF8 BL 0x321B938
	0x03507BFC MOV X19, X0
	0x03507C00 ADRP X0, 0xBEC000
	0x03507C04 LDR X0, [X0 + 0x7D0]
	0x03507C08 BL 0x1C16D08
	0x03507C0C BL 0x1C16F10
	0x03507C10 MOV X1, X19
	0x03507C14 MOV X2, X31
	0x03507C18 MOV X20, X0
	0x03507C1C BL 0x33B2C70
	0x03507C20 ADRP X0, 0xC2D000
	0x03507C24 LDR X0, [X0 + 0xB0]
	0x03507C28 BL 0x1C16D08
	0x03507C2C MOV X1, X0
	0x03507C30 MOV X0, X20
	0x03507C34 BL 0x1C16DEC
	0x03507C38 STP X30, X21, [X31 - 0x20]!
	0x03507C3C STP X20, X19, [X31 + 0x10]
	0x03507C40 ADRP X20, 0xED8000
	0x03507C44 ADRP X21, 0xBEC000
	0x03507C48 LDRB W8, [X20 + 0xAB8]
	0x03507C4C LDR X21, [X21 + 0x6C0]
	0x03507C50 MOV X19, X1
	0x03507C54 TBNZ X8, 0x0, 0x3507CC0
	0x03507C58 ADRP X0, 0xC1E000
	0x03507C5C LDR X0, [X0 + 0x118]
	0x03507C60 BL 0x1C16CF4
	0x03507C64 ADRP X0, 0xC15000
	0x03507C68 LDR X0, [X0 + 0x388]
	0x03507C6C BL 0x1C16CF4
	0x03507C70 ADRP X0, 0xC2D000
	0x03507C74 LDR X0, [X0 + 0x80]
	0x03507C78 BL 0x1C16CF4
	0x03507C7C ADRP X0, 0xC2D000
	0x03507C80 LDR X0, [X0 + 0x88]
	0x03507C84 BL 0x1C16CF4
	0x03507C88 ADRP X0, 0xC1D000
	0x03507C8C LDR X0, [X0 + 0xEA0]
	0x03507C90 BL 0x1C16CF4
	0x03507C94 ADRP X0, 0xC2D000
	0x03507C98 LDR X0, [X0 + 0x90]
	0x03507C9C BL 0x1C16CF4
	0x03507CA0 ADRP X0, 0xC2D000
	0x03507CA4 LDR X0, [X0 + 0x98]
	0x03507CA8 BL 0x1C16CF4
	0x03507CAC ADRP X0, 0xBEC000
	0x03507CB0 LDR X0, [X0 + 0x6C0]
	0x03507CB4 BL 0x1C16CF4
	0x03507CB8 MOVZ W8, 0x1
	0x03507CBC STRB W8, [X20 + 0xAB8]
	0x03507CC0 LDR X0, [X21]
	0x03507CC4 LDR W8, [X0 + 0xE0]
	0x03507CC8 CBNZ W8, 0x3507CD0
	0x03507CCC BL 0x1C16DFC
	0x03507CD0 MOV X0, X19
	0x03507CD4 MOV X1, X31
	0x03507CD8 BL 0x3397AFC
	0x03507CDC SUB W8, W0, 0x3
	0x03507CE0 CMP W8, 0xF
	0x03507CE4 B.HI 0x3507D0C
	0x03507CE8 ADRP X9, 0xFFFFFFFFFD68F000
	0x03507CEC ADD X9, X9, 0xADC
	0x03507CF0 ADR X10, 0x14
	0x03507CF4 LDRB W11, [X9, X8, LSL]
	0x03507CF8 ADD X10, X10, X11, 0x2, LSL
	0x03507CFC MOVZ W0, 0x6F
	0x03507D00 BR X10
	0x03507D04 MOVZ W0, 0x62
	0x03507D08 B 0x3507D94
	0x03507D0C CBZ X19, 0x3507F6C
	0x03507D10 MOV X0, X19
	0x03507D14 MOV X1, X31
	0x03507D18 BL 0x3396BF8
	0x03507D1C TBZ X0, 0x0, 0x3507DA0
	0x03507D20 ADRP X8, 0xC1E000
	0x03507D24 LDR X0, [X21]
	0x03507D28 LDR X8, [X8 + 0x118]
	0x03507D2C LDR W9, [X0 + 0xE0]
	0x03507D30 LDR X20, [X8]
	0x03507D34 CBNZ W9, 0x3507D3C
	0x03507D38 BL 0x1C16DFC
	0x03507D3C MOV X0, X20
	0x03507D40 MOV X1, X31
	0x03507D44 BL 0x338C698
	0x03507D48 MOV X1, X0
	0x03507D4C MOV X0, X19
	0x03507D50 MOV X2, X31
	0x03507D54 BL 0x3395194
	0x03507D58 ANDS W31, W0, 0x1
	0x03507D5C MOVZ W8, 0x78
	0x03507D60 CINC W0, W8, EQ
	0x03507D64 B 0x3507D94
	0x03507D68 MOVZ W0, 0x6B

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X19, 0xED9000
	009 Move X23, 0xBF5000
	010 Move W8, [X19+2738]
	011 Move X23, [X23+3840]
	012 Move X22, X2
	013 Move X21, X1
	014 Move X20, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {24}
	019 Move X0, 0xBF5000
	020 Move X0, [X0+3840]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X19+2738], W8
	024 Move X0, [X23]
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {30}
	028 Call 0x1C17DFC
	029 Move X0, [X23]
	030 Move X8, [X0+184]
	031 Move X19, [X8+32]
	032 Move [X31+12], W31
	033 Add X1, X31, 12
	034 Move X0, X19
	035 Move X2, X31
	036 Call Monitor.Enter, X0, X1
	037 Move X0, [X23]
	038 Move W8, [X0+224]
	039 Compare W8, 0
	040 JumpIfNotEqual {43}
	041 Call 0x1C17DFC
	042 Move X0, [X23]
	043 Move X9, [X0+184]
	044 NotImplemented "Instruction LDRSW not yet implemented."
	045 Move X0, [X9+32]
	046 Add W9, W8, 1
	047 Move [X22], W9
	048 Compare X21, 0
	049 JumpIfEqual {106}
	050 Move W9, [X21+24]
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Compare X0, 0
	053 JumpIfEqual {108}
	054 Move W9, [X0+24]
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Add X8, X21, X8
	057 Move W8, [X8+32]
	058 Move [X0+35], W8
	059 NotImplemented "Instruction LDRSW not yet implemented."
	060 Add W9, W8, 1
	061 Move [X22], W9
	062 Move W9, [X21+24]
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Add X8, X21, X8
	065 Move W8, [X8+32]
	066 Move [X0+34], W8
	067 NotImplemented "Instruction LDRSW not yet implemented."
	068 Add W9, W8, 1
	069 Move [X22], W9
	070 Move W9, [X21+24]
	071 NotImplemented "Instruction CMP not yet implemented."
	072 Add X8, X21, X8
	073 Move W8, [X8+32]
	074 Move [X0+33], W8
	075 NotImplemented "Instruction LDRSW not yet implemented."
	076 Add W9, W8, 1
	077 Move [X22], W9
	078 Move W9, [X21+24]
	079 NotImplemented "Instruction CMP not yet implemented."
	080 Add X8, X21, X8
	081 Move W8, [X8+32]
	082 Move [X0+32], W8
	083 Move W1, W31
	084 Move X2, X31
	085 Call BitConverter.ToSingle, X0, X1
	086 Move X21, X31
	087 Move [X20], S0
	088 Move W8, [X31+12]
	089 Compare W8, 0
	090 JumpIfEqual {94}
	091 Move X0, X19
	092 Move X1, X31
	093 Call Monitor.Exit, X0
	094 Compare X21, 0
	095 JumpIfNotEqual {104}
	096 Move X20, [X31+48]
	097 Move X19, [X31+56]
	098 Move X22, [X31+32]
	099 Move X21, [X31+40]
	100 Move X30, [X31+16]
	101 Move X23, [X31+24]
	102 Add X31, X31, 64
	103 Return 
	104 Move X0, X21
	105 Call 0x1C17F18
	106 Call 0x1C17F20
	107 Call 0x1C17F28
	108 Call 0x1C17F20
	109 Call 0x1C17F28
	110 Call 0x1C17F28
	111 Call 0x1C17F28
	112 Call 0x1C17F28
	113 Move X20, X0
	114 NotImplemented "Instruction CMP not yet implemented."
	115 Move X0, X20
	116 Call 0x3EB2AD0
	117 Move X21, [X0]
	118 Call 0x3EB2AE0
	119 Move X21, X31
	120 Move X20, X0
	121 Move W8, [X31+12]
	122 Compare W8, 0
	123 JumpIfEqual {127}
	124 Move X0, X19
	125 Move X1, X31
	126 Call Monitor.Exit, X0
	127 Compare X21, 0
	128 JumpIfNotEqual {131}
	129 Move X0, X20
	130 Call 0x1D2D690
	131 Move X0, X21
	132 Call 0x1C17F18
	133 Call 0x1991590

Method: System.Void .ctor()

Disassembly:
	0x03507D6C B 0x3507D94
	0x03507D70 MOVZ W0, 0x69

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: System.Void .cctor()

Disassembly:
	0x03507D74 B 0x3507D94
	0x03507D78 MOVZ W0, 0x6C
	0x03507D7C B 0x3507D94
	0x03507D80 MOVZ W0, 0x66
	0x03507D84 B 0x3507D94
	0x03507D88 MOVZ W0, 0x64
	0x03507D8C B 0x3507D94
	0x03507D90 MOVZ W0, 0x73
	0x03507D94 LDP X20, X19, [X31 + 0x10]
	0x03507D98 LDP X30, X21, [X31], #0x20
	0x03507D9C RET
	0x03507DA0 ADRP X8, 0xC2D000
	0x03507DA4 LDR X0, [X21]
	0x03507DA8 LDR X8, [X8 + 0x88]
	0x03507DAC LDR W9, [X0 + 0xE0]
	0x03507DB0 LDR X20, [X8]
	0x03507DB4 CBNZ W9, 0x3507DBC
	0x03507DB8 BL 0x1C16DFC
	0x03507DBC MOV X0, X20
	0x03507DC0 MOV X1, X31
	0x03507DC4 BL 0x338C698
	0x03507DC8 MOV X1, X0
	0x03507DCC MOV X0, X19
	0x03507DD0 MOV X2, X31
	0x03507DD4 BL 0x3395194
	0x03507DD8 TBZ X0, 0x0, 0x3507DE4
	0x03507DDC MOVZ W0, 0x68
	0x03507DE0 B 0x3507D94
	0x03507DE4 ADRP X8, 0xC1D000
	0x03507DE8 LDR X0, [X21]
	0x03507DEC LDR X8, [X8 + 0xEA0]
	0x03507DF0 LDR W9, [X0 + 0xE0]
	0x03507DF4 LDR X20, [X8]
	0x03507DF8 CBNZ W9, 0x3507E00
	0x03507DFC BL 0x1C16DFC
	0x03507E00 MOV X0, X20
	0x03507E04 MOV X1, X31
	0x03507E08 BL 0x338C698
	0x03507E0C MOV X1, X0
	0x03507E10 MOV X0, X19
	0x03507E14 MOV X2, X31
	0x03507E18 BL 0x3395194
	0x03507E1C TBZ X0, 0x0, 0x3507E28
	0x03507E20 MOVZ W0, 0x7A
	0x03507E24 B 0x3507D94
	0x03507E28 LDR X8, [X19]
	0x03507E2C MOV X0, X19
	0x03507E30 LDR X9, [X8 + 0x3C8]
	0x03507E34 LDR X1, [X8 + 0x3D0]
	0x03507E38 BLR X9
	0x03507E3C TBZ X0, 0x0, 0x3507E9C
	0x03507E40 ADRP X8, 0xC15000
	0x03507E44 LDR X0, [X21]
	0x03507E48 LDR X8, [X8 + 0x388]
	0x03507E4C LDR W9, [X0 + 0xE0]
	0x03507E50 LDR X20, [X8]
	0x03507E54 CBNZ W9, 0x3507E5C
	0x03507E58 BL 0x1C16DFC
	0x03507E5C MOV X0, X20
	0x03507E60 MOV X1, X31
	0x03507E64 BL 0x338C698
	0x03507E68 LDR X8, [X19]
	0x03507E6C MOV X20, X0
	0x03507E70 MOV X0, X19
	0x03507E74 LDR X9, [X8 + 0x448]
	0x03507E78 LDR X1, [X8 + 0x450]
	0x03507E7C BLR X9
	0x03507E80 MOV X1, X0
	0x03507E84 MOV X0, X20
	0x03507E88 MOV X2, X31
	0x03507E8C BL 0x3395194
	0x03507E90 TBZ X0, 0x0, 0x3507E9C
	0x03507E94 MOVZ W0, 0x44
	0x03507E98 B 0x3507D94
	0x03507E9C ADRP X8, 0xC2D000
	0x03507EA0 LDR X0, [X21]
	0x03507EA4 LDR X8, [X8 + 0x80]
	0x03507EA8 LDR W9, [X0 + 0xE0]
	0x03507EAC LDR X20, [X8]

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X25, 0xED9000
	011 Move X26, 0xC2D000
	012 Move X19, 0xC2D000
	013 Move X20, 0xBF5000
	014 Move X24, 0xC2D000
	015 Move X23, 0xC2E000
	016 Move X22, 0xBED000
	017 Move X21, 0xBED000
	018 Move X26, [X26+4072]
	019 Move X19, [X19+4080]
	020 Move W8, [X25+2739]
	021 Move X20, [X20+3840]
	022 Move X24, [X24+4088]
	023 Move X23, [X23]
	024 Move X22, [X22+1592]
	025 Move X21, [X21+1560]
	026 Move TEMP, X8
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfEqual {53}
	030 Move X0, 0xBED000
	031 Move X0, [X0+1560]
	032 Call 0x1C17CF4
	033 Move X0, 0xC2D000
	034 Move X0, [X0+4080]
	035 Call 0x1C17CF4
	036 Move X0, 0xC2E000
	037 Move X0, [X0]
	038 Call 0x1C17CF4
	039 Move X0, 0xC2D000
	040 Move X0, [X0+4072]
	041 Call 0x1C17CF4
	042 Move X0, 0xC2D000
	043 Move X0, [X0+4088]
	044 Call 0x1C17CF4
	045 Move X0, 0xBF5000
	046 Move X0, [X0+3840]
	047 Call 0x1C17CF4
	048 Move X0, 0xBED000
	049 Move X0, [X0+1592]
	050 Call 0x1C17CF4
	051 Move W8, 1
	052 Move [X25+2739], W8
	053 Move X0, [X26]
	054 Call 0x1C17F10
	055 Move X1, [X19]
	056 Move X19, X0
	057 Call Dictionary`2<Object, Object>..ctor, X0
	058 Move X8, [X20]
	059 Move X8, [X8+184]
	060 Move [X8], X19
	061 Move X0, [X24]
	062 Call 0x1C17F10
	063 Move X1, [X23]
	064 Move X19, X0
	065 Call Dictionary`2<Byte, Object>..ctor, X0
	066 Move X8, [X20]
	067 Move W1, 1
	068 Move X8, [X8+184]
	069 Move [X8+8], X19
	070 Move X0, [X22]
	071 Call 0x1C17D6C
	072 Move X8, [X20]
	073 Move W1, 4
	074 Move X8, [X8+184]
	075 Move [X8+24], X0
	076 Move X0, [X21]
	077 Call 0x1C17D6C
	078 Move X8, [X20]
	079 Move X20, [X31+64]
	080 Move X19, [X31+72]
	081 Move X22, [X31+48]
	082 Move X21, [X31+56]
	083 Move X24, [X31+32]
	084 Move X23, [X31+40]
	085 Move X8, [X8+184]
	086 Move X26, [X31+16]
	087 Move X25, [X31+24]
	088 Move [X8+32], X0
	089 Move X30, [X31+80]
	090 Return 

