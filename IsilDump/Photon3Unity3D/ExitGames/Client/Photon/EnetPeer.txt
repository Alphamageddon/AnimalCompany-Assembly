Type: ExitGames.Client.Photon.EnetPeer

Method: System.Int32 get_QueuedIncomingCommandsCount()

Disassembly:
	0x034EFCB4 BL 0x3EB1AE0
	0x034EFCB8 LDR X20, [X31]
	0x034EFCBC B 0x34EFAB4
	0x034EFCC0 STR X31, [X31]
	0x034EFCC4 B 0x34EFCCC
	0x034EFCC8 MOV X20, X0
	0x034EFCCC LDRB W8, [X31 + 0x1C]
	0x034EFCD0 CBZ W8, 0x34EFCE0
	0x034EFCD4 MOV X0, X21
	0x034EFCD8 MOV X1, X31
	0x034EFCDC BL 0x33E14E4
	0x034EFCE0 LDR X8, [X31]
	0x034EFCE4 CBNZ X8, 0x34EFCF0
	0x034EFCE8 MOV X0, X20
	0x034EFCEC BL 0x1D2C690
	0x034EFCF0 LDR X0, [X31]
	0x034EFCF4 BL 0x1C16F18
	0x034EFCF8 BL 0x1990590
	0x034EFCFC STR X30, [X31 - 0x10]!
	0x034EFD00 LDR X0, [X0 + 0x10]
	0x034EFD04 CBZ X0, 0x34EFD14
	0x034EFD08 MOV X1, X31
	0x034EFD0C LDR X30, [X31], #0x10
	0x034EFD10 B 0x350243C
	0x034EFD14 BL 0x1C16F20
	0x034EFD18 STR X30, [X31 - 0x10]!
	0x034EFD1C LDR X8, [X0 + 0x10]
	0x034EFD20 CBZ X8, 0x34EFD30
	0x034EFD24 LDRB W0, [X8 + 0x6A]
	0x034EFD28 LDR X30, [X31], #0x10
	0x034EFD2C RET
	0x034EFD30 BL 0x1C16F20
	0x034EFD34 SUB X31, X31, 0x30
	0x034EFD38 STP X30, X21, [X31 + 0x10]
	0x034EFD3C STP X20, X19, [X31 + 0x20]
	0x034EFD40 LDR X8, [X0 + 0x10]
	0x034EFD44 CBZ X8, 0x34EFE68
	0x034EFD48 LDRB W8, [X8 + 0x8D]
	0x034EFD4C CBZ W8, 0x34EFE40
	0x034EFD50 LDR X19, [X0 + 0x188]
	0x034EFD54 MOV X20, X0
	0x034EFD58 STRB W31, [X31 + 0xC]
	0x034EFD5C ADD X1, X31, 0xC
	0x034EFD60 MOV X0, X19
	0x034EFD64 MOV X2, X31
	0x034EFD68 BL 0x33DE64C
	0x034EFD6C LDR X11, [X20 + 0x188]
	0x034EFD70 CBZ X11, 0x34EFE74
	0x034EFD74 LDR W8, [X11 + 0x18]
	0x034EFD78 UBFM X9, X8, 0x20, 0x1F
	0x034EFD7C CMP X9, 0x1
	0x034EFD80 B.LT 0x34EFE24
	0x034EFD84 MOV X9, X31
	0x034EFD88 SXTW X10, W8
	0x034EFD8C ADD X11, X11, 0x20
	0x034EFD90 CMP X9, X8
	0x034EFD94 B.CS 0x34EFE5C
	0x034EFD98 LDR X13, [X20 + 0x10]
	0x034EFD9C CBZ X13, 0x34EFE50
	0x034EFDA0 LDR X14, [X13 + 0x90]
	0x034EFDA4 CBZ X14, 0x34EFE54
	0x034EFDA8 LDR W12, [X14 + 0x18]
	0x034EFDAC SDIV W15, W9, W12
	0x034EFDB0 MSUB W15, W15, W12, W9
	0x034EFDB4 CMP W15, W12
	0x034EFDB8 B.CS 0x34EFE58
	0x034EFDBC ADD X14, X14, W15, SXTW
	0x034EFDC0 LDR X12, [X11, X9, LSL #3]
	0x034EFDC4 LDRB W15, [X13 + 0x98]
	0x034EFDC8 LDRB W13, [X14 + 0x20]
	0x034EFDCC CBZ W15, 0x34EFE04
	0x034EFDD0 CBZ X12, 0x34EFE60
	0x034EFDD4 LDR W14, [X12 + 0x48]
	0x034EFDD8 LDR W15, [X12 + 0x50]
	0x034EFDDC LDR W16, [X12 + 0x68]
	0x034EFDE0 LDR W17, [X12 + 0x58]
	0x034EFDE4 ADD W14, W14, W13
	0x034EFDE8 ADD W15, W15, W13
	0x034EFDEC ADD W16, W16, W13
	0x034EFDF0 ADD W13, W17, W13
	0x034EFDF4 STR W14, [X12 + 0x48]
	0x034EFDF8 STR W15, [X12 + 0x50]
	0x034EFDFC STR W16, [X12 + 0x68]
	0x034EFE00 B 0x34EFE14
	0x034EFE04 CBZ X12, 0x34EFE64
	0x034EFE08 STR W13, [X12 + 0x48]
	0x034EFE0C STR W13, [X12 + 0x50]
	0x034EFE10 STR W13, [X12 + 0x68]
	0x034EFE14 ADD X9, X9, 0x1
	0x034EFE18 CMP X9, X10
	0x034EFE1C STR W13, [X12 + 0x58]
	0x034EFE20 B.LT 0x34EFD90
	0x034EFE24 MOV X20, X31
	0x034EFE28 LDRB W8, [X31 + 0xC]
	0x034EFE2C CBZ W8, 0x34EFE3C
	0x034EFE30 MOV X0, X19
	0x034EFE34 MOV X1, X31
	0x034EFE38 BL 0x33E14E4
	0x034EFE3C CBNZ X20, 0x34EFE6C
	0x034EFE40 LDP X20, X19, [X31 + 0x20]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X19, 0xEF1000
	009 Move W8, [X19+2588]
	010 Move X21, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0xC45000
	016 Move X0, [X0+1832]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X19+2588], W8
	020 Move X19, [X21+392]
	021 Move [X31+12], W31
	022 Add X1, X31, 12
	023 Move X0, X19
	024 Move X2, X31
	025 Call Monitor.Enter, X0, X1
	026 Move X8, [X21+392]
	027 Compare X8, 0
	028 JumpIfEqual {82}
	029 Move X23, 0xC45000
	030 Move X23, [X23+1832]
	031 Move X22, X31
	032 Move W20, W31
	033 Move W9, [X8+24]
	034 NotImplemented "Instruction CMP not yet implemented."
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Add X8, X8, X22
	037 Move X24, [X8+32]
	038 Compare X24, 0
	039 JumpIfEqual {78}
	040 Move X0, [X24+24]
	041 Compare X0, 0
	042 JumpIfEqual {76}
	043 Move X1, [X23]
	044 Call NonAllocDictionary`2<Int32, Object>.get_Count, X0
	045 Move W8, W0
	046 Move X0, [X24+32]
	047 Add W20, W8, W20
	048 Compare X0, 0
	049 JumpIfEqual {77}
	050 Move X1, [X23]
	051 Call NonAllocDictionary`2<Int32, Object>.get_Count, X0
	052 Move X8, [X21+392]
	053 Add W20, W0, W20
	054 Add X22, X22, 1
	055 Compare X8, 0
	056 JumpIfNotEqual {33}
	057 Call 0x1C17F20
	058 Move X22, X31
	059 Move W8, [X31+12]
	060 Compare W8, 0
	061 JumpIfEqual {65}
	062 Move X0, X19
	063 Move X1, X31
	064 Call Monitor.Exit, X0
	065 Compare X22, 0
	066 JumpIfNotEqual {80}
	067 Move W0, W20
	068 Move X20, [X31+48]
	069 Move X19, [X31+56]
	070 Move X22, [X31+32]
	071 Move X21, [X31+40]
	072 Move X24, [X31+16]
	073 Move X23, [X31+24]
	074 Move X30, [X31+64]
	075 Return X0
	076 Call 0x1C17F20
	077 Call 0x1C17F20
	078 Call 0x1C17F20
	079 Call 0x1C17F28
	080 Move X0, X22
	081 Call 0x1C17F18
	082 Move W20, W31
	083 Move X21, X0
	084 Move W20, W31
	085 Move X21, X0
	086 NotImplemented "Instruction CMP not yet implemented."
	087 Move X0, X21
	088 Call 0x3EB2AD0
	089 Move X22, [X0]
	090 Call 0x3EB2AE0
	091 Move X22, X31
	092 Move X21, X0
	093 Move W8, [X31+12]
	094 Compare W8, 0
	095 JumpIfEqual {99}
	096 Move X0, X19
	097 Move X1, X31
	098 Call Monitor.Exit, X0
	099 Compare X22, 0
	100 JumpIfNotEqual {103}
	101 Move X0, X21
	102 Call 0x1D2D690
	103 Move X0, X22
	104 Call 0x1C17F18
	105 Call 0x1991590

Method: System.Int32 get_QueuedOutgoingCommandsCount()

Disassembly:
	0x034EFE44 LDP X30, X21, [X31 + 0x10]
	0x034EFE48 ADD X31, X31, 0x30
	0x034EFE4C RET
	0x034EFE50 BL 0x1C16F20
	0x034EFE54 BL 0x1C16F20
	0x034EFE58 BL 0x1C16F28
	0x034EFE5C BL 0x1C16F28
	0x034EFE60 BL 0x1C16F20
	0x034EFE64 BL 0x1C16F20
	0x034EFE68 BL 0x1C16F20
	0x034EFE6C MOV X0, X20
	0x034EFE70 BL 0x1C16F18
	0x034EFE74 BL 0x1C16F20
	0x034EFE78 B 0x34EFE94
	0x034EFE7C B 0x34EFE94
	0x034EFE80 B 0x34EFE94
	0x034EFE84 B 0x34EFE94
	0x034EFE88 B 0x34EFE94
	0x034EFE8C B 0x34EFE94
	0x034EFE90 B 0x34EFE94
	0x034EFE94 MOV X21, X0
	0x034EFE98 CMP W1, 0x1
	0x034EFE9C B.NE 0x34EFEB4
	0x034EFEA0 MOV X0, X21
	0x034EFEA4 BL 0x3EB1AD0
	0x034EFEA8 LDR X20, [X0]
	0x034EFEAC BL 0x3EB1AE0
	0x034EFEB0 B 0x34EFE28
	0x034EFEB4 MOV X20, X31
	0x034EFEB8 B 0x34EFEC0
	0x034EFEBC MOV X21, X0
	0x034EFEC0 LDRB W8, [X31 + 0xC]
	0x034EFEC4 CBZ W8, 0x34EFED4
	0x034EFEC8 MOV X0, X19
	0x034EFECC MOV X1, X31
	0x034EFED0 BL 0x33E14E4
	0x034EFED4 CBNZ X20, 0x34EFEE0
	0x034EFED8 MOV X0, X21
	0x034EFEDC BL 0x1D2C690
	0x034EFEE0 MOV X0, X20
	0x034EFEE4 BL 0x1C16F18
	0x034EFEE8 BL 0x1990590
	0x034EFEEC STR X30, [X31 - 0x10]!
	0x034EFEF0 LDR X8, [X0 + 0x188]
	0x034EFEF4 CBZ X8, 0x34EFF38
	0x034EFEF8 ORN W9, W31, W1, 0x0
	0x034EFEFC ANDS W31, W9, 0xFF
	0x034EFF00 B.EQ 0x34EFF18
	0x034EFF04 LDR W9, [X8 + 0x18]
	0x034EFF08 CMP W9, W1, UXTB
	0x034EFF0C B.LS 0x34EFF3C
	0x034EFF10 AND X9, X1, 0xFF
	0x034EFF14 B 0x34EFF28
	0x034EFF18 LDR X9, [X8 + 0x18]
	0x034EFF1C CBZ W9, 0x34EFF3C
	0x034EFF20 SUB W9, W9, 0x1
	0x034EFF24 SXTW X9, W9
	0x034EFF28 ADD X8, X8, X9, 0x3, LSL
	0x034EFF2C LDR X0, [X8 + 0x20]
	0x034EFF30 LDR X30, [X31], #0x10
	0x034EFF34 RET
	0x034EFF38 BL 0x1C16F20
	0x034EFF3C BL 0x1C16F28
	0x034EFF40 STR X30, [X31 - 0x20]!
	0x034EFF44 STP X20, X19, [X31 + 0x10]
	0x034EFF48 MOV X19, X0
	0x034EFF4C LDR X0, [X0 + 0x28]
	0x034EFF50 CBZ X0, 0x34EFFBC
	0x034EFF54 LDR X8, [X0]
	0x034EFF58 LDP X9, X1, [X8 + 0x178]
	0x034EFF5C BLR X9
	0x034EFF60 MOV W20, W0
	0x034EFF64 TBZ X0, 0x0, 0x34EFFAC
	0x034EFF68 LDR X0, [X19 + 0x10]
	0x034EFF6C CBZ X0, 0x34EFFBC
	0x034EFF70 MOV X1, X31
	0x034EFF74 BL 0x350257C
	0x034EFF78 TBZ X0, 0x0, 0x34EFFA4
	0x034EFF7C LDR X8, [X19 + 0x10]
	0x034EFF80 CBZ X8, 0x34EFFBC
	0x034EFF84 LDR X8, [X8 + 0xA8]
	0x034EFF88 CBZ X8, 0x34EFFBC
	0x034EFF8C LDR W9, [X8 + 0x38]
	0x034EFF90 LDR W10, [X8 + 0x20]
	0x034EFF94 ADD W9, W9, 0x2C
	0x034EFF98 ADD W10, W10, 0x1
	0x034EFF9C STR W9, [X8 + 0x38]
	0x034EFFA0 STR W10, [X8 + 0x20]
	0x034EFFA4 MOVZ W8, 0x1
	0x034EFFA8 STRB W8, [X19 + 0x40]
	0x034EFFAC AND W0, W20, 0x1
	0x034EFFB0 LDP X20, X19, [X31 + 0x10]
	0x034EFFB4 LDR X30, [X31], #0x20
	0x034EFFB8 RET
	0x034EFFBC BL 0x1C16F20
	0x034EFFC0 STR X30, [X31 - 0x10]!
	0x034EFFC4 LDR X0, [X0 + 0x10]
	0x034EFFC8 CBZ X0, 0x34EFFD8
	0x034EFFCC MOV X1, X31
	0x034EFFD0 LDR X30, [X31], #0x10
	0x034EFFD4 B 0x350257C
	0x034EFFD8 BL 0x1C16F20
	0x034EFFDC STR X30, [X31 - 0x10]!
	0x034EFFE0 LDR X8, [X0 + 0x10]
	0x034EFFE4 CBZ X8, 0x34EFFF4
	0x034EFFE8 LDR X0, [X8 + 0xA8]
	0x034EFFEC LDR X30, [X31], #0x10
	0x034EFFF0 RET
	0x034EFFF4 BL 0x1C16F20
	0x034EFFF8 STP X30, X19, [X31 - 0x10]!
	0x034EFFFC MOV X19, X0
	0x034F0000 LDR X0, [X0 + 0x120]
	0x034F0004 CBZ X0, 0x34F002C
	0x034F0008 MOVZ W2, 0x2
	0x034F000C MOVZ W4, 0xFF
	0x034F0010 MOV X1, X19
	0x034F0014 MOV X3, X31
	0x034F0018 BL 0x34F0030
	0x034F001C MOV X1, X0
	0x034F0020 MOV X0, X19
	0x034F0024 LDP X30, X19, [X31], #0x10
	0x034F0028 B 0x34F01EC
	0x034F002C BL 0x1C16F20
	0x034F0030 SUB X31, X31, 0x50
	0x034F0034 STP X30, X25, [X31 + 0x10]
	0x034F0038 STP X24, X23, [X31 + 0x20]
	0x034F003C STP X22, X21, [X31 + 0x30]
	0x034F0040 STP X20, X19, [X31 + 0x40]
	0x034F0044 ADRP X19, 0xEEF000
	0x034F0048 LDRB W8, [X19 + 0xA4A]
	0x034F004C MOV W21, W4
	0x034F0050 MOV X22, X3
	0x034F0054 MOV W23, W2
	0x034F0058 MOV X24, X1
	0x034F005C MOV X25, X0
	0x034F0060 TBNZ X8, 0x0, 0x34F0090
	0x034F0064 ADRP X0, 0xC43000

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X19, 0xEF1000
	011 Move W8, [X19+2589]
	012 Move X21, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0xC45000
	018 Move X0, [X0+1840]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X19+2589], W8
	022 Move [X31+8], W31
	023 Move X19, [X21+392]
	024 Move [X31+12], W31
	025 Add X1, X31, 12
	026 Move X0, X19
	027 Move X2, X31
	028 Call Monitor.Enter, X0, X1
	029 Move X8, [X21+392]
	030 Compare X8, 0
	031 JumpIfEqual {116}
	032 Move X25, X31
	033 Move W20, W31
	034 Move W9, [X8+24]
	035 NotImplemented "Instruction CMP not yet implemented."
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Add X8, X8, X25
	038 Move X22, [X8+32]
	039 Move [X31+8], W31
	040 Add X1, X31, 8
	041 Move X0, X22
	042 Move X2, X31
	043 Call Monitor.Enter, X0, X1
	044 Compare X22, 0
	045 JumpIfEqual {69}
	046 Move X8, [X22+56]
	047 Compare X8, 0
	048 JumpIfEqual {70}
	049 Move W9, [X8+32]
	050 Move X8, [X22+64]
	051 Add W20, W9, W20
	052 Compare X8, 0
	053 JumpIfEqual {71}
	054 Move W8, [X8+32]
	055 Move X24, X31
	056 Add W20, W8, W20
	057 Move W8, [X31+8]
	058 Compare W8, 0
	059 JumpIfEqual {63}
	060 Move X0, X22
	061 Move X1, X31
	062 Call Monitor.Exit, X0
	063 Compare X24, 0
	064 JumpIfNotEqual {98}
	065 Move X8, [X21+392]
	066 Add X25, X25, 1
	067 Compare X8, 0
	068 JumpIfNotEqual {34}
	069 Call 0x1C17F20
	070 Call 0x1C17F20
	071 Call 0x1C17F20
	072 Move X26, X0
	073 NotImplemented "Instruction CMP not yet implemented."
	074 Move X0, X26
	075 Call 0x3EB2AD0
	076 Move X24, [X0]
	077 Call 0x3EB2AE0
	078 Move X21, X31
	079 Move W8, [X31+12]
	080 Compare W8, 0
	081 JumpIfEqual {85}
	082 Move X0, X19
	083 Move X1, X31
	084 Call Monitor.Exit, X0
	085 Compare X21, 0
	086 JumpIfNotEqual {114}
	087 Move W0, W20
	088 Move X20, [X31+64]
	089 Move X19, [X31+72]
	090 Move X22, [X31+48]
	091 Move X21, [X31+56]
	092 Move X24, [X31+32]
	093 Move X23, [X31+40]
	094 Move X26, [X31+16]
	095 Move X25, [X31+24]
	096 Move X30, [X31+80]
	097 Return X0
	098 Move X0, X24
	099 Call 0x1C17F18
	100 Call 0x1C17F28
	101 Move X23, X1
	102 Move X24, X31
	103 Move W8, [X31+8]
	104 Compare W8, 0
	105 JumpIfEqual {109}
	106 Move X0, X22
	107 Move X1, X31
	108 Call Monitor.Exit, X0
	109 Move X1, X23
	110 Compare X24, 0
	111 JumpIfEqual {123}
	112 Move X0, X24
	113 Call 0x1C17F18
	114 Move X0, X21
	115 Call 0x1C17F18
	116 Move W20, W31
	117 Call 0x1C17F20
	118 Move X23, X1
	119 Move X26, X0
	120 Move X26, X0
	121 Move W20, W31
	122 Move X26, X0
	123 NotImplemented "Instruction CMP not yet implemented."
	124 Move X0, X26
	125 Call 0x3EB2AD0
	126 Move X21, [X0]
	127 Call 0x3EB2AE0
	128 Move X21, X31
	129 Move X26, X0
	130 Move W8, [X31+12]
	131 Compare W8, 0
	132 JumpIfEqual {136}
	133 Move X0, X19
	134 Move X1, X31
	135 Call Monitor.Exit, X0
	136 Compare X21, 0
	137 JumpIfNotEqual {140}
	138 Move X0, X26
	139 Call 0x1D2D690
	140 Move X0, X21
	141 Call 0x1C17F18
	142 Call 0x1991590

Method: System.Int32 get_SentReliableCommandsCount()

Disassembly:
	0x034F0068 LDR X0, [X0 + 0x7E0]
	0x034F006C BL 0x1C16CF4
	0x034F0070 ADRP X0, 0xC43000
	0x034F0074 LDR X0, [X0 + 0x7E8]
	0x034F0078 BL 0x1C16CF4
	0x034F007C ADRP X0, 0xC43000
	0x034F0080 LDR X0, [X0 + 0x7F0]
	0x034F0084 BL 0x1C16CF4
	0x034F0088 MOVZ W8, 0x1
	0x034F008C STRB W8, [X19 + 0xA4A]
	0x034F0090 LDR X19, [X25 + 0x10]
	0x034F0094 STRB W31, [X31 + 0xC]
	0x034F0098 ADD X1, X31, 0xC
	0x034F009C MOV X0, X19
	0x034F00A0 MOV X2, X31
	0x034F00A4 BL 0x33DE64C
	0x034F00A8 LDR X8, [X25 + 0x10]
	0x034F00AC CBZ X8, 0x34F0174

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xEF0000
	005 Move W8, [X20+2590]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xC44000
	012 Move X0, [X0+1848]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2590], W8
	016 Move X8, [X19+296]
	017 Compare X8, 0
	018 JumpIfEqual {24}
	019 Move W0, [X8+24]
	020 Move X20, [X31+16]
	021 Move X19, [X31+24]
	022 Move X30, [X31+32]
	023 Return X0
	024 Call 0x1C17F20

Method: System.Boolean get_sendWindowUpdateRequired()

Disassembly:
	0x034F00B0 LDR W9, [X8 + 0x18]
	0x034F00B4 CBZ W9, 0x34F00F4
	0x034F00B8 ADRP X9, 0xC43000
	0x034F00BC LDR X9, [X9 + 0x7E8]
	0x034F00C0 LDR X1, [X9]
	0x034F00C4 MOV X0, X8
	0x034F00C8 BL 0x26022C0
	0x034F00CC MOV X20, X0
	0x034F00D0 CBZ X0, 0x34F0178
	0x034F00D4 MOV X0, X20

ISIL:
	001 Move [X31-16], X30
	002 Add X0, X0, 304
	003 Move W1, 1
	004 Move W2, 1
	005 Move X3, X31
	006 Call Interlocked.CompareExchange, X0, X1, X2
	007 NotImplemented "Instruction CMP not yet implemented."
	008 NotImplemented "Instruction CSET not yet implemented."
	009 Move X30, [X31+16]
	010 Return X0

Method: System.Void set_sendWindowUpdateRequired(System.Boolean value)

Disassembly:
	0x034F00D8 MOV X1, X24
	0x034F00DC MOV W2, W23
	0x034F00E0 MOV X3, X22
	0x034F00E4 MOV W4, W21
	0x034F00E8 BL 0x34FAA08
	0x034F00EC MOV X22, X31
	0x034F00F0 B 0x34F0138
	0x034F00F4 ADRP X8, 0xC43000
	0x034F00F8 LDR X8, [X8 + 0x7E0]
	0x034F00FC LDR X0, [X8]

ISIL:
	001 Add X0, X0, 304
	002 Move TEMP, X1
	003 And TEMP, TEMP, 1
	004 Compare TEMP, 1
	005 JumpIfNotEqual {11}
	006 Move W1, 1
	007 Move W2, W31
	008 Move X3, X31
	009 Call Interlocked.CompareExchange, X0, X1, X2
	010 Return 
	011 Move W2, 1
	012 Move W1, W31
	013 Move X3, X31
	014 Call Interlocked.CompareExchange, X0, X1, X2
	015 Return 

Method: System.Void .ctor()

Disassembly:
	0x034F0100 BL 0x1C16F10
	0x034F0104 MOV X20, X0
	0x034F0108 MOVZ W8, 0x4
	0x034F010C STRB W8, [X0 + 0x20]
	0x034F0110 MOV X1, X31
	0x034F0114 BL 0x33BDD8C
	0x034F0118 MOV X0, X20
	0x034F011C MOV X1, X24
	0x034F0120 MOV W2, W23
	0x034F0124 MOV X3, X22
	0x034F0128 MOV W4, W21
	0x034F012C BL 0x34FAA08
	0x034F0130 MOV X22, X31
	0x034F0134 STR X25, [X20 + 0x60]
	0x034F0138 LDRB W8, [X31 + 0xC]
	0x034F013C CBZ W8, 0x34F014C
	0x034F0140 MOV X0, X19
	0x034F0144 MOV X1, X31
	0x034F0148 BL 0x33E14E4
	0x034F014C CBNZ X22, 0x34F016C
	0x034F0150 MOV X0, X20
	0x034F0154 LDP X20, X19, [X31 + 0x40]
	0x034F0158 LDP X22, X21, [X31 + 0x30]
	0x034F015C LDP X24, X23, [X31 + 0x20]
	0x034F0160 LDP X30, X25, [X31 + 0x10]
	0x034F0164 ADD X31, X31, 0x50
	0x034F0168 RET
	0x034F016C MOV X0, X22
	0x034F0170 BL 0x1C16F18
	0x034F0174 BL 0x1C16F20
	0x034F0178 BL 0x1C16F20
	0x034F017C B 0x34F0188
	0x034F0180 B 0x34F0188
	0x034F0184 B 0x34F0188
	0x034F0188 MOV X21, X0
	0x034F018C MOV X20, X31
	0x034F0190 B 0x34F0198
	0x034F0194 MOV X21, X0
	0x034F0198 CMP W1, 0x1
	0x034F019C B.NE 0x34F01B4
	0x034F01A0 MOV X0, X21
	0x034F01A4 BL 0x3EB1AD0
	0x034F01A8 LDR X22, [X0]
	0x034F01AC BL 0x3EB1AE0
	0x034F01B0 B 0x34F0138
	0x034F01B4 MOV X22, X31
	0x034F01B8 B 0x34F01C0
	0x034F01BC MOV X21, X0
	0x034F01C0 LDRB W8, [X31 + 0xC]
	0x034F01C4 CBZ W8, 0x34F01D4
	0x034F01C8 MOV X0, X19
	0x034F01CC MOV X1, X31
	0x034F01D0 BL 0x33E14E4
	0x034F01D4 CBNZ X22, 0x34F01E0
	0x034F01D8 MOV X0, X21
	0x034F01DC BL 0x1D2C690
	0x034F01E0 MOV X0, X22
	0x034F01E4 BL 0x1C16F18
	0x034F01E8 BL 0x1990590
	0x034F01EC SUB X31, X31, 0x30
	0x034F01F0 STP X30, X21, [X31 + 0x10]
	0x034F01F4 STP X20, X19, [X31 + 0x20]
	0x034F01F8 ADRP X21, 0xEEF000
	0x034F01FC LDRB W8, [X21 + 0xA31]
	0x034F0200 MOV X20, X1
	0x034F0204 MOV X19, X0
	0x034F0208 TBNZ X8, 0x0, 0x34F0220
	0x034F020C ADRP X0, 0xC43000
	0x034F0210 LDR X0, [X0 + 0x720]
	0x034F0214 BL 0x1C16CF4
	0x034F0218 MOVZ W8, 0x1
	0x034F021C STRB W8, [X21 + 0xA31]
	0x034F0220 CBZ X20, 0x34F02CC
	0x034F0224 LDRB W1, [X20 + 0x12]
	0x034F0228 MOV X0, X19
	0x034F022C BL 0x34EFEEC
	0x034F0230 MOV X19, X0
	0x034F0234 STRB W31, [X31 + 0xC]
	0x034F0238 ADD X1, X31, 0xC
	0x034F023C MOV X2, X31
	0x034F0240 BL 0x33DE64C
	0x034F0244 LDR W8, [X20 + 0x14]
	0x034F0248 CBZ W8, 0x34F0254
	0x034F024C CBNZ X19, 0x34F0284
	0x034F0250 BL 0x1C16F20
	0x034F0254 LDRB W8, [X20 + 0x10]
	0x034F0258 TBNZ X8, 0x1, 0x34F0270
	0x034F025C CBZ X19, 0x34F02DC
	0x034F0260 LDR W8, [X19 + 0x50]
	0x034F0264 ADD W8, W8, 0x1
	0x034F0268 STR W8, [X19 + 0x50]
	0x034F026C B 0x34F0280
	0x034F0270 CBZ X19, 0x34F02E0
	0x034F0274 LDR W8, [X19 + 0x58]
	0x034F0278 ADD W8, W8, 0x1
	0x034F027C STR W8, [X19 + 0x58]
	0x034F0280 STR W8, [X20 + 0x14]
	0x034F0284 LDR X0, [X19 + 0x38]
	0x034F0288 CBZ X0, 0x34F02D8
	0x034F028C ADRP X8, 0xC43000
	0x034F0290 LDR X8, [X8 + 0x720]
	0x034F0294 LDR X2, [X8]
	0x034F0298 MOV X1, X20
	0x034F029C BL 0x24F1750
	0x034F02A0 MOV X20, X31
	0x034F02A4 LDRB W8, [X31 + 0xC]
	0x034F02A8 CBZ W8, 0x34F02B8
	0x034F02AC MOV X0, X19
	0x034F02B0 MOV X1, X31
	0x034F02B4 BL 0x33E14E4
	0x034F02B8 CBNZ X20, 0x34F02D0
	0x034F02BC LDP X20, X19, [X31 + 0x20]
	0x034F02C0 LDP X30, X21, [X31 + 0x10]
	0x034F02C4 ADD X31, X31, 0x30
	0x034F02C8 RET
	0x034F02CC BL 0x1C16F20
	0x034F02D0 MOV X0, X20
	0x034F02D4 BL 0x1C16F18
	0x034F02D8 BL 0x1C16F20
	0x034F02DC BL 0x1C16F20
	0x034F02E0 BL 0x1C16F20
	0x034F02E4 B 0x34F02F4
	0x034F02E8 B 0x34F02F4
	0x034F02EC B 0x34F02F4
	0x034F02F0 B 0x34F02F4
	0x034F02F4 MOV X21, X0
	0x034F02F8 CMP W1, 0x1
	0x034F02FC B.NE 0x34F0314
	0x034F0300 MOV X0, X21
	0x034F0304 BL 0x3EB1AD0
	0x034F0308 LDR X20, [X0]
	0x034F030C BL 0x3EB1AE0
	0x034F0310 B 0x34F02A4
	0x034F0314 MOV X20, X31
	0x034F0318 B 0x34F0320
	0x034F031C MOV X21, X0
	0x034F0320 LDRB W8, [X31 + 0xC]
	0x034F0324 CBZ W8, 0x34F0334
	0x034F0328 MOV X0, X19
	0x034F032C MOV X1, X31
	0x034F0330 BL 0x33E14E4

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X29, 0xEF0000
	014 Move X20, 0xC44000
	015 Move X23, 0xC44000
	016 Move X22, 0xC44000
	017 Move X21, 0xC05000
	018 Move X28, 0xC44000
	019 Move X27, 0xC08000
	020 Move X26, 0xC08000
	021 Move X25, 0xC44000
	022 Move X24, 0xC44000
	023 Move X20, [X20+1856]
	024 Move X23, [X23+1864]
	025 Move X22, [X22+1872]
	026 Move X21, [X21+3672]
	027 Move X28, [X28+1880]
	028 Move X27, [X27+1960]
	029 Move X26, [X26+1952]
	030 Move W8, [X29+2591]
	031 Move X25, [X25+1744]
	032 Move X24, [X24+1752]
	033 Move X19, X0
	034 Move TEMP, X8
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfEqual {79}
	038 Move X0, 0xC44000
	039 Move X0, [X0+1880]
	040 Call 0x1C17CF4
	041 Move X0, 0xC44000
	042 Move X0, [X0+1888]
	043 Call 0x1C17CF4
	044 Move X0, 0xC44000
	045 Move X0, [X0+1896]
	046 Call 0x1C17CF4
	047 Move X0, 0xC44000
	048 Move X0, [X0+1904]
	049 Call 0x1C17CF4
	050 Move X0, 0xC05000
	051 Move X0, [X0+3672]
	052 Call 0x1C17CF4
	053 Move X0, 0xC44000
	054 Move X0, [X0+1872]
	055 Call 0x1C17CF4
	056 Move X0, 0xC44000
	057 Move X0, [X0+1864]
	058 Call 0x1C17CF4
	059 Move X0, 0xC44000
	060 Move X0, [X0+1856]
	061 Call 0x1C17CF4
	062 Move X0, 0xC44000
	063 Move X0, [X0+1912]
	064 Call 0x1C17CF4
	065 Move X0, 0xC08000
	066 Move X0, [X0+1952]
	067 Call 0x1C17CF4
	068 Move X0, 0xC44000
	069 Move X0, [X0+1752]
	070 Call 0x1C17CF4
	071 Move X0, 0xC44000
	072 Move X0, [X0+1744]
	073 Call 0x1C17CF4
	074 Move X0, 0xC08000
	075 Move X0, [X0+1960]
	076 Call 0x1C17CF4
	077 Move W8, 1
	078 Move [X29+2591], W8
	079 Move X0, [X20]
	080 Move X29, 0xC44000
	081 Move X29, [X29+1888]
	082 Call 0x1C17F10
	083 Move X20, X0
	084 Call NCommandPool..ctor, X0
	085 Move [X19+288], X20
	086 Move X0, [X23]
	087 Call 0x1C17F10
	088 Move X1, [X22]
	089 Move X20, X0
	090 Call List`1<Object>..ctor, X0
	091 Move [X19+296], X20
	092 Move [X19+304], W31
	093 Move X0, [X21]
	094 Move W1, 4
	095 Call 0x1C17D6C
	096 Move W8, 100
	097 Move [X19+320], X0
	098 Move [X19+368], W8
	099 Move X0, [X28]
	100 Move W1, W31
	101 Call 0x1C17D6C
	102 Move [X19+392], X0
	103 Move X0, [X27]
	104 Call 0x1C17F10
	105 Move X1, [X26]
	106 Move X20, X0
	107 Call Queue`1<Int32>..ctor, X0
	108 Move [X19+400], X20
	109 Move [X19+408], X31
	110 Move [X19+416], W31
	111 Move X0, [X25]
	112 Call 0x1C17F10
	113 Move X1, [X24]
	114 Move X20, X0
	115 Call Queue`1<Object>..ctor, X0
	116 Move [X19+424], X20
	117 Move X8, 0xC44000
	118 Move X8, [X8+1904]
	119 Move X0, [X8]
	120 Call 0x1C17F10
	121 Move X8, 0xC44000
	122 Move X8, [X8+1896]
	123 Move X20, X0
	124 Move X1, [X8]
	125 Call HashSet`1<Byte>..ctor, X0
	126 Move [X19+432], X20
	127 Move X8, 0xC44000
	128 Move X8, [X8+1912]
	129 Move X0, [X8]
	130 Move W8, [X0+224]
	131 Compare W8, 0
	132 JumpIfNotEqual {134}
	133 Call 0x1C17DFC
	134 Move X0, X19
	135 Call PeerBase..ctor, X0
	136 Move W8, 12
	137 Move [X19+280], W8
	138 Move X0, [X29]
	139 Move W8, [X0+224]
	140 Compare W8, 0
	141 JumpIfNotEqual {144}
	142 Call 0x1C17DFC
	143 Move X0, [X29]
	144 Move X8, [X0+184]
	145 Move X22, [X31+64]
	146 Move X21, [X31+72]
	147 Move X24, [X31+48]
	148 Move X23, [X31+56]
	149 Move X26, [X31+32]
	150 Move X25, [X31+40]
	151 Move X8, [X8]
	152 Move X28, [X31+16]
	153 Move X27, [X31+24]
	154 Move [X19+232], X8
	155 Move X20, [X31+80]
	156 Move X19, [X31+88]
	157 Move X29, [X31+96]
	158 Move X30, [X31+104]
	159 Return 

Method: System.Boolean IsTransportEncrypted()

Disassembly:
	0x034F0568 MOV X0, X20
	0x034F056C MOV X2, X31

ISIL:
	001 Move W0, [X0+388]
	002 Return X0

Method: System.Void Reset()

Disassembly:
	0x034F0570 BL 0x33DE64C
	0x034F0574 MOV X21, X31
	0x034F0578 STRB W31, [X19 + 0x184]
	0x034F057C LDRB W8, [X31 + 0xC]
	0x034F0580 CBZ W8, 0x34F0590
	0x034F0584 MOV X0, X20
	0x034F0588 MOV X1, X31
	0x034F058C BL 0x33E14E4
	0x034F0590 CBNZ X21, 0x34F05B4
	0x034F0594 LDP X20, X19, [X31 + 0x30]
	0x034F0598 LDP X22, X21, [X31 + 0x20]
	0x034F059C LDR X30, [X31 + 0x10]
	0x034F05A0 ADD X31, X31, 0x40
	0x034F05A4 RET
	0x034F05A8 BL 0x1C16F20
	0x034F05AC BL 0x1C16F28
	0x034F05B0 BL 0x1C16F20
	0x034F05B4 MOV X0, X21
	0x034F05B8 BL 0x1C16F18
	0x034F05BC BL 0x1C16F20
	0x034F05C0 BL 0x1C16F20
	0x034F05C4 CMP W1, 0x1
	0x034F05C8 MOV X22, X0
	0x034F05CC B.NE 0x34F05E4
	0x034F05D0 MOV X0, X22
	0x034F05D4 BL 0x3EB1AD0
	0x034F05D8 LDR X21, [X0]
	0x034F05DC BL 0x3EB1AE0
	0x034F05E0 B 0x34F057C
	0x034F05E4 MOV X21, X31
	0x034F05E8 B 0x34F05F0
	0x034F05EC MOV X22, X0
	0x034F05F0 LDRB W8, [X31 + 0xC]
	0x034F05F4 CBZ W8, 0x34F0604
	0x034F05F8 MOV X0, X20
	0x034F05FC MOV X1, X31
	0x034F0600 BL 0x33E14E4
	0x034F0604 CBZ X21, 0x34F06BC
	0x034F0608 MOV X0, X21
	0x034F060C BL 0x1C16F18
	0x034F0610 B 0x34F061C
	0x034F0614 B 0x34F0674
	0x034F0618 B 0x34F0674
	0x034F061C MOV X22, X0
	0x034F0620 CMP W1, 0x1
	0x034F0624 B.NE 0x34F0640
	0x034F0628 MOV X0, X22
	0x034F062C BL 0x3EB1AD0
	0x034F0630 LDR X21, [X0]
	0x034F0634 BL 0x3EB1AE0
	0x034F0638 MOV W22, W31
	0x034F063C B 0x34F03EC
	0x034F0640 MOV X21, X31
	0x034F0644 B 0x34F064C
	0x034F0648 MOV X22, X0
	0x034F064C LDRB W8, [X31 + 0x1C]
	0x034F0650 CBZ W8, 0x34F0660
	0x034F0654 MOV X0, X20
	0x034F0658 MOV X1, X31
	0x034F065C BL 0x33E14E4
	0x034F0660 CBZ X21, 0x34F06BC
	0x034F0664 MOV X0, X21
	0x034F0668 BL 0x1C16F18
	0x034F066C B 0x34F0674
	0x034F0670 B 0x34F0674
	0x034F0674 MOV X22, X0
	0x034F0678 CMP W1, 0x1
	0x034F067C B.NE 0x34F0698
	0x034F0680 MOV X0, X22
	0x034F0684 BL 0x3EB1AD0
	0x034F0688 LDR X21, [X0]
	0x034F068C BL 0x3EB1AE0
	0x034F0690 MOV W22, W31
	0x034F0694 B 0x34F0470
	0x034F0698 MOV X21, X31
	0x034F069C B 0x34F06A4
	0x034F06A0 MOV X22, X0
	0x034F06A4 LDRB W8, [X31 + 0x18]
	0x034F06A8 CBZ W8, 0x34F06B8
	0x034F06AC MOV X0, X20
	0x034F06B0 MOV X1, X31
	0x034F06B4 BL 0x33E14E4
	0x034F06B8 CBNZ X21, 0x34F06C4
	0x034F06BC MOV X0, X22
	0x034F06C0 BL 0x1D2C690
	0x034F06C4 MOV X0, X21
	0x034F06C8 BL 0x1C16F18
	0x034F06CC BL 0x1990590
	0x034F06D0 LDR X0, [X0 + 0x110]
	0x034F06D4 RET
	0x034F06D8 LDRB W0, [X0 + 0x10]
	0x034F06DC RET
	0x034F06E0 SUB X31, X31, 0xD0
	0x034F06E4 STP X30, X25, [X31 + 0x90]
	0x034F06E8 STP X24, X23, [X31 + 0xA0]
	0x034F06EC STP X22, X21, [X31 + 0xB0]
	0x034F06F0 STP X20, X19, [X31 + 0xC0]
	0x034F06F4 ADRP X19, 0xEEF000
	0x034F06F8 LDRB W8, [X19 + 0xA54]
	0x034F06FC MOV W21, W1
	0x034F0700 MOV X20, X0
	0x034F0704 TBNZ X8, 0x0, 0x34F077C
	0x034F0708 ADRP X0, 0xC43000
	0x034F070C LDR X0, [X0 + 0x7F8]
	0x034F0710 BL 0x1C16CF4
	0x034F0714 ADRP X0, 0xC43000
	0x034F0718 LDR X0, [X0 + 0x800]
	0x034F071C BL 0x1C16CF4
	0x034F0720 ADRP X0, 0xC43000
	0x034F0724 LDR X0, [X0 + 0x808]
	0x034F0728 BL 0x1C16CF4
	0x034F072C ADRP X0, 0xC43000
	0x034F0730 LDR X0, [X0 + 0x7D0]
	0x034F0734 BL 0x1C16CF4
	0x034F0738 ADRP X0, 0xC43000
	0x034F073C LDR X0, [X0 + 0x810]
	0x034F0740 BL 0x1C16CF4
	0x034F0744 ADRP X0, 0xC43000
	0x034F0748 LDR X0, [X0 + 0x818]
	0x034F074C BL 0x1C16CF4
	0x034F0750 ADRP X0, 0xC2F000
	0x034F0754 LDR X0, [X0 + 0x1D0]
	0x034F0758 BL 0x1C16CF4
	0x034F075C ADRP X0, 0xC2F000
	0x034F0760 LDR X0, [X0 + 0x1D8]
	0x034F0764 BL 0x1C16CF4
	0x034F0768 ADRP X0, 0xC43000
	0x034F076C LDR X0, [X0 + 0x820]
	0x034F0770 BL 0x1C16CF4
	0x034F0774 MOVZ W8, 0x1
	0x034F0778 STRB W8, [X19 + 0xA54]
	0x034F077C MOVI V0.2D, 0x0
	0x034F0780 STRB W31, [X31 + 0x88]
	0x034F0784 STR X31, [X31 + 0x80]
	0x034F0788 STRB W31, [X31 + 0x5C]
	0x034F078C STR X31, [X31 + 0x50]
	0x034F0790 STP V0, V0, [X31 + 0x60]
	0x034F0794 STP V0, V0, [X31 + 0x30]
	0x034F0798 LDR X19, [X20 + 0x40]
	0x034F079C STRB W31, [X31 + 0x8C]
	0x034F07A0 ADD X1, X31, 0x8C
	0x034F07A4 MOV X0, X19
	0x034F07A8 MOV X2, X31
	0x034F07AC BL 0x33DE64C
	0x034F07B0 LDRB W8, [X20 + 0x10]
	0x034F07B4 AND W25, W21, 0x1
	0x034F07B8 CMP W8, W25
	0x034F07BC B.NE 0x34F07C8
	0x034F07C0 MOV X20, X31
	0x034F07C4 B 0x34F0B04
	0x034F07C8 TBZ X21, 0x0, 0x34F0884
	0x034F07CC LDR X8, [X20 + 0x38]
	0x034F07D0 STRB W25, [X20 + 0x10]
	0x034F07D4 CBNZ X8, 0x34F086C
	0x034F07D8 ADRP X8, 0xC2F000
	0x034F07DC LDR X22, [X20 + 0x30]
	0x034F07E0 LDR X8, [X8 + 0x1D0]
	0x034F07E4 LDR X0, [X8]
	0x034F07E8 BL 0x1C16F10
	0x034F07EC ADRP X8, 0xC43000
	0x034F07F0 LDR X8, [X8 + 0x818]
	0x034F07F4 MOV X21, X0
	0x034F07F8 LDR X2, [X8]
	0x034F07FC MOV X1, X22
	0x034F0800 MOV X3, X31
	0x034F0804 BL 0x33DD08C
	0x034F0808 ADRP X8, 0xC2F000
	0x034F080C LDR X8, [X8 + 0x1D8]
	0x034F0810 LDR X0, [X8]
	0x034F0814 BL 0x1C16F10
	0x034F0818 MOV X22, X0
	0x034F081C MOV X1, X21
	0x034F0820 MOV X2, X31
	0x034F0824 BL 0x33E67F0
	0x034F0828 STR X22, [X20 + 0x38]
	0x034F082C CBZ X22, 0x34F0BA4
	0x034F0830 MOVZ W1, 0x1
	0x034F0834 MOV X0, X22
	0x034F0838 MOV X2, X31
	0x034F083C BL 0x33E7018
	0x034F0840 LDR X0, [X20 + 0x38]
	0x034F0844 CBZ X0, 0x34F0BA8
	0x034F0848 ADRP X8, 0xC43000
	0x034F084C LDR X8, [X8 + 0x820]
	0x034F0850 LDR X1, [X8]
	0x034F0854 MOV X2, X31
	0x034F0858 BL 0x33E7118
	0x034F085C LDR X0, [X20 + 0x38]
	0x034F0860 CBZ X0, 0x34F0BAC
	0x034F0864 MOV X1, X31
	0x034F0868 BL 0x33E6A6C
	0x034F086C LDR X0, [X20 + 0x40]
	0x034F0870 CBZ X0, 0x34F0B60
	0x034F0874 MOV X1, X31
	0x034F0878 BL 0x33DE66C
	0x034F087C MOV X20, X31
	0x034F0880 B 0x34F0B04
	0x034F0884 LDR X8, [X20 + 0x30]
	0x034F0888 CBZ X8, 0x34F0B54
	0x034F088C LDR X23, [X8 + 0x108]
	0x034F0890 STRB W31, [X31 + 0x88]
	0x034F0894 ADD X1, X31, 0x88
	0x034F0898 MOV X0, X23
	0x034F089C MOV X2, X31
	0x034F08A0 BL 0x33DE64C
	0x034F08A4 LDR X8, [X20 + 0x30]
	0x034F08A8 CBZ X8, 0x34F0B58
	0x034F08AC LDR X0, [X8 + 0x108]
	0x034F08B0 CBZ X0, 0x34F0B5C
	0x034F08B4 ADRP X8, 0xC43000
	0x034F08B8 LDR X8, [X8 + 0x810]
	0x034F08BC LDR X1, [X8]
	0x034F08C0 ADD X8, X31, 0x8
	0x034F08C4 BL 0x2EED3B8
	0x034F08C8 LDUR V0, [X31 + 0x8]
	0x034F08CC LDUR V1, [X31 + 0x18]
	0x034F08D0 LDR X8, [X31 + 0x28]
	0x034F08D4 ADRP X21, 0xC43000
	0x034F08D8 STP V0, V1, [X31 + 0x60]
	0x034F08DC STR X8, [X31 + 0x80]
	0x034F08E0 LDR X21, [X21 + 0x800]
	0x034F08E4 LDR X1, [X21]
	0x034F08E8 ADD X0, X31, 0x60
	0x034F08EC BL 0x2BC416C
	0x034F08F0 TBZ X0, 0x0, 0x34F093C
	0x034F08F4 LDR X8, [X20 + 0x30]
	0x034F08F8 CBZ X8, 0x34F0B34
	0x034F08FC LDR X9, [X8 + 0x28]
	0x034F0900 CBZ X9, 0x34F08E4
	0x034F0904 LDR W9, [X9 + 0x1C]
	0x034F0908 CMP W9, 0x2
	0x034F090C B.NE 0x34F08E4
	0x034F0910 LDR X9, [X31 + 0x78]
	0x034F0914 CBZ X9, 0x34F0B40
	0x034F0918 LDR X1, [X9 + 0x20]
	0x034F091C CBZ X1, 0x34F0B3C
	0x034F0920 LDR X9, [X8]
	0x034F0924 LDR W2, [X1 + 0x18]
	0x034F0928 LDR X10, [X9 + 0x258]
	0x034F092C LDR X3, [X9 + 0x260]
	0x034F0930 MOV X0, X8
	0x034F0934 BLR X10
	0x034F0938 B 0x34F08E4
	0x034F093C MOV X21, X31
	0x034F0940 MOVZ W22, 0xA
	0x034F0944 ADRP X8, 0xC43000
	0x034F0948 LDR X8, [X8 + 0x7F8]
	0x034F094C LDR X1, [X8]
	0x034F0950 ADD X0, X31, 0x60
	0x034F0954 BL 0x2BC42B8
	0x034F0958 CBNZ X21, 0x34F0B6C
	0x034F095C CMP W22, 0xA
	0x034F0960 B.EQ 0x34F0968
	0x034F0964 CBNZ W22, 0x34F0994
	0x034F0968 LDR X8, [X20 + 0x30]
	0x034F096C CBZ X8, 0x34F0B80
	0x034F0970 LDR X0, [X8 + 0x108]
	0x034F0974 CBZ X0, 0x34F0B84
	0x034F0978 ADRP X8, 0xC43000
	0x034F097C LDR X8, [X8 + 0x7D0]
	0x034F0980 LDR X1, [X8]
	0x034F0984 BL 0x2EED0CC
	0x034F0988 MOV X21, X31
	0x034F098C MOVZ W22, 0xB
	0x034F0990 B 0x34F0998
	0x034F0994 MOV X21, X31
	0x034F0998 LDRB W8, [X31 + 0x88]
	0x034F099C CBZ W8, 0x34F09AC
	0x034F09A0 MOV X0, X23
	0x034F09A4 MOV X1, X31
	0x034F09A8 BL 0x33E14E4
	0x034F09AC CBNZ X21, 0x34F0B64
	0x034F09B0 CMP W22, 0xB
	0x034F09B4 B.EQ 0x34F09BC
	0x034F09B8 CBNZ W22, 0x34F07C0
	0x034F09BC LDR X8, [X20 + 0x30]
	0x034F09C0 CBZ X8, 0x34F0B74
	0x034F09C4 LDR X23, [X8 + 0x100]
	0x034F09C8 STRB W31, [X31 + 0x5C]
	0x034F09CC ADD X1, X31, 0x5C
	0x034F09D0 MOV X0, X23
	0x034F09D4 MOV X2, X31
	0x034F09D8 BL 0x33DE64C
	0x034F09DC LDR X8, [X20 + 0x30]
	0x034F09E0 CBZ X8, 0x34F0B78
	0x034F09E4 LDR X0, [X8 + 0x100]
	0x034F09E8 CBZ X0, 0x34F0B7C
	0x034F09EC ADRP X8, 0xC43000
	0x034F09F0 LDR X8, [X8 + 0x810]

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X20, 0xEF0000
	011 Move W8, [X20+2592]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {37}
	017 Move X0, 0xC04000
	018 Move X0, [X0+1560]
	019 Call 0x1C17CF4
	020 Move X0, 0xC44000
	021 Move X0, [X0+1880]
	022 Call 0x1C17CF4
	023 Move X0, 0xC44000
	024 Move X0, [X0+1976]
	025 Call 0x1C17CF4
	026 Move X0, 0xC44000
	027 Move X0, [X0+1984]
	028 Call 0x1C17CF4
	029 Move X0, 0xC0D000
	030 Move X0, [X0+2984]
	031 Call 0x1C17CF4
	032 Move X0, 0xC44000
	033 Move X0, [X0+1992]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X20+2592], W8
	037 Move X0, X19
	038 Move [X31+12], W31
	039 Move [X31+8], W31
	040 Call PeerBase.Reset, X0
	041 Move X8, [X19+16]
	042 Compare X8, 0
	043 JumpIfEqual {262}
	044 Move X1, [X8+240]
	045 Compare X1, 0
	046 JumpIfEqual {58}
	047 Move W9, [X19+32]
	048 Compare W9, 0
	049 JumpIfNotEqual {58}
	050 Move X8, [X19]
	051 Move X0, X19
	052 Move X9, [X8+648]
	053 Move X2, [X8+656]
	054 NotImplemented "Instruction BLR not yet implemented."
	055 Move X8, [X19+16]
	056 Compare X8, 0
	057 JumpIfEqual {262}
	058 Move X9, 0xC44000
	059 Move X10, [X8+256]
	060 Move X9, [X9+1992]
	061 Compare X10, 0
	062 JumpIfEqual {65}
	063 Move W10, 1
	064 Move [X19+221], W10
	065 Move W8, [X8+104]
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Move TEMP, 1
	068 Not TEMP
	069 Move W8, TEMP
	070 NotImplemented "Instruction CINC not yet implemented."
	071 NotImplemented "Instruction STRH not yet implemented."
	072 Move X0, [X9]
	073 Move W8, [X0+224]
	074 Compare W8, 0
	075 JumpIfNotEqual {77}
	076 Call 0x1C17DFC
	077 Move X0, X31
	078 Call ThreadSafeRandom.Next
	079 Move X20, [X19+344]
	080 Move [X19+372], W0
	081 Compare X20, 0
	082 JumpIfEqual {90}
	083 Move X0, [X19+16]
	084 Compare X0, 0
	085 JumpIfEqual {262}
	086 Move X1, X31
	087 Call PhotonPeer.get_MaximumTransferUnit, X0
	088 Move W8, [X20+24]
	089 NotImplemented "Instruction CMP not yet implemented."
	090 Move X0, [X19+16]
	091 Compare X0, 0
	092 JumpIfEqual {262}
	093 Move X20, 0xC04000
	094 Move X20, [X20+1560]
	095 Move X1, X31
	096 Call PhotonPeer.get_MaximumTransferUnit, X0
	097 Move X8, [X20]
	098 Move W1, W0
	099 Move X0, X8
	100 Call 0x1C17D6C
	101 Move [X19+344], X0
	102 Move X11, [X19+320]
	103 NotImplemented "Instruction MOVI not yet implemented."
	104 Move [X19+376], D0
	105 Move [X19+200], W31
	106 Move [X19+328], D0
	107 Compare X11, 0
	108 JumpIfEqual {262}
	109 Move W8, [X11+24]
	110 Move X9, X8
	111 ShiftRight X9, 32
	112 And X9, X9, 0x7FFFFFFF
	113 NotImplemented "Instruction CMP not yet implemented."
	114 Move X9, X31
	115 Move X10, W8
	116 Add X11, X11, 32
	117 NotImplemented "Instruction CMP not yet implemented."
	118 Move [X11], W31
	119 Add X9, X9, 1
	120 NotImplemented "Instruction CMP not yet implemented."
	121 Move X20, [X19+392]
	122 Move [X31+12], W31
	123 Add X1, X31, 12
	124 Move X0, X20
	125 Move X2, X31
	126 Call Monitor.Enter, X0, X1
	127 Move X21, [X19+392]
	128 Compare X21, 0
	129 JumpIfEqual {265}
	130 Move X8, [X19+16]
	131 Compare X8, 0
	132 JumpIfEqual {266}
	133 Move W9, [X8+106]
	134 Move W10, [X21+24]
	135 Add W1, W9, 1
	136 NotImplemented "Instruction CMP not yet implemented."
	137 Move X8, 0xC44000
	138 Move X8, [X8+1880]
	139 Move X0, [X8]
	140 Call 0x1C17D6C
	141 Move X8, [X19+16]
	142 Compare X8, 0
	143 JumpIfEqual {175}
	144 Move X21, X0
	145 Move X25, 0xC44000
	146 Move X25, [X25+1976]
	147 Move X22, X31
	148 Move W26, [X8+106]
	149 Move W24, [X19+368]
	150 Move X0, [X25]
	151 NotImplemented "Instruction CMP not yet implemented."
	152 Call 0x1C17F10
	153 Move X23, X0
	154 Move W1, W22
	155 Move W2, W24
	156 Call EnetChannel..ctor, X0, X1, X2
	157 Compare X21, 0
	158 JumpIfEqual {257}
	159 Compare X23, 0
	160 JumpIfEqual {167}
	161 Move X8, [X21]
	162 Move X1, [X8+64]
	163 Move X0, X23
	164 Call 0x1C17E00
	165 Compare X0, 0
	166 JumpIfEqual {259}
	167 Move W8, [X21+24]
	168 NotImplemented "Instruction CMP not yet implemented."
	169 Add X8, X21, X22
	170 Move [X8+32], X23
	171 Move X8, [X19+16]
	172 Add X22, X22, 1
	173 Compare X8, 0
	174 JumpIfNotEqual {148}
	175 Call 0x1C17F20
	176 Call 0x1C17F10
	177 Move X23, X0
	178 Move W1, 255
	179 Move W2, W24
	180 Call EnetChannel..ctor, X0, X1, X2
	181 Compare X21, 0
	182 JumpIfEqual {268}
	183 Compare X23, 0
	184 JumpIfEqual {191}
	185 Move X8, [X21]
	186 Move X1, [X8+64]
	187 Move X0, X23
	188 Call 0x1C17E00
	189 Compare X0, 0
	190 JumpIfEqual {270}
	191 Move W8, [X21+24]
	192 NotImplemented "Instruction CMP not yet implemented."
	193 Add X8, X21, X26
	194 Move X22, X31
	195 Move [X8+32], X23
	196 Move [X19+392], X21
	197 Move W8, [X31+12]
	198 Compare W8, 0
	199 JumpIfEqual {203}
	200 Move X0, X20
	201 Move X1, X31
	202 Call Monitor.Exit, X0
	203 Compare X22, 0
	204 JumpIfNotEqual {263}
	205 Move X20, [X19+296]
	206 Move [X31+8], W31
	207 Add X1, X31, 8
	208 Move X0, X20
	209 Move X2, X31
	210 Call Monitor.Enter, X0, X1
	211 Move X8, [X19+296]
	212 Compare X8, 0
	213 JumpIfEqual {267}
	214 Move W2, [X8+24]
	215 Move W9, [X8+28]
	216 Add W9, W9, 1
	217 NotImplemented "Instruction CMP not yet implemented."
	218 Move [X8+24], W31
	219 Move [X8+28], W9
	220 Move X0, [X8+16]
	221 Move W1, W31
	222 Move X3, X31
	223 Call Array.Clear, X0, X1, X2
	224 Move X22, X31
	225 Move W21, 17
	226 Move W8, [X31+8]
	227 Compare W8, 0
	228 JumpIfEqual {232}
	229 Move X0, X20
	230 Move X1, X31
	231 Call Monitor.Exit, X0
	232 Compare X22, 0
	233 JumpIfNotEqual {263}
	234 NotImplemented "Instruction CMP not yet implemented."
	235 Compare W21, 0
	236 JumpIfNotEqual {246}
	237 Move X8, 0xC0D000
	238 Move X8, [X8+2984]
	239 Move X0, [X8]
	240 Call 0x1C17F10
	241 Move W1, W31
	242 Move X2, X31
	243 Move X20, X0
	244 Call StreamBuffer..ctor, X0, X1
	245 Move [X19+312], X20
	246 Move X20, [X31+64]
	247 Move X19, [X31+72]
	248 Move X22, [X31+48]
	249 Move X21, [X31+56]
	250 Move X24, [X31+32]
	251 Move X23, [X31+40]
	252 Move X26, [X31+16]
	253 Move X25, [X31+24]
	254 Move X30, [X31+80]
	255 Return 
	256 Call 0x1C17F28
	257 Call 0x1C17F20
	258 Call 0x1C17F28
	259 Call 0x1C17F44
	260 Move X1, X31
	261 Call 0x1C17DEC
	262 Call 0x1C17F20
	263 Move X0, X22
	264 Call 0x1C17F18
	265 Call 0x1C17F20
	266 Call 0x1C17F20
	267 Call 0x1C17F20
	268 Call 0x1C17F20
	269 Call 0x1C17F28
	270 Call 0x1C17F44
	271 Move X1, X31
	272 Call 0x1C17DEC
	273 Move X21, X0
	274 NotImplemented "Instruction CMP not yet implemented."
	275 Move X0, X21
	276 Call 0x3EB2AD0
	277 Move X22, [X0]
	278 Call 0x3EB2AE0
	279 Move W21, W31
	280 Move X22, X31
	281 Move X21, X0
	282 Move W8, [X31+8]
	283 Compare W8, 0
	284 JumpIfEqual {288}
	285 Move X0, X20
	286 Move X1, X31
	287 Call Monitor.Exit, X0
	288 Compare X22, 0
	289 JumpIfEqual {308}
	290 Move X0, X22
	291 Call 0x1C17F18
	292 Move X21, X0
	293 NotImplemented "Instruction CMP not yet implemented."
	294 Move X0, X21
	295 Call 0x3EB2AD0
	296 Move X22, [X0]
	297 Call 0x3EB2AE0
	298 Move X22, X31
	299 Move X21, X0
	300 Move W8, [X31+12]
	301 Compare W8, 0
	302 JumpIfEqual {306}
	303 Move X0, X20
	304 Move X1, X31
	305 Call Monitor.Exit, X0
	306 Compare X22, 0
	307 JumpIfNotEqual {310}
	308 Move X0, X21
	309 Call 0x1D2D690
	310 Move X0, X22
	311 Call 0x1C17F18
	312 Call 0x1991590

Method: System.Void ApplyRandomizedSequenceNumbers()

Disassembly:
	0x034F0D34 LDR X1, [X8]
	0x034F0D38 ADD X0, X31, 0x60
	0x034F0D3C BL 0x2BC42B8
	0x034F0D40 CBNZ X21, 0x34F0DA4
	0x034F0D44 CMP W22, 0x1
	0x034F0D48 B.NE 0x34F0D64
	0x034F0D4C MOV X0, X24
	0x034F0D50 BL 0x3EB1AD0
	0x034F0D54 LDR X21, [X0]
	0x034F0D58 BL 0x3EB1AE0
	0x034F0D5C MOV W22, W31
	0x034F0D60 B 0x34F0998
	0x034F0D64 MOV X21, X31
	0x034F0D68 LDRB W8, [X31 + 0x88]
	0x034F0D6C CBZ W8, 0x34F0D7C
	0x034F0D70 MOV X0, X23
	0x034F0D74 MOV X1, X31
	0x034F0D78 BL 0x33E14E4
	0x034F0D7C CBNZ X21, 0x34F0DAC
	0x034F0D80 CMP W22, 0x1
	0x034F0D84 B.NE 0x34F0D9C
	0x034F0D88 MOV X0, X24
	0x034F0D8C BL 0x3EB1AD0
	0x034F0D90 LDR X20, [X0]
	0x034F0D94 BL 0x3EB1AE0
	0x034F0D98 B 0x34F0B04
	0x034F0D9C MOV X20, X31
	0x034F0DA0 B 0x34F0DD0
	0x034F0DA4 MOV X0, X21
	0x034F0DA8 BL 0x1C16F18
	0x034F0DAC MOV X0, X21
	0x034F0DB0 BL 0x1C16F18
	0x034F0DB4 MOV X22, X1
	0x034F0DB8 MOV X24, X0
	0x034F0DBC B 0x34F0D68
	0x034F0DC0 MOV X22, X1
	0x034F0DC4 MOV X24, X0
	0x034F0DC8 B 0x34F0D2C
	0x034F0DCC MOV X24, X0
	0x034F0DD0 LDRB W8, [X31 + 0x8C]
	0x034F0DD4 CBZ W8, 0x34F0DE4
	0x034F0DD8 MOV X0, X19
	0x034F0DDC MOV X1, X31
	0x034F0DE0 BL 0x33E14E4
	0x034F0DE4 CBNZ X20, 0x34F0DF0
	0x034F0DE8 MOV X0, X24
	0x034F0DEC BL 0x1D2C690
	0x034F0DF0 MOV X0, X20
	0x034F0DF4 BL 0x1C16F18
	0x034F0DF8 BL 0x1990590
	0x034F0DFC STR X30, [X31 - 0x30]!
	0x034F0E00 STP X22, X21, [X31 + 0x10]
	0x034F0E04 STP X20, X19, [X31 + 0x20]
	0x034F0E08 ADRP X21, 0xEEF000
	0x034F0E0C ADRP X22, 0xC43000
	0x034F0E10 LDRB W8, [X21 + 0xA80]
	0x034F0E14 LDR X22, [X22 + 0x828]
	0x034F0E18 MOV W19, W1
	0x034F0E1C MOV X20, X0
	0x034F0E20 TBNZ X8, 0x0, 0x34F0E5C
	0x034F0E24 ADRP X0, 0xC43000
	0x034F0E28 LDR X0, [X0 + 0x830]
	0x034F0E2C BL 0x1C16CF4
	0x034F0E30 ADRP X0, 0xC43000
	0x034F0E34 LDR X0, [X0 + 0x838]
	0x034F0E38 BL 0x1C16CF4
	0x034F0E3C ADRP X0, 0xC43000
	0x034F0E40 LDR X0, [X0 + 0x840]
	0x034F0E44 BL 0x1C16CF4
	0x034F0E48 ADRP X0, 0xC43000
	0x034F0E4C LDR X0, [X0 + 0x828]
	0x034F0E50 BL 0x1C16CF4
	0x034F0E54 MOVZ W8, 0x1
	0x034F0E58 STRB W8, [X21 + 0xA80]
	0x034F0E5C LDR X0, [X22]
	0x034F0E60 BL 0x1C16F10
	0x034F0E64 MOV X1, X31
	0x034F0E68 MOV X21, X0
	0x034F0E6C BL 0x34FF894
	0x034F0E70 CBZ X21, 0x34F0F0C
	0x034F0E74 STR X20, [X21 + 0x10]
	0x034F0E78 STR W19, [X21 + 0x18]
	0x034F0E7C LDR X19, [X20 + 0x60]
	0x034F0E80 STRB W31, [X31 + 0xC]
	0x034F0E84 ADD X1, X31, 0xC
	0x034F0E88 MOV X0, X19
	0x034F0E8C MOV X2, X31
	0x034F0E90 BL 0x33DE64C
	0x034F0E94 ADRP X8, 0xC43000
	0x034F0E98 LDR X8, [X8 + 0x830]
	0x034F0E9C LDR X20, [X20 + 0x60]
	0x034F0EA0 LDR X0, [X8]
	0x034F0EA4 BL 0x1C16F10
	0x034F0EA8 ADRP X8, 0xC43000
	0x034F0EAC LDR X8, [X8 + 0x840]
	0x034F0EB0 MOV X22, X0
	0x034F0EB4 LDR X2, [X8]
	0x034F0EB8 MOV X1, X21
	0x034F0EBC MOV X3, X31
	0x034F0EC0 BL 0x34FF704
	0x034F0EC4 CBZ X20, 0x34F0F18
	0x034F0EC8 ADRP X8, 0xC43000
	0x034F0ECC LDR X8, [X8 + 0x838]
	0x034F0ED0 LDR X2, [X8]
	0x034F0ED4 MOV X0, X20
	0x034F0ED8 MOV X1, X22
	0x034F0EDC BL 0x24F1750
	0x034F0EE0 MOV X20, X31
	0x034F0EE4 LDRB W8, [X31 + 0xC]
	0x034F0EE8 CBZ W8, 0x34F0EF8

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X0+16]
	007 Compare X8, 0
	008 JumpIfEqual {89}
	009 Move W8, [X8+141]
	010 Compare W8, 0
	011 JumpIfEqual {77}
	012 Move X19, [X0+392]
	013 Move X20, X0
	014 Move [X31+12], W31
	015 Add X1, X31, 12
	016 Move X0, X19
	017 Move X2, X31
	018 Call Monitor.Enter, X0, X1
	019 Move X11, [X20+392]
	020 Compare X11, 0
	021 JumpIfEqual {92}
	022 Move W8, [X11+24]
	023 Move X9, X8
	024 ShiftRight X9, 32
	025 And X9, X9, 0x7FFFFFFF
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move X9, X31
	028 Move X10, W8
	029 Add X11, X11, 32
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move X13, [X20+16]
	032 Compare X13, 0
	033 JumpIfEqual {83}
	034 Move X14, [X13+144]
	035 Compare X14, 0
	036 JumpIfEqual {84}
	037 Move W12, [X14+24]
	038 NotImplemented "Instruction SDIV not yet implemented."
	039 NotImplemented "Instruction MSUB not yet implemented."
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Add X14, X14, W15
	042 Move X12, [X11]
	043 Move W15, [X13+152]
	044 Move W13, [X14+32]
	045 Compare W15, 0
	046 JumpIfEqual {60}
	047 Compare X12, 0
	048 JumpIfEqual {87}
	049 Move W14, [X12+72]
	050 Move W15, [X12+80]
	051 Move W16, [X12+104]
	052 Move W17, [X12+88]
	053 Add W14, W14, W13
	054 Add W15, W15, W13
	055 Add W16, W16, W13
	056 Add W13, W17, W13
	057 Move [X12+72], W14
	058 Move [X12+80], W15
	059 Move [X12+104], W16
	060 Compare X12, 0
	061 JumpIfEqual {88}
	062 Move [X12+72], W13
	063 Move [X12+80], W13
	064 Move [X12+104], W13
	065 Add X9, X9, 1
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Move [X12+88], W13
	068 Move X20, X31
	069 Move W8, [X31+12]
	070 Compare W8, 0
	071 JumpIfEqual {75}
	072 Move X0, X19
	073 Move X1, X31
	074 Call Monitor.Exit, X0
	075 Compare X20, 0
	076 JumpIfNotEqual {90}
	077 Move X20, [X31+32]
	078 Move X19, [X31+40]
	079 Move X30, [X31+16]
	080 Move X21, [X31+24]
	081 Add X31, X31, 48
	082 Return 
	083 Call 0x1C17F20
	084 Call 0x1C17F20
	085 Call 0x1C17F28
	086 Call 0x1C17F28
	087 Call 0x1C17F20
	088 Call 0x1C17F20
	089 Call 0x1C17F20
	090 Move X0, X20
	091 Call 0x1C17F18
	092 Call 0x1C17F20
	093 Move X21, X0
	094 NotImplemented "Instruction CMP not yet implemented."
	095 Move X0, X21
	096 Call 0x3EB2AD0
	097 Move X20, [X0]
	098 Call 0x3EB2AE0
	099 Move X20, X31
	100 Move X21, X0
	101 Move W8, [X31+12]
	102 Compare W8, 0
	103 JumpIfEqual {107}
	104 Move X0, X19
	105 Move X1, X31
	106 Call Monitor.Exit, X0
	107 Compare X20, 0
	108 JumpIfNotEqual {111}
	109 Move X0, X21
	110 Call 0x1D2D690
	111 Move X0, X20
	112 Call 0x1C17F18
	113 Call 0x1991590

Method: ExitGames.Client.Photon.EnetChannel GetChannel(System.Byte channelNumber)

Disassembly:
	0x034F0EEC MOV X0, X19
	0x034F0EF0 MOV X1, X31
	0x034F0EF4 BL 0x33E14E4
	0x034F0EF8 CBNZ X20, 0x34F0F10
	0x034F0EFC LDP X20, X19, [X31 + 0x20]
	0x034F0F00 LDP X22, X21, [X31 + 0x10]
	0x034F0F04 LDR X30, [X31], #0x30
	0x034F0F08 RET
	0x034F0F0C BL 0x1C16F20
	0x034F0F10 MOV X0, X20
	0x034F0F14 BL 0x1C16F18
	0x034F0F18 BL 0x1C16F20
	0x034F0F1C B 0x34F0F20
	0x034F0F20 MOV X21, X0
	0x034F0F24 CMP W1, 0x1
	0x034F0F28 B.NE 0x34F0F40
	0x034F0F2C MOV X0, X21
	0x034F0F30 BL 0x3EB1AD0
	0x034F0F34 LDR X20, [X0]
	0x034F0F38 BL 0x3EB1AE0
	0x034F0F3C B 0x34F0EE4

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+392]
	003 Compare X8, 0
	004 JumpIfEqual {19}
	005 NotImplemented "Instruction ORN not yet implemented."
	006 And W31, W9, 255
	007 Move W9, [X8+24]
	008 NotImplemented "Instruction CMP not yet implemented."
	009 And X9, X1, 255
	010 Move X9, [X8+24]
	011 Compare W9, 0
	012 JumpIfEqual {20}
	013 Subtract W9, W9, 1
	014 Move X9, W9
	015 Add X8, X8, X9
	016 Move X0, [X8+32]
	017 Move X30, [X31+16]
	018 Return X0
	019 Call 0x1C17F20
	020 Call 0x1C17F28

Method: System.Boolean Connect(System.String ipport, System.String proxyServerAddress, System.String appID, System.Object photonToken)

Disassembly:
	0x034F0F40 MOV X20, X31
	0x034F0F44 B 0x34F0F4C
	0x034F0F48 MOV X21, X0
	0x034F0F4C LDRB W8, [X31 + 0xC]
	0x034F0F50 CBZ W8, 0x34F0F60
	0x034F0F54 MOV X0, X19
	0x034F0F58 MOV X1, X31
	0x034F0F5C BL 0x33E14E4
	0x034F0F60 CBNZ X20, 0x34F0F6C
	0x034F0F64 MOV X0, X21
	0x034F0F68 BL 0x1D2C690
	0x034F0F6C MOV X0, X20
	0x034F0F70 BL 0x1C16F18
	0x034F0F74 BL 0x1990590
	0x034F0F78 STR X30, [X31 - 0x20]!
	0x034F0F7C STP X20, X19, [X31 + 0x10]
	0x034F0F80 ADRP X20, 0xEEF000
	0x034F0F84 LDRB W8, [X20 + 0xA22]
	0x034F0F88 MOV X19, X0
	0x034F0F8C TBNZ X8, 0x0, 0x34F0FA4
	0x034F0F90 ADRP X0, 0xC0B000
	0x034F0F94 LDR X0, [X0 + 0xBC8]
	0x034F0F98 BL 0x1C16CF4
	0x034F0F9C MOVZ W8, 0x1
	0x034F0FA0 STRB W8, [X20 + 0xA22]
	0x034F0FA4 LDR X0, [X19 + 0x28]
	0x034F0FA8 CBZ X0, 0x34F0FB8
	0x034F0FAC LDR X8, [X0]
	0x034F0FB0 LDP X9, X1, [X8 + 0x188]
	0x034F0FB4 BLR X9
	0x034F0FB8 LDR X8, [X19 + 0x10]
	0x034F0FBC STRB W31, [X19 + 0x40]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X0
	005 Move X0, [X0+40]
	006 Compare X0, 0
	007 JumpIfEqual {45}
	008 Move X8, [X0]
	009 Move X9, [X8+376]
	010 Move X1, [X8+384]
	011 NotImplemented "Instruction BLR not yet implemented."
	012 Move W20, W0
	013 Move TEMP, X0
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfNotEqual {40}
	017 Move X0, [X19+16]
	018 Compare X0, 0
	019 JumpIfEqual {45}
	020 Move X1, X31
	021 Call PhotonPeer.get_TrafficStatsEnabled, X0
	022 Move TEMP, X0
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfNotEqual {38}
	026 Move X8, [X19+16]
	027 Compare X8, 0
	028 JumpIfEqual {45}
	029 Move X8, [X8+168]
	030 Compare X8, 0
	031 JumpIfEqual {45}
	032 Move W9, [X8+56]
	033 Move W10, [X8+32]
	034 Add W9, W9, 44
	035 Add W10, W10, 1
	036 Move [X8+56], W9
	037 Move [X8+32], W10
	038 Move W8, 1
	039 Move [X19+64], W8
	040 And W0, W20, 1
	041 Move X20, [X31+16]
	042 Move X19, [X31+24]
	043 Move X30, [X31+32]
	044 Return X0
	045 Call 0x1C17F20

Method: System.Void OnConnect()

Disassembly:
	0x034F0FF8 SUBS X9, X9, 0x1
	0x034F0FFC ADD X10, X10, 0x10
	0x034F1000 B.NE 0x34F0FEC
	0x034F1004 MOVZ W2, 0x2
	0x034F1008 MOV X0, X19
	0x034F100C BL 0x1C5C788
	0x034F1010 B 0x34F1030
	0x034F1014 LDP X20, X19, [X31 + 0x10]
	0x034F1018 LDR X30, [X31], #0x20
	0x034F101C RET
	0x034F1020 LDR W9, [X10]
	0x034F1024 ADD W9, W9, 0x2
	0x034F1028 ADD X8, X8, W9, 0x4, SXTW
	0x034F102C ADD X0, X8, 0x138

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move X0, [X0+288]
	005 Compare X0, 0
	006 JumpIfEqual {18}
	007 Move W2, 2
	008 Move W4, 255
	009 Move X1, X19
	010 Move X3, X31
	011 Call NCommandPool.Acquire, X0, X1, X2, X3, X4
	012 Move X1, X0
	013 Move X0, X19
	014 Move X30, [X31+16]
	015 Move X19, [X31+24]
	016 Call EnetPeer.QueueOutgoingReliableCommand, X0, X1
	017 Return 
	018 Call 0x1C17F20

Method: System.Void Disconnect()

Disassembly:
	0x034F134C MOV X0, X19
	0x034F1350 MOV W1, W21
	0x034F1354 BL 0x34EFEEC
	0x034F1358 MOV X21, X0
	0x034F135C MOV X0, X19
	0x034F1360 STR W31, [X19 + 0x44]
	0x034F1364 BL 0x34F2CC4
	0x034F1368 MOV W22, W0
	0x034F136C CBZ W0, 0x34F1378
	0x034F1370 CBNZ X20, 0x34F1398
	0x034F1374 B 0x34F157C
	0x034F1378 ADRP X8, 0xC42000
	0x034F137C LDR X8, [X8 + 0x868]
	0x034F1380 MOVZ W1, 0x2
	0x034F1384 MOV X0, X19
	0x034F1388 LDR X2, [X8]
	0x034F138C BL 0x34F116C
	0x034F1390 MOVZ W22, 0x3E8
	0x034F1394 CBZ X20, 0x34F157C
	0x034F1398 MOV X0, X20
	0x034F139C MOV X1, X31
	0x034F13A0 BL 0x351806C
	0x034F13A4 CMP W0, W22
	0x034F13A8 B.LE 0x34F157C
	0x034F13AC AND W8, W23, 0xFF
	0x034F13B0 CMP W8, 0xE
	0x034F13B4 CSET W23, NE
	0x034F13B8 CMP W8, 0xB
	0x034F13BC MOV X0, X20
	0x034F13C0 MOV X1, X31
	0x034F13C4 CSET W24, NE
	0x034F13C8 BL 0x351806C
	0x034F13CC CBZ X21, 0x34F1674
	0x034F13D0 AND W26, W23, W24, 0x0
	0x034F13D4 MOVZ W8, 0x58
	0x034F13D8 CMP W26, 0x0
	0x034F13DC MOVZ W9, 0x50
	0x034F13E0 CSEL X8, X9, X8, NE
	0x034F13E4 LDR W28, [X21, X8, LSL]
	0x034F13E8 MOV W25, W0
	0x034F13EC MOV X0, X20
	0x034F13F0 MOV X1, X31
	0x034F13F4 BL 0x3517FCC
	0x034F13F8 MOV X23, X0
	0x034F13FC MOV X0, X20
	0x034F1400 MOV X1, X31
	0x034F1404 BL 0x351806C
	0x034F1408 CMP W0, 0x1
	0x034F140C B.LT 0x34F1558
	0x034F1410 ADD W8, W22, W25
	0x034F1414 CMP W26, 0x0
	0x034F1418 MOVZ W9, 0xF
	0x034F141C MOVZ W10, 0x8
	0x034F1420 SUB W8, W8, 0x1
	0x034F1424 MOV W27, W31
	0x034F1428 MOV W24, W31
	0x034F142C ADD W28, W28, 0x1
	0x034F1430 CSEL W25, W10, W9, NE
	0x034F1434 SDIV W29, W8, W22
	0x034F1438 MOV X0, X20
	0x034F143C MOV X1, X31
	0x034F1440 BL 0x351806C
	0x034F1444 SUB W8, W0, W24
	0x034F1448 CMP W8, W22
	0x034F144C B.GE 0x34F1460
	0x034F1450 MOV X0, X20
	0x034F1454 MOV X1, X31
	0x034F1458 BL 0x351806C
	0x034F145C SUB W22, W0, W24
	0x034F1460 ADRP X8, 0xC42000
	0x034F1464 LDR X8, [X8 + 0x778]
	0x034F1468 LDR X0, [X8]
	0x034F146C LDR W8, [X0 + 0xE0]
	0x034F1470 CBNZ W8, 0x34F1478
	0x034F1474 BL 0x1C16DFC
	0x034F1478 BL 0x34F5754
	0x034F147C CBZ X0, 0x34F1674
	0x034F1480 MOV X1, X23
	0x034F1484 MOV W2, W24
	0x034F1488 MOV W3, W22
	0x034F148C MOV X4, X31
	0x034F1490 MOV X26, X0
	0x034F1494 BL 0x3517F60
	0x034F1498 LDR X0, [X19 + 0x120]
	0x034F149C CBZ X0, 0x34F1674
	0x034F14A0 LDRB W4, [X21 + 0x10]
	0x034F14A4 MOV X1, X19
	0x034F14A8 MOV W2, W25
	0x034F14AC MOV X3, X26
	0x034F14B0 BL 0x34F0030
	0x034F14B4 CBZ X0, 0x34F1674
	0x034F14B8 MOV X26, X0
	0x034F14BC STP W29, W27, [X0 + 0x28]
	0x034F14C0 STR W28, [X0 + 0x24]
	0x034F14C4 MOV X0, X20
	0x034F14C8 MOV X1, X31
	0x034F14CC BL 0x351806C
	0x034F14D0 STP W0, W24, [X26 + 0x30]
	0x034F14D4 MOV X0, X19
	0x034F14D8 MOV X1, X26
	0x034F14DC BL 0x34F01EC
	0x034F14E0 LDR W8, [X19 + 0x44]
	0x034F14E4 LDR W9, [X26 + 0x54]
	0x034F14E8 LDR X0, [X19 + 0x10]
	0x034F14EC ADD W8, W9, W8
	0x034F14F0 STR W8, [X19 + 0x44]
	0x034F14F4 CBZ X0, 0x34F1674
	0x034F14F8 MOV X1, X31
	0x034F14FC BL 0x350257C
	0x034F1500 TBZ X0, 0x0, 0x34F153C
	0x034F1504 LDR X8, [X19 + 0x10]
	0x034F1508 CBZ X8, 0x34F1674
	0x034F150C LDR X0, [X8 + 0xA8]
	0x034F1510 CBZ X0, 0x34F1674
	0x034F1514 LDR W1, [X26 + 0x54]
	0x034F1518 MOV X2, X31
	0x034F151C BL 0x35247FC
	0x034F1520 LDR X8, [X19 + 0x10]
	0x034F1524 CBZ X8, 0x34F1674
	0x034F1528 LDR X0, [X8 + 0xB0]
	0x034F152C CBZ X0, 0x34F1674
	0x034F1530 LDR W1, [X26 + 0x54]
	0x034F1534 MOV X2, X31
	0x034F1538 BL 0x35239A0
	0x034F153C MOV X0, X20
	0x034F1540 MOV X1, X31
	0x034F1544 ADD W27, W27, 0x1
	0x034F1548 ADD W24, W22, W24
	0x034F154C BL 0x351806C
	0x034F1550 CMP W24, W0
	0x034F1554 B.LT 0x34F1438
	0x034F1558 ADRP X8, 0xC42000
	0x034F155C LDR X8, [X8 + 0x778]
	0x034F1560 LDR X0, [X8]
	0x034F1564 LDR W8, [X0 + 0xE0]
	0x034F1568 CBNZ W8, 0x34F1570
	0x034F156C BL 0x1C16DFC
	0x034F1570 MOV X0, X20
	0x034F1574 BL 0x34F5924
	0x034F1578 B 0x34F1654
	0x034F157C CBZ X21, 0x34F1674
	0x034F1580 LDR X0, [X19 + 0x120]
	0x034F1584 CBZ X0, 0x34F1674
	0x034F1588 LDRB W4, [X21 + 0x10]
	0x034F158C MOV X1, X19
	0x034F1590 MOV W2, W23
	0x034F1594 MOV X3, X20
	0x034F1598 BL 0x34F0030
	0x034F159C CBZ X0, 0x34F1674
	0x034F15A0 LDRB W8, [X0 + 0x10]
	0x034F15A4 MOV X20, X0
	0x034F15A8 TBNZ X8, 0x0, 0x34F15F4
	0x034F15AC MOV X0, X19
	0x034F15B0 MOV X1, X20
	0x034F15B4 BL 0x34F55B4
	0x034F15B8 LDR W8, [X20 + 0x54]
	0x034F15BC LDR X0, [X19 + 0x10]
	0x034F15C0 STR W8, [X19 + 0x44]
	0x034F15C4 CBZ X0, 0x34F1674
	0x034F15C8 MOV X1, X31
	0x034F15CC BL 0x350257C
	0x034F15D0 TBZ X0, 0x0, 0x34F1654
	0x034F15D4 LDR X8, [X19 + 0x10]
	0x034F15D8 CBZ X8, 0x34F1674
	0x034F15DC LDR X0, [X8 + 0xA8]
	0x034F15E0 CBZ X0, 0x34F1674
	0x034F15E4 LDR W1, [X20 + 0x54]
	0x034F15E8 MOV X2, X31
	0x034F15EC BL 0x3517F40
	0x034F15F0 B 0x34F1638
	0x034F15F4 MOV X0, X19
	0x034F15F8 MOV X1, X20
	0x034F15FC BL 0x34F01EC
	0x034F1600 LDR W8, [X20 + 0x54]
	0x034F1604 LDR X0, [X19 + 0x10]
	0x034F1608 STR W8, [X19 + 0x44]
	0x034F160C CBZ X0, 0x34F1674
	0x034F1610 MOV X1, X31
	0x034F1614 BL 0x350257C
	0x034F1618 TBZ X0, 0x0, 0x34F1654
	0x034F161C LDR X8, [X19 + 0x10]
	0x034F1620 CBZ X8, 0x34F1674
	0x034F1624 LDR X0, [X8 + 0xA8]
	0x034F1628 CBZ X0, 0x34F1674
	0x034F162C LDR W1, [X20 + 0x54]
	0x034F1630 MOV X2, X31
	0x034F1634 BL 0x3517F24
	0x034F1638 LDR X8, [X19 + 0x10]
	0x034F163C CBZ X8, 0x34F1674
	0x034F1640 LDR X0, [X8 + 0xB0]
	0x034F1644 CBZ X0, 0x34F1674
	0x034F1648 LDR W1, [X20 + 0x54]
	0x034F164C MOV X2, X31
	0x034F1650 BL 0x35239A0
	0x034F1654 LDP X20, X19, [X31 + 0x50]
	0x034F1658 LDP X22, X21, [X31 + 0x40]
	0x034F165C LDP X24, X23, [X31 + 0x30]
	0x034F1660 LDP X26, X25, [X31 + 0x20]
	0x034F1664 LDP X28, X27, [X31 + 0x10]
	0x034F1668 MOVZ W0, 0x1
	0x034F166C LDP X29, X30, [X31], #0x60
	0x034F1670 RET
	0x034F1674 BL 0x1C16F20
	0x034F1678 SUB X31, X31, 0xB0
	0x034F167C STP X29, X30, [X31 + 0x50]
	0x034F1680 STP X28, X27, [X31 + 0x60]
	0x034F1684 STP X26, X25, [X31 + 0x70]
	0x034F1688 STP X24, X23, [X31 + 0x80]
	0x034F168C STP X22, X21, [X31 + 0x90]
	0x034F1690 STP X20, X19, [X31 + 0xA0]
	0x034F1694 ADRP X20, 0xEEE000
	0x034F1698 LDRB W8, [X20 + 0xA24]
	0x034F169C MOV X19, X0
	0x034F16A0 TBNZ X8, 0x0, 0x34F176C
	0x034F16A4 ADRP X0, 0xC42000
	0x034F16A8 LDR X0, [X0 + 0x870]
	0x034F16AC BL 0x1C16CF4
	0x034F16B0 ADRP X0, 0xC42000
	0x034F16B4 LDR X0, [X0 + 0x878]
	0x034F16B8 BL 0x1C16CF4
	0x034F16BC ADRP X0, 0xC42000
	0x034F16C0 LDR X0, [X0 + 0x880]
	0x034F16C4 BL 0x1C16CF4
	0x034F16C8 ADRP X0, 0xC42000
	0x034F16CC LDR X0, [X0 + 0x888]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+32], X22
	004 Move [X31+40], X21
	005 Move [X31+48], X20
	006 Move [X31+56], X19
	007 Move X20, 0xEEF000
	008 Move W8, [X20+2593]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xC43000
	015 Move X0, [X0+1984]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2593], W8
	019 Move [X31+28], W31
	020 Move [X31+24], W31
	021 Move [X31+12], W31
	022 Move W8, [X19+64]
	023 Or W8, W8, 4
	024 NotImplemented "Instruction CMP not yet implemented."
	025 Move X20, [X19+296]
	026 Compare X20, 0
	027 JumpIfEqual {59}
	028 Move [X31+28], W31
	029 Add X1, X31, 28
	030 Move X0, X20
	031 Move X2, X31
	032 Call Monitor.Enter, X0, X1
	033 Move X8, [X19+296]
	034 Compare X8, 0
	035 JumpIfEqual {184}
	036 Move W2, [X8+24]
	037 Move W9, [X8+28]
	038 Add W9, W9, 1
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Move [X8+24], W31
	041 Move [X8+28], W9
	042 Move X0, [X8+16]
	043 Move W1, W31
	044 Move X3, X31
	045 Call Array.Clear, X0, X1, X2
	046 Move X21, X31
	047 Move W22, 7
	048 Move W8, [X31+28]
	049 Compare W8, 0
	050 JumpIfEqual {54}
	051 Move X0, X20
	052 Move X1, X31
	053 Call Monitor.Exit, X0
	054 Compare X21, 0
	055 JumpIfNotEqual {181}
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Compare W22, 0
	058 JumpIfNotEqual {171}
	059 Move X20, [X19+392]
	060 Move [X31+24], W31
	061 Add X1, X31, 24
	062 Move X0, X20
	063 Move X2, X31
	064 Call Monitor.Enter, X0, X1
	065 Move X21, [X19+392]
	066 Compare X21, 0
	067 JumpIfEqual {183}
	068 Move W8, [X21+24]
	069 NotImplemented "Instruction CMP not yet implemented."
	070 Move W22, W31
	071 NotImplemented "Instruction CMP not yet implemented."
	072 Add X8, X21, W22
	073 Move X0, [X8+32]
	074 Compare X0, 0
	075 JumpIfEqual {178}
	076 Call EnetChannel.clearAll, X0
	077 Move W8, [X21+24]
	078 Add W22, W22, 1
	079 NotImplemented "Instruction CMP not yet implemented."
	080 Move X21, X31
	081 Move W22, 10
	082 Move W8, [X31+24]
	083 Compare W8, 0
	084 JumpIfEqual {88}
	085 Move X0, X20
	086 Move X1, X31
	087 Call Monitor.Exit, X0
	088 Compare X21, 0
	089 JumpIfNotEqual {181}
	090 NotImplemented "Instruction CMP not yet implemented."
	091 Compare W22, 0
	092 JumpIfNotEqual {171}
	093 Move X0, [X19+272]
	094 Compare X0, 0
	095 JumpIfEqual {180}
	096 Move W21, [X0+16]
	097 Move W1, W31
	098 Call NetworkSimulationSet.set_IsSimulationEnabled, X0, X1
	099 Move X0, [X19+288]
	100 Compare X0, 0
	101 JumpIfEqual {180}
	102 Move W2, 4
	103 Move W4, 255
	104 Move X1, X19
	105 Move X3, X31
	106 Move W22, 4
	107 Call NCommandPool.Acquire, X0, X1, X2, X3, X4
	108 Move X20, X0
	109 Move X0, X19
	110 Move X1, X20
	111 Move [X19+64], W22
	112 Call EnetPeer.QueueOutgoingReliableCommand, X0, X1
	113 Move X8, [X19]
	114 Move X0, X19
	115 Move X9, [X8+568]
	116 Move X1, [X8+576]
	117 NotImplemented "Instruction BLR not yet implemented."
	118 Move X0, [X19+16]
	119 Compare X0, 0
	120 JumpIfEqual {180}
	121 Move X1, X31
	122 Call PhotonPeer.get_TrafficStatsEnabled, X0
	123 Move TEMP, X0
	124 And TEMP, TEMP, 1
	125 Compare TEMP, 1
	126 JumpIfNotEqual {138}
	127 Move X8, [X19+16]
	128 Compare X8, 0
	129 JumpIfEqual {180}
	130 Compare X20, 0
	131 JumpIfEqual {180}
	132 Move X0, [X8+168]
	133 Compare X0, 0
	134 JumpIfEqual {180}
	135 Move W1, [X20+84]
	136 Move X2, X31
	137 Call TrafficStats.CountControlCommand, X0, X1
	138 Move X0, [X19+272]
	139 Compare X0, 0
	140 JumpIfEqual {180}
	141 NotImplemented "Instruction CMP not yet implemented."
	142 NotImplemented "Instruction CSET not yet implemented."
	143 Call NetworkSimulationSet.set_IsSimulationEnabled, X0, X1
	144 Move X0, [X19+40]
	145 Compare X0, 0
	146 JumpIfEqual {180}
	147 Move X8, [X0]
	148 Move X9, [X8+392]
	149 Move X1, [X8+400]
	150 NotImplemented "Instruction BLR not yet implemented."
	151 Move W1, 1025
	152 Move X0, X19
	153 Move [X19+64], W31
	154 Call PeerBase.EnqueueStatusCallback, X0, X1
	155 Move X20, [X19+344]
	156 Move [X31+12], W31
	157 Add X1, X31, 12
	158 Move X0, X20
	159 Move X2, X31
	160 Call Monitor.Enter, X0, X1
	161 Move X21, X31
	162 Move [X19+388], W31
	163 Move W8, [X31+12]
	164 Compare W8, 0
	165 JumpIfEqual {169}
	166 Move X0, X20
	167 Move X1, X31
	168 Call Monitor.Exit, X0
	169 Compare X21, 0
	170 JumpIfNotEqual {181}
	171 Move X20, [X31+48]
	172 Move X19, [X31+56]
	173 Move X22, [X31+32]
	174 Move X21, [X31+40]
	175 Move X30, [X31+16]
	176 Add X31, X31, 64
	177 Return 
	178 Call 0x1C17F20
	179 Call 0x1C17F28
	180 Call 0x1C17F20
	181 Move X0, X21
	182 Call 0x1C17F18
	183 Call 0x1C17F20
	184 Call 0x1C17F20
	185 NotImplemented "Instruction CMP not yet implemented."
	186 Move X22, X0
	187 Move X0, X22
	188 Call 0x3EB2AD0
	189 Move X21, [X0]
	190 Call 0x3EB2AE0
	191 Move X21, X31
	192 Move X22, X0
	193 Move W8, [X31+12]
	194 Compare W8, 0
	195 JumpIfEqual {199}
	196 Move X0, X20
	197 Move X1, X31
	198 Call Monitor.Exit, X0
	199 Compare X21, 0
	200 JumpIfEqual {239}
	201 Move X0, X21
	202 Call 0x1C17F18
	203 Move X22, X0
	204 NotImplemented "Instruction CMP not yet implemented."
	205 Move X0, X22
	206 Call 0x3EB2AD0
	207 Move X21, [X0]
	208 Call 0x3EB2AE0
	209 Move W22, W31
	210 Move X21, X31
	211 Move X22, X0
	212 Move W8, [X31+28]
	213 Compare W8, 0
	214 JumpIfEqual {218}
	215 Move X0, X20
	216 Move X1, X31
	217 Call Monitor.Exit, X0
	218 Compare X21, 0
	219 JumpIfEqual {239}
	220 Move X0, X21
	221 Call 0x1C17F18
	222 Move X22, X0
	223 NotImplemented "Instruction CMP not yet implemented."
	224 Move X0, X22
	225 Call 0x3EB2AD0
	226 Move X21, [X0]
	227 Call 0x3EB2AE0
	228 Move W22, W31
	229 Move X21, X31
	230 Move X22, X0
	231 Move W8, [X31+24]
	232 Compare W8, 0
	233 JumpIfEqual {237}
	234 Move X0, X20
	235 Move X1, X31
	236 Call Monitor.Exit, X0
	237 Compare X21, 0
	238 JumpIfNotEqual {241}
	239 Move X0, X22
	240 Call 0x1D2D690
	241 Move X0, X21
	242 Call 0x1C17F18
	243 Call 0x1991590

Method: System.Void StopConnection()

Disassembly:
	0x034F1F78 BL 0x1C16F18
	0x034F1F7C BL 0x1990590
	0x034F1F80 SUB X31, X31, 0x80
	0x034F1F84 STP X30, X25, [X31 + 0x40]
	0x034F1F88 STP X24, X23, [X31 + 0x50]
	0x034F1F8C STP X22, X21, [X31 + 0x60]
	0x034F1F90 STP X20, X19, [X31 + 0x70]
	0x034F1F94 ADRP X21, 0xEEE000
	0x034F1F98 LDRB W8, [X21 + 0xA34]
	0x034F1F9C MOV X20, X1
	0x034F1FA0 MOV X19, X0
	0x034F1FA4 TBNZ X8, 0x0, 0x34F2094
	0x034F1FA8 ADRP X0, 0xC42000
	0x034F1FAC LDR X0, [X0 + 0x848]
	0x034F1FB0 BL 0x1C16CF4
	0x034F1FB4 ADRP X0, 0xC42000
	0x034F1FB8 LDR X0, [X0 + 0x8B8]
	0x034F1FBC BL 0x1C16CF4
	0x034F1FC0 ADRP X0, 0xC0A000
	0x034F1FC4 LDR X0, [X0 + 0xBC8]
	0x034F1FC8 BL 0x1C16CF4
	0x034F1FCC ADRP X0, 0xC42000
	0x034F1FD0 LDR X0, [X0 + 0x830]
	0x034F1FD4 BL 0x1C16CF4
	0x034F1FD8 ADRP X0, 0xC42000
	0x034F1FDC LDR X0, [X0 + 0x718]
	0x034F1FE0 BL 0x1C16CF4
	0x034F1FE4 ADRP X0, 0xC42000
	0x034F1FE8 LDR X0, [X0 + 0x778]
	0x034F1FEC BL 0x1C16CF4
	0x034F1FF0 ADRP X0, 0xC42000
	0x034F1FF4 LDR X0, [X0 + 0x720]
	0x034F1FF8 BL 0x1C16CF4
	0x034F1FFC ADRP X0, 0xC0B000
	0x034F2000 LDR X0, [X0 + 0xBA8]
	0x034F2004 BL 0x1C16CF4
	0x034F2008 ADRP X0, 0xC01000
	0x034F200C LDR X0, [X0 + 0xAC8]
	0x034F2010 BL 0x1C16CF4
	0x034F2014 ADRP X0, 0xC41000
	0x034F2018 LDR X0, [X0 + 0x8C0]
	0x034F201C BL 0x1C16CF4
	0x034F2020 ADRP X0, 0xC41000
	0x034F2024 LDR X0, [X0 + 0x8C8]
	0x034F2028 BL 0x1C16CF4
	0x034F202C ADRP X0, 0xC41000
	0x034F2030 LDR X0, [X0 + 0x8D0]
	0x034F2034 BL 0x1C16CF4
	0x034F2038 ADRP X0, 0xC41000
	0x034F203C LDR X0, [X0 + 0x8D8]
	0x034F2040 BL 0x1C16CF4
	0x034F2044 ADRP X0, 0xC02000
	0x034F2048 LDR X0, [X0 + 0xEC8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xEEF000
	005 Move W8, [X20+2594]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xC0B000
	012 Move X0, [X0+3016]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2594], W8
	016 Move X0, [X19+40]
	017 Compare X0, 0
	018 JumpIfEqual {23}
	019 Move X8, [X0]
	020 Move X9, [X8+392]
	021 Move X1, [X8+400]
	022 NotImplemented "Instruction BLR not yet implemented."
	023 Move X8, [X19+16]
	024 Move [X19+64], W31
	025 Compare X8, 0
	026 JumpIfEqual {62}
	027 Move X19, [X8+72]
	028 Compare X19, 0
	029 JumpIfEqual {46}
	030 Move X10, 0xC0B000
	031 Move X8, [X19]
	032 Move X10, [X10+3016]
	033 NotImplemented "Instruction LDRH not yet implemented."
	034 Move X1, [X10]
	035 Compare X9, 0
	036 JumpIfEqual {43}
	037 Move X10, [X8+176]
	038 Add X10, X10, 8
	039 NotImplemented "Instruction LDUR not yet implemented."
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Subtract X9, X9, 1
	042 Add X10, X10, 16
	043 Move W2, 2
	044 Move X0, X19
	045 Call 0x1C5D788
	046 Move X20, [X31+16]
	047 Move X19, [X31+24]
	048 Move X30, [X31+32]
	049 Return 
	050 Move W9, [X10]
	051 Add W9, W9, 2
	052 Add X8, X8, W9
	053 Add X0, X8, 312
	054 Move X3, [X0]
	055 Move X2, [X0+8]
	056 Move X0, X19
	057 Move X20, [X31+16]
	058 Move X19, [X31+24]
	059 Move W1, 1025
	060 Move X30, [X31+32]
	061 CallNoReturn X3
	062 Call 0x1C17F20

Method: System.Void FetchServerTimestamp()

Disassembly:
	0x034F2068 ADRP X0, 0xC41000
	0x034F206C LDR X0, [X0 + 0x8F0]
	0x034F2070 BL 0x1C16CF4
	0x034F2074 ADRP X0, 0xC41000
	0x034F2078 LDR X0, [X0 + 0x8F8]
	0x034F207C BL 0x1C16CF4
	0x034F2080 ADRP X0, 0xC41000
	0x034F2084 LDR X0, [X0 + 0x900]
	0x034F2088 BL 0x1C16CF4
	0x034F208C MOVZ W8, 0x1
	0x034F2090 STRB W8, [X21 + 0xA34]
	0x034F2094 STRH W31, [X31 + 0x3C]
	0x034F2098 STRB W31, [X31 + 0x38]
	0x034F209C STP X31, X31, [X31 + 0x28]
	0x034F20A0 STR X31, [X31 + 0x20]
	0x034F20A4 CBZ X20, 0x34F2B88
	0x034F20A8 LDRB W8, [X20 + 0x11]
	0x034F20AC SUB W8, W8, 0x1
	0x034F20B0 CMP W8, 0xF
	0x034F20B4 B.HI 0x34F287C
	0x034F20B8 ADRP X9, 0xFFFFFFFFFD6A4000
	0x034F20BC ADD X9, X9, 0xA72
	0x034F20C0 ADR X10, 0x10
	0x034F20C4 LDRH W11, [X9, X8, LSL #1]
	0x034F20C8 ADD X10, X10, X11, 0x2, LSL
	0x034F20CC BR X10
	0x034F20D0 LDR X0, [X19 + 0x10]
	0x034F20D4 CBZ X0, 0x34F2B88
	0x034F20D8 MOV X1, X31
	0x034F20DC BL 0x350257C
	0x034F20E0 TBZ X0, 0x0, 0x34F252C
	0x034F20E4 LDR X8, [X19 + 0x10]
	0x034F20E8 CBZ X8, 0x34F2B88
	0x034F20EC LDR X0, [X8 + 0xA0]
	0x034F20F0 CBZ X0, 0x34F2B88
	0x034F20F4 LDRB W8, [X20 + 0x10]
	0x034F20F8 LDR W1, [X20 + 0x54]
	0x034F20FC MOV X2, X31
	0x034F2100 TBNZ X8, 0x0, 0x34F2528
	0x034F2104 BL 0x3517F40
	0x034F2108 B 0x34F252C
	0x034F210C LDRB W8, [X19 + 0x40]
	0x034F2110 CMP W8, 0x3
	0x034F2114 B.NE 0x34F2874
	0x034F2118 LDR X0, [X19 + 0x10]
	0x034F211C CBZ X0, 0x34F2B88
	0x034F2120 MOV X1, X31
	0x034F2124 BL 0x350257C
	0x034F2128 TBZ X0, 0x0, 0x34F2148
	0x034F212C LDR X8, [X19 + 0x10]
	0x034F2130 CBZ X8, 0x34F2B88
	0x034F2134 LDR X0, [X8 + 0xA0]
	0x034F2138 CBZ X0, 0x34F2B88
	0x034F213C LDR W1, [X20 + 0x54]
	0x034F2140 MOV X2, X31
	0x034F2144 BL 0x35247FC
	0x034F2148 LDP W9, W8, [X20 + 0x28]
	0x034F214C CMP W8, W9

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+32], X30
	003 Move [X31+48], X20
	004 Move [X31+56], X19
	005 Move X20, 0xEEE000
	006 Move W8, [X20+2595]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {20}
	012 Move X0, 0xC42000
	013 Move X0, [X0+2120]
	014 Call 0x1C17CF4
	015 Move X0, 0xC42000
	016 Move X0, [X0+2128]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+2595], W8
	020 Move W8, [X19+64]
	021 NotImplemented "Instruction CMP not yet implemented."
	022 Move W9, [X19+220]
	023 Compare W9, 0
	024 JumpIfEqual {35}
	025 Move X0, X19
	026 Move X20, [X31+48]
	027 Move X19, [X31+56]
	028 Move X30, [X31+32]
	029 Move W1, 12
	030 Move W3, 255
	031 Move X2, X31
	032 Add X31, X31, 64
	033 Call EnetPeer.CreateAndEnqueueCommand, X0, X1, X2, X3
	034 Return 
	035 Move X9, [X19+16]
	036 Compare X9, 0
	037 JumpIfEqual {68}
	038 Move W9, [X9+64]
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Move X9, 0xC42000
	041 Move X9, [X9+2120]
	042 Move TEMP, 0
	043 Not TEMP
	044 Move X10, TEMP
	045 Add X0, X31, 8
	046 Move X1, X31
	047 Move X9, [X9]
	048 Move [X31+24], W8
	049 Move [X31+8], X9
	050 Move [X31+16], X10
	051 Call Enum.ToString, X0
	052 Move X8, 0xC42000
	053 Move X8, [X8+2128]
	054 Move X1, X0
	055 Move X2, X31
	056 Move X8, [X8]
	057 Move X0, X8
	058 Call String.Concat, X0, X1
	059 Move X2, X0
	060 Move W1, 3
	061 Move X0, X19
	062 Call PeerBase.EnqueueDebugReturn, X0, X1, X2
	063 Move X20, [X31+48]
	064 Move X19, [X31+56]
	065 Move X30, [X31+32]
	066 Add X31, X31, 64
	067 Return 
	068 Call 0x1C17F20

Method: System.Boolean DispatchIncomingCommands()

Disassembly:
	0x034F2678 STRH W8, [X31 + 0x3C]
	0x034F267C BL 0x3398CE4
	0x034F2680 LDR W8, [X24 + 0x18]
	0x034F2684 CMP W8, 0x3
	0x034F2688 B.LS 0x34F2B8C
	0x034F268C CMP W8, 0x4
	0x034F2690 STR X0, [X24 + 0x38]
	0x034F2694 B.EQ 0x34F2B8C
	0x034F2698 ADRP X8, 0xC41000
	0x034F269C LDR X8, [X8 + 0x8F0]
	0x034F26A0 ADD X0, X19, 0x74
	0x034F26A4 MOV X1, X31
	0x034F26A8 LDR X8, [X8]
	0x034F26AC STR X8, [X24 + 0x40]
	0x034F26B0 BL 0x337B6E0
	0x034F26B4 LDR W8, [X24 + 0x18]
	0x034F26B8 CMP W8, 0x5
	0x034F26BC B.LS 0x34F2B8C
	0x034F26C0 CMP W8, 0x6
	0x034F26C4 STR X0, [X24 + 0x48]
	0x034F26C8 B.EQ 0x34F2B8C
	0x034F26CC ADRP X8, 0xC02000
	0x034F26D0 LDR X8, [X8 + 0xEC8]
	0x034F26D4 ADD X0, X19, 0x78
	0x034F26D8 MOV X1, X31
	0x034F26DC LDR X8, [X8]
	0x034F26E0 STR X8, [X24 + 0x50]
	0x034F26E4 BL 0x337B6E0
	0x034F26E8 LDR W8, [X24 + 0x18]
	0x034F26EC CMP W8, 0x7
	0x034F26F0 B.LS 0x34F2B8C
	0x034F26F4 CMP W8, 0x8
	0x034F26F8 STR X0, [X24 + 0x58]
	0x034F26FC B.EQ 0x34F2B8C
	0x034F2700 ADRP X8, 0xC41000
	0x034F2704 LDR X8, [X8 + 0x8C0]
	0x034F2708 MOV X0, X23
	0x034F270C MOV X1, X31
	0x034F2710 LDR X8, [X8]
	0x034F2714 STR X8, [X24 + 0x60]
	0x034F2718 BL 0x3319BB4
	0x034F271C LDR W8, [X24 + 0x18]
	0x034F2720 CMP W8, 0x9
	0x034F2724 B.LS 0x34F2B8C
	0x034F2728 CMP W8, 0xA
	0x034F272C STR X0, [X24 + 0x68]
	0x034F2730 B.EQ 0x34F2B8C
	0x034F2734 ADRP X8, 0xC41000
	0x034F2738 LDR X8, [X8 + 0x8D8]
	0x034F273C ADRP X9, 0xC41000
	0x034F2740 ADD X0, X31, 0x8
	0x034F2744 MOV X1, X31
	0x034F2748 LDR X8, [X8]
	0x034F274C LDR X9, [X9 + 0x848]
	0x034F2750 STR X8, [X24 + 0x70]
	0x034F2754 LDR X8, [X9]
	0x034F2758 MOVN X9, 0x0
	0x034F275C STP X8, X9, [X31 + 0x8]
	0x034F2760 LDRB W8, [X19 + 0x40]
	0x034F2764 STRB W8, [X31 + 0x18]
	0x034F2768 BL 0x33B162C
	0x034F276C LDR W8, [X24 + 0x18]
	0x034F2770 CMP W8, 0xB
	0x034F2774 B.LS 0x34F2B8C
	0x034F2778 STR X0, [X24 + 0x78]
	0x034F277C MOV X0, X24
	0x034F2780 MOV X1, X31
	0x034F2784 BL 0x32278CC
	0x034F2788 CBZ X22, 0x34F2B88
	0x034F278C ADRP X10, 0xC09000
	0x034F2790 LDR X8, [X22]
	0x034F2794 LDR X10, [X10 + 0xBC8]
	0x034F2798 MOV X23, X0
	0x034F279C LDRH W9, [X8 + 0x12E]
	0x034F27A0 LDR X1, [X10]
	0x034F27A4 CBZ X9, 0x34F27C8
	0x034F27A8 LDR X10, [X8 + 0xB0]
	0x034F27AC ADD X10, X10, 0x8
	0x034F27B0 LDUR X11, [X10 - 0x8]
	0x034F27B4 CMP X11, X1
	0x034F27B8 B.EQ 0x34F2828
	0x034F27BC SUBS X9, X9, 0x1
	0x034F27C0 ADD X10, X10, 0x10
	0x034F27C4 B.NE 0x34F27B0
	0x034F27C8 MOV X0, X22
	0x034F27CC MOV W2, W31
	0x034F27D0 BL 0x1C5C788
	0x034F27D4 B 0x34F2834
	0x034F27D8 LDR X0, [X19 + 0xC0]
	0x034F27DC CBZ X0, 0x34F2B88
	0x034F27E0 LDR W22, [X19 + 0x180]
	0x034F27E4 MOV X1, X31
	0x034F27E8 BL 0x364C19C
	0x034F27EC ADD W8, W22, W20, 0x1, ASR
	0x034F27F0 MOVZ W9, 0x1
	0x034F27F4 SUB W8, W8, W0
	0x034F27F8 STR W8, [X19 + 0x6C]
	0x034F27FC STRB W9, [X19 + 0x70]
	0x034F2800 B 0x34F299C
	0x034F2804 LDRSW X9, [X10]
	0x034F2808 ADD X8, X8, X9, 0x4, LSL
	0x034F280C ADD X0, X8, 0x138
	0x034F2810 LDP X8, X3, [X0]
	0x034F2814 MOVZ W1, 0x1
	0x034F2818 MOV X0, X19
	0x034F281C MOV X2, X21
	0x034F2820 BLR X8
	0x034F2824 B 0x34F2874
	0x034F2828 LDRSW X9, [X10]
	0x034F282C ADD X8, X8, X9, 0x4, LSL
	0x034F2830 ADD X0, X8, 0x138
	0x034F2834 LDP X8, X3, [X0]
	0x034F2838 MOVZ W1, 0x3
	0x034F283C MOV X0, X22
	0x034F2840 MOV X2, X23
	0x034F2844 BLR X8
	0x034F2848 LDRB W8, [X19 + 0x40]
	0x034F284C ORR W8, W8, 0x4
	0x034F2850 CMP W8, 0x4
	0x034F2854 B.EQ 0x34F2874
	0x034F2858 MOV X0, X19
	0x034F285C MOV W1, W21
	0x034F2860 BL 0x34F0DFC
	0x034F2864 LDR X8, [X19]
	0x034F2868 MOV X0, X19
	0x034F286C LDP X9, X1, [X8 + 0x1E8]
	0x034F2870 BLR X9
	0x034F2874 MOV X0, X20
	0x034F2878 BL 0x34F2CA8
	0x034F287C LDP X20, X19, [X31 + 0x70]
	0x034F2880 LDP X22, X21, [X31 + 0x60]
	0x034F2884 LDP X24, X23, [X31 + 0x50]
	0x034F2888 LDP X30, X25, [X31 + 0x40]
	0x034F288C ADD X31, X31, 0x80
	0x034F2890 RET
	0x034F2894 LDR W8, [X22]
	0x034F2898 TBNZ X8, 0x1F, 0x34F299C
	0x034F289C CMP W8, 0xF
	0x034F28A0 B.GT 0x34F2998
	0x034F28A4 ADRP X8, 0xFFFFFFFFFD5FC000
	0x034F28A8 LDR V0, [X8 + 0x518]
	0x034F28AC STUR D0, [X19 + 0x74]
	0x034F28B0 B 0x34F299C
	0x034F28B4 LDRB W1, [X20 + 0x12]
	0x034F28B8 LDRB W25, [X20 + 0x11]
	0x034F28BC MOV X0, X19
	0x034F28C0 BL 0x34EFEEC
	0x034F28C4 STR X31, [X31 + 0x30]
	0x034F28C8 CBZ X0, 0x34F2B88
	0x034F28CC LDR W1, [X20 + 0x24]
	0x034F28D0 CMP W25, 0x8
	0x034F28D4 CSET W2, EQ
	0x034F28D8 ADD X3, X31, 0x30
	0x034F28DC MOV X21, X0
	0x034F28E0 BL 0x34EE8D0
	0x034F28E4 MOV W22, W0
	0x034F28E8 TBZ X0, 0x0, 0x34F2900
	0x034F28EC LDR X8, [X31 + 0x30]
	0x034F28F0 CBZ X8, 0x34F2B88
	0x034F28F4 LDR W8, [X8 + 0x38]
	0x034F28F8 CMP W8, 0x0
	0x034F28FC B.LE 0x34F2874
	0x034F2900 MOV X0, X19
	0x034F2904 MOV X1, X20
	0x034F2908 BL 0x34F79A4
	0x034F290C TBZ X0, 0x0, 0x34F2874
	0x034F2910 LDR W8, [X20 + 0x14]
	0x034F2914 LDR W9, [X20 + 0x24]
	0x034F2918 CMP W8, W9
	0x034F291C B.NE 0x34F29A4
	0x034F2920 STP X31, X20, [X31 + 0x28]
	0x034F2924 LDR W9, [X20 + 0x38]
	0x034F2928 SUB W9, W9, 0x1
	0x034F292C CMP W9, 0x1
	0x034F2930 STR W9, [X20 + 0x38]
	0x034F2934 B.LT 0x34F29C4
	0x034F2938 ADD W19, W8, 0x1
	0x034F293C LDP W8, W9, [X20 + 0x24]
	0x034F2940 ADD W8, W9, W8
	0x034F2944 CMP W19, W8
	0x034F2948 B.GE 0x34F29C4
	0x034F294C CMP W25, 0x8
	0x034F2950 CSET W2, EQ
	0x034F2954 ADD X3, X31, 0x28
	0x034F2958 MOV X0, X21
	0x034F295C MOV W1, W19
	0x034F2960 BL 0x34EE8D0
	0x034F2964 LDR X20, [X31 + 0x30]
	0x034F2968 TBZ X0, 0x0, 0x34F2980
	0x034F296C CBZ X20, 0x34F2B88
	0x034F2970 LDR W8, [X20 + 0x38]
	0x034F2974 SUB W8, W8, 0x1
	0x034F2978 STR W8, [X20 + 0x38]
	0x034F297C B 0x34F2984
	0x034F2980 CBZ X20, 0x34F2B88
	0x034F2984 LDR W8, [X20 + 0x38]
	0x034F2988 ADD W19, W19, 0x1
	0x034F298C CMP W8, 0x1
	0x034F2990 B.GE 0x34F293C
	0x034F2994 B 0x34F29C4
	0x034F2998 STR W8, [X19 + 0x74]
	0x034F299C MOV X0, X21
	0x034F29A0 B 0x34F2878
	0x034F29A4 LDR X20, [X31 + 0x30]
	0x034F29A8 TBZ X22, 0x0, 0x34F29C0
	0x034F29AC CBZ X20, 0x34F2B88
	0x034F29B0 LDR W8, [X20 + 0x38]
	0x034F29B4 SUB W8, W8, 0x1
	0x034F29B8 STR W8, [X20 + 0x38]
	0x034F29BC B 0x34F29C4
	0x034F29C0 CBZ X20, 0x34F287C
	0x034F29C4 LDR W8, [X20 + 0x38]
	0x034F29C8 CMP W8, 0x0
	0x034F29CC B.GT 0x34F287C
	0x034F29D0 ADRP X8, 0xC41000
	0x034F29D4 LDR X8, [X8 + 0x778]
	0x034F29D8 LDR X0, [X8]
	0x034F29DC LDR W8, [X0 + 0xE0]
	0x034F29E0 CBNZ W8, 0x34F29E8
	0x034F29E4 BL 0x1C16DFC
	0x034F29E8 BL 0x34F5754
	0x034F29EC CBZ X0, 0x34F2B88
	0x034F29F0 MOV W1, W31
	0x034F29F4 MOV X2, X31
	0x034F29F8 MOV X19, X0
	0x034F29FC BL 0x3517FDC
	0x034F2A00 LDR X8, [X31 + 0x30]
	0x034F2A04 CBZ X8, 0x34F2B88
	0x034F2A08 LDR W1, [X8 + 0x30]
	0x034F2A0C MOV X0, X19
	0x034F2A10 MOV X2, X31
	0x034F2A14 BL 0x3517F5C
	0x034F2A18 MOV X0, X19
	0x034F2A1C MOV X1, X31
	0x034F2A20 BL 0x3517FCC
	0x034F2A24 LDR X8, [X31 + 0x30]
	0x034F2A28 CBZ X8, 0x34F2B88
	0x034F2A2C LDP W22, W9, [X8 + 0x24]
	0x034F2A30 ADD W9, W9, W22
	0x034F2A34 CMP W22, W9
	0x034F2A38 B.GE 0x34F2B0C
	0x034F2A3C MOV X20, X0
	0x034F2A40 CMP W25, 0x8
	0x034F2A44 CSET W2, EQ
	0x034F2A48 ADD X3, X31, 0x20
	0x034F2A4C MOV X0, X21
	0x034F2A50 MOV W1, W22
	0x034F2A54 BL 0x34EE8D0
	0x034F2A58 TBZ X0, 0x0, 0x34F2B9C
	0x034F2A5C LDR X8, [X31 + 0x20]
	0x034F2A60 CBZ X8, 0x34F2B88
	0x034F2A64 LDR X0, [X8 + 0x58]
	0x034F2A68 CBZ X0, 0x34F2B88
	0x034F2A6C MOV X1, X31
	0x034F2A70 BL 0x3517FCC
	0x034F2A74 LDR X8, [X31 + 0x20]
	0x034F2A78 CBZ X8, 0x34F2B88
	0x034F2A7C MOV X23, X0
	0x034F2A80 LDR X0, [X8 + 0x58]
	0x034F2A84 CBZ X0, 0x34F2B88
	0x034F2A88 LDR W24, [X8 + 0x34]
	0x034F2A8C MOV X1, X31
	0x034F2A90 BL 0x351806C
	0x034F2A94 MOV W4, W0
	0x034F2A98 MOV X0, X23
	0x034F2A9C MOV W1, W31
	0x034F2AA0 MOV X2, X20
	0x034F2AA4 MOV W3, W24
	0x034F2AA8 MOV X5, X31
	0x034F2AAC BL 0x33A8A9C
	0x034F2AB0 LDR X0, [X31 + 0x20]
	0x034F2AB4 CBZ X0, 0x34F2B88
	0x034F2AB8 BL 0x34F2C44
	0x034F2ABC LDR X8, [X31 + 0x20]
	0x034F2AC0 CBZ X8, 0x34F2B88
	0x034F2AC4 LDR W1, [X8 + 0x14]
	0x034F2AC8 CMP W25, 0x8
	0x034F2ACC CSET W2, EQ
	0x034F2AD0 MOV X0, X21
	0x034F2AD4 BL 0x34EE948
	0x034F2AD8 LDR X0, [X31 + 0x20]
	0x034F2ADC CBZ X0, 0x34F2B88
	0x034F2AE0 LDR W8, [X0 + 0x2C]
	0x034F2AE4 CMP W8, 0x1
	0x034F2AE8 B.LT 0x34F2AF0
	0x034F2AEC BL 0x34F2CA8
	0x034F2AF0 LDR X8, [X31 + 0x30]
	0x034F2AF4 CBZ X8, 0x34F2B88
	0x034F2AF8 LDP W9, W10, [X8 + 0x24]
	0x034F2AFC ADD W22, W22, 0x1
	0x034F2B00 ADD W9, W10, W9
	0x034F2B04 CMP W22, W9
	0x034F2B08 B.LT 0x34F2A40
	0x034F2B0C LDRSW X1, [X8 + 0x30]
	0x034F2B10 MOV X0, X19
	0x034F2B14 MOV X2, X31
	0x034F2B18 BL 0x3517EFC
	0x034F2B1C LDR X8, [X31 + 0x30]
	0x034F2B20 CBZ X8, 0x34F2B88
	0x034F2B24 LDR W9, [X8 + 0x28]
	0x034F2B28 LDR W10, [X8 + 0x30]
	0x034F2B2C MOVZ W11, 0xC
	0x034F2B30 CMP W25, 0x8
	0x034F2B34 STR X19, [X8 + 0x58]
	0x034F2B38 MADD W9, W9, W11, W10
	0x034F2B3C STR W9, [X8 + 0x54]
	0x034F2B40 B.NE 0x34F2B68
	0x034F2B44 LDR X0, [X21 + 0x18]
	0x034F2B48 CBZ X0, 0x34F2B88
	0x034F2B4C ADRP X9, 0xC41000
	0x034F2B50 LDR W1, [X8 + 0x24]
	0x034F2B54 LDR X9, [X9 + 0x718]
	0x034F2B58 MOV X2, X8
	0x034F2B5C LDR X3, [X9]
	0x034F2B60 BL 0x2426E98
	0x034F2B64 B 0x34F287C
	0x034F2B68 LDR X0, [X21 + 0x28]
	0x034F2B6C CBZ X0, 0x34F2B88
	0x034F2B70 ADRP X9, 0xC41000
	0x034F2B74 LDR X9, [X9 + 0x720]
	0x034F2B78 MOV X1, X8
	0x034F2B7C LDR X2, [X9]
	0x034F2B80 BL 0x24F1750
	0x034F2B84 B 0x34F287C
	0x034F2B88 BL 0x1C16F20
	0x034F2B8C BL 0x1C16F28
	0x034F2B90 MOV X0, X23
	0x034F2B94 BL 0x1C16F18
	0x034F2B98 BL 0x1C16F20
	0x034F2B9C ADRP X0, 0xC01000
	0x034F2BA0 LDR X0, [X0 + 0x7D0]
	0x034F2BA4 BL 0x1C16D08
	0x034F2BA8 BL 0x1C16F10
	0x034F2BAC MOV X19, X0
	0x034F2BB0 ADRP X0, 0xC41000
	0x034F2BB4 LDR X0, [X0 + 0x908]
	0x034F2BB8 BL 0x1C16D08
	0x034F2BBC MOV X1, X0
	0x034F2BC0 MOV X0, X19
	0x034F2BC4 MOV X2, X31
	0x034F2BC8 BL 0x33B2C70
	0x034F2BCC ADRP X0, 0xC41000
	0x034F2BD0 LDR X0, [X0 + 0x910]
	0x034F2BD4 BL 0x1C16D08
	0x034F2BD8 MOV X1, X0
	0x034F2BDC MOV X0, X19
	0x034F2BE0 BL 0x1C16DEC
	0x034F2BE4 B 0x34F2BE8
	0x034F2BE8 MOV X24, X0
	0x034F2BEC CMP W1, 0x1
	0x034F2BF0 B.NE 0x34F2C0C
	0x034F2BF4 MOV X0, X24
	0x034F2BF8 BL 0x3EB1AD0
	0x034F2BFC LDR X23, [X0]
	0x034F2C00 BL 0x3EB1AE0
	0x034F2C04 MOV W24, W31
	0x034F2C08 B 0x34F23DC
	0x034F2C0C MOV X23, X31
	0x034F2C10 B 0x34F2C18
	0x034F2C14 MOV X24, X0
	0x034F2C18 LDRB W8, [X31 + 0x38]
	0x034F2C1C CBZ W8, 0x34F2C2C
	0x034F2C20 MOV X0, X20
	0x034F2C24 MOV X1, X31
	0x034F2C28 BL 0x33E14E4
	0x034F2C2C CBNZ X23, 0x34F2C38
	0x034F2C30 MOV X0, X24
	0x034F2C34 BL 0x1D2C690
	0x034F2C38 MOV X0, X23
	0x034F2C3C BL 0x1C16F18
	0x034F2C40 BL 0x1990590
	0x034F2C44 STR X30, [X31 - 0x20]!
	0x034F2C48 STP X20, X19, [X31 + 0x10]
	0x034F2C4C ADRP X20, 0xEED000
	0x034F2C50 LDRB W8, [X20 + 0xA51]
	0x034F2C54 MOV X19, X0
	0x034F2C58 TBNZ X8, 0x0, 0x34F2C70
	0x034F2C5C ADRP X0, 0xC41000
	0x034F2C60 LDR X0, [X0 + 0x778]
	0x034F2C64 BL 0x1C16CF4
	0x034F2C68 MOVZ W8, 0x1
	0x034F2C6C STRB W8, [X20 + 0xA51]
	0x034F2C70 LDR X20, [X19 + 0x58]
	0x034F2C74 CBZ X20, 0x34F2C98
	0x034F2C78 ADRP X8, 0xC41000
	0x034F2C7C LDR X8, [X8 + 0x778]
	0x034F2C80 LDR X0, [X8]
	0x034F2C84 LDR W8, [X0 + 0xE0]
	0x034F2C88 CBNZ W8, 0x34F2C90
	0x034F2C8C BL 0x1C16DFC
	0x034F2C90 MOV X0, X20
	0x034F2C94 BL 0x34F5924
	0x034F2C98 STR X31, [X19 + 0x58]
	0x034F2C9C LDP X20, X19, [X31 + 0x10]
	0x034F2CA0 LDR X30, [X31], #0x20
	0x034F2CA4 RET
	0x034F2CA8 STR X30, [X31 - 0x10]!
	0x034F2CAC MOV X1, X0
	0x034F2CB0 LDR X0, [X0 + 0x60]
	0x034F2CB4 CBZ X0, 0x34F2CC0
	0x034F2CB8 LDR X30, [X31], #0x10
	0x034F2CBC B 0x34FACF8
	0x034F2CC0 BL 0x1C16F20
	0x034F2CC4 STP X30, X21, [X31 - 0x20]!
	0x034F2CC8 STP X20, X19, [X31 + 0x10]
	0x034F2CCC ADRP X20, 0xEED000
	0x034F2CD0 LDRB W8, [X20 + 0xA25]
	0x034F2CD4 MOV X19, X0
	0x034F2CD8 TBNZ X8, 0x0, 0x34F2CF0
	0x034F2CDC ADRP X0, 0xC09000
	0x034F2CE0 LDR X0, [X0 + 0xCD8]
	0x034F2CE4 BL 0x1C16CF4
	0x034F2CE8 MOVZ W8, 0x1
	0x034F2CEC STRB W8, [X20 + 0xA25]
	0x034F2CF0 LDR W8, [X19 + 0x198]
	0x034F2CF4 CBZ W8, 0x34F2D14
	0x034F2CF8 LDR X0, [X19 + 0x10]
	0x034F2CFC CBZ X0, 0x34F2DF8
	0x034F2D00 MOV X1, X31
	0x034F2D04 BL 0x350243C
	0x034F2D08 LDR W8, [X19 + 0x1A0]
	0x034F2D0C CMP W0, W8
	0x034F2D10 B.EQ 0x34F2DD4
	0x034F2D14 LDR X0, [X19 + 0x10]
	0x034F2D18 CBZ X0, 0x34F2DF8
	0x034F2D1C MOV X1, X31
	0x034F2D20 BL 0x350243C
	0x034F2D24 LDR X8, [X19 + 0x10]
	0x034F2D28 STR W0, [X19 + 0x1A0]
	0x034F2D2C CBZ X8, 0x34F2DF8
	0x034F2D30 MOV X0, X8
	0x034F2D34 MOV X1, X31
	0x034F2D38 BL 0x350243C
	0x034F2D3C LDR X8, [X19 + 0x10]
	0x034F2D40 SUB W9, W0, 0x30
	0x034F2D44 STR W9, [X19 + 0x198]
	0x034F2D48 CBZ X8, 0x34F2DF8
	0x034F2D4C LDR X20, [X8 + 0x100]
	0x034F2D50 CMP X20, 0x0
	0x034F2D54 CSEL X21, X31, X19, EQ
	0x034F2D58 CBZ X20, 0x34F2DA4
	0x034F2D5C ADRP X10, 0xC09000
	0x034F2D60 LDR X8, [X20]
	0x034F2D64 LDR X10, [X10 + 0xCD8]
	0x034F2D68 LDRH W9, [X8 + 0x12E]
	0x034F2D6C LDR X1, [X10]
	0x034F2D70 CBZ X9, 0x34F2D94
	0x034F2D74 LDR X10, [X8 + 0xB0]
	0x034F2D78 ADD X10, X10, 0x8
	0x034F2D7C LDUR X11, [X10 - 0x8]
	0x034F2D80 CMP X11, X1
	0x034F2D84 B.EQ 0x34F2DB0
	0x034F2D88 SUBS X9, X9, 0x1
	0x034F2D8C ADD X10, X10, 0x10
	0x034F2D90 B.NE 0x34F2D7C
	0x034F2D94 MOVZ W2, 0x4
	0x034F2D98 MOV X0, X20
	0x034F2D9C BL 0x1C5C788
	0x034F2DA0 B 0x34F2DC0
	0x034F2DA4 MOV W0, W31
	0x034F2DA8 MOV X21, X19
	0x034F2DAC B 0x34F2DD0
	0x034F2DB0 LDR W9, [X10]
	0x034F2DB4 ADD W9, W9, 0x4
	0x034F2DB8 ADD X8, X8, W9, 0x4, SXTW
	0x034F2DBC ADD X0, X8, 0x138
	0x034F2DC0 LDP X8, X1, [X0]
	0x034F2DC4 MOV X0, X20
	0x034F2DC8 BLR X8
	0x034F2DCC CBZ X21, 0x34F2DF8
	0x034F2DD0 STR W0, [X21 + 0x19C]
	0x034F2DD4 LDRB W8, [X19 + 0x184]
	0x034F2DD8 MOVZ W9, 0x19C
	0x034F2DDC CMP W8, 0x0
	0x034F2DE0 MOVZ W8, 0x198
	0x034F2DE4 CSEL X8, X8, X9, EQ
	0x034F2DE8 LDR W0, [X19, X8, LSL]
	0x034F2DEC LDP X20, X19, [X31 + 0x10]
	0x034F2DF0 LDP X30, X21, [X31], #0x20
	0x034F2DF4 RET
	0x034F2DF8 BL 0x1C16F20
	0x034F2DFC STP X30, X21, [X31 - 0x20]!
	0x034F2E00 STP X20, X19, [X31 + 0x10]
	0x034F2E04 ADRP X21, 0xEED000
	0x034F2E08 LDRB W8, [X21 + 0xA26]
	0x034F2E0C MOV W20, W1
	0x034F2E10 MOV X19, X0
	0x034F2E14 TBNZ X8, 0x0, 0x34F2E2C
	0x034F2E18 ADRP X0, 0xC09000
	0x034F2E1C LDR X0, [X0 + 0xCD8]
	0x034F2E20 BL 0x1C16CF4
	0x034F2E24 MOVZ W8, 0x1
	0x034F2E28 STRB W8, [X21 + 0xA26]
	0x034F2E2C LDRB W8, [X19 + 0x184]
	0x034F2E30 CBZ W8, 0x34F2E90
	0x034F2E34 LDR X8, [X19 + 0x10]
	0x034F2E38 CBZ X8, 0x34F2EC8
	0x034F2E3C LDR X19, [X8 + 0x100]
	0x034F2E40 CBZ X19, 0x34F2EC8
	0x034F2E44 ADRP X10, 0xC09000
	0x034F2E48 LDR X8, [X19]
	0x034F2E4C LDR X10, [X10 + 0xCD8]
	0x034F2E50 ADD W20, W20, 0x7
	0x034F2E54 LDRH W9, [X8 + 0x12E]
	0x034F2E58 LDR X1, [X10]
	0x034F2E5C CBZ X9, 0x34F2E80
	0x034F2E60 LDR X10, [X8 + 0xB0]
	0x034F2E64 ADD X10, X10, 0x8
	0x034F2E68 LDUR X11, [X10 - 0x8]
	0x034F2E6C CMP X11, X1
	0x034F2E70 B.EQ 0x34F2EA0
	0x034F2E74 SUBS X9, X9, 0x1
	0x034F2E78 ADD X10, X10, 0x10
	0x034F2E7C B.NE 0x34F2E68
	0x034F2E80 MOVZ W2, 0x3
	0x034F2E84 MOV X0, X19
	0x034F2E88 BL 0x1C5C788
	0x034F2E8C B 0x34F2EB0
	0x034F2E90 MOV W0, W20
	0x034F2E94 LDP X20, X19, [X31 + 0x10]
	0x034F2E98 LDP X30, X21, [X31], #0x20
	0x034F2E9C RET
	0x034F2EA0 LDR W9, [X10]
	0x034F2EA4 ADD W9, W9, 0x3
	0x034F2EA8 ADD X8, X8, W9, 0x4, SXTW
	0x034F2EAC ADD X0, X8, 0x138
	0x034F2EB0 LDP X3, X2, [X0]
	0x034F2EB4 MOV X0, X19
	0x034F2EB8 MOV W1, W20
	0x034F2EBC LDP X20, X19, [X31 + 0x10]
	0x034F2EC0 LDP X30, X21, [X31], #0x20
	0x034F2EC4 BR X3
	0x034F2EC8 BL 0x1C16F20
	0x034F2ECC STR X30, [X31 - 0x10]!
	0x034F2ED0 LDRB W8, [X0 + 0x184]
	0x034F2ED4 CBZ W8, 0x34F2EE0
	0x034F2ED8 MOVZ W0, 0x5
	0x034F2EDC B 0x34F2F00
	0x034F2EE0 LDR X0, [X0 + 0x10]
	0x034F2EE4 CBZ X0, 0x34F2F08
	0x034F2EE8 MOV X1, X31
	0x034F2EEC BL 0x3501EA4
	0x034F2EF0 ANDS W31, W0, 0x1
	0x034F2EF4 MOVZ W8, 0xC
	0x034F2EF8 MOVZ W9, 0x10
	0x034F2EFC CSEL W0, W9, W8, NE
	0x034F2F00 LDR X30, [X31], #0x10
	0x034F2F04 RET
	0x034F2F08 BL 0x1C16F20
	0x034F2F0C SUB X31, X31, 0x90
	0x034F2F10 STP X29, X30, [X31 + 0x30]
	0x034F2F14 STP X28, X27, [X31 + 0x40]
	0x034F2F18 STP X26, X25, [X31 + 0x50]
	0x034F2F1C STP X24, X23, [X31 + 0x60]
	0x034F2F20 STP X22, X21, [X31 + 0x70]
	0x034F2F24 STP X20, X19, [X31 + 0x80]
	0x034F2F28 ADRP X19, 0xEED000
	0x034F2F2C LDRB W8, [X19 + 0xA27]
	0x034F2F30 MOV X20, X0
	0x034F2F34 TBNZ X8, 0x0, 0x34F2F94
	0x034F2F38 ADRP X0, 0xC01000
	0x034F2F3C LDR X0, [X0 + 0xB58]
	0x034F2F40 BL 0x1C16CF4
	0x034F2F44 ADRP X0, 0xC09000
	0x034F2F48 LDR X0, [X0 + 0xBC8]
	0x034F2F4C BL 0x1C16CF4
	0x034F2F50 ADRP X0, 0xC01000
	0x034F2F54 LDR X0, [X0 + 0x758]
	0x034F2F58 BL 0x1C16CF4
	0x034F2F5C ADRP X0, 0xC41000
	0x034F2F60 LDR X0, [X0 + 0x738]
	0x034F2F64 BL 0x1C16CF4
	0x034F2F68 ADRP X0, 0xC41000
	0x034F2F6C LDR X0, [X0 + 0x918]
	0x034F2F70 BL 0x1C16CF4
	0x034F2F74 ADRP X0, 0xC01000
	0x034F2F78 LDR X0, [X0 + 0x9D0]
	0x034F2F7C BL 0x1C16CF4

ISIL:
	001 Subtract X31, X31, 176
	002 Move [X31+80], X29
	003 Move [X31+88], X30
	004 Move [X31+96], X28
	005 Move [X31+104], X27
	006 Move [X31+112], X26
	007 Move [X31+120], X25
	008 Move [X31+128], X24
	009 Move [X31+136], X23
	010 Move [X31+144], X22
	011 Move [X31+152], X21
	012 Move [X31+160], X20
	013 Move [X31+168], X19
	014 Move X20, 0xEEE000
	015 Move W8, [X20+2596]
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {71}
	021 Move X0, 0xC42000
	022 Move X0, [X0+2160]
	023 Call 0x1C17CF4
	024 Move X0, 0xC42000
	025 Move X0, [X0+2168]
	026 Call 0x1C17CF4
	027 Move X0, 0xC42000
	028 Move X0, [X0+2176]
	029 Call 0x1C17CF4
	030 Move X0, 0xC42000
	031 Move X0, [X0+2184]
	032 Call 0x1C17CF4
	033 Move X0, 0xC42000
	034 Move X0, [X0+1792]
	035 Call 0x1C17CF4
	036 Move X0, 0xC42000
	037 Move X0, [X0+1784]
	038 Call 0x1C17CF4
	039 Move X0, 0xC42000
	040 Move X0, [X0+1832]
	041 Call 0x1C17CF4
	042 Move X0, 0xC42000
	043 Move X0, [X0+1776]
	044 Call 0x1C17CF4
	045 Move X0, 0xC42000
	046 Move X0, [X0+2192]
	047 Call 0x1C17CF4
	048 Move X0, 0xC42000
	049 Move X0, [X0+2200]
	050 Call 0x1C17CF4
	051 Move X0, 0xC42000
	052 Move X0, [X0+2208]
	053 Call 0x1C17CF4
	054 Move X0, 0xC06000
	055 Move X0, [X0+1936]
	056 Call 0x1C17CF4
	057 Move X0, 0xC06000
	058 Move X0, [X0+1944]
	059 Call 0x1C17CF4
	060 Move X0, 0xC42000
	061 Move X0, [X0+1840]
	062 Call 0x1C17CF4
	063 Move X0, 0xC42000
	064 Move X0, [X0+2216]
	065 Call 0x1C17CF4
	066 Move X0, 0xC42000
	067 Move X0, [X0+2224]
	068 Call 0x1C17CF4
	069 Move W8, 1
	070 Move [X20+2596], W8
	071 Move [X31+72], X31
	072 Move [X31+68], W31
	073 Move [X31+64], W31
	074 Move [X31+60], W31
	075 Move [X31+40], X31
	076 Move [X31+48], X31
	077 Move [X31+24], X31
	078 Move [X31+32], X31
	079 Move X20, [X19+424]
	080 Compare X20, 0
	081 JumpIfEqual {479}
	082 Move W8, [X20+32]
	083 Move X25, 0xC42000
	084 Move X25, [X25+2200]
	085 Subtract W23, W8, 1
	086 Move [X31+68], W31
	087 Add X1, X31, 68
	088 Move X0, X20
	089 Move X2, X31
	090 Call Monitor.Enter, X0, X1
	091 Move X0, [X19+424]
	092 Compare X0, 0
	093 JumpIfEqual {116}
	094 Move X1, [X25]
	095 Call Queue`1<Object>.Dequeue, X0
	096 Move X1, X0
	097 Move X0, X19
	098 Call EnetPeer.ExecuteCommand, X0, X1
	099 Move X22, X31
	100 Move W21, 5
	101 Move W8, [X31+68]
	102 Compare W8, 0
	103 JumpIfEqual {107}
	104 Move X0, X20
	105 Move X1, X31
	106 Call Monitor.Exit, X0
	107 Compare X22, 0
	108 JumpIfNotEqual {477}
	109 NotImplemented "Instruction CMP not yet implemented."
	110 Compare W21, 0
	111 JumpIfNotEqual {377}
	112 Compare W23, 0
	113 JumpIfEqual {124}
	114 Move X20, [X19+424]
	115 Subtract W23, W23, 1
	116 Call 0x1C17F20
	117 Move X21, X0
	118 NotImplemented "Instruction CMP not yet implemented."
	119 Move X0, X21
	120 Call 0x3EB2AD0
	121 Move X22, [X0]
	122 Call 0x3EB2AE0
	123 Move W21, W31
	124 Move X23, 0xC42000
	125 Move X23, [X23+2208]
	126 Move X24, X31
	127 Move X20, [X19+96]
	128 Move [X31+64], W31
	129 Add X1, X31, 64
	130 Move X0, X20
	131 Move X2, X31
	132 Call Monitor.Enter, X0, X1
	133 Move X0, [X19+96]
	134 Compare X0, 0
	135 JumpIfEqual {162}
	136 Move W8, [X0+32]
	137 NotImplemented "Instruction CMP not yet implemented."
	138 Move X1, [X23]
	139 Call Queue`1<Object>.Dequeue, X0
	140 Move X22, X31
	141 Move W21, 10
	142 Move X24, X0
	143 Move X22, X31
	144 Move W21, 9
	145 Move W8, [X31+64]
	146 Compare W8, 0
	147 JumpIfEqual {151}
	148 Move X0, X20
	149 Move X1, X31
	150 Call Monitor.Exit, X0
	151 Compare X22, 0
	152 JumpIfNotEqual {477}
	153 Compare W21, 0
	154 JumpIfEqual {156}
	155 NotImplemented "Instruction CMP not yet implemented."
	156 Compare X24, 0
	157 JumpIfEqual {479}
	158 Move X8, [X24+24]
	159 Move X0, [X24+64]
	160 Move X1, [X24+40]
	161 NotImplemented "Instruction BLR not yet implemented."
	162 Call 0x1C17F20
	163 Move X21, X0
	164 NotImplemented "Instruction CMP not yet implemented."
	165 Move X0, X21
	166 Call 0x3EB2AD0
	167 Move X22, [X0]
	168 Call 0x3EB2AE0
	169 Move W21, W31
	170 NotImplemented "Instruction CMP not yet implemented."
	171 Move [X31+72], X31
	172 Move X0, [X19+392]
	173 Move [X31+60], W31
	174 Add X1, X31, 60
	175 Move X2, X31
	176 Move [X31+8], X0
	177 Call Monitor.Enter, X0, X1
	178 Move X8, [X19+392]
	179 Compare X8, 0
	180 JumpIfEqual {494}
	181 Move X27, 0xC42000
	182 Move X20, 0xC42000
	183 Move X25, 0xC42000
	184 Move X29, 0xC06000
	185 Move X26, 0xC42000
	186 Move X27, [X27+2176]
	187 Move X20, [X20+2184]
	188 Move X25, [X25+1776]
	189 Move X29, [X29+1936]
	190 Move X26, [X26+1792]
	191 Move W22, W31
	192 Move W9, [X8+24]
	193 NotImplemented "Instruction CMP not yet implemented."
	194 Add X8, X8, W22
	195 Move X28, [X8+32]
	196 Compare X28, 0
	197 JumpIfEqual {495}
	198 Move X8, [X28+40]
	199 Compare X8, 0
	200 JumpIfEqual {496}
	201 Move W9, [X8+32]
	202 NotImplemented "Instruction CMP not yet implemented."
	203 Move X0, [X28+32]
	204 Compare X0, 0
	205 JumpIfEqual {498}
	206 Move X8, 0xC42000
	207 Move X8, [X8+1832]
	208 Move X1, [X8]
	209 Call NonAllocDictionary`2<Int32, Object>.get_Count, X0
	210 NotImplemented "Instruction CMP not yet implemented."
	211 Move X0, [X28+32]
	212 Compare X0, 0
	213 JumpIfEqual {499}
	214 Move X8, 0xC42000
	215 Move X8, [X8+2192]
	216 Move X1, [X8]
	217 Call NonAllocDictionary`2<Int32, Object>.get_Keys, X0
	218 Move [X31+16], W22
	219 Move X8, 0xC42000
	220 Move X8, [X8+2168]
	221 Move [X31+24], X0
	222 Move [X31+32], X1
	223 Move X8, [X8]
	224 Add X0, X31, 24
	225 Move X1, X8
	226 Call KeyIterator<Int32, Object>.GetEnumerator, X0
	227 Move [X31+40], X0
	228 Move [X31+48], X1
	229 Move TEMP, 0x80000000
	230 Not TEMP
	231 Move W22, TEMP
	232 Move W21, W22
	233 Move X1, [X27]
	234 Add X0, X31, 40
	235 Call KeyIterator<Int32, Object>.MoveNext, X0
	236 Move TEMP, X0
	237 And TEMP, TEMP, 1
	238 Compare TEMP, 1
	239 JumpIfNotEqual {274}
	240 Move X1, [X20]
	241 Add X0, X31, 40
	242 Call KeyIterator<Int32, Object>.get_Current, X0
	243 Move W22, W0
	244 Move X0, [X28+32]
	245 Compare X0, 0
	246 JumpIfEqual {368}
	247 Move X2, [X25]
	248 Move W1, W22
	249 Call NonAllocDictionary`2<Int32, Object>.get_Item, X0, X1
	250 Move W8, [X28+76]
	251 NotImplemented "Instruction CMP not yet implemented."
	252 Compare X0, 0
	253 JumpIfEqual {371}
	254 Move W8, [X0+20]
	255 Move W9, [X28+72]
	256 NotImplemented "Instruction CMP not yet implemented."
	257 Move X8, [X19+16]
	258 Compare X8, 0
	259 JumpIfEqual {369}
	260 Move W9, [X8+264]
	261 Add W9, W9, 1
	262 Move [X8+264], W9
	263 Move X0, [X19+400]
	264 Compare X0, 0
	265 JumpIfEqual {370}
	266 Move X8, 0xC06000
	267 Move X8, [X8+1944]
	268 Move X2, [X8]
	269 Move W1, W22
	270 Call Queue`1<Int32>.Enqueue, X0, X1
	271 NotImplemented "Instruction CMP not yet implemented."
	272 NotImplemented "Instruction CMP not yet implemented."
	273 Move W22, W21
	274 Move X22, X31
	275 Move W23, 23
	276 Move X8, 0xC42000
	277 Move X8, [X8+2160]
	278 Move X1, [X8]
	279 Add X0, X31, 40
	280 Call KeyIterator<Int32, Object>.Dispose, X0
	281 Compare X22, 0
	282 JumpIfNotEqual {500}
	283 NotImplemented "Instruction CMP not yet implemented."
	284 Compare W23, 0
	285 JumpIfNotEqual {412}
	286 Move X22, [X28+32]
	287 Move X8, [X19+400]
	288 Compare X8, 0
	289 JumpIfEqual {474}
	290 Move W9, [X8+32]
	291 NotImplemented "Instruction CMP not yet implemented."
	292 Move X1, [X29]
	293 Move X0, X8
	294 Call Queue`1<Int32>.Dequeue, X0
	295 Compare X22, 0
	296 JumpIfEqual {475}
	297 Move X2, [X25]
	298 Move W24, W0
	299 Move X0, X22
	300 Move W1, W24
	301 Call NonAllocDictionary`2<Int32, Object>.get_Item, X0, X1
	302 Move X2, [X26]
	303 Move X23, X0
	304 Move X0, X22
	305 Move W1, W24
	306 Call NonAllocDictionary`2<Int32, Object>.Remove, X0, X1
	307 Compare X23, 0
	308 JumpIfEqual {476}
	309 Move X0, X23
	310 Call NCommand.FreePayload, X0
	311 Move X0, X23
	312 Call NCommand.Release, X0
	313 Move TEMP, 0x80000000
	314 Not TEMP
	315 Move W8, TEMP
	316 NotImplemented "Instruction CMP not yet implemented."
	317 Move X8, [X31+72]
	318 Move W22, [X31+16]
	319 Compare X8, 0
	320 JumpIfEqual {341}
	321 Move X8, [X31+72]
	322 Compare X8, 0
	323 JumpIfNotEqual {364}
	324 Move X8, [X19+16]
	325 Move W22, [X31+16]
	326 Compare X8, 0
	327 JumpIfEqual {504}
	328 Move W9, [X28+76]
	329 Subtract W9, W21, W9
	330 Move [X8+268], W9
	331 Move X0, [X28+32]
	332 Compare X0, 0
	333 JumpIfEqual {503}
	334 Move X2, [X25]
	335 Move W1, W21
	336 Call NonAllocDictionary`2<Int32, Object>.get_Item, X0, X1
	337 Move X8, X0
	338 Move [X31+72], X0
	339 Compare X8, 0
	340 JumpIfNotEqual {399}
	341 Compare X8, 0
	342 JumpIfNotEqual {364}
	343 Move X0, [X28+24]
	344 Compare X0, 0
	345 JumpIfEqual {502}
	346 Move X8, 0xC42000
	347 Move X8, [X8+1832]
	348 Move X1, [X8]
	349 Call NonAllocDictionary`2<Int32, Object>.get_Count, X0
	350 NotImplemented "Instruction CMP not yet implemented."
	351 Move X0, [X28+24]
	352 Compare X0, 0
	353 JumpIfEqual {505}
	354 Move X9, 0xC42000
	355 Move W8, [X28+72]
	356 Move X9, [X9+1784]
	357 Add W1, W8, 1
	358 Move X3, [X9]
	359 Add X2, X31, 72
	360 Call NonAllocDictionary`2<Int32, Object>.TryGetValue, X0, X1, X2
	361 Move X8, [X31+72]
	362 Compare X8, 0
	363 JumpIfNotEqual {413}
	364 Move X8, [X19+392]
	365 Add W22, W22, 1
	366 Compare X8, 0
	367 JumpIfNotEqual {192}
	368 Call 0x1C17F20
	369 Call 0x1C17F20
	370 Call 0x1C17F20
	371 Call 0x1C17F20
	372 NotImplemented "Instruction CMP not yet implemented."
	373 Call 0x3EB2AD0
	374 Move X22, [X0]
	375 Call 0x3EB2AE0
	376 Move W23, W31
	377 Move X20, [X31+160]
	378 Move X19, [X31+168]
	379 Move X22, [X31+144]
	380 Move X21, [X31+152]
	381 Move X24, [X31+128]
	382 Move X23, [X31+136]
	383 Move X26, [X31+112]
	384 Move X25, [X31+120]
	385 Move X28, [X31+96]
	386 Move X27, [X31+104]
	387 Move X29, [X31+80]
	388 Move X30, [X31+88]
	389 And W0, W8, 1
	390 Add X31, X31, 176
	391 Return X0
	392 Move X9, 0xC42000
	393 Move X9, [X9+2200]
	394 Move X1, [X9]
	395 Move X0, X8
	396 Call Queue`1<Object>.Dequeue, X0
	397 Move X22, X31
	398 Move [X31+72], X0
	399 Move X0, [X28+32]
	400 Compare X0, 0
	401 JumpIfEqual {506}
	402 Move W1, [X8+24]
	403 Move X2, [X26]
	404 Call NonAllocDictionary`2<Int32, Object>.Remove, X0, X1
	405 Move X8, [X31+72]
	406 Compare X8, 0
	407 JumpIfEqual {507}
	408 Move W8, [X8+24]
	409 Move X22, X31
	410 Move W23, 36
	411 Move [X28+76], W8
	412 Move X22, X31
	413 Move W9, [X8+17]
	414 NotImplemented "Instruction CMP not yet implemented."
	415 Move W9, [X8+56]
	416 NotImplemented "Instruction CMP not yet implemented."
	417 Move X22, X31
	418 Move [X31+72], X31
	419 Move W1, [X8+20]
	420 Move X0, [X28+24]
	421 Move [X28+72], W1
	422 Compare X0, 0
	423 JumpIfEqual {508}
	424 Move X2, [X26]
	425 Call NonAllocDictionary`2<Int32, Object>.Remove, X0, X1
	426 Move W1, [X8+20]
	427 Move W8, [X8+40]
	428 Move X0, [X28+24]
	429 Add W8, W1, W8
	430 Subtract W8, W8, 1
	431 Move [X28+72], W8
	432 Compare X0, 0
	433 JumpIfEqual {509}
	434 Move X2, [X26]
	435 Call NonAllocDictionary`2<Int32, Object>.Remove, X0, X1
	436 Move X22, X31
	437 Move W23, 36
	438 Move W8, [X31+60]
	439 Compare W8, 0
	440 JumpIfEqual {444}
	441 Move X0, [X31+8]
	442 Move X1, X31
	443 Call Monitor.Exit, X0
	444 Compare X22, 0
	445 JumpIfNotEqual {477}
	446 NotImplemented "Instruction CMP not yet implemented."
	447 Compare W23, 0
	448 JumpIfNotEqual {377}
	449 Move X8, [X31+72]
	450 Compare X8, 0
	451 JumpIfEqual {377}
	452 Move X1, [X8+88]
	453 Compare X1, 0
	454 JumpIfEqual {473}
	455 Move W9, [X8+84]
	456 Move X10, [X19]
	457 Move [X19+80], X8
	458 Move X0, X19
	459 Move [X19+72], W9
	460 Move X8, [X10+632]
	461 Move X2, [X10+640]
	462 NotImplemented "Instruction BLR not yet implemented."
	463 Move [X19+80], X31
	464 Move X0, [X31+72]
	465 Compare X0, 0
	466 JumpIfEqual {479}
	467 Call NCommand.FreePayload, X0
	468 Move X0, [X31+72]
	469 Compare X0, 0
	470 JumpIfEqual {479}
	471 Call NCommand.Release, X0
	472 Move W8, 1
	473 Move W8, W31
	474 Call 0x1C17F20
	475 Call 0x1C17F20
	476 Call 0x1C17F20
	477 Move X0, X22
	478 Call 0x1C17F18
	479 Call 0x1C17F20
	480 Move [X31+16], X1
	481 Move X21, X0
	482 Move X22, X31
	483 Move X8, 0xC42000
	484 Move X8, [X8+2160]
	485 Move X1, [X8]
	486 Add X0, X31, 40
	487 Call KeyIterator<Int32, Object>.Dispose, X0
	488 Move X1, [X31+16]
	489 Move X0, X21
	490 Compare X22, 0
	491 JumpIfEqual {536}
	492 Move X0, X22
	493 Call 0x1C17F18
	494 Call 0x1C17F20
	495 Call 0x1C17F20
	496 Call 0x1C17F20
	497 Call 0x1C17F28
	498 Call 0x1C17F20
	499 Call 0x1C17F20
	500 Move X0, X22
	501 Call 0x1C17F18
	502 Call 0x1C17F20
	503 Call 0x1C17F20
	504 Call 0x1C17F20
	505 Call 0x1C17F20
	506 Call 0x1C17F20
	507 Call 0x1C17F20
	508 Call 0x1C17F20
	509 Call 0x1C17F20
	510 Move X22, X31
	511 Move X22, X31
	512 Move X21, X0
	513 Move W8, [X31+68]
	514 Compare W8, 0
	515 JumpIfEqual {519}
	516 Move X0, X20
	517 Move X1, X31
	518 Call Monitor.Exit, X0
	519 Compare X22, 0
	520 JumpIfEqual {552}
	521 Move X0, X22
	522 Call 0x1C17F18
	523 Move X21, X0
	524 Move [X31+16], X1
	525 Move X21, X0
	526 Move W8, [X31+64]
	527 Compare W8, 0
	528 JumpIfEqual {532}
	529 Move X0, X20
	530 Move X1, X31
	531 Call Monitor.Exit, X0
	532 Compare X22, 0
	533 JumpIfEqual {552}
	534 Move X0, X22
	535 Call 0x1C17F18
	536 NotImplemented "Instruction CMP not yet implemented."
	537 Call 0x3EB2AD0
	538 Move X22, [X0]
	539 Call 0x3EB2AE0
	540 Move W23, W31
	541 Move X21, X0
	542 Move X22, X31
	543 Move X21, X0
	544 Move W8, [X31+60]
	545 Compare W8, 0
	546 JumpIfEqual {550}
	547 Move X0, [X31+8]
	548 Move X1, X31
	549 Call Monitor.Exit, X0
	550 Compare X22, 0
	551 JumpIfNotEqual {554}
	552 Move X0, X21
	553 Call 0x1D2D690
	554 Move X0, X22
	555 Call 0x1C17F18
	556 Call 0x1991590

Method: System.Int32 GetFragmentLength()

Disassembly:
	0x034F3CC4 MOV X1, X21
	0x034F3CC8 MOV W2, W20
	0x034F3CCC BL 0x34F6180
	0x034F3CD0 LDP X20, X19, [X31 + 0x30]
	0x034F3CD4 LDP X22, X21, [X31 + 0x20]
	0x034F3CD8 LDP X30, X23, [X31 + 0x10]
	0x034F3CDC ADD X31, X31, 0x40
	0x034F3CE0 RET
	0x034F3CE4 BL 0x1C16F20
	0x034F3CE8 BL 0x1C16F20
	0x034F3CEC BL 0x1C16F28
	0x034F3CF0 BL 0x1C16F28
	0x034F3CF4 BL 0x1C16F20
	0x034F3CF8 BL 0x1C16F20
	0x034F3CFC B 0x34F3D38
	0x034F3D00 B 0x34F3D38
	0x034F3D04 B 0x34F3D38
	0x034F3D08 B 0x34F3D38
	0x034F3D0C B 0x34F3D38
	0x034F3D10 B 0x34F3D38
	0x034F3D14 B 0x34F3D38
	0x034F3D18 B 0x34F3D38
	0x034F3D1C B 0x34F3D38
	0x034F3D20 B 0x34F3D38
	0x034F3D24 B 0x34F3D38
	0x034F3D28 B 0x34F3D38
	0x034F3D2C B 0x34F3D38
	0x034F3D30 B 0x34F3D38
	0x034F3D34 B 0x34F3D38
	0x034F3D38 MOV X20, X0
	0x034F3D3C CMP W1, 0x1
	0x034F3D40 B.NE 0x34F3E64
	0x034F3D44 MOV X0, X20
	0x034F3D48 BL 0x3EB1AD0
	0x034F3D4C MOV X20, X0
	0x034F3D50 ADRP X0, 0xC00000
	0x034F3D54 LDR X0, [X0 + 0x7D0]
	0x034F3D58 BL 0x1C16D08
	0x034F3D5C LDR X8, [X20]
	0x034F3D60 LDR X1, [X8]
	0x034F3D64 BL 0x1C17270
	0x034F3D68 TBZ X0, 0x0, 0x34F3E3C
	0x034F3D6C LDR X20, [X20]
	0x034F3D70 BL 0x3EB1AE0
	0x034F3D74 LDR X8, [X19 + 0x10]
	0x034F3D78 CBZ X8, 0x34F3E38
	0x034F3D7C LDRB W9, [X8 + 0x40]
	0x034F3D80 CBZ W9, 0x34F3E10
	0x034F3D84 CBZ X20, 0x34F3E38
	0x034F3D88 LDR X9, [X20]
	0x034F3D8C LDR X19, [X8 + 0x48]
	0x034F3D90 MOV X0, X20
	0x034F3D94 LDP X8, X1, [X9 + 0x168]
	0x034F3D98 BLR X8
	0x034F3D9C CBZ X19, 0x34F3E38
	0x034F3DA0 MOV X21, X0
	0x034F3DA4 ADRP X0, 0xC08000
	0x034F3DA8 LDR X0, [X0 + 0xBC8]
	0x034F3DAC BL 0x1C16D08
	0x034F3DB0 LDR X8, [X19]
	0x034F3DB4 MOV X1, X0
	0x034F3DB8 LDRH W9, [X8 + 0x12E]
	0x034F3DBC CBZ X9, 0x34F3DE0
	0x034F3DC0 LDR X10, [X8 + 0xB0]
	0x034F3DC4 ADD X10, X10, 0x8
	0x034F3DC8 LDUR X11, [X10 - 0x8]
	0x034F3DCC CMP X11, X1
	0x034F3DD0 B.EQ 0x34F3DF0
	0x034F3DD4 SUBS X9, X9, 0x1
	0x034F3DD8 ADD X10, X10, 0x10
	0x034F3DDC B.NE 0x34F3DC8
	0x034F3DE0 MOV X0, X19
	0x034F3DE4 MOV W2, W31
	0x034F3DE8 BL 0x1C5C788
	0x034F3DEC B 0x34F3DFC
	0x034F3DF0 LDRSW X9, [X10]
	0x034F3DF4 ADD X8, X8, X9, 0x4, LSL
	0x034F3DF8 ADD X0, X8, 0x138

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xEED000
	006 Move W8, [X20+2597]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xC09000
	013 Move X0, [X0+3288]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+2597], W8
	017 Move W8, [X19+408]
	018 Compare W8, 0
	019 JumpIfEqual {27}
	020 Move X0, [X19+16]
	021 Compare X0, 0
	022 JumpIfEqual {89}
	023 Move X1, X31
	024 Call PhotonPeer.get_MaximumTransferUnit, X0
	025 Move W8, [X19+416]
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move X0, [X19+16]
	028 Compare X0, 0
	029 JumpIfEqual {89}
	030 Move X1, X31
	031 Call PhotonPeer.get_MaximumTransferUnit, X0
	032 Move X8, [X19+16]
	033 Move [X19+416], W0
	034 Compare X8, 0
	035 JumpIfEqual {89}
	036 Move X0, X8
	037 Move X1, X31
	038 Call PhotonPeer.get_MaximumTransferUnit, X0
	039 Move X8, [X19+16]
	040 Subtract W9, W0, 48
	041 Move [X19+408], W9
	042 Compare X8, 0
	043 JumpIfEqual {89}
	044 Move X20, [X8+256]
	045 NotImplemented "Instruction CMP not yet implemented."
	046 NotImplemented "Instruction CSEL not yet implemented."
	047 Compare X20, 0
	048 JumpIfEqual {65}
	049 Move X10, 0xC09000
	050 Move X8, [X20]
	051 Move X10, [X10+3288]
	052 NotImplemented "Instruction LDRH not yet implemented."
	053 Move X1, [X10]
	054 Compare X9, 0
	055 JumpIfEqual {62}
	056 Move X10, [X8+176]
	057 Add X10, X10, 8
	058 NotImplemented "Instruction LDUR not yet implemented."
	059 NotImplemented "Instruction CMP not yet implemented."
	060 Subtract X9, X9, 1
	061 Add X10, X10, 16
	062 Move W2, 4
	063 Move X0, X20
	064 Call 0x1C5D788
	065 Move W0, W31
	066 Move X21, X19
	067 Move W9, [X10]
	068 Add W9, W9, 4
	069 Add X8, X8, W9
	070 Add X0, X8, 312
	071 Move X8, [X0]
	072 Move X1, [X0+8]
	073 Move X0, X20
	074 NotImplemented "Instruction BLR not yet implemented."
	075 Compare X21, 0
	076 JumpIfEqual {89}
	077 Move [X21+412], W0
	078 Move W8, [X19+388]
	079 Move W9, 412
	080 NotImplemented "Instruction CMP not yet implemented."
	081 Move W8, 408
	082 NotImplemented "Instruction CSEL not yet implemented."
	083 Move W0, [X19]
	084 Move X20, [X31+16]
	085 Move X19, [X31+24]
	086 Move X30, [X31+32]
	087 Move X21, [X31+40]
	088 Return X0
	089 Call 0x1C17F20

Method: System.Int32 CalculatePacketSize(System.Int32 inSize)

Disassembly:
	0x034F3DFC LDP X8, X3, [X0]
	0x034F3E00 MOVZ W1, 0x1
	0x034F3E04 MOV X0, X19
	0x034F3E08 MOV X2, X21
	0x034F3E0C BLR X8
	0x034F3E10 ADRP X0, 0xC08000
	0x034F3E14 LDR X0, [X0 + 0xE60]
	0x034F3E18 BL 0x1C16D08
	0x034F3E1C LDR W8, [X0 + 0xE0]
	0x034F3E20 CBNZ W8, 0x34F3E28
	0x034F3E24 BL 0x1C16DFC
	0x034F3E28 MOV X0, X20
	0x034F3E2C MOV X1, X31
	0x034F3E30 BL 0x3520158
	0x034F3E34 B 0x34F3CD0
	0x034F3E38 BL 0x1C16F20
	0x034F3E3C MOVZ W0, 0x8
	0x034F3E40 BL 0x3EB1AF0
	0x034F3E44 LDR X8, [X20]
	0x034F3E48 STR X8, [X0]
	0x034F3E4C ADRP X1, 0x9C1000
	0x034F3E50 ADD X1, X1, 0xE58
	0x034F3E54 MOV X2, X31
	0x034F3E58 BL 0x3EB1B00
	0x034F3E5C MOV X20, X0
	0x034F3E60 BL 0x3EB1AE0
	0x034F3E64 MOV X0, X20
	0x034F3E68 BL 0x1D2C690
	0x034F3E6C BL 0x1990590
	0x034F3E70 SUB X31, X31, 0x90
	0x034F3E74 STP X29, X30, [X31 + 0x30]
	0x034F3E78 STP X28, X27, [X31 + 0x40]
	0x034F3E7C STP X26, X25, [X31 + 0x50]
	0x034F3E80 STP X24, X23, [X31 + 0x60]
	0x034F3E84 STP X22, X21, [X31 + 0x70]
	0x034F3E88 STP X20, X19, [X31 + 0x80]
	0x034F3E8C ADRP X19, 0xEEC000
	0x034F3E90 LDRB W8, [X19 + 0xA28]
	0x034F3E94 MOV X20, X0
	0x034F3E98 TBNZ X8, 0x0, 0x34F3F10
	0x034F3E9C ADRP X0, 0xC09000
	0x034F3EA0 LDR X0, [X0 + 0x9E8]
	0x034F3EA4 BL 0x1C16CF4
	0x034F3EA8 ADRP X0, 0xC08000
	0x034F3EAC LDR X0, [X0 + 0xBC8]
	0x034F3EB0 BL 0x1C16CF4
	0x034F3EB4 ADRP X0, 0xC00000
	0x034F3EB8 LDR X0, [X0 + 0x758]
	0x034F3EBC BL 0x1C16CF4
	0x034F3EC0 ADRP X0, 0xC40000
	0x034F3EC4 LDR X0, [X0 + 0x738]
	0x034F3EC8 BL 0x1C16CF4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xEED000
	006 Move W8, [X21+2598]
	007 Move W20, W1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xC09000
	014 Move X0, [X0+3288]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+2598], W8
	018 Move W8, [X19+388]
	019 Compare W8, 0
	020 JumpIfEqual {44}
	021 Move X8, [X19+16]
	022 Compare X8, 0
	023 JumpIfEqual {63}
	024 Move X19, [X8+256]
	025 Compare X19, 0
	026 JumpIfEqual {63}
	027 Move X10, 0xC09000
	028 Move X8, [X19]
	029 Move X10, [X10+3288]
	030 Add W20, W20, 7
	031 NotImplemented "Instruction LDRH not yet implemented."
	032 Move X1, [X10]
	033 Compare X9, 0
	034 JumpIfEqual {41}
	035 Move X10, [X8+176]
	036 Add X10, X10, 8
	037 NotImplemented "Instruction LDUR not yet implemented."
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Subtract X9, X9, 1
	040 Add X10, X10, 16
	041 Move W2, 3
	042 Move X0, X19
	043 Call 0x1C5D788
	044 Move W0, W20
	045 Move X20, [X31+16]
	046 Move X19, [X31+24]
	047 Move X30, [X31+32]
	048 Move X21, [X31+40]
	049 Return X0
	050 Move W9, [X10]
	051 Add W9, W9, 3
	052 Add X8, X8, W9
	053 Add X0, X8, 312
	054 Move X3, [X0]
	055 Move X2, [X0+8]
	056 Move X0, X19
	057 Move W1, W20
	058 Move X20, [X31+16]
	059 Move X19, [X31+24]
	060 Move X30, [X31+32]
	061 Move X21, [X31+40]
	062 CallNoReturn X3
	063 Call 0x1C17F20

Method: System.Int32 CalculateInitialOffset()

Disassembly:
	0x034F3ECC ADRP X0, 0xC40000
	0x034F3ED0 LDR X0, [X0 + 0x918]
	0x034F3ED4 BL 0x1C16CF4
	0x034F3ED8 ADRP X0, 0xC00000
	0x034F3EDC LDR X0, [X0 + 0x9D0]
	0x034F3EE0 BL 0x1C16CF4
	0x034F3EE4 ADRP X0, 0xC40000
	0x034F3EE8 LDR X0, [X0 + 0x938]
	0x034F3EEC BL 0x1C16CF4
	0x034F3EF0 ADRP X0, 0xC40000
	0x034F3EF4 LDR X0, [X0 + 0x940]
	0x034F3EF8 BL 0x1C16CF4
	0x034F3EFC ADRP X0, 0xC40000
	0x034F3F00 LDR X0, [X0 + 0x948]
	0x034F3F04 BL 0x1C16CF4
	0x034F3F08 MOVZ W8, 0x1

ISIL:
	001 Move [X31-16], X30
	002 Move W8, [X0+388]
	003 Compare W8, 0
	004 JumpIfEqual {6}
	005 Move W0, 5
	006 Move X0, [X0+16]
	007 Compare X0, 0
	008 JumpIfEqual {17}
	009 Move X1, X31
	010 Call PhotonPeer.get_CrcEnabled, X0
	011 And W31, W0, 1
	012 Move W8, 12
	013 Move W9, 16
	014 NotImplemented "Instruction CSEL not yet implemented."
	015 Move X30, [X31+16]
	016 Return X0
	017 Call 0x1C17F20

Method: System.Boolean SendAcksOnly()

Disassembly:
	0x034F3F0C STRB W8, [X19 + 0xA28]
	0x034F3F10 STRB W31, [X31 + 0x28]
	0x034F3F14 STRB W31, [X31 + 0x24]
	0x034F3F18 STRB W31, [X31 + 0x20]
	0x034F3F1C STRB W31, [X31 + 0x1C]
	0x034F3F20 LDRB W8, [X20 + 0x40]
	0x034F3F24 CBZ W8, 0x34F3FD4
	0x034F3F28 LDR X8, [X20 + 0x28]
	0x034F3F2C CBZ X8, 0x34F490C
	0x034F3F30 LDR W8, [X8 + 0x1C]
	0x034F3F34 CMP W8, 0x2
	0x034F3F38 B.NE 0x34F3FD4
	0x034F3F3C LDR X19, [X20 + 0x158]
	0x034F3F40 STRB W31, [X31 + 0x2C]
	0x034F3F44 ADD X1, X31, 0x2C
	0x034F3F48 MOV X0, X19
	0x034F3F4C MOV X2, X31
	0x034F3F50 BL 0x33DE64C
	0x034F3F54 MOV X0, X20
	0x034F3F58 BL 0x34F2ECC
	0x034F3F5C LDR X8, [X20 + 0xC0]
	0x034F3F60 STR W0, [X20 + 0x160]
	0x034F3F64 STRB W31, [X20 + 0x150]
	0x034F3F68 CBZ X8, 0x34F4920
	0x034F3F6C MOV X0, X8
	0x034F3F70 MOV X1, X31
	0x034F3F74 BL 0x364C19C
	0x034F3F78 LDR X22, [X20 + 0x138]
	0x034F3F7C STR W0, [X20 + 0xD8]
	0x034F3F80 STRB W31, [X31 + 0x28]
	0x034F3F84 ADD X1, X31, 0x28
	0x034F3F88 MOV X0, X22
	0x034F3F8C MOV X2, X31
	0x034F3F90 BL 0x33DE64C
	0x034F3F94 LDR X0, [X20 + 0x138]
	0x034F3F98 CBZ X0, 0x34F4924
	0x034F3F9C MOV X1, X31
	0x034F3FA0 BL 0x351806C
	0x034F3FA4 CMP W0, 0x0
	0x034F3FA8 B.LE 0x34F3FDC
	0x034F3FAC MOV X0, X20
	0x034F3FB0 BL 0x34F3734
	0x034F3FB4 MOV W21, W0
	0x034F3FB8 LDR X0, [X20 + 0xC0]
	0x034F3FBC CBZ X0, 0x34F493C
	0x034F3FC0 MOV X1, X31
	0x034F3FC4 BL 0x364C19C
	0x034F3FC8 MOV X25, X31
	0x034F3FCC STR W0, [X20 + 0xD4]
	0x034F3FD0 B 0x34F3FE4
	0x034F3FD4 MOV W21, W31
	0x034F3FD8 B 0x34F48AC
	0x034F3FDC MOV X25, X31
	0x034F3FE0 MOV W21, W31
	0x034F3FE4 MOVZ W23, 0x6
	0x034F3FE8 LDRB W8, [X31 + 0x28]
	0x034F3FEC CBZ W8, 0x34F3FFC
	0x034F3FF0 MOV X0, X22
	0x034F3FF4 MOV X1, X31
	0x034F3FF8 BL 0x33E14E4
	0x034F3FFC CBNZ X25, 0x34F4928
	0x034F4000 CMP W23, 0x6
	0x034F4004 B.EQ 0x34F400C
	0x034F4008 CBNZ W23, 0x34F488C
	0x034F400C LDR X0, [X20 + 0xC0]
	0x034F4010 CBZ X0, 0x34F4938
	0x034F4014 MOV X1, X31
	0x034F4018 BL 0x364C19C
	0x034F401C LDR W8, [X20 + 0xC8]
	0x034F4020 CMP W8, W0
	0x034F4024 B.GE 0x34F45EC
	0x034F4028 LDR X8, [X20 + 0x128]
	0x034F402C CBZ X8, 0x34F4978
	0x034F4030 LDR W8, [X8 + 0x18]
	0x034F4034 CMP W8, 0x1
	0x034F4038 B.LT 0x34F45EC
	0x034F403C LDR X0, [X20 + 0xC0]
	0x034F4040 CBZ X0, 0x34F49B4
	0x034F4044 MOV X1, X31
	0x034F4048 BL 0x364C19C
	0x034F404C MOV X24, X0
	0x034F4050 LDR X0, [X20 + 0x128]
	0x034F4054 STRB W31, [X31 + 0x24]
	0x034F4058 ADD X1, X31, 0x24
	0x034F405C MOV X2, X31
	0x034F4060 STR X0, [X31]
	0x034F4064 BL 0x33DE64C
	0x034F4068 LDR X0, [X20 + 0x128]
	0x034F406C CBZ X0, 0x34F436C
	0x034F4070 ADRP X27, 0xC3F000
	0x034F4074 ADRP X28, 0xBFF000
	0x034F4078 LDR X27, [X27 + 0x918]
	0x034F407C LDR X28, [X28 + 0x758]
	0x034F4080 MOV W29, W31
	0x034F4084 MOV W23, W31
	0x034F4088 ADD W22, W24, 0x64
	0x034F408C LDR W8, [X0 + 0x18]
	0x034F4090 CMP W23, W8
	0x034F4094 B.GE 0x34F4370
	0x034F4098 LDR X2, [X27]
	0x034F409C MOV W1, W23
	0x034F40A0 BL 0x301BCCC
	0x034F40A4 MOV X24, X0
	0x034F40A8 CBZ X0, 0x34F48E4
	0x034F40AC LDR X0, [X20 + 0xC0]
	0x034F40B0 CBZ X0, 0x34F48E0
	0x034F40B4 LDR W25, [X24 + 0x3C]
	0x034F40B8 LDR W26, [X24 + 0x44]
	0x034F40BC MOV X1, X31
	0x034F40C0 BL 0x364C19C
	0x034F40C4 ADD W8, W26, W25
	0x034F40C8 CMP W8, W0
	0x034F40CC B.GE 0x34F42FC
	0x034F40D0 LDR X8, [X20 + 0x10]
	0x034F40D4 CBZ X8, 0x34F4910
	0x034F40D8 LDRB W9, [X24 + 0x40]
	0x034F40DC LDR W10, [X8 + 0x70]
	0x034F40E0 CMP W10, W9
	0x034F40E4 B.LT 0x34F438C
	0x034F40E8 LDR X0, [X20 + 0xC0]
	0x034F40EC CBZ X0, 0x34F4914
	0x034F40F0 MOV X1, X31
	0x034F40F4 BL 0x364C19C
	0x034F40F8 LDR W8, [X24 + 0x48]
	0x034F40FC CMP W8, W0
	0x034F4100 B.LT 0x34F4384
	0x034F4104 MOVZ W2, 0x1
	0x034F4108 MOV X0, X20
	0x034F410C MOV X1, X24
	0x034F4110 BL 0x34F39CC
	0x034F4114 TBZ X0, 0x0, 0x34F4308
	0x034F4118 LDR X8, [X20 + 0x10]
	0x034F411C CBZ X8, 0x34F4930
	0x034F4120 LDRB W9, [X8 + 0x40]
	0x034F4124 CMP W9, 0x4
	0x034F4128 B.LS 0x34F4354
	0x034F412C LDR X25, [X8 + 0x48]
	0x034F4130 ADRP X8, 0xBFF000
	0x034F4134 LDR X8, [X8 + 0x9D0]
	0x034F4138 LDR X0, [X8]
	0x034F413C MOVZ W1, 0x5
	0x034F4140 BL 0x1C16D6C
	0x034F4144 MOV X26, X0
	0x034F4148 CBZ X0, 0x34F4974
	0x034F414C LDR X8, [X26]
	0x034F4150 LDR X1, [X8 + 0x40]
	0x034F4154 MOV X0, X24
	0x034F4158 BL 0x1C16E00
	0x034F415C CBZ X0, 0x34F4968
	0x034F4160 LDR W8, [X26 + 0x18]
	0x034F4164 CBZ W8, 0x34F4964
	0x034F4168 STR X24, [X26 + 0x20]
	0x034F416C LDR X0, [X20 + 0xC0]
	0x034F4170 CBZ X0, 0x34F4960
	0x034F4174 MOV X1, X31
	0x034F4178 BL 0x364C19C
	0x034F417C LDR X8, [X28]
	0x034F4180 STR W0, [X31 + 0x18]
	0x034F4184 ADD X1, X31, 0x18
	0x034F4188 MOV X0, X8
	0x034F418C BL 0x1C16E04
	0x034F4190 MOV X24, X0
	0x034F4194 CBZ X0, 0x34F41AC
	0x034F4198 LDR X8, [X26]
	0x034F419C LDR X1, [X8 + 0x40]
	0x034F41A0 MOV X0, X24
	0x034F41A4 BL 0x1C16E00
	0x034F41A8 CBZ X0, 0x34F4984
	0x034F41AC LDR W8, [X26 + 0x18]
	0x034F41B0 CMP W8, 0x1
	0x034F41B4 B.LS 0x34F4948
	0x034F41B8 STR X24, [X26 + 0x28]
	0x034F41BC LDR W8, [X20 + 0x74]
	0x034F41C0 LDR X0, [X28]
	0x034F41C4 STR W8, [X31 + 0x14]
	0x034F41C8 ADD X1, X31, 0x14
	0x034F41CC BL 0x1C16E04
	0x034F41D0 MOV X24, X0
	0x034F41D4 CBZ X0, 0x34F41EC
	0x034F41D8 LDR X8, [X26]
	0x034F41DC LDR X1, [X8 + 0x40]
	0x034F41E0 MOV X0, X24
	0x034F41E4 BL 0x1C16E00
	0x034F41E8 CBZ X0, 0x34F4990
	0x034F41EC LDR W8, [X26 + 0x18]
	0x034F41F0 CMP W8, 0x2
	0x034F41F4 B.LS 0x34F494C
	0x034F41F8 STR X24, [X26 + 0x30]
	0x034F41FC LDR W8, [X20 + 0x78]
	0x034F4200 LDR X0, [X28]
	0x034F4204 STR W8, [X31 + 0x10]
	0x034F4208 ADD X1, X31, 0x10
	0x034F420C BL 0x1C16E04
	0x034F4210 MOV X24, X0
	0x034F4214 CBZ X0, 0x34F422C
	0x034F4218 LDR X8, [X26]
	0x034F421C LDR X1, [X8 + 0x40]
	0x034F4220 MOV X0, X24
	0x034F4224 BL 0x1C16E00
	0x034F4228 CBZ X0, 0x34F499C
	0x034F422C LDR W8, [X26 + 0x18]
	0x034F4230 CMP W8, 0x3
	0x034F4234 B.LS 0x34F4950
	0x034F4238 STR X24, [X26 + 0x38]
	0x034F423C LDR X0, [X20 + 0xC0]
	0x034F4240 CBZ X0, 0x34F495C
	0x034F4244 MOV X1, X31
	0x034F4248 BL 0x364C19C
	0x034F424C LDR W9, [X20 + 0x88]
	0x034F4250 LDR X8, [X28]
	0x034F4254 SUB W9, W0, W9
	0x034F4258 STR W9, [X31 + 0xC]
	0x034F425C ADD X1, X31, 0xC
	0x034F4260 MOV X0, X8
	0x034F4264 BL 0x1C16E04
	0x034F4268 MOV X24, X0
	0x034F426C CBZ X0, 0x34F4284
	0x034F4270 LDR X8, [X26]
	0x034F4274 LDR X1, [X8 + 0x40]
	0x034F4278 MOV X0, X24
	0x034F427C BL 0x1C16E00
	0x034F4280 CBZ X0, 0x34F49A8
	0x034F4284 LDR W8, [X26 + 0x18]
	0x034F4288 CMP W8, 0x4
	0x034F428C B.LS 0x34F4954
	0x034F4290 STR X24, [X26 + 0x40]
	0x034F4294 ADRP X8, 0xC3F000
	0x034F4298 LDR X8, [X8 + 0x938]
	0x034F429C LDR X0, [X8]
	0x034F42A0 MOV X1, X26
	0x034F42A4 MOV X2, X31
	0x034F42A8 BL 0x3227C5C
	0x034F42AC CBZ X25, 0x34F4958
	0x034F42B0 LDR X8, [X25]
	0x034F42B4 ADRP X10, 0xC07000
	0x034F42B8 MOV X24, X0
	0x034F42BC LDRH W9, [X8 + 0x12E]
	0x034F42C0 LDR X10, [X10 + 0xBC8]
	0x034F42C4 LDR X1, [X10]
	0x034F42C8 CBZ X9, 0x34F42EC
	0x034F42CC LDR X10, [X8 + 0xB0]
	0x034F42D0 ADD X10, X10, 0x8
	0x034F42D4 LDUR X11, [X10 - 0x8]
	0x034F42D8 CMP X11, X1
	0x034F42DC B.EQ 0x34F4334
	0x034F42E0 SUBS X9, X9, 0x1
	0x034F42E4 ADD X10, X10, 0x10
	0x034F42E8 B.NE 0x34F42D4
	0x034F42EC MOV X0, X25
	0x034F42F0 MOV W2, W31
	0x034F42F4 BL 0x1C5C788
	0x034F42F8 B 0x34F4340
	0x034F42FC CMP W8, W22
	0x034F4300 CSEL W22, W8, W22, LT
	0x034F4304 B 0x34F4360
	0x034F4308 LDR X0, [X20 + 0x10]
	0x034F430C CBZ X0, 0x34F4934
	0x034F4310 LDR W22, [X20 + 0xC8]
	0x034F4314 MOV X1, X31
	0x034F4318 BL 0x350243C
	0x034F431C LDR W8, [X20 + 0x160]
	0x034F4320 ADD W29, W29, 0x1
	0x034F4324 SUB W8, W0, W8
	0x034F4328 CMP W8, 0x50
	0x034F432C B.GE 0x34F4360
	0x034F4330 B 0x34F4370
	0x034F4334 LDRSW X9, [X10]
	0x034F4338 ADD X8, X8, X9, 0x4, LSL
	0x034F433C ADD X0, X8, 0x138
	0x034F4340 LDP X8, X3, [X0]
	0x034F4344 MOVZ W1, 0x5
	0x034F4348 MOV X0, X25
	0x034F434C MOV X2, X24
	0x034F4350 BLR X8
	0x034F4354 LDR W8, [X20 + 0x178]
	0x034F4358 ADD W8, W8, 0x1
	0x034F435C STR W8, [X20 + 0x178]
	0x034F4360 LDR X0, [X20 + 0x128]
	0x034F4364 ADD W23, W23, 0x1
	0x034F4368 CBNZ X0, 0x34F408C
	0x034F436C BL 0x1C16F20
	0x034F4370 MOV X25, X31
	0x034F4374 ADD W21, W29, W21
	0x034F4378 STR W22, [X20 + 0xC8]
	0x034F437C MOVZ W22, 0x18
	0x034F4380 B 0x34F45C8
	0x034F4384 LDR X8, [X20 + 0x10]
	0x034F4388 CBZ X8, 0x34F49E0
	0x034F438C LDRB W9, [X8 + 0x40]
	0x034F4390 CMP W9, 0x1
	0x034F4394 B.LS 0x34F4594
	0x034F4398 LDR X0, [X20 + 0xC0]
	0x034F439C CBZ X0, 0x34F49D4
	0x034F43A0 LDR X23, [X8 + 0x48]
	0x034F43A4 MOV X1, X31
	0x034F43A8 BL 0x364C19C
	0x034F43AC LDR X8, [X28]
	0x034F43B0 STR W0, [X31 + 0x18]
	0x034F43B4 ADD X1, X31, 0x18
	0x034F43B8 MOV X0, X8
	0x034F43BC BL 0x1C16E04
	0x034F43C0 ADRP X8, 0xC08000
	0x034F43C4 LDR X8, [X8 + 0x9E8]
	0x034F43C8 MOV X25, X0
	0x034F43CC LDR W26, [X20 + 0x174]
	0x034F43D0 LDR X0, [X8]
	0x034F43D4 LDR W8, [X0 + 0xE0]
	0x034F43D8 CBNZ W8, 0x34F43E0
	0x034F43DC BL 0x1C16DFC
	0x034F43E0 MOVZ W1, 0x10
	0x034F43E4 MOV W0, W26
	0x034F43E8 MOV X2, X31
	0x034F43EC BL 0x33224A0
	0x034F43F0 ADRP X8, 0xC3F000
	0x034F43F4 LDR X8, [X8 + 0x940]
	0x034F43F8 MOV X3, X0
	0x034F43FC LDR X0, [X8]
	0x034F4400 MOV X1, X24
	0x034F4404 MOV X2, X25
	0x034F4408 MOV X4, X31
	0x034F440C BL 0x3227C18
	0x034F4410 CBZ X23, 0x34F49D8
	0x034F4414 LDR X8, [X23]
	0x034F4418 ADRP X10, 0xC07000
	0x034F441C MOV X25, X0
	0x034F4420 LDRH W9, [X8 + 0x12E]
	0x034F4424 LDR X10, [X10 + 0xBC8]
	0x034F4428 LDR X1, [X10]
	0x034F442C CBZ X9, 0x34F4450
	0x034F4430 LDR X10, [X8 + 0xB0]
	0x034F4434 ADD X10, X10, 0x8
	0x034F4438 LDUR X11, [X10 - 0x8]
	0x034F443C CMP X11, X1
	0x034F4440 B.EQ 0x34F4460
	0x034F4444 SUBS X9, X9, 0x1
	0x034F4448 ADD X10, X10, 0x10
	0x034F444C B.NE 0x34F4438
	0x034F4450 MOV X0, X23
	0x034F4454 MOV W2, W31
	0x034F4458 BL 0x1C5C788
	0x034F445C B 0x34F446C
	0x034F4460 LDRSW X9, [X10]
	0x034F4464 ADD X8, X8, X9, 0x4, LSL
	0x034F4468 ADD X0, X8, 0x138
	0x034F446C LDP X8, X3, [X0]
	0x034F4470 MOVZ W1, 0x2
	0x034F4474 MOV X0, X23
	0x034F4478 MOV X2, X25
	0x034F447C BLR X8
	0x034F4480 LDR X8, [X20 + 0x10]
	0x034F4484 CBZ X8, 0x34F49DC
	0x034F4488 LDRB W9, [X8 + 0x40]
	0x034F448C CMP W9, 0x2
	0x034F4490 B.LS 0x34F4594
	0x034F4494 LDR X9, [X20]
	0x034F4498 LDR X23, [X8 + 0x48]
	0x034F449C LDP X8, X1, [X9 + 0x188]
	0x034F44A0 MOV X0, X20
	0x034F44A4 BLR X8
	0x034F44A8 LDR X8, [X28]
	0x034F44AC STR W0, [X31 + 0x18]
	0x034F44B0 ADD X1, X31, 0x18
	0x034F44B4 MOV X0, X8
	0x034F44B8 BL 0x1C16E04
	0x034F44BC LDRB W1, [X24 + 0x12]
	0x034F44C0 MOV X25, X0
	0x034F44C4 MOV X0, X20
	0x034F44C8 BL 0x34EFEEC
	0x034F44CC CBZ X0, 0x34F49E8
	0x034F44D0 LDR W8, [X0 + 0x70]
	0x034F44D4 LDR X0, [X28]
	0x034F44D8 STR W8, [X31 + 0x14]
	0x034F44DC ADD X1, X31, 0x14
	0x034F44E0 BL 0x1C16E04
	0x034F44E4 LDR X8, [X20 + 0x128]
	0x034F44E8 CBZ X8, 0x34F49EC
	0x034F44EC MOV X26, X0
	0x034F44F0 LDR W8, [X8 + 0x18]
	0x034F44F4 LDR X0, [X28]
	0x034F44F8 STR W8, [X31 + 0x10]
	0x034F44FC ADD X1, X31, 0x10
	0x034F4500 BL 0x1C16E04
	0x034F4504 ADRP X8, 0xC3F000
	0x034F4508 LDR X8, [X8 + 0x948]
	0x034F450C MOV X3, X0
	0x034F4510 LDR X0, [X8]
	0x034F4514 MOV X1, X25
	0x034F4518 MOV X2, X26
	0x034F451C MOV X4, X31
	0x034F4520 BL 0x3227C18
	0x034F4524 CBZ X23, 0x34F49F0
	0x034F4528 LDR X8, [X23]
	0x034F452C ADRP X10, 0xC07000
	0x034F4530 MOV X25, X0
	0x034F4534 LDRH W9, [X8 + 0x12E]
	0x034F4538 LDR X10, [X10 + 0xBC8]
	0x034F453C LDR X1, [X10]
	0x034F4540 CBZ X9, 0x34F4564
	0x034F4544 LDR X10, [X8 + 0xB0]
	0x034F4548 ADD X10, X10, 0x8
	0x034F454C LDUR X11, [X10 - 0x8]
	0x034F4550 CMP X11, X1
	0x034F4554 B.EQ 0x34F4574
	0x034F4558 SUBS X9, X9, 0x1
	0x034F455C ADD X10, X10, 0x10
	0x034F4560 B.NE 0x34F454C
	0x034F4564 MOV X0, X23
	0x034F4568 MOV W2, W31
	0x034F456C BL 0x1C5C788
	0x034F4570 B 0x34F4580
	0x034F4574 LDRSW X9, [X10]
	0x034F4578 ADD X8, X8, X9, 0x4, LSL
	0x034F457C ADD X0, X8, 0x138
	0x034F4580 LDP X8, X3, [X0]
	0x034F4584 MOVZ W1, 0x3
	0x034F4588 MOV X0, X23
	0x034F458C MOV X2, X25
	0x034F4590 BLR X8
	0x034F4594 MOVZ W8, 0x6
	0x034F4598 STRB W8, [X20 + 0x40]
	0x034F459C MOVZ W1, 0x410
	0x034F45A0 MOV X0, X20
	0x034F45A4 BL 0x34F0DFC
	0x034F45A8 LDR X8, [X20]
	0x034F45AC LDP X9, X1, [X8 + 0x1E8]
	0x034F45B0 MOV X0, X20
	0x034F45B4 BLR X9
	0x034F45B8 MOV X0, X24
	0x034F45BC BL 0x34F2CA8
	0x034F45C0 MOV X25, X31
	0x034F45C4 MOVZ W22, 0x3
	0x034F45C8 LDRB W8, [X31 + 0x24]
	0x034F45CC CBZ W8, 0x34F45DC
	0x034F45D0 LDR X0, [X31]
	0x034F45D4 MOV X1, X31
	0x034F45D8 BL 0x33E14E4
	0x034F45DC CBNZ X25, 0x34F49B8
	0x034F45E0 CMP W22, 0x18
	0x034F45E4 B.EQ 0x34F45EC
	0x034F45E8 CBNZ W22, 0x34F488C
	0x034F45EC LDRB W8, [X20 + 0x40]
	0x034F45F0 CMP W8, 0x3
	0x034F45F4 B.NE 0x34F46D4
	0x034F45F8 LDR X8, [X20 + 0x10]
	0x034F45FC CBZ X8, 0x34F497C
	0x034F4600 LDR W8, [X8 + 0x78]
	0x034F4604 CMP W8, 0x1
	0x034F4608 B.LT 0x34F46D4
	0x034F460C LDR X8, [X20 + 0x128]
	0x034F4610 CBZ X8, 0x34F49C0
	0x034F4614 LDR W8, [X8 + 0x18]
	0x034F4618 CBNZ W8, 0x34F46D4
	0x034F461C LDR X0, [X20 + 0xC0]
	0x034F4620 CBZ X0, 0x34F49CC
	0x034F4624 MOV X1, X31
	0x034F4628 BL 0x364C19C
	0x034F462C LDR X8, [X20 + 0x10]
	0x034F4630 CBZ X8, 0x34F49D0
	0x034F4634 LDR W9, [X20 + 0xCC]
	0x034F4638 LDR W8, [X8 + 0x78]
	0x034F463C SUB W9, W0, W9
	0x034F4640 CMP W9, W8
	0x034F4644 B.LE 0x34F46D4
	0x034F4648 LDR W8, [X20 + 0x160]
	0x034F464C ADD W1, W8, 0xC
	0x034F4650 MOV X0, X20
	0x034F4654 BL 0x34F2DFC
	0x034F4658 MOV W22, W0
	0x034F465C LDR X0, [X20 + 0x10]
	0x034F4660 CBZ X0, 0x34F49E4
	0x034F4664 MOV X1, X31
	0x034F4668 BL 0x350243C
	0x034F466C CMP W22, W0
	0x034F4670 B.GT 0x34F46D4
	0x034F4674 LDR X0, [X20 + 0x120]
	0x034F4678 CBZ X0, 0x34F49F4
	0x034F467C MOVZ W2, 0x5
	0x034F4680 MOVZ W4, 0xFF
	0x034F4684 MOV X1, X20
	0x034F4688 MOV X3, X31
	0x034F468C BL 0x34F0030
	0x034F4690 MOV X22, X0
	0x034F4694 MOV X0, X20
	0x034F4698 MOV X1, X22
	0x034F469C BL 0x34F01EC
	0x034F46A0 LDR X0, [X20 + 0x10]
	0x034F46A4 CBZ X0, 0x34F49F8
	0x034F46A8 MOV X1, X31
	0x034F46AC BL 0x350257C
	0x034F46B0 TBZ X0, 0x0, 0x34F46D4
	0x034F46B4 LDR X8, [X20 + 0x10]
	0x034F46B8 CBZ X8, 0x34F49FC
	0x034F46BC CBZ X22, 0x34F4A00
	0x034F46C0 LDR X0, [X8 + 0xA8]
	0x034F46C4 CBZ X0, 0x34F4A04
	0x034F46C8 LDR W1, [X22 + 0x54]
	0x034F46CC MOV X2, X31
	0x034F46D0 BL 0x3522CDC
	0x034F46D4 ADD X0, X20, 0x130
	0x034F46D8 MOVZ W1, 0x1
	0x034F46DC MOVZ W2, 0x1
	0x034F46E0 MOV X3, X31
	0x034F46E4 BL 0x33E7AB4
	0x034F46E8 CMP W0, 0x1
	0x034F46EC B.NE 0x34F46F8
	0x034F46F0 MOV X0, X20
	0x034F46F4 BL 0x34F4CE4
	0x034F46F8 LDR X22, [X20 + 0x188]
	0x034F46FC STRB W31, [X31 + 0x20]
	0x034F4700 ADD X1, X31, 0x20
	0x034F4704 MOV X0, X22
	0x034F4708 MOV X2, X31
	0x034F470C BL 0x33DE64C
	0x034F4710 LDR X8, [X20 + 0x188]
	0x034F4714 CBZ X8, 0x34F48D0
	0x034F4718 MOV X27, X31
	0x034F471C LDR W9, [X8 + 0x18]
	0x034F4720 CMP X27, W9, SXTW

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+48], X29
	003 Move [X31+56], X30
	004 Move [X31+64], X28
	005 Move [X31+72], X27
	006 Move [X31+80], X26
	007 Move [X31+88], X25
	008 Move [X31+96], X24
	009 Move [X31+104], X23
	010 Move [X31+112], X22
	011 Move [X31+120], X21
	012 Move [X31+128], X20
	013 Move [X31+136], X19
	014 Move X19, 0xEED000
	015 Move W8, [X19+2599]
	016 Move X20, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {44}
	021 Move X0, 0xC01000
	022 Move X0, [X0+2904]
	023 Call 0x1C17CF4
	024 Move X0, 0xC09000
	025 Move X0, [X0+3016]
	026 Call 0x1C17CF4
	027 Move X0, 0xC01000
	028 Move X0, [X0+1880]
	029 Call 0x1C17CF4
	030 Move X0, 0xC41000
	031 Move X0, [X0+1848]
	032 Call 0x1C17CF4
	033 Move X0, 0xC41000
	034 Move X0, [X0+2328]
	035 Call 0x1C17CF4
	036 Move X0, 0xC01000
	037 Move X0, [X0+2512]
	038 Call 0x1C17CF4
	039 Move X0, 0xC41000
	040 Move X0, [X0+2336]
	041 Call 0x1C17CF4
	042 Move W8, 1
	043 Move [X19+2599], W8
	044 Move [X31+40], W31
	045 Move [X31+36], W31
	046 Move W8, [X20+64]
	047 Compare W8, 0
	048 JumpIfEqual {330}
	049 Move X8, [X20+40]
	050 Compare X8, 0
	051 JumpIfEqual {330}
	052 Move W8, [X8+28]
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Move X19, [X20+344]
	055 Move [X31+44], W31
	056 Add X1, X31, 44
	057 Move X0, X19
	058 Move X2, X31
	059 Call Monitor.Enter, X0, X1
	060 Move X0, X20
	061 Call EnetPeer.CalculateInitialOffset, X0
	062 Move X22, [X20+312]
	063 Move [X20+352], W0
	064 Move [X20+336], W31
	065 Move [X31+40], W31
	066 Add X1, X31, 40
	067 Move X0, X22
	068 Move X2, X31
	069 Call Monitor.Enter, X0, X1
	070 Move X0, X20
	071 Call EnetPeer.SerializeAckToBuffer, X0
	072 Move W23, W0
	073 Move X0, [X20+192]
	074 Compare X0, 0
	075 JumpIfEqual {410}
	076 Move X1, X31
	077 Call Stopwatch.get_ElapsedMilliseconds, X0
	078 Move X25, X31
	079 Move [X20+212], W0
	080 Move W21, 7
	081 Move W8, [X31+40]
	082 Compare W8, 0
	083 JumpIfEqual {87}
	084 Move X0, X22
	085 Move X1, X31
	086 Call Monitor.Exit, X0
	087 Compare X25, 0
	088 JumpIfNotEqual {411}
	089 NotImplemented "Instruction CMP not yet implemented."
	090 Compare W21, 0
	091 JumpIfNotEqual {394}
	092 Move X0, [X20+192]
	093 Compare X0, 0
	094 JumpIfEqual {413}
	095 Move X1, X31
	096 Call Stopwatch.get_ElapsedMilliseconds, X0
	097 Move W8, [X20+200]
	098 NotImplemented "Instruction CMP not yet implemented."
	099 Move X8, [X20+296]
	100 Compare X8, 0
	101 JumpIfEqual {443}
	102 Move W8, [X8+24]
	103 NotImplemented "Instruction CMP not yet implemented."
	104 Move X0, [X20+192]
	105 Compare X0, 0
	106 JumpIfEqual {444}
	107 Move X1, X31
	108 Call Stopwatch.get_ElapsedMilliseconds, X0
	109 Move X24, X0
	110 Move X0, [X20+296]
	111 Move [X31+12], W23
	112 Move [X31+36], W31
	113 Add X1, X31, 36
	114 Move X2, X31
	115 Move [X31], X0
	116 Call Monitor.Enter, X0, X1
	117 Move X0, [X20+296]
	118 Compare X0, 0
	119 JumpIfEqual {329}
	120 Move X22, 0xC40000
	121 Move X21, 0xC00000
	122 Move X22, [X22+2328]
	123 Move X21, [X21+1880]
	124 Move W28, W31
	125 Move W23, W31
	126 Add W29, W24, 100
	127 Move W8, [X0+24]
	128 NotImplemented "Instruction CMP not yet implemented."
	129 Move X2, [X22]
	130 Move W1, W23
	131 Call List`1<Object>.get_Item, X0, X1
	132 Move X27, X0
	133 Compare X0, 0
	134 JumpIfEqual {407}
	135 Move X0, [X20+192]
	136 Compare X0, 0
	137 JumpIfEqual {406}
	138 Move W24, [X27+60]
	139 Move W25, [X27+68]
	140 Move X1, X31
	141 Call Stopwatch.get_ElapsedMilliseconds, X0
	142 Add W8, W25, W24
	143 NotImplemented "Instruction CMP not yet implemented."
	144 Move W2, 1
	145 Move X0, X20
	146 Move X1, X27
	147 Call EnetPeer.SerializeCommandToBuffer, X0, X1, X2
	148 Move W26, W0
	149 Move TEMP, X0
	150 And TEMP, TEMP, 1
	151 Compare TEMP, 1
	152 JumpIfNotEqual {303}
	153 Move X8, [X20+16]
	154 Compare X8, 0
	155 JumpIfEqual {408}
	156 Move W9, [X8+64]
	157 NotImplemented "Instruction CMP not yet implemented."
	158 Move X24, [X8+72]
	159 Move X8, 0xC00000
	160 Move X8, [X8+2512]
	161 Move X0, [X8]
	162 Move W1, 6
	163 Call 0x1C17D6C
	164 Move X25, X0
	165 Compare X0, 0
	166 JumpIfEqual {419}
	167 Move X8, [X25]
	168 Move X1, [X8+64]
	169 Move X0, X27
	170 Call 0x1C17E00
	171 Compare X0, 0
	172 JumpIfEqual {416}
	173 Move W8, [X25+24]
	174 Compare W8, 0
	175 JumpIfEqual {421}
	176 Move [X25+32], X27
	177 Move X0, [X20+192]
	178 Compare X0, 0
	179 JumpIfEqual {424}
	180 Move X1, X31
	181 Call Stopwatch.get_ElapsedMilliseconds, X0
	182 Move X8, [X21]
	183 Move [X31+32], W0
	184 Add X1, X31, 32
	185 Move X0, X8
	186 Call 0x1C17E04
	187 Move X27, X0
	188 Compare X0, 0
	189 JumpIfEqual {196}
	190 Move X8, [X25]
	191 Move X1, [X8+64]
	192 Move X0, X27
	193 Call 0x1C17E00
	194 Compare X0, 0
	195 JumpIfEqual {433}
	196 Move W8, [X25+24]
	197 NotImplemented "Instruction CMP not yet implemented."
	198 Move [X25+40], X27
	199 Move W8, [X20+116]
	200 Move X0, [X21]
	201 Move [X31+28], W8
	202 Add X1, X31, 28
	203 Call 0x1C17E04
	204 Move X27, X0
	205 Compare X0, 0
	206 JumpIfEqual {213}
	207 Move X8, [X25]
	208 Move X1, [X8+64]
	209 Move X0, X27
	210 Call 0x1C17E00
	211 Compare X0, 0
	212 JumpIfEqual {439}
	213 Move W8, [X25+24]
	214 NotImplemented "Instruction CMP not yet implemented."
	215 Move [X25+48], X27
	216 Move W8, [X20+120]
	217 Move X0, [X21]
	218 Move [X31+24], W8
	219 Add X1, X31, 24
	220 Call 0x1C17E04
	221 Move X27, X0
	222 Compare X0, 0
	223 JumpIfEqual {230}
	224 Move X8, [X25]
	225 Move X1, [X8+64]
	226 Move X0, X27
	227 Call 0x1C17E00
	228 Compare X0, 0
	229 JumpIfEqual {427}
	230 Move W8, [X25+24]
	231 NotImplemented "Instruction CMP not yet implemented."
	232 Move [X25+56], X27
	233 Move X0, [X20+192]
	234 Compare X0, 0
	235 JumpIfEqual {420}
	236 Move X1, X31
	237 Call Stopwatch.get_ElapsedMilliseconds, X0
	238 Move W9, [X20+136]
	239 Move X8, [X21]
	240 Subtract W9, W0, W9
	241 Move [X31+20], W9
	242 Add X1, X31, 20
	243 Move X0, X8
	244 Call 0x1C17E04
	245 Move X27, X0
	246 Compare X0, 0
	247 JumpIfEqual {254}
	248 Move X8, [X25]
	249 Move X1, [X8+64]
	250 Move X0, X27
	251 Call 0x1C17E00
	252 Compare X0, 0
	253 JumpIfEqual {436}
	254 Move W8, [X25+24]
	255 NotImplemented "Instruction CMP not yet implemented."
	256 Move [X25+64], X27
	257 Move X8, 0xC00000
	258 Move X8, [X8+2904]
	259 Move X0, [X8]
	260 And W8, W26, 1
	261 Move [X31+16], W8
	262 Add X1, X31, 16
	263 Call 0x1C17E04
	264 Move X26, X0
	265 Compare X0, 0
	266 JumpIfEqual {273}
	267 Move X8, [X25]
	268 Move X1, [X8+64]
	269 Move X0, X26
	270 Call 0x1C17E00
	271 Compare X0, 0
	272 JumpIfEqual {430}
	273 Move W8, [X25+24]
	274 NotImplemented "Instruction CMP not yet implemented."
	275 Move [X25+72], X26
	276 Move X8, 0xC40000
	277 Move X8, [X8+2336]
	278 Move X0, [X8]
	279 Move X1, X25
	280 Move X2, X31
	281 Call String.Format, X0, X1
	282 Compare X24, 0
	283 JumpIfEqual {415}
	284 Move X8, [X24]
	285 Move X10, 0xC08000
	286 Move X25, X0
	287 NotImplemented "Instruction LDRH not yet implemented."
	288 Move X10, [X10+3016]
	289 Move X1, [X10]
	290 Compare X9, 0
	291 JumpIfEqual {298}
	292 Move X10, [X8+176]
	293 Add X10, X10, 8
	294 NotImplemented "Instruction LDUR not yet implemented."
	295 NotImplemented "Instruction CMP not yet implemented."
	296 Subtract X9, X9, 1
	297 Add X10, X10, 16
	298 Move X0, X24
	299 Move W2, W31
	300 Call 0x1C5D788
	301 NotImplemented "Instruction CMP not yet implemented."
	302 NotImplemented "Instruction CSEL not yet implemented."
	303 Move X0, [X20+16]
	304 Compare X0, 0
	305 JumpIfEqual {409}
	306 Move W29, [X20+200]
	307 Move X1, X31
	308 Call PhotonPeer.get_MaximumTransferUnit, X0
	309 Move W8, [X20+352]
	310 Add W28, W28, 1
	311 Subtract W8, W0, W8
	312 NotImplemented "Instruction CMP not yet implemented."
	313 NotImplemented "Instruction LDRSW not yet implemented."
	314 Add X8, X8, X9
	315 Add X0, X8, 312
	316 Move X8, [X0]
	317 Move X3, [X0+8]
	318 Move W1, 5
	319 Move X0, X24
	320 Move X2, X25
	321 NotImplemented "Instruction BLR not yet implemented."
	322 Move W8, [X20+376]
	323 Add W8, W8, 1
	324 Move [X20+376], W8
	325 Move X0, [X20+296]
	326 Add W23, W23, 1
	327 Compare X0, 0
	328 JumpIfNotEqual {127}
	329 Call 0x1C17F20
	330 Move W21, W31
	331 Move W0, W21
	332 Move X20, [X31+128]
	333 Move X19, [X31+136]
	334 Move X22, [X31+112]
	335 Move X21, [X31+120]
	336 Move X24, [X31+96]
	337 Move X23, [X31+104]
	338 Move X26, [X31+80]
	339 Move X25, [X31+88]
	340 Move X28, [X31+64]
	341 Move X27, [X31+72]
	342 Move X29, [X31+48]
	343 Move X30, [X31+56]
	344 Add X31, X31, 144
	345 Return X0
	346 Move W23, [X31+12]
	347 Move X25, X31
	348 Move [X20+200], W29
	349 Move W21, 20
	350 Add W23, W28, W23
	351 Move W8, [X31+36]
	352 Compare W8, 0
	353 JumpIfEqual {357}
	354 Move X0, [X31]
	355 Move X1, X31
	356 Call Monitor.Exit, X0
	357 Compare X25, 0
	358 JumpIfNotEqual {445}
	359 NotImplemented "Instruction CMP not yet implemented."
	360 Compare W21, 0
	361 JumpIfNotEqual {394}
	362 Move W8, [X20+336]
	363 Compare W8, 0
	364 JumpIfEqual {394}
	365 Move X0, [X20+16]
	366 Compare X0, 0
	367 JumpIfEqual {442}
	368 Move X1, X31
	369 Call PhotonPeer.get_TrafficStatsEnabled, X0
	370 Move TEMP, X0
	371 And TEMP, TEMP, 1
	372 Compare TEMP, 1
	373 JumpIfNotEqual {387}
	374 Move X8, [X20+16]
	375 Compare X8, 0
	376 JumpIfEqual {447}
	377 Move X8, [X8+168]
	378 Compare X8, 0
	379 JumpIfEqual {448}
	380 Move W9, [X8+36]
	381 Move W10, [X8+40]
	382 Add W9, W9, 1
	383 Move [X8+36], W9
	384 Move W9, [X20+336]
	385 Add W9, W10, W9
	386 Move [X8+40], W9
	387 Move X1, [X20+344]
	388 Move W2, [X20+352]
	389 Move X0, X20
	390 Call EnetPeer.SendData, X0, X1, X2
	391 NotImplemented "Instruction CMP not yet implemented."
	392 Move X20, X31
	393 NotImplemented "Instruction CSET not yet implemented."
	394 Move X20, X31
	395 Move W21, W31
	396 Move W8, [X31+44]
	397 Compare W8, 0
	398 JumpIfEqual {402}
	399 Move X0, X19
	400 Move X1, X31
	401 Call Monitor.Exit, X0
	402 Compare X20, 0
	403 JumpIfEqual {331}
	404 Move X0, X20
	405 Call 0x1C17F18
	406 Call 0x1C17F20
	407 Call 0x1C17F20
	408 Call 0x1C17F20
	409 Call 0x1C17F20
	410 Call 0x1C17F20
	411 Move X0, X25
	412 Call 0x1C17F18
	413 Call 0x1C17F20
	414 Call 0x1C17F28
	415 Call 0x1C17F20
	416 Call 0x1C17F44
	417 Move X1, X31
	418 Call 0x1C17DEC
	419 Call 0x1C17F20
	420 Call 0x1C17F20
	421 Call 0x1C17F28
	422 Call 0x1C17F28
	423 Call 0x1C17F28
	424 Call 0x1C17F20
	425 Call 0x1C17F28
	426 Call 0x1C17F28
	427 Call 0x1C17F44
	428 Move X1, X31
	429 Call 0x1C17DEC
	430 Call 0x1C17F44
	431 Move X1, X31
	432 Call 0x1C17DEC
	433 Call 0x1C17F44
	434 Move X1, X31
	435 Call 0x1C17DEC
	436 Call 0x1C17F44
	437 Move X1, X31
	438 Call 0x1C17DEC
	439 Call 0x1C17F44
	440 Move X1, X31
	441 Call 0x1C17DEC
	442 Call 0x1C17F20
	443 Call 0x1C17F20
	444 Call 0x1C17F20
	445 Move X0, X25
	446 Call 0x1C17F18
	447 Call 0x1C17F20
	448 Call 0x1C17F20
	449 Move X23, X1
	450 Move X24, X0
	451 Move W26, W31
	452 Move X23, X1
	453 Move X24, X0
	454 Move W26, W23
	455 Move X23, X1
	456 Move X24, X0
	457 NotImplemented "Instruction CMP not yet implemented."
	458 Move X0, X24
	459 Call 0x3EB2AD0
	460 Move X25, [X0]
	461 Call 0x3EB2AE0
	462 Move W21, W31
	463 Move W23, W26
	464 Move X25, X31
	465 Move W8, [X31+40]
	466 Compare W8, 0
	467 JumpIfEqual {471}
	468 Move X0, X22
	469 Move X1, X31
	470 Call Monitor.Exit, X0
	471 Compare X25, 0
	472 JumpIfEqual {495}
	473 Move X0, X25
	474 Call 0x1C17F18
	475 Move X23, X1
	476 Move X24, X0
	477 Move X23, X1
	478 Move X24, X0
	479 NotImplemented "Instruction CMP not yet implemented."
	480 Move X0, X24
	481 Call 0x3EB2AD0
	482 Move X25, [X0]
	483 Call 0x3EB2AE0
	484 Move W23, [X31+12]
	485 Move W21, W31
	486 Move X25, X31
	487 Move W8, [X31+36]
	488 Compare W8, 0
	489 JumpIfEqual {493}
	490 Move X0, [X31]
	491 Move X1, X31
	492 Call Monitor.Exit, X0
	493 Compare X25, 0
	494 JumpIfNotEqual {501}
	495 NotImplemented "Instruction CMP not yet implemented."
	496 Move X0, X24
	497 Call 0x3EB2AD0
	498 Move X20, [X0]
	499 Call 0x3EB2AE0
	500 Move X20, X31
	501 Move X0, X25
	502 Call 0x1C17F18
	503 Move X23, X1
	504 Move X24, X0
	505 Move X24, X0
	506 Move W8, [X31+44]
	507 Compare W8, 0
	508 JumpIfEqual {512}
	509 Move X0, X19
	510 Move X1, X31
	511 Call Monitor.Exit, X0
	512 Compare X20, 0
	513 JumpIfNotEqual {516}
	514 Move X0, X24
	515 Call 0x1D2D690
	516 Move X0, X20
	517 Call 0x1C17F18
	518 Call 0x1991590

Method: System.Boolean SendOutgoingCommands()

Disassembly:
	0x034F4E70 BL 0x33E14E4
	0x034F4E74 CBNZ X22, 0x34F5178
	0x034F4E78 CMP W21, 0xD
	0x034F4E7C B.EQ 0x34F4E84
	0x034F4E80 CBNZ W21, 0x34F4F50
	0x034F4E84 LDR X8, [X19 + 0x1B8]
	0x034F4E88 LDR X9, [X19 + 0x188]
	0x034F4E8C CBZ X8, 0x34F4F6C
	0x034F4E90 CBZ X9, 0x34F5154
	0x034F4E94 LDR X10, [X8 + 0x18]
	0x034F4E98 LDR W11, [X9 + 0x18]
	0x034F4E9C CMP W10, W11
	0x034F4EA0 B.NE 0x34F4F70
	0x034F4EA4 CMP W10, 0x1
	0x034F4EA8 B.LT 0x34F4F88
	0x034F4EAC AND X10, X10, 0x0
	0x034F4EB0 MOV X9, X31
	0x034F4EB4 SXTW X11, W10
	0x034F4EB8 ADD X8, X8, 0x20
	0x034F4EBC CMP X9, X10
	0x034F4EC0 B.CS 0x34F5160
	0x034F4EC4 STR W31, [X8, X9, LSL #2]
	0x034F4EC8 ADD X9, X9, 0x1
	0x034F4ECC CMP X9, X11
	0x034F4ED0 B.LT 0x34F4EBC
	0x034F4ED4 B 0x34F4F88
	0x034F4ED8 LDR X20, [X19 + 0x188]
	0x034F4EDC STRB W31, [X31 + 0x1C]
	0x034F4EE0 ADD X1, X31, 0x1C
	0x034F4EE4 MOV X0, X20
	0x034F4EE8 MOV X2, X31
	0x034F4EEC BL 0x33DE64C
	0x034F4EF0 LDR X8, [X19 + 0x188]
	0x034F4EF4 CBZ X8, 0x34F5188
	0x034F4EF8 LDR W9, [X8 + 0x18]
	0x034F4EFC CMP W9, 0x1
	0x034F4F00 B.LT 0x34F4F34
	0x034F4F04 MOV W10, W31
	0x034F4F08 CMP W10, W9
	0x034F4F0C B.CS 0x34F5144
	0x034F4F10 ADD X11, X8, W10, 0x3, SXTW
	0x034F4F14 LDR X11, [X11 + 0x20]
	0x034F4F18 CBZ X11, 0x34F5140
	0x034F4F1C LDR W12, [X11 + 0x68]
	0x034F4F20 ADD W10, W10, 0x1
	0x034F4F24 CMP W10, W9
	0x034F4F28 ADD W12, W12, 0x1
	0x034F4F2C STP W31, W12, [X11 + 0x6C]
	0x034F4F30 B.LT 0x34F4F08
	0x034F4F34 MOV X19, X31
	0x034F4F38 LDRB W8, [X31 + 0x1C]
	0x034F4F3C CBZ W8, 0x34F4F4C
	0x034F4F40 MOV X0, X20
	0x034F4F44 MOV X1, X31
	0x034F4F48 BL 0x33E14E4
	0x034F4F4C CBNZ X19, 0x34F5180
	0x034F4F50 LDP X20, X19, [X31 + 0x50]
	0x034F4F54 LDP X22, X21, [X31 + 0x40]
	0x034F4F58 LDP X24, X23, [X31 + 0x30]
	0x034F4F5C LDP X26, X25, [X31 + 0x20]
	0x034F4F60 LDR X30, [X31 + 0x10]
	0x034F4F64 ADD X31, X31, 0x60
	0x034F4F68 RET
	0x034F4F6C CBZ X9, 0x34F5154
	0x034F4F70 ADRP X8, 0xC00000
	0x034F4F74 LDR X8, [X8 + 0xE58]
	0x034F4F78 LDR W1, [X9 + 0x18]
	0x034F4F7C LDR X0, [X8]
	0x034F4F80 BL 0x1C16D6C
	0x034F4F84 STR X0, [X19 + 0x1B8]
	0x034F4F88 LDR X20, [X19 + 0x128]
	0x034F4F8C STRB W31, [X31 + 0xC]
	0x034F4F90 ADD X1, X31, 0xC
	0x034F4F94 MOV X0, X20
	0x034F4F98 MOV X2, X31
	0x034F4F9C BL 0x33DE64C
	0x034F4FA0 LDR X0, [X19 + 0x128]
	0x034F4FA4 CBZ X0, 0x34F5068
	0x034F4FA8 ADRP X24, 0xC3F000
	0x034F4FAC ADRP X25, 0xC3F000
	0x034F4FB0 ADRP X26, 0xC3F000
	0x034F4FB4 LDR X24, [X24 + 0x918]
	0x034F4FB8 LDR X25, [X25 + 0x960]
	0x034F4FBC LDR X26, [X26 + 0x968]
	0x034F4FC0 MOV W21, W31
	0x034F4FC4 LDR W8, [X0 + 0x18]
	0x034F4FC8 CMP W21, W8
	0x034F4FCC B.GE 0x34F506C
	0x034F4FD0 LDR X2, [X24]
	0x034F4FD4 MOV W1, W21
	0x034F4FD8 BL 0x301BCCC
	0x034F4FDC MOV X22, X0
	0x034F4FE0 CBZ X0, 0x34F5138
	0x034F4FE4 LDRB W8, [X22 + 0x10]
	0x034F4FE8 TBNZ X8, 0x1, 0x34F505C
	0x034F4FEC LDRB W23, [X22 + 0x12]
	0x034F4FF0 CMP W23, 0xFF
	0x034F4FF4 B.EQ 0x34F505C
	0x034F4FF8 LDR X0, [X19 + 0x1B0]
	0x034F4FFC CBZ X0, 0x34F5158
	0x034F5000 LDR X2, [X25]
	0x034F5004 MOV W1, W23
	0x034F5008 BL 0x2D8C714
	0x034F500C TBZ X0, 0x0, 0x34F505C
	0x034F5010 LDR X8, [X19 + 0x1B8]
	0x034F5014 CBZ X8, 0x34F5168
	0x034F5018 LDR W9, [X8 + 0x18]
	0x034F501C CMP W23, W9
	0x034F5020 B.CS 0x34F5174
	0x034F5024 ADD X8, X8, W23, 0x2, UXTW
	0x034F5028 LDR W9, [X8 + 0x20]!
	0x034F502C CBNZ W9, 0x34F5038
	0x034F5030 LDR W9, [X22 + 0x14]
	0x034F5034 STR W9, [X8]
	0x034F5038 LDR X0, [X19 + 0x1B0]
	0x034F503C CBZ X0, 0x34F516C
	0x034F5040 LDRB W1, [X22 + 0x12]
	0x034F5044 LDR X2, [X26]
	0x034F5048 BL 0x2D8C8E8
	0x034F504C LDR X8, [X19 + 0x1B0]
	0x034F5050 CBZ X8, 0x34F5170
	0x034F5054 LDR W8, [X8 + 0x20]
	0x034F5058 CBZ W8, 0x34F506C
	0x034F505C LDR X0, [X19 + 0x128]
	0x034F5060 ADD W21, W21, 0x1
	0x034F5064 CBNZ X0, 0x34F4FC4
	0x034F5068 BL 0x1C16F20
	0x034F506C MOV X22, X31
	0x034F5070 MOVZ W21, 0x1E
	0x034F5074 LDRB W8, [X31 + 0xC]
	0x034F5078 CBZ W8, 0x34F5088
	0x034F507C MOV X0, X20
	0x034F5080 MOV X1, X31
	0x034F5084 BL 0x33E14E4
	0x034F5088 CBNZ X22, 0x34F5178
	0x034F508C CMP W21, 0x1E
	0x034F5090 B.EQ 0x34F5098
	0x034F5094 CBNZ W21, 0x34F4F50
	0x034F5098 LDR X20, [X19 + 0x188]
	0x034F509C STRB W31, [X31 + 0x8]
	0x034F50A0 ADD X1, X31, 0x8
	0x034F50A4 MOV X0, X20
	0x034F50A8 MOV X2, X31
	0x034F50AC BL 0x33DE64C
	0x034F50B0 LDR X11, [X19 + 0x188]
	0x034F50B4 CBZ X11, 0x34F518C
	0x034F50B8 LDR W8, [X11 + 0x18]
	0x034F50BC CMP W8, 0x1
	0x034F50C0 B.LT 0x34F5120
	0x034F50C4 LDR X10, [X19 + 0x1B8]
	0x034F50C8 MOV X9, X31
	0x034F50CC ADD X11, X11, 0x20
	0x034F50D0 ADD X12, X10, 0x20
	0x034F50D4 CMP W9, W8
	0x034F50D8 B.CS 0x34F5150
	0x034F50DC CBZ X10, 0x34F5148
	0x034F50E0 LDR W13, [X10 + 0x18]
	0x034F50E4 CMP W9, W13
	0x034F50E8 B.CS 0x34F514C
	0x034F50EC LDR W14, [X12, X9, LSL #2]
	0x034F50F0 LDR X13, [X11, X9, LSL #3]
	0x034F50F4 CMP W14, 0x0
	0x034F50F8 B.LE 0x34F5104
	0x034F50FC CBNZ X13, 0x34F5110
	0x034F5100 B 0x34F515C
	0x034F5104 CBZ X13, 0x34F5164
	0x034F5108 LDR W14, [X13 + 0x68]
	0x034F510C ADD W14, W14, 0x1
	0x034F5110 ADD X9, X9, 0x1
	0x034F5114 CMP W9, W8
	0x034F5118 STR W14, [X13 + 0x70]
	0x034F511C B.LT 0x34F50D4
	0x034F5120 MOV X19, X31
	0x034F5124 LDRB W8, [X31 + 0x8]
	0x034F5128 CBNZ W8, 0x34F4F40
	0x034F512C B 0x34F4F4C
	0x034F5130 BL 0x1C16F28
	0x034F5134 BL 0x1C16F20
	0x034F5138 BL 0x1C16F20
	0x034F513C BL 0x1C16F20
	0x034F5140 BL 0x1C16F20
	0x034F5144 BL 0x1C16F28
	0x034F5148 BL 0x1C16F20
	0x034F514C BL 0x1C16F28
	0x034F5150 BL 0x1C16F28
	0x034F5154 BL 0x1C16F20
	0x034F5158 BL 0x1C16F20
	0x034F515C BL 0x1C16F20
	0x034F5160 BL 0x1C16F28
	0x034F5164 BL 0x1C16F20
	0x034F5168 BL 0x1C16F20
	0x034F516C BL 0x1C16F20
	0x034F5170 BL 0x1C16F20
	0x034F5174 BL 0x1C16F28
	0x034F5178 MOV X0, X22
	0x034F517C BL 0x1C16F18
	0x034F5180 MOV X0, X19
	0x034F5184 BL 0x1C16F18
	0x034F5188 BL 0x1C16F20
	0x034F518C BL 0x1C16F20
	0x034F5190 B 0x34F51D4
	0x034F5194 B 0x34F51D4
	0x034F5198 B 0x34F5224
	0x034F519C B 0x34F5224
	0x034F51A0 B 0x34F5280
	0x034F51A4 B 0x34F52D8
	0x034F51A8 B 0x34F5280
	0x034F51AC B 0x34F5280
	0x034F51B0 B 0x34F5280
	0x034F51B4 B 0x34F5280
	0x034F51B8 B 0x34F5280
	0x034F51BC B 0x34F51D4
	0x034F51C0 B 0x34F51D4
	0x034F51C4 B 0x34F5280
	0x034F51C8 B 0x34F5280
	0x034F51CC B 0x34F51D4
	0x034F51D0 B 0x34F51D4
	0x034F51D4 MOV X21, X0
	0x034F51D8 CMP W1, 0x1
	0x034F51DC B.NE 0x34F51F4
	0x034F51E0 MOV X0, X21
	0x034F51E4 BL 0x3EB1AD0
	0x034F51E8 LDR X19, [X0]
	0x034F51EC BL 0x3EB1AE0
	0x034F51F0 B 0x34F5124
	0x034F51F4 MOV X19, X31
	0x034F51F8 B 0x34F5200
	0x034F51FC MOV X21, X0
	0x034F5200 LDRB W8, [X31 + 0x8]
	0x034F5204 CBZ W8, 0x34F5214
	0x034F5208 MOV X0, X20
	0x034F520C MOV X1, X31
	0x034F5210 BL 0x33E14E4
	0x034F5214 CBZ X19, 0x34F5320
	0x034F5218 MOV X0, X19
	0x034F521C BL 0x1C16F18
	0x034F5220 B 0x34F5224
	0x034F5224 MOV X21, X0
	0x034F5228 CMP W1, 0x1
	0x034F522C B.NE 0x34F5244
	0x034F5230 MOV X0, X21
	0x034F5234 BL 0x3EB1AD0
	0x034F5238 LDR X19, [X0]
	0x034F523C BL 0x3EB1AE0
	0x034F5240 B 0x34F4F38
	0x034F5244 MOV X19, X31
	0x034F5248 B 0x34F5250
	0x034F524C MOV X21, X0
	0x034F5250 LDRB W8, [X31 + 0x1C]
	0x034F5254 CBZ W8, 0x34F5264
	0x034F5258 MOV X0, X20
	0x034F525C MOV X1, X31
	0x034F5260 BL 0x33E14E4
	0x034F5264 CBZ X19, 0x34F5320
	0x034F5268 MOV X0, X19
	0x034F526C BL 0x1C16F18
	0x034F5270 B 0x34F52D8
	0x034F5274 B 0x34F52D8
	0x034F5278 B 0x34F5280
	0x034F527C B 0x34F5280
	0x034F5280 MOV X21, X0
	0x034F5284 CMP W1, 0x1
	0x034F5288 B.NE 0x34F52A4
	0x034F528C MOV X0, X21
	0x034F5290 BL 0x3EB1AD0
	0x034F5294 LDR X22, [X0]
	0x034F5298 BL 0x3EB1AE0
	0x034F529C MOV W21, W31
	0x034F52A0 B 0x34F5074
	0x034F52A4 MOV X22, X31
	0x034F52A8 B 0x34F52B0
	0x034F52AC MOV X21, X0
	0x034F52B0 LDRB W8, [X31 + 0xC]
	0x034F52B4 CBZ W8, 0x34F52C4
	0x034F52B8 MOV X0, X20
	0x034F52BC MOV X1, X31
	0x034F52C0 BL 0x33E14E4
	0x034F52C4 CBZ X22, 0x34F5320
	0x034F52C8 MOV X0, X22
	0x034F52CC BL 0x1C16F18
	0x034F52D0 B 0x34F52D8
	0x034F52D4 B 0x34F52D8
	0x034F52D8 MOV X21, X0
	0x034F52DC CMP W1, 0x1
	0x034F52E0 B.NE 0x34F52FC
	0x034F52E4 MOV X0, X21
	0x034F52E8 BL 0x3EB1AD0
	0x034F52EC LDR X22, [X0]
	0x034F52F0 BL 0x3EB1AE0
	0x034F52F4 MOV W21, W31
	0x034F52F8 B 0x34F4E60
	0x034F52FC MOV X22, X31
	0x034F5300 B 0x34F5308
	0x034F5304 MOV X21, X0
	0x034F5308 LDRB W8, [X31 + 0x18]
	0x034F530C CBZ W8, 0x34F531C
	0x034F5310 MOV X0, X20
	0x034F5314 MOV X1, X31
	0x034F5318 BL 0x33E14E4
	0x034F531C CBNZ X22, 0x34F5328
	0x034F5320 MOV X0, X21
	0x034F5324 BL 0x1D2C690
	0x034F5328 MOV X0, X22
	0x034F532C BL 0x1C16F18
	0x034F5330 BL 0x1990590
	0x034F5334 SUB X31, X31, 0x40
	0x034F5338 STP X30, X23, [X31 + 0x10]
	0x034F533C STP X22, X21, [X31 + 0x20]
	0x034F5340 STP X20, X19, [X31 + 0x30]
	0x034F5344 ADRP X22, 0xEEA000
	0x034F5348 LDRB W8, [X22 + 0xA2C]
	0x034F534C MOV W21, W2
	0x034F5350 MOV X19, X1
	0x034F5354 MOV X20, X0
	0x034F5358 TBNZ X8, 0x0, 0x34F53AC
	0x034F535C ADRP X0, 0xC06000
	0x034F5360 LDR X0, [X0 + 0xBC8]
	0x034F5364 BL 0x1C16CF4
	0x034F5368 ADRP X0, 0xC3E000
	0x034F536C LDR X0, [X0 + 0x898]
	0x034F5370 BL 0x1C16CF4
	0x034F5374 ADRP X0, 0xC3E000
	0x034F5378 LDR X0, [X0 + 0x978]
	0x034F537C BL 0x1C16CF4
	0x034F5380 ADRP X0, 0xC3E000
	0x034F5384 LDR X0, [X0 + 0x730]
	0x034F5388 BL 0x1C16CF4
	0x034F538C ADRP X0, 0xC3E000
	0x034F5390 LDR X0, [X0 + 0x928]
	0x034F5394 BL 0x1C16CF4
	0x034F5398 ADRP X0, 0xC3E000
	0x034F539C LDR X0, [X0 + 0x980]
	0x034F53A0 BL 0x1C16CF4
	0x034F53A4 MOVZ W8, 0x1
	0x034F53A8 STRB W8, [X22 + 0xA2C]
	0x034F53AC CBZ X19, 0x34F5538
	0x034F53B0 LDR W8, [X19 + 0x20]
	0x034F53B4 CMP W8, 0x1
	0x034F53B8 B.LT 0x34F5520
	0x034F53BC ADRP X22, 0xC3E000
	0x034F53C0 ADRP X23, 0xC3E000
	0x034F53C4 LDR X22, [X22 + 0x978]
	0x034F53C8 LDR X23, [X23 + 0x898]
	0x034F53CC LDR X1, [X22]
	0x034F53D0 MOV X0, X19
	0x034F53D4 BL 0x24F1954
	0x034F53D8 CBZ X0, 0x34F5424
	0x034F53DC LDRB W8, [X0 + 0x10]
	0x034F53E0 MOV X1, X0
	0x034F53E4 TBZ X8, 0x0, 0x34F5414
	0x034F53E8 LDRB W8, [X1 + 0x12]
	0x034F53EC CMP W8, 0xFF
	0x034F53F0 B.EQ 0x34F5414
	0x034F53F4 LDR X8, [X20 + 0x10]
	0x034F53F8 CBZ X8, 0x34F5538
	0x034F53FC LDR W8, [X8 + 0x5C]
	0x034F5400 CMP W8, 0x1
	0x034F5404 B.LT 0x34F5414
	0x034F5408 LDR W8, [X1 + 0x14]
	0x034F540C CMP W8, W21
	0x034F5410 B.GE 0x34F54F8
	0x034F5414 MOV X0, X20
	0x034F5418 MOV W2, W31
	0x034F541C BL 0x34F39CC
	0x034F5420 TBZ X0, 0x0, 0x34F5440
	0x034F5424 LDR X1, [X23]
	0x034F5428 MOV X0, X19
	0x034F542C BL 0x24F18D4
	0x034F5430 LDR W8, [X19 + 0x20]
	0x034F5434 CMP W8, 0x0
	0x034F5438 B.GT 0x34F53CC
	0x034F543C B 0x34F5520
	0x034F5440 LDR X8, [X20 + 0x10]
	0x034F5444 CBZ X8, 0x34F5538
	0x034F5448 LDRB W9, [X8 + 0x40]
	0x034F544C CMP W9, 0x5
	0x034F5450 B.CC 0x34F5520
	0x034F5454 LDR X21, [X8 + 0x48]
	0x034F5458 ADD X0, X20, 0x150
	0x034F545C MOV X1, X31
	0x034F5460 BL 0x3319BB4
	0x034F5464 LDR W8, [X19 + 0x20]
	0x034F5468 MOV X20, X0
	0x034F546C ADD X0, X31, 0xC
	0x034F5470 MOV X1, X31
	0x034F5474 STR W8, [X31 + 0xC]
	0x034F5478 BL 0x337B6E0
	0x034F547C ADRP X8, 0xC3E000
	0x034F5480 LDR X8, [X8 + 0x928]
	0x034F5484 ADRP X9, 0xC3E000
	0x034F5488 LDR X9, [X9 + 0x980]
	0x034F548C MOV X3, X0
	0x034F5490 LDR X8, [X8]
	0x034F5494 MOV X1, X20
	0x034F5498 LDR X2, [X9]
	0x034F549C MOV X4, X31
	0x034F54A0 MOV X0, X8
	0x034F54A4 BL 0x32277C4
	0x034F54A8 CBZ X21, 0x34F5538
	0x034F54AC ADRP X10, 0xC06000
	0x034F54B0 LDR X8, [X21]
	0x034F54B4 LDR X10, [X10 + 0xBC8]
	0x034F54B8 MOV X20, X0
	0x034F54BC LDRH W9, [X8 + 0x12E]
	0x034F54C0 LDR X1, [X10]
	0x034F54C4 CBZ X9, 0x34F54E8
	0x034F54C8 LDR X10, [X8 + 0xB0]
	0x034F54CC ADD X10, X10, 0x8
	0x034F54D0 LDUR X11, [X10 - 0x8]
	0x034F54D4 CMP X11, X1
	0x034F54D8 B.EQ 0x34F5500
	0x034F54DC SUBS X9, X9, 0x1
	0x034F54E0 ADD X10, X10, 0x10
	0x034F54E4 B.NE 0x34F54D0
	0x034F54E8 MOV X0, X21
	0x034F54EC MOV W2, W31
	0x034F54F0 BL 0x1C5C788
	0x034F54F4 B 0x34F550C
	0x034F54F8 MOV W0, W31
	0x034F54FC B 0x34F5524
	0x034F5500 LDRSW X9, [X10]
	0x034F5504 ADD X8, X8, X9, 0x4, LSL
	0x034F5508 ADD X0, X8, 0x138
	0x034F550C LDP X8, X3, [X0]
	0x034F5510 MOVZ W1, 0x5
	0x034F5514 MOV X0, X21
	0x034F5518 MOV X2, X20
	0x034F551C BLR X8
	0x034F5520 LDR W0, [X19 + 0x20]
	0x034F5524 LDP X20, X19, [X31 + 0x30]
	0x034F5528 LDP X22, X21, [X31 + 0x20]
	0x034F552C LDP X30, X23, [X31 + 0x10]
	0x034F5530 ADD X31, X31, 0x40
	0x034F5534 RET
	0x034F5538 BL 0x1C16F20
	0x034F553C LDRB W8, [X0 + 0x10]
	0x034F5540 UBFM W0, W8, 0x1, 0x1
	0x034F5544 RET
	0x034F5548 STR X30, [X31 - 0x10]!
	0x034F554C SUB W9, W2, 0x1
	0x034F5550 MOVZ W10, 0xB06
	0x034F5554 UBFM W12, W9, 0x1D, 0x1C
	0x034F5558 MOVK W10, 0xE0000
	0x034F555C CMP W9, 0x3
	0x034F5560 AND X9, X12, 0xFFFFFF
	0x034F5564 MOV X8, X1
	0x034F5568 MOVZ W11, 0x7
	0x034F556C LSRV W9, W10, W9
	0x034F5570 CSEL W1, W9, W11, CC
	0x034F5574 UBFM X3, X2, 0x28, 0x3F
	0x034F5578 MOV X2, X8
	0x034F557C BL 0x34F12F8
	0x034F5580 MOVZ W0, 0x1
	0x034F5584 LDR X30, [X31], #0x10
	0x034F5588 RET
	0x034F558C LDRB W8, [X0 + 0x10]
	0x034F5590 AND W0, W8, 0x1
	0x034F5594 RET
	0x034F5598 STR X30, [X31 - 0x10]!
	0x034F559C LDR X8, [X0 + 0x10]
	0x034F55A0 CBZ X8, 0x34F55B0
	0x034F55A4 LDR X0, [X8 + 0xB0]
	0x034F55A8 LDR X30, [X31], #0x10
	0x034F55AC RET
	0x034F55B0 BL 0x1C16F20
	0x034F55B4 SUB X31, X31, 0x30
	0x034F55B8 STP X30, X21, [X31 + 0x10]
	0x034F55BC STP X20, X19, [X31 + 0x20]
	0x034F55C0 ADRP X19, 0xEEA000
	0x034F55C4 LDRB W8, [X19 + 0xA32]
	0x034F55C8 MOV X20, X1
	0x034F55CC MOV X21, X0
	0x034F55D0 TBNZ X8, 0x0, 0x34F55E8
	0x034F55D4 ADRP X0, 0xC3E000
	0x034F55D8 LDR X0, [X0 + 0x720]
	0x034F55DC BL 0x1C16CF4
	0x034F55E0 MOVZ W8, 0x1
	0x034F55E4 STRB W8, [X19 + 0xA32]
	0x034F55E8 CBZ X20, 0x34F56C0
	0x034F55EC LDRB W1, [X20 + 0x12]
	0x034F55F0 MOV X0, X21
	0x034F55F4 BL 0x34EFEEC
	0x034F55F8 MOV X19, X0
	0x034F55FC STRB W31, [X31 + 0xC]
	0x034F5600 ADD X1, X31, 0xC
	0x034F5604 MOV X2, X31
	0x034F5608 BL 0x33DE64C
	0x034F560C LDRB W8, [X20 + 0x10]
	0x034F5610 TBNZ X8, 0x1, 0x34F5634
	0x034F5614 CBZ X19, 0x34F56D8
	0x034F5618 LDR W8, [X19 + 0x50]
	0x034F561C STR W8, [X20 + 0x14]
	0x034F5620 LDR W8, [X19 + 0x54]
	0x034F5624 ADD W8, W8, 0x1
	0x034F5628 STR W8, [X19 + 0x54]
	0x034F562C STR W8, [X20 + 0x18]
	0x034F5630 B 0x34F5648
	0x034F5634 STR W31, [X20 + 0x14]
	0x034F5638 LDR W8, [X21 + 0x148]
	0x034F563C ADD W8, W8, 0x1
	0x034F5640 STR W8, [X21 + 0x148]
	0x034F5644 STR W8, [X20 + 0x1C]
	0x034F5648 LDR X8, [X21 + 0x10]
	0x034F564C CBZ X8, 0x34F56CC
	0x034F5650 LDRB W9, [X8 + 0x5B]
	0x034F5654 ADRP X8, 0xC3E000
	0x034F5658 LDR X8, [X8 + 0x720]
	0x034F565C CBZ W9, 0x34F567C
	0x034F5660 CBZ X19, 0x34F56D0
	0x034F5664 LDR X0, [X19 + 0x38]
	0x034F5668 CBZ X0, 0x34F56D4
	0x034F566C LDR X2, [X8]
	0x034F5670 MOV X1, X20
	0x034F5674 BL 0x24F1750
	0x034F5678 B 0x34F5694
	0x034F567C CBZ X19, 0x34F56DC
	0x034F5680 LDR X0, [X19 + 0x40]
	0x034F5684 CBZ X0, 0x34F56E0
	0x034F5688 LDR X2, [X8]
	0x034F568C MOV X1, X20
	0x034F5690 BL 0x24F1750
	0x034F5694 MOV X21, X31
	0x034F5698 LDRB W8, [X31 + 0xC]
	0x034F569C CBZ W8, 0x34F56AC
	0x034F56A0 MOV X0, X19
	0x034F56A4 MOV X1, X31
	0x034F56A8 BL 0x33E14E4
	0x034F56AC CBNZ X21, 0x34F56C4
	0x034F56B0 LDP X20, X19, [X31 + 0x20]
	0x034F56B4 LDP X30, X21, [X31 + 0x10]
	0x034F56B8 ADD X31, X31, 0x30
	0x034F56BC RET
	0x034F56C0 BL 0x1C16F20
	0x034F56C4 MOV X0, X21
	0x034F56C8 BL 0x1C16F18
	0x034F56CC BL 0x1C16F20
	0x034F56D0 BL 0x1C16F20
	0x034F56D4 BL 0x1C16F20
	0x034F56D8 BL 0x1C16F20
	0x034F56DC BL 0x1C16F20
	0x034F56E0 BL 0x1C16F20
	0x034F56E4 B 0x34F56FC
	0x034F56E8 B 0x34F56FC
	0x034F56EC B 0x34F56FC
	0x034F56F0 B 0x34F56FC
	0x034F56F4 B 0x34F56FC
	0x034F56F8 B 0x34F56FC
	0x034F56FC MOV X20, X0
	0x034F5700 CMP W1, 0x1
	0x034F5704 B.NE 0x34F571C
	0x034F5708 MOV X0, X20
	0x034F570C BL 0x3EB1AD0
	0x034F5710 LDR X21, [X0]
	0x034F5714 BL 0x3EB1AE0
	0x034F5718 B 0x34F5698
	0x034F571C MOV X21, X31
	0x034F5720 B 0x34F5728
	0x034F5724 MOV X20, X0
	0x034F5728 LDRB W8, [X31 + 0xC]
	0x034F572C CBZ W8, 0x34F573C
	0x034F5730 MOV X0, X19
	0x034F5734 MOV X1, X31
	0x034F5738 BL 0x33E14E4
	0x034F573C CBNZ X21, 0x34F5748
	0x034F5740 MOV X0, X20
	0x034F5744 BL 0x1D2C690
	0x034F5748 MOV X0, X21
	0x034F574C BL 0x1C16F18
	0x034F5750 BL 0x1990590
	0x034F5754 SUB X31, X31, 0x30
	0x034F5758 STP X30, X21, [X31 + 0x10]
	0x034F575C STP X20, X19, [X31 + 0x20]
	0x034F5760 ADRP X19, 0xEEA000
	0x034F5764 ADRP X20, 0xC3E000
	0x034F5768 LDRB W8, [X19 + 0xA6F]
	0x034F576C LDR X20, [X20 + 0x778]
	0x034F5770 TBNZ X8, 0x0, 0x34F57AC
	0x034F5774 ADRP X0, 0xC3E000
	0x034F5778 LDR X0, [X0 + 0x778]
	0x034F577C BL 0x1C16CF4
	0x034F5780 ADRP X0, 0xC3E000
	0x034F5784 LDR X0, [X0 + 0x988]
	0x034F5788 BL 0x1C16CF4
	0x034F578C ADRP X0, 0xC3E000
	0x034F5790 LDR X0, [X0 + 0x990]
	0x034F5794 BL 0x1C16CF4
	0x034F5798 ADRP X0, 0xC07000
	0x034F579C LDR X0, [X0 + 0xBA8]
	0x034F57A0 BL 0x1C16CF4
	0x034F57A4 MOVZ W8, 0x1
	0x034F57A8 STRB W8, [X19 + 0xA6F]
	0x034F57AC LDR X0, [X20]
	0x034F57B0 LDR W8, [X0 + 0xE0]
	0x034F57B4 CBNZ W8, 0x34F57C0
	0x034F57B8 BL 0x1C16DFC
	0x034F57BC LDR X0, [X20]
	0x034F57C0 LDR X8, [X0 + 0xB8]
	0x034F57C4 LDR X19, [X8 + 0x8]
	0x034F57C8 STRB W31, [X31 + 0xC]
	0x034F57CC ADD X1, X31, 0xC
	0x034F57D0 MOV X0, X19
	0x034F57D4 MOV X2, X31
	0x034F57D8 BL 0x33DE64C
	0x034F57DC LDR X8, [X20]
	0x034F57E0 LDR W9, [X8 + 0xE0]
	0x034F57E4 CBNZ W9, 0x34F57F4
	0x034F57E8 MOV X0, X8
	0x034F57EC BL 0x1C16DFC
	0x034F57F0 LDR X8, [X20]
	0x034F57F4 LDR X9, [X8 + 0xB8]
	0x034F57F8 LDR X9, [X9 + 0x8]
	0x034F57FC CBZ X9, 0x34F58A0
	0x034F5800 LDR W10, [X9 + 0x20]
	0x034F5804 CMP W10, 0x0
	0x034F5808 B.LE 0x34F5848
	0x034F580C LDR W10, [X8 + 0xE0]
	0x034F5810 CBNZ W10, 0x34F582C
	0x034F5814 MOV X0, X8
	0x034F5818 BL 0x1C16DFC
	0x034F581C LDR X8, [X20]
	0x034F5820 LDR X8, [X8 + 0xB8]
	0x034F5824 LDR X9, [X8 + 0x8]
	0x034F5828 CBZ X9, 0x34F58A4
	0x034F582C ADRP X8, 0xC3E000
	0x034F5830 LDR X8, [X8 + 0x988]
	0x034F5834 LDR X1, [X8]
	0x034F5838 MOV X0, X9
	0x034F583C BL 0x24F18D4
	0x034F5840 MOV X20, X0
	0x034F5844 B 0x34F5868
	0x034F5848 ADRP X8, 0xC07000
	0x034F584C LDR X8, [X8 + 0xBA8]
	0x034F5850 LDR X0, [X8]
	0x034F5854 BL 0x1C16F10
	0x034F5858 MOV X20, X0
	0x034F585C MOVZ W1, 0x4B
	0x034F5860 MOV X2, X31
	0x034F5864 BL 0x3517E94
	0x034F5868 MOV X21, X31
	0x034F586C LDRB W8, [X31 + 0xC]
	0x034F5870 CBZ W8, 0x34F5880
	0x034F5874 MOV X0, X19
	0x034F5878 MOV X1, X31
	0x034F587C BL 0x33E14E4
	0x034F5880 CBNZ X21, 0x34F5898
	0x034F5884 MOV X0, X20
	0x034F5888 LDP X20, X19, [X31 + 0x20]
	0x034F588C LDP X30, X21, [X31 + 0x10]
	0x034F5890 ADD X31, X31, 0x30
	0x034F5894 RET
	0x034F5898 MOV X0, X21
	0x034F589C BL 0x1C16F18
	0x034F58A0 BL 0x1C16F20
	0x034F58A4 BL 0x1C16F20
	0x034F58A8 B 0x34F58BC
	0x034F58AC B 0x34F58BC
	0x034F58B0 B 0x34F58BC
	0x034F58B4 B 0x34F58BC
	0x034F58B8 B 0x34F58BC
	0x034F58BC MOV X20, X0
	0x034F58C0 CMP W1, 0x1
	0x034F58C4 B.NE 0x34F58E8
	0x034F58C8 MOV X0, X20
	0x034F58CC BL 0x3EB1AD0
	0x034F58D0 LDR X8, [X0]
	0x034F58D4 STR X8, [X31]
	0x034F58D8 BL 0x3EB1AE0
	0x034F58DC LDR X21, [X31]
	0x034F58E0 MOV X20, X31
	0x034F58E4 B 0x34F586C
	0x034F58E8 STR X31, [X31]
	0x034F58EC B 0x34F58F4
	0x034F58F0 MOV X20, X0
	0x034F58F4 LDRB W8, [X31 + 0xC]
	0x034F58F8 CBZ W8, 0x34F5908
	0x034F58FC MOV X0, X19
	0x034F5900 MOV X1, X31
	0x034F5904 BL 0x33E14E4
	0x034F5908 LDR X8, [X31]
	0x034F590C CBNZ X8, 0x34F5918
	0x034F5910 MOV X0, X20
	0x034F5914 BL 0x1D2C690
	0x034F5918 LDR X0, [X31]
	0x034F591C BL 0x1C16F18
	0x034F5920 BL 0x1990590
	0x034F5924 SUB X31, X31, 0x30
	0x034F5928 STP X30, X21, [X31 + 0x10]
	0x034F592C STP X20, X19, [X31 + 0x20]
	0x034F5930 ADRP X19, 0xEEA000
	0x034F5934 LDRB W8, [X19 + 0xA70]
	0x034F5938 MOV X20, X0
	0x034F593C TBNZ X8, 0x0, 0x34F5960
	0x034F5940 ADRP X0, 0xC3E000
	0x034F5944 LDR X0, [X0 + 0x778]
	0x034F5948 BL 0x1C16CF4
	0x034F594C ADRP X0, 0xC3E000
	0x034F5950 LDR X0, [X0 + 0x998]
	0x034F5954 BL 0x1C16CF4
	0x034F5958 MOVZ W8, 0x1
	0x034F595C STRB W8, [X19 + 0xA70]
	0x034F5960 CBZ X20, 0x34F5A1C
	0x034F5964 ADRP X21, 0xC3E000
	0x034F5968 LDR X21, [X21 + 0x778]
	0x034F596C MOV X0, X20
	0x034F5970 MOV W1, W31
	0x034F5974 MOV X2, X31
	0x034F5978 BL 0x3517FDC
	0x034F597C MOV X0, X20
	0x034F5980 MOV X1, X31
	0x034F5984 MOV X2, X31
	0x034F5988 BL 0x3517EFC
	0x034F598C LDR X0, [X21]
	0x034F5990 LDR W8, [X0 + 0xE0]
	0x034F5994 CBNZ W8, 0x34F59A0
	0x034F5998 BL 0x1C16DFC
	0x034F599C LDR X0, [X21]
	0x034F59A0 LDR X8, [X0 + 0xB8]
	0x034F59A4 LDR X19, [X8 + 0x8]
	0x034F59A8 STRB W31, [X31 + 0xC]
	0x034F59AC ADD X1, X31, 0xC
	0x034F59B0 MOV X0, X19
	0x034F59B4 MOV X2, X31
	0x034F59B8 BL 0x33DE64C
	0x034F59BC LDR X0, [X21]
	0x034F59C0 LDR W8, [X0 + 0xE0]
	0x034F59C4 CBNZ W8, 0x34F59D0
	0x034F59C8 BL 0x1C16DFC
	0x034F59CC LDR X0, [X21]
	0x034F59D0 LDR X8, [X0 + 0xB8]
	0x034F59D4 LDR X0, [X8 + 0x8]
	0x034F59D8 CBZ X0, 0x34F5A28
	0x034F59DC ADRP X8, 0xC3E000
	0x034F59E0 LDR X8, [X8 + 0x998]
	0x034F59E4 LDR X2, [X8]
	0x034F59E8 MOV X1, X20
	0x034F59EC BL 0x24F1750
	0x034F59F0 MOV X20, X31
	0x034F59F4 LDRB W8, [X31 + 0xC]
	0x034F59F8 CBZ W8, 0x34F5A08
	0x034F59FC MOV X0, X19
	0x034F5A00 MOV X1, X31
	0x034F5A04 BL 0x33E14E4
	0x034F5A08 CBNZ X20, 0x34F5A20
	0x034F5A0C LDP X20, X19, [X31 + 0x20]
	0x034F5A10 LDP X30, X21, [X31 + 0x10]
	0x034F5A14 ADD X31, X31, 0x30
	0x034F5A18 RET
	0x034F5A1C BL 0x1C16F20
	0x034F5A20 MOV X0, X20
	0x034F5A24 BL 0x1C16F18
	0x034F5A28 BL 0x1C16F20
	0x034F5A2C B 0x34F5A30
	0x034F5A30 MOV X21, X0
	0x034F5A34 CMP W1, 0x1
	0x034F5A38 B.NE 0x34F5A50
	0x034F5A3C MOV X0, X21
	0x034F5A40 BL 0x3EB1AD0
	0x034F5A44 LDR X20, [X0]
	0x034F5A48 BL 0x3EB1AE0
	0x034F5A4C B 0x34F59F4
	0x034F5A50 MOV X20, X31
	0x034F5A54 B 0x34F5A5C
	0x034F5A58 MOV X21, X0
	0x034F5A5C LDRB W8, [X31 + 0xC]
	0x034F5A60 CBZ W8, 0x34F5A70
	0x034F5A64 MOV X0, X19
	0x034F5A68 MOV X1, X31
	0x034F5A6C BL 0x33E14E4
	0x034F5A70 CBNZ X20, 0x34F5A7C
	0x034F5A74 MOV X0, X21
	0x034F5A78 BL 0x1D2C690
	0x034F5A7C MOV X0, X20
	0x034F5A80 BL 0x1C16F18
	0x034F5A84 BL 0x1990590
	0x034F5A88 STP X30, X23, [X31 - 0x30]!
	0x034F5A8C STP X22, X21, [X31 + 0x10]
	0x034F5A90 STP X20, X19, [X31 + 0x20]
	0x034F5A94 ADRP X22, 0xEEA000
	0x034F5A98 LDRB W8, [X22 + 0xA50]
	0x034F5A9C MOV X19, X2
	0x034F5AA0 MOV X20, X1
	0x034F5AA4 MOV X21, X0
	0x034F5AA8 TBNZ X8, 0x0, 0x34F5AC0
	0x034F5AAC ADRP X0, 0xC06000
	0x034F5AB0 LDR X0, [X0 + 0xF00]
	0x034F5AB4 BL 0x1C16CF4
	0x034F5AB8 MOVZ W8, 0x1
	0x034F5ABC STRB W8, [X22 + 0xA50]
	0x034F5AC0 LDRSW X8, [X19]
	0x034F5AC4 ADD W9, W8, 0x1
	0x034F5AC8 STR W9, [X19]
	0x034F5ACC CBZ X20, 0x34F5C80
	0x034F5AD0 LDR W9, [X20 + 0x18]
	0x034F5AD4 CMP W8, W9
	0x034F5AD8 B.CS 0x34F5C7C
	0x034F5ADC LDRB W9, [X21 + 0x11]
	0x034F5AE0 ADD X8, X20, X8
	0x034F5AE4 STRB W9, [X8 + 0x20]
	0x034F5AE8 LDRSW X8, [X19]
	0x034F5AEC ADD W9, W8, 0x1
	0x034F5AF0 STR W9, [X19]
	0x034F5AF4 LDR W9, [X20 + 0x18]
	0x034F5AF8 CMP W8, W9
	0x034F5AFC B.CS 0x34F5C7C
	0x034F5B00 LDRB W9, [X21 + 0x12]
	0x034F5B04 ADD X8, X20, X8
	0x034F5B08 STRB W9, [X8 + 0x20]
	0x034F5B0C LDRSW X8, [X19]
	0x034F5B10 ADD W9, W8, 0x1
	0x034F5B14 STR W9, [X19]
	0x034F5B18 LDR W9, [X20 + 0x18]
	0x034F5B1C CMP W8, W9
	0x034F5B20 B.CS 0x34F5C7C
	0x034F5B24 LDRB W9, [X21 + 0x10]
	0x034F5B28 ADD X8, X20, X8
	0x034F5B2C STRB W9, [X8 + 0x20]
	0x034F5B30 LDRSW X8, [X19]
	0x034F5B34 ADD W9, W8, 0x1
	0x034F5B38 STR W9, [X19]
	0x034F5B3C LDR W9, [X20 + 0x18]
	0x034F5B40 CMP W8, W9
	0x034F5B44 B.CS 0x34F5C7C
	0x034F5B48 LDRB W9, [X21 + 0x20]
	0x034F5B4C ADRP X23, 0xC06000
	0x034F5B50 LDR X23, [X23 + 0xF00]
	0x034F5B54 ADD X8, X20, X8
	0x034F5B58 STRB W9, [X8 + 0x20]
	0x034F5B5C LDR W22, [X21 + 0x54]
	0x034F5B60 LDR X0, [X23]
	0x034F5B64 LDR W8, [X0 + 0xE0]
	0x034F5B68 CBNZ W8, 0x34F5B70
	0x034F5B6C BL 0x1C16DFC
	0x034F5B70 MOV W0, W22
	0x034F5B74 MOV X1, X20
	0x034F5B78 MOV X2, X19
	0x034F5B7C MOV X3, X31
	0x034F5B80 BL 0x35067BC
	0x034F5B84 LDR W0, [X21 + 0x14]
	0x034F5B88 MOV X1, X20
	0x034F5B8C MOV X2, X19
	0x034F5B90 MOV X3, X31
	0x034F5B94 BL 0x35067BC
	0x034F5B98 LDRB W8, [X21 + 0x11]
	0x034F5B9C SUB W8, W8, 0x7
	0x034F5BA0 CMP W8, 0x8
	0x034F5BA4 B.HI 0x34F5C38
	0x034F5BA8 ADRP X9, 0xFFFFFFFFFD6A1000
	0x034F5BAC ADD X9, X9, 0xA92
	0x034F5BB0 ADR X10, 0x10
	0x034F5BB4 LDRB W11, [X9, X8, LSL]
	0x034F5BB8 ADD X10, X10, X11, 0x2, LSL
	0x034F5BBC BR X10
	0x034F5BC0 LDR X0, [X23]
	0x034F5BC4 LDR W22, [X21 + 0x24]
	0x034F5BC8 LDR W8, [X0 + 0xE0]
	0x034F5BCC CBNZ W8, 0x34F5BD4
	0x034F5BD0 BL 0x1C16DFC
	0x034F5BD4 MOV W0, W22
	0x034F5BD8 MOV X1, X20
	0x034F5BDC MOV X2, X19
	0x034F5BE0 MOV X3, X31
	0x034F5BE4 BL 0x35067BC
	0x034F5BE8 LDR W0, [X21 + 0x28]
	0x034F5BEC MOV X1, X20
	0x034F5BF0 MOV X2, X19
	0x034F5BF4 MOV X3, X31
	0x034F5BF8 BL 0x35067BC
	0x034F5BFC LDR W0, [X21 + 0x2C]
	0x034F5C00 MOV X1, X20
	0x034F5C04 MOV X2, X19
	0x034F5C08 MOV X3, X31
	0x034F5C0C BL 0x35067BC
	0x034F5C10 LDR W0, [X21 + 0x30]
	0x034F5C14 MOV X1, X20
	0x034F5C18 MOV X2, X19
	0x034F5C1C MOV X3, X31
	0x034F5C20 BL 0x35067BC
	0x034F5C24 LDR W21, [X21 + 0x34]
	0x034F5C28 B 0x34F5C5C
	0x034F5C2C LDR X0, [X23]
	0x034F5C30 LDR W21, [X21 + 0x18]
	0x034F5C34 B 0x34F5C50
	0x034F5C38 LDP X20, X19, [X31 + 0x20]
	0x034F5C3C LDP X22, X21, [X31 + 0x10]
	0x034F5C40 LDP X30, X23, [X31], #0x30
	0x034F5C44 RET
	0x034F5C48 LDR X0, [X23]
	0x034F5C4C LDR W21, [X21 + 0x1C]
	0x034F5C50 LDR W8, [X0 + 0xE0]
	0x034F5C54 CBNZ W8, 0x34F5C5C
	0x034F5C58 BL 0x1C16DFC
	0x034F5C5C MOV W0, W21
	0x034F5C60 MOV X1, X20
	0x034F5C64 MOV X2, X19
	0x034F5C68 LDP X20, X19, [X31 + 0x20]
	0x034F5C6C LDP X22, X21, [X31 + 0x10]
	0x034F5C70 MOV X3, X31
	0x034F5C74 LDP X30, X23, [X31], #0x30
	0x034F5C78 B 0x35067BC
	0x034F5C7C BL 0x1C16F28
	0x034F5C80 BL 0x1C16F20
	0x034F5C84 LDR X0, [X0 + 0x58]
	0x034F5C88 CBZ X0, 0x34F5C94
	0x034F5C8C MOV X1, X31
	0x034F5C90 B 0x351806C
	0x034F5C94 RET
	0x034F5C98 STR X30, [X31 - 0x10]!
	0x034F5C9C LDR X0, [X0 + 0x58]
	0x034F5CA0 CBZ X0, 0x34F5CB0
	0x034F5CA4 MOV X1, X31
	0x034F5CA8 LDR X30, [X31], #0x10
	0x034F5CAC B 0x3517FCC
	0x034F5CB0 BL 0x1C16F20
	0x034F5CB4 STR X30, [X31 - 0x40]!
	0x034F5CB8 STP X24, X23, [X31 + 0x10]
	0x034F5CBC STP X22, X21, [X31 + 0x20]
	0x034F5CC0 STP X20, X19, [X31 + 0x30]
	0x034F5CC4 ADRP X22, 0xEEA000

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+48], X29
	003 Move [X31+56], X30
	004 Move [X31+64], X28
	005 Move [X31+72], X27
	006 Move [X31+80], X26
	007 Move [X31+88], X25
	008 Move [X31+96], X24
	009 Move [X31+104], X23
	010 Move [X31+112], X22
	011 Move [X31+120], X21
	012 Move [X31+128], X20
	013 Move [X31+136], X19
	014 Move X19, 0xEEC000
	015 Move W8, [X19+2600]
	016 Move X20, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {50}
	021 Move X0, 0xC09000
	022 Move X0, [X0+2536]
	023 Call 0x1C17CF4
	024 Move X0, 0xC08000
	025 Move X0, [X0+3016]
	026 Call 0x1C17CF4
	027 Move X0, 0xC00000
	028 Move X0, [X0+1880]
	029 Call 0x1C17CF4
	030 Move X0, 0xC40000
	031 Move X0, [X0+1848]
	032 Call 0x1C17CF4
	033 Move X0, 0xC40000
	034 Move X0, [X0+2328]
	035 Call 0x1C17CF4
	036 Move X0, 0xC00000
	037 Move X0, [X0+2512]
	038 Call 0x1C17CF4
	039 Move X0, 0xC40000
	040 Move X0, [X0+2360]
	041 Call 0x1C17CF4
	042 Move X0, 0xC40000
	043 Move X0, [X0+2368]
	044 Call 0x1C17CF4
	045 Move X0, 0xC40000
	046 Move X0, [X0+2376]
	047 Call 0x1C17CF4
	048 Move W8, 1
	049 Move [X19+2600], W8
	050 Move [X31+40], W31
	051 Move [X31+36], W31
	052 Move [X31+32], W31
	053 Move [X31+28], W31
	054 Move W8, [X20+64]
	055 Compare W8, 0
	056 JumpIfEqual {101}
	057 Move X8, [X20+40]
	058 Compare X8, 0
	059 JumpIfEqual {735}
	060 Move W8, [X8+28]
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Move X19, [X20+344]
	063 Move [X31+44], W31
	064 Add X1, X31, 44
	065 Move X0, X19
	066 Move X2, X31
	067 Call Monitor.Enter, X0, X1
	068 Move X0, X20
	069 Call EnetPeer.CalculateInitialOffset, X0
	070 Move X8, [X20+192]
	071 Move [X20+352], W0
	072 Move [X20+336], W31
	073 Compare X8, 0
	074 JumpIfEqual {740}
	075 Move X0, X8
	076 Move X1, X31
	077 Call Stopwatch.get_ElapsedMilliseconds, X0
	078 Move X22, [X20+312]
	079 Move [X20+216], W0
	080 Move [X31+40], W31
	081 Add X1, X31, 40
	082 Move X0, X22
	083 Move X2, X31
	084 Call Monitor.Enter, X0, X1
	085 Move X0, [X20+312]
	086 Compare X0, 0
	087 JumpIfEqual {741}
	088 Move X1, X31
	089 Call StreamBuffer.get_Length, X0
	090 NotImplemented "Instruction CMP not yet implemented."
	091 Move X0, X20
	092 Call EnetPeer.SerializeAckToBuffer, X0
	093 Move W21, W0
	094 Move X0, [X20+192]
	095 Compare X0, 0
	096 JumpIfEqual {747}
	097 Move X1, X31
	098 Call Stopwatch.get_ElapsedMilliseconds, X0
	099 Move X25, X31
	100 Move [X20+212], W0
	101 Move W21, W31
	102 Move X25, X31
	103 Move W21, W31
	104 Move W23, 6
	105 Move W8, [X31+40]
	106 Compare W8, 0
	107 JumpIfEqual {111}
	108 Move X0, X22
	109 Move X1, X31
	110 Call Monitor.Exit, X0
	111 Compare X25, 0
	112 JumpIfNotEqual {742}
	113 NotImplemented "Instruction CMP not yet implemented."
	114 Compare W23, 0
	115 JumpIfNotEqual {693}
	116 Move X0, [X20+192]
	117 Compare X0, 0
	118 JumpIfEqual {746}
	119 Move X1, X31
	120 Call Stopwatch.get_ElapsedMilliseconds, X0
	121 Move W8, [X20+200]
	122 NotImplemented "Instruction CMP not yet implemented."
	123 Move X8, [X20+296]
	124 Compare X8, 0
	125 JumpIfEqual {762}
	126 Move W8, [X8+24]
	127 NotImplemented "Instruction CMP not yet implemented."
	128 Move X0, [X20+192]
	129 Compare X0, 0
	130 JumpIfEqual {777}
	131 Move X1, X31
	132 Call Stopwatch.get_ElapsedMilliseconds, X0
	133 Move X24, X0
	134 Move X0, [X20+296]
	135 Move [X31+36], W31
	136 Add X1, X31, 36
	137 Move X2, X31
	138 Move [X31], X0
	139 Call Monitor.Enter, X0, X1
	140 Move X0, [X20+296]
	141 Compare X0, 0
	142 JumpIfEqual {345}
	143 Move X27, 0xC3F000
	144 Move X28, 0xBFF000
	145 Move X27, [X27+2328]
	146 Move X28, [X28+1880]
	147 Move W29, W31
	148 Move W23, W31
	149 Add W22, W24, 100
	150 Move W8, [X0+24]
	151 NotImplemented "Instruction CMP not yet implemented."
	152 Move X2, [X27]
	153 Move W1, W23
	154 Call List`1<Object>.get_Item, X0, X1
	155 Move X24, X0
	156 Compare X0, 0
	157 JumpIfEqual {723}
	158 Move X0, [X20+192]
	159 Compare X0, 0
	160 JumpIfEqual {722}
	161 Move W25, [X24+60]
	162 Move W26, [X24+68]
	163 Move X1, X31
	164 Call Stopwatch.get_ElapsedMilliseconds, X0
	165 Add W8, W26, W25
	166 NotImplemented "Instruction CMP not yet implemented."
	167 Move X8, [X20+16]
	168 Compare X8, 0
	169 JumpIfEqual {736}
	170 Move W9, [X24+64]
	171 Move W10, [X8+112]
	172 NotImplemented "Instruction CMP not yet implemented."
	173 Move X0, [X20+192]
	174 Compare X0, 0
	175 JumpIfEqual {737}
	176 Move X1, X31
	177 Call Stopwatch.get_ElapsedMilliseconds, X0
	178 Move W8, [X24+72]
	179 NotImplemented "Instruction CMP not yet implemented."
	180 Move W2, 1
	181 Move X0, X20
	182 Move X1, X24
	183 Call EnetPeer.SerializeCommandToBuffer, X0, X1, X2
	184 Move TEMP, X0
	185 And TEMP, TEMP, 1
	186 Compare TEMP, 1
	187 JumpIfNotEqual {319}
	188 Move X8, [X20+16]
	189 Compare X8, 0
	190 JumpIfEqual {744}
	191 Move W9, [X8+64]
	192 NotImplemented "Instruction CMP not yet implemented."
	193 Move X25, [X8+72]
	194 Move X8, 0xBFF000
	195 Move X8, [X8+2512]
	196 Move X0, [X8]
	197 Move W1, 5
	198 Call 0x1C17D6C
	199 Move X26, X0
	200 Compare X0, 0
	201 JumpIfEqual {761}
	202 Move X8, [X26]
	203 Move X1, [X8+64]
	204 Move X0, X24
	205 Call 0x1C17E00
	206 Compare X0, 0
	207 JumpIfEqual {758}
	208 Move W8, [X26+24]
	209 Compare W8, 0
	210 JumpIfEqual {757}
	211 Move [X26+32], X24
	212 Move X0, [X20+192]
	213 Compare X0, 0
	214 JumpIfEqual {756}
	215 Move X1, X31
	216 Call Stopwatch.get_ElapsedMilliseconds, X0
	217 Move X8, [X28]
	218 Move [X31+24], W0
	219 Add X1, X31, 24
	220 Move X0, X8
	221 Call 0x1C17E04
	222 Move X24, X0
	223 Compare X0, 0
	224 JumpIfEqual {231}
	225 Move X8, [X26]
	226 Move X1, [X8+64]
	227 Move X0, X24
	228 Call 0x1C17E00
	229 Compare X0, 0
	230 JumpIfEqual {765}
	231 Move W8, [X26+24]
	232 NotImplemented "Instruction CMP not yet implemented."
	233 Move [X26+40], X24
	234 Move W8, [X20+116]
	235 Move X0, [X28]
	236 Move [X31+20], W8
	237 Add X1, X31, 20
	238 Call 0x1C17E04
	239 Move X24, X0
	240 Compare X0, 0
	241 JumpIfEqual {248}
	242 Move X8, [X26]
	243 Move X1, [X8+64]
	244 Move X0, X24
	245 Call 0x1C17E00
	246 Compare X0, 0
	247 JumpIfEqual {768}
	248 Move W8, [X26+24]
	249 NotImplemented "Instruction CMP not yet implemented."
	250 Move [X26+48], X24
	251 Move W8, [X20+120]
	252 Move X0, [X28]
	253 Move [X31+16], W8
	254 Add X1, X31, 16
	255 Call 0x1C17E04
	256 Move X24, X0
	257 Compare X0, 0
	258 JumpIfEqual {265}
	259 Move X8, [X26]
	260 Move X1, [X8+64]
	261 Move X0, X24
	262 Call 0x1C17E00
	263 Compare X0, 0
	264 JumpIfEqual {771}
	265 Move W8, [X26+24]
	266 NotImplemented "Instruction CMP not yet implemented."
	267 Move [X26+56], X24
	268 Move X0, [X20+192]
	269 Compare X0, 0
	270 JumpIfEqual {755}
	271 Move X1, X31
	272 Call Stopwatch.get_ElapsedMilliseconds, X0
	273 Move W9, [X20+136]
	274 Move X8, [X28]
	275 Subtract W9, W0, W9
	276 Move [X31+12], W9
	277 Add X1, X31, 12
	278 Move X0, X8
	279 Call 0x1C17E04
	280 Move X24, X0
	281 Compare X0, 0
	282 JumpIfEqual {289}
	283 Move X8, [X26]
	284 Move X1, [X8+64]
	285 Move X0, X24
	286 Call 0x1C17E00
	287 Compare X0, 0
	288 JumpIfEqual {774}
	289 Move W8, [X26+24]
	290 NotImplemented "Instruction CMP not yet implemented."
	291 Move [X26+64], X24
	292 Move X8, 0xC3F000
	293 Move X8, [X8+2360]
	294 Move X0, [X8]
	295 Move X1, X26
	296 Move X2, X31
	297 Call String.Format, X0, X1
	298 Compare X25, 0
	299 JumpIfEqual {754}
	300 Move X8, [X25]
	301 Move X10, 0xC07000
	302 Move X24, X0
	303 NotImplemented "Instruction LDRH not yet implemented."
	304 Move X10, [X10+3016]
	305 Move X1, [X10]
	306 Compare X9, 0
	307 JumpIfEqual {314}
	308 Move X10, [X8+176]
	309 Add X10, X10, 8
	310 NotImplemented "Instruction LDUR not yet implemented."
	311 NotImplemented "Instruction CMP not yet implemented."
	312 Subtract X9, X9, 1
	313 Add X10, X10, 16
	314 Move X0, X25
	315 Move W2, W31
	316 Call 0x1C5D788
	317 NotImplemented "Instruction CMP not yet implemented."
	318 NotImplemented "Instruction CSEL not yet implemented."
	319 Move X0, [X20+16]
	320 Compare X0, 0
	321 JumpIfEqual {745}
	322 Move W22, [X20+200]
	323 Move X1, X31
	324 Call PhotonPeer.get_MaximumTransferUnit, X0
	325 Move W8, [X20+352]
	326 Add W29, W29, 1
	327 Subtract W8, W0, W8
	328 NotImplemented "Instruction CMP not yet implemented."
	329 NotImplemented "Instruction LDRSW not yet implemented."
	330 Add X8, X8, X9
	331 Add X0, X8, 312
	332 Move X8, [X0]
	333 Move X3, [X0+8]
	334 Move W1, 5
	335 Move X0, X25
	336 Move X2, X24
	337 NotImplemented "Instruction BLR not yet implemented."
	338 Move W8, [X20+376]
	339 Add W8, W8, 1
	340 Move [X20+376], W8
	341 Move X0, [X20+296]
	342 Add W23, W23, 1
	343 Compare X0, 0
	344 JumpIfNotEqual {150}
	345 Call 0x1C17F20
	346 Move X25, X31
	347 Add W21, W29, W21
	348 Move [X20+200], W22
	349 Move W22, 24
	350 Move X8, [X20+16]
	351 Compare X8, 0
	352 JumpIfEqual {788}
	353 Move W9, [X8+64]
	354 NotImplemented "Instruction CMP not yet implemented."
	355 Move X0, [X20+192]
	356 Compare X0, 0
	357 JumpIfEqual {785}
	358 Move X23, [X8+72]
	359 Move X1, X31
	360 Call Stopwatch.get_ElapsedMilliseconds, X0
	361 Move X8, [X28]
	362 Move [X31+24], W0
	363 Add X1, X31, 24
	364 Move X0, X8
	365 Call 0x1C17E04
	366 Move X8, 0xC08000
	367 Move X8, [X8+2536]
	368 Move X25, X0
	369 Move W26, [X20+372]
	370 Move X0, [X8]
	371 Move W8, [X0+224]
	372 Compare W8, 0
	373 JumpIfNotEqual {375}
	374 Call 0x1C17DFC
	375 Move W1, 16
	376 Move W0, W26
	377 Move X2, X31
	378 Call Convert.ToString, X0, X1
	379 Move X8, 0xC3F000
	380 Move X8, [X8+2368]
	381 Move X3, X0
	382 Move X0, [X8]
	383 Move X1, X24
	384 Move X2, X25
	385 Move X4, X31
	386 Call String.Format, X0, X1, X2, X3
	387 Compare X23, 0
	388 JumpIfEqual {786}
	389 Move X8, [X23]
	390 Move X10, 0xC07000
	391 Move X25, X0
	392 NotImplemented "Instruction LDRH not yet implemented."
	393 Move X10, [X10+3016]
	394 Move X1, [X10]
	395 Compare X9, 0
	396 JumpIfEqual {403}
	397 Move X10, [X8+176]
	398 Add X10, X10, 8
	399 NotImplemented "Instruction LDUR not yet implemented."
	400 NotImplemented "Instruction CMP not yet implemented."
	401 Subtract X9, X9, 1
	402 Add X10, X10, 16
	403 Move X0, X23
	404 Move W2, W31
	405 Call 0x1C5D788
	406 NotImplemented "Instruction LDRSW not yet implemented."
	407 Add X8, X8, X9
	408 Add X0, X8, 312
	409 Move X8, [X0]
	410 Move X3, [X0+8]
	411 Move W1, 2
	412 Move X0, X23
	413 Move X2, X25
	414 NotImplemented "Instruction BLR not yet implemented."
	415 Move X8, [X20+16]
	416 Compare X8, 0
	417 JumpIfEqual {787}
	418 Move W9, [X8+64]
	419 NotImplemented "Instruction CMP not yet implemented."
	420 Move X9, [X20]
	421 Move X23, [X8+72]
	422 Move X8, [X9+392]
	423 Move X1, [X9+400]
	424 Move X0, X20
	425 NotImplemented "Instruction BLR not yet implemented."
	426 Move X8, [X28]
	427 Move [X31+24], W0
	428 Add X1, X31, 24
	429 Move X0, X8
	430 Call 0x1C17E04
	431 Move W1, [X24+18]
	432 Move X25, X0
	433 Move X0, X20
	434 Call EnetPeer.GetChannel, X0, X1
	435 Compare X0, 0
	436 JumpIfEqual {790}
	437 Move W8, [X0+112]
	438 Move X0, [X28]
	439 Move [X31+20], W8
	440 Add X1, X31, 20
	441 Call 0x1C17E04
	442 Move X8, [X20+296]
	443 Compare X8, 0
	444 JumpIfEqual {791}
	445 Move X26, X0
	446 Move W8, [X8+24]
	447 Move X0, [X28]
	448 Move [X31+16], W8
	449 Add X1, X31, 16
	450 Call 0x1C17E04
	451 Move X8, 0xC3F000
	452 Move X8, [X8+2376]
	453 Move X3, X0
	454 Move X0, [X8]
	455 Move X1, X25
	456 Move X2, X26
	457 Move X4, X31
	458 Call String.Format, X0, X1, X2, X3
	459 Compare X23, 0
	460 JumpIfEqual {792}
	461 Move X8, [X23]
	462 Move X10, 0xC07000
	463 Move X25, X0
	464 NotImplemented "Instruction LDRH not yet implemented."
	465 Move X10, [X10+3016]
	466 Move X1, [X10]
	467 Compare X9, 0
	468 JumpIfEqual {475}
	469 Move X10, [X8+176]
	470 Add X10, X10, 8
	471 NotImplemented "Instruction LDUR not yet implemented."
	472 NotImplemented "Instruction CMP not yet implemented."
	473 Subtract X9, X9, 1
	474 Add X10, X10, 16
	475 Move X0, X23
	476 Move W2, W31
	477 Call 0x1C5D788
	478 NotImplemented "Instruction LDRSW not yet implemented."
	479 Add X8, X8, X9
	480 Add X0, X8, 312
	481 Move X8, [X0]
	482 Move X3, [X0+8]
	483 Move W1, 3
	484 Move X0, X23
	485 Move X2, X25
	486 NotImplemented "Instruction BLR not yet implemented."
	487 Move W8, 6
	488 Move [X20+64], W8
	489 Move W1, 1040
	490 Move X0, X20
	491 Call PeerBase.EnqueueStatusCallback, X0, X1
	492 Move X8, [X20]
	493 Move X9, [X8+488]
	494 Move X1, [X8+496]
	495 Move X0, X20
	496 NotImplemented "Instruction BLR not yet implemented."
	497 Move X0, X24
	498 Call NCommand.Release, X0
	499 Move X25, X31
	500 Move W22, 3
	501 Move W8, [X31+36]
	502 Compare W8, 0
	503 JumpIfEqual {507}
	504 Move X0, [X31]
	505 Move X1, X31
	506 Call Monitor.Exit, X0
	507 Compare X25, 0
	508 JumpIfNotEqual {778}
	509 NotImplemented "Instruction CMP not yet implemented."
	510 Compare W22, 0
	511 JumpIfNotEqual {693}
	512 Move W8, [X20+64]
	513 NotImplemented "Instruction CMP not yet implemented."
	514 Move X8, [X20+16]
	515 Compare X8, 0
	516 JumpIfEqual {763}
	517 Move W8, [X8+120]
	518 NotImplemented "Instruction CMP not yet implemented."
	519 Move X8, [X20+296]
	520 Compare X8, 0
	521 JumpIfEqual {780}
	522 Move W8, [X8+24]
	523 Compare W8, 0
	524 JumpIfNotEqual {580}
	525 Move X0, [X20+192]
	526 Compare X0, 0
	527 JumpIfEqual {783}
	528 Move X1, X31
	529 Call Stopwatch.get_ElapsedMilliseconds, X0
	530 Move X8, [X20+16]
	531 Compare X8, 0
	532 JumpIfEqual {784}
	533 Move W9, [X20+204]
	534 Move W8, [X8+120]
	535 Subtract W9, W0, W9
	536 NotImplemented "Instruction CMP not yet implemented."
	537 Move W8, [X20+352]
	538 Add W1, W8, 12
	539 Move X0, X20
	540 Call EnetPeer.CalculatePacketSize, X0, X1
	541 Move W22, W0
	542 Move X0, [X20+16]
	543 Compare X0, 0
	544 JumpIfEqual {789}
	545 Move X1, X31
	546 Call PhotonPeer.get_MaximumTransferUnit, X0
	547 NotImplemented "Instruction CMP not yet implemented."
	548 Move X0, [X20+288]
	549 Compare X0, 0
	550 JumpIfEqual {793}
	551 Move W2, 5
	552 Move W4, 255
	553 Move X1, X20
	554 Move X3, X31
	555 Call NCommandPool.Acquire, X0, X1, X2, X3, X4
	556 Move X22, X0
	557 Move X0, X20
	558 Move X1, X22
	559 Call EnetPeer.QueueOutgoingReliableCommand, X0, X1
	560 Move X0, [X20+16]
	561 Compare X0, 0
	562 JumpIfEqual {794}
	563 Move X1, X31
	564 Call PhotonPeer.get_TrafficStatsEnabled, X0
	565 Move TEMP, X0
	566 And TEMP, TEMP, 1
	567 Compare TEMP, 1
	568 JumpIfNotEqual {580}
	569 Move X8, [X20+16]
	570 Compare X8, 0
	571 JumpIfEqual {795}
	572 Compare X22, 0
	573 JumpIfEqual {796}
	574 Move X0, [X8+168]
	575 Compare X0, 0
	576 JumpIfEqual {797}
	577 Move W1, [X22+84]
	578 Move X2, X31
	579 Call TrafficStats.CountControlCommand, X0, X1
	580 Add X0, X20, 304
	581 Move W1, 1
	582 Move W2, 1
	583 Move X3, X31
	584 Call Interlocked.CompareExchange, X0, X1, X2
	585 NotImplemented "Instruction CMP not yet implemented."
	586 Move X0, X20
	587 Call EnetPeer.UpdateSendWindow, X0
	588 Move X22, [X20+392]
	589 Move [X31+32], W31
	590 Add X1, X31, 32
	591 Move X0, X22
	592 Move X2, X31
	593 Call Monitor.Enter, X0, X1
	594 Move X8, [X20+392]
	595 Compare X8, 0
	596 JumpIfEqual {718}
	597 Move X27, X31
	598 Move W9, [X8+24]
	599 NotImplemented "Instruction CMP not yet implemented."
	600 NotImplemented "Instruction CMP not yet implemented."
	601 Add X8, X8, X27
	602 Move X25, [X8+32]
	603 Move [X31+28], W31
	604 Add X1, X31, 28
	605 Move X0, X25
	606 Move X2, X31
	607 Call Monitor.Enter, X0, X1
	608 Compare X25, 0
	609 JumpIfEqual {639}
	610 Move X8, [X20+16]
	611 Compare X8, 0
	612 JumpIfEqual {640}
	613 Move W9, [X25+112]
	614 Move W8, [X8+92]
	615 Move X1, [X25+56]
	616 Add W23, W8, W9
	617 Move X0, X20
	618 Move W2, W23
	619 Call EnetPeer.SerializeToBuffer, X0, X1, X2
	620 Move X1, [X25+64]
	621 Add W21, W0, W21
	622 Move X0, X20
	623 Move W2, W23
	624 Call EnetPeer.SerializeToBuffer, X0, X1, X2
	625 Move X26, X31
	626 Add W21, W0, W21
	627 Move W8, [X31+28]
	628 Compare W8, 0
	629 JumpIfEqual {633}
	630 Move X0, X25
	631 Move X1, X31
	632 Call Monitor.Exit, X0
	633 Compare X26, 0
	634 JumpIfNotEqual {720}
	635 Move X8, [X20+392]
	636 Add X27, X27, 1
	637 Compare X8, 0
	638 JumpIfNotEqual {598}
	639 Call 0x1C17F20
	640 Call 0x1C17F20
	641 Move X23, X1
	642 Move X24, X0
	643 NotImplemented "Instruction CMP not yet implemented."
	644 Move X0, X24
	645 Call 0x3EB2AD0
	646 Move X26, [X0]
	647 Call 0x3EB2AE0
	648 Move X25, X31
	649 Move W23, 33
	650 Move W8, [X31+32]
	651 Compare W8, 0
	652 JumpIfEqual {656}
	653 Move X0, X22
	654 Move X1, X31
	655 Call Monitor.Exit, X0
	656 Compare X25, 0
	657 JumpIfNotEqual {748}
	658 NotImplemented "Instruction CMP not yet implemented."
	659 Compare W23, 0
	660 JumpIfNotEqual {693}
	661 Move W8, [X20+336]
	662 Compare W8, 0
	663 JumpIfEqual {693}
	664 Move X0, [X20+16]
	665 Compare X0, 0
	666 JumpIfEqual {764}
	667 Move X1, X31
	668 Call PhotonPeer.get_TrafficStatsEnabled, X0
	669 Move TEMP, X0
	670 And TEMP, TEMP, 1
	671 Compare TEMP, 1
	672 JumpIfNotEqual {686}
	673 Move X8, [X20+16]
	674 Compare X8, 0
	675 JumpIfEqual {781}
	676 Move X8, [X8+168]
	677 Compare X8, 0
	678 JumpIfEqual {782}
	679 Move W9, [X8+36]
	680 Move W10, [X8+40]
	681 Add W9, W9, 1
	682 Move [X8+36], W9
	683 Move W9, [X20+336]
	684 Add W9, W10, W9
	685 Move [X8+40], W9
	686 Move X1, [X20+344]
	687 Move W2, [X20+352]
	688 Move X0, X20
	689 Call EnetPeer.SendData, X0, X1, X2
	690 NotImplemented "Instruction CMP not yet implemented."
	691 Move X20, X31
	692 NotImplemented "Instruction CSET not yet implemented."
	693 Move X20, X31
	694 Move W21, W31
	695 Move W8, [X31+44]
	696 Compare W8, 0
	697 JumpIfEqual {701}
	698 Move X0, X19
	699 Move X1, X31
	700 Call Monitor.Exit, X0
	701 Compare X20, 0
	702 JumpIfNotEqual {738}
	703 Move W0, W21
	704 Move X20, [X31+128]
	705 Move X19, [X31+136]
	706 Move X22, [X31+112]
	707 Move X21, [X31+120]
	708 Move X24, [X31+96]
	709 Move X23, [X31+104]
	710 Move X26, [X31+80]
	711 Move X25, [X31+88]
	712 Move X28, [X31+64]
	713 Move X27, [X31+72]
	714 Move X29, [X31+48]
	715 Move X30, [X31+56]
	716 Add X31, X31, 144
	717 Return X0
	718 Call 0x1C17F20
	719 Call 0x1C17F28
	720 Move X0, X26
	721 Call 0x1C17F18
	722 Call 0x1C17F20
	723 Call 0x1C17F20
	724 Move X26, X31
	725 Move W8, [X31+28]
	726 Compare W8, 0
	727 JumpIfEqual {731}
	728 Move X0, X25
	729 Move X1, X31
	730 Call Monitor.Exit, X0
	731 Compare X26, 0
	732 JumpIfEqual {849}
	733 Move X0, X26
	734 Call 0x1C17F18
	735 Call 0x1C17F20
	736 Call 0x1C17F20
	737 Call 0x1C17F20
	738 Move X0, X20
	739 Call 0x1C17F18
	740 Call 0x1C17F20
	741 Call 0x1C17F20
	742 Move X0, X25
	743 Call 0x1C17F18
	744 Call 0x1C17F20
	745 Call 0x1C17F20
	746 Call 0x1C17F20
	747 Call 0x1C17F20
	748 Move X0, X25
	749 Call 0x1C17F18
	750 Call 0x1C17F28
	751 Call 0x1C17F28
	752 Call 0x1C17F28
	753 Call 0x1C17F28
	754 Call 0x1C17F20
	755 Call 0x1C17F20
	756 Call 0x1C17F20
	757 Call 0x1C17F28
	758 Call 0x1C17F44
	759 Move X1, X31
	760 Call 0x1C17DEC
	761 Call 0x1C17F20
	762 Call 0x1C17F20
	763 Call 0x1C17F20
	764 Call 0x1C17F20
	765 Call 0x1C17F44
	766 Move X1, X31
	767 Call 0x1C17DEC
	768 Call 0x1C17F44
	769 Move X1, X31
	770 Call 0x1C17DEC
	771 Call 0x1C17F44
	772 Move X1, X31
	773 Call 0x1C17DEC
	774 Call 0x1C17F44
	775 Move X1, X31
	776 Call 0x1C17DEC
	777 Call 0x1C17F20
	778 Move X0, X25
	779 Call 0x1C17F18
	780 Call 0x1C17F20
	781 Call 0x1C17F20
	782 Call 0x1C17F20
	783 Call 0x1C17F20
	784 Call 0x1C17F20
	785 Call 0x1C17F20
	786 Call 0x1C17F20
	787 Call 0x1C17F20
	788 Call 0x1C17F20
	789 Call 0x1C17F20
	790 Call 0x1C17F20
	791 Call 0x1C17F20
	792 Call 0x1C17F20
	793 Call 0x1C17F20
	794 Call 0x1C17F20
	795 Call 0x1C17F20
	796 Call 0x1C17F20
	797 Call 0x1C17F20
	798 Move X23, X1
	799 Move X24, X0
	800 Move X23, X1
	801 Move X24, X0
	802 Move W21, W31
	803 Move X23, X1
	804 Move X24, X0
	805 NotImplemented "Instruction CMP not yet implemented."
	806 Move X0, X24
	807 Call 0x3EB2AD0
	808 Move X25, [X0]
	809 Call 0x3EB2AE0
	810 Move W23, W31
	811 Move X25, X31
	812 Move W8, [X31+40]
	813 Compare W8, 0
	814 JumpIfEqual {818}
	815 Move X0, X22
	816 Move X1, X31
	817 Call Monitor.Exit, X0
	818 Compare X25, 0
	819 JumpIfEqual {864}
	820 Move X0, X25
	821 Call 0x1C17F18
	822 Move X23, X1
	823 Move X24, X0
	824 Move X23, X1
	825 Move X24, X0
	826 Move X23, X1
	827 Move X24, X0
	828 NotImplemented "Instruction CMP not yet implemented."
	829 Move X0, X24
	830 Call 0x3EB2AD0
	831 Move X25, [X0]
	832 Call 0x3EB2AE0
	833 Move W22, W31
	834 Move X25, X31
	835 Move W8, [X31+36]
	836 Compare W8, 0
	837 JumpIfEqual {841}
	838 Move X0, [X31]
	839 Move X1, X31
	840 Call Monitor.Exit, X0
	841 Compare X25, 0
	842 JumpIfEqual {864}
	843 Move X0, X25
	844 Call 0x1C17F18
	845 Move X23, X1
	846 Move X24, X0
	847 Move X23, X1
	848 Move X24, X0
	849 NotImplemented "Instruction CMP not yet implemented."
	850 Move X0, X24
	851 Call 0x3EB2AD0
	852 Move X25, [X0]
	853 Call 0x3EB2AE0
	854 Move W23, W31
	855 Move X25, X31
	856 Move W8, [X31+32]
	857 Compare W8, 0
	858 JumpIfEqual {862}
	859 Move X0, X22
	860 Move X1, X31
	861 Call Monitor.Exit, X0
	862 Compare X25, 0
	863 JumpIfNotEqual {870}
	864 NotImplemented "Instruction CMP not yet implemented."
	865 Move X0, X24
	866 Call 0x3EB2AD0
	867 Move X20, [X0]
	868 Call 0x3EB2AE0
	869 Move X20, X31
	870 Move X0, X25
	871 Call 0x1C17F18
	872 Move X23, X1
	873 Move X24, X0
	874 Move X24, X0
	875 Move W8, [X31+44]
	876 Compare W8, 0
	877 JumpIfEqual {881}
	878 Move X0, X19
	879 Move X1, X31
	880 Call Monitor.Exit, X0
	881 Compare X20, 0
	882 JumpIfNotEqual {885}
	883 Move X0, X24
	884 Call 0x1D2D690
	885 Move X0, X20
	886 Call 0x1C17F18
	887 Call 0x1991590

Method: System.Void UpdateSendWindow()

Disassembly:
	0x034F5CE4 BL 0x1C16CF4
	0x034F5CE8 ADRP X0, 0xC3E000
	0x034F5CEC LDR X0, [X0 + 0x738]
	0x034F5CF0 BL 0x1C16CF4
	0x034F5CF4 ADRP X0, 0xBFE000
	0x034F5CF8 LDR X0, [X0 + 0x5A8]
	0x034F5CFC BL 0x1C16CF4
	0x034F5D00 MOVZ W8, 0x1
	0x034F5D04 STRB W8, [X22 + 0xA30]
	0x034F5D08 STRB W31, [X31 + 0xC]
	0x034F5D0C LDR X0, [X20 + 0xC0]
	0x034F5D10 CBZ X0, 0x34F5ED8
	0x034F5D14 MOV X1, X31
	0x034F5D18 BL 0x364C19C
	0x034F5D1C CBZ X19, 0x34F5ED8
	0x034F5D20 LDR W8, [X19 + 0x44]
	0x034F5D24 STR W0, [X19 + 0x3C]
	0x034F5D28 CBZ W8, 0x34F5D6C
	0x034F5D2C LDR X0, [X20 + 0x10]
	0x034F5D30 CBZ X0, 0x34F5ED8
	0x034F5D34 LDRB W22, [X19 + 0x40]
	0x034F5D38 MOV X1, X31
	0x034F5D3C BL 0x3501B28
	0x034F5D40 CMP W22, W0, UXTB
	0x034F5D44 B.HI 0x34F5D5C
	0x034F5D48 LDR X8, [X20 + 0x128]
	0x034F5D4C CBZ X8, 0x34F5ED8
	0x034F5D50 LDR W8, [X8 + 0x18]
	0x034F5D54 CMP W8, 0x19
	0x034F5D58 B.LT 0x34F5DE4
	0x034F5D5C LDR W8, [X19 + 0x44]
	0x034F5D60 UBFM W8, W8, 0x1F, 0x1E
	0x034F5D64 STR W8, [X19 + 0x44]
	0x034F5D68 B 0x34F5DE4
	0x034F5D6C LDR X8, [X20 + 0x10]
	0x034F5D70 CBZ X8, 0x34F5ED8
	0x034F5D74 ADRP X9, 0xBFE000
	0x034F5D78 LDR X9, [X9 + 0x5A8]
	0x034F5D7C LDP W23, W24, [X20 + 0x74]
	0x034F5D80 LDR W22, [X8 + 0x74]
	0x034F5D84 LDR X0, [X9]
	0x034F5D88 LDR W9, [X0 + 0xE0]
	0x034F5D8C CBNZ W9, 0x34F5D94
	0x034F5D90 BL 0x1C16DFC
	0x034F5D94 ADD W0, W23, W24, 0x2, LSL
	0x034F5D98 MOV W1, W22
	0x034F5D9C MOV X2, X31
	0x034F5DA0 BL 0x337EE94
	0x034F5DA4 STR W0, [X19 + 0x44]
	0x034F5DA8 LDR X0, [X20 + 0xC0]
	0x034F5DAC CBZ X0, 0x34F5ED8
	0x034F5DB0 MOV X1, X31
	0x034F5DB4 BL 0x364C19C
	0x034F5DB8 LDR X8, [X20 + 0x10]
	0x034F5DBC CBZ X8, 0x34F5ED8
	0x034F5DC0 MOV X22, X0
	0x034F5DC4 MOV X0, X8
	0x034F5DC8 MOV X1, X31
	0x034F5DCC BL 0x350202C
	0x034F5DD0 ADD W8, W0, W22
	0x034F5DD4 STR W8, [X19 + 0x48]
	0x034F5DD8 LDR W8, [X20 + 0x17C]
	0x034F5DDC ADD W8, W8, 0x1
	0x034F5DE0 STR W8, [X20 + 0x17C]
	0x034F5DE4 LDRB W8, [X19 + 0x40]
	0x034F5DE8 LDR W9, [X19 + 0x3C]
	0x034F5DEC ADD W8, W8, 0x1
	0x034F5DF0 STRB W8, [X19 + 0x40]
	0x034F5DF4 LDR W8, [X19 + 0x44]
	0x034F5DF8 LDR W10, [X20 + 0xC8]
	0x034F5DFC ADD W8, W8, W9
	0x034F5E00 CMP W8, W10
	0x034F5E04 B.GE 0x34F5E0C
	0x034F5E08 STR W8, [X20 + 0xC8]
	0x034F5E0C TBNZ X21, 0x0, 0x34F5EC4
	0x034F5E10 LDRB W1, [X19 + 0x12]
	0x034F5E14 MOV X0, X20
	0x034F5E18 BL 0x34EFEEC
	0x034F5E1C CBZ X0, 0x34F5ED8
	0x034F5E20 LDR W8, [X0 + 0x6C]
	0x034F5E24 ADD W8, W8, 0x1
	0x034F5E28 STR W8, [X0 + 0x6C]
	0x034F5E2C LDR X21, [X20 + 0x128]
	0x034F5E30 STRB W31, [X31 + 0xC]
	0x034F5E34 ADD X1, X31, 0xC
	0x034F5E38 MOV X0, X21
	0x034F5E3C MOV X2, X31
	0x034F5E40 BL 0x33DE64C
	0x034F5E44 LDR X0, [X20 + 0x128]
	0x034F5E48 CBZ X0, 0x34F5EE4
	0x034F5E4C ADRP X9, 0xC3E000
	0x034F5E50 LDR X9, [X9 + 0x9A0]
	0x034F5E54 LDR W10, [X0 + 0x1C]
	0x034F5E58 LDR X8, [X0 + 0x10]
	0x034F5E5C LDR X9, [X9]
	0x034F5E60 ADD W10, W10, 0x1
	0x034F5E64 STR W10, [X0 + 0x1C]
	0x034F5E68 CBZ X8, 0x34F5EE8
	0x034F5E6C LDRSW X10, [X0 + 0x18]
	0x034F5E70 LDR W11, [X8 + 0x18]
	0x034F5E74 CMP W10, W11
	0x034F5E78 B.CS 0x34F5E94
	0x034F5E7C ADD W9, W10, 0x1
	0x034F5E80 ADD X8, X8, X10, 0x3, LSL
	0x034F5E84 MOV X20, X31
	0x034F5E88 STR W9, [X0 + 0x18]
	0x034F5E8C STR X19, [X8 + 0x20]
	0x034F5E90 B 0x34F5EAC
	0x034F5E94 LDR X8, [X9 + 0x20]
	0x034F5E98 LDR X8, [X8 + 0xC0]
	0x034F5E9C LDR X2, [X8 + 0x70]
	0x034F5EA0 MOV X1, X19
	0x034F5EA4 BL 0x301BF90
	0x034F5EA8 MOV X20, X31
	0x034F5EAC LDRB W8, [X31 + 0xC]
	0x034F5EB0 CBZ W8, 0x34F5EC0
	0x034F5EB4 MOV X0, X21
	0x034F5EB8 MOV X1, X31
	0x034F5EBC BL 0x33E14E4
	0x034F5EC0 CBNZ X20, 0x34F5EDC
	0x034F5EC4 LDP X20, X19, [X31 + 0x30]
	0x034F5EC8 LDP X22, X21, [X31 + 0x20]
	0x034F5ECC LDP X24, X23, [X31 + 0x10]
	0x034F5ED0 LDR X30, [X31], #0x40
	0x034F5ED4 RET
	0x034F5ED8 BL 0x1C16F20
	0x034F5EDC MOV X0, X20
	0x034F5EE0 BL 0x1C16F18
	0x034F5EE4 BL 0x1C16F20
	0x034F5EE8 BL 0x1C16F20
	0x034F5EEC B 0x34F5EF0
	0x034F5EF0 MOV X19, X0
	0x034F5EF4 CMP W1, 0x1
	0x034F5EF8 B.NE 0x34F5F10
	0x034F5EFC MOV X0, X19
	0x034F5F00 BL 0x3EB1AD0
	0x034F5F04 LDR X20, [X0]
	0x034F5F08 BL 0x3EB1AE0
	0x034F5F0C B 0x34F5EAC
	0x034F5F10 MOV X20, X31
	0x034F5F14 B 0x34F5F1C
	0x034F5F18 MOV X19, X0
	0x034F5F1C LDRB W8, [X31 + 0xC]
	0x034F5F20 CBZ W8, 0x34F5F30
	0x034F5F24 MOV X0, X21
	0x034F5F28 MOV X1, X31
	0x034F5F2C BL 0x33E14E4
	0x034F5F30 CBNZ X20, 0x34F5F3C
	0x034F5F34 MOV X0, X19
	0x034F5F38 BL 0x1D2C690
	0x034F5F3C MOV X0, X20
	0x034F5F40 BL 0x1C16F18
	0x034F5F44 BL 0x1990590
	0x034F5F48 SUB X31, X31, 0x50
	0x034F5F4C STR X30, [X31 + 0x10]
	0x034F5F50 STP X24, X23, [X31 + 0x20]
	0x034F5F54 STP X22, X21, [X31 + 0x30]
	0x034F5F58 STP X20, X19, [X31 + 0x40]
	0x034F5F5C ADRP X22, 0xEEA000
	0x034F5F60 LDRB W8, [X22 + 0xA2F]
	0x034F5F64 MOV W20, W2
	0x034F5F68 MOV X21, X1
	0x034F5F6C MOV X19, X0
	0x034F5F70 TBNZ X8, 0x0, 0x34F5FA0
	0x034F5F74 ADRP X0, 0xBFE000
	0x034F5F78 LDR X0, [X0 + 0x618]
	0x034F5F7C BL 0x1C16CF4
	0x034F5F80 ADRP X0, 0xC06000
	0x034F5F84 LDR X0, [X0 + 0xCD8]
	0x034F5F88 BL 0x1C16CF4
	0x034F5F8C ADRP X0, 0xC06000
	0x034F5F90 LDR X0, [X0 + 0xF00]
	0x034F5F94 BL 0x1C16CF4
	0x034F5F98 MOVZ W8, 0x1
	0x034F5F9C STRB W8, [X22 + 0xA2F]
	0x034F5FA0 STR W31, [X31 + 0x18]
	0x034F5FA4 STR W31, [X31 + 0xC]
	0x034F5FA8 LDR X22, [X19 + 0x168]
	0x034F5FAC CBZ X22, 0x34F5FD4
	0x034F5FB0 LDR X0, [X19 + 0x10]
	0x034F5FB4 CBZ X0, 0x34F6178
	0x034F5FB8 MOV X1, X31
	0x034F5FBC BL 0x350243C
	0x034F5FC0 LDR W8, [X22 + 0x18]
	0x034F5FC4 CMP W0, W8
	0x034F5FC8 B.NE 0x34F5FD4
	0x034F5FCC LDR X22, [X19 + 0x168]
	0x034F5FD0 B 0x34F6004
	0x034F5FD4 LDR X0, [X19 + 0x10]
	0x034F5FD8 CBZ X0, 0x34F6178
	0x034F5FDC ADRP X22, 0xBFE000
	0x034F5FE0 LDR X22, [X22 + 0x618]
	0x034F5FE4 MOV X1, X31
	0x034F5FE8 BL 0x350243C
	0x034F5FEC LDR X8, [X22]
	0x034F5FF0 MOV W1, W0
	0x034F5FF4 MOV X0, X8
	0x034F5FF8 BL 0x1C16D6C
	0x034F5FFC MOV X22, X0
	0x034F6000 STR X0, [X19 + 0x168]
	0x034F6004 ADRP X8, 0xC05000
	0x034F6008 LDR X8, [X8 + 0xF00]
	0x034F600C STR W31, [X31 + 0x1C]
	0x034F6010 LDRH W23, [X19 + 0x68]
	0x034F6014 LDR X0, [X8]
	0x034F6018 LDR W8, [X0 + 0xE0]
	0x034F601C CBNZ W8, 0x34F6024
	0x034F6020 BL 0x1C16DFC
	0x034F6024 ADD X2, X31, 0x1C
	0x034F6028 MOV W0, W23
	0x034F602C MOV X1, X22
	0x034F6030 MOV X3, X31
	0x034F6034 BL 0x3506760
	0x034F6038 CBZ X22, 0x34F6178
	0x034F603C LDR W8, [X22 + 0x18]
	0x034F6040 CMP W8, 0x2
	0x034F6044 B.LS 0x34F617C
	0x034F6048 MOVZ W8, 0x1
	0x034F604C STRB W8, [X22 + 0x22]
	0x034F6050 LDR W8, [X31 + 0x1C]
	0x034F6054 ADD X2, X31, 0x1C
	0x034F6058 MOV X1, X22
	0x034F605C MOV X3, X31
	0x034F6060 ADD W8, W8, 0x1
	0x034F6064 STR W8, [X31 + 0x1C]
	0x034F6068 LDR W0, [X19 + 0x174]
	0x034F606C BL 0x35067BC
	0x034F6070 CBZ X21, 0x34F6178
	0x034F6074 LDR W8, [X21 + 0x18]
	0x034F6078 CBZ W8, 0x34F617C
	0x034F607C LDRB W8, [X19 + 0x150]
	0x034F6080 MOVZ W9, 0x1
	0x034F6084 STRB W8, [X21 + 0x20]
	0x034F6088 STR W9, [X31 + 0x18]
	0x034F608C LDR X0, [X19 + 0xC0]
	0x034F6090 CBZ X0, 0x34F6178
	0x034F6094 MOV X1, X31
	0x034F6098 BL 0x364C19C
	0x034F609C ADD X2, X31, 0x18
	0x034F60A0 MOV X1, X21
	0x034F60A4 MOV X3, X31
	0x034F60A8 BL 0x35067BC
	0x034F60AC LDR W23, [X31 + 0x1C]
	0x034F60B0 LDR W8, [X22 + 0x18]
	0x034F60B4 SUB W8, W8, W23
	0x034F60B8 STR W8, [X31 + 0xC]
	0x034F60BC LDR X8, [X19 + 0x10]
	0x034F60C0 CBZ X8, 0x34F6178
	0x034F60C4 LDR X24, [X8 + 0x100]
	0x034F60C8 CBZ X24, 0x34F6178
	0x034F60CC ADRP X10, 0xC05000
	0x034F60D0 LDR X8, [X24]
	0x034F60D4 LDR X10, [X10 + 0xCD8]
	0x034F60D8 LDRH W9, [X8 + 0x12E]
	0x034F60DC LDR X1, [X10]
	0x034F60E0 CBZ X9, 0x34F6104
	0x034F60E4 LDR X10, [X8 + 0xB0]
	0x034F60E8 ADD X10, X10, 0x8
	0x034F60EC LDUR X11, [X10 - 0x8]
	0x034F60F0 CMP X11, X1
	0x034F60F4 B.EQ 0x34F6114
	0x034F60F8 SUBS X9, X9, 0x1
	0x034F60FC ADD X10, X10, 0x10
	0x034F6100 B.NE 0x34F60EC
	0x034F6104 MOVZ W2, 0x1
	0x034F6108 MOV X0, X24
	0x034F610C BL 0x1C5C788
	0x034F6110 B 0x34F6124
	0x034F6114 LDR W9, [X10]
	0x034F6118 ADD W9, W9, 0x1
	0x034F611C ADD X8, X8, W9, 0x4, SXTW
	0x034F6120 ADD X0, X8, 0x138
	0x034F6124 LDP X8, X7, [X0]
	0x034F6128 ADD X6, X31, 0xC
	0x034F612C MOV X0, X24
	0x034F6130 MOV X1, X21
	0x034F6134 MOV W2, W20
	0x034F6138 MOV X3, X22
	0x034F613C MOV X4, X22
	0x034F6140 MOV W5, W23
	0x034F6144 BLR X8
	0x034F6148 LDR W8, [X31 + 0xC]
	0x034F614C LDR W9, [X31 + 0x1C]
	0x034F6150 MOV X0, X19
	0x034F6154 MOV X1, X22
	0x034F6158 ADD W2, W9, W8
	0x034F615C BL 0x34F6180
	0x034F6160 LDP X20, X19, [X31 + 0x40]
	0x034F6164 LDP X22, X21, [X31 + 0x30]
	0x034F6168 LDP X24, X23, [X31 + 0x20]
	0x034F616C LDR X30, [X31 + 0x10]
	0x034F6170 ADD X31, X31, 0x50
	0x034F6174 RET
	0x034F6178 BL 0x1C16F20
	0x034F617C BL 0x1C16F28
	0x034F6180 STP X30, X25, [X31 - 0x40]!
	0x034F6184 STP X24, X23, [X31 + 0x10]
	0x034F6188 STP X22, X21, [X31 + 0x20]
	0x034F618C STP X20, X19, [X31 + 0x30]
	0x034F6190 ADRP X22, 0xEE9000
	0x034F6194 LDRB W8, [X22 + 0xA2E]
	0x034F6198 MOV W20, W2
	0x034F619C MOV X21, X1
	0x034F61A0 MOV X19, X0
	0x034F61A4 TBNZ X8, 0x0, 0x34F61C8
	0x034F61A8 ADRP X0, 0xBFD000
	0x034F61AC LDR X0, [X0 + 0x618]
	0x034F61B0 BL 0x1C16CF4
	0x034F61B4 ADRP X0, 0xC3D000
	0x034F61B8 LDR X0, [X0 + 0x9A8]
	0x034F61BC BL 0x1C16CF4
	0x034F61C0 MOVZ W8, 0x1
	0x034F61C4 STRB W8, [X22 + 0xA2E]
	0x034F61C8 LDR X9, [X19 + 0x90]
	0x034F61CC LDR X8, [X19 + 0x10]
	0x034F61D0 ADD X9, X9, W20, SXTW
	0x034F61D4 STR X9, [X19 + 0x90]
	0x034F61D8 CBZ X8, 0x34F638C
	0x034F61DC LDR X22, [X8 + 0x60]
	0x034F61E0 CBZ X22, 0x34F62C0
	0x034F61E4 ADRP X25, 0xC3D000
	0x034F61E8 LDR X8, [X22]
	0x034F61EC LDR X25, [X25 + 0x9A8]
	0x034F61F0 LDRH W9, [X8 + 0x12E]
	0x034F61F4 LDR X1, [X25]
	0x034F61F8 CBZ X9, 0x34F621C
	0x034F61FC LDR X10, [X8 + 0xB0]
	0x034F6200 ADD X10, X10, 0x8
	0x034F6204 LDUR X11, [X10 - 0x8]
	0x034F6208 CMP X11, X1
	0x034F620C B.EQ 0x34F622C
	0x034F6210 SUBS X9, X9, 0x1
	0x034F6214 ADD X10, X10, 0x10
	0x034F6218 B.NE 0x34F6204
	0x034F621C MOV X0, X22
	0x034F6220 MOV W2, W31
	0x034F6224 BL 0x1C5C788
	0x034F6228 B 0x34F6238
	0x034F622C LDRSW X9, [X10]
	0x034F6230 ADD X8, X8, X9, 0x4, LSL
	0x034F6234 ADD X0, X8, 0x138
	0x034F6238 LDP X8, X1, [X0]
	0x034F623C MOV X0, X22
	0x034F6240 BLR X8
	0x034F6244 TBZ X0, 0x0, 0x34F62C0
	0x034F6248 LDR X8, [X22]
	0x034F624C LDRH W24, [X19 + 0x68]
	0x034F6250 LDR X23, [X19 + 0x28]
	0x034F6254 LDR X1, [X25]
	0x034F6258 LDRH W9, [X8 + 0x12E]
	0x034F625C CBZ X9, 0x34F6280
	0x034F6260 LDR X10, [X8 + 0xB0]
	0x034F6264 ADD X10, X10, 0x8
	0x034F6268 LDUR X11, [X10 - 0x8]
	0x034F626C CMP X11, X1
	0x034F6270 B.EQ 0x34F6290
	0x034F6274 SUBS X9, X9, 0x1
	0x034F6278 ADD X10, X10, 0x10
	0x034F627C B.NE 0x34F6268
	0x034F6280 MOVZ W2, 0x2
	0x034F6284 MOV X0, X22
	0x034F6288 BL 0x1C5C788
	0x034F628C B 0x34F62A0
	0x034F6290 LDR W9, [X10]
	0x034F6294 ADD W9, W9, 0x2
	0x034F6298 ADD X8, X8, W9, 0x4, SXTW
	0x034F629C ADD X0, X8, 0x138
	0x034F62A0 LDP X8, X6, [X0]
	0x034F62A4 MOV X0, X22
	0x034F62A8 MOV X1, X21
	0x034F62AC MOV W2, W20
	0x034F62B0 MOV W3, W31
	0x034F62B4 MOV W4, W24
	0x034F62B8 MOV X5, X23
	0x034F62BC BLR X8
	0x034F62C0 LDR X8, [X19 + 0x110]
	0x034F62C4 CBZ X8, 0x34F638C
	0x034F62C8 LDRB W8, [X8 + 0x10]
	0x034F62CC CBZ W8, 0x34F6320
	0x034F62D0 ADRP X8, 0xBFD000
	0x034F62D4 LDR X8, [X8 + 0x618]
	0x034F62D8 MOV W1, W20
	0x034F62DC LDR X0, [X8]
	0x034F62E0 BL 0x1C16D6C
	0x034F62E4 MOV X22, X0
	0x034F62E8 MOV X0, X21
	0x034F62EC MOV W1, W31
	0x034F62F0 MOV X2, X22
	0x034F62F4 MOV W3, W31
	0x034F62F8 MOV W4, W20
	0x034F62FC MOV X5, X31
	0x034F6300 BL 0x33A8A9C
	0x034F6304 MOV X0, X19
	0x034F6308 MOV X1, X22
	0x034F630C LDP X20, X19, [X31 + 0x30]
	0x034F6310 LDP X22, X21, [X31 + 0x20]
	0x034F6314 LDP X24, X23, [X31 + 0x10]
	0x034F6318 LDP X30, X25, [X31], #0x40
	0x034F631C B 0x34F6390
	0x034F6320 LDR X0, [X19 + 0xC0]
	0x034F6324 CBZ X0, 0x34F638C
	0x034F6328 MOV X1, X31
	0x034F632C BL 0x364C19C
	0x034F6330 LDR X8, [X19 + 0x28]

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+16], X30
	003 Move [X31+32], X26
	004 Move [X31+40], X25
	005 Move [X31+48], X24
	006 Move [X31+56], X23
	007 Move [X31+64], X22
	008 Move [X31+72], X21
	009 Move [X31+80], X20
	010 Move [X31+88], X19
	011 Move X20, 0xEEB000
	012 Move W8, [X20+2601]
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {44}
	018 Move X0, 0xC3F000
	019 Move X0, [X0+2384]
	020 Call 0x1C17CF4
	021 Move X0, 0xC3F000
	022 Move X0, [X0+2392]
	023 Call 0x1C17CF4
	024 Move X0, 0xC3F000
	025 Move X0, [X0+2400]
	026 Call 0x1C17CF4
	027 Move X0, 0xC3F000
	028 Move X0, [X0+2408]
	029 Call 0x1C17CF4
	030 Move X0, 0xC3F000
	031 Move X0, [X0+2416]
	032 Call 0x1C17CF4
	033 Move X0, 0xC00000
	034 Move X0, [X0+3672]
	035 Call 0x1C17CF4
	036 Move X0, 0xC3F000
	037 Move X0, [X0+1848]
	038 Call 0x1C17CF4
	039 Move X0, 0xC3F000
	040 Move X0, [X0+2328]
	041 Call 0x1C17CF4
	042 Move W8, 1
	043 Move [X20+2601], W8
	044 Add X0, X19, 304
	045 Move W2, 1
	046 Move W1, W31
	047 Move X3, X31
	048 Move [X31+28], W31
	049 Move [X31+24], W31
	050 Move [X31+12], W31
	051 Move [X31+8], W31
	052 Call Interlocked.CompareExchange, X0, X1, X2
	053 Move X8, [X19+16]
	054 Compare X8, 0
	055 JumpIfEqual {314}
	056 Move W8, [X8+92]
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Move X8, [X19+296]
	059 Compare X8, 0
	060 JumpIfEqual {314}
	061 Move W8, [X8+24]
	062 Compare W8, 0
	063 JumpIfEqual {135}
	064 Move X0, [X19+432]
	065 Compare X0, 0
	066 JumpIfEqual {314}
	067 Move X8, 0xC3F000
	068 Move X8, [X8+2392]
	069 Move X1, [X8]
	070 Call HashSet`1<Byte>.Clear, X0
	071 Move X20, [X19+392]
	072 Move [X31+24], W31
	073 Add X1, X31, 24
	074 Move X0, X20
	075 Move X2, X31
	076 Call Monitor.Enter, X0, X1
	077 Move X8, [X19+392]
	078 Compare X8, 0
	079 JumpIfEqual {103}
	080 Move X22, 0xC3F000
	081 Move X22, [X22+2384]
	082 Move X21, X31
	083 Move W9, [X8+24]
	084 NotImplemented "Instruction CMP not yet implemented."
	085 NotImplemented "Instruction CMP not yet implemented."
	086 Add X9, X8, X21
	087 Move X9, [X9+32]
	088 Compare X9, 0
	089 JumpIfEqual {306}
	090 Move W1, [X9+16]
	091 NotImplemented "Instruction CMP not yet implemented."
	092 Move W9, [X9+108]
	093 NotImplemented "Instruction CMP not yet implemented."
	094 Move X0, [X19+432]
	095 Compare X0, 0
	096 JumpIfEqual {308}
	097 Move X2, [X22]
	098 Call HashSet`1<Byte>.Add, X0, X1
	099 Move X8, [X19+392]
	100 Add X21, X21, 1
	101 Compare X8, 0
	102 JumpIfNotEqual {83}
	103 Call 0x1C17F20
	104 Move X22, X31
	105 Move W21, 13
	106 Move W8, [X31+24]
	107 Compare W8, 0
	108 JumpIfEqual {112}
	109 Move X0, X20
	110 Move X1, X31
	111 Call Monitor.Exit, X0
	112 Compare X22, 0
	113 JumpIfNotEqual {323}
	114 NotImplemented "Instruction CMP not yet implemented."
	115 Compare W21, 0
	116 JumpIfNotEqual {167}
	117 Move X8, [X19+440]
	118 Move X9, [X19+392]
	119 Compare X8, 0
	120 JumpIfEqual {178}
	121 Compare X9, 0
	122 JumpIfEqual {314}
	123 Move X10, [X8+24]
	124 Move W11, [X9+24]
	125 NotImplemented "Instruction CMP not yet implemented."
	126 NotImplemented "Instruction CMP not yet implemented."
	127 And X10, X10, 0
	128 Move X9, X31
	129 Move X11, W10
	130 Add X8, X8, 32
	131 NotImplemented "Instruction CMP not yet implemented."
	132 Move [X8], W31
	133 Add X9, X9, 1
	134 NotImplemented "Instruction CMP not yet implemented."
	135 Move X20, [X19+392]
	136 Move [X31+28], W31
	137 Add X1, X31, 28
	138 Move X0, X20
	139 Move X2, X31
	140 Call Monitor.Enter, X0, X1
	141 Move X8, [X19+392]
	142 Compare X8, 0
	143 JumpIfEqual {327}
	144 Move W9, [X8+24]
	145 NotImplemented "Instruction CMP not yet implemented."
	146 Move W10, W31
	147 NotImplemented "Instruction CMP not yet implemented."
	148 Add X11, X8, W10
	149 Move X11, [X11+32]
	150 Compare X11, 0
	151 JumpIfEqual {309}
	152 Move W12, [X11+104]
	153 Add W10, W10, 1
	154 NotImplemented "Instruction CMP not yet implemented."
	155 Add W12, W12, 1
	156 Move [X11+108], W31
	157 Move [X11+112], W12
	158 Move X19, X31
	159 Move W8, [X31+28]
	160 Compare W8, 0
	161 JumpIfEqual {165}
	162 Move X0, X20
	163 Move X1, X31
	164 Call Monitor.Exit, X0
	165 Compare X19, 0
	166 JumpIfNotEqual {325}
	167 Move X20, [X31+80]
	168 Move X19, [X31+88]
	169 Move X22, [X31+64]
	170 Move X21, [X31+72]
	171 Move X24, [X31+48]
	172 Move X23, [X31+56]
	173 Move X26, [X31+32]
	174 Move X25, [X31+40]
	175 Move X30, [X31+16]
	176 Add X31, X31, 96
	177 Return 
	178 Compare X9, 0
	179 JumpIfEqual {314}
	180 Move X8, 0xC00000
	181 Move X8, [X8+3672]
	182 Move W1, [X9+24]
	183 Move X0, [X8]
	184 Call 0x1C17D6C
	185 Move [X19+440], X0
	186 Move X20, [X19+296]
	187 Move [X31+12], W31
	188 Add X1, X31, 12
	189 Move X0, X20
	190 Move X2, X31
	191 Call Monitor.Enter, X0, X1
	192 Move X0, [X19+296]
	193 Compare X0, 0
	194 JumpIfEqual {255}
	195 Move X24, 0xC3F000
	196 Move X25, 0xC3F000
	197 Move X26, 0xC3F000
	198 Move X24, [X24+2328]
	199 Move X25, [X25+2400]
	200 Move X26, [X26+2408]
	201 Move W21, W31
	202 Move W8, [X0+24]
	203 NotImplemented "Instruction CMP not yet implemented."
	204 Move X2, [X24]
	205 Move W1, W21
	206 Call List`1<Object>.get_Item, X0, X1
	207 Move X22, X0
	208 Compare X0, 0
	209 JumpIfEqual {307}
	210 Move W8, [X22+16]
	211 Move TEMP, X8
	212 And TEMP, TEMP, 2
	213 Compare TEMP, 2
	214 JumpIfEqual {251}
	215 Move W23, [X22+18]
	216 NotImplemented "Instruction CMP not yet implemented."
	217 Move X0, [X19+432]
	218 Compare X0, 0
	219 JumpIfEqual {315}
	220 Move X2, [X25]
	221 Move W1, W23
	222 Call HashSet`1<Byte>.Contains, X0, X1
	223 Move TEMP, X0
	224 And TEMP, TEMP, 1
	225 Compare TEMP, 1
	226 JumpIfNotEqual {251}
	227 Move X8, [X19+440]
	228 Compare X8, 0
	229 JumpIfEqual {319}
	230 Move W9, [X8+24]
	231 NotImplemented "Instruction CMP not yet implemented."
	232 Add X8, X8, W23
	233 Add X8, X8, 32
	234 Move W9, [X8]
	235 Compare W9, 0
	236 JumpIfNotEqual {239}
	237 Move W9, [X22+20]
	238 Move [X8], W9
	239 Move X0, [X19+432]
	240 Compare X0, 0
	241 JumpIfEqual {320}
	242 Move W1, [X22+18]
	243 Move X2, [X26]
	244 Call HashSet`1<Byte>.Remove, X0, X1
	245 Move X8, [X19+432]
	246 Compare X8, 0
	247 JumpIfEqual {321}
	248 Move W8, [X8+32]
	249 Compare W8, 0
	250 JumpIfEqual {256}
	251 Move X0, [X19+296]
	252 Add W21, W21, 1
	253 Compare X0, 0
	254 JumpIfNotEqual {202}
	255 Call 0x1C17F20
	256 Move X22, X31
	257 Move W21, 30
	258 Move W8, [X31+12]
	259 Compare W8, 0
	260 JumpIfEqual {264}
	261 Move X0, X20
	262 Move X1, X31
	263 Call Monitor.Exit, X0
	264 Compare X22, 0
	265 JumpIfNotEqual {323}
	266 NotImplemented "Instruction CMP not yet implemented."
	267 Compare W21, 0
	268 JumpIfNotEqual {167}
	269 Move X20, [X19+392]
	270 Move [X31+8], W31
	271 Add X1, X31, 8
	272 Move X0, X20
	273 Move X2, X31
	274 Call Monitor.Enter, X0, X1
	275 Move X11, [X19+392]
	276 Compare X11, 0
	277 JumpIfEqual {328}
	278 Move W8, [X11+24]
	279 NotImplemented "Instruction CMP not yet implemented."
	280 Move X10, [X19+440]
	281 Move X9, X31
	282 Add X11, X11, 32
	283 Add X12, X10, 32
	284 NotImplemented "Instruction CMP not yet implemented."
	285 Compare X10, 0
	286 JumpIfEqual {311}
	287 Move W13, [X10+24]
	288 NotImplemented "Instruction CMP not yet implemented."
	289 Move W14, [X12]
	290 Move X13, [X11]
	291 NotImplemented "Instruction CMP not yet implemented."
	292 Compare X13, 0
	293 JumpIfNotEqual {298}
	294 Compare X13, 0
	295 JumpIfEqual {318}
	296 Move W14, [X13+104]
	297 Add W14, W14, 1
	298 Add X9, X9, 1
	299 NotImplemented "Instruction CMP not yet implemented."
	300 Move [X13+112], W14
	301 Move X19, X31
	302 Move W8, [X31+8]
	303 Compare W8, 0
	304 JumpIfNotEqual {162}
	305 Call 0x1C17F28
	306 Call 0x1C17F20
	307 Call 0x1C17F20
	308 Call 0x1C17F20
	309 Call 0x1C17F20
	310 Call 0x1C17F28
	311 Call 0x1C17F20
	312 Call 0x1C17F28
	313 Call 0x1C17F28
	314 Call 0x1C17F20
	315 Call 0x1C17F20
	316 Call 0x1C17F20
	317 Call 0x1C17F28
	318 Call 0x1C17F20
	319 Call 0x1C17F20
	320 Call 0x1C17F20
	321 Call 0x1C17F20
	322 Call 0x1C17F28
	323 Move X0, X22
	324 Call 0x1C17F18
	325 Move X0, X19
	326 Call 0x1C17F18
	327 Call 0x1C17F20
	328 Call 0x1C17F20
	329 Move X21, X0
	330 NotImplemented "Instruction CMP not yet implemented."
	331 Move X0, X21
	332 Call 0x3EB2AD0
	333 Move X19, [X0]
	334 Call 0x3EB2AE0
	335 Move X19, X31
	336 Move X21, X0
	337 Move W8, [X31+8]
	338 Compare W8, 0
	339 JumpIfEqual {343}
	340 Move X0, X20
	341 Move X1, X31
	342 Call Monitor.Exit, X0
	343 Compare X19, 0
	344 JumpIfEqual {401}
	345 Move X0, X19
	346 Call 0x1C17F18
	347 Move X21, X0
	348 NotImplemented "Instruction CMP not yet implemented."
	349 Move X0, X21
	350 Call 0x3EB2AD0
	351 Move X19, [X0]
	352 Call 0x3EB2AE0
	353 Move X19, X31
	354 Move X21, X0
	355 Move W8, [X31+28]
	356 Compare W8, 0
	357 JumpIfEqual {361}
	358 Move X0, X20
	359 Move X1, X31
	360 Call Monitor.Exit, X0
	361 Compare X19, 0
	362 JumpIfEqual {401}
	363 Move X0, X19
	364 Call 0x1C17F18
	365 Move X21, X0
	366 NotImplemented "Instruction CMP not yet implemented."
	367 Move X0, X21
	368 Call 0x3EB2AD0
	369 Move X22, [X0]
	370 Call 0x3EB2AE0
	371 Move W21, W31
	372 Move X22, X31
	373 Move X21, X0
	374 Move W8, [X31+12]
	375 Compare W8, 0
	376 JumpIfEqual {380}
	377 Move X0, X20
	378 Move X1, X31
	379 Call Monitor.Exit, X0
	380 Compare X22, 0
	381 JumpIfEqual {401}
	382 Move X0, X22
	383 Call 0x1C17F18
	384 Move X21, X0
	385 NotImplemented "Instruction CMP not yet implemented."
	386 Move X0, X21
	387 Call 0x3EB2AD0
	388 Move X22, [X0]
	389 Call 0x3EB2AE0
	390 Move W21, W31
	391 Move X22, X31
	392 Move X21, X0
	393 Move W8, [X31+24]
	394 Compare W8, 0
	395 JumpIfEqual {399}
	396 Move X0, X20
	397 Move X1, X31
	398 Call Monitor.Exit, X0
	399 Compare X22, 0
	400 JumpIfNotEqual {403}
	401 Move X0, X21
	402 Call 0x1D2D690
	403 Move X0, X22
	404 Call 0x1C17F18
	405 Call 0x1991590

Method: System.Boolean EnqueuePhotonMessage(ExitGames.Client.Photon.StreamBuffer opBytes, ExitGames.Client.Photon.SendOptions sendParams)

Disassembly:
	0x034F6548 LDR X9, [X8 + 0x10]
	0x034F654C CBZ X9, 0x34F6588
	0x034F6550 ADRP X24, 0xC3D000
	0x034F6554 LDR X24, [X24 + 0x9B0]
	0x034F6558 LDR X8, [X9 + 0x28]
	0x034F655C CBZ X8, 0x34F65F0
	0x034F6560 LDR W8, [X8 + 0x18]
	0x034F6564 CMP W8, W22
	0x034F6568 B.GE 0x34F659C
	0x034F656C LDR X1, [X24]
	0x034F6570 MOV X0, X9
	0x034F6574 BL 0x2EEA710
	0x034F6578 MOV X9, X0
	0x034F657C CBNZ X0, 0x34F6558
	0x034F6580 LDR X8, [X20 + 0x100]
	0x034F6584 CBZ X8, 0x34F664C
	0x034F6588 LDR X2, [X23]

ISIL:
	001 Move [X31-16], X30
	002 Subtract W9, W2, 1
	003 Move W10, 2822
	004 Move W12, W9
	005 ShiftRight W12, 29
	006 And W12, W12, 0xFFFFFFF
	007 NotImplemented "Instruction MOVK not yet implemented."
	008 NotImplemented "Instruction CMP not yet implemented."
	009 And X9, X12, 0xFFFFFF
	010 Move X8, X1
	011 Move W11, 7
	012 NotImplemented "Instruction LSRV not yet implemented."
	013 NotImplemented "Instruction CSEL not yet implemented."
	014 Move X3, X2
	015 ShiftRight X3, 40
	016 And X3, X3, 0x7FFFFFFF
	017 Move X2, X8
	018 Call EnetPeer.CreateAndEnqueueCommand, X0, X1, X2, X3
	019 Move W0, 1
	020 Move X30, [X31+16]
	021 Return X0

Method: System.Boolean CreateAndEnqueueCommand(System.Byte commandType, ExitGames.Client.Photon.StreamBuffer payload, System.Byte channelNumber)

Disassembly:
	0x034F22F8 BL 0x337B6E0
	0x034F22FC ADRP X8, 0xC41000
	0x034F2300 LDR X8, [X8 + 0x900]
	0x034F2304 LDR X9, [X20]
	0x034F2308 ADRP X10, 0xC41000
	0x034F230C LDR X10, [X10 + 0x8E8]
	0x034F2310 LDR X21, [X8]
	0x034F2314 LDP X8, X1, [X9 + 0x168]
	0x034F2318 MOV X24, X0
	0x034F231C LDR X23, [X10]
	0x034F2320 MOV X0, X20
	0x034F2324 BLR X8
	0x034F2328 MOV X3, X0
	0x034F232C MOV X0, X23
	0x034F2330 MOV X1, X24
	0x034F2334 MOV X2, X21
	0x034F2338 MOV X4, X31
	0x034F233C BL 0x32277C4
	0x034F2340 MOV X2, X0
	0x034F2344 MOVZ W1, 0x3
	0x034F2348 MOV X0, X19
	0x034F234C BL 0x34F116C
	0x034F2350 LDR W8, [X19 + 0x74]
	0x034F2354 UBFM W8, W8, 0x1E, 0x1D
	0x034F2358 STR W8, [X19 + 0x7C]
	0x034F235C LDRB W8, [X20 + 0x11]
	0x034F2360 LDR W1, [X20 + 0x4C]
	0x034F2364 LDRB W2, [X20 + 0x12]
	0x034F2368 MOV X0, X19
	0x034F236C CMP W8, 0x10
	0x034F2370 CSET W3, EQ
	0x034F2374 BL 0x34F74BC
	0x034F2378 MOV X21, X0
	0x034F237C MOV X0, X20
	0x034F2380 BL 0x34F2CA8
	0x034F2384 CBZ X21, 0x34F287C
	0x034F2388 MOV X0, X21
	0x034F238C BL 0x34F2C44
	0x034F2390 LDRB W1, [X21 + 0x12]
	0x034F2394 MOV X0, X19
	0x034F2398 BL 0x34EFEEC
	0x034F239C MOV X20, X0
	0x034F23A0 STRB W31, [X31 + 0x38]
	0x034F23A4 ADD X1, X31, 0x38
	0x034F23A8 MOV X2, X31
	0x034F23AC BL 0x33DE64C
	0x034F23B0 CBZ X20, 0x34F2B98
	0x034F23B4 LDR W8, [X21 + 0x14]
	0x034F23B8 LDR W9, [X20 + 0x68]
	0x034F23BC CMP W8, W9
	0x034F23C0 B.LE 0x34F23C8
	0x034F23C4 STR W8, [X20 + 0x68]
	0x034F23C8 LDR W8, [X20 + 0x6C]
	0x034F23CC MOV X23, X31
	0x034F23D0 MOVZ W24, 0x1C
	0x034F23D4 SUB W8, W8, 0x1
	0x034F23D8 STR W8, [X20 + 0x6C]
	0x034F23DC LDRB W8, [X31 + 0x38]
	0x034F23E0 CBZ W8, 0x34F23F0
	0x034F23E4 MOV X0, X20
	0x034F23E8 MOV X1, X31
	0x034F23EC BL 0x33E14E4
	0x034F23F0 CBNZ X23, 0x34F2B90
	0x034F23F4 CMP W24, 0x1C
	0x034F23F8 B.EQ 0x34F2400
	0x034F23FC CBNZ W24, 0x34F287C
	0x034F2400 LDRB W8, [X21 + 0x11]
	0x034F2404 LDR W20, [X22]
	0x034F2408 CMP W8, 0xC
	0x034F240C B.NE 0x34F254C
	0x034F2410 LDR W8, [X19 + 0x74]
	0x034F2414 CMP W20, W8
	0x034F2418 B.LE 0x34F27D8
	0x034F241C LDR X8, [X19]
	0x034F2420 MOV X0, X19
	0x034F2424 LDR X9, [X8 + 0x208]
	0x034F2428 LDR X1, [X8 + 0x210]
	0x034F242C BLR X9
	0x034F2430 B 0x34F299C
	0x034F2434 LDR X0, [X19 + 0x10]
	0x034F2438 CBZ X0, 0x34F2B88
	0x034F243C MOV X1, X31
	0x034F2440 BL 0x350257C
	0x034F2444 TBZ X0, 0x0, 0x34F2464
	0x034F2448 LDR X8, [X19 + 0x10]
	0x034F244C CBZ X8, 0x34F2B88
	0x034F2450 LDR X0, [X8 + 0xA0]
	0x034F2454 CBZ X0, 0x34F2B88
	0x034F2458 LDR W1, [X20 + 0x54]
	0x034F245C MOV X2, X31
	0x034F2460 BL 0x3522CDC
	0x034F2464 MOV X23, X20
	0x034F2468 LDRB W8, [X23 + 0x20]!
	0x034F246C CMP W8, 0x1
	0x034F2470 B.EQ 0x34F25E0
	0x034F2474 CMP W8, 0x2
	0x034F2478 B.NE 0x34F25E8
	0x034F247C MOVZ W21, 0x411
	0x034F2480 B 0x34F25F8
	0x034F2484 LDR X0, [X19 + 0x10]
	0x034F2488 CBZ X0, 0x34F2B88
	0x034F248C MOV X1, X31
	0x034F2490 BL 0x350257C
	0x034F2494 TBZ X0, 0x0, 0x34F24B4
	0x034F2498 LDR X8, [X19 + 0x10]
	0x034F249C CBZ X8, 0x34F2B88
	0x034F24A0 LDR X0, [X8 + 0xA0]
	0x034F24A4 CBZ X0, 0x34F2B88
	0x034F24A8 LDR W1, [X20 + 0x54]
	0x034F24AC MOV X2, X31
	0x034F24B0 BL 0x3522CDC
	0x034F24B4 LDRB W8, [X19 + 0x40]
	0x034F24B8 CMP W8, 0x1
	0x034F24BC B.NE 0x34F2874
	0x034F24C0 MOV X0, X19
	0x034F24C4 BL 0x34F8110
	0x034F24C8 ADRP X8, 0xC0A000
	0x034F24CC LDR X8, [X8 + 0xBA8]
	0x034F24D0 MOV X21, X0
	0x034F24D4 LDR X8, [X8]
	0x034F24D8 MOV X0, X8
	0x034F24DC BL 0x1C16F10
	0x034F24E0 MOV X1, X21
	0x034F24E4 MOV X2, X31
	0x034F24E8 MOV X22, X0
	0x034F24EC BL 0x351EB5C
	0x034F24F0 MOVZ W1, 0x6
	0x034F24F4 MOV X0, X19
	0x034F24F8 MOV X2, X22
	0x034F24FC MOV W3, W31
	0x034F2500 BL 0x34F12F8
	0x034F2504 LDR X8, [X19 + 0x10]
	0x034F2508 CBZ X8, 0x34F2B88
	0x034F250C LDRB W8, [X8 + 0x8D]
	0x034F2510 CBZ W8, 0x34F251C
	0x034F2514 MOV X0, X19
	0x034F2518 BL 0x34EFD34
	0x034F251C MOVZ W8, 0x3
	0x034F2520 STRB W8, [X19 + 0x40]
	0x034F2524 B 0x34F2874
	0x034F2528 BL 0x3517F24
	0x034F252C LDRB W8, [X19 + 0x40]
	0x034F2530 CMP W8, 0x3
	0x034F2534 B.NE 0x34F2874
	0x034F2538 MOV X0, X19
	0x034F253C MOV X1, X20
	0x034F2540 BL 0x34F79A4
	0x034F2544 TBZ X0, 0x0, 0x34F2874
	0x034F2548 B 0x34F287C
	0x034F254C MOV X0, X19
	0x034F2550 MOV W1, W20
	0x034F2554 BL 0x34F7834
	0x034F2558 LDRB W8, [X21 + 0x11]
	0x034F255C CMP W8, 0x2
	0x034F2560 B.EQ 0x34F2894
	0x034F2564 CMP W8, 0x4
	0x034F2568 B.NE 0x34F299C
	0x034F256C LDRB W8, [X19 + 0x40]
	0x034F2570 CMP W8, 0x4
	0x034F2574 B.NE 0x34F299C
	0x034F2578 LDR X8, [X19 + 0x10]
	0x034F257C CBZ X8, 0x34F2B88
	0x034F2580 LDRB W8, [X8 + 0x40]
	0x034F2584 CMP W8, 0x3
	0x034F2588 B.CC 0x34F25A4
	0x034F258C ADRP X8, 0xC41000
	0x034F2590 LDR X8, [X8 + 0x8C8]
	0x034F2594 MOVZ W1, 0x3
	0x034F2598 MOV X0, X19
	0x034F259C LDR X2, [X8]
	0x034F25A0 BL 0x34F116C
	0x034F25A4 ADRP X8, 0xC41000
	0x034F25A8 LDR X8, [X8 + 0x830]
	0x034F25AC LDR X0, [X8]
	0x034F25B0 BL 0x1C16F10
	0x034F25B4 ADRP X8, 0xC41000
	0x034F25B8 LDR X8, [X8 + 0x8B8]
	0x034F25BC MOV X1, X19
	0x034F25C0 MOV X3, X31
	0x034F25C4 MOV X20, X0
	0x034F25C8 LDR X2, [X8]
	0x034F25CC BL 0x34FF704
	0x034F25D0 MOV X0, X19
	0x034F25D4 MOV X1, X20
	0x034F25D8 BL 0x34F78A8
	0x034F25DC B 0x34F299C
	0x034F25E0 MOVZ W21, 0x413
	0x034F25E4 B 0x34F25F8
	0x034F25E8 CMP W8, 0x3
	0x034F25EC MOVZ W8, 0x414
	0x034F25F0 MOVZ W9, 0x412
	0x034F25F4 CSEL W21, W9, W8, EQ
	0x034F25F8 LDR X8, [X19 + 0x10]
	0x034F25FC CBZ X8, 0x34F2B88
	0x034F2600 LDRB W9, [X8 + 0x40]
	0x034F2604 CMP W9, 0x3
	0x034F2608 B.CC 0x34F2848
	0x034F260C LDR X22, [X8 + 0x48]
	0x034F2610 ADRP X8, 0xC01000
	0x034F2614 LDR X8, [X8 + 0xAC8]
	0x034F2618 MOVZ W1, 0xC
	0x034F261C LDR X0, [X8]
	0x034F2620 BL 0x1C16D6C
	0x034F2624 CBZ X0, 0x34F2B88
	0x034F2628 LDR W8, [X0 + 0x18]
	0x034F262C MOV X24, X0
	0x034F2630 CBZ W8, 0x34F2B8C
	0x034F2634 ADRP X9, 0xC41000
	0x034F2638 LDR X9, [X9 + 0x8E0]
	0x034F263C CMP W8, 0x1
	0x034F2640 LDR X9, [X9]
	0x034F2644 STR X9, [X24 + 0x20]
	0x034F2648 B.EQ 0x34F2B8C
	0x034F264C LDR X9, [X19 + 0x30]
	0x034F2650 CMP W8, 0x2
	0x034F2654 STR X9, [X24 + 0x28]
	0x034F2658 B.LS 0x34F2B8C
	0x034F265C ADRP X8, 0xC41000
	0x034F2660 LDR X8, [X8 + 0x8F8]
	0x034F2664 ADD X0, X31, 0x3C
	0x034F2668 MOV X1, X31
	0x034F266C LDR X8, [X8]
	0x034F2670 STR X8, [X24 + 0x30]
	0x034F2674 LDRH W8, [X19 + 0x68]

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X22, 0xEEE000
	014 Move W8, [X22+2602]
	015 Move W21, W3
	016 Move X20, X2
	017 Move W23, W1
	018 Move X19, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {31}
	023 Move X0, 0xC42000
	024 Move X0, [X0+1912]
	025 Call 0x1C17CF4
	026 Move X0, 0xC42000
	027 Move X0, [X0+2152]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X22+2602], W8
	031 Move X0, X19
	032 Move W1, W21
	033 Call EnetPeer.GetChannel, X0, X1
	034 Move X21, X0
	035 Move X0, X19
	036 Move [X19+68], W31
	037 Call EnetPeer.GetFragmentLength, X0
	038 Move W22, W0
	039 Compare W0, 0
	040 JumpIfEqual {43}
	041 Compare X20, 0
	042 JumpIfNotEqual {52}
	043 Move X8, 0xC42000
	044 Move X8, [X8+2152]
	045 Move W1, 2
	046 Move X0, X19
	047 Move X2, [X8]
	048 Call PeerBase.EnqueueDebugReturn, X0, X1, X2
	049 Move W22, 1000
	050 Compare X20, 0
	051 JumpIfEqual {184}
	052 Move X0, X20
	053 Move X1, X31
	054 Call StreamBuffer.get_Length, X0
	055 NotImplemented "Instruction CMP not yet implemented."
	056 And W8, W23, 255
	057 NotImplemented "Instruction CMP not yet implemented."
	058 NotImplemented "Instruction CSET not yet implemented."
	059 NotImplemented "Instruction CMP not yet implemented."
	060 Move X0, X20
	061 Move X1, X31
	062 NotImplemented "Instruction CSET not yet implemented."
	063 Call StreamBuffer.get_Length, X0
	064 Compare X21, 0
	065 JumpIfEqual {271}
	066 And W26, W23, W24
	067 Move W8, 88
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Move W9, 80
	070 NotImplemented "Instruction CSEL not yet implemented."
	071 Move W28, [X21]
	072 Move W25, W0
	073 Move X0, X20
	074 Move X1, X31
	075 Call StreamBuffer.GetBuffer, X0
	076 Move X23, X0
	077 Move X0, X20
	078 Move X1, X31
	079 Call StreamBuffer.get_Length, X0
	080 NotImplemented "Instruction CMP not yet implemented."
	081 Add W8, W22, W25
	082 NotImplemented "Instruction CMP not yet implemented."
	083 Move W9, 15
	084 Move W10, 8
	085 Subtract W8, W8, 1
	086 Move W27, W31
	087 Move W24, W31
	088 Add W28, W28, 1
	089 NotImplemented "Instruction CSEL not yet implemented."
	090 NotImplemented "Instruction SDIV not yet implemented."
	091 Move X0, X20
	092 Move X1, X31
	093 Call StreamBuffer.get_Length, X0
	094 Subtract W8, W0, W24
	095 NotImplemented "Instruction CMP not yet implemented."
	096 Move X0, X20
	097 Move X1, X31
	098 Call StreamBuffer.get_Length, X0
	099 Subtract W22, W0, W24
	100 Move X8, 0xC42000
	101 Move X8, [X8+1912]
	102 Move X0, [X8]
	103 Move W8, [X0+224]
	104 Compare W8, 0
	105 JumpIfNotEqual {107}
	106 Call 0x1C17DFC
	107 Call PeerBase.MessageBufferPoolGet
	108 Compare X0, 0
	109 JumpIfEqual {271}
	110 Move X1, X23
	111 Move W2, W24
	112 Move W3, W22
	113 Move X4, X31
	114 Move X26, X0
	115 Call StreamBuffer.Write, X0, X1, X2, X3
	116 Move X0, [X19+288]
	117 Compare X0, 0
	118 JumpIfEqual {271}
	119 Move W4, [X21+16]
	120 Move X1, X19
	121 Move W2, W25
	122 Move X3, X26
	123 Call NCommandPool.Acquire, X0, X1, X2, X3, X4
	124 Compare X0, 0
	125 JumpIfEqual {271}
	126 Move X26, X0
	127 Move [X0+40], W29
	128 Move [X0+44], W27
	129 Move [X0+36], W28
	130 Move X0, X20
	131 Move X1, X31
	132 Call StreamBuffer.get_Length, X0
	133 Move [X26+48], W0
	134 Move [X26+52], W24
	135 Move X0, X19
	136 Move X1, X26
	137 Call EnetPeer.QueueOutgoingReliableCommand, X0, X1
	138 Move W8, [X19+68]
	139 Move W9, [X26+84]
	140 Move X0, [X19+16]
	141 Add W8, W9, W8
	142 Move [X19+68], W8
	143 Compare X0, 0
	144 JumpIfEqual {271}
	145 Move X1, X31
	146 Call PhotonPeer.get_TrafficStatsEnabled, X0
	147 Move TEMP, X0
	148 And TEMP, TEMP, 1
	149 Compare TEMP, 1
	150 JumpIfNotEqual {169}
	151 Move X8, [X19+16]
	152 Compare X8, 0
	153 JumpIfEqual {271}
	154 Move X0, [X8+168]
	155 Compare X0, 0
	156 JumpIfEqual {271}
	157 Move W1, [X26+84]
	158 Move X2, X31
	159 Call TrafficStats.CountFragmentOpCommand, X0, X1
	160 Move X8, [X19+16]
	161 Compare X8, 0
	162 JumpIfEqual {271}
	163 Move X0, [X8+176]
	164 Compare X0, 0
	165 JumpIfEqual {271}
	166 Move W1, [X26+84]
	167 Move X2, X31
	168 Call TrafficStatsGameLevel.CountOperation, X0, X1
	169 Move X0, X20
	170 Move X1, X31
	171 Add W27, W27, 1
	172 Add W24, W22, W24
	173 Call StreamBuffer.get_Length, X0
	174 NotImplemented "Instruction CMP not yet implemented."
	175 Move X8, 0xC42000
	176 Move X8, [X8+1912]
	177 Move X0, [X8]
	178 Move W8, [X0+224]
	179 Compare W8, 0
	180 JumpIfNotEqual {182}
	181 Call 0x1C17DFC
	182 Move X0, X20
	183 Call PeerBase.MessageBufferPoolPut, X0
	184 Compare X21, 0
	185 JumpIfEqual {271}
	186 Move X0, [X19+288]
	187 Compare X0, 0
	188 JumpIfEqual {271}
	189 Move W4, [X21+16]
	190 Move X1, X19
	191 Move W2, W23
	192 Move X3, X20
	193 Call NCommandPool.Acquire, X0, X1, X2, X3, X4
	194 Compare X0, 0
	195 JumpIfEqual {271}
	196 Move W8, [X0+16]
	197 Move X20, X0
	198 Move TEMP, X8
	199 And TEMP, TEMP, 1
	200 Compare TEMP, 1
	201 JumpIfEqual {225}
	202 Move X0, X19
	203 Move X1, X20
	204 Call EnetPeer.QueueOutgoingUnreliableCommand, X0, X1
	205 Move W8, [X20+84]
	206 Move X0, [X19+16]
	207 Move [X19+68], W8
	208 Compare X0, 0
	209 JumpIfEqual {271}
	210 Move X1, X31
	211 Call PhotonPeer.get_TrafficStatsEnabled, X0
	212 Move TEMP, X0
	213 And TEMP, TEMP, 1
	214 Compare TEMP, 1
	215 JumpIfNotEqual {257}
	216 Move X8, [X19+16]
	217 Compare X8, 0
	218 JumpIfEqual {271}
	219 Move X0, [X8+168]
	220 Compare X0, 0
	221 JumpIfEqual {271}
	222 Move W1, [X20+84]
	223 Move X2, X31
	224 Call TrafficStats.CountUnreliableOpCommand, X0, X1
	225 Move X0, X19
	226 Move X1, X20
	227 Call EnetPeer.QueueOutgoingReliableCommand, X0, X1
	228 Move W8, [X20+84]
	229 Move X0, [X19+16]
	230 Move [X19+68], W8
	231 Compare X0, 0
	232 JumpIfEqual {271}
	233 Move X1, X31
	234 Call PhotonPeer.get_TrafficStatsEnabled, X0
	235 Move TEMP, X0
	236 And TEMP, TEMP, 1
	237 Compare TEMP, 1
	238 JumpIfNotEqual {257}
	239 Move X8, [X19+16]
	240 Compare X8, 0
	241 JumpIfEqual {271}
	242 Move X0, [X8+168]
	243 Compare X0, 0
	244 JumpIfEqual {271}
	245 Move W1, [X20+84]
	246 Move X2, X31
	247 Call TrafficStats.CountReliableOpCommand, X0, X1
	248 Move X8, [X19+16]
	249 Compare X8, 0
	250 JumpIfEqual {271}
	251 Move X0, [X8+176]
	252 Compare X0, 0
	253 JumpIfEqual {271}
	254 Move W1, [X20+84]
	255 Move X2, X31
	256 Call TrafficStatsGameLevel.CountOperation, X0, X1
	257 Move X20, [X31+80]
	258 Move X19, [X31+88]
	259 Move X22, [X31+64]
	260 Move X21, [X31+72]
	261 Move X24, [X31+48]
	262 Move X23, [X31+56]
	263 Move X26, [X31+32]
	264 Move X25, [X31+40]
	265 Move X28, [X31+16]
	266 Move X27, [X31+24]
	267 Move W0, 1
	268 Move X29, [X31+96]
	269 Move X30, [X31+104]
	270 Return X0
	271 Call 0x1C17F20

Method: System.Int32 SerializeAckToBuffer()

Disassembly:
	0x034F4734 LDR X25, [X8 + 0x20]
	0x034F4738 STRB W31, [X31 + 0x1C]
	0x034F473C ADD X1, X31, 0x1C
	0x034F4740 MOV X0, X25
	0x034F4744 MOV X2, X31
	0x034F4748 BL 0x33DE64C
	0x034F474C CBZ X25, 0x34F47B8
	0x034F4750 LDR X8, [X20 + 0x10]
	0x034F4754 CBZ X8, 0x34F47C0
	0x034F4758 LDR W9, [X25 + 0x70]
	0x034F475C LDR W8, [X8 + 0x5C]
	0x034F4760 LDR X1, [X25 + 0x38]
	0x034F4764 ADD W23, W8, W9
	0x034F4768 MOV X0, X20
	0x034F476C MOV W2, W23
	0x034F4770 BL 0x34F5334
	0x034F4774 LDR X1, [X25 + 0x40]
	0x034F4778 ADD W21, W0, W21
	0x034F477C MOV X0, X20
	0x034F4780 MOV W2, W23
	0x034F4784 BL 0x34F5334
	0x034F4788 MOV X26, X31
	0x034F478C ADD W21, W0, W21
	0x034F4790 LDRB W8, [X31 + 0x1C]
	0x034F4794 CBZ W8, 0x34F47A4
	0x034F4798 MOV X0, X25
	0x034F479C MOV X1, X31
	0x034F47A0 BL 0x33E14E4
	0x034F47A4 CBNZ X26, 0x34F48D8
	0x034F47A8 LDR X8, [X20 + 0x188]
	0x034F47AC ADD X27, X27, 0x1
	0x034F47B0 CBNZ X8, 0x34F471C
	0x034F47B4 B 0x34F48D0
	0x034F47B8 BL 0x1C16F20
	0x034F47BC B 0x34F4A08
	0x034F47C0 BL 0x1C16F20
	0x034F47C4 B 0x34F4A08
	0x034F47C8 B 0x34F47D8
	0x034F47CC B 0x34F47D8
	0x034F47D0 B 0x34F47D8
	0x034F47D4 B 0x34F47D8
	0x034F47D8 MOV X23, X1
	0x034F47DC MOV X24, X0
	0x034F47E0 CMP W23, 0x1
	0x034F47E4 B.NE 0x34F48E8
	0x034F47E8 MOV X0, X24
	0x034F47EC BL 0x3EB1AD0
	0x034F47F0 LDR X26, [X0]
	0x034F47F4 BL 0x3EB1AE0
	0x034F47F8 B 0x34F4790
	0x034F47FC MOV X25, X31
	0x034F4800 MOVZ W23, 0x21
	0x034F4804 LDRB W8, [X31 + 0x20]
	0x034F4808 CBZ W8, 0x34F4818
	0x034F480C MOV X0, X22
	0x034F4810 MOV X1, X31
	0x034F4814 BL 0x33E14E4
	0x034F4818 CBNZ X25, 0x34F4940
	0x034F481C CMP W23, 0x21
	0x034F4820 B.EQ 0x34F4828
	0x034F4824 CBNZ W23, 0x34F488C
	0x034F4828 LDRB W8, [X20 + 0x150]
	0x034F482C CBZ W8, 0x34F488C
	0x034F4830 LDR X0, [X20 + 0x10]
	0x034F4834 CBZ X0, 0x34F4980
	0x034F4838 MOV X1, X31
	0x034F483C BL 0x350257C
	0x034F4840 TBZ X0, 0x0, 0x34F486C
	0x034F4844 LDR X8, [X20 + 0x10]
	0x034F4848 CBZ X8, 0x34F49C4
	0x034F484C LDR X8, [X8 + 0xA8]
	0x034F4850 CBZ X8, 0x34F49C8
	0x034F4854 LDP W9, W10, [X8 + 0x24]
	0x034F4858 ADD W9, W9, 0x1
	0x034F485C STR W9, [X8 + 0x24]
	0x034F4860 LDRB W9, [X20 + 0x150]
	0x034F4864 ADD W9, W10, W9
	0x034F4868 STR W9, [X8 + 0x28]
	0x034F486C LDR X1, [X20 + 0x158]
	0x034F4870 LDR W2, [X20 + 0x160]
	0x034F4874 MOV X0, X20
	0x034F4878 BL 0x34F3B14
	0x034F487C CMP W21, 0x0
	0x034F4880 MOV X20, X31
	0x034F4884 CSET W21, GT
	0x034F4888 B 0x34F4894
	0x034F488C MOV X20, X31
	0x034F4890 MOV W21, W31
	0x034F4894 LDRB W8, [X31 + 0x2C]
	0x034F4898 CBZ W8, 0x34F48A8
	0x034F489C MOV X0, X19
	0x034F48A0 MOV X1, X31
	0x034F48A4 BL 0x33E14E4
	0x034F48A8 CBNZ X20, 0x34F4918
	0x034F48AC MOV W0, W21
	0x034F48B0 LDP X20, X19, [X31 + 0x80]
	0x034F48B4 LDP X22, X21, [X31 + 0x70]
	0x034F48B8 LDP X24, X23, [X31 + 0x60]
	0x034F48BC LDP X26, X25, [X31 + 0x50]
	0x034F48C0 LDP X28, X27, [X31 + 0x40]
	0x034F48C4 LDP X29, X30, [X31 + 0x30]
	0x034F48C8 ADD X31, X31, 0x90
	0x034F48CC RET
	0x034F48D0 BL 0x1C16F20
	0x034F48D4 BL 0x1C16F28
	0x034F48D8 MOV X0, X26
	0x034F48DC BL 0x1C16F18
	0x034F48E0 BL 0x1C16F20
	0x034F48E4 BL 0x1C16F20
	0x034F48E8 MOV X26, X31
	0x034F48EC LDRB W8, [X31 + 0x1C]
	0x034F48F0 CBZ W8, 0x34F4900
	0x034F48F4 MOV X0, X25
	0x034F48F8 MOV X1, X31
	0x034F48FC BL 0x33E14E4
	0x034F4900 CBZ X26, 0x34F4C24
	0x034F4904 MOV X0, X26
	0x034F4908 BL 0x1C16F18
	0x034F490C BL 0x1C16F20
	0x034F4910 BL 0x1C16F20
	0x034F4914 BL 0x1C16F20
	0x034F4918 MOV X0, X20
	0x034F491C BL 0x1C16F18
	0x034F4920 BL 0x1C16F20
	0x034F4924 BL 0x1C16F20
	0x034F4928 MOV X0, X25
	0x034F492C BL 0x1C16F18
	0x034F4930 BL 0x1C16F20
	0x034F4934 BL 0x1C16F20
	0x034F4938 BL 0x1C16F20
	0x034F493C BL 0x1C16F20
	0x034F4940 MOV X0, X25
	0x034F4944 BL 0x1C16F18
	0x034F4948 BL 0x1C16F28
	0x034F494C BL 0x1C16F28
	0x034F4950 BL 0x1C16F28
	0x034F4954 BL 0x1C16F28
	0x034F4958 BL 0x1C16F20
	0x034F495C BL 0x1C16F20
	0x034F4960 BL 0x1C16F20
	0x034F4964 BL 0x1C16F28
	0x034F4968 BL 0x1C16F44
	0x034F496C MOV X1, X31
	0x034F4970 BL 0x1C16DEC
	0x034F4974 BL 0x1C16F20
	0x034F4978 BL 0x1C16F20
	0x034F497C BL 0x1C16F20
	0x034F4980 BL 0x1C16F20
	0x034F4984 BL 0x1C16F44
	0x034F4988 MOV X1, X31
	0x034F498C BL 0x1C16DEC
	0x034F4990 BL 0x1C16F44
	0x034F4994 MOV X1, X31
	0x034F4998 BL 0x1C16DEC
	0x034F499C BL 0x1C16F44
	0x034F49A0 MOV X1, X31
	0x034F49A4 BL 0x1C16DEC
	0x034F49A8 BL 0x1C16F44

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0xEEC000
	007 Move W8, [X20+2603]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {24}
	013 Move X0, 0xC08000
	014 Move X0, [X0+3016]
	015 Call 0x1C17CF4
	016 Move X0, 0xC40000
	017 Move X0, [X0+2344]
	018 Call 0x1C17CF4
	019 Move X0, 0xC40000
	020 Move X0, [X0+2352]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X20+2603], W8
	024 Move [X31+8], X31
	025 Move X0, [X19+312]
	026 Compare X0, 0
	027 JumpIfEqual {174}
	028 Move X1, X31
	029 Move W2, W31
	030 Move X3, X31
	031 Call StreamBuffer.Seek, X0, X1, X2
	032 Move X0, [X19+312]
	033 Compare X0, 0
	034 JumpIfEqual {174}
	035 Add X20, X19, 336
	036 Move X1, X31
	037 Call StreamBuffer.get_Position, X0
	038 Move X8, [X19+312]
	039 Compare X8, 0
	040 JumpIfEqual {174}
	041 Move W21, W0
	042 Move X0, X8
	043 Move X1, X31
	044 Call StreamBuffer.get_Length, X0
	045 Add W8, W21, 20
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Move W8, [X19+352]
	048 Move X0, X19
	049 Add W1, W8, 20
	050 Call EnetPeer.CalculatePacketSize, X0, X1
	051 Move X8, [X19+16]
	052 Compare X8, 0
	053 JumpIfEqual {174}
	054 Move W21, W0
	055 Move X0, X8
	056 Move X1, X31
	057 Call PhotonPeer.get_MaximumTransferUnit, X0
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Move X0, [X19+312]
	060 Compare X0, 0
	061 JumpIfEqual {174}
	062 Add X2, X31, 12
	063 Move W1, 20
	064 Move X3, X31
	065 Call StreamBuffer.GetBufferAndAdvance, X0, X1, X2
	066 Move W1, [X31+12]
	067 Move X2, [X19+344]
	068 Move W3, [X19+352]
	069 Move W4, 20
	070 Move X5, X31
	071 Call Buffer.BlockCopy, X0, X1, X2, X3, X4
	072 Move W8, [X19+352]
	073 Move W9, [X19+336]
	074 Move X0, [X19+312]
	075 Add W8, W8, 20
	076 Add W9, W9, 1
	077 Move [X19+352], W8
	078 Move [X19+336], W9
	079 Compare X0, 0
	080 JumpIfNotEqual {36}
	081 Move X8, [X19+16]
	082 Compare X8, 0
	083 JumpIfEqual {174}
	084 Move W9, [X8+64]
	085 NotImplemented "Instruction CMP not yet implemented."
	086 Move X21, [X8+72]
	087 Move X0, X20
	088 Move X1, X31
	089 Call Byte.ToString, X0
	090 Move X8, [X19+312]
	091 Compare X8, 0
	092 JumpIfEqual {174}
	093 Move X20, X0
	094 Move X0, X8
	095 Move X1, X31
	096 Call StreamBuffer.get_Position, X0
	097 Move [X31+8], W0
	098 Add X0, X31, 8
	099 Move X1, X31
	100 Call Int32.ToString, X0
	101 Move X8, 0xC40000
	102 Move X8, [X8+2344]
	103 Move X9, 0xC40000
	104 Move X9, [X9+2352]
	105 Move X3, X0
	106 Move X8, [X8]
	107 Move X1, X20
	108 Move X2, [X9]
	109 Move X4, X31
	110 Move X0, X8
	111 Call String.Concat, X0, X1, X2, X3
	112 Compare X21, 0
	113 JumpIfEqual {174}
	114 Move X10, 0xC08000
	115 Move X8, [X21]
	116 Move X10, [X10+3016]
	117 Move X20, X0
	118 NotImplemented "Instruction LDRH not yet implemented."
	119 Move X1, [X10]
	120 Compare X9, 0
	121 JumpIfEqual {128}
	122 Move X10, [X8+176]
	123 Add X10, X10, 8
	124 NotImplemented "Instruction LDUR not yet implemented."
	125 NotImplemented "Instruction CMP not yet implemented."
	126 Subtract X9, X9, 1
	127 Add X10, X10, 16
	128 Move X0, X21
	129 Move W2, W31
	130 Call 0x1C5D788
	131 NotImplemented "Instruction LDRSW not yet implemented."
	132 Add X8, X8, X9
	133 Add X0, X8, 312
	134 Move X8, [X0]
	135 Move X3, [X0+8]
	136 Move W1, 5
	137 Move X0, X21
	138 Move X2, X20
	139 NotImplemented "Instruction BLR not yet implemented."
	140 Move X0, [X19+312]
	141 Compare X0, 0
	142 JumpIfEqual {174}
	143 Move X1, X31
	144 Call StreamBuffer.Compact, X0
	145 Move X20, [X19+312]
	146 Compare X20, 0
	147 JumpIfEqual {174}
	148 Move X0, X20
	149 Move X1, X31
	150 Call StreamBuffer.get_Length, X0
	151 Move W1, W0
	152 Move X0, X20
	153 Move X2, X31
	154 Call StreamBuffer.set_Position, X0, X1
	155 Move X0, [X19+312]
	156 Compare X0, 0
	157 JumpIfEqual {174}
	158 Move X1, X31
	159 Call StreamBuffer.get_Length, X0
	160 Move W8, 0x6667
	161 NotImplemented "Instruction MOVK not yet implemented."
	162 Move X20, [X31+32]
	163 Move X19, [X31+40]
	164 Move X30, [X31+16]
	165 Move X21, [X31+24]
	166 NotImplemented "Instruction SMADDL not yet implemented."
	167 Move X9, X8
	168 ShiftRight X9, 63
	169 And X9, X9, 0x7FFFFFFF
	170 NotImplemented "Instruction SBFM not yet implemented."
	171 Add W0, W8, W9
	172 Add X31, X31, 48
	173 Return X0
	174 Call 0x1C17F20

Method: System.Int32 SerializeToBuffer(System.Collections.Generic.Queue`1<ExitGames.Client.Photon.NCommand> commandList, System.Int32 channelSequenceLimit)

Disassembly:
	0x034F6334 CBZ X8, 0x34F638C
	0x034F6338 LDR X9, [X8]
	0x034F633C MOV X22, X0
	0x034F6340 MOV X0, X8
	0x034F6344 MOV X1, X21
	0x034F6348 LDP X10, X3, [X9 + 0x198]
	0x034F634C MOV W2, W20
	0x034F6350 BLR X10
	0x034F6354 LDR X0, [X19 + 0xC0]
	0x034F6358 CBZ X0, 0x34F638C
	0x034F635C MOV X1, X31
	0x034F6360 BL 0x364C19C
	0x034F6364 LDR W9, [X19 + 0xD0]
	0x034F6368 SUB W8, W0, W22
	0x034F636C CMP W8, W9
	0x034F6370 B.LE 0x34F6378
	0x034F6374 STR W8, [X19 + 0xD0]
	0x034F6378 LDP X20, X19, [X31 + 0x30]
	0x034F637C LDP X22, X21, [X31 + 0x20]
	0x034F6380 LDP X24, X23, [X31 + 0x10]
	0x034F6384 LDP X30, X25, [X31], #0x40
	0x034F6388 RET
	0x034F638C BL 0x1C16F20
	0x034F6390 STR X30, [X31 - 0x40]!
	0x034F6394 STP X24, X23, [X31 + 0x10]
	0x034F6398 STP X22, X21, [X31 + 0x20]
	0x034F639C STP X20, X19, [X31 + 0x30]
	0x034F63A0 ADRP X21, 0xEE9000
	0x034F63A4 LDRB W8, [X21 + 0xA81]
	0x034F63A8 MOV X19, X1
	0x034F63AC MOV X20, X0
	0x034F63B0 TBNZ X8, 0x0, 0x34F6410
	0x034F63B4 ADRP X0, 0xC3D000
	0x034F63B8 LDR X0, [X0 + 0x9B0]
	0x034F63BC BL 0x1C16CF4
	0x034F63C0 ADRP X0, 0xC3D000
	0x034F63C4 LDR X0, [X0 + 0x9B8]
	0x034F63C8 BL 0x1C16CF4
	0x034F63CC ADRP X0, 0xC3D000
	0x034F63D0 LDR X0, [X0 + 0x9C0]
	0x034F63D4 BL 0x1C16CF4
	0x034F63D8 ADRP X0, 0xC3D000
	0x034F63DC LDR X0, [X0 + 0x9C8]
	0x034F63E0 BL 0x1C16CF4
	0x034F63E4 ADRP X0, 0xC3D000
	0x034F63E8 LDR X0, [X0 + 0x9D0]
	0x034F63EC BL 0x1C16CF4
	0x034F63F0 ADRP X0, 0xC3D000
	0x034F63F4 LDR X0, [X0 + 0x9D8]
	0x034F63F8 BL 0x1C16CF4
	0x034F63FC ADRP X0, 0xC3D000
	0x034F6400 LDR X0, [X0 + 0x9E0]
	0x034F6404 BL 0x1C16CF4
	0x034F6408 MOVZ W8, 0x1
	0x034F640C STRB W8, [X21 + 0xA81]
	0x034F6410 LDR X8, [X20 + 0x110]
	0x034F6414 CBZ X8, 0x34F65EC
	0x034F6418 LDRB W9, [X8 + 0x10]
	0x034F641C CBZ W9, 0x34F65F4
	0x034F6420 LDRB W9, [X20 + 0x20]
	0x034F6424 CBZ W9, 0x34F6460
	0x034F6428 LDR W9, [X8 + 0x18]
	0x034F642C CMP W9, 0x1
	0x034F6430 B.LT 0x34F64A8
	0x034F6434 LDR X0, [X20 + 0xF8]
	0x034F6438 CBZ X0, 0x34F65EC
	0x034F643C LDR X8, [X0]
	0x034F6440 UBFM W1, W9, 0x1F, 0x1E
	0x034F6444 LDP X10, X2, [X8 + 0x1A8]
	0x034F6448 BLR X10
	0x034F644C LDR X8, [X20 + 0x110]
	0x034F6450 CBZ X8, 0x34F65EC
	0x034F6454 LDR W9, [X8 + 0x18]
	0x034F6458 SUB W23, W0, W9
	0x034F645C B 0x34F64AC
	0x034F6460 LDR W9, [X8 + 0x1C]
	0x034F6464 CMP W9, 0x1
	0x034F6468 B.LT 0x34F6428
	0x034F646C LDR X0, [X20 + 0xF8]
	0x034F6470 CBZ X0, 0x34F65EC
	0x034F6474 LDR X8, [X0]
	0x034F6478 MOVZ W1, 0x65
	0x034F647C LDP X9, X2, [X8 + 0x1A8]
	0x034F6480 BLR X9
	0x034F6484 LDR X8, [X20 + 0x110]
	0x034F6488 CBZ X8, 0x34F65EC
	0x034F648C LDR W9, [X8 + 0x1C]
	0x034F6490 CMP W0, W9
	0x034F6494 B.GE 0x34F6428
	0x034F6498 LDR W9, [X8 + 0x48]
	0x034F649C ADD W9, W9, 0x1
	0x034F64A0 STR W9, [X8 + 0x48]
	0x034F64A4 B 0x34F65D8
	0x034F64A8 MOV W23, W31
	0x034F64AC LDR X0, [X20 + 0xC0]
	0x034F64B0 CBZ X0, 0x34F65EC
	0x034F64B4 ADRP X21, 0xC3D000
	0x034F64B8 LDR W24, [X8 + 0x14]
	0x034F64BC LDR X21, [X21 + 0x9E0]
	0x034F64C0 MOV X1, X31
	0x034F64C4 BL 0x364C19C
	0x034F64C8 LDR X8, [X21]
	0x034F64CC MOV X22, X0
	0x034F64D0 MOV X0, X8
	0x034F64D4 BL 0x1C16F10
	0x034F64D8 MOV X21, X0
	0x034F64DC BL 0x34FB2A0
	0x034F64E0 CBZ X21, 0x34F65EC
	0x034F64E4 ADD W8, W24, W23
	0x034F64E8 ADD W22, W8, W22
	0x034F64EC STR X19, [X21 + 0x20]
	0x034F64F0 STR W22, [X21 + 0x18]
	0x034F64F4 STR W8, [X21 + 0x28]
	0x034F64F8 LDR X19, [X20 + 0x100]
	0x034F64FC STRB W31, [X31 + 0xC]
	0x034F6500 ADD X1, X31, 0xC
	0x034F6504 MOV X0, X19
	0x034F6508 MOV X2, X31
	0x034F650C BL 0x33DE64C
	0x034F6510 LDR X8, [X20 + 0x100]
	0x034F6514 CBZ X8, 0x34F6644
	0x034F6518 ADRP X23, 0xC3D000
	0x034F651C LDR W9, [X8 + 0x18]
	0x034F6520 LDR X23, [X23 + 0x9C8]
	0x034F6524 CBZ W9, 0x34F6534
	0x034F6528 LDRB W9, [X20 + 0x20]
	0x034F652C CMP W9, 0x1
	0x034F6530 B.NE 0x34F6548
	0x034F6534 LDR X2, [X23]
	0x034F6538 MOV X0, X8

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X22, 0xEEA000
	009 Move W8, [X22+2604]
	010 Move W21, W2
	011 Move X19, X1
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {37}
	017 Move X0, 0xC06000
	018 Move X0, [X0+3016]
	019 Call 0x1C17CF4
	020 Move X0, 0xC3E000
	021 Move X0, [X0+2200]
	022 Call 0x1C17CF4
	023 Move X0, 0xC3E000
	024 Move X0, [X0+2424]
	025 Call 0x1C17CF4
	026 Move X0, 0xC3E000
	027 Move X0, [X0+1840]
	028 Call 0x1C17CF4
	029 Move X0, 0xC3E000
	030 Move X0, [X0+2344]
	031 Call 0x1C17CF4
	032 Move X0, 0xC3E000
	033 Move X0, [X0+2432]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X22+2604], W8
	037 Compare X19, 0
	038 JumpIfEqual {141}
	039 Move W8, [X19+32]
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Move X22, 0xC3E000
	042 Move X23, 0xC3E000
	043 Move X22, [X22+2424]
	044 Move X23, [X23+2200]
	045 Move X1, [X22]
	046 Move X0, X19
	047 Call Queue`1<Object>.Peek, X0
	048 Compare X0, 0
	049 JumpIfEqual {72}
	050 Move W8, [X0+16]
	051 Move X1, X0
	052 Move TEMP, X8
	053 And TEMP, TEMP, 1
	054 Compare TEMP, 1
	055 JumpIfNotEqual {65}
	056 Move W8, [X1+18]
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Move X8, [X20+16]
	059 Compare X8, 0
	060 JumpIfEqual {141}
	061 Move W8, [X8+92]
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Move W8, [X1+20]
	064 NotImplemented "Instruction CMP not yet implemented."
	065 Move X0, X20
	066 Move W2, W31
	067 Call EnetPeer.SerializeCommandToBuffer, X0, X1, X2
	068 Move TEMP, X0
	069 And TEMP, TEMP, 1
	070 Compare TEMP, 1
	071 JumpIfNotEqual {77}
	072 Move X1, [X23]
	073 Move X0, X19
	074 Call Queue`1<Object>.Dequeue, X0
	075 Move W8, [X19+32]
	076 NotImplemented "Instruction CMP not yet implemented."
	077 Move X8, [X20+16]
	078 Compare X8, 0
	079 JumpIfEqual {141}
	080 Move W9, [X8+64]
	081 NotImplemented "Instruction CMP not yet implemented."
	082 Move X21, [X8+72]
	083 Add X0, X20, 336
	084 Move X1, X31
	085 Call Byte.ToString, X0
	086 Move W8, [X19+32]
	087 Move X20, X0
	088 Add X0, X31, 12
	089 Move X1, X31
	090 Move [X31+12], W8
	091 Call Int32.ToString, X0
	092 Move X8, 0xC3E000
	093 Move X8, [X8+2344]
	094 Move X9, 0xC3E000
	095 Move X9, [X9+2432]
	096 Move X3, X0
	097 Move X8, [X8]
	098 Move X1, X20
	099 Move X2, [X9]
	100 Move X4, X31
	101 Move X0, X8
	102 Call String.Concat, X0, X1, X2, X3
	103 Compare X21, 0
	104 JumpIfEqual {141}
	105 Move X10, 0xC06000
	106 Move X8, [X21]
	107 Move X10, [X10+3016]
	108 Move X20, X0
	109 NotImplemented "Instruction LDRH not yet implemented."
	110 Move X1, [X10]
	111 Compare X9, 0
	112 JumpIfEqual {119}
	113 Move X10, [X8+176]
	114 Add X10, X10, 8
	115 NotImplemented "Instruction LDUR not yet implemented."
	116 NotImplemented "Instruction CMP not yet implemented."
	117 Subtract X9, X9, 1
	118 Add X10, X10, 16
	119 Move X0, X21
	120 Move W2, W31
	121 Call 0x1C5D788
	122 Move W0, W31
	123 NotImplemented "Instruction LDRSW not yet implemented."
	124 Add X8, X8, X9
	125 Add X0, X8, 312
	126 Move X8, [X0]
	127 Move X3, [X0+8]
	128 Move W1, 5
	129 Move X0, X21
	130 Move X2, X20
	131 NotImplemented "Instruction BLR not yet implemented."
	132 Move W0, [X19+32]
	133 Move X20, [X31+48]
	134 Move X19, [X31+56]
	135 Move X22, [X31+32]
	136 Move X21, [X31+40]
	137 Move X30, [X31+16]
	138 Move X23, [X31+24]
	139 Add X31, X31, 64
	140 Return X0
	141 Call 0x1C17F20

Method: System.Boolean SerializeCommandToBuffer(ExitGames.Client.Photon.NCommand command, System.Boolean commandIsInSentQueue = False)

Disassembly:
	0x034F49CC BL 0x1C16F20
	0x034F49D0 BL 0x1C16F20
	0x034F49D4 BL 0x1C16F20
	0x034F49D8 BL 0x1C16F20
	0x034F49DC BL 0x1C16F20
	0x034F49E0 BL 0x1C16F20
	0x034F49E4 BL 0x1C16F20
	0x034F49E8 BL 0x1C16F20
	0x034F49EC BL 0x1C16F20
	0x034F49F0 BL 0x1C16F20
	0x034F49F4 BL 0x1C16F20
	0x034F49F8 BL 0x1C16F20
	0x034F49FC BL 0x1C16F20
	0x034F4A00 BL 0x1C16F20
	0x034F4A04 BL 0x1C16F20
	0x034F4A08 MOV X23, X1
	0x034F4A0C MOV X24, X0
	0x034F4A10 B 0x34F48EC
	0x034F4A14 B 0x34F4B9C
	0x034F4A18 B 0x34F4B9C
	0x034F4A1C B 0x34F4BB8
	0x034F4A20 B 0x34F4B9C
	0x034F4A24 B 0x34F4B9C
	0x034F4A28 B 0x34F4B9C
	0x034F4A2C B 0x34F4B9C
	0x034F4A30 B 0x34F4BB8
	0x034F4A34 B 0x34F4BB8
	0x034F4A38 B 0x34F4BB8
	0x034F4A3C B 0x34F4BB8
	0x034F4A40 B 0x34F4BB8
	0x034F4A44 B 0x34F4B9C
	0x034F4A48 B 0x34F4B9C
	0x034F4A4C B 0x34F4BB8
	0x034F4A50 B 0x34F4BB8
	0x034F4A54 B 0x34F4BB8
	0x034F4A58 B 0x34F4BB8
	0x034F4A5C B 0x34F4BB8
	0x034F4A60 B 0x34F4B9C
	0x034F4A64 B 0x34F4B9C
	0x034F4A68 B 0x34F4BB8
	0x034F4A6C B 0x34F4BB8
	0x034F4A70 B 0x34F4BB8
	0x034F4A74 B 0x34F4B9C
	0x034F4A78 B 0x34F4B9C
	0x034F4A7C B 0x34F4B9C
	0x034F4A80 B 0x34F4BB8
	0x034F4A84 B 0x34F4BB8
	0x034F4A88 B 0x34F4B9C
	0x034F4A8C B 0x34F4BB8
	0x034F4A90 B 0x34F4B9C
	0x034F4A94 B 0x34F4B9C
	0x034F4A98 B 0x34F4B9C
	0x034F4A9C B 0x34F4B9C
	0x034F4AA0 B 0x34F4B9C
	0x034F4AA4 B 0x34F4BB8
	0x034F4AA8 B 0x34F4BB8
	0x034F4AAC B 0x34F4BB8
	0x034F4AB0 B 0x34F4BB8
	0x034F4AB4 B 0x34F4BB8
	0x034F4AB8 B 0x34F4BB8
	0x034F4ABC B 0x34F4BB8
	0x034F4AC0 B 0x34F4B9C
	0x034F4AC4 B 0x34F4B9C
	0x034F4AC8 B 0x34F4BB8
	0x034F4ACC B 0x34F4BB8
	0x034F4AD0 B 0x34F4BB8
	0x034F4AD4 B 0x34F4BB8
	0x034F4AD8 B 0x34F4BB8
	0x034F4ADC B 0x34F4BB8
	0x034F4AE0 B 0x34F4BB8
	0x034F4AE4 B 0x34F4BB8
	0x034F4AE8 B 0x34F4C1C
	0x034F4AEC B 0x34F4B9C
	0x034F4AF0 B 0x34F4B10
	0x034F4AF4 B 0x34F4BB8
	0x034F4AF8 B 0x34F4BB8
	0x034F4AFC B 0x34F4BB8
	0x034F4B00 B 0x34F4BB8
	0x034F4B04 B 0x34F4B9C
	0x034F4B08 B 0x34F4B10
	0x034F4B0C B 0x34F4B10
	0x034F4B10 MOV X23, X1

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Compare X1, 0
	010 JumpIfEqual {84}
	011 Move W8, [X0+352]
	012 Move W9, [X1+84]
	013 Move X19, X1
	014 Move W20, W2
	015 Move X21, X0
	016 Add W1, W9, W8
	017 Call EnetPeer.CalculatePacketSize, X0, X1
	018 Move X8, [X21+16]
	019 Compare X8, 0
	020 JumpIfEqual {94}
	021 Move W22, W0
	022 Move X0, X8
	023 Move X1, X31
	024 Call PhotonPeer.get_MaximumTransferUnit, X0
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move W0, W31
	027 Move X1, [X21+344]
	028 Add X22, X21, 352
	029 Move X0, X19
	030 Move X2, X22
	031 Call NCommand.SerializeHeader, X0, X1, X2
	032 Move X0, [X19+88]
	033 Compare X0, 0
	034 JumpIfEqual {68}
	035 Move X1, X31
	036 Call StreamBuffer.get_Length, X0
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move X0, [X19+88]
	039 Compare X0, 0
	040 JumpIfEqual {94}
	041 Move X1, X31
	042 Call StreamBuffer.GetBuffer, X0
	043 Move X23, [X21+344]
	044 Move X8, [X19+88]
	045 Move W24, [X21+352]
	046 Move X25, X0
	047 Compare X8, 0
	048 JumpIfEqual {53}
	049 Move X0, X8
	050 Move X1, X31
	051 Call StreamBuffer.get_Length, X0
	052 Move W4, W0
	053 Move W4, W31
	054 Move X0, X25
	055 Move W1, W31
	056 Move X2, X23
	057 Move W3, W24
	058 Move X5, X31
	059 Call Buffer.BlockCopy, X0, X1, X2, X3, X4
	060 Move X0, [X19+88]
	061 Move W23, [X22]
	062 Compare X0, 0
	063 JumpIfEqual {66}
	064 Move X1, X31
	065 Call StreamBuffer.get_Length, X0
	066 Add W8, W0, W23
	067 Move [X22], W8
	068 Move W8, [X21+336]
	069 Add W8, W8, 1
	070 Move [X21+336], W8
	071 Move W8, [X19+16]
	072 Move TEMP, X8
	073 And TEMP, TEMP, 1
	074 Compare TEMP, 1
	075 JumpIfEqual {80}
	076 Move X0, X19
	077 Call NCommand.FreePayload, X0
	078 Move X0, X19
	079 Call NCommand.Release, X0
	080 And W2, W20, 1
	081 Move X0, X21
	082 Move X1, X19
	083 Call EnetPeer.QueueSentCommand, X0, X1, X2
	084 Move W0, 1
	085 Move X20, [X31+48]
	086 Move X19, [X31+56]
	087 Move X22, [X31+32]
	088 Move X21, [X31+40]
	089 Move X24, [X31+16]
	090 Move X23, [X31+24]
	091 Move X30, [X31+64]
	092 Move X25, [X31+72]
	093 Return X0
	094 Call 0x1C17F20

Method: System.Void SendData(System.Byte[] data, System.Int32 length)

Disassembly:
	0x034F4B14 MOV X24, X0
	0x034F4B18 MOV W21, W31
	0x034F4B1C B 0x34F4B34
	0x034F4B20 B 0x34F4B9C
	0x034F4B24 B 0x34F4B9C
	0x034F4B28 B 0x34F4BB8
	0x034F4B2C MOV X23, X1
	0x034F4B30 MOV X24, X0
	0x034F4B34 CMP W23, 0x1
	0x034F4B38 B.NE 0x34F4B54
	0x034F4B3C MOV X0, X24
	0x034F4B40 BL 0x3EB1AD0
	0x034F4B44 LDR X25, [X0]
	0x034F4B48 BL 0x3EB1AE0
	0x034F4B4C MOV W23, W31
	0x034F4B50 B 0x34F3FE8
	0x034F4B54 MOV X25, X31
	0x034F4B58 LDRB W8, [X31 + 0x28]
	0x034F4B5C CBZ W8, 0x34F4B6C
	0x034F4B60 MOV X0, X22
	0x034F4B64 MOV X1, X31
	0x034F4B68 BL 0x33E14E4
	0x034F4B6C CBZ X25, 0x34F4C60
	0x034F4B70 MOV X0, X25
	0x034F4B74 BL 0x1C16F18
	0x034F4B78 MOV X23, X1
	0x034F4B7C MOV X24, X0
	0x034F4B80 B 0x34F4B58
	0x034F4B84 B 0x34F4B9C
	0x034F4B88 B 0x34F4BB8
	0x034F4B8C B 0x34F4BB8
	0x034F4B90 B 0x34F4BB8
	0x034F4B94 B 0x34F4BB8
	0x034F4B98 B 0x34F4B9C
	0x034F4B9C MOV X23, X1
	0x034F4BA0 MOV X24, X0
	0x034F4BA4 B 0x34F4C60
	0x034F4BA8 B 0x34F4BB8
	0x034F4BAC B 0x34F4BB8
	0x034F4BB0 B 0x34F4BB8
	0x034F4BB4 B 0x34F4BB8
	0x034F4BB8 MOV X23, X1
	0x034F4BBC MOV X24, X0
	0x034F4BC0 CMP W23, 0x1
	0x034F4BC4 B.NE 0x34F4BE0
	0x034F4BC8 MOV X0, X24
	0x034F4BCC BL 0x3EB1AD0
	0x034F4BD0 LDR X25, [X0]
	0x034F4BD4 BL 0x3EB1AE0
	0x034F4BD8 MOV W22, W31
	0x034F4BDC B 0x34F45C8
	0x034F4BE0 MOV X25, X31
	0x034F4BE4 LDRB W8, [X31 + 0x24]
	0x034F4BE8 CBZ W8, 0x34F4BF8
	0x034F4BEC LDR X0, [X31]
	0x034F4BF0 MOV X1, X31
	0x034F4BF4 BL 0x33E14E4
	0x034F4BF8 CBZ X25, 0x34F4C60
	0x034F4BFC MOV X0, X25
	0x034F4C00 BL 0x1C16F18
	0x034F4C04 MOV X23, X1
	0x034F4C08 MOV X24, X0
	0x034F4C0C B 0x34F4BE4
	0x034F4C10 B 0x34F4C1C
	0x034F4C14 B 0x34F4C1C
	0x034F4C18 B 0x34F4C1C
	0x034F4C1C MOV X23, X1
	0x034F4C20 MOV X24, X0
	0x034F4C24 CMP W23, 0x1
	0x034F4C28 B.NE 0x34F4C44
	0x034F4C2C MOV X0, X24
	0x034F4C30 BL 0x3EB1AD0
	0x034F4C34 LDR X25, [X0]
	0x034F4C38 BL 0x3EB1AE0
	0x034F4C3C MOV W23, W31
	0x034F4C40 B 0x34F4804
	0x034F4C44 MOV X25, X31
	0x034F4C48 LDRB W8, [X31 + 0x20]
	0x034F4C4C CBZ W8, 0x34F4C5C
	0x034F4C50 MOV X0, X22
	0x034F4C54 MOV X1, X31
	0x034F4C58 BL 0x33E14E4
	0x034F4C5C CBNZ X25, 0x34F4C84
	0x034F4C60 CMP W23, 0x1
	0x034F4C64 B.NE 0x34F4C7C
	0x034F4C68 MOV X0, X24
	0x034F4C6C BL 0x3EB1AD0
	0x034F4C70 LDR X20, [X0]
	0x034F4C74 BL 0x3EB1AE0
	0x034F4C78 B 0x34F4890
	0x034F4C7C MOV X20, X31
	0x034F4C80 B 0x34F4C9C
	0x034F4C84 MOV X0, X25
	0x034F4C88 BL 0x1C16F18
	0x034F4C8C MOV X23, X1
	0x034F4C90 MOV X24, X0
	0x034F4C94 B 0x34F4C48
	0x034F4C98 MOV X24, X0
	0x034F4C9C LDRB W8, [X31 + 0x2C]
	0x034F4CA0 CBZ W8, 0x34F4CB0
	0x034F4CA4 MOV X0, X19
	0x034F4CA8 MOV X1, X31
	0x034F4CAC BL 0x33E14E4
	0x034F4CB0 CBNZ X20, 0x34F4CBC
	0x034F4CB4 MOV X0, X24
	0x034F4CB8 BL 0x1D2C690
	0x034F4CBC MOV X0, X20
	0x034F4CC0 BL 0x1C16F18
	0x034F4CC4 BL 0x1990590
	0x034F4CC8 STR X30, [X31 - 0x10]!
	0x034F4CCC LDR X8, [X0 + 0x10]
	0x034F4CD0 CBZ X8, 0x34F4CE0
	0x034F4CD4 LDR W0, [X8 + 0x78]
	0x034F4CD8 LDR X30, [X31], #0x10
	0x034F4CDC RET
	0x034F4CE0 BL 0x1C16F20
	0x034F4CE4 SUB X31, X31, 0x60
	0x034F4CE8 STR X30, [X31 + 0x10]
	0x034F4CEC STP X26, X25, [X31 + 0x20]
	0x034F4CF0 STP X24, X23, [X31 + 0x30]
	0x034F4CF4 STP X22, X21, [X31 + 0x40]
	0x034F4CF8 STP X20, X19, [X31 + 0x50]
	0x034F4CFC ADRP X20, 0xEEB000
	0x034F4D00 LDRB W8, [X20 + 0xA29]
	0x034F4D04 MOV X19, X0
	0x034F4D08 TBNZ X8, 0x0, 0x34F4D74
	0x034F4D0C ADRP X0, 0xC3F000
	0x034F4D10 LDR X0, [X0 + 0x950]
	0x034F4D14 BL 0x1C16CF4
	0x034F4D18 ADRP X0, 0xC3F000
	0x034F4D1C LDR X0, [X0 + 0x958]
	0x034F4D20 BL 0x1C16CF4
	0x034F4D24 ADRP X0, 0xC3F000
	0x034F4D28 LDR X0, [X0 + 0x960]
	0x034F4D2C BL 0x1C16CF4
	0x034F4D30 ADRP X0, 0xC3F000
	0x034F4D34 LDR X0, [X0 + 0x968]
	0x034F4D38 BL 0x1C16CF4
	0x034F4D3C ADRP X0, 0xC3F000
	0x034F4D40 LDR X0, [X0 + 0x970]
	0x034F4D44 BL 0x1C16CF4
	0x034F4D48 ADRP X0, 0xC00000
	0x034F4D4C LDR X0, [X0 + 0xE58]
	0x034F4D50 BL 0x1C16CF4
	0x034F4D54 ADRP X0, 0xC3F000
	0x034F4D58 LDR X0, [X0 + 0x738]
	0x034F4D5C BL 0x1C16CF4
	0x034F4D60 ADRP X0, 0xC3F000
	0x034F4D64 LDR X0, [X0 + 0x918]
	0x034F4D68 BL 0x1C16CF4
	0x034F4D6C MOVZ W8, 0x1
	0x034F4D70 STRB W8, [X20 + 0xA29]
	0x034F4D74 ADD X0, X19, 0x130
	0x034F4D78 MOVZ W2, 0x1
	0x034F4D7C MOV W1, W31
	0x034F4D80 MOV X3, X31
	0x034F4D84 STRB W31, [X31 + 0x1C]
	0x034F4D88 STRB W31, [X31 + 0x18]
	0x034F4D8C STRB W31, [X31 + 0xC]
	0x034F4D90 STRB W31, [X31 + 0x8]
	0x034F4D94 BL 0x33E7AB4
	0x034F4D98 LDR X8, [X19 + 0x10]
	0x034F4D9C CBZ X8, 0x34F5154
	0x034F4DA0 LDR W8, [X8 + 0x5C]
	0x034F4DA4 CMP W8, 0x1
	0x034F4DA8 B.LT 0x34F4F50
	0x034F4DAC LDR X8, [X19 + 0x128]
	0x034F4DB0 CBZ X8, 0x34F5154
	0x034F4DB4 LDR W8, [X8 + 0x18]
	0x034F4DB8 CBZ W8, 0x34F4ED8
	0x034F4DBC LDR X0, [X19 + 0x1B0]
	0x034F4DC0 CBZ X0, 0x34F5154
	0x034F4DC4 ADRP X8, 0xC3F000
	0x034F4DC8 LDR X8, [X8 + 0x958]
	0x034F4DCC LDR X1, [X8]
	0x034F4DD0 BL 0x2D8C6B4
	0x034F4DD4 LDR X20, [X19 + 0x188]
	0x034F4DD8 STRB W31, [X31 + 0x18]
	0x034F4DDC ADD X1, X31, 0x18
	0x034F4DE0 MOV X0, X20
	0x034F4DE4 MOV X2, X31
	0x034F4DE8 BL 0x33DE64C
	0x034F4DEC LDR X8, [X19 + 0x188]
	0x034F4DF0 CBZ X8, 0x34F4E54
	0x034F4DF4 ADRP X22, 0xC3F000
	0x034F4DF8 LDR X22, [X22 + 0x950]
	0x034F4DFC MOV X21, X31
	0x034F4E00 LDR W9, [X8 + 0x18]
	0x034F4E04 CMP W21, W9
	0x034F4E08 B.GE 0x34F4E58
	0x034F4E0C CMP W21, W9
	0x034F4E10 B.CS 0x34F5130
	0x034F4E14 ADD X9, X8, X21, 0x3, LSL
	0x034F4E18 LDR X9, [X9 + 0x20]
	0x034F4E1C CBZ X9, 0x34F5134
	0x034F4E20 LDRB W1, [X9 + 0x10]
	0x034F4E24 CMP W1, 0xFF
	0x034F4E28 B.EQ 0x34F4E4C
	0x034F4E2C LDR W9, [X9 + 0x6C]
	0x034F4E30 CMP W9, 0x1
	0x034F4E34 B.LT 0x34F4E4C
	0x034F4E38 LDR X0, [X19 + 0x1B0]
	0x034F4E3C CBZ X0, 0x34F513C
	0x034F4E40 LDR X2, [X22]
	0x034F4E44 BL 0x2D8D1B4
	0x034F4E48 LDR X8, [X19 + 0x188]
	0x034F4E4C ADD X21, X21, 0x1
	0x034F4E50 CBNZ X8, 0x34F4E00
	0x034F4E54 BL 0x1C16F20
	0x034F4E58 MOV X22, X31
	0x034F4E5C MOVZ W21, 0xD
	0x034F4E60 LDRB W8, [X31 + 0x18]
	0x034F4E64 CBZ W8, 0x34F4E74
	0x034F4E68 MOV X0, X20
	0x034F4E6C MOV X1, X31

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X22, 0xEEC000
	009 Move W8, [X22+2605]
	010 Move W20, W2
	011 Move X21, X1
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0xC08000
	018 Move X0, [X0+3840]
	019 Call 0x1C17CF4
	020 Move X0, 0xC08000
	021 Move X0, [X0+3680]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X22+2605], W8
	025 Move [X31+12], W31
	026 Move W8, [X19+388]
	027 Compare W8, 0
	028 JumpIfEqual {33}
	029 Move X0, X19
	030 Move X1, X21
	031 Move W2, W20
	032 Call EnetPeer.SendDataEncrypted, X0, X1, X2
	033 Move X23, 0xC08000
	034 Move X23, [X23+3840]
	035 Move [X31+12], W31
	036 NotImplemented "Instruction LDRH not yet implemented."
	037 Move X0, [X23]
	038 Move W8, [X0+224]
	039 Compare W8, 0
	040 JumpIfNotEqual {42}
	041 Call 0x1C17DFC
	042 Add X2, X31, 12
	043 Move W0, W22
	044 Move X1, X21
	045 Move X3, X31
	046 Call Protocol.Serialize, X0, X1, X2
	047 Move X0, [X19+16]
	048 Compare X0, 0
	049 JumpIfEqual {137}
	050 Move X1, X31
	051 Call PhotonPeer.get_CrcEnabled, X0
	052 And W31, W0, 1
	053 Move TEMP, 51
	054 Not TEMP
	055 Move W8, TEMP
	056 NotImplemented "Instruction CSEL not yet implemented."
	057 Compare X21, 0
	058 JumpIfEqual {138}
	059 Move W9, [X21+24]
	060 NotImplemented "Instruction CMP not yet implemented."
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Move [X21+34], W8
	063 Move W8, [X19+336]
	064 Move W9, 4
	065 Move [X21+35], W8
	066 Move [X31+12], W9
	067 Move X0, [X19+192]
	068 Compare X0, 0
	069 JumpIfEqual {141}
	070 Move X1, X31
	071 Call Stopwatch.get_ElapsedMilliseconds, X0
	072 Move X22, X0
	073 Move X0, [X23]
	074 Move W8, [X0+224]
	075 Compare W8, 0
	076 JumpIfNotEqual {78}
	077 Call 0x1C17DFC
	078 Add X2, X31, 12
	079 Move W0, W22
	080 Move X1, X21
	081 Move X3, X31
	082 Call Protocol.Serialize, X0, X1, X2
	083 Move W0, [X19+372]
	084 Add X2, X31, 12
	085 Move X1, X21
	086 Move X3, X31
	087 Call Protocol.Serialize, X0, X1, X2
	088 Move X0, [X19+16]
	089 Compare X0, 0
	090 JumpIfEqual {142}
	091 Move X1, X31
	092 Call PhotonPeer.get_CrcEnabled, X0
	093 Move TEMP, X0
	094 And TEMP, TEMP, 1
	095 Compare TEMP, 1
	096 JumpIfNotEqual {125}
	097 Move X0, [X23]
	098 Move W8, [X0+224]
	099 Compare W8, 0
	100 JumpIfNotEqual {102}
	101 Call 0x1C17DFC
	102 Add X2, X31, 12
	103 Move W0, W31
	104 Move X1, X21
	105 Move X3, X31
	106 Call Protocol.Serialize, X0, X1, X2
	107 Move X8, 0xC08000
	108 Move X8, [X8+3680]
	109 Move X0, [X8]
	110 Move W8, [X0+224]
	111 Compare W8, 0
	112 JumpIfNotEqual {114}
	113 Call 0x1C17DFC
	114 Move X0, X21
	115 Move W1, W20
	116 Move X2, X31
	117 Call SupportClass.CalculateCrc, X0, X1
	118 Move W8, [X31+12]
	119 Subtract W8, W8, 4
	120 Move [X31+12], W8
	121 Add X2, X31, 12
	122 Move X1, X21
	123 Move X3, X31
	124 Call Protocol.Serialize, X0, X1, X2
	125 Move X0, X19
	126 Move X1, X21
	127 Move W2, W20
	128 Call EnetPeer.SendToSocket, X0, X1, X2
	129 Move X20, [X31+48]
	130 Move X19, [X31+56]
	131 Move X22, [X31+32]
	132 Move X21, [X31+40]
	133 Move X30, [X31+16]
	134 Move X23, [X31+24]
	135 Add X31, X31, 64
	136 Return 
	137 Call 0x1C17F20
	138 Call 0x1C17F20
	139 Call 0x1C17F28
	140 Call 0x1C17F28
	141 Call 0x1C17F20
	142 Call 0x1C17F20
	143 Move X20, X0
	144 NotImplemented "Instruction CMP not yet implemented."
	145 Move X0, X20
	146 Call 0x3EB2AD0
	147 Move X20, X0
	148 Move X0, 0xC00000
	149 Move X0, [X0+2000]
	150 Call 0x1C17D08
	151 Move X8, [X20]
	152 Move X1, [X8]
	153 Call 0x1C18270
	154 Move TEMP, X0
	155 And TEMP, TEMP, 1
	156 Compare TEMP, 1
	157 JumpIfNotEqual {214}
	158 Move X20, [X20]
	159 Call 0x3EB2AE0
	160 Move X8, [X19+16]
	161 Compare X8, 0
	162 JumpIfEqual {213}
	163 Move W9, [X8+64]
	164 Compare W9, 0
	165 JumpIfEqual {203}
	166 Compare X20, 0
	167 JumpIfEqual {213}
	168 Move X9, [X20]
	169 Move X19, [X8+72]
	170 Move X0, X20
	171 Move X8, [X9+360]
	172 Move X1, [X9+368]
	173 NotImplemented "Instruction BLR not yet implemented."
	174 Compare X19, 0
	175 JumpIfEqual {213}
	176 Move X21, X0
	177 Move X0, 0xC08000
	178 Move X0, [X0+3016]
	179 Call 0x1C17D08
	180 Move X8, [X19]
	181 Move X1, X0
	182 NotImplemented "Instruction LDRH not yet implemented."
	183 Compare X9, 0
	184 JumpIfEqual {191}
	185 Move X10, [X8+176]
	186 Add X10, X10, 8
	187 NotImplemented "Instruction LDUR not yet implemented."
	188 NotImplemented "Instruction CMP not yet implemented."
	189 Subtract X9, X9, 1
	190 Add X10, X10, 16
	191 Move X0, X19
	192 Move W2, W31
	193 Call 0x1C5D788
	194 NotImplemented "Instruction LDRSW not yet implemented."
	195 Add X8, X8, X9
	196 Add X0, X8, 312
	197 Move X8, [X0]
	198 Move X3, [X0+8]
	199 Move W1, 1
	200 Move X0, X19
	201 Move X2, X21
	202 NotImplemented "Instruction BLR not yet implemented."
	203 Move X0, 0xC08000
	204 Move X0, [X0+3680]
	205 Call 0x1C17D08
	206 Move W8, [X0+224]
	207 Compare W8, 0
	208 JumpIfNotEqual {210}
	209 Call 0x1C17DFC
	210 Move X0, X20
	211 Move X1, X31
	212 Call SupportClass.WriteStackTrace, X0
	213 Call 0x1C17F20
	214 Move W0, 8
	215 Call 0x3EB2AF0
	216 Move X8, [X20]
	217 Move [X0], X8
	218 Move X1, 0x9C1000
	219 Add X1, X1, 3672
	220 Move X2, X31
	221 Call 0x3EB2B00
	222 Move X20, X0
	223 Call 0x3EB2AE0
	224 Move X0, X20
	225 Call 0x1D2D690
	226 Call 0x1991590

Method: System.Void SendToSocket(System.Byte[] data, System.Int32 length)

Disassembly:
	0x034F7180 MOV X23, X0
	0x034F7184 B 0x34F715C
	0x034F7188 B 0x34F7220
	0x034F718C B 0x34F7220
	0x034F7190 B 0x34F7220
	0x034F7194 B 0x34F7220
	0x034F7198 B 0x34F7220
	0x034F719C B 0x34F7220
	0x034F71A0 B 0x34F7220
	0x034F71A4 B 0x34F7220
	0x034F71A8 B 0x34F7220
	0x034F71AC B 0x34F7220
	0x034F71B0 B 0x34F7220
	0x034F71B4 B 0x34F7220
	0x034F71B8 B 0x34F7220
	0x034F71BC B 0x34F7220
	0x034F71C0 B 0x34F7220
	0x034F71C4 B 0x34F7220
	0x034F71C8 B 0x34F7220
	0x034F71CC B 0x34F7220
	0x034F71D0 B 0x34F7220
	0x034F71D4 B 0x34F7220
	0x034F71D8 B 0x34F7220
	0x034F71DC B 0x34F7220
	0x034F71E0 B 0x34F7220
	0x034F71E4 B 0x34F7220
	0x034F71E8 B 0x34F7220
	0x034F71EC B 0x34F7220
	0x034F71F0 B 0x34F7220
	0x034F71F4 B 0x34F7220
	0x034F71F8 B 0x34F7220
	0x034F71FC B 0x34F7220
	0x034F7200 B 0x34F7220
	0x034F7204 B 0x34F7220
	0x034F7208 B 0x34F7220
	0x034F720C B 0x34F7220
	0x034F7210 B 0x34F7220
	0x034F7214 B 0x34F7220
	0x034F7218 B 0x34F7220
	0x034F721C B 0x34F7220
	0x034F7220 MOV X25, X1
	0x034F7224 MOV X23, X0
	0x034F7228 CMP W25, 0x1
	0x034F722C B.NE 0x34F72EC
	0x034F7230 MOV X0, X23
	0x034F7234 BL 0x3EB1AD0
	0x034F7238 MOV X20, X0
	0x034F723C ADRP X0, 0xBFC000
	0x034F7240 LDR X0, [X0 + 0x7D0]
	0x034F7244 BL 0x1C16D08
	0x034F7248 LDR X8, [X20]
	0x034F724C LDR X1, [X8]
	0x034F7250 BL 0x1C17270
	0x034F7254 TBZ X0, 0x0, 0x34F72C4
	0x034F7258 LDR X20, [X20]
	0x034F725C BL 0x3EB1AE0
	0x034F7260 LDR X8, [X19 + 0x10]
	0x034F7264 CBZ X8, 0x34F72C0
	0x034F7268 LDRB W8, [X8 + 0x40]
	0x034F726C CBZ W8, 0x34F7298
	0x034F7270 ADRP X0, 0xC3C000
	0x034F7274 LDR X0, [X0 + 0xA20]
	0x034F7278 BL 0x1C16D08
	0x034F727C MOV X1, X20
	0x034F7280 MOV X2, X31
	0x034F7284 BL 0x321EFD0
	0x034F7288 MOV X2, X0
	0x034F728C MOVZ W1, 0x1
	0x034F7290 MOV X0, X19
	0x034F7294 BL 0x34F116C
	0x034F7298 ADRP X0, 0xC04000
	0x034F729C LDR X0, [X0 + 0xE60]
	0x034F72A0 BL 0x1C16D08
	0x034F72A4 LDR W8, [X0 + 0xE0]
	0x034F72A8 CBNZ W8, 0x34F72B0
	0x034F72AC BL 0x1C16DFC
	0x034F72B0 MOV X0, X20
	0x034F72B4 MOV X1, X31
	0x034F72B8 BL 0x3520158
	0x034F72BC B 0x34F6FD0
	0x034F72C0 BL 0x1C16F20
	0x034F72C4 MOVZ W0, 0x8
	0x034F72C8 BL 0x3EB1AF0
	0x034F72CC LDR X8, [X20]
	0x034F72D0 STR X8, [X0]
	0x034F72D4 ADRP X1, 0x9BD000
	0x034F72D8 ADD X1, X1, 0xE58
	0x034F72DC MOV X2, X31
	0x034F72E0 BL 0x3EB1B00
	0x034F72E4 MOV X23, X0
	0x034F72E8 BL 0x3EB1AE0
	0x034F72EC MOV X0, X23
	0x034F72F0 BL 0x1D2C690
	0x034F72F4 BL 0x1990590
	0x034F72F8 STR X30, [X31 - 0x10]!
	0x034F72FC LDR X8, [X0 + 0x10]
	0x034F7300 CBZ X8, 0x34F7310
	0x034F7304 LDR X0, [X8 + 0xA0]
	0x034F7308 LDR X30, [X31], #0x10
	0x034F730C RET
	0x034F7310 BL 0x1C16F20
	0x034F7314 STR X30, [X31 - 0x40]!
	0x034F7318 STP X24, X23, [X31 + 0x10]
	0x034F731C STP X22, X21, [X31 + 0x20]
	0x034F7320 STP X20, X19, [X31 + 0x30]
	0x034F7324 ADRP X19, 0xEE8000
	0x034F7328 LDRB W8, [X19 + 0xA49]
	0x034F732C MOV X21, X3
	0x034F7330 MOV X22, X2
	0x034F7334 MOV X23, X1
	0x034F7338 MOV X24, X0
	0x034F733C TBNZ X8, 0x0, 0x34F736C
	0x034F7340 ADRP X0, 0xC3C000
	0x034F7344 LDR X0, [X0 + 0x7E0]
	0x034F7348 BL 0x1C16CF4
	0x034F734C ADRP X0, 0xC3C000
	0x034F7350 LDR X0, [X0 + 0x7E8]
	0x034F7354 BL 0x1C16CF4
	0x034F7358 ADRP X0, 0xC3C000
	0x034F735C LDR X0, [X0 + 0x7F0]
	0x034F7360 BL 0x1C16CF4
	0x034F7364 MOVZ W8, 0x1
	0x034F7368 STRB W8, [X19 + 0xA49]
	0x034F736C LDR X19, [X24 + 0x10]
	0x034F7370 STRB W31, [X31 + 0xC]
	0x034F7374 ADD X1, X31, 0xC
	0x034F7378 MOV X0, X19
	0x034F737C MOV X2, X31
	0x034F7380 BL 0x33DE64C
	0x034F7384 LDR X8, [X24 + 0x10]
	0x034F7388 CBZ X8, 0x34F7444
	0x034F738C LDR W9, [X8 + 0x18]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X22, 0xEE9000
	010 Move W8, [X22+2606]
	011 Move W20, W2
	012 Move X21, X1
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0xBFD000
	019 Move X0, [X0+1560]
	020 Call 0x1C17CF4
	021 Move X0, 0xC3D000
	022 Move X0, [X0+2472]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X22+2606], W8
	026 Move X9, [X19+144]
	027 Move X8, [X19+16]
	028 Add X9, X9, W20
	029 Move [X19+144], X9
	030 Compare X8, 0
	031 JumpIfEqual {154}
	032 Move X22, [X8+96]
	033 Compare X22, 0
	034 JumpIfEqual {91}
	035 Move X25, 0xC3D000
	036 Move X8, [X22]
	037 Move X25, [X25+2472]
	038 NotImplemented "Instruction LDRH not yet implemented."
	039 Move X1, [X25]
	040 Compare X9, 0
	041 JumpIfEqual {48}
	042 Move X10, [X8+176]
	043 Add X10, X10, 8
	044 NotImplemented "Instruction LDUR not yet implemented."
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Subtract X9, X9, 1
	047 Add X10, X10, 16
	048 Move X0, X22
	049 Move W2, W31
	050 Call 0x1C5D788
	051 NotImplemented "Instruction LDRSW not yet implemented."
	052 Add X8, X8, X9
	053 Add X0, X8, 312
	054 Move X8, [X0]
	055 Move X1, [X0+8]
	056 Move X0, X22
	057 NotImplemented "Instruction BLR not yet implemented."
	058 Move TEMP, X0
	059 And TEMP, TEMP, 1
	060 Compare TEMP, 1
	061 JumpIfNotEqual {91}
	062 Move X8, [X22]
	063 NotImplemented "Instruction LDRH not yet implemented."
	064 Move X23, [X19+40]
	065 Move X1, [X25]
	066 NotImplemented "Instruction LDRH not yet implemented."
	067 Compare X9, 0
	068 JumpIfEqual {75}
	069 Move X10, [X8+176]
	070 Add X10, X10, 8
	071 NotImplemented "Instruction LDUR not yet implemented."
	072 NotImplemented "Instruction CMP not yet implemented."
	073 Subtract X9, X9, 1
	074 Add X10, X10, 16
	075 Move W2, 2
	076 Move X0, X22
	077 Call 0x1C5D788
	078 Move W9, [X10]
	079 Add W9, W9, 2
	080 Add X8, X8, W9
	081 Add X0, X8, 312
	082 Move X8, [X0]
	083 Move X6, [X0+8]
	084 Move X0, X22
	085 Move X1, X21
	086 Move W2, W20
	087 Move W3, W31
	088 Move W4, W24
	089 Move X5, X23
	090 NotImplemented "Instruction BLR not yet implemented."
	091 Move X8, [X19+272]
	092 Compare X8, 0
	093 JumpIfEqual {154}
	094 Move W8, [X8+16]
	095 Compare W8, 0
	096 JumpIfEqual {120}
	097 Move X8, 0xBFD000
	098 Move X8, [X8+1560]
	099 Move W1, W20
	100 Move X0, [X8]
	101 Call 0x1C17D6C
	102 Move X22, X0
	103 Move X0, X21
	104 Move W1, W31
	105 Move X2, X22
	106 Move W3, W31
	107 Move W4, W20
	108 Move X5, X31
	109 Call Buffer.BlockCopy, X0, X1, X2, X3, X4
	110 Move X0, X19
	111 Move X1, X22
	112 Move X20, [X31+48]
	113 Move X19, [X31+56]
	114 Move X22, [X31+32]
	115 Move X21, [X31+40]
	116 Move X24, [X31+16]
	117 Move X23, [X31+24]
	118 Move X30, [X31+64]
	119 Move X25, [X31+72]
	120 Move X0, [X19+192]
	121 Compare X0, 0
	122 JumpIfEqual {154}
	123 Move X1, X31
	124 Call Stopwatch.get_ElapsedMilliseconds, X0
	125 Move X8, [X19+40]
	126 Compare X8, 0
	127 JumpIfEqual {154}
	128 Move X9, [X8]
	129 Move X22, X0
	130 Move X0, X8
	131 Move X1, X21
	132 Move X10, [X9+408]
	133 Move X3, [X9+416]
	134 Move W2, W20
	135 NotImplemented "Instruction BLR not yet implemented."
	136 Move X0, [X19+192]
	137 Compare X0, 0
	138 JumpIfEqual {154}
	139 Move X1, X31
	140 Call Stopwatch.get_ElapsedMilliseconds, X0
	141 Move W9, [X19+208]
	142 Subtract W8, W0, W22
	143 NotImplemented "Instruction CMP not yet implemented."
	144 Move [X19+208], W8
	145 Move X20, [X31+48]
	146 Move X19, [X31+56]
	147 Move X22, [X31+32]
	148 Move X21, [X31+40]
	149 Move X24, [X31+16]
	150 Move X23, [X31+24]
	151 Move X30, [X31+64]
	152 Move X25, [X31+72]
	153 Return 
	154 Call 0x1C17F20

Method: System.Void SendDataEncrypted(System.Byte[] data, System.Int32 length)

Disassembly:
	0x034F6F48 LDR X2, [X27]
	0x034F6F4C MOV X1, X22
	0x034F6F50 BL 0x24F1750
	0x034F6F54 MOV X21, X31
	0x034F6F58 MOVZ W23, 0x1F
	0x034F6F5C LDRB W8, [X31 + 0x8]
	0x034F6F60 CBZ W8, 0x34F6F70
	0x034F6F64 MOV X0, X24
	0x034F6F68 MOV X1, X31
	0x034F6F6C BL 0x33E14E4
	0x034F6F70 CBNZ X21, 0x34F7080
	0x034F6F74 CMP W23, 0x1F
	0x034F6F78 B.EQ 0x34F6EA8
	0x034F6F7C CBZ W23, 0x34F6EA8
	0x034F6F80 B 0x34F6FD0
	0x034F6F84 BL 0x1C16F20
	0x034F6F88 B 0x34F7100
	0x034F6F8C B 0x34F6F90
	0x034F6F90 MOV X25, X1
	0x034F6F94 MOV X23, X0
	0x034F6F98 CMP W25, 0x1
	0x034F6F9C B.NE 0x34F70B4
	0x034F6FA0 MOV X0, X23
	0x034F6FA4 BL 0x3EB1AD0
	0x034F6FA8 LDR X21, [X0]
	0x034F6FAC BL 0x3EB1AE0
	0x034F6FB0 MOV W23, W31
	0x034F6FB4 B 0x34F6F5C
	0x034F6FB8 TBZ X28, 0x0, 0x34F6FD0
	0x034F6FBC ADD X0, X19, 0x130
	0x034F6FC0 MOVZ W1, 0x1
	0x034F6FC4 MOV W2, W31
	0x034F6FC8 MOV X3, X31
	0x034F6FCC BL 0x33E7AB4
	0x034F6FD0 LDP X20, X19, [X31 + 0x70]
	0x034F6FD4 LDP X22, X21, [X31 + 0x60]
	0x034F6FD8 LDP X24, X23, [X31 + 0x50]
	0x034F6FDC LDP X26, X25, [X31 + 0x40]
	0x034F6FE0 LDP X28, X27, [X31 + 0x30]
	0x034F6FE4 LDR X30, [X31 + 0x20]
	0x034F6FE8 ADD X31, X31, 0x80
	0x034F6FEC RET
	0x034F6FF0 LDR W9, [X19 + 0x58]
	0x034F6FF4 LDRB W10, [X19 + 0x40]
	0x034F6FF8 ADD W9, W9, 0x1
	0x034F6FFC STR W9, [X19 + 0x58]
	0x034F7000 CBZ W10, 0x34F6FD0
	0x034F7004 LDR X9, [X19 + 0x10]
	0x034F7008 CBZ X9, 0x34F70FC
	0x034F700C LDRB W9, [X9 + 0x40]
	0x034F7010 CMP W9, 0x3
	0x034F7014 B.CC 0x34F6FD0
	0x034F7018 ADRP X22, 0xC04000
	0x034F701C LDR X22, [X22 + 0x720]
	0x034F7020 STR W8, [X31 + 0x4]
	0x034F7024 LDR X0, [X22]
	0x034F7028 ADD X1, X31, 0x4
	0x034F702C BL 0x1C16E04
	0x034F7030 MOV X20, X0
	0x034F7034 LDR X0, [X22]
	0x034F7038 STR W21, [X31]
	0x034F703C ADD X1, X31, 0x0
	0x034F7040 BL 0x1C16E04
	0x034F7044 ADRP X8, 0xC3C000
	0x034F7048 LDR X8, [X8 + 0xA10]
	0x034F704C MOV X2, X0
	0x034F7050 LDR X0, [X8]
	0x034F7054 MOV X1, X20
	0x034F7058 MOV X3, X31
	0x034F705C BL 0x3227BD4
	0x034F7060 MOV X2, X0
	0x034F7064 MOVZ W1, 0x3
	0x034F7068 MOV X0, X19
	0x034F706C BL 0x34F116C
	0x034F7070 B 0x34F6FD0
	0x034F7074 BL 0x1C16F20
	0x034F7078 BL 0x1C16F20
	0x034F707C BL 0x1C16F20
	0x034F7080 MOV X0, X21
	0x034F7084 BL 0x1C16F18
	0x034F7088 BL 0x1C16F20
	0x034F708C BL 0x1C16F20
	0x034F7090 BL 0x1C16F20
	0x034F7094 BL 0x1C16F20
	0x034F7098 BL 0x1C16F20
	0x034F709C BL 0x1C16F20
	0x034F70A0 BL 0x1C16F28
	0x034F70A4 BL 0x1C16F20
	0x034F70A8 BL 0x1C16F20
	0x034F70AC BL 0x1C16F20
	0x034F70B0 BL 0x1C16F28
	0x034F70B4 MOV X21, X31
	0x034F70B8 LDRB W8, [X31 + 0x8]
	0x034F70BC CBZ W8, 0x34F70CC
	0x034F70C0 MOV X0, X24
	0x034F70C4 MOV X1, X31
	0x034F70C8 BL 0x33E14E4
	0x034F70CC CBZ X21, 0x34F7228
	0x034F70D0 MOV X0, X21
	0x034F70D4 BL 0x1C16F18
	0x034F70D8 BL 0x1C16F20
	0x034F70DC BL 0x1C16F20
	0x034F70E0 BL 0x1C16F20
	0x034F70E4 BL 0x1C16F28
	0x034F70E8 BL 0x1C16F20
	0x034F70EC BL 0x1C16F20
	0x034F70F0 BL 0x1C16F20
	0x034F70F4 MOV X0, X21
	0x034F70F8 BL 0x1C16F18
	0x034F70FC BL 0x1C16F20
	0x034F7100 MOV X25, X1
	0x034F7104 MOV X23, X0
	0x034F7108 B 0x34F70B8
	0x034F710C B 0x34F7220
	0x034F7110 B 0x34F7220
	0x034F7114 B 0x34F7220
	0x034F7118 B 0x34F7220
	0x034F711C B 0x34F7220
	0x034F7120 B 0x34F7220
	0x034F7124 B 0x34F7220
	0x034F7128 B 0x34F7220
	0x034F712C B 0x34F7220
	0x034F7130 B 0x34F7220
	0x034F7134 MOV X25, X1
	0x034F7138 CMP W25, 0x1
	0x034F713C MOV X23, X0
	0x034F7140 B.NE 0x34F7158
	0x034F7144 MOV X0, X23
	0x034F7148 BL 0x3EB1AD0
	0x034F714C LDR X21, [X0]
	0x034F7150 BL 0x3EB1AE0
	0x034F7154 B 0x34F6D40
	0x034F7158 MOV X21, X31
	0x034F715C LDRB W8, [X31 + 0x10]
	0x034F7160 CBZ W8, 0x34F7170
	0x034F7164 MOV X0, X24
	0x034F7168 MOV X1, X31
	0x034F716C BL 0x33E14E4
	0x034F7170 CBZ X21, 0x34F7228
	0x034F7174 MOV X0, X21
	0x034F7178 BL 0x1C16F18
	0x034F717C MOV X25, X1

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+32], X24
	004 Move [X31+40], X23
	005 Move [X31+48], X22
	006 Move [X31+56], X21
	007 Move [X31+64], X20
	008 Move [X31+72], X19
	009 Move X22, 0xEEA000
	010 Move W8, [X22+2607]
	011 Move W20, W2
	012 Move X21, X1
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {29}
	018 Move X0, 0xBFE000
	019 Move X0, [X0+1560]
	020 Call 0x1C17CF4
	021 Move X0, 0xC06000
	022 Move X0, [X0+3288]
	023 Call 0x1C17CF4
	024 Move X0, 0xC06000
	025 Move X0, [X0+3840]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X22+2607], W8
	029 Move [X31+24], W31
	030 Move [X31+12], W31
	031 Move X22, [X19+360]
	032 Compare X22, 0
	033 JumpIfEqual {42}
	034 Move X0, [X19+16]
	035 Compare X0, 0
	036 JumpIfEqual {156}
	037 Move X1, X31
	038 Call PhotonPeer.get_MaximumTransferUnit, X0
	039 Move W8, [X22+24]
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Move X22, [X19+360]
	042 Move X0, [X19+16]
	043 Compare X0, 0
	044 JumpIfEqual {156}
	045 Move X22, 0xBFE000
	046 Move X22, [X22+1560]
	047 Move X1, X31
	048 Call PhotonPeer.get_MaximumTransferUnit, X0
	049 Move X8, [X22]
	050 Move W1, W0
	051 Move X0, X8
	052 Call 0x1C17D6C
	053 Move X22, X0
	054 Move [X19+360], X0
	055 Move X8, 0xC05000
	056 Move X8, [X8+3840]
	057 Move [X31+28], W31
	058 NotImplemented "Instruction LDRH not yet implemented."
	059 Move X0, [X8]
	060 Move W8, [X0+224]
	061 Compare W8, 0
	062 JumpIfNotEqual {64}
	063 Call 0x1C17DFC
	064 Add X2, X31, 28
	065 Move W0, W23
	066 Move X1, X22
	067 Move X3, X31
	068 Call Protocol.Serialize, X0, X1, X2
	069 Compare X22, 0
	070 JumpIfEqual {156}
	071 Move W8, [X22+24]
	072 NotImplemented "Instruction CMP not yet implemented."
	073 Move W8, 1
	074 Move [X22+34], W8
	075 Move W8, [X31+28]
	076 Add X2, X31, 28
	077 Move X1, X22
	078 Move X3, X31
	079 Add W8, W8, 1
	080 Move [X31+28], W8
	081 Move W0, [X19+372]
	082 Call Protocol.Serialize, X0, X1, X2
	083 Compare X21, 0
	084 JumpIfEqual {156}
	085 Move W8, [X21+24]
	086 Compare W8, 0
	087 JumpIfEqual {157}
	088 Move W8, [X19+336]
	089 Move W9, 1
	090 Move [X21+32], W8
	091 Move [X31+24], W9
	092 Move X0, [X19+192]
	093 Compare X0, 0
	094 JumpIfEqual {156}
	095 Move X1, X31
	096 Call Stopwatch.get_ElapsedMilliseconds, X0
	097 Add X2, X31, 24
	098 Move X1, X21
	099 Move X3, X31
	100 Call Protocol.Serialize, X0, X1, X2
	101 Move W23, [X31+28]
	102 Move W8, [X22+24]
	103 Subtract W8, W8, W23
	104 Move [X31+12], W8
	105 Move X8, [X19+16]
	106 Compare X8, 0
	107 JumpIfEqual {156}
	108 Move X24, [X8+256]
	109 Compare X24, 0
	110 JumpIfEqual {156}
	111 Move X10, 0xC05000
	112 Move X8, [X24]
	113 Move X10, [X10+3288]
	114 NotImplemented "Instruction LDRH not yet implemented."
	115 Move X1, [X10]
	116 Compare X9, 0
	117 JumpIfEqual {124}
	118 Move X10, [X8+176]
	119 Add X10, X10, 8
	120 NotImplemented "Instruction LDUR not yet implemented."
	121 NotImplemented "Instruction CMP not yet implemented."
	122 Subtract X9, X9, 1
	123 Add X10, X10, 16
	124 Move W2, 1
	125 Move X0, X24
	126 Call 0x1C5D788
	127 Move W9, [X10]
	128 Add W9, W9, 1
	129 Add X8, X8, W9
	130 Add X0, X8, 312
	131 Move X8, [X0]
	132 Move X7, [X0+8]
	133 Add X6, X31, 12
	134 Move X0, X24
	135 Move X1, X21
	136 Move W2, W20
	137 Move X3, X22
	138 Move X4, X22
	139 Move W5, W23
	140 NotImplemented "Instruction BLR not yet implemented."
	141 Move W8, [X31+12]
	142 Move W9, [X31+28]
	143 Move X0, X19
	144 Move X1, X22
	145 Add W2, W9, W8
	146 Call EnetPeer.SendToSocket, X0, X1, X2
	147 Move X20, [X31+64]
	148 Move X19, [X31+72]
	149 Move X22, [X31+48]
	150 Move X21, [X31+56]
	151 Move X24, [X31+32]
	152 Move X23, [X31+40]
	153 Move X30, [X31+16]
	154 Add X31, X31, 80
	155 Return 
	156 Call 0x1C17F20
	157 Call 0x1C17F28

Method: System.Void QueueSentCommand(ExitGames.Client.Photon.NCommand command, System.Boolean commandIsAlreadyInSentQueue = False)

Disassembly:
	0x034F6CB4 LDR X0, [X8]
	0x034F6CB8 LDR X2, [X9]
	0x034F6CBC MOV X1, X20
	0x034F6CC0 MOV X4, X31
	0x034F6CC4 BL 0x32277C4
	0x034F6CC8 MOV X2, X0
	0x034F6CCC MOVZ W1, 0x5
	0x034F6CD0 MOV X0, X19
	0x034F6CD4 BL 0x34F116C
	0x034F6CD8 B 0x34F6FD0
	0x034F6CDC LDR W9, [X10]
	0x034F6CE0 ADD W9, W9, 0x2
	0x034F6CE4 ADD X8, X8, W9, 0x4, SXTW
	0x034F6CE8 ADD X0, X8, 0x138
	0x034F6CEC LDP X8, X6, [X0]
	0x034F6CF0 SUB W3, W22, W23
	0x034F6CF4 ADD X5, X31, 0x14
	0x034F6CF8 MOV X0, X21
	0x034F6CFC MOV X1, X20
	0x034F6D00 MOV W2, W23
	0x034F6D04 MOV X4, X20
	0x034F6D08 BLR X8
	0x034F6D0C LDRB W8, [X19 + 0x184]
	0x034F6D10 MOV X20, X0
	0x034F6D14 CBNZ W8, 0x34F6D58
	0x034F6D18 LDR X24, [X19 + 0x158]
	0x034F6D1C STRB W31, [X31 + 0x10]
	0x034F6D20 ADD X1, X31, 0x10
	0x034F6D24 MOV X0, X24
	0x034F6D28 MOV X2, X31
	0x034F6D2C BL 0x33DE64C
	0x034F6D30 MOVZ W8, 0x1
	0x034F6D34 MOV X21, X31
	0x034F6D38 STRB W8, [X19 + 0x184]
	0x034F6D3C STR W31, [X19 + 0x198]
	0x034F6D40 LDRB W8, [X31 + 0x10]
	0x034F6D44 CBZ W8, 0x34F6D54
	0x034F6D48 MOV X0, X24
	0x034F6D4C MOV X1, X31
	0x034F6D50 BL 0x33E14E4
	0x034F6D54 CBNZ X21, 0x34F70F4
	0x034F6D58 MOVZ W8, 0x1
	0x034F6D5C STR W8, [X31 + 0x2C]
	0x034F6D60 CBZ X20, 0x34F70E0
	0x034F6D64 LDR W8, [X20 + 0x18]
	0x034F6D68 CBZ W8, 0x34F70E4
	0x034F6D6C LDRB W8, [X20 + 0x20]
	0x034F6D70 LDR X0, [X26]
	0x034F6D74 STRB W8, [X31 + 0x1C]
	0x034F6D78 LDR W8, [X0 + 0xE0]
	0x034F6D7C CBNZ W8, 0x34F6D84
	0x034F6D80 BL 0x1C16DFC
	0x034F6D84 ADD X0, X19, 0x180
	0x034F6D88 ADD X2, X31, 0x2C
	0x034F6D8C MOV X1, X20
	0x034F6D90 MOV X3, X31
	0x034F6D94 BL 0x3506A78
	0x034F6D98 LDR X8, [X19 + 0x98]
	0x034F6D9C ADD X8, X8, W22, SXTW
	0x034F6DA0 LDR X0, [X19 + 0x10]
	0x034F6DA4 STR X8, [X19 + 0x98]
	0x034F6DA8 CBZ X0, 0x34F70AC
	0x034F6DAC MOV X1, X31
	0x034F6DB0 BL 0x350257C
	0x034F6DB4 TBZ X0, 0x0, 0x34F6DE4
	0x034F6DB8 LDR X8, [X19 + 0x10]
	0x034F6DBC CBZ X8, 0x34F70E8
	0x034F6DC0 LDR X9, [X8 + 0xA0]
	0x034F6DC4 CBZ X9, 0x34F70EC
	0x034F6DC8 LDP W8, W10, [X9 + 0x24]
	0x034F6DCC ADD W11, W8, 0x1
	0x034F6DD0 LDRB W8, [X31 + 0x1C]
	0x034F6DD4 ADD W10, W10, W8
	0x034F6DD8 STP W11, W10, [X9 + 0x24]
	0x034F6DDC CBNZ W8, 0x34F6DEC
	0x034F6DE0 B 0x34F6DF8
	0x034F6DE4 LDRB W8, [X31 + 0x1C]
	0x034F6DE8 CBZ W8, 0x34F6DF8
	0x034F6DEC LDR W9, [X19 + 0x170]
	0x034F6DF0 CMP W9, W8
	0x034F6DF4 B.GE 0x34F6E54
	0x034F6DF8 ADD X0, X31, 0x1C
	0x034F6DFC MOV X1, X31
	0x034F6E00 BL 0x3319BB4
	0x034F6E04 MOV X21, X0
	0x034F6E08 ADD X0, X19, 0x170
	0x034F6E0C MOV X1, X31
	0x034F6E10 BL 0x337B6E0
	0x034F6E14 ADRP X8, 0xC3D000
	0x034F6E18 LDR X8, [X8 + 0x9F8]
	0x034F6E1C ADRP X9, 0xBFF000
	0x034F6E20 LDR X9, [X9 + 0x258]
	0x034F6E24 MOV X3, X0
	0x034F6E28 LDR X0, [X8]
	0x034F6E2C LDR X2, [X9]
	0x034F6E30 MOV X1, X21
	0x034F6E34 MOV X4, X31
	0x034F6E38 BL 0x32277C4
	0x034F6E3C MOV X2, X0
	0x034F6E40 MOVZ W1, 0x1
	0x034F6E44 MOV X0, X19
	0x034F6E48 BL 0x34F116C
	0x034F6E4C LDRB W8, [X31 + 0x1C]
	0x034F6E50 CBZ W8, 0x34F6FD0
	0x034F6E54 ADRP X27, 0xC3D000
	0x034F6E58 LDR X27, [X27 + 0x720]
	0x034F6E5C MOV W28, W31
	0x034F6E60 MOV W26, W31
	0x034F6E64 LDR X0, [X19 + 0x120]
	0x034F6E68 CBZ X0, 0x34F7074
	0x034F6E6C ADD X3, X31, 0x2C
	0x034F6E70 MOV X1, X19
	0x034F6E74 MOV X2, X20
	0x034F6E78 BL 0x34F7314
	0x034F6E7C MOV X22, X0
	0x034F6E80 CBZ X0, 0x34F7078
	0x034F6E84 LDRB W8, [X22 + 0x11]
	0x034F6E88 CMP W8, 0x1
	0x034F6E8C B.EQ 0x34F6E98
	0x034F6E90 CMP W8, 0x10
	0x034F6E94 B.NE 0x34F6F28
	0x034F6E98 MOV X0, X19
	0x034F6E9C MOV X1, X22
	0x034F6EA0 BL 0x34F1F80
	0x034F6EA4 MOVZ W28, 0x1
	0x034F6EA8 LDRB W8, [X22 + 0x10]
	0x034F6EAC TBZ X8, 0x0, 0x34F6F14
	0x034F6EB0 LDR W2, [X19 + 0x180]
	0x034F6EB4 MOV X0, X19
	0x034F6EB8 MOV X1, X22
	0x034F6EBC BL 0x34F66E4
	0x034F6EC0 LDR X0, [X19 + 0x10]
	0x034F6EC4 CBZ X0, 0x34F707C
	0x034F6EC8 MOV X1, X31
	0x034F6ECC BL 0x350257C
	0x034F6ED0 TBZ X0, 0x0, 0x34F6F14
	0x034F6ED4 LDR X8, [X19 + 0x10]
	0x034F6ED8 CBZ X8, 0x34F7088
	0x034F6EDC LDR X0, [X19 + 0xC0]
	0x034F6EE0 CBZ X0, 0x34F7098
	0x034F6EE4 LDR X21, [X8 + 0xA0]
	0x034F6EE8 MOV X1, X31
	0x034F6EEC BL 0x364C19C
	0x034F6EF0 CBZ X21, 0x34F7094
	0x034F6EF4 STR W0, [X21 + 0x40]
	0x034F6EF8 LDR X8, [X19 + 0x10]
	0x034F6EFC CBZ X8, 0x34F7090
	0x034F6F00 LDR X0, [X8 + 0xA8]
	0x034F6F04 CBZ X0, 0x34F708C
	0x034F6F08 MOVZ W1, 0x14
	0x034F6F0C MOV X2, X31
	0x034F6F10 BL 0x3522CDC
	0x034F6F14 LDRB W8, [X31 + 0x1C]
	0x034F6F18 ADD W26, W26, 0x1
	0x034F6F1C CMP W26, W8
	0x034F6F20 B.CC 0x34F6E64
	0x034F6F24 B 0x34F6FB8
	0x034F6F28 LDR X24, [X19 + 0x1A8]
	0x034F6F2C STRB W31, [X31 + 0x8]
	0x034F6F30 ADD X1, X31, 0x8
	0x034F6F34 MOV X0, X24
	0x034F6F38 MOV X2, X31
	0x034F6F3C BL 0x33DE64C
	0x034F6F40 LDR X0, [X19 + 0x1A8]
	0x034F6F44 CBZ X0, 0x34F6F84

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X22, 0xEEA000
	009 Move W8, [X22+2608]
	010 Move W21, W2
	011 Move X19, X1
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {28}
	017 Move X0, 0xC3E000
	018 Move X0, [X0+2464]
	019 Call 0x1C17CF4
	020 Move X0, 0xC3E000
	021 Move X0, [X0+1848]
	022 Call 0x1C17CF4
	023 Move X0, 0xBFE000
	024 Move X0, [X0+1448]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X22+2608], W8
	028 Move [X31+12], W31
	029 Move X0, [X20+192]
	030 Compare X0, 0
	031 JumpIfEqual {161}
	032 Move X1, X31
	033 Call Stopwatch.get_ElapsedMilliseconds, X0
	034 Compare X19, 0
	035 JumpIfEqual {161}
	036 Move W8, [X19+68]
	037 Move [X19+60], W0
	038 Compare W8, 0
	039 JumpIfEqual {57}
	040 Move X0, [X20+16]
	041 Compare X0, 0
	042 JumpIfEqual {161}
	043 Move W22, [X19+64]
	044 Move X1, X31
	045 Call PhotonPeer.get_QuickResendAttempts, X0
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Move X8, [X20+296]
	048 Compare X8, 0
	049 JumpIfEqual {161}
	050 Move W8, [X8+24]
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Move W8, [X19+68]
	053 Move W8, W8
	054 ShiftRight W8, 31
	055 And W8, W8, 0x3FFFFFFF
	056 Move [X19+68], W8
	057 Move X8, [X20+16]
	058 Compare X8, 0
	059 JumpIfEqual {161}
	060 Move X9, 0xBFE000
	061 Move X9, [X9+1448]
	062 Move W23, [X20+116]
	063 Move W24, [X20+120]
	064 Move W22, [X8+116]
	065 Move X0, [X9]
	066 Move W9, [X0+224]
	067 Compare W9, 0
	068 JumpIfNotEqual {70}
	069 Call 0x1C17DFC
	070 Add W0, W23, W24
	071 Move W1, W22
	072 Move X2, X31
	073 Call Math.Min, X0, X1
	074 Move [X19+68], W0
	075 Move X0, [X20+192]
	076 Compare X0, 0
	077 JumpIfEqual {161}
	078 Move X1, X31
	079 Call Stopwatch.get_ElapsedMilliseconds, X0
	080 Move X8, [X20+16]
	081 Compare X8, 0
	082 JumpIfEqual {161}
	083 Move X22, X0
	084 Move X0, X8
	085 Move X1, X31
	086 Call PhotonPeer.get_DisconnectTimeout, X0
	087 Add W8, W0, W22
	088 Move [X19+72], W8
	089 Move W8, [X20+380]
	090 Add W8, W8, 1
	091 Move [X20+380], W8
	092 Move W8, [X19+64]
	093 Move W9, [X19+60]
	094 Add W8, W8, 1
	095 Move [X19+64], W8
	096 Move W8, [X19+68]
	097 Move W10, [X20+200]
	098 Add W8, W8, W9
	099 NotImplemented "Instruction CMP not yet implemented."
	100 Move [X20+200], W8
	101 Move TEMP, X21
	102 And TEMP, TEMP, 1
	103 Compare TEMP, 1
	104 JumpIfEqual {153}
	105 Move W1, [X19+18]
	106 Move X0, X20
	107 Call EnetPeer.GetChannel, X0, X1
	108 Compare X0, 0
	109 JumpIfEqual {161}
	110 Move W8, [X0+108]
	111 Add W8, W8, 1
	112 Move [X0+108], W8
	113 Move X21, [X20+296]
	114 Move [X31+12], W31
	115 Add X1, X31, 12
	116 Move X0, X21
	117 Move X2, X31
	118 Call Monitor.Enter, X0, X1
	119 Move X0, [X20+296]
	120 Compare X0, 0
	121 JumpIfEqual {164}
	122 Move X9, 0xC3E000
	123 Move X9, [X9+2464]
	124 Move W10, [X0+28]
	125 Move X8, [X0+16]
	126 Move X9, [X9]
	127 Add W10, W10, 1
	128 Move [X0+28], W10
	129 Compare X8, 0
	130 JumpIfEqual {165}
	131 NotImplemented "Instruction LDRSW not yet implemented."
	132 Move W11, [X8+24]
	133 NotImplemented "Instruction CMP not yet implemented."
	134 Add W9, W10, 1
	135 Add X8, X8, X10
	136 Move X20, X31
	137 Move [X0+24], W9
	138 Move [X8+32], X19
	139 Move X8, [X9+32]
	140 Move X8, [X8+192]
	141 Move X2, [X8+112]
	142 Move X1, X19
	143 Call List`1<Object>.AddWithResize, X0, X1
	144 Move X20, X31
	145 Move W8, [X31+12]
	146 Compare W8, 0
	147 JumpIfEqual {151}
	148 Move X0, X21
	149 Move X1, X31
	150 Call Monitor.Exit, X0
	151 Compare X20, 0
	152 JumpIfNotEqual {162}
	153 Move X20, [X31+48]
	154 Move X19, [X31+56]
	155 Move X22, [X31+32]
	156 Move X21, [X31+40]
	157 Move X24, [X31+16]
	158 Move X23, [X31+24]
	159 Move X30, [X31+64]
	160 Return 
	161 Call 0x1C17F20
	162 Move X0, X20
	163 Call 0x1C17F18
	164 Call 0x1C17F20
	165 Call 0x1C17F20
	166 Move X19, X0
	167 NotImplemented "Instruction CMP not yet implemented."
	168 Move X0, X19
	169 Call 0x3EB2AD0
	170 Move X20, [X0]
	171 Call 0x3EB2AE0
	172 Move X20, X31
	173 Move X19, X0
	174 Move W8, [X31+12]
	175 Compare W8, 0
	176 JumpIfEqual {180}
	177 Move X0, X21
	178 Move X1, X31
	179 Call Monitor.Exit, X0
	180 Compare X20, 0
	181 JumpIfNotEqual {184}
	182 Move X0, X19
	183 Call 0x1D2D690
	184 Move X0, X20
	185 Call 0x1C17F18
	186 Call 0x1991590

Method: System.Void QueueOutgoingReliableCommand(ExitGames.Client.Photon.NCommand command)

Disassembly:
	0x034F11EC STR X20, [X21 + 0x10]
	0x034F11F0 STRB W22, [X21 + 0x18]
	0x034F11F4 STR X19, [X21 + 0x20]
	0x034F11F8 LDR X19, [X20 + 0x60]
	0x034F11FC STRB W31, [X31 + 0xC]
	0x034F1200 ADD X1, X31, 0xC
	0x034F1204 MOV X0, X19
	0x034F1208 MOV X2, X31
	0x034F120C BL 0x33DE64C
	0x034F1210 ADRP X8, 0xC42000
	0x034F1214 LDR X8, [X8 + 0x830]
	0x034F1218 LDR X20, [X20 + 0x60]
	0x034F121C LDR X0, [X8]
	0x034F1220 BL 0x1C16F10
	0x034F1224 ADRP X8, 0xC42000
	0x034F1228 LDR X8, [X8 + 0x860]
	0x034F122C MOV X22, X0
	0x034F1230 LDR X2, [X8]
	0x034F1234 MOV X1, X21
	0x034F1238 MOV X3, X31
	0x034F123C BL 0x34FF704
	0x034F1240 CBZ X20, 0x34F1298
	0x034F1244 ADRP X8, 0xC42000
	0x034F1248 LDR X8, [X8 + 0x838]
	0x034F124C LDR X2, [X8]
	0x034F1250 MOV X0, X20
	0x034F1254 MOV X1, X22
	0x034F1258 BL 0x24F1750
	0x034F125C MOV X20, X31
	0x034F1260 LDRB W8, [X31 + 0xC]
	0x034F1264 CBZ W8, 0x34F1274
	0x034F1268 MOV X0, X19
	0x034F126C MOV X1, X31
	0x034F1270 BL 0x33E14E4
	0x034F1274 CBNZ X20, 0x34F1290
	0x034F1278 LDP X20, X19, [X31 + 0x30]
	0x034F127C LDP X22, X21, [X31 + 0x20]
	0x034F1280 LDP X30, X23, [X31 + 0x10]
	0x034F1284 ADD X31, X31, 0x40
	0x034F1288 RET
	0x034F128C BL 0x1C16F20
	0x034F1290 MOV X0, X20
	0x034F1294 BL 0x1C16F18
	0x034F1298 BL 0x1C16F20
	0x034F129C B 0x34F12A0
	0x034F12A0 MOV X21, X0
	0x034F12A4 CMP W1, 0x1
	0x034F12A8 B.NE 0x34F12C0
	0x034F12AC MOV X0, X21
	0x034F12B0 BL 0x3EB1AD0
	0x034F12B4 LDR X20, [X0]
	0x034F12B8 BL 0x3EB1AE0
	0x034F12BC B 0x34F1260
	0x034F12C0 MOV X20, X31
	0x034F12C4 B 0x34F12CC
	0x034F12C8 MOV X21, X0
	0x034F12CC LDRB W8, [X31 + 0xC]
	0x034F12D0 CBZ W8, 0x34F12E0
	0x034F12D4 MOV X0, X19
	0x034F12D8 MOV X1, X31
	0x034F12DC BL 0x33E14E4
	0x034F12E0 CBNZ X20, 0x34F12EC
	0x034F12E4 MOV X0, X21
	0x034F12E8 BL 0x1D2C690
	0x034F12EC MOV X0, X20
	0x034F12F0 BL 0x1C16F18
	0x034F12F4 BL 0x1990590
	0x034F12F8 STP X29, X30, [X31 - 0x60]!
	0x034F12FC STP X28, X27, [X31 + 0x10]
	0x034F1300 STP X26, X25, [X31 + 0x20]
	0x034F1304 STP X24, X23, [X31 + 0x30]
	0x034F1308 STP X22, X21, [X31 + 0x40]
	0x034F130C STP X20, X19, [X31 + 0x50]
	0x034F1310 ADRP X22, 0xEEE000
	0x034F1314 LDRB W8, [X22 + 0xA2A]
	0x034F1318 MOV W21, W3
	0x034F131C MOV X20, X2
	0x034F1320 MOV W23, W1
	0x034F1324 MOV X19, X0
	0x034F1328 TBNZ X8, 0x0, 0x34F134C
	0x034F132C ADRP X0, 0xC42000
	0x034F1330 LDR X0, [X0 + 0x778]
	0x034F1334 BL 0x1C16CF4
	0x034F1338 ADRP X0, 0xC42000
	0x034F133C LDR X0, [X0 + 0x868]
	0x034F1340 BL 0x1C16CF4
	0x034F1344 MOVZ W8, 0x1
	0x034F1348 STRB W8, [X22 + 0xA2A]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xEEF000
	007 Move W8, [X21+2609]
	008 Move X20, X1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xC43000
	015 Move X0, [X0+1824]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+2609], W8
	019 Compare X20, 0
	020 JumpIfEqual {74}
	021 Move W1, [X20+18]
	022 Move X0, X19
	023 Call EnetPeer.GetChannel, X0, X1
	024 Move X19, X0
	025 Move [X31+12], W31
	026 Add X1, X31, 12
	027 Move X2, X31
	028 Call Monitor.Enter, X0, X1
	029 Move W8, [X20+20]
	030 Compare W8, 0
	031 JumpIfEqual {35}
	032 Compare X19, 0
	033 JumpIfNotEqual {51}
	034 Call 0x1C17F20
	035 Move W8, [X20+16]
	036 Move TEMP, X8
	037 And TEMP, TEMP, 2
	038 Compare TEMP, 2
	039 JumpIfEqual {45}
	040 Compare X19, 0
	041 JumpIfEqual {78}
	042 Move W8, [X19+80]
	043 Add W8, W8, 1
	044 Move [X19+80], W8
	045 Compare X19, 0
	046 JumpIfEqual {79}
	047 Move W8, [X19+88]
	048 Add W8, W8, 1
	049 Move [X19+88], W8
	050 Move [X20+20], W8
	051 Move X0, [X19+56]
	052 Compare X0, 0
	053 JumpIfEqual {77}
	054 Move X8, 0xC43000
	055 Move X8, [X8+1824]
	056 Move X2, [X8]
	057 Move X1, X20
	058 Call Queue`1<Object>.Enqueue, X0, X1
	059 Move X20, X31
	060 Move W8, [X31+12]
	061 Compare W8, 0
	062 JumpIfEqual {66}
	063 Move X0, X19
	064 Move X1, X31
	065 Call Monitor.Exit, X0
	066 Compare X20, 0
	067 JumpIfNotEqual {75}
	068 Move X20, [X31+32]
	069 Move X19, [X31+40]
	070 Move X30, [X31+16]
	071 Move X21, [X31+24]
	072 Add X31, X31, 48
	073 Return 
	074 Call 0x1C17F20
	075 Move X0, X20
	076 Call 0x1C17F18
	077 Call 0x1C17F20
	078 Call 0x1C17F20
	079 Call 0x1C17F20
	080 Move X21, X0
	081 NotImplemented "Instruction CMP not yet implemented."
	082 Move X0, X21
	083 Call 0x3EB2AD0
	084 Move X20, [X0]
	085 Call 0x3EB2AE0
	086 Move X20, X31
	087 Move X21, X0
	088 Move W8, [X31+12]
	089 Compare W8, 0
	090 JumpIfEqual {94}
	091 Move X0, X19
	092 Move X1, X31
	093 Call Monitor.Exit, X0
	094 Compare X20, 0
	095 JumpIfNotEqual {98}
	096 Move X0, X21
	097 Call 0x1D2D690
	098 Move X0, X20
	099 Call 0x1C17F18
	100 Call 0x1991590

Method: System.Void QueueOutgoingUnreliableCommand(ExitGames.Client.Photon.NCommand command)

Disassembly:
	0x034F65B4 MOV X2, X21
	0x034F65B8 BL 0x2EECEA8
	0x034F65BC MOV X21, X31
	0x034F65C0 LDRB W8, [X31 + 0xC]
	0x034F65C4 CBZ W8, 0x34F65D4
	0x034F65C8 MOV X0, X19
	0x034F65CC MOV X1, X31
	0x034F65D0 BL 0x33E14E4
	0x034F65D4 CBNZ X21, 0x34F663C
	0x034F65D8 LDP X20, X19, [X31 + 0x30]
	0x034F65DC LDP X22, X21, [X31 + 0x20]
	0x034F65E0 LDP X24, X23, [X31 + 0x10]
	0x034F65E4 LDR X30, [X31], #0x40
	0x034F65E8 RET
	0x034F65EC BL 0x1C16F20
	0x034F65F0 BL 0x1C16F20
	0x034F65F4 ADRP X0, 0xC06000
	0x034F65F8 LDR X0, [X0 + 0x758]
	0x034F65FC BL 0x1C16D08
	0x034F6600 BL 0x1C16F10
	0x034F6604 MOV X19, X0
	0x034F6608 ADRP X0, 0xC3D000
	0x034F660C LDR X0, [X0 + 0x9E8]
	0x034F6610 BL 0x1C16D08
	0x034F6614 MOV X1, X0
	0x034F6618 MOV X0, X19
	0x034F661C MOV X2, X31
	0x034F6620 BL 0x33802E4
	0x034F6624 ADRP X0, 0xC3D000
	0x034F6628 LDR X0, [X0 + 0x9F0]
	0x034F662C BL 0x1C16D08
	0x034F6630 MOV X1, X0
	0x034F6634 MOV X0, X19
	0x034F6638 BL 0x1C16DEC
	0x034F663C MOV X0, X21
	0x034F6640 BL 0x1C16F18
	0x034F6644 BL 0x1C16F20
	0x034F6648 BL 0x1C16F20
	0x034F664C BL 0x1C16F20
	0x034F6650 B 0x34F6670
	0x034F6654 B 0x34F6670
	0x034F6658 B 0x34F6670
	0x034F665C B 0x34F6670
	0x034F6660 B 0x34F6670
	0x034F6664 B 0x34F6670
	0x034F6668 B 0x34F6670
	0x034F666C B 0x34F6670
	0x034F6670 MOV X20, X0
	0x034F6674 CMP W1, 0x1
	0x034F6678 B.NE 0x34F6690
	0x034F667C MOV X0, X20
	0x034F6680 BL 0x3EB1AD0
	0x034F6684 LDR X21, [X0]
	0x034F6688 BL 0x3EB1AE0
	0x034F668C B 0x34F65C0
	0x034F6690 MOV X21, X31
	0x034F6694 B 0x34F669C
	0x034F6698 MOV X20, X0
	0x034F669C LDRB W8, [X31 + 0xC]
	0x034F66A0 CBZ W8, 0x34F66B0
	0x034F66A4 MOV X0, X19
	0x034F66A8 MOV X1, X31
	0x034F66AC BL 0x33E14E4
	0x034F66B0 CBNZ X21, 0x34F66BC
	0x034F66B4 MOV X0, X20
	0x034F66B8 BL 0x1D2C690
	0x034F66BC MOV X0, X21
	0x034F66C0 BL 0x1C16F18
	0x034F66C4 BL 0x1990590
	0x034F66C8 STR X30, [X31 - 0x10]!
	0x034F66CC LDR X0, [X0 + 0x10]
	0x034F66D0 CBZ X0, 0x34F66E0
	0x034F66D4 MOV X1, X31
	0x034F66D8 LDR X30, [X31], #0x10
	0x034F66DC B 0x350202C
	0x034F66E0 BL 0x1C16F20
	0x034F66E4 STR X30, [X31 - 0x30]!
	0x034F66E8 STP X22, X21, [X31 + 0x10]
	0x034F66EC STP X20, X19, [X31 + 0x20]
	0x034F66F0 STR W31, [X31 + 0x8]
	0x034F66F4 LDR X19, [X0 + 0x138]
	0x034F66F8 MOV W20, W2
	0x034F66FC MOV X21, X1
	0x034F6700 MOV X22, X0
	0x034F6704 STRB W31, [X31 + 0xC]
	0x034F6708 ADD X1, X31, 0xC
	0x034F670C MOV X0, X19
	0x034F6710 MOV X2, X31
	0x034F6714 BL 0x33DE64C
	0x034F6718 LDR X0, [X22 + 0x138]
	0x034F671C CBZ X0, 0x34F6774
	0x034F6720 ADD X2, X31, 0x8
	0x034F6724 MOVZ W1, 0x14
	0x034F6728 MOV X3, X31
	0x034F672C BL 0x351ECA4
	0x034F6730 LDR W1, [X31 + 0x8]
	0x034F6734 MOV X2, X21
	0x034F6738 MOV W3, W20
	0x034F673C BL 0x34F67DC
	0x034F6740 MOV X21, X31
	0x034F6744 LDRB W8, [X31 + 0xC]
	0x034F6748 CBZ W8, 0x34F6758
	0x034F674C MOV X0, X19
	0x034F6750 MOV X1, X31

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, 0xEEA000
	007 Move W8, [X19+2610]
	008 Move X20, X1
	009 Move X21, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xC3E000
	015 Move X0, [X0+1824]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X19+2610], W8
	019 Compare X20, 0
	020 JumpIfEqual {86}
	021 Move W1, [X20+18]
	022 Move X0, X21
	023 Call EnetPeer.GetChannel, X0, X1
	024 Move X19, X0
	025 Move [X31+12], W31
	026 Add X1, X31, 12
	027 Move X2, X31
	028 Call Monitor.Enter, X0, X1
	029 Move W8, [X20+16]
	030 Move TEMP, X8
	031 And TEMP, TEMP, 2
	032 Compare TEMP, 2
	033 JumpIfEqual {42}
	034 Compare X19, 0
	035 JumpIfEqual {92}
	036 Move W8, [X19+80]
	037 Move [X20+20], W8
	038 Move W8, [X19+84]
	039 Add W8, W8, 1
	040 Move [X19+84], W8
	041 Move [X20+24], W8
	042 Move [X20+20], W31
	043 Move W8, [X21+328]
	044 Add W8, W8, 1
	045 Move [X21+328], W8
	046 Move [X20+28], W8
	047 Move X8, [X21+16]
	048 Compare X8, 0
	049 JumpIfEqual {89}
	050 Move W9, [X8+91]
	051 Move X8, 0xC3E000
	052 Move X8, [X8+1824]
	053 Compare W9, 0
	054 JumpIfEqual {63}
	055 Compare X19, 0
	056 JumpIfEqual {90}
	057 Move X0, [X19+56]
	058 Compare X0, 0
	059 JumpIfEqual {91}
	060 Move X2, [X8]
	061 Move X1, X20
	062 Call Queue`1<Object>.Enqueue, X0, X1
	063 Compare X19, 0
	064 JumpIfEqual {93}
	065 Move X0, [X19+64]
	066 Compare X0, 0
	067 JumpIfEqual {94}
	068 Move X2, [X8]
	069 Move X1, X20
	070 Call Queue`1<Object>.Enqueue, X0, X1
	071 Move X21, X31
	072 Move W8, [X31+12]
	073 Compare W8, 0
	074 JumpIfEqual {78}
	075 Move X0, X19
	076 Move X1, X31
	077 Call Monitor.Exit, X0
	078 Compare X21, 0
	079 JumpIfNotEqual {87}
	080 Move X20, [X31+32]
	081 Move X19, [X31+40]
	082 Move X30, [X31+16]
	083 Move X21, [X31+24]
	084 Add X31, X31, 48
	085 Return 
	086 Call 0x1C17F20
	087 Move X0, X21
	088 Call 0x1C17F18
	089 Call 0x1C17F20
	090 Call 0x1C17F20
	091 Call 0x1C17F20
	092 Call 0x1C17F20
	093 Call 0x1C17F20
	094 Call 0x1C17F20
	095 Move X20, X0
	096 NotImplemented "Instruction CMP not yet implemented."
	097 Move X0, X20
	098 Call 0x3EB2AD0
	099 Move X21, [X0]
	100 Call 0x3EB2AE0
	101 Move X21, X31
	102 Move X20, X0
	103 Move W8, [X31+12]
	104 Compare W8, 0
	105 JumpIfEqual {109}
	106 Move X0, X19
	107 Move X1, X31
	108 Call Monitor.Exit, X0
	109 Compare X21, 0
	110 JumpIfNotEqual {113}
	111 Move X0, X20
	112 Call 0x1D2D690
	113 Move X0, X21
	114 Call 0x1C17F18
	115 Call 0x1991590

Method: System.Void QueueOutgoingAcknowledgement(ExitGames.Client.Photon.NCommand readCommand, System.Int32 sendTime)

Disassembly:
	0x034F76E4 MOV X2, X0
	0x034F76E8 MOVZ W1, 0x5
	0x034F76EC MOV X0, X20
	0x034F76F0 BL 0x34F116C
	0x034F76F4 MOV X20, X31
	0x034F76F8 MOV X23, X31
	0x034F76FC LDRB W8, [X31 + 0x4C]
	0x034F7700 CBZ W8, 0x34F7710
	0x034F7704 MOV X0, X19
	0x034F7708 MOV X1, X31
	0x034F770C BL 0x33E14E4
	0x034F7710 CBNZ X20, 0x34F7738
	0x034F7714 MOV X0, X23
	0x034F7718 LDP X20, X19, [X31 + 0x90]
	0x034F771C LDP X22, X21, [X31 + 0x80]
	0x034F7720 LDP X24, X23, [X31 + 0x70]
	0x034F7724 LDP X26, X25, [X31 + 0x60]
	0x034F7728 LDP X28, X27, [X31 + 0x50]
	0x034F772C LDR X30, [X31 + 0x40]
	0x034F7730 ADD X31, X31, 0xA0
	0x034F7734 RET
	0x034F7738 MOV X0, X20
	0x034F773C BL 0x1C16F18
	0x034F7740 BL 0x1C16F20
	0x034F7744 MOV X0, X24
	0x034F7748 BL 0x1C16F18
	0x034F774C BL 0x1C16F20
	0x034F7750 BL 0x1C16F20
	0x034F7754 B 0x34F7778
	0x034F7758 B 0x34F7778
	0x034F775C B 0x34F7778
	0x034F7760 B 0x34F7778
	0x034F7764 B 0x34F7778
	0x034F7768 B 0x34F7784
	0x034F776C B 0x34F7784
	0x034F7770 B 0x34F7778
	0x034F7774 B 0x34F7778
	0x034F7778 MOV X25, X1
	0x034F777C MOV X26, X0
	0x034F7780 B 0x34F77C8
	0x034F7784 MOV X25, X1
	0x034F7788 MOV X26, X0
	0x034F778C B 0x34F77CC
	0x034F7790 MOV X25, X1
	0x034F7794 CMP W25, 0x1
	0x034F7798 MOV X26, X0
	0x034F779C B.NE 0x34F77B4
	0x034F77A0 MOV X0, X26
	0x034F77A4 BL 0x3EB1AD0
	0x034F77A8 LDR X24, [X0]
	0x034F77AC BL 0x3EB1AE0
	0x034F77B0 B 0x34F7620
	0x034F77B4 MOV X24, X31
	0x034F77B8 LDR X1, [X28]
	0x034F77BC ADD X0, X31, 0x20
	0x034F77C0 BL 0x2BC434C
	0x034F77C4 CBNZ X24, 0x34F77F0
	0x034F77C8 MOV X23, X31
	0x034F77CC CMP W25, 0x1
	0x034F77D0 B.NE 0x34F77E8
	0x034F77D4 MOV X0, X26
	0x034F77D8 BL 0x3EB1AD0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move [X31+8], W31
	007 Move X19, [X0+312]
	008 Move W20, W2
	009 Move X21, X1
	010 Move X22, X0
	011 Move [X31+12], W31
	012 Add X1, X31, 12
	013 Move X0, X19
	014 Move X2, X31
	015 Call Monitor.Enter, X0, X1
	016 Move X0, [X22+312]
	017 Compare X0, 0
	018 JumpIfEqual {44}
	019 Add X2, X31, 8
	020 Move W1, 20
	021 Move X3, X31
	022 Call StreamBuffer.GetBufferAndAdvance, X0, X1, X2
	023 Move W1, [X31+8]
	024 Move X2, X21
	025 Move W3, W20
	026 Call NCommand.CreateAck, X0, X1, X2, X3
	027 Move X21, X31
	028 Move W8, [X31+12]
	029 Compare W8, 0
	030 JumpIfEqual {34}
	031 Move X0, X19
	032 Move X1, X31
	033 Call Monitor.Exit, X0
	034 Compare X21, 0
	035 JumpIfNotEqual {42}
	036 Move X20, [X31+32]
	037 Move X19, [X31+40]
	038 Move X22, [X31+16]
	039 Move X21, [X31+24]
	040 Move X30, [X31+48]
	041 Return 
	042 Move X0, X21
	043 Call 0x1C17F18
	044 Call 0x1C17F20
	045 Move X20, X0
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Move X0, X20
	048 Call 0x3EB2AD0
	049 Move X21, [X0]
	050 Call 0x3EB2AE0
	051 Move X21, X31
	052 Move X20, X0
	053 Move W8, [X31+12]
	054 Compare W8, 0
	055 JumpIfEqual {59}
	056 Move X0, X19
	057 Move X1, X31
	058 Call Monitor.Exit, X0
	059 Compare X21, 0
	060 JumpIfNotEqual {63}
	061 Move X0, X20
	062 Call 0x1D2D690
	063 Move X0, X21
	064 Call 0x1C17F18
	065 Call 0x1991590

Method: System.Void ReceiveIncomingCommands(System.Byte[] inBuff, System.Int32 inDataLength)

Disassembly:
	0x034F7924 BL 0x33E14E4
	0x034F7928 CBNZ X20, 0x34F793C
	0x034F792C LDP X20, X19, [X31 + 0x20]
	0x034F7930 LDP X30, X21, [X31 + 0x10]
	0x034F7934 ADD X31, X31, 0x30
	0x034F7938 RET
	0x034F793C MOV X0, X20
	0x034F7940 BL 0x1C16F18
	0x034F7944 BL 0x1C16F20
	0x034F7948 B 0x34F794C
	0x034F794C MOV X21, X0
	0x034F7950 CMP W1, 0x1
	0x034F7954 B.NE 0x34F796C
	0x034F7958 MOV X0, X21
	0x034F795C BL 0x3EB1AD0
	0x034F7960 LDR X20, [X0]
	0x034F7964 BL 0x3EB1AE0
	0x034F7968 B 0x34F7914
	0x034F796C MOV X20, X31
	0x034F7970 B 0x34F7978
	0x034F7974 MOV X21, X0
	0x034F7978 LDRB W8, [X31 + 0xC]
	0x034F797C CBZ W8, 0x34F798C
	0x034F7980 MOV X0, X19
	0x034F7984 MOV X1, X31
	0x034F7988 BL 0x33E14E4
	0x034F798C CBNZ X20, 0x34F7998
	0x034F7990 MOV X0, X21
	0x034F7994 BL 0x1D2C690
	0x034F7998 MOV X0, X20
	0x034F799C BL 0x1C16F18
	0x034F79A0 BL 0x1990590
	0x034F79A4 STP X30, X23, [X31 - 0x30]!
	0x034F79A8 STP X22, X21, [X31 + 0x10]
	0x034F79AC STP X20, X19, [X31 + 0x20]
	0x034F79B0 ADRP X20, 0xEE8000
	0x034F79B4 LDRB W8, [X20 + 0xA35]
	0x034F79B8 MOV X19, X1
	0x034F79BC MOV X21, X0
	0x034F79C0 TBNZ X8, 0x0, 0x34F7A74
	0x034F79C4 ADRP X0, 0xC04000
	0x034F79C8 LDR X0, [X0 + 0xBC8]
	0x034F79CC BL 0x1C16CF4
	0x034F79D0 ADRP X0, 0xC3C000
	0x034F79D4 LDR X0, [X0 + 0x718]
	0x034F79D8 BL 0x1C16CF4
	0x034F79DC ADRP X0, 0xC3C000
	0x034F79E0 LDR X0, [X0 + 0x6F0]
	0x034F79E4 BL 0x1C16CF4
	0x034F79E8 ADRP X0, 0xC3C000
	0x034F79EC LDR X0, [X0 + 0x720]
	0x034F79F0 BL 0x1C16CF4
	0x034F79F4 ADRP X0, 0xBFC000
	0x034F79F8 LDR X0, [X0 + 0xAC8]
	0x034F79FC BL 0x1C16CF4
	0x034F7A00 ADRP X0, 0xC3C000
	0x034F7A04 LDR X0, [X0 + 0xA58]
	0x034F7A08 BL 0x1C16CF4
	0x034F7A0C ADRP X0, 0xC3C000
	0x034F7A10 LDR X0, [X0 + 0xA60]
	0x034F7A14 BL 0x1C16CF4
	0x034F7A18 ADRP X0, 0xC3C000
	0x034F7A1C LDR X0, [X0 + 0xA68]
	0x034F7A20 BL 0x1C16CF4
	0x034F7A24 ADRP X0, 0xBFD000
	0x034F7A28 LDR X0, [X0 + 0xEC8]
	0x034F7A2C BL 0x1C16CF4
	0x034F7A30 ADRP X0, 0xC3C000
	0x034F7A34 LDR X0, [X0 + 0xA70]
	0x034F7A38 BL 0x1C16CF4
	0x034F7A3C ADRP X0, 0xC3C000
	0x034F7A40 LDR X0, [X0 + 0xA78]
	0x034F7A44 BL 0x1C16CF4
	0x034F7A48 ADRP X0, 0xC3C000
	0x034F7A4C LDR X0, [X0 + 0xA80]
	0x034F7A50 BL 0x1C16CF4
	0x034F7A54 ADRP X0, 0xC3C000
	0x034F7A58 LDR X0, [X0 + 0xA88]
	0x034F7A5C BL 0x1C16CF4
	0x034F7A60 ADRP X0, 0xC3C000
	0x034F7A64 LDR X0, [X0 + 0xA90]
	0x034F7A68 BL 0x1C16CF4
	0x034F7A6C MOVZ W8, 0x1
	0x034F7A70 STRB W8, [X20 + 0xA35]
	0x034F7A74 CBZ X19, 0x34F8108
	0x034F7A78 MOV X22, X19
	0x034F7A7C LDRB W1, [X22 + 0x12]!
	0x034F7A80 MOV X0, X21
	0x034F7A84 BL 0x34EFEEC
	0x034F7A88 CBZ X0, 0x34F7B24
	0x034F7A8C LDRB W8, [X19 + 0x10]
	0x034F7A90 MOV X20, X0
	0x034F7A94 TBNZ X8, 0x0, 0x34F7BB0
	0x034F7A98 CMP W8, 0x2
	0x034F7A9C B.EQ 0x34F7D2C
	0x034F7AA0 CBNZ W8, 0x34F7E68
	0x034F7AA4 LDR W8, [X19 + 0x14]
	0x034F7AA8 LDR W9, [X20 + 0x48]
	0x034F7AAC CMP W8, W9
	0x034F7AB0 B.GE 0x34F7E7C
	0x034F7AB4 LDR X8, [X21 + 0x10]
	0x034F7AB8 CBZ X8, 0x34F8108
	0x034F7ABC LDR W9, [X8 + 0x108]
	0x034F7AC0 LDRB W10, [X8 + 0x40]
	0x034F7AC4 ADD W9, W9, 0x1
	0x034F7AC8 CMP W10, 0x5
	0x034F7ACC STR W9, [X8 + 0x108]
	0x034F7AD0 B.CC 0x34F7E68
	0x034F7AD4 LDR X19, [X8 + 0x48]
	0x034F7AD8 CBZ X19, 0x34F8108
	0x034F7ADC ADRP X9, 0xC04000
	0x034F7AE0 LDR X8, [X19]
	0x034F7AE4 LDR X9, [X9 + 0xBC8]
	0x034F7AE8 ADRP X10, 0xC3C000
	0x034F7AEC LDR X1, [X9]
	0x034F7AF0 LDR X10, [X10 + 0xA80]
	0x034F7AF4 LDRH W9, [X8 + 0x12E]
	0x034F7AF8 LDR X20, [X10]
	0x034F7AFC CBZ X9, 0x34F8000
	0x034F7B00 LDR X10, [X8 + 0xB0]
	0x034F7B04 ADD X10, X10, 0x8
	0x034F7B08 LDUR X11, [X10 - 0x8]
	0x034F7B0C CMP X11, X1
	0x034F7B10 B.EQ 0x34F8038
	0x034F7B14 SUBS X9, X9, 0x1
	0x034F7B18 ADD X10, X10, 0x10
	0x034F7B1C B.NE 0x34F7B08
	0x034F7B20 B 0x34F8000
	0x034F7B24 LDR X8, [X21 + 0x10]
	0x034F7B28 CBZ X8, 0x34F8108
	0x034F7B2C LDRB W9, [X8 + 0x40]
	0x034F7B30 CBZ W9, 0x34F7E68
	0x034F7B34 LDR X19, [X8 + 0x48]
	0x034F7B38 MOV X0, X22
	0x034F7B3C MOV X1, X31
	0x034F7B40 BL 0x3319BB4
	0x034F7B44 ADRP X8, 0xC3C000
	0x034F7B48 LDR X8, [X8 + 0xA78]
	0x034F7B4C MOV X1, X0
	0x034F7B50 MOV X2, X31
	0x034F7B54 LDR X8, [X8]
	0x034F7B58 MOV X0, X8
	0x034F7B5C BL 0x321B938
	0x034F7B60 CBZ X19, 0x34F8108
	0x034F7B64 ADRP X10, 0xC04000
	0x034F7B68 LDR X8, [X19]
	0x034F7B6C LDR X10, [X10 + 0xBC8]
	0x034F7B70 MOV X20, X0
	0x034F7B74 LDRH W9, [X8 + 0x12E]
	0x034F7B78 LDR X1, [X10]
	0x034F7B7C CBZ X9, 0x34F7BA0
	0x034F7B80 LDR X10, [X8 + 0xB0]
	0x034F7B84 ADD X10, X10, 0x8
	0x034F7B88 LDUR X11, [X10 - 0x8]
	0x034F7B8C CMP X11, X1
	0x034F7B90 B.EQ 0x34F7E48
	0x034F7B94 SUBS X9, X9, 0x1
	0x034F7B98 ADD X10, X10, 0x10
	0x034F7B9C B.NE 0x34F7B88
	0x034F7BA0 MOV X0, X19
	0x034F7BA4 MOV W2, W31
	0x034F7BA8 BL 0x1C5C788
	0x034F7BAC B 0x34F7E54
	0x034F7BB0 TBNZ X8, 0x1, 0x34F7D14
	0x034F7BB4 MOV X22, X20
	0x034F7BB8 LDR W1, [X19 + 0x14]
	0x034F7BBC LDR W8, [X22 + 0x48]!
	0x034F7BC0 CMP W1, W8
	0x034F7BC4 B.LE 0x34F7D94
	0x034F7BC8 MOV X0, X20
	0x034F7BCC BL 0x34EE820
	0x034F7BD0 TBZ X0, 0x0, 0x34F7F84
	0x034F7BD4 LDR X8, [X21 + 0x10]
	0x034F7BD8 CBZ X8, 0x34F8108
	0x034F7BDC LDRB W9, [X8 + 0x40]
	0x034F7BE0 CMP W9, 0x5
	0x034F7BE4 B.CC 0x34F7E68
	0x034F7BE8 LDR X21, [X8 + 0x48]
	0x034F7BEC ADRP X8, 0xBFC000
	0x034F7BF0 LDR X8, [X8 + 0xAC8]
	0x034F7BF4 MOVZ W1, 0x6
	0x034F7BF8 LDR X0, [X8]
	0x034F7BFC BL 0x1C16D6C
	0x034F7C00 CBZ X0, 0x34F8108
	0x034F7C04 LDR W8, [X0 + 0x18]
	0x034F7C08 MOV X23, X0
	0x034F7C0C CBZ W8, 0x34F810C
	0x034F7C10 ADRP X8, 0xC3C000
	0x034F7C14 LDR X8, [X8 + 0xA60]
	0x034F7C18 MOV X0, X20
	0x034F7C1C LDR X8, [X8]
	0x034F7C20 STR X8, [X23 + 0x20]
	0x034F7C24 LDR W1, [X19 + 0x14]
	0x034F7C28 BL 0x34EE878
	0x034F7C2C CBZ X0, 0x34F7C3C
	0x034F7C30 LDR X8, [X0]
	0x034F7C34 LDP X9, X1, [X8 + 0x168]
	0x034F7C38 BLR X9
	0x034F7C3C LDR W8, [X23 + 0x18]
	0x034F7C40 CMP W8, 0x1
	0x034F7C44 B.LS 0x34F810C
	0x034F7C48 CMP W8, 0x2
	0x034F7C4C STR X0, [X23 + 0x28]
	0x034F7C50 B.EQ 0x34F810C
	0x034F7C54 ADRP X8, 0xBFD000
	0x034F7C58 LDR X8, [X8 + 0xEC8]
	0x034F7C5C MOV X0, X19
	0x034F7C60 LDR X8, [X8]
	0x034F7C64 STR X8, [X23 + 0x30]
	0x034F7C68 LDR X8, [X19]
	0x034F7C6C LDP X9, X1, [X8 + 0x168]
	0x034F7C70 BLR X9
	0x034F7C74 LDR W8, [X23 + 0x18]
	0x034F7C78 CMP W8, 0x3
	0x034F7C7C B.LS 0x34F810C
	0x034F7C80 CMP W8, 0x4
	0x034F7C84 STR X0, [X23 + 0x38]
	0x034F7C88 B.EQ 0x34F810C
	0x034F7C8C ADRP X8, 0xC3C000
	0x034F7C90 LDR X8, [X8 + 0xA88]
	0x034F7C94 MOV X0, X22
	0x034F7C98 MOV X1, X31
	0x034F7C9C LDR X8, [X8]
	0x034F7CA0 STR X8, [X23 + 0x40]
	0x034F7CA4 BL 0x337B6E0
	0x034F7CA8 LDR W8, [X23 + 0x18]
	0x034F7CAC CMP W8, 0x5
	0x034F7CB0 B.LS 0x34F810C
	0x034F7CB4 STR X0, [X23 + 0x48]
	0x034F7CB8 MOV X0, X23
	0x034F7CBC MOV X1, X31
	0x034F7CC0 BL 0x32278CC
	0x034F7CC4 CBZ X21, 0x34F8108
	0x034F7CC8 ADRP X10, 0xC04000
	0x034F7CCC LDR X8, [X21]
	0x034F7CD0 LDR X10, [X10 + 0xBC8]
	0x034F7CD4 MOV X19, X0
	0x034F7CD8 LDRH W9, [X8 + 0x12E]
	0x034F7CDC LDR X1, [X10]
	0x034F7CE0 CBZ X9, 0x34F7D04
	0x034F7CE4 LDR X10, [X8 + 0xB0]
	0x034F7CE8 ADD X10, X10, 0x8
	0x034F7CEC LDUR X11, [X10 - 0x8]
	0x034F7CF0 CMP X11, X1
	0x034F7CF4 B.EQ 0x34F8050
	0x034F7CF8 SUBS X9, X9, 0x1
	0x034F7CFC ADD X10, X10, 0x10
	0x034F7D00 B.NE 0x34F7CEC
	0x034F7D04 MOV X0, X21
	0x034F7D08 MOV W2, W31
	0x034F7D0C BL 0x1C5C788
	0x034F7D10 B 0x34F805C
	0x034F7D14 MOV X0, X20
	0x034F7D18 MOV X1, X19
	0x034F7D1C LDP X20, X19, [X31 + 0x20]
	0x034F7D20 LDP X22, X21, [X31 + 0x10]
	0x034F7D24 LDP X30, X23, [X31], #0x30
	0x034F7D28 B 0x34EEB34
	0x034F7D2C LDR W10, [X19 + 0x1C]
	0x034F7D30 LDR W9, [X21 + 0x14C]
	0x034F7D34 ADD W8, W10, 0x7F
	0x034F7D38 CMP W10, 0x0
	0x034F7D3C CSEL W8, W8, W10, LT
	0x034F7D40 ADD W11, W9, 0x80
	0x034F7D44 AND W8, W8, 0xFFFFFF80
	0x034F7D48 CMP W10, W11
	0x034F7D4C SUB W8, W10, W8
	0x034F7D50 B.GE 0x34F7EF0
	0x034F7D54 CMP W10, W9
	0x034F7D58 B.LT 0x34F7E68
	0x034F7D5C LDR X9, [X21 + 0x140]
	0x034F7D60 CBZ X9, 0x34F8108
	0x034F7D64 SXTB W11, W8
	0x034F7D68 LDR X10, [X9 + 0x18]
	0x034F7D6C UBFM W11, W11, 0xA, 0xE
	0x034F7D70 ADD W11, W8, W11
	0x034F7D74 SBFM W11, W11, 0x5, 0x7
	0x034F7D78 CMP W11, W10
	0x034F7D7C B.CS 0x34F810C
	0x034F7D80 ADD X11, X9, W11, 0x2, SXTW
	0x034F7D84 LDR W11, [X11 + 0x20]
	0x034F7D88 LSRV W11, W11, W8
	0x034F7D8C TBNZ X11, 0x0, 0x34F7E68
	0x034F7D90 B 0x34F7F34
	0x034F7D94 LDR X8, [X21 + 0x10]
	0x034F7D98 CBZ X8, 0x34F8108
	0x034F7D9C LDRB W9, [X8 + 0x40]
	0x034F7DA0 CMP W9, 0x5
	0x034F7DA4 B.CC 0x34F7E68
	0x034F7DA8 LDR X20, [X8 + 0x48]
	0x034F7DAC ADRP X8, 0xC3C000
	0x034F7DB0 LDR X9, [X19]
	0x034F7DB4 LDR X8, [X8 + 0xA58]
	0x034F7DB8 MOV X0, X19
	0x034F7DBC LDR X21, [X8]
	0x034F7DC0 LDP X8, X1, [X9 + 0x168]
	0x034F7DC4 BLR X8
	0x034F7DC8 MOV X19, X0
	0x034F7DCC MOV X0, X22
	0x034F7DD0 MOV X1, X31
	0x034F7DD4 BL 0x337B6E0
	0x034F7DD8 ADRP X8, 0xC3C000
	0x034F7DDC LDR X8, [X8 + 0xA68]
	0x034F7DE0 MOV X3, X0
	0x034F7DE4 MOV X0, X21
	0x034F7DE8 MOV X1, X19
	0x034F7DEC LDR X2, [X8]
	0x034F7DF0 MOV X4, X31
	0x034F7DF4 BL 0x32277C4
	0x034F7DF8 CBZ X20, 0x34F8108
	0x034F7DFC ADRP X10, 0xC04000
	0x034F7E00 LDR X8, [X20]
	0x034F7E04 LDR X10, [X10 + 0xBC8]
	0x034F7E08 MOV X19, X0
	0x034F7E0C LDRH W9, [X8 + 0x12E]
	0x034F7E10 LDR X1, [X10]
	0x034F7E14 CBZ X9, 0x34F7E38
	0x034F7E18 LDR X10, [X8 + 0xB0]
	0x034F7E1C ADD X10, X10, 0x8
	0x034F7E20 LDUR X11, [X10 - 0x8]
	0x034F7E24 CMP X11, X1
	0x034F7E28 B.EQ 0x34F80E8
	0x034F7E2C SUBS X9, X9, 0x1
	0x034F7E30 ADD X10, X10, 0x10
	0x034F7E34 B.NE 0x34F7E20
	0x034F7E38 MOV X0, X20
	0x034F7E3C MOV W2, W31
	0x034F7E40 BL 0x1C5C788
	0x034F7E44 B 0x34F80F4
	0x034F7E48 LDRSW X9, [X10]
	0x034F7E4C ADD X8, X8, X9, 0x4, LSL
	0x034F7E50 ADD X0, X8, 0x138
	0x034F7E54 LDP X8, X3, [X0]
	0x034F7E58 MOVZ W1, 0x1
	0x034F7E5C MOV X0, X19
	0x034F7E60 MOV X2, X20
	0x034F7E64 BLR X8
	0x034F7E68 MOV W0, W31
	0x034F7E6C LDP X20, X19, [X31 + 0x20]
	0x034F7E70 LDP X22, X21, [X31 + 0x10]
	0x034F7E74 LDP X30, X23, [X31], #0x30
	0x034F7E78 RET
	0x034F7E7C LDR W1, [X19 + 0x18]
	0x034F7E80 LDR W8, [X20 + 0x4C]
	0x034F7E84 CMP W1, W8
	0x034F7E88 B.LE 0x34F7F94
	0x034F7E8C MOV X0, X20
	0x034F7E90 BL 0x34EE770
	0x034F7E94 TBZ X0, 0x0, 0x34F8010
	0x034F7E98 LDR X8, [X21 + 0x10]
	0x034F7E9C CBZ X8, 0x34F8108
	0x034F7EA0 LDRB W9, [X8 + 0x40]
	0x034F7EA4 CMP W9, 0x5
	0x034F7EA8 B.CC 0x34F7E68
	0x034F7EAC LDR X0, [X20 + 0x20]
	0x034F7EB0 CBZ X0, 0x34F8108
	0x034F7EB4 LDR X20, [X8 + 0x48]
	0x034F7EB8 ADRP X8, 0xC3C000
	0x034F7EBC LDR W1, [X19 + 0x18]
	0x034F7EC0 LDR X8, [X8 + 0x6F0]
	0x034F7EC4 LDR X2, [X8]
	0x034F7EC8 BL 0x2426B8C
	0x034F7ECC ADRP X8, 0xC3C000
	0x034F7ED0 LDR X8, [X8 + 0xA90]
	0x034F7ED4 LDR X21, [X8]
	0x034F7ED8 CBZ X0, 0x34F806C
	0x034F7EDC LDR X8, [X0]
	0x034F7EE0 LDP X9, X1, [X8 + 0x168]
	0x034F7EE4 BLR X9
	0x034F7EE8 MOV X22, X0
	0x034F7EEC B 0x34F8070
	0x034F7EF0 LDR X9, [X21 + 0x140]
	0x034F7EF4 SUB W10, W10, W8
	0x034F7EF8 STR W10, [X21 + 0x14C]
	0x034F7EFC CBZ X9, 0x34F8108
	0x034F7F00 LDR W10, [X9 + 0x18]
	0x034F7F04 UBFM X11, X10, 0x20, 0x1F
	0x034F7F08 CMP X11, 0x1
	0x034F7F0C B.LT 0x34F7F34
	0x034F7F10 MOV X11, X31
	0x034F7F14 SXTW X12, W10
	0x034F7F18 CMP X11, X10
	0x034F7F1C B.CS 0x34F810C
	0x034F7F20 ADD X13, X9, X11, 0x2, LSL
	0x034F7F24 ADD X11, X11, 0x1
	0x034F7F28 CMP X11, X12
	0x034F7F2C STR W31, [X13 + 0x20]
	0x034F7F30 B.LT 0x34F7F18
	0x034F7F34 ADD W11, W8, 0x1F
	0x034F7F38 CMP W8, 0x0
	0x034F7F3C CSEL W11, W11, W8, LT
	0x034F7F40 SBFM W11, W11, 0x5, 0x1F
	0x034F7F44 CMP W11, W10
	0x034F7F48 B.CS 0x34F810C
	0x034F7F4C ADD X9, X9, W11, 0x2, SXTW
	0x034F7F50 LDR W10, [X9 + 0x20]
	0x034F7F54 MOVZ W11, 0x1
	0x034F7F58 LSLV W8, W11, W8
	0x034F7F5C ORR W8, W10, W8, 0x0
	0x034F7F60 STR W8, [X9 + 0x20]
	0x034F7F64 LDR X0, [X20 + 0x28]
	0x034F7F68 CBZ X0, 0x34F8108
	0x034F7F6C ADRP X8, 0xC3C000
	0x034F7F70 LDR X8, [X8 + 0x720]
	0x034F7F74 MOV X1, X19
	0x034F7F78 LDR X2, [X8]
	0x034F7F7C BL 0x24F1750
	0x034F7F80 B 0x34F8030
	0x034F7F84 LDR X0, [X20 + 0x18]
	0x034F7F88 CBZ X0, 0x34F8108
	0x034F7F8C LDR W1, [X19 + 0x14]
	0x034F7F90 B 0x34F801C
	0x034F7F94 LDR X8, [X21 + 0x10]
	0x034F7F98 CBZ X8, 0x34F8108
	0x034F7F9C LDR W9, [X8 + 0x108]
	0x034F7FA0 LDRB W10, [X8 + 0x40]
	0x034F7FA4 ADD W9, W9, 0x1
	0x034F7FA8 CMP W10, 0x5
	0x034F7FAC STR W9, [X8 + 0x108]
	0x034F7FB0 B.CC 0x34F7E68
	0x034F7FB4 LDR X19, [X8 + 0x48]
	0x034F7FB8 CBZ X19, 0x34F8108
	0x034F7FBC ADRP X9, 0xC04000
	0x034F7FC0 LDR X8, [X19]
	0x034F7FC4 LDR X9, [X9 + 0xBC8]
	0x034F7FC8 ADRP X10, 0xC3C000
	0x034F7FCC LDR X1, [X9]
	0x034F7FD0 LDR X10, [X10 + 0xA70]
	0x034F7FD4 LDRH W9, [X8 + 0x12E]
	0x034F7FD8 LDR X20, [X10]
	0x034F7FDC CBZ X9, 0x34F8000
	0x034F7FE0 LDR X10, [X8 + 0xB0]
	0x034F7FE4 ADD X10, X10, 0x8
	0x034F7FE8 LDUR X11, [X10 - 0x8]
	0x034F7FEC CMP X11, X1
	0x034F7FF0 B.EQ 0x34F8038
	0x034F7FF4 SUBS X9, X9, 0x1
	0x034F7FF8 ADD X10, X10, 0x10
	0x034F7FFC B.NE 0x34F7FE8
	0x034F8000 MOV X0, X19
	0x034F8004 MOV W2, W31
	0x034F8008 BL 0x1C5C788
	0x034F800C B 0x34F8044
	0x034F8010 LDR X0, [X20 + 0x20]
	0x034F8014 CBZ X0, 0x34F8108
	0x034F8018 LDR W1, [X19 + 0x18]
	0x034F801C ADRP X8, 0xC3B000
	0x034F8020 LDR X8, [X8 + 0x718]
	0x034F8024 MOV X2, X19
	0x034F8028 LDR X3, [X8]
	0x034F802C BL 0x2426E98
	0x034F8030 MOVZ W0, 0x1
	0x034F8034 B 0x34F7E6C
	0x034F8038 LDRSW X9, [X10]
	0x034F803C ADD X8, X8, X9, 0x4, LSL
	0x034F8040 ADD X0, X8, 0x138
	0x034F8044 LDP X8, X3, [X0]
	0x034F8048 MOVZ W1, 0x5
	0x034F804C B 0x34F7E5C
	0x034F8050 LDRSW X9, [X10]
	0x034F8054 ADD X8, X8, X9, 0x4, LSL
	0x034F8058 ADD X0, X8, 0x138
	0x034F805C LDP X8, X3, [X0]
	0x034F8060 MOVZ W1, 0x5
	0x034F8064 MOV X0, X21
	0x034F8068 B 0x34F8100
	0x034F806C MOV X22, X31
	0x034F8070 ADRP X9, 0xBFC000
	0x034F8074 LDR X8, [X19]
	0x034F8078 LDR X9, [X9 + 0xEC8]
	0x034F807C MOV X0, X19
	0x034F8080 LDR X23, [X9]
	0x034F8084 LDP X9, X1, [X8 + 0x168]
	0x034F8088 BLR X9
	0x034F808C MOV X3, X0
	0x034F8090 MOV X0, X21
	0x034F8094 MOV X1, X22
	0x034F8098 MOV X2, X23
	0x034F809C MOV X4, X31
	0x034F80A0 BL 0x32277C4
	0x034F80A4 CBZ X20, 0x34F8108
	0x034F80A8 ADRP X10, 0xC03000
	0x034F80AC LDR X8, [X20]
	0x034F80B0 LDR X10, [X10 + 0xBC8]
	0x034F80B4 MOV X19, X0
	0x034F80B8 LDRH W9, [X8 + 0x12E]
	0x034F80BC LDR X1, [X10]
	0x034F80C0 CBZ X9, 0x34F7E38
	0x034F80C4 LDR X10, [X8 + 0xB0]
	0x034F80C8 ADD X10, X10, 0x8
	0x034F80CC LDUR X11, [X10 - 0x8]
	0x034F80D0 CMP X11, X1
	0x034F80D4 B.EQ 0x34F80E8
	0x034F80D8 SUBS X9, X9, 0x1
	0x034F80DC ADD X10, X10, 0x10
	0x034F80E0 B.NE 0x34F80CC
	0x034F80E4 B 0x34F7E38
	0x034F80E8 LDRSW X9, [X10]
	0x034F80EC ADD X8, X8, X9, 0x4, LSL
	0x034F80F0 ADD X0, X8, 0x138
	0x034F80F4 LDP X8, X3, [X0]
	0x034F80F8 MOVZ W1, 0x5
	0x034F80FC MOV X0, X20
	0x034F8100 MOV X2, X19
	0x034F8104 B 0x34F7E64
	0x034F8108 BL 0x1C16F20
	0x034F810C BL 0x1C16F28
	0x034F8110 STR X30, [X31 - 0x30]!
	0x034F8114 STP X22, X21, [X31 + 0x10]
	0x034F8118 STP X20, X19, [X31 + 0x20]
	0x034F811C ADRP X20, 0xEE7000
	0x034F8120 LDRB W8, [X20 + 0xA73]
	0x034F8124 MOV X19, X0
	0x034F8128 TBNZ X8, 0x0, 0x34F81E8
	0x034F812C ADRP X0, 0xBFB000
	0x034F8130 LDR X0, [X0 + 0x618]
	0x034F8134 BL 0x1C16CF4
	0x034F8138 ADRP X0, 0xBFC000
	0x034F813C LDR X0, [X0 + 0x6C0]
	0x034F8140 BL 0x1C16CF4
	0x034F8144 ADRP X0, 0xBFC000
	0x034F8148 LDR X0, [X0 + 0x6C8]
	0x034F814C BL 0x1C16CF4
	0x034F8150 ADRP X0, 0xBFC000
	0x034F8154 LDR X0, [X0 + 0x6D0]
	0x034F8158 BL 0x1C16CF4
	0x034F815C ADRP X0, 0xBFB000
	0x034F8160 LDR X0, [X0 + 0x758]
	0x034F8164 BL 0x1C16CF4
	0x034F8168 ADRP X0, 0xC3B000
	0x034F816C LDR X0, [X0 + 0xA98]
	0x034F8170 BL 0x1C16CF4
	0x034F8174 ADRP X0, 0xC3B000
	0x034F8178 LDR X0, [X0 + 0xAA0]
	0x034F817C BL 0x1C16CF4
	0x034F8180 ADRP X0, 0xC3B000
	0x034F8184 LDR X0, [X0 + 0xAA8]
	0x034F8188 BL 0x1C16CF4
	0x034F818C ADRP X0, 0xC3B000
	0x034F8190 LDR X0, [X0 + 0xAB0]
	0x034F8194 BL 0x1C16CF4
	0x034F8198 ADRP X0, 0xC3B000
	0x034F819C LDR X0, [X0 + 0xAB8]
	0x034F81A0 BL 0x1C16CF4
	0x034F81A4 ADRP X0, 0xC3B000
	0x034F81A8 LDR X0, [X0 + 0xAC0]
	0x034F81AC BL 0x1C16CF4
	0x034F81B0 ADRP X0, 0xC3B000
	0x034F81B4 LDR X0, [X0 + 0xAC8]
	0x034F81B8 BL 0x1C16CF4
	0x034F81BC ADRP X0, 0xC3B000
	0x034F81C0 LDR X0, [X0 + 0xAD0]
	0x034F81C4 BL 0x1C16CF4
	0x034F81C8 ADRP X0, 0xC3B000
	0x034F81CC LDR X0, [X0 + 0xAD8]
	0x034F81D0 BL 0x1C16CF4
	0x034F81D4 ADRP X0, 0xC3B000
	0x034F81D8 LDR X0, [X0 + 0xAE0]
	0x034F81DC BL 0x1C16CF4
	0x034F81E0 MOVZ W8, 0x1
	0x034F81E4 STRB W8, [X20 + 0xA73]
	0x034F81E8 STRB W31, [X31 + 0xC]
	0x034F81EC LDR X8, [X19 + 0x28]
	0x034F81F0 CBZ X8, 0x34F8200
	0x034F81F4 LDR W8, [X8 + 0x1C]
	0x034F81F8 CMP W8, 0x2
	0x034F81FC B.EQ 0x34F8218
	0x034F8200 ADRP X8, 0xC3B000
	0x034F8204 LDR X8, [X8 + 0xAE0]
	0x034F8208 MOVZ W1, 0x2
	0x034F820C MOV X0, X19
	0x034F8210 LDR X2, [X8]
	0x034F8214 BL 0x34F116C
	0x034F8218 LDR X8, [X19 + 0x10]
	0x034F821C CBZ X8, 0x34F867C
	0x034F8220 LDRB W8, [X8 + 0x26]
	0x034F8224 CBZ W8, 0x34F8238
	0x034F8228 MOV X0, X19
	0x034F822C BL 0x34FC9E0
	0x034F8230 MOV X20, X0
	0x034F8234 B 0x34F8668
	0x034F8238 LDR X8, [X19 + 0xA0]
	0x034F823C CBZ X8, 0x34F8364
	0x034F8240 ADRP X8, 0xBFC000
	0x034F8244 LDR X8, [X8 + 0x6D0]
	0x034F8248 LDR X0, [X8]
	0x034F824C BL 0x1C16F10
	0x034F8250 ADRP X8, 0xBFC000
	0x034F8254 LDR X8, [X8 + 0x6C0]
	0x034F8258 MOV X20, X0
	0x034F825C LDR X1, [X8]
	0x034F8260 BL 0x2AA4804
	0x034F8264 CBZ X20, 0x34F867C
	0x034F8268 ADRP X8, 0xC3B000
	0x034F826C ADRP X21, 0xBFC000
	0x034F8270 LDR X8, [X8 + 0xAA0]
	0x034F8274 LDR X21, [X21 + 0x6C8]
	0x034F8278 MOV X0, X20
	0x034F827C MOV X2, X31
	0x034F8280 LDR X1, [X8]
	0x034F8284 LDR X3, [X21]
	0x034F8288 BL 0x2AA5084
	0x034F828C ADRP X8, 0xC3B000
	0x034F8290 LDR X2, [X19 + 0xB0]
	0x034F8294 LDR X8, [X8 + 0xAC8]
	0x034F8298 LDR X3, [X21]
	0x034F829C MOV X0, X20
	0x034F82A0 LDR X1, [X8]
	0x034F82A4 BL 0x2AA5084
	0x034F82A8 LDR X0, [X19 + 0x10]
	0x034F82AC CBZ X0, 0x34F867C
	0x034F82B0 MOV X1, X31
	0x034F82B4 BL 0x35011BC
	0x034F82B8 ADRP X8, 0xC3B000
	0x034F82BC LDR X8, [X8 + 0xAD8]
	0x034F82C0 LDR X3, [X21]
	0x034F82C4 MOV X2, X0
	0x034F82C8 MOV X0, X20
	0x034F82CC LDR X1, [X8]
	0x034F82D0 BL 0x2AA5084
	0x034F82D4 LDR X0, [X19 + 0x18]
	0x034F82D8 CBZ X0, 0x34F867C
	0x034F82DC LDR X8, [X0]
	0x034F82E0 LDP X9, X1, [X8 + 0x178]
	0x034F82E4 BLR X9
	0x034F82E8 ADRP X8, 0xC3B000
	0x034F82EC LDR X8, [X8 + 0xAB8]
	0x034F82F0 LDR X3, [X21]
	0x034F82F4 MOV X2, X0

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+32], X30
	003 Move [X31+48], X28
	004 Move [X31+56], X27
	005 Move [X31+64], X26
	006 Move [X31+72], X25
	007 Move [X31+80], X24
	008 Move [X31+88], X23
	009 Move [X31+96], X22
	010 Move [X31+104], X21
	011 Move [X31+112], X20
	012 Move [X31+120], X19
	013 Move X21, 0xEE9000
	014 Move W8, [X21+2611]
	015 Move W22, W2
	016 Move X20, X1
	017 Move X19, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {57}
	022 Move X0, 0xC05000
	023 Move X0, [X0+3288]
	024 Call 0x1C17CF4
	025 Move X0, 0xC05000
	026 Move X0, [X0+3840]
	027 Call 0x1C17CF4
	028 Move X0, 0xC3D000
	029 Move X0, [X0+1824]
	030 Call 0x1C17CF4
	031 Move X0, 0xC05000
	032 Move X0, [X0+3680]
	033 Call 0x1C17CF4
	034 Move X0, 0xC05000
	035 Move X0, [X0+1824]
	036 Call 0x1C17CF4
	037 Move X0, 0xC3D000
	038 Move X0, [X0+2552]
	039 Call 0x1C17CF4
	040 Move X0, 0xC3D000
	041 Move X0, [X0+2560]
	042 Call 0x1C17CF4
	043 Move X0, 0xBFF000
	044 Move X0, [X0+600]
	045 Call 0x1C17CF4
	046 Move X0, 0xC3D000
	047 Move X0, [X0+2568]
	048 Call 0x1C17CF4
	049 Move X0, 0xC3D000
	050 Move X0, [X0+2576]
	051 Call 0x1C17CF4
	052 Move X0, 0xC3D000
	053 Move X0, [X0+2584]
	054 Call 0x1C17CF4
	055 Move W8, 1
	056 Move [X21+2611], W8
	057 NotImplemented "Instruction STRH not yet implemented."
	058 Move [X31+28], W31
	059 Move [X31+20], W31
	060 Move [X31+24], W31
	061 Move [X31+16], W31
	062 Move [X31+12], W31
	063 Move [X31+8], W31
	064 Move X0, [X19+192]
	065 Compare X0, 0
	066 JumpIfEqual {614}
	067 Move X1, X31
	068 Call Stopwatch.get_ElapsedMilliseconds, X0
	069 Move W8, [X19+64]
	070 Move [X19+136], W0
	071 Compare W8, 0
	072 JumpIfEqual {465}
	073 Move X26, 0xC05000
	074 Move X26, [X26+3840]
	075 Move [X31+44], W31
	076 Move X0, [X26]
	077 Move W8, [X0+224]
	078 Compare W8, 0
	079 JumpIfNotEqual {81}
	080 Call 0x1C17DFC
	081 Add X0, X31, 40
	082 Add X2, X31, 44
	083 Move X1, X20
	084 Move X3, X31
	085 Call Protocol.Deserialize, X0, X1, X2
	086 NotImplemented "Instruction LDRSW not yet implemented."
	087 Add W8, W9, 1
	088 Move [X31+44], W8
	089 Compare X20, 0
	090 JumpIfEqual {521}
	091 Move W10, [X20+24]
	092 NotImplemented "Instruction CMP not yet implemented."
	093 Add X11, X20, X9
	094 Move W21, [X11+32]
	095 NotImplemented "Instruction CMP not yet implemented."
	096 Move X8, [X19+16]
	097 Compare X8, 0
	098 JumpIfEqual {523}
	099 Move X8, [X8+256]
	100 Compare X8, 0
	101 JumpIfEqual {465}
	102 Move X0, [X26]
	103 Move W8, [X0+224]
	104 Compare W8, 0
	105 JumpIfNotEqual {107}
	106 Call 0x1C17DFC
	107 Add X0, X31, 24
	108 Add X2, X31, 44
	109 Move X1, X20
	110 Move X3, X31
	111 Call Protocol.Deserialize, X0, X1, X2
	112 Move W8, [X31+24]
	113 Move W9, [X19+372]
	114 NotImplemented "Instruction CMP not yet implemented."
	115 Move X8, [X19+16]
	116 Compare X8, 0
	117 JumpIfEqual {538}
	118 Move X21, [X8+256]
	119 Compare X21, 0
	120 JumpIfEqual {539}
	121 Move X10, 0xC05000
	122 Move X8, [X21]
	123 Move W23, [X31+44]
	124 Move X10, [X10+3288]
	125 NotImplemented "Instruction LDRH not yet implemented."
	126 Move X1, [X10]
	127 Compare X9, 0
	128 JumpIfEqual {135}
	129 Move X10, [X8+176]
	130 Add X10, X10, 8
	131 NotImplemented "Instruction LDUR not yet implemented."
	132 NotImplemented "Instruction CMP not yet implemented."
	133 Subtract X9, X9, 1
	134 Add X10, X10, 16
	135 Move W2, 2
	136 Move X0, X21
	137 Call 0x1C5D788
	138 Move W11, [X19+388]
	139 Compare W11, 0
	140 JumpIfEqual {152}
	141 Move X8, [X19+16]
	142 Compare X8, 0
	143 JumpIfEqual {524}
	144 Move W8, [X8+64]
	145 NotImplemented "Instruction CMP not yet implemented."
	146 Move X8, 0xC3D000
	147 Move X8, [X8+2584]
	148 Move X2, [X8]
	149 Move W1, 2
	150 Move X0, X19
	151 Call PeerBase.EnqueueDebugReturn, X0, X1, X2
	152 Add W9, W9, 2
	153 NotImplemented "Instruction CMP not yet implemented."
	154 Move [X31+44], W9
	155 Add X8, X20, W8
	156 Move W8, [X8+32]
	157 Move X0, [X26]
	158 Move [X31+28], W8
	159 Move W8, [X0+224]
	160 Compare W8, 0
	161 JumpIfNotEqual {163}
	162 Call 0x1C17DFC
	163 Add X0, X19, 384
	164 Add X2, X31, 44
	165 Move X1, X20
	166 Move X3, X31
	167 Call Protocol.Deserialize, X0, X1, X2
	168 Add X0, X31, 24
	169 Add X2, X31, 44
	170 Move X1, X20
	171 Move X3, X31
	172 Call Protocol.Deserialize, X0, X1, X2
	173 Move W8, [X31+24]
	174 Move W9, [X19+372]
	175 NotImplemented "Instruction CMP not yet implemented."
	176 NotImplemented "Instruction CMP not yet implemented."
	177 Move X0, [X26]
	178 Move W8, [X0+224]
	179 Compare W8, 0
	180 JumpIfNotEqual {182}
	181 Call 0x1C17DFC
	182 Add X0, X31, 12
	183 Add X2, X31, 44
	184 Move X1, X20
	185 Move X3, X31
	186 Call Protocol.Deserialize, X0, X1, X2
	187 Move X8, [X19+152]
	188 Add X8, X8, 4
	189 Move [X19+152], X8
	190 Move W8, [X31+44]
	191 Subtract W8, W8, 4
	192 Move [X31+44], W8
	193 Add X2, X31, 44
	194 Move W0, W31
	195 Move X1, X20
	196 Move X3, X31
	197 Call Protocol.Serialize, X0, X1, X2
	198 Move X8, 0xC05000
	199 Move X8, [X8+3680]
	200 Move X0, [X8]
	201 Move W8, [X0+224]
	202 Compare W8, 0
	203 JumpIfNotEqual {205}
	204 Call 0x1C17DFC
	205 Move X0, X20
	206 Move W1, W22
	207 Move X2, X31
	208 Call SupportClass.CalculateCrc, X0, X1
	209 Move W8, [X31+12]
	210 Move W21, W0
	211 NotImplemented "Instruction CMP not yet implemented."
	212 Move X8, [X19+152]
	213 Add X8, X8, 12
	214 Move W8, [X19+92]
	215 Add W8, W8, 1
	216 Move [X19+92], W8
	217 Move W8, [X19+92]
	218 Move W9, [X19+64]
	219 Add W8, W8, 1
	220 Move [X19+92], W8
	221 Compare W9, 0
	222 JumpIfEqual {465}
	223 Move X8, [X19+16]
	224 Compare X8, 0
	225 JumpIfEqual {544}
	226 Move W8, [X8+64]
	227 NotImplemented "Instruction CMP not yet implemented."
	228 Add X0, X31, 24
	229 Move X1, X31
	230 Call Int32.ToString, X0
	231 Move X20, X0
	232 Add X0, X19, 372
	233 Move X1, X31
	234 Call Int32.ToString, X0
	235 Move X8, 0xC3D000
	236 Move X8, [X8+2560]
	237 Move X9, 0xC3D000
	238 Move X9, [X9+2568]
	239 Move X3, X0
	240 Move X0, [X8]
	241 Move X2, [X9]
	242 Move X1, X20
	243 Move X4, X31
	244 Call String.Concat, X0, X1, X2, X3
	245 Move X2, X0
	246 Move W1, 5
	247 Move X0, X19
	248 Call PeerBase.EnqueueDebugReturn, X0, X1, X2
	249 Move W9, [X10]
	250 Add W9, W9, 2
	251 Add X8, X8, W9
	252 Add X0, X8, 312
	253 Move X8, [X0]
	254 Move X6, [X0+8]
	255 Subtract W3, W22, W23
	256 Add X5, X31, 20
	257 Move X0, X21
	258 Move X1, X20
	259 Move W2, W23
	260 Move X4, X20
	261 NotImplemented "Instruction BLR not yet implemented."
	262 Move W8, [X19+388]
	263 Move X20, X0
	264 Compare W8, 0
	265 JumpIfNotEqual {284}
	266 Move X24, [X19+344]
	267 Move [X31+16], W31
	268 Add X1, X31, 16
	269 Move X0, X24
	270 Move X2, X31
	271 Call Monitor.Enter, X0, X1
	272 Move W8, 1
	273 Move X21, X31
	274 Move [X19+388], W8
	275 Move [X19+408], W31
	276 Move W8, [X31+16]
	277 Compare W8, 0
	278 JumpIfEqual {282}
	279 Move X0, X24
	280 Move X1, X31
	281 Call Monitor.Exit, X0
	282 Compare X21, 0
	283 JumpIfNotEqual {545}
	284 Move W8, 1
	285 Move [X31+44], W8
	286 Compare X20, 0
	287 JumpIfEqual {540}
	288 Move W8, [X20+24]
	289 Compare W8, 0
	290 JumpIfEqual {541}
	291 Move W8, [X20+32]
	292 Move X0, [X26]
	293 Move [X31+28], W8
	294 Move W8, [X0+224]
	295 Compare W8, 0
	296 JumpIfNotEqual {298}
	297 Call 0x1C17DFC
	298 Add X0, X19, 384
	299 Add X2, X31, 44
	300 Move X1, X20
	301 Move X3, X31
	302 Call Protocol.Deserialize, X0, X1, X2
	303 Move X8, [X19+152]
	304 Add X8, X8, W22
	305 Move X0, [X19+16]
	306 Move [X19+152], X8
	307 Compare X0, 0
	308 JumpIfEqual {525}
	309 Move X1, X31
	310 Call PhotonPeer.get_TrafficStatsEnabled, X0
	311 Move TEMP, X0
	312 And TEMP, TEMP, 1
	313 Compare TEMP, 1
	314 JumpIfNotEqual {330}
	315 Move X8, [X19+16]
	316 Compare X8, 0
	317 JumpIfEqual {542}
	318 Move X9, [X8+160]
	319 Compare X9, 0
	320 JumpIfEqual {543}
	321 Move W8, [X9+36]
	322 Move W10, [X9+40]
	323 Add W11, W8, 1
	324 Move W8, [X31+28]
	325 Add W10, W10, W8
	326 Move [X9+36], W11
	327 Move [X9+40], W10
	328 Compare W8, 0
	329 JumpIfNotEqual {333}
	330 Move W8, [X31+28]
	331 Compare W8, 0
	332 JumpIfEqual {335}
	333 Move W9, [X19+368]
	334 NotImplemented "Instruction CMP not yet implemented."
	335 Add X0, X31, 28
	336 Move X1, X31
	337 Call Byte.ToString, X0
	338 Move X21, X0
	339 Add X0, X19, 368
	340 Move X1, X31
	341 Call Int32.ToString, X0
	342 Move X8, 0xC3D000
	343 Move X8, [X8+2552]
	344 Move X9, 0xBFF000
	345 Move X9, [X9+600]
	346 Move X3, X0
	347 Move X0, [X8]
	348 Move X2, [X9]
	349 Move X1, X21
	350 Move X4, X31
	351 Call String.Concat, X0, X1, X2, X3
	352 Move X2, X0
	353 Move W1, 1
	354 Move X0, X19
	355 Call PeerBase.EnqueueDebugReturn, X0, X1, X2
	356 Move W8, [X31+28]
	357 Compare W8, 0
	358 JumpIfEqual {465}
	359 Move X27, 0xC3D000
	360 Move X27, [X27+1824]
	361 Move W28, W31
	362 Move W26, W31
	363 Move X0, [X19+288]
	364 Compare X0, 0
	365 JumpIfEqual {511}
	366 Add X3, X31, 44
	367 Move X1, X19
	368 Move X2, X20
	369 Call NCommandPool.Acquire, X0, X1, X2, X3
	370 Move X22, X0
	371 Compare X0, 0
	372 JumpIfEqual {512}
	373 Move W8, [X22+17]
	374 NotImplemented "Instruction CMP not yet implemented."
	375 NotImplemented "Instruction CMP not yet implemented."
	376 Move X0, X19
	377 Move X1, X22
	378 Call EnetPeer.ExecuteCommand, X0, X1
	379 Move W28, 1
	380 Move W8, [X22+16]
	381 Move TEMP, X8
	382 And TEMP, TEMP, 1
	383 Compare TEMP, 1
	384 JumpIfNotEqual {419}
	385 Move W2, [X19+384]
	386 Move X0, X19
	387 Move X1, X22
	388 Call EnetPeer.QueueOutgoingAcknowledgement, X0, X1, X2
	389 Move X0, [X19+16]
	390 Compare X0, 0
	391 JumpIfEqual {513}
	392 Move X1, X31
	393 Call PhotonPeer.get_TrafficStatsEnabled, X0
	394 Move TEMP, X0
	395 And TEMP, TEMP, 1
	396 Compare TEMP, 1
	397 JumpIfNotEqual {419}
	398 Move X8, [X19+16]
	399 Compare X8, 0
	400 JumpIfEqual {516}
	401 Move X0, [X19+192]
	402 Compare X0, 0
	403 JumpIfEqual {520}
	404 Move X21, [X8+160]
	405 Move X1, X31
	406 Call Stopwatch.get_ElapsedMilliseconds, X0
	407 Compare X21, 0
	408 JumpIfEqual {519}
	409 Move [X21+64], W0
	410 Move X8, [X19+16]
	411 Compare X8, 0
	412 JumpIfEqual {518}
	413 Move X0, [X8+168]
	414 Compare X0, 0
	415 JumpIfEqual {517}
	416 Move W1, 20
	417 Move X2, X31
	418 Call TrafficStats.CountControlCommand, X0, X1
	419 Move W8, [X31+28]
	420 Add W26, W26, 1
	421 NotImplemented "Instruction CMP not yet implemented."
	422 Move X24, [X19+424]
	423 Move [X31+8], W31
	424 Add X1, X31, 8
	425 Move X0, X24
	426 Move X2, X31
	427 Call Monitor.Enter, X0, X1
	428 Move X0, [X19+424]
	429 Compare X0, 0
	430 JumpIfEqual {447}
	431 Move X2, [X27]
	432 Move X1, X22
	433 Call Queue`1<Object>.Enqueue, X0, X1
	434 Move X21, X31
	435 Move W23, 31
	436 Move W8, [X31+8]
	437 Compare W8, 0
	438 JumpIfEqual {442}
	439 Move X0, X24
	440 Move X1, X31
	441 Call Monitor.Exit, X0
	442 Compare X21, 0
	443 JumpIfNotEqual {514}
	444 NotImplemented "Instruction CMP not yet implemented."
	445 Compare W23, 0
	446 JumpIfEqual {380}
	447 Call 0x1C17F20
	448 Move X25, X1
	449 Move X23, X0
	450 NotImplemented "Instruction CMP not yet implemented."
	451 Move X0, X23
	452 Call 0x3EB2AD0
	453 Move X21, [X0]
	454 Call 0x3EB2AE0
	455 Move W23, W31
	456 Move TEMP, X28
	457 And TEMP, TEMP, 1
	458 Compare TEMP, 1
	459 JumpIfNotEqual {465}
	460 Add X0, X19, 304
	461 Move W1, 1
	462 Move W2, W31
	463 Move X3, X31
	464 Call Interlocked.CompareExchange, X0, X1, X2
	465 Move X20, [X31+112]
	466 Move X19, [X31+120]
	467 Move X22, [X31+96]
	468 Move X21, [X31+104]
	469 Move X24, [X31+80]
	470 Move X23, [X31+88]
	471 Move X26, [X31+64]
	472 Move X25, [X31+72]
	473 Move X28, [X31+48]
	474 Move X27, [X31+56]
	475 Move X30, [X31+32]
	476 Add X31, X31, 128
	477 Return 
	478 Move W9, [X19+88]
	479 Move W10, [X19+64]
	480 Add W9, W9, 1
	481 Move [X19+88], W9
	482 Compare W10, 0
	483 JumpIfEqual {465}
	484 Move X9, [X19+16]
	485 Compare X9, 0
	486 JumpIfEqual {547}
	487 Move W9, [X9+64]
	488 NotImplemented "Instruction CMP not yet implemented."
	489 Move X22, 0xC04000
	490 Move X22, [X22+1824]
	491 Move [X31+4], W8
	492 Move X0, [X22]
	493 Add X1, X31, 4
	494 Call 0x1C17E04
	495 Move X20, X0
	496 Move X0, [X22]
	497 Move [X31], W21
	498 Add X1, X31, 0
	499 Call 0x1C17E04
	500 Move X8, 0xC3C000
	501 Move X8, [X8+2576]
	502 Move X2, X0
	503 Move X0, [X8]
	504 Move X1, X20
	505 Move X3, X31
	506 Call String.Format, X0, X1, X2
	507 Move X2, X0
	508 Move W1, 3
	509 Move X0, X19
	510 Call PeerBase.EnqueueDebugReturn, X0, X1, X2
	511 Call 0x1C17F20
	512 Call 0x1C17F20
	513 Call 0x1C17F20
	514 Move X0, X21
	515 Call 0x1C17F18
	516 Call 0x1C17F20
	517 Call 0x1C17F20
	518 Call 0x1C17F20
	519 Call 0x1C17F20
	520 Call 0x1C17F20
	521 Call 0x1C17F20
	522 Call 0x1C17F28
	523 Call 0x1C17F20
	524 Call 0x1C17F20
	525 Call 0x1C17F20
	526 Call 0x1C17F28
	527 Move X21, X31
	528 Move W8, [X31+8]
	529 Compare W8, 0
	530 JumpIfEqual {534}
	531 Move X0, X24
	532 Move X1, X31
	533 Call Monitor.Exit, X0
	534 Compare X21, 0
	535 JumpIfEqual {572}
	536 Move X0, X21
	537 Call 0x1C17F18
	538 Call 0x1C17F20
	539 Call 0x1C17F20
	540 Call 0x1C17F20
	541 Call 0x1C17F28
	542 Call 0x1C17F20
	543 Call 0x1C17F20
	544 Call 0x1C17F20
	545 Move X0, X21
	546 Call 0x1C17F18
	547 Call 0x1C17F20
	548 Move X25, X1
	549 Move X23, X0
	550 Move X25, X1
	551 NotImplemented "Instruction CMP not yet implemented."
	552 Move X23, X0
	553 Move X0, X23
	554 Call 0x3EB2AD0
	555 Move X21, [X0]
	556 Call 0x3EB2AE0
	557 Move X21, X31
	558 Move W8, [X31+16]
	559 Compare W8, 0
	560 JumpIfEqual {564}
	561 Move X0, X24
	562 Move X1, X31
	563 Call Monitor.Exit, X0
	564 Compare X21, 0
	565 JumpIfEqual {572}
	566 Move X0, X21
	567 Call 0x1C17F18
	568 Move X25, X1
	569 Move X23, X0
	570 Move X25, X1
	571 Move X23, X0
	572 NotImplemented "Instruction CMP not yet implemented."
	573 Move X0, X23
	574 Call 0x3EB2AD0
	575 Move X20, X0
	576 Move X0, 0xBFC000
	577 Move X0, [X0+2000]
	578 Call 0x1C17D08
	579 Move X8, [X20]
	580 Move X1, [X8]
	581 Call 0x1C18270
	582 Move TEMP, X0
	583 And TEMP, TEMP, 1
	584 Compare TEMP, 1
	585 JumpIfNotEqual {615}
	586 Move X20, [X20]
	587 Call 0x3EB2AE0
	588 Move X8, [X19+16]
	589 Compare X8, 0
	590 JumpIfEqual {614}
	591 Move W8, [X8+64]
	592 Compare W8, 0
	593 JumpIfEqual {604}
	594 Move X0, 0xC3C000
	595 Move X0, [X0+2592]
	596 Call 0x1C17D08
	597 Move X1, X20
	598 Move X2, X31
	599 Call String.Format, X0, X1
	600 Move X2, X0
	601 Move W1, 1
	602 Move X0, X19
	603 Call PeerBase.EnqueueDebugReturn, X0, X1, X2
	604 Move X0, 0xC04000
	605 Move X0, [X0+3680]
	606 Call 0x1C17D08
	607 Move W8, [X0+224]
	608 Compare W8, 0
	609 JumpIfNotEqual {611}
	610 Call 0x1C17DFC
	611 Move X0, X20
	612 Move X1, X31
	613 Call SupportClass.WriteStackTrace, X0
	614 Call 0x1C17F20
	615 Move W0, 8
	616 Call 0x3EB2AF0
	617 Move X8, [X20]
	618 Move [X0], X8
	619 Move X1, 0x9BD000
	620 Add X1, X1, 3672
	621 Move X2, X31
	622 Call 0x3EB2B00
	623 Move X23, X0
	624 Call 0x3EB2AE0
	625 Move X0, X23
	626 Call 0x1D2D690
	627 Call 0x1991590

Method: System.Void ExecuteCommand(ExitGames.Client.Photon.NCommand command)

Disassembly:
	0x034F2F80 ADRP X0, 0xC41000
	0x034F2F84 LDR X0, [X0 + 0x920]
	0x034F2F88 BL 0x1C16CF4
	0x034F2F8C MOVZ W8, 0x1
	0x034F2F90 STRB W8, [X19 + 0xA27]
	0x034F2F94 STRB W31, [X31 + 0x28]
	0x034F2F98 STRB W31, [X31 + 0x24]
	0x034F2F9C LDRB W8, [X20 + 0x40]
	0x034F2FA0 CBZ W8, 0x34F33C4
	0x034F2FA4 LDR X8, [X20 + 0x28]
	0x034F2FA8 CBZ X8, 0x34F33C4
	0x034F2FAC LDR W8, [X8 + 0x1C]
	0x034F2FB0 CMP W8, 0x2
	0x034F2FB4 B.NE 0x34F33C4
	0x034F2FB8 LDR X19, [X20 + 0x158]
	0x034F2FBC STRB W31, [X31 + 0x2C]
	0x034F2FC0 ADD X1, X31, 0x2C
	0x034F2FC4 MOV X0, X19
	0x034F2FC8 MOV X2, X31
	0x034F2FCC BL 0x33DE64C
	0x034F2FD0 MOV X0, X20
	0x034F2FD4 BL 0x34F2ECC
	0x034F2FD8 LDR X22, [X20 + 0x138]
	0x034F2FDC STR W0, [X20 + 0x160]
	0x034F2FE0 STRB W31, [X20 + 0x150]
	0x034F2FE4 STRB W31, [X31 + 0x28]
	0x034F2FE8 ADD X1, X31, 0x28
	0x034F2FEC MOV X0, X22
	0x034F2FF0 MOV X2, X31
	0x034F2FF4 BL 0x33DE64C
	0x034F2FF8 MOV X0, X20
	0x034F2FFC BL 0x34F3734
	0x034F3000 MOV W23, W0
	0x034F3004 LDR X0, [X20 + 0xC0]
	0x034F3008 CBZ X0, 0x34F34C0
	0x034F300C MOV X1, X31
	0x034F3010 BL 0x364C19C
	0x034F3014 MOV X25, X31
	0x034F3018 STR W0, [X20 + 0xD4]
	0x034F301C MOVZ W21, 0x7
	0x034F3020 LDRB W8, [X31 + 0x28]
	0x034F3024 CBZ W8, 0x34F3034
	0x034F3028 MOV X0, X22
	0x034F302C MOV X1, X31
	0x034F3030 BL 0x33E14E4
	0x034F3034 CBNZ X25, 0x34F34C4
	0x034F3038 CMP W21, 0x7
	0x034F303C B.EQ 0x34F3044
	0x034F3040 CBNZ W21, 0x34F3488
	0x034F3044 LDR X0, [X20 + 0xC0]
	0x034F3048 CBZ X0, 0x34F34CC
	0x034F304C MOV X1, X31
	0x034F3050 BL 0x364C19C
	0x034F3054 LDR W8, [X20 + 0xC8]
	0x034F3058 CMP W8, W0
	0x034F305C B.GE 0x34F3424
	0x034F3060 LDR X8, [X20 + 0x128]
	0x034F3064 CBZ X8, 0x34F3544
	0x034F3068 LDR W8, [X8 + 0x18]
	0x034F306C CMP W8, 0x1
	0x034F3070 B.LT 0x34F3424
	0x034F3074 LDR X0, [X20 + 0xC0]
	0x034F3078 CBZ X0, 0x34F3548
	0x034F307C MOV X1, X31
	0x034F3080 BL 0x364C19C
	0x034F3084 MOV X24, X0
	0x034F3088 LDR X0, [X20 + 0x128]
	0x034F308C STR W23, [X31 + 0xC]
	0x034F3090 STRB W31, [X31 + 0x24]
	0x034F3094 ADD X1, X31, 0x24
	0x034F3098 MOV X2, X31
	0x034F309C STR X0, [X31]
	0x034F30A0 BL 0x33DE64C
	0x034F30A4 LDR X0, [X20 + 0x128]
	0x034F30A8 CBZ X0, 0x34F33C0
	0x034F30AC ADRP X22, 0xC40000
	0x034F30B0 ADRP X21, 0xC00000
	0x034F30B4 LDR X22, [X22 + 0x918]
	0x034F30B8 LDR X21, [X21 + 0x758]
	0x034F30BC MOV W28, W31
	0x034F30C0 MOV W23, W31
	0x034F30C4 ADD W29, W24, 0x64
	0x034F30C8 LDR W8, [X0 + 0x18]
	0x034F30CC CMP W23, W8
	0x034F30D0 B.GE 0x34F33EC
	0x034F30D4 LDR X2, [X22]
	0x034F30D8 MOV W1, W23
	0x034F30DC BL 0x301BCCC
	0x034F30E0 MOV X27, X0
	0x034F30E4 CBZ X0, 0x34F34B4
	0x034F30E8 LDR X0, [X20 + 0xC0]
	0x034F30EC CBZ X0, 0x34F34B0
	0x034F30F0 LDR W24, [X27 + 0x3C]
	0x034F30F4 LDR W25, [X27 + 0x44]
	0x034F30F8 MOV X1, X31
	0x034F30FC BL 0x364C19C
	0x034F3100 ADD W8, W25, W24
	0x034F3104 CMP W8, W0
	0x034F3108 B.GE 0x34F3350
	0x034F310C MOVZ W2, 0x1
	0x034F3110 MOV X0, X20
	0x034F3114 MOV X1, X27
	0x034F3118 BL 0x34F39CC
	0x034F311C MOV W26, W0
	0x034F3120 TBZ X0, 0x0, 0x34F335C
	0x034F3124 LDR X8, [X20 + 0x10]
	0x034F3128 CBZ X8, 0x34F34B8
	0x034F312C LDRB W9, [X8 + 0x40]
	0x034F3130 CMP W9, 0x4
	0x034F3134 B.LS 0x34F33A8
	0x034F3138 LDR X24, [X8 + 0x48]
	0x034F313C ADRP X8, 0xC00000
	0x034F3140 LDR X8, [X8 + 0x9D0]
	0x034F3144 LDR X0, [X8]
	0x034F3148 MOVZ W1, 0x6
	0x034F314C BL 0x1C16D6C
	0x034F3150 MOV X25, X0
	0x034F3154 CBZ X0, 0x34F34E4
	0x034F3158 LDR X8, [X25]
	0x034F315C LDR X1, [X8 + 0x40]
	0x034F3160 MOV X0, X27
	0x034F3164 BL 0x1C16E00
	0x034F3168 CBZ X0, 0x34F34D8
	0x034F316C LDR W8, [X25 + 0x18]
	0x034F3170 CBZ W8, 0x34F34EC
	0x034F3174 STR X27, [X25 + 0x20]
	0x034F3178 LDR X0, [X20 + 0xC0]
	0x034F317C CBZ X0, 0x34F34F8
	0x034F3180 MOV X1, X31
	0x034F3184 BL 0x364C19C
	0x034F3188 LDR X8, [X21]
	0x034F318C STR W0, [X31 + 0x20]
	0x034F3190 ADD X1, X31, 0x20
	0x034F3194 MOV X0, X8
	0x034F3198 BL 0x1C16E04
	0x034F319C MOV X27, X0
	0x034F31A0 CBZ X0, 0x34F31B8
	0x034F31A4 LDR X8, [X25]
	0x034F31A8 LDR X1, [X8 + 0x40]
	0x034F31AC MOV X0, X27
	0x034F31B0 BL 0x1C16E00
	0x034F31B4 CBZ X0, 0x34F351C
	0x034F31B8 LDR W8, [X25 + 0x18]
	0x034F31BC CMP W8, 0x1
	0x034F31C0 B.LS 0x34F34FC
	0x034F31C4 STR X27, [X25 + 0x28]
	0x034F31C8 LDR W8, [X20 + 0x74]
	0x034F31CC LDR X0, [X21]
	0x034F31D0 STR W8, [X31 + 0x1C]
	0x034F31D4 ADD X1, X31, 0x1C
	0x034F31D8 BL 0x1C16E04
	0x034F31DC MOV X27, X0
	0x034F31E0 CBZ X0, 0x34F31F8
	0x034F31E4 LDR X8, [X25]
	0x034F31E8 LDR X1, [X8 + 0x40]
	0x034F31EC MOV X0, X27
	0x034F31F0 BL 0x1C16E00
	0x034F31F4 CBZ X0, 0x34F3534
	0x034F31F8 LDR W8, [X25 + 0x18]
	0x034F31FC CMP W8, 0x2
	0x034F3200 B.LS 0x34F3500
	0x034F3204 STR X27, [X25 + 0x30]
	0x034F3208 LDR W8, [X20 + 0x78]
	0x034F320C LDR X0, [X21]
	0x034F3210 STR W8, [X31 + 0x18]
	0x034F3214 ADD X1, X31, 0x18
	0x034F3218 BL 0x1C16E04
	0x034F321C MOV X27, X0
	0x034F3220 CBZ X0, 0x34F3238
	0x034F3224 LDR X8, [X25]
	0x034F3228 LDR X1, [X8 + 0x40]
	0x034F322C MOV X0, X27
	0x034F3230 BL 0x1C16E00
	0x034F3234 CBZ X0, 0x34F3504
	0x034F3238 LDR W8, [X25 + 0x18]
	0x034F323C CMP W8, 0x3
	0x034F3240 B.LS 0x34F34F0
	0x034F3244 STR X27, [X25 + 0x38]
	0x034F3248 LDR X0, [X20 + 0xC0]
	0x034F324C CBZ X0, 0x34F34E8
	0x034F3250 MOV X1, X31
	0x034F3254 BL 0x364C19C
	0x034F3258 LDR W9, [X20 + 0x88]
	0x034F325C LDR X8, [X21]
	0x034F3260 SUB W9, W0, W9
	0x034F3264 STR W9, [X31 + 0x14]
	0x034F3268 ADD X1, X31, 0x14
	0x034F326C MOV X0, X8
	0x034F3270 BL 0x1C16E04
	0x034F3274 MOV X27, X0
	0x034F3278 CBZ X0, 0x34F3290
	0x034F327C LDR X8, [X25]
	0x034F3280 LDR X1, [X8 + 0x40]
	0x034F3284 MOV X0, X27
	0x034F3288 BL 0x1C16E00
	0x034F328C CBZ X0, 0x34F3528
	0x034F3290 LDR W8, [X25 + 0x18]
	0x034F3294 CMP W8, 0x4
	0x034F3298 B.LS 0x34F34F4
	0x034F329C STR X27, [X25 + 0x40]
	0x034F32A0 ADRP X8, 0xC00000
	0x034F32A4 LDR X8, [X8 + 0xB58]
	0x034F32A8 LDR X0, [X8]
	0x034F32AC AND W8, W26, 0x1
	0x034F32B0 STRB W8, [X31 + 0x10]
	0x034F32B4 ADD X1, X31, 0x10
	0x034F32B8 BL 0x1C16E04
	0x034F32BC MOV X26, X0
	0x034F32C0 CBZ X0, 0x34F32D8
	0x034F32C4 LDR X8, [X25]
	0x034F32C8 LDR X1, [X8 + 0x40]
	0x034F32CC MOV X0, X26
	0x034F32D0 BL 0x1C16E00
	0x034F32D4 CBZ X0, 0x34F3510
	0x034F32D8 LDR W8, [X25 + 0x18]
	0x034F32DC CMP W8, 0x5
	0x034F32E0 B.LS 0x34F34D0
	0x034F32E4 STR X26, [X25 + 0x48]
	0x034F32E8 ADRP X8, 0xC40000
	0x034F32EC LDR X8, [X8 + 0x920]
	0x034F32F0 LDR X0, [X8]
	0x034F32F4 MOV X1, X25
	0x034F32F8 MOV X2, X31
	0x034F32FC BL 0x3227C5C
	0x034F3300 CBZ X24, 0x34F34D4
	0x034F3304 LDR X8, [X24]
	0x034F3308 ADRP X10, 0xC08000
	0x034F330C MOV X25, X0
	0x034F3310 LDRH W9, [X8 + 0x12E]
	0x034F3314 LDR X10, [X10 + 0xBC8]
	0x034F3318 LDR X1, [X10]
	0x034F331C CBZ X9, 0x34F3340
	0x034F3320 LDR X10, [X8 + 0xB0]
	0x034F3324 ADD X10, X10, 0x8
	0x034F3328 LDUR X11, [X10 - 0x8]
	0x034F332C CMP X11, X1
	0x034F3330 B.EQ 0x34F3388
	0x034F3334 SUBS X9, X9, 0x1
	0x034F3338 ADD X10, X10, 0x10
	0x034F333C B.NE 0x34F3328
	0x034F3340 MOV X0, X24
	0x034F3344 MOV W2, W31
	0x034F3348 BL 0x1C5C788
	0x034F334C B 0x34F3394
	0x034F3350 CMP W8, W29
	0x034F3354 CSEL W29, W8, W29, LT
	0x034F3358 B 0x34F33B4
	0x034F335C LDR X0, [X20 + 0x10]
	0x034F3360 CBZ X0, 0x34F34BC
	0x034F3364 LDR W29, [X20 + 0xC8]
	0x034F3368 MOV X1, X31
	0x034F336C BL 0x350243C
	0x034F3370 LDR W8, [X20 + 0x160]
	0x034F3374 ADD W28, W28, 0x1
	0x034F3378 SUB W8, W0, W8
	0x034F337C CMP W8, 0x50
	0x034F3380 B.GE 0x34F33B4
	0x034F3384 B 0x34F33EC
	0x034F3388 LDRSW X9, [X10]
	0x034F338C ADD X8, X8, X9, 0x4, LSL
	0x034F3390 ADD X0, X8, 0x138
	0x034F3394 LDP X8, X3, [X0]
	0x034F3398 MOVZ W1, 0x5
	0x034F339C MOV X0, X24
	0x034F33A0 MOV X2, X25
	0x034F33A4 BLR X8
	0x034F33A8 LDR W8, [X20 + 0x178]
	0x034F33AC ADD W8, W8, 0x1
	0x034F33B0 STR W8, [X20 + 0x178]
	0x034F33B4 LDR X0, [X20 + 0x128]
	0x034F33B8 ADD W23, W23, 0x1
	0x034F33BC CBNZ X0, 0x34F30C8
	0x034F33C0 BL 0x1C16F20
	0x034F33C4 MOV W21, W31
	0x034F33C8 MOV W0, W21
	0x034F33CC LDP X20, X19, [X31 + 0x80]
	0x034F33D0 LDP X22, X21, [X31 + 0x70]
	0x034F33D4 LDP X24, X23, [X31 + 0x60]
	0x034F33D8 LDP X26, X25, [X31 + 0x50]
	0x034F33DC LDP X28, X27, [X31 + 0x40]
	0x034F33E0 LDP X29, X30, [X31 + 0x30]
	0x034F33E4 ADD X31, X31, 0x90
	0x034F33E8 RET
	0x034F33EC LDR W23, [X31 + 0xC]
	0x034F33F0 MOV X25, X31
	0x034F33F4 STR W29, [X20 + 0xC8]
	0x034F33F8 MOVZ W21, 0x14
	0x034F33FC ADD W23, W28, W23
	0x034F3400 LDRB W8, [X31 + 0x24]
	0x034F3404 CBZ W8, 0x34F3414
	0x034F3408 LDR X0, [X31]
	0x034F340C MOV X1, X31
	0x034F3410 BL 0x33E14E4
	0x034F3414 CBNZ X25, 0x34F354C
	0x034F3418 CMP W21, 0x14
	0x034F341C B.EQ 0x34F3424
	0x034F3420 CBNZ W21, 0x34F3488
	0x034F3424 LDRB W8, [X20 + 0x150]
	0x034F3428 CBZ W8, 0x34F3488
	0x034F342C LDR X0, [X20 + 0x10]
	0x034F3430 CBZ X0, 0x34F3540
	0x034F3434 MOV X1, X31
	0x034F3438 BL 0x350257C
	0x034F343C TBZ X0, 0x0, 0x34F3468
	0x034F3440 LDR X8, [X20 + 0x10]
	0x034F3444 CBZ X8, 0x34F3554
	0x034F3448 LDR X8, [X8 + 0xA8]
	0x034F344C CBZ X8, 0x34F3558
	0x034F3450 LDP W9, W10, [X8 + 0x24]
	0x034F3454 ADD W9, W9, 0x1
	0x034F3458 STR W9, [X8 + 0x24]
	0x034F345C LDRB W9, [X20 + 0x150]
	0x034F3460 ADD W9, W10, W9
	0x034F3464 STR W9, [X8 + 0x28]
	0x034F3468 LDR X1, [X20 + 0x158]
	0x034F346C LDR W2, [X20 + 0x160]
	0x034F3470 MOV X0, X20
	0x034F3474 BL 0x34F3B14
	0x034F3478 CMP W23, 0x0
	0x034F347C MOV X20, X31
	0x034F3480 CSET W21, GT
	0x034F3484 B 0x34F3490
	0x034F3488 MOV X20, X31
	0x034F348C MOV W21, W31
	0x034F3490 LDRB W8, [X31 + 0x2C]
	0x034F3494 CBZ W8, 0x34F34A4
	0x034F3498 MOV X0, X19
	0x034F349C MOV X1, X31
	0x034F34A0 BL 0x33E14E4
	0x034F34A4 CBZ X20, 0x34F33C8
	0x034F34A8 MOV X0, X20
	0x034F34AC BL 0x1C16F18
	0x034F34B0 BL 0x1C16F20
	0x034F34B4 BL 0x1C16F20
	0x034F34B8 BL 0x1C16F20
	0x034F34BC BL 0x1C16F20
	0x034F34C0 BL 0x1C16F20
	0x034F34C4 MOV X0, X25
	0x034F34C8 BL 0x1C16F18
	0x034F34CC BL 0x1C16F20
	0x034F34D0 BL 0x1C16F28
	0x034F34D4 BL 0x1C16F20
	0x034F34D8 BL 0x1C16F44
	0x034F34DC MOV X1, X31
	0x034F34E0 BL 0x1C16DEC
	0x034F34E4 BL 0x1C16F20
	0x034F34E8 BL 0x1C16F20
	0x034F34EC BL 0x1C16F28
	0x034F34F0 BL 0x1C16F28
	0x034F34F4 BL 0x1C16F28
	0x034F34F8 BL 0x1C16F20
	0x034F34FC BL 0x1C16F28
	0x034F3500 BL 0x1C16F28
	0x034F3504 BL 0x1C16F44
	0x034F3508 MOV X1, X31
	0x034F350C BL 0x1C16DEC
	0x034F3510 BL 0x1C16F44
	0x034F3514 MOV X1, X31
	0x034F3518 BL 0x1C16DEC
	0x034F351C BL 0x1C16F44
	0x034F3520 MOV X1, X31
	0x034F3524 BL 0x1C16DEC
	0x034F3528 BL 0x1C16F44
	0x034F352C MOV X1, X31
	0x034F3530 BL 0x1C16DEC
	0x034F3534 BL 0x1C16F44
	0x034F3538 MOV X1, X31
	0x034F353C BL 0x1C16DEC
	0x034F3540 BL 0x1C16F20
	0x034F3544 BL 0x1C16F20
	0x034F3548 BL 0x1C16F20
	0x034F354C MOV X0, X25
	0x034F3550 BL 0x1C16F18
	0x034F3554 BL 0x1C16F20
	0x034F3558 BL 0x1C16F20
	0x034F355C B 0x34F35EC
	0x034F3560 B 0x34F35EC
	0x034F3564 B 0x34F3674
	0x034F3568 B 0x34F35EC
	0x034F356C B 0x34F35EC
	0x034F3570 B 0x34F35EC
	0x034F3574 B 0x34F35EC
	0x034F3578 B 0x34F3674
	0x034F357C B 0x34F3674
	0x034F3580 B 0x34F3674
	0x034F3584 B 0x34F3674
	0x034F3588 B 0x34F3674
	0x034F358C B 0x34F3674
	0x034F3590 B 0x34F3674
	0x034F3594 B 0x34F35EC
	0x034F3598 B 0x34F359C
	0x034F359C MOV X23, X1
	0x034F35A0 MOV X24, X0
	0x034F35A4 MOV W26, W31
	0x034F35A8 B 0x34F360C
	0x034F35AC B 0x34F35EC
	0x034F35B0 B 0x34F35EC
	0x034F35B4 B 0x34F3674
	0x034F35B8 B 0x34F3674
	0x034F35BC B 0x34F3674
	0x034F35C0 B 0x34F3674
	0x034F35C4 B 0x34F3674
	0x034F35C8 B 0x34F3674
	0x034F35CC B 0x34F3674
	0x034F35D0 B 0x34F3674
	0x034F35D4 B 0x34F3674
	0x034F35D8 B 0x34F3674
	0x034F35DC B 0x34F3674
	0x034F35E0 B 0x34F3674
	0x034F35E4 B 0x34F3674
	0x034F35E8 B 0x34F35EC
	0x034F35EC MOV X23, X1
	0x034F35F0 MOV X24, X0
	0x034F35F4 B 0x34F36BC
	0x034F35F8 B 0x34F3674
	0x034F35FC B 0x34F3674
	0x034F3600 MOV W26, W23
	0x034F3604 MOV X23, X1
	0x034F3608 MOV X24, X0
	0x034F360C CMP W23, 0x1
	0x034F3610 B.NE 0x34F3630
	0x034F3614 MOV X0, X24
	0x034F3618 BL 0x3EB1AD0
	0x034F361C LDR X25, [X0]
	0x034F3620 BL 0x3EB1AE0
	0x034F3624 MOV W21, W31
	0x034F3628 MOV W23, W26
	0x034F362C B 0x34F3020
	0x034F3630 MOV X25, X31
	0x034F3634 LDRB W8, [X31 + 0x28]
	0x034F3638 CBZ W8, 0x34F3648
	0x034F363C MOV X0, X22
	0x034F3640 MOV X1, X31
	0x034F3644 BL 0x33E14E4
	0x034F3648 CBZ X25, 0x34F36BC
	0x034F364C MOV X0, X25
	0x034F3650 BL 0x1C16F18
	0x034F3654 MOV X23, X1
	0x034F3658 MOV X24, X0
	0x034F365C B 0x34F3634
	0x034F3660 B 0x34F3674
	0x034F3664 B 0x34F3674
	0x034F3668 B 0x34F3674
	0x034F366C B 0x34F3674
	0x034F3670 B 0x34F3674
	0x034F3674 MOV X23, X1
	0x034F3678 MOV X24, X0
	0x034F367C CMP W23, 0x1
	0x034F3680 B.NE 0x34F36A0
	0x034F3684 MOV X0, X24
	0x034F3688 BL 0x3EB1AD0
	0x034F368C LDR X25, [X0]
	0x034F3690 BL 0x3EB1AE0
	0x034F3694 LDR W23, [X31 + 0xC]
	0x034F3698 MOV W21, W31
	0x034F369C B 0x34F3400
	0x034F36A0 MOV X25, X31
	0x034F36A4 LDRB W8, [X31 + 0x24]
	0x034F36A8 CBZ W8, 0x34F36B8
	0x034F36AC LDR X0, [X31]
	0x034F36B0 MOV X1, X31
	0x034F36B4 BL 0x33E14E4
	0x034F36B8 CBNZ X25, 0x34F36E0
	0x034F36BC CMP W23, 0x1
	0x034F36C0 B.NE 0x34F36D8
	0x034F36C4 MOV X0, X24
	0x034F36C8 BL 0x3EB1AD0
	0x034F36CC LDR X20, [X0]
	0x034F36D0 BL 0x3EB1AE0
	0x034F36D4 B 0x34F348C
	0x034F36D8 MOV X20, X31
	0x034F36DC B 0x34F36F8
	0x034F36E0 MOV X0, X25
	0x034F36E4 BL 0x1C16F18
	0x034F36E8 MOV X23, X1
	0x034F36EC MOV X24, X0
	0x034F36F0 B 0x34F36A4
	0x034F36F4 MOV X24, X0
	0x034F36F8 LDRB W8, [X31 + 0x2C]
	0x034F36FC CBZ W8, 0x34F370C
	0x034F3700 MOV X0, X19
	0x034F3704 MOV X1, X31
	0x034F3708 BL 0x33E14E4
	0x034F370C CBNZ X20, 0x34F3718
	0x034F3710 MOV X0, X24
	0x034F3714 BL 0x1D2C690
	0x034F3718 MOV X0, X20
	0x034F371C BL 0x1C16F18
	0x034F3720 BL 0x1990590
	0x034F3724 LDR W8, [X0 + 0x1C]
	0x034F3728 CMP W8, 0x2
	0x034F372C CSET W0, EQ
	0x034F3730 RET
	0x034F3734 SUB X31, X31, 0x30
	0x034F3738 STP X30, X21, [X31 + 0x10]
	0x034F373C STP X20, X19, [X31 + 0x20]
	0x034F3740 ADRP X20, 0xEEC000
	0x034F3744 LDRB W8, [X20 + 0xA2B]
	0x034F3748 MOV X19, X0
	0x034F374C TBNZ X8, 0x0, 0x34F377C
	0x034F3750 ADRP X0, 0xC08000
	0x034F3754 LDR X0, [X0 + 0xBC8]
	0x034F3758 BL 0x1C16CF4
	0x034F375C ADRP X0, 0xC40000
	0x034F3760 LDR X0, [X0 + 0x928]
	0x034F3764 BL 0x1C16CF4
	0x034F3768 ADRP X0, 0xC40000
	0x034F376C LDR X0, [X0 + 0x930]
	0x034F3770 BL 0x1C16CF4
	0x034F3774 MOVZ W8, 0x1
	0x034F3778 STRB W8, [X20 + 0xA2B]
	0x034F377C STR X31, [X31 + 0x8]
	0x034F3780 LDR X0, [X19 + 0x138]
	0x034F3784 CBZ X0, 0x34F39A8
	0x034F3788 MOV X1, X31
	0x034F378C MOV W2, W31
	0x034F3790 MOV X3, X31
	0x034F3794 BL 0x351EDC4
	0x034F3798 LDR X0, [X19 + 0x138]
	0x034F379C CBZ X0, 0x34F39A8
	0x034F37A0 ADD X20, X19, 0x150
	0x034F37A4 MOV X1, X31
	0x034F37A8 BL 0x3517FD4
	0x034F37AC LDR X8, [X19 + 0x138]
	0x034F37B0 CBZ X8, 0x34F39A8
	0x034F37B4 MOV W21, W0
	0x034F37B8 MOV X0, X8
	0x034F37BC MOV X1, X31
	0x034F37C0 BL 0x351806C
	0x034F37C4 ADD W8, W21, 0x14
	0x034F37C8 CMP W8, W0
	0x034F37CC B.GT 0x34F393C
	0x034F37D0 LDR W8, [X19 + 0x160]
	0x034F37D4 MOV X0, X19
	0x034F37D8 ADD W1, W8, 0x14
	0x034F37DC BL 0x34F2DFC
	0x034F37E0 LDR X8, [X19 + 0x10]
	0x034F37E4 CBZ X8, 0x34F39A8
	0x034F37E8 MOV W21, W0
	0x034F37EC MOV X0, X8
	0x034F37F0 MOV X1, X31
	0x034F37F4 BL 0x350243C
	0x034F37F8 CMP W21, W0
	0x034F37FC B.GT 0x34F3854
	0x034F3800 LDR X0, [X19 + 0x138]
	0x034F3804 CBZ X0, 0x34F39A8
	0x034F3808 ADD X2, X31, 0xC
	0x034F380C MOVZ W1, 0x14
	0x034F3810 MOV X3, X31
	0x034F3814 BL 0x351ECA4
	0x034F3818 LDR W1, [X31 + 0xC]
	0x034F381C LDR X2, [X19 + 0x158]
	0x034F3820 LDR W3, [X19 + 0x160]
	0x034F3824 MOVZ W4, 0x14
	0x034F3828 MOV X5, X31
	0x034F382C BL 0x33A8A9C
	0x034F3830 LDR W8, [X19 + 0x160]
	0x034F3834 LDRB W9, [X19 + 0x150]
	0x034F3838 LDR X0, [X19 + 0x138]
	0x034F383C ADD W8, W8, 0x14
	0x034F3840 ADD W9, W9, 0x1
	0x034F3844 STR W8, [X19 + 0x160]
	0x034F3848 STRB W9, [X19 + 0x150]
	0x034F384C CBNZ X0, 0x34F37A4
	0x034F3850 B 0x34F39A8
	0x034F3854 LDR X8, [X19 + 0x10]
	0x034F3858 CBZ X8, 0x34F39A8
	0x034F385C LDRB W9, [X8 + 0x40]
	0x034F3860 CMP W9, 0x5
	0x034F3864 B.CC 0x34F393C
	0x034F3868 LDR X21, [X8 + 0x48]
	0x034F386C MOV X0, X20
	0x034F3870 MOV X1, X31
	0x034F3874 BL 0x3319BB4
	0x034F3878 LDR X8, [X19 + 0x138]
	0x034F387C CBZ X8, 0x34F39A8
	0x034F3880 MOV X20, X0
	0x034F3884 MOV X0, X8
	0x034F3888 MOV X1, X31
	0x034F388C BL 0x3517FD4
	0x034F3890 STR W0, [X31 + 0x8]
	0x034F3894 ADD X0, X31, 0x8
	0x034F3898 MOV X1, X31
	0x034F389C BL 0x337B6E0
	0x034F38A0 ADRP X8, 0xC40000
	0x034F38A4 LDR X8, [X8 + 0x928]
	0x034F38A8 ADRP X9, 0xC40000
	0x034F38AC LDR X9, [X9 + 0x930]
	0x034F38B0 MOV X3, X0
	0x034F38B4 LDR X8, [X8]
	0x034F38B8 MOV X1, X20
	0x034F38BC LDR X2, [X9]
	0x034F38C0 MOV X4, X31
	0x034F38C4 MOV X0, X8
	0x034F38C8 BL 0x32277C4
	0x034F38CC CBZ X21, 0x34F39A8
	0x034F38D0 ADRP X10, 0xC08000
	0x034F38D4 LDR X8, [X21]
	0x034F38D8 LDR X10, [X10 + 0xBC8]
	0x034F38DC MOV X20, X0
	0x034F38E0 LDRH W9, [X8 + 0x12E]
	0x034F38E4 LDR X1, [X10]
	0x034F38E8 CBZ X9, 0x34F390C
	0x034F38EC LDR X10, [X8 + 0xB0]
	0x034F38F0 ADD X10, X10, 0x8
	0x034F38F4 LDUR X11, [X10 - 0x8]
	0x034F38F8 CMP X11, X1
	0x034F38FC B.EQ 0x34F391C
	0x034F3900 SUBS X9, X9, 0x1
	0x034F3904 ADD X10, X10, 0x10
	0x034F3908 B.NE 0x34F38F4
	0x034F390C MOV X0, X21
	0x034F3910 MOV W2, W31
	0x034F3914 BL 0x1C5C788
	0x034F3918 B 0x34F3928
	0x034F391C LDRSW X9, [X10]
	0x034F3920 ADD X8, X8, X9, 0x4, LSL
	0x034F3924 ADD X0, X8, 0x138
	0x034F3928 LDP X8, X3, [X0]
	0x034F392C MOVZ W1, 0x5
	0x034F3930 MOV X0, X21
	0x034F3934 MOV X2, X20
	0x034F3938 BLR X8
	0x034F393C LDR X0, [X19 + 0x138]
	0x034F3940 CBZ X0, 0x34F39A8
	0x034F3944 MOV X1, X31
	0x034F3948 BL 0x351EC28
	0x034F394C LDR X20, [X19 + 0x138]
	0x034F3950 CBZ X20, 0x34F39A8
	0x034F3954 MOV X0, X20
	0x034F3958 MOV X1, X31
	0x034F395C BL 0x351806C
	0x034F3960 MOV W1, W0
	0x034F3964 MOV X0, X20
	0x034F3968 MOV X2, X31
	0x034F396C BL 0x3517FDC
	0x034F3970 LDR X0, [X19 + 0x138]
	0x034F3974 CBZ X0, 0x34F39A8
	0x034F3978 MOV X1, X31
	0x034F397C BL 0x351806C
	0x034F3980 MOVZ W8, 0x6667
	0x034F3984 MOVK W8, 0x66660000
	0x034F3988 LDP X20, X19, [X31 + 0x20]
	0x034F398C LDP X30, X21, [X31 + 0x10]
	0x034F3990 SMADDL X8, X0, X8, X31
	0x034F3994 UBFM X9, X8, 0x3F, 0x3F
	0x034F3998 SBFM X8, X8, 0x23, 0x3F
	0x034F399C ADD W0, W8, W9
	0x034F39A0 ADD X31, X31, 0x30
	0x034F39A4 RET
	0x034F39A8 BL 0x1C16F20
	0x034F39AC STR X30, [X31 - 0x10]!
	0x034F39B0 LDR X0, [X0 + 0xC0]
	0x034F39B4 CBZ X0, 0x34F39C8
	0x034F39B8 MOV X1, X31
	0x034F39BC BL 0x364C19C
	0x034F39C0 LDR X30, [X31], #0x10
	0x034F39C4 RET
	0x034F39C8 BL 0x1C16F20
	0x034F39CC STP X30, X25, [X31 - 0x40]!
	0x034F39D0 STP X24, X23, [X31 + 0x10]
	0x034F39D4 STP X22, X21, [X31 + 0x20]
	0x034F39D8 STP X20, X19, [X31 + 0x30]
	0x034F39DC CBZ X1, 0x34F3AF8
	0x034F39E0 LDR W8, [X0 + 0x160]
	0x034F39E4 LDR W9, [X1 + 0x54]
	0x034F39E8 MOV X19, X1
	0x034F39EC MOV W20, W2
	0x034F39F0 MOV X21, X0
	0x034F39F4 ADD W1, W9, W8
	0x034F39F8 BL 0x34F2DFC
	0x034F39FC LDR X8, [X21 + 0x10]
	0x034F3A00 CBZ X8, 0x34F3B10
	0x034F3A04 MOV W22, W0
	0x034F3A08 MOV X0, X8
	0x034F3A0C MOV X1, X31
	0x034F3A10 BL 0x350243C
	0x034F3A14 CMP W22, W0
	0x034F3A18 B.LE 0x34F3A24
	0x034F3A1C MOV W0, W31
	0x034F3A20 B 0x34F3AFC
	0x034F3A24 LDR X1, [X21 + 0x158]
	0x034F3A28 ADD X22, X21, 0x160
	0x034F3A2C MOV X0, X19
	0x034F3A30 MOV X2, X22
	0x034F3A34 BL 0x34F5A88
	0x034F3A38 LDR X0, [X19 + 0x58]
	0x034F3A3C CBZ X0, 0x34F3AC0
	0x034F3A40 MOV X1, X31
	0x034F3A44 BL 0x351806C
	0x034F3A48 CMP W0, 0x1
	0x034F3A4C B.LT 0x34F3AC0
	0x034F3A50 LDR X0, [X19 + 0x58]
	0x034F3A54 CBZ X0, 0x34F3B10
	0x034F3A58 MOV X1, X31
	0x034F3A5C BL 0x3517FCC
	0x034F3A60 LDR X23, [X21 + 0x158]
	0x034F3A64 LDR X8, [X19 + 0x58]
	0x034F3A68 LDR W24, [X21 + 0x160]
	0x034F3A6C MOV X25, X0
	0x034F3A70 CBZ X8, 0x34F3A88
	0x034F3A74 MOV X0, X8
	0x034F3A78 MOV X1, X31
	0x034F3A7C BL 0x351806C
	0x034F3A80 MOV W4, W0
	0x034F3A84 B 0x34F3A8C
	0x034F3A88 MOV W4, W31
	0x034F3A8C MOV X0, X25
	0x034F3A90 MOV W1, W31
	0x034F3A94 MOV X2, X23
	0x034F3A98 MOV W3, W24
	0x034F3A9C MOV X5, X31
	0x034F3AA0 BL 0x33A8A9C
	0x034F3AA4 LDR X0, [X19 + 0x58]
	0x034F3AA8 LDR W23, [X22]
	0x034F3AAC CBZ X0, 0x34F3AB8
	0x034F3AB0 MOV X1, X31
	0x034F3AB4 BL 0x351806C
	0x034F3AB8 ADD W8, W0, W23
	0x034F3ABC STR W8, [X22]
	0x034F3AC0 LDRB W8, [X21 + 0x150]
	0x034F3AC4 ADD W8, W8, 0x1
	0x034F3AC8 STRB W8, [X21 + 0x150]
	0x034F3ACC LDRB W8, [X19 + 0x10]
	0x034F3AD0 TBNZ X8, 0x0, 0x34F3AE8
	0x034F3AD4 MOV X0, X19
	0x034F3AD8 BL 0x34F2C44
	0x034F3ADC MOV X0, X19
	0x034F3AE0 BL 0x34F2CA8
	0x034F3AE4 B 0x34F3AF8
	0x034F3AE8 AND W2, W20, 0x1
	0x034F3AEC MOV X0, X21
	0x034F3AF0 MOV X1, X19
	0x034F3AF4 BL 0x34F5CB4
	0x034F3AF8 MOVZ W0, 0x1
	0x034F3AFC LDP X20, X19, [X31 + 0x30]
	0x034F3B00 LDP X22, X21, [X31 + 0x20]
	0x034F3B04 LDP X24, X23, [X31 + 0x10]
	0x034F3B08 LDP X30, X25, [X31], #0x40
	0x034F3B0C RET
	0x034F3B10 BL 0x1C16F20
	0x034F3B14 SUB X31, X31, 0x40
	0x034F3B18 STP X30, X23, [X31 + 0x10]
	0x034F3B1C STP X22, X21, [X31 + 0x20]
	0x034F3B20 STP X20, X19, [X31 + 0x30]
	0x034F3B24 ADRP X22, 0xEEC000
	0x034F3B28 LDRB W8, [X22 + 0xA2D]
	0x034F3B2C MOV W20, W2
	0x034F3B30 MOV X21, X1
	0x034F3B34 MOV X19, X0
	0x034F3B38 TBNZ X8, 0x0, 0x34F3B5C
	0x034F3B3C ADRP X0, 0xC08000
	0x034F3B40 LDR X0, [X0 + 0xF00]
	0x034F3B44 BL 0x1C16CF4
	0x034F3B48 ADRP X0, 0xC08000
	0x034F3B4C LDR X0, [X0 + 0xE60]
	0x034F3B50 BL 0x1C16CF4
	0x034F3B54 MOVZ W8, 0x1
	0x034F3B58 STRB W8, [X22 + 0xA2D]
	0x034F3B5C STR W31, [X31 + 0xC]
	0x034F3B60 LDRB W8, [X19 + 0x184]
	0x034F3B64 CBZ W8, 0x34F3B7C
	0x034F3B68 MOV X0, X19
	0x034F3B6C MOV X1, X21
	0x034F3B70 MOV W2, W20
	0x034F3B74 BL 0x34F5F48
	0x034F3B78 B 0x34F3CD0
	0x034F3B7C ADRP X23, 0xC08000
	0x034F3B80 LDR X23, [X23 + 0xF00]
	0x034F3B84 STR W31, [X31 + 0xC]
	0x034F3B88 LDRH W22, [X19 + 0x68]
	0x034F3B8C LDR X0, [X23]
	0x034F3B90 LDR W8, [X0 + 0xE0]
	0x034F3B94 CBNZ W8, 0x34F3B9C
	0x034F3B98 BL 0x1C16DFC
	0x034F3B9C ADD X2, X31, 0xC
	0x034F3BA0 MOV W0, W22
	0x034F3BA4 MOV X1, X21
	0x034F3BA8 MOV X3, X31
	0x034F3BAC BL 0x3506760
	0x034F3BB0 LDR X0, [X19 + 0x10]
	0x034F3BB4 CBZ X0, 0x34F3CE4
	0x034F3BB8 MOV X1, X31
	0x034F3BBC BL 0x3501EA4
	0x034F3BC0 ANDS W31, W0, 0x1
	0x034F3BC4 MOVN W8, 0x33
	0x034F3BC8 CSEL W8, W8, W31, NE
	0x034F3BCC CBZ X21, 0x34F3CE8
	0x034F3BD0 LDR W9, [X21 + 0x18]
	0x034F3BD4 CMP W9, 0x2
	0x034F3BD8 B.LS 0x34F3CEC
	0x034F3BDC CMP W9, 0x3
	0x034F3BE0 STRB W8, [X21 + 0x22]
	0x034F3BE4 B.EQ 0x34F3CF0
	0x034F3BE8 LDRB W8, [X19 + 0x150]
	0x034F3BEC MOVZ W9, 0x4
	0x034F3BF0 STRB W8, [X21 + 0x23]
	0x034F3BF4 STR W9, [X31 + 0xC]
	0x034F3BF8 LDR X0, [X19 + 0xC0]
	0x034F3BFC CBZ X0, 0x34F3CF4
	0x034F3C00 MOV X1, X31
	0x034F3C04 BL 0x364C19C
	0x034F3C08 MOV X22, X0
	0x034F3C0C LDR X0, [X23]
	0x034F3C10 LDR W8, [X0 + 0xE0]
	0x034F3C14 CBNZ W8, 0x34F3C1C
	0x034F3C18 BL 0x1C16DFC
	0x034F3C1C ADD X2, X31, 0xC
	0x034F3C20 MOV W0, W22
	0x034F3C24 MOV X1, X21
	0x034F3C28 MOV X3, X31
	0x034F3C2C BL 0x35067BC
	0x034F3C30 LDR W0, [X19 + 0x174]
	0x034F3C34 ADD X2, X31, 0xC
	0x034F3C38 MOV X1, X21
	0x034F3C3C MOV X3, X31
	0x034F3C40 BL 0x35067BC

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+64], X30
	003 Move [X31+72], X25
	004 Move [X31+80], X24
	005 Move [X31+88], X23
	006 Move [X31+96], X22
	007 Move [X31+104], X21
	008 Move [X31+112], X20
	009 Move [X31+120], X19
	010 Move X21, 0xEEE000
	011 Move W8, [X21+2612]
	012 Move X20, X1
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {77}
	018 Move X0, 0xC42000
	019 Move X0, [X0+2120]
	020 Call 0x1C17CF4
	021 Move X0, 0xC42000
	022 Move X0, [X0+2232]
	023 Call 0x1C17CF4
	024 Move X0, 0xC0A000
	025 Move X0, [X0+3016]
	026 Call 0x1C17CF4
	027 Move X0, 0xC42000
	028 Move X0, [X0+2096]
	029 Call 0x1C17CF4
	030 Move X0, 0xC42000
	031 Move X0, [X0+1816]
	032 Call 0x1C17CF4
	033 Move X0, 0xC42000
	034 Move X0, [X0+1912]
	035 Call 0x1C17CF4
	036 Move X0, 0xC42000
	037 Move X0, [X0+1824]
	038 Call 0x1C17CF4
	039 Move X0, 0xC0B000
	040 Move X0, [X0+2984]
	041 Call 0x1C17CF4
	042 Move X0, 0xC01000
	043 Move X0, [X0+2760]
	044 Call 0x1C17CF4
	045 Move X0, 0xC41000
	046 Move X0, [X0+2240]
	047 Call 0x1C17CF4
	048 Move X0, 0xC41000
	049 Move X0, [X0+2248]
	050 Call 0x1C17CF4
	051 Move X0, 0xC41000
	052 Move X0, [X0+2256]
	053 Call 0x1C17CF4
	054 Move X0, 0xC41000
	055 Move X0, [X0+2264]
	056 Call 0x1C17CF4
	057 Move X0, 0xC02000
	058 Move X0, [X0+3784]
	059 Call 0x1C17CF4
	060 Move X0, 0xC41000
	061 Move X0, [X0+2272]
	062 Call 0x1C17CF4
	063 Move X0, 0xC41000
	064 Move X0, [X0+2280]
	065 Call 0x1C17CF4
	066 Move X0, 0xC41000
	067 Move X0, [X0+2288]
	068 Call 0x1C17CF4
	069 Move X0, 0xC41000
	070 Move X0, [X0+2296]
	071 Call 0x1C17CF4
	072 Move X0, 0xC41000
	073 Move X0, [X0+2304]
	074 Call 0x1C17CF4
	075 Move W8, 1
	076 Move [X21+2612], W8
	077 NotImplemented "Instruction STRH not yet implemented."
	078 Move [X31+56], W31
	079 Move [X31+40], X31
	080 Move [X31+48], X31
	081 Move [X31+32], X31
	082 Compare X20, 0
	083 JumpIfEqual {841}
	084 Move W8, [X20+17]
	085 Subtract W8, W8, 1
	086 NotImplemented "Instruction CMP not yet implemented."
	087 Move X9, -43368448
	088 Add X9, X9, 2674
	089 NotImplemented "Instruction ADR not yet implemented."
	090 NotImplemented "Instruction LDRH not yet implemented."
	091 Add X10, X10, X11
	092 CallNoReturn X10
	093 Move X0, [X19+16]
	094 Compare X0, 0
	095 JumpIfEqual {841}
	096 Move X1, X31
	097 Call PhotonPeer.get_TrafficStatsEnabled, X0
	098 Move TEMP, X0
	099 And TEMP, TEMP, 1
	100 Compare TEMP, 1
	101 JumpIfNotEqual {415}
	102 Move X8, [X19+16]
	103 Compare X8, 0
	104 JumpIfEqual {841}
	105 Move X0, [X8+160]
	106 Compare X0, 0
	107 JumpIfEqual {841}
	108 Move W8, [X20+16]
	109 Move W1, [X20+84]
	110 Move X2, X31
	111 Move TEMP, X8
	112 And TEMP, TEMP, 1
	113 Compare TEMP, 1
	114 JumpIfEqual {414}
	115 Call TrafficStats.CountUnreliableOpCommand, X0, X1
	116 Move W8, [X19+64]
	117 NotImplemented "Instruction CMP not yet implemented."
	118 Move X0, [X19+16]
	119 Compare X0, 0
	120 JumpIfEqual {841}
	121 Move X1, X31
	122 Call PhotonPeer.get_TrafficStatsEnabled, X0
	123 Move TEMP, X0
	124 And TEMP, TEMP, 1
	125 Compare TEMP, 1
	126 JumpIfNotEqual {136}
	127 Move X8, [X19+16]
	128 Compare X8, 0
	129 JumpIfEqual {841}
	130 Move X0, [X8+160]
	131 Compare X0, 0
	132 JumpIfEqual {841}
	133 Move W1, [X20+84]
	134 Move X2, X31
	135 Call TrafficStats.CountFragmentOpCommand, X0, X1
	136 Move W9, [X20+40]
	137 Move W8, [X20+44]
	138 NotImplemented "Instruction CMP not yet implemented."
	139 Move W8, [X20+48]
	140 Move W21, [X20+52]
	141 NotImplemented "Instruction CMP not yet implemented."
	142 Move X0, [X20+88]
	143 Compare X0, 0
	144 JumpIfEqual {841}
	145 Move X1, X31
	146 Call StreamBuffer.get_Length, X0
	147 Move W8, [X20+48]
	148 Add W9, W0, W21
	149 NotImplemented "Instruction CMP not yet implemented."
	150 Move X8, [X19+16]
	151 Compare X8, 0
	152 JumpIfEqual {841}
	153 Move W9, [X8+64]
	154 Compare W9, 0
	155 JumpIfEqual {615}
	156 Move X19, [X8+72]
	157 Move X8, 0xC41000
	158 Move X9, [X20]
	159 Move X8, [X8+2256]
	160 Move X0, X20
	161 Move X21, [X8]
	162 Move X8, [X9+360]
	163 Move X1, [X9+368]
	164 NotImplemented "Instruction BLR not yet implemented."
	165 Move X1, X0
	166 Move X0, X21
	167 Move X2, X31
	168 Call String.Concat, X0, X1
	169 Compare X19, 0
	170 JumpIfEqual {841}
	171 Move X10, 0xC09000
	172 Move X8, [X19]
	173 Move X10, [X10+3016]
	174 Move X21, X0
	175 NotImplemented "Instruction LDRH not yet implemented."
	176 Move X1, [X10]
	177 Compare X9, 0
	178 JumpIfEqual {185}
	179 Move X10, [X8+176]
	180 Add X10, X10, 8
	181 NotImplemented "Instruction LDUR not yet implemented."
	182 NotImplemented "Instruction CMP not yet implemented."
	183 Subtract X9, X9, 1
	184 Add X10, X10, 16
	185 Move X0, X19
	186 Move W2, W31
	187 Call 0x1C5D788
	188 Move X0, [X19+16]
	189 Compare X0, 0
	190 JumpIfEqual {841}
	191 Move X1, X31
	192 Call PhotonPeer.get_TrafficStatsEnabled, X0
	193 Move TEMP, X0
	194 And TEMP, TEMP, 1
	195 Compare TEMP, 1
	196 JumpIfNotEqual {615}
	197 Move X8, [X19+16]
	198 Compare X8, 0
	199 JumpIfEqual {841}
	200 Move X0, [X8+160]
	201 Compare X0, 0
	202 JumpIfEqual {841}
	203 Move W1, [X20+84]
	204 Move X2, X31
	205 Call TrafficStats.CountControlCommand, X0, X1
	206 Move X0, [X19+16]
	207 Compare X0, 0
	208 JumpIfEqual {841}
	209 Move X1, X31
	210 Call PhotonPeer.get_TrafficStatsEnabled, X0
	211 Move TEMP, X0
	212 And TEMP, TEMP, 1
	213 Compare TEMP, 1
	214 JumpIfNotEqual {236}
	215 Move X8, [X19+16]
	216 Compare X8, 0
	217 JumpIfEqual {841}
	218 Move X0, [X19+192]
	219 Compare X0, 0
	220 JumpIfEqual {841}
	221 Move X21, [X8+160]
	222 Move X1, X31
	223 Call Stopwatch.get_ElapsedMilliseconds, X0
	224 Compare X21, 0
	225 JumpIfEqual {841}
	226 Move [X21+60], W0
	227 Move X8, [X19+16]
	228 Compare X8, 0
	229 JumpIfEqual {841}
	230 Move X0, [X8+160]
	231 Compare X0, 0
	232 JumpIfEqual {841}
	233 Move W1, [X20+84]
	234 Move X2, X31
	235 Call TrafficStats.CountControlCommand, X0, X1
	236 Move X0, [X19+192]
	237 Compare X0, 0
	238 JumpIfEqual {841}
	239 Move X1, X31
	240 Call Stopwatch.get_ElapsedMilliseconds, X0
	241 Move X8, [X19+192]
	242 Move [X19+204], W0
	243 Compare X8, 0
	244 JumpIfEqual {841}
	245 Move X0, X8
	246 Move X1, X31
	247 Call Stopwatch.get_ElapsedMilliseconds, X0
	248 Move W8, [X20+80]
	249 Move X22, X19
	250 Move W9, 0x2711
	251 Subtract W8, W0, W8
	252 NotImplemented "Instruction CMP not yet implemented."
	253 Move [X22+124], W8
	254 Move X8, [X19+16]
	255 Compare X8, 0
	256 JumpIfEqual {841}
	257 Move W8, [X8+64]
	258 NotImplemented "Instruction CMP not yet implemented."
	259 Move X0, X22
	260 Move X1, X31
	261 Call Int32.ToString, X0
	262 Move X8, 0xC41000
	263 Move X8, [X8+2304]
	264 Move X9, [X20]
	265 Move X10, 0xC41000
	266 Move X10, [X10+2280]
	267 Move X21, [X8]
	268 Move X8, [X9+360]
	269 Move X1, [X9+368]
	270 Move X24, X0
	271 Move X23, [X10]
	272 Move X0, X20
	273 NotImplemented "Instruction BLR not yet implemented."
	274 Move X3, X0
	275 Move X0, X23
	276 Move X1, X24
	277 Move X2, X21
	278 Move X4, X31
	279 Call String.Concat, X0, X1, X2, X3
	280 Move X2, X0
	281 Move W1, 3
	282 Move X0, X19
	283 Call PeerBase.EnqueueDebugReturn, X0, X1, X2
	284 Move W8, [X19+116]
	285 Move W8, W8
	286 ShiftRight W8, 30
	287 And W8, W8, 0x1FFFFFFF
	288 Move [X19+124], W8
	289 Move W8, [X20+17]
	290 Move W1, [X20+76]
	291 Move W2, [X20+18]
	292 Move X0, X19
	293 NotImplemented "Instruction CMP not yet implemented."
	294 NotImplemented "Instruction CSET not yet implemented."
	295 Call EnetPeer.RemoveSentReliableCommand, X0, X1, X2, X3
	296 Move X21, X0
	297 Move X0, X20
	298 Call NCommand.Release, X0
	299 Compare X21, 0
	300 JumpIfEqual {617}
	301 Move X0, X21
	302 Call NCommand.FreePayload, X0
	303 Move W1, [X21+18]
	304 Move X0, X19
	305 Call EnetPeer.GetChannel, X0, X1
	306 Move X20, X0
	307 Move [X31+56], W31
	308 Add X1, X31, 56
	309 Move X2, X31
	310 Call Monitor.Enter, X0, X1
	311 Compare X20, 0
	312 JumpIfEqual {845}
	313 Move W8, [X21+20]
	314 Move W9, [X20+104]
	315 NotImplemented "Instruction CMP not yet implemented."
	316 Move [X20+104], W8
	317 Move W8, [X20+108]
	318 Move X23, X31
	319 Move W24, 28
	320 Subtract W8, W8, 1
	321 Move [X20+108], W8
	322 Move W8, [X31+56]
	323 Compare W8, 0
	324 JumpIfEqual {328}
	325 Move X0, X20
	326 Move X1, X31
	327 Call Monitor.Exit, X0
	328 Compare X23, 0
	329 JumpIfNotEqual {843}
	330 NotImplemented "Instruction CMP not yet implemented."
	331 Compare W24, 0
	332 JumpIfNotEqual {617}
	333 Move W8, [X21+17]
	334 Move W20, [X22]
	335 NotImplemented "Instruction CMP not yet implemented."
	336 Move W8, [X19+116]
	337 NotImplemented "Instruction CMP not yet implemented."
	338 Move X8, [X19]
	339 Move X0, X19
	340 Move X9, [X8+520]
	341 Move X1, [X8+528]
	342 NotImplemented "Instruction BLR not yet implemented."
	343 Move X0, [X19+16]
	344 Compare X0, 0
	345 JumpIfEqual {841}
	346 Move X1, X31
	347 Call PhotonPeer.get_TrafficStatsEnabled, X0
	348 Move TEMP, X0
	349 And TEMP, TEMP, 1
	350 Compare TEMP, 1
	351 JumpIfNotEqual {361}
	352 Move X8, [X19+16]
	353 Compare X8, 0
	354 JumpIfEqual {841}
	355 Move X0, [X8+160]
	356 Compare X0, 0
	357 JumpIfEqual {841}
	358 Move W1, [X20+84]
	359 Move X2, X31
	360 Call TrafficStats.CountControlCommand, X0, X1
	361 Move X23, X20
	362 Add X23, X23, 32
	363 Move W8, [X23]
	364 NotImplemented "Instruction CMP not yet implemented."
	365 NotImplemented "Instruction CMP not yet implemented."
	366 Move W21, 1041
	367 Move X0, [X19+16]
	368 Compare X0, 0
	369 JumpIfEqual {841}
	370 Move X1, X31
	371 Call PhotonPeer.get_TrafficStatsEnabled, X0
	372 Move TEMP, X0
	373 And TEMP, TEMP, 1
	374 Compare TEMP, 1
	375 JumpIfNotEqual {385}
	376 Move X8, [X19+16]
	377 Compare X8, 0
	378 JumpIfEqual {841}
	379 Move X0, [X8+160]
	380 Compare X0, 0
	381 JumpIfEqual {841}
	382 Move W1, [X20+84]
	383 Move X2, X31
	384 Call TrafficStats.CountControlCommand, X0, X1
	385 Move W8, [X19+64]
	386 NotImplemented "Instruction CMP not yet implemented."
	387 Move X0, X19
	388 Call PeerBase.WriteInitRequest, X0
	389 Move X8, 0xC0A000
	390 Move X8, [X8+2984]
	391 Move X21, X0
	392 Move X8, [X8]
	393 Move X0, X8
	394 Call 0x1C17F10
	395 Move X1, X21
	396 Move X2, X31
	397 Move X22, X0
	398 Call StreamBuffer..ctor, X0, X1
	399 Move W1, 6
	400 Move X0, X19
	401 Move X2, X22
	402 Move W3, W31
	403 Call EnetPeer.CreateAndEnqueueCommand, X0, X1, X2, X3
	404 Move X8, [X19+16]
	405 Compare X8, 0
	406 JumpIfEqual {841}
	407 Move W8, [X8+141]
	408 Compare W8, 0
	409 JumpIfEqual {412}
	410 Move X0, X19
	411 Call EnetPeer.ApplyRandomizedSequenceNumbers, X0
	412 Move W8, 3
	413 Move [X19+64], W8
	414 Call TrafficStats.CountReliableOpCommand, X0, X1
	415 Move W8, [X19+64]
	416 NotImplemented "Instruction CMP not yet implemented."
	417 Move X0, X19
	418 Move X1, X20
	419 Call EnetPeer.QueueIncomingCommand, X0, X1
	420 Move TEMP, X0
	421 And TEMP, TEMP, 1
	422 Compare TEMP, 1
	423 JumpIfNotEqual {615}
	424 Move X0, X19
	425 Move W1, W20
	426 Call PeerBase.UpdateRoundTripTimeAndVariance, X0, X1
	427 Move W8, [X21+17]
	428 NotImplemented "Instruction CMP not yet implemented."
	429 NotImplemented "Instruction CMP not yet implemented."
	430 Move W8, [X19+64]
	431 NotImplemented "Instruction CMP not yet implemented."
	432 Move X8, [X19+16]
	433 Compare X8, 0
	434 JumpIfEqual {841}
	435 Move W8, [X8+64]
	436 NotImplemented "Instruction CMP not yet implemented."
	437 Move X8, 0xC41000
	438 Move X8, [X8+2248]
	439 Move W1, 3
	440 Move X0, X19
	441 Move X2, [X8]
	442 Call PeerBase.EnqueueDebugReturn, X0, X1, X2
	443 Move X8, 0xC41000
	444 Move X8, [X8+2096]
	445 Move X0, [X8]
	446 Call 0x1C17F10
	447 Move X8, 0xC41000
	448 Move X8, [X8+2232]
	449 Move X1, X19
	450 Move X3, X31
	451 Move X20, X0
	452 Move X2, [X8]
	453 Call MyAction..ctor, X0, X1, X2
	454 Move X0, X19
	455 Move X1, X20
	456 Call PeerBase.EnqueueActionForDispatch, X0, X1
	457 Move W21, 1043
	458 NotImplemented "Instruction CMP not yet implemented."
	459 Move W8, 1044
	460 Move W9, 1042
	461 NotImplemented "Instruction CSEL not yet implemented."
	462 Move X8, [X19+16]
	463 Compare X8, 0
	464 JumpIfEqual {841}
	465 Move W9, [X8+64]
	466 NotImplemented "Instruction CMP not yet implemented."
	467 Move X22, [X8+72]
	468 Move X8, 0xC01000
	469 Move X8, [X8+2760]
	470 Move W1, 12
	471 Move X0, [X8]
	472 Call 0x1C17D6C
	473 Compare X0, 0
	474 JumpIfEqual {841}
	475 Move W8, [X0+24]
	476 Move X24, X0
	477 Compare W8, 0
	478 JumpIfEqual {842}
	479 Move X9, 0xC41000
	480 Move X9, [X9+2272]
	481 NotImplemented "Instruction CMP not yet implemented."
	482 Move X9, [X9]
	483 Move [X24+32], X9
	484 Move X9, [X19+48]
	485 NotImplemented "Instruction CMP not yet implemented."
	486 Move [X24+40], X9
	487 Move X8, 0xC41000
	488 Move X8, [X8+2296]
	489 Add X0, X31, 60
	490 Move X1, X31
	491 Move X8, [X8]
	492 Move [X24+48], X8
	493 NotImplemented "Instruction LDRH not yet implemented."
	494 NotImplemented "Instruction STRH not yet implemented."
	495 Call UInt16.ToString, X0
	496 Move W8, [X24+24]
	497 NotImplemented "Instruction CMP not yet implemented."
	498 NotImplemented "Instruction CMP not yet implemented."
	499 Move [X24+56], X0
	500 Move X8, 0xC41000
	501 Move X8, [X8+2288]
	502 Add X0, X19, 116
	503 Move X1, X31
	504 Move X8, [X8]
	505 Move [X24+64], X8
	506 Call Int32.ToString, X0
	507 Move W8, [X24+24]
	508 NotImplemented "Instruction CMP not yet implemented."
	509 NotImplemented "Instruction CMP not yet implemented."
	510 Move [X24+72], X0
	511 Move X8, 0xC02000
	512 Move X8, [X8+3784]
	513 Add X0, X19, 120
	514 Move X1, X31
	515 Move X8, [X8]
	516 Move [X24+80], X8
	517 Call Int32.ToString, X0
	518 Move W8, [X24+24]
	519 NotImplemented "Instruction CMP not yet implemented."
	520 NotImplemented "Instruction CMP not yet implemented."
	521 Move [X24+88], X0
	522 Move X8, 0xC41000
	523 Move X8, [X8+2240]
	524 Move X0, X23
	525 Move X1, X31
	526 Move X8, [X8]
	527 Move [X24+96], X8
	528 Call Byte.ToString, X0
	529 Move W8, [X24+24]
	530 NotImplemented "Instruction CMP not yet implemented."
	531 NotImplemented "Instruction CMP not yet implemented."
	532 Move [X24+104], X0
	533 Move X8, 0xC41000
	534 Move X8, [X8+2264]
	535 Move X9, 0xC41000
	536 Add X0, X31, 8
	537 Move X1, X31
	538 Move X8, [X8]
	539 Move X9, [X9+2120]
	540 Move [X24+112], X8
	541 Move X8, [X9]
	542 Move TEMP, 0
	543 Not TEMP
	544 Move X9, TEMP
	545 Move [X31+8], X8
	546 Move [X31+16], X9
	547 Move W8, [X19+64]
	548 Move [X31+24], W8
	549 Call Enum.ToString, X0
	550 Move W8, [X24+24]
	551 NotImplemented "Instruction CMP not yet implemented."
	552 Move [X24+120], X0
	553 Move X0, X24
	554 Move X1, X31
	555 Call String.Concat, X0
	556 Compare X22, 0
	557 JumpIfEqual {841}
	558 Move X10, 0xC09000
	559 Move X8, [X22]
	560 Move X10, [X10+3016]
	561 Move X23, X0
	562 NotImplemented "Instruction LDRH not yet implemented."
	563 Move X1, [X10]
	564 Compare X9, 0
	565 JumpIfEqual {572}
	566 Move X10, [X8+176]
	567 Add X10, X10, 8
	568 NotImplemented "Instruction LDUR not yet implemented."
	569 NotImplemented "Instruction CMP not yet implemented."
	570 Subtract X9, X9, 1
	571 Add X10, X10, 16
	572 Move X0, X22
	573 Move W2, W31
	574 Call 0x1C5D788
	575 Move X0, [X19+192]
	576 Compare X0, 0
	577 JumpIfEqual {841}
	578 Move W22, [X19+384]
	579 Move X1, X31
	580 Call Stopwatch.get_ElapsedMilliseconds, X0
	581 Add W8, W22, W20
	582 Move W9, 1
	583 Subtract W8, W8, W0
	584 Move [X19+108], W8
	585 Move [X19+112], W9
	586 NotImplemented "Instruction LDRSW not yet implemented."
	587 Add X8, X8, X9
	588 Add X0, X8, 312
	589 Move X8, [X0]
	590 Move X3, [X0+8]
	591 Move W1, 1
	592 Move X0, X19
	593 Move X2, X21
	594 NotImplemented "Instruction BLR not yet implemented."
	595 NotImplemented "Instruction LDRSW not yet implemented."
	596 Add X8, X8, X9
	597 Add X0, X8, 312
	598 Move X8, [X0]
	599 Move X3, [X0+8]
	600 Move W1, 3
	601 Move X0, X22
	602 Move X2, X23
	603 NotImplemented "Instruction BLR not yet implemented."
	604 Move W8, [X19+64]
	605 Or W8, W8, 4
	606 NotImplemented "Instruction CMP not yet implemented."
	607 Move X0, X19
	608 Move W1, W21
	609 Call PeerBase.EnqueueStatusCallback, X0, X1
	610 Move X8, [X19]
	611 Move X0, X19
	612 Move X9, [X8+488]
	613 Move X1, [X8+496]
	614 NotImplemented "Instruction BLR not yet implemented."
	615 Move X0, X20
	616 Call NCommand.Release, X0
	617 Move X20, [X31+112]
	618 Move X19, [X31+120]
	619 Move X22, [X31+96]
	620 Move X21, [X31+104]
	621 Move X24, [X31+80]
	622 Move X23, [X31+88]
	623 Move X30, [X31+64]
	624 Move X25, [X31+72]
	625 Add X31, X31, 128
	626 Return 
	627 Move W8, [X22]
	628 Move TEMP, X8
	629 And TEMP, TEMP, -2147483648
	630 Compare TEMP, -2147483648
	631 JumpIfEqual {702}
	632 NotImplemented "Instruction CMP not yet implemented."
	633 Move X8, -44056576
	634 Move V0, [X8+1304]
	635 Move [X19+116], D0
	636 Move W1, [X20+18]
	637 Move W25, [X20+17]
	638 Move X0, X19
	639 Call EnetPeer.GetChannel, X0, X1
	640 Move [X31+48], X31
	641 Compare X0, 0
	642 JumpIfEqual {841}
	643 Move W1, [X20+36]
	644 NotImplemented "Instruction CMP not yet implemented."
	645 NotImplemented "Instruction CSET not yet implemented."
	646 Add X3, X31, 48
	647 Move X21, X0
	648 Call EnetChannel.TryGetFragment, X0, X1, X2, X3
	649 Move W22, W0
	650 Move TEMP, X0
	651 And TEMP, TEMP, 1
	652 Compare TEMP, 1
	653 JumpIfNotEqual {659}
	654 Move X8, [X31+48]
	655 Compare X8, 0
	656 JumpIfEqual {841}
	657 Move W8, [X8+56]
	658 NotImplemented "Instruction CMP not yet implemented."
	659 Move X0, X19
	660 Move X1, X20
	661 Call EnetPeer.QueueIncomingCommand, X0, X1
	662 Move TEMP, X0
	663 And TEMP, TEMP, 1
	664 Compare TEMP, 1
	665 JumpIfNotEqual {615}
	666 Move W8, [X20+20]
	667 Move W9, [X20+36]
	668 NotImplemented "Instruction CMP not yet implemented."
	669 Move [X31+40], X31
	670 Move [X31+48], X20
	671 Move W9, [X20+56]
	672 Subtract W9, W9, 1
	673 NotImplemented "Instruction CMP not yet implemented."
	674 Move [X20+56], W9
	675 Add W19, W8, 1
	676 Move W8, [X20+36]
	677 Move W9, [X20+40]
	678 Add W8, W9, W8
	679 NotImplemented "Instruction CMP not yet implemented."
	680 NotImplemented "Instruction CMP not yet implemented."
	681 NotImplemented "Instruction CSET not yet implemented."
	682 Add X3, X31, 40
	683 Move X0, X21
	684 Move W1, W19
	685 Call EnetChannel.TryGetFragment, X0, X1, X2, X3
	686 Move X20, [X31+48]
	687 Move TEMP, X0
	688 And TEMP, TEMP, 1
	689 Compare TEMP, 1
	690 JumpIfNotEqual {696}
	691 Compare X20, 0
	692 JumpIfEqual {841}
	693 Move W8, [X20+56]
	694 Subtract W8, W8, 1
	695 Move [X20+56], W8
	696 Compare X20, 0
	697 JumpIfEqual {841}
	698 Move W8, [X20+56]
	699 Add W19, W19, 1
	700 NotImplemented "Instruction CMP not yet implemented."
	701 Move [X19+116], W8
	702 Move X0, X21
	703 Move X20, [X31+48]
	704 Move TEMP, X22
	705 And TEMP, TEMP, 1
	706 Compare TEMP, 1
	707 JumpIfNotEqual {713}
	708 Compare X20, 0
	709 JumpIfEqual {841}
	710 Move W8, [X20+56]
	711 Subtract W8, W8, 1
	712 Move [X20+56], W8
	713 Compare X20, 0
	714 JumpIfEqual {617}
	715 Move W8, [X20+56]
	716 NotImplemented "Instruction CMP not yet implemented."
	717 Move X8, 0xC41000
	718 Move X8, [X8+1912]
	719 Move X0, [X8]
	720 Move W8, [X0+224]
	721 Compare W8, 0
	722 JumpIfNotEqual {724}
	723 Call 0x1C17DFC
	724 Call PeerBase.MessageBufferPoolGet
	725 Compare X0, 0
	726 JumpIfEqual {841}
	727 Move W1, W31
	728 Move X2, X31
	729 Move X19, X0
	730 Call StreamBuffer.set_Position, X0, X1
	731 Move X8, [X31+48]
	732 Compare X8, 0
	733 JumpIfEqual {841}
	734 Move W1, [X8+48]
	735 Move X0, X19
	736 Move X2, X31
	737 Call StreamBuffer.SetCapacityMinimum, X0, X1
	738 Move X0, X19
	739 Move X1, X31
	740 Call StreamBuffer.GetBuffer, X0
	741 Move X8, [X31+48]
	742 Compare X8, 0
	743 JumpIfEqual {841}
	744 Move W22, [X8+36]
	745 Move W9, [X8+40]
	746 Add W9, W9, W22
	747 NotImplemented "Instruction CMP not yet implemented."
	748 Move X20, X0
	749 NotImplemented "Instruction CMP not yet implemented."
	750 NotImplemented "Instruction CSET not yet implemented."
	751 Add X3, X31, 32
	752 Move X0, X21
	753 Move W1, W22
	754 Call EnetChannel.TryGetFragment, X0, X1, X2, X3
	755 Move TEMP, X0
	756 And TEMP, TEMP, 1
	757 Compare TEMP, 1
	758 JumpIfNotEqual {846}
	759 Move X8, [X31+32]
	760 Compare X8, 0
	761 JumpIfEqual {841}
	762 Move X0, [X8+88]
	763 Compare X0, 0
	764 JumpIfEqual {841}
	765 Move X1, X31
	766 Call StreamBuffer.GetBuffer, X0
	767 Move X8, [X31+32]
	768 Compare X8, 0
	769 JumpIfEqual {841}
	770 Move X23, X0
	771 Move X0, [X8+88]
	772 Compare X0, 0
	773 JumpIfEqual {841}
	774 Move W24, [X8+52]
	775 Move X1, X31
	776 Call StreamBuffer.get_Length, X0
	777 Move W4, W0
	778 Move X0, X23
	779 Move W1, W31
	780 Move X2, X20
	781 Move W3, W24
	782 Move X5, X31
	783 Call Buffer.BlockCopy, X0, X1, X2, X3, X4
	784 Move X0, [X31+32]
	785 Compare X0, 0
	786 JumpIfEqual {841}
	787 Call NCommand.FreePayload, X0
	788 Move X8, [X31+32]
	789 Compare X8, 0
	790 JumpIfEqual {841}
	791 Move W1, [X8+20]
	792 NotImplemented "Instruction CMP not yet implemented."
	793 NotImplemented "Instruction CSET not yet implemented."
	794 Move X0, X21
	795 Call EnetChannel.RemoveFragment, X0, X1, X2
	796 Move X0, [X31+32]
	797 Compare X0, 0
	798 JumpIfEqual {841}
	799 Move W8, [X0+44]
	800 NotImplemented "Instruction CMP not yet implemented."
	801 Call NCommand.Release, X0
	802 Move X8, [X31+48]
	803 Compare X8, 0
	804 JumpIfEqual {841}
	805 Move W9, [X8+36]
	806 Move W10, [X8+40]
	807 Add W22, W22, 1
	808 Add W9, W10, W9
	809 NotImplemented "Instruction CMP not yet implemented."
	810 NotImplemented "Instruction LDRSW not yet implemented."
	811 Move X0, X19
	812 Move X2, X31
	813 Call StreamBuffer.SetLength, X0, X1
	814 Move X8, [X31+48]
	815 Compare X8, 0
	816 JumpIfEqual {841}
	817 Move W9, [X8+40]
	818 Move W10, [X8+48]
	819 Move W11, 12
	820 NotImplemented "Instruction CMP not yet implemented."
	821 Move [X8+88], X19
	822 NotImplemented "Instruction MADD not yet implemented."
	823 Move [X8+84], W9
	824 Move X0, [X21+24]
	825 Compare X0, 0
	826 JumpIfEqual {841}
	827 Move X9, 0xC41000
	828 Move W1, [X8+36]
	829 Move X9, [X9+1816]
	830 Move X2, X8
	831 Move X3, [X9]
	832 Call NonAllocDictionary`2<Int32, Object>.Add, X0, X1, X2
	833 Move X0, [X21+40]
	834 Compare X0, 0
	835 JumpIfEqual {841}
	836 Move X9, 0xC41000
	837 Move X9, [X9+1824]
	838 Move X1, X8
	839 Move X2, [X9]
	840 Call Queue`1<Object>.Enqueue, X0, X1
	841 Call 0x1C17F20
	842 Call 0x1C17F28
	843 Move X0, X23
	844 Call 0x1C17F18
	845 Call 0x1C17F20
	846 Move X0, 0xC01000
	847 Move X0, [X0+2000]
	848 Call 0x1C17D08
	849 Call 0x1C17F10
	850 Move X19, X0
	851 Move X0, 0xC41000
	852 Move X0, [X0+2312]
	853 Call 0x1C17D08
	854 Move X1, X0
	855 Move X0, X19
	856 Move X2, X31
	857 Call Exception..ctor, X0, X1
	858 Move X0, 0xC41000
	859 Move X0, [X0+2320]
	860 Call 0x1C17D08
	861 Move X1, X0
	862 Move X0, X19
	863 Call 0x1C17DEC
	864 Move X24, X0
	865 NotImplemented "Instruction CMP not yet implemented."
	866 Move X0, X24
	867 Call 0x3EB2AD0
	868 Move X23, [X0]
	869 Call 0x3EB2AE0
	870 Move W24, W31
	871 Move X23, X31
	872 Move X24, X0
	873 Move W8, [X31+56]
	874 Compare W8, 0
	875 JumpIfEqual {879}
	876 Move X0, X20
	877 Move X1, X31
	878 Call Monitor.Exit, X0
	879 Compare X23, 0
	880 JumpIfNotEqual {883}
	881 Move X0, X24
	882 Call 0x1D2D690
	883 Move X0, X23
	884 Call 0x1C17F18
	885 Call 0x1991590

Method: System.Boolean QueueIncomingCommand(ExitGames.Client.Photon.NCommand command)

Disassembly:
	0x034F89A4 LDR X8, [X21]
	0x034F89A8 LDR X8, [X8 + 0xB8]
	0x034F89AC STR X19, [X8]
	0x034F89B0 LDP X20, X19, [X31 + 0x10]
	0x034F89B4 LDP X30, X21, [X31], #0x20
	0x034F89B8 RET
	0x034F89BC LDR W0, [X0 + 0x40]
	0x034F89C0 RET
	0x034F89C4 STR W1, [X0 + 0x40]
	0x034F89C8 RET
	0x034F89CC LDRB W0, [X0 + 0x44]
	0x034F89D0 RET
	0x034F89D4 AND W8, W1, 0x1
	0x034F89D8 STRB W8, [X0 + 0x44]
	0x034F89DC RET
	0x034F89E0 LDR X0, [X0 + 0x48]
	0x034F89E4 RET
	0x034F89E8 STR X1, [X0 + 0x48]
	0x034F89EC RET
	0x034F89F0 LDR X0, [X0 + 0x50]
	0x034F89F4 RET
	0x034F89F8 STR X1, [X0 + 0x50]
	0x034F89FC RET
	0x034F8A00 STR X30, [X31 - 0x20]!
	0x034F8A04 STP X20, X19, [X31 + 0x10]
	0x034F8A08 ADRP X20, 0xEE7000
	0x034F8A0C LDRB W8, [X20 + 0xA3B]
	0x034F8A10 MOV X19, X0
	0x034F8A14 TBNZ X8, 0x0, 0x34F8A5C
	0x034F8A18 ADRP X0, 0xBFB000
	0x034F8A1C LDR X0, [X0 + 0xDF8]
	0x034F8A20 BL 0x1C16CF4
	0x034F8A24 ADRP X0, 0xC3B000
	0x034F8A28 LDR X0, [X0 + 0xAF8]
	0x034F8A2C BL 0x1C16CF4
	0x034F8A30 ADRP X0, 0xC3B000
	0x034F8A34 LDR X0, [X0 + 0xB00]
	0x034F8A38 BL 0x1C16CF4
	0x034F8A3C ADRP X0, 0xBFB000
	0x034F8A40 LDR X0, [X0 + 0x6C0]
	0x034F8A44 BL 0x1C16CF4
	0x034F8A48 ADRP X0, 0xC3B000
	0x034F8A4C LDR X0, [X0 + 0xB08]
	0x034F8A50 BL 0x1C16CF4
	0x034F8A54 MOVZ W8, 0x1
	0x034F8A58 STRB W8, [X20 + 0xA3B]
	0x034F8A5C LDR X8, [X19 + 0x10]
	0x034F8A60 CBZ X8, 0x34F8B00
	0x034F8A64 LDR X8, [X8 + 0x10]
	0x034F8A68 CBZ X8, 0x34F8B00
	0x034F8A6C ADRP X8, 0xBFB000
	0x034F8A70 LDR X8, [X8 + 0x6C0]
	0x034F8A74 LDR X0, [X8]
	0x034F8A78 ADRP X8, 0xC3B000
	0x034F8A7C LDR X8, [X8 + 0xAF8]
	0x034F8A80 LDR W9, [X0 + 0xE0]
	0x034F8A84 LDR X20, [X8]
	0x034F8A88 CBNZ W9, 0x34F8A90
	0x034F8A8C BL 0x1C16DFC
	0x034F8A90 MOV X0, X20
	0x034F8A94 MOV X1, X31
	0x034F8A98 BL 0x338C698
	0x034F8A9C LDR X8, [X19 + 0x10]
	0x034F8AA0 CBZ X8, 0x34F8B18
	0x034F8AA4 LDR X8, [X8 + 0x10]
	0x034F8AA8 CBZ X8, 0x34F8B18
	0x034F8AAC ADRP X9, 0xC3B000
	0x034F8AB0 LDR W8, [X8 + 0x28]
	0x034F8AB4 LDR X9, [X9 + 0xB00]
	0x034F8AB8 MOV X19, X0
	0x034F8ABC ADD X1, X31, 0xC
	0x034F8AC0 STR W8, [X31 + 0xC]
	0x034F8AC4 LDR X0, [X9]
	0x034F8AC8 BL 0x1C16E04
	0x034F8ACC ADRP X8, 0xBFB000
	0x034F8AD0 LDR X8, [X8 + 0xDF8]
	0x034F8AD4 MOV X20, X0
	0x034F8AD8 LDR X8, [X8]
	0x034F8ADC LDR W9, [X8 + 0xE0]
	0x034F8AE0 CBNZ W9, 0x34F8AEC
	0x034F8AE4 MOV X0, X8
	0x034F8AE8 BL 0x1C16DFC
	0x034F8AEC MOV X0, X19
	0x034F8AF0 MOV X1, X20
	0x034F8AF4 MOV X2, X31
	0x034F8AF8 BL 0x33AED00
	0x034F8AFC B 0x34F8B0C
	0x034F8B00 ADRP X8, 0xC3B000
	0x034F8B04 LDR X8, [X8 + 0xB08]
	0x034F8B08 LDR X0, [X8]
	0x034F8B0C LDP X20, X19, [X31 + 0x10]
	0x034F8B10 LDR X30, [X31], #0x20
	0x034F8B14 RET
	0x034F8B18 BL 0x1C16F20
	0x034F8B1C STR X30, [X31 - 0x20]!
	0x034F8B20 STP X20, X19, [X31 + 0x10]
	0x034F8B24 MOV X20, X1
	0x034F8B28 MOV X1, X31
	0x034F8B2C MOV X19, X0
	0x034F8B30 BL 0x33BDD8C
	0x034F8B34 CBZ X20, 0x34F8B58
	0x034F8B38 LDRB W8, [X20 + 0x20]
	0x034F8B3C STR X20, [X19 + 0x10]
	0x034F8B40 STRB W8, [X19 + 0x18]
	0x034F8B44 LDR X8, [X20 + 0x30]
	0x034F8B48 STR X8, [X19 + 0x28]
	0x034F8B4C LDP X20, X19, [X31 + 0x10]
	0x034F8B50 LDR X30, [X31], #0x20
	0x034F8B54 RET
	0x034F8B58 ADRP X0, 0xBFB000
	0x034F8B5C LDR X0, [X0 + 0x7D0]
	0x034F8B60 BL 0x1C16D08
	0x034F8B64 BL 0x1C16F10
	0x034F8B68 MOV X19, X0
	0x034F8B6C ADRP X0, 0xC3B000
	0x034F8B70 LDR X0, [X0 + 0xB10]
	0x034F8B74 BL 0x1C16D08
	0x034F8B78 MOV X1, X0
	0x034F8B7C MOV X0, X19
	0x034F8B80 MOV X2, X31
	0x034F8B84 BL 0x33B2C70
	0x034F8B88 ADRP X0, 0xC3B000
	0x034F8B8C LDR X0, [X0 + 0xB18]
	0x034F8B90 BL 0x1C16D08
	0x034F8B94 MOV X1, X0
	0x034F8B98 MOV X0, X19
	0x034F8B9C BL 0x1C16DEC
	0x034F8BA0 SUB X31, X31, 0x60
	0x034F8BA4 STP X30, X21, [X31 + 0x40]
	0x034F8BA8 STP X20, X19, [X31 + 0x50]
	0x034F8BAC ADRP X20, 0xEE7000
	0x034F8BB0 LDRB W8, [X20 + 0xA3C]
	0x034F8BB4 MOV X19, X0
	0x034F8BB8 TBNZ X8, 0x0, 0x34F8C3C
	0x034F8BBC ADRP X0, 0xC03000
	0x034F8BC0 LDR X0, [X0 + 0xDF8]
	0x034F8BC4 BL 0x1C16CF4
	0x034F8BC8 ADRP X0, 0xC03000
	0x034F8BCC LDR X0, [X0 + 0xBC8]
	0x034F8BD0 BL 0x1C16CF4
	0x034F8BD4 ADRP X0, 0xC3B000
	0x034F8BD8 LDR X0, [X0 + 0xB20]
	0x034F8BDC BL 0x1C16CF4
	0x034F8BE0 ADRP X0, 0xBFB000
	0x034F8BE4 LDR X0, [X0 + 0xAC8]
	0x034F8BE8 BL 0x1C16CF4
	0x034F8BEC ADRP X0, 0xBFD000
	0x034F8BF0 LDR X0, [X0 + 0x278]
	0x034F8BF4 BL 0x1C16CF4
	0x034F8BF8 ADRP X0, 0xC3B000
	0x034F8BFC LDR X0, [X0 + 0xB28]
	0x034F8C00 BL 0x1C16CF4
	0x034F8C04 ADRP X0, 0xC3B000
	0x034F8C08 LDR X0, [X0 + 0xB30]
	0x034F8C0C BL 0x1C16CF4
	0x034F8C10 ADRP X0, 0xC3B000
	0x034F8C14 LDR X0, [X0 + 0xB38]
	0x034F8C18 BL 0x1C16CF4
	0x034F8C1C ADRP X0, 0xC04000
	0x034F8C20 LDR X0, [X0 + 0x988]
	0x034F8C24 BL 0x1C16CF4
	0x034F8C28 ADRP X0, 0xC3B000
	0x034F8C2C LDR X0, [X0 + 0xB40]
	0x034F8C30 BL 0x1C16CF4
	0x034F8C34 MOVZ W8, 0x1
	0x034F8C38 STRB W8, [X20 + 0xA3C]
	0x034F8C3C STR X31, [X31 + 0x38]
	0x034F8C40 STRH W31, [X31 + 0x34]
	0x034F8C44 STP X31, X31, [X31 + 0x20]
	0x034F8C48 STR W31, [X31 + 0x1C]
	0x034F8C4C LDR W8, [X19 + 0x1C]
	0x034F8C50 LDR X9, [X19 + 0x10]
	0x034F8C54 CBZ W8, 0x34F8D00
	0x034F8C58 CBZ X9, 0x34F8FBC
	0x034F8C5C LDR X9, [X9 + 0x10]
	0x034F8C60 CBZ X9, 0x34F8FBC
	0x034F8C64 LDRB W10, [X9 + 0x40]
	0x034F8C68 CBZ W10, 0x34F8F80
	0x034F8C6C ADRP X10, 0xC3B000
	0x034F8C70 LDR X10, [X10 + 0xB20]
	0x034F8C74 LDR X19, [X9 + 0x48]
	0x034F8C78 MOVN X9, 0x0
	0x034F8C7C ADD X0, X31, 0x0
	0x034F8C80 LDR X10, [X10]
	0x034F8C84 MOV X1, X31
	0x034F8C88 STR W8, [X31 + 0x10]
	0x034F8C8C STP X10, X9, [X31]
	0x034F8C90 BL 0x33B162C
	0x034F8C94 ADRP X8, 0xC3B000
	0x034F8C98 LDR X8, [X8 + 0xB40]
	0x034F8C9C MOV X1, X0
	0x034F8CA0 MOV X2, X31
	0x034F8CA4 LDR X8, [X8]
	0x034F8CA8 MOV X0, X8
	0x034F8CAC BL 0x321B938
	0x034F8CB0 CBZ X19, 0x34F8FBC
	0x034F8CB4 ADRP X10, 0xC03000
	0x034F8CB8 LDR X8, [X19]
	0x034F8CBC LDR X10, [X10 + 0xBC8]
	0x034F8CC0 MOV X20, X0
	0x034F8CC4 LDRH W9, [X8 + 0x12E]
	0x034F8CC8 LDR X1, [X10]
	0x034F8CCC CBZ X9, 0x34F8CF0
	0x034F8CD0 LDR X10, [X8 + 0xB0]
	0x034F8CD4 ADD X10, X10, 0x8
	0x034F8CD8 LDUR X11, [X10 - 0x8]
	0x034F8CDC CMP X11, X1
	0x034F8CE0 B.EQ 0x34F8F60
	0x034F8CE4 SUBS X9, X9, 0x1
	0x034F8CE8 ADD X10, X10, 0x10
	0x034F8CEC B.NE 0x34F8CD8
	0x034F8CF0 MOV X0, X19
	0x034F8CF4 MOV W2, W31
	0x034F8CF8 BL 0x1C5C788
	0x034F8CFC B 0x34F8F6C
	0x034F8D00 CBZ X9, 0x34F8F80
	0x034F8D04 LDRB W8, [X19 + 0x18]
	0x034F8D08 LDRB W10, [X9 + 0x20]
	0x034F8D0C CMP W8, W10
	0x034F8D10 B.NE 0x34F8F80
	0x034F8D14 LDR X1, [X9 + 0x30]
	0x034F8D18 ADD X2, X31, 0x38
	0x034F8D1C ADD X3, X31, 0x34
	0x034F8D20 ADD X4, X31, 0x28
	0x034F8D24 ADD X5, X31, 0x20
	0x034F8D28 BL 0x34F8FC4
	0x034F8D2C TBZ X0, 0x0, 0x34F8EE8
	0x034F8D30 ADRP X8, 0xBFD000
	0x034F8D34 LDR X8, [X8 + 0x278]
	0x034F8D38 ADRP X21, 0xEE7000
	0x034F8D3C LDRB W9, [X21 + 0xA85]
	0x034F8D40 LDR X8, [X8]
	0x034F8D44 LDR X8, [X8 + 0xB8]
	0x034F8D48 LDR X20, [X8]
	0x034F8D4C CBNZ W9, 0x34F8D64
	0x034F8D50 ADRP X0, 0xC3B000
	0x034F8D54 LDR X0, [X0 + 0xAF0]
	0x034F8D58 BL 0x1C16CF4
	0x034F8D5C MOVZ W8, 0x1
	0x034F8D60 STRB W8, [X21 + 0xA85]
	0x034F8D64 ADRP X8, 0xC3B000
	0x034F8D68 LDR X8, [X8 + 0xAF0]
	0x034F8D6C LDR X8, [X8]
	0x034F8D70 LDR X8, [X8 + 0xB8]
	0x034F8D74 STR X20, [X8]
	0x034F8D78 LDR X8, [X31 + 0x38]
	0x034F8D7C STR X8, [X19 + 0x30]
	0x034F8D80 LDRH W8, [X31 + 0x34]
	0x034F8D84 STR W8, [X19 + 0x40]
	0x034F8D88 LDP X9, X8, [X31 + 0x20]
	0x034F8D8C STP X8, X9, [X19 + 0x48]
	0x034F8D90 LDR X8, [X19 + 0x10]
	0x034F8D94 CBZ X8, 0x34F8FBC
	0x034F8D98 LDR X8, [X8 + 0x10]
	0x034F8D9C CBZ X8, 0x34F8FBC
	0x034F8DA0 LDRB W8, [X8 + 0x40]
	0x034F8DA4 CMP W8, 0x5
	0x034F8DA8 B.CC 0x34F8FB4
	0x034F8DAC MOV X0, X19
	0x034F8DB0 BL 0x34F88A0
	0x034F8DB4 ADRP X8, 0xBFB000
	0x034F8DB8 LDR X8, [X8 + 0xAC8]
	0x034F8DBC MOV X20, X0
	0x034F8DC0 MOVZ W1, 0x6
	0x034F8DC4 LDR X8, [X8]
	0x034F8DC8 MOV X0, X8
	0x034F8DCC BL 0x1C16D6C
	0x034F8DD0 CBZ X0, 0x34F8FBC
	0x034F8DD4 LDR W8, [X0 + 0x18]
	0x034F8DD8 MOV X21, X0
	0x034F8DDC CBZ W8, 0x34F8FC0
	0x034F8DE0 ADRP X9, 0xC3B000
	0x034F8DE4 LDR X9, [X9 + 0xB38]
	0x034F8DE8 CMP W8, 0x1
	0x034F8DEC LDR X9, [X9]
	0x034F8DF0 STR X9, [X21 + 0x20]
	0x034F8DF4 B.EQ 0x34F8FC0
	0x034F8DF8 LDR X9, [X19 + 0x30]
	0x034F8DFC CMP W8, 0x2
	0x034F8E00 STR X9, [X21 + 0x28]
	0x034F8E04 B.LS 0x34F8FC0
	0x034F8E08 ADRP X8, 0xC04000
	0x034F8E0C LDR X8, [X8 + 0x988]
	0x034F8E10 ADD X0, X31, 0x1C
	0x034F8E14 MOV X1, X31
	0x034F8E18 LDR X8, [X8]
	0x034F8E1C STR X8, [X21 + 0x30]
	0x034F8E20 LDR W8, [X19 + 0x40]
	0x034F8E24 STR W8, [X31 + 0x1C]
	0x034F8E28 BL 0x337B6E0
	0x034F8E2C LDR W8, [X21 + 0x18]
	0x034F8E30 CMP W8, 0x3
	0x034F8E34 B.LS 0x34F8FC0
	0x034F8E38 CMP W8, 0x4
	0x034F8E3C STR X0, [X21 + 0x38]
	0x034F8E40 B.EQ 0x34F8FC0
	0x034F8E44 ADRP X8, 0xC3B000
	0x034F8E48 LDR X8, [X8 + 0xB28]
	0x034F8E4C ADRP X9, 0xC03000
	0x034F8E50 MOVN X10, 0x0
	0x034F8E54 ADD X0, X31, 0x0
	0x034F8E58 LDR X8, [X8]
	0x034F8E5C LDR X9, [X9 + 0xDF8]
	0x034F8E60 MOV X1, X31
	0x034F8E64 STR X8, [X21 + 0x40]
	0x034F8E68 LDR X8, [X9]
	0x034F8E6C LDRB W9, [X19 + 0x18]
	0x034F8E70 STP X8, X10, [X31]
	0x034F8E74 STRB W9, [X31 + 0x10]
	0x034F8E78 BL 0x33B162C
	0x034F8E7C LDR W8, [X21 + 0x18]
	0x034F8E80 CMP W8, 0x5
	0x034F8E84 B.LS 0x34F8FC0
	0x034F8E88 STR X0, [X21 + 0x48]
	0x034F8E8C MOV X0, X21
	0x034F8E90 MOV X1, X31
	0x034F8E94 BL 0x32278CC
	0x034F8E98 CBZ X20, 0x34F8FBC
	0x034F8E9C ADRP X10, 0xC03000
	0x034F8EA0 LDR X8, [X20]
	0x034F8EA4 LDR X10, [X10 + 0xBC8]
	0x034F8EA8 MOV X19, X0
	0x034F8EAC LDRH W9, [X8 + 0x12E]
	0x034F8EB0 LDR X1, [X10]
	0x034F8EB4 CBZ X9, 0x34F8ED8
	0x034F8EB8 LDR X10, [X8 + 0xB0]
	0x034F8EBC ADD X10, X10, 0x8
	0x034F8EC0 LDUR X11, [X10 - 0x8]
	0x034F8EC4 CMP X11, X1
	0x034F8EC8 B.EQ 0x34F8F94
	0x034F8ECC SUBS X9, X9, 0x1
	0x034F8ED0 ADD X10, X10, 0x10
	0x034F8ED4 B.NE 0x34F8EC0
	0x034F8ED8 MOV X0, X20
	0x034F8EDC MOV W2, W31
	0x034F8EE0 BL 0x1C5C788
	0x034F8EE4 B 0x34F8FA0
	0x034F8EE8 LDR X8, [X19 + 0x10]
	0x034F8EEC CBZ X8, 0x34F8FBC
	0x034F8EF0 LDR X9, [X8 + 0x10]
	0x034F8EF4 CBZ X9, 0x34F8FBC
	0x034F8EF8 LDRB W10, [X9 + 0x40]
	0x034F8EFC CBZ W10, 0x34F8F80
	0x034F8F00 LDR X1, [X8 + 0x30]
	0x034F8F04 ADRP X8, 0xC3B000
	0x034F8F08 LDR X19, [X9 + 0x48]
	0x034F8F0C LDR X8, [X8 + 0xB30]
	0x034F8F10 MOV X2, X31
	0x034F8F14 LDR X0, [X8]
	0x034F8F18 BL 0x321B938
	0x034F8F1C CBZ X19, 0x34F8FBC
	0x034F8F20 ADRP X10, 0xC03000
	0x034F8F24 LDR X8, [X19]
	0x034F8F28 LDR X10, [X10 + 0xBC8]
	0x034F8F2C MOV X20, X0
	0x034F8F30 LDRH W9, [X8 + 0x12E]
	0x034F8F34 LDR X1, [X10]
	0x034F8F38 CBZ X9, 0x34F8CF0
	0x034F8F3C LDR X10, [X8 + 0xB0]
	0x034F8F40 ADD X10, X10, 0x8
	0x034F8F44 LDUR X11, [X10 - 0x8]
	0x034F8F48 CMP X11, X1
	0x034F8F4C B.EQ 0x34F8F60
	0x034F8F50 SUBS X9, X9, 0x1
	0x034F8F54 ADD X10, X10, 0x10
	0x034F8F58 B.NE 0x34F8F44
	0x034F8F5C B 0x34F8CF0
	0x034F8F60 LDRSW X9, [X10]
	0x034F8F64 ADD X8, X8, X9, 0x4, LSL
	0x034F8F68 ADD X0, X8, 0x138
	0x034F8F6C LDP X8, X3, [X0]
	0x034F8F70 MOVZ W1, 0x1
	0x034F8F74 MOV X0, X19
	0x034F8F78 MOV X2, X20
	0x034F8F7C BLR X8
	0x034F8F80 MOV W0, W31
	0x034F8F84 LDP X20, X19, [X31 + 0x50]
	0x034F8F88 LDP X30, X21, [X31 + 0x40]
	0x034F8F8C ADD X31, X31, 0x60
	0x034F8F90 RET
	0x034F8F94 LDRSW X9, [X10]
	0x034F8F98 ADD X8, X8, X9, 0x4, LSL
	0x034F8F9C ADD X0, X8, 0x138
	0x034F8FA0 LDP X8, X3, [X0]
	0x034F8FA4 MOVZ W1, 0x5
	0x034F8FA8 MOV X0, X20
	0x034F8FAC MOV X2, X19
	0x034F8FB0 BLR X8
	0x034F8FB4 MOVZ W0, 0x1
	0x034F8FB8 B 0x34F8F84
	0x034F8FBC BL 0x1C16F20
	0x034F8FC0 BL 0x1C16F28
	0x034F8FC4 STP X30, X25, [X31 - 0x40]!
	0x034F8FC8 STP X24, X23, [X31 + 0x10]
	0x034F8FCC STP X22, X21, [X31 + 0x20]
	0x034F8FD0 STP X20, X19, [X31 + 0x30]
	0x034F8FD4 ADRP X25, 0xEE7000
	0x034F8FD8 ADRP X24, 0xBFD000
	0x034F8FDC LDRB W8, [X25 + 0xA3F]
	0x034F8FE0 LDR X24, [X24 + 0x278]
	0x034F8FE4 MOV X22, X5
	0x034F8FE8 MOV X23, X4
	0x034F8FEC MOV X19, X3
	0x034F8FF0 MOV X20, X2
	0x034F8FF4 MOV X21, X1
	0x034F8FF8 TBNZ X8, 0x0, 0x34F9040
	0x034F8FFC ADRP X0, 0xBFD000
	0x034F9000 LDR X0, [X0 + 0x278]
	0x034F9004 BL 0x1C16CF4
	0x034F9008 ADRP X0, 0xC3A000
	0x034F900C LDR X0, [X0 + 0xB48]
	0x034F9010 BL 0x1C16CF4
	0x034F9014 ADRP X0, 0xBFB000
	0x034F9018 LDR X0, [X0 + 0xEC8]
	0x034F901C BL 0x1C16CF4
	0x034F9020 ADRP X0, 0xBFA000
	0x034F9024 LDR X0, [X0 + 0xEC8]
	0x034F9028 BL 0x1C16CF4
	0x034F902C ADRP X0, 0xBFA000
	0x034F9030 LDR X0, [X0 + 0x848]
	0x034F9034 BL 0x1C16CF4
	0x034F9038 MOVZ W8, 0x1
	0x034F903C STRB W8, [X25 + 0xA3F]
	0x034F9040 LDR X8, [X24]
	0x034F9044 MOV X0, X21
	0x034F9048 MOV X1, X31
	0x034F904C LDR X8, [X8 + 0xB8]
	0x034F9050 LDR X8, [X8]
	0x034F9054 STR X8, [X20]
	0x034F9058 STRH W31, [X19]
	0x034F905C LDR X8, [X24]
	0x034F9060 LDR X8, [X8 + 0xB8]
	0x034F9064 LDR X8, [X8]
	0x034F9068 STR X8, [X23]
	0x034F906C LDR X8, [X24]
	0x034F9070 LDR X8, [X8 + 0xB8]
	0x034F9074 LDR X8, [X8]
	0x034F9078 STR X8, [X22]
	0x034F907C BL 0x32277A8
	0x034F9080 TBNZ X0, 0x0, 0x34F91D4
	0x034F9084 CBZ X21, 0x34F91EC
	0x034F9088 ADRP X8, 0xC3A000
	0x034F908C LDR X8, [X8 + 0xB48]
	0x034F9090 MOV X0, X21
	0x034F9094 MOV X2, X31
	0x034F9098 LDR X1, [X8]
	0x034F909C BL 0x322C2F0
	0x034F90A0 TBNZ X0, 0x1F, 0x34F90D8
	0x034F90A4 MOV W24, W0
	0x034F90A8 MOV X0, X21
	0x034F90AC MOV W1, W31
	0x034F90B0 MOV W2, W24
	0x034F90B4 MOV X3, X31
	0x034F90B8 BL 0x3228DE4
	0x034F90BC STR X0, [X23]
	0x034F90C0 ADD W1, W24, 0x3
	0x034F90C4 MOV X0, X21
	0x034F90C8 MOV X2, X31
	0x034F90CC BL 0x322B484
	0x034F90D0 MOV X21, X0
	0x034F90D4 CBZ X0, 0x34F91EC
	0x034F90D8 ADRP X8, 0xBFB000
	0x034F90DC LDR X8, [X8 + 0xEC8]
	0x034F90E0 MOV X0, X21
	0x034F90E4 MOV X2, X31
	0x034F90E8 LDR X1, [X8]
	0x034F90EC BL 0x322C2F0
	0x034F90F0 TBNZ X0, 0x1F, 0x34F9128
	0x034F90F4 MOV W23, W0
	0x034F90F8 MOV X0, X21
	0x034F90FC MOV W1, W23
	0x034F9100 MOV X2, X31
	0x034F9104 BL 0x322B484
	0x034F9108 STR X0, [X22]
	0x034F910C MOV X0, X21

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0xEE8000
	008 Move W8, [X20+2613]
	009 Move X19, X1
	010 Move X21, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {59}
	015 Move X0, 0xC04000
	016 Move X0, [X0+3016]
	017 Call 0x1C17CF4
	018 Move X0, 0xC3C000
	019 Move X0, [X0+1816]
	020 Call 0x1C17CF4
	021 Move X0, 0xC3C000
	022 Move X0, [X0+1776]
	023 Call 0x1C17CF4
	024 Move X0, 0xC3C000
	025 Move X0, [X0+1824]
	026 Call 0x1C17CF4
	027 Move X0, 0xBFC000
	028 Move X0, [X0+2760]
	029 Call 0x1C17CF4
	030 Move X0, 0xC3C000
	031 Move X0, [X0+2648]
	032 Call 0x1C17CF4
	033 Move X0, 0xC3C000
	034 Move X0, [X0+2656]
	035 Call 0x1C17CF4
	036 Move X0, 0xC3C000
	037 Move X0, [X0+2664]
	038 Call 0x1C17CF4
	039 Move X0, 0xBFD000
	040 Move X0, [X0+3784]
	041 Call 0x1C17CF4
	042 Move X0, 0xC3C000
	043 Move X0, [X0+2672]
	044 Call 0x1C17CF4
	045 Move X0, 0xC3C000
	046 Move X0, [X0+2680]
	047 Call 0x1C17CF4
	048 Move X0, 0xC3C000
	049 Move X0, [X0+2688]
	050 Call 0x1C17CF4
	051 Move X0, 0xC3C000
	052 Move X0, [X0+2696]
	053 Call 0x1C17CF4
	054 Move X0, 0xC3C000
	055 Move X0, [X0+2704]
	056 Call 0x1C17CF4
	057 Move W8, 1
	058 Move [X20+2613], W8
	059 Compare X19, 0
	060 JumpIfEqual {502}
	061 Move X22, X19
	062 Add X22, X22, 18
	063 Move W1, [X22]
	064 Move X0, X21
	065 Call EnetPeer.GetChannel, X0, X1
	066 Compare X0, 0
	067 JumpIfEqual {107}
	068 Move W8, [X19+16]
	069 Move X20, X0
	070 Move TEMP, X8
	071 And TEMP, TEMP, 1
	072 Compare TEMP, 1
	073 JumpIfEqual {143}
	074 NotImplemented "Instruction CMP not yet implemented."
	075 Compare W8, 0
	076 JumpIfNotEqual {329}
	077 Move W8, [X19+20]
	078 Move W9, [X20+72]
	079 NotImplemented "Instruction CMP not yet implemented."
	080 Move X8, [X21+16]
	081 Compare X8, 0
	082 JumpIfEqual {502}
	083 Move W9, [X8+264]
	084 Move W10, [X8+64]
	085 Add W9, W9, 1
	086 NotImplemented "Instruction CMP not yet implemented."
	087 Move [X8+264], W9
	088 Move X19, [X8+72]
	089 Compare X19, 0
	090 JumpIfEqual {502}
	091 Move X9, 0xC04000
	092 Move X8, [X19]
	093 Move X9, [X9+3016]
	094 Move X10, 0xC3C000
	095 Move X1, [X9]
	096 Move X10, [X10+2688]
	097 NotImplemented "Instruction LDRH not yet implemented."
	098 Move X20, [X10]
	099 Compare X9, 0
	100 JumpIfEqual {437}
	101 Move X10, [X8+176]
	102 Add X10, X10, 8
	103 NotImplemented "Instruction LDUR not yet implemented."
	104 NotImplemented "Instruction CMP not yet implemented."
	105 Subtract X9, X9, 1
	106 Add X10, X10, 16
	107 Move X8, [X21+16]
	108 Compare X8, 0
	109 JumpIfEqual {502}
	110 Move W9, [X8+64]
	111 Compare W9, 0
	112 JumpIfEqual {329}
	113 Move X19, [X8+72]
	114 Move X0, X22
	115 Move X1, X31
	116 Call Byte.ToString, X0
	117 Move X8, 0xC3C000
	118 Move X8, [X8+2680]
	119 Move X1, X0
	120 Move X2, X31
	121 Move X8, [X8]
	122 Move X0, X8
	123 Call String.Concat, X0, X1
	124 Compare X19, 0
	125 JumpIfEqual {502}
	126 Move X10, 0xC04000
	127 Move X8, [X19]
	128 Move X10, [X10+3016]
	129 Move X20, X0
	130 NotImplemented "Instruction LDRH not yet implemented."
	131 Move X1, [X10]
	132 Compare X9, 0
	133 JumpIfEqual {140}
	134 Move X10, [X8+176]
	135 Add X10, X10, 8
	136 NotImplemented "Instruction LDUR not yet implemented."
	137 NotImplemented "Instruction CMP not yet implemented."
	138 Subtract X9, X9, 1
	139 Add X10, X10, 16
	140 Move X0, X19
	141 Move W2, W31
	142 Call 0x1C5D788
	143 Move TEMP, X8
	144 And TEMP, TEMP, 2
	145 Compare TEMP, 2
	146 JumpIfEqual {237}
	147 Move X22, X20
	148 Move W1, [X19+20]
	149 Add X22, X22, 72
	150 Move W8, [X22]
	151 NotImplemented "Instruction CMP not yet implemented."
	152 Move X0, X20
	153 Call EnetChannel.ContainsReliableSequenceNumber, X0, X1
	154 Move TEMP, X0
	155 And TEMP, TEMP, 1
	156 Compare TEMP, 1
	157 JumpIfNotEqual {406}
	158 Move X8, [X21+16]
	159 Compare X8, 0
	160 JumpIfEqual {502}
	161 Move W9, [X8+64]
	162 NotImplemented "Instruction CMP not yet implemented."
	163 Move X21, [X8+72]
	164 Move X8, 0xBFC000
	165 Move X8, [X8+2760]
	166 Move W1, 6
	167 Move X0, [X8]
	168 Call 0x1C17D6C
	169 Compare X0, 0
	170 JumpIfEqual {502}
	171 Move W8, [X0+24]
	172 Move X23, X0
	173 Compare W8, 0
	174 JumpIfEqual {503}
	175 Move X8, 0xC3C000
	176 Move X8, [X8+2656]
	177 Move X0, X20
	178 Move X8, [X8]
	179 Move [X23+32], X8
	180 Move W1, [X19+20]
	181 Call EnetChannel.FetchReliableSequenceNumber, X0, X1
	182 Compare X0, 0
	183 JumpIfEqual {188}
	184 Move X8, [X0]
	185 Move X9, [X8+360]
	186 Move X1, [X8+368]
	187 NotImplemented "Instruction BLR not yet implemented."
	188 Move W8, [X23+24]
	189 NotImplemented "Instruction CMP not yet implemented."
	190 NotImplemented "Instruction CMP not yet implemented."
	191 Move [X23+40], X0
	192 Move X8, 0xBFD000
	193 Move X8, [X8+3784]
	194 Move X0, X19
	195 Move X8, [X8]
	196 Move [X23+48], X8
	197 Move X8, [X19]
	198 Move X9, [X8+360]
	199 Move X1, [X8+368]
	200 NotImplemented "Instruction BLR not yet implemented."
	201 Move W8, [X23+24]
	202 NotImplemented "Instruction CMP not yet implemented."
	203 NotImplemented "Instruction CMP not yet implemented."
	204 Move [X23+56], X0
	205 Move X8, 0xC3C000
	206 Move X8, [X8+2696]
	207 Move X0, X22
	208 Move X1, X31
	209 Move X8, [X8]
	210 Move [X23+64], X8
	211 Call Int32.ToString, X0
	212 Move W8, [X23+24]
	213 NotImplemented "Instruction CMP not yet implemented."
	214 Move [X23+72], X0
	215 Move X0, X23
	216 Move X1, X31
	217 Call String.Concat, X0
	218 Compare X21, 0
	219 JumpIfEqual {502}
	220 Move X10, 0xC04000
	221 Move X8, [X21]
	222 Move X10, [X10+3016]
	223 Move X19, X0
	224 NotImplemented "Instruction LDRH not yet implemented."
	225 Move X1, [X10]
	226 Compare X9, 0
	227 JumpIfEqual {234}
	228 Move X10, [X8+176]
	229 Add X10, X10, 8
	230 NotImplemented "Instruction LDUR not yet implemented."
	231 NotImplemented "Instruction CMP not yet implemented."
	232 Subtract X9, X9, 1
	233 Add X10, X10, 16
	234 Move X0, X21
	235 Move W2, W31
	236 Call 0x1C5D788
	237 Move X0, X20
	238 Move X1, X19
	239 Move X20, [X31+32]
	240 Move X19, [X31+40]
	241 Move X22, [X31+16]
	242 Move X21, [X31+24]
	243 Move X30, [X31+48]
	244 Move X23, [X31+56]
	245 Call EnetChannel.QueueIncomingReliableUnsequenced, X0, X1
	246 Return X0
	247 Move W10, [X19+28]
	248 Move W9, [X21+332]
	249 Add W8, W10, 127
	250 NotImplemented "Instruction CMP not yet implemented."
	251 NotImplemented "Instruction CSEL not yet implemented."
	252 Add W11, W9, 128
	253 And W8, W8, 0xFFFFFF80
	254 NotImplemented "Instruction CMP not yet implemented."
	255 Subtract W8, W10, W8
	256 NotImplemented "Instruction CMP not yet implemented."
	257 Move X9, [X21+320]
	258 Compare X9, 0
	259 JumpIfEqual {502}
	260 NotImplemented "Instruction SXTB not yet implemented."
	261 Move X10, [X9+24]
	262 Move W11, W11
	263 ShiftRight W11, 10
	264 And W11, W11, 0x3FFF
	265 Add W11, W8, W11
	266 NotImplemented "Instruction SBFM not yet implemented."
	267 NotImplemented "Instruction CMP not yet implemented."
	268 Add X11, X9, W11
	269 Move W11, [X11+32]
	270 NotImplemented "Instruction LSRV not yet implemented."
	271 Move TEMP, X11
	272 And TEMP, TEMP, 1
	273 Compare TEMP, 1
	274 JumpIfEqual {329}
	275 Move X8, [X21+16]
	276 Compare X8, 0
	277 JumpIfEqual {502}
	278 Move W9, [X8+64]
	279 NotImplemented "Instruction CMP not yet implemented."
	280 Move X20, [X8+72]
	281 Move X8, 0xC3C000
	282 Move X9, [X19]
	283 Move X8, [X8+2648]
	284 Move X0, X19
	285 Move X21, [X8]
	286 Move X8, [X9+360]
	287 Move X1, [X9+368]
	288 NotImplemented "Instruction BLR not yet implemented."
	289 Move X19, X0
	290 Move X0, X22
	291 Move X1, X31
	292 Call Int32.ToString, X0
	293 Move X8, 0xC3C000
	294 Move X8, [X8+2664]
	295 Move X3, X0
	296 Move X0, X21
	297 Move X1, X19
	298 Move X2, [X8]
	299 Move X4, X31
	300 Call String.Concat, X0, X1, X2, X3
	301 Compare X20, 0
	302 JumpIfEqual {502}
	303 Move X10, 0xC04000
	304 Move X8, [X20]
	305 Move X10, [X10+3016]
	306 Move X19, X0
	307 NotImplemented "Instruction LDRH not yet implemented."
	308 Move X1, [X10]
	309 Compare X9, 0
	310 JumpIfEqual {317}
	311 Move X10, [X8+176]
	312 Add X10, X10, 8
	313 NotImplemented "Instruction LDUR not yet implemented."
	314 NotImplemented "Instruction CMP not yet implemented."
	315 Subtract X9, X9, 1
	316 Add X10, X10, 16
	317 Move X0, X20
	318 Move W2, W31
	319 Call 0x1C5D788
	320 NotImplemented "Instruction LDRSW not yet implemented."
	321 Add X8, X8, X9
	322 Add X0, X8, 312
	323 Move X8, [X0]
	324 Move X3, [X0+8]
	325 Move W1, 1
	326 Move X0, X19
	327 Move X2, X20
	328 NotImplemented "Instruction BLR not yet implemented."
	329 Move W0, W31
	330 Move X20, [X31+32]
	331 Move X19, [X31+40]
	332 Move X22, [X31+16]
	333 Move X21, [X31+24]
	334 Move X30, [X31+48]
	335 Move X23, [X31+56]
	336 Return X0
	337 Move W1, [X19+24]
	338 Move W8, [X20+76]
	339 NotImplemented "Instruction CMP not yet implemented."
	340 Move X0, X20
	341 Call EnetChannel.ContainsUnreliableSequenceNumber, X0, X1
	342 Move TEMP, X0
	343 And TEMP, TEMP, 1
	344 Compare TEMP, 1
	345 JumpIfNotEqual {440}
	346 Move X8, [X21+16]
	347 Compare X8, 0
	348 JumpIfEqual {502}
	349 Move W9, [X8+64]
	350 NotImplemented "Instruction CMP not yet implemented."
	351 Move X0, [X20+32]
	352 Compare X0, 0
	353 JumpIfEqual {502}
	354 Move X20, [X8+72]
	355 Move X8, 0xC3C000
	356 Move W1, [X19+24]
	357 Move X8, [X8+1776]
	358 Move X2, [X8]
	359 Call NonAllocDictionary`2<Int32, Object>.get_Item, X0, X1
	360 Move X8, 0xC3C000
	361 Move X8, [X8+2704]
	362 Move X21, [X8]
	363 Compare X0, 0
	364 JumpIfEqual {463}
	365 Move X8, [X0]
	366 Move X9, [X8+360]
	367 Move X1, [X8+368]
	368 NotImplemented "Instruction BLR not yet implemented."
	369 Move X22, X0
	370 Move X9, [X21+320]
	371 Subtract W10, W10, W8
	372 Move [X21+332], W10
	373 Compare X9, 0
	374 JumpIfEqual {502}
	375 Move W10, [X9+24]
	376 Move X11, X10
	377 ShiftRight X11, 32
	378 And X11, X11, 0x7FFFFFFF
	379 NotImplemented "Instruction CMP not yet implemented."
	380 Move X11, X31
	381 Move X12, W10
	382 NotImplemented "Instruction CMP not yet implemented."
	383 Add X13, X9, X11
	384 Add X11, X11, 1
	385 NotImplemented "Instruction CMP not yet implemented."
	386 Move [X13+32], W31
	387 Add W11, W8, 31
	388 NotImplemented "Instruction CMP not yet implemented."
	389 NotImplemented "Instruction CSEL not yet implemented."
	390 NotImplemented "Instruction SBFM not yet implemented."
	391 NotImplemented "Instruction CMP not yet implemented."
	392 Add X9, X9, W11
	393 Move W10, [X9+32]
	394 Move W11, 1
	395 NotImplemented "Instruction LSLV not yet implemented."
	396 Or W8, W10, W8
	397 Move [X9+32], W8
	398 Move X0, [X20+40]
	399 Compare X0, 0
	400 JumpIfEqual {502}
	401 Move X8, 0xC3C000
	402 Move X8, [X8+1824]
	403 Move X1, X19
	404 Move X2, [X8]
	405 Call Queue`1<Object>.Enqueue, X0, X1
	406 Move X0, [X20+24]
	407 Compare X0, 0
	408 JumpIfEqual {502}
	409 Move W1, [X19+20]
	410 Move X8, [X21+16]
	411 Compare X8, 0
	412 JumpIfEqual {502}
	413 Move W9, [X8+264]
	414 Move W10, [X8+64]
	415 Add W9, W9, 1
	416 NotImplemented "Instruction CMP not yet implemented."
	417 Move [X8+264], W9
	418 Move X19, [X8+72]
	419 Compare X19, 0
	420 JumpIfEqual {502}
	421 Move X9, 0xC04000
	422 Move X8, [X19]
	423 Move X9, [X9+3016]
	424 Move X10, 0xC3C000
	425 Move X1, [X9]
	426 Move X10, [X10+2672]
	427 NotImplemented "Instruction LDRH not yet implemented."
	428 Move X20, [X10]
	429 Compare X9, 0
	430 JumpIfEqual {437}
	431 Move X10, [X8+176]
	432 Add X10, X10, 8
	433 NotImplemented "Instruction LDUR not yet implemented."
	434 NotImplemented "Instruction CMP not yet implemented."
	435 Subtract X9, X9, 1
	436 Add X10, X10, 16
	437 Move X0, X19
	438 Move W2, W31
	439 Call 0x1C5D788
	440 Move X0, [X20+32]
	441 Compare X0, 0
	442 JumpIfEqual {502}
	443 Move W1, [X19+24]
	444 Move X8, 0xC3B000
	445 Move X8, [X8+1816]
	446 Move X2, X19
	447 Move X3, [X8]
	448 Call NonAllocDictionary`2<Int32, Object>.Add, X0, X1, X2
	449 Move W0, 1
	450 NotImplemented "Instruction LDRSW not yet implemented."
	451 Add X8, X8, X9
	452 Add X0, X8, 312
	453 Move X8, [X0]
	454 Move X3, [X0+8]
	455 Move W1, 5
	456 NotImplemented "Instruction LDRSW not yet implemented."
	457 Add X8, X8, X9
	458 Add X0, X8, 312
	459 Move X8, [X0]
	460 Move X3, [X0+8]
	461 Move W1, 5
	462 Move X0, X21
	463 Move X22, X31
	464 Move X9, 0xBFC000
	465 Move X8, [X19]
	466 Move X9, [X9+3784]
	467 Move X0, X19
	468 Move X23, [X9]
	469 Move X9, [X8+360]
	470 Move X1, [X8+368]
	471 NotImplemented "Instruction BLR not yet implemented."
	472 Move X3, X0
	473 Move X0, X21
	474 Move X1, X22
	475 Move X2, X23
	476 Move X4, X31
	477 Call String.Concat, X0, X1, X2, X3
	478 Compare X20, 0
	479 JumpIfEqual {502}
	480 Move X10, 0xC03000
	481 Move X8, [X20]
	482 Move X10, [X10+3016]
	483 Move X19, X0
	484 NotImplemented "Instruction LDRH not yet implemented."
	485 Move X1, [X10]
	486 Compare X9, 0
	487 JumpIfEqual {317}
	488 Move X10, [X8+176]
	489 Add X10, X10, 8
	490 NotImplemented "Instruction LDUR not yet implemented."
	491 NotImplemented "Instruction CMP not yet implemented."
	492 Subtract X9, X9, 1
	493 Add X10, X10, 16
	494 NotImplemented "Instruction LDRSW not yet implemented."
	495 Add X8, X8, X9
	496 Add X0, X8, 312
	497 Move X8, [X0]
	498 Move X3, [X0+8]
	499 Move W1, 5
	500 Move X0, X20
	501 Move X2, X19
	502 Call 0x1C17F20
	503 Call 0x1C17F28

Method: ExitGames.Client.Photon.NCommand RemoveSentReliableCommand(System.Int32 ackReceivedReliableSequenceNumber, System.Int32 ackReceivedChannel, System.Boolean isUnsequenced)

Disassembly:
	0x034F84BC STRB W31, [X20 + 0x28]
	0x034F84C0 LDR X0, [X19 + 0xB0]
	0x034F84C4 MOV X1, X31
	0x034F84C8 BL 0x32277A8
	0x034F84CC TBZ X0, 0x0, 0x34F84E0
	0x034F84D0 ADRP X8, 0xC3B000
	0x034F84D4 LDR X8, [X8 + 0xAD0]
	0x034F84D8 LDR X8, [X8]
	0x034F84DC STR X8, [X19 + 0xB0]
	0x034F84E0 MOV X21, X31
	0x034F84E4 ADD X22, X20, 0x29
	0x034F84E8 LDR X0, [X19 + 0xB0]
	0x034F84EC CBZ X0, 0x34F867C
	0x034F84F0 LDRSW X8, [X0 + 0x10]
	0x034F84F4 CMP X21, X8
	0x034F84F8 B.GE 0x34F850C
	0x034F84FC MOV W1, W21
	0x034F8500 MOV X2, X31
	0x034F8504 BL 0x3222A1C
	0x034F8508 B 0x34F8510
	0x034F850C MOV W0, W31
	0x034F8510 LDR W8, [X20 + 0x18]
	0x034F8514 ADD X9, X21, 0x9
	0x034F8518 CMP X9, X8
	0x034F851C B.CS 0x34F8680
	0x034F8520 STRB W0, [X22, X21, LSL]
	0x034F8524 SUB X21, X9, 0x8
	0x034F8528 CMP X21, 0x20
	0x034F852C B.NE 0x34F84E8
	0x034F8530 LDR X9, [X19 + 0x28]
	0x034F8534 CBZ X9, 0x34F8654
	0x034F8538 CMP W8, 0x5
	0x034F853C B.LS 0x34F8680
	0x034F8540 LDRB W9, [X9 + 0x44]
	0x034F8544 LDRB W8, [X20 + 0x25]
	0x034F8548 CBZ W9, 0x34F8660
	0x034F854C ORR W8, W8, 0x80
	0x034F8550 B 0x34F8664
	0x034F8554 MOV W22, W31
	0x034F8558 MOV X21, X31
	0x034F855C MOV X1, X20
	0x034F8560 BL 0x34FC7AC
	0x034F8564 LDR X8, [X19 + 0x28]
	0x034F8568 MOV X20, X0
	0x034F856C CBZ X8, 0x34F8594
	0x034F8570 LDRB W8, [X8 + 0x44]
	0x034F8574 CBZ W8, 0x34F8594
	0x034F8578 ADRP X8, 0xC3B000
	0x034F857C LDR X8, [X8 + 0xAB0]
	0x034F8580 MOV X0, X20
	0x034F8584 MOV X2, X31
	0x034F8588 LDR X1, [X8]
	0x034F858C BL 0x321B938
	0x034F8590 MOV X20, X0
	0x034F8594 ADRP X8, 0xBFB000
	0x034F8598 LDR X19, [X19 + 0x30]
	0x034F859C LDR X8, [X8 + 0x758]
	0x034F85A0 ADD X1, X31, 0x8
	0x034F85A4 STR W22, [X31 + 0x8]
	0x034F85A8 LDR X0, [X8]
	0x034F85AC BL 0x1C16E04
	0x034F85B0 ADRP X8, 0xC3B000
	0x034F85B4 LDR X8, [X8 + 0xAC0]
	0x034F85B8 MOV X3, X0
	0x034F85BC MOV X1, X20
	0x034F85C0 MOV X2, X19
	0x034F85C4 LDR X8, [X8]
	0x034F85C8 MOV X4, X31
	0x034F85CC MOV X0, X8
	0x034F85D0 BL 0x3227C18
	0x034F85D4 CBZ X0, 0x34F867C
	0x034F85D8 ADRP X9, 0xBFB000
	0x034F85DC LDR W8, [X0 + 0x10]
	0x034F85E0 LDR X9, [X9 + 0x618]
	0x034F85E4 MOV X19, X0
	0x034F85E8 ADD W1, W8, W22
	0x034F85EC LDR X0, [X9]
	0x034F85F0 BL 0x1C16D6C
	0x034F85F4 MOV X20, X0
	0x034F85F8 CBZ X21, 0x34F8618
	0x034F85FC LDR W3, [X19 + 0x10]
	0x034F8600 LDR W4, [X21 + 0x18]
	0x034F8604 MOV X0, X21
	0x034F8608 MOV W1, W31
	0x034F860C MOV X2, X20
	0x034F8610 MOV X5, X31
	0x034F8614 BL 0x33A8A9C
	0x034F8618 MOV X0, X31
	0x034F861C BL 0x3241948
	0x034F8620 CBZ X0, 0x34F867C
	0x034F8624 LDR X8, [X0]
	0x034F8628 MOV X1, X19
	0x034F862C LDR X9, [X8 + 0x268]
	0x034F8630 LDR X2, [X8 + 0x270]
	0x034F8634 BLR X9
	0x034F8638 LDR W4, [X19 + 0x10]
	0x034F863C MOV W1, W31
	0x034F8640 MOV X2, X20
	0x034F8644 MOV W3, W31
	0x034F8648 MOV X5, X31
	0x034F864C BL 0x33A8A9C
	0x034F8650 B 0x34F8668
	0x034F8654 CMP W8, 0x6
	0x034F8658 B.CC 0x34F8680
	0x034F865C LDRB W8, [X20 + 0x25]
	0x034F8660 AND W8, W8, 0x7F
	0x034F8664 STRB W8, [X20 + 0x25]
	0x034F8668 MOV X0, X20
	0x034F866C LDP X20, X19, [X31 + 0x20]
	0x034F8670 LDP X22, X21, [X31 + 0x10]
	0x034F8674 LDR X30, [X31], #0x30
	0x034F8678 RET
	0x034F867C BL 0x1C16F20
	0x034F8680 BL 0x1C16F28
	0x034F8684 STR X30, [X31 - 0x30]!
	0x034F8688 STP X22, X21, [X31 + 0x10]
	0x034F868C STP X20, X19, [X31 + 0x20]
	0x034F8690 ADRP X21, 0xEE7000
	0x034F8694 LDRB W8, [X21 + 0xA37]
	0x034F8698 MOV X19, X1
	0x034F869C MOV X20, X0
	0x034F86A0 TBNZ X8, 0x0, 0x34F86DC
	0x034F86A4 ADRP X0, 0xBFB000
	0x034F86A8 LDR X0, [X0 + 0x8F0]
	0x034F86AC BL 0x1C16CF4
	0x034F86B0 ADRP X0, 0xBFD000
	0x034F86B4 LDR X0, [X0 + 0x278]
	0x034F86B8 BL 0x1C16CF4
	0x034F86BC ADRP X0, 0xC28000
	0x034F86C0 LDR X0, [X0 + 0xFB8]
	0x034F86C4 BL 0x1C16CF4
	0x034F86C8 ADRP X0, 0xC3B000
	0x034F86CC LDR X0, [X0 + 0xAE8]
	0x034F86D0 BL 0x1C16CF4
	0x034F86D4 MOVZ W8, 0x1
	0x034F86D8 STRB W8, [X21 + 0xA37]
	0x034F86DC LDR X8, [X20 + 0x10]
	0x034F86E0 CBZ X8, 0x34F87E4
	0x034F86E4 LDRB W8, [X8 + 0x40]
	0x034F86E8 CMP W8, 0x4
	0x034F86EC B.HI 0x34F8708
	0x034F86F0 ADRP X8, 0xBFD000
	0x034F86F4 LDR X8, [X8 + 0x278]
	0x034F86F8 LDR X8, [X8]
	0x034F86FC LDR X8, [X8 + 0xB8]
	0x034F8700 LDR X0, [X8]
	0x034F8704 B 0x34F87D4
	0x034F8708 ADRP X8, 0xBFB000
	0x034F870C LDR X8, [X8 + 0x8F0]
	0x034F8710 LDR X0, [X8]
	0x034F8714 BL 0x1C16F10
	0x034F8718 MOV X1, X31
	0x034F871C MOV X20, X0
	0x034F8720 BL 0x3231AC4
	0x034F8724 STR W31, [X31 + 0xC]
	0x034F8728 CBZ X19, 0x34F87E4
	0x034F872C LDR W8, [X19 + 0x18]
	0x034F8730 CMP W8, 0x1
	0x034F8734 B.LT 0x34F87C0
	0x034F8738 ADRP X21, 0xC28000
	0x034F873C ADRP X22, 0xC3B000
	0x034F8740 LDR X21, [X21 + 0xFB8]
	0x034F8744 LDR X22, [X22 + 0xAE8]
	0x034F8748 ADD X0, X31, 0xC
	0x034F874C MOV X1, X31
	0x034F8750 BL 0x337B6E0
	0x034F8754 LDR X1, [X21]
	0x034F8758 MOV X2, X31
	0x034F875C BL 0x321B938
	0x034F8760 CBZ X20, 0x34F87E4
	0x034F8764 MOV X1, X0
	0x034F8768 MOV X0, X20
	0x034F876C MOV X2, X31
	0x034F8770 BL 0x32333E0
	0x034F8774 LDRSW X8, [X31 + 0xC]
	0x034F8778 LDR W9, [X19 + 0x18]
	0x034F877C CMP W8, W9
	0x034F8780 B.CS 0x34F87E8
	0x034F8784 ADD X8, X19, X8, 0x3, LSL
	0x034F8788 LDR X1, [X8 + 0x20]
	0x034F878C MOV X0, X20
	0x034F8790 MOV X2, X31
	0x034F8794 BL 0x3233F90
	0x034F8798 LDR X1, [X22]
	0x034F879C MOV X0, X20
	0x034F87A0 MOV X2, X31
	0x034F87A4 BL 0x32333E0
	0x034F87A8 LDR W8, [X31 + 0xC]
	0x034F87AC ADD W8, W8, 0x1
	0x034F87B0 STR W8, [X31 + 0xC]
	0x034F87B4 LDR W9, [X19 + 0x18]
	0x034F87B8 CMP W8, W9
	0x034F87BC B.LT 0x34F8748
	0x034F87C0 CBZ X20, 0x34F87E4
	0x034F87C4 LDR X8, [X20]
	0x034F87C8 MOV X0, X20
	0x034F87CC LDP X9, X1, [X8 + 0x168]
	0x034F87D0 BLR X9
	0x034F87D4 LDP X20, X19, [X31 + 0x20]
	0x034F87D8 LDP X22, X21, [X31 + 0x10]
	0x034F87DC LDR X30, [X31], #0x30
	0x034F87E0 RET
	0x034F87E4 BL 0x1C16F20
	0x034F87E8 BL 0x1C16F28
	0x034F87EC STR X30, [X31 - 0x20]!
	0x034F87F0 STP X20, X19, [X31 + 0x10]
	0x034F87F4 ADRP X19, 0xEE7000
	0x034F87F8 ADRP X20, 0xBFB000
	0x034F87FC LDRB W8, [X19 + 0xA38]
	0x034F8800 LDR X20, [X20 + 0x618]
	0x034F8804 TBNZ X8, 0x0, 0x34F8828
	0x034F8808 ADRP X0, 0xBFB000
	0x034F880C LDR X0, [X0 + 0x618]
	0x034F8810 BL 0x1C16CF4
	0x034F8814 ADRP X0, 0xC3B000
	0x034F8818 LDR X0, [X0 + 0x760]
	0x034F881C BL 0x1C16CF4
	0x034F8820 MOVZ W8, 0x1
	0x034F8824 STRB W8, [X19 + 0xA38]
	0x034F8828 LDR X0, [X20]
	0x034F882C MOVZ W1, 0x2
	0x034F8830 BL 0x1C16D6C

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+64], X30
	003 Move [X31+80], X28
	004 Move [X31+88], X27
	005 Move [X31+96], X26
	006 Move [X31+104], X25
	007 Move [X31+112], X24
	008 Move [X31+120], X23
	009 Move [X31+128], X22
	010 Move [X31+136], X21
	011 Move [X31+144], X20
	012 Move [X31+152], X19
	013 Move X19, 0xEE8000
	014 Move W8, [X19+2614]
	015 Move W24, W3
	016 Move W21, W2
	017 Move W22, W1
	018 Move X20, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {49}
	023 Move X0, 0xC3C000
	024 Move X0, [X0+2120]
	025 Call 0x1C17CF4
	026 Move X0, 0xC3C000
	027 Move X0, [X0+2600]
	028 Call 0x1C17CF4
	029 Move X0, 0xC3C000
	030 Move X0, [X0+2608]
	031 Call 0x1C17CF4
	032 Move X0, 0xC3C000
	033 Move X0, [X0+2616]
	034 Call 0x1C17CF4
	035 Move X0, 0xBFC000
	036 Move X0, [X0+1880]
	037 Call 0x1C17CF4
	038 Move X0, 0xC3C000
	039 Move X0, [X0+2624]
	040 Call 0x1C17CF4
	041 Move X0, 0xC3C000
	042 Move X0, [X0+2632]
	043 Call 0x1C17CF4
	044 Move X0, 0xC3C000
	045 Move X0, [X0+2640]
	046 Call 0x1C17CF4
	047 Move W8, 1
	048 Move [X19+2614], W8
	049 Move [X31+32], X31
	050 Move [X31+40], X31
	051 Move [X31+48], X31
	052 Move X19, [X20+296]
	053 Move [X31+76], W31
	054 Add X1, X31, 76
	055 Move X0, X19
	056 Move X2, X31
	057 Call Monitor.Enter, X0, X1
	058 Move X0, [X20+296]
	059 Compare X0, 0
	060 JumpIfEqual {182}
	061 Move X8, 0xC3C000
	062 Move X8, [X8+2624]
	063 Move X1, [X8]
	064 Add X8, X31, 8
	065 Call List`1<Object>.GetEnumerator, X0
	066 Move X25, 0xC3C000
	067 Move X28, 0xC3C000
	068 Move X27, 0xC3C000
	069 Move X25, [X25+2608]
	070 NotImplemented "Instruction LDUR not yet implemented."
	071 Move X8, [X31+24]
	072 Move X28, [X28+2600]
	073 Move X27, [X27+2632]
	074 Move [X31+2], V0
	075 Move [X31+48], X8
	076 Move X1, [X25]
	077 Add X0, X31, 32
	078 Call Enumerator<Object>.MoveNext, X0
	079 Move TEMP, X0
	080 And TEMP, TEMP, 1
	081 Compare TEMP, 1
	082 JumpIfNotEqual {101}
	083 Move X23, [X31+48]
	084 Compare X23, 0
	085 JumpIfEqual {97}
	086 Move W8, [X23+20]
	087 NotImplemented "Instruction CMP not yet implemented."
	088 Move W8, [X23+18]
	089 NotImplemented "Instruction CMP not yet implemented."
	090 Move W8, [X23+16]
	091 And W31, W8, 2
	092 NotImplemented "Instruction CSET not yet implemented."
	093 Xor W8, W8, W24
	094 And W8, W8, 1
	095 Compare W8, 0
	096 JumpIfEqual {76}
	097 Move W8, W31
	098 Compare W8, 0
	099 JumpIfEqual {76}
	100 Move X24, X31
	101 Move X24, X31
	102 Move X23, X31
	103 Move X1, [X28]
	104 Add X0, X31, 32
	105 Call Enumerator<Object>.Dispose, X0
	106 Compare X24, 0
	107 JumpIfNotEqual {183}
	108 Compare X23, 0
	109 JumpIfEqual {117}
	110 Move X0, [X20+296]
	111 Compare X0, 0
	112 JumpIfEqual {185}
	113 Move X2, [X27]
	114 Move X1, X23
	115 Call List`1<Object>.Remove, X0, X1
	116 Move X20, X31
	117 Move X8, [X20+16]
	118 Compare X8, 0
	119 JumpIfEqual {186}
	120 Move W8, [X8+64]
	121 NotImplemented "Instruction CMP not yet implemented."
	122 Move W8, [X20+64]
	123 Subtract W8, W8, 3
	124 NotImplemented "Instruction CMP not yet implemented."
	125 Move X23, 0xBFC000
	126 Move X23, [X23+1880]
	127 Move [X31+8], W22
	128 Move X0, [X23]
	129 Add X1, X31, 8
	130 Call 0x1C17E04
	131 Move X22, X0
	132 Move X0, [X23]
	133 Move [X31+72], W21
	134 Add X1, X31, 72
	135 Call 0x1C17E04
	136 Move X9, 0xC3C000
	137 Move W8, [X20+64]
	138 Move X9, [X9+2120]
	139 Move X21, X0
	140 Move [X31+4], W8
	141 Move X0, [X9]
	142 Add X1, X31, 4
	143 Call 0x1C17E04
	144 Move X8, 0xC3C000
	145 Move X8, [X8+2640]
	146 Move X3, X0
	147 Move X0, [X8]
	148 Move X1, X22
	149 Move X2, X21
	150 Move X4, X31
	151 Call String.Format, X0, X1, X2, X3
	152 Move X2, X0
	153 Move W1, 5
	154 Move X0, X20
	155 Call PeerBase.EnqueueDebugReturn, X0, X1, X2
	156 Move X20, X31
	157 Move X23, X31
	158 Move W8, [X31+76]
	159 Compare W8, 0
	160 JumpIfEqual {164}
	161 Move X0, X19
	162 Move X1, X31
	163 Call Monitor.Exit, X0
	164 Compare X20, 0
	165 JumpIfNotEqual {180}
	166 Move X0, X23
	167 Move X20, [X31+144]
	168 Move X19, [X31+152]
	169 Move X22, [X31+128]
	170 Move X21, [X31+136]
	171 Move X24, [X31+112]
	172 Move X23, [X31+120]
	173 Move X26, [X31+96]
	174 Move X25, [X31+104]
	175 Move X28, [X31+80]
	176 Move X27, [X31+88]
	177 Move X30, [X31+64]
	178 Add X31, X31, 160
	179 Return X0
	180 Move X0, X20
	181 Call 0x1C17F18
	182 Call 0x1C17F20
	183 Move X0, X24
	184 Call 0x1C17F18
	185 Call 0x1C17F20
	186 Call 0x1C17F20
	187 Move X25, X1
	188 Move X26, X0
	189 Move X25, X1
	190 Move X26, X0
	191 Move X25, X1
	192 NotImplemented "Instruction CMP not yet implemented."
	193 Move X26, X0
	194 Move X0, X26
	195 Call 0x3EB2AD0
	196 Move X24, [X0]
	197 Call 0x3EB2AE0
	198 Move X24, X31
	199 Move X1, [X28]
	200 Add X0, X31, 32
	201 Call Enumerator<Object>.Dispose, X0
	202 Compare X24, 0
	203 JumpIfNotEqual {211}
	204 Move X23, X31
	205 NotImplemented "Instruction CMP not yet implemented."
	206 Move X0, X26
	207 Call 0x3EB2AD0
	208 Move X20, [X0]
	209 Call 0x3EB2AE0
	210 Move X20, X31
	211 Move X0, X24
	212 Call 0x1C17F18
	213 Move X25, X1
	214 Move X26, X0
	215 Move X26, X0
	216 Move W8, [X31+76]
	217 Compare W8, 0
	218 JumpIfEqual {222}
	219 Move X0, X19
	220 Move X1, X31
	221 Call Monitor.Exit, X0
	222 Compare X20, 0
	223 JumpIfNotEqual {226}
	224 Move X0, X26
	225 Call 0x1D2D690
	226 Move X0, X20
	227 Call 0x1C17F18
	228 Call 0x1991590

Method: System.String CommandListToString(ExitGames.Client.Photon.NCommand[] list)

Disassembly:
	0x034F9684 MOV X0, X21
	0x034F9688 BL 0x1C16F18
	0x034F968C BL 0x1C16F20
	0x034F9690 BL 0x1C16F20
	0x034F9694 BL 0x1C16F20
	0x034F9698 B 0x34F96B8
	0x034F969C B 0x34F96B8
	0x034F96A0 B 0x34F96B8
	0x034F96A4 B 0x34F96B8
	0x034F96A8 B 0x34F96B8
	0x034F96AC B 0x34F96B8
	0x034F96B0 B 0x34F96B8
	0x034F96B4 B 0x34F96B8
	0x034F96B8 MOV X20, X0
	0x034F96BC CMP W1, 0x1
	0x034F96C0 B.NE 0x34F96D8
	0x034F96C4 MOV X0, X20
	0x034F96C8 BL 0x3EB1AD0
	0x034F96CC LDR X21, [X0]
	0x034F96D0 BL 0x3EB1AE0
	0x034F96D4 B 0x34F9608
	0x034F96D8 MOV X21, X31
	0x034F96DC B 0x34F96E4
	0x034F96E0 MOV X20, X0
	0x034F96E4 LDRB W8, [X31 + 0xC]
	0x034F96E8 CBZ W8, 0x34F96F8
	0x034F96EC MOV X0, X19
	0x034F96F0 MOV X1, X31
	0x034F96F4 BL 0x33E14E4
	0x034F96F8 CBNZ X21, 0x34F9704
	0x034F96FC MOV X0, X20
	0x034F9700 BL 0x1D2C690
	0x034F9704 MOV X0, X21
	0x034F9708 BL 0x1C16F18
	0x034F970C BL 0x1990590
	0x034F9710 STR X30, [X31 - 0x10]!
	0x034F9714 LDR X8, [X0 + 0x10]
	0x034F9718 CBZ X8, 0x34F9738
	0x034F971C LDR X8, [X8 + 0x10]
	0x034F9720 CBZ X8, 0x34F9738
	0x034F9724 LDRB W8, [X8 + 0x40]
	0x034F9728 CMP W8, W1, UXTB
	0x034F972C CSET W0, CS
	0x034F9730 LDR X30, [X31], #0x10
	0x034F9734 RET
	0x034F9738 BL 0x1C16F20
	0x034F973C STR X30, [X31 - 0x10]!
	0x034F9740 LDR X0, [X0 + 0x10]
	0x034F9744 CBZ X0, 0x34F9750
	0x034F9748 LDR X30, [X31], #0x10
	0x034F974C B 0x34F116C
	0x034F9750 BL 0x1C16F20
	0x034F9754 STR X30, [X31 - 0x30]!
	0x034F9758 STP X22, X21, [X31 + 0x10]
	0x034F975C STP X20, X19, [X31 + 0x20]
	0x034F9760 ADRP X21, 0xEE6000
	0x034F9764 LDRB W8, [X21 + 0xA3E]
	0x034F9768 MOV W20, W1
	0x034F976C MOV X19, X0
	0x034F9770 TBNZ X8, 0x0, 0x34F9794
	0x034F9774 ADRP X0, 0xC3A000
	0x034F9778 LDR X0, [X0 + 0xB60]
	0x034F977C BL 0x1C16CF4
	0x034F9780 ADRP X0, 0xC3A000
	0x034F9784 LDR X0, [X0 + 0x830]
	0x034F9788 BL 0x1C16CF4
	0x034F978C MOVZ W8, 0x1
	0x034F9790 STRB W8, [X21 + 0xA3E]
	0x034F9794 LDR X0, [X19 + 0x10]
	0x034F9798 MOVZ W8, 0x3
	0x034F979C STR W8, [X19 + 0x1C]
	0x034F97A0 CBZ X0, 0x34F97F8
	0x034F97A4 ADRP X21, 0xC3A000
	0x034F97A8 ADRP X22, 0xC3A000
	0x034F97AC LDR X21, [X21 + 0x830]
	0x034F97B0 LDR X22, [X22 + 0xB60]
	0x034F97B4 MOV W1, W20
	0x034F97B8 BL 0x34F0DFC
	0x034F97BC LDR X0, [X21]
	0x034F97C0 LDR X20, [X19 + 0x10]
	0x034F97C4 BL 0x1C16F10
	0x034F97C8 LDR X2, [X22]
	0x034F97CC MOV X1, X19
	0x034F97D0 MOV X3, X31
	0x034F97D4 MOV X21, X0
	0x034F97D8 BL 0x34FF704
	0x034F97DC CBZ X20, 0x34F97F8
	0x034F97E0 MOV X0, X20
	0x034F97E4 MOV X1, X21
	0x034F97E8 LDP X20, X19, [X31 + 0x20]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xEE7000
	007 Move W8, [X21+2615]
	008 Move X19, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {28}
	014 Move X0, 0xBFB000
	015 Move X0, [X0+2288]
	016 Call 0x1C17CF4
	017 Move X0, 0xBFD000
	018 Move X0, [X0+632]
	019 Call 0x1C17CF4
	020 Move X0, 0xC28000
	021 Move X0, [X0+4024]
	022 Call 0x1C17CF4
	023 Move X0, 0xC3B000
	024 Move X0, [X0+2792]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X21+2615], W8
	028 Move X8, [X20+16]
	029 Compare X8, 0
	030 JumpIfEqual {96}
	031 Move W8, [X8+64]
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move X8, 0xBFD000
	034 Move X8, [X8+632]
	035 Move X8, [X8]
	036 Move X8, [X8+184]
	037 Move X0, [X8]
	038 Move X8, 0xBFB000
	039 Move X8, [X8+2288]
	040 Move X0, [X8]
	041 Call 0x1C17F10
	042 Move X1, X31
	043 Move X20, X0
	044 Call StringBuilder..ctor, X0
	045 Move [X31+12], W31
	046 Compare X19, 0
	047 JumpIfEqual {96}
	048 Move W8, [X19+24]
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Move X21, 0xC28000
	051 Move X22, 0xC3B000
	052 Move X21, [X21+4024]
	053 Move X22, [X22+2792]
	054 Add X0, X31, 12
	055 Move X1, X31
	056 Call Int32.ToString, X0
	057 Move X1, [X21]
	058 Move X2, X31
	059 Call String.Concat, X0, X1
	060 Compare X20, 0
	061 JumpIfEqual {96}
	062 Move X1, X0
	063 Move X0, X20
	064 Move X2, X31
	065 Call StringBuilder.Append, X0, X1
	066 NotImplemented "Instruction LDRSW not yet implemented."
	067 Move W9, [X19+24]
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Add X8, X19, X8
	070 Move X1, [X8+32]
	071 Move X0, X20
	072 Move X2, X31
	073 Call StringBuilder.Append, X0, X1
	074 Move X1, [X22]
	075 Move X0, X20
	076 Move X2, X31
	077 Call StringBuilder.Append, X0, X1
	078 Move W8, [X31+12]
	079 Add W8, W8, 1
	080 Move [X31+12], W8
	081 Move W9, [X19+24]
	082 NotImplemented "Instruction CMP not yet implemented."
	083 Compare X20, 0
	084 JumpIfEqual {96}
	085 Move X8, [X20]
	086 Move X0, X20
	087 Move X9, [X8+360]
	088 Move X1, [X8+368]
	089 NotImplemented "Instruction BLR not yet implemented."
	090 Move X20, [X31+32]
	091 Move X19, [X31+40]
	092 Move X22, [X31+16]
	093 Move X21, [X31+24]
	094 Move X30, [X31+48]
	095 Return X0
	096 Call 0x1C17F20
	097 Call 0x1C17F28

Method: System.Void .cctor()

Disassembly:
	0x034F97EC LDP X22, X21, [X31 + 0x10]
	0x034F97F0 LDR X30, [X31], #0x30
	0x034F97F4 B 0x34F78A8
	0x034F97F8 BL 0x1C16F20
	0x034F97FC STR X30, [X31 - 0x40]!
	0x034F9800 STP X24, X23, [X31 + 0x10]
	0x034F9804 STP X22, X21, [X31 + 0x20]
	0x034F9808 STP X20, X19, [X31 + 0x30]
	0x034F980C ADRP X21, 0xEE6000
	0x034F9810 LDRB W8, [X21 + 0xA40]
	0x034F9814 MOV X19, X2
	0x034F9818 MOV X20, X1
	0x034F981C TBNZ X8, 0x0, 0x34F984C
	0x034F9820 ADRP X0, 0xBFA000
	0x034F9824 LDR X0, [X0 + 0x618]
	0x034F9828 BL 0x1C16CF4
	0x034F982C ADRP X0, 0xC03000
	0x034F9830 LDR X0, [X0 + 0x8D8]
	0x034F9834 BL 0x1C16CF4
	0x034F9838 ADRP X0, 0xC07000
	0x034F983C LDR X0, [X0 + 0x968]
	0x034F9840 BL 0x1C16CF4
	0x034F9844 MOVZ W8, 0x1
	0x034F9848 STRB W8, [X21 + 0xA40]
	0x034F984C MOV X0, X20
	0x034F9850 MOV X1, X31
	0x034F9854 STRB W31, [X31 + 0xC]
	0x034F9858 STR X31, [X19]
	0x034F985C BL 0x32277A8
	0x034F9860 MOV W8, W0
	0x034F9864 MOV W0, W31
	0x034F9868 TBNZ X8, 0x0, 0x34F9980
	0x034F986C ADRP X8, 0xC03000
	0x034F9870 LDR X8, [X8 + 0x8D8]
	0x034F9874 MOVZ W1, 0x1
	0x034F9878 LDR X0, [X8]
	0x034F987C BL 0x1C16D6C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0xEE7000
	005 Move X20, 0xBFB000
	006 Move W8, [X19+2616]
	007 Move X20, [X20+1560]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {20}
	012 Move X0, 0xBFB000
	013 Move X0, [X0+1560]
	014 Call 0x1C17CF4
	015 Move X0, 0xC3B000
	016 Move X0, [X0+1888]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X19+2616], W8
	020 Move X0, [X20]
	021 Move W1, 2
	022 Call 0x1C17D6C
	023 Compare X0, 0
	024 JumpIfEqual {43}
	025 Move W8, [X0+24]
	026 Compare W8, 0
	027 JumpIfEqual {42}
	028 Move W9, 243
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move [X0+32], W9
	031 Move X8, 0xC3B000
	032 Move X8, [X8+1888]
	033 Move W9, 2
	034 Move [X0+33], W9
	035 Move X20, [X31+16]
	036 Move X19, [X31+24]
	037 Move X8, [X8]
	038 Move X8, [X8+184]
	039 Move [X8], X0
	040 Move X30, [X31+32]
	041 Return 
	042 Call 0x1C17F28
	043 Call 0x1C17F20

Method: System.Void <ExecuteCommand>b__73_0()

Disassembly:
	0x034F9880 CBZ X0, 0x34F9998
	0x034F9884 LDR W8, [X0 + 0x18]
	0x034F9888 MOV X1, X0
	0x034F988C CBZ W8, 0x34F9994
	0x034F9890 MOVZ W8, 0x2E
	0x034F9894 STRH W8, [X1 + 0x20]
	0x034F9898 CBZ X20, 0x34F9998
	0x034F989C MOV X0, X20

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+40]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 Move X8, [X0]
	006 Move X2, [X8+392]
	007 Move X1, [X8+400]
	008 Move X30, [X31+16]
	009 CallNoReturn X2
	010 Call 0x1C17F20

