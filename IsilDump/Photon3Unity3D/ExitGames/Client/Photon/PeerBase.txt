Type: ExitGames.Client.Photon.PeerBase

Method: System.String get_ServerAddress()

Disassembly:
	0x034FD6DC LDR X23, [X19 + 0xF0]
	0x034FD6E0 MOV X0, X21

ISIL:
	001 Move X0, [X0+48]
	002 Return X0

Method: System.Void set_ServerAddress(System.String value)

Disassembly:
	0x034FD6E4 MOV X1, X31
	0x034FD6E8 BL 0x3517FCC

ISIL:
	001 Move [X0+48], X1
	002 Return 

Method: System.String get_ProxyServerAddress()

Disassembly:
	0x034FD6EC MOV X24, X0
	0x034FD6F0 MOV X0, X21

ISIL:
	001 Move X0, [X0+56]
	002 Return X0

Method: System.Void set_ProxyServerAddress(System.String value)

Disassembly:
	0x034FD6F4 MOV X1, X31
	0x034FD6F8 BL 0x351806C

ISIL:
	001 Move [X0+56], X1
	002 Return 

Method: ExitGames.Client.Photon.IPhotonPeerListener get_Listener()

Disassembly:
	0x034F204C BL 0x1C16CF4
	0x034F2050 ADRP X0, 0xC41000
	0x034F2054 LDR X0, [X0 + 0x8E0]
	0x034F2058 BL 0x1C16CF4
	0x034F205C ADRP X0, 0xC41000
	0x034F2060 LDR X0, [X0 + 0x8E8]
	0x034F2064 BL 0x1C16CF4

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+16]
	003 Compare X8, 0
	004 JumpIfEqual {8}
	005 Move X0, [X8+72]
	006 Move X30, [X31+16]
	007 Return X0
	008 Call 0x1C17F20

Method: ExitGames.Client.Photon.DebugLevel get_debugOut()

Disassembly:
	0x034F2150 B.GT 0x34F2180
	0x034F2154 LDP W8, W21, [X20 + 0x30]
	0x034F2158 CMP W21, W8
	0x034F215C B.GE 0x34F2180
	0x034F2160 LDR X0, [X20 + 0x58]
	0x034F2164 CBZ X0, 0x34F2B88
	0x034F2168 MOV X1, X31

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+16]
	003 Compare X8, 0
	004 JumpIfEqual {8}
	005 Move W0, [X8+64]
	006 Move X30, [X31+16]
	007 Return X0
	008 Call 0x1C17F20

Method: System.Int32 get_DisconnectTimeout()

Disassembly:
	0x034F76C8 LDR X8, [X8 + 0xA50]
	0x034F76CC MOV X3, X0
	0x034F76D0 LDR X0, [X8]
	0x034F76D4 MOV X1, X22
	0x034F76D8 MOV X2, X21
	0x034F76DC MOV X4, X31
	0x034F76E0 BL 0x3227C18

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+16]
	003 Compare X0, 0
	004 JumpIfEqual {9}
	005 Move X1, X31
	006 Move X30, [X31+16]
	007 Call PhotonPeer.get_DisconnectTimeout, X0
	008 Return X0
	009 Call 0x1C17F20

Method: System.Int32 get_timePingInterval()

Disassembly:
	0x034F5CC8 LDRB W8, [X22 + 0xA30]
	0x034F5CCC MOV W21, W2
	0x034F5CD0 MOV X19, X1
	0x034F5CD4 MOV X20, X0
	0x034F5CD8 TBNZ X8, 0x0, 0x34F5D08
	0x034F5CDC ADRP X0, 0xC3E000
	0x034F5CE0 LDR X0, [X0 + 0x9A0]

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+16]
	003 Compare X8, 0
	004 JumpIfEqual {8}
	005 Move W0, [X8+120]
	006 Move X30, [X31+16]
	007 Return X0
	008 Call 0x1C17F20

Method: System.Byte get_ChannelCount()

Disassembly:
	0x034F0D18 LDR X21, [X0]
	0x034F0D1C BL 0x3EB1AE0
	0x034F0D20 MOV W22, W31
	0x034F0D24 B 0x34F0944
	0x034F0D28 MOV X21, X31
	0x034F0D2C ADRP X8, 0xC43000
	0x034F0D30 LDR X8, [X8 + 0x7F8]

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+16]
	003 Compare X8, 0
	004 JumpIfEqual {8}
	005 Move W0, [X8+106]
	006 Move X30, [X31+16]
	007 Return X0
	008 Call 0x1C17F20

Method: System.Int64 get_BytesOut()

Disassembly:
	0x034FD6FC CBZ X23, 0x34FD868
	0x034FD700 ADRP X10, 0xC36000

ISIL:
	001 Move X0, [X0+144]
	002 Return X0

Method: System.Int64 get_BytesIn()

Disassembly:
	0x034FD704 LDR X8, [X23]
	0x034FD708 LDR X10, [X10 + 0xCB0]

ISIL:
	001 Move X0, [X0+152]
	002 Return X0

Method: System.Int32 get_QueuedIncomingCommandsCount()

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Int32 get_QueuedOutgoingCommandsCount()

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Int32 get_SentReliableCommandsCount()

Disassembly:
	0x034FD70C MOV W25, W0
	0x034FD710 LDRH W9, [X8 + 0x12E]

ISIL:
	001 Move W0, W31
	002 Return X0

Method: System.String get_PeerID()

Disassembly:
	0x034FD714 LDR X1, [X10]
	0x034FD718 CBZ X9, 0x34FD73C
	0x034FD71C LDR X10, [X8 + 0xB0]
	0x034FD720 ADD X10, X10, 0x8
	0x034FD724 LDUR X11, [X10 - 0x8]
	0x034FD728 CMP X11, X1
	0x034FD72C B.EQ 0x34FD74C
	0x034FD730 SUBS X9, X9, 0x1

ISIL:
	001 Move [X31-16], X30
	002 NotImplemented "Instruction LDRH not yet implemented."
	003 Add X0, X31, 12
	004 Move X1, X31
	005 NotImplemented "Instruction STRH not yet implemented."
	006 Call UInt16.ToString, X0
	007 Move X30, [X31+16]
	008 Return X0

Method: System.Int32 get_timeInt()

Disassembly:
	0x034F49AC MOV X1, X31
	0x034F49B0 BL 0x1C16DEC
	0x034F49B4 BL 0x1C16F20
	0x034F49B8 MOV X0, X25
	0x034F49BC BL 0x1C16F18
	0x034F49C0 BL 0x1C16F20
	0x034F49C4 BL 0x1C16F20
	0x034F49C8 BL 0x1C16F20

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+192]
	003 Compare X0, 0
	004 JumpIfEqual {9}
	005 Move X1, X31
	006 Call Stopwatch.get_ElapsedMilliseconds, X0
	007 Move X30, [X31+16]
	008 Return X0
	009 Call 0x1C17F20

Method: System.Int32 get_outgoingStreamBufferSize()

Disassembly:
	0x034FD734 ADD X10, X10, 0x10
	0x034FD738 B.NE 0x34FD724
	0x034FD73C MOVZ W2, 0x4
	0x034FD740 MOV X0, X23
	0x034FD744 BL 0x1C5C788
	0x034FD748 B 0x34FD75C
	0x034FD74C LDR W9, [X10]
	0x034FD750 ADD W9, W9, 0x4
	0x034FD754 ADD X8, X8, W9, 0x4, SXTW
	0x034FD758 ADD X0, X8, 0x138
	0x034FD75C LDP X8, X4, [X0]
	0x034FD760 MOV X0, X23
	0x034FD764 MOV X1, X24
	0x034FD768 MOV W2, W31
	0x034FD76C MOV W3, W25
	0x034FD770 BLR X8
	0x034FD774 MOV X23, X0
	0x034FD778 MOV X0, X21
	0x034FD77C MOV X1, X31
	0x034FD780 MOV X2, X31
	0x034FD784 BL 0x3517EFC
	0x034FD788 LDR X1, [X19 + 0xE8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xEE3000
	005 Move X19, 0xBFF000
	006 Move W8, [X20+2669]
	007 Move X19, [X19+3808]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xBFF000
	013 Move X0, [X0+3808]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+2669], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {23}
	021 Call 0x1C17DFC
	022 Move X0, [X19]
	023 Move X8, [X0+184]
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move W0, [X8+20]
	027 Move X30, [X31+32]
	028 Return X0

Method: System.Int32 get_mtu()

Disassembly:
	0x034F0CFC B 0x34F0D00
	0x034F0D00 MOV X22, X1
	0x034F0D04 MOV X24, X0
	0x034F0D08 CMP W22, 0x1
	0x034F0D0C B.NE 0x34F0D28
	0x034F0D10 MOV X0, X24
	0x034F0D14 BL 0x3EB1AD0

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+16]
	003 Compare X0, 0
	004 JumpIfEqual {9}
	005 Move X1, X31
	006 Move X30, [X31+16]
	007 Call PhotonPeer.get_MaximumTransferUnit, X0
	008 Return X0
	009 Call 0x1C17F20

Method: System.Boolean get_IsIpv6()

Disassembly:
	0x034FD78C CBZ X1, 0x34FD868
	0x034FD790 LDR W3, [X1 + 0x18]
	0x034FD794 MOV X0, X21
	0x034FD798 MOV W2, W31
	0x034FD79C MOV X4, X31
	0x034FD7A0 BL 0x3517F60
	0x034FD7A4 CBZ X23, 0x34FD868
	0x034FD7A8 LDR W3, [X23 + 0x18]

ISIL:
	001 Move X8, [X0+40]
	002 Compare X8, 0
	003 JumpIfEqual {8}
	004 Move W8, [X8+68]
	005 NotImplemented "Instruction CMP not yet implemented."
	006 NotImplemented "Instruction CSET not yet implemented."
	007 Return X0
	008 Move W0, W31
	009 Return X0

Method: System.Void .ctor()

Disassembly:
	0x034F03B0 MOV X2, X31
	0x034F03B4 BL 0x33DE64C
	0x034F03B8 LDR X8, [X19 + 0x128]
	0x034F03BC CBZ X8, 0x34F05C0
	0x034F03C0 LDP W2, W9, [X8 + 0x18]
	0x034F03C4 ADD W9, W9, 0x1
	0x034F03C8 CMP W2, 0x1
	0x034F03CC STP W31, W9, [X8 + 0x18]
	0x034F03D0 B.LT 0x34F03E4
	0x034F03D4 LDR X0, [X8 + 0x10]
	0x034F03D8 MOV W1, W31
	0x034F03DC MOV X3, X31
	0x034F03E0 BL 0x339FA34
	0x034F03E4 MOV X21, X31
	0x034F03E8 MOVZ W22, 0x7
	0x034F03EC LDRB W8, [X31 + 0x1C]
	0x034F03F0 CBZ W8, 0x34F0400
	0x034F03F4 MOV X0, X20
	0x034F03F8 MOV X1, X31
	0x034F03FC BL 0x33E14E4
	0x034F0400 CBNZ X21, 0x34F05B4
	0x034F0404 CMP W22, 0x7
	0x034F0408 B.EQ 0x34F0410
	0x034F040C CBNZ W22, 0x34F0594
	0x034F0410 LDR X20, [X19 + 0x188]
	0x034F0414 STRB W31, [X31 + 0x18]
	0x034F0418 ADD X1, X31, 0x18
	0x034F041C MOV X0, X20
	0x034F0420 MOV X2, X31
	0x034F0424 BL 0x33DE64C
	0x034F0428 LDR X21, [X19 + 0x188]
	0x034F042C CBZ X21, 0x34F05BC
	0x034F0430 LDR W8, [X21 + 0x18]
	0x034F0434 CMP W8, 0x1
	0x034F0438 B.LT 0x34F0468
	0x034F043C MOV W22, W31
	0x034F0440 CMP W22, W8
	0x034F0444 B.CS 0x34F05AC
	0x034F0448 ADD X8, X21, W22, 0x3, SXTW
	0x034F044C LDR X0, [X8 + 0x20]
	0x034F0450 CBZ X0, 0x34F05A8
	0x034F0454 BL 0x34EE9B8
	0x034F0458 LDR W8, [X21 + 0x18]
	0x034F045C ADD W22, W22, 0x1
	0x034F0460 CMP W22, W8
	0x034F0464 B.LT 0x34F0440
	0x034F0468 MOV X21, X31
	0x034F046C MOVZ W22, 0xA
	0x034F0470 LDRB W8, [X31 + 0x18]
	0x034F0474 CBZ W8, 0x34F0484
	0x034F0478 MOV X0, X20
	0x034F047C MOV X1, X31
	0x034F0480 BL 0x33E14E4
	0x034F0484 CBNZ X21, 0x34F05B4
	0x034F0488 CMP W22, 0xA
	0x034F048C B.EQ 0x34F0494
	0x034F0490 CBNZ W22, 0x34F0594
	0x034F0494 LDR X0, [X19 + 0x110]
	0x034F0498 CBZ X0, 0x34F05B0
	0x034F049C LDRB W21, [X0 + 0x10]
	0x034F04A0 MOV W1, W31
	0x034F04A4 BL 0x34F06E0
	0x034F04A8 LDR X0, [X19 + 0x120]
	0x034F04AC CBZ X0, 0x34F05B0
	0x034F04B0 MOVZ W2, 0x4
	0x034F04B4 MOVZ W4, 0xFF
	0x034F04B8 MOV X1, X19
	0x034F04BC MOV X3, X31
	0x034F04C0 MOVZ W22, 0x4
	0x034F04C4 BL 0x34F0030
	0x034F04C8 MOV X20, X0
	0x034F04CC MOV X0, X19
	0x034F04D0 MOV X1, X20
	0x034F04D4 STRB W22, [X19 + 0x40]
	0x034F04D8 BL 0x34F01EC
	0x034F04DC LDR X8, [X19]
	0x034F04E0 MOV X0, X19
	0x034F04E4 LDR X9, [X8 + 0x238]
	0x034F04E8 LDR X1, [X8 + 0x240]
	0x034F04EC BLR X9
	0x034F04F0 LDR X0, [X19 + 0x10]
	0x034F04F4 CBZ X0, 0x34F05B0
	0x034F04F8 MOV X1, X31
	0x034F04FC BL 0x350257C
	0x034F0500 TBZ X0, 0x0, 0x34F0524
	0x034F0504 LDR X8, [X19 + 0x10]
	0x034F0508 CBZ X8, 0x34F05B0
	0x034F050C CBZ X20, 0x34F05B0
	0x034F0510 LDR X0, [X8 + 0xA8]
	0x034F0514 CBZ X0, 0x34F05B0
	0x034F0518 LDR W1, [X20 + 0x54]
	0x034F051C MOV X2, X31
	0x034F0520 BL 0x3522CDC
	0x034F0524 LDR X0, [X19 + 0x110]
	0x034F0528 CBZ X0, 0x34F05B0
	0x034F052C CMP W21, 0x0
	0x034F0530 CSET W1, NE
	0x034F0534 BL 0x34F06E0
	0x034F0538 LDR X0, [X19 + 0x28]
	0x034F053C CBZ X0, 0x34F05B0
	0x034F0540 LDR X8, [X0]
	0x034F0544 LDP X9, X1, [X8 + 0x188]
	0x034F0548 BLR X9
	0x034F054C MOVZ W1, 0x401
	0x034F0550 MOV X0, X19
	0x034F0554 STRB W31, [X19 + 0x40]
	0x034F0558 BL 0x34F0DFC
	0x034F055C LDR X20, [X19 + 0x158]
	0x034F0560 STRB W31, [X31 + 0xC]
	0x034F0564 ADD X1, X31, 0xC

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X23, 0xEF0000
	010 Move X21, 0xC44000
	011 Move X20, 0xC44000
	012 Move X22, 0xC0C000
	013 Move W8, [X23+2670]
	014 Move X21, [X21+1936]
	015 Move X20, [X20+1944]
	016 Move X22, [X22+1800]
	017 Move X19, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {48}
	022 Move X0, 0xC44000
	023 Move X0, [X0+1952]
	024 Call 0x1C17CF4
	025 Move X0, 0xC44000
	026 Move X0, [X0+1960]
	027 Call 0x1C17CF4
	028 Move X0, 0xC44000
	029 Move X0, [X0+1968]
	030 Call 0x1C17CF4
	031 Move X0, 0xC44000
	032 Move X0, [X0+1912]
	033 Call 0x1C17CF4
	034 Move X0, 0xC44000
	035 Move X0, [X0+1944]
	036 Call 0x1C17CF4
	037 Move X0, 0xC44000
	038 Move X0, [X0+1936]
	039 Call 0x1C17CF4
	040 Move X0, 0xC0B000
	041 Move X0, [X0+744]
	042 Call 0x1C17CF4
	043 Move X0, 0xC0C000
	044 Move X0, [X0+1800]
	045 Call 0x1C17CF4
	046 Move W8, 1
	047 Move [X23+2670], W8
	048 Move X25, 0xC0B000
	049 Move X25, [X25+744]
	050 Move X0, [X21]
	051 Move X24, 0xC44000
	052 Move X23, 0xC44000
	053 Move X21, 0xC44000
	054 Move X24, [X24+1960]
	055 Move X23, [X23+1952]
	056 Move X21, [X21+1968]
	057 Call 0x1C17F10
	058 Move X1, [X20]
	059 Move X20, X0
	060 Call Queue`1<Object>..ctor, X0
	061 Move W8, 0xFFFF
	062 Move [X19+96], X20
	063 NotImplemented "Instruction STRH not yet implemented."
	064 Move X0, [X22]
	065 Move W8, [X0+224]
	066 Compare W8, 0
	067 JumpIfNotEqual {69}
	068 Call 0x1C17DFC
	069 Move X0, X31
	070 Call Stopwatch.StartNew
	071 Move [X19+192], X0
	072 Move [X19+224], W31
	073 Move X0, [X25]
	074 Call 0x1C17F10
	075 Move X1, X31
	076 Move X20, X0
	077 Call Random..ctor, X0
	078 Move [X19+248], X20
	079 Move X0, [X24]
	080 Call 0x1C17F10
	081 Move X1, [X23]
	082 Move X20, X0
	083 Call LinkedList`1<Object>..ctor, X0
	084 Move [X19+256], X20
	085 Move X0, [X24]
	086 Call 0x1C17F10
	087 Move X1, [X23]
	088 Move X20, X0
	089 Call LinkedList`1<Object>..ctor, X0
	090 Move [X19+264], X20
	091 Move X0, [X21]
	092 Call 0x1C17F10
	093 Move X20, X0
	094 Call NetworkSimulationSet..ctor, X0
	095 Move X0, X19
	096 Move X1, X31
	097 Move [X19+272], X20
	098 Call Object..ctor, X0
	099 Move X8, [X19+272]
	100 Compare X8, 0
	101 JumpIfEqual {124}
	102 Move X20, 0xC44000
	103 Move X20, [X20+1912]
	104 Move [X8+48], X19
	105 Move X0, [X20]
	106 Move W8, [X0+224]
	107 Compare W8, 0
	108 JumpIfNotEqual {111}
	109 Call 0x1C17DFC
	110 Move X0, [X20]
	111 Move X8, [X0+184]
	112 Move X20, [X31+48]
	113 Move X19, [X31+56]
	114 Move X22, [X31+32]
	115 Move X21, [X31+40]
	116 Move X24, [X31+16]
	117 Move X23, [X31+24]
	118 NotImplemented "Instruction LDRH not yet implemented."
	119 Add W9, W9, 1
	120 NotImplemented "Instruction STRH not yet implemented."
	121 Move X30, [X31+64]
	122 Move X25, [X31+72]
	123 Return 
	124 Call 0x1C17F20

Method: ExitGames.Client.Photon.StreamBuffer MessageBufferPoolGet()

Disassembly:
	0x034F6754 BL 0x33E14E4
	0x034F6758 CBNZ X21, 0x34F676C
	0x034F675C LDP X20, X19, [X31 + 0x20]
	0x034F6760 LDP X22, X21, [X31 + 0x10]
	0x034F6764 LDR X30, [X31], #0x30
	0x034F6768 RET
	0x034F676C MOV X0, X21
	0x034F6770 BL 0x1C16F18
	0x034F6774 BL 0x1C16F20
	0x034F6778 B 0x34F6784
	0x034F677C B 0x34F6784
	0x034F6780 B 0x34F6784
	0x034F6784 MOV X20, X0
	0x034F6788 CMP W1, 0x1
	0x034F678C B.NE 0x34F67A4
	0x034F6790 MOV X0, X20
	0x034F6794 BL 0x3EB1AD0
	0x034F6798 LDR X21, [X0]
	0x034F679C BL 0x3EB1AE0
	0x034F67A0 B 0x34F6744
	0x034F67A4 MOV X21, X31
	0x034F67A8 B 0x34F67B0
	0x034F67AC MOV X20, X0
	0x034F67B0 LDRB W8, [X31 + 0xC]
	0x034F67B4 CBZ W8, 0x34F67C4
	0x034F67B8 MOV X0, X19
	0x034F67BC MOV X1, X31
	0x034F67C0 BL 0x33E14E4
	0x034F67C4 CBNZ X21, 0x34F67D0
	0x034F67C8 MOV X0, X20
	0x034F67CC BL 0x1D2C690
	0x034F67D0 MOV X0, X21
	0x034F67D4 BL 0x1C16F18
	0x034F67D8 BL 0x1990590
	0x034F67DC SUB X31, X31, 0x40
	0x034F67E0 STP X30, X23, [X31 + 0x10]
	0x034F67E4 STP X22, X21, [X31 + 0x20]
	0x034F67E8 STP X20, X19, [X31 + 0x30]
	0x034F67EC ADRP X23, 0xEE9000
	0x034F67F0 LDRB W8, [X23 + 0xA4D]
	0x034F67F4 MOV W19, W3
	0x034F67F8 MOV X21, X2
	0x034F67FC MOV W22, W1
	0x034F6800 MOV X20, X0
	0x034F6804 TBNZ X8, 0x0, 0x34F681C
	0x034F6808 ADRP X0, 0xC05000
	0x034F680C LDR X0, [X0 + 0xF00]
	0x034F6810 BL 0x1C16CF4
	0x034F6814 MOVZ W8, 0x1
	0x034F6818 STRB W8, [X23 + 0xA4D]
	0x034F681C CBZ X21, 0x34F6920
	0x034F6820 LDRB W8, [X21 + 0x10]
	0x034F6824 ANDS W31, W8, 0x2
	0x034F6828 MOVZ W8, 0x10
	0x034F682C CSINC W8, W8, W31, NE
	0x034F6830 CBZ X20, 0x34F6920
	0x034F6834 LDR W9, [X20 + 0x18]
	0x034F6838 CMP W9, W22
	0x034F683C B.LS 0x34F691C
	0x034F6840 ADD X9, X20, W22, SXTW
	0x034F6844 STRB W8, [X9 + 0x20]
	0x034F6848 LDR W9, [X20 + 0x18]
	0x034F684C ADD W8, W22, 0x1
	0x034F6850 CMP W8, W9
	0x034F6854 B.CS 0x34F691C
	0x034F6858 LDRB W9, [X21 + 0x12]
	0x034F685C ADD X8, X20, W8, SXTW
	0x034F6860 STRB W9, [X8 + 0x20]
	0x034F6864 LDR W9, [X20 + 0x18]
	0x034F6868 ADD W8, W22, 0x2
	0x034F686C CMP W8, W9
	0x034F6870 B.CS 0x34F691C
	0x034F6874 ADD X8, X20, W8, SXTW
	0x034F6878 ADD W9, W22, 0x4
	0x034F687C STRB W31, [X8 + 0x20]
	0x034F6880 STR W9, [X31 + 0xC]
	0x034F6884 LDR W9, [X20 + 0x18]
	0x034F6888 ADD W8, W22, 0x3
	0x034F688C CMP W8, W9
	0x034F6890 B.CS 0x34F691C
	0x034F6894 ADRP X9, 0xC05000
	0x034F6898 LDR X9, [X9 + 0xF00]
	0x034F689C ADD X8, X20, W8, SXTW
	0x034F68A0 MOVZ W10, 0x4
	0x034F68A4 STRB W10, [X8 + 0x20]
	0x034F68A8 LDR X0, [X9]
	0x034F68AC LDR W8, [X0 + 0xE0]
	0x034F68B0 CBNZ W8, 0x34F68B8
	0x034F68B4 BL 0x1C16DFC
	0x034F68B8 ADD X2, X31, 0xC
	0x034F68BC MOVZ W0, 0x14
	0x034F68C0 MOV X1, X20
	0x034F68C4 MOV X3, X31
	0x034F68C8 BL 0x35067BC
	0x034F68CC ADD X2, X31, 0xC
	0x034F68D0 MOV W0, W31
	0x034F68D4 MOV X1, X20
	0x034F68D8 MOV X3, X31
	0x034F68DC BL 0x35067BC
	0x034F68E0 LDR W0, [X21 + 0x14]
	0x034F68E4 ADD X2, X31, 0xC
	0x034F68E8 MOV X1, X20
	0x034F68EC MOV X3, X31
	0x034F68F0 BL 0x35067BC
	0x034F68F4 ADD X2, X31, 0xC
	0x034F68F8 MOV W0, W19
	0x034F68FC MOV X1, X20
	0x034F6900 MOV X3, X31
	0x034F6904 BL 0x35067BC
	0x034F6908 LDP X20, X19, [X31 + 0x30]
	0x034F690C LDP X22, X21, [X31 + 0x20]
	0x034F6910 LDP X30, X23, [X31 + 0x10]
	0x034F6914 ADD X31, X31, 0x40
	0x034F6918 RET
	0x034F691C BL 0x1C16F28
	0x034F6920 BL 0x1C16F20

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, 0xEEA000
	007 Move X20, 0xC3E000
	008 Move W8, [X19+2671]
	009 Move X20, [X20+1912]
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {28}
	014 Move X0, 0xC3E000
	015 Move X0, [X0+1912]
	016 Call 0x1C17CF4
	017 Move X0, 0xC3E000
	018 Move X0, [X0+2440]
	019 Call 0x1C17CF4
	020 Move X0, 0xC3E000
	021 Move X0, [X0+2448]
	022 Call 0x1C17CF4
	023 Move X0, 0xC07000
	024 Move X0, [X0+2984]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X19+2671], W8
	028 Move X0, [X20]
	029 Move W8, [X0+224]
	030 Compare W8, 0
	031 JumpIfNotEqual {34}
	032 Call 0x1C17DFC
	033 Move X0, [X20]
	034 Move X8, [X0+184]
	035 Move X19, [X8+8]
	036 Move [X31+12], W31
	037 Add X1, X31, 12
	038 Move X0, X19
	039 Move X2, X31
	040 Call Monitor.Enter, X0, X1
	041 Move X8, [X20]
	042 Move W9, [X8+224]
	043 Compare W9, 0
	044 JumpIfNotEqual {48}
	045 Move X0, X8
	046 Call 0x1C17DFC
	047 Move X8, [X20]
	048 Move X9, [X8+184]
	049 Move X9, [X9+8]
	050 Compare X9, 0
	051 JumpIfEqual {96}
	052 Move W10, [X9+32]
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Move W10, [X8+224]
	055 Compare W10, 0
	056 JumpIfNotEqual {64}
	057 Move X0, X8
	058 Call 0x1C17DFC
	059 Move X8, [X20]
	060 Move X8, [X8+184]
	061 Move X9, [X8+8]
	062 Compare X9, 0
	063 JumpIfEqual {97}
	064 Move X8, 0xC3E000
	065 Move X8, [X8+2440]
	066 Move X1, [X8]
	067 Move X0, X9
	068 Call Queue`1<Object>.Dequeue, X0
	069 Move X20, X0
	070 Move X8, 0xC07000
	071 Move X8, [X8+2984]
	072 Move X0, [X8]
	073 Call 0x1C17F10
	074 Move X20, X0
	075 Move W1, 75
	076 Move X2, X31
	077 Call StreamBuffer..ctor, X0, X1
	078 Move X21, X31
	079 Move W8, [X31+12]
	080 Compare W8, 0
	081 JumpIfEqual {85}
	082 Move X0, X19
	083 Move X1, X31
	084 Call Monitor.Exit, X0
	085 Compare X21, 0
	086 JumpIfNotEqual {94}
	087 Move X0, X20
	088 Move X20, [X31+32]
	089 Move X19, [X31+40]
	090 Move X30, [X31+16]
	091 Move X21, [X31+24]
	092 Add X31, X31, 48
	093 Return X0
	094 Move X0, X21
	095 Call 0x1C17F18
	096 Call 0x1C17F20
	097 Call 0x1C17F20
	098 Move X20, X0
	099 NotImplemented "Instruction CMP not yet implemented."
	100 Move X0, X20
	101 Call 0x3EB2AD0
	102 Move X8, [X0]
	103 Move [X31], X8
	104 Call 0x3EB2AE0
	105 Move X21, [X31]
	106 Move X20, X31
	107 Move [X31], X31
	108 Move X20, X0
	109 Move W8, [X31+12]
	110 Compare W8, 0
	111 JumpIfEqual {115}
	112 Move X0, X19
	113 Move X1, X31
	114 Call Monitor.Exit, X0
	115 Move X8, [X31]
	116 Compare X8, 0
	117 JumpIfNotEqual {120}
	118 Move X0, X20
	119 Call 0x1D2D690
	120 Move X0, [X31]
	121 Call 0x1C17F18
	122 Call 0x1991590

Method: System.Void MessageBufferPoolPut(ExitGames.Client.Photon.StreamBuffer buff)

Disassembly:
	0x034F6924 SUB X31, X31, 0x80
	0x034F6928 STR X30, [X31 + 0x20]
	0x034F692C STP X28, X27, [X31 + 0x30]
	0x034F6930 STP X26, X25, [X31 + 0x40]
	0x034F6934 STP X24, X23, [X31 + 0x50]
	0x034F6938 STP X22, X21, [X31 + 0x60]
	0x034F693C STP X20, X19, [X31 + 0x70]
	0x034F6940 ADRP X21, 0xEE9000
	0x034F6944 LDRB W8, [X21 + 0xA33]
	0x034F6948 MOV W22, W2
	0x034F694C MOV X20, X1
	0x034F6950 MOV X19, X0
	0x034F6954 TBNZ X8, 0x0, 0x34F69E4
	0x034F6958 ADRP X0, 0xC05000
	0x034F695C LDR X0, [X0 + 0xCD8]
	0x034F6960 BL 0x1C16CF4
	0x034F6964 ADRP X0, 0xC05000
	0x034F6968 LDR X0, [X0 + 0xF00]
	0x034F696C BL 0x1C16CF4
	0x034F6970 ADRP X0, 0xC3D000
	0x034F6974 LDR X0, [X0 + 0x720]
	0x034F6978 BL 0x1C16CF4
	0x034F697C ADRP X0, 0xC05000
	0x034F6980 LDR X0, [X0 + 0xE60]
	0x034F6984 BL 0x1C16CF4
	0x034F6988 ADRP X0, 0xC05000
	0x034F698C LDR X0, [X0 + 0x720]
	0x034F6990 BL 0x1C16CF4
	0x034F6994 ADRP X0, 0xC3D000
	0x034F6998 LDR X0, [X0 + 0x9F8]
	0x034F699C BL 0x1C16CF4
	0x034F69A0 ADRP X0, 0xC3D000
	0x034F69A4 LDR X0, [X0 + 0xA00]
	0x034F69A8 BL 0x1C16CF4
	0x034F69AC ADRP X0, 0xBFF000
	0x034F69B0 LDR X0, [X0 + 0x258]
	0x034F69B4 BL 0x1C16CF4
	0x034F69B8 ADRP X0, 0xC3D000
	0x034F69BC LDR X0, [X0 + 0xA08]
	0x034F69C0 BL 0x1C16CF4
	0x034F69C4 ADRP X0, 0xC3D000
	0x034F69C8 LDR X0, [X0 + 0xA10]
	0x034F69CC BL 0x1C16CF4
	0x034F69D0 ADRP X0, 0xC3D000
	0x034F69D4 LDR X0, [X0 + 0xA18]
	0x034F69D8 BL 0x1C16CF4
	0x034F69DC MOVZ W8, 0x1
	0x034F69E0 STRB W8, [X21 + 0xA33]
	0x034F69E4 STRH W31, [X31 + 0x28]
	0x034F69E8 STRB W31, [X31 + 0x1C]
	0x034F69EC STP W31, W31, [X31 + 0x14]
	0x034F69F0 STRB W31, [X31 + 0x10]
	0x034F69F4 STR W31, [X31 + 0xC]
	0x034F69F8 STRB W31, [X31 + 0x8]
	0x034F69FC LDR X0, [X19 + 0xC0]
	0x034F6A00 CBZ X0, 0x34F72C0
	0x034F6A04 MOV X1, X31
	0x034F6A08 BL 0x364C19C
	0x034F6A0C LDRB W8, [X19 + 0x40]
	0x034F6A10 STR W0, [X19 + 0x88]
	0x034F6A14 CBZ W8, 0x34F6FD0
	0x034F6A18 ADRP X26, 0xC05000
	0x034F6A1C LDR X26, [X26 + 0xF00]
	0x034F6A20 STR W31, [X31 + 0x2C]
	0x034F6A24 LDR X0, [X26]
	0x034F6A28 LDR W8, [X0 + 0xE0]
	0x034F6A2C CBNZ W8, 0x34F6A34
	0x034F6A30 BL 0x1C16DFC
	0x034F6A34 ADD X0, X31, 0x28
	0x034F6A38 ADD X2, X31, 0x2C
	0x034F6A3C MOV X1, X20
	0x034F6A40 MOV X3, X31
	0x034F6A44 BL 0x3506B0C
	0x034F6A48 LDRSW X9, [X31 + 0x2C]
	0x034F6A4C ADD W8, W9, 0x1
	0x034F6A50 STR W8, [X31 + 0x2C]
	0x034F6A54 CBZ X20, 0x34F709C
	0x034F6A58 LDR W10, [X20 + 0x18]
	0x034F6A5C CMP W9, W10
	0x034F6A60 B.CS 0x34F70A0
	0x034F6A64 ADD X11, X20, X9
	0x034F6A68 LDRB W21, [X11 + 0x20]
	0x034F6A6C CMP W21, 0x1
	0x034F6A70 B.NE 0x34F6B14
	0x034F6A74 LDR X8, [X19 + 0x10]
	0x034F6A78 CBZ X8, 0x34F70A4
	0x034F6A7C LDR X8, [X8 + 0x100]
	0x034F6A80 CBZ X8, 0x34F6FD0
	0x034F6A84 LDR X0, [X26]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, 0xEEA000
	007 Move W8, [X19+2672]
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0xC3E000
	014 Move X0, [X0+1912]
	015 Call 0x1C17CF4
	016 Move X0, 0xC3E000
	017 Move X0, [X0+2456]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X19+2672], W8
	021 Compare X20, 0
	022 JumpIfEqual {76}
	023 Move X21, 0xC3E000
	024 Move X21, [X21+1912]
	025 Move X0, X20
	026 Move W1, W31
	027 Move X2, X31
	028 Call StreamBuffer.set_Position, X0, X1
	029 Move X0, X20
	030 Move X1, X31
	031 Move X2, X31
	032 Call StreamBuffer.SetLength, X0, X1
	033 Move X0, [X21]
	034 Move W8, [X0+224]
	035 Compare W8, 0
	036 JumpIfNotEqual {39}
	037 Call 0x1C17DFC
	038 Move X0, [X21]
	039 Move X8, [X0+184]
	040 Move X19, [X8+8]
	041 Move [X31+12], W31
	042 Add X1, X31, 12
	043 Move X0, X19
	044 Move X2, X31
	045 Call Monitor.Enter, X0, X1
	046 Move X0, [X21]
	047 Move W8, [X0+224]
	048 Compare W8, 0
	049 JumpIfNotEqual {52}
	050 Call 0x1C17DFC
	051 Move X0, [X21]
	052 Move X8, [X0+184]
	053 Move X0, [X8+8]
	054 Compare X0, 0
	055 JumpIfEqual {79}
	056 Move X8, 0xC3E000
	057 Move X8, [X8+2456]
	058 Move X2, [X8]
	059 Move X1, X20
	060 Call Queue`1<Object>.Enqueue, X0, X1
	061 Move X20, X31
	062 Move W8, [X31+12]
	063 Compare W8, 0
	064 JumpIfEqual {68}
	065 Move X0, X19
	066 Move X1, X31
	067 Call Monitor.Exit, X0
	068 Compare X20, 0
	069 JumpIfNotEqual {77}
	070 Move X20, [X31+32]
	071 Move X19, [X31+40]
	072 Move X30, [X31+16]
	073 Move X21, [X31+24]
	074 Add X31, X31, 48
	075 Return 
	076 Call 0x1C17F20
	077 Move X0, X20
	078 Call 0x1C17F18
	079 Call 0x1C17F20
	080 Move X21, X0
	081 NotImplemented "Instruction CMP not yet implemented."
	082 Move X0, X21
	083 Call 0x3EB2AD0
	084 Move X20, [X0]
	085 Call 0x3EB2AE0
	086 Move X20, X31
	087 Move X21, X0
	088 Move W8, [X31+12]
	089 Compare W8, 0
	090 JumpIfEqual {94}
	091 Move X0, X19
	092 Move X1, X31
	093 Call Monitor.Exit, X0
	094 Compare X20, 0
	095 JumpIfNotEqual {98}
	096 Move X0, X21
	097 Call 0x1D2D690
	098 Move X0, X20
	099 Call 0x1C17F18
	100 Call 0x1991590

Method: System.Void Reset()

Disassembly:
	0x034F09F4 LDR X1, [X8]
	0x034F09F8 ADD X8, X31, 0x8
	0x034F09FC BL 0x2EED3B8
	0x034F0A00 LDUR V0, [X31 + 0x8]
	0x034F0A04 LDUR V1, [X31 + 0x18]
	0x034F0A08 LDR X8, [X31 + 0x28]
	0x034F0A0C ADRP X21, 0xC43000
	0x034F0A10 STP V0, V1, [X31 + 0x30]
	0x034F0A14 STR X8, [X31 + 0x50]
	0x034F0A18 LDR X21, [X21 + 0x800]
	0x034F0A1C LDR X1, [X21]
	0x034F0A20 ADD X0, X31, 0x30
	0x034F0A24 BL 0x2BC416C
	0x034F0A28 TBZ X0, 0x0, 0x34F0A6C
	0x034F0A2C LDR X8, [X20 + 0x30]
	0x034F0A30 CBZ X8, 0x34F0B38
	0x034F0A34 LDR X0, [X8 + 0x28]
	0x034F0A38 CBZ X0, 0x34F0A1C
	0x034F0A3C LDR W8, [X0 + 0x1C]
	0x034F0A40 CMP W8, 0x2
	0x034F0A44 B.NE 0x34F0A1C
	0x034F0A48 LDR X8, [X31 + 0x48]
	0x034F0A4C CBZ X8, 0x34F0B48
	0x034F0A50 LDR X1, [X8 + 0x20]
	0x034F0A54 CBZ X1, 0x34F0B44
	0x034F0A58 LDR X8, [X0]
	0x034F0A5C LDR W2, [X1 + 0x18]
	0x034F0A60 LDP X9, X3, [X8 + 0x198]
	0x034F0A64 BLR X9
	0x034F0A68 B 0x34F0A1C
	0x034F0A6C MOV X21, X31
	0x034F0A70 MOVZ W22, 0x11
	0x034F0A74 ADRP X8, 0xC43000
	0x034F0A78 LDR X8, [X8 + 0x7F8]
	0x034F0A7C LDR X1, [X8]
	0x034F0A80 ADD X0, X31, 0x30
	0x034F0A84 BL 0x2BC42B8
	0x034F0A88 CBNZ X21, 0x34F0B90
	0x034F0A8C CMP W22, 0x11
	0x034F0A90 B.EQ 0x34F0A98
	0x034F0A94 CBNZ W22, 0x34F0AC4
	0x034F0A98 LDR X8, [X20 + 0x30]
	0x034F0A9C CBZ X8, 0x34F0B9C
	0x034F0AA0 LDR X0, [X8 + 0x100]
	0x034F0AA4 CBZ X0, 0x34F0BA0
	0x034F0AA8 ADRP X8, 0xC43000
	0x034F0AAC LDR X8, [X8 + 0x7D0]
	0x034F0AB0 LDR X1, [X8]
	0x034F0AB4 BL 0x2EED0CC
	0x034F0AB8 MOV X21, X31
	0x034F0ABC MOVZ W22, 0x12
	0x034F0AC0 B 0x34F0AC8
	0x034F0AC4 MOV X21, X31
	0x034F0AC8 LDRB W8, [X31 + 0x5C]
	0x034F0ACC CBZ W8, 0x34F0ADC
	0x034F0AD0 MOV X0, X23
	0x034F0AD4 MOV X1, X31
	0x034F0AD8 BL 0x33E14E4
	0x034F0ADC CBNZ X21, 0x34F0B88
	0x034F0AE0 CBZ W22, 0x34F0AEC
	0x034F0AE4 CMP W22, 0x12
	0x034F0AE8 B.NE 0x34F07C0
	0x034F0AEC LDR X0, [X20 + 0x40]
	0x034F0AF0 STRB W25, [X20 + 0x10]
	0x034F0AF4 CBZ X0, 0x34F0B98
	0x034F0AF8 MOV X1, X31
	0x034F0AFC BL 0x33E207C
	0x034F0B00 MOV X20, X31
	0x034F0B04 LDRB W8, [X31 + 0x8C]
	0x034F0B08 CBZ W8, 0x34F0B18
	0x034F0B0C MOV X0, X19
	0x034F0B10 MOV X1, X31
	0x034F0B14 BL 0x33E14E4
	0x034F0B18 CBNZ X20, 0x34F0B4C
	0x034F0B1C LDP X20, X19, [X31 + 0xC0]
	0x034F0B20 LDP X22, X21, [X31 + 0xB0]
	0x034F0B24 LDP X24, X23, [X31 + 0xA0]
	0x034F0B28 LDP X30, X25, [X31 + 0x90]
	0x034F0B2C ADD X31, X31, 0xD0
	0x034F0B30 RET
	0x034F0B34 BL 0x1C16F20
	0x034F0B38 BL 0x1C16F20
	0x034F0B3C BL 0x1C16F20
	0x034F0B40 BL 0x1C16F20
	0x034F0B44 BL 0x1C16F20
	0x034F0B48 BL 0x1C16F20
	0x034F0B4C MOV X0, X20
	0x034F0B50 BL 0x1C16F18
	0x034F0B54 BL 0x1C16F20
	0x034F0B58 BL 0x1C16F20
	0x034F0B5C BL 0x1C16F20
	0x034F0B60 BL 0x1C16F20
	0x034F0B64 MOV X0, X21
	0x034F0B68 BL 0x1C16F18
	0x034F0B6C MOV X0, X21
	0x034F0B70 BL 0x1C16F18
	0x034F0B74 BL 0x1C16F20
	0x034F0B78 BL 0x1C16F20
	0x034F0B7C BL 0x1C16F20
	0x034F0B80 BL 0x1C16F20
	0x034F0B84 BL 0x1C16F20
	0x034F0B88 MOV X0, X21
	0x034F0B8C BL 0x1C16F18
	0x034F0B90 MOV X0, X21
	0x034F0B94 BL 0x1C16F18
	0x034F0B98 BL 0x1C16F20
	0x034F0B9C BL 0x1C16F20
	0x034F0BA0 BL 0x1C16F20
	0x034F0BA4 BL 0x1C16F20
	0x034F0BA8 BL 0x1C16F20
	0x034F0BAC BL 0x1C16F20
	0x034F0BB0 B 0x34F0C0C
	0x034F0BB4 B 0x34F0C2C
	0x034F0BB8 B 0x34F0C2C
	0x034F0BBC B 0x34F0C20
	0x034F0BC0 B 0x34F0C0C
	0x034F0BC4 B 0x34F0C0C
	0x034F0BC8 B 0x34F0C0C
	0x034F0BCC B 0x34F0C0C
	0x034F0BD0 B 0x34F0C2C
	0x034F0BD4 B 0x34F0C2C
	0x034F0BD8 B 0x34F0C2C
	0x034F0BDC B 0x34F0C2C
	0x034F0BE0 B 0x34F0C2C
	0x034F0BE4 B 0x34F0C2C
	0x034F0BE8 B 0x34F0C0C
	0x034F0BEC B 0x34F0C2C
	0x034F0BF0 B 0x34F0C20
	0x034F0BF4 B 0x34F0C2C
	0x034F0BF8 B 0x34F0C20
	0x034F0BFC B 0x34F0C20
	0x034F0C00 B 0x34F0C20
	0x034F0C04 B 0x34F0C2C
	0x034F0C08 B 0x34F0C2C
	0x034F0C0C MOV X22, X1
	0x034F0C10 MOV X24, X0
	0x034F0C14 B 0x34F0C98
	0x034F0C18 B 0x34F0C20
	0x034F0C1C B 0x34F0C2C
	0x034F0C20 MOV X22, X1
	0x034F0C24 MOV X24, X0
	0x034F0C28 B 0x34F0D44
	0x034F0C2C MOV X22, X1
	0x034F0C30 MOV X24, X0
	0x034F0C34 B 0x34F0D80
	0x034F0C38 B 0x34F0C54
	0x034F0C3C B 0x34F0C54
	0x034F0C40 B 0x34F0C54
	0x034F0C44 B 0x34F0D00
	0x034F0C48 B 0x34F0D00
	0x034F0C4C B 0x34F0D00
	0x034F0C50 B 0x34F0C54
	0x034F0C54 MOV X22, X1
	0x034F0C58 MOV X24, X0
	0x034F0C5C CMP W22, 0x1
	0x034F0C60 B.NE 0x34F0C7C
	0x034F0C64 MOV X0, X24
	0x034F0C68 BL 0x3EB1AD0
	0x034F0C6C LDR X21, [X0]
	0x034F0C70 BL 0x3EB1AE0
	0x034F0C74 MOV W22, W31
	0x034F0C78 B 0x34F0A74
	0x034F0C7C MOV X21, X31
	0x034F0C80 ADRP X8, 0xC43000
	0x034F0C84 LDR X8, [X8 + 0x7F8]
	0x034F0C88 LDR X1, [X8]
	0x034F0C8C ADD X0, X31, 0x30
	0x034F0C90 BL 0x2BC42B8
	0x034F0C94 CBNZ X21, 0x34F0CDC
	0x034F0C98 CMP W22, 0x1
	0x034F0C9C B.NE 0x34F0CB8
	0x034F0CA0 MOV X0, X24
	0x034F0CA4 BL 0x3EB1AD0
	0x034F0CA8 LDR X21, [X0]
	0x034F0CAC BL 0x3EB1AE0
	0x034F0CB0 MOV W22, W31
	0x034F0CB4 B 0x34F0AC8
	0x034F0CB8 MOV X21, X31
	0x034F0CBC LDRB W8, [X31 + 0x5C]
	0x034F0CC0 CBZ W8, 0x34F0CD0
	0x034F0CC4 MOV X0, X23
	0x034F0CC8 MOV X1, X31
	0x034F0CCC BL 0x33E14E4
	0x034F0CD0 CBZ X21, 0x34F0D80
	0x034F0CD4 MOV X0, X21
	0x034F0CD8 BL 0x1C16F18
	0x034F0CDC MOV X0, X21
	0x034F0CE0 BL 0x1C16F18
	0x034F0CE4 MOV X22, X1
	0x034F0CE8 MOV X24, X0
	0x034F0CEC B 0x34F0CBC
	0x034F0CF0 MOV X22, X1
	0x034F0CF4 MOV X24, X0
	0x034F0CF8 B 0x34F0C80

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+32], X22
	004 Move [X31+40], X21
	005 Move [X31+48], X20
	006 Move [X31+56], X19
	007 Move X20, 0xEF0000
	008 Move W8, [X20+2673]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0xC44000
	015 Move X0, [X0+2000]
	016 Call 0x1C17CF4
	017 Move X0, 0xC44000
	018 Move X0, [X0+2008]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X20+2673], W8
	022 Move [X31+24], W31
	023 Move [X31+12], W31
	024 Move X8, [X19+16]
	025 Compare X8, 0
	026 JumpIfEqual {138}
	027 Move W0, [X8+40]
	028 Call SerializationProtocolFactory.Create, X0
	029 Move X8, [X19+16]
	030 Move [X19+24], X0
	031 Compare X8, 0
	032 JumpIfEqual {138}
	033 Move X0, X8
	034 Move X1, X31
	035 Call PhotonPeer.InitializeTrafficStats, X0
	036 Move X8, [X19+272]
	037 NotImplemented "Instruction MOVI not yet implemented."
	038 Move [X19+68], D0
	039 Move [X19+88], D0
	040 Move [X19+144], X31
	041 Move [X19+152], X31
	042 Compare X8, 0
	043 JumpIfEqual {138}
	044 Move [X8+72], X31
	045 Move X22, 0xC44000
	046 Move X21, [X19+256]
	047 Move X22, [X22+2000]
	048 Move [X31+28], W31
	049 Add X1, X31, 28
	050 Move X0, X21
	051 Move X2, X31
	052 Call Monitor.Enter, X0, X1
	053 Move X0, [X19+256]
	054 Compare X0, 0
	055 JumpIfEqual {141}
	056 Move X1, [X22]
	057 Call LinkedList`1<Object>.Clear, X0
	058 Move X20, X31
	059 Move W8, [X31+28]
	060 Compare W8, 0
	061 JumpIfEqual {65}
	062 Move X0, X21
	063 Move X1, X31
	064 Call Monitor.Exit, X0
	065 Compare X20, 0
	066 JumpIfNotEqual {139}
	067 Move X21, [X19+264]
	068 Move [X31+24], W31
	069 Add X1, X31, 24
	070 Move X0, X21
	071 Move X2, X31
	072 Call Monitor.Enter, X0, X1
	073 Move X0, [X19+264]
	074 Compare X0, 0
	075 JumpIfEqual {142}
	076 Move X1, [X22]
	077 Call LinkedList`1<Object>.Clear, X0
	078 Move X20, X31
	079 Move W22, 3
	080 Move W8, [X31+24]
	081 Compare W8, 0
	082 JumpIfEqual {86}
	083 Move X0, X21
	084 Move X1, X31
	085 Call Monitor.Exit, X0
	086 Compare X20, 0
	087 JumpIfNotEqual {139}
	088 NotImplemented "Instruction CMP not yet implemented."
	089 Compare W22, 0
	090 JumpIfNotEqual {131}
	091 Move X21, [X19+96]
	092 Move [X31+12], W31
	093 Add X1, X31, 12
	094 Move X0, X21
	095 Move X2, X31
	096 Call Monitor.Enter, X0, X1
	097 Move X0, [X19+96]
	098 Compare X0, 0
	099 JumpIfEqual {143}
	100 Move X8, 0xC44000
	101 Move X8, [X8+2008]
	102 Move X1, [X8]
	103 Call Queue`1<Object>.Clear, X0
	104 Move X20, X31
	105 Move W8, [X31+12]
	106 Compare W8, 0
	107 JumpIfEqual {111}
	108 Move X0, X21
	109 Move X1, X31
	110 Call Monitor.Exit, X0
	111 Compare X20, 0
	112 JumpIfNotEqual {139}
	113 Move X0, [X19+192]
	114 Move [X19+64], W31
	115 Compare X0, 0
	116 JumpIfEqual {138}
	117 Move X1, X31
	118 Call Stopwatch.Reset, X0
	119 Move X0, [X19+192]
	120 Compare X0, 0
	121 JumpIfEqual {138}
	122 Move X1, X31
	123 Call Stopwatch.Start, X0
	124 Move X8, -44048384
	125 Move V0, [X8+3408]
	126 NotImplemented "Instruction STRH not yet implemented."
	127 Move [X19+240], X31
	128 Move [X19+112], W31
	129 Move [X19+116], D0
	130 Move [X19+108], W31
	131 Move X20, [X31+48]
	132 Move X19, [X31+56]
	133 Move X22, [X31+32]
	134 Move X21, [X31+40]
	135 Move X30, [X31+16]
	136 Add X31, X31, 64
	137 Return 
	138 Call 0x1C17F20
	139 Move X0, X20
	140 Call 0x1C17F18
	141 Call 0x1C17F20
	142 Call 0x1C17F20
	143 Call 0x1C17F20
	144 Move X20, X0
	145 NotImplemented "Instruction CMP not yet implemented."
	146 Move X0, X20
	147 Call 0x3EB2AD0
	148 Move X8, [X0]
	149 Move [X31], X8
	150 Call 0x3EB2AE0
	151 Move X20, [X31]
	152 Move [X31], X31
	153 Move X20, X0
	154 Move W8, [X31+12]
	155 Compare W8, 0
	156 JumpIfEqual {160}
	157 Move X0, X21
	158 Move X1, X31
	159 Call Monitor.Exit, X0
	160 Move X8, [X31]
	161 Compare X8, 0
	162 JumpIfEqual {206}
	163 Move X0, [X31]
	164 Call 0x1C17F18
	165 Move X20, X0
	166 NotImplemented "Instruction CMP not yet implemented."
	167 Move X0, X20
	168 Call 0x3EB2AD0
	169 Move X8, [X0]
	170 Move [X31], X8
	171 Call 0x3EB2AE0
	172 Move X20, [X31]
	173 Move W22, W31
	174 Move [X31], X31
	175 Move X20, X0
	176 Move W8, [X31+24]
	177 Compare W8, 0
	178 JumpIfEqual {182}
	179 Move X0, X21
	180 Move X1, X31
	181 Call Monitor.Exit, X0
	182 Move X8, [X31]
	183 Compare X8, 0
	184 JumpIfEqual {206}
	185 Move X0, [X31]
	186 Call 0x1C17F18
	187 Move X20, X0
	188 NotImplemented "Instruction CMP not yet implemented."
	189 Move X0, X20
	190 Call 0x3EB2AD0
	191 Move X8, [X0]
	192 Move [X31], X8
	193 Call 0x3EB2AE0
	194 Move X20, [X31]
	195 Move [X31], X31
	196 Move X20, X0
	197 Move W8, [X31+28]
	198 Compare W8, 0
	199 JumpIfEqual {203}
	200 Move X0, X21
	201 Move X1, X31
	202 Call Monitor.Exit, X0
	203 Move X8, [X31]
	204 Compare X8, 0
	205 JumpIfNotEqual {208}
	206 Move X0, X20
	207 Call 0x1D2D690
	208 Move X0, [X31]
	209 Call 0x1C17F18
	210 Call 0x1991590

Method: System.Boolean Connect(System.String serverAddress, System.String proxyServerAddress, System.String appID, System.Object photonToken)

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.String GetHttpKeyValueString(System.Collections.Generic.Dictionary`2<System.String, System.String> dic)

Disassembly:
	0x034FD7AC MOV X0, X21
	0x034FD7B0 MOV X1, X23
	0x034FD7B4 MOV W2, W31
	0x034FD7B8 MOV X4, X31
	0x034FD7BC BL 0x3517F60
	0x034FD7C0 MOV X0, X21
	0x034FD7C4 MOV X1, X31
	0x034FD7C8 BL 0x3517FCC
	0x034FD7CC LDR X9, [X19 + 0xE8]
	0x034FD7D0 CBZ X9, 0x34FD868
	0x034FD7D4 CMP X22, 0x0
	0x034FD7D8 MOVZ W8, 0x8
	0x034FD7DC CINC W8, W8, NE
	0x034FD7E0 CBZ X0, 0x34FD868
	0x034FD7E4 LDR W9, [X9 + 0x18]
	0x034FD7E8 LDR W10, [X0 + 0x18]
	0x034FD7EC SUB W9, W9, 0x1
	0x034FD7F0 CMP W9, W10
	0x034FD7F4 B.CS 0x34FD86C
	0x034FD7F8 CMP W26, 0x0
	0x034FD7FC ADD X10, X0, W9, SXTW
	0x034FD800 CSET W9, NE
	0x034FD804 STRB W8, [X10 + 0x20]
	0x034FD808 TBZ X20, 0x0, 0x34FD81C
	0x034FD80C TBNZ X9, 0x0, 0x34FD81C
	0x034FD810 LDR X8, [X19 + 0x10]
	0x034FD814 CBZ X8, 0x34FD868
	0x034FD818 LDRB W26, [X8 + 0x6B]
	0x034FD81C CBZ W26, 0x34FD84C
	0x034FD820 LDR X8, [X19 + 0xE8]
	0x034FD824 CBZ X8, 0x34FD868
	0x034FD828 LDR W8, [X8 + 0x18]
	0x034FD82C LDR W9, [X0 + 0x18]
	0x034FD830 SUB W8, W8, 0x1
	0x034FD834 CMP W8, W9
	0x034FD838 B.CS 0x34FD86C
	0x034FD83C ADD X8, X0, W8, SXTW
	0x034FD840 LDRB W9, [X8 + 0x20]
	0x034FD844 ORR W9, W9, 0x80
	0x034FD848 STRB W9, [X8 + 0x20]
	0x034FD84C MOV X0, X21
	0x034FD850 LDP X20, X19, [X31 + 0x40]
	0x034FD854 LDP X22, X21, [X31 + 0x30]
	0x034FD858 LDP X24, X23, [X31 + 0x20]
	0x034FD85C LDP X26, X25, [X31 + 0x10]
	0x034FD860 LDR X30, [X31], #0x50
	0x034FD864 RET
	0x034FD868 BL 0x1C16F20
	0x034FD86C BL 0x1C16F28
	0x034FD870 MOV W0, W31
	0x034FD874 RET
	0x034FD878 SUB X31, X31, 0x60
	0x034FD87C STR X30, [X31 + 0x20]
	0x034FD880 STP X24, X23, [X31 + 0x30]
	0x034FD884 STP X22, X21, [X31 + 0x40]
	0x034FD888 STP X20, X19, [X31 + 0x50]
	0x034FD88C ADRP X21, 0xEE2000
	0x034FD890 LDRB W8, [X21 + 0xA7A]
	0x034FD894 MOV X20, X1
	0x034FD898 MOV X19, X0
	0x034FD89C TBNZ X8, 0x0, 0x34FD914
	0x034FD8A0 ADRP X0, 0xC36000
	0x034FD8A4 LDR X0, [X0 + 0xCB0]
	0x034FD8A8 BL 0x1C16CF4
	0x034FD8AC ADRP X0, 0xBFE000
	0x034FD8B0 LDR X0, [X0 + 0xBC8]
	0x034FD8B4 BL 0x1C16CF4
	0x034FD8B8 ADRP X0, 0xC36000
	0x034FD8BC LDR X0, [X0 + 0xC68]
	0x034FD8C0 BL 0x1C16CF4
	0x034FD8C4 ADRP X0, 0xBFF000
	0x034FD8C8 LDR X0, [X0 + 0xBA8]
	0x034FD8CC BL 0x1C16CF4
	0x034FD8D0 ADRP X0, 0xC36000
	0x034FD8D4 LDR X0, [X0 + 0xCB8]
	0x034FD8D8 BL 0x1C16CF4
	0x034FD8DC ADRP X0, 0xC36000
	0x034FD8E0 LDR X0, [X0 + 0xCC0]
	0x034FD8E4 BL 0x1C16CF4
	0x034FD8E8 ADRP X0, 0xC36000
	0x034FD8EC LDR X0, [X0 + 0xCC8]
	0x034FD8F0 BL 0x1C16CF4
	0x034FD8F4 ADRP X0, 0xC36000
	0x034FD8F8 LDR X0, [X0 + 0xCD0]
	0x034FD8FC BL 0x1C16CF4
	0x034FD900 ADRP X0, 0xC36000
	0x034FD904 LDR X0, [X0 + 0xCD8]
	0x034FD908 BL 0x1C16CF4
	0x034FD90C MOVZ W8, 0x1
	0x034FD910 STRB W8, [X21 + 0xA7A]
	0x034FD914 STRB W31, [X31 + 0x2C]
	0x034FD918 STRB W31, [X31 + 0x28]
	0x034FD91C STR W31, [X31 + 0x1C]
	0x034FD920 STR W31, [X31 + 0x10]
	0x034FD924 CBZ X20, 0x34FE620
	0x034FD928 MOV X0, X20
	0x034FD92C MOV X1, X31
	0x034FD930 BL 0x351806C
	0x034FD934 CMP W0, 0x1
	0x034FD938 B.GT 0x34FD9D8
	0x034FD93C LDR X8, [X19 + 0x10]
	0x034FD940 CBZ X8, 0x34FE620
	0x034FD944 LDRB W9, [X8 + 0x40]
	0x034FD948 CBZ W9, 0x34FDB6C
	0x034FD94C LDR X19, [X8 + 0x48]
	0x034FD950 MOV X0, X20
	0x034FD954 MOV X1, X31
	0x034FD958 BL 0x351806C
	0x034FD95C STR W0, [X31 + 0x1C]
	0x034FD960 ADD X0, X31, 0x1C
	0x034FD964 MOV X1, X31
	0x034FD968 BL 0x337B6E0
	0x034FD96C ADRP X8, 0xC36000
	0x034FD970 LDR X8, [X8 + 0xCC0]
	0x034FD974 MOV X1, X0
	0x034FD978 MOV X2, X31
	0x034FD97C LDR X8, [X8]
	0x034FD980 MOV X0, X8
	0x034FD984 BL 0x321B938
	0x034FD988 CBZ X19, 0x34FE620
	0x034FD98C ADRP X10, 0xBFE000
	0x034FD990 LDR X8, [X19]
	0x034FD994 LDR X10, [X10 + 0xBC8]
	0x034FD998 MOV X20, X0
	0x034FD99C LDRH W9, [X8 + 0x12E]
	0x034FD9A0 LDR X1, [X10]
	0x034FD9A4 CBZ X9, 0x34FD9C8
	0x034FD9A8 LDR X10, [X8 + 0xB0]
	0x034FD9AC ADD X10, X10, 0x8
	0x034FD9B0 LDUR X11, [X10 - 0x8]
	0x034FD9B4 CMP X11, X1
	0x034FD9B8 B.EQ 0x34FDAC4
	0x034FD9BC SUBS X9, X9, 0x1
	0x034FD9C0 ADD X10, X10, 0x10
	0x034FD9C4 B.NE 0x34FD9B0
	0x034FD9C8 MOV X0, X19
	0x034FD9CC MOV W2, W31
	0x034FD9D0 BL 0x1C5C788
	0x034FD9D4 B 0x34FDAD0
	0x034FD9D8 MOV X0, X20
	0x034FD9DC MOV X1, X31

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+96], X30
	003 Move [X31+112], X24
	004 Move [X31+120], X23
	005 Move [X31+128], X22
	006 Move [X31+136], X21
	007 Move [X31+144], X20
	008 Move [X31+152], X19
	009 Move X21, 0xEE3000
	010 Move X19, 0xBF7000
	011 Move W8, [X21+2674]
	012 Move X19, [X19+2288]
	013 Move X20, X1
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {47}
	018 Move X0, 0xBFC000
	019 Move X0, [X0+1256]
	020 Call 0x1C17CF4
	021 Move X0, 0xBFC000
	022 Move X0, [X0+1264]
	023 Call 0x1C17CF4
	024 Move X0, 0xBFC000
	025 Move X0, [X0+1272]
	026 Call 0x1C17CF4
	027 Move X0, 0xBFC000
	028 Move X0, [X0+1280]
	029 Call 0x1C17CF4
	030 Move X0, 0xBFA000
	031 Move X0, [X0+432]
	032 Call 0x1C17CF4
	033 Move X0, 0xBFA000
	034 Move X0, [X0+440]
	035 Call 0x1C17CF4
	036 Move X0, 0xBF7000
	037 Move X0, [X0+2288]
	038 Call 0x1C17CF4
	039 Move X0, 0xC24000
	040 Move X0, [X0+4024]
	041 Call 0x1C17CF4
	042 Move X0, 0xC00000
	043 Move X0, [X0+1824]
	044 Call 0x1C17CF4
	045 Move W8, 1
	046 Move [X21+2674], W8
	047 Move X0, [X19]
	048 NotImplemented "Instruction MOVI not yet implemented."
	049 Move [X31+80], X31
	050 Move [X31+48], V0
	051 Move [X31+56], V0
	052 Call 0x1C17F10
	053 Move X1, X31
	054 Move X19, X0
	055 Call StringBuilder..ctor, X0
	056 Compare X20, 0
	057 JumpIfEqual {130}
	058 Move X8, 0xBFC000
	059 Move X8, [X8+1256]
	060 Move X22, 0xBFC000
	061 Move X22, [X22+1272]
	062 Move X23, 0xC24000
	063 Move X1, [X8]
	064 Move X24, 0xC00000
	065 Move X21, 0xBFC000
	066 Move X23, [X23+4024]
	067 Move X24, [X24+1824]
	068 Move X21, [X21+1264]
	069 Add X8, X31, 8
	070 Move X0, X20
	071 Call Dictionary`2<Object, Object>.GetEnumerator, X0
	072 NotImplemented "Instruction LDUR not yet implemented."
	073 NotImplemented "Instruction LDUR not yet implemented."
	074 Move X8, [X31+40]
	075 Move [X31+48], V0
	076 Move [X31+56], V1
	077 Move [X31+80], X8
	078 Move X1, [X22]
	079 Add X0, X31, 48
	080 Call Enumerator<Object, Object>.MoveNext, X0
	081 Move TEMP, X0
	082 And TEMP, TEMP, 1
	083 Compare TEMP, 1
	084 JumpIfNotEqual {107}
	085 Compare X19, 0
	086 JumpIfEqual {128}
	087 Move X1, [X31+64]
	088 Move X20, [X31+72]
	089 Move X0, X19
	090 Move X2, X31
	091 Call StringBuilder.Append, X0, X1
	092 Compare X0, 0
	093 JumpIfEqual {129}
	094 Move X1, [X23]
	095 Move X2, X31
	096 Call StringBuilder.Append, X0, X1
	097 Compare X0, 0
	098 JumpIfEqual {126}
	099 Move X1, X20
	100 Move X2, X31
	101 Call StringBuilder.Append, X0, X1
	102 Compare X0, 0
	103 JumpIfEqual {127}
	104 Move X1, [X24]
	105 Move X2, X31
	106 Call StringBuilder.Append, X0, X1
	107 Move X1, [X21]
	108 Add X0, X31, 48
	109 Call Enumerator<Object, Object>.Dispose, X0
	110 Compare X19, 0
	111 JumpIfEqual {130}
	112 Move X8, [X19]
	113 Move X0, X19
	114 Move X9, [X8+360]
	115 Move X1, [X8+368]
	116 NotImplemented "Instruction BLR not yet implemented."
	117 Move X20, [X31+144]
	118 Move X19, [X31+152]
	119 Move X22, [X31+128]
	120 Move X21, [X31+136]
	121 Move X24, [X31+112]
	122 Move X23, [X31+120]
	123 Move X30, [X31+96]
	124 Add X31, X31, 160
	125 Return X0
	126 Call 0x1C17F20
	127 Call 0x1C17F20
	128 Call 0x1C17F20
	129 Call 0x1C17F20
	130 Call 0x1C17F20
	131 NotImplemented "Instruction CMP not yet implemented."
	132 Call 0x3EB2AD0
	133 Move X20, [X0]
	134 Call 0x3EB2AE0
	135 Move X1, [X21]
	136 Add X0, X31, 48
	137 Call Enumerator<Object, Object>.Dispose, X0
	138 Compare X20, 0
	139 JumpIfEqual {110}
	140 Move X0, X20
	141 Call 0x1C17F18
	142 Move X19, X0
	143 Move X20, X31
	144 Move X19, X0
	145 Move X1, [X21]
	146 Add X0, X31, 48
	147 Call Enumerator<Object, Object>.Dispose, X0
	148 Compare X20, 0
	149 JumpIfNotEqual {152}
	150 Move X0, X19
	151 Call 0x1D2D690
	152 Move X0, X20
	153 Call 0x1C17F18
	154 Call 0x1991590

Method: System.Byte[] WriteInitRequest()

Disassembly:
	0x034F9110 MOV W1, W31
	0x034F9114 MOV W2, W23
	0x034F9118 MOV X3, X31
	0x034F911C BL 0x3228DE4
	0x034F9120 MOV X21, X0
	0x034F9124 CBZ X0, 0x34F91EC
	0x034F9128 MOVZ W1, 0x3A
	0x034F912C MOV X0, X21
	0x034F9130 MOV X2, X31
	0x034F9134 BL 0x322C668
	0x034F9138 TBNZ X0, 0x1F, 0x34F91D4
	0x034F913C MOV W22, W0
	0x034F9140 MOVZ W1, 0x3A
	0x034F9144 MOV X0, X21
	0x034F9148 MOV X2, X31
	0x034F914C BL 0x322BD98
	0x034F9150 CMP W0, W22
	0x034F9154 B.NE 0x34F919C
	0x034F9158 MOV X0, X21
	0x034F915C MOV W1, W31
	0x034F9160 MOV W2, W22
	0x034F9164 MOV X3, X31
	0x034F9168 BL 0x3228DE4
	0x034F916C STR X0, [X20]
	0x034F9170 ADD W1, W22, 0x1
	0x034F9174 MOV X0, X21
	0x034F9178 MOV X2, X31
	0x034F917C BL 0x322B484
	0x034F9180 MOV X1, X19
	0x034F9184 LDP X20, X19, [X31 + 0x30]
	0x034F9188 LDP X22, X21, [X31 + 0x20]
	0x034F918C LDP X24, X23, [X31 + 0x10]
	0x034F9190 MOV X2, X31
	0x034F9194 LDP X30, X25, [X31], #0x40
	0x034F9198 B 0x33992BC
	0x034F919C ADRP X8, 0xBFA000
	0x034F91A0 LDR X8, [X8 + 0xEC8]
	0x034F91A4 MOV X0, X21
	0x034F91A8 MOV X2, X31
	0x034F91AC LDR X1, [X8]
	0x034F91B0 BL 0x322BD1C
	0x034F91B4 TBZ X0, 0x0, 0x34F91D4
	0x034F91B8 ADRP X8, 0xBFA000
	0x034F91BC LDR X8, [X8 + 0x848]
	0x034F91C0 MOV X0, X21
	0x034F91C4 MOV X2, X31
	0x034F91C8 LDR X1, [X8]
	0x034F91CC BL 0x322BD1C
	0x034F91D0 TBNZ X0, 0x0, 0x34F9158
	0x034F91D4 LDP X20, X19, [X31 + 0x30]
	0x034F91D8 LDP X22, X21, [X31 + 0x20]
	0x034F91DC LDP X24, X23, [X31 + 0x10]
	0x034F91E0 MOV W0, W31
	0x034F91E4 LDP X30, X25, [X31], #0x40
	0x034F91E8 RET
	0x034F91EC BL 0x1C16F20
	0x034F91F0 STP X30, X25, [X31 - 0x40]!
	0x034F91F4 STP X24, X23, [X31 + 0x10]
	0x034F91F8 STP X22, X21, [X31 + 0x20]
	0x034F91FC STP X20, X19, [X31 + 0x30]
	0x034F9200 ADRP X23, 0xEE6000
	0x034F9204 LDRB W8, [X23 + 0xA3D]
	0x034F9208 MOV W22, W3
	0x034F920C MOV W19, W2
	0x034F9210 MOV X20, X1
	0x034F9214 MOV X21, X0
	0x034F9218 TBNZ X8, 0x0, 0x34F923C
	0x034F921C ADRP X0, 0xBFA000
	0x034F9220 LDR X0, [X0 + 0x618]
	0x034F9224 BL 0x1C16CF4
	0x034F9228 ADRP X0, 0xC3A000
	0x034F922C LDR X0, [X0 + 0x9A8]
	0x034F9230 BL 0x1C16CF4
	0x034F9234 MOVZ W8, 0x1
	0x034F9238 STRB W8, [X23 + 0xA3D]
	0x034F923C LDR X8, [X21 + 0x10]
	0x034F9240 CBZ X8, 0x34F93D4
	0x034F9244 LDR X8, [X8 + 0x10]
	0x034F9248 CBZ X8, 0x34F93D4
	0x034F924C LDR X23, [X8 + 0x60]
	0x034F9250 CBZ X23, 0x34F9334
	0x034F9254 ADRP X25, 0xC3A000
	0x034F9258 LDR X8, [X23]
	0x034F925C LDR X25, [X25 + 0x9A8]
	0x034F9260 LDRH W9, [X8 + 0x12E]
	0x034F9264 LDR X1, [X25]
	0x034F9268 CBZ X9, 0x34F928C
	0x034F926C LDR X10, [X8 + 0xB0]
	0x034F9270 ADD X10, X10, 0x8
	0x034F9274 LDUR X11, [X10 - 0x8]
	0x034F9278 CMP X11, X1
	0x034F927C B.EQ 0x34F929C
	0x034F9280 SUBS X9, X9, 0x1
	0x034F9284 ADD X10, X10, 0x10
	0x034F9288 B.NE 0x34F9274
	0x034F928C MOV X0, X23
	0x034F9290 MOV W2, W31
	0x034F9294 BL 0x1C5C788
	0x034F9298 B 0x34F92A8
	0x034F929C LDRSW X9, [X10]
	0x034F92A0 ADD X8, X8, X9, 0x4, LSL
	0x034F92A4 ADD X0, X8, 0x138
	0x034F92A8 LDP X8, X1, [X0]
	0x034F92AC MOV X0, X23
	0x034F92B0 BLR X8
	0x034F92B4 TBZ X0, 0x0, 0x34F9334
	0x034F92B8 LDR X9, [X21 + 0x10]
	0x034F92BC CBZ X9, 0x34F93D4
	0x034F92C0 LDR X8, [X23]
	0x034F92C4 LDRH W24, [X9 + 0x68]
	0x034F92C8 LDR X1, [X25]
	0x034F92CC LDRH W9, [X8 + 0x12E]
	0x034F92D0 CBZ X9, 0x34F92F4
	0x034F92D4 LDR X10, [X8 + 0xB0]
	0x034F92D8 ADD X10, X10, 0x8
	0x034F92DC LDUR X11, [X10 - 0x8]
	0x034F92E0 CMP X11, X1
	0x034F92E4 B.EQ 0x34F9304
	0x034F92E8 SUBS X9, X9, 0x1
	0x034F92EC ADD X10, X10, 0x10
	0x034F92F0 B.NE 0x34F92DC
	0x034F92F4 MOVZ W2, 0x2
	0x034F92F8 MOV X0, X23
	0x034F92FC BL 0x1C5C788
	0x034F9300 B 0x34F9314
	0x034F9304 LDR W9, [X10]
	0x034F9308 ADD W9, W9, 0x2
	0x034F930C ADD X8, X8, W9, 0x4, SXTW
	0x034F9310 ADD X0, X8, 0x138
	0x034F9314 LDP X8, X6, [X0]
	0x034F9318 MOVZ W3, 0x1
	0x034F931C MOV X0, X23
	0x034F9320 MOV X1, X20
	0x034F9324 MOV W2, W19
	0x034F9328 MOV W4, W24
	0x034F932C MOV X5, X21
	0x034F9330 BLR X8
	0x034F9334 LDR X0, [X21 + 0x10]
	0x034F9338 CBZ X0, 0x34F93D4
	0x034F933C LDR X8, [X0 + 0x110]
	0x034F9340 CBZ X8, 0x34F93D4
	0x034F9344 LDRB W8, [X8 + 0x10]
	0x034F9348 CBZ W8, 0x34F9394
	0x034F934C TBZ X22, 0x0, 0x34F93BC
	0x034F9350 ADRP X8, 0xBFA000
	0x034F9354 LDR X8, [X8 + 0x618]
	0x034F9358 MOV W1, W19
	0x034F935C LDR X0, [X8]
	0x034F9360 BL 0x1C16D6C
	0x034F9364 MOV X22, X0
	0x034F9368 MOV X0, X20
	0x034F936C MOV W1, W31
	0x034F9370 MOV X2, X22
	0x034F9374 MOV W3, W31
	0x034F9378 MOV W4, W19
	0x034F937C MOV X5, X31
	0x034F9380 BL 0x33A8A9C
	0x034F9384 LDR X0, [X21 + 0x10]
	0x034F9388 CBZ X0, 0x34F93D4
	0x034F938C MOV X1, X22
	0x034F9390 B 0x34F93C0
	0x034F9394 LDR X8, [X0]
	0x034F9398 MOV X1, X20
	0x034F939C MOV W2, W19
	0x034F93A0 LDP X20, X19, [X31 + 0x30]
	0x034F93A4 LDR X4, [X8 + 0x258]
	0x034F93A8 LDR X3, [X8 + 0x260]
	0x034F93AC LDP X22, X21, [X31 + 0x20]
	0x034F93B0 LDP X24, X23, [X31 + 0x10]
	0x034F93B4 LDP X30, X25, [X31], #0x40
	0x034F93B8 BR X4
	0x034F93BC MOV X1, X20
	0x034F93C0 LDP X20, X19, [X31 + 0x30]
	0x034F93C4 LDP X22, X21, [X31 + 0x20]
	0x034F93C8 LDP X24, X23, [X31 + 0x10]
	0x034F93CC LDP X30, X25, [X31], #0x40
	0x034F93D0 B 0x34F93D8
	0x034F93D4 BL 0x1C16F20
	0x034F93D8 STR X30, [X31 - 0x40]!
	0x034F93DC STP X24, X23, [X31 + 0x10]
	0x034F93E0 STP X22, X21, [X31 + 0x20]
	0x034F93E4 STP X20, X19, [X31 + 0x30]
	0x034F93E8 ADRP X21, 0xEE6000
	0x034F93EC LDRB W8, [X21 + 0xA82]
	0x034F93F0 MOV X19, X1
	0x034F93F4 MOV X20, X0
	0x034F93F8 TBNZ X8, 0x0, 0x34F9458
	0x034F93FC ADRP X0, 0xC3A000
	0x034F9400 LDR X0, [X0 + 0x9B0]
	0x034F9404 BL 0x1C16CF4
	0x034F9408 ADRP X0, 0xC3A000
	0x034F940C LDR X0, [X0 + 0x9B8]
	0x034F9410 BL 0x1C16CF4
	0x034F9414 ADRP X0, 0xC3A000
	0x034F9418 LDR X0, [X0 + 0x9C0]
	0x034F941C BL 0x1C16CF4
	0x034F9420 ADRP X0, 0xC3A000
	0x034F9424 LDR X0, [X0 + 0x9C8]
	0x034F9428 BL 0x1C16CF4
	0x034F942C ADRP X0, 0xC3A000
	0x034F9430 LDR X0, [X0 + 0x9D0]
	0x034F9434 BL 0x1C16CF4
	0x034F9438 ADRP X0, 0xC3A000
	0x034F943C LDR X0, [X0 + 0x9D8]
	0x034F9440 BL 0x1C16CF4
	0x034F9444 ADRP X0, 0xC3A000
	0x034F9448 LDR X0, [X0 + 0x9E0]
	0x034F944C BL 0x1C16CF4
	0x034F9450 MOVZ W8, 0x1
	0x034F9454 STRB W8, [X21 + 0xA82]
	0x034F9458 LDR X8, [X20 + 0x110]
	0x034F945C CBZ X8, 0x34F9634
	0x034F9460 LDRB W9, [X8 + 0x10]
	0x034F9464 CBZ W9, 0x34F963C
	0x034F9468 LDRB W9, [X20 + 0x20]
	0x034F946C CBZ W9, 0x34F94A8
	0x034F9470 LDR W9, [X8 + 0x24]
	0x034F9474 CMP W9, 0x1
	0x034F9478 B.LT 0x34F94F0
	0x034F947C LDR X0, [X20 + 0xF8]
	0x034F9480 CBZ X0, 0x34F9634
	0x034F9484 LDR X8, [X0]
	0x034F9488 UBFM W1, W9, 0x1F, 0x1E
	0x034F948C LDP X10, X2, [X8 + 0x1A8]
	0x034F9490 BLR X10
	0x034F9494 LDR X8, [X20 + 0x110]
	0x034F9498 CBZ X8, 0x34F9634
	0x034F949C LDR W9, [X8 + 0x24]
	0x034F94A0 SUB W23, W0, W9
	0x034F94A4 B 0x34F94F4
	0x034F94A8 LDR W9, [X8 + 0x28]
	0x034F94AC CMP W9, 0x1
	0x034F94B0 B.LT 0x34F9470
	0x034F94B4 LDR X0, [X20 + 0xF8]
	0x034F94B8 CBZ X0, 0x34F9634
	0x034F94BC LDR X8, [X0]
	0x034F94C0 MOVZ W1, 0x65
	0x034F94C4 LDP X9, X2, [X8 + 0x1A8]
	0x034F94C8 BLR X9
	0x034F94CC LDR X8, [X20 + 0x110]
	0x034F94D0 CBZ X8, 0x34F9634
	0x034F94D4 LDR W9, [X8 + 0x28]
	0x034F94D8 CMP W0, W9
	0x034F94DC B.GE 0x34F9470
	0x034F94E0 LDR W9, [X8 + 0x4C]
	0x034F94E4 ADD W9, W9, 0x1
	0x034F94E8 STR W9, [X8 + 0x4C]
	0x034F94EC B 0x34F9620
	0x034F94F0 MOV W23, W31
	0x034F94F4 LDR X0, [X20 + 0xC0]
	0x034F94F8 CBZ X0, 0x34F9634
	0x034F94FC ADRP X21, 0xC3A000
	0x034F9500 LDR W24, [X8 + 0x20]
	0x034F9504 LDR X21, [X21 + 0x9E0]
	0x034F9508 MOV X1, X31
	0x034F950C BL 0x364C19C
	0x034F9510 LDR X8, [X21]
	0x034F9514 MOV X22, X0
	0x034F9518 MOV X0, X8
	0x034F951C BL 0x1C16F10
	0x034F9520 MOV X21, X0
	0x034F9524 BL 0x34FB2A0
	0x034F9528 CBZ X21, 0x34F9634
	0x034F952C ADD W8, W24, W23
	0x034F9530 ADD W22, W8, W22
	0x034F9534 STR X19, [X21 + 0x20]
	0x034F9538 STR W22, [X21 + 0x18]
	0x034F953C STR W8, [X21 + 0x28]
	0x034F9540 LDR X19, [X20 + 0x108]
	0x034F9544 STRB W31, [X31 + 0xC]
	0x034F9548 ADD X1, X31, 0xC
	0x034F954C MOV X0, X19
	0x034F9550 MOV X2, X31
	0x034F9554 BL 0x33DE64C
	0x034F9558 LDR X8, [X20 + 0x108]
	0x034F955C CBZ X8, 0x34F968C
	0x034F9560 ADRP X23, 0xC3A000
	0x034F9564 LDR W9, [X8 + 0x18]
	0x034F9568 LDR X23, [X23 + 0x9C8]
	0x034F956C CBZ W9, 0x34F957C
	0x034F9570 LDRB W9, [X20 + 0x20]
	0x034F9574 CMP W9, 0x1
	0x034F9578 B.NE 0x34F9590
	0x034F957C LDR X2, [X23]
	0x034F9580 MOV X0, X8
	0x034F9584 MOV X1, X21
	0x034F9588 BL 0x2EECFD4
	0x034F958C B 0x34F9604
	0x034F9590 LDR X9, [X8 + 0x10]
	0x034F9594 CBZ X9, 0x34F95D0
	0x034F9598 ADRP X24, 0xC3A000
	0x034F959C LDR X24, [X24 + 0x9B0]
	0x034F95A0 LDR X8, [X9 + 0x28]
	0x034F95A4 CBZ X8, 0x34F9638
	0x034F95A8 LDR W8, [X8 + 0x18]
	0x034F95AC CMP W8, W22
	0x034F95B0 B.GE 0x34F95E4
	0x034F95B4 LDR X1, [X24]
	0x034F95B8 MOV X0, X9
	0x034F95BC BL 0x2EEA710
	0x034F95C0 MOV X9, X0
	0x034F95C4 CBNZ X0, 0x34F95A0
	0x034F95C8 LDR X8, [X20 + 0x108]
	0x034F95CC CBZ X8, 0x34F9694
	0x034F95D0 LDR X2, [X23]
	0x034F95D4 MOV X0, X8
	0x034F95D8 MOV X1, X21
	0x034F95DC BL 0x2EECFD4
	0x034F95E0 B 0x34F9604
	0x034F95E4 LDR X0, [X20 + 0x108]
	0x034F95E8 CBZ X0, 0x34F9690
	0x034F95EC ADRP X8, 0xC3A000
	0x034F95F0 LDR X8, [X8 + 0x9C0]
	0x034F95F4 LDR X3, [X8]
	0x034F95F8 MOV X1, X9
	0x034F95FC MOV X2, X21
	0x034F9600 BL 0x2EECEA8
	0x034F9604 MOV X21, X31
	0x034F9608 LDRB W8, [X31 + 0xC]
	0x034F960C CBZ W8, 0x34F961C
	0x034F9610 MOV X0, X19
	0x034F9614 MOV X1, X31
	0x034F9618 BL 0x33E14E4
	0x034F961C CBNZ X21, 0x34F9684
	0x034F9620 LDP X20, X19, [X31 + 0x30]
	0x034F9624 LDP X22, X21, [X31 + 0x20]
	0x034F9628 LDP X24, X23, [X31 + 0x10]
	0x034F962C LDR X30, [X31], #0x40
	0x034F9630 RET
	0x034F9634 BL 0x1C16F20
	0x034F9638 BL 0x1C16F20
	0x034F963C ADRP X0, 0xC03000
	0x034F9640 LDR X0, [X0 + 0x758]
	0x034F9644 BL 0x1C16D08
	0x034F9648 BL 0x1C16F10
	0x034F964C MOV X19, X0
	0x034F9650 ADRP X0, 0xC3A000
	0x034F9654 LDR X0, [X0 + 0xB50]
	0x034F9658 BL 0x1C16D08
	0x034F965C MOV X1, X0
	0x034F9660 MOV X0, X19
	0x034F9664 MOV X2, X31
	0x034F9668 BL 0x33802E4
	0x034F966C ADRP X0, 0xC3A000
	0x034F9670 LDR X0, [X0 + 0xB58]
	0x034F9674 BL 0x1C16D08
	0x034F9678 MOV X1, X0
	0x034F967C MOV X0, X19
	0x034F9680 BL 0x1C16DEC

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0xEE7000
	007 Move W8, [X20+2675]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {60}
	013 Move X0, 0xBFB000
	014 Move X0, [X0+1560]
	015 Call 0x1C17CF4
	016 Move X0, 0xBFC000
	017 Move X0, [X0+1728]
	018 Call 0x1C17CF4
	019 Move X0, 0xBFC000
	020 Move X0, [X0+1736]
	021 Call 0x1C17CF4
	022 Move X0, 0xBFC000
	023 Move X0, [X0+1744]
	024 Call 0x1C17CF4
	025 Move X0, 0xBFB000
	026 Move X0, [X0+1880]
	027 Call 0x1C17CF4
	028 Move X0, 0xC3B000
	029 Move X0, [X0+2712]
	030 Call 0x1C17CF4
	031 Move X0, 0xC3B000
	032 Move X0, [X0+2720]
	033 Call 0x1C17CF4
	034 Move X0, 0xC3B000
	035 Move X0, [X0+2728]
	036 Call 0x1C17CF4
	037 Move X0, 0xC3B000
	038 Move X0, [X0+2736]
	039 Call 0x1C17CF4
	040 Move X0, 0xC3B000
	041 Move X0, [X0+2744]
	042 Call 0x1C17CF4
	043 Move X0, 0xC3B000
	044 Move X0, [X0+2752]
	045 Call 0x1C17CF4
	046 Move X0, 0xC3B000
	047 Move X0, [X0+2760]
	048 Call 0x1C17CF4
	049 Move X0, 0xC3B000
	050 Move X0, [X0+2768]
	051 Call 0x1C17CF4
	052 Move X0, 0xC3B000
	053 Move X0, [X0+2776]
	054 Call 0x1C17CF4
	055 Move X0, 0xC3B000
	056 Move X0, [X0+2784]
	057 Call 0x1C17CF4
	058 Move W8, 1
	059 Move [X20+2675], W8
	060 Move [X31+12], W31
	061 Move X8, [X19+40]
	062 Compare X8, 0
	063 JumpIfEqual {66}
	064 Move W8, [X8+28]
	065 NotImplemented "Instruction CMP not yet implemented."
	066 Move X8, 0xC3B000
	067 Move X8, [X8+2784]
	068 Move W1, 2
	069 Move X0, X19
	070 Move X2, [X8]
	071 Call PeerBase.EnqueueDebugReturn, X0, X1, X2
	072 Move X8, [X19+16]
	073 Compare X8, 0
	074 JumpIfEqual {368}
	075 Move W8, [X8+38]
	076 Compare W8, 0
	077 JumpIfEqual {81}
	078 Move X0, X19
	079 Call PeerBase.WriteInitV3, X0
	080 Move X20, X0
	081 Move X8, [X19+160]
	082 Compare X8, 0
	083 JumpIfEqual {164}
	084 Move X8, 0xBFC000
	085 Move X8, [X8+1744]
	086 Move X0, [X8]
	087 Call 0x1C17F10
	088 Move X8, 0xBFC000
	089 Move X8, [X8+1728]
	090 Move X20, X0
	091 Move X1, [X8]
	092 Call Dictionary`2<Object, Object>..ctor, X0
	093 Compare X20, 0
	094 JumpIfEqual {368}
	095 Move X8, 0xC3B000
	096 Move X21, 0xBFC000
	097 Move X8, [X8+2720]
	098 Move X21, [X21+1736]
	099 Move X0, X20
	100 Move X2, X31
	101 Move X1, [X8]
	102 Move X3, [X21]
	103 Call Dictionary`2<Object, Object>.set_Item, X0, X1, X2
	104 Move X8, 0xC3B000
	105 Move X2, [X19+176]
	106 Move X8, [X8+2760]
	107 Move X3, [X21]
	108 Move X0, X20
	109 Move X1, [X8]
	110 Call Dictionary`2<Object, Object>.set_Item, X0, X1, X2
	111 Move X0, [X19+16]
	112 Compare X0, 0
	113 JumpIfEqual {368}
	114 Move X1, X31
	115 Call PhotonPeer.get_ClientVersion, X0
	116 Move X8, 0xC3B000
	117 Move X8, [X8+2776]
	118 Move X3, [X21]
	119 Move X2, X0
	120 Move X0, X20
	121 Move X1, [X8]
	122 Call Dictionary`2<Object, Object>.set_Item, X0, X1, X2
	123 Move X0, [X19+24]
	124 Compare X0, 0
	125 JumpIfEqual {368}
	126 Move X8, [X0]
	127 Move X9, [X8+376]
	128 Move X1, [X8+384]
	129 NotImplemented "Instruction BLR not yet implemented."
	130 Move X8, 0xC3B000
	131 Move X8, [X8+2744]
	132 Move X3, [X21]
	133 Move X2, X0
	134 Move X0, X20
	135 Move X1, [X8]
	136 Call Dictionary`2<Object, Object>.set_Item, X0, X1, X2
	137 Move X0, [X19+16]
	138 Compare X0, 0
	139 JumpIfEqual {368}
	140 Move X1, X31
	141 Call PhotonPeer.get_ClientSdkIdShifted, X0
	142 Move [X31+12], W0
	143 Add X0, X31, 12
	144 Move X1, X31
	145 Call Byte.ToString, X0
	146 Move X8, 0xC3B000
	147 Move X8, [X8+2728]
	148 Move X3, [X21]
	149 Move X2, X0
	150 Move X0, X20
	151 Move X1, [X8]
	152 Call Dictionary`2<Object, Object>.set_Item, X0, X1, X2
	153 Move X1, [X19+160]
	154 Compare X1, 0
	155 JumpIfEqual {289}
	156 Move X0, [X19+24]
	157 Compare X0, 0
	158 JumpIfEqual {368}
	159 Call IProtocol.Serialize, X0, X1
	160 Compare X0, 0
	161 JumpIfEqual {368}
	162 Move W22, [X0+24]
	163 Move X21, X0
	164 Move X8, 0xBFB000
	165 Move X8, [X8+1560]
	166 Move W1, 41
	167 Move X0, [X8]
	168 Call 0x1C17D6C
	169 Move X21, 0xC3B000
	170 Move X21, [X21+2712]
	171 Move X20, X0
	172 Move X8, [X21]
	173 Move W9, [X8+224]
	174 Compare W9, 0
	175 JumpIfNotEqual {179}
	176 Move X0, X8
	177 Call 0x1C17DFC
	178 Move X8, [X21]
	179 Compare X20, 0
	180 JumpIfEqual {368}
	181 Move W9, [X20+24]
	182 Compare W9, 0
	183 JumpIfEqual {369}
	184 Move X8, [X8+184]
	185 NotImplemented "Instruction CMP not yet implemented."
	186 Move X21, [X8]
	187 Move W8, 243
	188 Move [X20+32], W8
	189 Move [X20+33], W31
	190 Move X0, [X19+24]
	191 Compare X0, 0
	192 JumpIfEqual {368}
	193 Move X8, [X0]
	194 Move X9, [X8+392]
	195 Move X1, [X8+400]
	196 NotImplemented "Instruction BLR not yet implemented."
	197 Compare X0, 0
	198 JumpIfEqual {368}
	199 Move W8, [X0+24]
	200 Compare W8, 0
	201 JumpIfEqual {369}
	202 Move W8, [X20+24]
	203 NotImplemented "Instruction CMP not yet implemented."
	204 Move W8, [X0+32]
	205 Move [X20+34], W8
	206 Move X0, [X19+24]
	207 Compare X0, 0
	208 JumpIfEqual {368}
	209 Move X8, [X0]
	210 Move X9, [X8+392]
	211 Move X1, [X8+400]
	212 NotImplemented "Instruction BLR not yet implemented."
	213 Compare X0, 0
	214 JumpIfEqual {368}
	215 Move W8, [X0+24]
	216 NotImplemented "Instruction CMP not yet implemented."
	217 Move W8, [X20+24]
	218 NotImplemented "Instruction CMP not yet implemented."
	219 Move W8, [X0+33]
	220 Move [X20+35], W8
	221 Move X0, [X19+16]
	222 Compare X0, 0
	223 JumpIfEqual {368}
	224 Move X1, X31
	225 Call PhotonPeer.get_ClientSdkIdShifted, X0
	226 Move W8, [X20+24]
	227 NotImplemented "Instruction CMP not yet implemented."
	228 Move [X20+36], W0
	229 Compare X21, 0
	230 JumpIfEqual {368}
	231 Move W9, [X21+24]
	232 NotImplemented "Instruction CMP not yet implemented."
	233 Compare W9, 0
	234 JumpIfEqual {369}
	235 NotImplemented "Instruction CMP not yet implemented."
	236 Move W9, [X21+32]
	237 Move W10, [X21+33]
	238 Or W9, W10, W9
	239 Move [X20+37], W9
	240 Move W9, [X21+24]
	241 NotImplemented "Instruction CMP not yet implemented."
	242 NotImplemented "Instruction CMP not yet implemented."
	243 Move W9, [X21+34]
	244 Move [X20+38], W9
	245 Move W9, [X21+24]
	246 NotImplemented "Instruction CMP not yet implemented."
	247 NotImplemented "Instruction CMP not yet implemented."
	248 Move W9, [X21+35]
	249 NotImplemented "Instruction CMP not yet implemented."
	250 Move [X20+39], W9
	251 Move [X20+40], W31
	252 Move X0, [X19+176]
	253 Move X1, X31
	254 Call String.IsNullOrEmpty, X0
	255 Move TEMP, X0
	256 And TEMP, TEMP, 1
	257 Compare TEMP, 1
	258 JumpIfNotEqual {263}
	259 Move X8, 0xC3B000
	260 Move X8, [X8+2768]
	261 Move X8, [X8]
	262 Move [X19+176], X8
	263 Move X21, X31
	264 Add X22, X20, 41
	265 Move X0, [X19+176]
	266 Compare X0, 0
	267 JumpIfEqual {368}
	268 NotImplemented "Instruction LDRSW not yet implemented."
	269 NotImplemented "Instruction CMP not yet implemented."
	270 Move W1, W21
	271 Move X2, X31
	272 Call String.get_Chars, X0, X1
	273 Move W0, W31
	274 Move W8, [X20+24]
	275 Add X9, X21, 9
	276 NotImplemented "Instruction CMP not yet implemented."
	277 Move [X22], W0
	278 Subtract X21, X9, 8
	279 NotImplemented "Instruction CMP not yet implemented."
	280 Move X9, [X19+40]
	281 Compare X9, 0
	282 JumpIfEqual {357}
	283 NotImplemented "Instruction CMP not yet implemented."
	284 Move W9, [X9+68]
	285 Move W8, [X20+37]
	286 Compare W9, 0
	287 JumpIfEqual {359}
	288 Or W8, W8, 128
	289 Move W22, W31
	290 Move X21, X31
	291 Move X1, X20
	292 Call PeerBase.GetHttpKeyValueString, X0, X1
	293 Move X8, [X19+40]
	294 Move X20, X0
	295 Compare X8, 0
	296 JumpIfEqual {307}
	297 Move W8, [X8+68]
	298 Compare W8, 0
	299 JumpIfEqual {307}
	300 Move X8, 0xC3B000
	301 Move X8, [X8+2736]
	302 Move X0, X20
	303 Move X2, X31
	304 Move X1, [X8]
	305 Call String.Concat, X0, X1
	306 Move X20, X0
	307 Move X8, 0xBFB000
	308 Move X19, [X19+48]
	309 Move X8, [X8+1880]
	310 Add X1, X31, 8
	311 Move [X31+8], W22
	312 Move X0, [X8]
	313 Call 0x1C17E04
	314 Move X8, 0xC3B000
	315 Move X8, [X8+2752]
	316 Move X3, X0
	317 Move X1, X20
	318 Move X2, X19
	319 Move X8, [X8]
	320 Move X4, X31
	321 Move X0, X8
	322 Call String.Format, X0, X1, X2, X3
	323 Compare X0, 0
	324 JumpIfEqual {368}
	325 Move X9, 0xBFB000
	326 Move W8, [X0+16]
	327 Move X9, [X9+1560]
	328 Move X19, X0
	329 Add W1, W8, W22
	330 Move X0, [X9]
	331 Call 0x1C17D6C
	332 Move X20, X0
	333 Compare X21, 0
	334 JumpIfEqual {342}
	335 Move W3, [X19+16]
	336 Move W4, [X21+24]
	337 Move X0, X21
	338 Move W1, W31
	339 Move X2, X20
	340 Move X5, X31
	341 Call Buffer.BlockCopy, X0, X1, X2, X3, X4
	342 Move X0, X31
	343 Call Encoding.get_UTF8
	344 Compare X0, 0
	345 JumpIfEqual {368}
	346 Move X8, [X0]
	347 Move X1, X19
	348 Move X9, [X8+616]
	349 Move X2, [X8+624]
	350 NotImplemented "Instruction BLR not yet implemented."
	351 Move W4, [X19+16]
	352 Move W1, W31
	353 Move X2, X20
	354 Move W3, W31
	355 Move X5, X31
	356 Call Buffer.BlockCopy, X0, X1, X2, X3, X4
	357 NotImplemented "Instruction CMP not yet implemented."
	358 Move W8, [X20+37]
	359 And W8, W8, 127
	360 Move [X20+37], W8
	361 Move X0, X20
	362 Move X20, [X31+32]
	363 Move X19, [X31+40]
	364 Move X22, [X31+16]
	365 Move X21, [X31+24]
	366 Move X30, [X31+48]
	367 Return X0
	368 Call 0x1C17F20
	369 Call 0x1C17F28

Method: System.Byte[] WriteInitV3()

Disassembly:
	0x034FD9E0 BL 0x351EF00
	0x034FD9E4 AND W8, W0, 0xFF
	0x034FD9E8 CMP W8, 0xF3
	0x034FD9EC STRB W0, [X31 + 0x2C]
	0x034FD9F0 B.EQ 0x34FD9FC
	0x034FD9F4 CMP W8, 0xFD
	0x034FD9F8 B.NE 0x34FDA38
	0x034FD9FC MOV X0, X20
	0x034FDA00 MOV X1, X31
	0x034FDA04 BL 0x351EF00
	0x034FDA08 AND W8, W0, 0x7F
	0x034FDA0C CMP W8, 0x1
	0x034FDA10 STRB W8, [X31 + 0x28]
	0x034FDA14 B.EQ 0x34FDBC0
	0x034FDA18 SXTB W8, W0
	0x034FDA1C TBNZ X8, 0x1F, 0x34FDADC
	0x034FDA20 MOVZ W1, 0x2
	0x034FDA24 MOV X0, X20
	0x034FDA28 MOV W2, W31
	0x034FDA2C MOV X3, X31
	0x034FDA30 BL 0x351EDC4
	0x034FDA34 B 0x34FDBC0
	0x034FDA38 LDR X8, [X19 + 0x10]
	0x034FDA3C CBZ X8, 0x34FE620
	0x034FDA40 LDRB W9, [X8 + 0x40]
	0x034FDA44 CBZ W9, 0x34FDB6C
	0x034FDA48 LDR X19, [X8 + 0x48]
	0x034FDA4C ADD X0, X31, 0x2C
	0x034FDA50 MOV X1, X31
	0x034FDA54 BL 0x3319BB4
	0x034FDA58 ADRP X8, 0xC36000
	0x034FDA5C LDR X8, [X8 + 0xCC8]
	0x034FDA60 MOV X1, X0
	0x034FDA64 MOV X2, X31
	0x034FDA68 LDR X8, [X8]
	0x034FDA6C MOV X0, X8
	0x034FDA70 BL 0x321B938
	0x034FDA74 CBZ X19, 0x34FE620
	0x034FDA78 ADRP X10, 0xBFE000
	0x034FDA7C LDR X8, [X19]
	0x034FDA80 LDR X10, [X10 + 0xBC8]
	0x034FDA84 MOV X20, X0
	0x034FDA88 LDRH W9, [X8 + 0x12E]
	0x034FDA8C LDR X1, [X10]
	0x034FDA90 CBZ X9, 0x34FDAB4
	0x034FDA94 LDR X10, [X8 + 0xB0]
	0x034FDA98 ADD X10, X10, 0x8
	0x034FDA9C LDUR X11, [X10 - 0x8]
	0x034FDAA0 CMP X11, X1
	0x034FDAA4 B.EQ 0x34FDB4C
	0x034FDAA8 SUBS X9, X9, 0x1
	0x034FDAAC ADD X10, X10, 0x10
	0x034FDAB0 B.NE 0x34FDA9C
	0x034FDAB4 MOV X0, X19
	0x034FDAB8 MOV W2, W31
	0x034FDABC BL 0x1C5C788
	0x034FDAC0 B 0x34FDB58
	0x034FDAC4 LDRSW X9, [X10]
	0x034FDAC8 ADD X8, X8, X9, 0x4, LSL
	0x034FDACC ADD X0, X8, 0x138
	0x034FDAD0 LDP X8, X3, [X0]
	0x034FDAD4 MOVZ W1, 0x1
	0x034FDAD8 B 0x34FDB60
	0x034FDADC LDR X21, [X19 + 0xF0]
	0x034FDAE0 MOV X0, X20
	0x034FDAE4 MOV X1, X31
	0x034FDAE8 BL 0x3517FCC
	0x034FDAEC MOV X22, X0
	0x034FDAF0 MOV X0, X20
	0x034FDAF4 MOV X1, X31
	0x034FDAF8 BL 0x351806C
	0x034FDAFC CBZ X21, 0x34FE248
	0x034FDB00 ADRP X10, 0xC36000
	0x034FDB04 LDR X8, [X21]
	0x034FDB08 LDR X10, [X10 + 0xCB0]
	0x034FDB0C MOV W20, W0
	0x034FDB10 LDRH W9, [X8 + 0x12E]
	0x034FDB14 LDR X1, [X10]
	0x034FDB18 CBZ X9, 0x34FDB3C
	0x034FDB1C LDR X10, [X8 + 0xB0]
	0x034FDB20 ADD X10, X10, 0x8
	0x034FDB24 LDUR X11, [X10 - 0x8]
	0x034FDB28 CMP X11, X1
	0x034FDB2C B.EQ 0x34FDB74
	0x034FDB30 SUBS X9, X9, 0x1
	0x034FDB34 ADD X10, X10, 0x10
	0x034FDB38 B.NE 0x34FDB24
	0x034FDB3C MOVZ W2, 0x6
	0x034FDB40 MOV X0, X21
	0x034FDB44 BL 0x1C5C788
	0x034FDB48 B 0x34FDB84
	0x034FDB4C LDRSW X9, [X10]
	0x034FDB50 ADD X8, X8, X9, 0x4, LSL
	0x034FDB54 ADD X0, X8, 0x138
	0x034FDB58 LDP X8, X3, [X0]
	0x034FDB5C MOVZ W1, 0x5
	0x034FDB60 MOV X0, X19
	0x034FDB64 MOV X2, X20
	0x034FDB68 BLR X8
	0x034FDB6C MOV W20, W31
	0x034FDB70 B 0x34FE22C
	0x034FDB74 LDR W9, [X10]
	0x034FDB78 ADD W9, W9, 0x6
	0x034FDB7C ADD X8, X8, W9, 0x4, SXTW
	0x034FDB80 ADD X0, X8, 0x138
	0x034FDB84 LDP X8, X4, [X0]
	0x034FDB88 SUB W3, W20, 0x2
	0x034FDB8C MOVZ W2, 0x2
	0x034FDB90 MOV X0, X21
	0x034FDB94 MOV X1, X22
	0x034FDB98 BLR X8
	0x034FDB9C ADRP X8, 0xBFF000
	0x034FDBA0 LDR X8, [X8 + 0xBA8]
	0x034FDBA4 MOV X21, X0
	0x034FDBA8 LDR X0, [X8]
	0x034FDBAC BL 0x1C16F10
	0x034FDBB0 MOV X20, X0
	0x034FDBB4 MOV X1, X21
	0x034FDBB8 MOV X2, X31
	0x034FDBBC BL 0x351EB5C
	0x034FDBC0 MOV X24, X19
	0x034FDBC4 LDR X0, [X24 + 0x10]!
	0x034FDBC8 CBZ X0, 0x34FE620
	0x034FDBCC MOV X1, X31
	0x034FDBD0 BL 0x35019D4
	0x034FDBD4 LDR X8, [X24]
	0x034FDBD8 CBZ X8, 0x34FE620
	0x034FDBDC MOV W21, W0
	0x034FDBE0 MOV X0, X8
	0x034FDBE4 MOV X1, X31
	0x034FDBE8 BL 0x35019E8
	0x034FDBEC LDRB W9, [X31 + 0x28]
	0x034FDBF0 ANDS W31, W0, 0x1
	0x034FDBF4 MOVZ W8, 0x2
	0x034FDBF8 CSEL W8, W8, W31, NE
	0x034FDBFC SUB W9, W9, 0x1
	0x034FDC00 CMP W9, 0x8
	0x034FDC04 B.HI 0x34FDC30
	0x034FDC08 ADRP X10, 0xFFFFFFFFFD699000
	0x034FDC0C ADD X10, X10, 0xAB9
	0x034FDC10 ADR X11, 0x14
	0x034FDC14 LDRB W12, [X10, X9, LSL]
	0x034FDC18 ADD X11, X11, X12, 0x2, LSL
	0x034FDC1C BFM W8, W21, 0x0, 0x0
	0x034FDC20 BR X11
	0x034FDC24 MOV X0, X19
	0x034FDC28 BL 0x34FCFA4
	0x034FDC2C B 0x34FE228
	0x034FDC30 ADD X0, X31, 0x28
	0x034FDC34 MOV X1, X31
	0x034FDC38 BL 0x3319BB4
	0x034FDC3C ADRP X8, 0xC36000
	0x034FDC40 LDR X8, [X8 + 0xCD0]
	0x034FDC44 MOV X1, X0
	0x034FDC48 MOV X2, X31
	0x034FDC4C LDR X8, [X8]
	0x034FDC50 MOV X0, X8
	0x034FDC54 BL 0x321B938
	0x034FDC58 MOV X2, X0
	0x034FDC5C MOVZ W1, 0x1
	0x034FDC60 MOV X0, X19
	0x034FDC64 MOVZ W20, 0x1
	0x034FDC68 BL 0x34F116C
	0x034FDC6C B 0x34FE22C
	0x034FDC70 LDR X0, [X19 + 0x18]
	0x034FDC74 CBZ X0, 0x34FE620
	0x034FDC78 MOV X1, X20
	0x034FDC7C BL 0x34FA578
	0x034FDC80 LDR X0, [X24]
	0x034FDC84 CBZ X0, 0x34FE620
	0x034FDC88 MOV X1, X31
	0x034FDC8C BL 0x350257C
	0x034FDC90 TBZ X0, 0x0, 0x34FDEE8
	0x034FDC94 LDR X8, [X24]
	0x034FDC98 CBZ X8, 0x34FE620
	0x034FDC9C LDR X0, [X8 + 0xB0]
	0x034FDCA0 CBZ X0, 0x34FE620
	0x034FDCA4 LDR W1, [X19 + 0x48]
	0x034FDCA8 MOV X2, X31
	0x034FDCAC BL 0x35241F0
	0x034FDCB0 LDR X0, [X19 + 0xC0]
	0x034FDCB4 CBZ X0, 0x34FE620
	0x034FDCB8 MOV X1, X31
	0x034FDCBC BL 0x364C19C
	0x034FDCC0 MOV X20, X0
	0x034FDCC4 B 0x34FDEEC
	0x034FDCC8 LDR X0, [X19 + 0x18]
	0x034FDCCC CBZ X0, 0x34FE24C
	0x034FDCD0 LDR X9, [X0]
	0x034FDCD4 LDR X10, [X9 + 0x258]
	0x034FDCD8 LDR X3, [X9 + 0x260]
	0x034FDCDC MOV X1, X20
	0x034FDCE0 MOV W2, W8
	0x034FDCE4 BLR X10
	0x034FDCE8 MOV X20, X0
	0x034FDCEC LDR X0, [X24]
	0x034FDCF0 CBZ X0, 0x34FE620
	0x034FDCF4 MOV X1, X31
	0x034FDCF8 BL 0x350257C
	0x034FDCFC TBZ X0, 0x0, 0x34FDF34
	0x034FDD00 LDR X8, [X24]
	0x034FDD04 CBZ X8, 0x34FE620
	0x034FDD08 LDR X0, [X8 + 0xB0]
	0x034FDD0C CBZ X0, 0x34FE620
	0x034FDD10 LDR W1, [X19 + 0x48]
	0x034FDD14 MOV X2, X31
	0x034FDD18 BL 0x35241DC
	0x034FDD1C LDR X0, [X19 + 0xC0]
	0x034FDD20 CBZ X0, 0x34FE620
	0x034FDD24 MOV X1, X31
	0x034FDD28 BL 0x364C19C
	0x034FDD2C MOV X21, X0
	0x034FDD30 B 0x34FDF38
	0x034FDD34 LDR X0, [X24]
	0x034FDD38 CBZ X0, 0x34FE620
	0x034FDD3C MOV X1, X31
	0x034FDD40 BL 0x350257C
	0x034FDD44 TBZ X0, 0x0, 0x34FDE8C
	0x034FDD48 LDR X8, [X24]
	0x034FDD4C CBZ X8, 0x34FE620
	0x034FDD50 LDR X0, [X8 + 0xB0]
	0x034FDD54 CBZ X0, 0x34FE620
	0x034FDD58 LDR W1, [X19 + 0x48]
	0x034FDD5C MOV X2, X31
	0x034FDD60 BL 0x35241F0
	0x034FDD64 LDR X0, [X19 + 0xC0]
	0x034FDD68 CBZ X0, 0x34FE620
	0x034FDD6C MOV X1, X31
	0x034FDD70 BL 0x364C19C
	0x034FDD74 MOV X21, X0
	0x034FDD78 B 0x34FDE90
	0x034FDD7C LDR X0, [X19 + 0x18]
	0x034FDD80 CBZ X0, 0x34FE250
	0x034FDD84 LDR X9, [X0]
	0x034FDD88 LDR X2, [X19 + 0xB8]
	0x034FDD8C LDR X10, [X9 + 0x238]
	0x034FDD90 LDR X4, [X9 + 0x240]
	0x034FDD94 MOV X1, X20
	0x034FDD98 MOV W3, W8
	0x034FDD9C BLR X10
	0x034FDDA0 MOV X20, X0
	0x034FDDA4 LDR X0, [X24]
	0x034FDDA8 CBZ X0, 0x34FE620
	0x034FDDAC MOV X1, X31
	0x034FDDB0 BL 0x350257C
	0x034FDDB4 TBZ X0, 0x0, 0x34FDF90
	0x034FDDB8 LDR X8, [X24]
	0x034FDDBC CBZ X8, 0x34FE620
	0x034FDDC0 LDR X0, [X8 + 0xB0]
	0x034FDDC4 CBZ X0, 0x34FE620
	0x034FDDC8 LDR W1, [X19 + 0x48]
	0x034FDDCC MOV X2, X31
	0x034FDDD0 BL 0x35241F0
	0x034FDDD4 LDR X0, [X19 + 0xC0]
	0x034FDDD8 CBZ X0, 0x34FE620
	0x034FDDDC MOV X1, X31
	0x034FDDE0 BL 0x364C19C
	0x034FDDE4 MOV X21, X0
	0x034FDDE8 B 0x34FDF94
	0x034FDDEC LDR X0, [X19 + 0x18]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X20, 0xEE3000
	010 Move X21, 0xC00000
	011 Move W8, [X20+2676]
	012 Move X21, [X21+2984]
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {41}
	018 Move X0, 0xBF7000
	019 Move X0, [X0+1560]
	020 Call 0x1C17CF4
	021 Move X0, 0xC00000
	022 Move X0, [X0+1336]
	023 Call 0x1C17CF4
	024 Move X0, 0xC00000
	025 Move X0, [X0+1344]
	026 Call 0x1C17CF4
	027 Move X0, 0xC00000
	028 Move X0, [X0+696]
	029 Call 0x1C17CF4
	030 Move X0, 0xC00000
	031 Move X0, [X0+2984]
	032 Call 0x1C17CF4
	033 Move X0, 0xC37000
	034 Move X0, [X0+2712]
	035 Call 0x1C17CF4
	036 Move X0, 0xC37000
	037 Move X0, [X0+3184]
	038 Call 0x1C17CF4
	039 Move W8, 1
	040 Move [X20+2676], W8
	041 Move X0, [X21]
	042 Call 0x1C17F10
	043 Move W1, W31
	044 Move X2, X31
	045 Move X20, X0
	046 Call StreamBuffer..ctor, X0, X1
	047 Compare X20, 0
	048 JumpIfEqual {221}
	049 Move W1, 245
	050 Move X0, X20
	051 Move X2, X31
	052 Call StreamBuffer.WriteByte, X0, X1
	053 Move X8, [X19+40]
	054 Compare X8, 0
	055 JumpIfEqual {60}
	056 Move W8, [X8+68]
	057 Move W8, W8
	058 ShiftRight W8, 31
	059 And W8, W8, 0x3FFFFFFF
	060 Move X9, [X19+16]
	061 Compare X9, 0
	062 JumpIfEqual {221}
	063 Move X23, [X9+256]
	064 Move X0, X20
	065 Move W1, W31
	066 Move X3, X31
	067 NotImplemented "Instruction CMP not yet implemented."
	068 NotImplemented "Instruction CSET not yet implemented."
	069 Or W2, W8, W9
	070 Call StreamBuffer.WriteBytes, X0, X1, X2
	071 Move X0, [X19+24]
	072 Compare X0, 0
	073 JumpIfEqual {221}
	074 Move X8, [X0]
	075 Move X9, [X8+392]
	076 Move X1, [X8+400]
	077 NotImplemented "Instruction BLR not yet implemented."
	078 Compare X0, 0
	079 JumpIfEqual {221}
	080 Move W8, [X0+24]
	081 NotImplemented "Instruction CMP not yet implemented."
	082 Move W8, [X0+33]
	083 NotImplemented "Instruction CMP not yet implemented."
	084 NotImplemented "Instruction CMP not yet implemented."
	085 Move W1, 18
	086 Move W1, 16
	087 Move X21, 0xC37000
	088 Move X21, [X21+2712]
	089 Move X0, X20
	090 Move X2, X31
	091 Call StreamBuffer.WriteByte, X0, X1
	092 Move X0, [X21]
	093 Move W8, [X0+224]
	094 Compare W8, 0
	095 JumpIfNotEqual {98}
	096 Call 0x1C17DFC
	097 Move X0, [X21]
	098 Move X8, [X0+184]
	099 Move W3, 4
	100 Move X0, X20
	101 Move W2, W31
	102 Move X1, [X8]
	103 Move X4, X31
	104 Call StreamBuffer.Write, X0, X1, X2, X3
	105 Move X8, [X19+16]
	106 Compare X8, 0
	107 JumpIfEqual {221}
	108 Move W1, [X8+37]
	109 Move X0, X20
	110 Move X2, X31
	111 Call StreamBuffer.WriteByte, X0, X1
	112 Move X0, X20
	113 Move W1, W31
	114 Move X2, X31
	115 Call StreamBuffer.WriteByte, X0, X1
	116 Move X0, [X19+176]
	117 Move X1, X31
	118 Call String.IsNullOrEmpty, X0
	119 Move TEMP, X0
	120 And TEMP, TEMP, 1
	121 Compare TEMP, 1
	122 JumpIfNotEqual {127}
	123 Move X8, 0xC37000
	124 Move X8, [X8+3184]
	125 Move X8, [X8]
	126 Move [X19+176], X8
	127 Move X0, X31
	128 Call Encoding.get_UTF8
	129 Compare X0, 0
	130 JumpIfEqual {221}
	131 Move X8, [X0]
	132 Move X1, [X19+176]
	133 Move X9, [X8+616]
	134 Move X2, [X8+624]
	135 NotImplemented "Instruction BLR not yet implemented."
	136 Compare X0, 0
	137 JumpIfEqual {221}
	138 Move X1, [X0+24]
	139 Move X21, X0
	140 NotImplemented "Instruction CMP not yet implemented."
	141 Move X22, 0xBF7000
	142 Move X25, 0xC00000
	143 Move X24, 0xC00000
	144 Move X22, [X22+1560]
	145 Move X25, [X25+696]
	146 Move X24, [X24+1344]
	147 Move X0, X20
	148 Move X2, X31
	149 Call StreamBuffer.WriteByte, X0, X1
	150 Move W3, [X21+24]
	151 Move X0, X20
	152 Move X1, X21
	153 Move W2, W31
	154 Move X4, X31
	155 Call StreamBuffer.Write, X0, X1, X2, X3
	156 Move X0, [X19+160]
	157 Move X1, [X22]
	158 Call 0x1C17E00
	159 Compare X0, 0
	160 JumpIfEqual {176}
	161 Move X22, [X0+24]
	162 Move X21, X0
	163 Move X0, X20
	164 Move X3, X31
	165 Move X1, X22
	166 ShiftRight X1, 8
	167 And X1, X1, 0x7FFFFFFF
	168 Move W2, W22
	169 Call StreamBuffer.WriteBytes, X0, X1, X2
	170 Move X0, X20
	171 Move X1, X21
	172 Move W2, W31
	173 Move W3, W22
	174 Move X4, X31
	175 Call StreamBuffer.Write, X0, X1, X2, X3
	176 Move X0, X20
	177 Move W1, W31
	178 Move W2, W31
	179 Move X3, X31
	180 Call StreamBuffer.WriteBytes, X0, X1, X2
	181 Move X0, [X25]
	182 Call 0x1C17F10
	183 Move X1, [X24]
	184 Move X21, X0
	185 Call Dictionary`2<Byte, Object>..ctor, X0
	186 Move X2, [X19+168]
	187 Compare X2, 0
	188 JumpIfEqual {197}
	189 Compare X21, 0
	190 JumpIfEqual {221}
	191 Move X8, 0xC00000
	192 Move X8, [X8+1336]
	193 Move X0, X21
	194 Move W1, W31
	195 Move X3, [X8]
	196 Call Dictionary`2<Byte, Object>.Add, X0, X1, X2
	197 Compare X23, 0
	198 JumpIfNotEqual {235}
	199 Move X0, [X19+24]
	200 Compare X0, 0
	201 JumpIfEqual {221}
	202 Move X8, [X0]
	203 Move W3, 1
	204 Move X1, X20
	205 Move X2, X21
	206 Move X9, [X8+408]
	207 Move X4, [X8+416]
	208 NotImplemented "Instruction BLR not yet implemented."
	209 Move X0, X20
	210 Move X20, [X31+48]
	211 Move X19, [X31+56]
	212 Move X22, [X31+32]
	213 Move X21, [X31+40]
	214 Move X24, [X31+16]
	215 Move X23, [X31+24]
	216 Move X1, X31
	217 Move X30, [X31+64]
	218 Move X25, [X31+72]
	219 Call StreamBuffer.ToArray, X0
	220 Return X0
	221 Call 0x1C17F20
	222 Call 0x1C17F28
	223 Move X0, 0xBF7000
	224 Move X0, [X0+2000]
	225 Call 0x1C17D08
	226 Call 0x1C17F10
	227 Move X19, X0
	228 Move X0, 0xC37000
	229 Move X0, [X0+3192]
	230 Call 0x1C17D08
	231 Move X1, X0
	232 Move X0, X19
	233 Move X2, X31
	234 Call Exception..ctor, X0, X1
	235 Move X0, 0xC00000
	236 Move X0, [X0+1880]
	237 Call 0x1C17D08
	238 Call 0x1C17F10
	239 Move X19, X0
	240 Move X0, 0xC37000
	241 Move X0, [X0+3200]
	242 Call 0x1C17D08
	243 Move X1, X0
	244 Move X0, X19
	245 Move X2, X31
	246 Call NotImplementedException..ctor, X0, X1
	247 Move X0, 0xC37000
	248 Move X0, [X0+3208]
	249 Call 0x1C17D08
	250 Move X1, X0
	251 Move X0, X19
	252 Call 0x1C17DEC
	253 Move X19, [X19+24]
	254 Move X0, X19
	255 Call 0x19913C0
	256 Move X8, [X19]
	257 Move X0, X19
	258 Move X9, [X8+392]
	259 Move X1, [X8+400]
	260 NotImplemented "Instruction BLR not yet implemented."
	261 Move X19, X0
	262 Call 0x19913C0
	263 Move W1, 1
	264 Move X0, X19
	265 Call 0x1BC0188
	266 Move X1, X31
	267 Call Byte.ToString, X0
	268 Move X19, X0
	269 Move X0, 0xC37000
	270 Move X0, [X0+3216]
	271 Call 0x1C17D08
	272 Move X1, X19
	273 Move X2, X31
	274 Call String.Concat, X0, X1
	275 Move X19, X0
	276 Move X0, 0xBF7000
	277 Move X0, [X0+2000]
	278 Call 0x1C17D08
	279 Call 0x1C17F10
	280 Move X1, X19
	281 Move X2, X31
	282 Move X20, X0
	283 Call Exception..ctor, X0, X1
	284 Move X0, 0xC37000
	285 Move X0, [X0+3208]
	286 Call 0x1C17D08
	287 Move X1, X0
	288 Move X0, X20
	289 Call 0x1C17DEC

Method: System.String PrepareWebSocketUrl(System.String serverAddress, System.String appId, System.Object photonToken)

Disassembly:
	0x034FDDF0 CBZ X0, 0x34FE254
	0x034FDDF4 LDR X8, [X0]
	0x034FDDF8 LDR X9, [X8 + 0x268]
	0x034FDDFC LDR X2, [X8 + 0x270]
	0x034FDE00 MOV X1, X20
	0x034FDE04 BLR X9
	0x034FDE08 MOV X1, X0
	0x034FDE0C LDR X0, [X24]
	0x034FDE10 CBZ X0, 0x34FE25C
	0x034FDE14 MOV X2, X31
	0x034FDE18 BL 0x3503C60
	0x034FDE1C B 0x34FE228
	0x034FDE20 LDR X0, [X19 + 0x18]
	0x034FDE24 CBZ X0, 0x34FE258
	0x034FDE28 LDR X8, [X0]
	0x034FDE2C LDR X9, [X8 + 0x258]
	0x034FDE30 LDR X3, [X8 + 0x260]
	0x034FDE34 MOV X1, X20
	0x034FDE38 MOV W2, W31
	0x034FDE3C BLR X9
	0x034FDE40 MOV X20, X0
	0x034FDE44 LDR X0, [X24]
	0x034FDE48 CBZ X0, 0x34FE620
	0x034FDE4C MOV X1, X31
	0x034FDE50 BL 0x350257C
	0x034FDE54 TBZ X0, 0x0, 0x34FDFEC
	0x034FDE58 LDR X8, [X24]
	0x034FDE5C CBZ X8, 0x34FE620
	0x034FDE60 LDR X0, [X8 + 0xB0]
	0x034FDE64 CBZ X0, 0x34FE620
	0x034FDE68 LDR W1, [X19 + 0x48]
	0x034FDE6C MOV X2, X31
	0x034FDE70 BL 0x35241DC
	0x034FDE74 LDR X0, [X19 + 0xC0]
	0x034FDE78 CBZ X0, 0x34FE620
	0x034FDE7C MOV X1, X31
	0x034FDE80 BL 0x364C19C
	0x034FDE84 MOV X21, X0
	0x034FDE88 B 0x34FDFF0
	0x034FDE8C MOV W21, W31
	0x034FDE90 CBZ X20, 0x34FE620
	0x034FDE94 MOV X0, X20
	0x034FDE98 MOV X1, X31
	0x034FDE9C BL 0x351EB94
	0x034FDEA0 LDR X0, [X24]
	0x034FDEA4 CBZ X0, 0x34FE620
	0x034FDEA8 MOV X1, X31
	0x034FDEAC BL 0x350257C
	0x034FDEB0 TBZ X0, 0x0, 0x34FE228
	0x034FDEB4 LDR X8, [X24]
	0x034FDEB8 CBZ X8, 0x34FE620
	0x034FDEBC LDR X0, [X19 + 0xC0]
	0x034FDEC0 CBZ X0, 0x34FE620
	0x034FDEC4 LDR X19, [X8 + 0xB0]
	0x034FDEC8 MOV X1, X31
	0x034FDECC BL 0x364C19C
	0x034FDED0 CBZ X19, 0x34FE620
	0x034FDED4 SUB W1, W0, W21
	0x034FDED8 MOV X0, X19
	0x034FDEDC MOV X2, X31
	0x034FDEE0 BL 0x3524248
	0x034FDEE4 B 0x34FE228
	0x034FDEE8 MOV W20, W31
	0x034FDEEC LDR X0, [X24]
	0x034FDEF0 CBZ X0, 0x34FE620
	0x034FDEF4 MOV X1, X31
	0x034FDEF8 BL 0x350257C
	0x034FDEFC TBZ X0, 0x0, 0x34FE228
	0x034FDF00 LDR X8, [X24]
	0x034FDF04 CBZ X8, 0x34FE620
	0x034FDF08 LDR X0, [X19 + 0xC0]
	0x034FDF0C CBZ X0, 0x34FE620
	0x034FDF10 LDR X19, [X8 + 0xB0]
	0x034FDF14 MOV X1, X31
	0x034FDF18 BL 0x364C19C
	0x034FDF1C CBZ X19, 0x34FE620
	0x034FDF20 SUB W1, W0, W20
	0x034FDF24 MOV X0, X19
	0x034FDF28 MOV X2, X31
	0x034FDF2C BL 0x3524234
	0x034FDF30 B 0x34FE228
	0x034FDF34 MOV W21, W31
	0x034FDF38 LDR X8, [X24]
	0x034FDF3C CBZ X8, 0x34FE620
	0x034FDF40 LDR X22, [X8 + 0x48]
	0x034FDF44 CBZ X22, 0x34FE620
	0x034FDF48 ADRP X10, 0xBFE000
	0x034FDF4C LDR X8, [X22]
	0x034FDF50 LDR X10, [X10 + 0xBC8]
	0x034FDF54 LDRH W9, [X8 + 0x12E]
	0x034FDF58 LDR X1, [X10]
	0x034FDF5C CBZ X9, 0x34FDF80
	0x034FDF60 LDR X10, [X8 + 0xB0]
	0x034FDF64 ADD X10, X10, 0x8
	0x034FDF68 LDUR X11, [X10 - 0x8]
	0x034FDF6C CMP X11, X1
	0x034FDF70 B.EQ 0x34FE0D4
	0x034FDF74 SUBS X9, X9, 0x1
	0x034FDF78 ADD X10, X10, 0x10
	0x034FDF7C B.NE 0x34FDF68
	0x034FDF80 MOVZ W2, 0x1
	0x034FDF84 MOV X0, X22
	0x034FDF88 BL 0x1C5C788
	0x034FDF8C B 0x34FE0E4
	0x034FDF90 MOV W21, W31
	0x034FDF94 LDR X8, [X24]
	0x034FDF98 CBZ X8, 0x34FE620
	0x034FDF9C LDR X22, [X8 + 0x48]
	0x034FDFA0 CBZ X22, 0x34FE620

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X22, 0xEE3000
	011 Move X24, 0xBF7000
	012 Move W8, [X22+2677]
	013 Move X24, [X24+2288]
	014 Move X19, X3
	015 Move X21, X2
	016 Move X23, X1
	017 Move X20, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {42}
	022 Move X0, 0xBF8000
	023 Move X0, [X0+2520]
	024 Call 0x1C17CF4
	025 Move X0, 0xBF7000
	026 Move X0, [X0+2288]
	027 Call 0x1C17CF4
	028 Move X0, 0xC37000
	029 Move X0, [X0+3224]
	030 Call 0x1C17CF4
	031 Move X0, 0xC37000
	032 Move X0, [X0+2736]
	033 Call 0x1C17CF4
	034 Move X0, 0xC37000
	035 Move X0, [X0+3232]
	036 Call 0x1C17CF4
	037 Move X0, 0xC37000
	038 Move X0, [X0+3240]
	039 Call 0x1C17CF4
	040 Move W8, 1
	041 Move [X22+2677], W8
	042 Move X0, [X24]
	043 Call 0x1C17F10
	044 Move W1, 1024
	045 Move X2, X31
	046 Move X22, X0
	047 Call StringBuilder..ctor, X0, X1
	048 Compare X22, 0
	049 JumpIfEqual {129}
	050 Move X0, X22
	051 Move X1, X23
	052 Move X2, X31
	053 Call StringBuilder.Append, X0, X1
	054 Move X0, [X20+16]
	055 Compare X0, 0
	056 JumpIfEqual {129}
	057 Move X1, X31
	058 Call PhotonPeer.get_ClientVersion, X0
	059 Move X8, [X20+16]
	060 Compare X8, 0
	061 JumpIfEqual {129}
	062 Move X24, 0xBF8000
	063 Move X25, 0xC37000
	064 Move X24, [X24+2520]
	065 Move X25, [X25+3232]
	066 Move X23, X0
	067 Move X0, X8
	068 Move X1, X31
	069 Call PhotonPeer.get_ClientSdkIdShifted, X0
	070 Move X8, [X24]
	071 Move [X31+12], W0
	072 Add X1, X31, 12
	073 Move X0, X8
	074 Call 0x1C17E04
	075 Move X1, [X25]
	076 Move X3, X0
	077 Move X0, X22
	078 Move X2, X23
	079 Move X4, X31
	080 Call StringBuilder.AppendFormat, X0, X1, X2, X3
	081 Move X8, [X20+16]
	082 Compare X8, 0
	083 JumpIfEqual {129}
	084 Move W8, [X8+36]
	085 Compare W8, 0
	086 JumpIfNotEqual {94}
	087 Move X8, 0xC37000
	088 Move X8, [X8+3224]
	089 Move X0, X22
	090 Move X2, X21
	091 Move X3, X31
	092 Move X1, [X8]
	093 Call StringBuilder.AppendFormat, X0, X1, X2
	094 Move X8, [X20+40]
	095 Compare X8, 0
	096 JumpIfEqual {106}
	097 Move W8, [X8+68]
	098 Compare W8, 0
	099 JumpIfEqual {106}
	100 Move X8, 0xC37000
	101 Move X8, [X8+2736]
	102 Move X0, X22
	103 Move X2, X31
	104 Move X1, [X8]
	105 Call StringBuilder.Append, X0, X1
	106 Compare X19, 0
	107 JumpIfEqual {114}
	108 Move X8, 0xC37000
	109 Move X8, [X8+3240]
	110 Move X0, X22
	111 Move X2, X31
	112 Move X1, [X8]
	113 Call StringBuilder.Append, X0, X1
	114 Move X8, [X22]
	115 Move X0, X22
	116 Move X9, [X8+360]
	117 Move X1, [X8+368]
	118 NotImplemented "Instruction BLR not yet implemented."
	119 Move X20, [X31+64]
	120 Move X19, [X31+72]
	121 Move X22, [X31+48]
	122 Move X21, [X31+56]
	123 Move X24, [X31+32]
	124 Move X23, [X31+40]
	125 Move X30, [X31+16]
	126 Move X25, [X31+24]
	127 Add X31, X31, 80
	128 Return X0
	129 Call 0x1C17F20

Method: System.Void OnConnect()

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Void InitCallback()

Disassembly:
	0x034FDFA4 ADRP X10, 0xBFE000
	0x034FDFA8 LDR X8, [X22]
	0x034FDFAC LDR X10, [X10 + 0xBC8]
	0x034FDFB0 LDRH W9, [X8 + 0x12E]
	0x034FDFB4 LDR X1, [X10]
	0x034FDFB8 CBZ X9, 0x34FDFDC
	0x034FDFBC LDR X10, [X8 + 0xB0]
	0x034FDFC0 ADD X10, X10, 0x8
	0x034FDFC4 LDUR X11, [X10 - 0x8]
	0x034FDFC8 CMP X11, X1
	0x034FDFCC B.EQ 0x34FE118
	0x034FDFD0 SUBS X9, X9, 0x1
	0x034FDFD4 ADD X10, X10, 0x10
	0x034FDFD8 B.NE 0x34FDFC4
	0x034FDFDC MOVZ W2, 0x3
	0x034FDFE0 MOV X0, X22
	0x034FDFE4 BL 0x1C5C788
	0x034FDFE8 B 0x34FE128
	0x034FDFEC MOV W21, W31
	0x034FDFF0 CBZ X20, 0x34FE620
	0x034FDFF4 ADRP X22, 0xC36000
	0x034FDFF8 LDR X22, [X22 + 0xC68]
	0x034FDFFC LDRB W23, [X20 + 0x10]
	0x034FE000 LDR X0, [X22]
	0x034FE004 LDR W8, [X0 + 0xE0]
	0x034FE008 CBNZ W8, 0x34FE014
	0x034FE00C BL 0x1C16DFC
	0x034FE010 LDR X0, [X22]
	0x034FE014 LDR X8, [X0 + 0xB8]
	0x034FE018 LDRB W9, [X8 + 0x3]
	0x034FE01C CMP W23, W9
	0x034FE020 B.NE 0x34FE034
	0x034FE024 MOV X0, X19
	0x034FE028 MOV X1, X20
	0x034FE02C BL 0x34FE6B0
	0x034FE030 B 0x34FE1DC
	0x034FE034 LDR W9, [X0 + 0xE0]
	0x034FE038 LDRB W23, [X20 + 0x10]
	0x034FE03C CBNZ W9, 0x34FE04C
	0x034FE040 BL 0x1C16DFC
	0x034FE044 LDR X8, [X22]
	0x034FE048 LDR X8, [X8 + 0xB8]
	0x034FE04C LDRB W8, [X8 + 0x4]
	0x034FE050 CMP W23, W8
	0x034FE054 B.NE 0x34FE1A4
	0x034FE058 LDRB W8, [X19 + 0x40]
	0x034FE05C CMP W8, 0x1
	0x034FE060 B.NE 0x34FE08C
	0x034FE064 LDRB W8, [X19 + 0x20]
	0x034FE068 AND W8, W8, 0xFE
	0x034FE06C CMP W8, 0x4
	0x034FE070 B.NE 0x34FE08C
	0x034FE074 LDR X8, [X24]
	0x034FE078 CBZ X8, 0x34FE620
	0x034FE07C MOVZ W9, 0x1
	0x034FE080 MOV X0, X19

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xEE3000
	005 Move W8, [X20+2678]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xBFF000
	012 Move X0, [X0+3016]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2678], W8
	016 Move W8, [X19+64]
	017 NotImplemented "Instruction CMP not yet implemented."
	018 Move W8, 3
	019 Move [X19+64], W8
	020 Move X8, [X19]
	021 Move W9, 1
	022 Move [X19+220], W9
	023 Move X0, X19
	024 Move X9, [X8+520]
	025 Move X1, [X8+528]
	026 NotImplemented "Instruction BLR not yet implemented."
	027 Move X8, [X19+16]
	028 Compare X8, 0
	029 JumpIfEqual {61}
	030 Move X19, [X8+72]
	031 Compare X19, 0
	032 JumpIfEqual {61}
	033 Move X10, 0xBFE000
	034 Move X8, [X19]
	035 Move X10, [X10+3016]
	036 NotImplemented "Instruction LDRH not yet implemented."
	037 Move X1, [X10]
	038 Compare X9, 0
	039 JumpIfEqual {46}
	040 Move X10, [X8+176]
	041 Add X10, X10, 8
	042 NotImplemented "Instruction LDUR not yet implemented."
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Subtract X9, X9, 1
	045 Add X10, X10, 16
	046 Move W2, 2
	047 Move X0, X19
	048 Call 0x1C5D788
	049 Move W9, [X10]
	050 Add W9, W9, 2
	051 Add X8, X8, W9
	052 Add X0, X8, 312
	053 Move X3, [X0]
	054 Move X2, [X0+8]
	055 Move X0, X19
	056 Move X20, [X31+16]
	057 Move X19, [X31+24]
	058 Move W1, 1024
	059 Move X30, [X31+32]
	060 CallNoReturn X3
	061 Call 0x1C17F20

Method: System.Void Disconnect()

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Void StopConnection()

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Void FetchServerTimestamp()

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Boolean IsTransportEncrypted()

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Boolean EnqueuePhotonMessage(ExitGames.Client.Photon.StreamBuffer opBytes, ExitGames.Client.Photon.SendOptions sendParams)

Disassembly:
	

ISIL:
No ISIL was generated
Method: ExitGames.Client.Photon.StreamBuffer SerializeOperationToMessage(System.Byte opCode, System.Collections.Generic.Dictionary`2<System.Byte, System.Object> parameters, ExitGames.Client.Photon.EgMessageType messageType, System.Boolean encrypt)

Disassembly:
	0x034FE084 STRB W9, [X8 + 0x7C]
	0x034FE088 BL 0x34FCFA4
	0x034FE08C ADRP X8, 0xC35000
	0x034FE090 LDR X8, [X8 + 0xCB8]
	0x034FE094 LDR X9, [X19]
	0x034FE098 LDR X8, [X8]
	0x034FE09C LDRB W11, [X9 + 0x130]
	0x034FE0A0 LDRB W10, [X8 + 0x130]
	0x034FE0A4 CMP W11, W10
	0x034FE0A8 B.CC 0x34FE1DC
	0x034FE0AC LDR X9, [X9 + 0xC8]
	0x034FE0B0 ADD X9, X9, X10, 0x3, LSL
	0x034FE0B4 LDUR X9, [X9 - 0x8]
	0x034FE0B8 CMP X9, X8
	0x034FE0BC B.NE 0x34FE1DC
	0x034FE0C0 MOV X0, X19
	0x034FE0C4 MOV X1, X20
	0x034FE0C8 MOV X2, X31
	0x034FE0CC BL 0x3523E58
	0x034FE0D0 B 0x34FE1DC
	0x034FE0D4 LDR W9, [X10]
	0x034FE0D8 ADD W9, W9, 0x1
	0x034FE0DC ADD X8, X8, W9, 0x4, SXTW
	0x034FE0E0 ADD X0, X8, 0x138
	0x034FE0E4 LDP X8, X2, [X0]
	0x034FE0E8 MOV X0, X22
	0x034FE0EC MOV X1, X20
	0x034FE0F0 BLR X8
	0x034FE0F4 LDR X0, [X24]
	0x034FE0F8 CBZ X0, 0x34FE620
	0x034FE0FC MOV X1, X31
	0x034FE100 BL 0x350257C
	0x034FE104 TBZ X0, 0x0, 0x34FE228
	0x034FE108 LDR X8, [X24]
	0x034FE10C CBZ X8, 0x34FE620
	0x034FE110 CBNZ X20, 0x34FE1F8
	0x034FE114 B 0x34FE620
	0x034FE118 LDR W9, [X10]
	0x034FE11C ADD W9, W9, 0x3
	0x034FE120 ADD X8, X8, W9, 0x4, SXTW
	0x034FE124 ADD X0, X8, 0x138
	0x034FE128 LDP X8, X2, [X0]
	0x034FE12C MOV X0, X22
	0x034FE130 MOV X1, X20
	0x034FE134 BLR X8
	0x034FE138 LDR X0, [X24]
	0x034FE13C CBZ X0, 0x34FE620
	0x034FE140 MOV X1, X31
	0x034FE144 BL 0x350257C
	0x034FE148 TBZ X0, 0x0, 0x34FE188
	0x034FE14C LDR X8, [X24]
	0x034FE150 CBZ X8, 0x34FE620
	0x034FE154 CBZ X20, 0x34FE620
	0x034FE158 LDR X0, [X19 + 0xC0]
	0x034FE15C CBZ X0, 0x34FE620
	0x034FE160 LDR X22, [X8 + 0xB0]
	0x034FE164 LDRB W23, [X20 + 0x10]
	0x034FE168 MOV X1, X31
	0x034FE16C BL 0x364C19C
	0x034FE170 CBZ X22, 0x34FE620
	0x034FE174 SUB W2, W0, W21
	0x034FE178 MOV X0, X22
	0x034FE17C MOV W1, W23
	0x034FE180 MOV X3, X31
	0x034FE184 BL 0x352421C
	0x034FE188 LDR X0, [X24]
	0x034FE18C CBZ X0, 0x34FE620
	0x034FE190 MOV X1, X31
	0x034FE194 BL 0x35018EC
	0x034FE198 TBZ X0, 0x0, 0x34FE228
	0x034FE19C STR X20, [X19 + 0xB8]
	0x034FE1A0 B 0x34FE228
	0x034FE1A4 MOV X0, X20
	0x034FE1A8 MOV X1, X31
	0x034FE1AC BL 0x3505858
	0x034FE1B0 ADRP X8, 0xC35000
	0x034FE1B4 LDR X8, [X8 + 0xCD8]
	0x034FE1B8 MOV X1, X0
	0x034FE1BC MOV X2, X31
	0x034FE1C0 LDR X8, [X8]
	0x034FE1C4 MOV X0, X8
	0x034FE1C8 BL 0x321B938
	0x034FE1CC MOV X2, X0
	0x034FE1D0 MOVZ W1, 0x1
	0x034FE1D4 MOV X0, X19
	0x034FE1D8 BL 0x34F116C
	0x034FE1DC LDR X0, [X24]
	0x034FE1E0 CBZ X0, 0x34FE620
	0x034FE1E4 MOV X1, X31
	0x034FE1E8 BL 0x350257C
	0x034FE1EC TBZ X0, 0x0, 0x34FE228
	0x034FE1F0 LDR X8, [X24]
	0x034FE1F4 CBZ X8, 0x34FE620
	0x034FE1F8 LDR X0, [X19 + 0xC0]
	0x034FE1FC CBZ X0, 0x34FE620
	0x034FE200 LDR X19, [X8 + 0xB0]
	0x034FE204 LDRB W20, [X20 + 0x10]
	0x034FE208 MOV X1, X31
	0x034FE20C BL 0x364C19C
	0x034FE210 CBZ X19, 0x34FE620
	0x034FE214 SUB W2, W0, W21
	0x034FE218 MOV X0, X19
	0x034FE21C MOV W1, W20
	0x034FE220 MOV X3, X31
	0x034FE224 BL 0x3524204
	0x034FE228 MOVZ W20, 0x1
	0x034FE22C MOV W0, W20
	0x034FE230 LDP X20, X19, [X31 + 0x50]
	0x034FE234 LDP X22, X21, [X31 + 0x40]
	0x034FE238 LDP X24, X23, [X31 + 0x30]
	0x034FE23C LDR X30, [X31 + 0x20]
	0x034FE240 ADD X31, X31, 0x60
	0x034FE244 RET
	0x034FE248 BL 0x1C16F20
	0x034FE24C BL 0x1C16F20
	0x034FE250 BL 0x1C16F20
	0x034FE254 BL 0x1C16F20
	0x034FE258 BL 0x1C16F20
	0x034FE25C BL 0x1C16F20
	0x034FE260 B 0x34FE270
	0x034FE264 B 0x34FE438
	0x034FE268 B 0x34FE33C
	0x034FE26C B 0x34FE3B8
	0x034FE270 MOV X20, X0
	0x034FE274 CMP W1, 0x1
	0x034FE278 B.NE 0x34FE6A4
	0x034FE27C MOV X0, X20
	0x034FE280 BL 0x3EB1AD0
	0x034FE284 MOV X20, X0
	0x034FE288 ADRP X0, 0xBF5000
	0x034FE28C LDR X0, [X0 + 0x7D0]
	0x034FE290 BL 0x1C16D08
	0x034FE294 LDR X8, [X20]
	0x034FE298 LDR X1, [X8]
	0x034FE29C BL 0x1C17270
	0x034FE2A0 TBZ X0, 0x0, 0x34FE308
	0x034FE2A4 LDR X21, [X20]
	0x034FE2A8 LDRSW X8, [X31 + 0x10]
	0x034FE2AC ADD X9, X31, 0x8
	0x034FE2B0 STR X21, [X9, X8, LSL #3]
	0x034FE2B4 BL 0x3EB1AE0
	0x034FE2B8 ADRP X0, 0xC35000
	0x034FE2BC LDR X0, [X0 + 0xCE0]
	0x034FE2C0 BL 0x1C16D08
	0x034FE2C4 MOV X20, X0
	0x034FE2C8 CBZ X21, 0x34FE2E4
	0x034FE2CC LDR X8, [X21]
	0x034FE2D0 MOV X0, X21
	0x034FE2D4 LDP X9, X1, [X8 + 0x168]
	0x034FE2D8 BLR X9
	0x034FE2DC MOV X1, X0
	0x034FE2E0 B 0x34FE2E8
	0x034FE2E4 MOV X1, X31
	0x034FE2E8 MOV X0, X20
	0x034FE2EC MOV X2, X31
	0x034FE2F0 BL 0x321B938
	0x034FE2F4 MOV X2, X0
	0x034FE2F8 MOVZ W1, 0x1
	0x034FE2FC MOV X0, X19
	0x034FE300 BL 0x34F116C
	0x034FE304 B 0x34FDB6C
	0x034FE308 MOVZ W0, 0x8
	0x034FE30C BL 0x3EB1AF0

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X22, 0xEE2000
	011 Move W8, [X22+2679]
	012 Move W20, W4
	013 Move W21, W3
	014 Move X23, X2
	015 Move W24, W1
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {29}
	021 Move X0, 0xC36000
	022 Move X0, [X0+3248]
	023 Call 0x1C17CF4
	024 Move X0, 0xC36000
	025 Move X0, [X0+1912]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X22+2679], W8
	029 Move X22, 0xC36000
	030 Move X22, [X22+1912]
	031 Move TEMP, X20
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfNotEqual {42}
	035 Move X8, [X19]
	036 Move X0, X19
	037 Move X9, [X8+536]
	038 Move X1, [X8+544]
	039 NotImplemented "Instruction BLR not yet implemented."
	040 NotImplemented "Instruction ORN not yet implemented."
	041 And W26, W8, 1
	042 Move W26, W31
	043 Move X0, [X22]
	044 Move W8, [X0+224]
	045 Compare W8, 0
	046 JumpIfNotEqual {48}
	047 Call 0x1C17DFC
	048 Call PeerBase.MessageBufferPoolGet
	049 Compare X0, 0
	050 JumpIfEqual {193}
	051 Move X1, X31
	052 Move X2, X31
	053 Move X22, X0
	054 Call StreamBuffer.SetLength, X0, X1
	055 Compare W26, 0
	056 JumpIfNotEqual {65}
	057 Move X1, [X19+232]
	058 Compare X1, 0
	059 JumpIfEqual {193}
	060 Move W3, [X1+24]
	061 Move X0, X22
	062 Move W2, W31
	063 Move X4, X31
	064 Call StreamBuffer.Write, X0, X1, X2, X3
	065 Move X0, [X19+24]
	066 Compare X0, 0
	067 JumpIfEqual {193}
	068 Move X8, [X0]
	069 Move X1, X22
	070 Move W2, W24
	071 Move X3, X23
	072 Move X9, [X8+472]
	073 Move X5, [X8+480]
	074 Move W4, W31
	075 NotImplemented "Instruction BLR not yet implemented."
	076 Compare W26, 0
	077 JumpIfEqual {137}
	078 Move X23, [X19+240]
	079 Move X0, X22
	080 Move X1, X31
	081 Call StreamBuffer.GetBuffer, X0
	082 Move X24, X0
	083 Move X0, X22
	084 Move X1, X31
	085 Call StreamBuffer.get_Length, X0
	086 Compare X23, 0
	087 JumpIfEqual {193}
	088 Move X10, 0xC36000
	089 Move X8, [X23]
	090 Move X10, [X10+3248]
	091 Move W25, W0
	092 NotImplemented "Instruction LDRH not yet implemented."
	093 Move X1, [X10]
	094 Compare X9, 0
	095 JumpIfEqual {102}
	096 Move X10, [X8+176]
	097 Add X10, X10, 8
	098 NotImplemented "Instruction LDUR not yet implemented."
	099 NotImplemented "Instruction CMP not yet implemented."
	100 Subtract X9, X9, 1
	101 Add X10, X10, 16
	102 Move W2, 4
	103 Move X0, X23
	104 Call 0x1C5D788
	105 Move W9, [X10]
	106 Add W9, W9, 4
	107 Add X8, X8, W9
	108 Add X0, X8, 312
	109 Move X8, [X0]
	110 Move X4, [X0+8]
	111 Move X0, X23
	112 Move X1, X24
	113 Move W2, W31
	114 Move W3, W25
	115 NotImplemented "Instruction BLR not yet implemented."
	116 Move X23, X0
	117 Move X0, X22
	118 Move X1, X31
	119 Move X2, X31
	120 Call StreamBuffer.SetLength, X0, X1
	121 Move X1, [X19+232]
	122 Compare X1, 0
	123 JumpIfEqual {193}
	124 Move W3, [X1+24]
	125 Move X0, X22
	126 Move W2, W31
	127 Move X4, X31
	128 Call StreamBuffer.Write, X0, X1, X2, X3
	129 Compare X23, 0
	130 JumpIfEqual {193}
	131 Move W3, [X23+24]
	132 Move X0, X22
	133 Move X1, X23
	134 Move W2, W31
	135 Move X4, X31
	136 Call StreamBuffer.Write, X0, X1, X2, X3
	137 Move X0, X22
	138 Move X1, X31
	139 Call StreamBuffer.GetBuffer, X0
	140 And W8, W21, 255
	141 NotImplemented "Instruction CMP not yet implemented."
	142 Move X8, [X19+232]
	143 Compare X8, 0
	144 JumpIfEqual {193}
	145 Compare X0, 0
	146 JumpIfEqual {193}
	147 Move W8, [X8+24]
	148 Move W9, [X0+24]
	149 Subtract W8, W8, 1
	150 NotImplemented "Instruction CMP not yet implemented."
	151 Add X8, X0, W8
	152 Move [X8+32], W21
	153 NotImplemented "Instruction CMP not yet implemented."
	154 NotImplemented "Instruction CSET not yet implemented."
	155 Move TEMP, X20
	156 And TEMP, TEMP, 1
	157 Compare TEMP, 1
	158 JumpIfNotEqual {167}
	159 Move TEMP, X8
	160 And TEMP, TEMP, 1
	161 Compare TEMP, 1
	162 JumpIfEqual {167}
	163 Move X8, [X19+16]
	164 Compare X8, 0
	165 JumpIfEqual {193}
	166 Move W26, [X8+107]
	167 Compare W26, 0
	168 JumpIfEqual {182}
	169 Move X8, [X19+232]
	170 Compare X8, 0
	171 JumpIfEqual {193}
	172 Compare X0, 0
	173 JumpIfEqual {193}
	174 Move W8, [X8+24]
	175 Move W9, [X0+24]
	176 Subtract W8, W8, 1
	177 NotImplemented "Instruction CMP not yet implemented."
	178 Add X8, X0, W8
	179 Move W9, [X8+32]
	180 Or W9, W9, 128
	181 Move [X8+32], W9
	182 Move X0, X22
	183 Move X20, [X31+64]
	184 Move X19, [X31+72]
	185 Move X22, [X31+48]
	186 Move X21, [X31+56]
	187 Move X24, [X31+32]
	188 Move X23, [X31+40]
	189 Move X26, [X31+16]
	190 Move X25, [X31+24]
	191 Move X30, [X31+80]
	192 Return X0
	193 Call 0x1C17F20
	194 Call 0x1C17F28

Method: ExitGames.Client.Photon.StreamBuffer SerializeOperationToMessage(System.Byte opCode, ExitGames.Client.Photon.ParameterDictionary parameters, ExitGames.Client.Photon.EgMessageType messageType, System.Boolean encrypt)

Disassembly:
	0x034FE310 LDR X8, [X20]
	0x034FE314 STR X8, [X0]
	0x034FE318 ADRP X1, 0x9B6000
	0x034FE31C ADD X1, X1, 0xE58
	0x034FE320 MOV X2, X31
	0x034FE324 BL 0x3EB1B00
	0x034FE328 B 0x34FE69C
	0x034FE32C MOV X20, X0
	0x034FE330 BL 0x3EB1AE0
	0x034FE334 B 0x34FE6A4
	0x034FE338 B 0x34FE438
	0x034FE33C MOV X20, X0
	0x034FE340 CMP W1, 0x1
	0x034FE344 B.NE 0x34FE6A4
	0x034FE348 MOV X0, X20
	0x034FE34C BL 0x3EB1AD0
	0x034FE350 MOV X20, X0
	0x034FE354 ADRP X0, 0xBF5000
	0x034FE358 LDR X0, [X0 + 0x7D0]
	0x034FE35C BL 0x1C16D08
	0x034FE360 LDR X8, [X20]
	0x034FE364 LDR X1, [X8]
	0x034FE368 BL 0x1C17270
	0x034FE36C TBZ X0, 0x0, 0x34FE388
	0x034FE370 LDR X21, [X20]
	0x034FE374 STR X21, [X31 + 0x8]
	0x034FE378 BL 0x3EB1AE0
	0x034FE37C ADRP X0, 0xC35000
	0x034FE380 LDR X0, [X0 + 0xCE8]
	0x034FE384 B 0x34FE480
	0x034FE388 MOVZ W0, 0x8
	0x034FE38C BL 0x3EB1AF0
	0x034FE390 LDR X8, [X20]
	0x034FE394 STR X8, [X0]
	0x034FE398 ADRP X1, 0x9B6000
	0x034FE39C ADD X1, X1, 0xE58
	0x034FE3A0 MOV X2, X31
	0x034FE3A4 BL 0x3EB1B00
	0x034FE3A8 B 0x34FE69C
	0x034FE3AC MOV X20, X0
	0x034FE3B0 BL 0x3EB1AE0
	0x034FE3B4 B 0x34FE6A4
	0x034FE3B8 MOV X20, X0
	0x034FE3BC CMP W1, 0x1
	0x034FE3C0 B.NE 0x34FE6A4
	0x034FE3C4 MOV X0, X20
	0x034FE3C8 BL 0x3EB1AD0
	0x034FE3CC MOV X20, X0
	0x034FE3D0 ADRP X0, 0xBF5000
	0x034FE3D4 LDR X0, [X0 + 0x7D0]
	0x034FE3D8 BL 0x1C16D08
	0x034FE3DC LDR X8, [X20]
	0x034FE3E0 LDR X1, [X8]
	0x034FE3E4 BL 0x1C17270
	0x034FE3E8 TBZ X0, 0x0, 0x34FE404
	0x034FE3EC LDR X21, [X20]
	0x034FE3F0 STR X21, [X31 + 0x8]
	0x034FE3F4 BL 0x3EB1AE0
	0x034FE3F8 ADRP X0, 0xC35000
	0x034FE3FC LDR X0, [X0 + 0xCF0]
	0x034FE400 B 0x34FE480
	0x034FE404 MOVZ W0, 0x8
	0x034FE408 BL 0x3EB1AF0
	0x034FE40C LDR X8, [X20]
	0x034FE410 STR X8, [X0]
	0x034FE414 ADRP X1, 0x9B6000
	0x034FE418 ADD X1, X1, 0xE58
	0x034FE41C MOV X2, X31
	0x034FE420 BL 0x3EB1B00
	0x034FE424 B 0x34FE69C
	0x034FE428 MOV X20, X0
	0x034FE42C BL 0x3EB1AE0
	0x034FE430 B 0x34FE6A4
	0x034FE434 B 0x34FE50C
	0x034FE438 MOV X20, X0
	0x034FE43C CMP W1, 0x1
	0x034FE440 B.NE 0x34FE6A4
	0x034FE444 MOV X0, X20
	0x034FE448 BL 0x3EB1AD0
	0x034FE44C MOV X20, X0
	0x034FE450 ADRP X0, 0xBF5000
	0x034FE454 LDR X0, [X0 + 0x7D0]
	0x034FE458 BL 0x1C16D08
	0x034FE45C LDR X8, [X20]
	0x034FE460 LDR X1, [X8]
	0x034FE464 BL 0x1C17270
	0x034FE468 TBZ X0, 0x0, 0x34FE4D0
	0x034FE46C LDR X21, [X20]
	0x034FE470 STR X21, [X31 + 0x8]
	0x034FE474 BL 0x3EB1AE0
	0x034FE478 ADRP X0, 0xC35000
	0x034FE47C LDR X0, [X0 + 0xCF8]
	0x034FE480 BL 0x1C16D08
	0x034FE484 MOV X20, X0
	0x034FE488 CBZ X21, 0x34FE4A4
	0x034FE48C LDR X8, [X21]
	0x034FE490 MOV X0, X21
	0x034FE494 LDP X9, X1, [X8 + 0x168]
	0x034FE498 BLR X9
	0x034FE49C MOV X1, X0
	0x034FE4A0 B 0x34FE4A8
	0x034FE4A4 MOV X1, X31
	0x034FE4A8 MOV X0, X20
	0x034FE4AC MOV X2, X31
	0x034FE4B0 BL 0x321B938
	0x034FE4B4 MOV X2, X0
	0x034FE4B8 MOVZ W1, 0x1
	0x034FE4BC MOV X0, X19
	0x034FE4C0 BL 0x34F116C
	0x034FE4C4 MOV W20, W31
	0x034FE4C8 STR W31, [X31 + 0x10]
	0x034FE4CC B 0x34FE22C
	0x034FE4D0 MOVZ W0, 0x8
	0x034FE4D4 BL 0x3EB1AF0
	0x034FE4D8 LDR X8, [X20]
	0x034FE4DC STR X8, [X0]
	0x034FE4E0 ADRP X1, 0x9B6000
	0x034FE4E4 ADD X1, X1, 0xE58
	0x034FE4E8 MOV X2, X31
	0x034FE4EC BL 0x3EB1B00
	0x034FE4F0 B 0x34FE69C
	0x034FE4F4 MOV X20, X0
	0x034FE4F8 BL 0x3EB1AE0
	0x034FE4FC B 0x34FE6A4
	0x034FE500 B 0x34FE50C
	0x034FE504 B 0x34FE50C
	0x034FE508 B 0x34FE50C
	0x034FE50C MOV X20, X0
	0x034FE510 CMP W1, 0x1
	0x034FE514 B.NE 0x34FE6A4
	0x034FE518 MOV X0, X20
	0x034FE51C BL 0x3EB1AD0
	0x034FE520 MOV X20, X0
	0x034FE524 ADRP X0, 0xBF5000
	0x034FE528 LDR X0, [X0 + 0x7D0]
	0x034FE52C BL 0x1C16D08
	0x034FE530 LDR X8, [X20]
	0x034FE534 LDR X1, [X8]
	0x034FE538 BL 0x1C17270
	0x034FE53C TBZ X0, 0x0, 0x34FE67C
	0x034FE540 LDR X20, [X20]
	0x034FE544 LDRSW X8, [X31 + 0x10]
	0x034FE548 ADD X9, X31, 0x8
	0x034FE54C STR X20, [X9, X8, LSL #3]
	0x034FE550 ADD W8, W8, 0x1
	0x034FE554 STR W8, [X31 + 0x10]
	0x034FE558 BL 0x3EB1AE0
	0x034FE55C LDR X8, [X19 + 0x10]
	0x034FE560 CBZ X8, 0x34FE620
	0x034FE564 LDRB W9, [X8 + 0x40]
	0x034FE568 CBZ W9, 0x34FE644
	0x034FE56C LDR X19, [X8 + 0x48]
	0x034FE570 ADD X0, X31, 0x28
	0x034FE574 MOV X1, X31
	0x034FE578 BL 0x3319BB4
	0x034FE57C CBZ X20, 0x34FE620
	0x034FE580 LDR X8, [X20]
	0x034FE584 MOV X21, X0
	0x034FE588 MOV X0, X20
	0x034FE58C LDP X9, X1, [X8 + 0x168]
	0x034FE590 BLR X9
	0x034FE594 MOV X22, X0
	0x034FE598 ADRP X0, 0xC35000

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X22, 0xEE2000
	011 Move W8, [X22+2680]
	012 Move W20, W4
	013 Move W21, W3
	014 Move X23, X2
	015 Move W24, W1
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {29}
	021 Move X0, 0xC36000
	022 Move X0, [X0+3248]
	023 Call 0x1C17CF4
	024 Move X0, 0xC36000
	025 Move X0, [X0+1912]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X22+2680], W8
	029 Move X22, 0xC36000
	030 Move X22, [X22+1912]
	031 Move TEMP, X20
	032 And TEMP, TEMP, 1
	033 Compare TEMP, 1
	034 JumpIfNotEqual {42}
	035 Move X8, [X19]
	036 Move X0, X19
	037 Move X9, [X8+536]
	038 Move X1, [X8+544]
	039 NotImplemented "Instruction BLR not yet implemented."
	040 NotImplemented "Instruction ORN not yet implemented."
	041 And W26, W8, 1
	042 Move W26, W31
	043 Move X0, [X22]
	044 Move W8, [X0+224]
	045 Compare W8, 0
	046 JumpIfNotEqual {48}
	047 Call 0x1C17DFC
	048 Call PeerBase.MessageBufferPoolGet
	049 Compare X0, 0
	050 JumpIfEqual {193}
	051 Move X1, X31
	052 Move X2, X31
	053 Move X22, X0
	054 Call StreamBuffer.SetLength, X0, X1
	055 Compare W26, 0
	056 JumpIfNotEqual {65}
	057 Move X1, [X19+232]
	058 Compare X1, 0
	059 JumpIfEqual {193}
	060 Move W3, [X1+24]
	061 Move X0, X22
	062 Move W2, W31
	063 Move X4, X31
	064 Call StreamBuffer.Write, X0, X1, X2, X3
	065 Move X0, [X19+24]
	066 Compare X0, 0
	067 JumpIfEqual {193}
	068 Move X8, [X0]
	069 Move X1, X22
	070 Move W2, W24
	071 Move X3, X23
	072 Move X9, [X8+488]
	073 Move X5, [X8+496]
	074 Move W4, W31
	075 NotImplemented "Instruction BLR not yet implemented."
	076 Compare W26, 0
	077 JumpIfEqual {137}
	078 Move X23, [X19+240]
	079 Move X0, X22
	080 Move X1, X31
	081 Call StreamBuffer.GetBuffer, X0
	082 Move X24, X0
	083 Move X0, X22
	084 Move X1, X31
	085 Call StreamBuffer.get_Length, X0
	086 Compare X23, 0
	087 JumpIfEqual {193}
	088 Move X10, 0xC36000
	089 Move X8, [X23]
	090 Move X10, [X10+3248]
	091 Move W25, W0
	092 NotImplemented "Instruction LDRH not yet implemented."
	093 Move X1, [X10]
	094 Compare X9, 0
	095 JumpIfEqual {102}
	096 Move X10, [X8+176]
	097 Add X10, X10, 8
	098 NotImplemented "Instruction LDUR not yet implemented."
	099 NotImplemented "Instruction CMP not yet implemented."
	100 Subtract X9, X9, 1
	101 Add X10, X10, 16
	102 Move W2, 4
	103 Move X0, X23
	104 Call 0x1C5D788
	105 Move W9, [X10]
	106 Add W9, W9, 4
	107 Add X8, X8, W9
	108 Add X0, X8, 312
	109 Move X8, [X0]
	110 Move X4, [X0+8]
	111 Move X0, X23
	112 Move X1, X24
	113 Move W2, W31
	114 Move W3, W25
	115 NotImplemented "Instruction BLR not yet implemented."
	116 Move X23, X0
	117 Move X0, X22
	118 Move X1, X31
	119 Move X2, X31
	120 Call StreamBuffer.SetLength, X0, X1
	121 Move X1, [X19+232]
	122 Compare X1, 0
	123 JumpIfEqual {193}
	124 Move W3, [X1+24]
	125 Move X0, X22
	126 Move W2, W31
	127 Move X4, X31
	128 Call StreamBuffer.Write, X0, X1, X2, X3
	129 Compare X23, 0
	130 JumpIfEqual {193}
	131 Move W3, [X23+24]
	132 Move X0, X22
	133 Move X1, X23
	134 Move W2, W31
	135 Move X4, X31
	136 Call StreamBuffer.Write, X0, X1, X2, X3
	137 Move X0, X22
	138 Move X1, X31
	139 Call StreamBuffer.GetBuffer, X0
	140 And W8, W21, 255
	141 NotImplemented "Instruction CMP not yet implemented."
	142 Move X8, [X19+232]
	143 Compare X8, 0
	144 JumpIfEqual {193}
	145 Compare X0, 0
	146 JumpIfEqual {193}
	147 Move W8, [X8+24]
	148 Move W9, [X0+24]
	149 Subtract W8, W8, 1
	150 NotImplemented "Instruction CMP not yet implemented."
	151 Add X8, X0, W8
	152 Move [X8+32], W21
	153 NotImplemented "Instruction CMP not yet implemented."
	154 NotImplemented "Instruction CSET not yet implemented."
	155 Move TEMP, X20
	156 And TEMP, TEMP, 1
	157 Compare TEMP, 1
	158 JumpIfNotEqual {167}
	159 Move TEMP, X8
	160 And TEMP, TEMP, 1
	161 Compare TEMP, 1
	162 JumpIfEqual {167}
	163 Move X8, [X19+16]
	164 Compare X8, 0
	165 JumpIfEqual {193}
	166 Move W26, [X8+107]
	167 Compare W26, 0
	168 JumpIfEqual {182}
	169 Move X8, [X19+232]
	170 Compare X8, 0
	171 JumpIfEqual {193}
	172 Compare X0, 0
	173 JumpIfEqual {193}
	174 Move W8, [X8+24]
	175 Move W9, [X0+24]
	176 Subtract W8, W8, 1
	177 NotImplemented "Instruction CMP not yet implemented."
	178 Add X8, X0, W8
	179 Move W9, [X8+32]
	180 Or W9, W9, 128
	181 Move [X8+32], W9
	182 Move X0, X22
	183 Move X20, [X31+64]
	184 Move X19, [X31+72]
	185 Move X22, [X31+48]
	186 Move X21, [X31+56]
	187 Move X24, [X31+32]
	188 Move X23, [X31+40]
	189 Move X26, [X31+16]
	190 Move X25, [X31+24]
	191 Move X30, [X31+80]
	192 Return X0
	193 Call 0x1C17F20
	194 Call 0x1C17F28

Method: ExitGames.Client.Photon.StreamBuffer SerializeMessageToMessage(System.Object message, System.Boolean encrypt)

Disassembly:
	0x034FE59C LDR X0, [X0 + 0xD00]
	0x034FE5A0 BL 0x1C16D08
	0x034FE5A4 MOV X23, X0
	0x034FE5A8 ADRP X0, 0xC35000
	0x034FE5AC LDR X0, [X0 + 0xD08]
	0x034FE5B0 BL 0x1C16D08
	0x034FE5B4 MOV X2, X0
	0x034FE5B8 MOV X0, X23
	0x034FE5BC MOV X1, X21
	0x034FE5C0 MOV X3, X22
	0x034FE5C4 MOV X4, X31
	0x034FE5C8 BL 0x32277C4
	0x034FE5CC CBZ X19, 0x34FE620
	0x034FE5D0 MOV X21, X0
	0x034FE5D4 ADRP X0, 0xBFD000
	0x034FE5D8 LDR X0, [X0 + 0xBC8]
	0x034FE5DC BL 0x1C16D08
	0x034FE5E0 LDR X8, [X19]
	0x034FE5E4 MOV X1, X0
	0x034FE5E8 LDRH W9, [X8 + 0x12E]
	0x034FE5EC CBZ X9, 0x34FE610
	0x034FE5F0 LDR X10, [X8 + 0xB0]
	0x034FE5F4 ADD X10, X10, 0x8
	0x034FE5F8 LDUR X11, [X10 - 0x8]
	0x034FE5FC CMP X11, X1
	0x034FE600 B.EQ 0x34FE624
	0x034FE604 SUBS X9, X9, 0x1
	0x034FE608 ADD X10, X10, 0x10
	0x034FE60C B.NE 0x34FE5F8
	0x034FE610 MOV X0, X19
	0x034FE614 MOV W2, W31
	0x034FE618 BL 0x1C5C788
	0x034FE61C B 0x34FE630
	0x034FE620 BL 0x1C16F20
	0x034FE624 LDRSW X9, [X10]
	0x034FE628 ADD X8, X8, X9, 0x4, LSL
	0x034FE62C ADD X0, X8, 0x138
	0x034FE630 LDP X8, X3, [X0]
	0x034FE634 MOVZ W1, 0x1
	0x034FE638 MOV X0, X19
	0x034FE63C MOV X2, X21
	0x034FE640 BLR X8
	0x034FE644 ADRP X0, 0xBFD000
	0x034FE648 LDR X0, [X0 + 0xE60]
	0x034FE64C BL 0x1C16D08
	0x034FE650 LDR W8, [X0 + 0xE0]
	0x034FE654 CBNZ W8, 0x34FE65C
	0x034FE658 BL 0x1C16DFC
	0x034FE65C MOV X0, X20
	0x034FE660 MOV X1, X31
	0x034FE664 BL 0x3520158
	0x034FE668 LDR W8, [X31 + 0x10]
	0x034FE66C MOV W20, W31
	0x034FE670 SUB W8, W8, 0x1
	0x034FE674 STR W8, [X31 + 0x10]
	0x034FE678 B 0x34FE22C
	0x034FE67C MOVZ W0, 0x8
	0x034FE680 BL 0x3EB1AF0
	0x034FE684 LDR X8, [X20]
	0x034FE688 STR X8, [X0]
	0x034FE68C ADRP X1, 0x9B6000
	0x034FE690 ADD X1, X1, 0xE58
	0x034FE694 MOV X2, X31
	0x034FE698 BL 0x3EB1B00
	0x034FE69C MOV X20, X0
	0x034FE6A0 BL 0x3EB1AE0
	0x034FE6A4 MOV X0, X20
	0x034FE6A8 BL 0x1D2C690
	0x034FE6AC BL 0x1990590
	0x034FE6B0 STP X30, X23, [X31 - 0x30]!
	0x034FE6B4 STP X22, X21, [X31 + 0x10]
	0x034FE6B8 STP X20, X19, [X31 + 0x20]
	0x034FE6BC ADRP X21, 0xEE1000
	0x034FE6C0 LDRB W8, [X21 + 0xA7C]
	0x034FE6C4 MOV X20, X1
	0x034FE6C8 MOV X19, X0
	0x034FE6CC TBNZ X8, 0x0, 0x34FE714
	0x034FE6D0 ADRP X0, 0xBF5000
	0x034FE6D4 LDR X0, [X0 + 0x618]
	0x034FE6D8 BL 0x1C16CF4
	0x034FE6DC ADRP X0, 0xC35000
	0x034FE6E0 LDR X0, [X0 + 0xCB0]
	0x034FE6E4 BL 0x1C16CF4
	0x034FE6E8 ADRP X0, 0xC35000
	0x034FE6EC LDR X0, [X0 + 0xC68]
	0x034FE6F0 BL 0x1C16CF4
	0x034FE6F4 ADRP X0, 0xC35000
	0x034FE6F8 LDR X0, [X0 + 0xD10]
	0x034FE6FC BL 0x1C16CF4
	0x034FE700 ADRP X0, 0xC35000
	0x034FE704 LDR X0, [X0 + 0xD18]
	0x034FE708 BL 0x1C16CF4
	0x034FE70C MOVZ W8, 0x1
	0x034FE710 STRB W8, [X21 + 0xA7C]
	0x034FE714 CBZ X20, 0x34FE86C
	0x034FE718 LDRH W8, [X20 + 0x12]
	0x034FE71C CBZ W8, 0x34FE73C
	0x034FE720 ADRP X21, 0xC35000
	0x034FE724 LDR X21, [X21 + 0xD18]
	0x034FE728 MOV X0, X20
	0x034FE72C MOV X1, X31
	0x034FE730 BL 0x3505858
	0x034FE734 LDR X8, [X21]
	0x034FE738 B 0x34FE804
	0x034FE73C ADRP X22, 0xC35000
	0x034FE740 LDR X22, [X22 + 0xC68]
	0x034FE744 LDR X21, [X20 + 0x20]
	0x034FE748 LDR X0, [X22]
	0x034FE74C LDR W8, [X0 + 0xE0]
	0x034FE750 CBNZ W8, 0x34FE758
	0x034FE754 BL 0x1C16DFC
	0x034FE758 CBZ X21, 0x34FE86C
	0x034FE75C LDR X8, [X22]
	0x034FE760 MOV X0, X21
	0x034FE764 LDR X8, [X8 + 0xB8]
	0x034FE768 LDRB W1, [X8 + 0x2]
	0x034FE76C BL 0x34FB9B8
	0x034FE770 CBZ X0, 0x34FE7EC
	0x034FE774 ADRP X8, 0xBF5000
	0x034FE778 LDR X8, [X8 + 0x618]
	0x034FE77C MOV X22, X0
	0x034FE780 LDR X23, [X8]
	0x034FE784 MOV X1, X23
	0x034FE788 BL 0x1C16E00
	0x034FE78C CBZ X0, 0x34FE870
	0x034FE790 LDR W8, [X0 + 0x18]
	0x034FE794 MOV X21, X0
	0x034FE798 CBZ W8, 0x34FE7EC
	0x034FE79C LDR X20, [X19 + 0xF0]
	0x034FE7A0 CBZ X20, 0x34FE86C
	0x034FE7A4 ADRP X10, 0xC35000
	0x034FE7A8 LDR X8, [X20]
	0x034FE7AC LDR X10, [X10 + 0xCB0]
	0x034FE7B0 LDRH W9, [X8 + 0x12E]
	0x034FE7B4 LDR X1, [X10]
	0x034FE7B8 CBZ X9, 0x34FE7DC
	0x034FE7BC LDR X10, [X8 + 0xB0]
	0x034FE7C0 ADD X10, X10, 0x8
	0x034FE7C4 LDUR X11, [X10 - 0x8]
	0x034FE7C8 CMP X11, X1
	0x034FE7CC B.EQ 0x34FE83C
	0x034FE7D0 SUBS X9, X9, 0x1
	0x034FE7D4 ADD X10, X10, 0x10
	0x034FE7D8 B.NE 0x34FE7C4
	0x034FE7DC MOVZ W2, 0x2
	0x034FE7E0 MOV X0, X20
	0x034FE7E4 BL 0x1C5C788
	0x034FE7E8 B 0x34FE84C
	0x034FE7EC MOV X0, X20
	0x034FE7F0 MOV X1, X31
	0x034FE7F4 BL 0x3505858
	0x034FE7F8 ADRP X8, 0xC35000
	0x034FE7FC LDR X8, [X8 + 0xD10]
	0x034FE800 LDR X8, [X8]
	0x034FE804 MOV X1, X0
	0x034FE808 MOV X0, X8
	0x034FE80C MOV X2, X31
	0x034FE810 BL 0x321B938
	0x034FE814 MOV X2, X0
	0x034FE818 MOVZ W1, 0x1
	0x034FE81C MOV X0, X19
	0x034FE820 BL 0x34F116C
	0x034FE824 MOVZ W1, 0x419
	0x034FE828 MOV X0, X19
	0x034FE82C LDP X20, X19, [X31 + 0x20]
	0x034FE830 LDP X22, X21, [X31 + 0x10]
	0x034FE834 LDP X30, X23, [X31], #0x30
	0x034FE838 B 0x34F0DFC
	0x034FE83C LDR W9, [X10]
	0x034FE840 ADD W9, W9, 0x2
	0x034FE844 ADD X8, X8, W9, 0x4, SXTW
	0x034FE848 ADD X0, X8, 0x138
	0x034FE84C LDP X8, X2, [X0]
	0x034FE850 MOV X0, X20
	0x034FE854 MOV X1, X21
	0x034FE858 BLR X8
	0x034FE85C MOVZ W8, 0x1
	0x034FE860 MOVZ W1, 0x418
	0x034FE864 STRB W8, [X19 + 0xDD]
	0x034FE868 B 0x34FE828
	0x034FE86C BL 0x1C16F20

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X21, 0xEE2000
	011 Move W8, [X21+2681]
	012 Move W20, W2
	013 Move X23, X1
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {30}
	019 Move X0, 0xBF6000
	020 Move X0, [X0+1560]
	021 Call 0x1C17CF4
	022 Move X0, 0xC36000
	023 Move X0, [X0+3248]
	024 Call 0x1C17CF4
	025 Move X0, 0xC36000
	026 Move X0, [X0+1912]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X21+2681], W8
	030 Move X21, 0xC36000
	031 Move X21, [X21+1912]
	032 Move TEMP, X20
	033 And TEMP, TEMP, 1
	034 Compare TEMP, 1
	035 JumpIfNotEqual {43}
	036 Move X8, [X19]
	037 Move X0, X19
	038 Move X9, [X8+536]
	039 Move X1, [X8+544]
	040 NotImplemented "Instruction BLR not yet implemented."
	041 NotImplemented "Instruction ORN not yet implemented."
	042 And W26, W8, 1
	043 Move W26, W31
	044 Move X0, [X21]
	045 Move W8, [X0+224]
	046 Compare W8, 0
	047 JumpIfNotEqual {49}
	048 Call 0x1C17DFC
	049 Call PeerBase.MessageBufferPoolGet
	050 Compare X0, 0
	051 JumpIfEqual {213}
	052 Move X1, X31
	053 Move X2, X31
	054 Move X21, X0
	055 Call StreamBuffer.SetLength, X0, X1
	056 Compare W26, 0
	057 JumpIfNotEqual {66}
	058 Move X1, [X19+232]
	059 Compare X1, 0
	060 JumpIfEqual {213}
	061 Move W3, [X1+24]
	062 Move X0, X21
	063 Move W2, W31
	064 Move X4, X31
	065 Call StreamBuffer.Write, X0, X1, X2, X3
	066 Move X24, 0xBF6000
	067 Move X24, [X24+1560]
	068 Move X0, X23
	069 Move X1, [X24]
	070 Call 0x1C17E00
	071 Move X22, X0
	072 Compare X0, 0
	073 JumpIfEqual {87}
	074 Move X1, [X24]
	075 Move X0, X23
	076 Call 0x1C17E00
	077 Compare X0, 0
	078 JumpIfEqual {213}
	079 Move W3, [X0+24]
	080 Move X1, X0
	081 Move X0, X21
	082 Move W2, W31
	083 Move X4, X31
	084 Call StreamBuffer.Write, X0, X1, X2, X3
	085 Compare W26, 0
	086 JumpIfNotEqual {99}
	087 Move X0, [X19+24]
	088 Compare X0, 0
	089 JumpIfEqual {213}
	090 Move X8, [X0]
	091 Move W3, 1
	092 Move X1, X21
	093 Move X2, X23
	094 Move X9, [X8+408]
	095 Move X4, [X8+416]
	096 NotImplemented "Instruction BLR not yet implemented."
	097 Compare W26, 0
	098 JumpIfEqual {158}
	099 Move X23, [X19+240]
	100 Move X0, X21
	101 Move X1, X31
	102 Call StreamBuffer.GetBuffer, X0
	103 Move X24, X0
	104 Move X0, X21
	105 Move X1, X31
	106 Call StreamBuffer.get_Length, X0
	107 Compare X23, 0
	108 JumpIfEqual {213}
	109 Move X10, 0xC36000
	110 Move X8, [X23]
	111 Move X10, [X10+3248]
	112 Move W25, W0
	113 NotImplemented "Instruction LDRH not yet implemented."
	114 Move X1, [X10]
	115 Compare X9, 0
	116 JumpIfEqual {123}
	117 Move X10, [X8+176]
	118 Add X10, X10, 8
	119 NotImplemented "Instruction LDUR not yet implemented."
	120 NotImplemented "Instruction CMP not yet implemented."
	121 Subtract X9, X9, 1
	122 Add X10, X10, 16
	123 Move W2, 4
	124 Move X0, X23
	125 Call 0x1C5D788
	126 Move W9, [X10]
	127 Add W9, W9, 4
	128 Add X8, X8, W9
	129 Add X0, X8, 312
	130 Move X8, [X0]
	131 Move X4, [X0+8]
	132 Move X0, X23
	133 Move X1, X24
	134 Move W2, W31
	135 Move W3, W25
	136 NotImplemented "Instruction BLR not yet implemented."
	137 Move X23, X0
	138 Move X0, X21
	139 Move X1, X31
	140 Move X2, X31
	141 Call StreamBuffer.SetLength, X0, X1
	142 Move X1, [X19+232]
	143 Compare X1, 0
	144 JumpIfEqual {213}
	145 Move W3, [X1+24]
	146 Move X0, X21
	147 Move W2, W31
	148 Move X4, X31
	149 Call StreamBuffer.Write, X0, X1, X2, X3
	150 Compare X23, 0
	151 JumpIfEqual {213}
	152 Move W3, [X23+24]
	153 Move X0, X21
	154 Move X1, X23
	155 Move W2, W31
	156 Move X4, X31
	157 Call StreamBuffer.Write, X0, X1, X2, X3
	158 Move X0, X21
	159 Move X1, X31
	160 Call StreamBuffer.GetBuffer, X0
	161 Move X9, [X19+232]
	162 Compare X9, 0
	163 JumpIfEqual {213}
	164 NotImplemented "Instruction CMP not yet implemented."
	165 Move W8, 8
	166 NotImplemented "Instruction CINC not yet implemented."
	167 Compare X0, 0
	168 JumpIfEqual {213}
	169 Move W9, [X9+24]
	170 Move W10, [X0+24]
	171 Subtract W9, W9, 1
	172 NotImplemented "Instruction CMP not yet implemented."
	173 NotImplemented "Instruction CMP not yet implemented."
	174 Add X10, X0, W9
	175 NotImplemented "Instruction CSET not yet implemented."
	176 Move [X10+32], W8
	177 Move TEMP, X20
	178 And TEMP, TEMP, 1
	179 Compare TEMP, 1
	180 JumpIfNotEqual {189}
	181 Move TEMP, X9
	182 And TEMP, TEMP, 1
	183 Compare TEMP, 1
	184 JumpIfEqual {189}
	185 Move X8, [X19+16]
	186 Compare X8, 0
	187 JumpIfEqual {213}
	188 Move W26, [X8+107]
	189 Compare W26, 0
	190 JumpIfEqual {202}
	191 Move X8, [X19+232]
	192 Compare X8, 0
	193 JumpIfEqual {213}
	194 Move W8, [X8+24]
	195 Move W9, [X0+24]
	196 Subtract W8, W8, 1
	197 NotImplemented "Instruction CMP not yet implemented."
	198 Add X8, X0, W8
	199 Move W9, [X8+32]
	200 Or W9, W9, 128
	201 Move [X8+32], W9
	202 Move X0, X21
	203 Move X20, [X31+64]
	204 Move X19, [X31+72]
	205 Move X22, [X31+48]
	206 Move X21, [X31+56]
	207 Move X24, [X31+32]
	208 Move X23, [X31+40]
	209 Move X26, [X31+16]
	210 Move X25, [X31+24]
	211 Move X30, [X31+80]
	212 Return X0
	213 Call 0x1C17F20
	214 Call 0x1C17F28

Method: System.Boolean SendOutgoingCommands()

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Boolean SendAcksOnly()

Disassembly:
	0x034FE870 MOV X0, X22
	0x034FE874 MOV X1, X23

ISIL:
	001 Move W0, W31
	002 Return X0

Method: System.Void ReceiveIncomingCommands(System.Byte[] inBuff, System.Int32 dataLength)

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Boolean DispatchIncomingCommands()

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Boolean DeserializeMessageAndCallback(ExitGames.Client.Photon.StreamBuffer stream)

Disassembly:
	0x034FE878 BL 0x1C171E0
	0x034FE87C SUB X31, X31, 0x50
	0x034FE880 STP X30, X25, [X31 + 0x10]
	0x034FE884 STP X24, X23, [X31 + 0x20]
	0x034FE888 STP X22, X21, [X31 + 0x30]
	0x034FE88C STP X20, X19, [X31 + 0x40]
	0x034FE890 ADRP X21, 0xEE1000
	0x034FE894 LDRB W8, [X21 + 0xA7B]
	0x034FE898 MOV X20, X1
	0x034FE89C MOV X19, X0
	0x034FE8A0 TBNZ X8, 0x0, 0x34FE924
	0x034FE8A4 ADRP X0, 0xBFE000
	0x034FE8A8 LDR X0, [X0 + 0x610]
	0x034FE8AC BL 0x1C16CF4
	0x034FE8B0 ADRP X0, 0xBFE000
	0x034FE8B4 LDR X0, [X0 + 0x618]
	0x034FE8B8 BL 0x1C16CF4
	0x034FE8BC ADRP X0, 0xBFE000
	0x034FE8C0 LDR X0, [X0 + 0x2B8]
	0x034FE8C4 BL 0x1C16CF4
	0x034FE8C8 ADRP X0, 0xC35000
	0x034FE8CC LDR X0, [X0 + 0xD20]
	0x034FE8D0 BL 0x1C16CF4
	0x034FE8D4 ADRP X0, 0xC35000
	0x034FE8D8 LDR X0, [X0 + 0xCB0]
	0x034FE8DC BL 0x1C16CF4
	0x034FE8E0 ADRP X0, 0xBF5000
	0x034FE8E4 LDR X0, [X0 + 0xE00]
	0x034FE8E8 BL 0x1C16CF4
	0x034FE8EC ADRP X0, 0xBFD000
	0x034FE8F0 LDR X0, [X0 + 0xBC8]
	0x034FE8F4 BL 0x1C16CF4
	0x034FE8F8 ADRP X0, 0xC35000
	0x034FE8FC LDR X0, [X0 + 0xC68]
	0x034FE900 BL 0x1C16CF4
	0x034FE904 ADRP X0, 0xBF5000
	0x034FE908 LDR X0, [X0 + 0x6C0]
	0x034FE90C BL 0x1C16CF4
	0x034FE910 ADRP X0, 0xC35000
	0x034FE914 LDR X0, [X0 + 0xD28]
	0x034FE918 BL 0x1C16CF4
	0x034FE91C MOVZ W8, 0x1
	0x034FE920 STRB W8, [X21 + 0xA7B]
	0x034FE924 STRB W31, [X31 + 0xC]
	0x034FE928 LDR X21, [X19 + 0xF0]
	0x034FE92C STRB W31, [X19 + 0xDD]
	0x034FE930 CBZ X21, 0x34FE998
	0x034FE934 ADRP X10, 0xBF5000
	0x034FE938 LDR X8, [X21]
	0x034FE93C LDR X10, [X10 + 0xE00]
	0x034FE940 LDRH W9, [X8 + 0x12E]
	0x034FE944 LDR X1, [X10]
	0x034FE948 CBZ X9, 0x34FE96C
	0x034FE94C LDR X10, [X8 + 0xB0]
	0x034FE950 ADD X10, X10, 0x8
	0x034FE954 LDUR X11, [X10 - 0x8]
	0x034FE958 CMP X11, X1
	0x034FE95C B.EQ 0x34FE97C
	0x034FE960 SUBS X9, X9, 0x1
	0x034FE964 ADD X10, X10, 0x10
	0x034FE968 B.NE 0x34FE954
	0x034FE96C MOV X0, X21
	0x034FE970 MOV W2, W31
	0x034FE974 BL 0x1C5C788
	0x034FE978 B 0x34FE988
	0x034FE97C LDRSW X9, [X10]
	0x034FE980 ADD X8, X8, X9, 0x4, LSL
	0x034FE984 ADD X0, X8, 0x138
	0x034FE988 LDP X8, X1, [X0]
	0x034FE98C MOV X0, X21
	0x034FE990 BLR X8
	0x034FE994 STR X31, [X19 + 0xF0]
	0x034FE998 LDR X0, [X19 + 0x10]
	0x034FE99C CBZ X0, 0x34FEE64
	0x034FE9A0 ADRP X21, 0xBF5000
	0x034FE9A4 LDR X21, [X21 + 0x6C0]
	0x034FE9A8 MOV X1, X31
	0x034FE9AC BL 0x3502C78
	0x034FE9B0 LDR X8, [X21]
	0x034FE9B4 MOV X21, X0
	0x034FE9B8 LDR W9, [X8 + 0xE0]
	0x034FE9BC CBNZ W9, 0x34FE9C8
	0x034FE9C0 MOV X0, X8
	0x034FE9C4 BL 0x1C16DFC
	0x034FE9C8 ADRP X24, 0xC35000
	0x034FE9CC LDR X24, [X24 + 0xCB0]
	0x034FE9D0 MOV X0, X21
	0x034FE9D4 MOV X1, X31
	0x034FE9D8 MOV X2, X31
	0x034FE9DC BL 0x3395F0C
	0x034FE9E0 TBZ X0, 0x0, 0x34FEAF8
	0x034FE9E4 LDR X0, [X19 + 0x10]
	0x034FE9E8 CBZ X0, 0x34FECF0
	0x034FE9EC MOV X1, X31
	0x034FE9F0 BL 0x3502C78
	0x034FE9F4 MOV X1, X31
	0x034FE9F8 BL 0x33A703C
	0x034FE9FC MOV X21, X0
	0x034FEA00 CBZ X0, 0x34FEA3C
	0x034FEA04 LDR X22, [X24]
	0x034FEA08 MOV X0, X21
	0x034FEA0C MOV X1, X22
	0x034FEA10 BL 0x1C16E00
	0x034FEA14 CBZ X0, 0x34FECF4
	0x034FEA18 STR X0, [X19 + 0xF0]
	0x034FEA1C LDR X22, [X24]
	0x034FEA20 MOV X0, X21
	0x034FEA24 MOV X1, X22
	0x034FEA28 BL 0x1C16E00
	0x034FEA2C CBZ X0, 0x34FED00
	0x034FEA30 LDR X8, [X19 + 0xF0]
	0x034FEA34 CBNZ X8, 0x34FEB20
	0x034FEA38 B 0x34FEA40
	0x034FEA3C STR X31, [X19 + 0xF0]
	0x034FEA40 LDR X0, [X19 + 0x10]
	0x034FEA44 CBZ X0, 0x34FED0C
	0x034FEA48 LDR X21, [X0 + 0x48]
	0x034FEA4C MOV X1, X31
	0x034FEA50 BL 0x3502C78
	0x034FEA54 ADRP X8, 0xC35000
	0x034FEA58 LDR X8, [X8 + 0xD28]
	0x034FEA5C LDR X22, [X8]
	0x034FEA60 CBZ X0, 0x34FEA78
	0x034FEA64 LDR X8, [X0]
	0x034FEA68 LDP X9, X1, [X8 + 0x168]
	0x034FEA6C BLR X9
	0x034FEA70 MOV X1, X0
	0x034FEA74 B 0x34FEA7C
	0x034FEA78 MOV X1, X31
	0x034FEA7C MOV X0, X22
	0x034FEA80 MOV X2, X31
	0x034FEA84 BL 0x321B938
	0x034FEA88 CBZ X21, 0x34FED10
	0x034FEA8C ADRP X10, 0xBFD000
	0x034FEA90 LDR X8, [X21]
	0x034FEA94 LDR X10, [X10 + 0xBC8]
	0x034FEA98 MOV X22, X0
	0x034FEA9C LDRH W9, [X8 + 0x12E]
	0x034FEAA0 LDR X1, [X10]
	0x034FEAA4 CBZ X9, 0x34FEAC8
	0x034FEAA8 LDR X10, [X8 + 0xB0]
	0x034FEAAC ADD X10, X10, 0x8
	0x034FEAB0 LDUR X11, [X10 - 0x8]
	0x034FEAB4 CMP X11, X1
	0x034FEAB8 B.EQ 0x34FEAD8
	0x034FEABC SUBS X9, X9, 0x1
	0x034FEAC0 ADD X10, X10, 0x10
	0x034FEAC4 B.NE 0x34FEAB0
	0x034FEAC8 MOV X0, X21
	0x034FEACC MOV W2, W31
	0x034FEAD0 BL 0x1C5C788
	0x034FEAD4 B 0x34FEAE4
	0x034FEAD8 LDRSW X9, [X10]
	0x034FEADC ADD X8, X8, X9, 0x4, LSL
	0x034FEAE0 ADD X0, X8, 0x138
	0x034FEAE4 LDP X8, X3, [X0]
	0x034FEAE8 MOVZ W1, 0x2
	0x034FEAEC MOV X0, X21
	0x034FEAF0 MOV X2, X22
	0x034FEAF4 BLR X8
	0x034FEAF8 LDR X8, [X19 + 0xF0]
	0x034FEAFC CBNZ X8, 0x34FEB20
	0x034FEB00 ADRP X8, 0xC35000
	0x034FEB04 LDR X8, [X8 + 0xD20]
	0x034FEB08 LDR X0, [X8]
	0x034FEB0C BL 0x1C16F10
	0x034FEB10 MOV X1, X31
	0x034FEB14 MOV X21, X0
	0x034FEB18 BL 0x352ABC0
	0x034FEB1C STR X21, [X19 + 0xF0]
	0x034FEB20 ADRP X8, 0xBFE000
	0x034FEB24 LDR X8, [X8 + 0x2B8]
	0x034FEB28 ADRP X21, 0xBFE000
	0x034FEB2C ADRP X25, 0xC35000
	0x034FEB30 LDR X0, [X8]
	0x034FEB34 LDR X21, [X21 + 0x610]
	0x034FEB38 LDR X25, [X25 + 0xC68]
	0x034FEB3C BL 0x1C16F10
	0x034FEB40 LDR X2, [X21]
	0x034FEB44 MOVZ W1, 0x1
	0x034FEB48 MOV X21, X0
	0x034FEB4C BL 0x29D2C94
	0x034FEB50 LDR X0, [X25]
	0x034FEB54 LDR W8, [X0 + 0xE0]
	0x034FEB58 CBNZ W8, 0x34FEB64
	0x034FEB5C BL 0x1C16DFC
	0x034FEB60 LDR X0, [X25]
	0x034FEB64 LDR X23, [X19 + 0xF0]
	0x034FEB68 CBZ X23, 0x34FEE64
	0x034FEB6C LDR X9, [X0 + 0xB8]
	0x034FEB70 LDR X8, [X23]
	0x034FEB74 LDR X1, [X24]
	0x034FEB78 LDRB W22, [X9]
	0x034FEB7C LDRH W9, [X8 + 0x12E]
	0x034FEB80 CBZ X9, 0x34FEBA4
	0x034FEB84 LDR X10, [X8 + 0xB0]
	0x034FEB88 ADD X10, X10, 0x8
	0x034FEB8C LDUR X11, [X10 - 0x8]
	0x034FEB90 CMP X11, X1
	0x034FEB94 B.EQ 0x34FEBB4
	0x034FEB98 SUBS X9, X9, 0x1
	0x034FEB9C ADD X10, X10, 0x10
	0x034FEBA0 B.NE 0x34FEB8C
	0x034FEBA4 MOVZ W2, 0x1
	0x034FEBA8 MOV X0, X23
	0x034FEBAC BL 0x1C5C788
	0x034FEBB0 B 0x34FEBC4
	0x034FEBB4 LDR W9, [X10]
	0x034FEBB8 ADD W9, W9, 0x1
	0x034FEBBC ADD X8, X8, W9, 0x4, SXTW
	0x034FEBC0 ADD X0, X8, 0x138
	0x034FEBC4 LDP X8, X1, [X0]
	0x034FEBC8 MOV X0, X23
	0x034FEBCC BLR X8
	0x034FEBD0 CBZ X21, 0x34FEE64
	0x034FEBD4 ADRP X8, 0xBFE000
	0x034FEBD8 LDR X8, [X8 + 0x618]
	0x034FEBDC MOV X2, X0
	0x034FEBE0 MOV X0, X21
	0x034FEBE4 MOV W1, W22
	0x034FEBE8 LDR X3, [X8]
	0x034FEBEC BL 0x29D3520
	0x034FEBF0 CBZ X20, 0x34FEC7C
	0x034FEBF4 STRB W31, [X31 + 0xC]
	0x034FEBF8 ADD X1, X31, 0xC
	0x034FEBFC MOV X0, X20
	0x034FEC00 MOV X2, X31
	0x034FEC04 BL 0x33DE64C
	0x034FEC08 LDR X0, [X25]
	0x034FEC0C LDR W8, [X0 + 0xE0]
	0x034FEC10 CBNZ W8, 0x34FEC1C
	0x034FEC14 BL 0x1C16DFC
	0x034FEC18 LDR X0, [X25]
	0x034FEC1C LDR X8, [X0 + 0xB8]
	0x034FEC20 LDRB W1, [X8 + 0x3]
	0x034FEC24 MOVZ W3, 0x6
	0x034FEC28 MOV X0, X19
	0x034FEC2C MOV X2, X21
	0x034FEC30 MOV W4, W31
	0x034FEC34 BL 0x34FD084
	0x034FEC38 MOV X1, X0
	0x034FEC3C LDR X8, [X19]
	0x034FEC40 LDR X9, [X8 + 0x228]
	0x034FEC44 LDR X3, [X8 + 0x230]
	0x034FEC48 MOVZ W2, 0x1
	0x034FEC4C MOV X0, X19
	0x034FEC50 BLR X9
	0x034FEC54 MOV W22, W0
	0x034FEC58 MOV X23, X31
	0x034FEC5C MOV W24, W31
	0x034FEC60 LDRB W8, [X31 + 0xC]
	0x034FEC64 CBZ W8, 0x34FEC74
	0x034FEC68 MOV X0, X20
	0x034FEC6C MOV X1, X31
	0x034FEC70 BL 0x33E14E4
	0x034FEC74 CBNZ X23, 0x34FECE8
	0x034FEC78 CBZ W24, 0x34FECCC
	0x034FEC7C LDR X0, [X25]
	0x034FEC80 LDR W8, [X0 + 0xE0]
	0x034FEC84 CBNZ W8, 0x34FEC90
	0x034FEC88 BL 0x1C16DFC
	0x034FEC8C LDR X0, [X25]
	0x034FEC90 LDR X8, [X0 + 0xB8]
	0x034FEC94 MOVZ W3, 0x6
	0x034FEC98 MOV X0, X19
	0x034FEC9C MOV X2, X21
	0x034FECA0 LDRB W1, [X8 + 0x3]
	0x034FECA4 MOV W4, W31
	0x034FECA8 BL 0x34FD084
	0x034FECAC LDR X8, [X19]
	0x034FECB0 MOV X1, X0
	0x034FECB4 MOVZ W2, 0x1
	0x034FECB8 MOV X0, X19
	0x034FECBC LDR X9, [X8 + 0x228]
	0x034FECC0 LDR X3, [X8 + 0x230]
	0x034FECC4 BLR X9
	0x034FECC8 MOV W22, W0
	0x034FECCC AND W0, W22, 0x1
	0x034FECD0 LDP X20, X19, [X31 + 0x40]
	0x034FECD4 LDP X22, X21, [X31 + 0x30]
	0x034FECD8 LDP X24, X23, [X31 + 0x20]
	0x034FECDC LDP X30, X25, [X31 + 0x10]
	0x034FECE0 ADD X31, X31, 0x50
	0x034FECE4 RET
	0x034FECE8 MOV X0, X23
	0x034FECEC BL 0x1C16F18
	0x034FECF0 BL 0x1C16F20
	0x034FECF4 MOV X0, X21
	0x034FECF8 MOV X1, X22
	0x034FECFC BL 0x1C171E0
	0x034FED00 MOV X0, X21
	0x034FED04 MOV X1, X22
	0x034FED08 BL 0x1C171E0
	0x034FED0C BL 0x1C16F20
	0x034FED10 BL 0x1C16F20
	0x034FED14 B 0x34FED8C
	0x034FED18 B 0x34FED34
	0x034FED1C B 0x34FED8C
	0x034FED20 B 0x34FED8C
	0x034FED24 B 0x34FED8C
	0x034FED28 B 0x34FED8C
	0x034FED2C B 0x34FED34
	0x034FED30 B 0x34FED34
	0x034FED34 MOV X22, X0
	0x034FED38 CMP W1, 0x1
	0x034FED3C B.NE 0x34FED5C
	0x034FED40 MOV X0, X22
	0x034FED44 BL 0x3EB1AD0
	0x034FED48 LDR X23, [X0]
	0x034FED4C BL 0x3EB1AE0
	0x034FED50 MOV W22, W31
	0x034FED54 MOVZ W24, 0x1
	0x034FED58 B 0x34FEC60
	0x034FED5C MOV X23, X31
	0x034FED60 B 0x34FED68
	0x034FED64 MOV X22, X0
	0x034FED68 LDRB W8, [X31 + 0xC]
	0x034FED6C CBZ W8, 0x34FED7C
	0x034FED70 MOV X0, X20
	0x034FED74 MOV X1, X31
	0x034FED78 BL 0x33E14E4
	0x034FED7C CBZ X23, 0x34FEEB4
	0x034FED80 MOV X0, X23
	0x034FED84 BL 0x1C16F18
	0x034FED88 B 0x34FED8C
	0x034FED8C MOV X22, X0
	0x034FED90 CMP W1, 0x1
	0x034FED94 B.NE 0x34FEEB4
	0x034FED98 MOV X0, X22
	0x034FED9C BL 0x3EB1AD0
	0x034FEDA0 MOV X21, X0
	0x034FEDA4 ADRP X0, 0xBF5000
	0x034FEDA8 LDR X0, [X0 + 0x7D0]
	0x034FEDAC BL 0x1C16D08
	0x034FEDB0 LDR X8, [X21]
	0x034FEDB4 LDR X1, [X8]
	0x034FEDB8 BL 0x1C17270
	0x034FEDBC TBZ X0, 0x0, 0x34FEE8C
	0x034FEDC0 LDR X22, [X21]
	0x034FEDC4 BL 0x3EB1AE0
	0x034FEDC8 LDR X8, [X19 + 0x10]
	0x034FEDCC CBZ X8, 0x34FEE64
	0x034FEDD0 ADRP X0, 0xC35000
	0x034FEDD4 LDR X21, [X8 + 0x48]
	0x034FEDD8 LDR X0, [X0 + 0xD30]
	0x034FEDDC BL 0x1C16D08
	0x034FEDE0 MOV X23, X0
	0x034FEDE4 CBZ X22, 0x34FEE00
	0x034FEDE8 LDR X8, [X22]
	0x034FEDEC MOV X0, X22
	0x034FEDF0 LDP X9, X1, [X8 + 0x168]
	0x034FEDF4 BLR X9
	0x034FEDF8 MOV X1, X0
	0x034FEDFC B 0x34FEE04
	0x034FEE00 MOV X1, X31
	0x034FEE04 MOV X0, X23
	0x034FEE08 MOV X2, X31
	0x034FEE0C BL 0x321B938
	0x034FEE10 CBZ X21, 0x34FEE64
	0x034FEE14 MOV X22, X0
	0x034FEE18 ADRP X0, 0xBFD000
	0x034FEE1C LDR X0, [X0 + 0xBC8]
	0x034FEE20 BL 0x1C16D08
	0x034FEE24 LDR X8, [X21]
	0x034FEE28 MOV X1, X0
	0x034FEE2C LDRH W9, [X8 + 0x12E]
	0x034FEE30 CBZ X9, 0x34FEE54
	0x034FEE34 LDR X10, [X8 + 0xB0]
	0x034FEE38 ADD X10, X10, 0x8
	0x034FEE3C LDUR X11, [X10 - 0x8]
	0x034FEE40 CMP X11, X1
	0x034FEE44 B.EQ 0x34FEE68
	0x034FEE48 SUBS X9, X9, 0x1
	0x034FEE4C ADD X10, X10, 0x10
	0x034FEE50 B.NE 0x34FEE3C
	0x034FEE54 MOV X0, X21
	0x034FEE58 MOV W2, W31
	0x034FEE5C BL 0x1C5C788
	0x034FEE60 B 0x34FEE74
	0x034FEE64 BL 0x1C16F20
	0x034FEE68 LDRSW X9, [X10]
	0x034FEE6C ADD X8, X8, X9, 0x4, LSL
	0x034FEE70 ADD X0, X8, 0x138
	0x034FEE74 LDP X8, X3, [X0]
	0x034FEE78 MOVZ W1, 0x2
	0x034FEE7C MOV X0, X21
	0x034FEE80 MOV X2, X22
	0x034FEE84 BLR X8
	0x034FEE88 B 0x34FEAF8
	0x034FEE8C MOVZ W0, 0x8
	0x034FEE90 BL 0x3EB1AF0
	0x034FEE94 LDR X8, [X21]
	0x034FEE98 STR X8, [X0]
	0x034FEE9C ADRP X1, 0x9B6000
	0x034FEEA0 ADD X1, X1, 0xE58
	0x034FEEA4 MOV X2, X31
	0x034FEEA8 BL 0x3EB1B00
	0x034FEEAC MOV X22, X0
	0x034FEEB0 BL 0x3EB1AE0
	0x034FEEB4 MOV X0, X22
	0x034FEEB8 BL 0x1D2C690
	0x034FEEBC BL 0x1990590
	0x034FEEC0 STP X30, X23, [X31 - 0x30]!
	0x034FEEC4 STP X22, X21, [X31 + 0x10]
	0x034FEEC8 STP X20, X19, [X31 + 0x20]
	0x034FEECC ADRP X21, 0xEE1000
	0x034FEED0 LDRB W8, [X21 + 0xA7D]
	0x034FEED4 MOV X20, X1
	0x034FEED8 MOV X19, X0
	0x034FEEDC TBNZ X8, 0x0, 0x34FEF30
	0x034FEEE0 ADRP X0, 0xC35000
	0x034FEEE4 LDR X0, [X0 + 0xD20]
	0x034FEEE8 BL 0x1C16CF4
	0x034FEEEC ADRP X0, 0xC35000
	0x034FEEF0 LDR X0, [X0 + 0xCB0]
	0x034FEEF4 BL 0x1C16CF4
	0x034FEEF8 ADRP X0, 0xBFD000
	0x034FEEFC LDR X0, [X0 + 0xBC8]
	0x034FEF00 BL 0x1C16CF4
	0x034FEF04 ADRP X0, 0xBF5000
	0x034FEF08 LDR X0, [X0 + 0x9D0]
	0x034FEF0C BL 0x1C16CF4
	0x034FEF10 ADRP X0, 0xBF5000
	0x034FEF14 LDR X0, [X0 + 0x6C0]
	0x034FEF18 BL 0x1C16CF4
	0x034FEF1C ADRP X0, 0xC35000
	0x034FEF20 LDR X0, [X0 + 0xD28]
	0x034FEF24 BL 0x1C16CF4
	0x034FEF28 MOVZ W8, 0x1
	0x034FEF2C STRB W8, [X21 + 0xA7D]
	0x034FEF30 LDR X0, [X19 + 0x10]
	0x034FEF34 CBZ X0, 0x34FF27C
	0x034FEF38 ADRP X21, 0xBF5000
	0x034FEF3C LDR X21, [X21 + 0x6C0]
	0x034FEF40 MOV X1, X31
	0x034FEF44 BL 0x3502C78
	0x034FEF48 LDR X8, [X21]
	0x034FEF4C MOV X21, X0
	0x034FEF50 LDR W9, [X8 + 0xE0]
	0x034FEF54 CBNZ W9, 0x34FEF60
	0x034FEF58 MOV X0, X8
	0x034FEF5C BL 0x1C16DFC
	0x034FEF60 MOV X0, X21
	0x034FEF64 MOV X1, X31
	0x034FEF68 MOV X2, X31
	0x034FEF6C BL 0x3395F0C
	0x034FEF70 TBZ X0, 0x0, 0x34FF0E4
	0x034FEF74 LDR X0, [X19 + 0x10]
	0x034FEF78 CBZ X0, 0x34FF128
	0x034FEF7C MOV X1, X31
	0x034FEF80 BL 0x3502C78
	0x034FEF84 ADRP X8, 0xBF5000
	0x034FEF88 LDR X8, [X8 + 0x9D0]
	0x034FEF8C MOV X21, X0
	0x034FEF90 LDR X0, [X8]
	0x034FEF94 MOVZ W1, 0x1
	0x034FEF98 BL 0x1C16D6C
	0x034FEF9C MOV X22, X0
	0x034FEFA0 CBZ X0, 0x34FF12C
	0x034FEFA4 CBZ X20, 0x34FEFBC
	0x034FEFA8 LDR X8, [X22]
	0x034FEFAC LDR X1, [X8 + 0x40]
	0x034FEFB0 MOV X0, X20
	0x034FEFB4 BL 0x1C16E00
	0x034FEFB8 CBZ X0, 0x34FF134
	0x034FEFBC LDR W8, [X22 + 0x18]
	0x034FEFC0 CBZ W8, 0x34FF130
	0x034FEFC4 STR X20, [X22 + 0x20]
	0x034FEFC8 MOV X0, X21
	0x034FEFCC MOV X1, X22
	0x034FEFD0 MOV X2, X31
	0x034FEFD4 BL 0x33A700C
	0x034FEFD8 MOV X21, X0
	0x034FEFDC CBZ X0, 0x34FF028
	0x034FEFE0 ADRP X23, 0xC35000
	0x034FEFE4 LDR X23, [X23 + 0xCB0]
	0x034FEFE8 LDR X22, [X23]
	0x034FEFEC MOV X0, X21
	0x034FEFF0 MOV X1, X22
	0x034FEFF4 BL 0x1C16E00
	0x034FEFF8 CBZ X0, 0x34FF140
	0x034FEFFC STR X0, [X19 + 0xF0]
	0x034FF000 LDR X22, [X23]
	0x034FF004 MOV X0, X21
	0x034FF008 MOV X1, X22
	0x034FF00C BL 0x1C16E00
	0x034FF010 CBZ X0, 0x34FF14C
	0x034FF014 LDR X8, [X19 + 0xF0]
	0x034FF018 CBZ X8, 0x34FF02C
	0x034FF01C MOVZ W8, 0x1
	0x034FF020 STRB W8, [X19 + 0xDD]
	0x034FF024 B 0x34FF0E4
	0x034FF028 STR X31, [X19 + 0xF0]
	0x034FF02C LDR X0, [X19 + 0x10]
	0x034FF030 CBZ X0, 0x34FF158
	0x034FF034 LDR X21, [X0 + 0x48]
	0x034FF038 MOV X1, X31
	0x034FF03C BL 0x3502C78
	0x034FF040 ADRP X8, 0xC34000
	0x034FF044 LDR X8, [X8 + 0xD28]
	0x034FF048 LDR X22, [X8]
	0x034FF04C CBZ X0, 0x34FF064
	0x034FF050 LDR X8, [X0]
	0x034FF054 LDP X9, X1, [X8 + 0x168]
	0x034FF058 BLR X9
	0x034FF05C MOV X1, X0
	0x034FF060 B 0x34FF068
	0x034FF064 MOV X1, X31
	0x034FF068 MOV X0, X22
	0x034FF06C MOV X2, X31
	0x034FF070 BL 0x321B938
	0x034FF074 CBZ X21, 0x34FF15C
	0x034FF078 ADRP X10, 0xBFC000
	0x034FF07C LDR X8, [X21]
	0x034FF080 LDR X10, [X10 + 0xBC8]
	0x034FF084 MOV X22, X0
	0x034FF088 LDRH W9, [X8 + 0x12E]
	0x034FF08C LDR X1, [X10]
	0x034FF090 CBZ X9, 0x34FF0B4
	0x034FF094 LDR X10, [X8 + 0xB0]
	0x034FF098 ADD X10, X10, 0x8
	0x034FF09C LDUR X11, [X10 - 0x8]
	0x034FF0A0 CMP X11, X1
	0x034FF0A4 B.EQ 0x34FF0C4
	0x034FF0A8 SUBS X9, X9, 0x1
	0x034FF0AC ADD X10, X10, 0x10
	0x034FF0B0 B.NE 0x34FF09C
	0x034FF0B4 MOV X0, X21
	0x034FF0B8 MOV W2, W31
	0x034FF0BC BL 0x1C5C788
	0x034FF0C0 B 0x34FF0D0
	0x034FF0C4 LDRSW X9, [X10]
	0x034FF0C8 ADD X8, X8, X9, 0x4, LSL
	0x034FF0CC ADD X0, X8, 0x138
	0x034FF0D0 LDP X8, X3, [X0]
	0x034FF0D4 MOVZ W1, 0x2
	0x034FF0D8 MOV X0, X21
	0x034FF0DC MOV X2, X22
	0x034FF0E0 BLR X8
	0x034FF0E4 LDR X8, [X19 + 0xF0]
	0x034FF0E8 CBNZ X8, 0x34FF118
	0x034FF0EC ADRP X8, 0xC34000
	0x034FF0F0 LDR X8, [X8 + 0xD20]
	0x034FF0F4 LDR X0, [X8]
	0x034FF0F8 BL 0x1C16F10
	0x034FF0FC MOV X1, X20
	0x034FF100 MOV X2, X31
	0x034FF104 MOV X21, X0
	0x034FF108 BL 0x352AE94
	0x034FF10C MOVZ W8, 0x1
	0x034FF110 STR X21, [X19 + 0xF0]
	0x034FF114 STRB W8, [X19 + 0xDD]
	0x034FF118 LDP X20, X19, [X31 + 0x20]
	0x034FF11C LDP X22, X21, [X31 + 0x10]
	0x034FF120 LDP X30, X23, [X31], #0x30
	0x034FF124 RET
	0x034FF128 BL 0x1C16F20
	0x034FF12C BL 0x1C16F20
	0x034FF130 BL 0x1C16F28
	0x034FF134 BL 0x1C16F44
	0x034FF138 MOV X1, X31
	0x034FF13C BL 0x1C16DEC
	0x034FF140 MOV X0, X21
	0x034FF144 MOV X1, X22
	0x034FF148 BL 0x1C171E0
	0x034FF14C MOV X0, X21
	0x034FF150 MOV X1, X22
	0x034FF154 BL 0x1C171E0
	0x034FF158 BL 0x1C16F20
	0x034FF15C BL 0x1C16F20
	0x034FF160 B 0x34FF180
	0x034FF164 B 0x34FF180
	0x034FF168 B 0x34FF180
	0x034FF16C B 0x34FF180
	0x034FF170 B 0x34FF180
	0x034FF174 B 0x34FF180
	0x034FF178 B 0x34FF180
	0x034FF17C B 0x34FF180
	0x034FF180 MOV X21, X0
	0x034FF184 CMP W1, 0x1
	0x034FF188 B.NE 0x34FF2A8
	0x034FF18C MOV X0, X21
	0x034FF190 BL 0x3EB1AD0
	0x034FF194 MOV X21, X0
	0x034FF198 ADRP X0, 0xBF4000
	0x034FF19C LDR X0, [X0 + 0x7D0]
	0x034FF1A0 BL 0x1C16D08
	0x034FF1A4 LDR X8, [X21]
	0x034FF1A8 LDR X1, [X8]
	0x034FF1AC BL 0x1C17270
	0x034FF1B0 TBZ X0, 0x0, 0x34FF280
	0x034FF1B4 LDR X22, [X21]
	0x034FF1B8 BL 0x3EB1AE0
	0x034FF1BC LDR X8, [X19 + 0x10]
	0x034FF1C0 CBZ X8, 0x34FF27C
	0x034FF1C4 ADRP X0, 0xC34000
	0x034FF1C8 LDR X21, [X8 + 0x48]
	0x034FF1CC LDR X0, [X0 + 0xD30]
	0x034FF1D0 BL 0x1C16D08
	0x034FF1D4 MOV X23, X0
	0x034FF1D8 CBZ X22, 0x34FF1F4
	0x034FF1DC LDR X8, [X22]
	0x034FF1E0 MOV X0, X22
	0x034FF1E4 LDP X9, X1, [X8 + 0x168]
	0x034FF1E8 BLR X9
	0x034FF1EC MOV X1, X0
	0x034FF1F0 B 0x34FF1F8
	0x034FF1F4 MOV X1, X31
	0x034FF1F8 MOV X0, X23
	0x034FF1FC MOV X2, X31
	0x034FF200 BL 0x321B938
	0x034FF204 CBZ X21, 0x34FF27C
	0x034FF208 MOV X22, X0
	0x034FF20C ADRP X0, 0xBFC000
	0x034FF210 LDR X0, [X0 + 0xBC8]
	0x034FF214 BL 0x1C16D08
	0x034FF218 LDR X8, [X21]
	0x034FF21C MOV X1, X0
	0x034FF220 LDRH W9, [X8 + 0x12E]
	0x034FF224 CBZ X9, 0x34FF248
	0x034FF228 LDR X10, [X8 + 0xB0]
	0x034FF22C ADD X10, X10, 0x8
	0x034FF230 LDUR X11, [X10 - 0x8]
	0x034FF234 CMP X11, X1
	0x034FF238 B.EQ 0x34FF258
	0x034FF23C SUBS X9, X9, 0x1
	0x034FF240 ADD X10, X10, 0x10
	0x034FF244 B.NE 0x34FF230
	0x034FF248 MOV X0, X21
	0x034FF24C MOV W2, W31
	0x034FF250 BL 0x1C5C788
	0x034FF254 B 0x34FF264
	0x034FF258 LDRSW X9, [X10]
	0x034FF25C ADD X8, X8, X9, 0x4, LSL
	0x034FF260 ADD X0, X8, 0x138
	0x034FF264 LDP X8, X3, [X0]
	0x034FF268 MOVZ W1, 0x2
	0x034FF26C MOV X0, X21
	0x034FF270 MOV X2, X22
	0x034FF274 BLR X8
	0x034FF278 B 0x34FF0E4
	0x034FF27C BL 0x1C16F20
	0x034FF280 MOVZ W0, 0x8
	0x034FF284 BL 0x3EB1AF0
	0x034FF288 LDR X8, [X21]
	0x034FF28C STR X8, [X0]
	0x034FF290 ADRP X1, 0x9B5000
	0x034FF294 ADD X1, X1, 0xE58
	0x034FF298 MOV X2, X31
	0x034FF29C BL 0x3EB1B00
	0x034FF2A0 MOV X21, X0
	0x034FF2A4 BL 0x3EB1AE0
	0x034FF2A8 MOV X0, X21
	0x034FF2AC BL 0x1D2C690
	0x034FF2B0 BL 0x1990590
	0x034FF2B4 SUB X31, X31, 0x40
	0x034FF2B8 STR X30, [X31 + 0x10]
	0x034FF2BC STP X22, X21, [X31 + 0x20]
	0x034FF2C0 STP X20, X19, [X31 + 0x30]
	0x034FF2C4 ADRP X20, 0xEE0000
	0x034FF2C8 LDRB W8, [X20 + 0xA83]
	0x034FF2CC MOV X19, X0
	0x034FF2D0 TBNZ X8, 0x0, 0x34FF300
	0x034FF2D4 ADRP X0, 0xC34000
	0x034FF2D8 LDR X0, [X0 + 0x9B8]
	0x034FF2DC BL 0x1C16CF4
	0x034FF2E0 ADRP X0, 0xC34000
	0x034FF2E4 LDR X0, [X0 + 0xD38]
	0x034FF2E8 BL 0x1C16CF4
	0x034FF2EC ADRP X0, 0xC34000
	0x034FF2F0 LDR X0, [X0 + 0x9D8]
	0x034FF2F4 BL 0x1C16CF4
	0x034FF2F8 MOVZ W8, 0x1
	0x034FF2FC STRB W8, [X20 + 0xA83]
	0x034FF300 STRB W31, [X31 + 0x1C]
	0x034FF304 STRB W31, [X31 + 0x18]
	0x034FF308 STRB W31, [X31 + 0xC]
	0x034FF30C LDR X8, [X19 + 0x110]
	0x034FF310 CBNZ X8, 0x34FF318
	0x034FF314 BL 0x1C16F20
	0x034FF318 ADRP X22, 0xC34000
	0x034FF31C LDR X22, [X22 + 0xD38]
	0x034FF320 LDR X20, [X8 + 0x40]
	0x034FF324 STRB W31, [X31 + 0x1C]
	0x034FF328 ADD X1, X31, 0x1C
	0x034FF32C MOV X0, X20
	0x034FF330 MOV X2, X31
	0x034FF334 BL 0x33DE64C
	0x034FF338 LDR X8, [X19 + 0x110]
	0x034FF33C CBZ X8, 0x34FF500
	0x034FF340 LDRB W9, [X31 + 0x1C]
	0x034FF344 LDRB W21, [X8 + 0x10]
	0x034FF348 CBZ W9, 0x34FF358
	0x034FF34C MOV X0, X20
	0x034FF350 MOV X1, X31
	0x034FF354 BL 0x33E14E4
	0x034FF358 CBZ W21, 0x34FF540
	0x034FF35C LDR X20, [X19 + 0x108]
	0x034FF360 STRB W31, [X31 + 0x18]
	0x034FF364 ADD X1, X31, 0x18
	0x034FF368 MOV X0, X20
	0x034FF36C MOV X2, X31
	0x034FF370 BL 0x33DE64C
	0x034FF374 LDR X8, [X19 + 0x108]
	0x034FF378 CBZ X8, 0x34FF4B8
	0x034FF37C LDR X8, [X8 + 0x10]
	0x034FF380 CBZ X8, 0x34FF3DC
	0x034FF384 LDR X21, [X8 + 0x28]
	0x034FF388 CBZ X21, 0x34FF4D0
	0x034FF38C LDR X0, [X21 + 0x10]
	0x034FF390 CBZ X0, 0x34FF4D8
	0x034FF394 MOV X1, X31
	0x034FF398 BL 0x364C19C
	0x034FF39C LDRSW X8, [X21 + 0x28]
	0x034FF3A0 CMP X0, X8
	0x034FF3A4 B.LT 0x34FF3DC
	0x034FF3A8 LDR X1, [X21 + 0x20]
	0x034FF3AC CBZ X1, 0x34FF4F0
	0x034FF3B0 LDR X8, [X19]
	0x034FF3B4 LDR W2, [X1 + 0x18]
	0x034FF3B8 LDR X9, [X8 + 0x258]
	0x034FF3BC LDR X3, [X8 + 0x260]
	0x034FF3C0 MOV X0, X19
	0x034FF3C4 BLR X9
	0x034FF3C8 LDR X0, [X19 + 0x108]
	0x034FF3CC CBZ X0, 0x34FF4E8
	0x034FF3D0 LDR X1, [X22]
	0x034FF3D4 BL 0x2EED4E8
	0x034FF3D8 B 0x34FF374
	0x034FF3DC MOV X21, X31
	0x034FF3E0 LDRB W8, [X31 + 0x18]
	0x034FF3E4 CBZ W8, 0x34FF3F4
	0x034FF3E8 MOV X0, X20
	0x034FF3EC MOV X1, X31
	0x034FF3F0 BL 0x33E14E4
	0x034FF3F4 CBNZ X21, 0x34FF5D0
	0x034FF3F8 LDR X20, [X19 + 0x100]
	0x034FF3FC STRB W31, [X31 + 0xC]
	0x034FF400 ADD X1, X31, 0xC
	0x034FF404 MOV X0, X20
	0x034FF408 MOV X2, X31
	0x034FF40C BL 0x33DE64C
	0x034FF410 LDR X8, [X19 + 0x100]
	0x034FF414 CBZ X8, 0x34FF4B0
	0x034FF418 LDR X8, [X8 + 0x10]
	0x034FF41C CBZ X8, 0x34FF484
	0x034FF420 LDR X21, [X8 + 0x28]
	0x034FF424 CBZ X21, 0x34FF4C0
	0x034FF428 LDR X0, [X21 + 0x10]
	0x034FF42C CBZ X0, 0x34FF4C8
	0x034FF430 MOV X1, X31
	0x034FF434 BL 0x364C19C
	0x034FF438 LDRSW X8, [X21 + 0x28]
	0x034FF43C CMP X0, X8
	0x034FF440 B.LT 0x34FF484
	0x034FF444 LDR X0, [X19 + 0x28]
	0x034FF448 CBZ X0, 0x34FF470
	0x034FF44C LDR W8, [X0 + 0x1C]
	0x034FF450 CMP W8, 0x2
	0x034FF454 B.NE 0x34FF470
	0x034FF458 LDR X1, [X21 + 0x20]
	0x034FF45C CBZ X1, 0x34FF4F8
	0x034FF460 LDR X8, [X0]
	0x034FF464 LDR W2, [X1 + 0x18]
	0x034FF468 LDP X9, X3, [X8 + 0x198]
	0x034FF46C BLR X9
	0x034FF470 LDR X0, [X19 + 0x100]
	0x034FF474 CBZ X0, 0x34FF4E0
	0x034FF478 LDR X1, [X22]
	0x034FF47C BL 0x2EED4E8
	0x034FF480 B 0x34FF410
	0x034FF484 MOV X21, X31
	0x034FF488 LDRB W8, [X31 + 0xC]
	0x034FF48C CBZ W8, 0x34FF49C
	0x034FF490 MOV X0, X20
	0x034FF494 MOV X1, X31
	0x034FF498 BL 0x33E14E4
	0x034FF49C CBNZ X21, 0x34FF5D0
	0x034FF4A0 MOV W0, W31
	0x034FF4A4 MOV X1, X31
	0x034FF4A8 BL 0x33E3BEC
	0x034FF4AC B 0x34FF55C
	0x034FF4B0 BL 0x1C16F20
	0x034FF4B4 B 0x34FF5FC
	0x034FF4B8 BL 0x1C16F20
	0x034FF4BC B 0x34FF5FC
	0x034FF4C0 BL 0x1C16F20
	0x034FF4C4 B 0x34FF5FC
	0x034FF4C8 BL 0x1C16F20
	0x034FF4CC B 0x34FF5FC
	0x034FF4D0 BL 0x1C16F20
	0x034FF4D4 B 0x34FF5FC
	0x034FF4D8 BL 0x1C16F20
	0x034FF4DC B 0x34FF5FC
	0x034FF4E0 BL 0x1C16F20
	0x034FF4E4 B 0x34FF5FC
	0x034FF4E8 BL 0x1C16F20
	0x034FF4EC B 0x34FF5FC
	0x034FF4F0 BL 0x1C16F20
	0x034FF4F4 B 0x34FF5FC
	0x034FF4F8 BL 0x1C16F20
	0x034FF4FC B 0x34FF5FC
	0x034FF500 BL 0x1C16F20
	0x034FF504 B 0x34FF5FC
	0x034FF508 B 0x34FF5B8
	0x034FF50C B 0x34FF5A0
	0x034FF510 B 0x34FF514
	0x034FF514 CMP W1, 0x1
	0x034FF518 B.NE 0x34FF5F0
	0x034FF51C BL 0x3EB1AD0
	0x034FF520 LDR X21, [X0]
	0x034FF524 BL 0x3EB1AE0
	0x034FF528 LDRB W8, [X31 + 0x1C]
	0x034FF52C CBZ W8, 0x34FF53C
	0x034FF530 MOV X0, X20
	0x034FF534 MOV X1, X31
	0x034FF538 BL 0x33E14E4
	0x034FF53C CBNZ X21, 0x34FF5D0
	0x034FF540 LDR X8, [X19 + 0x110]
	0x034FF544 CBZ X8, 0x34FF314
	0x034FF548 LDR X0, [X8 + 0x40]
	0x034FF54C CBZ X0, 0x34FF314
	0x034FF550 LDR X8, [X0]
	0x034FF554 LDP X9, X1, [X8 + 0x1D8]
	0x034FF558 BLR X9
	0x034FF55C LDR X8, [X19 + 0x110]
	0x034FF560 CBNZ X8, 0x34FF320
	0x034FF564 B 0x34FF314
	0x034FF568 B 0x34FF5B8
	0x034FF56C B 0x34FF5B8
	0x034FF570 B 0x34FF5A0
	0x034FF574 B 0x34FF5A0
	0x034FF578 B 0x34FF5A0
	0x034FF57C B 0x34FF5A0
	0x034FF580 B 0x34FF5B8
	0x034FF584 B 0x34FF5B8
	0x034FF588 B 0x34FF5A0
	0x034FF58C B 0x34FF5A0
	0x034FF590 B 0x34FF5A0
	0x034FF594 B 0x34FF5B8
	0x034FF598 B 0x34FF5B8
	0x034FF59C B 0x34FF5B8
	0x034FF5A0 CMP W1, 0x1
	0x034FF5A4 B.NE 0x34FF5D8
	0x034FF5A8 BL 0x3EB1AD0
	0x034FF5AC LDR X21, [X0]
	0x034FF5B0 BL 0x3EB1AE0
	0x034FF5B4 B 0x34FF3E0
	0x034FF5B8 CMP W1, 0x1
	0x034FF5BC B.NE 0x34FF5E4
	0x034FF5C0 BL 0x3EB1AD0
	0x034FF5C4 LDR X21, [X0]
	0x034FF5C8 BL 0x3EB1AE0
	0x034FF5CC B 0x34FF488
	0x034FF5D0 MOV X0, X21
	0x034FF5D4 BL 0x1C16F18
	0x034FF5D8 MOV X19, X0
	0x034FF5DC MOV X21, X31
	0x034FF5E0 B 0x34FF648
	0x034FF5E4 MOV X19, X0
	0x034FF5E8 MOV X21, X31
	0x034FF5EC B 0x34FF624
	0x034FF5F0 MOV X19, X0
	0x034FF5F4 MOV X21, X31
	0x034FF5F8 B 0x34FF600
	0x034FF5FC MOV X19, X0
	0x034FF600 LDRB W8, [X31 + 0x1C]
	0x034FF604 CBZ W8, 0x34FF614
	0x034FF608 MOV X0, X20
	0x034FF60C MOV X1, X31
	0x034FF610 BL 0x33E14E4
	0x034FF614 CBZ X21, 0x34FF660
	0x034FF618 MOV X0, X21
	0x034FF61C BL 0x1C16F18
	0x034FF620 MOV X19, X0
	0x034FF624 LDRB W8, [X31 + 0xC]
	0x034FF628 CBZ W8, 0x34FF638
	0x034FF62C MOV X0, X20
	0x034FF630 MOV X1, X31
	0x034FF634 BL 0x33E14E4
	0x034FF638 CBZ X21, 0x34FF660
	0x034FF63C MOV X0, X21
	0x034FF640 BL 0x1C16F18
	0x034FF644 MOV X19, X0
	0x034FF648 LDRB W8, [X31 + 0x18]
	0x034FF64C CBZ W8, 0x34FF65C
	0x034FF650 MOV X0, X20
	0x034FF654 MOV X1, X31
	0x034FF658 BL 0x33E14E4
	0x034FF65C CBNZ X21, 0x34FF668
	0x034FF660 MOV X0, X19
	0x034FF664 BL 0x1D2C690
	0x034FF668 MOV X0, X21
	0x034FF66C BL 0x1C16F18
	0x034FF670 BL 0x1990590
	0x034FF674 STR X30, [X31 - 0x30]!
	0x034FF678 STP X22, X21, [X31 + 0x10]
	0x034FF67C STP X20, X19, [X31 + 0x20]
	0x034FF680 ADRP X21, 0xEE0000
	0x034FF684 ADRP X22, 0xC34000
	0x034FF688 ADRP X19, 0xC34000
	0x034FF68C ADRP X20, 0xC34000
	0x034FF690 LDRB W8, [X21 + 0xA84]
	0x034FF694 LDR X22, [X22 + 0xD40]
	0x034FF698 LDR X19, [X19 + 0xD48]
	0x034FF69C LDR X20, [X20 + 0x778]
	0x034FF6A0 TBNZ X8, 0x0, 0x34FF6D0
	0x034FF6A4 ADRP X0, 0xC34000
	0x034FF6A8 LDR X0, [X0 + 0x778]
	0x034FF6AC BL 0x1C16CF4

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+32], X30
	003 Move [X31+48], X24
	004 Move [X31+56], X23
	005 Move [X31+64], X22
	006 Move [X31+72], X21
	007 Move [X31+80], X20
	008 Move [X31+88], X19
	009 Move X21, 0xEE2000
	010 Move W8, [X21+2682]
	011 Move X20, X1
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {46}
	017 Move X0, 0xC36000
	018 Move X0, [X0+3248]
	019 Call 0x1C17CF4
	020 Move X0, 0xBFE000
	021 Move X0, [X0+3016]
	022 Call 0x1C17CF4
	023 Move X0, 0xC36000
	024 Move X0, [X0+3176]
	025 Call 0x1C17CF4
	026 Move X0, 0xBFF000
	027 Move X0, [X0+2984]
	028 Call 0x1C17CF4
	029 Move X0, 0xC36000
	030 Move X0, [X0+3256]
	031 Call 0x1C17CF4
	032 Move X0, 0xC36000
	033 Move X0, [X0+3264]
	034 Call 0x1C17CF4
	035 Move X0, 0xC36000
	036 Move X0, [X0+3272]
	037 Call 0x1C17CF4
	038 Move X0, 0xC36000
	039 Move X0, [X0+3280]
	040 Call 0x1C17CF4
	041 Move X0, 0xC36000
	042 Move X0, [X0+3288]
	043 Call 0x1C17CF4
	044 Move W8, 1
	045 Move [X21+2682], W8
	046 Move [X31+44], W31
	047 Move [X31+40], W31
	048 Move [X31+28], W31
	049 Move [X31+16], W31
	050 Compare X20, 0
	051 JumpIfEqual {948}
	052 Move X0, X20
	053 Move X1, X31
	054 Call StreamBuffer.get_Length, X0
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Move X8, [X19+16]
	057 Compare X8, 0
	058 JumpIfEqual {948}
	059 Move W9, [X8+64]
	060 Compare W9, 0
	061 JumpIfEqual {197}
	062 Move X19, [X8+72]
	063 Move X0, X20
	064 Move X1, X31
	065 Call StreamBuffer.get_Length, X0
	066 Move [X31+28], W0
	067 Add X0, X31, 28
	068 Move X1, X31
	069 Call Int32.ToString, X0
	070 Move X8, 0xC36000
	071 Move X8, [X8+3264]
	072 Move X1, X0
	073 Move X2, X31
	074 Move X8, [X8]
	075 Move X0, X8
	076 Call String.Concat, X0, X1
	077 Compare X19, 0
	078 JumpIfEqual {948}
	079 Move X10, 0xBFE000
	080 Move X8, [X19]
	081 Move X10, [X10+3016]
	082 Move X20, X0
	083 NotImplemented "Instruction LDRH not yet implemented."
	084 Move X1, [X10]
	085 Compare X9, 0
	086 JumpIfEqual {93}
	087 Move X10, [X8+176]
	088 Add X10, X10, 8
	089 NotImplemented "Instruction LDUR not yet implemented."
	090 NotImplemented "Instruction CMP not yet implemented."
	091 Subtract X9, X9, 1
	092 Add X10, X10, 16
	093 Move X0, X19
	094 Move W2, W31
	095 Call 0x1C5D788
	096 Move X0, X20
	097 Move X1, X31
	098 Call StreamBuffer.ReadByte, X0
	099 And W8, W0, 255
	100 NotImplemented "Instruction CMP not yet implemented."
	101 Move [X31+44], W0
	102 NotImplemented "Instruction CMP not yet implemented."
	103 Move X0, X20
	104 Move X1, X31
	105 Call StreamBuffer.ReadByte, X0
	106 And W8, W0, 127
	107 NotImplemented "Instruction CMP not yet implemented."
	108 Move [X31+40], W8
	109 NotImplemented "Instruction SXTB not yet implemented."
	110 Move TEMP, X8
	111 And TEMP, TEMP, -2147483648
	112 Compare TEMP, -2147483648
	113 JumpIfEqual {161}
	114 Move W1, 2
	115 Move X0, X20
	116 Move W2, W31
	117 Move X3, X31
	118 Call StreamBuffer.Seek, X0, X1, X2
	119 Move X8, [X19+16]
	120 Compare X8, 0
	121 JumpIfEqual {948}
	122 Move W9, [X8+64]
	123 Compare W9, 0
	124 JumpIfEqual {197}
	125 Move X19, [X8+72]
	126 Add X0, X31, 44
	127 Move X1, X31
	128 Call Byte.ToString, X0
	129 Move X8, 0xC36000
	130 Move X8, [X8+3272]
	131 Move X1, X0
	132 Move X2, X31
	133 Move X8, [X8]
	134 Move X0, X8
	135 Call String.Concat, X0, X1
	136 Compare X19, 0
	137 JumpIfEqual {948}
	138 Move X10, 0xBFE000
	139 Move X8, [X19]
	140 Move X10, [X10+3016]
	141 Move X20, X0
	142 NotImplemented "Instruction LDRH not yet implemented."
	143 Move X1, [X10]
	144 Compare X9, 0
	145 JumpIfEqual {152}
	146 Move X10, [X8+176]
	147 Add X10, X10, 8
	148 NotImplemented "Instruction LDUR not yet implemented."
	149 NotImplemented "Instruction CMP not yet implemented."
	150 Subtract X9, X9, 1
	151 Add X10, X10, 16
	152 Move X0, X19
	153 Move W2, W31
	154 Call 0x1C5D788
	155 NotImplemented "Instruction LDRSW not yet implemented."
	156 Add X8, X8, X9
	157 Add X0, X8, 312
	158 Move X8, [X0]
	159 Move X3, [X0+8]
	160 Move W1, 1
	161 Move X21, [X19+240]
	162 Move X0, X20
	163 Move X1, X31
	164 Call StreamBuffer.GetBuffer, X0
	165 Move X22, X0
	166 Move X0, X20
	167 Move X1, X31
	168 Call StreamBuffer.get_Length, X0
	169 Compare X21, 0
	170 JumpIfEqual {708}
	171 Move X10, 0xC36000
	172 Move X8, [X21]
	173 Move X10, [X10+3248]
	174 Move W20, W0
	175 NotImplemented "Instruction LDRH not yet implemented."
	176 Move X1, [X10]
	177 Compare X9, 0
	178 JumpIfEqual {185}
	179 Move X10, [X8+176]
	180 Add X10, X10, 8
	181 NotImplemented "Instruction LDUR not yet implemented."
	182 NotImplemented "Instruction CMP not yet implemented."
	183 Subtract X9, X9, 1
	184 Add X10, X10, 16
	185 Move W2, 6
	186 Move X0, X21
	187 Call 0x1C5D788
	188 NotImplemented "Instruction LDRSW not yet implemented."
	189 Add X8, X8, X9
	190 Add X0, X8, 312
	191 Move X8, [X0]
	192 Move X3, [X0+8]
	193 Move W1, 5
	194 Move X0, X19
	195 Move X2, X20
	196 NotImplemented "Instruction BLR not yet implemented."
	197 Move W20, W31
	198 Move W9, [X10]
	199 Add W9, W9, 6
	200 Add X8, X8, W9
	201 Add X0, X8, 312
	202 Move X8, [X0]
	203 Move X4, [X0+8]
	204 Subtract W3, W20, 2
	205 Move W2, 2
	206 Move X0, X21
	207 Move X1, X22
	208 NotImplemented "Instruction BLR not yet implemented."
	209 Move X8, 0xBFF000
	210 Move X8, [X8+2984]
	211 Move X21, X0
	212 Move X0, [X8]
	213 Call 0x1C17F10
	214 Move X20, X0
	215 Move X1, X21
	216 Move X2, X31
	217 Call StreamBuffer..ctor, X0, X1
	218 Move X24, X19
	219 Add X24, X24, 16
	220 Move X0, [X24]
	221 Compare X0, 0
	222 JumpIfEqual {948}
	223 Move X1, X31
	224 Call PhotonPeer.get_UseByteArraySlicePoolForEvents, X0
	225 Move X8, [X24]
	226 Compare X8, 0
	227 JumpIfEqual {948}
	228 Move W21, W0
	229 Move X0, X8
	230 Move X1, X31
	231 Call PhotonPeer.get_WrapIncomingStructs, X0
	232 Move W9, [X31+40]
	233 And W31, W0, 1
	234 Move W8, 2
	235 NotImplemented "Instruction CSEL not yet implemented."
	236 Subtract W9, W9, 1
	237 NotImplemented "Instruction CMP not yet implemented."
	238 Move X10, -43413504
	239 Add X10, X10, 2745
	240 NotImplemented "Instruction ADR not yet implemented."
	241 Move W12, [X10]
	242 Add X11, X11, X12
	243 NotImplemented "Instruction BFM not yet implemented."
	244 CallNoReturn X11
	245 Move X0, X19
	246 Call PeerBase.InitCallback, X0
	247 Add X0, X31, 40
	248 Move X1, X31
	249 Call Byte.ToString, X0
	250 Move X8, 0xC36000
	251 Move X8, [X8+3280]
	252 Move X1, X0
	253 Move X2, X31
	254 Move X8, [X8]
	255 Move X0, X8
	256 Call String.Concat, X0, X1
	257 Move X2, X0
	258 Move W1, 1
	259 Move X0, X19
	260 Move W20, 1
	261 Call PeerBase.EnqueueDebugReturn, X0, X1, X2
	262 Move X0, [X19+24]
	263 Compare X0, 0
	264 JumpIfEqual {948}
	265 Move X1, X20
	266 Call IProtocol.DeserializeMessage, X0, X1
	267 Move X0, [X24]
	268 Compare X0, 0
	269 JumpIfEqual {948}
	270 Move X1, X31
	271 Call PhotonPeer.get_TrafficStatsEnabled, X0
	272 Move TEMP, X0
	273 And TEMP, TEMP, 1
	274 Compare TEMP, 1
	275 JumpIfNotEqual {462}
	276 Move X8, [X24]
	277 Compare X8, 0
	278 JumpIfEqual {948}
	279 Move X0, [X8+176]
	280 Compare X0, 0
	281 JumpIfEqual {948}
	282 Move W1, [X19+72]
	283 Move X2, X31
	284 Call TrafficStatsGameLevel.CountEvent, X0, X1
	285 Move X0, [X19+192]
	286 Compare X0, 0
	287 JumpIfEqual {948}
	288 Move X1, X31
	289 Call Stopwatch.get_ElapsedMilliseconds, X0
	290 Move X20, X0
	291 Move X0, [X19+24]
	292 Compare X0, 0
	293 JumpIfEqual {709}
	294 Move X9, [X0]
	295 Move X10, [X9+600]
	296 Move X3, [X9+608]
	297 Move X1, X20
	298 Move W2, W8
	299 NotImplemented "Instruction BLR not yet implemented."
	300 Move X20, X0
	301 Move X0, [X24]
	302 Compare X0, 0
	303 JumpIfEqual {948}
	304 Move X1, X31
	305 Call PhotonPeer.get_TrafficStatsEnabled, X0
	306 Move TEMP, X0
	307 And TEMP, TEMP, 1
	308 Compare TEMP, 1
	309 JumpIfNotEqual {487}
	310 Move X8, [X24]
	311 Compare X8, 0
	312 JumpIfEqual {948}
	313 Move X0, [X8+176]
	314 Compare X0, 0
	315 JumpIfEqual {948}
	316 Move W1, [X19+72]
	317 Move X2, X31
	318 Call TrafficStatsGameLevel.CountResult, X0, X1
	319 Move X0, [X19+192]
	320 Compare X0, 0
	321 JumpIfEqual {948}
	322 Move X1, X31
	323 Call Stopwatch.get_ElapsedMilliseconds, X0
	324 Move X21, X0
	325 Move X0, [X24]
	326 Compare X0, 0
	327 JumpIfEqual {948}
	328 Move X1, X31
	329 Call PhotonPeer.get_TrafficStatsEnabled, X0
	330 Move TEMP, X0
	331 And TEMP, TEMP, 1
	332 Compare TEMP, 1
	333 JumpIfNotEqual {432}
	334 Move X8, [X24]
	335 Compare X8, 0
	336 JumpIfEqual {948}
	337 Move X0, [X8+176]
	338 Compare X0, 0
	339 JumpIfEqual {948}
	340 Move W1, [X19+72]
	341 Move X2, X31
	342 Call TrafficStatsGameLevel.CountEvent, X0, X1
	343 Move X0, [X19+192]
	344 Compare X0, 0
	345 JumpIfEqual {948}
	346 Move X1, X31
	347 Call Stopwatch.get_ElapsedMilliseconds, X0
	348 Move X21, X0
	349 Move X0, [X19+24]
	350 Compare X0, 0
	351 JumpIfEqual {710}
	352 Move X9, [X0]
	353 Move X2, [X19+184]
	354 Move X10, [X9+568]
	355 Move X4, [X9+576]
	356 Move X1, X20
	357 Move W3, W8
	358 NotImplemented "Instruction BLR not yet implemented."
	359 Move X20, X0
	360 Move X0, [X24]
	361 Compare X0, 0
	362 JumpIfEqual {948}
	363 Move X1, X31
	364 Call PhotonPeer.get_TrafficStatsEnabled, X0
	365 Move TEMP, X0
	366 And TEMP, TEMP, 1
	367 Compare TEMP, 1
	368 JumpIfNotEqual {510}
	369 Move X8, [X24]
	370 Compare X8, 0
	371 JumpIfEqual {948}
	372 Move X0, [X8+176]
	373 Compare X0, 0
	374 JumpIfEqual {948}
	375 Move W1, [X19+72]
	376 Move X2, X31
	377 Call TrafficStatsGameLevel.CountEvent, X0, X1
	378 Move X0, [X19+192]
	379 Compare X0, 0
	380 JumpIfEqual {948}
	381 Move X1, X31
	382 Call Stopwatch.get_ElapsedMilliseconds, X0
	383 Move X21, X0
	384 Move X0, [X19+24]
	385 Compare X0, 0
	386 JumpIfEqual {711}
	387 Move X8, [X0]
	388 Move X9, [X8+616]
	389 Move X2, [X8+624]
	390 Move X1, X20
	391 NotImplemented "Instruction BLR not yet implemented."
	392 Move X1, X0
	393 Move X0, [X24]
	394 Compare X0, 0
	395 JumpIfEqual {713}
	396 Move X2, X31
	397 Call PhotonPeer.OnDisconnectMessageCall, X0, X1
	398 Move X0, [X19+24]
	399 Compare X0, 0
	400 JumpIfEqual {712}
	401 Move X8, [X0]
	402 Move X9, [X8+600]
	403 Move X3, [X8+608]
	404 Move X1, X20
	405 Move W2, W31
	406 NotImplemented "Instruction BLR not yet implemented."
	407 Move X20, X0
	408 Move X0, [X24]
	409 Compare X0, 0
	410 JumpIfEqual {948}
	411 Move X1, X31
	412 Call PhotonPeer.get_TrafficStatsEnabled, X0
	413 Move TEMP, X0
	414 And TEMP, TEMP, 1
	415 Compare TEMP, 1
	416 JumpIfNotEqual {533}
	417 Move X8, [X24]
	418 Compare X8, 0
	419 JumpIfEqual {948}
	420 Move X0, [X8+176]
	421 Compare X0, 0
	422 JumpIfEqual {948}
	423 Move W1, [X19+72]
	424 Move X2, X31
	425 Call TrafficStatsGameLevel.CountResult, X0, X1
	426 Move X0, [X19+192]
	427 Compare X0, 0
	428 JumpIfEqual {948}
	429 Move X1, X31
	430 Call Stopwatch.get_ElapsedMilliseconds, X0
	431 Move X21, X0
	432 Move W21, W31
	433 Compare X20, 0
	434 JumpIfEqual {948}
	435 Move X0, X20
	436 Move X1, X31
	437 Call StreamBuffer.ToArrayFromPos, X0
	438 Move X0, [X24]
	439 Compare X0, 0
	440 JumpIfEqual {948}
	441 Move X1, X31
	442 Call PhotonPeer.get_TrafficStatsEnabled, X0
	443 Move TEMP, X0
	444 And TEMP, TEMP, 1
	445 Compare TEMP, 1
	446 JumpIfNotEqual {697}
	447 Move X8, [X24]
	448 Compare X8, 0
	449 JumpIfEqual {948}
	450 Move X0, [X19+192]
	451 Compare X0, 0
	452 JumpIfEqual {948}
	453 Move X19, [X8+176]
	454 Move X1, X31
	455 Call Stopwatch.get_ElapsedMilliseconds, X0
	456 Compare X19, 0
	457 JumpIfEqual {948}
	458 Subtract W1, W0, W21
	459 Move X0, X19
	460 Move X2, X31
	461 Call TrafficStatsGameLevel.TimeForRawMessageCallback, X0, X1
	462 Move W20, W31
	463 Move X0, [X24]
	464 Compare X0, 0
	465 JumpIfEqual {948}
	466 Move X1, X31
	467 Call PhotonPeer.get_TrafficStatsEnabled, X0
	468 Move TEMP, X0
	469 And TEMP, TEMP, 1
	470 Compare TEMP, 1
	471 JumpIfNotEqual {697}
	472 Move X8, [X24]
	473 Compare X8, 0
	474 JumpIfEqual {948}
	475 Move X0, [X19+192]
	476 Compare X0, 0
	477 JumpIfEqual {948}
	478 Move X19, [X8+176]
	479 Move X1, X31
	480 Call Stopwatch.get_ElapsedMilliseconds, X0
	481 Compare X19, 0
	482 JumpIfEqual {948}
	483 Subtract W1, W0, W20
	484 Move X0, X19
	485 Move X2, X31
	486 Call TrafficStatsGameLevel.TimeForMessageCallback, X0, X1
	487 Move W21, W31
	488 Move X8, [X24]
	489 Compare X8, 0
	490 JumpIfEqual {948}
	491 Move X22, [X8+72]
	492 Compare X22, 0
	493 JumpIfEqual {948}
	494 Move X10, 0xBFE000
	495 Move X8, [X22]
	496 Move X10, [X10+3016]
	497 NotImplemented "Instruction LDRH not yet implemented."
	498 Move X1, [X10]
	499 Compare X9, 0
	500 JumpIfEqual {507}
	501 Move X10, [X8+176]
	502 Add X10, X10, 8
	503 NotImplemented "Instruction LDUR not yet implemented."
	504 NotImplemented "Instruction CMP not yet implemented."
	505 Subtract X9, X9, 1
	506 Add X10, X10, 16
	507 Move W2, 1
	508 Move X0, X22
	509 Call 0x1C5D788
	510 Move W21, W31
	511 Move X8, [X24]
	512 Compare X8, 0
	513 JumpIfEqual {948}
	514 Move X22, [X8+72]
	515 Compare X22, 0
	516 JumpIfEqual {948}
	517 Move X10, 0xBFE000
	518 Move X8, [X22]
	519 Move X10, [X10+3016]
	520 NotImplemented "Instruction LDRH not yet implemented."
	521 Move X1, [X10]
	522 Compare X9, 0
	523 JumpIfEqual {530}
	524 Move X10, [X8+176]
	525 Add X10, X10, 8
	526 NotImplemented "Instruction LDUR not yet implemented."
	527 NotImplemented "Instruction CMP not yet implemented."
	528 Subtract X9, X9, 1
	529 Add X10, X10, 16
	530 Move W2, 3
	531 Move X0, X22
	532 Call 0x1C5D788
	533 Move W21, W31
	534 Compare X20, 0
	535 JumpIfEqual {948}
	536 Move X22, 0xC36000
	537 Move X22, [X22+3176]
	538 Move W23, [X20+16]
	539 Move X0, [X22]
	540 Move W8, [X0+224]
	541 Compare W8, 0
	542 JumpIfNotEqual {545}
	543 Call 0x1C17DFC
	544 Move X0, [X22]
	545 Move X8, [X0+184]
	546 Move W9, [X8+3]
	547 NotImplemented "Instruction CMP not yet implemented."
	548 Move X0, X19
	549 Move X1, X20
	550 Call PeerBase.DeriveSharedKey, X0, X1
	551 Move W9, [X0+224]
	552 Move W23, [X20+16]
	553 Compare W9, 0
	554 JumpIfNotEqual {558}
	555 Call 0x1C17DFC
	556 Move X8, [X22]
	557 Move X8, [X8+184]
	558 Move W8, [X8+4]
	559 NotImplemented "Instruction CMP not yet implemented."
	560 Move W8, [X19+64]
	561 NotImplemented "Instruction CMP not yet implemented."
	562 Move W8, [X19+32]
	563 And W8, W8, 254
	564 NotImplemented "Instruction CMP not yet implemented."
	565 Move X8, [X24]
	566 Compare X8, 0
	567 JumpIfEqual {948}
	568 Move W9, 1
	569 Move X0, X19
	570 Move [X8+124], W9
	571 Call PeerBase.InitCallback, X0
	572 Move X8, 0xC35000
	573 Move X8, [X8+3256]
	574 Move X9, [X19]
	575 Move X8, [X8]
	576 Move W11, [X9+304]
	577 Move W10, [X8+304]
	578 NotImplemented "Instruction CMP not yet implemented."
	579 Move X9, [X9+200]
	580 Add X9, X9, X10
	581 NotImplemented "Instruction LDUR not yet implemented."
	582 NotImplemented "Instruction CMP not yet implemented."
	583 Move X0, X19
	584 Move X1, X20
	585 Move X2, X31
	586 Call TPeer.ReadPingResult, X0, X1
	587 Move W9, [X10]
	588 Add W9, W9, 1
	589 Add X8, X8, W9
	590 Add X0, X8, 312
	591 Move X8, [X0]
	592 Move X2, [X0+8]
	593 Move X0, X22
	594 Move X1, X20
	595 NotImplemented "Instruction BLR not yet implemented."
	596 Move X0, [X24]
	597 Compare X0, 0
	598 JumpIfEqual {948}
	599 Move X1, X31
	600 Call PhotonPeer.get_TrafficStatsEnabled, X0
	601 Move TEMP, X0
	602 And TEMP, TEMP, 1
	603 Compare TEMP, 1
	604 JumpIfNotEqual {697}
	605 Move X8, [X24]
	606 Compare X8, 0
	607 JumpIfEqual {948}
	608 Compare X20, 0
	609 JumpIfNotEqual {683}
	610 Move W9, [X10]
	611 Add W9, W9, 3
	612 Add X8, X8, W9
	613 Add X0, X8, 312
	614 Move X8, [X0]
	615 Move X2, [X0+8]
	616 Move X0, X22
	617 Move X1, X20
	618 NotImplemented "Instruction BLR not yet implemented."
	619 Move X0, [X24]
	620 Compare X0, 0
	621 JumpIfEqual {948}
	622 Move X1, X31
	623 Call PhotonPeer.get_TrafficStatsEnabled, X0
	624 Move TEMP, X0
	625 And TEMP, TEMP, 1
	626 Compare TEMP, 1
	627 JumpIfNotEqual {647}
	628 Move X8, [X24]
	629 Compare X8, 0
	630 JumpIfEqual {948}
	631 Compare X20, 0
	632 JumpIfEqual {948}
	633 Move X0, [X19+192]
	634 Compare X0, 0
	635 JumpIfEqual {948}
	636 Move X22, [X8+176]
	637 Move W23, [X20+16]
	638 Move X1, X31
	639 Call Stopwatch.get_ElapsedMilliseconds, X0
	640 Compare X22, 0
	641 JumpIfEqual {948}
	642 Subtract W2, W0, W21
	643 Move X0, X22
	644 Move W1, W23
	645 Move X3, X31
	646 Call TrafficStatsGameLevel.TimeForEventCallback, X0, X1, X2
	647 Move X0, [X24]
	648 Compare X0, 0
	649 JumpIfEqual {948}
	650 Move X1, X31
	651 Call PhotonPeer.get_ReuseEventInstance, X0
	652 Move TEMP, X0
	653 And TEMP, TEMP, 1
	654 Compare TEMP, 1
	655 JumpIfNotEqual {697}
	656 Move [X19+184], X20
	657 Move X0, X20
	658 Move X1, X31
	659 Call OperationResponse.ToStringFull, X0
	660 Move X8, 0xC35000
	661 Move X8, [X8+3288]
	662 Move X1, X0
	663 Move X2, X31
	664 Move X8, [X8]
	665 Move X0, X8
	666 Call String.Concat, X0, X1
	667 Move X2, X0
	668 Move W1, 1
	669 Move X0, X19
	670 Call PeerBase.EnqueueDebugReturn, X0, X1, X2
	671 Move X0, [X24]
	672 Compare X0, 0
	673 JumpIfEqual {948}
	674 Move X1, X31
	675 Call PhotonPeer.get_TrafficStatsEnabled, X0
	676 Move TEMP, X0
	677 And TEMP, TEMP, 1
	678 Compare TEMP, 1
	679 JumpIfNotEqual {697}
	680 Move X8, [X24]
	681 Compare X8, 0
	682 JumpIfEqual {948}
	683 Move X0, [X19+192]
	684 Compare X0, 0
	685 JumpIfEqual {948}
	686 Move X19, [X8+176]
	687 Move W20, [X20+16]
	688 Move X1, X31
	689 Call Stopwatch.get_ElapsedMilliseconds, X0
	690 Compare X19, 0
	691 JumpIfEqual {948}
	692 Subtract W2, W0, W21
	693 Move X0, X19
	694 Move W1, W20
	695 Move X3, X31
	696 Call TrafficStatsGameLevel.TimeForResponseCallback, X0, X1, X2
	697 Move W20, 1
	698 Move W0, W20
	699 Move X20, [X31+80]
	700 Move X19, [X31+88]
	701 Move X22, [X31+64]
	702 Move X21, [X31+72]
	703 Move X24, [X31+48]
	704 Move X23, [X31+56]
	705 Move X30, [X31+32]
	706 Add X31, X31, 96
	707 Return X0
	708 Call 0x1C17F20
	709 Call 0x1C17F20
	710 Call 0x1C17F20
	711 Call 0x1C17F20
	712 Call 0x1C17F20
	713 Call 0x1C17F20
	714 Move X20, X0
	715 NotImplemented "Instruction CMP not yet implemented."
	716 Move X0, X20
	717 Call 0x3EB2AD0
	718 Move X20, X0
	719 Move X0, 0xBF5000
	720 Move X0, [X0+2000]
	721 Call 0x1C17D08
	722 Move X8, [X20]
	723 Move X1, [X8]
	724 Call 0x1C18270
	725 Move TEMP, X0
	726 And TEMP, TEMP, 1
	727 Compare TEMP, 1
	728 JumpIfNotEqual {754}
	729 Move X21, [X20]
	730 NotImplemented "Instruction LDRSW not yet implemented."
	731 Add X9, X31, 8
	732 Move [X9], X21
	733 Call 0x3EB2AE0
	734 Move X0, 0xC35000
	735 Move X0, [X0+3296]
	736 Call 0x1C17D08
	737 Move X20, X0
	738 Compare X21, 0
	739 JumpIfEqual {746}
	740 Move X8, [X21]
	741 Move X0, X21
	742 Move X9, [X8+360]
	743 Move X1, [X8+368]
	744 NotImplemented "Instruction BLR not yet implemented."
	745 Move X1, X0
	746 Move X1, X31
	747 Move X0, X20
	748 Move X2, X31
	749 Call String.Concat, X0, X1
	750 Move X2, X0
	751 Move W1, 1
	752 Move X0, X19
	753 Call PeerBase.EnqueueDebugReturn, X0, X1, X2
	754 Move W0, 8
	755 Call 0x3EB2AF0
	756 Move X8, [X20]
	757 Move [X0], X8
	758 Move X1, 0x9B6000
	759 Add X1, X1, 3672
	760 Move X2, X31
	761 Call 0x3EB2B00
	762 Move X20, X0
	763 Call 0x3EB2AE0
	764 Move X20, X0
	765 NotImplemented "Instruction CMP not yet implemented."
	766 Move X0, X20
	767 Call 0x3EB2AD0
	768 Move X20, X0
	769 Move X0, 0xBF5000
	770 Move X0, [X0+2000]
	771 Call 0x1C17D08
	772 Move X8, [X20]
	773 Move X1, [X8]
	774 Call 0x1C18270
	775 Move TEMP, X0
	776 And TEMP, TEMP, 1
	777 Compare TEMP, 1
	778 JumpIfNotEqual {784}
	779 Move X21, [X20]
	780 Move [X31+8], X21
	781 Call 0x3EB2AE0
	782 Move X0, 0xC35000
	783 Move X0, [X0+3304]
	784 Move W0, 8
	785 Call 0x3EB2AF0
	786 Move X8, [X20]
	787 Move [X0], X8
	788 Move X1, 0x9B6000
	789 Add X1, X1, 3672
	790 Move X2, X31
	791 Call 0x3EB2B00
	792 Move X20, X0
	793 Call 0x3EB2AE0
	794 Move X20, X0
	795 NotImplemented "Instruction CMP not yet implemented."
	796 Move X0, X20
	797 Call 0x3EB2AD0
	798 Move X20, X0
	799 Move X0, 0xBF5000
	800 Move X0, [X0+2000]
	801 Call 0x1C17D08
	802 Move X8, [X20]
	803 Move X1, [X8]
	804 Call 0x1C18270
	805 Move TEMP, X0
	806 And TEMP, TEMP, 1
	807 Compare TEMP, 1
	808 JumpIfNotEqual {814}
	809 Move X21, [X20]
	810 Move [X31+8], X21
	811 Call 0x3EB2AE0
	812 Move X0, 0xC35000
	813 Move X0, [X0+3312]
	814 Move W0, 8
	815 Call 0x3EB2AF0
	816 Move X8, [X20]
	817 Move [X0], X8
	818 Move X1, 0x9B6000
	819 Add X1, X1, 3672
	820 Move X2, X31
	821 Call 0x3EB2B00
	822 Move X20, X0
	823 Call 0x3EB2AE0
	824 Move X20, X0
	825 NotImplemented "Instruction CMP not yet implemented."
	826 Move X0, X20
	827 Call 0x3EB2AD0
	828 Move X20, X0
	829 Move X0, 0xBF5000
	830 Move X0, [X0+2000]
	831 Call 0x1C17D08
	832 Move X8, [X20]
	833 Move X1, [X8]
	834 Call 0x1C18270
	835 Move TEMP, X0
	836 And TEMP, TEMP, 1
	837 Compare TEMP, 1
	838 JumpIfNotEqual {864}
	839 Move X21, [X20]
	840 Move [X31+8], X21
	841 Call 0x3EB2AE0
	842 Move X0, 0xC35000
	843 Move X0, [X0+3320]
	844 Call 0x1C17D08
	845 Move X20, X0
	846 Compare X21, 0
	847 JumpIfEqual {854}
	848 Move X8, [X21]
	849 Move X0, X21
	850 Move X9, [X8+360]
	851 Move X1, [X8+368]
	852 NotImplemented "Instruction BLR not yet implemented."
	853 Move X1, X0
	854 Move X1, X31
	855 Move X0, X20
	856 Move X2, X31
	857 Call String.Concat, X0, X1
	858 Move X2, X0
	859 Move W1, 1
	860 Move X0, X19
	861 Call PeerBase.EnqueueDebugReturn, X0, X1, X2
	862 Move W20, W31
	863 Move [X31+16], W31
	864 Move W0, 8
	865 Call 0x3EB2AF0
	866 Move X8, [X20]
	867 Move [X0], X8
	868 Move X1, 0x9B6000
	869 Add X1, X1, 3672
	870 Move X2, X31
	871 Call 0x3EB2B00
	872 Move X20, X0
	873 Call 0x3EB2AE0
	874 Move X20, X0
	875 NotImplemented "Instruction CMP not yet implemented."
	876 Move X0, X20
	877 Call 0x3EB2AD0
	878 Move X20, X0
	879 Move X0, 0xBF5000
	880 Move X0, [X0+2000]
	881 Call 0x1C17D08
	882 Move X8, [X20]
	883 Move X1, [X8]
	884 Call 0x1C18270
	885 Move TEMP, X0
	886 And TEMP, TEMP, 1
	887 Compare TEMP, 1
	888 JumpIfNotEqual {972}
	889 Move X20, [X20]
	890 NotImplemented "Instruction LDRSW not yet implemented."
	891 Add X9, X31, 8
	892 Move [X9], X20
	893 Add W8, W8, 1
	894 Move [X31+16], W8
	895 Call 0x3EB2AE0
	896 Move X8, [X19+16]
	897 Compare X8, 0
	898 JumpIfEqual {948}
	899 Move W9, [X8+64]
	900 Compare W9, 0
	901 JumpIfEqual {958}
	902 Move X19, [X8+72]
	903 Add X0, X31, 40
	904 Move X1, X31
	905 Call Byte.ToString, X0
	906 Compare X20, 0
	907 JumpIfEqual {948}
	908 Move X8, [X20]
	909 Move X21, X0
	910 Move X0, X20
	911 Move X9, [X8+360]
	912 Move X1, [X8+368]
	913 NotImplemented "Instruction BLR not yet implemented."
	914 Move X22, X0
	915 Move X0, 0xC35000
	916 Move X0, [X0+3328]
	917 Call 0x1C17D08
	918 Move X23, X0
	919 Move X0, 0xC35000
	920 Move X0, [X0+3336]
	921 Call 0x1C17D08
	922 Move X2, X0
	923 Move X0, X23
	924 Move X1, X21
	925 Move X3, X22
	926 Move X4, X31
	927 Call String.Concat, X0, X1, X2, X3
	928 Compare X19, 0
	929 JumpIfEqual {948}
	930 Move X21, X0
	931 Move X0, 0xBFD000
	932 Move X0, [X0+3016]
	933 Call 0x1C17D08
	934 Move X8, [X19]
	935 Move X1, X0
	936 NotImplemented "Instruction LDRH not yet implemented."
	937 Compare X9, 0
	938 JumpIfEqual {945}
	939 Move X10, [X8+176]
	940 Add X10, X10, 8
	941 NotImplemented "Instruction LDUR not yet implemented."
	942 NotImplemented "Instruction CMP not yet implemented."
	943 Subtract X9, X9, 1
	944 Add X10, X10, 16
	945 Move X0, X19
	946 Move W2, W31
	947 Call 0x1C5D788
	948 Call 0x1C17F20
	949 NotImplemented "Instruction LDRSW not yet implemented."
	950 Add X8, X8, X9
	951 Add X0, X8, 312
	952 Move X8, [X0]
	953 Move X3, [X0+8]
	954 Move W1, 1
	955 Move X0, X19
	956 Move X2, X21
	957 NotImplemented "Instruction BLR not yet implemented."
	958 Move X0, 0xBFD000
	959 Move X0, [X0+3680]
	960 Call 0x1C17D08
	961 Move W8, [X0+224]
	962 Compare W8, 0
	963 JumpIfNotEqual {965}
	964 Call 0x1C17DFC
	965 Move X0, X20
	966 Move X1, X31
	967 Call SupportClass.WriteStackTrace, X0
	968 Move W8, [X31+16]
	969 Move W20, W31
	970 Subtract W8, W8, 1
	971 Move [X31+16], W8
	972 Move W0, 8
	973 Call 0x3EB2AF0
	974 Move X8, [X20]
	975 Move [X0], X8
	976 Move X1, 0x9B6000
	977 Add X1, X1, 3672
	978 Move X2, X31
	979 Call 0x3EB2B00
	980 Move X20, X0
	981 Call 0x3EB2AE0
	982 Move X0, X20
	983 Call 0x1D2D690
	984 Call 0x1991590

Method: System.Void UpdateRoundTripTimeAndVariance(System.Int32 lastRoundtripTime)

Disassembly:
	0x034F8834 CBZ X0, 0x34F887C
	0x034F8838 LDR W8, [X0 + 0x18]
	0x034F883C CBZ W8, 0x34F8878
	0x034F8840 MOVZ W9, 0xF3
	0x034F8844 CMP W8, 0x1
	0x034F8848 STRB W9, [X0 + 0x20]
	0x034F884C B.EQ 0x34F8878
	0x034F8850 ADRP X8, 0xC3B000
	0x034F8854 LDR X8, [X8 + 0x760]
	0x034F8858 MOVZ W9, 0x2
	0x034F885C STRB W9, [X0 + 0x21]
	0x034F8860 LDP X20, X19, [X31 + 0x10]
	0x034F8864 LDR X8, [X8]
	0x034F8868 LDR X8, [X8 + 0xB8]
	0x034F886C STR X0, [X8]
	0x034F8870 LDR X30, [X31], #0x20
	0x034F8874 RET
	0x034F8878 BL 0x1C16F28
	0x034F887C BL 0x1C16F20
	0x034F8880 STR X30, [X31 - 0x10]!
	0x034F8884 LDR X0, [X0 + 0x28]
	0x034F8888 CBZ X0, 0x34F889C
	0x034F888C LDR X8, [X0]
	0x034F8890 LDP X2, X1, [X8 + 0x188]
	0x034F8894 LDR X30, [X31], #0x10
	0x034F8898 BR X2
	0x034F889C BL 0x1C16F20
	0x034F88A0 STR X30, [X31 - 0x10]!
	0x034F88A4 LDR X8, [X0 + 0x10]

ISIL:
	001 Move TEMP, X1
	002 And TEMP, TEMP, -2147483648
	003 Compare TEMP, -2147483648
	004 JumpIfEqual {32}
	005 Move W9, [X0+116]
	006 Move W10, [X0+120]
	007 Subtract W8, W1, W9
	008 Add W11, W8, 7
	009 NotImplemented "Instruction CMP not yet implemented."
	010 NotImplemented "Instruction CSEL not yet implemented."
	011 Add W8, W9, W8
	012 Subtract W11, W1, W8
	013 Add W12, W11, 3
	014 NotImplemented "Instruction CMP not yet implemented."
	015 NotImplemented "Instruction CSEL not yet implemented."
	016 NotImplemented "Instruction CMP not yet implemented."
	017 Move W9, [X0+128]
	018 NotImplemented "Instruction SBFM not yet implemented."
	019 Add W12, W10, 3
	020 NotImplemented "Instruction CSNEG not yet implemented."
	021 NotImplemented "Instruction CMP not yet implemented."
	022 NotImplemented "Instruction CSEL not yet implemented."
	023 NotImplemented "Instruction CMP not yet implemented."
	024 Subtract W9, W10, W12
	025 Add W9, W11, W9
	026 Move [X0+116], W8
	027 Move [X0+120], W9
	028 Move [X0+128], W8
	029 Move W8, [X0+132]
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move [X0+132], W9
	032 Return 

Method: System.Boolean ExchangeKeysForEncryption(System.Object lockObject)

Disassembly:
	0x034FF87C MOV X2, X20
	0x034FF880 LDP X20, X19, [X31 + 0x10]
	0x034FF884 MOV W1, W21
	0x034FF888 LDP X30, X21, [X31], #0x20
	0x034FF88C BR X4
	0x034FF890 BL 0x1C16F20
	0x034FF894 MOV X1, X31
	0x034FF898 B 0x33BDD8C
	0x034FF89C STR X30, [X31 - 0x20]!
	0x034FF8A0 STP X20, X19, [X31 + 0x10]
	0x034FF8A4 ADRP X19, 0xEE0000
	0x034FF8A8 LDRB W8, [X19 + 0xA87]
	0x034FF8AC MOV X20, X0
	0x034FF8B0 TBNZ X8, 0x0, 0x34FF8C8
	0x034FF8B4 ADRP X0, 0xBFC000
	0x034FF8B8 LDR X0, [X0 + 0xBC8]
	0x034FF8BC BL 0x1C16CF4
	0x034FF8C0 MOVZ W8, 0x1
	0x034FF8C4 STRB W8, [X19 + 0xA87]
	0x034FF8C8 LDR X0, [X20 + 0x10]
	0x034FF8CC CBZ X0, 0x34FF954
	0x034FF8D0 MOV X1, X31
	0x034FF8D4 BL 0x34F104C
	0x034FF8D8 CBZ X0, 0x34FF954
	0x034FF8DC ADRP X10, 0xBFC000
	0x034FF8E0 LDR X8, [X0]
	0x034FF8E4 LDR X10, [X10 + 0xBC8]
	0x034FF8E8 LDR W20, [X20 + 0x18]
	0x034FF8EC MOV X19, X0
	0x034FF8F0 LDRH W9, [X8 + 0x12E]
	0x034FF8F4 LDR X1, [X10]
	0x034FF8F8 CBZ X9, 0x34FF91C
	0x034FF8FC LDR X10, [X8 + 0xB0]
	0x034FF900 ADD X10, X10, 0x8
	0x034FF904 LDUR X11, [X10 - 0x8]
	0x034FF908 CMP X11, X1
	0x034FF90C B.EQ 0x34FF92C
	0x034FF910 SUBS X9, X9, 0x1
	0x034FF914 ADD X10, X10, 0x10
	0x034FF918 B.NE 0x34FF904
	0x034FF91C MOVZ W2, 0x2
	0x034FF920 MOV X0, X19
	0x034FF924 BL 0x1C5C788
	0x034FF928 B 0x34FF93C
	0x034FF92C LDR W9, [X10]
	0x034FF930 ADD W9, W9, 0x2
	0x034FF934 ADD X8, X8, W9, 0x4, SXTW
	0x034FF938 ADD X0, X8, 0x138
	0x034FF93C LDP X3, X2, [X0]
	0x034FF940 MOV X0, X19
	0x034FF944 MOV W1, W20
	0x034FF948 LDP X20, X19, [X31 + 0x10]
	0x034FF94C LDR X30, [X31], #0x20
	0x034FF950 BR X3
	0x034FF954 BL 0x1C16F20
	0x034FF958 STP X30, X21, [X31 - 0x20]!
	0x034FF95C STP X20, X19, [X31 + 0x10]
	0x034FF960 ADRP X21, 0xEE0000
	0x034FF964 LDRB W8, [X21 + 0xA88]
	0x034FF968 MOV X20, X1
	0x034FF96C MOV X19, X0
	0x034FF970 TBNZ X8, 0x0, 0x34FF988
	0x034FF974 ADRP X0, 0xC34000
	0x034FF978 LDR X0, [X0 + 0xD50]
	0x034FF97C BL 0x1C16CF4
	0x034FF980 MOVZ W8, 0x1
	0x034FF984 STRB W8, [X21 + 0xA88]
	0x034FF988 MOV X0, X19
	0x034FF98C MOV X1, X20
	0x034FF990 MOV X2, X31
	0x034FF994 BL 0x34F8B1C
	0x034FF998 MOVZ W1, 0x3
	0x034FF99C MOV X0, X19
	0x034FF9A0 MOV X2, X31
	0x034FF9A4 BL 0x34F9710
	0x034FF9A8 TBZ X0, 0x0, 0x34FF9D0
	0x034FF9AC ADRP X8, 0xC34000
	0x034FF9B0 LDR X8, [X8 + 0xD50]
	0x034FF9B4 MOV X0, X19
	0x034FF9B8 LDP X20, X19, [X31 + 0x10]
	0x034FF9BC MOVZ W1, 0x3
	0x034FF9C0 LDR X2, [X8]
	0x034FF9C4 MOV X3, X31
	0x034FF9C8 LDP X30, X21, [X31], #0x20
	0x034FF9CC B 0x34F973C
	0x034FF9D0 LDP X20, X19, [X31 + 0x10]
	0x034FF9D4 LDP X30, X21, [X31], #0x20
	0x034FF9D8 RET
	0x034FF9DC STP X30, X21, [X31 - 0x20]!
	0x034FF9E0 STP X20, X19, [X31 + 0x10]
	0x034FF9E4 ADRP X19, 0xEE0000
	0x034FF9E8 LDRB W8, [X19 + 0xA89]
	0x034FF9EC MOV X20, X0
	0x034FF9F0 TBNZ X8, 0x0, 0x34FFA20
	0x034FF9F4 ADRP X0, 0xC34000
	0x034FF9F8 LDR X0, [X0 + 0xD58]
	0x034FF9FC BL 0x1C16CF4
	0x034FFA00 ADRP X0, 0xC20000
	0x034FFA04 LDR X0, [X0 + 0x1D0]
	0x034FFA08 BL 0x1C16CF4
	0x034FFA0C ADRP X0, 0xC20000
	0x034FFA10 LDR X0, [X0 + 0x1D8]
	0x034FFA14 BL 0x1C16CF4
	0x034FFA18 MOVZ W8, 0x1
	0x034FFA1C STRB W8, [X19 + 0xA89]
	0x034FFA20 MOV X0, X20
	0x034FFA24 MOV X1, X31
	0x034FFA28 BL 0x34F8BA0
	0x034FFA2C MOV W19, W0
	0x034FFA30 TBZ X0, 0x0, 0x34FFAA8
	0x034FFA34 MOVZ W8, 0x1
	0x034FFA38 STR W8, [X20 + 0x1C]
	0x034FFA3C ADRP X8, 0xC20000
	0x034FFA40 LDR X8, [X8 + 0x1D0]
	0x034FFA44 LDR X0, [X8]
	0x034FFA48 BL 0x1C16F10
	0x034FFA4C ADRP X8, 0xC34000
	0x034FFA50 LDR X8, [X8 + 0xD58]
	0x034FFA54 MOV X1, X20
	0x034FFA58 MOV X3, X31
	0x034FFA5C MOV X21, X0
	0x034FFA60 LDR X2, [X8]
	0x034FFA64 BL 0x33DD08C
	0x034FFA68 ADRP X8, 0xC20000
	0x034FFA6C LDR X8, [X8 + 0x1D8]
	0x034FFA70 LDR X0, [X8]
	0x034FFA74 BL 0x1C16F10
	0x034FFA78 MOV X1, X21
	0x034FFA7C MOV X2, X31
	0x034FFA80 MOV X20, X0
	0x034FFA84 BL 0x33E67F0
	0x034FFA88 CBZ X20, 0x34FFAB8
	0x034FFA8C MOVZ W1, 0x1
	0x034FFA90 MOV X0, X20
	0x034FFA94 MOV X2, X31
	0x034FFA98 BL 0x33E7018
	0x034FFA9C MOV X0, X20
	0x034FFAA0 MOV X1, X31
	0x034FFAA4 BL 0x33E6A6C
	0x034FFAA8 AND W0, W19, 0x1
	0x034FFAAC LDP X20, X19, [X31 + 0x10]
	0x034FFAB0 LDP X30, X21, [X31], #0x20
	0x034FFAB4 RET
	0x034FFAB8 BL 0x1C16F20
	0x034FFABC SUB X31, X31, 0xE0
	0x034FFAC0 STP X29, X30, [X31 + 0x80]
	0x034FFAC4 STP X28, X27, [X31 + 0x90]
	0x034FFAC8 STP X26, X25, [X31 + 0xA0]
	0x034FFACC STP X24, X23, [X31 + 0xB0]
	0x034FFAD0 STP X22, X21, [X31 + 0xC0]
	0x034FFAD4 STP X20, X19, [X31 + 0xD0]
	0x034FFAD8 ADRP X20, 0xEE0000
	0x034FFADC ADRP X25, 0xBF6000
	0x034FFAE0 LDRB W8, [X20 + 0xA8A]
	0x034FFAE4 LDR X25, [X25 + 0xA28]
	0x034FFAE8 MOV X19, X0
	0x034FFAEC TBNZ X8, 0x0, 0x34FFC60
	0x034FFAF0 ADRP X0, 0xBFF000
	0x034FFAF4 LDR X0, [X0 + 0xE68]
	0x034FFAF8 BL 0x1C16CF4
	0x034FFAFC ADRP X0, 0xC27000
	0x034FFB00 LDR X0, [X0 + 0xCF0]
	0x034FFB04 BL 0x1C16CF4
	0x034FFB08 ADRP X0, 0xC1C000
	0x034FFB0C LDR X0, [X0 + 0x5B0]
	0x034FFB10 BL 0x1C16CF4
	0x034FFB14 ADRP X0, 0xBF4000
	0x034FFB18 LDR X0, [X0 + 0x618]
	0x034FFB1C BL 0x1C16CF4
	0x034FFB20 ADRP X0, 0xBF6000
	0x034FFB24 LDR X0, [X0 + 0xA50]
	0x034FFB28 BL 0x1C16CF4
	0x034FFB2C ADRP X0, 0xBFC000
	0x034FFB30 LDR X0, [X0 + 0x7D8]
	0x034FFB34 BL 0x1C16CF4
	0x034FFB38 ADRP X0, 0xC32000
	0x034FFB3C LDR X0, [X0 + 0x1C0]
	0x034FFB40 BL 0x1C16CF4
	0x034FFB44 ADRP X0, 0xBFC000
	0x034FFB48 LDR X0, [X0 + 0x558]
	0x034FFB4C BL 0x1C16CF4
	0x034FFB50 ADRP X0, 0xC34000
	0x034FFB54 LDR X0, [X0 + 0xD60]
	0x034FFB58 BL 0x1C16CF4
	0x034FFB5C ADRP X0, 0xC34000
	0x034FFB60 LDR X0, [X0 + 0xD68]
	0x034FFB64 BL 0x1C16CF4
	0x034FFB68 ADRP X0, 0xC34000
	0x034FFB6C LDR X0, [X0 + 0xD70]
	0x034FFB70 BL 0x1C16CF4
	0x034FFB74 ADRP X0, 0xC34000
	0x034FFB78 LDR X0, [X0 + 0xB20]
	0x034FFB7C BL 0x1C16CF4
	0x034FFB80 ADRP X0, 0xBF4000
	0x034FFB84 LDR X0, [X0 + 0xAC8]
	0x034FFB88 BL 0x1C16CF4
	0x034FFB8C ADRP X0, 0xC34000
	0x034FFB90 LDR X0, [X0 + 0xD78]
	0x034FFB94 BL 0x1C16CF4
	0x034FFB98 ADRP X0, 0xC34000
	0x034FFB9C LDR X0, [X0 + 0xD80]
	0x034FFBA0 BL 0x1C16CF4
	0x034FFBA4 ADRP X0, 0xBF6000
	0x034FFBA8 LDR X0, [X0 + 0xA28]
	0x034FFBAC BL 0x1C16CF4
	0x034FFBB0 ADRP X0, 0xC34000
	0x034FFBB4 LDR X0, [X0 + 0xD88]
	0x034FFBB8 BL 0x1C16CF4
	0x034FFBBC ADRP X0, 0xC34000
	0x034FFBC0 LDR X0, [X0 + 0xD90]
	0x034FFBC4 BL 0x1C16CF4
	0x034FFBC8 ADRP X0, 0xBF4000
	0x034FFBCC LDR X0, [X0 + 0xDD8]
	0x034FFBD0 BL 0x1C16CF4
	0x034FFBD4 ADRP X0, 0xC34000
	0x034FFBD8 LDR X0, [X0 + 0xD98]
	0x034FFBDC BL 0x1C16CF4
	0x034FFBE0 ADRP X0, 0xC34000
	0x034FFBE4 LDR X0, [X0 + 0xDA0]
	0x034FFBE8 BL 0x1C16CF4
	0x034FFBEC ADRP X0, 0xC34000
	0x034FFBF0 LDR X0, [X0 + 0xDA8]
	0x034FFBF4 BL 0x1C16CF4
	0x034FFBF8 ADRP X0, 0xC34000
	0x034FFBFC LDR X0, [X0 + 0xAB0]
	0x034FFC00 BL 0x1C16CF4
	0x034FFC04 ADRP X0, 0xC34000
	0x034FFC08 LDR X0, [X0 + 0xDB0]
	0x034FFC0C BL 0x1C16CF4
	0x034FFC10 ADRP X0, 0xBFD000
	0x034FFC14 LDR X0, [X0 + 0x988]
	0x034FFC18 BL 0x1C16CF4
	0x034FFC1C ADRP X0, 0xC34000
	0x034FFC20 LDR X0, [X0 + 0xDB8]
	0x034FFC24 BL 0x1C16CF4
	0x034FFC28 ADRP X0, 0xC34000
	0x034FFC2C LDR X0, [X0 + 0xDC0]
	0x034FFC30 BL 0x1C16CF4
	0x034FFC34 ADRP X0, 0xC34000
	0x034FFC38 LDR X0, [X0 + 0xDC8]
	0x034FFC3C BL 0x1C16CF4
	0x034FFC40 ADRP X0, 0xC34000
	0x034FFC44 LDR X0, [X0 + 0xDD0]
	0x034FFC48 BL 0x1C16CF4
	0x034FFC4C ADRP X0, 0xC34000
	0x034FFC50 LDR X0, [X0 + 0xDD8]
	0x034FFC54 BL 0x1C16CF4
	0x034FFC58 MOVZ W8, 0x1
	0x034FFC5C STRB W8, [X20 + 0xA8A]
	0x034FFC60 STP X31, X31, [X31 + 0x70]
	0x034FFC64 STR X31, [X31 + 0x68]
	0x034FFC68 STR W31, [X31 + 0x64]
	0x034FFC6C LDR X21, [X19 + 0x28]
	0x034FFC70 LDR X0, [X25]
	0x034FFC74 BL 0x1C16F10
	0x034FFC78 MOV X20, X0
	0x034FFC7C MOV X1, X21
	0x034FFC80 MOV X2, X31
	0x034FFC84 BL 0x36196A8
	0x034FFC88 LDR X0, [X25]
	0x034FFC8C LDR W8, [X0 + 0xE0]
	0x034FFC90 CBNZ W8, 0x34FFC98
	0x034FFC94 BL 0x1C16DFC
	0x034FFC98 MOV X0, X20
	0x034FFC9C MOV X1, X31
	0x034FFCA0 MOV X2, X31
	0x034FFCA4 BL 0x361A090
	0x034FFCA8 TBZ X0, 0x0, 0x34FFD4C
	0x034FFCAC CBZ X20, 0x3500B34
	0x034FFCB0 MOV X0, X20
	0x034FFCB4 MOV X1, X31
	0x034FFCB8 BL 0x361BD78
	0x034FFCBC CMP W0, 0x2
	0x034FFCC0 B.NE 0x34FFD4C
	0x034FFCC4 MOV X0, X20
	0x034FFCC8 MOV X1, X31
	0x034FFCCC BL 0x361C394
	0x034FFCD0 MOV X1, X31
	0x034FFCD4 BL 0x369B574
	0x034FFCD8 MOV X21, X0
	0x034FFCDC CBZ X0, 0x35007C4
	0x034FFCE0 LDR W8, [X21 + 0x18]
	0x034FFCE4 CMP W8, 0x1
	0x034FFCE8 B.LT 0x34FFD4C
	0x034FFCEC MOV W22, W31
	0x034FFCF0 CMP W22, W8
	0x034FFCF4 B.CS 0x35007B8
	0x034FFCF8 ADD X8, X21, W22, 0x3, SXTW
	0x034FFCFC LDR X0, [X8 + 0x20]
	0x034FFD00 CBZ X0, 0x35007BC
	0x034FFD04 MOV X1, X31
	0x034FFD08 BL 0x366D604
	0x034FFD0C CMP W0, 0x17
	0x034FFD10 B.EQ 0x34FFD28
	0x034FFD14 LDR W8, [X21 + 0x18]
	0x034FFD18 ADD W22, W22, 0x1
	0x034FFD1C CMP W22, W8
	0x034FFD20 B.LT 0x34FFCF0
	0x034FFD24 B 0x34FFD4C
	0x034FFD28 MOVZ W8, 0x1
	0x034FFD2C STRB W8, [X19 + 0x44]
	0x034FFD30 ADRP X8, 0xC34000
	0x034FFD34 LDR X0, [X19 + 0x28]
	0x034FFD38 LDR X8, [X8 + 0xAB0]
	0x034FFD3C LDR X1, [X8]
	0x034FFD40 MOV X2, X31
	0x034FFD44 BL 0x321B938
	0x034FFD48 STR X0, [X19 + 0x28]
	0x034FFD4C ADRP X8, 0xC32000
	0x034FFD50 LDR X8, [X8 + 0x1C0]
	0x034FFD54 LDR X0, [X8]
	0x034FFD58 BL 0x1C16F10
	0x034FFD5C MOV X1, X31
	0x034FFD60 MOV X20, X0
	0x034FFD64 BL 0x36D822C
	0x034FFD68 STR X20, [X19 + 0x58]
	0x034FFD6C CBZ X20, 0x3500B34
	0x034FFD70 LDR X20, [X20 + 0x10]
	0x034FFD74 MOV X0, X19
	0x034FFD78 MOV X1, X31
	0x034FFD7C BL 0x34F8A00
	0x034FFD80 CBZ X20, 0x3500B34
	0x034FFD84 ADRP X21, 0xBF6000
	0x034FFD88 LDR X21, [X21 + 0xA50]
	0x034FFD8C MOV X1, X0
	0x034FFD90 MOV X0, X20
	0x034FFD94 MOV X2, X31
	0x034FFD98 BL 0x36D9744
	0x034FFD9C LDR X0, [X21]
	0x034FFDA0 BL 0x1C16F10
	0x034FFDA4 MOVZ W1, 0x1B58
	0x034FFDA8 MOV X2, X31
	0x034FFDAC MOV X21, X0
	0x034FFDB0 BL 0x33DFC6C
	0x034FFDB4 LDR X0, [X25]
	0x034FFDB8 LDR X20, [X19 + 0x58]
	0x034FFDBC LDR X23, [X19 + 0x28]
	0x034FFDC0 BL 0x1C16F10
	0x034FFDC4 MOV X1, X23
	0x034FFDC8 MOV X2, X31
	0x034FFDCC MOV X22, X0
	0x034FFDD0 BL 0x36196A8
	0x034FFDD4 CBZ X21, 0x3500B34
	0x034FFDD8 MOV X0, X21
	0x034FFDDC MOV X1, X31
	0x034FFDE0 BL 0x33DFA08
	0x034FFDE4 CBZ X20, 0x3500B34
	0x034FFDE8 MOV X2, X0
	0x034FFDEC MOV X0, X20
	0x034FFDF0 MOV X1, X22
	0x034FFDF4 MOV X3, X31
	0x034FFDF8 BL 0x36D8798
	0x034FFDFC MOV X20, X0
	0x034FFE00 CBZ X0, 0x35007C0
	0x034FFE04 MOV X0, X20
	0x034FFE08 MOV X1, X31
	0x034FFE0C BL 0x33F2EC4
	0x034FFE10 MOV X0, X20
	0x034FFE14 MOV X1, X31
	0x034FFE18 BL 0x33F0514
	0x034FFE1C TBZ X0, 0x0, 0x34FFE74
	0x034FFE20 MOV X0, X20
	0x034FFE24 MOV X1, X31
	0x034FFE28 BL 0x33F04D8
	0x034FFE2C ADRP X8, 0xC34000
	0x034FFE30 LDR X8, [X8 + 0xDB0]
	0x034FFE34 LDR X20, [X8]
	0x034FFE38 CBZ X0, 0x34FFE50
	0x034FFE3C LDR X8, [X0]
	0x034FFE40 LDP X9, X1, [X8 + 0x168]
	0x034FFE44 BLR X9
	0x034FFE48 MOV X1, X0
	0x034FFE4C B 0x34FFE54
	0x034FFE50 MOV X1, X31
	0x034FFE54 MOV X0, X20
	0x034FFE58 MOV X2, X31
	0x034FFE5C BL 0x321B938
	0x034FFE60 MOV X2, X0
	0x034FFE64 MOVZ W1, 0x1
	0x034FFE68 MOV X0, X19
	0x034FFE6C MOV X3, X31
	0x034FFE70 BL 0x34F973C
	0x034FFE74 LDR X0, [X19 + 0x58]
	0x034FFE78 CBZ X0, 0x3500B34
	0x034FFE7C LDR X8, [X0]
	0x034FFE80 LDP X9, X1, [X8 + 0x1B8]
	0x034FFE84 BLR X9
	0x034FFE88 CMP W0, 0x2
	0x034FFE8C B.NE 0x35004E4
	0x034FFE90 LDR X0, [X19 + 0x10]
	0x034FFE94 MOVZ W8, 0x2
	0x034FFE98 STR W8, [X19 + 0x1C]
	0x034FFE9C CBZ X0, 0x3500B34
	0x034FFEA0 LDR X8, [X0]
	0x034FFEA4 LDP X9, X1, [X8 + 0x1D8]
	0x034FFEA8 BLR X9
	0x034FFEAC MOV X0, X19
	0x034FFEB0 MOV X1, X31
	0x034FFEB4 BL 0x34F88C4
	0x034FFEB8 ADRP X8, 0xBFC000
	0x034FFEBC LDR X8, [X8 + 0x558]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X21, 0xEE1000
	011 Move W8, [X21+2683]
	012 Move X20, X1
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {50}
	018 Move X0, 0xBFE000
	019 Move X0, [X0+1552]
	020 Call 0x1C17CF4
	021 Move X0, 0xBFE000
	022 Move X0, [X0+1560]
	023 Call 0x1C17CF4
	024 Move X0, 0xBFE000
	025 Move X0, [X0+696]
	026 Call 0x1C17CF4
	027 Move X0, 0xC35000
	028 Move X0, [X0+3360]
	029 Call 0x1C17CF4
	030 Move X0, 0xC35000
	031 Move X0, [X0+3248]
	032 Call 0x1C17CF4
	033 Move X0, 0xBF5000
	034 Move X0, [X0+3584]
	035 Call 0x1C17CF4
	036 Move X0, 0xBFD000
	037 Move X0, [X0+3016]
	038 Call 0x1C17CF4
	039 Move X0, 0xC35000
	040 Move X0, [X0+3176]
	041 Call 0x1C17CF4
	042 Move X0, 0xBF5000
	043 Move X0, [X0+1728]
	044 Call 0x1C17CF4
	045 Move X0, 0xC35000
	046 Move X0, [X0+3368]
	047 Call 0x1C17CF4
	048 Move W8, 1
	049 Move [X21+2683], W8
	050 Move [X31+12], W31
	051 Move X21, [X19+240]
	052 Move [X19+221], W31
	053 Compare X21, 0
	054 JumpIfEqual {79}
	055 Move X10, 0xBF5000
	056 Move X8, [X21]
	057 Move X10, [X10+3584]
	058 NotImplemented "Instruction LDRH not yet implemented."
	059 Move X1, [X10]
	060 Compare X9, 0
	061 JumpIfEqual {68}
	062 Move X10, [X8+176]
	063 Add X10, X10, 8
	064 NotImplemented "Instruction LDUR not yet implemented."
	065 NotImplemented "Instruction CMP not yet implemented."
	066 Subtract X9, X9, 1
	067 Add X10, X10, 16
	068 Move X0, X21
	069 Move W2, W31
	070 Call 0x1C5D788
	071 NotImplemented "Instruction LDRSW not yet implemented."
	072 Add X8, X8, X9
	073 Add X0, X8, 312
	074 Move X8, [X0]
	075 Move X1, [X0+8]
	076 Move X0, X21
	077 NotImplemented "Instruction BLR not yet implemented."
	078 Move [X19+240], X31
	079 Move X0, [X19+16]
	080 Compare X0, 0
	081 JumpIfEqual {403}
	082 Move X21, 0xBF5000
	083 Move X21, [X21+1728]
	084 Move X1, X31
	085 Call PhotonPeer.get_PayloadEncryptorType, X0
	086 Move X8, [X21]
	087 Move X21, X0
	088 Move W9, [X8+224]
	089 Compare W9, 0
	090 JumpIfNotEqual {93}
	091 Move X0, X8
	092 Call 0x1C17DFC
	093 Move X24, 0xC35000
	094 Move X24, [X24+3248]
	095 Move X0, X21
	096 Move X1, X31
	097 Move X2, X31
	098 Call Type.op_Inequality, X0, X1
	099 Move TEMP, X0
	100 And TEMP, TEMP, 1
	101 Compare TEMP, 1
	102 JumpIfNotEqual {178}
	103 Move X0, [X19+16]
	104 Compare X0, 0
	105 JumpIfEqual {317}
	106 Move X1, X31
	107 Call PhotonPeer.get_PayloadEncryptorType, X0
	108 Move X1, X31
	109 Call Activator.CreateInstance, X0
	110 Move X21, X0
	111 Compare X0, 0
	112 JumpIfEqual {129}
	113 Move X22, [X24]
	114 Move X0, X21
	115 Move X1, X22
	116 Call 0x1C17E00
	117 Compare X0, 0
	118 JumpIfEqual {318}
	119 Move [X19+240], X0
	120 Move X22, [X24]
	121 Move X0, X21
	122 Move X1, X22
	123 Call 0x1C17E00
	124 Compare X0, 0
	125 JumpIfEqual {321}
	126 Move X8, [X19+240]
	127 Compare X8, 0
	128 JumpIfNotEqual {189}
	129 Move [X19+240], X31
	130 Move X0, [X19+16]
	131 Compare X0, 0
	132 JumpIfEqual {324}
	133 Move X21, [X0+72]
	134 Move X1, X31
	135 Call PhotonPeer.get_PayloadEncryptorType, X0
	136 Move X8, 0xC35000
	137 Move X8, [X8+3368]
	138 Move X22, [X8]
	139 Compare X0, 0
	140 JumpIfEqual {146}
	141 Move X8, [X0]
	142 Move X9, [X8+360]
	143 Move X1, [X8+368]
	144 NotImplemented "Instruction BLR not yet implemented."
	145 Move X1, X0
	146 Move X1, X31
	147 Move X0, X22
	148 Move X2, X31
	149 Call String.Concat, X0, X1
	150 Compare X21, 0
	151 JumpIfEqual {325}
	152 Move X10, 0xBFD000
	153 Move X8, [X21]
	154 Move X10, [X10+3016]
	155 Move X22, X0
	156 NotImplemented "Instruction LDRH not yet implemented."
	157 Move X1, [X10]
	158 Compare X9, 0
	159 JumpIfEqual {166}
	160 Move X10, [X8+176]
	161 Add X10, X10, 8
	162 NotImplemented "Instruction LDUR not yet implemented."
	163 NotImplemented "Instruction CMP not yet implemented."
	164 Subtract X9, X9, 1
	165 Add X10, X10, 16
	166 Move X0, X21
	167 Move W2, W31
	168 Call 0x1C5D788
	169 NotImplemented "Instruction LDRSW not yet implemented."
	170 Add X8, X8, X9
	171 Add X0, X8, 312
	172 Move X8, [X0]
	173 Move X3, [X0+8]
	174 Move W1, 2
	175 Move X0, X21
	176 Move X2, X22
	177 NotImplemented "Instruction BLR not yet implemented."
	178 Move X8, [X19+240]
	179 Compare X8, 0
	180 JumpIfNotEqual {189}
	181 Move X8, 0xC35000
	182 Move X8, [X8+3360]
	183 Move X0, [X8]
	184 Call 0x1C17F10
	185 Move X1, X31
	186 Move X21, X0
	187 Call DiffieHellmanCryptoProvider..ctor, X0
	188 Move [X19+240], X21
	189 Move X8, 0xBFE000
	190 Move X8, [X8+696]
	191 Move X21, 0xBFE000
	192 Move X25, 0xC35000
	193 Move X0, [X8]
	194 Move X21, [X21+1552]
	195 Move X25, [X25+3176]
	196 Call 0x1C17F10
	197 Move X2, [X21]
	198 Move W1, 1
	199 Move X21, X0
	200 Call Dictionary`2<Byte, Object>..ctor, X0, X1
	201 Move X0, [X25]
	202 Move W8, [X0+224]
	203 Compare W8, 0
	204 JumpIfNotEqual {207}
	205 Call 0x1C17DFC
	206 Move X0, [X25]
	207 Move X23, [X19+240]
	208 Compare X23, 0
	209 JumpIfEqual {403}
	210 Move X9, [X0+184]
	211 Move X8, [X23]
	212 Move X1, [X24]
	213 Move W22, [X9]
	214 NotImplemented "Instruction LDRH not yet implemented."
	215 Compare X9, 0
	216 JumpIfEqual {223}
	217 Move X10, [X8+176]
	218 Add X10, X10, 8
	219 NotImplemented "Instruction LDUR not yet implemented."
	220 NotImplemented "Instruction CMP not yet implemented."
	221 Subtract X9, X9, 1
	222 Add X10, X10, 16
	223 Move W2, 1
	224 Move X0, X23
	225 Call 0x1C5D788
	226 Move W9, [X10]
	227 Add W9, W9, 1
	228 Add X8, X8, W9
	229 Add X0, X8, 312
	230 Move X8, [X0]
	231 Move X1, [X0+8]
	232 Move X0, X23
	233 NotImplemented "Instruction BLR not yet implemented."
	234 Compare X21, 0
	235 JumpIfEqual {403}
	236 Move X8, 0xBFE000
	237 Move X8, [X8+1560]
	238 Move X2, X0
	239 Move X0, X21
	240 Move W1, W22
	241 Move X3, [X8]
	242 Call Dictionary`2<Byte, Object>.set_Item, X0, X1, X2
	243 Compare X20, 0
	244 JumpIfEqual {283}
	245 Move [X31+12], W31
	246 Add X1, X31, 12
	247 Move X0, X20
	248 Move X2, X31
	249 Call Monitor.Enter, X0, X1
	250 Move X0, [X25]
	251 Move W8, [X0+224]
	252 Compare W8, 0
	253 JumpIfNotEqual {256}
	254 Call 0x1C17DFC
	255 Move X0, [X25]
	256 Move X8, [X0+184]
	257 Move W1, [X8+3]
	258 Move W3, 6
	259 Move X0, X19
	260 Move X2, X21
	261 Move W4, W31
	262 Call PeerBase.SerializeOperationToMessage, X0, X1, X2, X3, X4
	263 Move X1, X0
	264 Move X8, [X19]
	265 Move X9, [X8+552]
	266 Move X3, [X8+560]
	267 Move W2, 1
	268 Move X0, X19
	269 NotImplemented "Instruction BLR not yet implemented."
	270 Move W22, W0
	271 Move X23, X31
	272 Move W24, W31
	273 Move W8, [X31+12]
	274 Compare W8, 0
	275 JumpIfEqual {279}
	276 Move X0, X20
	277 Move X1, X31
	278 Call Monitor.Exit, X0
	279 Compare X23, 0
	280 JumpIfNotEqual {315}
	281 Compare W24, 0
	282 JumpIfEqual {304}
	283 Move X0, [X25]
	284 Move W8, [X0+224]
	285 Compare W8, 0
	286 JumpIfNotEqual {289}
	287 Call 0x1C17DFC
	288 Move X0, [X25]
	289 Move X8, [X0+184]
	290 Move W3, 6
	291 Move X0, X19
	292 Move X2, X21
	293 Move W1, [X8+3]
	294 Move W4, W31
	295 Call PeerBase.SerializeOperationToMessage, X0, X1, X2, X3, X4
	296 Move X8, [X19]
	297 Move X1, X0
	298 Move W2, 1
	299 Move X0, X19
	300 Move X9, [X8+552]
	301 Move X3, [X8+560]
	302 NotImplemented "Instruction BLR not yet implemented."
	303 Move W22, W0
	304 And W0, W22, 1
	305 Move X20, [X31+64]
	306 Move X19, [X31+72]
	307 Move X22, [X31+48]
	308 Move X21, [X31+56]
	309 Move X24, [X31+32]
	310 Move X23, [X31+40]
	311 Move X30, [X31+16]
	312 Move X25, [X31+24]
	313 Add X31, X31, 80
	314 Return X0
	315 Move X0, X23
	316 Call 0x1C17F18
	317 Call 0x1C17F20
	318 Move X0, X21
	319 Move X1, X22
	320 Call 0x1C181E0
	321 Move X0, X21
	322 Move X1, X22
	323 Call 0x1C181E0
	324 Call 0x1C17F20
	325 Call 0x1C17F20
	326 Move X22, X0
	327 NotImplemented "Instruction CMP not yet implemented."
	328 Move X0, X22
	329 Call 0x3EB2AD0
	330 Move X23, [X0]
	331 Call 0x3EB2AE0
	332 Move W22, W31
	333 Move W24, 1
	334 Move X23, X31
	335 Move X22, X0
	336 Move W8, [X31+12]
	337 Compare W8, 0
	338 JumpIfEqual {342}
	339 Move X0, X20
	340 Move X1, X31
	341 Call Monitor.Exit, X0
	342 Compare X23, 0
	343 JumpIfEqual {423}
	344 Move X0, X23
	345 Call 0x1C17F18
	346 Move X22, X0
	347 NotImplemented "Instruction CMP not yet implemented."
	348 Move X0, X22
	349 Call 0x3EB2AD0
	350 Move X21, X0
	351 Move X0, 0xBF5000
	352 Move X0, [X0+2000]
	353 Call 0x1C17D08
	354 Move X8, [X21]
	355 Move X1, [X8]
	356 Call 0x1C18270
	357 Move TEMP, X0
	358 And TEMP, TEMP, 1
	359 Compare TEMP, 1
	360 JumpIfNotEqual {413}
	361 Move X22, [X21]
	362 Call 0x3EB2AE0
	363 Move X8, [X19+16]
	364 Compare X8, 0
	365 JumpIfEqual {403}
	366 Move X0, 0xC35000
	367 Move X21, [X8+72]
	368 Move X0, [X0+3376]
	369 Call 0x1C17D08
	370 Move X23, X0
	371 Compare X22, 0
	372 JumpIfEqual {379}
	373 Move X8, [X22]
	374 Move X0, X22
	375 Move X9, [X8+360]
	376 Move X1, [X8+368]
	377 NotImplemented "Instruction BLR not yet implemented."
	378 Move X1, X0
	379 Move X1, X31
	380 Move X0, X23
	381 Move X2, X31
	382 Call String.Concat, X0, X1
	383 Compare X21, 0
	384 JumpIfEqual {403}
	385 Move X22, X0
	386 Move X0, 0xBFD000
	387 Move X0, [X0+3016]
	388 Call 0x1C17D08
	389 Move X8, [X21]
	390 Move X1, X0
	391 NotImplemented "Instruction LDRH not yet implemented."
	392 Compare X9, 0
	393 JumpIfEqual {400}
	394 Move X10, [X8+176]
	395 Add X10, X10, 8
	396 NotImplemented "Instruction LDUR not yet implemented."
	397 NotImplemented "Instruction CMP not yet implemented."
	398 Subtract X9, X9, 1
	399 Add X10, X10, 16
	400 Move X0, X21
	401 Move W2, W31
	402 Call 0x1C5D788
	403 Call 0x1C17F20
	404 NotImplemented "Instruction LDRSW not yet implemented."
	405 Add X8, X8, X9
	406 Add X0, X8, 312
	407 Move X8, [X0]
	408 Move X3, [X0+8]
	409 Move W1, 2
	410 Move X0, X21
	411 Move X2, X22
	412 NotImplemented "Instruction BLR not yet implemented."
	413 Move W0, 8
	414 Call 0x3EB2AF0
	415 Move X8, [X21]
	416 Move [X0], X8
	417 Move X1, 0x9B6000
	418 Add X1, X1, 3672
	419 Move X2, X31
	420 Call 0x3EB2B00
	421 Move X22, X0
	422 Call 0x3EB2AE0
	423 Move X0, X22
	424 Call 0x1D2D690
	425 Call 0x1991590

Method: System.Void DeriveSharedKey(ExitGames.Client.Photon.OperationResponse operationResponse)

Disassembly:
	0x034FF6B0 ADRP X0, 0xC34000
	0x034FF6B4 LDR X0, [X0 + 0xD48]
	0x034FF6B8 BL 0x1C16CF4
	0x034FF6BC ADRP X0, 0xC34000
	0x034FF6C0 LDR X0, [X0 + 0xD40]
	0x034FF6C4 BL 0x1C16CF4
	0x034FF6C8 MOVZ W8, 0x1
	0x034FF6CC STRB W8, [X21 + 0xA84]
	0x034FF6D0 LDR X0, [X22]
	0x034FF6D4 BL 0x1C16F10
	0x034FF6D8 LDR X2, [X19]
	0x034FF6DC MOVZ W1, 0x20
	0x034FF6E0 MOV X19, X0
	0x034FF6E4 BL 0x24F12C8
	0x034FF6E8 LDR X8, [X20]
	0x034FF6EC LDP X22, X21, [X31 + 0x10]
	0x034FF6F0 LDR X8, [X8 + 0xB8]
	0x034FF6F4 STR X19, [X8 + 0x8]
	0x034FF6F8 LDP X20, X19, [X31 + 0x20]
	0x034FF6FC LDR X30, [X31], #0x30
	0x034FF700 RET
	0x034FF704 STP X30, X21, [X31 - 0x20]!
	0x034FF708 STP X20, X19, [X31 + 0x10]
	0x034FF70C LDR X8, [X2 + 0x8]
	0x034FF710 STP X1, X2, [X0 + 0x20]
	0x034FF714 MOV X19, X0
	0x034FF718 MOV X20, X1
	0x034FF71C STR X8, [X0 + 0x10]
	0x034FF720 LDRB W21, [X2 + 0x52]
	0x034FF724 STR X0, [X0 + 0x40]
	0x034FF728 MOV X0, X2
	0x034FF72C BL 0x1C16D84
	0x034FF730 TBZ X0, 0x0, 0x34FF748
	0x034FF734 CBNZ W21, 0x34FF74C
	0x034FF738 ADRP X8, 0xFFFFFFFFFE6C0000
	0x034FF73C ADD X8, X8, 0x1EC
	0x034FF740 STR X8, [X19 + 0x18]
	0x034FF744 B 0x34FF75C
	0x034FF748 CBZ X20, 0x34FF774
	0x034FF74C LDR X8, [X19 + 0x10]
	0x034FF750 LDR X9, [X19 + 0x20]
	0x034FF754 STR X8, [X19 + 0x18]
	0x034FF758 STR X9, [X19 + 0x40]
	0x034FF75C ADRP X8, 0xFFFFFFFFFE6C0000
	0x034FF760 ADD X8, X8, 0x1AC
	0x034FF764 STR X8, [X19 + 0x38]
	0x034FF768 LDP X20, X19, [X31 + 0x10]
	0x034FF76C LDP X30, X21, [X31], #0x20
	0x034FF770 RET
	0x034FF774 ADRP X1, 0xFFFFFFFFFD61C000
	0x034FF778 ADD X1, X1, 0xEE3
	0x034FF77C MOV X0, X31
	0x034FF780 BL 0x1C16F3C
	0x034FF784 MOV X1, X31
	0x034FF788 BL 0x1C16DEC
	0x034FF78C LDR X8, [X0 + 0x40]
	0x034FF790 LDR X2, [X0 + 0x18]
	0x034FF794 LDR X1, [X0 + 0x28]
	0x034FF798 MOV X0, X8
	0x034FF79C BR X2
	0x034FF7A0 STR X30, [X31 - 0x10]!
	0x034FF7A4 MOV X3, X2
	0x034FF7A8 MOV X2, X1
	0x034FF7AC ADD X1, X31, 0x8
	0x034FF7B0 STR X31, [X31 + 0x8]
	0x034FF7B4 BL 0x1C16CB0
	0x034FF7B8 LDR X30, [X31], #0x10
	0x034FF7BC RET
	0x034FF7C0 MOV X0, X1
	0x034FF7C4 MOV X1, X31
	0x034FF7C8 B 0x1C16CB4
	0x034FF7CC MOV X1, X31
	0x034FF7D0 B 0x33BDD8C
	0x034FF7D4 STP X30, X21, [X31 - 0x20]!
	0x034FF7D8 STP X20, X19, [X31 + 0x10]
	0x034FF7DC ADRP X19, 0xEE0000
	0x034FF7E0 LDRB W8, [X19 + 0xA86]
	0x034FF7E4 MOV X20, X0
	0x034FF7E8 TBNZ X8, 0x0, 0x34FF800
	0x034FF7EC ADRP X0, 0xBFC000
	0x034FF7F0 LDR X0, [X0 + 0xBC8]
	0x034FF7F4 BL 0x1C16CF4
	0x034FF7F8 MOVZ W8, 0x1
	0x034FF7FC STRB W8, [X19 + 0xA86]
	0x034FF800 LDR X0, [X20 + 0x10]
	0x034FF804 CBZ X0, 0x34FF890
	0x034FF808 MOV X1, X31
	0x034FF80C BL 0x34F104C
	0x034FF810 CBZ X0, 0x34FF890
	0x034FF814 ADRP X10, 0xBFC000
	0x034FF818 LDR X8, [X0]
	0x034FF81C LDR X10, [X10 + 0xBC8]
	0x034FF820 LDRB W21, [X20 + 0x18]
	0x034FF824 LDR X20, [X20 + 0x20]
	0x034FF828 LDRH W9, [X8 + 0x12E]
	0x034FF82C LDR X1, [X10]
	0x034FF830 MOV X19, X0
	0x034FF834 CBZ X9, 0x34FF858
	0x034FF838 LDR X10, [X8 + 0xB0]
	0x034FF83C ADD X10, X10, 0x8
	0x034FF840 LDUR X11, [X10 - 0x8]
	0x034FF844 CMP X11, X1
	0x034FF848 B.EQ 0x34FF868
	0x034FF84C SUBS X9, X9, 0x1
	0x034FF850 ADD X10, X10, 0x10
	0x034FF854 B.NE 0x34FF840
	0x034FF858 MOV X0, X19
	0x034FF85C MOV W2, W31
	0x034FF860 BL 0x1C5C788
	0x034FF864 B 0x34FF874
	0x034FF868 LDRSW X9, [X10]
	0x034FF86C ADD X8, X8, X9, 0x4, LSL
	0x034FF870 ADD X0, X8, 0x138
	0x034FF874 LDP X4, X3, [X0]
	0x034FF878 MOV X0, X19

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0xEE1000
	008 Move W8, [X21+2684]
	009 Move X20, X1
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {32}
	015 Move X0, 0xBF5000
	016 Move X0, [X0+1560]
	017 Call 0x1C17CF4
	018 Move X0, 0xC35000
	019 Move X0, [X0+3248]
	020 Call 0x1C17CF4
	021 Move X0, 0xC35000
	022 Move X0, [X0+3176]
	023 Call 0x1C17CF4
	024 Move X0, 0xC35000
	025 Move X0, [X0+3344]
	026 Call 0x1C17CF4
	027 Move X0, 0xC35000
	028 Move X0, [X0+3352]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X21+2684], W8
	032 Compare X20, 0
	033 JumpIfEqual {127}
	034 NotImplemented "Instruction LDRH not yet implemented."
	035 Compare W8, 0
	036 JumpIfEqual {43}
	037 Move X21, 0xC35000
	038 Move X21, [X21+3352]
	039 Move X0, X20
	040 Move X1, X31
	041 Call OperationResponse.ToStringFull, X0
	042 Move X8, [X21]
	043 Move X22, 0xC35000
	044 Move X22, [X22+3176]
	045 Move X21, [X20+32]
	046 Move X0, [X22]
	047 Move W8, [X0+224]
	048 Compare W8, 0
	049 JumpIfNotEqual {51}
	050 Call 0x1C17DFC
	051 Compare X21, 0
	052 JumpIfEqual {127}
	053 Move X8, [X22]
	054 Move X0, X21
	055 Move X8, [X8+184]
	056 Move W1, [X8+2]
	057 Call ParameterDictionary.get_Item, X0, X1
	058 Compare X0, 0
	059 JumpIfEqual {91}
	060 Move X8, 0xBF5000
	061 Move X8, [X8+1560]
	062 Move X22, X0
	063 Move X23, [X8]
	064 Move X1, X23
	065 Call 0x1C17E00
	066 Compare X0, 0
	067 JumpIfEqual {128}
	068 Move W8, [X0+24]
	069 Move X21, X0
	070 Compare W8, 0
	071 JumpIfEqual {91}
	072 Move X20, [X19+240]
	073 Compare X20, 0
	074 JumpIfEqual {127}
	075 Move X10, 0xC35000
	076 Move X8, [X20]
	077 Move X10, [X10+3248]
	078 NotImplemented "Instruction LDRH not yet implemented."
	079 Move X1, [X10]
	080 Compare X9, 0
	081 JumpIfEqual {88}
	082 Move X10, [X8+176]
	083 Add X10, X10, 8
	084 NotImplemented "Instruction LDUR not yet implemented."
	085 NotImplemented "Instruction CMP not yet implemented."
	086 Subtract X9, X9, 1
	087 Add X10, X10, 16
	088 Move W2, 2
	089 Move X0, X20
	090 Call 0x1C5D788
	091 Move X0, X20
	092 Move X1, X31
	093 Call OperationResponse.ToStringFull, X0
	094 Move X8, 0xC35000
	095 Move X8, [X8+3344]
	096 Move X8, [X8]
	097 Move X1, X0
	098 Move X0, X8
	099 Move X2, X31
	100 Call String.Concat, X0, X1
	101 Move X2, X0
	102 Move W1, 1
	103 Move X0, X19
	104 Call PeerBase.EnqueueDebugReturn, X0, X1, X2
	105 Move W1, 1049
	106 Move X0, X19
	107 Move X20, [X31+32]
	108 Move X19, [X31+40]
	109 Move X22, [X31+16]
	110 Move X21, [X31+24]
	111 Move X30, [X31+48]
	112 Move X23, [X31+56]
	113 Call PeerBase.EnqueueStatusCallback, X0, X1
	114 Return 
	115 Move W9, [X10]
	116 Add W9, W9, 2
	117 Add X8, X8, W9
	118 Add X0, X8, 312
	119 Move X8, [X0]
	120 Move X2, [X0+8]
	121 Move X0, X20
	122 Move X1, X21
	123 NotImplemented "Instruction BLR not yet implemented."
	124 Move W8, 1
	125 Move W1, 1048
	126 Move [X19+221], W8
	127 Call 0x1C17F20
	128 Move X0, X22
	129 Move X1, X23
	130 Call 0x1C181E0

Method: System.Void InitEncryption(System.Byte[] secret)

Disassembly:
	0x034FFEC0 MOV W21, W0
	0x034FFEC4 LDR X8, [X8]
	0x034FFEC8 MOV X0, X8
	0x034FFECC BL 0x1C16F10
	0x034FFED0 MOV W1, W21
	0x034FFED4 MOV X2, X31
	0x034FFED8 STR X0, [X31 + 0x8]
	0x034FFEDC BL 0x32E23BC
	0x034FFEE0 MOV X0, X19
	0x034FFEE4 MOV X1, X31
	0x034FFEE8 BL 0x34F88C4
	0x034FFEEC ADRP X8, 0xBF4000
	0x034FFEF0 LDR X8, [X8 + 0x618]
	0x034FFEF4 MOV W1, W0
	0x034FFEF8 LDR X8, [X8]
	0x034FFEFC MOV X0, X8
	0x034FFF00 BL 0x1C16D6C
	0x034FFF04 ADRP X8, 0xC1C000
	0x034FFF08 LDR X8, [X8 + 0x5B0]
	0x034FFF0C MOV X21, X0
	0x034FFF10 LDR X8, [X8]
	0x034FFF14 LDR W9, [X8 + 0xE0]
	0x034FFF18 CBNZ W9, 0x34FFF24
	0x034FFF1C MOV X0, X8
	0x034FFF20 BL 0x1C16DFC
	0x034FFF24 ADRP X8, 0xBFF000
	0x034FFF28 LDR X8, [X8 + 0xE68]
	0x034FFF2C ADD X0, X31, 0x70
	0x034FFF30 MOV X1, X21
	0x034FFF34 LDR X2, [X8]
	0x034FFF38 BL 0x2B87B6C
	0x034FFF3C LDR X0, [X19 + 0x58]
	0x034FFF40 CBZ X0, 0x3500B34
	0x034FFF44 STR W31, [X31 + 0x14]
	0x034FFF48 ADRP X27, 0xBFC000
	0x034FFF4C ADRP X28, 0xBF4000
	0x034FFF50 ADRP X25, 0xC34000
	0x034FFF54 ADRP X26, 0xBF4000
	0x034FFF58 ADRP X21, 0xBFD000
	0x034FFF5C ADRP X29, 0xC34000
	0x034FFF60 LDR X27, [X27 + 0x7D8]
	0x034FFF64 LDR X28, [X28 + 0xAC8]
	0x034FFF68 LDR X25, [X25 + 0xD78]
	0x034FFF6C LDR X26, [X26 + 0xDD8]
	0x034FFF70 LDR X21, [X21 + 0x988]
	0x034FFF74 LDR X29, [X29 + 0xD80]
	0x034FFF78 MOVN X20, 0x0
	0x034FFF7C LDR X8, [X0]
	0x034FFF80 LDP X9, X1, [X8 + 0x1B8]
	0x034FFF84 BLR X9
	0x034FFF88 CMP W0, 0x2
	0x034FFF8C B.NE 0x3500534
	0x034FFF90 LDR X0, [X27]
	0x034FFF94 LDR X24, [X19 + 0x58]
	0x034FFF98 LDP X23, X22, [X31 + 0x70]
	0x034FFF9C LDR W8, [X0 + 0xE0]
	0x034FFFA0 CBNZ W8, 0x34FFFA8
	0x034FFFA4 BL 0x1C16DFC
	0x034FFFA8 MOV X0, X31
	0x034FFFAC BL 0x33DD2A8
	0x034FFFB0 CBZ X24, 0x3500000
	0x034FFFB4 LDR X8, [X24]
	0x034FFFB8 MOV X3, X0
	0x034FFFBC LDR X9, [X8 + 0x208]
	0x034FFFC0 LDR X4, [X8 + 0x210]
	0x034FFFC4 MOV X0, X24
	0x034FFFC8 MOV X1, X23
	0x034FFFCC MOV X2, X22
	0x034FFFD0 BLR X9
	0x034FFFD4 MOV X22, X0
	0x034FFFD8 CBZ X0, 0x3500008
	0x034FFFDC MOV X0, X22
	0x034FFFE0 MOV X1, X31
	0x034FFFE4 BL 0x33ED11C
	0x034FFFE8 TBNZ X0, 0x0, 0x350005C
	0x034FFFEC MOVZ W1, 0x32
	0x034FFFF0 MOV X0, X22
	0x034FFFF4 MOV X2, X31
	0x034FFFF8 BL 0x33F3020
	0x034FFFFC B 0x34FFFDC
	0x03500000 BL 0x1C16F20
	0x03500004 B 0x35007F4
	0x03500008 BL 0x1C16F20
	0x0350000C B 0x35007F4
	0x03500010 B 0x3500020
	0x03500014 B 0x3500020
	0x03500018 B 0x3500020
	0x0350001C B 0x3500020
	0x03500020 MOV X22, X31
	0x03500024 B 0x350002C
	0x03500028 B 0x350002C
	0x0350002C CMP W1, 0x1
	0x03500030 B.NE 0x35007EC
	0x03500034 BL 0x3EB1AD0
	0x03500038 MOV X23, X0
	0x0350003C ADRP X0, 0xBF3000
	0x03500040 LDR X0, [X0 + 0x7D0]
	0x03500044 BL 0x1C16D08
	0x03500048 LDR X8, [X23]
	0x0350004C LDR X1, [X8]
	0x03500050 BL 0x1C17270
	0x03500054 TBZ X0, 0x0, 0x35007C8
	0x03500058 BL 0x3EB1AE0
	0x0350005C CBZ X22, 0x3500B34
	0x03500060 MOV X0, X22
	0x03500064 MOV X1, X31
	0x03500068 BL 0x33ED11C
	0x0350006C TBZ X0, 0x0, 0x35002DC
	0x03500070 LDR X0, [X19 + 0x58]
	0x03500074 CBZ X0, 0x3500B34
	0x03500078 LDR X8, [X0]
	0x0350007C LDP X9, X1, [X8 + 0x1B8]
	0x03500080 BLR X9
	0x03500084 CMP W0, 0x2
	0x03500088 B.NE 0x35002DC
	0x0350008C MOV X0, X22
	0x03500090 MOV X1, X31
	0x03500094 BL 0x33F06D8
	0x03500098 TBZ X0, 0x0, 0x350019C
	0x0350009C LDR X0, [X28]
	0x035000A0 MOVZ W1, 0x8
	0x035000A4 BL 0x1C16D6C
	0x035000A8 CBZ X0, 0x3500B34
	0x035000AC LDR W8, [X0 + 0x18]
	0x035000B0 MOV X23, X0
	0x035000B4 CBZ W8, 0x35007B4
	0x035000B8 ADRP X8, 0xC33000
	0x035000BC LDR X8, [X8 + 0xDB8]
	0x035000C0 MOV X0, X22
	0x035000C4 MOV X1, X31
	0x035000C8 LDR X8, [X8]
	0x035000CC STR X8, [X23 + 0x20]
	0x035000D0 BL 0x33F0678
	0x035000D4 LDR X8, [X25]
	0x035000D8 STR W0, [X31 + 0x58]
	0x035000DC ADD X0, X31, 0x48
	0x035000E0 MOV X1, X31
	0x035000E4 STP X8, X20, [X31 + 0x48]
	0x035000E8 BL 0x33B162C
	0x035000EC LDR W8, [X23 + 0x18]
	0x035000F0 CMP W8, 0x1
	0x035000F4 B.LS 0x35007B4
	0x035000F8 CMP W8, 0x2
	0x035000FC STR X0, [X23 + 0x28]
	0x03500100 B.EQ 0x35007B4
	0x03500104 LDR X9, [X26]
	0x03500108 CMP W8, 0x3
	0x0350010C STR X9, [X23 + 0x30]
	0x03500110 B.LS 0x35007B4
	0x03500114 LDR X9, [X19 + 0x30]
	0x03500118 CMP W8, 0x4
	0x0350011C STR X9, [X23 + 0x38]
	0x03500120 B.EQ 0x35007B4
	0x03500124 LDR X8, [X21]
	0x03500128 ADD X0, X31, 0x64
	0x0350012C MOV X1, X31
	0x03500130 STR X8, [X23 + 0x40]
	0x03500134 LDR W8, [X19 + 0x40]
	0x03500138 STR W8, [X31 + 0x64]
	0x0350013C BL 0x337B6E0
	0x03500140 LDR W8, [X23 + 0x18]
	0x03500144 CMP W8, 0x5
	0x03500148 B.LS 0x35007B4
	0x0350014C CMP W8, 0x6
	0x03500150 STR X0, [X23 + 0x48]
	0x03500154 B.EQ 0x35007B4
	0x03500158 LDR X8, [X26]
	0x0350015C STR X8, [X23 + 0x50]
	0x03500160 LDR X0, [X19 + 0x58]
	0x03500164 CBZ X0, 0x3500B34
	0x03500168 LDR X8, [X0]
	0x0350016C LDP X9, X1, [X8 + 0x198]
	0x03500170 BLR X9
	0x03500174 LDR W8, [X23 + 0x18]
	0x03500178 CMP W8, 0x7
	0x0350017C B.LS 0x35007B4
	0x03500180 STR X0, [X23 + 0x58]
	0x03500184 MOV X0, X23
	0x03500188 MOV X1, X31
	0x0350018C BL 0x32278CC
	0x03500190 MOV X2, X0
	0x03500194 MOVZ W1, 0x1
	0x03500198 B 0x35002D0
	0x0350019C LDR X1, [X29]
	0x035001A0 MOV X0, X22
	0x035001A4 BL 0x269F34C
	0x035001A8 CBZ X0, 0x3500B34
	0x035001AC LDR W8, [X0 + 0x10]
	0x035001B0 CBNZ W8, 0x35002E8
	0x035001B4 LDR X0, [X28]
	0x035001B8 MOVZ W1, 0x6
	0x035001BC BL 0x1C16D6C
	0x035001C0 CBZ X0, 0x3500B34
	0x035001C4 LDR W8, [X0 + 0x18]
	0x035001C8 MOV X23, X0
	0x035001CC CBZ W8, 0x35007B4
	0x035001D0 ADRP X8, 0xC33000
	0x035001D4 LDR X8, [X8 + 0xDA0]
	0x035001D8 ADD X0, X31, 0x48
	0x035001DC MOV X1, X31
	0x035001E0 LDR X8, [X8]
	0x035001E4 STR X8, [X23 + 0x20]
	0x035001E8 ADRP X8, 0xC33000
	0x035001EC LDR X8, [X8 + 0xB20]
	0x035001F0 LDR W9, [X19 + 0x1C]
	0x035001F4 LDR X8, [X8]
	0x035001F8 STR W9, [X31 + 0x58]
	0x035001FC STP X8, X20, [X31 + 0x48]
	0x03500200 BL 0x33B162C
	0x03500204 LDR W8, [X23 + 0x18]
	0x03500208 CMP W8, 0x1
	0x0350020C B.LS 0x35007B4
	0x03500210 CMP W8, 0x2
	0x03500214 STR X0, [X23 + 0x28]
	0x03500218 B.EQ 0x35007B4
	0x0350021C ADRP X8, 0xC33000
	0x03500220 LDR X8, [X8 + 0xD90]
	0x03500224 LDR X8, [X8]
	0x03500228 STR X8, [X23 + 0x30]
	0x0350022C LDR X0, [X19 + 0x58]
	0x03500230 CBZ X0, 0x3500B34
	0x03500234 LDR X8, [X0]
	0x03500238 LDP X9, X1, [X8 + 0x1B8]
	0x0350023C BLR X9
	0x03500240 ADRP X8, 0xC33000
	0x03500244 LDR X8, [X8 + 0xD88]
	0x03500248 STR W0, [X31 + 0x40]
	0x0350024C ADD X0, X31, 0x30
	0x03500250 MOV X1, X31
	0x03500254 LDR X8, [X8]
	0x03500258 STP X8, X20, [X31 + 0x30]
	0x0350025C BL 0x33B162C
	0x03500260 LDR W8, [X23 + 0x18]
	0x03500264 CMP W8, 0x3
	0x03500268 B.LS 0x35007B4
	0x0350026C CMP W8, 0x4
	0x03500270 STR X0, [X23 + 0x38]
	0x03500274 B.EQ 0x35007B4
	0x03500278 ADRP X8, 0xC33000
	0x0350027C LDR X8, [X8 + 0xDD0]
	0x03500280 MOV X0, X22
	0x03500284 MOV X1, X31
	0x03500288 LDR X8, [X8]
	0x0350028C STR X8, [X23 + 0x40]
	0x03500290 BL 0x33F0678
	0x03500294 LDR X8, [X25]
	0x03500298 STR W0, [X31 + 0x28]
	0x0350029C ADD X0, X31, 0x18
	0x035002A0 MOV X1, X31
	0x035002A4 STP X8, X20, [X31 + 0x18]
	0x035002A8 BL 0x33B162C
	0x035002AC LDR W8, [X23 + 0x18]
	0x035002B0 CMP W8, 0x5

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0xEE1000
	008 Move W8, [X21+2685]
	009 Move X20, X1
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {35}
	015 Move X0, 0xC35000
	016 Move X0, [X0+3360]
	017 Call 0x1C17CF4
	018 Move X0, 0xC35000
	019 Move X0, [X0+3248]
	020 Call 0x1C17CF4
	021 Move X0, 0xBFD000
	022 Move X0, [X0+3016]
	023 Call 0x1C17CF4
	024 Move X0, 0xBF5000
	025 Move X0, [X0+2512]
	026 Call 0x1C17CF4
	027 Move X0, 0xBF5000
	028 Move X0, [X0+1728]
	029 Call 0x1C17CF4
	030 Move X0, 0xC35000
	031 Move X0, [X0+3368]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X21+2685], W8
	035 Move X0, [X19+16]
	036 Compare X0, 0
	037 JumpIfEqual {260}
	038 Move X21, 0xBF5000
	039 Move X21, [X21+1728]
	040 Move X1, X31
	041 Call PhotonPeer.get_PayloadEncryptorType, X0
	042 Move X8, [X21]
	043 Move X21, X0
	044 Move W9, [X8+224]
	045 Compare W9, 0
	046 JumpIfNotEqual {49}
	047 Move X0, X8
	048 Call 0x1C17DFC
	049 Move X0, X21
	050 Move X1, X31
	051 Move X2, X31
	052 Call Type.op_Inequality, X0, X1
	053 Move TEMP, X0
	054 And TEMP, TEMP, 1
	055 Compare TEMP, 1
	056 JumpIfNotEqual {159}
	057 Move X0, [X19+16]
	058 Compare X0, 0
	059 JumpIfEqual {180}
	060 Move X1, X31
	061 Call PhotonPeer.get_PayloadEncryptorType, X0
	062 Move X8, 0xBF5000
	063 Move X8, [X8+2512]
	064 Move X21, X0
	065 Move X0, [X8]
	066 Move W1, 1
	067 Call 0x1C17D6C
	068 Move X22, X0
	069 Compare X0, 0
	070 JumpIfEqual {181}
	071 Compare X20, 0
	072 JumpIfEqual {79}
	073 Move X8, [X22]
	074 Move X1, [X8+64]
	075 Move X0, X20
	076 Call 0x1C17E00
	077 Compare X0, 0
	078 JumpIfEqual {183}
	079 Move W8, [X22+24]
	080 Compare W8, 0
	081 JumpIfEqual {182}
	082 Move [X22+32], X20
	083 Move X0, X21
	084 Move X1, X22
	085 Move X2, X31
	086 Call Activator.CreateInstance, X0, X1
	087 Move X21, X0
	088 Compare X0, 0
	089 JumpIfEqual {110}
	090 Move X23, 0xC35000
	091 Move X23, [X23+3248]
	092 Move X22, [X23]
	093 Move X0, X21
	094 Move X1, X22
	095 Call 0x1C17E00
	096 Compare X0, 0
	097 JumpIfEqual {186}
	098 Move [X19+240], X0
	099 Move X22, [X23]
	100 Move X0, X21
	101 Move X1, X22
	102 Call 0x1C17E00
	103 Compare X0, 0
	104 JumpIfEqual {189}
	105 Move X8, [X19+240]
	106 Compare X8, 0
	107 JumpIfEqual {111}
	108 Move W8, 1
	109 Move [X19+221], W8
	110 Move [X19+240], X31
	111 Move X0, [X19+16]
	112 Compare X0, 0
	113 JumpIfEqual {192}
	114 Move X21, [X0+72]
	115 Move X1, X31
	116 Call PhotonPeer.get_PayloadEncryptorType, X0
	117 Move X8, 0xC34000
	118 Move X8, [X8+3368]
	119 Move X22, [X8]
	120 Compare X0, 0
	121 JumpIfEqual {127}
	122 Move X8, [X0]
	123 Move X9, [X8+360]
	124 Move X1, [X8+368]
	125 NotImplemented "Instruction BLR not yet implemented."
	126 Move X1, X0
	127 Move X1, X31
	128 Move X0, X22
	129 Move X2, X31
	130 Call String.Concat, X0, X1
	131 Compare X21, 0
	132 JumpIfEqual {193}
	133 Move X10, 0xBFC000
	134 Move X8, [X21]
	135 Move X10, [X10+3016]
	136 Move X22, X0
	137 NotImplemented "Instruction LDRH not yet implemented."
	138 Move X1, [X10]
	139 Compare X9, 0
	140 JumpIfEqual {147}
	141 Move X10, [X8+176]
	142 Add X10, X10, 8
	143 NotImplemented "Instruction LDUR not yet implemented."
	144 NotImplemented "Instruction CMP not yet implemented."
	145 Subtract X9, X9, 1
	146 Add X10, X10, 16
	147 Move X0, X21
	148 Move W2, W31
	149 Call 0x1C5D788
	150 NotImplemented "Instruction LDRSW not yet implemented."
	151 Add X8, X8, X9
	152 Add X0, X8, 312
	153 Move X8, [X0]
	154 Move X3, [X0+8]
	155 Move W1, 2
	156 Move X0, X21
	157 Move X2, X22
	158 NotImplemented "Instruction BLR not yet implemented."
	159 Move X8, [X19+240]
	160 Compare X8, 0
	161 JumpIfNotEqual {173}
	162 Move X8, 0xC34000
	163 Move X8, [X8+3360]
	164 Move X0, [X8]
	165 Call 0x1C17F10
	166 Move X1, X20
	167 Move X2, X31
	168 Move X21, X0
	169 Call DiffieHellmanCryptoProvider..ctor, X0, X1
	170 Move W8, 1
	171 Move [X19+240], X21
	172 Move [X19+221], W8
	173 Move X20, [X31+32]
	174 Move X19, [X31+40]
	175 Move X22, [X31+16]
	176 Move X21, [X31+24]
	177 Move X30, [X31+48]
	178 Move X23, [X31+56]
	179 Return 
	180 Call 0x1C17F20
	181 Call 0x1C17F20
	182 Call 0x1C17F28
	183 Call 0x1C17F44
	184 Move X1, X31
	185 Call 0x1C17DEC
	186 Move X0, X21
	187 Move X1, X22
	188 Call 0x1C181E0
	189 Move X0, X21
	190 Move X1, X22
	191 Call 0x1C181E0
	192 Call 0x1C17F20
	193 Call 0x1C17F20
	194 Move X21, X0
	195 NotImplemented "Instruction CMP not yet implemented."
	196 Move X0, X21
	197 Call 0x3EB2AD0
	198 Move X21, X0
	199 Move X0, 0xBF4000
	200 Move X0, [X0+2000]
	201 Call 0x1C17D08
	202 Move X8, [X21]
	203 Move X1, [X8]
	204 Call 0x1C18270
	205 Move TEMP, X0
	206 And TEMP, TEMP, 1
	207 Compare TEMP, 1
	208 JumpIfNotEqual {261}
	209 Move X22, [X21]
	210 Call 0x3EB2AE0
	211 Move X8, [X19+16]
	212 Compare X8, 0
	213 JumpIfEqual {260}
	214 Move X0, 0xC34000
	215 Move X21, [X8+72]
	216 Move X0, [X0+3376]
	217 Call 0x1C17D08
	218 Move X23, X0
	219 Compare X22, 0
	220 JumpIfEqual {227}
	221 Move X8, [X22]
	222 Move X0, X22
	223 Move X9, [X8+360]
	224 Move X1, [X8+368]
	225 NotImplemented "Instruction BLR not yet implemented."
	226 Move X1, X0
	227 Move X1, X31
	228 Move X0, X23
	229 Move X2, X31
	230 Call String.Concat, X0, X1
	231 Compare X21, 0
	232 JumpIfEqual {260}
	233 Move X22, X0
	234 Move X0, 0xBFC000
	235 Move X0, [X0+3016]
	236 Call 0x1C17D08
	237 Move X8, [X21]
	238 Move X1, X0
	239 NotImplemented "Instruction LDRH not yet implemented."
	240 Compare X9, 0
	241 JumpIfEqual {248}
	242 Move X10, [X8+176]
	243 Add X10, X10, 8
	244 NotImplemented "Instruction LDUR not yet implemented."
	245 NotImplemented "Instruction CMP not yet implemented."
	246 Subtract X9, X9, 1
	247 Add X10, X10, 16
	248 Move X0, X21
	249 Move W2, W31
	250 Call 0x1C5D788
	251 NotImplemented "Instruction LDRSW not yet implemented."
	252 Add X8, X8, X9
	253 Add X0, X8, 312
	254 Move X8, [X0]
	255 Move X3, [X0+8]
	256 Move W1, 2
	257 Move X0, X21
	258 Move X2, X22
	259 NotImplemented "Instruction BLR not yet implemented."
	260 Call 0x1C17F20
	261 Move W0, 8
	262 Call 0x3EB2AF0
	263 Move X8, [X21]
	264 Move [X0], X8
	265 Move X1, 0x9B5000
	266 Add X1, X1, 3672
	267 Move X2, X31
	268 Call 0x3EB2B00
	269 Move X21, X0
	270 Call 0x3EB2AE0
	271 Move X0, X21
	272 Call 0x1D2D690
	273 Call 0x1991590

Method: System.Void EnqueueActionForDispatch(ExitGames.Client.Photon.PeerBase/MyAction action)

Disassembly:
	0x034F88A8 CBZ X8, 0x34F88C0
	0x034F88AC LDR X8, [X8 + 0x10]
	0x034F88B0 CBZ X8, 0x34F88C0
	0x034F88B4 LDR X0, [X8 + 0x48]
	0x034F88B8 LDR X30, [X31], #0x10
	0x034F88BC RET
	0x034F88C0 BL 0x1C16F20
	0x034F88C4 STR X30, [X31 - 0x10]!
	0x034F88C8 LDR X8, [X0 + 0x10]
	0x034F88CC CBZ X8, 0x34F88E4
	0x034F88D0 LDR X0, [X8 + 0x10]
	0x034F88D4 CBZ X0, 0x34F88E4
	0x034F88D8 MOV X1, X31
	0x034F88DC LDR X30, [X31], #0x10
	0x034F88E0 B 0x350243C
	0x034F88E4 BL 0x1C16F20
	0x034F88E8 LDR W0, [X0 + 0x1C]
	0x034F88EC RET
	0x034F88F0 STR W1, [X0 + 0x1C]
	0x034F88F4 RET
	0x034F88F8 LDR W0, [X0 + 0x20]
	0x034F88FC RET
	0x034F8900 STR W1, [X0 + 0x20]
	0x034F8904 RET
	0x034F8908 LDR X0, [X0 + 0x30]
	0x034F890C RET
	0x034F8910 STR X1, [X0 + 0x30]
	0x034F8914 RET
	0x034F8918 LDR X0, [X0 + 0x38]
	0x034F891C RET
	0x034F8920 STR X1, [X0 + 0x38]
	0x034F8924 RET
	0x034F8928 STR X30, [X31 - 0x20]!
	0x034F892C STP X20, X19, [X31 + 0x10]
	0x034F8930 ADRP X19, 0xEE7000
	0x034F8934 ADRP X20, 0xC3B000
	0x034F8938 LDRB W8, [X19 + 0xA39]
	0x034F893C LDR X20, [X20 + 0xAF0]
	0x034F8940 TBNZ X8, 0x0, 0x34F8958
	0x034F8944 ADRP X0, 0xC3B000
	0x034F8948 LDR X0, [X0 + 0xAF0]
	0x034F894C BL 0x1C16CF4
	0x034F8950 MOVZ W8, 0x1
	0x034F8954 STRB W8, [X19 + 0xA39]
	0x034F8958 LDR X8, [X20]
	0x034F895C LDP X20, X19, [X31 + 0x10]
	0x034F8960 LDR X8, [X8 + 0xB8]
	0x034F8964 LDR X0, [X8]
	0x034F8968 LDR X30, [X31], #0x20
	0x034F896C RET
	0x034F8970 STP X30, X21, [X31 - 0x20]!
	0x034F8974 STP X20, X19, [X31 + 0x10]
	0x034F8978 ADRP X20, 0xEE7000
	0x034F897C ADRP X21, 0xC3B000
	0x034F8980 LDRB W8, [X20 + 0xA3A]
	0x034F8984 LDR X21, [X21 + 0xAF0]
	0x034F8988 MOV X19, X0
	0x034F898C TBNZ X8, 0x0, 0x34F89A4
	0x034F8990 ADRP X0, 0xC3B000
	0x034F8994 LDR X0, [X0 + 0xAF0]
	0x034F8998 BL 0x1C16CF4
	0x034F899C MOVZ W8, 0x1
	0x034F89A0 STRB W8, [X20 + 0xA3A]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, 0xEE8000
	007 Move W8, [X19+2686]
	008 Move X20, X1
	009 Move X21, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xC3C000
	015 Move X0, [X0+2104]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X19+2686], W8
	019 Move X19, [X21+96]
	020 Move [X31+12], W31
	021 Add X1, X31, 12
	022 Move X0, X19
	023 Move X2, X31
	024 Call Monitor.Enter, X0, X1
	025 Move X0, [X21+96]
	026 Compare X0, 0
	027 JumpIfEqual {50}
	028 Move X8, 0xC3C000
	029 Move X8, [X8+2104]
	030 Move X2, [X8]
	031 Move X1, X20
	032 Call Queue`1<Object>.Enqueue, X0, X1
	033 Move X20, X31
	034 Move W8, [X31+12]
	035 Compare W8, 0
	036 JumpIfEqual {40}
	037 Move X0, X19
	038 Move X1, X31
	039 Call Monitor.Exit, X0
	040 Compare X20, 0
	041 JumpIfNotEqual {48}
	042 Move X20, [X31+32]
	043 Move X19, [X31+40]
	044 Move X30, [X31+16]
	045 Move X21, [X31+24]
	046 Add X31, X31, 48
	047 Return 
	048 Move X0, X20
	049 Call 0x1C17F18
	050 Call 0x1C17F20
	051 Move X21, X0
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Move X0, X21
	054 Call 0x3EB2AD0
	055 Move X20, [X0]
	056 Call 0x3EB2AE0
	057 Move X20, X31
	058 Move X21, X0
	059 Move W8, [X31+12]
	060 Compare W8, 0
	061 JumpIfEqual {65}
	062 Move X0, X19
	063 Move X1, X31
	064 Call Monitor.Exit, X0
	065 Compare X20, 0
	066 JumpIfNotEqual {69}
	067 Move X0, X21
	068 Call 0x1D2D690
	069 Move X0, X20
	070 Call 0x1C17F18
	071 Call 0x1991590

Method: System.Void EnqueueDebugReturn(ExitGames.Client.Photon.DebugLevel level, System.String debugReturn)

Disassembly:
	0x034F216C BL 0x351806C
	0x034F2170 LDR W8, [X20 + 0x30]
	0x034F2174 ADD W9, W0, W21
	0x034F2178 CMP W9, W8
	0x034F217C B.LE 0x34F28B4
	0x034F2180 LDR X8, [X19 + 0x10]
	0x034F2184 CBZ X8, 0x34F2B88
	0x034F2188 LDRB W9, [X8 + 0x40]
	0x034F218C CBZ W9, 0x34F2874
	0x034F2190 LDR X19, [X8 + 0x48]
	0x034F2194 ADRP X8, 0xC41000
	0x034F2198 LDR X9, [X20]
	0x034F219C LDR X8, [X8 + 0x8D0]
	0x034F21A0 MOV X0, X20
	0x034F21A4 LDR X21, [X8]
	0x034F21A8 LDP X8, X1, [X9 + 0x168]
	0x034F21AC BLR X8
	0x034F21B0 MOV X1, X0
	0x034F21B4 MOV X0, X21
	0x034F21B8 MOV X2, X31
	0x034F21BC BL 0x321B938
	0x034F21C0 CBZ X19, 0x34F2B88
	0x034F21C4 ADRP X10, 0xC09000
	0x034F21C8 LDR X8, [X19]
	0x034F21CC LDR X10, [X10 + 0xBC8]
	0x034F21D0 MOV X21, X0
	0x034F21D4 LDRH W9, [X8 + 0x12E]
	0x034F21D8 LDR X1, [X10]
	0x034F21DC CBZ X9, 0x34F2200
	0x034F21E0 LDR X10, [X8 + 0xB0]
	0x034F21E4 ADD X10, X10, 0x8
	0x034F21E8 LDUR X11, [X10 - 0x8]
	0x034F21EC CMP X11, X1
	0x034F21F0 B.EQ 0x34F2804
	0x034F21F4 SUBS X9, X9, 0x1
	0x034F21F8 ADD X10, X10, 0x10
	0x034F21FC B.NE 0x34F21E8
	0x034F2200 MOV X0, X19
	0x034F2204 MOV W2, W31
	0x034F2208 BL 0x1C5C788
	0x034F220C B 0x34F2810
	0x034F2210 LDR X0, [X19 + 0x10]
	0x034F2214 CBZ X0, 0x34F2B88
	0x034F2218 MOV X1, X31
	0x034F221C BL 0x350257C
	0x034F2220 TBZ X0, 0x0, 0x34F2874
	0x034F2224 LDR X8, [X19 + 0x10]
	0x034F2228 CBZ X8, 0x34F2B88
	0x034F222C LDR X0, [X8 + 0xA0]
	0x034F2230 CBZ X0, 0x34F2B88
	0x034F2234 LDR W1, [X20 + 0x54]
	0x034F2238 MOV X2, X31
	0x034F223C BL 0x3522CDC
	0x034F2240 B 0x34F2874
	0x034F2244 LDR X0, [X19 + 0x10]
	0x034F2248 CBZ X0, 0x34F2B88
	0x034F224C MOV X1, X31
	0x034F2250 BL 0x350257C
	0x034F2254 TBZ X0, 0x0, 0x34F2298
	0x034F2258 LDR X8, [X19 + 0x10]
	0x034F225C CBZ X8, 0x34F2B88
	0x034F2260 LDR X0, [X19 + 0xC0]
	0x034F2264 CBZ X0, 0x34F2B88
	0x034F2268 LDR X21, [X8 + 0xA0]
	0x034F226C MOV X1, X31
	0x034F2270 BL 0x364C19C
	0x034F2274 CBZ X21, 0x34F2B88
	0x034F2278 STR W0, [X21 + 0x3C]
	0x034F227C LDR X8, [X19 + 0x10]
	0x034F2280 CBZ X8, 0x34F2B88
	0x034F2284 LDR X0, [X8 + 0xA0]
	0x034F2288 CBZ X0, 0x34F2B88
	0x034F228C LDR W1, [X20 + 0x54]
	0x034F2290 MOV X2, X31
	0x034F2294 BL 0x3522CDC
	0x034F2298 LDR X0, [X19 + 0xC0]
	0x034F229C CBZ X0, 0x34F2B88
	0x034F22A0 MOV X1, X31
	0x034F22A4 BL 0x364C19C
	0x034F22A8 LDR X8, [X19 + 0xC0]
	0x034F22AC STR W0, [X19 + 0xCC]
	0x034F22B0 CBZ X8, 0x34F2B88
	0x034F22B4 MOV X0, X8
	0x034F22B8 MOV X1, X31
	0x034F22BC BL 0x364C19C
	0x034F22C0 LDR W8, [X20 + 0x50]
	0x034F22C4 MOV X22, X19
	0x034F22C8 MOVZ W9, 0x2711
	0x034F22CC SUB W8, W0, W8
	0x034F22D0 CMP W8, W9
	0x034F22D4 STR W8, [X22 + 0x7C]!
	0x034F22D8 B.CC 0x34F235C
	0x034F22DC LDR X8, [X19 + 0x10]
	0x034F22E0 CBZ X8, 0x34F2B88
	0x034F22E4 LDRB W8, [X8 + 0x40]
	0x034F22E8 CMP W8, 0x3
	0x034F22EC B.CC 0x34F2350
	0x034F22F0 MOV X0, X22
	0x034F22F4 MOV X1, X31

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0xEEE000
	009 Move X23, 0xC42000
	010 Move W8, [X21+2687]
	011 Move X23, [X23+2136]
	012 Move X19, X2
	013 Move W22, W1
	014 Move X20, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {33}
	019 Move X0, 0xC42000
	020 Move X0, [X0+2096]
	021 Call 0x1C17CF4
	022 Move X0, 0xC42000
	023 Move X0, [X0+2104]
	024 Call 0x1C17CF4
	025 Move X0, 0xC42000
	026 Move X0, [X0+2144]
	027 Call 0x1C17CF4
	028 Move X0, 0xC42000
	029 Move X0, [X0+2136]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X21+2687], W8
	033 Move X0, [X23]
	034 Call 0x1C17F10
	035 Move X1, X31
	036 Move X21, X0
	037 Call <>c__DisplayClass108_0..ctor, X0
	038 Compare X21, 0
	039 JumpIfEqual {86}
	040 Move [X21+16], X20
	041 Move [X21+24], W22
	042 Move [X21+32], X19
	043 Move X19, [X20+96]
	044 Move [X31+12], W31
	045 Add X1, X31, 12
	046 Move X0, X19
	047 Move X2, X31
	048 Call Monitor.Enter, X0, X1
	049 Move X8, 0xC42000
	050 Move X8, [X8+2096]
	051 Move X20, [X20+96]
	052 Move X0, [X8]
	053 Call 0x1C17F10
	054 Move X8, 0xC42000
	055 Move X8, [X8+2144]
	056 Move X22, X0
	057 Move X2, [X8]
	058 Move X1, X21
	059 Move X3, X31
	060 Call MyAction..ctor, X0, X1, X2
	061 Compare X20, 0
	062 JumpIfEqual {89}
	063 Move X8, 0xC42000
	064 Move X8, [X8+2104]
	065 Move X2, [X8]
	066 Move X0, X20
	067 Move X1, X22
	068 Call Queue`1<Object>.Enqueue, X0, X1
	069 Move X20, X31
	070 Move W8, [X31+12]
	071 Compare W8, 0
	072 JumpIfEqual {76}
	073 Move X0, X19
	074 Move X1, X31
	075 Call Monitor.Exit, X0
	076 Compare X20, 0
	077 JumpIfNotEqual {87}
	078 Move X20, [X31+48]
	079 Move X19, [X31+56]
	080 Move X22, [X31+32]
	081 Move X21, [X31+40]
	082 Move X30, [X31+16]
	083 Move X23, [X31+24]
	084 Add X31, X31, 64
	085 Return 
	086 Call 0x1C17F20
	087 Move X0, X20
	088 Call 0x1C17F18
	089 Call 0x1C17F20
	090 Move X21, X0
	091 NotImplemented "Instruction CMP not yet implemented."
	092 Move X0, X21
	093 Call 0x3EB2AD0
	094 Move X20, [X0]
	095 Call 0x3EB2AE0
	096 Move X20, X31
	097 Move X21, X0
	098 Move W8, [X31+12]
	099 Compare W8, 0
	100 JumpIfEqual {104}
	101 Move X0, X19
	102 Move X1, X31
	103 Call Monitor.Exit, X0
	104 Compare X20, 0
	105 JumpIfNotEqual {108}
	106 Move X0, X21
	107 Call 0x1D2D690
	108 Move X0, X20
	109 Call 0x1C17F18
	110 Call 0x1991590

Method: System.Void EnqueueStatusCallback(ExitGames.Client.Photon.StatusCode statusValue)

Disassembly:
	0x034F1DFC BL 0x1C16F20
	0x034F1E00 BL 0x1C16F20
	0x034F1E04 BL 0x1C16F20
	0x034F1E08 BL 0x1C16F28
	0x034F1E0C BL 0x1C16F20
	0x034F1E10 BL 0x1C16F20
	0x034F1E14 MOV X0, X22
	0x034F1E18 BL 0x1C16F18
	0x034F1E1C BL 0x1C16F20
	0x034F1E20 BL 0x1C16F20
	0x034F1E24 BL 0x1C16F20
	0x034F1E28 BL 0x1C16F20
	0x034F1E2C BL 0x1C16F20
	0x034F1E30 BL 0x1C16F20
	0x034F1E34 BL 0x1C16F20
	0x034F1E38 BL 0x1C16F20
	0x034F1E3C MOV X22, X31
	0x034F1E40 B 0x34F1E80
	0x034F1E44 MOV X22, X31
	0x034F1E48 B 0x34F1E50
	0x034F1E4C MOV X21, X0
	0x034F1E50 LDRB W8, [X31 + 0x44]
	0x034F1E54 CBZ W8, 0x34F1E64
	0x034F1E58 MOV X0, X20
	0x034F1E5C MOV X1, X31
	0x034F1E60 BL 0x33E14E4
	0x034F1E64 CBZ X22, 0x34F1F6C
	0x034F1E68 MOV X0, X22
	0x034F1E6C BL 0x1C16F18
	0x034F1E70 MOV X21, X0
	0x034F1E74 STR X1, [X31 + 0x10]
	0x034F1E78 B 0x34F1DD4
	0x034F1E7C MOV X21, X0
	0x034F1E80 LDRB W8, [X31 + 0x40]
	0x034F1E84 CBZ W8, 0x34F1E94
	0x034F1E88 MOV X0, X20
	0x034F1E8C MOV X1, X31
	0x034F1E90 BL 0x33E14E4
	0x034F1E94 CBZ X22, 0x34F1F6C
	0x034F1E98 MOV X0, X22
	0x034F1E9C BL 0x1C16F18
	0x034F1EA0 B 0x34F1F28
	0x034F1EA4 B 0x34F1F28
	0x034F1EA8 B 0x34F1F28
	0x034F1EAC B 0x34F1F28
	0x034F1EB0 B 0x34F1F28
	0x034F1EB4 B 0x34F1F28
	0x034F1EB8 B 0x34F1F28
	0x034F1EBC B 0x34F1F28
	0x034F1EC0 B 0x34F1F28
	0x034F1EC4 B 0x34F1F28
	0x034F1EC8 B 0x34F1F28
	0x034F1ECC B 0x34F1F28
	0x034F1ED0 B 0x34F1F28
	0x034F1ED4 B 0x34F1F28
	0x034F1ED8 B 0x34F1F28
	0x034F1EDC B 0x34F1F28
	0x034F1EE0 B 0x34F1F28
	0x034F1EE4 B 0x34F1F28
	0x034F1EE8 B 0x34F1F28
	0x034F1EEC B 0x34F1F28
	0x034F1EF0 B 0x34F1F28
	0x034F1EF4 B 0x34F1F28
	0x034F1EF8 B 0x34F1F28
	0x034F1EFC B 0x34F1F28
	0x034F1F00 B 0x34F1F28
	0x034F1F04 B 0x34F1F28
	0x034F1F08 B 0x34F1F28
	0x034F1F0C B 0x34F1F28
	0x034F1F10 B 0x34F1F28
	0x034F1F14 B 0x34F1F28
	0x034F1F18 B 0x34F1F28
	0x034F1F1C B 0x34F1F28
	0x034F1F20 B 0x34F1F28
	0x034F1F24 B 0x34F1F28
	0x034F1F28 CMP W1, 0x1
	0x034F1F2C B.NE 0x34F1F44
	0x034F1F30 BL 0x3EB1AD0
	0x034F1F34 LDR X22, [X0]
	0x034F1F38 BL 0x3EB1AE0
	0x034F1F3C MOV W23, W31
	0x034F1F40 B 0x34F1D30
	0x034F1F44 MOV X21, X0
	0x034F1F48 MOV X22, X31
	0x034F1F4C B 0x34F1F54
	0x034F1F50 MOV X21, X0
	0x034F1F54 LDRB W8, [X31 + 0x3C]
	0x034F1F58 CBZ W8, 0x34F1F68
	0x034F1F5C LDR X0, [X31 + 0x8]
	0x034F1F60 MOV X1, X31
	0x034F1F64 BL 0x33E14E4
	0x034F1F68 CBNZ X22, 0x34F1F74
	0x034F1F6C MOV X0, X21
	0x034F1F70 BL 0x1D2C690
	0x034F1F74 MOV X0, X22

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xEEF000
	007 Move X22, 0xC43000
	008 Move W8, [X21+2688]
	009 Move X22, [X22+2088]
	010 Move W19, W1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {30}
	016 Move X0, 0xC43000
	017 Move X0, [X0+2096]
	018 Call 0x1C17CF4
	019 Move X0, 0xC43000
	020 Move X0, [X0+2104]
	021 Call 0x1C17CF4
	022 Move X0, 0xC43000
	023 Move X0, [X0+2112]
	024 Call 0x1C17CF4
	025 Move X0, 0xC43000
	026 Move X0, [X0+2088]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X21+2688], W8
	030 Move X0, [X22]
	031 Call 0x1C17F10
	032 Move X1, X31
	033 Move X21, X0
	034 Call <>c__DisplayClass109_0..ctor, X0
	035 Compare X21, 0
	036 JumpIfEqual {80}
	037 Move [X21+16], X20
	038 Move [X21+24], W19
	039 Move X19, [X20+96]
	040 Move [X31+12], W31
	041 Add X1, X31, 12
	042 Move X0, X19
	043 Move X2, X31
	044 Call Monitor.Enter, X0, X1
	045 Move X8, 0xC43000
	046 Move X8, [X8+2096]
	047 Move X20, [X20+96]
	048 Move X0, [X8]
	049 Call 0x1C17F10
	050 Move X8, 0xC43000
	051 Move X8, [X8+2112]
	052 Move X22, X0
	053 Move X2, [X8]
	054 Move X1, X21
	055 Move X3, X31
	056 Call MyAction..ctor, X0, X1, X2
	057 Compare X20, 0
	058 JumpIfEqual {83}
	059 Move X8, 0xC43000
	060 Move X8, [X8+2104]
	061 Move X2, [X8]
	062 Move X0, X20
	063 Move X1, X22
	064 Call Queue`1<Object>.Enqueue, X0, X1
	065 Move X20, X31
	066 Move W8, [X31+12]
	067 Compare W8, 0
	068 JumpIfEqual {72}
	069 Move X0, X19
	070 Move X1, X31
	071 Call Monitor.Exit, X0
	072 Compare X20, 0
	073 JumpIfNotEqual {81}
	074 Move X20, [X31+32]
	075 Move X19, [X31+40]
	076 Move X22, [X31+16]
	077 Move X21, [X31+24]
	078 Move X30, [X31+48]
	079 Return 
	080 Call 0x1C17F20
	081 Move X0, X20
	082 Call 0x1C17F18
	083 Call 0x1C17F20
	084 Move X21, X0
	085 NotImplemented "Instruction CMP not yet implemented."
	086 Move X0, X21
	087 Call 0x3EB2AD0
	088 Move X20, [X0]
	089 Call 0x3EB2AE0
	090 Move X20, X31
	091 Move X21, X0
	092 Move W8, [X31+12]
	093 Compare W8, 0
	094 JumpIfEqual {98}
	095 Move X0, X19
	096 Move X1, X31
	097 Call Monitor.Exit, X0
	098 Compare X20, 0
	099 JumpIfNotEqual {102}
	100 Move X0, X21
	101 Call 0x1D2D690
	102 Move X0, X20
	103 Call 0x1C17F18
	104 Call 0x1991590

Method: ExitGames.Client.Photon.NetworkSimulationSet get_NetworkSimulationSettings()

Disassembly:
	0x034F16D0 BL 0x1C16CF4
	0x034F16D4 ADRP X0, 0xC42000

ISIL:
	001 Move X0, [X0+272]
	002 Return X0

Method: System.Void SendNetworkSimulated(System.Byte[] dataToSend)

Disassembly:
	0x034F7390 CBZ W9, 0x34F73CC
	0x034F7394 ADRP X9, 0xC3C000
	0x034F7398 LDR X9, [X9 + 0x7E8]
	0x034F739C LDR X1, [X9]
	0x034F73A0 MOV X0, X8
	0x034F73A4 BL 0x26022C0
	0x034F73A8 MOV X20, X0
	0x034F73AC CBZ X0, 0x34F7448
	0x034F73B0 MOV X0, X20
	0x034F73B4 MOV X1, X23
	0x034F73B8 MOV X2, X22
	0x034F73BC MOV X3, X21
	0x034F73C0 BL 0x34FA67C
	0x034F73C4 MOV X22, X31
	0x034F73C8 B 0x34F740C
	0x034F73CC ADRP X8, 0xC3C000
	0x034F73D0 LDR X8, [X8 + 0x7E0]
	0x034F73D4 LDR X0, [X8]
	0x034F73D8 BL 0x1C16F10
	0x034F73DC MOV X20, X0
	0x034F73E0 MOVZ W8, 0x4
	0x034F73E4 STRB W8, [X0 + 0x20]
	0x034F73E8 MOV X1, X31
	0x034F73EC BL 0x33BDD8C
	0x034F73F0 MOV X0, X20
	0x034F73F4 MOV X1, X23
	0x034F73F8 MOV X2, X22
	0x034F73FC MOV X3, X21
	0x034F7400 BL 0x34FA67C
	0x034F7404 MOV X22, X31
	0x034F7408 STR X24, [X20 + 0x60]
	0x034F740C LDRB W8, [X31 + 0xC]
	0x034F7410 CBZ W8, 0x34F7420
	0x034F7414 MOV X0, X19
	0x034F7418 MOV X1, X31
	0x034F741C BL 0x33E14E4
	0x034F7420 CBNZ X22, 0x34F743C
	0x034F7424 MOV X0, X20
	0x034F7428 LDP X20, X19, [X31 + 0x30]
	0x034F742C LDP X22, X21, [X31 + 0x20]
	0x034F7430 LDP X24, X23, [X31 + 0x10]
	0x034F7434 LDR X30, [X31], #0x40
	0x034F7438 RET
	0x034F743C MOV X0, X22
	0x034F7440 BL 0x1C16F18
	0x034F7444 BL 0x1C16F20
	0x034F7448 BL 0x1C16F20
	0x034F744C B 0x34F7458
	0x034F7450 B 0x34F7458
	0x034F7454 B 0x34F7458
	0x034F7458 MOV X21, X0
	0x034F745C MOV X20, X31
	0x034F7460 B 0x34F7468
	0x034F7464 MOV X21, X0
	0x034F7468 CMP W1, 0x1
	0x034F746C B.NE 0x34F7484
	0x034F7470 MOV X0, X21
	0x034F7474 BL 0x3EB1AD0
	0x034F7478 LDR X22, [X0]
	0x034F747C BL 0x3EB1AE0
	0x034F7480 B 0x34F740C
	0x034F7484 MOV X22, X31
	0x034F7488 B 0x34F7490
	0x034F748C MOV X21, X0
	0x034F7490 LDRB W8, [X31 + 0xC]
	0x034F7494 CBZ W8, 0x34F74A4
	0x034F7498 MOV X0, X19
	0x034F749C MOV X1, X31
	0x034F74A0 BL 0x33E14E4
	0x034F74A4 CBNZ X22, 0x34F74B0
	0x034F74A8 MOV X0, X21
	0x034F74AC BL 0x1D2C690
	0x034F74B0 MOV X0, X22
	0x034F74B4 BL 0x1C16F18
	0x034F74B8 BL 0x1990590
	0x034F74BC SUB X31, X31, 0xA0
	0x034F74C0 STR X30, [X31 + 0x40]
	0x034F74C4 STP X28, X27, [X31 + 0x50]
	0x034F74C8 STP X26, X25, [X31 + 0x60]
	0x034F74CC STP X24, X23, [X31 + 0x70]
	0x034F74D0 STP X22, X21, [X31 + 0x80]
	0x034F74D4 STP X20, X19, [X31 + 0x90]
	0x034F74D8 ADRP X19, 0xEE8000
	0x034F74DC LDRB W8, [X19 + 0xA36]
	0x034F74E0 MOV W24, W3
	0x034F74E4 MOV W21, W2
	0x034F74E8 MOV W22, W1
	0x034F74EC MOV X20, X0
	0x034F74F0 TBNZ X8, 0x0, 0x34F755C
	0x034F74F4 ADRP X0, 0xC3C000
	0x034F74F8 LDR X0, [X0 + 0x848]
	0x034F74FC BL 0x1C16CF4
	0x034F7500 ADRP X0, 0xC3C000
	0x034F7504 LDR X0, [X0 + 0xA28]
	0x034F7508 BL 0x1C16CF4
	0x034F750C ADRP X0, 0xC3C000
	0x034F7510 LDR X0, [X0 + 0xA30]
	0x034F7514 BL 0x1C16CF4
	0x034F7518 ADRP X0, 0xC3C000
	0x034F751C LDR X0, [X0 + 0xA38]
	0x034F7520 BL 0x1C16CF4
	0x034F7524 ADRP X0, 0xBFC000
	0x034F7528 LDR X0, [X0 + 0x758]
	0x034F752C BL 0x1C16CF4
	0x034F7530 ADRP X0, 0xC3C000
	0x034F7534 LDR X0, [X0 + 0xA40]
	0x034F7538 BL 0x1C16CF4
	0x034F753C ADRP X0, 0xC3C000
	0x034F7540 LDR X0, [X0 + 0xA48]
	0x034F7544 BL 0x1C16CF4
	0x034F7548 ADRP X0, 0xC3C000
	0x034F754C LDR X0, [X0 + 0xA50]
	0x034F7550 BL 0x1C16CF4
	0x034F7554 MOVZ W8, 0x1
	0x034F7558 STRB W8, [X19 + 0xA36]
	0x034F755C STP X31, X31, [X31 + 0x20]
	0x034F7560 STR X31, [X31 + 0x30]
	0x034F7564 LDR X19, [X20 + 0x128]
	0x034F7568 STRB W31, [X31 + 0x4C]
	0x034F756C ADD X1, X31, 0x4C
	0x034F7570 MOV X0, X19
	0x034F7574 MOV X2, X31
	0x034F7578 BL 0x33DE64C
	0x034F757C LDR X0, [X20 + 0x128]
	0x034F7580 CBZ X0, 0x34F7740
	0x034F7584 ADRP X8, 0xC3C000
	0x034F7588 LDR X8, [X8 + 0xA40]
	0x034F758C LDR X1, [X8]
	0x034F7590 ADD X8, X31, 0x8
	0x034F7594 BL 0x301CB58
	0x034F7598 ADRP X25, 0xC3C000
	0x034F759C ADRP X28, 0xC3C000
	0x034F75A0 ADRP X27, 0xC3C000
	0x034F75A4 LDR X25, [X25 + 0xA30]
	0x034F75A8 LDUR V0, [X31 + 0x8]
	0x034F75AC LDR X8, [X31 + 0x18]
	0x034F75B0 LDR X28, [X28 + 0xA28]
	0x034F75B4 LDR X27, [X27 + 0xA48]
	0x034F75B8 STR V0, [X31 + 0x2]
	0x034F75BC STR X8, [X31 + 0x30]
	0x034F75C0 LDR X1, [X25]
	0x034F75C4 ADD X0, X31, 0x20
	0x034F75C8 BL 0x2BC4350
	0x034F75CC TBZ X0, 0x0, 0x34F761C
	0x034F75D0 LDR X23, [X31 + 0x30]
	0x034F75D4 CBZ X23, 0x34F760C
	0x034F75D8 LDR W8, [X23 + 0x14]
	0x034F75DC CMP W8, W22
	0x034F75E0 B.NE 0x34F760C
	0x034F75E4 LDRB W8, [X23 + 0x12]
	0x034F75E8 CMP W8, W21
	0x034F75EC B.NE 0x34F760C
	0x034F75F0 LDRB W8, [X23 + 0x10]
	0x034F75F4 ANDS W31, W8, 0x2
	0x034F75F8 CSET W8, EQ
	0x034F75FC EOR W8, W8, W24, 0x0
	0x034F7600 AND W8, W8, 0x1
	0x034F7604 CBZ W8, 0x34F75C0
	0x034F7608 B 0x34F7614
	0x034F760C MOV W8, W31
	0x034F7610 CBZ W8, 0x34F75C0
	0x034F7614 MOV X24, X31
	0x034F7618 B 0x34F7624
	0x034F761C MOV X24, X31
	0x034F7620 MOV X23, X31
	0x034F7624 LDR X1, [X28]
	0x034F7628 ADD X0, X31, 0x20
	0x034F762C BL 0x2BC434C
	0x034F7630 CBNZ X24, 0x34F7744
	0x034F7634 CBZ X23, 0x34F7654
	0x034F7638 LDR X0, [X20 + 0x128]
	0x034F763C CBZ X0, 0x34F774C
	0x034F7640 LDR X2, [X27]
	0x034F7644 MOV X1, X23
	0x034F7648 BL 0x301D7A8
	0x034F764C MOV X20, X31
	0x034F7650 B 0x34F76FC
	0x034F7654 LDR X8, [X20 + 0x10]
	0x034F7658 CBZ X8, 0x34F7750
	0x034F765C LDRB W8, [X8 + 0x40]
	0x034F7660 CMP W8, 0x5
	0x034F7664 B.CC 0x34F76F4
	0x034F7668 LDRB W8, [X20 + 0x40]
	0x034F766C SUB W8, W8, 0x3
	0x034F7670 CMP W8, 0x2
	0x034F7674 B.CC 0x34F76F4
	0x034F7678 ADRP X23, 0xBFC000
	0x034F767C LDR X23, [X23 + 0x758]
	0x034F7680 STR W22, [X31 + 0x8]
	0x034F7684 LDR X0, [X23]
	0x034F7688 ADD X1, X31, 0x8
	0x034F768C BL 0x1C16E04
	0x034F7690 MOV X22, X0
	0x034F7694 LDR X0, [X23]
	0x034F7698 STR W21, [X31 + 0x48]
	0x034F769C ADD X1, X31, 0x48
	0x034F76A0 BL 0x1C16E04
	0x034F76A4 ADRP X9, 0xC3C000
	0x034F76A8 LDRB W8, [X20 + 0x40]
	0x034F76AC LDR X9, [X9 + 0x848]
	0x034F76B0 MOV X21, X0
	0x034F76B4 STRB W8, [X31 + 0x4]
	0x034F76B8 LDR X0, [X9]
	0x034F76BC ADD X1, X31, 0x4
	0x034F76C0 BL 0x1C16E04
	0x034F76C4 ADRP X8, 0xC3C000

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0xEE9000
	009 Move W8, [X21+2689]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {39}
	016 Move X0, 0xC3D000
	017 Move X0, [X0+2480]
	018 Call 0x1C17CF4
	019 Move X0, 0xC3D000
	020 Move X0, [X0+2488]
	021 Call 0x1C17CF4
	022 Move X0, 0xC3D000
	023 Move X0, [X0+2496]
	024 Call 0x1C17CF4
	025 Move X0, 0xC3D000
	026 Move X0, [X0+2504]
	027 Call 0x1C17CF4
	028 Move X0, 0xC3D000
	029 Move X0, [X0+2512]
	030 Call 0x1C17CF4
	031 Move X0, 0xC3D000
	032 Move X0, [X0+2520]
	033 Call 0x1C17CF4
	034 Move X0, 0xC3D000
	035 Move X0, [X0+2528]
	036 Call 0x1C17CF4
	037 Move W8, 1
	038 Move [X21+2689], W8
	039 Move X8, [X20+272]
	040 Compare X8, 0
	041 JumpIfEqual {174}
	042 Move W9, [X8+16]
	043 Compare W9, 0
	044 JumpIfEqual {176}
	045 Move W9, [X20+32]
	046 Compare W9, 0
	047 JumpIfEqual {65}
	048 Move W9, [X8+24]
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Move X0, [X20+248]
	051 Compare X0, 0
	052 JumpIfEqual {174}
	053 Move X8, [X0]
	054 Move W1, W9
	055 ShiftRight W1, 31
	056 And W1, W1, 0x3FFFFFFF
	057 Move X10, [X8+424]
	058 Move X2, [X8+432]
	059 NotImplemented "Instruction BLR not yet implemented."
	060 Move X8, [X20+272]
	061 Compare X8, 0
	062 JumpIfEqual {174}
	063 Move W9, [X8+24]
	064 Subtract W23, W0, W9
	065 Move W9, [X8+28]
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Move X0, [X20+248]
	068 Compare X0, 0
	069 JumpIfEqual {174}
	070 Move X8, [X0]
	071 Move W1, 101
	072 Move X9, [X8+424]
	073 Move X2, [X8+432]
	074 NotImplemented "Instruction BLR not yet implemented."
	075 Move X8, [X20+272]
	076 Compare X8, 0
	077 JumpIfEqual {174}
	078 Move W9, [X8+28]
	079 NotImplemented "Instruction CMP not yet implemented."
	080 Move W9, [X8+72]
	081 Add W9, W9, 1
	082 Move [X8+72], W9
	083 Move W23, W31
	084 Move X0, [X20+192]
	085 Compare X0, 0
	086 JumpIfEqual {174}
	087 Move X21, 0xC3D000
	088 Move W24, [X8+20]
	089 Move X21, [X21+2528]
	090 Move X1, X31
	091 Call Stopwatch.get_ElapsedMilliseconds, X0
	092 Move X8, [X21]
	093 Move X22, X0
	094 Move X0, X8
	095 Call 0x1C17F10
	096 Move X21, X0
	097 Call SimulationItem..ctor, X0
	098 Compare X21, 0
	099 JumpIfEqual {174}
	100 Add W8, W24, W23
	101 Add W22, W8, W22
	102 Move [X21+32], X19
	103 Move [X21+24], W22
	104 Move [X21+40], W8
	105 Move X19, [X20+256]
	106 Move [X31+12], W31
	107 Add X1, X31, 12
	108 Move X0, X19
	109 Move X2, X31
	110 Call Monitor.Enter, X0, X1
	111 Move X8, [X20+256]
	112 Compare X8, 0
	113 JumpIfEqual {196}
	114 Move X23, 0xC3D000
	115 Move W9, [X8+24]
	116 Move X23, [X23+2504]
	117 Compare W9, 0
	118 JumpIfEqual {121}
	119 Move W9, [X20+32]
	120 NotImplemented "Instruction CMP not yet implemented."
	121 Move X2, [X23]
	122 Move X0, X8
	123 Move X1, X21
	124 Call LinkedList`1<Object>.AddLast, X0, X1
	125 Move X9, [X8+16]
	126 Compare X9, 0
	127 JumpIfEqual {144}
	128 Move X24, 0xC3D000
	129 Move X24, [X24+2480]
	130 Move X8, [X9+40]
	131 Compare X8, 0
	132 JumpIfEqual {175}
	133 Move W8, [X8+24]
	134 NotImplemented "Instruction CMP not yet implemented."
	135 Move X1, [X24]
	136 Move X0, X9
	137 Call LinkedListNode`1<Object>.get_Next, X0
	138 Move X9, X0
	139 Compare X0, 0
	140 JumpIfNotEqual {130}
	141 Move X8, [X20+256]
	142 Compare X8, 0
	143 JumpIfEqual {198}
	144 Move X2, [X23]
	145 Move X0, X8
	146 Move X1, X21
	147 Call LinkedList`1<Object>.AddLast, X0, X1
	148 Move X0, [X20+256]
	149 Compare X0, 0
	150 JumpIfEqual {197}
	151 Move X8, 0xC3D000
	152 Move X8, [X8+2496]
	153 Move X3, [X8]
	154 Move X1, X9
	155 Move X2, X21
	156 Call LinkedList`1<Object>.AddBefore, X0, X1, X2
	157 Move X21, X31
	158 Move W8, [X31+12]
	159 Compare W8, 0
	160 JumpIfEqual {164}
	161 Move X0, X19
	162 Move X1, X31
	163 Call Monitor.Exit, X0
	164 Compare X21, 0
	165 JumpIfNotEqual {194}
	166 Move X20, [X31+48]
	167 Move X19, [X31+56]
	168 Move X22, [X31+32]
	169 Move X21, [X31+40]
	170 Move X24, [X31+16]
	171 Move X23, [X31+24]
	172 Move X30, [X31+64]
	173 Return 
	174 Call 0x1C17F20
	175 Call 0x1C17F20
	176 Move X0, 0xC06000
	177 Move X0, [X0+1880]
	178 Call 0x1C17D08
	179 Call 0x1C17F10
	180 Move X19, X0
	181 Move X0, 0xC3D000
	182 Move X0, [X0+2536]
	183 Call 0x1C17D08
	184 Move X1, X0
	185 Move X0, X19
	186 Move X2, X31
	187 Call NotImplementedException..ctor, X0, X1
	188 Move X0, 0xC3D000
	189 Move X0, [X0+2544]
	190 Call 0x1C17D08
	191 Move X1, X0
	192 Move X0, X19
	193 Call 0x1C17DEC
	194 Move X0, X21
	195 Call 0x1C17F18
	196 Call 0x1C17F20
	197 Call 0x1C17F20
	198 Call 0x1C17F20
	199 Move X20, X0
	200 NotImplemented "Instruction CMP not yet implemented."
	201 Move X0, X20
	202 Call 0x3EB2AD0
	203 Move X21, [X0]
	204 Call 0x3EB2AE0
	205 Move X21, X31
	206 Move X20, X0
	207 Move W8, [X31+12]
	208 Compare W8, 0
	209 JumpIfEqual {213}
	210 Move X0, X19
	211 Move X1, X31
	212 Call Monitor.Exit, X0
	213 Compare X21, 0
	214 JumpIfNotEqual {217}
	215 Move X0, X20
	216 Call 0x1D2D690
	217 Move X0, X21
	218 Call 0x1C17F18
	219 Call 0x1991590

Method: System.Void ReceiveNetworkSimulated(System.Byte[] dataReceived)

Disassembly:
	0x034FA3D8 B 0x34FA3F8
	0x034FA3DC ADRP X8, 0xC39000
	0x034FA3E0 LDR X8, [X8 + 0xBE0]
	0x034FA3E4 LDR X0, [X8]
	0x034FA3E8 BL 0x1C16F10
	0x034FA3EC MOV X1, X31
	0x034FA3F0 MOV X19, X0
	0x034FA3F4 BL 0x3506488
	0x034FA3F8 MOV X0, X19
	0x034FA3FC LDP X20, X19, [X31 + 0x10]
	0x034FA400 LDR X30, [X31], #0x20
	0x034FA404 RET
	0x034FA408 STR X30, [X31 - 0x30]!
	0x034FA40C STP X22, X21, [X31 + 0x10]
	0x034FA410 STP X20, X19, [X31 + 0x20]
	0x034FA414 ADRP X21, 0xEE5000
	0x034FA418 ADRP X22, 0xC02000
	0x034FA41C LDRB W8, [X21 + 0xA46]
	0x034FA420 LDR X22, [X22 + 0xBA8]
	0x034FA424 MOV X19, X1
	0x034FA428 MOV X20, X0
	0x034FA42C TBNZ X8, 0x0, 0x34FA444
	0x034FA430 ADRP X0, 0xC02000
	0x034FA434 LDR X0, [X0 + 0xBA8]
	0x034FA438 BL 0x1C16CF4
	0x034FA43C MOVZ W8, 0x1
	0x034FA440 STRB W8, [X21 + 0xA46]
	0x034FA444 LDR X0, [X22]
	0x034FA448 BL 0x1C16F10
	0x034FA44C MOVZ W1, 0x40
	0x034FA450 MOV X2, X31
	0x034FA454 MOV X21, X0
	0x034FA458 BL 0x3517E94
	0x034FA45C LDR X8, [X20]
	0x034FA460 MOVZ W3, 0x1
	0x034FA464 MOV X0, X20
	0x034FA468 MOV X1, X21
	0x034FA46C LDP X9, X4, [X8 + 0x198]
	0x034FA470 MOV X2, X19
	0x034FA474 BLR X9
	0x034FA478 CBZ X21, 0x34FA494
	0x034FA47C MOV X0, X21
	0x034FA480 LDP X20, X19, [X31 + 0x20]
	0x034FA484 LDP X22, X21, [X31 + 0x10]
	0x034FA488 MOV X1, X31
	0x034FA48C LDR X30, [X31], #0x30
	0x034FA490 B 0x3517FF8
	0x034FA494 BL 0x1C16F20
	0x034FA498 STR X30, [X31 - 0x20]!
	0x034FA49C STP X20, X19, [X31 + 0x10]
	0x034FA4A0 CBZ X1, 0x34FA4E0
	0x034FA4A4 MOV X19, X1
	0x034FA4A8 MOV X20, X0
	0x034FA4AC MOV X0, X1
	0x034FA4B0 MOV X1, X31
	0x034FA4B4 BL 0x351EF00
	0x034FA4B8 LDR X8, [X20]
	0x034FA4BC MOV W2, W0
	0x034FA4C0 MOV X0, X20
	0x034FA4C4 MOV X1, X19
	0x034FA4C8 LDR X5, [X8 + 0x208]
	0x034FA4CC LDR X4, [X8 + 0x210]
	0x034FA4D0 LDP X20, X19, [X31 + 0x10]
	0x034FA4D4 MOV W3, W31
	0x034FA4D8 LDR X30, [X31], #0x20
	0x034FA4DC BR X5
	0x034FA4E0 BL 0x1C16F20
	0x034FA4E4 STR X30, [X31 - 0x30]!
	0x034FA4E8 STP X22, X21, [X31 + 0x10]
	0x034FA4EC STP X20, X19, [X31 + 0x20]
	0x034FA4F0 ADRP X21, 0xEE5000
	0x034FA4F4 ADRP X22, 0xC02000
	0x034FA4F8 LDRB W8, [X21 + 0xA47]
	0x034FA4FC LDR X22, [X22 + 0xBA8]
	0x034FA500 MOV X20, X1
	0x034FA504 MOV X19, X0
	0x034FA508 TBNZ X8, 0x0, 0x34FA520
	0x034FA50C ADRP X0, 0xC02000
	0x034FA510 LDR X0, [X0 + 0xBA8]
	0x034FA514 BL 0x1C16CF4
	0x034FA518 MOVZ W8, 0x1
	0x034FA51C STRB W8, [X21 + 0xA47]
	0x034FA520 LDR X0, [X22]
	0x034FA524 BL 0x1C16F10
	0x034FA528 MOV X1, X20
	0x034FA52C MOV X2, X31
	0x034FA530 MOV X21, X0
	0x034FA534 BL 0x351EB5C
	0x034FA538 CBZ X21, 0x34FA574
	0x034FA53C MOV X0, X21
	0x034FA540 MOV X1, X31
	0x034FA544 BL 0x351EF00
	0x034FA548 LDR X8, [X19]
	0x034FA54C MOV W2, W0
	0x034FA550 MOV X0, X19
	0x034FA554 MOV X1, X21
	0x034FA558 LDR X5, [X8 + 0x208]
	0x034FA55C LDR X4, [X8 + 0x210]
	0x034FA560 LDP X20, X19, [X31 + 0x20]
	0x034FA564 LDP X22, X21, [X31 + 0x10]
	0x034FA568 MOV W3, W31
	0x034FA56C LDR X30, [X31], #0x30
	0x034FA570 BR X5
	0x034FA574 BL 0x1C16F20
	0x034FA578 STR X30, [X31 - 0x20]!
	0x034FA57C STP X20, X19, [X31 + 0x10]
	0x034FA580 CBZ X1, 0x34FA5C0
	0x034FA584 MOV X19, X1
	0x034FA588 MOV X20, X0
	0x034FA58C MOV X0, X1
	0x034FA590 MOV X1, X31
	0x034FA594 BL 0x351EF00
	0x034FA598 LDR X8, [X20]
	0x034FA59C MOV W2, W0
	0x034FA5A0 MOV X0, X20
	0x034FA5A4 MOV X1, X19
	0x034FA5A8 LDR X5, [X8 + 0x208]
	0x034FA5AC LDR X4, [X8 + 0x210]
	0x034FA5B0 LDP X20, X19, [X31 + 0x10]
	0x034FA5B4 MOV W3, W31
	0x034FA5B8 LDR X30, [X31], #0x20
	0x034FA5BC BR X5
	0x034FA5C0 BL 0x1C16F20
	0x034FA5C4 LDR X8, [X0]
	0x034FA5C8 MOVZ W3, 0x1
	0x034FA5CC LDP X5, X4, [X8 + 0x198]
	0x034FA5D0 BR X5
	0x034FA5D4 STP X30, X21, [X31 - 0x20]!
	0x034FA5D8 STP X20, X19, [X31 + 0x10]
	0x034FA5DC ADRP X20, 0xEE5000
	0x034FA5E0 ADRP X21, 0xC39000
	0x034FA5E4 LDRB W8, [X20 + 0xA48]
	0x034FA5E8 LDR X21, [X21 + 0xBE8]
	0x034FA5EC MOV X19, X0
	0x034FA5F0 TBNZ X8, 0x0, 0x34FA608
	0x034FA5F4 ADRP X0, 0xC39000
	0x034FA5F8 LDR X0, [X0 + 0xBE8]
	0x034FA5FC BL 0x1C16CF4
	0x034FA600 MOVZ W8, 0x1
	0x034FA604 STRB W8, [X20 + 0xA48]
	0x034FA608 LDR X0, [X21]
	0x034FA60C BL 0x1C16F10
	0x034FA610 MOV X20, X0
	0x034FA614 BL 0x34ECBA4
	0x034FA618 STR X20, [X19 + 0x10]
	0x034FA61C MOV X0, X19
	0x034FA620 LDP X20, X19, [X31 + 0x10]
	0x034FA624 MOV X1, X31
	0x034FA628 LDP X30, X21, [X31], #0x20
	0x034FA62C B 0x33BDD8C
	0x034FA630 STR X30, [X31 - 0x30]!
	0x034FA634 STP X22, X21, [X31 + 0x10]
	0x034FA638 STP X20, X19, [X31 + 0x20]
	0x034FA63C MOV X21, X1
	0x034FA640 MOVZ W8, 0x4
	0x034FA644 MOV X1, X31
	0x034FA648 MOV X19, X3
	0x034FA64C MOV X20, X2
	0x034FA650 MOV X22, X0
	0x034FA654 STRB W8, [X0 + 0x20]
	0x034FA658 BL 0x33BDD8C
	0x034FA65C MOV X0, X22
	0x034FA660 MOV X1, X21
	0x034FA664 MOV X2, X20
	0x034FA668 MOV X3, X19
	0x034FA66C LDP X20, X19, [X31 + 0x20]
	0x034FA670 LDP X22, X21, [X31 + 0x10]
	0x034FA674 LDR X30, [X31], #0x30
	0x034FA678 B 0x34FA67C
	0x034FA67C STR X30, [X31 - 0x40]!
	0x034FA680 STP X24, X23, [X31 + 0x10]
	0x034FA684 STP X22, X21, [X31 + 0x20]
	0x034FA688 STP X20, X19, [X31 + 0x30]
	0x034FA68C ADRP X23, 0xEE5000
	0x034FA690 LDRB W8, [X23 + 0xA4F]
	0x034FA694 MOV X19, X3
	0x034FA698 MOV X20, X2
	0x034FA69C MOV X22, X1
	0x034FA6A0 MOV X21, X0
	0x034FA6A4 TBNZ X8, 0x0, 0x34FA6C8
	0x034FA6A8 ADRP X0, 0xC39000
	0x034FA6AC LDR X0, [X0 + 0x778]
	0x034FA6B0 BL 0x1C16CF4
	0x034FA6B4 ADRP X0, 0xC01000
	0x034FA6B8 LDR X0, [X0 + 0xF00]
	0x034FA6BC BL 0x1C16CF4
	0x034FA6C0 MOVZ W8, 0x1
	0x034FA6C4 STRB W8, [X23 + 0xA4F]
	0x034FA6C8 STRH W31, [X31 + 0xC]
	0x034FA6CC LDRSW X8, [X19]
	0x034FA6D0 ADD W10, W8, 0x1
	0x034FA6D4 STR W10, [X19]
	0x034FA6D8 CBZ X20, 0x34FA9B0
	0x034FA6DC LDR W9, [X20 + 0x18]
	0x034FA6E0 CMP W8, W9
	0x034FA6E4 B.CS 0x34FA9AC
	0x034FA6E8 ADD X11, X20, X8
	0x034FA6EC LDRB W12, [X11 + 0x20]
	0x034FA6F0 ADD W11, W8, 0x2
	0x034FA6F4 CMP W10, W9
	0x034FA6F8 STRB W12, [X21 + 0x11]
	0x034FA6FC STR W11, [X19]
	0x034FA700 B.CS 0x34FA9AC
	0x034FA704 ADD X10, X20, W10, SXTW
	0x034FA708 LDRB W12, [X10 + 0x20]
	0x034FA70C ADD W10, W8, 0x3

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0xEE6000
	009 Move W8, [X21+2690]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {39}
	016 Move X0, 0xC3A000
	017 Move X0, [X0+2480]
	018 Call 0x1C17CF4
	019 Move X0, 0xC3A000
	020 Move X0, [X0+2488]
	021 Call 0x1C17CF4
	022 Move X0, 0xC3A000
	023 Move X0, [X0+2496]
	024 Call 0x1C17CF4
	025 Move X0, 0xC3A000
	026 Move X0, [X0+2504]
	027 Call 0x1C17CF4
	028 Move X0, 0xC3A000
	029 Move X0, [X0+2512]
	030 Call 0x1C17CF4
	031 Move X0, 0xC3A000
	032 Move X0, [X0+2520]
	033 Call 0x1C17CF4
	034 Move X0, 0xC3A000
	035 Move X0, [X0+2528]
	036 Call 0x1C17CF4
	037 Move W8, 1
	038 Move [X21+2690], W8
	039 Move X8, [X20+272]
	040 Compare X8, 0
	041 JumpIfEqual {174}
	042 Move W9, [X8+16]
	043 Compare W9, 0
	044 JumpIfEqual {176}
	045 Move W9, [X20+32]
	046 Compare W9, 0
	047 JumpIfEqual {65}
	048 Move W9, [X8+36]
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Move X0, [X20+248]
	051 Compare X0, 0
	052 JumpIfEqual {174}
	053 Move X8, [X0]
	054 Move W1, W9
	055 ShiftRight W1, 31
	056 And W1, W1, 0x3FFFFFFF
	057 Move X10, [X8+424]
	058 Move X2, [X8+432]
	059 NotImplemented "Instruction BLR not yet implemented."
	060 Move X8, [X20+272]
	061 Compare X8, 0
	062 JumpIfEqual {174}
	063 Move W9, [X8+36]
	064 Subtract W23, W0, W9
	065 Move W9, [X8+40]
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Move X0, [X20+248]
	068 Compare X0, 0
	069 JumpIfEqual {174}
	070 Move X8, [X0]
	071 Move W1, 101
	072 Move X9, [X8+424]
	073 Move X2, [X8+432]
	074 NotImplemented "Instruction BLR not yet implemented."
	075 Move X8, [X20+272]
	076 Compare X8, 0
	077 JumpIfEqual {174}
	078 Move W9, [X8+40]
	079 NotImplemented "Instruction CMP not yet implemented."
	080 Move W9, [X8+76]
	081 Add W9, W9, 1
	082 Move [X8+76], W9
	083 Move W23, W31
	084 Move X0, [X20+192]
	085 Compare X0, 0
	086 JumpIfEqual {174}
	087 Move X21, 0xC3A000
	088 Move W24, [X8+32]
	089 Move X21, [X21+2528]
	090 Move X1, X31
	091 Call Stopwatch.get_ElapsedMilliseconds, X0
	092 Move X8, [X21]
	093 Move X22, X0
	094 Move X0, X8
	095 Call 0x1C17F10
	096 Move X21, X0
	097 Call SimulationItem..ctor, X0
	098 Compare X21, 0
	099 JumpIfEqual {174}
	100 Add W8, W24, W23
	101 Add W22, W8, W22
	102 Move [X21+32], X19
	103 Move [X21+24], W22
	104 Move [X21+40], W8
	105 Move X19, [X20+264]
	106 Move [X31+12], W31
	107 Add X1, X31, 12
	108 Move X0, X19
	109 Move X2, X31
	110 Call Monitor.Enter, X0, X1
	111 Move X8, [X20+264]
	112 Compare X8, 0
	113 JumpIfEqual {196}
	114 Move X23, 0xC3A000
	115 Move W9, [X8+24]
	116 Move X23, [X23+2504]
	117 Compare W9, 0
	118 JumpIfEqual {121}
	119 Move W9, [X20+32]
	120 NotImplemented "Instruction CMP not yet implemented."
	121 Move X2, [X23]
	122 Move X0, X8
	123 Move X1, X21
	124 Call LinkedList`1<Object>.AddLast, X0, X1
	125 Move X9, [X8+16]
	126 Compare X9, 0
	127 JumpIfEqual {144}
	128 Move X24, 0xC3A000
	129 Move X24, [X24+2480]
	130 Move X8, [X9+40]
	131 Compare X8, 0
	132 JumpIfEqual {175}
	133 Move W8, [X8+24]
	134 NotImplemented "Instruction CMP not yet implemented."
	135 Move X1, [X24]
	136 Move X0, X9
	137 Call LinkedListNode`1<Object>.get_Next, X0
	138 Move X9, X0
	139 Compare X0, 0
	140 JumpIfNotEqual {130}
	141 Move X8, [X20+264]
	142 Compare X8, 0
	143 JumpIfEqual {198}
	144 Move X2, [X23]
	145 Move X0, X8
	146 Move X1, X21
	147 Call LinkedList`1<Object>.AddLast, X0, X1
	148 Move X0, [X20+264]
	149 Compare X0, 0
	150 JumpIfEqual {197}
	151 Move X8, 0xC3A000
	152 Move X8, [X8+2496]
	153 Move X3, [X8]
	154 Move X1, X9
	155 Move X2, X21
	156 Call LinkedList`1<Object>.AddBefore, X0, X1, X2
	157 Move X21, X31
	158 Move W8, [X31+12]
	159 Compare W8, 0
	160 JumpIfEqual {164}
	161 Move X0, X19
	162 Move X1, X31
	163 Call Monitor.Exit, X0
	164 Compare X21, 0
	165 JumpIfNotEqual {194}
	166 Move X20, [X31+48]
	167 Move X19, [X31+56]
	168 Move X22, [X31+32]
	169 Move X21, [X31+40]
	170 Move X24, [X31+16]
	171 Move X23, [X31+24]
	172 Move X30, [X31+64]
	173 Return 
	174 Call 0x1C17F20
	175 Call 0x1C17F20
	176 Move X0, 0xC03000
	177 Move X0, [X0+1880]
	178 Call 0x1C17D08
	179 Call 0x1C17F10
	180 Move X19, X0
	181 Move X0, 0xC3A000
	182 Move X0, [X0+2896]
	183 Call 0x1C17D08
	184 Move X1, X0
	185 Move X0, X19
	186 Move X2, X31
	187 Call NotImplementedException..ctor, X0, X1
	188 Move X0, 0xC3A000
	189 Move X0, [X0+2904]
	190 Call 0x1C17D08
	191 Move X1, X0
	192 Move X0, X19
	193 Call 0x1C17DEC
	194 Move X0, X21
	195 Call 0x1C17F18
	196 Call 0x1C17F20
	197 Call 0x1C17F20
	198 Call 0x1C17F20
	199 Move X20, X0
	200 NotImplemented "Instruction CMP not yet implemented."
	201 Move X0, X20
	202 Call 0x3EB2AD0
	203 Move X21, [X0]
	204 Call 0x3EB2AE0
	205 Move X21, X31
	206 Move X20, X0
	207 Move W8, [X31+12]
	208 Compare W8, 0
	209 JumpIfEqual {213}
	210 Move X0, X19
	211 Move X1, X31
	212 Call Monitor.Exit, X0
	213 Compare X21, 0
	214 JumpIfNotEqual {217}
	215 Move X0, X20
	216 Call 0x1D2D690
	217 Move X0, X21
	218 Call 0x1C17F18
	219 Call 0x1991590

Method: System.Void NetworkSimRun()

Disassembly:
	0x035002B4 B.LS 0x35007B4
	0x035002B8 STR X0, [X23 + 0x48]
	0x035002BC MOV X0, X23
	0x035002C0 MOV X1, X31
	0x035002C4 BL 0x32278CC
	0x035002C8 MOV X2, X0
	0x035002CC MOVZ W1, 0x3
	0x035002D0 MOV X0, X19
	0x035002D4 MOV X3, X31
	0x035002D8 BL 0x34F973C
	0x035002DC LDR X0, [X19 + 0x58]
	0x035002E0 CBNZ X0, 0x34FFF7C
	0x035002E4 B 0x3500B34
	0x035002E8 LDR X1, [X29]
	0x035002EC MOV X0, X22
	0x035002F0 BL 0x269F34C
	0x035002F4 CBZ X0, 0x3500B34
	0x035002F8 LDRB W8, [X0 + 0x14]
	0x035002FC CBZ W8, 0x3500394
	0x03500300 LDR W8, [X31 + 0x14]
	0x03500304 TBZ X8, 0x0, 0x35003F4
	0x03500308 ADRP X8, 0xC1B000
	0x0350030C LDR X8, [X8 + 0x5B0]
	0x03500310 LDR X0, [X8]
	0x03500314 LDR W8, [X0 + 0xE0]
	0x03500318 CBNZ W8, 0x3500320
	0x0350031C BL 0x1C16DFC
	0x03500320 LDR X1, [X29]
	0x03500324 LDR X23, [X31 + 0x70]
	0x03500328 MOV X0, X22
	0x0350032C BL 0x269F34C
	0x03500330 CBZ X0, 0x3500B34
	0x03500334 LDR X10, [X31 + 0x8]
	0x03500338 CBZ X10, 0x3500B34
	0x0350033C LDR X8, [X10]
	0x03500340 LDR W3, [X0 + 0x10]
	0x03500344 MOV X0, X10
	0x03500348 MOV X1, X23
	0x0350034C LDR X9, [X8 + 0x388]
	0x03500350 LDR X4, [X8 + 0x390]
	0x03500354 MOV W2, W31
	0x03500358 MOV X23, X10
	0x0350035C BLR X9
	0x03500360 LDR X8, [X23]
	0x03500364 MOV X0, X23
	0x03500368 LDP X9, X1, [X8 + 0x1E8]
	0x0350036C BLR X9
	0x03500370 LDR X8, [X23]
	0x03500374 MOV X22, X0
	0x03500378 MOV X0, X23
	0x0350037C LDR X9, [X8 + 0x3B8]
	0x03500380 LDR X1, [X8 + 0x3C0]
	0x03500384 BLR X9
	0x03500388 CBZ X0, 0x3500B34
	0x0350038C MOV X1, X0
	0x03500390 B 0x3500438
	0x03500394 ADRP X8, 0xC1B000
	0x03500398 LDR X8, [X8 + 0x5B0]
	0x0350039C LDR X0, [X8]
	0x035003A0 LDR W8, [X0 + 0xE0]
	0x035003A4 CBNZ W8, 0x35003AC
	0x035003A8 BL 0x1C16DFC
	0x035003AC LDR X1, [X29]
	0x035003B0 LDR X23, [X31 + 0x70]
	0x035003B4 MOV X0, X22
	0x035003B8 BL 0x269F34C
	0x035003BC CBZ X0, 0x3500B34
	0x035003C0 LDR X10, [X31 + 0x8]
	0x035003C4 CBZ X10, 0x3500B34
	0x035003C8 LDR X8, [X10]
	0x035003CC LDR W3, [X0 + 0x10]
	0x035003D0 MOV X0, X10
	0x035003D4 MOV X1, X23
	0x035003D8 LDR X9, [X8 + 0x388]
	0x035003DC LDR X4, [X8 + 0x390]
	0x035003E0 MOV W2, W31
	0x035003E4 BLR X9
	0x035003E8 MOVZ W8, 0x1
	0x035003EC STR W8, [X31 + 0x14]
	0x035003F0 B 0x35002DC
	0x035003F4 LDR X1, [X29]
	0x035003F8 MOV X0, X22
	0x035003FC BL 0x269F34C
	0x03500400 CBZ X0, 0x3500B34
	0x03500404 ADRP X8, 0xC1B000
	0x03500408 LDR X8, [X8 + 0x5B0]
	0x0350040C LDR W22, [X0 + 0x10]
	0x03500410 LDR X8, [X8]
	0x03500414 LDR W9, [X8 + 0xE0]
	0x03500418 CBNZ W9, 0x3500424
	0x0350041C MOV X0, X8
	0x03500420 BL 0x1C16DFC
	0x03500424 LDR X1, [X31 + 0x70]
	0x03500428 CBZ X1, 0x3500B34
	0x0350042C LDR W8, [X1 + 0x18]
	0x03500430 CMP W8, 0x5
	0x03500434 B.LS 0x35007B4
	0x03500438 LDR W8, [X1 + 0x18]
	0x0350043C CMP W8, 0x5
	0x03500440 B.LS 0x35007B4
	0x03500444 LDRB W23, [X1 + 0x25]
	0x03500448 MOVZ W3, 0x1
	0x0350044C MOV X0, X19
	0x03500450 MOV W2, W22
	0x03500454 MOV X4, X31
	0x03500458 BL 0x34F91F0
	0x0350045C LDR W8, [X31 + 0x14]
	0x03500460 TBZ X8, 0x0, 0x350049C
	0x03500464 LDR X24, [X31 + 0x8]
	0x03500468 CBZ X24, 0x3500B34
	0x0350046C LDR X8, [X24]
	0x03500470 MOV X0, X24
	0x03500474 MOV X1, X31
	0x03500478 LDR X9, [X8 + 0x348]
	0x0350047C LDR X2, [X8 + 0x350]
	0x03500480 BLR X9
	0x03500484 LDR X8, [X24]
	0x03500488 MOV X0, X24
	0x0350048C MOV X1, X31
	0x03500490 LDR X9, [X8 + 0x208]
	0x03500494 LDR X2, [X8 + 0x210]
	0x03500498 BLR X9
	0x0350049C LDR X0, [X19 + 0x10]
	0x035004A0 CBZ X0, 0x3500B34
	0x035004A4 MOV X1, X31
	0x035004A8 BL 0x34EFFC0
	0x035004AC TBZ X0, 0x0, 0x35004DC
	0x035004B0 LDR X0, [X19 + 0x10]
	0x035004B4 CBZ X0, 0x3500B34
	0x035004B8 MOV X1, X31
	0x035004BC BL 0x34F72F8
	0x035004C0 CBZ X0, 0x3500B34
	0x035004C4 MOV W1, W22
	0x035004C8 MOV X2, X31
	0x035004CC CBZ W23, 0x35004D8
	0x035004D0 BL 0x3517F40
	0x035004D4 B 0x35004DC
	0x035004D8 BL 0x3517F24
	0x035004DC STR W31, [X31 + 0x14]
	0x035004E0 B 0x35002DC
	0x035004E4 LDR X0, [X19 + 0x58]
	0x035004E8 CBZ X0, 0x3500B34
	0x035004EC LDR X8, [X0]
	0x035004F0 LDP X9, X1, [X8 + 0x188]
	0x035004F4 BLR X9
	0x035004F8 ANDS W31, W0, 0xFF
	0x035004FC STR X0, [X31 + 0x68]
	0x03500500 B.EQ 0x3500650
	0x03500504 LDR X0, [X19 + 0x58]
	0x03500508 CBZ X0, 0x3500B34
	0x0350050C LDR X8, [X0]
	0x03500510 LDP X9, X1, [X8 + 0x188]
	0x03500514 BLR X9
	0x03500518 ADRP X8, 0xC33000
	0x0350051C LDR X8, [X8 + 0xD70]
	0x03500520 STR X0, [X31 + 0x68]
	0x03500524 ADD X0, X31, 0x68
	0x03500528 LDR X1, [X8]
	0x0350052C BL 0x24345D0
	0x03500530 B 0x3500654
	0x03500534 LDR W8, [X19 + 0x1C]
	0x03500538 CBZ W8, 0x350063C
	0x0350053C CMP W8, 0x3
	0x03500540 B.EQ 0x350063C
	0x03500544 ADRP X9, 0xC33000
	0x03500548 LDR X9, [X9 + 0xB20]
	0x0350054C MOVN X21, 0x0
	0x03500550 ADD X0, X31, 0x48
	0x03500554 MOV X1, X31
	0x03500558 LDR X9, [X9]
	0x0350055C STR W8, [X31 + 0x58]
	0x03500560 STP X9, X21, [X31 + 0x48]
	0x03500564 BL 0x33B162C
	0x03500568 LDR X8, [X19 + 0x58]
	0x0350056C CBZ X8, 0x3500B34
	0x03500570 LDR X9, [X8]
	0x03500574 MOV X20, X0
	0x03500578 MOV X0, X8
	0x0350057C LDP X10, X1, [X9 + 0x1B8]
	0x03500580 BLR X10
	0x03500584 ADRP X8, 0xC33000
	0x03500588 LDR X8, [X8 + 0xD88]
	0x0350058C STR W0, [X31 + 0x40]
	0x03500590 ADD X0, X31, 0x30
	0x03500594 MOV X1, X31
	0x03500598 LDR X8, [X8]
	0x0350059C STP X8, X21, [X31 + 0x30]
	0x035005A0 BL 0x33B162C
	0x035005A4 ADRP X8, 0xC33000
	0x035005A8 LDR X8, [X8 + 0xDC0]
	0x035005AC ADRP X9, 0xC33000
	0x035005B0 LDR X9, [X9 + 0xDD8]
	0x035005B4 MOV X3, X0
	0x035005B8 LDR X8, [X8]
	0x035005BC MOV X1, X20
	0x035005C0 LDR X2, [X9]
	0x035005C4 MOV X4, X31
	0x035005C8 MOV X0, X8
	0x035005CC BL 0x32277C4
	0x035005D0 MOV X2, X0
	0x035005D4 MOVZ W1, 0x3
	0x035005D8 MOV X0, X19
	0x035005DC MOV X3, X31
	0x035005E0 BL 0x34F973C
	0x035005E4 LDR X0, [X19 + 0x58]
	0x035005E8 CBZ X0, 0x3500B34
	0x035005EC LDR X8, [X0]
	0x035005F0 LDP X9, X1, [X8 + 0x1B8]
	0x035005F4 BLR X9
	0x035005F8 CMP W0, 0x4
	0x035005FC B.NE 0x3500610
	0x03500600 MOVZ W1, 0x413
	0x03500604 MOV X0, X19
	0x03500608 MOV X2, X31
	0x0350060C BL 0x34F9754
	0x03500610 LDR X0, [X19 + 0x58]
	0x03500614 CBZ X0, 0x3500B34
	0x03500618 LDR X8, [X0]
	0x0350061C LDP X9, X1, [X8 + 0x1B8]
	0x03500620 BLR X9
	0x03500624 CMP W0, 0x6
	0x03500628 B.NE 0x350063C
	0x0350062C MOVZ W1, 0x414
	0x03500630 MOV X0, X19
	0x03500634 MOV X2, X31
	0x03500638 BL 0x34F9754
	0x0350063C LDR X8, [X19]
	0x03500640 MOV X0, X19
	0x03500644 LDP X9, X1, [X8 + 0x188]
	0x03500648 BLR X9
	0x0350064C B 0x3500794
	0x03500650 MOV W0, W31
	0x03500654 STR W0, [X19 + 0x20]
	0x03500658 ADRP X8, 0xBF3000
	0x0350065C LDR X8, [X8 + 0xAC8]
	0x03500660 MOVZ W1, 0x6
	0x03500664 LDR X0, [X8]
	0x03500668 BL 0x1C16D6C
	0x0350066C CBZ X0, 0x3500B34
	0x03500670 LDR W8, [X0 + 0x18]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+32], X22
	004 Move [X31+40], X21
	005 Move [X31+48], X20
	006 Move [X31+56], X19
	007 Move X20, 0xEE0000
	008 Move W8, [X20+2691]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {25}
	014 Move X0, 0xC34000
	015 Move X0, [X0+2488]
	016 Call 0x1C17CF4
	017 Move X0, 0xC34000
	018 Move X0, [X0+3384]
	019 Call 0x1C17CF4
	020 Move X0, 0xC34000
	021 Move X0, [X0+2520]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X20+2691], W8
	025 Move [X31+28], W31
	026 Move [X31+24], W31
	027 Move [X31+12], W31
	028 Move X8, [X19+272]
	029 Compare X8, 0
	030 JumpIfNotEqual {32}
	031 Call 0x1C17F20
	032 Move X22, 0xC34000
	033 Move X22, [X22+3384]
	034 Move X20, [X8+64]
	035 Move [X31+28], W31
	036 Add X1, X31, 28
	037 Move X0, X20
	038 Move X2, X31
	039 Call Monitor.Enter, X0, X1
	040 Move X8, [X19+272]
	041 Compare X8, 0
	042 JumpIfEqual {159}
	043 Move W9, [X31+28]
	044 Move W21, [X8+16]
	045 Compare W9, 0
	046 JumpIfEqual {50}
	047 Move X0, X20
	048 Move X1, X31
	049 Call Monitor.Exit, X0
	050 Compare W21, 0
	051 JumpIfEqual {172}
	052 Move X20, [X19+264]
	053 Move [X31+24], W31
	054 Add X1, X31, 24
	055 Move X0, X20
	056 Move X2, X31
	057 Call Monitor.Enter, X0, X1
	058 Move X8, [X19+264]
	059 Compare X8, 0
	060 JumpIfEqual {150}
	061 Move X8, [X8+16]
	062 Compare X8, 0
	063 JumpIfEqual {88}
	064 Move X21, [X8+40]
	065 Compare X21, 0
	066 JumpIfEqual {153}
	067 Move X0, [X21+16]
	068 Compare X0, 0
	069 JumpIfEqual {154}
	070 Move X1, X31
	071 Call Stopwatch.get_ElapsedMilliseconds, X0
	072 NotImplemented "Instruction LDRSW not yet implemented."
	073 NotImplemented "Instruction CMP not yet implemented."
	074 Move X1, [X21+32]
	075 Compare X1, 0
	076 JumpIfEqual {157}
	077 Move X8, [X19]
	078 Move W2, [X1+24]
	079 Move X9, [X8+600]
	080 Move X3, [X8+608]
	081 Move X0, X19
	082 NotImplemented "Instruction BLR not yet implemented."
	083 Move X0, [X19+264]
	084 Compare X0, 0
	085 JumpIfEqual {156}
	086 Move X1, [X22]
	087 Call LinkedList`1<Object>.RemoveFirst, X0
	088 Move X21, X31
	089 Move W8, [X31+24]
	090 Compare W8, 0
	091 JumpIfEqual {95}
	092 Move X0, X20
	093 Move X1, X31
	094 Call Monitor.Exit, X0
	095 Compare X21, 0
	096 JumpIfNotEqual {193}
	097 Move X20, [X19+256]
	098 Move [X31+12], W31
	099 Add X1, X31, 12
	100 Move X0, X20
	101 Move X2, X31
	102 Call Monitor.Enter, X0, X1
	103 Move X8, [X19+256]
	104 Compare X8, 0
	105 JumpIfEqual {149}
	106 Move X8, [X8+16]
	107 Compare X8, 0
	108 JumpIfEqual {137}
	109 Move X21, [X8+40]
	110 Compare X21, 0
	111 JumpIfEqual {151}
	112 Move X0, [X21+16]
	113 Compare X0, 0
	114 JumpIfEqual {152}
	115 Move X1, X31
	116 Call Stopwatch.get_ElapsedMilliseconds, X0
	117 NotImplemented "Instruction LDRSW not yet implemented."
	118 NotImplemented "Instruction CMP not yet implemented."
	119 Move X0, [X19+40]
	120 Compare X0, 0
	121 JumpIfEqual {132}
	122 Move W8, [X0+28]
	123 NotImplemented "Instruction CMP not yet implemented."
	124 Move X1, [X21+32]
	125 Compare X1, 0
	126 JumpIfEqual {158}
	127 Move X8, [X0]
	128 Move W2, [X1+24]
	129 Move X9, [X8+408]
	130 Move X3, [X8+416]
	131 NotImplemented "Instruction BLR not yet implemented."
	132 Move X0, [X19+256]
	133 Compare X0, 0
	134 JumpIfEqual {155}
	135 Move X1, [X22]
	136 Call LinkedList`1<Object>.RemoveFirst, X0
	137 Move X21, X31
	138 Move W8, [X31+12]
	139 Compare W8, 0
	140 JumpIfEqual {144}
	141 Move X0, X20
	142 Move X1, X31
	143 Call Monitor.Exit, X0
	144 Compare X21, 0
	145 JumpIfNotEqual {193}
	146 Move W0, W31
	147 Move X1, X31
	148 Call Thread.Sleep, X0
	149 Call 0x1C17F20
	150 Call 0x1C17F20
	151 Call 0x1C17F20
	152 Call 0x1C17F20
	153 Call 0x1C17F20
	154 Call 0x1C17F20
	155 Call 0x1C17F20
	156 Call 0x1C17F20
	157 Call 0x1C17F20
	158 Call 0x1C17F20
	159 Call 0x1C17F20
	160 NotImplemented "Instruction CMP not yet implemented."
	161 Call 0x3EB2AD0
	162 Move X21, [X0]
	163 Call 0x3EB2AE0
	164 Move W8, [X31+28]
	165 Compare W8, 0
	166 JumpIfEqual {170}
	167 Move X0, X20
	168 Move X1, X31
	169 Call Monitor.Exit, X0
	170 Compare X21, 0
	171 JumpIfNotEqual {193}
	172 Move X8, [X19+272]
	173 Compare X8, 0
	174 JumpIfEqual {31}
	175 Move X0, [X8+64]
	176 Compare X0, 0
	177 JumpIfEqual {31}
	178 Move X8, [X0]
	179 Move X9, [X8+472]
	180 Move X1, [X8+480]
	181 NotImplemented "Instruction BLR not yet implemented."
	182 Move X8, [X19+272]
	183 Compare X8, 0
	184 JumpIfNotEqual {34}
	185 NotImplemented "Instruction CMP not yet implemented."
	186 Call 0x3EB2AD0
	187 Move X21, [X0]
	188 Call 0x3EB2AE0
	189 NotImplemented "Instruction CMP not yet implemented."
	190 Call 0x3EB2AD0
	191 Move X21, [X0]
	192 Call 0x3EB2AE0
	193 Move X0, X21
	194 Call 0x1C17F18
	195 Move X19, X0
	196 Move X21, X31
	197 Move X19, X0
	198 Move X21, X31
	199 Move X19, X0
	200 Move X21, X31
	201 Move X19, X0
	202 Move W8, [X31+28]
	203 Compare W8, 0
	204 JumpIfEqual {208}
	205 Move X0, X20
	206 Move X1, X31
	207 Call Monitor.Exit, X0
	208 Compare X21, 0
	209 JumpIfEqual {232}
	210 Move X0, X21
	211 Call 0x1C17F18
	212 Move X19, X0
	213 Move W8, [X31+12]
	214 Compare W8, 0
	215 JumpIfEqual {219}
	216 Move X0, X20
	217 Move X1, X31
	218 Call Monitor.Exit, X0
	219 Compare X21, 0
	220 JumpIfEqual {232}
	221 Move X0, X21
	222 Call 0x1C17F18
	223 Move X19, X0
	224 Move W8, [X31+24]
	225 Compare W8, 0
	226 JumpIfEqual {230}
	227 Move X0, X20
	228 Move X1, X31
	229 Call Monitor.Exit, X0
	230 Compare X21, 0
	231 JumpIfNotEqual {234}
	232 Move X0, X19
	233 Call 0x1D2D690
	234 Move X0, X21
	235 Call 0x1C17F18
	236 Call 0x1991590

Method: System.Boolean get_TrafficStatsEnabled()

Disassembly:
	0x034F0FC0 CBZ X8, 0x34F1048
	0x034F0FC4 LDR X19, [X8 + 0x48]
	0x034F0FC8 CBZ X19, 0x34F1014
	0x034F0FCC ADRP X10, 0xC0B000
	0x034F0FD0 LDR X8, [X19]
	0x034F0FD4 LDR X10, [X10 + 0xBC8]
	0x034F0FD8 LDRH W9, [X8 + 0x12E]

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+16]
	003 Compare X0, 0
	004 JumpIfEqual {9}
	005 Move X1, X31
	006 Move X30, [X31+16]
	007 Call PhotonPeer.get_TrafficStatsEnabled, X0
	008 Return X0
	009 Call 0x1C17F20

Method: ExitGames.Client.Photon.TrafficStats get_TrafficStatsIncoming()

Disassembly:
	0x034F82F8 MOV X0, X20
	0x034F82FC LDR X1, [X8]
	0x034F8300 BL 0x2AA5084
	0x034F8304 LDR X0, [X19 + 0x10]
	0x034F8308 CBZ X0, 0x34F867C
	0x034F830C MOV X1, X31
	0x034F8310 BL 0x35011B0

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+16]
	003 Compare X8, 0
	004 JumpIfEqual {8}
	005 Move X0, [X8+160]
	006 Move X30, [X31+16]
	007 Return X0
	008 Call 0x1C17F20

Method: ExitGames.Client.Photon.TrafficStats get_TrafficStatsOutgoing()

Disassembly:
	0x034F0FDC LDR X1, [X10]
	0x034F0FE0 CBZ X9, 0x34F1004
	0x034F0FE4 LDR X10, [X8 + 0xB0]
	0x034F0FE8 ADD X10, X10, 0x8
	0x034F0FEC LDUR X11, [X10 - 0x8]
	0x034F0FF0 CMP X11, X1
	0x034F0FF4 B.EQ 0x34F1020

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+16]
	003 Compare X8, 0
	004 JumpIfEqual {8}
	005 Move X0, [X8+168]
	006 Move X30, [X31+16]
	007 Return X0
	008 Call 0x1C17F20

Method: ExitGames.Client.Photon.TrafficStatsGameLevel get_TrafficStatsGameLevel()

Disassembly:
	0x034F6598 B 0x34F65BC
	0x034F659C LDR X0, [X20 + 0x100]
	0x034F65A0 CBZ X0, 0x34F6648
	0x034F65A4 ADRP X8, 0xC3D000
	0x034F65A8 LDR X8, [X8 + 0x9C0]
	0x034F65AC LDR X3, [X8]
	0x034F65B0 MOV X1, X9

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+16]
	003 Compare X8, 0
	004 JumpIfEqual {8}
	005 Move X0, [X8+176]
	006 Move X30, [X31+16]
	007 Return X0
	008 Call 0x1C17F20

Method: System.Void .cctor()

Disassembly:
	0x03500674 MOV X20, X0
	0x03500678 CBZ W8, 0x35007B4
	0x0350067C ADRP X8, 0xC33000
	0x03500680 LDR X8, [X8 + 0xD98]
	0x03500684 LDR X8, [X8]
	0x03500688 STR X8, [X20 + 0x20]
	0x0350068C LDR X0, [X19 + 0x58]
	0x03500690 CBZ X0, 0x3500B34
	0x03500694 LDR X8, [X0]
	0x03500698 LDP X9, X1, [X8 + 0x1B8]
	0x0350069C BLR X9
	0x035006A0 ADRP X8, 0xC33000
	0x035006A4 LDR X8, [X8 + 0xD88]
	0x035006A8 MOVN X9, 0x0
	0x035006AC STR W0, [X31 + 0x58]
	0x035006B0 ADD X0, X31, 0x48
	0x035006B4 LDR X8, [X8]
	0x035006B8 MOV X1, X31
	0x035006BC STP X8, X9, [X31 + 0x48]
	0x035006C0 BL 0x33B162C
	0x035006C4 LDR W8, [X20 + 0x18]
	0x035006C8 CMP W8, 0x1
	0x035006CC B.LS 0x35007B4
	0x035006D0 CMP W8, 0x2
	0x035006D4 STR X0, [X20 + 0x28]
	0x035006D8 B.EQ 0x35007B4
	0x035006DC ADRP X8, 0xC33000
	0x035006E0 LDR X8, [X8 + 0xDA8]
	0x035006E4 LDR X8, [X8]
	0x035006E8 STR X8, [X20 + 0x30]
	0x035006EC LDR X0, [X19 + 0x58]
	0x035006F0 CBZ X0, 0x3500B34
	0x035006F4 LDR X8, [X0]
	0x035006F8 LDP X9, X1, [X8 + 0x188]
	0x035006FC BLR X9
	0x03500700 ADRP X8, 0xC33000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xEE0000
	007 Move X22, 0xC34000
	008 Move X19, 0xC34000
	009 Move X20, 0xC34000
	010 Move W8, [X21+2692]
	011 Move X22, [X22+3392]
	012 Move X19, [X19+3400]
	013 Move X20, [X20+1912]
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {29}
	018 Move X0, 0xC34000
	019 Move X0, [X0+1912]
	020 Call 0x1C17CF4
	021 Move X0, 0xC34000
	022 Move X0, [X0+3400]
	023 Call 0x1C17CF4
	024 Move X0, 0xC34000
	025 Move X0, [X0+3392]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X21+2692], W8
	029 Move X0, [X22]
	030 Call 0x1C17F10
	031 Move X2, [X19]
	032 Move W1, 32
	033 Move X19, X0
	034 Call Queue`1<Object>..ctor, X0, X1
	035 Move X8, [X20]
	036 Move X22, [X31+16]
	037 Move X21, [X31+24]
	038 Move X8, [X8+184]
	039 Move [X8+8], X19
	040 Move X20, [X31+32]
	041 Move X19, [X31+40]
	042 Move X30, [X31+48]
	043 Return 

