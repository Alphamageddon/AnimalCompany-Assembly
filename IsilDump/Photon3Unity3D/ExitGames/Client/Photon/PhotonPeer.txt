Type: ExitGames.Client.Photon.PhotonPeer

Method: System.Int32 get_CommandBufferSize()

Disassembly:
	0x035020F8 STR X19, [X8 + 0x10]
	0x035020FC LDP X20, X19, [X31 + 0x30]

ISIL:
	001 Move W0, [X0+16]
	002 Return X0

Method: System.Void set_CommandBufferSize(System.Int32 value)

Disassembly:
	0x03502100 ADD X31, X31, 0x40
	0x03502104 RET

ISIL:
	001 Move [X0+16], W1
	002 Return 

Method: System.Int32 get_LimitOfUnreliableCommands()

Disassembly:
	0x03502108 BL 0x1C16F20
	0x0350210C MOV X0, X20

ISIL:
	001 Move W0, [X0+20]
	002 Return X0

Method: System.Void set_LimitOfUnreliableCommands(System.Int32 value)

Disassembly:
	0x03502110 BL 0x3501B48
	0x03502114 MOV W19, W0

ISIL:
	001 Move [X0+20], W1
	002 Return 

Method: System.Int32 get_LocalTimeInMilliSeconds()

Disassembly:
	0x03502118 ADRP X0, 0xBF9000
	0x0350211C LDR X0, [X0 + 0xD40]
	0x03502120 BL 0x1C16D08
	0x03502124 MOVN X8, 0x0
	0x03502128 STP X0, X8, [X31 + 0x8]
	0x0350212C ADD X0, X31, 0x8
	0x03502130 MOV X1, X31
	0x03502134 STRB W19, [X31 + 0x18]
	0x03502138 BL 0x33B162C
	0x0350213C MOV X19, X0
	0x03502140 ADRP X0, 0xC31000
	0x03502144 LDR X0, [X0 + 0xE60]
	0x03502148 BL 0x1C16D08
	0x0350214C MOV X1, X19
	0x03502150 MOV X2, X31
	0x03502154 BL 0x321B938
	0x03502158 MOV X19, X0
	0x0350215C ADRP X0, 0xBF1000
	0x03502160 LDR X0, [X0 + 0x7D0]
	0x03502164 BL 0x1C16D08

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0xEDE000
	005 Move X20, 0xBFA000
	006 Move W8, [X19+2701]
	007 Move X20, [X20+3680]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xBFA000
	013 Move X0, [X0+3680]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+2701], W8
	017 Move X0, [X20]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {22}
	021 Call 0x1C17DFC
	022 Move X20, [X31+16]
	023 Move X19, [X31+24]
	024 Move X0, X31
	025 Move X30, [X31+32]
	026 Call SupportClass.GetTickCount
	027 Return X0

Method: System.String CommandLogToString()

Disassembly:
	0x03502168 BL 0x1C16F10
	0x0350216C MOV X1, X19
	0x03502170 MOV X2, X31
	0x03502174 MOV X20, X0
	0x03502178 BL 0x33B2C70
	0x0350217C ADRP X0, 0xC31000
	0x03502180 LDR X0, [X0 + 0xE68]
	0x03502184 BL 0x1C16D08
	0x03502188 MOV X1, X0
	0x0350218C MOV X0, X20
	0x03502190 BL 0x1C16DEC
	0x03502194 STR X30, [X31 - 0x10]!
	0x03502198 LDR X8, [X0 + 0xC8]
	0x0350219C CBZ X8, 0x35021AC
	0x035021A0 LDR W0, [X8 + 0xD4]
	0x035021A4 LDR X30, [X31], #0x10
	0x035021A8 RET
	0x035021AC BL 0x1C16F20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0xEDE000
	005 Move X20, 0xBF4000
	006 Move W8, [X19+2702]
	007 Move X20, [X20+632]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xBF4000
	013 Move X0, [X0+632]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+2702], W8
	017 Move X8, [X20]
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X8, [X8+184]
	021 Move X0, [X8]
	022 Move X30, [X31+32]
	023 Return X0

Method: System.Byte get_ClientSdkIdShifted()

Disassembly:
	0x035021B0 STR X30, [X31 - 0x10]!
	0x035021B4 LDR X8, [X0 + 0xC8]
	0x035021B8 CBZ X8, 0x35021C8

ISIL:
	001 Move W8, [X0+37]
	002 Move W0, W8
	003 ShiftRight W0, 31
	004 And W0, W0, 0x3FFFFFFF
	005 Return X0

Method: System.String get_ClientVersion()

Disassembly:
	0x035021BC LDR W0, [X8 + 0xD8]
	0x035021C0 LDR X30, [X31], #0x10
	0x035021C4 RET
	0x035021C8 BL 0x1C16F20
	0x035021CC STR X30, [X31 - 0x10]!
	0x035021D0 LDR X8, [X0 + 0xC8]
	0x035021D4 CBZ X8, 0x35021E4
	0x035021D8 LDR W0, [X8 + 0xD0]
	0x035021DC LDR X30, [X31], #0x10
	0x035021E0 RET
	0x035021E4 BL 0x1C16F20
	0x035021E8 STR X30, [X31 - 0x10]!
	0x035021EC LDR X8, [X0 + 0xC8]
	0x035021F0 CBZ X8, 0x3502200
	0x035021F4 STR W1, [X8 + 0xD0]
	0x035021F8 LDR X30, [X31], #0x10
	0x035021FC RET
	0x03502200 BL 0x1C16F20
	0x03502204 STR X30, [X31 - 0x10]!
	0x03502208 LDR X8, [X0 + 0xC8]
	0x0350220C CBZ X8, 0x350221C
	0x03502210 LDR W0, [X8 + 0x74]
	0x03502214 LDR X30, [X31], #0x10
	0x03502218 RET
	0x0350221C BL 0x1C16F20
	0x03502220 STR X30, [X31 - 0x10]!
	0x03502224 LDR X8, [X0 + 0xC8]
	0x03502228 CBZ X8, 0x3502238
	0x0350222C LDR W0, [X8 + 0x78]
	0x03502230 LDR X30, [X31], #0x10
	0x03502234 RET
	0x03502238 BL 0x1C16F20
	0x0350223C STR X30, [X31 - 0x10]!
	0x03502240 LDR X8, [X0 + 0xC8]
	0x03502244 CBZ X8, 0x3502254
	0x03502248 LDR W0, [X8 + 0x7C]
	0x0350224C LDR X30, [X31], #0x10
	0x03502250 RET
	0x03502254 BL 0x1C16F20
	0x03502258 STR X30, [X31 - 0x10]!
	0x0350225C LDR X8, [X0 + 0xC8]
	0x03502260 CBZ X8, 0x3502270
	0x03502264 LDR W0, [X8 + 0x88]
	0x03502268 LDR X30, [X31], #0x10
	0x0350226C RET
	0x03502270 BL 0x1C16F20
	0x03502274 STR X30, [X31 - 0x10]!
	0x03502278 LDR X8, [X0 + 0xC8]
	0x0350227C CBZ X8, 0x350228C
	0x03502280 LDR X0, [X8 + 0x30]
	0x03502284 LDR X30, [X31], #0x10
	0x03502288 RET
	0x0350228C BL 0x1C16F20
	0x03502290 STP X30, X19, [X31 - 0x10]!
	0x03502294 ADRP X19, 0xEDD000
	0x03502298 LDRB W8, [X19 + 0xB0F]
	0x0350229C CBNZ W8, 0x35022B4
	0x035022A0 ADRP X0, 0xC31000
	0x035022A4 LDR X0, [X0 + 0xAF0]
	0x035022A8 BL 0x1C16CF4
	0x035022AC MOVZ W8, 0x1
	0x035022B0 STRB W8, [X19 + 0xB0F]
	0x035022B4 ADRP X8, 0xC31000
	0x035022B8 LDR X8, [X8 + 0xAF0]
	0x035022BC LDR X8, [X8]
	0x035022C0 LDR X8, [X8 + 0xB8]
	0x035022C4 LDR X0, [X8]
	0x035022C8 LDP X30, X19, [X31], #0x10
	0x035022CC RET
	0x035022D0 LDRB W0, [X0 + 0x84]
	0x035022D4 RET
	0x035022D8 STRB W1, [X0 + 0x84]
	0x035022DC RET
	0x035022E0 STR X30, [X31 - 0x10]!
	0x035022E4 LDR X0, [X0 + 0xC8]
	0x035022E8 CBZ X0, 0x3502304
	0x035022EC MOV X1, X31
	0x035022F0 BL 0x34F06D0
	0x035022F4 CBZ X0, 0x3502304
	0x035022F8 MOV X1, X31
	0x035022FC LDR X30, [X31], #0x10
	0x03502300 B 0x34F06D8
	0x03502304 BL 0x1C16F20
	0x03502308 STR X30, [X31 - 0x10]!
	0x0350230C LDR X0, [X0 + 0xC8]
	0x03502310 CBZ X0, 0x3502320
	0x03502314 MOV X1, X31
	0x03502318 LDR X30, [X31], #0x10
	0x0350231C B 0x34F06D0
	0x03502320 BL 0x1C16F20
	0x03502324 SUB X31, X31, 0x30
	0x03502328 STP X30, X21, [X31 + 0x10]
	0x0350232C STP X20, X19, [X31 + 0x20]
	0x03502330 MOV X21, X0
	0x03502334 LDR X0, [X0 + 0xC8]
	0x03502338 CBZ X0, 0x35023C8
	0x0350233C MOV W20, W1
	0x03502340 MOV X1, X31
	0x03502344 BL 0x34F06D0
	0x03502348 CBZ X0, 0x35023C8
	0x0350234C MOV X1, X31
	0x03502350 BL 0x34F06D8
	0x03502354 AND W8, W0, 0x1
	0x03502358 AND W9, W20, 0x1
	0x0350235C CMP W8, W9
	0x03502360 B.EQ 0x35023B8
	0x03502364 LDR X19, [X21 + 0xD0]
	0x03502368 STRB W31, [X31 + 0xC]
	0x0350236C ADD X1, X31, 0xC
	0x03502370 MOV X0, X19
	0x03502374 MOV X2, X31
	0x03502378 BL 0x33DE64C
	0x0350237C LDR X0, [X21 + 0xC8]
	0x03502380 CBZ X0, 0x35023D4
	0x03502384 MOV X1, X31
	0x03502388 BL 0x34F06D0
	0x0350238C CBZ X0, 0x35023D8
	0x03502390 AND W1, W20, 0x1
	0x03502394 MOV X2, X31
	0x03502398 BL 0x34F06E0
	0x0350239C MOV X20, X31
	0x035023A0 LDRB W8, [X31 + 0xC]
	0x035023A4 CBZ W8, 0x35023B4
	0x035023A8 MOV X0, X19
	0x035023AC MOV X1, X31
	0x035023B0 BL 0x33E14E4
	0x035023B4 CBNZ X20, 0x35023CC
	0x035023B8 LDP X20, X19, [X31 + 0x20]
	0x035023BC LDP X30, X21, [X31 + 0x10]
	0x035023C0 ADD X31, X31, 0x30
	0x035023C4 RET
	0x035023C8 BL 0x1C16F20
	0x035023CC MOV X0, X20
	0x035023D0 BL 0x1C16F18
	0x035023D4 BL 0x1C16F20
	0x035023D8 BL 0x1C16F20
	0x035023DC B 0x35023E4
	0x035023E0 B 0x35023E4
	0x035023E4 MOV X21, X0
	0x035023E8 CMP W1, 0x1
	0x035023EC B.NE 0x3502404
	0x035023F0 MOV X0, X21
	0x035023F4 BL 0x3EB1AD0
	0x035023F8 LDR X20, [X0]
	0x035023FC BL 0x3EB1AE0
	0x03502400 B 0x35023A0
	0x03502404 MOV X20, X31
	0x03502408 B 0x3502410
	0x0350240C MOV X21, X0
	0x03502410 LDRB W8, [X31 + 0xC]
	0x03502414 CBZ W8, 0x3502424
	0x03502418 MOV X0, X19
	0x0350241C MOV X1, X31
	0x03502420 BL 0x33E14E4
	0x03502424 CBNZ X20, 0x3502430
	0x03502428 MOV X0, X21
	0x0350242C BL 0x1D2C690
	0x03502430 MOV X0, X20
	0x03502434 BL 0x1C16F18
	0x03502438 BL 0x1990590
	0x0350243C LDR W0, [X0 + 0x88]
	0x03502440 RET
	0x03502444 SUB X31, X31, 0x40
	0x03502448 STR X30, [X31 + 0x20]
	0x0350244C STP X20, X19, [X31 + 0x30]
	0x03502450 LDR X8, [X0 + 0xC8]
	0x03502454 CBZ X8, 0x3502480
	0x03502458 LDRB W8, [X8 + 0x40]
	0x0350245C CBNZ W8, 0x3502484
	0x03502460 LDP X20, X19, [X31 + 0x30]
	0x03502464 LDR X30, [X31 + 0x20]
	0x03502468 CMP W1, 0x240
	0x0350246C MOVZ W8, 0x240
	0x03502470 CSEL W8, W1, W8, GT
	0x03502474 STR W8, [X0 + 0x88]
	0x03502478 ADD X31, X31, 0x40

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X19, 0xEDE000
	009 Move X21, 0xBFA000
	010 Move W8, [X19+2703]
	011 Move X21, [X21+3808]
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {33}
	016 Move X0, 0xBF3000
	017 Move X0, [X0+2520]
	018 Call 0x1C17CF4
	019 Move X0, 0xBF2000
	020 Move X0, [X0+2512]
	021 Call 0x1C17CF4
	022 Move X0, 0xBFA000
	023 Move X0, [X0+3808]
	024 Call 0x1C17CF4
	025 Move X0, 0xC32000
	026 Move X0, [X0+2712]
	027 Call 0x1C17CF4
	028 Move X0, 0xC32000
	029 Move X0, [X0+3640]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X19+2703], W8
	033 Move X0, [X21]
	034 Move W8, [X0+224]
	035 Compare W8, 0
	036 JumpIfNotEqual {39}
	037 Call 0x1C17DFC
	038 Move X0, [X21]
	039 Move X8, [X0+184]
	040 Move X1, X31
	041 Move X0, [X8+8]
	042 Call String.IsNullOrEmpty, X0
	043 Move TEMP, X0
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfNotEqual {179}
	047 Move X8, 0xBF2000
	048 Move X8, [X8+2512]
	049 Move X22, 0xC32000
	050 Move W1, 4
	051 Move X0, [X8]
	052 Move X22, [X22+2712]
	053 Call 0x1C17D6C
	054 Move X8, [X22]
	055 Move X19, X0
	056 Move W9, [X8+224]
	057 Compare W9, 0
	058 JumpIfNotEqual {62}
	059 Move X0, X8
	060 Call 0x1C17DFC
	061 Move X8, [X22]
	062 Move X8, [X8+184]
	063 Move X8, [X8]
	064 Compare X8, 0
	065 JumpIfEqual {197}
	066 Move W9, [X8+24]
	067 Compare W9, 0
	068 JumpIfEqual {196}
	069 Move X23, 0xBF3000
	070 Move W8, [X8+32]
	071 Move X23, [X23+2520]
	072 Add X1, X31, 12
	073 Move [X31+12], W8
	074 Move X0, [X23]
	075 Call 0x1C17E04
	076 Compare X19, 0
	077 JumpIfEqual {197}
	078 Move X20, X0
	079 Compare X0, 0
	080 JumpIfEqual {87}
	081 Move X8, [X19]
	082 Move X0, X20
	083 Move X1, [X8+64]
	084 Call 0x1C17E00
	085 Compare X0, 0
	086 JumpIfEqual {198}
	087 Move W8, [X19+24]
	088 Compare W8, 0
	089 JumpIfEqual {196}
	090 Move [X19+32], X20
	091 Move X8, [X22]
	092 Move X8, [X8+184]
	093 Move X8, [X8]
	094 Compare X8, 0
	095 JumpIfEqual {197}
	096 Move W9, [X8+24]
	097 NotImplemented "Instruction CMP not yet implemented."
	098 Move W8, [X8+33]
	099 Move X0, [X23]
	100 Add X1, X31, 8
	101 Move [X31+8], W8
	102 Call 0x1C17E04
	103 Move X20, X0
	104 Compare X0, 0
	105 JumpIfEqual {112}
	106 Move X8, [X19]
	107 Move X0, X20
	108 Move X1, [X8+64]
	109 Call 0x1C17E00
	110 Compare X0, 0
	111 JumpIfEqual {198}
	112 Move W8, [X19+24]
	113 NotImplemented "Instruction CMP not yet implemented."
	114 Move [X19+40], X20
	115 Move X8, [X22]
	116 Move X8, [X8+184]
	117 Move X8, [X8]
	118 Compare X8, 0
	119 JumpIfEqual {197}
	120 Move W9, [X8+24]
	121 NotImplemented "Instruction CMP not yet implemented."
	122 Move W8, [X8+34]
	123 Move X0, [X23]
	124 Add X1, X31, 4
	125 Move [X31+4], W8
	126 Call 0x1C17E04
	127 Move X20, X0
	128 Compare X0, 0
	129 JumpIfEqual {136}
	130 Move X8, [X19]
	131 Move X0, X20
	132 Move X1, [X8+64]
	133 Call 0x1C17E00
	134 Compare X0, 0
	135 JumpIfEqual {198}
	136 Move W8, [X19+24]
	137 NotImplemented "Instruction CMP not yet implemented."
	138 Move [X19+48], X20
	139 Move X8, [X22]
	140 Move X8, [X8+184]
	141 Move X8, [X8]
	142 Compare X8, 0
	143 JumpIfEqual {197}
	144 Move W9, [X8+24]
	145 NotImplemented "Instruction CMP not yet implemented."
	146 Move W8, [X8+35]
	147 Move X0, [X23]
	148 Add X1, X31, 0
	149 Move [X31], W8
	150 Call 0x1C17E04
	151 Move X20, X0
	152 Compare X0, 0
	153 JumpIfEqual {160}
	154 Move X8, [X19]
	155 Move X0, X20
	156 Move X1, [X8+64]
	157 Call 0x1C17E00
	158 Compare X0, 0
	159 JumpIfEqual {198}
	160 Move W8, [X19+24]
	161 NotImplemented "Instruction CMP not yet implemented."
	162 Move [X19+56], X20
	163 Move X8, 0xC32000
	164 Move X8, [X8+3640]
	165 Move X1, X19
	166 Move X2, X31
	167 Move X0, [X8]
	168 Call String.Format, X0, X1
	169 Move X8, [X21]
	170 Move X19, X0
	171 Move W9, [X8+224]
	172 Compare W9, 0
	173 JumpIfNotEqual {177}
	174 Move X0, X8
	175 Call 0x1C17DFC
	176 Move X8, [X21]
	177 Move X9, [X8+184]
	178 Move [X9+8], X19
	179 Move X8, [X21]
	180 Move W9, [X8+224]
	181 Compare W9, 0
	182 JumpIfNotEqual {186}
	183 Move X0, X8
	184 Call 0x1C17DFC
	185 Move X8, [X21]
	186 Move X8, [X8+184]
	187 Move X20, [X31+48]
	188 Move X19, [X31+56]
	189 Move X22, [X31+32]
	190 Move X21, [X31+40]
	191 Move X30, [X31+16]
	192 Move X23, [X31+24]
	193 Move X0, [X8+8]
	194 Add X31, X31, 64
	195 Return X0
	196 Call 0x1C17F28
	197 Call 0x1C17F20
	198 Call 0x1C17F44
	199 Move X1, X31
	200 Call 0x1C17DEC

Method: System.String get_Version()

Disassembly:
	0x0350247C RET
	0x03502480 BL 0x1C16F20
	0x03502484 BL 0x3501B48
	0x03502488 MOV W19, W0
	0x0350248C ADRP X0, 0xBF9000
	0x03502490 LDR X0, [X0 + 0xD40]
	0x03502494 BL 0x1C16D08
	0x03502498 MOVN X8, 0x0
	0x0350249C STP X0, X8, [X31 + 0x8]
	0x035024A0 ADD X0, X31, 0x8
	0x035024A4 MOV X1, X31
	0x035024A8 STRB W19, [X31 + 0x18]
	0x035024AC BL 0x33B162C
	0x035024B0 MOV X19, X0
	0x035024B4 ADRP X0, 0xC31000
	0x035024B8 LDR X0, [X0 + 0xE70]
	0x035024BC BL 0x1C16D08
	0x035024C0 MOV X1, X19
	0x035024C4 MOV X2, X31
	0x035024C8 BL 0x321B938
	0x035024CC MOV X19, X0
	0x035024D0 ADRP X0, 0xBF1000
	0x035024D4 LDR X0, [X0 + 0x7D0]
	0x035024D8 BL 0x1C16D08
	0x035024DC BL 0x1C16F10
	0x035024E0 MOV X1, X19
	0x035024E4 MOV X2, X31
	0x035024E8 MOV X20, X0
	0x035024EC BL 0x33B2C70
	0x035024F0 ADRP X0, 0xC31000
	0x035024F4 LDR X0, [X0 + 0xE78]
	0x035024F8 BL 0x1C16D08
	0x035024FC MOV X1, X0
	0x03502500 MOV X0, X20
	0x03502504 BL 0x1C16DEC
	0x03502508 STR X30, [X31 - 0x10]!
	0x0350250C LDR X8, [X0 + 0xC8]
	0x03502510 CBZ X8, 0x3502520
	0x03502514 LDRB W0, [X8 + 0xDD]
	0x03502518 LDR X30, [X31], #0x10
	0x0350251C RET
	0x03502520 BL 0x1C16F20
	0x03502524 LDRB W0, [X0 + 0x8C]
	0x03502528 RET
	0x0350252C AND W8, W1, 0x1
	0x03502530 STRB W8, [X0 + 0x8C]
	0x03502534 RET
	0x03502538 LDR X0, [X0 + 0xA0]
	0x0350253C RET
	0x03502540 STR X1, [X0 + 0xA0]
	0x03502544 RET
	0x03502548 LDR X0, [X0 + 0xA8]
	0x0350254C RET
	0x03502550 STR X1, [X0 + 0xA8]
	0x03502554 RET
	0x03502558 LDR X0, [X0 + 0xB0]
	0x0350255C RET
	0x03502560 STR X1, [X0 + 0xB0]
	0x03502564 RET
	0x03502568 LDR X0, [X0 + 0xB8]
	0x0350256C CBZ X0, 0x3502578
	0x03502570 MOV X1, X31
	0x03502574 B 0x364C19C
	0x03502578 RET
	0x0350257C LDRB W0, [X0 + 0xC0]
	0x03502580 RET
	0x03502584 STP X30, X19, [X31 - 0x10]!
	0x03502588 LDRB W9, [X0 + 0xC0]
	0x0350258C AND W8, W1, 0x1
	0x03502590 CMP W9, W8
	0x03502594 B.NE 0x35025A0
	0x03502598 LDP X30, X19, [X31], #0x10
	0x0350259C RET
	0x035025A0 MOV X19, X0
	0x035025A4 LDR X0, [X0 + 0xB8]
	0x035025A8 STRB W8, [X19 + 0xC0]
	0x035025AC TBZ X1, 0x0, 0x35025D0
	0x035025B0 CBNZ X0, 0x35025C0
	0x035025B4 MOV X0, X19
	0x035025B8 BL 0x35025E4
	0x035025BC LDR X0, [X19 + 0xB8]
	0x035025C0 CBZ X0, 0x35025E0
	0x035025C4 MOV X1, X31
	0x035025C8 LDP X30, X19, [X31], #0x10
	0x035025CC B 0x364BFCC
	0x035025D0 CBZ X0, 0x3502598
	0x035025D4 MOV X1, X31
	0x035025D8 LDP X30, X19, [X31], #0x10
	0x035025DC B 0x364C2F4
	0x035025E0 BL 0x1C16F20
	0x035025E4 STR X30, [X31 - 0x30]!
	0x035025E8 STP X22, X21, [X31 + 0x10]
	0x035025EC STP X20, X19, [X31 + 0x20]
	0x035025F0 ADRP X20, 0xEDD000
	0x035025F4 LDRB W8, [X20 + 0xA98]
	0x035025F8 MOV X19, X0
	0x035025FC TBNZ X8, 0x0, 0x350262C
	0x03502600 ADRP X0, 0xBF9000
	0x03502604 LDR X0, [X0 + 0x708]
	0x03502608 BL 0x1C16CF4
	0x0350260C ADRP X0, 0xC31000
	0x03502610 LDR X0, [X0 + 0xE80]
	0x03502614 BL 0x1C16CF4
	0x03502618 ADRP X0, 0xC31000
	0x0350261C LDR X0, [X0 + 0xE88]
	0x03502620 BL 0x1C16CF4
	0x03502624 MOVZ W8, 0x1
	0x03502628 STRB W8, [X20 + 0xA98]
	0x0350262C LDR X0, [X19 + 0xB8]
	0x03502630 CBZ X0, 0x3502640
	0x03502634 MOV X1, X31
	0x03502638 BL 0x364C2E8
	0x0350263C B 0x3502660
	0x03502640 ADRP X8, 0xBF9000
	0x03502644 LDR X8, [X8 + 0x708]
	0x03502648 LDR X0, [X8]
	0x0350264C BL 0x1C16F10
	0x03502650 MOV X1, X31
	0x03502654 MOV X20, X0
	0x03502658 BL 0x364BFC4
	0x0350265C STR X20, [X19 + 0xB8]
	0x03502660 LDR X8, [X19 + 0xC8]
	0x03502664 CBZ X8, 0x3502714
	0x03502668 ADRP X22, 0xC31000
	0x0350266C LDR X22, [X22 + 0xE88]
	0x03502670 LDR W20, [X8 + 0x118]
	0x03502674 LDR X0, [X22]
	0x03502678 BL 0x1C16F10
	0x0350267C MOV W1, W20
	0x03502680 MOV X2, X31
	0x03502684 MOV X21, X0
	0x03502688 BL 0x3524778
	0x0350268C LDR X8, [X19 + 0xC8]
	0x03502690 STR X21, [X19 + 0xA0]
	0x03502694 CBZ X8, 0x3502714
	0x03502698 LDR X0, [X22]
	0x0350269C ADRP X22, 0xC31000
	0x035026A0 LDR W20, [X8 + 0x118]
	0x035026A4 LDR X22, [X22 + 0xE80]
	0x035026A8 BL 0x1C16F10
	0x035026AC MOV W1, W20
	0x035026B0 MOV X2, X31
	0x035026B4 MOV X21, X0
	0x035026B8 BL 0x3524778
	0x035026BC STR X21, [X19 + 0xA8]
	0x035026C0 LDR X0, [X22]
	0x035026C4 LDR X20, [X19 + 0xB8]
	0x035026C8 BL 0x1C16F10
	0x035026CC MOV X1, X20
	0x035026D0 MOV X2, X31
	0x035026D4 MOV X21, X0
	0x035026D8 BL 0x35241B4
	0x035026DC LDRB W8, [X19 + 0xC0]
	0x035026E0 STR X21, [X19 + 0xB0]
	0x035026E4 CBZ W8, 0x3502704
	0x035026E8 LDR X0, [X19 + 0xB8]
	0x035026EC CBZ X0, 0x3502714
	0x035026F0 LDP X20, X19, [X31 + 0x20]
	0x035026F4 LDP X22, X21, [X31 + 0x10]
	0x035026F8 MOV X1, X31
	0x035026FC LDR X30, [X31], #0x30
	0x03502700 B 0x364BFCC
	0x03502704 LDP X20, X19, [X31 + 0x20]
	0x03502708 LDP X22, X21, [X31 + 0x10]
	0x0350270C LDR X30, [X31], #0x30
	0x03502710 RET
	0x03502714 BL 0x1C16F20
	0x03502718 STP X30, X19, [X31 - 0x10]!
	0x0350271C LDRB W8, [X0 + 0xC0]
	0x03502720 MOV X19, X0
	0x03502724 CBZ W8, 0x350273C
	0x03502728 LDR X0, [X19 + 0xB8]
	0x0350272C STRB W31, [X19 + 0xC0]
	0x03502730 CBZ X0, 0x350273C
	0x03502734 MOV X1, X31
	0x03502738 BL 0x364C2F4

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X19, 0xEDE000
	009 Move X21, 0xBFA000
	010 Move W8, [X19+2704]
	011 Move X21, [X21+3808]
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {33}
	016 Move X0, 0xBF3000
	017 Move X0, [X0+2520]
	018 Call 0x1C17CF4
	019 Move X0, 0xBF2000
	020 Move X0, [X0+2512]
	021 Call 0x1C17CF4
	022 Move X0, 0xBFA000
	023 Move X0, [X0+3808]
	024 Call 0x1C17CF4
	025 Move X0, 0xC32000
	026 Move X0, [X0+2712]
	027 Call 0x1C17CF4
	028 Move X0, 0xC32000
	029 Move X0, [X0+3640]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X19+2704], W8
	033 Move X0, [X21]
	034 Move W8, [X0+224]
	035 Compare W8, 0
	036 JumpIfNotEqual {39}
	037 Call 0x1C17DFC
	038 Move X0, [X21]
	039 Move X8, [X0+184]
	040 Move X1, X31
	041 Move X0, [X8+8]
	042 Call String.IsNullOrEmpty, X0
	043 Move TEMP, X0
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfNotEqual {179}
	047 Move X8, 0xBF2000
	048 Move X8, [X8+2512]
	049 Move X22, 0xC32000
	050 Move W1, 4
	051 Move X0, [X8]
	052 Move X22, [X22+2712]
	053 Call 0x1C17D6C
	054 Move X8, [X22]
	055 Move X19, X0
	056 Move W9, [X8+224]
	057 Compare W9, 0
	058 JumpIfNotEqual {62}
	059 Move X0, X8
	060 Call 0x1C17DFC
	061 Move X8, [X22]
	062 Move X8, [X8+184]
	063 Move X8, [X8]
	064 Compare X8, 0
	065 JumpIfEqual {197}
	066 Move W9, [X8+24]
	067 Compare W9, 0
	068 JumpIfEqual {196}
	069 Move X23, 0xBF3000
	070 Move W8, [X8+32]
	071 Move X23, [X23+2520]
	072 Add X1, X31, 12
	073 Move [X31+12], W8
	074 Move X0, [X23]
	075 Call 0x1C17E04
	076 Compare X19, 0
	077 JumpIfEqual {197}
	078 Move X20, X0
	079 Compare X0, 0
	080 JumpIfEqual {87}
	081 Move X8, [X19]
	082 Move X0, X20
	083 Move X1, [X8+64]
	084 Call 0x1C17E00
	085 Compare X0, 0
	086 JumpIfEqual {198}
	087 Move W8, [X19+24]
	088 Compare W8, 0
	089 JumpIfEqual {196}
	090 Move [X19+32], X20
	091 Move X8, [X22]
	092 Move X8, [X8+184]
	093 Move X8, [X8]
	094 Compare X8, 0
	095 JumpIfEqual {197}
	096 Move W9, [X8+24]
	097 NotImplemented "Instruction CMP not yet implemented."
	098 Move W8, [X8+33]
	099 Move X0, [X23]
	100 Add X1, X31, 8
	101 Move [X31+8], W8
	102 Call 0x1C17E04
	103 Move X20, X0
	104 Compare X0, 0
	105 JumpIfEqual {112}
	106 Move X8, [X19]
	107 Move X0, X20
	108 Move X1, [X8+64]
	109 Call 0x1C17E00
	110 Compare X0, 0
	111 JumpIfEqual {198}
	112 Move W8, [X19+24]
	113 NotImplemented "Instruction CMP not yet implemented."
	114 Move [X19+40], X20
	115 Move X8, [X22]
	116 Move X8, [X8+184]
	117 Move X8, [X8]
	118 Compare X8, 0
	119 JumpIfEqual {197}
	120 Move W9, [X8+24]
	121 NotImplemented "Instruction CMP not yet implemented."
	122 Move W8, [X8+34]
	123 Move X0, [X23]
	124 Add X1, X31, 4
	125 Move [X31+4], W8
	126 Call 0x1C17E04
	127 Move X20, X0
	128 Compare X0, 0
	129 JumpIfEqual {136}
	130 Move X8, [X19]
	131 Move X0, X20
	132 Move X1, [X8+64]
	133 Call 0x1C17E00
	134 Compare X0, 0
	135 JumpIfEqual {198}
	136 Move W8, [X19+24]
	137 NotImplemented "Instruction CMP not yet implemented."
	138 Move [X19+48], X20
	139 Move X8, [X22]
	140 Move X8, [X8+184]
	141 Move X8, [X8]
	142 Compare X8, 0
	143 JumpIfEqual {197}
	144 Move W9, [X8+24]
	145 NotImplemented "Instruction CMP not yet implemented."
	146 Move W8, [X8+35]
	147 Move X0, [X23]
	148 Add X1, X31, 0
	149 Move [X31], W8
	150 Call 0x1C17E04
	151 Move X20, X0
	152 Compare X0, 0
	153 JumpIfEqual {160}
	154 Move X8, [X19]
	155 Move X0, X20
	156 Move X1, [X8+64]
	157 Call 0x1C17E00
	158 Compare X0, 0
	159 JumpIfEqual {198}
	160 Move W8, [X19+24]
	161 NotImplemented "Instruction CMP not yet implemented."
	162 Move [X19+56], X20
	163 Move X8, 0xC32000
	164 Move X8, [X8+3640]
	165 Move X1, X19
	166 Move X2, X31
	167 Move X0, [X8]
	168 Call String.Format, X0, X1
	169 Move X8, [X21]
	170 Move X19, X0
	171 Move W9, [X8+224]
	172 Compare W9, 0
	173 JumpIfNotEqual {177}
	174 Move X0, X8
	175 Call 0x1C17DFC
	176 Move X8, [X21]
	177 Move X9, [X8+184]
	178 Move [X9+8], X19
	179 Move X8, [X21]
	180 Move W9, [X8+224]
	181 Compare W9, 0
	182 JumpIfNotEqual {186}
	183 Move X0, X8
	184 Call 0x1C17DFC
	185 Move X8, [X21]
	186 Move X8, [X8+184]
	187 Move X20, [X31+48]
	188 Move X19, [X31+56]
	189 Move X22, [X31+32]
	190 Move X21, [X31+40]
	191 Move X30, [X31+16]
	192 Move X23, [X31+24]
	193 Move X0, [X8+8]
	194 Add X31, X31, 64
	195 Return X0
	196 Call 0x1C17F28
	197 Call 0x1C17F20
	198 Call 0x1C17F44
	199 Move X1, X31
	200 Call 0x1C17DEC

Method: ExitGames.Client.Photon.SerializationProtocol get_SerializationProtocolType()

Disassembly:
	0x0350273C MOV X0, X19
	0x03502740 BL 0x35025E4

ISIL:
	001 Move W0, [X0+40]
	002 Return X0

Method: System.Void set_SerializationProtocolType(ExitGames.Client.Photon.SerializationProtocol value)

Disassembly:
	0x03502744 MOVZ W1, 0x1
	0x03502748 MOV X0, X19

ISIL:
	001 Move [X0+40], W1
	002 Return 

Method: System.Type get_SocketImplementation()

Disassembly:
	0x0350274C LDP X30, X19, [X31], #0x10
	0x03502750 B 0x3502584

ISIL:
	001 Move X0, [X0+56]
	002 Return X0

Method: System.Void set_SocketImplementation(System.Type value)

Disassembly:
	0x03502754 SUB X31, X31, 0x50
	0x03502758 STP X30, X23, [X31 + 0x20]

ISIL:
	001 Move [X0+56], X1
	002 Return 

Method: System.Int32 get_SocketErrorCode()

Disassembly:
	0x0350275C STP X22, X21, [X31 + 0x30]
	0x03502760 STP X20, X19, [X31 + 0x40]
	0x03502764 ADRP X20, 0xEDD000
	0x03502768 LDRB W8, [X20 + 0xA99]
	0x0350276C MOV W21, W1
	0x03502770 MOV X19, X0
	0x03502774 TBNZ X8, 0x0, 0x35027C8
	0x03502778 ADRP X0, 0xBF1000

ISIL:
	001 Move X8, [X0+200]
	002 Compare X8, 0
	003 JumpIfEqual {9}
	004 Move X8, [X8+40]
	005 Compare X8, 0
	006 JumpIfEqual {9}
	007 Move W0, [X8+32]
	008 Return X0
	009 Move W0, W31
	010 Return X0

Method: ExitGames.Client.Photon.IPhotonPeerListener get_Listener()

Disassembly:
	0x0350277C LDR X0, [X0 + 0x758]
	0x03502780 BL 0x1C16CF4

ISIL:
	001 Move X0, [X0+72]
	002 Return X0

Method: System.Void set_Listener(ExitGames.Client.Photon.IPhotonPeerListener value)

Disassembly:
	0x03502784 ADRP X0, 0xBF3000
	0x03502788 LDR X0, [X0 + 0xA60]

ISIL:
	001 Move [X0+72], X1
	002 Return 

Method: System.Void add_OnDisconnectMessage(System.Action`1<ExitGames.Client.Photon.DisconnectMessage> value)

Disassembly:
	0x0350278C BL 0x1C16CF4
	0x03502790 ADRP X0, 0xBF1000
	0x03502794 LDR X0, [X0 + 0x9D0]
	0x03502798 BL 0x1C16CF4
	0x0350279C ADRP X0, 0xC31000
	0x035027A0 LDR X0, [X0 + 0xE90]
	0x035027A4 BL 0x1C16CF4
	0x035027A8 ADRP X0, 0xC31000
	0x035027AC LDR X0, [X0 + 0xE98]
	0x035027B0 BL 0x1C16CF4
	0x035027B4 ADRP X0, 0xBF1000
	0x035027B8 LDR X0, [X0 + 0x988]
	0x035027BC BL 0x1C16CF4
	0x035027C0 MOVZ W8, 0x1
	0x035027C4 STRB W8, [X20 + 0xA99]
	0x035027C8 ADRP X22, 0xBF1000
	0x035027CC LDR X0, [X19 + 0xB0]
	0x035027D0 LDR X22, [X22 + 0x9D0]
	0x035027D4 CBZ X0, 0x35027E8
	0x035027D8 MOV X1, X31
	0x035027DC BL 0x3524408
	0x035027E0 MOV X20, X0
	0x035027E4 B 0x35027F4
	0x035027E8 ADRP X8, 0xBF1000
	0x035027EC LDR X8, [X8 + 0x988]
	0x035027F0 LDR X20, [X8]
	0x035027F4 LDR X0, [X22]
	0x035027F8 TBZ X21, 0x0, 0x35029B0
	0x035027FC MOVZ W1, 0x8
	0x03502800 BL 0x1C16D6C
	0x03502804 LDR X8, [X19 + 0xC8]
	0x03502808 CBZ X8, 0x3502C68
	0x0350280C ADRP X23, 0xBF1000
	0x03502810 LDR W8, [X8 + 0x74]
	0x03502814 LDR X23, [X23 + 0x758]
	0x03502818 MOV X21, X0
	0x0350281C ADD X1, X31, 0x1C
	0x03502820 STR W8, [X31 + 0x1C]
	0x03502824 LDR X0, [X23]
	0x03502828 BL 0x1C16E04
	0x0350282C CBZ X21, 0x3502C68
	0x03502830 MOV X22, X0
	0x03502834 CBZ X0, 0x350284C
	0x03502838 LDR X8, [X21]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0xEDE000
	009 Move W8, [X21+2705]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xBFA000
	017 Move X0, [X0+2992]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2705], W8
	021 Move X24, 0xBFA000
	022 Add X20, X20, 80
	023 Move X21, [X20]
	024 Move X24, [X24+2992]
	025 Move X0, X21
	026 Move X1, X19
	027 Move X2, X31
	028 Call Delegate.Combine, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {38}
	031 Move X23, [X24]
	032 Move X22, X0
	033 Move X1, X23
	034 Call 0x1C17E00
	035 Move X1, X0
	036 Compare X0, 0
	037 JumpIfNotEqual {39}
	038 Move X1, X31
	039 Move X0, X20
	040 Move X2, X21
	041 Call 0x1C25138
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X21, X0
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 Return 
	052 Move X0, X22
	053 Move X1, X23
	054 Call 0x1C181E0

Method: System.Void remove_OnDisconnectMessage(System.Action`1<ExitGames.Client.Photon.DisconnectMessage> value)

Disassembly:
	0x0350283C MOV X0, X22
	0x03502840 LDR X1, [X8 + 0x40]
	0x03502844 BL 0x1C16E00
	0x03502848 CBZ X0, 0x3502C6C
	0x0350284C LDR W8, [X21 + 0x18]
	0x03502850 CBZ W8, 0x3502C64
	0x03502854 STR X22, [X21 + 0x20]
	0x03502858 LDR X8, [X19 + 0xC8]
	0x0350285C CBZ X8, 0x3502C68
	0x03502860 LDR W8, [X8 + 0x78]
	0x03502864 LDR X0, [X23]
	0x03502868 ADD X1, X31, 0x18
	0x0350286C STR W8, [X31 + 0x18]
	0x03502870 BL 0x1C16E04
	0x03502874 MOV X22, X0
	0x03502878 CBZ X0, 0x3502890
	0x0350287C LDR X8, [X21]
	0x03502880 MOV X0, X22
	0x03502884 LDR X1, [X8 + 0x40]
	0x03502888 BL 0x1C16E00
	0x0350288C CBZ X0, 0x3502C6C
	0x03502890 LDR W8, [X21 + 0x18]
	0x03502894 CMP W8, 0x1
	0x03502898 B.LS 0x3502C64
	0x0350289C STR X22, [X21 + 0x28]
	0x035028A0 LDR X0, [X19 + 0xC8]
	0x035028A4 CBZ X0, 0x3502C68
	0x035028A8 MOV X1, X31
	0x035028AC BL 0x34F39AC
	0x035028B0 LDR X8, [X19 + 0xC8]
	0x035028B4 CBZ X8, 0x3502C68
	0x035028B8 LDR W9, [X8 + 0x88]
	0x035028BC LDR X8, [X23]
	0x035028C0 ADD X1, X31, 0x14
	0x035028C4 SUB W9, W0, W9
	0x035028C8 MOV X0, X8
	0x035028CC STR W9, [X31 + 0x14]
	0x035028D0 BL 0x1C16E04
	0x035028D4 MOV X22, X0
	0x035028D8 CBZ X0, 0x35028F0
	0x035028DC LDR X8, [X21]
	0x035028E0 MOV X0, X22
	0x035028E4 LDR X1, [X8 + 0x40]
	0x035028E8 BL 0x1C16E00

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0xEDE000
	009 Move W8, [X21+2706]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xBFA000
	017 Move X0, [X0+2992]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2706], W8
	021 Move X24, 0xBFA000
	022 Add X20, X20, 80
	023 Move X21, [X20]
	024 Move X24, [X24+2992]
	025 Move X0, X21
	026 Move X1, X19
	027 Move X2, X31
	028 Call Delegate.Remove, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {38}
	031 Move X23, [X24]
	032 Move X22, X0
	033 Move X1, X23
	034 Call 0x1C17E00
	035 Move X1, X0
	036 Compare X0, 0
	037 JumpIfNotEqual {39}
	038 Move X1, X31
	039 Move X0, X20
	040 Move X2, X21
	041 Call 0x1C25138
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X21, X0
	044 Move X20, [X31+48]
	045 Move X19, [X31+56]
	046 Move X22, [X31+32]
	047 Move X21, [X31+40]
	048 Move X24, [X31+16]
	049 Move X23, [X31+24]
	050 Move X30, [X31+64]
	051 Return 
	052 Move X0, X22
	053 Move X1, X23
	054 Call 0x1C181E0

Method: System.Boolean get_ReuseEventInstance()

Disassembly:
	0x035028EC CBZ X0, 0x3502C6C
	0x035028F0 LDR W8, [X21 + 0x18]

ISIL:
	001 Move W0, [X0+88]
	002 Return X0

Method: System.Void set_ReuseEventInstance(System.Boolean value)

Disassembly:
	0x035028F4 CMP W8, 0x2
	0x035028F8 B.LS 0x3502C64
	0x035028FC STR X22, [X21 + 0x30]
	0x03502900 CBZ X20, 0x350291C
	0x03502904 LDR X8, [X21]
	0x03502908 MOV X0, X20
	0x0350290C LDR X1, [X8 + 0x40]
	0x03502910 BL 0x1C16E00
	0x03502914 CBZ X0, 0x3502C6C
	0x03502918 LDR W8, [X21 + 0x18]
	0x0350291C CMP W8, 0x3
	0x03502920 B.LS 0x3502C64
	0x03502924 STR X20, [X21 + 0x38]
	0x03502928 LDR X20, [X19 + 0xA0]
	0x0350292C CBZ X20, 0x3502948
	0x03502930 LDR X8, [X21]
	0x03502934 MOV X0, X20
	0x03502938 LDR X1, [X8 + 0x40]
	0x0350293C BL 0x1C16E00
	0x03502940 CBZ X0, 0x3502C6C
	0x03502944 LDR W8, [X21 + 0x18]
	0x03502948 CMP W8, 0x4
	0x0350294C B.LS 0x3502C64
	0x03502950 STR X20, [X21 + 0x40]
	0x03502954 LDR X20, [X19 + 0xA8]
	0x03502958 CBZ X20, 0x3502974
	0x0350295C LDR X8, [X21]
	0x03502960 MOV X0, X20
	0x03502964 LDR X1, [X8 + 0x40]
	0x03502968 BL 0x1C16E00
	0x0350296C CBZ X0, 0x3502C6C
	0x03502970 LDR W8, [X21 + 0x18]
	0x03502974 CMP W8, 0x5
	0x03502978 B.LS 0x3502C64
	0x0350297C STR X20, [X21 + 0x48]
	0x03502980 LDR X0, [X19 + 0xB8]
	0x03502984 CBZ X0, 0x3502BA8
	0x03502988 MOV X1, X31
	0x0350298C BL 0x364C19C
	0x03502990 MOVZ X8, 0xF7CF
	0x03502994 MOVK X8, 0xE3530000
	0x03502998 MOVK X8, 0x9BA5
	0x0350299C MOVK X8, 0x20C40000
	0x035029A0 SMULH X8, X0, X8, X31
	0x035029A4 SBFM X9, X8, 0x7, 0x3F
	0x035029A8 ADD X8, X9, X8, 0x3F, LSR
	0x035029AC B 0x3502BAC
	0x035029B0 MOVZ W1, 0x6
	0x035029B4 BL 0x1C16D6C
	0x035029B8 LDR X8, [X19 + 0xC8]
	0x035029BC CBZ X8, 0x3502C68
	0x035029C0 ADRP X23, 0xBF1000
	0x035029C4 LDR W8, [X8 + 0x74]
	0x035029C8 LDR X23, [X23 + 0x758]
	0x035029CC MOV X21, X0
	0x035029D0 ADD X1, X31, 0x1C

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, [X0+216]
	007 Move W21, W1
	008 Move X20, X0
	009 Move [X31+12], W31
	010 Add X1, X31, 12
	011 Move X0, X19
	012 Move X2, X31
	013 Call Monitor.Enter, X0, X1
	014 And W8, W21, 1
	015 Move [X20+88], W8
	016 Move TEMP, X21
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfNotEqual {21}
	020 Move X20, X31
	021 Move X8, [X20+200]
	022 Compare X8, 0
	023 JumpIfEqual {42}
	024 Move X20, X31
	025 Move [X8+184], X31
	026 Move W8, [X31+12]
	027 Compare W8, 0
	028 JumpIfEqual {32}
	029 Move X0, X19
	030 Move X1, X31
	031 Call Monitor.Exit, X0
	032 Compare X20, 0
	033 JumpIfNotEqual {40}
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X30, [X31+16]
	037 Move X21, [X31+24]
	038 Add X31, X31, 48
	039 Return 
	040 Move X0, X20
	041 Call 0x1C17F18
	042 Call 0x1C17F20
	043 Move X21, X0
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Move X0, X21
	046 Call 0x3EB2AD0
	047 Move X20, [X0]
	048 Call 0x3EB2AE0
	049 Move X20, X31
	050 Move X21, X0
	051 Move W8, [X31+12]
	052 Compare W8, 0
	053 JumpIfEqual {57}
	054 Move X0, X19
	055 Move X1, X31
	056 Call Monitor.Exit, X0
	057 Compare X20, 0
	058 JumpIfNotEqual {61}
	059 Move X0, X21
	060 Call 0x1D2D690
	061 Move X0, X20
	062 Call 0x1C17F18
	063 Call 0x1991590

Method: System.Boolean get_UseByteArraySlicePoolForEvents()

Disassembly:
	0x035029D4 STR W8, [X31 + 0x1C]
	0x035029D8 LDR X0, [X23]

ISIL:
	001 Move W0, [X0+89]
	002 Return X0

Method: System.Void set_UseByteArraySlicePoolForEvents(System.Boolean value)

Disassembly:
	0x035029DC BL 0x1C16E04
	0x035029E0 CBZ X21, 0x3502C68
	0x035029E4 MOV X22, X0

ISIL:
	001 And W8, W1, 1
	002 Move [X0+89], W8
	003 Return 

Method: System.Boolean get_WrapIncomingStructs()

Disassembly:
	0x035029E8 CBZ X0, 0x3502A00
	0x035029EC LDR X8, [X21]

ISIL:
	001 Move W0, [X0+90]
	002 Return X0

Method: System.Void set_WrapIncomingStructs(System.Boolean value)

Disassembly:
	0x035029F0 MOV X0, X22
	0x035029F4 LDR X1, [X8 + 0x40]
	0x035029F8 BL 0x1C16E00

ISIL:
	001 And W8, W1, 1
	002 Move [X0+90], W8
	003 Return 

Method: ExitGames.Client.Photon.ByteArraySlicePool get_ByteArraySlicePool()

Disassembly:
	0x035029FC CBZ X0, 0x3502C6C
	0x03502A00 LDR W8, [X21 + 0x18]
	0x03502A04 CBZ W8, 0x3502C64
	0x03502A08 STR X22, [X21 + 0x20]
	0x03502A0C LDR X8, [X19 + 0xC8]
	0x03502A10 CBZ X8, 0x3502C68
	0x03502A14 LDR W8, [X8 + 0x78]
	0x03502A18 LDR X0, [X23]
	0x03502A1C ADD X1, X31, 0x18

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+200]
	003 Compare X8, 0
	004 JumpIfEqual {11}
	005 Move X8, [X8+24]
	006 Compare X8, 0
	007 JumpIfEqual {11}
	008 Move X0, [X8+16]
	009 Move X30, [X31+16]
	010 Return X0
	011 Call 0x1C17F20

Method: System.Int32 get_SequenceDeltaLimitSends()

Disassembly:
	0x03502A20 STR W8, [X31 + 0x18]
	0x03502A24 BL 0x1C16E04

ISIL:
	001 Move W0, [X0+92]
	002 Return X0

Method: System.Void set_SequenceDeltaLimitSends(System.Int32 value)

Disassembly:
	0x03502A28 MOV X22, X0
	0x03502A2C CBZ X0, 0x3502A44

ISIL:
	001 Move [X0+92], W1
	002 Return 

Method: System.Int64 get_BytesIn()

Disassembly:
	0x03502A30 LDR X8, [X21]
	0x03502A34 MOV X0, X22
	0x03502A38 LDR X1, [X8 + 0x40]
	0x03502A3C BL 0x1C16E00
	0x03502A40 CBZ X0, 0x3502C6C
	0x03502A44 LDR W8, [X21 + 0x18]
	0x03502A48 CMP W8, 0x1

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+200]
	003 Compare X0, 0
	004 JumpIfEqual {9}
	005 Move X1, X31
	006 Move X30, [X31+16]
	007 Call PeerBase.get_BytesIn, X0
	008 Return X0
	009 Call 0x1C17F20

Method: System.Int64 get_BytesOut()

Disassembly:
	0x03502A4C B.LS 0x3502C64
	0x03502A50 STR X22, [X21 + 0x28]
	0x03502A54 LDR X0, [X19 + 0xC8]
	0x03502A58 CBZ X0, 0x3502C68
	0x03502A5C MOV X1, X31
	0x03502A60 BL 0x34F39AC
	0x03502A64 LDR X8, [X19 + 0xC8]

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+200]
	003 Compare X0, 0
	004 JumpIfEqual {9}
	005 Move X1, X31
	006 Move X30, [X31+16]
	007 Call PeerBase.get_BytesOut, X0
	008 Return X0
	009 Call 0x1C17F20

Method: System.Int32 get_ByteCountCurrentDispatch()

Disassembly:
	0x03502A68 CBZ X8, 0x3502C68
	0x03502A6C LDR W9, [X8 + 0x88]
	0x03502A70 LDR X8, [X23]
	0x03502A74 ADD X1, X31, 0x14
	0x03502A78 SUB W9, W0, W9
	0x03502A7C MOV X0, X8
	0x03502A80 STR W9, [X31 + 0x14]

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+200]
	003 Compare X8, 0
	004 JumpIfEqual {8}
	005 Move W0, [X8+72]
	006 Move X30, [X31+16]
	007 Return X0
	008 Call 0x1C17F20

Method: System.String get_CommandInfoCurrentDispatch()

Disassembly:
	0x03502A84 BL 0x1C16E04
	0x03502A88 MOV X22, X0
	0x03502A8C CBZ X0, 0x3502AA4
	0x03502A90 LDR X8, [X21]
	0x03502A94 MOV X0, X22
	0x03502A98 LDR X1, [X8 + 0x40]
	0x03502A9C BL 0x1C16E00
	0x03502AA0 CBZ X0, 0x3502C6C
	0x03502AA4 LDR W8, [X21 + 0x18]
	0x03502AA8 CMP W8, 0x2
	0x03502AAC B.LS 0x3502C64
	0x03502AB0 STR X22, [X21 + 0x30]
	0x03502AB4 CBZ X20, 0x3502AD0
	0x03502AB8 LDR X8, [X21]
	0x03502ABC MOV X0, X20
	0x03502AC0 LDR X1, [X8 + 0x40]
	0x03502AC4 BL 0x1C16E00
	0x03502AC8 CBZ X0, 0x3502C6C
	0x03502ACC LDR W8, [X21 + 0x18]
	0x03502AD0 CMP W8, 0x3
	0x03502AD4 B.LS 0x3502C64
	0x03502AD8 STR X20, [X21 + 0x38]
	0x03502ADC LDR X0, [X19 + 0xB8]
	0x03502AE0 CBZ X0, 0x3502B0C
	0x03502AE4 MOV X1, X31
	0x03502AE8 BL 0x364C19C
	0x03502AEC MOVZ X8, 0xF7CF
	0x03502AF0 MOVK X8, 0xE3530000
	0x03502AF4 MOVK X8, 0x9BA5

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xEDE000
	005 Move W8, [X20+2707]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xBF4000
	012 Move X0, [X0+632]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2707], W8
	016 Move X8, [X19+200]
	017 Compare X8, 0
	018 JumpIfEqual {38}
	019 Move X0, [X8+80]
	020 Compare X0, 0
	021 JumpIfEqual {29}
	022 Move X8, [X0]
	023 Move X20, [X31+16]
	024 Move X19, [X31+24]
	025 Move X2, [X8+360]
	026 Move X1, [X8+368]
	027 Move X30, [X31+32]
	028 CallNoReturn X2
	029 Move X8, 0xBF4000
	030 Move X8, [X8+632]
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X8, [X8]
	034 Move X8, [X8+184]
	035 Move X0, [X8]
	036 Move X30, [X31+32]
	037 Return X0
	038 Call 0x1C17F20

Method: System.Int32 get_ByteCountLastOperation()

Disassembly:
	0x03502AF8 MOVK X8, 0x20C40000
	0x03502AFC SMULH X8, X0, X8, X31
	0x03502B00 SBFM X9, X8, 0x7, 0x3F
	0x03502B04 ADD X8, X9, X8, 0x3F, LSR
	0x03502B08 B 0x3502B10
	0x03502B0C MOV X8, X31
	0x03502B10 ADRP X9, 0xBF3000

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+200]
	003 Compare X8, 0
	004 JumpIfEqual {8}
	005 Move W0, [X8+68]
	006 Move X30, [X31+16]
	007 Return X0
	008 Call 0x1C17F20

Method: System.Boolean get_EnableServerTracing()

Disassembly:
	0x03502B14 LDR X9, [X9 + 0xA60]
	0x03502B18 ADD X1, X31, 0x8

ISIL:
	001 Move W0, [X0+104]
	002 Return X0

Method: System.Void set_EnableServerTracing(System.Boolean value)

Disassembly:
	0x03502B1C STR X8, [X31 + 0x8]
	0x03502B20 LDR X0, [X9]
	0x03502B24 BL 0x1C16E04

ISIL:
	001 And W8, W1, 1
	002 Move [X0+104], W8
	003 Return 

Method: System.Byte get_QuickResendAttempts()

Disassembly:
	0x03502B28 MOV X20, X0
	0x03502B2C CBZ X0, 0x3502B44

ISIL:
	001 Move W0, [X0+105]
	002 Return X0

Method: System.Void set_QuickResendAttempts(System.Byte value)

Disassembly:
	0x03502B30 LDR X8, [X21]
	0x03502B34 MOV X0, X20
	0x03502B38 LDR X1, [X8 + 0x40]
	0x03502B3C BL 0x1C16E00
	0x03502B40 CBZ X0, 0x3502C6C
	0x03502B44 LDR W8, [X21 + 0x18]

ISIL:
	001 And W8, W1, 255
	002 NotImplemented "Instruction CMP not yet implemented."
	003 Move W8, 4
	004 NotImplemented "Instruction CSEL not yet implemented."
	005 Move [X0+105], W8
	006 Return 

Method: ExitGames.Client.Photon.PeerStateValue get_PeerState()

Disassembly:
	0x03502B48 CMP W8, 0x4
	0x03502B4C B.LS 0x3502C64
	0x03502B50 STR X20, [X21 + 0x40]
	0x03502B54 LDR X8, [X19 + 0xC8]
	0x03502B58 CBZ X8, 0x3502C68
	0x03502B5C LDR W8, [X8 + 0xD0]
	0x03502B60 LDR X0, [X23]
	0x03502B64 ADD X1, X31, 0x4
	0x03502B68 STR W8, [X31 + 0x4]
	0x03502B6C BL 0x1C16E04
	0x03502B70 MOV X19, X0
	0x03502B74 CBZ X0, 0x3502B8C

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+200]
	003 Compare X8, 0
	004 JumpIfEqual {13}
	005 Move W0, [X8+64]
	006 NotImplemented "Instruction CMP not yet implemented."
	007 Move W8, [X8+220]
	008 Compare W8, 0
	009 JumpIfNotEqual {11}
	010 Move W0, 10
	011 Move X30, [X31+16]
	012 Return X0
	013 Call 0x1C17F20

Method: System.String get_PeerID()

Disassembly:
	0x03502B78 LDR X8, [X21]
	0x03502B7C MOV X0, X19
	0x03502B80 LDR X1, [X8 + 0x40]
	0x03502B84 BL 0x1C16E00
	0x03502B88 CBZ X0, 0x3502C6C
	0x03502B8C LDR W8, [X21 + 0x18]
	0x03502B90 CMP W8, 0x5
	0x03502B94 B.LS 0x3502C64

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+200]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 Move X8, [X0]
	006 Move X2, [X8+424]
	007 Move X1, [X8+432]
	008 Move X30, [X31+16]
	009 CallNoReturn X2
	010 Call 0x1C17F20

Method: System.Int32 get_QueuedIncomingCommands()

Disassembly:
	0x03502B98 STR X19, [X21 + 0x48]
	0x03502B9C ADRP X8, 0xC31000
	0x03502BA0 LDR X8, [X8 + 0xE98]
	0x03502BA4 B 0x3502C40
	0x03502BA8 MOV X8, X31
	0x03502BAC ADRP X9, 0xBF3000
	0x03502BB0 LDR X9, [X9 + 0xA60]
	0x03502BB4 ADD X1, X31, 0x8

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+200]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 Move X8, [X0]
	006 Move X2, [X8+376]
	007 Move X1, [X8+384]
	008 Move X30, [X31+16]
	009 CallNoReturn X2
	010 Call 0x1C17F20

Method: System.Int32 get_QueuedOutgoingCommands()

Disassembly:
	0x03502BB8 STR X8, [X31 + 0x8]
	0x03502BBC LDR X0, [X9]
	0x03502BC0 BL 0x1C16E04
	0x03502BC4 MOV X20, X0
	0x03502BC8 CBZ X0, 0x3502BE0
	0x03502BCC LDR X8, [X21]
	0x03502BD0 MOV X0, X20
	0x03502BD4 LDR X1, [X8 + 0x40]

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+200]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 Move X8, [X0]
	006 Move X2, [X8+392]
	007 Move X1, [X8+400]
	008 Move X30, [X31+16]
	009 CallNoReturn X2
	010 Call 0x1C17F20

Method: System.Void MessageBufferPoolTrim(System.Int32 countOfBuffers)

Disassembly:
	0x03502BD8 BL 0x1C16E00
	0x03502BDC CBZ X0, 0x3502C6C
	0x03502BE0 LDR W8, [X21 + 0x18]
	0x03502BE4 CMP W8, 0x6
	0x03502BE8 B.LS 0x3502C64
	0x03502BEC STR X20, [X21 + 0x50]
	0x03502BF0 LDR X8, [X19 + 0xC8]
	0x03502BF4 CBZ X8, 0x3502C68
	0x03502BF8 LDR W8, [X8 + 0xD0]
	0x03502BFC LDR X0, [X23]
	0x03502C00 ADD X1, X31, 0x4
	0x03502C04 STR W8, [X31 + 0x4]
	0x03502C08 BL 0x1C16E04
	0x03502C0C MOV X19, X0
	0x03502C10 CBZ X0, 0x3502C28
	0x03502C14 LDR X8, [X21]
	0x03502C18 MOV X0, X19
	0x03502C1C LDR X1, [X8 + 0x40]
	0x03502C20 BL 0x1C16E00
	0x03502C24 CBZ X0, 0x3502C6C
	0x03502C28 LDR W8, [X21 + 0x18]
	0x03502C2C CMP W8, 0x7
	0x03502C30 B.LS 0x3502C64
	0x03502C34 STR X19, [X21 + 0x58]
	0x03502C38 ADRP X8, 0xC31000
	0x03502C3C LDR X8, [X8 + 0xE90]
	0x03502C40 LDR X0, [X8]
	0x03502C44 MOV X1, X21
	0x03502C48 MOV X2, X31
	0x03502C4C BL 0x3227C5C
	0x03502C50 LDP X20, X19, [X31 + 0x40]
	0x03502C54 LDP X22, X21, [X31 + 0x30]
	0x03502C58 LDP X30, X23, [X31 + 0x20]
	0x03502C5C ADD X31, X31, 0x50
	0x03502C60 RET
	0x03502C64 BL 0x1C16F28
	0x03502C68 BL 0x1C16F20
	0x03502C6C BL 0x1C16F44
	0x03502C70 MOV X1, X31
	0x03502C74 BL 0x1C16DEC
	0x03502C78 LDR X0, [X0 + 0xE8]
	0x03502C7C RET
	0x03502C80 STR X30, [X31 - 0x30]!
	0x03502C84 STP X22, X21, [X31 + 0x10]
	0x03502C88 STP X20, X19, [X31 + 0x20]
	0x03502C8C ADRP X22, 0xEDD000
	0x03502C90 ADRP X21, 0xBF1000
	0x03502C94 LDRB W8, [X22 + 0xA9A]
	0x03502C98 LDR X21, [X21 + 0x6C0]
	0x03502C9C MOV X20, X1
	0x03502CA0 MOV X19, X0
	0x03502CA4 TBNZ X8, 0x0, 0x3502CE0
	0x03502CA8 ADRP X0, 0xC31000
	0x03502CAC LDR X0, [X0 + 0xEA0]
	0x03502CB0 BL 0x1C16CF4
	0x03502CB4 ADRP X0, 0xBF9000
	0x03502CB8 LDR X0, [X0 + 0xBC8]
	0x03502CBC BL 0x1C16CF4
	0x03502CC0 ADRP X0, 0xBF1000
	0x03502CC4 LDR X0, [X0 + 0x6C0]
	0x03502CC8 BL 0x1C16CF4
	0x03502CCC ADRP X0, 0xC31000
	0x03502CD0 LDR X0, [X0 + 0xEA8]
	0x03502CD4 BL 0x1C16CF4
	0x03502CD8 MOVZ W8, 0x1
	0x03502CDC STRB W8, [X22 + 0xA9A]
	0x03502CE0 LDR X0, [X21]
	0x03502CE4 LDR W8, [X0 + 0xE0]
	0x03502CE8 CBNZ W8, 0x3502CF0
	0x03502CEC BL 0x1C16DFC
	0x03502CF0 MOV X0, X20
	0x03502CF4 MOV X1, X31
	0x03502CF8 MOV X2, X31
	0x03502CFC BL 0x3395194
	0x03502D00 TBNZ X0, 0x0, 0x3502D48
	0x03502D04 ADRP X8, 0xC31000
	0x03502D08 LDR X0, [X21]
	0x03502D0C LDR X8, [X8 + 0xEA0]
	0x03502D10 LDR W9, [X0 + 0xE0]
	0x03502D14 LDR X21, [X8]
	0x03502D18 CBNZ W9, 0x3502D20
	0x03502D1C BL 0x1C16DFC
	0x03502D20 MOV X0, X21
	0x03502D24 MOV X1, X31
	0x03502D28 BL 0x338C698
	0x03502D2C CBZ X0, 0x3502DE4
	0x03502D30 LDR X8, [X0]
	0x03502D34 MOV X1, X20
	0x03502D38 LDR X9, [X8 + 0x2A8]
	0x03502D3C LDR X2, [X8 + 0x2B0]
	0x03502D40 BLR X9
	0x03502D44 TBZ X0, 0x0, 0x3502D5C
	0x03502D48 STR X20, [X19 + 0xE8]
	0x03502D4C LDP X20, X19, [X31 + 0x20]
	0x03502D50 LDP X22, X21, [X31 + 0x10]
	0x03502D54 LDR X30, [X31], #0x30
	0x03502D58 RET
	0x03502D5C LDR X19, [X19 + 0x48]
	0x03502D60 CBZ X19, 0x3502DE4
	0x03502D64 ADRP X9, 0xBF9000
	0x03502D68 LDR X8, [X19]
	0x03502D6C LDR X9, [X9 + 0xBC8]
	0x03502D70 ADRP X10, 0xC31000
	0x03502D74 LDR X1, [X9]
	0x03502D78 LDR X10, [X10 + 0xEA8]
	0x03502D7C LDRH W9, [X8 + 0x12E]
	0x03502D80 LDR X20, [X10]
	0x03502D84 CBZ X9, 0x3502DA8
	0x03502D88 LDR X10, [X8 + 0xB0]
	0x03502D8C ADD X10, X10, 0x8
	0x03502D90 LDUR X11, [X10 - 0x8]
	0x03502D94 CMP X11, X1
	0x03502D98 B.EQ 0x3502DB8
	0x03502D9C SUBS X9, X9, 0x1
	0x03502DA0 ADD X10, X10, 0x10
	0x03502DA4 B.NE 0x3502D90
	0x03502DA8 MOV X0, X19
	0x03502DAC MOV W2, W31
	0x03502DB0 BL 0x1C5C788
	0x03502DB4 B 0x3502DC4
	0x03502DB8 LDRSW X9, [X10]
	0x03502DBC ADD X8, X8, X9, 0x4, LSL
	0x03502DC0 ADD X0, X8, 0x138
	0x03502DC4 LDP X4, X3, [X0]
	0x03502DC8 MOV X0, X19
	0x03502DCC MOV X2, X20
	0x03502DD0 LDP X20, X19, [X31 + 0x20]
	0x03502DD4 LDP X22, X21, [X31 + 0x10]
	0x03502DD8 MOVZ W1, 0x2
	0x03502DDC LDR X30, [X31], #0x30
	0x03502DE0 BR X4
	0x03502DE4 BL 0x1C16F20
	0x03502DE8 LDR X0, [X0 + 0xF8]
	0x03502DEC RET
	0x03502DF0 STR X30, [X31 - 0x30]!
	0x03502DF4 STP X22, X21, [X31 + 0x10]
	0x03502DF8 STP X20, X19, [X31 + 0x20]
	0x03502DFC ADRP X22, 0xEDD000
	0x03502E00 ADRP X21, 0xBF1000
	0x03502E04 LDRB W8, [X22 + 0xA9B]
	0x03502E08 LDR X21, [X21 + 0x6C0]
	0x03502E0C MOV X20, X1
	0x03502E10 MOV X19, X0
	0x03502E14 TBNZ X8, 0x0, 0x3502E50
	0x03502E18 ADRP X0, 0xBF9000
	0x03502E1C LDR X0, [X0 + 0xCD0]
	0x03502E20 BL 0x1C16CF4
	0x03502E24 ADRP X0, 0xBF9000
	0x03502E28 LDR X0, [X0 + 0xBC8]
	0x03502E2C BL 0x1C16CF4
	0x03502E30 ADRP X0, 0xBF1000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, 0xEDE000
	007 Move X21, 0xC32000
	008 Move W8, [X19+2708]
	009 Move X21, [X21+1912]
	010 Move W20, W0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {32}
	015 Move X0, 0xC32000
	016 Move X0, [X0+1912]
	017 Call 0x1C17CF4
	018 Move X0, 0xC32000
	019 Move X0, [X0+3648]
	020 Call 0x1C17CF4
	021 Move X0, 0xC32000
	022 Move X0, [X0+2440]
	023 Call 0x1C17CF4
	024 Move X0, 0xC32000
	025 Move X0, [X0+3656]
	026 Call 0x1C17CF4
	027 Move X0, 0xC32000
	028 Move X0, [X0+2448]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X19+2708], W8
	032 Move X0, [X21]
	033 Move W8, [X0+224]
	034 Compare W8, 0
	035 JumpIfNotEqual {38}
	036 Call 0x1C17DFC
	037 Move X0, [X21]
	038 Move X8, [X0+184]
	039 Move X19, [X8+8]
	040 Move [X31+12], W31
	041 Add X1, X31, 12
	042 Move X0, X19
	043 Move X2, X31
	044 Call Monitor.Enter, X0, X1
	045 Move X8, [X21]
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Move W9, [X8+224]
	048 Compare W9, 0
	049 JumpIfNotEqual {53}
	050 Move X0, X8
	051 Call 0x1C17DFC
	052 Move X8, [X21]
	053 Move X9, [X8+184]
	054 Move X9, [X9+8]
	055 Compare X9, 0
	056 JumpIfEqual {133}
	057 Move W9, [X9+32]
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Move X22, 0xC32000
	060 Move X22, [X22+2440]
	061 Move W9, [X8+224]
	062 Compare W9, 0
	063 JumpIfNotEqual {67}
	064 Move X0, X8
	065 Call 0x1C17DFC
	066 Move X8, [X21]
	067 Move X9, [X8+184]
	068 Move X9, [X9+8]
	069 Compare X9, 0
	070 JumpIfEqual {129}
	071 Move W11, [X9+32]
	072 Move W10, [X8+224]
	073 NotImplemented "Instruction CMP not yet implemented."
	074 Compare W10, 0
	075 JumpIfNotEqual {83}
	076 Move X0, X8
	077 Call 0x1C17DFC
	078 Move X8, [X21]
	079 Move X8, [X8+184]
	080 Move X9, [X8+8]
	081 Compare X9, 0
	082 JumpIfEqual {130}
	083 Move X1, [X22]
	084 Move X0, X9
	085 Call Queue`1<Object>.Dequeue, X0
	086 Move X8, [X21]
	087 Compare W9, 0
	088 JumpIfNotEqual {92}
	089 Move X0, X8
	090 Call 0x1C17DFC
	091 Move X8, [X21]
	092 Move X8, [X8+184]
	093 Move X0, [X8+8]
	094 Compare X0, 0
	095 JumpIfEqual {134}
	096 Move X8, 0xC32000
	097 Move X8, [X8+3648]
	098 Move X1, [X8]
	099 Call Queue`1<Object>.Clear, X0
	100 Compare W10, 0
	101 JumpIfNotEqual {109}
	102 Move X0, X8
	103 Call 0x1C17DFC
	104 Move X8, [X21]
	105 Move X8, [X8+184]
	106 Move X9, [X8+8]
	107 Compare X9, 0
	108 JumpIfEqual {135}
	109 Move X8, 0xC32000
	110 Move X8, [X8+3656]
	111 Move X1, [X8]
	112 Move X0, X9
	113 Call Queue`1<Object>.TrimExcess, X0
	114 Move X20, X31
	115 Move W8, [X31+12]
	116 Compare W8, 0
	117 JumpIfEqual {121}
	118 Move X0, X19
	119 Move X1, X31
	120 Call Monitor.Exit, X0
	121 Compare X20, 0
	122 JumpIfNotEqual {131}
	123 Move X20, [X31+32]
	124 Move X19, [X31+40]
	125 Move X22, [X31+16]
	126 Move X21, [X31+24]
	127 Move X30, [X31+48]
	128 Return 
	129 Call 0x1C17F20
	130 Call 0x1C17F20
	131 Move X0, X20
	132 Call 0x1C17F18
	133 Call 0x1C17F20
	134 Call 0x1C17F20
	135 Call 0x1C17F20
	136 Move X21, X0
	137 NotImplemented "Instruction CMP not yet implemented."
	138 Move X0, X21
	139 Call 0x3EB2AD0
	140 Move X20, [X0]
	141 Call 0x3EB2AE0
	142 Move X20, X31
	143 Move X21, X0
	144 Move W8, [X31+12]
	145 Compare W8, 0
	146 JumpIfEqual {150}
	147 Move X0, X19
	148 Move X1, X31
	149 Call Monitor.Exit, X0
	150 Compare X20, 0
	151 JumpIfNotEqual {154}
	152 Move X0, X21
	153 Call 0x1D2D690
	154 Move X0, X20
	155 Call 0x1C17F18
	156 Call 0x1991590

Method: System.Int32 MessageBufferPoolSize()

Disassembly:
	0x03502E34 LDR X0, [X0 + 0x6C0]
	0x03502E38 BL 0x1C16CF4
	0x03502E3C ADRP X0, 0xC31000
	0x03502E40 LDR X0, [X0 + 0xEA8]
	0x03502E44 BL 0x1C16CF4
	0x03502E48 MOVZ W8, 0x1
	0x03502E4C STRB W8, [X22 + 0xA9B]
	0x03502E50 LDR X0, [X21]
	0x03502E54 LDR W8, [X0 + 0xE0]
	0x03502E58 CBNZ W8, 0x3502E60
	0x03502E5C BL 0x1C16DFC
	0x03502E60 MOV X0, X20
	0x03502E64 MOV X1, X31
	0x03502E68 MOV X2, X31
	0x03502E6C BL 0x3395194
	0x03502E70 TBNZ X0, 0x0, 0x3502EB8
	0x03502E74 ADRP X8, 0xBF9000
	0x03502E78 LDR X0, [X21]
	0x03502E7C LDR X8, [X8 + 0xCD0]
	0x03502E80 LDR W9, [X0 + 0xE0]
	0x03502E84 LDR X21, [X8]
	0x03502E88 CBNZ W9, 0x3502E90
	0x03502E8C BL 0x1C16DFC
	0x03502E90 MOV X0, X21
	0x03502E94 MOV X1, X31
	0x03502E98 BL 0x338C698
	0x03502E9C CBZ X0, 0x3502F54
	0x03502EA0 LDR X8, [X0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xEDE000
	005 Move X19, 0xC32000
	006 Move W8, [X20+2709]
	007 Move X19, [X19+1912]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {20}
	012 Move X0, 0xC32000
	013 Move X0, [X0+1912]
	014 Call 0x1C17CF4
	015 Move X0, 0xC32000
	016 Move X0, [X0+2448]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+2709], W8
	020 Move X0, [X19]
	021 Move W8, [X0+224]
	022 Compare W8, 0
	023 JumpIfNotEqual {26}
	024 Call 0x1C17DFC
	025 Move X0, [X19]
	026 Move X8, [X0+184]
	027 Move X8, [X8+8]
	028 Compare X8, 0
	029 JumpIfEqual {35}
	030 Move W0, [X8+32]
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move X30, [X31+32]
	034 Return X0
	035 Call 0x1C17F20

Method: System.Boolean get_CrcEnabled()

Disassembly:
	0x03502EA4 MOV X1, X20
	0x03502EA8 LDR X9, [X8 + 0x2A8]

ISIL:
	001 Move W0, [X0+108]
	002 Return X0

Method: System.Void set_CrcEnabled(System.Boolean value)

Disassembly:
	0x03502EAC LDR X2, [X8 + 0x2B0]
	0x03502EB0 BLR X9
	0x03502EB4 TBZ X0, 0x0, 0x3502ECC
	0x03502EB8 STR X20, [X19 + 0xF8]
	0x03502EBC LDP X20, X19, [X31 + 0x20]
	0x03502EC0 LDP X22, X21, [X31 + 0x10]
	0x03502EC4 LDR X30, [X31], #0x30
	0x03502EC8 RET
	0x03502ECC LDR X19, [X19 + 0x48]
	0x03502ED0 CBZ X19, 0x3502F54
	0x03502ED4 ADRP X9, 0xBF9000
	0x03502ED8 LDR X8, [X19]
	0x03502EDC LDR X9, [X9 + 0xBC8]
	0x03502EE0 ADRP X10, 0xC31000
	0x03502EE4 LDR X1, [X9]
	0x03502EE8 LDR X10, [X10 + 0xEA8]
	0x03502EEC LDRH W9, [X8 + 0x12E]
	0x03502EF0 LDR X20, [X10]
	0x03502EF4 CBZ X9, 0x3502F18
	0x03502EF8 LDR X10, [X8 + 0xB0]
	0x03502EFC ADD X10, X10, 0x8
	0x03502F00 LDUR X11, [X10 - 0x8]
	0x03502F04 CMP X11, X1
	0x03502F08 B.EQ 0x3502F28
	0x03502F0C SUBS X9, X9, 0x1
	0x03502F10 ADD X10, X10, 0x10
	0x03502F14 B.NE 0x3502F00
	0x03502F18 MOV X0, X19
	0x03502F1C MOV W2, W31
	0x03502F20 BL 0x1C5C788
	0x03502F24 B 0x3502F34

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move W9, [X0+108]
	004 And W8, W1, 1
	005 NotImplemented "Instruction CMP not yet implemented."
	006 Move X9, [X0+200]
	007 Compare X9, 0
	008 JumpIfEqual {16}
	009 Move W9, [X9+64]
	010 Compare W9, 0
	011 JumpIfNotEqual {17}
	012 Move [X0+108], W8
	013 Move X30, [X31+16]
	014 Move X19, [X31+24]
	015 Return 
	016 Call 0x1C17F20
	017 Move X0, 0xBF2000
	018 Move X0, [X0+2000]
	019 Call 0x1C17D08
	020 Call 0x1C17F10
	021 Move X19, X0
	022 Move X0, 0xC32000
	023 Move X0, [X0+3664]
	024 Call 0x1C17D08
	025 Move X1, X0
	026 Move X0, X19
	027 Move X2, X31
	028 Call Exception..ctor, X0, X1
	029 Move X0, 0xC32000
	030 Move X0, [X0+3672]
	031 Call 0x1C17D08
	032 Move X1, X0
	033 Move X0, X19
	034 Call 0x1C17DEC

Method: System.Int32 get_PacketLossByCrc()

Disassembly:
	0x03502F28 LDRSW X9, [X10]
	0x03502F2C ADD X8, X8, X9, 0x4, LSL
	0x03502F30 ADD X0, X8, 0x138
	0x03502F34 LDP X4, X3, [X0]
	0x03502F38 MOV X0, X19
	0x03502F3C MOV X2, X20
	0x03502F40 LDP X20, X19, [X31 + 0x20]

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+200]
	003 Compare X8, 0
	004 JumpIfEqual {8}
	005 Move W0, [X8+88]
	006 Move X30, [X31+16]
	007 Return X0
	008 Call 0x1C17F20

Method: System.Int32 get_PacketLossByChallenge()

Disassembly:
	0x03502F44 LDP X22, X21, [X31 + 0x10]
	0x03502F48 MOVZ W1, 0x2
	0x03502F4C LDR X30, [X31], #0x30
	0x03502F50 BR X4
	0x03502F54 BL 0x1C16F20
	0x03502F58 LDR W0, [X0 + 0x108]
	0x03502F5C RET

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+200]
	003 Compare X8, 0
	004 JumpIfEqual {8}
	005 Move W0, [X8+92]
	006 Move X30, [X31+16]
	007 Return X0
	008 Call 0x1C17F20

Method: System.Int32 get_SentReliableCommandsCount()

Disassembly:
	0x03502F60 STR W1, [X0 + 0x108]
	0x03502F64 RET
	0x03502F68 LDR W0, [X0 + 0x10C]
	0x03502F6C RET
	0x03502F70 STR W1, [X0 + 0x10C]
	0x03502F74 RET
	0x03502F78 STR X30, [X31 - 0x50]!
	0x03502F7C STP X26, X25, [X31 + 0x10]

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+200]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 Move X8, [X0]
	006 Move X2, [X8+408]
	007 Move X1, [X8+416]
	008 Move X30, [X31+16]
	009 CallNoReturn X2
	010 Call 0x1C17F20

Method: System.Int32 get_ResentReliableCommands()

Disassembly:
	0x03502F80 STP X24, X23, [X31 + 0x20]
	0x03502F84 STP X22, X21, [X31 + 0x30]
	0x03502F88 STP X20, X19, [X31 + 0x40]
	0x03502F8C ADRP X21, 0xEDD000
	0x03502F90 ADRP X26, 0xBF7000
	0x03502F94 ADRP X25, 0xC31000
	0x03502F98 ADRP X24, 0xC31000
	0x03502F9C ADRP X22, 0xC31000
	0x03502FA0 ADRP X23, 0xBF1000
	0x03502FA4 LDRB W8, [X21 + 0xA9C]
	0x03502FA8 LDR X26, [X26 + 0xCC0]
	0x03502FAC LDR X25, [X25 + 0xEB0]
	0x03502FB0 LDR X24, [X24 + 0xEB8]
	0x03502FB4 LDR X22, [X22 + 0xEC0]
	0x03502FB8 LDR X23, [X23 + 0x6C0]
	0x03502FBC MOV W20, W1
	0x03502FC0 MOV X19, X0
	0x03502FC4 TBNZ X8, 0x0, 0x3503030
	0x03502FC8 ADRP X0, 0xC31000
	0x03502FCC LDR X0, [X0 + 0xEB8]
	0x03502FD0 BL 0x1C16CF4
	0x03502FD4 ADRP X0, 0xBFA000
	0x03502FD8 LDR X0, [X0 + 0x5B8]
	0x03502FDC BL 0x1C16CF4
	0x03502FE0 ADRP X0, 0xC31000
	0x03502FE4 LDR X0, [X0 + 0xEB0]
	0x03502FE8 BL 0x1C16CF4
	0x03502FEC ADRP X0, 0xC31000
	0x03502FF0 LDR X0, [X0 + 0xEC8]
	0x03502FF4 BL 0x1C16CF4
	0x03502FF8 ADRP X0, 0xBF7000
	0x03502FFC LDR X0, [X0 + 0xCC0]
	0x03503000 BL 0x1C16CF4
	0x03503004 ADRP X0, 0xC30000
	0x03503008 LDR X0, [X0 + 0xED0]
	0x0350300C BL 0x1C16CF4

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xEDE000
	005 Move W8, [X20+2710]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xC32000
	012 Move X0, [X0+1888]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2710], W8
	016 Move X0, [X19+200]
	017 Compare X0, 0
	018 JumpIfEqual {39}
	019 Move W8, [X0+32]
	020 Compare W8, 0
	021 JumpIfEqual {23}
	022 Move W0, W31
	023 Move X9, 0xC32000
	024 Move X9, [X9+1888]
	025 Move X8, [X0]
	026 Move X1, [X9]
	027 Move W10, [X8+304]
	028 Move W9, [X1+304]
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move X8, [X8+200]
	031 Add X8, X8, X9
	032 NotImplemented "Instruction LDUR not yet implemented."
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move W0, [X0+376]
	035 Move X20, [X31+16]
	036 Move X19, [X31+24]
	037 Move X30, [X31+32]
	038 Return X0
	039 Call 0x1C17F20
	040 Call 0x1C181E0

Method: System.Int32 get_DisconnectTimeout()

Disassembly:
	0x0350302C STRB W8, [X21 + 0xA9C]
	0x03503030 MOVZ W9, 0xF

ISIL:
	001 Move W0, [X0+128]
	002 Return X0

Method: System.Void set_DisconnectTimeout(System.Int32 value)

Disassembly:
	0x03503034 STRB W9, [X19 + 0x25]
	0x03503038 MOVZ W9, 0x1

ISIL:
	001 Move [X0+128], W1
	002 Return 

Method: System.Int32 get_ServerTimeInMilliSeconds()

Disassembly:
	0x0350303C STRB W9, [X19 + 0x40]
	0x03503040 STRB W9, [X19 + 0x5B]
	0x03503044 MOVZ W9, 0x32
	0x03503048 STR W9, [X19 + 0x5C]
	0x0350304C ADRP X9, 0xFFFFFFFFFD5EA000
	0x03503050 LDR V0, [X9 + 0x918]
	0x03503054 MOVZ W8, 0x2
	0x03503058 STR W8, [X19 + 0x20]
	0x0350305C STRH W8, [X19 + 0x6A]
	0x03503060 MOVZ W8, 0x3E8
	0x03503064 MOVZ W9, 0x2710
	0x03503068 STR W8, [X19 + 0x78]
	0x0350306C MOVZ W8, 0x4B0
	0x03503070 STURH W31, [X19 + 0x59]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X0, [X0+200]
	004 Compare X0, 0
	005 JumpIfEqual {17}
	006 Move W8, [X0+112]
	007 Compare W8, 0
	008 JumpIfEqual {13}
	009 Move W19, [X0+108]
	010 Move X1, X31
	011 Call PeerBase.get_timeInt, X0
	012 Add W0, W0, W19
	013 Move W0, W31
	014 Move X30, [X31+16]
	015 Move X19, [X31+24]
	016 Return X0
	017 Call 0x1C17F20

Method: System.Void set_LocalMsTimestampDelegate(ExitGames.Client.Photon.SupportClass/IntegerMillisecondsDelegate value)

Disassembly:
	0x03503090 MOV X1, X31
	0x03503094 MOV X21, X0
	0x03503098 BL 0x33BDD8C
	0x0350309C STR X21, [X19 + 0xD0]
	0x035030A0 LDR X0, [X26]
	0x035030A4 BL 0x1C16F10
	0x035030A8 MOV X1, X31
	0x035030AC MOV X21, X0
	0x035030B0 BL 0x33BDD8C
	0x035030B4 STR X21, [X19 + 0xD8]
	0x035030B8 LDR X0, [X26]
	0x035030BC BL 0x1C16F10
	0x035030C0 MOV X1, X31
	0x035030C4 MOV X21, X0
	0x035030C8 BL 0x33BDD8C
	0x035030CC MOV X0, X19
	0x035030D0 MOV X1, X31
	0x035030D4 STR X21, [X19 + 0xE0]
	0x035030D8 BL 0x33BDD8C
	0x035030DC STRB W20, [X19 + 0x84]
	0x035030E0 LDR X0, [X25]
	0x035030E4 BL 0x1C16F10
	0x035030E8 LDR X2, [X24]
	0x035030EC MOVZ W1, 0x5
	0x035030F0 MOV X20, X0
	0x035030F4 BL 0x29D8C14
	0x035030F8 STR X20, [X19 + 0x30]
	0x035030FC LDR X0, [X23]
	0x03503100 LDR X21, [X22]
	0x03503104 LDR W8, [X0 + 0xE0]
	0x03503108 CBNZ W8, 0x3503110
	0x0350310C BL 0x1C16DFC
	0x03503110 MOV X0, X21
	0x03503114 MOV X1, X31
	0x03503118 BL 0x338C698
	0x0350311C CBZ X20, 0x35031E0
	0x03503120 ADRP X21, 0xBF9000
	0x03503124 LDR X21, [X21 + 0x5B8]
	0x03503128 ADRP X22, 0xC30000
	0x0350312C MOV X2, X0
	0x03503130 MOV X0, X20
	0x03503134 LDR X3, [X21]
	0x03503138 LDR X22, [X22 + 0xED0]
	0x0350313C MOV W1, W31
	0x03503140 BL 0x29D94A0
	0x03503144 LDR X0, [X22]
	0x03503148 LDR X20, [X19 + 0x30]
	0x0350314C MOV X1, X31
	0x03503150 BL 0x338C698
	0x03503154 CBZ X20, 0x35031E0
	0x03503158 LDR X3, [X21]
	0x0350315C ADRP X22, 0xC30000
	0x03503160 LDR X22, [X22 + 0xEC8]
	0x03503164 MOV X2, X0
	0x03503168 MOVZ W1, 0x1
	0x0350316C MOV X0, X20
	0x03503170 BL 0x29D94A0
	0x03503174 LDR X0, [X22]
	0x03503178 LDR X20, [X19 + 0x30]
	0x0350317C MOV X1, X31
	0x03503180 BL 0x338C698
	0x03503184 CBZ X20, 0x35031E0
	0x03503188 LDR X3, [X21]
	0x0350318C MOV X2, X0
	0x03503190 MOVZ W1, 0x4

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+32], X30
	003 Move [X31+40], X21
	004 Move [X31+48], X20
	005 Move [X31+56], X19
	006 Move X21, 0xEDD000
	007 Move W8, [X21+2711]
	008 Move X19, X1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xBF9000
	015 Move X0, [X0+3680]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+2711], W8
	019 Move X8, [X20+200]
	020 Compare X8, 0
	021 JumpIfEqual {41}
	022 Move W8, [X8+64]
	023 Compare W8, 0
	024 JumpIfNotEqual {42}
	025 Move X20, 0xBF9000
	026 Move X20, [X20+3680]
	027 Move X0, [X20]
	028 Move W8, [X0+224]
	029 Compare W8, 0
	030 JumpIfNotEqual {33}
	031 Call 0x1C17DFC
	032 Move X0, [X20]
	033 Move X8, [X0+184]
	034 Move X30, [X31+32]
	035 Move X21, [X31+40]
	036 Move [X8+16], X19
	037 Move X20, [X31+48]
	038 Move X19, [X31+56]
	039 Add X31, X31, 64
	040 Return 
	041 Call 0x1C17F20
	042 Move X0, X20
	043 Call PhotonPeer.get_PeerState, X0
	044 Move W19, W0
	045 Move X0, 0xBF9000
	046 Move X0, [X0+3392]
	047 Call 0x1C17D08
	048 Move TEMP, 0
	049 Not TEMP
	050 Move X8, TEMP
	051 Move [X31+8], X0
	052 Move [X31+16], X8
	053 Add X0, X31, 8
	054 Move X1, X31
	055 Move [X31+24], W19
	056 Call Enum.ToString, X0
	057 Move X19, X0
	058 Move X0, 0xC31000
	059 Move X0, [X0+3680]
	060 Call 0x1C17D08
	061 Move X1, X19
	062 Move X2, X31
	063 Call String.Concat, X0, X1
	064 Move X19, X0
	065 Move X0, 0xBF1000
	066 Move X0, [X0+2000]
	067 Call 0x1C17D08
	068 Call 0x1C17F10
	069 Move X1, X19
	070 Move X2, X31
	071 Move X20, X0
	072 Call Exception..ctor, X0, X1
	073 Move X0, 0xC31000
	074 Move X0, [X0+3688]
	075 Call 0x1C17D08
	076 Move X1, X0
	077 Move X0, X20
	078 Call 0x1C17DEC

Method: System.Int32 get_ConnectionTime()

Disassembly:
	0x03503074 STRB W31, [X19 + 0x7C]
	0x03503078 STR W9, [X19 + 0x80]
	0x0350307C STR W8, [X19 + 0x88]
	0x03503080 STR D0, [X19 + 0x70]
	0x03503084 STRB W31, [X19 + 0xC0]
	0x03503088 LDR X0, [X26]
	0x0350308C BL 0x1C16F10

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+200]
	003 Compare X0, 0
	004 JumpIfEqual {9}
	005 Move X1, X31
	006 Move X30, [X31+16]
	007 Call PeerBase.get_timeInt, X0
	008 Return X0
	009 Call 0x1C17F20

Method: System.Int32 get_LastSendAckTime()

Disassembly:
	0x03503194 MOV X0, X20
	0x03503198 BL 0x29D94A0
	0x0350319C LDR X0, [X22]
	0x035031A0 LDR X20, [X19 + 0x30]
	0x035031A4 MOV X1, X31
	0x035031A8 BL 0x338C698
	0x035031AC CBZ X20, 0x35031E0

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+200]
	003 Compare X8, 0
	004 JumpIfEqual {8}
	005 Move W0, [X8+212]
	006 Move X30, [X31+16]
	007 Return X0
	008 Call 0x1C17F20

Method: System.Int32 get_LastSendOutgoingTime()

Disassembly:
	0x035031B0 LDR X3, [X21]
	0x035031B4 MOV X2, X0
	0x035031B8 MOVZ W1, 0x5
	0x035031BC MOV X0, X20
	0x035031C0 BL 0x29D94A0
	0x035031C4 MOV X0, X19
	0x035031C8 LDP X20, X19, [X31 + 0x40]

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+200]
	003 Compare X8, 0
	004 JumpIfEqual {8}
	005 Move W0, [X8+216]
	006 Move X30, [X31+16]
	007 Return X0
	008 Call 0x1C17F20

Method: System.Int32 get_LongestSentCall()

Disassembly:
	0x035031CC LDP X22, X21, [X31 + 0x30]
	0x035031D0 LDP X24, X23, [X31 + 0x20]
	0x035031D4 LDP X26, X25, [X31 + 0x10]
	0x035031D8 LDR X30, [X31], #0x50
	0x035031DC B 0x35031E4
	0x035031E0 BL 0x1C16F20
	0x035031E4 STR X30, [X31 - 0x20]!

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+200]
	003 Compare X8, 0
	004 JumpIfEqual {8}
	005 Move W0, [X8+208]
	006 Move X30, [X31+16]
	007 Return X0
	008 Call 0x1C17F20

Method: System.Void set_LongestSentCall(System.Int32 value)

Disassembly:
	0x035031E8 STP X20, X19, [X31 + 0x10]
	0x035031EC ADRP X20, 0xEDC000
	0x035031F0 LDRB W8, [X20 + 0xA9E]
	0x035031F4 MOV X19, X0
	0x035031F8 TBNZ X8, 0x0, 0x350321C
	0x035031FC ADRP X0, 0xC30000
	0x03503200 LDR X0, [X0 + 0x760]

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+200]
	003 Compare X8, 0
	004 JumpIfEqual {8}
	005 Move [X8+208], W1
	006 Move X30, [X31+16]
	007 Return 
	008 Call 0x1C17F20

Method: System.Int32 get_RoundTripTime()

Disassembly:
	0x03503204 BL 0x1C16CF4
	0x03503208 ADRP X0, 0xC30000
	0x0350320C LDR X0, [X0 + 0xCB8]
	0x03503210 BL 0x1C16CF4
	0x03503214 MOVZ W8, 0x1
	0x03503218 STRB W8, [X20 + 0xA9E]
	0x0350321C LDRB W8, [X19 + 0x84]

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+200]
	003 Compare X8, 0
	004 JumpIfEqual {8}
	005 Move W0, [X8+116]
	006 Move X30, [X31+16]
	007 Return X0
	008 Call 0x1C17F20

Method: System.Int32 get_RoundTripTimeVariance()

Disassembly:
	0x03503220 LDR X20, [X19 + 0xC8]
	0x03503224 CMP W8, 0x5
	0x03503228 B.HI 0x35032A8
	0x0350322C MOVZ W9, 0x1
	0x03503230 LSLV W8, W9, W8
	0x03503234 MOVZ W9, 0x32
	0x03503238 ANDS W31, W8, W9, 0x0

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+200]
	003 Compare X8, 0
	004 JumpIfEqual {8}
	005 Move W0, [X8+120]
	006 Move X30, [X31+16]
	007 Return X0
	008 Call 0x1C17F20

Method: System.Int32 get_LastRoundTripTime()

Disassembly:
	0x0350323C B.EQ 0x35032A8
	0x03503240 ADRP X8, 0xC30000
	0x03503244 LDR X8, [X8 + 0xCB8]
	0x03503248 LDR X0, [X8]
	0x0350324C CBZ X20, 0x3503278
	0x03503250 LDR X8, [X20]
	0x03503254 LDRB W9, [X0 + 0x130]

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+200]
	003 Compare X8, 0
	004 JumpIfEqual {8}
	005 Move W0, [X8+124]
	006 Move X30, [X31+16]
	007 Return X0
	008 Call 0x1C17F20

Method: System.Int32 get_TimestampOfLastSocketReceive()

Disassembly:
	0x03503258 LDRB W10, [X8 + 0x130]
	0x0350325C CMP W10, W9
	0x03503260 B.CC 0x3503278
	0x03503264 LDR X8, [X8 + 0xC8]
	0x03503268 ADD X8, X8, X9, 0x3, LSL
	0x0350326C LDUR X8, [X8 - 0x8]
	0x03503270 CMP X8, X0

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+200]
	003 Compare X8, 0
	004 JumpIfEqual {8}
	005 Move W0, [X8+136]
	006 Move X30, [X31+16]
	007 Return X0
	008 Call 0x1C17F20

Method: System.String get_ServerAddress()

Disassembly:
	0x03503274 B.EQ 0x350328C
	0x03503278 BL 0x1C16F10
	0x0350327C MOV X1, X31
	0x03503280 MOV X20, X0
	0x03503284 BL 0x3522264
	0x03503288 STR X20, [X19 + 0xC8]
	0x0350328C CBZ X20, 0x3503310

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+200]
	003 Compare X8, 0
	004 JumpIfEqual {8}
	005 Move X0, [X8+48]
	006 Move X30, [X31+16]
	007 Return X0
	008 Call 0x1C17F20

Method: System.String get_ServerIpAddress()

Disassembly:
	0x03503290 LDRB W8, [X19 + 0x84]
	0x03503294 CMP W8, 0x1
	0x03503298 CSET W8, EQ
	0x0350329C STRB W8, [X20 + 0x148]
	0x035032A0 CBNZ X20, 0x35032F8
	0x035032A4 B 0x3503310
	0x035032A8 ADRP X8, 0xC30000
	0x035032AC LDR X8, [X8 + 0x760]
	0x035032B0 LDR X0, [X8]
	0x035032B4 CBZ X20, 0x35032E0
	0x035032B8 LDR X8, [X20]
	0x035032BC LDRB W9, [X0 + 0x130]
	0x035032C0 LDRB W10, [X8 + 0x130]
	0x035032C4 CMP W10, W9
	0x035032C8 B.CC 0x35032E0
	0x035032CC LDR X8, [X8 + 0xC8]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, 0xEDD000
	004 Move W8, [X19+2831]
	005 Compare W8, 0
	006 JumpIfNotEqual {12}
	007 Move X0, 0xC31000
	008 Move X0, [X0+2800]
	009 Call 0x1C17CF4
	010 Move W8, 1
	011 Move [X19+2831], W8
	012 Move X8, 0xC31000
	013 Move X8, [X8+2800]
	014 Move X8, [X8]
	015 Move X8, [X8+184]
	016 Move X0, [X8]
	017 Move X30, [X31+16]
	018 Move X19, [X31+24]
	019 Return X0

Method: ExitGames.Client.Photon.ConnectionProtocol get_UsedProtocol()

Disassembly:
	0x03503010 ADRP X0, 0xC30000
	0x03503014 LDR X0, [X0 + 0xEC0]
	0x03503018 BL 0x1C16CF4
	0x0350301C ADRP X0, 0xBF0000
	0x03503020 LDR X0, [X0 + 0x6C0]
	0x03503024 BL 0x1C16CF4
	0x03503028 MOVZ W8, 0x1

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+200]
	003 Compare X8, 0
	004 JumpIfEqual {8}
	005 Move W0, [X8+32]
	006 Move X30, [X31+16]
	007 Return X0
	008 Call 0x1C17F20

Method: ExitGames.Client.Photon.ConnectionProtocol get_TransportProtocol()

Disassembly:
	0x035032D0 ADD X8, X8, X9, 0x3, LSL
	0x035032D4 LDUR X8, [X8 - 0x8]

ISIL:
	001 Move W0, [X0+132]
	002 Return X0

Method: System.Void set_TransportProtocol(ExitGames.Client.Photon.ConnectionProtocol value)

Disassembly:
	0x035032D8 CMP X8, X0
	0x035032DC B.EQ 0x35032F8

ISIL:
	001 Move [X0+132], W1
	002 Return 

Method: System.Boolean get_IsSimulationEnabled()

Disassembly:
	0x035032E0 BL 0x1C16F10
	0x035032E4 MOV X1, X31
	0x035032E8 MOV X20, X0
	0x035032EC BL 0x34EF100
	0x035032F0 STR X20, [X19 + 0xC8]
	0x035032F4 CBZ X20, 0x3503310
	0x035032F8 STR X19, [X20 + 0x10]
	0x035032FC LDRB W8, [X19 + 0x84]
	0x03503300 STRB W8, [X20 + 0x20]
	0x03503304 LDP X20, X19, [X31 + 0x10]

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+200]
	003 Compare X0, 0
	004 JumpIfEqual {13}
	005 Move X1, X31
	006 Call PeerBase.get_NetworkSimulationSettings, X0
	007 Compare X0, 0
	008 JumpIfEqual {13}
	009 Move X1, X31
	010 Move X30, [X31+16]
	011 Call NetworkSimulationSet.get_IsSimulationEnabled, X0
	012 Return X0
	013 Call 0x1C17F20

Method: System.Void set_IsSimulationEnabled(System.Boolean value)

Disassembly:
	0x03503324 MOV X20, X0
	0x03503328 BL 0x3502F78
	0x0350332C STR X19, [X20 + 0x48]
	0x03503330 LDP X20, X19, [X31 + 0x10]
	0x03503334 LDR X30, [X31], #0x20
	0x03503338 RET
	0x0350333C LDR X8, [X0]
	0x03503340 MOV X5, X4
	0x03503344 MOV X4, X3
	0x03503348 MOV X3, X2
	0x0350334C LDP X7, X6, [X8 + 0x1A8]
	0x03503350 MOV X2, X31
	0x03503354 BR X7
	0x03503358 SUB X31, X31, 0x90
	0x0350335C STP X29, X30, [X31 + 0x30]
	0x03503360 STP X28, X27, [X31 + 0x40]
	0x03503364 STP X26, X25, [X31 + 0x50]
	0x03503368 STP X24, X23, [X31 + 0x60]
	0x0350336C STP X22, X21, [X31 + 0x70]
	0x03503370 STP X20, X19, [X31 + 0x80]
	0x03503374 ADRP X19, 0xEDC000
	0x03503378 LDRB W8, [X19 + 0xA9D]
	0x0350337C MOV X26, X5
	0x03503380 MOV X22, X4
	0x03503384 MOV X23, X3
	0x03503388 MOV X24, X2
	0x0350338C MOV X25, X1
	0x03503390 MOV X21, X0
	0x03503394 TBNZ X8, 0x0, 0x350340C
	0x03503398 ADRP X0, 0xBF8000
	0x0350339C LDR X0, [X0 + 0xDF8]
	0x035033A0 BL 0x1C16CF4
	0x035033A4 ADRP X0, 0xC30000
	0x035033A8 LDR X0, [X0 + 0xED8]
	0x035033AC BL 0x1C16CF4
	0x035033B0 ADRP X0, 0xBF8000
	0x035033B4 LDR X0, [X0 + 0xBC8]
	0x035033B8 BL 0x1C16CF4
	0x035033BC ADRP X0, 0xC30000
	0x035033C0 LDR X0, [X0 + 0xAF0]
	0x035033C4 BL 0x1C16CF4
	0x035033C8 ADRP X0, 0xBF0000
	0x035033CC LDR X0, [X0 + 0x9D0]
	0x035033D0 BL 0x1C16CF4
	0x035033D4 ADRP X0, 0xBF8000
	0x035033D8 LDR X0, [X0 + 0xE60]
	0x035033DC BL 0x1C16CF4
	0x035033E0 ADRP X0, 0xBF4000
	0x035033E4 LDR X0, [X0 + 0x928]
	0x035033E8 BL 0x1C16CF4
	0x035033EC ADRP X0, 0xC30000
	0x035033F0 LDR X0, [X0 + 0xEE0]
	0x035033F4 BL 0x1C16CF4
	0x035033F8 ADRP X0, 0xC30000
	0x035033FC LDR X0, [X0 + 0xEE8]
	0x03503400 BL 0x1C16CF4
	0x03503404 MOVZ W8, 0x1
	0x03503408 STRB W8, [X19 + 0xA9D]
	0x0350340C STRB W31, [X31 + 0x28]
	0x03503410 STR X31, [X31 + 0x20]
	0x03503414 LDR X19, [X21 + 0xD8]
	0x03503418 STRB W31, [X31 + 0x2C]
	0x0350341C ADD X1, X31, 0x2C
	0x03503420 MOV X0, X19
	0x03503424 MOV X2, X31
	0x03503428 BL 0x33DE64C
	0x0350342C LDR X20, [X21 + 0xD0]
	0x03503430 STRB W31, [X31 + 0x28]
	0x03503434 ADD X1, X31, 0x28
	0x03503438 MOV X0, X20

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, X0
	007 Move X0, [X0+200]
	008 Compare X0, 0
	009 JumpIfEqual {51}
	010 Move W20, W1
	011 Move X1, X31
	012 Call PeerBase.get_NetworkSimulationSettings, X0
	013 Compare X0, 0
	014 JumpIfEqual {51}
	015 Move X1, X31
	016 Call NetworkSimulationSet.get_IsSimulationEnabled, X0
	017 And W8, W0, 1
	018 And W9, W20, 1
	019 NotImplemented "Instruction CMP not yet implemented."
	020 Move X19, [X21+208]
	021 Move [X31+12], W31
	022 Add X1, X31, 12
	023 Move X0, X19
	024 Move X2, X31
	025 Call Monitor.Enter, X0, X1
	026 Move X0, [X21+200]
	027 Compare X0, 0
	028 JumpIfEqual {54}
	029 Move X1, X31
	030 Call PeerBase.get_NetworkSimulationSettings, X0
	031 Compare X0, 0
	032 JumpIfEqual {55}
	033 And W1, W20, 1
	034 Move X2, X31
	035 Call NetworkSimulationSet.set_IsSimulationEnabled, X0, X1
	036 Move X20, X31
	037 Move W8, [X31+12]
	038 Compare W8, 0
	039 JumpIfEqual {43}
	040 Move X0, X19
	041 Move X1, X31
	042 Call Monitor.Exit, X0
	043 Compare X20, 0
	044 JumpIfNotEqual {52}
	045 Move X20, [X31+32]
	046 Move X19, [X31+40]
	047 Move X30, [X31+16]
	048 Move X21, [X31+24]
	049 Add X31, X31, 48
	050 Return 
	051 Call 0x1C17F20
	052 Move X0, X20
	053 Call 0x1C17F18
	054 Call 0x1C17F20
	055 Call 0x1C17F20
	056 Move X21, X0
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Move X0, X21
	059 Call 0x3EB2AD0
	060 Move X20, [X0]
	061 Call 0x3EB2AE0
	062 Move X20, X31
	063 Move X21, X0
	064 Move W8, [X31+12]
	065 Compare W8, 0
	066 JumpIfEqual {70}
	067 Move X0, X19
	068 Move X1, X31
	069 Call Monitor.Exit, X0
	070 Compare X20, 0
	071 JumpIfNotEqual {74}
	072 Move X0, X21
	073 Call 0x1D2D690
	074 Move X0, X20
	075 Call 0x1C17F18
	076 Call 0x1991590

Method: ExitGames.Client.Photon.NetworkSimulationSet get_NetworkSimulationSettings()

Disassembly:
	0x03503308 LDR X30, [X31], #0x20
	0x0350330C RET
	0x03503310 BL 0x1C16F20
	0x03503314 STR X30, [X31 - 0x20]!
	0x03503318 STP X20, X19, [X31 + 0x10]
	0x0350331C MOV X19, X1
	0x03503320 MOV W1, W2

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+200]
	003 Compare X0, 0
	004 JumpIfEqual {9}
	005 Move X1, X31
	006 Move X30, [X31+16]
	007 Call PeerBase.get_NetworkSimulationSettings, X0
	008 Return X0
	009 Call 0x1C17F20

Method: System.Int32 get_MaximumTransferUnit()

Disassembly:
	0x0350343C MOV X2, X31
	0x03503440 BL 0x33DE64C

ISIL:
	001 Move W0, [X0+136]
	002 Return X0

Method: System.Void set_MaximumTransferUnit(System.Int32 value)

Disassembly:
	0x03503444 LDR X8, [X21 + 0xC8]
	0x03503448 CBZ X8, 0x35034B0
	0x0350344C LDRB W8, [X8 + 0x40]
	0x03503450 CBZ W8, 0x35034B0
	0x03503454 LDR X21, [X21 + 0x48]
	0x03503458 CBZ X21, 0x350375C
	0x0350345C ADRP X9, 0xBF8000
	0x03503460 LDR X8, [X21]
	0x03503464 LDR X9, [X9 + 0xBC8]
	0x03503468 ADRP X10, 0xC30000
	0x0350346C LDR X1, [X9]
	0x03503470 LDR X10, [X10 + 0xEE0]
	0x03503474 LDRH W9, [X8 + 0x12E]
	0x03503478 LDR X22, [X10]
	0x0350347C CBZ X9, 0x35034A0
	0x03503480 LDR X10, [X8 + 0xB0]
	0x03503484 ADD X10, X10, 0x8
	0x03503488 LDUR X11, [X10 - 0x8]
	0x0350348C CMP X11, X1
	0x03503490 B.EQ 0x3503684
	0x03503494 SUBS X9, X9, 0x1
	0x03503498 ADD X10, X10, 0x10
	0x0350349C B.NE 0x3503488
	0x035034A0 MOV X0, X21
	0x035034A4 MOV W2, W31
	0x035034A8 BL 0x1C5C788
	0x035034AC B 0x3503690
	0x035034B0 CBNZ X22, 0x35034C4
	0x035034B4 STR X31, [X21 + 0x100]
	0x035034B8 STR X31, [X21 + 0x90]
	0x035034BC STRB W31, [X21 + 0x8D]
	0x035034C0 STRB W31, [X21 + 0x98]
	0x035034C4 MOV X0, X21
	0x035034C8 BL 0x35031E4
	0x035034CC LDR X0, [X21 + 0xC8]
	0x035034D0 CBZ X0, 0x3503750
	0x035034D4 LDR X8, [X0]
	0x035034D8 LDP X9, X1, [X8 + 0x1B8]
	0x035034DC BLR X9
	0x035034E0 LDR X8, [X21 + 0xC8]
	0x035034E4 STRB W31, [X21 + 0x7C]
	0x035034E8 CBZ X8, 0x3503754
	0x035034EC STP X25, X24, [X8 + 0x30]
	0x035034F0 STP X26, X23, [X8 + 0xA8]
	0x035034F4 STR X22, [X8 + 0xA0]
	0x035034F8 STR X31, [X31 + 0x20]
	0x035034FC LDR X0, [X21 + 0x30]
	0x03503500 CBZ X0, 0x3503758
	0x03503504 ADRP X8, 0xC30000

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+32], X30
	003 Move [X31+48], X20
	004 Move [X31+56], X19
	005 Move X8, [X0+200]
	006 Compare X8, 0
	007 JumpIfEqual {20}
	008 Move W8, [X8+64]
	009 Compare W8, 0
	010 JumpIfNotEqual {21}
	011 Move X20, [X31+48]
	012 Move X19, [X31+56]
	013 Move X30, [X31+32]
	014 NotImplemented "Instruction CMP not yet implemented."
	015 Move W8, 576
	016 NotImplemented "Instruction CSEL not yet implemented."
	017 Move [X0+136], W8
	018 Add X31, X31, 64
	019 Return 
	020 Call 0x1C17F20
	021 Call PhotonPeer.get_PeerState, X0
	022 Move W19, W0
	023 Move X0, 0xBF9000
	024 Move X0, [X0+3392]
	025 Call 0x1C17D08
	026 Move TEMP, 0
	027 Not TEMP
	028 Move X8, TEMP
	029 Move [X31+8], X0
	030 Move [X31+16], X8
	031 Add X0, X31, 8
	032 Move X1, X31
	033 Move [X31+24], W19
	034 Call Enum.ToString, X0
	035 Move X19, X0
	036 Move X0, 0xC31000
	037 Move X0, [X0+3696]
	038 Call 0x1C17D08
	039 Move X1, X19
	040 Move X2, X31
	041 Call String.Concat, X0, X1
	042 Move X19, X0
	043 Move X0, 0xBF1000
	044 Move X0, [X0+2000]
	045 Call 0x1C17D08
	046 Call 0x1C17F10
	047 Move X1, X19
	048 Move X2, X31
	049 Move X20, X0
	050 Call Exception..ctor, X0, X1
	051 Move X0, 0xC31000
	052 Move X0, [X0+3704]
	053 Call 0x1C17D08
	054 Move X1, X0
	055 Move X0, X20
	056 Call 0x1C17DEC

Method: System.Boolean get_IsEncryptionAvailable()

Disassembly:
	0x03503508 LDR X8, [X8 + 0xED8]
	0x0350350C LDRB W1, [X21 + 0x84]
	0x03503510 LDR X3, [X8]
	0x03503514 ADD X2, X31, 0x20
	0x03503518 BL 0x29DAEB8
	0x0350351C TBZ X0, 0x0, 0x35035E4
	0x03503520 LDR X26, [X31 + 0x20]

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+200]
	003 Compare X8, 0
	004 JumpIfEqual {8}
	005 Move W0, [X8+221]
	006 Move X30, [X31+16]
	007 Return X0
	008 Call 0x1C17F20

Method: System.Boolean get_IsSendingOnlyAcks()

Disassembly:
	0x03503524 ADRP X8, 0xBF0000
	0x03503528 LDR X29, [X21 + 0xC8]

ISIL:
	001 Move W0, [X0+140]
	002 Return X0

Method: System.Void set_IsSendingOnlyAcks(System.Boolean value)

Disassembly:
	0x0350352C STR X26, [X21 + 0x38]
	0x03503530 LDR X8, [X8 + 0x9D0]
	0x03503534 LDR X0, [X8]

ISIL:
	001 And W8, W1, 1
	002 Move [X0+140], W8
	003 Return 

Method: ExitGames.Client.Photon.TrafficStats get_TrafficStatsIncoming()

Disassembly:
	0x03503538 MOVZ W1, 0x1
	0x0350353C BL 0x1C16D6C

ISIL:
	001 Move X0, [X0+160]
	002 Return X0

Method: System.Void set_TrafficStatsIncoming(ExitGames.Client.Photon.TrafficStats value)

Disassembly:
	0x03503540 MOV X27, X0
	0x03503544 CBZ X0, 0x3503764

ISIL:
	001 Move [X0+160], X1
	002 Return 

Method: ExitGames.Client.Photon.TrafficStats get_TrafficStatsOutgoing()

Disassembly:
	0x03503548 LDR X28, [X21 + 0xC8]
	0x0350354C CBZ X28, 0x3503564

ISIL:
	001 Move X0, [X0+168]
	002 Return X0

Method: System.Void set_TrafficStatsOutgoing(ExitGames.Client.Photon.TrafficStats value)

Disassembly:
	0x03503550 LDR X8, [X27]
	0x03503554 LDR X1, [X8 + 0x40]

ISIL:
	001 Move [X0+168], X1
	002 Return 

Method: ExitGames.Client.Photon.TrafficStatsGameLevel get_TrafficStatsGameLevel()

Disassembly:
	0x03503558 MOV X0, X28
	0x0350355C BL 0x1C16E00

ISIL:
	001 Move X0, [X0+176]
	002 Return X0

Method: System.Void set_TrafficStatsGameLevel(ExitGames.Client.Photon.TrafficStatsGameLevel value)

Disassembly:
	0x03503560 CBZ X0, 0x3503778
	0x03503564 LDR W8, [X27 + 0x18]

ISIL:
	001 Move [X0+176], X1
	002 Return 

Method: System.Int64 get_TrafficStatsElapsedMs()

Disassembly:
	0x03503568 CBZ W8, 0x3503768
	0x0350356C STR X28, [X27 + 0x20]
	0x03503570 MOV X0, X26
	0x03503574 MOV X1, X27
	0x03503578 MOV X2, X31

ISIL:
	001 Move X0, [X0+184]
	002 Compare X0, 0
	003 JumpIfEqual {7}
	004 Move X1, X31
	005 Call Stopwatch.get_ElapsedMilliseconds, X0
	006 Return X0
	007 Return X0

Method: System.Boolean get_TrafficStatsEnabled()

Disassembly:
	0x0350357C BL 0x33A700C
	0x03503580 CBZ X29, 0x3503770

ISIL:
	001 Move W0, [X0+192]
	002 Return X0

Method: System.Void set_TrafficStatsEnabled(System.Boolean value)

Disassembly:
	0x03503584 CBZ X0, 0x35036B0
	0x03503588 ADRP X8, 0xC30000
	0x0350358C LDR X8, [X8 + 0xAF0]
	0x03503590 LDR X9, [X0]
	0x03503594 LDR X1, [X8]
	0x03503598 LDRB W10, [X9 + 0x130]
	0x0350359C LDRB W8, [X1 + 0x130]
	0x035035A0 CMP W10, W8
	0x035035A4 B.CC 0x3503760
	0x035035A8 LDR X10, [X9 + 0xC8]
	0x035035AC SUB X9, X8, 0x1
	0x035035B0 LDR X10, [X10, X9, LSL #3]
	0x035035B4 CMP X10, X1
	0x035035B8 B.NE 0x3503760
	0x035035BC STR X0, [X29 + 0x28]
	0x035035C0 LDR X10, [X0]
	0x035035C4 LDRB W11, [X10 + 0x130]
	0x035035C8 CMP W11, W8
	0x035035CC B.CC 0x35035E0
	0x035035D0 LDR X8, [X10 + 0xC8]
	0x035035D4 LDR X8, [X8, X9, LSL #3]
	0x035035D8 CMP X8, X1
	0x035035DC B.EQ 0x35036B4
	0x035035E0 BL 0x1C171E0

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move W9, [X0+192]
	004 And W8, W1, 1
	005 NotImplemented "Instruction CMP not yet implemented."
	006 Move X30, [X31+16]
	007 Move X19, [X31+24]
	008 Return 
	009 Move X19, X0
	010 Move X0, [X0+184]
	011 Move [X19+192], W8
	012 Move TEMP, X1
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfNotEqual {28}
	016 Compare X0, 0
	017 JumpIfNotEqual {21}
	018 Move X0, X19
	019 Call PhotonPeer.InitializeTrafficStats, X0
	020 Move X0, [X19+184]
	021 Compare X0, 0
	022 JumpIfEqual {35}
	023 Move X1, X31
	024 Move X30, [X31+16]
	025 Move X19, [X31+24]
	026 Call Stopwatch.Start, X0
	027 Return 
	028 Compare X0, 0
	029 JumpIfEqual {6}
	030 Move X1, X31
	031 Move X30, [X31+16]
	032 Move X19, [X31+24]
	033 Call Stopwatch.Stop, X0
	034 Return 
	035 Call 0x1C17F20

Method: System.Void TrafficStatsReset()

Disassembly:
	0x03503718 CBNZ X20, 0x3503740
	0x0350371C MOV W0, W21
	0x03503720 LDP X20, X19, [X31 + 0x80]
	0x03503724 LDP X22, X21, [X31 + 0x70]
	0x03503728 LDP X24, X23, [X31 + 0x60]
	0x0350372C LDP X26, X25, [X31 + 0x50]
	0x03503730 LDP X28, X27, [X31 + 0x40]
	0x03503734 LDP X29, X30, [X31 + 0x30]
	0x03503738 ADD X31, X31, 0x90
	0x0350373C RET
	0x03503740 MOV X0, X20
	0x03503744 BL 0x1C16F18
	0x03503748 MOV X0, X21
	0x0350374C BL 0x1C16F18
	0x03503750 BL 0x1C16F20

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move W8, [X0+192]
	004 Move X19, X0
	005 Compare W8, 0
	006 JumpIfEqual {13}
	007 Move X0, [X19+184]
	008 Move [X19+192], W31
	009 Compare X0, 0
	010 JumpIfEqual {13}
	011 Move X1, X31
	012 Call Stopwatch.Stop, X0
	013 Move X0, X19
	014 Call PhotonPeer.InitializeTrafficStats, X0
	015 Move W1, 1
	016 Move X0, X19
	017 Move X30, [X31+16]
	018 Move X19, [X31+24]
	019 Call PhotonPeer.set_TrafficStatsEnabled, X0, X1
	020 Return 

Method: System.Void InitializeTrafficStats()

Disassembly:
	0x035035E4 ADRP X8, 0xBF8000
	0x035035E8 LDR X8, [X8 + 0xDF8]
	0x035035EC LDR X22, [X21 + 0xC8]
	0x035035F0 LDRB W9, [X21 + 0x84]
	0x035035F4 MOVN X10, 0x0
	0x035035F8 LDR X8, [X8]
	0x035035FC STRB W9, [X31 + 0x18]
	0x03503600 STP X8, X10, [X31 + 0x8]
	0x03503604 ADD X0, X31, 0x8
	0x03503608 MOV X1, X31
	0x0350360C BL 0x33B162C
	0x03503610 ADRP X8, 0xBF8000
	0x03503614 LDR X8, [X8 + 0xE60]
	0x03503618 MOV X23, X0
	0x0350361C LDR X21, [X21 + 0x30]
	0x03503620 LDR X0, [X8]
	0x03503624 LDR W8, [X0 + 0xE0]
	0x03503628 CBNZ W8, 0x3503630
	0x0350362C BL 0x1C16DFC
	0x03503630 MOV X0, X21
	0x03503634 MOV W1, W31
	0x03503638 MOV X2, X31
	0x0350363C BL 0x35201B0
	0x03503640 ADRP X8, 0xC30000
	0x03503644 LDR X8, [X8 + 0xEE8]
	0x03503648 ADRP X9, 0xBF4000
	0x0350364C LDR X9, [X9 + 0x928]
	0x03503650 MOV X3, X0
	0x03503654 LDR X0, [X8]
	0x03503658 LDR X2, [X9]
	0x0350365C MOV X1, X23
	0x03503660 MOV X4, X31
	0x03503664 BL 0x32277C4
	0x03503668 CBZ X22, 0x350376C
	0x0350366C MOV X2, X0
	0x03503670 MOVZ W1, 0x1
	0x03503674 MOV X0, X22
	0x03503678 MOV X3, X31
	0x0350367C BL 0x34F116C
	0x03503680 B 0x35036A4
	0x03503684 LDRSW X9, [X10]
	0x03503688 ADD X8, X8, X9, 0x4, LSL
	0x0350368C ADD X0, X8, 0x138
	0x03503690 LDP X8, X3, [X0]
	0x03503694 MOVZ W1, 0x2
	0x03503698 MOV X0, X21
	0x0350369C MOV X2, X22
	0x035036A0 BLR X8
	0x035036A4 MOV X21, X31
	0x035036A8 MOV W24, W31
	0x035036AC B 0x35036E0
	0x035036B0 STR X31, [X29 + 0x28]
	0x035036B4 LDR X0, [X21 + 0xC8]
	0x035036B8 CBZ X0, 0x3503774
	0x035036BC LDR X8, [X0]
	0x035036C0 LDP X9, X5, [X8 + 0x1C8]
	0x035036C4 MOV X1, X25
	0x035036C8 MOV X2, X24
	0x035036CC MOV X3, X23
	0x035036D0 MOV X4, X22
	0x035036D4 BLR X9
	0x035036D8 MOV X21, X31
	0x035036DC AND W24, W0, 0x1
	0x035036E0 LDRB W8, [X31 + 0x28]
	0x035036E4 CBZ W8, 0x35036F4
	0x035036E8 MOV X0, X20
	0x035036EC MOV X1, X31
	0x035036F0 BL 0x33E14E4
	0x035036F4 CBNZ X21, 0x3503748
	0x035036F8 CMP W24, 0x0
	0x035036FC MOV X20, X31
	0x03503700 CSET W21, NE
	0x03503704 LDRB W8, [X31 + 0x2C]
	0x03503708 CBZ W8, 0x3503718
	0x0350370C MOV X0, X19
	0x03503710 MOV X1, X31
	0x03503714 BL 0x33E14E4

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0xEDD000
	007 Move W8, [X20+2712]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {24}
	013 Move X0, 0xBF9000
	014 Move X0, [X0+1800]
	015 Call 0x1C17CF4
	016 Move X0, 0xC31000
	017 Move X0, [X0+3712]
	018 Call 0x1C17CF4
	019 Move X0, 0xC31000
	020 Move X0, [X0+3720]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X20+2712], W8
	024 Move X0, [X19+184]
	025 Compare X0, 0
	026 JumpIfEqual {29}
	027 Move X1, X31
	028 Call Stopwatch.Reset, X0
	029 Move X8, 0xBF9000
	030 Move X8, [X8+1800]
	031 Move X0, [X8]
	032 Call 0x1C17F10
	033 Move X1, X31
	034 Move X20, X0
	035 Call Stopwatch..ctor, X0
	036 Move [X19+184], X20
	037 Move X8, [X19+200]
	038 Compare X8, 0
	039 JumpIfEqual {91}
	040 Move X22, 0xC31000
	041 Move X22, [X22+3720]
	042 Move W20, [X8+280]
	043 Move X0, [X22]
	044 Call 0x1C17F10
	045 Move W1, W20
	046 Move X2, X31
	047 Move X21, X0
	048 Call TrafficStats..ctor, X0, X1
	049 Move X8, [X19+200]
	050 Move [X19+160], X21
	051 Compare X8, 0
	052 JumpIfEqual {91}
	053 Move X0, [X22]
	054 Move X22, 0xC31000
	055 Move W20, [X8+280]
	056 Move X22, [X22+3712]
	057 Call 0x1C17F10
	058 Move W1, W20
	059 Move X2, X31
	060 Move X21, X0
	061 Call TrafficStats..ctor, X0, X1
	062 Move [X19+168], X21
	063 Move X0, [X22]
	064 Move X20, [X19+184]
	065 Call 0x1C17F10
	066 Move X1, X20
	067 Move X2, X31
	068 Move X21, X0
	069 Call TrafficStatsGameLevel..ctor, X0, X1
	070 Move W8, [X19+192]
	071 Move [X19+176], X21
	072 Compare W8, 0
	073 JumpIfEqual {85}
	074 Move X0, [X19+184]
	075 Compare X0, 0
	076 JumpIfEqual {91}
	077 Move X20, [X31+32]
	078 Move X19, [X31+40]
	079 Move X22, [X31+16]
	080 Move X21, [X31+24]
	081 Move X1, X31
	082 Move X30, [X31+48]
	083 Call Stopwatch.Start, X0
	084 Return 
	085 Move X20, [X31+32]
	086 Move X19, [X31+40]
	087 Move X22, [X31+16]
	088 Move X21, [X31+24]
	089 Move X30, [X31+48]
	090 Return 
	091 Call 0x1C17F20

Method: System.String VitalStatsToString(System.Boolean all)

Disassembly:
	0x03503754 BL 0x1C16F20
	0x03503758 BL 0x1C16F20
	0x0350375C BL 0x1C16F20
	0x03503760 BL 0x1C171E0
	0x03503764 BL 0x1C16F20
	0x03503768 BL 0x1C16F28
	0x0350376C BL 0x1C16F20
	0x03503770 BL 0x1C16F20
	0x03503774 BL 0x1C16F20
	0x03503778 BL 0x1C16F44
	0x0350377C MOV X1, X31
	0x03503780 BL 0x1C16DEC
	0x03503784 B 0x3503A1C
	0x03503788 B 0x3503A1C
	0x0350378C B 0x3503A1C
	0x03503790 B 0x3503A1C
	0x03503794 B 0x3503A1C
	0x03503798 B 0x35037CC
	0x0350379C B 0x3503A1C
	0x035037A0 B 0x3503A1C
	0x035037A4 B 0x3503A1C
	0x035037A8 B 0x3503A1C
	0x035037AC B 0x35037CC
	0x035037B0 B 0x3503A1C
	0x035037B4 MOV X23, X1
	0x035037B8 MOV X22, X0
	0x035037BC MOV W21, W31
	0x035037C0 B 0x3503A88
	0x035037C4 B 0x3503A1C
	0x035037C8 B 0x3503A1C
	0x035037CC MOV X23, X1
	0x035037D0 MOV X22, X0
	0x035037D4 CMP W23, 0x1
	0x035037D8 B.NE 0x3503A24
	0x035037DC MOV X0, X22
	0x035037E0 BL 0x3EB1AD0
	0x035037E4 MOV X22, X0
	0x035037E8 ADRP X0, 0xBF0000
	0x035037EC LDR X0, [X0 + 0x7D0]
	0x035037F0 BL 0x1C16D08
	0x035037F4 LDR X8, [X22]
	0x035037F8 LDR X1, [X8]
	0x035037FC BL 0x1C17270
	0x03503800 TBZ X0, 0x0, 0x35039A0
	0x03503804 LDR X24, [X22]
	0x03503808 BL 0x3EB1AE0
	0x0350380C LDR X22, [X21 + 0x48]
	0x03503810 ADRP X0, 0xBF0000
	0x03503814 LDR X0, [X0 + 0xAC8]
	0x03503818 BL 0x1C16D08
	0x0350381C MOVZ W1, 0x6
	0x03503820 BL 0x1C16D6C
	0x03503824 MOV X23, X0
	0x03503828 CBZ X0, 0x35039C0
	0x0350382C ADRP X0, 0xC30000
	0x03503830 LDR X0, [X0 + 0xEF0]
	0x03503834 BL 0x1C16D08
	0x03503838 LDR W8, [X23 + 0x18]
	0x0350383C CBZ W8, 0x35039C4
	0x03503840 STR X0, [X23 + 0x20]
	0x03503844 LDRB W25, [X21 + 0x84]
	0x03503848 ADRP X0, 0xBF8000
	0x0350384C LDR X0, [X0 + 0xDF8]
	0x03503850 BL 0x1C16D08
	0x03503854 MOVN X8, 0x0
	0x03503858 STP X0, X8, [X31 + 0x8]
	0x0350385C STRB W25, [X31 + 0x18]
	0x03503860 ADD X0, X31, 0x8
	0x03503864 MOV X1, X31
	0x03503868 BL 0x33B162C
	0x0350386C LDR W8, [X23 + 0x18]
	0x03503870 CMP W8, 0x1
	0x03503874 B.LS 0x35039C8
	0x03503878 STR X0, [X23 + 0x28]
	0x0350387C ADRP X0, 0xC30000
	0x03503880 LDR X0, [X0 + 0xEF8]
	0x03503884 BL 0x1C16D08
	0x03503888 LDR W8, [X23 + 0x18]
	0x0350388C CMP W8, 0x2
	0x03503890 B.LS 0x35039CC
	0x03503894 STR X0, [X23 + 0x30]
	0x03503898 LDR X21, [X21 + 0x30]
	0x0350389C ADRP X0, 0xBF8000
	0x035038A0 LDR X0, [X0 + 0xE60]
	0x035038A4 BL 0x1C16D08
	0x035038A8 LDR W8, [X0 + 0xE0]
	0x035038AC CBNZ W8, 0x35038B4
	0x035038B0 BL 0x1C16DFC
	0x035038B4 MOV X0, X21
	0x035038B8 MOV W1, W31
	0x035038BC MOV X2, X31
	0x035038C0 BL 0x35201B0
	0x035038C4 LDR W8, [X23 + 0x18]
	0x035038C8 CMP W8, 0x3
	0x035038CC B.LS 0x35039D0
	0x035038D0 STR X0, [X23 + 0x38]
	0x035038D4 ADRP X0, 0xC30000
	0x035038D8 LDR X0, [X0 + 0xF00]
	0x035038DC BL 0x1C16D08
	0x035038E0 LDR W8, [X23 + 0x18]
	0x035038E4 CMP W8, 0x4
	0x035038E8 B.LS 0x35039D4
	0x035038EC STR X0, [X23 + 0x40]
	0x035038F0 CBZ X24, 0x350390C
	0x035038F4 LDR X8, [X24]
	0x035038F8 LDP X9, X1, [X8 + 0x168]
	0x035038FC MOV X0, X24
	0x03503900 BLR X9
	0x03503904 LDR W8, [X23 + 0x18]
	0x03503908 B 0x3503910
	0x0350390C MOV X0, X31
	0x03503910 CMP W8, 0x5
	0x03503914 B.LS 0x35039D8
	0x03503918 STR X0, [X23 + 0x48]
	0x0350391C MOV X0, X23
	0x03503920 MOV X1, X31
	0x03503924 BL 0x32278CC
	0x03503928 CBZ X22, 0x35039DC
	0x0350392C MOV X21, X0
	0x03503930 ADRP X0, 0xBF8000
	0x03503934 LDR X0, [X0 + 0xBC8]
	0x03503938 BL 0x1C16D08
	0x0350393C MOV X1, X0
	0x03503940 LDR X8, [X22]
	0x03503944 LDRH W9, [X8 + 0x12E]
	0x03503948 CBZ X9, 0x350396C
	0x0350394C LDR X10, [X8 + 0xB0]
	0x03503950 ADD X10, X10, 0x8
	0x03503954 LDUR X11, [X10 - 0x8]
	0x03503958 CMP X11, X1
	0x0350395C B.EQ 0x350397C
	0x03503960 SUBS X9, X9, 0x1
	0x03503964 ADD X10, X10, 0x10
	0x03503968 B.NE 0x3503954
	0x0350396C MOV X0, X22
	0x03503970 MOV W2, W31
	0x03503974 BL 0x1C5C788
	0x03503978 B 0x3503988
	0x0350397C LDRSW X9, [X10]
	0x03503980 ADD X8, X8, X9, 0x4, LSL
	0x03503984 ADD X0, X8, 0x138
	0x03503988 LDP X8, X3, [X0]
	0x0350398C MOVZ W1, 0x1
	0x03503990 MOV X0, X22
	0x03503994 MOV X2, X21
	0x03503998 BLR X8
	0x0350399C B 0x35036A4
	0x035039A0 MOVZ W0, 0x8
	0x035039A4 BL 0x3EB1AF0
	0x035039A8 LDR X8, [X22]
	0x035039AC STR X8, [X0]
	0x035039B0 ADRP X1, 0x9B1000
	0x035039B4 ADD X1, X1, 0xE58
	0x035039B8 MOV X2, X31
	0x035039BC BL 0x3EB1B00
	0x035039C0 BL 0x1C16F20
	0x035039C4 BL 0x1C16F28
	0x035039C8 BL 0x1C16F28
	0x035039CC BL 0x1C16F28
	0x035039D0 BL 0x1C16F28
	0x035039D4 BL 0x1C16F28
	0x035039D8 BL 0x1C16F28
	0x035039DC BL 0x1C16F20
	0x035039E0 B 0x3503A1C
	0x035039E4 B 0x3503A1C
	0x035039E8 B 0x3503A1C
	0x035039EC B 0x3503A1C
	0x035039F0 B 0x3503A1C
	0x035039F4 B 0x3503A1C
	0x035039F8 B 0x3503A1C
	0x035039FC B 0x3503A1C
	0x03503A00 B 0x3503A1C
	0x03503A04 B 0x3503A1C
	0x03503A08 MOV X23, X1
	0x03503A0C MOV X22, X0
	0x03503A10 BL 0x3EB1AE0
	0x03503A14 B 0x3503A24
	0x03503A18 B 0x3503A1C
	0x03503A1C MOV X23, X1
	0x03503A20 MOV X22, X0
	0x03503A24 CMP W23, 0x1
	0x03503A28 B.NE 0x3503A40
	0x03503A2C MOV X0, X22
	0x03503A30 BL 0x3EB1AD0
	0x03503A34 LDR X21, [X0]
	0x03503A38 BL 0x3EB1AE0
	0x03503A3C B 0x35036A8
	0x03503A40 MOV X21, X31
	0x03503A44 LDRB W8, [X31 + 0x28]
	0x03503A48 CBZ W8, 0x3503A58
	0x03503A4C MOV X0, X20
	0x03503A50 MOV X1, X31
	0x03503A54 BL 0x33E14E4
	0x03503A58 CBNZ X21, 0x3503A64
	0x03503A5C MOV W24, W31
	0x03503A60 B 0x3503A80
	0x03503A64 MOV X0, X21
	0x03503A68 BL 0x1C16F18
	0x03503A6C MOV X23, X1
	0x03503A70 MOV X22, X0
	0x03503A74 B 0x3503A44
	0x03503A78 MOV X23, X1
	0x03503A7C MOV X22, X0
	0x03503A80 CMP W24, 0x0
	0x03503A84 CSET W21, NE
	0x03503A88 CMP W23, 0x1
	0x03503A8C B.NE 0x3503AA4
	0x03503A90 MOV X0, X22
	0x03503A94 BL 0x3EB1AD0
	0x03503A98 LDR X20, [X0]
	0x03503A9C BL 0x3EB1AE0
	0x03503AA0 B 0x3503704
	0x03503AA4 MOV X20, X31
	0x03503AA8 B 0x3503AB0
	0x03503AAC MOV X22, X0
	0x03503AB0 LDRB W8, [X31 + 0x2C]
	0x03503AB4 CBZ W8, 0x3503AC4
	0x03503AB8 MOV X0, X19
	0x03503ABC MOV X1, X31
	0x03503AC0 BL 0x33E14E4
	0x03503AC4 CBNZ X20, 0x3503AD0
	0x03503AC8 MOV X0, X22
	0x03503ACC BL 0x1D2C690
	0x03503AD0 MOV X0, X20
	0x03503AD4 BL 0x1C16F18
	0x03503AD8 BL 0x1990590
	0x03503ADC SUB X31, X31, 0x40
	0x03503AE0 STR X30, [X31 + 0x10]
	0x03503AE4 STP X22, X21, [X31 + 0x20]
	0x03503AE8 STP X20, X19, [X31 + 0x30]
	0x03503AEC STRB W31, [X31 + 0x18]
	0x03503AF0 LDR X19, [X0 + 0xD8]
	0x03503AF4 MOV X21, X0
	0x03503AF8 STRB W31, [X31 + 0x1C]
	0x03503AFC ADD X1, X31, 0x1C
	0x03503B00 MOV X0, X19
	0x03503B04 MOV X2, X31
	0x03503B08 BL 0x33DE64C
	0x03503B0C LDR X20, [X21 + 0xD0]
	0x03503B10 STRB W31, [X31 + 0x18]
	0x03503B14 ADD X1, X31, 0x18
	0x03503B18 MOV X0, X20
	0x03503B1C MOV X2, X31
	0x03503B20 BL 0x33DE64C
	0x03503B24 LDR X0, [X21 + 0xC8]
	0x03503B28 CBZ X0, 0x3503B8C
	0x03503B2C LDR X8, [X0]
	0x03503B30 LDP X9, X1, [X8 + 0x1E8]
	0x03503B34 BLR X9
	0x03503B38 MOV X21, X31
	0x03503B3C LDRB W8, [X31 + 0x18]
	0x03503B40 CBZ W8, 0x3503B50
	0x03503B44 MOV X0, X20
	0x03503B48 MOV X1, X31
	0x03503B4C BL 0x33E14E4
	0x03503B50 CBNZ X21, 0x3503B90
	0x03503B54 MOV X20, X31
	0x03503B58 LDRB W8, [X31 + 0x1C]
	0x03503B5C CBZ W8, 0x3503B6C
	0x03503B60 MOV X0, X19
	0x03503B64 MOV X1, X31
	0x03503B68 BL 0x33E14E4
	0x03503B6C CBNZ X20, 0x3503B84
	0x03503B70 LDP X20, X19, [X31 + 0x30]
	0x03503B74 LDP X22, X21, [X31 + 0x20]
	0x03503B78 LDR X30, [X31 + 0x10]
	0x03503B7C ADD X31, X31, 0x40
	0x03503B80 RET
	0x03503B84 MOV X0, X20
	0x03503B88 BL 0x1C16F18
	0x03503B8C BL 0x1C16F20
	0x03503B90 MOV X0, X21
	0x03503B94 BL 0x1C16F18
	0x03503B98 B 0x3503BAC
	0x03503B9C B 0x3503BA0
	0x03503BA0 MOV X22, X1
	0x03503BA4 MOV X21, X0
	0x03503BA8 B 0x3503BF8
	0x03503BAC MOV X22, X1
	0x03503BB0 MOV X21, X0
	0x03503BB4 CMP W22, 0x1
	0x03503BB8 B.NE 0x3503BD8
	0x03503BBC MOV X0, X21
	0x03503BC0 BL 0x3EB1AD0
	0x03503BC4 LDR X8, [X0]
	0x03503BC8 STR X8, [X31 + 0x8]
	0x03503BCC BL 0x3EB1AE0
	0x03503BD0 LDR X21, [X31 + 0x8]
	0x03503BD4 B 0x3503B3C
	0x03503BD8 STR X31, [X31 + 0x8]
	0x03503BDC LDRB W8, [X31 + 0x18]
	0x03503BE0 CBZ W8, 0x3503BF0
	0x03503BE4 MOV X0, X20
	0x03503BE8 MOV X1, X31
	0x03503BEC BL 0x33E14E4
	0x03503BF0 LDR X8, [X31 + 0x8]
	0x03503BF4 CBNZ X8, 0x3503C1C
	0x03503BF8 CMP W22, 0x1
	0x03503BFC B.NE 0x3503C14
	0x03503C00 MOV X0, X21
	0x03503C04 BL 0x3EB1AD0
	0x03503C08 LDR X20, [X0]
	0x03503C0C BL 0x3EB1AE0
	0x03503C10 B 0x3503B58
	0x03503C14 MOV X20, X31
	0x03503C18 B 0x3503C34
	0x03503C1C LDR X0, [X31 + 0x8]
	0x03503C20 BL 0x1C16F18
	0x03503C24 MOV X22, X1
	0x03503C28 MOV X21, X0
	0x03503C2C B 0x3503BDC
	0x03503C30 MOV X21, X0
	0x03503C34 LDRB W8, [X31 + 0x1C]
	0x03503C38 CBZ W8, 0x3503C48
	0x03503C3C MOV X0, X19
	0x03503C40 MOV X1, X31
	0x03503C44 BL 0x33E14E4
	0x03503C48 CBNZ X20, 0x3503C54
	0x03503C4C MOV X0, X21
	0x03503C50 BL 0x1D2C690
	0x03503C54 MOV X0, X20
	0x03503C58 BL 0x1C16F18
	0x03503C5C BL 0x1990590
	0x03503C60 LDR X8, [X0 + 0x50]
	0x03503C64 CBZ X8, 0x3503C78
	0x03503C68 LDR X3, [X8 + 0x18]
	0x03503C6C LDR X0, [X8 + 0x40]
	0x03503C70 LDR X2, [X8 + 0x28]
	0x03503C74 BR X3

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+32], X30
	003 Move [X31+40], X23
	004 Move [X31+48], X22
	005 Move [X31+56], X21
	006 Move [X31+64], X20
	007 Move [X31+72], X19
	008 Move X20, 0xEDD000
	009 Move W8, [X20+2713]
	010 Move W21, W1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {36}
	016 Move X0, 0xBF1000
	017 Move X0, [X0+1880]
	018 Call 0x1C17CF4
	019 Move X0, 0xBF3000
	020 Move X0, [X0+2656]
	021 Call 0x1C17CF4
	022 Move X0, 0xBF1000
	023 Move X0, [X0+2512]
	024 Call 0x1C17CF4
	025 Move X0, 0xC31000
	026 Move X0, [X0+3728]
	027 Call 0x1C17CF4
	028 Move X0, 0xC31000
	029 Move X0, [X0+3736]
	030 Call 0x1C17CF4
	031 Move X0, 0xBF1000
	032 Move X0, [X0+2440]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X20+2713], W8
	036 Move X22, 0xBF1000
	037 Move X0, [X19+176]
	038 Move X22, [X22+2512]
	039 Compare X0, 0
	040 JumpIfEqual {44}
	041 Move X1, X31
	042 Call TrafficStatsGameLevel.ToStringVitalStats, X0
	043 Move X20, X0
	044 Move X8, 0xBF1000
	045 Move X8, [X8+2440]
	046 Move X20, [X8]
	047 Move X0, [X22]
	048 Move TEMP, X21
	049 And TEMP, TEMP, 1
	050 Compare TEMP, 1
	051 JumpIfNotEqual {174}
	052 Move W1, 8
	053 Call 0x1C17D6C
	054 Move X8, [X19+200]
	055 Compare X8, 0
	056 JumpIfEqual {367}
	057 Move X23, 0xBF1000
	058 Move W8, [X8+116]
	059 Move X23, [X23+1880]
	060 Move X21, X0
	061 Add X1, X31, 28
	062 Move [X31+28], W8
	063 Move X0, [X23]
	064 Call 0x1C17E04
	065 Compare X21, 0
	066 JumpIfEqual {367}
	067 Move X22, X0
	068 Compare X0, 0
	069 JumpIfEqual {76}
	070 Move X8, [X21]
	071 Move X0, X22
	072 Move X1, [X8+64]
	073 Call 0x1C17E00
	074 Compare X0, 0
	075 JumpIfEqual {368}
	076 Move W8, [X21+24]
	077 Compare W8, 0
	078 JumpIfEqual {366}
	079 Move [X21+32], X22
	080 Move X8, [X19+200]
	081 Compare X8, 0
	082 JumpIfEqual {367}
	083 Move W8, [X8+120]
	084 Move X0, [X23]
	085 Add X1, X31, 24
	086 Move [X31+24], W8
	087 Call 0x1C17E04
	088 Move X22, X0
	089 Compare X0, 0
	090 JumpIfEqual {97}
	091 Move X8, [X21]
	092 Move X0, X22
	093 Move X1, [X8+64]
	094 Call 0x1C17E00
	095 Compare X0, 0
	096 JumpIfEqual {368}
	097 Move W8, [X21+24]
	098 NotImplemented "Instruction CMP not yet implemented."
	099 Move [X21+40], X22
	100 Move X0, [X19+200]
	101 Compare X0, 0
	102 JumpIfEqual {367}
	103 Move X1, X31
	104 Call PeerBase.get_timeInt, X0
	105 Move X8, [X19+200]
	106 Compare X8, 0
	107 JumpIfEqual {367}
	108 Move W9, [X8+136]
	109 Move X8, [X23]
	110 Add X1, X31, 20
	111 Subtract W9, W0, W9
	112 Move X0, X8
	113 Move [X31+20], W9
	114 Call 0x1C17E04
	115 Move X22, X0
	116 Compare X0, 0
	117 JumpIfEqual {124}
	118 Move X8, [X21]
	119 Move X0, X22
	120 Move X1, [X8+64]
	121 Call 0x1C17E00
	122 Compare X0, 0
	123 JumpIfEqual {368}
	124 Move W8, [X21+24]
	125 NotImplemented "Instruction CMP not yet implemented."
	126 Move [X21+48], X22
	127 Compare X20, 0
	128 JumpIfEqual {136}
	129 Move X8, [X21]
	130 Move X0, X20
	131 Move X1, [X8+64]
	132 Call 0x1C17E00
	133 Compare X0, 0
	134 JumpIfEqual {368}
	135 Move W8, [X21+24]
	136 NotImplemented "Instruction CMP not yet implemented."
	137 Move [X21+56], X20
	138 Move X20, [X19+160]
	139 Compare X20, 0
	140 JumpIfEqual {148}
	141 Move X8, [X21]
	142 Move X0, X20
	143 Move X1, [X8+64]
	144 Call 0x1C17E00
	145 Compare X0, 0
	146 JumpIfEqual {368}
	147 Move W8, [X21+24]
	148 NotImplemented "Instruction CMP not yet implemented."
	149 Move [X21+64], X20
	150 Move X20, [X19+168]
	151 Compare X20, 0
	152 JumpIfEqual {160}
	153 Move X8, [X21]
	154 Move X0, X20
	155 Move X1, [X8+64]
	156 Call 0x1C17E00
	157 Compare X0, 0
	158 JumpIfEqual {368}
	159 Move W8, [X21+24]
	160 NotImplemented "Instruction CMP not yet implemented."
	161 Move [X21+72], X20
	162 Move X0, [X19+184]
	163 Compare X0, 0
	164 JumpIfEqual {313}
	165 Move X1, X31
	166 Call Stopwatch.get_ElapsedMilliseconds, X0
	167 Move X8, 0xF7CF
	168 NotImplemented "Instruction MOVK not yet implemented."
	169 NotImplemented "Instruction MOVK not yet implemented."
	170 NotImplemented "Instruction MOVK not yet implemented."
	171 NotImplemented "Instruction SMULH not yet implemented."
	172 NotImplemented "Instruction SBFM not yet implemented."
	173 Add X8, X9, X8
	174 Move W1, 6
	175 Call 0x1C17D6C
	176 Move X8, [X19+200]
	177 Compare X8, 0
	178 JumpIfEqual {367}
	179 Move X23, 0xBF1000
	180 Move W8, [X8+116]
	181 Move X23, [X23+1880]
	182 Move X21, X0
	183 Add X1, X31, 28
	184 Move [X31+28], W8
	185 Move X0, [X23]
	186 Call 0x1C17E04
	187 Compare X21, 0
	188 JumpIfEqual {367}
	189 Move X22, X0
	190 Compare X0, 0
	191 JumpIfEqual {198}
	192 Move X8, [X21]
	193 Move X0, X22
	194 Move X1, [X8+64]
	195 Call 0x1C17E00
	196 Compare X0, 0
	197 JumpIfEqual {368}
	198 Move W8, [X21+24]
	199 Compare W8, 0
	200 JumpIfEqual {366}
	201 Move [X21+32], X22
	202 Move X8, [X19+200]
	203 Compare X8, 0
	204 JumpIfEqual {367}
	205 Move W8, [X8+120]
	206 Move X0, [X23]
	207 Add X1, X31, 24
	208 Move [X31+24], W8
	209 Call 0x1C17E04
	210 Move X22, X0
	211 Compare X0, 0
	212 JumpIfEqual {219}
	213 Move X8, [X21]
	214 Move X0, X22
	215 Move X1, [X8+64]
	216 Call 0x1C17E00
	217 Compare X0, 0
	218 JumpIfEqual {368}
	219 Move W8, [X21+24]
	220 NotImplemented "Instruction CMP not yet implemented."
	221 Move [X21+40], X22
	222 Move X0, [X19+200]
	223 Compare X0, 0
	224 JumpIfEqual {367}
	225 Move X1, X31
	226 Call PeerBase.get_timeInt, X0
	227 Move X8, [X19+200]
	228 Compare X8, 0
	229 JumpIfEqual {367}
	230 Move W9, [X8+136]
	231 Move X8, [X23]
	232 Add X1, X31, 20
	233 Subtract W9, W0, W9
	234 Move X0, X8
	235 Move [X31+20], W9
	236 Call 0x1C17E04
	237 Move X22, X0
	238 Compare X0, 0
	239 JumpIfEqual {246}
	240 Move X8, [X21]
	241 Move X0, X22
	242 Move X1, [X8+64]
	243 Call 0x1C17E00
	244 Compare X0, 0
	245 JumpIfEqual {368}
	246 Move W8, [X21+24]
	247 NotImplemented "Instruction CMP not yet implemented."
	248 Move [X21+48], X22
	249 Compare X20, 0
	250 JumpIfEqual {258}
	251 Move X8, [X21]
	252 Move X0, X20
	253 Move X1, [X8+64]
	254 Call 0x1C17E00
	255 Compare X0, 0
	256 JumpIfEqual {368}
	257 Move W8, [X21+24]
	258 NotImplemented "Instruction CMP not yet implemented."
	259 Move [X21+56], X20
	260 Move X0, [X19+184]
	261 Compare X0, 0
	262 JumpIfEqual {272}
	263 Move X1, X31
	264 Call Stopwatch.get_ElapsedMilliseconds, X0
	265 Move X8, 0xF7CF
	266 NotImplemented "Instruction MOVK not yet implemented."
	267 NotImplemented "Instruction MOVK not yet implemented."
	268 NotImplemented "Instruction MOVK not yet implemented."
	269 NotImplemented "Instruction SMULH not yet implemented."
	270 NotImplemented "Instruction SBFM not yet implemented."
	271 Add X8, X9, X8
	272 Move X8, X31
	273 Move X9, 0xBF3000
	274 Move X9, [X9+2656]
	275 Add X1, X31, 8
	276 Move [X31+8], X8
	277 Move X0, [X9]
	278 Call 0x1C17E04
	279 Move X20, X0
	280 Compare X0, 0
	281 JumpIfEqual {288}
	282 Move X8, [X21]
	283 Move X0, X20
	284 Move X1, [X8+64]
	285 Call 0x1C17E00
	286 Compare X0, 0
	287 JumpIfEqual {368}
	288 Move W8, [X21+24]
	289 NotImplemented "Instruction CMP not yet implemented."
	290 Move [X21+64], X20
	291 Move X8, [X19+200]
	292 Compare X8, 0
	293 JumpIfEqual {367}
	294 Move W8, [X8+208]
	295 Move X0, [X23]
	296 Add X1, X31, 4
	297 Move [X31+4], W8
	298 Call 0x1C17E04
	299 Move X19, X0
	300 Compare X0, 0
	301 JumpIfEqual {308}
	302 Move X8, [X21]
	303 Move X0, X19
	304 Move X1, [X8+64]
	305 Call 0x1C17E00
	306 Compare X0, 0
	307 JumpIfEqual {368}
	308 Move W8, [X21+24]
	309 NotImplemented "Instruction CMP not yet implemented."
	310 Move [X21+72], X19
	311 Move X8, 0xC31000
	312 Move X8, [X8+3736]
	313 Move X8, X31
	314 Move X9, 0xBF3000
	315 Move X9, [X9+2656]
	316 Add X1, X31, 8
	317 Move [X31+8], X8
	318 Move X0, [X9]
	319 Call 0x1C17E04
	320 Move X20, X0
	321 Compare X0, 0
	322 JumpIfEqual {329}
	323 Move X8, [X21]
	324 Move X0, X20
	325 Move X1, [X8+64]
	326 Call 0x1C17E00
	327 Compare X0, 0
	328 JumpIfEqual {368}
	329 Move W8, [X21+24]
	330 NotImplemented "Instruction CMP not yet implemented."
	331 Move [X21+80], X20
	332 Move X8, [X19+200]
	333 Compare X8, 0
	334 JumpIfEqual {367}
	335 Move W8, [X8+208]
	336 Move X0, [X23]
	337 Add X1, X31, 4
	338 Move [X31+4], W8
	339 Call 0x1C17E04
	340 Move X19, X0
	341 Compare X0, 0
	342 JumpIfEqual {349}
	343 Move X8, [X21]
	344 Move X0, X19
	345 Move X1, [X8+64]
	346 Call 0x1C17E00
	347 Compare X0, 0
	348 JumpIfEqual {368}
	349 Move W8, [X21+24]
	350 NotImplemented "Instruction CMP not yet implemented."
	351 Move [X21+88], X19
	352 Move X8, 0xC31000
	353 Move X8, [X8+3728]
	354 Move X0, [X8]
	355 Move X1, X21
	356 Move X2, X31
	357 Call String.Format, X0, X1
	358 Move X20, [X31+64]
	359 Move X19, [X31+72]
	360 Move X22, [X31+48]
	361 Move X21, [X31+56]
	362 Move X30, [X31+32]
	363 Move X23, [X31+40]
	364 Add X31, X31, 80
	365 Return X0
	366 Call 0x1C17F28
	367 Call 0x1C17F20
	368 Call 0x1C17F44
	369 Move X1, X31
	370 Call 0x1C17DEC

Method: System.Type get_PayloadEncryptorType()

Disassembly:
	0x03503C78 RET
	0x03503C7C SUB X31, X31, 0x40

ISIL:
	001 Move X0, [X0+232]
	002 Return X0

Method: System.Void set_PayloadEncryptorType(System.Type value)

Disassembly:
	0x03503C80 STR X30, [X31 + 0x10]
	0x03503C84 STP X22, X21, [X31 + 0x20]
	0x03503C88 STP X20, X19, [X31 + 0x30]
	0x03503C8C STRB W31, [X31 + 0x18]
	0x03503C90 LDR X19, [X0 + 0xD8]
	0x03503C94 MOV X21, X0
	0x03503C98 STRB W31, [X31 + 0x1C]
	0x03503C9C ADD X1, X31, 0x1C
	0x03503CA0 MOV X0, X19
	0x03503CA4 MOV X2, X31
	0x03503CA8 BL 0x33DE64C
	0x03503CAC LDR X20, [X21 + 0xD0]
	0x03503CB0 STRB W31, [X31 + 0x18]
	0x03503CB4 ADD X1, X31, 0x18
	0x03503CB8 MOV X0, X20
	0x03503CBC MOV X2, X31
	0x03503CC0 BL 0x33DE64C
	0x03503CC4 LDR X0, [X21 + 0xC8]
	0x03503CC8 CBZ X0, 0x3503D2C
	0x03503CCC LDR X8, [X0]
	0x03503CD0 LDP X9, X1, [X8 + 0x1F8]
	0x03503CD4 BLR X9
	0x03503CD8 MOV X21, X31
	0x03503CDC LDRB W8, [X31 + 0x18]
	0x03503CE0 CBZ W8, 0x3503CF0
	0x03503CE4 MOV X0, X20
	0x03503CE8 MOV X1, X31
	0x03503CEC BL 0x33E14E4
	0x03503CF0 CBNZ X21, 0x3503D30
	0x03503CF4 MOV X20, X31
	0x03503CF8 LDRB W8, [X31 + 0x1C]
	0x03503CFC CBZ W8, 0x3503D0C
	0x03503D00 MOV X0, X19
	0x03503D04 MOV X1, X31
	0x03503D08 BL 0x33E14E4
	0x03503D0C CBNZ X20, 0x3503D24
	0x03503D10 LDP X20, X19, [X31 + 0x30]
	0x03503D14 LDP X22, X21, [X31 + 0x20]
	0x03503D18 LDR X30, [X31 + 0x10]
	0x03503D1C ADD X31, X31, 0x40
	0x03503D20 RET
	0x03503D24 MOV X0, X20
	0x03503D28 BL 0x1C16F18
	0x03503D2C BL 0x1C16F20
	0x03503D30 MOV X0, X21
	0x03503D34 BL 0x1C16F18
	0x03503D38 B 0x3503D4C
	0x03503D3C B 0x3503D40
	0x03503D40 MOV X22, X1
	0x03503D44 MOV X21, X0
	0x03503D48 B 0x3503D98
	0x03503D4C MOV X22, X1
	0x03503D50 MOV X21, X0
	0x03503D54 CMP W22, 0x1
	0x03503D58 B.NE 0x3503D78
	0x03503D5C MOV X0, X21
	0x03503D60 BL 0x3EB1AD0
	0x03503D64 LDR X8, [X0]
	0x03503D68 STR X8, [X31 + 0x8]
	0x03503D6C BL 0x3EB1AE0
	0x03503D70 LDR X21, [X31 + 0x8]
	0x03503D74 B 0x3503CDC
	0x03503D78 STR X31, [X31 + 0x8]
	0x03503D7C LDRB W8, [X31 + 0x18]
	0x03503D80 CBZ W8, 0x3503D90
	0x03503D84 MOV X0, X20
	0x03503D88 MOV X1, X31
	0x03503D8C BL 0x33E14E4
	0x03503D90 LDR X8, [X31 + 0x8]
	0x03503D94 CBNZ X8, 0x3503DBC
	0x03503D98 CMP W22, 0x1
	0x03503D9C B.NE 0x3503DB4
	0x03503DA0 MOV X0, X21
	0x03503DA4 BL 0x3EB1AD0
	0x03503DA8 LDR X20, [X0]
	0x03503DAC BL 0x3EB1AE0
	0x03503DB0 B 0x3503CF8
	0x03503DB4 MOV X20, X31
	0x03503DB8 B 0x3503DD4
	0x03503DBC LDR X0, [X31 + 0x8]
	0x03503DC0 BL 0x1C16F18
	0x03503DC4 MOV X22, X1
	0x03503DC8 MOV X21, X0
	0x03503DCC B 0x3503D7C
	0x03503DD0 MOV X21, X0
	0x03503DD4 LDRB W8, [X31 + 0x1C]
	0x03503DD8 CBZ W8, 0x3503DE8
	0x03503DDC MOV X0, X19
	0x03503DE0 MOV X1, X31
	0x03503DE4 BL 0x33E14E4

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xEDD000
	007 Move X21, 0xBF1000
	008 Move W8, [X22+2714]
	009 Move X21, [X21+1728]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {30}
	016 Move X0, 0xC31000
	017 Move X0, [X0+3744]
	018 Call 0x1C17CF4
	019 Move X0, 0xBF9000
	020 Move X0, [X0+3016]
	021 Call 0x1C17CF4
	022 Move X0, 0xBF1000
	023 Move X0, [X0+1728]
	024 Call 0x1C17CF4
	025 Move X0, 0xC31000
	026 Move X0, [X0+3752]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X22+2714], W8
	030 Move X0, [X21]
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {35}
	034 Call 0x1C17DFC
	035 Move X0, X20
	036 Move X1, X31
	037 Move X2, X31
	038 Call Type.op_Equality, X0, X1
	039 Move TEMP, X0
	040 And TEMP, TEMP, 1
	041 Compare TEMP, 1
	042 JumpIfEqual {65}
	043 Move X8, 0xC31000
	044 Move X0, [X21]
	045 Move X8, [X8+3744]
	046 Move W9, [X0+224]
	047 Move X21, [X8]
	048 Compare W9, 0
	049 JumpIfNotEqual {51}
	050 Call 0x1C17DFC
	051 Move X0, X21
	052 Move X1, X31
	053 Call Type.GetTypeFromHandle, X0
	054 Compare X0, 0
	055 JumpIfEqual {108}
	056 Move X8, [X0]
	057 Move X1, X20
	058 Move X9, [X8+680]
	059 Move X2, [X8+688]
	060 NotImplemented "Instruction BLR not yet implemented."
	061 Move TEMP, X0
	062 And TEMP, TEMP, 1
	063 Compare TEMP, 1
	064 JumpIfNotEqual {72}
	065 Move [X19+232], X20
	066 Move X20, [X31+32]
	067 Move X19, [X31+40]
	068 Move X22, [X31+16]
	069 Move X21, [X31+24]
	070 Move X30, [X31+48]
	071 Return 
	072 Move X19, [X19+72]
	073 Compare X19, 0
	074 JumpIfEqual {108}
	075 Move X9, 0xBF9000
	076 Move X8, [X19]
	077 Move X9, [X9+3016]
	078 Move X10, 0xC31000
	079 Move X1, [X9]
	080 Move X10, [X10+3752]
	081 NotImplemented "Instruction LDRH not yet implemented."
	082 Move X20, [X10]
	083 Compare X9, 0
	084 JumpIfEqual {91}
	085 Move X10, [X8+176]
	086 Add X10, X10, 8
	087 NotImplemented "Instruction LDUR not yet implemented."
	088 NotImplemented "Instruction CMP not yet implemented."
	089 Subtract X9, X9, 1
	090 Add X10, X10, 16
	091 Move X0, X19
	092 Move W2, W31
	093 Call 0x1C5D788
	094 NotImplemented "Instruction LDRSW not yet implemented."
	095 Add X8, X8, X9
	096 Add X0, X8, 312
	097 Move X4, [X0]
	098 Move X3, [X0+8]
	099 Move X0, X19
	100 Move X2, X20
	101 Move X20, [X31+32]
	102 Move X19, [X31+40]
	103 Move X22, [X31+16]
	104 Move X21, [X31+24]
	105 Move W1, 2
	106 Move X30, [X31+48]
	107 CallNoReturn X4
	108 Call 0x1C17F20

Method: System.Type get_EncryptorType()

Disassembly:
	0x03503DE8 CBNZ X20, 0x3503DF4
	0x03503DEC MOV X0, X21

ISIL:
	001 Move X0, [X0+248]
	002 Return X0

Method: System.Void set_EncryptorType(System.Type value)

Disassembly:
	0x03503DF0 BL 0x1D2C690
	0x03503DF4 MOV X0, X20
	0x03503DF8 BL 0x1C16F18
	0x03503DFC BL 0x1990590
	0x03503E00 STR X30, [X31 - 0x10]!
	0x03503E04 LDR X0, [X0 + 0xC8]
	0x03503E08 CBZ X0, 0x3503E20
	0x03503E0C LDR X8, [X0]
	0x03503E10 LDR X2, [X8 + 0x208]
	0x03503E14 LDR X1, [X8 + 0x210]
	0x03503E18 LDR X30, [X31], #0x10
	0x03503E1C BR X2
	0x03503E20 BL 0x1C16F20
	0x03503E24 STR X30, [X31 - 0x30]!
	0x03503E28 STP X22, X21, [X31 + 0x10]
	0x03503E2C STP X20, X19, [X31 + 0x20]
	0x03503E30 ADRP X21, 0xEDC000
	0x03503E34 ADRP X20, 0xBF8000
	0x03503E38 LDRB W8, [X21 + 0xA9F]
	0x03503E3C LDR X20, [X20 + 0xEE0]
	0x03503E40 MOV X19, X0
	0x03503E44 TBNZ X8, 0x0, 0x3503E8C
	0x03503E48 ADRP X0, 0xBF9000
	0x03503E4C LDR X0, [X0 + 0x940]
	0x03503E50 BL 0x1C16CF4
	0x03503E54 ADRP X0, 0xC30000
	0x03503E58 LDR X0, [X0 + 0xF08]
	0x03503E5C BL 0x1C16CF4
	0x03503E60 ADRP X0, 0xBF8000
	0x03503E64 LDR X0, [X0 + 0xEE0]
	0x03503E68 BL 0x1C16CF4
	0x03503E6C ADRP X0, 0xBF8000
	0x03503E70 LDR X0, [X0 + 0xE60]
	0x03503E74 BL 0x1C16CF4
	0x03503E78 ADRP X0, 0xBF0000
	0x03503E7C LDR X0, [X0 + 0x988]
	0x03503E80 BL 0x1C16CF4
	0x03503E84 MOVZ W8, 0x1
	0x03503E88 STRB W8, [X21 + 0xA9F]
	0x03503E8C LDR X0, [X20]
	0x03503E90 LDR W8, [X0 + 0xE0]
	0x03503E94 CBNZ W8, 0x3503EA0
	0x03503E98 BL 0x1C16DFC
	0x03503E9C LDR X0, [X20]
	0x03503EA0 LDR X8, [X0 + 0xB8]
	0x03503EA4 LDRB W8, [X8 + 0x18]
	0x03503EA8 CBZ W8, 0x3503F20
	0x03503EAC ADRP X8, 0xBF9000
	0x03503EB0 LDR X8, [X8 + 0x940]
	0x03503EB4 ADRP X20, 0xC30000
	0x03503EB8 ADRP X22, 0xBF8000
	0x03503EBC ADRP X21, 0xBF0000
	0x03503EC0 LDR X0, [X8]
	0x03503EC4 LDR X20, [X20 + 0xF08]
	0x03503EC8 LDR X22, [X22 + 0xE60]
	0x03503ECC LDR X21, [X21 + 0x988]
	0x03503ED0 BL 0x1C16F10
	0x03503ED4 LDR X2, [X20]
	0x03503ED8 MOV X1, X19
	0x03503EDC MOV X3, X31
	0x03503EE0 MOV X20, X0
	0x03503EE4 BL 0x2D27194
	0x03503EE8 LDR X0, [X22]
	0x03503EEC LDR W8, [X0 + 0xE0]
	0x03503EF0 CBNZ W8, 0x3503EF8
	0x03503EF4 BL 0x1C16DFC
	0x03503EF8 LDR X2, [X21]
	0x03503EFC MOVZ W1, 0x64
	0x03503F00 MOV X0, X20
	0x03503F04 MOV X3, X31
	0x03503F08 BL 0x351F6A0
	0x03503F0C LDP X20, X19, [X31 + 0x20]
	0x03503F10 LDP X22, X21, [X31 + 0x10]
	0x03503F14 MOVZ W0, 0x1
	0x03503F18 LDR X30, [X31], #0x30
	0x03503F1C RET
	0x03503F20 LDR X0, [X19 + 0xC8]
	0x03503F24 CBZ X0, 0x3503F40
	0x03503F28 LDR X1, [X19 + 0xD0]
	0x03503F2C LDP X20, X19, [X31 + 0x20]
	0x03503F30 LDP X22, X21, [X31 + 0x10]
	0x03503F34 MOV X2, X31
	0x03503F38 LDR X30, [X31], #0x30
	0x03503F3C B 0x34FE87C
	0x03503F40 BL 0x1C16F20
	0x03503F44 SUB X31, X31, 0x70
	0x03503F48 STR X30, [X31 + 0x10]
	0x03503F4C STP X28, X27, [X31 + 0x20]
	0x03503F50 STP X26, X25, [X31 + 0x30]
	0x03503F54 STP X24, X23, [X31 + 0x40]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xEDD000
	007 Move X21, 0xBF1000
	008 Move W8, [X22+2715]
	009 Move X21, [X21+1728]
	010 Move X20, X1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {30}
	016 Move X0, 0xBF9000
	017 Move X0, [X0+3280]
	018 Call 0x1C17CF4
	019 Move X0, 0xBF9000
	020 Move X0, [X0+3016]
	021 Call 0x1C17CF4
	022 Move X0, 0xBF1000
	023 Move X0, [X0+1728]
	024 Call 0x1C17CF4
	025 Move X0, 0xC31000
	026 Move X0, [X0+3752]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X22+2715], W8
	030 Move X0, [X21]
	031 Move W8, [X0+224]
	032 Compare W8, 0
	033 JumpIfNotEqual {35}
	034 Call 0x1C17DFC
	035 Move X0, X20
	036 Move X1, X31
	037 Move X2, X31
	038 Call Type.op_Equality, X0, X1
	039 Move TEMP, X0
	040 And TEMP, TEMP, 1
	041 Compare TEMP, 1
	042 JumpIfEqual {65}
	043 Move X8, 0xBF9000
	044 Move X0, [X21]
	045 Move X8, [X8+3280]
	046 Move W9, [X0+224]
	047 Move X21, [X8]
	048 Compare W9, 0
	049 JumpIfNotEqual {51}
	050 Call 0x1C17DFC
	051 Move X0, X21
	052 Move X1, X31
	053 Call Type.GetTypeFromHandle, X0
	054 Compare X0, 0
	055 JumpIfEqual {108}
	056 Move X8, [X0]
	057 Move X1, X20
	058 Move X9, [X8+680]
	059 Move X2, [X8+688]
	060 NotImplemented "Instruction BLR not yet implemented."
	061 Move TEMP, X0
	062 And TEMP, TEMP, 1
	063 Compare TEMP, 1
	064 JumpIfNotEqual {72}
	065 Move [X19+248], X20
	066 Move X20, [X31+32]
	067 Move X19, [X31+40]
	068 Move X22, [X31+16]
	069 Move X21, [X31+24]
	070 Move X30, [X31+48]
	071 Return 
	072 Move X19, [X19+72]
	073 Compare X19, 0
	074 JumpIfEqual {108}
	075 Move X9, 0xBF9000
	076 Move X8, [X19]
	077 Move X9, [X9+3016]
	078 Move X10, 0xC31000
	079 Move X1, [X9]
	080 Move X10, [X10+3752]
	081 NotImplemented "Instruction LDRH not yet implemented."
	082 Move X20, [X10]
	083 Compare X9, 0
	084 JumpIfEqual {91}
	085 Move X10, [X8+176]
	086 Add X10, X10, 8
	087 NotImplemented "Instruction LDUR not yet implemented."
	088 NotImplemented "Instruction CMP not yet implemented."
	089 Subtract X9, X9, 1
	090 Add X10, X10, 16
	091 Move X0, X19
	092 Move W2, W31
	093 Call 0x1C5D788
	094 NotImplemented "Instruction LDRSW not yet implemented."
	095 Add X8, X8, X9
	096 Add X0, X8, 312
	097 Move X4, [X0]
	098 Move X3, [X0+8]
	099 Move X0, X19
	100 Move X2, X20
	101 Move X20, [X31+32]
	102 Move X19, [X31+40]
	103 Move X22, [X31+16]
	104 Move X21, [X31+24]
	105 Move W1, 2
	106 Move X30, [X31+48]
	107 CallNoReturn X4
	108 Call 0x1C17F20

Method: System.Int32 get_CountDiscarded()

Disassembly:
	0x03503F58 STP X22, X21, [X31 + 0x50]
	0x03503F5C STP X20, X19, [X31 + 0x60]

ISIL:
	001 Move W0, [X0+264]
	002 Return X0

Method: System.Void set_CountDiscarded(System.Int32 value)

Disassembly:
	0x03503F60 AND W8, W3, 0x1
	0x03503F64 STRB W8, [X31 + 0x1C]

ISIL:
	001 Move [X0+264], W1
	002 Return 

Method: System.Int32 get_DeltaUnreliableNumber()

Disassembly:
	0x03503F68 AND W8, W4, 0x1
	0x03503F6C ADRP X23, 0xEDC000

ISIL:
	001 Move W0, [X0+268]
	002 Return X0

Method: System.Void set_DeltaUnreliableNumber(System.Int32 value)

Disassembly:
	0x03503F70 STRB W8, [X31 + 0x18]
	0x03503F74 ADRP X22, 0xBF0000

ISIL:
	001 Move [X0+268], W1
	002 Return 

Method: System.Void .ctor(ExitGames.Client.Photon.ConnectionProtocol protocolType)

Disassembly:
	0x03503F78 LDRB W9, [X23 + 0xAA0]
	0x03503F7C LDR X22, [X22 + 0x6C0]
	0x03503F80 MOV X21, X2
	0x03503F84 MOV X20, X1
	0x03503F88 MOV X19, X0
	0x03503F8C TBNZ X9, 0x0, 0x3504010
	0x03503F90 ADRP X0, 0xBF0000
	0x03503F94 LDR X0, [X0 + 0xB58]
	0x03503F98 BL 0x1C16CF4
	0x03503F9C ADRP X0, 0xC30000
	0x03503FA0 LDR X0, [X0 + 0xF10]
	0x03503FA4 BL 0x1C16CF4
	0x03503FA8 ADRP X0, 0xBF8000
	0x03503FAC LDR X0, [X0 + 0xCD8]
	0x03503FB0 BL 0x1C16CF4
	0x03503FB4 ADRP X0, 0xBF8000
	0x03503FB8 LDR X0, [X0 + 0xBC8]
	0x03503FBC BL 0x1C16CF4
	0x03503FC0 ADRP X0, 0xBF0000
	0x03503FC4 LDR X0, [X0 + 0x6C0]
	0x03503FC8 BL 0x1C16CF4
	0x03503FCC ADRP X0, 0xC30000
	0x03503FD0 LDR X0, [X0 + 0xF18]
	0x03503FD4 BL 0x1C16CF4
	0x03503FD8 ADRP X0, 0xC30000
	0x03503FDC LDR X0, [X0 + 0xF20]
	0x03503FE0 BL 0x1C16CF4
	0x03503FE4 ADRP X0, 0xC30000
	0x03503FE8 LDR X0, [X0 + 0xF28]
	0x03503FEC BL 0x1C16CF4
	0x03503FF0 ADRP X0, 0xC30000
	0x03503FF4 LDR X0, [X0 + 0xF30]
	0x03503FF8 BL 0x1C16CF4
	0x03503FFC ADRP X0, 0xC30000
	0x03504000 LDR X0, [X0 + 0xF38]
	0x03504004 BL 0x1C16CF4
	0x03504008 MOVZ W8, 0x1
	0x0350400C STRB W8, [X23 + 0xAA0]
	0x03504010 LDR X0, [X22]
	0x03504014 STR W31, [X31 + 0xC]
	0x03504018 LDR X22, [X19 + 0xF8]
	0x0350401C LDR W8, [X0 + 0xE0]
	0x03504020 CBNZ W8, 0x3504028
	0x03504024 BL 0x1C16DFC
	0x03504028 ADRP X26, 0xBF7000
	0x0350402C ADRP X25, 0xBF7000
	0x03504030 LDR X26, [X26 + 0xBC8]
	0x03504034 LDR X25, [X25 + 0xCD8]
	0x03504038 MOV X0, X22
	0x0350403C MOV X1, X31
	0x03504040 MOV X2, X31
	0x03504044 BL 0x3395F0C
	0x03504048 TBZ X0, 0x0, 0x3504110
	0x0350404C LDR X0, [X19 + 0xF8]
	0x03504050 MOV X1, X31
	0x03504054 BL 0x33A703C
	0x03504058 MOV X22, X0
	0x0350405C CBZ X0, 0x3504098
	0x03504060 LDR X23, [X25]
	0x03504064 MOV X0, X22
	0x03504068 MOV X1, X23
	0x0350406C BL 0x1C16E00
	0x03504070 CBZ X0, 0x35043E4
	0x03504074 STR X0, [X19 + 0x100]
	0x03504078 LDR X23, [X25]
	0x0350407C MOV X0, X22
	0x03504080 MOV X1, X23
	0x03504084 BL 0x1C16E00
	0x03504088 CBZ X0, 0x35043F0
	0x0350408C LDR X8, [X19 + 0x100]
	0x03504090 CBNZ X8, 0x3504110
	0x03504094 B 0x350409C
	0x03504098 STR X31, [X19 + 0x100]
	0x0350409C LDR X22, [X19 + 0x48]
	0x035040A0 CBZ X22, 0x35043FC
	0x035040A4 ADRP X10, 0xC2F000
	0x035040A8 LDR X8, [X22]
	0x035040AC LDR X1, [X26]
	0x035040B0 LDR X10, [X10 + 0xF28]
	0x035040B4 LDRH W9, [X8 + 0x12E]
	0x035040B8 LDR X23, [X10]
	0x035040BC CBZ X9, 0x35040E0
	0x035040C0 LDR X10, [X8 + 0xB0]
	0x035040C4 ADD X10, X10, 0x8
	0x035040C8 LDUR X11, [X10 - 0x8]
	0x035040CC CMP X11, X1
	0x035040D0 B.EQ 0x35040F0
	0x035040D4 SUBS X9, X9, 0x1
	0x035040D8 ADD X10, X10, 0x10
	0x035040DC B.NE 0x35040C8
	0x035040E0 MOV X0, X22
	0x035040E4 MOV W2, W31
	0x035040E8 BL 0x1C5C788
	0x035040EC B 0x35040FC
	0x035040F0 LDRSW X9, [X10]
	0x035040F4 ADD X8, X8, X9, 0x4, LSL
	0x035040F8 ADD X0, X8, 0x138
	0x035040FC LDP X8, X3, [X0]
	0x03504100 MOVZ W1, 0x2
	0x03504104 MOV X0, X22
	0x03504108 MOV X2, X23
	0x0350410C BLR X8
	0x03504110 LDR X23, [X19 + 0x100]
	0x03504114 CBNZ X23, 0x350413C
	0x03504118 ADRP X8, 0xC2F000
	0x0350411C LDR X8, [X8 + 0xF10]
	0x03504120 LDR X0, [X8]
	0x03504124 BL 0x1C16F10
	0x03504128 MOV X1, X31
	0x0350412C MOV X23, X0
	0x03504130 BL 0x352ABB8
	0x03504134 STR X23, [X19 + 0x100]
	0x03504138 CBZ X23, 0x350439C
	0x0350413C ADRP X24, 0xC2F000
	0x03504140 ADRP X27, 0xC2F000
	0x03504144 LDR X22, [X19 + 0x48]
	0x03504148 LDR X24, [X24 + 0xF30]
	0x0350414C LDR X27, [X27 + 0xF18]
	0x03504150 MOV X0, X23
	0x03504154 MOV X1, X31
	0x03504158 BL 0x33BE520
	0x0350415C LDR X23, [X24]
	0x03504160 CBZ X0, 0x3504178
	0x03504164 LDR X8, [X0]
	0x03504168 LDP X9, X1, [X8 + 0x168]
	0x0350416C BLR X9
	0x03504170 MOV X24, X0
	0x03504174 B 0x350417C
	0x03504178 MOV X24, X31
	0x0350417C MOVZ W8, 0x2
	0x03504180 ADD X0, X31, 0xC
	0x03504184 MOV X1, X31
	0x03504188 STR W8, [X31 + 0xC]
	0x0350418C BL 0x337B6E0
	0x03504190 LDR X2, [X27]
	0x03504194 MOV X3, X0
	0x03504198 MOV X0, X23
	0x0350419C MOV X1, X24
	0x035041A0 MOV X4, X31
	0x035041A4 BL 0x32277C4
	0x035041A8 CBZ X22, 0x35044D4
	0x035041AC LDR X8, [X22]
	0x035041B0 ADRP X24, 0xBEF000
	0x035041B4 LDR X1, [X26]
	0x035041B8 MOV X23, X0
	0x035041BC LDRH W9, [X8 + 0x12E]
	0x035041C0 LDR X24, [X24 + 0xB58]
	0x035041C4 CBZ X9, 0x35041E8
	0x035041C8 LDR X10, [X8 + 0xB0]
	0x035041CC ADD X10, X10, 0x8
	0x035041D0 LDUR X11, [X10 - 0x8]
	0x035041D4 CMP X11, X1
	0x035041D8 B.EQ 0x35041F8
	0x035041DC SUBS X9, X9, 0x1
	0x035041E0 ADD X10, X10, 0x10

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X21, 0xEDD000
	011 Move X26, 0xBF7000
	012 Move X25, 0xC31000
	013 Move X24, 0xC31000
	014 Move X22, 0xC31000
	015 Move X23, 0xBF1000
	016 Move W8, [X21+2716]
	017 Move X26, [X26+3264]
	018 Move X25, [X25+3760]
	019 Move X24, [X24+3768]
	020 Move X22, [X22+3776]
	021 Move X23, [X23+1728]
	022 Move W20, W1
	023 Move X19, X0
	024 Move TEMP, X8
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {54}
	028 Move X0, 0xC31000
	029 Move X0, [X0+3768]
	030 Call 0x1C17CF4
	031 Move X0, 0xBFA000
	032 Move X0, [X0+1464]
	033 Call 0x1C17CF4
	034 Move X0, 0xC31000
	035 Move X0, [X0+3760]
	036 Call 0x1C17CF4
	037 Move X0, 0xC31000
	038 Move X0, [X0+3784]
	039 Call 0x1C17CF4
	040 Move X0, 0xBF7000
	041 Move X0, [X0+3264]
	042 Call 0x1C17CF4
	043 Move X0, 0xC30000
	044 Move X0, [X0+3792]
	045 Call 0x1C17CF4
	046 Move X0, 0xC30000
	047 Move X0, [X0+3776]
	048 Call 0x1C17CF4
	049 Move X0, 0xBF0000
	050 Move X0, [X0+1728]
	051 Call 0x1C17CF4
	052 Move W8, 1
	053 Move [X21+2716], W8
	054 Move W9, 15
	055 Move [X19+37], W9
	056 Move W9, 1
	057 Move [X19+64], W9
	058 Move [X19+91], W9
	059 Move W9, 50
	060 Move [X19+92], W9
	061 Move X9, -44130304
	062 Move V0, [X9+2328]
	063 Move W8, 2
	064 Move [X19+32], W8
	065 NotImplemented "Instruction STRH not yet implemented."
	066 Move W8, 1000
	067 Move W9, 0x2710
	068 Move [X19+120], W8
	069 Move W8, 1200
	070 NotImplemented "Instruction STURH not yet implemented."
	071 Move [X19+124], W31
	072 Move [X19+128], W9
	073 Move [X19+136], W8
	074 Move [X19+112], D0
	075 Move [X19+192], W31
	076 Move X0, [X26]
	077 Call 0x1C17F10
	078 Move X1, X31
	079 Move X21, X0
	080 Call Object..ctor, X0
	081 Move [X19+208], X21
	082 Move X0, [X26]
	083 Call 0x1C17F10
	084 Move X1, X31
	085 Move X21, X0
	086 Call Object..ctor, X0
	087 Move [X19+216], X21
	088 Move X0, [X26]
	089 Call 0x1C17F10
	090 Move X1, X31
	091 Move X21, X0
	092 Call Object..ctor, X0
	093 Move X0, X19
	094 Move X1, X31
	095 Move [X19+224], X21
	096 Call Object..ctor, X0
	097 Move [X19+132], W20
	098 Move X0, [X25]
	099 Call 0x1C17F10
	100 Move X2, [X24]
	101 Move W1, 5
	102 Move X20, X0
	103 Call Dictionary`2<ByteEnum, Object>..ctor, X0, X1
	104 Move [X19+48], X20
	105 Move X0, [X23]
	106 Move X21, [X22]
	107 Move W8, [X0+224]
	108 Compare W8, 0
	109 JumpIfNotEqual {111}
	110 Call 0x1C17DFC
	111 Move X0, X21
	112 Move X1, X31
	113 Call Type.GetTypeFromHandle, X0
	114 Compare X20, 0
	115 JumpIfEqual {170}
	116 Move X21, 0xBF9000
	117 Move X21, [X21+1464]
	118 Move X22, 0xC30000
	119 Move X2, X0
	120 Move X0, X20
	121 Move X3, [X21]
	122 Move X22, [X22+3792]
	123 Move W1, W31
	124 Call Dictionary`2<ByteEnum, Object>.set_Item, X0, X1, X2
	125 Move X0, [X22]
	126 Move X20, [X19+48]
	127 Move X1, X31
	128 Call Type.GetTypeFromHandle, X0
	129 Compare X20, 0
	130 JumpIfEqual {170}
	131 Move X3, [X21]
	132 Move X22, 0xC30000
	133 Move X22, [X22+3784]
	134 Move X2, X0
	135 Move W1, 1
	136 Move X0, X20
	137 Call Dictionary`2<ByteEnum, Object>.set_Item, X0, X1, X2
	138 Move X0, [X22]
	139 Move X20, [X19+48]
	140 Move X1, X31
	141 Call Type.GetTypeFromHandle, X0
	142 Compare X20, 0
	143 JumpIfEqual {170}
	144 Move X3, [X21]
	145 Move X2, X0
	146 Move W1, 4
	147 Move X0, X20
	148 Call Dictionary`2<ByteEnum, Object>.set_Item, X0, X1, X2
	149 Move X0, [X22]
	150 Move X20, [X19+48]
	151 Move X1, X31
	152 Call Type.GetTypeFromHandle, X0
	153 Compare X20, 0
	154 JumpIfEqual {170}
	155 Move X3, [X21]
	156 Move X2, X0
	157 Move W1, 5
	158 Move X0, X20
	159 Call Dictionary`2<ByteEnum, Object>.set_Item, X0, X1, X2
	160 Move X0, X19
	161 Move X20, [X31+64]
	162 Move X19, [X31+72]
	163 Move X22, [X31+48]
	164 Move X21, [X31+56]
	165 Move X24, [X31+32]
	166 Move X23, [X31+40]
	167 Move X26, [X31+16]
	168 Move X25, [X31+24]
	169 Move X30, [X31+80]
	170 Call 0x1C17F20

Method: System.Void .ctor(ExitGames.Client.Photon.IPhotonPeerListener listener, ExitGames.Client.Photon.ConnectionProtocol protocolType)

Disassembly:
	0x03504314 ADD X10, X10, 0x10
	0x03504318 B.NE 0x3504304
	0x0350431C MOV X0, X22
	0x03504320 MOV W2, W31
	0x03504324 BL 0x1C5C788
	0x03504328 B 0x3504338
	0x0350432C LDRSW X9, [X10]
	0x03504330 ADD X8, X8, X9, 0x4, LSL
	0x03504334 ADD X0, X8, 0x138
	0x03504338 LDP X8, X6, [X0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, X1
	005 Move W1, W2
	006 Move X20, X0
	007 Call PhotonPeer..ctor, X0, X1
	008 Move [X20+72], X19
	009 Move X20, [X31+16]
	010 Move X19, [X31+24]
	011 Move X30, [X31+32]
	012 Return 

Method: System.Boolean Connect(System.String serverAddress, System.String appId, System.Object photonToken = null, System.Object customInitData = null)

Disassembly:
	0x0350433C CMP W24, 0x0
	0x03504340 CSET W4, NE
	0x03504344 MOV X0, X22
	0x03504348 MOV X1, X20
	0x0350434C MOV X2, X21
	0x03504350 MOV X3, X31
	0x03504354 MOV W5, W23

ISIL:
	001 Move X8, [X0]
	002 Move X5, X4
	003 Move X4, X3
	004 Move X3, X2
	005 Move X7, [X8+424]
	006 Move X6, [X8+432]
	007 Move X2, X31
	008 CallNoReturn X7

Method: System.Boolean Connect(System.String serverAddress, System.String proxyServerAddress, System.String appId, System.Object photonToken, System.Object customInitData = null)

Disassembly:
	0x03504358 BLR X8
	0x0350435C LDRB W8, [X31 + 0x1C]
	0x03504360 CBZ W8, 0x3504378
	0x03504364 MOVZ W8, 0x1
	0x03504368 STR X20, [X19 + 0x90]
	0x0350436C STRB W8, [X19 + 0x8D]
	0x03504370 LDRB W8, [X31 + 0x18]
	0x03504374 STRB W8, [X19 + 0x98]
	0x03504378 LDP X20, X19, [X31 + 0x60]
	0x0350437C LDP X22, X21, [X31 + 0x50]
	0x03504380 LDP X24, X23, [X31 + 0x40]
	0x03504384 LDP X26, X25, [X31 + 0x30]
	0x03504388 LDP X28, X27, [X31 + 0x20]
	0x0350438C LDR X30, [X31 + 0x10]
	0x03504390 MOVZ W0, 0x1
	0x03504394 ADD X31, X31, 0x70
	0x03504398 RET
	0x0350439C ADRP X0, 0xBFA000
	0x035043A0 LDR X0, [X0 + 0xA18]
	0x035043A4 BL 0x1C16D08
	0x035043A8 BL 0x1C16F10
	0x035043AC MOV X19, X0
	0x035043B0 ADRP X0, 0xC2F000
	0x035043B4 LDR X0, [X0 + 0xF40]
	0x035043B8 BL 0x1C16D08
	0x035043BC MOV X1, X0
	0x035043C0 MOV X0, X19
	0x035043C4 MOV X2, X31
	0x035043C8 BL 0x33803F4
	0x035043CC ADRP X0, 0xC2F000
	0x035043D0 LDR X0, [X0 + 0xF48]
	0x035043D4 BL 0x1C16D08
	0x035043D8 MOV X1, X0
	0x035043DC MOV X0, X19
	0x035043E0 BL 0x1C16DEC
	0x035043E4 MOV X0, X22
	0x035043E8 MOV X1, X23
	0x035043EC BL 0x1C171E0
	0x035043F0 MOV X0, X22
	0x035043F4 MOV X1, X23
	0x035043F8 BL 0x1C171E0
	0x035043FC BL 0x1C16F20
	0x03504400 B 0x3504404
	0x03504404 MOV X22, X0
	0x03504408 CMP W1, 0x1
	0x0350440C B.NE 0x3504524
	0x03504410 MOV X0, X22
	0x03504414 BL 0x3EB1AD0
	0x03504418 MOV X22, X0
	0x0350441C ADRP X0, 0xBEF000
	0x03504420 LDR X0, [X0 + 0x7D0]
	0x03504424 BL 0x1C16D08
	0x03504428 LDR X8, [X22]
	0x0350442C LDR X1, [X8]
	0x03504430 BL 0x1C17270
	0x03504434 TBZ X0, 0x0, 0x35044FC
	0x03504438 LDR X24, [X22]
	0x0350443C BL 0x3EB1AE0
	0x03504440 ADRP X0, 0xC2F000
	0x03504444 LDR X22, [X19 + 0x48]
	0x03504448 LDR X0, [X0 + 0xF50]
	0x0350444C BL 0x1C16D08
	0x03504450 MOV X23, X0
	0x03504454 CBZ X24, 0x3504470
	0x03504458 LDR X8, [X24]
	0x0350445C MOV X0, X24
	0x03504460 LDP X9, X1, [X8 + 0x168]
	0x03504464 BLR X9
	0x03504468 MOV X1, X0
	0x0350446C B 0x3504474
	0x03504470 MOV X1, X31
	0x03504474 MOV X0, X23
	0x03504478 MOV X2, X31
	0x0350447C BL 0x321B938
	0x03504480 CBZ X22, 0x35044D4
	0x03504484 MOV X23, X0
	0x03504488 ADRP X0, 0xBF7000
	0x0350448C LDR X0, [X0 + 0xBC8]
	0x03504490 BL 0x1C16D08
	0x03504494 LDR X8, [X22]
	0x03504498 MOV X1, X0
	0x0350449C LDRH W9, [X8 + 0x12E]
	0x035044A0 CBZ X9, 0x35044C4
	0x035044A4 LDR X10, [X8 + 0xB0]
	0x035044A8 ADD X10, X10, 0x8
	0x035044AC LDUR X11, [X10 - 0x8]
	0x035044B0 CMP X11, X1
	0x035044B4 B.EQ 0x35044D8
	0x035044B8 SUBS X9, X9, 0x1
	0x035044BC ADD X10, X10, 0x10
	0x035044C0 B.NE 0x35044AC
	0x035044C4 MOV X0, X22
	0x035044C8 MOV W2, W31
	0x035044CC BL 0x1C5C788
	0x035044D0 B 0x35044E4
	0x035044D4 BL 0x1C16F20
	0x035044D8 LDRSW X9, [X10]
	0x035044DC ADD X8, X8, X9, 0x4, LSL
	0x035044E0 ADD X0, X8, 0x138
	0x035044E4 LDP X8, X3, [X0]
	0x035044E8 MOVZ W1, 0x2
	0x035044EC MOV X0, X22
	0x035044F0 MOV X2, X23
	0x035044F4 BLR X8
	0x035044F8 B 0x3504110
	0x035044FC MOVZ W0, 0x8
	0x03504500 BL 0x3EB1AF0
	0x03504504 LDR X8, [X22]
	0x03504508 STR X8, [X0]
	0x0350450C ADRP X1, 0x9B0000
	0x03504510 ADD X1, X1, 0xE58
	0x03504514 MOV X2, X31
	0x03504518 BL 0x3EB1B00
	0x0350451C MOV X22, X0
	0x03504520 BL 0x3EB1AE0
	0x03504524 MOV X0, X22
	0x03504528 BL 0x1D2C690
	0x0350452C BL 0x1990590
	0x03504530 STR X1, [X0 + 0xF0]
	0x03504534 RET
	0x03504538 STP X30, X19, [X31 - 0x10]!
	0x0350453C MOV X19, X0
	0x03504540 LDR X8, [X19]
	0x03504544 MOV X0, X19
	0x03504548 LDR X9, [X8 + 0x218]
	0x0350454C LDR X1, [X8 + 0x220]
	0x03504550 BLR X9
	0x03504554 TBNZ X0, 0x0, 0x3504540
	0x03504558 LDR X8, [X19]
	0x0350455C MOV X0, X19
	0x03504560 LDP X9, X1, [X8 + 0x1F8]
	0x03504564 BLR X9
	0x03504568 TBNZ X0, 0x0, 0x3504558
	0x0350456C LDP X30, X19, [X31], #0x10
	0x03504570 RET
	0x03504574 SUB X31, X31, 0x30
	0x03504578 STP X30, X21, [X31 + 0x10]
	0x0350457C STP X20, X19, [X31 + 0x20]
	0x03504580 LDRB W8, [X0 + 0xC0]
	0x03504584 MOV X20, X0
	0x03504588 CBZ W8, 0x350459C
	0x0350458C LDR X0, [X20 + 0xB0]
	0x03504590 CBZ X0, 0x350460C
	0x03504594 MOV X1, X31
	0x03504598 BL 0x35242C0
	0x0350459C LDR X19, [X20 + 0xD0]
	0x035045A0 STRB W31, [X31 + 0xC]
	0x035045A4 ADD X1, X31, 0xC
	0x035045A8 MOV X0, X19
	0x035045AC MOV X2, X31
	0x035045B0 BL 0x33DE64C
	0x035045B4 LDR X0, [X20 + 0xC8]
	0x035045B8 CBZ X0, 0x3504608
	0x035045BC LDR X8, [X0]
	0x035045C0 LDR X1, [X8 + 0x240]
	0x035045C4 LDR X9, [X8 + 0x238]
	0x035045C8 BLR X9
	0x035045CC MOV W21, W0
	0x035045D0 MOV X20, X31
	0x035045D4 LDRB W8, [X31 + 0xC]
	0x035045D8 CBZ W8, 0x35045E8
	0x035045DC MOV X0, X19
	0x035045E0 MOV X1, X31
	0x035045E4 BL 0x33E14E4
	0x035045E8 CBNZ X20, 0x3504600
	0x035045EC AND W0, W21, 0x1
	0x035045F0 LDP X20, X19, [X31 + 0x20]
	0x035045F4 LDP X30, X21, [X31 + 0x10]
	0x035045F8 ADD X31, X31, 0x30
	0x035045FC RET
	0x03504600 MOV X0, X20
	0x03504604 BL 0x1C16F18
	0x03504608 BL 0x1C16F20
	0x0350460C BL 0x1C16F20
	0x03504610 B 0x3504618
	0x03504614 B 0x3504618
	0x03504618 MOV X21, X0
	0x0350461C CMP W1, 0x1
	0x03504620 B.NE 0x350463C
	0x03504624 MOV X0, X21
	0x03504628 BL 0x3EB1AD0
	0x0350462C LDR X20, [X0]
	0x03504630 BL 0x3EB1AE0
	0x03504634 MOV W21, W31
	0x03504638 B 0x35045D4
	0x0350463C MOV X20, X31
	0x03504640 B 0x3504648
	0x03504644 MOV X21, X0
	0x03504648 LDRB W8, [X31 + 0xC]
	0x0350464C CBZ W8, 0x350465C
	0x03504650 MOV X0, X19
	0x03504654 MOV X1, X31
	0x03504658 BL 0x33E14E4
	0x0350465C CBNZ X20, 0x3504668
	0x03504660 MOV X0, X21
	0x03504664 BL 0x1D2C690
	0x03504668 MOV X0, X20
	0x0350466C BL 0x1C16F18
	0x03504670 BL 0x1990590
	0x03504674 SUB X31, X31, 0x30
	0x03504678 STP X30, X21, [X31 + 0x10]
	0x0350467C STP X20, X19, [X31 + 0x20]
	0x03504680 LDRB W8, [X0 + 0xC0]
	0x03504684 MOV X20, X0
	0x03504688 CBZ W8, 0x350469C
	0x0350468C LDR X0, [X20 + 0xB0]
	0x03504690 CBZ X0, 0x350470C
	0x03504694 MOV X1, X31
	0x03504698 BL 0x35242C0
	0x0350469C LDR X19, [X20 + 0xD0]
	0x035046A0 STRB W31, [X31 + 0xC]
	0x035046A4 ADD X1, X31, 0xC
	0x035046A8 MOV X0, X19
	0x035046AC MOV X2, X31
	0x035046B0 BL 0x33DE64C
	0x035046B4 LDR X0, [X20 + 0xC8]
	0x035046B8 CBZ X0, 0x3504708
	0x035046BC LDR X8, [X0]
	0x035046C0 LDR X1, [X8 + 0x250]
	0x035046C4 LDR X9, [X8 + 0x248]
	0x035046C8 BLR X9
	0x035046CC MOV W21, W0
	0x035046D0 MOV X20, X31
	0x035046D4 LDRB W8, [X31 + 0xC]
	0x035046D8 CBZ W8, 0x35046E8
	0x035046DC MOV X0, X19
	0x035046E0 MOV X1, X31
	0x035046E4 BL 0x33E14E4
	0x035046E8 CBNZ X20, 0x3504700
	0x035046EC AND W0, W21, 0x1
	0x035046F0 LDP X20, X19, [X31 + 0x20]
	0x035046F4 LDP X30, X21, [X31 + 0x10]
	0x035046F8 ADD X31, X31, 0x30
	0x035046FC RET
	0x03504700 MOV X0, X20
	0x03504704 BL 0x1C16F18
	0x03504708 BL 0x1C16F20
	0x0350470C BL 0x1C16F20
	0x03504710 B 0x3504718
	0x03504714 B 0x3504718
	0x03504718 MOV X21, X0
	0x0350471C CMP W1, 0x1
	0x03504720 B.NE 0x350473C
	0x03504724 MOV X0, X21
	0x03504728 BL 0x3EB1AD0
	0x0350472C LDR X20, [X0]
	0x03504730 BL 0x3EB1AE0
	0x03504734 MOV W21, W31
	0x03504738 B 0x35046D4
	0x0350473C MOV X20, X31
	0x03504740 B 0x3504748
	0x03504744 MOV X21, X0
	0x03504748 LDRB W8, [X31 + 0xC]
	0x0350474C CBZ W8, 0x350475C
	0x03504750 MOV X0, X19
	0x03504754 MOV X1, X31
	0x03504758 BL 0x33E14E4
	0x0350475C CBNZ X20, 0x3504768
	0x03504760 MOV X0, X21
	0x03504764 BL 0x1D2C690
	0x03504768 MOV X0, X20
	0x0350476C BL 0x1C16F18
	0x03504770 BL 0x1990590
	0x03504774 SUB X31, X31, 0x30
	0x03504778 STP X30, X21, [X31 + 0x10]
	0x0350477C STP X20, X19, [X31 + 0x20]
	0x03504780 LDRB W8, [X0 + 0xC0]
	0x03504784 MOV X20, X0
	0x03504788 CBZ W8, 0x350479C
	0x0350478C LDR X0, [X20 + 0xB0]
	0x03504790 CBZ X0, 0x3504810
	0x03504794 MOV X1, X31
	0x03504798 BL 0x352425C
	0x0350479C LDR X19, [X20 + 0xD8]
	0x035047A0 STRB W31, [X31 + 0xC]
	0x035047A4 ADD X1, X31, 0xC
	0x035047A8 MOV X0, X19
	0x035047AC MOV X2, X31
	0x035047B0 BL 0x33DE64C
	0x035047B4 LDR X0, [X20 + 0xC8]
	0x035047B8 CBZ X0, 0x350480C
	0x035047BC LDR X8, [X0]
	0x035047C0 STR W31, [X0 + 0x48]
	0x035047C4 LDR X1, [X8 + 0x270]
	0x035047C8 LDR X9, [X8 + 0x268]
	0x035047CC BLR X9
	0x035047D0 MOV W21, W0
	0x035047D4 MOV X20, X31
	0x035047D8 LDRB W8, [X31 + 0xC]
	0x035047DC CBZ W8, 0x35047EC
	0x035047E0 MOV X0, X19
	0x035047E4 MOV X1, X31
	0x035047E8 BL 0x33E14E4
	0x035047EC CBNZ X20, 0x3504804
	0x035047F0 AND W0, W21, 0x1
	0x035047F4 LDP X20, X19, [X31 + 0x20]
	0x035047F8 LDP X30, X21, [X31 + 0x10]
	0x035047FC ADD X31, X31, 0x30
	0x03504800 RET
	0x03504804 MOV X0, X20
	0x03504808 BL 0x1C16F18
	0x0350480C BL 0x1C16F20
	0x03504810 BL 0x1C16F20
	0x03504814 B 0x350481C
	0x03504818 B 0x350481C
	0x0350481C MOV X21, X0
	0x03504820 CMP W1, 0x1
	0x03504824 B.NE 0x3504840
	0x03504828 MOV X0, X21
	0x0350482C BL 0x3EB1AD0
	0x03504830 LDR X20, [X0]
	0x03504834 BL 0x3EB1AE0
	0x03504838 MOV W21, W31
	0x0350483C B 0x35047D8
	0x03504840 MOV X20, X31
	0x03504844 B 0x350484C
	0x03504848 MOV X21, X0
	0x0350484C LDRB W8, [X31 + 0xC]
	0x03504850 CBZ W8, 0x3504860
	0x03504854 MOV X0, X19
	0x03504858 MOV X1, X31
	0x0350485C BL 0x33E14E4
	0x03504860 CBNZ X20, 0x350486C
	0x03504864 MOV X0, X21
	0x03504868 BL 0x1D2C690
	0x0350486C MOV X0, X20
	0x03504870 BL 0x1C16F18
	0x03504874 BL 0x1990590
	0x03504878 SUB X31, X31, 0x50
	0x0350487C STP X30, X3, [X31 + 0x20]
	0x03504880 STP X22, X21, [X31 + 0x30]
	0x03504884 STP X20, X19, [X31 + 0x40]
	0x03504888 ADRP X22, 0xEDB000
	0x0350488C LDRB W8, [X22 + 0xAA1]
	0x03504890 MOV X20, X3
	0x03504894 MOV X21, X2
	0x03504898 MOV X19, X0
	0x0350489C STRB W1, [X31 + 0x1C]
	0x035048A0 TBNZ X8, 0x0, 0x350490C
	0x035048A4 ADRP X0, 0xC2F000
	0x035048A8 LDR X0, [X0 + 0x848]
	0x035048AC BL 0x1C16CF4
	0x035048B0 ADRP X0, 0xBF7000
	0x035048B4 LDR X0, [X0 + 0xBC8]
	0x035048B8 BL 0x1C16CF4
	0x035048BC ADRP X0, 0xBEF000
	0x035048C0 LDR X0, [X0 + 0xAC8]
	0x035048C4 BL 0x1C16CF4
	0x035048C8 ADRP X0, 0xC2F000
	0x035048CC LDR X0, [X0 + 0xF58]
	0x035048D0 BL 0x1C16CF4
	0x035048D4 ADRP X0, 0xC2F000
	0x035048D8 LDR X0, [X0 + 0xF60]
	0x035048DC BL 0x1C16CF4
	0x035048E0 ADRP X0, 0xC2F000
	0x035048E4 LDR X0, [X0 + 0xF68]
	0x035048E8 BL 0x1C16CF4
	0x035048EC ADRP X0, 0xC2F000
	0x035048F0 LDR X0, [X0 + 0xF70]
	0x035048F4 BL 0x1C16CF4
	0x035048F8 ADRP X0, 0xC2F000
	0x035048FC LDR X0, [X0 + 0xF78]
	0x03504900 BL 0x1C16CF4
	0x03504904 MOVZ W8, 0x1
	0x03504908 STRB W8, [X22 + 0xAA1]
	0x0350490C STRB W31, [X31 + 0x18]
	0x03504910 LDR X8, [X19 + 0xC8]
	0x03504914 TBNZ X20, 0x0, 0x3504920
	0x03504918 CBNZ X8, 0x3504938
	0x0350491C B 0x3504CC0
	0x03504920 CBZ X8, 0x3504CC0
	0x03504924 LDRB W9, [X8 + 0xDD]
	0x03504928 CBNZ W9, 0x3504938
	0x0350492C LDRB W9, [X8 + 0x20]
	0x03504930 CMP W9, 0x5
	0x03504934 B.NE 0x3504CD0
	0x03504938 LDRB W8, [X8 + 0x40]
	0x0350493C CMP W8, 0x3
	0x03504940 B.NE 0x35049DC
	0x03504944 MOV X22, X19
	0x03504948 LDRB W8, [X22 + 0x6A]!
	0x0350494C UBFM X9, X20, 0x28, 0x3F
	0x03504950 CMP W8, W9, UXTB
	0x03504954 B.LS 0x3504AA4
	0x03504958 LDR X20, [X19 + 0xE0]
	0x0350495C STRB W31, [X31 + 0x18]
	0x03504960 ADD X1, X31, 0x18
	0x03504964 MOV X0, X20
	0x03504968 MOV X2, X31
	0x0350496C BL 0x33DE64C
	0x03504970 LDR X0, [X19 + 0xC8]
	0x03504974 CBZ X0, 0x3504CC8
	0x03504978 LDRB W1, [X31 + 0x1C]
	0x0350497C LDRB W8, [X31 + 0x2C]
	0x03504980 AND W4, W8, 0x1
	0x03504984 MOVZ W3, 0x2
	0x03504988 MOV X2, X21
	0x0350498C MOV X5, X31
	0x03504990 BL 0x34FD084
	0x03504994 MOV X1, X0
	0x03504998 LDR X0, [X19 + 0xC8]
	0x0350499C CBZ X0, 0x3504CCC
	0x035049A0 LDR X8, [X0]
	0x035049A4 LDR X2, [X31 + 0x28]
	0x035049A8 LDR X9, [X8 + 0x228]
	0x035049AC LDR X3, [X8 + 0x230]
	0x035049B0 BLR X9
	0x035049B4 MOV W19, W0
	0x035049B8 MOV X21, X31
	0x035049BC LDRB W8, [X31 + 0x18]
	0x035049C0 CBZ W8, 0x35049D0
	0x035049C4 MOV X0, X20
	0x035049C8 MOV X1, X31
	0x035049CC BL 0x33E14E4
	0x035049D0 CBZ X21, 0x3504CA8
	0x035049D4 MOV X0, X21
	0x035049D8 BL 0x1C16F18
	0x035049DC LDRB W8, [X19 + 0x40]
	0x035049E0 CBZ W8, 0x3504BD0
	0x035049E4 LDR X20, [X19 + 0x48]
	0x035049E8 ADD X0, X31, 0x1C
	0x035049EC MOV X1, X31
	0x035049F0 BL 0x3319BB4
	0x035049F4 LDR X8, [X19 + 0xC8]
	0x035049F8 CBZ X8, 0x3504CC0
	0x035049FC ADRP X9, 0xC2F000
	0x03504A00 LDR X9, [X9 + 0x848]
	0x03504A04 MOVN X10, 0x0
	0x03504A08 MOV X21, X0
	0x03504A0C ADD X0, X31, 0x0
	0x03504A10 LDR X9, [X9]
	0x03504A14 MOV X1, X31
	0x03504A18 STP X9, X10, [X31]
	0x03504A1C LDRB W8, [X8 + 0x40]
	0x03504A20 STRB W8, [X31 + 0x10]
	0x03504A24 BL 0x33B162C
	0x03504A28 ADRP X8, 0xC2F000
	0x03504A2C LDR X8, [X8 + 0xF78]
	0x03504A30 ADRP X9, 0xC2F000
	0x03504A34 LDR X9, [X9 + 0xF60]
	0x03504A38 MOV X3, X0
	0x03504A3C LDR X8, [X8]
	0x03504A40 MOV X1, X21
	0x03504A44 LDR X2, [X9]
	0x03504A48 MOV X4, X31
	0x03504A4C MOV X0, X8
	0x03504A50 BL 0x32277C4
	0x03504A54 CBZ X20, 0x3504CC0
	0x03504A58 ADRP X10, 0xBF7000
	0x03504A5C LDR X8, [X20]
	0x03504A60 LDR X10, [X10 + 0xBC8]
	0x03504A64 MOV X21, X0
	0x03504A68 LDRH W9, [X8 + 0x12E]
	0x03504A6C LDR X1, [X10]
	0x03504A70 CBZ X9, 0x3504A94
	0x03504A74 LDR X10, [X8 + 0xB0]
	0x03504A78 ADD X10, X10, 0x8
	0x03504A7C LDUR X11, [X10 - 0x8]
	0x03504A80 CMP X11, X1
	0x03504A84 B.EQ 0x3504BB0
	0x03504A88 SUBS X9, X9, 0x1
	0x03504A8C ADD X10, X10, 0x10
	0x03504A90 B.NE 0x3504A7C
	0x03504A94 MOV X0, X20
	0x03504A98 MOV W2, W31
	0x03504A9C BL 0x1C5C788
	0x03504AA0 B 0x3504BBC
	0x03504AA4 LDRB W8, [X19 + 0x40]
	0x03504AA8 CBZ W8, 0x3504C34
	0x03504AAC ADRP X8, 0xBEF000
	0x03504AB0 LDR X20, [X19 + 0x48]
	0x03504AB4 LDR X8, [X8 + 0xAC8]
	0x03504AB8 MOVZ W1, 0x5
	0x03504ABC LDR X0, [X8]
	0x03504AC0 BL 0x1C16D6C
	0x03504AC4 CBZ X0, 0x3504CC0
	0x03504AC8 LDR W8, [X0 + 0x18]
	0x03504ACC MOV X21, X0
	0x03504AD0 CBZ W8, 0x3504CC4
	0x03504AD4 ADRP X8, 0xC2F000
	0x03504AD8 LDR X8, [X8 + 0xF68]

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+48], X29
	003 Move [X31+56], X30
	004 Move [X31+64], X28
	005 Move [X31+72], X27
	006 Move [X31+80], X26
	007 Move [X31+88], X25
	008 Move [X31+96], X24
	009 Move [X31+104], X23
	010 Move [X31+112], X22
	011 Move [X31+120], X21
	012 Move [X31+128], X20
	013 Move [X31+136], X19
	014 Move X19, 0xEDC000
	015 Move W8, [X19+2717]
	016 Move X26, X5
	017 Move X22, X4
	018 Move X23, X3
	019 Move X24, X2
	020 Move X25, X1
	021 Move X21, X0
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {55}
	026 Move X0, 0xBF8000
	027 Move X0, [X0+3576]
	028 Call 0x1C17CF4
	029 Move X0, 0xC30000
	030 Move X0, [X0+3800]
	031 Call 0x1C17CF4
	032 Move X0, 0xBF8000
	033 Move X0, [X0+3016]
	034 Call 0x1C17CF4
	035 Move X0, 0xC30000
	036 Move X0, [X0+2800]
	037 Call 0x1C17CF4
	038 Move X0, 0xBF0000
	039 Move X0, [X0+2512]
	040 Call 0x1C17CF4
	041 Move X0, 0xBF8000
	042 Move X0, [X0+3680]
	043 Call 0x1C17CF4
	044 Move X0, 0xBF4000
	045 Move X0, [X0+2344]
	046 Call 0x1C17CF4
	047 Move X0, 0xC30000
	048 Move X0, [X0+3808]
	049 Call 0x1C17CF4
	050 Move X0, 0xC30000
	051 Move X0, [X0+3816]
	052 Call 0x1C17CF4
	053 Move W8, 1
	054 Move [X19+2717], W8
	055 Move [X31+40], W31
	056 Move [X31+32], X31
	057 Move X19, [X21+216]
	058 Move [X31+44], W31
	059 Add X1, X31, 44
	060 Move X0, X19
	061 Move X2, X31
	062 Call Monitor.Enter, X0, X1
	063 Move X20, [X21+208]
	064 Move [X31+40], W31
	065 Add X1, X31, 40
	066 Move X0, X20
	067 Move X2, X31
	068 Call Monitor.Enter, X0, X1
	069 Move X8, [X21+200]
	070 Compare X8, 0
	071 JumpIfEqual {97}
	072 Move W8, [X8+64]
	073 Compare W8, 0
	074 JumpIfEqual {97}
	075 Move X21, [X21+72]
	076 Compare X21, 0
	077 JumpIfEqual {296}
	078 Move X9, 0xBF8000
	079 Move X8, [X21]
	080 Move X9, [X9+3016]
	081 Move X10, 0xC30000
	082 Move X1, [X9]
	083 Move X10, [X10+3808]
	084 NotImplemented "Instruction LDRH not yet implemented."
	085 Move X22, [X10]
	086 Compare X9, 0
	087 JumpIfEqual {94}
	088 Move X10, [X8+176]
	089 Add X10, X10, 8
	090 NotImplemented "Instruction LDUR not yet implemented."
	091 NotImplemented "Instruction CMP not yet implemented."
	092 Subtract X9, X9, 1
	093 Add X10, X10, 16
	094 Move X0, X21
	095 Move W2, W31
	096 Call 0x1C5D788
	097 Compare X22, 0
	098 JumpIfNotEqual {103}
	099 Move [X21+256], X31
	100 Move [X21+144], X31
	101 Move [X21+141], W31
	102 Move [X21+152], W31
	103 Move X0, X21
	104 Call PhotonPeer.CreatePeerBase, X0
	105 Move X0, [X21+200]
	106 Compare X0, 0
	107 JumpIfEqual {293}
	108 Move X8, [X0]
	109 Move X9, [X8+440]
	110 Move X1, [X8+448]
	111 NotImplemented "Instruction BLR not yet implemented."
	112 Move X8, [X21+200]
	113 Move [X21+124], W31
	114 Compare X8, 0
	115 JumpIfEqual {294}
	116 Move [X8+48], X25
	117 Move [X8+56], X24
	118 Move [X8+168], X26
	119 Move [X8+176], X23
	120 Move [X8+160], X22
	121 Move [X31+32], X31
	122 Move X0, [X21+48]
	123 Compare X0, 0
	124 JumpIfEqual {295}
	125 Move X8, 0xC30000
	126 Move X8, [X8+3800]
	127 Move W1, [X21+132]
	128 Move X3, [X8]
	129 Add X2, X31, 32
	130 Call Dictionary`2<ByteEnum, Object>.TryGetValue, X0, X1, X2
	131 Move TEMP, X0
	132 And TEMP, TEMP, 1
	133 Compare TEMP, 1
	134 JumpIfNotEqual {186}
	135 Move X26, [X31+32]
	136 Move X8, 0xBF0000
	137 Move X29, [X21+200]
	138 Move [X21+56], X26
	139 Move X8, [X8+2512]
	140 Move X0, [X8]
	141 Move W1, 1
	142 Call 0x1C17D6C
	143 Move X27, X0
	144 Compare X0, 0
	145 JumpIfEqual {298}
	146 Move X28, [X21+200]
	147 Compare X28, 0
	148 JumpIfEqual {155}
	149 Move X8, [X27]
	150 Move X1, [X8+64]
	151 Move X0, X28
	152 Call 0x1C17E00
	153 Compare X0, 0
	154 JumpIfEqual {303}
	155 Move W8, [X27+24]
	156 Compare W8, 0
	157 JumpIfEqual {299}
	158 Move [X27+32], X28
	159 Move X0, X26
	160 Move X1, X27
	161 Move X2, X31
	162 Call Activator.CreateInstance, X0, X1
	163 Compare X29, 0
	164 JumpIfEqual {301}
	165 Compare X0, 0
	166 JumpIfEqual {241}
	167 Move X8, 0xC30000
	168 Move X8, [X8+2800]
	169 Move X9, [X0]
	170 Move X1, [X8]
	171 Move W10, [X9+304]
	172 Move W8, [X1+304]
	173 NotImplemented "Instruction CMP not yet implemented."
	174 Move X10, [X9+200]
	175 Subtract X9, X8, 1
	176 Move X10, [X10]
	177 NotImplemented "Instruction CMP not yet implemented."
	178 Move [X29+40], X0
	179 Move X10, [X0]
	180 Move W11, [X10+304]
	181 NotImplemented "Instruction CMP not yet implemented."
	182 Move X8, [X10+200]
	183 Move X8, [X8]
	184 NotImplemented "Instruction CMP not yet implemented."
	185 Call 0x1C181E0
	186 Move X8, 0xBF8000
	187 Move X8, [X8+3576]
	188 Move X22, [X21+200]
	189 Move W9, [X21+132]
	190 Move TEMP, 0
	191 Not TEMP
	192 Move X10, TEMP
	193 Move X8, [X8]
	194 Move [X31+24], W9
	195 Move [X31+8], X8
	196 Move [X31+16], X10
	197 Add X0, X31, 8
	198 Move X1, X31
	199 Call Enum.ToString, X0
	200 Move X8, 0xBF8000
	201 Move X8, [X8+3680]
	202 Move X23, X0
	203 Move X21, [X21+48]
	204 Move X0, [X8]
	205 Move W8, [X0+224]
	206 Compare W8, 0
	207 JumpIfNotEqual {209}
	208 Call 0x1C17DFC
	209 Move X0, X21
	210 Move W1, W31
	211 Move X2, X31
	212 Call SupportClass.DictionaryToString, X0, X1
	213 Move X8, 0xC30000
	214 Move X8, [X8+3816]
	215 Move X9, 0xBF4000
	216 Move X9, [X9+2344]
	217 Move X3, X0
	218 Move X0, [X8]
	219 Move X2, [X9]
	220 Move X1, X23
	221 Move X4, X31
	222 Call String.Concat, X0, X1, X2, X3
	223 Compare X22, 0
	224 JumpIfEqual {300}
	225 Move X2, X0
	226 Move W1, 1
	227 Move X0, X22
	228 Move X3, X31
	229 Call PeerBase.EnqueueDebugReturn, X0, X1, X2
	230 NotImplemented "Instruction LDRSW not yet implemented."
	231 Add X8, X8, X9
	232 Add X0, X8, 312
	233 Move X8, [X0]
	234 Move X3, [X0+8]
	235 Move W1, 2
	236 Move X0, X21
	237 Move X2, X22
	238 NotImplemented "Instruction BLR not yet implemented."
	239 Move X21, X31
	240 Move W24, W31
	241 Move [X29+40], X31
	242 Move X0, [X21+200]
	243 Compare X0, 0
	244 JumpIfEqual {302}
	245 Move X8, [X0]
	246 Move X9, [X8+456]
	247 Move X5, [X8+464]
	248 Move X1, X25
	249 Move X2, X24
	250 Move X3, X23
	251 Move X4, X22
	252 NotImplemented "Instruction BLR not yet implemented."
	253 Move X21, X31
	254 And W24, W0, 1
	255 Move W8, [X31+40]
	256 Compare W8, 0
	257 JumpIfEqual {261}
	258 Move X0, X20
	259 Move X1, X31
	260 Call Monitor.Exit, X0
	261 Compare X21, 0
	262 JumpIfNotEqual {291}
	263 NotImplemented "Instruction CMP not yet implemented."
	264 Move X20, X31
	265 NotImplemented "Instruction CSET not yet implemented."
	266 Move W8, [X31+44]
	267 Compare W8, 0
	268 JumpIfEqual {272}
	269 Move X0, X19
	270 Move X1, X31
	271 Call Monitor.Exit, X0
	272 Compare X20, 0
	273 JumpIfNotEqual {289}
	274 Move W0, W21
	275 Move X20, [X31+128]
	276 Move X19, [X31+136]
	277 Move X22, [X31+112]
	278 Move X21, [X31+120]
	279 Move X24, [X31+96]
	280 Move X23, [X31+104]
	281 Move X26, [X31+80]
	282 Move X25, [X31+88]
	283 Move X28, [X31+64]
	284 Move X27, [X31+72]
	285 Move X29, [X31+48]
	286 Move X30, [X31+56]
	287 Add X31, X31, 144
	288 Return X0
	289 Move X0, X20
	290 Call 0x1C17F18
	291 Move X0, X21
	292 Call 0x1C17F18
	293 Call 0x1C17F20
	294 Call 0x1C17F20
	295 Call 0x1C17F20
	296 Call 0x1C17F20
	297 Call 0x1C181E0
	298 Call 0x1C17F20
	299 Call 0x1C17F28
	300 Call 0x1C17F20
	301 Call 0x1C17F20
	302 Call 0x1C17F20
	303 Call 0x1C17F44
	304 Move X1, X31
	305 Call 0x1C17DEC
	306 Move X23, X1
	307 Move X22, X0
	308 Move W21, W31
	309 Move X23, X1
	310 Move X22, X0
	311 NotImplemented "Instruction CMP not yet implemented."
	312 Move X0, X22
	313 Call 0x3EB2AD0
	314 Move X22, X0
	315 Move X0, 0xBF0000
	316 Move X0, [X0+2000]
	317 Call 0x1C17D08
	318 Move X8, [X22]
	319 Move X1, [X8]
	320 Call 0x1C18270
	321 Move TEMP, X0
	322 And TEMP, TEMP, 1
	323 Compare TEMP, 1
	324 JumpIfNotEqual {429}
	325 Move X24, [X22]
	326 Call 0x3EB2AE0
	327 Move X22, [X21+72]
	328 Move X0, 0xBF0000
	329 Move X0, [X0+2760]
	330 Call 0x1C17D08
	331 Move W1, 6
	332 Call 0x1C17D6C
	333 Move X23, X0
	334 Compare X0, 0
	335 JumpIfEqual {437}
	336 Move X0, 0xC30000
	337 Move X0, [X0+3824]
	338 Call 0x1C17D08
	339 Move W8, [X23+24]
	340 Compare W8, 0
	341 JumpIfEqual {438}
	342 Move [X23+32], X0
	343 Move W25, [X21+132]
	344 Move X0, 0xBF8000
	345 Move X0, [X0+3576]
	346 Call 0x1C17D08
	347 Move TEMP, 0
	348 Not TEMP
	349 Move X8, TEMP
	350 Move [X31+8], X0
	351 Move [X31+16], X8
	352 Move [X31+24], W25
	353 Add X0, X31, 8
	354 Move X1, X31
	355 Call Enum.ToString, X0
	356 Move W8, [X23+24]
	357 NotImplemented "Instruction CMP not yet implemented."
	358 Move [X23+40], X0
	359 Move X0, 0xC30000
	360 Move X0, [X0+3832]
	361 Call 0x1C17D08
	362 Move W8, [X23+24]
	363 NotImplemented "Instruction CMP not yet implemented."
	364 Move [X23+48], X0
	365 Move X21, [X21+48]
	366 Move X0, 0xBF8000
	367 Move X0, [X0+3680]
	368 Call 0x1C17D08
	369 Move W8, [X0+224]
	370 Compare W8, 0
	371 JumpIfNotEqual {373}
	372 Call 0x1C17DFC
	373 Move X0, X21
	374 Move W1, W31
	375 Move X2, X31
	376 Call SupportClass.DictionaryToString, X0, X1
	377 Move W8, [X23+24]
	378 NotImplemented "Instruction CMP not yet implemented."
	379 Move [X23+56], X0
	380 Move X0, 0xC30000
	381 Move X0, [X0+3840]
	382 Call 0x1C17D08
	383 Move W8, [X23+24]
	384 NotImplemented "Instruction CMP not yet implemented."
	385 Move [X23+64], X0
	386 Compare X24, 0
	387 JumpIfEqual {394}
	388 Move X8, [X24]
	389 Move X9, [X8+360]
	390 Move X1, [X8+368]
	391 Move X0, X24
	392 NotImplemented "Instruction BLR not yet implemented."
	393 Move W8, [X23+24]
	394 Move X0, X31
	395 NotImplemented "Instruction CMP not yet implemented."
	396 Move [X23+72], X0
	397 Move X0, X23
	398 Move X1, X31
	399 Call String.Concat, X0
	400 Compare X22, 0
	401 JumpIfEqual {444}
	402 Move X21, X0
	403 Move X0, 0xBF8000
	404 Move X0, [X0+3016]
	405 Call 0x1C17D08
	406 Move X1, X0
	407 Move X8, [X22]
	408 NotImplemented "Instruction LDRH not yet implemented."
	409 Compare X9, 0
	410 JumpIfEqual {417}
	411 Move X10, [X8+176]
	412 Add X10, X10, 8
	413 NotImplemented "Instruction LDUR not yet implemented."
	414 NotImplemented "Instruction CMP not yet implemented."
	415 Subtract X9, X9, 1
	416 Add X10, X10, 16
	417 Move X0, X22
	418 Move W2, W31
	419 Call 0x1C5D788
	420 NotImplemented "Instruction LDRSW not yet implemented."
	421 Add X8, X8, X9
	422 Add X0, X8, 312
	423 Move X8, [X0]
	424 Move X3, [X0+8]
	425 Move W1, 1
	426 Move X0, X22
	427 Move X2, X21
	428 NotImplemented "Instruction BLR not yet implemented."
	429 Move W0, 8
	430 Call 0x3EB2AF0
	431 Move X8, [X22]
	432 Move [X0], X8
	433 Move X1, 0x9B1000
	434 Add X1, X1, 3672
	435 Move X2, X31
	436 Call 0x3EB2B00
	437 Call 0x1C17F20
	438 Call 0x1C17F28
	439 Call 0x1C17F28
	440 Call 0x1C17F28
	441 Call 0x1C17F28
	442 Call 0x1C17F28
	443 Call 0x1C17F28
	444 Call 0x1C17F20
	445 Move X23, X1
	446 Move X22, X0
	447 Call 0x3EB2AE0
	448 Move X23, X1
	449 Move X22, X0
	450 NotImplemented "Instruction CMP not yet implemented."
	451 Move X0, X22
	452 Call 0x3EB2AD0
	453 Move X21, [X0]
	454 Call 0x3EB2AE0
	455 Move X21, X31
	456 Move W8, [X31+40]
	457 Compare W8, 0
	458 JumpIfEqual {462}
	459 Move X0, X20
	460 Move X1, X31
	461 Call Monitor.Exit, X0
	462 Compare X21, 0
	463 JumpIfNotEqual {465}
	464 Move W24, W31
	465 Move X0, X21
	466 Call 0x1C17F18
	467 Move X23, X1
	468 Move X22, X0
	469 Move X23, X1
	470 Move X22, X0
	471 NotImplemented "Instruction CMP not yet implemented."
	472 NotImplemented "Instruction CSET not yet implemented."
	473 NotImplemented "Instruction CMP not yet implemented."
	474 Move X0, X22
	475 Call 0x3EB2AD0
	476 Move X20, [X0]
	477 Call 0x3EB2AE0
	478 Move X20, X31
	479 Move X22, X0
	480 Move W8, [X31+44]
	481 Compare W8, 0
	482 JumpIfEqual {486}
	483 Move X0, X19
	484 Move X1, X31
	485 Call Monitor.Exit, X0
	486 Compare X20, 0
	487 JumpIfNotEqual {490}
	488 Move X0, X22
	489 Call 0x1D2D690
	490 Move X0, X20
	491 Call 0x1C17F18
	492 Call 0x1991590

Method: System.Void CreatePeerBase()

Disassembly:
	0x035041E4 B.NE 0x35041D0
	0x035041E8 MOV X0, X22
	0x035041EC MOV W2, W31
	0x035041F0 BL 0x1C5C788
	0x035041F4 B 0x3504204
	0x035041F8 LDRSW X9, [X10]
	0x035041FC ADD X8, X8, X9, 0x4, LSL
	0x03504200 ADD X0, X8, 0x138
	0x03504204 LDP X8, X3, [X0]
	0x03504208 ADRP X28, 0xC2F000
	0x0350420C ADRP X27, 0xC2F000
	0x03504210 LDR X28, [X28 + 0xF20]
	0x03504214 LDR X27, [X27 + 0xF38]
	0x03504218 MOVZ W1, 0x3
	0x0350421C MOV X0, X22
	0x03504220 MOV X2, X23
	0x03504224 BLR X8
	0x03504228 LDR X0, [X24]
	0x0350422C LDR X22, [X19 + 0x48]
	0x03504230 LDR W8, [X0 + 0xE0]
	0x03504234 CBNZ W8, 0x350423C
	0x03504238 BL 0x1C16DFC
	0x0350423C ADD X0, X31, 0x18
	0x03504240 MOV X1, X31
	0x03504244 BL 0x33176C4
	0x03504248 MOV X23, X0
	0x0350424C ADD X0, X31, 0x1C
	0x03504250 MOV X1, X31
	0x03504254 BL 0x33176C4
	0x03504258 LDR X8, [X28]
	0x0350425C LDR X2, [X27]
	0x03504260 MOV X3, X0
	0x03504264 MOV X1, X23
	0x03504268 MOV X0, X8
	0x0350426C MOV X4, X31
	0x03504270 BL 0x32277C4
	0x03504274 CBZ X22, 0x35044D4
	0x03504278 LDR X8, [X22]
	0x0350427C LDR X1, [X26]
	0x03504280 MOV X23, X0
	0x03504284 LDRH W9, [X8 + 0x12E]
	0x03504288 CBZ X9, 0x35042AC
	0x0350428C LDR X10, [X8 + 0xB0]
	0x03504290 ADD X10, X10, 0x8
	0x03504294 LDUR X11, [X10 - 0x8]
	0x03504298 CMP X11, X1
	0x0350429C B.EQ 0x35042BC
	0x035042A0 SUBS X9, X9, 0x1
	0x035042A4 ADD X10, X10, 0x10
	0x035042A8 B.NE 0x3504294
	0x035042AC MOV X0, X22
	0x035042B0 MOV W2, W31
	0x035042B4 BL 0x1C5C788
	0x035042B8 B 0x35042C8
	0x035042BC LDRSW X9, [X10]
	0x035042C0 ADD X8, X8, X9, 0x4, LSL
	0x035042C4 ADD X0, X8, 0x138
	0x035042C8 LDP X8, X3, [X0]
	0x035042CC MOVZ W1, 0x3
	0x035042D0 MOV X0, X22
	0x035042D4 MOV X2, X23
	0x035042D8 BLR X8
	0x035042DC LDR X22, [X19 + 0x100]
	0x035042E0 CBZ X22, 0x35044D4
	0x035042E4 LDR X8, [X22]
	0x035042E8 LDRB W24, [X31 + 0x18]
	0x035042EC LDR W23, [X19 + 0x88]
	0x035042F0 LDR X1, [X25]
	0x035042F4 LDRH W9, [X8 + 0x12E]
	0x035042F8 CBZ X9, 0x350431C
	0x035042FC LDR X10, [X8 + 0xB0]
	0x03504300 ADD X10, X10, 0x8
	0x03504304 LDUR X11, [X10 - 0x8]
	0x03504308 CMP X11, X1
	0x0350430C B.EQ 0x350432C
	0x03504310 SUBS X9, X9, 0x1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xEDC000
	005 Move W8, [X20+2718]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0xC30000
	012 Move X0, [X0+1888]
	013 Call 0x1C17CF4
	014 Move X0, 0xC30000
	015 Move X0, [X0+3256]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2718], W8
	019 Move W8, [X19+132]
	020 Move X20, [X19+200]
	021 NotImplemented "Instruction CMP not yet implemented."
	022 Move W9, 1
	023 NotImplemented "Instruction LSLV not yet implemented."
	024 Move W9, 50
	025 And W31, W8, W9
	026 Move X8, 0xC30000
	027 Move X8, [X8+3256]
	028 Move X0, [X8]
	029 Compare X20, 0
	030 JumpIfEqual {39}
	031 Move X8, [X20]
	032 Move W9, [X0+304]
	033 Move W10, [X8+304]
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Move X8, [X8+200]
	036 Add X8, X8, X9
	037 NotImplemented "Instruction LDUR not yet implemented."
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Call 0x1C17F10
	040 Move X1, X31
	041 Move X20, X0
	042 Call TPeer..ctor, X0
	043 Move [X19+200], X20
	044 Compare X20, 0
	045 JumpIfEqual {79}
	046 Move W8, [X19+132]
	047 NotImplemented "Instruction CMP not yet implemented."
	048 NotImplemented "Instruction CSET not yet implemented."
	049 Move [X20+328], W8
	050 Compare X20, 0
	051 JumpIfNotEqual {72}
	052 Move X8, 0xC30000
	053 Move X8, [X8+1888]
	054 Move X0, [X8]
	055 Compare X20, 0
	056 JumpIfEqual {65}
	057 Move X8, [X20]
	058 Move W9, [X0+304]
	059 Move W10, [X8+304]
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Move X8, [X8+200]
	062 Add X8, X8, X9
	063 NotImplemented "Instruction LDUR not yet implemented."
	064 NotImplemented "Instruction CMP not yet implemented."
	065 Call 0x1C17F10
	066 Move X1, X31
	067 Move X20, X0
	068 Call EnetPeer..ctor, X0
	069 Move [X19+200], X20
	070 Compare X20, 0
	071 JumpIfEqual {79}
	072 Move [X20+16], X19
	073 Move W8, [X19+132]
	074 Move [X20+32], W8
	075 Move X20, [X31+16]
	076 Move X19, [X31+24]
	077 Move X30, [X31+32]
	078 Return 
	079 Call 0x1C17F20

Method: System.Void Disconnect()

Disassembly:
	0x03504ADC MOVZ W9, 0x5
	0x03504AE0 ADD X10, X31, 0x28
	0x03504AE4 ORR X0, X10, X9, 0x0
	0x03504AE8 LDR X8, [X8]
	0x03504AEC MOV X1, X31
	0x03504AF0 STR X8, [X21 + 0x20]
	0x03504AF4 BL 0x3319BB4
	0x03504AF8 LDR W8, [X21 + 0x18]
	0x03504AFC CMP W8, 0x1
	0x03504B00 B.LS 0x3504CC4
	0x03504B04 CMP W8, 0x2
	0x03504B08 STR X0, [X21 + 0x28]
	0x03504B0C B.EQ 0x3504CC4
	0x03504B10 ADRP X8, 0xC2F000
	0x03504B14 LDR X8, [X8 + 0xF70]
	0x03504B18 MOV X0, X22
	0x03504B1C MOV X1, X31
	0x03504B20 LDR X8, [X8]
	0x03504B24 STR X8, [X21 + 0x30]
	0x03504B28 BL 0x3319BB4
	0x03504B2C LDR W8, [X21 + 0x18]
	0x03504B30 CMP W8, 0x3
	0x03504B34 B.LS 0x3504CC4
	0x03504B38 CMP W8, 0x4
	0x03504B3C STR X0, [X21 + 0x38]
	0x03504B40 B.EQ 0x3504CC4
	0x03504B44 ADRP X8, 0xC2F000
	0x03504B48 LDR X8, [X8 + 0xF58]
	0x03504B4C MOV X0, X21
	0x03504B50 MOV X1, X31
	0x03504B54 LDR X8, [X8]
	0x03504B58 STR X8, [X21 + 0x40]
	0x03504B5C BL 0x32278CC
	0x03504B60 CBZ X20, 0x3504CC0
	0x03504B64 ADRP X10, 0xBF7000
	0x03504B68 LDR X8, [X20]
	0x03504B6C LDR X10, [X10 + 0xBC8]
	0x03504B70 MOV X21, X0
	0x03504B74 LDRH W9, [X8 + 0x12E]
	0x03504B78 LDR X1, [X10]
	0x03504B7C CBZ X9, 0x3504BA0
	0x03504B80 LDR X10, [X8 + 0xB0]
	0x03504B84 ADD X10, X10, 0x8
	0x03504B88 LDUR X11, [X10 - 0x8]
	0x03504B8C CMP X11, X1
	0x03504B90 B.EQ 0x3504C14
	0x03504B94 SUBS X9, X9, 0x1
	0x03504B98 ADD X10, X10, 0x10
	0x03504B9C B.NE 0x3504B88
	0x03504BA0 MOV X0, X20
	0x03504BA4 MOV W2, W31
	0x03504BA8 BL 0x1C5C788
	0x03504BAC B 0x3504C20
	0x03504BB0 LDRSW X9, [X10]
	0x03504BB4 ADD X8, X8, X9, 0x4, LSL
	0x03504BB8 ADD X0, X8, 0x138
	0x03504BBC LDP X8, X3, [X0]
	0x03504BC0 MOVZ W1, 0x1
	0x03504BC4 MOV X0, X20
	0x03504BC8 MOV X2, X21
	0x03504BCC BLR X8
	0x03504BD0 LDR X19, [X19 + 0x48]
	0x03504BD4 CBZ X19, 0x3504CC0
	0x03504BD8 ADRP X10, 0xBF7000
	0x03504BDC LDR X8, [X19]
	0x03504BE0 LDR X10, [X10 + 0xBC8]
	0x03504BE4 LDRH W9, [X8 + 0x12E]
	0x03504BE8 LDR X1, [X10]
	0x03504BEC CBZ X9, 0x3504C74
	0x03504BF0 LDR X10, [X8 + 0xB0]
	0x03504BF4 ADD X10, X10, 0x8
	0x03504BF8 LDUR X11, [X10 - 0x8]
	0x03504BFC CMP X11, X1
	0x03504C00 B.EQ 0x3504C84
	0x03504C04 SUBS X9, X9, 0x1
	0x03504C08 ADD X10, X10, 0x10
	0x03504C0C B.NE 0x3504BF8
	0x03504C10 B 0x3504C74
	0x03504C14 LDRSW X9, [X10]
	0x03504C18 ADD X8, X8, X9, 0x4, LSL
	0x03504C1C ADD X0, X8, 0x138
	0x03504C20 LDP X8, X3, [X0]
	0x03504C24 MOVZ W1, 0x1
	0x03504C28 MOV X0, X20
	0x03504C2C MOV X2, X21
	0x03504C30 BLR X8
	0x03504C34 LDR X19, [X19 + 0x48]
	0x03504C38 CBZ X19, 0x3504CC0
	0x03504C3C ADRP X10, 0xBF7000
	0x03504C40 LDR X8, [X19]
	0x03504C44 LDR X10, [X10 + 0xBC8]
	0x03504C48 LDRH W9, [X8 + 0x12E]
	0x03504C4C LDR X1, [X10]
	0x03504C50 CBZ X9, 0x3504C74
	0x03504C54 LDR X10, [X8 + 0xB0]
	0x03504C58 ADD X10, X10, 0x8
	0x03504C5C LDUR X11, [X10 - 0x8]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+32], X22
	004 Move [X31+40], X21
	005 Move [X31+48], X20
	006 Move [X31+56], X19
	007 Move [X31+24], W31
	008 Move X19, [X0+216]
	009 Move X21, X0
	010 Move [X31+28], W31
	011 Add X1, X31, 28
	012 Move X0, X19
	013 Move X2, X31
	014 Call Monitor.Enter, X0, X1
	015 Move X20, [X21+208]
	016 Move [X31+24], W31
	017 Add X1, X31, 24
	018 Move X0, X20
	019 Move X2, X31
	020 Call Monitor.Enter, X0, X1
	021 Move X0, [X21+200]
	022 Compare X0, 0
	023 JumpIfEqual {55}
	024 Move X8, [X0]
	025 Move X9, [X8+488]
	026 Move X1, [X8+496]
	027 NotImplemented "Instruction BLR not yet implemented."
	028 Move X21, X31
	029 Move W8, [X31+24]
	030 Compare W8, 0
	031 JumpIfEqual {35}
	032 Move X0, X20
	033 Move X1, X31
	034 Call Monitor.Exit, X0
	035 Compare X21, 0
	036 JumpIfNotEqual {56}
	037 Move X20, X31
	038 Move W8, [X31+28]
	039 Compare W8, 0
	040 JumpIfEqual {44}
	041 Move X0, X19
	042 Move X1, X31
	043 Call Monitor.Exit, X0
	044 Compare X20, 0
	045 JumpIfNotEqual {53}
	046 Move X20, [X31+48]
	047 Move X19, [X31+56]
	048 Move X22, [X31+32]
	049 Move X21, [X31+40]
	050 Move X30, [X31+16]
	051 Add X31, X31, 64
	052 Return 
	053 Move X0, X20
	054 Call 0x1C17F18
	055 Call 0x1C17F20
	056 Move X0, X21
	057 Call 0x1C17F18
	058 Move X22, X1
	059 Move X21, X0
	060 Move X22, X1
	061 Move X21, X0
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Move X0, X21
	064 Call 0x3EB2AD0
	065 Move X8, [X0]
	066 Move [X31+8], X8
	067 Call 0x3EB2AE0
	068 Move X21, [X31+8]
	069 Move [X31+8], X31
	070 Move W8, [X31+24]
	071 Compare W8, 0
	072 JumpIfEqual {76}
	073 Move X0, X20
	074 Move X1, X31
	075 Call Monitor.Exit, X0
	076 Move X8, [X31+8]
	077 Compare X8, 0
	078 JumpIfNotEqual {85}
	079 NotImplemented "Instruction CMP not yet implemented."
	080 Move X0, X21
	081 Call 0x3EB2AD0
	082 Move X20, [X0]
	083 Call 0x3EB2AE0
	084 Move X20, X31
	085 Move X0, [X31+8]
	086 Call 0x1C17F18
	087 Move X22, X1
	088 Move X21, X0
	089 Move X21, X0
	090 Move W8, [X31+28]
	091 Compare W8, 0
	092 JumpIfEqual {96}
	093 Move X0, X19
	094 Move X1, X31
	095 Call Monitor.Exit, X0
	096 Compare X20, 0
	097 JumpIfNotEqual {100}
	098 Move X0, X21
	099 Call 0x1D2D690
	100 Move X0, X20
	101 Call 0x1C17F18
	102 Call 0x1991590

Method: System.Void OnDisconnectMessageCall(ExitGames.Client.Photon.DisconnectMessage dm)

Disassembly:
	0x03504C60 CMP X11, X1
	0x03504C64 B.EQ 0x3504C84
	0x03504C68 SUBS X9, X9, 0x1
	0x03504C6C ADD X10, X10, 0x10
	0x03504C70 B.NE 0x3504C5C
	0x03504C74 MOVZ W2, 0x2
	0x03504C78 MOV X0, X19

ISIL:
	001 Move X8, [X0+80]
	002 Compare X8, 0
	003 JumpIfEqual {8}
	004 Move X3, [X8+24]
	005 Move X0, [X8+64]
	006 Move X2, [X8+40]
	007 CallNoReturn X3
	008 Return 

Method: System.Void StopThread()

Disassembly:
	0x03504C7C BL 0x1C5C788
	0x03504C80 B 0x3504C94
	0x03504C84 LDR W9, [X10]
	0x03504C88 ADD W9, W9, 0x2
	0x03504C8C ADD X8, X8, W9, 0x4, SXTW
	0x03504C90 ADD X0, X8, 0x138
	0x03504C94 LDP X8, X2, [X0]
	0x03504C98 MOVZ W1, 0x406
	0x03504C9C MOV X0, X19
	0x03504CA0 BLR X8
	0x03504CA4 MOV W19, W31
	0x03504CA8 AND W0, W19, 0x1
	0x03504CAC LDP X20, X19, [X31 + 0x40]
	0x03504CB0 LDP X22, X21, [X31 + 0x30]
	0x03504CB4 LDR X30, [X31 + 0x20]
	0x03504CB8 ADD X31, X31, 0x50
	0x03504CBC RET
	0x03504CC0 BL 0x1C16F20
	0x03504CC4 BL 0x1C16F28
	0x03504CC8 BL 0x1C16F20
	0x03504CCC BL 0x1C16F20
	0x03504CD0 ADRP X0, 0xBF7000
	0x03504CD4 LDR X0, [X0 + 0x578]
	0x03504CD8 BL 0x1C16D08
	0x03504CDC BL 0x1C16F10
	0x03504CE0 MOV X19, X0
	0x03504CE4 ADRP X0, 0xC2F000
	0x03504CE8 LDR X0, [X0 + 0xF80]
	0x03504CEC BL 0x1C16D08
	0x03504CF0 MOV X1, X0
	0x03504CF4 MOV X0, X19
	0x03504CF8 MOV X2, X31
	0x03504CFC BL 0x3314A68
	0x03504D00 ADRP X0, 0xC2F000
	0x03504D04 LDR X0, [X0 + 0xF88]
	0x03504D08 BL 0x1C16D08
	0x03504D0C MOV X1, X0
	0x03504D10 MOV X0, X19
	0x03504D14 BL 0x1C16DEC
	0x03504D18 B 0x3504D28
	0x03504D1C B 0x3504D28
	0x03504D20 B 0x3504D28
	0x03504D24 B 0x3504D28
	0x03504D28 MOV X19, X0
	0x03504D2C CMP W1, 0x1
	0x03504D30 B.NE 0x3504D4C
	0x03504D34 MOV X0, X19
	0x03504D38 BL 0x3EB1AD0
	0x03504D3C LDR X21, [X0]
	0x03504D40 BL 0x3EB1AE0
	0x03504D44 MOV W19, W31
	0x03504D48 B 0x35049BC
	0x03504D4C MOV X21, X31
	0x03504D50 B 0x3504D58
	0x03504D54 MOV X19, X0
	0x03504D58 LDRB W8, [X31 + 0x18]
	0x03504D5C CBZ W8, 0x3504D6C
	0x03504D60 MOV X0, X20
	0x03504D64 MOV X1, X31
	0x03504D68 BL 0x33E14E4
	0x03504D6C CBNZ X21, 0x3504D78
	0x03504D70 MOV X0, X19
	0x03504D74 BL 0x1D2C690
	0x03504D78 MOV X0, X21
	0x03504D7C BL 0x1C16F18
	0x03504D80 BL 0x1990590
	0x03504D84 SUB X31, X31, 0x50
	0x03504D88 STP X30, X3, [X31 + 0x20]
	0x03504D8C STP X22, X21, [X31 + 0x30]
	0x03504D90 STP X20, X19, [X31 + 0x40]
	0x03504D94 ADRP X22, 0xEDB000
	0x03504D98 LDRB W8, [X22 + 0xAA2]
	0x03504D9C MOV X20, X3
	0x03504DA0 MOV X21, X2
	0x03504DA4 MOV X19, X0
	0x03504DA8 STRB W1, [X31 + 0x1C]
	0x03504DAC TBNZ X8, 0x0, 0x3504E18
	0x03504DB0 ADRP X0, 0xC2F000
	0x03504DB4 LDR X0, [X0 + 0x848]
	0x03504DB8 BL 0x1C16CF4
	0x03504DBC ADRP X0, 0xBF7000
	0x03504DC0 LDR X0, [X0 + 0xBC8]
	0x03504DC4 BL 0x1C16CF4
	0x03504DC8 ADRP X0, 0xBEF000
	0x03504DCC LDR X0, [X0 + 0xAC8]
	0x03504DD0 BL 0x1C16CF4
	0x03504DD4 ADRP X0, 0xC2F000
	0x03504DD8 LDR X0, [X0 + 0xF58]
	0x03504DDC BL 0x1C16CF4
	0x03504DE0 ADRP X0, 0xC2F000
	0x03504DE4 LDR X0, [X0 + 0xF60]
	0x03504DE8 BL 0x1C16CF4
	0x03504DEC ADRP X0, 0xC2F000
	0x03504DF0 LDR X0, [X0 + 0xF68]
	0x03504DF4 BL 0x1C16CF4
	0x03504DF8 ADRP X0, 0xC2F000
	0x03504DFC LDR X0, [X0 + 0xF70]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+32], X22
	004 Move [X31+40], X21
	005 Move [X31+48], X20
	006 Move [X31+56], X19
	007 Move [X31+24], W31
	008 Move X19, [X0+216]
	009 Move X21, X0
	010 Move [X31+28], W31
	011 Add X1, X31, 28
	012 Move X0, X19
	013 Move X2, X31
	014 Call Monitor.Enter, X0, X1
	015 Move X20, [X21+208]
	016 Move [X31+24], W31
	017 Add X1, X31, 24
	018 Move X0, X20
	019 Move X2, X31
	020 Call Monitor.Enter, X0, X1
	021 Move X0, [X21+200]
	022 Compare X0, 0
	023 JumpIfEqual {55}
	024 Move X8, [X0]
	025 Move X9, [X8+504]
	026 Move X1, [X8+512]
	027 NotImplemented "Instruction BLR not yet implemented."
	028 Move X21, X31
	029 Move W8, [X31+24]
	030 Compare W8, 0
	031 JumpIfEqual {35}
	032 Move X0, X20
	033 Move X1, X31
	034 Call Monitor.Exit, X0
	035 Compare X21, 0
	036 JumpIfNotEqual {56}
	037 Move X20, X31
	038 Move W8, [X31+28]
	039 Compare W8, 0
	040 JumpIfEqual {44}
	041 Move X0, X19
	042 Move X1, X31
	043 Call Monitor.Exit, X0
	044 Compare X20, 0
	045 JumpIfNotEqual {53}
	046 Move X20, [X31+48]
	047 Move X19, [X31+56]
	048 Move X22, [X31+32]
	049 Move X21, [X31+40]
	050 Move X30, [X31+16]
	051 Add X31, X31, 64
	052 Return 
	053 Move X0, X20
	054 Call 0x1C17F18
	055 Call 0x1C17F20
	056 Move X0, X21
	057 Call 0x1C17F18
	058 Move X22, X1
	059 Move X21, X0
	060 Move X22, X1
	061 Move X21, X0
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Move X0, X21
	064 Call 0x3EB2AD0
	065 Move X8, [X0]
	066 Move [X31+8], X8
	067 Call 0x3EB2AE0
	068 Move X21, [X31+8]
	069 Move [X31+8], X31
	070 Move W8, [X31+24]
	071 Compare W8, 0
	072 JumpIfEqual {76}
	073 Move X0, X20
	074 Move X1, X31
	075 Call Monitor.Exit, X0
	076 Move X8, [X31+8]
	077 Compare X8, 0
	078 JumpIfNotEqual {85}
	079 NotImplemented "Instruction CMP not yet implemented."
	080 Move X0, X21
	081 Call 0x3EB2AD0
	082 Move X20, [X0]
	083 Call 0x3EB2AE0
	084 Move X20, X31
	085 Move X0, [X31+8]
	086 Call 0x1C17F18
	087 Move X22, X1
	088 Move X21, X0
	089 Move X21, X0
	090 Move W8, [X31+28]
	091 Compare W8, 0
	092 JumpIfEqual {96}
	093 Move X0, X19
	094 Move X1, X31
	095 Call Monitor.Exit, X0
	096 Compare X20, 0
	097 JumpIfNotEqual {100}
	098 Move X0, X21
	099 Call 0x1D2D690
	100 Move X0, X20
	101 Call 0x1C17F18
	102 Call 0x1991590

Method: System.Void FetchServerTimestamp()

Disassembly:
	0x03504E00 BL 0x1C16CF4
	0x03504E04 ADRP X0, 0xC2F000
	0x03504E08 LDR X0, [X0 + 0xF78]
	0x03504E0C BL 0x1C16CF4
	0x03504E10 MOVZ W8, 0x1
	0x03504E14 STRB W8, [X22 + 0xAA2]
	0x03504E18 STRB W31, [X31 + 0x18]
	0x03504E1C LDR X8, [X19 + 0xC8]
	0x03504E20 TBNZ X20, 0x0, 0x3504E2C

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+200]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 Move X8, [X0]
	006 Move X2, [X8+520]
	007 Move X1, [X8+528]
	008 Move X30, [X31+16]
	009 CallNoReturn X2
	010 Call 0x1C17F20

Method: System.Boolean EstablishEncryption()

Disassembly:
	0x03504E24 CBNZ X8, 0x3504E44
	0x03504E28 B 0x35051CC
	0x03504E2C CBZ X8, 0x35051CC
	0x03504E30 LDRB W9, [X8 + 0xDD]
	0x03504E34 CBNZ W9, 0x3504E44
	0x03504E38 LDRB W9, [X8 + 0x20]
	0x03504E3C CMP W9, 0x5
	0x03504E40 B.NE 0x35051DC
	0x03504E44 LDRB W8, [X8 + 0x40]
	0x03504E48 CMP W8, 0x3
	0x03504E4C B.NE 0x3504EE8
	0x03504E50 MOV X22, X19
	0x03504E54 LDRB W8, [X22 + 0x6A]!
	0x03504E58 UBFM X9, X20, 0x28, 0x3F
	0x03504E5C CMP W8, W9, UXTB
	0x03504E60 B.LS 0x3504FB0
	0x03504E64 LDR X20, [X19 + 0xE0]
	0x03504E68 STRB W31, [X31 + 0x18]
	0x03504E6C ADD X1, X31, 0x18
	0x03504E70 MOV X0, X20
	0x03504E74 MOV X2, X31
	0x03504E78 BL 0x33DE64C
	0x03504E7C LDR X0, [X19 + 0xC8]
	0x03504E80 CBZ X0, 0x35051D4
	0x03504E84 LDRB W1, [X31 + 0x1C]
	0x03504E88 LDRB W8, [X31 + 0x2C]
	0x03504E8C AND W4, W8, 0x1
	0x03504E90 MOVZ W3, 0x2
	0x03504E94 MOV X2, X21
	0x03504E98 MOV X5, X31
	0x03504E9C BL 0x34FD310
	0x03504EA0 MOV X1, X0
	0x03504EA4 LDR X0, [X19 + 0xC8]
	0x03504EA8 CBZ X0, 0x35051D8
	0x03504EAC LDR X8, [X0]
	0x03504EB0 LDR X2, [X31 + 0x28]
	0x03504EB4 LDR X9, [X8 + 0x228]
	0x03504EB8 LDR X3, [X8 + 0x230]
	0x03504EBC BLR X9
	0x03504EC0 MOV W19, W0
	0x03504EC4 MOV X21, X31
	0x03504EC8 LDRB W8, [X31 + 0x18]
	0x03504ECC CBZ W8, 0x3504EDC
	0x03504ED0 MOV X0, X20
	0x03504ED4 MOV X1, X31
	0x03504ED8 BL 0x33E14E4
	0x03504EDC CBZ X21, 0x35051B4
	0x03504EE0 MOV X0, X21
	0x03504EE4 BL 0x1C16F18
	0x03504EE8 LDRB W8, [X19 + 0x40]
	0x03504EEC CBZ W8, 0x35050DC
	0x03504EF0 LDR X20, [X19 + 0x48]
	0x03504EF4 ADD X0, X31, 0x1C
	0x03504EF8 MOV X1, X31
	0x03504EFC BL 0x3319BB4
	0x03504F00 LDR X8, [X19 + 0xC8]
	0x03504F04 CBZ X8, 0x35051CC
	0x03504F08 ADRP X9, 0xC2F000
	0x03504F0C LDR X9, [X9 + 0x848]
	0x03504F10 MOVN X10, 0x0
	0x03504F14 MOV X21, X0
	0x03504F18 ADD X0, X31, 0x0
	0x03504F1C LDR X9, [X9]
	0x03504F20 MOV X1, X31
	0x03504F24 STP X9, X10, [X31]
	0x03504F28 LDRB W8, [X8 + 0x40]
	0x03504F2C STRB W8, [X31 + 0x10]
	0x03504F30 BL 0x33B162C
	0x03504F34 ADRP X8, 0xC2F000
	0x03504F38 LDR X8, [X8 + 0xF78]
	0x03504F3C ADRP X9, 0xC2F000
	0x03504F40 LDR X9, [X9 + 0xF60]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xEDC000
	007 Move X20, 0xBF8000
	008 Move W8, [X21+2719]
	009 Move X20, [X20+3808]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {32}
	015 Move X0, 0xBF9000
	016 Move X0, [X0+2368]
	017 Call 0x1C17CF4
	018 Move X0, 0xC30000
	019 Move X0, [X0+3848]
	020 Call 0x1C17CF4
	021 Move X0, 0xBF8000
	022 Move X0, [X0+3808]
	023 Call 0x1C17CF4
	024 Move X0, 0xBF8000
	025 Move X0, [X0+3680]
	026 Call 0x1C17CF4
	027 Move X0, 0xBF0000
	028 Move X0, [X0+2440]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X21+2719], W8
	032 Move X0, [X20]
	033 Move W8, [X0+224]
	034 Compare W8, 0
	035 JumpIfNotEqual {38}
	036 Call 0x1C17DFC
	037 Move X0, [X20]
	038 Move X8, [X0+184]
	039 Move W8, [X8+24]
	040 Compare W8, 0
	041 JumpIfEqual {74}
	042 Move X8, 0xBF9000
	043 Move X8, [X8+2368]
	044 Move X20, 0xC30000
	045 Move X22, 0xBF8000
	046 Move X21, 0xBF0000
	047 Move X0, [X8]
	048 Move X20, [X20+3848]
	049 Move X22, [X22+3680]
	050 Move X21, [X21+2440]
	051 Call 0x1C17F10
	052 Move X2, [X20]
	053 Move X1, X19
	054 Move X3, X31
	055 Move X20, X0
	056 Call Func`1<Boolean>..ctor, X0, X1, X2
	057 Move X0, [X22]
	058 Move W8, [X0+224]
	059 Compare W8, 0
	060 JumpIfNotEqual {62}
	061 Call 0x1C17DFC
	062 Move X2, [X21]
	063 Move W1, 100
	064 Move X0, X20
	065 Move X3, X31
	066 Call SupportClass.StartBackgroundCalls, X0, X1, X2
	067 Move X20, [X31+32]
	068 Move X19, [X31+40]
	069 Move X22, [X31+16]
	070 Move X21, [X31+24]
	071 Move W0, 1
	072 Move X30, [X31+48]
	073 Return X0
	074 Move X0, [X19+200]
	075 Compare X0, 0
	076 JumpIfEqual {86}
	077 Move X1, [X19+208]
	078 Move X20, [X31+32]
	079 Move X19, [X31+40]
	080 Move X22, [X31+16]
	081 Move X21, [X31+24]
	082 Move X2, X31
	083 Move X30, [X31+48]
	084 Call PeerBase.ExchangeKeysForEncryption, X0, X1
	085 Return X0
	086 Call 0x1C17F20

Method: System.Boolean InitDatagramEncryption(System.Byte[] encryptionSecret, System.Byte[] hmacSecret, System.Boolean randomizedSequenceNumbers = False, System.Boolean chainingModeGCM = False)

Disassembly:
	0x03504F44 MOV X3, X0
	0x03504F48 LDR X8, [X8]
	0x03504F4C MOV X1, X21
	0x03504F50 LDR X2, [X9]
	0x03504F54 MOV X4, X31
	0x03504F58 MOV X0, X8
	0x03504F5C BL 0x32277C4
	0x03504F60 CBZ X20, 0x35051CC
	0x03504F64 ADRP X10, 0xBF7000
	0x03504F68 LDR X8, [X20]
	0x03504F6C LDR X10, [X10 + 0xBC8]
	0x03504F70 MOV X21, X0
	0x03504F74 LDRH W9, [X8 + 0x12E]
	0x03504F78 LDR X1, [X10]
	0x03504F7C CBZ X9, 0x3504FA0
	0x03504F80 LDR X10, [X8 + 0xB0]
	0x03504F84 ADD X10, X10, 0x8
	0x03504F88 LDUR X11, [X10 - 0x8]
	0x03504F8C CMP X11, X1
	0x03504F90 B.EQ 0x35050BC
	0x03504F94 SUBS X9, X9, 0x1
	0x03504F98 ADD X10, X10, 0x10
	0x03504F9C B.NE 0x3504F88
	0x03504FA0 MOV X0, X20
	0x03504FA4 MOV W2, W31
	0x03504FA8 BL 0x1C5C788
	0x03504FAC B 0x35050C8
	0x03504FB0 LDRB W8, [X19 + 0x40]
	0x03504FB4 CBZ W8, 0x3505140
	0x03504FB8 ADRP X8, 0xBEF000
	0x03504FBC LDR X20, [X19 + 0x48]
	0x03504FC0 LDR X8, [X8 + 0xAC8]
	0x03504FC4 MOVZ W1, 0x5
	0x03504FC8 LDR X0, [X8]
	0x03504FCC BL 0x1C16D6C
	0x03504FD0 CBZ X0, 0x35051CC
	0x03504FD4 LDR W8, [X0 + 0x18]
	0x03504FD8 MOV X21, X0
	0x03504FDC CBZ W8, 0x35051D0
	0x03504FE0 ADRP X8, 0xC2F000
	0x03504FE4 LDR X8, [X8 + 0xF68]
	0x03504FE8 MOVZ W9, 0x5
	0x03504FEC ADD X10, X31, 0x28
	0x03504FF0 ORR X0, X10, X9, 0x0
	0x03504FF4 LDR X8, [X8]
	0x03504FF8 MOV X1, X31
	0x03504FFC STR X8, [X21 + 0x20]
	0x03505000 BL 0x3319BB4
	0x03505004 LDR W8, [X21 + 0x18]
	0x03505008 CMP W8, 0x1
	0x0350500C B.LS 0x35051D0
	0x03505010 CMP W8, 0x2
	0x03505014 STR X0, [X21 + 0x28]
	0x03505018 B.EQ 0x35051D0
	0x0350501C ADRP X8, 0xC2E000
	0x03505020 LDR X8, [X8 + 0xF70]
	0x03505024 MOV X0, X22
	0x03505028 MOV X1, X31
	0x0350502C LDR X8, [X8]
	0x03505030 STR X8, [X21 + 0x30]
	0x03505034 BL 0x3319BB4
	0x03505038 LDR W8, [X21 + 0x18]
	0x0350503C CMP W8, 0x3
	0x03505040 B.LS 0x35051D0
	0x03505044 CMP W8, 0x4
	0x03505048 STR X0, [X21 + 0x38]
	0x0350504C B.EQ 0x35051D0
	0x03505050 ADRP X8, 0xC2E000
	0x03505054 LDR X8, [X8 + 0xF58]
	0x03505058 MOV X0, X21
	0x0350505C MOV X1, X31
	0x03505060 LDR X8, [X8]
	0x03505064 STR X8, [X21 + 0x40]
	0x03505068 BL 0x32278CC
	0x0350506C CBZ X20, 0x35051CC
	0x03505070 ADRP X10, 0xBF6000
	0x03505074 LDR X8, [X20]
	0x03505078 LDR X10, [X10 + 0xBC8]
	0x0350507C MOV X21, X0
	0x03505080 LDRH W9, [X8 + 0x12E]
	0x03505084 LDR X1, [X10]
	0x03505088 CBZ X9, 0x35050AC
	0x0350508C LDR X10, [X8 + 0xB0]
	0x03505090 ADD X10, X10, 0x8
	0x03505094 LDUR X11, [X10 - 0x8]
	0x03505098 CMP X11, X1
	0x0350509C B.EQ 0x3505120
	0x035050A0 SUBS X9, X9, 0x1
	0x035050A4 ADD X10, X10, 0x10
	0x035050A8 B.NE 0x3505094
	0x035050AC MOV X0, X20
	0x035050B0 MOV W2, W31
	0x035050B4 BL 0x1C5C788
	0x035050B8 B 0x350512C
	0x035050BC LDRSW X9, [X10]
	0x035050C0 ADD X8, X8, X9, 0x4, LSL
	0x035050C4 ADD X0, X8, 0x138
	0x035050C8 LDP X8, X3, [X0]
	0x035050CC MOVZ W1, 0x1
	0x035050D0 MOV X0, X20
	0x035050D4 MOV X2, X21
	0x035050D8 BLR X8
	0x035050DC LDR X19, [X19 + 0x48]
	0x035050E0 CBZ X19, 0x35051CC
	0x035050E4 ADRP X10, 0xBF6000
	0x035050E8 LDR X8, [X19]
	0x035050EC LDR X10, [X10 + 0xBC8]
	0x035050F0 LDRH W9, [X8 + 0x12E]
	0x035050F4 LDR X1, [X10]
	0x035050F8 CBZ X9, 0x3505180
	0x035050FC LDR X10, [X8 + 0xB0]
	0x03505100 ADD X10, X10, 0x8
	0x03505104 LDUR X11, [X10 - 0x8]
	0x03505108 CMP X11, X1
	0x0350510C B.EQ 0x3505190
	0x03505110 SUBS X9, X9, 0x1
	0x03505114 ADD X10, X10, 0x10
	0x03505118 B.NE 0x3505104
	0x0350511C B 0x3505180
	0x03505120 LDRSW X9, [X10]
	0x03505124 ADD X8, X8, X9, 0x4, LSL
	0x03505128 ADD X0, X8, 0x138
	0x0350512C LDP X8, X3, [X0]
	0x03505130 MOVZ W1, 0x1
	0x03505134 MOV X0, X20
	0x03505138 MOV X2, X21
	0x0350513C BLR X8
	0x03505140 LDR X19, [X19 + 0x48]
	0x03505144 CBZ X19, 0x35051CC
	0x03505148 ADRP X10, 0xBF6000
	0x0350514C LDR X8, [X19]
	0x03505150 LDR X10, [X10 + 0xBC8]
	0x03505154 LDRH W9, [X8 + 0x12E]
	0x03505158 LDR X1, [X10]
	0x0350515C CBZ X9, 0x3505180
	0x03505160 LDR X10, [X8 + 0xB0]
	0x03505164 ADD X10, X10, 0x8
	0x03505168 LDUR X11, [X10 - 0x8]
	0x0350516C CMP X11, X1
	0x03505170 B.EQ 0x3505190
	0x03505174 SUBS X9, X9, 0x1
	0x03505178 ADD X10, X10, 0x10
	0x0350517C B.NE 0x3505168
	0x03505180 MOVZ W2, 0x2
	0x03505184 MOV X0, X19
	0x03505188 BL 0x1C5C788
	0x0350518C B 0x35051A0
	0x03505190 LDR W9, [X10]
	0x03505194 ADD W9, W9, 0x2
	0x03505198 ADD X8, X8, W9, 0x4, SXTW
	0x0350519C ADD X0, X8, 0x138
	0x035051A0 LDP X8, X2, [X0]
	0x035051A4 MOVZ W1, 0x406
	0x035051A8 MOV X0, X19
	0x035051AC BLR X8
	0x035051B0 MOV W19, W31
	0x035051B4 AND W0, W19, 0x1
	0x035051B8 LDP X20, X19, [X31 + 0x40]
	0x035051BC LDP X22, X21, [X31 + 0x30]
	0x035051C0 LDR X30, [X31 + 0x20]
	0x035051C4 ADD X31, X31, 0x50
	0x035051C8 RET
	0x035051CC BL 0x1C16F20
	0x035051D0 BL 0x1C16F28
	0x035051D4 BL 0x1C16F20
	0x035051D8 BL 0x1C16F20
	0x035051DC ADRP X0, 0xBF6000
	0x035051E0 LDR X0, [X0 + 0x578]
	0x035051E4 BL 0x1C16D08
	0x035051E8 BL 0x1C16F10
	0x035051EC MOV X19, X0
	0x035051F0 ADRP X0, 0xC2E000
	0x035051F4 LDR X0, [X0 + 0xF80]
	0x035051F8 BL 0x1C16D08
	0x035051FC MOV X1, X0
	0x03505200 MOV X0, X19
	0x03505204 MOV X2, X31
	0x03505208 BL 0x3314A68
	0x0350520C ADRP X0, 0xC2E000
	0x03505210 LDR X0, [X0 + 0xF90]
	0x03505214 BL 0x1C16D08
	0x03505218 MOV X1, X0
	0x0350521C MOV X0, X19
	0x03505220 BL 0x1C16DEC
	0x03505224 B 0x3505234
	0x03505228 B 0x3505234
	0x0350522C B 0x3505234
	0x03505230 B 0x3505234
	0x03505234 MOV X19, X0
	0x03505238 CMP W1, 0x1
	0x0350523C B.NE 0x3505258
	0x03505240 MOV X0, X19
	0x03505244 BL 0x3EB1AD0
	0x03505248 LDR X21, [X0]
	0x0350524C BL 0x3EB1AE0
	0x03505250 MOV W19, W31
	0x03505254 B 0x3504EC8
	0x03505258 MOV X21, X31
	0x0350525C B 0x3505264
	0x03505260 MOV X19, X0
	0x03505264 LDRB W8, [X31 + 0x18]
	0x03505268 CBZ W8, 0x3505278
	0x0350526C MOV X0, X20
	0x03505270 MOV X1, X31
	0x03505274 BL 0x33E14E4
	0x03505278 CBNZ X21, 0x3505284
	0x0350527C MOV X0, X19
	0x03505280 BL 0x1D2C690
	0x03505284 MOV X0, X21
	0x03505288 BL 0x1C16F18
	0x0350528C BL 0x1990590
	0x03505290 STR X30, [X31 - 0x40]!
	0x03505294 STP X24, X23, [X31 + 0x10]
	0x03505298 STP X22, X21, [X31 + 0x20]
	0x0350529C STP X20, X19, [X31 + 0x30]
	0x035052A0 ADRP X24, 0xEDA000
	0x035052A4 ADRP X23, 0xBF6000
	0x035052A8 LDRB W8, [X24 + 0xAA3]
	0x035052AC LDR X23, [X23 + 0xF00]
	0x035052B0 MOV X19, X3
	0x035052B4 MOV X20, X2
	0x035052B8 MOV W21, W1
	0x035052BC MOV X22, X0
	0x035052C0 TBNZ X8, 0x0, 0x35052D8
	0x035052C4 ADRP X0, 0xBF6000
	0x035052C8 LDR X0, [X0 + 0xF00]
	0x035052CC BL 0x1C16CF4
	0x035052D0 MOVZ W8, 0x1
	0x035052D4 STRB W8, [X24 + 0xAA3]
	0x035052D8 LDR X0, [X23]
	0x035052DC LDR W8, [X0 + 0xE0]
	0x035052E0 CBNZ W8, 0x35052E8
	0x035052E4 BL 0x1C16DFC
	0x035052E8 MOV X0, X22
	0x035052EC MOV W1, W21
	0x035052F0 MOV X2, X20
	0x035052F4 MOV X3, X19
	0x035052F8 LDP X20, X19, [X31 + 0x30]
	0x035052FC LDP X22, X21, [X31 + 0x20]
	0x03505300 LDP X24, X23, [X31 + 0x10]
	0x03505304 LDR X30, [X31], #0x40
	0x03505308 B 0x350530C
	0x0350530C STR X30, [X31 - 0x40]!
	0x03505310 STP X24, X23, [X31 + 0x10]
	0x03505314 STP X22, X21, [X31 + 0x20]
	0x03505318 STP X20, X19, [X31 + 0x30]
	0x0350531C ADRP X23, 0xEDA000
	0x03505320 ADRP X24, 0xBF6000
	0x03505324 LDRB W8, [X23 + 0xAAD]
	0x03505328 LDR X24, [X24 + 0xF00]
	0x0350532C MOV X21, X3
	0x03505330 MOV X22, X2
	0x03505334 MOV W20, W1
	0x03505338 MOV X19, X0
	0x0350533C TBNZ X8, 0x0, 0x3505390
	0x03505340 ADRP X0, 0xC2E000
	0x03505344 LDR X0, [X0 + 0xF98]
	0x03505348 BL 0x1C16CF4
	0x0350534C ADRP X0, 0xC2E000
	0x03505350 LDR X0, [X0 + 0xFA0]
	0x03505354 BL 0x1C16CF4
	0x03505358 ADRP X0, 0xC2E000
	0x0350535C LDR X0, [X0 + 0xFA8]
	0x03505360 BL 0x1C16CF4
	0x03505364 ADRP X0, 0xC2E000
	0x03505368 LDR X0, [X0 + 0xFB0]
	0x0350536C BL 0x1C16CF4
	0x03505370 ADRP X0, 0xC2E000
	0x03505374 LDR X0, [X0 + 0xFB8]
	0x03505378 BL 0x1C16CF4
	0x0350537C ADRP X0, 0xBF6000
	0x03505380 LDR X0, [X0 + 0xF00]
	0x03505384 BL 0x1C16CF4
	0x03505388 MOVZ W8, 0x1
	0x0350538C STRB W8, [X23 + 0xAAD]
	0x03505390 LDR X0, [X24]
	0x03505394 LDR W8, [X0 + 0xE0]
	0x03505398 CBNZ W8, 0x35053A4
	0x0350539C BL 0x1C16DFC
	0x035053A0 LDR X0, [X24]
	0x035053A4 LDR X8, [X0 + 0xB8]
	0x035053A8 LDR X0, [X8 + 0x8]
	0x035053AC CBZ X0, 0x35054A8
	0x035053B0 ADRP X8, 0xC2E000
	0x035053B4 LDR X8, [X8 + 0xFB0]
	0x035053B8 MOV W1, W20
	0x035053BC LDR X2, [X8]
	0x035053C0 BL 0x29D3728
	0x035053C4 TBNZ X0, 0x0, 0x3505400
	0x035053C8 LDR X0, [X24]
	0x035053CC LDR W8, [X0 + 0xE0]
	0x035053D0 CBNZ W8, 0x35053DC
	0x035053D4 BL 0x1C16DFC
	0x035053D8 LDR X0, [X24]
	0x035053DC LDR X8, [X0 + 0xB8]
	0x035053E0 LDR X0, [X8]
	0x035053E4 CBZ X0, 0x35054A8
	0x035053E8 ADRP X8, 0xC2E000
	0x035053EC LDR X8, [X8 + 0xFB8]
	0x035053F0 MOV X1, X19
	0x035053F4 LDR X2, [X8]
	0x035053F8 BL 0x2AA528C
	0x035053FC TBZ X0, 0x0, 0x3505408
	0x03505400 MOV W0, W31
	0x03505404 B 0x3505494
	0x03505408 ADRP X8, 0xC2E000
	0x0350540C LDR X8, [X8 + 0xF98]
	0x03505410 LDR X0, [X8]
	0x03505414 BL 0x1C16F10
	0x03505418 MOV X1, X31
	0x0350541C MOV X23, X0
	0x03505420 BL 0x33BDD8C
	0x03505424 STRB W20, [X23 + 0x10]
	0x03505428 STP X19, X22, [X23 + 0x18]
	0x0350542C STR X21, [X23 + 0x28]
	0x03505430 LDR X0, [X24]
	0x03505434 LDR W8, [X0 + 0xE0]
	0x03505438 CBNZ W8, 0x3505444
	0x0350543C BL 0x1C16DFC
	0x03505440 LDR X0, [X24]
	0x03505444 LDR X8, [X0 + 0xB8]
	0x03505448 LDR X0, [X8 + 0x8]
	0x0350544C CBZ X0, 0x35054A8
	0x03505450 ADRP X8, 0xC2E000
	0x03505454 LDR X8, [X8 + 0xFA0]
	0x03505458 MOV W1, W20
	0x0350545C MOV X2, X23
	0x03505460 LDR X3, [X8]
	0x03505464 BL 0x29D3534
	0x03505468 LDR X8, [X24]
	0x0350546C LDR X8, [X8 + 0xB8]
	0x03505470 LDR X0, [X8]
	0x03505474 CBZ X0, 0x35054A8
	0x03505478 ADRP X8, 0xC2E000
	0x0350547C LDR X8, [X8 + 0xFA8]
	0x03505480 MOV X1, X19
	0x03505484 MOV X2, X23
	0x03505488 LDR X3, [X8]
	0x0350548C BL 0x2AA5098
	0x03505490 MOVZ W0, 0x1
	0x03505494 LDP X20, X19, [X31 + 0x30]
	0x03505498 LDP X22, X21, [X31 + 0x20]
	0x0350549C LDP X24, X23, [X31 + 0x10]
	0x035054A0 LDR X30, [X31], #0x40
	0x035054A4 RET
	0x035054A8 BL 0x1C16F20
	0x035054AC STR X30, [X31 - 0x40]!
	0x035054B0 STP X24, X23, [X31 + 0x10]
	0x035054B4 STP X22, X21, [X31 + 0x20]
	0x035054B8 STP X20, X19, [X31 + 0x30]
	0x035054BC ADRP X24, 0xEDA000
	0x035054C0 ADRP X23, 0xBF6000
	0x035054C4 LDRB W8, [X24 + 0xAA4]
	0x035054C8 LDR X23, [X23 + 0xF00]
	0x035054CC MOV X19, X3
	0x035054D0 MOV X20, X2
	0x035054D4 MOV W21, W1
	0x035054D8 MOV X22, X0
	0x035054DC TBNZ X8, 0x0, 0x35054F4
	0x035054E0 ADRP X0, 0xBF6000
	0x035054E4 LDR X0, [X0 + 0xF00]
	0x035054E8 BL 0x1C16CF4
	0x035054EC MOVZ W8, 0x1
	0x035054F0 STRB W8, [X24 + 0xAA4]
	0x035054F4 LDR X0, [X23]
	0x035054F8 LDR W8, [X0 + 0xE0]
	0x035054FC CBNZ W8, 0x3505504
	0x03505500 BL 0x1C16DFC
	0x03505504 MOV X0, X22
	0x03505508 MOV W1, W21
	0x0350550C MOV X2, X20
	0x03505510 MOV X3, X19
	0x03505514 LDP X20, X19, [X31 + 0x30]
	0x03505518 LDP X22, X21, [X31 + 0x20]
	0x0350551C LDP X24, X23, [X31 + 0x10]
	0x03505520 LDR X30, [X31], #0x40
	0x03505524 B 0x3505528
	0x03505528 STR X30, [X31 - 0x40]!
	0x0350552C STP X24, X23, [X31 + 0x10]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X30
	003 Move [X31+32], X28
	004 Move [X31+40], X27
	005 Move [X31+48], X26
	006 Move [X31+56], X25
	007 Move [X31+64], X24
	008 Move [X31+72], X23
	009 Move [X31+80], X22
	010 Move [X31+88], X21
	011 Move [X31+96], X20
	012 Move [X31+104], X19
	013 And W8, W3, 1
	014 Move [X31+28], W8
	015 And W8, W4, 1
	016 Move X23, 0xEDC000
	017 Move [X31+24], W8
	018 Move X22, 0xBF0000
	019 Move W9, [X23+2720]
	020 Move X22, [X22+1728]
	021 Move X21, X2
	022 Move X20, X1
	023 Move X19, X0
	024 Move TEMP, X9
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {60}
	028 Move X0, 0xBF0000
	029 Move X0, [X0+2904]
	030 Call 0x1C17CF4
	031 Move X0, 0xC30000
	032 Move X0, [X0+3856]
	033 Call 0x1C17CF4
	034 Move X0, 0xBF8000
	035 Move X0, [X0+3288]
	036 Call 0x1C17CF4
	037 Move X0, 0xBF8000
	038 Move X0, [X0+3016]
	039 Call 0x1C17CF4
	040 Move X0, 0xBF0000
	041 Move X0, [X0+1728]
	042 Call 0x1C17CF4
	043 Move X0, 0xC30000
	044 Move X0, [X0+3864]
	045 Call 0x1C17CF4
	046 Move X0, 0xC30000
	047 Move X0, [X0+3872]
	048 Call 0x1C17CF4
	049 Move X0, 0xC30000
	050 Move X0, [X0+3880]
	051 Call 0x1C17CF4
	052 Move X0, 0xC30000
	053 Move X0, [X0+3888]
	054 Call 0x1C17CF4
	055 Move X0, 0xC30000
	056 Move X0, [X0+3896]
	057 Call 0x1C17CF4
	058 Move W8, 1
	059 Move [X23+2720], W8
	060 Move X0, [X22]
	061 Move [X31+12], W31
	062 Move X22, [X19+248]
	063 Move W8, [X0+224]
	064 Compare W8, 0
	065 JumpIfNotEqual {67}
	066 Call 0x1C17DFC
	067 Move X26, 0xBF7000
	068 Move X25, 0xBF7000
	069 Move X26, [X26+3016]
	070 Move X25, [X25+3288]
	071 Move X0, X22
	072 Move X1, X31
	073 Move X2, X31
	074 Call Type.op_Inequality, X0, X1
	075 Move TEMP, X0
	076 And TEMP, TEMP, 1
	077 Compare TEMP, 1
	078 JumpIfNotEqual {131}
	079 Move X0, [X19+248]
	080 Move X1, X31
	081 Call Activator.CreateInstance, X0
	082 Move X22, X0
	083 Compare X0, 0
	084 JumpIfEqual {101}
	085 Move X23, [X25]
	086 Move X0, X22
	087 Move X1, X23
	088 Call 0x1C17E00
	089 Compare X0, 0
	090 JumpIfEqual {322}
	091 Move [X19+256], X0
	092 Move X23, [X25]
	093 Move X0, X22
	094 Move X1, X23
	095 Call 0x1C17E00
	096 Compare X0, 0
	097 JumpIfEqual {325}
	098 Move X8, [X19+256]
	099 Compare X8, 0
	100 JumpIfNotEqual {131}
	101 Move [X19+256], X31
	102 Move X22, [X19+72]
	103 Compare X22, 0
	104 JumpIfEqual {328}
	105 Move X10, 0xC2F000
	106 Move X8, [X22]
	107 Move X1, [X26]
	108 Move X10, [X10+3880]
	109 NotImplemented "Instruction LDRH not yet implemented."
	110 Move X23, [X10]
	111 Compare X9, 0
	112 JumpIfEqual {119}
	113 Move X10, [X8+176]
	114 Add X10, X10, 8
	115 NotImplemented "Instruction LDUR not yet implemented."
	116 NotImplemented "Instruction CMP not yet implemented."
	117 Subtract X9, X9, 1
	118 Add X10, X10, 16
	119 Move X0, X22
	120 Move W2, W31
	121 Call 0x1C5D788
	122 NotImplemented "Instruction LDRSW not yet implemented."
	123 Add X8, X8, X9
	124 Add X0, X8, 312
	125 Move X8, [X0]
	126 Move X3, [X0+8]
	127 Move W1, 2
	128 Move X0, X22
	129 Move X2, X23
	130 NotImplemented "Instruction BLR not yet implemented."
	131 Move X23, [X19+256]
	132 Compare X23, 0
	133 JumpIfNotEqual {144}
	134 Move X8, 0xC2F000
	135 Move X8, [X8+3856]
	136 Move X0, [X8]
	137 Call 0x1C17F10
	138 Move X1, X31
	139 Move X23, X0
	140 Call EncryptorNet..ctor, X0
	141 Move [X19+256], X23
	142 Compare X23, 0
	143 JumpIfEqual {304}
	144 Move X24, 0xC2F000
	145 Move X27, 0xC2F000
	146 Move X22, [X19+72]
	147 Move X24, [X24+3888]
	148 Move X27, [X27+3864]
	149 Move X0, X23
	150 Move X1, X31
	151 Call "il2cpp_vm_object_is_inst", X0
	152 Move X23, [X24]
	153 Compare X0, 0
	154 JumpIfEqual {160}
	155 Move X8, [X0]
	156 Move X9, [X8+360]
	157 Move X1, [X8+368]
	158 NotImplemented "Instruction BLR not yet implemented."
	159 Move X24, X0
	160 Move X24, X31
	161 Move W8, 2
	162 Add X0, X31, 12
	163 Move X1, X31
	164 Move [X31+12], W8
	165 Call Int32.ToString, X0
	166 Move X2, [X27]
	167 Move X3, X0
	168 Move X0, X23
	169 Move X1, X24
	170 Move X4, X31
	171 Call String.Concat, X0, X1, X2, X3
	172 Compare X22, 0
	173 JumpIfEqual {383}
	174 Move X8, [X22]
	175 Move X24, 0xBEF000
	176 Move X1, [X26]
	177 Move X23, X0
	178 NotImplemented "Instruction LDRH not yet implemented."
	179 Move X24, [X24+2904]
	180 Compare X9, 0
	181 JumpIfEqual {188}
	182 Move X10, [X8+176]
	183 Add X10, X10, 8
	184 NotImplemented "Instruction LDUR not yet implemented."
	185 NotImplemented "Instruction CMP not yet implemented."
	186 Subtract X9, X9, 1
	187 Add X10, X10, 16
	188 Move X0, X22
	189 Move W2, W31
	190 Call 0x1C5D788
	191 NotImplemented "Instruction LDRSW not yet implemented."
	192 Add X8, X8, X9
	193 Add X0, X8, 312
	194 Move X8, [X0]
	195 Move X3, [X0+8]
	196 Move X28, 0xC2F000
	197 Move X27, 0xC2F000
	198 Move X28, [X28+3872]
	199 Move X27, [X27+3896]
	200 Move W1, 3
	201 Move X0, X22
	202 Move X2, X23
	203 NotImplemented "Instruction BLR not yet implemented."
	204 Move X0, [X24]
	205 Move X22, [X19+72]
	206 Move W8, [X0+224]
	207 Compare W8, 0
	208 JumpIfNotEqual {210}
	209 Call 0x1C17DFC
	210 Add X0, X31, 24
	211 Move X1, X31
	212 Call Boolean.ToString, X0
	213 Move X23, X0
	214 Add X0, X31, 28
	215 Move X1, X31
	216 Call Boolean.ToString, X0
	217 Move X8, [X28]
	218 Move X2, [X27]
	219 Move X3, X0
	220 Move X1, X23
	221 Move X0, X8
	222 Move X4, X31
	223 Call String.Concat, X0, X1, X2, X3
	224 Compare X22, 0
	225 JumpIfEqual {383}
	226 Move X8, [X22]
	227 Move X1, [X26]
	228 Move X23, X0
	229 NotImplemented "Instruction LDRH not yet implemented."
	230 Compare X9, 0
	231 JumpIfEqual {238}
	232 Move X10, [X8+176]
	233 Add X10, X10, 8
	234 NotImplemented "Instruction LDUR not yet implemented."
	235 NotImplemented "Instruction CMP not yet implemented."
	236 Subtract X9, X9, 1
	237 Add X10, X10, 16
	238 Move X0, X22
	239 Move W2, W31
	240 Call 0x1C5D788
	241 NotImplemented "Instruction LDRSW not yet implemented."
	242 Add X8, X8, X9
	243 Add X0, X8, 312
	244 Move X8, [X0]
	245 Move X3, [X0+8]
	246 Move W1, 3
	247 Move X0, X22
	248 Move X2, X23
	249 NotImplemented "Instruction BLR not yet implemented."
	250 Move X22, [X19+256]
	251 Compare X22, 0
	252 JumpIfEqual {383}
	253 Move X8, [X22]
	254 Move W24, [X31+24]
	255 Move W23, [X19+136]
	256 Move X1, [X25]
	257 NotImplemented "Instruction LDRH not yet implemented."
	258 Compare X9, 0
	259 JumpIfEqual {266}
	260 Move X10, [X8+176]
	261 Add X10, X10, 8
	262 NotImplemented "Instruction LDUR not yet implemented."
	263 NotImplemented "Instruction CMP not yet implemented."
	264 Subtract X9, X9, 1
	265 Add X10, X10, 16
	266 Move X0, X22
	267 Move W2, W31
	268 Call 0x1C5D788
	269 NotImplemented "Instruction LDRSW not yet implemented."
	270 Add X8, X8, X9
	271 Add X0, X8, 312
	272 Move X8, [X0]
	273 Move X6, [X0+8]
	274 NotImplemented "Instruction CMP not yet implemented."
	275 NotImplemented "Instruction CSET not yet implemented."
	276 Move X0, X22
	277 Move X1, X20
	278 Move X2, X21
	279 Move X3, X31
	280 Move W5, W23
	281 NotImplemented "Instruction BLR not yet implemented."
	282 Move W8, [X31+28]
	283 Compare W8, 0
	284 JumpIfEqual {290}
	285 Move W8, 1
	286 Move [X19+144], X20
	287 Move [X19+141], W8
	288 Move W8, [X31+24]
	289 Move [X19+152], W8
	290 Move X20, [X31+96]
	291 Move X19, [X31+104]
	292 Move X22, [X31+80]
	293 Move X21, [X31+88]
	294 Move X24, [X31+64]
	295 Move X23, [X31+72]
	296 Move X26, [X31+48]
	297 Move X25, [X31+56]
	298 Move X28, [X31+32]
	299 Move X27, [X31+40]
	300 Move X30, [X31+16]
	301 Move W0, 1
	302 Add X31, X31, 112
	303 Return X0
	304 Move X0, 0xBFA000
	305 Move X0, [X0+2584]
	306 Call 0x1C17D08
	307 Call 0x1C17F10
	308 Move X19, X0
	309 Move X0, 0xC2F000
	310 Move X0, [X0+3904]
	311 Call 0x1C17D08
	312 Move X1, X0
	313 Move X0, X19
	314 Move X2, X31
	315 Call NullReferenceException..ctor, X0, X1
	316 Move X0, 0xC2F000
	317 Move X0, [X0+3912]
	318 Call 0x1C17D08
	319 Move X1, X0
	320 Move X0, X19
	321 Call 0x1C17DEC
	322 Move X0, X22
	323 Move X1, X23
	324 Call 0x1C181E0
	325 Move X0, X22
	326 Move X1, X23
	327 Call 0x1C181E0
	328 Call 0x1C17F20
	329 Move X22, X0
	330 NotImplemented "Instruction CMP not yet implemented."
	331 Move X0, X22
	332 Call 0x3EB2AD0
	333 Move X22, X0
	334 Move X0, 0xBEF000
	335 Move X0, [X0+2000]
	336 Call 0x1C17D08
	337 Move X8, [X22]
	338 Move X1, [X8]
	339 Call 0x1C18270
	340 Move TEMP, X0
	341 And TEMP, TEMP, 1
	342 Compare TEMP, 1
	343 JumpIfNotEqual {393}
	344 Move X24, [X22]
	345 Call 0x3EB2AE0
	346 Move X0, 0xC2F000
	347 Move X22, [X19+72]
	348 Move X0, [X0+3920]
	349 Call 0x1C17D08
	350 Move X23, X0
	351 Compare X24, 0
	352 JumpIfEqual {359}
	353 Move X8, [X24]
	354 Move X0, X24
	355 Move X9, [X8+360]
	356 Move X1, [X8+368]
	357 NotImplemented "Instruction BLR not yet implemented."
	358 Move X1, X0
	359 Move X1, X31
	360 Move X0, X23
	361 Move X2, X31
	362 Call String.Concat, X0, X1
	363 Compare X22, 0
	364 JumpIfEqual {383}
	365 Move X23, X0
	366 Move X0, 0xBF7000
	367 Move X0, [X0+3016]
	368 Call 0x1C17D08
	369 Move X8, [X22]
	370 Move X1, X0
	371 NotImplemented "Instruction LDRH not yet implemented."
	372 Compare X9, 0
	373 JumpIfEqual {380}
	374 Move X10, [X8+176]
	375 Add X10, X10, 8
	376 NotImplemented "Instruction LDUR not yet implemented."
	377 NotImplemented "Instruction CMP not yet implemented."
	378 Subtract X9, X9, 1
	379 Add X10, X10, 16
	380 Move X0, X22
	381 Move W2, W31
	382 Call 0x1C5D788
	383 Call 0x1C17F20
	384 NotImplemented "Instruction LDRSW not yet implemented."
	385 Add X8, X8, X9
	386 Add X0, X8, 312
	387 Move X8, [X0]
	388 Move X3, [X0+8]
	389 Move W1, 2
	390 Move X0, X22
	391 Move X2, X23
	392 NotImplemented "Instruction BLR not yet implemented."
	393 Move W0, 8
	394 Call 0x3EB2AF0
	395 Move X8, [X22]
	396 Move [X0], X8
	397 Move X1, 0x9B0000
	398 Add X1, X1, 3672
	399 Move X2, X31
	400 Call 0x3EB2B00
	401 Move X22, X0
	402 Call 0x3EB2AE0
	403 Move X0, X22
	404 Call 0x1D2D690
	405 Call 0x1991590

Method: System.Void InitPayloadEncryption(System.Byte[] secret)

Disassembly:
	0x03505530 STP X22, X21, [X31 + 0x20]
	0x03505534 STP X20, X19, [X31 + 0x30]

ISIL:
	001 Move [X0+240], X1
	002 Return 

Method: System.Void Service()

Disassembly:
	0x03505538 ADRP X23, 0xEDA000
	0x0350553C ADRP X24, 0xBF6000
	0x03505540 LDRB W8, [X23 + 0xAAE]
	0x03505544 LDR X24, [X24 + 0xF00]
	0x03505548 MOV X21, X3
	0x0350554C MOV X22, X2
	0x03505550 MOV W20, W1
	0x03505554 MOV X19, X0
	0x03505558 TBNZ X8, 0x0, 0x35055AC
	0x0350555C ADRP X0, 0xC2E000
	0x03505560 LDR X0, [X0 + 0xF98]
	0x03505564 BL 0x1C16CF4
	0x03505568 ADRP X0, 0xC2E000
	0x0350556C LDR X0, [X0 + 0xFA0]
	0x03505570 BL 0x1C16CF4

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Move X8, [X19]
	005 Move X0, X19
	006 Move X9, [X8+536]
	007 Move X1, [X8+544]
	008 NotImplemented "Instruction BLR not yet implemented."
	009 Move TEMP, X0
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {4}
	013 Move X8, [X19]
	014 Move X0, X19
	015 Move X9, [X8+504]
	016 Move X1, [X8+512]
	017 NotImplemented "Instruction BLR not yet implemented."
	018 Move TEMP, X0
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {13}
	022 Move X30, [X31+16]
	023 Move X19, [X31+24]
	024 Return 

Method: System.Boolean SendOutgoingCommands()

Disassembly:
	0x03505574 ADRP X0, 0xC2E000
	0x03505578 LDR X0, [X0 + 0xFA8]
	0x0350557C BL 0x1C16CF4
	0x03505580 ADRP X0, 0xC2E000
	0x03505584 LDR X0, [X0 + 0xFB0]
	0x03505588 BL 0x1C16CF4
	0x0350558C ADRP X0, 0xC2E000
	0x03505590 LDR X0, [X0 + 0xFB8]
	0x03505594 BL 0x1C16CF4
	0x03505598 ADRP X0, 0xBF6000
	0x0350559C LDR X0, [X0 + 0xF00]
	0x035055A0 BL 0x1C16CF4
	0x035055A4 MOVZ W8, 0x1
	0x035055A8 STRB W8, [X23 + 0xAAE]
	0x035055AC LDR X0, [X24]
	0x035055B0 LDR W8, [X0 + 0xE0]
	0x035055B4 CBNZ W8, 0x35055C0
	0x035055B8 BL 0x1C16DFC
	0x035055BC LDR X0, [X24]
	0x035055C0 LDR X8, [X0 + 0xB8]
	0x035055C4 LDR X0, [X8 + 0x8]
	0x035055C8 CBZ X0, 0x35056C4
	0x035055CC ADRP X8, 0xC2E000
	0x035055D0 LDR X8, [X8 + 0xFB0]
	0x035055D4 MOV W1, W20
	0x035055D8 LDR X2, [X8]
	0x035055DC BL 0x29D3728
	0x035055E0 TBNZ X0, 0x0, 0x350561C
	0x035055E4 LDR X0, [X24]
	0x035055E8 LDR W8, [X0 + 0xE0]
	0x035055EC CBNZ W8, 0x35055F8
	0x035055F0 BL 0x1C16DFC
	0x035055F4 LDR X0, [X24]
	0x035055F8 LDR X8, [X0 + 0xB8]
	0x035055FC LDR X0, [X8]
	0x03505600 CBZ X0, 0x35056C4
	0x03505604 ADRP X8, 0xC2E000
	0x03505608 LDR X8, [X8 + 0xFB8]
	0x0350560C MOV X1, X19
	0x03505610 LDR X2, [X8]
	0x03505614 BL 0x2AA528C
	0x03505618 TBZ X0, 0x0, 0x3505624
	0x0350561C MOV W0, W31
	0x03505620 B 0x35056B0
	0x03505624 ADRP X8, 0xC2E000
	0x03505628 LDR X8, [X8 + 0xF98]
	0x0350562C LDR X0, [X8]
	0x03505630 BL 0x1C16F10
	0x03505634 MOV X1, X31
	0x03505638 MOV X23, X0
	0x0350563C BL 0x33BDD8C
	0x03505640 STR X19, [X23 + 0x18]
	0x03505644 STRB W20, [X23 + 0x10]
	0x03505648 STP X22, X21, [X23 + 0x30]
	0x0350564C LDR X0, [X24]
	0x03505650 LDR W8, [X0 + 0xE0]
	0x03505654 CBNZ W8, 0x3505660
	0x03505658 BL 0x1C16DFC
	0x0350565C LDR X0, [X24]
	0x03505660 LDR X8, [X0 + 0xB8]
	0x03505664 LDR X0, [X8 + 0x8]
	0x03505668 CBZ X0, 0x35056C4
	0x0350566C ADRP X8, 0xC2E000
	0x03505670 LDR X8, [X8 + 0xFA0]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move W8, [X0+192]
	007 Move X20, X0
	008 Compare W8, 0
	009 JumpIfEqual {15}
	010 Move X0, [X20+176]
	011 Compare X0, 0
	012 JumpIfEqual {48}
	013 Move X1, X31
	014 Call TrafficStatsGameLevel.SendOutgoingCommandsCalled, X0
	015 Move X19, [X20+208]
	016 Move [X31+12], W31
	017 Add X1, X31, 12
	018 Move X0, X19
	019 Move X2, X31
	020 Call Monitor.Enter, X0, X1
	021 Move X0, [X20+200]
	022 Compare X0, 0
	023 JumpIfEqual {47}
	024 Move X8, [X0]
	025 Move X1, [X8+576]
	026 Move X9, [X8+568]
	027 NotImplemented "Instruction BLR not yet implemented."
	028 Move W21, W0
	029 Move X20, X31
	030 Move W8, [X31+12]
	031 Compare W8, 0
	032 JumpIfEqual {36}
	033 Move X0, X19
	034 Move X1, X31
	035 Call Monitor.Exit, X0
	036 Compare X20, 0
	037 JumpIfNotEqual {45}
	038 And W0, W21, 1
	039 Move X20, [X31+32]
	040 Move X19, [X31+40]
	041 Move X30, [X31+16]
	042 Move X21, [X31+24]
	043 Add X31, X31, 48
	044 Return X0
	045 Move X0, X20
	046 Call 0x1C17F18
	047 Call 0x1C17F20
	048 Call 0x1C17F20
	049 Move X21, X0
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Move X0, X21
	052 Call 0x3EB2AD0
	053 Move X20, [X0]
	054 Call 0x3EB2AE0
	055 Move W21, W31
	056 Move X20, X31
	057 Move X21, X0
	058 Move W8, [X31+12]
	059 Compare W8, 0
	060 JumpIfEqual {64}
	061 Move X0, X19
	062 Move X1, X31
	063 Call Monitor.Exit, X0
	064 Compare X20, 0
	065 JumpIfNotEqual {68}
	066 Move X0, X21
	067 Call 0x1D2D690
	068 Move X0, X20
	069 Call 0x1C17F18
	070 Call 0x1991590

Method: System.Boolean SendAcksOnly()

Disassembly:
	0x03505674 MOV W1, W20
	0x03505678 MOV X2, X23
	0x0350567C LDR X3, [X8]
	0x03505680 BL 0x29D3534
	0x03505684 LDR X8, [X24]
	0x03505688 LDR X8, [X8 + 0xB8]
	0x0350568C LDR X0, [X8]
	0x03505690 CBZ X0, 0x35056C4
	0x03505694 ADRP X8, 0xC2E000
	0x03505698 LDR X8, [X8 + 0xFA8]
	0x0350569C MOV X1, X19
	0x035056A0 MOV X2, X23
	0x035056A4 LDR X3, [X8]
	0x035056A8 BL 0x2AA5098
	0x035056AC MOVZ W0, 0x1
	0x035056B0 LDP X20, X19, [X31 + 0x30]
	0x035056B4 LDP X22, X21, [X31 + 0x20]
	0x035056B8 LDP X24, X23, [X31 + 0x10]
	0x035056BC LDR X30, [X31], #0x40
	0x035056C0 RET
	0x035056C4 BL 0x1C16F20
	0x035056C8 STR X30, [X31 - 0x20]!
	0x035056CC STP X20, X19, [X31 + 0x10]
	0x035056D0 ADRP X19, 0xEDA000
	0x035056D4 ADRP X20, 0xBF6000
	0x035056D8 LDRB W8, [X19 + 0xAA5]
	0x035056DC LDR X20, [X20 + 0xEE0]
	0x035056E0 TBNZ X8, 0x0, 0x35056F8
	0x035056E4 ADRP X0, 0xBF6000
	0x035056E8 LDR X0, [X0 + 0xEE0]
	0x035056EC BL 0x1C16CF4
	0x035056F0 MOVZ W8, 0x1
	0x035056F4 STRB W8, [X19 + 0xAA5]
	0x035056F8 LDR X8, [X20]
	0x035056FC LDP X20, X19, [X31 + 0x10]
	0x03505700 MOVZ W9, 0x4B0
	0x03505704 LDR X8, [X8 + 0xB8]
	0x03505708 STRH W31, [X8 + 0x10]
	0x0350570C STRB W31, [X8 + 0x12]
	0x03505710 STR W9, [X8 + 0x14]
	0x03505714 STRB W31, [X8 + 0x18]
	0x03505718 LDR X30, [X31], #0x20
	0x0350571C RET
	0x03505720 STR X30, [X31 - 0x10]!
	0x03505724 MOV X8, X0
	0x03505728 LDR X0, [X0 + 0xC8]
	0x0350572C CBZ X0, 0x3505748
	0x03505730 LDR X1, [X8 + 0xD0]
	0x03505734 MOV X2, X31
	0x03505738 BL 0x34FE87C
	0x0350573C MOV W0, W31
	0x03505740 LDR X30, [X31], #0x10
	0x03505744 RET
	0x03505748 BL 0x1C16F20
	0x0350574C MOV X1, X31
	0x03505750 B 0x33BDD8C
	0x03505754 STR X30, [X31 - 0x10]!
	0x03505758 STR X31, [X31 + 0x8]
	0x0350575C LDR X0, [X0 + 0x20]
	0x03505760 CBZ X0, 0x350577C
	0x03505764 ADD X2, X31, 0x8
	0x03505768 MOV X3, X31
	0x0350576C BL 0x34FC574
	0x03505770 LDR X0, [X31 + 0x8]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move W8, [X0+192]
	007 Move X20, X0
	008 Compare W8, 0
	009 JumpIfEqual {15}
	010 Move X0, [X20+176]
	011 Compare X0, 0
	012 JumpIfEqual {48}
	013 Move X1, X31
	014 Call TrafficStatsGameLevel.SendOutgoingCommandsCalled, X0
	015 Move X19, [X20+208]
	016 Move [X31+12], W31
	017 Add X1, X31, 12
	018 Move X0, X19
	019 Move X2, X31
	020 Call Monitor.Enter, X0, X1
	021 Move X0, [X20+200]
	022 Compare X0, 0
	023 JumpIfEqual {47}
	024 Move X8, [X0]
	025 Move X1, [X8+592]
	026 Move X9, [X8+584]
	027 NotImplemented "Instruction BLR not yet implemented."
	028 Move W21, W0
	029 Move X20, X31
	030 Move W8, [X31+12]
	031 Compare W8, 0
	032 JumpIfEqual {36}
	033 Move X0, X19
	034 Move X1, X31
	035 Call Monitor.Exit, X0
	036 Compare X20, 0
	037 JumpIfNotEqual {45}
	038 And W0, W21, 1
	039 Move X20, [X31+32]
	040 Move X19, [X31+40]
	041 Move X30, [X31+16]
	042 Move X21, [X31+24]
	043 Add X31, X31, 48
	044 Return X0
	045 Move X0, X20
	046 Call 0x1C17F18
	047 Call 0x1C17F20
	048 Call 0x1C17F20
	049 Move X21, X0
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Move X0, X21
	052 Call 0x3EB2AD0
	053 Move X20, [X0]
	054 Call 0x3EB2AE0
	055 Move W21, W31
	056 Move X20, X31
	057 Move X21, X0
	058 Move W8, [X31+12]
	059 Compare W8, 0
	060 JumpIfEqual {64}
	061 Move X0, X19
	062 Move X1, X31
	063 Call Monitor.Exit, X0
	064 Compare X20, 0
	065 JumpIfNotEqual {68}
	066 Move X0, X21
	067 Call 0x1D2D690
	068 Move X0, X20
	069 Call 0x1C17F18
	070 Call 0x1991590

Method: System.Boolean DispatchIncomingCommands()

Disassembly:
	0x03505774 LDR X30, [X31], #0x10
	0x03505778 RET
	0x0350577C BL 0x1C16F20
	0x03505780 STR X30, [X31 - 0x10]!
	0x03505784 LDR X0, [X0 + 0x20]
	0x03505788 CBZ X0, 0x3505798
	0x0350578C MOV X3, X31
	0x03505790 LDR X30, [X31], #0x10
	0x03505794 B 0x34FC3A4
	0x03505798 BL 0x1C16F20
	0x0350579C SUB X31, X31, 0x40
	0x035057A0 STP X30, X23, [X31 + 0x10]
	0x035057A4 STP X22, X21, [X31 + 0x20]
	0x035057A8 STP X20, X19, [X31 + 0x30]
	0x035057AC ADRP X23, 0xEDA000
	0x035057B0 ADRP X20, 0xBEF000
	0x035057B4 ADRP X22, 0xBF2000
	0x035057B8 ADRP X21, 0xC2E000
	0x035057BC LDRB W8, [X23 + 0xAA6]
	0x035057C0 LDR X20, [X20 + 0x9D8]
	0x035057C4 LDR X22, [X22 + 0x628]
	0x035057C8 LDR X21, [X21 + 0xFC0]
	0x035057CC MOV X19, X0
	0x035057D0 TBNZ X8, 0x0, 0x3505800
	0x035057D4 ADRP X0, 0xBEF000
	0x035057D8 LDR X0, [X0 + 0x9D8]
	0x035057DC BL 0x1C16CF4
	0x035057E0 ADRP X0, 0xBF2000
	0x035057E4 LDR X0, [X0 + 0x628]
	0x035057E8 BL 0x1C16CF4
	0x035057EC ADRP X0, 0xC2E000
	0x035057F0 LDR X0, [X0 + 0xFC0]
	0x035057F4 BL 0x1C16CF4
	0x035057F8 MOVZ W8, 0x1
	0x035057FC STRB W8, [X23 + 0xAA6]
	0x03505800 LDRB W8, [X19 + 0x10]
	0x03505804 LDR X0, [X20]
	0x03505808 ADD X1, X31, 0xC
	0x0350580C STRB W8, [X31 + 0xC]
	0x03505810 BL 0x1C16E04
	0x03505814 MOV X20, X0
	0x03505818 LDRH W8, [X19 + 0x12]
	0x0350581C LDR X0, [X22]
	0x03505820 ADD X1, X31, 0x8
	0x03505824 STRH W8, [X31 + 0x8]
	0x03505828 BL 0x1C16E04
	0x0350582C LDR X8, [X21]
	0x03505830 MOV X2, X0
	0x03505834 MOV X1, X20
	0x03505838 MOV X3, X31
	0x0350583C MOV X0, X8
	0x03505840 BL 0x3227BD4
	0x03505844 LDP X20, X19, [X31 + 0x30]
	0x03505848 LDP X22, X21, [X31 + 0x20]
	0x0350584C LDP X30, X23, [X31 + 0x10]
	0x03505850 ADD X31, X31, 0x40
	0x03505854 RET
	0x03505858 STR X30, [X31 - 0x30]!
	0x0350585C STP X22, X21, [X31 + 0x10]
	0x03505860 STP X20, X19, [X31 + 0x20]
	0x03505864 ADRP X20, 0xEDA000
	0x03505868 ADRP X22, 0xBEE000
	0x0350586C ADRP X21, 0xBEF000
	0x03505870 LDRB W8, [X20 + 0xAA7]
	0x03505874 LDR X22, [X22 + 0x9D0]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move W8, [X0+192]
	007 Move X20, X0
	008 Compare W8, 0
	009 JumpIfEqual {15}
	010 Move X0, [X20+176]
	011 Compare X0, 0
	012 JumpIfEqual {49}
	013 Move X1, X31
	014 Call TrafficStatsGameLevel.DispatchIncomingCommandsCalled, X0
	015 Move X19, [X20+216]
	016 Move [X31+12], W31
	017 Add X1, X31, 12
	018 Move X0, X19
	019 Move X2, X31
	020 Call Monitor.Enter, X0, X1
	021 Move X0, [X20+200]
	022 Compare X0, 0
	023 JumpIfEqual {48}
	024 Move X8, [X0]
	025 Move [X0+72], W31
	026 Move X1, [X8+624]
	027 Move X9, [X8+616]
	028 NotImplemented "Instruction BLR not yet implemented."
	029 Move W21, W0
	030 Move X20, X31
	031 Move W8, [X31+12]
	032 Compare W8, 0
	033 JumpIfEqual {37}
	034 Move X0, X19
	035 Move X1, X31
	036 Call Monitor.Exit, X0
	037 Compare X20, 0
	038 JumpIfNotEqual {46}
	039 And W0, W21, 1
	040 Move X20, [X31+32]
	041 Move X19, [X31+40]
	042 Move X30, [X31+16]
	043 Move X21, [X31+24]
	044 Add X31, X31, 48
	045 Return X0
	046 Move X0, X20
	047 Call 0x1C17F18
	048 Call 0x1C17F20
	049 Call 0x1C17F20
	050 Move X21, X0
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Move X0, X21
	053 Call 0x3EB2AD0
	054 Move X20, [X0]
	055 Call 0x3EB2AE0
	056 Move W21, W31
	057 Move X20, X31
	058 Move X21, X0
	059 Move W8, [X31+12]
	060 Compare W8, 0
	061 JumpIfEqual {65}
	062 Move X0, X19
	063 Move X1, X31
	064 Call Monitor.Exit, X0
	065 Compare X20, 0
	066 JumpIfNotEqual {69}
	067 Move X0, X21
	068 Call 0x1D2D690
	069 Move X0, X20
	070 Call 0x1C17F18
	071 Call 0x1991590

Method: System.Boolean SendOperation(System.Byte operationCode, System.Collections.Generic.Dictionary`2<System.Byte, System.Object> operationParameters, ExitGames.Client.Photon.SendOptions sendOptions)

Disassembly:
	0x03505878 LDR X21, [X21 + 0x9D8]
	0x0350587C MOV X19, X0
	0x03505880 TBNZ X8, 0x0, 0x35058C8
	0x03505884 ADRP X0, 0xBEF000
	0x03505888 LDR X0, [X0 + 0x9D8]
	0x0350588C BL 0x1C16CF4
	0x03505890 ADRP X0, 0xBF2000
	0x03505894 LDR X0, [X0 + 0x628]
	0x03505898 BL 0x1C16CF4
	0x0350589C ADRP X0, 0xBEE000
	0x035058A0 LDR X0, [X0 + 0x9D0]
	0x035058A4 BL 0x1C16CF4
	0x035058A8 ADRP X0, 0xBF6000
	0x035058AC LDR X0, [X0 + 0xE60]
	0x035058B0 BL 0x1C16CF4
	0x035058B4 ADRP X0, 0xC2E000
	0x035058B8 LDR X0, [X0 + 0xFC8]
	0x035058BC BL 0x1C16CF4
	0x035058C0 MOVZ W8, 0x1
	0x035058C4 STRB W8, [X20 + 0xAA7]
	0x035058C8 LDR X0, [X22]
	0x035058CC MOVZ W1, 0x4
	0x035058D0 BL 0x1C16D6C
	0x035058D4 MOV X20, X0
	0x035058D8 LDRB W8, [X19 + 0x10]
	0x035058DC LDR X0, [X21]
	0x035058E0 ADD X1, X31, 0xC
	0x035058E4 STRB W8, [X31 + 0xC]
	0x035058E8 BL 0x1C16E04
	0x035058EC CBZ X20, 0x3505A2C
	0x035058F0 MOV X21, X0
	0x035058F4 CBZ X0, 0x350590C
	0x035058F8 LDR X8, [X20]
	0x035058FC MOV X0, X21
	0x03505900 LDR X1, [X8 + 0x40]
	0x03505904 BL 0x1C16E00
	0x03505908 CBZ X0, 0x3505A20
	0x0350590C LDR W8, [X20 + 0x18]
	0x03505910 CBZ W8, 0x3505A1C
	0x03505914 ADRP X8, 0xBF2000
	0x03505918 LDR X8, [X8 + 0x628]
	0x0350591C STR X21, [X20 + 0x20]
	0x03505920 LDRH W9, [X19 + 0x12]
	0x03505924 ADD X1, X31, 0x8
	0x03505928 LDR X0, [X8]
	0x0350592C STRH W9, [X31 + 0x8]
	0x03505930 BL 0x1C16E04
	0x03505934 MOV X21, X0
	0x03505938 CBZ X0, 0x3505950
	0x0350593C LDR X8, [X20]
	0x03505940 MOV X0, X21
	0x03505944 LDR X1, [X8 + 0x40]
	0x03505948 BL 0x1C16E00
	0x0350594C CBZ X0, 0x3505A20
	0x03505950 LDR W8, [X20 + 0x18]
	0x03505954 CMP W8, 0x1
	0x03505958 B.LS 0x3505A1C
	0x0350595C STR X21, [X20 + 0x28]
	0x03505960 LDR X0, [X19 + 0x20]
	0x03505964 ADRP X21, 0xBF6000
	0x03505968 LDR X21, [X21 + 0xE60]
	0x0350596C MOV X1, X31
	0x03505970 BL 0x34FB810
	0x03505974 LDR X8, [X21]
	0x03505978 MOV X21, X0
	0x0350597C LDR W9, [X8 + 0xE0]
	0x03505980 CBNZ W9, 0x350598C
	0x03505984 MOV X0, X8
	0x03505988 BL 0x1C16DFC
	0x0350598C MOVZ W1, 0x1
	0x03505990 MOV X0, X21
	0x03505994 MOV X2, X31
	0x03505998 BL 0x3521028
	0x0350599C MOV X21, X0
	0x035059A0 CBZ X0, 0x35059B8
	0x035059A4 LDR X8, [X20]
	0x035059A8 MOV X0, X21
	0x035059AC LDR X1, [X8 + 0x40]
	0x035059B0 BL 0x1C16E00
	0x035059B4 CBZ X0, 0x3505A20
	0x035059B8 LDR W8, [X20 + 0x18]
	0x035059BC CMP W8, 0x2
	0x035059C0 B.LS 0x3505A1C
	0x035059C4 STR X21, [X20 + 0x30]
	0x035059C8 LDR X19, [X19 + 0x18]
	0x035059CC CBZ X19, 0x35059E8
	0x035059D0 LDR X8, [X20]
	0x035059D4 MOV X0, X19
	0x035059D8 LDR X1, [X8 + 0x40]
	0x035059DC BL 0x1C16E00
	0x035059E0 CBZ X0, 0x3505A20
	0x035059E4 LDR W8, [X20 + 0x18]
	0x035059E8 CMP W8, 0x3
	0x035059EC B.LS 0x3505A1C
	0x035059F0 ADRP X8, 0xC2E000
	0x035059F4 LDR X8, [X8 + 0xFC8]
	0x035059F8 STR X19, [X20 + 0x38]
	0x035059FC MOV X1, X20
	0x03505A00 MOV X2, X31
	0x03505A04 LDR X0, [X8]
	0x03505A08 BL 0x3227C5C
	0x03505A0C LDP X20, X19, [X31 + 0x20]
	0x03505A10 LDP X22, X21, [X31 + 0x10]
	0x03505A14 LDR X30, [X31], #0x30
	0x03505A18 RET
	0x03505A1C BL 0x1C16F28
	0x03505A20 BL 0x1C16F44
	0x03505A24 MOV X1, X31
	0x03505A28 BL 0x1C16DEC
	0x03505A2C BL 0x1C16F20
	0x03505A30 MOV X1, X31
	0x03505A34 B 0x33BDD8C
	0x03505A38 MOV X1, X31
	0x03505A3C B 0x33BDD8C
	0x03505A40 STP X30, X21, [X31 - 0x20]!
	0x03505A44 STP X20, X19, [X31 + 0x10]
	0x03505A48 ADRP X21, 0xEDA000
	0x03505A4C ADRP X20, 0xBF7000
	0x03505A50 LDRB W8, [X21 + 0xAA8]
	0x03505A54 LDR X20, [X20 + 0x6F8]
	0x03505A58 MOV X19, X0
	0x03505A5C TBNZ X8, 0x0, 0x3505A74
	0x03505A60 ADRP X0, 0xBF7000
	0x03505A64 LDR X0, [X0 + 0x6F8]
	0x03505A68 BL 0x1C16CF4
	0x03505A6C MOVZ W8, 0x1
	0x03505A70 STRB W8, [X21 + 0xAA8]
	0x03505A74 MOVZ W8, 0xFE
	0x03505A78 MOVN W9, 0x0
	0x03505A7C MOVZ W10, 0xF5
	0x03505A80 MOV X0, X19
	0x03505A84 MOV X1, X31
	0x03505A88 STRB W8, [X19 + 0x20]
	0x03505A8C STR W9, [X19 + 0x24]
	0x03505A90 STRB W10, [X19 + 0x28]
	0x03505A94 BL 0x33BDD8C
	0x03505A98 LDR X0, [X20]
	0x03505A9C BL 0x1C16F10
	0x03505AA0 MOV X1, X31
	0x03505AA4 MOV X20, X0
	0x03505AA8 BL 0x34FB6A4
	0x03505AAC STR X20, [X19 + 0x18]
	0x03505AB0 LDP X20, X19, [X31 + 0x10]
	0x03505AB4 LDP X30, X21, [X31], #0x20
	0x03505AB8 RET
	0x03505ABC STR X30, [X31 - 0x10]!
	0x03505AC0 STR X31, [X31 + 0x8]
	0x03505AC4 LDR X0, [X0 + 0x18]
	0x03505AC8 CBZ X0, 0x3505AE4
	0x03505ACC ADD X2, X31, 0x8
	0x03505AD0 MOV X3, X31
	0x03505AD4 BL 0x34FC574
	0x03505AD8 LDR X0, [X31 + 0x8]
	0x03505ADC LDR X30, [X31], #0x10
	0x03505AE0 RET
	0x03505AE4 BL 0x1C16F20
	0x03505AE8 STR X30, [X31 - 0x10]!
	0x03505AEC LDR X0, [X0 + 0x18]
	0x03505AF0 CBZ X0, 0x3505B00
	0x03505AF4 MOV X3, X31
	0x03505AF8 LDR X30, [X31], #0x10
	0x03505AFC B 0x34FC3A4
	0x03505B00 BL 0x1C16F20
	0x03505B04 STR X30, [X31 - 0x20]!
	0x03505B08 STP X20, X19, [X31 + 0x10]
	0x03505B0C ADRP X20, 0xEDA000
	0x03505B10 LDRB W8, [X20 + 0xAA9]
	0x03505B14 MOV X19, X0
	0x03505B18 TBNZ X8, 0x0, 0x3505B30
	0x03505B1C ADRP X0, 0xC2E000
	0x03505B20 LDR X0, [X0 + 0xFD0]
	0x03505B24 BL 0x1C16CF4
	0x03505B28 MOVZ W8, 0x1
	0x03505B2C STRB W8, [X20 + 0xAA9]
	0x03505B30 STR W31, [X31 + 0xC]
	0x03505B34 LDR W0, [X19 + 0x24]
	0x03505B38 ADDS W31, W0, 0x1
	0x03505B3C B.NE 0x3505B70
	0x03505B40 LDR X0, [X19 + 0x18]
	0x03505B44 CBZ X0, 0x3505B7C
	0x03505B48 ADRP X8, 0xC2E000
	0x03505B4C LDR X8, [X8 + 0xFD0]
	0x03505B50 LDRB W1, [X19 + 0x20]
	0x03505B54 ADD X2, X31, 0xC
	0x03505B58 LDR X3, [X8]
	0x03505B5C BL 0x222F324
	0x03505B60 LDR W8, [X31 + 0xC]
	0x03505B64 ANDS W31, W0, 0x1
	0x03505B68 CSINV W0, W8, W31, NE
	0x03505B6C STR W0, [X19 + 0x24]
	0x03505B70 LDP X20, X19, [X31 + 0x10]
	0x03505B74 LDR X30, [X31], #0x20
	0x03505B78 RET
	0x03505B7C BL 0x1C16F20
	0x03505B80 STR W1, [X0 + 0x24]
	0x03505B84 RET
	0x03505B88 STP X30, X19, [X31 - 0x10]!
	0x03505B8C MOV X2, X0
	0x03505B90 MOV X19, X0
	0x03505B94 LDR X0, [X2 + 0x30]!
	0x03505B98 CBNZ X0, 0x3505BB4
	0x03505B9C LDR X0, [X19 + 0x18]
	0x03505BA0 CBZ X0, 0x3505BBC
	0x03505BA4 LDRB W1, [X19 + 0x28]
	0x03505BA8 MOV X3, X31
	0x03505BAC BL 0x34FC574
	0x03505BB0 LDR X0, [X19 + 0x30]
	0x03505BB4 LDP X30, X19, [X31], #0x10
	0x03505BB8 RET
	0x03505BBC BL 0x1C16F20
	0x03505BC0 STR X1, [X0 + 0x30]
	0x03505BC4 RET
	0x03505BC8 STP X30, X19, [X31 - 0x10]!
	0x03505BCC MOV X19, X0
	0x03505BD0 LDR X0, [X0 + 0x18]
	0x03505BD4 STRB W31, [X19 + 0x10]
	0x03505BD8 CBZ X0, 0x3505BF8
	0x03505BDC MOV X1, X31
	0x03505BE0 BL 0x34FBB20
	0x03505BE4 MOVN W8, 0x0
	0x03505BE8 STR W8, [X19 + 0x24]
	0x03505BEC STR X31, [X19 + 0x30]
	0x03505BF0 LDP X30, X19, [X31], #0x10
	0x03505BF4 RET
	0x03505BF8 BL 0x1C16F20
	0x03505BFC STP X30, X21, [X31 - 0x20]!
	0x03505C00 STP X20, X19, [X31 + 0x10]
	0x03505C04 ADRP X21, 0xEDA000
	0x03505C08 ADRP X20, 0xC2E000
	0x03505C0C LDRB W8, [X21 + 0xAAA]
	0x03505C10 LDR X20, [X20 + 0xFD8]
	0x03505C14 MOV X19, X0
	0x03505C18 TBNZ X8, 0x0, 0x3505C30
	0x03505C1C ADRP X0, 0xC2E000
	0x03505C20 LDR X0, [X0 + 0xFD8]
	0x03505C24 BL 0x1C16CF4
	0x03505C28 MOVZ W8, 0x1
	0x03505C2C STRB W8, [X21 + 0xAAA]
	0x03505C30 ADD X0, X19, 0x10
	0x03505C34 MOV X1, X31
	0x03505C38 BL 0x3319BB4
	0x03505C3C LDR X8, [X20]
	0x03505C40 LDP X20, X19, [X31 + 0x10]
	0x03505C44 MOV X1, X0
	0x03505C48 MOV X2, X31
	0x03505C4C MOV X0, X8
	0x03505C50 LDP X30, X21, [X31], #0x20
	0x03505C54 B 0x321EFD0
	0x03505C58 STR X30, [X31 - 0x30]!
	0x03505C5C STP X22, X21, [X31 + 0x10]
	0x03505C60 STP X20, X19, [X31 + 0x20]
	0x03505C64 ADRP X22, 0xEDA000
	0x03505C68 ADRP X21, 0xBEF000
	0x03505C6C ADRP X20, 0xBF6000
	0x03505C70 LDRB W8, [X22 + 0xAAB]
	0x03505C74 LDR X21, [X21 + 0x9D8]
	0x03505C78 LDR X20, [X20 + 0xE60]
	0x03505C7C MOV X19, X0
	0x03505C80 TBNZ X8, 0x0, 0x3505CB0
	0x03505C84 ADRP X0, 0xBEF000
	0x03505C88 LDR X0, [X0 + 0x9D8]
	0x03505C8C BL 0x1C16CF4
	0x03505C90 ADRP X0, 0xBF6000
	0x03505C94 LDR X0, [X0 + 0xE60]
	0x03505C98 BL 0x1C16CF4
	0x03505C9C ADRP X0, 0xC2E000
	0x03505CA0 LDR X0, [X0 + 0xFE0]
	0x03505CA4 BL 0x1C16CF4
	0x03505CA8 MOVZ W8, 0x1
	0x03505CAC STRB W8, [X22 + 0xAAB]
	0x03505CB0 LDRB W8, [X19 + 0x10]
	0x03505CB4 LDR X0, [X21]
	0x03505CB8 ADRP X21, 0xC2E000
	0x03505CBC LDR X21, [X21 + 0xFE0]
	0x03505CC0 ADD X1, X31, 0xC
	0x03505CC4 STRB W8, [X31 + 0xC]
	0x03505CC8 BL 0x1C16E04
	0x03505CCC LDR X8, [X19 + 0x18]
	0x03505CD0 MOV X19, X0
	0x03505CD4 MOV X1, X31
	0x03505CD8 MOV X0, X8
	0x03505CDC BL 0x34FB810
	0x03505CE0 LDR X8, [X20]
	0x03505CE4 MOV X20, X0
	0x03505CE8 LDR W9, [X8 + 0xE0]
	0x03505CEC CBNZ W9, 0x3505CF8
	0x03505CF0 MOV X0, X8
	0x03505CF4 BL 0x1C16DFC
	0x03505CF8 MOVZ W1, 0x1
	0x03505CFC MOV X0, X20
	0x03505D00 MOV X2, X31
	0x03505D04 BL 0x3521028
	0x03505D08 LDR X8, [X21]
	0x03505D0C MOV X2, X0
	0x03505D10 MOV X1, X19
	0x03505D14 MOV X3, X31
	0x03505D18 MOV X0, X8
	0x03505D1C BL 0x3227BD4
	0x03505D20 LDP X20, X19, [X31 + 0x20]
	0x03505D24 LDP X22, X21, [X31 + 0x10]
	0x03505D28 LDR X30, [X31], #0x30
	0x03505D2C RET
	0x03505D30 STR X30, [X31 - 0x30]!
	0x03505D34 STP X22, X21, [X31 + 0x10]
	0x03505D38 STP X20, X19, [X31 + 0x20]
	0x03505D3C LDR X8, [X2 + 0x8]
	0x03505D40 STP X1, X2, [X0 + 0x20]
	0x03505D44 MOV X19, X0
	0x03505D48 MOV X20, X2
	0x03505D4C STR X8, [X0 + 0x10]
	0x03505D50 LDRB W22, [X2 + 0x52]
	0x03505D54 STR X0, [X0 + 0x40]
	0x03505D58 MOV X0, X2
	0x03505D5C MOV X21, X1
	0x03505D60 BL 0x1C16D84
	0x03505D64 TBZ X0, 0x0, 0x3505D7C
	0x03505D68 CMP W22, 0x1
	0x03505D6C B.NE 0x3505D84
	0x03505D70 ADRP X8, 0xFFFFFFFFFE6BA000
	0x03505D74 ADD X8, X8, 0x2A8
	0x03505D78 B 0x3505DF8
	0x03505D7C CBZ W22, 0x3505D98
	0x03505D80 CBZ X21, 0x3505E18

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+32], X30
	003 Move [X31+40], X3
	004 Move [X31+48], X22
	005 Move [X31+56], X21
	006 Move [X31+64], X20
	007 Move [X31+72], X19
	008 Move X22, 0xEDB000
	009 Move W8, [X22+2721]
	010 Move X20, X3
	011 Move X21, X2
	012 Move X19, X0
	013 Move [X31+28], W1
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {44}
	018 Move X0, 0xC2F000
	019 Move X0, [X0+2120]
	020 Call 0x1C17CF4
	021 Move X0, 0xBF7000
	022 Move X0, [X0+3016]
	023 Call 0x1C17CF4
	024 Move X0, 0xBEF000
	025 Move X0, [X0+2760]
	026 Call 0x1C17CF4
	027 Move X0, 0xC2F000
	028 Move X0, [X0+3928]
	029 Call 0x1C17CF4
	030 Move X0, 0xC2F000
	031 Move X0, [X0+3936]
	032 Call 0x1C17CF4
	033 Move X0, 0xC2F000
	034 Move X0, [X0+3944]
	035 Call 0x1C17CF4
	036 Move X0, 0xC2F000
	037 Move X0, [X0+3952]
	038 Call 0x1C17CF4
	039 Move X0, 0xC2F000
	040 Move X0, [X0+3960]
	041 Call 0x1C17CF4
	042 Move W8, 1
	043 Move [X22+2721], W8
	044 Move [X31+24], W31
	045 Move X8, [X19+200]
	046 Move TEMP, X20
	047 And TEMP, TEMP, 1
	048 Compare TEMP, 1
	049 JumpIfEqual {52}
	050 Compare X8, 0
	051 JumpIfNotEqual {59}
	052 Compare X8, 0
	053 JumpIfEqual {295}
	054 Move W9, [X8+221]
	055 Compare W9, 0
	056 JumpIfNotEqual {59}
	057 Move W9, [X8+32]
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Move W8, [X8+64]
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Move X22, X19
	062 Add X22, X22, 106
	063 Move W8, [X22]
	064 Move X9, X20
	065 ShiftRight X9, 40
	066 And X9, X9, 0x7FFFFFFF
	067 NotImplemented "Instruction CMP not yet implemented."
	068 Move X20, [X19+224]
	069 Move [X31+24], W31
	070 Add X1, X31, 24
	071 Move X0, X20
	072 Move X2, X31
	073 Call Monitor.Enter, X0, X1
	074 Move X0, [X19+200]
	075 Compare X0, 0
	076 JumpIfEqual {297}
	077 Move W1, [X31+28]
	078 Move W8, [X31+44]
	079 And W4, W8, 1
	080 Move W3, 2
	081 Move X2, X21
	082 Move X5, X31
	083 Call PeerBase.SerializeOperationToMessage, X0, X1, X2, X3, X4
	084 Move X1, X0
	085 Move X0, [X19+200]
	086 Compare X0, 0
	087 JumpIfEqual {298}
	088 Move X8, [X0]
	089 Move X2, [X31+40]
	090 Move X9, [X8+552]
	091 Move X3, [X8+560]
	092 NotImplemented "Instruction BLR not yet implemented."
	093 Move W19, W0
	094 Move X21, X31
	095 Move W8, [X31+24]
	096 Compare W8, 0
	097 JumpIfEqual {101}
	098 Move X0, X20
	099 Move X1, X31
	100 Call Monitor.Exit, X0
	101 Compare X21, 0
	102 JumpIfEqual {287}
	103 Move X0, X21
	104 Call 0x1C17F18
	105 Move W8, [X19+64]
	106 Compare W8, 0
	107 JumpIfEqual {233}
	108 Move X20, [X19+72]
	109 Add X0, X31, 28
	110 Move X1, X31
	111 Call Byte.ToString, X0
	112 Move X8, [X19+200]
	113 Compare X8, 0
	114 JumpIfEqual {295}
	115 Move X9, 0xC2F000
	116 Move X9, [X9+2120]
	117 Move TEMP, 0
	118 Not TEMP
	119 Move X10, TEMP
	120 Move X21, X0
	121 Add X0, X31, 0
	122 Move X9, [X9]
	123 Move X1, X31
	124 Move [X31], X9
	125 Move [X31+8], X10
	126 Move W8, [X8+64]
	127 Move [X31+16], W8
	128 Call Enum.ToString, X0
	129 Move X8, 0xC2F000
	130 Move X8, [X8+3960]
	131 Move X9, 0xC2F000
	132 Move X9, [X9+3936]
	133 Move X3, X0
	134 Move X8, [X8]
	135 Move X1, X21
	136 Move X2, [X9]
	137 Move X4, X31
	138 Move X0, X8
	139 Call String.Concat, X0, X1, X2, X3
	140 Compare X20, 0
	141 JumpIfEqual {295}
	142 Move X10, 0xBF7000
	143 Move X8, [X20]
	144 Move X10, [X10+3016]
	145 Move X21, X0
	146 NotImplemented "Instruction LDRH not yet implemented."
	147 Move X1, [X10]
	148 Compare X9, 0
	149 JumpIfEqual {156}
	150 Move X10, [X8+176]
	151 Add X10, X10, 8
	152 NotImplemented "Instruction LDUR not yet implemented."
	153 NotImplemented "Instruction CMP not yet implemented."
	154 Subtract X9, X9, 1
	155 Add X10, X10, 16
	156 Move X0, X20
	157 Move W2, W31
	158 Call 0x1C5D788
	159 Move W8, [X19+64]
	160 Compare W8, 0
	161 JumpIfEqual {258}
	162 Move X8, 0xBEF000
	163 Move X20, [X19+72]
	164 Move X8, [X8+2760]
	165 Move W1, 5
	166 Move X0, [X8]
	167 Call 0x1C17D6C
	168 Compare X0, 0
	169 JumpIfEqual {295}
	170 Move W8, [X0+24]
	171 Move X21, X0
	172 Compare W8, 0
	173 JumpIfEqual {296}
	174 Move X8, 0xC2F000
	175 Move X8, [X8+3944]
	176 Move W9, 5
	177 Add X10, X31, 40
	178 Or X0, X10, X9
	179 Move X8, [X8]
	180 Move X1, X31
	181 Move [X21+32], X8
	182 Call Byte.ToString, X0
	183 Move W8, [X21+24]
	184 NotImplemented "Instruction CMP not yet implemented."
	185 NotImplemented "Instruction CMP not yet implemented."
	186 Move [X21+40], X0
	187 Move X8, 0xC2F000
	188 Move X8, [X8+3952]
	189 Move X0, X22
	190 Move X1, X31
	191 Move X8, [X8]
	192 Move [X21+48], X8
	193 Call Byte.ToString, X0
	194 Move W8, [X21+24]
	195 NotImplemented "Instruction CMP not yet implemented."
	196 NotImplemented "Instruction CMP not yet implemented."
	197 Move [X21+56], X0
	198 Move X8, 0xC2F000
	199 Move X8, [X8+3928]
	200 Move X0, X21
	201 Move X1, X31
	202 Move X8, [X8]
	203 Move [X21+64], X8
	204 Call String.Concat, X0
	205 Compare X20, 0
	206 JumpIfEqual {295}
	207 Move X10, 0xBF7000
	208 Move X8, [X20]
	209 Move X10, [X10+3016]
	210 Move X21, X0
	211 NotImplemented "Instruction LDRH not yet implemented."
	212 Move X1, [X10]
	213 Compare X9, 0
	214 JumpIfEqual {221}
	215 Move X10, [X8+176]
	216 Add X10, X10, 8
	217 NotImplemented "Instruction LDUR not yet implemented."
	218 NotImplemented "Instruction CMP not yet implemented."
	219 Subtract X9, X9, 1
	220 Add X10, X10, 16
	221 Move X0, X20
	222 Move W2, W31
	223 Call 0x1C5D788
	224 NotImplemented "Instruction LDRSW not yet implemented."
	225 Add X8, X8, X9
	226 Add X0, X8, 312
	227 Move X8, [X0]
	228 Move X3, [X0+8]
	229 Move W1, 1
	230 Move X0, X20
	231 Move X2, X21
	232 NotImplemented "Instruction BLR not yet implemented."
	233 Move X19, [X19+72]
	234 Compare X19, 0
	235 JumpIfEqual {295}
	236 Move X10, 0xBF7000
	237 Move X8, [X19]
	238 Move X10, [X10+3016]
	239 NotImplemented "Instruction LDRH not yet implemented."
	240 Move X1, [X10]
	241 Compare X9, 0
	242 JumpIfEqual {274}
	243 Move X10, [X8+176]
	244 Add X10, X10, 8
	245 NotImplemented "Instruction LDUR not yet implemented."
	246 NotImplemented "Instruction CMP not yet implemented."
	247 Subtract X9, X9, 1
	248 Add X10, X10, 16
	249 NotImplemented "Instruction LDRSW not yet implemented."
	250 Add X8, X8, X9
	251 Add X0, X8, 312
	252 Move X8, [X0]
	253 Move X3, [X0+8]
	254 Move W1, 1
	255 Move X0, X20
	256 Move X2, X21
	257 NotImplemented "Instruction BLR not yet implemented."
	258 Move X19, [X19+72]
	259 Compare X19, 0
	260 JumpIfEqual {295}
	261 Move X10, 0xBF7000
	262 Move X8, [X19]
	263 Move X10, [X10+3016]
	264 NotImplemented "Instruction LDRH not yet implemented."
	265 Move X1, [X10]
	266 Compare X9, 0
	267 JumpIfEqual {274}
	268 Move X10, [X8+176]
	269 Add X10, X10, 8
	270 NotImplemented "Instruction LDUR not yet implemented."
	271 NotImplemented "Instruction CMP not yet implemented."
	272 Subtract X9, X9, 1
	273 Add X10, X10, 16
	274 Move W2, 2
	275 Move X0, X19
	276 Call 0x1C5D788
	277 Move W9, [X10]
	278 Add W9, W9, 2
	279 Add X8, X8, W9
	280 Add X0, X8, 312
	281 Move X8, [X0]
	282 Move X2, [X0+8]
	283 Move W1, 1030
	284 Move X0, X19
	285 NotImplemented "Instruction BLR not yet implemented."
	286 Move W19, W31
	287 And W0, W19, 1
	288 Move X20, [X31+64]
	289 Move X19, [X31+72]
	290 Move X22, [X31+48]
	291 Move X21, [X31+56]
	292 Move X30, [X31+32]
	293 Add X31, X31, 80
	294 Return X0
	295 Call 0x1C17F20
	296 Call 0x1C17F28
	297 Call 0x1C17F20
	298 Call 0x1C17F20
	299 Move X0, 0xBF7000
	300 Move X0, [X0+1400]
	301 Call 0x1C17D08
	302 Call 0x1C17F10
	303 Move X19, X0
	304 Move X0, 0xC2F000
	305 Move X0, [X0+3968]
	306 Call 0x1C17D08
	307 Move X1, X0
	308 Move X0, X19
	309 Move X2, X31
	310 Call ArgumentException..ctor, X0, X1
	311 Move X0, 0xC2F000
	312 Move X0, [X0+3976]
	313 Call 0x1C17D08
	314 Move X1, X0
	315 Move X0, X19
	316 Call 0x1C17DEC
	317 Move X19, X0
	318 NotImplemented "Instruction CMP not yet implemented."
	319 Move X0, X19
	320 Call 0x3EB2AD0
	321 Move X21, [X0]
	322 Call 0x3EB2AE0
	323 Move W19, W31
	324 Move X21, X31
	325 Move X19, X0
	326 Move W8, [X31+24]
	327 Compare W8, 0
	328 JumpIfEqual {332}
	329 Move X0, X20
	330 Move X1, X31
	331 Call Monitor.Exit, X0
	332 Compare X21, 0
	333 JumpIfNotEqual {336}
	334 Move X0, X19
	335 Call 0x1D2D690
	336 Move X0, X21
	337 Call 0x1C17F18
	338 Call 0x1991590

Method: System.Boolean SendOperation(System.Byte operationCode, ExitGames.Client.Photon.ParameterDictionary operationParameters, ExitGames.Client.Photon.SendOptions sendOptions)

Disassembly:
	0x03505D84 LDR X8, [X19 + 0x10]
	0x03505D88 LDR X9, [X19 + 0x20]
	0x03505D8C STR X8, [X19 + 0x18]
	0x03505D90 STR X9, [X19 + 0x40]
	0x03505D94 B 0x3505DFC
	0x03505D98 LDRB W8, [X19 + 0x70]
	0x03505D9C CBZ W8, 0x3505DC8
	0x03505DA0 MOV X0, X20
	0x03505DA4 BL 0x1C16D7C
	0x03505DA8 MOV W21, W0
	0x03505DAC MOV X0, X20
	0x03505DB0 BL 0x1C17238
	0x03505DB4 TBZ X21, 0x0, 0x3505DD4
	0x03505DB8 TBZ X0, 0x0, 0x3505DE4
	0x03505DBC ADRP X8, 0xFFFFFFFFFE6BA000
	0x03505DC0 ADD X8, X8, 0x3A4
	0x03505DC4 B 0x3505DF8
	0x03505DC8 ADRP X8, 0xFFFFFFFFFE6BA000
	0x03505DCC ADD X8, X8, 0x288
	0x03505DD0 B 0x3505DF8
	0x03505DD4 TBZ X0, 0x0, 0x3505DF0
	0x03505DD8 ADRP X8, 0xFFFFFFFFFE6BA000
	0x03505DDC ADD X8, X8, 0x2E4
	0x03505DE0 B 0x3505DF8
	0x03505DE4 ADRP X8, 0xFFFFFFFFFE6BA000
	0x03505DE8 ADD X8, X8, 0x368
	0x03505DEC B 0x3505DF8
	0x03505DF0 ADRP X8, 0xFFFFFFFFFE6BA000
	0x03505DF4 ADD X8, X8, 0x2B8
	0x03505DF8 STR X8, [X19 + 0x18]
	0x03505DFC ADRP X8, 0xFFFFFFFFFE6BA000
	0x03505E00 ADD X8, X8, 0x238
	0x03505E04 STR X8, [X19 + 0x38]
	0x03505E08 LDP X20, X19, [X31 + 0x20]
	0x03505E0C LDP X22, X21, [X31 + 0x10]
	0x03505E10 LDR X30, [X31], #0x30
	0x03505E14 RET
	0x03505E18 ADRP X1, 0xFFFFFFFFFD616000
	0x03505E1C ADD X1, X1, 0xEE3
	0x03505E20 MOV X0, X31
	0x03505E24 BL 0x1C16F3C
	0x03505E28 MOV X1, X31
	0x03505E2C BL 0x1C16DEC
	0x03505E30 LDR X8, [X0 + 0x40]
	0x03505E34 LDR X3, [X0 + 0x18]
	0x03505E38 LDR X2, [X0 + 0x28]
	0x03505E3C MOV X0, X8
	0x03505E40 BR X3
	0x03505E44 SUB X31, X31, 0x20
	0x03505E48 STP X31, X30, [X31 + 0x8]
	0x03505E4C STR X1, [X31]
	0x03505E50 ADD X1, X31, 0x0
	0x03505E54 BL 0x1C16CB0
	0x03505E58 LDR X30, [X31 + 0x10]
	0x03505E5C ADD X31, X31, 0x20
	0x03505E60 RET
	0x03505E64 MOV X0, X1
	0x03505E68 MOV X1, X31
	0x03505E6C B 0x1C16CB4
	0x03505E70 STR X30, [X31 - 0x30]!
	0x03505E74 STP X22, X21, [X31 + 0x10]
	0x03505E78 STP X20, X19, [X31 + 0x20]
	0x03505E7C LDR X8, [X2 + 0x8]
	0x03505E80 STP X1, X2, [X0 + 0x20]
	0x03505E84 MOV X19, X0
	0x03505E88 MOV X20, X2
	0x03505E8C STR X8, [X0 + 0x10]
	0x03505E90 LDRB W22, [X2 + 0x52]
	0x03505E94 STR X0, [X0 + 0x40]
	0x03505E98 MOV X0, X2
	0x03505E9C MOV X21, X1
	0x03505EA0 BL 0x1C16D84
	0x03505EA4 TBZ X0, 0x0, 0x3505EBC
	0x03505EA8 CMP W22, 0x2
	0x03505EAC B.NE 0x3505EF8
	0x03505EB0 ADRP X8, 0xFFFFFFFFFE6BA000
	0x03505EB4 ADD X8, X8, 0x4B4
	0x03505EB8 B 0x3505F3C
	0x03505EBC CMP W22, 0x1
	0x03505EC0 B.NE 0x3505EF4
	0x03505EC4 LDRB W8, [X19 + 0x70]
	0x03505EC8 CBZ W8, 0x3505F0C
	0x03505ECC MOV X0, X20
	0x03505ED0 BL 0x1C16D7C
	0x03505ED4 MOV W21, W0
	0x03505ED8 MOV X0, X20
	0x03505EDC BL 0x1C17238
	0x03505EE0 TBZ X21, 0x0, 0x3505F18
	0x03505EE4 TBZ X0, 0x0, 0x3505F28
	0x03505EE8 ADRP X8, 0xFFFFFFFFFE6BA000
	0x03505EEC ADD X8, X8, 0x5D0
	0x03505EF0 B 0x3505F3C
	0x03505EF4 CBZ X21, 0x3505F5C
	0x03505EF8 LDR X8, [X19 + 0x10]
	0x03505EFC LDR X9, [X19 + 0x20]
	0x03505F00 STR X8, [X19 + 0x18]
	0x03505F04 STR X9, [X19 + 0x40]
	0x03505F08 B 0x3505F40
	0x03505F0C ADRP X8, 0xFFFFFFFFFE6BA000
	0x03505F10 ADD X8, X8, 0x490
	0x03505F14 B 0x3505F3C
	0x03505F18 TBZ X0, 0x0, 0x3505F34
	0x03505F1C ADRP X8, 0xFFFFFFFFFE6BA000
	0x03505F20 ADD X8, X8, 0x4F8
	0x03505F24 B 0x3505F3C
	0x03505F28 ADRP X8, 0xFFFFFFFFFE6BA000
	0x03505F2C ADD X8, X8, 0x584
	0x03505F30 B 0x3505F3C
	0x03505F34 ADRP X8, 0xFFFFFFFFFE6BA000
	0x03505F38 ADD X8, X8, 0x4C8
	0x03505F3C STR X8, [X19 + 0x18]
	0x03505F40 ADRP X8, 0xFFFFFFFFFE6BA000
	0x03505F44 ADD X8, X8, 0x430
	0x03505F48 STR X8, [X19 + 0x38]
	0x03505F4C LDP X20, X19, [X31 + 0x20]
	0x03505F50 LDP X22, X21, [X31 + 0x10]
	0x03505F54 LDR X30, [X31], #0x30
	0x03505F58 RET
	0x03505F5C ADRP X1, 0xFFFFFFFFFD616000
	0x03505F60 ADD X1, X1, 0xEE3
	0x03505F64 MOV X0, X31
	0x03505F68 BL 0x1C16F3C
	0x03505F6C MOV X1, X31
	0x03505F70 BL 0x1C16DEC
	0x03505F74 LDR X8, [X0 + 0x40]
	0x03505F78 LDR X4, [X0 + 0x18]
	0x03505F7C LDR X3, [X0 + 0x28]
	0x03505F80 MOV X0, X8
	0x03505F84 BR X4
	0x03505F88 SUB X31, X31, 0x30
	0x03505F8C STP X31, X30, [X31 + 0x18]
	0x03505F90 STP X1, X2, [X31 + 0x8]
	0x03505F94 ADD X1, X31, 0x8
	0x03505F98 MOV X2, X3
	0x03505F9C MOV X3, X4
	0x03505FA0 BL 0x1C16CB0
	0x03505FA4 LDR X30, [X31 + 0x20]
	0x03505FA8 ADD X31, X31, 0x30
	0x03505FAC RET
	0x03505FB0 STR X30, [X31 - 0x10]!
	0x03505FB4 MOV X0, X1
	0x03505FB8 MOV X1, X31
	0x03505FBC BL 0x1C16CB4
	0x03505FC0 CBZ X0, 0x3505FD4
	0x03505FC4 BL 0x1C16E08
	0x03505FC8 LDRH W0, [X0]
	0x03505FCC LDR X30, [X31], #0x10
	0x03505FD0 RET
	0x03505FD4 BL 0x1C16F20
	0x03505FD8 STP X30, X21, [X31 - 0x20]!
	0x03505FDC STP X20, X19, [X31 + 0x10]
	0x03505FE0 LDR X8, [X2 + 0x8]
	0x03505FE4 STP X1, X2, [X0 + 0x20]
	0x03505FE8 MOV X19, X0
	0x03505FEC MOV X20, X1
	0x03505FF0 STR X8, [X0 + 0x10]
	0x03505FF4 LDRB W21, [X2 + 0x52]
	0x03505FF8 STR X0, [X0 + 0x40]
	0x03505FFC MOV X0, X2
	0x03506000 BL 0x1C16D84
	0x03506004 TBZ X0, 0x0, 0x350601C
	0x03506008 CMP W21, 0x1
	0x0350600C B.NE 0x3506024
	0x03506010 ADRP X8, 0xFFFFFFFFFE6B9000
	0x03506014 ADD X8, X8, 0x6D4
	0x03506018 B 0x3506040
	0x0350601C CBZ W21, 0x3506038
	0x03506020 CBZ X20, 0x350605C
	0x03506024 LDR X8, [X19 + 0x10]
	0x03506028 LDR X9, [X19 + 0x20]
	0x0350602C STR X8, [X19 + 0x18]
	0x03506030 STR X9, [X19 + 0x40]
	0x03506034 B 0x3506044
	0x03506038 ADRP X8, 0xFFFFFFFFFE6B9000
	0x0350603C ADD X8, X8, 0x6B4
	0x03506040 STR X8, [X19 + 0x18]
	0x03506044 ADRP X8, 0xFFFFFFFFFE6B9000
	0x03506048 ADD X8, X8, 0x664
	0x0350604C STR X8, [X19 + 0x38]
	0x03506050 LDP X20, X19, [X31 + 0x10]
	0x03506054 LDP X30, X21, [X31], #0x20
	0x03506058 RET
	0x0350605C ADRP X1, 0xFFFFFFFFFD615000
	0x03506060 ADD X1, X1, 0xEE3
	0x03506064 MOV X0, X31
	0x03506068 BL 0x1C16F3C
	0x0350606C MOV X1, X31
	0x03506070 BL 0x1C16DEC
	0x03506074 LDR X8, [X0 + 0x40]
	0x03506078 LDR X3, [X0 + 0x18]
	0x0350607C LDR X2, [X0 + 0x28]
	0x03506080 MOV X0, X8
	0x03506084 BR X3
	0x03506088 SUB X31, X31, 0x20
	0x0350608C STP X31, X30, [X31 + 0x8]
	0x03506090 STR X1, [X31]
	0x03506094 ADD X1, X31, 0x0
	0x03506098 BL 0x1C16CB0
	0x0350609C LDR X30, [X31 + 0x10]
	0x035060A0 ADD X31, X31, 0x20
	0x035060A4 RET
	0x035060A8 MOV X0, X1
	0x035060AC MOV X1, X31
	0x035060B0 B 0x1C16CB4
	0x035060B4 STR X30, [X31 - 0x30]!
	0x035060B8 STP X22, X21, [X31 + 0x10]
	0x035060BC STP X20, X19, [X31 + 0x20]
	0x035060C0 LDR X8, [X2 + 0x8]
	0x035060C4 STP X1, X2, [X0 + 0x20]
	0x035060C8 MOV X19, X0
	0x035060CC MOV X20, X2
	0x035060D0 STR X8, [X0 + 0x10]
	0x035060D4 LDRB W22, [X2 + 0x52]
	0x035060D8 STR X0, [X0 + 0x40]
	0x035060DC MOV X0, X2
	0x035060E0 MOV X21, X1
	0x035060E4 BL 0x1C16D84
	0x035060E8 TBZ X0, 0x0, 0x3506100
	0x035060EC CMP W22, 0x2
	0x035060F0 B.NE 0x350613C
	0x035060F4 ADRP X8, 0xFFFFFFFFFE6B9000
	0x035060F8 ADD X8, X8, 0x768
	0x035060FC B 0x3506180
	0x03506100 CMP W22, 0x1
	0x03506104 B.NE 0x3506138
	0x03506108 LDRB W8, [X19 + 0x70]
	0x0350610C CBZ W8, 0x3506150
	0x03506110 MOV X0, X20
	0x03506114 BL 0x1C16D7C
	0x03506118 MOV W21, W0
	0x0350611C MOV X0, X20
	0x03506120 BL 0x1C17238
	0x03506124 TBZ X21, 0x0, 0x350615C
	0x03506128 TBZ X0, 0x0, 0x350616C
	0x0350612C ADRP X8, 0xFFFFFFFFFE6B9000
	0x03506130 ADD X8, X8, 0x884
	0x03506134 B 0x3506180
	0x03506138 CBZ X21, 0x35061A0
	0x0350613C LDR X8, [X19 + 0x10]
	0x03506140 LDR X9, [X19 + 0x20]
	0x03506144 STR X8, [X19 + 0x18]
	0x03506148 STR X9, [X19 + 0x40]
	0x0350614C B 0x3506184
	0x03506150 ADRP X8, 0xFFFFFFFFFE6B9000
	0x03506154 ADD X8, X8, 0x744
	0x03506158 B 0x3506180
	0x0350615C TBZ X0, 0x0, 0x3506178
	0x03506160 ADRP X8, 0xFFFFFFFFFE6B9000
	0x03506164 ADD X8, X8, 0x7AC
	0x03506168 B 0x3506180
	0x0350616C ADRP X8, 0xFFFFFFFFFE6B9000
	0x03506170 ADD X8, X8, 0x838
	0x03506174 B 0x3506180
	0x03506178 ADRP X8, 0xFFFFFFFFFE6B9000
	0x0350617C ADD X8, X8, 0x77C
	0x03506180 STR X8, [X19 + 0x18]
	0x03506184 ADRP X8, 0xFFFFFFFFFE6B9000
	0x03506188 ADD X8, X8, 0x6E4
	0x0350618C STR X8, [X19 + 0x38]
	0x03506190 LDP X20, X19, [X31 + 0x20]
	0x03506194 LDP X22, X21, [X31 + 0x10]
	0x03506198 LDR X30, [X31], #0x30
	0x0350619C RET
	0x035061A0 ADRP X1, 0xFFFFFFFFFD615000
	0x035061A4 ADD X1, X1, 0xEE3
	0x035061A8 MOV X0, X31
	0x035061AC BL 0x1C16F3C
	0x035061B0 MOV X1, X31
	0x035061B4 BL 0x1C16DEC
	0x035061B8 LDR X8, [X0 + 0x40]
	0x035061BC LDR X4, [X0 + 0x18]
	0x035061C0 LDR X3, [X0 + 0x28]
	0x035061C4 MOV X0, X8
	0x035061C8 BR X4
	0x035061CC SUB X31, X31, 0x60
	0x035061D0 STR X30, [X31 + 0x20]
	0x035061D4 STP X24, X23, [X31 + 0x30]
	0x035061D8 STP X22, X21, [X31 + 0x40]
	0x035061DC STP X20, X19, [X31 + 0x50]
	0x035061E0 ADRP X24, 0xED9000
	0x035061E4 STRH W2, [X31 + 0x2C]
	0x035061E8 ADRP X23, 0xBF1000
	0x035061EC LDRB W8, [X24 + 0xAAC]
	0x035061F0 LDR X23, [X23 + 0x628]
	0x035061F4 MOV X19, X4
	0x035061F8 MOV X20, X3
	0x035061FC MOV X22, X1
	0x03506200 MOV X21, X0
	0x03506204 TBNZ X8, 0x0, 0x350621C
	0x03506208 ADRP X0, 0xBF1000
	0x0350620C LDR X0, [X0 + 0x628]
	0x03506210 BL 0x1C16CF4
	0x03506214 MOVZ W8, 0x1
	0x03506218 STRB W8, [X24 + 0xAAC]
	0x0350621C LDR X0, [X23]
	0x03506220 ADD X1, X31, 0x2C
	0x03506224 STP X31, X31, [X31 + 0x10]
	0x03506228 STR X22, [X31 + 0x8]
	0x0350622C BL 0x1C16E04
	0x03506230 STR X0, [X31 + 0x10]
	0x03506234 ADD X1, X31, 0x8
	0x03506238 MOV X0, X21
	0x0350623C MOV X2, X20
	0x03506240 MOV X3, X19
	0x03506244 BL 0x1C16CB0
	0x03506248 LDP X20, X19, [X31 + 0x50]
	0x0350624C LDP X22, X21, [X31 + 0x40]
	0x03506250 LDP X24, X23, [X31 + 0x30]
	0x03506254 LDR X30, [X31 + 0x20]
	0x03506258 ADD X31, X31, 0x60
	0x0350625C RET
	0x03506260 MOV X0, X1
	0x03506264 MOV X1, X31
	0x03506268 B 0x1C16CB4
	0x0350626C STP X30, X23, [X31 - 0x30]!
	0x03506270 STP X22, X21, [X31 + 0x10]
	0x03506274 STP X20, X19, [X31 + 0x20]
	0x03506278 MOV X22, X1
	0x0350627C MOV X1, X31
	0x03506280 MOV X19, X4
	0x03506284 MOV X20, X3
	0x03506288 MOV W21, W2
	0x0350628C MOV X23, X0

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+32], X30
	003 Move [X31+40], X3
	004 Move [X31+48], X22
	005 Move [X31+56], X21
	006 Move [X31+64], X20
	007 Move [X31+72], X19
	008 Move X22, 0xEDB000
	009 Move W8, [X22+2722]
	010 Move X20, X3
	011 Move X21, X2
	012 Move X19, X0
	013 Move [X31+28], W1
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {44}
	018 Move X0, 0xC2F000
	019 Move X0, [X0+2120]
	020 Call 0x1C17CF4
	021 Move X0, 0xBF7000
	022 Move X0, [X0+3016]
	023 Call 0x1C17CF4
	024 Move X0, 0xBEF000
	025 Move X0, [X0+2760]
	026 Call 0x1C17CF4
	027 Move X0, 0xC2F000
	028 Move X0, [X0+3928]
	029 Call 0x1C17CF4
	030 Move X0, 0xC2F000
	031 Move X0, [X0+3936]
	032 Call 0x1C17CF4
	033 Move X0, 0xC2F000
	034 Move X0, [X0+3944]
	035 Call 0x1C17CF4
	036 Move X0, 0xC2F000
	037 Move X0, [X0+3952]
	038 Call 0x1C17CF4
	039 Move X0, 0xC2F000
	040 Move X0, [X0+3960]
	041 Call 0x1C17CF4
	042 Move W8, 1
	043 Move [X22+2722], W8
	044 Move [X31+24], W31
	045 Move X8, [X19+200]
	046 Move TEMP, X20
	047 And TEMP, TEMP, 1
	048 Compare TEMP, 1
	049 JumpIfEqual {52}
	050 Compare X8, 0
	051 JumpIfNotEqual {59}
	052 Compare X8, 0
	053 JumpIfEqual {295}
	054 Move W9, [X8+221]
	055 Compare W9, 0
	056 JumpIfNotEqual {59}
	057 Move W9, [X8+32]
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Move W8, [X8+64]
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Move X22, X19
	062 Add X22, X22, 106
	063 Move W8, [X22]
	064 Move X9, X20
	065 ShiftRight X9, 40
	066 And X9, X9, 0x7FFFFFFF
	067 NotImplemented "Instruction CMP not yet implemented."
	068 Move X20, [X19+224]
	069 Move [X31+24], W31
	070 Add X1, X31, 24
	071 Move X0, X20
	072 Move X2, X31
	073 Call Monitor.Enter, X0, X1
	074 Move X0, [X19+200]
	075 Compare X0, 0
	076 JumpIfEqual {297}
	077 Move W1, [X31+28]
	078 Move W8, [X31+44]
	079 And W4, W8, 1
	080 Move W3, 2
	081 Move X2, X21
	082 Move X5, X31
	083 Call PeerBase.SerializeOperationToMessage, X0, X1, X2, X3, X4
	084 Move X1, X0
	085 Move X0, [X19+200]
	086 Compare X0, 0
	087 JumpIfEqual {298}
	088 Move X8, [X0]
	089 Move X2, [X31+40]
	090 Move X9, [X8+552]
	091 Move X3, [X8+560]
	092 NotImplemented "Instruction BLR not yet implemented."
	093 Move W19, W0
	094 Move X21, X31
	095 Move W8, [X31+24]
	096 Compare W8, 0
	097 JumpIfEqual {101}
	098 Move X0, X20
	099 Move X1, X31
	100 Call Monitor.Exit, X0
	101 Compare X21, 0
	102 JumpIfEqual {287}
	103 Move X0, X21
	104 Call 0x1C17F18
	105 Move W8, [X19+64]
	106 Compare W8, 0
	107 JumpIfEqual {233}
	108 Move X20, [X19+72]
	109 Add X0, X31, 28
	110 Move X1, X31
	111 Call Byte.ToString, X0
	112 Move X8, [X19+200]
	113 Compare X8, 0
	114 JumpIfEqual {295}
	115 Move X9, 0xC2F000
	116 Move X9, [X9+2120]
	117 Move TEMP, 0
	118 Not TEMP
	119 Move X10, TEMP
	120 Move X21, X0
	121 Add X0, X31, 0
	122 Move X9, [X9]
	123 Move X1, X31
	124 Move [X31], X9
	125 Move [X31+8], X10
	126 Move W8, [X8+64]
	127 Move [X31+16], W8
	128 Call Enum.ToString, X0
	129 Move X8, 0xC2F000
	130 Move X8, [X8+3960]
	131 Move X9, 0xC2F000
	132 Move X9, [X9+3936]
	133 Move X3, X0
	134 Move X8, [X8]
	135 Move X1, X21
	136 Move X2, [X9]
	137 Move X4, X31
	138 Move X0, X8
	139 Call String.Concat, X0, X1, X2, X3
	140 Compare X20, 0
	141 JumpIfEqual {295}
	142 Move X10, 0xBF7000
	143 Move X8, [X20]
	144 Move X10, [X10+3016]
	145 Move X21, X0
	146 NotImplemented "Instruction LDRH not yet implemented."
	147 Move X1, [X10]
	148 Compare X9, 0
	149 JumpIfEqual {156}
	150 Move X10, [X8+176]
	151 Add X10, X10, 8
	152 NotImplemented "Instruction LDUR not yet implemented."
	153 NotImplemented "Instruction CMP not yet implemented."
	154 Subtract X9, X9, 1
	155 Add X10, X10, 16
	156 Move X0, X20
	157 Move W2, W31
	158 Call 0x1C5D788
	159 Move W8, [X19+64]
	160 Compare W8, 0
	161 JumpIfEqual {258}
	162 Move X8, 0xBEF000
	163 Move X20, [X19+72]
	164 Move X8, [X8+2760]
	165 Move W1, 5
	166 Move X0, [X8]
	167 Call 0x1C17D6C
	168 Compare X0, 0
	169 JumpIfEqual {295}
	170 Move W8, [X0+24]
	171 Move X21, X0
	172 Compare W8, 0
	173 JumpIfEqual {296}
	174 Move X8, 0xC2F000
	175 Move X8, [X8+3944]
	176 Move W9, 5
	177 Add X10, X31, 40
	178 Or X0, X10, X9
	179 Move X8, [X8]
	180 Move X1, X31
	181 Move [X21+32], X8
	182 Call Byte.ToString, X0
	183 Move W8, [X21+24]
	184 NotImplemented "Instruction CMP not yet implemented."
	185 NotImplemented "Instruction CMP not yet implemented."
	186 Move [X21+40], X0
	187 Move X8, 0xC2E000
	188 Move X8, [X8+3952]
	189 Move X0, X22
	190 Move X1, X31
	191 Move X8, [X8]
	192 Move [X21+48], X8
	193 Call Byte.ToString, X0
	194 Move W8, [X21+24]
	195 NotImplemented "Instruction CMP not yet implemented."
	196 NotImplemented "Instruction CMP not yet implemented."
	197 Move [X21+56], X0
	198 Move X8, 0xC2E000
	199 Move X8, [X8+3928]
	200 Move X0, X21
	201 Move X1, X31
	202 Move X8, [X8]
	203 Move [X21+64], X8
	204 Call String.Concat, X0
	205 Compare X20, 0
	206 JumpIfEqual {295}
	207 Move X10, 0xBF6000
	208 Move X8, [X20]
	209 Move X10, [X10+3016]
	210 Move X21, X0
	211 NotImplemented "Instruction LDRH not yet implemented."
	212 Move X1, [X10]
	213 Compare X9, 0
	214 JumpIfEqual {221}
	215 Move X10, [X8+176]
	216 Add X10, X10, 8
	217 NotImplemented "Instruction LDUR not yet implemented."
	218 NotImplemented "Instruction CMP not yet implemented."
	219 Subtract X9, X9, 1
	220 Add X10, X10, 16
	221 Move X0, X20
	222 Move W2, W31
	223 Call 0x1C5D788
	224 NotImplemented "Instruction LDRSW not yet implemented."
	225 Add X8, X8, X9
	226 Add X0, X8, 312
	227 Move X8, [X0]
	228 Move X3, [X0+8]
	229 Move W1, 1
	230 Move X0, X20
	231 Move X2, X21
	232 NotImplemented "Instruction BLR not yet implemented."
	233 Move X19, [X19+72]
	234 Compare X19, 0
	235 JumpIfEqual {295}
	236 Move X10, 0xBF6000
	237 Move X8, [X19]
	238 Move X10, [X10+3016]
	239 NotImplemented "Instruction LDRH not yet implemented."
	240 Move X1, [X10]
	241 Compare X9, 0
	242 JumpIfEqual {274}
	243 Move X10, [X8+176]
	244 Add X10, X10, 8
	245 NotImplemented "Instruction LDUR not yet implemented."
	246 NotImplemented "Instruction CMP not yet implemented."
	247 Subtract X9, X9, 1
	248 Add X10, X10, 16
	249 NotImplemented "Instruction LDRSW not yet implemented."
	250 Add X8, X8, X9
	251 Add X0, X8, 312
	252 Move X8, [X0]
	253 Move X3, [X0+8]
	254 Move W1, 1
	255 Move X0, X20
	256 Move X2, X21
	257 NotImplemented "Instruction BLR not yet implemented."
	258 Move X19, [X19+72]
	259 Compare X19, 0
	260 JumpIfEqual {295}
	261 Move X10, 0xBF6000
	262 Move X8, [X19]
	263 Move X10, [X10+3016]
	264 NotImplemented "Instruction LDRH not yet implemented."
	265 Move X1, [X10]
	266 Compare X9, 0
	267 JumpIfEqual {274}
	268 Move X10, [X8+176]
	269 Add X10, X10, 8
	270 NotImplemented "Instruction LDUR not yet implemented."
	271 NotImplemented "Instruction CMP not yet implemented."
	272 Subtract X9, X9, 1
	273 Add X10, X10, 16
	274 Move W2, 2
	275 Move X0, X19
	276 Call 0x1C5D788
	277 Move W9, [X10]
	278 Add W9, W9, 2
	279 Add X8, X8, W9
	280 Add X0, X8, 312
	281 Move X8, [X0]
	282 Move X2, [X0+8]
	283 Move W1, 1030
	284 Move X0, X19
	285 NotImplemented "Instruction BLR not yet implemented."
	286 Move W19, W31
	287 And W0, W19, 1
	288 Move X20, [X31+64]
	289 Move X19, [X31+72]
	290 Move X22, [X31+48]
	291 Move X21, [X31+56]
	292 Move X30, [X31+32]
	293 Add X31, X31, 80
	294 Return X0
	295 Call 0x1C17F20
	296 Call 0x1C17F28
	297 Call 0x1C17F20
	298 Call 0x1C17F20
	299 Move X0, 0xBF6000
	300 Move X0, [X0+1400]
	301 Call 0x1C17D08
	302 Call 0x1C17F10
	303 Move X19, X0
	304 Move X0, 0xC2E000
	305 Move X0, [X0+3968]
	306 Call 0x1C17D08
	307 Move X1, X0
	308 Move X0, X19
	309 Move X2, X31
	310 Call ArgumentException..ctor, X0, X1
	311 Move X0, 0xC2E000
	312 Move X0, [X0+3984]
	313 Call 0x1C17D08
	314 Move X1, X0
	315 Move X0, X19
	316 Call 0x1C17DEC
	317 Move X19, X0
	318 NotImplemented "Instruction CMP not yet implemented."
	319 Move X0, X19
	320 Call 0x3EB2AD0
	321 Move X21, [X0]
	322 Call 0x3EB2AE0
	323 Move W19, W31
	324 Move X21, X31
	325 Move X19, X0
	326 Move W8, [X31+24]
	327 Compare W8, 0
	328 JumpIfEqual {332}
	329 Move X0, X20
	330 Move X1, X31
	331 Call Monitor.Exit, X0
	332 Compare X21, 0
	333 JumpIfNotEqual {336}
	334 Move X0, X19
	335 Call 0x1D2D690
	336 Move X0, X21
	337 Call 0x1C17F18
	338 Call 0x1991590

Method: System.Boolean RegisterType(System.Type customType, System.Byte code, ExitGames.Client.Photon.SerializeMethod serializeMethod, ExitGames.Client.Photon.DeserializeMethod constructor)

Disassembly:
	0x03506290 BL 0x33BDD8C
	0x03506294 STRB W21, [X23 + 0x10]
	0x03506298 STP X22, X20, [X23 + 0x18]
	0x0350629C STR X19, [X23 + 0x28]
	0x035062A0 LDP X20, X19, [X31 + 0x20]
	0x035062A4 LDP X22, X21, [X31 + 0x10]
	0x035062A8 LDP X30, X23, [X31], #0x30
	0x035062AC RET
	0x035062B0 STP X30, X23, [X31 - 0x30]!
	0x035062B4 STP X22, X21, [X31 + 0x10]
	0x035062B8 STP X20, X19, [X31 + 0x20]
	0x035062BC MOV X22, X1
	0x035062C0 MOV X1, X31
	0x035062C4 MOV X19, X4
	0x035062C8 MOV X20, X3
	0x035062CC MOV W21, W2
	0x035062D0 MOV X23, X0
	0x035062D4 BL 0x33BDD8C
	0x035062D8 STR X22, [X23 + 0x18]
	0x035062DC STRB W21, [X23 + 0x10]
	0x035062E0 STP X20, X19, [X23 + 0x30]
	0x035062E4 LDP X20, X19, [X31 + 0x20]
	0x035062E8 LDP X22, X21, [X31 + 0x10]
	0x035062EC LDP X30, X23, [X31], #0x30
	0x035062F0 RET
	0x035062F4 SUB X31, X31, 0x30
	0x035062F8 STP X30, X21, [X31 + 0x10]
	0x035062FC STP X20, X19, [X31 + 0x20]
	0x03506300 ADRP X19, 0xED9000
	0x03506304 ADRP X21, 0xBF5000
	0x03506308 LDRB W8, [X19 + 0xAAF]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0xEDA000
	009 Move X23, 0xBF6000
	010 Move W8, [X24+2723]
	011 Move X23, [X23+3840]
	012 Move X19, X3
	013 Move X20, X2
	014 Move W21, W1
	015 Move X22, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {25}
	020 Move X0, 0xBF6000
	021 Move X0, [X0+3840]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X24+2723], W8
	025 Move X0, [X23]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {30}
	029 Call 0x1C17DFC
	030 Move X0, X22
	031 Move W1, W21
	032 Move X2, X20
	033 Move X3, X19
	034 Move X20, [X31+48]
	035 Move X19, [X31+56]
	036 Move X22, [X31+32]
	037 Move X21, [X31+40]
	038 Move X24, [X31+16]
	039 Move X23, [X31+24]
	040 Move X30, [X31+64]

Method: System.Boolean RegisterType(System.Type customType, System.Byte code, ExitGames.Client.Photon.SerializeStreamMethod serializeMethod, ExitGames.Client.Photon.DeserializeStreamMethod constructor)

Disassembly:
	0x035064AC ADRP X0, 0xBED000
	0x035064B0 LDR X0, [X0 + 0x618]
	0x035064B4 BL 0x1C16CF4
	0x035064B8 ADRP X0, 0xC1E000
	0x035064BC LDR X0, [X0 + 0x830]
	0x035064C0 BL 0x1C16CF4
	0x035064C4 ADRP X0, 0xC1E000
	0x035064C8 LDR X0, [X0 + 0x838]
	0x035064CC BL 0x1C16CF4
	0x035064D0 MOVZ W8, 0x1
	0x035064D4 STRB W8, [X21 + 0xAD6]
	0x035064D8 LDR X0, [X20]
	0x035064DC MOVZ W1, 0x2
	0x035064E0 BL 0x1C16D6C
	0x035064E4 CBZ X0, 0x35065C8
	0x035064E8 LDR W8, [X0 + 0x18]
	0x035064EC CBZ W8, 0x35065C4
	0x035064F0 MOVZ W9, 0x1
	0x035064F4 CMP W8, 0x1
	0x035064F8 STRB W9, [X0 + 0x20]
	0x035064FC B.EQ 0x35065C4
	0x03506500 MOVZ W8, 0x6
	0x03506504 STRB W8, [X0 + 0x21]
	0x03506508 STR X0, [X19 + 0x18]
	0x0350650C LDR X0, [X20]
	0x03506510 ADRP X21, 0xC1E000
	0x03506514 ADRP X22, 0xC1E000
	0x03506518 LDR X21, [X21 + 0x838]
	0x0350651C LDR X22, [X22 + 0x830]
	0x03506520 MOVZ W1, 0x2
	0x03506524 BL 0x1C16D6C

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0xEDA000
	009 Move X23, 0xBF6000
	010 Move W8, [X24+2724]
	011 Move X23, [X23+3840]
	012 Move X19, X3
	013 Move X20, X2
	014 Move W21, W1
	015 Move X22, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {25}
	020 Move X0, 0xBF6000
	021 Move X0, [X0+3840]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X24+2724], W8
	025 Move X0, [X23]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {30}
	029 Call 0x1C17DFC
	030 Move X0, X22
	031 Move W1, W21
	032 Move X2, X20
	033 Move X3, X19
	034 Move X20, [X31+48]
	035 Move X19, [X31+56]
	036 Move X22, [X31+32]
	037 Move X21, [X31+40]
	038 Move X24, [X31+16]
	039 Move X23, [X31+24]
	040 Move X30, [X31+64]

Method: System.Void .cctor()

Disassembly:
	0x035066C8 CBZ W8, 0x35066D8
	0x035066CC MOV X0, X19
	0x035066D0 MOV X1, X31
	0x035066D4 BL 0x33E14E4
	0x035066D8 CBNZ X20, 0x35066F0
	0x035066DC MOV X0, X21
	0x035066E0 LDP X20, X19, [X31 + 0x20]
	0x035066E4 LDP X30, X21, [X31 + 0x10]
	0x035066E8 ADD X31, X31, 0x30
	0x035066EC RET
	0x035066F0 MOV X0, X20
	0x035066F4 BL 0x1C16F18
	0x035066F8 BL 0x1C16F20
	0x035066FC B 0x3506704
	0x03506700 B 0x3506704
	0x03506704 MOV X21, X0
	0x03506708 CMP W1, 0x1
	0x0350670C B.NE 0x3506728
	0x03506710 MOV X0, X21
	0x03506714 BL 0x3EB1AD0
	0x03506718 LDR X20, [X0]
	0x0350671C BL 0x3EB1AE0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0xEDA000
	005 Move X20, 0xBF6000
	006 Move W8, [X19+2725]
	007 Move X20, [X20+3808]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xBF6000
	013 Move X0, [X0+3808]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+2725], W8
	017 Move X8, [X20]
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move W9, 1200
	021 Move X8, [X8+184]
	022 NotImplemented "Instruction STRH not yet implemented."
	023 Move [X8+18], W31
	024 Move [X8+20], W9
	025 Move [X8+24], W31
	026 Move X30, [X31+32]
	027 Return 

Method: System.Boolean <EstablishEncryption>b__225_0()

Disassembly:
	0x03506720 MOV X21, X31
	0x03506724 B 0x35066C4
	0x03506728 MOV X20, X31
	0x0350672C B 0x3506734
	0x03506730 MOV X21, X0
	0x03506734 LDRB W8, [X31 + 0xC]
	0x03506738 CBZ W8, 0x3506748
	0x0350673C MOV X0, X19
	0x03506740 MOV X1, X31
	0x03506744 BL 0x33E14E4
	0x03506748 CBNZ X20, 0x3506754

ISIL:
	001 Move [X31-16], X30
	002 Move X8, X0
	003 Move X0, [X0+200]
	004 Compare X0, 0
	005 JumpIfEqual {12}
	006 Move X1, [X8+208]
	007 Move X2, X31
	008 Call PeerBase.ExchangeKeysForEncryption, X0, X1
	009 Move W0, W31
	010 Move X30, [X31+16]
	011 Return X0
	012 Call 0x1C17F20

