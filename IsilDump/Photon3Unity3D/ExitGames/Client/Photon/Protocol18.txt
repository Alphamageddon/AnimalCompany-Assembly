Type: ExitGames.Client.Photon.Protocol18

Method: System.String get_ProtocolType()

Disassembly:
	0x0350E59C ADRP X8, 0xBE5000
	0x0350E5A0 LDR X8, [X8 + 0x6C0]
	0x0350E5A4 LDR X0, [X8]
	0x0350E5A8 ADRP X8, 0xC0E000
	0x0350E5AC LDR X8, [X8 + 0x248]
	0x0350E5B0 B 0x350E768
	0x0350E5B4 ADRP X8, 0xBE5000
	0x0350E5B8 LDR X8, [X8 + 0x6C0]
	0x0350E5BC LDR X0, [X8]
	0x0350E5C0 ADRP X8, 0xC0C000
	0x0350E5C4 LDR X8, [X8 + 0xD68]
	0x0350E5C8 B 0x350E768
	0x0350E5CC ADRP X8, 0xBE5000
	0x0350E5D0 LDR X8, [X8 + 0x6C0]
	0x0350E5D4 LDR X0, [X8]
	0x0350E5D8 ADRP X8, 0xC0C000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0xED2000
	005 Move X20, 0xC26000
	006 Move W8, [X19+2777]
	007 Move X20, [X20+2824]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xC26000
	013 Move X0, [X0+2824]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+2777], W8
	017 Move X0, [X20]
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Return X0

Method: System.Byte[] get_VersionBytes()

Disassembly:
	0x0350E5DC LDR X8, [X8 + 0xD78]
	0x0350E5E0 B 0x350E768

ISIL:
	001 Move X0, [X0+24]
	002 Return X0

Method: System.Void Serialize(ExitGames.Client.Photon.StreamBuffer dout, System.Object serObject, System.Boolean setType)

Disassembly:
	0x0350E5E4 ADRP X8, 0xBE5000
	0x0350E5E8 LDR X8, [X8 + 0x6C0]

ISIL:
	001 And W3, W3, 1

Method: System.Void SerializeShort(ExitGames.Client.Photon.StreamBuffer dout, System.Int16 serObject, System.Boolean setType)

Disassembly:
	0x0350E65C ADRP X8, 0xBE5000
	0x0350E660 LDR X8, [X8 + 0x6C0]

ISIL:
	001 And W3, W3, 1

Method: System.Void SerializeString(ExitGames.Client.Photon.StreamBuffer dout, System.String serObject, System.Boolean setType)

Disassembly:
	0x0350E6D4 ADRP X8, 0xBE5000
	0x0350E6D8 LDR X8, [X8 + 0x6C0]

ISIL:
	001 And W3, W3, 1

Method: System.Object Deserialize(ExitGames.Client.Photon.StreamBuffer din, System.Byte type, ExitGames.Client.Photon.IProtocol/DeserializationFlags flags = 0)

Disassembly:
	0x0350E818 BL 0x1C16CF4
	0x0350E81C ADRP X0, 0xC26000
	0x0350E820 LDR X0, [X0 + 0x2D0]

ISIL:
	001 Move W3, W31
	002 Move X4, X31

Method: System.Int16 DeserializeShort(ExitGames.Client.Photon.StreamBuffer din)

Disassembly:
	0x0350F194 MOV X20, X0

ISIL:
No ISIL was generated
Method: System.Byte DeserializeByte(ExitGames.Client.Photon.StreamBuffer din)

Disassembly:
	0x0350F1FC LDR W1, [X31 + 0xC]
	0x0350F200 MOV X2, X31
	0x0350F204 BL 0x3317118
	0x0350F208 LDR X30, [X31], #0x10
	0x0350F20C RET
	0x0350F210 BL 0x1C16F20

ISIL:
	001 Compare X1, 0
	002 JumpIfEqual {7}
	003 Move X0, X1
	004 Move X1, X31
	005 Call StreamBuffer.ReadByte, X0
	006 Return X0
	007 Move [X31-16], X30
	008 Call 0x1C17F20

Method: System.Type GetAllowedDictionaryKeyTypes(ExitGames.Client.Photon.Protocol18/GpType gpType)

Disassembly:
	0x0350F22C MOV X3, X31
	0x0350F230 BL 0x351ECA4
	0x0350F234 LDR W1, [X31 + 0xC]
	0x0350F238 MOV X2, X31
	0x0350F23C BL 0x331712C
	0x0350F240 LDR X30, [X31], #0x10
	0x0350F244 RET
	0x0350F248 BL 0x1C16F20
	0x0350F24C STR X30, [X31 - 0x20]!
	0x0350F250 STP X20, X19, [X31 + 0x10]
	0x0350F254 ADRP X19, 0xED0000
	0x0350F258 LDRB W8, [X19 + 0xAE8]
	0x0350F25C MOV X20, X1
	0x0350F260 TBNZ X8, 0x0, 0x350F278
	0x0350F264 ADRP X0, 0xBE6000
	0x0350F268 LDR X0, [X0 + 0x278]
	0x0350F26C BL 0x1C16CF4
	0x0350F270 MOVZ W8, 0x1
	0x0350F274 STRB W8, [X19 + 0xAE8]
	0x0350F278 MOV X1, X20
	0x0350F27C BL 0x35108F4
	0x0350F280 CBZ W0, 0x350F2D4
	0x0350F284 STR W31, [X31 + 0xC]
	0x0350F288 CBZ X20, 0x350F2F4
	0x0350F28C MOV W19, W0
	0x0350F290 ADD X2, X31, 0xC
	0x0350F294 MOV X0, X20
	0x0350F298 MOV W1, W19
	0x0350F29C MOV X3, X31
	0x0350F2A0 BL 0x351ECA4
	0x0350F2A4 MOV X20, X0
	0x0350F2A8 MOV X0, X31
	0x0350F2AC BL 0x3241948
	0x0350F2B0 CBZ X0, 0x350F2F4
	0x0350F2B4 LDR X8, [X0]
	0x0350F2B8 LDR W2, [X31 + 0xC]
	0x0350F2BC MOV X1, X20
	0x0350F2C0 MOV W3, W19
	0x0350F2C4 LDR X9, [X8 + 0x388]
	0x0350F2C8 LDR X4, [X8 + 0x390]
	0x0350F2CC BLR X9
	0x0350F2D0 B 0x350F2E8
	0x0350F2D4 ADRP X8, 0xBE6000
	0x0350F2D8 LDR X8, [X8 + 0x278]
	0x0350F2DC LDR X8, [X8]
	0x0350F2E0 LDR X8, [X8 + 0xB8]
	0x0350F2E4 LDR X0, [X8]
	0x0350F2E8 LDP X20, X19, [X31 + 0x10]
	0x0350F2EC LDR X30, [X31], #0x20
	0x0350F2F0 RET
	0x0350F2F4 BL 0x1C16F20
	0x0350F2F8 STP X30, X19, [X31 - 0x10]!
	0x0350F2FC CBZ X1, 0x350F324
	0x0350F300 MOV X0, X1
	0x0350F304 MOV X1, X31
	0x0350F308 MOV W19, W2
	0x0350F30C BL 0x351EF00
	0x0350F310 AND W8, W0, 0xFF
	0x0350F314 ANDS W31, W19, 0x1
	0x0350F318 CSNEG W0, W8, W8, EQ
	0x0350F31C LDP X30, X19, [X31], #0x10
	0x0350F320 RET
	0x0350F324 BL 0x1C16F20
	0x0350F328 STP X30, X19, [X31 - 0x10]!
	0x0350F32C MOV W19, W2
	0x0350F330 BL 0x3510674
	0x0350F334 AND W8, W0, 0xFFFF
	0x0350F338 ANDS W31, W19, 0x1
	0x0350F33C CSNEG W0, W8, W8, EQ
	0x0350F340 LDP X30, X19, [X31], #0x10
	0x0350F344 RET
	0x0350F348 STR X30, [X31 - 0x10]!
	0x0350F34C BL 0x35108F4
	0x0350F350 AND W8, W0, 0x1
	0x0350F354 SUB W8, W31, W8
	0x0350F358 EOR W0, W8, W0, 0x1
	0x0350F35C LDR X30, [X31], #0x10
	0x0350F360 RET
	0x0350F364 STR X30, [X31 - 0x10]!
	0x0350F368 BL 0x3511C88
	0x0350F36C AND X8, X0, 0x1
	0x0350F370 SUB X8, X31, X8
	0x0350F374 EOR X0, X8, X0, 0x1
	0x0350F378 LDR X30, [X31], #0x10
	0x0350F37C RET
	0x0350F380 STP X29, X30, [X31 - 0x60]!
	0x0350F384 STP X28, X27, [X31 + 0x10]
	0x0350F388 STP X26, X25, [X31 + 0x20]
	0x0350F38C STP X24, X23, [X31 + 0x30]
	0x0350F390 STP X22, X21, [X31 + 0x40]
	0x0350F394 STP X20, X19, [X31 + 0x50]
	0x0350F398 ADRP X24, 0xED0000
	0x0350F39C ADRP X23, 0xBEC000
	0x0350F3A0 LDRB W8, [X24 + 0xAE3]
	0x0350F3A4 LDR X23, [X23 + 0xDA0]
	0x0350F3A8 MOV X19, X3
	0x0350F3AC MOV W20, W2
	0x0350F3B0 MOV X21, X1
	0x0350F3B4 MOV X22, X0
	0x0350F3B8 TBNZ X8, 0x0, 0x350F3E8
	0x0350F3BC ADRP X0, 0xBEC000
	0x0350F3C0 LDR X0, [X0 + 0xDA0]
	0x0350F3C4 BL 0x1C16CF4
	0x0350F3C8 ADRP X0, 0xC25000
	0x0350F3CC LDR X0, [X0 + 0x300]
	0x0350F3D0 BL 0x1C16CF4
	0x0350F3D4 ADRP X0, 0xC25000
	0x0350F3D8 LDR X0, [X0 + 0x308]
	0x0350F3DC BL 0x1C16CF4
	0x0350F3E0 MOVZ W8, 0x1
	0x0350F3E4 STRB W8, [X24 + 0xAE3]
	0x0350F3E8 MOV X1, X21
	0x0350F3EC BL 0x35108F4
	0x0350F3F0 LDR X8, [X23]
	0x0350F3F4 MOV W24, W0
	0x0350F3F8 MOV X0, X8
	0x0350F3FC BL 0x1C16F10
	0x0350F400 MOV W1, W24
	0x0350F404 MOV X2, X31
	0x0350F408 MOV X23, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xED1000
	005 Move W8, [X20+2778]
	006 Move W19, W0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {37}
	011 Move X0, 0xC0C000
	012 Move X0, [X0+3432]
	013 Call 0x1C17CF4
	014 Move X0, 0xC0D000
	015 Move X0, [X0+2680]
	016 Call 0x1C17CF4
	017 Move X0, 0xC0C000
	018 Move X0, [X0+3448]
	019 Call 0x1C17CF4
	020 Move X0, 0xC0C000
	021 Move X0, [X0+3456]
	022 Call 0x1C17CF4
	023 Move X0, 0xC0C000
	024 Move X0, [X0+3464]
	025 Call 0x1C17CF4
	026 Move X0, 0xC0D000
	027 Move X0, [X0+2688]
	028 Call 0x1C17CF4
	029 Move X0, 0xC0D000
	030 Move X0, [X0+2912]
	031 Call 0x1C17CF4
	032 Move X0, 0xBE5000
	033 Move X0, [X0+1728]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X20+2778], W8
	037 And W8, W19, 255
	038 Subtract W8, W8, 3
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Move X9, -43483136
	041 Add X9, X9, 3066
	042 NotImplemented "Instruction ADR not yet implemented."
	043 Move W11, [X9]
	044 Add X10, X10, X11
	045 CallNoReturn X10
	046 Move X8, 0xBE5000
	047 Move X8, [X8+1728]
	048 Move X0, [X8]
	049 Move X8, 0xC0C000
	050 Move X8, [X8+3456]
	051 Move X8, 0xBE5000
	052 Move X8, [X8+1728]
	053 Move X0, [X8]
	054 Move X8, 0xC0C000
	055 Move X8, [X8+3464]
	056 Move X8, 0xBE5000
	057 Move X8, [X8+1728]
	058 Move X0, [X8]
	059 Move X8, 0xC0C000
	060 Move X8, [X8+3432]
	061 Move X8, 0xBE5000
	062 Move X8, [X8+1728]
	063 Move X0, [X8]
	064 Move X8, 0xC0C000
	065 Move X8, [X8+3448]
	066 Move X8, 0xBE5000
	067 Move X8, [X8+1728]
	068 Move X0, [X8]
	069 Move X8, 0xC0D000
	070 Move X8, [X8+2688]
	071 Move X8, 0xBE5000
	072 Move X8, [X8+1728]
	073 Move X0, [X8]
	074 Move X8, 0xC0D000
	075 Move X8, [X8+2680]
	076 Move X8, 0xBE5000
	077 Move X8, [X8+1728]
	078 Move X0, [X8]
	079 Move X8, 0xC0D000
	080 Move X8, [X8+2912]
	081 Move W9, [X0+224]
	082 Move X19, [X8]
	083 Compare W9, 0
	084 JumpIfNotEqual {86}
	085 Call 0x1C17DFC
	086 Move X0, X19
	087 Move X20, [X31+16]
	088 Move X19, [X31+24]
	089 Move X1, X31
	090 Move X30, [X31+32]
	091 Call Type.GetTypeFromHandle, X0
	092 Return X0
	093 Move [X31+12], W19
	094 Move X0, 0xC26000
	095 Move X0, [X0+680]
	096 Call 0x1C17D08
	097 Add X1, X31, 12
	098 Call 0x1C17E04
	099 Move X19, X0
	100 Move X0, 0xC26000
	101 Move X0, [X0+688]
	102 Call 0x1C17D08
	103 Move X1, X19
	104 Move X2, X31
	105 Call String.Format, X0, X1
	106 Move X19, X0
	107 Move X0, 0xBE5000
	108 Move X0, [X0+2000]
	109 Call 0x1C17D08
	110 Call 0x1C17F10
	111 Move X1, X19
	112 Move X2, X31
	113 Move X20, X0
	114 Call Exception..ctor, X0, X1
	115 Move X0, 0xC26000
	116 Move X0, [X0+696]
	117 Call 0x1C17D08
	118 Move X1, X0
	119 Move X0, X20
	120 Call 0x1C17DEC

Method: System.Type GetClrArrayType(ExitGames.Client.Photon.Protocol18/GpType gpType)

Disassembly:
	0x0350F40C BL 0x34ED820
	0x0350F410 CMP W24, 0x1
	0x0350F414 B.LT 0x350F4E4
	0x0350F418 ADRP X26, 0xC25000
	0x0350F41C ADRP X27, 0xC25000
	0x0350F420 LDR X26, [X26 + 0x308]
	0x0350F424 LDR X27, [X27 + 0x300]
	0x0350F428 SXTW X28, W24
	0x0350F42C MOVZ W29, 0x1
	0x0350F430 MOV X0, X22
	0x0350F434 MOV X1, X21
	0x0350F438 MOV W2, W20
	0x0350F43C MOV X3, X19
	0x0350F440 BL 0x350EE44
	0x0350F444 MOV X25, X0
	0x0350F448 MOV X0, X22
	0x0350F44C MOV X1, X21
	0x0350F450 MOV W2, W20
	0x0350F454 MOV X3, X19
	0x0350F458 BL 0x350EE44
	0x0350F45C CBZ X25, 0x350F4A8
	0x0350F460 LDR X9, [X25]
	0x0350F464 LDR X8, [X26]
	0x0350F468 MOV X24, X0
	0x0350F46C LDRB W11, [X9 + 0x130]
	0x0350F470 LDRB W10, [X8 + 0x130]
	0x0350F474 CMP W11, W10
	0x0350F478 B.CC 0x350F490
	0x0350F47C LDR X9, [X9 + 0xC8]
	0x0350F480 ADD X9, X9, X10, 0x3, LSL
	0x0350F484 LDUR X9, [X9 - 0x8]
	0x0350F488 CMP X9, X8
	0x0350F48C B.EQ 0x350F4BC
	0x0350F490 CBZ X23, 0x350F504
	0x0350F494 MOV X0, X23
	0x0350F498 MOV X1, X25
	0x0350F49C MOV X2, X24
	0x0350F4A0 MOV X3, X31
	0x0350F4A4 BL 0x34ED8E0
	0x0350F4A8 MOV W8, W29
	0x0350F4AC CMP X8, X28
	0x0350F4B0 ADD W29, W29, 0x1
	0x0350F4B4 B.LT 0x350F430
	0x0350F4B8 B 0x350F4E4
	0x0350F4BC LDR X1, [X27]
	0x0350F4C0 MOV X0, X25
	0x0350F4C4 BL 0x22908A4
	0x0350F4C8 CBZ X23, 0x350F504
	0x0350F4CC MOV W1, W0
	0x0350F4D0 MOV X0, X23
	0x0350F4D4 MOV X2, X24
	0x0350F4D8 MOV X3, X31
	0x0350F4DC BL 0x34ED9F4
	0x0350F4E0 B 0x350F4A8
	0x0350F4E4 MOV X0, X23
	0x0350F4E8 LDP X20, X19, [X31 + 0x50]
	0x0350F4EC LDP X22, X21, [X31 + 0x40]
	0x0350F4F0 LDP X24, X23, [X31 + 0x30]
	0x0350F4F4 LDP X26, X25, [X31 + 0x20]
	0x0350F4F8 LDP X28, X27, [X31 + 0x10]
	0x0350F4FC LDP X29, X30, [X31], #0x60
	0x0350F500 RET
	0x0350F504 BL 0x1C16F20
	0x0350F508 STR X30, [X31 - 0x40]!
	0x0350F50C STP X24, X23, [X31 + 0x10]
	0x0350F510 STP X22, X21, [X31 + 0x20]
	0x0350F514 STP X20, X19, [X31 + 0x30]
	0x0350F518 ADRP X24, 0xED0000
	0x0350F51C ADRP X23, 0xBE4000
	0x0350F520 LDRB W8, [X24 + 0xAED]
	0x0350F524 LDR X23, [X23 + 0x6C0]
	0x0350F528 MOV X19, X3
	0x0350F52C MOV W20, W2
	0x0350F530 MOV X21, X1
	0x0350F534 MOV X22, X0
	0x0350F538 TBNZ X8, 0x0, 0x350F55C
	0x0350F53C ADRP X0, 0xBE4000
	0x0350F540 LDR X0, [X0 + 0x818]
	0x0350F544 BL 0x1C16CF4
	0x0350F548 ADRP X0, 0xBE4000
	0x0350F54C LDR X0, [X0 + 0x6C0]
	0x0350F550 BL 0x1C16CF4
	0x0350F554 MOVZ W8, 0x1
	0x0350F558 STRB W8, [X24 + 0xAED]
	0x0350F55C ADD X2, X31, 0xC
	0x0350F560 ADD X3, X31, 0x8
	0x0350F564 MOV X0, X22
	0x0350F568 MOV X1, X21
	0x0350F56C STRB W31, [X31 + 0xC]
	0x0350F570 STRB W31, [X31 + 0x8]
	0x0350F574 BL 0x3511330
	0x0350F578 LDR X8, [X23]
	0x0350F57C MOV X23, X0
	0x0350F580 LDR W9, [X8 + 0xE0]
	0x0350F584 CBNZ W9, 0x350F590
	0x0350F588 MOV X0, X8
	0x0350F58C BL 0x1C16DFC
	0x0350F590 MOV X0, X23
	0x0350F594 MOV X1, X31
	0x0350F598 MOV X2, X31
	0x0350F59C BL 0x3395194
	0x0350F5A0 MOV X24, X31
	0x0350F5A4 TBNZ X0, 0x0, 0x350F5EC
	0x0350F5A8 MOV X0, X23
	0x0350F5AC MOV X1, X31
	0x0350F5B0 BL 0x33A703C
	0x0350F5B4 ADRP X8, 0xBE4000
	0x0350F5B8 LDR X8, [X8 + 0x818]
	0x0350F5BC LDR X1, [X8]
	0x0350F5C0 BL 0x1C16E00
	0x0350F5C4 MOV X24, X0
	0x0350F5C8 CBZ X0, 0x350F5EC
	0x0350F5CC LDRB W3, [X31 + 0x8]
	0x0350F5D0 LDRB W2, [X31 + 0xC]
	0x0350F5D4 MOV X0, X22
	0x0350F5D8 MOV X1, X21
	0x0350F5DC MOV X4, X24
	0x0350F5E0 MOV W5, W20
	0x0350F5E4 MOV X6, X19
	0x0350F5E8 BL 0x3511914
	0x0350F5EC MOV X0, X24
	0x0350F5F0 LDP X20, X19, [X31 + 0x30]
	0x0350F5F4 LDP X22, X21, [X31 + 0x20]
	0x0350F5F8 LDP X24, X23, [X31 + 0x10]
	0x0350F5FC LDR X30, [X31], #0x40
	0x0350F600 RET
	0x0350F604 STP X30, X27, [X31 - 0x50]!
	0x0350F608 STP X26, X25, [X31 + 0x10]
	0x0350F60C STP X24, X23, [X31 + 0x20]
	0x0350F610 STP X22, X21, [X31 + 0x30]
	0x0350F614 STP X20, X19, [X31 + 0x40]
	0x0350F618 ADRP X24, 0xED0000
	0x0350F61C ADRP X23, 0xBE4000
	0x0350F620 LDRB W8, [X24 + 0xAEF]
	0x0350F624 LDR X23, [X23 + 0x9D0]
	0x0350F628 MOV X19, X3
	0x0350F62C MOV W20, W2
	0x0350F630 MOV X21, X1
	0x0350F634 MOV X22, X0
	0x0350F638 TBNZ X8, 0x0, 0x350F650
	0x0350F63C ADRP X0, 0xBE4000
	0x0350F640 LDR X0, [X0 + 0x9D0]
	0x0350F644 BL 0x1C16CF4
	0x0350F648 MOVZ W8, 0x1
	0x0350F64C STRB W8, [X24 + 0xAEF]
	0x0350F650 MOV X1, X21
	0x0350F654 BL 0x35108F4
	0x0350F658 LDR X8, [X23]
	0x0350F65C MOV W24, W0
	0x0350F660 MOV W1, W24
	0x0350F664 MOV X0, X8
	0x0350F668 BL 0x1C16D6C
	0x0350F66C MOV X23, X0
	0x0350F670 CBZ W24, 0x350F6D0
	0x0350F674 MOV X25, X31
	0x0350F678 MOV W26, W24
	0x0350F67C ADD X27, X23, 0x20
	0x0350F680 MOV X0, X22
	0x0350F684 MOV X1, X21
	0x0350F688 MOV W2, W20
	0x0350F68C MOV X3, X19
	0x0350F690 BL 0x350EE44
	0x0350F694 CBZ X23, 0x350F6EC
	0x0350F698 MOV X24, X0
	0x0350F69C CBZ X0, 0x350F6B4
	0x0350F6A0 LDR X8, [X23]
	0x0350F6A4 MOV X0, X24
	0x0350F6A8 LDR X1, [X8 + 0x40]
	0x0350F6AC BL 0x1C16E00
	0x0350F6B0 CBZ X0, 0x350F6F4
	0x0350F6B4 LDR W8, [X23 + 0x18]
	0x0350F6B8 CMP X25, X8
	0x0350F6BC B.CS 0x350F6F0
	0x0350F6C0 STR X24, [X27, X25, LSL #3]
	0x0350F6C4 ADD X25, X25, 0x1
	0x0350F6C8 CMP X26, X25
	0x0350F6CC B.NE 0x350F680
	0x0350F6D0 MOV X0, X23
	0x0350F6D4 LDP X20, X19, [X31 + 0x40]
	0x0350F6D8 LDP X22, X21, [X31 + 0x30]
	0x0350F6DC LDP X24, X23, [X31 + 0x20]
	0x0350F6E0 LDP X26, X25, [X31 + 0x10]
	0x0350F6E4 LDP X30, X27, [X31], #0x50
	0x0350F6E8 RET
	0x0350F6EC BL 0x1C16F20
	0x0350F6F0 BL 0x1C16F28
	0x0350F6F4 BL 0x1C16F44
	0x0350F6F8 MOV X1, X31
	0x0350F6FC BL 0x1C16DEC
	0x0350F700 STP X30, X25, [X31 - 0x40]!
	0x0350F704 STP X24, X23, [X31 + 0x10]
	0x0350F708 STP X22, X21, [X31 + 0x20]
	0x0350F70C STP X20, X19, [X31 + 0x30]
	0x0350F710 ADRP X21, 0xED0000
	0x0350F714 ADRP X19, 0xBE6000
	0x0350F718 LDRB W8, [X21 + 0xAF1]
	0x0350F71C LDR X19, [X19 + 0x9B8]
	0x0350F720 MOV X20, X1
	0x0350F724 TBNZ X8, 0x0, 0x350F748
	0x0350F728 ADRP X0, 0xBE6000
	0x0350F72C LDR X0, [X0 + 0x9B8]
	0x0350F730 BL 0x1C16CF4
	0x0350F734 ADRP X0, 0xBED000
	0x0350F738 LDR X0, [X0 + 0xBB0]
	0x0350F73C BL 0x1C16CF4
	0x0350F740 MOVZ W8, 0x1
	0x0350F744 STRB W8, [X21 + 0xAF1]
	0x0350F748 MOV X1, X20
	0x0350F74C BL 0x35108F4
	0x0350F750 LDR X8, [X19]
	0x0350F754 MOV W21, W0
	0x0350F758 MOV W1, W21
	0x0350F75C MOV X0, X8
	0x0350F760 BL 0x1C16D6C
	0x0350F764 CMP W21, 0x8
	0x0350F768 MOV X19, X0
	0x0350F76C B.LT 0x350F860
	0x0350F770 CBZ X20, 0x350F920
	0x0350F774 UBFM W9, W21, 0x3, 0x1F
	0x0350F778 MOV X8, X31
	0x0350F77C ADD W22, W9, 0x1
	0x0350F780 ADD X23, X19, 0x27
	0x0350F784 MOV X0, X20
	0x0350F788 MOV X1, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xED1000
	005 Move W8, [X20+2779]
	006 Move W19, W0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {79}
	011 Move X0, 0xC17000
	012 Move X0, [X0+272]
	013 Call 0x1C17CF4
	014 Move X0, 0xC0E000
	015 Move X0, [X0+584]
	016 Call 0x1C17CF4
	017 Move X0, 0xC17000
	018 Move X0, [X0+280]
	019 Call 0x1C17CF4
	020 Move X0, 0xC0C000
	021 Move X0, [X0+3432]
	022 Call 0x1C17CF4
	023 Move X0, 0xC17000
	024 Move X0, [X0+328]
	025 Call 0x1C17CF4
	026 Move X0, 0xC0D000
	027 Move X0, [X0+2680]
	028 Call 0x1C17CF4
	029 Move X0, 0xC26000
	030 Move X0, [X0+128]
	031 Call 0x1C17CF4
	032 Move X0, 0xC26000
	033 Move X0, [X0+704]
	034 Call 0x1C17CF4
	035 Move X0, 0xC26000
	036 Move X0, [X0+136]
	037 Call 0x1C17CF4
	038 Move X0, 0xC0E000
	039 Move X0, [X0+2656]
	040 Call 0x1C17CF4
	041 Move X0, 0xC0C000
	042 Move X0, [X0+3448]
	043 Call 0x1C17CF4
	044 Move X0, 0xC17000
	045 Move X0, [X0+336]
	046 Call 0x1C17CF4
	047 Move X0, 0xC0C000
	048 Move X0, [X0+3456]
	049 Call 0x1C17CF4
	050 Move X0, 0xC17000
	051 Move X0, [X0+344]
	052 Call 0x1C17CF4
	053 Move X0, 0xC0C000
	054 Move X0, [X0+3464]
	055 Call 0x1C17CF4
	056 Move X0, 0xC26000
	057 Move X0, [X0+144]
	058 Call 0x1C17CF4
	059 Move X0, 0xC26000
	060 Move X0, [X0+152]
	061 Call 0x1C17CF4
	062 Move X0, 0xC0E000
	063 Move X0, [X0+2664]
	064 Call 0x1C17CF4
	065 Move X0, 0xC0D000
	066 Move X0, [X0+2688]
	067 Call 0x1C17CF4
	068 Move X0, 0xC17000
	069 Move X0, [X0+368]
	070 Call 0x1C17CF4
	071 Move X0, 0xC0D000
	072 Move X0, [X0+2912]
	073 Call 0x1C17CF4
	074 Move X0, 0xBE5000
	075 Move X0, [X0+1728]
	076 Call 0x1C17CF4
	077 Move W8, 1
	078 Move [X20+2779], W8
	079 And W8, W19, 255
	080 Subtract W9, W8, 2
	081 NotImplemented "Instruction CMP not yet implemented."
	082 Move X10, -43483136
	083 Add X10, X10, 3098
	084 NotImplemented "Instruction ADR not yet implemented."
	085 Move W12, [X10]
	086 Add X11, X11, X12
	087 CallNoReturn X11
	088 Move X20, [X31+16]
	089 Move X19, [X31+24]
	090 Move X0, X31
	091 Move X30, [X31+32]
	092 Return X0
	093 Move X8, 0xBE5000
	094 Move X8, [X8+1728]
	095 Move X0, [X8]
	096 Move X8, 0xC0C000
	097 Move X8, [X8+3456]
	098 Move X8, 0xBE5000
	099 Move X8, [X8+1728]
	100 Move X0, [X8]
	101 Move X8, 0xC0C000
	102 Move X8, [X8+3464]
	103 Move X8, 0xBE5000
	104 Move X8, [X8+1728]
	105 Move X0, [X8]
	106 Move X8, 0xC0E000
	107 Move X8, [X8+584]
	108 Move X8, 0xBE5000
	109 Move X8, [X8+1728]
	110 Move X0, [X8]
	111 Move X8, 0xC0C000
	112 Move X8, [X8+3432]
	113 Move X8, 0xBE5000
	114 Move X8, [X8+1728]
	115 Move X0, [X8]
	116 Move X8, 0xC0C000
	117 Move X8, [X8+3448]
	118 Move X8, 0xBE5000
	119 Move X8, [X8+1728]
	120 Move X0, [X8]
	121 Move X8, 0xC0D000
	122 Move X8, [X8+2688]
	123 Move X8, 0xBE5000
	124 Move X8, [X8+1728]
	125 Move X0, [X8]
	126 Move X8, 0xC0D000
	127 Move X8, [X8+2680]
	128 Move X8, 0xBE5000
	129 Move X8, [X8+1728]
	130 Move X0, [X8]
	131 Move X8, 0xC0D000
	132 Move X8, [X8+2912]
	133 Move X8, 0xBE5000
	134 Move X8, [X8+1728]
	135 Move X0, [X8]
	136 Move X8, 0xC26000
	137 Move X8, [X8+136]
	138 Move X8, 0xBE5000
	139 Move X8, [X8+1728]
	140 Move X0, [X8]
	141 Move X8, 0xC26000
	142 Move X8, [X8+144]
	143 Move X8, 0xBE5000
	144 Move X8, [X8+1728]
	145 Move X0, [X8]
	146 Move X8, 0xC26000
	147 Move X8, [X8+152]
	148 Move X8, 0xBE5000
	149 Move X8, [X8+1728]
	150 Move X0, [X8]
	151 Move X8, 0xC26000
	152 Move X8, [X8+128]
	153 Move X8, 0xBE5000
	154 Move X8, [X8+1728]
	155 Move X0, [X8]
	156 Move X8, 0xC17000
	157 Move X8, [X8+272]
	158 Move X8, 0xBE5000
	159 Move X8, [X8+1728]
	160 Move X0, [X8]
	161 Move X8, 0xC17000
	162 Move X8, [X8+280]
	163 Move X8, 0xBE5000
	164 Move X8, [X8+1728]
	165 Move X0, [X8]
	166 Move X8, 0xC0E000
	167 Move X8, [X8+2656]
	168 Move X8, 0xBE5000
	169 Move X8, [X8+1728]
	170 Move X0, [X8]
	171 Move X8, 0xC0E000
	172 Move X8, [X8+2664]
	173 Move X8, 0xBE5000
	174 Move X8, [X8+1728]
	175 Move X0, [X8]
	176 Move X8, 0xC17000
	177 Move X8, [X8+328]
	178 Move X8, 0xBE5000
	179 Move X8, [X8+1728]
	180 Move X0, [X8]
	181 Move X8, 0xC17000
	182 Move X8, [X8+368]
	183 Move X8, 0xBE5000
	184 Move X8, [X8+1728]
	185 Move X0, [X8]
	186 Move X8, 0xC17000
	187 Move X8, [X8+336]
	188 Move X8, 0xBE5000
	189 Move X8, [X8+1728]
	190 Move X0, [X8]
	191 Move X8, 0xC17000
	192 Move X8, [X8+344]
	193 NotImplemented "Instruction CMP not yet implemented."
	194 Move X8, 0xBE5000
	195 Move X8, [X8+1728]
	196 Move X0, [X8]
	197 Move X8, 0xC26000
	198 Move X8, [X8+704]
	199 Move W9, [X0+224]
	200 Move X19, [X8]
	201 Compare W9, 0
	202 JumpIfNotEqual {204}
	203 Call 0x1C17DFC
	204 Move X0, X19
	205 Move X20, [X31+16]
	206 Move X19, [X31+24]
	207 Move X1, X31
	208 Move X30, [X31+32]
	209 Call Type.GetTypeFromHandle, X0
	210 Return X0

Method: ExitGames.Client.Photon.Protocol18/GpType GetCodeOfType(System.Type type)

Disassembly:
	0x0350F78C MOV X24, X8
	0x0350F790 BL 0x351EF00
	0x0350F794 CBZ X19, 0x350F920
	0x0350F798 LDR W8, [X19 + 0x18]
	0x0350F79C CMP X24, X8
	0x0350F7A0 B.CS 0x350F91C
	0x0350F7A4 ADD X10, X24, 0x1
	0x0350F7A8 AND W11, W0, 0x1
	0x0350F7AC ADD X9, X23, X24
	0x0350F7B0 CMP X10, X8
	0x0350F7B4 STURB W11, [X9 - 0x7]
	0x0350F7B8 B.CS 0x350F91C
	0x0350F7BC ADD X10, X10, 0x1
	0x0350F7C0 UBFM W11, W0, 0x1, 0x1
	0x0350F7C4 CMP X10, X8
	0x0350F7C8 STURB W11, [X9 - 0x6]
	0x0350F7CC B.CS 0x350F91C
	0x0350F7D0 ADD X10, X10, 0x1
	0x0350F7D4 UBFM W11, W0, 0x2, 0x2
	0x0350F7D8 ADD X9, X23, X24
	0x0350F7DC CMP X10, X8
	0x0350F7E0 STURB W11, [X9 - 0x5]
	0x0350F7E4 B.CS 0x350F91C
	0x0350F7E8 ADD X10, X10, 0x1
	0x0350F7EC UBFM W11, W0, 0x3, 0x3
	0x0350F7F0 CMP X10, X8
	0x0350F7F4 STURB W11, [X9 - 0x4]
	0x0350F7F8 B.CS 0x350F91C
	0x0350F7FC ADD X10, X10, 0x1
	0x0350F800 UBFM W11, W0, 0x4, 0x4
	0x0350F804 ADD X9, X23, X24
	0x0350F808 CMP X10, X8
	0x0350F80C STURB W11, [X9 - 0x3]
	0x0350F810 B.CS 0x350F91C
	0x0350F814 ADD X10, X10, 0x1
	0x0350F818 UBFM W11, W0, 0x5, 0x5
	0x0350F81C CMP X10, X8
	0x0350F820 STURB W11, [X9 - 0x2]
	0x0350F824 B.CS 0x350F91C
	0x0350F828 ADD X9, X10, 0x1
	0x0350F82C UBFM W11, W0, 0x6, 0x6
	0x0350F830 ADD X12, X23, X24
	0x0350F834 CMP X9, X8
	0x0350F838 STURB W11, [X12 - 0x1]
	0x0350F83C B.CS 0x350F91C
	0x0350F840 UBFM W8, W0, 0x7, 0x7
	0x0350F844 SUB W22, W22, 0x1
	0x0350F848 STRB W8, [X23, X24, LSL]
	0x0350F84C CMP W22, 0x1
	0x0350F850 ADD X8, X9, 0x1
	0x0350F854 B.GT 0x350F784
	0x0350F858 ADD X8, X24, 0x8
	0x0350F85C B 0x350F864
	0x0350F860 MOV W8, W31
	0x0350F864 SXTW X22, W8
	0x0350F868 CMP X22, W21, UXTW
	0x0350F86C B.GE 0x350F904
	0x0350F870 CBZ X20, 0x350F920
	0x0350F874 MOV X0, X20
	0x0350F878 MOV X1, X31
	0x0350F87C MOV W21, W21
	0x0350F880 BL 0x351EF00
	0x0350F884 ADRP X24, 0xBED000
	0x0350F888 LDR X24, [X24 + 0xBB0]
	0x0350F88C MOV W20, W0
	0x0350F890 MOV W23, W31
	0x0350F894 MOV X25, X22
	0x0350F898 LDR X0, [X24]
	0x0350F89C LDR W8, [X0 + 0xE0]
	0x0350F8A0 CBNZ W8, 0x350F8AC
	0x0350F8A4 BL 0x1C16DFC
	0x0350F8A8 LDR X0, [X24]
	0x0350F8AC LDR X8, [X0 + 0xB8]
	0x0350F8B0 LDR X8, [X8]
	0x0350F8B4 CBZ X8, 0x350F920
	0x0350F8B8 LDR W9, [X8 + 0x18]
	0x0350F8BC CMP W23, W9
	0x0350F8C0 B.CS 0x350F91C
	0x0350F8C4 CBZ X19, 0x350F920
	0x0350F8C8 LDR W10, [X19 + 0x18]
	0x0350F8CC ADD W9, W22, W23
	0x0350F8D0 CMP W9, W10
	0x0350F8D4 B.CS 0x350F91C
	0x0350F8D8 ADD X8, X8, W23, SXTW
	0x0350F8DC LDRB W8, [X8 + 0x20]
	0x0350F8E0 ADD W9, W9, 0x1
	0x0350F8E4 ADD X10, X19, X25
	0x0350F8E8 SXTW X25, W9
	0x0350F8EC BICS W31, W8, W20, 0x0
	0x0350F8F0 CSET W8, EQ
	0x0350F8F4 CMP X25, X21
	0x0350F8F8 ADD W23, W23, 0x1
	0x0350F8FC STRB W8, [X10 + 0x20]
	0x0350F900 B.LT 0x350F89C
	0x0350F904 MOV X0, X19
	0x0350F908 LDP X20, X19, [X31 + 0x30]
	0x0350F90C LDP X22, X21, [X31 + 0x20]
	0x0350F910 LDP X24, X23, [X31 + 0x10]
	0x0350F914 LDP X30, X25, [X31], #0x40
	0x0350F918 RET
	0x0350F91C BL 0x1C16F28
	0x0350F920 BL 0x1C16F20
	0x0350F924 STP X30, X21, [X31 - 0x20]!
	0x0350F928 STP X20, X19, [X31 + 0x10]
	0x0350F92C ADRP X21, 0xED0000
	0x0350F930 ADRP X20, 0xBE4000
	0x0350F934 LDRB W8, [X21 + 0xADE]
	0x0350F938 LDR X20, [X20 + 0x618]
	0x0350F93C MOV X19, X1
	0x0350F940 TBNZ X8, 0x0, 0x350F958
	0x0350F944 ADRP X0, 0xBE4000
	0x0350F948 LDR X0, [X0 + 0x618]
	0x0350F94C BL 0x1C16CF4
	0x0350F950 MOVZ W8, 0x1
	0x0350F954 STRB W8, [X21 + 0xADE]
	0x0350F958 MOV X1, X19
	0x0350F95C BL 0x35108F4
	0x0350F960 LDR X8, [X20]
	0x0350F964 MOV W20, W0
	0x0350F968 MOV W1, W20
	0x0350F96C MOV X0, X8
	0x0350F970 BL 0x1C16D6C
	0x0350F974 CBZ X19, 0x350F9A4
	0x0350F978 MOV X21, X0
	0x0350F97C MOV X0, X19
	0x0350F980 MOV X1, X21
	0x0350F984 MOV W2, W31
	0x0350F988 MOV W3, W20
	0x0350F98C MOV X4, X31
	0x0350F990 BL 0x351EE98
	0x0350F994 LDP X20, X19, [X31 + 0x10]
	0x0350F998 MOV X0, X21
	0x0350F99C LDP X30, X21, [X31], #0x20
	0x0350F9A0 RET
	0x0350F9A4 BL 0x1C16F20
	0x0350F9A8 STR X30, [X31 - 0x30]!
	0x0350F9AC STP X22, X21, [X31 + 0x10]
	0x0350F9B0 STP X20, X19, [X31 + 0x20]
	0x0350F9B4 ADRP X21, 0xED0000
	0x0350F9B8 ADRP X20, 0xC0C000
	0x0350F9BC LDRB W8, [X21 + 0xAF2]
	0x0350F9C0 LDR X20, [X20 + 0x820]
	0x0350F9C4 MOV X19, X1
	0x0350F9C8 TBNZ X8, 0x0, 0x350F9E0
	0x0350F9CC ADRP X0, 0xC0C000
	0x0350F9D0 LDR X0, [X0 + 0x820]
	0x0350F9D4 BL 0x1C16CF4
	0x0350F9D8 MOVZ W8, 0x1
	0x0350F9DC STRB W8, [X21 + 0xAF2]
	0x0350F9E0 MOV X1, X19
	0x0350F9E4 BL 0x35108F4
	0x0350F9E8 LDR X8, [X20]
	0x0350F9EC MOV W1, W0
	0x0350F9F0 MOV X0, X8
	0x0350F9F4 BL 0x1C16D6C
	0x0350F9F8 CBZ X0, 0x350FA50
	0x0350F9FC LDR W8, [X0 + 0x18]
	0x0350FA00 MOV X20, X0
	0x0350FA04 CMP W8, 0x1
	0x0350FA08 B.LT 0x350FA38
	0x0350FA0C MOV X21, X31
	0x0350FA10 ADD X22, X20, 0x20
	0x0350FA14 MOV X1, X19
	0x0350FA18 BL 0x350E198
	0x0350FA1C LDR W8, [X20 + 0x18]
	0x0350FA20 CMP X21, X8
	0x0350FA24 B.CS 0x350FA4C
	0x0350FA28 STRH W0, [X22, X21, LSL #1]
	0x0350FA2C ADD X21, X21, 0x1
	0x0350FA30 CMP X21, W8, SXTW
	0x0350FA34 B.LT 0x350FA14
	0x0350FA38 MOV X0, X20
	0x0350FA3C LDP X20, X19, [X31 + 0x20]
	0x0350FA40 LDP X22, X21, [X31 + 0x10]
	0x0350FA44 LDR X30, [X31], #0x30
	0x0350FA48 RET
	0x0350FA4C BL 0x1C16F28
	0x0350FA50 BL 0x1C16F20
	0x0350FA54 SUB X31, X31, 0x30
	0x0350FA58 STP X30, X21, [X31 + 0x10]
	0x0350FA5C STP X20, X19, [X31 + 0x20]
	0x0350FA60 ADRP X21, 0xED0000
	0x0350FA64 ADRP X20, 0xC15000
	0x0350FA68 LDRB W8, [X21 + 0xAF4]
	0x0350FA6C LDR X20, [X20 + 0x830]
	0x0350FA70 MOV X19, X1
	0x0350FA74 TBNZ X8, 0x0, 0x350FA8C
	0x0350FA78 ADRP X0, 0xC15000
	0x0350FA7C LDR X0, [X0 + 0x830]
	0x0350FA80 BL 0x1C16CF4
	0x0350FA84 MOVZ W8, 0x1
	0x0350FA88 STRB W8, [X21 + 0xAF4]
	0x0350FA8C MOV X1, X19
	0x0350FA90 STR W31, [X31 + 0xC]
	0x0350FA94 BL 0x35108F4
	0x0350FA98 LDR X8, [X20]
	0x0350FA9C MOV W21, W0
	0x0350FAA0 MOV W1, W21
	0x0350FAA4 MOV X0, X8
	0x0350FAA8 BL 0x1C16D6C
	0x0350FAAC CBZ X19, 0x350FAF8
	0x0350FAB0 UBFM W21, W21, 0x1D, 0x1C
	0x0350FAB4 MOV X20, X0
	0x0350FAB8 ADD X2, X31, 0xC
	0x0350FABC MOV X0, X19
	0x0350FAC0 MOV W1, W21
	0x0350FAC4 MOV X3, X31
	0x0350FAC8 BL 0x351ECA4
	0x0350FACC LDR W1, [X31 + 0xC]
	0x0350FAD0 MOV X2, X20
	0x0350FAD4 MOV W3, W31
	0x0350FAD8 MOV W4, W21
	0x0350FADC MOV X5, X31
	0x0350FAE0 BL 0x33A8A9C
	0x0350FAE4 MOV X0, X20
	0x0350FAE8 LDP X20, X19, [X31 + 0x20]
	0x0350FAEC LDP X30, X21, [X31 + 0x10]
	0x0350FAF0 ADD X31, X31, 0x30
	0x0350FAF4 RET
	0x0350FAF8 BL 0x1C16F20
	0x0350FAFC SUB X31, X31, 0x30
	0x0350FB00 STP X30, X21, [X31 + 0x10]
	0x0350FB04 STP X20, X19, [X31 + 0x20]
	0x0350FB08 ADRP X21, 0xED0000
	0x0350FB0C ADRP X20, 0xBE4000
	0x0350FB10 LDRB W8, [X21 + 0xAF3]
	0x0350FB14 LDR X20, [X20 + 0x638]
	0x0350FB18 MOV X19, X1
	0x0350FB1C TBNZ X8, 0x0, 0x350FB34
	0x0350FB20 ADRP X0, 0xBE4000
	0x0350FB24 LDR X0, [X0 + 0x638]
	0x0350FB28 BL 0x1C16CF4
	0x0350FB2C MOVZ W8, 0x1
	0x0350FB30 STRB W8, [X21 + 0xAF3]
	0x0350FB34 MOV X1, X19
	0x0350FB38 STR W31, [X31 + 0xC]
	0x0350FB3C BL 0x35108F4
	0x0350FB40 LDR X8, [X20]
	0x0350FB44 MOV W21, W0
	0x0350FB48 MOV W1, W21
	0x0350FB4C MOV X0, X8
	0x0350FB50 BL 0x1C16D6C
	0x0350FB54 CBZ X19, 0x350FBA0
	0x0350FB58 UBFM W21, W21, 0x1E, 0x1D
	0x0350FB5C MOV X20, X0
	0x0350FB60 ADD X2, X31, 0xC
	0x0350FB64 MOV X0, X19
	0x0350FB68 MOV W1, W21
	0x0350FB6C MOV X3, X31
	0x0350FB70 BL 0x351ECA4
	0x0350FB74 LDR W1, [X31 + 0xC]
	0x0350FB78 MOV X2, X20
	0x0350FB7C MOV W3, W31
	0x0350FB80 MOV W4, W21
	0x0350FB84 MOV X5, X31
	0x0350FB88 BL 0x33A8A9C
	0x0350FB8C MOV X0, X20
	0x0350FB90 LDP X20, X19, [X31 + 0x20]
	0x0350FB94 LDP X30, X21, [X31 + 0x10]
	0x0350FB98 ADD X31, X31, 0x30
	0x0350FB9C RET
	0x0350FBA0 BL 0x1C16F20
	0x0350FBA4 STP X30, X23, [X31 - 0x30]!
	0x0350FBA8 STP X22, X21, [X31 + 0x10]
	0x0350FBAC STP X20, X19, [X31 + 0x20]
	0x0350FBB0 ADRP X22, 0xED0000
	0x0350FBB4 ADRP X21, 0xBE4000
	0x0350FBB8 LDRB W8, [X22 + 0xAF5]
	0x0350FBBC LDR X21, [X21 + 0xAC8]
	0x0350FBC0 MOV X19, X1
	0x0350FBC4 MOV X20, X0
	0x0350FBC8 TBNZ X8, 0x0, 0x350FBE0
	0x0350FBCC ADRP X0, 0xBE4000
	0x0350FBD0 LDR X0, [X0 + 0xAC8]
	0x0350FBD4 BL 0x1C16CF4
	0x0350FBD8 MOVZ W8, 0x1
	0x0350FBDC STRB W8, [X22 + 0xAF5]
	0x0350FBE0 MOV X1, X19
	0x0350FBE4 BL 0x35108F4
	0x0350FBE8 LDR X8, [X21]
	0x0350FBEC MOV W1, W0
	0x0350FBF0 MOV X0, X8
	0x0350FBF4 BL 0x1C16D6C
	0x0350FBF8 CBZ X0, 0x350FC54
	0x0350FBFC LDR W8, [X0 + 0x18]
	0x0350FC00 MOV X21, X0
	0x0350FC04 CMP W8, 0x1
	0x0350FC08 B.LT 0x350FC3C
	0x0350FC0C MOV X22, X31
	0x0350FC10 ADD X23, X21, 0x20
	0x0350FC14 MOV X0, X20
	0x0350FC18 MOV X1, X19
	0x0350FC1C BL 0x350F24C
	0x0350FC20 LDR W8, [X21 + 0x18]
	0x0350FC24 CMP X22, X8
	0x0350FC28 B.CS 0x350FC50
	0x0350FC2C STR X0, [X23, X22, LSL #3]
	0x0350FC30 ADD X22, X22, 0x1
	0x0350FC34 CMP X22, W8, SXTW
	0x0350FC38 B.LT 0x350FC14
	0x0350FC3C MOV X0, X21
	0x0350FC40 LDP X20, X19, [X31 + 0x20]
	0x0350FC44 LDP X22, X21, [X31 + 0x10]
	0x0350FC48 LDP X30, X23, [X31], #0x30
	0x0350FC4C RET
	0x0350FC50 BL 0x1C16F28
	0x0350FC54 BL 0x1C16F20
	0x0350FC58 STP X30, X27, [X31 - 0x50]!
	0x0350FC5C STP X26, X25, [X31 + 0x10]
	0x0350FC60 STP X24, X23, [X31 + 0x20]
	0x0350FC64 STP X22, X21, [X31 + 0x30]
	0x0350FC68 STP X20, X19, [X31 + 0x40]
	0x0350FC6C ADRP X24, 0xED0000
	0x0350FC70 ADRP X23, 0xC25000
	0x0350FC74 LDRB W8, [X24 + 0xAF6]
	0x0350FC78 LDR X23, [X23 + 0x310]
	0x0350FC7C MOV X19, X3
	0x0350FC80 MOV W20, W2
	0x0350FC84 MOV X21, X1
	0x0350FC88 MOV X22, X0
	0x0350FC8C TBNZ X8, 0x0, 0x350FCA4
	0x0350FC90 ADRP X0, 0xC25000
	0x0350FC94 LDR X0, [X0 + 0x310]
	0x0350FC98 BL 0x1C16CF4
	0x0350FC9C MOVZ W8, 0x1
	0x0350FCA0 STRB W8, [X24 + 0xAF6]
	0x0350FCA4 MOV X1, X21
	0x0350FCA8 BL 0x35108F4
	0x0350FCAC LDR X8, [X23]
	0x0350FCB0 MOV W24, W0
	0x0350FCB4 MOV W1, W24
	0x0350FCB8 MOV X0, X8
	0x0350FCBC BL 0x1C16D6C
	0x0350FCC0 MOV X23, X0
	0x0350FCC4 CBZ W24, 0x350FD24
	0x0350FCC8 MOV X25, X31
	0x0350FCCC MOV W26, W24
	0x0350FCD0 ADD X27, X23, 0x20
	0x0350FCD4 MOV X0, X22
	0x0350FCD8 MOV X1, X21
	0x0350FCDC MOV W2, W20
	0x0350FCE0 MOV X3, X19
	0x0350FCE4 BL 0x350F380
	0x0350FCE8 CBZ X23, 0x350FD40
	0x0350FCEC MOV X24, X0
	0x0350FCF0 CBZ X0, 0x350FD08
	0x0350FCF4 LDR X8, [X23]
	0x0350FCF8 MOV X0, X24
	0x0350FCFC LDR X1, [X8 + 0x40]
	0x0350FD00 BL 0x1C16E00
	0x0350FD04 CBZ X0, 0x350FD48
	0x0350FD08 LDR W8, [X23 + 0x18]
	0x0350FD0C CMP X25, X8
	0x0350FD10 B.CS 0x350FD44
	0x0350FD14 STR X24, [X27, X25, LSL #3]
	0x0350FD18 ADD X25, X25, 0x1
	0x0350FD1C CMP X26, X25
	0x0350FD20 B.NE 0x350FCD4
	0x0350FD24 MOV X0, X23
	0x0350FD28 LDP X20, X19, [X31 + 0x40]
	0x0350FD2C LDP X22, X21, [X31 + 0x30]
	0x0350FD30 LDP X24, X23, [X31 + 0x20]
	0x0350FD34 LDP X26, X25, [X31 + 0x10]
	0x0350FD38 LDP X30, X27, [X31], #0x50
	0x0350FD3C RET
	0x0350FD40 BL 0x1C16F20
	0x0350FD44 BL 0x1C16F28
	0x0350FD48 BL 0x1C16F44
	0x0350FD4C MOV X1, X31
	0x0350FD50 BL 0x1C16DEC
	0x0350FD54 SUB X31, X31, 0x80
	0x0350FD58 STP X29, X30, [X31 + 0x20]
	0x0350FD5C STP X28, X27, [X31 + 0x30]
	0x0350FD60 STP X26, X25, [X31 + 0x40]
	0x0350FD64 STP X24, X23, [X31 + 0x50]
	0x0350FD68 STP X22, X21, [X31 + 0x60]
	0x0350FD6C STP X20, X19, [X31 + 0x70]
	0x0350FD70 ADRP X19, 0xED0000
	0x0350FD74 LDRB W8, [X19 + 0xAF7]
	0x0350FD78 MOV X21, X1
	0x0350FD7C MOV X22, X0
	0x0350FD80 STR X3, [X31 + 0x10]
	0x0350FD84 STR W2, [X31 + 0xC]
	0x0350FD88 TBNZ X8, 0x0, 0x350FDAC
	0x0350FD8C ADRP X0, 0xC25000
	0x0350FD90 LDR X0, [X0 + 0x318]
	0x0350FD94 BL 0x1C16CF4
	0x0350FD98 ADRP X0, 0xBE4000
	0x0350FD9C LDR X0, [X0 + 0x818]
	0x0350FDA0 BL 0x1C16CF4
	0x0350FDA4 MOVZ W8, 0x1
	0x0350FDA8 STRB W8, [X19 + 0xAF7]
	0x0350FDAC ADD X2, X31, 0x1C
	0x0350FDB0 ADD X3, X31, 0x18
	0x0350FDB4 MOV X0, X22
	0x0350FDB8 MOV X1, X21
	0x0350FDBC STRB W31, [X31 + 0x1C]
	0x0350FDC0 STRB W31, [X31 + 0x18]
	0x0350FDC4 BL 0x3511330
	0x0350FDC8 MOV X1, X21
	0x0350FDCC MOV X23, X0
	0x0350FDD0 BL 0x35108F4
	0x0350FDD4 MOV W27, W0
	0x0350FDD8 MOV X0, X23

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0xED1000
	007 Move X21, 0xBE5000
	008 Move W8, [X20+2780]
	009 Move X21, [X21+1728]
	010 Move X19, X1
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {50}
	015 Move X0, 0xC0E000
	016 Move X0, [X0+904]
	017 Call 0x1C17CF4
	018 Move X0, 0xC26000
	019 Move X0, [X0+128]
	020 Call 0x1C17CF4
	021 Move X0, 0xC26000
	022 Move X0, [X0+136]
	023 Call 0x1C17CF4
	024 Move X0, 0xC16000
	025 Move X0, [X0+3744]
	026 Call 0x1C17CF4
	027 Move X0, 0xC26000
	028 Move X0, [X0+144]
	029 Call 0x1C17CF4
	030 Move X0, 0xC26000
	031 Move X0, [X0+152]
	032 Call 0x1C17CF4
	033 Move X0, 0xBEF000
	034 Move X0, [X0+2408]
	035 Call 0x1C17CF4
	036 Move X0, 0xC0D000
	037 Move X0, [X0+2912]
	038 Call 0x1C17CF4
	039 Move X0, 0xC26000
	040 Move X0, [X0+712]
	041 Call 0x1C17CF4
	042 Move X0, 0xC26000
	043 Move X0, [X0+720]
	044 Call 0x1C17CF4
	045 Move X0, 0xBE5000
	046 Move X0, [X0+1728]
	047 Call 0x1C17CF4
	048 Move W8, 1
	049 Move [X20+2780], W8
	050 Move X0, [X21]
	051 Move W8, [X0+224]
	052 Compare W8, 0
	053 JumpIfNotEqual {55}
	054 Call 0x1C17DFC
	055 Move X0, X19
	056 Move X1, X31
	057 Move X2, X31
	058 Call Type.op_Equality, X0, X1
	059 Move TEMP, X0
	060 And TEMP, TEMP, 1
	061 Compare TEMP, 1
	062 JumpIfNotEqual {64}
	063 Move W0, 8
	064 Move X8, 0xC26000
	065 Move X0, [X21]
	066 Move X8, [X8+712]
	067 Move W9, [X0+224]
	068 Move X20, [X8]
	069 Compare W9, 0
	070 JumpIfNotEqual {72}
	071 Call 0x1C17DFC
	072 Move X0, X20
	073 Move X1, X31
	074 Call Type.GetTypeFromHandle, X0
	075 Move X1, X0
	076 Move X0, X19
	077 Move X2, X31
	078 Call Type.op_Equality, X0, X1
	079 Move TEMP, X0
	080 And TEMP, TEMP, 1
	081 Compare TEMP, 1
	082 JumpIfNotEqual {90}
	083 Move W0, W31
	084 Move X20, [X31+32]
	085 Move X19, [X31+40]
	086 Move X22, [X31+16]
	087 Move X21, [X31+24]
	088 Move X30, [X31+48]
	089 Return X0
	090 Compare X19, 0
	091 JumpIfEqual {454}
	092 Move X0, X19
	093 Move X1, X31
	094 Call Type.get_IsPrimitive, X0
	095 Move TEMP, X0
	096 And TEMP, TEMP, 1
	097 Compare TEMP, 1
	098 JumpIfEqual {108}
	099 Move X8, [X19]
	100 Move X0, X19
	101 Move X9, [X8+1416]
	102 Move X1, [X8+1424]
	103 NotImplemented "Instruction BLR not yet implemented."
	104 Move TEMP, X0
	105 And TEMP, TEMP, 1
	106 Compare TEMP, 1
	107 JumpIfNotEqual {122}
	108 Move X0, [X21]
	109 Move W8, [X0+224]
	110 Compare W8, 0
	111 JumpIfNotEqual {113}
	112 Call 0x1C17DFC
	113 Move X0, X19
	114 Move X1, X31
	115 Call Type.GetTypeCode, X0
	116 Move X20, [X31+32]
	117 Move X19, [X31+40]
	118 Move X22, [X31+16]
	119 Move X21, [X31+24]
	120 Move W1, W0
	121 Move X30, [X31+48]
	122 Move X22, 0xC0D000
	123 Move X0, [X21]
	124 Move X22, [X22+2912]
	125 Move W8, [X0+224]
	126 Move X20, [X22]
	127 Compare W8, 0
	128 JumpIfNotEqual {130}
	129 Call 0x1C17DFC
	130 Move X0, X20
	131 Move X1, X31
	132 Call Type.GetTypeFromHandle, X0
	133 Move X1, X0
	134 Move X0, X19
	135 Move X2, X31
	136 Call Type.op_Equality, X0, X1
	137 Move TEMP, X0
	138 And TEMP, TEMP, 1
	139 Compare TEMP, 1
	140 JumpIfNotEqual {142}
	141 Move W0, 7
	142 Move X0, X19
	143 Move X1, X31
	144 Call Type.get_IsArray, X0
	145 Move TEMP, X0
	146 And TEMP, TEMP, 1
	147 Compare TEMP, 1
	148 JumpIfNotEqual {196}
	149 Move X8, [X19]
	150 Move X0, X19
	151 Move X9, [X8+1064]
	152 Move X1, [X8+1072]
	153 NotImplemented "Instruction BLR not yet implemented."
	154 Move X8, [X21]
	155 Move X20, X0
	156 Move W9, [X8+224]
	157 Compare W9, 0
	158 JumpIfNotEqual {161}
	159 Move X0, X8
	160 Call 0x1C17DFC
	161 Move X0, X20
	162 Move X1, X31
	163 Move X2, X31
	164 Call Type.op_Equality, X0, X1
	165 Move TEMP, X0
	166 And TEMP, TEMP, 1
	167 Compare TEMP, 1
	168 JumpIfEqual {455}
	169 Compare X20, 0
	170 JumpIfEqual {454}
	171 Move X0, X20
	172 Move X1, X31
	173 Call Type.get_IsPrimitive, X0
	174 Move TEMP, X0
	175 And TEMP, TEMP, 1
	176 Compare TEMP, 1
	177 JumpIfNotEqual {216}
	178 Move X0, [X21]
	179 Move W8, [X0+224]
	180 Compare W8, 0
	181 JumpIfNotEqual {183}
	182 Call 0x1C17DFC
	183 Move X0, X20
	184 Move X1, X31
	185 Call Type.GetTypeCode, X0
	186 Subtract W8, W0, 3
	187 NotImplemented "Instruction CMP not yet implemented."
	188 Move X9, -43483136
	189 Add X9, X9, 3171
	190 NotImplemented "Instruction ADR not yet implemented."
	191 Move W11, [X9]
	192 Add X10, X10, X11
	193 Move W0, 68
	194 CallNoReturn X10
	195 Move W0, 66
	196 Move X8, 0xC26000
	197 Move X0, [X21]
	198 Move X8, [X8+136]
	199 Move W9, [X0+224]
	200 Move X20, [X8]
	201 Compare W9, 0
	202 JumpIfNotEqual {204}
	203 Call 0x1C17DFC
	204 Move X0, X20
	205 Move X1, X31
	206 Call Type.GetTypeFromHandle, X0
	207 Move X1, X0
	208 Move X0, X19
	209 Move X2, X31
	210 Call Type.op_Equality, X0, X1
	211 Move TEMP, X0
	212 And TEMP, TEMP, 1
	213 Compare TEMP, 1
	214 JumpIfNotEqual {224}
	215 Move W0, 21
	216 Move X0, X20
	217 Move X1, X31
	218 Call Type.get_IsArray, X0
	219 Move TEMP, X0
	220 And TEMP, TEMP, 1
	221 Compare TEMP, 1
	222 JumpIfNotEqual {278}
	223 Move W0, 64
	224 Move X8, 0xC16000
	225 Move X0, [X21]
	226 Move X8, [X8+3744]
	227 Move W9, [X0+224]
	228 Move X20, [X8]
	229 Compare W9, 0
	230 JumpIfNotEqual {232}
	231 Call 0x1C17DFC
	232 Move X0, X20
	233 Move X1, X31
	234 Call Type.GetTypeFromHandle, X0
	235 Move X1, X0
	236 Move X0, X19
	237 Move X2, X31
	238 Call Type.op_Equality, X0, X1
	239 Move TEMP, X0
	240 And TEMP, TEMP, 1
	241 Compare TEMP, 1
	242 JumpIfEqual {354}
	243 Move X8, [X19]
	244 Move X0, X19
	245 Move X9, [X8+968]
	246 Move X1, [X8+976]
	247 NotImplemented "Instruction BLR not yet implemented."
	248 Move TEMP, X0
	249 And TEMP, TEMP, 1
	250 Compare TEMP, 1
	251 JumpIfNotEqual {296}
	252 Move X8, 0xC0E000
	253 Move X0, [X21]
	254 Move X8, [X8+904]
	255 Move W9, [X0+224]
	256 Move X20, [X8]
	257 Compare W9, 0
	258 JumpIfNotEqual {260}
	259 Call 0x1C17DFC
	260 Move X0, X20
	261 Move X1, X31
	262 Call Type.GetTypeFromHandle, X0
	263 Move X8, [X19]
	264 Move X20, X0
	265 Move X0, X19
	266 Move X9, [X8+1096]
	267 Move X1, [X8+1104]
	268 NotImplemented "Instruction BLR not yet implemented."
	269 Move X1, X0
	270 Move X0, X20
	271 Move X2, X31
	272 Call Type.op_Equality, X0, X1
	273 Move TEMP, X0
	274 And TEMP, TEMP, 1
	275 Compare TEMP, 1
	276 JumpIfNotEqual {296}
	277 Move W0, 20
	278 Move X0, [X21]
	279 Move X19, [X22]
	280 Move W8, [X0+224]
	281 Compare W8, 0
	282 JumpIfNotEqual {284}
	283 Call 0x1C17DFC
	284 Move X0, X19
	285 Move X1, X31
	286 Call Type.GetTypeFromHandle, X0
	287 Move X1, X0
	288 Move X0, X20
	289 Move X2, X31
	290 Call Type.op_Equality, X0, X1
	291 Move TEMP, X0
	292 And TEMP, TEMP, 1
	293 Compare TEMP, 1
	294 JumpIfNotEqual {316}
	295 Move W0, 71
	296 Move X8, 0xC26000
	297 Move X0, [X21]
	298 Move X8, [X8+128]
	299 Move W9, [X0+224]
	300 Move X20, [X8]
	301 Compare W9, 0
	302 JumpIfNotEqual {304}
	303 Call 0x1C17DFC
	304 Move X0, X20
	305 Move X1, X31
	306 Call Type.GetTypeFromHandle, X0
	307 Move X1, X0
	308 Move X0, X19
	309 Move X2, X31
	310 Call Type.op_Equality, X0, X1
	311 Move TEMP, X0
	312 And TEMP, TEMP, 1
	313 Compare TEMP, 1
	314 JumpIfNotEqual {355}
	315 Move W0, 26
	316 Move X8, 0xBEF000
	317 Move X0, [X21]
	318 Move X8, [X8+2408]
	319 Move W9, [X0+224]
	320 Move X19, [X8]
	321 Compare W9, 0
	322 JumpIfNotEqual {324}
	323 Call 0x1C17DFC
	324 Move X0, X19
	325 Move X1, X31
	326 Call Type.GetTypeFromHandle, X0
	327 Move X1, X0
	328 Move X0, X20
	329 Move X2, X31
	330 Call Type.op_Equality, X0, X1
	331 Move TEMP, X0
	332 And TEMP, TEMP, 1
	333 Compare TEMP, 1
	334 JumpIfEqual {354}
	335 Move X8, 0xC26000
	336 Move X0, [X21]
	337 Move X8, [X8+720]
	338 Move W9, [X0+224]
	339 Move X19, [X8]
	340 Compare W9, 0
	341 JumpIfNotEqual {343}
	342 Call 0x1C17DFC
	343 Move X0, X19
	344 Move X1, X31
	345 Call Type.GetTypeFromHandle, X0
	346 Move X1, X0
	347 Move X0, X20
	348 Move X2, X31
	349 Call Type.op_Equality, X0, X1
	350 Move TEMP, X0
	351 And TEMP, TEMP, 1
	352 Compare TEMP, 1
	353 JumpIfNotEqual {398}
	354 Move W0, 23
	355 Move X8, 0xC26000
	356 Move X0, [X21]
	357 Move X8, [X8+144]
	358 Move W9, [X0+224]
	359 Move X20, [X8]
	360 Compare W9, 0
	361 JumpIfNotEqual {363}
	362 Call 0x1C17DFC
	363 Move X0, X20
	364 Move X1, X31
	365 Call Type.GetTypeFromHandle, X0
	366 Move X1, X0
	367 Move X0, X19
	368 Move X2, X31
	369 Call Type.op_Equality, X0, X1
	370 Move TEMP, X0
	371 And TEMP, TEMP, 1
	372 Compare TEMP, 1
	373 JumpIfNotEqual {380}
	374 Move W0, 24
	375 Move W0, 69
	376 Move W0, 67
	377 Move W0, 73
	378 Move W0, 74
	379 Move W0, 70
	380 Move X8, 0xC26000
	381 Move X0, [X21]
	382 Move X8, [X8+152]
	383 Move W9, [X0+224]
	384 Move X20, [X8]
	385 Compare W9, 0
	386 JumpIfNotEqual {388}
	387 Call 0x1C17DFC
	388 Move X0, X20
	389 Move X1, X31
	390 Call Type.GetTypeFromHandle, X0
	391 Move X1, X0
	392 Move X0, X19
	393 Move X2, X31
	394 Call Type.op_Equality, X0, X1
	395 And W31, W0, 1
	396 Move W8, 25
	397 NotImplemented "Instruction CSEL not yet implemented."
	398 Move X8, 0xC26000
	399 Move X0, [X21]
	400 Move X8, [X8+136]
	401 Move W9, [X0+224]
	402 Move X19, [X8]
	403 Compare W9, 0
	404 JumpIfNotEqual {406}
	405 Call 0x1C17DFC
	406 Move X0, X19
	407 Move X1, X31
	408 Call Type.GetTypeFromHandle, X0
	409 Move X1, X0
	410 Move X0, X20
	411 Move X2, X31
	412 Call Type.op_Equality, X0, X1
	413 Move TEMP, X0
	414 And TEMP, TEMP, 1
	415 Compare TEMP, 1
	416 JumpIfNotEqual {418}
	417 Move W0, 85
	418 Move X8, [X20]
	419 Move X0, X20
	420 Move X9, [X8+968]
	421 Move X1, [X8+976]
	422 NotImplemented "Instruction BLR not yet implemented."
	423 Move TEMP, X0
	424 And TEMP, TEMP, 1
	425 Compare TEMP, 1
	426 JumpIfNotEqual {453}
	427 Move X8, 0xC0E000
	428 Move X0, [X21]
	429 Move X8, [X8+904]
	430 Move W9, [X0+224]
	431 Move X19, [X8]
	432 Compare W9, 0
	433 JumpIfNotEqual {435}
	434 Call 0x1C17DFC
	435 Move X0, X19
	436 Move X1, X31
	437 Call Type.GetTypeFromHandle, X0
	438 Move X8, [X20]
	439 Move X19, X0
	440 Move X0, X20
	441 Move X9, [X8+1096]
	442 Move X1, [X8+1104]
	443 NotImplemented "Instruction BLR not yet implemented."
	444 Move X1, X0
	445 Move X0, X19
	446 Move X2, X31
	447 Call Type.op_Equality, X0, X1
	448 Move TEMP, X0
	449 And TEMP, TEMP, 1
	450 Compare TEMP, 1
	451 JumpIfNotEqual {453}
	452 Move W0, 84
	453 Move W0, 83
	454 Call 0x1C17F20
	455 Move X0, 0xC26000
	456 Move X0, [X0+728]
	457 Call 0x1C17D08
	458 Move X1, X19
	459 Move X2, X31
	460 Call String.Format, X0, X1
	461 Move X19, X0
	462 Move X0, 0xC26000
	463 Move X0, [X0+104]
	464 Call 0x1C17D08
	465 Call 0x1C17F10
	466 Move X1, X19
	467 Move X20, X0
	468 Call InvalidDataException..ctor, X0, X1
	469 Move X0, 0xC26000
	470 Move X0, [X0+736]
	471 Call 0x1C17D08
	472 Move X1, X0
	473 Move X0, X20
	474 Call 0x1C17DEC

Method: ExitGames.Client.Photon.Protocol18/GpType GetCodeOfTypeCode(System.TypeCode type)

Disassembly:
	0x0350FDDC MOV W1, W27
	0x0350FDE0 MOV X2, X31
	0x0350FDE4 BL 0x33A2DF8
	0x0350FDE8 CBZ X0, 0x350FE14
	0x0350FDEC ADRP X8, 0xC25000
	0x0350FDF0 LDR X8, [X8 + 0x318]
	0x0350FDF4 MOV X25, X0
	0x0350FDF8 LDR X26, [X8]
	0x0350FDFC MOV X1, X26
	0x0350FE00 BL 0x1C16E00
	0x0350FE04 MOV X24, X0
	0x0350FE08 CBZ X0, 0x350FF18
	0x0350FE0C CBNZ W27, 0x350FE1C
	0x0350FE10 B 0x350FED4
	0x0350FE14 MOV X24, X31
	0x0350FE18 CBZ W27, 0x350FED4
	0x0350FE1C LDRB W25, [X31 + 0x1C]
	0x0350FE20 LDRB W26, [X31 + 0x18]
	0x0350FE24 MOV X29, X31
	0x0350FE28 MOV W20, W27
	0x0350FE2C ADD X19, X24, 0x20
	0x0350FE30 MOV X0, X23
	0x0350FE34 MOV X1, X31
	0x0350FE38 BL 0x33A703C
	0x0350FE3C CBZ X24, 0x350FF04
	0x0350FE40 MOV X27, X0

ISIL:
	001 Subtract W8, W1, 3
	002 NotImplemented "Instruction CMP not yet implemented."
	003 Move X9, -43483136
	004 Add X9, X9, 3183
	005 NotImplemented "Instruction ADR not yet implemented."
	006 Move W11, [X9]
	007 Add X10, X10, X11
	008 Move W0, 2
	009 CallNoReturn X10
	010 Move W0, 3
	011 Return X0
	012 Move W0, W31
	013 Return X0
	014 Move W0, 4
	015 Return X0
	016 Move W0, 9
	017 Return X0
	018 Move W0, 10
	019 Return X0
	020 Move W0, 5
	021 Return X0
	022 Move W0, 6
	023 Return X0
	024 Move W0, 7
	025 Return X0

Method: System.Object Read(ExitGames.Client.Photon.StreamBuffer stream, ExitGames.Client.Photon.IProtocol/DeserializationFlags flags, ExitGames.Client.Photon.ParameterDictionary parameters)

Disassembly:
	0x0350FE44 CBZ X0, 0x350FE98
	0x0350FE48 ADRP X8, 0xBE4000
	0x0350FE4C LDR X8, [X8 + 0x818]
	0x0350FE50 MOV X0, X27
	0x0350FE54 LDR X28, [X8]
	0x0350FE58 MOV X1, X28
	0x0350FE5C BL 0x1C16E00
	0x0350FE60 CBZ X0, 0x350FEF8
	0x0350FE64 LDR X8, [X24]
	0x0350FE68 LDR X1, [X8 + 0x40]
	0x0350FE6C BL 0x1C16E00
	0x0350FE70 CBZ X0, 0x350FF0C
	0x0350FE74 ADRP X8, 0xBE4000
	0x0350FE78 LDR X8, [X8 + 0x818]
	0x0350FE7C MOV X0, X27
	0x0350FE80 LDR X28, [X8]
	0x0350FE84 MOV X1, X28
	0x0350FE88 BL 0x1C16E00
	0x0350FE8C MOV X4, X0
	0x0350FE90 CBNZ X0, 0x350FE9C
	0x0350FE94 B 0x350FEF8

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Compare X1, 0
	007 JumpIfEqual {27}
	008 Move X21, X1
	009 Move X22, X0
	010 Move X0, X1
	011 Move X1, X31
	012 Move X19, X3
	013 Move W20, W2
	014 Call StreamBuffer.ReadByte, X0
	015 Move W2, W0
	016 Move X0, X22
	017 Move X1, X21
	018 Move W3, W20
	019 Move X4, X19
	020 Move X20, [X31+32]
	021 Move X19, [X31+40]
	022 Move X22, [X31+16]
	023 Move X21, [X31+24]
	024 Move X30, [X31+48]
	025 Call Protocol18.Read, X0, X1, X2, X3, X4
	026 Return X0
	027 Call 0x1C17F20

Method: System.Object Read(ExitGames.Client.Photon.StreamBuffer stream, System.Byte gpType, ExitGames.Client.Photon.IProtocol/DeserializationFlags flags = 0, ExitGames.Client.Photon.ParameterDictionary parameters = null)

Disassembly:
	0x0350E824 BL 0x1C16CF4
	0x0350E828 ADRP X0, 0xBE5000
	0x0350E82C LDR X0, [X0 + 0x6C0]
	0x0350E830 BL 0x1C16CF4
	0x0350E834 MOVZ W8, 0x1
	0x0350E838 STRB W8, [X20 + 0xADC]
	0x0350E83C LDR X0, [X21]
	0x0350E840 LDR W8, [X0 + 0xE0]
	0x0350E844 CBNZ W8, 0x350E84C
	0x0350E848 BL 0x1C16DFC
	0x0350E84C MOV X0, X19
	0x0350E850 MOV X1, X31
	0x0350E854 MOV X2, X31
	0x0350E858 BL 0x3395194
	0x0350E85C TBZ X0, 0x0, 0x350E868
	0x0350E860 MOVZ W0, 0x8
	0x0350E864 B 0x350E8A8
	0x0350E868 ADRP X8, 0xC26000
	0x0350E86C LDR X0, [X21]
	0x0350E870 LDR X8, [X8 + 0x2C8]
	0x0350E874 LDR W9, [X0 + 0xE0]
	0x0350E878 LDR X20, [X8]
	0x0350E87C CBNZ W9, 0x350E884
	0x0350E880 BL 0x1C16DFC
	0x0350E884 MOV X0, X20
	0x0350E888 MOV X1, X31
	0x0350E88C BL 0x338C698
	0x0350E890 MOV X1, X0
	0x0350E894 MOV X0, X19
	0x0350E898 MOV X2, X31
	0x0350E89C BL 0x3395194
	0x0350E8A0 TBZ X0, 0x0, 0x350E8B8
	0x0350E8A4 MOV W0, W31
	0x0350E8A8 LDP X20, X19, [X31 + 0x20]
	0x0350E8AC LDP X22, X21, [X31 + 0x10]
	0x0350E8B0 LDR X30, [X31], #0x30
	0x0350E8B4 RET
	0x0350E8B8 CBZ X19, 0x350ED88
	0x0350E8BC MOV X0, X19
	0x0350E8C0 MOV X1, X31
	0x0350E8C4 BL 0x3397374
	0x0350E8C8 TBNZ X0, 0x0, 0x350E8E4
	0x0350E8CC LDR X8, [X19]
	0x0350E8D0 MOV X0, X19
	0x0350E8D4 LDR X9, [X8 + 0x588]
	0x0350E8D8 LDR X1, [X8 + 0x590]
	0x0350E8DC BLR X9
	0x0350E8E0 TBZ X0, 0x0, 0x350E914
	0x0350E8E4 LDR X0, [X21]
	0x0350E8E8 LDR W8, [X0 + 0xE0]
	0x0350E8EC CBNZ W8, 0x350E8F4
	0x0350E8F0 BL 0x1C16DFC
	0x0350E8F4 MOV X0, X19
	0x0350E8F8 MOV X1, X31
	0x0350E8FC BL 0x3397AFC
	0x0350E900 LDP X20, X19, [X31 + 0x20]
	0x0350E904 LDP X22, X21, [X31 + 0x10]
	0x0350E908 MOV W1, W0
	0x0350E90C LDR X30, [X31], #0x30
	0x0350E910 B 0x350EDDC
	0x0350E914 ADRP X22, 0xC0D000
	0x0350E918 LDR X0, [X21]
	0x0350E91C LDR X22, [X22 + 0xB60]
	0x0350E920 LDR W8, [X0 + 0xE0]
	0x0350E924 LDR X20, [X22]
	0x0350E928 CBNZ W8, 0x350E930
	0x0350E92C BL 0x1C16DFC
	0x0350E930 MOV X0, X20
	0x0350E934 MOV X1, X31
	0x0350E938 BL 0x338C698
	0x0350E93C MOV X1, X0
	0x0350E940 MOV X0, X19
	0x0350E944 MOV X2, X31
	0x0350E948 BL 0x3395194
	0x0350E94C TBZ X0, 0x0, 0x350E958
	0x0350E950 MOVZ W0, 0x7
	0x0350E954 B 0x350E8A8
	0x0350E958 MOV X0, X19
	0x0350E95C MOV X1, X31
	0x0350E960 BL 0x3396BF8
	0x0350E964 TBZ X0, 0x0, 0x350EA08
	0x0350E968 LDR X8, [X19]
	0x0350E96C MOV X0, X19
	0x0350E970 LDR X9, [X8 + 0x428]
	0x0350E974 LDR X1, [X8 + 0x430]
	0x0350E978 BLR X9
	0x0350E97C LDR X8, [X21]
	0x0350E980 MOV X20, X0
	0x0350E984 LDR W9, [X8 + 0xE0]
	0x0350E988 CBNZ W9, 0x350E994
	0x0350E98C MOV X0, X8
	0x0350E990 BL 0x1C16DFC
	0x0350E994 MOV X0, X20
	0x0350E998 MOV X1, X31
	0x0350E99C MOV X2, X31
	0x0350E9A0 BL 0x3395194
	0x0350E9A4 TBNZ X0, 0x0, 0x350ED8C
	0x0350E9A8 CBZ X20, 0x350ED88
	0x0350E9AC MOV X0, X20
	0x0350E9B0 MOV X1, X31
	0x0350E9B4 BL 0x3397374
	0x0350E9B8 TBZ X0, 0x0, 0x350EA4C
	0x0350E9BC LDR X0, [X21]
	0x0350E9C0 LDR W8, [X0 + 0xE0]
	0x0350E9C4 CBNZ W8, 0x350E9CC
	0x0350E9C8 BL 0x1C16DFC
	0x0350E9CC MOV X0, X20
	0x0350E9D0 MOV X1, X31
	0x0350E9D4 BL 0x3397AFC
	0x0350E9D8 SUB W8, W0, 0x3
	0x0350E9DC CMP W8, 0xB
	0x0350E9E0 B.HI 0x350EA4C
	0x0350E9E4 ADRP X9, 0xFFFFFFFFFD688000
	0x0350E9E8 ADD X9, X9, 0xC63
	0x0350E9EC ADR X10, 0xFFFFFFFFFFFFFEBC
	0x0350E9F0 LDRB W11, [X9, X8, LSL]
	0x0350E9F4 ADD X10, X10, X11, 0x2, LSL
	0x0350E9F8 MOVZ W0, 0x44
	0x0350E9FC BR X10
	0x0350EA00 MOVZ W0, 0x42
	0x0350EA04 B 0x350E8A8
	0x0350EA08 ADRP X8, 0xC26000
	0x0350EA0C LDR X0, [X21]
	0x0350EA10 LDR X8, [X8 + 0x88]
	0x0350EA14 LDR W9, [X0 + 0xE0]
	0x0350EA18 LDR X20, [X8]
	0x0350EA1C CBNZ W9, 0x350EA24
	0x0350EA20 BL 0x1C16DFC
	0x0350EA24 MOV X0, X20
	0x0350EA28 MOV X1, X31
	0x0350EA2C BL 0x338C698
	0x0350EA30 MOV X1, X0
	0x0350EA34 MOV X0, X19
	0x0350EA38 MOV X2, X31
	0x0350EA3C BL 0x3395194
	0x0350EA40 TBZ X0, 0x0, 0x350EA64
	0x0350EA44 MOVZ W0, 0x15
	0x0350EA48 B 0x350E8A8
	0x0350EA4C MOV X0, X20
	0x0350EA50 MOV X1, X31
	0x0350EA54 BL 0x3396BF8
	0x0350EA58 TBZ X0, 0x0, 0x350EB14
	0x0350EA5C MOVZ W0, 0x40
	0x0350EA60 B 0x350E8A8
	0x0350EA64 ADRP X8, 0xC16000
	0x0350EA68 LDR X0, [X21]
	0x0350EA6C LDR X8, [X8 + 0xEA0]
	0x0350EA70 LDR W9, [X0 + 0xE0]
	0x0350EA74 LDR X20, [X8]
	0x0350EA78 CBNZ W9, 0x350EA80
	0x0350EA7C BL 0x1C16DFC
	0x0350EA80 MOV X0, X20
	0x0350EA84 MOV X1, X31
	0x0350EA88 BL 0x338C698
	0x0350EA8C MOV X1, X0
	0x0350EA90 MOV X0, X19
	0x0350EA94 MOV X2, X31
	0x0350EA98 BL 0x3395194
	0x0350EA9C TBNZ X0, 0x0, 0x350EC0C
	0x0350EAA0 LDR X8, [X19]
	0x0350EAA4 MOV X0, X19
	0x0350EAA8 LDR X9, [X8 + 0x3C8]
	0x0350EAAC LDR X1, [X8 + 0x3D0]
	0x0350EAB0 BLR X9
	0x0350EAB4 TBZ X0, 0x0, 0x350EB50
	0x0350EAB8 ADRP X8, 0xC0E000
	0x0350EABC LDR X0, [X21]
	0x0350EAC0 LDR X8, [X8 + 0x388]
	0x0350EAC4 LDR W9, [X0 + 0xE0]
	0x0350EAC8 LDR X20, [X8]
	0x0350EACC CBNZ W9, 0x350EAD4
	0x0350EAD0 BL 0x1C16DFC
	0x0350EAD4 MOV X0, X20
	0x0350EAD8 MOV X1, X31
	0x0350EADC BL 0x338C698
	0x0350EAE0 LDR X8, [X19]
	0x0350EAE4 MOV X20, X0
	0x0350EAE8 MOV X0, X19
	0x0350EAEC LDR X9, [X8 + 0x448]
	0x0350EAF0 LDR X1, [X8 + 0x450]
	0x0350EAF4 BLR X9
	0x0350EAF8 MOV X1, X0
	0x0350EAFC MOV X0, X20
	0x0350EB00 MOV X2, X31
	0x0350EB04 BL 0x3395194
	0x0350EB08 TBZ X0, 0x0, 0x350EB50
	0x0350EB0C MOVZ W0, 0x14
	0x0350EB10 B 0x350E8A8
	0x0350EB14 LDR X0, [X21]
	0x0350EB18 LDR X19, [X22]
	0x0350EB1C LDR W8, [X0 + 0xE0]
	0x0350EB20 CBNZ W8, 0x350EB28
	0x0350EB24 BL 0x1C16DFC
	0x0350EB28 MOV X0, X19
	0x0350EB2C MOV X1, X31
	0x0350EB30 BL 0x338C698
	0x0350EB34 MOV X1, X0
	0x0350EB38 MOV X0, X20
	0x0350EB3C MOV X2, X31
	0x0350EB40 BL 0x3395194
	0x0350EB44 TBZ X0, 0x0, 0x350EB94
	0x0350EB48 MOVZ W0, 0x47
	0x0350EB4C B 0x350E8A8
	0x0350EB50 ADRP X8, 0xC26000
	0x0350EB54 LDR X0, [X21]
	0x0350EB58 LDR X8, [X8 + 0x80]
	0x0350EB5C LDR W9, [X0 + 0xE0]
	0x0350EB60 LDR X20, [X8]
	0x0350EB64 CBNZ W9, 0x350EB6C
	0x0350EB68 BL 0x1C16DFC
	0x0350EB6C MOV X0, X20
	0x0350EB70 MOV X1, X31
	0x0350EB74 BL 0x338C698
	0x0350EB78 MOV X1, X0
	0x0350EB7C MOV X0, X19
	0x0350EB80 MOV X2, X31
	0x0350EB84 BL 0x3395194
	0x0350EB88 TBZ X0, 0x0, 0x350EC14
	0x0350EB8C MOVZ W0, 0x1A
	0x0350EB90 B 0x350E8A8
	0x0350EB94 ADRP X8, 0xBEF000
	0x0350EB98 LDR X0, [X21]
	0x0350EB9C LDR X8, [X8 + 0x968]
	0x0350EBA0 LDR W9, [X0 + 0xE0]
	0x0350EBA4 LDR X19, [X8]
	0x0350EBA8 CBNZ W9, 0x350EBB0
	0x0350EBAC BL 0x1C16DFC
	0x0350EBB0 MOV X0, X19
	0x0350EBB4 MOV X1, X31
	0x0350EBB8 BL 0x338C698
	0x0350EBBC MOV X1, X0
	0x0350EBC0 MOV X0, X20
	0x0350EBC4 MOV X2, X31
	0x0350EBC8 BL 0x3395194
	0x0350EBCC TBNZ X0, 0x0, 0x350EC0C
	0x0350EBD0 ADRP X8, 0xC26000
	0x0350EBD4 LDR X0, [X21]
	0x0350EBD8 LDR X8, [X8 + 0x2D0]
	0x0350EBDC LDR W9, [X0 + 0xE0]
	0x0350EBE0 LDR X19, [X8]
	0x0350EBE4 CBNZ W9, 0x350EBEC
	0x0350EBE8 BL 0x1C16DFC
	0x0350EBEC MOV X0, X19
	0x0350EBF0 MOV X1, X31
	0x0350EBF4 BL 0x338C698
	0x0350EBF8 MOV X1, X0
	0x0350EBFC MOV X0, X20
	0x0350EC00 MOV X2, X31
	0x0350EC04 BL 0x3395194
	0x0350EC08 TBZ X0, 0x0, 0x350ECC8
	0x0350EC0C MOVZ W0, 0x17
	0x0350EC10 B 0x350E8A8
	0x0350EC14 ADRP X8, 0xC26000
	0x0350EC18 LDR X0, [X21]
	0x0350EC1C LDR X8, [X8 + 0x90]
	0x0350EC20 LDR W9, [X0 + 0xE0]
	0x0350EC24 LDR X20, [X8]
	0x0350EC28 CBNZ W9, 0x350EC30
	0x0350EC2C BL 0x1C16DFC
	0x0350EC30 MOV X0, X20
	0x0350EC34 MOV X1, X31
	0x0350EC38 BL 0x338C698
	0x0350EC3C MOV X1, X0
	0x0350EC40 MOV X0, X19
	0x0350EC44 MOV X2, X31
	0x0350EC48 BL 0x3395194
	0x0350EC4C TBZ X0, 0x0, 0x350EC80
	0x0350EC50 MOVZ W0, 0x18
	0x0350EC54 B 0x350E8A8
	0x0350EC58 MOVZ W0, 0x45
	0x0350EC5C B 0x350E8A8
	0x0350EC60 MOVZ W0, 0x43
	0x0350EC64 B 0x350E8A8
	0x0350EC68 MOVZ W0, 0x49
	0x0350EC6C B 0x350E8A8
	0x0350EC70 MOVZ W0, 0x4A
	0x0350EC74 B 0x350E8A8
	0x0350EC78 MOVZ W0, 0x46
	0x0350EC7C B 0x350E8A8
	0x0350EC80 ADRP X8, 0xC26000
	0x0350EC84 LDR X0, [X21]
	0x0350EC88 LDR X8, [X8 + 0x98]
	0x0350EC8C LDR W9, [X0 + 0xE0]
	0x0350EC90 LDR X20, [X8]
	0x0350EC94 CBNZ W9, 0x350EC9C
	0x0350EC98 BL 0x1C16DFC
	0x0350EC9C MOV X0, X20
	0x0350ECA0 MOV X1, X31
	0x0350ECA4 BL 0x338C698
	0x0350ECA8 MOV X1, X0
	0x0350ECAC MOV X0, X19
	0x0350ECB0 MOV X2, X31
	0x0350ECB4 BL 0x3395194
	0x0350ECB8 ANDS W31, W0, 0x1
	0x0350ECBC MOVZ W8, 0x19
	0x0350ECC0 CSEL W0, W8, W31, NE
	0x0350ECC4 B 0x350E8A8
	0x0350ECC8 ADRP X8, 0xC26000
	0x0350ECCC LDR X0, [X21]
	0x0350ECD0 LDR X8, [X8 + 0x88]
	0x0350ECD4 LDR W9, [X0 + 0xE0]
	0x0350ECD8 LDR X19, [X8]
	0x0350ECDC CBNZ W9, 0x350ECE4
	0x0350ECE0 BL 0x1C16DFC
	0x0350ECE4 MOV X0, X19
	0x0350ECE8 MOV X1, X31
	0x0350ECEC BL 0x338C698
	0x0350ECF0 MOV X1, X0
	0x0350ECF4 MOV X0, X20
	0x0350ECF8 MOV X2, X31
	0x0350ECFC BL 0x3395194
	0x0350ED00 TBZ X0, 0x0, 0x350ED0C
	0x0350ED04 MOVZ W0, 0x55
	0x0350ED08 B 0x350E8A8
	0x0350ED0C LDR X8, [X20]
	0x0350ED10 MOV X0, X20
	0x0350ED14 LDR X9, [X8 + 0x3C8]
	0x0350ED18 LDR X1, [X8 + 0x3D0]
	0x0350ED1C BLR X9
	0x0350ED20 TBZ X0, 0x0, 0x350ED80
	0x0350ED24 ADRP X8, 0xC0E000
	0x0350ED28 LDR X0, [X21]
	0x0350ED2C LDR X8, [X8 + 0x388]
	0x0350ED30 LDR W9, [X0 + 0xE0]
	0x0350ED34 LDR X19, [X8]
	0x0350ED38 CBNZ W9, 0x350ED40
	0x0350ED3C BL 0x1C16DFC
	0x0350ED40 MOV X0, X19
	0x0350ED44 MOV X1, X31
	0x0350ED48 BL 0x338C698
	0x0350ED4C LDR X8, [X20]
	0x0350ED50 MOV X19, X0
	0x0350ED54 MOV X0, X20
	0x0350ED58 LDR X9, [X8 + 0x448]
	0x0350ED5C LDR X1, [X8 + 0x450]
	0x0350ED60 BLR X9
	0x0350ED64 MOV X1, X0
	0x0350ED68 MOV X0, X19
	0x0350ED6C MOV X2, X31
	0x0350ED70 BL 0x3395194
	0x0350ED74 TBZ X0, 0x0, 0x350ED80
	0x0350ED78 MOVZ W0, 0x54
	0x0350ED7C B 0x350E8A8
	0x0350ED80 MOVZ W0, 0x53
	0x0350ED84 B 0x350E8A8
	0x0350ED88 BL 0x1C16F20
	0x0350ED8C ADRP X0, 0xC26000
	0x0350ED90 LDR X0, [X0 + 0x2D8]
	0x0350ED94 BL 0x1C16D08
	0x0350ED98 MOV X1, X19
	0x0350ED9C MOV X2, X31
	0x0350EDA0 BL 0x321EFD0
	0x0350EDA4 MOV X19, X0
	0x0350EDA8 ADRP X0, 0xC26000
	0x0350EDAC LDR X0, [X0 + 0x68]
	0x0350EDB0 BL 0x1C16D08
	0x0350EDB4 BL 0x1C16F10
	0x0350EDB8 MOV X1, X19
	0x0350EDBC MOV X20, X0
	0x0350EDC0 BL 0x35077D4
	0x0350EDC4 ADRP X0, 0xC26000
	0x0350EDC8 LDR X0, [X0 + 0x2E0]
	0x0350EDCC BL 0x1C16D08
	0x0350EDD0 MOV X1, X0
	0x0350EDD4 MOV X0, X20
	0x0350EDD8 BL 0x1C16DEC
	0x0350EDDC SUB W8, W1, 0x3
	0x0350EDE0 CMP W8, 0xF
	0x0350EDE4 B.HI 0x350EE0C
	0x0350EDE8 ADRP X9, 0xFFFFFFFFFD688000
	0x0350EDEC ADD X9, X9, 0xC6F
	0x0350EDF0 ADR X10, 0x14
	0x0350EDF4 LDRB W11, [X9, X8, LSL]
	0x0350EDF8 ADD X10, X10, X11, 0x2, LSL
	0x0350EDFC MOVZ W0, 0x2
	0x0350EE00 BR X10
	0x0350EE04 MOVZ W0, 0x3
	0x0350EE08 RET
	0x0350EE0C MOV W0, W31
	0x0350EE10 RET
	0x0350EE14 MOVZ W0, 0x4
	0x0350EE18 RET
	0x0350EE1C MOVZ W0, 0x9
	0x0350EE20 RET
	0x0350EE24 MOVZ W0, 0xA
	0x0350EE28 RET
	0x0350EE2C MOVZ W0, 0x5
	0x0350EE30 RET
	0x0350EE34 MOVZ W0, 0x6
	0x0350EE38 RET
	0x0350EE3C MOVZ W0, 0x7
	0x0350EE40 RET
	0x0350EE44 STR X30, [X31 - 0x30]!
	0x0350EE48 STP X22, X21, [X31 + 0x10]
	0x0350EE4C STP X20, X19, [X31 + 0x20]
	0x0350EE50 CBZ X1, 0x350EE94
	0x0350EE54 MOV X21, X1
	0x0350EE58 MOV X22, X0
	0x0350EE5C MOV X0, X1
	0x0350EE60 MOV X1, X31
	0x0350EE64 MOV X19, X3
	0x0350EE68 MOV W20, W2
	0x0350EE6C BL 0x351EF00
	0x0350EE70 MOV W2, W0
	0x0350EE74 MOV X0, X22
	0x0350EE78 MOV X1, X21
	0x0350EE7C MOV W3, W20
	0x0350EE80 MOV X4, X19
	0x0350EE84 LDP X20, X19, [X31 + 0x20]
	0x0350EE88 LDP X22, X21, [X31 + 0x10]
	0x0350EE8C LDR X30, [X31], #0x30
	0x0350EE90 B 0x350D824
	0x0350EE94 BL 0x1C16F20
	0x0350EE98 SUB X31, X31, 0x50
	0x0350EE9C STP X30, X23, [X31 + 0x20]
	0x0350EEA0 STP X22, X21, [X31 + 0x30]
	0x0350EEA4 STP X20, X19, [X31 + 0x40]
	0x0350EEA8 ADRP X21, 0xED1000
	0x0350EEAC LDRB W8, [X21 + 0xADF]
	0x0350EEB0 MOV W20, W2
	0x0350EEB4 MOV X19, X1
	0x0350EEB8 TBNZ X8, 0x0, 0x350EEF4
	0x0350EEBC ADRP X0, 0xBE5000
	0x0350EEC0 LDR X0, [X0 + 0x618]
	0x0350EEC4 BL 0x1C16CF4
	0x0350EEC8 ADRP X0, 0xC26000
	0x0350EECC LDR X0, [X0 + 0x50]
	0x0350EED0 BL 0x1C16CF4
	0x0350EED4 ADRP X0, 0xBED000
	0x0350EED8 LDR X0, [X0 + 0xF00]
	0x0350EEDC BL 0x1C16CF4
	0x0350EEE0 ADRP X0, 0xC26000
	0x0350EEE4 LDR X0, [X0 + 0x2E8]
	0x0350EEE8 BL 0x1C16CF4
	0x0350EEEC MOVZ W8, 0x1
	0x0350EEF0 STRB W8, [X21 + 0xADF]
	0x0350EEF4 ANDS W31, W20, 0xFF
	0x0350EEF8 STR X31, [X31 + 0x10]
	0x0350EEFC STR W31, [X31 + 0xC]
	0x0350EF00 B.EQ 0x350EF0C
	0x0350EF04 EOR W20, W20, 0xFFFFFF80
	0x0350EF08 B 0x350EF20
	0x0350EF0C CBZ X19, 0x350F10C
	0x0350EF10 MOV X0, X19
	0x0350EF14 MOV X1, X31
	0x0350EF18 BL 0x351EF00
	0x0350EF1C MOV W20, W0
	0x0350EF20 MOV X1, X19
	0x0350EF24 BL 0x35108F4
	0x0350EF28 STR W0, [X31 + 0x1C]
	0x0350EF2C TBNZ X0, 0x1F, 0x350F110
	0x0350EF30 CBZ X19, 0x350F10C
	0x0350EF34 MOV W22, W0
	0x0350EF38 MOV X0, X19
	0x0350EF3C MOV X1, X31
	0x0350EF40 BL 0x351EDB0
	0x0350EF44 MOV W23, W0
	0x0350EF48 CMP W22, W0
	0x0350EF4C B.GT 0x350F018
	0x0350EF50 CMP W22, 0x8000
	0x0350EF54 B.GE 0x350F018
	0x0350EF58 ADRP X21, 0xBED000
	0x0350EF5C LDR X21, [X21 + 0xF00]
	0x0350EF60 LDR X0, [X21]
	0x0350EF64 LDR W8, [X0 + 0xE0]
	0x0350EF68 CBNZ W8, 0x350EF74
	0x0350EF6C BL 0x1C16DFC
	0x0350EF70 LDR X0, [X21]
	0x0350EF74 LDR X8, [X0 + 0xB8]
	0x0350EF78 LDR X0, [X8 + 0x8]
	0x0350EF7C CBZ X0, 0x350F10C
	0x0350EF80 ADRP X8, 0xC26000
	0x0350EF84 LDR X8, [X8 + 0x50]
	0x0350EF88 ADD X2, X31, 0x10
	0x0350EF8C MOV W1, W20
	0x0350EF90 LDR X3, [X8]
	0x0350EF94 BL 0x29D4F58
	0x0350EF98 TBZ X0, 0x0, 0x350F018
	0x0350EF9C LDR X8, [X31 + 0x10]
	0x0350EFA0 CBZ X8, 0x350F10C
	0x0350EFA4 LDR X8, [X8 + 0x38]
	0x0350EFA8 CBZ X8, 0x350F0B0
	0x0350EFAC MOV X0, X19
	0x0350EFB0 MOV X1, X31
	0x0350EFB4 BL 0x3517FD4
	0x0350EFB8 LDR X8, [X31 + 0x10]
	0x0350EFBC CBZ X8, 0x350F10C
	0x0350EFC0 LDR X8, [X8 + 0x38]
	0x0350EFC4 CBZ X8, 0x350F10C
	0x0350EFC8 MOV W20, W0
	0x0350EFCC LDR W2, [X31 + 0x1C]
	0x0350EFD0 LDR X9, [X8 + 0x18]
	0x0350EFD4 LDR X0, [X8 + 0x40]
	0x0350EFD8 LDR X3, [X8 + 0x28]
	0x0350EFDC MOV X1, X19
	0x0350EFE0 BLR X9
	0x0350EFE4 MOV X21, X0
	0x0350EFE8 MOV X0, X19
	0x0350EFEC MOV X1, X31
	0x0350EFF0 BL 0x3517FD4
	0x0350EFF4 LDR W8, [X31 + 0x1C]
	0x0350EFF8 SUB W9, W0, W20
	0x0350EFFC CMP W9, W8
	0x0350F000 B.EQ 0x350F098
	0x0350F004 ADD W1, W8, W20
	0x0350F008 MOV X0, X19
	0x0350F00C MOV X2, X31
	0x0350F010 BL 0x3517FDC
	0x0350F014 B 0x350F098
	0x0350F018 ADRP X8, 0xC25000
	0x0350F01C LDR X8, [X8 + 0x2E8]
	0x0350F020 LDR X0, [X8]
	0x0350F024 BL 0x1C16F10
	0x0350F028 MOV X1, X31
	0x0350F02C MOV X21, X0
	0x0350F030 BL 0x34EE5BC
	0x0350F034 CBZ X21, 0x350F10C
	0x0350F038 STRB W20, [X21 + 0x10]
	0x0350F03C LDR W20, [X31 + 0x1C]
	0x0350F040 CMP W22, W23
	0x0350F044 STR W20, [X21 + 0x14]
	0x0350F048 B.LE 0x350F05C
	0x0350F04C MOV X0, X19
	0x0350F050 MOV X1, X31
	0x0350F054 BL 0x351EDB0
	0x0350F058 MOV W20, W0
	0x0350F05C CMP W20, 0x1
	0x0350F060 B.LT 0x350F098
	0x0350F064 ADRP X8, 0xBE4000
	0x0350F068 LDR X8, [X8 + 0x618]
	0x0350F06C MOV W1, W20
	0x0350F070 LDR X0, [X8]
	0x0350F074 BL 0x1C16D6C
	0x0350F078 MOV X22, X0
	0x0350F07C MOV X0, X19
	0x0350F080 MOV X1, X22
	0x0350F084 MOV W2, W31
	0x0350F088 MOV W3, W20
	0x0350F08C MOV X4, X31
	0x0350F090 BL 0x351EE98
	0x0350F094 STR X22, [X21 + 0x18]
	0x0350F098 MOV X0, X21
	0x0350F09C LDP X20, X19, [X31 + 0x40]
	0x0350F0A0 LDP X22, X21, [X31 + 0x30]
	0x0350F0A4 LDP X30, X23, [X31 + 0x20]
	0x0350F0A8 ADD X31, X31, 0x50
	0x0350F0AC RET
	0x0350F0B0 ADRP X8, 0xBE4000
	0x0350F0B4 LDR W1, [X31 + 0x1C]
	0x0350F0B8 LDR X8, [X8 + 0x618]
	0x0350F0BC LDR X0, [X8]
	0x0350F0C0 BL 0x1C16D6C
	0x0350F0C4 LDR W3, [X31 + 0x1C]
	0x0350F0C8 MOV X20, X0
	0x0350F0CC MOV X0, X19
	0x0350F0D0 MOV X1, X20
	0x0350F0D4 MOV W2, W31
	0x0350F0D8 MOV X4, X31
	0x0350F0DC BL 0x351EE98
	0x0350F0E0 LDR X8, [X31 + 0x10]
	0x0350F0E4 CBZ X8, 0x350F10C
	0x0350F0E8 LDR X8, [X8 + 0x28]
	0x0350F0EC CBZ X8, 0x350F10C
	0x0350F0F0 LDR X9, [X8 + 0x18]
	0x0350F0F4 LDR X0, [X8 + 0x40]
	0x0350F0F8 LDR X2, [X8 + 0x28]
	0x0350F0FC MOV X1, X20
	0x0350F100 BLR X9
	0x0350F104 MOV X21, X0
	0x0350F108 B 0x350F098
	0x0350F10C BL 0x1C16F20
	0x0350F110 ADD X0, X31, 0x1C
	0x0350F114 MOV X1, X31
	0x0350F118 BL 0x337B6E0
	0x0350F11C MOV X20, X0
	0x0350F120 MOV X0, X19
	0x0350F124 BL 0x19903C0
	0x0350F128 MOV X0, X19
	0x0350F12C MOV X1, X31
	0x0350F130 BL 0x3517FD4
	0x0350F134 STR W0, [X31 + 0xC]
	0x0350F138 ADD X0, X31, 0xC
	0x0350F13C MOV X1, X31
	0x0350F140 BL 0x337B6E0
	0x0350F144 MOV X19, X0
	0x0350F148 ADRP X0, 0xC25000
	0x0350F14C LDR X0, [X0 + 0x2F0]
	0x0350F150 BL 0x1C16D08
	0x0350F154 MOV X21, X0
	0x0350F158 ADRP X0, 0xC25000
	0x0350F15C LDR X0, [X0 + 0x60]
	0x0350F160 BL 0x1C16D08
	0x0350F164 MOV X2, X0
	0x0350F168 MOV X0, X21
	0x0350F16C MOV X1, X20
	0x0350F170 MOV X3, X19
	0x0350F174 MOV X4, X31
	0x0350F178 BL 0x32277C4
	0x0350F17C MOV X19, X0
	0x0350F180 ADRP X0, 0xC25000
	0x0350F184 LDR X0, [X0 + 0x68]
	0x0350F188 BL 0x1C16D08
	0x0350F18C BL 0x1C16F10
	0x0350F190 MOV X1, X19

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+32], X24
	004 Move [X31+40], X23
	005 Move [X31+48], X22
	006 Move [X31+56], X21
	007 Move [X31+64], X20
	008 Move [X31+72], X19
	009 Move X24, 0xED2000
	010 Move W8, [X24+2781]
	011 Move X19, X4
	012 Move W20, W3
	013 Move W23, W2
	014 Move X21, X1
	015 Move X22, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {58}
	020 Move X0, 0xBE6000
	021 Move X0, [X0+2904]
	022 Call 0x1C17CF4
	023 Move X0, 0xBE7000
	024 Move X0, [X0+2520]
	025 Call 0x1C17CF4
	026 Move X0, 0xBE9000
	027 Move X0, [X0+2424]
	028 Call 0x1C17CF4
	029 Move X0, 0xBEA000
	030 Move X0, [X0+1576]
	031 Call 0x1C17CF4
	032 Move X0, 0xBE6000
	033 Move X0, [X0+1880]
	034 Call 0x1C17CF4
	035 Move X0, 0xBE8000
	036 Move X0, [X0+2656]
	037 Call 0x1C17CF4
	038 Move X0, 0xBE6000
	039 Move X0, [X0+2704]
	040 Call 0x1C17CF4
	041 Move X0, 0xC27000
	042 Move X0, [X0+624]
	043 Call 0x1C17CF4
	044 Move X0, 0xC27000
	045 Move X0, [X0+632]
	046 Call 0x1C17CF4
	047 Move X0, 0xC27000
	048 Move X0, [X0+640]
	049 Call 0x1C17CF4
	050 Move X0, 0xC27000
	051 Move X0, [X0+648]
	052 Call 0x1C17CF4
	053 Move X0, 0xC27000
	054 Move X0, [X0+656]
	055 Call 0x1C17CF4
	056 Move W8, 1
	057 Move [X24+2781], W8
	058 Move TEMP, X23
	059 And TEMP, TEMP, 128
	060 Compare TEMP, 128
	061 JumpIfNotEqual {77}
	062 And W8, W23, 255
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Move X0, X22
	065 Move X1, X21
	066 Move W2, W23
	067 Move X20, [X31+64]
	068 Move X19, [X31+72]
	069 Move X22, [X31+48]
	070 Move X21, [X31+56]
	071 Move X24, [X31+32]
	072 Move X23, [X31+40]
	073 Move X30, [X31+16]
	074 Add X31, X31, 80
	075 Call Protocol18.ReadCustomType, X0, X1, X2
	076 Return X0
	077 And W8, W23, 255
	078 Subtract W8, W8, 2
	079 NotImplemented "Instruction CMP not yet implemented."
	080 Move X9, -43479040
	081 Add X9, X9, 2898
	082 NotImplemented "Instruction ADR not yet implemented."
	083 NotImplemented "Instruction LDRH not yet implemented."
	084 Add X10, X10, X11
	085 Move X0, X31
	086 CallNoReturn X10
	087 Compare X21, 0
	088 JumpIfEqual {738}
	089 Move X0, X21
	090 Move X1, X31
	091 Call StreamBuffer.ReadByte, X0
	092 Move TEMP, X20
	093 And TEMP, TEMP, 2
	094 Compare TEMP, 2
	095 JumpIfEqual {703}
	096 Move X8, 0xBE6000
	097 Move X8, [X8+2904]
	098 And W31, W0, 255
	099 NotImplemented "Instruction CSET not yet implemented."
	100 Add X1, X31, 24
	101 Move X8, [X8]
	102 Move [X31+24], W9
	103 Move X0, X8
	104 Compare X21, 0
	105 JumpIfEqual {738}
	106 Move X0, X21
	107 Move X1, X31
	108 Call StreamBuffer.ReadByte, X0
	109 Move W1, W0
	110 Move TEMP, X20
	111 And TEMP, TEMP, 2
	112 Compare TEMP, 2
	113 JumpIfEqual {722}
	114 Move X8, 0xBE7000
	115 Move X8, [X8+2520]
	116 Move [X31+24], W1
	117 Move X1, X21
	118 Call Protocol18.ReadInt16, X0, X1
	119 Move W1, W0
	120 Move TEMP, X20
	121 And TEMP, TEMP, 2
	122 Compare TEMP, 2
	123 JumpIfEqual {591}
	124 Move X8, 0xBEA000
	125 Move X8, [X8+1576]
	126 NotImplemented "Instruction STRH not yet implemented."
	127 Move X1, X21
	128 Call Protocol18.ReadSingle, X0, X1
	129 Move TEMP, X20
	130 And TEMP, TEMP, 2
	131 Compare TEMP, 2
	132 JumpIfEqual {598}
	133 Move X8, 0xBE6000
	134 Move X8, [X8+2704]
	135 Move [X31+24], S0
	136 Move X1, X21
	137 Call Protocol18.ReadDouble, X0, X1
	138 Move TEMP, X20
	139 And TEMP, TEMP, 2
	140 Compare TEMP, 2
	141 JumpIfEqual {605}
	142 Move X8, 0xBE9000
	143 Move X8, [X8+2424]
	144 Move [X31+24], D0
	145 Move X0, X22
	146 Move X1, X21
	147 Move X20, [X31+64]
	148 Move X19, [X31+72]
	149 Move X22, [X31+48]
	150 Move X21, [X31+56]
	151 Move X24, [X31+32]
	152 Move X23, [X31+40]
	153 Move X30, [X31+16]
	154 Add X31, X31, 80
	155 Call Protocol18.ReadString, X0, X1
	156 Return X0
	157 Move X1, X21
	158 Call Protocol18.ReadCompressedUInt32, X0, X1
	159 And W8, W0, 1
	160 Subtract W8, W31, W8
	161 Xor W1, W8, W0
	162 Move TEMP, X20
	163 And TEMP, TEMP, 2
	164 Compare TEMP, 2
	165 JumpIfNotEqual {203}
	166 Move X1, X21
	167 Call Protocol18.ReadCompressedUInt64, X0, X1
	168 And X8, X0, 1
	169 Subtract X8, X31, X8
	170 Xor X1, X8, X0
	171 Move TEMP, X20
	172 And TEMP, TEMP, 2
	173 Compare TEMP, 2
	174 JumpIfNotEqual {260}
	175 Compare X21, 0
	176 JumpIfEqual {738}
	177 Move X0, X21
	178 Move X1, X31
	179 Call StreamBuffer.ReadByte, X0
	180 And W1, W0, 255
	181 Move TEMP, X20
	182 And TEMP, TEMP, 2
	183 Compare TEMP, 2
	184 JumpIfNotEqual {203}
	185 Compare X21, 0
	186 JumpIfEqual {738}
	187 Move X0, X21
	188 Move X1, X31
	189 Call StreamBuffer.ReadByte, X0
	190 Move W8, W31
	191 Subtract W1, W8, W0
	192 Move TEMP, X20
	193 And TEMP, TEMP, 2
	194 Compare TEMP, 2
	195 JumpIfNotEqual {203}
	196 Move X1, X21
	197 Call Protocol18.ReadUShort, X0, X1
	198 And W1, W0, 0xFFFF
	199 Move TEMP, X20
	200 And TEMP, TEMP, 2
	201 Compare TEMP, 2
	202 JumpIfEqual {214}
	203 Move X8, 0xBE6000
	204 Move X8, [X8+1880]
	205 Move [X31+24], W1
	206 Move X1, X21
	207 Call Protocol18.ReadUShort, X0, X1
	208 Move W8, W31
	209 Subtract W1, W8, W0
	210 Move TEMP, X20
	211 And TEMP, TEMP, 2
	212 Compare TEMP, 2
	213 JumpIfNotEqual {203}
	214 Compare X19, 0
	215 JumpIfEqual {738}
	216 Move X0, [X19+24]
	217 Compare X0, 0
	218 JumpIfEqual {738}
	219 Move X8, 0xC27000
	220 Move X8, [X8+640]
	221 Move X2, [X8]
	222 Move X20, [X31+64]
	223 Move X19, [X31+72]
	224 Move X22, [X31+48]
	225 Move X21, [X31+56]
	226 Move X24, [X31+32]
	227 Move X23, [X31+40]
	228 Move X30, [X31+16]
	229 Add X31, X31, 80
	230 Call StructWrapperPools.Acquire, X0, X1
	231 Return X0
	232 Compare X21, 0
	233 JumpIfEqual {738}
	234 Move X0, X21
	235 Move X1, X31
	236 Call StreamBuffer.ReadByte, X0
	237 And X1, X0, 255
	238 Move TEMP, X20
	239 And TEMP, TEMP, 2
	240 Compare TEMP, 2
	241 JumpIfNotEqual {260}
	242 Compare X21, 0
	243 JumpIfEqual {738}
	244 Move X0, X21
	245 Move X1, X31
	246 Move X22, X31
	247 Call StreamBuffer.ReadByte, X0
	248 Subtract X1, X22, W0
	249 Move TEMP, X20
	250 And TEMP, TEMP, 2
	251 Compare TEMP, 2
	252 JumpIfNotEqual {260}
	253 Move X1, X21
	254 Call Protocol18.ReadUShort, X0, X1
	255 And X1, X0, 0xFFFF
	256 Move TEMP, X20
	257 And TEMP, TEMP, 2
	258 Compare TEMP, 2
	259 JumpIfEqual {283}
	260 Move X8, 0xBE8000
	261 Move X8, [X8+2656]
	262 Move [X31+24], X1
	263 Move X0, [X8]
	264 Add X1, X31, 24
	265 Call 0x1C17E04
	266 Move X20, [X31+64]
	267 Move X19, [X31+72]
	268 Move X22, [X31+48]
	269 Move X21, [X31+56]
	270 Move X24, [X31+32]
	271 Move X23, [X31+40]
	272 Move X30, [X31+16]
	273 Add X31, X31, 80
	274 Return X0
	275 Move X1, X21
	276 Call Protocol18.ReadUShort, X0, X1
	277 Move X8, X31
	278 Subtract X1, X8, W0
	279 Move TEMP, X20
	280 And TEMP, TEMP, 2
	281 Compare TEMP, 2
	282 JumpIfNotEqual {260}
	283 Compare X19, 0
	284 JumpIfEqual {738}
	285 Move X0, [X19+24]
	286 Compare X0, 0
	287 JumpIfEqual {738}
	288 Move X8, 0xC27000
	289 Move X8, [X8+648]
	290 Move X2, [X8]
	291 Move X20, [X31+64]
	292 Move X19, [X31+72]
	293 Move X22, [X31+48]
	294 Move X21, [X31+56]
	295 Move X24, [X31+32]
	296 Move X23, [X31+40]
	297 Move X30, [X31+16]
	298 Add X31, X31, 80
	299 Call StructWrapperPools.Acquire, X0, X1
	300 Return X0
	301 Move X0, X22
	302 Move X1, X21
	303 Move W2, W31
	304 Move X0, X22
	305 Move X1, X21
	306 Move W2, W20
	307 Move X3, X19
	308 Move X20, [X31+64]
	309 Move X19, [X31+72]
	310 Move X22, [X31+48]
	311 Move X21, [X31+56]
	312 Move X24, [X31+32]
	313 Move X23, [X31+40]
	314 Move X30, [X31+16]
	315 Add X31, X31, 80
	316 Call Protocol18.ReadDictionary, X0, X1, X2, X3
	317 Return X0
	318 Move X0, X22
	319 Move X1, X21
	320 Move W2, W20
	321 Move X3, X19
	322 Move X20, [X31+64]
	323 Move X19, [X31+72]
	324 Move X22, [X31+48]
	325 Move X21, [X31+56]
	326 Move X24, [X31+32]
	327 Move X23, [X31+40]
	328 Move X30, [X31+16]
	329 Add X31, X31, 80
	330 Call Protocol18.ReadHashtable, X0, X1, X2, X3
	331 Return X0
	332 Move X0, X22
	333 Move X1, X21
	334 Move W2, W20
	335 Move X3, X19
	336 Move X20, [X31+64]
	337 Move X19, [X31+72]
	338 Move X22, [X31+48]
	339 Move X21, [X31+56]
	340 Move X24, [X31+32]
	341 Move X23, [X31+40]
	342 Move X30, [X31+16]
	343 Add X31, X31, 80
	344 Call Protocol18.ReadObjectArray, X0, X1, X2, X3
	345 Return X0
	346 Move X8, [X22]
	347 Move X0, X22
	348 Move X1, X21
	349 Move W2, W31
	350 Move X4, [X8+584]
	351 Move X3, [X8+592]
	352 Move X8, [X22]
	353 Move X0, X22
	354 Move X1, X21
	355 Move W2, W20
	356 Move X4, [X8+600]
	357 Move X3, [X8+608]
	358 Move X20, [X31+64]
	359 Move X19, [X31+72]
	360 Move X22, [X31+48]
	361 Move X21, [X31+56]
	362 Move X24, [X31+32]
	363 Move X23, [X31+40]
	364 Move X30, [X31+16]
	365 Add X31, X31, 80
	366 CallNoReturn X4
	367 Move X8, [X22]
	368 Move X0, X22
	369 Move X1, X21
	370 Move X20, [X31+64]
	371 Move X19, [X31+72]
	372 Move X5, [X8+568]
	373 Move X4, [X8+576]
	374 Move X22, [X31+48]
	375 Move X21, [X31+56]
	376 Move X24, [X31+32]
	377 Move X23, [X31+40]
	378 Move X30, [X31+16]
	379 Move X2, X31
	380 Move W3, W31
	381 Add X31, X31, 80
	382 CallNoReturn X5
	383 Move TEMP, X20
	384 And TEMP, TEMP, 2
	385 Compare TEMP, 2
	386 JumpIfEqual {612}
	387 Move X8, 0xBE6000
	388 Move X8, [X8+2904]
	389 Move TEMP, X20
	390 And TEMP, TEMP, 2
	391 Compare TEMP, 2
	392 JumpIfEqual {618}
	393 Move X8, 0xBE6000
	394 Move X8, [X8+2904]
	395 Move X0, [X8]
	396 Move W8, 1
	397 Move [X31+24], W8
	398 Move TEMP, X20
	399 And TEMP, TEMP, 2
	400 Compare TEMP, 2
	401 JumpIfEqual {624}
	402 Move X8, 0xBEA000
	403 Move X8, [X8+1576]
	404 NotImplemented "Instruction STRH not yet implemented."
	405 Move TEMP, X20
	406 And TEMP, TEMP, 2
	407 Compare TEMP, 2
	408 JumpIfEqual {643}
	409 Move X8, 0xBE6000
	410 Move X8, [X8+1880]
	411 Move TEMP, X20
	412 And TEMP, TEMP, 2
	413 Compare TEMP, 2
	414 JumpIfEqual {651}
	415 Move X8, 0xBE8000
	416 Move X8, [X8+2656]
	417 Move TEMP, X20
	418 And TEMP, TEMP, 2
	419 Compare TEMP, 2
	420 JumpIfEqual {659}
	421 Move X8, 0xBE6000
	422 Move X8, [X8+2704]
	423 Move X0, [X8]
	424 Move [X31+24], W31
	425 Move TEMP, X20
	426 And TEMP, TEMP, 2
	427 Compare TEMP, 2
	428 JumpIfEqual {678}
	429 Move X8, 0xBE9000
	430 Move X8, [X8+2424]
	431 Move X0, [X8]
	432 Move [X31+24], X31
	433 Move TEMP, X20
	434 And TEMP, TEMP, 2
	435 Compare TEMP, 2
	436 JumpIfEqual {697}
	437 Move X8, 0xBE7000
	438 Move X8, [X8+2520]
	439 Move X0, [X8]
	440 Move [X31+24], W31
	441 Move X0, X22
	442 Move X1, X21
	443 Move W2, W20
	444 Move X3, X19
	445 Move X20, [X31+64]
	446 Move X19, [X31+72]
	447 Move X22, [X31+48]
	448 Move X21, [X31+56]
	449 Move X24, [X31+32]
	450 Move X23, [X31+40]
	451 Move X30, [X31+16]
	452 Add X31, X31, 80
	453 Call Protocol18.ReadArrayInArray, X0, X1, X2, X3
	454 Return X0
	455 Move X0, X22
	456 Move X1, X21
	457 Move X20, [X31+64]
	458 Move X19, [X31+72]
	459 Move X22, [X31+48]
	460 Move X21, [X31+56]
	461 Move X24, [X31+32]
	462 Move X23, [X31+40]
	463 Move X30, [X31+16]
	464 Add X31, X31, 80
	465 Call Protocol18.ReadBooleanArray, X0, X1
	466 Return X0
	467 Move X0, X22
	468 Move X1, X21
	469 Move X20, [X31+64]
	470 Move X19, [X31+72]
	471 Move X22, [X31+48]
	472 Move X21, [X31+56]
	473 Move X24, [X31+32]
	474 Move X23, [X31+40]
	475 Move X30, [X31+16]
	476 Add X31, X31, 80
	477 Call Protocol18.ReadByteArray, X0, X1
	478 Return X0
	479 Move X0, X22
	480 Move X1, X21
	481 Move X20, [X31+64]
	482 Move X19, [X31+72]
	483 Move X22, [X31+48]
	484 Move X21, [X31+56]
	485 Move X24, [X31+32]
	486 Move X23, [X31+40]
	487 Move X30, [X31+16]
	488 Add X31, X31, 80
	489 Call Protocol18.ReadInt16Array, X0, X1
	490 Return X0
	491 Move X0, X22
	492 Move X1, X21
	493 Move X20, [X31+64]
	494 Move X19, [X31+72]
	495 Move X22, [X31+48]
	496 Move X21, [X31+56]
	497 Move X24, [X31+32]
	498 Move X23, [X31+40]
	499 Move X30, [X31+16]
	500 Add X31, X31, 80
	501 Call Protocol18.ReadSingleArray, X0, X1
	502 Return X0
	503 Move X0, X22
	504 Move X1, X21
	505 Move X20, [X31+64]
	506 Move X19, [X31+72]
	507 Move X22, [X31+48]
	508 Move X21, [X31+56]
	509 Move X24, [X31+32]
	510 Move X23, [X31+40]
	511 Move X30, [X31+16]
	512 Add X31, X31, 80
	513 Call Protocol18.ReadDoubleArray, X0, X1
	514 Return X0
	515 Move X0, X22
	516 Move X1, X21
	517 Move X20, [X31+64]
	518 Move X19, [X31+72]
	519 Move X22, [X31+48]
	520 Move X21, [X31+56]
	521 Move X24, [X31+32]
	522 Move X23, [X31+40]
	523 Move X30, [X31+16]
	524 Add X31, X31, 80
	525 Call Protocol18.ReadStringArray, X0, X1
	526 Return X0
	527 Move X0, X22
	528 Move X1, X21
	529 Move X20, [X31+64]
	530 Move X19, [X31+72]
	531 Move X22, [X31+48]
	532 Move X21, [X31+56]
	533 Move X24, [X31+32]
	534 Move X23, [X31+40]
	535 Move X30, [X31+16]
	536 Add X31, X31, 80
	537 Call Protocol18.ReadCompressedInt32Array, X0, X1
	538 Return X0
	539 Move X0, X22
	540 Move X1, X21
	541 Move X20, [X31+64]
	542 Move X19, [X31+72]
	543 Move X22, [X31+48]
	544 Move X21, [X31+56]
	545 Move X24, [X31+32]
	546 Move X23, [X31+40]
	547 Move X30, [X31+16]
	548 Add X31, X31, 80
	549 Call Protocol18.ReadCompressedInt64Array, X0, X1
	550 Return X0
	551 Move X0, X22
	552 Move X1, X21
	553 Move X20, [X31+64]
	554 Move X19, [X31+72]
	555 Move X22, [X31+48]
	556 Move X21, [X31+56]
	557 Move X24, [X31+32]
	558 Move X23, [X31+40]
	559 Move X30, [X31+16]
	560 Add X31, X31, 80
	561 Call Protocol18.ReadCustomTypeArray, X0, X1
	562 Return X0
	563 Move X0, X22
	564 Move X1, X21
	565 Move W2, W20
	566 Move X3, X19
	567 Move X20, [X31+64]
	568 Move X19, [X31+72]
	569 Move X22, [X31+48]
	570 Move X21, [X31+56]
	571 Move X24, [X31+32]
	572 Move X23, [X31+40]
	573 Move X30, [X31+16]
	574 Add X31, X31, 80
	575 Call Protocol18.ReadDictionaryArray, X0, X1, X2, X3
	576 Return X0
	577 Move X0, X22
	578 Move X1, X21
	579 Move W2, W20
	580 Move X3, X19
	581 Move X20, [X31+64]
	582 Move X19, [X31+72]
	583 Move X22, [X31+48]
	584 Move X21, [X31+56]
	585 Move X24, [X31+32]
	586 Move X23, [X31+40]
	587 Move X30, [X31+16]
	588 Add X31, X31, 80
	589 Call Protocol18.ReadHashtableArray, X0, X1, X2, X3
	590 Return X0
	591 Compare X19, 0
	592 JumpIfEqual {738}
	593 Move X0, [X19+24]
	594 Compare X0, 0
	595 JumpIfEqual {738}
	596 Move X8, 0xC27000
	597 Move X8, [X8+632]
	598 Compare X19, 0
	599 JumpIfEqual {738}
	600 Move X0, [X19+24]
	601 Compare X0, 0
	602 JumpIfEqual {738}
	603 Move X8, 0xC27000
	604 Move X8, [X8+656]
	605 Compare X19, 0
	606 JumpIfEqual {738}
	607 Move X0, [X19+24]
	608 Compare X0, 0
	609 JumpIfEqual {738}
	610 Move X8, 0xC27000
	611 Move X8, [X8+624]
	612 Compare X19, 0
	613 JumpIfEqual {738}
	614 Move X0, [X19+24]
	615 Compare X0, 0
	616 JumpIfEqual {738}
	617 Move W1, W31
	618 Compare X19, 0
	619 JumpIfEqual {738}
	620 Move X0, [X19+24]
	621 Compare X0, 0
	622 JumpIfEqual {738}
	623 Move W1, 1
	624 Compare X19, 0
	625 JumpIfEqual {738}
	626 Move X0, [X19+24]
	627 Compare X0, 0
	628 JumpIfEqual {738}
	629 Move X8, 0xC27000
	630 Move X8, [X8+632]
	631 Move W1, W31
	632 Move X2, [X8]
	633 Move X20, [X31+64]
	634 Move X19, [X31+72]
	635 Move X22, [X31+48]
	636 Move X21, [X31+56]
	637 Move X24, [X31+32]
	638 Move X23, [X31+40]
	639 Move X30, [X31+16]
	640 Add X31, X31, 80
	641 Call StructWrapperPools.Acquire, X0, X1
	642 Return X0
	643 Compare X19, 0
	644 JumpIfEqual {738}
	645 Move X0, [X19+24]
	646 Compare X0, 0
	647 JumpIfEqual {738}
	648 Move X8, 0xC27000
	649 Move X8, [X8+640]
	650 Move W1, W31
	651 Compare X19, 0
	652 JumpIfEqual {738}
	653 Move X0, [X19+24]
	654 Compare X0, 0
	655 JumpIfEqual {738}
	656 Move X8, 0xC27000
	657 Move X8, [X8+648]
	658 Move X1, X31
	659 Compare X19, 0
	660 JumpIfEqual {738}
	661 Move X0, [X19+24]
	662 Compare X0, 0
	663 JumpIfEqual {738}
	664 Move X8, 0xC27000
	665 Move X8, [X8+656]
	666 Move S0, W31
	667 Move X1, [X8]
	668 Move X20, [X31+64]
	669 Move X19, [X31+72]
	670 Move X22, [X31+48]
	671 Move X21, [X31+56]
	672 Move X24, [X31+32]
	673 Move X23, [X31+40]
	674 Move X30, [X31+16]
	675 Add X31, X31, 80
	676 Call StructWrapperPools.Acquire, X0, V0
	677 Return X0
	678 Compare X19, 0
	679 JumpIfEqual {738}
	680 Move X0, [X19+24]
	681 Compare X0, 0
	682 JumpIfEqual {738}
	683 Move X8, 0xC26000
	684 Move X8, [X8+624]
	685 Move D0, X31
	686 Move X1, [X8]
	687 Move X20, [X31+64]
	688 Move X19, [X31+72]
	689 Move X22, [X31+48]
	690 Move X21, [X31+56]
	691 Move X24, [X31+32]
	692 Move X23, [X31+40]
	693 Move X30, [X31+16]
	694 Add X31, X31, 80
	695 Call 0x228F6AC, X0, X1
	696 Return X0
	697 Compare X19, 0
	698 JumpIfEqual {738}
	699 Move X0, [X19+24]
	700 Compare X0, 0
	701 JumpIfEqual {738}
	702 Move W1, W31
	703 Compare X19, 0
	704 JumpIfEqual {738}
	705 Move X8, [X19+24]
	706 Compare X8, 0
	707 JumpIfEqual {738}
	708 And W31, W0, 255
	709 NotImplemented "Instruction CSET not yet implemented."
	710 Move X0, X8
	711 Move X20, [X31+64]
	712 Move X19, [X31+72]
	713 Move X22, [X31+48]
	714 Move X21, [X31+56]
	715 Move X24, [X31+32]
	716 Move X23, [X31+40]
	717 Move X30, [X31+16]
	718 Move X2, X31
	719 Add X31, X31, 80
	720 Call StructWrapperPools.Acquire, X0, X1
	721 Return X0
	722 Compare X19, 0
	723 JumpIfEqual {738}
	724 Move X0, [X19+24]
	725 Compare X0, 0
	726 JumpIfEqual {738}
	727 Move X20, [X31+64]
	728 Move X19, [X31+72]
	729 Move X22, [X31+48]
	730 Move X21, [X31+56]
	731 Move X24, [X31+32]
	732 Move X23, [X31+40]
	733 Move X30, [X31+16]
	734 Move X2, X31
	735 Add X31, X31, 80
	736 Call StructWrapperPools.Acquire, X0, X1
	737 Return X0
	738 Call 0x1C17F20
	739 Move [X31+12], W23
	740 Move X0, 0xBE6000
	741 Move X0, [X0+2520]
	742 Call 0x1C17D08
	743 Add X1, X31, 12
	744 Call 0x1C17E04
	745 Move X19, X0
	746 Move X0, X21
	747 Call 0x19913C0
	748 Move X0, X21
	749 Move X1, X31
	750 Call StreamBuffer.get_Position, X0
	751 Move [X31+24], W0
	752 Move X20, 0xBE5000
	753 Move X20, [X20+1880]
	754 Move X0, X20
	755 Call 0x1C17D08
	756 Add X1, X31, 24
	757 Call 0x1C17E04
	758 Move X22, X0
	759 Move X0, X21
	760 Call 0x19913C0
	761 Move X0, X21
	762 Move X1, X31
	763 Call StreamBuffer.get_Available, X0
	764 Move [X31+8], W0
	765 Move X0, X20
	766 Call 0x1C17D08
	767 Add X1, X31, 8
	768 Call 0x1C17E04
	769 Move X20, X0
	770 Move X0, 0xC26000
	771 Move X0, [X0+664]
	772 Call 0x1C17D08
	773 Move X1, X19
	774 Move X2, X22
	775 Move X3, X20
	776 Move X4, X31
	777 Call String.Format, X0, X1, X2, X3
	778 Move X19, X0
	779 Move X0, 0xC26000
	780 Move X0, [X0+104]
	781 Call 0x1C17D08
	782 Call 0x1C17F10
	783 Move X1, X19
	784 Move X20, X0
	785 Call InvalidDataException..ctor, X0, X1
	786 Move X0, 0xC26000
	787 Move X0, [X0+672]
	788 Call 0x1C17D08
	789 Move X1, X0
	790 Move X0, X20
	791 Call 0x1C17DEC

Method: System.Boolean ReadBoolean(ExitGames.Client.Photon.StreamBuffer stream)

Disassembly:
	0x035101B4 CMP W21, W0
	0x035101B8 CSEL W21, W0, W21, GT
	0x035101BC MOV X0, X19
	0x035101C0 MOV X1, X31
	0x035101C4 BL 0x3517FD4
	0x035101C8 ADD W1, W21, W0
	0x035101CC MOV X0, X19
	0x035101D0 MOV X2, X31
	0x035101D4 BL 0x3517FDC
	0x035101D8 SUBS W20, W20, 0x1

ISIL:
	001 Move [X31-16], X30
	002 Compare X1, 0
	003 JumpIfEqual {11}
	004 Move X0, X1
	005 Move X1, X31
	006 Call StreamBuffer.ReadByte, X0
	007 And W31, W0, 255
	008 NotImplemented "Instruction CSET not yet implemented."
	009 Move X30, [X31+16]
	010 Return X0
	011 Call 0x1C17F20

Method: System.Byte ReadByte(ExitGames.Client.Photon.StreamBuffer stream)

Disassembly:
	0x0350F214 STR X30, [X31 - 0x10]!
	0x0350F218 STR W31, [X31 + 0xC]
	0x0350F21C CBZ X1, 0x350F248
	0x0350F220 MOV X0, X1
	0x0350F224 ADD X2, X31, 0xC
	0x0350F228 MOVZ W1, 0x8

ISIL:
	001 Compare X1, 0
	002 JumpIfEqual {7}
	003 Move X0, X1
	004 Move X1, X31
	005 Call StreamBuffer.ReadByte, X0
	006 Return X0
	007 Move [X31-16], X30
	008 Call 0x1C17F20

Method: System.Int16 ReadInt16(ExitGames.Client.Photon.StreamBuffer stream)

Disassembly:
	0x0350F198 BL 0x35077D4
	0x0350F19C ADRP X0, 0xC25000
	0x0350F1A0 LDR X0, [X0 + 0x2F8]
	0x0350F1A4 BL 0x1C16D08
	0x0350F1A8 MOV X1, X0
	0x0350F1AC MOV X0, X20
	0x0350F1B0 BL 0x1C16DEC
	0x0350F1B4 STR X30, [X31 - 0x10]!
	0x0350F1B8 CBZ X1, 0x350F1D8
	0x0350F1BC MOV X0, X1
	0x0350F1C0 MOV X1, X31
	0x0350F1C4 BL 0x351EF00
	0x0350F1C8 ANDS W31, W0, 0xFF
	0x0350F1CC CSET W0, NE
	0x0350F1D0 LDR X30, [X31], #0x10
	0x0350F1D4 RET
	0x0350F1D8 BL 0x1C16F20
	0x0350F1DC STR X30, [X31 - 0x10]!
	0x0350F1E0 STR W31, [X31 + 0xC]
	0x0350F1E4 CBZ X1, 0x350F210
	0x0350F1E8 MOV X0, X1
	0x0350F1EC ADD X2, X31, 0xC
	0x0350F1F0 MOVZ W1, 0x4
	0x0350F1F4 MOV X3, X31
	0x0350F1F8 BL 0x351ECA4

ISIL:
	001 Move [X31-16], X30
	002 Move [X31+12], W31
	003 Compare X1, 0
	004 JumpIfEqual {24}
	005 Move X0, X1
	006 Add X2, X31, 12
	007 Move W1, 2
	008 Move X3, X31
	009 Call StreamBuffer.GetBufferAndAdvance, X0, X1, X2
	010 NotImplemented "Instruction LDRSW not yet implemented."
	011 Add W9, W8, 1
	012 Move [X31+12], W9
	013 Compare X0, 0
	014 JumpIfEqual {24}
	015 Move W10, [X0+24]
	016 NotImplemented "Instruction CMP not yet implemented."
	017 NotImplemented "Instruction CMP not yet implemented."
	018 Add X10, X0, 32
	019 Move W0, [X10]
	020 Move W8, [X10]
	021 NotImplemented "Instruction BFM not yet implemented."
	022 Move X30, [X31+16]
	023 Return X0
	024 Call 0x1C17F20
	025 Call 0x1C17F28

Method: System.UInt16 ReadUShort(ExitGames.Client.Photon.StreamBuffer stream)

Disassembly:
	0x03511674 BL 0x351EF00
	0x03511678 MOV W22, W0
	0x0351167C CBZ W24, 0x351169C
	0x03511680 LDR X0, [X25]
	0x03511684 LDR W8, [X0 + 0xE0]
	0x03511688 CBNZ W8, 0x3511690
	0x0351168C BL 0x1C16DFC
	0x03511690 MOV W0, W19
	0x03511694 BL 0x350E22C
	0x03511698 B 0x35116C4
	0x0351169C ADRP X8, 0xBEC000
	0x035116A0 LDR X0, [X23]
	0x035116A4 LDR X8, [X8 + 0x968]
	0x035116A8 LDR W9, [X0 + 0xE0]
	0x035116AC LDR X19, [X8]
	0x035116B0 CBNZ W9, 0x35116B8
	0x035116B4 BL 0x1C16DFC
	0x035116B8 MOV X0, X19
	0x035116BC MOV X1, X31
	0x035116C0 BL 0x338C698
	0x035116C4 ADRP X24, 0xC0B000
	0x035116C8 LDR X24, [X24 + 0x388]
	0x035116CC AND W8, W22, 0xFF
	0x035116D0 MOV X19, X0
	0x035116D4 CMP W8, 0x40

ISIL:
	001 Move [X31-16], X30
	002 Move [X31+12], W31
	003 Compare X1, 0
	004 JumpIfEqual {24}
	005 Move X0, X1
	006 Add X2, X31, 12
	007 Move W1, 2
	008 Move X3, X31
	009 Call StreamBuffer.GetBufferAndAdvance, X0, X1, X2
	010 NotImplemented "Instruction LDRSW not yet implemented."
	011 Add W9, W8, 1
	012 Move [X31+12], W9
	013 Compare X0, 0
	014 JumpIfEqual {24}
	015 Move W10, [X0+24]
	016 NotImplemented "Instruction CMP not yet implemented."
	017 NotImplemented "Instruction CMP not yet implemented."
	018 Add X10, X0, 32
	019 Move W0, [X10]
	020 Move W8, [X10]
	021 NotImplemented "Instruction BFM not yet implemented."
	022 Move X30, [X31+16]
	023 Return X0
	024 Call 0x1C17F20
	025 Call 0x1C17F28

Method: System.Int32 ReadInt32(ExitGames.Client.Photon.StreamBuffer stream)

Disassembly:
	0x035116D8 B.EQ 0x3511714
	0x035116DC CMP W8, 0x14
	0x035116E0 B.EQ 0x3511720
	0x035116E4 CBNZ W8, 0x3511730
	0x035116E8 ADRP X8, 0xBEC000
	0x035116EC LDR X0, [X23]
	0x035116F0 LDR X8, [X8 + 0x968]
	0x035116F4 LDR W9, [X0 + 0xE0]
	0x035116F8 LDR X20, [X8]
	0x035116FC CBNZ W9, 0x3511704
	0x03511700 BL 0x1C16DFC
	0x03511704 MOV X0, X20
	0x03511708 MOV X1, X31
	0x0351170C BL 0x338C698
	0x03511710 B 0x3511748
	0x03511714 MOV X1, X20
	0x03511718 BL 0x351181C
	0x0351171C B 0x3511748
	0x03511720 MOV X0, X21
	0x03511724 MOV X1, X20
	0x03511728 BL 0x35115DC
	0x0351172C B 0x3511748
	0x03511730 LDR X0, [X25]
	0x03511734 LDR W8, [X0 + 0xE0]
	0x03511738 CBNZ W8, 0x3511740
	0x0351173C BL 0x1C16DFC
	0x03511740 MOV W0, W22
	0x03511744 BL 0x350E40C
	0x03511748 MOV X20, X0
	0x0351174C LDR X0, [X23]
	0x03511750 ADRP X22, 0xBEA000
	0x03511754 LDR X21, [X24]
	0x03511758 LDR W8, [X0 + 0xE0]
	0x0351175C LDR X22, [X22 + 0xC60]
	0x03511760 CBNZ W8, 0x3511768
	0x03511764 BL 0x1C16DFC
	0x03511768 MOV X0, X21
	0x0351176C MOV X1, X31
	0x03511770 BL 0x338C698
	0x03511774 LDR X8, [X22]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31+12], W31
	003 Compare X1, 0
	004 JumpIfEqual {40}
	005 Move X0, X1
	006 Add X2, X31, 12
	007 Move W1, 4
	008 Move X3, X31
	009 Call StreamBuffer.GetBufferAndAdvance, X0, X1, X2
	010 NotImplemented "Instruction LDRSW not yet implemented."
	011 Add W10, W8, 1
	012 Move [X31+12], W10
	013 Compare X0, 0
	014 JumpIfEqual {40}
	015 Move W11, [X0+24]
	016 NotImplemented "Instruction CMP not yet implemented."
	017 Add X9, X0, X8
	018 Move W9, [X9+32]
	019 Add W12, W8, 2
	020 NotImplemented "Instruction CMP not yet implemented."
	021 Move [X31+12], W12
	022 Add X10, X0, W10
	023 Move W10, [X10+32]
	024 Add W8, W8, 3
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move [X31+12], W8
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Add X11, X0, 32
	029 Move W12, [X11]
	030 Move W8, [X11]
	031 Move W9, W9
	032 ShiftRight W9, 8
	033 And W9, W9, 127
	034 NotImplemented "Instruction BFM not yet implemented."
	035 NotImplemented "Instruction BFM not yet implemented."
	036 Or W0, W9, W8
	037 Move X30, [X31+16]
	038 Return X0
	039 Call 0x1C17F28
	040 Call 0x1C17F20

Method: System.Int64 ReadInt64(ExitGames.Client.Photon.StreamBuffer stream)

Disassembly:
	0x03511778 MOV X21, X0
	0x0351177C MOVZ W1, 0x2
	0x03511780 MOV X0, X8
	0x03511784 BL 0x1C16D6C
	0x03511788 CBZ X0, 0x3511808
	0x0351178C MOV X22, X0
	0x03511790 CBZ X19, 0x35117A8
	0x03511794 LDR X8, [X22]
	0x03511798 MOV X0, X19
	0x0351179C LDR X1, [X8 + 0x40]
	0x035117A0 BL 0x1C16E00
	0x035117A4 CBZ X0, 0x3511810
	0x035117A8 LDR W8, [X22 + 0x18]
	0x035117AC CBZ W8, 0x351180C
	0x035117B0 STR X19, [X22 + 0x20]
	0x035117B4 CBZ X20, 0x35117D0
	0x035117B8 LDR X8, [X22]
	0x035117BC MOV X0, X20
	0x035117C0 LDR X1, [X8 + 0x40]
	0x035117C4 BL 0x1C16E00
	0x035117C8 CBZ X0, 0x3511810
	0x035117CC LDR W8, [X22 + 0x18]
	0x035117D0 CMP W8, 0x1
	0x035117D4 B.LS 0x351180C
	0x035117D8 STR X20, [X22 + 0x28]
	0x035117DC CBZ X21, 0x3511808
	0x035117E0 LDR X8, [X21]
	0x035117E4 MOV X0, X21
	0x035117E8 MOV X1, X22
	0x035117EC LDP X20, X19, [X31 + 0x30]
	0x035117F0 LDR X3, [X8 + 0x8D8]
	0x035117F4 LDR X2, [X8 + 0x8E0]
	0x035117F8 LDP X22, X21, [X31 + 0x20]
	0x035117FC LDP X24, X23, [X31 + 0x10]
	0x03511800 LDP X30, X25, [X31], #0x40
	0x03511804 BR X3
	0x03511808 BL 0x1C16F20
	0x0351180C BL 0x1C16F28
	0x03511810 BL 0x1C16F44
	0x03511814 MOV X1, X31
	0x03511818 BL 0x1C16DEC
	0x0351181C STR X30, [X31 - 0x30]!
	0x03511820 STP X22, X21, [X31 + 0x10]
	0x03511824 STP X20, X19, [X31 + 0x20]
	0x03511828 ADRP X20, 0xECE000
	0x0351182C LDRB W8, [X20 + 0xAEC]
	0x03511830 MOV X19, X1
	0x03511834 TBNZ X8, 0x0, 0x351184C
	0x03511838 ADRP X0, 0xBEB000
	0x0351183C LDR X0, [X0 + 0xBB0]
	0x03511840 BL 0x1C16CF4
	0x03511844 MOVZ W8, 0x1
	0x03511848 STRB W8, [X20 + 0xAEC]
	0x0351184C CBZ X19, 0x3511910
	0x03511850 ADRP X22, 0xBEB000
	0x03511854 LDR X22, [X22 + 0xBB0]
	0x03511858 MOV X0, X19
	0x0351185C MOV X1, X31
	0x03511860 BL 0x351EF00
	0x03511864 AND W8, W0, 0xFF
	0x03511868 CMP W8, 0x40
	0x0351186C B.NE 0x3511898
	0x03511870 MOV W21, W31
	0x03511874 MOV X0, X19
	0x03511878 MOV X1, X31
	0x0351187C ADD W21, W21, 0x1
	0x03511880 BL 0x351EF00
	0x03511884 AND W8, W0, 0xFF

ISIL:
	001 Move [X31-16], X30
	002 Move [X31+12], W31
	003 Compare X1, 0
	004 JumpIfEqual {64}
	005 Move X0, X1
	006 Add X2, X31, 12
	007 Move W1, 4
	008 Move X3, X31
	009 Call StreamBuffer.GetBufferAndAdvance, X0, X1, X2
	010 NotImplemented "Instruction LDRSW not yet implemented."
	011 Add W10, W9, 1
	012 Move [X31+12], W10
	013 Compare X0, 0
	014 JumpIfEqual {64}
	015 Move W11, [X0+24]
	016 NotImplemented "Instruction CMP not yet implemented."
	017 Add X8, X0, X9
	018 Move W8, [X8+32]
	019 Add W12, W9, 2
	020 NotImplemented "Instruction CMP not yet implemented."
	021 Move [X31+12], W12
	022 Add X10, X0, W10
	023 Move W10, [X10+32]
	024 Add W13, W9, 3
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move [X31+12], W13
	027 Add X12, X0, W12
	028 Move W12, [X12+32]
	029 Add W14, W9, 4
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move [X31+12], W14
	032 Add X13, X0, W13
	033 Move W13, [X13+32]
	034 Add W15, W9, 5
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Move [X31+12], W15
	037 Add X14, X0, W14
	038 Move W14, [X14+32]
	039 Add W16, W9, 6
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Move [X31+12], W16
	042 Add X15, X0, W15
	043 Move W15, [X15+32]
	044 Add W9, W9, 7
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Move [X31+12], W9
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Move X8, X8
	049 ShiftRight X8, 8
	050 And X8, X8, 127
	051 Add X11, X0, 32
	052 NotImplemented "Instruction BFM not yet implemented."
	053 Move W16, [X11]
	054 NotImplemented "Instruction BFM not yet implemented."
	055 Move W9, [X11]
	056 NotImplemented "Instruction BFM not yet implemented."
	057 NotImplemented "Instruction BFM not yet implemented."
	058 NotImplemented "Instruction BFM not yet implemented."
	059 NotImplemented "Instruction BFM not yet implemented."
	060 Or X0, X8, X9
	061 Move X30, [X31+16]
	062 Return X0
	063 Call 0x1C17F28
	064 Call 0x1C17F20

Method: System.Single ReadSingle(ExitGames.Client.Photon.StreamBuffer stream)

Disassembly:
	0x035101DC B.NE 0x351019C
	0x035101E0 ADRP X8, 0xC24000
	0x035101E4 LDR X8, [X8 + 0x320]
	0x035101E8 MOVZ W1, 0x1
	0x035101EC LDR X0, [X8]
	0x035101F0 BL 0x1C16D6C
	0x035101F4 ADRP X8, 0xC24000
	0x035101F8 LDR X8, [X8 + 0x2E8]
	0x035101FC MOV X21, X0
	0x03510200 LDR X8, [X8]
	0x03510204 MOV X0, X8
	0x03510208 BL 0x1C16F10
	0x0351020C MOV X1, X31
	0x03510210 MOV X20, X0

ISIL:
	001 Move [X31-16], X30
	002 Move [X31+12], W31
	003 Compare X1, 0
	004 JumpIfEqual {15}
	005 Move X0, X1
	006 Add X2, X31, 12
	007 Move W1, 4
	008 Move X3, X31
	009 Call StreamBuffer.GetBufferAndAdvance, X0, X1, X2
	010 Move W1, [X31+12]
	011 Move X2, X31
	012 Call BitConverter.ToSingle, X0, X1
	013 Move X30, [X31+16]
	014 Return V0
	015 Call 0x1C17F20

Method: System.Double ReadDouble(ExitGames.Client.Photon.StreamBuffer stream)

Disassembly:
	0x03510214 BL 0x34EE5BC
	0x03510218 CBZ X20, 0x3510274
	0x0351021C MOV X0, X19
	0x03510220 MOV X1, X31
	0x03510224 STRB W22, [X20 + 0x10]
	0x03510228 BL 0x3517FD4
	0x0351022C SUB W8, W0, W23
	0x03510230 STR W8, [X20 + 0x14]
	0x03510234 CBZ X21, 0x3510274
	0x03510238 LDR X8, [X21]
	0x0351023C MOV X0, X20
	0x03510240 LDR X1, [X8 + 0x40]
	0x03510244 BL 0x1C16E00
	0x03510248 CBZ X0, 0x35103A0

ISIL:
	001 Move [X31-16], X30
	002 Move [X31+12], W31
	003 Compare X1, 0
	004 JumpIfEqual {15}
	005 Move X0, X1
	006 Add X2, X31, 12
	007 Move W1, 8
	008 Move X3, X31
	009 Call StreamBuffer.GetBufferAndAdvance, X0, X1, X2
	010 Move W1, [X31+12]
	011 Move X2, X31
	012 Call BitConverter.ToDouble, X0, X1
	013 Move X30, [X31+16]
	014 Return V0
	015 Call 0x1C17F20

Method: ExitGames.Client.Photon.ByteArraySlice ReadNonAllocByteArray(ExitGames.Client.Photon.StreamBuffer stream)

Disassembly:
	0x03511888 CMP W8, 0x40
	0x0351188C B.EQ 0x3511874
	0x03511890 MOV W20, W0
	0x03511894 B 0x35118A0
	0x03511898 MOV W20, W0
	0x0351189C MOV W21, W31
	0x035118A0 LDR X0, [X22]
	0x035118A4 LDR W8, [X0 + 0xE0]
	0x035118A8 CBNZ W8, 0x35118B0
	0x035118AC BL 0x1C16DFC
	0x035118B0 MOV W0, W20
	0x035118B4 BL 0x350E40C
	0x035118B8 CBZ X0, 0x3511910
	0x035118BC LDR X8, [X0]
	0x035118C0 LDR X9, [X8 + 0x8A8]
	0x035118C4 LDR X1, [X8 + 0x8B0]
	0x035118C8 BLR X9
	0x035118CC CMP W21, 0x1
	0x035118D0 B.LT 0x3511900
	0x035118D4 SXTW X19, W21
	0x035118D8 MOVZ W20, 0x1
	0x035118DC CBZ X0, 0x3511910
	0x035118E0 LDR X8, [X0]
	0x035118E4 LDR X9, [X8 + 0x8A8]
	0x035118E8 LDR X1, [X8 + 0x8B0]
	0x035118EC BLR X9
	0x035118F0 MOV W8, W20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, X1
	006 Move X20, X0
	007 Call Protocol18.ReadCompressedUInt32, X0, X1
	008 Move X8, [X20+16]
	009 Compare X8, 0
	010 JumpIfEqual {34}
	011 Move W20, W0
	012 Move X0, X8
	013 Move W1, W20
	014 Move X2, X31
	015 Call ByteArraySlicePool.Acquire, X0, X1
	016 Compare X0, 0
	017 JumpIfEqual {34}
	018 Compare X19, 0
	019 JumpIfEqual {34}
	020 Move X1, [X0+16]
	021 Move X21, X0
	022 Move X0, X19
	023 Move W2, W31
	024 Move W3, W20
	025 Move X4, X31
	026 Call StreamBuffer.Read, X0, X1, X2, X3
	027 Move [X21+28], W20
	028 Move X20, [X31+16]
	029 Move X19, [X31+24]
	030 Move X0, X21
	031 Move X30, [X31+32]
	032 Move X21, [X31+40]
	033 Return X0
	034 Call 0x1C17F20

Method: System.Byte[] ReadByteArray(ExitGames.Client.Photon.StreamBuffer stream)

Disassembly:
	0x03510924 MOV X1, X31
	0x03510928 BL 0x3517FD4
	0x0351092C ADD X8, X20, W0, SXTW
	0x03510930 MOV W22, W0
	0x03510934 MOV W23, W31
	0x03510938 MOV W21, W31
	0x0351093C STR W0, [X31 + 0xC]
	0x03510940 ADD X24, X8, 0x20
	0x03510944 CMP W23, 0x23
	0x03510948 B.EQ 0x3510990
	0x0351094C MOV X0, X19
	0x03510950 MOV X1, X31
	0x03510954 BL 0x351806C
	0x03510958 CMP W22, W0
	0x0351095C B.GE 0x35109B8
	0x03510960 CBZ X20, 0x3510BB4
	0x03510964 LDR W8, [X20 + 0x18]
	0x03510968 CMP W22, W8
	0x0351096C B.CS 0x3510BB8
	0x03510970 LDRB W8, [X24], #0x1
	0x03510974 ADD W22, W22, 0x1
	0x03510978 STR W22, [X31 + 0xC]
	0x0351097C AND W9, W8, 0x7F
	0x03510980 LSLV W9, W9, W23
	0x03510984 ORR W21, W9, W21, 0x0
	0x03510988 ADD W23, W23, 0x7
	0x0351098C TBNZ X8, 0x7, 0x3510944
	0x03510990 MOV X0, X19
	0x03510994 MOV W1, W22
	0x03510998 MOV X2, X31
	0x0351099C BL 0x3517FDC
	0x035109A0 MOV W0, W21
	0x035109A4 LDP X20, X19, [X31 + 0x30]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xED0000
	006 Move X20, 0xBE4000
	007 Move W8, [X21+2782]
	008 Move X20, [X20+1560]
	009 Move X19, X1
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xBE4000
	015 Move X0, [X0+1560]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+2782], W8
	019 Move X1, X19
	020 Call Protocol18.ReadCompressedUInt32, X0, X1
	021 Move X8, [X20]
	022 Move W20, W0
	023 Move W1, W20
	024 Move X0, X8
	025 Call 0x1C17D6C
	026 Compare X19, 0
	027 JumpIfEqual {41}
	028 Move X21, X0
	029 Move X0, X19
	030 Move X1, X21
	031 Move W2, W31
	032 Move W3, W20
	033 Move X4, X31
	034 Call StreamBuffer.Read, X0, X1, X2, X3
	035 Move X20, [X31+16]
	036 Move X19, [X31+24]
	037 Move X0, X21
	038 Move X30, [X31+32]
	039 Move X21, [X31+40]
	040 Return X0
	041 Call 0x1C17F20

Method: System.Object ReadCustomType(ExitGames.Client.Photon.StreamBuffer stream, System.Byte gpType = 0)

Disassembly:
	0x0350FE98 MOV X4, X31
	0x0350FE9C LDR W8, [X24 + 0x18]
	0x0350FEA0 CMP X29, X8
	0x0350FEA4 B.CS 0x350FF08
	0x0350FEA8 LDR W5, [X31 + 0xC]
	0x0350FEAC LDR X6, [X31 + 0x10]
	0x0350FEB0 MOV X0, X22
	0x0350FEB4 MOV X1, X21
	0x0350FEB8 MOV W2, W25
	0x0350FEBC MOV W3, W26
	0x0350FEC0 STR X4, [X19, X29, LSL #3]
	0x0350FEC4 BL 0x3511914
	0x0350FEC8 ADD X29, X29, 0x1
	0x0350FECC CMP X20, X29
	0x0350FED0 B.NE 0x350FE30
	0x0350FED4 MOV X0, X24
	0x0350FED8 LDP X20, X19, [X31 + 0x70]
	0x0350FEDC LDP X22, X21, [X31 + 0x60]
	0x0350FEE0 LDP X24, X23, [X31 + 0x50]
	0x0350FEE4 LDP X26, X25, [X31 + 0x40]
	0x0350FEE8 LDP X28, X27, [X31 + 0x30]
	0x0350FEEC LDP X29, X30, [X31 + 0x20]
	0x0350FEF0 ADD X31, X31, 0x80
	0x0350FEF4 RET
	0x0350FEF8 MOV X0, X27
	0x0350FEFC MOV X1, X28
	0x0350FF00 BL 0x1C171E0
	0x0350FF04 BL 0x1C16F20
	0x0350FF08 BL 0x1C16F28
	0x0350FF0C BL 0x1C16F44
	0x0350FF10 MOV X1, X31
	0x0350FF14 BL 0x1C16DEC
	0x0350FF18 MOV X0, X25
	0x0350FF1C MOV X1, X26
	0x0350FF20 BL 0x1C171E0
	0x0350FF24 SUB X31, X31, 0x50
	0x0350FF28 STP X30, X25, [X31 + 0x10]
	0x0350FF2C STP X24, X23, [X31 + 0x20]
	0x0350FF30 STP X22, X21, [X31 + 0x30]
	0x0350FF34 STP X20, X19, [X31 + 0x40]
	0x0350FF38 ADRP X20, 0xED0000
	0x0350FF3C LDRB W8, [X20 + 0xAE9]
	0x0350FF40 MOV X19, X1
	0x0350FF44 TBNZ X8, 0x0, 0x350FF8C
	0x0350FF48 ADRP X0, 0xBE4000
	0x0350FF4C LDR X0, [X0 + 0x618]
	0x0350FF50 BL 0x1C16CF4
	0x0350FF54 ADRP X0, 0xC25000
	0x0350FF58 LDR X0, [X0 + 0x50]
	0x0350FF5C BL 0x1C16CF4
	0x0350FF60 ADRP X0, 0xBEC000
	0x0350FF64 LDR X0, [X0 + 0xF00]
	0x0350FF68 BL 0x1C16CF4
	0x0350FF6C ADRP X0, 0xC25000
	0x0350FF70 LDR X0, [X0 + 0x320]
	0x0350FF74 BL 0x1C16CF4
	0x0350FF78 ADRP X0, 0xC25000
	0x0350FF7C LDR X0, [X0 + 0x2E8]
	0x0350FF80 BL 0x1C16CF4
	0x0350FF84 MOVZ W8, 0x1
	0x0350FF88 STRB W8, [X20 + 0xAE9]
	0x0350FF8C MOV X1, X19
	0x0350FF90 STP X31, X31, [X31]
	0x0350FF94 BL 0x35108F4
	0x0350FF98 CBZ X19, 0x3510274
	0x0350FF9C ADRP X21, 0xBEC000
	0x0350FFA0 LDR X21, [X21 + 0xF00]
	0x0350FFA4 MOV W20, W0
	0x0350FFA8 MOV X0, X19
	0x0350FFAC MOV X1, X31
	0x0350FFB0 BL 0x351EF00
	0x0350FFB4 LDR X8, [X21]
	0x0350FFB8 MOV W22, W0
	0x0350FFBC LDR W9, [X8 + 0xE0]
	0x0350FFC0 CBNZ W9, 0x350FFD0
	0x0350FFC4 MOV X0, X8
	0x0350FFC8 BL 0x1C16DFC
	0x0350FFCC LDR X8, [X21]
	0x0350FFD0 LDR X8, [X8 + 0xB8]
	0x0350FFD4 LDR X0, [X8 + 0x8]
	0x0350FFD8 CBZ X0, 0x3510274
	0x0350FFDC ADRP X8, 0xC25000
	0x0350FFE0 LDR X8, [X8 + 0x50]
	0x0350FFE4 ADD X2, X31, 0x8
	0x0350FFE8 MOV W1, W22
	0x0350FFEC LDR X3, [X8]
	0x0350FFF0 BL 0x29D4F58
	0x0350FFF4 TBZ X0, 0x0, 0x3510188
	0x0350FFF8 LDR X8, [X31 + 0x8]
	0x0350FFFC CBZ X8, 0x3510274
	0x03510000 LDR X0, [X8 + 0x18]
	0x03510004 MOV W1, W20
	0x03510008 MOV X2, X31
	0x0351000C BL 0x33A2DF8
	0x03510010 MOV X21, X0
	0x03510014 CBZ W20, 0x3510258
	0x03510018 ADRP X25, 0xBE3000
	0x0351001C LDR X25, [X25 + 0x618]
	0x03510020 MOV W22, W31
	0x03510024 MOV X1, X19
	0x03510028 BL 0x35108F4
	0x0351002C STR W0, [X31 + 0x4]
	0x03510030 TBNZ X0, 0x1F, 0x3510278
	0x03510034 MOV W23, W0
	0x03510038 MOV X0, X19
	0x0351003C MOV X1, X31
	0x03510040 BL 0x351EDB0
	0x03510044 CMP W23, W0
	0x03510048 B.GT 0x35102CC
	0x0351004C LDR W1, [X31 + 0x4]
	0x03510050 CMP W1, 0x8000
	0x03510054 B.GE 0x35102CC
	0x03510058 LDR X8, [X31 + 0x8]
	0x0351005C CBZ X8, 0x3510274
	0x03510060 LDR X8, [X8 + 0x38]
	0x03510064 CBZ X8, 0x35100D8
	0x03510068 MOV X0, X19
	0x0351006C MOV X1, X31
	0x03510070 BL 0x3517FD4
	0x03510074 LDR X8, [X31 + 0x8]
	0x03510078 CBZ X8, 0x3510274
	0x0351007C LDR X8, [X8 + 0x38]
	0x03510080 CBZ X8, 0x3510274
	0x03510084 MOV W24, W0
	0x03510088 LDR W2, [X31 + 0x4]
	0x0351008C LDR X9, [X8 + 0x18]
	0x03510090 LDR X0, [X8 + 0x40]
	0x03510094 LDR X3, [X8 + 0x28]
	0x03510098 MOV X1, X19
	0x0351009C BLR X9
	0x035100A0 MOV X23, X0
	0x035100A4 MOV X0, X19
	0x035100A8 MOV X1, X31
	0x035100AC BL 0x3517FD4
	0x035100B0 LDR W8, [X31 + 0x4]
	0x035100B4 SUB W9, W0, W24
	0x035100B8 CMP W9, W8
	0x035100BC B.EQ 0x35100D0
	0x035100C0 ADD W1, W8, W24
	0x035100C4 MOV X0, X19
	0x035100C8 MOV X2, X31
	0x035100CC BL 0x3517FDC
	0x035100D0 CBNZ X23, 0x3510128
	0x035100D4 B 0x3510178
	0x035100D8 LDR X0, [X25]
	0x035100DC BL 0x1C16D6C
	0x035100E0 LDR W3, [X31 + 0x4]
	0x035100E4 MOV X23, X0
	0x035100E8 MOV X0, X19
	0x035100EC MOV X1, X23
	0x035100F0 MOV W2, W31
	0x035100F4 MOV X4, X31
	0x035100F8 BL 0x351EE98
	0x035100FC LDR X8, [X31 + 0x8]
	0x03510100 CBZ X8, 0x3510274
	0x03510104 LDR X8, [X8 + 0x28]
	0x03510108 CBZ X8, 0x3510274
	0x0351010C LDR X9, [X8 + 0x18]
	0x03510110 LDR X0, [X8 + 0x40]
	0x03510114 LDR X2, [X8 + 0x28]
	0x03510118 MOV X1, X23
	0x0351011C BLR X9
	0x03510120 MOV X23, X0
	0x03510124 CBZ X23, 0x3510178
	0x03510128 LDR X8, [X31 + 0x8]
	0x0351012C CBZ X8, 0x3510274
	0x03510130 LDR X24, [X8 + 0x18]
	0x03510134 MOV X0, X23
	0x03510138 MOV X1, X31
	0x0351013C BL 0x33BE520
	0x03510140 CBZ X24, 0x3510274
	0x03510144 LDR X8, [X24]
	0x03510148 MOV X1, X0
	0x0351014C MOV X0, X24
	0x03510150 LDR X9, [X8 + 0x2A8]
	0x03510154 LDR X2, [X8 + 0x2B0]
	0x03510158 BLR X9
	0x0351015C TBZ X0, 0x0, 0x3510178
	0x03510160 CBZ X21, 0x3510274
	0x03510164 MOV X0, X21
	0x03510168 MOV X1, X23
	0x0351016C MOV W2, W22
	0x03510170 MOV X3, X31
	0x03510174 BL 0x339F798
	0x03510178 ADD W22, W22, 0x1
	0x0351017C CMP W20, W22
	0x03510180 B.NE 0x3510024
	0x03510184 B 0x3510258
	0x03510188 MOV X0, X19
	0x0351018C MOV X1, X31
	0x03510190 BL 0x3517FD4
	0x03510194 MOV W23, W0
	0x03510198 CBZ W20, 0x35101E0
	0x0351019C MOV X1, X19
	0x035101A0 BL 0x35108F4
	0x035101A4 MOV W21, W0
	0x035101A8 MOV X0, X19
	0x035101AC MOV X1, X31
	0x035101B0 BL 0x351EDB0

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+32], X30
	003 Move [X31+40], X23
	004 Move [X31+48], X22
	005 Move [X31+56], X21
	006 Move [X31+64], X20
	007 Move [X31+72], X19
	008 Move X21, 0xED1000
	009 Move W8, [X21+2783]
	010 Move W20, W2
	011 Move X19, X1
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {30}
	016 Move X0, 0xBE5000
	017 Move X0, [X0+1560]
	018 Call 0x1C17CF4
	019 Move X0, 0xC26000
	020 Move X0, [X0+80]
	021 Call 0x1C17CF4
	022 Move X0, 0xBED000
	023 Move X0, [X0+3840]
	024 Call 0x1C17CF4
	025 Move X0, 0xC26000
	026 Move X0, [X0+744]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X21+2783], W8
	030 And W31, W20, 255
	031 Move [X31+16], X31
	032 Move [X31+12], W31
	033 Xor W20, W20, 0xFFFFFF80
	034 Compare X19, 0
	035 JumpIfEqual {175}
	036 Move X0, X19
	037 Move X1, X31
	038 Call StreamBuffer.ReadByte, X0
	039 Move W20, W0
	040 Move X1, X19
	041 Call Protocol18.ReadCompressedUInt32, X0, X1
	042 Move [X31+28], W0
	043 Move TEMP, X0
	044 And TEMP, TEMP, -2147483648
	045 Compare TEMP, -2147483648
	046 JumpIfEqual {176}
	047 Compare X19, 0
	048 JumpIfEqual {175}
	049 Move W22, W0
	050 Move X0, X19
	051 Move X1, X31
	052 Call StreamBuffer.get_Available, X0
	053 Move W23, W0
	054 NotImplemented "Instruction CMP not yet implemented."
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Move X21, 0xBED000
	057 Move X21, [X21+3840]
	058 Move X0, [X21]
	059 Move W8, [X0+224]
	060 Compare W8, 0
	061 JumpIfNotEqual {64}
	062 Call 0x1C17DFC
	063 Move X0, [X21]
	064 Move X8, [X0+184]
	065 Move X0, [X8+8]
	066 Compare X0, 0
	067 JumpIfEqual {175}
	068 Move X8, 0xC26000
	069 Move X8, [X8+80]
	070 Add X2, X31, 16
	071 Move W1, W20
	072 Move X3, [X8]
	073 Call Dictionary`2<Byte, Object>.TryGetValue, X0, X1, X2
	074 Move TEMP, X0
	075 And TEMP, TEMP, 1
	076 Compare TEMP, 1
	077 JumpIfNotEqual {111}
	078 Move X8, [X31+16]
	079 Compare X8, 0
	080 JumpIfEqual {175}
	081 Move X8, [X8+56]
	082 Compare X8, 0
	083 JumpIfEqual {151}
	084 Move X0, X19
	085 Move X1, X31
	086 Call StreamBuffer.get_Position, X0
	087 Move X8, [X31+16]
	088 Compare X8, 0
	089 JumpIfEqual {175}
	090 Move X8, [X8+56]
	091 Compare X8, 0
	092 JumpIfEqual {175}
	093 Move W20, W0
	094 Move W2, [X31+28]
	095 Move X9, [X8+24]
	096 Move X0, [X8+64]
	097 Move X3, [X8+40]
	098 Move X1, X19
	099 NotImplemented "Instruction BLR not yet implemented."
	100 Move X21, X0
	101 Move X0, X19
	102 Move X1, X31
	103 Call StreamBuffer.get_Position, X0
	104 Move W8, [X31+28]
	105 Subtract W9, W0, W20
	106 NotImplemented "Instruction CMP not yet implemented."
	107 Add W1, W8, W20
	108 Move X0, X19
	109 Move X2, X31
	110 Call StreamBuffer.set_Position, X0, X1
	111 Move X8, 0xC25000
	112 Move X8, [X8+744]
	113 Move X0, [X8]
	114 Call 0x1C17F10
	115 Move X1, X31
	116 Move X21, X0
	117 Call UnknownType..ctor, X0
	118 Compare X21, 0
	119 JumpIfEqual {175}
	120 Move [X21+16], W20
	121 Move W20, [X31+28]
	122 NotImplemented "Instruction CMP not yet implemented."
	123 Move [X21+20], W20
	124 Move X0, X19
	125 Move X1, X31
	126 Call StreamBuffer.get_Available, X0
	127 Move W20, W0
	128 NotImplemented "Instruction CMP not yet implemented."
	129 Move X8, 0xBE4000
	130 Move X8, [X8+1560]
	131 Move W1, W20
	132 Move X0, [X8]
	133 Call 0x1C17D6C
	134 Move X22, X0
	135 Move X0, X19
	136 Move X1, X22
	137 Move W2, W31
	138 Move W3, W20
	139 Move X4, X31
	140 Call StreamBuffer.Read, X0, X1, X2, X3
	141 Move [X21+24], X22
	142 Move X0, X21
	143 Move X20, [X31+64]
	144 Move X19, [X31+72]
	145 Move X22, [X31+48]
	146 Move X21, [X31+56]
	147 Move X30, [X31+32]
	148 Move X23, [X31+40]
	149 Add X31, X31, 80
	150 Return X0
	151 Move X8, 0xBE4000
	152 Move W1, [X31+28]
	153 Move X8, [X8+1560]
	154 Move X0, [X8]
	155 Call 0x1C17D6C
	156 Move W3, [X31+28]
	157 Move X20, X0
	158 Move X0, X19
	159 Move X1, X20
	160 Move W2, W31
	161 Move X4, X31
	162 Call StreamBuffer.Read, X0, X1, X2, X3
	163 Move X8, [X31+16]
	164 Compare X8, 0
	165 JumpIfEqual {175}
	166 Move X8, [X8+40]
	167 Compare X8, 0
	168 JumpIfEqual {175}
	169 Move X9, [X8+24]
	170 Move X0, [X8+64]
	171 Move X2, [X8+40]
	172 Move X1, X20
	173 NotImplemented "Instruction BLR not yet implemented."
	174 Move X21, X0
	175 Call 0x1C17F20
	176 Add X0, X31, 28
	177 Move X1, X31
	178 Call Int32.ToString, X0
	179 Move X20, X0
	180 Move X0, X19
	181 Call 0x19913C0
	182 Move X0, X19
	183 Move X1, X31
	184 Call StreamBuffer.get_Position, X0
	185 Move [X31+12], W0
	186 Add X0, X31, 12
	187 Move X1, X31
	188 Call Int32.ToString, X0
	189 Move X19, X0
	190 Move X0, 0xC25000
	191 Move X0, [X0+752]
	192 Call 0x1C17D08
	193 Move X21, X0
	194 Move X0, 0xC25000
	195 Move X0, [X0+96]
	196 Call 0x1C17D08
	197 Move X2, X0
	198 Move X0, X21
	199 Move X1, X20
	200 Move X3, X19
	201 Move X4, X31
	202 Call String.Concat, X0, X1, X2, X3
	203 Move X19, X0
	204 Move X0, 0xC25000
	205 Move X0, [X0+104]
	206 Call 0x1C17D08
	207 Call 0x1C17F10
	208 Move X1, X19
	209 Move X20, X0
	210 Call InvalidDataException..ctor, X0, X1
	211 Move X0, 0xC25000
	212 Move X0, [X0+760]
	213 Call 0x1C17D08
	214 Move X1, X0
	215 Move X0, X20
	216 Call 0x1C17DEC

Method: ExitGames.Client.Photon.EventData DeserializeEventData(ExitGames.Client.Photon.StreamBuffer din, ExitGames.Client.Photon.EventData target = null, ExitGames.Client.Photon.IProtocol/DeserializationFlags flags = 0)

Disassembly:
	0x03511BBC LDR W8, [X23 + 0x18]
	0x03511BC0 CMP X25, X8
	0x03511BC4 B.CS 0x3511C64
	0x03511BC8 STR X31, [X27]
	0x03511BCC ADRP X8, 0xC23000
	0x03511BD0 LDR X8, [X8 + 0x378]
	0x03511BD4 MOV X1, X31
	0x03511BD8 LDR X0, [X8]
	0x03511BDC ADD X8, X23, X25, 0x3, LSL
	0x03511BE0 ADD X24, X8, 0x20
	0x03511BE4 BL 0x364871C
	0x03511BE8 LDR W8, [X23 + 0x18]
	0x03511BEC B 0x3511C18
	0x03511BF0 LDR X9, [X9 + 0xC8]
	0x03511BF4 ADD X9, X9, X10, 0x3, LSL
	0x03511BF8 LDUR X9, [X9 - 0x8]
	0x03511BFC CMP X9, X8
	0x03511C00 CSEL X9, X24, X31, EQ
	0x03511C04 LDR W8, [X23 + 0x18]
	0x03511C08 CMP X25, X8
	0x03511C0C B.CS 0x3511C64
	0x03511C10 STR X9, [X27]
	0x03511C14 MOV X24, X27
	0x03511C18 CMP X25, X8
	0x03511C1C B.CS 0x3511C64
	0x03511C20 LDR X8, [X24]
	0x03511C24 CBNZ X8, 0x3511C34
	0x03511C28 LDR X0, [X28]
	0x03511C2C MOV X1, X31
	0x03511C30 BL 0x364871C
	0x03511C34 ADD X25, X25, 0x1
	0x03511C38 CMP X29, X25
	0x03511C3C ADD X27, X27, 0x8
	0x03511C40 B.NE 0x3511B3C
	0x03511C44 MOV X0, X23
	0x03511C48 LDP X20, X19, [X31 + 0x50]
	0x03511C4C LDP X22, X21, [X31 + 0x40]
	0x03511C50 LDP X24, X23, [X31 + 0x30]
	0x03511C54 LDP X26, X25, [X31 + 0x20]
	0x03511C58 LDP X28, X27, [X31 + 0x10]
	0x03511C5C LDP X29, X30, [X31], #0x60
	0x03511C60 RET
	0x03511C64 BL 0x1C16F28
	0x03511C68 BL 0x1C16F20
	0x03511C6C BL 0x1C16F44
	0x03511C70 MOV X1, X31
	0x03511C74 BL 0x1C16DEC
	0x03511C78 AND W8, W1, 0x1
	0x03511C7C SUB W8, W31, W8
	0x03511C80 EOR W0, W8, W1, 0x1
	0x03511C84 RET
	0x03511C88 STP X30, X21, [X31 - 0x20]!
	0x03511C8C STP X20, X19, [X31 + 0x10]
	0x03511C90 CBZ X1, 0x3511D24
	0x03511C94 MOV X19, X1
	0x03511C98 MOV X0, X1
	0x03511C9C MOV X1, X31
	0x03511CA0 BL 0x3517FCC
	0x03511CA4 MOV X21, X0
	0x03511CA8 MOV X0, X19
	0x03511CAC MOV X1, X31
	0x03511CB0 BL 0x3517FD4
	0x03511CB4 MOV W1, W0
	0x03511CB8 MOV W8, W31
	0x03511CBC MOV X20, X31
	0x03511CC0 ADD W9, W0, 0xA
	0x03511CC4 CMP W8, 0x46
	0x03511CC8 B.EQ 0x3511D04
	0x03511CCC CBZ X21, 0x3511D24
	0x03511CD0 LDR W10, [X21 + 0x18]
	0x03511CD4 CMP W1, W10
	0x03511CD8 B.GE 0x3511D28
	0x03511CDC B.CS 0x3511D70
	0x03511CE0 ADD X10, X21, W1, SXTW
	0x03511CE4 LDRB W10, [X10 + 0x20]
	0x03511CE8 ADD W1, W1, 0x1
	0x03511CEC AND X11, X10, 0x7F
	0x03511CF0 LSLV X11, X11, X8
	0x03511CF4 ORR X20, X11, X20, 0x0
	0x03511CF8 ADD W8, W8, 0x7
	0x03511CFC TBNZ X10, 0x7, 0x3511CC4
	0x03511D00 B 0x3511D08
	0x03511D04 MOV W1, W9
	0x03511D08 MOV X0, X19
	0x03511D0C MOV X2, X31
	0x03511D10 BL 0x3517FDC
	0x03511D14 MOV X0, X20
	0x03511D18 LDP X20, X19, [X31 + 0x10]
	0x03511D1C LDP X30, X21, [X31], #0x20
	0x03511D20 RET
	0x03511D24 BL 0x1C16F20
	0x03511D28 ADRP X0, 0xC14000
	0x03511D2C LDR X0, [X0 + 0x3D8]
	0x03511D30 BL 0x1C16D08
	0x03511D34 BL 0x1C16F10
	0x03511D38 MOV X19, X0
	0x03511D3C ADRP X0, 0xC23000
	0x03511D40 LDR X0, [X0 + 0x388]
	0x03511D44 BL 0x1C16D08
	0x03511D48 MOV X1, X0
	0x03511D4C MOV X0, X19
	0x03511D50 MOV X2, X31
	0x03511D54 BL 0x32E1770
	0x03511D58 ADRP X0, 0xC23000
	0x03511D5C LDR X0, [X0 + 0x390]
	0x03511D60 BL 0x1C16D08
	0x03511D64 MOV X1, X0
	0x03511D68 MOV X0, X19
	0x03511D6C BL 0x1C16DEC
	0x03511D70 BL 0x1C16F28
	0x03511D74 AND X8, X1, 0x1
	0x03511D78 SUB X8, X31, X8
	0x03511D7C EOR X0, X8, X1, 0x1
	0x03511D80 RET
	0x03511D84 STR X30, [X31 - 0x40]!
	0x03511D88 STP X24, X23, [X31 + 0x10]
	0x03511D8C STP X22, X21, [X31 + 0x20]
	0x03511D90 STP X20, X19, [X31 + 0x30]
	0x03511D94 ADRP X24, 0xECE000

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X23, 0xECF000
	010 Move W8, [X23+2784]
	011 Move W19, W3
	012 Move X22, X2
	013 Move X20, X1
	014 Move X21, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {24}
	019 Move X0, 0xC24000
	020 Move X0, [X0+296]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X23+2784], W8
	024 Compare X22, 0
	025 JumpIfEqual {30}
	026 Move X0, X22
	027 Call EventData.Reset, X0
	028 Compare X20, 0
	029 JumpIfNotEqual {38}
	030 Move X8, 0xC24000
	031 Move X8, [X8+296]
	032 Move X0, [X8]
	033 Call 0x1C17F10
	034 Move X22, X0
	035 Call EventData..ctor, X0
	036 Compare X20, 0
	037 JumpIfEqual {123}
	038 Move X0, X20
	039 Move X1, X31
	040 Call StreamBuffer.ReadByte, X0
	041 Compare X22, 0
	042 JumpIfEqual {123}
	043 Move [X22+16], W0
	044 Move X0, X20
	045 Move X1, X31
	046 Call StreamBuffer.ReadByte, X0
	047 And W24, W0, 255
	048 Move X25, -43491328
	049 Add X25, X25, 3199
	050 Move X0, X20
	051 Move X1, X31
	052 Call StreamBuffer.ReadByte, X0
	053 Move W23, W0
	054 Move X0, X20
	055 Move X1, X31
	056 Call StreamBuffer.ReadByte, X0
	057 Move W2, W0
	058 Move TEMP, X19
	059 And TEMP, TEMP, 1
	060 Compare TEMP, 1
	061 JumpIfEqual {67}
	062 Move X4, [X22+24]
	063 Move X0, X21
	064 Move X1, X20
	065 Move W3, W19
	066 Call Protocol18.Read, X0, X1, X2, X3, X4
	067 And W8, W2, 255
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Move X0, X21
	070 Move X1, X20
	071 Call Protocol18.ReadNonAllocByteArray, X0, X1
	072 Move X2, X0
	073 Move X0, [X22+24]
	074 Compare X0, 0
	075 JumpIfEqual {123}
	076 Move W1, W23
	077 Move X3, X31
	078 Call ParameterDictionary.Add, X0, X1, X2
	079 Subtract W24, W24, 1
	080 Move W8, [X22+32]
	081 NotImplemented "Instruction CMP not yet implemented."
	082 And W9, W2, 255
	083 Subtract W8, W9, 9
	084 NotImplemented "Instruction CMP not yet implemented."
	085 NotImplemented "Instruction ADR not yet implemented."
	086 Move W10, [X25]
	087 Add X9, X9, X10
	088 CallNoReturn X9
	089 Move X1, X20
	090 Call Protocol18.ReadCompressedUInt32, X0, X1
	091 And W8, W0, 1
	092 Subtract W8, W31, W8
	093 Xor W8, W8, W0
	094 NotImplemented "Instruction CMP not yet implemented."
	095 Move [X22+36], W31
	096 Move X0, X20
	097 Move X1, X31
	098 Call StreamBuffer.ReadByte, X0
	099 And W8, W0, 255
	100 Move X0, X20
	101 Move X1, X31
	102 Call StreamBuffer.ReadByte, X0
	103 Move W8, W31
	104 Subtract W8, W8, W0
	105 Move X1, X20
	106 Call Protocol18.ReadUShort, X0, X1
	107 And W8, W0, 0xFFFF
	108 Move X1, X20
	109 Call Protocol18.ReadUShort, X0, X1
	110 Move W8, W31
	111 Subtract W8, W8, W0
	112 Move [X22+36], W8
	113 Move X0, X22
	114 Move X20, [X31+48]
	115 Move X19, [X31+56]
	116 Move X22, [X31+32]
	117 Move X21, [X31+40]
	118 Move X24, [X31+16]
	119 Move X23, [X31+24]
	120 Move X30, [X31+64]
	121 Move X25, [X31+72]
	122 Return X0
	123 Call 0x1C17F20

Method: System.Collections.Generic.Dictionary`2<System.Byte, System.Object> ReadParameterTable(ExitGames.Client.Photon.StreamBuffer stream, System.Collections.Generic.Dictionary`2<System.Byte, System.Object> target = null, ExitGames.Client.Photon.IProtocol/DeserializationFlags flags = 0)

Disassembly:
	0x03511D98 LDRB W8, [X24 + 0xAFB]
	0x03511D9C MOV W20, W4
	0x03511DA0 MOV W23, W3
	0x03511DA4 MOV X22, X2
	0x03511DA8 MOV X19, X1
	0x03511DAC MOV X21, X0
	0x03511DB0 TBNZ X8, 0x0, 0x3511F3C
	0x03511DB4 ADRP X0, 0xC0A000
	0x03511DB8 LDR X0, [X0 + 0x5B0]
	0x03511DBC BL 0x1C16CF4
	0x03511DC0 ADRP X0, 0xBE4000
	0x03511DC4 LDR X0, [X0 + 0x9B8]
	0x03511DC8 BL 0x1C16CF4
	0x03511DCC ADRP X0, 0xBE2000
	0x03511DD0 LDR X0, [X0 + 0xB58]
	0x03511DD4 BL 0x1C16CF4
	0x03511DD8 ADRP X0, 0xBEA000
	0x03511DDC LDR X0, [X0 + 0xC98]
	0x03511DE0 BL 0x1C16CF4
	0x03511DE4 ADRP X0, 0xBE2000
	0x03511DE8 LDR X0, [X0 + 0x618]
	0x03511DEC BL 0x1C16CF4
	0x03511DF0 ADRP X0, 0xBE3000
	0x03511DF4 LDR X0, [X0 + 0x9D8]
	0x03511DF8 BL 0x1C16CF4
	0x03511DFC ADRP X0, 0xC13000
	0x03511E00 LDR X0, [X0 + 0x830]
	0x03511E04 BL 0x1C16CF4
	0x03511E08 ADRP X0, 0xBE5000
	0x03511E0C LDR X0, [X0 + 0x978]
	0x03511E10 BL 0x1C16CF4
	0x03511E14 ADRP X0, 0xC23000
	0x03511E18 LDR X0, [X0 + 0x128]
	0x03511E1C BL 0x1C16CF4
	0x03511E20 ADRP X0, 0xBEA000
	0x03511E24 LDR X0, [X0 + 0xDA0]
	0x03511E28 BL 0x1C16CF4
	0x03511E2C ADRP X0, 0xC23000
	0x03511E30 LDR X0, [X0 + 0x318]
	0x03511E34 BL 0x1C16CF4
	0x03511E38 ADRP X0, 0xBE2000
	0x03511E3C LDR X0, [X0 + 0x818]
	0x03511E40 BL 0x1C16CF4
	0x03511E44 ADRP X0, 0xBE9000
	0x03511E48 LDR X0, [X0 + 0x2F8]
	0x03511E4C BL 0x1C16CF4
	0x03511E50 ADRP X0, 0xC0A000
	0x03511E54 LDR X0, [X0 + 0x820]
	0x03511E58 BL 0x1C16CF4
	0x03511E5C ADRP X0, 0xBE6000
	0x03511E60 LDR X0, [X0 + 0x628]
	0x03511E64 BL 0x1C16CF4
	0x03511E68 ADRP X0, 0xBE3000
	0x03511E6C LDR X0, [X0 + 0xE58]
	0x03511E70 BL 0x1C16CF4
	0x03511E74 ADRP X0, 0xBE2000
	0x03511E78 LDR X0, [X0 + 0x758]
	0x03511E7C BL 0x1C16CF4
	0x03511E80 ADRP X0, 0xC13000
	0x03511E84 LDR X0, [X0 + 0x838]
	0x03511E88 BL 0x1C16CF4
	0x03511E8C ADRP X0, 0xBE4000
	0x03511E90 LDR X0, [X0 + 0xA60]
	0x03511E94 BL 0x1C16CF4
	0x03511E98 ADRP X0, 0xC23000
	0x03511E9C LDR X0, [X0 + 0x110]
	0x03511EA0 BL 0x1C16CF4
	0x03511EA4 ADRP X0, 0xC23000
	0x03511EA8 LDR X0, [X0 + 0x120]
	0x03511EAC BL 0x1C16CF4
	0x03511EB0 ADRP X0, 0xBE2000
	0x03511EB4 LDR X0, [X0 + 0x638]
	0x03511EB8 BL 0x1C16CF4
	0x03511EBC ADRP X0, 0xBE2000
	0x03511EC0 LDR X0, [X0 + 0xA90]
	0x03511EC4 BL 0x1C16CF4
	0x03511EC8 ADRP X0, 0xBE4000
	0x03511ECC LDR X0, [X0 + 0x278]
	0x03511ED0 BL 0x1C16CF4
	0x03511ED4 ADRP X0, 0xC23000
	0x03511ED8 LDR X0, [X0 + 0x130]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X23, 0xECF000
	010 Move W8, [X23+2785]
	011 Move W19, W3
	012 Move X22, X2
	013 Move X20, X1
	014 Move X21, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {30}
	019 Move X0, 0xBEC000
	020 Move X0, [X0+1552]
	021 Call 0x1C17CF4
	022 Move X0, 0xBEC000
	023 Move X0, [X0+1560]
	024 Call 0x1C17CF4
	025 Move X0, 0xBEC000
	026 Move X0, [X0+696]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X23+2785], W8
	030 Compare X20, 0
	031 JumpIfEqual {93}
	032 Move X0, X20
	033 Move X1, X31
	034 Call StreamBuffer.ReadByte, X0
	035 Move W24, W0
	036 Compare X22, 0
	037 JumpIfEqual {39}
	038 And W23, W24, 255
	039 Move X8, 0xBEC000
	040 Move X8, [X8+696]
	041 Move X0, [X8]
	042 Call 0x1C17F10
	043 Move X8, 0xBEC000
	044 Move X8, [X8+1552]
	045 And W23, W24, 255
	046 Move W1, W23
	047 Move X22, X0
	048 Move X2, [X8]
	049 Call Dictionary`2<Byte, Object>..ctor, X0, X1
	050 And W31, W24, 255
	051 Move X25, 0xBEC000
	052 Move X25, [X25+1560]
	053 Move X0, X20
	054 Move X1, X31
	055 Call StreamBuffer.ReadByte, X0
	056 Move W24, W0
	057 Move X0, X20
	058 Move X1, X31
	059 Call StreamBuffer.ReadByte, X0
	060 Move W2, W0
	061 Move TEMP, X19
	062 And TEMP, TEMP, 1
	063 Compare TEMP, 1
	064 JumpIfNotEqual {70}
	065 And W8, W2, 255
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Move X0, X21
	068 Move X1, X20
	069 Call Protocol18.ReadNonAllocByteArray, X0, X1
	070 Move X0, X21
	071 Move X1, X20
	072 Move W3, W19
	073 Move X4, X31
	074 Call Protocol18.Read, X0, X1, X2, X3, X4
	075 Move X2, X0
	076 Compare X22, 0
	077 JumpIfEqual {93}
	078 Move X3, [X25]
	079 Move X0, X22
	080 Move W1, W24
	081 Call Dictionary`2<Byte, Object>.set_Item, X0, X1, X2
	082 Subtract W23, W23, 1
	083 Move X0, X22
	084 Move X20, [X31+48]
	085 Move X19, [X31+56]
	086 Move X22, [X31+32]
	087 Move X21, [X31+40]
	088 Move X24, [X31+16]
	089 Move X23, [X31+24]
	090 Move X30, [X31+64]
	091 Move X25, [X31+72]
	092 Return X0
	093 Call 0x1C17F20

Method: ExitGames.Client.Photon.ParameterDictionary ReadParameterDictionary(ExitGames.Client.Photon.StreamBuffer stream, ExitGames.Client.Photon.ParameterDictionary target = null, ExitGames.Client.Photon.IProtocol/DeserializationFlags flags = 0)

Disassembly:
	0x03511EDC BL 0x1C16CF4
	0x03511EE0 ADRP X0, 0xC23000
	0x03511EE4 LDR X0, [X0 + 0x138]
	0x03511EE8 BL 0x1C16CF4
	0x03511EEC ADRP X0, 0xC23000
	0x03511EF0 LDR X0, [X0 + 0x140]
	0x03511EF4 BL 0x1C16CF4
	0x03511EF8 ADRP X0, 0xC23000
	0x03511EFC LDR X0, [X0 + 0x148]
	0x03511F00 BL 0x1C16CF4
	0x03511F04 ADRP X0, 0xC23000
	0x03511F08 LDR X0, [X0 + 0x150]
	0x03511F0C BL 0x1C16CF4
	0x03511F10 ADRP X0, 0xC23000
	0x03511F14 LDR X0, [X0 + 0x158]
	0x03511F18 BL 0x1C16CF4
	0x03511F1C ADRP X0, 0xC23000
	0x03511F20 LDR X0, [X0 + 0x160]
	0x03511F24 BL 0x1C16CF4
	0x03511F28 ADRP X0, 0xC0B000
	0x03511F2C LDR X0, [X0 + 0x6F8]
	0x03511F30 BL 0x1C16CF4
	0x03511F34 MOVZ W8, 0x1
	0x03511F38 STRB W8, [X24 + 0xAFB]
	0x03511F3C AND W8, W23, 0xFF
	0x03511F40 CMP W8, 0x1A
	0x03511F44 B.HI 0x3512000
	0x03511F48 ADRP X9, 0xFFFFFFFFFD685000
	0x03511F4C AND X8, X23, 0xFF
	0x03511F50 ADD X9, X9, 0xC86
	0x03511F54 ADR X10, 0x10
	0x03511F58 LDRH W11, [X9, X8, LSL #1]
	0x03511F5C ADD X10, X10, X11, 0x2, LSL
	0x03511F60 BR X10
	0x03511F64 CBZ X22, 0x3511FDC
	0x03511F68 ADRP X9, 0xBEA000
	0x03511F6C LDR X9, [X9 + 0xC98]
	0x03511F70 LDR X8, [X22]
	0x03511F74 LDR X10, [X9]
	0x03511F78 LDRB W9, [X8 + 0x130]
	0x03511F7C LDRB W11, [X10 + 0x130]
	0x03511F80 CMP W9, W11
	0x03511F84 B.CC 0x3511F9C
	0x03511F88 LDR X12, [X8 + 0xC8]
	0x03511F8C ADD X11, X12, X11, 0x3, LSL
	0x03511F90 LDUR X11, [X11 - 0x8]
	0x03511F94 CMP X11, X10
	0x03511F98 B.EQ 0x35127F4
	0x03511F9C ADRP X10, 0xC0A000
	0x03511FA0 LDR X10, [X10 + 0x5B0]
	0x03511FA4 LDR X10, [X10]
	0x03511FA8 CMP X8, X10
	0x03511FAC B.EQ 0x35127C8
	0x03511FB0 ADRP X10, 0xC0B000
	0x03511FB4 LDR X10, [X10 + 0x6F8]
	0x03511FB8 LDR X10, [X10]
	0x03511FBC LDRB W11, [X10 + 0x130]
	0x03511FC0 CMP W9, W11
	0x03511FC4 B.CC 0x3511FDC
	0x03511FC8 LDR X8, [X8 + 0xC8]
	0x03511FCC ADD X8, X8, X11, 0x3, LSL
	0x03511FD0 LDUR X8, [X8 - 0x8]
	0x03511FD4 CMP X8, X10
	0x03511FD8 B.EQ 0x3512818
	0x03511FDC AND W3, W20, 0x1
	0x03511FE0 MOV X0, X21
	0x03511FE4 MOV X1, X19
	0x03511FE8 MOV X2, X22
	0x03511FEC LDP X20, X19, [X31 + 0x30]
	0x03511FF0 LDP X22, X21, [X31 + 0x20]
	0x03511FF4 LDP X24, X23, [X31 + 0x10]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0xECF000
	009 Move W8, [X23+2786]
	010 Move W19, W3
	011 Move X22, X2
	012 Move X20, X1
	013 Move X21, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0xBEC000
	019 Move X0, [X0+1784]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X23+2786], W8
	023 Compare X20, 0
	024 JumpIfEqual {81}
	025 Move X0, X20
	026 Move X1, X31
	027 Call StreamBuffer.ReadByte, X0
	028 Move W24, W0
	029 Compare X22, 0
	030 JumpIfEqual {32}
	031 And W23, W24, 255
	032 Move X8, 0xBEC000
	033 Move X8, [X8+1784]
	034 Move X0, [X8]
	035 Call 0x1C17F10
	036 And W23, W24, 255
	037 Move W1, W23
	038 Move X2, X31
	039 Move X22, X0
	040 Call ParameterDictionary..ctor, X0, X1
	041 And W31, W24, 255
	042 Move X0, X20
	043 Move X1, X31
	044 Call StreamBuffer.ReadByte, X0
	045 Move W24, W0
	046 Move X0, X20
	047 Move X1, X31
	048 Call StreamBuffer.ReadByte, X0
	049 Move W2, W0
	050 Move TEMP, X19
	051 And TEMP, TEMP, 1
	052 Compare TEMP, 1
	053 JumpIfNotEqual {59}
	054 And W8, W2, 255
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Move X0, X21
	057 Move X1, X20
	058 Call Protocol18.ReadNonAllocByteArray, X0, X1
	059 Move X0, X21
	060 Move X1, X20
	061 Move W3, W19
	062 Move X4, X22
	063 Call Protocol18.Read, X0, X1, X2, X3, X4
	064 Move X2, X0
	065 Compare X22, 0
	066 JumpIfEqual {81}
	067 Move X0, X22
	068 Move W1, W24
	069 Move X3, X31
	070 Call ParameterDictionary.Add, X0, X1, X2
	071 Subtract W23, W23, 1
	072 Move X0, X22
	073 Move X20, [X31+48]
	074 Move X19, [X31+56]
	075 Move X22, [X31+32]
	076 Move X21, [X31+40]
	077 Move X24, [X31+16]
	078 Move X23, [X31+24]
	079 Move X30, [X31+64]
	080 Return X0
	081 Call 0x1C17F20

Method: ExitGames.Client.Photon.Hashtable ReadHashtable(ExitGames.Client.Photon.StreamBuffer stream, ExitGames.Client.Photon.IProtocol/DeserializationFlags flags, ExitGames.Client.Photon.ParameterDictionary parameters)

Disassembly:
	0x03510380 MOV X20, X0
	0x03510384 BL 0x35077D4
	0x03510388 ADRP X0, 0xC24000
	0x0351038C LDR X0, [X0 + 0x340]
	0x03510390 BL 0x1C16D08
	0x03510394 MOV X1, X0
	0x03510398 MOV X0, X20
	0x0351039C BL 0x1C16DEC
	0x035103A0 BL 0x1C16F44
	0x035103A4 MOV X1, X31
	0x035103A8 BL 0x1C16DEC
	0x035103AC BL 0x1C16F28
	0x035103B0 STR X30, [X31 - 0x30]!
	0x035103B4 STP X22, X21, [X31 + 0x10]
	0x035103B8 STP X20, X19, [X31 + 0x20]
	0x035103BC ADRP X21, 0xECF000
	0x035103C0 ADRP X20, 0xBE4000
	0x035103C4 LDRB W8, [X21 + 0xAF9]
	0x035103C8 LDR X20, [X20 + 0xE58]
	0x035103CC MOV X19, X1
	0x035103D0 TBNZ X8, 0x0, 0x35103E8
	0x035103D4 ADRP X0, 0xBE4000
	0x035103D8 LDR X0, [X0 + 0xE58]
	0x035103DC BL 0x1C16CF4
	0x035103E0 MOVZ W8, 0x1
	0x035103E4 STRB W8, [X21 + 0xAF9]
	0x035103E8 MOV X1, X19
	0x035103EC BL 0x35108F4
	0x035103F0 LDR X8, [X20]
	0x035103F4 MOV W1, W0
	0x035103F8 MOV X0, X8
	0x035103FC BL 0x1C16D6C
	0x03510400 CBZ X0, 0x3510464
	0x03510404 LDR W8, [X0 + 0x18]
	0x03510408 MOV X20, X0
	0x0351040C CMP W8, 0x1
	0x03510410 B.LT 0x351044C
	0x03510414 MOV X21, X31
	0x03510418 ADD X22, X20, 0x20
	0x0351041C MOV X1, X19
	0x03510420 BL 0x35108F4
	0x03510424 LDR W8, [X20 + 0x18]
	0x03510428 CMP X21, X8
	0x0351042C B.CS 0x3510460
	0x03510430 AND W9, W0, 0x1
	0x03510434 SUB W9, W31, W9
	0x03510438 EOR W9, W9, W0, 0x1
	0x0351043C STR W9, [X22, X21, LSL #2]
	0x03510440 ADD X21, X21, 0x1
	0x03510444 CMP X21, W8, SXTW
	0x03510448 B.LT 0x351041C
	0x0351044C MOV X0, X20
	0x03510450 LDP X20, X19, [X31 + 0x20]
	0x03510454 LDP X22, X21, [X31 + 0x10]
	0x03510458 LDR X30, [X31], #0x30
	0x0351045C RET
	0x03510460 BL 0x1C16F28
	0x03510464 BL 0x1C16F20
	0x03510468 STR X30, [X31 - 0x30]!
	0x0351046C STP X22, X21, [X31 + 0x10]
	0x03510470 STP X20, X19, [X31 + 0x20]
	0x03510474 ADRP X21, 0xECF000
	0x03510478 ADRP X20, 0xC14000
	0x0351047C LDRB W8, [X21 + 0xAFA]
	0x03510480 LDR X20, [X20 + 0x838]
	0x03510484 MOV X19, X1
	0x03510488 TBNZ X8, 0x0, 0x35104A0
	0x0351048C ADRP X0, 0xC14000
	0x03510490 LDR X0, [X0 + 0x838]
	0x03510494 BL 0x1C16CF4
	0x03510498 MOVZ W8, 0x1
	0x0351049C STRB W8, [X21 + 0xAFA]
	0x035104A0 MOV X1, X19
	0x035104A4 BL 0x35108F4
	0x035104A8 LDR X8, [X20]
	0x035104AC MOV W1, W0
	0x035104B0 MOV X0, X8
	0x035104B4 BL 0x1C16D6C
	0x035104B8 CBZ X0, 0x351051C
	0x035104BC LDR W8, [X0 + 0x18]
	0x035104C0 MOV X20, X0
	0x035104C4 CMP W8, 0x1
	0x035104C8 B.LT 0x3510504
	0x035104CC MOV X21, X31
	0x035104D0 ADD X22, X20, 0x20
	0x035104D4 MOV X1, X19
	0x035104D8 BL 0x3511C88
	0x035104DC LDR W8, [X20 + 0x18]
	0x035104E0 CMP X21, X8
	0x035104E4 B.CS 0x3510518
	0x035104E8 AND X9, X0, 0x1
	0x035104EC SUB X9, X31, X9
	0x035104F0 EOR X9, X9, X0, 0x1
	0x035104F4 STR X9, [X22, X21, LSL #3]
	0x035104F8 ADD X21, X21, 0x1
	0x035104FC CMP X21, W8, SXTW
	0x03510500 B.LT 0x35104D4
	0x03510504 MOV X0, X20

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X24, 0xED0000
	014 Move X23, 0xBEC000
	015 Move W8, [X24+2787]
	016 Move X23, [X23+3488]
	017 Move X19, X3
	018 Move W20, W2
	019 Move X21, X1
	020 Move X22, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {36}
	025 Move X0, 0xBEC000
	026 Move X0, [X0+3488]
	027 Call 0x1C17CF4
	028 Move X0, 0xC25000
	029 Move X0, [X0+768]
	030 Call 0x1C17CF4
	031 Move X0, 0xC25000
	032 Move X0, [X0+776]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X24+2787], W8
	036 Move X1, X21
	037 Call Protocol18.ReadCompressedUInt32, X0, X1
	038 Move X8, [X23]
	039 Move W24, W0
	040 Move X0, X8
	041 Call 0x1C17F10
	042 Move W1, W24
	043 Move X2, X31
	044 Move X23, X0
	045 Call Hashtable..ctor, X0, X1
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Move X26, 0xC25000
	048 Move X27, 0xC25000
	049 Move X26, [X26+776]
	050 Move X27, [X27+768]
	051 Move X28, W24
	052 Move W29, 1
	053 Move X0, X22
	054 Move X1, X21
	055 Move W2, W20
	056 Move X3, X19
	057 Call Protocol18.Read, X0, X1, X2, X3
	058 Move X25, X0
	059 Move X0, X22
	060 Move X1, X21
	061 Move W2, W20
	062 Move X3, X19
	063 Call Protocol18.Read, X0, X1, X2, X3
	064 Compare X25, 0
	065 JumpIfEqual {83}
	066 Move X9, [X25]
	067 Move X8, [X26]
	068 Move X24, X0
	069 Move W11, [X9+304]
	070 Move W10, [X8+304]
	071 NotImplemented "Instruction CMP not yet implemented."
	072 Move X9, [X9+200]
	073 Add X9, X9, X10
	074 NotImplemented "Instruction LDUR not yet implemented."
	075 NotImplemented "Instruction CMP not yet implemented."
	076 Compare X23, 0
	077 JumpIfEqual {110}
	078 Move X0, X23
	079 Move X1, X25
	080 Move X2, X24
	081 Move X3, X31
	082 Call Hashtable.set_Item, X0, X1, X2
	083 Move W8, W29
	084 NotImplemented "Instruction CMP not yet implemented."
	085 Add W29, W29, 1
	086 Move X1, [X27]
	087 Move X0, X25
	088 Call 0x22918A4, X0
	089 Compare X23, 0
	090 JumpIfEqual {110}
	091 Move W1, W0
	092 Move X0, X23
	093 Move X2, X24
	094 Move X3, X31
	095 Call Hashtable.set_Item, X0, X1, X2
	096 Move X0, X23
	097 Move X20, [X31+80]
	098 Move X19, [X31+88]
	099 Move X22, [X31+64]
	100 Move X21, [X31+72]
	101 Move X24, [X31+48]
	102 Move X23, [X31+56]
	103 Move X26, [X31+32]
	104 Move X25, [X31+40]
	105 Move X28, [X31+16]
	106 Move X27, [X31+24]
	107 Move X29, [X31+96]
	108 Move X30, [X31+104]
	109 Return X0
	110 Call 0x1C17F20

Method: System.Int32[] ReadIntArray(ExitGames.Client.Photon.StreamBuffer stream)

Disassembly:
	0x03511FF8 LDR X30, [X31], #0x40
	0x03511FFC B 0x3513004
	0x03512000 SUB W8, W8, 0x40
	0x03512004 CMP W8, 0x15
	0x03512008 B.HI 0x3512234
	0x0351200C ADRP X9, 0xFFFFFFFFFD684000
	0x03512010 ADD X9, X9, 0xCBC
	0x03512014 ADR X10, 0x10
	0x03512018 LDRH W11, [X9, X8, LSL #1]
	0x0351201C ADD X10, X10, X11, 0x2, LSL
	0x03512020 BR X10
	0x03512024 MOV X0, X21
	0x03512028 MOV X1, X19
	0x0351202C MOV X2, X22
	0x03512030 LDP X20, X19, [X31 + 0x30]
	0x03512034 LDP X22, X21, [X31 + 0x20]
	0x03512038 LDP X24, X23, [X31 + 0x10]
	0x0351203C MOV W3, W31
	0x03512040 LDR X30, [X31], #0x40
	0x03512044 B 0x35136D4
	0x03512048 CBZ X22, 0x351291C
	0x0351204C ADRP X8, 0xBE1000
	0x03512050 LDR X8, [X8 + 0xB58]
	0x03512054 LDR X9, [X22]
	0x03512058 LDR X1, [X8]
	0x0351205C LDR X8, [X9 + 0x40]
	0x03512060 LDR X9, [X1 + 0x40]
	0x03512064 CMP X8, X9
	0x03512068 B.NE 0x3512914
	0x0351206C MOV X0, X22
	0x03512070 BL 0x1C16E08
	0x03512074 LDRB W2, [X0]
	0x03512078 AND W3, W20, 0x1
	0x0351207C MOV X1, X19
	0x03512080 LDP X20, X19, [X31 + 0x30]
	0x03512084 LDP X22, X21, [X31 + 0x20]
	0x03512088 LDP X24, X23, [X31 + 0x10]
	0x0351208C LDR X30, [X31], #0x40
	0x03512090 B 0x3512AA8
	0x03512094 CBZ X22, 0x351291C
	0x03512098 ADRP X8, 0xBE2000
	0x0351209C LDR X8, [X8 + 0x9D8]
	0x035120A0 LDR X9, [X22]
	0x035120A4 LDR X1, [X8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0xECE000
	008 Move X20, 0xBE3000
	009 Move W8, [X21+2788]
	010 Move X20, [X20+3672]
	011 Move X19, X1
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xBE3000
	017 Move X0, [X0+3672]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2788], W8
	021 Move X1, X19
	022 Call Protocol18.ReadInt32, X0, X1
	023 Move X8, [X20]
	024 Move W21, W0
	025 Move W1, W21
	026 Move X0, X8
	027 Call 0x1C17D6C
	028 NotImplemented "Instruction CMP not yet implemented."
	029 Move X20, X0
	030 Move X22, X31
	031 Move X21, W21
	032 Add X23, X20, 32
	033 Move X1, X19
	034 Call Protocol18.ReadInt32, X0, X1
	035 Compare X20, 0
	036 JumpIfEqual {50}
	037 Move W8, [X20+24]
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Move [X23], W0
	040 Add X22, X22, 1
	041 NotImplemented "Instruction CMP not yet implemented."
	042 Move X0, X20
	043 Move X20, [X31+32]
	044 Move X19, [X31+40]
	045 Move X22, [X31+16]
	046 Move X21, [X31+24]
	047 Move X30, [X31+48]
	048 Move X23, [X31+56]
	049 Return X0
	050 Call 0x1C17F20
	051 Call 0x1C17F28

Method: ExitGames.Client.Photon.OperationRequest DeserializeOperationRequest(ExitGames.Client.Photon.StreamBuffer din, ExitGames.Client.Photon.IProtocol/DeserializationFlags flags = 0)

Disassembly:
	0x035120A8 LDR X8, [X9 + 0x40]
	0x035120AC LDR X9, [X1 + 0x40]
	0x035120B0 CMP X8, X9
	0x035120B4 B.NE 0x3512914
	0x035120B8 MOV X0, X22
	0x035120BC BL 0x1C16E08
	0x035120C0 LDRB W2, [X0]
	0x035120C4 AND W3, W20, 0x1
	0x035120C8 MOV X1, X19
	0x035120CC LDP X20, X19, [X31 + 0x30]
	0x035120D0 LDP X22, X21, [X31 + 0x20]
	0x035120D4 LDP X24, X23, [X31 + 0x10]
	0x035120D8 LDR X30, [X31], #0x40
	0x035120DC B 0x3512AE4
	0x035120E0 CBZ X22, 0x351291C
	0x035120E4 ADRP X8, 0xBE5000
	0x035120E8 LDR X8, [X8 + 0x628]
	0x035120EC LDR X9, [X22]
	0x035120F0 LDR X1, [X8]
	0x035120F4 LDR X8, [X9 + 0x40]
	0x035120F8 LDR X9, [X1 + 0x40]
	0x035120FC CMP X8, X9
	0x03512100 B.NE 0x3512914
	0x03512104 MOV X0, X22
	0x03512108 BL 0x1C16E08
	0x0351210C LDRH W2, [X0]
	0x03512110 AND W3, W20, 0x1
	0x03512114 MOV X1, X19
	0x03512118 LDP X20, X19, [X31 + 0x30]
	0x0351211C LDP X22, X21, [X31 + 0x20]
	0x03512120 LDP X24, X23, [X31 + 0x10]
	0x03512124 LDR X30, [X31], #0x40
	0x03512128 B 0x350D664
	0x0351212C CBZ X22, 0x351291C
	0x03512130 ADRP X8, 0xBE1000
	0x03512134 LDR X8, [X8 + 0xA90]
	0x03512138 LDR X9, [X22]
	0x0351213C LDR X1, [X8]
	0x03512140 LDR X8, [X9 + 0x40]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0xECE000
	008 Move X23, 0xC23000
	009 Move W8, [X22+2789]
	010 Move X23, [X23+272]
	011 Move W19, W2
	012 Move X20, X1
	013 Move X21, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0xC23000
	019 Move X0, [X0+272]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+2789], W8
	023 Move X0, [X23]
	024 Call 0x1C17F10
	025 Move X1, X31
	026 Move X22, X0
	027 Call Object..ctor, X0
	028 Compare X20, 0
	029 JumpIfEqual {50}
	030 Move X0, X20
	031 Move X1, X31
	032 Call StreamBuffer.ReadByte, X0
	033 Compare X22, 0
	034 JumpIfEqual {50}
	035 Move X2, [X22+24]
	036 Move [X22+16], W0
	037 Move X0, X21
	038 Move X1, X20
	039 Move W3, W19
	040 Call Protocol18.ReadParameterDictionary, X0, X1, X2, X3
	041 Move [X22+24], X0
	042 Move X0, X22
	043 Move X20, [X31+32]
	044 Move X19, [X31+40]
	045 Move X22, [X31+16]
	046 Move X21, [X31+24]
	047 Move X30, [X31+48]
	048 Move X23, [X31+56]
	049 Return X0
	050 Call 0x1C17F20

Method: ExitGames.Client.Photon.OperationResponse DeserializeOperationResponse(ExitGames.Client.Photon.StreamBuffer stream, ExitGames.Client.Photon.IProtocol/DeserializationFlags flags = 0)

Disassembly:
	0x03512144 LDR X9, [X1 + 0x40]
	0x03512148 CMP X8, X9
	0x0351214C B.NE 0x3512914
	0x03512150 MOV X0, X22
	0x03512154 BL 0x1C16E08
	0x03512158 LDR V0, [X0]
	0x0351215C AND W2, W20, 0x1
	0x03512160 MOV X0, X21
	0x03512164 MOV X1, X19
	0x03512168 LDP X20, X19, [X31 + 0x30]
	0x0351216C LDP X22, X21, [X31 + 0x20]
	0x03512170 LDP X24, X23, [X31 + 0x10]
	0x03512174 LDR X30, [X31], #0x40
	0x03512178 B 0x3512D8C
	0x0351217C CBZ X22, 0x351291C
	0x03512180 ADRP X8, 0xBE4000
	0x03512184 LDR X8, [X8 + 0x978]
	0x03512188 LDR X9, [X22]
	0x0351218C LDR X1, [X8]
	0x03512190 LDR X8, [X9 + 0x40]
	0x03512194 LDR X9, [X1 + 0x40]
	0x03512198 CMP X8, X9
	0x0351219C B.NE 0x3512914
	0x035121A0 MOV X0, X22
	0x035121A4 BL 0x1C16E08
	0x035121A8 LDR V0, [X0]
	0x035121AC AND W2, W20, 0x1
	0x035121B0 MOV X0, X21
	0x035121B4 MOV X1, X19
	0x035121B8 LDP X20, X19, [X31 + 0x30]
	0x035121BC LDP X22, X21, [X31 + 0x20]
	0x035121C0 LDP X24, X23, [X31 + 0x10]
	0x035121C4 LDR X30, [X31], #0x40
	0x035121C8 B 0x3512EC8
	0x035121CC CBZ X22, 0x35121E8
	0x035121D0 ADRP X8, 0xBE3000
	0x035121D4 LDR X8, [X8 + 0x278]
	0x035121D8 LDR X1, [X8]
	0x035121DC LDR X8, [X22]
	0x035121E0 CMP X8, X1
	0x035121E4 B.NE 0x3512914
	0x035121E8 AND W3, W20, 0x1
	0x035121EC MOV X0, X21
	0x035121F0 MOV X1, X19
	0x035121F4 MOV X2, X22
	0x035121F8 LDP X20, X19, [X31 + 0x30]
	0x035121FC LDP X22, X21, [X31 + 0x20]
	0x03512200 LDP X24, X23, [X31 + 0x10]
	0x03512204 LDR X30, [X31], #0x40
	0x03512208 B 0x350D6DC
	0x0351220C TBZ X20, 0x0, 0x3512234
	0x03512210 CBZ X19, 0x351291C
	0x03512214 MOV X0, X19
	0x03512218 LDP X20, X19, [X31 + 0x30]
	0x0351221C LDP X22, X21, [X31 + 0x20]
	0x03512220 LDP X24, X23, [X31 + 0x10]
	0x03512224 MOVZ W1, 0x8
	0x03512228 MOV X2, X31
	0x0351222C LDR X30, [X31], #0x40
	0x03512230 B 0x351EFE8
	0x03512234 LDP X20, X19, [X31 + 0x30]
	0x03512238 LDP X22, X21, [X31 + 0x20]
	0x0351223C LDP X24, X23, [X31 + 0x10]
	0x03512240 LDR X30, [X31], #0x40

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0xECE000
	008 Move X23, 0xC23000
	009 Move W8, [X22+2790]
	010 Move X23, [X23+288]
	011 Move W19, W2
	012 Move X20, X1
	013 Move X21, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0xC23000
	019 Move X0, [X0+288]
	020 Call 0x1C17CF4
	021 Move X0, 0xBE4000
	022 Move X0, [X0+632]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X22+2790], W8
	026 Move X0, [X23]
	027 Call 0x1C17F10
	028 Move X1, X31
	029 Move X22, X0
	030 Call Object..ctor, X0
	031 Compare X20, 0
	032 JumpIfEqual {75}
	033 Move X0, X20
	034 Move X1, X31
	035 Call StreamBuffer.ReadByte, X0
	036 Compare X22, 0
	037 JumpIfEqual {75}
	038 Move X1, X20
	039 Move [X22+16], W0
	040 Call Protocol18.ReadInt16, X0, X1
	041 NotImplemented "Instruction STRH not yet implemented."
	042 Move X0, X20
	043 Move X1, X31
	044 Call StreamBuffer.ReadByte, X0
	045 Move X4, [X22+32]
	046 Move W2, W0
	047 Move X0, X21
	048 Move X1, X20
	049 Move W3, W19
	050 Call Protocol18.Read, X0, X1, X2, X3, X4
	051 Compare X0, 0
	052 JumpIfEqual {59}
	053 Move X8, 0xBE4000
	054 Move X8, [X8+632]
	055 Move X9, [X0]
	056 Move X8, [X8]
	057 NotImplemented "Instruction CMP not yet implemented."
	058 NotImplemented "Instruction CSEL not yet implemented."
	059 Move X8, X31
	060 Move X2, [X22+32]
	061 Move X0, X21
	062 Move X1, X20
	063 Move W3, W19
	064 Move [X22+24], X8
	065 Call Protocol18.ReadParameterDictionary, X0, X1, X2, X3
	066 Move [X22+32], X0
	067 Move X0, X22
	068 Move X20, [X31+32]
	069 Move X19, [X31+40]
	070 Move X22, [X31+16]
	071 Move X21, [X31+24]
	072 Move X30, [X31+48]
	073 Move X23, [X31+56]
	074 Return X0
	075 Call 0x1C17F20

Method: ExitGames.Client.Photon.DisconnectMessage DeserializeDisconnectMessage(ExitGames.Client.Photon.StreamBuffer stream)

Disassembly:
	0x03512244 RET
	0x03512248 CBZ X22, 0x351291C
	0x0351224C ADRP X8, 0xBE1000
	0x03512250 LDR X8, [X8 + 0x758]
	0x03512254 LDR X9, [X22]
	0x03512258 LDR X1, [X8]
	0x0351225C LDR X8, [X9 + 0x40]
	0x03512260 LDR X9, [X1 + 0x40]
	0x03512264 CMP X8, X9
	0x03512268 B.NE 0x3512914
	0x0351226C MOV X0, X22
	0x03512270 BL 0x1C16E08
	0x03512274 LDR W2, [X0]
	0x03512278 AND W3, W20, 0x1
	0x0351227C MOV X0, X21
	0x03512280 MOV X1, X19
	0x03512284 LDP X20, X19, [X31 + 0x30]
	0x03512288 LDP X22, X21, [X31 + 0x20]
	0x0351228C LDP X24, X23, [X31 + 0x10]
	0x03512290 LDR X30, [X31], #0x40
	0x03512294 B 0x3512B3C
	0x03512298 CBZ X22, 0x351291C
	0x0351229C ADRP X8, 0xBE3000
	0x035122A0 LDR X8, [X8 + 0xA60]
	0x035122A4 LDR X9, [X22]
	0x035122A8 LDR X1, [X8]
	0x035122AC LDR X8, [X9 + 0x40]
	0x035122B0 LDR X9, [X1 + 0x40]
	0x035122B4 CMP X8, X9
	0x035122B8 B.NE 0x3512914
	0x035122BC MOV X0, X22
	0x035122C0 BL 0x1C16E08
	0x035122C4 LDR X2, [X0]
	0x035122C8 AND W3, W20, 0x1
	0x035122CC MOV X0, X21
	0x035122D0 MOV X1, X19
	0x035122D4 LDP X20, X19, [X31 + 0x30]
	0x035122D8 LDP X22, X21, [X31 + 0x20]
	0x035122DC LDP X24, X23, [X31 + 0x10]
	0x035122E0 LDR X30, [X31], #0x40
	0x035122E4 B 0x3512C64
	0x035122E8 CBZ X22, 0x3512660
	0x035122EC ADRP X8, 0xBE1000
	0x035122F0 LDR X8, [X8 + 0x818]
	0x035122F4 MOV X0, X22
	0x035122F8 LDR X23, [X8]
	0x035122FC MOV X1, X23
	0x03512300 BL 0x1C16E00
	0x03512304 MOV X2, X0
	0x03512308 CBNZ X0, 0x3512664
	0x0351230C B 0x35125DC
	0x03512310 CBZ X22, 0x3512348
	0x03512314 ADRP X9, 0xBE9000
	0x03512318 LDR X9, [X9 + 0xDA0]
	0x0351231C LDR X8, [X22]
	0x03512320 LDR X1, [X9]
	0x03512324 LDRB W10, [X8 + 0x130]
	0x03512328 LDRB W9, [X1 + 0x130]
	0x0351232C CMP W10, W9

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xECE000
	007 Move X22, 0xC23000
	008 Move W8, [X21+2791]
	009 Move X22, [X22+280]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xC23000
	017 Move X0, [X0+280]
	018 Call 0x1C17CF4
	019 Move X0, 0xBE4000
	020 Move X0, [X0+632]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X21+2791], W8
	024 Move X0, [X22]
	025 Call 0x1C17F10
	026 Move X1, X31
	027 Move X21, X0
	028 Call Object..ctor, X0
	029 Move X1, X19
	030 Call Protocol18.ReadInt16, X0, X1
	031 Compare X21, 0
	032 JumpIfEqual {68}
	033 NotImplemented "Instruction STRH not yet implemented."
	034 Compare X19, 0
	035 JumpIfEqual {68}
	036 Move X0, X19
	037 Move X1, X31
	038 Call StreamBuffer.ReadByte, X0
	039 Move W2, W0
	040 Move X0, X20
	041 Move X1, X19
	042 Move W3, W31
	043 Move X4, X31
	044 Call Protocol18.Read, X0, X1, X2, X3, X4
	045 Compare X0, 0
	046 JumpIfEqual {53}
	047 Move X8, 0xBE4000
	048 Move X8, [X8+632]
	049 Move X9, [X0]
	050 Move X8, [X8]
	051 NotImplemented "Instruction CMP not yet implemented."
	052 NotImplemented "Instruction CSEL not yet implemented."
	053 Move X8, X31
	054 Move X0, X20
	055 Move X1, X19
	056 Move X2, X31
	057 Move W3, W31
	058 Move [X21+24], X8
	059 Call Protocol18.ReadParameterTable, X0, X1, X2, X3
	060 Move [X21+32], X0
	061 Move X0, X21
	062 Move X20, [X31+32]
	063 Move X19, [X31+40]
	064 Move X22, [X31+16]
	065 Move X21, [X31+24]
	066 Move X30, [X31+48]
	067 Return X0
	068 Call 0x1C17F20

Method: System.String ReadString(ExitGames.Client.Photon.StreamBuffer stream)

Disassembly:
	0x0351024C LDR W8, [X21 + 0x18]
	0x03510250 CBZ W8, 0x35103AC
	0x03510254 STR X20, [X21 + 0x20]
	0x03510258 MOV X0, X21
	0x0351025C LDP X20, X19, [X31 + 0x40]
	0x03510260 LDP X22, X21, [X31 + 0x30]
	0x03510264 LDP X24, X23, [X31 + 0x20]
	0x03510268 LDP X30, X25, [X31 + 0x10]
	0x0351026C ADD X31, X31, 0x50
	0x03510270 RET
	0x03510274 BL 0x1C16F20
	0x03510278 ADD X0, X31, 0x4
	0x0351027C MOV X1, X31
	0x03510280 BL 0x337B6E0
	0x03510284 MOV X20, X0
	0x03510288 MOV X0, X19
	0x0351028C BL 0x19903C0
	0x03510290 MOV X0, X19
	0x03510294 MOV X1, X31
	0x03510298 BL 0x3517FD4
	0x0351029C STR W0, [X31]
	0x035102A0 ADD X0, X31, 0x0
	0x035102A4 MOV X1, X31
	0x035102A8 BL 0x337B6E0
	0x035102AC MOV X19, X0
	0x035102B0 ADRP X0, 0xC24000
	0x035102B4 LDR X0, [X0 + 0x328]
	0x035102B8 BL 0x1C16D08
	0x035102BC MOV X21, X0
	0x035102C0 ADRP X0, 0xC24000
	0x035102C4 LDR X0, [X0 + 0x60]
	0x035102C8 B 0x351034C
	0x035102CC MOV X0, X19
	0x035102D0 BL 0x19903C0
	0x035102D4 MOV X0, X19
	0x035102D8 MOV X1, X31
	0x035102DC BL 0x351806C
	0x035102E0 MOV W20, W0
	0x035102E4 MOV X0, X19
	0x035102E8 BL 0x19903C0
	0x035102EC MOV X0, X19
	0x035102F0 MOV W1, W20
	0x035102F4 MOV X2, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0xED0000
	005 Move W8, [X19+2792]
	006 Move X20, X1
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xBE6000
	012 Move X0, [X0+632]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X19+2792], W8
	016 Move X1, X20
	017 Call Protocol18.ReadCompressedUInt32, X0, X1
	018 Compare W0, 0
	019 JumpIfEqual {41}
	020 Move [X31+12], W31
	021 Compare X20, 0
	022 JumpIfEqual {50}
	023 Move W19, W0
	024 Add X2, X31, 12
	025 Move X0, X20
	026 Move W1, W19
	027 Move X3, X31
	028 Call StreamBuffer.GetBufferAndAdvance, X0, X1, X2
	029 Move X20, X0
	030 Move X0, X31
	031 Call Encoding.get_UTF8
	032 Compare X0, 0
	033 JumpIfEqual {50}
	034 Move X8, [X0]
	035 Move W2, [X31+12]
	036 Move X1, X20
	037 Move W3, W19
	038 Move X9, [X8+904]
	039 Move X4, [X8+912]
	040 NotImplemented "Instruction BLR not yet implemented."
	041 Move X8, 0xBE6000
	042 Move X8, [X8+632]
	043 Move X8, [X8]
	044 Move X8, [X8+184]
	045 Move X0, [X8]
	046 Move X20, [X31+16]
	047 Move X19, [X31+24]
	048 Move X30, [X31+32]
	049 Return X0
	050 Call 0x1C17F20

Method: System.Object ReadCustomTypeArray(ExitGames.Client.Photon.StreamBuffer stream)

Disassembly:
	0x03510F24 MOV X1, X31
	0x03510F28 BL 0x351EF00
	0x03510F2C MOV W24, W0
	0x03510F30 CBZ X22, 0x3510F3C
	0x03510F34 AND W23, W24, 0xFF
	0x03510F38 B 0x3510F60
	0x03510F3C ADRP X8, 0xBEC000
	0x03510F40 LDR X8, [X8 + 0x6F8]
	0x03510F44 LDR X0, [X8]
	0x03510F48 BL 0x1C16F10
	0x03510F4C AND W23, W24, 0xFF
	0x03510F50 MOV W1, W23
	0x03510F54 MOV X2, X31
	0x03510F58 MOV X22, X0
	0x03510F5C BL 0x34FB754
	0x03510F60 ANDS W31, W24, 0xFF
	0x03510F64 B.EQ 0x3510FDC
	0x03510F68 MOV X0, X20
	0x03510F6C MOV X1, X31
	0x03510F70 BL 0x351EF00
	0x03510F74 MOV W24, W0
	0x03510F78 MOV X0, X20
	0x03510F7C MOV X1, X31
	0x03510F80 BL 0x351EF00
	0x03510F84 MOV W2, W0
	0x03510F88 TBZ X19, 0x0, 0x3510FA8
	0x03510F8C AND W8, W2, 0xFF
	0x03510F90 CMP W8, 0x43
	0x03510F94 B.NE 0x3510FA8
	0x03510F98 MOV X0, X21
	0x03510F9C MOV X1, X20
	0x03510FA0 BL 0x3510888
	0x03510FA4 B 0x3510FBC
	0x03510FA8 MOV X0, X21
	0x03510FAC MOV X1, X20
	0x03510FB0 MOV W3, W19
	0x03510FB4 MOV X4, X22
	0x03510FB8 BL 0x350D824
	0x03510FBC MOV X2, X0
	0x03510FC0 CBZ X22, 0x3510FF4
	0x03510FC4 MOV X0, X22
	0x03510FC8 MOV W1, W24
	0x03510FCC MOV X3, X31
	0x03510FD0 BL 0x34FC3A4
	0x03510FD4 SUBS W23, W23, 0x1
	0x03510FD8 B.NE 0x3510F68
	0x03510FDC MOV X0, X22
	0x03510FE0 LDP X20, X19, [X31 + 0x30]
	0x03510FE4 LDP X22, X21, [X31 + 0x20]
	0x03510FE8 LDP X24, X23, [X31 + 0x10]
	0x03510FEC LDR X30, [X31], #0x40
	0x03510FF0 RET
	0x03510FF4 BL 0x1C16F20
	0x03510FF8 STP X30, X23, [X31 - 0x30]!
	0x03510FFC STP X22, X21, [X31 + 0x10]
	0x03511000 STP X20, X19, [X31 + 0x20]
	0x03511004 ADRP X21, 0xECE000
	0x03511008 ADRP X20, 0xBE3000
	0x0351100C LDRB W8, [X21 + 0xAE4]
	0x03511010 LDR X20, [X20 + 0xE58]
	0x03511014 MOV X19, X1
	0x03511018 TBNZ X8, 0x0, 0x3511030
	0x0351101C ADRP X0, 0xBE3000
	0x03511020 LDR X0, [X0 + 0xE58]
	0x03511024 BL 0x1C16CF4
	0x03511028 MOVZ W8, 0x1
	0x0351102C STRB W8, [X21 + 0xAE4]
	0x03511030 MOV X1, X19
	0x03511034 BL 0x35106D8
	0x03511038 LDR X8, [X20]
	0x0351103C MOV W21, W0
	0x03511040 MOV W1, W21
	0x03511044 MOV X0, X8
	0x03511048 BL 0x1C16D6C
	0x0351104C CMP W21, 0x1
	0x03511050 MOV X20, X0
	0x03511054 B.LT 0x351108C
	0x03511058 MOV X22, X31
	0x0351105C SXTW X21, W21
	0x03511060 ADD X23, X20, 0x20
	0x03511064 MOV X1, X19
	0x03511068 BL 0x35106D8
	0x0351106C CBZ X20, 0x35110A0
	0x03511070 LDR W8, [X20 + 0x18]
	0x03511074 CMP X22, X8
	0x03511078 B.CS 0x35110A4
	0x0351107C STR W0, [X23, X22, LSL #2]
	0x03511080 ADD X22, X22, 0x1
	0x03511084 CMP X21, X22
	0x03511088 B.NE 0x3511064
	0x0351108C MOV X0, X20
	0x03511090 LDP X20, X19, [X31 + 0x20]
	0x03511094 LDP X22, X21, [X31 + 0x10]
	0x03511098 LDP X30, X23, [X31], #0x30
	0x0351109C RET
	0x035110A0 BL 0x1C16F20
	0x035110A4 BL 0x1C16F28
	0x035110A8 STP X30, X23, [X31 - 0x30]!
	0x035110AC STP X22, X21, [X31 + 0x10]
	0x035110B0 STP X20, X19, [X31 + 0x20]
	0x035110B4 ADRP X22, 0xECE000
	0x035110B8 ADRP X23, 0xC23000
	0x035110BC LDRB W8, [X22 + 0xAE5]
	0x035110C0 LDR X23, [X23 + 0x110]
	0x035110C4 MOV W19, W2
	0x035110C8 MOV X20, X1
	0x035110CC MOV X21, X0
	0x035110D0 TBNZ X8, 0x0, 0x35110E8
	0x035110D4 ADRP X0, 0xC23000
	0x035110D8 LDR X0, [X0 + 0x110]
	0x035110DC BL 0x1C16CF4
	0x035110E0 MOVZ W8, 0x1
	0x035110E4 STRB W8, [X22 + 0xAE5]
	0x035110E8 LDR X0, [X23]
	0x035110EC BL 0x1C16F10
	0x035110F0 MOV X1, X31
	0x035110F4 MOV X22, X0
	0x035110F8 BL 0x33BDD8C
	0x035110FC CBZ X20, 0x3511140
	0x03511100 MOV X0, X20
	0x03511104 MOV X1, X31
	0x03511108 BL 0x351EF00
	0x0351110C CBZ X22, 0x3511140
	0x03511110 LDR X2, [X22 + 0x18]
	0x03511114 STRB W0, [X22 + 0x10]
	0x03511118 MOV X0, X21
	0x0351111C MOV X1, X20
	0x03511120 MOV W3, W19
	0x03511124 BL 0x3510EDC
	0x03511128 STR X0, [X22 + 0x18]
	0x0351112C MOV X0, X22
	0x03511130 LDP X20, X19, [X31 + 0x20]
	0x03511134 LDP X22, X21, [X31 + 0x10]
	0x03511138 LDP X30, X23, [X31], #0x30
	0x0351113C RET
	0x03511140 BL 0x1C16F20
	0x03511144 STP X30, X23, [X31 - 0x30]!
	0x03511148 STP X22, X21, [X31 + 0x10]
	0x0351114C STP X20, X19, [X31 + 0x20]
	0x03511150 ADRP X22, 0xECE000
	0x03511154 ADRP X23, 0xC23000
	0x03511158 LDRB W8, [X22 + 0xAE6]
	0x0351115C LDR X23, [X23 + 0x120]
	0x03511160 MOV W19, W2
	0x03511164 MOV X20, X1
	0x03511168 MOV X21, X0
	0x0351116C TBNZ X8, 0x0, 0x3511190
	0x03511170 ADRP X0, 0xC23000
	0x03511174 LDR X0, [X0 + 0x120]
	0x03511178 BL 0x1C16CF4
	0x0351117C ADRP X0, 0xBE4000
	0x03511180 LDR X0, [X0 + 0x278]
	0x03511184 BL 0x1C16CF4
	0x03511188 MOVZ W8, 0x1
	0x0351118C STRB W8, [X22 + 0xAE6]
	0x03511190 LDR X0, [X23]
	0x03511194 BL 0x1C16F10
	0x03511198 MOV X1, X31
	0x0351119C MOV X22, X0
	0x035111A0 BL 0x33BDD8C
	0x035111A4 CBZ X20, 0x3511240
	0x035111A8 MOV X0, X20
	0x035111AC MOV X1, X31
	0x035111B0 BL 0x351EF00
	0x035111B4 CBZ X22, 0x3511240
	0x035111B8 MOV X1, X20
	0x035111BC STRB W0, [X22 + 0x10]
	0x035111C0 BL 0x350E198
	0x035111C4 STRH W0, [X22 + 0x12]
	0x035111C8 MOV X0, X20
	0x035111CC MOV X1, X31
	0x035111D0 BL 0x351EF00
	0x035111D4 LDR X4, [X22 + 0x20]
	0x035111D8 MOV W2, W0
	0x035111DC MOV X0, X21
	0x035111E0 MOV X1, X20
	0x035111E4 MOV W3, W19
	0x035111E8 BL 0x350D824
	0x035111EC CBZ X0, 0x351120C
	0x035111F0 ADRP X8, 0xBE4000
	0x035111F4 LDR X8, [X8 + 0x278]
	0x035111F8 LDR X9, [X0]
	0x035111FC LDR X8, [X8]
	0x03511200 CMP X9, X8
	0x03511204 CSEL X8, X0, X31, EQ
	0x03511208 B 0x3511210
	0x0351120C MOV X8, X31
	0x03511210 LDR X2, [X22 + 0x20]
	0x03511214 MOV X0, X21
	0x03511218 MOV X1, X20
	0x0351121C MOV W3, W19
	0x03511220 STR X8, [X22 + 0x18]
	0x03511224 BL 0x3510EDC
	0x03511228 STR X0, [X22 + 0x20]
	0x0351122C MOV X0, X22
	0x03511230 LDP X20, X19, [X31 + 0x20]
	0x03511234 LDP X22, X21, [X31 + 0x10]
	0x03511238 LDP X30, X23, [X31], #0x30
	0x0351123C RET
	0x03511240 BL 0x1C16F20
	0x03511244 STR X30, [X31 - 0x30]!
	0x03511248 STP X22, X21, [X31 + 0x10]
	0x0351124C STP X20, X19, [X31 + 0x20]
	0x03511250 ADRP X21, 0xECE000
	0x03511254 ADRP X22, 0xC23000
	0x03511258 LDRB W8, [X21 + 0xAE7]
	0x0351125C LDR X22, [X22 + 0x118]
	0x03511260 MOV X19, X1
	0x03511264 MOV X20, X0
	0x03511268 TBNZ X8, 0x0, 0x351128C
	0x0351126C ADRP X0, 0xC23000
	0x03511270 LDR X0, [X0 + 0x118]
	0x03511274 BL 0x1C16CF4
	0x03511278 ADRP X0, 0xBE4000
	0x0351127C LDR X0, [X0 + 0x278]
	0x03511280 BL 0x1C16CF4
	0x03511284 MOVZ W8, 0x1
	0x03511288 STRB W8, [X21 + 0xAE7]
	0x0351128C LDR X0, [X22]
	0x03511290 BL 0x1C16F10
	0x03511294 MOV X1, X31
	0x03511298 MOV X21, X0
	0x0351129C BL 0x33BDD8C
	0x035112A0 MOV X1, X19
	0x035112A4 BL 0x350E198
	0x035112A8 CBZ X21, 0x351132C
	0x035112AC STRH W0, [X21 + 0x10]
	0x035112B0 CBZ X19, 0x351132C
	0x035112B4 MOV X0, X19
	0x035112B8 MOV X1, X31
	0x035112BC BL 0x351EF00
	0x035112C0 MOV W2, W0
	0x035112C4 MOV X0, X20
	0x035112C8 MOV X1, X19
	0x035112CC MOV W3, W31
	0x035112D0 MOV X4, X31
	0x035112D4 BL 0x350D824
	0x035112D8 CBZ X0, 0x35112F8
	0x035112DC ADRP X8, 0xBE4000
	0x035112E0 LDR X8, [X8 + 0x278]
	0x035112E4 LDR X9, [X0]
	0x035112E8 LDR X8, [X8]
	0x035112EC CMP X9, X8
	0x035112F0 CSEL X8, X0, X31, EQ
	0x035112F4 B 0x35112FC
	0x035112F8 MOV X8, X31
	0x035112FC MOV X0, X20
	0x03511300 MOV X1, X19
	0x03511304 MOV X2, X31
	0x03511308 MOV W3, W31
	0x0351130C STR X8, [X21 + 0x18]
	0x03511310 BL 0x3510D98
	0x03511314 STR X0, [X21 + 0x20]
	0x03511318 MOV X0, X21
	0x0351131C LDP X20, X19, [X31 + 0x20]
	0x03511320 LDP X22, X21, [X31 + 0x10]
	0x03511324 LDR X30, [X31], #0x30
	0x03511328 RET
	0x0351132C BL 0x1C16F20
	0x03511330 STR X30, [X31 - 0x50]!
	0x03511334 STP X26, X25, [X31 + 0x10]
	0x03511338 STP X24, X23, [X31 + 0x20]
	0x0351133C STP X22, X21, [X31 + 0x30]
	0x03511340 STP X20, X19, [X31 + 0x40]
	0x03511344 ADRP X23, 0xECE000
	0x03511348 LDRB W8, [X23 + 0xAEA]
	0x0351134C MOV X21, X3
	0x03511350 MOV X19, X2
	0x03511354 MOV X20, X1
	0x03511358 MOV X22, X0
	0x0351135C TBNZ X8, 0x0, 0x35113BC
	0x03511360 ADRP X0, 0xC0B000
	0x03511364 LDR X0, [X0 + 0x388]
	0x03511368 BL 0x1C16CF4
	0x0351136C ADRP X0, 0xC23000
	0x03511370 LDR X0, [X0 + 0x2C0]
	0x03511374 BL 0x1C16CF4
	0x03511378 ADRP X0, 0xC14000
	0x0351137C LDR X0, [X0 + 0x160]
	0x03511380 BL 0x1C16CF4
	0x03511384 ADRP X0, 0xBEB000
	0x03511388 LDR X0, [X0 + 0xBB0]
	0x0351138C BL 0x1C16CF4
	0x03511390 ADRP X0, 0xBEC000
	0x03511394 LDR X0, [X0 + 0x968]
	0x03511398 BL 0x1C16CF4
	0x0351139C ADRP X0, 0xBEA000
	0x035113A0 LDR X0, [X0 + 0xC60]
	0x035113A4 BL 0x1C16CF4
	0x035113A8 ADRP X0, 0xBE2000
	0x035113AC LDR X0, [X0 + 0x6C0]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X20, 0xED0000
	011 Move W8, [X20+2793]
	012 Move X19, X1
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {34}
	017 Move X0, 0xBE4000
	018 Move X0, [X0+1560]
	019 Call 0x1C17CF4
	020 Move X0, 0xC25000
	021 Move X0, [X0+80]
	022 Call 0x1C17CF4
	023 Move X0, 0xBEC000
	024 Move X0, [X0+3840]
	025 Call 0x1C17CF4
	026 Move X0, 0xC25000
	027 Move X0, [X0+800]
	028 Call 0x1C17CF4
	029 Move X0, 0xC25000
	030 Move X0, [X0+744]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X20+2793], W8
	034 Move X1, X19
	035 Move [X31], X31
	036 Move [X31+8], X31
	037 Call Protocol18.ReadCompressedUInt32, X0, X1
	038 Compare X19, 0
	039 JumpIfEqual {248}
	040 Move X21, 0xBEC000
	041 Move X21, [X21+3840]
	042 Move W20, W0
	043 Move X0, X19
	044 Move X1, X31
	045 Call StreamBuffer.ReadByte, X0
	046 Move X8, [X21]
	047 Move W22, W0
	048 Move W9, [X8+224]
	049 Compare W9, 0
	050 JumpIfNotEqual {54}
	051 Move X0, X8
	052 Call 0x1C17DFC
	053 Move X8, [X21]
	054 Move X8, [X8+184]
	055 Move X0, [X8+8]
	056 Compare X0, 0
	057 JumpIfEqual {248}
	058 Move X8, 0xC25000
	059 Move X8, [X8+80]
	060 Add X2, X31, 8
	061 Move W1, W22
	062 Move X3, [X8]
	063 Call Dictionary`2<Byte, Object>.TryGetValue, X0, X1, X2
	064 Move TEMP, X0
	065 And TEMP, TEMP, 1
	066 Compare TEMP, 1
	067 JumpIfNotEqual {181}
	068 Move X8, [X31+8]
	069 Compare X8, 0
	070 JumpIfEqual {248}
	071 Move X0, [X8+24]
	072 Move W1, W20
	073 Move X2, X31
	074 Call Array.CreateInstance, X0, X1
	075 Move X21, X0
	076 Compare W20, 0
	077 JumpIfEqual {237}
	078 Move X25, 0xBE3000
	079 Move X25, [X25+1560]
	080 Move W22, W31
	081 Move X1, X19
	082 Call Protocol18.ReadCompressedUInt32, X0, X1
	083 Move [X31+4], W0
	084 Move TEMP, X0
	085 And TEMP, TEMP, -2147483648
	086 Compare TEMP, -2147483648
	087 JumpIfEqual {249}
	088 Move W23, W0
	089 Move X0, X19
	090 Move X1, X31
	091 Call StreamBuffer.get_Available, X0
	092 NotImplemented "Instruction CMP not yet implemented."
	093 Move W1, [X31+4]
	094 NotImplemented "Instruction CMP not yet implemented."
	095 Move X8, [X31+8]
	096 Compare X8, 0
	097 JumpIfEqual {248}
	098 Move X8, [X8+56]
	099 Compare X8, 0
	100 JumpIfEqual {130}
	101 Move X0, X19
	102 Move X1, X31
	103 Call StreamBuffer.get_Position, X0
	104 Move X8, [X31+8]
	105 Compare X8, 0
	106 JumpIfEqual {248}
	107 Move X8, [X8+56]
	108 Compare X8, 0
	109 JumpIfEqual {248}
	110 Move W24, W0
	111 Move W2, [X31+4]
	112 Move X9, [X8+24]
	113 Move X0, [X8+64]
	114 Move X3, [X8+40]
	115 Move X1, X19
	116 NotImplemented "Instruction BLR not yet implemented."
	117 Move X23, X0
	118 Move X0, X19
	119 Move X1, X31
	120 Call StreamBuffer.get_Position, X0
	121 Move W8, [X31+4]
	122 Subtract W9, W0, W24
	123 NotImplemented "Instruction CMP not yet implemented."
	124 Add W1, W8, W24
	125 Move X0, X19
	126 Move X2, X31
	127 Call StreamBuffer.set_Position, X0, X1
	128 Compare X23, 0
	129 JumpIfNotEqual {153}
	130 Move X0, [X25]
	131 Call 0x1C17D6C
	132 Move W3, [X31+4]
	133 Move X23, X0
	134 Move X0, X19
	135 Move X1, X23
	136 Move W2, W31
	137 Move X4, X31
	138 Call StreamBuffer.Read, X0, X1, X2, X3
	139 Move X8, [X31+8]
	140 Compare X8, 0
	141 JumpIfEqual {248}
	142 Move X8, [X8+40]
	143 Compare X8, 0
	144 JumpIfEqual {248}
	145 Move X9, [X8+24]
	146 Move X0, [X8+64]
	147 Move X2, [X8+40]
	148 Move X1, X23
	149 NotImplemented "Instruction BLR not yet implemented."
	150 Move X23, X0
	151 Compare X23, 0
	152 JumpIfEqual {179}
	153 Move X8, [X31+8]
	154 Compare X8, 0
	155 JumpIfEqual {248}
	156 Move X24, [X8+24]
	157 Move X0, X23
	158 Move X1, X31
	159 Call "il2cpp_vm_object_is_inst", X0
	160 Compare X24, 0
	161 JumpIfEqual {248}
	162 Move X8, [X24]
	163 Move X1, X0
	164 Move X0, X24
	165 Move X9, [X8+680]
	166 Move X2, [X8+688]
	167 NotImplemented "Instruction BLR not yet implemented."
	168 Move TEMP, X0
	169 And TEMP, TEMP, 1
	170 Compare TEMP, 1
	171 JumpIfNotEqual {179}
	172 Compare X21, 0
	173 JumpIfEqual {248}
	174 Move X0, X21
	175 Move X1, X23
	176 Move W2, W22
	177 Move X3, X31
	178 Call Array.SetValue, X0, X1, X2
	179 Add W22, W22, 1
	180 NotImplemented "Instruction CMP not yet implemented."
	181 Move X0, X19
	182 Move X1, X31
	183 Call StreamBuffer.get_Position, X0
	184 Move W23, W0
	185 Compare W20, 0
	186 JumpIfEqual {203}
	187 Move X1, X19
	188 Call Protocol18.ReadCompressedUInt32, X0, X1
	189 Move W21, W0
	190 Move X0, X19
	191 Move X1, X31
	192 Call StreamBuffer.get_Available, X0
	193 NotImplemented "Instruction CMP not yet implemented."
	194 NotImplemented "Instruction CSEL not yet implemented."
	195 Move X0, X19
	196 Move X1, X31
	197 Call StreamBuffer.get_Position, X0
	198 Add W1, W21, W0
	199 Move X0, X19
	200 Move X2, X31
	201 Call StreamBuffer.set_Position, X0, X1
	202 Subtract W20, W20, 1
	203 Move X8, 0xC24000
	204 Move X8, [X8+800]
	205 Move W1, 1
	206 Move X0, [X8]
	207 Call 0x1C17D6C
	208 Move X8, 0xC24000
	209 Move X8, [X8+744]
	210 Move X21, X0
	211 Move X8, [X8]
	212 Move X0, X8
	213 Call 0x1C17F10
	214 Move X1, X31
	215 Move X20, X0
	216 Call UnknownType..ctor, X0
	217 Compare X20, 0
	218 JumpIfEqual {248}
	219 Move X0, X19
	220 Move X1, X31
	221 Move [X20+16], W22
	222 Call StreamBuffer.get_Position, X0
	223 Subtract W8, W0, W23
	224 Move [X20+20], W8
	225 Compare X21, 0
	226 JumpIfEqual {248}
	227 Move X8, [X21]
	228 Move X0, X20
	229 Move X1, [X8+64]
	230 Call 0x1C17E00
	231 Compare X0, 0
	232 JumpIfEqual {322}
	233 Move W8, [X21+24]
	234 Compare W8, 0
	235 JumpIfEqual {325}
	236 Move [X21+32], X20
	237 Move X0, X21
	238 Move X20, [X31+64]
	239 Move X19, [X31+72]
	240 Move X22, [X31+48]
	241 Move X21, [X31+56]
	242 Move X24, [X31+32]
	243 Move X23, [X31+40]
	244 Move X30, [X31+16]
	245 Move X25, [X31+24]
	246 Add X31, X31, 80
	247 Return X0
	248 Call 0x1C17F20
	249 Add X0, X31, 4
	250 Move X1, X31
	251 Call Int32.ToString, X0
	252 Move X20, X0
	253 Move X0, X19
	254 Call 0x19913C0
	255 Move X0, X19
	256 Move X1, X31
	257 Call StreamBuffer.get_Position, X0
	258 Move [X31], W0
	259 Add X0, X31, 0
	260 Move X1, X31
	261 Call Int32.ToString, X0
	262 Move X19, X0
	263 Move X0, 0xC24000
	264 Move X0, [X0+808]
	265 Call 0x1C17D08
	266 Move X21, X0
	267 Move X0, 0xC24000
	268 Move X0, [X0+96]
	269 Move X0, X19
	270 Call 0x19913C0
	271 Move X0, X19
	272 Move X1, X31
	273 Call StreamBuffer.get_Length, X0
	274 Move W20, W0
	275 Move X0, X19
	276 Call 0x19913C0
	277 Move X0, X19
	278 Move W1, W20
	279 Move X2, X31
	280 Call StreamBuffer.set_Position, X0, X1
	281 Add X0, X31, 4
	282 Move X1, X31
	283 Call Int32.ToString, X0
	284 Move X20, X0
	285 Move X0, X19
	286 Call 0x19913C0
	287 Move X0, X19
	288 Move X1, X31
	289 Call StreamBuffer.get_Available, X0
	290 Move [X31], W0
	291 Add X0, X31, 0
	292 Move X1, X31
	293 Call Int32.ToString, X0
	294 Move X19, X0
	295 Move X0, 0xC24000
	296 Move X0, [X0+816]
	297 Call 0x1C17D08
	298 Move X21, X0
	299 Move X0, 0xC24000
	300 Move X0, [X0+824]
	301 Call 0x1C17D08
	302 Move X2, X0
	303 Move X0, X21
	304 Move X1, X20
	305 Move X3, X19
	306 Move X4, X31
	307 Call String.Concat, X0, X1, X2, X3
	308 Move X19, X0
	309 Move X0, 0xC24000
	310 Move X0, [X0+104]
	311 Call 0x1C17D08
	312 Call 0x1C17F10
	313 Move X1, X19
	314 Move X20, X0
	315 Call InvalidDataException..ctor, X0, X1
	316 Move X0, 0xC24000
	317 Move X0, [X0+832]
	318 Call 0x1C17D08
	319 Move X1, X0
	320 Move X0, X20
	321 Call 0x1C17DEC
	322 Call 0x1C17F44
	323 Move X1, X31
	324 Call 0x1C17DEC
	325 Call 0x1C17F28

Method: System.Type ReadDictionaryType(ExitGames.Client.Photon.StreamBuffer stream, out ExitGames.Client.Photon.Protocol18/GpType keyReadType, out ExitGames.Client.Photon.Protocol18/GpType valueReadType)

Disassembly:
	0x03512330 B.CC 0x3512914
	0x03512334 LDR X8, [X8 + 0xC8]
	0x03512338 ADD X8, X8, X9, 0x3, LSL
	0x0351233C LDUR X8, [X8 - 0x8]
	0x03512340 CMP X8, X1
	0x03512344 B.NE 0x3512914
	0x03512348 AND W3, W20, 0x1
	0x0351234C MOV X0, X21
	0x03512350 MOV X1, X19
	0x03512354 MOV X2, X22
	0x03512358 LDP X20, X19, [X31 + 0x30]
	0x0351235C LDP X22, X21, [X31 + 0x20]
	0x03512360 LDP X24, X23, [X31 + 0x10]
	0x03512364 LDR X30, [X31], #0x40
	0x03512368 B 0x35138B0
	0x0351236C CBZ X22, 0x3512684
	0x03512370 ADRP X8, 0xBE8000
	0x03512374 LDR X8, [X8 + 0x2F8]
	0x03512378 MOV X0, X22
	0x0351237C LDR X23, [X8]
	0x03512380 MOV X1, X23
	0x03512384 BL 0x1C16E00
	0x03512388 MOV X2, X0
	0x0351238C CBNZ X0, 0x3512688
	0x03512390 B 0x35125DC
	0x03512394 CBZ X22, 0x351291C
	0x03512398 ADRP X9, 0xC22000
	0x0351239C LDR X9, [X9 + 0x110]
	0x035123A0 LDR X8, [X22]
	0x035123A4 LDR X1, [X9]
	0x035123A8 LDRB W10, [X8 + 0x130]
	0x035123AC LDRB W9, [X1 + 0x130]
	0x035123B0 CMP W10, W9
	0x035123B4 B.CC 0x3512914
	0x035123B8 LDR X8, [X8 + 0xC8]
	0x035123BC ADD X8, X8, X9, 0x3, LSL
	0x035123C0 LDUR X8, [X8 - 0x8]
	0x035123C4 CMP X8, X1
	0x035123C8 B.NE 0x3512914
	0x035123CC LDR X8, [X21]
	0x035123D0 LDR X3, [X22 + 0x18]
	0x035123D4 LDRB W2, [X22 + 0x10]
	0x035123D8 AND W4, W20, 0x1
	0x035123DC LDP X6, X5, [X8 + 0x1E8]
	0x035123E0 MOV X0, X21
	0x035123E4 MOV X1, X19
	0x035123E8 LDP X20, X19, [X31 + 0x30]
	0x035123EC LDP X22, X21, [X31 + 0x20]
	0x035123F0 LDP X24, X23, [X31 + 0x10]
	0x035123F4 LDR X30, [X31], #0x40
	0x035123F8 BR X6
	0x035123FC CBZ X22, 0x3512434
	0x03512400 ADRP X9, 0xC22000
	0x03512404 LDR X9, [X9 + 0x120]
	0x03512408 LDR X8, [X22]
	0x0351240C LDR X1, [X9]
	0x03512410 LDRB W10, [X8 + 0x130]
	0x03512414 LDRB W9, [X1 + 0x130]
	0x03512418 CMP W10, W9
	0x0351241C B.CC 0x3512914
	0x03512420 LDR X8, [X8 + 0xC8]
	0x03512424 ADD X8, X8, X9, 0x3, LSL
	0x03512428 LDUR X8, [X8 - 0x8]
	0x0351242C CMP X8, X1
	0x03512430 B.NE 0x3512914
	0x03512434 LDR X8, [X21]
	0x03512438 LDP X5, X4, [X8 + 0x1F8]
	0x0351243C B 0x3512480
	0x03512440 CBZ X22, 0x3512478
	0x03512444 ADRP X9, 0xC22000
	0x03512448 LDR X9, [X9 + 0x128]
	0x0351244C LDR X8, [X22]
	0x03512450 LDR X1, [X9]
	0x03512454 LDRB W10, [X8 + 0x130]
	0x03512458 LDRB W9, [X1 + 0x130]
	0x0351245C CMP W10, W9
	0x03512460 B.CC 0x3512914
	0x03512464 LDR X8, [X8 + 0xC8]
	0x03512468 ADD X8, X8, X9, 0x3, LSL
	0x0351246C LDUR X8, [X8 - 0x8]
	0x03512470 CMP X8, X1
	0x03512474 B.NE 0x3512914
	0x03512478 LDR X8, [X21]
	0x0351247C LDP X5, X4, [X8 + 0x1C8]
	0x03512480 AND W3, W20, 0x1
	0x03512484 MOV X0, X21
	0x03512488 MOV X1, X19
	0x0351248C MOV X2, X22
	0x03512490 LDP X20, X19, [X31 + 0x30]
	0x03512494 LDP X22, X21, [X31 + 0x20]
	0x03512498 LDP X24, X23, [X31 + 0x10]
	0x0351249C LDR X30, [X31], #0x40
	0x035124A0 BR X5
	0x035124A4 CBZ X22, 0x35126A8
	0x035124A8 ADRP X8, 0xBE3000
	0x035124AC LDR X8, [X8 + 0x9B8]
	0x035124B0 MOV X0, X22
	0x035124B4 LDR X23, [X8]
	0x035124B8 MOV X1, X23
	0x035124BC BL 0x1C16E00
	0x035124C0 MOV X2, X0
	0x035124C4 CBNZ X0, 0x35126AC
	0x035124C8 B 0x35125DC
	0x035124CC CBZ X22, 0x35126CC
	0x035124D0 ADRP X8, 0xBE1000
	0x035124D4 LDR X8, [X8 + 0x618]
	0x035124D8 MOV X0, X22
	0x035124DC LDR X23, [X8]
	0x035124E0 MOV X1, X23
	0x035124E4 BL 0x1C16E00
	0x035124E8 MOV X2, X0
	0x035124EC CBNZ X0, 0x35126D0
	0x035124F0 B 0x35125DC
	0x035124F4 CBZ X22, 0x35126F0
	0x035124F8 ADRP X8, 0xC09000
	0x035124FC LDR X8, [X8 + 0x820]
	0x03512500 MOV X0, X22
	0x03512504 LDR X23, [X8]
	0x03512508 MOV X1, X23
	0x0351250C BL 0x1C16E00
	0x03512510 MOV X2, X0
	0x03512514 CBNZ X0, 0x35126F4
	0x03512518 B 0x35125DC
	0x0351251C CBZ X22, 0x3512714
	0x03512520 ADRP X8, 0xBE1000
	0x03512524 LDR X8, [X8 + 0x638]
	0x03512528 MOV X0, X22
	0x0351252C LDR X23, [X8]
	0x03512530 MOV X1, X23
	0x03512534 BL 0x1C16E00
	0x03512538 MOV X2, X0
	0x0351253C CBNZ X0, 0x3512718
	0x03512540 B 0x35125DC
	0x03512544 CBZ X22, 0x3512738
	0x03512548 ADRP X8, 0xC12000
	0x0351254C LDR X8, [X8 + 0x830]
	0x03512550 MOV X0, X22
	0x03512554 LDR X23, [X8]
	0x03512558 MOV X1, X23
	0x0351255C BL 0x1C16E00
	0x03512560 MOV X2, X0
	0x03512564 CBNZ X0, 0x351273C
	0x03512568 B 0x35125DC
	0x0351256C AND W3, W20, 0x1
	0x03512570 MOV X0, X21
	0x03512574 MOV X1, X19
	0x03512578 MOV X2, X22
	0x0351257C LDP X20, X19, [X31 + 0x30]
	0x03512580 LDP X22, X21, [X31 + 0x20]
	0x03512584 LDP X24, X23, [X31 + 0x10]
	0x03512588 LDR X30, [X31], #0x40
	0x0351258C B 0x35144CC
	0x03512590 CBZ X22, 0x351275C
	0x03512594 ADRP X8, 0xBE2000
	0x03512598 LDR X8, [X8 + 0xE58]
	0x0351259C MOV X0, X22
	0x035125A0 LDR X23, [X8]
	0x035125A4 MOV X1, X23
	0x035125A8 BL 0x1C16E00
	0x035125AC MOV X2, X0
	0x035125B0 CBNZ X0, 0x3512760
	0x035125B4 B 0x35125DC
	0x035125B8 CBZ X22, 0x3512780
	0x035125BC ADRP X8, 0xC12000
	0x035125C0 LDR X8, [X8 + 0x838]
	0x035125C4 MOV X0, X22
	0x035125C8 LDR X23, [X8]
	0x035125CC MOV X1, X23
	0x035125D0 BL 0x1C16E00
	0x035125D4 MOV X2, X0
	0x035125D8 CBNZ X0, 0x3512784

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X23, 0xECE000
	011 Move W8, [X23+2794]
	012 Move X21, X3
	013 Move X19, X2
	014 Move X20, X1
	015 Move X22, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {43}
	020 Move X0, 0xC0B000
	021 Move X0, [X0+904]
	022 Call 0x1C17CF4
	023 Move X0, 0xC23000
	024 Move X0, [X0+704]
	025 Call 0x1C17CF4
	026 Move X0, 0xC14000
	027 Move X0, [X0+352]
	028 Call 0x1C17CF4
	029 Move X0, 0xBEB000
	030 Move X0, [X0+2992]
	031 Call 0x1C17CF4
	032 Move X0, 0xBEC000
	033 Move X0, [X0+2408]
	034 Call 0x1C17CF4
	035 Move X0, 0xBEA000
	036 Move X0, [X0+3168]
	037 Call 0x1C17CF4
	038 Move X0, 0xBE2000
	039 Move X0, [X0+1728]
	040 Call 0x1C17CF4
	041 Move W8, 1
	042 Move [X23+2794], W8
	043 Compare X20, 0
	044 JumpIfEqual {181}
	045 Move X26, 0xBEB000
	046 Move X24, 0xBE2000
	047 Move X26, [X26+2992]
	048 Move X24, [X24+1728]
	049 Move X0, X20
	050 Move X1, X31
	051 Call StreamBuffer.ReadByte, X0
	052 Move [X19], W0
	053 Move X0, X20
	054 Move X1, X31
	055 Call StreamBuffer.ReadByte, X0
	056 Move [X21], W0
	057 Move W19, [X19]
	058 Move W23, W0
	059 Compare W19, 0
	060 JumpIfEqual {68}
	061 Move X0, [X26]
	062 Move W8, [X0+224]
	063 Compare W8, 0
	064 JumpIfNotEqual {66}
	065 Call 0x1C17DFC
	066 Move W0, W19
	067 Call Protocol18.GetAllowedDictionaryKeyTypes, X0
	068 Move X8, 0xBEC000
	069 Move X0, [X24]
	070 Move X8, [X8+2408]
	071 Move W9, [X0+224]
	072 Move X19, [X8]
	073 Compare W9, 0
	074 JumpIfNotEqual {76}
	075 Call 0x1C17DFC
	076 Move X0, X19
	077 Move X1, X31
	078 Call Type.GetTypeFromHandle, X0
	079 Move X25, 0xC0B000
	080 Move X25, [X25+904]
	081 And W8, W23, 255
	082 Move X19, X0
	083 NotImplemented "Instruction CMP not yet implemented."
	084 NotImplemented "Instruction CMP not yet implemented."
	085 NotImplemented "Instruction CMP not yet implemented."
	086 NotImplemented "Instruction CMP not yet implemented."
	087 Move X8, 0xC23000
	088 Move X0, [X24]
	089 Move X8, [X8+704]
	090 Compare W8, 0
	091 JumpIfEqual {103}
	092 NotImplemented "Instruction CMP not yet implemented."
	093 Move X0, X22
	094 Move X1, X20
	095 Call Protocol18.ReadDictionaryType, X0, X1
	096 Move X8, 0xC14000
	097 Move X0, [X24]
	098 Move X8, [X8+352]
	099 Move X1, X20
	100 Call Protocol18.GetDictArrayType, X0, X1
	101 Move X20, X0
	102 Move [X21], W31
	103 Move X8, 0xBEC000
	104 Move X0, [X24]
	105 Move X8, [X8+2408]
	106 Move W9, [X0+224]
	107 Move X20, [X8]
	108 Compare W9, 0
	109 JumpIfNotEqual {111}
	110 Call 0x1C17DFC
	111 Move X0, X20
	112 Move X1, X31
	113 Call Type.GetTypeFromHandle, X0
	114 Move X0, [X26]
	115 Move W8, [X0+224]
	116 Compare W8, 0
	117 JumpIfNotEqual {119}
	118 Call 0x1C17DFC
	119 Move W0, W23
	120 Call Protocol18.GetClrArrayType, X0
	121 Move X20, X0
	122 Move X0, [X24]
	123 Move X22, 0xBEA000
	124 Move X21, [X25]
	125 Move W8, [X0+224]
	126 Move X22, [X22+3168]
	127 Compare W8, 0
	128 JumpIfNotEqual {130}
	129 Call 0x1C17DFC
	130 Move X0, X21
	131 Move X1, X31
	132 Call Type.GetTypeFromHandle, X0
	133 Move X8, [X22]
	134 Move X21, X0
	135 Move W1, 2
	136 Move X0, X8
	137 Call 0x1C17D6C
	138 Compare X0, 0
	139 JumpIfEqual {181}
	140 Move X22, X0
	141 Compare X19, 0
	142 JumpIfEqual {149}
	143 Move X8, [X22]
	144 Move X0, X19
	145 Move X1, [X8+64]
	146 Call 0x1C17E00
	147 Compare X0, 0
	148 JumpIfEqual {183}
	149 Move W8, [X22+24]
	150 Compare W8, 0
	151 JumpIfEqual {182}
	152 Move [X22+32], X19
	153 Compare X20, 0
	154 JumpIfEqual {162}
	155 Move X8, [X22]
	156 Move X0, X20
	157 Move X1, [X8+64]
	158 Call 0x1C17E00
	159 Compare X0, 0
	160 JumpIfEqual {183}
	161 Move W8, [X22+24]
	162 NotImplemented "Instruction CMP not yet implemented."
	163 Move [X22+40], X20
	164 Compare X21, 0
	165 JumpIfEqual {181}
	166 Move X8, [X21]
	167 Move X0, X21
	168 Move X1, X22
	169 Move X20, [X31+64]
	170 Move X19, [X31+72]
	171 Move X3, [X8+2264]
	172 Move X2, [X8+2272]
	173 Move X22, [X31+48]
	174 Move X21, [X31+56]
	175 Move X24, [X31+32]
	176 Move X23, [X31+40]
	177 Move X26, [X31+16]
	178 Move X25, [X31+24]
	179 Move X30, [X31+80]
	180 CallNoReturn X3
	181 Call 0x1C17F20
	182 Call 0x1C17F28
	183 Call 0x1C17F44
	184 Move X1, X31
	185 Call 0x1C17DEC

Method: System.Type ReadDictionaryType(ExitGames.Client.Photon.StreamBuffer stream)

Disassembly:
	0x035125DC MOV X0, X22
	0x035125E0 MOV X1, X23
	0x035125E4 BL 0x1C171E0
	0x035125E8 AND W3, W20, 0x1
	0x035125EC MOV X0, X21
	0x035125F0 MOV X1, X19
	0x035125F4 MOV X2, X22
	0x035125F8 LDP X20, X19, [X31 + 0x30]
	0x035125FC LDP X22, X21, [X31 + 0x20]
	0x03512600 LDP X24, X23, [X31 + 0x10]
	0x03512604 LDR X30, [X31], #0x40
	0x03512608 B 0x35131F0
	0x0351260C CBZ X22, 0x35127A4
	0x03512610 ADRP X8, 0xC22000
	0x03512614 LDR X8, [X8 + 0x318]
	0x03512618 MOV X0, X22
	0x0351261C LDR X20, [X8]
	0x03512620 MOV X1, X20
	0x03512624 BL 0x1C16E00
	0x03512628 MOV X2, X0
	0x0351262C CBNZ X0, 0x35127A8
	0x03512630 MOV X0, X22
	0x03512634 MOV X1, X20
	0x03512638 BL 0x1C171E0
	0x0351263C AND W3, W20, 0x1
	0x03512640 MOV X0, X21
	0x03512644 MOV X1, X19
	0x03512648 MOV X2, X22
	0x0351264C LDP X20, X19, [X31 + 0x30]
	0x03512650 LDP X22, X21, [X31 + 0x20]
	0x03512654 LDP X24, X23, [X31 + 0x10]
	0x03512658 LDR X30, [X31], #0x40
	0x0351265C B 0x35140D4
	0x03512660 MOV X2, X31
	0x03512664 AND W3, W20, 0x1
	0x03512668 MOV X0, X21
	0x0351266C MOV X1, X19
	0x03512670 LDP X20, X19, [X31 + 0x30]
	0x03512674 LDP X22, X21, [X31 + 0x20]
	0x03512678 LDP X24, X23, [X31 + 0x10]
	0x0351267C LDR X30, [X31], #0x40
	0x03512680 B 0x35137D4
	0x03512684 MOV X2, X31
	0x03512688 AND W3, W20, 0x1
	0x0351268C MOV X0, X21
	0x03512690 MOV X1, X19
	0x03512694 LDP X20, X19, [X31 + 0x30]
	0x03512698 LDP X22, X21, [X31 + 0x20]
	0x0351269C LDP X24, X23, [X31 + 0x10]
	0x035126A0 LDR X30, [X31], #0x40
	0x035126A4 B 0x3513CD0
	0x035126A8 MOV X2, X31
	0x035126AC AND W3, W20, 0x1
	0x035126B0 MOV X0, X21
	0x035126B4 MOV X1, X19
	0x035126B8 LDP X20, X19, [X31 + 0x30]
	0x035126BC LDP X22, X21, [X31 + 0x20]
	0x035126C0 LDP X24, X23, [X31 + 0x10]
	0x035126C4 LDR X30, [X31], #0x40
	0x035126C8 B 0x3514280
	0x035126CC MOV X2, X31
	0x035126D0 AND W3, W20, 0x1
	0x035126D4 MOV X0, X21
	0x035126D8 MOV X1, X19
	0x035126DC LDP X20, X19, [X31 + 0x30]
	0x035126E0 LDP X22, X21, [X31 + 0x20]
	0x035126E4 LDP X24, X23, [X31 + 0x10]
	0x035126E8 LDR X30, [X31], #0x40
	0x035126EC B 0x3513C68
	0x035126F0 MOV X2, X31
	0x035126F4 AND W3, W20, 0x1
	0x035126F8 MOV X0, X21
	0x035126FC MOV X1, X19
	0x03512700 LDP X20, X19, [X31 + 0x30]
	0x03512704 LDP X22, X21, [X31 + 0x20]
	0x03512708 LDP X24, X23, [X31 + 0x10]
	0x0351270C LDR X30, [X31], #0x40
	0x03512710 B 0x35141DC
	0x03512714 MOV X2, X31
	0x03512718 AND W3, W20, 0x1
	0x0351271C MOV X0, X21
	0x03512720 MOV X1, X19
	0x03512724 LDP X20, X19, [X31 + 0x30]
	0x03512728 LDP X22, X21, [X31 + 0x20]
	0x0351272C LDP X24, X23, [X31 + 0x10]
	0x03512730 LDR X30, [X31], #0x40
	0x03512734 B 0x351403C
	0x03512738 MOV X2, X31
	0x0351273C AND W3, W20, 0x1
	0x03512740 MOV X0, X21
	0x03512744 MOV X1, X19
	0x03512748 LDP X20, X19, [X31 + 0x30]
	0x0351274C LDP X22, X21, [X31 + 0x20]
	0x03512750 LDP X24, X23, [X31 + 0x10]
	0x03512754 LDR X30, [X31], #0x40
	0x03512758 B 0x3513FA4
	0x0351275C MOV X2, X31
	0x03512760 AND W3, W20, 0x1
	0x03512764 MOV X0, X21
	0x03512768 MOV X1, X19
	0x0351276C LDP X20, X19, [X31 + 0x30]
	0x03512770 LDP X22, X21, [X31 + 0x20]
	0x03512774 LDP X24, X23, [X31 + 0x10]
	0x03512778 LDR X30, [X31], #0x40
	0x0351277C B 0x3513AF4
	0x03512780 MOV X2, X31
	0x03512784 AND W3, W20, 0x1
	0x03512788 MOV X0, X21
	0x0351278C MOV X1, X19
	0x03512790 LDP X20, X19, [X31 + 0x30]
	0x03512794 LDP X22, X21, [X31 + 0x20]
	0x03512798 LDP X24, X23, [X31 + 0x10]
	0x0351279C LDR X30, [X31], #0x40
	0x035127A0 B 0x3513B98
	0x035127A4 MOV X2, X31
	0x035127A8 MOV X0, X21
	0x035127AC MOV X1, X19
	0x035127B0 LDP X20, X19, [X31 + 0x30]
	0x035127B4 LDP X22, X21, [X31 + 0x20]
	0x035127B8 LDP X24, X23, [X31 + 0x10]
	0x035127BC MOV W3, W31
	0x035127C0 LDR X30, [X31], #0x40
	0x035127C4 B 0x3513EAC
	0x035127C8 MOV X0, X22
	0x035127CC BL 0x1C16E08
	0x035127D0 LDP X2, X3, [X0]
	0x035127D4 AND W4, W20, 0x1
	0x035127D8 MOV X0, X21
	0x035127DC MOV X1, X19
	0x035127E0 LDP X20, X19, [X31 + 0x30]
	0x035127E4 LDP X22, X21, [X31 + 0x20]
	0x035127E8 LDP X24, X23, [X31 + 0x10]
	0x035127EC LDR X30, [X31], #0x40
	0x035127F0 B 0x35129A0
	0x035127F4 AND W3, W20, 0x1
	0x035127F8 MOV X0, X21
	0x035127FC MOV X1, X19
	0x03512800 MOV X2, X22
	0x03512804 LDP X20, X19, [X31 + 0x30]
	0x03512808 LDP X22, X21, [X31 + 0x20]
	0x0351280C LDP X24, X23, [X31 + 0x10]
	0x03512810 LDR X30, [X31], #0x40
	0x03512814 B 0x3512920
	0x03512818 LDR W8, [X22 + 0x10]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X19, 0xECE000
	010 Move W8, [X19+2795]
	011 Move X20, X1
	012 Move X21, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {34}
	017 Move X0, 0xC0B000
	018 Move X0, [X0+904]
	019 Call 0x1C17CF4
	020 Move X0, 0xBEB000
	021 Move X0, [X0+2992]
	022 Call 0x1C17CF4
	023 Move X0, 0xBEC000
	024 Move X0, [X0+2408]
	025 Call 0x1C17CF4
	026 Move X0, 0xBEA000
	027 Move X0, [X0+3168]
	028 Call 0x1C17CF4
	029 Move X0, 0xBE2000
	030 Move X0, [X0+1728]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X19+2795], W8
	034 Compare X20, 0
	035 JumpIfEqual {159}
	036 Move X25, 0xBEB000
	037 Move X23, 0xBE2000
	038 Move X25, [X25+2992]
	039 Move X23, [X23+1728]
	040 Move X0, X20
	041 Move X1, X31
	042 Call StreamBuffer.ReadByte, X0
	043 Move W19, W0
	044 And W24, W0, 255
	045 Move X0, X20
	046 Move X1, X31
	047 Call StreamBuffer.ReadByte, X0
	048 Move W22, W0
	049 Compare W24, 0
	050 JumpIfEqual {58}
	051 Move X0, [X25]
	052 Move W8, [X0+224]
	053 Compare W8, 0
	054 JumpIfNotEqual {56}
	055 Call 0x1C17DFC
	056 Move W0, W19
	057 Call Protocol18.GetAllowedDictionaryKeyTypes, X0
	058 Move X8, 0xBEC000
	059 Move X0, [X23]
	060 Move X8, [X8+2408]
	061 Move W9, [X0+224]
	062 Move X19, [X8]
	063 Compare W9, 0
	064 JumpIfNotEqual {66}
	065 Call 0x1C17DFC
	066 Move X0, X19
	067 Move X1, X31
	068 Call Type.GetTypeFromHandle, X0
	069 Move X24, 0xC0B000
	070 Move X24, [X24+904]
	071 And W8, W22, 255
	072 Move X19, X0
	073 NotImplemented "Instruction CMP not yet implemented."
	074 NotImplemented "Instruction CMP not yet implemented."
	075 Compare W8, 0
	076 JumpIfNotEqual {93}
	077 Move X8, 0xBEC000
	078 Move X0, [X23]
	079 Move X8, [X8+2408]
	080 Move W9, [X0+224]
	081 Move X20, [X8]
	082 Compare W9, 0
	083 JumpIfNotEqual {85}
	084 Call 0x1C17DFC
	085 Move X0, X20
	086 Move X1, X31
	087 Call Type.GetTypeFromHandle, X0
	088 Move X1, X20
	089 Call Protocol18.GetDictArrayType, X0, X1
	090 Move X0, X21
	091 Move X1, X20
	092 Call Protocol18.ReadDictionaryType, X0, X1
	093 Move X0, [X25]
	094 Move W8, [X0+224]
	095 Compare W8, 0
	096 JumpIfNotEqual {98}
	097 Call 0x1C17DFC
	098 Move W0, W22
	099 Call Protocol18.GetClrArrayType, X0
	100 Move X20, X0
	101 Move X0, [X23]
	102 Move X22, 0xBEA000
	103 Move X21, [X24]
	104 Move W8, [X0+224]
	105 Move X22, [X22+3168]
	106 Compare W8, 0
	107 JumpIfNotEqual {109}
	108 Call 0x1C17DFC
	109 Move X0, X21
	110 Move X1, X31
	111 Call Type.GetTypeFromHandle, X0
	112 Move X8, [X22]
	113 Move X21, X0
	114 Move W1, 2
	115 Move X0, X8
	116 Call 0x1C17D6C
	117 Compare X0, 0
	118 JumpIfEqual {159}
	119 Move X22, X0
	120 Compare X19, 0
	121 JumpIfEqual {128}
	122 Move X8, [X22]
	123 Move X0, X19
	124 Move X1, [X8+64]
	125 Call 0x1C17E00
	126 Compare X0, 0
	127 JumpIfEqual {161}
	128 Move W8, [X22+24]
	129 Compare W8, 0
	130 JumpIfEqual {160}
	131 Move [X22+32], X19
	132 Compare X20, 0
	133 JumpIfEqual {141}
	134 Move X8, [X22]
	135 Move X0, X20
	136 Move X1, [X8+64]
	137 Call 0x1C17E00
	138 Compare X0, 0
	139 JumpIfEqual {161}
	140 Move W8, [X22+24]
	141 NotImplemented "Instruction CMP not yet implemented."
	142 Move [X22+40], X20
	143 Compare X21, 0
	144 JumpIfEqual {159}
	145 Move X8, [X21]
	146 Move X0, X21
	147 Move X1, X22
	148 Move X20, [X31+48]
	149 Move X19, [X31+56]
	150 Move X3, [X8+2264]
	151 Move X2, [X8+2272]
	152 Move X22, [X31+32]
	153 Move X21, [X31+40]
	154 Move X24, [X31+16]
	155 Move X23, [X31+24]
	156 Move X30, [X31+64]
	157 Move X25, [X31+72]
	158 CallNoReturn X3
	159 Call 0x1C17F20
	160 Call 0x1C17F28
	161 Call 0x1C17F44
	162 Move X1, X31
	163 Call 0x1C17DEC

Method: System.Type GetDictArrayType(ExitGames.Client.Photon.StreamBuffer stream)

Disassembly:
	0x0351281C SUB W8, W8, 0x1
	0x03512820 CMP W8, 0x6
	0x03512824 B.HI 0x3511FDC
	0x03512828 ADRP X9, 0xFFFFFFFFFD684000
	0x0351282C ADD X9, X9, 0xCE8
	0x03512830 ADR X10, 0x10
	0x03512834 LDRB W11, [X9, X8, LSL]
	0x03512838 ADD X10, X10, X11, 0x2, LSL
	0x0351283C BR X10
	0x03512840 ADRP X8, 0xC22000
	0x03512844 LDR X8, [X8 + 0x130]
	0x03512848 MOV X0, X22
	0x0351284C LDR X1, [X8]
	0x03512850 BL 0x228F9C8
	0x03512854 AND W2, W0, 0x1
	0x03512858 B 0x3512078
	0x0351285C ADRP X8, 0xC22000
	0x03512860 LDR X8, [X8 + 0x138]
	0x03512864 MOV X0, X22
	0x03512868 LDR X1, [X8]
	0x0351286C BL 0x228FA84
	0x03512870 AND W3, W20, 0x1
	0x03512874 MOV X1, X19
	0x03512878 MOV W2, W0
	0x0351287C B 0x35120CC
	0x03512880 ADRP X8, 0xC22000
	0x03512884 LDR X8, [X8 + 0x148]
	0x03512888 MOV X0, X22
	0x0351288C LDR X1, [X8]
	0x03512890 BL 0x228FBFC
	0x03512894 AND W3, W20, 0x1
	0x03512898 MOV X1, X19
	0x0351289C MOV W2, W0
	0x035128A0 B 0x3512118
	0x035128A4 ADRP X8, 0xC22000
	0x035128A8 LDR X8, [X8 + 0x150]
	0x035128AC MOV X0, X22
	0x035128B0 LDR X1, [X8]
	0x035128B4 BL 0x228FCB8
	0x035128B8 AND W3, W20, 0x1
	0x035128BC MOV W2, W0
	0x035128C0 B 0x351227C
	0x035128C4 ADRP X8, 0xC22000
	0x035128C8 LDR X8, [X8 + 0x158]
	0x035128CC MOV X0, X22
	0x035128D0 LDR X1, [X8]
	0x035128D4 BL 0x228FD74
	0x035128D8 AND W3, W20, 0x1
	0x035128DC MOV X2, X0
	0x035128E0 B 0x35122CC
	0x035128E4 ADRP X8, 0xC22000
	0x035128E8 LDR X8, [X8 + 0x160]
	0x035128EC MOV X0, X22
	0x035128F0 LDR X1, [X8]
	0x035128F4 BL 0x228FE30
	0x035128F8 B 0x351215C
	0x035128FC ADRP X8, 0xC22000
	0x03512900 LDR X8, [X8 + 0x140]
	0x03512904 MOV X0, X22
	0x03512908 LDR X1, [X8]
	0x0351290C BL 0x228FB40
	0x03512910 B 0x35121AC

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0xECE000
	007 Move W8, [X20+2796]
	008 Move X19, X1
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xBEB000
	014 Move X0, [X0+2992]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X20+2796], W8
	018 Compare X19, 0
	019 JumpIfEqual {68}
	020 Move X22, 0xBEB000
	021 Move X22, [X22+2992]
	022 Move X0, X19
	023 Move X1, X31
	024 Call StreamBuffer.ReadByte, X0
	025 And W8, W0, 255
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move W21, W31
	028 Move X0, X19
	029 Move X1, X31
	030 Add W21, W21, 1
	031 Call StreamBuffer.ReadByte, X0
	032 And W8, W0, 255
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move W20, W0
	035 Move W20, W0
	036 Move W21, W31
	037 Move X0, [X22]
	038 Move W8, [X0+224]
	039 Compare W8, 0
	040 JumpIfNotEqual {42}
	041 Call 0x1C17DFC
	042 Move W0, W20
	043 Call Protocol18.GetClrArrayType, X0
	044 Compare X0, 0
	045 JumpIfEqual {68}
	046 Move X8, [X0]
	047 Move X9, [X8+2216]
	048 Move X1, [X8+2224]
	049 NotImplemented "Instruction BLR not yet implemented."
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Move X19, W21
	052 Move W20, 1
	053 Compare X0, 0
	054 JumpIfEqual {68}
	055 Move X8, [X0]
	056 Move X9, [X8+2216]
	057 Move X1, [X8+2224]
	058 NotImplemented "Instruction BLR not yet implemented."
	059 Move W8, W20
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Add W20, W20, 1
	062 Move X20, [X31+32]
	063 Move X19, [X31+40]
	064 Move X22, [X31+16]
	065 Move X21, [X31+24]
	066 Move X30, [X31+48]
	067 Return X0
	068 Call 0x1C17F20

Method: System.Collections.IDictionary ReadDictionary(ExitGames.Client.Photon.StreamBuffer stream, ExitGames.Client.Photon.IProtocol/DeserializationFlags flags, ExitGames.Client.Photon.ParameterDictionary parameters)

Disassembly:
	0x03510508 LDP X20, X19, [X31 + 0x20]
	0x0351050C LDP X22, X21, [X31 + 0x10]
	0x03510510 LDR X30, [X31], #0x30
	0x03510514 RET
	0x03510518 BL 0x1C16F28
	0x0351051C BL 0x1C16F20
	0x03510520 STR X30, [X31 - 0x60]!
	0x03510524 STP X28, X27, [X31 + 0x10]
	0x03510528 STP X26, X25, [X31 + 0x20]
	0x0351052C STP X24, X23, [X31 + 0x30]
	0x03510530 STP X22, X21, [X31 + 0x40]
	0x03510534 STP X20, X19, [X31 + 0x50]
	0x03510538 ADRP X23, 0xECF000
	0x0351053C LDRB W8, [X23 + 0xAF8]
	0x03510540 MOV X19, X3
	0x03510544 MOV W20, W2
	0x03510548 MOV X21, X1
	0x0351054C MOV X22, X0
	0x03510550 TBNZ X8, 0x0, 0x3510568
	0x03510554 ADRP X0, 0xBE3000
	0x03510558 LDR X0, [X0 + 0xEF0]
	0x0351055C BL 0x1C16CF4
	0x03510560 MOVZ W8, 0x1
	0x03510564 STRB W8, [X23 + 0xAF8]
	0x03510568 MOV X1, X21
	0x0351056C BL 0x35108F4
	0x03510570 CBZ W0, 0x351064C
	0x03510574 ADRP X28, 0xBE3000
	0x03510578 LDR X28, [X28 + 0xEF0]
	0x0351057C MOV W23, W0
	0x03510580 MOV X26, X31
	0x03510584 MOV X25, X31
	0x03510588 MOV W24, W31
	0x0351058C MOV X0, X22
	0x03510590 MOV X1, X21
	0x03510594 MOV W2, W20
	0x03510598 MOV X3, X19
	0x0351059C BL 0x350EE44
	0x035105A0 CBZ X0, 0x351063C
	0x035105A4 LDR X9, [X0]
	0x035105A8 LDR X8, [X28]
	0x035105AC MOV X27, X0
	0x035105B0 LDRB W11, [X9 + 0x130]
	0x035105B4 LDRB W10, [X8 + 0x130]
	0x035105B8 CMP W11, W10
	0x035105BC B.CC 0x351063C
	0x035105C0 LDR X9, [X9 + 0xC8]
	0x035105C4 ADD X9, X9, X10, 0x3, LSL
	0x035105C8 LDUR X9, [X9 - 0x8]
	0x035105CC CMP X9, X8
	0x035105D0 B.NE 0x351063C
	0x035105D4 CBNZ X26, 0x35105F8
	0x035105D8 MOV X0, X27
	0x035105DC MOV X1, X31
	0x035105E0 BL 0x33BE520
	0x035105E4 MOV W1, W23
	0x035105E8 MOV X2, X31
	0x035105EC MOV X25, X0
	0x035105F0 BL 0x33A2DF8
	0x035105F4 MOV X26, X0
	0x035105F8 MOV X0, X27
	0x035105FC MOV X1, X31
	0x03510600 BL 0x33BE520

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0xED0000
	009 Move X23, 0xBE4000
	010 Move W8, [X24+2797]
	011 Move X23, [X23+1728]
	012 Move X19, X3
	013 Move W20, W2
	014 Move X21, X1
	015 Move X22, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {28}
	020 Move X0, 0xBE4000
	021 Move X0, [X0+2072]
	022 Call 0x1C17CF4
	023 Move X0, 0xBE4000
	024 Move X0, [X0+1728]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X24+2797], W8
	028 Add X2, X31, 12
	029 Add X3, X31, 8
	030 Move X0, X22
	031 Move X1, X21
	032 Move [X31+12], W31
	033 Move [X31+8], W31
	034 Call Protocol18.ReadDictionaryType, X0, X1, X2, X3
	035 Move X8, [X23]
	036 Move X23, X0
	037 Move W9, [X8+224]
	038 Compare W9, 0
	039 JumpIfNotEqual {42}
	040 Move X0, X8
	041 Call 0x1C17DFC
	042 Move X0, X23
	043 Move X1, X31
	044 Move X2, X31
	045 Call Type.op_Equality, X0, X1
	046 Move X24, X31
	047 Move TEMP, X0
	048 And TEMP, TEMP, 1
	049 Compare TEMP, 1
	050 JumpIfEqual {69}
	051 Move X0, X23
	052 Move X1, X31
	053 Call Activator.CreateInstance, X0
	054 Move X8, 0xBE4000
	055 Move X8, [X8+2072]
	056 Move X1, [X8]
	057 Call 0x1C17E00
	058 Move X24, X0
	059 Compare X0, 0
	060 JumpIfEqual {69}
	061 Move W3, [X31+8]
	062 Move W2, [X31+12]
	063 Move X0, X22
	064 Move X1, X21
	065 Move X4, X24
	066 Move W5, W20
	067 Move X6, X19
	068 Call Protocol18.ReadDictionaryElements, X0, X1, X2, X3, X4, X5, X6
	069 Move X0, X24
	070 Move X20, [X31+48]
	071 Move X19, [X31+56]
	072 Move X22, [X31+32]
	073 Move X21, [X31+40]
	074 Move X24, [X31+16]
	075 Move X23, [X31+24]
	076 Move X30, [X31+64]
	077 Return X0

Method: System.Boolean ReadDictionaryElements(ExitGames.Client.Photon.StreamBuffer stream, ExitGames.Client.Photon.Protocol18/GpType keyReadType, ExitGames.Client.Photon.Protocol18/GpType valueReadType, System.Collections.IDictionary dictionary, ExitGames.Client.Photon.IProtocol/DeserializationFlags flags, ExitGames.Client.Photon.ParameterDictionary parameters)

Disassembly:
	0x03512914 MOV X0, X22
	0x03512918 BL 0x1C171E0
	0x0351291C BL 0x1C16F20
	0x03512920 STR X30, [X31 - 0x30]!
	0x03512924 STP X22, X21, [X31 + 0x10]
	0x03512928 STP X20, X19, [X31 + 0x20]
	0x0351292C MOV X19, X2
	0x03512930 MOV X20, X1
	0x03512934 MOV X21, X0
	0x03512938 TBZ X3, 0x0, 0x3512950
	0x0351293C CBZ X20, 0x351299C
	0x03512940 MOVZ W1, 0x43
	0x03512944 MOV X0, X20
	0x03512948 MOV X2, X31
	0x0351294C BL 0x351EFE8
	0x03512950 CBZ X19, 0x351299C
	0x03512954 LDR W22, [X19 + 0x1C]
	0x03512958 MOV X0, X21
	0x0351295C MOV X1, X20
	0x03512960 MOV W2, W22
	0x03512964 BL 0x3515C70
	0x03512968 CBZ X20, 0x351299C
	0x0351296C LDR W2, [X19 + 0x18]
	0x03512970 LDR X1, [X19 + 0x10]
	0x03512974 MOV X0, X20
	0x03512978 MOV W3, W22
	0x0351297C MOV X4, X31
	0x03512980 BL 0x3517F60
	0x03512984 MOV X0, X19
	0x03512988 LDP X20, X19, [X31 + 0x20]
	0x0351298C LDP X22, X21, [X31 + 0x10]
	0x03512990 MOV X1, X31
	0x03512994 LDR X30, [X31], #0x30
	0x03512998 B 0x34EC900
	0x0351299C BL 0x1C16F20
	0x035129A0 STR X30, [X31 - 0x40]!
	0x035129A4 STP X24, X23, [X31 + 0x10]
	0x035129A8 STP X22, X21, [X31 + 0x20]
	0x035129AC STP X20, X19, [X31 + 0x30]
	0x035129B0 ADRP X24, 0xECD000
	0x035129B4 LDRB W8, [X24 + 0xAFF]
	0x035129B8 MOV W23, W4
	0x035129BC MOV X19, X3
	0x035129C0 MOV X20, X2
	0x035129C4 MOV X21, X1
	0x035129C8 MOV X22, X0
	0x035129CC TBNZ X8, 0x0, 0x3512A08
	0x035129D0 ADRP X0, 0xC14000
	0x035129D4 LDR X0, [X0 + 0xCF0]
	0x035129D8 BL 0x1C16CF4
	0x035129DC ADRP X0, 0xC14000
	0x035129E0 LDR X0, [X0 + 0xCF8]
	0x035129E4 BL 0x1C16CF4
	0x035129E8 ADRP X0, 0xC14000
	0x035129EC LDR X0, [X0 + 0xD00]
	0x035129F0 BL 0x1C16CF4
	0x035129F4 ADRP X0, 0xC09000
	0x035129F8 LDR X0, [X0 + 0x5B0]
	0x035129FC BL 0x1C16CF4
	0x03512A00 MOVZ W8, 0x1
	0x03512A04 STRB W8, [X24 + 0xAFF]
	0x03512A08 TBZ X23, 0x0, 0x3512A20
	0x03512A0C CBZ X21, 0x3512AA4
	0x03512A10 MOVZ W1, 0x43
	0x03512A14 MOV X0, X21
	0x03512A18 MOV X2, X31
	0x03512A1C BL 0x351EFE8
	0x03512A20 ADRP X24, 0xC09000
	0x03512A24 LDR X24, [X24 + 0x5B0]
	0x03512A28 UBFM X23, X19, 0x20, 0x3F
	0x03512A2C LDR X0, [X24]
	0x03512A30 LDR W8, [X0 + 0xE0]
	0x03512A34 CBNZ W8, 0x3512A3C
	0x03512A38 BL 0x1C16DFC
	0x03512A3C MOV X0, X22
	0x03512A40 MOV X1, X21
	0x03512A44 MOV W2, W23
	0x03512A48 BL 0x3515C70
	0x03512A4C CMP W23, 0x1
	0x03512A50 B.LT 0x3512A90
	0x03512A54 LDR X0, [X24]
	0x03512A58 LDR W8, [X0 + 0xE0]
	0x03512A5C CBNZ W8, 0x3512A64
	0x03512A60 BL 0x1C16DFC
	0x03512A64 CBZ X21, 0x3512AA4
	0x03512A68 MOV X0, X21
	0x03512A6C MOV X1, X20
	0x03512A70 MOV W2, W19
	0x03512A74 MOV W3, W23
	0x03512A78 LDP X20, X19, [X31 + 0x30]
	0x03512A7C LDP X22, X21, [X31 + 0x20]
	0x03512A80 LDP X24, X23, [X31 + 0x10]
	0x03512A84 MOV X4, X31

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X26, 0xECE000
	014 Move W8, [X26+2798]
	015 Move X19, X6
	016 Move W20, W5
	017 Move X21, X4
	018 Move W22, W3
	019 Move W23, W2
	020 Move X24, X1
	021 Move X25, X0
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {31}
	026 Move X0, 0xBE2000
	027 Move X0, [X0+2072]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X26+2798], W8
	031 Move X1, X24
	032 Call Protocol18.ReadCompressedUInt32, X0, X1
	033 Compare W0, 0
	034 JumpIfEqual {91}
	035 Move W26, W0
	036 Move W29, W31
	037 Move X0, X25
	038 Move X1, X24
	039 And W31, W23, 255
	040 Move W2, W23
	041 Move W3, W31
	042 Move X4, X31
	043 Call Protocol18.Read, X0, X1, X2, X3, X4
	044 Move W2, W20
	045 Move X3, X19
	046 Call Protocol18.Read, X0, X1, X2, X3
	047 Move X27, X0
	048 Move X0, X25
	049 Move X1, X24
	050 And W31, W22, 255
	051 Move W2, W22
	052 Move W3, W31
	053 Move X4, X31
	054 Call Protocol18.Read, X0, X1, X2, X3, X4
	055 Move W2, W20
	056 Move X3, X19
	057 Call Protocol18.Read, X0, X1, X2, X3
	058 Move X28, X0
	059 Compare X27, 0
	060 JumpIfEqual {89}
	061 Compare X21, 0
	062 JumpIfEqual {105}
	063 Move X8, [X21]
	064 Move X10, 0xBE2000
	065 NotImplemented "Instruction LDRH not yet implemented."
	066 Move X10, [X10+2072]
	067 Move X1, [X10]
	068 Compare X9, 0
	069 JumpIfEqual {76}
	070 Move X10, [X8+176]
	071 Add X10, X10, 8
	072 NotImplemented "Instruction LDUR not yet implemented."
	073 NotImplemented "Instruction CMP not yet implemented."
	074 Subtract X9, X9, 1
	075 Add X10, X10, 16
	076 Move W2, 5
	077 Move X0, X21
	078 Call 0x1C5D788
	079 Move W9, [X10]
	080 Add W9, W9, 5
	081 Add X8, X8, W9
	082 Add X0, X8, 312
	083 Move X8, [X0]
	084 Move X3, [X0+8]
	085 Move X0, X21
	086 Move X1, X27
	087 Move X2, X28
	088 NotImplemented "Instruction BLR not yet implemented."
	089 Add W29, W29, 1
	090 NotImplemented "Instruction CMP not yet implemented."
	091 Move X20, [X31+80]
	092 Move X19, [X31+88]
	093 Move X22, [X31+64]
	094 Move X21, [X31+72]
	095 Move X24, [X31+48]
	096 Move X23, [X31+56]
	097 Move X26, [X31+32]
	098 Move X25, [X31+40]
	099 Move X28, [X31+16]
	100 Move X27, [X31+24]
	101 Move W0, 1
	102 Move X29, [X31+96]
	103 Move X30, [X31+104]
	104 Return X0
	105 Call 0x1C17F20

Method: System.Object[] ReadObjectArray(ExitGames.Client.Photon.StreamBuffer stream, ExitGames.Client.Photon.IProtocol/DeserializationFlags flags, ExitGames.Client.Photon.ParameterDictionary parameters)

Disassembly:
	0x03510604 CBZ X25, 0x3510670
	0x03510608 LDR X8, [X25]
	0x0351060C MOV X1, X0
	0x03510610 MOV X0, X25
	0x03510614 LDR X9, [X8 + 0x2A8]
	0x03510618 LDR X2, [X8 + 0x2B0]
	0x0351061C BLR X9
	0x03510620 TBZ X0, 0x0, 0x351063C
	0x03510624 CBZ X26, 0x3510670
	0x03510628 MOV X0, X26
	0x0351062C MOV X1, X27
	0x03510630 MOV W2, W24
	0x03510634 MOV X3, X31
	0x03510638 BL 0x339F798
	0x0351063C ADD W24, W24, 0x1
	0x03510640 CMP W23, W24
	0x03510644 B.NE 0x351058C
	0x03510648 B 0x3510650
	0x0351064C MOV X26, X31
	0x03510650 MOV X0, X26
	0x03510654 LDP X20, X19, [X31 + 0x50]
	0x03510658 LDP X22, X21, [X31 + 0x40]
	0x0351065C LDP X24, X23, [X31 + 0x30]
	0x03510660 LDP X26, X25, [X31 + 0x20]
	0x03510664 LDP X28, X27, [X31 + 0x10]
	0x03510668 LDR X30, [X31], #0x60
	0x0351066C RET
	0x03510670 BL 0x1C16F20
	0x03510674 STR X30, [X31 - 0x10]!
	0x03510678 STR W31, [X31 + 0xC]
	0x0351067C CBZ X1, 0x35106D0
	0x03510680 MOV X0, X1
	0x03510684 ADD X2, X31, 0xC
	0x03510688 MOVZ W1, 0x2
	0x0351068C MOV X3, X31
	0x03510690 BL 0x351ECA4
	0x03510694 LDRSW X8, [X31 + 0xC]
	0x03510698 ADD W9, W8, 0x1
	0x0351069C STR W9, [X31 + 0xC]
	0x035106A0 CBZ X0, 0x35106D0
	0x035106A4 LDR W10, [X0 + 0x18]
	0x035106A8 CMP W8, W10
	0x035106AC B.CS 0x35106D4
	0x035106B0 CMP W9, W10
	0x035106B4 B.CS 0x35106D4
	0x035106B8 ADD X10, X0, 0x20
	0x035106BC LDRB W0, [X10, X8, LSL]
	0x035106C0 LDRB W8, [X10, W9, SXTW]
	0x035106C4 BFM W0, W8, 0x18, 0x17
	0x035106C8 LDR X30, [X31], #0x10
	0x035106CC RET
	0x035106D0 BL 0x1C16F20
	0x035106D4 BL 0x1C16F28
	0x035106D8 STR X30, [X31 - 0x10]!
	0x035106DC STR W31, [X31 + 0xC]
	0x035106E0 CBZ X1, 0x3510774
	0x035106E4 MOV X0, X1
	0x035106E8 ADD X2, X31, 0xC
	0x035106EC MOVZ W1, 0x4
	0x035106F0 MOV X3, X31
	0x035106F4 BL 0x351ECA4
	0x035106F8 LDRSW X8, [X31 + 0xC]
	0x035106FC ADD W10, W8, 0x1

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X24, 0xED0000
	012 Move X23, 0xBE4000
	013 Move W8, [X24+2799]
	014 Move X23, [X23+2512]
	015 Move X19, X3
	016 Move W20, W2
	017 Move X21, X1
	018 Move X22, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {28}
	023 Move X0, 0xBE4000
	024 Move X0, [X0+2512]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X24+2799], W8
	028 Move X1, X21
	029 Call Protocol18.ReadCompressedUInt32, X0, X1
	030 Move X8, [X23]
	031 Move W24, W0
	032 Move W1, W24
	033 Move X0, X8
	034 Call 0x1C17D6C
	035 Move X23, X0
	036 Compare W24, 0
	037 JumpIfEqual {62}
	038 Move X25, X31
	039 Move W26, W24
	040 Add X27, X23, 32
	041 Move X0, X22
	042 Move X1, X21
	043 Move W2, W20
	044 Move X3, X19
	045 Call Protocol18.Read, X0, X1, X2, X3
	046 Compare X23, 0
	047 JumpIfEqual {74}
	048 Move X24, X0
	049 Compare X0, 0
	050 JumpIfEqual {57}
	051 Move X8, [X23]
	052 Move X0, X24
	053 Move X1, [X8+64]
	054 Call 0x1C17E00
	055 Compare X0, 0
	056 JumpIfEqual {76}
	057 Move W8, [X23+24]
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Move [X27], X24
	060 Add X25, X25, 1
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Move X0, X23
	063 Move X20, [X31+64]
	064 Move X19, [X31+72]
	065 Move X22, [X31+48]
	066 Move X21, [X31+56]
	067 Move X24, [X31+32]
	068 Move X23, [X31+40]
	069 Move X26, [X31+16]
	070 Move X25, [X31+24]
	071 Move X30, [X31+80]
	072 Move X27, [X31+88]
	073 Return X0
	074 Call 0x1C17F20
	075 Call 0x1C17F28
	076 Call 0x1C17F44
	077 Move X1, X31
	078 Call 0x1C17DEC

Method: ExitGames.Client.Photon.StructWrapping.StructWrapper[] ReadWrapperArray(ExitGames.Client.Photon.StreamBuffer stream, ExitGames.Client.Photon.IProtocol/DeserializationFlags flags, ExitGames.Client.Photon.ParameterDictionary parameters)

Disassembly:
	0x03512A88 LDR X30, [X31], #0x40
	0x03512A8C B 0x3517F60
	0x03512A90 LDP X20, X19, [X31 + 0x30]
	0x03512A94 LDP X22, X21, [X31 + 0x20]
	0x03512A98 LDP X24, X23, [X31 + 0x10]
	0x03512A9C LDR X30, [X31], #0x40
	0x03512AA0 RET
	0x03512AA4 BL 0x1C16F20
	0x03512AA8 STR X30, [X31 - 0x10]!
	0x03512AAC TBZ X3, 0x0, 0x3512AC4
	0x03512AB0 CBZ X1, 0x3512AE0
	0x03512AB4 ANDS W31, W2, 0x1
	0x03512AB8 MOVZ W8, 0x1B
	0x03512ABC CINC W8, W8, NE
	0x03512AC0 B 0x3512ACC
	0x03512AC4 CBZ X1, 0x3512AE0
	0x03512AC8 AND W8, W2, 0x1
	0x03512ACC MOV X0, X1
	0x03512AD0 MOV W1, W8
	0x03512AD4 MOV X2, X31
	0x03512AD8 LDR X30, [X31], #0x10
	0x03512ADC B 0x351EFE8
	0x03512AE0 BL 0x1C16F20
	0x03512AE4 STR X30, [X31 - 0x20]!
	0x03512AE8 STP X20, X19, [X31 + 0x10]
	0x03512AEC MOV W19, W2
	0x03512AF0 MOV X20, X1
	0x03512AF4 TBZ X3, 0x0, 0x3512B18
	0x03512AF8 CBZ X20, 0x3512B1C
	0x03512AFC ANDS W31, W19, 0xFF
	0x03512B00 B.EQ 0x3512B20
	0x03512B04 MOVZ W1, 0x3
	0x03512B08 MOV X0, X20
	0x03512B0C MOV X2, X31
	0x03512B10 BL 0x351EFE8
	0x03512B14 B 0x3512B24
	0x03512B18 CBNZ X20, 0x3512B24
	0x03512B1C BL 0x1C16F20
	0x03512B20 MOVZ W19, 0x22
	0x03512B24 MOV X0, X20
	0x03512B28 MOV W1, W19
	0x03512B2C LDP X20, X19, [X31 + 0x10]
	0x03512B30 MOV X2, X31
	0x03512B34 LDR X30, [X31], #0x20
	0x03512B38 B 0x351EFE8
	0x03512B3C STP X30, X21, [X31 - 0x20]!
	0x03512B40 STP X20, X19, [X31 + 0x10]
	0x03512B44 MOV W20, W2
	0x03512B48 MOV X19, X1
	0x03512B4C MOV X21, X0
	0x03512B50 TBZ X3, 0x0, 0x3512C14
	0x03512B54 CBZ W20, 0x3512B88
	0x03512B58 CMP W20, 0x1
	0x03512B5C B.LT 0x3512BA4
	0x03512B60 CMP W20, 0xFF
	0x03512B64 B.GT 0x3512BD4
	0x03512B68 CBZ X19, 0x3512C60
	0x03512B6C MOVZ W1, 0xB
	0x03512B70 MOV X0, X19
	0x03512B74 MOV X2, X31
	0x03512B78 BL 0x351EFE8
	0x03512B7C MOV X0, X19
	0x03512B80 MOV W1, W20
	0x03512B84 B 0x3512B94
	0x03512B88 CBZ X19, 0x3512C60
	0x03512B8C MOVZ W1, 0x1E
	0x03512B90 MOV X0, X19
	0x03512B94 LDP X20, X19, [X31 + 0x10]
	0x03512B98 MOV X2, X31
	0x03512B9C LDP X30, X21, [X31], #0x20
	0x03512BA0 B 0x351EFE8
	0x03512BA4 MOVN W8, 0xFFFE
	0x03512BA8 CMP W20, W8
	0x03512BAC B.LT 0x3512C00
	0x03512BB0 ADDS W31, W20, 0xFF
	0x03512BB4 B.LT 0x3512C30
	0x03512BB8 CBZ X19, 0x3512C60
	0x03512BBC MOVZ W1, 0xC
	0x03512BC0 MOV X0, X19
	0x03512BC4 MOV X2, X31
	0x03512BC8 BL 0x351EFE8
	0x03512BCC SUB W1, W31, W20
	0x03512BD0 B 0x3512B90
	0x03512BD4 CMP W20, 0x10000
	0x03512BD8 B.GE 0x3512C00
	0x03512BDC CBZ X19, 0x3512C60
	0x03512BE0 MOVZ W1, 0xD
	0x03512BE4 MOV X0, X19
	0x03512BE8 MOV X2, X31
	0x03512BEC BL 0x351EFE8
	0x03512BF0 UBFM W2, W20, 0x8, 0x1F
	0x03512BF4 MOV X0, X19
	0x03512BF8 MOV W1, W20
	0x03512BFC B 0x3512C50
	0x03512C00 CBZ X19, 0x3512C60
	0x03512C04 MOVZ W1, 0x9
	0x03512C08 MOV X0, X19
	0x03512C0C MOV X2, X31
	0x03512C10 BL 0x351EFE8
	0x03512C14 UBFM W8, W20, 0x1F, 0x1E
	0x03512C18 EOR W2, W8, W20, 0x1F
	0x03512C1C MOV X1, X19
	0x03512C20 LDP X20, X19, [X31 + 0x10]
	0x03512C24 MOV X0, X21
	0x03512C28 LDP X30, X21, [X31], #0x20
	0x03512C2C B 0x3515C70
	0x03512C30 CBZ X19, 0x3512C60
	0x03512C34 MOVZ W1, 0xE
	0x03512C38 MOV X0, X19
	0x03512C3C MOV X2, X31
	0x03512C40 BL 0x351EFE8
	0x03512C44 SUB W1, W31, W20
	0x03512C48 UBFM W2, W1, 0x8, 0xF
	0x03512C4C MOV X0, X19
	0x03512C50 LDP X20, X19, [X31 + 0x10]
	0x03512C54 MOV X3, X31
	0x03512C58 LDP X30, X21, [X31], #0x20
	0x03512C5C B 0x351F050
	0x03512C60 BL 0x1C16F20
	0x03512C64 STP X30, X21, [X31 - 0x20]!
	0x03512C68 STP X20, X19, [X31 + 0x10]
	0x03512C6C MOV X20, X2
	0x03512C70 MOV X19, X1
	0x03512C74 MOV X21, X0

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X24, 0xECE000
	014 Move X23, 0xC23000
	015 Move W8, [X24+2800]
	016 Move X23, [X23+880]
	017 Move X19, X3
	018 Move W20, W2
	019 Move X21, X1
	020 Move X22, X0
	021 Move TEMP, X8
	022 And TEMP, TEMP, 1
	023 Compare TEMP, 1
	024 JumpIfEqual {39}
	025 Move X0, 0xC23000
	026 Move X0, [X0+880]
	027 Call 0x1C17CF4
	028 Move X0, 0xC0B000
	029 Move X0, [X0+1784]
	030 Call 0x1C17CF4
	031 Move X0, 0xC23000
	032 Move X0, [X0+888]
	033 Call 0x1C17CF4
	034 Move X0, 0xC23000
	035 Move X0, [X0+896]
	036 Call 0x1C17CF4
	037 Move W8, 1
	038 Move [X24+2800], W8
	039 Move X1, X21
	040 Call Protocol18.ReadCompressedUInt32, X0, X1
	041 Move X8, [X23]
	042 Move W24, W0
	043 Move W1, W24
	044 Move X0, X8
	045 Call 0x1C17D6C
	046 Move X23, X0
	047 Compare W24, 0
	048 JumpIfEqual {117}
	049 Move X26, 0xC0B000
	050 Move X28, 0xC23000
	051 Move X26, [X26+1784]
	052 Move X28, [X28+896]
	053 Move X25, X31
	054 Move W29, W24
	055 Add X27, X23, 32
	056 Move X0, X22
	057 Move X1, X21
	058 Move W2, W20
	059 Move X3, X19
	060 Call Protocol18.Read, X0, X1, X2, X3
	061 Compare X23, 0
	062 JumpIfEqual {132}
	063 Move X24, X0
	064 Compare X0, 0
	065 JumpIfEqual {87}
	066 Move X9, [X24]
	067 Move X8, [X26]
	068 Move W11, [X9+304]
	069 Move W10, [X8+304]
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Move X9, [X9+200]
	072 Add X9, X9, X10
	073 NotImplemented "Instruction LDUR not yet implemented."
	074 NotImplemented "Instruction CMP not yet implemented."
	075 Move X8, [X23]
	076 Move X0, X24
	077 Move X1, [X8+64]
	078 Call 0x1C17E00
	079 Compare X0, 0
	080 JumpIfEqual {133}
	081 Move X8, [X26]
	082 Move X9, [X24]
	083 Move W10, [X8+304]
	084 Move W11, [X9+304]
	085 NotImplemented "Instruction CMP not yet implemented."
	086 Move X9, X31
	087 Move W8, [X23+24]
	088 NotImplemented "Instruction CMP not yet implemented."
	089 Move [X27], X31
	090 Move X8, 0xC23000
	091 Move X8, [X8+888]
	092 Move X1, X31
	093 Move X0, [X8]
	094 Add X8, X23, X25
	095 Add X24, X8, 32
	096 Call Debug.WriteLine, X0
	097 Move W8, [X23+24]
	098 Move X9, [X9+200]
	099 Add X9, X9, X10
	100 NotImplemented "Instruction LDUR not yet implemented."
	101 NotImplemented "Instruction CMP not yet implemented."
	102 NotImplemented "Instruction CSEL not yet implemented."
	103 Move W8, [X23+24]
	104 NotImplemented "Instruction CMP not yet implemented."
	105 Move [X27], X9
	106 Move X24, X27
	107 NotImplemented "Instruction CMP not yet implemented."
	108 Move X8, [X24]
	109 Compare X8, 0
	110 JumpIfNotEqual {114}
	111 Move X0, [X28]
	112 Move X1, X31
	113 Call Debug.WriteLine, X0
	114 Add X25, X25, 1
	115 NotImplemented "Instruction CMP not yet implemented."
	116 Add X27, X27, 8
	117 Move X0, X23
	118 Move X20, [X31+80]
	119 Move X19, [X31+88]
	120 Move X22, [X31+64]
	121 Move X21, [X31+72]
	122 Move X24, [X31+48]
	123 Move X23, [X31+56]
	124 Move X26, [X31+32]
	125 Move X25, [X31+40]
	126 Move X28, [X31+16]
	127 Move X27, [X31+24]
	128 Move X29, [X31+96]
	129 Move X30, [X31+104]
	130 Return X0
	131 Call 0x1C17F28
	132 Call 0x1C17F20
	133 Call 0x1C17F44
	134 Move X1, X31
	135 Call 0x1C17DEC

Method: System.Boolean[] ReadBooleanArray(ExitGames.Client.Photon.StreamBuffer stream)

Disassembly:
	0x03510700 STR W10, [X31 + 0xC]
	0x03510704 CBZ X0, 0x3510774
	0x03510708 LDR W11, [X0 + 0x18]
	0x0351070C CMP W8, W11
	0x03510710 B.CS 0x3510770
	0x03510714 ADD X9, X0, X8
	0x03510718 LDRB W9, [X9 + 0x20]
	0x0351071C ADD W12, W8, 0x2
	0x03510720 CMP W10, W11
	0x03510724 STR W12, [X31 + 0xC]
	0x03510728 B.CS 0x3510770
	0x0351072C ADD X10, X0, W10, SXTW
	0x03510730 LDRB W10, [X10 + 0x20]
	0x03510734 ADD W8, W8, 0x3
	0x03510738 CMP W12, W11
	0x0351073C STR W8, [X31 + 0xC]
	0x03510740 B.CS 0x3510770
	0x03510744 CMP W8, W11
	0x03510748 B.CS 0x3510770
	0x0351074C ADD X11, X0, 0x20
	0x03510750 LDRB W12, [X11, W12, SXTW]
	0x03510754 LDRB W8, [X11, W8, SXTW]
	0x03510758 UBFM W9, W9, 0x8, 0x7
	0x0351075C BFM W9, W10, 0x10, 0x7
	0x03510760 BFM W9, W12, 0x18, 0x7
	0x03510764 ORR W0, W9, W8, 0x0
	0x03510768 LDR X30, [X31], #0x10
	0x0351076C RET
	0x03510770 BL 0x1C16F28
	0x03510774 BL 0x1C16F20
	0x03510778 STR X30, [X31 - 0x10]!
	0x0351077C STR W31, [X31 + 0xC]
	0x03510780 CBZ X1, 0x3510884
	0x03510784 MOV X0, X1
	0x03510788 ADD X2, X31, 0xC
	0x0351078C MOVZ W1, 0x4
	0x03510790 MOV X3, X31
	0x03510794 BL 0x351ECA4
	0x03510798 LDRSW X9, [X31 + 0xC]
	0x0351079C ADD W10, W9, 0x1
	0x035107A0 STR W10, [X31 + 0xC]
	0x035107A4 CBZ X0, 0x3510884
	0x035107A8 LDR W11, [X0 + 0x18]
	0x035107AC CMP W9, W11
	0x035107B0 B.CS 0x3510880
	0x035107B4 ADD X8, X0, X9
	0x035107B8 LDRB W8, [X8 + 0x20]
	0x035107BC ADD W12, W9, 0x2
	0x035107C0 CMP W10, W11
	0x035107C4 STR W12, [X31 + 0xC]
	0x035107C8 B.CS 0x3510880
	0x035107CC ADD X10, X0, W10, SXTW
	0x035107D0 LDRB W10, [X10 + 0x20]
	0x035107D4 ADD W13, W9, 0x3
	0x035107D8 CMP W12, W11
	0x035107DC STR W13, [X31 + 0xC]
	0x035107E0 B.CS 0x3510880
	0x035107E4 ADD X12, X0, W12, SXTW
	0x035107E8 LDRB W12, [X12 + 0x20]
	0x035107EC ADD W14, W9, 0x4
	0x035107F0 CMP W13, W11
	0x035107F4 STR W14, [X31 + 0xC]
	0x035107F8 B.CS 0x3510880
	0x035107FC ADD X13, X0, W13, SXTW
	0x03510800 LDRB W13, [X13 + 0x20]
	0x03510804 ADD W15, W9, 0x5
	0x03510808 CMP W14, W11
	0x0351080C STR W15, [X31 + 0xC]
	0x03510810 B.CS 0x3510880
	0x03510814 ADD X14, X0, W14, SXTW
	0x03510818 LDRB W14, [X14 + 0x20]
	0x0351081C ADD W16, W9, 0x6
	0x03510820 CMP W15, W11
	0x03510824 STR W16, [X31 + 0xC]
	0x03510828 B.CS 0x3510880
	0x0351082C ADD X15, X0, W15, SXTW
	0x03510830 LDRB W15, [X15 + 0x20]
	0x03510834 ADD W9, W9, 0x7
	0x03510838 CMP W16, W11
	0x0351083C STR W9, [X31 + 0xC]
	0x03510840 B.CS 0x3510880
	0x03510844 CMP W9, W11
	0x03510848 B.CS 0x3510880
	0x0351084C UBFM X8, X8, 0x8, 0x7
	0x03510850 ADD X11, X0, 0x20
	0x03510854 BFM X8, X10, 0x10, 0x7
	0x03510858 LDRB W16, [X11, W16, SXTW]
	0x0351085C BFM X8, X12, 0x18, 0x7
	0x03510860 LDRB W9, [X11, W9, SXTW]
	0x03510864 BFM X8, X13, 0x20, 0x7
	0x03510868 BFM X8, X14, 0x28, 0x7
	0x0351086C BFM X8, X15, 0x30, 0x7
	0x03510870 BFM X8, X16, 0x38, 0x7
	0x03510874 ORR X0, X8, X9, 0x0
	0x03510878 LDR X30, [X31], #0x10
	0x0351087C RET
	0x03510880 BL 0x1C16F28
	0x03510884 BL 0x1C16F20
	0x03510888 STP X30, X21, [X31 - 0x20]!
	0x0351088C STP X20, X19, [X31 + 0x10]
	0x03510890 MOV X19, X1
	0x03510894 MOV X20, X0
	0x03510898 BL 0x35108F4
	0x0351089C LDR X8, [X20 + 0x10]
	0x035108A0 CBZ X8, 0x35108F0
	0x035108A4 MOV W20, W0
	0x035108A8 MOV X0, X8
	0x035108AC MOV W1, W20
	0x035108B0 MOV X2, X31
	0x035108B4 BL 0x34ED0AC
	0x035108B8 CBZ X0, 0x35108F0
	0x035108BC CBZ X19, 0x35108F0
	0x035108C0 LDR X1, [X0 + 0x10]
	0x035108C4 MOV X21, X0
	0x035108C8 MOV X0, X19
	0x035108CC MOV W2, W31
	0x035108D0 MOV W3, W20
	0x035108D4 MOV X4, X31
	0x035108D8 BL 0x351EE98
	0x035108DC STR W20, [X21 + 0x1C]
	0x035108E0 LDP X20, X19, [X31 + 0x10]
	0x035108E4 MOV X0, X21
	0x035108E8 LDP X30, X21, [X31], #0x20
	0x035108EC RET
	0x035108F0 BL 0x1C16F20
	0x035108F4 STR X30, [X31 - 0x40]!
	0x035108F8 STP X24, X23, [X31 + 0x10]
	0x035108FC STP X22, X21, [X31 + 0x20]
	0x03510900 STP X20, X19, [X31 + 0x30]
	0x03510904 STR W31, [X31 + 0x8]
	0x03510908 CBZ X1, 0x3510BB4
	0x0351090C MOV X19, X1
	0x03510910 MOV X0, X1
	0x03510914 MOV X1, X31
	0x03510918 BL 0x3517FCC
	0x0351091C MOV X20, X0
	0x03510920 MOV X0, X19

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X21, 0xED0000
	010 Move X19, 0xBE6000
	011 Move W8, [X21+2801]
	012 Move X19, [X19+2488]
	013 Move X20, X1
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0xBE6000
	019 Move X0, [X0+2488]
	020 Call 0x1C17CF4
	021 Move X0, 0xBED000
	022 Move X0, [X0+2992]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X21+2801], W8
	026 Move X1, X20
	027 Call Protocol18.ReadCompressedUInt32, X0, X1
	028 Move X8, [X19]
	029 Move W21, W0
	030 Move W1, W21
	031 Move X0, X8
	032 Call 0x1C17D6C
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move X19, X0
	035 Compare X20, 0
	036 JumpIfEqual {155}
	037 Move W9, W21
	038 ShiftRight W9, 3
	039 And W9, W9, 0x7FFFFFFF
	040 Move X8, X31
	041 Add W22, W9, 1
	042 Add X23, X19, 39
	043 Move X0, X20
	044 Move X1, X31
	045 Move X24, X8
	046 Call StreamBuffer.ReadByte, X0
	047 Compare X19, 0
	048 JumpIfEqual {155}
	049 Move W8, [X19+24]
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Add X10, X24, 1
	052 And W11, W0, 1
	053 Add X9, X23, X24
	054 NotImplemented "Instruction CMP not yet implemented."
	055 NotImplemented "Instruction STURB not yet implemented."
	056 Add X10, X10, 1
	057 Move W11, W0
	058 ShiftRight W11, 1
	059 And W11, W11, 1
	060 NotImplemented "Instruction CMP not yet implemented."
	061 NotImplemented "Instruction STURB not yet implemented."
	062 Add X10, X10, 1
	063 Move W11, W0
	064 ShiftRight W11, 2
	065 And W11, W11, 3
	066 Add X9, X23, X24
	067 NotImplemented "Instruction CMP not yet implemented."
	068 NotImplemented "Instruction STURB not yet implemented."
	069 Add X10, X10, 1
	070 Move W11, W0
	071 ShiftRight W11, 3
	072 And W11, W11, 7
	073 NotImplemented "Instruction CMP not yet implemented."
	074 NotImplemented "Instruction STURB not yet implemented."
	075 Add X10, X10, 1
	076 Move W11, W0
	077 ShiftRight W11, 4
	078 And W11, W11, 15
	079 Add X9, X23, X24
	080 NotImplemented "Instruction CMP not yet implemented."
	081 NotImplemented "Instruction STURB not yet implemented."
	082 Add X10, X10, 1
	083 Move W11, W0
	084 ShiftRight W11, 5
	085 And W11, W11, 31
	086 NotImplemented "Instruction CMP not yet implemented."
	087 NotImplemented "Instruction STURB not yet implemented."
	088 Add X9, X10, 1
	089 Move W11, W0
	090 ShiftRight W11, 6
	091 And W11, W11, 63
	092 Add X12, X23, X24
	093 NotImplemented "Instruction CMP not yet implemented."
	094 NotImplemented "Instruction STURB not yet implemented."
	095 Move W8, W0
	096 ShiftRight W8, 7
	097 And W8, W8, 127
	098 Subtract W22, W22, 1
	099 Move [X23], W8
	100 NotImplemented "Instruction CMP not yet implemented."
	101 Add X8, X9, 1
	102 Add X8, X24, 8
	103 Move W8, W31
	104 Move X22, W8
	105 NotImplemented "Instruction CMP not yet implemented."
	106 Compare X20, 0
	107 JumpIfEqual {155}
	108 Move X0, X20
	109 Move X1, X31
	110 Move W21, W21
	111 Call StreamBuffer.ReadByte, X0
	112 Move X24, 0xBED000
	113 Move X24, [X24+2992]
	114 Move W20, W0
	115 Move W23, W31
	116 Move X25, X22
	117 Move X0, [X24]
	118 Move W8, [X0+224]
	119 Compare W8, 0
	120 JumpIfNotEqual {123}
	121 Call 0x1C17DFC
	122 Move X0, [X24]
	123 Move X8, [X0+184]
	124 Move X8, [X8]
	125 Compare X8, 0
	126 JumpIfEqual {155}
	127 Move W9, [X8+24]
	128 NotImplemented "Instruction CMP not yet implemented."
	129 Compare X19, 0
	130 JumpIfEqual {155}
	131 Move W10, [X19+24]
	132 Add W9, W22, W23
	133 NotImplemented "Instruction CMP not yet implemented."
	134 Add X8, X8, W23
	135 Move W8, [X8+32]
	136 Add W9, W9, 1
	137 Add X10, X19, X25
	138 Move X25, W9
	139 NotImplemented "Instruction BICS not yet implemented."
	140 NotImplemented "Instruction CSET not yet implemented."
	141 NotImplemented "Instruction CMP not yet implemented."
	142 Add W23, W23, 1
	143 Move [X10+32], W8
	144 Move X0, X19
	145 Move X20, [X31+48]
	146 Move X19, [X31+56]
	147 Move X22, [X31+32]
	148 Move X21, [X31+40]
	149 Move X24, [X31+16]
	150 Move X23, [X31+24]
	151 Move X30, [X31+64]
	152 Move X25, [X31+72]
	153 Return X0
	154 Call 0x1C17F28
	155 Call 0x1C17F20

Method: System.Int16[] ReadInt16Array(ExitGames.Client.Photon.StreamBuffer stream)

Disassembly:
	0x035109A8 LDP X22, X21, [X31 + 0x20]
	0x035109AC LDP X24, X23, [X31 + 0x10]
	0x035109B0 LDR X30, [X31], #0x40
	0x035109B4 RET
	0x035109B8 MOV X0, X19
	0x035109BC BL 0x19903C0
	0x035109C0 MOV X0, X19
	0x035109C4 MOV X1, X31
	0x035109C8 BL 0x351806C
	0x035109CC MOV W21, W0
	0x035109D0 MOV X0, X19
	0x035109D4 BL 0x19903C0
	0x035109D8 MOV X0, X19
	0x035109DC MOV W1, W21
	0x035109E0 MOV X2, X31
	0x035109E4 BL 0x3517FDC
	0x035109E8 ADRP X0, 0xBE3000
	0x035109EC LDR X0, [X0 + 0xAC8]
	0x035109F0 BL 0x1C16D08
	0x035109F4 MOVZ W1, 0x8
	0x035109F8 BL 0x1C16D6C
	0x035109FC MOV X21, X0
	0x03510A00 BL 0x19903C0
	0x03510A04 ADRP X0, 0xC24000
	0x03510A08 LDR X0, [X0 + 0x348]
	0x03510A0C BL 0x1C16D08
	0x03510A10 MOV X2, X0
	0x03510A14 MOV X0, X21
	0x03510A18 MOV X1, X31
	0x03510A1C BL 0x1993444
	0x03510A20 ADD X0, X31, 0xC
	0x03510A24 MOV X1, X31
	0x03510A28 BL 0x337B6E0
	0x03510A2C MOV X22, X0
	0x03510A30 MOV X0, X21
	0x03510A34 BL 0x19903C0
	0x03510A38 MOVZ W1, 0x1
	0x03510A3C MOV X0, X21
	0x03510A40 MOV X2, X22
	0x03510A44 BL 0x1993444
	0x03510A48 MOV X0, X21
	0x03510A4C BL 0x19903C0
	0x03510A50 ADRP X0, 0xC24000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xED0000
	007 Move X20, 0xC0C000
	008 Move W8, [X21+2802]
	009 Move X20, [X20+2080]
	010 Move X19, X1
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0xC0C000
	016 Move X0, [X0+2080]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X21+2802], W8
	020 Move X1, X19
	021 Call Protocol18.ReadCompressedUInt32, X0, X1
	022 Move X8, [X20]
	023 Move W1, W0
	024 Move X0, X8
	025 Call 0x1C17D6C
	026 Compare X0, 0
	027 JumpIfEqual {48}
	028 Move W8, [X0+24]
	029 Move X20, X0
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move X21, X31
	032 Add X22, X20, 32
	033 Move X1, X19
	034 Call Protocol18.ReadInt16, X0, X1
	035 Move W8, [X20+24]
	036 NotImplemented "Instruction CMP not yet implemented."
	037 NotImplemented "Instruction STRH not yet implemented."
	038 Add X21, X21, 1
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Move X0, X20
	041 Move X20, [X31+32]
	042 Move X19, [X31+40]
	043 Move X22, [X31+16]
	044 Move X21, [X31+24]
	045 Move X30, [X31+48]
	046 Return X0
	047 Call 0x1C17F28
	048 Call 0x1C17F20

Method: System.Single[] ReadSingleArray(ExitGames.Client.Photon.StreamBuffer stream)

Disassembly:
	0x03510AFC MOV X0, X21
	0x03510B00 MOV X2, X20
	0x03510B04 BL 0x1993444
	0x03510B08 MOV X0, X21
	0x03510B0C BL 0x19903C0
	0x03510B10 ADRP X0, 0xC24000
	0x03510B14 LDR X0, [X0 + 0x360]
	0x03510B18 BL 0x1C16D08
	0x03510B1C MOV X2, X0
	0x03510B20 MOVZ W1, 0x6
	0x03510B24 MOV X0, X21
	0x03510B28 BL 0x1993444
	0x03510B2C MOV X0, X19
	0x03510B30 BL 0x19903C0
	0x03510B34 MOV X0, X19
	0x03510B38 MOV X1, X31
	0x03510B3C BL 0x351EDB0
	0x03510B40 STR W0, [X31 + 0x8]
	0x03510B44 ADD X0, X31, 0x8
	0x03510B48 MOV X1, X31
	0x03510B4C BL 0x337B6E0
	0x03510B50 MOV X19, X0
	0x03510B54 MOV X0, X21
	0x03510B58 BL 0x19903C0
	0x03510B5C MOVZ W1, 0x7
	0x03510B60 MOV X0, X21
	0x03510B64 MOV X2, X19
	0x03510B68 BL 0x1993444
	0x03510B6C MOV X0, X21
	0x03510B70 MOV X1, X31
	0x03510B74 BL 0x32278CC
	0x03510B78 MOV X19, X0
	0x03510B7C ADRP X0, 0xC15000
	0x03510B80 LDR X0, [X0 + 0x3D8]
	0x03510B84 BL 0x1C16D08
	0x03510B88 BL 0x1C16F10
	0x03510B8C MOV X1, X19
	0x03510B90 MOV X2, X31
	0x03510B94 MOV X20, X0
	0x03510B98 BL 0x32E1770
	0x03510B9C ADRP X0, 0xC24000
	0x03510BA0 LDR X0, [X0 + 0x368]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xED0000
	007 Move X20, 0xBE4000
	008 Move W8, [X21+2803]
	009 Move X20, [X20+1592]
	010 Move X19, X1
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0xBE4000
	016 Move X0, [X0+1592]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X21+2803], W8
	020 Move X1, X19
	021 Move [X31+12], W31
	022 Call Protocol18.ReadCompressedUInt32, X0, X1
	023 Move X8, [X20]
	024 Move W21, W0
	025 Move W1, W21
	026 Move X0, X8
	027 Call 0x1C17D6C
	028 Compare X19, 0
	029 JumpIfEqual {52}
	030 Move W21, W21
	031 ShiftRight W21, 30
	032 And W21, W21, 0x1FFFFFFF
	033 Move X20, X0
	034 Add X2, X31, 12
	035 Move X0, X19
	036 Move W1, W21
	037 Move X3, X31
	038 Call StreamBuffer.GetBufferAndAdvance, X0, X1, X2
	039 Move W1, [X31+12]
	040 Move X2, X20
	041 Move W3, W31
	042 Move W4, W21
	043 Move X5, X31
	044 Call Buffer.BlockCopy, X0, X1, X2, X3, X4
	045 Move X0, X20
	046 Move X20, [X31+32]
	047 Move X19, [X31+40]
	048 Move X30, [X31+16]
	049 Move X21, [X31+24]
	050 Add X31, X31, 48
	051 Return X0
	052 Call 0x1C17F20

Method: System.Double[] ReadDoubleArray(ExitGames.Client.Photon.StreamBuffer stream)

Disassembly:
	0x03510A54 LDR X0, [X0 + 0x350]
	0x03510A58 BL 0x1C16D08
	0x03510A5C MOV X2, X0
	0x03510A60 MOVZ W1, 0x2
	0x03510A64 MOV X0, X21
	0x03510A68 BL 0x1993444
	0x03510A6C MOV X0, X19
	0x03510A70 BL 0x19903C0
	0x03510A74 MOV X0, X19
	0x03510A78 MOV X1, X31
	0x03510A7C BL 0x351806C
	0x03510A80 STR W0, [X31 + 0x8]
	0x03510A84 ADD X0, X31, 0x8
	0x03510A88 MOV X1, X31
	0x03510A8C BL 0x337B6E0
	0x03510A90 MOV X22, X0
	0x03510A94 MOV X0, X21
	0x03510A98 BL 0x19903C0
	0x03510A9C MOVZ W1, 0x3
	0x03510AA0 MOV X0, X21
	0x03510AA4 MOV X2, X22
	0x03510AA8 BL 0x1993444
	0x03510AAC MOV X0, X21
	0x03510AB0 BL 0x19903C0
	0x03510AB4 ADRP X0, 0xC24000
	0x03510AB8 LDR X0, [X0 + 0x358]
	0x03510ABC BL 0x1C16D08
	0x03510AC0 MOV X2, X0
	0x03510AC4 MOVZ W1, 0x4
	0x03510AC8 MOV X0, X21
	0x03510ACC BL 0x1993444
	0x03510AD0 MOV X0, X20
	0x03510AD4 BL 0x19903C0
	0x03510AD8 LDR X8, [X20 + 0x18]
	0x03510ADC ADD X0, X31, 0x8
	0x03510AE0 MOV X1, X31
	0x03510AE4 STR W8, [X31 + 0x8]
	0x03510AE8 BL 0x337B6E0
	0x03510AEC MOV X20, X0
	0x03510AF0 MOV X0, X21
	0x03510AF4 BL 0x19903C0
	0x03510AF8 MOVZ W1, 0x5

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xED0000
	007 Move X20, 0xC15000
	008 Move W8, [X21+2804]
	009 Move X20, [X20+2096]
	010 Move X19, X1
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0xC15000
	016 Move X0, [X0+2096]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X21+2804], W8
	020 Move X1, X19
	021 Move [X31+12], W31
	022 Call Protocol18.ReadCompressedUInt32, X0, X1
	023 Move X8, [X20]
	024 Move W21, W0
	025 Move W1, W21
	026 Move X0, X8
	027 Call 0x1C17D6C
	028 Compare X19, 0
	029 JumpIfEqual {52}
	030 Move W21, W21
	031 ShiftRight W21, 29
	032 And W21, W21, 0xFFFFFFF
	033 Move X20, X0
	034 Add X2, X31, 12
	035 Move X0, X19
	036 Move W1, W21
	037 Move X3, X31
	038 Call StreamBuffer.GetBufferAndAdvance, X0, X1, X2
	039 Move W1, [X31+12]
	040 Move X2, X20
	041 Move W3, W31
	042 Move W4, W21
	043 Move X5, X31
	044 Call Buffer.BlockCopy, X0, X1, X2, X3, X4
	045 Move X0, X20
	046 Move X20, [X31+32]
	047 Move X19, [X31+40]
	048 Move X30, [X31+16]
	049 Move X21, [X31+24]
	050 Add X31, X31, 48
	051 Return X0
	052 Call 0x1C17F20

Method: System.String[] ReadStringArray(ExitGames.Client.Photon.StreamBuffer stream)

Disassembly:
	0x03510BA4 BL 0x1C16D08
	0x03510BA8 MOV X1, X0
	0x03510BAC MOV X0, X20
	0x03510BB0 BL 0x1C16DEC
	0x03510BB4 BL 0x1C16F20
	0x03510BB8 BL 0x1C16F28
	0x03510BBC STP X30, X25, [X31 - 0x40]!
	0x03510BC0 STP X24, X23, [X31 + 0x10]
	0x03510BC4 STP X22, X21, [X31 + 0x20]
	0x03510BC8 STP X20, X19, [X31 + 0x30]
	0x03510BCC ADRP X23, 0xECF000
	0x03510BD0 LDRB W8, [X23 + 0xAE0]
	0x03510BD4 MOV W19, W3
	0x03510BD8 MOV X22, X2
	0x03510BDC MOV X20, X1
	0x03510BE0 MOV X21, X0
	0x03510BE4 TBNZ X8, 0x0, 0x3510BFC
	0x03510BE8 ADRP X0, 0xC24000
	0x03510BEC LDR X0, [X0 + 0x128]
	0x03510BF0 BL 0x1C16CF4
	0x03510BF4 MOVZ W8, 0x1
	0x03510BF8 STRB W8, [X23 + 0xAE0]
	0x03510BFC CBZ X22, 0x3510C10
	0x03510C00 MOV X0, X22
	0x03510C04 BL 0x3505BC8
	0x03510C08 CBNZ X20, 0x3510C2C
	0x03510C0C B 0x3510D94
	0x03510C10 ADRP X8, 0xC24000
	0x03510C14 LDR X8, [X8 + 0x128]
	0x03510C18 LDR X0, [X8]
	0x03510C1C BL 0x1C16F10
	0x03510C20 MOV X22, X0
	0x03510C24 BL 0x3505A40
	0x03510C28 CBZ X20, 0x3510D94
	0x03510C2C MOV X0, X20
	0x03510C30 MOV X1, X31
	0x03510C34 BL 0x351EF00
	0x03510C38 CBZ X22, 0x3510D94
	0x03510C3C STRB W0, [X22 + 0x10]
	0x03510C40 MOV X0, X20
	0x03510C44 MOV X1, X31
	0x03510C48 BL 0x351EF00
	0x03510C4C ANDS W24, W0, 0xFF
	0x03510C50 B.EQ 0x3510D7C
	0x03510C54 ADRP X25, 0xFFFFFFFFFD686000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0xED0000
	008 Move X21, 0xBE4000
	009 Move W8, [X22+2805]
	010 Move X21, [X21+2760]
	011 Move X19, X1
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0xBE4000
	018 Move X0, [X0+2760]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X22+2805], W8
	022 Move X1, X19
	023 Call Protocol18.ReadCompressedUInt32, X0, X1
	024 Move X8, [X21]
	025 Move W1, W0
	026 Move X0, X8
	027 Call 0x1C17D6C
	028 Compare X0, 0
	029 JumpIfEqual {52}
	030 Move W8, [X0+24]
	031 Move X21, X0
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move X22, X31
	034 Add X23, X21, 32
	035 Move X0, X20
	036 Move X1, X19
	037 Call Protocol18.ReadString, X0, X1
	038 Move W8, [X21+24]
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Move [X23], X0
	041 Add X22, X22, 1
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X0, X21
	044 Move X20, [X31+32]
	045 Move X19, [X31+40]
	046 Move X22, [X31+16]
	047 Move X21, [X31+24]
	048 Move X30, [X31+48]
	049 Move X23, [X31+56]
	050 Return X0
	051 Call 0x1C17F28
	052 Call 0x1C17F20

Method: ExitGames.Client.Photon.Hashtable[] ReadHashtableArray(ExitGames.Client.Photon.StreamBuffer stream, ExitGames.Client.Photon.IProtocol/DeserializationFlags flags, ExitGames.Client.Photon.ParameterDictionary parameters)

Disassembly:
	0x03510C58 ADD X25, X25, 0xC7F
	0x03510C5C MOV X0, X20
	0x03510C60 MOV X1, X31
	0x03510C64 BL 0x351EF00
	0x03510C68 MOV W23, W0
	0x03510C6C MOV X0, X20
	0x03510C70 MOV X1, X31
	0x03510C74 BL 0x351EF00
	0x03510C78 MOV W2, W0
	0x03510C7C TBNZ X19, 0x0, 0x3510C98
	0x03510C80 LDR X4, [X22 + 0x18]
	0x03510C84 MOV X0, X21
	0x03510C88 MOV X1, X20
	0x03510C8C MOV W3, W19
	0x03510C90 BL 0x350D824
	0x03510C94 B 0x3510CB0
	0x03510C98 AND W8, W2, 0xFF
	0x03510C9C CMP W8, 0x43
	0x03510CA0 B.NE 0x3510CD4
	0x03510CA4 MOV X0, X21
	0x03510CA8 MOV X1, X20
	0x03510CAC BL 0x3510888
	0x03510CB0 MOV X2, X0
	0x03510CB4 LDR X0, [X22 + 0x18]
	0x03510CB8 CBZ X0, 0x3510D94
	0x03510CBC MOV W1, W23
	0x03510CC0 MOV X3, X31
	0x03510CC4 BL 0x34FC3A4
	0x03510CC8 SUBS W24, W24, 0x1
	0x03510CCC B.NE 0x3510C5C
	0x03510CD0 B 0x3510D7C
	0x03510CD4 LDRB W8, [X22 + 0x20]
	0x03510CD8 CMP W8, W23, UXTB
	0x03510CDC B.NE 0x3510C80
	0x03510CE0 AND W9, W2, 0xFF
	0x03510CE4 SUB W8, W9, 0x9
	0x03510CE8 CMP W8, 0x5
	0x03510CEC B.HI 0x3510D18
	0x03510CF0 ADR X9, 0xFFFFFFFFFFFFFFD8
	0x03510CF4 LDRB W10, [X25, X8, LSL]
	0x03510CF8 ADD X9, X9, X10, 0x2, LSL
	0x03510CFC BR X9
	0x03510D00 MOV X1, X20
	0x03510D04 BL 0x35108F4
	0x03510D08 AND W8, W0, 0x1
	0x03510D0C SUB W8, W31, W8
	0x03510D10 EOR W8, W8, W0, 0x1
	0x03510D14 B 0x3510D74
	0x03510D18 CMP W9, 0x1E
	0x03510D1C B.NE 0x3510CC8
	0x03510D20 STR W31, [X22 + 0x24]
	0x03510D24 B 0x3510CC8
	0x03510D28 MOV X0, X20
	0x03510D2C MOV X1, X31
	0x03510D30 BL 0x351EF00
	0x03510D34 AND W8, W0, 0xFF
	0x03510D38 B 0x3510D74
	0x03510D3C MOV X0, X20
	0x03510D40 MOV X1, X31
	0x03510D44 BL 0x351EF00
	0x03510D48 MOV W8, W31
	0x03510D4C SUB W8, W8, W0, UXTB
	0x03510D50 B 0x3510D74

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X24, 0xED0000
	012 Move X23, 0xC25000
	013 Move W8, [X24+2806]
	014 Move X23, [X23+784]
	015 Move X19, X3
	016 Move W20, W2
	017 Move X21, X1
	018 Move X22, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {28}
	023 Move X0, 0xC25000
	024 Move X0, [X0+784]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X24+2806], W8
	028 Move X1, X21
	029 Call Protocol18.ReadCompressedUInt32, X0, X1
	030 Move X8, [X23]
	031 Move W24, W0
	032 Move W1, W24
	033 Move X0, X8
	034 Call 0x1C17D6C
	035 Move X23, X0
	036 Compare W24, 0
	037 JumpIfEqual {62}
	038 Move X25, X31
	039 Move W26, W24
	040 Add X27, X23, 32
	041 Move X0, X22
	042 Move X1, X21
	043 Move W2, W20
	044 Move X3, X19
	045 Call Protocol18.ReadHashtable, X0, X1, X2, X3
	046 Compare X23, 0
	047 JumpIfEqual {74}
	048 Move X24, X0
	049 Compare X0, 0
	050 JumpIfEqual {57}
	051 Move X8, [X23]
	052 Move X0, X24
	053 Move X1, [X8+64]
	054 Call 0x1C17E00
	055 Compare X0, 0
	056 JumpIfEqual {76}
	057 Move W8, [X23+24]
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Move [X27], X24
	060 Add X25, X25, 1
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Move X0, X23
	063 Move X20, [X31+64]
	064 Move X19, [X31+72]
	065 Move X22, [X31+48]
	066 Move X21, [X31+56]
	067 Move X24, [X31+32]
	068 Move X23, [X31+40]
	069 Move X26, [X31+16]
	070 Move X25, [X31+24]
	071 Move X30, [X31+80]
	072 Move X27, [X31+88]
	073 Return X0
	074 Call 0x1C17F20
	075 Call 0x1C17F28
	076 Call 0x1C17F44
	077 Move X1, X31
	078 Call 0x1C17DEC

Method: System.Collections.IDictionary[] ReadDictionaryArray(ExitGames.Client.Photon.StreamBuffer stream, ExitGames.Client.Photon.IProtocol/DeserializationFlags flags, ExitGames.Client.Photon.ParameterDictionary parameters)

Disassembly:
	0x03510D54 MOV X1, X20
	0x03510D58 BL 0x3510674
	0x03510D5C AND W8, W0, 0xFFFF
	0x03510D60 B 0x3510D74
	0x03510D64 MOV X1, X20
	0x03510D68 BL 0x3510674
	0x03510D6C MOV W8, W31
	0x03510D70 SUB W8, W8, W0, UXTH
	0x03510D74 STR W8, [X22 + 0x24]
	0x03510D78 B 0x3510CC8
	0x03510D7C MOV X0, X22
	0x03510D80 LDP X20, X19, [X31 + 0x30]
	0x03510D84 LDP X22, X21, [X31 + 0x20]
	0x03510D88 LDP X24, X23, [X31 + 0x10]
	0x03510D8C LDP X30, X25, [X31], #0x40
	0x03510D90 RET
	0x03510D94 BL 0x1C16F20
	0x03510D98 STP X30, X25, [X31 - 0x40]!
	0x03510D9C STP X24, X23, [X31 + 0x10]
	0x03510DA0 STP X22, X21, [X31 + 0x20]
	0x03510DA4 STP X20, X19, [X31 + 0x30]
	0x03510DA8 ADRP X23, 0xECF000
	0x03510DAC LDRB W8, [X23 + 0xAE1]
	0x03510DB0 MOV W19, W3
	0x03510DB4 MOV X22, X2
	0x03510DB8 MOV X20, X1
	0x03510DBC MOV X21, X0
	0x03510DC0 TBNZ X8, 0x0, 0x3510DF0
	0x03510DC4 ADRP X0, 0xBEC000
	0x03510DC8 LDR X0, [X0 + 0x610]
	0x03510DCC BL 0x1C16CF4
	0x03510DD0 ADRP X0, 0xBEC000
	0x03510DD4 LDR X0, [X0 + 0x618]
	0x03510DD8 BL 0x1C16CF4
	0x03510DDC ADRP X0, 0xBEC000
	0x03510DE0 LDR X0, [X0 + 0x2B8]
	0x03510DE4 BL 0x1C16CF4
	0x03510DE8 MOVZ W8, 0x1
	0x03510DEC STRB W8, [X23 + 0xAE1]
	0x03510DF0 CBZ X20, 0x3510ED8
	0x03510DF4 MOV X0, X20
	0x03510DF8 MOV X1, X31
	0x03510DFC BL 0x351EF00
	0x03510E00 MOV W24, W0
	0x03510E04 CBZ X22, 0x3510E10
	0x03510E08 AND W23, W24, 0xFF
	0x03510E0C B 0x3510E3C
	0x03510E10 ADRP X8, 0xBEC000
	0x03510E14 LDR X8, [X8 + 0x2B8]
	0x03510E18 LDR X0, [X8]
	0x03510E1C BL 0x1C16F10
	0x03510E20 ADRP X8, 0xBEC000
	0x03510E24 LDR X8, [X8 + 0x610]
	0x03510E28 AND W23, W24, 0xFF
	0x03510E2C MOV W1, W23
	0x03510E30 MOV X22, X0
	0x03510E34 LDR X2, [X8]
	0x03510E38 BL 0x29D2C94
	0x03510E3C ANDS W31, W24, 0xFF
	0x03510E40 B.EQ 0x3510EC0
	0x03510E44 ADRP X25, 0xBEC000
	0x03510E48 LDR X25, [X25 + 0x618]
	0x03510E4C MOV X0, X20
	0x03510E50 MOV X1, X31
	0x03510E54 BL 0x351EF00
	0x03510E58 MOV W24, W0
	0x03510E5C MOV X0, X20
	0x03510E60 MOV X1, X31
	0x03510E64 BL 0x351EF00
	0x03510E68 MOV W2, W0
	0x03510E6C TBZ X19, 0x0, 0x3510E8C
	0x03510E70 AND W8, W2, 0xFF
	0x03510E74 CMP W8, 0x43
	0x03510E78 B.NE 0x3510E8C
	0x03510E7C MOV X0, X21
	0x03510E80 MOV X1, X20
	0x03510E84 BL 0x3510888
	0x03510E88 B 0x3510EA0
	0x03510E8C MOV X0, X21
	0x03510E90 MOV X1, X20
	0x03510E94 MOV W3, W19
	0x03510E98 MOV X4, X31
	0x03510E9C BL 0x350D824
	0x03510EA0 MOV X2, X0
	0x03510EA4 CBZ X22, 0x3510ED8
	0x03510EA8 LDR X3, [X25]
	0x03510EAC MOV X0, X22
	0x03510EB0 MOV W1, W24
	0x03510EB4 BL 0x29D3520
	0x03510EB8 SUBS W23, W23, 0x1
	0x03510EBC B.NE 0x3510E4C
	0x03510EC0 MOV X0, X22
	0x03510EC4 LDP X20, X19, [X31 + 0x30]
	0x03510EC8 LDP X22, X21, [X31 + 0x20]
	0x03510ECC LDP X24, X23, [X31 + 0x10]
	0x03510ED0 LDP X30, X25, [X31], #0x40
	0x03510ED4 RET
	0x03510ED8 BL 0x1C16F20
	0x03510EDC STR X30, [X31 - 0x40]!
	0x03510EE0 STP X24, X23, [X31 + 0x10]
	0x03510EE4 STP X22, X21, [X31 + 0x20]
	0x03510EE8 STP X20, X19, [X31 + 0x30]
	0x03510EEC ADRP X23, 0xECF000
	0x03510EF0 LDRB W8, [X23 + 0xAE2]
	0x03510EF4 MOV W19, W3
	0x03510EF8 MOV X22, X2
	0x03510EFC MOV X20, X1
	0x03510F00 MOV X21, X0
	0x03510F04 TBNZ X8, 0x0, 0x3510F1C
	0x03510F08 ADRP X0, 0xBEC000
	0x03510F0C LDR X0, [X0 + 0x6F8]
	0x03510F10 BL 0x1C16CF4
	0x03510F14 MOVZ W8, 0x1
	0x03510F18 STRB W8, [X23 + 0xAE2]
	0x03510F1C CBZ X20, 0x3510FF4
	0x03510F20 MOV X0, X20

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+32], X29
	003 Move [X31+40], X30
	004 Move [X31+48], X28
	005 Move [X31+56], X27
	006 Move [X31+64], X26
	007 Move [X31+72], X25
	008 Move [X31+80], X24
	009 Move [X31+88], X23
	010 Move [X31+96], X22
	011 Move [X31+104], X21
	012 Move [X31+112], X20
	013 Move [X31+120], X19
	014 Move X19, 0xED0000
	015 Move W8, [X19+2807]
	016 Move X21, X1
	017 Move X22, X0
	018 Move [X31+16], X3
	019 Move [X31+12], W2
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {32}
	024 Move X0, 0xC25000
	025 Move X0, [X0+792]
	026 Call 0x1C17CF4
	027 Move X0, 0xBE4000
	028 Move X0, [X0+2072]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X19+2807], W8
	032 Add X2, X31, 28
	033 Add X3, X31, 24
	034 Move X0, X22
	035 Move X1, X21
	036 Move [X31+28], W31
	037 Move [X31+24], W31
	038 Call Protocol18.ReadDictionaryType, X0, X1, X2, X3
	039 Move X1, X21
	040 Move X23, X0
	041 Call Protocol18.ReadCompressedUInt32, X0, X1
	042 Move W27, W0
	043 Move X0, X23
	044 Move W1, W27
	045 Move X2, X31
	046 Call Array.CreateInstance, X0, X1
	047 Compare X0, 0
	048 JumpIfEqual {60}
	049 Move X8, 0xC25000
	050 Move X8, [X8+792]
	051 Move X25, X0
	052 Move X26, [X8]
	053 Move X1, X26
	054 Call 0x1C17E00
	055 Move X24, X0
	056 Compare X0, 0
	057 JumpIfEqual {134}
	058 Compare W27, 0
	059 JumpIfNotEqual {63}
	060 Move X24, X31
	061 Compare W27, 0
	062 JumpIfEqual {111}
	063 Move W25, [X31+28]
	064 Move W26, [X31+24]
	065 Move X29, X31
	066 Move W20, W27
	067 Add X19, X24, 32
	068 Move X0, X23
	069 Move X1, X31
	070 Call Activator.CreateInstance, X0
	071 Compare X24, 0
	072 JumpIfEqual {129}
	073 Move X27, X0
	074 Compare X0, 0
	075 JumpIfEqual {98}
	076 Move X8, 0xBE4000
	077 Move X8, [X8+2072]
	078 Move X0, X27
	079 Move X28, [X8]
	080 Move X1, X28
	081 Call 0x1C17E00
	082 Compare X0, 0
	083 JumpIfEqual {126}
	084 Move X8, [X24]
	085 Move X1, [X8+64]
	086 Call 0x1C17E00
	087 Compare X0, 0
	088 JumpIfEqual {131}
	089 Move X8, 0xBE4000
	090 Move X8, [X8+2072]
	091 Move X0, X27
	092 Move X28, [X8]
	093 Move X1, X28
	094 Call 0x1C17E00
	095 Move X4, X0
	096 Compare X0, 0
	097 JumpIfNotEqual {99}
	098 Move X4, X31
	099 Move W8, [X24+24]
	100 NotImplemented "Instruction CMP not yet implemented."
	101 Move W5, [X31+12]
	102 Move X6, [X31+16]
	103 Move X0, X22
	104 Move X1, X21
	105 Move W2, W25
	106 Move W3, W26
	107 Move [X19], X4
	108 Call Protocol18.ReadDictionaryElements, X0, X1, X2, X3, X4, X5, X6
	109 Add X29, X29, 1
	110 NotImplemented "Instruction CMP not yet implemented."
	111 Move X0, X24
	112 Move X20, [X31+112]
	113 Move X19, [X31+120]
	114 Move X22, [X31+96]
	115 Move X21, [X31+104]
	116 Move X24, [X31+80]
	117 Move X23, [X31+88]
	118 Move X26, [X31+64]
	119 Move X25, [X31+72]
	120 Move X28, [X31+48]
	121 Move X27, [X31+56]
	122 Move X29, [X31+32]
	123 Move X30, [X31+40]
	124 Add X31, X31, 128
	125 Return X0
	126 Move X0, X27
	127 Move X1, X28
	128 Call 0x1C181E0
	129 Call 0x1C17F20
	130 Call 0x1C17F28
	131 Call 0x1C17F44
	132 Move X1, X31
	133 Call 0x1C17DEC
	134 Move X0, X25
	135 Move X1, X26
	136 Call 0x1C181E0

Method: System.Array ReadArrayInArray(ExitGames.Client.Photon.StreamBuffer stream, ExitGames.Client.Photon.IProtocol/DeserializationFlags flags, ExitGames.Client.Photon.ParameterDictionary parameters)

Disassembly:
	0x03511520 BL 0x1C16DFC
	0x03511524 MOV X0, X21
	0x03511528 MOV X1, X31
	0x0351152C BL 0x338C698
	0x03511530 LDR X8, [X22]
	0x03511534 MOV X21, X0
	0x03511538 MOVZ W1, 0x2
	0x0351153C MOV X0, X8
	0x03511540 BL 0x1C16D6C
	0x03511544 CBZ X0, 0x35115C8
	0x03511548 MOV X22, X0
	0x0351154C CBZ X19, 0x3511564
	0x03511550 LDR X8, [X22]
	0x03511554 MOV X0, X19
	0x03511558 LDR X1, [X8 + 0x40]
	0x0351155C BL 0x1C16E00
	0x03511560 CBZ X0, 0x35115D0
	0x03511564 LDR W8, [X22 + 0x18]
	0x03511568 CBZ W8, 0x35115CC
	0x0351156C STR X19, [X22 + 0x20]
	0x03511570 CBZ X20, 0x351158C
	0x03511574 LDR X8, [X22]
	0x03511578 MOV X0, X20
	0x0351157C LDR X1, [X8 + 0x40]
	0x03511580 BL 0x1C16E00
	0x03511584 CBZ X0, 0x35115D0
	0x03511588 LDR W8, [X22 + 0x18]
	0x0351158C CMP W8, 0x1
	0x03511590 B.LS 0x35115CC
	0x03511594 STR X20, [X22 + 0x28]
	0x03511598 CBZ X21, 0x35115C8
	0x0351159C LDR X8, [X21]
	0x035115A0 MOV X0, X21
	0x035115A4 MOV X1, X22
	0x035115A8 LDP X20, X19, [X31 + 0x40]
	0x035115AC LDR X3, [X8 + 0x8D8]
	0x035115B0 LDR X2, [X8 + 0x8E0]
	0x035115B4 LDP X22, X21, [X31 + 0x30]
	0x035115B8 LDP X24, X23, [X31 + 0x20]
	0x035115BC LDP X26, X25, [X31 + 0x10]
	0x035115C0 LDR X30, [X31], #0x50
	0x035115C4 BR X3
	0x035115C8 BL 0x1C16F20
	0x035115CC BL 0x1C16F28
	0x035115D0 BL 0x1C16F44
	0x035115D4 MOV X1, X31
	0x035115D8 BL 0x1C16DEC
	0x035115DC STP X30, X25, [X31 - 0x40]!
	0x035115E0 STP X24, X23, [X31 + 0x10]
	0x035115E4 STP X22, X21, [X31 + 0x20]
	0x035115E8 STP X20, X19, [X31 + 0x30]
	0x035115EC ADRP X19, 0xECE000
	0x035115F0 LDRB W8, [X19 + 0xAEB]
	0x035115F4 MOV X20, X1
	0x035115F8 MOV X21, X0
	0x035115FC TBNZ X8, 0x0, 0x3511644
	0x03511600 ADRP X0, 0xC0B000
	0x03511604 LDR X0, [X0 + 0x388]
	0x03511608 BL 0x1C16CF4
	0x0351160C ADRP X0, 0xBEB000
	0x03511610 LDR X0, [X0 + 0xBB0]
	0x03511614 BL 0x1C16CF4
	0x03511618 ADRP X0, 0xBEC000
	0x0351161C LDR X0, [X0 + 0x968]
	0x03511620 BL 0x1C16CF4
	0x03511624 ADRP X0, 0xBEA000
	0x03511628 LDR X0, [X0 + 0xC60]
	0x0351162C BL 0x1C16CF4
	0x03511630 ADRP X0, 0xBE2000
	0x03511634 LDR X0, [X0 + 0x6C0]
	0x03511638 BL 0x1C16CF4
	0x0351163C MOVZ W8, 0x1
	0x03511640 STRB W8, [X19 + 0xAEB]
	0x03511644 CBZ X20, 0x3511808
	0x03511648 ADRP X25, 0xBEB000
	0x0351164C ADRP X23, 0xBE2000
	0x03511650 LDR X25, [X25 + 0xBB0]
	0x03511654 LDR X23, [X23 + 0x6C0]
	0x03511658 MOV X0, X20
	0x0351165C MOV X1, X31
	0x03511660 BL 0x351EF00
	0x03511664 MOV W19, W0
	0x03511668 AND W24, W0, 0xFF
	0x0351166C MOV X0, X20
	0x03511670 MOV X1, X31

ISIL:
	001 Move [X31-96], X30
	002 Move [X31+16], X28
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X23, 0xECF000
	013 Move W8, [X23+2808]
	014 Move X19, X3
	015 Move W20, W2
	016 Move X21, X1
	017 Move X22, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {27}
	022 Move X0, 0xBE3000
	023 Move X0, [X0+3824]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X23+2808], W8
	027 Move X1, X21
	028 Call Protocol18.ReadCompressedUInt32, X0, X1
	029 Compare W0, 0
	030 JumpIfEqual {88}
	031 Move X28, 0xBE3000
	032 Move X28, [X28+3824]
	033 Move W23, W0
	034 Move X26, X31
	035 Move X25, X31
	036 Move W24, W31
	037 Move X0, X22
	038 Move X1, X21
	039 Move W2, W20
	040 Move X3, X19
	041 Call Protocol18.Read, X0, X1, X2, X3
	042 Compare X0, 0
	043 JumpIfEqual {86}
	044 Move X9, [X0]
	045 Move X8, [X28]
	046 Move X27, X0
	047 Move W11, [X9+304]
	048 Move W10, [X8+304]
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Move X9, [X9+200]
	051 Add X9, X9, X10
	052 NotImplemented "Instruction LDUR not yet implemented."
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Compare X26, 0
	055 JumpIfNotEqual {64}
	056 Move X0, X27
	057 Move X1, X31
	058 Call "il2cpp_vm_object_is_inst", X0
	059 Move W1, W23
	060 Move X2, X31
	061 Move X25, X0
	062 Call Array.CreateInstance, X0, X1
	063 Move X26, X0
	064 Move X0, X27
	065 Move X1, X31
	066 Call "il2cpp_vm_object_is_inst", X0
	067 Compare X25, 0
	068 JumpIfEqual {102}
	069 Move X8, [X25]
	070 Move X1, X0
	071 Move X0, X25
	072 Move X9, [X8+680]
	073 Move X2, [X8+688]
	074 NotImplemented "Instruction BLR not yet implemented."
	075 Move TEMP, X0
	076 And TEMP, TEMP, 1
	077 Compare TEMP, 1
	078 JumpIfNotEqual {86}
	079 Compare X26, 0
	080 JumpIfEqual {102}
	081 Move X0, X26
	082 Move X1, X27
	083 Move W2, W24
	084 Move X3, X31
	085 Call Array.SetValue, X0, X1, X2
	086 Add W24, W24, 1
	087 NotImplemented "Instruction CMP not yet implemented."
	088 Move X26, X31
	089 Move X0, X26
	090 Move X20, [X31+80]
	091 Move X19, [X31+88]
	092 Move X22, [X31+64]
	093 Move X21, [X31+72]
	094 Move X24, [X31+48]
	095 Move X23, [X31+56]
	096 Move X26, [X31+32]
	097 Move X25, [X31+40]
	098 Move X28, [X31+16]
	099 Move X27, [X31+24]
	100 Move X30, [X31+96]
	101 Return X0
	102 Call 0x1C17F20

Method: System.Int32 ReadInt1(ExitGames.Client.Photon.StreamBuffer stream, System.Boolean signNegative)

Disassembly:
	0x035102F8 BL 0x3517FDC
	0x035102FC ADD X0, X31, 0x4
	0x03510300 MOV X1, X31
	0x03510304 BL 0x337B6E0
	0x03510308 MOV X20, X0
	0x0351030C MOV X0, X19
	0x03510310 BL 0x19903C0
	0x03510314 MOV X0, X19
	0x03510318 MOV X1, X31
	0x0351031C BL 0x351EDB0
	0x03510320 STR W0, [X31]
	0x03510324 ADD X0, X31, 0x0

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Compare X1, 0
	004 JumpIfEqual {15}
	005 Move X0, X1
	006 Move X1, X31
	007 Move W19, W2
	008 Call StreamBuffer.ReadByte, X0
	009 And W8, W0, 255
	010 And W31, W19, 1
	011 NotImplemented "Instruction CSNEG not yet implemented."
	012 Move X30, [X31+16]
	013 Move X19, [X31+24]
	014 Return X0
	015 Call 0x1C17F20

Method: System.Int32 ReadInt2(ExitGames.Client.Photon.StreamBuffer stream, System.Boolean signNegative)

Disassembly:
	0x03510328 MOV X1, X31
	0x0351032C BL 0x337B6E0
	0x03510330 MOV X19, X0
	0x03510334 ADRP X0, 0xC24000
	0x03510338 LDR X0, [X0 + 0x330]
	0x0351033C BL 0x1C16D08
	0x03510340 MOV X21, X0
	0x03510344 ADRP X0, 0xC24000

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move W19, W2
	004 Call Protocol18.ReadUShort, X0, X1
	005 And W8, W0, 0xFFFF
	006 And W31, W19, 1
	007 NotImplemented "Instruction CSNEG not yet implemented."
	008 Move X30, [X31+16]
	009 Move X19, [X31+24]
	010 Return X0

Method: System.Int32 ReadCompressedInt32(ExitGames.Client.Photon.StreamBuffer stream)

Disassembly:
	0x03510348 LDR X0, [X0 + 0x338]
	0x0351034C BL 0x1C16D08
	0x03510350 MOV X2, X0
	0x03510354 MOV X0, X21
	0x03510358 MOV X1, X20
	0x0351035C MOV X3, X19
	0x03510360 MOV X4, X31

ISIL:
	001 Move [X31-16], X30
	002 Call Protocol18.ReadCompressedUInt32, X0, X1
	003 And W8, W0, 1
	004 Subtract W8, W31, W8
	005 Xor W0, W8, W0
	006 Move X30, [X31+16]
	007 Return X0

Method: System.UInt32 ReadCompressedUInt32(ExitGames.Client.Photon.StreamBuffer stream)

Disassembly:
	0x035118F4 CMP X8, X19
	0x035118F8 ADD W20, W20, 0x1
	0x035118FC B.LT 0x35118DC
	0x03511900 LDP X20, X19, [X31 + 0x20]
	0x03511904 LDP X22, X21, [X31 + 0x10]
	0x03511908 LDR X30, [X31], #0x30
	0x0351190C RET
	0x03511910 BL 0x1C16F20
	0x03511914 STP X29, X30, [X31 - 0x60]!
	0x03511918 STP X28, X27, [X31 + 0x10]
	0x0351191C STP X26, X25, [X31 + 0x20]
	0x03511920 STP X24, X23, [X31 + 0x30]
	0x03511924 STP X22, X21, [X31 + 0x40]
	0x03511928 STP X20, X19, [X31 + 0x50]
	0x0351192C ADRP X26, 0xECE000
	0x03511930 LDRB W8, [X26 + 0xAEE]
	0x03511934 MOV X19, X6
	0x03511938 MOV W20, W5
	0x0351193C MOV X21, X4
	0x03511940 MOV W22, W3
	0x03511944 MOV W23, W2
	0x03511948 MOV X24, X1
	0x0351194C MOV X25, X0
	0x03511950 TBNZ X8, 0x0, 0x3511968
	0x03511954 ADRP X0, 0xBE2000
	0x03511958 LDR X0, [X0 + 0x818]
	0x0351195C BL 0x1C16CF4
	0x03511960 MOVZ W8, 0x1
	0x03511964 STRB W8, [X26 + 0xAEE]
	0x03511968 MOV X1, X24
	0x0351196C BL 0x35108F4
	0x03511970 CBZ W0, 0x3511A64
	0x03511974 MOV W26, W0
	0x03511978 MOV W29, W31
	0x0351197C MOV X0, X25
	0x03511980 MOV X1, X24
	0x03511984 ANDS W31, W23, 0xFF
	0x03511988 B.EQ 0x35119A0
	0x0351198C MOV W2, W23
	0x03511990 MOV W3, W31
	0x03511994 MOV X4, X31
	0x03511998 BL 0x350D824
	0x0351199C B 0x35119AC
	0x035119A0 MOV W2, W20
	0x035119A4 MOV X3, X19
	0x035119A8 BL 0x350EE44
	0x035119AC MOV X27, X0
	0x035119B0 MOV X0, X25
	0x035119B4 MOV X1, X24
	0x035119B8 ANDS W31, W22, 0xFF
	0x035119BC B.EQ 0x35119D4
	0x035119C0 MOV W2, W22
	0x035119C4 MOV W3, W31
	0x035119C8 MOV X4, X31
	0x035119CC BL 0x350D824
	0x035119D0 B 0x35119E0
	0x035119D4 MOV W2, W20
	0x035119D8 MOV X3, X19
	0x035119DC BL 0x350EE44
	0x035119E0 MOV X28, X0
	0x035119E4 CBZ X27, 0x3511A58
	0x035119E8 CBZ X21, 0x3511A84
	0x035119EC LDR X8, [X21]
	0x035119F0 ADRP X10, 0xBE2000
	0x035119F4 LDRH W9, [X8 + 0x12E]
	0x035119F8 LDR X10, [X10 + 0x818]
	0x035119FC LDR X1, [X10]
	0x03511A00 CBZ X9, 0x3511A24
	0x03511A04 LDR X10, [X8 + 0xB0]
	0x03511A08 ADD X10, X10, 0x8
	0x03511A0C LDUR X11, [X10 - 0x8]
	0x03511A10 CMP X11, X1
	0x03511A14 B.EQ 0x3511A34
	0x03511A18 SUBS X9, X9, 0x1
	0x03511A1C ADD X10, X10, 0x10
	0x03511A20 B.NE 0x3511A0C
	0x03511A24 MOVZ W2, 0x5
	0x03511A28 MOV X0, X21
	0x03511A2C BL 0x1C5C788
	0x03511A30 B 0x3511A44
	0x03511A34 LDR W9, [X10]
	0x03511A38 ADD W9, W9, 0x5
	0x03511A3C ADD X8, X8, W9, 0x4, SXTW
	0x03511A40 ADD X0, X8, 0x138
	0x03511A44 LDP X8, X3, [X0]
	0x03511A48 MOV X0, X21
	0x03511A4C MOV X1, X27
	0x03511A50 MOV X2, X28
	0x03511A54 BLR X8
	0x03511A58 ADD W29, W29, 0x1
	0x03511A5C CMP W29, W26
	0x03511A60 B.NE 0x351197C
	0x03511A64 LDP X20, X19, [X31 + 0x50]
	0x03511A68 LDP X22, X21, [X31 + 0x40]
	0x03511A6C LDP X24, X23, [X31 + 0x30]
	0x03511A70 LDP X26, X25, [X31 + 0x20]
	0x03511A74 LDP X28, X27, [X31 + 0x10]
	0x03511A78 MOVZ W0, 0x1
	0x03511A7C LDP X29, X30, [X31], #0x60
	0x03511A80 RET
	0x03511A84 BL 0x1C16F20
	0x03511A88 STP X29, X30, [X31 - 0x60]!
	0x03511A8C STP X28, X27, [X31 + 0x10]
	0x03511A90 STP X26, X25, [X31 + 0x20]
	0x03511A94 STP X24, X23, [X31 + 0x30]
	0x03511A98 STP X22, X21, [X31 + 0x40]
	0x03511A9C STP X20, X19, [X31 + 0x50]
	0x03511AA0 ADRP X24, 0xECE000
	0x03511AA4 ADRP X23, 0xC23000
	0x03511AA8 LDRB W8, [X24 + 0xAF0]
	0x03511AAC LDR X23, [X23 + 0x370]
	0x03511AB0 MOV X19, X3
	0x03511AB4 MOV W20, W2
	0x03511AB8 MOV X21, X1
	0x03511ABC MOV X22, X0
	0x03511AC0 TBNZ X8, 0x0, 0x3511AFC
	0x03511AC4 ADRP X0, 0xC23000
	0x03511AC8 LDR X0, [X0 + 0x370]
	0x03511ACC BL 0x1C16CF4
	0x03511AD0 ADRP X0, 0xC0B000
	0x03511AD4 LDR X0, [X0 + 0x6F8]
	0x03511AD8 BL 0x1C16CF4
	0x03511ADC ADRP X0, 0xC23000
	0x03511AE0 LDR X0, [X0 + 0x378]
	0x03511AE4 BL 0x1C16CF4
	0x03511AE8 ADRP X0, 0xC23000
	0x03511AEC LDR X0, [X0 + 0x380]
	0x03511AF0 BL 0x1C16CF4
	0x03511AF4 MOVZ W8, 0x1
	0x03511AF8 STRB W8, [X24 + 0xAF0]
	0x03511AFC MOV X1, X21
	0x03511B00 BL 0x35108F4
	0x03511B04 LDR X8, [X23]
	0x03511B08 MOV W24, W0
	0x03511B0C MOV W1, W24
	0x03511B10 MOV X0, X8
	0x03511B14 BL 0x1C16D6C
	0x03511B18 MOV X23, X0
	0x03511B1C CBZ W24, 0x3511C44
	0x03511B20 ADRP X26, 0xC0B000
	0x03511B24 ADRP X28, 0xC23000
	0x03511B28 LDR X26, [X26 + 0x6F8]
	0x03511B2C LDR X28, [X28 + 0x380]
	0x03511B30 MOV X25, X31
	0x03511B34 MOV W29, W24
	0x03511B38 ADD X27, X23, 0x20
	0x03511B3C MOV X0, X22
	0x03511B40 MOV X1, X21
	0x03511B44 MOV W2, W20
	0x03511B48 MOV X3, X19
	0x03511B4C BL 0x350EE44
	0x03511B50 CBZ X23, 0x3511C68
	0x03511B54 MOV X24, X0
	0x03511B58 CBZ X0, 0x3511BBC
	0x03511B5C LDR X9, [X24]
	0x03511B60 LDR X8, [X26]
	0x03511B64 LDRB W11, [X9 + 0x130]
	0x03511B68 LDRB W10, [X8 + 0x130]
	0x03511B6C CMP W11, W10
	0x03511B70 B.CC 0x3511BA0
	0x03511B74 LDR X9, [X9 + 0xC8]
	0x03511B78 ADD X9, X9, X10, 0x3, LSL
	0x03511B7C LDUR X9, [X9 - 0x8]
	0x03511B80 CMP X9, X8
	0x03511B84 B.NE 0x3511BA0
	0x03511B88 LDR X8, [X23]
	0x03511B8C MOV X0, X24
	0x03511B90 LDR X1, [X8 + 0x40]
	0x03511B94 BL 0x1C16E00
	0x03511B98 CBZ X0, 0x3511C6C
	0x03511B9C LDR X8, [X26]
	0x03511BA0 LDR X9, [X24]
	0x03511BA4 LDRB W10, [X8 + 0x130]
	0x03511BA8 LDRB W11, [X9 + 0x130]
	0x03511BAC CMP W11, W10
	0x03511BB0 B.CS 0x3511BF0
	0x03511BB4 MOV X9, X31
	0x03511BB8 B 0x3511C04

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move [X31+8], W31
	009 Compare X1, 0
	010 JumpIfEqual {185}
	011 Move X19, X1
	012 Move X0, X1
	013 Move X1, X31
	014 Call StreamBuffer.GetBuffer, X0
	015 Move X20, X0
	016 Move X0, X19
	017 Move X1, X31
	018 Call StreamBuffer.get_Position, X0
	019 Add X8, X20, W0
	020 Move W22, W0
	021 Move W23, W31
	022 Move W21, W31
	023 Move [X31+12], W0
	024 Add X24, X8, 32
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move X0, X19
	027 Move X1, X31
	028 Call StreamBuffer.get_Length, X0
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Compare X20, 0
	031 JumpIfEqual {185}
	032 Move W8, [X20+24]
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move W8, [X24+1]
	035 Add W22, W22, 1
	036 Move [X31+12], W22
	037 And W9, W8, 127
	038 NotImplemented "Instruction LSLV not yet implemented."
	039 Or W21, W9, W21
	040 Add W23, W23, 7
	041 Move TEMP, X8
	042 And TEMP, TEMP, 128
	043 Compare TEMP, 128
	044 JumpIfEqual {25}
	045 Move X0, X19
	046 Move W1, W22
	047 Move X2, X31
	048 Call StreamBuffer.set_Position, X0, X1
	049 Move W0, W21
	050 Move X20, [X31+48]
	051 Move X19, [X31+56]
	052 Move X22, [X31+32]
	053 Move X21, [X31+40]
	054 Move X24, [X31+16]
	055 Move X23, [X31+24]
	056 Move X30, [X31+64]
	057 Return X0
	058 Move X0, X19
	059 Call 0x19913C0
	060 Move X0, X19
	061 Move X1, X31
	062 Call StreamBuffer.get_Length, X0
	063 Move W21, W0
	064 Move X0, X19
	065 Call 0x19913C0
	066 Move X0, X19
	067 Move W1, W21
	068 Move X2, X31
	069 Call StreamBuffer.set_Position, X0, X1
	070 Move X0, 0xBE3000
	071 Move X0, [X0+2760]
	072 Call 0x1C17D08
	073 Move W1, 8
	074 Call 0x1C17D6C
	075 Move X21, X0
	076 Call 0x19913C0
	077 Move X0, 0xC24000
	078 Move X0, [X0+840]
	079 Call 0x1C17D08
	080 Move X2, X0
	081 Move X0, X21
	082 Move X1, X31
	083 Call 0x1994444
	084 Add X0, X31, 12
	085 Move X1, X31
	086 Call Int32.ToString, X0
	087 Move X22, X0
	088 Move X0, X21
	089 Call 0x19913C0
	090 Move W1, 1
	091 Move X0, X21
	092 Move X2, X22
	093 Call 0x1994444
	094 Move X0, X21
	095 Call 0x19913C0
	096 Move X0, 0xC24000
	097 Move X0, [X0+848]
	098 Call 0x1C17D08
	099 Move X2, X0
	100 Move W1, 2
	101 Move X0, X21
	102 Call 0x1994444
	103 Move X0, X19
	104 Call 0x19913C0
	105 Move X0, X19
	106 Move X1, X31
	107 Call StreamBuffer.get_Length, X0
	108 Move [X31+8], W0
	109 Add X0, X31, 8
	110 Move X1, X31
	111 Call Int32.ToString, X0
	112 Move X22, X0
	113 Move X0, X21
	114 Call 0x19913C0
	115 Move W1, 3
	116 Move X0, X21
	117 Move X2, X22
	118 Call 0x1994444
	119 Move X0, X21
	120 Call 0x19913C0
	121 Move X0, 0xC24000
	122 Move X0, [X0+856]
	123 Call 0x1C17D08
	124 Move X2, X0
	125 Move W1, 4
	126 Move X0, X21
	127 Call 0x1994444
	128 Move X0, X20
	129 Call 0x19913C0
	130 Move X8, [X20+24]
	131 Add X0, X31, 8
	132 Move X1, X31
	133 Move [X31+8], W8
	134 Call Int32.ToString, X0
	135 Move X20, X0
	136 Move X0, X21
	137 Call 0x19913C0
	138 Move W1, 5
	139 Move X0, X21
	140 Move X2, X20
	141 Call 0x1994444
	142 Move X0, X21
	143 Call 0x19913C0
	144 Move X0, 0xC24000
	145 Move X0, [X0+864]
	146 Call 0x1C17D08
	147 Move X2, X0
	148 Move W1, 6
	149 Move X0, X21
	150 Call 0x1994444
	151 Move X0, X19
	152 Call 0x19913C0
	153 Move X0, X19
	154 Move X1, X31
	155 Call StreamBuffer.get_Available, X0
	156 Move [X31+8], W0
	157 Add X0, X31, 8
	158 Move X1, X31
	159 Call Int32.ToString, X0
	160 Move X19, X0
	161 Move X0, X21
	162 Call 0x19913C0
	163 Move W1, 7
	164 Move X0, X21
	165 Move X2, X19
	166 Call 0x1994444
	167 Move X0, X21
	168 Move X1, X31
	169 Call String.Concat, X0
	170 Move X19, X0
	171 Move X0, 0xC15000
	172 Move X0, [X0+984]
	173 Call 0x1C17D08
	174 Call 0x1C17F10
	175 Move X1, X19
	176 Move X2, X31
	177 Move X20, X0
	178 Call EndOfStreamException..ctor, X0, X1
	179 Move X0, 0xC24000
	180 Move X0, [X0+872]
	181 Call 0x1C17D08
	182 Move X1, X0
	183 Move X0, X20
	184 Call 0x1C17DEC
	185 Call 0x1C17F20
	186 Call 0x1C17F28

Method: System.Int64 ReadCompressedInt64(ExitGames.Client.Photon.StreamBuffer stream)

Disassembly:
	0x03510364 BL 0x32277C4
	0x03510368 MOV X19, X0
	0x0351036C ADRP X0, 0xC24000
	0x03510370 LDR X0, [X0 + 0x68]
	0x03510374 BL 0x1C16D08
	0x03510378 BL 0x1C16F10
	0x0351037C MOV X1, X19

ISIL:
	001 Move [X31-16], X30
	002 Call Protocol18.ReadCompressedUInt64, X0, X1
	003 And X8, X0, 1
	004 Subtract X8, X31, X8
	005 Xor X0, X8, X0
	006 Move X30, [X31+16]
	007 Return X0

Method: System.UInt64 ReadCompressedUInt64(ExitGames.Client.Photon.StreamBuffer stream)

Disassembly:
	0x03512C88 CMP X20, 0xFF
	0x03512C8C B.GT 0x3512CFC
	0x03512C90 CBZ X19, 0x3512D88
	0x03512C94 MOVZ W1, 0xF
	0x03512C98 MOV X0, X19
	0x03512C9C MOV X2, X31
	0x03512CA0 BL 0x351EFE8
	0x03512CA4 MOV X0, X19
	0x03512CA8 MOV W1, W20
	0x03512CAC B 0x3512CBC
	0x03512CB0 CBZ X19, 0x3512D88
	0x03512CB4 MOVZ W1, 0x1F
	0x03512CB8 MOV X0, X19
	0x03512CBC LDP X20, X19, [X31 + 0x10]
	0x03512CC0 MOV X2, X31
	0x03512CC4 LDP X30, X21, [X31], #0x20
	0x03512CC8 B 0x351EFE8
	0x03512CCC MOVN X8, 0xFFFE
	0x03512CD0 CMP X20, X8
	0x03512CD4 B.LT 0x3512D28
	0x03512CD8 ADDS X31, X20, 0xFF
	0x03512CDC B.LT 0x3512D58
	0x03512CE0 CBZ X19, 0x3512D88
	0x03512CE4 MOVZ W1, 0x10
	0x03512CE8 MOV X0, X19
	0x03512CEC MOV X2, X31
	0x03512CF0 BL 0x351EFE8
	0x03512CF4 SUB W1, W31, W20
	0x03512CF8 B 0x3512CB8
	0x03512CFC CMP X20, 0x10000
	0x03512D00 B.GE 0x3512D28
	0x03512D04 CBZ X19, 0x3512D88
	0x03512D08 MOVZ W1, 0x11
	0x03512D0C MOV X0, X19
	0x03512D10 MOV X2, X31
	0x03512D14 BL 0x351EFE8
	0x03512D18 UBFM X2, X20, 0x8, 0x3F
	0x03512D1C MOV X0, X19
	0x03512D20 MOV W1, W20
	0x03512D24 B 0x3512D78
	0x03512D28 CBZ X19, 0x3512D88
	0x03512D2C MOVZ W1, 0xA
	0x03512D30 MOV X0, X19
	0x03512D34 MOV X2, X31
	0x03512D38 BL 0x351EFE8
	0x03512D3C UBFM X8, X20, 0x3F, 0x3E
	0x03512D40 EOR X2, X8, X20, 0x3F
	0x03512D44 MOV X1, X19
	0x03512D48 LDP X20, X19, [X31 + 0x10]
	0x03512D4C MOV X0, X21
	0x03512D50 LDP X30, X21, [X31], #0x20
	0x03512D54 B 0x3515D80
	0x03512D58 CBZ X19, 0x3512D88
	0x03512D5C MOVZ W1, 0x12
	0x03512D60 MOV X0, X19
	0x03512D64 MOV X2, X31
	0x03512D68 BL 0x351EFE8
	0x03512D6C SUB W1, W31, W20
	0x03512D70 UBFM W2, W1, 0x8, 0xF

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Compare X1, 0
	006 JumpIfEqual {45}
	007 Move X19, X1
	008 Move X0, X1
	009 Move X1, X31
	010 Call StreamBuffer.GetBuffer, X0
	011 Move X21, X0
	012 Move X0, X19
	013 Move X1, X31
	014 Call StreamBuffer.get_Position, X0
	015 Move W1, W0
	016 Move W8, W31
	017 Move X20, X31
	018 Add W9, W0, 10
	019 NotImplemented "Instruction CMP not yet implemented."
	020 Compare X21, 0
	021 JumpIfEqual {45}
	022 Move W10, [X21+24]
	023 NotImplemented "Instruction CMP not yet implemented."
	024 Add X10, X21, W1
	025 Move W10, [X10+32]
	026 Add W1, W1, 1
	027 And X11, X10, 127
	028 NotImplemented "Instruction LSLV not yet implemented."
	029 Or X20, X11, X20
	030 Add W8, W8, 7
	031 Move TEMP, X10
	032 And TEMP, TEMP, 128
	033 Compare TEMP, 128
	034 JumpIfEqual {19}
	035 Move W1, W9
	036 Move X0, X19
	037 Move X2, X31
	038 Call StreamBuffer.set_Position, X0, X1
	039 Move X0, X20
	040 Move X20, [X31+16]
	041 Move X19, [X31+24]
	042 Move X30, [X31+32]
	043 Move X21, [X31+40]
	044 Return X0
	045 Call 0x1C17F20
	046 Move X0, 0xC14000
	047 Move X0, [X0+984]
	048 Call 0x1C17D08
	049 Call 0x1C17F10
	050 Move X19, X0
	051 Move X0, 0xC23000
	052 Move X0, [X0+904]
	053 Call 0x1C17D08
	054 Move X1, X0
	055 Move X0, X19
	056 Move X2, X31
	057 Call EndOfStreamException..ctor, X0, X1
	058 Move X0, 0xC23000
	059 Move X0, [X0+912]
	060 Call 0x1C17D08
	061 Move X1, X0
	062 Move X0, X19
	063 Call 0x1C17DEC
	064 Call 0x1C17F28

Method: System.Int32[] ReadCompressedInt32Array(ExitGames.Client.Photon.StreamBuffer stream)

Disassembly:
	0x035113B0 BL 0x1C16CF4
	0x035113B4 MOVZ W8, 0x1
	0x035113B8 STRB W8, [X23 + 0xAEA]
	0x035113BC CBZ X20, 0x35115C8
	0x035113C0 ADRP X26, 0xBEB000
	0x035113C4 ADRP X24, 0xBE2000
	0x035113C8 LDR X26, [X26 + 0xBB0]
	0x035113CC LDR X24, [X24 + 0x6C0]
	0x035113D0 MOV X0, X20
	0x035113D4 MOV X1, X31
	0x035113D8 BL 0x351EF00
	0x035113DC STRB W0, [X19]
	0x035113E0 MOV X0, X20
	0x035113E4 MOV X1, X31
	0x035113E8 BL 0x351EF00
	0x035113EC STRB W0, [X21]
	0x035113F0 LDRB W19, [X19]
	0x035113F4 MOV W23, W0
	0x035113F8 CBZ W19, 0x3511418
	0x035113FC LDR X0, [X26]
	0x03511400 LDR W8, [X0 + 0xE0]
	0x03511404 CBNZ W8, 0x351140C
	0x03511408 BL 0x1C16DFC
	0x0351140C MOV W0, W19
	0x03511410 BL 0x350E22C
	0x03511414 B 0x3511440
	0x03511418 ADRP X8, 0xBEC000
	0x0351141C LDR X0, [X24]
	0x03511420 LDR X8, [X8 + 0x968]
	0x03511424 LDR W9, [X0 + 0xE0]
	0x03511428 LDR X19, [X8]
	0x0351142C CBNZ W9, 0x3511434
	0x03511430 BL 0x1C16DFC
	0x03511434 MOV X0, X19
	0x03511438 MOV X1, X31
	0x0351143C BL 0x338C698
	0x03511440 ADRP X25, 0xC0B000
	0x03511444 LDR X25, [X25 + 0x388]
	0x03511448 AND W8, W23, 0xFF
	0x0351144C MOV X19, X0
	0x03511450 CMP W8, 0x16
	0x03511454 B.LE 0x3511480
	0x03511458 CMP W8, 0x17
	0x0351145C B.EQ 0x351149C
	0x03511460 CMP W8, 0x40
	0x03511464 B.EQ 0x35114AC

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xECF000
	007 Move X20, 0xBE4000
	008 Move W8, [X21+2809]
	009 Move X20, [X20+3672]
	010 Move X19, X1
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0xBE4000
	016 Move X0, [X0+3672]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X21+2809], W8
	020 Move X1, X19
	021 Call Protocol18.ReadCompressedUInt32, X0, X1
	022 Move X8, [X20]
	023 Move W1, W0
	024 Move X0, X8
	025 Call 0x1C17D6C
	026 Compare X0, 0
	027 JumpIfEqual {51}
	028 Move W8, [X0+24]
	029 Move X20, X0
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move X21, X31
	032 Add X22, X20, 32
	033 Move X1, X19
	034 Call Protocol18.ReadCompressedUInt32, X0, X1
	035 Move W8, [X20+24]
	036 NotImplemented "Instruction CMP not yet implemented."
	037 And W9, W0, 1
	038 Subtract W9, W31, W9
	039 Xor W9, W9, W0
	040 Move [X22], W9
	041 Add X21, X21, 1
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X0, X20
	044 Move X20, [X31+32]
	045 Move X19, [X31+40]
	046 Move X22, [X31+16]
	047 Move X21, [X31+24]
	048 Move X30, [X31+48]
	049 Return X0
	050 Call 0x1C17F28
	051 Call 0x1C17F20

Method: System.Int64[] ReadCompressedInt64Array(ExitGames.Client.Photon.StreamBuffer stream)

Disassembly:
	0x03511468 CMP W8, 0x55
	0x0351146C B.NE 0x35114EC
	0x03511470 ADRP X8, 0xC23000
	0x03511474 LDR X0, [X24]
	0x03511478 LDR X8, [X8 + 0x2C0]
	0x0351147C B 0x35114CC
	0x03511480 CBZ W8, 0x35114C0
	0x03511484 CMP W8, 0x14
	0x03511488 B.NE 0x35114EC
	0x0351148C MOV X0, X22
	0x03511490 MOV X1, X20
	0x03511494 BL 0x35115DC
	0x03511498 B 0x3511504
	0x0351149C ADRP X8, 0xC14000
	0x035114A0 LDR X0, [X24]
	0x035114A4 LDR X8, [X8 + 0x160]
	0x035114A8 B 0x35114CC
	0x035114AC MOV X1, X20
	0x035114B0 BL 0x351181C
	0x035114B4 MOV X20, X0
	0x035114B8 STRB W31, [X21]
	0x035114BC B 0x3511508
	0x035114C0 ADRP X8, 0xBEC000
	0x035114C4 LDR X0, [X24]
	0x035114C8 LDR X8, [X8 + 0x968]
	0x035114CC LDR W9, [X0 + 0xE0]
	0x035114D0 LDR X20, [X8]
	0x035114D4 CBNZ W9, 0x35114DC
	0x035114D8 BL 0x1C16DFC
	0x035114DC MOV X0, X20
	0x035114E0 MOV X1, X31
	0x035114E4 BL 0x338C698
	0x035114E8 B 0x3511504
	0x035114EC LDR X0, [X26]
	0x035114F0 LDR W8, [X0 + 0xE0]
	0x035114F4 CBNZ W8, 0x35114FC
	0x035114F8 BL 0x1C16DFC
	0x035114FC MOV W0, W23
	0x03511500 BL 0x350E40C
	0x03511504 MOV X20, X0
	0x03511508 LDR X0, [X24]
	0x0351150C ADRP X22, 0xBEA000
	0x03511510 LDR X21, [X25]
	0x03511514 LDR W8, [X0 + 0xE0]
	0x03511518 LDR X22, [X22 + 0xC60]
	0x0351151C CBNZ W8, 0x3511524

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xECF000
	007 Move X20, 0xC14000
	008 Move W8, [X21+2810]
	009 Move X20, [X20+2104]
	010 Move X19, X1
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0xC14000
	016 Move X0, [X0+2104]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X21+2810], W8
	020 Move X1, X19
	021 Call Protocol18.ReadCompressedUInt32, X0, X1
	022 Move X8, [X20]
	023 Move W1, W0
	024 Move X0, X8
	025 Call 0x1C17D6C
	026 Compare X0, 0
	027 JumpIfEqual {51}
	028 Move W8, [X0+24]
	029 Move X20, X0
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Move X21, X31
	032 Add X22, X20, 32
	033 Move X1, X19
	034 Call Protocol18.ReadCompressedUInt64, X0, X1
	035 Move W8, [X20+24]
	036 NotImplemented "Instruction CMP not yet implemented."
	037 And X9, X0, 1
	038 Subtract X9, X31, X9
	039 Xor X9, X9, X0
	040 Move [X22], X9
	041 Add X21, X21, 1
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X0, X20
	044 Move X20, [X31+32]
	045 Move X19, [X31+40]
	046 Move X22, [X31+16]
	047 Move X21, [X31+24]
	048 Move X30, [X31+48]
	049 Return X0
	050 Call 0x1C17F28
	051 Call 0x1C17F20

Method: System.Int32 DecodeZigZag32(System.UInt32 value)

Disassembly:
	0x03512C78 TBZ X3, 0x0, 0x3512D3C
	0x03512C7C CBZ X20, 0x3512CB0
	0x03512C80 CMP X20, 0x1
	0x03512C84 B.LT 0x3512CCC

ISIL:
	001 And W8, W1, 1
	002 Subtract W8, W31, W8
	003 Xor W0, W8, W1
	004 Return X0

Method: System.Int64 DecodeZigZag64(System.UInt64 value)

Disassembly:
	0x03512D74 MOV X0, X19
	0x03512D78 LDP X20, X19, [X31 + 0x10]
	0x03512D7C MOV X3, X31
	0x03512D80 LDP X30, X21, [X31], #0x20

ISIL:
	001 And X8, X1, 1
	002 Subtract X8, X31, X8
	003 Xor X0, X8, X1
	004 Return X0

Method: System.Void Write(ExitGames.Client.Photon.StreamBuffer stream, System.Object value, System.Boolean writeType)

Disassembly:
	0x0350E5EC LDR X0, [X8]
	0x0350E5F0 ADRP X8, 0xC0D000
	0x0350E5F4 LDR X8, [X8 + 0xA80]
	0x0350E5F8 B 0x350E768
	0x0350E5FC ADRP X8, 0xBE5000
	0x0350E600 LDR X8, [X8 + 0x6C0]
	0x0350E604 LDR X0, [X8]
	0x0350E608 ADRP X8, 0xC0D000
	0x0350E60C LDR X8, [X8 + 0xA78]
	0x0350E610 B 0x350E768
	0x0350E614 ADRP X8, 0xBE5000
	0x0350E618 LDR X8, [X8 + 0x6C0]
	0x0350E61C LDR X0, [X8]
	0x0350E620 ADRP X8, 0xC0D000
	0x0350E624 LDR X8, [X8 + 0xB60]
	0x0350E628 B 0x350E768
	0x0350E62C ADRP X8, 0xBE5000
	0x0350E630 LDR X8, [X8 + 0x6C0]
	0x0350E634 LDR X0, [X8]
	0x0350E638 ADRP X8, 0xC26000
	0x0350E63C LDR X8, [X8 + 0x88]
	0x0350E640 B 0x350E768
	0x0350E644 ADRP X8, 0xBE5000
	0x0350E648 LDR X8, [X8 + 0x6C0]
	0x0350E64C LDR X0, [X8]
	0x0350E650 ADRP X8, 0xC26000
	0x0350E654 LDR X8, [X8 + 0x90]
	0x0350E658 B 0x350E768

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move W22, W3
	007 Move X19, X1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfEqual {23}
	011 Move X0, X2
	012 Move X1, X31
	013 Move X21, X2
	014 Call "il2cpp_vm_object_is_inst", X0
	015 Move X1, X0
	016 Move X0, X20
	017 Call Protocol18.GetCodeOfType, X0, X1
	018 And W4, W22, 1
	019 Move W3, W0
	020 Move X0, X20
	021 Move X1, X19
	022 Move X2, X21
	023 And W4, W22, 1
	024 Move W3, 8
	025 Move X0, X20
	026 Move X1, X19
	027 Move X20, [X31+32]
	028 Move X19, [X31+40]
	029 Move X22, [X31+16]
	030 Move X21, [X31+24]
	031 Move X30, [X31+48]
	032 Call Protocol18.Write, X0, X1, X2, X3, X4
	033 Return 

Method: System.Void Write(ExitGames.Client.Photon.StreamBuffer stream, System.Object value, ExitGames.Client.Photon.Protocol18/GpType gpType, System.Boolean writeType)

Disassembly:
	0x03512D84 B 0x351F050
	0x03512D88 BL 0x1C16F20
	0x03512D8C STR D8, [X31 - 0x30]!
	0x03512D90 STP X30, X21, [X31 + 0x10]
	0x03512D94 STP X20, X19, [X31 + 0x20]
	0x03512D98 MOV V8.16B, V0.16B
	0x03512D9C MOV X19, X1
	0x03512DA0 MOV X20, X0
	0x03512DA4 STR W31, [X31 + 0xC]
	0x03512DA8 STRB W31, [X31 + 0x8]
	0x03512DAC TBZ X2, 0x0, 0x3512DC8
	0x03512DB0 CBZ X19, 0x3512E54
	0x03512DB4 MOVZ W1, 0x5
	0x03512DB8 MOV X0, X19
	0x03512DBC MOV X2, X31
	0x03512DC0 BL 0x351EFE8
	0x03512DC4 B 0x3512DCC
	0x03512DC8 CBZ X19, 0x3512E54
	0x03512DCC ADD X2, X31, 0xC
	0x03512DD0 MOVZ W1, 0x4
	0x03512DD4 MOV X0, X19
	0x03512DD8 MOV X3, X31
	0x03512DDC BL 0x351ECA4
	0x03512DE0 LDR X19, [X20 + 0x28]
	0x03512DE4 MOV X21, X0
	0x03512DE8 STRB W31, [X31 + 0x8]
	0x03512DEC ADD X1, X31, 0x8
	0x03512DF0 MOV X0, X19
	0x03512DF4 MOV X2, X31
	0x03512DF8 BL 0x33DE64C
	0x03512DFC LDR X0, [X20 + 0x28]
	0x03512E00 CBZ X0, 0x3512E60
	0x03512E04 LDR W8, [X0 + 0x18]
	0x03512E08 CBZ W8, 0x3512E64
	0x03512E0C STR S8, [X0 + 0x20]
	0x03512E10 LDR W3, [X31 + 0xC]
	0x03512E14 MOVZ W4, 0x4
	0x03512E18 MOV W1, W31
	0x03512E1C MOV X2, X21
	0x03512E20 MOV X5, X31
	0x03512E24 BL 0x33A8A9C
	0x03512E28 MOV X20, X31
	0x03512E2C LDRB W8, [X31 + 0x8]
	0x03512E30 CBZ W8, 0x3512E40
	0x03512E34 MOV X0, X19
	0x03512E38 MOV X1, X31
	0x03512E3C BL 0x33E14E4
	0x03512E40 CBNZ X20, 0x3512E58
	0x03512E44 LDP X20, X19, [X31 + 0x20]
	0x03512E48 LDP X30, X21, [X31 + 0x10]
	0x03512E4C LDR V8, [X31], #0x30
	0x03512E50 RET
	0x03512E54 BL 0x1C16F20
	0x03512E58 MOV X0, X20
	0x03512E5C BL 0x1C16F18
	0x03512E60 BL 0x1C16F20
	0x03512E64 BL 0x1C16F28
	0x03512E68 B 0x3512E70
	0x03512E6C B 0x3512E70
	0x03512E70 MOV X21, X0
	0x03512E74 CMP W1, 0x1
	0x03512E78 B.NE 0x3512E90
	0x03512E7C MOV X0, X21
	0x03512E80 BL 0x3EB1AD0
	0x03512E84 LDR X20, [X0]
	0x03512E88 BL 0x3EB1AE0
	0x03512E8C B 0x3512E2C
	0x03512E90 MOV X20, X31
	0x03512E94 B 0x3512E9C
	0x03512E98 MOV X21, X0
	0x03512E9C LDRB W8, [X31 + 0x8]
	0x03512EA0 CBZ W8, 0x3512EB0
	0x03512EA4 MOV X0, X19
	0x03512EA8 MOV X1, X31
	0x03512EAC BL 0x33E14E4
	0x03512EB0 CBNZ X20, 0x3512EBC
	0x03512EB4 MOV X0, X21
	0x03512EB8 BL 0x1D2C690
	0x03512EBC MOV X0, X20
	0x03512EC0 BL 0x1C16F18
	0x03512EC4 BL 0x1990590
	0x03512EC8 STR D8, [X31 - 0x30]!
	0x03512ECC STP X30, X21, [X31 + 0x10]
	0x03512ED0 STP X20, X19, [X31 + 0x20]
	0x03512ED4 MOV V8.16B, V0.16B
	0x03512ED8 MOV X19, X1
	0x03512EDC MOV X20, X0
	0x03512EE0 STR W31, [X31 + 0xC]
	0x03512EE4 STRB W31, [X31 + 0x8]
	0x03512EE8 TBZ X2, 0x0, 0x3512F04
	0x03512EEC CBZ X19, 0x3512F90
	0x03512EF0 MOVZ W1, 0x6
	0x03512EF4 MOV X0, X19
	0x03512EF8 MOV X2, X31
	0x03512EFC BL 0x351EFE8
	0x03512F00 B 0x3512F08
	0x03512F04 CBZ X19, 0x3512F90
	0x03512F08 ADD X2, X31, 0xC
	0x03512F0C MOVZ W1, 0x8
	0x03512F10 MOV X0, X19
	0x03512F14 MOV X3, X31
	0x03512F18 BL 0x351ECA4
	0x03512F1C LDR X19, [X20 + 0x20]
	0x03512F20 MOV X21, X0
	0x03512F24 STRB W31, [X31 + 0x8]
	0x03512F28 ADD X1, X31, 0x8
	0x03512F2C MOV X0, X19
	0x03512F30 MOV X2, X31
	0x03512F34 BL 0x33DE64C
	0x03512F38 LDR X0, [X20 + 0x20]
	0x03512F3C CBZ X0, 0x3512F9C
	0x03512F40 LDR W8, [X0 + 0x18]
	0x03512F44 CBZ W8, 0x3512FA0
	0x03512F48 STR D8, [X0 + 0x20]
	0x03512F4C LDR W3, [X31 + 0xC]
	0x03512F50 MOVZ W4, 0x8
	0x03512F54 MOV W1, W31
	0x03512F58 MOV X2, X21
	0x03512F5C MOV X5, X31
	0x03512F60 BL 0x33A8A9C
	0x03512F64 MOV X20, X31
	0x03512F68 LDRB W8, [X31 + 0x8]
	0x03512F6C CBZ W8, 0x3512F7C
	0x03512F70 MOV X0, X19
	0x03512F74 MOV X1, X31
	0x03512F78 BL 0x33E14E4
	0x03512F7C CBNZ X20, 0x3512F94
	0x03512F80 LDP X20, X19, [X31 + 0x20]
	0x03512F84 LDP X30, X21, [X31 + 0x10]
	0x03512F88 LDR V8, [X31], #0x30
	0x03512F8C RET
	0x03512F90 BL 0x1C16F20
	0x03512F94 MOV X0, X20
	0x03512F98 BL 0x1C16F18
	0x03512F9C BL 0x1C16F20
	0x03512FA0 BL 0x1C16F28
	0x03512FA4 B 0x3512FAC
	0x03512FA8 B 0x3512FAC
	0x03512FAC MOV X21, X0
	0x03512FB0 CMP W1, 0x1
	0x03512FB4 B.NE 0x3512FCC
	0x03512FB8 MOV X0, X21
	0x03512FBC BL 0x3EB1AD0
	0x03512FC0 LDR X20, [X0]
	0x03512FC4 BL 0x3EB1AE0
	0x03512FC8 B 0x3512F68
	0x03512FCC MOV X20, X31
	0x03512FD0 B 0x3512FD8
	0x03512FD4 MOV X21, X0
	0x03512FD8 LDRB W8, [X31 + 0x8]
	0x03512FDC CBZ W8, 0x3512FEC
	0x03512FE0 MOV X0, X19
	0x03512FE4 MOV X1, X31
	0x03512FE8 BL 0x33E14E4
	0x03512FEC CBNZ X20, 0x3512FF8
	0x03512FF0 MOV X0, X21
	0x03512FF4 BL 0x1D2C690
	0x03512FF8 MOV X0, X20
	0x03512FFC BL 0x1C16F18
	0x03513000 BL 0x1990590
	0x03513004 STR X30, [X31 - 0x40]!
	0x03513008 STP X24, X23, [X31 + 0x10]
	0x0351300C STP X22, X21, [X31 + 0x20]
	0x03513010 STP X20, X19, [X31 + 0x30]
	0x03513014 ADRP X23, 0xECC000
	0x03513018 LDRB W8, [X23 + 0xB06]
	0x0351301C MOV W22, W3
	0x03513020 MOV X19, X2
	0x03513024 MOV X20, X1
	0x03513028 MOV X21, X0
	0x0351302C TBNZ X8, 0x0, 0x351305C
	0x03513030 ADRP X0, 0xC21000
	0x03513034 LDR X0, [X0 + 0x10]
	0x03513038 BL 0x1C16CF4
	0x0351303C ADRP X0, 0xBE8000
	0x03513040 LDR X0, [X0 + 0xF00]
	0x03513044 BL 0x1C16CF4
	0x03513048 ADRP X0, 0xC09000
	0x0351304C LDR X0, [X0 + 0x6F8]
	0x03513050 BL 0x1C16CF4
	0x03513054 MOVZ W8, 0x1
	0x03513058 STRB W8, [X23 + 0xB06]
	0x0351305C STR X31, [X31 + 0x8]
	0x03513060 CBZ X19, 0x3513174
	0x03513064 ADRP X8, 0xC09000
	0x03513068 LDR X8, [X8 + 0x6F8]
	0x0351306C LDR X9, [X19]
	0x03513070 ADRP X24, 0xBE8000
	0x03513074 LDR X8, [X8]
	0x03513078 LDRB W11, [X9 + 0x130]
	0x0351307C LDRB W10, [X8 + 0x130]
	0x03513080 LDR X24, [X24 + 0xF00]
	0x03513084 CMP W11, W10
	0x03513088 B.CC 0x35130A0
	0x0351308C LDR X9, [X9 + 0xC8]
	0x03513090 ADD X9, X9, X10, 0x3, LSL
	0x03513094 LDUR X9, [X9 - 0x8]
	0x03513098 CMP X9, X8
	0x0351309C B.EQ 0x351316C
	0x035130A0 MOV X0, X19
	0x035130A4 MOV X1, X31
	0x035130A8 BL 0x33BE520
	0x035130AC MOV X23, X0
	0x035130B0 LDR X0, [X24]
	0x035130B4 LDR W8, [X0 + 0xE0]
	0x035130B8 CBNZ W8, 0x35130C4
	0x035130BC BL 0x1C16DFC
	0x035130C0 LDR X0, [X24]
	0x035130C4 LDR X8, [X0 + 0xB8]
	0x035130C8 LDR X0, [X8]
	0x035130CC CBZ X0, 0x3513174
	0x035130D0 ADRP X8, 0xC21000
	0x035130D4 LDR X8, [X8 + 0x10]
	0x035130D8 ADD X2, X31, 0x8
	0x035130DC MOV X1, X23
	0x035130E0 LDR X3, [X8]
	0x035130E4 BL 0x2AA6B2C
	0x035130E8 TBZ X0, 0x0, 0x3513178
	0x035130EC LDR X8, [X31 + 0x8]
	0x035130F0 CBZ X8, 0x3513174
	0x035130F4 LDRB W1, [X8 + 0x10]
	0x035130F8 TBZ X22, 0x0, 0x3513110
	0x035130FC CMP W1, 0x63
	0x03513100 B.HI 0x3513118
	0x03513104 CBZ X20, 0x3513174
	0x03513108 EOR W1, W1, 0xFFFFFF80
	0x0351310C B 0x3513138
	0x03513110 CBNZ X20, 0x3513138
	0x03513114 B 0x3513174
	0x03513118 CBZ X20, 0x3513174
	0x0351311C MOVZ W1, 0x13
	0x03513120 MOV X0, X20
	0x03513124 MOV X2, X31
	0x03513128 BL 0x351EFE8
	0x0351312C LDR X8, [X31 + 0x8]
	0x03513130 CBZ X8, 0x3513174
	0x03513134 LDRB W1, [X8 + 0x10]
	0x03513138 MOV X0, X20
	0x0351313C MOV X2, X31
	0x03513140 BL 0x351EFE8
	0x03513144 LDR X1, [X31 + 0x8]
	0x03513148 MOV X0, X21
	0x0351314C MOV X2, X20
	0x03513150 MOV X3, X19
	0x03513154 BL 0x3514CB4
	0x03513158 LDP X20, X19, [X31 + 0x30]
	0x0351315C LDP X22, X21, [X31 + 0x20]
	0x03513160 LDP X24, X23, [X31 + 0x10]
	0x03513164 LDR X30, [X31], #0x40
	0x03513168 RET
	0x0351316C LDR X23, [X19 + 0x18]
	0x03513170 B 0x35130B0
	0x03513174 BL 0x1C16F20
	0x03513178 ADRP X0, 0xC21000
	0x0351317C LDR X0, [X0 + 0x398]
	0x03513180 BL 0x1C16D08
	0x03513184 MOV X19, X0
	0x03513188 CBNZ X23, 0x3513194
	0x0351318C MOV X1, X31
	0x03513190 B 0x35131A8
	0x03513194 LDR X8, [X23]
	0x03513198 MOV X0, X23
	0x0351319C LDP X9, X1, [X8 + 0x168]
	0x035131A0 BLR X9
	0x035131A4 MOV X1, X0
	0x035131A8 MOV X0, X19
	0x035131AC MOV X2, X31
	0x035131B0 BL 0x321B938
	0x035131B4 MOV X19, X0
	0x035131B8 ADRP X0, 0xBE0000
	0x035131BC LDR X0, [X0 + 0x7D0]
	0x035131C0 BL 0x1C16D08
	0x035131C4 BL 0x1C16F10
	0x035131C8 MOV X1, X19
	0x035131CC MOV X2, X31
	0x035131D0 MOV X20, X0
	0x035131D4 BL 0x33B2C70
	0x035131D8 ADRP X0, 0xC21000
	0x035131DC LDR X0, [X0 + 0x3A0]
	0x035131E0 BL 0x1C16D08
	0x035131E4 MOV X1, X0
	0x035131E8 MOV X0, X20
	0x035131EC BL 0x1C16DEC
	0x035131F0 STR X30, [X31 - 0x40]!
	0x035131F4 STP X24, X23, [X31 + 0x10]
	0x035131F8 STP X22, X21, [X31 + 0x20]
	0x035131FC STP X20, X19, [X31 + 0x30]
	0x03513200 ADRP X21, 0xECC000
	0x03513204 LDRB W8, [X21 + 0xB07]
	0x03513208 MOV W22, W3
	0x0351320C MOV X23, X2
	0x03513210 MOV X19, X1
	0x03513214 MOV X20, X0
	0x03513218 TBNZ X8, 0x0, 0x3513278
	0x0351321C ADRP X0, 0xC21000
	0x03513220 LDR X0, [X0 + 0x10]
	0x03513224 BL 0x1C16CF4
	0x03513228 ADRP X0, 0xBE7000
	0x0351322C LDR X0, [X0 + 0x2F0]
	0x03513230 BL 0x1C16CF4
	0x03513234 ADRP X0, 0xBE0000
	0x03513238 LDR X0, [X0 + 0xE00]
	0x0351323C BL 0x1C16CF4
	0x03513240 ADRP X0, 0xBE8000
	0x03513244 LDR X0, [X0 + 0xDB8]
	0x03513248 BL 0x1C16CF4
	0x0351324C ADRP X0, 0xBE0000
	0x03513250 LDR X0, [X0 + 0xE18]
	0x03513254 BL 0x1C16CF4
	0x03513258 ADRP X0, 0xBE7000
	0x0351325C LDR X0, [X0 + 0x2F8]
	0x03513260 BL 0x1C16CF4
	0x03513264 ADRP X0, 0xBE8000
	0x03513268 LDR X0, [X0 + 0xF00]
	0x0351326C BL 0x1C16CF4
	0x03513270 MOVZ W8, 0x1
	0x03513274 STRB W8, [X21 + 0xB07]
	0x03513278 STR X31, [X31 + 0x8]
	0x0351327C CBZ X23, 0x3513584
	0x03513280 ADRP X8, 0xBE7000
	0x03513284 LDR X8, [X8 + 0x2F8]
	0x03513288 MOV X0, X23
	0x0351328C LDR X24, [X8]
	0x03513290 MOV X1, X24
	0x03513294 BL 0x1C16E00
	0x03513298 CBZ X0, 0x3513588
	0x0351329C MOV X21, X0
	0x035132A0 MOV X0, X23
	0x035132A4 MOV X1, X31
	0x035132A8 BL 0x33BE520
	0x035132AC CBZ X0, 0x3513584
	0x035132B0 LDR X8, [X0]
	0x035132B4 ADRP X24, 0xBE8000
	0x035132B8 LDR X9, [X8 + 0x428]
	0x035132BC LDR X1, [X8 + 0x430]
	0x035132C0 LDR X24, [X24 + 0xF00]
	0x035132C4 BLR X9
	0x035132C8 LDR X8, [X24]
	0x035132CC MOV X23, X0
	0x035132D0 LDR W9, [X8 + 0xE0]
	0x035132D4 CBNZ W9, 0x35132E4
	0x035132D8 MOV X0, X8
	0x035132DC BL 0x1C16DFC
	0x035132E0 LDR X8, [X24]
	0x035132E4 LDR X8, [X8 + 0xB8]
	0x035132E8 LDR X0, [X8]
	0x035132EC CBZ X0, 0x3513584
	0x035132F0 ADRP X8, 0xC21000
	0x035132F4 LDR X8, [X8 + 0x10]
	0x035132F8 ADD X2, X31, 0x8
	0x035132FC MOV X1, X23
	0x03513300 LDR X3, [X8]
	0x03513304 BL 0x2AA6B2C
	0x03513308 TBZ X0, 0x0, 0x3513594
	0x0351330C TBZ X22, 0x0, 0x3513324
	0x03513310 CBZ X19, 0x3513584
	0x03513314 MOVZ W1, 0x53
	0x03513318 MOV X0, X19
	0x0351331C MOV X2, X31
	0x03513320 BL 0x351EFE8
	0x03513324 ADRP X10, 0xBE7000
	0x03513328 LDR X8, [X21]
	0x0351332C LDR X10, [X10 + 0x2F0]
	0x03513330 LDRH W9, [X8 + 0x12E]
	0x03513334 LDR X1, [X10]
	0x03513338 CBZ X9, 0x351335C
	0x0351333C LDR X10, [X8 + 0xB0]
	0x03513340 ADD X10, X10, 0x8
	0x03513344 LDUR X11, [X10 - 0x8]
	0x03513348 CMP X11, X1
	0x0351334C B.EQ 0x351336C
	0x03513350 SUBS X9, X9, 0x1
	0x03513354 ADD X10, X10, 0x10
	0x03513358 B.NE 0x3513344
	0x0351335C MOVZ W2, 0x1
	0x03513360 MOV X0, X21
	0x03513364 BL 0x1C5C788
	0x03513368 B 0x351337C
	0x0351336C LDR W9, [X10]
	0x03513370 ADD W9, W9, 0x1
	0x03513374 ADD X8, X8, W9, 0x4, SXTW
	0x03513378 ADD X0, X8, 0x138
	0x0351337C LDP X8, X1, [X0]
	0x03513380 MOV X0, X21
	0x03513384 BLR X8
	0x03513388 MOV W2, W0
	0x0351338C MOV X0, X20
	0x03513390 MOV X1, X19
	0x03513394 BL 0x3515C70
	0x03513398 LDR X8, [X31 + 0x8]
	0x0351339C CBZ X8, 0x3513584
	0x035133A0 CBZ X19, 0x3513584
	0x035133A4 LDRB W1, [X8 + 0x10]
	0x035133A8 ADRP X22, 0xBE8000
	0x035133AC LDR X22, [X22 + 0xDB8]
	0x035133B0 MOV X0, X19
	0x035133B4 MOV X2, X31
	0x035133B8 BL 0x351EFE8
	0x035133BC LDR X8, [X21]
	0x035133C0 LDR X1, [X22]
	0x035133C4 LDRH W9, [X8 + 0x12E]
	0x035133C8 CBZ X9, 0x35133EC
	0x035133CC LDR X10, [X8 + 0xB0]
	0x035133D0 ADD X10, X10, 0x8
	0x035133D4 LDUR X11, [X10 - 0x8]
	0x035133D8 CMP X11, X1
	0x035133DC B.EQ 0x35133FC
	0x035133E0 SUBS X9, X9, 0x1
	0x035133E4 ADD X10, X10, 0x10
	0x035133E8 B.NE 0x35133D4
	0x035133EC MOV X0, X21
	0x035133F0 MOV W2, W31
	0x035133F4 BL 0x1C5C788
	0x035133F8 B 0x3513408
	0x035133FC LDRSW X9, [X10]
	0x03513400 ADD X8, X8, X9, 0x4, LSL
	0x03513404 ADD X0, X8, 0x138
	0x03513408 LDP X8, X1, [X0]
	0x0351340C ADRP X22, 0xBE0000
	0x03513410 LDR X22, [X22 + 0xE00]
	0x03513414 MOV X0, X21
	0x03513418 BLR X8
	0x0351341C MOV X21, X0
	0x03513420 CBZ X0, 0x35135B0
	0x03513424 ADRP X23, 0xBE0000
	0x03513428 LDR X23, [X23 + 0xE18]
	0x0351342C LDR X8, [X21]
	0x03513430 LDR X1, [X23]
	0x03513434 LDRH W9, [X8 + 0x12E]
	0x03513438 CBZ X9, 0x351345C
	0x0351343C LDR X10, [X8 + 0xB0]
	0x03513440 ADD X10, X10, 0x8
	0x03513444 LDUR X11, [X10 - 0x8]
	0x03513448 CMP X11, X1
	0x0351344C B.EQ 0x351346C
	0x03513450 SUBS X9, X9, 0x1
	0x03513454 ADD X10, X10, 0x10
	0x03513458 B.NE 0x3513444
	0x0351345C MOV X0, X21
	0x03513460 MOV W2, W31
	0x03513464 BL 0x1C5C788
	0x03513468 B 0x3513478
	0x0351346C LDRSW X9, [X10]
	0x03513470 ADD X8, X8, X9, 0x4, LSL
	0x03513474 ADD X0, X8, 0x138
	0x03513478 LDP X8, X1, [X0]
	0x0351347C MOV X0, X21
	0x03513480 BLR X8
	0x03513484 TBZ X0, 0x0, 0x35134FC
	0x03513488 LDR X8, [X21]
	0x0351348C LDR X1, [X23]
	0x03513490 LDRH W9, [X8 + 0x12E]
	0x03513494 CBZ X9, 0x35134B8
	0x03513498 LDR X10, [X8 + 0xB0]
	0x0351349C ADD X10, X10, 0x8
	0x035134A0 LDUR X11, [X10 - 0x8]
	0x035134A4 CMP X11, X1
	0x035134A8 B.EQ 0x35134C8
	0x035134AC SUBS X9, X9, 0x1
	0x035134B0 ADD X10, X10, 0x10
	0x035134B4 B.NE 0x35134A0
	0x035134B8 MOVZ W2, 0x1
	0x035134BC MOV X0, X21
	0x035134C0 BL 0x1C5C788
	0x035134C4 B 0x35134D8
	0x035134C8 LDR W9, [X10]
	0x035134CC ADD W9, W9, 0x1
	0x035134D0 ADD X8, X8, W9, 0x4, SXTW
	0x035134D4 ADD X0, X8, 0x138
	0x035134D8 LDP X8, X1, [X0]
	0x035134DC MOV X0, X21
	0x035134E0 BLR X8
	0x035134E4 LDR X1, [X31 + 0x8]
	0x035134E8 MOV X3, X0
	0x035134EC MOV X0, X20
	0x035134F0 MOV X2, X19
	0x035134F4 BL 0x3514CB4
	0x035134F8 B 0x351342C
	0x035134FC MOV X19, X31
	0x03513500 LDR X1, [X22]
	0x03513504 MOV X0, X21
	0x03513508 BL 0x1C16E00
	0x0351350C CBZ X0, 0x351356C
	0x03513510 LDR X8, [X0]
	0x03513514 LDR X1, [X22]
	0x03513518 MOV X20, X0
	0x0351351C LDRH W9, [X8 + 0x12E]
	0x03513520 CBZ X9, 0x3513544
	0x03513524 LDR X10, [X8 + 0xB0]
	0x03513528 ADD X10, X10, 0x8
	0x0351352C LDUR X11, [X10 - 0x8]
	0x03513530 CMP X11, X1
	0x03513534 B.EQ 0x3513554
	0x03513538 SUBS X9, X9, 0x1
	0x0351353C ADD X10, X10, 0x10
	0x03513540 B.NE 0x351352C
	0x03513544 MOV X0, X20
	0x03513548 MOV W2, W31
	0x0351354C BL 0x1C5C788
	0x03513550 B 0x3513560
	0x03513554 LDRSW X9, [X10]
	0x03513558 ADD X8, X8, X9, 0x4, LSL
	0x0351355C ADD X0, X8, 0x138
	0x03513560 LDP X8, X1, [X0]
	0x03513564 MOV X0, X20
	0x03513568 BLR X8
	0x0351356C CBNZ X19, 0x35135B4
	0x03513570 LDP X20, X19, [X31 + 0x30]
	0x03513574 LDP X22, X21, [X31 + 0x20]
	0x03513578 LDP X24, X23, [X31 + 0x10]
	0x0351357C LDR X30, [X31], #0x40
	0x03513580 RET
	0x03513584 BL 0x1C16F20
	0x03513588 MOV X0, X23
	0x0351358C MOV X1, X24
	0x03513590 BL 0x1C171E0
	0x03513594 ADRP X0, 0xC21000
	0x03513598 LDR X0, [X0 + 0x3A8]
	0x0351359C BL 0x1C16D08
	0x035135A0 MOV X19, X0
	0x035135A4 CBNZ X23, 0x35135BC
	0x035135A8 MOV X1, X31
	0x035135AC B 0x35135D0
	0x035135B0 BL 0x1C16F20
	0x035135B4 MOV X0, X19
	0x035135B8 BL 0x1C16F18
	0x035135BC LDR X8, [X23]
	0x035135C0 MOV X0, X23
	0x035135C4 LDP X9, X1, [X8 + 0x168]
	0x035135C8 BLR X9
	0x035135CC MOV X1, X0
	0x035135D0 MOV X0, X19
	0x035135D4 MOV X2, X31
	0x035135D8 BL 0x321B938
	0x035135DC MOV X19, X0
	0x035135E0 ADRP X0, 0xBE0000
	0x035135E4 LDR X0, [X0 + 0x7D0]
	0x035135E8 BL 0x1C16D08
	0x035135EC BL 0x1C16F10
	0x035135F0 MOV X1, X19
	0x035135F4 MOV X2, X31
	0x035135F8 MOV X20, X0
	0x035135FC BL 0x33B2C70
	0x03513600 ADRP X0, 0xC21000
	0x03513604 LDR X0, [X0 + 0x3B0]
	0x03513608 BL 0x1C16D08
	0x0351360C MOV X1, X0
	0x03513610 MOV X0, X20
	0x03513614 BL 0x1C16DEC
	0x03513618 B 0x3513624
	0x0351361C B 0x3513624
	0x03513620 B 0x3513624
	0x03513624 MOV X20, X0
	0x03513628 CMP W1, 0x1
	0x0351362C B.NE 0x3513644
	0x03513630 MOV X0, X20
	0x03513634 BL 0x3EB1AD0
	0x03513638 LDR X19, [X0]
	0x0351363C BL 0x3EB1AE0
	0x03513640 B 0x3513500
	0x03513644 MOV X19, X31
	0x03513648 B 0x3513650
	0x0351364C MOV X20, X0
	0x03513650 LDR X1, [X22]
	0x03513654 MOV X0, X21
	0x03513658 BL 0x1C16E00
	0x0351365C MOV X21, X0
	0x03513660 CBZ X0, 0x35136BC
	0x03513664 LDR X8, [X21]
	0x03513668 LDR X1, [X22]
	0x0351366C LDRH W9, [X8 + 0x12E]
	0x03513670 CBZ X9, 0x3513694
	0x03513674 LDR X10, [X8 + 0xB0]
	0x03513678 ADD X10, X10, 0x8
	0x0351367C LDUR X11, [X10 - 0x8]
	0x03513680 CMP X11, X1
	0x03513684 B.EQ 0x35136A4
	0x03513688 SUBS X9, X9, 0x1
	0x0351368C ADD X10, X10, 0x10
	0x03513690 B.NE 0x351367C
	0x03513694 MOV X0, X21
	0x03513698 MOV W2, W31
	0x0351369C BL 0x1C5C788
	0x035136A0 B 0x35136B0
	0x035136A4 LDRSW X9, [X10]
	0x035136A8 ADD X8, X8, X9, 0x4, LSL
	0x035136AC ADD X0, X8, 0x138
	0x035136B0 LDP X8, X1, [X0]
	0x035136B4 MOV X0, X21
	0x035136B8 BLR X8
	0x035136BC CBNZ X19, 0x35136C8
	0x035136C0 MOV X0, X20
	0x035136C4 BL 0x1D2C690
	0x035136C8 MOV X0, X19
	0x035136CC BL 0x1C16F18
	0x035136D0 BL 0x1990590
	0x035136D4 STP X30, X23, [X31 - 0x30]!
	0x035136D8 STP X22, X21, [X31 + 0x10]
	0x035136DC STP X20, X19, [X31 + 0x20]
	0x035136E0 ADRP X21, 0xECC000
	0x035136E4 LDRB W8, [X21 + 0xB04]
	0x035136E8 MOV X22, X2
	0x035136EC MOV X19, X1
	0x035136F0 MOV X20, X0
	0x035136F4 TBNZ X8, 0x0, 0x351370C
	0x035136F8 ADRP X0, 0xBE0000
	0x035136FC LDR X0, [X0 + 0x9D0]
	0x03513700 BL 0x1C16CF4
	0x03513704 MOVZ W8, 0x1
	0x03513708 STRB W8, [X21 + 0xB04]
	0x0351370C CBZ X22, 0x35137AC
	0x03513710 ADRP X8, 0xBE0000
	0x03513714 LDR X8, [X8 + 0x9D0]
	0x03513718 MOV X0, X22
	0x0351371C LDR X23, [X8]
	0x03513720 MOV X1, X23
	0x03513724 BL 0x1C16E00
	0x03513728 CBZ X0, 0x35137B4
	0x0351372C CBZ X19, 0x35137B0
	0x03513730 MOV X21, X0
	0x03513734 MOVZ W1, 0x40
	0x03513738 MOV X0, X19
	0x0351373C MOV X2, X31
	0x03513740 BL 0x351EFE8
	0x03513744 LDR W2, [X21 + 0x18]
	0x03513748 MOV X0, X20
	0x0351374C MOV X1, X19
	0x03513750 BL 0x3515C70
	0x03513754 LDR X8, [X21 + 0x18]
	0x03513758 CMP W8, 0x1
	0x0351375C B.LT 0x3513798
	0x03513760 MOV X22, X31
	0x03513764 AND X8, X8, 0x0
	0x03513768 ADD X23, X21, 0x20
	0x0351376C CMP X22, W8, UXTW
	0x03513770 B.CS 0x35137A8
	0x03513774 LDR X2, [X23, X22, LSL #3]
	0x03513778 MOVZ W3, 0x1
	0x0351377C MOV X0, X20
	0x03513780 MOV X1, X19
	0x03513784 BL 0x350D5EC
	0x03513788 LDR W8, [X21 + 0x18]
	0x0351378C ADD X22, X22, 0x1
	0x03513790 CMP X22, W8, SXTW
	0x03513794 B.LT 0x351376C
	0x03513798 LDP X20, X19, [X31 + 0x20]
	0x0351379C LDP X22, X21, [X31 + 0x10]
	0x035137A0 LDP X30, X23, [X31], #0x30
	0x035137A4 RET
	0x035137A8 BL 0x1C16F28
	0x035137AC CBNZ X19, 0x35137C0
	0x035137B0 BL 0x1C16F20
	0x035137B4 MOV X0, X22
	0x035137B8 MOV X1, X23
	0x035137BC BL 0x1C171E0
	0x035137C0 MOVZ W1, 0x40
	0x035137C4 MOV X0, X19
	0x035137C8 MOV X2, X31
	0x035137CC BL 0x351EFE8
	0x035137D0 BL 0x1C16F20
	0x035137D4 SUB X31, X31, 0x40
	0x035137D8 STP X30, X23, [X31 + 0x10]
	0x035137DC STP X22, X21, [X31 + 0x20]
	0x035137E0 STP X20, X19, [X31 + 0x30]
	0x035137E4 ADRP X23, 0xECC000
	0x035137E8 LDRB W8, [X23 + 0xB09]
	0x035137EC MOV W22, W3
	0x035137F0 MOV X20, X2
	0x035137F4 MOV X19, X1
	0x035137F8 MOV X21, X0
	0x035137FC TBNZ X8, 0x0, 0x3513814
	0x03513800 ADRP X0, 0xBE0000
	0x03513804 LDR X0, [X0 + 0x818]
	0x03513808 BL 0x1C16CF4
	0x0351380C MOVZ W8, 0x1
	0x03513810 STRB W8, [X23 + 0xB09]
	0x03513814 STRB W31, [X31 + 0xC]
	0x03513818 STRB W31, [X31 + 0x8]
	0x0351381C TBZ X22, 0x0, 0x3513834
	0x03513820 CBZ X19, 0x35138A0
	0x03513824 MOVZ W1, 0x14
	0x03513828 MOV X0, X19
	0x0351382C MOV X2, X31
	0x03513830 BL 0x351EFE8
	0x03513834 CBZ X20, 0x35138A0
	0x03513838 ADRP X22, 0xBE0000
	0x0351383C LDR X22, [X22 + 0x818]
	0x03513840 MOV X0, X20
	0x03513844 MOV X1, X31
	0x03513848 BL 0x33BE520
	0x0351384C MOV X2, X0
	0x03513850 ADD X3, X31, 0xC
	0x03513854 ADD X4, X31, 0x8
	0x03513858 MOV X0, X21
	0x0351385C MOV X1, X19
	0x03513860 BL 0x3515518
	0x03513864 LDR X22, [X22]
	0x03513868 MOV X0, X20
	0x0351386C MOV X1, X22
	0x03513870 BL 0x1C16E00
	0x03513874 CBZ X0, 0x35138A4
	0x03513878 MOV X2, X0
	0x0351387C LDRB W4, [X31 + 0x8]
	0x03513880 LDRB W3, [X31 + 0xC]
	0x03513884 MOV X0, X21
	0x03513888 MOV X1, X19
	0x0351388C LDP X20, X19, [X31 + 0x30]
	0x03513890 LDP X22, X21, [X31 + 0x20]
	0x03513894 LDP X30, X23, [X31 + 0x10]
	0x03513898 ADD X31, X31, 0x40
	0x0351389C B 0x3515130
	0x035138A0 BL 0x1C16F20
	0x035138A4 MOV X0, X20
	0x035138A8 MOV X1, X22
	0x035138AC BL 0x1C171E0
	0x035138B0 SUB X31, X31, 0x80
	0x035138B4 STR X30, [X31 + 0x40]
	0x035138B8 STP X24, X23, [X31 + 0x50]
	0x035138BC STP X22, X21, [X31 + 0x60]
	0x035138C0 STP X20, X19, [X31 + 0x70]
	0x035138C4 ADRP X23, 0xECC000
	0x035138C8 LDRB W8, [X23 + 0xAFE]
	0x035138CC MOV W22, W3
	0x035138D0 MOV X19, X2
	0x035138D4 MOV X20, X1
	0x035138D8 MOV X21, X0
	0x035138DC TBNZ X8, 0x0, 0x351393C
	0x035138E0 ADRP X0, 0xBE8000
	0x035138E4 LDR X0, [X0 + 0xD60]
	0x035138E8 BL 0x1C16CF4
	0x035138EC ADRP X0, 0xBE9000
	0x035138F0 LDR X0, [X0 + 0x238]
	0x035138F4 BL 0x1C16CF4
	0x035138F8 ADRP X0, 0xBE9000
	0x035138FC LDR X0, [X0 + 0x240]
	0x03513900 BL 0x1C16CF4
	0x03513904 ADRP X0, 0xBE9000
	0x03513908 LDR X0, [X0 + 0x248]
	0x0351390C BL 0x1C16CF4
	0x03513910 ADRP X0, 0xBE9000
	0x03513914 LDR X0, [X0 + 0x250]
	0x03513918 BL 0x1C16CF4
	0x0351391C ADRP X0, 0xBE8000

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0xECE000
	009 Move W8, [X24+2811]
	010 Move W20, W4
	011 Move W23, W3
	012 Move X22, X2
	013 Move X19, X1
	014 Move X21, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {117}
	019 Move X0, 0xC0A000
	020 Move X0, [X0+1456]
	021 Call 0x1C17CF4
	022 Move X0, 0xBE4000
	023 Move X0, [X0+2488]
	024 Call 0x1C17CF4
	025 Move X0, 0xBE2000
	026 Move X0, [X0+2904]
	027 Call 0x1C17CF4
	028 Move X0, 0xBEA000
	029 Move X0, [X0+3224]
	030 Call 0x1C17CF4
	031 Move X0, 0xBE2000
	032 Move X0, [X0+1560]
	033 Call 0x1C17CF4
	034 Move X0, 0xBE3000
	035 Move X0, [X0+2520]
	036 Call 0x1C17CF4
	037 Move X0, 0xC13000
	038 Move X0, [X0+2096]
	039 Call 0x1C17CF4
	040 Move X0, 0xBE5000
	041 Move X0, [X0+2424]
	042 Call 0x1C17CF4
	043 Move X0, 0xC23000
	044 Move X0, [X0+296]
	045 Call 0x1C17CF4
	046 Move X0, 0xBEA000
	047 Move X0, [X0+3488]
	048 Call 0x1C17CF4
	049 Move X0, 0xC23000
	050 Move X0, [X0+792]
	051 Call 0x1C17CF4
	052 Move X0, 0xBE2000
	053 Move X0, [X0+2072]
	054 Call 0x1C17CF4
	055 Move X0, 0xBE9000
	056 Move X0, [X0+760]
	057 Call 0x1C17CF4
	058 Move X0, 0xC0A000
	059 Move X0, [X0+2080]
	060 Call 0x1C17CF4
	061 Move X0, 0xBE6000
	062 Move X0, [X0+1576]
	063 Call 0x1C17CF4
	064 Move X0, 0xBE3000
	065 Move X0, [X0+3672]
	066 Call 0x1C17CF4
	067 Move X0, 0xBE2000
	068 Move X0, [X0+1880]
	069 Call 0x1C17CF4
	070 Move X0, 0xC13000
	071 Move X0, [X0+2104]
	072 Call 0x1C17CF4
	073 Move X0, 0xBE4000
	074 Move X0, [X0+2656]
	075 Call 0x1C17CF4
	076 Move X0, 0xC23000
	077 Move X0, [X0+272]
	078 Call 0x1C17CF4
	079 Move X0, 0xC23000
	080 Move X0, [X0+288]
	081 Call 0x1C17CF4
	082 Move X0, 0xBE2000
	083 Move X0, [X0+1592]
	084 Call 0x1C17CF4
	085 Move X0, 0xBE2000
	086 Move X0, [X0+2704]
	087 Call 0x1C17CF4
	088 Move X0, 0xBE4000
	089 Move X0, [X0+632]
	090 Call 0x1C17CF4
	091 Move X0, 0xC23000
	092 Move X0, [X0+304]
	093 Call 0x1C17CF4
	094 Move X0, 0xC23000
	095 Move X0, [X0+312]
	096 Call 0x1C17CF4
	097 Move X0, 0xC23000
	098 Move X0, [X0+320]
	099 Call 0x1C17CF4
	100 Move X0, 0xC23000
	101 Move X0, [X0+328]
	102 Call 0x1C17CF4
	103 Move X0, 0xC23000
	104 Move X0, [X0+336]
	105 Call 0x1C17CF4
	106 Move X0, 0xC23000
	107 Move X0, [X0+344]
	108 Call 0x1C17CF4
	109 Move X0, 0xC23000
	110 Move X0, [X0+352]
	111 Call 0x1C17CF4
	112 Move X0, 0xC0B000
	113 Move X0, [X0+1784]
	114 Call 0x1C17CF4
	115 Move W8, 1
	116 Move [X24+2811], W8
	117 And W8, W23, 255
	118 NotImplemented "Instruction CMP not yet implemented."
	119 Move X9, -43495424
	120 And X8, X23, 255
	121 Add X9, X9, 3206
	122 NotImplemented "Instruction ADR not yet implemented."
	123 NotImplemented "Instruction LDRH not yet implemented."
	124 Add X10, X10, X11
	125 CallNoReturn X10
	126 Compare X22, 0
	127 JumpIfEqual {152}
	128 Move X9, 0xBEA000
	129 Move X9, [X9+3224]
	130 Move X8, [X22]
	131 Move X10, [X9]
	132 Move W9, [X8+304]
	133 Move W11, [X10+304]
	134 NotImplemented "Instruction CMP not yet implemented."
	135 Move X12, [X8+200]
	136 Add X11, X12, X11
	137 NotImplemented "Instruction LDUR not yet implemented."
	138 NotImplemented "Instruction CMP not yet implemented."
	139 Move X10, 0xC0A000
	140 Move X10, [X10+1456]
	141 Move X10, [X10]
	142 NotImplemented "Instruction CMP not yet implemented."
	143 Move X10, 0xC0B000
	144 Move X10, [X10+1784]
	145 Move X10, [X10]
	146 Move W11, [X10+304]
	147 NotImplemented "Instruction CMP not yet implemented."
	148 Move X8, [X8+200]
	149 Add X8, X8, X11
	150 NotImplemented "Instruction LDUR not yet implemented."
	151 NotImplemented "Instruction CMP not yet implemented."
	152 And W3, W20, 1
	153 Move X0, X21
	154 Move X1, X19
	155 Move X2, X22
	156 Move X20, [X31+48]
	157 Move X19, [X31+56]
	158 Move X22, [X31+32]
	159 Move X21, [X31+40]
	160 Move X24, [X31+16]
	161 Move X23, [X31+24]
	162 Move X30, [X31+64]
	163 Call Protocol18.WriteCustomType, X0, X1, X2, X3
	164 Return 
	165 Subtract W8, W8, 64
	166 NotImplemented "Instruction CMP not yet implemented."
	167 Move X9, -43499520
	168 Add X9, X9, 3260
	169 NotImplemented "Instruction ADR not yet implemented."
	170 NotImplemented "Instruction LDRH not yet implemented."
	171 Add X10, X10, X11
	172 CallNoReturn X10
	173 Move X0, X21
	174 Move X1, X19
	175 Move X2, X22
	176 Move X20, [X31+48]
	177 Move X19, [X31+56]
	178 Move X22, [X31+32]
	179 Move X21, [X31+40]
	180 Move X24, [X31+16]
	181 Move X23, [X31+24]
	182 Move W3, W31
	183 Move X30, [X31+64]
	184 Call Protocol18.WriteArrayInArray, X0, X1, X2, X3
	185 Return 
	186 Compare X22, 0
	187 JumpIfEqual {865}
	188 Move X8, 0xBE1000
	189 Move X8, [X8+2904]
	190 Move X9, [X22]
	191 Move X1, [X8]
	192 Move X8, [X9+64]
	193 Move X9, [X1+64]
	194 NotImplemented "Instruction CMP not yet implemented."
	195 Move X0, X22
	196 Call 0x1C17E08
	197 Move W2, [X0]
	198 And W3, W20, 1
	199 Move X1, X19
	200 Move X20, [X31+48]
	201 Move X19, [X31+56]
	202 Move X22, [X31+32]
	203 Move X21, [X31+40]
	204 Move X24, [X31+16]
	205 Move X23, [X31+24]
	206 Move X30, [X31+64]
	207 Call Protocol18.WriteBoolean, X0, X1, X2, X3
	208 Return 
	209 Compare X22, 0
	210 JumpIfEqual {865}
	211 Move X8, 0xBE2000
	212 Move X8, [X8+2520]
	213 Move X9, [X22]
	214 Move X1, [X8]
	215 Move X8, [X9+64]
	216 Move X9, [X1+64]
	217 NotImplemented "Instruction CMP not yet implemented."
	218 Move X0, X22
	219 Call 0x1C17E08
	220 Move W2, [X0]
	221 And W3, W20, 1
	222 Move X1, X19
	223 Move X20, [X31+48]
	224 Move X19, [X31+56]
	225 Move X22, [X31+32]
	226 Move X21, [X31+40]
	227 Move X24, [X31+16]
	228 Move X23, [X31+24]
	229 Move X30, [X31+64]
	230 Call Protocol18.WriteByte, X0, X1, X2, X3
	231 Return 
	232 Compare X22, 0
	233 JumpIfEqual {865}
	234 Move X8, 0xBE5000
	235 Move X8, [X8+1576]
	236 Move X9, [X22]
	237 Move X1, [X8]
	238 Move X8, [X9+64]
	239 Move X9, [X1+64]
	240 NotImplemented "Instruction CMP not yet implemented."
	241 Move X0, X22
	242 Call 0x1C17E08
	243 NotImplemented "Instruction LDRH not yet implemented."
	244 And W3, W20, 1
	245 Move X1, X19
	246 Move X20, [X31+48]
	247 Move X19, [X31+56]
	248 Move X22, [X31+32]
	249 Move X21, [X31+40]
	250 Move X24, [X31+16]
	251 Move X23, [X31+24]
	252 Move X30, [X31+64]
	253 Call Protocol18.WriteInt16, X0, X1, X2, X3
	254 Return 
	255 Compare X22, 0
	256 JumpIfEqual {865}
	257 Move X8, 0xBE1000
	258 Move X8, [X8+2704]
	259 Move X9, [X22]
	260 Move X1, [X8]
	261 Move X8, [X9+64]
	262 Move X9, [X1+64]
	263 NotImplemented "Instruction CMP not yet implemented."
	264 Move X0, X22
	265 Call 0x1C17E08
	266 Move V0, [X0]
	267 And W2, W20, 1
	268 Move X0, X21
	269 Move X1, X19
	270 Move X20, [X31+48]
	271 Move X19, [X31+56]
	272 Move X22, [X31+32]
	273 Move X21, [X31+40]
	274 Move X24, [X31+16]
	275 Move X23, [X31+24]
	276 Move X30, [X31+64]
	277 Call Protocol18.WriteSingle, X0, X1, V0, X2
	278 Return 
	279 Compare X22, 0
	280 JumpIfEqual {865}
	281 Move X8, 0xBE4000
	282 Move X8, [X8+2424]
	283 Move X9, [X22]
	284 Move X1, [X8]
	285 Move X8, [X9+64]
	286 Move X9, [X1+64]
	287 NotImplemented "Instruction CMP not yet implemented."
	288 Move X0, X22
	289 Call 0x1C17E08
	290 Move V0, [X0]
	291 And W2, W20, 1
	292 Move X0, X21
	293 Move X1, X19
	294 Move X20, [X31+48]
	295 Move X19, [X31+56]
	296 Move X22, [X31+32]
	297 Move X21, [X31+40]
	298 Move X24, [X31+16]
	299 Move X23, [X31+24]
	300 Move X30, [X31+64]
	301 Call Protocol18.WriteDouble, X0, X1, V0, X2
	302 Return 
	303 Compare X22, 0
	304 JumpIfEqual {310}
	305 Move X8, 0xBE3000
	306 Move X8, [X8+632]
	307 Move X1, [X8]
	308 Move X8, [X22]
	309 NotImplemented "Instruction CMP not yet implemented."
	310 And W3, W20, 1
	311 Move X0, X21
	312 Move X1, X19
	313 Move X2, X22
	314 Move X20, [X31+48]
	315 Move X19, [X31+56]
	316 Move X22, [X31+32]
	317 Move X21, [X31+40]
	318 Move X24, [X31+16]
	319 Move X23, [X31+24]
	320 Move X30, [X31+64]
	321 Call Protocol18.WriteString, X0, X1, X2, X3
	322 Return 
	323 Move TEMP, X20
	324 And TEMP, TEMP, 1
	325 Compare TEMP, 1
	326 JumpIfNotEqual {341}
	327 Compare X19, 0
	328 JumpIfEqual {865}
	329 Move X0, X19
	330 Move X20, [X31+48]
	331 Move X19, [X31+56]
	332 Move X22, [X31+32]
	333 Move X21, [X31+40]
	334 Move X24, [X31+16]
	335 Move X23, [X31+24]
	336 Move W1, 8
	337 Move X2, X31
	338 Move X30, [X31+64]
	339 Call StreamBuffer.WriteByte, X0, X1
	340 Return 
	341 Move X20, [X31+48]
	342 Move X19, [X31+56]
	343 Move X22, [X31+32]
	344 Move X21, [X31+40]
	345 Move X24, [X31+16]
	346 Move X23, [X31+24]
	347 Move X30, [X31+64]
	348 Return 
	349 Compare X22, 0
	350 JumpIfEqual {865}
	351 Move X8, 0xBE1000
	352 Move X8, [X8+1880]
	353 Move X9, [X22]
	354 Move X1, [X8]
	355 Move X8, [X9+64]
	356 Move X9, [X1+64]
	357 NotImplemented "Instruction CMP not yet implemented."
	358 Move X0, X22
	359 Call 0x1C17E08
	360 Move W2, [X0]
	361 And W3, W20, 1
	362 Move X0, X21
	363 Move X1, X19
	364 Move X20, [X31+48]
	365 Move X19, [X31+56]
	366 Move X22, [X31+32]
	367 Move X21, [X31+40]
	368 Move X24, [X31+16]
	369 Move X23, [X31+24]
	370 Move X30, [X31+64]
	371 Call Protocol18.WriteCompressedInt32, X0, X1, X2, X3
	372 Return 
	373 Compare X22, 0
	374 JumpIfEqual {865}
	375 Move X8, 0xBE3000
	376 Move X8, [X8+2656]
	377 Move X9, [X22]
	378 Move X1, [X8]
	379 Move X8, [X9+64]
	380 Move X9, [X1+64]
	381 NotImplemented "Instruction CMP not yet implemented."
	382 Move X0, X22
	383 Call 0x1C17E08
	384 Move X2, [X0]
	385 And W3, W20, 1
	386 Move X0, X21
	387 Move X1, X19
	388 Move X20, [X31+48]
	389 Move X19, [X31+56]
	390 Move X22, [X31+32]
	391 Move X21, [X31+40]
	392 Move X24, [X31+16]
	393 Move X23, [X31+24]
	394 Move X30, [X31+64]
	395 Call Protocol18.WriteCompressedInt64, X0, X1, X2, X3
	396 Return 
	397 Compare X22, 0
	398 JumpIfEqual {651}
	399 Move X8, 0xBE1000
	400 Move X8, [X8+2072]
	401 Move X0, X22
	402 Move X23, [X8]
	403 Move X1, X23
	404 Call 0x1C17E00
	405 Move X2, X0
	406 Compare X0, 0
	407 JumpIfNotEqual {652}
	408 Compare X22, 0
	409 JumpIfEqual {421}
	410 Move X9, 0xBE9000
	411 Move X9, [X9+3488]
	412 Move X8, [X22]
	413 Move X1, [X9]
	414 Move W10, [X8+304]
	415 Move W9, [X1+304]
	416 NotImplemented "Instruction CMP not yet implemented."
	417 Move X8, [X8+200]
	418 Add X8, X8, X9
	419 NotImplemented "Instruction LDUR not yet implemented."
	420 NotImplemented "Instruction CMP not yet implemented."
	421 And W3, W20, 1
	422 Move X0, X21
	423 Move X1, X19
	424 Move X2, X22
	425 Move X20, [X31+48]
	426 Move X19, [X31+56]
	427 Move X22, [X31+32]
	428 Move X21, [X31+40]
	429 Move X24, [X31+16]
	430 Move X23, [X31+24]
	431 Move X30, [X31+64]
	432 Call Protocol18.WriteHashtable, X0, X1, X2, X3
	433 Return 
	434 Compare X22, 0
	435 JumpIfEqual {664}
	436 Move X8, 0xBE8000
	437 Move X8, [X8+760]
	438 Move X0, X22
	439 Move X23, [X8]
	440 Move X1, X23
	441 Call 0x1C17E00
	442 Move X2, X0
	443 Compare X0, 0
	444 JumpIfNotEqual {665}
	445 Compare X22, 0
	446 JumpIfEqual {865}
	447 Move X9, 0xC22000
	448 Move X9, [X9+272]
	449 Move X8, [X22]
	450 Move X1, [X9]
	451 Move W10, [X8+304]
	452 Move W9, [X1+304]
	453 NotImplemented "Instruction CMP not yet implemented."
	454 Move X8, [X8+200]
	455 Add X8, X8, X9
	456 NotImplemented "Instruction LDUR not yet implemented."
	457 NotImplemented "Instruction CMP not yet implemented."
	458 Move X8, [X21]
	459 Move X3, [X22+24]
	460 Move W2, [X22+16]
	461 And W4, W20, 1
	462 Move X6, [X8+488]
	463 Move X5, [X8+496]
	464 Move X0, X21
	465 Move X1, X19
	466 Move X20, [X31+48]
	467 Move X19, [X31+56]
	468 Move X22, [X31+32]
	469 Move X21, [X31+40]
	470 Move X24, [X31+16]
	471 Move X23, [X31+24]
	472 Move X30, [X31+64]
	473 CallNoReturn X6
	474 Compare X22, 0
	475 JumpIfEqual {487}
	476 Move X9, 0xC22000
	477 Move X9, [X9+288]
	478 Move X8, [X22]
	479 Move X1, [X9]
	480 Move W10, [X8+304]
	481 Move W9, [X1+304]
	482 NotImplemented "Instruction CMP not yet implemented."
	483 Move X8, [X8+200]
	484 Add X8, X8, X9
	485 NotImplemented "Instruction LDUR not yet implemented."
	486 NotImplemented "Instruction CMP not yet implemented."
	487 Move X8, [X21]
	488 Move X5, [X8+504]
	489 Move X4, [X8+512]
	490 Compare X22, 0
	491 JumpIfEqual {503}
	492 Move X9, 0xC22000
	493 Move X9, [X9+296]
	494 Move X8, [X22]
	495 Move X1, [X9]
	496 Move W10, [X8+304]
	497 Move W9, [X1+304]
	498 NotImplemented "Instruction CMP not yet implemented."
	499 Move X8, [X8+200]
	500 Add X8, X8, X9
	501 NotImplemented "Instruction LDUR not yet implemented."
	502 NotImplemented "Instruction CMP not yet implemented."
	503 Move X8, [X21]
	504 Move X5, [X8+456]
	505 Move X4, [X8+464]
	506 And W3, W20, 1
	507 Move X0, X21
	508 Move X1, X19
	509 Move X2, X22
	510 Move X20, [X31+48]
	511 Move X19, [X31+56]
	512 Move X22, [X31+32]
	513 Move X21, [X31+40]
	514 Move X24, [X31+16]
	515 Move X23, [X31+24]
	516 Move X30, [X31+64]
	517 CallNoReturn X5
	518 Compare X22, 0
	519 JumpIfEqual {677}
	520 Move X8, 0xBE3000
	521 Move X8, [X8+2488]
	522 Move X0, X22
	523 Move X23, [X8]
	524 Move X1, X23
	525 Call 0x1C17E00
	526 Move X2, X0
	527 Compare X0, 0
	528 JumpIfNotEqual {678}
	529 Compare X22, 0
	530 JumpIfEqual {690}
	531 Move X8, 0xBE1000
	532 Move X8, [X8+1560]
	533 Move X0, X22
	534 Move X23, [X8]
	535 Move X1, X23
	536 Call 0x1C17E00
	537 Move X2, X0
	538 Compare X0, 0
	539 JumpIfNotEqual {691}
	540 Compare X22, 0
	541 JumpIfEqual {703}
	542 Move X8, 0xC09000
	543 Move X8, [X8+2080]
	544 Move X0, X22
	545 Move X23, [X8]
	546 Move X1, X23
	547 Call 0x1C17E00
	548 Move X2, X0
	549 Compare X0, 0
	550 JumpIfNotEqual {704}
	551 Compare X22, 0
	552 JumpIfEqual {716}
	553 Move X8, 0xBE1000
	554 Move X8, [X8+1592]
	555 Move X0, X22
	556 Move X23, [X8]
	557 Move X1, X23
	558 Call 0x1C17E00
	559 Move X2, X0
	560 Compare X0, 0
	561 JumpIfNotEqual {717}
	562 Compare X22, 0
	563 JumpIfEqual {729}
	564 Move X8, 0xC12000
	565 Move X8, [X8+2096]
	566 Move X0, X22
	567 Move X23, [X8]
	568 Move X1, X23
	569 Call 0x1C17E00
	570 Move X2, X0
	571 Compare X0, 0
	572 JumpIfNotEqual {730}
	573 And W3, W20, 1
	574 Move X0, X21
	575 Move X1, X19
	576 Move X2, X22
	577 Move X20, [X31+48]
	578 Move X19, [X31+56]
	579 Move X22, [X31+32]
	580 Move X21, [X31+40]
	581 Move X24, [X31+16]
	582 Move X23, [X31+24]
	583 Move X30, [X31+64]
	584 Call Protocol18.WriteStringArray, X0, X1, X2, X3
	585 Return 
	586 Compare X22, 0
	587 JumpIfEqual {742}
	588 Move X8, 0xBE2000
	589 Move X8, [X8+3672]
	590 Move X0, X22
	591 Move X23, [X8]
	592 Move X1, X23
	593 Call 0x1C17E00
	594 Move X2, X0
	595 Compare X0, 0
	596 JumpIfNotEqual {743}
	597 Compare X22, 0
	598 JumpIfEqual {755}
	599 Move X8, 0xC12000
	600 Move X8, [X8+2104]
	601 Move X0, X22
	602 Move X23, [X8]
	603 Move X1, X23
	604 Call 0x1C17E00
	605 Move X2, X0
	606 Compare X0, 0
	607 JumpIfNotEqual {756}
	608 Move X0, X22
	609 Move X1, X23
	610 Call 0x1C181E0
	611 And W3, W20, 1
	612 Move X0, X21
	613 Move X1, X19
	614 Move X2, X22
	615 Move X20, [X31+48]
	616 Move X19, [X31+56]
	617 Move X22, [X31+32]
	618 Move X21, [X31+40]
	619 Move X24, [X31+16]
	620 Move X23, [X31+24]
	621 Move X30, [X31+64]
	622 Call Protocol18.WriteCustomTypeArray, X0, X1, X2, X3
	623 Return 
	624 Compare X22, 0
	625 JumpIfEqual {768}
	626 Move X8, 0xC22000
	627 Move X8, [X8+792]
	628 Move X0, X22
	629 Move X20, [X8]
	630 Move X1, X20
	631 Call 0x1C17E00
	632 Move X2, X0
	633 Compare X0, 0
	634 JumpIfNotEqual {769}
	635 Move X0, X22
	636 Move X1, X20
	637 Call 0x1C181E0
	638 And W3, W20, 1
	639 Move X0, X21
	640 Move X1, X19
	641 Move X2, X22
	642 Move X20, [X31+48]
	643 Move X19, [X31+56]
	644 Move X22, [X31+32]
	645 Move X21, [X31+40]
	646 Move X24, [X31+16]
	647 Move X23, [X31+24]
	648 Move X30, [X31+64]
	649 Call Protocol18.WriteHashtableArray, X0, X1, X2, X3
	650 Return 
	651 Move X2, X31
	652 And W3, W20, 1
	653 Move X0, X21
	654 Move X1, X19
	655 Move X20, [X31+48]
	656 Move X19, [X31+56]
	657 Move X22, [X31+32]
	658 Move X21, [X31+40]
	659 Move X24, [X31+16]
	660 Move X23, [X31+24]
	661 Move X30, [X31+64]
	662 Call Protocol18.WriteDictionary, X0, X1, X2, X3
	663 Return 
	664 Move X2, X31
	665 And W3, W20, 1
	666 Move X0, X21
	667 Move X1, X19
	668 Move X20, [X31+48]
	669 Move X19, [X31+56]
	670 Move X22, [X31+32]
	671 Move X21, [X31+40]
	672 Move X24, [X31+16]
	673 Move X23, [X31+24]
	674 Move X30, [X31+64]
	675 Call Protocol18.WriteObjectArray, X0, X1, X2, X3
	676 Return 
	677 Move X2, X31
	678 And W3, W20, 1
	679 Move X0, X21
	680 Move X1, X19
	681 Move X20, [X31+48]
	682 Move X19, [X31+56]
	683 Move X22, [X31+32]
	684 Move X21, [X31+40]
	685 Move X24, [X31+16]
	686 Move X23, [X31+24]
	687 Move X30, [X31+64]
	688 Call Protocol18.WriteBoolArray, X0, X1, X2, X3
	689 Return 
	690 Move X2, X31
	691 And W3, W20, 1
	692 Move X0, X21
	693 Move X1, X19
	694 Move X20, [X31+48]
	695 Move X19, [X31+56]
	696 Move X22, [X31+32]
	697 Move X21, [X31+40]
	698 Move X24, [X31+16]
	699 Move X23, [X31+24]
	700 Move X30, [X31+64]
	701 Call Protocol18.WriteByteArray, X0, X1, X2, X3
	702 Return 
	703 Move X2, X31
	704 And W3, W20, 1
	705 Move X0, X21
	706 Move X1, X19
	707 Move X20, [X31+48]
	708 Move X19, [X31+56]
	709 Move X22, [X31+32]
	710 Move X21, [X31+40]
	711 Move X24, [X31+16]
	712 Move X23, [X31+24]
	713 Move X30, [X31+64]
	714 Call Protocol18.WriteInt16Array, X0, X1, X2, X3
	715 Return 
	716 Move X2, X31
	717 And W3, W20, 1
	718 Move X0, X21
	719 Move X1, X19
	720 Move X20, [X31+48]
	721 Move X19, [X31+56]
	722 Move X22, [X31+32]
	723 Move X21, [X31+40]
	724 Move X24, [X31+16]
	725 Move X23, [X31+24]
	726 Move X30, [X31+64]
	727 Call Protocol18.WriteSingleArray, X0, X1, X2, X3
	728 Return 
	729 Move X2, X31
	730 And W3, W20, 1
	731 Move X0, X21
	732 Move X1, X19
	733 Move X20, [X31+48]
	734 Move X19, [X31+56]
	735 Move X22, [X31+32]
	736 Move X21, [X31+40]
	737 Move X24, [X31+16]
	738 Move X23, [X31+24]
	739 Move X30, [X31+64]
	740 Call Protocol18.WriteDoubleArray, X0, X1, X2, X3
	741 Return 
	742 Move X2, X31
	743 And W3, W20, 1
	744 Move X0, X21
	745 Move X1, X19
	746 Move X20, [X31+48]
	747 Move X19, [X31+56]
	748 Move X22, [X31+32]
	749 Move X21, [X31+40]
	750 Move X24, [X31+16]
	751 Move X23, [X31+24]
	752 Move X30, [X31+64]
	753 Call Protocol18.WriteInt32ArrayCompressed, X0, X1, X2, X3
	754 Return 
	755 Move X2, X31
	756 And W3, W20, 1
	757 Move X0, X21
	758 Move X1, X19
	759 Move X20, [X31+48]
	760 Move X19, [X31+56]
	761 Move X22, [X31+32]
	762 Move X21, [X31+40]
	763 Move X24, [X31+16]
	764 Move X23, [X31+24]
	765 Move X30, [X31+64]
	766 Call Protocol18.WriteInt64ArrayCompressed, X0, X1, X2, X3
	767 Return 
	768 Move X2, X31
	769 Move X0, X21
	770 Move X1, X19
	771 Move X20, [X31+48]
	772 Move X19, [X31+56]
	773 Move X22, [X31+32]
	774 Move X21, [X31+40]
	775 Move X24, [X31+16]
	776 Move X23, [X31+24]
	777 Move W3, W31
	778 Move X30, [X31+64]
	779 Call Protocol18.WriteDictionaryArray, X0, X1, X2, X3
	780 Return 
	781 Move X0, X22
	782 Call 0x1C17E08
	783 Move X2, [X0]
	784 Move X3, [X0+8]
	785 And W4, W20, 1
	786 Move X0, X21
	787 Move X1, X19
	788 Move X20, [X31+48]
	789 Move X19, [X31+56]
	790 Move X22, [X31+32]
	791 Move X21, [X31+40]
	792 Move X24, [X31+16]
	793 Move X23, [X31+24]
	794 Move X30, [X31+64]
	795 Call Protocol18.WriteArraySegmentByte, X0, X1, X2, X3
	796 Return 
	797 And W3, W20, 1
	798 Move X0, X21
	799 Move X1, X19
	800 Move X2, X22
	801 Move X20, [X31+48]
	802 Move X19, [X31+56]
	803 Move X22, [X31+32]
	804 Move X21, [X31+40]
	805 Move X24, [X31+16]
	806 Move X23, [X31+24]
	807 Move X30, [X31+64]
	808 Move W8, [X22+16]
	809 Subtract W8, W8, 1
	810 NotImplemented "Instruction CMP not yet implemented."
	811 Move X9, -43499520
	812 Add X9, X9, 3304
	813 NotImplemented "Instruction ADR not yet implemented."
	814 Move W11, [X9]
	815 Add X10, X10, X11
	816 CallNoReturn X10
	817 Move X8, 0xC22000
	818 Move X8, [X8+304]
	819 Move X0, X22
	820 Move X1, [X8]
	821 Call 0x22909C8, X0
	822 And W2, W0, 1
	823 Move X8, 0xC22000
	824 Move X8, [X8+312]
	825 Move X0, X22
	826 Move X1, [X8]
	827 Call StructWrapperUtility.Get, X0
	828 And W3, W20, 1
	829 Move X1, X19
	830 Move W2, W0
	831 Move X8, 0xC22000
	832 Move X8, [X8+328]
	833 Move X0, X22
	834 Move X1, [X8]
	835 Call StructWrapperUtility.Get, X0
	836 And W3, W20, 1
	837 Move X1, X19
	838 Move W2, W0
	839 Move X8, 0xC22000
	840 Move X8, [X8+336]
	841 Move X0, X22
	842 Move X1, [X8]
	843 Call StructWrapperUtility.Get, X0
	844 And W3, W20, 1
	845 Move W2, W0
	846 Move X8, 0xC22000
	847 Move X8, [X8+344]
	848 Move X0, X22
	849 Move X1, [X8]
	850 Call StructWrapperUtility.Get, X0
	851 And W3, W20, 1
	852 Move X2, X0
	853 Move X8, 0xC22000
	854 Move X8, [X8+352]
	855 Move X0, X22
	856 Move X1, [X8]
	857 Call StructWrapperUtility.Get, X0
	858 Move X8, 0xC22000
	859 Move X8, [X8+320]
	860 Move X0, X22
	861 Move X1, [X8]
	862 Call StructWrapperUtility.Get, X0
	863 Move X0, X22
	864 Call 0x1C181E0
	865 Call 0x1C17F20

Method: System.Void SerializeEventData(ExitGames.Client.Photon.StreamBuffer stream, ExitGames.Client.Photon.EventData serObject, System.Boolean setType)

Disassembly:
	0x03515640 ADRP X8, 0xC06000
	0x03515644 LDR X0, [X26]
	0x03515648 LDR X24, [X21 + 0x20]
	0x0351564C LDR X8, [X8 + 0xB60]
	0x03515650 LDR W9, [X0 + 0xE0]
	0x03515654 LDR X25, [X8]
	0x03515658 CBNZ W9, 0x3515660
	0x0351565C BL 0x1C16DFC
	0x03515660 MOV X0, X25
	0x03515664 MOV X1, X31
	0x03515668 BL 0x338C698
	0x0351566C MOV X1, X0
	0x03515670 MOV X0, X24
	0x03515674 MOV X2, X31
	0x03515678 BL 0x3395F0C
	0x0351567C LDR W8, [X21 + 0x18]
	0x03515680 CBZ W8, 0x3515830
	0x03515684 LDR X1, [X21 + 0x20]
	0x03515688 TBNZ X0, 0x0, 0x3515834
	0x0351568C MOV X0, X20
	0x03515690 BL 0x350E78C
	0x03515694 ANDS W31, W0, 0xFF
	0x03515698 STRB W0, [X23]
	0x0351569C B.EQ 0x35157FC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, X2
	006 Move X19, X1
	007 Move X21, X0
	008 Move TEMP, X3
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfNotEqual {18}
	012 Compare X19, 0
	013 JumpIfEqual {33}
	014 Move W1, 26
	015 Move X0, X19
	016 Move X2, X31
	017 Call StreamBuffer.WriteByte, X0, X1
	018 Compare X20, 0
	019 JumpIfEqual {33}
	020 Compare X19, 0
	021 JumpIfEqual {33}
	022 Move W1, [X20+16]
	023 Move X0, X19
	024 Move X2, X31
	025 Call StreamBuffer.WriteByte, X0, X1
	026 Move X2, [X20+24]
	027 Move X1, X19
	028 Move X20, [X31+16]
	029 Move X19, [X31+24]
	030 Move X0, X21
	031 Move X30, [X31+32]
	032 Move X21, [X31+40]
	033 Call 0x1C17F20

Method: System.Void WriteParameterTable(ExitGames.Client.Photon.StreamBuffer stream, System.Collections.Generic.Dictionary`2<System.Byte, System.Object> parameters)

Disassembly:
	0x03515870 BL 0x321B938
	0x03515874 MOV X19, X0
	0x03515878 ADRP X0, 0xC1F000
	0x0351587C LDR X0, [X0 + 0x68]
	0x03515880 BL 0x1C16D08
	0x03515884 BL 0x1C16F10
	0x03515888 MOV X1, X19
	0x0351588C MOV X20, X0
	0x03515890 BL 0x35077D4
	0x03515894 ADRP X0, 0xC1F000
	0x03515898 LDR X0, [X0 + 0x3E8]
	0x0351589C BL 0x1C16D08
	0x035158A0 MOV X1, X0
	0x035158A4 MOV X0, X20
	0x035158A8 BL 0x1C16DEC
	0x035158AC STR X30, [X31 - 0x40]!
	0x035158B0 STP X24, X23, [X31 + 0x10]
	0x035158B4 STP X22, X21, [X31 + 0x20]
	0x035158B8 STP X20, X19, [X31 + 0x30]
	0x035158BC ADRP X21, 0xECA000
	0x035158C0 LDRB W8, [X21 + 0xB0B]
	0x035158C4 MOV X19, X3
	0x035158C8 MOV X23, X2
	0x035158CC MOV X20, X1
	0x035158D0 MOV X22, X0
	0x035158D4 TBNZ X8, 0x0, 0x3515934
	0x035158D8 ADRP X0, 0xBDF000
	0x035158DC LDR X0, [X0 + 0x9D8]
	0x035158E0 BL 0x1C16CF4
	0x035158E4 ADRP X0, 0xBDE000
	0x035158E8 LDR X0, [X0 + 0xDF8]
	0x035158EC BL 0x1C16CF4
	0x035158F0 ADRP X0, 0xC1F000
	0x035158F4 LDR X0, [X0 + 0x3F0]
	0x035158F8 BL 0x1C16CF4
	0x035158FC ADRP X0, 0xC1F000
	0x03515900 LDR X0, [X0 + 0x88]
	0x03515904 BL 0x1C16CF4
	0x03515908 ADRP X0, 0xBE8000
	0x0351590C LDR X0, [X0 + 0x968]
	0x03515910 BL 0x1C16CF4
	0x03515914 ADRP X0, 0xC06000
	0x03515918 LDR X0, [X0 + 0xB60]
	0x0351591C BL 0x1C16CF4
	0x03515920 ADRP X0, 0xBDE000
	0x03515924 LDR X0, [X0 + 0x6C0]
	0x03515928 BL 0x1C16CF4
	0x0351592C MOVZ W8, 0x1
	0x03515930 STRB W8, [X21 + 0xB0B]
	0x03515934 CBZ X23, 0x3515C04
	0x03515938 LDR X8, [X23]
	0x0351593C ADRP X24, 0xBDE000
	0x03515940 MOV X0, X23
	0x03515944 LDR X9, [X8 + 0x428]
	0x03515948 LDR X1, [X8 + 0x430]
	0x0351594C LDR X24, [X24 + 0x6C0]
	0x03515950 BLR X9
	0x03515954 LDR X8, [X24]
	0x03515958 MOV X21, X0
	0x0351595C LDR W9, [X8 + 0xE0]
	0x03515960 CBNZ W9, 0x351596C
	0x03515964 MOV X0, X8
	0x03515968 BL 0x1C16DFC
	0x0351596C MOV X0, X21
	0x03515970 MOV X1, X31
	0x03515974 MOV X2, X31
	0x03515978 BL 0x3395194
	0x0351597C TBNZ X0, 0x0, 0x3515C08
	0x03515980 CBZ X21, 0x3515C04
	0x03515984 MOV X0, X21
	0x03515988 MOV X1, X31
	0x0351598C BL 0x3396BF8
	0x03515990 TBZ X0, 0x0, 0x35159FC
	0x03515994 LDR X0, [X24]
	0x03515998 LDR W8, [X0 + 0xE0]
	0x0351599C CBNZ W8, 0x35159A4
	0x035159A0 BL 0x1C16DFC
	0x035159A4 MOV X0, X21
	0x035159A8 MOV X1, X31
	0x035159AC MOV X2, X31
	0x035159B0 BL 0x3395F0C
	0x035159B4 TBZ X0, 0x0, 0x3515AC0
	0x035159B8 CBZ X21, 0x3515C04
	0x035159BC MOV X0, X21
	0x035159C0 MOV X1, X31
	0x035159C4 BL 0x3396BF8
	0x035159C8 TBZ X0, 0x0, 0x3515AC0
	0x035159CC CBZ X20, 0x3515C04
	0x035159D0 MOVZ W1, 0x40
	0x035159D4 MOV X0, X20
	0x035159D8 MOV X2, X31
	0x035159DC BL 0x351EFE8
	0x035159E0 LDR X8, [X21]
	0x035159E4 MOV X0, X21
	0x035159E8 LDR X9, [X8 + 0x428]
	0x035159EC LDR X1, [X8 + 0x430]
	0x035159F0 BLR X9
	0x035159F4 MOV X21, X0
	0x035159F8 B 0x3515994
	0x035159FC MOV X0, X21
	0x03515A00 MOV X1, X31
	0x03515A04 BL 0x3397374
	0x03515A08 TBZ X0, 0x0, 0x3515AEC
	0x03515A0C MOV X0, X22
	0x03515A10 MOV X1, X21
	0x03515A14 BL 0x350E78C
	0x03515A18 ORR W8, W0, 0x40
	0x03515A1C AND W9, W8, 0xFF
	0x03515A20 CMP W9, 0xE2
	0x03515A24 MOVZ W9, 0x43
	0x03515A28 CSEL W21, W9, W8, EQ
	0x03515A2C CBZ X20, 0x3515C04
	0x03515A30 MOV X0, X20
	0x03515A34 MOV W1, W21
	0x03515A38 MOV X2, X31
	0x03515A3C BL 0x351EFE8
	0x03515A40 ADRP X8, 0xC1F000
	0x03515A44 LDR X0, [X24]
	0x03515A48 LDR X8, [X8 + 0x3F0]
	0x03515A4C LDR W9, [X0 + 0xE0]
	0x03515A50 LDR X20, [X8]
	0x03515A54 CBNZ W9, 0x3515A5C
	0x03515A58 BL 0x1C16DFC
	0x03515A5C MOV X0, X20
	0x03515A60 MOV X1, X31
	0x03515A64 BL 0x338C698
	0x03515A68 ADRP X8, 0xBDF000

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+96], X30
	003 Move [X31+112], X22
	004 Move [X31+120], X21
	005 Move [X31+128], X20
	006 Move [X31+136], X19
	007 Move X22, 0xECB000
	008 Move W8, [X22+2812]
	009 Move X21, X2
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {39}
	016 Move X0, 0xC20000
	017 Move X0, [X0+184]
	018 Call 0x1C17CF4
	019 Move X0, 0xBE8000
	020 Move X0, [X0+1768]
	021 Call 0x1C17CF4
	022 Move X0, 0xC20000
	023 Move X0, [X0+192]
	024 Call 0x1C17CF4
	025 Move X0, 0xC20000
	026 Move X0, [X0+200]
	027 Call 0x1C17CF4
	028 Move X0, 0xC20000
	029 Move X0, [X0+208]
	030 Call 0x1C17CF4
	031 Move X0, 0xC20000
	032 Move X0, [X0+216]
	033 Call 0x1C17CF4
	034 Move X0, 0xC20000
	035 Move X0, [X0+224]
	036 Call 0x1C17CF4
	037 Move W8, 1
	038 Move [X22+2812], W8
	039 NotImplemented "Instruction MOVI not yet implemented."
	040 Move [X31+80], X31
	041 Move [X31+48], V0
	042 Move [X31+56], V0
	043 Compare X21, 0
	044 JumpIfEqual {92}
	045 Move X22, 0xBE8000
	046 Move X22, [X22+1768]
	047 Move X0, X21
	048 Move X1, [X22]
	049 Call Dictionary`2<Byte, Object>.get_Count, X0
	050 Compare W0, 0
	051 JumpIfEqual {92}
	052 Move X1, [X22]
	053 Move X0, X21
	054 Call Dictionary`2<Byte, Object>.get_Count, X0
	055 Compare X19, 0
	056 JumpIfEqual {110}
	057 Move W1, W0
	058 Move X0, X19
	059 Move X2, X31
	060 Call StreamBuffer.WriteByte, X0, X1
	061 Move X8, 0xC20000
	062 Move X8, [X8+184]
	063 Move X0, X21
	064 Move X1, [X8]
	065 Add X8, X31, 8
	066 Call Dictionary`2<Byte, Object>.GetEnumerator, X0
	067 NotImplemented "Instruction LDUR not yet implemented."
	068 NotImplemented "Instruction LDUR not yet implemented."
	069 Move X8, [X31+40]
	070 Move X22, 0xC20000
	071 Move [X31+48], V0
	072 Move [X31+56], V1
	073 Move [X31+80], X8
	074 Move X22, [X22+200]
	075 Move X1, [X22]
	076 Add X0, X31, 48
	077 Call Enumerator<Byte, Object>.MoveNext, X0
	078 Move TEMP, X0
	079 And TEMP, TEMP, 1
	080 Compare TEMP, 1
	081 JumpIfNotEqual {98}
	082 Move X21, [X31+72]
	083 Move W1, [X31+64]
	084 Move X0, X19
	085 Move X2, X31
	086 Call StreamBuffer.WriteByte, X0, X1
	087 Move W3, 1
	088 Move X0, X20
	089 Move X1, X19
	090 Move X2, X21
	091 Call Protocol18.Write, X0, X1, X2, X3
	092 Compare X19, 0
	093 JumpIfEqual {110}
	094 Move X0, X19
	095 Move W1, W31
	096 Move X2, X31
	097 Call StreamBuffer.WriteByte, X0, X1
	098 Move X8, 0xC20000
	099 Move X8, [X8+192]
	100 Add X0, X31, 48
	101 Move X1, [X8]
	102 Call Enumerator<Byte, Object>.Dispose, X0
	103 Move X20, [X31+128]
	104 Move X19, [X31+136]
	105 Move X22, [X31+112]
	106 Move X21, [X31+120]
	107 Move X30, [X31+96]
	108 Add X31, X31, 144
	109 Return 
	110 Call 0x1C17F20
	111 Move X19, X0
	112 NotImplemented "Instruction CMP not yet implemented."
	113 Move X0, X19
	114 Call 0x3EB2AD0
	115 Move X20, [X0]
	116 Call 0x3EB2AE0
	117 Move X8, 0xC20000
	118 Move X8, [X8+192]
	119 Add X0, X31, 48
	120 Move X1, [X8]
	121 Call Enumerator<Byte, Object>.Dispose, X0
	122 Compare X20, 0
	123 JumpIfEqual {103}
	124 Move X0, X20
	125 Call 0x1C17F18
	126 Move X20, X31
	127 Move X19, X0
	128 Move X8, 0xC20000
	129 Move X8, [X8+192]
	130 Move X1, [X8]
	131 Add X0, X31, 48
	132 Call Enumerator<Byte, Object>.Dispose, X0
	133 Compare X20, 0
	134 JumpIfNotEqual {137}
	135 Move X0, X19
	136 Call 0x1D2D690
	137 Move X0, X20
	138 Call 0x1C17F18
	139 Call 0x1991590

Method: System.Void WriteParameterTable(ExitGames.Client.Photon.StreamBuffer stream, ExitGames.Client.Photon.ParameterDictionary parameters)

Disassembly:
	0x035156A0 CBZ X19, 0x35157F8
	0x035156A4 MOV W1, W0
	0x035156A8 MOV X0, X19
	0x035156AC MOV X2, X31
	0x035156B0 BL 0x351EFE8
	0x035156B4 LDR W8, [X21 + 0x18]
	0x035156B8 CMP W8, 0x1
	0x035156BC B.LS 0x3515830
	0x035156C0 LDR X0, [X26]
	0x035156C4 LDR X23, [X21 + 0x28]
	0x035156C8 LDR X24, [X27]
	0x035156CC LDR W8, [X0 + 0xE0]
	0x035156D0 CBNZ W8, 0x35156D8
	0x035156D4 BL 0x1C16DFC
	0x035156D8 MOV X0, X24
	0x035156DC MOV X1, X31
	0x035156E0 BL 0x338C698
	0x035156E4 MOV X1, X0
	0x035156E8 MOV X0, X23
	0x035156EC MOV X2, X31
	0x035156F0 BL 0x3395194
	0x035156F4 TBZ X0, 0x0, 0x3515710
	0x035156F8 MOV X0, X19
	0x035156FC MOV W1, W31
	0x03515700 MOV X2, X31
	0x03515704 BL 0x351EFE8
	0x03515708 STRB W31, [X22]
	0x0351570C B 0x35157DC
	0x03515710 LDR W8, [X21 + 0x18]
	0x03515714 CMP W8, 0x1
	0x03515718 B.LS 0x3515830
	0x0351571C LDR X0, [X21 + 0x28]
	0x03515720 CBZ X0, 0x35157F8
	0x03515724 MOV X1, X31
	0x03515728 BL 0x3396BF8
	0x0351572C LDR W8, [X21 + 0x18]
	0x03515730 CMP W8, 0x1
	0x03515734 B.LS 0x3515830
	0x03515738 LDR X2, [X21 + 0x28]
	0x0351573C TBZ X0, 0x0, 0x3515758
	0x03515740 MOV X0, X20
	0x03515744 MOV X1, X19
	0x03515748 MOV X3, X22
	0x0351574C BL 0x35158AC
	0x03515750 TBNZ X0, 0x0, 0x35157DC
	0x03515754 B 0x3515814
	0x03515758 MOV X0, X20
	0x0351575C MOV X1, X2
	0x03515760 BL 0x350E78C
	0x03515764 AND W8, W0, 0xFF
	0x03515768 CMP W8, 0x40
	0x0351576C STRB W0, [X22]
	0x03515770 B.EQ 0x35157BC
	0x03515774 CBZ W8, 0x3515814
	0x03515778 MOV W1, W0
	0x0351577C AND W22, W0, 0xFF
	0x03515780 MOV X0, X19
	0x03515784 MOV X2, X31
	0x03515788 BL 0x351EFE8
	0x0351578C CMP W22, 0x14
	0x03515790 B.NE 0x35157DC
	0x03515794 LDR W8, [X21 + 0x18]
	0x03515798 CMP W8, 0x1
	0x0351579C B.LS 0x3515830
	0x035157A0 LDR X2, [X21 + 0x28]
	0x035157A4 ADD X3, X31, 0xC
	0x035157A8 ADD X4, X31, 0x8
	0x035157AC MOV X0, X20
	0x035157B0 MOV X1, X19
	0x035157B4 BL 0x3515518
	0x035157B8 B 0x35157DC
	0x035157BC LDR W8, [X21 + 0x18]
	0x035157C0 CMP W8, 0x1
	0x035157C4 B.LS 0x3515830
	0x035157C8 LDR X2, [X21 + 0x28]
	0x035157CC MOV X0, X20
	0x035157D0 MOV X1, X19
	0x035157D4 BL 0x3515078
	0x035157D8 TBZ X0, 0x0, 0x3515814
	0x035157DC LDP X20, X19, [X31 + 0x50]
	0x035157E0 LDP X22, X21, [X31 + 0x40]
	0x035157E4 LDP X24, X23, [X31 + 0x30]
	0x035157E8 LDP X26, X25, [X31 + 0x20]
	0x035157EC LDP X30, X27, [X31 + 0x10]
	0x035157F0 ADD X31, X31, 0x60
	0x035157F4 RET
	0x035157F8 BL 0x1C16F20
	0x035157FC LDR W8, [X21 + 0x18]
	0x03515800 CBZ W8, 0x3515830
	0x03515804 ADRP X0, 0xC1F000
	0x03515808 LDR X20, [X21 + 0x20]
	0x0351580C LDR X0, [X0 + 0x1B8]
	0x03515810 B 0x3515840
	0x03515814 LDR W8, [X21 + 0x18]
	0x03515818 CMP W8, 0x1
	0x0351581C B.LS 0x3515830
	0x03515820 ADRP X0, 0xC1F000
	0x03515824 LDR X20, [X21 + 0x28]
	0x03515828 LDR X0, [X0 + 0x1C0]
	0x0351582C B 0x3515840
	0x03515830 BL 0x1C16F28
	0x03515834 ADRP X0, 0xC1F000
	0x03515838 LDR X0, [X0 + 0x1B8]
	0x0351583C MOV X20, X1
	0x03515840 BL 0x1C16D08
	0x03515844 MOV X19, X0
	0x03515848 CBNZ X20, 0x3515854
	0x0351584C MOV X1, X31
	0x03515850 B 0x3515868
	0x03515854 LDR X8, [X20]
	0x03515858 MOV X0, X20
	0x0351585C LDP X9, X1, [X8 + 0x168]
	0x03515860 BLR X9
	0x03515864 MOV X1, X0
	0x03515868 MOV X0, X19
	0x0351586C MOV X2, X31

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X22, 0xECB000
	009 Move W8, [X22+2813]
	010 Move X21, X2
	011 Move X19, X1
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {34}
	017 Move X0, 0xC20000
	018 Move X0, [X0+216]
	019 Call 0x1C17CF4
	020 Move X0, 0xC20000
	021 Move X0, [X0+224]
	022 Call 0x1C17CF4
	023 Move X0, 0xC20000
	024 Move X0, [X0+240]
	025 Call 0x1C17CF4
	026 Move X0, 0xC20000
	027 Move X0, [X0+248]
	028 Call 0x1C17CF4
	029 Move X0, 0xC20000
	030 Move X0, [X0+256]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X22+2813], W8
	034 Compare X21, 0
	035 JumpIfEqual {80}
	036 Move X0, X21
	037 Move X1, X31
	038 Call ParameterDictionary.get_Count, X0
	039 Compare W0, 0
	040 JumpIfEqual {80}
	041 Move X0, X21
	042 Move X1, X31
	043 Call ParameterDictionary.get_Count, X0
	044 Compare X19, 0
	045 JumpIfEqual {99}
	046 Move W1, W0
	047 Move X0, X19
	048 Move X2, X31
	049 Call StreamBuffer.WriteByte, X0, X1
	050 Move X0, X21
	051 Move X1, X31
	052 Call ParameterDictionary.GetEnumerator, X0
	053 Move [X31], X0
	054 Move [X31+8], X1
	055 Move X22, 0xC20000
	056 Move X23, 0xC20000
	057 Move X22, [X22+248]
	058 Move X23, [X23+256]
	059 Move X1, [X22]
	060 Add X0, X31, 0
	061 Call 0x24A1B30, X0
	062 Move TEMP, X0
	063 And TEMP, TEMP, 1
	064 Compare TEMP, 1
	065 JumpIfNotEqual {86}
	066 Move X1, [X23]
	067 Add X0, X31, 0
	068 Call 0x24A1A9C, X0
	069 Move X21, X1
	070 Move X2, X0
	071 Move X0, X19
	072 Move W1, W2
	073 Move X2, X31
	074 Call StreamBuffer.WriteByte, X0, X1
	075 Move W3, 1
	076 Move X0, X20
	077 Move X1, X19
	078 Move X2, X21
	079 Call Protocol18.Write, X0, X1, X2, X3
	080 Compare X19, 0
	081 JumpIfEqual {99}
	082 Move X0, X19
	083 Move W1, W31
	084 Move X2, X31
	085 Call StreamBuffer.WriteByte, X0, X1
	086 Move X8, 0xC20000
	087 Move X8, [X8+240]
	088 Add X0, X31, 0
	089 Move X1, [X8]
	090 Call 0x24A1BBC, X0
	091 Move X20, [X31+48]
	092 Move X19, [X31+56]
	093 Move X22, [X31+32]
	094 Move X21, [X31+40]
	095 Move X30, [X31+16]
	096 Move X23, [X31+24]
	097 Add X31, X31, 64
	098 Return 
	099 Call 0x1C17F20
	100 Move X19, X0
	101 NotImplemented "Instruction CMP not yet implemented."
	102 Move X0, X19
	103 Call 0x3EB2AD0
	104 Move X20, [X0]
	105 Call 0x3EB2AE0
	106 Move X8, 0xC20000
	107 Move X8, [X8+240]
	108 Add X0, X31, 0
	109 Move X1, [X8]
	110 Call 0x24A1BBC, X0
	111 Compare X20, 0
	112 JumpIfEqual {91}
	113 Move X0, X20
	114 Call 0x1C17F18
	115 Move X20, X31
	116 Move X19, X0
	117 Move X8, 0xC20000
	118 Move X8, [X8+240]
	119 Move X1, [X8]
	120 Add X0, X31, 0
	121 Call 0x24A1BBC, X0
	122 Compare X20, 0
	123 JumpIfNotEqual {126}
	124 Move X0, X19
	125 Call 0x1D2D690
	126 Move X0, X20
	127 Call 0x1C17F18
	128 Call 0x1991590

Method: System.Void SerializeOperationRequest(ExitGames.Client.Photon.StreamBuffer stream, ExitGames.Client.Photon.OperationRequest operation, System.Boolean setType)

Disassembly:
	0x03514C3C MOV W20, W3
	0x03514C40 MOV X22, X2
	0x03514C44 MOV X19, X1
	0x03514C48 MOV X21, X0
	0x03514C4C TBNZ X8, 0x0, 0x3514C64
	0x03514C50 ADRP X0, 0xBE6000
	0x03514C54 LDR X0, [X0 + 0x2F8]
	0x03514C58 BL 0x1C16CF4
	0x03514C5C MOVZ W8, 0x1
	0x03514C60 STRB W8, [X23 + 0xB02]
	0x03514C64 CBZ X22, 0x3514C94

ISIL:
	001 Move [X31-16], X30
	002 Compare X2, 0
	003 JumpIfEqual {13}
	004 Move X9, [X0]
	005 Move X8, [X2+24]
	006 Move W2, [X2+16]
	007 And W4, W3, 1
	008 Move X6, [X9+488]
	009 Move X5, [X9+496]
	010 Move X3, X8
	011 Move X30, [X31+16]
	012 CallNoReturn X6
	013 Call 0x1C17F20

Method: System.Void SerializeOperationRequest(ExitGames.Client.Photon.StreamBuffer stream, System.Byte operationCode, System.Collections.Generic.Dictionary`2<System.Byte, System.Object> parameters, System.Boolean setType)

Disassembly:
	0x03515A6C LDR X8, [X8 + 0x9D8]
	0x03515A70 MOV X20, X0
	0x03515A74 ADD X1, X31, 0xC
	0x03515A78 STRB W21, [X31 + 0xC]
	0x03515A7C LDR X0, [X8]
	0x03515A80 BL 0x1C16E04
	0x03515A84 ADRP X8, 0xBDE000
	0x03515A88 LDR X8, [X8 + 0xDF8]
	0x03515A8C MOV X22, X0
	0x03515A90 LDR X8, [X8]
	0x03515A94 LDR W9, [X8 + 0xE0]
	0x03515A98 CBNZ W9, 0x3515AA4
	0x03515A9C MOV X0, X8
	0x03515AA0 BL 0x1C16DFC
	0x03515AA4 MOV X0, X20
	0x03515AA8 MOV X1, X22
	0x03515AAC MOV X2, X31
	0x03515AB0 BL 0x33B153C
	0x03515AB4 ANDS W31, W0, 0x1
	0x03515AB8 CSEL W21, W21, W31, NE
	0x03515ABC B 0x3515BDC
	0x03515AC0 MOV X0, X22
	0x03515AC4 MOV X1, X21
	0x03515AC8 BL 0x350E78C
	0x03515ACC CBZ X20, 0x3515C04
	0x03515AD0 ORR W1, W0, 0x40
	0x03515AD4 MOV X0, X20

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, X3
	007 Move W22, W2
	008 Move X20, X1
	009 Move X21, X0
	010 Move TEMP, X4
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfNotEqual {20}
	014 Compare X20, 0
	015 JumpIfEqual {36}
	016 Move W1, 24
	017 Move X0, X20
	018 Move X2, X31
	019 Call StreamBuffer.WriteByte, X0, X1
	020 Compare X20, 0
	021 JumpIfEqual {36}
	022 Move X0, X20
	023 Move W1, W22
	024 Move X2, X31
	025 Call StreamBuffer.WriteByte, X0, X1
	026 Move X0, X21
	027 Move X1, X20
	028 Move X2, X19
	029 Move X20, [X31+32]
	030 Move X19, [X31+40]
	031 Move X22, [X31+16]
	032 Move X21, [X31+24]
	033 Move X30, [X31+48]
	034 Call Protocol18.WriteParameterTable, X0, X1, X2
	035 Return 
	036 Call 0x1C17F20

Method: System.Void SerializeOperationRequest(ExitGames.Client.Photon.StreamBuffer stream, System.Byte operationCode, ExitGames.Client.Photon.ParameterDictionary parameters, System.Boolean setType)

Disassembly:
	0x03515AD8 MOV X2, X31
	0x03515ADC BL 0x351EFE8
	0x03515AE0 MOVZ W0, 0x1
	0x03515AE4 MOVZ W21, 0x40
	0x03515AE8 B 0x3515BDC
	0x03515AEC ADRP X8, 0xC06000
	0x03515AF0 LDR X0, [X24]
	0x03515AF4 LDR X8, [X8 + 0xB60]
	0x03515AF8 LDR W9, [X0 + 0xE0]
	0x03515AFC LDR X22, [X8]
	0x03515B00 CBNZ W9, 0x3515B08
	0x03515B04 BL 0x1C16DFC
	0x03515B08 MOV X0, X22
	0x03515B0C MOV X1, X31
	0x03515B10 BL 0x338C698
	0x03515B14 MOV X1, X0
	0x03515B18 MOV X0, X21
	0x03515B1C MOV X2, X31
	0x03515B20 BL 0x3395194
	0x03515B24 TBZ X0, 0x0, 0x3515B38
	0x03515B28 CBZ X20, 0x3515C04
	0x03515B2C MOVZ W1, 0x47
	0x03515B30 MOVZ W21, 0x47
	0x03515B34 B 0x3515BCC
	0x03515B38 ADRP X8, 0xBE8000
	0x03515B3C LDR X0, [X24]
	0x03515B40 LDR X8, [X8 + 0x968]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, X3
	007 Move W22, W2
	008 Move X20, X1
	009 Move X21, X0
	010 Move TEMP, X4
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfNotEqual {20}
	014 Compare X20, 0
	015 JumpIfEqual {36}
	016 Move W1, 24
	017 Move X0, X20
	018 Move X2, X31
	019 Call StreamBuffer.WriteByte, X0, X1
	020 Compare X20, 0
	021 JumpIfEqual {36}
	022 Move X0, X20
	023 Move W1, W22
	024 Move X2, X31
	025 Call StreamBuffer.WriteByte, X0, X1
	026 Move X0, X21
	027 Move X1, X20
	028 Move X2, X19
	029 Move X20, [X31+32]
	030 Move X19, [X31+40]
	031 Move X22, [X31+16]
	032 Move X21, [X31+24]
	033 Move X30, [X31+48]
	034 Call Protocol18.WriteParameterTable, X0, X1, X2
	035 Return 
	036 Call 0x1C17F20

Method: System.Void SerializeOperationResponse(ExitGames.Client.Photon.StreamBuffer stream, ExitGames.Client.Photon.OperationResponse serObject, System.Boolean setType)

Disassembly:
	0x03515B44 LDR W9, [X0 + 0xE0]
	0x03515B48 LDR X22, [X8]
	0x03515B4C CBNZ W9, 0x3515B54
	0x03515B50 BL 0x1C16DFC
	0x03515B54 MOV X0, X22
	0x03515B58 MOV X1, X31
	0x03515B5C BL 0x338C698
	0x03515B60 MOV X1, X0
	0x03515B64 MOV X0, X21
	0x03515B68 MOV X2, X31
	0x03515B6C BL 0x3395194
	0x03515B70 TBZ X0, 0x0, 0x3515B84
	0x03515B74 CBZ X20, 0x3515C04
	0x03515B78 MOVZ W1, 0x17
	0x03515B7C MOVZ W21, 0x17
	0x03515B80 B 0x3515BCC
	0x03515B84 ADRP X8, 0xC1F000
	0x03515B88 LDR X0, [X24]
	0x03515B8C LDR X8, [X8 + 0x88]
	0x03515B90 LDR W9, [X0 + 0xE0]
	0x03515B94 LDR X22, [X8]
	0x03515B98 CBNZ W9, 0x3515BA0
	0x03515B9C BL 0x1C16DFC
	0x03515BA0 MOV X0, X22
	0x03515BA4 MOV X1, X31
	0x03515BA8 BL 0x338C698
	0x03515BAC MOV X1, X0
	0x03515BB0 MOV X0, X21
	0x03515BB4 MOV X2, X31
	0x03515BB8 BL 0x3395194
	0x03515BBC TBZ X0, 0x0, 0x3515BF8
	0x03515BC0 CBZ X20, 0x3515C04
	0x03515BC4 MOVZ W1, 0x55
	0x03515BC8 MOVZ W21, 0x55
	0x03515BCC MOV X0, X20
	0x03515BD0 MOV X2, X31
	0x03515BD4 BL 0x351EFE8
	0x03515BD8 MOVZ W0, 0x1
	0x03515BDC STRB W21, [X19]
	0x03515BE0 LDP X20, X19, [X31 + 0x30]
	0x03515BE4 LDP X22, X21, [X31 + 0x20]
	0x03515BE8 LDP X24, X23, [X31 + 0x10]
	0x03515BEC AND W0, W0, 0x1
	0x03515BF0 LDR X30, [X31], #0x40
	0x03515BF4 RET
	0x03515BF8 MOV W21, W31
	0x03515BFC MOV W0, W31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, X2
	006 Move X19, X1
	007 Move X21, X0
	008 Move TEMP, X3
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfNotEqual {18}
	012 Compare X19, 0
	013 JumpIfEqual {62}
	014 Move W1, 25
	015 Move X0, X19
	016 Move X2, X31
	017 Call StreamBuffer.WriteByte, X0, X1
	018 Compare X20, 0
	019 JumpIfEqual {62}
	020 Compare X19, 0
	021 JumpIfEqual {62}
	022 Move W1, [X20+16]
	023 Move X0, X19
	024 Move X2, X31
	025 Call StreamBuffer.WriteByte, X0, X1
	026 NotImplemented "Instruction LDRH not yet implemented."
	027 Move X0, X19
	028 Move X3, X31
	029 Move W2, W1
	030 ShiftRight W2, 8
	031 And W2, W2, 0x7FFFFFFF
	032 Call StreamBuffer.WriteBytes, X0, X1, X2
	033 Move X0, [X20+24]
	034 Move X1, X31
	035 Call String.IsNullOrEmpty, X0
	036 Move TEMP, X0
	037 And TEMP, TEMP, 1
	038 Compare TEMP, 1
	039 JumpIfNotEqual {44}
	040 Move W1, 8
	041 Move X0, X19
	042 Move X2, X31
	043 Call StreamBuffer.WriteByte, X0, X1
	044 Move W1, 7
	045 Move X0, X19
	046 Move X2, X31
	047 Call StreamBuffer.WriteByte, X0, X1
	048 Move X2, [X20+24]
	049 Move X0, X21
	050 Move X1, X19
	051 Move W3, W31
	052 Call Protocol18.WriteString, X0, X1, X2, X3
	053 Move X2, [X20+32]
	054 Move X1, X19
	055 Move X20, [X31+16]
	056 Move X19, [X31+24]
	057 Move X0, X21
	058 Move X30, [X31+32]
	059 Move X21, [X31+40]
	060 Call Protocol18.WriteParameterTable, X0, X1, X2
	061 Return 
	062 Call 0x1C17F20

Method: System.Void WriteByte(ExitGames.Client.Photon.StreamBuffer stream, System.Byte value, System.Boolean writeType)

Disassembly:
	0x03513AE4 BL 0x1D2C690
	0x03513AE8 MOV X0, X20
	0x03513AEC BL 0x1C16F18
	0x03513AF0 BL 0x1990590
	0x03513AF4 STP X30, X23, [X31 - 0x30]!
	0x03513AF8 STP X22, X21, [X31 + 0x10]
	0x03513AFC STP X20, X19, [X31 + 0x20]
	0x03513B00 MOV X19, X2
	0x03513B04 MOV X20, X1
	0x03513B08 MOV X21, X0
	0x03513B0C TBZ X3, 0x0, 0x3513B24
	0x03513B10 CBZ X20, 0x3513B94
	0x03513B14 MOVZ W1, 0x49
	0x03513B18 MOV X0, X20
	0x03513B1C MOV X2, X31
	0x03513B20 BL 0x351EFE8
	0x03513B24 CBZ X19, 0x3513B94
	0x03513B28 LDR W2, [X19 + 0x18]
	0x03513B2C MOV X0, X21
	0x03513B30 MOV X1, X20
	0x03513B34 BL 0x3515C70
	0x03513B38 LDR X8, [X19 + 0x18]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W19, W2
	005 Move X20, X1
	006 Move TEMP, X3
	007 And TEMP, TEMP, 1
	008 Compare TEMP, 1
	009 JumpIfNotEqual {17}
	010 Compare X20, 0
	011 JumpIfEqual {19}
	012 And W31, W19, 255
	013 Move W1, 3
	014 Move X0, X20
	015 Move X2, X31
	016 Call StreamBuffer.WriteByte, X0, X1
	017 Compare X20, 0
	018 JumpIfNotEqual {21}
	019 Call 0x1C17F20
	020 Move W19, 34
	021 Move X0, X20
	022 Move W1, W19
	023 Move X20, [X31+16]
	024 Move X19, [X31+24]
	025 Move X2, X31
	026 Move X30, [X31+32]
	027 Call StreamBuffer.WriteByte, X0, X1
	028 Return 

Method: System.Void WriteBoolean(ExitGames.Client.Photon.StreamBuffer stream, System.Boolean value, System.Boolean writeType)

Disassembly:
	0x03513AA8 BL 0x3EB1AE0
	0x03513AAC LDR X1, [X23]
	0x03513AB0 ADD X0, X31, 0x20
	0x03513AB4 BL 0x2C0B08C
	0x03513AB8 CBZ X20, 0x3513A64
	0x03513ABC MOV X0, X20
	0x03513AC0 BL 0x1C16F18
	0x03513AC4 MOV X20, X31
	0x03513AC8 B 0x3513AD0
	0x03513ACC MOV X19, X0
	0x03513AD0 LDR X1, [X23]
	0x03513AD4 ADD X0, X31, 0x20
	0x03513AD8 BL 0x2C0B08C
	0x03513ADC CBNZ X20, 0x3513AE8
	0x03513AE0 MOV X0, X19

ISIL:
	001 Move [X31-16], X30
	002 Move TEMP, X3
	003 And TEMP, TEMP, 1
	004 Compare TEMP, 1
	005 JumpIfNotEqual {11}
	006 Compare X1, 0
	007 JumpIfEqual {20}
	008 And W31, W2, 1
	009 Move W8, 27
	010 NotImplemented "Instruction CINC not yet implemented."
	011 Compare X1, 0
	012 JumpIfEqual {20}
	013 And W8, W2, 1
	014 Move X0, X1
	015 Move W1, W8
	016 Move X2, X31
	017 Move X30, [X31+16]
	018 Call StreamBuffer.WriteByte, X0, X1
	019 Return 
	020 Call 0x1C17F20

Method: System.Void WriteUShort(ExitGames.Client.Photon.StreamBuffer stream, System.UInt16 value)

Disassembly:
	0x03515C00 B 0x3515BDC
	0x03515C04 BL 0x1C16F20
	0x03515C08 ADRP X0, 0xC1F000
	0x03515C0C LDR X0, [X0 + 0x3F8]
	0x03515C10 BL 0x1C16D08
	0x03515C14 LDR X8, [X23]
	0x03515C18 MOV X19, X0
	0x03515C1C MOV X0, X23
	0x03515C20 LDP X9, X1, [X8 + 0x168]

ISIL:
	001 Compare X1, 0
	002 JumpIfEqual {12}
	003 Move W8, W2
	004 ShiftRight W8, 8
	005 And W8, W8, 0x7FFF
	006 Move X0, X1
	007 Move W1, W2
	008 Move W2, W8
	009 Move X3, X31
	010 Call StreamBuffer.WriteBytes, X0, X1, X2
	011 Return 
	012 Move [X31-16], X30
	013 Call 0x1C17F20

Method: System.Void WriteInt16(ExitGames.Client.Photon.StreamBuffer stream, System.Int16 value, System.Boolean writeType)

Disassembly:
	0x0350E664 LDR X0, [X8]
	0x0350E668 ADRP X8, 0xC26000
	0x0350E66C LDR X8, [X8 + 0x98]
	0x0350E670 B 0x350E768
	0x0350E674 ADRP X8, 0xBE5000
	0x0350E678 LDR X8, [X8 + 0x6C0]
	0x0350E67C LDR X0, [X8]
	0x0350E680 ADRP X8, 0xC26000
	0x0350E684 LDR X8, [X8 + 0x80]
	0x0350E688 B 0x350E768
	0x0350E68C ADRP X8, 0xBE5000
	0x0350E690 LDR X8, [X8 + 0x6C0]
	0x0350E694 LDR X0, [X8]
	0x0350E698 ADRP X8, 0xC17000
	0x0350E69C LDR X8, [X8 + 0x110]
	0x0350E6A0 B 0x350E768
	0x0350E6A4 ADRP X8, 0xBE5000
	0x0350E6A8 LDR X8, [X8 + 0x6C0]
	0x0350E6AC LDR X0, [X8]
	0x0350E6B0 ADRP X8, 0xC17000
	0x0350E6B4 LDR X8, [X8 + 0x118]
	0x0350E6B8 B 0x350E768
	0x0350E6BC ADRP X8, 0xBE5000
	0x0350E6C0 LDR X8, [X8 + 0x6C0]
	0x0350E6C4 LDR X0, [X8]
	0x0350E6C8 ADRP X8, 0xC0E000
	0x0350E6CC LDR X8, [X8 + 0xA60]
	0x0350E6D0 B 0x350E768

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move W20, W2
	005 Move X19, X1
	006 Move TEMP, X3
	007 And TEMP, TEMP, 1
	008 Compare TEMP, 1
	009 JumpIfNotEqual {17}
	010 Compare X19, 0
	011 JumpIfEqual {38}
	012 And W31, W20, 0xFFFF
	013 Move W1, 4
	014 Move X0, X19
	015 Move X2, X31
	016 Call StreamBuffer.WriteByte, X0, X1
	017 Compare X19, 0
	018 JumpIfEqual {38}
	019 Move W2, W20
	020 ShiftRight W2, 8
	021 And W2, W2, 0x7FFF
	022 Move X0, X19
	023 Move W1, W20
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X3, X31
	027 Move X30, [X31+32]
	028 Call StreamBuffer.WriteBytes, X0, X1, X2
	029 Return 
	030 Move X0, X19
	031 Move X20, [X31+16]
	032 Move X19, [X31+24]
	033 Move W1, 29
	034 Move X2, X31
	035 Move X30, [X31+32]
	036 Call StreamBuffer.WriteByte, X0, X1
	037 Return 
	038 Call 0x1C17F20

Method: System.Void WriteDouble(ExitGames.Client.Photon.StreamBuffer stream, System.Double value, System.Boolean writeType)

Disassembly:
	0x03513EC8 CBZ X1, 0x3513FA0
	0x03513ECC MOV X20, X1
	0x03513ED0 MOV X19, X2
	0x03513ED4 MOV X21, X0
	0x03513ED8 MOVZ W1, 0x54
	0x03513EDC MOV X0, X20
	0x03513EE0 MOV X2, X31
	0x03513EE4 BL 0x351EFE8
	0x03513EE8 CBZ X19, 0x3513FA0
	0x03513EEC MOV X0, X19
	0x03513EF0 MOV X1, X31
	0x03513EF4 BL 0x33BE520
	0x03513EF8 CBZ X0, 0x3513FA0
	0x03513EFC LDR X8, [X0]
	0x03513F00 LDR X9, [X8 + 0x428]
	0x03513F04 LDR X1, [X8 + 0x430]
	0x03513F08 BLR X9
	0x03513F0C MOV X2, X0
	0x03513F10 ADD X3, X31, 0xC
	0x03513F14 ADD X4, X31, 0x8
	0x03513F18 MOV X0, X21
	0x03513F1C MOV X1, X20
	0x03513F20 BL 0x3515518
	0x03513F24 LDR W2, [X19 + 0x18]
	0x03513F28 MOV X0, X21
	0x03513F2C MOV X1, X20
	0x03513F30 BL 0x3515C70
	0x03513F34 LDR X8, [X19 + 0x18]
	0x03513F38 CMP W8, 0x1
	0x03513F3C B.LT 0x3513F84
	0x03513F40 LDRB W22, [X31 + 0xC]
	0x03513F44 LDRB W23, [X31 + 0x8]
	0x03513F48 MOV X24, X31
	0x03513F4C AND X8, X8, 0x0
	0x03513F50 ADD X25, X19, 0x20
	0x03513F54 CMP X24, W8, UXTW
	0x03513F58 B.CS 0x3513F9C
	0x03513F5C LDR X2, [X25, X24, LSL #3]
	0x03513F60 MOV X0, X21
	0x03513F64 MOV X1, X20
	0x03513F68 MOV W3, W22
	0x03513F6C MOV W4, W23
	0x03513F70 BL 0x3515130
	0x03513F74 LDR W8, [X19 + 0x18]
	0x03513F78 ADD X24, X24, 0x1
	0x03513F7C CMP X24, W8, SXTW
	0x03513F80 B.LT 0x3513F54
	0x03513F84 LDP X20, X19, [X31 + 0x40]
	0x03513F88 LDP X22, X21, [X31 + 0x30]
	0x03513F8C LDP X24, X23, [X31 + 0x20]
	0x03513F90 LDP X30, X25, [X31 + 0x10]
	0x03513F94 ADD X31, X31, 0x50
	0x03513F98 RET
	0x03513F9C BL 0x1C16F28
	0x03513FA0 BL 0x1C16F20
	0x03513FA4 SUB X31, X31, 0x30
	0x03513FA8 STP X30, X21, [X31 + 0x10]
	0x03513FAC STP X20, X19, [X31 + 0x20]
	0x03513FB0 MOV X19, X2
	0x03513FB4 MOV X20, X1
	0x03513FB8 MOV X21, X0
	0x03513FBC STR W31, [X31 + 0xC]
	0x03513FC0 TBZ X3, 0x0, 0x3513FD8
	0x03513FC4 CBZ X20, 0x3514038
	0x03513FC8 MOVZ W1, 0x46
	0x03513FCC MOV X0, X20
	0x03513FD0 MOV X2, X31
	0x03513FD4 BL 0x351EFE8
	0x03513FD8 CBZ X19, 0x3514038
	0x03513FDC LDR W2, [X19 + 0x18]
	0x03513FE0 MOV X0, X21
	0x03513FE4 MOV X1, X20
	0x03513FE8 BL 0x3515C70
	0x03513FEC CBZ X20, 0x3514038
	0x03513FF0 LDR W8, [X19 + 0x18]
	0x03513FF4 ADD X2, X31, 0xC
	0x03513FF8 MOV X0, X20
	0x03513FFC MOV X3, X31
	0x03514000 UBFM W21, W8, 0x1D, 0x1C

ISIL:
	001 Move [X31-48], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move V8, V0
	007 Move X19, X1
	008 Move X20, X0
	009 Move [X31+12], W31
	010 Move [X31+8], W31
	011 Move TEMP, X2
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfNotEqual {21}
	015 Compare X19, 0
	016 JumpIfEqual {63}
	017 Move W1, 6
	018 Move X0, X19
	019 Move X2, X31
	020 Call StreamBuffer.WriteByte, X0, X1
	021 Compare X19, 0
	022 JumpIfEqual {63}
	023 Add X2, X31, 12
	024 Move W1, 8
	025 Move X0, X19
	026 Move X3, X31
	027 Call StreamBuffer.GetBufferAndAdvance, X0, X1, X2
	028 Move X19, [X20+32]
	029 Move X21, X0
	030 Move [X31+8], W31
	031 Add X1, X31, 8
	032 Move X0, X19
	033 Move X2, X31
	034 Call Monitor.Enter, X0, X1
	035 Move X0, [X20+32]
	036 Compare X0, 0
	037 JumpIfEqual {66}
	038 Move W8, [X0+24]
	039 Compare W8, 0
	040 JumpIfEqual {67}
	041 Move [X0+32], D8
	042 Move W3, [X31+12]
	043 Move W4, 8
	044 Move W1, W31
	045 Move X2, X21
	046 Move X5, X31
	047 Call Buffer.BlockCopy, X0, X1, X2, X3, X4
	048 Move X20, X31
	049 Move W8, [X31+8]
	050 Compare W8, 0
	051 JumpIfEqual {55}
	052 Move X0, X19
	053 Move X1, X31
	054 Call Monitor.Exit, X0
	055 Compare X20, 0
	056 JumpIfNotEqual {64}
	057 Move X20, [X31+32]
	058 Move X19, [X31+40]
	059 Move X30, [X31+16]
	060 Move X21, [X31+24]
	061 Move V8, [X31+48]
	062 Return 
	063 Call 0x1C17F20
	064 Move X0, X20
	065 Call 0x1C17F18
	066 Call 0x1C17F20
	067 Call 0x1C17F28
	068 Move X21, X0
	069 NotImplemented "Instruction CMP not yet implemented."
	070 Move X0, X21
	071 Call 0x3EB2AD0
	072 Move X20, [X0]
	073 Call 0x3EB2AE0
	074 Move X20, X31
	075 Move X21, X0
	076 Move W8, [X31+8]
	077 Compare W8, 0
	078 JumpIfEqual {82}
	079 Move X0, X19
	080 Move X1, X31
	081 Call Monitor.Exit, X0
	082 Compare X20, 0
	083 JumpIfNotEqual {86}
	084 Move X0, X21
	085 Call 0x1D2D690
	086 Move X0, X20
	087 Call 0x1C17F18
	088 Call 0x1991590

Method: System.Void WriteSingle(ExitGames.Client.Photon.StreamBuffer stream, System.Single value, System.Boolean writeType)

Disassembly:
	0x03513D8C ADD X0, X8, 0x138
	0x03513D90 LDP X8, X1, [X0]
	0x03513D94 ADRP X24, 0xBE7000
	0x03513D98 LDR X24, [X24 + 0x2F8]
	0x03513D9C MOV X0, X19
	0x03513DA0 BLR X8
	0x03513DA4 MOV W2, W0
	0x03513DA8 MOV X0, X21
	0x03513DAC MOV X1, X20
	0x03513DB0 BL 0x3515C70
	0x03513DB4 MOV W22, W31
	0x03513DB8 LDR X8, [X19]
	0x03513DBC LDR X1, [X23]
	0x03513DC0 LDRH W9, [X8 + 0x12E]
	0x03513DC4 CBZ X9, 0x3513DE8
	0x03513DC8 LDR X10, [X8 + 0xB0]
	0x03513DCC ADD X10, X10, 0x8
	0x03513DD0 LDUR X11, [X10 - 0x8]
	0x03513DD4 CMP X11, X1
	0x03513DD8 B.EQ 0x3513DF8
	0x03513DDC SUBS X9, X9, 0x1
	0x03513DE0 ADD X10, X10, 0x10
	0x03513DE4 B.NE 0x3513DD0
	0x03513DE8 MOVZ W2, 0x1
	0x03513DEC MOV X0, X19
	0x03513DF0 BL 0x1C5C788
	0x03513DF4 B 0x3513E08
	0x03513DF8 LDR W9, [X10]
	0x03513DFC ADD W9, W9, 0x1
	0x03513E00 ADD X8, X8, W9, 0x4, SXTW
	0x03513E04 ADD X0, X8, 0x138
	0x03513E08 LDP X8, X1, [X0]
	0x03513E0C MOV X0, X19
	0x03513E10 BLR X8
	0x03513E14 CMP W22, W0
	0x03513E18 B.GE 0x3513E94
	0x03513E1C LDR X8, [X19]
	0x03513E20 LDR X1, [X24]
	0x03513E24 LDRH W9, [X8 + 0x12E]
	0x03513E28 CBZ X9, 0x3513E4C
	0x03513E2C LDR X10, [X8 + 0xB0]
	0x03513E30 ADD X10, X10, 0x8
	0x03513E34 LDUR X11, [X10 - 0x8]
	0x03513E38 CMP X11, X1
	0x03513E3C B.EQ 0x3513E5C
	0x03513E40 SUBS X9, X9, 0x1
	0x03513E44 ADD X10, X10, 0x10
	0x03513E48 B.NE 0x3513E34
	0x03513E4C MOV X0, X19
	0x03513E50 MOV W2, W31
	0x03513E54 BL 0x1C5C788
	0x03513E58 B 0x3513E68
	0x03513E5C LDRSW X9, [X10]
	0x03513E60 ADD X8, X8, X9, 0x4, LSL
	0x03513E64 ADD X0, X8, 0x138
	0x03513E68 LDP X8, X2, [X0]
	0x03513E6C MOV X0, X19
	0x03513E70 MOV W1, W22
	0x03513E74 BLR X8
	0x03513E78 MOV X2, X0
	0x03513E7C MOVZ W3, 0x1
	0x03513E80 MOV X0, X21
	0x03513E84 MOV X1, X20
	0x03513E88 BL 0x350D5EC
	0x03513E8C ADD W22, W22, 0x1
	0x03513E90 B 0x3513DB8
	0x03513E94 LDP X20, X19, [X31 + 0x30]
	0x03513E98 LDP X22, X21, [X31 + 0x20]
	0x03513E9C LDP X24, X23, [X31 + 0x10]
	0x03513EA0 LDR X30, [X31], #0x40
	0x03513EA4 RET
	0x03513EA8 BL 0x1C16F20
	0x03513EAC SUB X31, X31, 0x50
	0x03513EB0 STP X30, X25, [X31 + 0x10]
	0x03513EB4 STP X24, X23, [X31 + 0x20]
	0x03513EB8 STP X22, X21, [X31 + 0x30]
	0x03513EBC STP X20, X19, [X31 + 0x40]
	0x03513EC0 STRB W31, [X31 + 0xC]
	0x03513EC4 STRB W31, [X31 + 0x8]

ISIL:
	001 Move [X31-48], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move V8, V0
	007 Move X19, X1
	008 Move X20, X0
	009 Move [X31+12], W31
	010 Move [X31+8], W31
	011 Move TEMP, X2
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfNotEqual {21}
	015 Compare X19, 0
	016 JumpIfEqual {63}
	017 Move W1, 5
	018 Move X0, X19
	019 Move X2, X31
	020 Call StreamBuffer.WriteByte, X0, X1
	021 Compare X19, 0
	022 JumpIfEqual {63}
	023 Add X2, X31, 12
	024 Move W1, 4
	025 Move X0, X19
	026 Move X3, X31
	027 Call StreamBuffer.GetBufferAndAdvance, X0, X1, X2
	028 Move X19, [X20+40]
	029 Move X21, X0
	030 Move [X31+8], W31
	031 Add X1, X31, 8
	032 Move X0, X19
	033 Move X2, X31
	034 Call Monitor.Enter, X0, X1
	035 Move X0, [X20+40]
	036 Compare X0, 0
	037 JumpIfEqual {66}
	038 Move W8, [X0+24]
	039 Compare W8, 0
	040 JumpIfEqual {67}
	041 Move [X0+32], S8
	042 Move W3, [X31+12]
	043 Move W4, 4
	044 Move W1, W31
	045 Move X2, X21
	046 Move X5, X31
	047 Call Buffer.BlockCopy, X0, X1, X2, X3, X4
	048 Move X20, X31
	049 Move W8, [X31+8]
	050 Compare W8, 0
	051 JumpIfEqual {55}
	052 Move X0, X19
	053 Move X1, X31
	054 Call Monitor.Exit, X0
	055 Compare X20, 0
	056 JumpIfNotEqual {64}
	057 Move X20, [X31+32]
	058 Move X19, [X31+40]
	059 Move X30, [X31+16]
	060 Move X21, [X31+24]
	061 Move V8, [X31+48]
	062 Return 
	063 Call 0x1C17F20
	064 Move X0, X20
	065 Call 0x1C17F18
	066 Call 0x1C17F20
	067 Call 0x1C17F28
	068 Move X21, X0
	069 NotImplemented "Instruction CMP not yet implemented."
	070 Move X0, X21
	071 Call 0x3EB2AD0
	072 Move X20, [X0]
	073 Call 0x3EB2AE0
	074 Move X20, X31
	075 Move X21, X0
	076 Move W8, [X31+8]
	077 Compare W8, 0
	078 JumpIfEqual {82}
	079 Move X0, X19
	080 Move X1, X31
	081 Call Monitor.Exit, X0
	082 Compare X20, 0
	083 JumpIfNotEqual {86}
	084 Move X0, X21
	085 Call 0x1D2D690
	086 Move X0, X20
	087 Call 0x1C17F18
	088 Call 0x1991590

Method: System.Void WriteString(ExitGames.Client.Photon.StreamBuffer stream, System.String value, System.Boolean writeType)

Disassembly:
	0x0350E6DC LDR X0, [X8]
	0x0350E6E0 ADRP X8, 0xC0E000
	0x0350E6E4 LDR X8, [X8 + 0xA68]
	0x0350E6E8 B 0x350E768
	0x0350E6EC ADRP X8, 0xBE5000
	0x0350E6F0 LDR X8, [X8 + 0x6C0]
	0x0350E6F4 LDR X0, [X8]
	0x0350E6F8 ADRP X8, 0xC17000
	0x0350E6FC LDR X8, [X8 + 0x148]
	0x0350E700 B 0x350E768
	0x0350E704 ADRP X8, 0xBE5000
	0x0350E708 LDR X8, [X8 + 0x6C0]
	0x0350E70C LDR X0, [X8]
	0x0350E710 ADRP X8, 0xC17000
	0x0350E714 LDR X8, [X8 + 0x170]
	0x0350E718 B 0x350E768
	0x0350E71C ADRP X8, 0xBE5000
	0x0350E720 LDR X8, [X8 + 0x6C0]
	0x0350E724 LDR X0, [X8]
	0x0350E728 ADRP X8, 0xC17000
	0x0350E72C LDR X8, [X8 + 0x150]
	0x0350E730 B 0x350E768
	0x0350E734 ADRP X8, 0xBE5000
	0x0350E738 LDR X8, [X8 + 0x6C0]
	0x0350E73C LDR X0, [X8]
	0x0350E740 ADRP X8, 0xC17000
	0x0350E744 LDR X8, [X8 + 0x158]
	0x0350E748 B 0x350E768
	0x0350E74C CMP W8, 0x55
	0x0350E750 B.NE 0x350E55C
	0x0350E754 ADRP X8, 0xBE5000
	0x0350E758 LDR X8, [X8 + 0x6C0]
	0x0350E75C LDR X0, [X8]
	0x0350E760 ADRP X8, 0xC26000
	0x0350E764 LDR X8, [X8 + 0x2C0]
	0x0350E768 LDR W9, [X0 + 0xE0]
	0x0350E76C LDR X19, [X8]
	0x0350E770 CBNZ W9, 0x350E778
	0x0350E774 BL 0x1C16DFC
	0x0350E778 MOV X0, X19
	0x0350E77C LDP X20, X19, [X31 + 0x10]
	0x0350E780 MOV X1, X31
	0x0350E784 LDR X30, [X31], #0x20
	0x0350E788 B 0x338C698
	0x0350E78C STR X30, [X31 - 0x30]!
	0x0350E790 STP X22, X21, [X31 + 0x10]
	0x0350E794 STP X20, X19, [X31 + 0x20]
	0x0350E798 ADRP X20, 0xED1000
	0x0350E79C ADRP X21, 0xBE5000
	0x0350E7A0 LDRB W8, [X20 + 0xADC]
	0x0350E7A4 LDR X21, [X21 + 0x6C0]
	0x0350E7A8 MOV X19, X1
	0x0350E7AC TBNZ X8, 0x0, 0x350E83C
	0x0350E7B0 ADRP X0, 0xC0E000
	0x0350E7B4 LDR X0, [X0 + 0x388]
	0x0350E7B8 BL 0x1C16CF4
	0x0350E7BC ADRP X0, 0xC26000
	0x0350E7C0 LDR X0, [X0 + 0x80]
	0x0350E7C4 BL 0x1C16CF4
	0x0350E7C8 ADRP X0, 0xC26000
	0x0350E7CC LDR X0, [X0 + 0x88]
	0x0350E7D0 BL 0x1C16CF4
	0x0350E7D4 ADRP X0, 0xC16000
	0x0350E7D8 LDR X0, [X0 + 0xEA0]
	0x0350E7DC BL 0x1C16CF4
	0x0350E7E0 ADRP X0, 0xC26000
	0x0350E7E4 LDR X0, [X0 + 0x90]
	0x0350E7E8 BL 0x1C16CF4
	0x0350E7EC ADRP X0, 0xC26000
	0x0350E7F0 LDR X0, [X0 + 0x98]
	0x0350E7F4 BL 0x1C16CF4
	0x0350E7F8 ADRP X0, 0xBEF000
	0x0350E7FC LDR X0, [X0 + 0x968]
	0x0350E800 BL 0x1C16CF4
	0x0350E804 ADRP X0, 0xC0D000
	0x0350E808 LDR X0, [X0 + 0xB60]
	0x0350E80C BL 0x1C16CF4
	0x0350E810 ADRP X0, 0xC26000
	0x0350E814 LDR X0, [X0 + 0x2C8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, X2
	007 Move X20, X1
	008 Move X21, X0
	009 Move [X31+8], W31
	010 Move TEMP, X3
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfNotEqual {20}
	014 Compare X20, 0
	015 JumpIfEqual {66}
	016 Move W1, 7
	017 Move X0, X20
	018 Move X2, X31
	019 Call StreamBuffer.WriteByte, X0, X1
	020 Move X0, X31
	021 Call Encoding.get_UTF8
	022 Compare X0, 0
	023 JumpIfEqual {66}
	024 Move X8, [X0]
	025 Move X1, X19
	026 Move X9, [X8+504]
	027 Move X2, [X8+512]
	028 NotImplemented "Instruction BLR not yet implemented."
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move [X31+12], W0
	031 Move W22, W0
	032 Move X0, X21
	033 Move X1, X20
	034 Move W2, W22
	035 Call Protocol18.WriteCompressedUInt32, X0, X1, X2
	036 Move [X31+8], W31
	037 Compare X20, 0
	038 JumpIfEqual {66}
	039 Add X2, X31, 8
	040 Move X0, X20
	041 Move W1, W22
	042 Move X3, X31
	043 Call StreamBuffer.GetBufferAndAdvance, X0, X1, X2
	044 Move X20, X0
	045 Move X0, X31
	046 Call Encoding.get_UTF8
	047 Compare X19, 0
	048 JumpIfEqual {66}
	049 Compare X0, 0
	050 JumpIfEqual {66}
	051 Move X8, [X0]
	052 Move W5, [X31+8]
	053 Move W3, [X19+16]
	054 Move X1, X19
	055 Move X9, [X8+632]
	056 Move X6, [X8+640]
	057 Move W2, W31
	058 Move X4, X20
	059 NotImplemented "Instruction BLR not yet implemented."
	060 Move X20, [X31+32]
	061 Move X19, [X31+40]
	062 Move X22, [X31+16]
	063 Move X21, [X31+24]
	064 Move X30, [X31+48]
	065 Return 
	066 Call 0x1C17F20
	067 Add X0, X31, 12
	068 Move X1, X31
	069 Call Int32.ToString, X0
	070 Move X19, X0
	071 Move X0, 0xC27000
	072 Move X0, [X0+424]
	073 Call 0x1C17D08
	074 Move X1, X19
	075 Move X2, X31
	076 Call String.Concat, X0, X1
	077 Move X19, X0
	078 Move X0, 0xBE6000
	079 Move X0, [X0+2880]
	080 Call 0x1C17D08
	081 Call 0x1C17F10
	082 Move X1, X19
	083 Move X2, X31
	084 Move X20, X0
	085 Call NotSupportedException..ctor, X0, X1
	086 Move X0, 0xC27000
	087 Move X0, [X0+616]
	088 Call 0x1C17D08
	089 Move X1, X0
	090 Move X0, X20
	091 Call 0x1C17DEC

Method: System.Void WriteHashtable(ExitGames.Client.Photon.StreamBuffer stream, System.Object value, System.Boolean writeType)

Disassembly:
	0x035148B0 ADRP X0, 0xC20000
	0x035148B4 LDR X0, [X0 + 0xC0]
	0x035148B8 BL 0x1C16CF4
	0x035148BC ADRP X0, 0xC20000
	0x035148C0 LDR X0, [X0 + 0xC8]
	0x035148C4 BL 0x1C16CF4
	0x035148C8 ADRP X0, 0xC20000
	0x035148CC LDR X0, [X0 + 0xD0]
	0x035148D0 BL 0x1C16CF4
	0x035148D4 ADRP X0, 0xC20000
	0x035148D8 LDR X0, [X0 + 0xD8]
	0x035148DC BL 0x1C16CF4
	0x035148E0 ADRP X0, 0xC20000
	0x035148E4 LDR X0, [X0 + 0xE0]
	0x035148E8 BL 0x1C16CF4
	0x035148EC MOVZ W8, 0x1
	0x035148F0 STRB W8, [X22 + 0xAFC]
	0x035148F4 MOVI V0.2D, 0x0
	0x035148F8 STR X31, [X31 + 0x50]
	0x035148FC STP V0, V0, [X31 + 0x30]
	0x03514900 CBZ X21, 0x35149AC
	0x03514904 ADRP X22, 0xBE8000
	0x03514908 LDR X22, [X22 + 0x6E8]
	0x0351490C MOV X0, X21
	0x03514910 LDR X1, [X22]
	0x03514914 BL 0x29D3304
	0x03514918 CBZ W0, 0x35149AC
	0x0351491C LDR X1, [X22]
	0x03514920 MOV X0, X21
	0x03514924 BL 0x29D3304
	0x03514928 CBZ X19, 0x35149EC
	0x0351492C MOV W1, W0
	0x03514930 MOV X0, X19
	0x03514934 MOV X2, X31
	0x03514938 BL 0x351EFE8
	0x0351493C ADRP X8, 0xC20000
	0x03514940 LDR X8, [X8 + 0xB8]
	0x03514944 MOV X0, X21
	0x03514948 LDR X1, [X8]
	0x0351494C ADD X8, X31, 0x8
	0x03514950 BL 0x29D395C
	0x03514954 LDUR V0, [X31 + 0x8]
	0x03514958 LDUR V1, [X31 + 0x18]
	0x0351495C LDR X8, [X31 + 0x28]
	0x03514960 ADRP X22, 0xC20000
	0x03514964 STP V0, V1, [X31 + 0x30]
	0x03514968 STR X8, [X31 + 0x50]
	0x0351496C LDR X22, [X22 + 0xC8]
	0x03514970 LDR X1, [X22]
	0x03514974 ADD X0, X31, 0x30
	0x03514978 BL 0x2BEA018
	0x0351497C TBZ X0, 0x0, 0x35149C4
	0x03514980 LDR X21, [X31 + 0x48]
	0x03514984 LDRB W1, [X31 + 0x40]
	0x03514988 MOV X0, X19
	0x0351498C MOV X2, X31
	0x03514990 BL 0x351EFE8
	0x03514994 MOVZ W3, 0x1
	0x03514998 MOV X0, X20
	0x0351499C MOV X1, X19
	0x035149A0 MOV X2, X21
	0x035149A4 BL 0x350D5EC
	0x035149A8 B 0x3514970
	0x035149AC CBZ X19, 0x35149EC
	0x035149B0 MOV X0, X19
	0x035149B4 MOV W1, W31
	0x035149B8 MOV X2, X31
	0x035149BC BL 0x351EFE8
	0x035149C0 B 0x35149D8
	0x035149C4 ADRP X8, 0xC20000
	0x035149C8 LDR X8, [X8 + 0xC0]
	0x035149CC ADD X0, X31, 0x30
	0x035149D0 LDR X1, [X8]
	0x035149D4 BL 0x2BEA130
	0x035149D8 LDP X20, X19, [X31 + 0x80]
	0x035149DC LDP X22, X21, [X31 + 0x70]
	0x035149E0 LDR X30, [X31 + 0x60]
	0x035149E4 ADD X31, X31, 0x90
	0x035149E8 RET
	0x035149EC BL 0x1C16F20
	0x035149F0 B 0x35149F8
	0x035149F4 B 0x35149F8
	0x035149F8 MOV X19, X0
	0x035149FC CMP W1, 0x1
	0x03514A00 B.NE 0x3514A34
	0x03514A04 MOV X0, X19
	0x03514A08 BL 0x3EB1AD0
	0x03514A0C LDR X20, [X0]
	0x03514A10 BL 0x3EB1AE0
	0x03514A14 ADRP X8, 0xC20000
	0x03514A18 LDR X8, [X8 + 0xC0]
	0x03514A1C ADD X0, X31, 0x30
	0x03514A20 LDR X1, [X8]
	0x03514A24 BL 0x2BEA130
	0x03514A28 CBZ X20, 0x35149D8
	0x03514A2C MOV X0, X20
	0x03514A30 BL 0x1C16F18
	0x03514A34 MOV X20, X31
	0x03514A38 B 0x3514A40
	0x03514A3C MOV X19, X0
	0x03514A40 ADRP X8, 0xC20000
	0x03514A44 LDR X8, [X8 + 0xC0]
	0x03514A48 LDR X1, [X8]
	0x03514A4C ADD X0, X31, 0x30
	0x03514A50 BL 0x2BEA130
	0x03514A54 CBNZ X20, 0x3514A60
	0x03514A58 MOV X0, X19
	0x03514A5C BL 0x1D2C690
	0x03514A60 MOV X0, X20
	0x03514A64 BL 0x1C16F18
	0x03514A68 BL 0x1990590
	0x03514A6C STR X30, [X31 - 0x30]!
	0x03514A70 STP X22, X21, [X31 + 0x10]
	0x03514A74 STP X20, X19, [X31 + 0x20]
	0x03514A78 MOV X19, X3
	0x03514A7C MOV W22, W2
	0x03514A80 MOV X20, X1
	0x03514A84 MOV X21, X0
	0x03514A88 TBZ X4, 0x0, 0x3514AA4
	0x03514A8C CBZ X20, 0x3514AD4
	0x03514A90 MOVZ W1, 0x18
	0x03514A94 MOV X0, X20
	0x03514A98 MOV X2, X31
	0x03514A9C BL 0x351EFE8
	0x03514AA0 B 0x3514AA8
	0x03514AA4 CBZ X20, 0x3514AD4
	0x03514AA8 MOV X0, X20
	0x03514AAC MOV W1, W22
	0x03514AB0 MOV X2, X31
	0x03514AB4 BL 0x351EFE8
	0x03514AB8 MOV X0, X21
	0x03514ABC MOV X1, X20
	0x03514AC0 MOV X2, X19
	0x03514AC4 LDP X20, X19, [X31 + 0x20]
	0x03514AC8 LDP X22, X21, [X31 + 0x10]
	0x03514ACC LDR X30, [X31], #0x30
	0x03514AD0 B 0x3514870
	0x03514AD4 BL 0x1C16F20
	0x03514AD8 STR X30, [X31 - 0x30]!
	0x03514ADC STP X22, X21, [X31 + 0x10]
	0x03514AE0 STP X20, X19, [X31 + 0x20]
	0x03514AE4 MOV X19, X3
	0x03514AE8 MOV W22, W2
	0x03514AEC MOV X20, X1
	0x03514AF0 MOV X21, X0

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+64], X30
	003 Move [X31+80], X24
	004 Move [X31+88], X23
	005 Move [X31+96], X22
	006 Move [X31+104], X21
	007 Move [X31+112], X20
	008 Move [X31+120], X19
	009 Move X23, 0xECC000
	010 Move W8, [X23+2814]
	011 Move W22, W3
	012 Move X19, X2
	013 Move X20, X1
	014 Move X21, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {42}
	019 Move X0, 0xBE8000
	020 Move X0, [X0+3424]
	021 Call 0x1C17CF4
	022 Move X0, 0xBE9000
	023 Move X0, [X0+568]
	024 Call 0x1C17CF4
	025 Move X0, 0xBE9000
	026 Move X0, [X0+576]
	027 Call 0x1C17CF4
	028 Move X0, 0xBE9000
	029 Move X0, [X0+584]
	030 Call 0x1C17CF4
	031 Move X0, 0xBE9000
	032 Move X0, [X0+592]
	033 Call 0x1C17CF4
	034 Move X0, 0xBE8000
	035 Move X0, [X0+3488]
	036 Call 0x1C17CF4
	037 Move X0, 0xBE9000
	038 Move X0, [X0+600]
	039 Call 0x1C17CF4
	040 Move W8, 1
	041 Move [X23+2814], W8
	042 Move [X31+32], X31
	043 Move [X31+40], X31
	044 Move [X31+48], X31
	045 Compare X19, 0
	046 JumpIfEqual {58}
	047 Move X9, 0xBE8000
	048 Move X9, [X9+3488]
	049 Move X8, [X19]
	050 Move X1, [X9]
	051 Move W10, [X8+304]
	052 Move W9, [X1+304]
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Move X8, [X8+200]
	055 Add X8, X8, X9
	056 NotImplemented "Instruction LDUR not yet implemented."
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Move TEMP, X22
	059 And TEMP, TEMP, 1
	060 Compare TEMP, 1
	061 JumpIfNotEqual {68}
	062 Compare X20, 0
	063 JumpIfEqual {133}
	064 Move W1, 21
	065 Move X0, X20
	066 Move X2, X31
	067 Call StreamBuffer.WriteByte, X0, X1
	068 Compare X19, 0
	069 JumpIfEqual {133}
	070 Move X8, 0xBE8000
	071 Move X8, [X8+3424]
	072 Move X22, 0xBE9000
	073 Move X0, X19
	074 Move X1, [X8]
	075 Move X22, [X22+568]
	076 Call Dictionary`2<Object, Object>.get_Count, X0
	077 Move W2, W0
	078 Move X0, X21
	079 Move X1, X20
	080 Call Protocol18.WriteCompressedUInt32, X0, X1, X2
	081 Move X1, [X22]
	082 Move X0, X19
	083 Call Dictionary`2<Object, Object>.get_Keys, X0
	084 Compare X0, 0
	085 JumpIfEqual {133}
	086 Move X8, 0xBE9000
	087 Move X8, [X8+600]
	088 Move X24, 0xBE9000
	089 Move X23, 0xBE9000
	090 Move X1, [X8]
	091 Move X24, [X24+584]
	092 Move X23, [X23+576]
	093 Add X8, X31, 8
	094 Call KeyCollection<Object, Object>.GetEnumerator, X0
	095 NotImplemented "Instruction LDUR not yet implemented."
	096 Move X8, [X31+24]
	097 Move [X31+2], V0
	098 Move [X31+48], X8
	099 Move X1, [X24]
	100 Add X0, X31, 32
	101 Call Enumerator<Object, Object>.MoveNext, X0
	102 Move TEMP, X0
	103 And TEMP, TEMP, 1
	104 Compare TEMP, 1
	105 JumpIfNotEqual {121}
	106 Move X22, [X31+48]
	107 Move W3, 1
	108 Move X0, X21
	109 Move X1, X20
	110 Move X2, X22
	111 Call Protocol18.Write, X0, X1, X2, X3
	112 Move X0, X19
	113 Move X1, X22
	114 Move X2, X31
	115 Call Hashtable.get_Item, X0, X1
	116 Move X2, X0
	117 Move W3, 1
	118 Move X0, X21
	119 Move X1, X20
	120 Call Protocol18.Write, X0, X1, X2, X3
	121 Move X1, [X23]
	122 Add X0, X31, 32
	123 Call Enumerator<Object, Object>.Dispose, X0
	124 Move X20, [X31+112]
	125 Move X19, [X31+120]
	126 Move X22, [X31+96]
	127 Move X21, [X31+104]
	128 Move X24, [X31+80]
	129 Move X23, [X31+88]
	130 Move X30, [X31+64]
	131 Add X31, X31, 128
	132 Return 
	133 Call 0x1C17F20
	134 Move X0, X19
	135 Call 0x1C181E0
	136 Move X19, X0
	137 NotImplemented "Instruction CMP not yet implemented."
	138 Move X0, X19
	139 Call 0x3EB2AD0
	140 Move X20, [X0]
	141 Call 0x3EB2AE0
	142 Move X1, [X23]
	143 Add X0, X31, 32
	144 Call Enumerator<Object, Object>.Dispose, X0
	145 Compare X20, 0
	146 JumpIfEqual {124}
	147 Move X0, X20
	148 Call 0x1C17F18
	149 Move X20, X31
	150 Move X19, X0
	151 Move X1, [X23]
	152 Add X0, X31, 32
	153 Call Enumerator<Object, Object>.Dispose, X0
	154 Compare X20, 0
	155 JumpIfNotEqual {158}
	156 Move X0, X19
	157 Call 0x1D2D690
	158 Move X0, X20
	159 Call 0x1C17F18
	160 Call 0x1991590

Method: System.Void WriteByteArray(ExitGames.Client.Photon.StreamBuffer stream, System.Byte[] value, System.Boolean writeType)

Disassembly:
	0x03514C68 ADRP X8, 0xBE6000
	0x03514C6C LDR X8, [X8 + 0x2F8]
	0x03514C70 MOV X0, X22
	0x03514C74 LDR X23, [X8]
	0x03514C78 MOV X1, X23
	0x03514C7C BL 0x1C16E00
	0x03514C80 MOV X2, X0
	0x03514C84 CBNZ X0, 0x3514C98
	0x03514C88 MOV X0, X22
	0x03514C8C MOV X1, X23
	0x03514C90 BL 0x1C171E0
	0x03514C94 MOV X2, X31
	0x03514C98 AND W3, W20, 0x1
	0x03514C9C MOV X0, X21
	0x03514CA0 MOV X1, X19
	0x03514CA4 LDP X20, X19, [X31 + 0x20]
	0x03514CA8 LDP X22, X21, [X31 + 0x10]
	0x03514CAC LDP X30, X23, [X31], #0x30
	0x03514CB0 B 0x3513CD0
	0x03514CB4 STR X30, [X31 - 0x40]!
	0x03514CB8 STP X24, X23, [X31 + 0x10]
	0x03514CBC STP X22, X21, [X31 + 0x20]
	0x03514CC0 STP X20, X19, [X31 + 0x30]
	0x03514CC4 ADRP X21, 0xECB000
	0x03514CC8 LDRB W8, [X21 + 0xB05]
	0x03514CCC MOV X22, X3

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, X2
	006 Move X20, X1
	007 Move X21, X0
	008 Move TEMP, X3
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfNotEqual {18}
	012 Compare X20, 0
	013 JumpIfEqual {37}
	014 Move W1, 67
	015 Move X0, X20
	016 Move X2, X31
	017 Call StreamBuffer.WriteByte, X0, X1
	018 Compare X19, 0
	019 JumpIfEqual {37}
	020 Move W2, [X19+24]
	021 Move X0, X21
	022 Move X1, X20
	023 Call Protocol18.WriteCompressedUInt32, X0, X1, X2
	024 Compare X20, 0
	025 JumpIfEqual {37}
	026 Move W3, [X19+24]
	027 Move X0, X20
	028 Move X1, X19
	029 Move X20, [X31+16]
	030 Move X19, [X31+24]
	031 Move W2, W31
	032 Move X4, X31
	033 Move X30, [X31+32]
	034 Move X21, [X31+40]
	035 Call StreamBuffer.Write, X0, X1, X2, X3
	036 Return 
	037 Call 0x1C17F20

Method: System.Void WriteArraySegmentByte(ExitGames.Client.Photon.StreamBuffer stream, System.ArraySegment`1<System.Byte> seg, System.Boolean writeType)

Disassembly:
	0x035139A0 ADRP X22, 0xBE9000
	0x035139A4 MOV X0, X19
	0x035139A8 LDR X1, [X8]
	0x035139AC LDR X22, [X22 + 0x238]
	0x035139B0 BL 0x2AA4E88
	0x035139B4 MOV W2, W0
	0x035139B8 MOV X0, X21
	0x035139BC MOV X1, X20
	0x035139C0 BL 0x3515C70
	0x035139C4 LDR X1, [X22]
	0x035139C8 MOV X0, X19
	0x035139CC BL 0x2AA4E98
	0x035139D0 CBZ X0, 0x3513A7C
	0x035139D4 ADRP X8, 0xBE9000
	0x035139D8 LDR X8, [X8 + 0x258]
	0x035139DC ADRP X24, 0xBE9000
	0x035139E0 ADRP X23, 0xBE9000
	0x035139E4 LDR X1, [X8]
	0x035139E8 LDR X24, [X24 + 0x248]
	0x035139EC LDR X23, [X23 + 0x240]
	0x035139F0 ADD X8, X31, 0x8
	0x035139F4 BL 0x2EC7020
	0x035139F8 LDUR V0, [X31 + 0x8]
	0x035139FC LDR X8, [X31 + 0x18]
	0x03513A00 STR V0, [X31 + 0x2]
	0x03513A04 STR X8, [X31 + 0x30]
	0x03513A08 LDR X1, [X24]
	0x03513A0C ADD X0, X31, 0x20
	0x03513A10 BL 0x2C0B090
	0x03513A14 TBZ X0, 0x0, 0x3513A58
	0x03513A18 LDR X22, [X31 + 0x30]
	0x03513A1C MOVZ W3, 0x1
	0x03513A20 MOV X0, X21
	0x03513A24 MOV X1, X20
	0x03513A28 MOV X2, X22
	0x03513A2C BL 0x350D5EC
	0x03513A30 MOV X0, X19
	0x03513A34 MOV X1, X22
	0x03513A38 MOV X2, X31
	0x03513A3C BL 0x34ED878
	0x03513A40 MOV X2, X0
	0x03513A44 MOVZ W3, 0x1
	0x03513A48 MOV X0, X21
	0x03513A4C MOV X1, X20
	0x03513A50 BL 0x350D5EC
	0x03513A54 B 0x3513A08
	0x03513A58 LDR X1, [X23]
	0x03513A5C ADD X0, X31, 0x20
	0x03513A60 BL 0x2C0B08C
	0x03513A64 LDP X20, X19, [X31 + 0x70]
	0x03513A68 LDP X22, X21, [X31 + 0x60]
	0x03513A6C LDP X24, X23, [X31 + 0x50]
	0x03513A70 LDR X30, [X31 + 0x40]
	0x03513A74 ADD X31, X31, 0x80
	0x03513A78 RET
	0x03513A7C BL 0x1C16F20
	0x03513A80 MOV X0, X19
	0x03513A84 BL 0x1C171E0
	0x03513A88 B 0x3513A90
	0x03513A8C B 0x3513A90
	0x03513A90 MOV X19, X0
	0x03513A94 CMP W1, 0x1
	0x03513A98 B.NE 0x3513AC4
	0x03513A9C MOV X0, X19
	0x03513AA0 BL 0x3EB1AD0
	0x03513AA4 LDR X20, [X0]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0xECD000
	009 Move W8, [X24+2815]
	010 Move W23, W4
	011 Move X19, X3
	012 Move X20, X2
	013 Move X21, X1
	014 Move X22, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {33}
	019 Move X0, 0xC14000
	020 Move X0, [X0+3312]
	021 Call 0x1C17CF4
	022 Move X0, 0xC14000
	023 Move X0, [X0+3320]
	024 Call 0x1C17CF4
	025 Move X0, 0xC14000
	026 Move X0, [X0+3328]
	027 Call 0x1C17CF4
	028 Move X0, 0xC09000
	029 Move X0, [X0+1456]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X24+2815], W8
	033 Move TEMP, X23
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfNotEqual {43}
	037 Compare X21, 0
	038 JumpIfEqual {87}
	039 Move W1, 67
	040 Move X0, X21
	041 Move X2, X31
	042 Call StreamBuffer.WriteByte, X0, X1
	043 Move X24, 0xC09000
	044 Move X24, [X24+1456]
	045 Move X23, X19
	046 ShiftRight X23, 32
	047 And X23, X23, 0x7FFFFFFF
	048 Move X0, [X24]
	049 Move W8, [X0+224]
	050 Compare W8, 0
	051 JumpIfNotEqual {53}
	052 Call 0x1C17DFC
	053 Move X0, X22
	054 Move X1, X21
	055 Move W2, W23
	056 Call Protocol18.WriteCompressedUInt32, X0, X1, X2
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Move X0, [X24]
	059 Move W8, [X0+224]
	060 Compare W8, 0
	061 JumpIfNotEqual {63}
	062 Call 0x1C17DFC
	063 Compare X21, 0
	064 JumpIfEqual {87}
	065 Move X0, X21
	066 Move X1, X20
	067 Move W2, W19
	068 Move W3, W23
	069 Move X20, [X31+48]
	070 Move X19, [X31+56]
	071 Move X22, [X31+32]
	072 Move X21, [X31+40]
	073 Move X24, [X31+16]
	074 Move X23, [X31+24]
	075 Move X4, X31
	076 Move X30, [X31+64]
	077 Call StreamBuffer.Write, X0, X1, X2, X3
	078 Return 
	079 Move X20, [X31+48]
	080 Move X19, [X31+56]
	081 Move X22, [X31+32]
	082 Move X21, [X31+40]
	083 Move X24, [X31+16]
	084 Move X23, [X31+24]
	085 Move X30, [X31+64]
	086 Return 
	087 Call 0x1C17F20

Method: System.Void WriteByteArraySlice(ExitGames.Client.Photon.StreamBuffer stream, ExitGames.Client.Photon.ByteArraySlice buffer, System.Boolean writeType)

Disassembly:
	0x03513920 LDR X0, [X0 + 0xDA0]
	0x03513924 BL 0x1C16CF4
	0x03513928 ADRP X0, 0xBE9000
	0x0351392C LDR X0, [X0 + 0x258]
	0x03513930 BL 0x1C16CF4
	0x03513934 MOVZ W8, 0x1
	0x03513938 STRB W8, [X23 + 0xAFE]
	0x0351393C STP X31, X31, [X31 + 0x20]
	0x03513940 STR X31, [X31 + 0x30]
	0x03513944 CBZ X19, 0x351397C
	0x03513948 ADRP X9, 0xBE8000
	0x0351394C LDR X9, [X9 + 0xDA0]
	0x03513950 LDR X8, [X19]
	0x03513954 LDR X1, [X9]
	0x03513958 LDRB W10, [X8 + 0x130]
	0x0351395C LDRB W9, [X1 + 0x130]
	0x03513960 CMP W10, W9
	0x03513964 B.CC 0x3513A80
	0x03513968 LDR X8, [X8 + 0xC8]
	0x0351396C ADD X8, X8, X9, 0x3, LSL
	0x03513970 LDUR X8, [X8 - 0x8]
	0x03513974 CMP X8, X1
	0x03513978 B.NE 0x3513A80
	0x0351397C TBZ X22, 0x0, 0x3513994
	0x03513980 CBZ X20, 0x3513A7C
	0x03513984 MOVZ W1, 0x15
	0x03513988 MOV X0, X20
	0x0351398C MOV X2, X31
	0x03513990 BL 0x351EFE8
	0x03513994 CBZ X19, 0x3513A7C
	0x03513998 ADRP X8, 0xBE8000
	0x0351399C LDR X8, [X8 + 0xD60]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, X2
	007 Move X20, X1
	008 Move X21, X0
	009 Move TEMP, X3
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfNotEqual {19}
	013 Compare X20, 0
	014 JumpIfEqual {43}
	015 Move W1, 67
	016 Move X0, X20
	017 Move X2, X31
	018 Call StreamBuffer.WriteByte, X0, X1
	019 Compare X19, 0
	020 JumpIfEqual {43}
	021 Move W22, [X19+28]
	022 Move X0, X21
	023 Move X1, X20
	024 Move W2, W22
	025 Call Protocol18.WriteCompressedUInt32, X0, X1, X2
	026 Compare X20, 0
	027 JumpIfEqual {43}
	028 Move W2, [X19+24]
	029 Move X1, [X19+16]
	030 Move X0, X20
	031 Move W3, W22
	032 Move X4, X31
	033 Call StreamBuffer.Write, X0, X1, X2, X3
	034 Move X0, X19
	035 Move X20, [X31+32]
	036 Move X19, [X31+40]
	037 Move X22, [X31+16]
	038 Move X21, [X31+24]
	039 Move X1, X31
	040 Move X30, [X31+48]
	041 Call ByteArraySlice.Release, X0
	042 Return 
	043 Call 0x1C17F20

Method: System.Void WriteInt32ArrayCompressed(ExitGames.Client.Photon.StreamBuffer stream, System.Int32[] value, System.Boolean writeType)

Disassembly:
	0x03514AF4 TBZ X4, 0x0, 0x3514B10
	0x03514AF8 CBZ X20, 0x3514B40
	0x03514AFC MOVZ W1, 0x18
	0x03514B00 MOV X0, X20
	0x03514B04 MOV X2, X31
	0x03514B08 BL 0x351EFE8
	0x03514B0C B 0x3514B14
	0x03514B10 CBZ X20, 0x3514B40
	0x03514B14 MOV X0, X20
	0x03514B18 MOV W1, W22
	0x03514B1C MOV X2, X31
	0x03514B20 BL 0x351EFE8
	0x03514B24 MOV X0, X21
	0x03514B28 MOV X1, X20
	0x03514B2C MOV X2, X19
	0x03514B30 LDP X20, X19, [X31 + 0x20]
	0x03514B34 LDP X22, X21, [X31 + 0x10]
	0x03514B38 LDR X30, [X31], #0x30
	0x03514B3C B 0x35146A0
	0x03514B40 BL 0x1C16F20
	0x03514B44 STP X30, X21, [X31 - 0x20]!
	0x03514B48 STP X20, X19, [X31 + 0x10]
	0x03514B4C MOV X20, X2
	0x03514B50 MOV X19, X1
	0x03514B54 MOV X21, X0
	0x03514B58 TBZ X3, 0x0, 0x3514B70
	0x03514B5C CBZ X19, 0x3514BFC
	0x03514B60 MOVZ W1, 0x19
	0x03514B64 MOV X0, X19
	0x03514B68 MOV X2, X31
	0x03514B6C BL 0x351EFE8
	0x03514B70 CBZ X20, 0x3514BFC
	0x03514B74 CBZ X19, 0x3514BFC
	0x03514B78 LDRB W1, [X20 + 0x10]
	0x03514B7C MOV X0, X19
	0x03514B80 MOV X2, X31
	0x03514B84 BL 0x351EFE8
	0x03514B88 LDRH W1, [X20 + 0x12]
	0x03514B8C MOV X0, X19
	0x03514B90 MOV X3, X31
	0x03514B94 UBFM W2, W1, 0x8, 0x1F

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X19, X2
	008 Move X20, X1
	009 Move X21, X0
	010 Move TEMP, X3
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfNotEqual {20}
	014 Compare X20, 0
	015 JumpIfEqual {51}
	016 Move W1, 73
	017 Move X0, X20
	018 Move X2, X31
	019 Call StreamBuffer.WriteByte, X0, X1
	020 Compare X19, 0
	021 JumpIfEqual {51}
	022 Move W2, [X19+24]
	023 Move X0, X21
	024 Move X1, X20
	025 Call Protocol18.WriteCompressedUInt32, X0, X1, X2
	026 Move X8, [X19+24]
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Move X22, X31
	029 And X8, X8, 0
	030 Add X23, X19, 32
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Move W8, [X23]
	033 Move X0, X21
	034 Move X1, X20
	035 Move W9, W8
	036 ShiftRight W9, 31
	037 And W9, W9, 0x3FFFFFFF
	038 Xor W2, W9, W8
	039 Call Protocol18.WriteCompressedUInt32, X0, X1, X2
	040 Move W8, [X19+24]
	041 Add X22, X22, 1
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X20, [X31+32]
	044 Move X19, [X31+40]
	045 Move X22, [X31+16]
	046 Move X21, [X31+24]
	047 Move X30, [X31+48]
	048 Move X23, [X31+56]
	049 Return 
	050 Call 0x1C17F28
	051 Call 0x1C17F20

Method: System.Void WriteInt64ArrayCompressed(ExitGames.Client.Photon.StreamBuffer stream, System.Int64[] values, System.Boolean setType)

Disassembly:
	0x03514B98 BL 0x351F050
	0x03514B9C LDR X0, [X20 + 0x18]
	0x03514BA0 MOV X1, X31
	0x03514BA4 BL 0x32277A8
	0x03514BA8 TBZ X0, 0x0, 0x3514BC0
	0x03514BAC MOVZ W1, 0x8
	0x03514BB0 MOV X0, X19
	0x03514BB4 MOV X2, X31
	0x03514BB8 BL 0x351EFE8
	0x03514BBC B 0x3514BE4
	0x03514BC0 MOVZ W1, 0x7
	0x03514BC4 MOV X0, X19
	0x03514BC8 MOV X2, X31
	0x03514BCC BL 0x351EFE8
	0x03514BD0 LDR X2, [X20 + 0x18]
	0x03514BD4 MOV X0, X21
	0x03514BD8 MOV X1, X19
	0x03514BDC MOV W3, W31
	0x03514BE0 BL 0x350D6DC
	0x03514BE4 LDR X2, [X20 + 0x20]
	0x03514BE8 MOV X1, X19
	0x03514BEC LDP X20, X19, [X31 + 0x10]
	0x03514BF0 MOV X0, X21
	0x03514BF4 LDP X30, X21, [X31], #0x20
	0x03514BF8 B 0x35146A0
	0x03514BFC BL 0x1C16F20
	0x03514C00 CBZ X1, 0x3514C1C
	0x03514C04 UBFM W8, W2, 0x8, 0xF
	0x03514C08 MOV X0, X1
	0x03514C0C MOV W1, W2
	0x03514C10 MOV W2, W8
	0x03514C14 MOV X3, X31
	0x03514C18 B 0x351F050
	0x03514C1C STR X30, [X31 - 0x10]!
	0x03514C20 BL 0x1C16F20
	0x03514C24 B 0x3515C70
	0x03514C28 STP X30, X23, [X31 - 0x30]!
	0x03514C2C STP X22, X21, [X31 + 0x10]
	0x03514C30 STP X20, X19, [X31 + 0x20]
	0x03514C34 ADRP X23, 0xECB000
	0x03514C38 LDRB W8, [X23 + 0xB02]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X19, X2
	008 Move X20, X1
	009 Move X21, X0
	010 Move TEMP, X3
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfNotEqual {20}
	014 Compare X20, 0
	015 JumpIfEqual {51}
	016 Move W1, 74
	017 Move X0, X20
	018 Move X2, X31
	019 Call StreamBuffer.WriteByte, X0, X1
	020 Compare X19, 0
	021 JumpIfEqual {51}
	022 Move W2, [X19+24]
	023 Move X0, X21
	024 Move X1, X20
	025 Call Protocol18.WriteCompressedUInt32, X0, X1, X2
	026 Move X8, [X19+24]
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Move X22, X31
	029 And X8, X8, 0
	030 Add X23, X19, 32
	031 NotImplemented "Instruction CMP not yet implemented."
	032 Move X8, [X23]
	033 Move X0, X21
	034 Move X1, X20
	035 Move X9, X8
	036 ShiftRight X9, 63
	037 And X9, X9, 0x3FFFFFFF
	038 Xor X2, X9, X8
	039 Call Protocol18.WriteCompressedUInt64, X0, X1, X2
	040 Move W8, [X19+24]
	041 Add X22, X22, 1
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X20, [X31+32]
	044 Move X19, [X31+40]
	045 Move X22, [X31+16]
	046 Move X21, [X31+24]
	047 Move X30, [X31+48]
	048 Move X23, [X31+56]
	049 Return 
	050 Call 0x1C17F28
	051 Call 0x1C17F20

Method: System.Void WriteBoolArray(ExitGames.Client.Photon.StreamBuffer stream, System.Boolean[] value, System.Boolean writeType)

Disassembly:
	0x03515280 LDR X25, [X25 + 0xE00]
	0x03515284 MOV X0, X23
	0x03515288 BLR X8
	0x0351528C MOV X23, X0
	0x03515290 CBZ X0, 0x3515448
	0x03515294 ADRP X26, 0xBDE000
	0x03515298 ADRP X27, 0xBE6000
	0x0351529C LDR X26, [X26 + 0xE18]
	0x035152A0 LDR X27, [X27 + 0xF10]
	0x035152A4 LDR X8, [X23]
	0x035152A8 LDR X1, [X26]
	0x035152AC LDRH W9, [X8 + 0x12E]
	0x035152B0 CBZ X9, 0x35152D4
	0x035152B4 LDR X10, [X8 + 0xB0]
	0x035152B8 ADD X10, X10, 0x8
	0x035152BC LDUR X11, [X10 - 0x8]
	0x035152C0 CMP X11, X1
	0x035152C4 B.EQ 0x35152E4
	0x035152C8 SUBS X9, X9, 0x1
	0x035152CC ADD X10, X10, 0x10
	0x035152D0 B.NE 0x35152BC
	0x035152D4 MOV X0, X23
	0x035152D8 MOV W2, W31
	0x035152DC BL 0x1C5C788
	0x035152E0 B 0x35152F0
	0x035152E4 LDRSW X9, [X10]
	0x035152E8 ADD X8, X8, X9, 0x4, LSL
	0x035152EC ADD X0, X8, 0x138
	0x035152F0 LDP X8, X1, [X0]
	0x035152F4 MOV X0, X23
	0x035152F8 BLR X8
	0x035152FC TBZ X0, 0x0, 0x35153B0
	0x03515300 LDR X8, [X23]
	0x03515304 LDR X1, [X26]
	0x03515308 LDRH W9, [X8 + 0x12E]
	0x0351530C CBZ X9, 0x3515330
	0x03515310 LDR X10, [X8 + 0xB0]
	0x03515314 ADD X10, X10, 0x8
	0x03515318 LDUR X11, [X10 - 0x8]
	0x0351531C CMP X11, X1
	0x03515320 B.EQ 0x3515340
	0x03515324 SUBS X9, X9, 0x1
	0x03515328 ADD X10, X10, 0x10
	0x0351532C B.NE 0x3515318
	0x03515330 MOVZ W2, 0x1
	0x03515334 MOV X0, X23
	0x03515338 BL 0x1C5C788
	0x0351533C B 0x3515350
	0x03515340 LDR W9, [X10]
	0x03515344 ADD W9, W9, 0x1
	0x03515348 ADD X8, X8, W9, 0x4, SXTW
	0x0351534C ADD X0, X8, 0x138
	0x03515350 LDP X8, X1, [X0]
	0x03515354 MOV X0, X23
	0x03515358 BLR X8
	0x0351535C CBZ X0, 0x351543C
	0x03515360 LDR X8, [X0]
	0x03515364 LDR X1, [X27]
	0x03515368 LDR X8, [X8 + 0x40]
	0x0351536C LDR X9, [X1 + 0x40]
	0x03515370 CMP X8, X9
	0x03515374 B.NE 0x3515440
	0x03515378 BL 0x1C16E08
	0x0351537C LDP X2, X24, [X0]
	0x03515380 ANDS W31, W20, 0xFF
	0x03515384 CSET W3, EQ
	0x03515388 MOV X0, X22
	0x0351538C MOV X1, X21
	0x03515390 BL 0x350D5EC
	0x03515394 ANDS W31, W19, 0xFF
	0x03515398 CSET W3, EQ
	0x0351539C MOV X0, X22
	0x035153A0 MOV X1, X21
	0x035153A4 MOV X2, X24
	0x035153A8 BL 0x350D5EC
	0x035153AC B 0x35152A4
	0x035153B0 MOV X19, X31
	0x035153B4 LDR X1, [X25]
	0x035153B8 MOV X0, X23
	0x035153BC BL 0x1C16E00
	0x035153C0 CBZ X0, 0x3515420
	0x035153C4 LDR X8, [X0]
	0x035153C8 LDR X1, [X25]
	0x035153CC MOV X20, X0
	0x035153D0 LDRH W9, [X8 + 0x12E]
	0x035153D4 CBZ X9, 0x35153F8
	0x035153D8 LDR X10, [X8 + 0xB0]
	0x035153DC ADD X10, X10, 0x8
	0x035153E0 LDUR X11, [X10 - 0x8]
	0x035153E4 CMP X11, X1
	0x035153E8 B.EQ 0x3515408
	0x035153EC SUBS X9, X9, 0x1
	0x035153F0 ADD X10, X10, 0x10
	0x035153F4 B.NE 0x35153E0
	0x035153F8 MOV X0, X20
	0x035153FC MOV W2, W31
	0x03515400 BL 0x1C5C788
	0x03515404 B 0x3515414
	0x03515408 LDRSW X9, [X10]
	0x0351540C ADD X8, X8, X9, 0x4, LSL
	0x03515410 ADD X0, X8, 0x138
	0x03515414 LDP X8, X1, [X0]
	0x03515418 MOV X0, X20
	0x0351541C BLR X8
	0x03515420 CBNZ X19, 0x351544C
	0x03515424 LDP X20, X19, [X31 + 0x40]
	0x03515428 LDP X22, X21, [X31 + 0x30]
	0x0351542C LDP X24, X23, [X31 + 0x20]
	0x03515430 LDP X26, X25, [X31 + 0x10]
	0x03515434 LDP X30, X27, [X31], #0x50
	0x03515438 RET
	0x0351543C BL 0x1C16F20
	0x03515440 BL 0x1C171E0
	0x03515444 BL 0x1C16F20
	0x03515448 BL 0x1C16F20
	0x0351544C MOV X0, X19
	0x03515450 BL 0x1C16F18
	0x03515454 B 0x3515468
	0x03515458 B 0x3515468
	0x0351545C B 0x3515468
	0x03515460 B 0x3515468
	0x03515464 B 0x3515468
	0x03515468 MOV X20, X0
	0x0351546C CMP W1, 0x1
	0x03515470 B.NE 0x3515488
	0x03515474 MOV X0, X20
	0x03515478 BL 0x3EB1AD0
	0x0351547C LDR X19, [X0]
	0x03515480 BL 0x3EB1AE0
	0x03515484 B 0x35153B4
	0x03515488 MOV X19, X31
	0x0351548C B 0x3515494
	0x03515490 MOV X20, X0
	0x03515494 LDR X1, [X25]
	0x03515498 MOV X0, X23
	0x0351549C BL 0x1C16E00
	0x035154A0 MOV X21, X0
	0x035154A4 CBZ X0, 0x3515500
	0x035154A8 LDR X8, [X21]
	0x035154AC LDR X1, [X25]
	0x035154B0 LDRH W9, [X8 + 0x12E]
	0x035154B4 CBZ X9, 0x35154D8
	0x035154B8 LDR X10, [X8 + 0xB0]
	0x035154BC ADD X10, X10, 0x8
	0x035154C0 LDUR X11, [X10 - 0x8]
	0x035154C4 CMP X11, X1
	0x035154C8 B.EQ 0x35154E8

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0xECB000
	008 Move W8, [X23+2816]
	009 Move W22, W3
	010 Move X20, X2
	011 Move X19, X1
	012 Move X21, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0xBDF000
	018 Move X0, [X0+1560]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X23+2816], W8
	022 Move TEMP, X22
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfNotEqual {32}
	026 Compare X19, 0
	027 JumpIfEqual {150}
	028 Move W1, 66
	029 Move X0, X19
	030 Move X2, X31
	031 Call StreamBuffer.WriteByte, X0, X1
	032 Compare X20, 0
	033 JumpIfEqual {150}
	034 Move W2, [X20+24]
	035 Move X22, 0xBDF000
	036 Move X22, [X22+1560]
	037 Move X0, X21
	038 Move X1, X19
	039 Call Protocol18.WriteCompressedUInt32, X0, X1, X2
	040 Move W23, [X20+24]
	041 Move X0, [X22]
	042 NotImplemented "Instruction SBFM not yet implemented."
	043 Add W1, W21, 1
	044 Call 0x1C17D6C
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Move X1, X0
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Move X13, X31
	049 Move X8, X31
	050 Add X9, X20, 39
	051 NotImplemented "Instruction CSINC not yet implemented."
	052 Add X10, X1, 32
	053 Move W12, [X20+24]
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Move X11, X13
	056 Add X13, X13, 1
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Add X14, X9, X11
	059 NotImplemented "Instruction LDURB not yet implemented."
	060 NotImplemented "Instruction LDURB not yet implemented."
	061 Add X13, X13, 1
	062 Or W16, W15, 2
	063 NotImplemented "Instruction CMP not yet implemented."
	064 NotImplemented "Instruction CSEL not yet implemented."
	065 NotImplemented "Instruction CMP not yet implemented."
	066 Add X14, X9, X11
	067 NotImplemented "Instruction LDURB not yet implemented."
	068 Or W0, W15, 4
	069 Add X16, X13, 1
	070 NotImplemented "Instruction CMP not yet implemented."
	071 NotImplemented "Instruction CSEL not yet implemented."
	072 NotImplemented "Instruction CMP not yet implemented."
	073 NotImplemented "Instruction LDURB not yet implemented."
	074 Or W17, W13, 8
	075 Add X14, X16, 1
	076 NotImplemented "Instruction CMP not yet implemented."
	077 NotImplemented "Instruction CSEL not yet implemented."
	078 NotImplemented "Instruction CMP not yet implemented."
	079 Add X15, X9, X11
	080 NotImplemented "Instruction LDURB not yet implemented."
	081 Or W0, W13, 16
	082 Add X16, X14, 1
	083 NotImplemented "Instruction CMP not yet implemented."
	084 NotImplemented "Instruction CSEL not yet implemented."
	085 NotImplemented "Instruction CMP not yet implemented."
	086 NotImplemented "Instruction LDURB not yet implemented."
	087 Or W17, W14, 32
	088 Add X13, X16, 1
	089 NotImplemented "Instruction CMP not yet implemented."
	090 NotImplemented "Instruction CSEL not yet implemented."
	091 NotImplemented "Instruction CMP not yet implemented."
	092 Add X15, X9, X11
	093 NotImplemented "Instruction LDURB not yet implemented."
	094 Or W16, W14, 64
	095 Add X13, X13, 1
	096 NotImplemented "Instruction CMP not yet implemented."
	097 NotImplemented "Instruction CSEL not yet implemented."
	098 NotImplemented "Instruction CMP not yet implemented."
	099 Move W12, [X9]
	100 Or W15, W14, 0xFFFFFF80
	101 NotImplemented "Instruction CMP not yet implemented."
	102 NotImplemented "Instruction CSEL not yet implemented."
	103 Compare X1, 0
	104 JumpIfEqual {150}
	105 Move W14, [X1+24]
	106 NotImplemented "Instruction CMP not yet implemented."
	107 Move [X10], W12
	108 Add X8, X8, 1
	109 NotImplemented "Instruction CMP not yet implemented."
	110 Add X13, X13, 1
	111 Add X11, X11, 8
	112 Move W11, W31
	113 Move W3, W31
	114 Move W10, [X20+24]
	115 NotImplemented "Instruction CMP not yet implemented."
	116 Subtract W10, W10, W11
	117 Add X11, X20, W11
	118 Move X9, X31
	119 Move W8, W31
	120 Add X11, X11, 32
	121 Move W12, 1
	122 Move W13, [X11]
	123 NotImplemented "Instruction LSLV not yet implemented."
	124 Add X9, X9, 1
	125 NotImplemented "Instruction CMP not yet implemented."
	126 NotImplemented "Instruction CSEL not yet implemented."
	127 NotImplemented "Instruction CMP not yet implemented."
	128 Or W8, W13, W8
	129 Compare X1, 0
	130 JumpIfEqual {150}
	131 Move W9, [X1+24]
	132 NotImplemented "Instruction CMP not yet implemented."
	133 Add X9, X1, W3
	134 Add W3, W3, 1
	135 Move [X9+32], W8
	136 Compare X19, 0
	137 JumpIfEqual {150}
	138 Move X0, X19
	139 Move X20, [X31+32]
	140 Move X19, [X31+40]
	141 Move X22, [X31+16]
	142 Move X21, [X31+24]
	143 Move W2, W31
	144 Move X4, X31
	145 Move X30, [X31+48]
	146 Move X23, [X31+56]
	147 Call StreamBuffer.Write, X0, X1, X2, X3
	148 Return 
	149 Call 0x1C17F28
	150 Call 0x1C17F20

Method: System.Void WriteInt16Array(ExitGames.Client.Photon.StreamBuffer stream, System.Int16[] value, System.Boolean writeType)

Disassembly:
	0x035151DC B.EQ 0x35151FC
	0x035151E0 SUBS X9, X9, 0x1
	0x035151E4 ADD X10, X10, 0x10
	0x035151E8 B.NE 0x35151D4
	0x035151EC MOVZ W2, 0x1
	0x035151F0 MOV X0, X23
	0x035151F4 BL 0x1C5C788
	0x035151F8 B 0x351520C
	0x035151FC LDR W9, [X10]
	0x03515200 ADD W9, W9, 0x1
	0x03515204 ADD X8, X8, W9, 0x4, SXTW
	0x03515208 ADD X0, X8, 0x138
	0x0351520C LDP X8, X1, [X0]
	0x03515210 MOV X0, X23
	0x03515214 BLR X8
	0x03515218 MOV W2, W0
	0x0351521C MOV X0, X22
	0x03515220 MOV X1, X21
	0x03515224 BL 0x3515C70
	0x03515228 LDR X8, [X23]
	0x0351522C LDR X1, [X24]
	0x03515230 LDRH W9, [X8 + 0x12E]
	0x03515234 CBZ X9, 0x3515258
	0x03515238 LDR X10, [X8 + 0xB0]
	0x0351523C ADD X10, X10, 0x8
	0x03515240 LDUR X11, [X10 - 0x8]
	0x03515244 CMP X11, X1
	0x03515248 B.EQ 0x3515268
	0x0351524C SUBS X9, X9, 0x1
	0x03515250 ADD X10, X10, 0x10
	0x03515254 B.NE 0x3515240
	0x03515258 MOVZ W2, 0x6
	0x0351525C MOV X0, X23
	0x03515260 BL 0x1C5C788
	0x03515264 B 0x3515278
	0x03515268 LDR W9, [X10]
	0x0351526C ADD W9, W9, 0x6
	0x03515270 ADD X8, X8, W9, 0x4, SXTW
	0x03515274 ADD X0, X8, 0x138
	0x03515278 LDP X8, X1, [X0]
	0x0351527C ADRP X25, 0xBDE000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, X2
	007 Move X20, X1
	008 Move X21, X0
	009 Move TEMP, X3
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfNotEqual {19}
	013 Compare X20, 0
	014 JumpIfEqual {50}
	015 Move W1, 68
	016 Move X0, X20
	017 Move X2, X31
	018 Call StreamBuffer.WriteByte, X0, X1
	019 Compare X19, 0
	020 JumpIfEqual {50}
	021 Move W2, [X19+24]
	022 Move X0, X21
	023 Move X1, X20
	024 Call Protocol18.WriteCompressedUInt32, X0, X1, X2
	025 Move X8, [X19+24]
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move X21, X31
	028 And X8, X8, 0
	029 Add X22, X19, 32
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Compare X20, 0
	032 JumpIfEqual {50}
	033 NotImplemented "Instruction LDRH not yet implemented."
	034 Move X0, X20
	035 Move X3, X31
	036 Move W2, W1
	037 ShiftRight W2, 8
	038 And W2, W2, 0x7FFFFFFF
	039 Call StreamBuffer.WriteBytes, X0, X1, X2
	040 Move W8, [X19+24]
	041 Add X21, X21, 1
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X20, [X31+32]
	044 Move X19, [X31+40]
	045 Move X22, [X31+16]
	046 Move X21, [X31+24]
	047 Move X30, [X31+48]
	048 Return 
	049 Call 0x1C17F28
	050 Call 0x1C17F20

Method: System.Void WriteSingleArray(ExitGames.Client.Photon.StreamBuffer stream, System.Single[] values, System.Boolean setType)

Disassembly:
	0x0351503C ORR W11, W11, 0x80
	0x03515040 CMP X9, X10
	0x03515044 STRB W11, [X12 + 0x20]
	0x03515048 B.CS 0x3515070
	0x0351504C AND W11, W8, 0x7F
	0x03515050 UBFM W8, W8, 0x7, 0x1F
	0x03515054 STRB W11, [X12 + 0x21]
	0x03515058 CBNZ W8, 0x351502C
	0x0351505C ADD W0, W9, 0x1
	0x03515060 B 0x3515068
	0x03515064 MOVZ W0, 0x1
	0x03515068 LDR X30, [X31], #0x10
	0x0351506C RET
	0x03515070 BL 0x1C16F28
	0x03515074 BL 0x1C16F20
	0x03515078 STP X30, X21, [X31 - 0x20]!
	0x0351507C STP X20, X19, [X31 + 0x10]
	0x03515080 CBZ X2, 0x351512C
	0x03515084 LDR X8, [X2]
	0x03515088 MOV X19, X1
	0x0351508C MOV X20, X0
	0x03515090 MOV X0, X2
	0x03515094 LDR X9, [X8 + 0x428]
	0x03515098 LDR X1, [X8 + 0x430]
	0x0351509C BLR X9
	0x035150A0 CBZ X0, 0x351512C
	0x035150A4 MOV X21, X0
	0x035150A8 MOV X0, X21
	0x035150AC MOV X1, X31
	0x035150B0 BL 0x3396BF8
	0x035150B4 TBZ X0, 0x0, 0x35150EC
	0x035150B8 CBZ X19, 0x351512C
	0x035150BC MOVZ W1, 0x40
	0x035150C0 MOV X0, X19
	0x035150C4 MOV X2, X31
	0x035150C8 BL 0x351EFE8
	0x035150CC LDR X8, [X21]
	0x035150D0 MOV X0, X21

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, X2
	007 Move X20, X1
	008 Move X21, X0
	009 Move [X31+12], W31
	010 Move TEMP, X3
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfNotEqual {20}
	014 Compare X20, 0
	015 JumpIfEqual {50}
	016 Move W1, 69
	017 Move X0, X20
	018 Move X2, X31
	019 Call StreamBuffer.WriteByte, X0, X1
	020 Compare X19, 0
	021 JumpIfEqual {50}
	022 Move W2, [X19+24]
	023 Move X0, X21
	024 Move X1, X20
	025 Call Protocol18.WriteCompressedUInt32, X0, X1, X2
	026 Compare X20, 0
	027 JumpIfEqual {50}
	028 Move W8, [X19+24]
	029 Add X2, X31, 12
	030 Move X0, X20
	031 Move X3, X31
	032 Move W21, W8
	033 ShiftRight W21, 30
	034 And W21, W21, 0x1FFFFFFF
	035 Move W1, W21
	036 Call StreamBuffer.GetBufferAndAdvance, X0, X1, X2
	037 Move W3, [X31+12]
	038 Move X2, X0
	039 Move X0, X19
	040 Move W1, W31
	041 Move W4, W21
	042 Move X5, X31
	043 Call Buffer.BlockCopy, X0, X1, X2, X3, X4
	044 Move X20, [X31+32]
	045 Move X19, [X31+40]
	046 Move X30, [X31+16]
	047 Move X21, [X31+24]
	048 Add X31, X31, 48
	049 Return 
	050 Call 0x1C17F20

Method: System.Void WriteDoubleArray(ExitGames.Client.Photon.StreamBuffer stream, System.Double[] values, System.Boolean setType)

Disassembly:
	0x03514FA4 BL 0x33A8A9C
	0x03514FA8 LDR X20, [X20 + 0x30]
	0x03514FAC MOV X0, X19
	0x03514FB0 MOV X1, X31
	0x03514FB4 BL 0x3517FCC
	0x03514FB8 MOV X2, X0
	0x03514FBC MOV X0, X20
	0x03514FC0 MOV W1, W31
	0x03514FC4 MOV W3, W21
	0x03514FC8 MOV W4, W22
	0x03514FCC MOV X5, X31
	0x03514FD0 BL 0x33A8A9C
	0x03514FD4 LDR W8, [X31 + 0x8]
	0x03514FD8 MOV X0, X19
	0x03514FDC MOV X2, X31
	0x03514FE0 ADD W1, W8, W24
	0x03514FE4 BL 0x3517FDC
	0x03514FE8 LDP X20, X19, [X31 + 0x30]
	0x03514FEC LDP X22, X21, [X31 + 0x20]
	0x03514FF0 LDP X24, X23, [X31 + 0x10]
	0x03514FF4 LDR X30, [X31], #0x40
	0x03514FF8 RET
	0x03514FFC BL 0x1C16F20
	0x03515000 BL 0x1C16F28
	0x03515004 STR X30, [X31 - 0x10]!
	0x03515008 CBZ X1, 0x3515074
	0x0351500C LDR X10, [X1 + 0x18]
	0x03515010 CBZ W10, 0x3515070
	0x03515014 AND W11, W2, 0x7F
	0x03515018 UBFM W8, W2, 0x7, 0x1F
	0x0351501C STRB W11, [X1 + 0x20]
	0x03515020 CBZ W8, 0x3515064
	0x03515024 MOV X9, X31
	0x03515028 AND X10, X10, 0x0
	0x0351502C CMP X9, X10
	0x03515030 B.CS 0x3515070
	0x03515034 ADD X12, X1, X9
	0x03515038 ADD X9, X9, 0x1

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, X2
	007 Move X20, X1
	008 Move X21, X0
	009 Move [X31+12], W31
	010 Move TEMP, X3
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfNotEqual {20}
	014 Compare X20, 0
	015 JumpIfEqual {50}
	016 Move W1, 70
	017 Move X0, X20
	018 Move X2, X31
	019 Call StreamBuffer.WriteByte, X0, X1
	020 Compare X19, 0
	021 JumpIfEqual {50}
	022 Move W2, [X19+24]
	023 Move X0, X21
	024 Move X1, X20
	025 Call Protocol18.WriteCompressedUInt32, X0, X1, X2
	026 Compare X20, 0
	027 JumpIfEqual {50}
	028 Move W8, [X19+24]
	029 Add X2, X31, 12
	030 Move X0, X20
	031 Move X3, X31
	032 Move W21, W8
	033 ShiftRight W21, 29
	034 And W21, W21, 0xFFFFFFF
	035 Move W1, W21
	036 Call StreamBuffer.GetBufferAndAdvance, X0, X1, X2
	037 Move W3, [X31+12]
	038 Move X2, X0
	039 Move X0, X19
	040 Move W1, W31
	041 Move W4, W21
	042 Move X5, X31
	043 Call Buffer.BlockCopy, X0, X1, X2, X3, X4
	044 Move X20, [X31+32]
	045 Move X19, [X31+40]
	046 Move X30, [X31+16]
	047 Move X21, [X31+24]
	048 Add X31, X31, 48
	049 Return 
	050 Call 0x1C17F20

Method: System.Void WriteStringArray(ExitGames.Client.Photon.StreamBuffer stream, System.Object value0, System.Boolean writeType)

Disassembly:
	0x035154CC SUBS X9, X9, 0x1
	0x035154D0 ADD X10, X10, 0x10
	0x035154D4 B.NE 0x35154C0
	0x035154D8 MOV X0, X21
	0x035154DC MOV W2, W31
	0x035154E0 BL 0x1C5C788
	0x035154E4 B 0x35154F4
	0x035154E8 LDRSW X9, [X10]
	0x035154EC ADD X8, X8, X9, 0x4, LSL
	0x035154F0 ADD X0, X8, 0x138
	0x035154F4 LDP X8, X1, [X0]
	0x035154F8 MOV X0, X21
	0x035154FC BLR X8
	0x03515500 CBNZ X19, 0x351550C
	0x03515504 MOV X0, X20
	0x03515508 BL 0x1D2C690
	0x0351550C MOV X0, X19
	0x03515510 BL 0x1C16F18
	0x03515514 BL 0x1990590
	0x03515518 SUB X31, X31, 0x60
	0x0351551C STP X30, X27, [X31 + 0x10]
	0x03515520 STP X26, X25, [X31 + 0x20]
	0x03515524 STP X24, X23, [X31 + 0x30]
	0x03515528 STP X22, X21, [X31 + 0x40]
	0x0351552C STP X20, X19, [X31 + 0x50]
	0x03515530 ADRP X24, 0xECA000
	0x03515534 LDRB W8, [X24 + 0xB0A]
	0x03515538 MOV X22, X4
	0x0351553C MOV X23, X3
	0x03515540 MOV X21, X2
	0x03515544 MOV X19, X1
	0x03515548 MOV X20, X0
	0x0351554C TBNZ X8, 0x0, 0x351557C
	0x03515550 ADRP X0, 0xBE8000
	0x03515554 LDR X0, [X0 + 0x968]
	0x03515558 BL 0x1C16CF4
	0x0351555C ADRP X0, 0xC06000
	0x03515560 LDR X0, [X0 + 0xB60]
	0x03515564 BL 0x1C16CF4
	0x03515568 ADRP X0, 0xBDE000
	0x0351556C LDR X0, [X0 + 0x6C0]
	0x03515570 BL 0x1C16CF4
	0x03515574 MOVZ W8, 0x1
	0x03515578 STRB W8, [X24 + 0xB0A]
	0x0351557C STRB W31, [X31 + 0xC]
	0x03515580 STRB W31, [X31 + 0x8]
	0x03515584 CBZ X21, 0x35157F8
	0x03515588 LDR X8, [X21]
	0x0351558C MOV X0, X21
	0x03515590 LDR X9, [X8 + 0x468]
	0x03515594 LDR X1, [X8 + 0x470]
	0x03515598 BLR X9
	0x0351559C CBZ X0, 0x35157F8
	0x035155A0 LDR W8, [X0 + 0x18]
	0x035155A4 MOV X21, X0
	0x035155A8 CBZ W8, 0x3515830
	0x035155AC ADRP X26, 0xBDE000
	0x035155B0 LDR X26, [X26 + 0x6C0]
	0x035155B4 ADRP X27, 0xBE8000
	0x035155B8 LDR X0, [X26]
	0x035155BC LDR X27, [X27 + 0x968]
	0x035155C0 LDR X24, [X21 + 0x20]
	0x035155C4 LDR W8, [X0 + 0xE0]
	0x035155C8 LDR X25, [X27]
	0x035155CC CBNZ W8, 0x35155D4
	0x035155D0 BL 0x1C16DFC
	0x035155D4 MOV X0, X25
	0x035155D8 MOV X1, X31
	0x035155DC BL 0x338C698
	0x035155E0 MOV X1, X0
	0x035155E4 MOV X0, X24
	0x035155E8 MOV X2, X31
	0x035155EC BL 0x3395194
	0x035155F0 TBZ X0, 0x0, 0x3515610
	0x035155F4 CBZ X19, 0x35157F8
	0x035155F8 MOV X0, X19
	0x035155FC MOV W1, W31
	0x03515600 MOV X2, X31
	0x03515604 BL 0x351EFE8
	0x03515608 STRB W31, [X23]
	0x0351560C B 0x35156B4
	0x03515610 LDR W8, [X21 + 0x18]
	0x03515614 CBZ W8, 0x3515830
	0x03515618 LDR X0, [X21 + 0x20]
	0x0351561C CBZ X0, 0x35157F8
	0x03515620 MOV X1, X31
	0x03515624 BL 0x3397374
	0x03515628 LDR W8, [X21 + 0x18]
	0x0351562C TBZ X0, 0x0, 0x351563C
	0x03515630 CBZ W8, 0x3515830
	0x03515634 LDR X1, [X21 + 0x20]
	0x03515638 B 0x351568C
	0x0351563C CBZ W8, 0x3515830

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0xECB000
	009 Move W8, [X21+2817]
	010 Move W22, W3
	011 Move X23, X2
	012 Move X19, X1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0xBDF000
	019 Move X0, [X0+2760]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X21+2817], W8
	023 Compare X23, 0
	024 JumpIfEqual {38}
	025 Move X8, 0xBDF000
	026 Move X8, [X8+2760]
	027 Move X0, X23
	028 Move X24, [X8]
	029 Move X1, X24
	030 Call 0x1C17E00
	031 Move X21, X0
	032 Compare X0, 0
	033 JumpIfEqual {107}
	034 Move TEMP, X22
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfEqual {43}
	038 Move X21, X31
	039 Move TEMP, X22
	040 And TEMP, TEMP, 1
	041 Compare TEMP, 1
	042 JumpIfNotEqual {49}
	043 Compare X19, 0
	044 JumpIfEqual {106}
	045 Move W1, 71
	046 Move X0, X19
	047 Move X2, X31
	048 Call StreamBuffer.WriteByte, X0, X1
	049 Compare X21, 0
	050 JumpIfEqual {106}
	051 Move W2, [X21+24]
	052 Move X0, X20
	053 Move X1, X19
	054 Call Protocol18.WriteCompressedUInt32, X0, X1, X2
	055 Move [X31+12], W31
	056 Move X8, [X21+24]
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Move W22, 1
	059 Subtract W9, W22, 1
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Add X8, X21, W9
	062 Move X2, [X8+32]
	063 Compare X2, 0
	064 JumpIfEqual {82}
	065 Move X0, X20
	066 Move X1, X19
	067 Move W3, W31
	068 Call Protocol18.WriteString, X0, X1, X2, X3
	069 Move [X31+12], W22
	070 Move X8, [X21+24]
	071 NotImplemented "Instruction CMP not yet implemented."
	072 Add W22, W22, 1
	073 Move X20, [X31+48]
	074 Move X19, [X31+56]
	075 Move X22, [X31+32]
	076 Move X21, [X31+40]
	077 Move X24, [X31+16]
	078 Move X23, [X31+24]
	079 Move X30, [X31+64]
	080 Return 
	081 Call 0x1C17F28
	082 Add X0, X31, 12
	083 Move X1, X31
	084 Call Int32.ToString, X0
	085 Move X19, X0
	086 Move X0, 0xC20000
	087 Move X0, [X0+952]
	088 Call 0x1C17D08
	089 Move X1, X19
	090 Move X2, X31
	091 Call String.Concat, X0, X1
	092 Move X19, X0
	093 Move X0, 0xC20000
	094 Move X0, [X0+104]
	095 Call 0x1C17D08
	096 Call 0x1C17F10
	097 Move X1, X19
	098 Move X20, X0
	099 Call InvalidDataException..ctor, X0, X1
	100 Move X0, 0xC20000
	101 Move X0, [X0+960]
	102 Call 0x1C17D08
	103 Move X1, X0
	104 Move X0, X20
	105 Call 0x1C17DEC
	106 Call 0x1C17F20
	107 Move X0, X23
	108 Move X1, X24
	109 Call 0x1C181E0

Method: System.Void WriteObjectArray(ExitGames.Client.Photon.StreamBuffer stream, System.Object array, System.Boolean writeType)

Disassembly:
	0x03515C28 MOV X1, X0
	0x03515C2C MOV X0, X19
	0x03515C30 MOV X2, X31
	0x03515C34 BL 0x321B938
	0x03515C38 MOV X19, X0
	0x03515C3C ADRP X0, 0xC1F000
	0x03515C40 LDR X0, [X0 + 0x68]
	0x03515C44 BL 0x1C16D08
	0x03515C48 BL 0x1C16F10
	0x03515C4C MOV X1, X19
	0x03515C50 MOV X20, X0
	0x03515C54 BL 0x35077D4
	0x03515C58 ADRP X0, 0xC1F000
	0x03515C5C LDR X0, [X0 + 0x400]
	0x03515C60 BL 0x1C16D08
	0x03515C64 MOV X1, X0
	0x03515C68 MOV X0, X20
	0x03515C6C BL 0x1C16DEC
	0x03515C70 STR X30, [X31 - 0x30]!
	0x03515C74 STP X22, X21, [X31 + 0x10]
	0x03515C78 STP X20, X19, [X31 + 0x20]
	0x03515C7C LDR X19, [X0 + 0x38]
	0x03515C80 MOV W21, W2
	0x03515C84 MOV X20, X1
	0x03515C88 MOV X22, X0
	0x03515C8C STRB W31, [X31 + 0xC]
	0x03515C90 ADD X1, X31, 0xC
	0x03515C94 MOV X0, X19
	0x03515C98 MOV X2, X31
	0x03515C9C BL 0x33DE64C
	0x03515CA0 LDR X22, [X22 + 0x38]
	0x03515CA4 MOV X1, X22
	0x03515CA8 MOV W2, W21
	0x03515CAC BL 0x3515004
	0x03515CB0 CBZ X20, 0x3515D00

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0xECB000
	008 Move W8, [X23+2818]
	009 Move W20, W3
	010 Move X22, X2
	011 Move X19, X1
	012 Move X21, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0xBE6000
	018 Move X0, [X0+760]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X23+2818], W8
	022 Compare X22, 0
	023 JumpIfEqual {36}
	024 Move X8, 0xBE6000
	025 Move X8, [X8+760]
	026 Move X0, X22
	027 Move X23, [X8]
	028 Move X1, X23
	029 Call 0x1C17E00
	030 Move X2, X0
	031 Compare X0, 0
	032 JumpIfNotEqual {37}
	033 Move X0, X22
	034 Move X1, X23
	035 Call 0x1C181E0
	036 Move X2, X31
	037 And W3, W20, 1
	038 Move X0, X21
	039 Move X1, X19
	040 Move X20, [X31+32]
	041 Move X19, [X31+40]
	042 Move X22, [X31+16]
	043 Move X21, [X31+24]
	044 Move X30, [X31+48]
	045 Move X23, [X31+56]
	046 Call Protocol18.WriteObjectArray, X0, X1, X2, X3
	047 Return 

Method: System.Void WriteObjectArray(ExitGames.Client.Photon.StreamBuffer stream, System.Collections.IList array, System.Boolean writeType)

Disassembly:
	0x03514CD0 MOV X19, X2
	0x03514CD4 MOV X23, X1
	0x03514CD8 MOV X20, X0
	0x03514CDC TBNZ X8, 0x0, 0x3514D24
	0x03514CE0 ADRP X0, 0xBDF000
	0x03514CE4 LDR X0, [X0 + 0xAC8]
	0x03514CE8 BL 0x1C16CF4
	0x03514CEC ADRP X0, 0xC20000
	0x03514CF0 LDR X0, [X0 + 0x3C8]
	0x03514CF4 BL 0x1C16CF4
	0x03514CF8 ADRP X0, 0xC20000
	0x03514CFC LDR X0, [X0 + 0x3D0]
	0x03514D00 BL 0x1C16CF4
	0x03514D04 ADRP X0, 0xC20000
	0x03514D08 LDR X0, [X0 + 0x3D8]
	0x03514D0C BL 0x1C16CF4
	0x03514D10 ADRP X0, 0xC20000
	0x03514D14 LDR X0, [X0 + 0x3E0]
	0x03514D18 BL 0x1C16CF4
	0x03514D1C MOVZ W8, 0x1
	0x03514D20 STRB W8, [X21 + 0xB05]
	0x03514D24 CBZ X23, 0x3514FFC
	0x03514D28 LDR X8, [X23 + 0x30]
	0x03514D2C CBZ X8, 0x3514EF4
	0x03514D30 CBZ X19, 0x3514FFC
	0x03514D34 MOV X0, X19
	0x03514D38 MOV X1, X31
	0x03514D3C BL 0x3517FD4
	0x03514D40 MOV W21, W0
	0x03514D44 MOV X0, X19
	0x03514D48 MOV X1, X31
	0x03514D4C BL 0x3517FD4
	0x03514D50 ADD W1, W0, 0x1
	0x03514D54 MOV X0, X19
	0x03514D58 MOV X2, X31
	0x03514D5C BL 0x3517FDC
	0x03514D60 LDR X8, [X23 + 0x30]
	0x03514D64 CBZ X8, 0x3514FFC
	0x03514D68 LDR X9, [X8 + 0x18]
	0x03514D6C LDR X0, [X8 + 0x40]
	0x03514D70 LDR X3, [X8 + 0x28]
	0x03514D74 MOV X1, X19
	0x03514D78 MOV X2, X22
	0x03514D7C BLR X9
	0x03514D80 SXTH W23, W0
	0x03514D84 MOV X0, X19
	0x03514D88 MOV X1, X31
	0x03514D8C STR W23, [X31 + 0xC]
	0x03514D90 BL 0x3517FD4
	0x03514D94 ORN W8, W31, W21, 0x0
	0x03514D98 ADD W2, W0, W8
	0x03514D9C SXTW X8, W2
	0x03514DA0 CMP X8, X23
	0x03514DA4 STR W2, [X31 + 0x8]
	0x03514DA8 B.EQ 0x3514EA8
	0x03514DAC ADRP X8, 0xBDF000
	0x03514DB0 LDR X8, [X8 + 0xAC8]
	0x03514DB4 MOVZ W1, 0x7
	0x03514DB8 LDR X0, [X8]
	0x03514DBC BL 0x1C16D6C
	0x03514DC0 CBZ X0, 0x3514FFC
	0x03514DC4 LDR W8, [X0 + 0x18]
	0x03514DC8 MOV X23, X0
	0x03514DCC CBZ W8, 0x3515000
	0x03514DD0 ADRP X8, 0xC20000
	0x03514DD4 LDR X8, [X8 + 0x3D0]
	0x03514DD8 LDR X8, [X8]
	0x03514DDC STR X8, [X23 + 0x20]
	0x03514DE0 CBZ X22, 0x3514FFC
	0x03514DE4 MOV X0, X22
	0x03514DE8 MOV X1, X31
	0x03514DEC BL 0x33BE520
	0x03514DF0 CBZ X0, 0x3514E00
	0x03514DF4 LDR X8, [X0]
	0x03514DF8 LDP X9, X1, [X8 + 0x168]
	0x03514DFC BLR X9
	0x03514E00 LDR W8, [X23 + 0x18]
	0x03514E04 CMP W8, 0x1
	0x03514E08 B.LS 0x3515000
	0x03514E0C CMP W8, 0x2
	0x03514E10 STR X0, [X23 + 0x28]
	0x03514E14 B.EQ 0x3515000
	0x03514E18 ADRP X8, 0xC20000
	0x03514E1C LDR X8, [X8 + 0x3D8]
	0x03514E20 ADD X0, X31, 0xC
	0x03514E24 MOV X1, X31
	0x03514E28 LDR X8, [X8]
	0x03514E2C STR X8, [X23 + 0x30]
	0x03514E30 BL 0x3399B00
	0x03514E34 LDR W8, [X23 + 0x18]
	0x03514E38 CMP W8, 0x3
	0x03514E3C B.LS 0x3515000
	0x03514E40 CMP W8, 0x4
	0x03514E44 STR X0, [X23 + 0x38]
	0x03514E48 B.EQ 0x3515000
	0x03514E4C ADRP X8, 0xC20000
	0x03514E50 LDR X8, [X8 + 0x3C8]
	0x03514E54 ADD X0, X31, 0x8
	0x03514E58 MOV X1, X31
	0x03514E5C LDR X8, [X8]
	0x03514E60 STR X8, [X23 + 0x40]
	0x03514E64 BL 0x337B6E0
	0x03514E68 LDR W8, [X23 + 0x18]
	0x03514E6C CMP W8, 0x5
	0x03514E70 B.LS 0x3515000
	0x03514E74 CMP W8, 0x6
	0x03514E78 STR X0, [X23 + 0x48]
	0x03514E7C B.EQ 0x3515000
	0x03514E80 ADRP X8, 0xC20000
	0x03514E84 LDR X8, [X8 + 0x3E0]
	0x03514E88 MOV X0, X23
	0x03514E8C MOV X1, X31
	0x03514E90 LDR X8, [X8]
	0x03514E94 STR X8, [X23 + 0x50]
	0x03514E98 BL 0x32278CC
	0x03514E9C MOV X1, X31
	0x03514EA0 BL 0x364871C
	0x03514EA4 LDR W2, [X31 + 0x8]
	0x03514EA8 LDR X1, [X20 + 0x30]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0xECC000
	009 Move W8, [X23+2819]
	010 Move W22, W3
	011 Move X19, X2
	012 Move X20, X1
	013 Move X21, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0xBE7000
	019 Move X0, [X0+752]
	020 Call 0x1C17CF4
	021 Move X0, 0xBE7000
	022 Move X0, [X0+760]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X23+2819], W8
	026 Move TEMP, X22
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfNotEqual {36}
	030 Compare X20, 0
	031 JumpIfEqual {128}
	032 Move W1, 23
	033 Move X0, X20
	034 Move X2, X31
	035 Call StreamBuffer.WriteByte, X0, X1
	036 Compare X19, 0
	037 JumpIfEqual {128}
	038 Move X23, 0xBE7000
	039 Move X8, [X19]
	040 Move X23, [X23+752]
	041 NotImplemented "Instruction LDRH not yet implemented."
	042 Move X1, [X23]
	043 Compare X9, 0
	044 JumpIfEqual {51}
	045 Move X10, [X8+176]
	046 Add X10, X10, 8
	047 NotImplemented "Instruction LDUR not yet implemented."
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Subtract X9, X9, 1
	050 Add X10, X10, 16
	051 Move W2, 1
	052 Move X0, X19
	053 Call 0x1C5D788
	054 Move W9, [X10]
	055 Add W9, W9, 1
	056 Add X8, X8, W9
	057 Add X0, X8, 312
	058 Move X8, [X0]
	059 Move X1, [X0+8]
	060 Move X24, 0xBE7000
	061 Move X24, [X24+760]
	062 Move X0, X19
	063 NotImplemented "Instruction BLR not yet implemented."
	064 Move W2, W0
	065 Move X0, X21
	066 Move X1, X20
	067 Call Protocol18.WriteCompressedUInt32, X0, X1, X2
	068 Move W22, W31
	069 Move X8, [X19]
	070 Move X1, [X23]
	071 NotImplemented "Instruction LDRH not yet implemented."
	072 Compare X9, 0
	073 JumpIfEqual {80}
	074 Move X10, [X8+176]
	075 Add X10, X10, 8
	076 NotImplemented "Instruction LDUR not yet implemented."
	077 NotImplemented "Instruction CMP not yet implemented."
	078 Subtract X9, X9, 1
	079 Add X10, X10, 16
	080 Move W2, 1
	081 Move X0, X19
	082 Call 0x1C5D788
	083 Move W9, [X10]
	084 Add W9, W9, 1
	085 Add X8, X8, W9
	086 Add X0, X8, 312
	087 Move X8, [X0]
	088 Move X1, [X0+8]
	089 Move X0, X19
	090 NotImplemented "Instruction BLR not yet implemented."
	091 NotImplemented "Instruction CMP not yet implemented."
	092 Move X8, [X19]
	093 Move X1, [X24]
	094 NotImplemented "Instruction LDRH not yet implemented."
	095 Compare X9, 0
	096 JumpIfEqual {103}
	097 Move X10, [X8+176]
	098 Add X10, X10, 8
	099 NotImplemented "Instruction LDUR not yet implemented."
	100 NotImplemented "Instruction CMP not yet implemented."
	101 Subtract X9, X9, 1
	102 Add X10, X10, 16
	103 Move X0, X19
	104 Move W2, W31
	105 Call 0x1C5D788
	106 NotImplemented "Instruction LDRSW not yet implemented."
	107 Add X8, X8, X9
	108 Add X0, X8, 312
	109 Move X8, [X0]
	110 Move X2, [X0+8]
	111 Move X0, X19
	112 Move W1, W22
	113 NotImplemented "Instruction BLR not yet implemented."
	114 Move X2, X0
	115 Move W3, 1
	116 Move X0, X21
	117 Move X1, X20
	118 Call Protocol18.Write, X0, X1, X2, X3
	119 Add W22, W22, 1
	120 Move X20, [X31+48]
	121 Move X19, [X31+56]
	122 Move X22, [X31+32]
	123 Move X21, [X31+40]
	124 Move X24, [X31+16]
	125 Move X23, [X31+24]
	126 Move X30, [X31+64]
	127 Return 
	128 Call 0x1C17F20

Method: System.Void WriteArrayInArray(ExitGames.Client.Photon.StreamBuffer stream, System.Object value, System.Boolean writeType)

Disassembly:
	0x035146D4 ADRP X0, 0xC20000
	0x035146D8 LDR X0, [X0 + 0xE0]
	0x035146DC BL 0x1C16CF4
	0x035146E0 ADRP X0, 0xC20000
	0x035146E4 LDR X0, [X0 + 0xF0]
	0x035146E8 BL 0x1C16CF4
	0x035146EC ADRP X0, 0xC20000
	0x035146F0 LDR X0, [X0 + 0xF8]
	0x035146F4 BL 0x1C16CF4
	0x035146F8 ADRP X0, 0xC20000
	0x035146FC LDR X0, [X0 + 0x100]
	0x03514700 BL 0x1C16CF4
	0x03514704 MOVZ W8, 0x1
	0x03514708 STRB W8, [X22 + 0xAFD]
	0x0351470C CBZ X21, 0x35147AC
	0x03514710 MOV X0, X21
	0x03514714 MOV X1, X31
	0x03514718 BL 0x34FBAD0
	0x0351471C CBZ W0, 0x35147AC
	0x03514720 MOV X0, X21
	0x03514724 MOV X1, X31
	0x03514728 BL 0x34FBAD0
	0x0351472C CBZ X19, 0x35147EC
	0x03514730 MOV W1, W0
	0x03514734 MOV X0, X19
	0x03514738 MOV X2, X31
	0x0351473C BL 0x351EFE8
	0x03514740 MOV X0, X21
	0x03514744 MOV X1, X31
	0x03514748 BL 0x34FB968
	0x0351474C STP X0, X1, [X31]
	0x03514750 ADRP X22, 0xC20000
	0x03514754 ADRP X23, 0xC20000
	0x03514758 LDR X22, [X22 + 0xF8]
	0x0351475C LDR X23, [X23 + 0x100]
	0x03514760 LDR X1, [X22]
	0x03514764 ADD X0, X31, 0x0
	0x03514768 BL 0x24A0B30
	0x0351476C TBZ X0, 0x0, 0x35147C4
	0x03514770 LDR X1, [X23]
	0x03514774 ADD X0, X31, 0x0
	0x03514778 BL 0x24A0A9C
	0x0351477C MOV X21, X1
	0x03514780 MOV X2, X0
	0x03514784 MOV X0, X19
	0x03514788 MOV W1, W2
	0x0351478C MOV X2, X31
	0x03514790 BL 0x351EFE8
	0x03514794 MOVZ W3, 0x1
	0x03514798 MOV X0, X20
	0x0351479C MOV X1, X19
	0x035147A0 MOV X2, X21
	0x035147A4 BL 0x350D5EC
	0x035147A8 B 0x3514760
	0x035147AC CBZ X19, 0x35147EC
	0x035147B0 MOV X0, X19
	0x035147B4 MOV W1, W31
	0x035147B8 MOV X2, X31
	0x035147BC BL 0x351EFE8
	0x035147C0 B 0x35147D8
	0x035147C4 ADRP X8, 0xC20000
	0x035147C8 LDR X8, [X8 + 0xF0]
	0x035147CC ADD X0, X31, 0x0
	0x035147D0 LDR X1, [X8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0xECC000
	008 Move W8, [X21+2820]
	009 Move X22, X2
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xBE0000
	017 Move X0, [X0+2512]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2820], W8
	021 Compare X22, 0
	022 JumpIfEqual {64}
	023 Move X8, 0xBE0000
	024 Move X8, [X8+2512]
	025 Move X0, X22
	026 Move X23, [X8]
	027 Move X1, X23
	028 Call 0x1C17E00
	029 Compare X0, 0
	030 JumpIfEqual {67}
	031 Compare X19, 0
	032 JumpIfEqual {66}
	033 Move X21, X0
	034 Move W1, 64
	035 Move X0, X19
	036 Move X2, X31
	037 Call StreamBuffer.WriteByte, X0, X1
	038 Move W2, [X21+24]
	039 Move X0, X20
	040 Move X1, X19
	041 Call Protocol18.WriteCompressedUInt32, X0, X1, X2
	042 Move X8, [X21+24]
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Move X22, X31
	045 And X8, X8, 0
	046 Add X23, X21, 32
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Move X2, [X23]
	049 Move W3, 1
	050 Move X0, X20
	051 Move X1, X19
	052 Call Protocol18.Write, X0, X1, X2, X3
	053 Move W8, [X21+24]
	054 Add X22, X22, 1
	055 NotImplemented "Instruction CMP not yet implemented."
	056 Move X20, [X31+32]
	057 Move X19, [X31+40]
	058 Move X22, [X31+16]
	059 Move X21, [X31+24]
	060 Move X30, [X31+48]
	061 Move X23, [X31+56]
	062 Return 
	063 Call 0x1C17F28
	064 Compare X19, 0
	065 JumpIfNotEqual {70}
	066 Call 0x1C17F20
	067 Move X0, X22
	068 Move X1, X23
	069 Call 0x1C181E0
	070 Move W1, 64
	071 Move X0, X19
	072 Move X2, X31
	073 Call StreamBuffer.WriteByte, X0, X1
	074 Call 0x1C17F20

Method: System.Void WriteCustomTypeBody(ExitGames.Client.Photon.CustomType customType, ExitGames.Client.Photon.StreamBuffer stream, System.Object value)

Disassembly:
	0x03515CB4 MOV W3, W0
	0x03515CB8 MOV X0, X20
	0x03515CBC MOV X1, X22
	0x03515CC0 MOV W2, W31
	0x03515CC4 MOV X4, X31
	0x03515CC8 BL 0x3517F60
	0x03515CCC MOV X20, X31
	0x03515CD0 LDRB W8, [X31 + 0xC]
	0x03515CD4 CBZ W8, 0x3515CE4
	0x03515CD8 MOV X0, X19
	0x03515CDC MOV X1, X31
	0x03515CE0 BL 0x33E14E4
	0x03515CE4 CBNZ X20, 0x3515CF8
	0x03515CE8 LDP X20, X19, [X31 + 0x20]
	0x03515CEC LDP X22, X21, [X31 + 0x10]
	0x03515CF0 LDR X30, [X31], #0x30
	0x03515CF4 RET
	0x03515CF8 MOV X0, X20
	0x03515CFC BL 0x1C16F18
	0x03515D00 BL 0x1C16F20
	0x03515D04 B 0x3515D08
	0x03515D08 MOV X21, X0
	0x03515D0C CMP W1, 0x1
	0x03515D10 B.NE 0x3515D28
	0x03515D14 MOV X0, X21
	0x03515D18 BL 0x3EB1AD0
	0x03515D1C LDR X20, [X0]
	0x03515D20 BL 0x3EB1AE0
	0x03515D24 B 0x3515CD0
	0x03515D28 MOV X20, X31
	0x03515D2C B 0x3515D34
	0x03515D30 MOV X21, X0
	0x03515D34 LDRB W8, [X31 + 0xC]
	0x03515D38 CBZ W8, 0x3515D48
	0x03515D3C MOV X0, X19
	0x03515D40 MOV X1, X31
	0x03515D44 BL 0x33E14E4
	0x03515D48 CBNZ X20, 0x3515D54
	0x03515D4C MOV X0, X21
	0x03515D50 BL 0x1D2C690
	0x03515D54 MOV X0, X20
	0x03515D58 BL 0x1C16F18
	0x03515D5C BL 0x1990590
	0x03515D60 AND W3, W3, 0x1
	0x03515D64 B 0x3512B3C
	0x03515D68 UBFM W8, W1, 0x1F, 0x1E
	0x03515D6C EOR W0, W8, W1, 0x1F
	0x03515D70 RET
	0x03515D74 UBFM X8, X1, 0x3F, 0x3E
	0x03515D78 EOR X0, X8, X1, 0x3F
	0x03515D7C RET
	0x03515D80 STR X30, [X31 - 0x30]!
	0x03515D84 STP X22, X21, [X31 + 0x10]
	0x03515D88 STP X20, X19, [X31 + 0x20]
	0x03515D8C LDR X19, [X0 + 0x40]
	0x03515D90 MOV X22, X2
	0x03515D94 MOV X20, X1
	0x03515D98 MOV X21, X0
	0x03515D9C STRB W31, [X31 + 0xC]
	0x03515DA0 ADD X1, X31, 0xC
	0x03515DA4 MOV X0, X19
	0x03515DA8 MOV X2, X31
	0x03515DAC BL 0x33DE64C
	0x03515DB0 LDR X9, [X21 + 0x40]
	0x03515DB4 CBZ X9, 0x3515E94
	0x03515DB8 LDR W8, [X9 + 0x18]
	0x03515DBC CBZ W8, 0x3515E98
	0x03515DC0 AND W10, W22, 0x7F
	0x03515DC4 UBFM X8, X22, 0x7, 0x3F
	0x03515DC8 STRB W10, [X9 + 0x20]
	0x03515DCC CBZ X8, 0x3515E70
	0x03515DD0 MOV X9, X31
	0x03515DD4 LDR X10, [X21 + 0x40]
	0x03515DD8 CBZ X10, 0x3515E7C
	0x03515DDC LDR W11, [X10 + 0x18]
	0x03515DE0 CMP X9, X11
	0x03515DE4 B.CS 0x3515E88
	0x03515DE8 ADD X10, X10, X9
	0x03515DEC LDRB W11, [X10 + 0x20]
	0x03515DF0 ORR W11, W11, 0x80
	0x03515DF4 STRB W11, [X10 + 0x20]
	0x03515DF8 LDR X11, [X21 + 0x40]
	0x03515DFC CBZ X11, 0x3515E80
	0x03515E00 LDR W12, [X11 + 0x18]
	0x03515E04 ADD X10, X9, 0x1
	0x03515E08 CMP X10, X12
	0x03515E0C B.CS 0x3515E84
	0x03515E10 AND W12, W8, 0x7F
	0x03515E14 ADD X9, X11, X9
	0x03515E18 UBFM X8, X8, 0x7, 0x3F
	0x03515E1C STRB W12, [X9 + 0x21]
	0x03515E20 MOV X9, X10
	0x03515E24 CBNZ X8, 0x3515DD4
	0x03515E28 ADD W3, W10, 0x1
	0x03515E2C CBZ X20, 0x3515E78
	0x03515E30 LDR X1, [X21 + 0x40]
	0x03515E34 MOV X0, X20
	0x03515E38 MOV W2, W31
	0x03515E3C MOV X4, X31
	0x03515E40 BL 0x3517F60
	0x03515E44 MOV X21, X31
	0x03515E48 LDRB W8, [X31 + 0xC]
	0x03515E4C CBZ W8, 0x3515E5C
	0x03515E50 MOV X0, X19
	0x03515E54 MOV X1, X31
	0x03515E58 BL 0x33E14E4
	0x03515E5C CBNZ X21, 0x3515E8C
	0x03515E60 LDP X20, X19, [X31 + 0x20]
	0x03515E64 LDP X22, X21, [X31 + 0x10]
	0x03515E68 LDR X30, [X31], #0x30
	0x03515E6C RET
	0x03515E70 MOVZ W3, 0x1
	0x03515E74 CBNZ X20, 0x3515E30
	0x03515E78 BL 0x1C16F20
	0x03515E7C BL 0x1C16F20
	0x03515E80 BL 0x1C16F20
	0x03515E84 BL 0x1C16F28
	0x03515E88 BL 0x1C16F28
	0x03515E8C MOV X0, X21
	0x03515E90 BL 0x1C16F18
	0x03515E94 BL 0x1C16F20
	0x03515E98 BL 0x1C16F28
	0x03515E9C B 0x3515EB0
	0x03515EA0 B 0x3515EB0
	0x03515EA4 B 0x3515EB0
	0x03515EA8 B 0x3515EB0
	0x03515EAC B 0x3515EB0
	0x03515EB0 MOV X20, X0
	0x03515EB4 CMP W1, 0x1
	0x03515EB8 B.NE 0x3515ED0
	0x03515EBC MOV X0, X20
	0x03515EC0 BL 0x3EB1AD0
	0x03515EC4 LDR X21, [X0]
	0x03515EC8 BL 0x3EB1AE0
	0x03515ECC B 0x3515E48
	0x03515ED0 MOV X21, X31
	0x03515ED4 B 0x3515EDC
	0x03515ED8 MOV X20, X0
	0x03515EDC LDRB W8, [X31 + 0xC]
	0x03515EE0 CBZ W8, 0x3515EF0
	0x03515EE4 MOV X0, X19
	0x03515EE8 MOV X1, X31
	0x03515EEC BL 0x33E14E4
	0x03515EF0 CBNZ X21, 0x3515EFC
	0x03515EF4 MOV X0, X20
	0x03515EF8 BL 0x1D2C690
	0x03515EFC MOV X0, X21
	0x03515F00 BL 0x1C16F18
	0x03515F04 BL 0x1990590
	0x03515F08 STP X30, X21, [X31 - 0x20]!
	0x03515F0C STP X20, X19, [X31 + 0x10]
	0x03515F10 ADRP X21, 0xECA000
	0x03515F14 ADRP X20, 0xBDE000
	0x03515F18 LDRB W8, [X21 + 0xB0D]
	0x03515F1C LDR X20, [X20 + 0x618]
	0x03515F20 MOV X19, X0
	0x03515F24 TBNZ X8, 0x0, 0x3515F54
	0x03515F28 ADRP X0, 0xBDE000
	0x03515F2C LDR X0, [X0 + 0x618]
	0x03515F30 BL 0x1C16CF4
	0x03515F34 ADRP X0, 0xC0F000
	0x03515F38 LDR X0, [X0 + 0x830]
	0x03515F3C BL 0x1C16CF4
	0x03515F40 ADRP X0, 0xBDE000
	0x03515F44 LDR X0, [X0 + 0x638]
	0x03515F48 BL 0x1C16CF4
	0x03515F4C MOVZ W8, 0x1
	0x03515F50 STRB W8, [X21 + 0xB0D]
	0x03515F54 LDR X0, [X20]
	0x03515F58 MOVZ W1, 0x2
	0x03515F5C BL 0x1C16D6C
	0x03515F60 CBZ X0, 0x3516000
	0x03515F64 LDR W8, [X0 + 0x18]
	0x03515F68 CBZ W8, 0x3515FFC
	0x03515F6C MOVZ W9, 0x1
	0x03515F70 CMP W8, 0x1
	0x03515F74 STRB W9, [X0 + 0x20]
	0x03515F78 B.EQ 0x3515FFC
	0x03515F7C ADRP X8, 0xC0F000
	0x03515F80 LDR X8, [X8 + 0x830]
	0x03515F84 MOVZ W9, 0x8
	0x03515F88 STRB W9, [X0 + 0x21]
	0x03515F8C STR X0, [X19 + 0x18]
	0x03515F90 LDR X0, [X8]
	0x03515F94 ADRP X21, 0xBDE000
	0x03515F98 LDR X21, [X21 + 0x638]
	0x03515F9C MOVZ W1, 0x1
	0x03515FA0 BL 0x1C16D6C
	0x03515FA4 STR X0, [X19 + 0x20]
	0x03515FA8 LDR X0, [X21]
	0x03515FAC MOVZ W1, 0x1
	0x03515FB0 BL 0x1C16D6C
	0x03515FB4 STR X0, [X19 + 0x28]
	0x03515FB8 LDR X0, [X20]
	0x03515FBC MOVZ W1, 0x5
	0x03515FC0 BL 0x1C16D6C
	0x03515FC4 STR X0, [X19 + 0x30]
	0x03515FC8 LDR X0, [X20]
	0x03515FCC MOVZ W1, 0x5
	0x03515FD0 BL 0x1C16D6C
	0x03515FD4 STR X0, [X19 + 0x38]
	0x03515FD8 LDR X0, [X20]
	0x03515FDC MOVZ W1, 0xA
	0x03515FE0 BL 0x1C16D6C
	0x03515FE4 STR X0, [X19 + 0x40]
	0x03515FE8 MOV X0, X19
	0x03515FEC LDP X20, X19, [X31 + 0x10]
	0x03515FF0 MOV X1, X31
	0x03515FF4 LDP X30, X21, [X31], #0x20
	0x03515FF8 B 0x34FA5D4
	0x03515FFC BL 0x1C16F28
	0x03516000 BL 0x1C16F20

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0xECB000
	009 Move W8, [X21+2821]
	010 Move X22, X3
	011 Move X19, X2
	012 Move X23, X1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {35}
	018 Move X0, 0xBDF000
	019 Move X0, [X0+2760]
	020 Call 0x1C17CF4
	021 Move X0, 0xC20000
	022 Move X0, [X0+968]
	023 Call 0x1C17CF4
	024 Move X0, 0xC20000
	025 Move X0, [X0+976]
	026 Call 0x1C17CF4
	027 Move X0, 0xC20000
	028 Move X0, [X0+984]
	029 Call 0x1C17CF4
	030 Move X0, 0xC20000
	031 Move X0, [X0+992]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X21+2821], W8
	035 Compare X23, 0
	036 JumpIfEqual {222}
	037 Move X8, [X23+48]
	038 Compare X8, 0
	039 JumpIfEqual {153}
	040 Compare X19, 0
	041 JumpIfEqual {222}
	042 Move X0, X19
	043 Move X1, X31
	044 Call StreamBuffer.get_Position, X0
	045 Move W21, W0
	046 Move X0, X19
	047 Move X1, X31
	048 Call StreamBuffer.get_Position, X0
	049 Add W1, W0, 1
	050 Move X0, X19
	051 Move X2, X31
	052 Call StreamBuffer.set_Position, X0, X1
	053 Move X8, [X23+48]
	054 Compare X8, 0
	055 JumpIfEqual {222}
	056 Move X9, [X8+24]
	057 Move X0, [X8+64]
	058 Move X3, [X8+40]
	059 Move X1, X19
	060 Move X2, X22
	061 NotImplemented "Instruction BLR not yet implemented."
	062 NotImplemented "Instruction SXTH not yet implemented."
	063 Move X0, X19
	064 Move X1, X31
	065 Move [X31+12], W23
	066 Call StreamBuffer.get_Position, X0
	067 NotImplemented "Instruction ORN not yet implemented."
	068 Add W2, W0, W8
	069 Move X8, W2
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Move [X31+8], W2
	072 Move X8, 0xBDF000
	073 Move X8, [X8+2760]
	074 Move W1, 7
	075 Move X0, [X8]
	076 Call 0x1C17D6C
	077 Compare X0, 0
	078 JumpIfEqual {222}
	079 Move W8, [X0+24]
	080 Move X23, X0
	081 Compare W8, 0
	082 JumpIfEqual {223}
	083 Move X8, 0xC20000
	084 Move X8, [X8+976]
	085 Move X8, [X8]
	086 Move [X23+32], X8
	087 Compare X22, 0
	088 JumpIfEqual {222}
	089 Move X0, X22
	090 Move X1, X31
	091 Call "il2cpp_vm_object_is_inst", X0
	092 Compare X0, 0
	093 JumpIfEqual {98}
	094 Move X8, [X0]
	095 Move X9, [X8+360]
	096 Move X1, [X8+368]
	097 NotImplemented "Instruction BLR not yet implemented."
	098 Move W8, [X23+24]
	099 NotImplemented "Instruction CMP not yet implemented."
	100 NotImplemented "Instruction CMP not yet implemented."
	101 Move [X23+40], X0
	102 Move X8, 0xC20000
	103 Move X8, [X8+984]
	104 Add X0, X31, 12
	105 Move X1, X31
	106 Move X8, [X8]
	107 Move [X23+48], X8
	108 Call UInt32.ToString, X0
	109 Move W8, [X23+24]
	110 NotImplemented "Instruction CMP not yet implemented."
	111 NotImplemented "Instruction CMP not yet implemented."
	112 Move [X23+56], X0
	113 Move X8, 0xC20000
	114 Move X8, [X8+968]
	115 Add X0, X31, 8
	116 Move X1, X31
	117 Move X8, [X8]
	118 Move [X23+64], X8
	119 Call Int32.ToString, X0
	120 Move W8, [X23+24]
	121 NotImplemented "Instruction CMP not yet implemented."
	122 NotImplemented "Instruction CMP not yet implemented."
	123 Move [X23+72], X0
	124 Move X8, 0xC20000
	125 Move X8, [X8+992]
	126 Move X0, X23
	127 Move X1, X31
	128 Move X8, [X8]
	129 Move [X23+80], X8
	130 Call String.Concat, X0
	131 Move X1, X31
	132 Call Debug.WriteLine, X0
	133 Move W2, [X31+8]
	134 Move X1, [X20+48]
	135 Call Protocol18.WriteCompressedUInt32, X0, X1, X2
	136 Subtract W23, W0, 1
	137 Move X0, X19
	138 Move X1, X31
	139 Call StreamBuffer.GetBuffer, X0
	140 Move X8, [X20+48]
	141 Compare X8, 0
	142 JumpIfEqual {222}
	143 Move W9, [X8+24]
	144 Compare W9, 0
	145 JumpIfEqual {223}
	146 Compare X0, 0
	147 JumpIfEqual {222}
	148 Move W9, [X0+24]
	149 NotImplemented "Instruction CMP not yet implemented."
	150 Move W8, [X8+32]
	151 Add X9, X0, W21
	152 Move [X9+32], W8
	153 Move X8, [X23+32]
	154 Compare X8, 0
	155 JumpIfEqual {222}
	156 Move X9, [X8+24]
	157 Move X0, [X8+64]
	158 Move X2, [X8+40]
	159 Move X1, X22
	160 NotImplemented "Instruction BLR not yet implemented."
	161 Compare X0, 0
	162 JumpIfEqual {222}
	163 Move W2, [X0+24]
	164 Move X21, X0
	165 Move X0, X20
	166 Move X1, X19
	167 Call Protocol18.WriteCompressedUInt32, X0, X1, X2
	168 Compare X19, 0
	169 JumpIfEqual {222}
	170 Move W3, [X21+24]
	171 Move X0, X19
	172 Move X1, X21
	173 Move W2, W31
	174 Move X4, X31
	175 Call StreamBuffer.Write, X0, X1, X2, X3
	176 Move W22, W0
	177 NotImplemented "Instruction CMP not yet implemented."
	178 Move X0, X19
	179 Move W1, W31
	180 Move X2, X31
	181 Call StreamBuffer.WriteByte, X0, X1
	182 Subtract W23, W23, 1
	183 Move X0, X19
	184 Move X1, X31
	185 Call StreamBuffer.GetBuffer, X0
	186 Move X23, X0
	187 Move X0, X19
	188 Move X1, X31
	189 Call StreamBuffer.GetBuffer, X0
	190 Move W4, [X31+8]
	191 Add W24, W22, W21
	192 Move X2, X0
	193 Add W1, W21, 1
	194 Move X0, X23
	195 Move W3, W24
	196 Move X5, X31
	197 Call Buffer.BlockCopy, X0, X1, X2, X3, X4
	198 Move X20, [X20+48]
	199 Move X0, X19
	200 Move X1, X31
	201 Call StreamBuffer.GetBuffer, X0
	202 Move X2, X0
	203 Move X0, X20
	204 Move W1, W31
	205 Move W3, W21
	206 Move W4, W22
	207 Move X5, X31
	208 Call Buffer.BlockCopy, X0, X1, X2, X3, X4
	209 Move W8, [X31+8]
	210 Move X0, X19
	211 Move X2, X31
	212 Add W1, W8, W24
	213 Call StreamBuffer.set_Position, X0, X1
	214 Move X20, [X31+48]
	215 Move X19, [X31+56]
	216 Move X22, [X31+32]
	217 Move X21, [X31+40]
	218 Move X24, [X31+16]
	219 Move X23, [X31+24]
	220 Move X30, [X31+64]
	221 Return 
	222 Call 0x1C17F20
	223 Call 0x1C17F28

Method: System.Void WriteCustomType(ExitGames.Client.Photon.StreamBuffer stream, System.Object value, System.Boolean writeType)

Disassembly:
	0x03514004 MOV W1, W21
	0x03514008 BL 0x351ECA4
	0x0351400C LDR W3, [X31 + 0xC]
	0x03514010 MOV X2, X0
	0x03514014 MOV X0, X19
	0x03514018 MOV W1, W31
	0x0351401C MOV W4, W21
	0x03514020 MOV X5, X31
	0x03514024 BL 0x33A8A9C
	0x03514028 LDP X20, X19, [X31 + 0x20]
	0x0351402C LDP X30, X21, [X31 + 0x10]
	0x03514030 ADD X31, X31, 0x30
	0x03514034 RET
	0x03514038 BL 0x1C16F20
	0x0351403C SUB X31, X31, 0x30
	0x03514040 STP X30, X21, [X31 + 0x10]
	0x03514044 STP X20, X19, [X31 + 0x20]
	0x03514048 MOV X19, X2
	0x0351404C MOV X20, X1
	0x03514050 MOV X21, X0
	0x03514054 STR W31, [X31 + 0xC]
	0x03514058 TBZ X3, 0x0, 0x3514070
	0x0351405C CBZ X20, 0x35140D0
	0x03514060 MOVZ W1, 0x45
	0x03514064 MOV X0, X20
	0x03514068 MOV X2, X31
	0x0351406C BL 0x351EFE8
	0x03514070 CBZ X19, 0x35140D0
	0x03514074 LDR W2, [X19 + 0x18]
	0x03514078 MOV X0, X21
	0x0351407C MOV X1, X20
	0x03514080 BL 0x3515C70
	0x03514084 CBZ X20, 0x35140D0
	0x03514088 LDR W8, [X19 + 0x18]
	0x0351408C ADD X2, X31, 0xC
	0x03514090 MOV X0, X20
	0x03514094 MOV X3, X31
	0x03514098 UBFM W21, W8, 0x1E, 0x1D
	0x0351409C MOV W1, W21
	0x035140A0 BL 0x351ECA4
	0x035140A4 LDR W3, [X31 + 0xC]
	0x035140A8 MOV X2, X0
	0x035140AC MOV X0, X19
	0x035140B0 MOV W1, W31
	0x035140B4 MOV W4, W21
	0x035140B8 MOV X5, X31
	0x035140BC BL 0x33A8A9C
	0x035140C0 LDP X20, X19, [X31 + 0x20]
	0x035140C4 LDP X30, X21, [X31 + 0x10]
	0x035140C8 ADD X31, X31, 0x30
	0x035140CC RET
	0x035140D0 BL 0x1C16F20
	0x035140D4 STR X30, [X31 - 0x40]!
	0x035140D8 STP X24, X23, [X31 + 0x10]
	0x035140DC STP X22, X21, [X31 + 0x20]
	0x035140E0 STP X20, X19, [X31 + 0x30]
	0x035140E4 ADRP X21, 0xECB000
	0x035140E8 LDRB W8, [X21 + 0xB0C]
	0x035140EC MOV W22, W3
	0x035140F0 MOV X23, X2
	0x035140F4 MOV X19, X1
	0x035140F8 MOV X20, X0
	0x035140FC TBNZ X8, 0x0, 0x3514114
	0x03514100 ADRP X0, 0xC20000
	0x03514104 LDR X0, [X0 + 0x310]
	0x03514108 BL 0x1C16CF4
	0x0351410C MOVZ W8, 0x1
	0x03514110 STRB W8, [X21 + 0xB0C]
	0x03514114 CBZ X23, 0x3514140
	0x03514118 ADRP X8, 0xC20000
	0x0351411C LDR X8, [X8 + 0x310]
	0x03514120 MOV X0, X23
	0x03514124 LDR X24, [X8]
	0x03514128 MOV X1, X24
	0x0351412C BL 0x1C16E00
	0x03514130 MOV X21, X0
	0x03514134 CBZ X0, 0x35141D0
	0x03514138 TBNZ X22, 0x0, 0x3514148
	0x0351413C B 0x351415C
	0x03514140 MOV X21, X31
	0x03514144 TBZ X22, 0x0, 0x351415C
	0x03514148 CBZ X19, 0x35141CC
	0x0351414C MOVZ W1, 0x55
	0x03514150 MOV X0, X19
	0x03514154 MOV X2, X31
	0x03514158 BL 0x351EFE8
	0x0351415C CBZ X21, 0x35141CC
	0x03514160 LDR W2, [X21 + 0x18]
	0x03514164 MOV X0, X20
	0x03514168 MOV X1, X19
	0x0351416C BL 0x3515C70
	0x03514170 LDR X8, [X21 + 0x18]
	0x03514174 CMP W8, 0x1
	0x03514178 B.LT 0x35141B4
	0x0351417C MOV X22, X31
	0x03514180 AND X8, X8, 0x0
	0x03514184 ADD X23, X21, 0x20
	0x03514188 CMP X22, W8, UXTW
	0x0351418C B.CS 0x35141C8
	0x03514190 LDR X2, [X23, X22, LSL #3]
	0x03514194 MOV X0, X20
	0x03514198 MOV X1, X19
	0x0351419C MOV W3, W31
	0x035141A0 BL 0x35138B0
	0x035141A4 LDR W8, [X21 + 0x18]
	0x035141A8 ADD X22, X22, 0x1
	0x035141AC CMP X22, W8, SXTW
	0x035141B0 B.LT 0x3514188
	0x035141B4 LDP X20, X19, [X31 + 0x30]
	0x035141B8 LDP X22, X21, [X31 + 0x20]
	0x035141BC LDP X24, X23, [X31 + 0x10]
	0x035141C0 LDR X30, [X31], #0x40
	0x035141C4 RET
	0x035141C8 BL 0x1C16F28
	0x035141CC BL 0x1C16F20
	0x035141D0 MOV X0, X23
	0x035141D4 MOV X1, X24
	0x035141D8 BL 0x1C171E0
	0x035141DC STR X30, [X31 - 0x30]!
	0x035141E0 STP X22, X21, [X31 + 0x10]
	0x035141E4 STP X20, X19, [X31 + 0x20]
	0x035141E8 MOV X19, X2
	0x035141EC MOV X20, X1

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0xECC000
	009 Move W8, [X23+2822]
	010 Move W22, W3
	011 Move X19, X2
	012 Move X20, X1
	013 Move X21, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {29}
	018 Move X0, 0xC21000
	019 Move X0, [X0+16]
	020 Call 0x1C17CF4
	021 Move X0, 0xBE8000
	022 Move X0, [X0+3840]
	023 Call 0x1C17CF4
	024 Move X0, 0xC09000
	025 Move X0, [X0+1784]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X23+2822], W8
	029 Move [X31+8], X31
	030 Compare X19, 0
	031 JumpIfEqual {110}
	032 Move X8, 0xC09000
	033 Move X8, [X8+1784]
	034 Move X9, [X19]
	035 Move X24, 0xBE8000
	036 Move X8, [X8]
	037 Move W11, [X9+304]
	038 Move W10, [X8+304]
	039 Move X24, [X24+3840]
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Move X9, [X9+200]
	042 Add X9, X9, X10
	043 NotImplemented "Instruction LDUR not yet implemented."
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Move X0, X19
	046 Move X1, X31
	047 Call "il2cpp_vm_object_is_inst", X0
	048 Move X23, X0
	049 Move X0, [X24]
	050 Move W8, [X0+224]
	051 Compare W8, 0
	052 JumpIfNotEqual {55}
	053 Call 0x1C17DFC
	054 Move X0, [X24]
	055 Move X8, [X0+184]
	056 Move X0, [X8]
	057 Compare X0, 0
	058 JumpIfEqual {110}
	059 Move X8, 0xC21000
	060 Move X8, [X8+16]
	061 Add X2, X31, 8
	062 Move X1, X23
	063 Move X3, [X8]
	064 Call Dictionary`2<Object, Object>.TryGetValue, X0, X1, X2
	065 Move TEMP, X0
	066 And TEMP, TEMP, 1
	067 Compare TEMP, 1
	068 JumpIfNotEqual {111}
	069 Move X8, [X31+8]
	070 Compare X8, 0
	071 JumpIfEqual {110}
	072 Move W1, [X8+16]
	073 Move TEMP, X22
	074 And TEMP, TEMP, 1
	075 Compare TEMP, 1
	076 JumpIfNotEqual {81}
	077 NotImplemented "Instruction CMP not yet implemented."
	078 Compare X20, 0
	079 JumpIfEqual {110}
	080 Xor W1, W1, 0xFFFFFF80
	081 Compare X20, 0
	082 JumpIfNotEqual {93}
	083 Compare X20, 0
	084 JumpIfEqual {110}
	085 Move W1, 19
	086 Move X0, X20
	087 Move X2, X31
	088 Call StreamBuffer.WriteByte, X0, X1
	089 Move X8, [X31+8]
	090 Compare X8, 0
	091 JumpIfEqual {110}
	092 Move W1, [X8+16]
	093 Move X0, X20
	094 Move X2, X31
	095 Call StreamBuffer.WriteByte, X0, X1
	096 Move X1, [X31+8]
	097 Move X0, X21
	098 Move X2, X20
	099 Move X3, X19
	100 Call Protocol18.WriteCustomTypeBody, X0, X1, X2, X3
	101 Move X20, [X31+48]
	102 Move X19, [X31+56]
	103 Move X22, [X31+32]
	104 Move X21, [X31+40]
	105 Move X24, [X31+16]
	106 Move X23, [X31+24]
	107 Move X30, [X31+64]
	108 Return 
	109 Move X23, [X19+24]
	110 Call 0x1C17F20
	111 Move X0, 0xC21000
	112 Move X0, [X0+920]
	113 Call 0x1C17D08
	114 Move X19, X0
	115 Compare X23, 0
	116 JumpIfNotEqual {118}
	117 Move X1, X31
	118 Move X8, [X23]
	119 Move X0, X23
	120 Move X9, [X8+360]
	121 Move X1, [X8+368]
	122 NotImplemented "Instruction BLR not yet implemented."
	123 Move X1, X0
	124 Move X0, X19
	125 Move X2, X31
	126 Call String.Concat, X0, X1
	127 Move X19, X0
	128 Move X0, 0xBE0000
	129 Move X0, [X0+2000]
	130 Call 0x1C17D08
	131 Call 0x1C17F10
	132 Move X1, X19
	133 Move X2, X31
	134 Move X20, X0
	135 Call Exception..ctor, X0, X1
	136 Move X0, 0xC21000
	137 Move X0, [X0+928]
	138 Call 0x1C17D08
	139 Move X1, X0
	140 Move X0, X20
	141 Call 0x1C17DEC

Method: System.Void WriteCustomTypeArray(ExitGames.Client.Photon.StreamBuffer stream, System.Object value, System.Boolean writeType)

Disassembly:
	0x035141F0 MOV X21, X0
	0x035141F4 TBZ X3, 0x0, 0x351420C
	0x035141F8 CBZ X20, 0x351427C
	0x035141FC MOVZ W1, 0x44
	0x03514200 MOV X0, X20
	0x03514204 MOV X2, X31
	0x03514208 BL 0x351EFE8
	0x0351420C CBZ X19, 0x351427C
	0x03514210 LDR W2, [X19 + 0x18]
	0x03514214 MOV X0, X21
	0x03514218 MOV X1, X20
	0x0351421C BL 0x3515C70
	0x03514220 LDR X8, [X19 + 0x18]
	0x03514224 CMP W8, 0x1
	0x03514228 B.LT 0x3514268
	0x0351422C MOV X21, X31
	0x03514230 AND X8, X8, 0x0
	0x03514234 ADD X22, X19, 0x20
	0x03514238 CMP X21, W8, UXTW
	0x0351423C B.CS 0x3514278
	0x03514240 CBZ X20, 0x351427C
	0x03514244 LDRH W1, [X22, X21, LSL #1]
	0x03514248 MOV X0, X20
	0x0351424C MOV X3, X31
	0x03514250 UBFM W2, W1, 0x8, 0x1F
	0x03514254 BL 0x351F050
	0x03514258 LDR W8, [X19 + 0x18]
	0x0351425C ADD X21, X21, 0x1
	0x03514260 CMP X21, W8, SXTW
	0x03514264 B.LT 0x3514238
	0x03514268 LDP X20, X19, [X31 + 0x20]
	0x0351426C LDP X22, X21, [X31 + 0x10]
	0x03514270 LDR X30, [X31], #0x30
	0x03514274 RET
	0x03514278 BL 0x1C16F28
	0x0351427C BL 0x1C16F20
	0x03514280 STP X30, X23, [X31 - 0x30]!
	0x03514284 STP X22, X21, [X31 + 0x10]
	0x03514288 STP X20, X19, [X31 + 0x20]
	0x0351428C ADRP X23, 0xECB000
	0x03514290 LDRB W8, [X23 + 0xB00]
	0x03514294 MOV W22, W3
	0x03514298 MOV X20, X2
	0x0351429C MOV X19, X1
	0x035142A0 MOV X21, X0
	0x035142A4 TBNZ X8, 0x0, 0x35142BC
	0x035142A8 ADRP X0, 0xBDF000
	0x035142AC LDR X0, [X0 + 0x618]
	0x035142B0 BL 0x1C16CF4
	0x035142B4 MOVZ W8, 0x1
	0x035142B8 STRB W8, [X23 + 0xB00]
	0x035142BC TBZ X22, 0x0, 0x35142D4
	0x035142C0 CBZ X19, 0x35144C8
	0x035142C4 MOVZ W1, 0x42
	0x035142C8 MOV X0, X19
	0x035142CC MOV X2, X31
	0x035142D0 BL 0x351EFE8
	0x035142D4 CBZ X20, 0x35144C8
	0x035142D8 LDR W2, [X20 + 0x18]
	0x035142DC ADRP X22, 0xBDF000
	0x035142E0 LDR X22, [X22 + 0x618]
	0x035142E4 MOV X0, X21
	0x035142E8 MOV X1, X19
	0x035142EC BL 0x3515C70
	0x035142F0 LDR W23, [X20 + 0x18]
	0x035142F4 LDR X0, [X22]
	0x035142F8 SBFM W21, W23, 0x3, 0x1F
	0x035142FC ADD W1, W21, 0x1
	0x03514300 BL 0x1C16D6C
	0x03514304 CMP W23, 0x8
	0x03514308 MOV X1, X0
	0x0351430C B.LT 0x351443C
	0x03514310 CMP W21, 0x1
	0x03514314 MOV X13, X31
	0x03514318 MOV X8, X31
	0x0351431C ADD X9, X20, 0x27
	0x03514320 CSINC W3, W21, W31, GT
	0x03514324 ADD X10, X1, 0x20
	0x03514328 LDR W12, [X20 + 0x18]
	0x0351432C CMP X13, X12
	0x03514330 B.CS 0x35144C4
	0x03514334 MOV X11, X13
	0x03514338 ADD X13, X13, 0x1
	0x0351433C CMP X13, X12
	0x03514340 B.CS 0x35144C4
	0x03514344 ADD X14, X9, X11
	0x03514348 LDURB W15, [X14 - 0x7]
	0x0351434C LDURB W14, [X14 - 0x6]
	0x03514350 ADD X13, X13, 0x1
	0x03514354 ORR W16, W15, 0x2
	0x03514358 CMP W14, 0x0
	0x0351435C CSEL W15, W15, W16, EQ
	0x03514360 CMP X13, X12
	0x03514364 B.CS 0x35144C4
	0x03514368 ADD X14, X9, X11
	0x0351436C LDURB W17, [X14 - 0x5]
	0x03514370 ORR W0, W15, 0x4
	0x03514374 ADD X16, X13, 0x1
	0x03514378 CMP W17, 0x0
	0x0351437C CSEL W13, W15, W0, EQ
	0x03514380 CMP X16, X12
	0x03514384 B.CS 0x35144C4
	0x03514388 LDURB W15, [X14 - 0x4]
	0x0351438C ORR W17, W13, 0x8
	0x03514390 ADD X14, X16, 0x1
	0x03514394 CMP W15, 0x0
	0x03514398 CSEL W13, W13, W17, EQ
	0x0351439C CMP X14, X12
	0x035143A0 B.CS 0x35144C4
	0x035143A4 ADD X15, X9, X11
	0x035143A8 LDURB W17, [X15 - 0x3]
	0x035143AC ORR W0, W13, 0x10
	0x035143B0 ADD X16, X14, 0x1
	0x035143B4 CMP W17, 0x0
	0x035143B8 CSEL W14, W13, W0, EQ
	0x035143BC CMP X16, X12
	0x035143C0 B.CS 0x35144C4
	0x035143C4 LDURB W15, [X15 - 0x2]
	0x035143C8 ORR W17, W14, 0x20
	0x035143CC ADD X13, X16, 0x1
	0x035143D0 CMP W15, 0x0
	0x035143D4 CSEL W14, W14, W17, EQ
	0x035143D8 CMP X13, X12
	0x035143DC B.CS 0x35144C4
	0x035143E0 ADD X15, X9, X11
	0x035143E4 LDURB W15, [X15 - 0x1]
	0x035143E8 ORR W16, W14, 0x40
	0x035143EC ADD X13, X13, 0x1
	0x035143F0 CMP W15, 0x0
	0x035143F4 CSEL W14, W14, W16, EQ
	0x035143F8 CMP X13, X12
	0x035143FC B.CS 0x35144C4
	0x03514400 LDRB W12, [X9, X11, LSL]
	0x03514404 ORR W15, W14, 0xFFFFFF80
	0x03514408 CMP W12, 0x0
	0x0351440C CSEL W12, W14, W15, EQ
	0x03514410 CBZ X1, 0x35144C8
	0x03514414 LDR W14, [X1 + 0x18]
	0x03514418 CMP X8, X14
	0x0351441C B.CS 0x35144C4
	0x03514420 STRB W12, [X10, X8, LSL]
	0x03514424 ADD X8, X8, 0x1
	0x03514428 CMP X3, X8
	0x0351442C ADD X13, X13, 0x1
	0x03514430 B.NE 0x3514328
	0x03514434 ADD X11, X11, 0x8
	0x03514438 B 0x3514444
	0x0351443C MOV W11, W31
	0x03514440 MOV W3, W31
	0x03514444 LDR W10, [X20 + 0x18]
	0x03514448 CMP W11, W10
	0x0351444C B.GE 0x35144A4
	0x03514450 SUB W10, W10, W11
	0x03514454 ADD X11, X20, W11, UXTW
	0x03514458 MOV X9, X31
	0x0351445C MOV W8, W31
	0x03514460 ADD X11, X11, 0x20
	0x03514464 MOVZ W12, 0x1
	0x03514468 LDRB W13, [X11, X9, LSL]
	0x0351446C LSLV W14, W12, W9
	0x03514470 ADD X9, X9, 0x1
	0x03514474 CMP W13, 0x0
	0x03514478 CSEL W13, W31, W14, EQ
	0x0351447C CMP W10, W9
	0x03514480 ORR W8, W13, W8, 0x0
	0x03514484 B.NE 0x3514468
	0x03514488 CBZ X1, 0x35144C8
	0x0351448C LDR W9, [X1 + 0x18]
	0x03514490 CMP W3, W9
	0x03514494 B.CS 0x35144C4
	0x03514498 ADD X9, X1, W3, UXTW
	0x0351449C ADD W3, W3, 0x1
	0x035144A0 STRB W8, [X9 + 0x20]
	0x035144A4 CBZ X19, 0x35144C8
	0x035144A8 MOV X0, X19
	0x035144AC LDP X20, X19, [X31 + 0x20]
	0x035144B0 LDP X22, X21, [X31 + 0x10]
	0x035144B4 MOV W2, W31
	0x035144B8 MOV X4, X31
	0x035144BC LDP X30, X23, [X31], #0x30
	0x035144C0 B 0x3517F60
	0x035144C4 BL 0x1C16F28
	0x035144C8 BL 0x1C16F20
	0x035144CC STR X30, [X31 - 0x40]!
	0x035144D0 STP X24, X23, [X31 + 0x10]
	0x035144D4 STP X22, X21, [X31 + 0x20]
	0x035144D8 STP X20, X19, [X31 + 0x30]
	0x035144DC ADRP X21, 0xECB000
	0x035144E0 LDRB W8, [X21 + 0xB01]
	0x035144E4 MOV W22, W3
	0x035144E8 MOV X23, X2
	0x035144EC MOV X19, X1
	0x035144F0 MOV X20, X0
	0x035144F4 TBNZ X8, 0x0, 0x351450C
	0x035144F8 ADRP X0, 0xBDF000
	0x035144FC LDR X0, [X0 + 0xAC8]
	0x03514500 BL 0x1C16CF4
	0x03514504 MOVZ W8, 0x1
	0x03514508 STRB W8, [X21 + 0xB01]
	0x0351450C CBZ X23, 0x3514538
	0x03514510 ADRP X8, 0xBDF000
	0x03514514 LDR X8, [X8 + 0xAC8]
	0x03514518 MOV X0, X23
	0x0351451C LDR X24, [X8]
	0x03514520 MOV X1, X24
	0x03514524 BL 0x1C16E00
	0x03514528 MOV X21, X0
	0x0351452C CBZ X0, 0x3514634
	0x03514530 TBNZ X22, 0x0, 0x3514540
	0x03514534 B 0x3514554
	0x03514538 MOV X21, X31
	0x0351453C TBZ X22, 0x0, 0x3514554
	0x03514540 CBZ X19, 0x3514630
	0x03514544 MOVZ W1, 0x47
	0x03514548 MOV X0, X19
	0x0351454C MOV X2, X31
	0x03514550 BL 0x351EFE8
	0x03514554 CBZ X21, 0x3514630
	0x03514558 LDR W2, [X21 + 0x18]
	0x0351455C MOV X0, X20
	0x03514560 MOV X1, X19
	0x03514564 BL 0x3515C70
	0x03514568 STR W31, [X31 + 0xC]
	0x0351456C LDR X8, [X21 + 0x18]
	0x03514570 CMP W8, 0x1
	0x03514574 B.LT 0x35145B8
	0x03514578 MOVZ W22, 0x1
	0x0351457C SUB W9, W22, 0x1
	0x03514580 CMP W9, W8
	0x03514584 B.CS 0x35145CC
	0x03514588 ADD X8, X21, W9, 0x3, SXTW
	0x0351458C LDR X2, [X8 + 0x20]
	0x03514590 CBZ X2, 0x35145D0
	0x03514594 MOV X0, X20
	0x03514598 MOV X1, X19
	0x0351459C MOV W3, W31
	0x035145A0 BL 0x350D6DC
	0x035145A4 STR W22, [X31 + 0xC]
	0x035145A8 LDR X8, [X21 + 0x18]
	0x035145AC CMP W22, W8
	0x035145B0 ADD W22, W22, 0x1
	0x035145B4 B.LT 0x351457C
	0x035145B8 LDP X20, X19, [X31 + 0x30]
	0x035145BC LDP X22, X21, [X31 + 0x20]
	0x035145C0 LDP X24, X23, [X31 + 0x10]
	0x035145C4 LDR X30, [X31], #0x40
	0x035145C8 RET
	0x035145CC BL 0x1C16F28
	0x035145D0 ADD X0, X31, 0xC
	0x035145D4 MOV X1, X31
	0x035145D8 BL 0x337B6E0
	0x035145DC MOV X19, X0
	0x035145E0 ADRP X0, 0xC20000
	0x035145E4 LDR X0, [X0 + 0x3B8]
	0x035145E8 BL 0x1C16D08
	0x035145EC MOV X1, X19
	0x035145F0 MOV X2, X31
	0x035145F4 BL 0x321B938
	0x035145F8 MOV X19, X0
	0x035145FC ADRP X0, 0xC20000
	0x03514600 LDR X0, [X0 + 0x68]
	0x03514604 BL 0x1C16D08
	0x03514608 BL 0x1C16F10
	0x0351460C MOV X1, X19
	0x03514610 MOV X20, X0
	0x03514614 BL 0x35077D4
	0x03514618 ADRP X0, 0xC20000
	0x0351461C LDR X0, [X0 + 0x3C0]
	0x03514620 BL 0x1C16D08
	0x03514624 MOV X1, X0
	0x03514628 MOV X0, X20
	0x0351462C BL 0x1C16DEC
	0x03514630 BL 0x1C16F20
	0x03514634 MOV X0, X23
	0x03514638 MOV X1, X24
	0x0351463C BL 0x1C171E0
	0x03514640 STP X30, X21, [X31 - 0x20]!
	0x03514644 STP X20, X19, [X31 + 0x10]
	0x03514648 MOV X20, X2
	0x0351464C MOV X19, X1
	0x03514650 MOV X21, X0
	0x03514654 TBZ X3, 0x0, 0x351466C
	0x03514658 CBZ X19, 0x351469C
	0x0351465C MOVZ W1, 0x1A
	0x03514660 MOV X0, X19
	0x03514664 MOV X2, X31
	0x03514668 BL 0x351EFE8
	0x0351466C CBZ X20, 0x351469C
	0x03514670 CBZ X19, 0x351469C
	0x03514674 LDRB W1, [X20 + 0x10]
	0x03514678 MOV X0, X19
	0x0351467C MOV X2, X31
	0x03514680 BL 0x351EFE8
	0x03514684 LDR X2, [X20 + 0x18]
	0x03514688 MOV X1, X19
	0x0351468C LDP X20, X19, [X31 + 0x10]
	0x03514690 MOV X0, X21
	0x03514694 LDP X30, X21, [X31], #0x20
	0x03514698 B 0x35146A0
	0x0351469C BL 0x1C16F20
	0x035146A0 SUB X31, X31, 0x40
	0x035146A4 STP X30, X23, [X31 + 0x10]
	0x035146A8 STP X22, X21, [X31 + 0x20]
	0x035146AC STP X20, X19, [X31 + 0x30]
	0x035146B0 ADRP X22, 0xECB000
	0x035146B4 LDRB W8, [X22 + 0xAFD]
	0x035146B8 MOV X21, X2
	0x035146BC MOV X19, X1
	0x035146C0 MOV X20, X0
	0x035146C4 TBNZ X8, 0x0, 0x351470C
	0x035146C8 ADRP X0, 0xC20000
	0x035146CC LDR X0, [X0 + 0xD8]
	0x035146D0 BL 0x1C16CF4

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0xECC000
	009 Move W8, [X21+2823]
	010 Move W22, W3
	011 Move X23, X2
	012 Move X19, X1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {41}
	018 Move X0, 0xC21000
	019 Move X0, [X0+16]
	020 Call 0x1C17CF4
	021 Move X0, 0xBE7000
	022 Move X0, [X0+752]
	023 Call 0x1C17CF4
	024 Move X0, 0xBE0000
	025 Move X0, [X0+3584]
	026 Call 0x1C17CF4
	027 Move X0, 0xBE8000
	028 Move X0, [X0+3512]
	029 Call 0x1C17CF4
	030 Move X0, 0xBE0000
	031 Move X0, [X0+3608]
	032 Call 0x1C17CF4
	033 Move X0, 0xBE7000
	034 Move X0, [X0+760]
	035 Call 0x1C17CF4
	036 Move X0, 0xBE8000
	037 Move X0, [X0+3840]
	038 Call 0x1C17CF4
	039 Move W8, 1
	040 Move [X21+2823], W8
	041 Move [X31+8], X31
	042 Compare X23, 0
	043 JumpIfEqual {253}
	044 Move X8, 0xBE7000
	045 Move X8, [X8+760]
	046 Move X0, X23
	047 Move X24, [X8]
	048 Move X1, X24
	049 Call 0x1C17E00
	050 Compare X0, 0
	051 JumpIfEqual {254}
	052 Move X21, X0
	053 Move X0, X23
	054 Move X1, X31
	055 Call "il2cpp_vm_object_is_inst", X0
	056 Compare X0, 0
	057 JumpIfEqual {253}
	058 Move X8, [X0]
	059 Move X24, 0xBE8000
	060 Move X9, [X8+1064]
	061 Move X1, [X8+1072]
	062 Move X24, [X24+3840]
	063 NotImplemented "Instruction BLR not yet implemented."
	064 Move X8, [X24]
	065 Move X23, X0
	066 Move W9, [X8+224]
	067 Compare W9, 0
	068 JumpIfNotEqual {72}
	069 Move X0, X8
	070 Call 0x1C17DFC
	071 Move X8, [X24]
	072 Move X8, [X8+184]
	073 Move X0, [X8]
	074 Compare X0, 0
	075 JumpIfEqual {253}
	076 Move X8, 0xC21000
	077 Move X8, [X8+16]
	078 Add X2, X31, 8
	079 Move X1, X23
	080 Move X3, [X8]
	081 Call Dictionary`2<Object, Object>.TryGetValue, X0, X1, X2
	082 Move TEMP, X0
	083 And TEMP, TEMP, 1
	084 Compare TEMP, 1
	085 JumpIfNotEqual {257}
	086 Move TEMP, X22
	087 And TEMP, TEMP, 1
	088 Compare TEMP, 1
	089 JumpIfNotEqual {96}
	090 Compare X19, 0
	091 JumpIfEqual {253}
	092 Move W1, 83
	093 Move X0, X19
	094 Move X2, X31
	095 Call StreamBuffer.WriteByte, X0, X1
	096 Move X10, 0xBE7000
	097 Move X8, [X21]
	098 Move X10, [X10+752]
	099 NotImplemented "Instruction LDRH not yet implemented."
	100 Move X1, [X10]
	101 Compare X9, 0
	102 JumpIfEqual {109}
	103 Move X10, [X8+176]
	104 Add X10, X10, 8
	105 NotImplemented "Instruction LDUR not yet implemented."
	106 NotImplemented "Instruction CMP not yet implemented."
	107 Subtract X9, X9, 1
	108 Add X10, X10, 16
	109 Move W2, 1
	110 Move X0, X21
	111 Call 0x1C5D788
	112 Move W9, [X10]
	113 Add W9, W9, 1
	114 Add X8, X8, W9
	115 Add X0, X8, 312
	116 Move X8, [X0]
	117 Move X1, [X0+8]
	118 Move X0, X21
	119 NotImplemented "Instruction BLR not yet implemented."
	120 Move W2, W0
	121 Move X0, X20
	122 Move X1, X19
	123 Call Protocol18.WriteCompressedUInt32, X0, X1, X2
	124 Move X8, [X31+8]
	125 Compare X8, 0
	126 JumpIfEqual {253}
	127 Compare X19, 0
	128 JumpIfEqual {253}
	129 Move W1, [X8+16]
	130 Move X22, 0xBE8000
	131 Move X22, [X22+3512]
	132 Move X0, X19
	133 Move X2, X31
	134 Call StreamBuffer.WriteByte, X0, X1
	135 Move X8, [X21]
	136 Move X1, [X22]
	137 NotImplemented "Instruction LDRH not yet implemented."
	138 Compare X9, 0
	139 JumpIfEqual {146}
	140 Move X10, [X8+176]
	141 Add X10, X10, 8
	142 NotImplemented "Instruction LDUR not yet implemented."
	143 NotImplemented "Instruction CMP not yet implemented."
	144 Subtract X9, X9, 1
	145 Add X10, X10, 16
	146 Move X0, X21
	147 Move W2, W31
	148 Call 0x1C5D788
	149 NotImplemented "Instruction LDRSW not yet implemented."
	150 Add X8, X8, X9
	151 Add X0, X8, 312
	152 Move X8, [X0]
	153 Move X1, [X0+8]
	154 Move X22, 0xBE0000
	155 Move X22, [X22+3584]
	156 Move X0, X21
	157 NotImplemented "Instruction BLR not yet implemented."
	158 Move X21, X0
	159 Compare X0, 0
	160 JumpIfEqual {264}
	161 Move X23, 0xBE0000
	162 Move X23, [X23+3608]
	163 Move X8, [X21]
	164 Move X1, [X23]
	165 NotImplemented "Instruction LDRH not yet implemented."
	166 Compare X9, 0
	167 JumpIfEqual {174}
	168 Move X10, [X8+176]
	169 Add X10, X10, 8
	170 NotImplemented "Instruction LDUR not yet implemented."
	171 NotImplemented "Instruction CMP not yet implemented."
	172 Subtract X9, X9, 1
	173 Add X10, X10, 16
	174 Move X0, X21
	175 Move W2, W31
	176 Call 0x1C5D788
	177 NotImplemented "Instruction LDRSW not yet implemented."
	178 Add X8, X8, X9
	179 Add X0, X8, 312
	180 Move X8, [X0]
	181 Move X1, [X0+8]
	182 Move X0, X21
	183 NotImplemented "Instruction BLR not yet implemented."
	184 Move TEMP, X0
	185 And TEMP, TEMP, 1
	186 Compare TEMP, 1
	187 JumpIfNotEqual {215}
	188 Move X8, [X21]
	189 Move X1, [X23]
	190 NotImplemented "Instruction LDRH not yet implemented."
	191 Compare X9, 0
	192 JumpIfEqual {199}
	193 Move X10, [X8+176]
	194 Add X10, X10, 8
	195 NotImplemented "Instruction LDUR not yet implemented."
	196 NotImplemented "Instruction CMP not yet implemented."
	197 Subtract X9, X9, 1
	198 Add X10, X10, 16
	199 Move W2, 1
	200 Move X0, X21
	201 Call 0x1C5D788
	202 Move W9, [X10]
	203 Add W9, W9, 1
	204 Add X8, X8, W9
	205 Add X0, X8, 312
	206 Move X8, [X0]
	207 Move X1, [X0+8]
	208 Move X0, X21
	209 NotImplemented "Instruction BLR not yet implemented."
	210 Move X1, [X31+8]
	211 Move X3, X0
	212 Move X0, X20
	213 Move X2, X19
	214 Call Protocol18.WriteCustomTypeBody, X0, X1, X2, X3
	215 Move X19, X31
	216 Move X1, [X22]
	217 Move X0, X21
	218 Call 0x1C17E00
	219 Compare X0, 0
	220 JumpIfEqual {243}
	221 Move X8, [X0]
	222 Move X1, [X22]
	223 Move X20, X0
	224 NotImplemented "Instruction LDRH not yet implemented."
	225 Compare X9, 0
	226 JumpIfEqual {233}
	227 Move X10, [X8+176]
	228 Add X10, X10, 8
	229 NotImplemented "Instruction LDUR not yet implemented."
	230 NotImplemented "Instruction CMP not yet implemented."
	231 Subtract X9, X9, 1
	232 Add X10, X10, 16
	233 Move X0, X20
	234 Move W2, W31
	235 Call 0x1C5D788
	236 NotImplemented "Instruction LDRSW not yet implemented."
	237 Add X8, X8, X9
	238 Add X0, X8, 312
	239 Move X8, [X0]
	240 Move X1, [X0+8]
	241 Move X0, X20
	242 NotImplemented "Instruction BLR not yet implemented."
	243 Compare X19, 0
	244 JumpIfNotEqual {265}
	245 Move X20, [X31+48]
	246 Move X19, [X31+56]
	247 Move X22, [X31+32]
	248 Move X21, [X31+40]
	249 Move X24, [X31+16]
	250 Move X23, [X31+24]
	251 Move X30, [X31+64]
	252 Return 
	253 Call 0x1C17F20
	254 Move X0, X23
	255 Move X1, X24
	256 Call 0x1C181E0
	257 Move X0, 0xC21000
	258 Move X0, [X0+936]
	259 Call 0x1C17D08
	260 Move X19, X0
	261 Compare X23, 0
	262 JumpIfNotEqual {267}
	263 Move X1, X31
	264 Call 0x1C17F20
	265 Move X0, X19
	266 Call 0x1C17F18
	267 Move X8, [X23]
	268 Move X0, X23
	269 Move X9, [X8+360]
	270 Move X1, [X8+368]
	271 NotImplemented "Instruction BLR not yet implemented."
	272 Move X1, X0
	273 Move X0, X19
	274 Move X2, X31
	275 Call String.Concat, X0, X1
	276 Move X19, X0
	277 Move X0, 0xBE0000
	278 Move X0, [X0+2000]
	279 Call 0x1C17D08
	280 Call 0x1C17F10
	281 Move X1, X19
	282 Move X2, X31
	283 Move X20, X0
	284 Call Exception..ctor, X0, X1
	285 Move X0, 0xC21000
	286 Move X0, [X0+944]
	287 Call 0x1C17D08
	288 Move X1, X0
	289 Move X0, X20
	290 Call 0x1C17DEC
	291 Move X20, X0
	292 NotImplemented "Instruction CMP not yet implemented."
	293 Move X0, X20
	294 Call 0x3EB2AD0
	295 Move X19, [X0]
	296 Call 0x3EB2AE0
	297 Move X19, X31
	298 Move X20, X0
	299 Move X1, [X22]
	300 Move X0, X21
	301 Call 0x1C17E00
	302 Move X21, X0
	303 Compare X0, 0
	304 JumpIfEqual {326}
	305 Move X8, [X21]
	306 Move X1, [X22]
	307 NotImplemented "Instruction LDRH not yet implemented."
	308 Compare X9, 0
	309 JumpIfEqual {316}
	310 Move X10, [X8+176]
	311 Add X10, X10, 8
	312 NotImplemented "Instruction LDUR not yet implemented."
	313 NotImplemented "Instruction CMP not yet implemented."
	314 Subtract X9, X9, 1
	315 Add X10, X10, 16
	316 Move X0, X21
	317 Move W2, W31
	318 Call 0x1C5D788
	319 NotImplemented "Instruction LDRSW not yet implemented."
	320 Add X8, X8, X9
	321 Add X0, X8, 312
	322 Move X8, [X0]
	323 Move X1, [X0+8]
	324 Move X0, X21
	325 NotImplemented "Instruction BLR not yet implemented."
	326 Compare X19, 0
	327 JumpIfNotEqual {330}
	328 Move X0, X20
	329 Call 0x1D2D690
	330 Move X0, X19
	331 Call 0x1C17F18
	332 Call 0x1991590

Method: System.Boolean WriteArrayHeader(ExitGames.Client.Photon.StreamBuffer stream, System.Type type)

Disassembly:
	0x03516078 BL 0x32C5BD8
	0x0351607C LDR X8, [X20]
	0x03516080 LDP X22, X21, [X31 + 0x10]
	0x03516084 LDR X8, [X8 + 0xB8]
	0x03516088 STR X19, [X8]
	0x0351608C LDP X20, X19, [X31 + 0x20]
	0x03516090 LDR X30, [X31], #0x30
	0x03516094 RET
	0x03516098 LDR W8, [X0]
	0x0351609C CMP W8, 0x1
	0x035160A0 CSET W0, EQ
	0x035160A4 RET
	0x035160A8 AND W8, W1, 0x1
	0x035160AC STR W8, [X0]
	0x035160B0 RET
	0x035160B4 STR X30, [X31 - 0x20]!
	0x035160B8 STP X20, X19, [X31 + 0x10]
	0x035160BC ADRP X20, 0xEC9000
	0x035160C0 ADRP X19, 0xBE6000
	0x035160C4 LDRB W8, [X20 + 0xB10]
	0x035160C8 LDR X19, [X19 + 0x548]
	0x035160CC TBNZ X8, 0x0, 0x35160E4
	0x035160D0 ADRP X0, 0xBE6000
	0x035160D4 LDR X0, [X0 + 0x548]
	0x035160D8 BL 0x1C16CF4
	0x035160DC MOVZ W8, 0x1
	0x035160E0 STRB W8, [X20 + 0xB10]
	0x035160E4 LDR X8, [X19]
	0x035160E8 MOVZ W9, 0x1
	0x035160EC LDR X8, [X8 + 0xB8]
	0x035160F0 STR X9, [X8]
	0x035160F4 LDR X8, [X19]
	0x035160F8 LDP X20, X19, [X31 + 0x10]
	0x035160FC LDR X8, [X8 + 0xB8]
	0x03516100 STR X31, [X8 + 0x8]
	0x03516104 LDR X30, [X31], #0x20
	0x03516108 RET
	0x0351610C STR X30, [X31 - 0x30]!
	0x03516110 STP X22, X21, [X31 + 0x10]
	0x03516114 STP X20, X19, [X31 + 0x20]
	0x03516118 ADRP X21, 0xEC9000
	0x0351611C ADRP X22, 0xBE3000
	0x03516120 LDRB W8, [X21 + 0xB11]
	0x03516124 LDR X22, [X22 + 0xCC0]
	0x03516128 MOV X20, X1
	0x0351612C MOV X19, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Compare X2, 0
	006 JumpIfEqual {56}
	007 Move X8, [X2]
	008 Move X19, X1
	009 Move X20, X0
	010 Move X0, X2
	011 Move X9, [X8+1064]
	012 Move X1, [X8+1072]
	013 NotImplemented "Instruction BLR not yet implemented."
	014 Compare X0, 0
	015 JumpIfEqual {56}
	016 Move X21, X0
	017 Move X0, X21
	018 Move X1, X31
	019 Call Type.get_IsArray, X0
	020 Move TEMP, X0
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfNotEqual {38}
	024 Compare X19, 0
	025 JumpIfEqual {56}
	026 Move W1, 64
	027 Move X0, X19
	028 Move X2, X31
	029 Call StreamBuffer.WriteByte, X0, X1
	030 Move X8, [X21]
	031 Move X0, X21
	032 Move X9, [X8+1064]
	033 Move X1, [X8+1072]
	034 NotImplemented "Instruction BLR not yet implemented."
	035 Move X21, X0
	036 Compare X0, 0
	037 JumpIfNotEqual {17}
	038 Move X0, X20
	039 Move X1, X21
	040 Call Protocol18.GetCodeOfType, X0, X1
	041 Move W20, W0
	042 And W31, W0, 255
	043 Compare X19, 0
	044 JumpIfEqual {56}
	045 Or W1, W20, 0xFFFFFF80
	046 Move X0, X19
	047 Move X2, X31
	048 Call StreamBuffer.WriteByte, X0, X1
	049 And W31, W20, 255
	050 Move X20, [X31+16]
	051 Move X19, [X31+24]
	052 NotImplemented "Instruction CSET not yet implemented."
	053 Move X30, [X31+32]
	054 Move X21, [X31+40]
	055 Return X0
	056 Call 0x1C17F20

Method: System.Void WriteDictionaryElements(ExitGames.Client.Photon.StreamBuffer stream, System.Collections.IDictionary dictionary, ExitGames.Client.Photon.Protocol18/GpType keyWriteType, ExitGames.Client.Photon.Protocol18/GpType valueWriteType)

Disassembly:
	0x03516130 TBNZ X8, 0x0, 0x3516160
	0x03516134 ADRP X0, 0xBE5000
	0x03516138 LDR X0, [X0 + 0xBC8]
	0x0351613C BL 0x1C16CF4
	0x03516140 ADRP X0, 0xBE3000
	0x03516144 LDR X0, [X0 + 0xCC0]
	0x03516148 BL 0x1C16CF4
	0x0351614C ADRP X0, 0xC1E000
	0x03516150 LDR X0, [X0 + 0x410]
	0x03516154 BL 0x1C16CF4
	0x03516158 MOVZ W8, 0x1
	0x0351615C STRB W8, [X21 + 0xB11]
	0x03516160 LDR X0, [X22]
	0x03516164 BL 0x1C16F10
	0x03516168 MOV X1, X31
	0x0351616C MOV X21, X0
	0x03516170 BL 0x33BDD8C
	0x03516174 MOV X0, X19
	0x03516178 MOV X1, X20
	0x0351617C MOV X2, X31
	0x03516180 STR X21, [X19 + 0x60]
	0x03516184 BL 0x34F8B1C
	0x03516188 MOVZ W1, 0x3
	0x0351618C MOV X0, X19
	0x03516190 MOV X2, X31
	0x03516194 BL 0x34F9710
	0x03516198 TBZ X0, 0x0, 0x3516224
	0x0351619C MOV X0, X19
	0x035161A0 MOV X1, X31
	0x035161A4 BL 0x34F88A0
	0x035161A8 CBZ X0, 0x3516238
	0x035161AC ADRP X9, 0xBE5000
	0x035161B0 LDR X8, [X0]
	0x035161B4 LDR X9, [X9 + 0xBC8]
	0x035161B8 ADRP X10, 0xC1E000
	0x035161BC MOV X20, X0
	0x035161C0 LDR X1, [X9]
	0x035161C4 LDR X10, [X10 + 0x410]
	0x035161C8 LDRH W9, [X8 + 0x12E]
	0x035161CC LDR X21, [X10]
	0x035161D0 CBZ X9, 0x35161F4
	0x035161D4 LDR X10, [X8 + 0xB0]
	0x035161D8 ADD X10, X10, 0x8
	0x035161DC LDUR X11, [X10 - 0x8]
	0x035161E0 CMP X11, X1
	0x035161E4 B.EQ 0x3516204
	0x035161E8 SUBS X9, X9, 0x1
	0x035161EC ADD X10, X10, 0x10
	0x035161F0 B.NE 0x35161DC
	0x035161F4 MOV X0, X20
	0x035161F8 MOV W2, W31
	0x035161FC BL 0x1C5C788
	0x03516200 B 0x3516210
	0x03516204 LDRSW X9, [X10]
	0x03516208 ADD X8, X8, X9, 0x4, LSL
	0x0351620C ADD X0, X8, 0x138
	0x03516210 LDP X8, X3, [X0]
	0x03516214 MOVZ W1, 0x3
	0x03516218 MOV X0, X20
	0x0351621C MOV X2, X21
	0x03516220 BLR X8
	0x03516224 STRB W31, [X19 + 0x19]
	0x03516228 LDP X20, X19, [X31 + 0x20]
	0x0351622C LDP X22, X21, [X31 + 0x10]
	0x03516230 LDR X30, [X31], #0x30
	0x03516234 RET
	0x03516238 BL 0x1C16F20
	0x0351623C STP X30, X21, [X31 - 0x20]!
	0x03516240 STP X20, X19, [X31 + 0x10]
	0x03516244 MOV X19, X0
	0x03516248 BL 0x35162D0
	0x0351624C MOV X0, X19
	0x03516250 LDP X20, X19, [X31 + 0x10]
	0x03516254 MOV X1, X31
	0x03516258 LDP X30, X21, [X31], #0x20
	0x0351625C B 0x33CB4DC
	0x03516260 CMP W1, 0x1
	0x03516264 MOV X21, X0
	0x03516268 B.NE 0x3516298
	0x0351626C MOV X0, X21
	0x03516270 BL 0x3EB1AD0
	0x03516274 LDR X20, [X0]
	0x03516278 BL 0x3EB1AE0
	0x0351627C MOV X0, X19
	0x03516280 MOV X1, X31
	0x03516284 BL 0x33CB4DC
	0x03516288 CBNZ X20, 0x35162A0
	0x0351628C LDP X20, X19, [X31 + 0x10]
	0x03516290 LDP X30, X21, [X31], #0x20
	0x03516294 RET
	0x03516298 MOV X20, X31
	0x0351629C B 0x35162AC
	0x035162A0 MOV X0, X20
	0x035162A4 BL 0x1C16F18
	0x035162A8 MOV X21, X0
	0x035162AC MOV X0, X19
	0x035162B0 MOV X1, X31
	0x035162B4 BL 0x33CB4DC
	0x035162B8 CBNZ X20, 0x35162C4
	0x035162BC MOV X0, X21
	0x035162C0 BL 0x1D2C690
	0x035162C4 MOV X0, X20
	0x035162C8 BL 0x1C16F18
	0x035162CC BL 0x1990590
	0x035162D0 STP X30, X21, [X31 - 0x20]!
	0x035162D4 STP X20, X19, [X31 + 0x10]
	0x035162D8 MOV X19, X0
	0x035162DC LDR X0, [X0 + 0x58]
	0x035162E0 MOVZ W8, 0x3
	0x035162E4 STR W8, [X19 + 0x1C]
	0x035162E8 CBZ X0, 0x35162FC
	0x035162EC LDRB W8, [X0 + 0x52]
	0x035162F0 CBZ W8, 0x35162FC
	0x035162F4 MOV X1, X31
	0x035162F8 BL 0x36AC3C8
	0x035162FC STR X31, [X19 + 0x58]
	0x03516300 STR W31, [X19 + 0x1C]
	0x03516304 LDP X20, X19, [X31 + 0x10]
	0x03516308 LDP X30, X21, [X31], #0x20
	0x0351630C RET
	0x03516310 CMP W1, 0x1
	0x03516314 MOV X20, X0
	0x03516318 B.NE 0x35163C8
	0x0351631C MOV X0, X20
	0x03516320 BL 0x3EB1AD0
	0x03516324 MOV X20, X0
	0x03516328 ADRP X0, 0xBDD000
	0x0351632C LDR X0, [X0 + 0x7D0]
	0x03516330 BL 0x1C16D08
	0x03516334 LDR X8, [X20]
	0x03516338 LDR X1, [X8]
	0x0351633C BL 0x1C17270
	0x03516340 TBZ X0, 0x0, 0x35163A0
	0x03516344 LDR X21, [X20]
	0x03516348 BL 0x3EB1AE0
	0x0351634C ADRP X0, 0xC1E000
	0x03516350 LDR X0, [X0 + 0x418]
	0x03516354 BL 0x1C16D08
	0x03516358 MOV X20, X0
	0x0351635C CBZ X21, 0x3516378
	0x03516360 LDR X8, [X21]
	0x03516364 MOV X0, X21
	0x03516368 LDP X9, X1, [X8 + 0x168]
	0x0351636C BLR X9
	0x03516370 MOV X1, X0
	0x03516374 B 0x351637C
	0x03516378 MOV X1, X31
	0x0351637C MOV X0, X20
	0x03516380 MOV X2, X31
	0x03516384 BL 0x321B938
	0x03516388 MOV X2, X0
	0x0351638C MOVZ W1, 0x3
	0x03516390 MOV X0, X19
	0x03516394 MOV X3, X31
	0x03516398 BL 0x34F973C
	0x0351639C B 0x35162FC
	0x035163A0 MOVZ W0, 0x8
	0x035163A4 BL 0x3EB1AF0
	0x035163A8 LDR X8, [X20]
	0x035163AC STR X8, [X0]
	0x035163B0 ADRP X1, 0x99E000
	0x035163B4 ADD X1, X1, 0xE58
	0x035163B8 MOV X2, X31
	0x035163BC BL 0x3EB1B00
	0x035163C0 MOV X20, X0
	0x035163C4 BL 0x3EB1AE0
	0x035163C8 MOV X0, X20
	0x035163CC BL 0x1D2C690
	0x035163D0 BL 0x1990590
	0x035163D4 STR X30, [X31 - 0x30]!
	0x035163D8 STP X22, X21, [X31 + 0x10]
	0x035163DC STP X20, X19, [X31 + 0x20]
	0x035163E0 ADRP X20, 0xEC9000
	0x035163E4 LDRB W8, [X20 + 0xB12]
	0x035163E8 MOV X19, X0
	0x035163EC TBNZ X8, 0x0, 0x351641C
	0x035163F0 ADRP X0, 0xC1E000
	0x035163F4 LDR X0, [X0 + 0x420]
	0x035163F8 BL 0x1C16CF4
	0x035163FC ADRP X0, 0xC09000
	0x03516400 LDR X0, [X0 + 0x1D0]
	0x03516404 BL 0x1C16CF4
	0x03516408 ADRP X0, 0xC09000
	0x0351640C LDR X0, [X0 + 0x1D8]
	0x03516410 BL 0x1C16CF4
	0x03516414 MOVZ W8, 0x1
	0x03516418 STRB W8, [X20 + 0xB12]
	0x0351641C LDR X20, [X19 + 0x60]
	0x03516420 STRB W31, [X31 + 0xC]
	0x03516424 ADD X1, X31, 0xC
	0x03516428 MOV X0, X20
	0x0351642C MOV X2, X31
	0x03516430 BL 0x33DE64C
	0x03516434 MOV X0, X19
	0x03516438 MOV X1, X31
	0x0351643C BL 0x34F8BA0
	0x03516440 MOV X21, X31
	0x03516444 TBZ X0, 0x0, 0x3516458
	0x03516448 MOVZ W8, 0x1
	0x0351644C STR W8, [X19 + 0x1C]
	0x03516450 MOVZ W22, 0x4
	0x03516454 B 0x351645C
	0x03516458 MOVZ W22, 0x3
	0x0351645C LDRB W8, [X31 + 0xC]
	0x03516460 CBZ W8, 0x3516470
	0x03516464 MOV X0, X20
	0x03516468 MOV X1, X31
	0x0351646C BL 0x33E14E4
	0x03516470 CBNZ X21, 0x351650C
	0x03516474 ORR W8, W22, 0x4
	0x03516478 CMP W8, 0x4
	0x0351647C B.NE 0x35164F4
	0x03516480 ADRP X8, 0xC09000
	0x03516484 LDR X8, [X8 + 0x1D0]
	0x03516488 ADRP X20, 0xC1E000
	0x0351648C ADRP X21, 0xC09000
	0x03516490 LDR X0, [X8]
	0x03516494 LDR X20, [X20 + 0x420]
	0x03516498 LDR X21, [X21 + 0x1D8]
	0x0351649C BL 0x1C16F10
	0x035164A0 LDR X2, [X20]
	0x035164A4 MOV X1, X19
	0x035164A8 MOV X3, X31
	0x035164AC MOV X20, X0
	0x035164B0 BL 0x33DD08C
	0x035164B4 LDR X0, [X21]
	0x035164B8 BL 0x1C16F10
	0x035164BC MOV X1, X20
	0x035164C0 MOV X2, X31
	0x035164C4 MOV X19, X0
	0x035164C8 BL 0x33E67F0
	0x035164CC CBZ X19, 0x3516514
	0x035164D0 MOVZ W1, 0x1
	0x035164D4 MOV X0, X19
	0x035164D8 MOV X2, X31
	0x035164DC MOVZ W20, 0x1
	0x035164E0 BL 0x33E7018
	0x035164E4 MOV X0, X19
	0x035164E8 MOV X1, X31
	0x035164EC BL 0x33E6A6C
	0x035164F0 B 0x35164F8
	0x035164F4 MOV W20, W31
	0x035164F8 MOV W0, W20
	0x035164FC LDP X20, X19, [X31 + 0x20]
	0x03516500 LDP X22, X21, [X31 + 0x10]
	0x03516504 LDR X30, [X31], #0x30
	0x03516508 RET
	0x0351650C MOV X0, X21
	0x03516510 BL 0x1C16F18
	0x03516514 BL 0x1C16F20

ISIL:
	001 Move [X31-80], X30
	002 Move [X31-72], X27
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Move X24, 0xECA000
	012 Move W8, [X24+2824]
	013 Move W19, W4
	014 Move W20, W3
	015 Move X23, X2
	016 Move X21, X1
	017 Move X22, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {39}
	022 Move X0, 0xBE6000
	023 Move X0, [X0+3856]
	024 Call 0x1C17CF4
	025 Move X0, 0xBE5000
	026 Move X0, [X0+752]
	027 Call 0x1C17CF4
	028 Move X0, 0xBDE000
	029 Move X0, [X0+2072]
	030 Call 0x1C17CF4
	031 Move X0, 0xBDE000
	032 Move X0, [X0+3584]
	033 Call 0x1C17CF4
	034 Move X0, 0xBDE000
	035 Move X0, [X0+3608]
	036 Call 0x1C17CF4
	037 Move W8, 1
	038 Move [X24+2824], W8
	039 Compare X23, 0
	040 JumpIfEqual {213}
	041 Move X10, 0xBE5000
	042 Move X8, [X23]
	043 Move X10, [X10+752]
	044 Move X24, 0xBDE000
	045 NotImplemented "Instruction LDRH not yet implemented."
	046 Move X1, [X10]
	047 Move X24, [X24+2072]
	048 Compare X9, 0
	049 JumpIfEqual {56}
	050 Move X10, [X8+176]
	051 Add X10, X10, 8
	052 NotImplemented "Instruction LDUR not yet implemented."
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Subtract X9, X9, 1
	055 Add X10, X10, 16
	056 Move W2, 1
	057 Move X0, X23
	058 Call 0x1C5D788
	059 Move W9, [X10]
	060 Add W9, W9, 1
	061 Add X8, X8, W9
	062 Add X0, X8, 312
	063 Move X8, [X0]
	064 Move X1, [X0+8]
	065 Move X0, X23
	066 NotImplemented "Instruction BLR not yet implemented."
	067 Move W2, W0
	068 Move X0, X22
	069 Move X1, X21
	070 Call Protocol18.WriteCompressedUInt32, X0, X1, X2
	071 Move X8, [X23]
	072 Move X1, [X24]
	073 NotImplemented "Instruction LDRH not yet implemented."
	074 Compare X9, 0
	075 JumpIfEqual {82}
	076 Move X10, [X8+176]
	077 Add X10, X10, 8
	078 NotImplemented "Instruction LDUR not yet implemented."
	079 NotImplemented "Instruction CMP not yet implemented."
	080 Subtract X9, X9, 1
	081 Add X10, X10, 16
	082 Move W2, 6
	083 Move X0, X23
	084 Call 0x1C5D788
	085 Move W9, [X10]
	086 Add W9, W9, 6
	087 Add X8, X8, W9
	088 Add X0, X8, 312
	089 Move X8, [X0]
	090 Move X1, [X0+8]
	091 Move X25, 0xBDE000
	092 Move X25, [X25+3584]
	093 Move X0, X23
	094 NotImplemented "Instruction BLR not yet implemented."
	095 Move X23, X0
	096 Compare X0, 0
	097 JumpIfEqual {214}
	098 Move X26, 0xBDE000
	099 Move X27, 0xBE6000
	100 Move X26, [X26+3608]
	101 Move X27, [X27+3856]
	102 Move X8, [X23]
	103 Move X1, [X26]
	104 NotImplemented "Instruction LDRH not yet implemented."
	105 Compare X9, 0
	106 JumpIfEqual {113}
	107 Move X10, [X8+176]
	108 Add X10, X10, 8
	109 NotImplemented "Instruction LDUR not yet implemented."
	110 NotImplemented "Instruction CMP not yet implemented."
	111 Subtract X9, X9, 1
	112 Add X10, X10, 16
	113 Move X0, X23
	114 Move W2, W31
	115 Call 0x1C5D788
	116 NotImplemented "Instruction LDRSW not yet implemented."
	117 Add X8, X8, X9
	118 Add X0, X8, 312
	119 Move X8, [X0]
	120 Move X1, [X0+8]
	121 Move X0, X23
	122 NotImplemented "Instruction BLR not yet implemented."
	123 Move TEMP, X0
	124 And TEMP, TEMP, 1
	125 Compare TEMP, 1
	126 JumpIfNotEqual {170}
	127 Move X8, [X23]
	128 Move X1, [X26]
	129 NotImplemented "Instruction LDRH not yet implemented."
	130 Compare X9, 0
	131 JumpIfEqual {138}
	132 Move X10, [X8+176]
	133 Add X10, X10, 8
	134 NotImplemented "Instruction LDUR not yet implemented."
	135 NotImplemented "Instruction CMP not yet implemented."
	136 Subtract X9, X9, 1
	137 Add X10, X10, 16
	138 Move W2, 1
	139 Move X0, X23
	140 Call 0x1C5D788
	141 Move W9, [X10]
	142 Add W9, W9, 1
	143 Add X8, X8, W9
	144 Add X0, X8, 312
	145 Move X8, [X0]
	146 Move X1, [X0+8]
	147 Move X0, X23
	148 NotImplemented "Instruction BLR not yet implemented."
	149 Compare X0, 0
	150 JumpIfEqual {211}
	151 Move X8, [X0]
	152 Move X1, [X27]
	153 Move X8, [X8+64]
	154 Move X9, [X1+64]
	155 NotImplemented "Instruction CMP not yet implemented."
	156 Call 0x1C17E08
	157 Move X2, [X0]
	158 Move X24, [X0+8]
	159 And W31, W20, 255
	160 NotImplemented "Instruction CSET not yet implemented."
	161 Move X0, X22
	162 Move X1, X21
	163 Call Protocol18.Write, X0, X1, X2, X3
	164 And W31, W19, 255
	165 NotImplemented "Instruction CSET not yet implemented."
	166 Move X0, X22
	167 Move X1, X21
	168 Move X2, X24
	169 Call Protocol18.Write, X0, X1, X2, X3
	170 Move X19, X31
	171 Move X1, [X25]
	172 Move X0, X23
	173 Call 0x1C17E00
	174 Compare X0, 0
	175 JumpIfEqual {198}
	176 Move X8, [X0]
	177 Move X1, [X25]
	178 Move X20, X0
	179 NotImplemented "Instruction LDRH not yet implemented."
	180 Compare X9, 0
	181 JumpIfEqual {188}
	182 Move X10, [X8+176]
	183 Add X10, X10, 8
	184 NotImplemented "Instruction LDUR not yet implemented."
	185 NotImplemented "Instruction CMP not yet implemented."
	186 Subtract X9, X9, 1
	187 Add X10, X10, 16
	188 Move X0, X20
	189 Move W2, W31
	190 Call 0x1C5D788
	191 NotImplemented "Instruction LDRSW not yet implemented."
	192 Add X8, X8, X9
	193 Add X0, X8, 312
	194 Move X8, [X0]
	195 Move X1, [X0+8]
	196 Move X0, X20
	197 NotImplemented "Instruction BLR not yet implemented."
	198 Compare X19, 0
	199 JumpIfNotEqual {215}
	200 Move X20, [X31+64]
	201 Move X19, [X31+72]
	202 Move X22, [X31+48]
	203 Move X21, [X31+56]
	204 Move X24, [X31+32]
	205 Move X23, [X31+40]
	206 Move X26, [X31+16]
	207 Move X25, [X31+24]
	208 Move X30, [X31+80]
	209 Move X27, [X31+88]
	210 Return 
	211 Call 0x1C17F20
	212 Call 0x1C181E0
	213 Call 0x1C17F20
	214 Call 0x1C17F20
	215 Move X0, X19
	216 Call 0x1C17F18
	217 Move X20, X0
	218 NotImplemented "Instruction CMP not yet implemented."
	219 Move X0, X20
	220 Call 0x3EB2AD0
	221 Move X19, [X0]
	222 Call 0x3EB2AE0
	223 Move X19, X31
	224 Move X20, X0
	225 Move X1, [X25]
	226 Move X0, X23
	227 Call 0x1C17E00
	228 Move X21, X0
	229 Compare X0, 0
	230 JumpIfEqual {252}
	231 Move X8, [X21]
	232 Move X1, [X25]
	233 NotImplemented "Instruction LDRH not yet implemented."
	234 Compare X9, 0
	235 JumpIfEqual {242}
	236 Move X10, [X8+176]
	237 Add X10, X10, 8
	238 NotImplemented "Instruction LDUR not yet implemented."
	239 NotImplemented "Instruction CMP not yet implemented."
	240 Subtract X9, X9, 1
	241 Add X10, X10, 16
	242 Move X0, X21
	243 Move W2, W31
	244 Call 0x1C5D788
	245 NotImplemented "Instruction LDRSW not yet implemented."
	246 Add X8, X8, X9
	247 Add X0, X8, 312
	248 Move X8, [X0]
	249 Move X1, [X0+8]
	250 Move X0, X21
	251 NotImplemented "Instruction BLR not yet implemented."
	252 Compare X19, 0
	253 JumpIfNotEqual {256}
	254 Move X0, X20
	255 Call 0x1D2D690
	256 Move X0, X19
	257 Call 0x1C17F18
	258 Call 0x1991590

Method: System.Void WriteDictionary(ExitGames.Client.Photon.StreamBuffer stream, System.Object dict, System.Boolean setType)

Disassembly:
	0x035147D4 BL 0x24A0BBC
	0x035147D8 LDP X20, X19, [X31 + 0x30]
	0x035147DC LDP X22, X21, [X31 + 0x20]
	0x035147E0 LDP X30, X23, [X31 + 0x10]
	0x035147E4 ADD X31, X31, 0x40
	0x035147E8 RET
	0x035147EC BL 0x1C16F20
	0x035147F0 B 0x35147FC
	0x035147F4 B 0x35147FC
	0x035147F8 B 0x35147FC
	0x035147FC MOV X19, X0
	0x03514800 CMP W1, 0x1
	0x03514804 B.NE 0x3514838
	0x03514808 MOV X0, X19
	0x0351480C BL 0x3EB1AD0
	0x03514810 LDR X20, [X0]
	0x03514814 BL 0x3EB1AE0
	0x03514818 ADRP X8, 0xC20000
	0x0351481C LDR X8, [X8 + 0xF0]
	0x03514820 ADD X0, X31, 0x0
	0x03514824 LDR X1, [X8]
	0x03514828 BL 0x24A0BBC
	0x0351482C CBZ X20, 0x35147D8
	0x03514830 MOV X0, X20
	0x03514834 BL 0x1C16F18
	0x03514838 MOV X20, X31
	0x0351483C B 0x3514844
	0x03514840 MOV X19, X0
	0x03514844 ADRP X8, 0xC20000
	0x03514848 LDR X8, [X8 + 0xF0]
	0x0351484C LDR X1, [X8]
	0x03514850 ADD X0, X31, 0x0
	0x03514854 BL 0x24A0BBC
	0x03514858 CBNZ X20, 0x3514864
	0x0351485C MOV X0, X19
	0x03514860 BL 0x1D2C690
	0x03514864 MOV X0, X20
	0x03514868 BL 0x1C16F18
	0x0351486C BL 0x1990590
	0x03514870 SUB X31, X31, 0x90
	0x03514874 STR X30, [X31 + 0x60]
	0x03514878 STP X22, X21, [X31 + 0x70]
	0x0351487C STP X20, X19, [X31 + 0x80]
	0x03514880 ADRP X22, 0xECB000
	0x03514884 LDRB W8, [X22 + 0xAFC]
	0x03514888 MOV X21, X2
	0x0351488C MOV X19, X1
	0x03514890 MOV X20, X0
	0x03514894 TBNZ X8, 0x0, 0x35148F4
	0x03514898 ADRP X0, 0xC20000
	0x0351489C LDR X0, [X0 + 0xB8]
	0x035148A0 BL 0x1C16CF4
	0x035148A4 ADRP X0, 0xBE8000
	0x035148A8 LDR X0, [X0 + 0x6E8]
	0x035148AC BL 0x1C16CF4

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0xECC000
	009 Move W8, [X23+2825]
	010 Move W22, W3
	011 Move X20, X2
	012 Move X19, X1
	013 Move X21, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0xBE0000
	019 Move X0, [X0+2072]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X23+2825], W8
	023 Move [X31+12], W31
	024 Move [X31+8], W31
	025 Move TEMP, X22
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfNotEqual {35}
	029 Compare X19, 0
	030 JumpIfEqual {68}
	031 Move W1, 20
	032 Move X0, X19
	033 Move X2, X31
	034 Call StreamBuffer.WriteByte, X0, X1
	035 Compare X20, 0
	036 JumpIfEqual {68}
	037 Move X22, 0xBE0000
	038 Move X22, [X22+2072]
	039 Move X0, X20
	040 Move X1, X31
	041 Call "il2cpp_vm_object_is_inst", X0
	042 Move X2, X0
	043 Add X3, X31, 12
	044 Add X4, X31, 8
	045 Move X0, X21
	046 Move X1, X19
	047 Call Protocol18.WriteDictionaryHeader, X0, X1, X2, X3, X4
	048 Move X22, [X22]
	049 Move X0, X20
	050 Move X1, X22
	051 Call 0x1C17E00
	052 Compare X0, 0
	053 JumpIfEqual {69}
	054 Move X2, X0
	055 Move W4, [X31+8]
	056 Move W3, [X31+12]
	057 Move X0, X21
	058 Move X1, X19
	059 Move X20, [X31+48]
	060 Move X19, [X31+56]
	061 Move X22, [X31+32]
	062 Move X21, [X31+40]
	063 Move X30, [X31+16]
	064 Move X23, [X31+24]
	065 Add X31, X31, 64
	066 Call Protocol18.WriteDictionaryElements, X0, X1, X2, X3, X4
	067 Return 
	068 Call 0x1C17F20
	069 Move X0, X20
	070 Move X1, X22
	071 Call 0x1C181E0

Method: System.Void WriteDictionaryHeader(ExitGames.Client.Photon.StreamBuffer stream, System.Type type, out ExitGames.Client.Photon.Protocol18/GpType keyWriteType, out ExitGames.Client.Photon.Protocol18/GpType valueWriteType)

Disassembly:
	0x03516518 B 0x351651C
	0x0351651C MOV X22, X0
	0x03516520 CMP W1, 0x1
	0x03516524 B.NE 0x3516540
	0x03516528 MOV X0, X22
	0x0351652C BL 0x3EB1AD0
	0x03516530 LDR X21, [X0]
	0x03516534 BL 0x3EB1AE0
	0x03516538 MOV W22, W31
	0x0351653C B 0x351645C
	0x03516540 MOV X21, X31
	0x03516544 B 0x351654C
	0x03516548 MOV X22, X0
	0x0351654C LDRB W8, [X31 + 0xC]
	0x03516550 CBZ W8, 0x3516560
	0x03516554 MOV X0, X20
	0x03516558 MOV X1, X31
	0x0351655C BL 0x33E14E4
	0x03516560 CBNZ X21, 0x351656C
	0x03516564 MOV X0, X22
	0x03516568 BL 0x1D2C690
	0x0351656C MOV X0, X21
	0x03516570 BL 0x1C16F18
	0x03516574 BL 0x1990590
	0x03516578 SUB X31, X31, 0x40
	0x0351657C STP X30, X23, [X31 + 0x10]
	0x03516580 STP X22, X21, [X31 + 0x20]
	0x03516584 STP X20, X19, [X31 + 0x30]
	0x03516588 ADRP X19, 0xEC9000
	0x0351658C LDRB W8, [X19 + 0xB13]
	0x03516590 MOV X20, X0
	0x03516594 TBNZ X8, 0x0, 0x35165AC
	0x03516598 ADRP X0, 0xC1E000
	0x0351659C LDR X0, [X0 + 0x428]
	0x035165A0 BL 0x1C16CF4
	0x035165A4 MOVZ W8, 0x1
	0x035165A8 STRB W8, [X19 + 0xB13]
	0x035165AC MOVZ W1, 0x3
	0x035165B0 MOV X0, X20
	0x035165B4 MOV X2, X31
	0x035165B8 BL 0x34F9710
	0x035165BC TBZ X0, 0x0, 0x35165DC
	0x035165C0 ADRP X8, 0xC1E000
	0x035165C4 LDR X8, [X8 + 0x428]
	0x035165C8 MOVZ W1, 0x3
	0x035165CC MOV X0, X20
	0x035165D0 MOV X3, X31
	0x035165D4 LDR X2, [X8]
	0x035165D8 BL 0x34F973C
	0x035165DC LDR X19, [X20 + 0x60]
	0x035165E0 STRB W31, [X31 + 0xC]
	0x035165E4 ADD X1, X31, 0xC
	0x035165E8 MOV X0, X19
	0x035165EC MOV X2, X31
	0x035165F0 BL 0x33DE64C
	0x035165F4 LDR X0, [X20 + 0x58]
	0x035165F8 MOVZ W8, 0x3
	0x035165FC STR W8, [X20 + 0x1C]
	0x03516600 CBZ X0, 0x351660C
	0x03516604 MOV X1, X31
	0x03516608 BL 0x36AC3C8
	0x0351660C MOV X21, X31
	0x03516610 STR W31, [X20 + 0x1C]
	0x03516614 LDRB W8, [X31 + 0xC]
	0x03516618 CBZ W8, 0x3516628
	0x0351661C MOV X0, X19
	0x03516620 MOV X1, X31
	0x03516624 BL 0x33E14E4
	0x03516628 CBNZ X21, 0x3516644
	0x0351662C LDP X20, X19, [X31 + 0x30]
	0x03516630 LDP X22, X21, [X31 + 0x20]
	0x03516634 LDP X30, X23, [X31 + 0x10]
	0x03516638 MOVZ W0, 0x1
	0x0351663C ADD X31, X31, 0x40
	0x03516640 RET
	0x03516644 MOV X0, X21
	0x03516648 BL 0x1C16F18
	0x0351664C MOV X21, X0
	0x03516650 CMP W1, 0x1
	0x03516654 MOVZ W23, 0x1
	0x03516658 B.NE 0x3516758
	0x0351665C MOV X0, X21
	0x03516660 BL 0x3EB1AD0
	0x03516664 MOV X21, X0
	0x03516668 ADRP X0, 0xBDD000
	0x0351666C LDR X0, [X0 + 0x7D0]
	0x03516670 BL 0x1C16D08
	0x03516674 LDR X8, [X21]
	0x03516678 LDR X1, [X8]
	0x0351667C BL 0x1C17270
	0x03516680 TBZ X0, 0x0, 0x3516704
	0x03516684 LDR X21, [X21]
	0x03516688 BL 0x3EB1AE0
	0x0351668C MOVZ W1, 0x3
	0x03516690 MOV X0, X20
	0x03516694 MOV X2, X31
	0x03516698 BL 0x34F9710
	0x0351669C TBZ X0, 0x0, 0x351660C
	0x035166A0 CBZ X21, 0x35166CC
	0x035166A4 ADRP X0, 0xC1E000
	0x035166A8 LDR X0, [X0 + 0x430]
	0x035166AC BL 0x1C16D08
	0x035166B0 LDR X8, [X21]
	0x035166B4 MOV X22, X0
	0x035166B8 LDP X9, X1, [X8 + 0x168]
	0x035166BC MOV X0, X21
	0x035166C0 BLR X9
	0x035166C4 MOV X1, X0
	0x035166C8 B 0x35166E0
	0x035166CC ADRP X0, 0xC1E000
	0x035166D0 LDR X0, [X0 + 0x430]
	0x035166D4 BL 0x1C16D08
	0x035166D8 MOV X22, X0
	0x035166DC MOV X1, X31
	0x035166E0 MOV X0, X22
	0x035166E4 MOV X2, X31
	0x035166E8 BL 0x321B938
	0x035166EC MOV X2, X0
	0x035166F0 MOVZ W1, 0x3
	0x035166F4 MOV X0, X20
	0x035166F8 MOV X3, X31
	0x035166FC BL 0x34F973C
	0x03516700 B 0x351660C
	0x03516704 MOVZ W0, 0x8
	0x03516708 BL 0x3EB1AF0
	0x0351670C LDR X8, [X21]
	0x03516710 STR X8, [X0]
	0x03516714 ADRP X1, 0x99E000
	0x03516718 ADD X1, X1, 0xE58
	0x0351671C MOV X2, X31
	0x03516720 BL 0x3EB1B00
	0x03516724 B 0x3516734
	0x03516728 B 0x3516734
	0x0351672C B 0x3516734
	0x03516730 B 0x3516734
	0x03516734 MOV X21, X0
	0x03516738 B 0x3516758
	0x0351673C MOV X20, X1
	0x03516740 MOV X21, X0
	0x03516744 BL 0x3EB1AE0
	0x03516748 MOV W1, W20
	0x0351674C B 0x3516758
	0x03516750 MOV X21, X0
	0x03516754 MOVZ W23, 0x1
	0x03516758 CMP W1, W23
	0x0351675C B.NE 0x3516778
	0x03516760 MOV X0, X21
	0x03516764 BL 0x3EB1AD0
	0x03516768 LDR X20, [X0]
	0x0351676C BL 0x3EB1AE0
	0x03516770 MOV X21, X20
	0x03516774 B 0x3516614
	0x03516778 MOV X20, X31
	0x0351677C B 0x3516784
	0x03516780 MOV X21, X0
	0x03516784 LDRB W8, [X31 + 0xC]
	0x03516788 CBZ W8, 0x3516798
	0x0351678C MOV X0, X19
	0x03516790 MOV X1, X31
	0x03516794 BL 0x33E14E4
	0x03516798 CBNZ X20, 0x35167A4
	0x0351679C MOV X0, X21
	0x035167A0 BL 0x1D2C690
	0x035167A4 MOV X0, X20
	0x035167A8 BL 0x1C16F18
	0x035167AC BL 0x1990590
	0x035167B0 STR X30, [X31 - 0x40]!
	0x035167B4 STP X24, X23, [X31 + 0x10]
	0x035167B8 STP X22, X21, [X31 + 0x20]
	0x035167BC STP X20, X19, [X31 + 0x30]
	0x035167C0 MOV X19, X0
	0x035167C4 LDR X0, [X0 + 0x58]
	0x035167C8 CBZ X0, 0x35167F4
	0x035167CC LDRB W8, [X0 + 0x52]
	0x035167D0 CMP W8, 0x1
	0x035167D4 B.NE 0x35167F4
	0x035167D8 MOV W3, W2
	0x035167DC MOV W2, W31
	0x035167E0 MOV W4, W31
	0x035167E4 MOV X5, X31
	0x035167E8 BL 0x36BB7B4
	0x035167EC MOV W0, W31
	0x035167F0 B 0x35167F8
	0x035167F4 MOVZ W0, 0x1
	0x035167F8 LDP X20, X19, [X31 + 0x30]
	0x035167FC LDP X22, X21, [X31 + 0x20]
	0x03516800 LDP X24, X23, [X31 + 0x10]
	0x03516804 LDR X30, [X31], #0x40
	0x03516808 RET
	0x0351680C CMP W1, 0x1
	0x03516810 MOV X20, X0
	0x03516814 B.NE 0x3516BAC
	0x03516818 MOV X0, X20
	0x0351681C BL 0x3EB1AD0
	0x03516820 MOV X20, X0
	0x03516824 ADRP X0, 0xBDD000
	0x03516828 LDR X0, [X0 + 0x7D0]
	0x0351682C BL 0x1C16D08
	0x03516830 LDR X8, [X20]
	0x03516834 LDR X1, [X8]
	0x03516838 BL 0x1C17270
	0x0351683C TBZ X0, 0x0, 0x3516B74
	0x03516840 LDR X20, [X20]
	0x03516844 BL 0x3EB1AE0
	0x03516848 LDR W8, [X19 + 0x1C]
	0x0351684C MOVZ W0, 0x3
	0x03516850 CBZ W8, 0x35167F8
	0x03516854 CMP W8, 0x3
	0x03516858 B.EQ 0x35167F8
	0x0351685C MOVZ W1, 0x3
	0x03516860 MOV X0, X19
	0x03516864 MOV X2, X31
	0x03516868 BL 0x34F9710
	0x0351686C TBZ X0, 0x0, 0x3516B58
	0x03516870 ADRP X0, 0xBDD000
	0x03516874 LDR X0, [X0 + 0x988]
	0x03516878 BL 0x1C16D08
	0x0351687C LDR X8, [X19 + 0x58]
	0x03516880 CBZ X8, 0x35169E0
	0x03516884 ADRP X0, 0xBDD000
	0x03516888 LDR X0, [X0 + 0x9D0]
	0x0351688C BL 0x1C16D08
	0x03516890 MOVZ W1, 0x4
	0x03516894 BL 0x1C16D6C
	0x03516898 LDR X8, [X19 + 0x58]
	0x0351689C CBZ X8, 0x3516B94
	0x035168A0 MOV X21, X0
	0x035168A4 MOV X0, X8
	0x035168A8 MOV X1, X31

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+16], X30
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X24, 0xECA000
	013 Move W8, [X24+2826]
	014 Move X22, X4
	015 Move X23, X3
	016 Move X21, X2
	017 Move X19, X1
	018 Move X20, X0
	019 Move TEMP, X8
	020 And TEMP, TEMP, 1
	021 Compare TEMP, 1
	022 JumpIfEqual {34}
	023 Move X0, 0xBE8000
	024 Move X0, [X0+2408]
	025 Call 0x1C17CF4
	026 Move X0, 0xC06000
	027 Move X0, [X0+2912]
	028 Call 0x1C17CF4
	029 Move X0, 0xBDE000
	030 Move X0, [X0+1728]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X24+2826], W8
	034 Move [X31+12], W31
	035 Move [X31+8], W31
	036 Compare X21, 0
	037 JumpIfEqual {221}
	038 Move X8, [X21]
	039 Move X0, X21
	040 Move X9, [X8+1128]
	041 Move X1, [X8+1136]
	042 NotImplemented "Instruction BLR not yet implemented."
	043 Compare X0, 0
	044 JumpIfEqual {221}
	045 Move W8, [X0+24]
	046 Move X21, X0
	047 Compare W8, 0
	048 JumpIfEqual {233}
	049 Move X26, 0xBDE000
	050 Move X26, [X26+1728]
	051 Move X27, 0xBE8000
	052 Move X0, [X26]
	053 Move X27, [X27+2408]
	054 Move X24, [X21+32]
	055 Move W8, [X0+224]
	056 Move X25, [X27]
	057 Compare W8, 0
	058 JumpIfNotEqual {60}
	059 Call 0x1C17DFC
	060 Move X0, X25
	061 Move X1, X31
	062 Call Type.GetTypeFromHandle, X0
	063 Move X1, X0
	064 Move X0, X24
	065 Move X2, X31
	066 Call Type.op_Equality, X0, X1
	067 Move TEMP, X0
	068 And TEMP, TEMP, 1
	069 Compare TEMP, 1
	070 JumpIfNotEqual {78}
	071 Compare X19, 0
	072 JumpIfEqual {221}
	073 Move X0, X19
	074 Move W1, W31
	075 Move X2, X31
	076 Call StreamBuffer.WriteByte, X0, X1
	077 Move [X23], W31
	078 Move W8, [X21+24]
	079 Compare W8, 0
	080 JumpIfEqual {233}
	081 Move X0, [X21+32]
	082 Compare X0, 0
	083 JumpIfEqual {221}
	084 Move X1, X31
	085 Call Type.get_IsPrimitive, X0
	086 Move W8, [X21+24]
	087 Move TEMP, X0
	088 And TEMP, TEMP, 1
	089 Compare TEMP, 1
	090 JumpIfNotEqual {94}
	091 Compare W8, 0
	092 JumpIfEqual {233}
	093 Move X1, [X21+32]
	094 Compare W8, 0
	095 JumpIfEqual {233}
	096 Move X8, 0xC06000
	097 Move X0, [X26]
	098 Move X24, [X21+32]
	099 Move X8, [X8+2912]
	100 Move W9, [X0+224]
	101 Move X25, [X8]
	102 Compare W9, 0
	103 JumpIfNotEqual {105}
	104 Call 0x1C17DFC
	105 Move X0, X25
	106 Move X1, X31
	107 Call Type.GetTypeFromHandle, X0
	108 Move X1, X0
	109 Move X0, X24
	110 Move X2, X31
	111 Call Type.op_Inequality, X0, X1
	112 Move W8, [X21+24]
	113 Compare W8, 0
	114 JumpIfEqual {233}
	115 Move X1, [X21+32]
	116 Move TEMP, X0
	117 And TEMP, TEMP, 1
	118 Compare TEMP, 1
	119 JumpIfEqual {234}
	120 Move X0, X20
	121 Call Protocol18.GetCodeOfType, X0, X1
	122 And W31, W0, 255
	123 Move [X23], W0
	124 Compare X19, 0
	125 JumpIfEqual {221}
	126 Move W1, W0
	127 Move X0, X19
	128 Move X2, X31
	129 Call StreamBuffer.WriteByte, X0, X1
	130 Move W8, [X21+24]
	131 NotImplemented "Instruction CMP not yet implemented."
	132 Move X0, [X26]
	133 Move X23, [X21+40]
	134 Move X24, [X27]
	135 Move W8, [X0+224]
	136 Compare W8, 0
	137 JumpIfNotEqual {139}
	138 Call 0x1C17DFC
	139 Move X0, X24
	140 Move X1, X31
	141 Call Type.GetTypeFromHandle, X0
	142 Move X1, X0
	143 Move X0, X23
	144 Move X2, X31
	145 Call Type.op_Equality, X0, X1
	146 Move TEMP, X0
	147 And TEMP, TEMP, 1
	148 Compare TEMP, 1
	149 JumpIfNotEqual {155}
	150 Move X0, X19
	151 Move W1, W31
	152 Move X2, X31
	153 Call StreamBuffer.WriteByte, X0, X1
	154 Move [X22], W31
	155 Move W8, [X21+24]
	156 NotImplemented "Instruction CMP not yet implemented."
	157 Move X0, [X21+40]
	158 Compare X0, 0
	159 JumpIfEqual {221}
	160 Move X1, X31
	161 Call Type.get_IsArray, X0
	162 Move W8, [X21+24]
	163 NotImplemented "Instruction CMP not yet implemented."
	164 Move X2, [X21+40]
	165 Move TEMP, X0
	166 And TEMP, TEMP, 1
	167 Compare TEMP, 1
	168 JumpIfNotEqual {177}
	169 Move X0, X20
	170 Move X1, X19
	171 Move X3, X22
	172 Call Protocol18.WriteArrayType, X0, X1, X2, X3
	173 Move TEMP, X0
	174 And TEMP, TEMP, 1
	175 Compare TEMP, 1
	176 JumpIfEqual {209}
	177 Move X0, X20
	178 Move X1, X2
	179 Call Protocol18.GetCodeOfType, X0, X1
	180 And W8, W0, 255
	181 NotImplemented "Instruction CMP not yet implemented."
	182 Move [X22], W0
	183 Compare W8, 0
	184 JumpIfEqual {228}
	185 Move W1, W0
	186 And W22, W0, 255
	187 Move X0, X19
	188 Move X2, X31
	189 Call StreamBuffer.WriteByte, X0, X1
	190 NotImplemented "Instruction CMP not yet implemented."
	191 Move W8, [X21+24]
	192 NotImplemented "Instruction CMP not yet implemented."
	193 Move X2, [X21+40]
	194 Add X3, X31, 12
	195 Add X4, X31, 8
	196 Move X0, X20
	197 Move X1, X19
	198 Call Protocol18.WriteDictionaryHeader, X0, X1, X2, X3, X4
	199 Move W8, [X21+24]
	200 NotImplemented "Instruction CMP not yet implemented."
	201 Move X2, [X21+40]
	202 Move X0, X20
	203 Move X1, X19
	204 Call Protocol18.WriteArrayHeader, X0, X1, X2
	205 Move TEMP, X0
	206 And TEMP, TEMP, 1
	207 Compare TEMP, 1
	208 JumpIfNotEqual {228}
	209 Move X20, [X31+80]
	210 Move X19, [X31+88]
	211 Move X22, [X31+64]
	212 Move X21, [X31+72]
	213 Move X24, [X31+48]
	214 Move X23, [X31+56]
	215 Move X26, [X31+32]
	216 Move X25, [X31+40]
	217 Move X30, [X31+16]
	218 Move X27, [X31+24]
	219 Add X31, X31, 96
	220 Return 
	221 Call 0x1C17F20
	222 Move W8, [X21+24]
	223 Compare W8, 0
	224 JumpIfEqual {233}
	225 Move X0, 0xC1F000
	226 Move X20, [X21+32]
	227 Move X0, [X0+440]
	228 Move W8, [X21+24]
	229 NotImplemented "Instruction CMP not yet implemented."
	230 Move X0, 0xC1F000
	231 Move X20, [X21+40]
	232 Move X0, [X0+448]
	233 Call 0x1C17F28
	234 Move X0, 0xC1F000
	235 Move X0, [X0+440]
	236 Move X20, X1
	237 Call 0x1C17D08
	238 Move X19, X0
	239 Compare X20, 0
	240 JumpIfNotEqual {242}
	241 Move X1, X31
	242 Move X8, [X20]
	243 Move X0, X20
	244 Move X9, [X8+360]
	245 Move X1, [X8+368]
	246 NotImplemented "Instruction BLR not yet implemented."
	247 Move X1, X0
	248 Move X0, X19
	249 Move X2, X31
	250 Call String.Concat, X0, X1
	251 Move X19, X0
	252 Move X0, 0xC1F000
	253 Move X0, [X0+104]
	254 Call 0x1C17D08
	255 Call 0x1C17F10
	256 Move X1, X19
	257 Move X20, X0
	258 Call InvalidDataException..ctor, X0, X1
	259 Move X0, 0xC1F000
	260 Move X0, [X0+1000]
	261 Call 0x1C17D08
	262 Move X1, X0
	263 Move X0, X20
	264 Call 0x1C17DEC

Method: System.Boolean WriteArrayType(ExitGames.Client.Photon.StreamBuffer stream, System.Type type, out ExitGames.Client.Photon.Protocol18/GpType writeType)

Disassembly:
	0x035168AC BL 0x36C18F4
	0x035168B0 CBZ X21, 0x3516B94
	0x035168B4 MOV X22, X0
	0x035168B8 CBZ X0, 0x35168D0
	0x035168BC LDR X8, [X21]
	0x035168C0 MOV X0, X22
	0x035168C4 LDR X1, [X8 + 0x40]
	0x035168C8 BL 0x1C16E00
	0x035168CC CBZ X0, 0x3516B98
	0x035168D0 LDR W8, [X21 + 0x18]
	0x035168D4 CBZ W8, 0x3516B70
	0x035168D8 STR X22, [X21 + 0x20]
	0x035168DC LDR X0, [X19 + 0x58]
	0x035168E0 CBZ X0, 0x3516B94
	0x035168E4 MOV X1, X31
	0x035168E8 BL 0x36C1DF8
	0x035168EC MOV X22, X0
	0x035168F0 CBZ X0, 0x3516908
	0x035168F4 LDR X8, [X21]
	0x035168F8 MOV X0, X22
	0x035168FC LDR X1, [X8 + 0x40]
	0x03516900 BL 0x1C16E00
	0x03516904 CBZ X0, 0x3516B98
	0x03516908 LDR W8, [X21 + 0x18]
	0x0351690C CMP W8, 0x1
	0x03516910 B.LS 0x3516B70
	0x03516914 STR X22, [X21 + 0x28]
	0x03516918 LDR X8, [X19 + 0x58]
	0x0351691C CBZ X8, 0x3516B94
	0x03516920 ADRP X0, 0xC1E000
	0x03516924 LDRB W23, [X8 + 0x52]
	0x03516928 LDR X0, [X0 + 0x438]
	0x0351692C BL 0x1C16D08
	0x03516930 ADRP X8, 0xC1E000
	0x03516934 ADRP X9, 0xC1E000
	0x03516938 LDR X8, [X8 + 0x440]
	0x0351693C LDR X9, [X9 + 0x448]
	0x03516940 CMP W23, 0x0
	0x03516944 MOV X22, X0
	0x03516948 CSEL X0, X9, X8, EQ
	0x0351694C BL 0x1C16D08
	0x03516950 MOV X23, X0
	0x03516954 CBZ X0, 0x351696C
	0x03516958 LDR X8, [X21]
	0x0351695C MOV X0, X23
	0x03516960 LDR X1, [X8 + 0x40]
	0x03516964 BL 0x1C16E00
	0x03516968 CBZ X0, 0x3516B98
	0x0351696C LDR W8, [X21 + 0x18]
	0x03516970 CMP W8, 0x2
	0x03516974 B.LS 0x3516B70
	0x03516978 STR X23, [X21 + 0x30]
	0x0351697C LDR X8, [X19 + 0x58]
	0x03516980 CBZ X8, 0x3516B94
	0x03516984 LDRB W8, [X8 + 0x51]
	0x03516988 ADRP X9, 0xC1E000
	0x0351698C ADRP X10, 0xC1E000
	0x03516990 LDR X9, [X9 + 0x450]
	0x03516994 LDR X10, [X10 + 0x458]
	0x03516998 CMP W8, 0x0
	0x0351699C CSEL X0, X10, X9, EQ
	0x035169A0 BL 0x1C16D08
	0x035169A4 MOV X23, X0
	0x035169A8 CBZ X0, 0x35169C0
	0x035169AC LDR X8, [X21]
	0x035169B0 MOV X0, X23
	0x035169B4 LDR X1, [X8 + 0x40]
	0x035169B8 BL 0x1C16E00
	0x035169BC CBZ X0, 0x3516B98
	0x035169C0 LDR W8, [X21 + 0x18]
	0x035169C4 CMP W8, 0x3
	0x035169C8 B.LS 0x3516B70
	0x035169CC MOV X0, X22
	0x035169D0 MOV X1, X21
	0x035169D4 MOV X2, X31
	0x035169D8 STR X23, [X21 + 0x38]
	0x035169DC BL 0x3227C5C
	0x035169E0 MOV X22, X0
	0x035169E4 ADRP X0, 0xBDD000
	0x035169E8 LDR X0, [X0 + 0x9D0]
	0x035169EC BL 0x1C16D08
	0x035169F0 MOVZ W1, 0x5
	0x035169F4 BL 0x1C16D6C
	0x035169F8 CBZ X0, 0x3516B94
	0x035169FC LDR X23, [X19 + 0x30]
	0x03516A00 MOV X21, X0
	0x03516A04 CBZ X23, 0x3516A1C
	0x03516A08 LDR X8, [X21]
	0x03516A0C MOV X0, X23
	0x03516A10 LDR X1, [X8 + 0x40]
	0x03516A14 BL 0x1C16E00
	0x03516A18 CBZ X0, 0x3516B98
	0x03516A1C LDR W8, [X21 + 0x18]
	0x03516A20 CBZ W8, 0x3516B70
	0x03516A24 STR X23, [X21 + 0x20]
	0x03516A28 LDR X0, [X19 + 0x10]
	0x03516A2C CBZ X0, 0x3516B94
	0x03516A30 MOV X1, X31
	0x03516A34 BL 0x34F39AC
	0x03516A38 STR W0, [X31 + 0xC]
	0x03516A3C ADRP X0, 0xBDD000
	0x03516A40 LDR X0, [X0 + 0x758]
	0x03516A44 BL 0x1C16D08
	0x03516A48 ADD X1, X31, 0xC
	0x03516A4C BL 0x1C16E04
	0x03516A50 MOV X23, X0
	0x03516A54 CBZ X0, 0x3516A6C
	0x03516A58 LDR X8, [X21]
	0x03516A5C MOV X0, X23
	0x03516A60 LDR X1, [X8 + 0x40]
	0x03516A64 BL 0x1C16E00
	0x03516A68 CBZ X0, 0x3516B98
	0x03516A6C LDR W8, [X21 + 0x18]
	0x03516A70 CMP W8, 0x1
	0x03516A74 B.LS 0x3516B70
	0x03516A78 STR X23, [X21 + 0x28]
	0x03516A7C ADRP X0, 0xC1E000
	0x03516A80 LDRB W24, [X19 + 0x44]
	0x03516A84 LDR X0, [X0 + 0x460]
	0x03516A88 BL 0x1C16D08
	0x03516A8C MOV X23, X0
	0x03516A90 CBZ W24, 0x3516AA8
	0x03516A94 ADRP X0, 0xC1E000
	0x03516A98 LDR X0, [X0 + 0x468]
	0x03516A9C BL 0x1C16D08
	0x03516AA0 MOV X24, X0
	0x03516AA4 B 0x3516ABC
	0x03516AA8 ADRP X0, 0xBDF000
	0x03516AAC LDR X0, [X0 + 0x278]
	0x03516AB0 BL 0x1C16D08
	0x03516AB4 LDR X8, [X0 + 0xB8]
	0x03516AB8 LDR X24, [X8]
	0x03516ABC CBZ X24, 0x3516AD4
	0x03516AC0 LDR X8, [X21]
	0x03516AC4 MOV X0, X24
	0x03516AC8 LDR X1, [X8 + 0x40]
	0x03516ACC BL 0x1C16E00
	0x03516AD0 CBZ X0, 0x3516B98
	0x03516AD4 LDR W8, [X21 + 0x18]
	0x03516AD8 CMP W8, 0x2
	0x03516ADC B.LS 0x3516B70
	0x03516AE0 STR X24, [X21 + 0x30]
	0x03516AE4 CBZ X22, 0x3516B00
	0x03516AE8 LDR X8, [X21]
	0x03516AEC MOV X0, X22
	0x03516AF0 LDR X1, [X8 + 0x40]
	0x03516AF4 BL 0x1C16E00
	0x03516AF8 CBZ X0, 0x3516B98
	0x03516AFC LDR W8, [X21 + 0x18]
	0x03516B00 CMP W8, 0x3
	0x03516B04 B.LS 0x3516B70
	0x03516B08 STR X22, [X21 + 0x38]
	0x03516B0C CBZ X20, 0x3516B28
	0x03516B10 LDR X8, [X21]
	0x03516B14 MOV X0, X20
	0x03516B18 LDR X1, [X8 + 0x40]
	0x03516B1C BL 0x1C16E00
	0x03516B20 CBZ X0, 0x3516B98
	0x03516B24 LDR W8, [X21 + 0x18]
	0x03516B28 CMP W8, 0x4
	0x03516B2C B.LS 0x3516B70
	0x03516B30 MOV X0, X23
	0x03516B34 MOV X1, X21
	0x03516B38 MOV X2, X31
	0x03516B3C STR X20, [X21 + 0x40]
	0x03516B40 BL 0x3227C5C
	0x03516B44 MOV X2, X0
	0x03516B48 MOVZ W1, 0x3
	0x03516B4C MOV X0, X19
	0x03516B50 MOV X3, X31
	0x03516B54 BL 0x34F973C
	0x03516B58 MOVZ W1, 0x406
	0x03516B5C MOV X0, X19
	0x03516B60 MOV X2, X31
	0x03516B64 BL 0x34F9754
	0x03516B68 MOVZ W0, 0x3
	0x03516B6C B 0x35167F8
	0x03516B70 BL 0x1C16F28
	0x03516B74 MOVZ W0, 0x8
	0x03516B78 BL 0x3EB1AF0
	0x03516B7C LDR X8, [X20]
	0x03516B80 STR X8, [X0]
	0x03516B84 ADRP X1, 0x99E000
	0x03516B88 ADD X1, X1, 0xE58
	0x03516B8C MOV X2, X31
	0x03516B90 BL 0x3EB1B00
	0x03516B94 BL 0x1C16F20
	0x03516B98 BL 0x1C16F44
	0x03516B9C MOV X1, X31
	0x03516BA0 BL 0x1C16DEC
	0x03516BA4 MOV X20, X0
	0x03516BA8 BL 0x3EB1AE0
	0x03516BAC MOV X0, X20
	0x03516BB0 BL 0x1D2C690
	0x03516BB4 BL 0x1990590
	0x03516BB8 MOVZ W0, 0x2
	0x03516BBC STR X31, [X1]
	0x03516BC0 RET
	0x03516BC4 SUB X31, X31, 0x80
	0x03516BC8 STP X29, X30, [X31 + 0x20]
	0x03516BCC STP X28, X27, [X31 + 0x30]
	0x03516BD0 STP X26, X25, [X31 + 0x40]
	0x03516BD4 STP X24, X23, [X31 + 0x50]
	0x03516BD8 STP X22, X21, [X31 + 0x60]
	0x03516BDC STP X20, X19, [X31 + 0x70]
	0x03516BE0 ADRP X20, 0xEC9000
	0x03516BE4 LDRB W8, [X20 + 0xB14]
	0x03516BE8 MOV X19, X0
	0x03516BEC TBNZ X8, 0x0, 0x3516C40
	0x03516BF0 ADRP X0, 0xC1E000
	0x03516BF4 LDR X0, [X0 + 0x470]
	0x03516BF8 BL 0x1C16CF4
	0x03516BFC ADRP X0, 0xBE6000
	0x03516C00 LDR X0, [X0 + 0x788]
	0x03516C04 BL 0x1C16CF4
	0x03516C08 ADRP X0, 0xBDF000
	0x03516C0C LDR X0, [X0 + 0x278]
	0x03516C10 BL 0x1C16CF4
	0x03516C14 ADRP X0, 0xC09000
	0x03516C18 LDR X0, [X0 + 0x1D0]
	0x03516C1C BL 0x1C16CF4
	0x03516C20 ADRP X0, 0xC09000
	0x03516C24 LDR X0, [X0 + 0x1D8]
	0x03516C28 BL 0x1C16CF4
	0x03516C2C ADRP X0, 0xC1E000
	0x03516C30 LDR X0, [X0 + 0x478]
	0x03516C34 BL 0x1C16CF4
	0x03516C38 MOVZ W8, 0x1
	0x03516C3C STRB W8, [X20 + 0xB14]
	0x03516C40 STR W31, [X31 + 0x1C]
	0x03516C44 LDR X1, [X19 + 0x30]
	0x03516C48 MOV X0, X19
	0x03516C4C MOV X2, X31
	0x03516C50 BL 0x34F999C
	0x03516C54 CBZ X0, 0x3517278
	0x03516C58 ADRP X8, 0xBDF000
	0x03516C5C LDR X8, [X8 + 0x278]
	0x03516C60 MOV X20, X0
	0x03516C64 LDR X8, [X8]
	0x03516C68 LDR X9, [X8 + 0xB8]
	0x03516C6C LDR X8, [X0 + 0x18]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0xECA000
	009 Move W8, [X21+2827]
	010 Move X19, X3
	011 Move X23, X2
	012 Move X20, X1
	013 Move X22, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {41}
	018 Move X0, 0xBDF000
	019 Move X0, [X0+2520]
	020 Call 0x1C17CF4
	021 Move X0, 0xBDE000
	022 Move X0, [X0+3576]
	023 Call 0x1C17CF4
	024 Move X0, 0xC1F000
	025 Move X0, [X0+1008]
	026 Call 0x1C17CF4
	027 Move X0, 0xC1F000
	028 Move X0, [X0+136]
	029 Call 0x1C17CF4
	030 Move X0, 0xBE8000
	031 Move X0, [X0+2408]
	032 Call 0x1C17CF4
	033 Move X0, 0xC06000
	034 Move X0, [X0+2912]
	035 Call 0x1C17CF4
	036 Move X0, 0xBDE000
	037 Move X0, [X0+1728]
	038 Call 0x1C17CF4
	039 Move W8, 1
	040 Move [X21+2827], W8
	041 Compare X23, 0
	042 JumpIfEqual {258}
	043 Move X8, [X23]
	044 Move X24, 0xBDE000
	045 Move X0, X23
	046 Move X9, [X8+1064]
	047 Move X1, [X8+1072]
	048 Move X24, [X24+1728]
	049 NotImplemented "Instruction BLR not yet implemented."
	050 Move X8, [X24]
	051 Move X21, X0
	052 Move W9, [X8+224]
	053 Compare W9, 0
	054 JumpIfNotEqual {57}
	055 Move X0, X8
	056 Call 0x1C17DFC
	057 Move X0, X21
	058 Move X1, X31
	059 Move X2, X31
	060 Call Type.op_Equality, X0, X1
	061 Move TEMP, X0
	062 And TEMP, TEMP, 1
	063 Compare TEMP, 1
	064 JumpIfEqual {259}
	065 Compare X21, 0
	066 JumpIfEqual {258}
	067 Move X0, X21
	068 Move X1, X31
	069 Call Type.get_IsArray, X0
	070 Move TEMP, X0
	071 And TEMP, TEMP, 1
	072 Compare TEMP, 1
	073 JumpIfNotEqual {108}
	074 Move X0, [X24]
	075 Move W8, [X0+224]
	076 Compare W8, 0
	077 JumpIfNotEqual {79}
	078 Call 0x1C17DFC
	079 Move X0, X21
	080 Move X1, X31
	081 Move X2, X31
	082 Call Type.op_Inequality, X0, X1
	083 Move TEMP, X0
	084 And TEMP, TEMP, 1
	085 Compare TEMP, 1
	086 JumpIfNotEqual {162}
	087 Compare X21, 0
	088 JumpIfEqual {258}
	089 Move X0, X21
	090 Move X1, X31
	091 Call Type.get_IsArray, X0
	092 Move TEMP, X0
	093 And TEMP, TEMP, 1
	094 Compare TEMP, 1
	095 JumpIfNotEqual {162}
	096 Compare X20, 0
	097 JumpIfEqual {258}
	098 Move W1, 64
	099 Move X0, X20
	100 Move X2, X31
	101 Call StreamBuffer.WriteByte, X0, X1
	102 Move X8, [X21]
	103 Move X0, X21
	104 Move X9, [X8+1064]
	105 Move X1, [X8+1072]
	106 NotImplemented "Instruction BLR not yet implemented."
	107 Move X21, X0
	108 Move X0, X21
	109 Move X1, X31
	110 Call Type.get_IsPrimitive, X0
	111 Move TEMP, X0
	112 And TEMP, TEMP, 1
	113 Compare TEMP, 1
	114 JumpIfNotEqual {173}
	115 Move X0, X22
	116 Move X1, X21
	117 Call Protocol18.GetCodeOfType, X0, X1
	118 Or W8, W0, 64
	119 And W9, W8, 255
	120 NotImplemented "Instruction CMP not yet implemented."
	121 Move W9, 67
	122 NotImplemented "Instruction CSEL not yet implemented."
	123 Compare X20, 0
	124 JumpIfEqual {258}
	125 Move X0, X20
	126 Move W1, W21
	127 Move X2, X31
	128 Call StreamBuffer.WriteByte, X0, X1
	129 Move X8, 0xC1F000
	130 Move X0, [X24]
	131 Move X8, [X8+1008]
	132 Move W9, [X0+224]
	133 Move X20, [X8]
	134 Compare W9, 0
	135 JumpIfNotEqual {137}
	136 Call 0x1C17DFC
	137 Move X0, X20
	138 Move X1, X31
	139 Call Type.GetTypeFromHandle, X0
	140 Move X8, 0xBDF000
	141 Move X8, [X8+2520]
	142 Move X20, X0
	143 Add X1, X31, 12
	144 Move [X31+12], W21
	145 Move X0, [X8]
	146 Call 0x1C17E04
	147 Move X8, 0xBDE000
	148 Move X8, [X8+3576]
	149 Move X22, X0
	150 Move X8, [X8]
	151 Move W9, [X8+224]
	152 Compare W9, 0
	153 JumpIfNotEqual {156}
	154 Move X0, X8
	155 Call 0x1C17DFC
	156 Move X0, X20
	157 Move X1, X22
	158 Move X2, X31
	159 Call Enum.IsDefined, X0, X1
	160 And W31, W0, 1
	161 NotImplemented "Instruction CSEL not yet implemented."
	162 Move X0, X22
	163 Move X1, X21
	164 Call Protocol18.GetCodeOfType, X0, X1
	165 Compare X20, 0
	166 JumpIfEqual {258}
	167 Or W1, W0, 64
	168 Move X0, X20
	169 Move X2, X31
	170 Call StreamBuffer.WriteByte, X0, X1
	171 Move W0, 1
	172 Move W21, 64
	173 Move X8, 0xC06000
	174 Move X0, [X24]
	175 Move X8, [X8+2912]
	176 Move W9, [X0+224]
	177 Move X22, [X8]
	178 Compare W9, 0
	179 JumpIfNotEqual {181}
	180 Call 0x1C17DFC
	181 Move X0, X22
	182 Move X1, X31
	183 Call Type.GetTypeFromHandle, X0
	184 Move X1, X0
	185 Move X0, X21
	186 Move X2, X31
	187 Call Type.op_Equality, X0, X1
	188 Move TEMP, X0
	189 And TEMP, TEMP, 1
	190 Compare TEMP, 1
	191 JumpIfNotEqual {196}
	192 Compare X20, 0
	193 JumpIfEqual {258}
	194 Move W1, 71
	195 Move W21, 71
	196 Move X8, 0xBE8000
	197 Move X0, [X24]
	198 Move X8, [X8+2408]
	199 Move W9, [X0+224]
	200 Move X22, [X8]
	201 Compare W9, 0
	202 JumpIfNotEqual {204}
	203 Call 0x1C17DFC
	204 Move X0, X22
	205 Move X1, X31
	206 Call Type.GetTypeFromHandle, X0
	207 Move X1, X0
	208 Move X0, X21
	209 Move X2, X31
	210 Call Type.op_Equality, X0, X1
	211 Move TEMP, X0
	212 And TEMP, TEMP, 1
	213 Compare TEMP, 1
	214 JumpIfNotEqual {219}
	215 Compare X20, 0
	216 JumpIfEqual {258}
	217 Move W1, 23
	218 Move W21, 23
	219 Move X8, 0xC1F000
	220 Move X0, [X24]
	221 Move X8, [X8+136]
	222 Move W9, [X0+224]
	223 Move X22, [X8]
	224 Compare W9, 0
	225 JumpIfNotEqual {227}
	226 Call 0x1C17DFC
	227 Move X0, X22
	228 Move X1, X31
	229 Call Type.GetTypeFromHandle, X0
	230 Move X1, X0
	231 Move X0, X21
	232 Move X2, X31
	233 Call Type.op_Equality, X0, X1
	234 Move TEMP, X0
	235 And TEMP, TEMP, 1
	236 Compare TEMP, 1
	237 JumpIfNotEqual {256}
	238 Compare X20, 0
	239 JumpIfEqual {258}
	240 Move W1, 85
	241 Move W21, 85
	242 Move X0, X20
	243 Move X2, X31
	244 Call StreamBuffer.WriteByte, X0, X1
	245 Move W0, 1
	246 Move [X19], W21
	247 Move X20, [X31+48]
	248 Move X19, [X31+56]
	249 Move X22, [X31+32]
	250 Move X21, [X31+40]
	251 Move X24, [X31+16]
	252 Move X23, [X31+24]
	253 And W0, W0, 1
	254 Move X30, [X31+64]
	255 Return X0
	256 Move W21, W31
	257 Move W0, W31
	258 Call 0x1C17F20
	259 Move X0, 0xC1F000
	260 Move X0, [X0+1016]
	261 Call 0x1C17D08
	262 Move X8, [X23]
	263 Move X19, X0
	264 Move X0, X23
	265 Move X9, [X8+360]
	266 Move X1, [X8+368]
	267 NotImplemented "Instruction BLR not yet implemented."
	268 Move X1, X0
	269 Move X0, X19
	270 Move X2, X31
	271 Call String.Concat, X0, X1
	272 Move X19, X0
	273 Move X0, 0xC1F000
	274 Move X0, [X0+104]
	275 Call 0x1C17D08
	276 Call 0x1C17F10
	277 Move X1, X19
	278 Move X20, X0
	279 Call InvalidDataException..ctor, X0, X1
	280 Move X0, 0xC1F000
	281 Move X0, [X0+1024]
	282 Call 0x1C17D08
	283 Move X1, X0
	284 Move X0, X20
	285 Call 0x1C17DEC

Method: System.Void WriteHashtableArray(ExitGames.Client.Photon.StreamBuffer stream, System.Object value, System.Boolean writeType)

Disassembly:
	0x035150D4 LDR X9, [X8 + 0x428]
	0x035150D8 LDR X1, [X8 + 0x430]
	0x035150DC BLR X9
	0x035150E0 MOV X21, X0
	0x035150E4 CBNZ X0, 0x35150A8
	0x035150E8 B 0x351512C
	0x035150EC MOV X0, X20
	0x035150F0 MOV X1, X21
	0x035150F4 BL 0x350E78C
	0x035150F8 MOV W20, W0
	0x035150FC ANDS W31, W0, 0xFF
	0x03515100 B.EQ 0x3515118
	0x03515104 CBZ X19, 0x351512C
	0x03515108 ORR W1, W20, 0xFFFFFF80
	0x0351510C MOV X0, X19
	0x03515110 MOV X2, X31
	0x03515114 BL 0x351EFE8
	0x03515118 ANDS W31, W20, 0xFF
	0x0351511C LDP X20, X19, [X31 + 0x10]
	0x03515120 CSET W0, NE
	0x03515124 LDP X30, X21, [X31], #0x20
	0x03515128 RET
	0x0351512C BL 0x1C16F20
	0x03515130 STP X30, X27, [X31 - 0x50]!
	0x03515134 STP X26, X25, [X31 + 0x10]
	0x03515138 STP X24, X23, [X31 + 0x20]
	0x0351513C STP X22, X21, [X31 + 0x30]
	0x03515140 STP X20, X19, [X31 + 0x40]
	0x03515144 ADRP X24, 0xECA000
	0x03515148 LDRB W8, [X24 + 0xB08]
	0x0351514C MOV W19, W4
	0x03515150 MOV W20, W3
	0x03515154 MOV X23, X2
	0x03515158 MOV X21, X1
	0x0351515C MOV X22, X0
	0x03515160 TBNZ X8, 0x0, 0x35151A8
	0x03515164 ADRP X0, 0xBE6000
	0x03515168 LDR X0, [X0 + 0xF10]
	0x0351516C BL 0x1C16CF4
	0x03515170 ADRP X0, 0xBE5000
	0x03515174 LDR X0, [X0 + 0x2F0]
	0x03515178 BL 0x1C16CF4
	0x0351517C ADRP X0, 0xBDE000
	0x03515180 LDR X0, [X0 + 0x818]
	0x03515184 BL 0x1C16CF4
	0x03515188 ADRP X0, 0xBDE000
	0x0351518C LDR X0, [X0 + 0xE00]
	0x03515190 BL 0x1C16CF4
	0x03515194 ADRP X0, 0xBDE000
	0x03515198 LDR X0, [X0 + 0xE18]
	0x0351519C BL 0x1C16CF4
	0x035151A0 MOVZ W8, 0x1
	0x035151A4 STRB W8, [X24 + 0xB08]
	0x035151A8 CBZ X23, 0x3515444
	0x035151AC ADRP X10, 0xBE5000
	0x035151B0 LDR X8, [X23]
	0x035151B4 LDR X10, [X10 + 0x2F0]
	0x035151B8 ADRP X24, 0xBDE000
	0x035151BC LDRH W9, [X8 + 0x12E]
	0x035151C0 LDR X1, [X10]
	0x035151C4 LDR X24, [X24 + 0x818]
	0x035151C8 CBZ X9, 0x35151EC
	0x035151CC LDR X10, [X8 + 0xB0]
	0x035151D0 ADD X10, X10, 0x8
	0x035151D4 LDUR X11, [X10 - 0x8]
	0x035151D8 CMP X11, X1

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0xECB000
	009 Move W8, [X21+2828]
	010 Move W22, W3
	011 Move X23, X2
	012 Move X19, X1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0xC20000
	019 Move X0, [X0+784]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X21+2828], W8
	023 Compare X23, 0
	024 JumpIfEqual {38}
	025 Move X8, 0xC20000
	026 Move X8, [X8+784]
	027 Move X0, X23
	028 Move X24, [X8]
	029 Move X1, X24
	030 Call 0x1C17E00
	031 Move X21, X0
	032 Compare X0, 0
	033 JumpIfEqual {79}
	034 Move TEMP, X22
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfEqual {43}
	038 Move X21, X31
	039 Move TEMP, X22
	040 And TEMP, TEMP, 1
	041 Compare TEMP, 1
	042 JumpIfNotEqual {49}
	043 Compare X19, 0
	044 JumpIfEqual {78}
	045 Move W1, 85
	046 Move X0, X19
	047 Move X2, X31
	048 Call StreamBuffer.WriteByte, X0, X1
	049 Compare X21, 0
	050 JumpIfEqual {78}
	051 Move W2, [X21+24]
	052 Move X0, X20
	053 Move X1, X19
	054 Call Protocol18.WriteCompressedUInt32, X0, X1, X2
	055 Move X8, [X21+24]
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Move X22, X31
	058 And X8, X8, 0
	059 Add X23, X21, 32
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Move X2, [X23]
	062 Move X0, X20
	063 Move X1, X19
	064 Move W3, W31
	065 Call Protocol18.WriteHashtable, X0, X1, X2, X3
	066 Move W8, [X21+24]
	067 Add X22, X22, 1
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Move X20, [X31+48]
	070 Move X19, [X31+56]
	071 Move X22, [X31+32]
	072 Move X21, [X31+40]
	073 Move X24, [X31+16]
	074 Move X23, [X31+24]
	075 Move X30, [X31+64]
	076 Return 
	077 Call 0x1C17F28
	078 Call 0x1C17F20
	079 Move X0, X23
	080 Move X1, X24
	081 Call 0x1C181E0

Method: System.Void WriteDictionaryArray(ExitGames.Client.Photon.StreamBuffer stream, System.Collections.IDictionary[] dictArray, System.Boolean writeType)

Disassembly:
	0x03514EAC BL 0x3515004
	0x03514EB0 SUBS W23, W0, 0x1
	0x03514EB4 B.NE 0x3514F48
	0x03514EB8 MOV X0, X19
	0x03514EBC MOV X1, X31
	0x03514EC0 BL 0x3517FCC
	0x03514EC4 LDR X8, [X20 + 0x30]
	0x03514EC8 CBZ X8, 0x3514FFC
	0x03514ECC LDR W9, [X8 + 0x18]
	0x03514ED0 CBZ W9, 0x3515000
	0x03514ED4 CBZ X0, 0x3514FFC
	0x03514ED8 LDR W9, [X0 + 0x18]
	0x03514EDC CMP W21, W9
	0x03514EE0 B.CS 0x3515000
	0x03514EE4 LDRB W8, [X8 + 0x20]
	0x03514EE8 ADD X9, X0, W21, SXTW
	0x03514EEC STRB W8, [X9 + 0x20]
	0x03514EF0 B 0x3514FE8
	0x03514EF4 LDR X8, [X23 + 0x20]
	0x03514EF8 CBZ X8, 0x3514FFC
	0x03514EFC LDR X9, [X8 + 0x18]
	0x03514F00 LDR X0, [X8 + 0x40]
	0x03514F04 LDR X2, [X8 + 0x28]
	0x03514F08 MOV X1, X22
	0x03514F0C BLR X9
	0x03514F10 CBZ X0, 0x3514FFC
	0x03514F14 LDR W2, [X0 + 0x18]
	0x03514F18 MOV X21, X0
	0x03514F1C MOV X0, X20
	0x03514F20 MOV X1, X19
	0x03514F24 BL 0x3515C70
	0x03514F28 CBZ X19, 0x3514FFC
	0x03514F2C LDR W3, [X21 + 0x18]
	0x03514F30 MOV X0, X19
	0x03514F34 MOV X1, X21
	0x03514F38 MOV W2, W31
	0x03514F3C MOV X4, X31
	0x03514F40 BL 0x3517F60
	0x03514F44 B 0x3514FE8
	0x03514F48 MOV W22, W0
	0x03514F4C CMP W23, 0x1
	0x03514F50 B.LT 0x3514F6C
	0x03514F54 MOV X0, X19
	0x03514F58 MOV W1, W31
	0x03514F5C MOV X2, X31
	0x03514F60 BL 0x351EFE8
	0x03514F64 SUBS W23, W23, 0x1
	0x03514F68 B.NE 0x3514F54
	0x03514F6C MOV X0, X19
	0x03514F70 MOV X1, X31
	0x03514F74 BL 0x3517FCC
	0x03514F78 MOV X23, X0
	0x03514F7C MOV X0, X19
	0x03514F80 MOV X1, X31
	0x03514F84 BL 0x3517FCC
	0x03514F88 LDR W4, [X31 + 0x8]
	0x03514F8C ADD W24, W22, W21
	0x03514F90 MOV X2, X0
	0x03514F94 ADD W1, W21, 0x1
	0x03514F98 MOV X0, X23
	0x03514F9C MOV W3, W24
	0x03514FA0 MOV X5, X31

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move [X31+12], W31
	011 Move [X31+8], W31
	012 Compare X1, 0
	013 JumpIfEqual {70}
	014 Move X20, X1
	015 Move X19, X2
	016 Move X21, X0
	017 Move W1, 84
	018 Move X0, X20
	019 Move X2, X31
	020 Call StreamBuffer.WriteByte, X0, X1
	021 Compare X19, 0
	022 JumpIfEqual {70}
	023 Move X0, X19
	024 Move X1, X31
	025 Call "il2cpp_vm_object_is_inst", X0
	026 Compare X0, 0
	027 JumpIfEqual {70}
	028 Move X8, [X0]
	029 Move X9, [X8+1064]
	030 Move X1, [X8+1072]
	031 NotImplemented "Instruction BLR not yet implemented."
	032 Move X2, X0
	033 Add X3, X31, 12
	034 Add X4, X31, 8
	035 Move X0, X21
	036 Move X1, X20
	037 Call Protocol18.WriteDictionaryHeader, X0, X1, X2, X3, X4
	038 Move W2, [X19+24]
	039 Move X0, X21
	040 Move X1, X20
	041 Call Protocol18.WriteCompressedUInt32, X0, X1, X2
	042 Move X8, [X19+24]
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Move W22, [X31+12]
	045 Move W23, [X31+8]
	046 Move X24, X31
	047 And X8, X8, 0
	048 Add X25, X19, 32
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Move X2, [X25]
	051 Move X0, X21
	052 Move X1, X20
	053 Move W3, W22
	054 Move W4, W23
	055 Call Protocol18.WriteDictionaryElements, X0, X1, X2, X3, X4
	056 Move W8, [X19+24]
	057 Add X24, X24, 1
	058 NotImplemented "Instruction CMP not yet implemented."
	059 Move X20, [X31+64]
	060 Move X19, [X31+72]
	061 Move X22, [X31+48]
	062 Move X21, [X31+56]
	063 Move X24, [X31+32]
	064 Move X23, [X31+40]
	065 Move X30, [X31+16]
	066 Move X25, [X31+24]
	067 Add X31, X31, 80
	068 Return 
	069 Call 0x1C17F28
	070 Call 0x1C17F20

Method: System.Void WriteIntLength(ExitGames.Client.Photon.StreamBuffer stream, System.Int32 value)

Disassembly:
	0x03515C24 BLR X9

ISIL:
	001 Call Protocol18.WriteCompressedUInt32, X0, X1, X2
	002 Return 

Method: System.Void WriteVarInt32(ExitGames.Client.Photon.StreamBuffer stream, System.Int32 value, System.Boolean writeType)

Disassembly:
	0x03516D60 LDR X8, [X19 + 0x58]
	0x03516D64 CBZ X8, 0x3516D70

ISIL:
	001 And W3, W3, 1
	002 Call Protocol18.WriteCompressedInt32, X0, X1, X2, X3
	003 Return 

Method: System.Void WriteCompressedInt32(ExitGames.Client.Photon.StreamBuffer stream, System.Int32 value, System.Boolean writeType)

Disassembly:
	0x03513B3C CMP W8, 0x1
	0x03513B40 B.LT 0x3513B80
	0x03513B44 MOV X22, X31
	0x03513B48 AND X8, X8, 0x0
	0x03513B4C ADD X23, X19, 0x20
	0x03513B50 CMP X22, W8, UXTW
	0x03513B54 B.CS 0x3513B90
	0x03513B58 LDR W8, [X23, X22, LSL #2]
	0x03513B5C MOV X0, X21
	0x03513B60 MOV X1, X20
	0x03513B64 UBFM W9, W8, 0x1F, 0x1E
	0x03513B68 EOR W2, W9, W8, 0x1F
	0x03513B6C BL 0x3515C70
	0x03513B70 LDR W8, [X19 + 0x18]
	0x03513B74 ADD X22, X22, 0x1
	0x03513B78 CMP X22, W8, SXTW
	0x03513B7C B.LT 0x3513B50
	0x03513B80 LDP X20, X19, [X31 + 0x20]
	0x03513B84 LDP X22, X21, [X31 + 0x10]
	0x03513B88 LDP X30, X23, [X31], #0x30
	0x03513B8C RET
	0x03513B90 BL 0x1C16F28
	0x03513B94 BL 0x1C16F20
	0x03513B98 STP X30, X23, [X31 - 0x30]!
	0x03513B9C STP X22, X21, [X31 + 0x10]
	0x03513BA0 STP X20, X19, [X31 + 0x20]
	0x03513BA4 MOV X19, X2
	0x03513BA8 MOV X20, X1
	0x03513BAC MOV X21, X0
	0x03513BB0 TBZ X3, 0x0, 0x3513BC8
	0x03513BB4 CBZ X20, 0x3513C38
	0x03513BB8 MOVZ W1, 0x4A
	0x03513BBC MOV X0, X20
	0x03513BC0 MOV X2, X31
	0x03513BC4 BL 0x351EFE8
	0x03513BC8 CBZ X19, 0x3513C38
	0x03513BCC LDR W2, [X19 + 0x18]
	0x03513BD0 MOV X0, X21
	0x03513BD4 MOV X1, X20
	0x03513BD8 BL 0x3515C70
	0x03513BDC LDR X8, [X19 + 0x18]
	0x03513BE0 CMP W8, 0x1
	0x03513BE4 B.LT 0x3513C24
	0x03513BE8 MOV X22, X31
	0x03513BEC AND X8, X8, 0x0
	0x03513BF0 ADD X23, X19, 0x20
	0x03513BF4 CMP X22, W8, UXTW
	0x03513BF8 B.CS 0x3513C34
	0x03513BFC LDR X8, [X23, X22, LSL #3]
	0x03513C00 MOV X0, X21
	0x03513C04 MOV X1, X20
	0x03513C08 UBFM X9, X8, 0x3F, 0x3E
	0x03513C0C EOR X2, X9, X8, 0x3F
	0x03513C10 BL 0x3515D80
	0x03513C14 LDR W8, [X19 + 0x18]
	0x03513C18 ADD X22, X22, 0x1
	0x03513C1C CMP X22, W8, SXTW
	0x03513C20 B.LT 0x3513BF4
	0x03513C24 LDP X20, X19, [X31 + 0x20]
	0x03513C28 LDP X22, X21, [X31 + 0x10]
	0x03513C2C LDP X30, X23, [X31], #0x30
	0x03513C30 RET
	0x03513C34 BL 0x1C16F28
	0x03513C38 BL 0x1C16F20
	0x03513C3C STR X30, [X31 - 0x10]!
	0x03513C40 CBZ X2, 0x3513C64
	0x03513C44 LDR X9, [X0]
	0x03513C48 LDR X8, [X2 + 0x18]
	0x03513C4C LDRB W2, [X2 + 0x10]
	0x03513C50 AND W4, W3, 0x1
	0x03513C54 LDP X6, X5, [X9 + 0x1E8]
	0x03513C58 MOV X3, X8
	0x03513C5C LDR X30, [X31], #0x10
	0x03513C60 BR X6

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move W20, W2
	006 Move X19, X1
	007 Move X21, X0
	008 Move TEMP, X3
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfNotEqual {65}
	012 Compare W20, 0
	013 JumpIfEqual {24}
	014 NotImplemented "Instruction CMP not yet implemented."
	015 NotImplemented "Instruction CMP not yet implemented."
	016 Compare X19, 0
	017 JumpIfEqual {95}
	018 Move W1, 11
	019 Move X0, X19
	020 Move X2, X31
	021 Call StreamBuffer.WriteByte, X0, X1
	022 Move X0, X19
	023 Move W1, W20
	024 Compare X19, 0
	025 JumpIfEqual {95}
	026 Move W1, 30
	027 Move X0, X19
	028 Move X20, [X31+16]
	029 Move X19, [X31+24]
	030 Move X2, X31
	031 Move X30, [X31+32]
	032 Move X21, [X31+40]
	033 Call StreamBuffer.WriteByte, X0, X1
	034 Return 
	035 Move TEMP, 0xFFFE
	036 Not TEMP
	037 Move W8, TEMP
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Add W31, W20, 255
	040 Compare X19, 0
	041 JumpIfEqual {95}
	042 Move W1, 12
	043 Move X0, X19
	044 Move X2, X31
	045 Call StreamBuffer.WriteByte, X0, X1
	046 Subtract W1, W31, W20
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Compare X19, 0
	049 JumpIfEqual {95}
	050 Move W1, 13
	051 Move X0, X19
	052 Move X2, X31
	053 Call StreamBuffer.WriteByte, X0, X1
	054 Move W2, W20
	055 ShiftRight W2, 8
	056 And W2, W2, 0x7FFFFFFF
	057 Move X0, X19
	058 Move W1, W20
	059 Compare X19, 0
	060 JumpIfEqual {95}
	061 Move W1, 9
	062 Move X0, X19
	063 Move X2, X31
	064 Call StreamBuffer.WriteByte, X0, X1
	065 Move W8, W20
	066 ShiftRight W8, 31
	067 And W8, W8, 0x3FFFFFFF
	068 Xor W2, W8, W20
	069 Move X1, X19
	070 Move X20, [X31+16]
	071 Move X19, [X31+24]
	072 Move X0, X21
	073 Move X30, [X31+32]
	074 Move X21, [X31+40]
	075 Call Protocol18.WriteCompressedUInt32, X0, X1, X2
	076 Return 
	077 Compare X19, 0
	078 JumpIfEqual {95}
	079 Move W1, 14
	080 Move X0, X19
	081 Move X2, X31
	082 Call StreamBuffer.WriteByte, X0, X1
	083 Subtract W1, W31, W20
	084 Move W2, W1
	085 ShiftRight W2, 8
	086 And W2, W2, 0x7FFF
	087 Move X0, X19
	088 Move X20, [X31+16]
	089 Move X19, [X31+24]
	090 Move X3, X31
	091 Move X30, [X31+32]
	092 Move X21, [X31+40]
	093 Call StreamBuffer.WriteBytes, X0, X1, X2
	094 Return 
	095 Call 0x1C17F20

Method: System.Void WriteCompressedInt64(ExitGames.Client.Photon.StreamBuffer stream, System.Int64 value, System.Boolean writeType)

Disassembly:
	0x03513C64 BL 0x1C16F20
	0x03513C68 STP X30, X21, [X31 - 0x20]!
	0x03513C6C STP X20, X19, [X31 + 0x10]
	0x03513C70 MOV X19, X2
	0x03513C74 MOV X20, X1
	0x03513C78 MOV X21, X0
	0x03513C7C TBZ X3, 0x0, 0x3513C94
	0x03513C80 CBZ X20, 0x3513CCC
	0x03513C84 MOVZ W1, 0x43
	0x03513C88 MOV X0, X20
	0x03513C8C MOV X2, X31
	0x03513C90 BL 0x351EFE8
	0x03513C94 CBZ X19, 0x3513CCC
	0x03513C98 LDR W2, [X19 + 0x18]
	0x03513C9C MOV X0, X21
	0x03513CA0 MOV X1, X20
	0x03513CA4 BL 0x3515C70
	0x03513CA8 CBZ X20, 0x3513CCC
	0x03513CAC LDR W3, [X19 + 0x18]
	0x03513CB0 MOV X0, X20
	0x03513CB4 MOV X1, X19
	0x03513CB8 LDP X20, X19, [X31 + 0x10]
	0x03513CBC MOV W2, W31
	0x03513CC0 MOV X4, X31
	0x03513CC4 LDP X30, X21, [X31], #0x20
	0x03513CC8 B 0x3517F60
	0x03513CCC BL 0x1C16F20
	0x03513CD0 STR X30, [X31 - 0x40]!
	0x03513CD4 STP X24, X23, [X31 + 0x10]
	0x03513CD8 STP X22, X21, [X31 + 0x20]
	0x03513CDC STP X20, X19, [X31 + 0x30]
	0x03513CE0 ADRP X23, 0xECC000
	0x03513CE4 LDRB W8, [X23 + 0xB03]
	0x03513CE8 MOV W22, W3
	0x03513CEC MOV X19, X2
	0x03513CF0 MOV X20, X1
	0x03513CF4 MOV X21, X0
	0x03513CF8 TBNZ X8, 0x0, 0x3513D1C
	0x03513CFC ADRP X0, 0xBE7000
	0x03513D00 LDR X0, [X0 + 0x2F0]
	0x03513D04 BL 0x1C16CF4
	0x03513D08 ADRP X0, 0xBE7000
	0x03513D0C LDR X0, [X0 + 0x2F8]
	0x03513D10 BL 0x1C16CF4
	0x03513D14 MOVZ W8, 0x1
	0x03513D18 STRB W8, [X23 + 0xB03]
	0x03513D1C TBZ X22, 0x0, 0x3513D34
	0x03513D20 CBZ X20, 0x3513EA8
	0x03513D24 MOVZ W1, 0x17
	0x03513D28 MOV X0, X20
	0x03513D2C MOV X2, X31
	0x03513D30 BL 0x351EFE8
	0x03513D34 CBZ X19, 0x3513EA8
	0x03513D38 ADRP X23, 0xBE7000
	0x03513D3C LDR X8, [X19]
	0x03513D40 LDR X23, [X23 + 0x2F0]
	0x03513D44 LDRH W9, [X8 + 0x12E]
	0x03513D48 LDR X1, [X23]
	0x03513D4C CBZ X9, 0x3513D70
	0x03513D50 LDR X10, [X8 + 0xB0]
	0x03513D54 ADD X10, X10, 0x8
	0x03513D58 LDUR X11, [X10 - 0x8]
	0x03513D5C CMP X11, X1
	0x03513D60 B.EQ 0x3513D80
	0x03513D64 SUBS X9, X9, 0x1
	0x03513D68 ADD X10, X10, 0x10
	0x03513D6C B.NE 0x3513D58
	0x03513D70 MOVZ W2, 0x1
	0x03513D74 MOV X0, X19
	0x03513D78 BL 0x1C5C788
	0x03513D7C B 0x3513D90
	0x03513D80 LDR W9, [X10]
	0x03513D84 ADD W9, W9, 0x1
	0x03513D88 ADD X8, X8, W9, 0x4, SXTW

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, X2
	006 Move X19, X1
	007 Move X21, X0
	008 Move TEMP, X3
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfNotEqual {65}
	012 Compare X20, 0
	013 JumpIfEqual {24}
	014 NotImplemented "Instruction CMP not yet implemented."
	015 NotImplemented "Instruction CMP not yet implemented."
	016 Compare X19, 0
	017 JumpIfEqual {95}
	018 Move W1, 15
	019 Move X0, X19
	020 Move X2, X31
	021 Call StreamBuffer.WriteByte, X0, X1
	022 Move X0, X19
	023 Move W1, W20
	024 Compare X19, 0
	025 JumpIfEqual {95}
	026 Move W1, 31
	027 Move X0, X19
	028 Move X20, [X31+16]
	029 Move X19, [X31+24]
	030 Move X2, X31
	031 Move X30, [X31+32]
	032 Move X21, [X31+40]
	033 Call StreamBuffer.WriteByte, X0, X1
	034 Return 
	035 Move TEMP, 0xFFFE
	036 Not TEMP
	037 Move X8, TEMP
	038 NotImplemented "Instruction CMP not yet implemented."
	039 Add X31, X20, 255
	040 Compare X19, 0
	041 JumpIfEqual {95}
	042 Move W1, 16
	043 Move X0, X19
	044 Move X2, X31
	045 Call StreamBuffer.WriteByte, X0, X1
	046 Subtract W1, W31, W20
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Compare X19, 0
	049 JumpIfEqual {95}
	050 Move W1, 17
	051 Move X0, X19
	052 Move X2, X31
	053 Call StreamBuffer.WriteByte, X0, X1
	054 Move X2, X20
	055 ShiftRight X2, 8
	056 And X2, X2, 0x7FFFFFFF
	057 Move X0, X19
	058 Move W1, W20
	059 Compare X19, 0
	060 JumpIfEqual {95}
	061 Move W1, 10
	062 Move X0, X19
	063 Move X2, X31
	064 Call StreamBuffer.WriteByte, X0, X1
	065 Move X8, X20
	066 ShiftRight X8, 63
	067 And X8, X8, 0x3FFFFFFF
	068 Xor X2, X8, X20
	069 Move X1, X19
	070 Move X20, [X31+16]
	071 Move X19, [X31+24]
	072 Move X0, X21
	073 Move X30, [X31+32]
	074 Move X21, [X31+40]
	075 Call Protocol18.WriteCompressedUInt64, X0, X1, X2
	076 Return 
	077 Compare X19, 0
	078 JumpIfEqual {95}
	079 Move W1, 18
	080 Move X0, X19
	081 Move X2, X31
	082 Call StreamBuffer.WriteByte, X0, X1
	083 Subtract W1, W31, W20
	084 Move W2, W1
	085 ShiftRight W2, 8
	086 And W2, W2, 0x7FFF
	087 Move X0, X19
	088 Move X20, [X31+16]
	089 Move X19, [X31+24]
	090 Move X3, X31
	091 Move X30, [X31+32]
	092 Move X21, [X31+40]
	093 Call StreamBuffer.WriteBytes, X0, X1, X2
	094 Return 
	095 Call 0x1C17F20

Method: System.Void WriteCompressedUInt32(ExitGames.Client.Photon.StreamBuffer stream, System.UInt32 value)

Disassembly:
	0x03516C70 LDR X28, [X9]
	0x03516C74 CMP W8, 0x1
	0x03516C78 B.LT 0x351712C
	0x03516C7C STP X31, X31, [X31 + 0x8]
	0x03516C80 STR X31, [X31]
	0x03516C84 ADRP X22, 0xBE6000
	0x03516C88 LDR X22, [X22 + 0x788]
	0x03516C8C MOV X27, X31
	0x03516C90 MOV X29, X31
	0x03516C94 MOV X24, X31
	0x03516C98 AND X8, X8, 0x0
	0x03516C9C ADD X21, X20, 0x20
	0x03516CA0 CMP X27, W8, UXTW
	0x03516CA4 B.CS 0x3517298
	0x03516CA8 LDR X23, [X21, X27, LSL #3]
	0x03516CAC CBZ X23, 0x3516D84
	0x03516CB0 MOV X0, X23
	0x03516CB4 MOV X1, X31
	0x03516CB8 BL 0x366D604
	0x03516CBC MOV W26, W0
	0x03516CC0 LDR X0, [X22]
	0x03516CC4 BL 0x1C16F10
	0x03516CC8 MOV X25, X0
	0x03516CCC MOVZ W2, 0x1
	0x03516CD0 MOVZ W3, 0x6
	0x03516CD4 MOV W1, W26
	0x03516CD8 MOV X4, X31
	0x03516CDC BL 0x36AC13C
	0x03516CE0 STR X25, [X19 + 0x58]
	0x03516CE4 CBZ X25, 0x3516D8C
	0x03516CE8 MOVZ W1, 0x1
	0x03516CEC MOV X0, X25
	0x03516CF0 MOV X2, X31
	0x03516CF4 BL 0x36AC388
	0x03516CF8 LDR X0, [X19 + 0x10]
	0x03516CFC CBZ X0, 0x3516D94
	0x03516D00 LDR X25, [X19 + 0x58]
	0x03516D04 MOV X1, X31
	0x03516D08 BL 0x34F66C8
	0x03516D0C MOV W1, W0
	0x03516D10 CBZ X25, 0x3516D9C
	0x03516D14 MOV X0, X25
	0x03516D18 MOV X2, X31
	0x03516D1C BL 0x36BF3EC
	0x03516D20 LDR X0, [X19 + 0x10]
	0x03516D24 CBZ X0, 0x3516DA4
	0x03516D28 LDR X25, [X19 + 0x58]
	0x03516D2C MOV X1, X31
	0x03516D30 BL 0x34F66C8
	0x03516D34 MOV W1, W0
	0x03516D38 CBZ X25, 0x3516DAC
	0x03516D3C MOV X0, X25
	0x03516D40 MOV X2, X31
	0x03516D44 BL 0x36BF454
	0x03516D48 LDR X0, [X19 + 0x58]
	0x03516D4C CBZ X0, 0x3516DB4
	0x03516D50 LDR W2, [X19 + 0x40]
	0x03516D54 MOV X1, X23
	0x03516D58 MOV X3, X31
	0x03516D5C BL 0x36C2F80

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, [X0+56]
	007 Move W21, W2
	008 Move X20, X1
	009 Move X22, X0
	010 Move [X31+12], W31
	011 Add X1, X31, 12
	012 Move X0, X19
	013 Move X2, X31
	014 Call Monitor.Enter, X0, X1
	015 Move X22, [X22+56]
	016 Move X1, X22
	017 Move W2, W21
	018 Call Protocol18.WriteCompressedUInt32, X0, X1, X2
	019 Compare X20, 0
	020 JumpIfEqual {44}
	021 Move W3, W0
	022 Move X0, X20
	023 Move X1, X22
	024 Move W2, W31
	025 Move X4, X31
	026 Call StreamBuffer.Write, X0, X1, X2, X3
	027 Move X20, X31
	028 Move W8, [X31+12]
	029 Compare W8, 0
	030 JumpIfEqual {34}
	031 Move X0, X19
	032 Move X1, X31
	033 Call Monitor.Exit, X0
	034 Compare X20, 0
	035 JumpIfNotEqual {42}
	036 Move X20, [X31+32]
	037 Move X19, [X31+40]
	038 Move X22, [X31+16]
	039 Move X21, [X31+24]
	040 Move X30, [X31+48]
	041 Return 
	042 Move X0, X20
	043 Call 0x1C17F18
	044 Call 0x1C17F20
	045 Move X21, X0
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Move X0, X21
	048 Call 0x3EB2AD0
	049 Move X20, [X0]
	050 Call 0x3EB2AE0
	051 Move X20, X31
	052 Move X21, X0
	053 Move W8, [X31+12]
	054 Compare W8, 0
	055 JumpIfEqual {59}
	056 Move X0, X19
	057 Move X1, X31
	058 Call Monitor.Exit, X0
	059 Compare X20, 0
	060 JumpIfNotEqual {63}
	061 Move X0, X21
	062 Call 0x1D2D690
	063 Move X0, X20
	064 Call 0x1C17F18
	065 Call 0x1991590

Method: System.Int32 WriteCompressedUInt32(System.Byte[] buffer, System.UInt32 value)

Disassembly:
	0x03516004 STR X30, [X31 - 0x30]!
	0x03516008 STP X22, X21, [X31 + 0x10]
	0x0351600C STP X20, X19, [X31 + 0x20]
	0x03516010 ADRP X21, 0xEC9000
	0x03516014 ADRP X22, 0xBDD000
	0x03516018 ADRP X19, 0xC1E000
	0x0351601C ADRP X20, 0xBE6000
	0x03516020 LDRB W8, [X21 + 0xB0E]
	0x03516024 LDR X22, [X22 + 0x618]
	0x03516028 LDR X19, [X19 + 0x408]
	0x0351602C LDR X20, [X20 + 0xBB0]
	0x03516030 TBNZ X8, 0x0, 0x3516060
	0x03516034 ADRP X0, 0xBDD000
	0x03516038 LDR X0, [X0 + 0x618]
	0x0351603C BL 0x1C16CF4
	0x03516040 ADRP X0, 0xBE6000
	0x03516044 LDR X0, [X0 + 0xBB0]
	0x03516048 BL 0x1C16CF4
	0x0351604C ADRP X0, 0xC1E000
	0x03516050 LDR X0, [X0 + 0x408]
	0x03516054 BL 0x1C16CF4
	0x03516058 MOVZ W8, 0x1
	0x0351605C STRB W8, [X21 + 0xB0E]
	0x03516060 LDR X0, [X22]
	0x03516064 MOVZ W1, 0x8
	0x03516068 BL 0x1C16D6C
	0x0351606C LDR X1, [X19]
	0x03516070 MOV X2, X31
	0x03516074 MOV X19, X0

ISIL:
	001 Move [X31-16], X30
	002 Compare X1, 0
	003 JumpIfEqual {34}
	004 Move X10, [X1+24]
	005 Compare W10, 0
	006 JumpIfEqual {33}
	007 And W11, W2, 127
	008 Move W8, W2
	009 ShiftRight W8, 7
	010 And W8, W8, 0x7FFFFFFF
	011 Move [X1+32], W11
	012 Compare W8, 0
	013 JumpIfEqual {30}
	014 Move X9, X31
	015 And X10, X10, 0
	016 NotImplemented "Instruction CMP not yet implemented."
	017 Add X12, X1, X9
	018 Add X9, X9, 1
	019 Or W11, W11, 128
	020 NotImplemented "Instruction CMP not yet implemented."
	021 Move [X12+32], W11
	022 And W11, W8, 127
	023 Move W8, W8
	024 ShiftRight W8, 7
	025 And W8, W8, 0x7FFFFFFF
	026 Move [X12+33], W11
	027 Compare W8, 0
	028 JumpIfNotEqual {16}
	029 Add W0, W9, 1
	030 Move W0, 1
	031 Move X30, [X31+16]
	032 Return X0
	033 Call 0x1C17F28
	034 Call 0x1C17F20

Method: System.Void WriteCompressedUInt64(ExitGames.Client.Photon.StreamBuffer stream, System.UInt64 value)

Disassembly:
	0x03516D80 B 0x351712C
	0x03516D84 BL 0x1C16F20
	0x03516D88 B 0x35172C0
	0x03516D8C BL 0x1C16F20
	0x03516D90 B 0x35172A0
	0x03516D94 BL 0x1C16F20
	0x03516D98 B 0x35172A0
	0x03516D9C BL 0x1C16F20
	0x03516DA0 B 0x35172A0
	0x03516DA4 BL 0x1C16F20
	0x03516DA8 B 0x35172A0
	0x03516DAC BL 0x1C16F20
	0x03516DB0 B 0x35172A0
	0x03516DB4 BL 0x1C16F20
	0x03516DB8 B 0x35172A0
	0x03516DBC B 0x3516DDC
	0x03516DC0 B 0x3516DDC
	0x03516DC4 B 0x3516DDC
	0x03516DC8 B 0x3516DDC
	0x03516DCC B 0x3516DDC
	0x03516DD0 B 0x3516DDC
	0x03516DD4 B 0x3516DDC
	0x03516DD8 B 0x3516DDC
	0x03516DDC MOV X23, X0
	0x03516DE0 CMP W1, 0x1
	0x03516DE4 B.NE 0x35172CC
	0x03516DE8 MOV X0, X23
	0x03516DEC BL 0x3EB1AD0
	0x03516DF0 MOV X23, X0
	0x03516DF4 ADRP X0, 0xC0B000
	0x03516DF8 LDR X0, [X0 + 0x690]
	0x03516DFC BL 0x1C16D08
	0x03516E00 LDR X8, [X23]
	0x03516E04 LDR X1, [X8]
	0x03516E08 BL 0x1C17270
	0x03516E0C TBZ X0, 0x0, 0x3516E64
	0x03516E10 LDR X25, [X23]
	0x03516E14 BL 0x3EB1AE0
	0x03516E18 MOVZ W1, 0x1
	0x03516E1C MOV X0, X19
	0x03516E20 MOV X2, X31
	0x03516E24 BL 0x34F9710
	0x03516E28 TBZ X0, 0x0, 0x3516D70
	0x03516E2C LDR X8, [X31 + 0x10]
	0x03516E30 CMP X25, 0x0
	0x03516E34 CSEL X8, X8, X25, EQ
	0x03516E38 STR X8, [X31 + 0x10]
	0x03516E3C CBZ X25, 0x3516F5C
	0x03516E40 LDR X8, [X31 + 0x10]
	0x03516E44 CBZ X8, 0x351729C
	0x03516E48 LDR X0, [X31 + 0x10]
	0x03516E4C LDR X8, [X0]
	0x03516E50 LDP X9, X1, [X8 + 0x168]
	0x03516E54 BLR X9
	0x03516E58 MOV X23, X0
	0x03516E5C STR X25, [X31 + 0x8]
	0x03516E60 B 0x3516F60
	0x03516E64 ADRP X0, 0xC1B000
	0x03516E68 LDR X0, [X0 + 0xD8]
	0x03516E6C BL 0x1C16D08
	0x03516E70 LDR X8, [X23]
	0x03516E74 LDR X1, [X8]
	0x03516E78 BL 0x1C17270
	0x03516E7C TBZ X0, 0x0, 0x3516EEC
	0x03516E80 LDR X25, [X23]
	0x03516E84 BL 0x3EB1AE0
	0x03516E88 MOVZ W1, 0x2
	0x03516E8C MOV X0, X19
	0x03516E90 MOV X2, X31
	0x03516E94 BL 0x34F9710
	0x03516E98 TBZ X0, 0x0, 0x3516D70
	0x03516E9C ADRP X0, 0xBDD000
	0x03516EA0 LDR X0, [X0 + 0xAC8]
	0x03516EA4 BL 0x1C16D08
	0x03516EA8 MOVZ W1, 0x5
	0x03516EAC BL 0x1C16D6C
	0x03516EB0 CBZ X0, 0x351729C
	0x03516EB4 LDR W8, [X0 + 0x18]
	0x03516EB8 MOV X23, X0
	0x03516EBC CBZ W8, 0x3517298
	0x03516EC0 CMP X25, 0x0
	0x03516EC4 CSEL X0, X29, X25, EQ
	0x03516EC8 STR X28, [X23 + 0x20]
	0x03516ECC MOV X9, X25
	0x03516ED0 CBZ X25, 0x3516FAC
	0x03516ED4 CBZ X0, 0x351729C
	0x03516ED8 LDR X8, [X0]
	0x03516EDC LDP X9, X1, [X8 + 0x168]
	0x03516EE0 BLR X9
	0x03516EE4 LDR W8, [X23 + 0x18]
	0x03516EE8 B 0x3516FB0
	0x03516EEC ADRP X0, 0xBDD000
	0x03516EF0 LDR X0, [X0 + 0x7D0]
	0x03516EF4 BL 0x1C16D08
	0x03516EF8 LDR X8, [X23]
	0x03516EFC LDR X1, [X8]
	0x03516F00 BL 0x1C17270
	0x03516F04 TBZ X0, 0x0, 0x35172A0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, [X0+64]
	007 Move X22, X2
	008 Move X20, X1
	009 Move X21, X0
	010 Move [X31+12], W31
	011 Add X1, X31, 12
	012 Move X0, X19
	013 Move X2, X31
	014 Call Monitor.Enter, X0, X1
	015 Move X9, [X21+64]
	016 Compare X9, 0
	017 JumpIfEqual {86}
	018 Move W8, [X9+24]
	019 Compare W8, 0
	020 JumpIfEqual {87}
	021 And W10, W22, 127
	022 Move X8, X22
	023 ShiftRight X8, 7
	024 And X8, X8, 0x7FFFFFFF
	025 Move [X9+32], W10
	026 Compare X8, 0
	027 JumpIfEqual {76}
	028 Move X9, X31
	029 Move X10, [X21+64]
	030 Compare X10, 0
	031 JumpIfEqual {80}
	032 Move W11, [X10+24]
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Add X10, X10, X9
	035 Move W11, [X10+32]
	036 Or W11, W11, 128
	037 Move [X10+32], W11
	038 Move X11, [X21+64]
	039 Compare X11, 0
	040 JumpIfEqual {81}
	041 Move W12, [X11+24]
	042 Add X10, X9, 1
	043 NotImplemented "Instruction CMP not yet implemented."
	044 And W12, W8, 127
	045 Add X9, X11, X9
	046 Move X8, X8
	047 ShiftRight X8, 7
	048 And X8, X8, 0x7FFFFFFF
	049 Move [X9+33], W12
	050 Move X9, X10
	051 Compare X8, 0
	052 JumpIfNotEqual {29}
	053 Add W3, W10, 1
	054 Compare X20, 0
	055 JumpIfEqual {79}
	056 Move X1, [X21+64]
	057 Move X0, X20
	058 Move W2, W31
	059 Move X4, X31
	060 Call StreamBuffer.Write, X0, X1, X2, X3
	061 Move X21, X31
	062 Move W8, [X31+12]
	063 Compare W8, 0
	064 JumpIfEqual {68}
	065 Move X0, X19
	066 Move X1, X31
	067 Call Monitor.Exit, X0
	068 Compare X21, 0
	069 JumpIfNotEqual {84}
	070 Move X20, [X31+32]
	071 Move X19, [X31+40]
	072 Move X22, [X31+16]
	073 Move X21, [X31+24]
	074 Move X30, [X31+48]
	075 Return 
	076 Move W3, 1
	077 Compare X20, 0
	078 JumpIfNotEqual {56}
	079 Call 0x1C17F20
	080 Call 0x1C17F20
	081 Call 0x1C17F20
	082 Call 0x1C17F28
	083 Call 0x1C17F28
	084 Move X0, X21
	085 Call 0x1C17F18
	086 Call 0x1C17F20
	087 Call 0x1C17F28
	088 Move X20, X0
	089 NotImplemented "Instruction CMP not yet implemented."
	090 Move X0, X20
	091 Call 0x3EB2AD0
	092 Move X21, [X0]
	093 Call 0x3EB2AE0
	094 Move X21, X31
	095 Move X20, X0
	096 Move W8, [X31+12]
	097 Compare W8, 0
	098 JumpIfEqual {102}
	099 Move X0, X19
	100 Move X1, X31
	101 Call Monitor.Exit, X0
	102 Compare X21, 0
	103 JumpIfNotEqual {106}
	104 Move X0, X20
	105 Call 0x1D2D690
	106 Move X0, X21
	107 Call 0x1C17F18
	108 Call 0x1991590

Method: System.UInt32 EncodeZigZag32(System.Int32 value)

Disassembly:
	0x03516D68 LDRB W8, [X8 + 0x52]
	0x03516D6C CBNZ W8, 0x351712C
	0x03516D70 LDR W8, [X20 + 0x18]

ISIL:
	001 Move W8, W1
	002 ShiftRight W8, 31
	003 And W8, W8, 0x3FFFFFFF
	004 Xor W0, W8, W1
	005 Return X0

Method: System.UInt64 EncodeZigZag64(System.Int64 value)

Disassembly:
	0x03516D74 ADD X27, X27, 0x1
	0x03516D78 CMP X27, W8, SXTW
	0x03516D7C B.LT 0x3516CA0

ISIL:
	001 Move X8, X1
	002 ShiftRight X8, 63
	003 And X8, X8, 0x3FFFFFFF
	004 Xor X0, X8, X1
	005 Return X0

Method: System.Void .ctor()

Disassembly:
	0x03516F08 LDR X25, [X23]
	0x03516F0C BL 0x3EB1AE0
	0x03516F10 MOVZ W1, 0x2
	0x03516F14 MOV X0, X19
	0x03516F18 MOV X2, X31
	0x03516F1C BL 0x34F9710
	0x03516F20 TBZ X0, 0x0, 0x3516D70
	0x03516F24 LDR X8, [X31]
	0x03516F28 CMP X25, 0x0
	0x03516F2C CSEL X8, X8, X25, EQ
	0x03516F30 STR X8, [X31]
	0x03516F34 CBZ X25, 0x35170AC
	0x03516F38 LDR X8, [X31]
	0x03516F3C CBZ X8, 0x351729C
	0x03516F40 LDR X0, [X31]
	0x03516F44 LDR X8, [X0]
	0x03516F48 LDP X9, X1, [X8 + 0x168]
	0x03516F4C BLR X9
	0x03516F50 MOV X23, X0
	0x03516F54 MOV X24, X25
	0x03516F58 B 0x35170B0
	0x03516F5C MOV X23, X31
	0x03516F60 ADRP X0, 0xBDD000
	0x03516F64 LDR X0, [X0 + 0xDD8]
	0x03516F68 BL 0x1C16D08
	0x03516F6C MOV X2, X0
	0x03516F70 MOV X0, X28
	0x03516F74 MOV X1, X23
	0x03516F78 MOV X3, X31
	0x03516F7C BL 0x32274B8
	0x03516F80 MOV X28, X0
	0x03516F84 ADRP X0, 0xC1E000
	0x03516F88 LDR X0, [X0 + 0x480]
	0x03516F8C BL 0x1C16D08
	0x03516F90 MOV X23, X0
	0x03516F94 CBZ X25, 0x3517104
	0x03516F98 LDR X8, [X31 + 0x8]
	0x03516F9C CBZ X8, 0x351729C
	0x03516FA0 LDR X0, [X31 + 0x8]
	0x03516FA4 LDR X8, [X0]
	0x03516FA8 B 0x35170F4
	0x03516FAC MOV X0, X31
	0x03516FB0 CMP W8, 0x1
	0x03516FB4 B.LS 0x3517298
	0x03516FB8 STR X0, [X23 + 0x28]
	0x03516FBC ADRP X0, 0xBDD000
	0x03516FC0 LDR X0, [X0 + 0xDD8]
	0x03516FC4 BL 0x1C16D08
	0x03516FC8 LDR W8, [X23 + 0x18]
	0x03516FCC CMP W8, 0x2
	0x03516FD0 B.LS 0x3517298
	0x03516FD4 STR X0, [X23 + 0x30]
	0x03516FD8 CBZ X25, 0x351729C
	0x03516FDC LDR X8, [X25]
	0x03516FE0 MOV X0, X25
	0x03516FE4 LDP X9, X1, [X8 + 0x1F8]
	0x03516FE8 BLR X9
	0x03516FEC STR W0, [X31 + 0x1C]
	0x03516FF0 ADD X0, X31, 0x1C
	0x03516FF4 MOV X1, X31
	0x03516FF8 BL 0x337B6E0
	0x03516FFC LDR W8, [X23 + 0x18]
	0x03517000 CMP W8, 0x3

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xECA000
	006 Move X20, 0xBDE000
	007 Move W8, [X21+2829]
	008 Move X20, [X20+1560]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {25}
	014 Move X0, 0xBDE000
	015 Move X0, [X0+1560]
	016 Call 0x1C17CF4
	017 Move X0, 0xC0F000
	018 Move X0, [X0+2096]
	019 Call 0x1C17CF4
	020 Move X0, 0xBDE000
	021 Move X0, [X0+1592]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+2829], W8
	025 Move X0, [X20]
	026 Move W1, 2
	027 Call 0x1C17D6C
	028 Compare X0, 0
	029 JumpIfEqual {72}
	030 Move W8, [X0+24]
	031 Compare W8, 0
	032 JumpIfEqual {71}
	033 Move W9, 1
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Move [X0+32], W9
	036 Move X8, 0xC0F000
	037 Move X8, [X8+2096]
	038 Move W9, 8
	039 Move [X0+33], W9
	040 Move [X19+24], X0
	041 Move X0, [X8]
	042 Move X21, 0xBDE000
	043 Move X21, [X21+1592]
	044 Move W1, 1
	045 Call 0x1C17D6C
	046 Move [X19+32], X0
	047 Move X0, [X21]
	048 Move W1, 1
	049 Call 0x1C17D6C
	050 Move [X19+40], X0
	051 Move X0, [X20]
	052 Move W1, 5
	053 Call 0x1C17D6C
	054 Move [X19+48], X0
	055 Move X0, [X20]
	056 Move W1, 5
	057 Call 0x1C17D6C
	058 Move [X19+56], X0
	059 Move X0, [X20]
	060 Move W1, 10
	061 Call 0x1C17D6C
	062 Move [X19+64], X0
	063 Move X0, X19
	064 Move X20, [X31+16]
	065 Move X19, [X31+24]
	066 Move X1, X31
	067 Move X30, [X31+32]
	068 Move X21, [X31+40]
	069 Call IProtocol..ctor, X0
	070 Return 
	071 Call 0x1C17F28
	072 Call 0x1C17F20

Method: System.Void .cctor()

Disassembly:
	0x03517004 B.LS 0x3517298
	0x03517008 STR X0, [X23 + 0x38]
	0x0351700C ADRP X0, 0xC04000
	0x03517010 LDR X0, [X0 + 0x8B0]
	0x03517014 BL 0x1C16D08
	0x03517018 LDR W8, [X23 + 0x18]
	0x0351701C CMP W8, 0x4
	0x03517020 B.LS 0x3517298
	0x03517024 STR X0, [X23 + 0x40]
	0x03517028 MOV X0, X23
	0x0351702C MOV X1, X31
	0x03517030 BL 0x32278CC
	0x03517034 MOV X28, X0
	0x03517038 ADRP X0, 0xC1D000
	0x0351703C LDR X0, [X0 + 0x488]
	0x03517040 BL 0x1C16D08
	0x03517044 LDR X8, [X25]
	0x03517048 MOV X23, X0
	0x0351704C MOV X0, X25
	0x03517050 MOV X29, X25
	0x03517054 LDP X9, X1, [X8 + 0x168]
	0x03517058 BLR X9
	0x0351705C LDR X8, [X25]
	0x03517060 MOV X25, X0
	0x03517064 MOV X0, X29
	0x03517068 LDP X9, X1, [X8 + 0x1F8]
	0x0351706C BLR X9
	0x03517070 STR W0, [X31 + 0x1C]
	0x03517074 ADD X0, X31, 0x1C
	0x03517078 MOV X1, X31
	0x0351707C BL 0x337B6E0
	0x03517080 MOV X26, X0
	0x03517084 ADRP X0, 0xC1D000
	0x03517088 LDR X0, [X0 + 0x490]
	0x0351708C BL 0x1C16D08
	0x03517090 MOV X2, X0
	0x03517094 MOV X0, X23

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xEC9000
	007 Move X22, 0xBDD000
	008 Move X19, 0xC1E000
	009 Move X20, 0xBE6000
	010 Move W8, [X21+2830]
	011 Move X22, [X22+1560]
	012 Move X19, [X19+1032]
	013 Move X20, [X20+2992]
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {29}
	018 Move X0, 0xBDD000
	019 Move X0, [X0+1560]
	020 Call 0x1C17CF4
	021 Move X0, 0xBE6000
	022 Move X0, [X0+2992]
	023 Call 0x1C17CF4
	024 Move X0, 0xC1E000
	025 Move X0, [X0+1032]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X21+2830], W8
	029 Move X0, [X22]
	030 Move W1, 8
	031 Call 0x1C17D6C
	032 Move X1, [X19]
	033 Move X2, X31
	034 Move X19, X0
	035 Call RuntimeHelpers.InitializeArray, X0, X1
	036 Move X8, [X20]
	037 Move X22, [X31+16]
	038 Move X21, [X31+24]
	039 Move X8, [X8+184]
	040 Move [X8], X19
	041 Move X20, [X31+32]
	042 Move X19, [X31+40]
	043 Move X30, [X31+48]
	044 Return 

