Type: ExitGames.Client.Photon.NonAllocDictionary`2/PairIterator

Method: System.Void .ctor(ExitGames.Client.Photon.NonAllocDictionary`2<K, V> dictionary)

Disassembly:
	0x024A19F0 LDRB W8, [X0 + 0x135]
	0x024A19F4 TBNZ X8, 0x0, 0x24A19FC
	0x024A19F8 BL 0x1C5C684

ISIL:
	001 Move [X0], W31
	002 Move [X0+8], X1
	003 Return 

Method: System.Void Reset()

Disassembly:
	0x024A19FC LDR X0, [X0 + 0xB8]
	0x024A1A00 LDR X1, [X20]

ISIL:
	001 Move [X0], W31
	002 Return 

Method: System.Object System.Collections.IEnumerator.get_Current()

Disassembly:
	0x024A1A04 ADRP X21, 0x1C52000
	0x024A1A08 LDR X21, [X21 + 0x6C0]
	0x024A1A0C BL 0x25E6504
	0x024A1A10 LDR X8, [X19 + 0x20]
	0x024A1A14 MOV X20, X0
	0x024A1A18 LDRB W9, [X8 + 0x135]
	0x024A1A1C TBNZ X9, 0x0, 0x24A1A2C
	0x024A1A20 MOV X0, X8
	0x024A1A24 BL 0x1C5C684
	0x024A1A28 MOV X8, X0
	0x024A1A2C LDR X0, [X21]
	0x024A1A30 LDR X8, [X8 + 0xC0]
	0x024A1A34 LDR W9, [X0 + 0xE0]
	0x024A1A38 LDR X21, [X8 + 0x10]
	0x024A1A3C CBNZ W9, 0x24A1A44
	0x024A1A40 BL 0x1C16DFC
	0x024A1A44 MOV X0, X21
	0x024A1A48 MOV X1, X31
	0x024A1A4C BL 0x338C698
	0x024A1A50 LDR X8, [X19 + 0x20]
	0x024A1A54 MOV X21, X0
	0x024A1A58 LDRB W9, [X8 + 0x135]
	0x024A1A5C TBNZ X9, 0x0, 0x24A1A6C
	0x024A1A60 MOV X0, X8
	0x024A1A64 BL 0x1C5C684
	0x024A1A68 MOV X8, X0
	0x024A1A6C LDR X8, [X8 + 0xC0]
	0x024A1A70 LDR X0, [X8 + 0x20]
	0x024A1A74 LDRB W8, [X0 + 0x135]
	0x024A1A78 TBNZ X8, 0x0, 0x24A1A80
	0x024A1A7C BL 0x1C5C684
	0x024A1A80 BL 0x1C16F10
	0x024A1A84 LDR X8, [X19 + 0x20]
	0x024A1A88 MOV X22, X0
	0x024A1A8C ADD X9, X8, 0x135
	0x024A1A90 LDRH W9, [X9]
	0x024A1A94 TBNZ X9, 0x0, 0x24A1AB0
	0x024A1A98 MOV X0, X8

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+32], X20
	004 Move [X31+40], X19
	005 Move W8, [X0]
	006 Move X19, X1
	007 Compare W8, 0
	008 JumpIfEqual {39}
	009 Move X20, X0
	010 Move X0, [X19+32]
	011 Move W8, [X0+309]
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {17}
	016 Call 0x1C5D684
	017 Move X8, [X0+192]
	018 Move X0, X20
	019 Move X1, [X8+16]
	020 Call 0x24A1A9C, X0
	021 Move [X31], X0
	022 Move [X31+8], X1
	023 Move X0, [X19+32]
	024 Move W8, [X0+309]
	025 Move TEMP, X8
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {30}
	029 Call 0x1C5D684
	030 Move X8, [X0+192]
	031 Add X1, X31, 0
	032 Move X0, [X8+32]
	033 Call 0x1C17E04
	034 Move X20, [X31+32]
	035 Move X19, [X31+40]
	036 Move X30, [X31+16]
	037 Add X31, X31, 48
	038 Return X0
	039 Move X0, 0x1C53000
	040 Move X0, [X0+1456]
	041 Call 0x1C17D08
	042 Call 0x1C17F10
	043 Move X1, X31
	044 Move X20, X0
	045 Call InvalidOperationException..ctor, X0
	046 Move X0, X20
	047 Move X1, X19
	048 Call 0x1C17DEC

Method: System.Collections.Generic.KeyValuePair`2<K, V> get_Current()

Disassembly:
	0x024A1A9C BL 0x1C5C684
	0x024A1AA0 LDR X8, [X19 + 0x20]
	0x024A1AA4 ADD X9, X8, 0x135
	0x024A1AA8 LDRH W9, [X9]
	0x024A1AAC B 0x24A1AB4
	0x024A1AB0 MOV X0, X8
	0x024A1AB4 LDR X10, [X0 + 0xC0]
	0x024A1AB8 LDR X19, [X10 + 0x18]
	0x024A1ABC TBNZ X9, 0x0, 0x24A1ACC
	0x024A1AC0 MOV X0, X8
	0x024A1AC4 BL 0x1C5C684
	0x024A1AC8 MOV X8, X0
	0x024A1ACC LDR X8, [X8 + 0xC0]
	0x024A1AD0 MOV X0, X22
	0x024A1AD4 MOV X1, X31
	0x024A1AD8 MOV X2, X19
	0x024A1ADC LDR X3, [X8 + 0x28]
	0x024A1AE0 BL 0x2D10770
	0x024A1AE4 MOV X0, X21
	0x024A1AE8 MOV X1, X22
	0x024A1AEC MOV X2, X31
	0x024A1AF0 MOV X3, X31
	0x024A1AF4 MOV X4, X31
	0x024A1AF8 BL 0x3BFE3B0
	0x024A1AFC STR X0, [X20]
	0x024A1B00 LDP X20, X19, [X31 + 0x20]
	0x024A1B04 LDP X22, X21, [X31 + 0x10]
	0x024A1B08 LDR X30, [X31], #0x30
	0x024A1B0C RET
	0x024A1B10 STR X30, [X31 - 0x40]!
	0x024A1B14 STP X24, X23, [X31 + 0x10]
	0x024A1B18 STP X22, X21, [X31 + 0x20]
	0x024A1B1C STP X20, X19, [X31 + 0x30]
	0x024A1B20 MOV X21, X3
	0x024A1B24 MOV X19, X5
	0x024A1B28 MOV W20, W4
	0x024A1B2C MOV X22, X0

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+32], X20
	004 Move [X31+40], X19
	005 NotImplemented "Instruction LDRSW not yet implemented."
	006 Compare W8, 0
	007 JumpIfEqual {37}
	008 Move X9, [X0+8]
	009 Compare X9, 0
	010 JumpIfEqual {44}
	011 Move X9, [X9+40]
	012 Compare X9, 0
	013 JumpIfEqual {44}
	014 Move W10, [X9+24]
	015 NotImplemented "Instruction CMP not yet implemented."
	016 Move W10, 24
	017 NotImplemented "Instruction MADD not yet implemented."
	018 Move W19, [X8+44]
	019 Move X20, [X8+48]
	020 Move [X31], X31
	021 Move [X31+8], X31
	022 Move X0, [X1+32]
	023 Move W8, [X0+309]
	024 Move TEMP, X8
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {29}
	028 Call 0x1C5D684
	029 Move X8, [X0+192]
	030 Add X0, X31, 0
	031 Move W1, W19
	032 Move X2, X20
	033 Move X3, [X8+72]
	034 Call KeyValuePair`2<Byte, Object>..ctor, X0, X1, X2
	035 Move X0, [X31]
	036 Move X1, [X31+8]
	037 Move X0, X31
	038 Move X1, X31
	039 Move X20, [X31+32]
	040 Move X19, [X31+40]
	041 Move X30, [X31+16]
	042 Add X31, X31, 48
	043 Return X0
	044 Call 0x1C17F20
	045 Call 0x1C17F28

Method: System.Boolean MoveNext()

Disassembly:
	0x024A1B30 ADD X2, X31, 0xC
	0x024A1B34 ADD X3, X31, 0x8
	0x024A1B38 MOV X0, X21
	0x024A1B3C MOV W1, W4
	0x024A1B40 STR X31, [X31 + 0x8]
	0x024A1B44 MOV X4, X31
	0x024A1B48 BL 0x3BFE0D8
	0x024A1B4C TBZ X0, 0x0, 0x24A1BA0
	0x024A1B50 LDP W24, W23, [X31 + 0x8]
	0x024A1B54 CMP W23, W24
	0x024A1B58 B.GE 0x24A1B8C
	0x024A1B5C LDR X0, [X19 + 0x20]
	0x024A1B60 LDRB W8, [X0 + 0x135]
	0x024A1B64 TBNZ X8, 0x0, 0x24A1B6C
	0x024A1B68 BL 0x1C5C684
	0x024A1B6C LDR X8, [X0 + 0xC0]
	0x024A1B70 MOV X0, X22
	0x024A1B74 MOV W1, W23
	0x024A1B78 LDR X2, [X8 + 0x40]
	0x024A1B7C BL 0x3D23350
	0x024A1B80 ADD W23, W23, 0x1
	0x024A1B84 CMP W24, W23
	0x024A1B88 B.NE 0x24A1B5C
	0x024A1B8C ADD X2, X31, 0xC
	0x024A1B90 ADD X3, X31, 0x8
	0x024A1B94 MOV X0, X21
	0x024A1B98 MOV W1, W20
	0x024A1B9C B 0x24A1B44
	0x024A1BA0 LDP X20, X19, [X31 + 0x30]
	0x024A1BA4 LDP X22, X21, [X31 + 0x20]
	0x024A1BA8 LDP X24, X23, [X31 + 0x10]
	0x024A1BAC LDR X30, [X31], #0x40
	0x024A1BB0 RET
	0x024A1BB4 STP X30, X19, [X31 - 0x10]!
	0x024A1BB8 MOV X19, X0

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+8]
	003 Move W10, [X0]
	004 Move W11, 24
	005 Add W9, W10, 1
	006 Compare X8, 0
	007 JumpIfEqual {28}
	008 Move W12, [X8+24]
	009 NotImplemented "Instruction CMP not yet implemented."
	010 Move X13, [X8+40]
	011 Compare X13, 0
	012 JumpIfEqual {30}
	013 Move W14, [X13+24]
	014 NotImplemented "Instruction CMP not yet implemented."
	015 NotImplemented "Instruction SMADDL not yet implemented."
	016 Move W14, [X10+32]
	017 Move W10, W9
	018 Move W13, W9
	019 Compare W14, 0
	020 JumpIfEqual {5}
	021 Move W13, W31
	022 NotImplemented "Instruction CMP not yet implemented."
	023 NotImplemented "Instruction CSET not yet implemented."
	024 Move [X0], W13
	025 Move W0, W8
	026 Move X30, [X31+16]
	027 Return X0
	028 Move [X0], W9
	029 Call 0x1C17F20
	030 Add W8, W10, 1
	031 Move [X0], W8
	032 Call 0x1C17F20
	033 Add W8, W10, 1
	034 Move [X0], W8
	035 Call 0x1C17F28

Method: System.Void Dispose()

Disassembly:
	0x024A1BBC LDR X0, [X0 + 0x20]

ISIL:
	001 Return 

