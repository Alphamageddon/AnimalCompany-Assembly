Type: ExitGames.Client.Photon.Pool`1

Method: System.Void .ctor(System.Func`1<T> createFunction, System.Action`1<T> resetFunction, System.Int32 poolCapacity)

Disassembly:
	0x024A72B4 STP X30, X21, [X31 - 0x20]!
	0x024A72B8 STP X20, X19, [X31 + 0x10]
	0x024A72BC MOV X19, X0
	0x024A72C0 LDR X0, [X0 + 0x440]
	0x024A72C4 MOV X21, X2
	0x024A72C8 MOV X20, X1
	0x024A72CC CBZ X0, 0x24A72E8
	0x024A72D0 LDR X8, [X21 + 0x20]
	0x024A72D4 MOV X1, X20
	0x024A72D8 LDR X8, [X8 + 0xC0]
	0x024A72DC LDR X2, [X8 + 0x48]
	0x024A72E0 BL 0x301CD00
	0x024A72E4 B 0x24A72EC
	0x024A72E8 MOVN W0, 0x0
	0x024A72EC STR W0, [X19 + 0x470]
	0x024A72F0 LDR X8, [X21 + 0x20]
	0x024A72F4 MOV X0, X19
	0x024A72F8 MOV X1, X20
	0x024A72FC LDP X20, X19, [X31 + 0x10]
	0x024A7300 LDR X8, [X8 + 0xC0]
	0x024A7304 LDR X2, [X8 + 0x60]
	0x024A7308 LDP X30, X21, [X31], #0x20
	0x024A730C B 0x28B7858
	0x024A7310 STP X30, X19, [X31 - 0x10]!
	0x024A7314 LDR W8, [X0 + 0x470]
	0x024A7318 CMP W8, W1
	0x024A731C B.NE 0x24A7328
	0x024A7320 LDP X30, X19, [X31], #0x10
	0x024A7324 RET
	0x024A7328 MOV X19, X0
	0x024A732C STR W1, [X0 + 0x470]
	0x024A7330 TBNZ X1, 0x1F, 0x24A7368
	0x024A7334 LDR X0, [X19 + 0x440]
	0x024A7338 CBZ X0, 0x24A7384

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, X1
	008 Move X1, X31
	009 Move X20, X4
	010 Move W19, W3
	011 Move X22, X2
	012 Move X21, X0
	013 Call Object..ctor, X0
	014 Move [X21+16], X23
	015 Move [X21+32], X22
	016 Move X8, [X20+32]
	017 Move X8, [X8+192]
	018 Move X0, [X8+24]
	019 Move W8, [X0+309]
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {25}
	024 Call 0x1C5D684
	025 Call 0x1C17F10
	026 Move X8, [X20+32]
	027 Move X22, X0
	028 Move X8, [X8+192]
	029 Move X1, [X8+32]
	030 Call Queue`1<Object>..ctor, X0
	031 Move [X21+24], X22
	032 Move X8, [X20+32]
	033 Move X0, X21
	034 Move W1, W19
	035 Move X20, [X31+32]
	036 Move X19, [X31+40]
	037 Move X8, [X8+192]
	038 Move X22, [X31+16]
	039 Move X21, [X31+24]
	040 Move X2, [X8+40]
	041 Move X30, [X31+48]
	042 Move X23, [X31+56]
	043 Call 0x24A7428, X0, X1
	044 Return 

Method: System.Void .ctor(System.Func`1<T> createFunction, System.Int32 poolCapacity)

Disassembly:
	0x024A733C LDR W8, [X0 + 0x18]
	0x024A7340 CMP W8, W1
	0x024A7344 B.LE 0x24A7368
	0x024A7348 LDR X8, [X2 + 0x20]
	0x024A734C LDR X8, [X8 + 0xC0]
	0x024A7350 LDR X2, [X8 + 0x70]
	0x024A7354 BL 0x301BCCC

ISIL:
	001 Move X9, [X3+32]
	002 Move W8, W2
	003 Move X2, X31
	004 Move W3, W8
	005 Move X9, [X9+192]
	006 Move X4, [X9+48]
	007 Call 0x24A72B4, X0, X1, X2, X3
	008 Return 

Method: System.Int32 get_Count()

Disassembly:
	0x024A7358 LDR X8, [X19]
	0x024A735C MOV X1, X0
	0x024A7360 MOV X0, X19
	0x024A7364 B 0x24A7374
	0x024A7368 LDR X8, [X19]
	0x024A736C MOV X0, X19
	0x024A7370 MOV X1, X31
	0x024A7374 LDR X3, [X8 + 0x7F8]
	0x024A7378 LDR X2, [X8 + 0x800]
	0x024A737C LDP X30, X19, [X31], #0x10
	0x024A7380 BR X3
	0x024A7384 BL 0x1C16F20
	0x024A7388 STP X30, X21, [X31 - 0x20]!
	0x024A738C STP X20, X19, [X31 + 0x10]
	0x024A7390 MOVN W8, 0x0
	0x024A7394 STR W8, [X0 + 0x470]
	0x024A7398 LDR X8, [X2 + 0x20]
	0x024A739C MOV X20, X0
	0x024A73A0 MOV X19, X2
	0x024A73A4 MOV X21, X1
	0x024A73A8 LDR X8, [X8 + 0xC0]
	0x024A73AC LDR X0, [X8 + 0x80]
	0x024A73B0 LDRB W8, [X0 + 0x135]
	0x024A73B4 TBNZ X8, 0x0, 0x24A73BC
	0x024A73B8 BL 0x1C5C684
	0x024A73BC LDR W8, [X0 + 0xE0]
	0x024A73C0 CBNZ W8, 0x24A73C8
	0x024A73C4 BL 0x1C16DFC
	0x024A73C8 LDR X8, [X19 + 0x20]
	0x024A73CC MOV X0, X20
	0x024A73D0 MOV X1, X21
	0x024A73D4 LDR X8, [X8 + 0xC0]
	0x024A73D8 LDR X2, [X8 + 0x78]
	0x024A73DC BL 0x28B7944
	0x024A73E0 LDR X8, [X19 + 0x20]
	0x024A73E4 LDR X8, [X8 + 0xC0]
	0x024A73E8 LDR X0, [X8 + 0x90]
	0x024A73EC LDRB W8, [X0 + 0x135]
	0x024A73F0 TBNZ X8, 0x0, 0x24A73F8
	0x024A73F4 BL 0x1C5C684
	0x024A73F8 LDR W8, [X0 + 0xE0]
	0x024A73FC CBNZ W8, 0x24A7404
	0x024A7400 BL 0x1C16DFC
	0x024A7404 LDR X8, [X19 + 0x20]
	0x024A7408 LDR X8, [X8 + 0xC0]
	0x024A740C LDR X0, [X8 + 0x90]
	0x024A7410 LDRB W8, [X0 + 0x135]
	0x024A7414 TBNZ X8, 0x0, 0x24A741C
	0x024A7418 BL 0x1C5C684
	0x024A741C LDR X8, [X0 + 0xB8]
	0x024A7420 MOV X0, X20
	0x024A7424 MOV X2, X31

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, [X0+24]
	007 Move X20, X0
	008 Move [X31+12], W31
	009 Add X1, X31, 12
	010 Move X0, X19
	011 Move X2, X31
	012 Call Monitor.Enter, X0, X1
	013 Move X8, [X20+24]
	014 Compare X8, 0
	015 JumpIfEqual {35}
	016 Move W21, [X8+32]
	017 Move X20, X31
	018 Move W8, [X31+12]
	019 Compare W8, 0
	020 JumpIfEqual {24}
	021 Move X0, X19
	022 Move X1, X31
	023 Call Monitor.Exit, X0
	024 Compare X20, 0
	025 JumpIfNotEqual {33}
	026 Move W0, W21
	027 Move X20, [X31+32]
	028 Move X19, [X31+40]
	029 Move X30, [X31+16]
	030 Move X21, [X31+24]
	031 Add X31, X31, 48
	032 Return X0
	033 Move X0, X20
	034 Call 0x1C17F18
	035 Call 0x1C17F20
	036 Move X21, X0
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move X0, X21
	039 Call 0x3EB2AD0
	040 Move X20, [X0]
	041 Call 0x3EB2AE0
	042 Move W21, W31
	043 Move X20, X31
	044 Move X21, X0
	045 Move W8, [X31+12]
	046 Compare W8, 0
	047 JumpIfEqual {51}
	048 Move X0, X19
	049 Move X1, X31
	050 Call Monitor.Exit, X0
	051 Compare X20, 0
	052 JumpIfNotEqual {55}
	053 Move X0, X21
	054 Call 0x1D2D690
	055 Move X0, X20
	056 Call 0x1C17F18
	057 Call 0x1991590

Method: System.Void CreatePoolItems(System.Int32 numItems)

Disassembly:
	0x024A7428 LDR X1, [X8]
	0x024A742C BL 0x3DF1C70
	0x024A7430 LDR X8, [X19 + 0x20]
	0x024A7434 LDR X21, [X20 + 0x400]
	0x024A7438 LDR X8, [X8 + 0xC0]
	0x024A743C LDR X0, [X8 + 0x90]
	0x024A7440 LDRB W8, [X0 + 0x135]
	0x024A7444 TBNZ X8, 0x0, 0x24A744C
	0x024A7448 BL 0x1C5C684
	0x024A744C CBZ X21, 0x24A74BC
	0x024A7450 LDR X8, [X0 + 0xB8]
	0x024A7454 MOV X0, X21
	0x024A7458 MOV X2, X31
	0x024A745C LDR X1, [X8 + 0x8]
	0x024A7460 BL 0x3DF1C70
	0x024A7464 LDR X8, [X19 + 0x20]
	0x024A7468 MOV X0, X20
	0x024A746C LDR X8, [X8 + 0xC0]
	0x024A7470 LDR X1, [X8 + 0xA0]
	0x024A7474 BL 0x2899CE0
	0x024A7478 LDR X8, [X19 + 0x20]
	0x024A747C MOV X19, X0
	0x024A7480 LDR X8, [X8 + 0xC0]
	0x024A7484 LDR X8, [X8 + 0x90]
	0x024A7488 LDRB W9, [X8 + 0x135]
	0x024A748C TBNZ X9, 0x0, 0x24A749C
	0x024A7490 MOV X0, X8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 NotImplemented "Instruction CMP not yet implemented."
	006 Move X19, X2
	007 Move W20, W1
	008 Move X21, X0
	009 Move X8, [X21+16]
	010 Compare X8, 0
	011 JumpIfEqual {31}
	012 Move X9, [X8+24]
	013 Move X0, [X8+64]
	014 Move X1, [X8+40]
	015 NotImplemented "Instruction BLR not yet implemented."
	016 Move X8, [X21+24]
	017 Compare X8, 0
	018 JumpIfEqual {31}
	019 Move X9, [X19+32]
	020 Move X1, X0
	021 Move X0, X8
	022 Move X9, [X9+192]
	023 Move X2, [X9+80]
	024 Call Queue`1<Object>.Enqueue, X0, X1
	025 Subtract W20, W20, 1
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Return 
	031 Call 0x1C17F20

Method: System.Void Push(T item)

Disassembly:
	0x024A7494 BL 0x1C5C684
	0x024A7498 MOV X8, X0
	0x024A749C CBZ X19, 0x24A74BC
	0x024A74A0 LDR X8, [X8 + 0xB8]
	0x024A74A4 MOV X0, X19
	0x024A74A8 LDP X20, X19, [X31 + 0x10]
	0x024A74AC MOV X2, X31
	0x024A74B0 LDR X1, [X8 + 0x10]
	0x024A74B4 LDP X30, X21, [X31], #0x20
	0x024A74B8 B 0x3DF1C70
	0x024A74BC BL 0x1C16F20
	0x024A74C0 SUB X31, X31, 0x90
	0x024A74C4 STP X30, X27, [X31 + 0x40]
	0x024A74C8 STP X26, X25, [X31 + 0x50]
	0x024A74CC STP X24, X23, [X31 + 0x60]
	0x024A74D0 STP X22, X21, [X31 + 0x70]
	0x024A74D4 STP X20, X19, [X31 + 0x80]
	0x024A74D8 ADRP X22, 0x1F32000
	0x024A74DC LDRB W8, [X22 + 0xBC9]
	0x024A74E0 MOV X19, X2
	0x024A74E4 MOV X20, X1
	0x024A74E8 MOV X21, X0
	0x024A74EC TBNZ X8, 0x0, 0x24A7510
	0x024A74F0 ADRP X0, 0x1C4D000
	0x024A74F4 LDR X0, [X0 + 0xE70]
	0x024A74F8 BL 0x1C16CF4
	0x024A74FC ADRP X0, 0x1C75000
	0x024A7500 LDR X0, [X0 + 0xEA0]
	0x024A7504 BL 0x1C16CF4
	0x024A7508 MOVZ W8, 0x1
	0x024A750C STRB W8, [X22 + 0xBC9]
	0x024A7510 STP X31, X31, [X31 + 0x20]
	0x024A7514 STR X31, [X31 + 0x30]
	0x024A7518 CBZ X20, 0x24A76F8
	0x024A751C LDR X0, [X21 + 0x440]
	0x024A7520 CBZ X0, 0x24A76D4
	0x024A7524 LDR X8, [X19 + 0x20]
	0x024A7528 ADRP X25, 0x1C4D000
	0x024A752C ADRP X26, 0x1C75000
	0x024A7530 LDR X8, [X8 + 0xC0]
	0x024A7534 LDR X1, [X8 + 0xA8]
	0x024A7538 LDR X25, [X25 + 0xE70]
	0x024A753C LDR X26, [X26 + 0xEA0]
	0x024A7540 ADD X8, X31, 0x8
	0x024A7544 BL 0x301CB58
	0x024A7548 LDUR V0, [X31 + 0x8]
	0x024A754C LDR X8, [X31 + 0x18]
	0x024A7550 STR V0, [X31 + 0x2]
	0x024A7554 STR X8, [X31 + 0x30]
	0x024A7558 LDR X8, [X19 + 0x20]
	0x024A755C LDR X8, [X8 + 0xC0]
	0x024A7560 LDR X1, [X8 + 0x110]
	0x024A7564 ADD X0, X31, 0x20
	0x024A7568 BL 0x2BC4350
	0x024A756C TBZ X0, 0x0, 0x24A76B8
	0x024A7570 LDR X8, [X19 + 0x20]
	0x024A7574 LDR X8, [X8 + 0xC0]
	0x024A7578 LDR X0, [X8 + 0xB8]
	0x024A757C LDRB W8, [X0 + 0x135]
	0x024A7580 TBNZ X8, 0x0, 0x24A7588
	0x024A7584 BL 0x1C5C684
	0x024A7588 BL 0x1C16F10
	0x024A758C LDR X8, [X19 + 0x20]
	0x024A7590 MOV X22, X0
	0x024A7594 LDR X8, [X8 + 0xC0]
	0x024A7598 LDR X1, [X8 + 0xC0]
	0x024A759C BL 0x2374A80
	0x024A75A0 CBZ X22, 0x24A76F0
	0x024A75A4 STR X21, [X22 + 0x18]
	0x024A75A8 LDR X8, [X19 + 0x20]
	0x024A75AC LDR X9, [X31 + 0x30]
	0x024A75B0 LDR X8, [X8 + 0xC0]
	0x024A75B4 STR X9, [X22 + 0x10]
	0x024A75B8 LDR X0, [X8 + 0xD8]
	0x024A75BC BL 0x211B0E8
	0x024A75C0 LDR X8, [X21]
	0x024A75C4 LDR X24, [X22 + 0x10]
	0x024A75C8 MOV X23, X0
	0x024A75CC LDR X1, [X8 + 0x7F0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, X2
	007 Compare X1, 0
	008 JumpIfEqual {48}
	009 Move X8, [X0+32]
	010 Move X21, X1
	011 Move X22, X0
	012 Compare X8, 0
	013 JumpIfEqual {19}
	014 Move X9, [X8+24]
	015 Move X0, [X8+64]
	016 Move X2, [X8+40]
	017 Move X1, X21
	018 NotImplemented "Instruction BLR not yet implemented."
	019 Move X19, [X22+24]
	020 Move [X31+12], W31
	021 Add X1, X31, 12
	022 Move X0, X19
	023 Move X2, X31
	024 Call Monitor.Enter, X0, X1
	025 Move X0, [X22+24]
	026 Compare X0, 0
	027 JumpIfEqual {65}
	028 Move X8, [X20+32]
	029 Move X8, [X8+192]
	030 Move X2, [X8+80]
	031 Move X1, X21
	032 Call Queue`1<Object>.Enqueue, X0, X1
	033 Move X20, X31
	034 Move W8, [X31+12]
	035 Compare W8, 0
	036 JumpIfEqual {40}
	037 Move X0, X19
	038 Move X1, X31
	039 Call Monitor.Exit, X0
	040 Compare X20, 0
	041 JumpIfNotEqual {63}
	042 Move X20, [X31+32]
	043 Move X19, [X31+40]
	044 Move X22, [X31+16]
	045 Move X21, [X31+24]
	046 Move X30, [X31+48]
	047 Return 
	048 Move X0, 0x1C52000
	049 Move X0, [X0+1320]
	050 Call 0x1C17D08
	051 Call 0x1C17F10
	052 Move X19, X0
	053 Move X0, 0x1C76000
	054 Move X0, [X0+3728]
	055 Call 0x1C17D08
	056 Move X1, X0
	057 Move X0, X19
	058 Move X2, X31
	059 Call ArgumentNullException..ctor, X0, X1
	060 Move X0, X19
	061 Move X1, X20
	062 Call 0x1C17DEC
	063 Move X0, X20
	064 Call 0x1C17F18
	065 Call 0x1C17F20
	066 Move X21, X0
	067 NotImplemented "Instruction CMP not yet implemented."
	068 Move X0, X21
	069 Call 0x3EB2AD0
	070 Move X20, [X0]
	071 Call 0x3EB2AE0
	072 Move X20, X31
	073 Move X21, X0
	074 Move W8, [X31+12]
	075 Compare W8, 0
	076 JumpIfEqual {80}
	077 Move X0, X19
	078 Move X1, X31
	079 Call Monitor.Exit, X0
	080 Compare X20, 0
	081 JumpIfNotEqual {84}
	082 Move X0, X21
	083 Call 0x1D2D690
	084 Move X0, X20
	085 Call 0x1C17F18
	086 Call 0x1991590

Method: System.Void Release(T item)

Disassembly:
	0x024A75D0 LDR X9, [X8 + 0x7E8]
	0x024A75D4 MOV X0, X21
	0x024A75D8 BLR X9
	0x024A75DC CBZ X23, 0x24A76F4
	0x024A75E0 LDR X8, [X23]
	0x024A75E4 MOV X2, X0
	0x024A75E8 LDP X9, X3, [X8 + 0x1B8]
	0x024A75EC MOV X0, X23
	0x024A75F0 MOV X1, X24
	0x024A75F4 BLR X9
	0x024A75F8 TBZ X0, 0x0, 0x24A7608
	0x024A75FC LDRB W8, [X21 + 0x408]
	0x024A7600 EOR W27, W8, 0x1
	0x024A7604 B 0x24A760C
	0x024A7608 MOV W27, W31
	0x024A760C LDR X8, [X21]
	0x024A7610 LDR X1, [X22 + 0x10]
	0x024A7614 LDR X9, [X8 + 0x8A8]
	0x024A7618 LDR X2, [X8 + 0x8B0]
	0x024A761C MOV X0, X21
	0x024A7620 BLR X9
	0x024A7624 MOV X23, X0
	0x024A7628 LDR X0, [X25]
	0x024A762C BL 0x1C16F10
	0x024A7630 LDR X8, [X19 + 0x20]
	0x024A7634 MOV X24, X0
	0x024A7638 LDR X8, [X8 + 0xC0]
	0x024A763C LDR X2, [X8 + 0x108]
	0x024A7640 MOV X1, X22
	0x024A7644 MOV X3, X31
	0x024A7648 BL 0x3314368
	0x024A764C LDR X8, [X20]
	0x024A7650 LDR X1, [X26]
	0x024A7654 LDRH W9, [X8 + 0x12E]
	0x024A7658 CBZ X9, 0x24A767C
	0x024A765C LDR X10, [X8 + 0xB0]
	0x024A7660 ADD X10, X10, 0x8
	0x024A7664 LDUR X11, [X10 - 0x8]
	0x024A7668 CMP X11, X1
	0x024A766C B.EQ 0x24A768C
	0x024A7670 SUBS X9, X9, 0x1
	0x024A7674 ADD X10, X10, 0x10
	0x024A7678 B.NE 0x24A7664
	0x024A767C MOV X0, X20
	0x024A7680 MOV W2, W31
	0x024A7684 BL 0x1C5C788
	0x024A7688 B 0x24A7698
	0x024A768C LDRSW X9, [X10]
	0x024A7690 ADD X8, X8, X9, 0x4, LSL
	0x024A7694 ADD X0, X8, 0x138
	0x024A7698 LDP X8, X4, [X0]
	0x024A769C CMP W27, 0x0
	0x024A76A0 CSET W2, NE
	0x024A76A4 MOV X0, X20
	0x024A76A8 MOV X1, X23
	0x024A76AC MOV X3, X24
	0x024A76B0 BLR X8
	0x024A76B4 B 0x24A7558
	0x024A76B8 MOV X21, X31
	0x024A76BC LDR X8, [X19 + 0x20]
	0x024A76C0 ADD X0, X31, 0x20
	0x024A76C4 LDR X8, [X8 + 0xC0]
	0x024A76C8 LDR X1, [X8 + 0x118]
	0x024A76CC BL 0x2BC434C
	0x024A76D0 CBNZ X21, 0x24A7734
	0x024A76D4 LDP X20, X19, [X31 + 0x80]
	0x024A76D8 LDP X22, X21, [X31 + 0x70]
	0x024A76DC LDP X24, X23, [X31 + 0x60]
	0x024A76E0 LDP X26, X25, [X31 + 0x50]
	0x024A76E4 LDP X30, X27, [X31 + 0x40]
	0x024A76E8 ADD X31, X31, 0x90
	0x024A76EC RET
	0x024A76F0 BL 0x1C16F20
	0x024A76F4 BL 0x1C16F20
	0x024A76F8 ADRP X0, 0x1C51000
	0x024A76FC LDR X0, [X0 + 0x528]
	0x024A7700 BL 0x1C16D08
	0x024A7704 BL 0x1C16F10
	0x024A7708 MOV X20, X0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, X2
	007 Compare X1, 0
	008 JumpIfEqual {48}
	009 Move X8, [X0+32]
	010 Move X21, X1
	011 Move X22, X0
	012 Compare X8, 0
	013 JumpIfEqual {19}
	014 Move X9, [X8+24]
	015 Move X0, [X8+64]
	016 Move X2, [X8+40]
	017 Move X1, X21
	018 NotImplemented "Instruction BLR not yet implemented."
	019 Move X19, [X22+24]
	020 Move [X31+12], W31
	021 Add X1, X31, 12
	022 Move X0, X19
	023 Move X2, X31
	024 Call Monitor.Enter, X0, X1
	025 Move X0, [X22+24]
	026 Compare X0, 0
	027 JumpIfEqual {65}
	028 Move X8, [X20+32]
	029 Move X8, [X8+192]
	030 Move X2, [X8+80]
	031 Move X1, X21
	032 Call Queue`1<Object>.Enqueue, X0, X1
	033 Move X20, X31
	034 Move W8, [X31+12]
	035 Compare W8, 0
	036 JumpIfEqual {40}
	037 Move X0, X19
	038 Move X1, X31
	039 Call Monitor.Exit, X0
	040 Compare X20, 0
	041 JumpIfNotEqual {63}
	042 Move X20, [X31+32]
	043 Move X19, [X31+40]
	044 Move X22, [X31+16]
	045 Move X21, [X31+24]
	046 Move X30, [X31+48]
	047 Return 
	048 Move X0, 0x1C52000
	049 Move X0, [X0+1320]
	050 Call 0x1C17D08
	051 Call 0x1C17F10
	052 Move X19, X0
	053 Move X0, 0x1C76000
	054 Move X0, [X0+3728]
	055 Call 0x1C17D08
	056 Move X1, X0
	057 Move X0, X19
	058 Move X2, X31
	059 Call ArgumentNullException..ctor, X0, X1
	060 Move X0, X19
	061 Move X1, X20
	062 Call 0x1C17DEC
	063 Move X0, X20
	064 Call 0x1C17F18
	065 Call 0x1C17F20
	066 Move X21, X0
	067 NotImplemented "Instruction CMP not yet implemented."
	068 Move X0, X21
	069 Call 0x3EB2AD0
	070 Move X20, [X0]
	071 Call 0x3EB2AE0
	072 Move X20, X31
	073 Move X21, X0
	074 Move W8, [X31+12]
	075 Compare W8, 0
	076 JumpIfEqual {80}
	077 Move X0, X19
	078 Move X1, X31
	079 Call Monitor.Exit, X0
	080 Compare X20, 0
	081 JumpIfNotEqual {84}
	082 Move X0, X21
	083 Call 0x1D2D690
	084 Move X0, X20
	085 Call 0x1C17F18
	086 Call 0x1991590

Method: T Pop()

Disassembly:
	0x024A770C ADRP X0, 0x1C75000
	0x024A7710 LDR X0, [X0 + 0xEA8]
	0x024A7714 BL 0x1C16D08
	0x024A7718 MOV X1, X0
	0x024A771C MOV X0, X20
	0x024A7720 MOV X2, X31
	0x024A7724 BL 0x330E100
	0x024A7728 MOV X0, X20
	0x024A772C MOV X1, X19
	0x024A7730 BL 0x1C16DEC
	0x024A7734 MOV X0, X21
	0x024A7738 BL 0x1C16F18
	0x024A773C B 0x24A775C
	0x024A7740 B 0x24A775C
	0x024A7744 B 0x24A775C
	0x024A7748 B 0x24A775C
	0x024A774C B 0x24A775C
	0x024A7750 B 0x24A775C
	0x024A7754 B 0x24A775C
	0x024A7758 B 0x24A775C
	0x024A775C MOV X20, X0
	0x024A7760 CMP W1, 0x1
	0x024A7764 B.NE 0x24A777C
	0x024A7768 MOV X0, X20
	0x024A776C BL 0x3EB1AD0
	0x024A7770 LDR X21, [X0]
	0x024A7774 BL 0x3EB1AE0
	0x024A7778 B 0x24A76BC
	0x024A777C MOV X21, X31
	0x024A7780 B 0x24A7788
	0x024A7784 MOV X20, X0
	0x024A7788 LDR X8, [X19 + 0x20]
	0x024A778C LDR X8, [X8 + 0xC0]
	0x024A7790 LDR X1, [X8 + 0x118]
	0x024A7794 ADD X0, X31, 0x20
	0x024A7798 BL 0x2BC434C
	0x024A779C CBNZ X21, 0x24A77A8
	0x024A77A0 MOV X0, X20
	0x024A77A4 BL 0x1D2C690
	0x024A77A8 MOV X0, X21
	0x024A77AC BL 0x1C16F18
	0x024A77B0 BL 0x1990590
	0x024A77B4 STR X30, [X31 - 0x10]!
	0x024A77B8 CBZ X0, 0x24A77D0
	0x024A77BC LDR X8, [X0]
	0x024A77C0 LDR X3, [X8 + 0x7F8]
	0x024A77C4 LDR X2, [X8 + 0x800]
	0x024A77C8 LDR X30, [X31], #0x10
	0x024A77CC BR X3
	0x024A77D0 BL 0x1C16F20
	0x024A77D4 STP X30, X21, [X31 - 0x20]!
	0x024A77D8 STP X20, X19, [X31 + 0x10]
	0x024A77DC ADRP X21, 0x1F32000
	0x024A77E0 ADRP X20, 0x1C75000
	0x024A77E4 LDRB W8, [X21 + 0xBCA]
	0x024A77E8 LDR X20, [X20 + 0xEB0]
	0x024A77EC MOV X19, X0
	0x024A77F0 TBNZ X8, 0x0, 0x24A7820
	0x024A77F4 ADRP X0, 0x1C75000
	0x024A77F8 LDR X0, [X0 + 0xEB8]
	0x024A77FC BL 0x1C16CF4
	0x024A7800 ADRP X0, 0x1C75000
	0x024A7804 LDR X0, [X0 + 0xEC0]
	0x024A7808 BL 0x1C16CF4
	0x024A780C ADRP X0, 0x1C75000
	0x024A7810 LDR X0, [X0 + 0xEB0]
	0x024A7814 BL 0x1C16CF4
	0x024A7818 MOVZ W8, 0x1
	0x024A781C STRB W8, [X21 + 0xBCA]
	0x024A7820 LDR X0, [X19 + 0x20]
	0x024A7824 LDR X20, [X20]
	0x024A7828 LDRB W8, [X0 + 0x135]
	0x024A782C TBNZ X8, 0x0, 0x24A7834
	0x024A7830 BL 0x1C5C684
	0x024A7834 LDR X8, [X0 + 0xC0]
	0x024A7838 LDR X0, [X8 + 0x90]
	0x024A783C LDRB W8, [X0 + 0x135]
	0x024A7840 TBNZ X8, 0x0, 0x24A7848
	0x024A7844 BL 0x1C5C684
	0x024A7848 LDR X8, [X0 + 0xB8]
	0x024A784C STR X20, [X8]
	0x024A7850 LDR X0, [X19 + 0x20]
	0x024A7854 LDRB W8, [X0 + 0x135]
	0x024A7858 TBNZ X8, 0x0, 0x24A7860
	0x024A785C BL 0x1C5C684

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X19, [X0+24]
	009 Move X20, X1
	010 Move X21, X0
	011 Move [X31+12], W31
	012 Add X1, X31, 12
	013 Move X0, X19
	014 Move X2, X31
	015 Call Monitor.Enter, X0, X1
	016 Move X8, [X21+24]
	017 Compare X8, 0
	018 JumpIfEqual {64}
	019 Move W9, [X8+32]
	020 Compare W9, 0
	021 JumpIfEqual {31}
	022 Move X9, [X20+32]
	023 Move X9, [X9+192]
	024 Move X1, [X9+96]
	025 Move X0, X8
	026 Call Queue`1<Object>.Dequeue, X0
	027 Move X22, X0
	028 Move X20, X31
	029 Move X21, X31
	030 Move W23, 4
	031 Move X8, [X21+16]
	032 Compare X8, 0
	033 JumpIfEqual {65}
	034 Move X0, [X8+64]
	035 Move X1, [X8+40]
	036 Move X9, [X8+24]
	037 NotImplemented "Instruction BLR not yet implemented."
	038 Move X21, X0
	039 Move X20, X31
	040 Move X22, X31
	041 Move W23, 3
	042 Move W8, [X31+12]
	043 Compare W8, 0
	044 JumpIfEqual {48}
	045 Move X0, X19
	046 Move X1, X31
	047 Call Monitor.Exit, X0
	048 Compare X20, 0
	049 JumpIfNotEqual {62}
	050 Or W8, W23, 4
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Move X21, X22
	053 Move X0, X21
	054 Move X20, [X31+48]
	055 Move X19, [X31+56]
	056 Move X22, [X31+32]
	057 Move X21, [X31+40]
	058 Move X30, [X31+16]
	059 Move X23, [X31+24]
	060 Add X31, X31, 64
	061 Return X0
	062 Move X0, X20
	063 Call 0x1C17F18
	064 Call 0x1C17F20
	065 Call 0x1C17F20
	066 Move X21, X0
	067 NotImplemented "Instruction CMP not yet implemented."
	068 Move X0, X21
	069 Call 0x3EB2AD0
	070 Move X20, [X0]
	071 Call 0x3EB2AE0
	072 Move W23, W31
	073 Move X21, X31
	074 Move X22, X31
	075 Move X20, X31
	076 Move X21, X0
	077 Move W8, [X31+12]
	078 Compare W8, 0
	079 JumpIfEqual {83}
	080 Move X0, X19
	081 Move X1, X31
	082 Call Monitor.Exit, X0
	083 Compare X20, 0
	084 JumpIfNotEqual {87}
	085 Move X0, X21
	086 Call 0x1D2D690
	087 Move X0, X20
	088 Call 0x1C17F18
	089 Call 0x1991590

Method: T Acquire()

Disassembly:
	0x024A7860 LDR X8, [X0 + 0xC0]
	0x024A7864 LDR X0, [X8 + 0x90]
	0x024A7868 LDRB W8, [X0 + 0x135]
	0x024A786C TBNZ X8, 0x0, 0x24A7874
	0x024A7870 BL 0x1C5C684
	0x024A7874 LDR X0, [X19 + 0x20]
	0x024A7878 LDRB W8, [X0 + 0x135]
	0x024A787C TBNZ X8, 0x0, 0x24A7884
	0x024A7880 BL 0x1C5C684
	0x024A7884 LDR X8, [X0 + 0xC0]
	0x024A7888 ADRP X20, 0x1C75000
	0x024A788C LDR X0, [X8 + 0x90]
	0x024A7890 LDRB W8, [X0 + 0x135]
	0x024A7894 LDR X20, [X20 + 0xEB8]
	0x024A7898 TBNZ X8, 0x0, 0x24A78A0
	0x024A789C BL 0x1C5C684
	0x024A78A0 LDR X8, [X0 + 0xB8]
	0x024A78A4 LDR X1, [X20]
	0x024A78A8 MOV X2, X31
	0x024A78AC LDR X0, [X8]
	0x024A78B0 BL 0x321B938
	0x024A78B4 LDR X8, [X19 + 0x20]
	0x024A78B8 MOV X20, X0
	0x024A78BC LDRB W9, [X8 + 0x135]
	0x024A78C0 TBNZ X9, 0x0, 0x24A78D0
	0x024A78C4 MOV X0, X8
	0x024A78C8 BL 0x1C5C684
	0x024A78CC MOV X8, X0
	0x024A78D0 LDR X8, [X8 + 0xC0]
	0x024A78D4 LDR X0, [X8 + 0x90]
	0x024A78D8 LDRB W8, [X0 + 0x135]
	0x024A78DC TBNZ X8, 0x0, 0x24A78E4
	0x024A78E0 BL 0x1C5C684
	0x024A78E4 LDR X8, [X0 + 0xB8]
	0x024A78E8 STR X20, [X8 + 0x8]
	0x024A78EC LDR X0, [X19 + 0x20]
	0x024A78F0 LDRB W8, [X0 + 0x135]
	0x024A78F4 TBNZ X8, 0x0, 0x24A78FC
	0x024A78F8 BL 0x1C5C684
	0x024A78FC LDR X8, [X0 + 0xC0]
	0x024A7900 LDR X0, [X8 + 0x90]
	0x024A7904 LDRB W8, [X0 + 0x135]
	0x024A7908 TBNZ X8, 0x0, 0x24A7910
	0x024A790C BL 0x1C5C684
	0x024A7910 LDR X0, [X19 + 0x20]
	0x024A7914 LDRB W8, [X0 + 0x135]
	0x024A7918 TBNZ X8, 0x0, 0x24A7920
	0x024A791C BL 0x1C5C684
	0x024A7920 LDR X8, [X0 + 0xC0]
	0x024A7924 ADRP X20, 0x1C75000
	0x024A7928 LDR X0, [X8 + 0x90]
	0x024A792C LDRB W8, [X0 + 0x135]
	0x024A7930 LDR X20, [X20 + 0xEC0]
	0x024A7934 TBNZ X8, 0x0, 0x24A793C
	0x024A7938 BL 0x1C5C684
	0x024A793C LDR X8, [X0 + 0xB8]
	0x024A7940 LDR X1, [X20]
	0x024A7944 MOV X2, X31
	0x024A7948 LDR X0, [X8]
	0x024A794C BL 0x321B938
	0x024A7950 LDR X8, [X19 + 0x20]
	0x024A7954 MOV X20, X0
	0x024A7958 LDRB W9, [X8 + 0x135]
	0x024A795C TBNZ X9, 0x0, 0x24A796C
	0x024A7960 MOV X0, X8
	0x024A7964 BL 0x1C5C684
	0x024A7968 MOV X8, X0
	0x024A796C LDR X8, [X8 + 0xC0]
	0x024A7970 LDR X0, [X8 + 0x90]
	0x024A7974 LDRB W8, [X0 + 0x135]
	0x024A7978 TBNZ X8, 0x0, 0x24A7980
	0x024A797C BL 0x1C5C684
	0x024A7980 LDR X8, [X0 + 0xB8]
	0x024A7984 STR X20, [X8 + 0x10]
	0x024A7988 LDR X0, [X19 + 0x20]
	0x024A798C LDRB W8, [X0 + 0x135]
	0x024A7990 TBNZ X8, 0x0, 0x24A7998
	0x024A7994 BL 0x1C5C684
	0x024A7998 LDR X8, [X0 + 0xC0]
	0x024A799C LDR X0, [X8 + 0x90]
	0x024A79A0 LDRB W8, [X0 + 0x135]
	0x024A79A4 TBNZ X8, 0x0, 0x24A79B4
	0x024A79A8 LDP X20, X19, [X31 + 0x10]
	0x024A79AC LDP X30, X21, [X31], #0x20
	0x024A79B0 B 0x1C5C684

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X19, [X0+24]
	009 Move X20, X1
	010 Move X21, X0
	011 Move [X31+12], W31
	012 Add X1, X31, 12
	013 Move X0, X19
	014 Move X2, X31
	015 Call Monitor.Enter, X0, X1
	016 Move X8, [X21+24]
	017 Compare X8, 0
	018 JumpIfEqual {64}
	019 Move W9, [X8+32]
	020 Compare W9, 0
	021 JumpIfEqual {31}
	022 Move X9, [X20+32]
	023 Move X9, [X9+192]
	024 Move X1, [X9+96]
	025 Move X0, X8
	026 Call Queue`1<Object>.Dequeue, X0
	027 Move X22, X0
	028 Move X20, X31
	029 Move X21, X31
	030 Move W23, 4
	031 Move X8, [X21+16]
	032 Compare X8, 0
	033 JumpIfEqual {65}
	034 Move X0, [X8+64]
	035 Move X1, [X8+40]
	036 Move X9, [X8+24]
	037 NotImplemented "Instruction BLR not yet implemented."
	038 Move X21, X0
	039 Move X20, X31
	040 Move X22, X31
	041 Move W23, 3
	042 Move W8, [X31+12]
	043 Compare W8, 0
	044 JumpIfEqual {48}
	045 Move X0, X19
	046 Move X1, X31
	047 Call Monitor.Exit, X0
	048 Compare X20, 0
	049 JumpIfNotEqual {62}
	050 Or W8, W23, 4
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Move X21, X22
	053 Move X0, X21
	054 Move X20, [X31+48]
	055 Move X19, [X31+56]
	056 Move X22, [X31+32]
	057 Move X21, [X31+40]
	058 Move X30, [X31+16]
	059 Move X23, [X31+24]
	060 Add X31, X31, 64
	061 Return X0
	062 Move X0, X20
	063 Call 0x1C17F18
	064 Call 0x1C17F20
	065 Call 0x1C17F20
	066 Move X21, X0
	067 NotImplemented "Instruction CMP not yet implemented."
	068 Move X0, X21
	069 Call 0x3EB2AD0
	070 Move X20, [X0]
	071 Call 0x3EB2AE0
	072 Move W23, W31
	073 Move X21, X31
	074 Move X22, X31
	075 Move X20, X31
	076 Move X21, X0
	077 Move W8, [X31+12]
	078 Compare W8, 0
	079 JumpIfEqual {83}
	080 Move X0, X19
	081 Move X1, X31
	082 Call Monitor.Exit, X0
	083 Compare X20, 0
	084 JumpIfNotEqual {87}
	085 Move X0, X21
	086 Call 0x1D2D690
	087 Move X0, X20
	088 Call 0x1C17F18
	089 Call 0x1991590

