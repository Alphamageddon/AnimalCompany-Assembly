Type: ExitGames.Client.Photon.StructWrapping.StructWrapperPool`1

Method: System.Void .ctor(System.Boolean isStaticPool)

Disassembly:
	0x02666A64 LDR X0, [X0 + 0x20]
	0x02666A68 CBZ X0, 0x2666A80
	0x02666A6C LDR X8, [X2 + 0x20]
	0x02666A70 LDR X8, [X8 + 0xC0]
	0x02666A74 LDR X2, [X8 + 0x40]
	0x02666A78 LDR X30, [X31], #0x10
	0x02666A7C B 0x2602314
	0x02666A80 BL 0x1C16F20
	0x02666A84 STP X30, X23, [X31 - 0x30]!
	0x02666A88 STP X22, X21, [X31 + 0x10]
	0x02666A8C STP X20, X19, [X31 + 0x20]
	0x02666A90 ADRP X23, 0x1D74000
	0x02666A94 ADRP X22, 0x1A8D000
	0x02666A98 LDRB W8, [X23 + 0x1ED]
	0x02666A9C LDR X22, [X22 + 0x6C0]
	0x02666AA0 MOV X20, X2
	0x02666AA4 MOV W21, W1
	0x02666AA8 MOV X19, X0
	0x02666AAC TBNZ X8, 0x0, 0x2666AC4
	0x02666AB0 ADRP X0, 0x1A8D000
	0x02666AB4 LDR X0, [X0 + 0x6C0]
	0x02666AB8 BL 0x1C16CF4
	0x02666ABC MOVZ W8, 0x1
	0x02666AC0 STRB W8, [X23 + 0x1ED]
	0x02666AC4 LDR X8, [X20 + 0x20]
	0x02666AC8 LDR X0, [X22]
	0x02666ACC LDR X8, [X8 + 0xC0]
	0x02666AD0 LDR W9, [X0 + 0xE0]
	0x02666AD4 LDR X22, [X8]
	0x02666AD8 CBNZ W9, 0x2666AE0
	0x02666ADC BL 0x1C16DFC
	0x02666AE0 MOV X0, X22
	0x02666AE4 MOV X1, X31
	0x02666AE8 BL 0x338C698
	0x02666AEC STR X0, [X19 + 0x10]
	0x02666AF0 LDR X8, [X20 + 0x20]
	0x02666AF4 MOV X1, X31
	0x02666AF8 LDR X8, [X8 + 0xC0]
	0x02666AFC LDR X0, [X8]
	0x02666B00 BL 0x338C698
	0x02666B04 MOV X1, X31
	0x02666B08 BL 0x3525310
	0x02666B0C STR W0, [X19 + 0x18]
	0x02666B10 MOV X0, X19
	0x02666B14 MOV X1, X31
	0x02666B18 BL 0x3525588
	0x02666B1C LDR X8, [X20 + 0x20]
	0x02666B20 LDR X8, [X8 + 0xC0]
	0x02666B24 LDR X0, [X8 + 0x10]
	0x02666B28 LDRB W8, [X0 + 0x135]
	0x02666B2C TBNZ X8, 0x0, 0x2666B34
	0x02666B30 BL 0x1C5C684
	0x02666B34 AND W21, W21, 0x1
	0x02666B38 BL 0x1C16F10
	0x02666B3C LDR X8, [X20 + 0x20]
	0x02666B40 MOV X20, X0
	0x02666B44 LDR X8, [X8 + 0xC0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0x1D75000
	008 Move X22, 0x1A8E000
	009 Move W8, [X23+486]
	010 Move X22, [X22+1728]
	011 Move X20, X2
	012 Move W21, W1
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0x1A8E000
	019 Move X0, [X0+1728]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X23+486], W8
	023 Move X8, [X20+32]
	024 Move X0, [X22]
	025 Move X8, [X8+192]
	026 Move W9, [X0+224]
	027 Move X22, [X8]
	028 Compare W9, 0
	029 JumpIfNotEqual {31}
	030 Call 0x1C17DFC
	031 Move X0, X22
	032 Move X1, X31
	033 Call Type.GetTypeFromHandle, X0
	034 Move [X19+16], X0
	035 Move X8, [X20+32]
	036 Move X1, X31
	037 Move X8, [X8+192]
	038 Move X0, [X8]
	039 Call Type.GetTypeFromHandle, X0
	040 Move X1, X31
	041 Call StructWrapperPool.GetWrappedType, X0
	042 Move [X19+24], W0
	043 Move X0, X19
	044 Move X1, X31
	045 Call StructWrapperPool..ctor, X0
	046 Move X8, [X20+32]
	047 Move X8, [X8+192]
	048 Move X0, [X8+16]
	049 Move W8, [X0+309]
	050 Move TEMP, X8
	051 And TEMP, TEMP, 1
	052 Compare TEMP, 1
	053 JumpIfEqual {55}
	054 Call 0x1C5D684
	055 And W21, W21, 1
	056 Call 0x1C17F10
	057 Move X8, [X20+32]
	058 Move X20, X0
	059 Move X8, [X8+192]
	060 Move X1, [X8+24]
	061 Call Stack`1<Object>..ctor, X0
	062 Move [X19+32], X20
	063 Move [X19+40], W21
	064 Move X20, [X31+32]
	065 Move X19, [X31+40]
	066 Move X22, [X31+16]
	067 Move X21, [X31+24]
	068 Move X30, [X31+48]
	069 Move X23, [X31+56]
	070 Return 

Method: ExitGames.Client.Photon.StructWrapping.StructWrapper`1<T> Acquire()

Disassembly:
	0x02666B48 LDR X1, [X8 + 0x18]
	0x02666B4C BL 0x2601D04
	0x02666B50 STR X20, [X19 + 0x20]
	0x02666B54 STRB W21, [X19 + 0x28]
	0x02666B58 LDP X20, X19, [X31 + 0x20]
	0x02666B5C LDP X22, X21, [X31 + 0x10]
	0x02666B60 LDP X30, X23, [X31], #0x30
	0x02666B64 RET
	0x02666B68 STR X30, [X31 - 0x50]!
	0x02666B6C STP X26, X25, [X31 + 0x10]
	0x02666B70 STP X24, X23, [X31 + 0x20]
	0x02666B74 STP X22, X21, [X31 + 0x30]
	0x02666B78 STP X20, X19, [X31 + 0x40]
	0x02666B7C MOV X19, X0
	0x02666B80 LDR X0, [X0 + 0x20]
	0x02666B84 CBZ X0, 0x2666C50
	0x02666B88 LDR W8, [X0 + 0x18]
	0x02666B8C MOV X20, X1
	0x02666B90 CBZ W8, 0x2666BD4
	0x02666B94 LDR X8, [X20 + 0x20]
	0x02666B98 LDR X8, [X8 + 0xC0]
	0x02666B9C LDR X1, [X8 + 0x48]
	0x02666BA0 BL 0x26022C0
	0x02666BA4 MOV X21, X0
	0x02666BA8 CBZ X0, 0x2666C50
	0x02666BAC LDR W8, [X21 + 0x28]
	0x02666BB0 MOV X0, X21
	0x02666BB4 LDP X20, X19, [X31 + 0x40]
	0x02666BB8 LDP X24, X23, [X31 + 0x20]
	0x02666BBC ORR W8, W8, 0x8
	0x02666BC0 STR W8, [X21 + 0x28]
	0x02666BC4 LDP X22, X21, [X31 + 0x30]
	0x02666BC8 LDP X26, X25, [X31 + 0x10]
	0x02666BCC LDR X30, [X31], #0x50
	0x02666BD0 RET
	0x02666BD4 MOVZ W24, 0x3
	0x02666BD8 MOVZ W25, 0x3
	0x02666BDC LDR X8, [X20 + 0x20]
	0x02666BE0 LDR X22, [X19 + 0x10]
	0x02666BE4 LDR W23, [X19 + 0x18]
	0x02666BE8 LDR X8, [X8 + 0xC0]
	0x02666BEC LDR X0, [X8 + 0x28]
	0x02666BF0 LDRB W8, [X19 + 0x28]
	0x02666BF4 LDRB W9, [X0 + 0x135]
	0x02666BF8 CMP W8, 0x0
	0x02666BFC CSINC W26, W24, W31, NE
	0x02666C00 TBNZ X9, 0x0, 0x2666C08
	0x02666C04 BL 0x1C5C684
	0x02666C08 BL 0x1C16F10
	0x02666C0C MOV X1, X22
	0x02666C10 MOV W2, W23
	0x02666C14 MOV X3, X31
	0x02666C18 MOV X21, X0
	0x02666C1C BL 0x3524A84
	0x02666C20 STR W26, [X21 + 0x28]
	0x02666C24 LDR X8, [X20 + 0x20]
	0x02666C28 LDR X8, [X8 + 0xC0]
	0x02666C2C STR X19, [X21 + 0x20]
	0x02666C30 CBZ W25, 0x2666BAC

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X19, X0
	011 Move X0, [X0+32]
	012 Compare X0, 0
	013 JumpIfEqual {74}
	014 Move W8, [X0+24]
	015 Move X20, X1
	016 Compare W8, 0
	017 JumpIfEqual {39}
	018 Move X8, [X20+32]
	019 Move X8, [X8+192]
	020 Move X1, [X8+72]
	021 Call Stack`1<Object>.Pop, X0
	022 Move X21, X0
	023 Compare X0, 0
	024 JumpIfEqual {74}
	025 Move W8, [X21+40]
	026 Move X0, X21
	027 Move X20, [X31+64]
	028 Move X19, [X31+72]
	029 Move X24, [X31+32]
	030 Move X23, [X31+40]
	031 Or W8, W8, 8
	032 Move [X21+40], W8
	033 Move X22, [X31+48]
	034 Move X21, [X31+56]
	035 Move X26, [X31+16]
	036 Move X25, [X31+24]
	037 Move X30, [X31+80]
	038 Return X0
	039 Move W24, 3
	040 Move W25, 3
	041 Move X8, [X20+32]
	042 Move X22, [X19+16]
	043 Move W23, [X19+24]
	044 Move X8, [X8+192]
	045 Move X0, [X8+40]
	046 Move W8, [X19+40]
	047 Move W9, [X0+309]
	048 NotImplemented "Instruction CMP not yet implemented."
	049 NotImplemented "Instruction CSINC not yet implemented."
	050 Move TEMP, X9
	051 And TEMP, TEMP, 1
	052 Compare TEMP, 1
	053 JumpIfEqual {55}
	054 Call 0x1C5D684
	055 Call 0x1C17F10
	056 Move X1, X22
	057 Move W2, W23
	058 Move X3, X31
	059 Move X21, X0
	060 Call StructWrapper..ctor, X0, X1, X2
	061 Move [X21+40], W26
	062 Move X8, [X20+32]
	063 Move X8, [X8+192]
	064 Move [X21+32], X19
	065 Compare W25, 0
	066 JumpIfEqual {25}
	067 Move X0, [X19+32]
	068 Compare X0, 0
	069 JumpIfEqual {74}
	070 Move X2, [X8+64]
	071 Move X1, X21
	072 Call Stack`1<Object>.Push, X0, X1
	073 Subtract W25, W25, 1
	074 Call 0x1C17F20

Method: ExitGames.Client.Photon.StructWrapping.StructWrapper`1<T> Acquire(T value)

Disassembly:
	0x02666C34 LDR X0, [X19 + 0x20]
	0x02666C38 CBZ X0, 0x2666C50
	0x02666C3C LDR X2, [X8 + 0x40]
	0x02666C40 MOV X1, X21
	0x02666C44 BL 0x2602314
	0x02666C48 SUB W25, W25, 0x1
	0x02666C4C B 0x2666BDC
	0x02666C50 BL 0x1C16F20
	0x02666C54 STP D11, D10, [X31 - 0x30]!
	0x02666C58 STP D9, D8, [X31 + 0x10]
	0x02666C5C STR X30, [X31 + 0x20]
	0x02666C60 LDR X8, [X1 + 0x20]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X8, [X2+32]
	004 Move W19, W1
	005 Move X8, [X8+192]
	006 Move X1, [X8+80]
	007 Call 0x2666B48, X0
	008 Compare X0, 0
	009 JumpIfEqual {15}
	010 And W8, W19, 1
	011 Move [X0+44], W8
	012 Move X30, [X31+16]
	013 Move X19, [X31+24]
	014 Return X0
	015 Call 0x1C17F20

Method: System.Int32 get_Count()

Disassembly:
	0x02666C64 MOV V8.16B, V3.16B
	0x02666C68 MOV V9.16B, V2.16B
	0x02666C6C MOV V10.16B, V1.16B
	0x02666C70 LDR X8, [X8 + 0xC0]
	0x02666C74 MOV V11.16B, V0.16B
	0x02666C78 LDR X1, [X8 + 0x50]
	0x02666C7C BL 0x2666B68

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+32]
	003 Compare X8, 0
	004 JumpIfEqual {8}
	005 Move W0, [X8+24]
	006 Move X30, [X31+16]
	007 Return X0
	008 Call 0x1C17F20

Method: System.Void Release(ExitGames.Client.Photon.StructWrapping.StructWrapper`1<T> obj)

Disassembly:
	0x02666C80 CBZ X0, 0x2666C9C
	0x02666C84 STP S9, S8, [X0 + 0x34]
	0x02666C88 LDR X30, [X31 + 0x20]
	0x02666C8C LDP D9, D8, [X31 + 0x10]
	0x02666C90 STP S11, S10, [X0 + 0x2C]
	0x02666C94 LDP D11, D10, [X31], #0x30
	0x02666C98 RET
	0x02666C9C BL 0x1C16F20
	0x02666CA0 STR X30, [X31 - 0x10]!
	0x02666CA4 LDR X8, [X0 + 0x20]
	0x02666CA8 CBZ X8, 0x2666CB8
	0x02666CAC LDR W0, [X8 + 0x18]
	0x02666CB0 LDR X30, [X31], #0x10

ISIL:
	001 Move [X31-16], X30
	002 Compare X1, 0
	003 JumpIfEqual {16}
	004 Move W8, [X1+40]
	005 And W8, W8, 0xFFFFFFF7
	006 Move [X1+40], W8
	007 Move X0, [X0+32]
	008 Compare X0, 0
	009 JumpIfEqual {16}
	010 Move X8, [X2+32]
	011 Move X8, [X8+192]
	012 Move X2, [X8+64]
	013 Move X30, [X31+16]
	014 Call Stack`1<Object>.Push, X0, X1
	015 Return 
	016 Call 0x1C17F20

