Type: ExitGames.Client.Photon.StructWrapping.StructWrapperPool

Method: ExitGames.Client.Photon.StructWrapping.WrappedType GetWrappedType(System.Type type)

Disassembly:
	0x03526310 STRB W8, [X20 + 0x2C]
	0x03526314 LDR X8, [X19]
	0x03526318 MOV X0, X20
	0x0352631C LDR X1, [X8 + 0x40]
	0x03526320 BL 0x1C16E00
	0x03526324 CBZ X0, 0x352A2E0
	0x03526328 LDR W8, [X23]
	0x0352632C CMP W8, 0x20
	0x03526330 B.LS 0x352A2EC
	0x03526334 STR X20, [X19 + 0x120]
	0x03526338 LDR X0, [X22]
	0x0352633C BL 0x1C16F10
	0x03526340 LDR X2, [X21]
	0x03526344 MOVZ W1, 0x4
	0x03526348 MOV X20, X0
	0x0352634C BL 0x2667E48
	0x03526350 CBZ X20, 0x352A2DC
	0x03526354 MOVZ W8, 0x21
	0x03526358 STRB W8, [X20 + 0x2C]
	0x0352635C LDR X8, [X19]
	0x03526360 MOV X0, X20
	0x03526364 LDR X1, [X8 + 0x40]
	0x03526368 BL 0x1C16E00
	0x0352636C CBZ X0, 0x352A2E0
	0x03526370 LDR W8, [X23]
	0x03526374 CMP W8, 0x21
	0x03526378 B.LS 0x352A2EC
	0x0352637C STR X20, [X19 + 0x128]
	0x03526380 LDR X0, [X22]
	0x03526384 BL 0x1C16F10
	0x03526388 LDR X2, [X21]
	0x0352638C MOVZ W1, 0x4
	0x03526390 MOV X20, X0
	0x03526394 BL 0x2667E48
	0x03526398 CBZ X20, 0x352A2DC
	0x0352639C MOVZ W8, 0x22
	0x035263A0 STRB W8, [X20 + 0x2C]
	0x035263A4 LDR X8, [X19]
	0x035263A8 MOV X0, X20
	0x035263AC LDR X1, [X8 + 0x40]
	0x035263B0 BL 0x1C16E00
	0x035263B4 CBZ X0, 0x352A2E0
	0x035263B8 LDR W8, [X23]
	0x035263BC CMP W8, 0x22
	0x035263C0 B.LS 0x352A2EC
	0x035263C4 STR X20, [X19 + 0x130]
	0x035263C8 LDR X0, [X22]
	0x035263CC BL 0x1C16F10
	0x035263D0 LDR X2, [X21]
	0x035263D4 MOVZ W1, 0x4
	0x035263D8 MOV X20, X0
	0x035263DC BL 0x2667E48
	0x035263E0 CBZ X20, 0x352A2DC
	0x035263E4 MOVZ W8, 0x23
	0x035263E8 STRB W8, [X20 + 0x2C]
	0x035263EC LDR X8, [X19]
	0x035263F0 MOV X0, X20
	0x035263F4 LDR X1, [X8 + 0x40]
	0x035263F8 BL 0x1C16E00
	0x035263FC CBZ X0, 0x352A2E0
	0x03526400 LDR W8, [X23]
	0x03526404 CMP W8, 0x23
	0x03526408 B.LS 0x352A2EC
	0x0352640C STR X20, [X19 + 0x138]
	0x03526410 LDR X0, [X22]
	0x03526414 BL 0x1C16F10
	0x03526418 LDR X2, [X21]
	0x0352641C MOVZ W1, 0x4
	0x03526420 MOV X20, X0
	0x03526424 BL 0x2667E48
	0x03526428 CBZ X20, 0x352A2DC
	0x0352642C MOVZ W8, 0x24
	0x03526430 STRB W8, [X20 + 0x2C]
	0x03526434 LDR X8, [X19]
	0x03526438 MOV X0, X20
	0x0352643C LDR X1, [X8 + 0x40]
	0x03526440 BL 0x1C16E00
	0x03526444 CBZ X0, 0x352A2E0
	0x03526448 LDR W8, [X23]
	0x0352644C CMP W8, 0x24
	0x03526450 B.LS 0x352A2EC
	0x03526454 STR X20, [X19 + 0x140]
	0x03526458 LDR X0, [X22]
	0x0352645C BL 0x1C16F10
	0x03526460 LDR X2, [X21]
	0x03526464 MOVZ W1, 0x4
	0x03526468 MOV X20, X0
	0x0352646C BL 0x2667E48
	0x03526470 CBZ X20, 0x352A2DC
	0x03526474 MOVZ W8, 0x25
	0x03526478 STRB W8, [X20 + 0x2C]
	0x0352647C LDR X8, [X19]
	0x03526480 MOV X0, X20
	0x03526484 LDR X1, [X8 + 0x40]
	0x03526488 BL 0x1C16E00
	0x0352648C CBZ X0, 0x352A2E0
	0x03526490 LDR W8, [X23]
	0x03526494 CMP W8, 0x25
	0x03526498 B.LS 0x352A2EC
	0x0352649C STR X20, [X19 + 0x148]
	0x035264A0 LDR X0, [X22]
	0x035264A4 BL 0x1C16F10
	0x035264A8 LDR X2, [X21]
	0x035264AC MOVZ W1, 0x4
	0x035264B0 MOV X20, X0
	0x035264B4 BL 0x2667E48
	0x035264B8 CBZ X20, 0x352A2DC
	0x035264BC MOVZ W8, 0x26
	0x035264C0 STRB W8, [X20 + 0x2C]
	0x035264C4 LDR X8, [X19]
	0x035264C8 MOV X0, X20
	0x035264CC LDR X1, [X8 + 0x40]
	0x035264D0 BL 0x1C16E00
	0x035264D4 CBZ X0, 0x352A2E0
	0x035264D8 LDR W8, [X23]
	0x035264DC CMP W8, 0x26
	0x035264E0 B.LS 0x352A2EC
	0x035264E4 STR X20, [X19 + 0x150]
	0x035264E8 LDR X0, [X22]
	0x035264EC BL 0x1C16F10
	0x035264F0 LDR X2, [X21]
	0x035264F4 MOVZ W1, 0x4
	0x035264F8 MOV X20, X0
	0x035264FC BL 0x2667E48
	0x03526500 CBZ X20, 0x352A2DC
	0x03526504 MOVZ W8, 0x27
	0x03526508 STRB W8, [X20 + 0x2C]
	0x0352650C LDR X8, [X19]
	0x03526510 MOV X0, X20
	0x03526514 LDR X1, [X8 + 0x40]
	0x03526518 BL 0x1C16E00
	0x0352651C CBZ X0, 0x352A2E0
	0x03526520 LDR W8, [X23]
	0x03526524 CMP W8, 0x27
	0x03526528 B.LS 0x352A2EC
	0x0352652C STR X20, [X19 + 0x158]
	0x03526530 LDR X0, [X22]
	0x03526534 BL 0x1C16F10
	0x03526538 LDR X2, [X21]
	0x0352653C MOVZ W1, 0x4
	0x03526540 MOV X20, X0
	0x03526544 BL 0x2667E48
	0x03526548 CBZ X20, 0x352A2DC
	0x0352654C MOVZ W8, 0x28
	0x03526550 STRB W8, [X20 + 0x2C]
	0x03526554 LDR X8, [X19]
	0x03526558 MOV X0, X20
	0x0352655C LDR X1, [X8 + 0x40]
	0x03526560 BL 0x1C16E00
	0x03526564 CBZ X0, 0x352A2E0
	0x03526568 LDR W8, [X23]
	0x0352656C CMP W8, 0x28
	0x03526570 B.LS 0x352A2EC
	0x03526574 STR X20, [X19 + 0x160]
	0x03526578 LDR X0, [X22]
	0x0352657C BL 0x1C16F10
	0x03526580 LDR X2, [X21]
	0x03526584 MOVZ W1, 0x4

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xEBA000
	007 Move X20, 0xBF7000
	008 Move X21, 0xBCE000
	009 Move W8, [X22+2918]
	010 Move X20, [X20+584]
	011 Move X21, [X21+1728]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {43}
	017 Move X0, 0xBF7000
	018 Move X0, [X0+584]
	019 Call 0x1C17CF4
	020 Move X0, 0xBF5000
	021 Move X0, [X0+3432]
	022 Call 0x1C17CF4
	023 Move X0, 0xBF6000
	024 Move X0, [X0+2680]
	025 Call 0x1C17CF4
	026 Move X0, 0xBF5000
	027 Move X0, [X0+3448]
	028 Call 0x1C17CF4
	029 Move X0, 0xBF5000
	030 Move X0, [X0+3456]
	031 Call 0x1C17CF4
	032 Move X0, 0xBF5000
	033 Move X0, [X0+3464]
	034 Call 0x1C17CF4
	035 Move X0, 0xBF6000
	036 Move X0, [X0+2688]
	037 Call 0x1C17CF4
	038 Move X0, 0xBCE000
	039 Move X0, [X0+1728]
	040 Call 0x1C17CF4
	041 Move W8, 1
	042 Move [X22+2918], W8
	043 Move X0, [X21]
	044 Move X20, [X20]
	045 Move W8, [X0+224]
	046 Compare W8, 0
	047 JumpIfNotEqual {49}
	048 Call 0x1C17DFC
	049 Move X0, X20
	050 Move X1, X31
	051 Call Type.GetTypeFromHandle, X0
	052 Move X1, X0
	053 Move X0, X19
	054 Move X2, X31
	055 Call Type.op_Equality, X0, X1
	056 Move TEMP, X0
	057 And TEMP, TEMP, 1
	058 Compare TEMP, 1
	059 JumpIfNotEqual {61}
	060 Move W0, 1
	061 Move X8, 0xBF5000
	062 Move X0, [X21]
	063 Move X8, [X8+3432]
	064 Move W9, [X0+224]
	065 Move X20, [X8]
	066 Compare W9, 0
	067 JumpIfNotEqual {69}
	068 Call 0x1C17DFC
	069 Move X0, X20
	070 Move X1, X31
	071 Call Type.GetTypeFromHandle, X0
	072 Move X1, X0
	073 Move X0, X19
	074 Move X2, X31
	075 Call Type.op_Equality, X0, X1
	076 Move TEMP, X0
	077 And TEMP, TEMP, 1
	078 Compare TEMP, 1
	079 JumpIfNotEqual {81}
	080 Move W0, 2
	081 Move X8, 0xBF5000
	082 Move X0, [X21]
	083 Move X8, [X8+3448]
	084 Move W9, [X0+224]
	085 Move X20, [X8]
	086 Compare W9, 0
	087 JumpIfNotEqual {89}
	088 Call 0x1C17DFC
	089 Move X0, X20
	090 Move X1, X31
	091 Call Type.GetTypeFromHandle, X0
	092 Move X1, X0
	093 Move X0, X19
	094 Move X2, X31
	095 Call Type.op_Equality, X0, X1
	096 Move TEMP, X0
	097 And TEMP, TEMP, 1
	098 Compare TEMP, 1
	099 JumpIfNotEqual {101}
	100 Move W0, 3
	101 Move X8, 0xBF5000
	102 Move X0, [X21]
	103 Move X8, [X8+3456]
	104 Move W9, [X0+224]
	105 Move X20, [X8]
	106 Compare W9, 0
	107 JumpIfNotEqual {109}
	108 Call 0x1C17DFC
	109 Move X0, X20
	110 Move X1, X31
	111 Call Type.GetTypeFromHandle, X0
	112 Move X1, X0
	113 Move X0, X19
	114 Move X2, X31
	115 Call Type.op_Equality, X0, X1
	116 Move TEMP, X0
	117 And TEMP, TEMP, 1
	118 Compare TEMP, 1
	119 JumpIfNotEqual {121}
	120 Move W0, 4
	121 Move X8, 0xBF5000
	122 Move X0, [X21]
	123 Move X8, [X8+3464]
	124 Move W9, [X0+224]
	125 Move X20, [X8]
	126 Compare W9, 0
	127 JumpIfNotEqual {129}
	128 Call 0x1C17DFC
	129 Move X0, X20
	130 Move X1, X31
	131 Call Type.GetTypeFromHandle, X0
	132 Move X1, X0
	133 Move X0, X19
	134 Move X2, X31
	135 Call Type.op_Equality, X0, X1
	136 Move TEMP, X0
	137 And TEMP, TEMP, 1
	138 Compare TEMP, 1
	139 JumpIfNotEqual {141}
	140 Move W0, 5
	141 Move X8, 0xBF6000
	142 Move X0, [X21]
	143 Move X8, [X8+2688]
	144 Move W9, [X0+224]
	145 Move X20, [X8]
	146 Compare W9, 0
	147 JumpIfNotEqual {149}
	148 Call 0x1C17DFC
	149 Move X0, X20
	150 Move X1, X31
	151 Call Type.GetTypeFromHandle, X0
	152 Move X1, X0
	153 Move X0, X19
	154 Move X2, X31
	155 Call Type.op_Equality, X0, X1
	156 Move TEMP, X0
	157 And TEMP, TEMP, 1
	158 Compare TEMP, 1
	159 JumpIfNotEqual {161}
	160 Move W0, 6
	161 Move X8, 0xBF6000
	162 Move X0, [X21]
	163 Move X8, [X8+2680]
	164 Move W9, [X0+224]
	165 Move X20, [X8]
	166 Compare W9, 0
	167 JumpIfNotEqual {169}
	168 Call 0x1C17DFC
	169 Move X0, X20
	170 Move X1, X31
	171 Call Type.GetTypeFromHandle, X0
	172 Move X1, X0
	173 Move X0, X19
	174 Move X2, X31
	175 Call Type.op_Equality, X0, X1
	176 And W31, W0, 1
	177 Move W8, 7
	178 NotImplemented "Instruction CSEL not yet implemented."
	179 Move X20, [X31+32]
	180 Move X19, [X31+40]
	181 Move X22, [X31+16]
	182 Move X21, [X31+24]
	183 Move X30, [X31+48]
	184 Return X0

Method: System.Void .ctor()

Disassembly:
	0x03526588 MOV X20, X0
	0x0352658C BL 0x2667E48

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

