Type: ExitGames.Client.Photon.ParameterDictionary

Method: System.Void .ctor()

Disassembly:
	0x034FC6A4 LDR X0, [X0 + 0xC68]
	0x034FC6A8 BL 0x1C16CF4
	0x034FC6AC MOVZ W8, 0x1
	0x034FC6B0 STRB W8, [X19 + 0xA6C]
	0x034FC6B4 LDR X8, [X20]
	0x034FC6B8 LDP X20, X19, [X31 + 0x10]
	0x034FC6BC MOVZ W9, 0x201
	0x034FC6C0 MOVK W9, 0x10000
	0x034FC6C4 LDR X8, [X8 + 0xB8]
	0x034FC6C8 MOVZ W10, 0x1
	0x034FC6CC STR W9, [X8]
	0x034FC6D0 STRB W10, [X8 + 0x4]
	0x034FC6D4 LDR X30, [X31], #0x20
	0x034FC6D8 RET
	0x034FC6DC LDR X0, [X0 + 0x30]
	0x034FC6E0 RET
	0x034FC6E4 STR X1, [X0 + 0x30]
	0x034FC6E8 RET
	0x034FC6EC LDR X0, [X0 + 0x38]
	0x034FC6F0 RET
	0x034FC6F4 STR X1, [X0 + 0x38]
	0x034FC6F8 RET
	0x034FC6FC LDR X0, [X0 + 0x90]
	0x034FC700 RET
	0x034FC704 LDR X0, [X0 + 0x98]
	0x034FC708 RET
	0x034FC70C MOV W0, W31
	0x034FC710 RET
	0x034FC714 STR X30, [X31 - 0x10]!
	0x034FC718 LDRH W8, [X0 + 0x68]
	0x034FC71C ADD X0, X31, 0xC
	0x034FC720 MOV X1, X31
	0x034FC724 STRH W8, [X31 + 0xC]
	0x034FC728 BL 0x3398CE4
	0x034FC72C LDR X30, [X31], #0x10
	0x034FC730 RET
	0x034FC734 STR X30, [X31 - 0x20]!
	0x034FC738 STP X20, X19, [X31 + 0x10]
	0x034FC73C ADRP X20, 0xEE3000
	0x034FC740 ADRP X19, 0xBFF000
	0x034FC744 LDRB W8, [X20 + 0xA6D]
	0x034FC748 LDR X19, [X19 + 0xEE0]
	0x034FC74C TBNZ X8, 0x0, 0x34FC764
	0x034FC750 ADRP X0, 0xBFF000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X20, 0xEE4000
	008 Move X23, 0xC38000
	009 Move X22, 0xC38000
	010 Move X21, 0xC38000
	011 Move W8, [X20+2647]
	012 Move X23, [X23+3088]
	013 Move X22, [X22+3096]
	014 Move X21, [X21+3104]
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {31}
	020 Move X0, 0xC38000
	021 Move X0, [X0+3104]
	022 Call 0x1C17CF4
	023 Move X0, 0xC38000
	024 Move X0, [X0+3096]
	025 Call 0x1C17CF4
	026 Move X0, 0xC38000
	027 Move X0, [X0+3088]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X20+2647], W8
	031 Move X0, [X23]
	032 Call 0x1C17F10
	033 Move X1, X31
	034 Move X20, X0
	035 Call StructWrapperPools..ctor, X0
	036 Move X0, X19
	037 Move X1, X31
	038 Move [X19+24], X20
	039 Call Object..ctor, X0
	040 Move X0, [X22]
	041 Call 0x1C17F10
	042 Move X2, [X21]
	043 Move W1, 29
	044 Move X20, X0
	045 Call 0x2426480, X0, X1
	046 Move [X19+16], X20
	047 Move X20, [X31+32]
	048 Move X19, [X31+40]
	049 Move X22, [X31+16]
	050 Move X21, [X31+24]
	051 Move X30, [X31+48]
	052 Move X23, [X31+56]
	053 Return 

Method: System.Void .ctor(System.Int32 capacity)

Disassembly:
	0x034FC754 LDR X0, [X0 + 0xEE0]
	0x034FC758 BL 0x1C16CF4
	0x034FC75C MOVZ W8, 0x1
	0x034FC760 STRB W8, [X20 + 0xA6D]
	0x034FC764 LDR X0, [X19]
	0x034FC768 LDR W8, [X0 + 0xE0]
	0x034FC76C CBNZ W8, 0x34FC778
	0x034FC770 BL 0x1C16DFC
	0x034FC774 LDR X0, [X19]
	0x034FC778 LDR X8, [X0 + 0xB8]
	0x034FC77C LDP X20, X19, [X31 + 0x10]
	0x034FC780 LDR W0, [X8 + 0x14]
	0x034FC784 LDR X30, [X31], #0x20
	0x034FC788 RET
	0x034FC78C LDR X8, [X0 + 0x28]
	0x034FC790 CBZ X8, 0x34FC7A4
	0x034FC794 LDRB W8, [X8 + 0x44]
	0x034FC798 CMP W8, 0x0
	0x034FC79C CSET W0, NE
	0x034FC7A0 RET
	0x034FC7A4 MOV W0, W31
	0x034FC7A8 RET
	0x034FC7AC SUB X31, X31, 0xA0
	0x034FC7B0 STR X30, [X31 + 0x60]
	0x034FC7B4 STP X24, X23, [X31 + 0x70]
	0x034FC7B8 STP X22, X21, [X31 + 0x80]
	0x034FC7BC STP X20, X19, [X31 + 0x90]
	0x034FC7C0 ADRP X21, 0xEE3000
	0x034FC7C4 ADRP X19, 0xBF7000
	0x034FC7C8 LDRB W8, [X21 + 0xA72]
	0x034FC7CC LDR X19, [X19 + 0x8F0]
	0x034FC7D0 MOV X20, X1
	0x034FC7D4 TBNZ X8, 0x0, 0x34FC84C
	0x034FC7D8 ADRP X0, 0xBFC000
	0x034FC7DC LDR X0, [X0 + 0x4E8]
	0x034FC7E0 BL 0x1C16CF4
	0x034FC7E4 ADRP X0, 0xBFC000
	0x034FC7E8 LDR X0, [X0 + 0x4F0]
	0x034FC7EC BL 0x1C16CF4
	0x034FC7F0 ADRP X0, 0xBFC000
	0x034FC7F4 LDR X0, [X0 + 0x4F8]
	0x034FC7F8 BL 0x1C16CF4
	0x034FC7FC ADRP X0, 0xBFC000
	0x034FC800 LDR X0, [X0 + 0x500]
	0x034FC804 BL 0x1C16CF4
	0x034FC808 ADRP X0, 0xBFA000
	0x034FC80C LDR X0, [X0 + 0x1B0]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0xEE4000
	009 Move X24, 0xC38000
	010 Move X23, 0xC38000
	011 Move X22, 0xC38000
	012 Move W8, [X21+2648]
	013 Move X24, [X24+3088]
	014 Move X23, [X23+3096]
	015 Move X22, [X22+3104]
	016 Move W20, W1
	017 Move X19, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {33}
	022 Move X0, 0xC38000
	023 Move X0, [X0+3104]
	024 Call 0x1C17CF4
	025 Move X0, 0xC38000
	026 Move X0, [X0+3096]
	027 Call 0x1C17CF4
	028 Move X0, 0xC38000
	029 Move X0, [X0+3088]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X21+2648], W8
	033 Move X0, [X24]
	034 Call 0x1C17F10
	035 Move X1, X31
	036 Move X21, X0
	037 Call StructWrapperPools..ctor, X0
	038 Move X0, X19
	039 Move X1, X31
	040 Move [X19+24], X21
	041 Call Object..ctor, X0
	042 Move X0, [X23]
	043 Call 0x1C17F10
	044 Move X2, [X22]
	045 Move W1, W20
	046 Move X21, X0
	047 Call 0x2426480, X0, X1
	048 Move [X19+16], X21
	049 Move X20, [X31+48]
	050 Move X19, [X31+56]
	051 Move X22, [X31+32]
	052 Move X21, [X31+40]
	053 Move X24, [X31+16]
	054 Move X23, [X31+24]
	055 Move X30, [X31+64]
	056 Return 

Method: ExitGames.Client.Photon.NonAllocDictionary`2<System.Byte, System.Object> op_Implicit(ExitGames.Client.Photon.ParameterDictionary value)

Disassembly:
	0x034FC810 BL 0x1C16CF4
	0x034FC814 ADRP X0, 0xBFA000
	0x034FC818 LDR X0, [X0 + 0x1B8]
	0x034FC81C BL 0x1C16CF4
	0x034FC820 ADRP X0, 0xBF7000
	0x034FC824 LDR X0, [X0 + 0x8F0]

ISIL:
	001 Move [X31-16], X30
	002 Compare X0, 0
	003 JumpIfEqual {7}
	004 Move X0, [X0+16]
	005 Move X30, [X31+16]
	006 Return X0
	007 Call 0x1C17F20

Method: System.Collections.Generic.IEnumerator`1<System.Collections.Generic.KeyValuePair`2<System.Byte, System.Object>> System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.Byte,System.Object>>.GetEnumerator()

Disassembly:
	0x034FC828 BL 0x1C16CF4
	0x034FC82C ADRP X0, 0xC24000
	0x034FC830 LDR X0, [X0 + 0xFB8]
	0x034FC834 BL 0x1C16CF4
	0x034FC838 ADRP X0, 0xC00000
	0x034FC83C LDR X0, [X0 + 0x720]
	0x034FC840 BL 0x1C16CF4
	0x034FC844 MOVZ W8, 0x1
	0x034FC848 STRB W8, [X21 + 0xA72]
	0x034FC84C LDR X0, [X19]
	0x034FC850 MOVI V0.2D, 0x0
	0x034FC854 STR X31, [X31 + 0x50]
	0x034FC858 STP V0, V0, [X31 + 0x30]
	0x034FC85C BL 0x1C16F10
	0x034FC860 MOV X1, X31
	0x034FC864 MOV X19, X0
	0x034FC868 BL 0x3231AC4
	0x034FC86C CBZ X20, 0x34FC95C
	0x034FC870 ADRP X8, 0xBFC000
	0x034FC874 LDR X8, [X8 + 0x4E8]
	0x034FC878 ADRP X22, 0xBFC000
	0x034FC87C LDR X22, [X22 + 0x4F8]
	0x034FC880 ADRP X23, 0xC24000
	0x034FC884 LDR X1, [X8]
	0x034FC888 ADRP X24, 0xC00000
	0x034FC88C ADRP X21, 0xBFC000
	0x034FC890 LDR X23, [X23 + 0xFB8]
	0x034FC894 LDR X24, [X24 + 0x720]
	0x034FC898 LDR X21, [X21 + 0x4F0]
	0x034FC89C ADD X8, X31, 0x8
	0x034FC8A0 MOV X0, X20
	0x034FC8A4 BL 0x2AA54BC
	0x034FC8A8 LDUR V0, [X31 + 0x8]
	0x034FC8AC LDUR V1, [X31 + 0x18]
	0x034FC8B0 LDR X8, [X31 + 0x28]
	0x034FC8B4 STP V0, V1, [X31 + 0x30]
	0x034FC8B8 STR X8, [X31 + 0x50]
	0x034FC8BC LDR X1, [X22]
	0x034FC8C0 ADD X0, X31, 0x30
	0x034FC8C4 BL 0x2C0A728

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xEE4000
	005 Move W8, [X20+2649]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xC38000
	012 Move X0, [X0+3112]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2649], W8
	016 Move X19, [X19+16]
	017 Compare X19, 0
	018 JumpIfEqual {45}
	019 Move X10, 0xC38000
	020 Move X8, [X19]
	021 Move X10, [X10+3112]
	022 NotImplemented "Instruction LDRH not yet implemented."
	023 Move X1, [X10]
	024 Compare X9, 0
	025 JumpIfEqual {32}
	026 Move X10, [X8+176]
	027 Add X10, X10, 8
	028 NotImplemented "Instruction LDUR not yet implemented."
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Subtract X9, X9, 1
	031 Add X10, X10, 16
	032 Move X0, X19
	033 Move W2, W31
	034 Call 0x1C5D788
	035 NotImplemented "Instruction LDRSW not yet implemented."
	036 Add X8, X8, X9
	037 Add X0, X8, 312
	038 Move X2, [X0]
	039 Move X1, [X0+8]
	040 Move X0, X19
	041 Move X20, [X31+16]
	042 Move X19, [X31+24]
	043 Move X30, [X31+32]
	044 CallNoReturn X2
	045 Call 0x1C17F20

Method: System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator()

Disassembly:
	0x034FC8C8 TBZ X0, 0x0, 0x34FC914
	0x034FC8CC CBZ X19, 0x34FC954
	0x034FC8D0 LDP X1, X20, [X31 + 0x40]
	0x034FC8D4 MOV X0, X19
	0x034FC8D8 MOV X2, X31
	0x034FC8DC BL 0x32333E0
	0x034FC8E0 CBZ X0, 0x34FC958
	0x034FC8E4 LDR X1, [X23]
	0x034FC8E8 MOV X2, X31
	0x034FC8EC BL 0x32333E0
	0x034FC8F0 CBZ X0, 0x34FC94C
	0x034FC8F4 MOV X1, X20
	0x034FC8F8 MOV X2, X31
	0x034FC8FC BL 0x32333E0
	0x034FC900 CBZ X0, 0x34FC950
	0x034FC904 LDR X1, [X24]
	0x034FC908 MOV X2, X31
	0x034FC90C BL 0x32333E0
	0x034FC910 B 0x34FC8BC
	0x034FC914 LDR X1, [X21]
	0x034FC918 ADD X0, X31, 0x30
	0x034FC91C BL 0x2C0A83C
	0x034FC920 CBZ X19, 0x34FC95C
	0x034FC924 LDR X8, [X19]
	0x034FC928 MOV X0, X19
	0x034FC92C LDP X9, X1, [X8 + 0x168]
	0x034FC930 BLR X9
	0x034FC934 LDP X20, X19, [X31 + 0x90]
	0x034FC938 LDP X22, X21, [X31 + 0x80]
	0x034FC93C LDP X24, X23, [X31 + 0x70]
	0x034FC940 LDR X30, [X31 + 0x60]
	0x034FC944 ADD X31, X31, 0xA0
	0x034FC948 RET
	0x034FC94C BL 0x1C16F20
	0x034FC950 BL 0x1C16F20
	0x034FC954 BL 0x1C16F20
	0x034FC958 BL 0x1C16F20
	0x034FC95C BL 0x1C16F20
	0x034FC960 B 0x34FC980
	0x034FC964 B 0x34FC980

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xEE4000
	005 Move W8, [X20+2650]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xC38000
	012 Move X0, [X0+3112]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2650], W8
	016 Move X19, [X19+16]
	017 Compare X19, 0
	018 JumpIfEqual {45}
	019 Move X10, 0xC38000
	020 Move X8, [X19]
	021 Move X10, [X10+3112]
	022 NotImplemented "Instruction LDRH not yet implemented."
	023 Move X1, [X10]
	024 Compare X9, 0
	025 JumpIfEqual {32}
	026 Move X10, [X8+176]
	027 Add X10, X10, 8
	028 NotImplemented "Instruction LDUR not yet implemented."
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Subtract X9, X9, 1
	031 Add X10, X10, 16
	032 Move X0, X19
	033 Move W2, W31
	034 Call 0x1C5D788
	035 NotImplemented "Instruction LDRSW not yet implemented."
	036 Add X8, X8, X9
	037 Add X0, X8, 312
	038 Move X2, [X0]
	039 Move X1, [X0+8]
	040 Move X0, X19
	041 Move X20, [X31+16]
	042 Move X19, [X31+24]
	043 Move X30, [X31+32]
	044 CallNoReturn X2
	045 Call 0x1C17F20

Method: ExitGames.Client.Photon.NonAllocDictionary`2/PairIterator<System.Byte, System.Object> GetEnumerator()

Disassembly:
	0x034FC968 B 0x34FC980
	0x034FC96C B 0x34FC980
	0x034FC970 B 0x34FC980
	0x034FC974 B 0x34FC980
	0x034FC978 B 0x34FC980
	0x034FC97C B 0x34FC980
	0x034FC980 CMP W1, 0x1
	0x034FC984 B.NE 0x34FC9AC
	0x034FC988 BL 0x3EB1AD0
	0x034FC98C LDR X20, [X0]
	0x034FC990 BL 0x3EB1AE0
	0x034FC994 LDR X1, [X21]
	0x034FC998 ADD X0, X31, 0x30
	0x034FC99C BL 0x2C0A83C
	0x034FC9A0 CBZ X20, 0x34FC920
	0x034FC9A4 MOV X0, X20
	0x034FC9A8 BL 0x1C16F18
	0x034FC9AC MOV X19, X0
	0x034FC9B0 MOV X20, X31
	0x034FC9B4 B 0x34FC9BC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xEE4000
	005 Move W8, [X20+2651]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xC38000
	012 Move X0, [X0+3120]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2651], W8
	016 Move X0, [X19+16]
	017 Compare X0, 0
	018 JumpIfEqual {27}
	019 Move X8, 0xC38000
	020 Move X8, [X8+3120]
	021 Move X20, [X31+16]
	022 Move X19, [X31+24]
	023 Move X1, [X8]
	024 Move X30, [X31+32]
	025 Call 0x2426DBC, X0
	026 Return X0
	027 Call 0x1C17F20

Method: System.Object get_Item(System.Byte key)

Disassembly:
	0x034FC9B8 MOV X19, X0
	0x034FC9BC LDR X1, [X21]
	0x034FC9C0 ADD X0, X31, 0x30
	0x034FC9C4 BL 0x2C0A83C
	0x034FC9C8 CBNZ X20, 0x34FC9D4
	0x034FC9CC MOV X0, X19
	0x034FC9D0 BL 0x1D2C690
	0x034FC9D4 MOV X0, X20
	0x034FC9D8 BL 0x1C16F18
	0x034FC9DC BL 0x1990590
	0x034FC9E0 STP X30, X25, [X31 - 0x40]!
	0x034FC9E4 STP X24, X23, [X31 + 0x10]
	0x034FC9E8 STP X22, X21, [X31 + 0x20]
	0x034FC9EC STP X20, X19, [X31 + 0x30]
	0x034FC9F0 ADRP X20, 0xEE3000
	0x034FC9F4 ADRP X21, 0xC00000
	0x034FC9F8 LDRB W8, [X20 + 0xA74]
	0x034FC9FC LDR X21, [X21 + 0xBA8]
	0x034FCA00 MOV X19, X0
	0x034FCA04 TBNZ X8, 0x0, 0x34FCA64
	0x034FCA08 ADRP X0, 0xBF7000
	0x034FCA0C LDR X0, [X0 + 0x618]
	0x034FCA10 BL 0x1C16CF4
	0x034FCA14 ADRP X0, 0xC00000
	0x034FCA18 LDR X0, [X0 + 0x538]
	0x034FCA1C BL 0x1C16CF4
	0x034FCA20 ADRP X0, 0xC00000
	0x034FCA24 LDR X0, [X0 + 0x540]
	0x034FCA28 BL 0x1C16CF4
	0x034FCA2C ADRP X0, 0xC00000
	0x034FCA30 LDR X0, [X0 + 0x2B8]
	0x034FCA34 BL 0x1C16CF4
	0x034FCA38 ADRP X0, 0xC00000
	0x034FCA3C LDR X0, [X0 + 0xBA8]
	0x034FCA40 BL 0x1C16CF4
	0x034FCA44 ADRP X0, 0xC37000
	0x034FCA48 LDR X0, [X0 + 0xA98]
	0x034FCA4C BL 0x1C16CF4
	0x034FCA50 ADRP X0, 0xC37000
	0x034FCA54 LDR X0, [X0 + 0xC70]
	0x034FCA58 BL 0x1C16CF4
	0x034FCA5C MOVZ W8, 0x1
	0x034FCA60 STRB W8, [X20 + 0xA74]
	0x034FCA64 LDR X0, [X21]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xEE4000
	006 Move W8, [X21+2652]
	007 Move W19, W1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {21}
	013 Move X0, 0xC21000
	014 Move X0, [X0+520]
	015 Call 0x1C17CF4
	016 Move X0, 0xC21000
	017 Move X0, [X0+536]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2652], W8
	021 Move X0, [X20+16]
	022 Compare X0, 0
	023 JumpIfEqual {51}
	024 Move X8, 0xC21000
	025 Move X8, [X8+520]
	026 Move W1, W19
	027 Move X2, [X8]
	028 Call 0x24266C8, X0, X1
	029 Compare X0, 0
	030 JumpIfEqual {38}
	031 Move X8, 0xC21000
	032 Move X8, [X8+536]
	033 Move X9, [X0]
	034 Move X8, [X8]
	035 Move W11, [X9+304]
	036 Move W10, [X8+304]
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move X8, X31
	039 Move X9, [X9+200]
	040 Add X9, X9, X10
	041 NotImplemented "Instruction LDUR not yet implemented."
	042 NotImplemented "Instruction CMP not yet implemented."
	043 NotImplemented "Instruction CSEL not yet implemented."
	044 Move X20, [X31+16]
	045 Move X19, [X31+24]
	046 NotImplemented "Instruction CMP not yet implemented."
	047 NotImplemented "Instruction CSEL not yet implemented."
	048 Move X30, [X31+32]
	049 Move X21, [X31+40]
	050 Return X0
	051 Call 0x1C17F20

Method: System.Void set_Item(System.Byte key, System.Object value)

Disassembly:
	0x034FCA68 BL 0x1C16F10
	0x034FCA6C MOV W1, W31
	0x034FCA70 MOV X2, X31
	0x034FCA74 MOV X20, X0
	0x034FCA78 BL 0x3517E94
	0x034FCA7C CBZ X20, 0x34FCCDC
	0x034FCA80 MOVZ W1, 0xF5
	0x034FCA84 MOV X0, X20
	0x034FCA88 MOV X2, X31
	0x034FCA8C BL 0x351EFE8
	0x034FCA90 LDR X8, [X19 + 0x28]
	0x034FCA94 CBZ X8, 0x34FCAA0
	0x034FCA98 LDRB W8, [X8 + 0x44]
	0x034FCA9C UBFM W8, W8, 0x1F, 0x1E
	0x034FCAA0 LDR X9, [X19 + 0x10]
	0x034FCAA4 CBZ X9, 0x34FCCDC
	0x034FCAA8 LDR X23, [X9 + 0x100]
	0x034FCAAC MOV X0, X20
	0x034FCAB0 MOV W1, W31
	0x034FCAB4 MOV X3, X31
	0x034FCAB8 CMP X23, 0x0
	0x034FCABC CSET W9, NE
	0x034FCAC0 ORR W2, W8, W9, 0x0
	0x034FCAC4 BL 0x351F050
	0x034FCAC8 LDR X0, [X19 + 0x18]
	0x034FCACC CBZ X0, 0x34FCCDC

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xEE4000
	007 Move W8, [X22+2653]
	008 Move X19, X2
	009 Move W20, W1
	010 Move X21, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0xC38000
	016 Move X0, [X0+3128]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X22+2653], W8
	020 Move X0, [X21+16]
	021 Compare X0, 0
	022 JumpIfEqual {35}
	023 Move X8, 0xC38000
	024 Move X8, [X8+3128]
	025 Move W1, W20
	026 Move X2, X19
	027 Move X20, [X31+32]
	028 Move X19, [X31+40]
	029 Move X3, [X8]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X30, [X31+48]
	033 Call 0x2426794, X0, X1, X2
	034 Return 
	035 Call 0x1C17F20

Method: System.Int32 get_Count()

Disassembly:
	0x034FCAD0 LDR X8, [X0]
	0x034FCAD4 LDP X9, X1, [X8 + 0x188]
	0x034FCAD8 BLR X9
	0x034FCADC CBZ X0, 0x34FCCDC
	0x034FCAE0 LDR W8, [X0 + 0x18]
	0x034FCAE4 CMP W8, 0x1
	0x034FCAE8 B.LS 0x34FCCE0
	0x034FCAEC LDRB W8, [X0 + 0x21]
	0x034FCAF0 CMP W8, 0x6
	0x034FCAF4 B.EQ 0x34FCB08
	0x034FCAF8 CMP W8, 0x8
	0x034FCAFC B.NE 0x34FCD60
	0x034FCB00 MOVZ W1, 0x12
	0x034FCB04 B 0x34FCB0C
	0x034FCB08 MOVZ W1, 0x10
	0x034FCB0C ADRP X21, 0xC37000
	0x034FCB10 LDR X21, [X21 + 0xA98]
	0x034FCB14 MOV X0, X20
	0x034FCB18 MOV X2, X31
	0x034FCB1C BL 0x351EFE8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xEE4000
	005 Move W8, [X20+2654]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xC38000
	012 Move X0, [X0+3136]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2654], W8
	016 Move X0, [X19+16]
	017 Compare X0, 0
	018 JumpIfEqual {27}
	019 Move X8, 0xC38000
	020 Move X8, [X8+3136]
	021 Move X20, [X31+16]
	022 Move X19, [X31+24]
	023 Move X1, [X8]
	024 Move X30, [X31+32]
	025 Call 0x2426460, X0
	026 Return X0
	027 Call 0x1C17F20

Method: System.Void Clear()

Disassembly:
	0x034FCB20 LDR X0, [X21]
	0x034FCB24 LDR W8, [X0 + 0xE0]
	0x034FCB28 CBNZ W8, 0x34FCB34
	0x034FCB2C BL 0x1C16DFC
	0x034FCB30 LDR X0, [X21]
	0x034FCB34 LDR X8, [X0 + 0xB8]
	0x034FCB38 MOVZ W3, 0x4
	0x034FCB3C MOV X0, X20
	0x034FCB40 MOV W2, W31
	0x034FCB44 LDR X1, [X8]
	0x034FCB48 MOV X4, X31
	0x034FCB4C BL 0x3517F60
	0x034FCB50 LDR X8, [X19 + 0x10]
	0x034FCB54 CBZ X8, 0x34FCCDC
	0x034FCB58 LDRB W1, [X8 + 0x25]
	0x034FCB5C MOV X0, X20
	0x034FCB60 MOV X2, X31
	0x034FCB64 BL 0x351EFE8
	0x034FCB68 MOV X0, X20
	0x034FCB6C MOV W1, W31
	0x034FCB70 MOV X2, X31
	0x034FCB74 BL 0x351EFE8
	0x034FCB78 LDR X0, [X19 + 0xB0]
	0x034FCB7C MOV X1, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xEE4000
	005 Move W8, [X20+2655]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xC38000
	012 Move X0, [X0+3144]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2655], W8
	016 Move X0, [X19+24]
	017 Compare X0, 0
	018 JumpIfEqual {32}
	019 Move X1, X31
	020 Call StructWrapperPools.Clear, X0
	021 Move X0, [X19+16]
	022 Compare X0, 0
	023 JumpIfEqual {32}
	024 Move X8, 0xC38000
	025 Move X8, [X8+3144]
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X1, [X8]
	029 Move X30, [X31+32]
	030 Call 0x242725C, X0
	031 Return 
	032 Call 0x1C17F20

Method: System.Void Add(System.Byte code, System.String value)

Disassembly:
	0x034FCB80 BL 0x32277A8
	0x034FCB84 TBZ X0, 0x0, 0x34FCB98
	0x034FCB88 ADRP X8, 0xC37000
	0x034FCB8C LDR X8, [X8 + 0xC70]
	0x034FCB90 LDR X8, [X8]
	0x034FCB94 STR X8, [X19 + 0xB0]
	0x034FCB98 MOV X0, X31
	0x034FCB9C BL 0x3241948
	0x034FCBA0 CBZ X0, 0x34FCCDC
	0x034FCBA4 LDR X8, [X0]
	0x034FCBA8 LDR X1, [X19 + 0xB0]
	0x034FCBAC LDR X9, [X8 + 0x268]
	0x034FCBB0 LDR X2, [X8 + 0x270]
	0x034FCBB4 BLR X9
	0x034FCBB8 CBZ X0, 0x34FCCDC
	0x034FCBBC LDR X1, [X0 + 0x18]
	0x034FCBC0 MOV X21, X0
	0x034FCBC4 CMP W1, 0x100
	0x034FCBC8 B.GE 0x34FCCE4
	0x034FCBCC ADRP X22, 0xBF7000
	0x034FCBD0 ADRP X25, 0xC00000
	0x034FCBD4 ADRP X24, 0xC00000
	0x034FCBD8 LDR X22, [X22 + 0x618]
	0x034FCBDC LDR X25, [X25 + 0x2B8]
	0x034FCBE0 LDR X24, [X24 + 0x540]
	0x034FCBE4 MOV X0, X20
	0x034FCBE8 MOV X2, X31
	0x034FCBEC BL 0x351EFE8
	0x034FCBF0 LDR W3, [X21 + 0x18]
	0x034FCBF4 MOV X0, X20
	0x034FCBF8 MOV X1, X21
	0x034FCBFC MOV W2, W31
	0x034FCC00 MOV X4, X31
	0x034FCC04 BL 0x3517F60
	0x034FCC08 LDR X0, [X19 + 0xA0]
	0x034FCC0C LDR X1, [X22]
	0x034FCC10 BL 0x1C16E00
	0x034FCC14 CBZ X0, 0x34FCC50
	0x034FCC18 LDR X22, [X0 + 0x18]
	0x034FCC1C MOV X21, X0
	0x034FCC20 MOV X0, X20
	0x034FCC24 MOV X3, X31
	0x034FCC28 UBFM X1, X22, 0x8, 0x3F
	0x034FCC2C MOV W2, W22
	0x034FCC30 BL 0x351F050
	0x034FCC34 MOV X0, X20
	0x034FCC38 MOV X1, X21
	0x034FCC3C MOV W2, W31
	0x034FCC40 MOV W3, W22
	0x034FCC44 MOV X4, X31
	0x034FCC48 BL 0x3517F60
	0x034FCC4C B 0x34FCC64
	0x034FCC50 MOV X0, X20
	0x034FCC54 MOV W1, W31
	0x034FCC58 MOV W2, W31
	0x034FCC5C MOV X3, X31
	0x034FCC60 BL 0x351F050
	0x034FCC64 LDR X0, [X25]
	0x034FCC68 BL 0x1C16F10
	0x034FCC6C LDR X1, [X24]
	0x034FCC70 MOV X21, X0
	0x034FCC74 BL 0x29D2C7C
	0x034FCC78 LDR X2, [X19 + 0xA8]
	0x034FCC7C CBZ X2, 0x34FCC9C

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xEE4000
	007 Move W8, [X22+2656]
	008 Move X19, X2
	009 Move W21, W1
	010 Move X20, X0
	011 Move [X31+12], W1
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {30}
	016 Move X0, 0xBF8000
	017 Move X0, [X0+2600]
	018 Call 0x1C17CF4
	019 Move X0, 0xC38000
	020 Move X0, [X0+3152]
	021 Call 0x1C17CF4
	022 Move X0, 0xC38000
	023 Move X0, [X0+3128]
	024 Call 0x1C17CF4
	025 Move X0, 0xC38000
	026 Move X0, [X0+3160]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X22+2656], W8
	030 Move X0, [X20+16]
	031 Compare X0, 0
	032 JumpIfEqual {77}
	033 Move X8, 0xC38000
	034 Move X8, [X8+3152]
	035 Move W1, W21
	036 Move X2, [X8]
	037 Call 0x242659C, X0, X1
	038 Move TEMP, X0
	039 And TEMP, TEMP, 1
	040 Compare TEMP, 1
	041 JumpIfNotEqual {62}
	042 Add X0, X31, 12
	043 Move X1, X31
	044 Call Byte.ToString, X0
	045 Move X8, 0xC38000
	046 Move X8, [X8+3160]
	047 Move X2, X31
	048 Move X1, [X8]
	049 Call String.Concat, X0, X1
	050 Move X8, 0xBF8000
	051 Move X8, [X8+2600]
	052 Move X21, X0
	053 Move X8, [X8]
	054 Move W9, [X8+224]
	055 Compare W9, 0
	056 JumpIfNotEqual {59}
	057 Move X0, X8
	058 Call 0x1C17DFC
	059 Move X0, X21
	060 Move X1, X31
	061 Call Debug.LogWarning, X0
	062 Move X0, [X20+16]
	063 Compare X0, 0
	064 JumpIfEqual {77}
	065 Move X8, 0xC38000
	066 Move X8, [X8+3128]
	067 Move W1, [X31+12]
	068 Move X2, X19
	069 Move X3, [X8]
	070 Call 0x2426794, X0, X1, X2
	071 Move X20, [X31+32]
	072 Move X19, [X31+40]
	073 Move X22, [X31+16]
	074 Move X21, [X31+24]
	075 Move X30, [X31+48]
	076 Return 
	077 Call 0x1C17F20

Method: System.Void Add(System.Byte code, ExitGames.Client.Photon.Hashtable value)

Disassembly:
	0x034FCC80 CBZ X21, 0x34FCCDC
	0x034FCC84 ADRP X8, 0xC00000
	0x034FCC88 LDR X8, [X8 + 0x538]
	0x034FCC8C MOV X0, X21
	0x034FCC90 MOV W1, W31
	0x034FCC94 LDR X3, [X8]
	0x034FCC98 BL 0x29D3534
	0x034FCC9C CBNZ X23, 0x34FCD18
	0x034FCCA0 LDR X0, [X19 + 0x18]
	0x034FCCA4 CBZ X0, 0x34FCCDC
	0x034FCCA8 LDR X8, [X0]
	0x034FCCAC MOVZ W3, 0x1
	0x034FCCB0 MOV X1, X20
	0x034FCCB4 MOV X2, X21
	0x034FCCB8 LDP X9, X4, [X8 + 0x198]
	0x034FCCBC BLR X9
	0x034FCCC0 MOV X0, X20
	0x034FCCC4 LDP X20, X19, [X31 + 0x30]
	0x034FCCC8 LDP X22, X21, [X31 + 0x20]
	0x034FCCCC LDP X24, X23, [X31 + 0x10]
	0x034FCCD0 MOV X1, X31
	0x034FCCD4 LDP X30, X25, [X31], #0x40
	0x034FCCD8 B 0x3517FF8
	0x034FCCDC BL 0x1C16F20
	0x034FCCE0 BL 0x1C16F28
	0x034FCCE4 ADRP X0, 0xBF7000
	0x034FCCE8 LDR X0, [X0 + 0x7D0]
	0x034FCCEC BL 0x1C16D08
	0x034FCCF0 BL 0x1C16F10
	0x034FCCF4 MOV X19, X0
	0x034FCCF8 ADRP X0, 0xC37000
	0x034FCCFC LDR X0, [X0 + 0xC78]
	0x034FCD00 BL 0x1C16D08
	0x034FCD04 MOV X1, X0
	0x034FCD08 MOV X0, X19
	0x034FCD0C MOV X2, X31
	0x034FCD10 BL 0x33B2C70
	0x034FCD14 B 0x34FCD48
	0x034FCD18 ADRP X0, 0xC00000
	0x034FCD1C LDR X0, [X0 + 0x758]
	0x034FCD20 BL 0x1C16D08
	0x034FCD24 BL 0x1C16F10
	0x034FCD28 MOV X19, X0
	0x034FCD2C ADRP X0, 0xC37000
	0x034FCD30 LDR X0, [X0 + 0xC80]
	0x034FCD34 BL 0x1C16D08
	0x034FCD38 MOV X1, X0
	0x034FCD3C MOV X0, X19
	0x034FCD40 MOV X2, X31
	0x034FCD44 BL 0x33802E4
	0x034FCD48 ADRP X0, 0xC37000
	0x034FCD4C LDR X0, [X0 + 0xC88]
	0x034FCD50 BL 0x1C16D08
	0x034FCD54 MOV X1, X0
	0x034FCD58 MOV X0, X19
	0x034FCD5C BL 0x1C16DEC
	0x034FCD60 LDR X19, [X19 + 0x18]
	0x034FCD64 MOV X0, X19
	0x034FCD68 BL 0x19903C0
	0x034FCD6C LDR X8, [X19]
	0x034FCD70 MOV X0, X19
	0x034FCD74 LDP X9, X1, [X8 + 0x188]
	0x034FCD78 BLR X9
	0x034FCD7C MOV X19, X0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xEE4000
	007 Move W8, [X22+2657]
	008 Move X19, X2
	009 Move W21, W1
	010 Move X20, X0
	011 Move [X31+12], W1
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {30}
	016 Move X0, 0xBF8000
	017 Move X0, [X0+2600]
	018 Call 0x1C17CF4
	019 Move X0, 0xC38000
	020 Move X0, [X0+3152]
	021 Call 0x1C17CF4
	022 Move X0, 0xC38000
	023 Move X0, [X0+3128]
	024 Call 0x1C17CF4
	025 Move X0, 0xC38000
	026 Move X0, [X0+3160]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X22+2657], W8
	030 Move X0, [X20+16]
	031 Compare X0, 0
	032 JumpIfEqual {77}
	033 Move X8, 0xC38000
	034 Move X8, [X8+3152]
	035 Move W1, W21
	036 Move X2, [X8]
	037 Call 0x242659C, X0, X1
	038 Move TEMP, X0
	039 And TEMP, TEMP, 1
	040 Compare TEMP, 1
	041 JumpIfNotEqual {62}
	042 Add X0, X31, 12
	043 Move X1, X31
	044 Call Byte.ToString, X0
	045 Move X8, 0xC38000
	046 Move X8, [X8+3160]
	047 Move X2, X31
	048 Move X1, [X8]
	049 Call String.Concat, X0, X1
	050 Move X8, 0xBF8000
	051 Move X8, [X8+2600]
	052 Move X21, X0
	053 Move X8, [X8]
	054 Move W9, [X8+224]
	055 Compare W9, 0
	056 JumpIfNotEqual {59}
	057 Move X0, X8
	058 Call 0x1C17DFC
	059 Move X0, X21
	060 Move X1, X31
	061 Call Debug.LogWarning, X0
	062 Move X0, [X20+16]
	063 Compare X0, 0
	064 JumpIfEqual {77}
	065 Move X8, 0xC38000
	066 Move X8, [X8+3128]
	067 Move W1, [X31+12]
	068 Move X2, X19
	069 Move X3, [X8]
	070 Call 0x2426794, X0, X1, X2
	071 Move X20, [X31+32]
	072 Move X19, [X31+40]
	073 Move X22, [X31+16]
	074 Move X21, [X31+24]
	075 Move X30, [X31+48]
	076 Return 
	077 Call 0x1C17F20

Method: System.Void Add(System.Byte code, System.Byte value)

Disassembly:
	0x034FCD80 BL 0x19903C0
	0x034FCD84 MOVZ W1, 0x1
	0x034FCD88 MOV X0, X19
	0x034FCD8C BL 0x1BBF188
	0x034FCD90 MOV X1, X31
	0x034FCD94 BL 0x3319BB4
	0x034FCD98 MOV X19, X0
	0x034FCD9C ADRP X0, 0xC37000
	0x034FCDA0 LDR X0, [X0 + 0xC90]
	0x034FCDA4 BL 0x1C16D08
	0x034FCDA8 MOV X1, X19
	0x034FCDAC MOV X2, X31
	0x034FCDB0 BL 0x321B938
	0x034FCDB4 MOV X19, X0
	0x034FCDB8 ADRP X0, 0xBF7000
	0x034FCDBC LDR X0, [X0 + 0x7D0]
	0x034FCDC0 BL 0x1C16D08
	0x034FCDC4 BL 0x1C16F10
	0x034FCDC8 MOV X1, X19
	0x034FCDCC MOV X2, X31
	0x034FCDD0 MOV X20, X0
	0x034FCDD4 BL 0x33B2C70
	0x034FCDD8 ADRP X0, 0xC37000
	0x034FCDDC LDR X0, [X0 + 0xC88]
	0x034FCDE0 BL 0x1C16D08
	0x034FCDE4 MOV X1, X0
	0x034FCDE8 MOV X0, X20
	0x034FCDEC BL 0x1C16DEC
	0x034FCDF0 SUB X31, X31, 0x50
	0x034FCDF4 STP X30, X25, [X31 + 0x10]
	0x034FCDF8 STP X24, X23, [X31 + 0x20]
	0x034FCDFC STP X22, X21, [X31 + 0x30]
	0x034FCE00 STP X20, X19, [X31 + 0x40]
	0x034FCE04 ADRP X22, 0xEE3000
	0x034FCE08 ADRP X24, 0xBF7000
	0x034FCE0C LDRB W8, [X22 + 0xA75]
	0x034FCE10 LDR X24, [X24 + 0x8F0]
	0x034FCE14 MOV X19, X3
	0x034FCE18 MOV X21, X2
	0x034FCE1C MOV X23, X1
	0x034FCE20 MOV X20, X0
	0x034FCE24 TBNZ X8, 0x0, 0x34FCE78
	0x034FCE28 ADRP X0, 0xBF8000
	0x034FCE2C LDR X0, [X0 + 0x9D8]
	0x034FCE30 BL 0x1C16CF4
	0x034FCE34 ADRP X0, 0xBF7000
	0x034FCE38 LDR X0, [X0 + 0x8F0]
	0x034FCE3C BL 0x1C16CF4
	0x034FCE40 ADRP X0, 0xC37000
	0x034FCE44 LDR X0, [X0 + 0xC98]
	0x034FCE48 BL 0x1C16CF4
	0x034FCE4C ADRP X0, 0xC37000
	0x034FCE50 LDR X0, [X0 + 0xAB0]
	0x034FCE54 BL 0x1C16CF4
	0x034FCE58 ADRP X0, 0xC37000
	0x034FCE5C LDR X0, [X0 + 0xCA0]
	0x034FCE60 BL 0x1C16CF4
	0x034FCE64 ADRP X0, 0xC37000
	0x034FCE68 LDR X0, [X0 + 0xCA8]
	0x034FCE6C BL 0x1C16CF4
	0x034FCE70 MOVZ W8, 0x1
	0x034FCE74 STRB W8, [X22 + 0xA75]
	0x034FCE78 LDR X0, [X24]
	0x034FCE7C BL 0x1C16F10
	0x034FCE80 MOVZ W1, 0x400
	0x034FCE84 MOV X2, X31
	0x034FCE88 MOV X22, X0
	0x034FCE8C BL 0x3231B28
	0x034FCE90 CBZ X22, 0x34FCFA0
	0x034FCE94 MOV X0, X22
	0x034FCE98 MOV X1, X23
	0x034FCE9C MOV X2, X31
	0x034FCEA0 BL 0x32333E0
	0x034FCEA4 LDR X0, [X20 + 0x10]
	0x034FCEA8 CBZ X0, 0x34FCFA0
	0x034FCEAC MOV X1, X31
	0x034FCEB0 BL 0x35011BC
	0x034FCEB4 LDR X8, [X20 + 0x10]
	0x034FCEB8 CBZ X8, 0x34FCFA0
	0x034FCEBC ADRP X24, 0xBF8000
	0x034FCEC0 ADRP X25, 0xC37000
	0x034FCEC4 LDR X24, [X24 + 0x9D8]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xEE4000
	007 Move W8, [X22+2658]
	008 Move W19, W2
	009 Move W21, W1
	010 Move X20, X0
	011 Move [X31+12], W1
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {33}
	016 Move X0, 0xBF8000
	017 Move X0, [X0+2600]
	018 Call 0x1C17CF4
	019 Move X0, 0xC38000
	020 Move X0, [X0+3152]
	021 Call 0x1C17CF4
	022 Move X0, 0xC38000
	023 Move X0, [X0+3128]
	024 Call 0x1C17CF4
	025 Move X0, 0xC38000
	026 Move X0, [X0+3088]
	027 Call 0x1C17CF4
	028 Move X0, 0xC38000
	029 Move X0, [X0+3160]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X22+2658], W8
	033 Move X0, [X20+16]
	034 Compare X0, 0
	035 JumpIfEqual {95}
	036 Move X8, 0xC38000
	037 Move X8, [X8+3152]
	038 Move X22, 0xC38000
	039 Move W1, W21
	040 Move X2, [X8]
	041 Move X22, [X22+3088]
	042 Call 0x242659C, X0, X1
	043 Move TEMP, X0
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfNotEqual {67}
	047 Add X0, X31, 12
	048 Move X1, X31
	049 Call Byte.ToString, X0
	050 Move X8, 0xC38000
	051 Move X8, [X8+3160]
	052 Move X2, X31
	053 Move X1, [X8]
	054 Call String.Concat, X0, X1
	055 Move X8, 0xBF8000
	056 Move X8, [X8+2600]
	057 Move X21, X0
	058 Move X8, [X8]
	059 Move W9, [X8+224]
	060 Compare W9, 0
	061 JumpIfNotEqual {64}
	062 Move X0, X8
	063 Call 0x1C17DFC
	064 Move X0, X21
	065 Move X1, X31
	066 Call Debug.LogError, X0
	067 Move X0, [X22]
	068 Move W8, [X0+224]
	069 Compare W8, 0
	070 JumpIfNotEqual {73}
	071 Call 0x1C17DFC
	072 Move X0, [X22]
	073 Move X8, [X0+184]
	074 Move X8, [X8]
	075 Compare X8, 0
	076 JumpIfEqual {95}
	077 Move W9, [X8+24]
	078 NotImplemented "Instruction CMP not yet implemented."
	079 Move X0, [X20+16]
	080 Compare X0, 0
	081 JumpIfEqual {95}
	082 Move X9, 0xC38000
	083 Move X9, [X9+3128]
	084 Add X8, X8, W19
	085 Move X2, [X8+32]
	086 Move W1, [X31+12]
	087 Move X3, [X9]
	088 Call 0x2426794, X0, X1, X2
	089 Move X20, [X31+32]
	090 Move X19, [X31+40]
	091 Move X22, [X31+16]
	092 Move X21, [X31+24]
	093 Move X30, [X31+48]
	094 Return 
	095 Call 0x1C17F20
	096 Call 0x1C17F28

Method: System.Void Add(System.Byte code, System.Boolean value)

Disassembly:
	0x034FCEC8 LDR X25, [X25 + 0xCA0]
	0x034FCECC MOV X23, X0
	0x034FCED0 MOV X0, X8
	0x034FCED4 MOV X1, X31
	0x034FCED8 BL 0x35011B0
	0x034FCEDC LDR X8, [X24]
	0x034FCEE0 STRB W0, [X31 + 0xC]
	0x034FCEE4 ADD X1, X31, 0xC
	0x034FCEE8 MOV X0, X8
	0x034FCEEC BL 0x1C16E04
	0x034FCEF0 LDR X1, [X25]
	0x034FCEF4 MOV X3, X0
	0x034FCEF8 MOV X0, X22
	0x034FCEFC MOV X2, X23
	0x034FCF00 MOV X4, X31
	0x034FCF04 BL 0x3234D98
	0x034FCF08 LDR X8, [X20 + 0x10]
	0x034FCF0C CBZ X8, 0x34FCFA0
	0x034FCF10 LDRB W8, [X8 + 0x24]
	0x034FCF14 CBNZ W8, 0x34FCF34
	0x034FCF18 ADRP X8, 0xC37000
	0x034FCF1C LDR X8, [X8 + 0xC98]
	0x034FCF20 MOV X0, X22
	0x034FCF24 MOV X2, X21
	0x034FCF28 MOV X3, X31
	0x034FCF2C LDR X1, [X8]
	0x034FCF30 BL 0x3234224
	0x034FCF34 LDR X8, [X20 + 0x28]
	0x034FCF38 CBZ X8, 0x34FCF5C
	0x034FCF3C LDRB W8, [X8 + 0x44]
	0x034FCF40 CBZ W8, 0x34FCF5C
	0x034FCF44 ADRP X8, 0xC37000
	0x034FCF48 LDR X8, [X8 + 0xAB0]
	0x034FCF4C MOV X0, X22
	0x034FCF50 MOV X2, X31
	0x034FCF54 LDR X1, [X8]
	0x034FCF58 BL 0x32333E0
	0x034FCF5C CBZ X19, 0x34FCF78
	0x034FCF60 ADRP X8, 0xC37000
	0x034FCF64 LDR X8, [X8 + 0xCA8]
	0x034FCF68 MOV X0, X22
	0x034FCF6C MOV X2, X31
	0x034FCF70 LDR X1, [X8]
	0x034FCF74 BL 0x32333E0
	0x034FCF78 LDR X8, [X22]
	0x034FCF7C MOV X0, X22
	0x034FCF80 LDP X9, X1, [X8 + 0x168]
	0x034FCF84 BLR X9
	0x034FCF88 LDP X20, X19, [X31 + 0x40]
	0x034FCF8C LDP X22, X21, [X31 + 0x30]
	0x034FCF90 LDP X24, X23, [X31 + 0x20]
	0x034FCF94 LDP X30, X25, [X31 + 0x10]
	0x034FCF98 ADD X31, X31, 0x50
	0x034FCF9C RET
	0x034FCFA0 BL 0x1C16F20
	0x034FCFA4 STR X30, [X31 - 0x20]!
	0x034FCFA8 STP X20, X19, [X31 + 0x10]
	0x034FCFAC ADRP X20, 0xEE3000
	0x034FCFB0 LDRB W8, [X20 + 0xA76]
	0x034FCFB4 MOV X19, X0
	0x034FCFB8 TBNZ X8, 0x0, 0x34FCFD0
	0x034FCFBC ADRP X0, 0xBFF000
	0x034FCFC0 LDR X0, [X0 + 0xBC8]
	0x034FCFC4 BL 0x1C16CF4
	0x034FCFC8 MOVZ W8, 0x1
	0x034FCFCC STRB W8, [X20 + 0xA76]
	0x034FCFD0 LDRB W8, [X19 + 0x40]
	0x034FCFD4 CMP W8, 0x1
	0x034FCFD8 B.NE 0x34FCFE4
	0x034FCFDC MOVZ W8, 0x3
	0x034FCFE0 STRB W8, [X19 + 0x40]
	0x034FCFE4 LDR X8, [X19]
	0x034FCFE8 MOVZ W9, 0x1
	0x034FCFEC STRB W9, [X19 + 0xDC]
	0x034FCFF0 MOV X0, X19
	0x034FCFF4 LDR X9, [X8 + 0x208]
	0x034FCFF8 LDR X1, [X8 + 0x210]
	0x034FCFFC BLR X9
	0x034FD000 LDR X8, [X19 + 0x10]
	0x034FD004 CBZ X8, 0x34FD080
	0x034FD008 LDR X19, [X8 + 0x48]
	0x034FD00C CBZ X19, 0x34FD080
	0x034FD010 ADRP X10, 0xBFE000
	0x034FD014 LDR X8, [X19]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xEE4000
	007 Move W8, [X22+2659]
	008 Move W19, W2
	009 Move W21, W1
	010 Move X20, X0
	011 Move [X31+12], W1
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {33}
	016 Move X0, 0xBF8000
	017 Move X0, [X0+2600]
	018 Call 0x1C17CF4
	019 Move X0, 0xC38000
	020 Move X0, [X0+3152]
	021 Call 0x1C17CF4
	022 Move X0, 0xC38000
	023 Move X0, [X0+3128]
	024 Call 0x1C17CF4
	025 Move X0, 0xC38000
	026 Move X0, [X0+3088]
	027 Call 0x1C17CF4
	028 Move X0, 0xC38000
	029 Move X0, [X0+3160]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X22+2659], W8
	033 Move X0, [X20+16]
	034 Compare X0, 0
	035 JumpIfEqual {97}
	036 Move X8, 0xC38000
	037 Move X8, [X8+3152]
	038 Move X22, 0xC38000
	039 Move W1, W21
	040 Move X2, [X8]
	041 Move X22, [X22+3088]
	042 Call 0x242659C, X0, X1
	043 Move TEMP, X0
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfNotEqual {67}
	047 Add X0, X31, 12
	048 Move X1, X31
	049 Call Byte.ToString, X0
	050 Move X8, 0xC38000
	051 Move X8, [X8+3160]
	052 Move X2, X31
	053 Move X1, [X8]
	054 Call String.Concat, X0, X1
	055 Move X8, 0xBF8000
	056 Move X8, [X8+2600]
	057 Move X21, X0
	058 Move X8, [X8]
	059 Move W9, [X8+224]
	060 Compare W9, 0
	061 JumpIfNotEqual {64}
	062 Move X0, X8
	063 Call 0x1C17DFC
	064 Move X0, X21
	065 Move X1, X31
	066 Call Debug.LogError, X0
	067 Move X0, [X22]
	068 Move W8, [X0+224]
	069 Compare W8, 0
	070 JumpIfNotEqual {73}
	071 Call 0x1C17DFC
	072 Move X0, [X22]
	073 Move X8, [X0+184]
	074 Move X8, [X8+8]
	075 Compare X8, 0
	076 JumpIfEqual {97}
	077 Move W9, [X8+24]
	078 And W10, W19, 1
	079 NotImplemented "Instruction CMP not yet implemented."
	080 Move X0, [X20+16]
	081 Compare X0, 0
	082 JumpIfEqual {97}
	083 Move X9, 0xC38000
	084 Move X9, [X9+3128]
	085 And X10, X19, 1
	086 Add X8, X8, X10
	087 Move X2, [X8+32]
	088 Move X3, [X9]
	089 Move W1, [X31+12]
	090 Call 0x2426794, X0, X1, X2
	091 Move X20, [X31+32]
	092 Move X19, [X31+40]
	093 Move X22, [X31+16]
	094 Move X21, [X31+24]
	095 Move X30, [X31+48]
	096 Return 
	097 Call 0x1C17F20
	098 Call 0x1C17F28

Method: System.Void Add(System.Byte code, System.Int16 value)

Disassembly:
	0x034FD018 LDR X10, [X10 + 0xBC8]
	0x034FD01C LDRH W9, [X8 + 0x12E]
	0x034FD020 LDR X1, [X10]
	0x034FD024 CBZ X9, 0x34FD048
	0x034FD028 LDR X10, [X8 + 0xB0]
	0x034FD02C ADD X10, X10, 0x8
	0x034FD030 LDUR X11, [X10 - 0x8]
	0x034FD034 CMP X11, X1
	0x034FD038 B.EQ 0x34FD058
	0x034FD03C SUBS X9, X9, 0x1
	0x034FD040 ADD X10, X10, 0x10
	0x034FD044 B.NE 0x34FD030
	0x034FD048 MOVZ W2, 0x2
	0x034FD04C MOV X0, X19
	0x034FD050 BL 0x1C5C788
	0x034FD054 B 0x34FD068
	0x034FD058 LDR W9, [X10]
	0x034FD05C ADD W9, W9, 0x2
	0x034FD060 ADD X8, X8, W9, 0x4, SXTW
	0x034FD064 ADD X0, X8, 0x138
	0x034FD068 LDP X3, X2, [X0]
	0x034FD06C MOV X0, X19
	0x034FD070 LDP X20, X19, [X31 + 0x10]
	0x034FD074 MOVZ W1, 0x400
	0x034FD078 LDR X30, [X31], #0x20
	0x034FD07C BR X3
	0x034FD080 BL 0x1C16F20
	0x034FD084 STR X30, [X31 - 0x50]!
	0x034FD088 STP X26, X25, [X31 + 0x10]
	0x034FD08C STP X24, X23, [X31 + 0x20]
	0x034FD090 STP X22, X21, [X31 + 0x30]
	0x034FD094 STP X20, X19, [X31 + 0x40]
	0x034FD098 ADRP X22, 0xEE2000
	0x034FD09C LDRB W8, [X22 + 0xA77]
	0x034FD0A0 MOV W20, W4
	0x034FD0A4 MOV W21, W3
	0x034FD0A8 MOV X23, X2
	0x034FD0AC MOV W24, W1
	0x034FD0B0 MOV X19, X0
	0x034FD0B4 TBNZ X8, 0x0, 0x34FD0D8
	0x034FD0B8 ADRP X0, 0xC36000
	0x034FD0BC LDR X0, [X0 + 0xCB0]
	0x034FD0C0 BL 0x1C16CF4
	0x034FD0C4 ADRP X0, 0xC36000
	0x034FD0C8 LDR X0, [X0 + 0x778]
	0x034FD0CC BL 0x1C16CF4
	0x034FD0D0 MOVZ W8, 0x1
	0x034FD0D4 STRB W8, [X22 + 0xA77]
	0x034FD0D8 ADRP X22, 0xC36000
	0x034FD0DC LDR X22, [X22 + 0x778]
	0x034FD0E0 TBZ X20, 0x0, 0x34FD104
	0x034FD0E4 LDR X8, [X19]
	0x034FD0E8 MOV X0, X19
	0x034FD0EC LDR X9, [X8 + 0x218]
	0x034FD0F0 LDR X1, [X8 + 0x220]
	0x034FD0F4 BLR X9
	0x034FD0F8 ORN W8, W31, W0, 0x0
	0x034FD0FC AND W26, W8, 0x1
	0x034FD100 B 0x34FD108
	0x034FD104 MOV W26, W31
	0x034FD108 LDR X0, [X22]
	0x034FD10C LDR W8, [X0 + 0xE0]
	0x034FD110 CBNZ W8, 0x34FD118
	0x034FD114 BL 0x1C16DFC
	0x034FD118 BL 0x34F5754
	0x034FD11C CBZ X0, 0x34FD308
	0x034FD120 MOV X1, X31
	0x034FD124 MOV X2, X31
	0x034FD128 MOV X22, X0
	0x034FD12C BL 0x3517EFC
	0x034FD130 CBNZ W26, 0x34FD150
	0x034FD134 LDR X1, [X19 + 0xE8]
	0x034FD138 CBZ X1, 0x34FD308
	0x034FD13C LDR W3, [X1 + 0x18]
	0x034FD140 MOV X0, X22

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xEE3000
	007 Move W8, [X22+2660]
	008 Move W19, W2
	009 Move W21, W1
	010 Move X20, X0
	011 Move [X31+12], W1
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {33}
	016 Move X0, 0xBF7000
	017 Move X0, [X0+2600]
	018 Call 0x1C17CF4
	019 Move X0, 0xBFB000
	020 Move X0, [X0+1576]
	021 Call 0x1C17CF4
	022 Move X0, 0xC37000
	023 Move X0, [X0+3152]
	024 Call 0x1C17CF4
	025 Move X0, 0xC37000
	026 Move X0, [X0+3128]
	027 Call 0x1C17CF4
	028 Move X0, 0xC37000
	029 Move X0, [X0+3160]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X22+2660], W8
	033 Move X0, [X20+16]
	034 Compare X0, 0
	035 JumpIfEqual {88}
	036 Move X8, 0xC37000
	037 Move X8, [X8+3152]
	038 Move X22, 0xBFB000
	039 Move W1, W21
	040 Move X2, [X8]
	041 Move X22, [X22+1576]
	042 Call 0x242659C, X0, X1
	043 Move TEMP, X0
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfNotEqual {68}
	047 Add X0, X31, 12
	048 Move X1, X31
	049 Call Byte.ToString, X0
	050 Move X8, 0xC37000
	051 Move X8, [X8+3160]
	052 Move X2, X31
	053 Move X1, [X8]
	054 Call String.Concat, X0, X1
	055 Move X8, 0xBF7000
	056 Move X8, [X8+2600]
	057 Move X21, X0
	058 Move X8, [X8]
	059 Move W9, [X8+224]
	060 Compare W9, 0
	061 JumpIfNotEqual {64}
	062 Move X0, X8
	063 Call 0x1C17DFC
	064 Move X0, X21
	065 Move X1, X31
	066 Call Debug.LogWarning, X0
	067 Move W21, [X31+12]
	068 Move X0, [X22]
	069 Move X20, [X20+16]
	070 Add X1, X31, 8
	071 NotImplemented "Instruction STRH not yet implemented."
	072 Call 0x1C17E04
	073 Compare X20, 0
	074 JumpIfEqual {88}
	075 Move X8, 0xC37000
	076 Move X8, [X8+3128]
	077 Move X2, X0
	078 Move X0, X20
	079 Move W1, W21
	080 Move X3, [X8]
	081 Call 0x2426794, X0, X1, X2
	082 Move X20, [X31+32]
	083 Move X19, [X31+40]
	084 Move X22, [X31+16]
	085 Move X21, [X31+24]
	086 Move X30, [X31+48]
	087 Return 
	088 Call 0x1C17F20

Method: System.Void Add(System.Byte code, System.Int32 value)

Disassembly:
	0x034FD144 MOV W2, W31
	0x034FD148 MOV X4, X31
	0x034FD14C BL 0x3517F60
	0x034FD150 LDR X0, [X19 + 0x18]
	0x034FD154 CBZ X0, 0x34FD308
	0x034FD158 LDR X8, [X0]
	0x034FD15C MOV X1, X22
	0x034FD160 MOV W2, W24
	0x034FD164 MOV X3, X23
	0x034FD168 LDP X9, X5, [X8 + 0x1D8]
	0x034FD16C MOV W4, W31
	0x034FD170 BLR X9
	0x034FD174 CBZ W26, 0x34FD25C
	0x034FD178 LDR X23, [X19 + 0xF0]
	0x034FD17C MOV X0, X22
	0x034FD180 MOV X1, X31
	0x034FD184 BL 0x3517FCC
	0x034FD188 MOV X24, X0
	0x034FD18C MOV X0, X22
	0x034FD190 MOV X1, X31
	0x034FD194 BL 0x351806C
	0x034FD198 CBZ X23, 0x34FD308
	0x034FD19C ADRP X10, 0xC36000
	0x034FD1A0 LDR X8, [X23]
	0x034FD1A4 LDR X10, [X10 + 0xCB0]
	0x034FD1A8 MOV W25, W0
	0x034FD1AC LDRH W9, [X8 + 0x12E]
	0x034FD1B0 LDR X1, [X10]
	0x034FD1B4 CBZ X9, 0x34FD1D8
	0x034FD1B8 LDR X10, [X8 + 0xB0]
	0x034FD1BC ADD X10, X10, 0x8
	0x034FD1C0 LDUR X11, [X10 - 0x8]
	0x034FD1C4 CMP X11, X1
	0x034FD1C8 B.EQ 0x34FD1E8
	0x034FD1CC SUBS X9, X9, 0x1
	0x034FD1D0 ADD X10, X10, 0x10
	0x034FD1D4 B.NE 0x34FD1C0
	0x034FD1D8 MOVZ W2, 0x4
	0x034FD1DC MOV X0, X23
	0x034FD1E0 BL 0x1C5C788
	0x034FD1E4 B 0x34FD1F8
	0x034FD1E8 LDR W9, [X10]
	0x034FD1EC ADD W9, W9, 0x4
	0x034FD1F0 ADD X8, X8, W9, 0x4, SXTW
	0x034FD1F4 ADD X0, X8, 0x138
	0x034FD1F8 LDP X8, X4, [X0]
	0x034FD1FC MOV X0, X23
	0x034FD200 MOV X1, X24
	0x034FD204 MOV W2, W31
	0x034FD208 MOV W3, W25
	0x034FD20C BLR X8
	0x034FD210 MOV X23, X0
	0x034FD214 MOV X0, X22
	0x034FD218 MOV X1, X31
	0x034FD21C MOV X2, X31
	0x034FD220 BL 0x3517EFC
	0x034FD224 LDR X1, [X19 + 0xE8]
	0x034FD228 CBZ X1, 0x34FD308
	0x034FD22C LDR W3, [X1 + 0x18]
	0x034FD230 MOV X0, X22
	0x034FD234 MOV W2, W31
	0x034FD238 MOV X4, X31
	0x034FD23C BL 0x3517F60
	0x034FD240 CBZ X23, 0x34FD308
	0x034FD244 LDR W3, [X23 + 0x18]
	0x034FD248 MOV X0, X22
	0x034FD24C MOV X1, X23
	0x034FD250 MOV W2, W31
	0x034FD254 MOV X4, X31
	0x034FD258 BL 0x3517F60
	0x034FD25C MOV X0, X22
	0x034FD260 MOV X1, X31
	0x034FD264 BL 0x3517FCC
	0x034FD268 AND W8, W21, 0xFF
	0x034FD26C CMP W8, 0x2

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xEE3000
	007 Move W8, [X22+2661]
	008 Move W19, W2
	009 Move W21, W1
	010 Move X20, X0
	011 Move [X31+12], W1
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {33}
	016 Move X0, 0xBF7000
	017 Move X0, [X0+2600]
	018 Call 0x1C17CF4
	019 Move X0, 0xBF7000
	020 Move X0, [X0+1880]
	021 Call 0x1C17CF4
	022 Move X0, 0xC37000
	023 Move X0, [X0+3152]
	024 Call 0x1C17CF4
	025 Move X0, 0xC37000
	026 Move X0, [X0+3128]
	027 Call 0x1C17CF4
	028 Move X0, 0xC37000
	029 Move X0, [X0+3160]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X22+2661], W8
	033 Move X0, [X20+16]
	034 Compare X0, 0
	035 JumpIfEqual {88}
	036 Move X8, 0xC37000
	037 Move X8, [X8+3152]
	038 Move X22, 0xBF7000
	039 Move W1, W21
	040 Move X2, [X8]
	041 Move X22, [X22+1880]
	042 Call 0x242659C, X0, X1
	043 Move TEMP, X0
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfNotEqual {68}
	047 Add X0, X31, 12
	048 Move X1, X31
	049 Call Byte.ToString, X0
	050 Move X8, 0xC37000
	051 Move X8, [X8+3160]
	052 Move X2, X31
	053 Move X1, [X8]
	054 Call String.Concat, X0, X1
	055 Move X8, 0xBF7000
	056 Move X8, [X8+2600]
	057 Move X21, X0
	058 Move X8, [X8]
	059 Move W9, [X8+224]
	060 Compare W9, 0
	061 JumpIfNotEqual {64}
	062 Move X0, X8
	063 Call 0x1C17DFC
	064 Move X0, X21
	065 Move X1, X31
	066 Call Debug.LogWarning, X0
	067 Move W21, [X31+12]
	068 Move X0, [X22]
	069 Move X20, [X20+16]
	070 Add X1, X31, 8
	071 Move [X31+8], W19
	072 Call 0x1C17E04
	073 Compare X20, 0
	074 JumpIfEqual {88}
	075 Move X8, 0xC37000
	076 Move X8, [X8+3128]
	077 Move X2, X0
	078 Move X0, X20
	079 Move W1, W21
	080 Move X3, [X8]
	081 Call 0x2426794, X0, X1, X2
	082 Move X20, [X31+32]
	083 Move X19, [X31+40]
	084 Move X22, [X31+16]
	085 Move X21, [X31+24]
	086 Move X30, [X31+48]
	087 Return 
	088 Call 0x1C17F20

Method: System.Void Add(System.Byte code, System.Int64 value)

Disassembly:
	0x034FD270 B.EQ 0x34FD29C
	0x034FD274 LDR X8, [X19 + 0xE8]
	0x034FD278 CBZ X8, 0x34FD308
	0x034FD27C CBZ X0, 0x34FD308
	0x034FD280 LDR W8, [X8 + 0x18]
	0x034FD284 LDR W9, [X0 + 0x18]
	0x034FD288 SUB W8, W8, 0x1
	0x034FD28C CMP W8, W9
	0x034FD290 B.CS 0x34FD30C
	0x034FD294 ADD X8, X0, W8, SXTW
	0x034FD298 STRB W21, [X8 + 0x20]
	0x034FD29C CMP W26, 0x0
	0x034FD2A0 CSET W8, NE
	0x034FD2A4 TBZ X20, 0x0, 0x34FD2B8
	0x034FD2A8 TBNZ X8, 0x0, 0x34FD2B8
	0x034FD2AC LDR X8, [X19 + 0x10]
	0x034FD2B0 CBZ X8, 0x34FD308
	0x034FD2B4 LDRB W26, [X8 + 0x6B]
	0x034FD2B8 CBZ W26, 0x34FD2EC
	0x034FD2BC LDR X8, [X19 + 0xE8]
	0x034FD2C0 CBZ X8, 0x34FD308
	0x034FD2C4 CBZ X0, 0x34FD308
	0x034FD2C8 LDR W8, [X8 + 0x18]
	0x034FD2CC LDR W9, [X0 + 0x18]
	0x034FD2D0 SUB W8, W8, 0x1
	0x034FD2D4 CMP W8, W9
	0x034FD2D8 B.CS 0x34FD30C
	0x034FD2DC ADD X8, X0, W8, SXTW
	0x034FD2E0 LDRB W9, [X8 + 0x20]
	0x034FD2E4 ORR W9, W9, 0x80
	0x034FD2E8 STRB W9, [X8 + 0x20]
	0x034FD2EC MOV X0, X22
	0x034FD2F0 LDP X20, X19, [X31 + 0x40]
	0x034FD2F4 LDP X22, X21, [X31 + 0x30]
	0x034FD2F8 LDP X24, X23, [X31 + 0x20]
	0x034FD2FC LDP X26, X25, [X31 + 0x10]
	0x034FD300 LDR X30, [X31], #0x50
	0x034FD304 RET
	0x034FD308 BL 0x1C16F20
	0x034FD30C BL 0x1C16F28
	0x034FD310 STR X30, [X31 - 0x50]!
	0x034FD314 STP X26, X25, [X31 + 0x10]
	0x034FD318 STP X24, X23, [X31 + 0x20]
	0x034FD31C STP X22, X21, [X31 + 0x30]
	0x034FD320 STP X20, X19, [X31 + 0x40]
	0x034FD324 ADRP X22, 0xEE2000
	0x034FD328 LDRB W8, [X22 + 0xA78]
	0x034FD32C MOV W20, W4
	0x034FD330 MOV W21, W3
	0x034FD334 MOV X23, X2
	0x034FD338 MOV W24, W1
	0x034FD33C MOV X19, X0
	0x034FD340 TBNZ X8, 0x0, 0x34FD364
	0x034FD344 ADRP X0, 0xC36000
	0x034FD348 LDR X0, [X0 + 0xCB0]
	0x034FD34C BL 0x1C16CF4
	0x034FD350 ADRP X0, 0xC36000
	0x034FD354 LDR X0, [X0 + 0x778]
	0x034FD358 BL 0x1C16CF4
	0x034FD35C MOVZ W8, 0x1
	0x034FD360 STRB W8, [X22 + 0xA78]
	0x034FD364 ADRP X22, 0xC36000
	0x034FD368 LDR X22, [X22 + 0x778]
	0x034FD36C TBZ X20, 0x0, 0x34FD390
	0x034FD370 LDR X8, [X19]
	0x034FD374 MOV X0, X19
	0x034FD378 LDR X9, [X8 + 0x218]
	0x034FD37C LDR X1, [X8 + 0x220]
	0x034FD380 BLR X9
	0x034FD384 ORN W8, W31, W0, 0x0
	0x034FD388 AND W26, W8, 0x1
	0x034FD38C B 0x34FD394
	0x034FD390 MOV W26, W31
	0x034FD394 LDR X0, [X22]
	0x034FD398 LDR W8, [X0 + 0xE0]
	0x034FD39C CBNZ W8, 0x34FD3A4
	0x034FD3A0 BL 0x1C16DFC

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+32], X22
	004 Move [X31+40], X21
	005 Move [X31+48], X20
	006 Move [X31+56], X19
	007 Move X22, 0xEE3000
	008 Move W8, [X22+2662]
	009 Move X19, X2
	010 Move W21, W1
	011 Move X20, X0
	012 Move [X31+28], W1
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {34}
	017 Move X0, 0xBF7000
	018 Move X0, [X0+2600]
	019 Call 0x1C17CF4
	020 Move X0, 0xBF9000
	021 Move X0, [X0+2656]
	022 Call 0x1C17CF4
	023 Move X0, 0xC37000
	024 Move X0, [X0+3152]
	025 Call 0x1C17CF4
	026 Move X0, 0xC37000
	027 Move X0, [X0+3128]
	028 Call 0x1C17CF4
	029 Move X0, 0xC37000
	030 Move X0, [X0+3160]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X22+2662], W8
	034 Move X0, [X20+16]
	035 Compare X0, 0
	036 JumpIfEqual {90}
	037 Move X8, 0xC37000
	038 Move X8, [X8+3152]
	039 Move X22, 0xBF9000
	040 Move W1, W21
	041 Move X2, [X8]
	042 Move X22, [X22+2656]
	043 Call 0x242659C, X0, X1
	044 Move TEMP, X0
	045 And TEMP, TEMP, 1
	046 Compare TEMP, 1
	047 JumpIfNotEqual {69}
	048 Add X0, X31, 28
	049 Move X1, X31
	050 Call Byte.ToString, X0
	051 Move X8, 0xC37000
	052 Move X8, [X8+3160]
	053 Move X2, X31
	054 Move X1, [X8]
	055 Call String.Concat, X0, X1
	056 Move X8, 0xBF7000
	057 Move X8, [X8+2600]
	058 Move X21, X0
	059 Move X8, [X8]
	060 Move W9, [X8+224]
	061 Compare W9, 0
	062 JumpIfNotEqual {65}
	063 Move X0, X8
	064 Call 0x1C17DFC
	065 Move X0, X21
	066 Move X1, X31
	067 Call Debug.LogWarning, X0
	068 Move W21, [X31+28]
	069 Move X0, [X22]
	070 Move X20, [X20+16]
	071 Add X1, X31, 8
	072 Move [X31+8], X19
	073 Call 0x1C17E04
	074 Compare X20, 0
	075 JumpIfEqual {90}
	076 Move X8, 0xC37000
	077 Move X8, [X8+3128]
	078 Move X2, X0
	079 Move X0, X20
	080 Move W1, W21
	081 Move X3, [X8]
	082 Call 0x2426794, X0, X1, X2
	083 Move X20, [X31+48]
	084 Move X19, [X31+56]
	085 Move X22, [X31+32]
	086 Move X21, [X31+40]
	087 Move X30, [X31+16]
	088 Add X31, X31, 64
	089 Return 
	090 Call 0x1C17F20

Method: System.Void Add(System.Byte code, System.Object value)

Disassembly:
	0x034FD3A4 BL 0x34F5754
	0x034FD3A8 CBZ X0, 0x34FD594
	0x034FD3AC MOV X1, X31
	0x034FD3B0 MOV X2, X31
	0x034FD3B4 MOV X22, X0
	0x034FD3B8 BL 0x3517EFC
	0x034FD3BC CBNZ W26, 0x34FD3DC
	0x034FD3C0 LDR X1, [X19 + 0xE8]
	0x034FD3C4 CBZ X1, 0x34FD594
	0x034FD3C8 LDR W3, [X1 + 0x18]
	0x034FD3CC MOV X0, X22
	0x034FD3D0 MOV W2, W31
	0x034FD3D4 MOV X4, X31
	0x034FD3D8 BL 0x3517F60
	0x034FD3DC LDR X0, [X19 + 0x18]
	0x034FD3E0 CBZ X0, 0x34FD594
	0x034FD3E4 LDR X8, [X0]
	0x034FD3E8 MOV X1, X22
	0x034FD3EC MOV W2, W24
	0x034FD3F0 MOV X3, X23
	0x034FD3F4 LDP X9, X5, [X8 + 0x1E8]
	0x034FD3F8 MOV W4, W31
	0x034FD3FC BLR X9
	0x034FD400 CBZ W26, 0x34FD4E8
	0x034FD404 LDR X23, [X19 + 0xF0]
	0x034FD408 MOV X0, X22
	0x034FD40C MOV X1, X31
	0x034FD410 BL 0x3517FCC
	0x034FD414 MOV X24, X0
	0x034FD418 MOV X0, X22
	0x034FD41C MOV X1, X31
	0x034FD420 BL 0x351806C
	0x034FD424 CBZ X23, 0x34FD594
	0x034FD428 ADRP X10, 0xC36000
	0x034FD42C LDR X8, [X23]
	0x034FD430 LDR X10, [X10 + 0xCB0]
	0x034FD434 MOV W25, W0
	0x034FD438 LDRH W9, [X8 + 0x12E]
	0x034FD43C LDR X1, [X10]
	0x034FD440 CBZ X9, 0x34FD464
	0x034FD444 LDR X10, [X8 + 0xB0]
	0x034FD448 ADD X10, X10, 0x8
	0x034FD44C LDUR X11, [X10 - 0x8]
	0x034FD450 CMP X11, X1
	0x034FD454 B.EQ 0x34FD474
	0x034FD458 SUBS X9, X9, 0x1
	0x034FD45C ADD X10, X10, 0x10
	0x034FD460 B.NE 0x34FD44C
	0x034FD464 MOVZ W2, 0x4
	0x034FD468 MOV X0, X23
	0x034FD46C BL 0x1C5C788
	0x034FD470 B 0x34FD484
	0x034FD474 LDR W9, [X10]
	0x034FD478 ADD W9, W9, 0x4
	0x034FD47C ADD X8, X8, W9, 0x4, SXTW
	0x034FD480 ADD X0, X8, 0x138
	0x034FD484 LDP X8, X4, [X0]
	0x034FD488 MOV X0, X23
	0x034FD48C MOV X1, X24
	0x034FD490 MOV W2, W31
	0x034FD494 MOV W3, W25
	0x034FD498 BLR X8
	0x034FD49C MOV X23, X0
	0x034FD4A0 MOV X0, X22

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xEE3000
	007 Move W8, [X22+2663]
	008 Move X19, X2
	009 Move W21, W1
	010 Move X20, X0
	011 Move [X31+12], W1
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {30}
	016 Move X0, 0xBF7000
	017 Move X0, [X0+2600]
	018 Call 0x1C17CF4
	019 Move X0, 0xC37000
	020 Move X0, [X0+3152]
	021 Call 0x1C17CF4
	022 Move X0, 0xC37000
	023 Move X0, [X0+3128]
	024 Call 0x1C17CF4
	025 Move X0, 0xC37000
	026 Move X0, [X0+3160]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X22+2663], W8
	030 Move X0, [X20+16]
	031 Compare X0, 0
	032 JumpIfEqual {77}
	033 Move X8, 0xC37000
	034 Move X8, [X8+3152]
	035 Move W1, W21
	036 Move X2, [X8]
	037 Call 0x242659C, X0, X1
	038 Move TEMP, X0
	039 And TEMP, TEMP, 1
	040 Compare TEMP, 1
	041 JumpIfNotEqual {62}
	042 Add X0, X31, 12
	043 Move X1, X31
	044 Call Byte.ToString, X0
	045 Move X8, 0xC37000
	046 Move X8, [X8+3160]
	047 Move X2, X31
	048 Move X1, [X8]
	049 Call String.Concat, X0, X1
	050 Move X8, 0xBF7000
	051 Move X8, [X8+2600]
	052 Move X21, X0
	053 Move X8, [X8]
	054 Move W9, [X8+224]
	055 Compare W9, 0
	056 JumpIfNotEqual {59}
	057 Move X0, X8
	058 Call 0x1C17DFC
	059 Move X0, X21
	060 Move X1, X31
	061 Call Debug.LogWarning, X0
	062 Move X0, [X20+16]
	063 Compare X0, 0
	064 JumpIfEqual {77}
	065 Move X8, 0xC37000
	066 Move X8, [X8+3128]
	067 Move W1, [X31+12]
	068 Move X2, X19
	069 Move X3, [X8]
	070 Call 0x2426794, X0, X1, X2
	071 Move X20, [X31+32]
	072 Move X19, [X31+40]
	073 Move X22, [X31+16]
	074 Move X21, [X31+24]
	075 Move X30, [X31+48]
	076 Return 
	077 Call 0x1C17F20

Method: T Unwrap(System.Byte key)

Disassembly:
	0x022307A4 RET
	0x022307A8 BL 0x3EB1B20
	0x022307AC SUB X31, X31, 0x50
	0x022307B0 STP X30, X23, [X31 + 0x20]
	0x022307B4 STP X22, X21, [X31 + 0x30]
	0x022307B8 STP X20, X19, [X31 + 0x40]
	0x022307BC STP X1, X2, [X31 + 0x10]
	0x022307C0 STP X4, X5, [X31]
	0x022307C4 LDR X8, [X7 + 0x38]
	0x022307C8 MOV X21, X7
	0x022307CC MOV W19, W6
	0x022307D0 MOV W20, W3
	0x022307D4 MOV X22, X0
	0x022307D8 CBNZ X8, 0x22307F8
	0x022307DC ADRP X0, 0x1EEC000
	0x022307E0 LDR X0, [X0 + 0x238]
	0x022307E4 BL 0x1C16CF4
	0x022307E8 LDR X8, [X21 + 0x38]
	0x022307EC CBNZ X8, 0x22307F8
	0x022307F0 MOV X0, X21
	0x022307F4 BL 0x1C5C6E0
	0x022307F8 ADRP X8, 0x1EEC000
	0x022307FC LDR X8, [X8 + 0x238]
	0x02230800 LDR X0, [X8]
	0x02230804 LDR W8, [X0 + 0xE0]
	0x02230808 CBNZ W8, 0x2230810
	0x0223080C BL 0x1C16DFC
	0x02230810 LDR X8, [X21 + 0x38]
	0x02230814 ADD X0, X31, 0x10
	0x02230818 LDR X1, [X8 + 0x8]
	0x0223081C BL 0x3C5D9EC
	0x02230820 LDR X8, [X21 + 0x38]
	0x02230824 MOV X23, X0
	0x02230828 MOV X21, X1
	0x0223082C ADD X0, X31, 0x0
	0x02230830 LDR X8, [X8 + 0x18]
	0x02230834 MOV X1, X8
	0x02230838 BL 0x3C5D9EC
	0x0223083C MOV X4, X0
	0x02230840 MOV X5, X1
	0x02230844 MOV X0, X22
	0x02230848 MOV X1, X23
	0x0223084C MOV X2, X21
	0x02230850 MOV W3, W20
	0x02230854 MOV W6, W19
	0x02230858 MOV X7, X31
	0x0223085C BL 0x3C5E200
	0x02230860 LDP X20, X19, [X31 + 0x40]
	0x02230864 LDP X22, X21, [X31 + 0x30]
	0x02230868 LDP X30, X23, [X31 + 0x20]
	0x0223086C AND W0, W0, 0x1
	0x02230870 ADD X31, X31, 0x50
	0x02230874 RET
	0x02230878 STP X29, X30, [X31 - 0x60]!
	0x0223087C STR X27, [X31 + 0x10]
	0x02230880 STP X26, X25, [X31 + 0x20]
	0x02230884 STP X24, X23, [X31 + 0x30]
	0x02230888 STP X22, X21, [X31 + 0x40]
	0x0223088C STP X20, X19, [X31 + 0x50]
	0x02230890 ADD X29, X31, 0x0
	0x02230894 SUB X31, X31, 0x20
	0x02230898 MRS X27, 0xC000
	0x0223089C LDR X8, [X27 + 0x28]
	0x022308A0 MOV X23, X5
	0x022308A4 MOV W19, W4
	0x022308A8 MOV X21, X3
	0x022308AC STUR X8, [X29 - 0x8]
	0x022308B0 LDR X8, [X5 + 0x38]
	0x022308B4 MOV W20, W2
	0x022308B8 MOV X24, X1
	0x022308BC MOV X22, X0
	0x022308C0 CBNZ X8, 0x22308D0
	0x022308C4 MOV X0, X23
	0x022308C8 BL 0x1C5C6E0
	0x022308CC LDR X8, [X23 + 0x38]
	0x022308D0 LDR X0, [X8]
	0x022308D4 LDRB W9, [X0 + 0x135]
	0x022308D8 TBNZ X9, 0x0, 0x22308E4
	0x022308DC BL 0x1C5C684
	0x022308E0 LDR X8, [X23 + 0x38]

ISIL:
	001 Move [X31-80], X29
	002 Move [X31-72], X30
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Add X29, X31, 0
	012 Subtract X31, X31, 32
	013 NotImplemented "Instruction MRS not yet implemented."
	014 Move X8, [X26+40]
	015 Move X20, X3
	016 Move X19, X2
	017 Move W22, W1
	018 Move [X29-8], X8
	019 Move X8, [X3+56]
	020 Move X25, X0
	021 Compare X8, 0
	022 JumpIfNotEqual {32}
	023 Move X0, 0x1EED000
	024 Move X0, [X0+520]
	025 Call 0x1C17CF4
	026 Move X8, [X20+56]
	027 Compare X8, 0
	028 JumpIfNotEqual {32}
	029 Move X0, X20
	030 Call 0x1C5D6E0
	031 Move X8, [X20+56]
	032 Move X8, [X8+8]
	033 Move W21, [X8+252]
	034 Add X8, X31, 0
	035 Add X9, X21, 15
	036 And X9, X9, 0x1FFFFFFFF
	037 Subtract X23, X8, X9
	038 Add X31, X23, 0
	039 Add X8, X31, 0
	040 Subtract X24, X8, X9
	041 Add X31, X24, 0
	042 Move X0, X24
	043 Move W1, W31
	044 Move X2, X21
	045 Call 0x3EB2B10
	046 Move X0, [X25+16]
	047 Compare X0, 0
	048 JumpIfEqual {92}
	049 Move X8, 0x1EED000
	050 Move X8, [X8+520]
	051 Move W1, W22
	052 Move X2, [X8]
	053 Call 0x24266C8, X0, X1
	054 Move X8, [X20+56]
	055 Subtract X3, X29, 24
	056 Move X2, X31
	057 Move X4, X23
	058 Move X1, [X8]
	059 Move X8, [X1]
	060 Move [X29-24], X0
	061 Move [X29-16], X23
	062 Move X9, [X1+16]
	063 Move X0, X8
	064 NotImplemented "Instruction BLR not yet implemented."
	065 Move X0, X24
	066 Move X1, X23
	067 Move X2, X21
	068 Call 0x3EB2AC0
	069 Move X0, X23
	070 Move X1, X24
	071 Move X2, X21
	072 Call 0x3EB2AC0
	073 Move X0, X19
	074 Move X1, X23
	075 Move X2, X21
	076 Call 0x3EB2AC0
	077 Move X8, [X26+40]
	078 NotImplemented "Instruction LDUR not yet implemented."
	079 NotImplemented "Instruction CMP not yet implemented."
	080 Add X31, X29, 0
	081 Move X20, [X31+64]
	082 Move X19, [X31+72]
	083 Move X22, [X31+48]
	084 Move X21, [X31+56]
	085 Move X24, [X31+32]
	086 Move X23, [X31+40]
	087 Move X26, [X31+16]
	088 Move X25, [X31+24]
	089 Move X29, [X31+80]
	090 Move X30, [X31+88]
	091 Return X0
	092 Call 0x1C17F20
	093 Call 0x3EB2B20

Method: T Get(System.Byte key)

Disassembly:
	0x022301E4 LDR X8, [X20 + 0x38]
	0x022301E8 LDR X1, [X8 + 0x8]
	0x022301EC SUB X5, X29, 0x18
	0x022301F0 MOV X2, X21
	0x022301F4 MOV X3, X19
	0x022301F8 MOV X4, X31
	0x022301FC BL 0x1C17728
	0x02230200 ADRP X10, 0x1EEC000
	0x02230204 LDP X8, X9, [X29 - 0x18]
	0x02230208 LDR X10, [X10 + 0x230]
	0x0223020C STP X8, X9, [X29 - 0x28]
	0x02230210 LDR X0, [X10]
	0x02230214 LDR W8, [X0 + 0xE0]
	0x02230218 CBNZ W8, 0x2230220
	0x0223021C BL 0x1C16DFC
	0x02230220 SUB X0, X29, 0x28
	0x02230224 MOV X1, X31
	0x02230228 BL 0x3C5EA98
	0x0223022C LDR X8, [X22 + 0x28]
	0x02230230 LDUR X9, [X29 - 0x8]
	0x02230234 CMP X8, X9
	0x02230238 B.NE 0x2230250
	0x0223023C ADD X31, X29, 0x0
	0x02230240 LDP X20, X19, [X31 + 0x20]
	0x02230244 LDP X22, X21, [X31 + 0x10]
	0x02230248 LDP X29, X30, [X31], #0x30
	0x0223024C RET
	0x02230250 BL 0x3EB1B20
	0x02230254 SUB X31, X31, 0x30
	0x02230258 STP X30, X19, [X31 + 0x20]
	0x0223025C STP X0, X1, [X31 + 0x10]
	0x02230260 LDR X8, [X2 + 0x38]
	0x02230264 MOV X19, X2
	0x02230268 CBNZ X8, 0x2230294
	0x0223026C ADRP X0, 0x1EEC000
	0x02230270 LDR X0, [X0 + 0x230]
	0x02230274 BL 0x1C16CF4
	0x02230278 ADRP X0, 0x1EEC000
	0x0223027C LDR X0, [X0 + 0x238]
	0x02230280 BL 0x1C16CF4
	0x02230284 LDR X8, [X19 + 0x38]
	0x02230288 CBNZ X8, 0x2230294
	0x0223028C MOV X0, X19
	0x02230290 BL 0x1C5C6E0
	0x02230294 ADRP X8, 0x1EEC000
	0x02230298 LDR X8, [X8 + 0x238]
	0x0223029C STP X31, X31, [X31]
	0x022302A0 LDR X0, [X8]
	0x022302A4 LDR W8, [X0 + 0xE0]
	0x022302A8 CBNZ W8, 0x22302B0
	0x022302AC BL 0x1C16DFC
	0x022302B0 LDR X8, [X19 + 0x38]
	0x022302B4 ADD X0, X31, 0x10
	0x022302B8 LDR X1, [X8 + 0x8]
	0x022302BC BL 0x3C5D9EC
	0x022302C0 ADRP X9, 0x1EEC000
	0x022302C4 LDR X9, [X9 + 0x230]
	0x022302C8 MOV X8, X0
	0x022302CC STP X8, X1, [X31]
	0x022302D0 LDR X0, [X9]
	0x022302D4 LDR W8, [X0 + 0xE0]
	0x022302D8 CBNZ W8, 0x22302E0
	0x022302DC BL 0x1C16DFC
	0x022302E0 ADD X0, X31, 0x0
	0x022302E4 MOV X1, X31
	0x022302E8 BL 0x3C5E814
	0x022302EC LDP X30, X19, [X31 + 0x20]
	0x022302F0 ADD X31, X31, 0x30
	0x022302F4 RET
	0x022302F8 STP X29, X30, [X31 - 0x30]!
	0x022302FC STP X22, X21, [X31 + 0x10]
	0x02230300 STP X20, X19, [X31 + 0x20]
	0x02230304 ADD X29, X31, 0x0
	0x02230308 SUB X31, X31, 0x30
	0x0223030C MRS X22, 0xC000
	0x02230310 LDR X8, [X22 + 0x28]
	0x02230314 MOV X20, X1
	0x02230318 MOV X19, X0
	0x0223031C STUR X8, [X29 - 0x8]
	0x02230320 LDR X8, [X1 + 0x38]

ISIL:
	001 Move [X31-80], X29
	002 Move [X31-72], X30
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Add X29, X31, 0
	012 Subtract X31, X31, 32
	013 NotImplemented "Instruction MRS not yet implemented."
	014 Move X8, [X26+40]
	015 Move X20, X3
	016 Move X19, X2
	017 Move W22, W1
	018 Move [X29-8], X8
	019 Move X8, [X3+56]
	020 Move X25, X0
	021 Compare X8, 0
	022 JumpIfNotEqual {32}
	023 Move X0, 0x1EED000
	024 Move X0, [X0+520]
	025 Call 0x1C17CF4
	026 Move X8, [X20+56]
	027 Compare X8, 0
	028 JumpIfNotEqual {32}
	029 Move X0, X20
	030 Call 0x1C5D6E0
	031 Move X8, [X20+56]
	032 Move X8, [X8+8]
	033 Move W21, [X8+252]
	034 Add X8, X31, 0
	035 Add X9, X21, 15
	036 And X9, X9, 0x1FFFFFFFF
	037 Subtract X23, X8, X9
	038 Add X31, X23, 0
	039 Add X8, X31, 0
	040 Subtract X24, X8, X9
	041 Add X31, X24, 0
	042 Move X0, X24
	043 Move W1, W31
	044 Move X2, X21
	045 Call 0x3EB2B10
	046 Move X0, [X25+16]
	047 Compare X0, 0
	048 JumpIfEqual {92}
	049 Move X8, 0x1EED000
	050 Move X8, [X8+520]
	051 Move W1, W22
	052 Move X2, [X8]
	053 Call 0x24266C8, X0, X1
	054 Move X8, [X20+56]
	055 Subtract X3, X29, 24
	056 Move X2, X31
	057 Move X4, X23
	058 Move X1, [X8]
	059 Move X8, [X1]
	060 Move [X29-24], X0
	061 Move [X29-16], X23
	062 Move X9, [X1+16]
	063 Move X0, X8
	064 NotImplemented "Instruction BLR not yet implemented."
	065 Move X0, X24
	066 Move X1, X23
	067 Move X2, X21
	068 Call 0x3EB2AC0
	069 Move X0, X23
	070 Move X1, X24
	071 Move X2, X21
	072 Call 0x3EB2AC0
	073 Move X0, X19
	074 Move X1, X23
	075 Move X2, X21
	076 Call 0x3EB2AC0
	077 Move X8, [X26+40]
	078 NotImplemented "Instruction LDUR not yet implemented."
	079 NotImplemented "Instruction CMP not yet implemented."
	080 Add X31, X29, 0
	081 Move X20, [X31+64]
	082 Move X19, [X31+72]
	083 Move X22, [X31+48]
	084 Move X21, [X31+56]
	085 Move X24, [X31+32]
	086 Move X23, [X31+40]
	087 Move X26, [X31+16]
	088 Move X25, [X31+24]
	089 Move X29, [X31+80]
	090 Move X30, [X31+88]
	091 Return X0
	092 Call 0x1C17F20
	093 Call 0x3EB2B20

Method: System.Boolean ContainsKey(System.Byte key)

Disassembly:
	0x034FD4A4 MOV X1, X31
	0x034FD4A8 MOV X2, X31
	0x034FD4AC BL 0x3517EFC
	0x034FD4B0 LDR X1, [X19 + 0xE8]
	0x034FD4B4 CBZ X1, 0x34FD594
	0x034FD4B8 LDR W3, [X1 + 0x18]
	0x034FD4BC MOV X0, X22
	0x034FD4C0 MOV W2, W31
	0x034FD4C4 MOV X4, X31
	0x034FD4C8 BL 0x3517F60
	0x034FD4CC CBZ X23, 0x34FD594
	0x034FD4D0 LDR W3, [X23 + 0x18]
	0x034FD4D4 MOV X0, X22
	0x034FD4D8 MOV X1, X23
	0x034FD4DC MOV W2, W31
	0x034FD4E0 MOV X4, X31
	0x034FD4E4 BL 0x3517F60
	0x034FD4E8 MOV X0, X22
	0x034FD4EC MOV X1, X31
	0x034FD4F0 BL 0x3517FCC
	0x034FD4F4 AND W8, W21, 0xFF
	0x034FD4F8 CMP W8, 0x2

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xEE3000
	006 Move W8, [X21+2664]
	007 Move W19, W1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xC37000
	014 Move X0, [X0+3152]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+2664], W8
	018 Move X0, [X20+16]
	019 Compare X0, 0
	020 JumpIfEqual {31}
	021 Move X8, 0xC37000
	022 Move X8, [X8+3152]
	023 Move W1, W19
	024 Move X20, [X31+16]
	025 Move X19, [X31+24]
	026 Move X2, [X8]
	027 Move X30, [X31+32]
	028 Move X21, [X31+40]
	029 Call 0x242659C, X0, X1
	030 Return X0
	031 Call 0x1C17F20

Method: System.Object TryGetObject(System.Byte key)

Disassembly:
	0x034FD4FC B.EQ 0x34FD528
	0x034FD500 LDR X8, [X19 + 0xE8]
	0x034FD504 CBZ X8, 0x34FD594
	0x034FD508 CBZ X0, 0x34FD594
	0x034FD50C LDR W8, [X8 + 0x18]
	0x034FD510 LDR W9, [X0 + 0x18]
	0x034FD514 SUB W8, W8, 0x1
	0x034FD518 CMP W8, W9
	0x034FD51C B.CS 0x34FD598
	0x034FD520 ADD X8, X0, W8, SXTW
	0x034FD524 STRB W21, [X8 + 0x20]
	0x034FD528 CMP W26, 0x0
	0x034FD52C CSET W8, NE
	0x034FD530 TBZ X20, 0x0, 0x34FD544
	0x034FD534 TBNZ X8, 0x0, 0x34FD544
	0x034FD538 LDR X8, [X19 + 0x10]
	0x034FD53C CBZ X8, 0x34FD594
	0x034FD540 LDRB W26, [X8 + 0x6B]
	0x034FD544 CBZ W26, 0x34FD578
	0x034FD548 LDR X8, [X19 + 0xE8]
	0x034FD54C CBZ X8, 0x34FD594
	0x034FD550 CBZ X0, 0x34FD594
	0x034FD554 LDR W8, [X8 + 0x18]
	0x034FD558 LDR W9, [X0 + 0x18]
	0x034FD55C SUB W8, W8, 0x1
	0x034FD560 CMP W8, W9
	0x034FD564 B.CS 0x34FD598
	0x034FD568 ADD X8, X0, W8, SXTW
	0x034FD56C LDRB W9, [X8 + 0x20]
	0x034FD570 ORR W9, W9, 0x80

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xEE3000
	007 Move W8, [X21+2665]
	008 Move W19, W1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xC20000
	015 Move X0, [X0+528]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+2665], W8
	019 Move [X31+8], X31
	020 Move X0, [X20+16]
	021 Compare X0, 0
	022 JumpIfEqual {38}
	023 Move X8, 0xC20000
	024 Move X8, [X8+528]
	025 Add X2, X31, 8
	026 Move W1, W19
	027 Move X3, [X8]
	028 Call 0x242665C, X0, X1, X2
	029 Move X8, [X31+8]
	030 Move X20, [X31+32]
	031 Move X19, [X31+40]
	032 Move X30, [X31+16]
	033 Move X21, [X31+24]
	034 And W31, W0, 1
	035 NotImplemented "Instruction CSEL not yet implemented."
	036 Add X31, X31, 48
	037 Return X0
	038 Call 0x1C17F20

Method: System.Boolean TryGetValue(System.Byte key, out System.Object value)

Disassembly:
	0x034FD574 STRB W9, [X8 + 0x20]
	0x034FD578 MOV X0, X22
	0x034FD57C LDP X20, X19, [X31 + 0x40]
	0x034FD580 LDP X22, X21, [X31 + 0x30]
	0x034FD584 LDP X24, X23, [X31 + 0x20]
	0x034FD588 LDP X26, X25, [X31 + 0x10]
	0x034FD58C LDR X30, [X31], #0x50
	0x034FD590 RET
	0x034FD594 BL 0x1C16F20
	0x034FD598 BL 0x1C16F28
	0x034FD59C STR X30, [X31 - 0x50]!
	0x034FD5A0 STP X26, X25, [X31 + 0x10]
	0x034FD5A4 STP X24, X23, [X31 + 0x20]
	0x034FD5A8 STP X22, X21, [X31 + 0x30]
	0x034FD5AC STP X20, X19, [X31 + 0x40]
	0x034FD5B0 ADRP X21, 0xEE2000
	0x034FD5B4 LDRB W8, [X21 + 0xA79]
	0x034FD5B8 MOV W20, W2
	0x034FD5BC MOV X23, X1
	0x034FD5C0 MOV X19, X0
	0x034FD5C4 TBNZ X8, 0x0, 0x34FD5F4
	0x034FD5C8 ADRP X0, 0xBF6000
	0x034FD5CC LDR X0, [X0 + 0x618]
	0x034FD5D0 BL 0x1C16CF4
	0x034FD5D4 ADRP X0, 0xC36000
	0x034FD5D8 LDR X0, [X0 + 0xCB0]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xEE3000
	007 Move W8, [X22+2666]
	008 Move X19, X2
	009 Move W20, W1
	010 Move X21, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0xC20000
	016 Move X0, [X0+528]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X22+2666], W8
	020 Move X0, [X21+16]
	021 Compare X0, 0
	022 JumpIfEqual {35}
	023 Move X8, 0xC20000
	024 Move X8, [X8+528]
	025 Move W1, W20
	026 Move X2, X19
	027 Move X20, [X31+32]
	028 Move X19, [X31+40]
	029 Move X3, [X8]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X30, [X31+48]
	033 Call 0x242665C, X0, X1, X2
	034 Return X0
	035 Call 0x1C17F20

Method: System.Boolean TryGetValue(System.Byte key, out T value)

Disassembly:
	0x02230324 CBNZ X8, 0x2230348
	0x02230328 ADRP X0, 0x1EEC000
	0x0223032C LDR X0, [X0 + 0x230]
	0x02230330 BL 0x1C16CF4
	0x02230334 LDR X8, [X20 + 0x38]
	0x02230338 CBNZ X8, 0x2230348
	0x0223033C MOV X0, X20
	0x02230340 BL 0x1C5C6E0
	0x02230344 LDR X8, [X20 + 0x38]
	0x02230348 LDR X0, [X8]
	0x0223034C LDRB W9, [X0 + 0x135]
	0x02230350 TBNZ X9, 0x0, 0x223035C
	0x02230354 BL 0x1C5C684
	0x02230358 LDR X8, [X20 + 0x38]
	0x0223035C LDR W9, [X0 + 0xFC]
	0x02230360 ADD X10, X31, 0x0
	0x02230364 ADD W9, W9, 0x10
	0x02230368 ADD X9, X9, 0xF
	0x0223036C AND X9, X9, 0x1FFFFFFFF
	0x02230370 SUB X21, X10, X9
	0x02230374 ADD X31, X21, 0x0
	0x02230378 STP X31, X31, [X29 - 0x28]
	0x0223037C LDR X0, [X8]
	0x02230380 LDRB W9, [X0 + 0x135]
	0x02230384 TBNZ X9, 0x0, 0x2230390
	0x02230388 BL 0x1C5C684
	0x0223038C LDR X8, [X20 + 0x38]
	0x02230390 LDR X1, [X8 + 0x8]
	0x02230394 SUB X5, X29, 0x18
	0x02230398 MOV X2, X21
	0x0223039C MOV X3, X19
	0x022303A0 MOV X4, X31
	0x022303A4 BL 0x1C17728
	0x022303A8 ADRP X10, 0x1EEC000
	0x022303AC LDP X8, X9, [X29 - 0x18]
	0x022303B0 LDR X10, [X10 + 0x230]
	0x022303B4 STP X8, X9, [X29 - 0x28]
	0x022303B8 LDR X0, [X10]
	0x022303BC LDR W8, [X0 + 0xE0]
	0x022303C0 CBNZ W8, 0x22303C8
	0x022303C4 BL 0x1C16DFC
	0x022303C8 SUB X0, X29, 0x28
	0x022303CC MOV X1, X31
	0x022303D0 BL 0x3C5E814
	0x022303D4 LDR X8, [X22 + 0x28]
	0x022303D8 LDUR X9, [X29 - 0x8]
	0x022303DC CMP X8, X9
	0x022303E0 B.NE 0x22303F8
	0x022303E4 ADD X31, X29, 0x0
	0x022303E8 LDP X20, X19, [X31 + 0x20]
	0x022303EC LDP X22, X21, [X31 + 0x10]
	0x022303F0 LDP X29, X30, [X31], #0x30
	0x022303F4 RET
	0x022303F8 BL 0x3EB1B20
	0x022303FC SUB X31, X31, 0x40
	0x02230400 STP X1, X30, [X31 + 0x18]
	0x02230404 STP X20, X19, [X31 + 0x30]
	0x02230408 STR X0, [X31 + 0x10]
	0x0223040C LDR X8, [X3 + 0x38]
	0x02230410 MOV X20, X3
	0x02230414 MOV W19, W2
	0x02230418 CBNZ X8, 0x2230444
	0x0223041C ADRP X0, 0x1EEC000
	0x02230420 LDR X0, [X0 + 0x230]
	0x02230424 BL 0x1C16CF4
	0x02230428 ADRP X0, 0x1EEC000
	0x0223042C LDR X0, [X0 + 0x238]
	0x02230430 BL 0x1C16CF4
	0x02230434 LDR X8, [X20 + 0x38]
	0x02230438 CBNZ X8, 0x2230444
	0x0223043C MOV X0, X20
	0x02230440 BL 0x1C5C6E0
	0x02230444 ADRP X8, 0x1EEC000
	0x02230448 LDR X8, [X8 + 0x238]
	0x0223044C STP X31, X31, [X31]
	0x02230450 LDR X0, [X8]
	0x02230454 LDR W8, [X0 + 0xE0]
	0x02230458 CBNZ W8, 0x2230460
	0x0223045C BL 0x1C16DFC
	0x02230460 LDR X8, [X20 + 0x38]
	0x02230464 ADD X0, X31, 0x10
	0x02230468 LDR X1, [X8 + 0x8]
	0x0223046C BL 0x3C5D9EC
	0x02230470 ADRP X9, 0x1EEC000
	0x02230474 LDR X9, [X9 + 0x230]
	0x02230478 MOV X8, X0
	0x0223047C STP X8, X1, [X31]
	0x02230480 LDR X0, [X9]
	0x02230484 LDR W8, [X0 + 0xE0]
	0x02230488 CBNZ W8, 0x2230490
	0x0223048C BL 0x1C16DFC
	0x02230490 ADD X0, X31, 0x0
	0x02230494 MOV W1, W19
	0x02230498 MOV X2, X31
	0x0223049C BL 0x3C5EBA4
	0x022304A0 LDP X20, X19, [X31 + 0x30]
	0x022304A4 LDR X30, [X31 + 0x20]
	0x022304A8 ADD X31, X31, 0x40
	0x022304AC RET
	0x022304B0 STP X29, X30, [X31 - 0x40]!
	0x022304B4 STR X23, [X31 + 0x10]
	0x022304B8 STP X22, X21, [X31 + 0x20]
	0x022304BC STP X20, X19, [X31 + 0x30]
	0x022304C0 ADD X29, X31, 0x0
	0x022304C4 SUB X31, X31, 0x30
	0x022304C8 MRS X23, 0xC000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X8, [X3+56]
	007 Move X20, X3
	008 Move X19, X2
	009 Move W21, W1
	010 Move X22, X0
	011 Compare X8, 0
	012 JumpIfNotEqual {24}
	013 Move X0, 0x1EED000
	014 Move X0, [X0+528]
	015 Call 0x1C17CF4
	016 Move X0, 0x1EED000
	017 Move X0, [X0+536]
	018 Call 0x1C17CF4
	019 Move X8, [X20+56]
	020 Compare X8, 0
	021 JumpIfNotEqual {24}
	022 Move X0, X20
	023 Call 0x1C5D6E0
	024 Move [X31+8], X31
	025 Move X0, [X22+16]
	026 Compare X0, 0
	027 JumpIfEqual {120}
	028 Move X8, 0x1EED000
	029 Move X8, [X8+528]
	030 Add X2, X31, 8
	031 Move W1, W21
	032 Move X3, [X8]
	033 Call 0x242665C, X0, X1, X2
	034 Move TEMP, X0
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfNotEqual {91}
	038 Move X8, [X20+56]
	039 Move X21, [X31+8]
	040 Move X0, [X8+24]
	041 Move W8, [X0+309]
	042 Move TEMP, X8
	043 And TEMP, TEMP, 1
	044 Compare TEMP, 1
	045 JumpIfEqual {47}
	046 Call 0x1C5D684
	047 Compare X21, 0
	048 JumpIfEqual {57}
	049 Move X8, [X21]
	050 Move W9, [X0+304]
	051 Move W10, [X8+304]
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Move X8, [X8+200]
	054 Add X8, X8, X9
	055 NotImplemented "Instruction LDUR not yet implemented."
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Move X21, [X31+8]
	058 Compare X21, 0
	059 JumpIfEqual {71}
	060 Move X8, 0x1EED000
	061 Move X8, [X8+536]
	062 Move X9, [X21]
	063 Move X8, [X8]
	064 Move W11, [X9+304]
	065 Move W10, [X8+304]
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Move X9, [X9+200]
	068 Add X9, X9, X10
	069 NotImplemented "Instruction LDUR not yet implemented."
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Move X8, [X20+56]
	072 Move X1, [X8+16]
	073 Move W8, [X1+309]
	074 Move TEMP, X8
	075 And TEMP, TEMP, 1
	076 Compare TEMP, 1
	077 JumpIfEqual {81}
	078 Move X0, X1
	079 Call 0x1C5D684
	080 Move X1, X0
	081 Compare X21, 0
	082 JumpIfEqual {120}
	083 Move X8, [X21]
	084 Move X9, [X1+64]
	085 Move X0, X21
	086 Move X8, [X8+64]
	087 NotImplemented "Instruction CMP not yet implemented."
	088 Call 0x1C17E08
	089 Move W0, [X0]
	090 Move W8, 1
	091 Move X8, [X20+56]
	092 Move X0, [X8+8]
	093 Call Activator.CreateInstance
	094 Move W8, W31
	095 Move [X19], W0
	096 Move X20, [X31+32]
	097 Move X19, [X31+40]
	098 Move X22, [X31+16]
	099 Move X21, [X31+24]
	100 Move W0, W8
	101 Move X30, [X31+48]
	102 Return X0
	103 Move W0, [X21+44]
	104 Move X8, [X20+56]
	105 Move X20, [X21+48]
	106 Move X1, [X8+16]
	107 Move W8, [X1+309]
	108 Move TEMP, X8
	109 And TEMP, TEMP, 1
	110 Compare TEMP, 1
	111 JumpIfEqual {115}
	112 Move X0, X1
	113 Call 0x1C5D684
	114 Move X1, X0
	115 Compare X20, 0
	116 JumpIfEqual {120}
	117 Move X8, [X20]
	118 Move X9, [X1+64]
	119 Move X0, X20
	120 Call 0x1C17F20
	121 Call 0x1C181E0

Method: System.String ToStringFull(System.Boolean includeTypes = True)

Disassembly:
	0x034FD5DC BL 0x1C16CF4
	0x034FD5E0 ADRP X0, 0xC36000
	0x034FD5E4 LDR X0, [X0 + 0x778]
	0x034FD5E8 BL 0x1C16CF4
	0x034FD5EC MOVZ W8, 0x1
	0x034FD5F0 STRB W8, [X21 + 0xA79]
	0x034FD5F4 ADRP X21, 0xC36000
	0x034FD5F8 LDR X21, [X21 + 0x778]
	0x034FD5FC TBZ X20, 0x0, 0x34FD620
	0x034FD600 LDR X8, [X19]
	0x034FD604 MOV X0, X19
	0x034FD608 LDR X9, [X8 + 0x218]
	0x034FD60C LDR X1, [X8 + 0x220]
	0x034FD610 BLR X9
	0x034FD614 ORN W8, W31, W0, 0x0
	0x034FD618 AND W26, W8, 0x1
	0x034FD61C B 0x34FD624
	0x034FD620 MOV W26, W31
	0x034FD624 LDR X0, [X21]
	0x034FD628 LDR W8, [X0 + 0xE0]
	0x034FD62C CBNZ W8, 0x34FD634
	0x034FD630 BL 0x1C16DFC
	0x034FD634 BL 0x34F5754
	0x034FD638 CBZ X0, 0x34FD868
	0x034FD63C MOV X1, X31
	0x034FD640 MOV X2, X31
	0x034FD644 MOV X21, X0
	0x034FD648 BL 0x3517EFC
	0x034FD64C CBNZ W26, 0x34FD66C
	0x034FD650 LDR X1, [X19 + 0xE8]
	0x034FD654 CBZ X1, 0x34FD868
	0x034FD658 LDR W3, [X1 + 0x18]
	0x034FD65C MOV X0, X21
	0x034FD660 MOV W2, W31
	0x034FD664 MOV X4, X31
	0x034FD668 BL 0x3517F60
	0x034FD66C ADRP X24, 0xBF6000
	0x034FD670 LDR X24, [X24 + 0x618]
	0x034FD674 MOV X0, X23
	0x034FD678 LDR X1, [X24]
	0x034FD67C BL 0x1C16E00
	0x034FD680 MOV X22, X0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xEE3000
	007 Move X21, 0xBFF000
	008 Move W8, [X22+2667]
	009 Move X21, [X21+3680]
	010 Move W19, W1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xBFF000
	017 Move X0, [X0+3680]
	018 Call 0x1C17CF4
	019 Move X0, 0xC37000
	020 Move X0, [X0+3168]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+2667], W8
	024 Move X0, [X21]
	025 Move X20, [X20+16]
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {30}
	029 Call 0x1C17DFC
	030 And W1, W19, 1
	031 Move X0, X20
	032 Move X2, X31
	033 Call SupportClass.DictionaryToString, X0, X1
	034 Move X1, X0
	035 Move TEMP, X19
	036 And TEMP, TEMP, 1
	037 Compare TEMP, 1
	038 JumpIfNotEqual {50}
	039 Move X8, 0xC37000
	040 Move X8, [X8+3168]
	041 Move X20, [X31+32]
	042 Move X19, [X31+40]
	043 Move X22, [X31+16]
	044 Move X21, [X31+24]
	045 Move X2, X31
	046 Move X0, [X8]
	047 Move X30, [X31+48]
	048 Call String.Format, X0, X1
	049 Return X0
	050 Move X20, [X31+32]
	051 Move X19, [X31+40]
	052 Move X22, [X31+16]
	053 Move X21, [X31+24]
	054 Move X0, X1
	055 Move X30, [X31+48]
	056 Return X0

