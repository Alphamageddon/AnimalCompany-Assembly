Type: ExitGames.Client.Photon.NetworkSimulationSet

Method: System.Boolean get_IsSimulationEnabled()

Disassembly:
	0x034F16D8 LDR X0, [X0 + 0x700]
	0x034F16DC BL 0x1C16CF4

ISIL:
	001 Move W0, [X0+16]
	002 Return X0

Method: System.Void set_IsSimulationEnabled(System.Boolean value)

Disassembly:
	0x034F16E0 ADRP X0, 0xC42000
	0x034F16E4 LDR X0, [X0 + 0x6F8]
	0x034F16E8 BL 0x1C16CF4
	0x034F16EC ADRP X0, 0xC42000
	0x034F16F0 LDR X0, [X0 + 0x728]
	0x034F16F4 BL 0x1C16CF4
	0x034F16F8 ADRP X0, 0xC42000
	0x034F16FC LDR X0, [X0 + 0x6F0]
	0x034F1700 BL 0x1C16CF4
	0x034F1704 ADRP X0, 0xC42000
	0x034F1708 LDR X0, [X0 + 0x890]
	0x034F170C BL 0x1C16CF4
	0x034F1710 ADRP X0, 0xC42000
	0x034F1714 LDR X0, [X0 + 0x898]
	0x034F1718 BL 0x1C16CF4
	0x034F171C ADRP X0, 0xC42000
	0x034F1720 LDR X0, [X0 + 0x8A0]
	0x034F1724 BL 0x1C16CF4
	0x034F1728 ADRP X0, 0xC06000
	0x034F172C LDR X0, [X0 + 0x790]
	0x034F1730 BL 0x1C16CF4
	0x034F1734 ADRP X0, 0xC06000
	0x034F1738 LDR X0, [X0 + 0x798]
	0x034F173C BL 0x1C16CF4
	0x034F1740 ADRP X0, 0xC42000
	0x034F1744 LDR X0, [X0 + 0x730]
	0x034F1748 BL 0x1C16CF4
	0x034F174C ADRP X0, 0xC42000
	0x034F1750 LDR X0, [X0 + 0x8A8]
	0x034F1754 BL 0x1C16CF4
	0x034F1758 ADRP X0, 0xC42000
	0x034F175C LDR X0, [X0 + 0x8B0]
	0x034F1760 BL 0x1C16CF4
	0x034F1764 MOVZ W8, 0x1
	0x034F1768 STRB W8, [X20 + 0xA24]
	0x034F176C STR X31, [X31 + 0x48]
	0x034F1770 STRB W31, [X31 + 0x44]
	0x034F1774 STRB W31, [X31 + 0x40]
	0x034F1778 STRB W31, [X31 + 0x3C]
	0x034F177C STP X31, X31, [X31 + 0x28]
	0x034F1780 STP X31, X31, [X31 + 0x18]
	0x034F1784 LDR X20, [X19 + 0x1A8]
	0x034F1788 CBZ X20, 0x34F1DC4
	0x034F178C LDR W8, [X20 + 0x20]
	0x034F1790 ADRP X25, 0xC42000
	0x034F1794 LDR X25, [X25 + 0x898]
	0x034F1798 SUBS W23, W8, 0x1
	0x034F179C B.LT 0x34F1844
	0x034F17A0 STRB W31, [X31 + 0x44]
	0x034F17A4 ADD X1, X31, 0x44
	0x034F17A8 MOV X0, X20
	0x034F17AC MOV X2, X31
	0x034F17B0 BL 0x33DE64C
	0x034F17B4 LDR X0, [X19 + 0x1A8]
	0x034F17B8 CBZ X0, 0x34F180C
	0x034F17BC LDR X1, [X25]
	0x034F17C0 BL 0x24F18D4
	0x034F17C4 MOV X1, X0
	0x034F17C8 MOV X0, X19
	0x034F17CC BL 0x34F1F80
	0x034F17D0 MOV X22, X31
	0x034F17D4 MOVZ W21, 0x5
	0x034F17D8 LDRB W8, [X31 + 0x44]
	0x034F17DC CBZ W8, 0x34F17EC
	0x034F17E0 MOV X0, X20
	0x034F17E4 MOV X1, X31
	0x034F17E8 BL 0x33E14E4
	0x034F17EC CBNZ X22, 0x34F1DBC
	0x034F17F0 CMP W21, 0x5
	0x034F17F4 B.EQ 0x34F17FC
	0x034F17F8 CBNZ W21, 0x34F1C48
	0x034F17FC CBZ W23, 0x34F1844
	0x034F1800 LDR X20, [X19 + 0x1A8]
	0x034F1804 SUB W23, W23, 0x1
	0x034F1808 B 0x34F17A0
	0x034F180C BL 0x1C16F20
	0x034F1810 B 0x34F1E44
	0x034F1814 B 0x34F1820
	0x034F1818 B 0x34F1820
	0x034F181C B 0x34F1820
	0x034F1820 MOV X21, X0
	0x034F1824 CMP W1, 0x1
	0x034F1828 B.NE 0x34F1E44
	0x034F182C MOV X0, X21
	0x034F1830 BL 0x3EB1AD0
	0x034F1834 LDR X22, [X0]
	0x034F1838 BL 0x3EB1AE0
	0x034F183C MOV W21, W31
	0x034F1840 B 0x34F17D8
	0x034F1844 ADRP X23, 0xC42000
	0x034F1848 LDR X23, [X23 + 0x8A0]
	0x034F184C MOV X24, X31
	0x034F1850 LDR X20, [X19 + 0x60]
	0x034F1854 STRB W31, [X31 + 0x40]
	0x034F1858 ADD X1, X31, 0x40
	0x034F185C MOV X0, X20
	0x034F1860 MOV X2, X31
	0x034F1864 BL 0x33DE64C
	0x034F1868 LDR X0, [X19 + 0x60]
	0x034F186C CBZ X0, 0x34F18D8
	0x034F1870 LDR W8, [X0 + 0x20]
	0x034F1874 CMP W8, 0x1
	0x034F1878 B.LT 0x34F1894
	0x034F187C LDR X1, [X23]
	0x034F1880 BL 0x24F18D4
	0x034F1884 MOV X22, X31
	0x034F1888 MOVZ W21, 0xA
	0x034F188C MOV X24, X0
	0x034F1890 B 0x34F189C
	0x034F1894 MOV X22, X31
	0x034F1898 MOVZ W21, 0x9
	0x034F189C LDRB W8, [X31 + 0x40]
	0x034F18A0 CBZ W8, 0x34F18B0
	0x034F18A4 MOV X0, X20
	0x034F18A8 MOV X1, X31
	0x034F18AC BL 0x33E14E4
	0x034F18B0 CBNZ X22, 0x34F1DBC
	0x034F18B4 CBZ W21, 0x34F18C0
	0x034F18B8 CMP W21, 0xA
	0x034F18BC B.NE 0x34F190C
	0x034F18C0 CBZ X24, 0x34F1DC4
	0x034F18C4 LDR X8, [X24 + 0x18]
	0x034F18C8 LDR X0, [X24 + 0x40]
	0x034F18CC LDR X1, [X24 + 0x28]
	0x034F18D0 BLR X8
	0x034F18D4 B 0x34F1850
	0x034F18D8 BL 0x1C16F20
	0x034F18DC B 0x34F1E44
	0x034F18E0 B 0x34F18E8
	0x034F18E4 B 0x34F18E8
	0x034F18E8 MOV X21, X0
	0x034F18EC CMP W1, 0x1
	0x034F18F0 B.NE 0x34F1E3C
	0x034F18F4 MOV X0, X21
	0x034F18F8 BL 0x3EB1AD0
	0x034F18FC LDR X22, [X0]
	0x034F1900 BL 0x3EB1AE0
	0x034F1904 MOV W21, W31
	0x034F1908 B 0x34F189C
	0x034F190C CMP W21, 0x9
	0x034F1910 B.NE 0x34F1C48
	0x034F1914 STR X31, [X31 + 0x48]
	0x034F1918 LDR X0, [X19 + 0x188]
	0x034F191C STRB W31, [X31 + 0x3C]
	0x034F1920 ADD X1, X31, 0x3C
	0x034F1924 MOV X2, X31
	0x034F1928 STR X0, [X31 + 0x8]
	0x034F192C BL 0x33DE64C
	0x034F1930 LDR X8, [X19 + 0x188]
	0x034F1934 CBZ X8, 0x34F1DFC
	0x034F1938 ADRP X27, 0xC42000
	0x034F193C ADRP X20, 0xC42000
	0x034F1940 ADRP X25, 0xC42000
	0x034F1944 ADRP X29, 0xC06000
	0x034F1948 ADRP X26, 0xC42000
	0x034F194C LDR X27, [X27 + 0x880]
	0x034F1950 LDR X20, [X20 + 0x888]
	0x034F1954 LDR X25, [X25 + 0x6F0]
	0x034F1958 LDR X29, [X29 + 0x790]
	0x034F195C LDR X26, [X26 + 0x700]
	0x034F1960 MOV W22, W31
	0x034F1964 LDR W9, [X8 + 0x18]
	0x034F1968 CMP W22, W9
	0x034F196C B.GE 0x34F1D28
	0x034F1970 B.CS 0x34F1E08
	0x034F1974 ADD X8, X8, W22, 0x3, SXTW
	0x034F1978 LDR X28, [X8 + 0x20]
	0x034F197C CBZ X28, 0x34F1E00
	0x034F1980 LDR X8, [X28 + 0x28]
	0x034F1984 CBZ X8, 0x34F1E04
	0x034F1988 LDR W9, [X8 + 0x20]
	0x034F198C CMP W9, 0x0
	0x034F1990 B.GT 0x34F1C6C
	0x034F1994 LDR X0, [X28 + 0x20]
	0x034F1998 CBZ X0, 0x34F1E0C
	0x034F199C ADRP X8, 0xC42000
	0x034F19A0 LDR X8, [X8 + 0x728]
	0x034F19A4 LDR X1, [X8]
	0x034F19A8 BL 0x2426924
	0x034F19AC CMP W0, 0x0
	0x034F19B0 B.LE 0x34F1B4C
	0x034F19B4 LDR X0, [X28 + 0x20]
	0x034F19B8 CBZ X0, 0x34F1E10
	0x034F19BC ADRP X8, 0xC42000
	0x034F19C0 LDR X8, [X8 + 0x890]
	0x034F19C4 LDR X1, [X8]
	0x034F19C8 BL 0x24268AC
	0x034F19CC STR W22, [X31 + 0x10]
	0x034F19D0 ADRP X8, 0xC42000
	0x034F19D4 LDR X8, [X8 + 0x878]
	0x034F19D8 STP X0, X1, [X31 + 0x18]
	0x034F19DC LDR X8, [X8]
	0x034F19E0 ADD X0, X31, 0x18
	0x034F19E4 MOV X1, X8
	0x034F19E8 BL 0x2EDA6A8
	0x034F19EC STP X0, X1, [X31 + 0x28]
	0x034F19F0 MOVN W22, 0x80000000
	0x034F19F4 MOV W21, W22
	0x034F19F8 LDR X1, [X27]
	0x034F19FC ADD X0, X31, 0x28
	0x034F1A00 BL 0x2EDA7A4
	0x034F1A04 TBZ X0, 0x0, 0x34F1A9C
	0x034F1A08 LDR X1, [X20]
	0x034F1A0C ADD X0, X31, 0x28
	0x034F1A10 BL 0x2EDA758
	0x034F1A14 MOV W22, W0
	0x034F1A18 LDR X0, [X28 + 0x20]
	0x034F1A1C CBZ X0, 0x34F1BF0
	0x034F1A20 LDR X2, [X25]
	0x034F1A24 MOV W1, W22
	0x034F1A28 BL 0x2426B8C
	0x034F1A2C LDR W8, [X28 + 0x4C]
	0x034F1A30 CMP W22, W8
	0x034F1A34 B.LT 0x34F1A4C
	0x034F1A38 CBZ X0, 0x34F1C08
	0x034F1A3C LDR W8, [X0 + 0x14]
	0x034F1A40 LDR W9, [X28 + 0x48]
	0x034F1A44 CMP W8, W9
	0x034F1A48 B.GE 0x34F1A80
	0x034F1A4C LDR X8, [X19 + 0x10]
	0x034F1A50 CBZ X8, 0x34F1BF8
	0x034F1A54 LDR W9, [X8 + 0x108]
	0x034F1A58 ADD W9, W9, 0x1
	0x034F1A5C STR W9, [X8 + 0x108]
	0x034F1A60 LDR X0, [X19 + 0x190]
	0x034F1A64 CBZ X0, 0x34F1C00
	0x034F1A68 ADRP X8, 0xC06000
	0x034F1A6C LDR X8, [X8 + 0x798]
	0x034F1A70 LDR X2, [X8]
	0x034F1A74 MOV W1, W22
	0x034F1A78 BL 0x24F039C
	0x034F1A7C B 0x34F19F8
	0x034F1A80 CMP W22, W21
	0x034F1A84 B.GE 0x34F1A94
	0x034F1A88 CMP W8, W9
	0x034F1A8C B.GT 0x34F19F8
	0x034F1A90 B 0x34F19F4
	0x034F1A94 MOV W22, W21
	0x034F1A98 B 0x34F19F4
	0x034F1A9C MOV X22, X31
	0x034F1AA0 MOVZ W23, 0x17
	0x034F1AA4 ADRP X8, 0xC42000
	0x034F1AA8 LDR X8, [X8 + 0x870]
	0x034F1AAC LDR X1, [X8]
	0x034F1AB0 ADD X0, X31, 0x28
	0x034F1AB4 BL 0x2EDA830
	0x034F1AB8 CBNZ X22, 0x34F1E14
	0x034F1ABC CMP W23, 0x17
	0x034F1AC0 B.EQ 0x34F1AC8
	0x034F1AC4 CBNZ W23, 0x34F1CBC
	0x034F1AC8 LDR X22, [X28 + 0x20]
	0x034F1ACC LDR X8, [X19 + 0x190]
	0x034F1AD0 CBZ X8, 0x34F1DB0
	0x034F1AD4 LDR W9, [X8 + 0x20]
	0x034F1AD8 CMP W9, 0x0
	0x034F1ADC B.LE 0x34F1B30
	0x034F1AE0 LDR X1, [X29]
	0x034F1AE4 MOV X0, X8
	0x034F1AE8 BL 0x24F0518
	0x034F1AEC CBZ X22, 0x34F1DB4
	0x034F1AF0 LDR X2, [X25]
	0x034F1AF4 MOV W24, W0
	0x034F1AF8 MOV X0, X22
	0x034F1AFC MOV W1, W24
	0x034F1B00 BL 0x2426B8C
	0x034F1B04 LDR X2, [X26]
	0x034F1B08 MOV X23, X0
	0x034F1B0C MOV X0, X22
	0x034F1B10 MOV W1, W24
	0x034F1B14 BL 0x2427018
	0x034F1B18 CBZ X23, 0x34F1DB8
	0x034F1B1C MOV X0, X23
	0x034F1B20 BL 0x34F2C44
	0x034F1B24 MOV X0, X23
	0x034F1B28 BL 0x34F2CA8
	0x034F1B2C B 0x34F1ACC
	0x034F1B30 MOVN W8, 0x80000000
	0x034F1B34 CMP W21, W8
	0x034F1B38 B.NE 0x34F1B58
	0x034F1B3C LDR X8, [X31 + 0x48]
	0x034F1B40 LDR W22, [X31 + 0x10]
	0x034F1B44 CBZ X8, 0x34F1B90
	0x034F1B48 B 0x34F1C8C
	0x034F1B4C LDR X8, [X31 + 0x48]
	0x034F1B50 CBNZ X8, 0x34F1BE0
	0x034F1B54 B 0x34F1B94
	0x034F1B58 LDR X8, [X19 + 0x10]
	0x034F1B5C LDR W22, [X31 + 0x10]
	0x034F1B60 CBZ X8, 0x34F1E24
	0x034F1B64 LDR W9, [X28 + 0x4C]
	0x034F1B68 SUB W9, W21, W9
	0x034F1B6C STR W9, [X8 + 0x10C]
	0x034F1B70 LDR X0, [X28 + 0x20]
	0x034F1B74 CBZ X0, 0x34F1E20
	0x034F1B78 LDR X2, [X25]
	0x034F1B7C MOV W1, W21
	0x034F1B80 BL 0x2426B8C
	0x034F1B84 MOV X8, X0
	0x034F1B88 STR X0, [X31 + 0x48]
	0x034F1B8C CBNZ X8, 0x34F1C8C
	0x034F1B90 CBNZ X8, 0x34F1BE0
	0x034F1B94 LDR X0, [X28 + 0x18]
	0x034F1B98 CBZ X0, 0x34F1E1C
	0x034F1B9C ADRP X8, 0xC42000
	0x034F1BA0 LDR X8, [X8 + 0x728]
	0x034F1BA4 LDR X1, [X8]
	0x034F1BA8 BL 0x2426924
	0x034F1BAC CMP W0, 0x1
	0x034F1BB0 B.LT 0x34F1BE0
	0x034F1BB4 LDR X0, [X28 + 0x18]
	0x034F1BB8 CBZ X0, 0x34F1E28
	0x034F1BBC ADRP X9, 0xC42000
	0x034F1BC0 LDR W8, [X28 + 0x48]
	0x034F1BC4 LDR X9, [X9 + 0x6F8]
	0x034F1BC8 ADD W1, W8, 0x1
	0x034F1BCC LDR X3, [X9]
	0x034F1BD0 ADD X2, X31, 0x48
	0x034F1BD4 BL 0x2426B20
	0x034F1BD8 LDR X8, [X31 + 0x48]
	0x034F1BDC CBNZ X8, 0x34F1CC4
	0x034F1BE0 LDR X8, [X19 + 0x188]
	0x034F1BE4 ADD W22, W22, 0x1
	0x034F1BE8 CBNZ X8, 0x34F1964
	0x034F1BEC B 0x34F1DFC
	0x034F1BF0 BL 0x1C16F20
	0x034F1BF4 B 0x34F1E4C
	0x034F1BF8 BL 0x1C16F20
	0x034F1BFC B 0x34F1E4C
	0x034F1C00 BL 0x1C16F20
	0x034F1C04 B 0x34F1E4C
	0x034F1C08 BL 0x1C16F20
	0x034F1C0C B 0x34F1E4C
	0x034F1C10 B 0x34F1C2C
	0x034F1C14 B 0x34F1C2C
	0x034F1C18 B 0x34F1C2C
	0x034F1C1C B 0x34F1C2C
	0x034F1C20 B 0x34F1C2C
	0x034F1C24 B 0x34F1C2C
	0x034F1C28 B 0x34F1C2C
	0x034F1C2C CMP W1, 0x1
	0x034F1C30 B.NE 0x34F1DC8
	0x034F1C34 BL 0x3EB1AD0
	0x034F1C38 LDR X22, [X0]
	0x034F1C3C BL 0x3EB1AE0
	0x034F1C40 MOV W23, W31
	0x034F1C44 B 0x34F1AA4
	0x034F1C48 LDP X20, X19, [X31 + 0xA0]
	0x034F1C4C LDP X22, X21, [X31 + 0x90]
	0x034F1C50 LDP X24, X23, [X31 + 0x80]
	0x034F1C54 LDP X26, X25, [X31 + 0x70]
	0x034F1C58 LDP X28, X27, [X31 + 0x60]
	0x034F1C5C LDP X29, X30, [X31 + 0x50]
	0x034F1C60 AND W0, W8, 0x1
	0x034F1C64 ADD X31, X31, 0xB0
	0x034F1C68 RET
	0x034F1C6C ADRP X9, 0xC42000
	0x034F1C70 LDR X9, [X9 + 0x898]
	0x034F1C74 LDR X1, [X9]
	0x034F1C78 MOV X0, X8
	0x034F1C7C BL 0x24F18D4
	0x034F1C80 MOV X22, X31
	0x034F1C84 STR X0, [X31 + 0x48]
	0x034F1C88 B 0x34F1D2C
	0x034F1C8C LDR X0, [X28 + 0x20]
	0x034F1C90 CBZ X0, 0x34F1E2C
	0x034F1C94 LDR W1, [X8 + 0x18]
	0x034F1C98 LDR X2, [X26]
	0x034F1C9C BL 0x2427018
	0x034F1CA0 LDR X8, [X31 + 0x48]
	0x034F1CA4 CBZ X8, 0x34F1E30
	0x034F1CA8 LDR W8, [X8 + 0x18]
	0x034F1CAC MOV X22, X31
	0x034F1CB0 MOVZ W23, 0x24
	0x034F1CB4 STR W8, [X28 + 0x4C]
	0x034F1CB8 B 0x34F1D30
	0x034F1CBC MOV X22, X31
	0x034F1CC0 B 0x34F1D30
	0x034F1CC4 LDRB W9, [X8 + 0x11]
	0x034F1CC8 CMP W9, 0x8
	0x034F1CCC B.NE 0x34F1CE8
	0x034F1CD0 LDR W9, [X8 + 0x38]
	0x034F1CD4 CMP W9, 0x1
	0x034F1CD8 B.LT 0x34F1D04
	0x034F1CDC MOV X22, X31
	0x034F1CE0 STR X31, [X31 + 0x48]
	0x034F1CE4 B 0x34F1D2C
	0x034F1CE8 LDR W1, [X8 + 0x14]
	0x034F1CEC LDR X0, [X28 + 0x18]
	0x034F1CF0 STR W1, [X28 + 0x48]
	0x034F1CF4 CBZ X0, 0x34F1E34
	0x034F1CF8 LDR X2, [X26]
	0x034F1CFC BL 0x2427018
	0x034F1D00 B 0x34F1D28
	0x034F1D04 LDR W1, [X8 + 0x14]
	0x034F1D08 LDR W8, [X8 + 0x28]
	0x034F1D0C LDR X0, [X28 + 0x18]
	0x034F1D10 ADD W8, W1, W8
	0x034F1D14 SUB W8, W8, 0x1
	0x034F1D18 STR W8, [X28 + 0x48]
	0x034F1D1C CBZ X0, 0x34F1E38
	0x034F1D20 LDR X2, [X26]
	0x034F1D24 BL 0x2427018
	0x034F1D28 MOV X22, X31
	0x034F1D2C MOVZ W23, 0x24
	0x034F1D30 LDRB W8, [X31 + 0x3C]
	0x034F1D34 CBZ W8, 0x34F1D44
	0x034F1D38 LDR X0, [X31 + 0x8]
	0x034F1D3C MOV X1, X31
	0x034F1D40 BL 0x33E14E4
	0x034F1D44 CBNZ X22, 0x34F1DBC
	0x034F1D48 CMP W23, 0x24
	0x034F1D4C B.EQ 0x34F1D54
	0x034F1D50 CBNZ W23, 0x34F1C48
	0x034F1D54 LDR X8, [X31 + 0x48]
	0x034F1D58 CBZ X8, 0x34F1C48
	0x034F1D5C LDR X1, [X8 + 0x58]
	0x034F1D60 CBZ X1, 0x34F1DA8
	0x034F1D64 LDR W9, [X8 + 0x54]
	0x034F1D68 LDR X10, [X19]
	0x034F1D6C STR X8, [X19 + 0x50]
	0x034F1D70 MOV X0, X19
	0x034F1D74 STR W9, [X19 + 0x48]
	0x034F1D78 LDR X8, [X10 + 0x278]
	0x034F1D7C LDR X2, [X10 + 0x280]
	0x034F1D80 BLR X8
	0x034F1D84 STR X31, [X19 + 0x50]
	0x034F1D88 LDR X0, [X31 + 0x48]
	0x034F1D8C CBZ X0, 0x34F1DC4
	0x034F1D90 BL 0x34F2C44
	0x034F1D94 LDR X0, [X31 + 0x48]
	0x034F1D98 CBZ X0, 0x34F1DC4
	0x034F1D9C BL 0x34F2CA8
	0x034F1DA0 MOVZ W8, 0x1
	0x034F1DA4 B 0x34F1C48
	0x034F1DA8 MOV W8, W31
	0x034F1DAC B 0x34F1C48
	0x034F1DB0 BL 0x1C16F20
	0x034F1DB4 BL 0x1C16F20
	0x034F1DB8 BL 0x1C16F20
	0x034F1DBC MOV X0, X22
	0x034F1DC0 BL 0x1C16F18
	0x034F1DC4 BL 0x1C16F20
	0x034F1DC8 STR X1, [X31 + 0x10]
	0x034F1DCC MOV X21, X0
	0x034F1DD0 MOV X22, X31
	0x034F1DD4 ADRP X8, 0xC42000
	0x034F1DD8 LDR X8, [X8 + 0x870]
	0x034F1DDC LDR X1, [X8]
	0x034F1DE0 ADD X0, X31, 0x28
	0x034F1DE4 BL 0x2EDA830
	0x034F1DE8 LDR X1, [X31 + 0x10]
	0x034F1DEC MOV X0, X21
	0x034F1DF0 CBZ X22, 0x34F1F28
	0x034F1DF4 MOV X0, X22
	0x034F1DF8 BL 0x1C16F18

ISIL:
	001 Subtract X31, X31, 208
	002 Move [X31+144], X30
	003 Move [X31+152], X25
	004 Move [X31+160], X24
	005 Move [X31+168], X23
	006 Move [X31+176], X22
	007 Move [X31+184], X21
	008 Move [X31+192], X20
	009 Move [X31+200], X19
	010 Move X19, 0xEEF000
	011 Move W8, [X19+2644]
	012 Move W21, W1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {47}
	018 Move X0, 0xC43000
	019 Move X0, [X0+2040]
	020 Call 0x1C17CF4
	021 Move X0, 0xC43000
	022 Move X0, [X0+2048]
	023 Call 0x1C17CF4
	024 Move X0, 0xC43000
	025 Move X0, [X0+2056]
	026 Call 0x1C17CF4
	027 Move X0, 0xC43000
	028 Move X0, [X0+2000]
	029 Call 0x1C17CF4
	030 Move X0, 0xC43000
	031 Move X0, [X0+2064]
	032 Call 0x1C17CF4
	033 Move X0, 0xC43000
	034 Move X0, [X0+2072]
	035 Call 0x1C17CF4
	036 Move X0, 0xC2F000
	037 Move X0, [X0+464]
	038 Call 0x1C17CF4
	039 Move X0, 0xC2F000
	040 Move X0, [X0+472]
	041 Call 0x1C17CF4
	042 Move X0, 0xC43000
	043 Move X0, [X0+2080]
	044 Call 0x1C17CF4
	045 Move W8, 1
	046 Move [X19+2644], W8
	047 NotImplemented "Instruction MOVI not yet implemented."
	048 Move [X31+136], W31
	049 Move [X31+128], X31
	050 Move [X31+92], W31
	051 Move [X31+80], X31
	052 Move [X31+96], V0
	053 Move [X31+104], V0
	054 Move [X31+48], V0
	055 Move [X31+56], V0
	056 Move X19, [X20+64]
	057 Move [X31+140], W31
	058 Add X1, X31, 140
	059 Move X0, X19
	060 Move X2, X31
	061 Call Monitor.Enter, X0, X1
	062 Move W8, [X20+16]
	063 And W25, W21, 1
	064 NotImplemented "Instruction CMP not yet implemented."
	065 Move X20, X31
	066 Move TEMP, X21
	067 And TEMP, TEMP, 1
	068 Compare TEMP, 1
	069 JumpIfNotEqual {120}
	070 Move X8, [X20+56]
	071 Move [X20+16], W25
	072 Compare X8, 0
	073 JumpIfNotEqual {114}
	074 Move X8, 0xC2F000
	075 Move X22, [X20+48]
	076 Move X8, [X8+464]
	077 Move X0, [X8]
	078 Call 0x1C17F10
	079 Move X8, 0xC43000
	080 Move X8, [X8+2072]
	081 Move X21, X0
	082 Move X2, [X8]
	083 Move X1, X22
	084 Move X3, X31
	085 Call ThreadStart..ctor, X0, X1, X2
	086 Move X8, 0xC2F000
	087 Move X8, [X8+472]
	088 Move X0, [X8]
	089 Call 0x1C17F10
	090 Move X22, X0
	091 Move X1, X21
	092 Move X2, X31
	093 Call Thread..ctor, X0, X1
	094 Move [X20+56], X22
	095 Compare X22, 0
	096 JumpIfEqual {354}
	097 Move W1, 1
	098 Move X0, X22
	099 Move X2, X31
	100 Call Thread.set_IsBackground, X0, X1
	101 Move X0, [X20+56]
	102 Compare X0, 0
	103 JumpIfEqual {355}
	104 Move X8, 0xC43000
	105 Move X8, [X8+2080]
	106 Move X1, [X8]
	107 Move X2, X31
	108 Call Thread.set_Name, X0, X1
	109 Move X0, [X20+56]
	110 Compare X0, 0
	111 JumpIfEqual {356}
	112 Move X1, X31
	113 Call Thread.Start, X0
	114 Move X0, [X20+64]
	115 Compare X0, 0
	116 JumpIfEqual {337}
	117 Move X1, X31
	118 Call EventWaitHandle.Set, X0
	119 Move X20, X31
	120 Move X8, [X20+48]
	121 Compare X8, 0
	122 JumpIfEqual {334}
	123 Move X23, [X8+264]
	124 Move [X31+136], W31
	125 Add X1, X31, 136
	126 Move X0, X23
	127 Move X2, X31
	128 Call Monitor.Enter, X0, X1
	129 Move X8, [X20+48]
	130 Compare X8, 0
	131 JumpIfEqual {335}
	132 Move X0, [X8+264]
	133 Compare X0, 0
	134 JumpIfEqual {336}
	135 Move X8, 0xC43000
	136 Move X8, [X8+2064]
	137 Move X1, [X8]
	138 Add X8, X31, 8
	139 Call LinkedList`1<Object>.GetEnumerator, X0
	140 NotImplemented "Instruction LDUR not yet implemented."
	141 NotImplemented "Instruction LDUR not yet implemented."
	142 Move X8, [X31+40]
	143 Move X21, 0xC43000
	144 Move [X31+96], V0
	145 Move [X31+104], V1
	146 Move [X31+128], X8
	147 Move X21, [X21+2048]
	148 Move X1, [X21]
	149 Add X0, X31, 96
	150 Call Enumerator<Object>.MoveNext, X0
	151 Move TEMP, X0
	152 And TEMP, TEMP, 1
	153 Compare TEMP, 1
	154 JumpIfNotEqual {175}
	155 Move X8, [X20+48]
	156 Compare X8, 0
	157 JumpIfEqual {326}
	158 Move X9, [X8+40]
	159 Compare X9, 0
	160 JumpIfEqual {148}
	161 Move W9, [X9+28]
	162 NotImplemented "Instruction CMP not yet implemented."
	163 Move X9, [X31+120]
	164 Compare X9, 0
	165 JumpIfEqual {329}
	166 Move X1, [X9+32]
	167 Compare X1, 0
	168 JumpIfEqual {328}
	169 Move X9, [X8]
	170 Move W2, [X1+24]
	171 Move X10, [X9+600]
	172 Move X3, [X9+608]
	173 Move X0, X8
	174 NotImplemented "Instruction BLR not yet implemented."
	175 Move X21, X31
	176 Move W22, 10
	177 Move X8, 0xC43000
	178 Move X8, [X8+2040]
	179 Move X1, [X8]
	180 Add X0, X31, 96
	181 Call Enumerator<Object>.Dispose, X0
	182 Compare X21, 0
	183 JumpIfNotEqual {340}
	184 NotImplemented "Instruction CMP not yet implemented."
	185 Compare W22, 0
	186 JumpIfNotEqual {199}
	187 Move X8, [X20+48]
	188 Compare X8, 0
	189 JumpIfEqual {345}
	190 Move X0, [X8+264]
	191 Compare X0, 0
	192 JumpIfEqual {346}
	193 Move X8, 0xC43000
	194 Move X8, [X8+2000]
	195 Move X1, [X8]
	196 Call LinkedList`1<Object>.Clear, X0
	197 Move X21, X31
	198 Move W22, 11
	199 Move X21, X31
	200 Move W8, [X31+136]
	201 Compare W8, 0
	202 JumpIfEqual {206}
	203 Move X0, X23
	204 Move X1, X31
	205 Call Monitor.Exit, X0
	206 Compare X21, 0
	207 JumpIfNotEqual {338}
	208 NotImplemented "Instruction CMP not yet implemented."
	209 Compare W22, 0
	210 JumpIfNotEqual {65}
	211 Move X8, [X20+48]
	212 Compare X8, 0
	213 JumpIfEqual {342}
	214 Move X23, [X8+256]
	215 Move [X31+92], W31
	216 Add X1, X31, 92
	217 Move X0, X23
	218 Move X2, X31
	219 Call Monitor.Enter, X0, X1
	220 Move X8, [X20+48]
	221 Compare X8, 0
	222 JumpIfEqual {343}
	223 Move X0, [X8+256]
	224 Compare X0, 0
	225 JumpIfEqual {344}
	226 Move X8, 0xC43000
	227 Move X8, [X8+2064]
	228 Move X1, [X8]
	229 Add X8, X31, 8
	230 Call LinkedList`1<Object>.GetEnumerator, X0
	231 NotImplemented "Instruction LDUR not yet implemented."
	232 NotImplemented "Instruction LDUR not yet implemented."
	233 Move X8, [X31+40]
	234 Move X21, 0xC43000
	235 Move [X31+48], V0
	236 Move [X31+56], V1
	237 Move [X31+80], X8
	238 Move X21, [X21+2048]
	239 Move X1, [X21]
	240 Add X0, X31, 48
	241 Call Enumerator<Object>.MoveNext, X0
	242 Move TEMP, X0
	243 And TEMP, TEMP, 1
	244 Compare TEMP, 1
	245 JumpIfNotEqual {265}
	246 Move X8, [X20+48]
	247 Compare X8, 0
	248 JumpIfEqual {327}
	249 Move X0, [X8+40]
	250 Compare X0, 0
	251 JumpIfEqual {239}
	252 Move W8, [X0+28]
	253 NotImplemented "Instruction CMP not yet implemented."
	254 Move X8, [X31+72]
	255 Compare X8, 0
	256 JumpIfEqual {331}
	257 Move X1, [X8+32]
	258 Compare X1, 0
	259 JumpIfEqual {330}
	260 Move X8, [X0]
	261 Move W2, [X1+24]
	262 Move X9, [X8+408]
	263 Move X3, [X8+416]
	264 NotImplemented "Instruction BLR not yet implemented."
	265 Move X21, X31
	266 Move W22, 17
	267 Move X8, 0xC43000
	268 Move X8, [X8+2040]
	269 Move X1, [X8]
	270 Add X0, X31, 48
	271 Call Enumerator<Object>.Dispose, X0
	272 Compare X21, 0
	273 JumpIfNotEqual {349}
	274 NotImplemented "Instruction CMP not yet implemented."
	275 Compare W22, 0
	276 JumpIfNotEqual {289}
	277 Move X8, [X20+48]
	278 Compare X8, 0
	279 JumpIfEqual {352}
	280 Move X0, [X8+256]
	281 Compare X0, 0
	282 JumpIfEqual {353}
	283 Move X8, 0xC43000
	284 Move X8, [X8+2000]
	285 Move X1, [X8]
	286 Call LinkedList`1<Object>.Clear, X0
	287 Move X21, X31
	288 Move W22, 18
	289 Move X21, X31
	290 Move W8, [X31+92]
	291 Compare W8, 0
	292 JumpIfEqual {296}
	293 Move X0, X23
	294 Move X1, X31
	295 Call Monitor.Exit, X0
	296 Compare X21, 0
	297 JumpIfNotEqual {347}
	298 Compare W22, 0
	299 JumpIfEqual {301}
	300 NotImplemented "Instruction CMP not yet implemented."
	301 Move X0, [X20+64]
	302 Move [X20+16], W25
	303 Compare X0, 0
	304 JumpIfEqual {351}
	305 Move X1, X31
	306 Call EventWaitHandle.Reset, X0
	307 Move X20, X31
	308 Move W8, [X31+140]
	309 Compare W8, 0
	310 JumpIfEqual {314}
	311 Move X0, X19
	312 Move X1, X31
	313 Call Monitor.Exit, X0
	314 Compare X20, 0
	315 JumpIfNotEqual {332}
	316 Move X20, [X31+192]
	317 Move X19, [X31+200]
	318 Move X22, [X31+176]
	319 Move X21, [X31+184]
	320 Move X24, [X31+160]
	321 Move X23, [X31+168]
	322 Move X30, [X31+144]
	323 Move X25, [X31+152]
	324 Add X31, X31, 208
	325 Return 
	326 Call 0x1C17F20
	327 Call 0x1C17F20
	328 Call 0x1C17F20
	329 Call 0x1C17F20
	330 Call 0x1C17F20
	331 Call 0x1C17F20
	332 Move X0, X20
	333 Call 0x1C17F18
	334 Call 0x1C17F20
	335 Call 0x1C17F20
	336 Call 0x1C17F20
	337 Call 0x1C17F20
	338 Move X0, X21
	339 Call 0x1C17F18
	340 Move X0, X21
	341 Call 0x1C17F18
	342 Call 0x1C17F20
	343 Call 0x1C17F20
	344 Call 0x1C17F20
	345 Call 0x1C17F20
	346 Call 0x1C17F20
	347 Move X0, X21
	348 Call 0x1C17F18
	349 Move X0, X21
	350 Call 0x1C17F18
	351 Call 0x1C17F20
	352 Call 0x1C17F20
	353 Call 0x1C17F20
	354 Call 0x1C17F20
	355 Call 0x1C17F20
	356 Call 0x1C17F20
	357 Move X22, X1
	358 Move X24, X0
	359 Move X22, X1
	360 Move X24, X0
	361 Move X22, X1
	362 Move X24, X0
	363 Move X22, X1
	364 Move X24, X0
	365 NotImplemented "Instruction CMP not yet implemented."
	366 Move X0, X24
	367 Call 0x3EB2AD0
	368 Move X21, [X0]
	369 Call 0x3EB2AE0
	370 Move W22, W31
	371 Move X21, X31
	372 Move X8, 0xC43000
	373 Move X8, [X8+2040]
	374 Move X1, [X8]
	375 Add X0, X31, 48
	376 Call Enumerator<Object>.Dispose, X0
	377 Compare X21, 0
	378 JumpIfNotEqual {396}
	379 NotImplemented "Instruction CMP not yet implemented."
	380 Move X0, X24
	381 Call 0x3EB2AD0
	382 Move X21, [X0]
	383 Call 0x3EB2AE0
	384 Move W22, W31
	385 Move X21, X31
	386 Move W8, [X31+92]
	387 Compare W8, 0
	388 JumpIfEqual {392}
	389 Move X0, X23
	390 Move X1, X31
	391 Call Monitor.Exit, X0
	392 Compare X21, 0
	393 JumpIfEqual {433}
	394 Move X0, X21
	395 Call 0x1C17F18
	396 Move X0, X21
	397 Call 0x1C17F18
	398 Move X22, X1
	399 Move X24, X0
	400 Move X22, X1
	401 Move X24, X0
	402 Move X22, X1
	403 Move X24, X0
	404 NotImplemented "Instruction CMP not yet implemented."
	405 Move X0, X24
	406 Call 0x3EB2AD0
	407 Move X21, [X0]
	408 Call 0x3EB2AE0
	409 Move W22, W31
	410 Move X21, X31
	411 Move X8, 0xC43000
	412 Move X8, [X8+2040]
	413 Move X1, [X8]
	414 Add X0, X31, 96
	415 Call Enumerator<Object>.Dispose, X0
	416 Compare X21, 0
	417 JumpIfNotEqual {439}
	418 NotImplemented "Instruction CMP not yet implemented."
	419 Move X0, X24
	420 Call 0x3EB2AD0
	421 Move X21, [X0]
	422 Call 0x3EB2AE0
	423 Move W22, W31
	424 Move X21, X31
	425 Move W8, [X31+136]
	426 Compare W8, 0
	427 JumpIfEqual {431}
	428 Move X0, X23
	429 Move X1, X31
	430 Call Monitor.Exit, X0
	431 Compare X21, 0
	432 JumpIfNotEqual {441}
	433 NotImplemented "Instruction CMP not yet implemented."
	434 Move X0, X24
	435 Call 0x3EB2AD0
	436 Move X20, [X0]
	437 Call 0x3EB2AE0
	438 Move X20, X31
	439 Move X0, X21
	440 Call 0x1C17F18
	441 Move X0, X21
	442 Call 0x1C17F18
	443 Move X22, X1
	444 Move X24, X0
	445 Move X22, X1
	446 Move X24, X0
	447 Move X24, X0
	448 Move W8, [X31+140]
	449 Compare W8, 0
	450 JumpIfEqual {454}
	451 Move X0, X19
	452 Move X1, X31
	453 Call Monitor.Exit, X0
	454 Compare X20, 0
	455 JumpIfNotEqual {458}
	456 Move X0, X24
	457 Call 0x1D2D690
	458 Move X0, X20
	459 Call 0x1C17F18
	460 Call 0x1991590

Method: System.Int32 get_OutgoingLag()

Disassembly:
	0x034FC324 BL 0x321B938
	0x034FC328 ADRP X8, 0xBF7000

ISIL:
	001 Move W0, [X0+20]
	002 Return X0

Method: System.Void set_OutgoingLag(System.Int32 value)

Disassembly:
	0x034FC32C LDR X8, [X8 + 0xA28]
	0x034FC330 MOV X21, X0

ISIL:
	001 Move [X0+20], W1
	002 Return 

Method: System.Int32 get_OutgoingJitter()

Disassembly:
	0x034FC334 LDR X8, [X8]
	0x034FC338 LDR W9, [X8 + 0xE0]

ISIL:
	001 Move W0, [X0+24]
	002 Return X0

Method: System.Void set_OutgoingJitter(System.Int32 value)

Disassembly:
	0x034FC33C CBNZ W9, 0x34FC348
	0x034FC340 MOV X0, X8

ISIL:
	001 Move [X0+24], W1
	002 Return 

Method: System.Int32 get_OutgoingLossPercentage()

Disassembly:
	0x034FC344 BL 0x1C16DFC
	0x034FC348 MOV X0, X21

ISIL:
	001 Move W0, [X0+28]
	002 Return X0

Method: System.Void set_OutgoingLossPercentage(System.Int32 value)

Disassembly:
	0x034FC34C MOV X1, X31
	0x034FC350 BL 0x3C06A04

ISIL:
	001 Move [X0+28], W1
	002 Return 

Method: System.Int32 get_IncomingLag()

Disassembly:
	0x034FC354 LDRB W21, [X31 + 0x1C]
	0x034FC358 LDR X0, [X22]

ISIL:
	001 Move W0, [X0+32]
	002 Return X0

Method: System.Void set_IncomingLag(System.Int32 value)

Disassembly:
	0x034FC35C LDR X20, [X20 + 0x10]
	0x034FC360 ADD X1, X31, 0x8

ISIL:
	001 Move [X0+32], W1
	002 Return 

Method: System.Int32 get_IncomingJitter()

Disassembly:
	0x034FC364 STR X19, [X31 + 0x8]
	0x034FC368 BL 0x1C16E04

ISIL:
	001 Move W0, [X0+36]
	002 Return X0

Method: System.Void set_IncomingJitter(System.Int32 value)

Disassembly:
	0x034FC36C CBZ X20, 0x34FC3A0
	0x034FC370 ADRP X8, 0xC37000

ISIL:
	001 Move [X0+36], W1
	002 Return 

Method: System.Int32 get_IncomingLossPercentage()

Disassembly:
	0x034FC374 LDR X8, [X8 + 0xC38]
	0x034FC378 MOV X2, X0

ISIL:
	001 Move W0, [X0+40]
	002 Return X0

Method: System.Void set_IncomingLossPercentage(System.Int32 value)

Disassembly:
	0x034FC37C MOV X0, X20
	0x034FC380 MOV W1, W21

ISIL:
	001 Move [X0+40], W1
	002 Return 

Method: System.Int32 get_LostPackagesOut()

Disassembly:
	0x034FC384 LDR X3, [X8]
	0x034FC388 BL 0x2425794

ISIL:
	001 Move W0, [X0+72]
	002 Return X0

Method: System.Void set_LostPackagesOut(System.Int32 value)

Disassembly:
	0x034FC38C LDP X20, X19, [X31 + 0x30]
	0x034FC390 LDP X22, X21, [X31 + 0x20]

ISIL:
	001 Move [X0+72], W1
	002 Return 

Method: System.Int32 get_LostPackagesIn()

Disassembly:
	0x034FC394 LDR X30, [X31 + 0x10]
	0x034FC398 ADD X31, X31, 0x40

ISIL:
	001 Move W0, [X0+76]
	002 Return X0

Method: System.Void set_LostPackagesIn(System.Int32 value)

Disassembly:
	0x034FC39C RET
	0x034FC3A0 BL 0x1C16F20

ISIL:
	001 Move [X0+76], W1
	002 Return 

Method: System.String ToString()

Disassembly:
	0x034FC3A4 STR X30, [X31 - 0x30]!
	0x034FC3A8 STP X22, X21, [X31 + 0x10]
	0x034FC3AC STP X20, X19, [X31 + 0x20]
	0x034FC3B0 ADRP X22, 0xEE3000
	0x034FC3B4 LDRB W8, [X22 + 0xA67]
	0x034FC3B8 MOV X19, X2
	0x034FC3BC MOV W21, W1
	0x034FC3C0 MOV X20, X0
	0x034FC3C4 STRB W1, [X31 + 0xC]
	0x034FC3C8 TBNZ X8, 0x0, 0x34FC404
	0x034FC3CC ADRP X0, 0xBF7000
	0x034FC3D0 LDR X0, [X0 + 0xA28]
	0x034FC3D4 BL 0x1C16CF4
	0x034FC3D8 ADRP X0, 0xC37000
	0x034FC3DC LDR X0, [X0 + 0xC50]
	0x034FC3E0 BL 0x1C16CF4
	0x034FC3E4 ADRP X0, 0xC37000
	0x034FC3E8 LDR X0, [X0 + 0xC38]
	0x034FC3EC BL 0x1C16CF4
	0x034FC3F0 ADRP X0, 0xC37000
	0x034FC3F4 LDR X0, [X0 + 0xC58]
	0x034FC3F8 BL 0x1C16CF4
	0x034FC3FC MOVZ W8, 0x1
	0x034FC400 STRB W8, [X22 + 0xA67]
	0x034FC404 LDR X0, [X20 + 0x10]
	0x034FC408 CBZ X0, 0x34FC4A0
	0x034FC40C ADRP X8, 0xC37000
	0x034FC410 LDR X8, [X8 + 0xC50]
	0x034FC414 MOV W1, W21
	0x034FC418 LDR X2, [X8]
	0x034FC41C BL 0x242559C
	0x034FC420 TBZ X0, 0x0, 0x34FC470
	0x034FC424 ADD X0, X31, 0xC
	0x034FC428 MOV X1, X31
	0x034FC42C BL 0x3319BB4
	0x034FC430 ADRP X8, 0xC37000
	0x034FC434 LDR X8, [X8 + 0xC58]
	0x034FC438 MOV X2, X31
	0x034FC43C LDR X1, [X8]
	0x034FC440 BL 0x321B938
	0x034FC444 ADRP X8, 0xBF7000
	0x034FC448 LDR X8, [X8 + 0xA28]
	0x034FC44C MOV X21, X0
	0x034FC450 LDR X8, [X8]
	0x034FC454 LDR W9, [X8 + 0xE0]
	0x034FC458 CBNZ W9, 0x34FC464
	0x034FC45C MOV X0, X8
	0x034FC460 BL 0x1C16DFC
	0x034FC464 MOV X0, X21
	0x034FC468 MOV X1, X31
	0x034FC46C BL 0x3C06A04
	0x034FC470 LDR X0, [X20 + 0x10]
	0x034FC474 CBZ X0, 0x34FC4A0
	0x034FC478 ADRP X8, 0xC37000
	0x034FC47C LDR X8, [X8 + 0xC38]
	0x034FC480 LDRB W1, [X31 + 0xC]
	0x034FC484 MOV X2, X19
	0x034FC488 LDR X3, [X8]
	0x034FC48C BL 0x2425794
	0x034FC490 LDP X20, X19, [X31 + 0x20]
	0x034FC494 LDP X22, X21, [X31 + 0x10]
	0x034FC498 LDR X30, [X31], #0x30
	0x034FC49C RET
	0x034FC4A0 BL 0x1C16F20
	0x034FC4A4 STP X30, X21, [X31 - 0x20]!
	0x034FC4A8 STP X20, X19, [X31 + 0x10]
	0x034FC4AC ADRP X21, 0xEE3000
	0x034FC4B0 LDRB W8, [X21 + 0xA68]
	0x034FC4B4 MOV W19, W1
	0x034FC4B8 MOV X20, X0
	0x034FC4BC TBNZ X8, 0x0, 0x34FC4D4
	0x034FC4C0 ADRP X0, 0xC37000
	0x034FC4C4 LDR X0, [X0 + 0xC50]
	0x034FC4C8 BL 0x1C16CF4
	0x034FC4CC MOVZ W8, 0x1
	0x034FC4D0 STRB W8, [X21 + 0xA68]
	0x034FC4D4 LDR X0, [X20 + 0x10]
	0x034FC4D8 CBZ X0, 0x34FC4F8
	0x034FC4DC ADRP X8, 0xC37000
	0x034FC4E0 LDR X8, [X8 + 0xC50]
	0x034FC4E4 MOV W1, W19
	0x034FC4E8 LDP X20, X19, [X31 + 0x10]
	0x034FC4EC LDR X2, [X8]
	0x034FC4F0 LDP X30, X21, [X31], #0x20
	0x034FC4F4 B 0x242559C
	0x034FC4F8 BL 0x1C16F20
	0x034FC4FC SUB X31, X31, 0x30
	0x034FC500 STP X30, X21, [X31 + 0x10]
	0x034FC504 STP X20, X19, [X31 + 0x20]
	0x034FC508 ADRP X21, 0xEE3000
	0x034FC50C LDRB W8, [X21 + 0xA69]
	0x034FC510 MOV W19, W1
	0x034FC514 MOV X20, X0
	0x034FC518 TBNZ X8, 0x0, 0x34FC530
	0x034FC51C ADRP X0, 0xC20000
	0x034FC520 LDR X0, [X0 + 0x210]
	0x034FC524 BL 0x1C16CF4
	0x034FC528 MOVZ W8, 0x1
	0x034FC52C STRB W8, [X21 + 0xA69]
	0x034FC530 STR X31, [X31 + 0x8]
	0x034FC534 LDR X0, [X20 + 0x10]
	0x034FC538 CBZ X0, 0x34FC570
	0x034FC53C ADRP X8, 0xC20000
	0x034FC540 LDR X8, [X8 + 0x210]
	0x034FC544 ADD X2, X31, 0x8
	0x034FC548 MOV W1, W19
	0x034FC54C LDR X3, [X8]
	0x034FC550 BL 0x242565C
	0x034FC554 LDR X8, [X31 + 0x8]
	0x034FC558 LDP X20, X19, [X31 + 0x20]
	0x034FC55C LDP X30, X21, [X31 + 0x10]
	0x034FC560 ANDS W31, W0, 0x1
	0x034FC564 CSEL X0, X8, X31, NE
	0x034FC568 ADD X31, X31, 0x30
	0x034FC56C RET
	0x034FC570 BL 0x1C16F20
	0x034FC574 STR X30, [X31 - 0x30]!
	0x034FC578 STP X22, X21, [X31 + 0x10]
	0x034FC57C STP X20, X19, [X31 + 0x20]
	0x034FC580 ADRP X22, 0xEE3000
	0x034FC584 LDRB W8, [X22 + 0xA6A]
	0x034FC588 MOV X19, X2
	0x034FC58C MOV W20, W1
	0x034FC590 MOV X21, X0
	0x034FC594 TBNZ X8, 0x0, 0x34FC5AC
	0x034FC598 ADRP X0, 0xC20000
	0x034FC59C LDR X0, [X0 + 0x210]
	0x034FC5A0 BL 0x1C16CF4
	0x034FC5A4 MOVZ W8, 0x1
	0x034FC5A8 STRB W8, [X22 + 0xA6A]
	0x034FC5AC LDR X0, [X21 + 0x10]
	0x034FC5B0 CBZ X0, 0x34FC5D8
	0x034FC5B4 ADRP X8, 0xC20000
	0x034FC5B8 LDR X8, [X8 + 0x210]
	0x034FC5BC MOV W1, W20
	0x034FC5C0 MOV X2, X19
	0x034FC5C4 LDP X20, X19, [X31 + 0x20]
	0x034FC5C8 LDR X3, [X8]
	0x034FC5CC LDP X22, X21, [X31 + 0x10]
	0x034FC5D0 LDR X30, [X31], #0x30
	0x034FC5D4 B 0x242565C
	0x034FC5D8 BL 0x1C16F20
	0x034FC5DC STR X30, [X31 - 0x30]!
	0x034FC5E0 STP X22, X21, [X31 + 0x10]
	0x034FC5E4 STP X20, X19, [X31 + 0x20]
	0x034FC5E8 ADRP X22, 0xEE3000
	0x034FC5EC ADRP X21, 0xBFF000
	0x034FC5F0 LDRB W8, [X22 + 0xA6B]
	0x034FC5F4 LDR X21, [X21 + 0xE60]
	0x034FC5F8 MOV W19, W1
	0x034FC5FC MOV X20, X0
	0x034FC600 TBNZ X8, 0x0, 0x34FC624
	0x034FC604 ADRP X0, 0xBFF000
	0x034FC608 LDR X0, [X0 + 0xE60]
	0x034FC60C BL 0x1C16CF4
	0x034FC610 ADRP X0, 0xC37000
	0x034FC614 LDR X0, [X0 + 0xC60]
	0x034FC618 BL 0x1C16CF4
	0x034FC61C MOVZ W8, 0x1
	0x034FC620 STRB W8, [X22 + 0xA6B]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+32], X30
	003 Move [X31+48], X22
	004 Move [X31+56], X21
	005 Move [X31+64], X20
	006 Move [X31+72], X19
	007 Move X20, 0xEE4000
	008 Move X21, 0xBF8000
	009 Move X22, 0xBF8000
	010 Move W8, [X20+2645]
	011 Move X21, [X21+2512]
	012 Move X22, [X22+1880]
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {32}
	018 Move X0, 0xBF8000
	019 Move X0, [X0+2904]
	020 Call 0x1C17CF4
	021 Move X0, 0xBF8000
	022 Move X0, [X0+1880]
	023 Call 0x1C17CF4
	024 Move X0, 0xBF8000
	025 Move X0, [X0+2512]
	026 Call 0x1C17CF4
	027 Move X0, 0xC38000
	028 Move X0, [X0+3080]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X20+2645], W8
	032 Move X0, [X21]
	033 Move W1, 7
	034 Call 0x1C17D6C
	035 Move X20, X0
	036 Move W8, [X19+32]
	037 Move X0, [X22]
	038 Add X1, X31, 44
	039 Move [X31+44], W8
	040 Call 0x1C17E04
	041 Compare X20, 0
	042 JumpIfEqual {177}
	043 Move X21, X0
	044 Compare X0, 0
	045 JumpIfEqual {52}
	046 Move X8, [X20]
	047 Move X0, X21
	048 Move X1, [X8+64]
	049 Call 0x1C17E00
	050 Compare X0, 0
	051 JumpIfEqual {174}
	052 Move W8, [X20+24]
	053 Compare W8, 0
	054 JumpIfEqual {173}
	055 Move [X20+32], X21
	056 Move W8, [X19+20]
	057 Move X0, [X22]
	058 Add X1, X31, 40
	059 Move [X31+40], W8
	060 Call 0x1C17E04
	061 Move X21, X0
	062 Compare X0, 0
	063 JumpIfEqual {70}
	064 Move X8, [X20]
	065 Move X0, X21
	066 Move X1, [X8+64]
	067 Call 0x1C17E00
	068 Compare X0, 0
	069 JumpIfEqual {174}
	070 Move W8, [X20+24]
	071 NotImplemented "Instruction CMP not yet implemented."
	072 Move [X20+40], X21
	073 Move W8, [X19+36]
	074 Move X0, [X22]
	075 Add X1, X31, 28
	076 Move [X31+28], W8
	077 Call 0x1C17E04
	078 Move X21, X0
	079 Compare X0, 0
	080 JumpIfEqual {87}
	081 Move X8, [X20]
	082 Move X0, X21
	083 Move X1, [X8+64]
	084 Call 0x1C17E00
	085 Compare X0, 0
	086 JumpIfEqual {174}
	087 Move W8, [X20+24]
	088 NotImplemented "Instruction CMP not yet implemented."
	089 Move [X20+48], X21
	090 Move W8, [X19+24]
	091 Move X0, [X22]
	092 Add X1, X31, 24
	093 Move [X31+24], W8
	094 Call 0x1C17E04
	095 Move X21, X0
	096 Compare X0, 0
	097 JumpIfEqual {104}
	098 Move X8, [X20]
	099 Move X0, X21
	100 Move X1, [X8+64]
	101 Call 0x1C17E00
	102 Compare X0, 0
	103 JumpIfEqual {174}
	104 Move W8, [X20+24]
	105 NotImplemented "Instruction CMP not yet implemented."
	106 Move [X20+56], X21
	107 Move W8, [X19+40]
	108 Move X0, [X22]
	109 Add X1, X31, 20
	110 Move [X31+20], W8
	111 Call 0x1C17E04
	112 Move X21, X0
	113 Compare X0, 0
	114 JumpIfEqual {121}
	115 Move X8, [X20]
	116 Move X0, X21
	117 Move X1, [X8+64]
	118 Call 0x1C17E00
	119 Compare X0, 0
	120 JumpIfEqual {174}
	121 Move W8, [X20+24]
	122 NotImplemented "Instruction CMP not yet implemented."
	123 Move [X20+64], X21
	124 Move W8, [X19+28]
	125 Move X0, [X22]
	126 Add X1, X31, 16
	127 Move [X31+16], W8
	128 Call 0x1C17E04
	129 Move X21, X0
	130 Compare X0, 0
	131 JumpIfEqual {138}
	132 Move X8, [X20]
	133 Move X0, X21
	134 Move X1, [X8+64]
	135 Call 0x1C17E00
	136 Compare X0, 0
	137 JumpIfEqual {174}
	138 Move W8, [X20+24]
	139 NotImplemented "Instruction CMP not yet implemented."
	140 Move X8, 0xBF8000
	141 Move X8, [X8+2904]
	142 Move [X20+72], X21
	143 Move W9, [X19+16]
	144 Add X1, X31, 12
	145 Move X0, [X8]
	146 Move [X31+12], W9
	147 Call 0x1C17E04
	148 Move X19, X0
	149 Compare X0, 0
	150 JumpIfEqual {157}
	151 Move X8, [X20]
	152 Move X0, X19
	153 Move X1, [X8+64]
	154 Call 0x1C17E00
	155 Compare X0, 0
	156 JumpIfEqual {174}
	157 Move W8, [X20+24]
	158 NotImplemented "Instruction CMP not yet implemented."
	159 Move X8, 0xC38000
	160 Move X8, [X8+3080]
	161 Move [X20+80], X19
	162 Move X1, X20
	163 Move X2, X31
	164 Move X0, [X8]
	165 Call String.Format, X0, X1
	166 Move X20, [X31+64]
	167 Move X19, [X31+72]
	168 Move X22, [X31+48]
	169 Move X21, [X31+56]
	170 Move X30, [X31+32]
	171 Add X31, X31, 80
	172 Return X0
	173 Call 0x1C17F28
	174 Call 0x1C17F44
	175 Move X1, X31
	176 Call 0x1C17DEC
	177 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x034FC624 LDR X0, [X21]
	0x034FC628 LDR X20, [X20 + 0x10]
	0x034FC62C LDR W8, [X0 + 0xE0]
	0x034FC630 CBNZ W8, 0x34FC638
	0x034FC634 BL 0x1C16DFC
	0x034FC638 AND W1, W19, 0x1
	0x034FC63C MOV X0, X20
	0x034FC640 MOV X2, X31
	0x034FC644 BL 0x3521028
	0x034FC648 MOV X1, X0
	0x034FC64C TBZ X19, 0x0, 0x34FC670
	0x034FC650 ADRP X8, 0xC37000
	0x034FC654 LDR X8, [X8 + 0xC60]
	0x034FC658 LDP X20, X19, [X31 + 0x20]
	0x034FC65C LDP X22, X21, [X31 + 0x10]
	0x034FC660 MOV X2, X31
	0x034FC664 LDR X0, [X8]
	0x034FC668 LDR X30, [X31], #0x30
	0x034FC66C B 0x321EFD0
	0x034FC670 LDP X20, X19, [X31 + 0x20]
	0x034FC674 LDP X22, X21, [X31 + 0x10]
	0x034FC678 MOV X0, X1
	0x034FC67C LDR X30, [X31], #0x30
	0x034FC680 RET
	0x034FC684 STR X30, [X31 - 0x20]!
	0x034FC688 STP X20, X19, [X31 + 0x10]
	0x034FC68C ADRP X19, 0xEE3000
	0x034FC690 ADRP X20, 0xC37000
	0x034FC694 LDRB W8, [X19 + 0xA6C]
	0x034FC698 LDR X20, [X20 + 0xC68]
	0x034FC69C TBNZ X8, 0x0, 0x34FC6B4
	0x034FC6A0 ADRP X0, 0xC37000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xEE4000
	006 Move X20, 0xC29000
	007 Move W8, [X21+2646]
	008 Move X20, [X20+1992]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xC29000
	015 Move X0, [X0+1992]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+2646], W8
	019 Move X8, -44109824
	020 Move X9, -44097536
	021 Move V0, [X8+149]
	022 Move V1, [X9+1600]
	023 Move [X19+16], W31
	024 Move [X19+20], V0
	025 Move [X19+36], D1
	026 Move X0, [X20]
	027 Call 0x1C17F10
	028 Move W1, W31
	029 Move X2, X31
	030 Move X20, X0
	031 Call ManualResetEvent..ctor, X0, X1
	032 Move [X19+64], X20
	033 Move X0, X19
	034 Move X20, [X31+16]
	035 Move X19, [X31+24]
	036 Move X1, X31
	037 Move X30, [X31+32]
	038 Move X21, [X31+40]
	039 Call Object..ctor, X0
	040 Return 

