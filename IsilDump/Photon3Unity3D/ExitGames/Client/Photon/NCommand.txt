Type: ExitGames.Client.Photon.NCommand

Method: System.Int32 get_SizeOfPayload()

Disassembly:
	0x034F6C84 ADD X0, X31, 0x18
	0x034F6C88 MOV X1, X31
	0x034F6C8C BL 0x337B6E0
	0x034F6C90 MOV X20, X0
	0x034F6C94 ADD X0, X19, 0x174

ISIL:
	001 Move X0, [X0+88]
	002 Compare X0, 0
	003 JumpIfEqual {7}
	004 Move X1, X31
	005 Call StreamBuffer.get_Length, X0
	006 Return X0
	007 Return X0

Method: System.Boolean get_IsFlaggedUnsequenced()

Disassembly:
	0x034F653C MOV X1, X21
	0x034F6540 BL 0x2EECFD4
	0x034F6544 B 0x34F65BC

ISIL:
	001 Move W8, [X0+16]
	002 Move W0, W8
	003 ShiftRight W0, 1
	004 And W0, W0, 1
	005 Return X0

Method: System.Boolean get_IsFlaggedReliable()

Disassembly:
	0x034F658C MOV X0, X8
	0x034F6590 MOV X1, X21
	0x034F6594 BL 0x2EECFD4

ISIL:
	001 Move W8, [X0+16]
	002 And W0, W8, 1
	003 Return X0

Method: System.Void CreateAck(System.Byte[] buffer, System.Int32 offset, ExitGames.Client.Photon.NCommand commandToAck, System.Int32 sentTime)

Disassembly:
	0x034F77DC LDR X20, [X0]
	0x034F77E0 BL 0x3EB1AE0
	0x034F77E4 B 0x34F76FC
	0x034F77E8 MOV X20, X31
	0x034F77EC B 0x34F7808
	0x034F77F0 MOV X0, X24
	0x034F77F4 BL 0x1C16F18
	0x034F77F8 MOV X25, X1
	0x034F77FC MOV X26, X0
	0x034F7800 B 0x34F77B8
	0x034F7804 MOV X26, X0
	0x034F7808 LDRB W8, [X31 + 0x4C]
	0x034F780C CBZ W8, 0x34F781C
	0x034F7810 MOV X0, X19
	0x034F7814 MOV X1, X31
	0x034F7818 BL 0x33E14E4
	0x034F781C CBNZ X20, 0x34F7828
	0x034F7820 MOV X0, X26
	0x034F7824 BL 0x1D2C690
	0x034F7828 MOV X0, X20
	0x034F782C BL 0x1C16F18
	0x034F7830 BL 0x1990590
	0x034F7834 TBNZ X1, 0x1F, 0x34F78A4
	0x034F7838 LDP W9, W10, [X0 + 0x74]
	0x034F783C SUBS W8, W1, W9
	0x034F7840 ADD W11, W8, 0x7
	0x034F7844 CMP W8, 0x0
	0x034F7848 CSEL W8, W11, W8, LT
	0x034F784C ADD W8, W9, W8, 0x3, ASR
	0x034F7850 SUB W11, W1, W8
	0x034F7854 ADD W12, W11, 0x3
	0x034F7858 CMP W11, 0x0
	0x034F785C CSEL W11, W12, W11, LT
	0x034F7860 CMP W1, W9
	0x034F7864 LDR W9, [X0 + 0x80]
	0x034F7868 SBFM W11, W11, 0x2, 0x1F
	0x034F786C ADD W12, W10, 0x3
	0x034F7870 CSNEG W11, W11, W11, GE
	0x034F7874 CMP W10, 0x0
	0x034F7878 CSEL W12, W12, W10, LT
	0x034F787C CMP W8, W9
	0x034F7880 SUB W9, W10, W12, 0x2, ASR
	0x034F7884 ADD W9, W11, W9
	0x034F7888 STP W8, W9, [X0 + 0x74]
	0x034F788C B.GE 0x34F7894
	0x034F7890 STR W8, [X0 + 0x80]
	0x034F7894 LDR W8, [X0 + 0x84]
	0x034F7898 CMP W9, W8
	0x034F789C B.LE 0x34F78A4
	0x034F78A0 STR W9, [X0 + 0x84]
	0x034F78A4 RET
	0x034F78A8 SUB X31, X31, 0x30
	0x034F78AC STP X30, X21, [X31 + 0x10]
	0x034F78B0 STP X20, X19, [X31 + 0x20]
	0x034F78B4 ADRP X19, 0xEE8000
	0x034F78B8 LDRB W8, [X19 + 0xA7E]
	0x034F78BC MOV X20, X1
	0x034F78C0 MOV X21, X0
	0x034F78C4 TBNZ X8, 0x0, 0x34F78DC
	0x034F78C8 ADRP X0, 0xC3C000
	0x034F78CC LDR X0, [X0 + 0x838]
	0x034F78D0 BL 0x1C16CF4
	0x034F78D4 MOVZ W8, 0x1
	0x034F78D8 STRB W8, [X19 + 0xA7E]
	0x034F78DC LDR X19, [X21 + 0x60]
	0x034F78E0 STRB W31, [X31 + 0xC]
	0x034F78E4 ADD X1, X31, 0xC
	0x034F78E8 MOV X0, X19
	0x034F78EC MOV X2, X31
	0x034F78F0 BL 0x33DE64C
	0x034F78F4 LDR X0, [X21 + 0x60]
	0x034F78F8 CBZ X0, 0x34F7944
	0x034F78FC ADRP X8, 0xC3C000
	0x034F7900 LDR X8, [X8 + 0x838]
	0x034F7904 LDR X2, [X8]
	0x034F7908 MOV X1, X20
	0x034F790C BL 0x24F1750
	0x034F7910 MOV X20, X31
	0x034F7914 LDRB W8, [X31 + 0xC]
	0x034F7918 CBZ W8, 0x34F7928
	0x034F791C MOV X0, X19
	0x034F7920 MOV X1, X31

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0xEE9000
	009 Move W8, [X23+2637]
	010 Move W19, W3
	011 Move X21, X2
	012 Move W22, W1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0xC05000
	019 Move X0, [X0+3840]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X23+2637], W8
	023 Compare X21, 0
	024 JumpIfEqual {90}
	025 Move W8, [X21+16]
	026 And W31, W8, 2
	027 Move W8, 16
	028 NotImplemented "Instruction CSINC not yet implemented."
	029 Compare X20, 0
	030 JumpIfEqual {90}
	031 Move W9, [X20+24]
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Add X9, X20, W22
	034 Move [X9+32], W8
	035 Move W9, [X20+24]
	036 Add W8, W22, 1
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move W9, [X21+18]
	039 Add X8, X20, W8
	040 Move [X8+32], W9
	041 Move W9, [X20+24]
	042 Add W8, W22, 2
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Add X8, X20, W8
	045 Add W9, W22, 4
	046 Move [X8+32], W31
	047 Move [X31+12], W9
	048 Move W9, [X20+24]
	049 Add W8, W22, 3
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Move X9, 0xC05000
	052 Move X9, [X9+3840]
	053 Add X8, X20, W8
	054 Move W10, 4
	055 Move [X8+32], W10
	056 Move X0, [X9]
	057 Move W8, [X0+224]
	058 Compare W8, 0
	059 JumpIfNotEqual {61}
	060 Call 0x1C17DFC
	061 Add X2, X31, 12
	062 Move W0, 20
	063 Move X1, X20
	064 Move X3, X31
	065 Call Protocol.Serialize, X0, X1, X2
	066 Add X2, X31, 12
	067 Move W0, W31
	068 Move X1, X20
	069 Move X3, X31
	070 Call Protocol.Serialize, X0, X1, X2
	071 Move W0, [X21+20]
	072 Add X2, X31, 12
	073 Move X1, X20
	074 Move X3, X31
	075 Call Protocol.Serialize, X0, X1, X2
	076 Add X2, X31, 12
	077 Move W0, W19
	078 Move X1, X20
	079 Move X3, X31
	080 Call Protocol.Serialize, X0, X1, X2
	081 Move X20, [X31+48]
	082 Move X19, [X31+56]
	083 Move X22, [X31+32]
	084 Move X21, [X31+40]
	085 Move X30, [X31+16]
	086 Move X23, [X31+24]
	087 Add X31, X31, 64
	088 Return 
	089 Call 0x1C17F28
	090 Call 0x1C17F20

Method: System.Void .ctor(ExitGames.Client.Photon.EnetPeer peer, System.Byte commandType, ExitGames.Client.Photon.StreamBuffer payload, System.Byte channel)

Disassembly:
	0x034FB9B4 BL 0x1C16F20
	0x034FB9B8 STP X30, X21, [X31 - 0x20]!
	0x034FB9BC STP X20, X19, [X31 + 0x10]
	0x034FB9C0 ADRP X21, 0xEE4000
	0x034FB9C4 LDRB W8, [X21 + 0xA5C]
	0x034FB9C8 MOV W19, W1
	0x034FB9CC MOV X20, X0
	0x034FB9D0 TBNZ X8, 0x0, 0x34FB9F4
	0x034FB9D4 ADRP X0, 0xC21000
	0x034FB9D8 LDR X0, [X0 + 0x208]
	0x034FB9DC BL 0x1C16CF4
	0x034FB9E0 ADRP X0, 0xC21000
	0x034FB9E4 LDR X0, [X0 + 0x218]
	0x034FB9E8 BL 0x1C16CF4
	0x034FB9EC MOVZ W8, 0x1
	0x034FB9F0 STRB W8, [X21 + 0xA5C]
	0x034FB9F4 LDR X0, [X20 + 0x10]
	0x034FB9F8 CBZ X0, 0x34FBA64
	0x034FB9FC ADRP X8, 0xC21000
	0x034FBA00 LDR X8, [X8 + 0x208]
	0x034FBA04 MOV W1, W19

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, X1
	008 Move W8, 4
	009 Move X1, X31
	010 Move W19, W4
	011 Move X20, X3
	012 Move W21, W2
	013 Move X23, X0
	014 Move [X0+32], W8
	015 Call Object..ctor, X0
	016 Move X1, X22
	017 Move W2, W21
	018 Move X3, X20
	019 Move W4, W19
	020 Move X20, [X31+32]
	021 Move X19, [X31+40]
	022 Move X22, [X31+16]
	023 Move X21, [X31+24]
	024 Move X0, X23
	025 Move X30, [X31+48]
	026 Move X23, [X31+56]

Method: System.Void Initialize(ExitGames.Client.Photon.EnetPeer peer, System.Byte commandType, ExitGames.Client.Photon.StreamBuffer payload, System.Byte channel)

Disassembly:
	0x034FBA08 LDR X2, [X8]
	0x034FBA0C BL 0x24256C8
	0x034FBA10 CBZ X0, 0x34FBA34
	0x034FBA14 ADRP X8, 0xC21000
	0x034FBA18 LDR X8, [X8 + 0x218]
	0x034FBA1C LDR X9, [X0]
	0x034FBA20 LDR X8, [X8]
	0x034FBA24 LDRB W11, [X9 + 0x130]
	0x034FBA28 LDRB W10, [X8 + 0x130]
	0x034FBA2C CMP W11, W10
	0x034FBA30 B.CS 0x34FBA3C
	0x034FBA34 MOV X8, X31
	0x034FBA38 B 0x34FBA50
	0x034FBA3C LDR X9, [X9 + 0xC8]
	0x034FBA40 ADD X9, X9, X10, 0x3, LSL
	0x034FBA44 LDUR X9, [X9 - 0x8]
	0x034FBA48 CMP X9, X8
	0x034FBA4C CSEL X8, X0, X31, EQ
	0x034FBA50 LDP X20, X19, [X31 + 0x10]
	0x034FBA54 CMP X8, 0x0
	0x034FBA58 CSEL X0, X0, X8, EQ
	0x034FBA5C LDP X30, X21, [X31], #0x20
	0x034FBA60 RET
	0x034FBA64 BL 0x1C16F20
	0x034FBA68 STR X30, [X31 - 0x30]!
	0x034FBA6C STP X22, X21, [X31 + 0x10]
	0x034FBA70 STP X20, X19, [X31 + 0x20]
	0x034FBA74 ADRP X22, 0xEE4000
	0x034FBA78 LDRB W8, [X22 + 0xA5D]
	0x034FBA7C MOV X19, X2
	0x034FBA80 MOV W20, W1
	0x034FBA84 MOV X21, X0
	0x034FBA88 TBNZ X8, 0x0, 0x34FBAA0
	0x034FBA8C ADRP X0, 0xC38000
	0x034FBA90 LDR X0, [X0 + 0xC38]
	0x034FBA94 BL 0x1C16CF4
	0x034FBA98 MOVZ W8, 0x1
	0x034FBA9C STRB W8, [X22 + 0xA5D]
	0x034FBAA0 LDR X0, [X21 + 0x10]
	0x034FBAA4 CBZ X0, 0x34FBACC
	0x034FBAA8 ADRP X8, 0xC38000
	0x034FBAAC LDR X8, [X8 + 0xC38]
	0x034FBAB0 MOV W1, W20
	0x034FBAB4 MOV X2, X19
	0x034FBAB8 LDP X20, X19, [X31 + 0x20]
	0x034FBABC LDR X3, [X8]
	0x034FBAC0 LDP X22, X21, [X31 + 0x10]
	0x034FBAC4 LDR X30, [X31], #0x30
	0x034FBAC8 B 0x2425794
	0x034FBACC BL 0x1C16F20
	0x034FBAD0 STR X30, [X31 - 0x20]!
	0x034FBAD4 STP X20, X19, [X31 + 0x10]
	0x034FBAD8 ADRP X20, 0xEE4000
	0x034FBADC LDRB W8, [X20 + 0xA5E]
	0x034FBAE0 MOV X19, X0
	0x034FBAE4 TBNZ X8, 0x0, 0x34FBAFC
	0x034FBAE8 ADRP X0, 0xC38000
	0x034FBAEC LDR X0, [X0 + 0xC40]
	0x034FBAF0 BL 0x1C16CF4
	0x034FBAF4 MOVZ W8, 0x1
	0x034FBAF8 STRB W8, [X20 + 0xA5E]
	0x034FBAFC LDR X0, [X19 + 0x10]
	0x034FBB00 CBZ X0, 0x34FBB1C
	0x034FBB04 ADRP X8, 0xC38000
	0x034FBB08 LDR X8, [X8 + 0xC40]
	0x034FBB0C LDP X20, X19, [X31 + 0x10]
	0x034FBB10 LDR X1, [X8]
	0x034FBB14 LDR X30, [X31], #0x20
	0x034FBB18 B 0x2425460
	0x034FBB1C BL 0x1C16F20
	0x034FBB20 STR X30, [X31 - 0x20]!
	0x034FBB24 STP X20, X19, [X31 + 0x10]
	0x034FBB28 ADRP X20, 0xEE4000
	0x034FBB2C LDRB W8, [X20 + 0xA5F]
	0x034FBB30 MOV X19, X0
	0x034FBB34 TBNZ X8, 0x0, 0x34FBB4C
	0x034FBB38 ADRP X0, 0xC38000
	0x034FBB3C LDR X0, [X0 + 0xC48]
	0x034FBB40 BL 0x1C16CF4
	0x034FBB44 MOVZ W8, 0x1
	0x034FBB48 STRB W8, [X20 + 0xA5F]
	0x034FBB4C LDR X0, [X19 + 0x18]
	0x034FBB50 CBZ X0, 0x34FBB7C
	0x034FBB54 MOV X1, X31
	0x034FBB58 BL 0x3525690
	0x034FBB5C LDR X0, [X19 + 0x10]
	0x034FBB60 CBZ X0, 0x34FBB7C
	0x034FBB64 ADRP X8, 0xC38000
	0x034FBB68 LDR X8, [X8 + 0xC48]
	0x034FBB6C LDP X20, X19, [X31 + 0x10]
	0x034FBB70 LDR X1, [X8]
	0x034FBB74 LDR X30, [X31], #0x20
	0x034FBB78 B 0x242625C
	0x034FBB7C BL 0x1C16F20
	0x034FBB80 STR X30, [X31 - 0x30]!
	0x034FBB84 STP X22, X21, [X31 + 0x10]
	0x034FBB88 STP X20, X19, [X31 + 0x20]
	0x034FBB8C ADRP X22, 0xEE4000
	0x034FBB90 LDRB W8, [X22 + 0xA60]
	0x034FBB94 MOV X19, X2
	0x034FBB98 MOV W21, W1
	0x034FBB9C MOV X20, X0
	0x034FBBA0 STRB W1, [X31 + 0xC]
	0x034FBBA4 TBNZ X8, 0x0, 0x34FBBE0
	0x034FBBA8 ADRP X0, 0xBF8000
	0x034FBBAC LDR X0, [X0 + 0xA28]
	0x034FBBB0 BL 0x1C16CF4
	0x034FBBB4 ADRP X0, 0xC38000
	0x034FBBB8 LDR X0, [X0 + 0xC50]
	0x034FBBBC BL 0x1C16CF4
	0x034FBBC0 ADRP X0, 0xC38000
	0x034FBBC4 LDR X0, [X0 + 0xC38]
	0x034FBBC8 BL 0x1C16CF4
	0x034FBBCC ADRP X0, 0xC38000
	0x034FBBD0 LDR X0, [X0 + 0xC58]
	0x034FBBD4 BL 0x1C16CF4
	0x034FBBD8 MOVZ W8, 0x1
	0x034FBBDC STRB W8, [X22 + 0xA60]
	0x034FBBE0 LDR X0, [X20 + 0x10]
	0x034FBBE4 CBZ X0, 0x34FBC7C
	0x034FBBE8 ADRP X8, 0xC38000
	0x034FBBEC LDR X8, [X8 + 0xC50]
	0x034FBBF0 MOV W1, W21
	0x034FBBF4 LDR X2, [X8]
	0x034FBBF8 BL 0x242559C
	0x034FBBFC TBZ X0, 0x0, 0x34FBC4C
	0x034FBC00 ADD X0, X31, 0xC
	0x034FBC04 MOV X1, X31
	0x034FBC08 BL 0x3319BB4
	0x034FBC0C ADRP X8, 0xC38000
	0x034FBC10 LDR X8, [X8 + 0xC58]
	0x034FBC14 MOV X2, X31
	0x034FBC18 LDR X1, [X8]
	0x034FBC1C BL 0x321B938
	0x034FBC20 ADRP X8, 0xBF8000
	0x034FBC24 LDR X8, [X8 + 0xA28]
	0x034FBC28 MOV X21, X0
	0x034FBC2C LDR X8, [X8]
	0x034FBC30 LDR W9, [X8 + 0xE0]
	0x034FBC34 CBNZ W9, 0x34FBC40
	0x034FBC38 MOV X0, X8
	0x034FBC3C BL 0x1C16DFC
	0x034FBC40 MOV X0, X21
	0x034FBC44 MOV X1, X31
	0x034FBC48 BL 0x3C06A04
	0x034FBC4C LDR X0, [X20 + 0x10]
	0x034FBC50 CBZ X0, 0x34FBC7C
	0x034FBC54 ADRP X8, 0xC38000
	0x034FBC58 LDR X8, [X8 + 0xC38]
	0x034FBC5C LDRB W1, [X31 + 0xC]
	0x034FBC60 MOV X2, X19
	0x034FBC64 LDR X3, [X8]
	0x034FBC68 BL 0x2425794
	0x034FBC6C LDP X20, X19, [X31 + 0x20]
	0x034FBC70 LDP X22, X21, [X31 + 0x10]
	0x034FBC74 LDR X30, [X31], #0x30
	0x034FBC78 RET
	0x034FBC7C BL 0x1C16F20
	0x034FBC80 STR X30, [X31 - 0x30]!
	0x034FBC84 STP X22, X21, [X31 + 0x10]
	0x034FBC88 STP X20, X19, [X31 + 0x20]
	0x034FBC8C ADRP X22, 0xEE4000
	0x034FBC90 LDRB W8, [X22 + 0xA61]
	0x034FBC94 MOV X19, X2
	0x034FBC98 MOV W21, W1
	0x034FBC9C MOV X20, X0
	0x034FBCA0 STRB W1, [X31 + 0xC]
	0x034FBCA4 TBNZ X8, 0x0, 0x34FBCE0
	0x034FBCA8 ADRP X0, 0xBF8000
	0x034FBCAC LDR X0, [X0 + 0xA28]
	0x034FBCB0 BL 0x1C16CF4
	0x034FBCB4 ADRP X0, 0xC38000
	0x034FBCB8 LDR X0, [X0 + 0xC50]
	0x034FBCBC BL 0x1C16CF4
	0x034FBCC0 ADRP X0, 0xC38000
	0x034FBCC4 LDR X0, [X0 + 0xC38]
	0x034FBCC8 BL 0x1C16CF4
	0x034FBCCC ADRP X0, 0xC38000
	0x034FBCD0 LDR X0, [X0 + 0xC58]
	0x034FBCD4 BL 0x1C16CF4
	0x034FBCD8 MOVZ W8, 0x1
	0x034FBCDC STRB W8, [X22 + 0xA61]
	0x034FBCE0 LDR X0, [X20 + 0x10]
	0x034FBCE4 CBZ X0, 0x34FBD7C
	0x034FBCE8 ADRP X8, 0xC38000
	0x034FBCEC LDR X8, [X8 + 0xC50]
	0x034FBCF0 MOV W1, W21
	0x034FBCF4 LDR X2, [X8]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X24, 0xEE5000
	009 Move W8, [X24+2638]
	010 Move W23, W4
	011 Move X21, X3
	012 Move W22, W2
	013 Move X20, X1
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {30}
	019 Move X0, 0xBF9000
	020 Move X0, [X0+1560]
	021 Call 0x1C17CF4
	022 Move X0, 0xC01000
	023 Move X0, [X0+3840]
	024 Call 0x1C17CF4
	025 Move X0, 0xC02000
	026 Move X0, [X0+2984]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X24+2638], W8
	030 Move W8, 1
	031 And W10, W22, 255
	032 Move [X19+16], W8
	033 Subtract W8, W10, 2
	034 Move W9, 12
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Move [X19+17], W22
	037 Move [X19+18], W23
	038 Move [X19+88], X21
	039 Move [X19+84], W9
	040 Move X9, -43401216
	041 Add X9, X9, 2731
	042 NotImplemented "Instruction ADR not yet implemented."
	043 Move W11, [X9]
	044 Add X10, X10, X11
	045 CallNoReturn X10
	046 Move W8, 44
	047 Move [X19+84], W8
	048 Move X8, 0xBF9000
	049 Move X8, [X8+1560]
	050 Move W1, 32
	051 Move X0, [X8]
	052 Call 0x1C17D6C
	053 Compare X0, 0
	054 JumpIfEqual {189}
	055 Move W8, [X0+24]
	056 Move X21, X0
	057 Compare W8, 0
	058 JumpIfEqual {188}
	059 NotImplemented "Instruction CMP not yet implemented."
	060 Move [X21+32], W31
	061 Move W8, 2
	062 Move [X21+33], W31
	063 Move [X31+12], W8
	064 Compare X20, 0
	065 JumpIfEqual {189}
	066 Move X0, [X20+16]
	067 Compare X0, 0
	068 JumpIfEqual {189}
	069 Move X1, X31
	070 Call PhotonPeer.get_MaximumTransferUnit, X0
	071 Move X8, 0xC01000
	072 Move X8, [X8+3840]
	073 Move W22, W0
	074 Move X8, [X8]
	075 Move W9, [X8+224]
	076 Compare W9, 0
	077 JumpIfNotEqual {80}
	078 Move X0, X8
	079 Call 0x1C17DFC
	080 Add X2, X31, 12
	081 Move W0, W22
	082 Move X1, X21
	083 Move X3, X31
	084 Call Protocol.Serialize, X0, X1, X2
	085 Move W8, [X21+24]
	086 NotImplemented "Instruction CMP not yet implemented."
	087 NotImplemented "Instruction CMP not yet implemented."
	088 Move [X21+36], W31
	089 NotImplemented "Instruction CMP not yet implemented."
	090 Move [X21+37], W31
	091 Move W9, 128
	092 NotImplemented "Instruction CMP not yet implemented."
	093 Move [X21+38], W9
	094 Move [X21+39], W31
	095 Move X9, [X20+16]
	096 Compare X9, 0
	097 JumpIfEqual {189}
	098 NotImplemented "Instruction CMP not yet implemented."
	099 Move W9, [X9+106]
	100 NotImplemented "Instruction CMP not yet implemented."
	101 Move [X21+43], W9
	102 NotImplemented "Instruction CMP not yet implemented."
	103 Move [X21+47], W31
	104 NotImplemented "Instruction CMP not yet implemented."
	105 Move [X21+51], W31
	106 Move W9, 19
	107 NotImplemented "Instruction CMP not yet implemented."
	108 Move [X21+54], W9
	109 Move W9, 136
	110 NotImplemented "Instruction CMP not yet implemented."
	111 Move [X21+55], W9
	112 Move W9, 2
	113 NotImplemented "Instruction CMP not yet implemented."
	114 Move [X21+59], W9
	115 Move [X21+63], W9
	116 Move X8, 0xC02000
	117 Move X8, [X8+2984]
	118 Move X0, [X8]
	119 Call 0x1C17F10
	120 Move X1, X21
	121 Move X2, X31
	122 Move X20, X0
	123 Call StreamBuffer..ctor, X0, X1
	124 Move [X19+88], X20
	125 Move W8, 12
	126 Move [X19+84], W8
	127 Compare X20, 0
	128 JumpIfEqual {189}
	129 Move W8, [X20+64]
	130 NotImplemented "Instruction CMP not yet implemented."
	131 Move W9, 2
	132 NotImplemented "Instruction CMP not yet implemented."
	133 Move W8, 4
	134 NotImplemented "Instruction CSEL not yet implemented."
	135 Move [X19+16], W9
	136 Move [X19+32], W8
	137 Compare X21, 0
	138 JumpIfEqual {189}
	139 Move X0, X21
	140 Move X1, X31
	141 Call StreamBuffer.get_Length, X0
	142 Add W8, W0, 12
	143 Compare X21, 0
	144 JumpIfEqual {189}
	145 Move X0, X21
	146 Move X1, X31
	147 Call StreamBuffer.get_Length, X0
	148 Add W8, W0, 16
	149 Move [X19+84], W8
	150 Move [X19+16], W31
	151 Compare X21, 0
	152 JumpIfEqual {189}
	153 Move X0, X21
	154 Move X1, X31
	155 Call StreamBuffer.get_Length, X0
	156 Add W8, W0, 32
	157 Move [X19+84], W8
	158 Compare X21, 0
	159 JumpIfEqual {189}
	160 Move X0, X21
	161 Move X1, X31
	162 Call StreamBuffer.get_Length, X0
	163 Add W8, W0, 16
	164 Move W9, 2
	165 Compare X21, 0
	166 JumpIfEqual {189}
	167 Move X0, X21
	168 Move X1, X31
	169 Call StreamBuffer.get_Length, X0
	170 Add W8, W0, 12
	171 Compare X21, 0
	172 JumpIfEqual {189}
	173 Move X0, X21
	174 Move X1, X31
	175 Call StreamBuffer.get_Length, X0
	176 Add W8, W0, 32
	177 Move W9, 3
	178 Move [X19+84], W8
	179 Move [X19+16], W9
	180 Move X20, [X31+48]
	181 Move X19, [X31+56]
	182 Move X22, [X31+32]
	183 Move X21, [X31+40]
	184 Move X24, [X31+16]
	185 Move X23, [X31+24]
	186 Move X30, [X31+64]
	187 Return 
	188 Call 0x1C17F28
	189 Call 0x1C17F20

Method: System.Void .ctor(ExitGames.Client.Photon.EnetPeer peer, System.Byte[] inBuff, ref System.Int32 readingOffset)

Disassembly:
	0x034FB630 ADRP X20, 0xC29000
	0x034FB634 LDRB W8, [X21 + 0xA56]
	0x034FB638 LDR X20, [X20 + 0x7C8]
	0x034FB63C MOV X19, X0
	0x034FB640 TBNZ X8, 0x0, 0x34FB658
	0x034FB644 ADRP X0, 0xC29000
	0x034FB648 LDR X0, [X0 + 0x7C8]
	0x034FB64C BL 0x1C16CF4
	0x034FB650 MOVZ W8, 0x1
	0x034FB654 STRB W8, [X21 + 0xA56]
	0x034FB658 ADRP X8, 0xFFFFFFFFFD5EF000
	0x034FB65C ADRP X9, 0xFFFFFFFFFD5F2000
	0x034FB660 LDR V0, [X8 + 0x95]
	0x034FB664 LDR V1, [X9 + 0x640]
	0x034FB668 STRB W31, [X19 + 0x10]
	0x034FB66C STUR V0, [X19 + 0x14]
	0x034FB670 STUR D1, [X19 + 0x24]
	0x034FB674 LDR X0, [X20]
	0x034FB678 BL 0x1C16F10

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, X1
	007 Move W8, 4
	008 Move X1, X31
	009 Move X19, X3
	010 Move X20, X2
	011 Move X22, X0
	012 Move [X0+32], W8
	013 Call Object..ctor, X0
	014 Move X0, X22
	015 Move X1, X21
	016 Move X2, X20
	017 Move X3, X19
	018 Move X20, [X31+32]
	019 Move X19, [X31+40]
	020 Move X22, [X31+16]
	021 Move X21, [X31+24]
	022 Move X30, [X31+48]

Method: System.Void Initialize(ExitGames.Client.Photon.EnetPeer peer, System.Byte[] inBuff, ref System.Int32 readingOffset)

Disassembly:
	0x034FB67C MOV W1, W31
	0x034FB680 MOV X2, X31
	0x034FB684 MOV X20, X0
	0x034FB688 BL 0x33DCD78
	0x034FB68C STR X20, [X19 + 0x40]
	0x034FB690 MOV X0, X19
	0x034FB694 LDP X20, X19, [X31 + 0x10]
	0x034FB698 MOV X1, X31
	0x034FB69C LDP X30, X21, [X31], #0x20
	0x034FB6A0 B 0x33BDD8C
	0x034FB6A4 STP X30, X23, [X31 - 0x30]!
	0x034FB6A8 STP X22, X21, [X31 + 0x10]
	0x034FB6AC STP X20, X19, [X31 + 0x20]
	0x034FB6B0 ADRP X20, 0xEE4000
	0x034FB6B4 ADRP X23, 0xC38000
	0x034FB6B8 ADRP X22, 0xC38000
	0x034FB6BC ADRP X21, 0xC38000
	0x034FB6C0 LDRB W8, [X20 + 0xA57]
	0x034FB6C4 LDR X23, [X23 + 0xC10]
	0x034FB6C8 LDR X22, [X22 + 0xC18]
	0x034FB6CC LDR X21, [X21 + 0xC20]
	0x034FB6D0 MOV X19, X0
	0x034FB6D4 TBNZ X8, 0x0, 0x34FB704
	0x034FB6D8 ADRP X0, 0xC38000
	0x034FB6DC LDR X0, [X0 + 0xC20]
	0x034FB6E0 BL 0x1C16CF4
	0x034FB6E4 ADRP X0, 0xC38000
	0x034FB6E8 LDR X0, [X0 + 0xC18]
	0x034FB6EC BL 0x1C16CF4
	0x034FB6F0 ADRP X0, 0xC38000
	0x034FB6F4 LDR X0, [X0 + 0xC10]
	0x034FB6F8 BL 0x1C16CF4
	0x034FB6FC MOVZ W8, 0x1
	0x034FB700 STRB W8, [X20 + 0xA57]
	0x034FB704 LDR X0, [X23]
	0x034FB708 BL 0x1C16F10
	0x034FB70C MOV X1, X31
	0x034FB710 MOV X20, X0
	0x034FB714 BL 0x3525888
	0x034FB718 MOV X0, X19
	0x034FB71C MOV X1, X31
	0x034FB720 STR X20, [X19 + 0x18]
	0x034FB724 BL 0x33BDD8C
	0x034FB728 LDR X0, [X22]
	0x034FB72C BL 0x1C16F10
	0x034FB730 LDR X2, [X21]
	0x034FB734 MOVZ W1, 0x1D
	0x034FB738 MOV X20, X0
	0x034FB73C BL 0x2425480
	0x034FB740 STR X20, [X19 + 0x10]
	0x034FB744 LDP X20, X19, [X31 + 0x20]
	0x034FB748 LDP X22, X21, [X31 + 0x10]
	0x034FB74C LDP X30, X23, [X31], #0x30
	0x034FB750 RET
	0x034FB754 STR X30, [X31 - 0x40]!
	0x034FB758 STP X24, X23, [X31 + 0x10]
	0x034FB75C STP X22, X21, [X31 + 0x20]
	0x034FB760 STP X20, X19, [X31 + 0x30]
	0x034FB764 ADRP X21, 0xEE4000
	0x034FB768 ADRP X24, 0xC38000
	0x034FB76C ADRP X23, 0xC38000
	0x034FB770 ADRP X22, 0xC38000
	0x034FB774 LDRB W8, [X21 + 0xA58]
	0x034FB778 LDR X24, [X24 + 0xC10]
	0x034FB77C LDR X23, [X23 + 0xC18]
	0x034FB780 LDR X22, [X22 + 0xC20]
	0x034FB784 MOV W20, W1
	0x034FB788 MOV X19, X0
	0x034FB78C TBNZ X8, 0x0, 0x34FB7BC
	0x034FB790 ADRP X0, 0xC38000
	0x034FB794 LDR X0, [X0 + 0xC20]
	0x034FB798 BL 0x1C16CF4
	0x034FB79C ADRP X0, 0xC38000
	0x034FB7A0 LDR X0, [X0 + 0xC18]
	0x034FB7A4 BL 0x1C16CF4
	0x034FB7A8 ADRP X0, 0xC38000
	0x034FB7AC LDR X0, [X0 + 0xC10]
	0x034FB7B0 BL 0x1C16CF4
	0x034FB7B4 MOVZ W8, 0x1
	0x034FB7B8 STRB W8, [X21 + 0xA58]
	0x034FB7BC LDR X0, [X24]
	0x034FB7C0 BL 0x1C16F10
	0x034FB7C4 MOV X1, X31
	0x034FB7C8 MOV X21, X0
	0x034FB7CC BL 0x3525888
	0x034FB7D0 MOV X0, X19
	0x034FB7D4 MOV X1, X31
	0x034FB7D8 STR X21, [X19 + 0x18]
	0x034FB7DC BL 0x33BDD8C
	0x034FB7E0 LDR X0, [X23]
	0x034FB7E4 BL 0x1C16F10
	0x034FB7E8 LDR X2, [X22]
	0x034FB7EC MOV W1, W20
	0x034FB7F0 MOV X21, X0
	0x034FB7F4 BL 0x2425480
	0x034FB7F8 STR X21, [X19 + 0x10]
	0x034FB7FC LDP X20, X19, [X31 + 0x30]
	0x034FB800 LDP X22, X21, [X31 + 0x20]
	0x034FB804 LDP X24, X23, [X31 + 0x10]
	0x034FB808 LDR X30, [X31], #0x40
	0x034FB80C RET
	0x034FB810 STR X30, [X31 - 0x10]!
	0x034FB814 CBZ X0, 0x34FB824
	0x034FB818 LDR X0, [X0 + 0x10]
	0x034FB81C LDR X30, [X31], #0x10
	0x034FB820 RET
	0x034FB824 BL 0x1C16F20
	0x034FB828 STR X30, [X31 - 0x20]!
	0x034FB82C STP X20, X19, [X31 + 0x10]
	0x034FB830 ADRP X20, 0xEE4000
	0x034FB834 LDRB W8, [X20 + 0xA59]
	0x034FB838 MOV X19, X0
	0x034FB83C TBNZ X8, 0x0, 0x34FB854
	0x034FB840 ADRP X0, 0xC38000
	0x034FB844 LDR X0, [X0 + 0xC28]
	0x034FB848 BL 0x1C16CF4
	0x034FB84C MOVZ W8, 0x1
	0x034FB850 STRB W8, [X20 + 0xA59]
	0x034FB854 LDR X19, [X19 + 0x10]
	0x034FB858 CBZ X19, 0x34FB8C4
	0x034FB85C ADRP X10, 0xC38000
	0x034FB860 LDR X8, [X19]
	0x034FB864 LDR X10, [X10 + 0xC28]
	0x034FB868 LDRH W9, [X8 + 0x12E]
	0x034FB86C LDR X1, [X10]
	0x034FB870 CBZ X9, 0x34FB894
	0x034FB874 LDR X10, [X8 + 0xB0]
	0x034FB878 ADD X10, X10, 0x8
	0x034FB87C LDUR X11, [X10 - 0x8]
	0x034FB880 CMP X11, X1
	0x034FB884 B.EQ 0x34FB8A4
	0x034FB888 SUBS X9, X9, 0x1
	0x034FB88C ADD X10, X10, 0x10
	0x034FB890 B.NE 0x34FB87C
	0x034FB894 MOV X0, X19
	0x034FB898 MOV W2, W31
	0x034FB89C BL 0x1C5C788
	0x034FB8A0 B 0x34FB8B0
	0x034FB8A4 LDRSW X9, [X10]
	0x034FB8A8 ADD X8, X8, X9, 0x4, LSL
	0x034FB8AC ADD X0, X8, 0x138
	0x034FB8B0 LDP X2, X1, [X0]
	0x034FB8B4 MOV X0, X19
	0x034FB8B8 LDP X20, X19, [X31 + 0x10]
	0x034FB8BC LDR X30, [X31], #0x20
	0x034FB8C0 BR X2
	0x034FB8C4 BL 0x1C16F20
	0x034FB8C8 STR X30, [X31 - 0x20]!
	0x034FB8CC STP X20, X19, [X31 + 0x10]
	0x034FB8D0 ADRP X20, 0xEE4000
	0x034FB8D4 LDRB W8, [X20 + 0xA5A]
	0x034FB8D8 MOV X19, X0
	0x034FB8DC TBNZ X8, 0x0, 0x34FB8F4
	0x034FB8E0 ADRP X0, 0xC38000
	0x034FB8E4 LDR X0, [X0 + 0xC28]
	0x034FB8E8 BL 0x1C16CF4
	0x034FB8EC MOVZ W8, 0x1
	0x034FB8F0 STRB W8, [X20 + 0xA5A]
	0x034FB8F4 LDR X19, [X19 + 0x10]
	0x034FB8F8 CBZ X19, 0x34FB964
	0x034FB8FC ADRP X10, 0xC38000
	0x034FB900 LDR X8, [X19]
	0x034FB904 LDR X10, [X10 + 0xC28]
	0x034FB908 LDRH W9, [X8 + 0x12E]
	0x034FB90C LDR X1, [X10]
	0x034FB910 CBZ X9, 0x34FB934
	0x034FB914 LDR X10, [X8 + 0xB0]
	0x034FB918 ADD X10, X10, 0x8
	0x034FB91C LDUR X11, [X10 - 0x8]
	0x034FB920 CMP X11, X1
	0x034FB924 B.EQ 0x34FB944
	0x034FB928 SUBS X9, X9, 0x1
	0x034FB92C ADD X10, X10, 0x10
	0x034FB930 B.NE 0x34FB91C
	0x034FB934 MOV X0, X19
	0x034FB938 MOV W2, W31
	0x034FB93C BL 0x1C5C788
	0x034FB940 B 0x34FB950
	0x034FB944 LDRSW X9, [X10]
	0x034FB948 ADD X8, X8, X9, 0x4, LSL
	0x034FB94C ADD X0, X8, 0x138
	0x034FB950 LDP X2, X1, [X0]
	0x034FB954 MOV X0, X19
	0x034FB958 LDP X20, X19, [X31 + 0x10]
	0x034FB95C LDR X30, [X31], #0x20
	0x034FB960 BR X2
	0x034FB964 BL 0x1C16F20
	0x034FB968 STR X30, [X31 - 0x20]!
	0x034FB96C STP X20, X19, [X31 + 0x10]
	0x034FB970 ADRP X20, 0xEE4000
	0x034FB974 LDRB W8, [X20 + 0xA5B]
	0x034FB978 MOV X19, X0
	0x034FB97C TBNZ X8, 0x0, 0x34FB994
	0x034FB980 ADRP X0, 0xC38000
	0x034FB984 LDR X0, [X0 + 0xC30]
	0x034FB988 BL 0x1C16CF4
	0x034FB98C MOVZ W8, 0x1
	0x034FB990 STRB W8, [X20 + 0xA5B]
	0x034FB994 LDR X0, [X19 + 0x10]
	0x034FB998 CBZ X0, 0x34FB9B4
	0x034FB99C ADRP X8, 0xC38000
	0x034FB9A0 LDR X8, [X8 + 0xC30]
	0x034FB9A4 LDP X20, X19, [X31 + 0x10]
	0x034FB9A8 LDR X1, [X8]
	0x034FB9AC LDR X30, [X31], #0x20
	0x034FB9B0 B 0x2425DBC

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0xEE5000
	009 Move W8, [X23+2639]
	010 Move X19, X3
	011 Move X20, X2
	012 Move X22, X1
	013 Move X21, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0xC39000
	019 Move X0, [X0+1912]
	020 Call 0x1C17CF4
	021 Move X0, 0xC01000
	022 Move X0, [X0+3840]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X23+2639], W8
	026 NotImplemented "Instruction STRH not yet implemented."
	027 NotImplemented "Instruction LDRSW not yet implemented."
	028 Add W10, W8, 1
	029 Move [X19], W10
	030 Compare X20, 0
	031 JumpIfEqual {215}
	032 Move W9, [X20+24]
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Add X11, X20, X8
	035 Move W12, [X11+32]
	036 Add W11, W8, 2
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move [X21+17], W12
	039 Move [X19], W11
	040 Add X10, X20, W10
	041 Move W12, [X10+32]
	042 Add W10, W8, 3
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Move [X21+18], W12
	045 Move [X19], W10
	046 Add X11, X20, W11
	047 Move W11, [X11+32]
	048 Add W8, W8, 4
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Move [X21+16], W11
	051 Move [X19], W8
	052 Add X8, X20, W10
	053 Move W8, [X8+32]
	054 Move X24, 0xC01000
	055 Move X24, [X24+3840]
	056 Add X23, X21, 84
	057 Move [X21+32], W8
	058 Move X0, [X24]
	059 Move W8, [X0+224]
	060 Compare W8, 0
	061 JumpIfNotEqual {63}
	062 Call 0x1C17DFC
	063 Move X0, X23
	064 Move X1, X20
	065 Move X2, X19
	066 Move X3, X31
	067 Call Protocol.Deserialize, X0, X1, X2
	068 Add X0, X21, 20
	069 Move X1, X20
	070 Move X2, X19
	071 Move X3, X31
	072 Call Protocol.Deserialize, X0, X1, X2
	073 Compare X22, 0
	074 JumpIfEqual {215}
	075 Move X9, [X22+152]
	076 NotImplemented "Instruction LDRSW not yet implemented."
	077 Add X9, X9, X8
	078 Move [X22+152], X9
	079 Move W9, [X21+17]
	080 Subtract W9, W9, 1
	081 NotImplemented "Instruction CMP not yet implemented."
	082 Move X10, -43401216
	083 Add X10, X10, 2715
	084 NotImplemented "Instruction ADR not yet implemented."
	085 Move W12, [X10]
	086 Add X11, X11, X12
	087 CallNoReturn X11
	088 Move X0, [X24]
	089 Add X22, X21, 76
	090 Move W8, [X0+224]
	091 Compare W8, 0
	092 JumpIfNotEqual {94}
	093 Call 0x1C17DFC
	094 Move X0, X22
	095 Move X1, X20
	096 Move X2, X19
	097 Move X3, X31
	098 Call Protocol.Deserialize, X0, X1, X2
	099 Add X0, X21, 80
	100 Move X1, X20
	101 Move X2, X19
	102 Move X3, X31
	103 Call Protocol.Deserialize, X0, X1, X2
	104 Subtract W22, W8, 12
	105 Compare W22, 0
	106 JumpIfNotEqual {182}
	107 Move X0, [X24]
	108 Add X22, X21, 36
	109 Move W8, [X0+224]
	110 Compare W8, 0
	111 JumpIfNotEqual {113}
	112 Call 0x1C17DFC
	113 Move X0, X22
	114 Move X1, X20
	115 Move X2, X19
	116 Move X3, X31
	117 Call Protocol.Deserialize, X0, X1, X2
	118 Add X0, X21, 40
	119 Move X1, X20
	120 Move X2, X19
	121 Move X3, X31
	122 Call Protocol.Deserialize, X0, X1, X2
	123 Add X0, X21, 44
	124 Move X1, X20
	125 Move X2, X19
	126 Move X3, X31
	127 Call Protocol.Deserialize, X0, X1, X2
	128 Add X0, X21, 48
	129 Move X1, X20
	130 Move X2, X19
	131 Move X3, X31
	132 Call Protocol.Deserialize, X0, X1, X2
	133 Add X0, X21, 52
	134 Move X1, X20
	135 Move X2, X19
	136 Move X3, X31
	137 Call Protocol.Deserialize, X0, X1, X2
	138 Move W8, [X21+84]
	139 Move W9, [X21+40]
	140 Subtract W22, W8, 32
	141 Move [X21+56], W9
	142 Compare W22, 0
	143 JumpIfNotEqual {182}
	144 Move W9, [X19]
	145 Add W8, W8, W9
	146 Subtract W8, W8, 12
	147 Move X0, [X24]
	148 Move W8, [X0+224]
	149 Compare W8, 0
	150 JumpIfNotEqual {152}
	151 Call 0x1C17DFC
	152 Add X0, X31, 12
	153 Move X1, X20
	154 Move X2, X19
	155 Move X3, X31
	156 Call Protocol.Deserialize, X0, X1, X2
	157 Move W8, [X19]
	158 Move W9, 0xFFFE
	159 Add W8, W8, 30
	160 Move [X19], W8
	161 NotImplemented "Instruction LDRH not yet implemented."
	162 NotImplemented "Instruction CMP not yet implemented."
	163 NotImplemented "Instruction LDRH not yet implemented."
	164 NotImplemented "Instruction STRH not yet implemented."
	165 Move X0, [X24]
	166 Add X22, X21, 24
	167 Move X0, [X24]
	168 Add X22, X21, 28
	169 Move W8, [X0+224]
	170 Compare W8, 0
	171 JumpIfNotEqual {173}
	172 Call 0x1C17DFC
	173 Move X0, X22
	174 Move X1, X20
	175 Move X2, X19
	176 Move X3, X31
	177 Call Protocol.Deserialize, X0, X1, X2
	178 Move W8, [X23]
	179 Subtract W22, W8, 16
	180 Compare W22, 0
	181 JumpIfEqual {206}
	182 Move X8, 0xC39000
	183 Move X8, [X8+1912]
	184 Move X0, [X8]
	185 Move W8, [X0+224]
	186 Compare W8, 0
	187 JumpIfNotEqual {189}
	188 Call 0x1C17DFC
	189 Call PeerBase.MessageBufferPoolGet
	190 Compare X0, 0
	191 JumpIfEqual {215}
	192 Move W2, [X19]
	193 Move X1, X20
	194 Move W3, W22
	195 Move X4, X31
	196 Move X23, X0
	197 Call StreamBuffer.Write, X0, X1, X2, X3
	198 Move X0, X23
	199 Move W1, W31
	200 Move X2, X31
	201 Move [X21+88], X23
	202 Call StreamBuffer.set_Position, X0, X1
	203 Move W8, [X19]
	204 Add W8, W8, W22
	205 Move [X19], W8
	206 Move X20, [X31+48]
	207 Move X19, [X31+56]
	208 Move X22, [X31+32]
	209 Move X21, [X31+40]
	210 Move X24, [X31+16]
	211 Move X23, [X31+24]
	212 Move X30, [X31+64]
	213 Return 
	214 Call 0x1C17F28
	215 Call 0x1C17F20

Method: System.Void Reset()

Disassembly:
	0x034FBE30 BL 0x321B938
	0x034FBE34 ADRP X8, 0xBF8000
	0x034FBE38 LDR X8, [X8 + 0xA28]
	0x034FBE3C MOV X21, X0
	0x034FBE40 LDR X8, [X8]
	0x034FBE44 LDR W9, [X8 + 0xE0]
	0x034FBE48 CBNZ W9, 0x34FBE54
	0x034FBE4C MOV X0, X8
	0x034FBE50 BL 0x1C16DFC
	0x034FBE54 MOV X0, X21
	0x034FBE58 MOV X1, X31
	0x034FBE5C BL 0x3C0649C
	0x034FBE60 LDR X0, [X22]
	0x034FBE64 LDR W8, [X0 + 0xE0]

ISIL:
	001 Move W8, 4
	002 NotImplemented "Instruction STRH not yet implemented."
	003 Move [X0+18], W31
	004 Move [X0+24], X31
	005 Move [X0+20], W31
	006 Move [X0+36], X31
	007 Move [X0+52], X31
	008 Move [X0+44], X31
	009 Move [X0+57], X31
	010 Move [X0+76], X31
	011 Move [X0+68], X31
	012 Move [X0+32], W8
	013 Move [X0+84], W31
	014 Return 

Method: System.Void SerializeHeader(System.Byte[] buffer, ref System.Int32 bufferIndex)

Disassembly:
	0x034F6A88 LDR W8, [X0 + 0xE0]
	0x034F6A8C CBNZ W8, 0x34F6A94
	0x034F6A90 BL 0x1C16DFC
	0x034F6A94 ADD X0, X31, 0x18
	0x034F6A98 ADD X2, X31, 0x2C
	0x034F6A9C MOV X1, X20
	0x034F6AA0 MOV X3, X31
	0x034F6AA4 BL 0x3506A78
	0x034F6AA8 LDR W8, [X31 + 0x18]
	0x034F6AAC LDR W9, [X19 + 0x174]
	0x034F6AB0 CMP W8, W9
	0x034F6AB4 B.NE 0x34F6C4C
	0x034F6AB8 LDR X8, [X19 + 0x10]
	0x034F6ABC CBZ X8, 0x34F70D8
	0x034F6AC0 LDR X21, [X8 + 0x100]
	0x034F6AC4 CBZ X21, 0x34F70DC
	0x034F6AC8 ADRP X10, 0xC05000
	0x034F6ACC LDR X8, [X21]
	0x034F6AD0 LDR W23, [X31 + 0x2C]
	0x034F6AD4 LDR X10, [X10 + 0xCD8]
	0x034F6AD8 LDRH W9, [X8 + 0x12E]
	0x034F6ADC LDR X1, [X10]
	0x034F6AE0 CBZ X9, 0x34F6B04
	0x034F6AE4 LDR X10, [X8 + 0xB0]
	0x034F6AE8 ADD X10, X10, 0x8
	0x034F6AEC LDUR X11, [X10 - 0x8]
	0x034F6AF0 CMP X11, X1
	0x034F6AF4 B.EQ 0x34F6CDC
	0x034F6AF8 SUBS X9, X9, 0x1
	0x034F6AFC ADD X10, X10, 0x10
	0x034F6B00 B.NE 0x34F6AEC
	0x034F6B04 MOVZ W2, 0x2
	0x034F6B08 MOV X0, X21
	0x034F6B0C BL 0x1C5C788
	0x034F6B10 B 0x34F6CEC
	0x034F6B14 LDRB W11, [X19 + 0x184]
	0x034F6B18 CBZ W11, 0x34F6B4C
	0x034F6B1C LDR X8, [X19 + 0x10]
	0x034F6B20 CBZ X8, 0x34F70A8
	0x034F6B24 LDRB W8, [X8 + 0x40]
	0x034F6B28 CMP W8, 0x1
	0x034F6B2C B.LS 0x34F6FD0
	0x034F6B30 ADRP X8, 0xC3D000
	0x034F6B34 LDR X8, [X8 + 0xA18]
	0x034F6B38 LDR X2, [X8]
	0x034F6B3C MOVZ W1, 0x2
	0x034F6B40 MOV X0, X19
	0x034F6B44 BL 0x34F116C
	0x034F6B48 B 0x34F6FD0
	0x034F6B4C ADD W9, W9, 0x2
	0x034F6B50 CMP W8, W10
	0x034F6B54 STR W9, [X31 + 0x2C]
	0x034F6B58 B.CS 0x34F70B0
	0x034F6B5C ADD X8, X20, W8, SXTW
	0x034F6B60 LDRB W8, [X8 + 0x20]
	0x034F6B64 LDR X0, [X26]
	0x034F6B68 STRB W8, [X31 + 0x1C]
	0x034F6B6C LDR W8, [X0 + 0xE0]
	0x034F6B70 CBNZ W8, 0x34F6B78
	0x034F6B74 BL 0x1C16DFC
	0x034F6B78 ADD X0, X19, 0x180
	0x034F6B7C ADD X2, X31, 0x2C
	0x034F6B80 MOV X1, X20
	0x034F6B84 MOV X3, X31
	0x034F6B88 BL 0x3506A78
	0x034F6B8C ADD X0, X31, 0x18
	0x034F6B90 ADD X2, X31, 0x2C
	0x034F6B94 MOV X1, X20
	0x034F6B98 MOV X3, X31
	0x034F6B9C BL 0x3506A78
	0x034F6BA0 LDR W8, [X31 + 0x18]
	0x034F6BA4 LDR W9, [X19 + 0x174]
	0x034F6BA8 CMP W8, W9
	0x034F6BAC B.NE 0x34F6C5C
	0x034F6BB0 CMP W21, 0xCC
	0x034F6BB4 B.NE 0x34F6C40
	0x034F6BB8 LDR X0, [X26]
	0x034F6BBC LDR W8, [X0 + 0xE0]
	0x034F6BC0 CBNZ W8, 0x34F6BC8
	0x034F6BC4 BL 0x1C16DFC
	0x034F6BC8 ADD X0, X31, 0xC
	0x034F6BCC ADD X2, X31, 0x2C
	0x034F6BD0 MOV X1, X20
	0x034F6BD4 MOV X3, X31
	0x034F6BD8 BL 0x3506A78
	0x034F6BDC LDR X8, [X19 + 0x98]
	0x034F6BE0 ADD X8, X8, 0x4
	0x034F6BE4 STR X8, [X19 + 0x98]
	0x034F6BE8 LDR W8, [X31 + 0x2C]
	0x034F6BEC SUB W8, W8, 0x4
	0x034F6BF0 STR W8, [X31 + 0x2C]
	0x034F6BF4 ADD X2, X31, 0x2C
	0x034F6BF8 MOV W0, W31
	0x034F6BFC MOV X1, X20
	0x034F6C00 MOV X3, X31
	0x034F6C04 BL 0x35067BC
	0x034F6C08 ADRP X8, 0xC05000
	0x034F6C0C LDR X8, [X8 + 0xE60]
	0x034F6C10 LDR X0, [X8]
	0x034F6C14 LDR W8, [X0 + 0xE0]
	0x034F6C18 CBNZ W8, 0x34F6C20
	0x034F6C1C BL 0x1C16DFC
	0x034F6C20 MOV X0, X20
	0x034F6C24 MOV W1, W22
	0x034F6C28 MOV X2, X31
	0x034F6C2C BL 0x3521C30
	0x034F6C30 LDR W8, [X31 + 0xC]
	0x034F6C34 MOV W21, W0
	0x034F6C38 CMP W8, W0
	0x034F6C3C B.NE 0x34F6FF0
	0x034F6C40 LDR X8, [X19 + 0x98]
	0x034F6C44 ADD X8, X8, 0xC
	0x034F6C48 B 0x34F6DA0
	0x034F6C4C LDR W8, [X19 + 0x5C]
	0x034F6C50 ADD W8, W8, 0x1
	0x034F6C54 STR W8, [X19 + 0x5C]
	0x034F6C58 B 0x34F6FD0
	0x034F6C5C LDR W8, [X19 + 0x5C]
	0x034F6C60 LDRB W9, [X19 + 0x40]
	0x034F6C64 ADD W8, W8, 0x1
	0x034F6C68 STR W8, [X19 + 0x5C]
	0x034F6C6C CBZ W9, 0x34F6FD0
	0x034F6C70 LDR X8, [X19 + 0x10]
	0x034F6C74 CBZ X8, 0x34F70F0
	0x034F6C78 LDRB W8, [X8 + 0x40]
	0x034F6C7C CMP W8, 0x5
	0x034F6C80 B.CC 0x34F6FD0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0xEEA000
	008 Move W8, [X22+2640]
	009 Move X19, X2
	010 Move X20, X1
	011 Move X21, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xC06000
	017 Move X0, [X0+3840]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+2640], W8
	021 NotImplemented "Instruction LDRSW not yet implemented."
	022 Add W9, W8, 1
	023 Move [X19], W9
	024 Compare X20, 0
	025 JumpIfEqual {137}
	026 Move W9, [X20+24]
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Move W9, [X21+17]
	029 Add X8, X20, X8
	030 Move [X8+32], W9
	031 NotImplemented "Instruction LDRSW not yet implemented."
	032 Add W9, W8, 1
	033 Move [X19], W9
	034 Move W9, [X20+24]
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Move W9, [X21+18]
	037 Add X8, X20, X8
	038 Move [X8+32], W9
	039 NotImplemented "Instruction LDRSW not yet implemented."
	040 Add W9, W8, 1
	041 Move [X19], W9
	042 Move W9, [X20+24]
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Move W9, [X21+16]
	045 Add X8, X20, X8
	046 Move [X8+32], W9
	047 NotImplemented "Instruction LDRSW not yet implemented."
	048 Add W9, W8, 1
	049 Move [X19], W9
	050 Move W9, [X20+24]
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Move W9, [X21+32]
	053 Move X23, 0xC06000
	054 Move X23, [X23+3840]
	055 Add X8, X20, X8
	056 Move [X8+32], W9
	057 Move W22, [X21+84]
	058 Move X0, [X23]
	059 Move W8, [X0+224]
	060 Compare W8, 0
	061 JumpIfNotEqual {63}
	062 Call 0x1C17DFC
	063 Move W0, W22
	064 Move X1, X20
	065 Move X2, X19
	066 Move X3, X31
	067 Call Protocol.Serialize, X0, X1, X2
	068 Move W0, [X21+20]
	069 Move X1, X20
	070 Move X2, X19
	071 Move X3, X31
	072 Call Protocol.Serialize, X0, X1, X2
	073 Move W8, [X21+17]
	074 Subtract W8, W8, 7
	075 NotImplemented "Instruction CMP not yet implemented."
	076 Move X9, -43380736
	077 Add X9, X9, 2706
	078 NotImplemented "Instruction ADR not yet implemented."
	079 Move W11, [X9]
	080 Add X10, X10, X11
	081 CallNoReturn X10
	082 Move X0, [X23]
	083 Move W22, [X21+36]
	084 Move W8, [X0+224]
	085 Compare W8, 0
	086 JumpIfNotEqual {88}
	087 Call 0x1C17DFC
	088 Move W0, W22
	089 Move X1, X20
	090 Move X2, X19
	091 Move X3, X31
	092 Call Protocol.Serialize, X0, X1, X2
	093 Move W0, [X21+40]
	094 Move X1, X20
	095 Move X2, X19
	096 Move X3, X31
	097 Call Protocol.Serialize, X0, X1, X2
	098 Move W0, [X21+44]
	099 Move X1, X20
	100 Move X2, X19
	101 Move X3, X31
	102 Call Protocol.Serialize, X0, X1, X2
	103 Move W0, [X21+48]
	104 Move X1, X20
	105 Move X2, X19
	106 Move X3, X31
	107 Call Protocol.Serialize, X0, X1, X2
	108 Move W21, [X21+52]
	109 Move X0, [X23]
	110 Move W21, [X21+24]
	111 Move X20, [X31+32]
	112 Move X19, [X31+40]
	113 Move X22, [X31+16]
	114 Move X21, [X31+24]
	115 Move X30, [X31+48]
	116 Move X23, [X31+56]
	117 Return 
	118 Move X0, [X23]
	119 Move W21, [X21+28]
	120 Move W8, [X0+224]
	121 Compare W8, 0
	122 JumpIfNotEqual {124}
	123 Call 0x1C17DFC
	124 Move W0, W21
	125 Move X1, X20
	126 Move X2, X19
	127 Move X20, [X31+32]
	128 Move X19, [X31+40]
	129 Move X22, [X31+16]
	130 Move X21, [X31+24]
	131 Move X3, X31
	132 Move X30, [X31+48]
	133 Move X23, [X31+56]
	134 Call Protocol.Serialize, X0, X1, X2
	135 Return 
	136 Call 0x1C17F28
	137 Call 0x1C17F20

Method: System.Byte[] Serialize()

Disassembly:
	0x034F6C98 MOV X1, X31
	0x034F6C9C BL 0x337B6E0
	0x034F6CA0 ADRP X8, 0xC3D000
	0x034F6CA4 LDR X8, [X8 + 0xA00]
	0x034F6CA8 ADRP X9, 0xC3D000
	0x034F6CAC LDR X9, [X9 + 0xA08]
	0x034F6CB0 MOV X3, X0

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+88]
	003 Compare X0, 0
	004 JumpIfEqual {9}
	005 Move X1, X31
	006 Move X30, [X31+16]
	007 Call StreamBuffer.GetBuffer, X0
	008 Return X0
	009 Call 0x1C17F20

Method: System.Void FreePayload()

Disassembly:
	0x034F3C44 LDR X0, [X19 + 0x10]
	0x034F3C48 CBZ X0, 0x34F3CF8
	0x034F3C4C MOV X1, X31
	0x034F3C50 BL 0x3501EA4
	0x034F3C54 TBZ X0, 0x0, 0x34F3CC0
	0x034F3C58 LDR X0, [X23]
	0x034F3C5C LDR W8, [X0 + 0xE0]
	0x034F3C60 CBNZ W8, 0x34F3C68
	0x034F3C64 BL 0x1C16DFC
	0x034F3C68 ADD X2, X31, 0xC
	0x034F3C6C MOV W0, W31
	0x034F3C70 MOV X1, X21
	0x034F3C74 MOV X3, X31
	0x034F3C78 BL 0x35067BC
	0x034F3C7C ADRP X8, 0xC08000
	0x034F3C80 LDR X8, [X8 + 0xE60]
	0x034F3C84 LDR X0, [X8]
	0x034F3C88 LDR W8, [X0 + 0xE0]
	0x034F3C8C CBNZ W8, 0x34F3C94
	0x034F3C90 BL 0x1C16DFC
	0x034F3C94 MOV X0, X21
	0x034F3C98 MOV W1, W20
	0x034F3C9C MOV X2, X31
	0x034F3CA0 BL 0x3521C30
	0x034F3CA4 LDR W8, [X31 + 0xC]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xEED000
	005 Move W8, [X20+2641]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xC41000
	012 Move X0, [X0+1912]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2641], W8
	016 Move X20, [X19+88]
	017 Compare X20, 0
	018 JumpIfEqual {28}
	019 Move X8, 0xC41000
	020 Move X8, [X8+1912]
	021 Move X0, [X8]
	022 Move W8, [X0+224]
	023 Compare W8, 0
	024 JumpIfNotEqual {26}
	025 Call 0x1C17DFC
	026 Move X0, X20
	027 Call PeerBase.MessageBufferPoolPut, X0
	028 Move [X19+88], X31
	029 Move X20, [X31+16]
	030 Move X19, [X31+24]
	031 Move X30, [X31+32]
	032 Return 

Method: System.Void Release()

Disassembly:
	0x034F3CA8 SUB W8, W8, 0x4
	0x034F3CAC STR W8, [X31 + 0xC]
	0x034F3CB0 ADD X2, X31, 0xC
	0x034F3CB4 MOV X1, X21
	0x034F3CB8 MOV X3, X31
	0x034F3CBC BL 0x35067BC
	0x034F3CC0 MOV X0, X19

ISIL:
	001 Move [X31-16], X30
	002 Move X1, X0
	003 Move X0, [X0+96]
	004 Compare X0, 0
	005 JumpIfEqual {9}
	006 Move X30, [X31+16]
	007 Call NCommandPool.Release, X0, X1
	008 Return 
	009 Call 0x1C17F20

Method: System.Int32 CompareTo(ExitGames.Client.Photon.NCommand other)

Disassembly:
	0x034FBE68 CBNZ W8, 0x34FBE74
	0x034FBE6C BL 0x1C16DFC
	0x034FBE70 LDR X0, [X22]
	0x034FBE74 LDR X8, [X0 + 0xB8]
	0x034FBE78 LDR X8, [X8]
	0x034FBE7C CBZ X8, 0x34FBEC0
	0x034FBE80 LDR W9, [X8 + 0x18]
	0x034FBE84 CMP W9, W19, UXTB
	0x034FBE88 B.LS 0x34FBEC4
	0x034FBE8C LDR X0, [X20 + 0x10]
	0x034FBE90 CBZ X0, 0x34FBEC0
	0x034FBE94 ADRP X9, 0xC38000
	0x034FBE98 LDR X9, [X9 + 0xC38]
	0x034FBE9C ADD X8, X8, W19, 0x3, UXTB

ISIL:
	001 Compare X1, 0
	002 JumpIfEqual {16}
	003 Move W9, [X0+20]
	004 Move W10, [X1+20]
	005 Move X8, X0
	006 Subtract W0, W9, W10
	007 Move W9, [X8+16]
	008 Move TEMP, X9
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {15}
	012 Move W8, [X8+24]
	013 Move W9, [X1+24]
	014 Subtract W0, W8, W9
	015 Return X0
	016 Move W0, 1
	017 Return X0

Method: System.String ToString()

Disassembly:
	0x034FBEA0 LDR X2, [X8 + 0x20]
	0x034FBEA4 LDRB W1, [X31 + 0xC]
	0x034FBEA8 LDR X3, [X9]
	0x034FBEAC BL 0x2425794
	0x034FBEB0 LDP X20, X19, [X31 + 0x20]
	0x034FBEB4 LDP X22, X21, [X31 + 0x10]
	0x034FBEB8 LDR X30, [X31], #0x30
	0x034FBEBC RET
	0x034FBEC0 BL 0x1C16F20
	0x034FBEC4 BL 0x1C16F28
	0x034FBEC8 STR X30, [X31 - 0x30]!
	0x034FBECC STP X22, X21, [X31 + 0x10]
	0x034FBED0 STP X20, X19, [X31 + 0x20]
	0x034FBED4 ADRP X22, 0xEE4000
	0x034FBED8 LDRB W8, [X22 + 0xA63]
	0x034FBEDC MOV W19, W2
	0x034FBEE0 MOV W21, W1
	0x034FBEE4 MOV X20, X0
	0x034FBEE8 STRB W1, [X31 + 0xC]
	0x034FBEEC TBNZ X8, 0x0, 0x34FBF34
	0x034FBEF0 ADRP X0, 0xBF8000
	0x034FBEF4 LDR X0, [X0 + 0xA28]
	0x034FBEF8 BL 0x1C16CF4
	0x034FBEFC ADRP X0, 0xC38000
	0x034FBF00 LDR X0, [X0 + 0xC50]
	0x034FBF04 BL 0x1C16CF4
	0x034FBF08 ADRP X0, 0xC38000
	0x034FBF0C LDR X0, [X0 + 0xC38]
	0x034FBF10 BL 0x1C16CF4
	0x034FBF14 ADRP X0, 0xC38000
	0x034FBF18 LDR X0, [X0 + 0xC10]
	0x034FBF1C BL 0x1C16CF4
	0x034FBF20 ADRP X0, 0xC38000
	0x034FBF24 LDR X0, [X0 + 0xC58]
	0x034FBF28 BL 0x1C16CF4
	0x034FBF2C MOVZ W8, 0x1
	0x034FBF30 STRB W8, [X22 + 0xA63]
	0x034FBF34 LDR X0, [X20 + 0x10]
	0x034FBF38 CBZ X0, 0x34FC010
	0x034FBF3C ADRP X8, 0xC38000
	0x034FBF40 LDR X8, [X8 + 0xC50]
	0x034FBF44 ADRP X22, 0xC38000
	0x034FBF48 MOV W1, W21
	0x034FBF4C LDR X2, [X8]
	0x034FBF50 LDR X22, [X22 + 0xC10]
	0x034FBF54 BL 0x242559C
	0x034FBF58 TBZ X0, 0x0, 0x34FBFA8
	0x034FBF5C ADD X0, X31, 0xC
	0x034FBF60 MOV X1, X31
	0x034FBF64 BL 0x3319BB4
	0x034FBF68 ADRP X8, 0xC38000
	0x034FBF6C LDR X8, [X8 + 0xC58]
	0x034FBF70 MOV X2, X31
	0x034FBF74 LDR X1, [X8]
	0x034FBF78 BL 0x321B938
	0x034FBF7C ADRP X8, 0xBF8000
	0x034FBF80 LDR X8, [X8 + 0xA28]
	0x034FBF84 MOV X21, X0
	0x034FBF88 LDR X8, [X8]
	0x034FBF8C LDR W9, [X8 + 0xE0]
	0x034FBF90 CBNZ W9, 0x34FBF9C
	0x034FBF94 MOV X0, X8
	0x034FBF98 BL 0x1C16DFC
	0x034FBF9C MOV X0, X21
	0x034FBFA0 MOV X1, X31
	0x034FBFA4 BL 0x3C0649C
	0x034FBFA8 LDR X0, [X22]
	0x034FBFAC LDR W8, [X0 + 0xE0]
	0x034FBFB0 CBNZ W8, 0x34FBFBC
	0x034FBFB4 BL 0x1C16DFC
	0x034FBFB8 LDR X0, [X22]
	0x034FBFBC LDR X8, [X0 + 0xB8]
	0x034FBFC0 LDR X8, [X8 + 0x8]
	0x034FBFC4 CBZ X8, 0x34FC010
	0x034FBFC8 LDR W9, [X8 + 0x18]
	0x034FBFCC AND W10, W19, 0x1
	0x034FBFD0 CMP W10, W9
	0x034FBFD4 B.CS 0x34FC014
	0x034FBFD8 LDR X0, [X20 + 0x10]
	0x034FBFDC CBZ X0, 0x34FC010
	0x034FBFE0 ADRP X9, 0xC38000
	0x034FBFE4 LDR X9, [X9 + 0xC38]
	0x034FBFE8 AND X10, X19, 0x1
	0x034FBFEC ADD X8, X8, X10, 0x3, LSL
	0x034FBFF0 LDR X2, [X8 + 0x20]
	0x034FBFF4 LDR X3, [X9]
	0x034FBFF8 LDRB W1, [X31 + 0xC]
	0x034FBFFC BL 0x2425794
	0x034FC000 LDP X20, X19, [X31 + 0x20]
	0x034FC004 LDP X22, X21, [X31 + 0x10]
	0x034FC008 LDR X30, [X31], #0x30
	0x034FC00C RET
	0x034FC010 BL 0x1C16F20
	0x034FC014 BL 0x1C16F28
	0x034FC018 STR X30, [X31 - 0x30]!
	0x034FC01C STP X22, X21, [X31 + 0x10]
	0x034FC020 STP X20, X19, [X31 + 0x20]
	0x034FC024 ADRP X22, 0xEE3000
	0x034FC028 LDRB W8, [X22 + 0xA64]
	0x034FC02C MOV W19, W2
	0x034FC030 MOV W21, W1
	0x034FC034 MOV X20, X0
	0x034FC038 STRB W1, [X31 + 0xC]
	0x034FC03C TBNZ X8, 0x0, 0x34FC084
	0x034FC040 ADRP X0, 0xBF7000
	0x034FC044 LDR X0, [X0 + 0xA28]
	0x034FC048 BL 0x1C16CF4
	0x034FC04C ADRP X0, 0xBFB000
	0x034FC050 LDR X0, [X0 + 0x628]
	0x034FC054 BL 0x1C16CF4
	0x034FC058 ADRP X0, 0xC37000
	0x034FC05C LDR X0, [X0 + 0xC50]
	0x034FC060 BL 0x1C16CF4
	0x034FC064 ADRP X0, 0xC37000
	0x034FC068 LDR X0, [X0 + 0xC38]
	0x034FC06C BL 0x1C16CF4
	0x034FC070 ADRP X0, 0xC37000
	0x034FC074 LDR X0, [X0 + 0xC58]
	0x034FC078 BL 0x1C16CF4
	0x034FC07C MOVZ W8, 0x1
	0x034FC080 STRB W8, [X22 + 0xA64]
	0x034FC084 LDR X0, [X20 + 0x10]
	0x034FC088 CBZ X0, 0x34FC140
	0x034FC08C ADRP X8, 0xC37000
	0x034FC090 LDR X8, [X8 + 0xC50]
	0x034FC094 ADRP X22, 0xBFB000
	0x034FC098 MOV W1, W21
	0x034FC09C LDR X2, [X8]
	0x034FC0A0 LDR X22, [X22 + 0x628]
	0x034FC0A4 BL 0x242559C
	0x034FC0A8 TBZ X0, 0x0, 0x34FC0FC
	0x034FC0AC ADD X0, X31, 0xC
	0x034FC0B0 MOV X1, X31
	0x034FC0B4 BL 0x3319BB4
	0x034FC0B8 ADRP X8, 0xC37000
	0x034FC0BC LDR X8, [X8 + 0xC58]
	0x034FC0C0 MOV X2, X31
	0x034FC0C4 LDR X1, [X8]
	0x034FC0C8 BL 0x321B938
	0x034FC0CC ADRP X8, 0xBF7000
	0x034FC0D0 LDR X8, [X8 + 0xA28]
	0x034FC0D4 MOV X21, X0
	0x034FC0D8 LDR X8, [X8]
	0x034FC0DC LDR W9, [X8 + 0xE0]
	0x034FC0E0 CBNZ W9, 0x34FC0EC
	0x034FC0E4 MOV X0, X8
	0x034FC0E8 BL 0x1C16DFC
	0x034FC0EC MOV X0, X21
	0x034FC0F0 MOV X1, X31
	0x034FC0F4 BL 0x3C06A04
	0x034FC0F8 LDRB W21, [X31 + 0xC]
	0x034FC0FC LDR X0, [X22]
	0x034FC100 LDR X20, [X20 + 0x10]
	0x034FC104 ADD X1, X31, 0x8
	0x034FC108 STRH W19, [X31 + 0x8]
	0x034FC10C BL 0x1C16E04
	0x034FC110 CBZ X20, 0x34FC140
	0x034FC114 ADRP X8, 0xC37000
	0x034FC118 LDR X8, [X8 + 0xC38]
	0x034FC11C MOV X2, X0
	0x034FC120 MOV X0, X20
	0x034FC124 MOV W1, W21
	0x034FC128 LDR X3, [X8]
	0x034FC12C BL 0x2425794
	0x034FC130 LDP X20, X19, [X31 + 0x20]
	0x034FC134 LDP X22, X21, [X31 + 0x10]
	0x034FC138 LDR X30, [X31], #0x30
	0x034FC13C RET
	0x034FC140 BL 0x1C16F20
	0x034FC144 STR X30, [X31 - 0x30]!
	0x034FC148 STP X22, X21, [X31 + 0x10]
	0x034FC14C STP X20, X19, [X31 + 0x20]
	0x034FC150 ADRP X22, 0xEE3000
	0x034FC154 LDRB W8, [X22 + 0xA65]
	0x034FC158 MOV W19, W2
	0x034FC15C MOV W21, W1
	0x034FC160 MOV X20, X0
	0x034FC164 STRB W1, [X31 + 0xC]
	0x034FC168 TBNZ X8, 0x0, 0x34FC1B0
	0x034FC16C ADRP X0, 0xBF7000
	0x034FC170 LDR X0, [X0 + 0xA28]
	0x034FC174 BL 0x1C16CF4
	0x034FC178 ADRP X0, 0xBF7000
	0x034FC17C LDR X0, [X0 + 0x758]
	0x034FC180 BL 0x1C16CF4
	0x034FC184 ADRP X0, 0xC37000
	0x034FC188 LDR X0, [X0 + 0xC50]
	0x034FC18C BL 0x1C16CF4
	0x034FC190 ADRP X0, 0xC37000
	0x034FC194 LDR X0, [X0 + 0xC38]
	0x034FC198 BL 0x1C16CF4
	0x034FC19C ADRP X0, 0xC37000
	0x034FC1A0 LDR X0, [X0 + 0xC58]
	0x034FC1A4 BL 0x1C16CF4
	0x034FC1A8 MOVZ W8, 0x1
	0x034FC1AC STRB W8, [X22 + 0xA65]
	0x034FC1B0 LDR X0, [X20 + 0x10]
	0x034FC1B4 CBZ X0, 0x34FC26C
	0x034FC1B8 ADRP X8, 0xC37000
	0x034FC1BC LDR X8, [X8 + 0xC50]
	0x034FC1C0 ADRP X22, 0xBF7000
	0x034FC1C4 MOV W1, W21
	0x034FC1C8 LDR X2, [X8]
	0x034FC1CC LDR X22, [X22 + 0x758]
	0x034FC1D0 BL 0x242559C
	0x034FC1D4 TBZ X0, 0x0, 0x34FC228
	0x034FC1D8 ADD X0, X31, 0xC
	0x034FC1DC MOV X1, X31
	0x034FC1E0 BL 0x3319BB4
	0x034FC1E4 ADRP X8, 0xC37000
	0x034FC1E8 LDR X8, [X8 + 0xC58]
	0x034FC1EC MOV X2, X31
	0x034FC1F0 LDR X1, [X8]
	0x034FC1F4 BL 0x321B938
	0x034FC1F8 ADRP X8, 0xBF7000
	0x034FC1FC LDR X8, [X8 + 0xA28]
	0x034FC200 MOV X21, X0
	0x034FC204 LDR X8, [X8]
	0x034FC208 LDR W9, [X8 + 0xE0]
	0x034FC20C CBNZ W9, 0x34FC218
	0x034FC210 MOV X0, X8
	0x034FC214 BL 0x1C16DFC
	0x034FC218 MOV X0, X21
	0x034FC21C MOV X1, X31
	0x034FC220 BL 0x3C06A04
	0x034FC224 LDRB W21, [X31 + 0xC]
	0x034FC228 LDR X0, [X22]
	0x034FC22C LDR X20, [X20 + 0x10]
	0x034FC230 ADD X1, X31, 0x8
	0x034FC234 STR W19, [X31 + 0x8]
	0x034FC238 BL 0x1C16E04
	0x034FC23C CBZ X20, 0x34FC26C
	0x034FC240 ADRP X8, 0xC37000
	0x034FC244 LDR X8, [X8 + 0xC38]
	0x034FC248 MOV X2, X0
	0x034FC24C MOV X0, X20
	0x034FC250 MOV W1, W21
	0x034FC254 LDR X3, [X8]
	0x034FC258 BL 0x2425794
	0x034FC25C LDP X20, X19, [X31 + 0x20]
	0x034FC260 LDP X22, X21, [X31 + 0x10]
	0x034FC264 LDR X30, [X31], #0x30
	0x034FC268 RET
	0x034FC26C BL 0x1C16F20
	0x034FC270 SUB X31, X31, 0x40
	0x034FC274 STR X30, [X31 + 0x10]
	0x034FC278 STP X22, X21, [X31 + 0x20]
	0x034FC27C STP X20, X19, [X31 + 0x30]
	0x034FC280 ADRP X22, 0xEE3000
	0x034FC284 LDRB W8, [X22 + 0xA66]
	0x034FC288 MOV X19, X2
	0x034FC28C MOV W21, W1
	0x034FC290 MOV X20, X0
	0x034FC294 STRB W1, [X31 + 0x1C]
	0x034FC298 TBNZ X8, 0x0, 0x34FC2E0
	0x034FC29C ADRP X0, 0xBF7000

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+32], X30
	003 Move [X31+40], X23
	004 Move [X31+48], X22
	005 Move [X31+56], X21
	006 Move [X31+64], X20
	007 Move [X31+72], X19
	008 Move X20, 0xEE5000
	009 Move W8, [X20+2642]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {32}
	015 Move X0, 0xBFA000
	016 Move X0, [X0+2520]
	017 Call 0x1C17CF4
	018 Move X0, 0xBF9000
	019 Move X0, [X0+1880]
	020 Call 0x1C17CF4
	021 Move X0, 0xBF9000
	022 Move X0, [X0+2512]
	023 Call 0x1C17CF4
	024 Move X0, 0xC39000
	025 Move X0, [X0+3064]
	026 Call 0x1C17CF4
	027 Move X0, 0xC39000
	028 Move X0, [X0+3072]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X20+2642], W8
	032 Move W8, [X19+17]
	033 Move X9, 0xBF9000
	034 Move X23, 0xBFA000
	035 Move X22, 0xBF9000
	036 Move X9, [X9+2512]
	037 Move X23, [X23+2520]
	038 Move X22, [X22+1880]
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Move X0, [X9]
	041 Move X0, [X9]
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move W1, 4
	044 Call 0x1C17D6C
	045 Move X20, X0
	046 Move W8, [X19+18]
	047 Move X0, [X23]
	048 Add X1, X31, 12
	049 Move [X31+12], W8
	050 Call 0x1C17E04
	051 Compare X20, 0
	052 JumpIfEqual {279}
	053 Move X21, X0
	054 Compare X0, 0
	055 JumpIfEqual {62}
	056 Move X8, [X20]
	057 Move X0, X21
	058 Move X1, [X8+64]
	059 Call 0x1C17E00
	060 Compare X0, 0
	061 JumpIfEqual {276}
	062 Move W8, [X20+24]
	063 Compare W8, 0
	064 JumpIfEqual {275}
	065 Move [X20+32], X21
	066 Move W8, [X19+17]
	067 Move X0, [X23]
	068 Add X1, X31, 4
	069 Move [X31+4], W8
	070 Call 0x1C17E04
	071 Move X21, X0
	072 Compare X0, 0
	073 JumpIfEqual {80}
	074 Move X8, [X20]
	075 Move X0, X21
	076 Move X1, [X8+64]
	077 Call 0x1C17E00
	078 Compare X0, 0
	079 JumpIfEqual {276}
	080 Move W8, [X20+24]
	081 NotImplemented "Instruction CMP not yet implemented."
	082 Move [X20+40], X21
	083 Move W8, [X19+76]
	084 Move X0, [X22]
	085 Add X1, X31, 28
	086 Move [X31+28], W8
	087 Call 0x1C17E04
	088 Move X21, X0
	089 Compare X0, 0
	090 JumpIfEqual {97}
	091 Move X8, [X20]
	092 Move X0, X21
	093 Move X1, [X8+64]
	094 Call 0x1C17E00
	095 Compare X0, 0
	096 JumpIfEqual {276}
	097 Move W8, [X20+24]
	098 NotImplemented "Instruction CMP not yet implemented."
	099 Move [X20+48], X21
	100 Move W8, [X19+80]
	101 Move X0, [X22]
	102 Add X1, X31, 24
	103 Move [X31+24], W8
	104 Call 0x1C17E04
	105 Move X19, X0
	106 Compare X0, 0
	107 JumpIfEqual {114}
	108 Move X8, [X20]
	109 Move X0, X19
	110 Move X1, [X8+64]
	111 Call 0x1C17E00
	112 Compare X0, 0
	113 JumpIfEqual {276}
	114 Move W8, [X20+24]
	115 NotImplemented "Instruction CMP not yet implemented."
	116 Move X8, 0xC38000
	117 Move X8, [X8+3064]
	118 Move [X20+56], X19
	119 Move W1, 8
	120 Call 0x1C17D6C
	121 Move X20, X0
	122 Move W8, [X19+18]
	123 Move X0, [X23]
	124 Add X1, X31, 20
	125 Move [X31+20], W8
	126 Call 0x1C17E04
	127 Compare X20, 0
	128 JumpIfEqual {279}
	129 Move X21, X0
	130 Compare X0, 0
	131 JumpIfEqual {138}
	132 Move X8, [X20]
	133 Move X0, X21
	134 Move X1, [X8+64]
	135 Call 0x1C17E00
	136 Compare X0, 0
	137 JumpIfEqual {276}
	138 Move W8, [X20+24]
	139 Compare W8, 0
	140 JumpIfEqual {275}
	141 Move [X20+32], X21
	142 Move W8, [X19+17]
	143 Move X0, [X23]
	144 Add X1, X31, 16
	145 Move [X31+16], W8
	146 Call 0x1C17E04
	147 Move X21, X0
	148 Compare X0, 0
	149 JumpIfEqual {156}
	150 Move X8, [X20]
	151 Move X0, X21
	152 Move X1, [X8+64]
	153 Call 0x1C17E00
	154 Compare X0, 0
	155 JumpIfEqual {276}
	156 Move W8, [X20+24]
	157 NotImplemented "Instruction CMP not yet implemented."
	158 Move [X20+40], X21
	159 Move W8, [X19+20]
	160 Move X0, [X22]
	161 Add X1, X31, 28
	162 Move [X31+28], W8
	163 Call 0x1C17E04
	164 Move X21, X0
	165 Compare X0, 0
	166 JumpIfEqual {173}
	167 Move X8, [X20]
	168 Move X0, X21
	169 Move X1, [X8+64]
	170 Call 0x1C17E00
	171 Compare X0, 0
	172 JumpIfEqual {276}
	173 Move W8, [X20+24]
	174 NotImplemented "Instruction CMP not yet implemented."
	175 Move [X20+48], X21
	176 Move W8, [X19+24]
	177 Move X0, [X22]
	178 Add X1, X31, 24
	179 Move [X31+24], W8
	180 Call 0x1C17E04
	181 Move X21, X0
	182 Compare X0, 0
	183 JumpIfEqual {190}
	184 Move X8, [X20]
	185 Move X0, X21
	186 Move X1, [X8+64]
	187 Call 0x1C17E00
	188 Compare X0, 0
	189 JumpIfEqual {276}
	190 Move W8, [X20+24]
	191 NotImplemented "Instruction CMP not yet implemented."
	192 Move [X20+56], X21
	193 Move W8, [X19+60]
	194 Move X0, [X22]
	195 Add X1, X31, 12
	196 Move [X31+12], W8
	197 Call 0x1C17E04
	198 Move X21, X0
	199 Compare X0, 0
	200 JumpIfEqual {207}
	201 Move X8, [X20]
	202 Move X0, X21
	203 Move X1, [X8+64]
	204 Call 0x1C17E00
	205 Compare X0, 0
	206 JumpIfEqual {276}
	207 Move W8, [X20+24]
	208 NotImplemented "Instruction CMP not yet implemented."
	209 Move [X20+64], X21
	210 Move W8, [X19+64]
	211 Move X0, [X23]
	212 Add X1, X31, 8
	213 Move [X31+8], W8
	214 Call 0x1C17E04
	215 Move X21, X0
	216 Compare X0, 0
	217 JumpIfEqual {224}
	218 Move X8, [X20]
	219 Move X0, X21
	220 Move X1, [X8+64]
	221 Call 0x1C17E00
	222 Compare X0, 0
	223 JumpIfEqual {276}
	224 Move W8, [X20+24]
	225 NotImplemented "Instruction CMP not yet implemented."
	226 Move [X20+72], X21
	227 Move W8, [X19+72]
	228 Move X0, [X22]
	229 Add X1, X31, 4
	230 Move [X31+4], W8
	231 Call 0x1C17E04
	232 Move X21, X0
	233 Compare X0, 0
	234 JumpIfEqual {241}
	235 Move X8, [X20]
	236 Move X0, X21
	237 Move X1, [X8+64]
	238 Call 0x1C17E00
	239 Compare X0, 0
	240 JumpIfEqual {276}
	241 Move W8, [X20+24]
	242 NotImplemented "Instruction CMP not yet implemented."
	243 Move [X20+80], X21
	244 Move W8, [X19+68]
	245 Move X0, [X22]
	246 Add X1, X31, 0
	247 Move [X31], W8
	248 Call 0x1C17E04
	249 Move X19, X0
	250 Compare X0, 0
	251 JumpIfEqual {258}
	252 Move X8, [X20]
	253 Move X0, X19
	254 Move X1, [X8+64]
	255 Call 0x1C17E00
	256 Compare X0, 0
	257 JumpIfEqual {276}
	258 Move W8, [X20+24]
	259 NotImplemented "Instruction CMP not yet implemented."
	260 Move [X20+88], X19
	261 Move X8, 0xC38000
	262 Move X8, [X8+3072]
	263 Move X0, [X8]
	264 Move X1, X20
	265 Move X2, X31
	266 Call String.Format, X0, X1
	267 Move X20, [X31+64]
	268 Move X19, [X31+72]
	269 Move X22, [X31+48]
	270 Move X21, [X31+56]
	271 Move X30, [X31+32]
	272 Move X23, [X31+40]
	273 Add X31, X31, 80
	274 Return X0
	275 Call 0x1C17F28
	276 Call 0x1C17F44
	277 Move X1, X31
	278 Call 0x1C17DEC
	279 Call 0x1C17F20

