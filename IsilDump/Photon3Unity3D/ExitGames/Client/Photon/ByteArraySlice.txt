Type: ExitGames.Client.Photon.ByteArraySlice

Method: System.Void .ctor(ExitGames.Client.Photon.ByteArraySlicePool returnPool, System.Int32 stackIndex)

Disassembly:
	0x034ED804 MOVZ W8, 0x1
	0x034ED808 STRB W8, [X20 + 0xA01]
	0x034ED80C LDR X1, [X21]
	0x034ED810 MOV X0, X19
	0x034ED814 LDP X20, X19, [X31 + 0x10]
	0x034ED818 LDP X30, X21, [X31], #0x20
	0x034ED81C B 0x2AA4804
	0x034ED820 STR X30, [X31 - 0x30]!
	0x034ED824 STP X22, X21, [X31 + 0x10]
	0x034ED828 STP X20, X19, [X31 + 0x20]
	0x034ED82C ADRP X21, 0xEF2000
	0x034ED830 ADRP X22, 0xC46000
	0x034ED834 LDRB W8, [X21 + 0xA02]
	0x034ED838 LDR X22, [X22 + 0x660]
	0x034ED83C MOV W19, W1
	0x034ED840 MOV X20, X0
	0x034ED844 TBNZ X8, 0x0, 0x34ED85C
	0x034ED848 ADRP X0, 0xC46000
	0x034ED84C LDR X0, [X0 + 0x660]
	0x034ED850 BL 0x1C16CF4
	0x034ED854 MOVZ W8, 0x1
	0x034ED858 STRB W8, [X21 + 0xA02]
	0x034ED85C LDR X2, [X22]
	0x034ED860 MOV X0, X20
	0x034ED864 MOV W1, W19
	0x034ED868 LDP X20, X19, [X31 + 0x20]
	0x034ED86C LDP X22, X21, [X31 + 0x10]
	0x034ED870 LDR X30, [X31], #0x30
	0x034ED874 B 0x2AA481C
	0x034ED878 STR X30, [X31 - 0x30]!
	0x034ED87C STP X22, X21, [X31 + 0x10]
	0x034ED880 STP X20, X19, [X31 + 0x20]
	0x034ED884 ADRP X22, 0xEF2000
	0x034ED888 ADRP X21, 0xC2F000
	0x034ED88C LDRB W8, [X22 + 0xA03]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xEF3000
	007 Move W8, [X22+2553]
	008 Move W19, W2
	009 Move X20, X1
	010 Move X21, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0xC07000
	016 Move X0, [X0+1560]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X22+2553], W8
	020 Move X0, X21
	021 Move X1, X31
	022 Call Object..ctor, X0
	023 Compare W19, 0
	024 JumpIfEqual {42}
	025 Move X8, 0xC07000
	026 Move X8, [X8+1560]
	027 Move X0, [X8]
	028 Move W8, 1
	029 NotImplemented "Instruction LSLV not yet implemented."
	030 Call 0x1C17D6C
	031 Compare X21, 0
	032 JumpIfEqual {45}
	033 Move [X21+16], X0
	034 Move [X21+32], X20
	035 Move [X21+40], W19
	036 Move X20, [X31+32]
	037 Move X19, [X31+40]
	038 Move X22, [X31+16]
	039 Move X21, [X31+24]
	040 Move X30, [X31+48]
	041 Return 
	042 Move X0, X31
	043 Compare X21, 0
	044 JumpIfNotEqual {33}
	045 Call 0x1C17F20

Method: System.Void .ctor(System.Byte[] buffer, System.Int32 offset = 0, System.Int32 count = 0)

Disassembly:
	0x034ED890 LDR X21, [X21 + 0x700]
	0x034ED894 MOV X19, X1
	0x034ED898 MOV X20, X0
	0x034ED89C TBNZ X8, 0x0, 0x34ED8B4
	0x034ED8A0 ADRP X0, 0xC2F000
	0x034ED8A4 LDR X0, [X0 + 0x700]
	0x034ED8A8 BL 0x1C16CF4
	0x034ED8AC MOVZ W8, 0x1
	0x034ED8B0 STRB W8, [X22 + 0xA03]
	0x034ED8B4 LDR X3, [X21]
	0x034ED8B8 ADD X2, X31, 0x8
	0x034ED8BC MOV X0, X20
	0x034ED8C0 MOV X1, X19
	0x034ED8C4 STR X31, [X31 + 0x8]
	0x034ED8C8 BL 0x2AA6B2C
	0x034ED8CC LDR X0, [X31 + 0x8]
	0x034ED8D0 LDP X20, X19, [X31 + 0x20]
	0x034ED8D4 LDP X22, X21, [X31 + 0x10]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, X1
	007 Move X1, X31
	008 Move W19, W3
	009 Move W20, W2
	010 Move X22, X0
	011 Call Object..ctor, X0
	012 Move TEMP, 0
	013 Not TEMP
	014 Move W8, TEMP
	015 Move [X22+16], X21
	016 Move [X22+24], W20
	017 Move [X22+28], W19
	018 Move [X22+32], X31
	019 Move [X22+40], W8
	020 Move X20, [X31+32]
	021 Move X19, [X31+40]
	022 Move X22, [X31+16]
	023 Move X21, [X31+24]
	024 Move X30, [X31+48]
	025 Return 

Method: System.Void .ctor()

Disassembly:
	0x034ED8D8 LDR X30, [X31], #0x30
	0x034ED8DC RET
	0x034ED8E0 STP X30, X23, [X31 - 0x30]!
	0x034ED8E4 STP X22, X21, [X31 + 0x10]
	0x034ED8E8 STP X20, X19, [X31 + 0x20]
	0x034ED8EC ADRP X22, 0xEF2000
	0x034ED8F0 ADRP X23, 0xC46000
	0x034ED8F4 LDRB W8, [X22 + 0xA04]
	0x034ED8F8 LDR X23, [X23 + 0x668]

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X1, X31
	004 Move X19, X0
	005 Call Object..ctor, X0
	006 Move TEMP, 0
	007 Not TEMP
	008 Move W8, TEMP
	009 Move [X19+32], X31
	010 Move [X19+40], W8
	011 Move X30, [X31+16]
	012 Move X19, [X31+24]
	013 Return 

Method: System.Void Dispose()

Disassembly:
	0x034ED8FC MOV X19, X2

ISIL:
No ISIL was generated
Method: System.Boolean Release()

Disassembly:
	0x034ED900 MOV X20, X1
	0x034ED904 MOV X21, X0
	0x034ED908 TBNZ X8, 0x0, 0x34ED920
	0x034ED90C ADRP X0, 0xC46000
	0x034ED910 LDR X0, [X0 + 0x668]
	0x034ED914 BL 0x1C16CF4
	0x034ED918 MOVZ W8, 0x1
	0x034ED91C STRB W8, [X22 + 0xA04]
	0x034ED920 LDR X3, [X23]
	0x034ED924 MOV X0, X21
	0x034ED928 MOV X1, X20
	0x034ED92C MOV X2, X19
	0x034ED930 LDP X20, X19, [X31 + 0x20]

ISIL:
	001 Move [X31-16], X30
	002 Move W2, [X0+40]
	003 Move TEMP, X2
	004 And TEMP, TEMP, -2147483648
	005 Compare TEMP, -2147483648
	006 JumpIfEqual {13}
	007 Move X1, X0
	008 Move X0, [X0+32]
	009 Move [X1+24], X31
	010 Compare X0, 0
	011 JumpIfEqual {16}
	012 Move X30, [X31+16]
	013 Move W0, W31
	014 Move X30, [X31+16]
	015 Return X0
	016 Call 0x1C17F20

Method: System.Void Reset()

Disassembly:
	0x034EDB60 LDRB W8, [X22 + 0xA08]
	0x034EDB64 LDR X21, [X21 + 0xDA0]

ISIL:
	001 Move [X0+24], X31
	002 Return 

