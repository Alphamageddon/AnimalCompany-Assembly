Type: ExitGames.Client.Photon.IPhotonSocket

Method: ExitGames.Client.Photon.IPhotonPeerListener get_Listener()

Disassembly:
	0x034F98A0 MOV X2, X31
	0x034F98A4 BL 0x3229E68
	0x034F98A8 CBZ X0, 0x34F9998
	0x034F98AC LDR W8, [X0 + 0x18]
	0x034F98B0 MOV X20, X0
	0x034F98B4 CMP W8, 0x4
	0x034F98B8 B.NE 0x34F997C
	0x034F98BC ADRP X8, 0xBFA000
	0x034F98C0 LDR X8, [X8 + 0x618]

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+16]
	003 Compare X8, 0
	004 JumpIfEqual {11}
	005 Move X8, [X8+16]
	006 Compare X8, 0
	007 JumpIfEqual {11}
	008 Move X0, [X8+72]
	009 Move X30, [X31+16]
	010 Return X0
	011 Call 0x1C17F20

Method: System.Int32 get_MTU()

Disassembly:
	0x034F98C4 MOVZ W1, 0x4
	0x034F98C8 LDR X0, [X8]
	0x034F98CC BL 0x1C16D6C
	0x034F98D0 LDR X8, [X20 + 0x18]
	0x034F98D4 MOV X21, X0
	0x034F98D8 CMP W8, 0x1
	0x034F98DC B.LT 0x34F993C
	0x034F98E0 MOV X22, X31
	0x034F98E4 AND X8, X8, 0x0

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+16]
	003 Compare X8, 0
	004 JumpIfEqual {12}
	005 Move X0, [X8+16]
	006 Compare X0, 0
	007 JumpIfEqual {12}
	008 Move X1, X31
	009 Move X30, [X31+16]
	010 Call PhotonPeer.get_MaximumTransferUnit, X0
	011 Return X0
	012 Call 0x1C17F20

Method: ExitGames.Client.Photon.PhotonSocketState get_State()

Disassembly:
	0x034F98E8 ADD X23, X20, 0x20
	0x034F98EC ADD X24, X21, 0x20

ISIL:
	001 Move W0, [X0+28]
	002 Return X0

Method: System.Void set_State(ExitGames.Client.Photon.PhotonSocketState value)

Disassembly:
	0x034F98F0 CMP X22, W8, UXTW
	0x034F98F4 B.CS 0x34F9994

ISIL:
	001 Move [X0+28], W1
	002 Return 

Method: System.Int32 get_SocketErrorCode()

Disassembly:
	0x034F98F8 LDR X0, [X23, X22, LSL #3]
	0x034F98FC ADD X1, X31, 0xC

ISIL:
	001 Move W0, [X0+32]
	002 Return X0

Method: System.Void set_SocketErrorCode(System.Int32 value)

Disassembly:
	0x034F9900 MOV X2, X31
	0x034F9904 STRB W31, [X31 + 0xC]

ISIL:
	001 Move [X0+32], W1
	002 Return 

Method: System.Boolean get_Connected()

Disassembly:
	0x034F4724 B.GE 0x34F47FC
	0x034F4728 CMP X27, X9
	0x034F472C B.CS 0x34F48D4
	0x034F4730 ADD X8, X8, X27, 0x3, LSL

ISIL:
	001 Move W8, [X0+28]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 NotImplemented "Instruction CSET not yet implemented."
	004 Return X0

Method: System.String get_ServerAddress()

Disassembly:
	0x034F9908 BL 0x3319A78
	0x034F990C TBZ X0, 0x0, 0x34F997C

ISIL:
	001 Move X0, [X0+48]
	002 Return X0

Method: System.Void set_ServerAddress(System.String value)

Disassembly:
	0x034F9910 CBZ X21, 0x34F9998
	0x034F9914 LDR W8, [X21 + 0x18]

ISIL:
	001 Move [X0+48], X1
	002 Return 

Method: System.String get_ProxyServerAddress()

Disassembly:
	0x034F9918 CMP X22, X8
	0x034F991C B.CS 0x34F9994

ISIL:
	001 Move X0, [X0+56]
	002 Return X0

Method: System.Void set_ProxyServerAddress(System.String value)

Disassembly:
	0x034F9920 LDRB W8, [X31 + 0xC]
	0x034F9924 STRB W8, [X24, X22, LSL]

ISIL:
	001 Move [X0+56], X1
	002 Return 

Method: System.String get_ServerIpAddress()

Disassembly:
	0x034F9928 LDR W8, [X20 + 0x18]
	0x034F992C ADD X22, X22, 0x1
	0x034F9930 CMP X22, W8, SXTW
	0x034F9934 B.LT 0x34F98F0
	0x034F9938 B 0x34F9940
	0x034F993C CBZ X21, 0x34F9998
	0x034F9940 LDR W8, [X21 + 0x18]
	0x034F9944 CBZ W8, 0x34F9994
	0x034F9948 LDRB W8, [X21 + 0x20]
	0x034F994C CBZ W8, 0x34F997C
	0x034F9950 ADRP X8, 0xC07000
	0x034F9954 LDR X8, [X8 + 0x968]
	0x034F9958 LDR X0, [X8]
	0x034F995C BL 0x1C16F10
	0x034F9960 MOV X1, X21
	0x034F9964 MOV X2, X31
	0x034F9968 MOV X20, X0
	0x034F996C BL 0x366CE58

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0xEE7000
	005 Move X20, 0xC3B000
	006 Move W8, [X19+2617]
	007 Move X20, [X20+2800]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xC3B000
	013 Move X0, [X0+2800]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X19+2617], W8
	017 Move X8, [X20]
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X8, [X8+184]
	021 Move X0, [X8]
	022 Move X30, [X31+32]
	023 Return X0

Method: System.Void set_ServerIpAddress(System.String value)

Disassembly:
	0x034F9970 MOVZ W0, 0x1
	0x034F9974 STR X20, [X19]
	0x034F9978 B 0x34F9980
	0x034F997C MOV W0, W31
	0x034F9980 LDP X20, X19, [X31 + 0x30]
	0x034F9984 LDP X22, X21, [X31 + 0x20]
	0x034F9988 LDP X24, X23, [X31 + 0x10]
	0x034F998C LDR X30, [X31], #0x40
	0x034F9990 RET
	0x034F9994 BL 0x1C16F28
	0x034F9998 BL 0x1C16F20
	0x034F999C SUB X31, X31, 0x40
	0x034F99A0 STP X30, X23, [X31 + 0x10]
	0x034F99A4 STP X22, X21, [X31 + 0x20]
	0x034F99A8 STP X20, X19, [X31 + 0x30]
	0x034F99AC ADRP X22, 0xEE6000
	0x034F99B0 ADRP X21, 0xC07000
	0x034F99B4 LDRB W8, [X22 + 0xA41]
	0x034F99B8 LDR X21, [X21 + 0x968]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xEE7000
	006 Move X21, 0xC3B000
	007 Move W8, [X20+2618]
	008 Move X21, [X21+2800]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xC3B000
	015 Move X0, [X0+2800]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2618], W8
	019 Move X8, [X21]
	020 Move X8, [X8+184]
	021 Move [X8], X19
	022 Move X20, [X31+16]
	023 Move X19, [X31+24]
	024 Move X30, [X31+32]
	025 Move X21, [X31+40]
	026 Return 

Method: System.Int32 get_ServerPort()

Disassembly:
	0x034F99BC MOV X20, X1
	0x034F99C0 MOV X19, X0

ISIL:
	001 Move W0, [X0+64]
	002 Return X0

Method: System.Void set_ServerPort(System.Int32 value)

Disassembly:
	0x034F99C4 TBNZ X8, 0x0, 0x34F9A78
	0x034F99C8 ADRP X0, 0xC3A000

ISIL:
	001 Move [X0+64], W1
	002 Return 

Method: System.Boolean get_AddressResolvedAsIpv6()

Disassembly:
	0x034F99CC LDR X0, [X0 + 0xB68]
	0x034F99D0 BL 0x1C16CF4

ISIL:
	001 Move W0, [X0+68]
	002 Return X0

Method: System.Void set_AddressResolvedAsIpv6(System.Boolean value)

Disassembly:
	0x034F99D4 ADRP X0, 0xC3A000
	0x034F99D8 LDR X0, [X0 + 0xB70]
	0x034F99DC BL 0x1C16CF4

ISIL:
	001 And W8, W1, 1
	002 Move [X0+68], W8
	003 Return 

Method: System.String get_UrlProtocol()

Disassembly:
	0x034F99E0 ADRP X0, 0xC3A000
	0x034F99E4 LDR X0, [X0 + 0xB78]

ISIL:
	001 Move X0, [X0+72]
	002 Return X0

Method: System.Void set_UrlProtocol(System.String value)

Disassembly:
	0x034F99E8 BL 0x1C16CF4
	0x034F99EC ADRP X0, 0xBFA000

ISIL:
	001 Move [X0+72], X1
	002 Return 

Method: System.String get_UrlPath()

Disassembly:
	0x034F99F0 LDR X0, [X0 + 0xEB8]
	0x034F99F4 BL 0x1C16CF4

ISIL:
	001 Move X0, [X0+80]
	002 Return X0

Method: System.Void set_UrlPath(System.String value)

Disassembly:
	0x034F99F8 ADRP X0, 0xC3A000
	0x034F99FC LDR X0, [X0 + 0xB80]

ISIL:
	001 Move [X0+80], X1
	002 Return 

Method: System.String get_SerializationProtocol()

Disassembly:
	0x034F9A00 BL 0x1C16CF4
	0x034F9A04 ADRP X0, 0xC3A000
	0x034F9A08 LDR X0, [X0 + 0xB88]
	0x034F9A0C BL 0x1C16CF4
	0x034F9A10 ADRP X0, 0xC07000
	0x034F9A14 LDR X0, [X0 + 0x968]
	0x034F9A18 BL 0x1C16CF4
	0x034F9A1C ADRP X0, 0xC3A000
	0x034F9A20 LDR X0, [X0 + 0xB90]
	0x034F9A24 BL 0x1C16CF4
	0x034F9A28 ADRP X0, 0xBFA000
	0x034F9A2C LDR X0, [X0 + 0xAC8]
	0x034F9A30 BL 0x1C16CF4
	0x034F9A34 ADRP X0, 0xC3A000
	0x034F9A38 LDR X0, [X0 + 0xB98]
	0x034F9A3C BL 0x1C16CF4
	0x034F9A40 ADRP X0, 0xC3A000
	0x034F9A44 LDR X0, [X0 + 0xBA0]
	0x034F9A48 BL 0x1C16CF4
	0x034F9A4C ADRP X0, 0xBFA000
	0x034F9A50 LDR X0, [X0 + 0x838]
	0x034F9A54 BL 0x1C16CF4
	0x034F9A58 ADRP X0, 0xC3A000
	0x034F9A5C LDR X0, [X0 + 0xBA8]
	0x034F9A60 BL 0x1C16CF4
	0x034F9A64 ADRP X0, 0xC3A000
	0x034F9A68 LDR X0, [X0 + 0xBB0]
	0x034F9A6C BL 0x1C16CF4
	0x034F9A70 MOVZ W8, 0x1
	0x034F9A74 STRB W8, [X22 + 0xA41]
	0x034F9A78 LDR X0, [X21]
	0x034F9A7C STR W31, [X31 + 0x4]
	0x034F9A80 STR X31, [X31 + 0x8]
	0x034F9A84 LDR W8, [X0 + 0xE0]
	0x034F9A88 CBNZ W8, 0x34F9A90
	0x034F9A8C BL 0x1C16DFC
	0x034F9A90 ADD X1, X31, 0x8
	0x034F9A94 MOV X0, X20
	0x034F9A98 MOV X2, X31
	0x034F9A9C BL 0x366D010
	0x034F9AA0 TBZ X0, 0x0, 0x34F9B14
	0x034F9AA4 LDR X0, [X31 + 0x8]
	0x034F9AA8 CBZ X0, 0x34F9F0C
	0x034F9AAC MOV X1, X31
	0x034F9AB0 BL 0x366D604
	0x034F9AB4 CMP W0, 0x17
	0x034F9AB8 B.EQ 0x34F9ACC
	0x034F9ABC ADD X2, X31, 0x8
	0x034F9AC0 MOV X1, X20
	0x034F9AC4 BL 0x34F97FC
	0x034F9AC8 TBZ X0, 0x0, 0x34F9D04
	0x034F9ACC ADRP X8, 0xC3A000
	0x034F9AD0 LDR X8, [X8 + 0xB88]
	0x034F9AD4 MOVZ W1, 0x1
	0x034F9AD8 LDR X0, [X8]
	0x034F9ADC BL 0x1C16D6C
	0x034F9AE0 CBZ X0, 0x34F9F0C
	0x034F9AE4 LDR X19, [X31 + 0x8]
	0x034F9AE8 MOV X20, X0
	0x034F9AEC CBZ X19, 0x34F9B04
	0x034F9AF0 LDR X8, [X20]
	0x034F9AF4 MOV X0, X19
	0x034F9AF8 LDR X1, [X8 + 0x40]
	0x034F9AFC BL 0x1C16E00
	0x034F9B00 CBZ X0, 0x34F9D2C
	0x034F9B04 LDR W8, [X20 + 0x18]
	0x034F9B08 CBZ W8, 0x34F9F10
	0x034F9B0C STR X19, [X20 + 0x20]
	0x034F9B10 B 0x34F9D14
	0x034F9B14 LDR X0, [X19 + 0x30]
	0x034F9B18 MOV X1, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xEE7000
	005 Move W8, [X20+2619]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {28}
	011 Move X0, 0xBFB000
	012 Move X0, [X0+3576]
	013 Call 0x1C17CF4
	014 Move X0, 0xC3B000
	015 Move X0, [X0+2808]
	016 Call 0x1C17CF4
	017 Move X0, 0xC3B000
	018 Move X0, [X0+2816]
	019 Call 0x1C17CF4
	020 Move X0, 0xBFB000
	021 Move X0, [X0+1728]
	022 Call 0x1C17CF4
	023 Move X0, 0xC3B000
	024 Move X0, [X0+2824]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X20+2619], W8
	028 Move X8, [X19+16]
	029 Compare X8, 0
	030 JumpIfEqual {74}
	031 Move X8, [X8+16]
	032 Compare X8, 0
	033 JumpIfEqual {74}
	034 Move X8, 0xBFB000
	035 Move X8, [X8+1728]
	036 Move X0, [X8]
	037 Move X8, 0xC3B000
	038 Move X8, [X8+2808]
	039 Move W9, [X0+224]
	040 Move X20, [X8]
	041 Compare W9, 0
	042 JumpIfNotEqual {44}
	043 Call 0x1C17DFC
	044 Move X0, X20
	045 Move X1, X31
	046 Call Type.GetTypeFromHandle, X0
	047 Move X8, [X19+16]
	048 Compare X8, 0
	049 JumpIfEqual {81}
	050 Move X8, [X8+16]
	051 Compare X8, 0
	052 JumpIfEqual {81}
	053 Move X9, 0xC3B000
	054 Move W8, [X8+40]
	055 Move X9, [X9+2816]
	056 Move X19, X0
	057 Add X1, X31, 12
	058 Move [X31+12], W8
	059 Move X0, [X9]
	060 Call 0x1C17E04
	061 Move X8, 0xBFB000
	062 Move X8, [X8+3576]
	063 Move X20, X0
	064 Move X8, [X8]
	065 Move W9, [X8+224]
	066 Compare W9, 0
	067 JumpIfNotEqual {70}
	068 Move X0, X8
	069 Call 0x1C17DFC
	070 Move X0, X19
	071 Move X1, X20
	072 Move X2, X31
	073 Call Enum.GetName, X0, X1
	074 Move X8, 0xC3B000
	075 Move X8, [X8+2824]
	076 Move X0, [X8]
	077 Move X20, [X31+16]
	078 Move X19, [X31+24]
	079 Move X30, [X31+32]
	080 Return X0
	081 Call 0x1C17F20

Method: System.Void .ctor(ExitGames.Client.Photon.PeerBase peerBase)

Disassembly:
	0x034F9B1C BL 0x369B574
	0x034F9B20 MOV X20, X0
	0x034F9B24 ADRP X8, 0xC3A000
	0x034F9B28 LDR X8, [X8 + 0xB70]
	0x034F9B2C LDR X0, [X8]
	0x034F9B30 BL 0x1C16F10
	0x034F9B34 ADRP X8, 0xC3A000
	0x034F9B38 LDR X8, [X8 + 0xB90]
	0x034F9B3C MOV X1, X19
	0x034F9B40 MOV X3, X31
	0x034F9B44 MOV X21, X0
	0x034F9B48 LDR X2, [X8]
	0x034F9B4C BL 0x295A080
	0x034F9B50 ADRP X8, 0xC3A000
	0x034F9B54 LDR X8, [X8 + 0xB68]
	0x034F9B58 MOV X0, X20
	0x034F9B5C MOV X1, X21
	0x034F9B60 LDR X2, [X8]
	0x034F9B64 BL 0x2157D70
	0x034F9B68 MOVZ W1, 0x3
	0x034F9B6C MOV X0, X19
	0x034F9B70 BL 0x34F9710
	0x034F9B74 TBZ X0, 0x0, 0x34F9D14
	0x034F9B78 ADRP X23, 0xC3A000
	0x034F9B7C LDR X23, [X23 + 0xBA0]
	0x034F9B80 LDR X0, [X23]
	0x034F9B84 LDR W8, [X0 + 0xE0]
	0x034F9B88 CBNZ W8, 0x34F9B94
	0x034F9B8C BL 0x1C16DFC
	0x034F9B90 LDR X0, [X23]
	0x034F9B94 LDR X8, [X0 + 0xB8]
	0x034F9B98 LDR X21, [X8 + 0x8]
	0x034F9B9C CBNZ X21, 0x34F9BF0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, X1
	005 Move X1, X31
	006 Move X19, X0
	007 Call Object..ctor, X0
	008 Compare X20, 0
	009 JumpIfEqual {19}
	010 Move W8, [X20+32]
	011 Move [X19+16], X20
	012 Move [X19+24], W8
	013 Move X8, [X20+48]
	014 Move [X19+40], X8
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 Return 
	019 Move X0, 0xBFB000
	020 Move X0, [X0+2000]
	021 Call 0x1C17D08
	022 Call 0x1C17F10
	023 Move X19, X0
	024 Move X0, 0xC3B000
	025 Move X0, [X0+2832]
	026 Call 0x1C17D08
	027 Move X1, X0
	028 Move X0, X19
	029 Move X2, X31
	030 Call Exception..ctor, X0, X1
	031 Move X0, 0xC3B000
	032 Move X0, [X0+2840]
	033 Call 0x1C17D08
	034 Move X1, X0
	035 Move X0, X19
	036 Call 0x1C17DEC

Method: System.Boolean Connect()

Disassembly:
	0x034F9BA0 LDR W8, [X0 + 0xE0]
	0x034F9BA4 CBNZ W8, 0x34F9BB0
	0x034F9BA8 BL 0x1C16DFC
	0x034F9BAC LDR X0, [X23]
	0x034F9BB0 ADRP X9, 0xC3A000
	0x034F9BB4 LDR X8, [X0 + 0xB8]
	0x034F9BB8 LDR X9, [X9 + 0xB80]
	0x034F9BBC LDR X22, [X8]
	0x034F9BC0 LDR X0, [X9]
	0x034F9BC4 BL 0x1C16F10
	0x034F9BC8 ADRP X8, 0xC3A000
	0x034F9BCC LDR X8, [X8 + 0xB98]
	0x034F9BD0 MOV X1, X22
	0x034F9BD4 MOV X3, X31
	0x034F9BD8 MOV X21, X0
	0x034F9BDC LDR X2, [X8]
	0x034F9BE0 BL 0x2D30578
	0x034F9BE4 LDR X8, [X23]
	0x034F9BE8 LDR X8, [X8 + 0xB8]
	0x034F9BEC STR X21, [X8 + 0x8]
	0x034F9BF0 ADRP X8, 0xC3A000
	0x034F9BF4 LDR X8, [X8 + 0xB78]
	0x034F9BF8 MOV X0, X20
	0x034F9BFC MOV X1, X21
	0x034F9C00 LDR X2, [X8]
	0x034F9C04 BL 0x21CF224
	0x034F9C08 ADRP X8, 0xBFA000
	0x034F9C0C LDR X8, [X8 + 0xEB8]
	0x034F9C10 LDR X1, [X8]
	0x034F9C14 BL 0x21D577C
	0x034F9C18 ADRP X8, 0xBFA000
	0x034F9C1C LDR X8, [X8 + 0x838]
	0x034F9C20 MOV X23, X0
	0x034F9C24 MOV X1, X23
	0x034F9C28 MOV X2, X31
	0x034F9C2C LDR X8, [X8]
	0x034F9C30 MOV X0, X8
	0x034F9C34 BL 0x3227FF8
	0x034F9C38 MOV X21, X0
	0x034F9C3C MOVZ W1, 0x3
	0x034F9C40 MOV X0, X19
	0x034F9C44 BL 0x34F9710
	0x034F9C48 TBZ X0, 0x0, 0x34F9D14
	0x034F9C4C ADRP X8, 0xBFA000
	0x034F9C50 LDR X8, [X8 + 0xAC8]
	0x034F9C54 MOVZ W1, 0x5
	0x034F9C58 LDR X0, [X8]
	0x034F9C5C BL 0x1C16D6C
	0x034F9C60 CBZ X0, 0x34F9F0C
	0x034F9C64 LDR W8, [X0 + 0x18]
	0x034F9C68 MOV X22, X0
	0x034F9C6C CBZ W8, 0x34F9F10
	0x034F9C70 LDR X9, [X19 + 0x30]
	0x034F9C74 CMP W8, 0x1
	0x034F9C78 STR X9, [X22 + 0x20]
	0x034F9C7C B.EQ 0x34F9F10
	0x034F9C80 ADRP X8, 0xC3A000
	0x034F9C84 LDR X8, [X8 + 0xBB0]
	0x034F9C88 LDR X8, [X8]
	0x034F9C8C STR X8, [X22 + 0x28]
	0x034F9C90 CBZ X23, 0x34F9F0C
	0x034F9C94 LDR X8, [X23 + 0x18]
	0x034F9C98 ADD X0, X31, 0x4
	0x034F9C9C MOV X1, X31
	0x034F9CA0 STR W8, [X31 + 0x4]
	0x034F9CA4 BL 0x337B6E0
	0x034F9CA8 LDR W8, [X22 + 0x18]
	0x034F9CAC CMP W8, 0x2
	0x034F9CB0 B.LS 0x34F9F10
	0x034F9CB4 CMP W8, 0x3
	0x034F9CB8 STR X0, [X22 + 0x30]
	0x034F9CBC B.EQ 0x34F9F10
	0x034F9CC0 ADRP X9, 0xC3A000
	0x034F9CC4 LDR X9, [X9 + 0xBA8]
	0x034F9CC8 CMP W8, 0x4
	0x034F9CCC LDR X9, [X9]
	0x034F9CD0 STR X9, [X22 + 0x38]
	0x034F9CD4 B.LS 0x34F9F10
	0x034F9CD8 MOV X0, X22
	0x034F9CDC MOV X1, X31
	0x034F9CE0 STR X21, [X22 + 0x40]
	0x034F9CE4 BL 0x32278CC
	0x034F9CE8 LDR X8, [X19 + 0x10]
	0x034F9CEC CBZ X8, 0x34F9F0C
	0x034F9CF0 MOV X2, X0
	0x034F9CF4 MOVZ W1, 0x3
	0x034F9CF8 MOV X0, X8
	0x034F9CFC BL 0x34F116C
	0x034F9D00 B 0x34F9D14
	0x034F9D04 MOVZ W1, 0x41A
	0x034F9D08 MOV X0, X19
	0x034F9D0C BL 0x34F9754
	0x034F9D10 MOV X20, X31
	0x034F9D14 MOV X0, X20
	0x034F9D18 LDP X20, X19, [X31 + 0x30]
	0x034F9D1C LDP X22, X21, [X31 + 0x20]
	0x034F9D20 LDP X30, X23, [X31 + 0x10]
	0x034F9D24 ADD X31, X31, 0x40
	0x034F9D28 RET
	0x034F9D2C BL 0x1C16F44
	0x034F9D30 MOV X1, X31
	0x034F9D34 BL 0x1C16DEC
	0x034F9D38 MOV X21, X1
	0x034F9D3C CMP W21, 0x1
	0x034F9D40 MOV X22, X0
	0x034F9D44 B.NE 0x34F9F48
	0x034F9D48 MOV X0, X22
	0x034F9D4C BL 0x3EB1AD0
	0x034F9D50 MOV X20, X0
	0x034F9D54 ADRP X0, 0xBFA000
	0x034F9D58 LDR X0, [X0 + 0x7D0]
	0x034F9D5C BL 0x1C16D08
	0x034F9D60 LDR X8, [X20]
	0x034F9D64 LDR X1, [X8]
	0x034F9D68 BL 0x1C17270
	0x034F9D6C TBZ X0, 0x0, 0x34F9D90
	0x034F9D70 LDR X20, [X20]
	0x034F9D74 BL 0x3EB1AE0
	0x034F9D78 LDR X0, [X19 + 0x30]
	0x034F9D7C MOV X1, X31
	0x034F9D80 BL 0x369B48C
	0x034F9D84 CBZ X0, 0x34F9DB4
	0x034F9D88 LDR X20, [X0 + 0x20]
	0x034F9D8C B 0x34F9B24
	0x034F9D90 MOVZ W0, 0x8
	0x034F9D94 BL 0x3EB1AF0
	0x034F9D98 LDR X8, [X20]
	0x034F9D9C STR X8, [X0]
	0x034F9DA0 ADRP X1, 0x9BB000
	0x034F9DA4 ADD X1, X1, 0xE58
	0x034F9DA8 MOV X2, X31
	0x034F9DAC BL 0x3EB1B00
	0x034F9DB0 B 0x34F9F34
	0x034F9DB4 BL 0x1C16F20
	0x034F9DB8 MOV X22, X0
	0x034F9DBC B 0x34F9DC4
	0x034F9DC0 MOV X22, X0
	0x034F9DC4 CMP W1, W21
	0x034F9DC8 B.NE 0x34F9F48
	0x034F9DCC MOV X0, X22
	0x034F9DD0 BL 0x3EB1AD0
	0x034F9DD4 MOV X21, X0
	0x034F9DD8 ADRP X0, 0xBFA000
	0x034F9DDC LDR X0, [X0 + 0x7D0]
	0x034F9DE0 BL 0x1C16D08
	0x034F9DE4 LDR X8, [X21]
	0x034F9DE8 LDR X1, [X8]
	0x034F9DEC BL 0x1C17270
	0x034F9DF0 TBZ X0, 0x0, 0x34F9F14
	0x034F9DF4 LDR X22, [X21]
	0x034F9DF8 BL 0x3EB1AE0
	0x034F9DFC MOVZ W1, 0x2
	0x034F9E00 MOV X0, X19
	0x034F9E04 BL 0x34F9710
	0x034F9E08 TBZ X0, 0x0, 0x34F9F04
	0x034F9E0C ADRP X0, 0xBFA000
	0x034F9E10 LDR X0, [X0 + 0xAC8]
	0x034F9E14 BL 0x1C16D08
	0x034F9E18 MOVZ W1, 0x6
	0x034F9E1C BL 0x1C16D6C
	0x034F9E20 CBZ X0, 0x34F9F0C
	0x034F9E24 MOV X21, X0
	0x034F9E28 ADRP X0, 0xC3A000
	0x034F9E2C LDR X0, [X0 + 0xBB8]
	0x034F9E30 BL 0x1C16D08
	0x034F9E34 LDR W8, [X21 + 0x18]
	0x034F9E38 CBZ W8, 0x34F9F10
	0x034F9E3C CMP W8, 0x1
	0x034F9E40 STR X0, [X21 + 0x20]
	0x034F9E44 B.EQ 0x34F9F10
	0x034F9E48 LDR X8, [X19 + 0x30]
	0x034F9E4C ADRP X0, 0xC3A000
	0x034F9E50 STR X8, [X21 + 0x28]
	0x034F9E54 LDR X0, [X0 + 0xBC0]
	0x034F9E58 BL 0x1C16D08
	0x034F9E5C LDR W8, [X21 + 0x18]
	0x034F9E60 CMP W8, 0x2
	0x034F9E64 B.LS 0x34F9F10
	0x034F9E68 STR X0, [X21 + 0x30]
	0x034F9E6C CBZ X20, 0x34F9E88
	0x034F9E70 LDR X8, [X20]
	0x034F9E74 MOV X0, X20
	0x034F9E78 LDP X9, X1, [X8 + 0x168]
	0x034F9E7C BLR X9
	0x034F9E80 LDR W8, [X21 + 0x18]
	0x034F9E84 B 0x34F9E8C
	0x034F9E88 MOV X0, X31
	0x034F9E8C CMP W8, 0x3
	0x034F9E90 B.LS 0x34F9F10
	0x034F9E94 STR X0, [X21 + 0x38]
	0x034F9E98 ADRP X0, 0xBFB000
	0x034F9E9C LDR X0, [X0 + 0xFE0]
	0x034F9EA0 BL 0x1C16D08
	0x034F9EA4 LDR W8, [X21 + 0x18]
	0x034F9EA8 CMP W8, 0x4
	0x034F9EAC B.LS 0x34F9F10
	0x034F9EB0 STR X0, [X21 + 0x40]
	0x034F9EB4 CBZ X22, 0x34F9ED0
	0x034F9EB8 LDR X8, [X22]
	0x034F9EBC MOV X0, X22
	0x034F9EC0 LDP X9, X1, [X8 + 0x168]
	0x034F9EC4 BLR X9
	0x034F9EC8 LDR W8, [X21 + 0x18]
	0x034F9ECC B 0x34F9ED4
	0x034F9ED0 MOV X0, X31
	0x034F9ED4 CMP W8, 0x5
	0x034F9ED8 B.LS 0x34F9F10
	0x034F9EDC STR X0, [X21 + 0x48]
	0x034F9EE0 MOV X0, X21
	0x034F9EE4 MOV X1, X31
	0x034F9EE8 BL 0x32278CC
	0x034F9EEC LDR X8, [X19 + 0x10]
	0x034F9EF0 CBZ X8, 0x34F9F0C
	0x034F9EF4 MOV X2, X0
	0x034F9EF8 MOVZ W1, 0x2
	0x034F9EFC MOV X0, X8
	0x034F9F00 BL 0x34F116C
	0x034F9F04 MOVZ W1, 0x41B
	0x034F9F08 B 0x34F9D08
	0x034F9F0C BL 0x1C16F20
	0x034F9F10 BL 0x1C16F28
	0x034F9F14 MOVZ W0, 0x8
	0x034F9F18 BL 0x3EB1AF0
	0x034F9F1C LDR X8, [X21]
	0x034F9F20 STR X8, [X0]
	0x034F9F24 ADRP X1, 0x9BB000
	0x034F9F28 ADD X1, X1, 0xE58
	0x034F9F2C MOV X2, X31
	0x034F9F30 BL 0x3EB1B00
	0x034F9F34 MOV X22, X0
	0x034F9F38 BL 0x3EB1AE0
	0x034F9F3C B 0x34F9F48
	0x034F9F40 MOV X22, X0
	0x034F9F44 BL 0x3EB1AE0
	0x034F9F48 MOV X0, X22
	0x034F9F4C BL 0x1D2C690
	0x034F9F50 BL 0x1990590
	0x034F9F54 STP X30, X21, [X31 - 0x20]!
	0x034F9F58 STP X20, X19, [X31 + 0x10]
	0x034F9F5C CBZ X1, 0x34F9FBC
	0x034F9F60 MOV X19, X1
	0x034F9F64 MOV X0, X1
	0x034F9F68 MOV X1, X31
	0x034F9F6C MOV X20, X2
	0x034F9F70 BL 0x366D604
	0x034F9F74 CBZ X20, 0x34F9FBC
	0x034F9F78 MOV W21, W0
	0x034F9F7C MOV X0, X20
	0x034F9F80 MOV X1, X31
	0x034F9F84 BL 0x366D604
	0x034F9F88 CMP W21, W0
	0x034F9F8C B.NE 0x34F9F98
	0x034F9F90 MOV W0, W31
	0x034F9F94 B 0x34F9FB0
	0x034F9F98 MOV X0, X19
	0x034F9F9C MOV X1, X31
	0x034F9FA0 BL 0x366D604
	0x034F9FA4 CMP W0, 0x17
	0x034F9FA8 MOVN W8, 0x0
	0x034F9FAC CSNEG W0, W8, W8, EQ
	0x034F9FB0 LDP X20, X19, [X31 + 0x10]
	0x034F9FB4 LDP X30, X21, [X31], #0x20
	0x034F9FB8 RET
	0x034F9FBC BL 0x1C16F20
	0x034F9FC0 STR X30, [X31 - 0x30]!

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+64], X30
	003 Move [X31+72], X21
	004 Move [X31+80], X20
	005 Move [X31+88], X19
	006 Move X20, 0xEE7000
	007 Move W8, [X20+2620]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {45}
	013 Move X0, 0xC03000
	014 Move X0, [X0+3576]
	015 Call 0x1C17CF4
	016 Move X0, 0xC03000
	017 Move X0, [X0+3016]
	018 Call 0x1C17CF4
	019 Move X0, 0xC3B000
	020 Move X0, [X0+2848]
	021 Call 0x1C17CF4
	022 Move X0, 0xBFB000
	023 Move X0, [X0+2760]
	024 Call 0x1C17CF4
	025 Move X0, 0xBFD000
	026 Move X0, [X0+632]
	027 Call 0x1C17CF4
	028 Move X0, 0xC3B000
	029 Move X0, [X0+2856]
	030 Call 0x1C17CF4
	031 Move X0, 0xC3B000
	032 Move X0, [X0+2864]
	033 Call 0x1C17CF4
	034 Move X0, 0xC3B000
	035 Move X0, [X0+2872]
	036 Call 0x1C17CF4
	037 Move X0, 0xC04000
	038 Move X0, [X0+2440]
	039 Call 0x1C17CF4
	040 Move X0, 0xC3B000
	041 Move X0, [X0+2880]
	042 Call 0x1C17CF4
	043 Move W8, 1
	044 Move [X20+2620], W8
	045 Move [X31+56], X31
	046 NotImplemented "Instruction STRH not yet implemented."
	047 Move [X31+32], X31
	048 Move [X31+40], X31
	049 Move [X31+28], W31
	050 Move W8, [X19+28]
	051 Move X9, [X19+16]
	052 Compare W8, 0
	053 JumpIfEqual {101}
	054 Compare X9, 0
	055 JumpIfEqual {287}
	056 Move X9, [X9+16]
	057 Compare X9, 0
	058 JumpIfEqual {287}
	059 Move W10, [X9+64]
	060 Compare W10, 0
	061 JumpIfEqual {270}
	062 Move X10, 0xC3B000
	063 Move X10, [X10+2848]
	064 Move X19, [X9+72]
	065 Move TEMP, 0
	066 Not TEMP
	067 Move X9, TEMP
	068 Add X0, X31, 0
	069 Move X10, [X10]
	070 Move X1, X31
	071 Move [X31+16], W8
	072 Move [X31], X10
	073 Move [X31+8], X9
	074 Call Enum.ToString, X0
	075 Move X8, 0xC3B000
	076 Move X8, [X8+2880]
	077 Move X1, X0
	078 Move X2, X31
	079 Move X8, [X8]
	080 Move X0, X8
	081 Call String.Concat, X0, X1
	082 Compare X19, 0
	083 JumpIfEqual {287}
	084 Move X10, 0xC03000
	085 Move X8, [X19]
	086 Move X10, [X10+3016]
	087 Move X20, X0
	088 NotImplemented "Instruction LDRH not yet implemented."
	089 Move X1, [X10]
	090 Compare X9, 0
	091 JumpIfEqual {98}
	092 Move X10, [X8+176]
	093 Add X10, X10, 8
	094 NotImplemented "Instruction LDUR not yet implemented."
	095 NotImplemented "Instruction CMP not yet implemented."
	096 Subtract X9, X9, 1
	097 Add X10, X10, 16
	098 Move X0, X19
	099 Move W2, W31
	100 Call 0x1C5D788
	101 Compare X9, 0
	102 JumpIfEqual {270}
	103 Move W8, [X19+24]
	104 Move W10, [X9+32]
	105 NotImplemented "Instruction CMP not yet implemented."
	106 Move X1, [X9+48]
	107 Add X2, X31, 56
	108 Add X3, X31, 52
	109 Add X4, X31, 40
	110 Add X5, X31, 32
	111 Call IPhotonSocket.TryParseAddress, X0, X1, X2, X3, X4, X5
	112 Move TEMP, X0
	113 And TEMP, TEMP, 1
	114 Compare TEMP, 1
	115 JumpIfNotEqual {229}
	116 Move X8, 0xBFD000
	117 Move X8, [X8+632]
	118 Move X21, 0xEE7000
	119 Move W9, [X21+2693]
	120 Move X8, [X8]
	121 Move X8, [X8+184]
	122 Move X20, [X8]
	123 Compare W9, 0
	124 JumpIfNotEqual {130}
	125 Move X0, 0xC3B000
	126 Move X0, [X0+2800]
	127 Call 0x1C17CF4
	128 Move W8, 1
	129 Move [X21+2693], W8
	130 Move X8, 0xC3B000
	131 Move X8, [X8+2800]
	132 Move X8, [X8]
	133 Move X8, [X8+184]
	134 Move [X8], X20
	135 Move X8, [X31+56]
	136 Move [X19+48], X8
	137 NotImplemented "Instruction LDRH not yet implemented."
	138 Move [X19+64], W8
	139 Move X9, [X31+32]
	140 Move X8, [X31+40]
	141 Move [X19+72], X8
	142 Move [X19+80], X9
	143 Move X8, [X19+16]
	144 Compare X8, 0
	145 JumpIfEqual {287}
	146 Move X8, [X8+16]
	147 Compare X8, 0
	148 JumpIfEqual {287}
	149 Move W8, [X8+64]
	150 NotImplemented "Instruction CMP not yet implemented."
	151 Move X0, X19
	152 Call IPhotonSocket.get_Listener, X0
	153 Move X8, 0xBFB000
	154 Move X8, [X8+2760]
	155 Move X20, X0
	156 Move W1, 6
	157 Move X8, [X8]
	158 Move X0, X8
	159 Call 0x1C17D6C
	160 Compare X0, 0
	161 JumpIfEqual {287}
	162 Move W8, [X0+24]
	163 Move X21, X0
	164 Compare W8, 0
	165 JumpIfEqual {288}
	166 Move X9, 0xC3B000
	167 Move X9, [X9+2872]
	168 NotImplemented "Instruction CMP not yet implemented."
	169 Move X9, [X9]
	170 Move [X21+32], X9
	171 Move X9, [X19+48]
	172 NotImplemented "Instruction CMP not yet implemented."
	173 Move [X21+40], X9
	174 Move X8, 0xC04000
	175 Move X8, [X8+2440]
	176 Add X0, X31, 28
	177 Move X1, X31
	178 Move X8, [X8]
	179 Move [X21+48], X8
	180 Move W8, [X19+64]
	181 Move [X31+28], W8
	182 Call Int32.ToString, X0
	183 Move W8, [X21+24]
	184 NotImplemented "Instruction CMP not yet implemented."
	185 NotImplemented "Instruction CMP not yet implemented."
	186 Move [X21+56], X0
	187 Move X8, 0xC3B000
	188 Move X8, [X8+2856]
	189 Move X9, 0xC03000
	190 Move TEMP, 0
	191 Not TEMP
	192 Move X10, TEMP
	193 Add X0, X31, 0
	194 Move X8, [X8]
	195 Move X9, [X9+3576]
	196 Move X1, X31
	197 Move [X21+64], X8
	198 Move X8, [X9]
	199 Move W9, [X19+24]
	200 Move [X31], X8
	201 Move [X31+8], X10
	202 Move [X31+16], W9
	203 Call Enum.ToString, X0
	204 Move W8, [X21+24]
	205 NotImplemented "Instruction CMP not yet implemented."
	206 Move [X21+72], X0
	207 Move X0, X21
	208 Move X1, X31
	209 Call String.Concat, X0
	210 Compare X20, 0
	211 JumpIfEqual {287}
	212 Move X10, 0xC03000
	213 Move X8, [X20]
	214 Move X10, [X10+3016]
	215 Move X19, X0
	216 NotImplemented "Instruction LDRH not yet implemented."
	217 Move X1, [X10]
	218 Compare X9, 0
	219 JumpIfEqual {226}
	220 Move X10, [X8+176]
	221 Add X10, X10, 8
	222 NotImplemented "Instruction LDUR not yet implemented."
	223 NotImplemented "Instruction CMP not yet implemented."
	224 Subtract X9, X9, 1
	225 Add X10, X10, 16
	226 Move X0, X20
	227 Move W2, W31
	228 Call 0x1C5D788
	229 Move X8, [X19+16]
	230 Compare X8, 0
	231 JumpIfEqual {287}
	232 Move X9, [X8+16]
	233 Compare X9, 0
	234 JumpIfEqual {287}
	235 Move W10, [X9+64]
	236 Compare W10, 0
	237 JumpIfEqual {270}
	238 Move X1, [X8+48]
	239 Move X8, 0xC3B000
	240 Move X19, [X9+72]
	241 Move X8, [X8+2864]
	242 Move X2, X31
	243 Move X0, [X8]
	244 Call String.Concat, X0, X1
	245 Compare X19, 0
	246 JumpIfEqual {287}
	247 Move X10, 0xC03000
	248 Move X8, [X19]
	249 Move X10, [X10+3016]
	250 Move X20, X0
	251 NotImplemented "Instruction LDRH not yet implemented."
	252 Move X1, [X10]
	253 Compare X9, 0
	254 JumpIfEqual {98}
	255 Move X10, [X8+176]
	256 Add X10, X10, 8
	257 NotImplemented "Instruction LDUR not yet implemented."
	258 NotImplemented "Instruction CMP not yet implemented."
	259 Subtract X9, X9, 1
	260 Add X10, X10, 16
	261 NotImplemented "Instruction LDRSW not yet implemented."
	262 Add X8, X8, X9
	263 Add X0, X8, 312
	264 Move X8, [X0]
	265 Move X3, [X0+8]
	266 Move W1, 1
	267 Move X0, X19
	268 Move X2, X20
	269 NotImplemented "Instruction BLR not yet implemented."
	270 Move W0, W31
	271 Move X20, [X31+80]
	272 Move X19, [X31+88]
	273 Move X30, [X31+64]
	274 Move X21, [X31+72]
	275 Add X31, X31, 96
	276 Return X0
	277 NotImplemented "Instruction LDRSW not yet implemented."
	278 Add X8, X8, X9
	279 Add X0, X8, 312
	280 Move X8, [X0]
	281 Move X3, [X0+8]
	282 Move W1, 5
	283 Move X0, X20
	284 Move X2, X19
	285 NotImplemented "Instruction BLR not yet implemented."
	286 Move W0, 1
	287 Call 0x1C17F20
	288 Call 0x1C17F28

Method: System.Boolean Disconnect()

Disassembly:
	

ISIL:
No ISIL was generated
Method: ExitGames.Client.Photon.PhotonSocketError Send(System.Byte[] data, System.Int32 length)

Disassembly:
	

ISIL:
No ISIL was generated
Method: ExitGames.Client.Photon.PhotonSocketError Receive(out System.Byte[] data)

Disassembly:
	

ISIL:
No ISIL was generated
Method: System.Void HandleReceivedDatagram(System.Byte[] inBuffer, System.Int32 length, System.Boolean willBeReused)

Disassembly:
	0x034FA1F0 LDP X20, X19, [X31 + 0x10]
	0x034FA1F4 LDR X30, [X31], #0x20
	0x034FA1F8 RET
	0x034FA1FC MOV X1, X31
	0x034FA200 B 0x33BDD8C
	0x034FA204 SUB X31, X31, 0x40
	0x034FA208 STP X30, X21, [X31 + 0x20]
	0x034FA20C STP X20, X19, [X31 + 0x30]
	0x034FA210 ADRP X21, 0xEE5000
	0x034FA214 ADRP X20, 0xBF9000
	0x034FA218 LDRB W8, [X21 + 0xA44]
	0x034FA21C LDR X20, [X20 + 0xAC8]
	0x034FA220 MOV X19, X1
	0x034FA224 TBNZ X8, 0x0, 0x34FA26C
	0x034FA228 ADRP X0, 0xC39000
	0x034FA22C LDR X0, [X0 + 0xBD0]
	0x034FA230 BL 0x1C16CF4
	0x034FA234 ADRP X0, 0xBF9000
	0x034FA238 LDR X0, [X0 + 0xAC8]
	0x034FA23C BL 0x1C16CF4
	0x034FA240 ADRP X0, 0xC39000
	0x034FA244 LDR X0, [X0 + 0xBD8]
	0x034FA248 BL 0x1C16CF4
	0x034FA24C ADRP X0, 0xC04000
	0x034FA250 LDR X0, [X0 + 0x310]
	0x034FA254 BL 0x1C16CF4
	0x034FA258 ADRP X0, 0xBFA000
	0x034FA25C LDR X0, [X0 + 0x610]
	0x034FA260 BL 0x1C16CF4
	0x034FA264 MOVZ W8, 0x1
	0x034FA268 STRB W8, [X21 + 0xA44]
	0x034FA26C LDR X0, [X20]
	0x034FA270 MOVZ W1, 0x6
	0x034FA274 STR W31, [X31 + 0x1C]
	0x034FA278 BL 0x1C16D6C
	0x034FA27C CBZ X19, 0x34FA378
	0x034FA280 LDR X8, [X19]
	0x034FA284 MOV X20, X0
	0x034FA288 MOV X0, X19
	0x034FA28C LDP X9, X1, [X8 + 0x168]
	0x034FA290 BLR X9
	0x034FA294 CBZ X20, 0x34FA378
	0x034FA298 LDR W8, [X20 + 0x18]
	0x034FA29C CBZ W8, 0x34FA374
	0x034FA2A0 CMP W8, 0x1
	0x034FA2A4 STR X0, [X20 + 0x20]
	0x034FA2A8 B.EQ 0x34FA374
	0x034FA2AC ADRP X8, 0xBFA000
	0x034FA2B0 LDR X8, [X8 + 0x610]
	0x034FA2B4 ADRP X21, 0xC39000
	0x034FA2B8 MOV X0, X19
	0x034FA2BC MOV X1, X31
	0x034FA2C0 LDR X8, [X8]
	0x034FA2C4 LDR X21, [X21 + 0xBD0]
	0x034FA2C8 STR X8, [X20 + 0x28]
	0x034FA2CC BL 0x366D604
	0x034FA2D0 LDR X8, [X21]
	0x034FA2D4 MOVN X9, 0x0
	0x034FA2D8 STR W0, [X31 + 0x10]
	0x034FA2DC ADD X0, X31, 0x0
	0x034FA2E0 MOV X1, X31
	0x034FA2E4 STP X8, X9, [X31]
	0x034FA2E8 BL 0x33B162C
	0x034FA2EC LDR W8, [X20 + 0x18]
	0x034FA2F0 CMP W8, 0x2
	0x034FA2F4 B.LS 0x34FA374
	0x034FA2F8 CMP W8, 0x3
	0x034FA2FC STR X0, [X20 + 0x30]
	0x034FA300 B.EQ 0x34FA374
	0x034FA304 ADRP X8, 0xC04000
	0x034FA308 LDR X8, [X8 + 0x310]
	0x034FA30C MOV X0, X19
	0x034FA310 MOV X1, X31
	0x034FA314 LDR X8, [X8]
	0x034FA318 STR X8, [X20 + 0x38]
	0x034FA31C BL 0x366D604
	0x034FA320 STR W0, [X31 + 0x1C]
	0x034FA324 ADD X0, X31, 0x1C
	0x034FA328 MOV X1, X31
	0x034FA32C BL 0x337B6E0
	0x034FA330 LDR W8, [X20 + 0x18]
	0x034FA334 CMP W8, 0x4
	0x034FA338 B.LS 0x34FA374
	0x034FA33C CMP W8, 0x5
	0x034FA340 STR X0, [X20 + 0x40]
	0x034FA344 B.EQ 0x34FA374
	0x034FA348 ADRP X8, 0xC39000
	0x034FA34C LDR X8, [X8 + 0xBD8]
	0x034FA350 MOV X0, X20
	0x034FA354 MOV X1, X31
	0x034FA358 LDR X8, [X8]
	0x034FA35C STR X8, [X20 + 0x48]
	0x034FA360 BL 0x32278CC
	0x034FA364 LDP X20, X19, [X31 + 0x30]
	0x034FA368 LDP X30, X21, [X31 + 0x20]
	0x034FA36C ADD X31, X31, 0x40
	0x034FA370 RET
	0x034FA374 BL 0x1C16F28
	0x034FA378 BL 0x1C16F20
	0x034FA37C STR X30, [X31 - 0x20]!
	0x034FA380 STP X20, X19, [X31 + 0x10]
	0x034FA384 ADRP X20, 0xEE5000
	0x034FA388 LDRB W8, [X20 + 0xA45]
	0x034FA38C MOV W19, W0
	0x034FA390 TBNZ X8, 0x0, 0x34FA3B4
	0x034FA394 ADRP X0, 0xC39000
	0x034FA398 LDR X0, [X0 + 0xBE0]
	0x034FA39C BL 0x1C16CF4
	0x034FA3A0 ADRP X0, 0xC02000
	0x034FA3A4 LDR X0, [X0 + 0xBB0]
	0x034FA3A8 BL 0x1C16CF4
	0x034FA3AC MOVZ W8, 0x1
	0x034FA3B0 STRB W8, [X20 + 0xA45]
	0x034FA3B4 CMP W19, 0x1
	0x034FA3B8 B.NE 0x34FA3DC
	0x034FA3BC ADRP X8, 0xC02000
	0x034FA3C0 LDR X8, [X8 + 0xBB0]
	0x034FA3C4 LDR X0, [X8]
	0x034FA3C8 BL 0x1C16F10
	0x034FA3CC MOV X1, X31
	0x034FA3D0 MOV X19, X0
	0x034FA3D4 BL 0x3515F08

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X23, 0xEE6000
	010 Move W8, [X23+2621]
	011 Move W22, W3
	012 Move W19, W2
	013 Move X20, X1
	014 Move X21, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {27}
	019 Move X0, 0xBFA000
	020 Move X0, [X0+1560]
	021 Call 0x1C17CF4
	022 Move X0, 0xC3A000
	023 Move X0, [X0+2472]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X23+2621], W8
	027 Move X8, [X21+16]
	028 Compare X8, 0
	029 JumpIfEqual {147}
	030 Move X8, [X8+16]
	031 Compare X8, 0
	032 JumpIfEqual {147}
	033 Move X23, [X8+96]
	034 Compare X23, 0
	035 JumpIfEqual {94}
	036 Move X25, 0xC3A000
	037 Move X8, [X23]
	038 Move X25, [X25+2472]
	039 NotImplemented "Instruction LDRH not yet implemented."
	040 Move X1, [X25]
	041 Compare X9, 0
	042 JumpIfEqual {49}
	043 Move X10, [X8+176]
	044 Add X10, X10, 8
	045 NotImplemented "Instruction LDUR not yet implemented."
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Subtract X9, X9, 1
	048 Add X10, X10, 16
	049 Move X0, X23
	050 Move W2, W31
	051 Call 0x1C5D788
	052 NotImplemented "Instruction LDRSW not yet implemented."
	053 Add X8, X8, X9
	054 Add X0, X8, 312
	055 Move X8, [X0]
	056 Move X1, [X0+8]
	057 Move X0, X23
	058 NotImplemented "Instruction BLR not yet implemented."
	059 Move TEMP, X0
	060 And TEMP, TEMP, 1
	061 Compare TEMP, 1
	062 JumpIfNotEqual {94}
	063 Move X9, [X21+16]
	064 Compare X9, 0
	065 JumpIfEqual {147}
	066 Move X8, [X23]
	067 NotImplemented "Instruction LDRH not yet implemented."
	068 Move X1, [X25]
	069 NotImplemented "Instruction LDRH not yet implemented."
	070 Compare X9, 0
	071 JumpIfEqual {78}
	072 Move X10, [X8+176]
	073 Add X10, X10, 8
	074 NotImplemented "Instruction LDUR not yet implemented."
	075 NotImplemented "Instruction CMP not yet implemented."
	076 Subtract X9, X9, 1
	077 Add X10, X10, 16
	078 Move W2, 2
	079 Move X0, X23
	080 Call 0x1C5D788
	081 Move W9, [X10]
	082 Add W9, W9, 2
	083 Add X8, X8, W9
	084 Add X0, X8, 312
	085 Move X8, [X0]
	086 Move X6, [X0+8]
	087 Move W3, 1
	088 Move X0, X23
	089 Move X1, X20
	090 Move W2, W19
	091 Move W4, W24
	092 Move X5, X21
	093 NotImplemented "Instruction BLR not yet implemented."
	094 Move X0, [X21+16]
	095 Compare X0, 0
	096 JumpIfEqual {147}
	097 Move X8, [X0+272]
	098 Compare X8, 0
	099 JumpIfEqual {147}
	100 Move W8, [X8+16]
	101 Compare W8, 0
	102 JumpIfEqual {124}
	103 Move TEMP, X22
	104 And TEMP, TEMP, 1
	105 Compare TEMP, 1
	106 JumpIfNotEqual {138}
	107 Move X8, 0xBFA000
	108 Move X8, [X8+1560]
	109 Move W1, W19
	110 Move X0, [X8]
	111 Call 0x1C17D6C
	112 Move X22, X0
	113 Move X0, X20
	114 Move W1, W31
	115 Move X2, X22
	116 Move W3, W31
	117 Move W4, W19
	118 Move X5, X31
	119 Call Buffer.BlockCopy, X0, X1, X2, X3, X4
	120 Move X0, [X21+16]
	121 Compare X0, 0
	122 JumpIfEqual {147}
	123 Move X1, X22
	124 Move X8, [X0]
	125 Move X1, X20
	126 Move W2, W19
	127 Move X20, [X31+48]
	128 Move X19, [X31+56]
	129 Move X4, [X8+600]
	130 Move X3, [X8+608]
	131 Move X22, [X31+32]
	132 Move X21, [X31+40]
	133 Move X24, [X31+16]
	134 Move X23, [X31+24]
	135 Move X30, [X31+64]
	136 Move X25, [X31+72]
	137 CallNoReturn X4
	138 Move X1, X20
	139 Move X20, [X31+48]
	140 Move X19, [X31+56]
	141 Move X22, [X31+32]
	142 Move X21, [X31+40]
	143 Move X24, [X31+16]
	144 Move X23, [X31+24]
	145 Move X30, [X31+64]
	146 Move X25, [X31+72]
	147 Call 0x1C17F20

Method: System.Boolean ReportDebugOfLevel(ExitGames.Client.Photon.DebugLevel levelOfMessage)

Disassembly:
	0x034FA710 CMP W11, W9
	0x034FA714 STRB W12, [X21 + 0x12]
	0x034FA718 STR W10, [X19]
	0x034FA71C B.CS 0x34FA9AC
	0x034FA720 ADD X11, X20, W11, SXTW
	0x034FA724 LDRB W11, [X11 + 0x20]
	0x034FA728 ADD W8, W8, 0x4
	0x034FA72C CMP W10, W9
	0x034FA730 STRB W11, [X21 + 0x10]
	0x034FA734 STR W8, [X19]
	0x034FA738 B.CS 0x34FA9AC

ISIL:
	001 Move [X31-16], X30
	002 Move X8, [X0+16]
	003 Compare X8, 0
	004 JumpIfEqual {13}
	005 Move X8, [X8+16]
	006 Compare X8, 0
	007 JumpIfEqual {13}
	008 Move W8, [X8+64]
	009 NotImplemented "Instruction CMP not yet implemented."
	010 NotImplemented "Instruction CSET not yet implemented."
	011 Move X30, [X31+16]
	012 Return X0
	013 Call 0x1C17F20

Method: System.Void EnqueueDebugReturn(ExitGames.Client.Photon.DebugLevel debugLevel, System.String message)

Disassembly:
	0x034FA73C ADD X8, X20, W10, SXTW
	0x034FA740 LDRB W8, [X8 + 0x20]
	0x034FA744 ADRP X24, 0xC01000
	0x034FA748 LDR X24, [X24 + 0xF00]
	0x034FA74C ADD X23, X21, 0x54
	0x034FA750 STRB W8, [X21 + 0x20]

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+16]
	003 Compare X0, 0
	004 JumpIfEqual {8}
	005 Move X30, [X31+16]
	006 Call PeerBase.EnqueueDebugReturn, X0, X1, X2
	007 Return 
	008 Call 0x1C17F20

Method: System.Void HandleException(ExitGames.Client.Photon.StatusCode statusCode)

Disassembly:
	0x034FA754 LDR X0, [X24]
	0x034FA758 LDR W8, [X0 + 0xE0]
	0x034FA75C CBNZ W8, 0x34FA764
	0x034FA760 BL 0x1C16DFC
	0x034FA764 MOV X0, X23
	0x034FA768 MOV X1, X20
	0x034FA76C MOV X2, X19
	0x034FA770 MOV X3, X31
	0x034FA774 BL 0x3506A78
	0x034FA778 ADD X0, X21, 0x14
	0x034FA77C MOV X1, X20
	0x034FA780 MOV X2, X19
	0x034FA784 MOV X3, X31
	0x034FA788 BL 0x3506A78
	0x034FA78C CBZ X22, 0x34FA9B0
	0x034FA790 LDR X9, [X22 + 0x98]
	0x034FA794 LDRSW X8, [X21 + 0x54]
	0x034FA798 ADD X9, X9, X8
	0x034FA79C STR X9, [X22 + 0x98]
	0x034FA7A0 LDRB W9, [X21 + 0x11]
	0x034FA7A4 SUB W9, W9, 0x1
	0x034FA7A8 CMP W9, 0xF
	0x034FA7AC B.HI 0x34FA8A4
	0x034FA7B0 ADRP X10, 0xFFFFFFFFFD69C000
	0x034FA7B4 ADD X10, X10, 0xA9B
	0x034FA7B8 ADR X11, 0x10
	0x034FA7BC LDRB W12, [X10, X9, LSL]
	0x034FA7C0 ADD X11, X11, X12, 0x2, LSL
	0x034FA7C4 BR X11
	0x034FA7C8 LDR X0, [X24]
	0x034FA7CC ADD X22, X21, 0x4C
	0x034FA7D0 LDR W8, [X0 + 0xE0]
	0x034FA7D4 CBNZ W8, 0x34FA7DC
	0x034FA7D8 BL 0x1C16DFC
	0x034FA7DC MOV X0, X22
	0x034FA7E0 MOV X1, X20
	0x034FA7E4 MOV X2, X19
	0x034FA7E8 MOV X3, X31
	0x034FA7EC BL 0x3506A78
	0x034FA7F0 ADD X0, X21, 0x50
	0x034FA7F4 MOV X1, X20
	0x034FA7F8 MOV X2, X19

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xEE6000
	007 Move W8, [X21+2622]
	008 Move W20, W1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0xC3A000
	015 Move X0, [X0+2912]
	016 Call 0x1C17CF4
	017 Move X0, 0xC3A000
	018 Move X0, [X0+2096]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+2622], W8
	022 Move X0, [X19+16]
	023 Move W8, 3
	024 Move [X19+28], W8
	025 Compare X0, 0
	026 JumpIfEqual {52}
	027 Move X21, 0xC3A000
	028 Move X22, 0xC3A000
	029 Move X21, [X21+2096]
	030 Move X22, [X22+2912]
	031 Move W1, W20
	032 Call PeerBase.EnqueueStatusCallback, X0, X1
	033 Move X0, [X21]
	034 Move X20, [X19+16]
	035 Call 0x1C17F10
	036 Move X2, [X22]
	037 Move X1, X19
	038 Move X3, X31
	039 Move X21, X0
	040 Call MyAction..ctor, X0, X1, X2
	041 Compare X20, 0
	042 JumpIfEqual {52}
	043 Move X0, X20
	044 Move X1, X21
	045 Move X20, [X31+32]
	046 Move X19, [X31+40]
	047 Move X22, [X31+16]
	048 Move X21, [X31+24]
	049 Move X30, [X31+48]
	050 Call PeerBase.EnqueueActionForDispatch, X0, X1
	051 Return 
	052 Call 0x1C17F20

Method: System.Boolean TryParseAddress(System.String url, out System.String address, out System.UInt16 port, out System.String urlProtocol, out System.String urlPath)

Disassembly:
	0x034F9FC4 STP X22, X21, [X31 + 0x10]
	0x034F9FC8 STP X20, X19, [X31 + 0x20]
	0x034F9FCC ADRP X21, 0xEE6000
	0x034F9FD0 ADRP X20, 0xC07000
	0x034F9FD4 LDRB W8, [X21 + 0xA42]
	0x034F9FD8 LDR X20, [X20 + 0x968]
	0x034F9FDC MOV X19, X0
	0x034F9FE0 TBNZ X8, 0x0, 0x34FA004
	0x034F9FE4 ADRP X0, 0xC07000
	0x034F9FE8 LDR X0, [X0 + 0x968]
	0x034F9FEC BL 0x1C16CF4
	0x034F9FF0 ADRP X0, 0xC3A000
	0x034F9FF4 LDR X0, [X0 + 0xBC8]
	0x034F9FF8 BL 0x1C16CF4
	0x034F9FFC MOVZ W8, 0x1
	0x034FA000 STRB W8, [X21 + 0xA42]
	0x034FA004 LDR X0, [X20]
	0x034FA008 STR X31, [X31 + 0x8]
	0x034FA00C LDR W8, [X0 + 0xE0]
	0x034FA010 CBNZ W8, 0x34FA018
	0x034FA014 BL 0x1C16DFC
	0x034FA018 ADD X1, X31, 0x8
	0x034FA01C MOV X0, X19
	0x034FA020 MOV X2, X31
	0x034FA024 BL 0x366D010
	0x034FA028 TBNZ X0, 0x0, 0x34FA160
	0x034FA02C MOV X0, X19
	0x034FA030 MOV X1, X31
	0x034FA034 BL 0x369B2B8
	0x034FA038 CBZ X0, 0x34FA178
	0x034FA03C LDR X21, [X0 + 0x20]
	0x034FA040 CBZ X21, 0x34FA178
	0x034FA044 LDR W8, [X21 + 0x18]
	0x034FA048 CMP W8, 0x1
	0x034FA04C B.LT 0x34FA0AC
	0x034FA050 MOV W22, W31
	0x034FA054 CMP W22, W8
	0x034FA058 B.CS 0x34FA17C
	0x034FA05C ADD X8, X21, W22, 0x3, SXTW
	0x034FA060 LDR X20, [X8 + 0x20]
	0x034FA064 CBZ X20, 0x34FA178
	0x034FA068 MOV X0, X20
	0x034FA06C MOV X1, X31
	0x034FA070 BL 0x366D604
	0x034FA074 CMP W0, 0x17
	0x034FA078 B.EQ 0x34FA0C4
	0x034FA07C LDR X8, [X31 + 0x8]
	0x034FA080 CBNZ X8, 0x34FA09C
	0x034FA084 MOV X0, X20
	0x034FA088 MOV X1, X31
	0x034FA08C BL 0x366D604
	0x034FA090 CMP W0, 0x2
	0x034FA094 B.NE 0x34FA09C
	0x034FA098 STR X20, [X31 + 0x8]
	0x034FA09C LDR W8, [X21 + 0x18]
	0x034FA0A0 ADD W22, W22, 0x1
	0x034FA0A4 CMP W22, W8
	0x034FA0A8 B.LT 0x34FA054
	0x034FA0AC LDR X0, [X31 + 0x8]
	0x034FA0B0 CBZ X0, 0x34FA110
	0x034FA0B4 LDR X8, [X0]
	0x034FA0B8 LDP X9, X1, [X8 + 0x168]
	0x034FA0BC BLR X9
	0x034FA0C0 B 0x34FA128
	0x034FA0C4 LDR X8, [X20]
	0x034FA0C8 MOV X0, X20
	0x034FA0CC LDP X9, X1, [X8 + 0x168]
	0x034FA0D0 BLR X9
	0x034FA0D4 ADRP X21, 0xEE5000
	0x034FA0D8 LDRB W8, [X21 + 0xA85]
	0x034FA0DC MOV X19, X0
	0x034FA0E0 CBNZ W8, 0x34FA0F8
	0x034FA0E4 ADRP X0, 0xC39000
	0x034FA0E8 LDR X0, [X0 + 0xAF0]
	0x034FA0EC BL 0x1C16CF4
	0x034FA0F0 MOVZ W8, 0x1
	0x034FA0F4 STRB W8, [X21 + 0xA85]
	0x034FA0F8 ADRP X8, 0xC39000
	0x034FA0FC LDR X8, [X8 + 0xAF0]
	0x034FA100 LDR X8, [X8]
	0x034FA104 LDR X8, [X8 + 0xB8]
	0x034FA108 STR X19, [X8]
	0x034FA10C B 0x34FA164
	0x034FA110 ADRP X8, 0xC39000
	0x034FA114 LDR X8, [X8 + 0xBC8]
	0x034FA118 MOV X0, X19
	0x034FA11C MOV X2, X31
	0x034FA120 LDR X1, [X8]
	0x034FA124 BL 0x321B938
	0x034FA128 ADRP X20, 0xEE5000
	0x034FA12C LDRB W8, [X20 + 0xA85]
	0x034FA130 MOV X19, X0
	0x034FA134 CBNZ W8, 0x34FA14C
	0x034FA138 ADRP X0, 0xC39000
	0x034FA13C LDR X0, [X0 + 0xAF0]
	0x034FA140 BL 0x1C16CF4
	0x034FA144 MOVZ W8, 0x1
	0x034FA148 STRB W8, [X20 + 0xA85]
	0x034FA14C ADRP X8, 0xC39000
	0x034FA150 LDR X8, [X8 + 0xAF0]
	0x034FA154 LDR X8, [X8]
	0x034FA158 LDR X8, [X8 + 0xB8]
	0x034FA15C STR X19, [X8]
	0x034FA160 LDR X20, [X31 + 0x8]
	0x034FA164 MOV X0, X20
	0x034FA168 LDP X20, X19, [X31 + 0x20]
	0x034FA16C LDP X22, X21, [X31 + 0x10]
	0x034FA170 LDR X30, [X31], #0x30
	0x034FA174 RET
	0x034FA178 BL 0x1C16F20
	0x034FA17C BL 0x1C16F28
	0x034FA180 STR X30, [X31 - 0x10]!
	0x034FA184 LDR X0, [X0 + 0x10]
	0x034FA188 CBZ X0, 0x34FA19C
	0x034FA18C LDR X8, [X0]
	0x034FA190 LDP X2, X1, [X8 + 0x1E8]
	0x034FA194 LDR X30, [X31], #0x10
	0x034FA198 BR X2
	0x034FA19C BL 0x1C16F20
	0x034FA1A0 STR X30, [X31 - 0x20]!
	0x034FA1A4 STP X20, X19, [X31 + 0x10]
	0x034FA1A8 ADRP X19, 0xEE5000
	0x034FA1AC ADRP X20, 0xC39000
	0x034FA1B0 LDRB W8, [X19 + 0xA43]
	0x034FA1B4 LDR X20, [X20 + 0xBA0]
	0x034FA1B8 TBNZ X8, 0x0, 0x34FA1D0
	0x034FA1BC ADRP X0, 0xC39000
	0x034FA1C0 LDR X0, [X0 + 0xBA0]
	0x034FA1C4 BL 0x1C16CF4
	0x034FA1C8 MOVZ W8, 0x1
	0x034FA1CC STRB W8, [X19 + 0xA43]
	0x034FA1D0 LDR X0, [X20]
	0x034FA1D4 BL 0x1C16F10
	0x034FA1D8 MOV X1, X31
	0x034FA1DC MOV X19, X0
	0x034FA1E0 BL 0x33BDD8C
	0x034FA1E4 LDR X8, [X20]
	0x034FA1E8 LDR X8, [X8 + 0xB8]
	0x034FA1EC STR X19, [X8]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X25, 0xEE7000
	010 Move X24, 0xBFD000
	011 Move W8, [X25+2623]
	012 Move X24, [X24+632]
	013 Move X22, X5
	014 Move X23, X4
	015 Move X19, X3
	016 Move X20, X2
	017 Move X21, X1
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {39}
	022 Move X0, 0xBFD000
	023 Move X0, [X0+632]
	024 Call 0x1C17CF4
	025 Move X0, 0xC3A000
	026 Move X0, [X0+2888]
	027 Call 0x1C17CF4
	028 Move X0, 0xBFB000
	029 Move X0, [X0+3784]
	030 Call 0x1C17CF4
	031 Move X0, 0xBFA000
	032 Move X0, [X0+3784]
	033 Call 0x1C17CF4
	034 Move X0, 0xBFA000
	035 Move X0, [X0+2120]
	036 Call 0x1C17CF4
	037 Move W8, 1
	038 Move [X25+2623], W8
	039 Move X8, [X24]
	040 Move X0, X21
	041 Move X1, X31
	042 Move X8, [X8+184]
	043 Move X8, [X8]
	044 Move [X20], X8
	045 NotImplemented "Instruction STRH not yet implemented."
	046 Move X8, [X24]
	047 Move X8, [X8+184]
	048 Move X8, [X8]
	049 Move [X23], X8
	050 Move X8, [X24]
	051 Move X8, [X8+184]
	052 Move X8, [X8]
	053 Move [X22], X8
	054 Call String.IsNullOrEmpty, X0
	055 Move TEMP, X0
	056 And TEMP, TEMP, 1
	057 Compare TEMP, 1
	058 JumpIfEqual {165}
	059 Compare X21, 0
	060 JumpIfEqual {175}
	061 Move X8, 0xC3A000
	062 Move X8, [X8+2888]
	063 Move X0, X21
	064 Move X2, X31
	065 Move X1, [X8]
	066 Call String.IndexOf, X0, X1
	067 Move TEMP, X0
	068 And TEMP, TEMP, -2147483648
	069 Compare TEMP, -2147483648
	070 JumpIfEqual {85}
	071 Move W24, W0
	072 Move X0, X21
	073 Move W1, W31
	074 Move W2, W24
	075 Move X3, X31
	076 Call String.Substring, X0, X1, X2
	077 Move [X23], X0
	078 Add W1, W24, 3
	079 Move X0, X21
	080 Move X2, X31
	081 Call String.Substring, X0, X1
	082 Move X21, X0
	083 Compare X0, 0
	084 JumpIfEqual {175}
	085 Move X8, 0xBFB000
	086 Move X8, [X8+3784]
	087 Move X0, X21
	088 Move X2, X31
	089 Move X1, [X8]
	090 Call String.IndexOf, X0, X1
	091 Move TEMP, X0
	092 And TEMP, TEMP, -2147483648
	093 Compare TEMP, -2147483648
	094 JumpIfEqual {109}
	095 Move W23, W0
	096 Move X0, X21
	097 Move W1, W23
	098 Move X2, X31
	099 Call String.Substring, X0, X1
	100 Move [X22], X0
	101 Move X0, X21
	102 Move W1, W31
	103 Move W2, W23
	104 Move X3, X31
	105 Call String.Substring, X0, X1, X2
	106 Move X21, X0
	107 Compare X0, 0
	108 JumpIfEqual {175}
	109 Move W1, 58
	110 Move X0, X21
	111 Move X2, X31
	112 Call String.LastIndexOf, X0, X1
	113 Move TEMP, X0
	114 And TEMP, TEMP, -2147483648
	115 Compare TEMP, -2147483648
	116 JumpIfEqual {165}
	117 Move W22, W0
	118 Move W1, 58
	119 Move X0, X21
	120 Move X2, X31
	121 Call String.IndexOf, X0, X1
	122 NotImplemented "Instruction CMP not yet implemented."
	123 Move X0, X21
	124 Move W1, W31
	125 Move W2, W22
	126 Move X3, X31
	127 Call String.Substring, X0, X1, X2
	128 Move [X20], X0
	129 Add W1, W22, 1
	130 Move X0, X21
	131 Move X2, X31
	132 Call String.Substring, X0, X1
	133 Move X1, X19
	134 Move X20, [X31+48]
	135 Move X19, [X31+56]
	136 Move X22, [X31+32]
	137 Move X21, [X31+40]
	138 Move X24, [X31+16]
	139 Move X23, [X31+24]
	140 Move X2, X31
	141 Move X30, [X31+64]
	142 Move X25, [X31+72]
	143 Call UInt16.TryParse, X0, X1
	144 Return X0
	145 Move X8, 0xBFA000
	146 Move X8, [X8+3784]
	147 Move X0, X21
	148 Move X2, X31
	149 Move X1, [X8]
	150 Call String.Contains, X0, X1
	151 Move TEMP, X0
	152 And TEMP, TEMP, 1
	153 Compare TEMP, 1
	154 JumpIfNotEqual {165}
	155 Move X8, 0xBFA000
	156 Move X8, [X8+2120]
	157 Move X0, X21
	158 Move X2, X31
	159 Move X1, [X8]
	160 Call String.Contains, X0, X1
	161 Move TEMP, X0
	162 And TEMP, TEMP, 1
	163 Compare TEMP, 1
	164 JumpIfEqual {123}
	165 Move X20, [X31+48]
	166 Move X19, [X31+56]
	167 Move X22, [X31+32]
	168 Move X21, [X31+40]
	169 Move X24, [X31+16]
	170 Move X23, [X31+24]
	171 Move W0, W31
	172 Move X30, [X31+64]
	173 Move X25, [X31+72]
	174 Return X0
	175 Call 0x1C17F20

Method: System.Boolean IpAddressTryParse(System.String strIP, out System.Net.IPAddress address)

Disassembly:
	0x034FA7FC MOV X3, X31
	0x034FA800 BL 0x3506A78
	0x034FA804 B 0x34FA998
	0x034FA808 SUB W22, W8, 0xC
	0x034FA80C CBNZ W22, 0x34FA940
	0x034FA810 B 0x34FA998
	0x034FA814 LDR X0, [X24]
	0x034FA818 ADD X22, X21, 0x24
	0x034FA81C LDR W8, [X0 + 0xE0]
	0x034FA820 CBNZ W8, 0x34FA828
	0x034FA824 BL 0x1C16DFC
	0x034FA828 MOV X0, X22
	0x034FA82C MOV X1, X20
	0x034FA830 MOV X2, X19
	0x034FA834 MOV X3, X31
	0x034FA838 BL 0x3506A78
	0x034FA83C ADD X0, X21, 0x28
	0x034FA840 MOV X1, X20
	0x034FA844 MOV X2, X19
	0x034FA848 MOV X3, X31
	0x034FA84C BL 0x3506A78
	0x034FA850 ADD X0, X21, 0x2C
	0x034FA854 MOV X1, X20
	0x034FA858 MOV X2, X19
	0x034FA85C MOV X3, X31
	0x034FA860 BL 0x3506A78
	0x034FA864 ADD X0, X21, 0x30
	0x034FA868 MOV X1, X20
	0x034FA86C MOV X2, X19
	0x034FA870 MOV X3, X31
	0x034FA874 BL 0x3506A78
	0x034FA878 ADD X0, X21, 0x34
	0x034FA87C MOV X1, X20
	0x034FA880 MOV X2, X19
	0x034FA884 MOV X3, X31
	0x034FA888 BL 0x3506A78
	0x034FA88C LDR W8, [X21 + 0x54]
	0x034FA890 LDR W9, [X21 + 0x28]
	0x034FA894 SUB W22, W8, 0x20
	0x034FA898 STR W9, [X21 + 0x38]
	0x034FA89C CBNZ W22, 0x34FA940
	0x034FA8A0 B 0x34FA998
	0x034FA8A4 LDR W9, [X19]
	0x034FA8A8 ADD W8, W8, W9
	0x034FA8AC SUB W8, W8, 0xC
	0x034FA8B0 B 0x34FA994
	0x034FA8B4 LDR X0, [X24]
	0x034FA8B8 LDR W8, [X0 + 0xE0]
	0x034FA8BC CBNZ W8, 0x34FA8C4
	0x034FA8C0 BL 0x1C16DFC
	0x034FA8C4 ADD X0, X31, 0xC
	0x034FA8C8 MOV X1, X20
	0x034FA8CC MOV X2, X19
	0x034FA8D0 MOV X3, X31
	0x034FA8D4 BL 0x3506B0C
	0x034FA8D8 LDR W8, [X19]
	0x034FA8DC MOVZ W9, 0xFFFE
	0x034FA8E0 ADD W8, W8, 0x1E
	0x034FA8E4 STR W8, [X19]
	0x034FA8E8 LDRH W8, [X22 + 0x68]
	0x034FA8EC CMP W8, W9
	0x034FA8F0 B.CC 0x34FA998
	0x034FA8F4 LDRH W8, [X31 + 0xC]
	0x034FA8F8 STRH W8, [X22 + 0x68]
	0x034FA8FC B 0x34FA998
	0x034FA900 LDR X0, [X24]
	0x034FA904 ADD X22, X21, 0x18
	0x034FA908 B 0x34FA914
	0x034FA90C LDR X0, [X24]
	0x034FA910 ADD X22, X21, 0x1C
	0x034FA914 LDR W8, [X0 + 0xE0]
	0x034FA918 CBNZ W8, 0x34FA920
	0x034FA91C BL 0x1C16DFC
	0x034FA920 MOV X0, X22
	0x034FA924 MOV X1, X20
	0x034FA928 MOV X2, X19
	0x034FA92C MOV X3, X31
	0x034FA930 BL 0x3506A78
	0x034FA934 LDR W8, [X23]
	0x034FA938 SUB W22, W8, 0x10
	0x034FA93C CBZ W22, 0x34FA998
	0x034FA940 ADRP X8, 0xC39000
	0x034FA944 LDR X8, [X8 + 0x778]
	0x034FA948 LDR X0, [X8]
	0x034FA94C LDR W8, [X0 + 0xE0]
	0x034FA950 CBNZ W8, 0x34FA958
	0x034FA954 BL 0x1C16DFC
	0x034FA958 BL 0x34F5754
	0x034FA95C CBZ X0, 0x34FA9B0
	0x034FA960 LDR W2, [X19]
	0x034FA964 MOV X1, X20
	0x034FA968 MOV W3, W22
	0x034FA96C MOV X4, X31
	0x034FA970 MOV X23, X0
	0x034FA974 BL 0x3517F60
	0x034FA978 MOV X0, X23
	0x034FA97C MOV W1, W31
	0x034FA980 MOV X2, X31
	0x034FA984 STR X23, [X21 + 0x58]
	0x034FA988 BL 0x3517FDC
	0x034FA98C LDR W8, [X19]
	0x034FA990 ADD W8, W8, W22
	0x034FA994 STR W8, [X19]
	0x034FA998 LDP X20, X19, [X31 + 0x30]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0xEE6000
	009 Move W8, [X21+2624]
	010 Move X19, X2
	011 Move X20, X1
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {27}
	016 Move X0, 0xBFA000
	017 Move X0, [X0+1560]
	018 Call 0x1C17CF4
	019 Move X0, 0xC03000
	020 Move X0, [X0+2264]
	021 Call 0x1C17CF4
	022 Move X0, 0xC07000
	023 Move X0, [X0+2408]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X21+2624], W8
	027 Move X0, X20
	028 Move X1, X31
	029 Move [X31+12], W31
	030 Move [X19], X31
	031 Call String.IsNullOrEmpty, X0
	032 Move W8, W0
	033 Move W0, W31
	034 Move TEMP, X8
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfEqual {111}
	038 Move X8, 0xC03000
	039 Move X8, [X8+2264]
	040 Move W1, 1
	041 Move X0, [X8]
	042 Call 0x1C17D6C
	043 Compare X0, 0
	044 JumpIfEqual {120}
	045 Move W8, [X0+24]
	046 Move X1, X0
	047 Compare W8, 0
	048 JumpIfEqual {119}
	049 Move W8, 46
	050 NotImplemented "Instruction STRH not yet implemented."
	051 Compare X20, 0
	052 JumpIfEqual {120}
	053 Move X0, X20
	054 Move X2, X31
	055 Call String.Split, X0, X1
	056 Compare X0, 0
	057 JumpIfEqual {120}
	058 Move W8, [X0+24]
	059 Move X20, X0
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Move X8, 0xBFA000
	062 Move X8, [X8+1560]
	063 Move W1, 4
	064 Move X0, [X8]
	065 Call 0x1C17D6C
	066 Move X8, [X20+24]
	067 Move X21, X0
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Move X22, X31
	070 And X8, X8, 0
	071 Add X23, X20, 32
	072 Add X24, X21, 32
	073 NotImplemented "Instruction CMP not yet implemented."
	074 Move X0, [X23]
	075 Add X1, X31, 12
	076 Move X2, X31
	077 Move [X31+12], W31
	078 Call Byte.TryParse, X0, X1
	079 Move TEMP, X0
	080 And TEMP, TEMP, 1
	081 Compare TEMP, 1
	082 JumpIfNotEqual {110}
	083 Compare X21, 0
	084 JumpIfEqual {120}
	085 Move W8, [X21+24]
	086 NotImplemented "Instruction CMP not yet implemented."
	087 Move W8, [X31+12]
	088 Move [X24], W8
	089 Move W8, [X20+24]
	090 Add X22, X22, 1
	091 NotImplemented "Instruction CMP not yet implemented."
	092 Compare X21, 0
	093 JumpIfEqual {120}
	094 Move W8, [X21+24]
	095 Compare W8, 0
	096 JumpIfEqual {119}
	097 Move W8, [X21+32]
	098 Compare W8, 0
	099 JumpIfEqual {110}
	100 Move X8, 0xC07000
	101 Move X8, [X8+2408]
	102 Move X0, [X8]
	103 Call 0x1C17F10
	104 Move X1, X21
	105 Move X2, X31
	106 Move X20, X0
	107 Call IPAddress..ctor, X0, X1
	108 Move W0, 1
	109 Move [X19], X20
	110 Move W0, W31
	111 Move X20, [X31+48]
	112 Move X19, [X31+56]
	113 Move X22, [X31+32]
	114 Move X21, [X31+40]
	115 Move X24, [X31+16]
	116 Move X23, [X31+24]
	117 Move X30, [X31+64]
	118 Return X0
	119 Call 0x1C17F28
	120 Call 0x1C17F20

Method: System.Net.IPAddress[] GetIpAddresses(System.String hostname)

Disassembly:
	0x034FA99C LDP X22, X21, [X31 + 0x20]
	0x034FA9A0 LDP X24, X23, [X31 + 0x10]
	0x034FA9A4 LDR X30, [X31], #0x40
	0x034FA9A8 RET
	0x034FA9AC BL 0x1C16F28
	0x034FA9B0 BL 0x1C16F20
	0x034FA9B4 STP X30, X23, [X31 - 0x30]!
	0x034FA9B8 STP X22, X21, [X31 + 0x10]
	0x034FA9BC STP X20, X19, [X31 + 0x20]
	0x034FA9C0 MOV X22, X1
	0x034FA9C4 MOVZ W8, 0x4
	0x034FA9C8 MOV X1, X31
	0x034FA9CC MOV W19, W4
	0x034FA9D0 MOV X20, X3
	0x034FA9D4 MOV W21, W2
	0x034FA9D8 MOV X23, X0
	0x034FA9DC STRB W8, [X0 + 0x20]
	0x034FA9E0 BL 0x33BDD8C
	0x034FA9E4 MOV X1, X22
	0x034FA9E8 MOV W2, W21
	0x034FA9EC MOV X3, X20
	0x034FA9F0 MOV W4, W19
	0x034FA9F4 LDP X20, X19, [X31 + 0x20]
	0x034FA9F8 LDP X22, X21, [X31 + 0x10]
	0x034FA9FC MOV X0, X23
	0x034FAA00 LDP X30, X23, [X31], #0x30
	0x034FAA04 B 0x34FAA08
	0x034FAA08 STR X30, [X31 - 0x40]!
	0x034FAA0C STP X24, X23, [X31 + 0x10]
	0x034FAA10 STP X22, X21, [X31 + 0x20]
	0x034FAA14 STP X20, X19, [X31 + 0x30]
	0x034FAA18 ADRP X24, 0xEE5000
	0x034FAA1C LDRB W8, [X24 + 0xA4E]
	0x034FAA20 MOV W23, W4
	0x034FAA24 MOV X21, X3
	0x034FAA28 MOV W22, W2
	0x034FAA2C MOV X20, X1
	0x034FAA30 MOV X19, X0
	0x034FAA34 TBNZ X8, 0x0, 0x34FAA64
	0x034FAA38 ADRP X0, 0xBF9000
	0x034FAA3C LDR X0, [X0 + 0x618]
	0x034FAA40 BL 0x1C16CF4
	0x034FAA44 ADRP X0, 0xC01000
	0x034FAA48 LDR X0, [X0 + 0xF00]
	0x034FAA4C BL 0x1C16CF4
	0x034FAA50 ADRP X0, 0xC02000
	0x034FAA54 LDR X0, [X0 + 0xBA8]
	0x034FAA58 BL 0x1C16CF4
	0x034FAA5C MOVZ W8, 0x1
	0x034FAA60 STRB W8, [X24 + 0xA4E]
	0x034FAA64 MOVZ W8, 0x1
	0x034FAA68 AND W10, W22, 0xFF
	0x034FAA6C STRB W8, [X19 + 0x10]
	0x034FAA70 SUB W8, W10, 0x2
	0x034FAA74 MOVZ W9, 0xC
	0x034FAA78 CMP W8, 0xD
	0x034FAA7C STRB W22, [X19 + 0x11]
	0x034FAA80 STRB W23, [X19 + 0x12]
	0x034FAA84 STR X21, [X19 + 0x58]
	0x034FAA88 STR W9, [X19 + 0x54]
	0x034FAA8C B.HI 0x34FACDC
	0x034FAA90 ADRP X9, 0xFFFFFFFFFD69C000
	0x034FAA94 ADD X9, X9, 0xAAB
	0x034FAA98 ADR X10, 0x10
	0x034FAA9C LDRB W11, [X9, X8, LSL]
	0x034FAAA0 ADD X10, X10, X11, 0x2, LSL
	0x034FAAA4 BR X10
	0x034FAAA8 MOVZ W8, 0x2C
	0x034FAAAC STR W8, [X19 + 0x54]
	0x034FAAB0 ADRP X8, 0xBF9000
	0x034FAAB4 LDR X8, [X8 + 0x618]
	0x034FAAB8 MOVZ W1, 0x20
	0x034FAABC LDR X0, [X8]
	0x034FAAC0 BL 0x1C16D6C
	0x034FAAC4 CBZ X0, 0x34FACF4
	0x034FAAC8 LDR W8, [X0 + 0x18]
	0x034FAACC MOV X21, X0
	0x034FAAD0 CBZ W8, 0x34FACF0
	0x034FAAD4 CMP W8, 0x1
	0x034FAAD8 STRB W31, [X21 + 0x20]
	0x034FAADC B.EQ 0x34FACF0
	0x034FAAE0 MOVZ W8, 0x2
	0x034FAAE4 STRB W31, [X21 + 0x21]
	0x034FAAE8 STR W8, [X31 + 0xC]
	0x034FAAEC CBZ X20, 0x34FACF4
	0x034FAAF0 LDR X0, [X20 + 0x10]
	0x034FAAF4 CBZ X0, 0x34FACF4
	0x034FAAF8 MOV X1, X31
	0x034FAAFC BL 0x350243C
	0x034FAB00 ADRP X8, 0xC01000
	0x034FAB04 LDR X8, [X8 + 0xF00]
	0x034FAB08 MOV W22, W0
	0x034FAB0C LDR X8, [X8]
	0x034FAB10 LDR W9, [X8 + 0xE0]
	0x034FAB14 CBNZ W9, 0x34FAB20
	0x034FAB18 MOV X0, X8
	0x034FAB1C BL 0x1C16DFC
	0x034FAB20 ADD X2, X31, 0xC
	0x034FAB24 MOV W0, W22
	0x034FAB28 MOV X1, X21
	0x034FAB2C MOV X3, X31
	0x034FAB30 BL 0x3506760
	0x034FAB34 LDR W8, [X21 + 0x18]
	0x034FAB38 CMP W8, 0x4
	0x034FAB3C B.LS 0x34FACF0
	0x034FAB40 CMP W8, 0x5
	0x034FAB44 STRB W31, [X21 + 0x24]
	0x034FAB48 B.EQ 0x34FACF0
	0x034FAB4C CMP W8, 0x6
	0x034FAB50 STRB W31, [X21 + 0x25]
	0x034FAB54 B.LS 0x34FACF0
	0x034FAB58 MOVZ W9, 0x80
	0x034FAB5C CMP W8, 0x7
	0x034FAB60 STRB W9, [X21 + 0x26]
	0x034FAB64 B.EQ 0x34FACF0
	0x034FAB68 STRB W31, [X21 + 0x27]
	0x034FAB6C LDR X9, [X20 + 0x10]
	0x034FAB70 CBZ X9, 0x34FACF4
	0x034FAB74 CMP W8, 0xB
	0x034FAB78 B.LS 0x34FACF0
	0x034FAB7C LDRB W9, [X9 + 0x6A]
	0x034FAB80 CMP W8, 0xF
	0x034FAB84 STRB W9, [X21 + 0x2B]
	0x034FAB88 B.LS 0x34FACF0
	0x034FAB8C CMP W8, 0x13
	0x034FAB90 STRB W31, [X21 + 0x2F]
	0x034FAB94 B.LS 0x34FACF0
	0x034FAB98 CMP W8, 0x16
	0x034FAB9C STRB W31, [X21 + 0x33]
	0x034FABA0 B.LS 0x34FACF0
	0x034FABA4 MOVZ W9, 0x13
	0x034FABA8 CMP W8, 0x17
	0x034FABAC STRB W9, [X21 + 0x36]
	0x034FABB0 B.EQ 0x34FACF0
	0x034FABB4 MOVZ W9, 0x88
	0x034FABB8 CMP W8, 0x1B
	0x034FABBC STRB W9, [X21 + 0x37]
	0x034FABC0 B.LS 0x34FACF0
	0x034FABC4 MOVZ W9, 0x2
	0x034FABC8 CMP W8, 0x1F
	0x034FABCC STRB W9, [X21 + 0x3B]
	0x034FABD0 B.LS 0x34FACF0
	0x034FABD4 STRB W9, [X21 + 0x3F]
	0x034FABD8 ADRP X8, 0xC02000
	0x034FABDC LDR X8, [X8 + 0xBA8]
	0x034FABE0 LDR X0, [X8]
	0x034FABE4 BL 0x1C16F10
	0x034FABE8 MOV X1, X21
	0x034FABEC MOV X2, X31
	0x034FABF0 MOV X20, X0
	0x034FABF4 BL 0x351EB5C
	0x034FABF8 STR X20, [X19 + 0x58]
	0x034FABFC B 0x34FACDC
	0x034FAC00 MOVZ W8, 0xC
	0x034FAC04 STR W8, [X19 + 0x54]
	0x034FAC08 CBZ X20, 0x34FACF4
	0x034FAC0C LDRB W8, [X20 + 0x40]
	0x034FAC10 CMP W8, 0x3
	0x034FAC14 B.EQ 0x34FACDC
	0x034FAC18 MOVZ W9, 0x2
	0x034FAC1C CMP W8, 0x6
	0x034FAC20 MOVZ W8, 0x4
	0x034FAC24 CSEL W8, W9, W8, EQ
	0x034FAC28 STRB W9, [X19 + 0x10]
	0x034FAC2C STRB W8, [X19 + 0x20]
	0x034FAC30 B 0x34FACDC
	0x034FAC34 CBZ X21, 0x34FACF4
	0x034FAC38 MOV X0, X21
	0x034FAC3C MOV X1, X31
	0x034FAC40 BL 0x351806C
	0x034FAC44 ADD W8, W0, 0xC
	0x034FAC48 B 0x34FAC80
	0x034FAC4C CBZ X21, 0x34FACF4
	0x034FAC50 MOV X0, X21
	0x034FAC54 MOV X1, X31
	0x034FAC58 BL 0x351806C
	0x034FAC5C ADD W8, W0, 0x10
	0x034FAC60 STR W8, [X19 + 0x54]
	0x034FAC64 STRB W31, [X19 + 0x10]
	0x034FAC68 B 0x34FACDC
	0x034FAC6C CBZ X21, 0x34FACF4
	0x034FAC70 MOV X0, X21
	0x034FAC74 MOV X1, X31
	0x034FAC78 BL 0x351806C
	0x034FAC7C ADD W8, W0, 0x20
	0x034FAC80 STR W8, [X19 + 0x54]
	0x034FAC84 B 0x34FACDC
	0x034FAC88 CBZ X21, 0x34FACF4
	0x034FAC8C MOV X0, X21
	0x034FAC90 MOV X1, X31
	0x034FAC94 BL 0x351806C
	0x034FAC98 ADD W8, W0, 0x10
	0x034FAC9C MOVZ W9, 0x2
	0x034FACA0 B 0x34FACD4
	0x034FACA4 CBZ X21, 0x34FACF4
	0x034FACA8 MOV X0, X21
	0x034FACAC MOV X1, X31
	0x034FACB0 BL 0x351806C
	0x034FACB4 ADD W8, W0, 0xC
	0x034FACB8 B 0x34FACD0
	0x034FACBC CBZ X21, 0x34FACF4
	0x034FACC0 MOV X0, X21
	0x034FACC4 MOV X1, X31
	0x034FACC8 BL 0x351806C
	0x034FACCC ADD W8, W0, 0x20
	0x034FACD0 MOVZ W9, 0x3
	0x034FACD4 STR W8, [X19 + 0x54]
	0x034FACD8 STRB W9, [X19 + 0x10]
	0x034FACDC LDP X20, X19, [X31 + 0x30]
	0x034FACE0 LDP X22, X21, [X31 + 0x20]
	0x034FACE4 LDP X24, X23, [X31 + 0x10]
	0x034FACE8 LDR X30, [X31], #0x40
	0x034FACEC RET
	0x034FACF0 BL 0x1C16F28
	0x034FACF4 BL 0x1C16F20
	0x034FACF8 SUB X31, X31, 0x30
	0x034FACFC STP X30, X21, [X31 + 0x10]
	0x034FAD00 STP X20, X19, [X31 + 0x20]
	0x034FAD04 ADRP X19, 0xEE5000
	0x034FAD08 LDRB W8, [X19 + 0xA4B]
	0x034FAD0C MOV X20, X1
	0x034FAD10 MOV X21, X0
	0x034FAD14 TBNZ X8, 0x0, 0x34FAD2C
	0x034FAD18 ADRP X0, 0xC39000
	0x034FAD1C LDR X0, [X0 + 0xBF0]
	0x034FAD20 BL 0x1C16CF4
	0x034FAD24 MOVZ W8, 0x1
	0x034FAD28 STRB W8, [X19 + 0xA4B]
	0x034FAD2C CBZ X20, 0x34FADC4
	0x034FAD30 MOVZ W8, 0x4
	0x034FAD34 STRH W31, [X20 + 0x10]
	0x034FAD38 STRB W31, [X20 + 0x12]
	0x034FAD3C STR X31, [X20 + 0x18]
	0x034FAD40 STR W31, [X20 + 0x14]
	0x034FAD44 STUR X31, [X20 + 0x24]
	0x034FAD48 STUR X31, [X20 + 0x34]
	0x034FAD4C STUR X31, [X20 + 0x2C]
	0x034FAD50 STUR X31, [X20 + 0x39]
	0x034FAD54 STUR X31, [X20 + 0x4C]
	0x034FAD58 STUR X31, [X20 + 0x44]
	0x034FAD5C STRB W8, [X20 + 0x20]
	0x034FAD60 STR W31, [X20 + 0x54]
	0x034FAD64 LDR X19, [X21 + 0x10]
	0x034FAD68 STRB W31, [X31 + 0xC]
	0x034FAD6C ADD X1, X31, 0xC
	0x034FAD70 MOV X0, X19
	0x034FAD74 MOV X2, X31
	0x034FAD78 BL 0x33DE64C
	0x034FAD7C LDR X0, [X21 + 0x10]
	0x034FAD80 CBZ X0, 0x34FADD0
	0x034FAD84 ADRP X8, 0xC39000
	0x034FAD88 LDR X8, [X8 + 0xBF0]
	0x034FAD8C LDR X2, [X8]
	0x034FAD90 MOV X1, X20
	0x034FAD94 BL 0x2602314
	0x034FAD98 MOV X20, X31
	0x034FAD9C LDRB W8, [X31 + 0xC]
	0x034FADA0 CBZ W8, 0x34FADB0
	0x034FADA4 MOV X0, X19
	0x034FADA8 MOV X1, X31
	0x034FADAC BL 0x33E14E4
	0x034FADB0 CBNZ X20, 0x34FADC8
	0x034FADB4 LDP X20, X19, [X31 + 0x20]
	0x034FADB8 LDP X30, X21, [X31 + 0x10]
	0x034FADBC ADD X31, X31, 0x30
	0x034FADC0 RET
	0x034FADC4 BL 0x1C16F20
	0x034FADC8 MOV X0, X20
	0x034FADCC BL 0x1C16F18
	0x034FADD0 BL 0x1C16F20
	0x034FADD4 B 0x34FADD8
	0x034FADD8 MOV X21, X0
	0x034FADDC CMP W1, 0x1
	0x034FADE0 B.NE 0x34FADF8
	0x034FADE4 MOV X0, X21
	0x034FADE8 BL 0x3EB1AD0
	0x034FADEC LDR X20, [X0]
	0x034FADF0 BL 0x3EB1AE0
	0x034FADF4 B 0x34FAD9C
	0x034FADF8 MOV X20, X31
	0x034FADFC B 0x34FAE04
	0x034FAE00 MOV X21, X0
	0x034FAE04 LDRB W8, [X31 + 0xC]
	0x034FAE08 CBZ W8, 0x34FAE18
	0x034FAE0C MOV X0, X19
	0x034FAE10 MOV X1, X31
	0x034FAE14 BL 0x33E14E4
	0x034FAE18 CBNZ X20, 0x34FAE24
	0x034FAE1C MOV X0, X21
	0x034FAE20 BL 0x1D2C690
	0x034FAE24 MOV X0, X20
	0x034FAE28 BL 0x1C16F18
	0x034FAE2C BL 0x1990590
	0x034FAE30 MOVZ W8, 0x4
	0x034FAE34 STRH W31, [X0 + 0x10]
	0x034FAE38 STRB W31, [X0 + 0x12]
	0x034FAE3C STR X31, [X0 + 0x18]
	0x034FAE40 STR W31, [X0 + 0x14]
	0x034FAE44 STUR X31, [X0 + 0x24]
	0x034FAE48 STUR X31, [X0 + 0x34]
	0x034FAE4C STUR X31, [X0 + 0x2C]
	0x034FAE50 STUR X31, [X0 + 0x39]
	0x034FAE54 STUR X31, [X0 + 0x4C]
	0x034FAE58 STUR X31, [X0 + 0x44]
	0x034FAE5C STRB W8, [X0 + 0x20]
	0x034FAE60 STR W31, [X0 + 0x54]
	0x034FAE64 RET
	0x034FAE68 CBZ X1, 0x34FAE98
	0x034FAE6C LDR W9, [X0 + 0x14]
	0x034FAE70 LDR W10, [X1 + 0x14]
	0x034FAE74 MOV X8, X0
	0x034FAE78 SUBS W0, W9, W10
	0x034FAE7C B.NE 0x34FAE94
	0x034FAE80 LDRB W9, [X8 + 0x10]
	0x034FAE84 TBNZ X9, 0x0, 0x34FAE94
	0x034FAE88 LDR W8, [X8 + 0x18]
	0x034FAE8C LDR W9, [X1 + 0x18]
	0x034FAE90 SUB W0, W8, W9
	0x034FAE94 RET
	0x034FAE98 MOVZ W0, 0x1
	0x034FAE9C RET
	0x034FAEA0 SUB X31, X31, 0x50
	0x034FAEA4 STP X30, X23, [X31 + 0x20]
	0x034FAEA8 STP X22, X21, [X31 + 0x30]
	0x034FAEAC STP X20, X19, [X31 + 0x40]
	0x034FAEB0 ADRP X20, 0xEE5000
	0x034FAEB4 LDRB W8, [X20 + 0xA52]
	0x034FAEB8 MOV X19, X0
	0x034FAEBC TBNZ X8, 0x0, 0x34FAF04
	0x034FAEC0 ADRP X0, 0xBFA000
	0x034FAEC4 LDR X0, [X0 + 0x9D8]
	0x034FAEC8 BL 0x1C16CF4
	0x034FAECC ADRP X0, 0xBF9000
	0x034FAED0 LDR X0, [X0 + 0x758]
	0x034FAED4 BL 0x1C16CF4
	0x034FAED8 ADRP X0, 0xBF9000
	0x034FAEDC LDR X0, [X0 + 0x9D0]
	0x034FAEE0 BL 0x1C16CF4
	0x034FAEE4 ADRP X0, 0xC39000
	0x034FAEE8 LDR X0, [X0 + 0xBF8]
	0x034FAEEC BL 0x1C16CF4
	0x034FAEF0 ADRP X0, 0xC39000
	0x034FAEF4 LDR X0, [X0 + 0xC00]
	0x034FAEF8 BL 0x1C16CF4
	0x034FAEFC MOVZ W8, 0x1
	0x034FAF00 STRB W8, [X20 + 0xA52]
	0x034FAF04 LDRB W8, [X19 + 0x11]
	0x034FAF08 ADRP X9, 0xBF9000
	0x034FAF0C ADRP X23, 0xBFA000
	0x034FAF10 ADRP X22, 0xBF9000
	0x034FAF14 LDR X9, [X9 + 0x9D0]
	0x034FAF18 LDR X23, [X23 + 0x9D8]
	0x034FAF1C LDR X22, [X22 + 0x758]
	0x034FAF20 CMP W8, 0x1
	0x034FAF24 B.NE 0x34FAF30
	0x034FAF28 LDR X0, [X9]
	0x034FAF2C B 0x34FAF3C
	0x034FAF30 LDR X0, [X9]
	0x034FAF34 CMP W8, 0x10
	0x034FAF38 B.NE 0x34FB054
	0x034FAF3C MOVZ W1, 0x4
	0x034FAF40 BL 0x1C16D6C
	0x034FAF44 MOV X20, X0
	0x034FAF48 LDRB W8, [X19 + 0x12]
	0x034FAF4C LDR X0, [X23]
	0x034FAF50 ADD X1, X31, 0xC

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X22, 0xEE6000
	009 Move X21, 0xC07000
	010 Move W8, [X22+2625]
	011 Move X21, [X21+2408]
	012 Move X20, X1
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {62}
	018 Move X0, 0xC3A000
	019 Move X0, [X0+2920]
	020 Call 0x1C17CF4
	021 Move X0, 0xC3A000
	022 Move X0, [X0+2928]
	023 Call 0x1C17CF4
	024 Move X0, 0xC3A000
	025 Move X0, [X0+2936]
	026 Call 0x1C17CF4
	027 Move X0, 0xBFA000
	028 Move X0, [X0+3768]
	029 Call 0x1C17CF4
	030 Move X0, 0xC3A000
	031 Move X0, [X0+2944]
	032 Call 0x1C17CF4
	033 Move X0, 0xC3A000
	034 Move X0, [X0+2952]
	035 Call 0x1C17CF4
	036 Move X0, 0xC07000
	037 Move X0, [X0+2408]
	038 Call 0x1C17CF4
	039 Move X0, 0xC3A000
	040 Move X0, [X0+2960]
	041 Call 0x1C17CF4
	042 Move X0, 0xBFA000
	043 Move X0, [X0+2760]
	044 Call 0x1C17CF4
	045 Move X0, 0xC3A000
	046 Move X0, [X0+2968]
	047 Call 0x1C17CF4
	048 Move X0, 0xC3A000
	049 Move X0, [X0+2976]
	050 Call 0x1C17CF4
	051 Move X0, 0xBFA000
	052 Move X0, [X0+2104]
	053 Call 0x1C17CF4
	054 Move X0, 0xC3A000
	055 Move X0, [X0+2984]
	056 Call 0x1C17CF4
	057 Move X0, 0xC3A000
	058 Move X0, [X0+2992]
	059 Call 0x1C17CF4
	060 Move W8, 1
	061 Move [X22+2625], W8
	062 Move X0, [X21]
	063 Move [X31+4], W31
	064 Move [X31+8], X31
	065 Move W8, [X0+224]
	066 Compare W8, 0
	067 JumpIfNotEqual {69}
	068 Call 0x1C17DFC
	069 Add X1, X31, 8
	070 Move X0, X20
	071 Move X2, X31
	072 Call IPAddress.TryParse, X0, X1
	073 Move TEMP, X0
	074 And TEMP, TEMP, 1
	075 Compare TEMP, 1
	076 JumpIfNotEqual {111}
	077 Move X0, [X31+8]
	078 Compare X0, 0
	079 JumpIfEqual {380}
	080 Move X1, X31
	081 Call IPAddress.get_AddressFamily, X0
	082 NotImplemented "Instruction CMP not yet implemented."
	083 Add X2, X31, 8
	084 Move X1, X20
	085 Call IPhotonSocket.IpAddressTryParse, X0, X1, X2
	086 Move TEMP, X0
	087 And TEMP, TEMP, 1
	088 Compare TEMP, 1
	089 JumpIfNotEqual {243}
	090 Move X8, 0xC3A000
	091 Move X8, [X8+2952]
	092 Move W1, 1
	093 Move X0, [X8]
	094 Call 0x1C17D6C
	095 Compare X0, 0
	096 JumpIfEqual {380}
	097 Move X19, [X31+8]
	098 Move X20, X0
	099 Compare X19, 0
	100 JumpIfEqual {107}
	101 Move X8, [X20]
	102 Move X0, X19
	103 Move X1, [X8+64]
	104 Call 0x1C17E00
	105 Compare X0, 0
	106 JumpIfEqual {256}
	107 Move W8, [X20+24]
	108 Compare W8, 0
	109 JumpIfEqual {381}
	110 Move [X20+32], X19
	111 Move X0, [X19+48]
	112 Move X1, X31
	113 Call Dns.GetHostAddresses, X0
	114 Move X20, X0
	115 Move X8, 0xC3A000
	116 Move X8, [X8+2928]
	117 Move X0, [X8]
	118 Call 0x1C17F10
	119 Move X8, 0xC3A000
	120 Move X8, [X8+2960]
	121 Move X1, X19
	122 Move X3, X31
	123 Move X21, X0
	124 Move X2, [X8]
	125 Call Comparison`1<Object>..ctor, X0, X1, X2
	126 Move X8, 0xC3A000
	127 Move X8, [X8+2920]
	128 Move X0, X20
	129 Move X1, X21
	130 Move X2, [X8]
	131 Call 0x2158D70, X0, X1
	132 Move W1, 3
	133 Move X0, X19
	134 Call IPhotonSocket.ReportDebugOfLevel, X0, X1
	135 Move TEMP, X0
	136 And TEMP, TEMP, 1
	137 Compare TEMP, 1
	138 JumpIfNotEqual {247}
	139 Move X23, 0xC3A000
	140 Move X23, [X23+2976]
	141 Move X0, [X23]
	142 Move W8, [X0+224]
	143 Compare W8, 0
	144 JumpIfNotEqual {147}
	145 Call 0x1C17DFC
	146 Move X0, [X23]
	147 Move X8, [X0+184]
	148 Move X21, [X8+8]
	149 Compare X21, 0
	150 JumpIfNotEqual {172}
	151 Move W8, [X0+224]
	152 Compare W8, 0
	153 JumpIfNotEqual {156}
	154 Call 0x1C17DFC
	155 Move X0, [X23]
	156 Move X9, 0xC3A000
	157 Move X8, [X0+184]
	158 Move X9, [X9+2944]
	159 Move X22, [X8]
	160 Move X0, [X9]
	161 Call 0x1C17F10
	162 Move X8, 0xC3A000
	163 Move X8, [X8+2968]
	164 Move X1, X22
	165 Move X3, X31
	166 Move X21, X0
	167 Move X2, [X8]
	168 Call Func`2<Object, Object>..ctor, X0, X1, X2
	169 Move X8, [X23]
	170 Move X8, [X8+184]
	171 Move [X8+8], X21
	172 Move X8, 0xC3A000
	173 Move X8, [X8+2936]
	174 Move X0, X20
	175 Move X1, X21
	176 Move X2, [X8]
	177 Call Enumerable.Select, X0, X1
	178 Move X8, 0xBFA000
	179 Move X8, [X8+3768]
	180 Move X1, [X8]
	181 Call Enumerable.ToArray, X0
	182 Move X8, 0xBFA000
	183 Move X8, [X8+2104]
	184 Move X23, X0
	185 Move X1, X23
	186 Move X2, X31
	187 Move X8, [X8]
	188 Move X0, X8
	189 Call String.Join, X0, X1
	190 Move X21, X0
	191 Move W1, 3
	192 Move X0, X19
	193 Call IPhotonSocket.ReportDebugOfLevel, X0, X1
	194 Move TEMP, X0
	195 And TEMP, TEMP, 1
	196 Compare TEMP, 1
	197 JumpIfNotEqual {247}
	198 Move X8, 0xBFA000
	199 Move X8, [X8+2760]
	200 Move W1, 5
	201 Move X0, [X8]
	202 Call 0x1C17D6C
	203 Compare X0, 0
	204 JumpIfEqual {380}
	205 Move W8, [X0+24]
	206 Move X22, X0
	207 Compare W8, 0
	208 JumpIfEqual {381}
	209 Move X9, [X19+48]
	210 NotImplemented "Instruction CMP not yet implemented."
	211 Move [X22+32], X9
	212 Move X8, 0xC3A000
	213 Move X8, [X8+2992]
	214 Move X8, [X8]
	215 Move [X22+40], X8
	216 Compare X23, 0
	217 JumpIfEqual {380}
	218 Move X8, [X23+24]
	219 Add X0, X31, 4
	220 Move X1, X31
	221 Move [X31+4], W8
	222 Call Int32.ToString, X0
	223 Move W8, [X22+24]
	224 NotImplemented "Instruction CMP not yet implemented."
	225 NotImplemented "Instruction CMP not yet implemented."
	226 Move [X22+48], X0
	227 Move X9, 0xC3A000
	228 Move X9, [X9+2984]
	229 NotImplemented "Instruction CMP not yet implemented."
	230 Move X9, [X9]
	231 Move [X22+56], X9
	232 Move X0, X22
	233 Move X1, X31
	234 Move [X22+64], X21
	235 Call String.Concat, X0
	236 Move X8, [X19+16]
	237 Compare X8, 0
	238 JumpIfEqual {380}
	239 Move X2, X0
	240 Move W1, 3
	241 Move X0, X8
	242 Call PeerBase.EnqueueDebugReturn, X0, X1, X2
	243 Move W1, 1050
	244 Move X0, X19
	245 Call IPhotonSocket.HandleException, X0, X1
	246 Move X20, X31
	247 Move X0, X20
	248 Move X20, [X31+48]
	249 Move X19, [X31+56]
	250 Move X22, [X31+32]
	251 Move X21, [X31+40]
	252 Move X30, [X31+16]
	253 Move X23, [X31+24]
	254 Add X31, X31, 64
	255 Return X0
	256 Call 0x1C17F44
	257 Move X1, X31
	258 Call 0x1C17DEC
	259 Move X21, X1
	260 NotImplemented "Instruction CMP not yet implemented."
	261 Move X22, X0
	262 Move X0, X22
	263 Call 0x3EB2AD0
	264 Move X20, X0
	265 Move X0, 0xBFA000
	266 Move X0, [X0+2000]
	267 Call 0x1C17D08
	268 Move X8, [X20]
	269 Move X1, [X8]
	270 Call 0x1C18270
	271 Move TEMP, X0
	272 And TEMP, TEMP, 1
	273 Compare TEMP, 1
	274 JumpIfNotEqual {283}
	275 Move X20, [X20]
	276 Call 0x3EB2AE0
	277 Move X0, [X19+48]
	278 Move X1, X31
	279 Call Dns.GetHostByName, X0
	280 Compare X0, 0
	281 JumpIfEqual {291}
	282 Move X20, [X0+32]
	283 Move W0, 8
	284 Call 0x3EB2AF0
	285 Move X8, [X20]
	286 Move [X0], X8
	287 Move X1, 0x9BB000
	288 Add X1, X1, 3672
	289 Move X2, X31
	290 Call 0x3EB2B00
	291 Call 0x1C17F20
	292 Move X22, X0
	293 Move X22, X0
	294 NotImplemented "Instruction CMP not yet implemented."
	295 Move X0, X22
	296 Call 0x3EB2AD0
	297 Move X21, X0
	298 Move X0, 0xBFA000
	299 Move X0, [X0+2000]
	300 Call 0x1C17D08
	301 Move X8, [X21]
	302 Move X1, [X8]
	303 Call 0x1C18270
	304 Move TEMP, X0
	305 And TEMP, TEMP, 1
	306 Compare TEMP, 1
	307 JumpIfNotEqual {382}
	308 Move X22, [X21]
	309 Call 0x3EB2AE0
	310 Move W1, 2
	311 Move X0, X19
	312 Call IPhotonSocket.ReportDebugOfLevel, X0, X1
	313 Move TEMP, X0
	314 And TEMP, TEMP, 1
	315 Compare TEMP, 1
	316 JumpIfNotEqual {379}
	317 Move X0, 0xBFA000
	318 Move X0, [X0+2760]
	319 Call 0x1C17D08
	320 Move W1, 6
	321 Call 0x1C17D6C
	322 Compare X0, 0
	323 JumpIfEqual {380}
	324 Move X21, X0
	325 Move X0, 0xC3A000
	326 Move X0, [X0+3000]
	327 Call 0x1C17D08
	328 Move W8, [X21+24]
	329 Compare W8, 0
	330 JumpIfEqual {381}
	331 NotImplemented "Instruction CMP not yet implemented."
	332 Move [X21+32], X0
	333 Move X8, [X19+48]
	334 Move X0, 0xC3A000
	335 Move [X21+40], X8
	336 Move X0, [X0+3008]
	337 Call 0x1C17D08
	338 Move W8, [X21+24]
	339 NotImplemented "Instruction CMP not yet implemented."
	340 Move [X21+48], X0
	341 Compare X20, 0
	342 JumpIfEqual {349}
	343 Move X8, [X20]
	344 Move X0, X20
	345 Move X9, [X8+360]
	346 Move X1, [X8+368]
	347 NotImplemented "Instruction BLR not yet implemented."
	348 Move W8, [X21+24]
	349 Move X0, X31
	350 NotImplemented "Instruction CMP not yet implemented."
	351 Move [X21+56], X0
	352 Move X0, 0xBFB000
	353 Move X0, [X0+4064]
	354 Call 0x1C17D08
	355 Move W8, [X21+24]
	356 NotImplemented "Instruction CMP not yet implemented."
	357 Move [X21+64], X0
	358 Compare X22, 0
	359 JumpIfEqual {366}
	360 Move X8, [X22]
	361 Move X0, X22
	362 Move X9, [X8+360]
	363 Move X1, [X8+368]
	364 NotImplemented "Instruction BLR not yet implemented."
	365 Move W8, [X21+24]
	366 Move X0, X31
	367 NotImplemented "Instruction CMP not yet implemented."
	368 Move [X21+72], X0
	369 Move X0, X21
	370 Move X1, X31
	371 Call String.Concat, X0
	372 Move X8, [X19+16]
	373 Compare X8, 0
	374 JumpIfEqual {380}
	375 Move X2, X0
	376 Move W1, 2
	377 Move X0, X8
	378 Call PeerBase.EnqueueDebugReturn, X0, X1, X2
	379 Move W1, 1051
	380 Call 0x1C17F20
	381 Call 0x1C17F28
	382 Move W0, 8
	383 Call 0x3EB2AF0
	384 Move X8, [X21]
	385 Move [X0], X8
	386 Move X1, 0x9BB000
	387 Add X1, X1, 3672
	388 Move X2, X31
	389 Call 0x3EB2B00
	390 Move X22, X0
	391 Call 0x3EB2AE0
	392 Move X22, X0
	393 Call 0x3EB2AE0
	394 Move X0, X22
	395 Call 0x1D2D690
	396 Call 0x1991590

Method: System.Int32 AddressSortComparer(System.Net.IPAddress x, System.Net.IPAddress y)

Disassembly:
	0x034FAF54 STRB W8, [X31 + 0xC]
	0x034FAF58 BL 0x1C16E04
	0x034FAF5C CBZ X20, 0x34FB29C
	0x034FAF60 MOV X21, X0
	0x034FAF64 CBZ X0, 0x34FAF7C
	0x034FAF68 LDR X8, [X20]
	0x034FAF6C MOV X0, X21
	0x034FAF70 LDR X1, [X8 + 0x40]
	0x034FAF74 BL 0x1C16E00
	0x034FAF78 CBZ X0, 0x34FB290
	0x034FAF7C LDR W8, [X20 + 0x18]
	0x034FAF80 CBZ W8, 0x34FB28C
	0x034FAF84 STR X21, [X20 + 0x20]
	0x034FAF88 LDRB W8, [X19 + 0x11]
	0x034FAF8C LDR X0, [X23]
	0x034FAF90 ADD X1, X31, 0x4
	0x034FAF94 STRB W8, [X31 + 0x4]
	0x034FAF98 BL 0x1C16E04
	0x034FAF9C MOV X21, X0
	0x034FAFA0 CBZ X0, 0x34FAFB8
	0x034FAFA4 LDR X8, [X20]
	0x034FAFA8 MOV X0, X21
	0x034FAFAC LDR X1, [X8 + 0x40]
	0x034FAFB0 BL 0x1C16E00
	0x034FAFB4 CBZ X0, 0x34FB290
	0x034FAFB8 LDR W8, [X20 + 0x18]
	0x034FAFBC CMP W8, 0x1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Compare X1, 0
	006 JumpIfEqual {33}
	007 Move X19, X1
	008 Move X0, X1
	009 Move X1, X31
	010 Move X20, X2
	011 Call IPAddress.get_AddressFamily, X0
	012 Compare X20, 0
	013 JumpIfEqual {33}
	014 Move W21, W0
	015 Move X0, X20
	016 Move X1, X31
	017 Call IPAddress.get_AddressFamily, X0
	018 NotImplemented "Instruction CMP not yet implemented."
	019 Move W0, W31
	020 Move X0, X19
	021 Move X1, X31
	022 Call IPAddress.get_AddressFamily, X0
	023 NotImplemented "Instruction CMP not yet implemented."
	024 Move TEMP, 0
	025 Not TEMP
	026 Move W8, TEMP
	027 NotImplemented "Instruction CSNEG not yet implemented."
	028 Move X20, [X31+16]
	029 Move X19, [X31+24]
	030 Move X30, [X31+32]
	031 Move X21, [X31+40]
	032 Return X0
	033 Call 0x1C17F20

Method: System.Net.IPAddress GetIpAddress(System.String address)

Disassembly:
	0x034FAFC0 B.LS 0x34FB28C
	0x034FAFC4 STR X21, [X20 + 0x28]
	0x034FAFC8 LDR W8, [X19 + 0x4C]
	0x034FAFCC LDR X0, [X22]
	0x034FAFD0 ADD X1, X31, 0x1C
	0x034FAFD4 STR W8, [X31 + 0x1C]
	0x034FAFD8 BL 0x1C16E04
	0x034FAFDC MOV X21, X0
	0x034FAFE0 CBZ X0, 0x34FAFF8
	0x034FAFE4 LDR X8, [X20]
	0x034FAFE8 MOV X0, X21
	0x034FAFEC LDR X1, [X8 + 0x40]
	0x034FAFF0 BL 0x1C16E00
	0x034FAFF4 CBZ X0, 0x34FB290
	0x034FAFF8 LDR W8, [X20 + 0x18]
	0x034FAFFC CMP W8, 0x2
	0x034FB000 B.LS 0x34FB28C
	0x034FB004 STR X21, [X20 + 0x30]
	0x034FB008 LDR W8, [X19 + 0x50]
	0x034FB00C LDR X0, [X22]
	0x034FB010 ADD X1, X31, 0x18
	0x034FB014 STR W8, [X31 + 0x18]
	0x034FB018 BL 0x1C16E04
	0x034FB01C MOV X19, X0
	0x034FB020 CBZ X0, 0x34FB038
	0x034FB024 LDR X8, [X20]
	0x034FB028 MOV X0, X19
	0x034FB02C LDR X1, [X8 + 0x40]
	0x034FB030 BL 0x1C16E00
	0x034FB034 CBZ X0, 0x34FB290
	0x034FB038 LDR W8, [X20 + 0x18]
	0x034FB03C CMP W8, 0x3
	0x034FB040 B.LS 0x34FB28C
	0x034FB044 ADRP X8, 0xC38000
	0x034FB048 LDR X8, [X8 + 0xBF8]
	0x034FB04C STR X19, [X20 + 0x38]
	0x034FB050 B 0x34FB268
	0x034FB054 MOVZ W1, 0x8
	0x034FB058 BL 0x1C16D6C
	0x034FB05C MOV X20, X0
	0x034FB060 LDRB W8, [X19 + 0x12]
	0x034FB064 LDR X0, [X23]
	0x034FB068 ADD X1, X31, 0x14
	0x034FB06C STRB W8, [X31 + 0x14]
	0x034FB070 BL 0x1C16E04
	0x034FB074 CBZ X20, 0x34FB29C
	0x034FB078 MOV X21, X0
	0x034FB07C CBZ X0, 0x34FB094
	0x034FB080 LDR X8, [X20]
	0x034FB084 MOV X0, X21
	0x034FB088 LDR X1, [X8 + 0x40]
	0x034FB08C BL 0x1C16E00
	0x034FB090 CBZ X0, 0x34FB290
	0x034FB094 LDR W8, [X20 + 0x18]
	0x034FB098 CBZ W8, 0x34FB28C
	0x034FB09C STR X21, [X20 + 0x20]
	0x034FB0A0 LDRB W8, [X19 + 0x11]
	0x034FB0A4 LDR X0, [X23]
	0x034FB0A8 ADD X1, X31, 0x10
	0x034FB0AC STRB W8, [X31 + 0x10]
	0x034FB0B0 BL 0x1C16E04
	0x034FB0B4 MOV X21, X0
	0x034FB0B8 CBZ X0, 0x34FB0D0
	0x034FB0BC LDR X8, [X20]
	0x034FB0C0 MOV X0, X21
	0x034FB0C4 LDR X1, [X8 + 0x40]
	0x034FB0C8 BL 0x1C16E00
	0x034FB0CC CBZ X0, 0x34FB290
	0x034FB0D0 LDR W8, [X20 + 0x18]
	0x034FB0D4 CMP W8, 0x1
	0x034FB0D8 B.LS 0x34FB28C
	0x034FB0DC STR X21, [X20 + 0x28]
	0x034FB0E0 LDR W8, [X19 + 0x14]
	0x034FB0E4 LDR X0, [X22]
	0x034FB0E8 ADD X1, X31, 0x1C
	0x034FB0EC STR W8, [X31 + 0x1C]
	0x034FB0F0 BL 0x1C16E04
	0x034FB0F4 MOV X21, X0
	0x034FB0F8 CBZ X0, 0x34FB110
	0x034FB0FC LDR X8, [X20]
	0x034FB100 MOV X0, X21
	0x034FB104 LDR X1, [X8 + 0x40]
	0x034FB108 BL 0x1C16E00
	0x034FB10C CBZ X0, 0x34FB290
	0x034FB110 LDR W8, [X20 + 0x18]
	0x034FB114 CMP W8, 0x2
	0x034FB118 B.LS 0x34FB28C
	0x034FB11C STR X21, [X20 + 0x30]
	0x034FB120 LDR W8, [X19 + 0x18]
	0x034FB124 LDR X0, [X22]
	0x034FB128 ADD X1, X31, 0x18
	0x034FB12C STR W8, [X31 + 0x18]
	0x034FB130 BL 0x1C16E04
	0x034FB134 MOV X21, X0
	0x034FB138 CBZ X0, 0x34FB150
	0x034FB13C LDR X8, [X20]
	0x034FB140 MOV X0, X21
	0x034FB144 LDR X1, [X8 + 0x40]
	0x034FB148 BL 0x1C16E00
	0x034FB14C CBZ X0, 0x34FB290
	0x034FB150 LDR W8, [X20 + 0x18]
	0x034FB154 CMP W8, 0x3
	0x034FB158 B.LS 0x34FB28C
	0x034FB15C STR X21, [X20 + 0x38]
	0x034FB160 LDR W8, [X19 + 0x3C]
	0x034FB164 LDR X0, [X22]
	0x034FB168 ADD X1, X31, 0xC
	0x034FB16C STR W8, [X31 + 0xC]
	0x034FB170 BL 0x1C16E04
	0x034FB174 MOV X21, X0
	0x034FB178 CBZ X0, 0x34FB190
	0x034FB17C LDR X8, [X20]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xEE6000
	007 Move X20, 0xC07000
	008 Move W8, [X21+2626]
	009 Move X20, [X20+2408]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0xC07000
	016 Move X0, [X0+2408]
	017 Call 0x1C17CF4
	018 Move X0, 0xC3A000
	019 Move X0, [X0+3016]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X21+2626], W8
	023 Move X0, [X20]
	024 Move [X31+8], X31
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {29}
	028 Call 0x1C17DFC
	029 Add X1, X31, 8
	030 Move X0, X19
	031 Move X2, X31
	032 Call IPAddress.TryParse, X0, X1
	033 Move TEMP, X0
	034 And TEMP, TEMP, 1
	035 Compare TEMP, 1
	036 JumpIfEqual {116}
	037 Move X0, X19
	038 Move X1, X31
	039 Call Dns.GetHostEntry, X0
	040 Compare X0, 0
	041 JumpIfEqual {124}
	042 Move X21, [X0+32]
	043 Compare X21, 0
	044 JumpIfEqual {124}
	045 Move W8, [X21+24]
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Move W22, W31
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Add X8, X21, W22
	050 Move X20, [X8+32]
	051 Compare X20, 0
	052 JumpIfEqual {124}
	053 Move X0, X20
	054 Move X1, X31
	055 Call IPAddress.get_AddressFamily, X0
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Move X8, [X31+8]
	058 Compare X8, 0
	059 JumpIfNotEqual {65}
	060 Move X0, X20
	061 Move X1, X31
	062 Call IPAddress.get_AddressFamily, X0
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Move [X31+8], X20
	065 Move W8, [X21+24]
	066 Add W22, W22, 1
	067 NotImplemented "Instruction CMP not yet implemented."
	068 Move X0, [X31+8]
	069 Compare X0, 0
	070 JumpIfEqual {95}
	071 Move X8, [X0]
	072 Move X9, [X8+360]
	073 Move X1, [X8+368]
	074 NotImplemented "Instruction BLR not yet implemented."
	075 Move X8, [X20]
	076 Move X0, X20
	077 Move X9, [X8+360]
	078 Move X1, [X8+368]
	079 NotImplemented "Instruction BLR not yet implemented."
	080 Move X21, 0xEE5000
	081 Move W8, [X21+2693]
	082 Move X19, X0
	083 Compare W8, 0
	084 JumpIfNotEqual {90}
	085 Move X0, 0xC39000
	086 Move X0, [X0+2800]
	087 Call 0x1C17CF4
	088 Move W8, 1
	089 Move [X21+2693], W8
	090 Move X8, 0xC39000
	091 Move X8, [X8+2800]
	092 Move X8, [X8]
	093 Move X8, [X8+184]
	094 Move [X8], X19
	095 Move X8, 0xC39000
	096 Move X8, [X8+3016]
	097 Move X0, X19
	098 Move X2, X31
	099 Move X1, [X8]
	100 Call String.Concat, X0, X1
	101 Move X20, 0xEE5000
	102 Move W8, [X20+2693]
	103 Move X19, X0
	104 Compare W8, 0
	105 JumpIfNotEqual {111}
	106 Move X0, 0xC39000
	107 Move X0, [X0+2800]
	108 Call 0x1C17CF4
	109 Move W8, 1
	110 Move [X20+2693], W8
	111 Move X8, 0xC39000
	112 Move X8, [X8+2800]
	113 Move X8, [X8]
	114 Move X8, [X8+184]
	115 Move [X8], X19
	116 Move X20, [X31+8]
	117 Move X0, X20
	118 Move X20, [X31+32]
	119 Move X19, [X31+40]
	120 Move X22, [X31+16]
	121 Move X21, [X31+24]
	122 Move X30, [X31+48]
	123 Return X0
	124 Call 0x1C17F20
	125 Call 0x1C17F28

Method: System.Void <HandleException>b__56_0()

Disassembly:
	0x034FB180 MOV X0, X21
	0x034FB184 LDR X1, [X8 + 0x40]
	0x034FB188 BL 0x1C16E00
	0x034FB18C CBZ X0, 0x34FB290
	0x034FB190 LDR W8, [X20 + 0x18]
	0x034FB194 CMP W8, 0x4
	0x034FB198 B.LS 0x34FB28C
	0x034FB19C STR X21, [X20 + 0x40]

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+16]
	003 Compare X0, 0
	004 JumpIfEqual {10}
	005 Move X8, [X0]
	006 Move X2, [X8+488]
	007 Move X1, [X8+496]
	008 Move X30, [X31+16]
	009 CallNoReturn X2
	010 Call 0x1C17F20

