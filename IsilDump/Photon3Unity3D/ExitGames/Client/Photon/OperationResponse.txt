Type: ExitGames.Client.Photon.OperationResponse

Method: System.Object get_Item(System.Byte parameterCode)

Disassembly:
	0x03506754 MOV X0, X20
	0x03506758 BL 0x1C16F18
	0x0350675C BL 0x1990590
	0x03506760 STR X30, [X31 - 0x10]!
	0x03506764 LDRSW X8, [X2]
	0x03506768 ADD W9, W8, 0x1
	0x0350676C STR W9, [X2]
	0x03506770 CBZ X1, 0x35067B8
	0x03506774 LDR W9, [X1 + 0x18]
	0x03506778 CMP W8, W9
	0x0350677C B.CS 0x35067B4

ISIL:
	001 Move [X31-16], X30
	002 Move [X31+8], X31
	003 Move X0, [X0+32]
	004 Compare X0, 0
	005 JumpIfEqual {12}
	006 Add X2, X31, 8
	007 Move X3, X31
	008 Call ParameterDictionary.TryGetValue, X0, X1, X2
	009 Move X0, [X31+8]
	010 Move X30, [X31+16]
	011 Return X0
	012 Call 0x1C17F20

Method: System.Void set_Item(System.Byte parameterCode, System.Object value)

Disassembly:
	0x03506780 UBFM W9, W0, 0x8, 0x1F
	0x03506784 ADD X8, X1, X8
	0x03506788 STRB W9, [X8 + 0x20]
	0x0350678C LDRSW X8, [X2]
	0x03506790 ADD W9, W8, 0x1
	0x03506794 STR W9, [X2]
	0x03506798 LDR W9, [X1 + 0x18]

ISIL:
	001 Move [X31-16], X30
	002 Move X0, [X0+32]
	003 Compare X0, 0
	004 JumpIfEqual {9}
	005 Move X3, X31
	006 Move X30, [X31+16]
	007 Call ParameterDictionary.Add, X0, X1, X2
	008 Return 
	009 Call 0x1C17F20

Method: System.String ToString()

Disassembly:
	0x0350679C CMP W8, W9
	0x035067A0 B.CS 0x35067B4
	0x035067A4 ADD X8, X1, X8
	0x035067A8 STRB W0, [X8 + 0x20]
	0x035067AC LDR X30, [X31], #0x10
	0x035067B0 RET
	0x035067B4 BL 0x1C16F28
	0x035067B8 BL 0x1C16F20
	0x035067BC STR X30, [X31 - 0x10]!
	0x035067C0 LDRSW X8, [X2]
	0x035067C4 ADD W9, W8, 0x1
	0x035067C8 STR W9, [X2]
	0x035067CC CBZ X1, 0x350685C
	0x035067D0 LDR W9, [X1 + 0x18]
	0x035067D4 CMP W8, W9
	0x035067D8 B.CS 0x3506858
	0x035067DC UBFM W9, W0, 0x18, 0x1F
	0x035067E0 ADD X8, X1, X8
	0x035067E4 STRB W9, [X8 + 0x20]
	0x035067E8 LDRSW X8, [X2]
	0x035067EC ADD W9, W8, 0x1
	0x035067F0 STR W9, [X2]
	0x035067F4 LDR W9, [X1 + 0x18]
	0x035067F8 CMP W8, W9
	0x035067FC B.CS 0x3506858
	0x03506800 UBFM W9, W0, 0x10, 0x1F
	0x03506804 ADD X8, X1, X8
	0x03506808 STRB W9, [X8 + 0x20]
	0x0350680C LDRSW X8, [X2]
	0x03506810 ADD W9, W8, 0x1
	0x03506814 STR W9, [X2]
	0x03506818 LDR W9, [X1 + 0x18]
	0x0350681C CMP W8, W9
	0x03506820 B.CS 0x3506858
	0x03506824 UBFM W9, W0, 0x8, 0x1F
	0x03506828 ADD X8, X1, X8
	0x0350682C STRB W9, [X8 + 0x20]
	0x03506830 LDRSW X8, [X2]
	0x03506834 ADD W9, W8, 0x1
	0x03506838 STR W9, [X2]
	0x0350683C LDR W9, [X1 + 0x18]
	0x03506840 CMP W8, W9
	0x03506844 B.CS 0x3506858
	0x03506848 ADD X8, X1, X8
	0x0350684C STRB W0, [X8 + 0x20]
	0x03506850 LDR X30, [X31], #0x10
	0x03506854 RET

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X23, 0xEDA000
	009 Move X20, 0xBEF000
	010 Move X22, 0xBF2000
	011 Move X21, 0xC2E000
	012 Move W8, [X23+2726]
	013 Move X20, [X20+2520]
	014 Move X22, [X22+1576]
	015 Move X21, [X21+4032]
	016 Move X19, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {32}
	021 Move X0, 0xBEF000
	022 Move X0, [X0+2520]
	023 Call 0x1C17CF4
	024 Move X0, 0xBF2000
	025 Move X0, [X0+1576]
	026 Call 0x1C17CF4
	027 Move X0, 0xC2E000
	028 Move X0, [X0+4032]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X23+2726], W8
	032 Move W8, [X19+16]
	033 Move X0, [X20]
	034 Add X1, X31, 12
	035 Move [X31+12], W8
	036 Call 0x1C17E04
	037 Move X20, X0
	038 NotImplemented "Instruction LDRH not yet implemented."
	039 Move X0, [X22]
	040 Add X1, X31, 8
	041 NotImplemented "Instruction STRH not yet implemented."
	042 Call 0x1C17E04
	043 Move X8, [X21]
	044 Move X2, X0
	045 Move X1, X20
	046 Move X3, X31
	047 Move X0, X8
	048 Call String.Format, X0, X1, X2
	049 Move X20, [X31+48]
	050 Move X19, [X31+56]
	051 Move X22, [X31+32]
	052 Move X21, [X31+40]
	053 Move X30, [X31+16]
	054 Move X23, [X31+24]
	055 Add X31, X31, 64
	056 Return X0

Method: System.String ToStringFull()

Disassembly:
	0x03506858 BL 0x1C16F28
	0x0350685C BL 0x1C16F20
	0x03506860 STR D8, [X31 - 0x40]!
	0x03506864 STP X30, X23, [X31 + 0x10]
	0x03506868 STP X22, X21, [X31 + 0x20]
	0x0350686C STP X20, X19, [X31 + 0x30]
	0x03506870 ADRP X21, 0xED9000
	0x03506874 ADRP X22, 0xBF5000
	0x03506878 LDRB W8, [X21 + 0xAB1]
	0x0350687C LDR X22, [X22 + 0xF00]
	0x03506880 MOV X19, X1
	0x03506884 MOV X20, X0
	0x03506888 MOV V8.16B, V0.16B
	0x0350688C TBNZ X8, 0x0, 0x35068A4
	0x03506890 ADRP X0, 0xBF5000
	0x03506894 LDR X0, [X0 + 0xF00]
	0x03506898 BL 0x1C16CF4
	0x0350689C MOVZ W8, 0x1
	0x035068A0 STRB W8, [X21 + 0xAB1]
	0x035068A4 LDR X0, [X22]
	0x035068A8 LDR W8, [X0 + 0xE0]
	0x035068AC CBNZ W8, 0x35068B8
	0x035068B0 BL 0x1C16DFC
	0x035068B4 LDR X0, [X22]
	0x035068B8 LDR X8, [X0 + 0xB8]
	0x035068BC LDR X21, [X8 + 0x18]
	0x035068C0 STRB W31, [X31 + 0xC]
	0x035068C4 ADD X1, X31, 0xC
	0x035068C8 MOV X0, X21
	0x035068CC MOV X2, X31
	0x035068D0 BL 0x33DE64C
	0x035068D4 LDR X0, [X22]
	0x035068D8 LDR W8, [X0 + 0xE0]
	0x035068DC CBNZ W8, 0x35068E8
	0x035068E0 BL 0x1C16DFC
	0x035068E4 LDR X0, [X22]
	0x035068E8 LDR X8, [X0 + 0xB8]
	0x035068EC LDR X0, [X8 + 0x18]
	0x035068F0 CBZ X0, 0x3506A10
	0x035068F4 LDR W8, [X0 + 0x18]
	0x035068F8 CBZ W8, 0x3506A14
	0x035068FC STR S8, [X0 + 0x20]
	0x03506900 LDR W3, [X19]
	0x03506904 MOVZ W4, 0x4
	0x03506908 MOV W1, W31
	0x0350690C MOV X2, X20
	0x03506910 MOV X5, X31
	0x03506914 BL 0x33A8A9C
	0x03506918 MOV X22, X31
	0x0350691C LDRB W8, [X31 + 0xC]
	0x03506920 CBZ W8, 0x3506930
	0x03506924 MOV X0, X21
	0x03506928 MOV X1, X31
	0x0350692C BL 0x33E14E4
	0x03506930 CBNZ X22, 0x3506A04
	0x03506934 CBZ X20, 0x3506A0C
	0x03506938 LDRSW X9, [X19]
	0x0350693C LDR W11, [X20 + 0x18]
	0x03506940 CMP W9, W11
	0x03506944 B.CS 0x3506A00
	0x03506948 ADD X10, X20, X9
	0x0350694C LDRB W8, [X10 + 0x20]!
	0x03506950 ADD W12, W9, 0x1
	0x03506954 CMP W12, W11
	0x03506958 B.CS 0x3506A00
	0x0350695C ADD W9, W9, 0x3
	0x03506960 CMP W9, W11
	0x03506964 B.CS 0x3506A00
	0x03506968 ADD X9, X20, W9, SXTW
	0x0350696C LDRB W11, [X9 + 0x20]
	0x03506970 ADD X9, X20, W12, SXTW
	0x03506974 LDRB W9, [X9 + 0x20]
	0x03506978 STRB W11, [X10]
	0x0350697C LDR W11, [X19]
	0x03506980 LDR W12, [X20 + 0x18]
	0x03506984 ADD W10, W11, 0x2
	0x03506988 CMP W10, W12
	0x0350698C B.CS 0x3506A00
	0x03506990 ADD W11, W11, 0x1
	0x03506994 CMP W11, W12
	0x03506998 B.CS 0x3506A00
	0x0350699C ADD X12, X20, 0x20
	0x035069A0 LDRB W10, [X12, W10, SXTW]
	0x035069A4 STRB W10, [X12, W11, SXTW]
	0x035069A8 LDR W10, [X19]
	0x035069AC LDR W11, [X20 + 0x18]
	0x035069B0 ADD W10, W10, 0x2
	0x035069B4 CMP W10, W11
	0x035069B8 B.CS 0x3506A00
	0x035069BC ADD X10, X20, W10, SXTW
	0x035069C0 STRB W9, [X10 + 0x20]
	0x035069C4 LDR W9, [X19]
	0x035069C8 LDR W10, [X20 + 0x18]
	0x035069CC ADD W9, W9, 0x3
	0x035069D0 CMP W9, W10
	0x035069D4 B.CS 0x3506A00
	0x035069D8 ADD X9, X20, W9, SXTW
	0x035069DC STRB W8, [X9 + 0x20]
	0x035069E0 LDR W8, [X19]
	0x035069E4 LDP X22, X21, [X31 + 0x20]
	0x035069E8 LDP X30, X23, [X31 + 0x10]
	0x035069EC ADD W8, W8, 0x4
	0x035069F0 STR W8, [X19]
	0x035069F4 LDP X20, X19, [X31 + 0x30]
	0x035069F8 LDR V8, [X31], #0x40
	0x035069FC RET
	0x03506A00 BL 0x1C16F28
	0x03506A04 MOV X0, X22
	0x03506A08 BL 0x1C16F18
	0x03506A0C BL 0x1C16F20
	0x03506A10 BL 0x1C16F20
	0x03506A14 BL 0x1C16F28
	0x03506A18 B 0x3506A20
	0x03506A1C B 0x3506A20
	0x03506A20 MOV X23, X0
	0x03506A24 CMP W1, 0x1
	0x03506A28 B.NE 0x3506A40
	0x03506A2C MOV X0, X23

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0xEDA000
	007 Move X22, 0xBEE000
	008 Move X21, 0xBEF000
	009 Move W8, [X20+2727]
	010 Move X22, [X22+2512]
	011 Move X21, [X21+2520]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {34}
	017 Move X0, 0xBEF000
	018 Move X0, [X0+2520]
	019 Call 0x1C17CF4
	020 Move X0, 0xBF2000
	021 Move X0, [X0+1576]
	022 Call 0x1C17CF4
	023 Move X0, 0xBEE000
	024 Move X0, [X0+2512]
	025 Call 0x1C17CF4
	026 Move X0, 0xBF6000
	027 Move X0, [X0+3680]
	028 Call 0x1C17CF4
	029 Move X0, 0xC2E000
	030 Move X0, [X0+4040]
	031 Call 0x1C17CF4
	032 Move W8, 1
	033 Move [X20+2727], W8
	034 Move X0, [X22]
	035 Move W1, 4
	036 Call 0x1C17D6C
	037 Move X20, X0
	038 Move W8, [X19+16]
	039 Move X0, [X21]
	040 Add X1, X31, 12
	041 Move [X31+12], W8
	042 Call 0x1C17E04
	043 Compare X20, 0
	044 JumpIfEqual {133}
	045 Move X21, X0
	046 Compare X0, 0
	047 JumpIfEqual {54}
	048 Move X8, [X20]
	049 Move X0, X21
	050 Move X1, [X8+64]
	051 Call 0x1C17E00
	052 Compare X0, 0
	053 JumpIfEqual {130}
	054 Move W8, [X20+24]
	055 Compare W8, 0
	056 JumpIfEqual {129}
	057 Move X8, 0xBF2000
	058 Move X8, [X8+1576]
	059 Move [X20+32], X21
	060 NotImplemented "Instruction LDRH not yet implemented."
	061 Add X1, X31, 8
	062 Move X0, [X8]
	063 NotImplemented "Instruction STRH not yet implemented."
	064 Call 0x1C17E04
	065 Move X21, X0
	066 Compare X0, 0
	067 JumpIfEqual {74}
	068 Move X8, [X20]
	069 Move X0, X21
	070 Move X1, [X8+64]
	071 Call 0x1C17E00
	072 Compare X0, 0
	073 JumpIfEqual {130}
	074 Move W8, [X20+24]
	075 NotImplemented "Instruction CMP not yet implemented."
	076 Move [X20+40], X21
	077 Move X0, [X19+32]
	078 Move X21, 0xBF6000
	079 Move X21, [X21+3680]
	080 Move X1, X31
	081 Call ParameterDictionary.op_Implicit, X0
	082 Move X8, [X21]
	083 Move X21, X0
	084 Move W9, [X8+224]
	085 Compare W9, 0
	086 JumpIfNotEqual {89}
	087 Move X0, X8
	088 Call 0x1C17DFC
	089 Move W1, 1
	090 Move X0, X21
	091 Move X2, X31
	092 Call SupportClass.DictionaryToString, X0, X1
	093 Move X21, X0
	094 Compare X0, 0
	095 JumpIfEqual {102}
	096 Move X8, [X20]
	097 Move X0, X21
	098 Move X1, [X8+64]
	099 Call 0x1C17E00
	100 Compare X0, 0
	101 JumpIfEqual {130}
	102 Move W8, [X20+24]
	103 NotImplemented "Instruction CMP not yet implemented."
	104 Move [X20+48], X21
	105 Move X19, [X19+24]
	106 Compare X19, 0
	107 JumpIfEqual {115}
	108 Move X8, [X20]
	109 Move X0, X19
	110 Move X1, [X8+64]
	111 Call 0x1C17E00
	112 Compare X0, 0
	113 JumpIfEqual {130}
	114 Move W8, [X20+24]
	115 NotImplemented "Instruction CMP not yet implemented."
	116 Move X8, 0xC2E000
	117 Move X8, [X8+4040]
	118 Move [X20+56], X19
	119 Move X1, X20
	120 Move X2, X31
	121 Move X0, [X8]
	122 Call String.Format, X0, X1
	123 Move X20, [X31+32]
	124 Move X19, [X31+40]
	125 Move X22, [X31+16]
	126 Move X21, [X31+24]
	127 Move X30, [X31+48]
	128 Return X0
	129 Call 0x1C17F28
	130 Call 0x1C17F44
	131 Move X1, X31
	132 Call 0x1C17DEC
	133 Call 0x1C17F20

Method: System.Void .ctor()

Disassembly:
	0x03506A30 BL 0x3EB1AD0
	0x03506A34 LDR X22, [X0]

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

