Type: ExitGames.Client.Photon.ByteArraySlicePool

Method: System.Int32 get_MinStackIndex()

Disassembly:
	0x034EDB68 MOV W20, W1
	0x034EDB6C MOV X19, X0

ISIL:
	001 Move W0, [X0+16]
	002 Return X0

Method: System.Void set_MinStackIndex(System.Int32 value)

Disassembly:
	0x034EDB70 TBNZ X8, 0x0, 0x34EDB94
	0x034EDB74 ADRP X0, 0xC0E000
	0x034EDB78 LDR X0, [X0 + 0xF28]
	0x034EDB7C BL 0x1C16CF4
	0x034EDB80 ADRP X0, 0xC0E000
	0x034EDB84 LDR X0, [X0 + 0xDA0]
	0x034EDB88 BL 0x1C16CF4
	0x034EDB8C MOVZ W8, 0x1
	0x034EDB90 STRB W8, [X22 + 0xA08]
	0x034EDB94 LDR X0, [X21]
	0x034EDB98 LDR W8, [X0 + 0xE0]

ISIL:
	001 Move [X31-16], X30
	002 NotImplemented "Instruction CMP not yet implemented."
	003 Move W8, 31
	004 NotImplemented "Instruction CSEL not yet implemented."
	005 Compare X0, 0
	006 JumpIfEqual {12}
	007 NotImplemented "Instruction CMP not yet implemented."
	008 NotImplemented "Instruction CSINC not yet implemented."
	009 Move [X0+16], W8
	010 Move X30, [X31+16]
	011 Return 
	012 Call 0x1C17F20

Method: System.Int32 get_AllocationCounter()

Disassembly:
	0x034EDB9C CBNZ W8, 0x34EDBA8
	0x034EDBA0 BL 0x1C16DFC

ISIL:
	001 Move W0, [X0+32]
	002 Return X0

Method: System.Void .ctor()

Disassembly:
	0x034EDBA4 LDR X0, [X21]
	0x034EDBA8 LDR X8, [X0 + 0xB8]
	0x034EDBAC LDR X8, [X8]
	0x034EDBB0 CBZ X8, 0x34EDBE8
	0x034EDBB4 LDR W9, [X8 + 0x18]
	0x034EDBB8 CMP W9, W20, UXTB
	0x034EDBBC B.LS 0x34EDBEC
	0x034EDBC0 ADRP X9, 0xC0E000
	0x034EDBC4 LDR X9, [X9 + 0xF28]
	0x034EDBC8 ADD X8, X8, W20, 0x3, UXTB
	0x034EDBCC LDR X1, [X8 + 0x20]
	0x034EDBD0 MOV X0, X19
	0x034EDBD4 LDR X2, [X9]
	0x034EDBD8 LDP X20, X19, [X31 + 0x20]
	0x034EDBDC LDP X22, X21, [X31 + 0x10]
	0x034EDBE0 LDR X30, [X31], #0x30
	0x034EDBE4 B 0x2AA64F8
	0x034EDBE8 BL 0x1C16F20
	0x034EDBEC BL 0x1C16F28
	0x034EDBF0 STR X30, [X31 - 0x30]!
	0x034EDBF4 STP X22, X21, [X31 + 0x10]
	0x034EDBF8 STP X20, X19, [X31 + 0x20]
	0x034EDBFC ADRP X22, 0xEF2000
	0x034EDC00 ADRP X21, 0xC0E000
	0x034EDC04 LDRB W8, [X22 + 0xA09]
	0x034EDC08 LDR X21, [X21 + 0xDA0]
	0x034EDC0C MOV W20, W1
	0x034EDC10 MOV X19, X0
	0x034EDC14 TBNZ X8, 0x0, 0x34EDC38
	0x034EDC18 ADRP X0, 0xC0E000
	0x034EDC1C LDR X0, [X0 + 0xD58]
	0x034EDC20 BL 0x1C16CF4
	0x034EDC24 ADRP X0, 0xC0E000
	0x034EDC28 LDR X0, [X0 + 0xDA0]
	0x034EDC2C BL 0x1C16CF4
	0x034EDC30 MOVZ W8, 0x1
	0x034EDC34 STRB W8, [X22 + 0xA09]
	0x034EDC38 LDR X0, [X21]
	0x034EDC3C LDR W8, [X0 + 0xE0]
	0x034EDC40 CBNZ W8, 0x34EDC4C
	0x034EDC44 BL 0x1C16DFC
	0x034EDC48 LDR X0, [X21]
	0x034EDC4C LDR X8, [X0 + 0xB8]
	0x034EDC50 LDR X8, [X8]
	0x034EDC54 CBZ X8, 0x34EDC8C
	0x034EDC58 LDR W9, [X8 + 0x18]
	0x034EDC5C CMP W9, W20, UXTB
	0x034EDC60 B.LS 0x34EDC90
	0x034EDC64 ADRP X9, 0xC0E000
	0x034EDC68 LDR X9, [X9 + 0xD58]
	0x034EDC6C ADD X8, X8, W20, 0x3, UXTB
	0x034EDC70 LDR X1, [X8 + 0x20]
	0x034EDC74 MOV X0, X19
	0x034EDC78 LDR X2, [X9]
	0x034EDC7C LDP X20, X19, [X31 + 0x20]
	0x034EDC80 LDP X22, X21, [X31 + 0x10]
	0x034EDC84 LDR X30, [X31], #0x30
	0x034EDC88 B 0x2AA528C
	0x034EDC8C BL 0x1C16F20
	0x034EDC90 BL 0x1C16F28
	0x034EDC94 SUB X31, X31, 0x80
	0x034EDC98 STR X30, [X31 + 0x50]
	0x034EDC9C STP X22, X21, [X31 + 0x60]
	0x034EDCA0 STP X20, X19, [X31 + 0x70]
	0x034EDCA4 ADRP X21, 0xEF2000
	0x034EDCA8 ADRP X22, 0xC46000
	0x034EDCAC MOV X19, X8
	0x034EDCB0 LDRB W8, [X21 + 0xA0A]
	0x034EDCB4 LDR X22, [X22 + 0x678]
	0x034EDCB8 MOV X20, X0
	0x034EDCBC TBNZ X8, 0x0, 0x34EDCD4
	0x034EDCC0 ADRP X0, 0xC46000
	0x034EDCC4 LDR X0, [X0 + 0x678]
	0x034EDCC8 BL 0x1C16CF4
	0x034EDCCC MOVZ W8, 0x1
	0x034EDCD0 STRB W8, [X21 + 0xA0A]
	0x034EDCD4 LDR X1, [X22]
	0x034EDCD8 ADD X8, X31, 0x28
	0x034EDCDC MOV X0, X20
	0x034EDCE0 BL 0x2AA54BC
	0x034EDCE4 LDP X8, X30, [X31 + 0x48]
	0x034EDCE8 LDUR V0, [X31 + 0x38]
	0x034EDCEC LDUR V1, [X31 + 0x28]
	0x034EDCF0 LDP X22, X21, [X31 + 0x60]
	0x034EDCF4 STR X8, [X19 + 0x20]
	0x034EDCF8 STR X8, [X31 + 0x20]
	0x034EDCFC STP V1, V0, [X19]
	0x034EDD00 LDP X20, X19, [X31 + 0x70]
	0x034EDD04 STP V1, V0, [X31]
	0x034EDD08 ADD X31, X31, 0x80
	0x034EDD0C RET
	0x034EDD10 LDR X8, [X1 + 0x20]
	0x034EDD14 LDP V1, V0, [X1]
	0x034EDD18 STR X8, [X0 + 0x20]
	0x034EDD1C STP V1, V0, [X0]
	0x034EDD20 RET

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xEF3000
	007 Move X19, 0xC47000
	008 Move W8, [X21+2554]
	009 Move X19, [X19+1560]
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {26}
	015 Move X0, 0xC47000
	016 Move X0, [X0+1560]
	017 Call 0x1C17CF4
	018 Move X0, 0xC47000
	019 Move X0, [X0+1568]
	020 Call 0x1C17CF4
	021 Move X0, 0xC47000
	022 Move X0, [X0+1576]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X21+2554], W8
	026 Move W8, 7
	027 Move [X20+16], W8
	028 Move X0, [X19]
	029 Move W1, 32
	030 Call 0x1C17D6C
	031 Move [X20+24], X0
	032 Move X0, X20
	033 Move X1, X31
	034 Call Object..ctor, X0
	035 Move X19, [X20+24]
	036 Move [X31+12], W31
	037 Add X1, X31, 12
	038 Move X0, X19
	039 Move X2, X31
	040 Call Monitor.Enter, X0, X1
	041 Move X8, 0xC47000
	042 Move X8, [X8+1576]
	043 Move X22, [X20+24]
	044 Move X0, [X8]
	045 Call 0x1C17F10
	046 Move X8, 0xC47000
	047 Move X8, [X8+1568]
	048 Move X21, X0
	049 Move X1, [X8]
	050 Call Stack`1<Object>..ctor, X0
	051 Compare X22, 0
	052 JumpIfEqual {82}
	053 Compare X21, 0
	054 JumpIfEqual {61}
	055 Move X8, [X22]
	056 Move X1, [X8+64]
	057 Move X0, X21
	058 Call 0x1C17E00
	059 Compare X0, 0
	060 JumpIfEqual {84}
	061 Move W8, [X22+24]
	062 Compare W8, 0
	063 JumpIfEqual {83}
	064 Move X20, X31
	065 Move [X22+32], X21
	066 Move W8, [X31+12]
	067 Compare W8, 0
	068 JumpIfEqual {72}
	069 Move X0, X19
	070 Move X1, X31
	071 Call Monitor.Exit, X0
	072 Compare X20, 0
	073 JumpIfNotEqual {80}
	074 Move X20, [X31+32]
	075 Move X19, [X31+40]
	076 Move X22, [X31+16]
	077 Move X21, [X31+24]
	078 Move X30, [X31+48]
	079 Return 
	080 Move X0, X20
	081 Call 0x1C17F18
	082 Call 0x1C17F20
	083 Call 0x1C17F28
	084 Call 0x1C17F44
	085 Move X1, X31
	086 Call 0x1C17DEC
	087 Move X21, X0
	088 NotImplemented "Instruction CMP not yet implemented."
	089 Move X0, X21
	090 Call 0x3EB2AD0
	091 Move X20, [X0]
	092 Call 0x3EB2AE0
	093 Move X20, X31
	094 Move X21, X0
	095 Move W8, [X31+12]
	096 Compare W8, 0
	097 JumpIfEqual {101}
	098 Move X0, X19
	099 Move X1, X31
	100 Call Monitor.Exit, X0
	101 Compare X20, 0
	102 JumpIfNotEqual {105}
	103 Move X0, X21
	104 Call 0x1D2D690
	105 Move X0, X20
	106 Call 0x1C17F18
	107 Call 0x1991590

Method: ExitGames.Client.Photon.ByteArraySlice Acquire(System.Byte[] buffer, System.Int32 offset = 0, System.Int32 count = 0)

Disassembly:
	0x034EDD24 SUB X31, X31, 0xA0
	0x034EDD28 STP X29, X30, [X31 + 0x40]
	0x034EDD2C STP X28, X27, [X31 + 0x50]
	0x034EDD30 STP X26, X25, [X31 + 0x60]
	0x034EDD34 STP X24, X23, [X31 + 0x70]
	0x034EDD38 STP X22, X21, [X31 + 0x80]
	0x034EDD3C STP X20, X19, [X31 + 0x90]
	0x034EDD40 ADRP X23, 0xEF2000
	0x034EDD44 ADRP X22, 0xC07000
	0x034EDD48 ADRP X19, 0xC07000
	0x034EDD4C ADRP X21, 0xC0F000
	0x034EDD50 LDRB W8, [X23 + 0xA0B]
	0x034EDD54 LDR X22, [X22 + 0x1D0]
	0x034EDD58 LDR X19, [X19 + 0x1C0]
	0x034EDD5C LDR X21, [X21 + 0x238]
	0x034EDD60 MOV X20, X0
	0x034EDD64 TBNZ X8, 0x0, 0x34EDE24
	0x034EDD68 ADRP X0, 0xC0F000
	0x034EDD6C LDR X0, [X0 + 0x238]
	0x034EDD70 BL 0x1C16CF4
	0x034EDD74 ADRP X0, 0xC0F000
	0x034EDD78 LDR X0, [X0 + 0x240]
	0x034EDD7C BL 0x1C16CF4
	0x034EDD80 ADRP X0, 0xC0F000
	0x034EDD84 LDR X0, [X0 + 0x248]
	0x034EDD88 BL 0x1C16CF4
	0x034EDD8C ADRP X0, 0xC0F000
	0x034EDD90 LDR X0, [X0 + 0x250]
	0x034EDD94 BL 0x1C16CF4
	0x034EDD98 ADRP X0, 0xC0F000
	0x034EDD9C LDR X0, [X0 + 0x258]
	0x034EDDA0 BL 0x1C16CF4
	0x034EDDA4 ADRP X0, 0xC07000
	0x034EDDA8 LDR X0, [X0 + 0x1B8]
	0x034EDDAC BL 0x1C16CF4
	0x034EDDB0 ADRP X0, 0xC08000
	0x034EDDB4 LDR X0, [X0 + 0xE78]
	0x034EDDB8 BL 0x1C16CF4
	0x034EDDBC ADRP X0, 0xC07000
	0x034EDDC0 LDR X0, [X0 + 0x1C0]
	0x034EDDC4 BL 0x1C16CF4
	0x034EDDC8 ADRP X0, 0xC07000
	0x034EDDCC LDR X0, [X0 + 0x1D0]
	0x034EDDD0 BL 0x1C16CF4
	0x034EDDD4 ADRP X0, 0xC06000
	0x034EDDD8 LDR X0, [X0 + 0xAC8]
	0x034EDDDC BL 0x1C16CF4
	0x034EDDE0 ADRP X0, 0xC33000
	0x034EDDE4 LDR X0, [X0 + 0xFB8]
	0x034EDDE8 BL 0x1C16CF4
	0x034EDDEC ADRP X0, 0xC06000
	0x034EDDF0 LDR X0, [X0 + 0x838]
	0x034EDDF4 BL 0x1C16CF4
	0x034EDDF8 ADRP X0, 0xC11000
	0x034EDDFC LDR X0, [X0 + 0x310]
	0x034EDE00 BL 0x1C16CF4
	0x034EDE04 ADRP X0, 0xC07000
	0x034EDE08 LDR X0, [X0 + 0x608]
	0x034EDE0C BL 0x1C16CF4
	0x034EDE10 ADRP X0, 0xC46000
	0x034EDE14 LDR X0, [X0 + 0x680]
	0x034EDE18 BL 0x1C16CF4
	0x034EDE1C MOVZ W8, 0x1
	0x034EDE20 STRB W8, [X23 + 0xA0B]
	0x034EDE24 LDR X0, [X22]
	0x034EDE28 STP X31, X31, [X31 + 0x20]
	0x034EDE2C STR X31, [X31 + 0x30]
	0x034EDE30 BL 0x1C16F10
	0x034EDE34 LDR X1, [X19]
	0x034EDE38 MOV X19, X0
	0x034EDE3C BL 0x301B7C4
	0x034EDE40 LDR X1, [X21]
	0x034EDE44 MOV X0, X20
	0x034EDE48 BL 0x2AA4E98
	0x034EDE4C CBZ X0, 0x34EE1AC
	0x034EDE50 ADRP X8, 0xC0F000
	0x034EDE54 LDR X8, [X8 + 0x258]
	0x034EDE58 ADRP X27, 0xC0F000
	0x034EDE5C ADRP X28, 0xC33000
	0x034EDE60 ADRP X29, 0xC07000
	0x034EDE64 LDR X27, [X27 + 0x248]
	0x034EDE68 LDR X28, [X28 + 0xFB8]
	0x034EDE6C LDR X29, [X29 + 0x1B8]
	0x034EDE70 LDR X1, [X8]
	0x034EDE74 ADD X8, X31, 0x8
	0x034EDE78 BL 0x2EC7020
	0x034EDE7C LDUR V0, [X31 + 0x8]
	0x034EDE80 LDR X8, [X31 + 0x18]
	0x034EDE84 MOV X21, X31
	0x034EDE88 MOV X22, X31
	0x034EDE8C MOV X23, X31
	0x034EDE90 MOV X24, X31
	0x034EDE94 STR V0, [X31 + 0x2]
	0x034EDE98 STR X8, [X31 + 0x30]
	0x034EDE9C LDR X1, [X27]
	0x034EDEA0 ADD X0, X31, 0x20
	0x034EDEA4 BL 0x2C0B090
	0x034EDEA8 TBZ X0, 0x0, 0x34EE138
	0x034EDEAC LDR X25, [X31 + 0x30]
	0x034EDEB0 CBZ X25, 0x34EDEDC
	0x034EDEB4 MOV X0, X20
	0x034EDEB8 MOV X1, X25
	0x034EDEBC BL 0x34ED878
	0x034EDEC0 CBNZ X0, 0x34EDF88
	0x034EDEC4 LDR X8, [X25]
	0x034EDEC8 LDP X9, X1, [X8 + 0x168]
	0x034EDECC MOV X0, X25
	0x034EDED0 BLR X9
	0x034EDED4 MOV X26, X0
	0x034EDED8 B 0x34EDEE0
	0x034EDEDC MOV X26, X31
	0x034EDEE0 MOV X0, X20
	0x034EDEE4 MOV X1, X25
	0x034EDEE8 BL 0x34ED878
	0x034EDEEC LDR X25, [X28]
	0x034EDEF0 CMP X0, 0x0
	0x034EDEF4 CSEL X24, X24, X0, EQ
	0x034EDEF8 CBZ X0, 0x34EDF18
	0x034EDEFC CBZ X24, 0x34EE1A8
	0x034EDF00 LDR X8, [X24]
	0x034EDF04 LDP X9, X1, [X8 + 0x168]
	0x034EDF08 MOV X0, X24
	0x034EDF0C BLR X9
	0x034EDF10 MOV X2, X0
	0x034EDF14 B 0x34EDF1C
	0x034EDF18 MOV X2, X31
	0x034EDF1C MOV X0, X26
	0x034EDF20 MOV X1, X25
	0x034EDF24 MOV X3, X31

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+16], X30
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move [X31+8], W31
	013 Move X21, [X0+24]
	014 Move W19, W3
	015 Move W20, W2
	016 Move X22, X1
	017 Move X24, X0
	018 Move [X31+12], W31
	019 Add X1, X31, 12
	020 Move X0, X21
	021 Move X2, X31
	022 Call Monitor.Enter, X0, X1
	023 Move X8, [X24+24]
	024 Compare X8, 0
	025 JumpIfEqual {88}
	026 Move W9, [X8+24]
	027 Compare W9, 0
	028 JumpIfEqual {89}
	029 Move X23, [X8+32]
	030 Move [X31+8], W31
	031 Add X1, X31, 8
	032 Move X0, X23
	033 Move X2, X31
	034 Call Monitor.Enter, X0, X1
	035 Move X8, [X24+24]
	036 Compare X8, 0
	037 JumpIfEqual {90}
	038 Move W9, [X8+24]
	039 Compare W9, 0
	040 JumpIfEqual {91}
	041 Move X1, [X8+32]
	042 Move X0, X24
	043 Move W2, W31
	044 Call ByteArraySlicePool.PopOrCreate, X0, X1, X2
	045 Move X25, X0
	046 Move X24, X31
	047 Move W8, [X31+8]
	048 Compare W8, 0
	049 JumpIfEqual {53}
	050 Move X0, X23
	051 Move X1, X31
	052 Call Monitor.Exit, X0
	053 Compare X24, 0
	054 JumpIfNotEqual {92}
	055 Move X23, X31
	056 Move W24, 3
	057 Move W8, [X31+12]
	058 Compare W8, 0
	059 JumpIfEqual {63}
	060 Move X0, X21
	061 Move X1, X31
	062 Call Monitor.Exit, X0
	063 Compare X23, 0
	064 JumpIfNotEqual {86}
	065 NotImplemented "Instruction CMP not yet implemented."
	066 Compare W24, 0
	067 JumpIfNotEqual {73}
	068 Compare X25, 0
	069 JumpIfEqual {94}
	070 Move [X25+16], X22
	071 Move [X25+24], W20
	072 Move [X25+28], W19
	073 Move X0, X25
	074 Move X20, [X31+80]
	075 Move X19, [X31+88]
	076 Move X22, [X31+64]
	077 Move X21, [X31+72]
	078 Move X24, [X31+48]
	079 Move X23, [X31+56]
	080 Move X26, [X31+32]
	081 Move X25, [X31+40]
	082 Move X30, [X31+16]
	083 Move X27, [X31+24]
	084 Add X31, X31, 96
	085 Return X0
	086 Move X0, X23
	087 Call 0x1C17F18
	088 Call 0x1C17F20
	089 Call 0x1C17F28
	090 Call 0x1C17F20
	091 Call 0x1C17F28
	092 Move X0, X24
	093 Call 0x1C17F18
	094 Call 0x1C17F20
	095 Move X26, X1
	096 Move X27, X0
	097 NotImplemented "Instruction CMP not yet implemented."
	098 Move X0, X27
	099 Call 0x3EB2AD0
	100 Move X24, [X0]
	101 Call 0x3EB2AE0
	102 Move X25, X31
	103 Move X24, X31
	104 Move W8, [X31+8]
	105 Compare W8, 0
	106 JumpIfEqual {110}
	107 Move X0, X23
	108 Move X1, X31
	109 Call Monitor.Exit, X0
	110 Compare X24, 0
	111 JumpIfEqual {118}
	112 Move X0, X24
	113 Call 0x1C17F18
	114 Move X26, X1
	115 Move X27, X0
	116 Move X26, X1
	117 Move X27, X0
	118 Move X25, X31
	119 Move X26, X1
	120 Move X27, X0
	121 NotImplemented "Instruction CMP not yet implemented."
	122 Move X0, X27
	123 Call 0x3EB2AD0
	124 Move X23, [X0]
	125 Call 0x3EB2AE0
	126 Move W24, W31
	127 Move X23, X31
	128 Move X27, X0
	129 Move W8, [X31+12]
	130 Compare W8, 0
	131 JumpIfEqual {135}
	132 Move X0, X21
	133 Move X1, X31
	134 Call Monitor.Exit, X0
	135 Compare X23, 0
	136 JumpIfNotEqual {139}
	137 Move X0, X27
	138 Call 0x1D2D690
	139 Move X0, X23
	140 Call 0x1C17F18
	141 Call 0x1991590

Method: ExitGames.Client.Photon.ByteArraySlice Acquire(System.Int32 minByteCount)

Disassembly:
	0x034EE0AC MOV X1, X25
	0x034EE0B0 BL 0x34ED878
	0x034EE0B4 CMP X0, 0x0
	0x034EE0B8 CSEL X22, X22, X0, EQ
	0x034EE0BC CBZ X0, 0x34EE0D4
	0x034EE0C0 CBZ X22, 0x34EE1E8
	0x034EE0C4 LDR X8, [X22]
	0x034EE0C8 LDP X9, X1, [X8 + 0x168]
	0x034EE0CC MOV X0, X22
	0x034EE0D0 BLR X9
	0x034EE0D4 LDR W8, [X26 + 0x18]
	0x034EE0D8 CMP W8, 0x7
	0x034EE0DC B.LS 0x34EE1D0
	0x034EE0E0 STR X0, [X26 + 0x58]
	0x034EE0E4 MOV X0, X26
	0x034EE0E8 MOV X1, X31
	0x034EE0EC BL 0x32278CC
	0x034EE0F0 MOV X1, X0
	0x034EE0F4 CBZ X19, 0x34EE1D8
	0x034EE0F8 LDR W10, [X19 + 0x1C]
	0x034EE0FC LDR X8, [X19 + 0x10]
	0x034EE100 LDR X9, [X29]
	0x034EE104 ADD W10, W10, 0x1
	0x034EE108 STR W10, [X19 + 0x1C]
	0x034EE10C CBZ X8, 0x34EE1CC
	0x034EE110 LDRSW X10, [X19 + 0x18]
	0x034EE114 LDR W11, [X8 + 0x18]
	0x034EE118 CMP W10, W11
	0x034EE11C B.CC 0x34EDF5C
	0x034EE120 LDR X8, [X9 + 0x20]
	0x034EE124 LDR X8, [X8 + 0xC0]
	0x034EE128 LDR X2, [X8 + 0x70]
	0x034EE12C MOV X0, X19
	0x034EE130 BL 0x301BF90
	0x034EE134 B 0x34EDE9C
	0x034EE138 ADRP X8, 0xC0E000
	0x034EE13C LDR X8, [X8 + 0x240]
	0x034EE140 ADD X0, X31, 0x20
	0x034EE144 LDR X1, [X8]
	0x034EE148 BL 0x2C0B08C
	0x034EE14C CBZ X19, 0x34EE1AC
	0x034EE150 ADRP X8, 0xC07000
	0x034EE154 LDR X8, [X8 + 0xE78]
	0x034EE158 MOV X0, X19
	0x034EE15C LDR X1, [X8]
	0x034EE160 BL 0x301DDC4
	0x034EE164 ADRP X8, 0xC05000
	0x034EE168 LDR X8, [X8 + 0x838]
	0x034EE16C MOV X1, X0
	0x034EE170 MOV X2, X31
	0x034EE174 LDR X8, [X8]
	0x034EE178 MOV X0, X8
	0x034EE17C BL 0x3227FF8
	0x034EE180 LDP X20, X19, [X31 + 0x90]
	0x034EE184 LDP X22, X21, [X31 + 0x80]
	0x034EE188 LDP X24, X23, [X31 + 0x70]
	0x034EE18C LDP X26, X25, [X31 + 0x60]
	0x034EE190 LDP X28, X27, [X31 + 0x50]
	0x034EE194 LDP X29, X30, [X31 + 0x40]
	0x034EE198 ADD X31, X31, 0xA0
	0x034EE19C RET
	0x034EE1A0 BL 0x1C16F20
	0x034EE1A4 BL 0x1C16F20
	0x034EE1A8 BL 0x1C16F20
	0x034EE1AC BL 0x1C16F20
	0x034EE1B0 BL 0x1C16F28
	0x034EE1B4 BL 0x1C16F28
	0x034EE1B8 BL 0x1C16F28
	0x034EE1BC BL 0x1C16F28
	0x034EE1C0 BL 0x1C16F28
	0x034EE1C4 BL 0x1C16F28
	0x034EE1C8 BL 0x1C16F20
	0x034EE1CC BL 0x1C16F20
	0x034EE1D0 BL 0x1C16F28
	0x034EE1D4 BL 0x1C16F28
	0x034EE1D8 BL 0x1C16F20
	0x034EE1DC BL 0x1C16F20
	0x034EE1E0 BL 0x1C16F20
	0x034EE1E4 BL 0x1C16F20
	0x034EE1E8 BL 0x1C16F20
	0x034EE1EC B 0x34EE248
	0x034EE1F0 B 0x34EE248
	0x034EE1F4 B 0x34EE248
	0x034EE1F8 B 0x34EE248
	0x034EE1FC B 0x34EE248
	0x034EE200 B 0x34EE248
	0x034EE204 B 0x34EE248
	0x034EE208 B 0x34EE248
	0x034EE20C B 0x34EE248
	0x034EE210 B 0x34EE248
	0x034EE214 B 0x34EE248
	0x034EE218 B 0x34EE248
	0x034EE21C B 0x34EE248
	0x034EE220 B 0x34EE248
	0x034EE224 B 0x34EE248
	0x034EE228 B 0x34EE248
	0x034EE22C B 0x34EE248
	0x034EE230 B 0x34EE248
	0x034EE234 B 0x34EE248
	0x034EE238 B 0x34EE248
	0x034EE23C B 0x34EE248
	0x034EE240 B 0x34EE248
	0x034EE244 B 0x34EE248
	0x034EE248 MOV X20, X0
	0x034EE24C CMP W1, 0x1
	0x034EE250 B.NE 0x34EE284
	0x034EE254 MOV X0, X20
	0x034EE258 BL 0x3EB1AD0
	0x034EE25C LDR X21, [X0]
	0x034EE260 BL 0x3EB1AE0
	0x034EE264 ADRP X8, 0xC0E000
	0x034EE268 LDR X8, [X8 + 0x240]
	0x034EE26C ADD X0, X31, 0x20
	0x034EE270 LDR X1, [X8]
	0x034EE274 BL 0x2C0B08C
	0x034EE278 CBZ X21, 0x34EE14C
	0x034EE27C MOV X0, X21
	0x034EE280 BL 0x1C16F18
	0x034EE284 MOV X21, X31
	0x034EE288 B 0x34EE290
	0x034EE28C MOV X20, X0
	0x034EE290 ADRP X8, 0xC0E000
	0x034EE294 LDR X8, [X8 + 0x240]
	0x034EE298 LDR X1, [X8]
	0x034EE29C ADD X0, X31, 0x20
	0x034EE2A0 BL 0x2C0B08C
	0x034EE2A4 CBNZ X21, 0x34EE2B0
	0x034EE2A8 MOV X0, X20
	0x034EE2AC BL 0x1D2C690
	0x034EE2B0 MOV X0, X21
	0x034EE2B4 BL 0x1C16F18
	0x034EE2B8 BL 0x1990590
	0x034EE2BC STR X30, [X31 - 0x30]!
	0x034EE2C0 STP X22, X21, [X31 + 0x10]
	0x034EE2C4 STP X20, X19, [X31 + 0x20]
	0x034EE2C8 ADRP X21, 0xEF1000
	0x034EE2CC ADRP X22, 0xC36000
	0x034EE2D0 ADRP X20, 0xC45000
	0x034EE2D4 LDRB W8, [X21 + 0xA0C]
	0x034EE2D8 LDR X22, [X22 + 0xB28]
	0x034EE2DC LDR X20, [X20 + 0x688]
	0x034EE2E0 MOV X19, X0
	0x034EE2E4 TBNZ X8, 0x0, 0x34EE308
	0x034EE2E8 ADRP X0, 0xC45000
	0x034EE2EC LDR X0, [X0 + 0x688]
	0x034EE2F0 BL 0x1C16CF4
	0x034EE2F4 ADRP X0, 0xC36000
	0x034EE2F8 LDR X0, [X0 + 0xB28]
	0x034EE2FC BL 0x1C16CF4
	0x034EE300 MOVZ W8, 0x1
	0x034EE304 STRB W8, [X21 + 0xA0C]
	0x034EE308 LDR X0, [X22]
	0x034EE30C BL 0x1C16F10
	0x034EE310 LDR X2, [X20]
	0x034EE314 MOV X1, X19
	0x034EE318 MOV X20, X0
	0x034EE31C BL 0x2AA48CC
	0x034EE320 MOV X0, X20
	0x034EE324 LDP X20, X19, [X31 + 0x20]
	0x034EE328 LDP X22, X21, [X31 + 0x10]
	0x034EE32C LDR X30, [X31], #0x30
	0x034EE330 RET
	0x034EE334 SUB X31, X31, 0x40
	0x034EE338 STP X30, X21, [X31 + 0x20]
	0x034EE33C STP X20, X19, [X31 + 0x30]
	0x034EE340 ADRP X21, 0xEF1000
	0x034EE344 ADRP X20, 0xC0D000
	0x034EE348 LDRB W8, [X21 + 0xA0D]
	0x034EE34C LDR X20, [X20 + 0xF10]
	0x034EE350 MOV X19, X0
	0x034EE354 TBNZ X8, 0x0, 0x34EE390
	0x034EE358 ADRP X0, 0xC0D000
	0x034EE35C LDR X0, [X0 + 0xF10]
	0x034EE360 BL 0x1C16CF4
	0x034EE364 ADRP X0, 0xC45000
	0x034EE368 LDR X0, [X0 + 0x690]
	0x034EE36C BL 0x1C16CF4
	0x034EE370 ADRP X0, 0xC45000
	0x034EE374 LDR X0, [X0 + 0x698]
	0x034EE378 BL 0x1C16CF4
	0x034EE37C ADRP X0, 0xC45000
	0x034EE380 LDR X0, [X0 + 0x6A0]
	0x034EE384 BL 0x1C16CF4
	0x034EE388 MOVZ W8, 0x1
	0x034EE38C STRB W8, [X21 + 0xA0D]
	0x034EE390 LDP X1, X2, [X19 + 0x10]
	0x034EE394 ADD X0, X31, 0x10
	0x034EE398 MOV X3, X31
	0x034EE39C STP X31, X31, [X31 + 0x10]
	0x034EE3A0 BL 0x335035C
	0x034EE3A4 LDR V0, [X31 + 0x1]
	0x034EE3A8 LDR X0, [X20]
	0x034EE3AC ADD X1, X31, 0x0
	0x034EE3B0 STR V0, [X31]
	0x034EE3B4 BL 0x1C16E04
	0x034EE3B8 LDP X20, X19, [X31 + 0x30]
	0x034EE3BC LDP X30, X21, [X31 + 0x20]
	0x034EE3C0 ADD X31, X31, 0x40
	0x034EE3C4 RET
	0x034EE3C8 SUB X31, X31, 0x30
	0x034EE3CC STR X30, [X31 + 0x10]
	0x034EE3D0 STP X20, X19, [X31 + 0x20]
	0x034EE3D4 ADRP X20, 0xEF1000
	0x034EE3D8 LDRB W8, [X20 + 0xA0E]
	0x034EE3DC MOV X19, X0
	0x034EE3E0 TBNZ X8, 0x0, 0x34EE410
	0x034EE3E4 ADRP X0, 0xC45000

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+32], X24
	004 Move [X31+40], X23
	005 Move [X31+48], X22
	006 Move [X31+56], X21
	007 Move [X31+64], X20
	008 Move [X31+72], X19
	009 Move X20, 0xEF2000
	010 Move W8, [X20+2555]
	011 Move W19, W1
	012 Move X21, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0xC46000
	018 Move X0, [X0+1568]
	019 Call 0x1C17CF4
	020 Move X0, 0xC46000
	021 Move X0, [X0+1576]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X20+2555], W8
	025 Move [X31+24], W31
	026 Move TEMP, X19
	027 And TEMP, TEMP, -2147483648
	028 Compare TEMP, -2147483648
	029 JumpIfEqual {119}
	030 Move W22, [X21+16]
	031 Compare W19, 0
	032 JumpIfEqual {41}
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Subtract W8, W19, 1
	035 NotImplemented "Instruction ASRV not yet implemented."
	036 Compare W9, 0
	037 JumpIfEqual {41}
	038 Add W22, W22, 1
	039 NotImplemented "Instruction CMP not yet implemented."
	040 Move W22, 32
	041 Move X19, [X21+24]
	042 Move [X31+28], W31
	043 Add X1, X31, 28
	044 Move X0, X19
	045 Move X2, X31
	046 Call Monitor.Enter, X0, X1
	047 Move X8, [X21+24]
	048 Compare X8, 0
	049 JumpIfEqual {162}
	050 Move W9, [X8+24]
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Move X23, W22
	053 Add X8, X8, X23
	054 Move X20, [X8+32]
	055 Compare X20, 0
	056 JumpIfNotEqual {81}
	057 Move X8, 0xC46000
	058 Move X8, [X8+1576]
	059 Move X0, [X8]
	060 Call 0x1C17F10
	061 Move X8, 0xC46000
	062 Move X8, [X8+1568]
	063 Move X20, X0
	064 Move X1, [X8]
	065 Call Stack`1<Object>..ctor, X0
	066 Move X24, [X21+24]
	067 Compare X24, 0
	068 JumpIfEqual {166}
	069 Compare X20, 0
	070 JumpIfEqual {77}
	071 Move X8, [X24]
	072 Move X1, [X8+64]
	073 Move X0, X20
	074 Call 0x1C17E00
	075 Compare X0, 0
	076 JumpIfEqual {168}
	077 Move W8, [X24+24]
	078 NotImplemented "Instruction CMP not yet implemented."
	079 Add X8, X24, X23
	080 Move [X8+32], X20
	081 Move [X31+24], W31
	082 Add X1, X31, 24
	083 Move X0, X20
	084 Move X2, X31
	085 Call Monitor.Enter, X0, X1
	086 Move X0, X21
	087 Move X1, X20
	088 Move W2, W22
	089 Call ByteArraySlicePool.PopOrCreate, X0, X1, X2
	090 Move X23, X0
	091 Move X21, X31
	092 Move W8, [X31+24]
	093 Compare W8, 0
	094 JumpIfEqual {98}
	095 Move X0, X20
	096 Move X1, X31
	097 Call Monitor.Exit, X0
	098 Compare X21, 0
	099 JumpIfNotEqual {164}
	100 Move X20, X31
	101 Move W8, [X31+28]
	102 Compare W8, 0
	103 JumpIfEqual {107}
	104 Move X0, X19
	105 Move X1, X31
	106 Call Monitor.Exit, X0
	107 Compare X20, 0
	108 JumpIfNotEqual {160}
	109 Move X0, X23
	110 Move X20, [X31+64]
	111 Move X19, [X31+72]
	112 Move X22, [X31+48]
	113 Move X21, [X31+56]
	114 Move X24, [X31+32]
	115 Move X23, [X31+40]
	116 Move X30, [X31+16]
	117 Add X31, X31, 80
	118 Return X0
	119 Move X0, 0xC46000
	120 Move X0, [X0+1600]
	121 Call 0x1C17D08
	122 Move X19, X0
	123 Move X0, 0xC06000
	124 Move X0, [X0+1728]
	125 Call 0x1C17D08
	126 Call 0x19913D0
	127 Move X0, X19
	128 Move X1, X31
	129 Call Type.GetTypeFromHandle, X0
	130 Move X19, X0
	131 Call 0x19913C0
	132 Move X8, [X19]
	133 Move X0, X19
	134 Move X9, [X8+424]
	135 Move X1, [X8+432]
	136 NotImplemented "Instruction BLR not yet implemented."
	137 Move X19, X0
	138 Move X0, 0xC46000
	139 Move X0, [X0+1608]
	140 Call 0x1C17D08
	141 Move X1, X0
	142 Move X0, X19
	143 Move X2, X31
	144 Call String.Concat, X0, X1
	145 Move X19, X0
	146 Move X0, 0xC06000
	147 Move X0, [X0+2000]
	148 Call 0x1C17D08
	149 Call 0x1C17F10
	150 Move X1, X19
	151 Move X2, X31
	152 Move X20, X0
	153 Call Exception..ctor, X0, X1
	154 Move X0, 0xC46000
	155 Move X0, [X0+1616]
	156 Call 0x1C17D08
	157 Move X1, X0
	158 Move X0, X20
	159 Call 0x1C17DEC
	160 Move X0, X20
	161 Call 0x1C17F18
	162 Call 0x1C17F20
	163 Call 0x1C17F28
	164 Move X0, X21
	165 Call 0x1C17F18
	166 Call 0x1C17F20
	167 Call 0x1C17F28
	168 Call 0x1C17F44
	169 Move X1, X31
	170 Call 0x1C17DEC
	171 Move X22, X1
	172 Move X21, X0
	173 NotImplemented "Instruction CMP not yet implemented."
	174 Move X0, X21
	175 Call 0x3EB2AD0
	176 Move X8, [X0]
	177 Move [X31+8], X8
	178 Call 0x3EB2AE0
	179 Move X21, [X31+8]
	180 Move X23, X31
	181 Move [X31+8], X31
	182 Move W8, [X31+24]
	183 Compare W8, 0
	184 JumpIfEqual {188}
	185 Move X0, X20
	186 Move X1, X31
	187 Call Monitor.Exit, X0
	188 Move X8, [X31+8]
	189 Compare X8, 0
	190 JumpIfEqual {197}
	191 Move X0, [X31+8]
	192 Call 0x1C17F18
	193 Move X22, X1
	194 Move X21, X0
	195 Move X22, X1
	196 Move X21, X0
	197 Move X23, X31
	198 Move X22, X1
	199 Move X21, X0
	200 NotImplemented "Instruction CMP not yet implemented."
	201 Move X0, X21
	202 Call 0x3EB2AD0
	203 Move X20, [X0]
	204 Call 0x3EB2AE0
	205 Move X20, X31
	206 Move X21, X0
	207 Move W8, [X31+28]
	208 Compare W8, 0
	209 JumpIfEqual {213}
	210 Move X0, X19
	211 Move X1, X31
	212 Call Monitor.Exit, X0
	213 Compare X20, 0
	214 JumpIfNotEqual {217}
	215 Move X0, X21
	216 Call 0x1D2D690
	217 Move X0, X20
	218 Call 0x1C17F18
	219 Call 0x1991590

Method: ExitGames.Client.Photon.ByteArraySlice PopOrCreate(System.Collections.Generic.Stack`1<ExitGames.Client.Photon.ByteArraySlice> stack, System.Int32 stackIndex)

Disassembly:
	0x034EDF28 BL 0x32274B8
	0x034EDF2C MOV X1, X0
	0x034EDF30 CBZ X19, 0x34EE1A0
	0x034EDF34 LDR W10, [X19 + 0x1C]
	0x034EDF38 LDR X8, [X19 + 0x10]
	0x034EDF3C LDR X9, [X29]
	0x034EDF40 ADD W10, W10, 0x1
	0x034EDF44 STR W10, [X19 + 0x1C]
	0x034EDF48 CBZ X8, 0x34EE1A4
	0x034EDF4C LDRSW X10, [X19 + 0x18]
	0x034EDF50 LDR W11, [X8 + 0x18]
	0x034EDF54 CMP W10, W11
	0x034EDF58 B.CS 0x34EDF70
	0x034EDF5C ADD W9, W10, 0x1
	0x034EDF60 ADD X8, X8, X10, 0x3, LSL
	0x034EDF64 STR W9, [X19 + 0x18]
	0x034EDF68 STR X1, [X8 + 0x20]
	0x034EDF6C B 0x34EDE9C
	0x034EDF70 LDR X8, [X9 + 0x20]
	0x034EDF74 LDR X8, [X8 + 0xC0]
	0x034EDF78 LDR X2, [X8 + 0x70]
	0x034EDF7C MOV X0, X19
	0x034EDF80 BL 0x301BF90
	0x034EDF84 B 0x34EDE9C
	0x034EDF88 ADRP X8, 0xC06000
	0x034EDF8C LDR X8, [X8 + 0xAC8]
	0x034EDF90 LDR X0, [X8]
	0x034EDF94 MOVZ W1, 0x8
	0x034EDF98 BL 0x1C16D6C
	0x034EDF9C MOV X26, X0
	0x034EDFA0 CBZ X0, 0x34EE1C8
	0x034EDFA4 LDR W8, [X26 + 0x18]
	0x034EDFA8 CBZ W8, 0x34EE1D4
	0x034EDFAC ADRP X8, 0xC11000
	0x034EDFB0 LDR X8, [X8 + 0x310]
	0x034EDFB4 LDR X8, [X8]
	0x034EDFB8 STR X8, [X26 + 0x20]
	0x034EDFBC MOV X0, X25
	0x034EDFC0 MOV X1, X31
	0x034EDFC4 BL 0x33BE520
	0x034EDFC8 CMP X0, 0x0
	0x034EDFCC CSEL X23, X23, X0, EQ
	0x034EDFD0 CBZ X0, 0x34EDFE8
	0x034EDFD4 CBZ X23, 0x34EE1E0
	0x034EDFD8 LDR X8, [X23]
	0x034EDFDC LDP X9, X1, [X8 + 0x168]
	0x034EDFE0 MOV X0, X23
	0x034EDFE4 BLR X9
	0x034EDFE8 LDR W8, [X26 + 0x18]
	0x034EDFEC CMP W8, 0x1
	0x034EDFF0 B.LS 0x34EE1C4
	0x034EDFF4 CMP W8, 0x2
	0x034EDFF8 STR X0, [X26 + 0x28]
	0x034EDFFC B.EQ 0x34EE1B0
	0x034EE000 ADRP X8, 0xC06000
	0x034EE004 LDR X8, [X8 + 0x608]
	0x034EE008 LDR X8, [X8]
	0x034EE00C STR X8, [X26 + 0x30]
	0x034EE010 LDR X8, [X25]
	0x034EE014 LDP X9, X1, [X8 + 0x168]
	0x034EE018 MOV X0, X25
	0x034EE01C BLR X9
	0x034EE020 LDR W8, [X26 + 0x18]
	0x034EE024 CMP W8, 0x3
	0x034EE028 B.LS 0x34EE1BC
	0x034EE02C CMP W8, 0x4
	0x034EE030 STR X0, [X26 + 0x38]
	0x034EE034 B.EQ 0x34EE1B4
	0x034EE038 ADRP X8, 0xC45000
	0x034EE03C LDR X8, [X8 + 0x680]
	0x034EE040 LDR X8, [X8]
	0x034EE044 STR X8, [X26 + 0x40]
	0x034EE048 MOV X0, X20
	0x034EE04C MOV X1, X25
	0x034EE050 BL 0x34ED878
	0x034EE054 CBZ X0, 0x34EE1DC
	0x034EE058 MOV X1, X31
	0x034EE05C BL 0x33BE520
	0x034EE060 CMP X0, 0x0
	0x034EE064 CSEL X21, X21, X0, EQ
	0x034EE068 CBZ X0, 0x34EE080
	0x034EE06C CBZ X21, 0x34EE1E4
	0x034EE070 LDR X8, [X21]
	0x034EE074 LDP X9, X1, [X8 + 0x168]
	0x034EE078 MOV X0, X21
	0x034EE07C BLR X9
	0x034EE080 LDR W8, [X26 + 0x18]
	0x034EE084 CMP W8, 0x5
	0x034EE088 B.LS 0x34EE1C0
	0x034EE08C CMP W8, 0x6
	0x034EE090 STR X0, [X26 + 0x48]
	0x034EE094 B.EQ 0x34EE1B8
	0x034EE098 ADRP X8, 0xC06000
	0x034EE09C LDR X8, [X8 + 0x608]
	0x034EE0A0 LDR X8, [X8]
	0x034EE0A4 STR X8, [X26 + 0x50]
	0x034EE0A8 MOV X0, X20

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X22, 0xEF3000
	009 Move W8, [X22+2556]
	010 Move W20, W2
	011 Move X21, X1
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {28}
	017 Move X0, 0xC0F000
	018 Move X0, [X0+3224]
	019 Call 0x1C17CF4
	020 Move X0, 0xC47000
	021 Move X0, [X0+1584]
	022 Call 0x1C17CF4
	023 Move X0, 0xC47000
	024 Move X0, [X0+1592]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X22+2556], W8
	028 Move [X31+12], W31
	029 Add X1, X31, 12
	030 Move X0, X21
	031 Move X2, X31
	032 Call Monitor.Enter, X0, X1
	033 Compare X21, 0
	034 JumpIfEqual {80}
	035 Move W8, [X21+24]
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Move X8, 0xC47000
	038 Move X8, [X8+1584]
	039 Move X1, [X8]
	040 Move X0, X21
	041 Call Stack`1<Object>.Pop, X0
	042 Move X23, X0
	043 Move X22, X31
	044 Move W24, 3
	045 Move X22, X31
	046 Move X23, X31
	047 Move W24, 4
	048 Move W8, [X31+12]
	049 Compare W8, 0
	050 JumpIfEqual {54}
	051 Move X0, X21
	052 Move X1, X31
	053 Call Monitor.Exit, X0
	054 Compare X22, 0
	055 JumpIfNotEqual {78}
	056 Or W8, W24, 4
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Move X8, 0xC0F000
	059 Move X8, [X8+3224]
	060 Move X0, [X8]
	061 Call 0x1C17F10
	062 Move X1, X19
	063 Move W2, W20
	064 Move X23, X0
	065 Call ByteArraySlice..ctor, X0, X1, X2
	066 Move W8, [X19+32]
	067 Add W8, W8, 1
	068 Move [X19+32], W8
	069 Move X0, X23
	070 Move X20, [X31+48]
	071 Move X19, [X31+56]
	072 Move X22, [X31+32]
	073 Move X21, [X31+40]
	074 Move X24, [X31+16]
	075 Move X23, [X31+24]
	076 Move X30, [X31+64]
	077 Return X0
	078 Move X0, X22
	079 Call 0x1C17F18
	080 Call 0x1C17F20
	081 Move X23, X0
	082 NotImplemented "Instruction CMP not yet implemented."
	083 Move X0, X23
	084 Call 0x3EB2AD0
	085 Move X22, [X0]
	086 Call 0x3EB2AE0
	087 Move W24, W31
	088 Move X23, X31
	089 Move X22, X31
	090 Move X23, X0
	091 Move W8, [X31+12]
	092 Compare W8, 0
	093 JumpIfEqual {97}
	094 Move X0, X21
	095 Move X1, X31
	096 Call Monitor.Exit, X0
	097 Compare X22, 0
	098 JumpIfNotEqual {101}
	099 Move X0, X23
	100 Call 0x1D2D690
	101 Move X0, X22
	102 Call 0x1C17F18
	103 Call 0x1991590

Method: System.Boolean Release(ExitGames.Client.Photon.ByteArraySlice slice, System.Int32 stackIndex)

Disassembly:
	0x034ED934 LDP X22, X21, [X31 + 0x10]
	0x034ED938 LDP X30, X23, [X31], #0x30
	0x034ED93C B 0x2AA5084
	0x034ED940 STR X30, [X31 - 0x30]!
	0x034ED944 STP X22, X21, [X31 + 0x10]
	0x034ED948 STP X20, X19, [X31 + 0x20]
	0x034ED94C ADRP X22, 0xEF2000
	0x034ED950 ADRP X21, 0xC0E000
	0x034ED954 LDRB W8, [X22 + 0xA05]
	0x034ED958 LDR X21, [X21 + 0xDA0]
	0x034ED95C MOV W20, W1
	0x034ED960 MOV X19, X0
	0x034ED964 TBNZ X8, 0x0, 0x34ED988
	0x034ED968 ADRP X0, 0xC2F000
	0x034ED96C LDR X0, [X0 + 0x700]
	0x034ED970 BL 0x1C16CF4
	0x034ED974 ADRP X0, 0xC0E000
	0x034ED978 LDR X0, [X0 + 0xDA0]
	0x034ED97C BL 0x1C16CF4
	0x034ED980 MOVZ W8, 0x1
	0x034ED984 STRB W8, [X22 + 0xA05]
	0x034ED988 LDR X0, [X21]
	0x034ED98C STR X31, [X31 + 0x8]
	0x034ED990 LDR W8, [X0 + 0xE0]
	0x034ED994 CBNZ W8, 0x34ED9A0
	0x034ED998 BL 0x1C16DFC
	0x034ED99C LDR X0, [X21]
	0x034ED9A0 LDR X8, [X0 + 0xB8]
	0x034ED9A4 LDR X8, [X8]
	0x034ED9A8 CBZ X8, 0x34ED9EC
	0x034ED9AC LDR W9, [X8 + 0x18]
	0x034ED9B0 CMP W9, W20, UXTB
	0x034ED9B4 B.LS 0x34ED9F0
	0x034ED9B8 ADRP X9, 0xC2F000
	0x034ED9BC LDR X9, [X9 + 0x700]
	0x034ED9C0 ADD X8, X8, W20, 0x3, UXTB
	0x034ED9C4 LDR X1, [X8 + 0x20]
	0x034ED9C8 ADD X2, X31, 0x8
	0x034ED9CC LDR X3, [X9]
	0x034ED9D0 MOV X0, X19
	0x034ED9D4 BL 0x2AA6B2C
	0x034ED9D8 LDR X0, [X31 + 0x8]
	0x034ED9DC LDP X20, X19, [X31 + 0x20]
	0x034ED9E0 LDP X22, X21, [X31 + 0x10]
	0x034ED9E4 LDR X30, [X31], #0x30
	0x034ED9E8 RET
	0x034ED9EC BL 0x1C16F20
	0x034ED9F0 BL 0x1C16F28
	0x034ED9F4 STP X30, X23, [X31 - 0x30]!
	0x034ED9F8 STP X22, X21, [X31 + 0x10]
	0x034ED9FC STP X20, X19, [X31 + 0x20]
	0x034EDA00 ADRP X23, 0xEF2000
	0x034EDA04 ADRP X22, 0xC0E000
	0x034EDA08 LDRB W8, [X23 + 0xA06]
	0x034EDA0C LDR X22, [X22 + 0xDA0]
	0x034EDA10 MOV X19, X2
	0x034EDA14 MOV W21, W1
	0x034EDA18 MOV X20, X0
	0x034EDA1C TBNZ X8, 0x0, 0x34EDA40
	0x034EDA20 ADRP X0, 0xC46000
	0x034EDA24 LDR X0, [X0 + 0x668]
	0x034EDA28 BL 0x1C16CF4
	0x034EDA2C ADRP X0, 0xC0E000
	0x034EDA30 LDR X0, [X0 + 0xDA0]
	0x034EDA34 BL 0x1C16CF4
	0x034EDA38 MOVZ W8, 0x1
	0x034EDA3C STRB W8, [X23 + 0xA06]
	0x034EDA40 LDR X0, [X22]
	0x034EDA44 LDR W8, [X0 + 0xE0]
	0x034EDA48 CBNZ W8, 0x34EDA54
	0x034EDA4C BL 0x1C16DFC
	0x034EDA50 LDR X0, [X22]
	0x034EDA54 LDR X8, [X0 + 0xB8]
	0x034EDA58 LDR X8, [X8]
	0x034EDA5C CBZ X8, 0x34EDA98
	0x034EDA60 LDR W9, [X8 + 0x18]
	0x034EDA64 CMP W9, W21, UXTB
	0x034EDA68 B.LS 0x34EDA9C
	0x034EDA6C ADRP X9, 0xC46000
	0x034EDA70 LDR X9, [X9 + 0x668]
	0x034EDA74 ADD X8, X8, W21, 0x3, UXTB
	0x034EDA78 LDR X1, [X8 + 0x20]
	0x034EDA7C MOV X0, X20
	0x034EDA80 LDR X3, [X9]
	0x034EDA84 MOV X2, X19
	0x034EDA88 LDP X20, X19, [X31 + 0x20]
	0x034EDA8C LDP X22, X21, [X31 + 0x10]
	0x034EDA90 LDP X30, X23, [X31], #0x30
	0x034EDA94 B 0x2AA5084
	0x034EDA98 BL 0x1C16F20
	0x034EDA9C BL 0x1C16F28
	0x034EDAA0 STP X30, X23, [X31 - 0x30]!
	0x034EDAA4 STP X22, X21, [X31 + 0x10]
	0x034EDAA8 STP X20, X19, [X31 + 0x20]
	0x034EDAAC ADRP X23, 0xEF2000
	0x034EDAB0 ADRP X22, 0xC0E000
	0x034EDAB4 LDRB W8, [X23 + 0xA07]
	0x034EDAB8 LDR X22, [X22 + 0xDA0]
	0x034EDABC MOV X19, X2
	0x034EDAC0 MOV W21, W1
	0x034EDAC4 MOV X20, X0
	0x034EDAC8 TBNZ X8, 0x0, 0x34EDAEC
	0x034EDACC ADRP X0, 0xC46000
	0x034EDAD0 LDR X0, [X0 + 0x670]
	0x034EDAD4 BL 0x1C16CF4
	0x034EDAD8 ADRP X0, 0xC0E000
	0x034EDADC LDR X0, [X0 + 0xDA0]
	0x034EDAE0 BL 0x1C16CF4
	0x034EDAE4 MOVZ W8, 0x1
	0x034EDAE8 STRB W8, [X23 + 0xA07]
	0x034EDAEC LDR X0, [X22]
	0x034EDAF0 LDR W8, [X0 + 0xE0]
	0x034EDAF4 CBNZ W8, 0x34EDB00
	0x034EDAF8 BL 0x1C16DFC
	0x034EDAFC LDR X0, [X22]
	0x034EDB00 LDR X8, [X0 + 0xB8]
	0x034EDB04 LDR X8, [X8]
	0x034EDB08 CBZ X8, 0x34EDB44
	0x034EDB0C LDR W9, [X8 + 0x18]
	0x034EDB10 CMP W9, W21, UXTB
	0x034EDB14 B.LS 0x34EDB48
	0x034EDB18 ADRP X9, 0xC46000
	0x034EDB1C LDR X9, [X9 + 0x670]
	0x034EDB20 ADD X8, X8, W21, 0x3, UXTB
	0x034EDB24 LDR X1, [X8 + 0x20]
	0x034EDB28 MOV X0, X20
	0x034EDB2C LDR X3, [X9]
	0x034EDB30 MOV X2, X19
	0x034EDB34 LDP X20, X19, [X31 + 0x20]
	0x034EDB38 LDP X22, X21, [X31 + 0x10]
	0x034EDB3C LDP X30, X23, [X31], #0x30
	0x034EDB40 B 0x2AA5098
	0x034EDB44 BL 0x1C16F20
	0x034EDB48 BL 0x1C16F28
	0x034EDB4C STR X30, [X31 - 0x30]!
	0x034EDB50 STP X22, X21, [X31 + 0x10]
	0x034EDB54 STP X20, X19, [X31 + 0x20]
	0x034EDB58 ADRP X22, 0xEF2000
	0x034EDB5C ADRP X21, 0xC0E000

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X19, 0xEF3000
	011 Move W8, [X19+2557]
	012 Move W23, W2
	013 Move X22, X1
	014 Move X24, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {24}
	019 Move X0, 0xC47000
	020 Move X0, [X0+1552]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X19+2557], W8
	024 NotImplemented "Instruction CMP not yet implemented."
	025 NotImplemented "Instruction CSET not yet implemented."
	026 NotImplemented "Instruction CMP not yet implemented."
	027 NotImplemented "Instruction CSET not yet implemented."
	028 And W20, W8, W9
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move [X31+8], W31
	031 Compare W23, 0
	032 JumpIfNotEqual {34}
	033 Move [X22+16], X31
	034 Move X19, [X24+24]
	035 Move [X31+12], W31
	036 Add X1, X31, 12
	037 Move X0, X19
	038 Move X2, X31
	039 Call Monitor.Enter, X0, X1
	040 Move X8, [X24+24]
	041 Compare X8, 0
	042 JumpIfEqual {98}
	043 Move W9, [X8+24]
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Move W25, W23
	046 Add X8, X8, X25
	047 Move X21, [X8+32]
	048 Move [X31+8], W31
	049 Add X1, X31, 8
	050 Move X0, X21
	051 Move X2, X31
	052 Call Monitor.Enter, X0, X1
	053 Move X8, [X24+24]
	054 Compare X8, 0
	055 JumpIfEqual {100}
	056 Move W9, [X8+24]
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Add X8, X8, X25
	059 Move X0, [X8+32]
	060 Compare X0, 0
	061 JumpIfEqual {102}
	062 Move X8, 0xC47000
	063 Move X8, [X8+1552]
	064 Move X2, [X8]
	065 Move X1, X22
	066 Call Stack`1<Object>.Push, X0, X1
	067 Move X24, X31
	068 Move W8, [X31+8]
	069 Compare W8, 0
	070 JumpIfEqual {74}
	071 Move X0, X21
	072 Move X1, X31
	073 Call Monitor.Exit, X0
	074 Compare X24, 0
	075 JumpIfNotEqual {103}
	076 Move X21, X31
	077 Move W8, [X31+12]
	078 Compare W8, 0
	079 JumpIfEqual {83}
	080 Move X0, X19
	081 Move X1, X31
	082 Call Monitor.Exit, X0
	083 Compare X21, 0
	084 JumpIfNotEqual {96}
	085 Move W0, W20
	086 Move X20, [X31+64]
	087 Move X19, [X31+72]
	088 Move X22, [X31+48]
	089 Move X21, [X31+56]
	090 Move X24, [X31+32]
	091 Move X23, [X31+40]
	092 Move X30, [X31+16]
	093 Move X25, [X31+24]
	094 Add X31, X31, 80
	095 Return X0
	096 Move X0, X21
	097 Call 0x1C17F18
	098 Call 0x1C17F20
	099 Call 0x1C17F28
	100 Call 0x1C17F20
	101 Call 0x1C17F28
	102 Call 0x1C17F20
	103 Move X0, X24
	104 Call 0x1C17F18
	105 Move X23, X1
	106 Move X22, X0
	107 Move X23, X1
	108 Move X22, X0
	109 NotImplemented "Instruction CMP not yet implemented."
	110 Move X0, X22
	111 Call 0x3EB2AD0
	112 Move X24, [X0]
	113 Call 0x3EB2AE0
	114 Move X24, X31
	115 Move W8, [X31+8]
	116 Compare W8, 0
	117 JumpIfEqual {121}
	118 Move X0, X21
	119 Move X1, X31
	120 Call Monitor.Exit, X0
	121 Compare X24, 0
	122 JumpIfNotEqual {129}
	123 NotImplemented "Instruction CMP not yet implemented."
	124 Move X0, X22
	125 Call 0x3EB2AD0
	126 Move X21, [X0]
	127 Call 0x3EB2AE0
	128 Move X21, X31
	129 Move X0, X24
	130 Call 0x1C17F18
	131 Move X23, X1
	132 Move X22, X0
	133 Move X22, X0
	134 Move W8, [X31+12]
	135 Compare W8, 0
	136 JumpIfEqual {140}
	137 Move X0, X19
	138 Move X1, X31
	139 Call Monitor.Exit, X0
	140 Compare X21, 0
	141 JumpIfNotEqual {144}
	142 Move X0, X22
	143 Call 0x1D2D690
	144 Move X0, X21
	145 Call 0x1C17F18
	146 Call 0x1991590

Method: System.Void ClearPools(System.Int32 lower = 0, System.Int32 upper = 2147483647)

Disassembly:
	0x034EE3E8 LDR X0, [X0 + 0x690]
	0x034EE3EC BL 0x1C16CF4
	0x034EE3F0 ADRP X0, 0xC45000
	0x034EE3F4 LDR X0, [X0 + 0x698]
	0x034EE3F8 BL 0x1C16CF4
	0x034EE3FC ADRP X0, 0xC45000
	0x034EE400 LDR X0, [X0 + 0x6A0]
	0x034EE404 BL 0x1C16CF4
	0x034EE408 MOVZ W8, 0x1
	0x034EE40C STRB W8, [X20 + 0xA0E]
	0x034EE410 LDP X1, X2, [X19 + 0x10]
	0x034EE414 ADD X0, X31, 0x0
	0x034EE418 MOV X3, X31
	0x034EE41C STP X31, X31, [X31]
	0x034EE420 BL 0x335035C
	0x034EE424 LDP X0, X1, [X31]
	0x034EE428 LDP X20, X19, [X31 + 0x20]
	0x034EE42C LDR X30, [X31 + 0x10]
	0x034EE430 ADD X31, X31, 0x30
	0x034EE434 RET
	0x034EE438 STR X30, [X31 - 0x20]!
	0x034EE43C STP X20, X19, [X31 + 0x10]
	0x034EE440 ADRP X20, 0xEF1000
	0x034EE444 LDRB W8, [X20 + 0xA0F]
	0x034EE448 MOV X19, X0
	0x034EE44C TBNZ X8, 0x0, 0x34EE470
	0x034EE450 ADRP X0, 0xC45000
	0x034EE454 LDR X0, [X0 + 0x690]
	0x034EE458 BL 0x1C16CF4
	0x034EE45C ADRP X0, 0xC45000
	0x034EE460 LDR X0, [X0 + 0x698]
	0x034EE464 BL 0x1C16CF4
	0x034EE468 MOVZ W8, 0x1
	0x034EE46C STRB W8, [X20 + 0xA0F]
	0x034EE470 LDR X0, [X19 + 0x10]
	0x034EE474 LDP X20, X19, [X31 + 0x10]
	0x034EE478 LDR X30, [X31], #0x20
	0x034EE47C RET
	0x034EE480 STR X30, [X31 - 0x20]!
	0x034EE484 STP X20, X19, [X31 + 0x10]
	0x034EE488 ADRP X20, 0xEF1000
	0x034EE48C LDRB W8, [X20 + 0xA10]
	0x034EE490 MOV X19, X0
	0x034EE494 TBNZ X8, 0x0, 0x34EE4B8
	0x034EE498 ADRP X0, 0xC45000
	0x034EE49C LDR X0, [X0 + 0x690]
	0x034EE4A0 BL 0x1C16CF4
	0x034EE4A4 ADRP X0, 0xC45000
	0x034EE4A8 LDR X0, [X0 + 0x6A0]
	0x034EE4AC BL 0x1C16CF4
	0x034EE4B0 MOVZ W8, 0x1
	0x034EE4B4 STRB W8, [X20 + 0xA10]
	0x034EE4B8 LDR X0, [X19 + 0x18]
	0x034EE4BC LDP X20, X19, [X31 + 0x10]
	0x034EE4C0 LDR X30, [X31], #0x20
	0x034EE4C4 RET
	0x034EE4C8 STP X30, X21, [X31 - 0x20]!
	0x034EE4CC STP X20, X19, [X31 + 0x10]
	0x034EE4D0 ADRP X20, 0xEF1000
	0x034EE4D4 ADRP X21, 0xC45000
	0x034EE4D8 LDRB W8, [X20 + 0xA11]
	0x034EE4DC LDR X21, [X21 + 0x6A8]
	0x034EE4E0 MOV X19, X0
	0x034EE4E4 TBNZ X8, 0x0, 0x34EE4FC
	0x034EE4E8 ADRP X0, 0xC45000
	0x034EE4EC LDR X0, [X0 + 0x6A8]
	0x034EE4F0 BL 0x1C16CF4
	0x034EE4F4 MOVZ W8, 0x1
	0x034EE4F8 STRB W8, [X20 + 0xA11]
	0x034EE4FC LDR X1, [X21]
	0x034EE500 MOV X0, X19
	0x034EE504 LDP X20, X19, [X31 + 0x10]
	0x034EE508 LDP X30, X21, [X31], #0x20
	0x034EE50C B 0x2C0A728
	0x034EE510 SUB X31, X31, 0x50
	0x034EE514 STP X30, X21, [X31 + 0x30]
	0x034EE518 STP X20, X19, [X31 + 0x40]
	0x034EE51C ADRP X21, 0xEF1000
	0x034EE520 ADRP X20, 0xC45000
	0x034EE524 LDRB W8, [X21 + 0xA12]
	0x034EE528 LDR X20, [X20 + 0x6B0]
	0x034EE52C MOV X19, X0
	0x034EE530 TBNZ X8, 0x0, 0x34EE554
	0x034EE534 ADRP X0, 0xC45000
	0x034EE538 LDR X0, [X0 + 0x6B8]
	0x034EE53C BL 0x1C16CF4
	0x034EE540 ADRP X0, 0xC45000
	0x034EE544 LDR X0, [X0 + 0x6B0]
	0x034EE548 BL 0x1C16CF4
	0x034EE54C MOVZ W8, 0x1
	0x034EE550 STRB W8, [X21 + 0xA12]
	0x034EE554 LDR X8, [X19 + 0x20]
	0x034EE558 LDP V1, V0, [X19]
	0x034EE55C LDR X0, [X20]
	0x034EE560 ADD X1, X31, 0x0
	0x034EE564 STR X8, [X31 + 0x20]
	0x034EE568 STP V1, V0, [X31]
	0x034EE56C BL 0x1C16E04
	0x034EE570 CBZ X0, 0x34EE5B0
	0x034EE574 LDR X8, [X0]
	0x034EE578 LDR X1, [X20]
	0x034EE57C LDR X8, [X8 + 0x40]
	0x034EE580 LDR X9, [X1 + 0x40]
	0x034EE584 CMP X8, X9
	0x034EE588 B.NE 0x34EE5B4
	0x034EE58C ADRP X19, 0xC45000
	0x034EE590 LDR X19, [X19 + 0x6B8]
	0x034EE594 BL 0x1C16E08
	0x034EE598 LDR X1, [X19]
	0x034EE59C BL 0x2C0A978
	0x034EE5A0 LDP X20, X19, [X31 + 0x40]
	0x034EE5A4 LDP X30, X21, [X31 + 0x30]
	0x034EE5A8 ADD X31, X31, 0x50
	0x034EE5AC RET
	0x034EE5B0 BL 0x1C16F20
	0x034EE5B4 BL 0x1C171E0
	0x034EE5B8 RET
	0x034EE5BC MOV X1, X31
	0x034EE5C0 B 0x33BDD8C
	0x034EE5C4 STP X29, X30, [X31 - 0x60]!
	0x034EE5C8 STP X28, X27, [X31 + 0x10]
	0x034EE5CC STP X26, X25, [X31 + 0x20]
	0x034EE5D0 STP X24, X23, [X31 + 0x30]
	0x034EE5D4 STP X22, X21, [X31 + 0x40]
	0x034EE5D8 STP X20, X19, [X31 + 0x50]
	0x034EE5DC ADRP X28, 0xEF1000
	0x034EE5E0 ADRP X29, 0xC06000
	0x034EE5E4 ADRP X22, 0xC0C000
	0x034EE5E8 ADRP X26, 0xC45000
	0x034EE5EC ADRP X25, 0xC45000
	0x034EE5F0 ADRP X24, 0xC45000
	0x034EE5F4 ADRP X27, 0xC45000
	0x034EE5F8 ADRP X23, 0xC45000
	0x034EE5FC LDR X29, [X29 + 0xE08]
	0x034EE600 LDR X22, [X22 + 0x688]
	0x034EE604 LDRB W8, [X28 + 0xA13]
	0x034EE608 LDR X26, [X26 + 0x6C0]
	0x034EE60C LDR X25, [X25 + 0x6C8]
	0x034EE610 LDR X24, [X24 + 0x6D0]
	0x034EE614 LDR X27, [X27 + 0x6D8]
	0x034EE618 LDR X23, [X23 + 0x6E0]
	0x034EE61C MOV W20, W2
	0x034EE620 MOV W21, W1
	0x034EE624 MOV X19, X0
	0x034EE628 TBNZ X8, 0x0, 0x34EE688
	0x034EE62C ADRP X0, 0xC0C000
	0x034EE630 LDR X0, [X0 + 0x688]
	0x034EE634 BL 0x1C16CF4
	0x034EE638 ADRP X0, 0xC06000
	0x034EE63C LDR X0, [X0 + 0xE08]
	0x034EE640 BL 0x1C16CF4
	0x034EE644 ADRP X0, 0xC45000
	0x034EE648 LDR X0, [X0 + 0x6C8]
	0x034EE64C BL 0x1C16CF4
	0x034EE650 ADRP X0, 0xC45000
	0x034EE654 LDR X0, [X0 + 0x6C0]
	0x034EE658 BL 0x1C16CF4

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X30
	003 Move [X31+32], X28
	004 Move [X31+40], X27
	005 Move [X31+48], X26
	006 Move [X31+56], X25
	007 Move [X31+64], X24
	008 Move [X31+72], X23
	009 Move [X31+80], X22
	010 Move [X31+88], X21
	011 Move [X31+96], X20
	012 Move [X31+104], X19
	013 Move X22, 0xEF2000
	014 Move W8, [X22+2558]
	015 Move W19, W2
	016 Move W20, W1
	017 Move X21, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {27}
	022 Move X0, 0xC46000
	023 Move X0, [X0+1624]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X22+2558], W8
	027 Move X27, 0xC46000
	028 Move X27, [X27+1624]
	029 Move X26, X31
	030 Move W28, 1
	031 Move [X31+24], W31
	032 NotImplemented "Instruction LSLV not yet implemented."
	033 NotImplemented "Instruction CMP not yet implemented."
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Move X22, [X21+24]
	036 Move [X31+28], W31
	037 Add X1, X31, 28
	038 Move X0, X22
	039 Move X2, X31
	040 Call Monitor.Enter, X0, X1
	041 Move X8, [X21+24]
	042 Compare X8, 0
	043 JumpIfEqual {90}
	044 Move W9, [X8+24]
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Add X8, X8, X26
	047 Move X23, [X8+32]
	048 Compare X23, 0
	049 JumpIfEqual {76}
	050 Move [X31+24], W31
	051 Add X1, X31, 24
	052 Move X0, X23
	053 Move X2, X31
	054 Call Monitor.Enter, X0, X1
	055 Move X8, [X21+24]
	056 Compare X8, 0
	057 JumpIfEqual {92}
	058 Move W9, [X8+24]
	059 NotImplemented "Instruction CMP not yet implemented."
	060 Add X8, X8, X26
	061 Move X0, [X8+32]
	062 Compare X0, 0
	063 JumpIfEqual {94}
	064 Move X1, [X27]
	065 Call Stack`1<Object>.Clear, X0
	066 Move X24, X31
	067 Move W8, [X31+24]
	068 Compare W8, 0
	069 JumpIfEqual {73}
	070 Move X0, X23
	071 Move X1, X31
	072 Call Monitor.Exit, X0
	073 Compare X24, 0
	074 JumpIfNotEqual {95}
	075 Move X23, X31
	076 Move W24, 9
	077 Move W8, [X31+28]
	078 Compare W8, 0
	079 JumpIfEqual {83}
	080 Move X0, X22
	081 Move X1, X31
	082 Call Monitor.Exit, X0
	083 Compare X23, 0
	084 JumpIfNotEqual {139}
	085 NotImplemented "Instruction CMP not yet implemented."
	086 Compare W24, 0
	087 JumpIfNotEqual {126}
	088 Add X26, X26, 1
	089 NotImplemented "Instruction CMP not yet implemented."
	090 Call 0x1C17F20
	091 Call 0x1C17F28
	092 Call 0x1C17F20
	093 Call 0x1C17F28
	094 Call 0x1C17F20
	095 Move X0, X24
	096 Call 0x1C17F18
	097 Move X25, X1
	098 Move X24, X0
	099 Move X25, X1
	100 Move X24, X0
	101 NotImplemented "Instruction CMP not yet implemented."
	102 Move X0, X24
	103 Call 0x3EB2AD0
	104 Move X8, [X0]
	105 Move [X31+8], X8
	106 Call 0x3EB2AE0
	107 Move X24, [X31+8]
	108 Move [X31+8], X31
	109 Move W8, [X31+24]
	110 Compare W8, 0
	111 JumpIfEqual {115}
	112 Move X0, X23
	113 Move X1, X31
	114 Call Monitor.Exit, X0
	115 Move X8, [X31+8]
	116 Compare X8, 0
	117 JumpIfNotEqual {141}
	118 NotImplemented "Instruction CMP not yet implemented."
	119 Move X0, X24
	120 Call 0x3EB2AD0
	121 Move X23, [X0]
	122 Call 0x3EB2AE0
	123 Move W24, W31
	124 Move X25, X1
	125 Move X24, X0
	126 Move X20, [X31+96]
	127 Move X19, [X31+104]
	128 Move X22, [X31+80]
	129 Move X21, [X31+88]
	130 Move X24, [X31+64]
	131 Move X23, [X31+72]
	132 Move X26, [X31+48]
	133 Move X25, [X31+56]
	134 Move X28, [X31+32]
	135 Move X27, [X31+40]
	136 Move X30, [X31+16]
	137 Add X31, X31, 112
	138 Return 
	139 Move X0, X23
	140 Call 0x1C17F18
	141 Move X0, [X31+8]
	142 Call 0x1C17F18
	143 Move X23, X31
	144 Move X24, X0
	145 Move W8, [X31+28]
	146 Compare W8, 0
	147 JumpIfEqual {151}
	148 Move X0, X22
	149 Move X1, X31
	150 Call Monitor.Exit, X0
	151 Compare X23, 0
	152 JumpIfNotEqual {155}
	153 Move X0, X24
	154 Call 0x1D2D690
	155 Move X0, X23
	156 Call 0x1C17F18
	157 Call 0x1991590
	158 Call 0x1991590

