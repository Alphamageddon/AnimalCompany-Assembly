Type: ExitGames.Client.Photon.TPeer

Method: System.Int32 get_QueuedIncomingCommandsCount()

Disassembly:
	0x03523214 MOV X21, X0
	0x03523218 CMP W1, 0x1
	0x0352321C B.NE 0x3523344
	0x03523220 MOV X0, X21
	0x03523224 BL 0x3EB1AD0
	0x03523228 LDR X22, [X0]
	0x0352322C BL 0x3EB1AE0
	0x03523230 MOV W21, W31
	0x03523234 B 0x35231C8
	0x03523238 CMP W21, 0x8
	0x0352323C B.NE 0x352328C
	0x03523240 LDR X20, [X19 + 0x120]
	0x03523244 STRB W31, [X31 + 0x8]
	0x03523248 ADD X1, X31, 0x8
	0x0352324C MOV X0, X20
	0x03523250 MOV X2, X31
	0x03523254 BL 0x33DE64C
	0x03523258 LDR X0, [X19 + 0x120]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xEBD000
	005 Move W8, [X20+2880]
	006 Move X19, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {16}
	011 Move X0, 0xC11000
	012 Move X0, [X0+2448]
	013 Call 0x1C17CF4
	014 Move W8, 1
	015 Move [X20+2880], W8
	016 Move X8, [X19+288]
	017 Compare X8, 0
	018 JumpIfEqual {24}
	019 Move W0, [X8+32]
	020 Move X20, [X31+16]
	021 Move X19, [X31+24]
	022 Move X30, [X31+32]
	023 Return X0
	024 Call 0x1C17F20

Method: System.Int32 get_QueuedOutgoingCommandsCount()

Disassembly:
	0x0352325C CBZ X0, 0x3523340
	0x03523260 LDR W8, [X0 + 0x20]

ISIL:
	001 Move W0, [X0+224]
	002 Return X0

Method: System.Void .ctor()

Disassembly:
	0x03523264 CMP W8, 0x1
	0x03523268 B.LT 0x3523290
	0x0352326C ADRP X8, 0xC10000
	0x03523270 LDR X8, [X8 + 0x988]
	0x03523274 LDR X1, [X8]
	0x03523278 BL 0x24F18D4
	0x0352327C MOV X21, X0
	0x03523280 MOV X22, X31
	0x03523284 MOVZ W23, 0xC
	0x03523288 B 0x352329C
	0x0352328C B 0x352331C
	0x03523290 MOV X22, X31
	0x03523294 MOV X21, X31
	0x03523298 MOVZ W23, 0xB
	0x0352329C LDRB W8, [X31 + 0x8]
	0x035232A0 CBZ W8, 0x35232B0
	0x035232A4 MOV X0, X20
	0x035232A8 MOV X1, X31
	0x035232AC BL 0x33E14E4
	0x035232B0 CBNZ X22, 0x3523334
	0x035232B4 CMP W23, 0xC
	0x035232B8 B.EQ 0x35232C0
	0x035232BC CBNZ W23, 0x3523318
	0x035232C0 CBZ X21, 0x352333C
	0x035232C4 LDR W8, [X21 + 0x14]
	0x035232C8 LDR X9, [X19]
	0x035232CC MOV X0, X19
	0x035232D0 MOV X1, X21
	0x035232D4 ADD W8, W8, 0x3
	0x035232D8 STR W8, [X19 + 0x48]
	0x035232DC LDR X8, [X9 + 0x278]
	0x035232E0 LDR X2, [X9 + 0x280]
	0x035232E4 BLR X8
	0x035232E8 ADRP X8, 0xC10000
	0x035232EC LDR X8, [X8 + 0x778]
	0x035232F0 MOV W19, W0
	0x035232F4 LDR X8, [X8]
	0x035232F8 LDR W9, [X8 + 0xE0]
	0x035232FC CBNZ W9, 0x3523308
	0x03523300 MOV X0, X8
	0x03523304 BL 0x1C16DFC
	0x03523308 MOV X0, X21
	0x0352330C MOV X1, X31
	0x03523310 BL 0x34F5924
	0x03523314 B 0x352331C
	0x03523318 MOV W19, W31
	0x0352331C AND W0, W19, 0x1
	0x03523320 LDP X20, X19, [X31 + 0x30]
	0x03523324 LDP X22, X21, [X31 + 0x20]
	0x03523328 LDP X24, X23, [X31 + 0x10]
	0x0352332C LDR X30, [X31], #0x40
	0x03523330 RET
	0x03523334 MOV X0, X22
	0x03523338 BL 0x1C16F18
	0x0352333C BL 0x1C16F20
	0x03523340 BL 0x1C16F20
	0x03523344 MOV X22, X31
	0x03523348 B 0x3523350
	0x0352334C MOV X21, X0
	0x03523350 LDRB W8, [X31 + 0xC]
	0x03523354 CBZ W8, 0x3523364
	0x03523358 MOV X0, X20
	0x0352335C MOV X1, X31
	0x03523360 BL 0x33E14E4
	0x03523364 CBNZ X22, 0x3523370
	0x03523368 MOV X0, X21
	0x0352336C BL 0x1D2C690
	0x03523370 MOV X0, X22
	0x03523374 BL 0x1C16F18
	0x03523378 B 0x3523380
	0x0352337C B 0x3523380
	0x03523380 MOV X21, X0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0xEBD000
	008 Move X23, 0xC11000
	009 Move X20, 0xC11000
	010 Move X21, 0xBD1000
	011 Move W8, [X22+2881]
	012 Move X23, [X23+3392]
	013 Move X20, [X20+3400]
	014 Move X21, [X21+1560]
	015 Move X19, X0
	016 Move TEMP, X8
	017 And TEMP, TEMP, 1
	018 Compare TEMP, 1
	019 JumpIfEqual {37}
	020 Move X0, 0xBD1000
	021 Move X0, [X0+1560]
	022 Call 0x1C17CF4
	023 Move X0, 0xBDA000
	024 Move X0, [X0+1784]
	025 Call 0x1C17CF4
	026 Move X0, 0xC11000
	027 Move X0, [X0+1912]
	028 Call 0x1C17CF4
	029 Move X0, 0xC11000
	030 Move X0, [X0+3400]
	031 Call 0x1C17CF4
	032 Move X0, 0xC11000
	033 Move X0, [X0+3392]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X22+2881], W8
	037 Move X0, [X23]
	038 Call 0x1C17F10
	039 Move X2, [X20]
	040 Move W1, 32
	041 Move X20, X0
	042 Call Queue`1<Object>..ctor, X0, X1
	043 Move [X19+288], X20
	044 Move X0, [X21]
	045 Move W1, 5
	046 Call 0x1C17D6C
	047 Compare X0, 0
	048 JumpIfEqual {83}
	049 Move W8, [X0+24]
	050 Compare W8, 0
	051 JumpIfEqual {84}
	052 Move X8, 0xBDA000
	053 Move X8, [X8+1784]
	054 Move W9, 240
	055 Move [X0+32], W9
	056 Move [X19+312], X0
	057 Move X0, [X8]
	058 Move X21, 0xC11000
	059 Move X21, [X21+1912]
	060 Call 0x1C17F10
	061 Move X1, X31
	062 Move X20, X0
	063 Call ParameterDictionary..ctor, X0
	064 Move W8, 257
	065 Move [X19+320], X20
	066 NotImplemented "Instruction STRH not yet implemented."
	067 Move X0, [X21]
	068 Move W8, [X0+224]
	069 Compare W8, 0
	070 JumpIfNotEqual {72}
	071 Call 0x1C17DFC
	072 Move X0, X19
	073 Move X1, X31
	074 Call PeerBase..ctor, X0
	075 Move [X19+280], W31
	076 Move X20, [X31+32]
	077 Move X19, [X31+40]
	078 Move X22, [X31+16]
	079 Move X21, [X31+24]
	080 Move X30, [X31+48]
	081 Move X23, [X31+56]
	082 Return 
	083 Call 0x1C17F20
	084 Call 0x1C17F28

Method: System.Boolean IsTransportEncrypted()

Disassembly:
	0x03523384 CMP W1, 0x1
	0x03523388 B.NE 0x35233A8
	0x0352338C MOV X0, X21
	0x03523390 BL 0x3EB1AD0

ISIL:
	001 Move W8, [X0+32]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 NotImplemented "Instruction CSET not yet implemented."
	004 Return X0

Method: System.Void Reset()

Disassembly:
	0x03523394 LDR X22, [X0]
	0x03523398 BL 0x3EB1AE0
	0x0352339C MOV W23, W31
	0x035233A0 MOV X21, X31
	0x035233A4 B 0x352329C
	0x035233A8 MOV X22, X31
	0x035233AC B 0x35233B4
	0x035233B0 MOV X21, X0
	0x035233B4 LDRB W8, [X31 + 0x8]
	0x035233B8 CBZ W8, 0x35233C8
	0x035233BC MOV X0, X20
	0x035233C0 MOV X1, X31
	0x035233C4 BL 0x33E14E4
	0x035233C8 CBZ X22, 0x3523368
	0x035233CC MOV X0, X22
	0x035233D0 BL 0x1C16F18
	0x035233D4 BL 0x1990590
	0x035233D8 SUB X31, X31, 0x60
	0x035233DC STP X30, X27, [X31 + 0x10]
	0x035233E0 STP X26, X25, [X31 + 0x20]
	0x035233E4 STP X24, X23, [X31 + 0x30]
	0x035233E8 STP X22, X21, [X31 + 0x40]
	0x035233EC STP X20, X19, [X31 + 0x50]
	0x035233F0 ADRP X19, 0xEBC000
	0x035233F4 LDRB W8, [X19 + 0xB48]
	0x035233F8 MOV X20, X0
	0x035233FC TBNZ X8, 0x0, 0x3523438
	0x03523400 ADRP X0, 0xC11000
	0x03523404 LDR X0, [X0 + 0x730]
	0x03523408 BL 0x1C16CF4
	0x0352340C ADRP X0, 0xC11000
	0x03523410 LDR X0, [X0 + 0x738]
	0x03523414 BL 0x1C16CF4
	0x03523418 ADRP X0, 0xC11000
	0x0352341C LDR X0, [X0 + 0x740]
	0x03523420 BL 0x1C16CF4
	0x03523424 ADRP X0, 0xC10000
	0x03523428 LDR X0, [X0 + 0x778]
	0x0352342C BL 0x1C16CF4
	0x03523430 MOVZ W8, 0x1
	0x03523434 STRB W8, [X19 + 0xB48]
	0x03523438 LDRB W8, [X20 + 0x40]
	0x0352343C CBZ W8, 0x3523550
	0x03523440 MOV X0, X20
	0x03523444 BL 0x35229D8
	0x03523448 LDR X0, [X20 + 0x28]
	0x0352344C CBZ X0, 0x35235FC
	0x03523450 MOV X1, X31
	0x03523454 BL 0x34F3724
	0x03523458 TBZ X0, 0x0, 0x3523550
	0x0352345C MOV X0, X20
	0x03523460 MOV X1, X31
	0x03523464 BL 0x34F39AC
	0x03523468 LDR X19, [X20 + 0x128]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xEBD000
	006 Move W8, [X20+2882]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {20}
	012 Move X0, 0xC11000
	013 Move X0, [X0+3400]
	014 Call 0x1C17CF4
	015 Move X0, 0xC11000
	016 Move X0, [X0+3392]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+2882], W8
	020 Move X0, X19
	021 Move X1, X31
	022 Call PeerBase.Reset, X0
	023 Move X8, [X19+16]
	024 Compare X8, 0
	025 JumpIfEqual {62}
	026 Move X21, 0xC11000
	027 Move X20, 0xC11000
	028 Move X1, [X8+240]
	029 Move X21, [X21+3392]
	030 Move X20, [X20+3400]
	031 Compare X1, 0
	032 JumpIfEqual {40}
	033 Move W8, [X19+32]
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Move X8, [X19]
	036 Move X0, X19
	037 Move X9, [X8+648]
	038 Move X2, [X8+656]
	039 NotImplemented "Instruction BLR not yet implemented."
	040 Move X0, [X21]
	041 Call 0x1C17F10
	042 Move X2, [X20]
	043 Move W1, 32
	044 Move X20, X0
	045 Call Queue`1<Object>..ctor, X0, X1
	046 Move X0, X19
	047 Move X1, X31
	048 Move [X19+288], X20
	049 Call PeerBase.get_timeInt, X0
	050 Move [X19+136], W0
	051 Move X0, X19
	052 Move X1, X31
	053 Call PeerBase.get_timeInt, X0
	054 Move W8, 1
	055 Move [X19+304], W0
	056 Move [X19+329], W8
	057 Move X20, [X31+16]
	058 Move X19, [X31+24]
	059 Move X30, [X31+32]
	060 Move X21, [X31+40]
	061 Return 
	062 Call 0x1C17F20

Method: System.Boolean Connect(System.String serverAddress, System.String proxyServerAddress, System.String appID, System.Object photonToken)

Disassembly:
	0x0352346C STR W0, [X20 + 0xD8]
	0x03523470 STRB W31, [X31 + 0xC]
	0x03523474 ADD X1, X31, 0xC
	0x03523478 MOV X0, X19
	0x0352347C MOV X2, X31
	0x03523480 BL 0x33DE64C
	0x03523484 LDR X8, [X20 + 0x128]
	0x03523488 CBZ X8, 0x35235F4
	0x0352348C LDR W9, [X8 + 0x18]
	0x03523490 CMP W9, 0x1
	0x03523494 B.LT 0x3523558
	0x03523498 ADRP X25, 0xC11000
	0x0352349C ADRP X26, 0xC10000
	0x035234A0 LDR X25, [X25 + 0x740]
	0x035234A4 LDR X26, [X26 + 0x778]
	0x035234A8 MOV W24, W31
	0x035234AC MOV W9, W31
	0x035234B0 LDR X2, [X25]
	0x035234B4 MOV W21, W9
	0x035234B8 MOV X0, X8
	0x035234BC MOV W1, W9
	0x035234C0 BL 0x301BCCC
	0x035234C4 MOV X23, X0
	0x035234C8 CBZ X0, 0x35235F8
	0x035234CC LDR X1, [X23 + 0x18]
	0x035234D0 LDR W2, [X23 + 0x14]
	0x035234D4 MOV X0, X20
	0x035234D8 BL 0x3523688
	0x035234DC MOV W22, W0
	0x035234E0 CMP W0, 0x4
	0x035234E4 B.EQ 0x3523560
	0x035234E8 LDR W27, [X23 + 0x14]
	0x035234EC CMP W22, 0x5
	0x035234F0 B.EQ 0x3523510
	0x035234F4 LDR X0, [X26]
	0x035234F8 LDR W8, [X0 + 0xE0]
	0x035234FC CBNZ W8, 0x3523504
	0x03523500 BL 0x1C16DFC
	0x03523504 MOV X0, X23
	0x03523508 MOV X1, X31
	0x0352350C BL 0x34F5924
	0x03523510 MOV X0, X20
	0x03523514 MOV X1, X31
	0x03523518 BL 0x34EFCFC
	0x0352351C CMP W22, 0x5
	0x03523520 B.EQ 0x3523548
	0x03523524 ADD W24, W27, W24
	0x03523528 CMP W24, W0
	0x0352352C B.GE 0x3523548
	0x03523530 LDR X8, [X20 + 0x128]
	0x03523534 CBZ X8, 0x35235F4
	0x03523538 LDR W10, [X8 + 0x18]
	0x0352353C ADD W9, W21, 0x1
	0x03523540 CMP W9, W10
	0x03523544 B.LT 0x35234B0
	0x03523548 ADD W21, W21, 0x1
	0x0352354C B 0x3523560
	0x03523550 MOV W20, W31
	0x03523554 B 0x35235D4
	0x03523558 MOV W22, W31
	0x0352355C MOV W21, W31
	0x03523560 LDR X0, [X20 + 0x128]
	0x03523564 CBZ X0, 0x3523608
	0x03523568 ADRP X8, 0xC11000
	0x0352356C LDR X8, [X8 + 0x730]
	0x03523570 LDR X3, [X8]
	0x03523574 MOV W1, W31
	0x03523578 MOV W2, W21
	0x0352357C BL 0x301DAD8
	0x03523580 LDR W8, [X20 + 0xE0]
	0x03523584 AND W9, W22, 0xFFFFFFFE
	0x03523588 CMP W9, 0x4
	0x0352358C SUB W8, W8, W21
	0x03523590 STR W8, [X20 + 0xE0]
	0x03523594 B.NE 0x35235A4
	0x03523598 MOV X21, X31

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X25, 0xEBD000
	011 Move X26, 0xC12000
	012 Move X23, 0xC12000
	013 Move X24, 0xC11000
	014 Move W8, [X25+2883]
	015 Move X26, [X26+1784]
	016 Move X23, [X23+1792]
	017 Move X24, [X24+3256]
	018 Move X20, X4
	019 Move X21, X3
	020 Move X22, X1
	021 Move X19, X0
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {37}
	026 Move X0, 0xC12000
	027 Move X0, [X0+1792]
	028 Call 0x1C17CF4
	029 Move X0, 0xC12000
	030 Move X0, [X0+1784]
	031 Call 0x1C17CF4
	032 Move X0, 0xC11000
	033 Move X0, [X0+3256]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X25+2883], W8
	037 Move X0, [X26]
	038 Call 0x1C17F10
	039 Move X1, [X23]
	040 Move X23, X0
	041 Call List`1<Object>..ctor, X0
	042 Move [X19+296], X23
	043 Move X0, [X24]
	044 Move W23, [X19+328]
	045 Move W8, [X0+224]
	046 Compare W8, 0
	047 JumpIfNotEqual {50}
	048 Call 0x1C17DFC
	049 Move X0, [X24]
	050 Move X8, [X0+184]
	051 NotImplemented "Instruction CMP not yet implemented."
	052 Move W10, [X19+32]
	053 Add X9, X8, 8
	054 NotImplemented "Instruction CSEL not yet implemented."
	055 Move X8, [X8]
	056 And W9, W10, 254
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Move [X19+232], X8
	059 Move X23, [X19+40]
	060 Move X0, X19
	061 Move X1, X22
	062 Move X2, X21
	063 Move X3, X20
	064 Move X4, X31
	065 Call PeerBase.PrepareWebSocketUrl, X0, X1, X2, X3
	066 Compare X23, 0
	067 JumpIfEqual {93}
	068 Move [X23+40], X0
	069 Move X0, [X19+40]
	070 Compare X0, 0
	071 JumpIfEqual {93}
	072 Move X8, [X0]
	073 Move X9, [X8+376]
	074 Move X1, [X8+384]
	075 NotImplemented "Instruction BLR not yet implemented."
	076 Move TEMP, X0
	077 And TEMP, TEMP, 1
	078 Compare TEMP, 1
	079 JumpIfNotEqual {82}
	080 Move W8, 1
	081 Move [X19+64], W8
	082 Move X20, [X31+64]
	083 Move X19, [X31+72]
	084 Move X22, [X31+48]
	085 Move X21, [X31+56]
	086 Move X24, [X31+32]
	087 Move X23, [X31+40]
	088 Move X26, [X31+16]
	089 Move X25, [X31+24]
	090 And W0, W0, 1
	091 Move X30, [X31+80]
	092 Return X0
	093 Call 0x1C17F20

Method: System.Void OnConnect()

Disassembly:
	0x0352359C MOV W20, W31
	0x035235A0 B 0x35235BC
	0x035235A4 LDR X8, [X20 + 0x128]
	0x035235A8 CBZ X8, 0x352360C
	0x035235AC LDR W8, [X8 + 0x18]
	0x035235B0 MOV X21, X31
	0x035235B4 CMP W8, 0x0
	0x035235B8 CSET W20, GT
	0x035235BC LDRB W8, [X31 + 0xC]
	0x035235C0 CBZ W8, 0x35235D0
	0x035235C4 MOV X0, X19
	0x035235C8 MOV X1, X31
	0x035235CC BL 0x33E14E4
	0x035235D0 CBNZ X21, 0x3523600
	0x035235D4 MOV W0, W20
	0x035235D8 LDP X20, X19, [X31 + 0x50]
	0x035235DC LDP X22, X21, [X31 + 0x40]
	0x035235E0 LDP X24, X23, [X31 + 0x30]
	0x035235E4 LDP X26, X25, [X31 + 0x20]
	0x035235E8 LDP X30, X27, [X31 + 0x10]
	0x035235EC ADD X31, X31, 0x60
	0x035235F0 RET
	0x035235F4 BL 0x1C16F20
	0x035235F8 BL 0x1C16F20
	0x035235FC BL 0x1C16F20

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X1, X31
	004 Move X19, X0
	005 Call PeerBase.get_timeInt, X0
	006 Move W8, [X19+328]
	007 Move [X19+304], W0
	008 Compare W8, 0
	009 JumpIfNotEqual {13}
	010 Move X8, [X19+160]
	011 Compare X8, 0
	012 JumpIfEqual {28}
	013 Move W8, 1
	014 Move X0, X19
	015 Move X1, X31
	016 Move [X19+329], W8
	017 Call PeerBase.WriteInitRequest, X0
	018 Move X1, X0
	019 Move X0, X19
	020 Call TPeer.EnqueueInit, X0, X1
	021 Move X8, [X19]
	022 Move X0, X19
	023 Move X2, [X8+568]
	024 Move X1, [X8+576]
	025 Move X30, [X31+16]
	026 Move X19, [X31+24]
	027 CallNoReturn X2
	028 Move [X19+329], W31

Method: System.Void Disconnect()

Disassembly:
	0x03523778 B 0x35237CC
	0x0352377C MOV X0, X19
	0x03523780 MOV X1, X31
	0x03523784 BL 0x34F39AC
	0x03523788 MOV W22, W0
	0x0352378C LDR X0, [X19 + 0x28]
	0x03523790 CBZ X0, 0x35237EC
	0x03523794 LDR X8, [X0]
	0x03523798 LDP X9, X3, [X8 + 0x198]
	0x0352379C MOV X1, X21
	0x035237A0 MOV W2, W20
	0x035237A4 BLR X9
	0x035237A8 MOV W20, W0
	0x035237AC MOV X0, X19
	0x035237B0 MOV X1, X31
	0x035237B4 BL 0x34F39AC
	0x035237B8 LDR W9, [X19 + 0xD0]
	0x035237BC SUB W8, W0, W22
	0x035237C0 CMP W8, W9
	0x035237C4 B.LE 0x35237CC
	0x035237C8 STR W8, [X19 + 0xD0]
	0x035237CC MOV W0, W20
	0x035237D0 LDP X20, X19, [X31 + 0x20]
	0x035237D4 LDP X22, X21, [X31 + 0x10]
	0x035237D8 LDR X30, [X31], #0x30
	0x035237DC RET
	0x035237E0 BL 0x1C16F20
	0x035237E4 BL 0x1C16F20
	0x035237E8 BL 0x1C16F20
	0x035237EC BL 0x1C16F20
	0x035237F0 MOV X21, X0
	0x035237F4 B 0x3523830
	0x035237F8 B 0x3523828
	0x035237FC B 0x3523828
	0x03523800 B 0x3523828
	0x03523804 B 0x3523828
	0x03523808 B 0x3523828
	0x0352380C B 0x3523828
	0x03523810 B 0x3523828
	0x03523814 B 0x3523828
	0x03523818 B 0x3523828
	0x0352381C B 0x3523828
	0x03523820 B 0x3523828
	0x03523824 B 0x3523828
	0x03523828 MOV X21, X0
	0x0352382C MOV W20, W31
	0x03523830 CMP W1, 0x1
	0x03523834 B.NE 0x3523964
	0x03523838 MOV X0, X21
	0x0352383C BL 0x3EB1AD0
	0x03523840 MOV X21, X0
	0x03523844 ADRP X0, 0xBD0000
	0x03523848 LDR X0, [X0 + 0x7D0]
	0x0352384C BL 0x1C16D08
	0x03523850 LDR X8, [X21]
	0x03523854 LDR X1, [X8]
	0x03523858 BL 0x1C17270
	0x0352385C TBZ X0, 0x0, 0x352393C
	0x03523860 LDR X21, [X21]
	0x03523864 BL 0x3EB1AE0
	0x03523868 MOV X0, X19
	0x0352386C MOV X1, X31
	0x03523870 BL 0x34F1150
	0x03523874 ANDS W31, W0, 0xFF
	0x03523878 B.EQ 0x3523914
	0x0352387C MOV X0, X19
	0x03523880 MOV X1, X31
	0x03523884 BL 0x34F104C

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xEBD000
	006 Move W8, [X20+2884]
	007 Move X19, X0
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {20}
	012 Move X0, 0xBD9000
	013 Move X0, [X0+3016]
	014 Call 0x1C17CF4
	015 Move X0, 0xC12000
	016 Move X0, [X0+1800]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X20+2884], W8
	020 Move W8, [X19+64]
	021 Or W8, W8, 4
	022 NotImplemented "Instruction CMP not yet implemented."
	023 Move X20, [X31+16]
	024 Move X19, [X31+24]
	025 Move X30, [X31+32]
	026 Move X21, [X31+40]
	027 Return 
	028 Move X0, X19
	029 Move X1, X31
	030 Call PeerBase.get_debugOut, X0
	031 And W8, W0, 255
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move X0, X19
	034 Move X1, X31
	035 Call PeerBase.get_Listener, X0
	036 Compare X0, 0
	037 JumpIfEqual {76}
	038 Move X9, 0xBD9000
	039 Move X8, [X0]
	040 Move X9, [X9+3016]
	041 Move X10, 0xC12000
	042 Move X20, X0
	043 Move X1, [X9]
	044 Move X10, [X10+1800]
	045 NotImplemented "Instruction LDRH not yet implemented."
	046 Move X21, [X10]
	047 Compare X9, 0
	048 JumpIfEqual {55}
	049 Move X10, [X8+176]
	050 Add X10, X10, 8
	051 NotImplemented "Instruction LDUR not yet implemented."
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Subtract X9, X9, 1
	054 Add X10, X10, 16
	055 Move X0, X20
	056 Move W2, W31
	057 Call 0x1C5D788
	058 NotImplemented "Instruction LDRSW not yet implemented."
	059 Add X8, X8, X9
	060 Add X0, X8, 312
	061 Move X8, [X0]
	062 Move X3, [X0+8]
	063 Move W1, 5
	064 Move X0, X20
	065 Move X2, X21
	066 NotImplemented "Instruction BLR not yet implemented."
	067 Move X8, [X19]
	068 Move X0, X19
	069 Move X20, [X31+16]
	070 Move X19, [X31+24]
	071 Move X2, [X8+504]
	072 Move X1, [X8+512]
	073 Move X30, [X31+32]
	074 Move X21, [X31+40]
	075 CallNoReturn X2
	076 Call 0x1C17F20

Method: System.Void StopConnection()

Disassembly:
	0x03523888 CBZ X21, 0x3523938
	0x0352388C LDR X8, [X21]
	0x03523890 MOV X19, X0
	0x03523894 MOV X0, X21
	0x03523898 LDP X9, X1, [X8 + 0x168]
	0x0352389C BLR X9
	0x035238A0 CBZ X19, 0x3523938
	0x035238A4 MOV X22, X0
	0x035238A8 ADRP X0, 0xBD8000
	0x035238AC LDR X0, [X0 + 0xBC8]
	0x035238B0 BL 0x1C16D08
	0x035238B4 LDR X8, [X19]
	0x035238B8 MOV X1, X0
	0x035238BC LDRH W9, [X8 + 0x12E]
	0x035238C0 CBZ X9, 0x35238E4
	0x035238C4 LDR X10, [X8 + 0xB0]
	0x035238C8 ADD X10, X10, 0x8
	0x035238CC LDUR X11, [X10 - 0x8]
	0x035238D0 CMP X11, X1
	0x035238D4 B.EQ 0x35238F4
	0x035238D8 SUBS X9, X9, 0x1
	0x035238DC ADD X10, X10, 0x10
	0x035238E0 B.NE 0x35238CC
	0x035238E4 MOV X0, X19
	0x035238E8 MOV W2, W31
	0x035238EC BL 0x1C5C788
	0x035238F0 B 0x3523900
	0x035238F4 LDRSW X9, [X10]
	0x035238F8 ADD X8, X8, X9, 0x4, LSL
	0x035238FC ADD X0, X8, 0x138
	0x03523900 LDP X8, X3, [X0]
	0x03523904 MOVZ W1, 0x1
	0x03523908 MOV X0, X19
	0x0352390C MOV X2, X22
	0x03523910 BLR X8
	0x03523914 ADRP X0, 0xBD8000
	0x03523918 LDR X0, [X0 + 0xE60]
	0x0352391C BL 0x1C16D08
	0x03523920 LDR W8, [X0 + 0xE0]
	0x03523924 CBNZ W8, 0x352392C
	0x03523928 BL 0x1C16DFC
	0x0352392C MOV X0, X21
	0x03523930 BL 0x3520158
	0x03523934 B 0x35237CC
	0x03523938 BL 0x1C16F20
	0x0352393C MOVZ W0, 0x8
	0x03523940 BL 0x3EB1AF0
	0x03523944 LDR X8, [X21]
	0x03523948 STR X8, [X0]
	0x0352394C ADRP X1, 0x991000
	0x03523950 ADD X1, X1, 0xE58
	0x03523954 MOV X2, X31
	0x03523958 BL 0x3EB1B00
	0x0352395C MOV X21, X0
	0x03523960 BL 0x3EB1AE0
	0x03523964 MOV X0, X21
	0x03523968 BL 0x1D2C690
	0x0352396C BL 0x1990590
	0x03523970 STR X30, [X31 - 0x10]!
	0x03523974 LDRB W8, [X0 + 0x40]
	0x03523978 CBZ W8, 0x3523980
	0x0352397C BL 0x35229D8
	0x03523980 MOV W0, W31
	0x03523984 LDR X30, [X31], #0x10
	0x03523988 RET
	0x0352398C MOV X8, X1
	0x03523990 UBFM X3, X2, 0x28, 0x3F
	0x03523994 MOV W1, W2
	0x03523998 MOV X2, X8
	0x0352399C B 0x3522CF8
	0x035239A0 LDP W8, W9, [X0 + 0x20]
	0x035239A4 ADD W8, W8, W1
	0x035239A8 ADD W9, W9, 0x1
	0x035239AC STP W8, W9, [X0 + 0x20]
	0x035239B0 RET
	0x035239B4 SUB X31, X31, 0x40
	0x035239B8 STP X30, X23, [X31 + 0x10]
	0x035239BC STP X22, X21, [X31 + 0x20]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0xEBD000
	007 Move W8, [X20+2885]
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xC11000
	014 Move X0, [X0+3648]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X20+2885], W8
	018 Move X0, [X19+40]
	019 Move W8, 4
	020 Move [X19+64], W8
	021 Compare X0, 0
	022 JumpIfEqual {27}
	023 Move X8, [X0]
	024 Move X9, [X8+392]
	025 Move X1, [X8+400]
	026 NotImplemented "Instruction BLR not yet implemented."
	027 Move X20, [X19+288]
	028 Move [X31+12], W31
	029 Add X1, X31, 12
	030 Move X0, X20
	031 Move X2, X31
	032 Call Monitor.Enter, X0, X1
	033 Move X0, [X19+288]
	034 Compare X0, 0
	035 JumpIfEqual {66}
	036 Move X8, 0xC11000
	037 Move X8, [X8+3648]
	038 Move X1, [X8]
	039 Call Queue`1<Object>.Clear, X0
	040 Move X21, X31
	041 Move W22, 3
	042 Move W8, [X31+12]
	043 Compare W8, 0
	044 JumpIfEqual {48}
	045 Move X0, X20
	046 Move X1, X31
	047 Call Monitor.Exit, X0
	048 Compare X21, 0
	049 JumpIfNotEqual {64}
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Compare W22, 0
	052 JumpIfNotEqual {58}
	053 Move W1, 1025
	054 Move X0, X19
	055 Move X2, X31
	056 Move [X19+64], W31
	057 Call PeerBase.EnqueueStatusCallback, X0, X1
	058 Move X20, [X31+32]
	059 Move X19, [X31+40]
	060 Move X22, [X31+16]
	061 Move X21, [X31+24]
	062 Move X30, [X31+48]
	063 Return 
	064 Move X0, X21
	065 Call 0x1C17F18
	066 Call 0x1C17F20
	067 Move X22, X0
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Move X0, X22
	070 Call 0x3EB2AD0
	071 Move X21, [X0]
	072 Call 0x3EB2AE0
	073 Move W22, W31
	074 Move X21, X31
	075 Move X22, X0
	076 Move W8, [X31+12]
	077 Compare W8, 0
	078 JumpIfEqual {82}
	079 Move X0, X20
	080 Move X1, X31
	081 Call Monitor.Exit, X0
	082 Compare X21, 0
	083 JumpIfNotEqual {86}
	084 Move X0, X22
	085 Call 0x1D2D690
	086 Move X0, X21
	087 Call 0x1C17F18
	088 Call 0x1991590

Method: System.Void FetchServerTimestamp()

Disassembly:
	0x035239C0 STP X20, X19, [X31 + 0x30]
	0x035239C4 ADRP X22, 0xEBC000
	0x035239C8 LDRB W8, [X22 + 0xB4C]
	0x035239CC MOV W21, W2
	0x035239D0 MOV X20, X1
	0x035239D4 MOV X19, X0

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Call TPeer.SendPing, X0
	005 Move [X19+112], W31
	006 Move X30, [X31+16]
	007 Move X19, [X31+24]
	008 Return 

Method: System.Void EnqueueInit(System.Byte[] data)

Disassembly:
	0x03523600 MOV X0, X21
	0x03523604 BL 0x1C16F18
	0x03523608 BL 0x1C16F20
	0x0352360C BL 0x1C16F20
	0x03523610 B 0x3523630
	0x03523614 B 0x3523630
	0x03523618 B 0x3523630
	0x0352361C B 0x3523630
	0x03523620 B 0x3523630
	0x03523624 B 0x3523630
	0x03523628 B 0x3523630
	0x0352362C B 0x3523630
	0x03523630 MOV X20, X0
	0x03523634 CMP W1, 0x1
	0x03523638 B.NE 0x3523650
	0x0352363C MOV X0, X20
	0x03523640 BL 0x3EB1AD0
	0x03523644 LDR X21, [X0]
	0x03523648 BL 0x3EB1AE0
	0x0352364C B 0x352359C
	0x03523650 MOV X21, X31
	0x03523654 B 0x352365C
	0x03523658 MOV X20, X0
	0x0352365C LDRB W8, [X31 + 0xC]
	0x03523660 CBZ W8, 0x3523670
	0x03523664 MOV X0, X19
	0x03523668 MOV X1, X31
	0x0352366C BL 0x33E14E4
	0x03523670 CBNZ X21, 0x352367C
	0x03523674 MOV X0, X20
	0x03523678 BL 0x1D2C690
	0x0352367C MOV X0, X21
	0x03523680 BL 0x1C16F18
	0x03523684 BL 0x1990590
	0x03523688 STR X30, [X31 - 0x30]!
	0x0352368C STP X22, X21, [X31 + 0x10]
	0x03523690 STP X20, X19, [X31 + 0x20]
	0x03523694 ADRP X22, 0xEBC000
	0x03523698 LDRB W8, [X22 + 0xB4B]
	0x0352369C MOV W20, W2
	0x035236A0 MOV X21, X1
	0x035236A4 MOV X19, X0
	0x035236A8 TBNZ X8, 0x0, 0x35236C0
	0x035236AC ADRP X0, 0xBD0000
	0x035236B0 LDR X0, [X0 + 0x618]
	0x035236B4 BL 0x1C16CF4
	0x035236B8 MOVZ W8, 0x1
	0x035236BC STRB W8, [X22 + 0xB4B]
	0x035236C0 LDR X8, [X19 + 0x90]
	0x035236C4 ADD X8, X8, W20, SXTW
	0x035236C8 STR X8, [X19 + 0x90]
	0x035236CC MOV X0, X19
	0x035236D0 MOV X1, X31
	0x035236D4 BL 0x34EFFC0
	0x035236D8 TBZ X0, 0x0, 0x3523714
	0x035236DC MOV X0, X19
	0x035236E0 MOV X1, X31
	0x035236E4 BL 0x34EFFDC
	0x035236E8 CBZ X0, 0x35237E4
	0x035236EC LDR W8, [X0 + 0x24]
	0x035236F0 ADD W8, W8, 0x1
	0x035236F4 STR W8, [X0 + 0x24]
	0x035236F8 MOV X0, X19
	0x035236FC MOV X1, X31
	0x03523700 BL 0x34EFFDC
	0x03523704 CBZ X0, 0x35237E8
	0x03523708 LDR W8, [X0 + 0x28]
	0x0352370C ADD W8, W8, 0x1
	0x03523710 STR W8, [X0 + 0x28]
	0x03523714 MOV X0, X19
	0x03523718 MOV X1, X31
	0x0352371C BL 0x34F06D0
	0x03523720 CBZ X0, 0x35237E0
	0x03523724 MOV X1, X31
	0x03523728 BL 0x34F06D8
	0x0352372C TBZ X0, 0x0, 0x352377C
	0x03523730 ADRP X8, 0xBD0000
	0x03523734 LDR X8, [X8 + 0x618]
	0x03523738 LDR X0, [X8]
	0x0352373C MOV W1, W20
	0x03523740 BL 0x1C16D6C
	0x03523744 MOV X22, X0
	0x03523748 MOV X0, X21
	0x0352374C MOV W1, W31
	0x03523750 MOV X2, X22
	0x03523754 MOV W3, W31
	0x03523758 MOV W4, W20
	0x0352375C MOV X5, X31
	0x03523760 BL 0x33A8A9C
	0x03523764 MOV X0, X19
	0x03523768 MOV X1, X22
	0x0352376C MOV X2, X31
	0x03523770 BL 0x34F6390
	0x03523774 MOV W20, W31

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0xEBD000
	007 Move W8, [X20+2886]
	008 Move X21, X1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {25}
	014 Move X0, 0xBD1000
	015 Move X0, [X0+1560]
	016 Call 0x1C17CF4
	017 Move X0, 0xBD9000
	018 Move X0, [X0+3840]
	019 Call 0x1C17CF4
	020 Move X0, 0xBDA000
	021 Move X0, [X0+2984]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X20+2886], W8
	025 Compare X21, 0
	026 JumpIfEqual {108}
	027 Move X8, 0xBDA000
	028 Move X8, [X8+2984]
	029 Move X22, 0xBD1000
	030 Move X0, [X8]
	031 Move X22, [X22+1560]
	032 Call 0x1C17F10
	033 Move W8, [X21+24]
	034 Move X20, X0
	035 Add W1, W8, 32
	036 Call StreamBuffer..ctor, X0, X1
	037 Move X0, [X22]
	038 Move W1, 7
	039 Call 0x1C17D6C
	040 Compare X0, 0
	041 JumpIfEqual {108}
	042 Move W8, [X0+24]
	043 Move X22, X0
	044 Compare W8, 0
	045 JumpIfEqual {109}
	046 Move W9, 251
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Move [X22+32], W9
	049 Move X9, 0xBD9000
	050 Move X9, [X9+3840]
	051 Move W10, 1
	052 Move [X22+38], W10
	053 Move [X31+12], W10
	054 Move X0, [X9]
	055 Move W9, [X0+224]
	056 Compare W9, 0
	057 JumpIfNotEqual {60}
	058 Call 0x1C17DFC
	059 Move W8, [X22+24]
	060 Move W9, [X21+24]
	061 Add X2, X31, 12
	062 Move X1, X22
	063 Move X3, X31
	064 Add W0, W8, W9
	065 Call Protocol.Serialize, X0, X1, X2
	066 Compare X20, 0
	067 JumpIfEqual {108}
	068 Move W3, [X22+24]
	069 Move X0, X20
	070 Move X1, X22
	071 Move W2, W31
	072 Call StreamBuffer.Write, X0, X1, X2, X3
	073 Move W3, [X21+24]
	074 Move X0, X20
	075 Move X1, X21
	076 Move W2, W31
	077 Call StreamBuffer.Write, X0, X1, X2, X3
	078 Move X0, X19
	079 Move X1, X31
	080 Call PeerBase.get_TrafficStatsEnabled, X0
	081 Move TEMP, X0
	082 And TEMP, TEMP, 1
	083 Compare TEMP, 1
	084 JumpIfNotEqual {97}
	085 Move X0, X19
	086 Move X1, X31
	087 Call PeerBase.get_TrafficStatsOutgoing, X0
	088 Compare X0, 0
	089 JumpIfEqual {108}
	090 Move W8, [X20+20]
	091 Move W9, [X0+56]
	092 Move W10, [X0+32]
	093 Add W8, W9, W8
	094 Add W9, W10, 1
	095 Move [X0+56], W8
	096 Move [X0+32], W9
	097 Move W1, 1
	098 Move X0, X19
	099 Move X2, X20
	100 Move W3, W31
	101 Call TPeer.EnqueueMessageAsPayload, X0, X1, X2, X3
	102 Move X20, [X31+32]
	103 Move X19, [X31+40]
	104 Move X22, [X31+16]
	105 Move X21, [X31+24]
	106 Move X30, [X31+48]
	107 Return 
	108 Call 0x1C17F20
	109 Call 0x1C17F28

Method: System.Boolean DispatchIncomingCommands()

Disassembly:
	0x0352407C LDR W0, [X0 + 0x2C]
	0x03524080 RET
	0x03524084 STR W1, [X0 + 0x2C]
	0x03524088 RET
	0x0352408C LDR W0, [X0 + 0x30]
	0x03524090 RET
	0x03524094 STR W1, [X0 + 0x30]
	0x03524098 RET
	0x0352409C LDR W0, [X0 + 0x34]
	0x035240A0 RET
	0x035240A4 STR W1, [X0 + 0x34]
	0x035240A8 RET
	0x035240AC LDR W0, [X0 + 0x38]
	0x035240B0 RET
	0x035240B4 STR W1, [X0 + 0x38]
	0x035240B8 RET
	0x035240BC LDRB W0, [X0 + 0x3C]
	0x035240C0 RET
	0x035240C4 STRB W1, [X0 + 0x3C]
	0x035240C8 RET
	0x035240CC LDR W0, [X0 + 0x40]
	0x035240D0 RET
	0x035240D4 STR W1, [X0 + 0x40]
	0x035240D8 RET
	0x035240DC LDR W0, [X0 + 0x44]
	0x035240E0 RET
	0x035240E4 STR W1, [X0 + 0x44]
	0x035240E8 RET
	0x035240EC LDR W0, [X0 + 0x48]
	0x035240F0 RET
	0x035240F4 STR W1, [X0 + 0x48]
	0x035240F8 RET
	0x035240FC LDRB W0, [X0 + 0x4C]
	0x03524100 RET
	0x03524104 STRB W1, [X0 + 0x4C]
	0x03524108 RET
	0x0352410C LDR W0, [X0 + 0x50]
	0x03524110 RET
	0x03524114 STR W1, [X0 + 0x50]
	0x03524118 RET
	0x0352411C LDR W0, [X0 + 0x54]
	0x03524120 RET
	0x03524124 STR W1, [X0 + 0x54]
	0x03524128 RET
	0x0352412C LDR W0, [X0 + 0x58]
	0x03524130 RET
	0x03524134 LDR W0, [X0 + 0x58]
	0x03524138 RET
	0x0352413C STR W1, [X0 + 0x58]
	0x03524140 RET
	0x03524144 LDR W0, [X0 + 0x5C]
	0x03524148 RET
	0x0352414C STR W1, [X0 + 0x5C]
	0x03524150 RET
	0x03524154 LDR W8, [X0 + 0x20]
	0x03524158 LDR W9, [X0 + 0x28]
	0x0352415C LDR W10, [X0 + 0x30]
	0x03524160 ADD W8, W9, W8
	0x03524164 ADD W0, W8, W10
	0x03524168 RET
	0x0352416C LDR W8, [X0 + 0x24]
	0x03524170 LDR W9, [X0 + 0x2C]
	0x03524174 LDR W10, [X0 + 0x34]
	0x03524178 ADD W8, W9, W8
	0x0352417C ADD W0, W8, W10
	0x03524180 RET
	0x03524184 LDR W8, [X0 + 0x28]
	0x03524188 LDR W9, [X0 + 0x30]
	0x0352418C ADD W0, W9, W8
	0x03524190 RET
	0x03524194 LDR W8, [X0 + 0x2C]
	0x03524198 LDR W9, [X0 + 0x34]
	0x0352419C ADD W0, W9, W8
	0x035241A0 RET
	0x035241A4 LDR W0, [X0 + 0x20]
	0x035241A8 RET
	0x035241AC LDR W0, [X0 + 0x24]
	0x035241B0 RET
	0x035241B4 STR X30, [X31 - 0x20]!
	0x035241B8 STP X20, X19, [X31 + 0x10]
	0x035241BC MOV X19, X1
	0x035241C0 MOV X1, X31
	0x035241C4 MOV X20, X0
	0x035241C8 BL 0x33BDD8C
	0x035241CC STR X19, [X20 + 0x10]
	0x035241D0 LDP X20, X19, [X31 + 0x10]
	0x035241D4 LDR X30, [X31], #0x20
	0x035241D8 RET
	0x035241DC LDP W8, W9, [X0 + 0x28]
	0x035241E0 ADD W8, W8, W1
	0x035241E4 ADD W9, W9, 0x1
	0x035241E8 STP W8, W9, [X0 + 0x28]
	0x035241EC RET
	0x035241F0 LDP W8, W9, [X0 + 0x30]
	0x035241F4 ADD W8, W8, W1
	0x035241F8 ADD W9, W9, 0x1
	0x035241FC STP W8, W9, [X0 + 0x30]
	0x03524200 RET
	0x03524204 LDR W8, [X0 + 0x38]
	0x03524208 CMP W8, W2
	0x0352420C B.GE 0x3524218
	0x03524210 STR W2, [X0 + 0x38]
	0x03524214 STRB W1, [X0 + 0x3C]
	0x03524218 RET
	0x0352421C LDR W8, [X0 + 0x40]
	0x03524220 CMP W8, W2
	0x03524224 B.GE 0x3524230
	0x03524228 STR W2, [X0 + 0x40]
	0x0352422C STRB W1, [X0 + 0x4C]
	0x03524230 RET
	0x03524234 LDR W8, [X0 + 0x44]
	0x03524238 CMP W8, W1
	0x0352423C B.GE 0x3524244
	0x03524240 STR W1, [X0 + 0x44]
	0x03524244 RET
	0x03524248 LDR W8, [X0 + 0x48]
	0x0352424C CMP W8, W1
	0x03524250 B.GE 0x3524258
	0x03524254 STR W1, [X0 + 0x48]
	0x03524258 RET
	0x0352425C STP X30, X19, [X31 - 0x10]!
	0x03524260 LDR W8, [X0 + 0x18]
	0x03524264 MOV X19, X0
	0x03524268 CBZ W8, 0x3524294
	0x0352426C LDR X0, [X19 + 0x10]
	0x03524270 CBZ X0, 0x35242BC
	0x03524274 MOV X1, X31
	0x03524278 BL 0x364C19C
	0x0352427C LDR W8, [X19 + 0x18]
	0x03524280 LDR W9, [X19 + 0x50]
	0x03524284 SUB W8, W0, W8
	0x03524288 CMP W8, W9
	0x0352428C B.LE 0x3524294
	0x03524290 STR W8, [X19 + 0x50]
	0x03524294 LDR W8, [X19 + 0x58]
	0x03524298 LDR X0, [X19 + 0x10]
	0x0352429C ADD W8, W8, 0x1
	0x035242A0 STR W8, [X19 + 0x58]
	0x035242A4 CBZ X0, 0x35242BC
	0x035242A8 MOV X1, X31
	0x035242AC BL 0x364C19C
	0x035242B0 STR W0, [X19 + 0x18]
	0x035242B4 LDP X30, X19, [X31], #0x10
	0x035242B8 RET
	0x035242BC BL 0x1C16F20
	0x035242C0 STP X30, X19, [X31 - 0x10]!
	0x035242C4 LDR W8, [X0 + 0x1C]
	0x035242C8 MOV X19, X0
	0x035242CC CBZ W8, 0x35242F8
	0x035242D0 LDR X0, [X19 + 0x10]
	0x035242D4 CBZ X0, 0x3524320
	0x035242D8 MOV X1, X31
	0x035242DC BL 0x364C19C
	0x035242E0 LDR W8, [X19 + 0x1C]
	0x035242E4 LDR W9, [X19 + 0x54]
	0x035242E8 SUB W8, W0, W8
	0x035242EC CMP W8, W9
	0x035242F0 B.LE 0x35242F8
	0x035242F4 STR W8, [X19 + 0x54]
	0x035242F8 LDR W8, [X19 + 0x5C]
	0x035242FC LDR X0, [X19 + 0x10]
	0x03524300 ADD W8, W8, 0x1
	0x03524304 STR W8, [X19 + 0x5C]
	0x03524308 CBZ X0, 0x3524320
	0x0352430C MOV X1, X31
	0x03524310 BL 0x364C19C
	0x03524314 STR W0, [X19 + 0x1C]
	0x03524318 LDP X30, X19, [X31], #0x10
	0x0352431C RET
	0x03524320 BL 0x1C16F20
	0x03524324 MOVI V0.2D, 0x0
	0x03524328 STR W31, [X0 + 0x40]
	0x0352432C STRB W31, [X0 + 0x4C]
	0x03524330 STR W31, [X0 + 0x38]
	0x03524334 STRB W31, [X0 + 0x3C]
	0x03524338 STR D0, [X0 + 0x50]
	0x0352433C STR D0, [X0 + 0x18]
	0x03524340 RET
	0x03524344 SUB X31, X31, 0x40
	0x03524348 STP X30, X23, [X31 + 0x10]
	0x0352434C STP X22, X21, [X31 + 0x20]
	0x03524350 STP X20, X19, [X31 + 0x30]
	0x03524354 ADRP X20, 0xEBB000
	0x03524358 ADRP X23, 0xBCF000
	0x0352435C ADRP X22, 0xC10000
	0x03524360 LDRB W8, [X20 + 0xB50]
	0x03524364 LDR X23, [X23 + 0x758]
	0x03524368 LDR X22, [X22 + 0x768]
	0x0352436C MOV X19, X0
	0x03524370 TBNZ X8, 0x0, 0x3524394
	0x03524374 ADRP X0, 0xBCF000
	0x03524378 LDR X0, [X0 + 0x758]
	0x0352437C BL 0x1C16CF4
	0x03524380 ADRP X0, 0xC10000
	0x03524384 LDR X0, [X0 + 0x768]
	0x03524388 BL 0x1C16CF4
	0x0352438C MOVZ W8, 0x1
	0x03524390 STRB W8, [X20 + 0xB50]
	0x03524394 LDR W8, [X19 + 0x20]
	0x03524398 LDR X0, [X23]
	0x0352439C ADD X1, X31, 0xC
	0x035243A0 STR W8, [X31 + 0xC]
	0x035243A4 BL 0x1C16E04
	0x035243A8 MOV X20, X0
	0x035243AC LDR W8, [X19 + 0x28]
	0x035243B0 LDR X0, [X23]
	0x035243B4 ADD X1, X31, 0x8
	0x035243B8 STR W8, [X31 + 0x8]
	0x035243BC BL 0x1C16E04
	0x035243C0 MOV X21, X0
	0x035243C4 LDR W8, [X19 + 0x30]
	0x035243C8 LDR X0, [X23]
	0x035243CC ADD X1, X31, 0x4
	0x035243D0 STR W8, [X31 + 0x4]
	0x035243D4 BL 0x1C16E04

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0xEBC000
	009 Move W8, [X20+2887]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {35}
	015 Move X0, 0xC10000
	016 Move X0, [X0+2096]
	017 Call 0x1C17CF4
	018 Move X0, 0xC10000
	019 Move X0, [X0+1912]
	020 Call 0x1C17CF4
	021 Move X0, 0xC10000
	022 Move X0, [X0+2440]
	023 Call 0x1C17CF4
	024 Move X0, 0xC10000
	025 Move X0, [X0+2208]
	026 Call 0x1C17CF4
	027 Move X0, 0xC10000
	028 Move X0, [X0+2216]
	029 Call 0x1C17CF4
	030 Move X0, 0xC10000
	031 Move X0, [X0+2448]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X20+2887], W8
	035 Move [X31+8], W31
	036 Move W8, [X19+64]
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move X0, X19
	039 Move X1, X31
	040 Call PeerBase.get_timeInt, X0
	041 Move W21, [X19+136]
	042 Move W20, W0
	043 Move X0, X19
	044 Move X1, X31
	045 Call PeerBase.get_DisconnectTimeout, X0
	046 Subtract W8, W20, W21
	047 NotImplemented "Instruction CMP not yet implemented."
	048 Move W1, 1040
	049 Move X0, X19
	050 Move X2, X31
	051 Call PeerBase.EnqueueStatusCallback, X0, X1
	052 Move X8, 0xC10000
	053 Move X8, [X8+2096]
	054 Move X0, [X8]
	055 Call 0x1C17F10
	056 Move X8, [X19]
	057 Move X1, X19
	058 Move X3, X31
	059 Move X20, X0
	060 Move X2, [X8+496]
	061 Call MyAction..ctor, X0, X1, X2
	062 Move X0, X19
	063 Move X1, X20
	064 Move X2, X31
	065 Call PeerBase.EnqueueActionForDispatch, X0, X1
	066 Move X23, 0xC10000
	067 Move X23, [X23+2208]
	068 Move X24, X31
	069 Move X20, [X19+96]
	070 Move [X31+12], W31
	071 Add X1, X31, 12
	072 Move X0, X20
	073 Move X2, X31
	074 Call Monitor.Enter, X0, X1
	075 Move X0, [X19+96]
	076 Compare X0, 0
	077 JumpIfEqual {104}
	078 Move W8, [X0+32]
	079 NotImplemented "Instruction CMP not yet implemented."
	080 Move X1, [X23]
	081 Call Queue`1<Object>.Dequeue, X0
	082 Move X22, X31
	083 Move W21, 9
	084 Move X24, X0
	085 Move X22, X31
	086 Move W21, 8
	087 Move W8, [X31+12]
	088 Compare W8, 0
	089 JumpIfEqual {93}
	090 Move X0, X20
	091 Move X1, X31
	092 Call Monitor.Exit, X0
	093 Compare X22, 0
	094 JumpIfNotEqual {178}
	095 Compare W21, 0
	096 JumpIfEqual {98}
	097 NotImplemented "Instruction CMP not yet implemented."
	098 Compare X24, 0
	099 JumpIfEqual {180}
	100 Move X8, [X24+24]
	101 Move X0, [X24+64]
	102 Move X1, [X24+40]
	103 NotImplemented "Instruction BLR not yet implemented."
	104 Call 0x1C17F20
	105 Move X21, X0
	106 NotImplemented "Instruction CMP not yet implemented."
	107 Move X0, X21
	108 Call 0x3EB2AD0
	109 Move X22, [X0]
	110 Call 0x3EB2AE0
	111 Move W21, W31
	112 NotImplemented "Instruction CMP not yet implemented."
	113 Move X20, [X19+288]
	114 Move [X31+8], W31
	115 Add X1, X31, 8
	116 Move X0, X20
	117 Move X2, X31
	118 Call Monitor.Enter, X0, X1
	119 Move X0, [X19+288]
	120 Compare X0, 0
	121 JumpIfEqual {181}
	122 Move W8, [X0+32]
	123 NotImplemented "Instruction CMP not yet implemented."
	124 Move X8, 0xC10000
	125 Move X8, [X8+2440]
	126 Move X1, [X8]
	127 Call Queue`1<Object>.Dequeue, X0
	128 Move X21, X0
	129 Move X22, X31
	130 Move W23, 12
	131 Move X22, X31
	132 Move X21, X31
	133 Move W23, 11
	134 Move W8, [X31+8]
	135 Compare W8, 0
	136 JumpIfEqual {140}
	137 Move X0, X20
	138 Move X1, X31
	139 Call Monitor.Exit, X0
	140 Compare X22, 0
	141 JumpIfNotEqual {178}
	142 NotImplemented "Instruction CMP not yet implemented."
	143 Compare W23, 0
	144 JumpIfNotEqual {168}
	145 Compare X21, 0
	146 JumpIfEqual {180}
	147 Move W8, [X21+20]
	148 Move X9, [X19]
	149 Move X0, X19
	150 Move X1, X21
	151 Add W8, W8, 3
	152 Move [X19+72], W8
	153 Move X8, [X9+632]
	154 Move X2, [X9+640]
	155 NotImplemented "Instruction BLR not yet implemented."
	156 Move X8, 0xC10000
	157 Move X8, [X8+1912]
	158 Move W19, W0
	159 Move X8, [X8]
	160 Move W9, [X8+224]
	161 Compare W9, 0
	162 JumpIfNotEqual {165}
	163 Move X0, X8
	164 Call 0x1C17DFC
	165 Move X0, X21
	166 Move X1, X31
	167 Call PeerBase.MessageBufferPoolPut, X0
	168 Move W19, W31
	169 And W0, W19, 1
	170 Move X20, [X31+48]
	171 Move X19, [X31+56]
	172 Move X22, [X31+32]
	173 Move X21, [X31+40]
	174 Move X24, [X31+16]
	175 Move X23, [X31+24]
	176 Move X30, [X31+64]
	177 Return X0
	178 Move X0, X22
	179 Call 0x1C17F18
	180 Call 0x1C17F20
	181 Call 0x1C17F20
	182 Move X22, X31
	183 Move X21, X0
	184 Move W8, [X31+12]
	185 Compare W8, 0
	186 JumpIfEqual {190}
	187 Move X0, X20
	188 Move X1, X31
	189 Call Monitor.Exit, X0
	190 Compare X22, 0
	191 JumpIfNotEqual {194}
	192 Move X0, X21
	193 Call 0x1D2D690
	194 Move X0, X22
	195 Call 0x1C17F18
	196 Move X21, X0
	197 NotImplemented "Instruction CMP not yet implemented."
	198 Move X0, X21
	199 Call 0x3EB2AD0
	200 Move X22, [X0]
	201 Call 0x3EB2AE0
	202 Move W23, W31
	203 Move X21, X31
	204 Move X22, X31
	205 Move X21, X0
	206 Move W8, [X31+8]
	207 Compare W8, 0
	208 JumpIfEqual {212}
	209 Move X0, X20
	210 Move X1, X31
	211 Call Monitor.Exit, X0
	212 Compare X22, 0
	213 JumpIfEqual {192}
	214 Move X0, X22
	215 Call 0x1C17F18
	216 Call 0x1991590

Method: System.Boolean SendOutgoingCommands()

Disassembly:
	0x035243D8 LDR X8, [X22]
	0x035243DC MOV X3, X0
	0x035243E0 MOV X1, X20
	0x035243E4 MOV X2, X21
	0x035243E8 MOV X0, X8
	0x035243EC MOV X4, X31
	0x035243F0 BL 0x3227C18
	0x035243F4 LDP X20, X19, [X31 + 0x30]
	0x035243F8 LDP X22, X21, [X31 + 0x20]
	0x035243FC LDP X30, X23, [X31 + 0x10]
	0x03524400 ADD X31, X31, 0x40
	0x03524404 RET
	0x03524408 SUB X31, X31, 0x50
	0x0352440C STP X30, X23, [X31 + 0x20]
	0x03524410 STP X22, X21, [X31 + 0x30]
	0x03524414 STP X20, X19, [X31 + 0x40]
	0x03524418 ADRP X20, 0xEBB000
	0x0352441C ADRP X21, 0xBCF000
	0x03524420 ADRP X22, 0xBCF000
	0x03524424 LDRB W8, [X20 + 0xB51]
	0x03524428 LDR X21, [X21 + 0x9D0]
	0x0352442C LDR X22, [X22 + 0x758]
	0x03524430 MOV X19, X0
	0x03524434 TBNZ X8, 0x0, 0x3524470
	0x03524438 ADRP X0, 0xBD0000
	0x0352443C LDR X0, [X0 + 0x9D8]
	0x03524440 BL 0x1C16CF4
	0x03524444 ADRP X0, 0xBCF000
	0x03524448 LDR X0, [X0 + 0x758]
	0x0352444C BL 0x1C16CF4
	0x03524450 ADRP X0, 0xBCF000
	0x03524454 LDR X0, [X0 + 0x9D0]
	0x03524458 BL 0x1C16CF4
	0x0352445C ADRP X0, 0xC10000
	0x03524460 LDR X0, [X0 + 0x770]
	0x03524464 BL 0x1C16CF4
	0x03524468 MOVZ W8, 0x1
	0x0352446C STRB W8, [X20 + 0xB51]
	0x03524470 LDR X0, [X21]
	0x03524474 MOVZ W1, 0x8
	0x03524478 BL 0x1C16D6C
	0x0352447C MOV X20, X0
	0x03524480 LDR W8, [X19 + 0x54]
	0x03524484 LDR X0, [X22]
	0x03524488 ADD X1, X31, 0x1C
	0x0352448C STR W8, [X31 + 0x1C]
	0x03524490 BL 0x1C16E04
	0x03524494 CBZ X20, 0x35246C4
	0x03524498 MOV X21, X0
	0x0352449C CBZ X0, 0x35244B4
	0x035244A0 LDR X8, [X20]
	0x035244A4 MOV X0, X21
	0x035244A8 LDR X1, [X8 + 0x40]
	0x035244AC BL 0x1C16E00
	0x035244B0 CBZ X0, 0x35246B8
	0x035244B4 LDR W8, [X20 + 0x18]
	0x035244B8 CBZ W8, 0x35246B4
	0x035244BC STR X21, [X20 + 0x20]
	0x035244C0 LDR W8, [X19 + 0x50]
	0x035244C4 LDR X0, [X22]
	0x035244C8 ADD X1, X31, 0x18
	0x035244CC STR W8, [X31 + 0x18]
	0x035244D0 BL 0x1C16E04
	0x035244D4 MOV X21, X0
	0x035244D8 CBZ X0, 0x35244F0
	0x035244DC LDR X8, [X20]
	0x035244E0 MOV X0, X21
	0x035244E4 LDR X1, [X8 + 0x40]
	0x035244E8 BL 0x1C16E00
	0x035244EC CBZ X0, 0x35246B8
	0x035244F0 LDR W8, [X20 + 0x18]
	0x035244F4 CMP W8, 0x1
	0x035244F8 B.LS 0x35246B4
	0x035244FC STR X21, [X20 + 0x28]
	0x03524500 LDR W8, [X19 + 0x40]
	0x03524504 LDR X0, [X22]
	0x03524508 ADD X1, X31, 0x14
	0x0352450C STR W8, [X31 + 0x14]
	0x03524510 BL 0x1C16E04
	0x03524514 MOV X21, X0
	0x03524518 CBZ X0, 0x3524530
	0x0352451C LDR X8, [X20]
	0x03524520 MOV X0, X21
	0x03524524 LDR X1, [X8 + 0x40]
	0x03524528 BL 0x1C16E00
	0x0352452C CBZ X0, 0x35246B8
	0x03524530 LDR W8, [X20 + 0x18]
	0x03524534 CMP W8, 0x2
	0x03524538 B.LS 0x35246B4
	0x0352453C ADRP X23, 0xBD0000
	0x03524540 LDR X23, [X23 + 0x9D8]
	0x03524544 STR X21, [X20 + 0x30]
	0x03524548 LDRB W8, [X19 + 0x4C]
	0x0352454C ADD X1, X31, 0x10
	0x03524550 LDR X0, [X23]
	0x03524554 STRB W8, [X31 + 0x10]
	0x03524558 BL 0x1C16E04
	0x0352455C MOV X21, X0
	0x03524560 CBZ X0, 0x3524578
	0x03524564 LDR X8, [X20]
	0x03524568 MOV X0, X21
	0x0352456C LDR X1, [X8 + 0x40]
	0x03524570 BL 0x1C16E00
	0x03524574 CBZ X0, 0x35246B8
	0x03524578 LDR W8, [X20 + 0x18]
	0x0352457C CMP W8, 0x3
	0x03524580 B.LS 0x35246B4
	0x03524584 STR X21, [X20 + 0x38]
	0x03524588 LDR W8, [X19 + 0x38]
	0x0352458C LDR X0, [X22]
	0x03524590 ADD X1, X31, 0xC
	0x03524594 STR W8, [X31 + 0xC]
	0x03524598 BL 0x1C16E04
	0x0352459C MOV X21, X0
	0x035245A0 CBZ X0, 0x35245B8
	0x035245A4 LDR X8, [X20]
	0x035245A8 MOV X0, X21
	0x035245AC LDR X1, [X8 + 0x40]
	0x035245B0 BL 0x1C16E00
	0x035245B4 CBZ X0, 0x35246B8
	0x035245B8 LDR W8, [X20 + 0x18]
	0x035245BC CMP W8, 0x4
	0x035245C0 B.LS 0x35246B4
	0x035245C4 STR X21, [X20 + 0x40]
	0x035245C8 LDRB W8, [X19 + 0x3C]
	0x035245CC LDR X0, [X23]
	0x035245D0 ADD X1, X31, 0x8
	0x035245D4 STRB W8, [X31 + 0x8]
	0x035245D8 BL 0x1C16E04
	0x035245DC MOV X21, X0
	0x035245E0 CBZ X0, 0x35245F8
	0x035245E4 LDR X8, [X20]
	0x035245E8 MOV X0, X21
	0x035245EC LDR X1, [X8 + 0x40]
	0x035245F0 BL 0x1C16E00
	0x035245F4 CBZ X0, 0x35246B8
	0x035245F8 LDR W8, [X20 + 0x18]
	0x035245FC CMP W8, 0x5
	0x03524600 B.LS 0x35246B4
	0x03524604 STR X21, [X20 + 0x48]
	0x03524608 LDR W8, [X19 + 0x5C]
	0x0352460C LDR X0, [X22]
	0x03524610 ADD X1, X31, 0x4
	0x03524614 STR W8, [X31 + 0x4]
	0x03524618 BL 0x1C16E04
	0x0352461C MOV X21, X0
	0x03524620 CBZ X0, 0x3524638
	0x03524624 LDR X8, [X20]
	0x03524628 MOV X0, X21
	0x0352462C LDR X1, [X8 + 0x40]
	0x03524630 BL 0x1C16E00
	0x03524634 CBZ X0, 0x35246B8
	0x03524638 LDR W8, [X20 + 0x18]
	0x0352463C CMP W8, 0x6
	0x03524640 B.LS 0x35246B4
	0x03524644 STR X21, [X20 + 0x50]
	0x03524648 LDR W8, [X19 + 0x58]
	0x0352464C LDR X0, [X22]
	0x03524650 ADD X1, X31, 0x0
	0x03524654 STR W8, [X31]
	0x03524658 BL 0x1C16E04
	0x0352465C MOV X19, X0
	0x03524660 CBZ X0, 0x3524678
	0x03524664 LDR X8, [X20]
	0x03524668 MOV X0, X19
	0x0352466C LDR X1, [X8 + 0x40]
	0x03524670 BL 0x1C16E00
	0x03524674 CBZ X0, 0x35246B8
	0x03524678 LDR W8, [X20 + 0x18]
	0x0352467C CMP W8, 0x7
	0x03524680 B.LS 0x35246B4
	0x03524684 ADRP X8, 0xC10000

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+16], X30
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X19, 0xEBC000
	013 Move W8, [X19+2888]
	014 Move X20, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {33}
	019 Move X0, 0xC11000
	020 Move X0, [X0+1840]
	021 Call 0x1C17CF4
	022 Move X0, 0xC11000
	023 Move X0, [X0+1848]
	024 Call 0x1C17CF4
	025 Move X0, 0xC11000
	026 Move X0, [X0+1856]
	027 Call 0x1C17CF4
	028 Move X0, 0xC10000
	029 Move X0, [X0+1912]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X19+2888], W8
	033 Move W8, [X20+64]
	034 Compare W8, 0
	035 JumpIfEqual {105}
	036 Move X0, X20
	037 Call TPeer.SendPing, X0
	038 Move X0, [X20+40]
	039 Compare X0, 0
	040 JumpIfEqual {154}
	041 Move X1, X31
	042 Call IPhotonSocket.get_Connected, X0
	043 Move TEMP, X0
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfNotEqual {105}
	047 Move X0, X20
	048 Move X1, X31
	049 Call PeerBase.get_timeInt, X0
	050 Move X19, [X20+296]
	051 Move [X20+216], W0
	052 Move [X31+12], W31
	053 Add X1, X31, 12
	054 Move X0, X19
	055 Move X2, X31
	056 Call Monitor.Enter, X0, X1
	057 Move X8, [X20+296]
	058 Compare X8, 0
	059 JumpIfEqual {152}
	060 Move W9, [X8+24]
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Move X25, 0xC11000
	063 Move X26, 0xC10000
	064 Move X25, [X25+1856]
	065 Move X26, [X26+1912]
	066 Move W24, W31
	067 Move W9, W31
	068 Move X2, [X25]
	069 Move W21, W9
	070 Move X0, X8
	071 Move W1, W9
	072 Call List`1<Object>.get_Item, X0, X1
	073 Move X23, X0
	074 Compare X0, 0
	075 JumpIfEqual {153}
	076 Move X1, [X23+24]
	077 Move W2, [X23+20]
	078 Move X0, X20
	079 Call TPeer.SendData, X0, X1, X2
	080 Move W22, W0
	081 NotImplemented "Instruction CMP not yet implemented."
	082 Move W27, [X23+20]
	083 NotImplemented "Instruction CMP not yet implemented."
	084 Move X0, [X26]
	085 Move W8, [X0+224]
	086 Compare W8, 0
	087 JumpIfNotEqual {89}
	088 Call 0x1C17DFC
	089 Move X0, X23
	090 Move X1, X31
	091 Call PeerBase.MessageBufferPoolPut, X0
	092 Move X0, X20
	093 Move X1, X31
	094 Call PeerBase.get_mtu, X0
	095 NotImplemented "Instruction CMP not yet implemented."
	096 Add W24, W27, W24
	097 NotImplemented "Instruction CMP not yet implemented."
	098 Move X8, [X20+296]
	099 Compare X8, 0
	100 JumpIfEqual {152}
	101 Move W10, [X8+24]
	102 Add W9, W21, 1
	103 NotImplemented "Instruction CMP not yet implemented."
	104 Add W21, W21, 1
	105 Move W20, W31
	106 Move W22, W31
	107 Move W21, W31
	108 Move X0, [X20+296]
	109 Compare X0, 0
	110 JumpIfEqual {157}
	111 Move X8, 0xC11000
	112 Move X8, [X8+1840]
	113 Move X3, [X8]
	114 Move W1, W31
	115 Move W2, W21
	116 Call List`1<Object>.RemoveRange, X0, X1, X2
	117 Move W8, [X20+224]
	118 And W9, W22, 0xFFFFFFFE
	119 NotImplemented "Instruction CMP not yet implemented."
	120 Subtract W8, W8, W21
	121 Move [X20+224], W8
	122 Move X21, X31
	123 Move W20, W31
	124 Move X8, [X20+296]
	125 Compare X8, 0
	126 JumpIfEqual {158}
	127 Move W8, [X8+24]
	128 Move X21, X31
	129 NotImplemented "Instruction CMP not yet implemented."
	130 NotImplemented "Instruction CSET not yet implemented."
	131 Move W8, [X31+12]
	132 Compare W8, 0
	133 JumpIfEqual {137}
	134 Move X0, X19
	135 Move X1, X31
	136 Call Monitor.Exit, X0
	137 Compare X21, 0
	138 JumpIfNotEqual {155}
	139 Move W0, W20
	140 Move X20, [X31+80]
	141 Move X19, [X31+88]
	142 Move X22, [X31+64]
	143 Move X21, [X31+72]
	144 Move X24, [X31+48]
	145 Move X23, [X31+56]
	146 Move X26, [X31+32]
	147 Move X25, [X31+40]
	148 Move X30, [X31+16]
	149 Move X27, [X31+24]
	150 Add X31, X31, 96
	151 Return X0
	152 Call 0x1C17F20
	153 Call 0x1C17F20
	154 Call 0x1C17F20
	155 Move X0, X21
	156 Call 0x1C17F18
	157 Call 0x1C17F20
	158 Call 0x1C17F20
	159 Move X20, X0
	160 NotImplemented "Instruction CMP not yet implemented."
	161 Move X0, X20
	162 Call 0x3EB2AD0
	163 Move X21, [X0]
	164 Call 0x3EB2AE0
	165 Move X21, X31
	166 Move X20, X0
	167 Move W8, [X31+12]
	168 Compare W8, 0
	169 JumpIfEqual {173}
	170 Move X0, X19
	171 Move X1, X31
	172 Call Monitor.Exit, X0
	173 Compare X21, 0
	174 JumpIfNotEqual {177}
	175 Move X0, X20
	176 Call 0x1D2D690
	177 Move X0, X21
	178 Call 0x1C17F18
	179 Call 0x1991590

Method: System.Boolean SendAcksOnly()

Disassembly:
	0x03524970 LDR W8, [X20 + 0x28]
	0x03524974 LDR X0, [X22]
	0x03524978 ADD X1, X31, 0x8
	0x0352497C STR W8, [X31 + 0x8]
	0x03524980 BL 0x1C16E04
	0x03524984 MOV X20, X0
	0x03524988 CBZ X0, 0x35249A0

ISIL:
	001 Move [X31-16], X30
	002 Move W8, [X0+64]
	003 Compare W8, 0
	004 JumpIfEqual {6}
	005 Call TPeer.SendPing, X0
	006 Move W0, W31
	007 Move X30, [X31+16]
	008 Return X0

Method: System.Boolean EnqueuePhotonMessage(ExitGames.Client.Photon.StreamBuffer opBytes, ExitGames.Client.Photon.SendOptions sendParams)

Disassembly:
	0x0352498C LDR X8, [X19]
	0x03524990 MOV X0, X20
	0x03524994 LDR X1, [X8 + 0x40]
	0x03524998 BL 0x1C16E00
	0x0352499C CBZ X0, 0x35249E0

ISIL:
	001 Move X8, X1
	002 Move X3, X2
	003 ShiftRight X3, 40
	004 And X3, X3, 0x7FFFFFFF
	005 Move W1, W2
	006 Move X2, X8
	007 Call TPeer.EnqueueMessageAsPayload, X0, X1, X2, X3
	008 Return X0

Method: System.Boolean EnqueueMessageAsPayload(ExitGames.Client.Photon.DeliveryMode deliveryMode, ExitGames.Client.Photon.StreamBuffer opMessage, System.Byte channelId)

Disassembly:
	0x03523CF8 MOV X0, X19
	0x03523CFC BL 0x1C16F18
	0x03523D00 BL 0x1C16F20
	0x03523D04 B 0x3523D08
	0x03523D08 MOV X21, X0
	0x03523D0C CMP W1, 0x1
	0x03523D10 B.NE 0x3523D28
	0x03523D14 MOV X0, X21
	0x03523D18 BL 0x3EB1AD0
	0x03523D1C LDR X19, [X0]
	0x03523D20 BL 0x3EB1AE0
	0x03523D24 B 0x3523CC4
	0x03523D28 MOV X19, X31
	0x03523D2C B 0x3523D34
	0x03523D30 MOV X21, X0
	0x03523D34 LDRB W8, [X31 + 0x8]
	0x03523D38 CBZ W8, 0x3523D48
	0x03523D3C MOV X0, X20
	0x03523D40 MOV X1, X31
	0x03523D44 BL 0x33E14E4
	0x03523D48 CBNZ X19, 0x3523D54
	0x03523D4C MOV X0, X21
	0x03523D50 BL 0x1D2C690
	0x03523D54 MOV X0, X19
	0x03523D58 BL 0x1C16F18
	0x03523D5C BL 0x1990590
	0x03523D60 SUB X31, X31, 0x40
	0x03523D64 STR X30, [X31 + 0x10]
	0x03523D68 STP X22, X21, [X31 + 0x20]
	0x03523D6C STP X20, X19, [X31 + 0x30]
	0x03523D70 ADRP X22, 0xEBC000
	0x03523D74 ADRP X21, 0xBD8000
	0x03523D78 LDRB W8, [X22 + 0xB4D]
	0x03523D7C LDR X21, [X21 + 0xF00]
	0x03523D80 MOV X20, X1
	0x03523D84 MOV X19, X0
	0x03523D88 TBNZ X8, 0x0, 0x3523DA0
	0x03523D8C ADRP X0, 0xBD8000
	0x03523D90 LDR X0, [X0 + 0xF00]
	0x03523D94 BL 0x1C16CF4
	0x03523D98 MOVZ W8, 0x1
	0x03523D9C STRB W8, [X22 + 0xB4D]
	0x03523DA0 LDR X0, [X21]
	0x03523DA4 MOVZ W8, 0x1
	0x03523DA8 STR X31, [X31 + 0x18]
	0x03523DAC STR W8, [X31 + 0xC]
	0x03523DB0 LDR W8, [X0 + 0xE0]
	0x03523DB4 CBNZ W8, 0x3523DBC
	0x03523DB8 BL 0x1C16DFC
	0x03523DBC ADD X0, X31, 0x1C
	0x03523DC0 ADD X2, X31, 0xC
	0x03523DC4 MOV X1, X20
	0x03523DC8 MOV X3, X31
	0x03523DCC BL 0x3506A78
	0x03523DD0 ADD X0, X31, 0x18
	0x03523DD4 ADD X2, X31, 0xC
	0x03523DD8 MOV X1, X20
	0x03523DDC MOV X3, X31
	0x03523DE0 BL 0x3506A78
	0x03523DE4 MOV X0, X19
	0x03523DE8 MOV X1, X31
	0x03523DEC BL 0x34F39AC
	0x03523DF0 LDR W8, [X31 + 0x18]
	0x03523DF4 LDRB W9, [X19 + 0x70]
	0x03523DF8 SUB W1, W0, W8
	0x03523DFC STR W1, [X19 + 0x7C]
	0x03523E00 CBNZ W9, 0x3523E08
	0x03523E04 STR W1, [X19 + 0x74]
	0x03523E08 MOV X0, X19
	0x03523E0C MOV X2, X31
	0x03523E10 BL 0x34F7834
	0x03523E14 LDRB W8, [X19 + 0x70]
	0x03523E18 CBNZ W8, 0x3523E44
	0x03523E1C LDR W20, [X31 + 0x1C]
	0x03523E20 LDR W21, [X19 + 0x7C]
	0x03523E24 MOV X0, X19
	0x03523E28 MOV X1, X31
	0x03523E2C BL 0x34F39AC
	0x03523E30 ADD W8, W20, W21, 0x1, ASR
	0x03523E34 MOVZ W9, 0x1
	0x03523E38 SUB W8, W8, W0
	0x03523E3C STR W8, [X19 + 0x6C]
	0x03523E40 STRB W9, [X19 + 0x70]
	0x03523E44 LDP X20, X19, [X31 + 0x30]
	0x03523E48 LDP X22, X21, [X31 + 0x20]
	0x03523E4C LDR X30, [X31 + 0x10]
	0x03523E50 ADD X31, X31, 0x40
	0x03523E54 RET
	0x03523E58 STP X30, X21, [X31 - 0x20]!
	0x03523E5C STP X20, X19, [X31 + 0x10]
	0x03523E60 ADRP X21, 0xEBC000
	0x03523E64 LDRB W8, [X21 + 0xB4E]
	0x03523E68 MOV X20, X1
	0x03523E6C MOV X19, X0
	0x03523E70 TBNZ X8, 0x0, 0x3523E88
	0x03523E74 ADRP X0, 0xBD0000
	0x03523E78 LDR X0, [X0 + 0x758]
	0x03523E7C BL 0x1C16CF4
	0x03523E80 MOVZ W8, 0x1
	0x03523E84 STRB W8, [X21 + 0xB4E]
	0x03523E88 CBZ X20, 0x3523F6C
	0x03523E8C LDR X0, [X20 + 0x20]
	0x03523E90 CBZ X0, 0x3523F6C
	0x03523E94 MOVZ W1, 0x2
	0x03523E98 MOV X2, X31
	0x03523E9C BL 0x34FB9B8
	0x03523EA0 CBZ X0, 0x3523F6C
	0x03523EA4 ADRP X21, 0xBD0000
	0x03523EA8 LDR X21, [X21 + 0x758]
	0x03523EAC LDR X8, [X0]
	0x03523EB0 LDR X1, [X21]
	0x03523EB4 LDR X8, [X8 + 0x40]
	0x03523EB8 LDR X9, [X1 + 0x40]
	0x03523EBC CMP X8, X9
	0x03523EC0 B.NE 0x3523F70
	0x03523EC4 BL 0x1C16E08
	0x03523EC8 LDR X8, [X20 + 0x20]
	0x03523ECC CBZ X8, 0x3523F6C
	0x03523ED0 LDR W20, [X0]
	0x03523ED4 MOVZ W1, 0x1
	0x03523ED8 MOV X0, X8
	0x03523EDC MOV X2, X31
	0x03523EE0 BL 0x34FB9B8
	0x03523EE4 CBZ X0, 0x3523F6C
	0x03523EE8 LDR X8, [X0]
	0x03523EEC LDR X1, [X21]
	0x03523EF0 LDR X8, [X8 + 0x40]
	0x03523EF4 LDR X9, [X1 + 0x40]
	0x03523EF8 CMP X8, X9
	0x03523EFC B.NE 0x3523F70
	0x03523F00 BL 0x1C16E08
	0x03523F04 LDR W21, [X0]
	0x03523F08 MOV X0, X19
	0x03523F0C MOV X1, X31
	0x03523F10 BL 0x34F39AC
	0x03523F14 LDRB W8, [X19 + 0x70]
	0x03523F18 SUB W1, W0, W21
	0x03523F1C STR W1, [X19 + 0x7C]
	0x03523F20 CBNZ W8, 0x3523F28
	0x03523F24 STR W1, [X19 + 0x74]
	0x03523F28 MOV X0, X19
	0x03523F2C MOV X2, X31
	0x03523F30 BL 0x34F7834
	0x03523F34 LDRB W8, [X19 + 0x70]
	0x03523F38 CBNZ W8, 0x3523F60
	0x03523F3C LDR W21, [X19 + 0x7C]
	0x03523F40 MOV X0, X19
	0x03523F44 MOV X1, X31
	0x03523F48 BL 0x34F39AC
	0x03523F4C ADD W8, W20, W21, 0x1, ASR
	0x03523F50 MOVZ W9, 0x1
	0x03523F54 SUB W8, W8, W0
	0x03523F58 STR W8, [X19 + 0x6C]
	0x03523F5C STRB W9, [X19 + 0x70]
	0x03523F60 LDP X20, X19, [X31 + 0x10]
	0x03523F64 LDP X30, X21, [X31], #0x20
	0x03523F68 RET
	0x03523F6C BL 0x1C16F20
	0x03523F70 BL 0x1C171E0
	0x03523F74 STR X30, [X31 - 0x30]!
	0x03523F78 STP X22, X21, [X31 + 0x10]
	0x03523F7C STP X20, X19, [X31 + 0x20]
	0x03523F80 ADRP X22, 0xEBC000
	0x03523F84 ADRP X21, 0xBD0000
	0x03523F88 ADRP X19, 0xC11000
	0x03523F8C ADRP X20, 0xC10000
	0x03523F90 LDRB W8, [X22 + 0xB4F]
	0x03523F94 LDR X21, [X21 + 0x618]
	0x03523F98 LDR X19, [X19 + 0x760]
	0x03523F9C LDR X20, [X20 + 0xCB8]
	0x03523FA0 TBNZ X8, 0x0, 0x3523FD0
	0x03523FA4 ADRP X0, 0xBD0000
	0x03523FA8 LDR X0, [X0 + 0x618]
	0x03523FAC BL 0x1C16CF4
	0x03523FB0 ADRP X0, 0xC10000
	0x03523FB4 LDR X0, [X0 + 0xCB8]
	0x03523FB8 BL 0x1C16CF4
	0x03523FBC ADRP X0, 0xC11000
	0x03523FC0 LDR X0, [X0 + 0x760]
	0x03523FC4 BL 0x1C16CF4
	0x03523FC8 MOVZ W8, 0x1
	0x03523FCC STRB W8, [X22 + 0xB4F]
	0x03523FD0 LDR X0, [X21]
	0x03523FD4 MOVZ W1, 0x9
	0x03523FD8 BL 0x1C16D6C
	0x03523FDC LDR X1, [X19]
	0x03523FE0 MOV X2, X31
	0x03523FE4 MOV X19, X0
	0x03523FE8 BL 0x32C5BD8
	0x03523FEC LDR X8, [X20]
	0x03523FF0 MOVZ W1, 0x2
	0x03523FF4 LDR X8, [X8 + 0xB8]
	0x03523FF8 STR X19, [X8]
	0x03523FFC LDR X0, [X21]
	0x03524000 BL 0x1C16D6C
	0x03524004 CBZ X0, 0x3524048
	0x03524008 LDR W8, [X0 + 0x18]
	0x0352400C CBZ W8, 0x3524044
	0x03524010 MOVZ W9, 0xF3
	0x03524014 CMP W8, 0x1
	0x03524018 STRB W9, [X0 + 0x20]
	0x0352401C B.EQ 0x3524044
	0x03524020 MOVZ W8, 0x2
	0x03524024 STRB W8, [X0 + 0x21]
	0x03524028 LDR X8, [X20]
	0x0352402C LDP X20, X19, [X31 + 0x20]
	0x03524030 LDP X22, X21, [X31 + 0x10]
	0x03524034 LDR X8, [X8 + 0xB8]
	0x03524038 STR X0, [X8 + 0x8]
	0x0352403C LDR X30, [X31], #0x30
	0x03524040 RET
	0x03524044 BL 0x1C16F28
	0x03524048 BL 0x1C16F20
	0x0352404C LDR W0, [X0 + 0x20]
	0x03524050 RET
	0x03524054 STR W1, [X0 + 0x20]
	0x03524058 RET
	0x0352405C LDR W0, [X0 + 0x24]
	0x03524060 RET
	0x03524064 STR W1, [X0 + 0x24]
	0x03524068 RET
	0x0352406C LDR W0, [X0 + 0x28]
	0x03524070 RET
	0x03524074 STR W1, [X0 + 0x28]
	0x03524078 RET

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+32], X24
	004 Move [X31+40], X23
	005 Move [X31+48], X22
	006 Move [X31+56], X21
	007 Move [X31+64], X20
	008 Move [X31+72], X19
	009 Move X22, 0xEBD000
	010 Move W8, [X22+2889]
	011 Move W23, W3
	012 Move X21, X2
	013 Move W20, W1
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {27}
	019 Move X0, 0xC12000
	020 Move X0, [X0+1808]
	021 Call 0x1C17CF4
	022 Move X0, 0xBD9000
	023 Move X0, [X0+3840]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X22+2889], W8
	027 Move [X31+28], W31
	028 Move [X31+24], W31
	029 Compare X21, 0
	030 JumpIfEqual {65}
	031 Move W8, [X19+328]
	032 Compare W8, 0
	033 JumpIfEqual {73}
	034 Move X8, 0xBD9000
	035 Move X8, [X8+3840]
	036 Move X22, [X21+24]
	037 Move X0, [X8]
	038 Move W8, 1
	039 Move [X31+28], W8
	040 Move W24, [X21+20]
	041 Move W8, [X0+224]
	042 Compare W8, 0
	043 JumpIfNotEqual {45}
	044 Call 0x1C17DFC
	045 Add X2, X31, 28
	046 Move W0, W24
	047 Move X1, X22
	048 Move X3, X31
	049 Call Protocol.Serialize, X0, X1, X2
	050 Compare X22, 0
	051 JumpIfEqual {181}
	052 Move W8, [X22+24]
	053 NotImplemented "Instruction CMP not yet implemented."
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Move [X22+37], W23
	056 Move X10, -43565056
	057 Move W9, W20
	058 Add X10, X10, 3311
	059 NotImplemented "Instruction ADR not yet implemented."
	060 Move W12, [X10]
	061 Add X11, X11, X12
	062 CallNoReturn X11
	063 NotImplemented "Instruction CMP not yet implemented."
	064 Move W8, W31
	065 Move W8, W31
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Move W8, 2
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Move W8, 3
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Move W8, 1
	072 Move [X22+38], W8
	073 Move X22, [X19+296]
	074 Move [X31+24], W31
	075 Add X1, X31, 24
	076 Move X0, X22
	077 Move X2, X31
	078 Call Monitor.Enter, X0, X1
	079 Move X0, [X19+296]
	080 Compare X0, 0
	081 JumpIfEqual {184}
	082 Move X9, 0xC12000
	083 Move X9, [X9+1808]
	084 Move W10, [X0+28]
	085 Move X8, [X0+16]
	086 Move X9, [X9]
	087 Add W10, W10, 1
	088 Move [X0+28], W10
	089 Compare X8, 0
	090 JumpIfEqual {185}
	091 NotImplemented "Instruction LDRSW not yet implemented."
	092 Move W11, [X8+24]
	093 NotImplemented "Instruction CMP not yet implemented."
	094 Add W9, W10, 1
	095 Add X8, X8, X10
	096 Move [X0+24], W9
	097 Move [X8+32], X21
	098 Move X8, [X9+32]
	099 Move X8, [X8+192]
	100 Move X2, [X8+112]
	101 Move X1, X21
	102 Call List`1<Object>.AddWithResize, X0, X1
	103 Move W8, [X19+224]
	104 Move X23, X31
	105 Move W24, 14
	106 Add W8, W8, 1
	107 Move [X19+224], W8
	108 Move W8, [X31+24]
	109 Compare W8, 0
	110 JumpIfEqual {114}
	111 Move X0, X22
	112 Move X1, X31
	113 Call Monitor.Exit, X0
	114 Compare X23, 0
	115 JumpIfNotEqual {182}
	116 NotImplemented "Instruction CMP not yet implemented."
	117 Compare W24, 0
	118 JumpIfNotEqual {170}
	119 Move W21, [X21+20]
	120 Move X0, X19
	121 Move X1, X31
	122 Move [X19+68], W21
	123 Call PeerBase.get_TrafficStatsEnabled, X0
	124 Move TEMP, X0
	125 And TEMP, TEMP, 1
	126 Compare TEMP, 1
	127 JumpIfNotEqual {169}
	128 NotImplemented "Instruction CMP not yet implemented."
	129 Move X9, -43565056
	130 Move W8, W20
	131 Add X9, X9, 3315
	132 NotImplemented "Instruction ADR not yet implemented."
	133 Move W11, [X9]
	134 Add X10, X10, X11
	135 CallNoReturn X10
	136 Move X0, X19
	137 Move X1, X31
	138 Call PeerBase.get_TrafficStatsOutgoing, X0
	139 Compare X0, 0
	140 JumpIfEqual {181}
	141 Move W8, [X0+48]
	142 Move W9, [X0+24]
	143 Add W8, W8, W21
	144 Add W9, W9, 1
	145 Move [X0+48], W8
	146 Move [X0+24], W9
	147 Move X0, X19
	148 Move X1, X31
	149 Call PeerBase.get_TrafficStatsOutgoing, X0
	150 Compare X0, 0
	151 JumpIfEqual {181}
	152 Move W8, [X0+44]
	153 Move W9, [X0+20]
	154 Add W8, W8, W21
	155 Add W9, W9, 1
	156 Move [X0+44], W8
	157 Move [X0+20], W9
	158 Move X0, X19
	159 Move X1, X31
	160 Call PeerBase.get_TrafficStatsGameLevel, X0
	161 Compare X0, 0
	162 JumpIfEqual {181}
	163 Move W8, [X0+32]
	164 Move W9, [X0+36]
	165 Add W8, W8, W21
	166 Add W9, W9, 1
	167 Move [X0+32], W8
	168 Move [X0+36], W9
	169 Move W8, 1
	170 Move X20, [X31+64]
	171 Move X19, [X31+72]
	172 Move X22, [X31+48]
	173 Move X21, [X31+56]
	174 Move X24, [X31+32]
	175 Move X23, [X31+40]
	176 Move X30, [X31+16]
	177 And W0, W8, 1
	178 Add X31, X31, 80
	179 Return X0
	180 Call 0x1C17F28
	181 Call 0x1C17F20
	182 Move X0, X23
	183 Call 0x1C17F18
	184 Call 0x1C17F20
	185 Call 0x1C17F20
	186 Move [X31+12], W20
	187 Move X0, 0xC12000
	188 Move X0, [X0+1816]
	189 Call 0x1C17D08
	190 Add X1, X31, 12
	191 Call 0x1C17E04
	192 Move X19, X0
	193 Move X0, 0xBD9000
	194 Move X0, [X0+1888]
	195 Call 0x1C17D08
	196 Call 0x1C17F10
	197 Move X20, X0
	198 Move X0, 0xC12000
	199 Move X0, [X0+1824]
	200 Call 0x1C17D08
	201 Move X1, X0
	202 Move X0, X20
	203 Move X2, X19
	204 Move X3, X31
	205 Move X4, X31
	206 Call ArgumentOutOfRangeException..ctor, X0, X1, X2, X3
	207 Move X0, 0xC11000
	208 Move X0, [X0+1832]
	209 Call 0x1C17D08
	210 Move X1, X0
	211 Move X0, X20
	212 Call 0x1C17DEC
	213 Move X24, X0
	214 NotImplemented "Instruction CMP not yet implemented."
	215 Move X0, X24
	216 Call 0x3EB2AD0
	217 Move X23, [X0]
	218 Call 0x3EB2AE0
	219 Move W24, W31
	220 Move X23, X31
	221 Move X24, X0
	222 Move W8, [X31+24]
	223 Compare W8, 0
	224 JumpIfEqual {228}
	225 Move X0, X22
	226 Move X1, X31
	227 Call Monitor.Exit, X0
	228 Compare X23, 0
	229 JumpIfNotEqual {232}
	230 Move X0, X24
	231 Call 0x1D2D690
	232 Move X0, X23
	233 Call 0x1C17F18
	234 Call 0x1991590

Method: System.Void SendPing()

Disassembly:
	0x035239D8 STR W2, [X31 + 0xC]
	0x035239DC TBNZ X8, 0x0, 0x3523A3C
	0x035239E0 ADRP X0, 0xC10000
	0x035239E4 LDR X0, [X0 + 0x778]
	0x035239E8 BL 0x1C16CF4
	0x035239EC ADRP X0, 0xC10000
	0x035239F0 LDR X0, [X0 + 0xC68]
	0x035239F4 BL 0x1C16CF4
	0x035239F8 ADRP X0, 0xC10000
	0x035239FC LDR X0, [X0 + 0x998]
	0x03523A00 BL 0x1C16CF4
	0x03523A04 ADRP X0, 0xBD9000
	0x03523A08 LDR X0, [X0 + 0xBA8]
	0x03523A0C BL 0x1C16CF4
	0x03523A10 ADRP X0, 0xC11000
	0x03523A14 LDR X0, [X0 + 0x748]
	0x03523A18 BL 0x1C16CF4
	0x03523A1C ADRP X0, 0xC11000
	0x03523A20 LDR X0, [X0 + 0x750]
	0x03523A24 BL 0x1C16CF4
	0x03523A28 ADRP X0, 0xC11000
	0x03523A2C LDR X0, [X0 + 0x758]
	0x03523A30 BL 0x1C16CF4
	0x03523A34 MOVZ W8, 0x1
	0x03523A38 STRB W8, [X22 + 0xB4C]
	0x03523A3C MOV X0, X19
	0x03523A40 MOV X1, X31
	0x03523A44 STRB W31, [X31 + 0x8]
	0x03523A48 CBZ X20, 0x3523B60
	0x03523A4C BL 0x34F39AC
	0x03523A50 LDR X8, [X19 + 0x98]
	0x03523A54 ADD W9, W21, 0x7
	0x03523A58 STR W0, [X19 + 0x88]
	0x03523A5C MOV X0, X19
	0x03523A60 ADD X8, X8, W9, SXTW
	0x03523A64 MOV X1, X31
	0x03523A68 STR X8, [X19 + 0x98]
	0x03523A6C BL 0x34EFFC0
	0x03523A70 TBZ X0, 0x0, 0x3523AAC
	0x03523A74 MOV X0, X19
	0x03523A78 MOV X1, X31
	0x03523A7C BL 0x34F72F8
	0x03523A80 CBZ X0, 0x3523CF4
	0x03523A84 LDR W8, [X0 + 0x24]
	0x03523A88 MOV X1, X31
	0x03523A8C ADD W8, W8, 0x1
	0x03523A90 STR W8, [X0 + 0x24]
	0x03523A94 MOV X0, X19
	0x03523A98 BL 0x34F72F8
	0x03523A9C CBZ X0, 0x3523CF4
	0x03523AA0 LDR W8, [X0 + 0x28]
	0x03523AA4 ADD W8, W8, 0x1
	0x03523AA8 STR W8, [X0 + 0x28]
	0x03523AAC LDR W8, [X20 + 0x18]
	0x03523AB0 CBZ W8, 0x3523CF0
	0x03523AB4 MOV X22, X20
	0x03523AB8 LDRB W9, [X22 + 0x20]!
	0x03523ABC CMP W9, 0xF0
	0x03523AC0 B.EQ 0x3523B7C
	0x03523AC4 CMP W9, 0xF3
	0x03523AC8 B.NE 0x3523BB4
	0x03523ACC CMP W8, 0x1
	0x03523AD0 B.LS 0x3523CF0
	0x03523AD4 CMP W8, 0x2
	0x03523AD8 B.EQ 0x3523CF0
	0x03523ADC LDRB W8, [X20 + 0x21]
	0x03523AE0 AND W8, W8, 0x7F
	0x03523AE4 CMP W8, 0x7
	0x03523AE8 B.NE 0x3523C38
	0x03523AEC ADRP X23, 0xC10000
	0x03523AF0 LDR X23, [X23 + 0xC68]
	0x03523AF4 LDRB W22, [X20 + 0x22]
	0x03523AF8 LDR X0, [X23]
	0x03523AFC LDR W8, [X0 + 0xE0]
	0x03523B00 CBNZ W8, 0x3523B0C
	0x03523B04 BL 0x1C16DFC
	0x03523B08 LDR X0, [X23]
	0x03523B0C LDR X8, [X0 + 0xB8]
	0x03523B10 LDRB W8, [X8 + 0x4]
	0x03523B14 CMP W22, W8
	0x03523B18 B.NE 0x3523C38
	0x03523B1C ADRP X8, 0xBD9000
	0x03523B20 LDR X8, [X8 + 0xBA8]
	0x03523B24 LDR X0, [X8]
	0x03523B28 BL 0x1C16F10
	0x03523B2C MOV X1, X31
	0x03523B30 MOV X21, X0
	0x03523B34 BL 0x33BDD8C
	0x03523B38 STR X20, [X21 + 0x18]
	0x03523B3C LDR X8, [X20 + 0x18]
	0x03523B40 MOV X0, X19
	0x03523B44 MOV X1, X21
	0x03523B48 STR W8, [X21 + 0x14]
	0x03523B4C LDR X8, [X19]
	0x03523B50 LDR X9, [X8 + 0x278]
	0x03523B54 LDR X2, [X8 + 0x280]
	0x03523B58 BLR X9
	0x03523B5C B 0x3523CDC
	0x03523B60 BL 0x34F1150
	0x03523B64 ANDS W31, W0, 0xFF
	0x03523B68 B.EQ 0x3523CDC
	0x03523B6C ADRP X8, 0xC11000
	0x03523B70 LDR X8, [X8 + 0x750]
	0x03523B74 LDR X2, [X8]
	0x03523B78 B 0x3523C24
	0x03523B7C MOV X0, X19
	0x03523B80 MOV X1, X31
	0x03523B84 BL 0x34F72F8
	0x03523B88 CBZ X0, 0x3523CF4
	0x03523B8C LDR W8, [X0 + 0x38]
	0x03523B90 LDR W9, [X0 + 0x20]
	0x03523B94 MOV X1, X20
	0x03523B98 ADD W8, W8, W21
	0x03523B9C ADD W9, W9, 0x1
	0x03523BA0 STR W8, [X0 + 0x38]
	0x03523BA4 STR W9, [X0 + 0x20]
	0x03523BA8 MOV X0, X19
	0x03523BAC BL 0x3523D60
	0x03523BB0 B 0x3523CDC
	0x03523BB4 MOV X0, X19
	0x03523BB8 MOV X1, X31
	0x03523BBC BL 0x34F1150
	0x03523BC0 ANDS W31, W0, 0xFF
	0x03523BC4 B.EQ 0x3523CDC
	0x03523BC8 CMP W21, 0x1
	0x03523BCC B.LT 0x3523CDC
	0x03523BD0 LDR W8, [X20 + 0x18]
	0x03523BD4 CBZ W8, 0x3523CF0
	0x03523BD8 MOV X0, X22
	0x03523BDC MOV X1, X31
	0x03523BE0 BL 0x3319BB4
	0x03523BE4 MOV X20, X0
	0x03523BE8 ADD X0, X31, 0xC
	0x03523BEC MOV X1, X31
	0x03523BF0 BL 0x337B6E0
	0x03523BF4 ADRP X8, 0xC11000
	0x03523BF8 LDR X8, [X8 + 0x748]
	0x03523BFC ADRP X9, 0xC11000
	0x03523C00 LDR X9, [X9 + 0x758]
	0x03523C04 MOV X3, X0
	0x03523C08 LDR X8, [X8]
	0x03523C0C MOV X1, X20
	0x03523C10 LDR X2, [X9]
	0x03523C14 MOV X4, X31
	0x03523C18 MOV X0, X8
	0x03523C1C BL 0x32277C4
	0x03523C20 MOV X2, X0
	0x03523C24 MOVZ W1, 0x1
	0x03523C28 MOV X0, X19
	0x03523C2C MOV X3, X31
	0x03523C30 BL 0x34F116C
	0x03523C34 B 0x3523CDC
	0x03523C38 ADRP X8, 0xC10000
	0x03523C3C LDR X8, [X8 + 0x778]
	0x03523C40 LDR X0, [X8]
	0x03523C44 LDR W8, [X0 + 0xE0]
	0x03523C48 CBNZ W8, 0x3523C50
	0x03523C4C BL 0x1C16DFC
	0x03523C50 MOV X0, X31
	0x03523C54 BL 0x34F5754
	0x03523C58 CBZ X0, 0x3523CF4
	0x03523C5C MOV X1, X20
	0x03523C60 MOV W2, W31
	0x03523C64 MOV W3, W21
	0x03523C68 MOV X22, X0
	0x03523C6C BL 0x3517F60
	0x03523C70 LDR W8, [X22 + 0x14]
	0x03523C74 STR W31, [X22 + 0x10]
	0x03523C78 TBZ X8, 0x1F, 0x3523C8C
	0x03523C7C MOV X0, X22
	0x03523C80 MOV W1, W31
	0x03523C84 STR W31, [X22 + 0x14]
	0x03523C88 BL 0x351ECF8
	0x03523C8C LDR X20, [X19 + 0x120]
	0x03523C90 STRB W31, [X31 + 0x8]
	0x03523C94 ADD X1, X31, 0x8
	0x03523C98 MOV X0, X20
	0x03523C9C MOV X2, X31
	0x03523CA0 BL 0x33DE64C
	0x03523CA4 LDR X0, [X19 + 0x120]
	0x03523CA8 CBZ X0, 0x3523D00
	0x03523CAC ADRP X8, 0xC10000
	0x03523CB0 LDR X8, [X8 + 0x998]
	0x03523CB4 LDR X2, [X8]
	0x03523CB8 MOV X1, X22
	0x03523CBC BL 0x24F1750
	0x03523CC0 MOV X19, X31
	0x03523CC4 LDRB W8, [X31 + 0x8]
	0x03523CC8 CBZ W8, 0x3523CD8
	0x03523CCC MOV X0, X20
	0x03523CD0 MOV X1, X31
	0x03523CD4 BL 0x33E14E4
	0x03523CD8 CBNZ X19, 0x3523CF8

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0xEBD000
	009 Move W8, [X20+2890]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {29}
	015 Move X0, 0xBD1000
	016 Move X0, [X0+1880]
	017 Call 0x1C17CF4
	018 Move X0, 0xC11000
	019 Move X0, [X0+1912]
	020 Call 0x1C17CF4
	021 Move X0, 0xC11000
	022 Move X0, [X0+3176]
	023 Call 0x1C17CF4
	024 Move X0, 0xBD9000
	025 Move X0, [X0+3840]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X20+2890], W8
	029 Move X0, X19
	030 Move X1, X31
	031 Move [X31+12], W31
	032 Move [X31+8], W31
	033 Call PeerBase.get_timeInt, X0
	034 Move W21, [X19+304]
	035 Move W20, W0
	036 Move X0, X19
	037 Move X1, X31
	038 Call PeerBase.get_timePingInterval, X0
	039 Subtract W8, W20, W21
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Move W8, [X19+64]
	042 NotImplemented "Instruction CMP not yet implemented."
	043 NotImplemented "Instruction CMP not yet implemented."
	044 Move W8, [X19+329]
	045 Compare W8, 0
	046 JumpIfNotEqual {178}
	047 Move X0, X19
	048 Move X1, X31
	049 Call PeerBase.get_timeInt, X0
	050 Move W8, [X19+328]
	051 Move W21, W0
	052 Move [X19+304], W0
	053 Compare W8, 0
	054 JumpIfEqual {128}
	055 Move X8, 0xBD9000
	056 Move X8, [X8+3840]
	057 Move X0, [X8]
	058 Move W8, 1
	059 Move [X31+8], W8
	060 Move X20, [X19+312]
	061 Move W8, [X0+224]
	062 Compare W8, 0
	063 JumpIfNotEqual {65}
	064 Call 0x1C17DFC
	065 Add X2, X31, 8
	066 Move W0, W21
	067 Move X1, X20
	068 Move X3, X31
	069 Call Protocol.Serialize, X0, X1, X2
	070 Move X8, 0xC11000
	071 Move X8, [X8+1912]
	072 Move X0, [X8]
	073 Move W8, [X0+224]
	074 Compare W8, 0
	075 JumpIfNotEqual {77}
	076 Call 0x1C17DFC
	077 Move X0, X31
	078 Call PeerBase.MessageBufferPoolGet
	079 Move X1, [X19+312]
	080 Compare X1, 0
	081 JumpIfEqual {186}
	082 Move X21, X0
	083 Compare X0, 0
	084 JumpIfEqual {186}
	085 Move W3, [X1+24]
	086 Move X0, X21
	087 Move W2, W31
	088 Call StreamBuffer.Write, X0, X1, X2, X3
	089 Move X0, X19
	090 Move X1, X31
	091 Call PeerBase.get_TrafficStatsEnabled, X0
	092 Move TEMP, X0
	093 And TEMP, TEMP, 1
	094 Compare TEMP, 1
	095 JumpIfNotEqual {110}
	096 Move X0, X19
	097 Move X1, X31
	098 Call PeerBase.get_TrafficStatsOutgoing, X0
	099 Compare X21, 0
	100 JumpIfEqual {186}
	101 Compare X0, 0
	102 JumpIfEqual {186}
	103 Move W8, [X21+20]
	104 Move W9, [X0+56]
	105 Move W10, [X0+32]
	106 Add W8, W9, W8
	107 Add W9, W10, 1
	108 Move [X0+56], W8
	109 Move [X0+32], W9
	110 Compare X21, 0
	111 JumpIfEqual {186}
	112 Move X1, [X21+24]
	113 Move W2, [X21+20]
	114 Move X0, X19
	115 Call TPeer.SendData, X0, X1, X2
	116 Compare W0, 0
	117 JumpIfNotEqual {178}
	118 Move X8, 0xC11000
	119 Move X8, [X8+1912]
	120 Move X0, [X8]
	121 Move W8, [X0+224]
	122 Compare W8, 0
	123 JumpIfNotEqual {125}
	124 Call 0x1C17DFC
	125 Move X0, X21
	126 Move X1, X31
	127 Call PeerBase.MessageBufferPoolPut, X0
	128 Move X20, [X19+320]
	129 Move [X31+12], W31
	130 Add X1, X31, 12
	131 Move X0, X20
	132 Move X2, X31
	133 Call Monitor.Enter, X0, X1
	134 Move X8, 0xBD1000
	135 Move X22, [X19+320]
	136 Move X8, [X8+1880]
	137 Move [X31+4], W21
	138 Move X0, [X8]
	139 Add X1, X31, 4
	140 Call 0x1C17E04
	141 Compare X22, 0
	142 JumpIfEqual {189}
	143 Move X2, X0
	144 Move W1, 1
	145 Move X0, X22
	146 Move X3, X31
	147 Call ParameterDictionary.set_Item, X0, X1, X2
	148 Move X21, 0xC11000
	149 Move X21, [X21+3176]
	150 Move X0, [X21]
	151 Move W8, [X0+224]
	152 Compare W8, 0
	153 JumpIfNotEqual {156}
	154 Call 0x1C17DFC
	155 Move X0, [X21]
	156 Move X8, [X0+184]
	157 Move X2, [X19+320]
	158 Move W1, [X8+4]
	159 Move W3, 6
	160 Move X0, X19
	161 Move W4, W31
	162 Move X5, X31
	163 Call PeerBase.SerializeOperationToMessage, X0, X1, X2, X3, X4
	164 Move X21, X0
	165 Move X22, X31
	166 Move W23, 10
	167 Move W8, [X31+12]
	168 Compare W8, 0
	169 JumpIfEqual {173}
	170 Move X0, X20
	171 Move X1, X31
	172 Call Monitor.Exit, X0
	173 Compare X22, 0
	174 JumpIfNotEqual {187}
	175 Compare W23, 0
	176 JumpIfEqual {89}
	177 NotImplemented "Instruction CMP not yet implemented."
	178 Move X20, [X31+48]
	179 Move X19, [X31+56]
	180 Move X22, [X31+32]
	181 Move X21, [X31+40]
	182 Move X30, [X31+16]
	183 Move X23, [X31+24]
	184 Add X31, X31, 64
	185 Return 
	186 Call 0x1C17F20
	187 Move X0, X22
	188 Call 0x1C17F18
	189 Call 0x1C17F20
	190 Move X21, X0
	191 NotImplemented "Instruction CMP not yet implemented."
	192 Move X0, X21
	193 Call 0x3EB2AD0
	194 Move X22, [X0]
	195 Call 0x3EB2AE0
	196 Move W23, W31
	197 Move X21, X31
	198 Move X22, X31
	199 Move X21, X0
	200 Move W8, [X31+12]
	201 Compare W8, 0
	202 JumpIfEqual {206}
	203 Move X0, X20
	204 Move X1, X31
	205 Call Monitor.Exit, X0
	206 Compare X22, 0
	207 JumpIfNotEqual {210}
	208 Move X0, X21
	209 Call 0x1D2D690
	210 Move X0, X22
	211 Call 0x1C17F18
	212 Call 0x1991590

Method: ExitGames.Client.Photon.PhotonSocketError SendData(System.Byte[] data, System.Int32 length)

Disassembly:
	0x03524688 LDR X8, [X8 + 0x770]
	0x0352468C STR X19, [X20 + 0x58]
	0x03524690 MOV X1, X20
	0x03524694 MOV X2, X31
	0x03524698 LDR X0, [X8]
	0x0352469C BL 0x3227C5C
	0x035246A0 LDP X20, X19, [X31 + 0x40]
	0x035246A4 LDP X22, X21, [X31 + 0x30]
	0x035246A8 LDP X30, X23, [X31 + 0x20]
	0x035246AC ADD X31, X31, 0x50
	0x035246B0 RET
	0x035246B4 BL 0x1C16F28
	0x035246B8 BL 0x1C16F44
	0x035246BC MOV X1, X31
	0x035246C0 BL 0x1C16DEC
	0x035246C4 BL 0x1C16F20
	0x035246C8 LDR W0, [X0 + 0x10]
	0x035246CC RET
	0x035246D0 STR W1, [X0 + 0x10]
	0x035246D4 RET
	0x035246D8 LDR W0, [X0 + 0x14]
	0x035246DC RET
	0x035246E0 STR W1, [X0 + 0x14]
	0x035246E4 RET
	0x035246E8 LDR W0, [X0 + 0x18]
	0x035246EC RET
	0x035246F0 STR W1, [X0 + 0x18]
	0x035246F4 RET
	0x035246F8 LDR W0, [X0 + 0x1C]
	0x035246FC RET
	0x03524700 STR W1, [X0 + 0x1C]
	0x03524704 RET
	0x03524708 LDR W0, [X0 + 0x20]
	0x0352470C RET
	0x03524710 STR W1, [X0 + 0x20]
	0x03524714 RET
	0x03524718 LDR W0, [X0 + 0x24]
	0x0352471C RET
	0x03524720 STR W1, [X0 + 0x24]
	0x03524724 RET
	0x03524728 LDR W0, [X0 + 0x28]
	0x0352472C RET
	0x03524730 STR W1, [X0 + 0x28]
	0x03524734 RET
	0x03524738 LDR W0, [X0 + 0x2C]
	0x0352473C RET
	0x03524740 STR W1, [X0 + 0x2C]
	0x03524744 RET
	0x03524748 LDR W0, [X0 + 0x30]
	0x0352474C RET
	0x03524750 STR W1, [X0 + 0x30]
	0x03524754 RET
	0x03524758 LDR W0, [X0 + 0x34]
	0x0352475C RET
	0x03524760 STR W1, [X0 + 0x34]
	0x03524764 RET
	0x03524768 LDR W0, [X0 + 0x38]
	0x0352476C RET
	0x03524770 STR W1, [X0 + 0x38]
	0x03524774 RET
	0x03524778 STR X30, [X31 - 0x20]!
	0x0352477C STP X20, X19, [X31 + 0x10]
	0x03524780 MOV W19, W1
	0x03524784 MOV X1, X31
	0x03524788 MOV X20, X0
	0x0352478C BL 0x33BDD8C
	0x03524790 STR W19, [X20 + 0x10]
	0x03524794 LDP X20, X19, [X31 + 0x10]
	0x03524798 LDR X30, [X31], #0x20
	0x0352479C RET
	0x035247A0 LDUR V0, [X0 + 0x14]
	0x035247A4 UNIMPLEMENTED
	0x035247A8 FMOV W0, S0
	0x035247AC RET
	0x035247B0 LDUR V0, [X0 + 0x2C]
	0x035247B4 UNIMPLEMENTED
	0x035247B8 FMOV W0, S0
	0x035247BC RET
	0x035247C0 LDUR V0, [X0 + 0x2C]
	0x035247C4 LDR W8, [X0 + 0x24]
	0x035247C8 LDR W9, [X0 + 0x10]
	0x035247CC UNIMPLEMENTED
	0x035247D0 FMOV W10, S0
	0x035247D4 MADD W0, W9, W8, W10
	0x035247D8 RET
	0x035247DC LDR W0, [X0 + 0x3C]
	0x035247E0 RET
	0x035247E4 STR W1, [X0 + 0x3C]
	0x035247E8 RET
	0x035247EC LDR W0, [X0 + 0x40]
	0x035247F0 RET
	0x035247F4 STR W1, [X0 + 0x40]
	0x035247F8 RET
	0x035247FC LDR W8, [X0 + 0x34]
	0x03524800 LDR W9, [X0 + 0x1C]
	0x03524804 ADD W8, W8, W1
	0x03524808 ADD W9, W9, 0x1
	0x0352480C STR W8, [X0 + 0x34]
	0x03524810 STR W9, [X0 + 0x1C]
	0x03524814 RET
	0x03524818 SUB X31, X31, 0x40
	0x0352481C STR X30, [X31 + 0x10]
	0x03524820 STP X22, X21, [X31 + 0x20]
	0x03524824 STP X20, X19, [X31 + 0x30]
	0x03524828 ADRP X19, 0xEBB000
	0x0352482C ADRP X21, 0xBCF000
	0x03524830 ADRP X22, 0xBCF000
	0x03524834 LDRB W8, [X19 + 0xB52]
	0x03524838 LDR X21, [X21 + 0x9D0]
	0x0352483C LDR X22, [X22 + 0x758]
	0x03524840 MOV X20, X0
	0x03524844 TBNZ X8, 0x0, 0x3524874
	0x03524848 ADRP X0, 0xBCF000
	0x0352484C LDR X0, [X0 + 0x758]
	0x03524850 BL 0x1C16CF4
	0x03524854 ADRP X0, 0xBCF000
	0x03524858 LDR X0, [X0 + 0x9D0]
	0x0352485C BL 0x1C16CF4
	0x03524860 ADRP X0, 0xC10000
	0x03524864 LDR X0, [X0 + 0x778]
	0x03524868 BL 0x1C16CF4
	0x0352486C MOVZ W8, 0x1
	0x03524870 STRB W8, [X19 + 0xB52]
	0x03524874 LDR X0, [X21]
	0x03524878 MOVZ W1, 0x4
	0x0352487C BL 0x1C16D6C
	0x03524880 LDP W8, W9, [X20 + 0x2C]
	0x03524884 LDP W10, W11, [X20 + 0x34]
	0x03524888 LDR W12, [X20 + 0x24]
	0x0352488C LDR W13, [X20 + 0x10]
	0x03524890 MOV X19, X0
	0x03524894 ADD W8, W9, W8
	0x03524898 LDR X0, [X22]
	0x0352489C ADD W8, W8, W10
	0x035248A0 ADD W8, W8, W11
	0x035248A4 MADD W8, W13, W12, W8
	0x035248A8 ADD X1, X31, 0x1C
	0x035248AC STR W8, [X31 + 0x1C]
	0x035248B0 BL 0x1C16E04
	0x035248B4 CBZ X19, 0x35249EC
	0x035248B8 MOV X21, X0
	0x035248BC CBZ X0, 0x35248D4
	0x035248C0 LDR X8, [X19]
	0x035248C4 MOV X0, X21
	0x035248C8 LDR X1, [X8 + 0x40]
	0x035248CC BL 0x1C16E00
	0x035248D0 CBZ X0, 0x35249E0
	0x035248D4 LDR W8, [X19 + 0x18]
	0x035248D8 CBZ W8, 0x35249DC
	0x035248DC STR X21, [X19 + 0x20]
	0x035248E0 LDP W8, W9, [X20 + 0x2C]
	0x035248E4 LDP W10, W11, [X20 + 0x34]
	0x035248E8 LDR X0, [X22]
	0x035248EC ADD X1, X31, 0x18
	0x035248F0 ADD W8, W9, W8
	0x035248F4 ADD W8, W8, W10
	0x035248F8 ADD W8, W8, W11
	0x035248FC STR W8, [X31 + 0x18]
	0x03524900 BL 0x1C16E04
	0x03524904 MOV X21, X0
	0x03524908 CBZ X0, 0x3524920
	0x0352490C LDR X8, [X19]
	0x03524910 MOV X0, X21
	0x03524914 LDR X1, [X8 + 0x40]
	0x03524918 BL 0x1C16E00
	0x0352491C CBZ X0, 0x35249E0
	0x03524920 LDR W8, [X19 + 0x18]
	0x03524924 CMP W8, 0x1
	0x03524928 B.LS 0x35249DC
	0x0352492C STR X21, [X19 + 0x28]
	0x03524930 LDR W8, [X20 + 0x24]
	0x03524934 LDR X0, [X22]
	0x03524938 ADD X1, X31, 0xC
	0x0352493C STR W8, [X31 + 0xC]
	0x03524940 BL 0x1C16E04
	0x03524944 MOV X21, X0
	0x03524948 CBZ X0, 0x3524960
	0x0352494C LDR X8, [X19]
	0x03524950 MOV X0, X21
	0x03524954 LDR X1, [X8 + 0x40]
	0x03524958 BL 0x1C16E00
	0x0352495C CBZ X0, 0x35249E0
	0x03524960 LDR W8, [X19 + 0x18]
	0x03524964 CMP W8, 0x2
	0x03524968 B.LS 0x35249DC
	0x0352496C STR X21, [X19 + 0x30]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xEBC000
	007 Move W8, [X22+2891]
	008 Move W20, W2
	009 Move X21, X1
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0xBD0000
	016 Move X0, [X0+1560]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X22+2891], W8
	020 Move X8, [X19+144]
	021 Add X8, X8, W20
	022 Move [X19+144], X8
	023 Move X0, X19
	024 Move X1, X31
	025 Call PeerBase.get_TrafficStatsEnabled, X0
	026 Move TEMP, X0
	027 And TEMP, TEMP, 1
	028 Compare TEMP, 1
	029 JumpIfNotEqual {46}
	030 Move X0, X19
	031 Move X1, X31
	032 Call PeerBase.get_TrafficStatsOutgoing, X0
	033 Compare X0, 0
	034 JumpIfEqual {104}
	035 Move W8, [X0+36]
	036 Add W8, W8, 1
	037 Move [X0+36], W8
	038 Move X0, X19
	039 Move X1, X31
	040 Call PeerBase.get_TrafficStatsOutgoing, X0
	041 Compare X0, 0
	042 JumpIfEqual {105}
	043 Move W8, [X0+40]
	044 Add W8, W8, 1
	045 Move [X0+40], W8
	046 Move X0, X19
	047 Move X1, X31
	048 Call PeerBase.get_NetworkSimulationSettings, X0
	049 Compare X0, 0
	050 JumpIfEqual {103}
	051 Move X1, X31
	052 Call NetworkSimulationSet.get_IsSimulationEnabled, X0
	053 Move TEMP, X0
	054 And TEMP, TEMP, 1
	055 Compare TEMP, 1
	056 JumpIfNotEqual {75}
	057 Move X8, 0xBD0000
	058 Move X8, [X8+1560]
	059 Move X0, [X8]
	060 Move W1, W20
	061 Call 0x1C17D6C
	062 Move X22, X0
	063 Move X0, X21
	064 Move W1, W31
	065 Move X2, X22
	066 Move W3, W31
	067 Move W4, W20
	068 Move X5, X31
	069 Call Buffer.BlockCopy, X0, X1, X2, X3, X4
	070 Move X0, X19
	071 Move X1, X22
	072 Move X2, X31
	073 Call PeerBase.SendNetworkSimulated, X0, X1
	074 Move W20, W31
	075 Move X0, X19
	076 Move X1, X31
	077 Call PeerBase.get_timeInt, X0
	078 Move W22, W0
	079 Move X0, [X19+40]
	080 Compare X0, 0
	081 JumpIfEqual {106}
	082 Move X8, [X0]
	083 Move X9, [X8+408]
	084 Move X3, [X8+416]
	085 Move X1, X21
	086 Move W2, W20
	087 NotImplemented "Instruction BLR not yet implemented."
	088 Move W20, W0
	089 Move X0, X19
	090 Move X1, X31
	091 Call PeerBase.get_timeInt, X0
	092 Move W9, [X19+208]
	093 Subtract W8, W0, W22
	094 NotImplemented "Instruction CMP not yet implemented."
	095 Move [X19+208], W8
	096 Move W0, W20
	097 Move X20, [X31+32]
	098 Move X19, [X31+40]
	099 Move X22, [X31+16]
	100 Move X21, [X31+24]
	101 Move X30, [X31+48]
	102 Return X0
	103 Call 0x1C17F20
	104 Call 0x1C17F20
	105 Call 0x1C17F20
	106 Call 0x1C17F20
	107 Move X21, X0
	108 Move X21, X0
	109 Move W20, W31
	110 NotImplemented "Instruction CMP not yet implemented."
	111 Move X0, X21
	112 Call 0x3EB2AD0
	113 Move X21, X0
	114 Move X0, 0xBD0000
	115 Move X0, [X0+2000]
	116 Call 0x1C17D08
	117 Move X8, [X21]
	118 Move X1, [X8]
	119 Call 0x1C18270
	120 Move TEMP, X0
	121 And TEMP, TEMP, 1
	122 Compare TEMP, 1
	123 JumpIfNotEqual {180}
	124 Move X21, [X21]
	125 Call 0x3EB2AE0
	126 Move X0, X19
	127 Move X1, X31
	128 Call PeerBase.get_debugOut, X0
	129 And W31, W0, 255
	130 Move X0, X19
	131 Move X1, X31
	132 Call PeerBase.get_Listener, X0
	133 Compare X21, 0
	134 JumpIfEqual {179}
	135 Move X8, [X21]
	136 Move X19, X0
	137 Move X0, X21
	138 Move X9, [X8+360]
	139 Move X1, [X8+368]
	140 NotImplemented "Instruction BLR not yet implemented."
	141 Compare X19, 0
	142 JumpIfEqual {179}
	143 Move X22, X0
	144 Move X0, 0xBD8000
	145 Move X0, [X0+3016]
	146 Call 0x1C17D08
	147 Move X8, [X19]
	148 Move X1, X0
	149 NotImplemented "Instruction LDRH not yet implemented."
	150 Compare X9, 0
	151 JumpIfEqual {158}
	152 Move X10, [X8+176]
	153 Add X10, X10, 8
	154 NotImplemented "Instruction LDUR not yet implemented."
	155 NotImplemented "Instruction CMP not yet implemented."
	156 Subtract X9, X9, 1
	157 Add X10, X10, 16
	158 Move X0, X19
	159 Move W2, W31
	160 Call 0x1C5D788
	161 NotImplemented "Instruction LDRSW not yet implemented."
	162 Add X8, X8, X9
	163 Add X0, X8, 312
	164 Move X8, [X0]
	165 Move X3, [X0+8]
	166 Move W1, 1
	167 Move X0, X19
	168 Move X2, X22
	169 NotImplemented "Instruction BLR not yet implemented."
	170 Move X0, 0xBD8000
	171 Move X0, [X0+3680]
	172 Call 0x1C17D08
	173 Move W8, [X0+224]
	174 Compare W8, 0
	175 JumpIfNotEqual {177}
	176 Call 0x1C17DFC
	177 Move X0, X21
	178 Call SupportClass.WriteStackTrace, X0
	179 Call 0x1C17F20
	180 Move W0, 8
	181 Call 0x3EB2AF0
	182 Move X8, [X21]
	183 Move [X0], X8
	184 Move X1, 0x991000
	185 Add X1, X1, 3672
	186 Move X2, X31
	187 Call 0x3EB2B00
	188 Move X21, X0
	189 Call 0x3EB2AE0
	190 Move X0, X21
	191 Call 0x1D2D690
	192 Call 0x1991590

Method: System.Void ReceiveIncomingCommands(System.Byte[] inbuff, System.Int32 dataLength)

Disassembly:
	0x035249B4 STR X20, [X19 + 0x38]
	0x035249B8 MOV X1, X19
	0x035249BC MOV X2, X31
	0x035249C0 LDR X0, [X8]
	0x035249C4 BL 0x3227C5C
	0x035249C8 LDP X20, X19, [X31 + 0x30]
	0x035249CC LDP X22, X21, [X31 + 0x20]
	0x035249D0 LDR X30, [X31 + 0x10]
	0x035249D4 ADD X31, X31, 0x40
	0x035249D8 RET
	0x035249DC BL 0x1C16F28
	0x035249E0 BL 0x1C16F44
	0x035249E4 MOV X1, X31
	0x035249E8 BL 0x1C16DEC
	0x035249EC BL 0x1C16F20
	0x035249F0 STR X30, [X31 - 0x30]!
	0x035249F4 STP X22, X21, [X31 + 0x10]
	0x035249F8 STP X20, X19, [X31 + 0x20]
	0x035249FC ADRP X21, 0xEBB000
	0x03524A00 ADRP X22, 0xBCF000
	0x03524A04 ADRP X19, 0xC10000
	0x03524A08 ADRP X20, 0xC0F000
	0x03524A0C LDRB W8, [X21 + 0xB53]
	0x03524A10 LDR X22, [X22 + 0x618]
	0x03524A14 LDR X19, [X19 + 0x780]
	0x03524A18 LDR X20, [X20 + 0xA98]
	0x03524A1C TBNZ X8, 0x0, 0x3524A4C
	0x03524A20 ADRP X0, 0xBCF000
	0x03524A24 LDR X0, [X0 + 0x618]
	0x03524A28 BL 0x1C16CF4
	0x03524A2C ADRP X0, 0xC10000
	0x03524A30 LDR X0, [X0 + 0x780]
	0x03524A34 BL 0x1C16CF4
	0x03524A38 ADRP X0, 0xC0F000
	0x03524A3C LDR X0, [X0 + 0xA98]
	0x03524A40 BL 0x1C16CF4
	0x03524A44 MOVZ W8, 0x1
	0x03524A48 STRB W8, [X21 + 0xB53]
	0x03524A4C LDR X0, [X22]
	0x03524A50 MOVZ W1, 0x5
	0x03524A54 BL 0x1C16D6C
	0x03524A58 LDR X1, [X19]
	0x03524A5C MOV X2, X31
	0x03524A60 MOV X19, X0
	0x03524A64 BL 0x32C5BD8
	0x03524A68 LDR X8, [X20]
	0x03524A6C LDP X22, X21, [X31 + 0x10]
	0x03524A70 LDR X8, [X8 + 0xB8]
	0x03524A74 STR X19, [X8]
	0x03524A78 LDP X20, X19, [X31 + 0x20]
	0x03524A7C LDR X30, [X31], #0x30
	0x03524A80 RET
	0x03524A84 STP X30, X21, [X31 - 0x20]!
	0x03524A88 STP X20, X19, [X31 + 0x10]
	0x03524A8C MOV X20, X1
	0x03524A90 MOV X1, X31
	0x03524A94 MOV W19, W2
	0x03524A98 MOV X21, X0
	0x03524A9C BL 0x33BDD8C
	0x03524AA0 STR X20, [X21 + 0x18]
	0x03524AA4 STR W19, [X21 + 0x10]
	0x03524AA8 LDP X20, X19, [X31 + 0x10]
	0x03524AAC LDP X30, X21, [X31], #0x20
	0x03524AB0 RET
	0x03524AB4 AND W0, W0, 0x1
	0x03524AB8 MOV X1, X31
	0x03524ABC B 0x352A3F8
	0x03524AC0 MOV X1, X31
	0x03524AC4 B 0x352A37C
	0x03524AC8 STR D8, [X31 - 0x20]!
	0x03524ACC STR X30, [X31 + 0x8]
	0x03524AD0 STP X20, X19, [X31 + 0x10]
	0x03524AD4 ADRP X19, 0xEBB000
	0x03524AD8 ADRP X20, 0xC10000
	0x03524ADC LDRB W8, [X19 + 0xB54]
	0x03524AE0 LDR X20, [X20 + 0x788]
	0x03524AE4 MOV V8.16B, V0.16B
	0x03524AE8 TBNZ X8, 0x0, 0x3524B00
	0x03524AEC ADRP X0, 0xC10000
	0x03524AF0 LDR X0, [X0 + 0x788]
	0x03524AF4 BL 0x1C16CF4
	0x03524AF8 MOVZ W8, 0x1
	0x03524AFC STRB W8, [X19 + 0xB54]
	0x03524B00 LDR X0, [X20]
	0x03524B04 LDP X20, X19, [X31 + 0x10]
	0x03524B08 LDR X30, [X31 + 0x8]
	0x03524B0C MOV V0.16B, V8.16B
	0x03524B10 LDR V8, [X31], #0x20
	0x03524B14 B 0x229101C
	0x03524B18 STR D8, [X31 - 0x20]!
	0x03524B1C STR X30, [X31 + 0x8]
	0x03524B20 STP X20, X19, [X31 + 0x10]
	0x03524B24 ADRP X19, 0xEBB000
	0x03524B28 ADRP X20, 0xC10000
	0x03524B2C LDRB W8, [X19 + 0xB55]
	0x03524B30 LDR X20, [X20 + 0x790]
	0x03524B34 MOV V8.16B, V0.16B
	0x03524B38 TBNZ X8, 0x0, 0x3524B50
	0x03524B3C ADRP X0, 0xC10000
	0x03524B40 LDR X0, [X0 + 0x790]
	0x03524B44 BL 0x1C16CF4
	0x03524B48 MOVZ W8, 0x1
	0x03524B4C STRB W8, [X19 + 0xB55]
	0x03524B50 LDR X0, [X20]
	0x03524B54 LDP X20, X19, [X31 + 0x10]
	0x03524B58 LDR X30, [X31 + 0x8]
	0x03524B5C MOV V0.16B, V8.16B
	0x03524B60 LDR V8, [X31], #0x20
	0x03524B64 B 0x2290D90
	0x03524B68 STP X30, X21, [X31 - 0x20]!
	0x03524B6C STP X20, X19, [X31 + 0x10]
	0x03524B70 ADRP X20, 0xEBB000
	0x03524B74 ADRP X21, 0xC10000
	0x03524B78 LDRB W8, [X20 + 0xB56]
	0x03524B7C LDR X21, [X21 + 0x798]
	0x03524B80 MOV W19, W0
	0x03524B84 TBNZ X8, 0x0, 0x3524B9C
	0x03524B88 ADRP X0, 0xC10000
	0x03524B8C LDR X0, [X0 + 0x798]
	0x03524B90 BL 0x1C16CF4
	0x03524B94 MOVZ W8, 0x1
	0x03524B98 STRB W8, [X20 + 0xB56]
	0x03524B9C LDR X1, [X21]
	0x03524BA0 MOV W0, W19
	0x03524BA4 LDP X20, X19, [X31 + 0x10]
	0x03524BA8 LDP X30, X21, [X31], #0x20
	0x03524BAC B 0x2290E0C
	0x03524BB0 STP X30, X21, [X31 - 0x20]!
	0x03524BB4 STP X20, X19, [X31 + 0x10]
	0x03524BB8 ADRP X20, 0xEBB000
	0x03524BBC ADRP X21, 0xC10000
	0x03524BC0 LDRB W8, [X20 + 0xB57]
	0x03524BC4 LDR X21, [X21 + 0x7A0]
	0x03524BC8 MOV W19, W0
	0x03524BCC TBNZ X8, 0x0, 0x3524BE4
	0x03524BD0 ADRP X0, 0xC10000
	0x03524BD4 LDR X0, [X0 + 0x7A0]
	0x03524BD8 BL 0x1C16CF4
	0x03524BDC MOVZ W8, 0x1
	0x03524BE0 STRB W8, [X20 + 0xB57]
	0x03524BE4 LDR X1, [X21]
	0x03524BE8 MOV W0, W19
	0x03524BEC LDP X20, X19, [X31 + 0x10]
	0x03524BF0 LDP X30, X21, [X31], #0x20
	0x03524BF4 B 0x2290E88
	0x03524BF8 STP X30, X21, [X31 - 0x20]!
	0x03524BFC STP X20, X19, [X31 + 0x10]
	0x03524C00 ADRP X20, 0xEBB000
	0x03524C04 ADRP X21, 0xC10000
	0x03524C08 LDRB W8, [X20 + 0xB58]
	0x03524C0C LDR X21, [X21 + 0x7A8]
	0x03524C10 MOV X19, X0
	0x03524C14 TBNZ X8, 0x0, 0x3524C2C
	0x03524C18 ADRP X0, 0xC10000
	0x03524C1C LDR X0, [X0 + 0x7A8]
	0x03524C20 BL 0x1C16CF4
	0x03524C24 MOVZ W8, 0x1
	0x03524C28 STRB W8, [X20 + 0xB58]
	0x03524C2C LDR X1, [X21]
	0x03524C30 MOV X0, X19
	0x03524C34 LDP X20, X19, [X31 + 0x10]
	0x03524C38 LDP X30, X21, [X31], #0x20
	0x03524C3C B 0x2290F04
	0x03524C40 STR X30, [X31 - 0x20]!
	0x03524C44 STP X20, X19, [X31 + 0x10]
	0x03524C48 ADRP X20, 0xEBB000
	0x03524C4C LDRB W8, [X20 + 0xB59]
	0x03524C50 MOV X19, X0
	0x03524C54 TBNZ X8, 0x0, 0x3524C78
	0x03524C58 ADRP X0, 0xC10000
	0x03524C5C LDR X0, [X0 + 0x7B0]
	0x03524C60 BL 0x1C16CF4
	0x03524C64 ADRP X0, 0xC10000
	0x03524C68 LDR X0, [X0 + 0x7B8]
	0x03524C6C BL 0x1C16CF4
	0x03524C70 MOVZ W8, 0x1
	0x03524C74 STRB W8, [X20 + 0xB59]
	0x03524C78 CBZ X19, 0x3524CCC
	0x03524C7C ADRP X8, 0xC10000
	0x03524C80 LDR X8, [X8 + 0x7B8]
	0x03524C84 LDR X9, [X19]
	0x03524C88 LDR X8, [X8]
	0x03524C8C LDRB W11, [X9 + 0x130]
	0x03524C90 LDRB W10, [X8 + 0x130]
	0x03524C94 CMP W11, W10
	0x03524C98 B.CC 0x3524CCC
	0x03524C9C LDR X9, [X9 + 0xC8]
	0x03524CA0 ADD X9, X9, X10, 0x3, LSL
	0x03524CA4 LDUR X9, [X9 - 0x8]
	0x03524CA8 CMP X9, X8
	0x03524CAC B.NE 0x3524CCC
	0x03524CB0 ADRP X8, 0xC10000
	0x03524CB4 LDR X8, [X8 + 0x7B0]
	0x03524CB8 MOV X0, X19
	0x03524CBC LDP X20, X19, [X31 + 0x10]
	0x03524CC0 LDR X1, [X8]
	0x03524CC4 LDR X30, [X31], #0x20
	0x03524CC8 B 0x2667A0C
	0x03524CCC BL 0x1C16F20
	0x03524CD0 STR X30, [X31 - 0x20]!
	0x03524CD4 STP X20, X19, [X31 + 0x10]
	0x03524CD8 ADRP X20, 0xEBB000
	0x03524CDC LDRB W8, [X20 + 0xB5A]
	0x03524CE0 MOV X19, X0
	0x03524CE4 TBNZ X8, 0x0, 0x3524D08
	0x03524CE8 ADRP X0, 0xC10000
	0x03524CEC LDR X0, [X0 + 0x7C0]
	0x03524CF0 BL 0x1C16CF4
	0x03524CF4 ADRP X0, 0xC10000
	0x03524CF8 LDR X0, [X0 + 0x308]
	0x03524CFC BL 0x1C16CF4
	0x03524D00 MOVZ W8, 0x1
	0x03524D04 STRB W8, [X20 + 0xB5A]
	0x03524D08 CBZ X19, 0x3524D5C
	0x03524D0C ADRP X8, 0xC10000
	0x03524D10 LDR X8, [X8 + 0x308]
	0x03524D14 LDR X9, [X19]
	0x03524D18 LDR X8, [X8]
	0x03524D1C LDRB W11, [X9 + 0x130]
	0x03524D20 LDRB W10, [X8 + 0x130]
	0x03524D24 CMP W11, W10
	0x03524D28 B.CC 0x3524D5C
	0x03524D2C LDR X9, [X9 + 0xC8]
	0x03524D30 ADD X9, X9, X10, 0x3, LSL
	0x03524D34 LDUR X9, [X9 - 0x8]
	0x03524D38 CMP X9, X8
	0x03524D3C B.NE 0x3524D5C
	0x03524D40 ADRP X8, 0xC10000
	0x03524D44 LDR X8, [X8 + 0x7C0]
	0x03524D48 MOV X0, X19
	0x03524D4C LDP X20, X19, [X31 + 0x10]
	0x03524D50 LDR X1, [X8]
	0x03524D54 LDR X30, [X31], #0x20
	0x03524D58 B 0x2667FF4
	0x03524D5C BL 0x1C16F20

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X22, 0xEBC000
	009 Move W8, [X22+2892]
	010 Move W21, W2
	011 Move X20, X1
	012 Move X19, X0
	013 Move [X31+12], W2
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {41}
	018 Move X0, 0xC10000
	019 Move X0, [X0+1912]
	020 Call 0x1C17CF4
	021 Move X0, 0xC10000
	022 Move X0, [X0+3176]
	023 Call 0x1C17CF4
	024 Move X0, 0xC10000
	025 Move X0, [X0+2456]
	026 Call 0x1C17CF4
	027 Move X0, 0xBD9000
	028 Move X0, [X0+2984]
	029 Call 0x1C17CF4
	030 Move X0, 0xC11000
	031 Move X0, [X0+1864]
	032 Call 0x1C17CF4
	033 Move X0, 0xC11000
	034 Move X0, [X0+1872]
	035 Call 0x1C17CF4
	036 Move X0, 0xC11000
	037 Move X0, [X0+1880]
	038 Call 0x1C17CF4
	039 Move W8, 1
	040 Move [X22+2892], W8
	041 Move X0, X19
	042 Move X1, X31
	043 Move [X31+8], W31
	044 Compare X20, 0
	045 JumpIfEqual {116}
	046 Call PeerBase.get_timeInt, X0
	047 Move X8, [X19+152]
	048 Add W9, W21, 7
	049 Move [X19+136], W0
	050 Move X0, X19
	051 Add X8, X8, W9
	052 Move X1, X31
	053 Move [X19+152], X8
	054 Call PeerBase.get_TrafficStatsEnabled, X0
	055 Move TEMP, X0
	056 And TEMP, TEMP, 1
	057 Compare TEMP, 1
	058 JumpIfNotEqual {75}
	059 Move X0, X19
	060 Move X1, X31
	061 Call PeerBase.get_TrafficStatsIncoming, X0
	062 Compare X0, 0
	063 JumpIfEqual {224}
	064 Move W8, [X0+36]
	065 Move X1, X31
	066 Add W8, W8, 1
	067 Move [X0+36], W8
	068 Move X0, X19
	069 Call PeerBase.get_TrafficStatsIncoming, X0
	070 Compare X0, 0
	071 JumpIfEqual {224}
	072 Move W8, [X0+40]
	073 Add W8, W8, 1
	074 Move [X0+40], W8
	075 Move W8, [X20+24]
	076 Compare W8, 0
	077 JumpIfEqual {223}
	078 Move X22, X20
	079 Add X22, X22, 32
	080 Move W9, [X22]
	081 NotImplemented "Instruction CMP not yet implemented."
	082 NotImplemented "Instruction CMP not yet implemented."
	083 NotImplemented "Instruction CMP not yet implemented."
	084 NotImplemented "Instruction CMP not yet implemented."
	085 Move W8, [X20+33]
	086 And W8, W8, 127
	087 NotImplemented "Instruction CMP not yet implemented."
	088 Move X23, 0xC10000
	089 Move X23, [X23+3176]
	090 Move W22, [X20+34]
	091 Move X0, [X23]
	092 Move W8, [X0+224]
	093 Compare W8, 0
	094 JumpIfNotEqual {97}
	095 Call 0x1C17DFC
	096 Move X0, [X23]
	097 Move X8, [X0+184]
	098 Move W8, [X8+4]
	099 NotImplemented "Instruction CMP not yet implemented."
	100 Move X8, 0xBD9000
	101 Move X8, [X8+2984]
	102 Move X0, [X8]
	103 Call 0x1C17F10
	104 Move X1, X31
	105 Move X21, X0
	106 Call Object..ctor, X0
	107 Move [X21+24], X20
	108 Move X8, [X20+24]
	109 Move X0, X19
	110 Move X1, X21
	111 Move [X21+20], W8
	112 Move X8, [X19]
	113 Move X9, [X8+632]
	114 Move X2, [X8+640]
	115 NotImplemented "Instruction BLR not yet implemented."
	116 Call PeerBase.get_debugOut, X0
	117 And W31, W0, 255
	118 Move X8, 0xC11000
	119 Move X8, [X8+1872]
	120 Move X2, [X8]
	121 Move X0, X19
	122 Move X1, X31
	123 Call PeerBase.get_TrafficStatsIncoming, X0
	124 Compare X0, 0
	125 JumpIfEqual {224}
	126 Move W8, [X0+56]
	127 Move W9, [X0+32]
	128 Move X1, X20
	129 Add W8, W8, W21
	130 Add W9, W9, 1
	131 Move [X0+56], W8
	132 Move [X0+32], W9
	133 Move X0, X19
	134 Call TPeer.ReadPingResult, X0, X1
	135 Move X0, X19
	136 Move X1, X31
	137 Call PeerBase.get_debugOut, X0
	138 And W31, W0, 255
	139 NotImplemented "Instruction CMP not yet implemented."
	140 Move W8, [X20+24]
	141 Compare W8, 0
	142 JumpIfEqual {223}
	143 Move X0, X22
	144 Move X1, X31
	145 Call Byte.ToString, X0
	146 Move X20, X0
	147 Add X0, X31, 12
	148 Move X1, X31
	149 Call Int32.ToString, X0
	150 Move X8, 0xC11000
	151 Move X8, [X8+1864]
	152 Move X9, 0xC11000
	153 Move X9, [X9+1880]
	154 Move X3, X0
	155 Move X8, [X8]
	156 Move X1, X20
	157 Move X2, [X9]
	158 Move X4, X31
	159 Move X0, X8
	160 Call String.Concat, X0, X1, X2, X3
	161 Move X2, X0
	162 Move W1, 1
	163 Move X0, X19
	164 Move X3, X31
	165 Call PeerBase.EnqueueDebugReturn, X0, X1, X2
	166 Move X8, 0xC10000
	167 Move X8, [X8+1912]
	168 Move X0, [X8]
	169 Move W8, [X0+224]
	170 Compare W8, 0
	171 JumpIfNotEqual {173}
	172 Call 0x1C17DFC
	173 Move X0, X31
	174 Call PeerBase.MessageBufferPoolGet
	175 Compare X0, 0
	176 JumpIfEqual {224}
	177 Move X1, X20
	178 Move W2, W31
	179 Move W3, W21
	180 Move X22, X0
	181 Call StreamBuffer.Write, X0, X1, X2, X3
	182 Move W8, [X22+20]
	183 Move [X22+16], W31
	184 Move TEMP, X8
	185 And TEMP, TEMP, -2147483648
	186 Compare TEMP, -2147483648
	187 JumpIfNotEqual {192}
	188 Move X0, X22
	189 Move W1, W31
	190 Move [X22+20], W31
	191 Call StreamBuffer.CheckSize, X0, X1
	192 Move X20, [X19+288]
	193 Move [X31+8], W31
	194 Add X1, X31, 8
	195 Move X0, X20
	196 Move X2, X31
	197 Call Monitor.Enter, X0, X1
	198 Move X0, [X19+288]
	199 Compare X0, 0
	200 JumpIfEqual {227}
	201 Move X8, 0xC10000
	202 Move X8, [X8+2456]
	203 Move X2, [X8]
	204 Move X1, X22
	205 Call Queue`1<Object>.Enqueue, X0, X1
	206 Move X19, X31
	207 Move W8, [X31+8]
	208 Compare W8, 0
	209 JumpIfEqual {213}
	210 Move X0, X20
	211 Move X1, X31
	212 Call Monitor.Exit, X0
	213 Compare X19, 0
	214 JumpIfNotEqual {225}
	215 Move X20, [X31+48]
	216 Move X19, [X31+56]
	217 Move X22, [X31+32]
	218 Move X21, [X31+40]
	219 Move X30, [X31+16]
	220 Move X23, [X31+24]
	221 Add X31, X31, 64
	222 Return 
	223 Call 0x1C17F28
	224 Call 0x1C17F20
	225 Move X0, X19
	226 Call 0x1C17F18
	227 Call 0x1C17F20
	228 Move X21, X0
	229 NotImplemented "Instruction CMP not yet implemented."
	230 Move X0, X21
	231 Call 0x3EB2AD0
	232 Move X19, [X0]
	233 Call 0x3EB2AE0
	234 Move X19, X31
	235 Move X21, X0
	236 Move W8, [X31+8]
	237 Compare W8, 0
	238 JumpIfEqual {242}
	239 Move X0, X20
	240 Move X1, X31
	241 Call Monitor.Exit, X0
	242 Compare X19, 0
	243 JumpIfNotEqual {246}
	244 Move X0, X21
	245 Call 0x1D2D690
	246 Move X0, X19
	247 Call 0x1C17F18
	248 Call 0x1991590

Method: System.Void ReadPingResult(System.Byte[] inbuff)

Disassembly:
	0x03524D60 STR X30, [X31 - 0x20]!
	0x03524D64 STP X20, X19, [X31 + 0x10]
	0x03524D68 ADRP X20, 0xEBB000
	0x03524D6C LDRB W8, [X20 + 0xB5B]
	0x03524D70 MOV X19, X0
	0x03524D74 TBNZ X8, 0x0, 0x3524D98
	0x03524D78 ADRP X0, 0xC10000
	0x03524D7C LDR X0, [X0 + 0x7C8]
	0x03524D80 BL 0x1C16CF4
	0x03524D84 ADRP X0, 0xC10000
	0x03524D88 LDR X0, [X0 + 0x7D0]
	0x03524D8C BL 0x1C16CF4
	0x03524D90 MOVZ W8, 0x1
	0x03524D94 STRB W8, [X20 + 0xB5B]
	0x03524D98 CBZ X19, 0x3524DEC
	0x03524D9C ADRP X8, 0xC10000
	0x03524DA0 LDR X8, [X8 + 0x7D0]
	0x03524DA4 LDR X9, [X19]
	0x03524DA8 LDR X8, [X8]
	0x03524DAC LDRB W11, [X9 + 0x130]
	0x03524DB0 LDRB W10, [X8 + 0x130]
	0x03524DB4 CMP W11, W10
	0x03524DB8 B.CC 0x3524DEC
	0x03524DBC LDR X9, [X9 + 0xC8]
	0x03524DC0 ADD X9, X9, X10, 0x3, LSL
	0x03524DC4 LDUR X9, [X9 - 0x8]
	0x03524DC8 CMP X9, X8
	0x03524DCC B.NE 0x3524DEC
	0x03524DD0 ADRP X8, 0xC10000
	0x03524DD4 LDR X8, [X8 + 0x7C8]
	0x03524DD8 MOV X0, X19
	0x03524DDC LDP X20, X19, [X31 + 0x10]
	0x03524DE0 LDR X1, [X8]
	0x03524DE4 LDR X30, [X31], #0x20
	0x03524DE8 B 0x266A52C
	0x03524DEC BL 0x1C16F20
	0x03524DF0 STR X30, [X31 - 0x20]!
	0x03524DF4 STP X20, X19, [X31 + 0x10]
	0x03524DF8 ADRP X20, 0xEBB000
	0x03524DFC LDRB W8, [X20 + 0xB5C]
	0x03524E00 MOV X19, X0
	0x03524E04 TBNZ X8, 0x0, 0x3524E28
	0x03524E08 ADRP X0, 0xC10000
	0x03524E0C LDR X0, [X0 + 0x7D8]
	0x03524E10 BL 0x1C16CF4
	0x03524E14 ADRP X0, 0xC10000
	0x03524E18 LDR X0, [X0 + 0x7E0]
	0x03524E1C BL 0x1C16CF4
	0x03524E20 MOVZ W8, 0x1
	0x03524E24 STRB W8, [X20 + 0xB5C]
	0x03524E28 CBZ X19, 0x3524E7C
	0x03524E2C ADRP X8, 0xC10000
	0x03524E30 LDR X8, [X8 + 0x7E0]
	0x03524E34 LDR X9, [X19]
	0x03524E38 LDR X8, [X8]
	0x03524E3C LDRB W11, [X9 + 0x130]
	0x03524E40 LDRB W10, [X8 + 0x130]
	0x03524E44 CMP W11, W10
	0x03524E48 B.CC 0x3524E7C
	0x03524E4C LDR X9, [X9 + 0xC8]
	0x03524E50 ADD X9, X9, X10, 0x3, LSL
	0x03524E54 LDUR X9, [X9 - 0x8]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+32], X22
	004 Move [X31+40], X21
	005 Move [X31+48], X20
	006 Move [X31+56], X19
	007 Move X22, 0xEBC000
	008 Move X21, 0xBD8000
	009 Move W8, [X22+2893]
	010 Move X21, [X21+3840]
	011 Move X20, X1
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0xBD8000
	018 Move X0, [X0+3840]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X22+2893], W8
	022 Move X0, [X21]
	023 Move W8, 1
	024 Move [X31+24], X31
	025 Move [X31+12], W8
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {30}
	029 Call 0x1C17DFC
	030 Add X0, X31, 28
	031 Add X2, X31, 12
	032 Move X1, X20
	033 Move X3, X31
	034 Call Protocol.Deserialize, X0, X1, X2
	035 Add X0, X31, 24
	036 Add X2, X31, 12
	037 Move X1, X20
	038 Move X3, X31
	039 Call Protocol.Deserialize, X0, X1, X2
	040 Move X0, X19
	041 Move X1, X31
	042 Call PeerBase.get_timeInt, X0
	043 Move W8, [X31+24]
	044 Move W9, [X19+112]
	045 Subtract W1, W0, W8
	046 Move [X19+124], W1
	047 Compare W9, 0
	048 JumpIfNotEqual {50}
	049 Move [X19+116], W1
	050 Move X0, X19
	051 Move X2, X31
	052 Call PeerBase.UpdateRoundTripTimeAndVariance, X0, X1
	053 Move W8, [X19+112]
	054 Compare W8, 0
	055 JumpIfNotEqual {66}
	056 Move W20, [X31+28]
	057 Move W21, [X19+124]
	058 Move X0, X19
	059 Move X1, X31
	060 Call PeerBase.get_timeInt, X0
	061 Add W8, W20, W21
	062 Move W9, 1
	063 Subtract W8, W8, W0
	064 Move [X19+108], W8
	065 Move [X19+112], W9
	066 Move X20, [X31+48]
	067 Move X19, [X31+56]
	068 Move X22, [X31+32]
	069 Move X21, [X31+40]
	070 Move X30, [X31+16]
	071 Add X31, X31, 64
	072 Return 

Method: System.Void ReadPingResult(ExitGames.Client.Photon.OperationResponse operationResponse)

Disassembly:
	0x03524E58 CMP X9, X8
	0x03524E5C B.NE 0x3524E7C
	0x03524E60 ADRP X8, 0xC10000
	0x03524E64 LDR X8, [X8 + 0x7D8]
	0x03524E68 MOV X0, X19
	0x03524E6C LDP X20, X19, [X31 + 0x10]
	0x03524E70 LDR X1, [X8]
	0x03524E74 LDR X30, [X31], #0x20
	0x03524E78 B 0x266853C
	0x03524E7C BL 0x1C16F20
	0x03524E80 STR X30, [X31 - 0x20]!
	0x03524E84 STP X20, X19, [X31 + 0x10]
	0x03524E88 ADRP X20, 0xEBB000
	0x03524E8C LDRB W8, [X20 + 0xB5D]
	0x03524E90 MOV X19, X0
	0x03524E94 TBNZ X8, 0x0, 0x3524EB8
	0x03524E98 ADRP X0, 0xC10000
	0x03524E9C LDR X0, [X0 + 0x7E8]
	0x03524EA0 BL 0x1C16CF4
	0x03524EA4 ADRP X0, 0xC10000
	0x03524EA8 LDR X0, [X0 + 0x7F0]
	0x03524EAC BL 0x1C16CF4
	0x03524EB0 MOVZ W8, 0x1
	0x03524EB4 STRB W8, [X20 + 0xB5D]
	0x03524EB8 CBZ X19, 0x3524F0C
	0x03524EBC ADRP X8, 0xC10000
	0x03524EC0 LDR X8, [X8 + 0x7F0]
	0x03524EC4 LDR X9, [X19]
	0x03524EC8 LDR X8, [X8]
	0x03524ECC LDRB W11, [X9 + 0x130]
	0x03524ED0 LDRB W10, [X8 + 0x130]
	0x03524ED4 CMP W11, W10
	0x03524ED8 B.CC 0x3524F0C
	0x03524EDC LDR X9, [X9 + 0xC8]
	0x03524EE0 ADD X9, X9, X10, 0x3, LSL
	0x03524EE4 LDUR X9, [X9 - 0x8]
	0x03524EE8 CMP X9, X8
	0x03524EEC B.NE 0x3524F0C
	0x03524EF0 ADRP X8, 0xC10000
	0x03524EF4 LDR X8, [X8 + 0x7E8]
	0x03524EF8 MOV X0, X19
	0x03524EFC LDP X20, X19, [X31 + 0x10]
	0x03524F00 LDR X1, [X8]
	0x03524F04 LDR X30, [X31], #0x20
	0x03524F08 B 0x2668A98
	0x03524F0C BL 0x1C16F20
	0x03524F10 STR X30, [X31 - 0x20]!
	0x03524F14 STP X20, X19, [X31 + 0x10]
	0x03524F18 ADRP X20, 0xEBB000
	0x03524F1C LDRB W8, [X20 + 0xB5E]
	0x03524F20 MOV X19, X0
	0x03524F24 TBNZ X8, 0x0, 0x3524F48
	0x03524F28 ADRP X0, 0xC10000
	0x03524F2C LDR X0, [X0 + 0x7F8]
	0x03524F30 BL 0x1C16CF4
	0x03524F34 ADRP X0, 0xC10000
	0x03524F38 LDR X0, [X0 + 0x800]
	0x03524F3C BL 0x1C16CF4
	0x03524F40 MOVZ W8, 0x1
	0x03524F44 STRB W8, [X20 + 0xB5E]
	0x03524F48 CBZ X19, 0x3524F9C
	0x03524F4C ADRP X8, 0xC10000
	0x03524F50 LDR X8, [X8 + 0x800]
	0x03524F54 LDR X9, [X19]
	0x03524F58 LDR X8, [X8]
	0x03524F5C LDRB W11, [X9 + 0x130]
	0x03524F60 LDRB W10, [X8 + 0x130]
	0x03524F64 CMP W11, W10
	0x03524F68 B.CC 0x3524F9C
	0x03524F6C LDR X9, [X9 + 0xC8]
	0x03524F70 ADD X9, X9, X10, 0x3, LSL

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xEBC000
	006 Move W8, [X21+2894]
	007 Move X20, X1
	008 Move X19, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xBD0000
	014 Move X0, [X0+1880]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+2894], W8
	018 Compare X20, 0
	019 JumpIfEqual {82}
	020 Move X0, [X20+32]
	021 Compare X0, 0
	022 JumpIfEqual {82}
	023 Move W1, 2
	024 Move X2, X31
	025 Call ParameterDictionary.get_Item, X0, X1
	026 Compare X0, 0
	027 JumpIfEqual {82}
	028 Move X21, 0xBD0000
	029 Move X21, [X21+1880]
	030 Move X8, [X0]
	031 Move X1, [X21]
	032 Move X8, [X8+64]
	033 Move X9, [X1+64]
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Call 0x1C17E08
	036 Move X8, [X20+32]
	037 Compare X8, 0
	038 JumpIfEqual {82}
	039 Move W20, [X0]
	040 Move W1, 1
	041 Move X0, X8
	042 Move X2, X31
	043 Call ParameterDictionary.get_Item, X0, X1
	044 Compare X0, 0
	045 JumpIfEqual {82}
	046 Move X8, [X0]
	047 Move X1, [X21]
	048 Move X8, [X8+64]
	049 Move X9, [X1+64]
	050 NotImplemented "Instruction CMP not yet implemented."
	051 Call 0x1C17E08
	052 Move W21, [X0]
	053 Move X0, X19
	054 Move X1, X31
	055 Call PeerBase.get_timeInt, X0
	056 Move W8, [X19+112]
	057 Subtract W1, W0, W21
	058 Move [X19+124], W1
	059 Compare W8, 0
	060 JumpIfNotEqual {62}
	061 Move [X19+116], W1
	062 Move X0, X19
	063 Move X2, X31
	064 Call PeerBase.UpdateRoundTripTimeAndVariance, X0, X1
	065 Move W8, [X19+112]
	066 Compare W8, 0
	067 JumpIfNotEqual {77}
	068 Move W21, [X19+124]
	069 Move X0, X19
	070 Move X1, X31
	071 Call PeerBase.get_timeInt, X0
	072 Add W8, W20, W21
	073 Move W9, 1
	074 Subtract W8, W8, W0
	075 Move [X19+108], W8
	076 Move [X19+112], W9
	077 Move X20, [X31+16]
	078 Move X19, [X31+24]
	079 Move X30, [X31+32]
	080 Move X21, [X31+40]
	081 Return 
	082 Call 0x1C17F20
	083 Call 0x1C181E0

Method: System.Void .cctor()

Disassembly:
	0x03524F74 LDUR X9, [X9 - 0x8]
	0x03524F78 CMP X9, X8
	0x03524F7C B.NE 0x3524F9C
	0x03524F80 ADRP X8, 0xC10000
	0x03524F84 LDR X8, [X8 + 0x7F8]
	0x03524F88 MOV X0, X19
	0x03524F8C LDP X20, X19, [X31 + 0x10]
	0x03524F90 LDR X1, [X8]
	0x03524F94 LDR X30, [X31], #0x20
	0x03524F98 B 0x2668FE0
	0x03524F9C BL 0x1C16F20
	0x03524FA0 STR X30, [X31 - 0x20]!
	0x03524FA4 STP X20, X19, [X31 + 0x10]
	0x03524FA8 ADRP X20, 0xEBB000
	0x03524FAC LDRB W8, [X20 + 0xB5F]
	0x03524FB0 MOV X19, X0
	0x03524FB4 TBNZ X8, 0x0, 0x3524FD8
	0x03524FB8 ADRP X0, 0xC10000
	0x03524FBC LDR X0, [X0 + 0x808]
	0x03524FC0 BL 0x1C16CF4
	0x03524FC4 ADRP X0, 0xC10000
	0x03524FC8 LDR X0, [X0 + 0x810]
	0x03524FCC BL 0x1C16CF4
	0x03524FD0 MOVZ W8, 0x1
	0x03524FD4 STRB W8, [X20 + 0xB5F]
	0x03524FD8 CBZ X19, 0x352502C
	0x03524FDC ADRP X8, 0xC10000
	0x03524FE0 LDR X8, [X8 + 0x810]
	0x03524FE4 LDR X9, [X19]
	0x03524FE8 LDR X8, [X8]
	0x03524FEC LDRB W11, [X9 + 0x130]
	0x03524FF0 LDRB W10, [X8 + 0x130]
	0x03524FF4 CMP W11, W10
	0x03524FF8 B.CC 0x352502C
	0x03524FFC LDR X9, [X9 + 0xC8]
	0x03525000 ADD X9, X9, X10, 0x3, LSL
	0x03525004 LDUR X9, [X9 - 0x8]
	0x03525008 CMP X9, X8
	0x0352500C B.NE 0x352502C
	0x03525010 ADRP X8, 0xC0F000
	0x03525014 LDR X8, [X8 + 0x808]
	0x03525018 MOV X0, X19
	0x0352501C LDP X20, X19, [X31 + 0x10]
	0x03525020 LDR X1, [X8]
	0x03525024 LDR X30, [X31], #0x20
	0x03525028 B 0x2669524
	0x0352502C BL 0x1C16F20
	0x03525030 STP D9, D8, [X31 - 0x30]!
	0x03525034 STR X30, [X31 + 0x10]
	0x03525038 STP X20, X19, [X31 + 0x20]
	0x0352503C ADRP X19, 0xEBA000
	0x03525040 ADRP X20, 0xC0F000
	0x03525044 LDRB W8, [X19 + 0xB60]
	0x03525048 LDR X20, [X20 + 0x818]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xEBC000
	007 Move X21, 0xBD0000
	008 Move X19, 0xC11000
	009 Move X20, 0xC10000
	010 Move W8, [X22+2895]
	011 Move X21, [X21+1560]
	012 Move X19, [X19+1888]
	013 Move X20, [X20+3256]
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {29}
	018 Move X0, 0xBD0000
	019 Move X0, [X0+1560]
	020 Call 0x1C17CF4
	021 Move X0, 0xC10000
	022 Move X0, [X0+3256]
	023 Call 0x1C17CF4
	024 Move X0, 0xC11000
	025 Move X0, [X0+1888]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X22+2895], W8
	029 Move X0, [X21]
	030 Move W1, 9
	031 Call 0x1C17D6C
	032 Move X1, [X19]
	033 Move X2, X31
	034 Move X19, X0
	035 Call RuntimeHelpers.InitializeArray, X0, X1
	036 Move X8, [X20]
	037 Move W1, 2
	038 Move X8, [X8+184]
	039 Move [X8], X19
	040 Move X0, [X21]
	041 Call 0x1C17D6C
	042 Compare X0, 0
	043 JumpIfEqual {62}
	044 Move W8, [X0+24]
	045 Compare W8, 0
	046 JumpIfEqual {61}
	047 Move W9, 243
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Move [X0+32], W9
	050 Move W8, 2
	051 Move [X0+33], W8
	052 Move X8, [X20]
	053 Move X20, [X31+32]
	054 Move X19, [X31+40]
	055 Move X22, [X31+16]
	056 Move X21, [X31+24]
	057 Move X8, [X8+184]
	058 Move [X8+8], X0
	059 Move X30, [X31+48]
	060 Return 
	061 Call 0x1C17F28
	062 Call 0x1C17F20

