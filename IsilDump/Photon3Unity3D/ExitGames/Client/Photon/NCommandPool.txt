Type: ExitGames.Client.Photon.NCommandPool

Method: ExitGames.Client.Photon.NCommand Acquire(ExitGames.Client.Photon.EnetPeer peer, System.Byte[] inBuff, ref System.Int32 readingOffset)

Disassembly:
	0x034F8314 STRB W0, [X31 + 0xC]
	0x034F8318 ADD X0, X31, 0xC
	0x034F831C MOV X1, X31
	0x034F8320 BL 0x3319BB4
	0x034F8324 ADRP X8, 0xC3B000
	0x034F8328 LDR X8, [X8 + 0xAA8]
	0x034F832C LDR X3, [X21]
	0x034F8330 MOV X2, X0
	0x034F8334 MOV X0, X20
	0x034F8338 LDR X1, [X8]
	0x034F833C BL 0x2AA5084
	0x034F8340 LDR X1, [X19 + 0xA0]
	0x034F8344 CBZ X1, 0x34F8554
	0x034F8348 LDR X0, [X19 + 0x18]
	0x034F834C CBZ X0, 0x34F867C
	0x034F8350 BL 0x34FA408
	0x034F8354 CBZ X0, 0x34F867C
	0x034F8358 LDR W22, [X0 + 0x18]
	0x034F835C MOV X21, X0
	0x034F8360 B 0x34F855C
	0x034F8364 ADRP X8, 0xBFB000
	0x034F8368 LDR X8, [X8 + 0x618]
	0x034F836C MOVZ W1, 0x29
	0x034F8370 LDR X0, [X8]
	0x034F8374 BL 0x1C16D6C
	0x034F8378 ADRP X21, 0xC3B000
	0x034F837C LDR X21, [X21 + 0xA98]
	0x034F8380 MOV X20, X0
	0x034F8384 LDR X8, [X21]
	0x034F8388 LDR W9, [X8 + 0xE0]
	0x034F838C CBNZ W9, 0x34F839C
	0x034F8390 MOV X0, X8
	0x034F8394 BL 0x1C16DFC
	0x034F8398 LDR X8, [X21]
	0x034F839C CBZ X20, 0x34F867C
	0x034F83A0 LDR W9, [X20 + 0x18]
	0x034F83A4 CBZ W9, 0x34F8680
	0x034F83A8 LDR X8, [X8 + 0xB8]
	0x034F83AC CMP W9, 0x1
	0x034F83B0 LDR X21, [X8]
	0x034F83B4 MOVZ W8, 0xF3
	0x034F83B8 STRB W8, [X20 + 0x20]
	0x034F83BC B.EQ 0x34F8680
	0x034F83C0 STRB W31, [X20 + 0x21]
	0x034F83C4 LDR X0, [X19 + 0x18]
	0x034F83C8 CBZ X0, 0x34F867C
	0x034F83CC LDR X8, [X0]
	0x034F83D0 LDP X9, X1, [X8 + 0x188]
	0x034F83D4 BLR X9
	0x034F83D8 CBZ X0, 0x34F867C
	0x034F83DC LDR W8, [X0 + 0x18]
	0x034F83E0 CBZ W8, 0x34F8680
	0x034F83E4 LDR W8, [X20 + 0x18]
	0x034F83E8 CMP W8, 0x2
	0x034F83EC B.LS 0x34F8680
	0x034F83F0 LDRB W8, [X0 + 0x20]
	0x034F83F4 STRB W8, [X20 + 0x22]
	0x034F83F8 LDR X0, [X19 + 0x18]
	0x034F83FC CBZ X0, 0x34F867C
	0x034F8400 LDR X8, [X0]
	0x034F8404 LDP X9, X1, [X8 + 0x188]
	0x034F8408 BLR X9
	0x034F840C CBZ X0, 0x34F867C
	0x034F8410 LDR W8, [X0 + 0x18]
	0x034F8414 CMP W8, 0x1
	0x034F8418 B.LS 0x34F8680
	0x034F841C LDR W8, [X20 + 0x18]
	0x034F8420 CMP W8, 0x3
	0x034F8424 B.LS 0x34F8680
	0x034F8428 LDRB W8, [X0 + 0x21]
	0x034F842C STRB W8, [X20 + 0x23]
	0x034F8430 LDR X0, [X19 + 0x10]
	0x034F8434 CBZ X0, 0x34F867C
	0x034F8438 MOV X1, X31
	0x034F843C BL 0x35011B0
	0x034F8440 LDR W8, [X20 + 0x18]
	0x034F8444 CMP W8, 0x4
	0x034F8448 B.LS 0x34F8680
	0x034F844C STRB W0, [X20 + 0x24]
	0x034F8450 CBZ X21, 0x34F867C
	0x034F8454 LDR W9, [X21 + 0x18]
	0x034F8458 CMP W9, 0x1
	0x034F845C B.EQ 0x34F8680
	0x034F8460 CBZ W9, 0x34F8680
	0x034F8464 CMP W8, 0x5
	0x034F8468 B.LS 0x34F8680
	0x034F846C LDRB W9, [X21 + 0x20]
	0x034F8470 LDRB W10, [X21 + 0x21]
	0x034F8474 ORR W9, W10, W9, 0x4
	0x034F8478 STRB W9, [X20 + 0x25]
	0x034F847C LDR W9, [X21 + 0x18]
	0x034F8480 CMP W9, 0x2
	0x034F8484 B.LS 0x34F8680
	0x034F8488 CMP W8, 0x6
	0x034F848C B.LS 0x34F8680
	0x034F8490 LDRB W9, [X21 + 0x22]
	0x034F8494 STRB W9, [X20 + 0x26]
	0x034F8498 LDR W9, [X21 + 0x18]
	0x034F849C CMP W9, 0x3
	0x034F84A0 B.LS 0x34F8680
	0x034F84A4 CMP W8, 0x7
	0x034F84A8 B.LS 0x34F8680
	0x034F84AC LDRB W9, [X21 + 0x23]
	0x034F84B0 CMP W8, 0x8
	0x034F84B4 STRB W9, [X20 + 0x27]
	0x034F84B8 B.EQ 0x34F8680

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X19, 0xEE8000
	009 Move W8, [X19+2633]
	010 Move X21, X3
	011 Move X22, X2
	012 Move X23, X1
	013 Move X24, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {29}
	018 Move X0, 0xC3C000
	019 Move X0, [X0+2016]
	020 Call 0x1C17CF4
	021 Move X0, 0xC3C000
	022 Move X0, [X0+2024]
	023 Call 0x1C17CF4
	024 Move X0, 0xC3C000
	025 Move X0, [X0+2032]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X19+2633], W8
	029 Move X19, [X24+16]
	030 Move [X31+12], W31
	031 Add X1, X31, 12
	032 Move X0, X19
	033 Move X2, X31
	034 Call Monitor.Enter, X0, X1
	035 Move X8, [X24+16]
	036 Compare X8, 0
	037 JumpIfEqual {90}
	038 Move W9, [X8+24]
	039 Compare W9, 0
	040 JumpIfEqual {55}
	041 Move X9, 0xC3C000
	042 Move X9, [X9+2024]
	043 Move X1, [X9]
	044 Move X0, X8
	045 Call Stack`1<Object>.Pop, X0
	046 Move X20, X0
	047 Compare X0, 0
	048 JumpIfEqual {91}
	049 Move X0, X20
	050 Move X1, X23
	051 Move X2, X22
	052 Move X3, X21
	053 Call NCommand.Initialize, X0, X1, X2, X3
	054 Move X22, X31
	055 Move X8, 0xC3C000
	056 Move X8, [X8+2016]
	057 Move X0, [X8]
	058 Call 0x1C17F10
	059 Move X20, X0
	060 Move W8, 4
	061 Move [X0+32], W8
	062 Move X1, X31
	063 Call Object..ctor, X0
	064 Move X0, X20
	065 Move X1, X23
	066 Move X2, X22
	067 Move X3, X21
	068 Call NCommand.Initialize, X0, X1, X2, X3
	069 Move X22, X31
	070 Move [X20+96], X24
	071 Move W8, [X31+12]
	072 Compare W8, 0
	073 JumpIfEqual {77}
	074 Move X0, X19
	075 Move X1, X31
	076 Call Monitor.Exit, X0
	077 Compare X22, 0
	078 JumpIfNotEqual {88}
	079 Move X0, X20
	080 Move X20, [X31+48]
	081 Move X19, [X31+56]
	082 Move X22, [X31+32]
	083 Move X21, [X31+40]
	084 Move X24, [X31+16]
	085 Move X23, [X31+24]
	086 Move X30, [X31+64]
	087 Return X0
	088 Move X0, X22
	089 Call 0x1C17F18
	090 Call 0x1C17F20
	091 Call 0x1C17F20
	092 Move X21, X0
	093 Move X20, X31
	094 Move X21, X0
	095 NotImplemented "Instruction CMP not yet implemented."
	096 Move X0, X21
	097 Call 0x3EB2AD0
	098 Move X22, [X0]
	099 Call 0x3EB2AE0
	100 Move X22, X31
	101 Move X21, X0
	102 Move W8, [X31+12]
	103 Compare W8, 0
	104 JumpIfEqual {108}
	105 Move X0, X19
	106 Move X1, X31
	107 Call Monitor.Exit, X0
	108 Compare X22, 0
	109 JumpIfNotEqual {112}
	110 Move X0, X21
	111 Call 0x1D2D690
	112 Move X0, X22
	113 Call 0x1C17F18
	114 Call 0x1991590

Method: ExitGames.Client.Photon.NCommand Acquire(ExitGames.Client.Photon.EnetPeer peer, System.Byte commandType, ExitGames.Client.Photon.StreamBuffer payload, System.Byte channel)

Disassembly:
	0x034F1030 LDP X3, X2, [X0]
	0x034F1034 MOV X0, X19
	0x034F1038 LDP X20, X19, [X31 + 0x10]
	0x034F103C MOVZ W1, 0x401
	0x034F1040 LDR X30, [X31], #0x20
	0x034F1044 BR X3
	0x034F1048 BL 0x1C16F20
	0x034F104C STR X30, [X31 - 0x10]!
	0x034F1050 LDR X8, [X0 + 0x10]
	0x034F1054 CBZ X8, 0x34F1064
	0x034F1058 LDR X0, [X8 + 0x48]
	0x034F105C LDR X30, [X31], #0x10
	0x034F1060 RET
	0x034F1064 BL 0x1C16F20
	0x034F1068 SUB X31, X31, 0x40
	0x034F106C STR X30, [X31 + 0x20]
	0x034F1070 STP X20, X19, [X31 + 0x30]
	0x034F1074 ADRP X20, 0xEEE000
	0x034F1078 LDRB W8, [X20 + 0xA23]
	0x034F107C MOV X19, X0
	0x034F1080 TBNZ X8, 0x0, 0x34F10A4
	0x034F1084 ADRP X0, 0xC42000
	0x034F1088 LDR X0, [X0 + 0x848]
	0x034F108C BL 0x1C16CF4
	0x034F1090 ADRP X0, 0xC42000
	0x034F1094 LDR X0, [X0 + 0x850]
	0x034F1098 BL 0x1C16CF4
	0x034F109C MOVZ W8, 0x1
	0x034F10A0 STRB W8, [X20 + 0xA23]
	0x034F10A4 LDRB W8, [X19 + 0x40]
	0x034F10A8 CMP W8, 0x3
	0x034F10AC B.NE 0x34F10D8
	0x034F10B0 LDRB W9, [X19 + 0xDC]
	0x034F10B4 CBZ W9, 0x34F10D8
	0x034F10B8 MOV X0, X19
	0x034F10BC LDP X20, X19, [X31 + 0x30]
	0x034F10C0 LDR X30, [X31 + 0x20]
	0x034F10C4 MOVZ W1, 0xC
	0x034F10C8 MOVZ W3, 0xFF
	0x034F10CC MOV X2, X31
	0x034F10D0 ADD X31, X31, 0x40
	0x034F10D4 B 0x34F12F8
	0x034F10D8 LDR X9, [X19 + 0x10]
	0x034F10DC CBZ X9, 0x34F114C
	0x034F10E0 LDRB W9, [X9 + 0x40]
	0x034F10E4 CMP W9, 0x3
	0x034F10E8 B.CC 0x34F113C
	0x034F10EC ADRP X9, 0xC42000
	0x034F10F0 LDR X9, [X9 + 0x848]
	0x034F10F4 MOVN X10, 0x0
	0x034F10F8 ADD X0, X31, 0x8
	0x034F10FC MOV X1, X31
	0x034F1100 LDR X9, [X9]
	0x034F1104 STRB W8, [X31 + 0x18]
	0x034F1108 STP X9, X10, [X31 + 0x8]
	0x034F110C BL 0x33B162C
	0x034F1110 ADRP X8, 0xC42000
	0x034F1114 LDR X8, [X8 + 0x850]
	0x034F1118 MOV X1, X0
	0x034F111C MOV X2, X31
	0x034F1120 LDR X8, [X8]
	0x034F1124 MOV X0, X8
	0x034F1128 BL 0x321B938
	0x034F112C MOV X2, X0
	0x034F1130 MOVZ W1, 0x3
	0x034F1134 MOV X0, X19
	0x034F1138 BL 0x34F116C
	0x034F113C LDP X20, X19, [X31 + 0x30]
	0x034F1140 LDR X30, [X31 + 0x20]
	0x034F1144 ADD X31, X31, 0x40
	0x034F1148 RET
	0x034F114C BL 0x1C16F20
	0x034F1150 STR X30, [X31 - 0x10]!
	0x034F1154 LDR X8, [X0 + 0x10]
	0x034F1158 CBZ X8, 0x34F1168
	0x034F115C LDRB W0, [X8 + 0x40]
	0x034F1160 LDR X30, [X31], #0x10
	0x034F1164 RET
	0x034F1168 BL 0x1C16F20
	0x034F116C SUB X31, X31, 0x40
	0x034F1170 STP X30, X23, [X31 + 0x10]
	0x034F1174 STP X22, X21, [X31 + 0x20]
	0x034F1178 STP X20, X19, [X31 + 0x30]
	0x034F117C ADRP X21, 0xEEE000
	0x034F1180 ADRP X23, 0xC42000
	0x034F1184 LDRB W8, [X21 + 0xA7F]
	0x034F1188 LDR X23, [X23 + 0x858]
	0x034F118C MOV X19, X2
	0x034F1190 MOV W22, W1
	0x034F1194 MOV X20, X0
	0x034F1198 TBNZ X8, 0x0, 0x34F11D4
	0x034F119C ADRP X0, 0xC42000
	0x034F11A0 LDR X0, [X0 + 0x830]
	0x034F11A4 BL 0x1C16CF4
	0x034F11A8 ADRP X0, 0xC42000
	0x034F11AC LDR X0, [X0 + 0x838]
	0x034F11B0 BL 0x1C16CF4
	0x034F11B4 ADRP X0, 0xC42000
	0x034F11B8 LDR X0, [X0 + 0x860]
	0x034F11BC BL 0x1C16CF4
	0x034F11C0 ADRP X0, 0xC42000
	0x034F11C4 LDR X0, [X0 + 0x858]
	0x034F11C8 BL 0x1C16CF4
	0x034F11CC MOVZ W8, 0x1
	0x034F11D0 STRB W8, [X21 + 0xA7F]
	0x034F11D4 LDR X0, [X23]
	0x034F11D8 BL 0x1C16F10
	0x034F11DC MOV X1, X31
	0x034F11E0 MOV X21, X0
	0x034F11E4 BL 0x34FF7CC
	0x034F11E8 CBZ X21, 0x34F128C

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X19, 0xEEF000
	011 Move W8, [X19+2634]
	012 Move W21, W4
	013 Move X22, X3
	014 Move W23, W2
	015 Move X24, X1
	016 Move X25, X0
	017 Move TEMP, X8
	018 And TEMP, TEMP, 1
	019 Compare TEMP, 1
	020 JumpIfEqual {32}
	021 Move X0, 0xC43000
	022 Move X0, [X0+2016]
	023 Call 0x1C17CF4
	024 Move X0, 0xC43000
	025 Move X0, [X0+2024]
	026 Call 0x1C17CF4
	027 Move X0, 0xC43000
	028 Move X0, [X0+2032]
	029 Call 0x1C17CF4
	030 Move W8, 1
	031 Move [X19+2634], W8
	032 Move X19, [X25+16]
	033 Move [X31+12], W31
	034 Add X1, X31, 12
	035 Move X0, X19
	036 Move X2, X31
	037 Call Monitor.Enter, X0, X1
	038 Move X8, [X25+16]
	039 Compare X8, 0
	040 JumpIfEqual {97}
	041 Move W9, [X8+24]
	042 Compare W9, 0
	043 JumpIfEqual {59}
	044 Move X9, 0xC43000
	045 Move X9, [X9+2024]
	046 Move X1, [X9]
	047 Move X0, X8
	048 Call Stack`1<Object>.Pop, X0
	049 Move X20, X0
	050 Compare X0, 0
	051 JumpIfEqual {98}
	052 Move X0, X20
	053 Move X1, X24
	054 Move W2, W23
	055 Move X3, X22
	056 Move W4, W21
	057 Call NCommand.Initialize, X0, X1, X2, X3, X4
	058 Move X22, X31
	059 Move X8, 0xC43000
	060 Move X8, [X8+2016]
	061 Move X0, [X8]
	062 Call 0x1C17F10
	063 Move X20, X0
	064 Move W8, 4
	065 Move [X0+32], W8
	066 Move X1, X31
	067 Call Object..ctor, X0
	068 Move X0, X20
	069 Move X1, X24
	070 Move W2, W23
	071 Move X3, X22
	072 Move W4, W21
	073 Call NCommand.Initialize, X0, X1, X2, X3, X4
	074 Move X22, X31
	075 Move [X20+96], X25
	076 Move W8, [X31+12]
	077 Compare W8, 0
	078 JumpIfEqual {82}
	079 Move X0, X19
	080 Move X1, X31
	081 Call Monitor.Exit, X0
	082 Compare X22, 0
	083 JumpIfNotEqual {95}
	084 Move X0, X20
	085 Move X20, [X31+64]
	086 Move X19, [X31+72]
	087 Move X22, [X31+48]
	088 Move X21, [X31+56]
	089 Move X24, [X31+32]
	090 Move X23, [X31+40]
	091 Move X30, [X31+16]
	092 Move X25, [X31+24]
	093 Add X31, X31, 80
	094 Return X0
	095 Move X0, X22
	096 Call 0x1C17F18
	097 Call 0x1C17F20
	098 Call 0x1C17F20
	099 Move X21, X0
	100 Move X20, X31
	101 Move X21, X0
	102 NotImplemented "Instruction CMP not yet implemented."
	103 Move X0, X21
	104 Call 0x3EB2AD0
	105 Move X22, [X0]
	106 Call 0x3EB2AE0
	107 Move X22, X31
	108 Move X21, X0
	109 Move W8, [X31+12]
	110 Compare W8, 0
	111 JumpIfEqual {115}
	112 Move X0, X19
	113 Move X1, X31
	114 Call Monitor.Exit, X0
	115 Compare X22, 0
	116 JumpIfNotEqual {119}
	117 Move X0, X21
	118 Call 0x1D2D690
	119 Move X0, X22
	120 Call 0x1C17F18
	121 Call 0x1991590

Method: System.Void Release(ExitGames.Client.Photon.NCommand nCommand)

Disassembly:
	0x034FBCF8 BL 0x242559C
	0x034FBCFC TBZ X0, 0x0, 0x34FBD4C
	0x034FBD00 ADD X0, X31, 0xC
	0x034FBD04 MOV X1, X31
	0x034FBD08 BL 0x3319BB4
	0x034FBD0C ADRP X8, 0xC38000
	0x034FBD10 LDR X8, [X8 + 0xC58]
	0x034FBD14 MOV X2, X31
	0x034FBD18 LDR X1, [X8]
	0x034FBD1C BL 0x321B938
	0x034FBD20 ADRP X8, 0xBF8000
	0x034FBD24 LDR X8, [X8 + 0xA28]
	0x034FBD28 MOV X21, X0
	0x034FBD2C LDR X8, [X8]
	0x034FBD30 LDR W9, [X8 + 0xE0]
	0x034FBD34 CBNZ W9, 0x34FBD40
	0x034FBD38 MOV X0, X8
	0x034FBD3C BL 0x1C16DFC
	0x034FBD40 MOV X0, X21
	0x034FBD44 MOV X1, X31
	0x034FBD48 BL 0x3C06A04
	0x034FBD4C LDR X0, [X20 + 0x10]
	0x034FBD50 CBZ X0, 0x34FBD7C
	0x034FBD54 ADRP X8, 0xC38000
	0x034FBD58 LDR X8, [X8 + 0xC38]
	0x034FBD5C LDRB W1, [X31 + 0xC]
	0x034FBD60 MOV X2, X19
	0x034FBD64 LDR X3, [X8]
	0x034FBD68 BL 0x2425794
	0x034FBD6C LDP X20, X19, [X31 + 0x20]
	0x034FBD70 LDP X22, X21, [X31 + 0x10]
	0x034FBD74 LDR X30, [X31], #0x30
	0x034FBD78 RET
	0x034FBD7C BL 0x1C16F20
	0x034FBD80 STR X30, [X31 - 0x30]!
	0x034FBD84 STP X22, X21, [X31 + 0x10]
	0x034FBD88 STP X20, X19, [X31 + 0x20]
	0x034FBD8C ADRP X22, 0xEE4000
	0x034FBD90 LDRB W8, [X22 + 0xA62]
	0x034FBD94 MOV W19, W2
	0x034FBD98 MOV W21, W1
	0x034FBD9C MOV X20, X0
	0x034FBDA0 STRB W1, [X31 + 0xC]
	0x034FBDA4 TBNZ X8, 0x0, 0x34FBDEC
	0x034FBDA8 ADRP X0, 0xBF8000
	0x034FBDAC LDR X0, [X0 + 0xA28]
	0x034FBDB0 BL 0x1C16CF4
	0x034FBDB4 ADRP X0, 0xC38000
	0x034FBDB8 LDR X0, [X0 + 0xC50]
	0x034FBDBC BL 0x1C16CF4
	0x034FBDC0 ADRP X0, 0xC38000
	0x034FBDC4 LDR X0, [X0 + 0xC38]
	0x034FBDC8 BL 0x1C16CF4
	0x034FBDCC ADRP X0, 0xC38000
	0x034FBDD0 LDR X0, [X0 + 0xC10]
	0x034FBDD4 BL 0x1C16CF4
	0x034FBDD8 ADRP X0, 0xC38000
	0x034FBDDC LDR X0, [X0 + 0xC58]
	0x034FBDE0 BL 0x1C16CF4
	0x034FBDE4 MOVZ W8, 0x1
	0x034FBDE8 STRB W8, [X22 + 0xA62]
	0x034FBDEC LDR X0, [X20 + 0x10]
	0x034FBDF0 CBZ X0, 0x34FBEC0
	0x034FBDF4 ADRP X8, 0xC38000
	0x034FBDF8 LDR X8, [X8 + 0xC50]
	0x034FBDFC ADRP X22, 0xC38000
	0x034FBE00 MOV W1, W21
	0x034FBE04 LDR X2, [X8]
	0x034FBE08 LDR X22, [X22 + 0xC10]
	0x034FBE0C BL 0x242559C
	0x034FBE10 TBZ X0, 0x0, 0x34FBE60
	0x034FBE14 ADD X0, X31, 0xC
	0x034FBE18 MOV X1, X31
	0x034FBE1C BL 0x3319BB4
	0x034FBE20 ADRP X8, 0xC38000
	0x034FBE24 LDR X8, [X8 + 0xC58]
	0x034FBE28 MOV X2, X31
	0x034FBE2C LDR X1, [X8]

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, 0xEE5000
	007 Move W8, [X19+2635]
	008 Move X20, X1
	009 Move X21, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xC39000
	015 Move X0, [X0+3056]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X19+2635], W8
	019 Compare X20, 0
	020 JumpIfEqual {63}
	021 Move W8, 4
	022 NotImplemented "Instruction STRH not yet implemented."
	023 Move [X20+18], W31
	024 Move [X20+24], X31
	025 Move [X20+20], W31
	026 Move [X20+36], X31
	027 Move [X20+52], X31
	028 Move [X20+44], X31
	029 Move [X20+57], X31
	030 Move [X20+76], X31
	031 Move [X20+68], X31
	032 Move [X20+32], W8
	033 Move [X20+84], W31
	034 Move X19, [X21+16]
	035 Move [X31+12], W31
	036 Add X1, X31, 12
	037 Move X0, X19
	038 Move X2, X31
	039 Call Monitor.Enter, X0, X1
	040 Move X0, [X21+16]
	041 Compare X0, 0
	042 JumpIfEqual {66}
	043 Move X8, 0xC39000
	044 Move X8, [X8+3056]
	045 Move X2, [X8]
	046 Move X1, X20
	047 Call Stack`1<Object>.Push, X0, X1
	048 Move X20, X31
	049 Move W8, [X31+12]
	050 Compare W8, 0
	051 JumpIfEqual {55}
	052 Move X0, X19
	053 Move X1, X31
	054 Call Monitor.Exit, X0
	055 Compare X20, 0
	056 JumpIfNotEqual {64}
	057 Move X20, [X31+32]
	058 Move X19, [X31+40]
	059 Move X30, [X31+16]
	060 Move X21, [X31+24]
	061 Add X31, X31, 48
	062 Return 
	063 Call 0x1C17F20
	064 Move X0, X20
	065 Call 0x1C17F18
	066 Call 0x1C17F20
	067 Move X21, X0
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Move X0, X21
	070 Call 0x3EB2AD0
	071 Move X20, [X0]
	072 Call 0x3EB2AE0
	073 Move X20, X31
	074 Move X21, X0
	075 Move W8, [X31+12]
	076 Compare W8, 0
	077 JumpIfEqual {81}
	078 Move X0, X19
	079 Move X1, X31
	080 Call Monitor.Exit, X0
	081 Compare X20, 0
	082 JumpIfNotEqual {85}
	083 Move X0, X21
	084 Call 0x1D2D690
	085 Move X0, X20
	086 Call 0x1C17F18
	087 Call 0x1991590

Method: System.Void .ctor()

Disassembly:
	0x034F0334 CBNZ X20, 0x34F0340
	0x034F0338 MOV X0, X21
	0x034F033C BL 0x1D2C690
	0x034F0340 MOV X0, X20
	0x034F0344 BL 0x1C16F18
	0x034F0348 BL 0x1990590
	0x034F034C SUB X31, X31, 0x40
	0x034F0350 STR X30, [X31 + 0x10]
	0x034F0354 STP X22, X21, [X31 + 0x20]
	0x034F0358 STP X20, X19, [X31 + 0x30]
	0x034F035C ADRP X20, 0xEEF000
	0x034F0360 LDRB W8, [X20 + 0xA21]
	0x034F0364 MOV X19, X0
	0x034F0368 TBNZ X8, 0x0, 0x34F0380
	0x034F036C ADRP X0, 0xC43000
	0x034F0370 LDR X0, [X0 + 0x7C0]
	0x034F0374 BL 0x1C16CF4
	0x034F0378 MOVZ W8, 0x1
	0x034F037C STRB W8, [X20 + 0xA21]
	0x034F0380 STRB W31, [X31 + 0x1C]
	0x034F0384 STRB W31, [X31 + 0x18]
	0x034F0388 STRB W31, [X31 + 0xC]
	0x034F038C LDRB W8, [X19 + 0x40]
	0x034F0390 ORR W8, W8, 0x4
	0x034F0394 CMP W8, 0x4
	0x034F0398 B.EQ 0x34F0594
	0x034F039C LDR X20, [X19 + 0x128]
	0x034F03A0 CBZ X20, 0x34F0410
	0x034F03A4 STRB W31, [X31 + 0x1C]
	0x034F03A8 ADD X1, X31, 0x1C
	0x034F03AC MOV X0, X20

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xEF0000
	007 Move X22, 0xC44000
	008 Move X20, 0xC44000
	009 Move W8, [X21+2636]
	010 Move X22, [X22+1920]
	011 Move X20, [X20+1928]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0xC44000
	018 Move X0, [X0+1928]
	019 Call 0x1C17CF4
	020 Move X0, 0xC44000
	021 Move X0, [X0+1920]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+2636], W8
	025 Move X0, [X22]
	026 Call 0x1C17F10
	027 Move X1, [X20]
	028 Move X20, X0
	029 Call Stack`1<Object>..ctor, X0
	030 Move [X19+16], X20
	031 Move X0, X19
	032 Move X20, [X31+32]
	033 Move X19, [X31+40]
	034 Move X22, [X31+16]
	035 Move X21, [X31+24]
	036 Move X1, X31
	037 Move X30, [X31+48]
	038 Call Object..ctor, X0
	039 Return 

