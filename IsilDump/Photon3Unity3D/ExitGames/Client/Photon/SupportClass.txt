Type: ExitGames.Client.Photon.SupportClass

Method: System.Collections.Generic.List`1<System.Reflection.MethodInfo> GetMethods(System.Type type, System.Type attribute)

Disassembly:
	0x03520464 LDR X21, [X21 + 0x6C0]
	0x03520468 LDR X8, [X20]
	0x0352046C LDR X1, [X28]
	0x03520470 LDRH W9, [X8 + 0x12E]
	0x03520474 CBZ X9, 0x3520498
	0x03520478 LDR X10, [X8 + 0xB0]
	0x0352047C ADD X10, X10, 0x8
	0x03520480 LDUR X11, [X10 - 0x8]
	0x03520484 CMP X11, X1
	0x03520488 B.EQ 0x35204A8
	0x0352048C SUBS X9, X9, 0x1
	0x03520490 ADD X10, X10, 0x10
	0x03520494 B.NE 0x3520480
	0x03520498 MOV X0, X20
	0x0352049C MOV W2, W31
	0x035204A0 BL 0x1C5C788
	0x035204A4 B 0x35204B4
	0x035204A8 LDRSW X9, [X10]
	0x035204AC ADD X8, X8, X9, 0x4, LSL
	0x035204B0 ADD X0, X8, 0x138
	0x035204B4 LDP X8, X1, [X0]
	0x035204B8 MOV X0, X20
	0x035204BC BLR X8
	0x035204C0 TBZ X0, 0x0, 0x3520CEC
	0x035204C4 LDR X8, [X20]
	0x035204C8 LDR X1, [X28]
	0x035204CC LDRH W9, [X8 + 0x12E]
	0x035204D0 CBZ X9, 0x35204F4
	0x035204D4 LDR X10, [X8 + 0xB0]
	0x035204D8 ADD X10, X10, 0x8
	0x035204DC LDUR X11, [X10 - 0x8]
	0x035204E0 CMP X11, X1
	0x035204E4 B.EQ 0x3520504
	0x035204E8 SUBS X9, X9, 0x1
	0x035204EC ADD X10, X10, 0x10
	0x035204F0 B.NE 0x35204DC
	0x035204F4 MOVZ W2, 0x1
	0x035204F8 MOV X0, X20
	0x035204FC BL 0x1C5C788
	0x03520500 B 0x3520514
	0x03520504 LDR W9, [X10]
	0x03520508 ADD W9, W9, 0x1
	0x0352050C ADD X8, X8, W9, 0x4, SXTW
	0x03520510 ADD X0, X8, 0x138
	0x03520514 LDP X8, X1, [X0]
	0x03520518 MOV X0, X20
	0x0352051C BLR X8
	0x03520520 MOV X23, X0
	0x03520524 MOV X0, X19
	0x03520528 MOV X1, X31
	0x0352052C BL 0x323260C
	0x03520530 CMP W0, 0x1
	0x03520534 B.LE 0x3520550
	0x03520538 ADRP X8, 0xBD3000
	0x0352053C LDR X8, [X8 + 0x838]
	0x03520540 LDR X1, [X8]
	0x03520544 MOV X0, X19
	0x03520548 MOV X2, X31
	0x0352054C BL 0x32333E0
	0x03520550 LDR X8, [X22]
	0x03520554 LDR X1, [X29]
	0x03520558 LDRH W9, [X8 + 0x12E]
	0x0352055C CBZ X9, 0x3520580
	0x03520560 LDR X10, [X8 + 0xB0]
	0x03520564 ADD X10, X10, 0x8
	0x03520568 LDUR X11, [X10 - 0x8]
	0x0352056C CMP X11, X1
	0x03520570 B.EQ 0x3520590
	0x03520574 SUBS X9, X9, 0x1
	0x03520578 ADD X10, X10, 0x10
	0x0352057C B.NE 0x3520568
	0x03520580 MOV X0, X22
	0x03520584 MOV W2, W31
	0x03520588 BL 0x1C5C788
	0x0352058C B 0x352059C
	0x03520590 LDRSW X9, [X10]
	0x03520594 ADD X8, X8, X9, 0x4, LSL
	0x03520598 ADD X0, X8, 0x138
	0x0352059C LDP X8, X2, [X0]
	0x035205A0 MOV X0, X22
	0x035205A4 MOV X1, X23
	0x035205A8 BLR X8
	0x035205AC CBZ X0, 0x35205F0
	0x035205B0 LDR X8, [X22]
	0x035205B4 LDR X1, [X29]
	0x035205B8 LDRH W9, [X8 + 0x12E]
	0x035205BC CBZ X9, 0x35205E0
	0x035205C0 LDR X10, [X8 + 0xB0]
	0x035205C4 ADD X10, X10, 0x8
	0x035205C8 LDUR X11, [X10 - 0x8]
	0x035205CC CMP X11, X1
	0x035205D0 B.EQ 0x352062C
	0x035205D4 SUBS X9, X9, 0x1
	0x035205D8 ADD X10, X10, 0x10
	0x035205DC B.NE 0x35205C8
	0x035205E0 MOV X0, X22
	0x035205E4 MOV W2, W31
	0x035205E8 BL 0x1C5C788
	0x035205EC B 0x3520638
	0x035205F0 LDR X0, [X21]
	0x035205F4 ADRP X9, 0xBDD000
	0x035205F8 LDR W8, [X0 + 0xE0]
	0x035205FC LDR X9, [X9 + 0x968]
	0x03520600 LDR X24, [X9]
	0x03520604 CBNZ W8, 0x352060C
	0x03520608 BL 0x1C16DFC
	0x0352060C MOV X0, X24
	0x03520610 MOV X1, X31
	0x03520614 BL 0x338C698
	0x03520618 ADRP X8, 0xBD3000
	0x0352061C LDR X8, [X8 + 0x830]
	0x03520620 MOV X24, X0
	0x03520624 LDR X25, [X8]
	0x03520628 B 0x35206C8
	0x0352062C LDRSW X9, [X10]
	0x03520630 ADD X8, X8, X9, 0x4, LSL

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X22, 0xEC0000
	011 Move X24, 0xC05000
	012 Move X20, 0xC05000
	013 Move X23, 0xBD4000
	014 Move W8, [X22+2864]
	015 Move X24, [X24+2736]
	016 Move X20, [X20+2728]
	017 Move X23, [X23+1728]
	018 Move X19, X1
	019 Move X21, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {38}
	024 Move X0, 0xC05000
	025 Move X0, [X0+2712]
	026 Call 0x1C17CF4
	027 Move X0, 0xC05000
	028 Move X0, [X0+2728]
	029 Call 0x1C17CF4
	030 Move X0, 0xC05000
	031 Move X0, [X0+2736]
	032 Call 0x1C17CF4
	033 Move X0, 0xBD4000
	034 Move X0, [X0+1728]
	035 Call 0x1C17CF4
	036 Move W8, 1
	037 Move [X22+2864], W8
	038 Move X0, [X24]
	039 Call 0x1C17F10
	040 Move X1, [X20]
	041 Move X20, X0
	042 Call List`1<Object>..ctor, X0
	043 Move X0, [X23]
	044 Move W8, [X0+224]
	045 Compare W8, 0
	046 JumpIfNotEqual {48}
	047 Call 0x1C17DFC
	048 Move X0, X21
	049 Move X1, X31
	050 Move X2, X31
	051 Call Type.op_Equality, X0, X1
	052 Move TEMP, X0
	053 And TEMP, TEMP, 1
	054 Compare TEMP, 1
	055 JumpIfEqual {127}
	056 Compare X21, 0
	057 JumpIfEqual {138}
	058 Move X8, [X21]
	059 Move W1, 52
	060 Move X0, X21
	061 Move X9, [X8+1880]
	062 Move X2, [X8+1888]
	063 NotImplemented "Instruction BLR not yet implemented."
	064 Compare X0, 0
	065 JumpIfEqual {138}
	066 Move X8, [X0+24]
	067 Move X21, X0
	068 NotImplemented "Instruction CMP not yet implemented."
	069 Move X26, 0xC05000
	070 Move X26, [X26+2712]
	071 Move X24, X31
	072 And X8, X8, 0
	073 Add X25, X21, 32
	074 NotImplemented "Instruction CMP not yet implemented."
	075 Move X0, [X23]
	076 Move X22, [X25]
	077 Move W8, [X0+224]
	078 Compare W8, 0
	079 JumpIfNotEqual {81}
	080 Call 0x1C17DFC
	081 Move X0, X19
	082 Move X1, X31
	083 Move X2, X31
	084 Call Type.op_Equality, X0, X1
	085 Move TEMP, X0
	086 And TEMP, TEMP, 1
	087 Compare TEMP, 1
	088 JumpIfEqual {102}
	089 Compare X22, 0
	090 JumpIfEqual {138}
	091 Move X8, [X22]
	092 Move X0, X22
	093 Move X1, X19
	094 Move W2, W31
	095 Move X9, [X8+488]
	096 Move X3, [X8+496]
	097 NotImplemented "Instruction BLR not yet implemented."
	098 Move TEMP, X0
	099 And TEMP, TEMP, 1
	100 Compare TEMP, 1
	101 JumpIfNotEqual {124}
	102 Compare X20, 0
	103 JumpIfEqual {138}
	104 Move W10, [X20+28]
	105 Move X8, [X20+16]
	106 Move X9, [X26]
	107 Add W10, W10, 1
	108 Move [X20+28], W10
	109 Compare X8, 0
	110 JumpIfEqual {138}
	111 NotImplemented "Instruction LDRSW not yet implemented."
	112 Move W11, [X8+24]
	113 NotImplemented "Instruction CMP not yet implemented."
	114 Add W9, W10, 1
	115 Add X8, X8, X10
	116 Move [X20+24], W9
	117 Move [X8+32], X22
	118 Move X8, [X9+32]
	119 Move X0, X20
	120 Move X1, X22
	121 Move X8, [X8+192]
	122 Move X2, [X8+112]
	123 Call List`1<Object>.AddWithResize, X0, X1
	124 Move W8, [X21+24]
	125 Add X24, X24, 1
	126 NotImplemented "Instruction CMP not yet implemented."
	127 Move X0, X20
	128 Move X20, [X31+64]
	129 Move X19, [X31+72]
	130 Move X22, [X31+48]
	131 Move X21, [X31+56]
	132 Move X24, [X31+32]
	133 Move X23, [X31+40]
	134 Move X26, [X31+16]
	135 Move X25, [X31+24]
	136 Move X30, [X31+80]
	137 Return X0
	138 Call 0x1C17F20
	139 Call 0x1C17F28

Method: System.Int32 GetTickCount()

Disassembly:
	0x03520634 ADD X0, X8, 0x138
	0x03520638 LDP X8, X2, [X0]
	0x0352063C MOV X0, X22
	0x03520640 MOV X1, X23
	0x03520644 BLR X8
	0x03520648 CBZ X0, 0x3520DC0
	0x0352064C MOV X1, X31
	0x03520650 BL 0x33BE520
	0x03520654 LDR X8, [X22]
	0x03520658 LDR X1, [X29]
	0x0352065C MOV X24, X0
	0x03520660 LDRH W9, [X8 + 0x12E]
	0x03520664 CBZ X9, 0x3520688
	0x03520668 LDR X10, [X8 + 0xB0]
	0x0352066C ADD X10, X10, 0x8
	0x03520670 LDUR X11, [X10 - 0x8]
	0x03520674 CMP X11, X1
	0x03520678 B.EQ 0x3520698
	0x0352067C SUBS X9, X9, 0x1
	0x03520680 ADD X10, X10, 0x10
	0x03520684 B.NE 0x3520670
	0x03520688 MOV X0, X22
	0x0352068C MOV W2, W31
	0x03520690 BL 0x1C5C788
	0x03520694 B 0x35206A4
	0x03520698 LDRSW X9, [X10]
	0x0352069C ADD X8, X8, X9, 0x4, LSL

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xEC0000
	005 Move X19, 0xBDC000
	006 Move W8, [X20+2865]
	007 Move X19, [X19+3680]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {17}
	012 Move X0, 0xBDC000
	013 Move X0, [X0+3680]
	014 Call 0x1C17CF4
	015 Move W8, 1
	016 Move [X20+2865], W8
	017 Move X0, [X19]
	018 Move W8, [X0+224]
	019 Compare W8, 0
	020 JumpIfNotEqual {23}
	021 Call 0x1C17DFC
	022 Move X0, [X19]
	023 Move X8, [X0+184]
	024 Move X8, [X8+16]
	025 Compare X8, 0
	026 JumpIfEqual {34}
	027 Move X2, [X8+24]
	028 Move X0, [X8+64]
	029 Move X1, [X8+40]
	030 Move X20, [X31+16]
	031 Move X19, [X31+24]
	032 Move X30, [X31+32]
	033 CallNoReturn X2
	034 Call 0x1C17F20

Method: System.Byte StartBackgroundCalls(System.Func`1<System.Boolean> myThread, System.Int32 millisecondsInterval = 100, System.String taskName = )

Disassembly:
	0x035206A0 ADD X0, X8, 0x138
	0x035206A4 LDP X8, X2, [X0]
	0x035206A8 MOV X0, X22
	0x035206AC MOV X1, X23
	0x035206B0 BLR X8
	0x035206B4 CBZ X0, 0x3520DC4
	0x035206B8 LDR X8, [X0]
	0x035206BC LDP X9, X1, [X8 + 0x168]
	0x035206C0 BLR X9
	0x035206C4 MOV X25, X0
	0x035206C8 LDR X0, [X21]
	0x035206CC ADRP X9, 0xC03000
	0x035206D0 LDR W8, [X0 + 0xE0]
	0x035206D4 LDR X9, [X9 + 0xF38]
	0x035206D8 LDR X26, [X9]
	0x035206DC CBNZ W8, 0x35206E4
	0x035206E0 BL 0x1C16DFC
	0x035206E4 MOV X0, X26
	0x035206E8 MOV X1, X31
	0x035206EC BL 0x338C698
	0x035206F0 MOV X1, X0
	0x035206F4 MOV X0, X24
	0x035206F8 MOV X2, X31
	0x035206FC BL 0x3395194
	0x03520700 TBNZ X0, 0x0, 0x3520740
	0x03520704 LDR X0, [X21]
	0x03520708 ADRP X9, 0xC14000
	0x0352070C LDR W8, [X0 + 0xE0]
	0x03520710 LDR X9, [X9 + 0x88]
	0x03520714 LDR X26, [X9]
	0x03520718 CBNZ W8, 0x3520720
	0x0352071C BL 0x1C16DFC
	0x03520720 MOV X0, X26
	0x03520724 MOV X1, X31
	0x03520728 BL 0x338C698
	0x0352072C MOV X1, X0
	0x03520730 MOV X0, X24
	0x03520734 MOV X2, X31
	0x03520738 BL 0x3395194
	0x0352073C TBZ X0, 0x0, 0x3520780
	0x03520740 LDR X8, [X22]
	0x03520744 LDR X1, [X29]
	0x03520748 LDRH W9, [X8 + 0x12E]
	0x0352074C CBZ X9, 0x3520770
	0x03520750 LDR X10, [X8 + 0xB0]
	0x03520754 ADD X10, X10, 0x8
	0x03520758 LDUR X11, [X10 - 0x8]
	0x0352075C CMP X11, X1
	0x03520760 B.EQ 0x35207FC
	0x03520764 SUBS X9, X9, 0x1
	0x03520768 ADD X10, X10, 0x10
	0x0352076C B.NE 0x3520758
	0x03520770 MOV X0, X22
	0x03520774 MOV W2, W31
	0x03520778 BL 0x1C5C788
	0x0352077C B 0x3520808
	0x03520780 LDR X0, [X21]
	0x03520784 ADRP X9, 0xC14000
	0x03520788 LDR W8, [X0 + 0xE0]
	0x0352078C LDR X9, [X9 + 0x698]
	0x03520790 LDR X26, [X9]
	0x03520794 CBNZ W8, 0x352079C
	0x03520798 BL 0x1C16DFC
	0x0352079C MOV X0, X26
	0x035207A0 MOV X1, X31
	0x035207A4 BL 0x338C698
	0x035207A8 MOV X1, X0
	0x035207AC MOV X0, X24
	0x035207B0 MOV X2, X31
	0x035207B4 BL 0x3395194
	0x035207B8 TBZ X0, 0x0, 0x352099C
	0x035207BC LDR X8, [X22]
	0x035207C0 LDR X1, [X29]
	0x035207C4 LDRH W9, [X8 + 0x12E]
	0x035207C8 CBZ X9, 0x35207EC
	0x035207CC LDR X10, [X8 + 0xB0]
	0x035207D0 ADD X10, X10, 0x8
	0x035207D4 LDUR X11, [X10 - 0x8]
	0x035207D8 CMP X11, X1
	0x035207DC B.EQ 0x3520A94
	0x035207E0 SUBS X9, X9, 0x1
	0x035207E4 ADD X10, X10, 0x10
	0x035207E8 B.NE 0x35207D4
	0x035207EC MOV X0, X22
	0x035207F0 MOV W2, W31
	0x035207F4 BL 0x1C5C788
	0x035207F8 B 0x3520AA0
	0x035207FC LDRSW X9, [X10]
	0x03520800 ADD X8, X8, X9, 0x4, LSL
	0x03520804 ADD X0, X8, 0x138
	0x03520808 LDP X8, X2, [X0]
	0x0352080C MOV X0, X22
	0x03520810 MOV X1, X23
	0x03520814 BLR X8
	0x03520818 ADRP X8, 0xBDB000
	0x0352081C LDR X8, [X8 + 0xE60]
	0x03520820 MOV X25, X0
	0x03520824 LDR X0, [X8]
	0x03520828 LDR W8, [X0 + 0xE0]
	0x0352082C CBNZ W8, 0x3520834
	0x03520830 BL 0x1C16DFC
	0x03520834 CBZ X25, 0x3520850
	0x03520838 LDR X26, [X29]
	0x0352083C MOV X0, X25
	0x03520840 MOV X1, X26
	0x03520844 BL 0x1C16E00
	0x03520848 CBNZ X0, 0x3520854
	0x0352084C B 0x3520DF4
	0x03520850 MOV X0, X31
	0x03520854 MOVZ W1, 0x1
	0x03520858 BL 0x35201B0
	0x0352085C MOV X25, X0
	0x03520860 LDR W8, [X31 + 0x8]
	0x03520864 TBZ X8, 0x0, 0x3520978
	0x03520868 ADRP X8, 0xBD3000
	0x0352086C LDR X8, [X8 + 0x9D0]
	0x03520870 LDR X0, [X8]
	0x03520874 MOVZ W1, 0x4
	0x03520878 BL 0x1C16D6C
	0x0352087C CBZ X23, 0x3520DC8
	0x03520880 MOV X26, X0
	0x03520884 MOV X0, X23
	0x03520888 MOV X1, X31
	0x0352088C BL 0x33BE520
	0x03520890 CBZ X0, 0x3520DCC
	0x03520894 LDR X8, [X0]
	0x03520898 LDP X9, X1, [X8 + 0x1A8]
	0x0352089C BLR X9
	0x035208A0 CBZ X26, 0x3520DE0
	0x035208A4 MOV X27, X0
	0x035208A8 CBZ X0, 0x35208C0
	0x035208AC LDR X8, [X26]
	0x035208B0 LDR X1, [X8 + 0x40]
	0x035208B4 MOV X0, X27
	0x035208B8 BL 0x1C16E00
	0x035208BC CBZ X0, 0x3520E0C
	0x035208C0 LDR W8, [X26 + 0x18]
	0x035208C4 CBZ W8, 0x3520DDC
	0x035208C8 LDR X8, [X26]
	0x035208CC STR X27, [X26 + 0x20]
	0x035208D0 LDR X1, [X8 + 0x40]
	0x035208D4 MOV X0, X23
	0x035208D8 BL 0x1C16E00
	0x035208DC CBZ X0, 0x3520DE8
	0x035208E0 LDR W8, [X26 + 0x18]
	0x035208E4 CMP W8, 0x1
	0x035208E8 B.LS 0x3520DD8
	0x035208EC STR X23, [X26 + 0x28]
	0x035208F0 CBZ X24, 0x3520DD4
	0x035208F4 LDR X8, [X24]
	0x035208F8 LDP X9, X1, [X8 + 0x1A8]
	0x035208FC MOV X0, X24
	0x03520900 BLR X9
	0x03520904 MOV X23, X0
	0x03520908 CBZ X0, 0x3520920
	0x0352090C LDR X8, [X26]
	0x03520910 LDR X1, [X8 + 0x40]
	0x03520914 MOV X0, X23
	0x03520918 BL 0x1C16E00
	0x0352091C CBZ X0, 0x3520E18
	0x03520920 LDR W8, [X26 + 0x18]
	0x03520924 CMP W8, 0x2
	0x03520928 B.LS 0x3520DD0
	0x0352092C STR X23, [X26 + 0x30]
	0x03520930 CBZ X25, 0x352094C
	0x03520934 LDR X8, [X26]
	0x03520938 LDR X1, [X8 + 0x40]
	0x0352093C MOV X0, X25
	0x03520940 BL 0x1C16E00
	0x03520944 CBZ X0, 0x3520E00
	0x03520948 LDR W8, [X26 + 0x18]
	0x0352094C CMP W8, 0x3
	0x03520950 B.LS 0x3520DE4
	0x03520954 STR X25, [X26 + 0x38]
	0x03520958 ADRP X8, 0xC14000
	0x0352095C LDR X8, [X8 + 0x6A0]
	0x03520960 LDR X1, [X8]
	0x03520964 MOV X0, X19
	0x03520968 MOV X2, X26
	0x0352096C MOV X3, X31
	0x03520970 BL 0x3234E54
	0x03520974 B 0x3520468
	0x03520978 ADRP X8, 0xBD3000
	0x0352097C LDR X8, [X8 + 0xEF8]
	0x03520980 LDR X1, [X8]
	0x03520984 MOV X0, X19
	0x03520988 MOV X2, X23
	0x0352098C MOV X3, X25
	0x03520990 MOV X4, X31
	0x03520994 BL 0x3234D98
	0x03520998 B 0x3520468
	0x0352099C LDR X0, [X21]
	0x035209A0 ADRP X9, 0xC05000
	0x035209A4 LDR W8, [X0 + 0xE0]
	0x035209A8 LDR X9, [X9 + 0x170]
	0x035209AC LDR X26, [X9]
	0x035209B0 CBNZ W8, 0x35209B8
	0x035209B4 BL 0x1C16DFC
	0x035209B8 MOV X0, X26
	0x035209BC MOV X1, X31
	0x035209C0 BL 0x338C698
	0x035209C4 MOV X1, X0
	0x035209C8 MOV X0, X24
	0x035209CC MOV X2, X31
	0x035209D0 BL 0x3395194
	0x035209D4 TBZ X0, 0x0, 0x3520A18
	0x035209D8 LDR X8, [X22]
	0x035209DC LDR X1, [X29]
	0x035209E0 LDRH W9, [X8 + 0x12E]
	0x035209E4 CBZ X9, 0x3520A08
	0x035209E8 LDR X10, [X8 + 0xB0]
	0x035209EC ADD X10, X10, 0x8
	0x035209F0 LDUR X11, [X10 - 0x8]
	0x035209F4 CMP X11, X1
	0x035209F8 B.EQ 0x3520B48
	0x035209FC SUBS X9, X9, 0x1
	0x03520A00 ADD X10, X10, 0x10
	0x03520A04 B.NE 0x35209F0
	0x03520A08 MOV X0, X22
	0x03520A0C MOV W2, W31
	0x03520A10 BL 0x1C5C788
	0x03520A14 B 0x3520B54
	0x03520A18 LDR X0, [X21]
	0x03520A1C ADRP X9, 0xC05000
	0x03520A20 LDR W8, [X0 + 0xE0]
	0x03520A24 LDR X9, [X9 + 0x118]
	0x03520A28 LDR X26, [X9]
	0x03520A2C CBNZ W8, 0x3520A34
	0x03520A30 BL 0x1C16DFC
	0x03520A34 MOV X0, X26
	0x03520A38 MOV X1, X31
	0x03520A3C BL 0x338C698
	0x03520A40 MOV X1, X0
	0x03520A44 MOV X0, X24
	0x03520A48 MOV X2, X31
	0x03520A4C BL 0x3395194
	0x03520A50 LDR X8, [X22]
	0x03520A54 LDR X1, [X29]
	0x03520A58 LDRH W9, [X8 + 0x12E]
	0x03520A5C TBZ X0, 0x0, 0x3520B14
	0x03520A60 CBZ W9, 0x3520A84
	0x03520A64 LDR X10, [X8 + 0xB0]
	0x03520A68 ADD X10, X10, 0x8
	0x03520A6C LDUR X11, [X10 - 0x8]
	0x03520A70 CMP X11, X1
	0x03520A74 B.EQ 0x3520BC8
	0x03520A78 SUBS X9, X9, 0x1
	0x03520A7C ADD X10, X10, 0x10
	0x03520A80 B.NE 0x3520A6C
	0x03520A84 MOV X0, X22
	0x03520A88 MOV W2, W31
	0x03520A8C BL 0x1C5C788
	0x03520A90 B 0x3520BD4
	0x03520A94 LDRSW X9, [X10]
	0x03520A98 ADD X8, X8, X9, 0x4, LSL
	0x03520A9C ADD X0, X8, 0x138
	0x03520AA0 LDP X8, X2, [X0]
	0x03520AA4 MOV X0, X22
	0x03520AA8 MOV X1, X23
	0x03520AAC BLR X8
	0x03520AB0 ADRP X8, 0xBDB000
	0x03520AB4 LDR X8, [X8 + 0xE60]
	0x03520AB8 MOV X25, X0
	0x03520ABC LDR X0, [X8]
	0x03520AC0 LDR W8, [X0 + 0xE0]
	0x03520AC4 CBNZ W8, 0x3520ACC
	0x03520AC8 BL 0x1C16DFC
	0x03520ACC CBZ X25, 0x3520B04
	0x03520AD0 ADRP X9, 0xC13000
	0x03520AD4 LDR X8, [X25]
	0x03520AD8 LDR X9, [X9 + 0xC18]
	0x03520ADC LDRB W10, [X8 + 0x130]
	0x03520AE0 LDR X1, [X9]
	0x03520AE4 LDRB W9, [X1 + 0x130]
	0x03520AE8 CMP W10, W9
	0x03520AEC B.CC 0x3520E24
	0x03520AF0 LDR X8, [X8 + 0xC8]
	0x03520AF4 ADD X8, X8, X9, 0x3, LSL
	0x03520AF8 LDUR X8, [X8 - 0x8]
	0x03520AFC CMP X8, X1
	0x03520B00 B.NE 0x3520E24
	0x03520B04 MOVZ W1, 0x1
	0x03520B08 MOV X0, X25
	0x03520B0C BL 0x3521028
	0x03520B10 B 0x352085C
	0x03520B14 CBZ W9, 0x3520B38
	0x03520B18 LDR X10, [X8 + 0xB0]
	0x03520B1C ADD X10, X10, 0x8
	0x03520B20 LDUR X11, [X10 - 0x8]
	0x03520B24 CMP X11, X1
	0x03520B28 B.EQ 0x3520C5C
	0x03520B2C SUBS X9, X9, 0x1
	0x03520B30 ADD X10, X10, 0x10
	0x03520B34 B.NE 0x3520B20
	0x03520B38 MOV X0, X22
	0x03520B3C MOV W2, W31
	0x03520B40 BL 0x1C5C788
	0x03520B44 B 0x3520C68
	0x03520B48 LDRSW X9, [X10]
	0x03520B4C ADD X8, X8, X9, 0x4, LSL
	0x03520B50 ADD X0, X8, 0x138
	0x03520B54 LDP X8, X2, [X0]
	0x03520B58 MOV X0, X22
	0x03520B5C MOV X1, X23
	0x03520B60 BLR X8
	0x03520B64 ADRP X8, 0xBD5000

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X20, 0xEC0000
	009 Move X23, 0xC15000
	010 Move W8, [X20+2866]
	011 Move X23, [X23+1568]
	012 Move X21, X2
	013 Move W22, W1
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {54}
	019 Move X0, 0xC15000
	020 Move X0, [X0+1576]
	021 Call 0x1C17CF4
	022 Move X0, 0xC15000
	023 Move X0, [X0+1584]
	024 Call 0x1C17CF4
	025 Move X0, 0xC15000
	026 Move X0, [X0+1592]
	027 Call 0x1C17CF4
	028 Move X0, 0xC15000
	029 Move X0, [X0+1600]
	030 Call 0x1C17CF4
	031 Move X0, 0xC15000
	032 Move X0, [X0+1608]
	033 Call 0x1C17CF4
	034 Move X0, 0xC15000
	035 Move X0, [X0+1616]
	036 Call 0x1C17CF4
	037 Move X0, 0xBDC000
	038 Move X0, [X0+3680]
	039 Call 0x1C17CF4
	040 Move X0, 0xC00000
	041 Move X0, [X0+464]
	042 Call 0x1C17CF4
	043 Move X0, 0xC00000
	044 Move X0, [X0+472]
	045 Call 0x1C17CF4
	046 Move X0, 0xC15000
	047 Move X0, [X0+1624]
	048 Call 0x1C17CF4
	049 Move X0, 0xC15000
	050 Move X0, [X0+1568]
	051 Call 0x1C17CF4
	052 Move W8, 1
	053 Move [X20+2866], W8
	054 Move X0, [X23]
	055 Call 0x1C17F10
	056 Move X1, X31
	057 Move X20, X0
	058 Call Object..ctor, X0
	059 Compare X20, 0
	060 JumpIfEqual {267}
	061 Move X23, 0xBDC000
	062 Move X23, [X23+3680]
	063 Move [X20+16], W22
	064 Move [X20+24], X19
	065 Move X0, [X23]
	066 Move W8, [X0+224]
	067 Compare W8, 0
	068 JumpIfNotEqual {71}
	069 Call 0x1C17DFC
	070 Move X0, [X23]
	071 Move X8, [X0+184]
	072 Move X19, [X8+8]
	073 Move [X31+12], W31
	074 Add X1, X31, 12
	075 Move X0, X19
	076 Move X2, X31
	077 Call Monitor.Enter, X0, X1
	078 Move X0, [X23]
	079 Move W8, [X0+224]
	080 Compare W8, 0
	081 JumpIfNotEqual {84}
	082 Call 0x1C17DFC
	083 Move X0, [X23]
	084 Move X8, [X0+184]
	085 Move X8, [X8]
	086 Compare X8, 0
	087 JumpIfNotEqual {105}
	088 Move X8, 0xC15000
	089 Move X8, [X8+1616]
	090 Move X0, [X8]
	091 Call 0x1C17F10
	092 Move X8, 0xC15000
	093 Move X8, [X8+1584]
	094 Move X22, X0
	095 Move X1, [X8]
	096 Call List`1<Object>..ctor, X0
	097 Move X0, [X23]
	098 Move W8, [X0+224]
	099 Compare W8, 0
	100 JumpIfNotEqual {103}
	101 Call 0x1C17DFC
	102 Move X0, [X23]
	103 Move X8, [X0+184]
	104 Move [X8], X22
	105 Move X8, 0xC00000
	106 Move X8, [X8+464]
	107 Move X0, [X8]
	108 Call 0x1C17F10
	109 Move X8, 0xC15000
	110 Move X8, [X8+1624]
	111 Move X22, X0
	112 Move X2, [X8]
	113 Move X1, X20
	114 Move X3, X31
	115 Call ThreadStart..ctor, X0, X1, X2
	116 Move X8, 0xC00000
	117 Move X8, [X8+472]
	118 Move X0, [X8]
	119 Call 0x1C17F10
	120 Move X20, X0
	121 Move X1, X22
	122 Move X2, X31
	123 Call Thread..ctor, X0, X1
	124 Move X0, X21
	125 Move X1, X31
	126 Call String.IsNullOrEmpty, X0
	127 Move TEMP, X0
	128 And TEMP, TEMP, 1
	129 Compare TEMP, 1
	130 JumpIfNotEqual {134}
	131 Compare X20, 0
	132 JumpIfNotEqual {140}
	133 Call 0x1C17F20
	134 Compare X20, 0
	135 JumpIfEqual {290}
	136 Move X0, X20
	137 Move X1, X21
	138 Move X2, X31
	139 Call Thread.set_Name, X0, X1
	140 Move W1, 1
	141 Move X0, X20
	142 Move X2, X31
	143 Call Thread.set_IsBackground, X0, X1
	144 Move X0, X20
	145 Move X1, X31
	146 Call Thread.Start, X0
	147 Move X24, 0xC15000
	148 Move X22, 0xC15000
	149 Move X24, [X24+1600]
	150 Move X22, [X22+1576]
	151 Move W21, W31
	152 Move X9, [X23]
	153 Move W8, [X9+224]
	154 Compare W8, 0
	155 JumpIfNotEqual {159}
	156 Move X0, X9
	157 Call 0x1C17DFC
	158 Move X9, [X23]
	159 Move X8, [X9+184]
	160 Move X8, [X8]
	161 Compare X8, 0
	162 JumpIfEqual {265}
	163 Move W11, [X8+24]
	164 Move W10, [X9+224]
	165 NotImplemented "Instruction CMP not yet implemented."
	166 Compare W10, 0
	167 JumpIfNotEqual {175}
	168 Move X0, X9
	169 Call 0x1C17DFC
	170 Move X8, [X23]
	171 Move X8, [X8+184]
	172 Move X8, [X8]
	173 Compare X8, 0
	174 JumpIfEqual {266}
	175 Move X2, [X24]
	176 Move X0, X8
	177 Move W1, W21
	178 Call List`1<Object>.get_Item, X0, X1
	179 Compare X0, 0
	180 JumpIfEqual {217}
	181 Add W21, W21, 1
	182 Compare W10, 0
	183 JumpIfNotEqual {191}
	184 Move X0, X9
	185 Call 0x1C17DFC
	186 Move X9, [X23]
	187 Move X8, [X9+184]
	188 Move X8, [X8]
	189 Compare X8, 0
	190 JumpIfEqual {292}
	191 Move W10, [X8+24]
	192 NotImplemented "Instruction CMP not yet implemented."
	193 Move W10, [X9+224]
	194 Compare W10, 0
	195 JumpIfNotEqual {203}
	196 Move X0, X9
	197 Call 0x1C17DFC
	198 Move X8, [X23]
	199 Move X8, [X8+184]
	200 Move X8, [X8]
	201 Compare X8, 0
	202 JumpIfEqual {293}
	203 Move W11, [X8+28]
	204 Move X9, [X8+16]
	205 Move X10, [X22]
	206 Add W11, W11, 1
	207 Move [X8+28], W11
	208 Compare X9, 0
	209 JumpIfEqual {288}
	210 NotImplemented "Instruction LDRSW not yet implemented."
	211 Move W12, [X9+24]
	212 NotImplemented "Instruction CMP not yet implemented."
	213 Add W10, W11, 1
	214 Add X9, X9, X11
	215 Move [X8+24], W10
	216 Move [X9+32], X20
	217 Move X0, [X23]
	218 Move W8, [X0+224]
	219 Compare W8, 0
	220 JumpIfNotEqual {223}
	221 Call 0x1C17DFC
	222 Move X0, [X23]
	223 Move X8, [X0+184]
	224 Move X0, [X8]
	225 Compare X0, 0
	226 JumpIfEqual {291}
	227 Move X8, 0xC15000
	228 Move X8, [X8+1608]
	229 Move X3, [X8]
	230 Move W1, W21
	231 Move X2, X20
	232 Call List`1<Object>.set_Item, X0, X1, X2
	233 Move X22, X31
	234 Move X9, [X10+32]
	235 Move X9, [X9+192]
	236 Move X2, [X9+112]
	237 Move X0, X8
	238 Move X1, X20
	239 Call List`1<Object>.AddWithResize, X0, X1
	240 Move X8, [X23]
	241 Move X8, [X8+184]
	242 Move X8, [X8]
	243 Compare X8, 0
	244 JumpIfEqual {289}
	245 Move W8, [X8+24]
	246 Move X22, X31
	247 Subtract W21, W8, 1
	248 Move W8, [X31+12]
	249 Compare W8, 0
	250 JumpIfEqual {254}
	251 Move X0, X19
	252 Move X1, X31
	253 Call Monitor.Exit, X0
	254 Compare X22, 0
	255 JumpIfNotEqual {268}
	256 Move W0, W21
	257 Move X20, [X31+48]
	258 Move X19, [X31+56]
	259 Move X22, [X31+32]
	260 Move X21, [X31+40]
	261 Move X24, [X31+16]
	262 Move X23, [X31+24]
	263 Move X30, [X31+64]
	264 Return X0
	265 Call 0x1C17F20
	266 Call 0x1C17F20
	267 Call 0x1C17F20
	268 Move X0, X22
	269 Call 0x1C17F18
	270 Move X0, 0xBD4000
	271 Move X0, [X0+2880]
	272 Call 0x1C17D08
	273 Call 0x1C17F10
	274 Move X20, X0
	275 Move X0, 0xC15000
	276 Move X0, [X0+1632]
	277 Call 0x1C17D08
	278 Move X1, X0
	279 Move X0, X20
	280 Move X2, X31
	281 Call NotSupportedException..ctor, X0, X1
	282 Move X0, 0xC15000
	283 Move X0, [X0+1640]
	284 Call 0x1C17D08
	285 Move X1, X0
	286 Move X0, X20
	287 Call 0x1C17DEC
	288 Call 0x1C17F20
	289 Call 0x1C17F20
	290 Call 0x1C17F20
	291 Call 0x1C17F20
	292 Call 0x1C17F20
	293 Call 0x1C17F20
	294 Move X20, X0
	295 NotImplemented "Instruction CMP not yet implemented."
	296 Move X0, X20
	297 Call 0x3EB2AD0
	298 Move X22, [X0]
	299 Call 0x3EB2AE0
	300 Move W21, W31
	301 Move X22, X31
	302 Move X20, X0
	303 Move W8, [X31+12]
	304 Compare W8, 0
	305 JumpIfEqual {309}
	306 Move X0, X19
	307 Move X1, X31
	308 Call Monitor.Exit, X0
	309 Compare X22, 0
	310 JumpIfNotEqual {313}
	311 Move X0, X20
	312 Call 0x1D2D690
	313 Move X0, X22
	314 Call 0x1C17F18
	315 Call 0x1991590

Method: System.Boolean StopBackgroundCalls(System.Byte id)

Disassembly:
	0x03520B70 LDR X25, [X8]
	0x03520B74 CBZ X0, 0x3520B9C
	0x03520B78 ADRP X8, 0xBD3000
	0x03520B7C LDR X8, [X8 + 0xAC8]
	0x03520B80 LDR X27, [X8]
	0x03520B84 MOV X0, X26
	0x03520B88 MOV X1, X27
	0x03520B8C BL 0x1C16E00
	0x03520B90 MOV X1, X0
	0x03520B94 CBNZ X1, 0x3520BA0
	0x03520B98 B 0x3520E30
	0x03520B9C MOV X1, X31
	0x03520BA0 MOV X0, X25
	0x03520BA4 MOV X2, X31
	0x03520BA8 BL 0x3227FF8
	0x03520BAC MOV X1, X0
	0x03520BB0 ADRP X8, 0xC14000
	0x03520BB4 LDR X8, [X8 + 0x6A8]
	0x03520BB8 LDR X0, [X8]
	0x03520BBC MOV X2, X31
	0x03520BC0 BL 0x321EFD0
	0x03520BC4 B 0x352085C
	0x03520BC8 LDRSW X9, [X10]
	0x03520BCC ADD X8, X8, X9, 0x4, LSL
	0x03520BD0 ADD X0, X8, 0x138
	0x03520BD4 LDP X8, X2, [X0]
	0x03520BD8 MOV X0, X22
	0x03520BDC MOV X1, X23
	0x03520BE0 BLR X8
	0x03520BE4 MOV X25, X0
	0x03520BE8 CBZ X0, 0x3520E60
	0x03520BEC ADRP X8, 0xBD3000
	0x03520BF0 LDR X8, [X8 + 0x618]
	0x03520BF4 LDR X26, [X8]
	0x03520BF8 MOV X0, X25
	0x03520BFC MOV X1, X26
	0x03520C00 BL 0x1C16E00
	0x03520C04 CBZ X0, 0x3520E54
	0x03520C08 ADRP X8, 0xBD3000
	0x03520C0C LDR X8, [X8 + 0x618]
	0x03520C10 LDR X26, [X8]
	0x03520C14 MOV X0, X25
	0x03520C18 MOV X1, X26
	0x03520C1C BL 0x1C16E00
	0x03520C20 CBZ X0, 0x3520E48
	0x03520C24 ADRP X9, 0xBD3000
	0x03520C28 LDR X8, [X0 + 0x18]
	0x03520C2C LDR X9, [X9 + 0x758]
	0x03520C30 STR W8, [X31 + 0xC]
	0x03520C34 LDR X0, [X9]
	0x03520C38 ADD X1, X31, 0xC
	0x03520C3C BL 0x1C16E04
	0x03520C40 MOV X1, X0
	0x03520C44 ADRP X8, 0xC14000
	0x03520C48 LDR X8, [X8 + 0x6B0]
	0x03520C4C LDR X0, [X8]
	0x03520C50 MOV X2, X31
	0x03520C54 BL 0x321EFD0
	0x03520C58 B 0x352085C
	0x03520C5C LDRSW X9, [X10]
	0x03520C60 ADD X8, X8, X9, 0x4, LSL
	0x03520C64 ADD X0, X8, 0x138
	0x03520C68 LDP X8, X2, [X0]
	0x03520C6C MOV X0, X22
	0x03520C70 MOV X1, X23
	0x03520C74 BLR X8
	0x03520C78 MOV X8, X0
	0x03520C7C CBZ X0, 0x3520860
	0x03520C80 ADRP X10, 0xBFC000
	0x03520C84 LDR X9, [X8]
	0x03520C88 LDR X10, [X10 + 0x6F8]
	0x03520C8C LDRB W12, [X9 + 0x130]
	0x03520C90 LDR X10, [X10]
	0x03520C94 LDRB W11, [X10 + 0x130]
	0x03520C98 CMP W12, W11
	0x03520C9C B.CC 0x3520860
	0x03520CA0 LDR X12, [X9 + 0xC8]
	0x03520CA4 ADD X11, X12, X11, 0x3, LSL
	0x03520CA8 LDUR X11, [X11 - 0x8]
	0x03520CAC CMP X11, X10
	0x03520CB0 B.NE 0x3520860
	0x03520CB4 LDP X10, X2, [X9 + 0x1B8]
	0x03520CB8 LDR W9, [X31 + 0x8]
	0x03520CBC MOV X0, X8
	0x03520CC0 AND W1, W9, 0x1
	0x03520CC4 BLR X10
	0x03520CC8 ADRP X8, 0xBD3000
	0x03520CCC LDR X8, [X8 + 0xEF8]
	0x03520CD0 MOV X3, X0
	0x03520CD4 LDR X1, [X8]
	0x03520CD8 MOV X0, X19
	0x03520CDC MOV X2, X23
	0x03520CE0 MOV X4, X31
	0x03520CE4 BL 0x3234D98
	0x03520CE8 B 0x3520468
	0x03520CEC ADRP X23, 0xBD3000
	0x03520CF0 LDR X23, [X23 + 0xE00]
	0x03520CF4 MOV X22, X31
	0x03520CF8 MOVZ W21, 0x13
	0x03520CFC LDR X1, [X23]
	0x03520D00 MOV X0, X20
	0x03520D04 BL 0x1C16E00
	0x03520D08 CBZ X0, 0x3520D68
	0x03520D0C LDR X8, [X0]
	0x03520D10 LDR X1, [X23]
	0x03520D14 MOV X20, X0
	0x03520D18 LDRH W9, [X8 + 0x12E]
	0x03520D1C CBZ X9, 0x3520D40
	0x03520D20 LDR X10, [X8 + 0xB0]
	0x03520D24 ADD X10, X10, 0x8
	0x03520D28 LDUR X11, [X10 - 0x8]
	0x03520D2C CMP X11, X1
	0x03520D30 B.EQ 0x3520D50
	0x03520D34 SUBS X9, X9, 0x1
	0x03520D38 ADD X10, X10, 0x10
	0x03520D3C B.NE 0x3520D28
	0x03520D40 MOV X0, X20
	0x03520D44 MOV W2, W31
	0x03520D48 BL 0x1C5C788
	0x03520D4C B 0x3520D5C
	0x03520D50 LDRSW X9, [X10]
	0x03520D54 ADD X8, X8, X9, 0x4, LSL
	0x03520D58 ADD X0, X8, 0x138
	0x03520D5C LDP X8, X1, [X0]
	0x03520D60 MOV X0, X20
	0x03520D64 BLR X8
	0x03520D68 CBNZ X22, 0x3520E40
	0x03520D6C CMP W21, 0x13
	0x03520D70 B.EQ 0x3520D78
	0x03520D74 CBNZ W21, 0x3520DA0
	0x03520D78 ADRP X8, 0xBDE000
	0x03520D7C LDR X8, [X8 + 0x6D8]
	0x03520D80 MOV X0, X19
	0x03520D84 MOV X2, X31
	0x03520D88 LDR X1, [X8]
	0x03520D8C BL 0x32333E0
	0x03520D90 LDR X8, [X19]
	0x03520D94 MOV X0, X19
	0x03520D98 LDP X9, X1, [X8 + 0x168]
	0x03520D9C BLR X9
	0x03520DA0 LDP X20, X19, [X31 + 0x60]
	0x03520DA4 LDP X22, X21, [X31 + 0x50]
	0x03520DA8 LDP X24, X23, [X31 + 0x40]
	0x03520DAC LDP X26, X25, [X31 + 0x30]
	0x03520DB0 LDP X28, X27, [X31 + 0x20]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X19, 0xEC0000
	007 Move X21, 0xBDC000
	008 Move W8, [X19+2867]
	009 Move X21, [X21+3680]
	010 Move W20, W0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {29}
	015 Move X0, 0xC15000
	016 Move X0, [X0+1592]
	017 Call 0x1C17CF4
	018 Move X0, 0xC15000
	019 Move X0, [X0+1600]
	020 Call 0x1C17CF4
	021 Move X0, 0xC15000
	022 Move X0, [X0+1608]
	023 Call 0x1C17CF4
	024 Move X0, 0xBDC000
	025 Move X0, [X0+3680]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X19+2867], W8
	029 Move X0, [X21]
	030 Move W8, [X0+224]
	031 Compare W8, 0
	032 JumpIfNotEqual {35}
	033 Call 0x1C17DFC
	034 Move X0, [X21]
	035 Move X8, [X0+184]
	036 Move X19, [X8+8]
	037 Move [X31+12], W31
	038 Add X1, X31, 12
	039 Move X0, X19
	040 Move X2, X31
	041 Call Monitor.Enter, X0, X1
	042 Move X0, [X21]
	043 Move W8, [X0+224]
	044 Compare W8, 0
	045 JumpIfNotEqual {48}
	046 Call 0x1C17DFC
	047 Move X0, [X21]
	048 Move X8, [X0+184]
	049 Move X8, [X8]
	050 Compare X8, 0
	051 JumpIfEqual {111}
	052 Move W9, [X0+224]
	053 Compare W9, 0
	054 JumpIfNotEqual {61}
	055 Call 0x1C17DFC
	056 Move X0, [X21]
	057 Move X8, [X0+184]
	058 Move X8, [X8]
	059 Compare X8, 0
	060 JumpIfEqual {130}
	061 Move W9, [X8+24]
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Move W9, [X0+224]
	064 Compare W9, 0
	065 JumpIfNotEqual {72}
	066 Call 0x1C17DFC
	067 Move X8, [X21]
	068 Move X8, [X8+184]
	069 Move X8, [X8]
	070 Compare X8, 0
	071 JumpIfEqual {134}
	072 Move X22, 0xC15000
	073 Move X22, [X22+1600]
	074 And W20, W20, 255
	075 Move X2, [X22]
	076 Move X0, X8
	077 Move W1, W20
	078 Call List`1<Object>.get_Item, X0, X1
	079 Compare X0, 0
	080 JumpIfEqual {111}
	081 Move X0, [X21]
	082 Move W8, [X0+224]
	083 Compare W8, 0
	084 JumpIfNotEqual {87}
	085 Call 0x1C17DFC
	086 Move X0, [X21]
	087 Move X8, [X0+184]
	088 Move X0, [X8]
	089 Compare X0, 0
	090 JumpIfEqual {131}
	091 Move X2, [X22]
	092 Move W1, W20
	093 Call List`1<Object>.get_Item, X0, X1
	094 Compare X0, 0
	095 JumpIfEqual {132}
	096 Move X1, X31
	097 Call Thread.Abort, X0
	098 Move X8, [X21]
	099 Move X8, [X8+184]
	100 Move X0, [X8]
	101 Compare X0, 0
	102 JumpIfEqual {133}
	103 Move X8, 0xC15000
	104 Move X8, [X8+1608]
	105 Move X3, [X8]
	106 Move W1, W20
	107 Move X2, X31
	108 Call List`1<Object>.set_Item, X0, X1, X2
	109 Move X20, X31
	110 Move W21, 1
	111 Move X20, X31
	112 Move W21, W31
	113 Move W8, [X31+12]
	114 Compare W8, 0
	115 JumpIfEqual {119}
	116 Move X0, X19
	117 Move X1, X31
	118 Call Monitor.Exit, X0
	119 Compare X20, 0
	120 JumpIfNotEqual {128}
	121 Move W0, W21
	122 Move X20, [X31+32]
	123 Move X19, [X31+40]
	124 Move X22, [X31+16]
	125 Move X21, [X31+24]
	126 Move X30, [X31+48]
	127 Return X0
	128 Move X0, X20
	129 Call 0x1C17F18
	130 Call 0x1C17F20
	131 Call 0x1C17F20
	132 Call 0x1C17F20
	133 Call 0x1C17F20
	134 Call 0x1C17F20
	135 Move X21, X0
	136 NotImplemented "Instruction CMP not yet implemented."
	137 Move X0, X21
	138 Call 0x3EB2AD0
	139 Move X20, [X0]
	140 Call 0x3EB2AE0
	141 Move X20, X31
	142 Move X21, X0
	143 Move W8, [X31+12]
	144 Compare W8, 0
	145 JumpIfEqual {149}
	146 Move X0, X19
	147 Move X1, X31
	148 Call Monitor.Exit, X0
	149 Compare X20, 0
	150 JumpIfNotEqual {153}
	151 Move X0, X21
	152 Call 0x1D2D690
	153 Move X0, X20
	154 Call 0x1C17F18
	155 Call 0x1991590

Method: System.Boolean StopAllBackgroundCalls()

Disassembly:
	0x03520DB4 LDP X29, X30, [X31 + 0x10]
	0x03520DB8 ADD X31, X31, 0x70
	0x03520DBC RET
	0x03520DC0 BL 0x1C16F20
	0x03520DC4 BL 0x1C16F20
	0x03520DC8 BL 0x1C16F20
	0x03520DCC BL 0x1C16F20
	0x03520DD0 BL 0x1C16F28
	0x03520DD4 BL 0x1C16F20
	0x03520DD8 BL 0x1C16F28
	0x03520DDC BL 0x1C16F28
	0x03520DE0 BL 0x1C16F20
	0x03520DE4 BL 0x1C16F28
	0x03520DE8 BL 0x1C16F44
	0x03520DEC MOV X1, X31
	0x03520DF0 BL 0x1C16DEC
	0x03520DF4 MOV X0, X25
	0x03520DF8 MOV X1, X26
	0x03520DFC BL 0x1C171E0
	0x03520E00 BL 0x1C16F44
	0x03520E04 MOV X1, X31
	0x03520E08 BL 0x1C16DEC
	0x03520E0C BL 0x1C16F44
	0x03520E10 MOV X1, X31
	0x03520E14 BL 0x1C16DEC
	0x03520E18 BL 0x1C16F44
	0x03520E1C MOV X1, X31
	0x03520E20 BL 0x1C16DEC
	0x03520E24 MOV X0, X25
	0x03520E28 BL 0x1C171E0
	0x03520E2C BL 0x1C16F20
	0x03520E30 MOV X0, X26
	0x03520E34 MOV X1, X27
	0x03520E38 BL 0x1C171E0
	0x03520E3C BL 0x1C16F20
	0x03520E40 MOV X0, X22
	0x03520E44 BL 0x1C16F18
	0x03520E48 MOV X0, X25
	0x03520E4C MOV X1, X26
	0x03520E50 BL 0x1C171E0
	0x03520E54 MOV X0, X25
	0x03520E58 MOV X1, X26
	0x03520E5C BL 0x1C171E0
	0x03520E60 BL 0x1C16F20
	0x03520E64 B 0x3520F5C
	0x03520E68 B 0x3520F5C
	0x03520E6C B 0x3520F5C
	0x03520E70 B 0x3520F5C
	0x03520E74 B 0x3520F5C
	0x03520E78 B 0x3520F5C
	0x03520E7C B 0x3520F5C
	0x03520E80 B 0x3520F5C
	0x03520E84 B 0x3520F5C
	0x03520E88 B 0x3520F5C
	0x03520E8C B 0x3520F5C
	0x03520E90 B 0x3520F5C
	0x03520E94 B 0x3520F5C
	0x03520E98 B 0x3520F5C
	0x03520E9C B 0x3520F5C
	0x03520EA0 B 0x3520F5C
	0x03520EA4 B 0x3520F5C
	0x03520EA8 B 0x3520F5C
	0x03520EAC B 0x3520F5C
	0x03520EB0 B 0x3520F5C
	0x03520EB4 B 0x3520F5C
	0x03520EB8 B 0x3520F5C
	0x03520EBC B 0x3520F5C
	0x03520EC0 B 0x3520F5C
	0x03520EC4 B 0x3520F5C
	0x03520EC8 B 0x3520F5C
	0x03520ECC B 0x3520F5C
	0x03520ED0 B 0x3520F5C
	0x03520ED4 B 0x3520F5C
	0x03520ED8 B 0x3520F5C
	0x03520EDC B 0x3520F5C
	0x03520EE0 B 0x3520F5C
	0x03520EE4 B 0x3520F5C
	0x03520EE8 B 0x3520F5C
	0x03520EEC B 0x3520F5C
	0x03520EF0 B 0x3520F5C
	0x03520EF4 B 0x3520F5C
	0x03520EF8 B 0x3520F5C
	0x03520EFC B 0x3520F5C
	0x03520F00 B 0x3520F5C
	0x03520F04 B 0x3520F5C
	0x03520F08 B 0x3520F5C
	0x03520F0C B 0x3520F5C
	0x03520F10 B 0x3520F5C
	0x03520F14 B 0x3520F5C
	0x03520F18 B 0x3520F5C
	0x03520F1C B 0x3520F5C
	0x03520F20 B 0x3520F5C
	0x03520F24 B 0x3520F5C
	0x03520F28 B 0x3520F5C
	0x03520F2C B 0x3520F5C
	0x03520F30 B 0x3520F5C
	0x03520F34 B 0x3520F5C
	0x03520F38 B 0x3520F5C
	0x03520F3C B 0x3520F5C
	0x03520F40 B 0x3520F5C
	0x03520F44 B 0x3520F5C
	0x03520F48 B 0x3520F5C
	0x03520F4C B 0x3520F5C
	0x03520F50 B 0x3520F5C
	0x03520F54 B 0x3520F5C
	0x03520F58 B 0x3520F5C
	0x03520F5C ADRP X23, 0xBD3000
	0x03520F60 LDR X23, [X23 + 0xE00]
	0x03520F64 MOV X21, X0
	0x03520F68 CMP W1, 0x1
	0x03520F6C B.NE 0x3520F88
	0x03520F70 MOV X0, X21
	0x03520F74 BL 0x3EB1AD0
	0x03520F78 LDR X22, [X0]
	0x03520F7C BL 0x3EB1AE0
	0x03520F80 MOV W21, W31
	0x03520F84 B 0x3520CFC
	0x03520F88 MOV X22, X31
	0x03520F8C B 0x3520F94
	0x03520F90 MOV X21, X0
	0x03520F94 ADRP X8, 0xBD3000
	0x03520F98 LDR X8, [X8 + 0xE00]
	0x03520F9C LDR X1, [X8]
	0x03520FA0 MOV X0, X20
	0x03520FA4 BL 0x1C16E00
	0x03520FA8 MOV X19, X0
	0x03520FAC CBZ X0, 0x3521010
	0x03520FB0 LDR X8, [X19]
	0x03520FB4 ADRP X10, 0xBD3000
	0x03520FB8 LDRH W9, [X8 + 0x12E]
	0x03520FBC LDR X10, [X10 + 0xE00]
	0x03520FC0 LDR X1, [X10]
	0x03520FC4 CBZ X9, 0x3520FE8
	0x03520FC8 LDR X10, [X8 + 0xB0]
	0x03520FCC ADD X10, X10, 0x8
	0x03520FD0 LDUR X11, [X10 - 0x8]
	0x03520FD4 CMP X11, X1
	0x03520FD8 B.EQ 0x3520FF8
	0x03520FDC SUBS X9, X9, 0x1
	0x03520FE0 ADD X10, X10, 0x10
	0x03520FE4 B.NE 0x3520FD0
	0x03520FE8 MOV X0, X19
	0x03520FEC MOV W2, W31
	0x03520FF0 BL 0x1C5C788
	0x03520FF4 B 0x3521004
	0x03520FF8 LDRSW X9, [X10]
	0x03520FFC ADD X8, X8, X9, 0x4, LSL
	0x03521000 ADD X0, X8, 0x138
	0x03521004 LDP X8, X1, [X0]
	0x03521008 MOV X0, X19
	0x0352100C BLR X8
	0x03521010 CBNZ X22, 0x352101C
	0x03521014 MOV X0, X21
	0x03521018 BL 0x1D2C690
	0x0352101C MOV X0, X22
	0x03521020 BL 0x1C16F18
	0x03521024 BL 0x1990590
	0x03521028 SUB X31, X31, 0x90
	0x0352102C STP X29, X30, [X31 + 0x30]
	0x03521030 STP X28, X27, [X31 + 0x40]
	0x03521034 STP X26, X25, [X31 + 0x50]
	0x03521038 STP X24, X23, [X31 + 0x60]
	0x0352103C STP X22, X21, [X31 + 0x70]
	0x03521040 STP X20, X19, [X31 + 0x80]
	0x03521044 ADRP X19, 0xEBE000
	0x03521048 LDRB W8, [X19 + 0xB37]
	0x0352104C MOV W20, W1
	0x03521050 MOV X21, X0
	0x03521054 TBNZ X8, 0x0, 0x35211E0
	0x03521058 ADRP X0, 0xC04000
	0x0352105C LDR X0, [X0 + 0x118]
	0x03521060 BL 0x1C16CF4
	0x03521064 ADRP X0, 0xBD2000
	0x03521068 LDR X0, [X0 + 0x618]
	0x0352106C BL 0x1C16CF4
	0x03521070 ADRP X0, 0xBD3000
	0x03521074 LDR X0, [X0 + 0x9D8]
	0x03521078 BL 0x1C16CF4
	0x0352107C ADRP X0, 0xC13000
	0x03521080 LDR X0, [X0 + 0x88]
	0x03521084 BL 0x1C16CF4
	0x03521088 ADRP X0, 0xC02000
	0x0352108C LDR X0, [X0 + 0xF38]
	0x03521090 BL 0x1C16CF4
	0x03521094 ADRP X0, 0xBD2000
	0x03521098 LDR X0, [X0 + 0x818]
	0x0352109C BL 0x1C16CF4
	0x035210A0 ADRP X0, 0xBD2000
	0x035210A4 LDR X0, [X0 + 0x758]
	0x035210A8 BL 0x1C16CF4

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+64], X30
	003 Move [X31+80], X24
	004 Move [X31+88], X23
	005 Move [X31+96], X22
	006 Move [X31+104], X21
	007 Move [X31+112], X20
	008 Move [X31+120], X19
	009 Move X19, 0xEC0000
	010 Move X23, 0xBDC000
	011 Move W8, [X19+2868]
	012 Move X23, [X23+3680]
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {37}
	017 Move X0, 0xC15000
	018 Move X0, [X0+1648]
	019 Call 0x1C17CF4
	020 Move X0, 0xC15000
	021 Move X0, [X0+1656]
	022 Call 0x1C17CF4
	023 Move X0, 0xC15000
	024 Move X0, [X0+1664]
	025 Call 0x1C17CF4
	026 Move X0, 0xC15000
	027 Move X0, [X0+1672]
	028 Call 0x1C17CF4
	029 Move X0, 0xC15000
	030 Move X0, [X0+1680]
	031 Call 0x1C17CF4
	032 Move X0, 0xBDC000
	033 Move X0, [X0+3680]
	034 Call 0x1C17CF4
	035 Move W8, 1
	036 Move [X19+2868], W8
	037 Move X0, [X23]
	038 Move [X31+32], X31
	039 Move [X31+40], X31
	040 Move [X31+48], X31
	041 Move W8, [X0+224]
	042 Compare W8, 0
	043 JumpIfNotEqual {46}
	044 Call 0x1C17DFC
	045 Move X0, [X23]
	046 Move X8, [X0+184]
	047 Move X19, [X8+8]
	048 Move [X31+76], W31
	049 Add X1, X31, 76
	050 Move X0, X19
	051 Move X2, X31
	052 Call Monitor.Enter, X0, X1
	053 Move X0, [X23]
	054 Move W8, [X0+224]
	055 Compare W8, 0
	056 JumpIfNotEqual {59}
	057 Call 0x1C17DFC
	058 Move X0, [X23]
	059 Move X8, [X0+184]
	060 Move X8, [X8]
	061 Compare X8, 0
	062 JumpIfEqual {129}
	063 Move W8, [X0+224]
	064 Compare W8, 0
	065 JumpIfNotEqual {68}
	066 Call 0x1C17DFC
	067 Move X0, [X23]
	068 Move X8, [X0+184]
	069 Move X0, [X8]
	070 Compare X0, 0
	071 JumpIfEqual {156}
	072 Move X8, 0xC15000
	073 Move X8, [X8+1680]
	074 Move X1, [X8]
	075 Add X8, X31, 8
	076 Call List`1<Object>.GetEnumerator, X0
	077 NotImplemented "Instruction LDUR not yet implemented."
	078 Move X8, [X31+24]
	079 Move X20, 0xC15000
	080 Move X24, 0xC15000
	081 Move X20, [X20+1656]
	082 Move X24, [X24+1648]
	083 Move [X31+2], V0
	084 Move [X31+48], X8
	085 Move X1, [X20]
	086 Add X0, X31, 32
	087 Call Enumerator<Object>.MoveNext, X0
	088 Move TEMP, X0
	089 And TEMP, TEMP, 1
	090 Compare TEMP, 1
	091 JumpIfNotEqual {97}
	092 Move X0, [X31+48]
	093 Compare X0, 0
	094 JumpIfEqual {85}
	095 Move X1, X31
	096 Call Thread.Abort, X0
	097 Move X20, X31
	098 Move W22, 7
	099 Move X1, [X24]
	100 Add X0, X31, 32
	101 Call Enumerator<Object>.Dispose, X0
	102 Compare X20, 0
	103 JumpIfNotEqual {157}
	104 NotImplemented "Instruction CMP not yet implemented."
	105 Compare W22, 0
	106 JumpIfNotEqual {131}
	107 Move X0, [X23]
	108 Move W8, [X0+224]
	109 Compare W8, 0
	110 JumpIfNotEqual {113}
	111 Call 0x1C17DFC
	112 Move X0, [X23]
	113 Move X8, [X0+184]
	114 Move X8, [X8]
	115 Compare X8, 0
	116 JumpIfEqual {159}
	117 Move W2, [X8+24]
	118 Move W9, [X8+28]
	119 Add W9, W9, 1
	120 NotImplemented "Instruction CMP not yet implemented."
	121 Move [X8+24], W31
	122 Move [X8+28], W9
	123 Move X0, [X8+16]
	124 Move W1, W31
	125 Move X3, X31
	126 Call Array.Clear, X0, X1, X2
	127 Move X21, X31
	128 Move W22, 8
	129 Move X21, X31
	130 Move W22, 3
	131 Move X21, X31
	132 Move W8, [X31+76]
	133 Compare W8, 0
	134 JumpIfEqual {138}
	135 Move X0, X19
	136 Move X1, X31
	137 Call Monitor.Exit, X0
	138 Compare X21, 0
	139 JumpIfNotEqual {154}
	140 Or W8, W22, 8
	141 NotImplemented "Instruction CMP not yet implemented."
	142 Move W8, 1
	143 Move W8, W31
	144 Move X20, [X31+112]
	145 Move X19, [X31+120]
	146 Move X22, [X31+96]
	147 Move X21, [X31+104]
	148 Move X24, [X31+80]
	149 Move X23, [X31+88]
	150 Move X30, [X31+64]
	151 Move W0, W8
	152 Add X31, X31, 128
	153 Return X0
	154 Move X0, X21
	155 Call 0x1C17F18
	156 Call 0x1C17F20
	157 Move X0, X20
	158 Call 0x1C17F18
	159 Call 0x1C17F20
	160 Move X21, X1
	161 Move X22, X0
	162 Move X21, X1
	163 Move X22, X0
	164 NotImplemented "Instruction CMP not yet implemented."
	165 Move X0, X22
	166 Call 0x3EB2AD0
	167 Move X20, [X0]
	168 Call 0x3EB2AE0
	169 Move W22, W31
	170 Move X20, X31
	171 Move X1, [X24]
	172 Add X0, X31, 32
	173 Call Enumerator<Object>.Dispose, X0
	174 Compare X20, 0
	175 JumpIfNotEqual {183}
	176 NotImplemented "Instruction CMP not yet implemented."
	177 Move X0, X22
	178 Call 0x3EB2AD0
	179 Move X21, [X0]
	180 Call 0x3EB2AE0
	181 Move W22, W31
	182 Move X21, X31
	183 Move X0, X20
	184 Call 0x1C17F18
	185 Move X21, X1
	186 Move X22, X0
	187 Move X22, X0
	188 Move W8, [X31+76]
	189 Compare W8, 0
	190 JumpIfEqual {194}
	191 Move X0, X19
	192 Move X1, X31
	193 Call Monitor.Exit, X0
	194 Compare X21, 0
	195 JumpIfNotEqual {198}
	196 Move X0, X22
	197 Call 0x1D2D690
	198 Move X0, X21
	199 Call 0x1C17F18
	200 Call 0x1991590

Method: System.Void WriteStackTrace(System.Exception throwable, System.IO.TextWriter stream)

Disassembly:
	0x035210AC ADRP X0, 0xC13000
	0x035210B0 LDR X0, [X0 + 0x6B8]
	0x035210B4 BL 0x1C16CF4
	0x035210B8 ADRP X0, 0xC13000
	0x035210BC LDR X0, [X0 + 0x6C0]
	0x035210C0 BL 0x1C16CF4
	0x035210C4 ADRP X0, 0xC13000
	0x035210C8 LDR X0, [X0 + 0x6C8]
	0x035210CC BL 0x1C16CF4
	0x035210D0 ADRP X0, 0xC13000
	0x035210D4 LDR X0, [X0 + 0x6D0]
	0x035210D8 BL 0x1C16CF4
	0x035210DC ADRP X0, 0xBFB000
	0x035210E0 LDR X0, [X0 + 0x208]
	0x035210E4 BL 0x1C16CF4
	0x035210E8 ADRP X0, 0xC13000
	0x035210EC LDR X0, [X0 + 0x6D8]
	0x035210F0 BL 0x1C16CF4
	0x035210F4 ADRP X0, 0xC13000
	0x035210F8 LDR X0, [X0 + 0x698]
	0x035210FC BL 0x1C16CF4
	0x03521100 ADRP X0, 0xC12000
	0x03521104 LDR X0, [X0 + 0xC18]
	0x03521108 BL 0x1C16CF4
	0x0352110C ADRP X0, 0xBD2000
	0x03521110 LDR X0, [X0 + 0x9D0]
	0x03521114 BL 0x1C16CF4
	0x03521118 ADRP X0, 0xBDC000
	0x0352111C LDR X0, [X0 + 0x968]
	0x03521120 BL 0x1C16CF4
	0x03521124 ADRP X0, 0xBD2000
	0x03521128 LDR X0, [X0 + 0x8F0]
	0x0352112C BL 0x1C16CF4
	0x03521130 ADRP X0, 0xC04000
	0x03521134 LDR X0, [X0 + 0x170]
	0x03521138 BL 0x1C16CF4
	0x0352113C ADRP X0, 0xBD2000
	0x03521140 LDR X0, [X0 + 0xAC8]
	0x03521144 BL 0x1C16CF4
	0x03521148 ADRP X0, 0xBFB000
	0x0352114C LDR X0, [X0 + 0x6F8]
	0x03521150 BL 0x1C16CF4
	0x03521154 ADRP X0, 0xBDA000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Compare X0, 0
	005 JumpIfEqual {53}
	006 Move X8, [X0]
	007 Move X19, X1
	008 Move X20, X0
	009 Move X9, [X8+360]
	010 Move X1, [X8+368]
	011 NotImplemented "Instruction BLR not yet implemented."
	012 Move X1, X0
	013 Compare X19, 0
	014 JumpIfEqual {39}
	015 Move X8, [X19]
	016 Move X0, X19
	017 Move X9, [X8+632]
	018 Move X2, [X8+640]
	019 NotImplemented "Instruction BLR not yet implemented."
	020 Move X8, [X20]
	021 Move X0, X20
	022 Move X9, [X8+440]
	023 Move X1, [X8+448]
	024 NotImplemented "Instruction BLR not yet implemented."
	025 Move X8, [X19]
	026 Move X1, X0
	027 Move X0, X19
	028 Move X9, [X8+632]
	029 Move X2, [X8+640]
	030 NotImplemented "Instruction BLR not yet implemented."
	031 Move X8, [X19]
	032 Move X0, X19
	033 Move X20, [X31+16]
	034 Move X19, [X31+24]
	035 Move X2, [X8+472]
	036 Move X1, [X8+480]
	037 Move X30, [X31+32]
	038 CallNoReturn X2
	039 Move X0, X1
	040 Move X1, X31
	041 Call Debug.WriteLine, X0
	042 Move X8, [X20]
	043 Move X0, X20
	044 Move X9, [X8+440]
	045 Move X1, [X8+448]
	046 NotImplemented "Instruction BLR not yet implemented."
	047 Move X20, [X31+16]
	048 Move X19, [X31+24]
	049 Move X1, X31
	050 Move X30, [X31+32]
	051 Call Debug.WriteLine, X0
	052 Return 
	053 Call 0x1C17F20

Method: System.Void WriteStackTrace(System.Exception throwable)

Disassembly:
	0x03521158 LDR X0, [X0 + 0xE60]
	0x0352115C BL 0x1C16CF4
	0x03521160 ADRP X0, 0xBD2000
	0x03521164 LDR X0, [X0 + 0x6C0]
	0x03521168 BL 0x1C16CF4
	0x0352116C ADRP X0, 0xBD2000
	0x03521170 LDR X0, [X0 + 0xEF8]
	0x03521174 BL 0x1C16CF4
	0x03521178 ADRP X0, 0xBFF000
	0x0352117C LDR X0, [X0 + 0x360]
	0x03521180 BL 0x1C16CF4
	0x03521184 ADRP X0, 0xC13000
	0x03521188 LDR X0, [X0 + 0x6A0]
	0x0352118C BL 0x1C16CF4
	0x03521190 ADRP X0, 0xBDD000
	0x03521194 LDR X0, [X0 + 0x6D8]
	0x03521198 BL 0x1C16CF4
	0x0352119C ADRP X0, 0xC13000
	0x035211A0 LDR X0, [X0 + 0x6A8]
	0x035211A4 BL 0x1C16CF4
	0x035211A8 ADRP X0, 0xBD2000
	0x035211AC LDR X0, [X0 + 0x830]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xEBF000
	006 Move X21, 0xBDB000
	007 Move W8, [X20+2869]
	008 Move X21, [X21+3680]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xBDB000
	015 Move X0, [X0+3680]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2869], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move X1, X31
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Call SupportClass.WriteStackTrace, X0, X1
	031 Return 

Method: System.String DictionaryToString(System.Collections.IDictionary dictionary, System.Boolean includeTypes = True)

Disassembly:
	0x035211B0 BL 0x1C16CF4
	0x035211B4 ADRP X0, 0xBD2000
	0x035211B8 LDR X0, [X0 + 0x838]
	0x035211BC BL 0x1C16CF4
	0x035211C0 ADRP X0, 0xC13000
	0x035211C4 LDR X0, [X0 + 0x6B0]
	0x035211C8 BL 0x1C16CF4
	0x035211CC ADRP X0, 0xBD4000
	0x035211D0 LDR X0, [X0 + 0x3A0]
	0x035211D4 BL 0x1C16CF4
	0x035211D8 MOVZ W8, 0x1
	0x035211DC STRB W8, [X19 + 0xB37]
	0x035211E0 ADRP X8, 0xBD2000
	0x035211E4 LDR X8, [X8 + 0x830]
	0x035211E8 STP X31, X31, [X31 + 0x20]
	0x035211EC CBZ X21, 0x352189C
	0x035211F0 ADRP X8, 0xBD2000
	0x035211F4 LDR X8, [X8 + 0x8F0]
	0x035211F8 LDR X0, [X8]
	0x035211FC BL 0x1C16F10
	0x03521200 MOV X1, X31
	0x03521204 MOV X19, X0
	0x03521208 BL 0x3231AC4
	0x0352120C CBZ X19, 0x3521934
	0x03521210 ADRP X8, 0xBFF000
	0x03521214 LDR X8, [X8 + 0x360]
	0x03521218 ADRP X22, 0xC13000
	0x0352121C ADRP X23, 0xC13000
	0x03521220 ADRP X29, 0xBFB000
	0x03521224 ADRP X28, 0xBD2000
	0x03521228 ADRP X27, 0xBD3000
	0x0352122C LDR X22, [X22 + 0x6D8]
	0x03521230 LDR X23, [X23 + 0x6C0]
	0x03521234 LDR X29, [X29 + 0x208]
	0x03521238 LDR X28, [X28 + 0x6C0]
	0x0352123C LDR X27, [X27 + 0x9D8]
	0x03521240 LDR X1, [X8]
	0x03521244 MOV X0, X19
	0x03521248 MOV X2, X31
	0x0352124C BL 0x32333E0
	0x03521250 LDR X1, [X22]
	0x03521254 MOV X0, X21
	0x03521258 BL 0x24253E8
	0x0352125C LDR X8, [X23]
	0x03521260 STP X0, X1, [X31 + 0x10]
	0x03521264 ADD X0, X31, 0x10
	0x03521268 MOV X1, X8
	0x0352126C BL 0x2EDA510
	0x03521270 STP X0, X1, [X31 + 0x20]
	0x03521274 ADRP X8, 0xC13000
	0x03521278 LDR X8, [X8 + 0x6C8]
	0x0352127C LDR X1, [X8]
	0x03521280 ADD X0, X31, 0x20
	0x03521284 BL 0x2EDA60C
	0x03521288 TBZ X0, 0x0, 0x352185C
	0x0352128C ADRP X8, 0xC13000
	0x03521290 LDR X8, [X8 + 0x6D0]
	0x03521294 LDR X1, [X8]
	0x03521298 ADD X0, X31, 0x20
	0x0352129C BL 0x2EDA5C0
	0x035212A0 MOV W22, W0
	0x035212A4 MOV X0, X19
	0x035212A8 MOV X1, X31
	0x035212AC BL 0x323260C
	0x035212B0 CMP W0, 0x1
	0x035212B4 B.LE 0x35212D0
	0x035212B8 ADRP X8, 0xBD2000
	0x035212BC LDR X8, [X8 + 0x838]
	0x035212C0 LDR X1, [X8]
	0x035212C4 MOV X0, X19
	0x035212C8 MOV X2, X31
	0x035212CC BL 0x32333E0
	0x035212D0 LDR X2, [X29]
	0x035212D4 MOV X0, X21
	0x035212D8 MOV W1, W22
	0x035212DC BL 0x24256C8
	0x035212E0 CBZ X0, 0x352132C
	0x035212E4 LDR X2, [X29]
	0x035212E8 MOV X0, X21
	0x035212EC MOV W1, W22
	0x035212F0 BL 0x24256C8
	0x035212F4 CBZ X0, 0x35218C4
	0x035212F8 MOV X1, X31
	0x035212FC BL 0x33BE520
	0x03521300 LDR X2, [X29]
	0x03521304 MOV X23, X0
	0x03521308 MOV X0, X21
	0x0352130C MOV W1, W22
	0x03521310 BL 0x24256C8
	0x03521314 CBZ X0, 0x35218C0
	0x03521318 LDR X8, [X0]
	0x0352131C LDP X9, X1, [X8 + 0x168]
	0x03521320 BLR X9
	0x03521324 MOV X24, X0
	0x03521328 B 0x3521364
	0x0352132C LDR X0, [X28]
	0x03521330 ADRP X9, 0xBDC000
	0x03521334 LDR W8, [X0 + 0xE0]
	0x03521338 LDR X9, [X9 + 0x968]
	0x0352133C LDR X23, [X9]
	0x03521340 CBNZ W8, 0x3521348
	0x03521344 BL 0x1C16DFC
	0x03521348 MOV X0, X23
	0x0352134C MOV X1, X31
	0x03521350 BL 0x338C698
	0x03521354 ADRP X8, 0xBD2000
	0x03521358 LDR X8, [X8 + 0x830]
	0x0352135C MOV X23, X0
	0x03521360 LDR X24, [X8]
	0x03521364 LDR X0, [X28]
	0x03521368 ADRP X9, 0xC02000
	0x0352136C LDR W8, [X0 + 0xE0]
	0x03521370 LDR X9, [X9 + 0xF38]
	0x03521374 LDR X25, [X9]
	0x03521378 CBNZ W8, 0x3521380
	0x0352137C BL 0x1C16DFC
	0x03521380 MOV X0, X25
	0x03521384 MOV X1, X31
	0x03521388 BL 0x338C698
	0x0352138C MOV X1, X0
	0x03521390 MOV X0, X23
	0x03521394 MOV X2, X31
	0x03521398 BL 0x3395194
	0x0352139C TBNZ X0, 0x0, 0x35213DC
	0x035213A0 LDR X0, [X28]
	0x035213A4 ADRP X9, 0xC13000
	0x035213A8 LDR W8, [X0 + 0xE0]
	0x035213AC LDR X9, [X9 + 0x88]
	0x035213B0 LDR X25, [X9]
	0x035213B4 CBNZ W8, 0x35213BC
	0x035213B8 BL 0x1C16DFC
	0x035213BC MOV X0, X25
	0x035213C0 MOV X1, X31
	0x035213C4 BL 0x338C698
	0x035213C8 MOV X1, X0
	0x035213CC MOV X0, X23
	0x035213D0 MOV X2, X31
	0x035213D4 BL 0x3395194
	0x035213D8 TBZ X0, 0x0, 0x35215A4
	0x035213DC LDR X2, [X29]
	0x035213E0 MOV X0, X21
	0x035213E4 MOV W1, W22
	0x035213E8 BL 0x24256C8
	0x035213EC ADRP X8, 0xBDA000
	0x035213F0 LDR X8, [X8 + 0xE60]
	0x035213F4 MOV X24, X0
	0x035213F8 LDR X0, [X8]
	0x035213FC LDR W8, [X0 + 0xE0]
	0x03521400 CBNZ W8, 0x3521408
	0x03521404 BL 0x1C16DFC
	0x03521408 CBZ X24, 0x352142C
	0x0352140C ADRP X8, 0xBD2000
	0x03521410 LDR X8, [X8 + 0x818]
	0x03521414 LDR X25, [X8]
	0x03521418 MOV X0, X24
	0x0352141C MOV X1, X25
	0x03521420 BL 0x1C16E00
	0x03521424 CBNZ X0, 0x3521430
	0x03521428 B 0x35218E4
	0x0352142C MOV X0, X31
	0x03521430 MOVZ W1, 0x1
	0x03521434 BL 0x35201B0
	0x03521438 MOV X24, X0
	0x0352143C TBZ X20, 0x0, 0x3521570
	0x03521440 ADRP X8, 0xBD2000
	0x03521444 LDR X8, [X8 + 0x9D0]
	0x03521448 LDR X0, [X8]
	0x0352144C MOVZ W1, 0x4
	0x03521450 BL 0x1C16D6C
	0x03521454 MOV X25, X0
	0x03521458 LDR X0, [X27]
	0x0352145C STRB W22, [X31 + 0xC]
	0x03521460 ADD X1, X31, 0xC
	0x03521464 BL 0x1C16E04
	0x03521468 MOV X1, X31
	0x0352146C BL 0x33BE520
	0x03521470 CBZ X0, 0x35218CC
	0x03521474 LDR X8, [X0]
	0x03521478 LDP X9, X1, [X8 + 0x1A8]
	0x0352147C BLR X9
	0x03521480 CBZ X25, 0x35218D0
	0x03521484 MOV X26, X0
	0x03521488 CBZ X0, 0x35214A0
	0x0352148C LDR X8, [X25]
	0x03521490 LDR X1, [X8 + 0x40]
	0x03521494 MOV X0, X26
	0x03521498 BL 0x1C16E00
	0x0352149C CBZ X0, 0x3521908
	0x035214A0 LDR W8, [X25 + 0x18]
	0x035214A4 CBZ W8, 0x35218C8
	0x035214A8 STR X26, [X25 + 0x20]
	0x035214AC LDR X0, [X27]
	0x035214B0 STRB W22, [X31 + 0x8]
	0x035214B4 ADD X1, X31, 0x8
	0x035214B8 BL 0x1C16E04
	0x035214BC MOV X22, X0
	0x035214C0 CBZ X0, 0x35214D8
	0x035214C4 LDR X8, [X25]
	0x035214C8 LDR X1, [X8 + 0x40]
	0x035214CC MOV X0, X22
	0x035214D0 BL 0x1C16E00
	0x035214D4 CBZ X0, 0x35218F0
	0x035214D8 LDR W8, [X25 + 0x18]
	0x035214DC CMP W8, 0x1
	0x035214E0 B.LS 0x35218D4
	0x035214E4 STR X22, [X25 + 0x28]
	0x035214E8 CBZ X23, 0x35218DC
	0x035214EC LDR X8, [X23]
	0x035214F0 LDP X9, X1, [X8 + 0x1A8]
	0x035214F4 MOV X0, X23
	0x035214F8 BLR X9
	0x035214FC MOV X22, X0
	0x03521500 CBZ X0, 0x3521518
	0x03521504 LDR X8, [X25]
	0x03521508 LDR X1, [X8 + 0x40]
	0x0352150C MOV X0, X22
	0x03521510 BL 0x1C16E00
	0x03521514 CBZ X0, 0x3521914
	0x03521518 LDR W8, [X25 + 0x18]
	0x0352151C CMP W8, 0x2
	0x03521520 B.LS 0x35218E0
	0x03521524 STR X22, [X25 + 0x30]
	0x03521528 CBZ X24, 0x3521544
	0x0352152C LDR X8, [X25]
	0x03521530 LDR X1, [X8 + 0x40]
	0x03521534 MOV X0, X24
	0x03521538 BL 0x1C16E00
	0x0352153C CBZ X0, 0x35218FC
	0x03521540 LDR W8, [X25 + 0x18]
	0x03521544 CMP W8, 0x3
	0x03521548 B.LS 0x35218D8
	0x0352154C STR X24, [X25 + 0x38]
	0x03521550 ADRP X8, 0xC13000
	0x03521554 LDR X8, [X8 + 0x6A0]
	0x03521558 LDR X1, [X8]
	0x0352155C MOV X0, X19
	0x03521560 MOV X2, X25
	0x03521564 MOV X3, X31
	0x03521568 BL 0x3234E54
	0x0352156C B 0x3521274
	0x03521570 LDR X0, [X27]
	0x03521574 STRB W22, [X31 + 0xC]
	0x03521578 ADD X1, X31, 0xC
	0x0352157C BL 0x1C16E04
	0x03521580 ADRP X8, 0xBD2000
	0x03521584 LDR X8, [X8 + 0xEF8]
	0x03521588 MOV X2, X0
	0x0352158C LDR X1, [X8]
	0x03521590 MOV X0, X19
	0x03521594 MOV X3, X24
	0x03521598 MOV X4, X31
	0x0352159C BL 0x3234D98
	0x035215A0 B 0x3521274
	0x035215A4 LDR X0, [X28]
	0x035215A8 ADRP X9, 0xC13000
	0x035215AC LDR W8, [X0 + 0xE0]
	0x035215B0 LDR X9, [X9 + 0x698]
	0x035215B4 LDR X25, [X9]
	0x035215B8 CBNZ W8, 0x35215C0
	0x035215BC BL 0x1C16DFC
	0x035215C0 MOV X0, X25
	0x035215C4 MOV X1, X31
	0x035215C8 BL 0x338C698
	0x035215CC MOV X1, X0
	0x035215D0 MOV X0, X23
	0x035215D4 MOV X2, X31
	0x035215D8 BL 0x3395194
	0x035215DC TBZ X0, 0x0, 0x3521654
	0x035215E0 LDR X2, [X29]
	0x035215E4 MOV X0, X21
	0x035215E8 MOV W1, W22
	0x035215EC BL 0x24256C8
	0x035215F0 ADRP X8, 0xBDA000
	0x035215F4 LDR X8, [X8 + 0xE60]
	0x035215F8 MOV X24, X0
	0x035215FC LDR X0, [X8]
	0x03521600 LDR W8, [X0 + 0xE0]
	0x03521604 CBNZ W8, 0x352160C
	0x03521608 BL 0x1C16DFC
	0x0352160C CBZ X24, 0x3521644
	0x03521610 ADRP X9, 0xC12000
	0x03521614 LDR X8, [X24]
	0x03521618 LDR X9, [X9 + 0xC18]
	0x0352161C LDRB W10, [X8 + 0x130]
	0x03521620 LDR X1, [X9]
	0x03521624 LDRB W9, [X1 + 0x130]
	0x03521628 CMP W10, W9
	0x0352162C B.CC 0x3521920
	0x03521630 LDR X8, [X8 + 0xC8]
	0x03521634 ADD X8, X8, X9, 0x3, LSL
	0x03521638 LDUR X8, [X8 - 0x8]
	0x0352163C CMP X8, X1
	0x03521640 B.NE 0x3521920
	0x03521644 MOVZ W1, 0x1
	0x03521648 MOV X0, X24
	0x0352164C BL 0x3521028
	0x03521650 B 0x3521438
	0x03521654 LDR X0, [X28]
	0x03521658 ADRP X9, 0xC04000
	0x0352165C LDR W8, [X0 + 0xE0]
	0x03521660 LDR X9, [X9 + 0x170]
	0x03521664 LDR X25, [X9]
	0x03521668 CBNZ W8, 0x3521670
	0x0352166C BL 0x1C16DFC
	0x03521670 MOV X0, X25
	0x03521674 MOV X1, X31
	0x03521678 BL 0x338C698
	0x0352167C MOV X1, X0
	0x03521680 MOV X0, X23
	0x03521684 MOV X2, X31
	0x03521688 BL 0x3395194
	0x0352168C TBZ X0, 0x0, 0x35216D8
	0x03521690 LDR X2, [X29]
	0x03521694 MOV X0, X21
	0x03521698 MOV W1, W22
	0x0352169C BL 0x24256C8
	0x035216A0 ADRP X8, 0xBD4000
	0x035216A4 LDR X8, [X8 + 0x3A0]
	0x035216A8 MOV X25, X0
	0x035216AC LDR X24, [X8]
	0x035216B0 CBZ X0, 0x3521830
	0x035216B4 ADRP X8, 0xBD2000
	0x035216B8 LDR X8, [X8 + 0xAC8]
	0x035216BC LDR X26, [X8]
	0x035216C0 MOV X0, X25
	0x035216C4 MOV X1, X26
	0x035216C8 BL 0x1C16E00
	0x035216CC MOV X1, X0
	0x035216D0 CBNZ X1, 0x3521834
	0x035216D4 B 0x3521928
	0x035216D8 LDR X0, [X28]
	0x035216DC ADRP X9, 0xC04000
	0x035216E0 LDR W8, [X0 + 0xE0]
	0x035216E4 LDR X9, [X9 + 0x118]
	0x035216E8 LDR X25, [X9]
	0x035216EC CBNZ W8, 0x35216F4
	0x035216F0 BL 0x1C16DFC
	0x035216F4 MOV X0, X25
	0x035216F8 MOV X1, X31
	0x035216FC BL 0x338C698
	0x03521700 MOV X1, X0
	0x03521704 MOV X0, X23
	0x03521708 MOV X2, X31
	0x0352170C BL 0x3395194
	0x03521710 LDR X2, [X29]
	0x03521714 TBZ X0, 0x0, 0x352179C
	0x03521718 MOV X0, X21
	0x0352171C MOV W1, W22
	0x03521720 BL 0x24256C8
	0x03521724 MOV X24, X0
	0x03521728 CBZ X0, 0x3521950
	0x0352172C ADRP X8, 0xBD2000
	0x03521730 LDR X8, [X8 + 0x618]
	0x03521734 LDR X25, [X8]
	0x03521738 MOV X0, X24
	0x0352173C MOV X1, X25
	0x03521740 BL 0x1C16E00
	0x03521744 CBZ X0, 0x3521944
	0x03521748 ADRP X8, 0xBD2000
	0x0352174C LDR X8, [X8 + 0x618]
	0x03521750 LDR X25, [X8]
	0x03521754 MOV X0, X24
	0x03521758 MOV X1, X25
	0x0352175C BL 0x1C16E00
	0x03521760 CBZ X0, 0x3521938
	0x03521764 ADRP X9, 0xBD2000
	0x03521768 LDR X8, [X0 + 0x18]
	0x0352176C LDR X9, [X9 + 0x758]
	0x03521770 STR W8, [X31 + 0xC]
	0x03521774 LDR X0, [X9]
	0x03521778 ADD X1, X31, 0xC
	0x0352177C BL 0x1C16E04
	0x03521780 MOV X1, X0
	0x03521784 ADRP X8, 0xC13000
	0x03521788 LDR X8, [X8 + 0x6B0]
	0x0352178C LDR X0, [X8]
	0x03521790 MOV X2, X31
	0x03521794 BL 0x321EFD0
	0x03521798 B 0x3521438
	0x0352179C MOV X0, X21
	0x035217A0 MOV W1, W22
	0x035217A4 BL 0x24256C8
	0x035217A8 MOV X25, X0
	0x035217AC CBZ X0, 0x352143C
	0x035217B0 ADRP X8, 0xBFB000
	0x035217B4 LDR X9, [X25]
	0x035217B8 LDR X8, [X8 + 0x6F8]
	0x035217BC LDRB W11, [X9 + 0x130]
	0x035217C0 LDR X8, [X8]
	0x035217C4 LDRB W10, [X8 + 0x130]
	0x035217C8 CMP W11, W10
	0x035217CC B.CC 0x352143C
	0x035217D0 LDR X9, [X9 + 0xC8]
	0x035217D4 ADD X9, X9, X10, 0x3, LSL
	0x035217D8 LDUR X9, [X9 - 0x8]
	0x035217DC CMP X9, X8
	0x035217E0 B.NE 0x352143C
	0x035217E4 LDR X0, [X27]
	0x035217E8 STRB W22, [X31 + 0xC]
	0x035217EC ADD X1, X31, 0xC
	0x035217F0 BL 0x1C16E04
	0x035217F4 LDR X8, [X25]
	0x035217F8 MOV X22, X0
	0x035217FC LDP X9, X2, [X8 + 0x1B8]
	0x03521800 AND W1, W20, 0x1
	0x03521804 MOV X0, X25
	0x03521808 BLR X9
	0x0352180C ADRP X8, 0xBD2000
	0x03521810 LDR X8, [X8 + 0xEF8]
	0x03521814 MOV X3, X0
	0x03521818 LDR X1, [X8]
	0x0352181C MOV X0, X19
	0x03521820 MOV X2, X22
	0x03521824 MOV X4, X31
	0x03521828 BL 0x3234D98
	0x0352182C B 0x3521274
	0x03521830 MOV X1, X31
	0x03521834 MOV X0, X24
	0x03521838 MOV X2, X31
	0x0352183C BL 0x3227FF8
	0x03521840 MOV X1, X0
	0x03521844 ADRP X8, 0xC13000
	0x03521848 LDR X8, [X8 + 0x6A8]
	0x0352184C LDR X0, [X8]
	0x03521850 MOV X2, X31
	0x03521854 BL 0x321EFD0
	0x03521858 B 0x3521438
	0x0352185C ADRP X8, 0xC13000
	0x03521860 LDR X8, [X8 + 0x6B8]
	0x03521864 ADD X0, X31, 0x20
	0x03521868 LDR X1, [X8]
	0x0352186C BL 0x2EDA698
	0x03521870 ADRP X8, 0xBDD000
	0x03521874 LDR X8, [X8 + 0x6D8]
	0x03521878 MOV X0, X19
	0x0352187C MOV X2, X31
	0x03521880 LDR X1, [X8]
	0x03521884 BL 0x32333E0
	0x03521888 LDR X8, [X19]
	0x0352188C MOV X0, X19
	0x03521890 LDP X9, X1, [X8 + 0x168]
	0x03521894 BLR X9
	0x03521898 B 0x35218A0
	0x0352189C LDR X0, [X8]
	0x035218A0 LDP X20, X19, [X31 + 0x80]
	0x035218A4 LDP X22, X21, [X31 + 0x70]
	0x035218A8 LDP X24, X23, [X31 + 0x60]
	0x035218AC LDP X26, X25, [X31 + 0x50]
	0x035218B0 LDP X28, X27, [X31 + 0x40]
	0x035218B4 LDP X29, X30, [X31 + 0x30]
	0x035218B8 ADD X31, X31, 0x90
	0x035218BC RET
	0x035218C0 BL 0x1C16F20
	0x035218C4 BL 0x1C16F20
	0x035218C8 BL 0x1C16F28
	0x035218CC BL 0x1C16F20
	0x035218D0 BL 0x1C16F20
	0x035218D4 BL 0x1C16F28
	0x035218D8 BL 0x1C16F28
	0x035218DC BL 0x1C16F20
	0x035218E0 BL 0x1C16F28
	0x035218E4 MOV X0, X24
	0x035218E8 MOV X1, X25
	0x035218EC BL 0x1C171E0
	0x035218F0 BL 0x1C16F44
	0x035218F4 MOV X1, X31
	0x035218F8 BL 0x1C16DEC
	0x035218FC BL 0x1C16F44
	0x03521900 MOV X1, X31
	0x03521904 BL 0x1C16DEC
	0x03521908 BL 0x1C16F44
	0x0352190C MOV X1, X31
	0x03521910 BL 0x1C16DEC
	0x03521914 BL 0x1C16F44
	0x03521918 MOV X1, X31
	0x0352191C BL 0x1C16DEC
	0x03521920 MOV X0, X24
	0x03521924 BL 0x1C171E0
	0x03521928 MOV X0, X25
	0x0352192C MOV X1, X26
	0x03521930 BL 0x1C171E0
	0x03521934 BL 0x1C16F20
	0x03521938 MOV X0, X24
	0x0352193C MOV X1, X25
	0x03521940 BL 0x1C171E0
	0x03521944 MOV X0, X24
	0x03521948 MOV X1, X25
	0x0352194C BL 0x1C171E0
	0x03521950 BL 0x1C16F20
	0x03521954 B 0x3521A50
	0x03521958 B 0x3521A50
	0x0352195C B 0x3521A50
	0x03521960 B 0x3521A50
	0x03521964 B 0x3521A50
	0x03521968 B 0x3521A50
	0x0352196C B 0x3521A50
	0x03521970 B 0x3521A50
	0x03521974 B 0x3521A50
	0x03521978 B 0x3521A50
	0x0352197C B 0x3521A50
	0x03521980 B 0x3521A50
	0x03521984 B 0x3521A50
	0x03521988 B 0x3521A50
	0x0352198C B 0x3521A50
	0x03521990 B 0x3521A50
	0x03521994 B 0x3521A50
	0x03521998 B 0x3521A50
	0x0352199C B 0x3521A50
	0x035219A0 B 0x3521A50
	0x035219A4 B 0x3521A50
	0x035219A8 B 0x3521A50
	0x035219AC B 0x3521A50
	0x035219B0 B 0x3521A50
	0x035219B4 B 0x3521A50
	0x035219B8 B 0x3521A50
	0x035219BC B 0x3521A50
	0x035219C0 B 0x3521A50
	0x035219C4 B 0x3521A50
	0x035219C8 B 0x3521A50
	0x035219CC B 0x3521A50
	0x035219D0 B 0x3521A50
	0x035219D4 B 0x3521A50
	0x035219D8 B 0x3521A50
	0x035219DC B 0x3521A50
	0x035219E0 B 0x3521A50
	0x035219E4 B 0x3521A50
	0x035219E8 B 0x3521A50
	0x035219EC B 0x3521A50
	0x035219F0 B 0x3521A50
	0x035219F4 B 0x3521A50
	0x035219F8 B 0x3521A50
	0x035219FC B 0x3521A50
	0x03521A00 B 0x3521A50
	0x03521A04 B 0x3521A50
	0x03521A08 B 0x3521A50
	0x03521A0C B 0x3521A50
	0x03521A10 B 0x3521A50
	0x03521A14 B 0x3521A50
	0x03521A18 B 0x3521A50
	0x03521A1C B 0x3521A50
	0x03521A20 B 0x3521A50
	0x03521A24 B 0x3521A50
	0x03521A28 B 0x3521A50
	0x03521A2C B 0x3521A50
	0x03521A30 B 0x3521A50
	0x03521A34 B 0x3521A50
	0x03521A38 B 0x3521A50
	0x03521A3C B 0x3521A50
	0x03521A40 B 0x3521A50
	0x03521A44 B 0x3521A50
	0x03521A48 B 0x3521A50
	0x03521A4C B 0x3521A50
	0x03521A50 MOV X20, X0
	0x03521A54 CMP W1, 0x1
	0x03521A58 B.NE 0x3521A8C
	0x03521A5C MOV X0, X20
	0x03521A60 BL 0x3EB1AD0
	0x03521A64 LDR X21, [X0]
	0x03521A68 BL 0x3EB1AE0
	0x03521A6C ADRP X8, 0xC13000
	0x03521A70 LDR X8, [X8 + 0x6B8]
	0x03521A74 ADD X0, X31, 0x20
	0x03521A78 LDR X1, [X8]
	0x03521A7C BL 0x2EDA698
	0x03521A80 CBZ X21, 0x3521870
	0x03521A84 MOV X0, X21
	0x03521A88 BL 0x1C16F18
	0x03521A8C MOV X21, X31
	0x03521A90 B 0x3521A98
	0x03521A94 MOV X20, X0
	0x03521A98 ADRP X8, 0xC13000
	0x03521A9C LDR X8, [X8 + 0x6B8]
	0x03521AA0 LDR X1, [X8]
	0x03521AA4 ADD X0, X31, 0x20
	0x03521AA8 BL 0x2EDA698
	0x03521AAC CBNZ X21, 0x3521AB8
	0x03521AB0 MOV X0, X20
	0x03521AB4 BL 0x1D2C690
	0x03521AB8 MOV X0, X21
	0x03521ABC BL 0x1C16F18
	0x03521AC0 BL 0x1990590
	0x03521AC4 STP X30, X21, [X31 - 0x20]!
	0x03521AC8 STP X20, X19, [X31 + 0x10]
	0x03521ACC ADRP X20, 0xEBE000
	0x03521AD0 ADRP X21, 0xBDA000
	0x03521AD4 LDRB W8, [X20 + 0xB38]
	0x03521AD8 LDR X21, [X21 + 0xE60]
	0x03521ADC MOV X19, X0
	0x03521AE0 TBNZ X8, 0x0, 0x3521AF8
	0x03521AE4 ADRP X0, 0xBDA000
	0x03521AE8 LDR X0, [X0 + 0xE60]
	0x03521AEC BL 0x1C16CF4
	0x03521AF0 MOVZ W8, 0x1
	0x03521AF4 STRB W8, [X20 + 0xB38]
	0x03521AF8 LDR X0, [X21]
	0x03521AFC LDR W8, [X0 + 0xE0]
	0x03521B00 CBNZ W8, 0x3521B08
	0x03521B04 BL 0x1C16DFC
	0x03521B08 MOV X0, X19
	0x03521B0C LDP X20, X19, [X31 + 0x10]
	0x03521B10 MOVZ W1, 0x1
	0x03521B14 LDP X30, X21, [X31], #0x20
	0x03521B18 B 0x35201B0
	0x03521B1C STP X30, X21, [X31 - 0x20]!
	0x03521B20 STP X20, X19, [X31 + 0x10]
	0x03521B24 ADRP X21, 0xEBE000
	0x03521B28 LDRB W8, [X21 + 0xB39]
	0x03521B2C MOV W19, W1
	0x03521B30 MOV X20, X0
	0x03521B34 TBNZ X8, 0x0, 0x3521B4C
	0x03521B38 ADRP X0, 0xBD4000
	0x03521B3C LDR X0, [X0 + 0x278]
	0x03521B40 BL 0x1C16CF4
	0x03521B44 MOVZ W8, 0x1
	0x03521B48 STRB W8, [X21 + 0xB39]
	0x03521B4C CBZ X20, 0x3521B78
	0x03521B50 LDR W8, [X20 + 0x18]
	0x03521B54 MOV X0, X20
	0x03521B58 MOV W1, W31
	0x03521B5C MOV X3, X31
	0x03521B60 CMP W8, W19
	0x03521B64 CCMP W19, 0x0, 0x8, GE
	0x03521B68 CSEL W2, W8, W19, LT
	0x03521B6C LDP X20, X19, [X31 + 0x10]
	0x03521B70 LDP X30, X21, [X31], #0x20
	0x03521B74 B 0x3317140
	0x03521B78 ADRP X8, 0xBD4000
	0x03521B7C LDR X8, [X8 + 0x278]
	0x03521B80 LDP X20, X19, [X31 + 0x10]
	0x03521B84 LDR X8, [X8]
	0x03521B88 LDR X8, [X8 + 0xB8]
	0x03521B8C LDR X0, [X8]
	0x03521B90 LDP X30, X21, [X31], #0x20
	0x03521B94 RET
	0x03521B98 STP X30, X21, [X31 - 0x20]!
	0x03521B9C STP X20, X19, [X31 + 0x10]
	0x03521BA0 ADRP X20, 0xEBE000
	0x03521BA4 ADRP X21, 0xBFB000
	0x03521BA8 LDRB W8, [X20 + 0xB3A]
	0x03521BAC LDR X21, [X21 + 0xD08]
	0x03521BB0 MOV W19, W0
	0x03521BB4 TBNZ X8, 0x0, 0x3521BCC
	0x03521BB8 ADRP X0, 0xBFB000
	0x03521BBC LDR X0, [X0 + 0xD08]
	0x03521BC0 BL 0x1C16CF4
	0x03521BC4 MOVZ W8, 0x1
	0x03521BC8 STRB W8, [X20 + 0xB3A]
	0x03521BCC LDR X0, [X21]
	0x03521BD0 MOVZ W1, 0x100
	0x03521BD4 BL 0x1C16D6C
	0x03521BD8 MOV X8, X31
	0x03521BDC MOVZ W10, 0x8
	0x03521BE0 MOV W9, W8
	0x03521BE4 SBFM W11, W9, 0x0, 0x0
	0x03521BE8 AND W11, W11, W19, 0x0
	0x03521BEC SUBS W10, W10, 0x1
	0x03521BF0 EOR W9, W11, W9, 0x1
	0x03521BF4 B.NE 0x3521BE4
	0x03521BF8 CBZ X0, 0x3521C28
	0x03521BFC LDR W10, [X0 + 0x18]
	0x03521C00 CMP X8, X10
	0x03521C04 B.CS 0x3521C2C
	0x03521C08 ADD X10, X0, X8, 0x2, LSL
	0x03521C0C ADD X8, X8, 0x1
	0x03521C10 CMP X8, 0x100
	0x03521C14 STR W9, [X10 + 0x20]
	0x03521C18 B.NE 0x3521BDC
	0x03521C1C LDP X20, X19, [X31 + 0x10]
	0x03521C20 LDP X30, X21, [X31], #0x20
	0x03521C24 RET
	0x03521C28 BL 0x1C16F20
	0x03521C2C BL 0x1C16F28
	0x03521C30 STR X30, [X31 - 0x40]!
	0x03521C34 STP X24, X23, [X31 + 0x10]
	0x03521C38 STP X22, X21, [X31 + 0x20]
	0x03521C3C STP X20, X19, [X31 + 0x30]
	0x03521C40 ADRP X22, 0xEBE000
	0x03521C44 ADRP X21, 0xBDA000
	0x03521C48 LDRB W8, [X22 + 0xB3B]
	0x03521C4C LDR X21, [X21 + 0xE60]
	0x03521C50 MOV W20, W1
	0x03521C54 MOV X19, X0
	0x03521C58 TBNZ X8, 0x0, 0x3521C70
	0x03521C5C ADRP X0, 0xBDA000
	0x03521C60 LDR X0, [X0 + 0xE60]
	0x03521C64 BL 0x1C16CF4
	0x03521C68 MOVZ W8, 0x1
	0x03521C6C STRB W8, [X22 + 0xB3B]
	0x03521C70 LDR X8, [X21]
	0x03521C74 LDR W9, [X8 + 0xE0]
	0x03521C78 CBNZ W9, 0x3521C88
	0x03521C7C MOV X0, X8
	0x03521C80 BL 0x1C16DFC
	0x03521C84 LDR X8, [X21]
	0x03521C88 LDR X9, [X8 + 0xB8]
	0x03521C8C LDR X9, [X9 + 0x18]
	0x03521C90 CBNZ X9, 0x3521CBC
	0x03521C94 LDR W9, [X8 + 0xE0]
	0x03521C98 CBNZ W9, 0x3521CA4
	0x03521C9C MOV X0, X8
	0x03521CA0 BL 0x1C16DFC
	0x03521CA4 MOVZ W0, 0x8320
	0x03521CA8 MOVK W0, 0xEDB80000
	0x03521CAC BL 0x3521B98
	0x03521CB0 LDR X8, [X21]
	0x03521CB4 LDR X9, [X8 + 0xB8]
	0x03521CB8 STR X0, [X9 + 0x18]
	0x03521CBC CMP W20, 0x1
	0x03521CC0 B.LT 0x3521D38
	0x03521CC4 MOV X22, X31
	0x03521CC8 MOV W23, W20
	0x03521CCC ADD X24, X19, 0x20
	0x03521CD0 MOVN W20, 0x0
	0x03521CD4 LDR W9, [X8 + 0xE0]
	0x03521CD8 CBNZ W9, 0x3521CE8
	0x03521CDC MOV X0, X8
	0x03521CE0 BL 0x1C16DFC
	0x03521CE4 LDR X8, [X21]
	0x03521CE8 CBZ X19, 0x3521D54
	0x03521CEC LDR W9, [X19 + 0x18]
	0x03521CF0 CMP X22, X9
	0x03521CF4 B.CS 0x3521D58
	0x03521CF8 LDR X9, [X8 + 0xB8]
	0x03521CFC LDR X9, [X9 + 0x18]
	0x03521D00 CBZ X9, 0x3521D54
	0x03521D04 LDRB W10, [X24, X22, LSL]
	0x03521D08 LDR W11, [X9 + 0x18]
	0x03521D0C AND W12, W20, 0xFF
	0x03521D10 EOR W10, W12, W10, 0x0
	0x03521D14 CMP W10, W11
	0x03521D18 B.CS 0x3521D58
	0x03521D1C ADD X9, X9, W10, 0x2, UXTW
	0x03521D20 LDR W9, [X9 + 0x20]
	0x03521D24 ADD X22, X22, 0x1
	0x03521D28 CMP X23, X22
	0x03521D2C EOR W20, W9, W20, 0x8
	0x03521D30 B.NE 0x3521CD4
	0x03521D34 B 0x3521D3C
	0x03521D38 MOVN W20, 0x0
	0x03521D3C MOV W0, W20
	0x03521D40 LDP X20, X19, [X31 + 0x30]
	0x03521D44 LDP X22, X21, [X31 + 0x20]
	0x03521D48 LDP X24, X23, [X31 + 0x10]
	0x03521D4C LDR X30, [X31], #0x40
	0x03521D50 RET
	0x03521D54 BL 0x1C16F20
	0x03521D58 BL 0x1C16F28
	0x03521D5C MOV X1, X31
	0x03521D60 B 0x33BDD8C
	0x03521D64 STP X30, X23, [X31 - 0x30]!
	0x03521D68 STP X22, X21, [X31 + 0x10]
	0x03521D6C STP X20, X19, [X31 + 0x20]
	0x03521D70 ADRP X22, 0xEBE000
	0x03521D74 ADRP X19, 0xBD8000
	0x03521D78 ADRP X21, 0xBDA000
	0x03521D7C ADRP X20, 0xC13000
	0x03521D80 LDRB W8, [X22 + 0xB3C]
	0x03521D84 LDR X19, [X19 + 0xCC0]
	0x03521D88 LDR X21, [X21 + 0xE60]
	0x03521D8C LDR X20, [X20 + 0x6E0]
	0x03521D90 TBNZ X8, 0x0, 0x3521DD8
	0x03521D94 ADRP X0, 0xC13000
	0x03521D98 LDR X0, [X0 + 0x6E8]
	0x03521D9C BL 0x1C16CF4
	0x03521DA0 ADRP X0, 0xBD8000
	0x03521DA4 LDR X0, [X0 + 0xCC0]
	0x03521DA8 BL 0x1C16CF4
	0x03521DAC ADRP X0, 0xBDA000
	0x03521DB0 LDR X0, [X0 + 0xE60]
	0x03521DB4 BL 0x1C16CF4
	0x03521DB8 ADRP X0, 0xC13000
	0x03521DBC LDR X0, [X0 + 0x6F0]
	0x03521DC0 BL 0x1C16CF4
	0x03521DC4 ADRP X0, 0xC13000
	0x03521DC8 LDR X0, [X0 + 0x6E0]
	0x03521DCC BL 0x1C16CF4
	0x03521DD0 MOVZ W8, 0x1
	0x03521DD4 STRB W8, [X22 + 0xB3C]
	0x03521DD8 LDR X0, [X19]
	0x03521DDC ADRP X23, 0xC13000
	0x03521DE0 ADRP X22, 0xC13000
	0x03521DE4 LDR X23, [X23 + 0x6E8]
	0x03521DE8 LDR X22, [X22 + 0x6F0]
	0x03521DEC BL 0x1C16F10
	0x03521DF0 MOV X1, X31
	0x03521DF4 MOV X19, X0
	0x03521DF8 BL 0x33BDD8C
	0x03521DFC LDR X8, [X21]
	0x03521E00 LDR X8, [X8 + 0xB8]
	0x03521E04 STR X19, [X8 + 0x8]
	0x03521E08 LDR X0, [X20]
	0x03521E0C LDR W8, [X0 + 0xE0]
	0x03521E10 CBNZ W8, 0x3521E1C
	0x03521E14 BL 0x1C16DFC
	0x03521E18 LDR X0, [X20]
	0x03521E1C LDR X8, [X0 + 0xB8]
	0x03521E20 LDR X0, [X23]
	0x03521E24 LDR X19, [X8]
	0x03521E28 BL 0x1C16F10
	0x03521E2C LDR X2, [X22]
	0x03521E30 MOV X1, X19
	0x03521E34 MOV X20, X0
	0x03521E38 BL 0x3521E58
	0x03521E3C LDR X8, [X21]
	0x03521E40 LDP X22, X21, [X31 + 0x10]
	0x03521E44 LDR X8, [X8 + 0xB8]
	0x03521E48 STR X20, [X8 + 0x10]
	0x03521E4C LDP X20, X19, [X31 + 0x20]
	0x03521E50 LDP X30, X23, [X31], #0x30
	0x03521E54 RET
	0x03521E58 STP X30, X21, [X31 - 0x20]!
	0x03521E5C STP X20, X19, [X31 + 0x10]
	0x03521E60 LDR X8, [X2 + 0x8]
	0x03521E64 STP X1, X2, [X0 + 0x20]
	0x03521E68 MOV X19, X0
	0x03521E6C MOV X20, X1
	0x03521E70 STR X8, [X0 + 0x10]
	0x03521E74 LDRB W21, [X2 + 0x52]
	0x03521E78 STR X0, [X0 + 0x40]
	0x03521E7C MOV X0, X2
	0x03521E80 BL 0x1C16D84
	0x03521E84 TBZ X0, 0x0, 0x3521E9C
	0x03521E88 CBNZ W21, 0x3521EA0
	0x03521E8C ADRP X8, 0xFFFFFFFFFE69E000
	0x03521E90 ADD X8, X8, 0x9C0
	0x03521E94 STR X8, [X19 + 0x18]
	0x03521E98 B 0x3521EB0
	0x03521E9C CBZ X20, 0x3521EC8
	0x03521EA0 LDR X8, [X19 + 0x10]
	0x03521EA4 LDR X9, [X19 + 0x20]
	0x03521EA8 STR X8, [X19 + 0x18]
	0x03521EAC STR X9, [X19 + 0x40]
	0x03521EB0 ADRP X8, 0xFFFFFFFFFE69E000
	0x03521EB4 ADD X8, X8, 0x978
	0x03521EB8 STR X8, [X19 + 0x38]
	0x03521EBC LDP X20, X19, [X31 + 0x10]
	0x03521EC0 LDP X30, X21, [X31], #0x20
	0x03521EC4 RET
	0x03521EC8 ADRP X1, 0xFFFFFFFFFD5FA000
	0x03521ECC ADD X1, X1, 0xEE3
	0x03521ED0 MOV X0, X31
	0x03521ED4 BL 0x1C16F3C
	0x03521ED8 MOV X1, X31
	0x03521EDC BL 0x1C16DEC
	0x03521EE0 LDR X8, [X0 + 0x40]
	0x03521EE4 LDR X2, [X0 + 0x18]
	0x03521EE8 LDR X1, [X0 + 0x28]
	0x03521EEC MOV X0, X8
	0x03521EF0 BR X2
	0x03521EF4 STR X30, [X31 - 0x10]!
	0x03521EF8 MOV X3, X2
	0x03521EFC MOV X2, X1
	0x03521F00 ADD X1, X31, 0x8
	0x03521F04 STR X31, [X31 + 0x8]
	0x03521F08 BL 0x1C16CB0
	0x03521F0C LDR X30, [X31], #0x10
	0x03521F10 RET
	0x03521F14 STR X30, [X31 - 0x10]!
	0x03521F18 MOV X0, X1
	0x03521F1C MOV X1, X31
	0x03521F20 BL 0x1C16CB4
	0x03521F24 CBZ X0, 0x3521F38
	0x03521F28 BL 0x1C16E08
	0x03521F2C LDR W0, [X0]
	0x03521F30 LDR X30, [X31], #0x10
	0x03521F34 RET
	0x03521F38 BL 0x1C16F20
	0x03521F3C SUB X31, X31, 0x30
	0x03521F40 STP X30, X21, [X31 + 0x10]
	0x03521F44 STP X20, X19, [X31 + 0x20]
	0x03521F48 ADRP X19, 0xEBE000
	0x03521F4C ADRP X20, 0xC12000
	0x03521F50 LDRB W8, [X19 + 0xB3D]
	0x03521F54 LDR X20, [X20 + 0x7C8]
	0x03521F58 TBNZ X8, 0x0, 0x3521F70
	0x03521F5C ADRP X0, 0xC12000
	0x03521F60 LDR X0, [X0 + 0x7C8]
	0x03521F64 BL 0x1C16CF4
	0x03521F68 MOVZ W8, 0x1
	0x03521F6C STRB W8, [X19 + 0xB3D]
	0x03521F70 LDR X0, [X20]
	0x03521F74 LDR W8, [X0 + 0xE0]
	0x03521F78 CBNZ W8, 0x3521F84
	0x03521F7C BL 0x1C16DFC
	0x03521F80 LDR X0, [X20]
	0x03521F84 LDR X8, [X0 + 0xB8]
	0x03521F88 LDR X19, [X8]
	0x03521F8C STRB W31, [X31 + 0xC]
	0x03521F90 ADD X1, X31, 0xC
	0x03521F94 MOV X0, X19
	0x03521F98 MOV X2, X31
	0x03521F9C BL 0x33DE64C
	0x03521FA0 LDR X0, [X20]
	0x03521FA4 LDR W8, [X0 + 0xE0]
	0x03521FA8 CBNZ W8, 0x3521FB4
	0x03521FAC BL 0x1C16DFC
	0x03521FB0 LDR X0, [X20]
	0x03521FB4 LDR X8, [X0 + 0xB8]
	0x03521FB8 LDR X0, [X8]
	0x03521FBC CBZ X0, 0x3522008
	0x03521FC0 LDR X8, [X0]
	0x03521FC4 LDP X9, X1, [X8 + 0x188]
	0x03521FC8 BLR X9
	0x03521FCC MOV W21, W0
	0x03521FD0 MOV X20, X31
	0x03521FD4 LDRB W8, [X31 + 0xC]
	0x03521FD8 CBZ W8, 0x3521FE8
	0x03521FDC MOV X0, X19
	0x03521FE0 MOV X1, X31
	0x03521FE4 BL 0x33E14E4
	0x03521FE8 CBNZ X20, 0x3522000
	0x03521FEC MOV W0, W21
	0x03521FF0 LDP X20, X19, [X31 + 0x20]
	0x03521FF4 LDP X30, X21, [X31 + 0x10]
	0x03521FF8 ADD X31, X31, 0x30
	0x03521FFC RET
	0x03522000 MOV X0, X20
	0x03522004 BL 0x1C16F18
	0x03522008 BL 0x1C16F20
	0x0352200C B 0x3522014
	0x03522010 B 0x3522014
	0x03522014 MOV X21, X0
	0x03522018 CMP W1, 0x1
	0x0352201C B.NE 0x3522038
	0x03522020 MOV X0, X21
	0x03522024 BL 0x3EB1AD0

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X19, 0xEBF000
	015 Move W8, [X19+2870]
	016 Move X22, X0
	017 Move [X31+8], W1
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {108}
	022 Move X0, 0xC05000
	023 Move X0, [X0+280]
	024 Call 0x1C17CF4
	025 Move X0, 0xBD3000
	026 Move X0, [X0+1560]
	027 Call 0x1C17CF4
	028 Move X0, 0xC14000
	029 Move X0, [X0+136]
	030 Call 0x1C17CF4
	031 Move X0, 0xC03000
	032 Move X0, [X0+3896]
	033 Call 0x1C17CF4
	034 Move X0, 0xBD3000
	035 Move X0, [X0+2072]
	036 Call 0x1C17CF4
	037 Move X0, 0xBD3000
	038 Move X0, [X0+3584]
	039 Call 0x1C17CF4
	040 Move X0, 0xBDB000
	041 Move X0, [X0+3512]
	042 Call 0x1C17CF4
	043 Move X0, 0xBD3000
	044 Move X0, [X0+3608]
	045 Call 0x1C17CF4
	046 Move X0, 0xBD3000
	047 Move X0, [X0+1880]
	048 Call 0x1C17CF4
	049 Move X0, 0xC14000
	050 Move X0, [X0+1688]
	051 Call 0x1C17CF4
	052 Move X0, 0xC13000
	053 Move X0, [X0+3096]
	054 Call 0x1C17CF4
	055 Move X0, 0xBD3000
	056 Move X0, [X0+2512]
	057 Call 0x1C17CF4
	058 Move X0, 0xBDD000
	059 Move X0, [X0+2408]
	060 Call 0x1C17CF4
	061 Move X0, 0xBD3000
	062 Move X0, [X0+2288]
	063 Call 0x1C17CF4
	064 Move X0, 0xC05000
	065 Move X0, [X0+368]
	066 Call 0x1C17CF4
	067 Move X0, 0xBD3000
	068 Move X0, [X0+2760]
	069 Call 0x1C17CF4
	070 Move X0, 0xBFC000
	071 Move X0, [X0+1784]
	072 Call 0x1C17CF4
	073 Move X0, 0xBDB000
	074 Move X0, [X0+3680]
	075 Call 0x1C17CF4
	076 Move X0, 0xBD3000
	077 Move X0, [X0+1728]
	078 Call 0x1C17CF4
	079 Move X0, 0xBD3000
	080 Move X0, [X0+3832]
	081 Call 0x1C17CF4
	082 Move X0, 0xC00000
	083 Move X0, [X0+864]
	084 Call 0x1C17CF4
	085 Move X0, 0xC14000
	086 Move X0, [X0+1696]
	087 Call 0x1C17CF4
	088 Move X0, 0xBDE000
	089 Move X0, [X0+1752]
	090 Call 0x1C17CF4
	091 Move X0, 0xC14000
	092 Move X0, [X0+1704]
	093 Call 0x1C17CF4
	094 Move X0, 0xBD3000
	095 Move X0, [X0+2096]
	096 Call 0x1C17CF4
	097 Move X0, 0xBD3000
	098 Move X0, [X0+2104]
	099 Call 0x1C17CF4
	100 Move X0, 0xC14000
	101 Move X0, [X0+1712]
	102 Call 0x1C17CF4
	103 Move X0, 0xBD5000
	104 Move X0, [X0+928]
	105 Call 0x1C17CF4
	106 Move W8, 1
	107 Move [X19+2870], W8
	108 Compare X22, 0
	109 JumpIfEqual {141}
	110 Move X8, 0xBD3000
	111 Move X8, [X8+2288]
	112 Move X0, [X8]
	113 Call 0x1C17F10
	114 Move X1, X31
	115 Move X19, X0
	116 Call StringBuilder..ctor, X0
	117 Compare X19, 0
	118 JumpIfEqual {848}
	119 Move X8, 0xC00000
	120 Move X8, [X8+864]
	121 Move X29, 0xBD3000
	122 Move X0, X19
	123 Move X2, X31
	124 Move X1, [X8]
	125 Move X29, [X29+2072]
	126 Call StringBuilder.Append, X0, X1
	127 Move X8, [X22]
	128 Move X1, [X29]
	129 NotImplemented "Instruction LDRH not yet implemented."
	130 Compare X9, 0
	131 JumpIfEqual {138}
	132 Move X10, [X8+176]
	133 Add X10, X10, 8
	134 NotImplemented "Instruction LDUR not yet implemented."
	135 NotImplemented "Instruction CMP not yet implemented."
	136 Subtract X9, X9, 1
	137 Add X10, X10, 16
	138 Move W2, 2
	139 Move X0, X22
	140 Call 0x1C5D788
	141 Move X8, 0xBD3000
	142 Move X8, [X8+2096]
	143 Move X0, [X8]
	144 Move W9, [X10]
	145 Add W9, W9, 2
	146 Add X8, X8, W9
	147 Add X0, X8, 312
	148 Move X8, [X0]
	149 Move X1, [X0+8]
	150 Move X0, X22
	151 NotImplemented "Instruction BLR not yet implemented."
	152 Compare X0, 0
	153 JumpIfEqual {848}
	154 Move X10, 0xBDB000
	155 Move X8, [X0]
	156 Move X10, [X10+3512]
	157 Move X20, X0
	158 NotImplemented "Instruction LDRH not yet implemented."
	159 Move X1, [X10]
	160 Compare X9, 0
	161 JumpIfEqual {168}
	162 Move X10, [X8+176]
	163 Add X10, X10, 8
	164 NotImplemented "Instruction LDUR not yet implemented."
	165 NotImplemented "Instruction CMP not yet implemented."
	166 Subtract X9, X9, 1
	167 Add X10, X10, 16
	168 Move X0, X20
	169 Move W2, W31
	170 Call 0x1C5D788
	171 NotImplemented "Instruction LDRSW not yet implemented."
	172 Add X8, X8, X9
	173 Add X0, X8, 312
	174 Move X8, [X0]
	175 Move X1, [X0+8]
	176 Move X0, X20
	177 NotImplemented "Instruction BLR not yet implemented."
	178 Move X20, X0
	179 Compare X0, 0
	180 JumpIfEqual {852}
	181 Move X28, 0xBD3000
	182 Move X21, 0xBD3000
	183 Move X28, [X28+3608]
	184 Move X21, [X21+1728]
	185 Move X8, [X20]
	186 Move X1, [X28]
	187 NotImplemented "Instruction LDRH not yet implemented."
	188 Compare X9, 0
	189 JumpIfEqual {196}
	190 Move X10, [X8+176]
	191 Add X10, X10, 8
	192 NotImplemented "Instruction LDUR not yet implemented."
	193 NotImplemented "Instruction CMP not yet implemented."
	194 Subtract X9, X9, 1
	195 Add X10, X10, 16
	196 Move X0, X20
	197 Move W2, W31
	198 Call 0x1C5D788
	199 NotImplemented "Instruction LDRSW not yet implemented."
	200 Add X8, X8, X9
	201 Add X0, X8, 312
	202 Move X8, [X0]
	203 Move X1, [X0+8]
	204 Move X0, X20
	205 NotImplemented "Instruction BLR not yet implemented."
	206 Move TEMP, X0
	207 And TEMP, TEMP, 1
	208 Compare TEMP, 1
	209 JumpIfNotEqual {760}
	210 Move X8, [X20]
	211 Move X1, [X28]
	212 NotImplemented "Instruction LDRH not yet implemented."
	213 Compare X9, 0
	214 JumpIfEqual {221}
	215 Move X10, [X8+176]
	216 Add X10, X10, 8
	217 NotImplemented "Instruction LDUR not yet implemented."
	218 NotImplemented "Instruction CMP not yet implemented."
	219 Subtract X9, X9, 1
	220 Add X10, X10, 16
	221 Move W2, 1
	222 Move X0, X20
	223 Call 0x1C5D788
	224 Move W9, [X10]
	225 Add W9, W9, 1
	226 Add X8, X8, W9
	227 Add X0, X8, 312
	228 Move X8, [X0]
	229 Move X1, [X0+8]
	230 Move X0, X20
	231 NotImplemented "Instruction BLR not yet implemented."
	232 Move X23, X0
	233 Move X0, X19
	234 Move X1, X31
	235 Call StringBuilder.get_Length, X0
	236 NotImplemented "Instruction CMP not yet implemented."
	237 Move X8, 0xBD3000
	238 Move X8, [X8+2104]
	239 Move X1, [X8]
	240 Move X0, X19
	241 Move X2, X31
	242 Call StringBuilder.Append, X0, X1
	243 Move X8, [X22]
	244 Move X1, [X29]
	245 NotImplemented "Instruction LDRH not yet implemented."
	246 Compare X9, 0
	247 JumpIfEqual {254}
	248 Move X10, [X8+176]
	249 Add X10, X10, 8
	250 NotImplemented "Instruction LDUR not yet implemented."
	251 NotImplemented "Instruction CMP not yet implemented."
	252 Subtract X9, X9, 1
	253 Add X10, X10, 16
	254 Move X0, X22
	255 Move W2, W31
	256 Call 0x1C5D788
	257 NotImplemented "Instruction LDRSW not yet implemented."
	258 Add X8, X8, X9
	259 Add X0, X8, 312
	260 Move X8, [X0]
	261 Move X2, [X0+8]
	262 Move X0, X22
	263 Move X1, X23
	264 NotImplemented "Instruction BLR not yet implemented."
	265 Compare X0, 0
	266 JumpIfEqual {281}
	267 Move X8, [X22]
	268 Move X1, [X29]
	269 NotImplemented "Instruction LDRH not yet implemented."
	270 Compare X9, 0
	271 JumpIfEqual {278}
	272 Move X10, [X8+176]
	273 Add X10, X10, 8
	274 NotImplemented "Instruction LDUR not yet implemented."
	275 NotImplemented "Instruction CMP not yet implemented."
	276 Subtract X9, X9, 1
	277 Add X10, X10, 16
	278 Move X0, X22
	279 Move W2, W31
	280 Call 0x1C5D788
	281 Move X0, [X21]
	282 Move X9, 0xBDD000
	283 Move W8, [X0+224]
	284 Move X9, [X9+2408]
	285 Move X24, [X9]
	286 Compare W8, 0
	287 JumpIfNotEqual {289}
	288 Call 0x1C17DFC
	289 Move X0, X24
	290 Move X1, X31
	291 Call Type.GetTypeFromHandle, X0
	292 Move X8, 0xBD3000
	293 Move X8, [X8+2096]
	294 Move X24, X0
	295 Move X25, [X8]
	296 NotImplemented "Instruction LDRSW not yet implemented."
	297 Add X8, X8, X9
	298 Add X0, X8, 312
	299 Move X8, [X0]
	300 Move X2, [X0+8]
	301 Move X0, X22
	302 Move X1, X23
	303 NotImplemented "Instruction BLR not yet implemented."
	304 Compare X0, 0
	305 JumpIfEqual {821}
	306 Move X1, X31
	307 Call "il2cpp_vm_object_is_inst", X0
	308 Move X8, [X22]
	309 Move X1, [X29]
	310 Move X24, X0
	311 NotImplemented "Instruction LDRH not yet implemented."
	312 Compare X9, 0
	313 JumpIfEqual {320}
	314 Move X10, [X8+176]
	315 Add X10, X10, 8
	316 NotImplemented "Instruction LDUR not yet implemented."
	317 NotImplemented "Instruction CMP not yet implemented."
	318 Subtract X9, X9, 1
	319 Add X10, X10, 16
	320 Move X0, X22
	321 Move W2, W31
	322 Call 0x1C5D788
	323 NotImplemented "Instruction LDRSW not yet implemented."
	324 Add X8, X8, X9
	325 Add X0, X8, 312
	326 Move X8, [X0]
	327 Move X2, [X0+8]
	328 Move X0, X22
	329 Move X1, X23
	330 NotImplemented "Instruction BLR not yet implemented."
	331 Compare X0, 0
	332 JumpIfEqual {822}
	333 Move X8, [X0]
	334 Move X9, [X8+360]
	335 Move X1, [X8+368]
	336 NotImplemented "Instruction BLR not yet implemented."
	337 Move X25, X0
	338 Move X0, [X21]
	339 Move X9, 0xC03000
	340 Move W8, [X0+224]
	341 Move X9, [X9+3896]
	342 Move X26, [X9]
	343 Compare W8, 0
	344 JumpIfNotEqual {346}
	345 Call 0x1C17DFC
	346 Move X0, X26
	347 Move X1, X31
	348 Call Type.GetTypeFromHandle, X0
	349 Move X1, X0
	350 Move X0, X24
	351 Move X2, X31
	352 Call Type.op_Equality, X0, X1
	353 Move TEMP, X0
	354 And TEMP, TEMP, 1
	355 Compare TEMP, 1
	356 JumpIfEqual {376}
	357 Move X0, [X21]
	358 Move X9, 0xC14000
	359 Move W8, [X0+224]
	360 Move X9, [X9+136]
	361 Move X26, [X9]
	362 Compare W8, 0
	363 JumpIfNotEqual {365}
	364 Call 0x1C17DFC
	365 Move X0, X26
	366 Move X1, X31
	367 Call Type.GetTypeFromHandle, X0
	368 Move X1, X0
	369 Move X0, X24
	370 Move X2, X31
	371 Call Type.op_Equality, X0, X1
	372 Move TEMP, X0
	373 And TEMP, TEMP, 1
	374 Compare TEMP, 1
	375 JumpIfNotEqual {390}
	376 Move X8, [X22]
	377 Move X1, [X29]
	378 NotImplemented "Instruction LDRH not yet implemented."
	379 Compare X9, 0
	380 JumpIfEqual {387}
	381 Move X10, [X8+176]
	382 Add X10, X10, 8
	383 NotImplemented "Instruction LDUR not yet implemented."
	384 NotImplemented "Instruction CMP not yet implemented."
	385 Subtract X9, X9, 1
	386 Add X10, X10, 16
	387 Move X0, X22
	388 Move W2, W31
	389 Call 0x1C5D788
	390 Move X0, [X21]
	391 Move X9, 0xC14000
	392 Move W8, [X0+224]
	393 Move X9, [X9+1688]
	394 Move X26, [X9]
	395 Compare W8, 0
	396 JumpIfNotEqual {398}
	397 Call 0x1C17DFC
	398 Move X0, X26
	399 Move X1, X31
	400 Call Type.GetTypeFromHandle, X0
	401 Move X1, X0
	402 Move X0, X24
	403 Move X2, X31
	404 Call Type.op_Equality, X0, X1
	405 Move TEMP, X0
	406 And TEMP, TEMP, 1
	407 Compare TEMP, 1
	408 JumpIfNotEqual {542}
	409 Move X8, [X22]
	410 Move X1, [X29]
	411 NotImplemented "Instruction LDRH not yet implemented."
	412 Compare X9, 0
	413 JumpIfEqual {420}
	414 Move X10, [X8+176]
	415 Add X10, X10, 8
	416 NotImplemented "Instruction LDUR not yet implemented."
	417 NotImplemented "Instruction CMP not yet implemented."
	418 Subtract X9, X9, 1
	419 Add X10, X10, 16
	420 Move X0, X22
	421 Move W2, W31
	422 Call 0x1C5D788
	423 NotImplemented "Instruction LDRSW not yet implemented."
	424 Add X8, X8, X9
	425 Add X0, X8, 312
	426 Move X8, [X0]
	427 Move X2, [X0+8]
	428 Move X0, X22
	429 Move X1, X23
	430 NotImplemented "Instruction BLR not yet implemented."
	431 Move X8, 0xBDB000
	432 Move X8, [X8+3680]
	433 Move X25, X0
	434 Move X0, [X8]
	435 Move W8, [X0+224]
	436 Compare W8, 0
	437 JumpIfNotEqual {439}
	438 Call 0x1C17DFC
	439 Compare X25, 0
	440 JumpIfEqual {447}
	441 Move X26, [X29]
	442 Move X0, X25
	443 Move X1, X26
	444 Call 0x1C17E00
	445 Compare X0, 0
	446 JumpIfNotEqual {448}
	447 Move X0, X31
	448 Move W1, 1
	449 Call SupportClass.DictionaryToString, X0, X1
	450 Move X25, X0
	451 Move W8, [X31+8]
	452 Move TEMP, X8
	453 And TEMP, TEMP, 1
	454 Compare TEMP, 1
	455 JumpIfNotEqual {534}
	456 Move X8, 0xBD3000
	457 Move X8, [X8+2512]
	458 Move X0, [X8]
	459 Move W1, 4
	460 Call 0x1C17D6C
	461 Compare X23, 0
	462 JumpIfEqual {823}
	463 Move X26, X0
	464 Move X0, X23
	465 Move X1, X31
	466 Call "il2cpp_vm_object_is_inst", X0
	467 Compare X0, 0
	468 JumpIfEqual {824}
	469 Move X8, [X0]
	470 Move X9, [X8+424]
	471 Move X1, [X8+432]
	472 NotImplemented "Instruction BLR not yet implemented."
	473 Compare X26, 0
	474 JumpIfEqual {829}
	475 Move X27, X0
	476 Compare X0, 0
	477 JumpIfEqual {484}
	478 Move X8, [X26]
	479 Move X1, [X8+64]
	480 Move X0, X27
	481 Call 0x1C17E00
	482 Compare X0, 0
	483 JumpIfEqual {840}
	484 Move W8, [X26+24]
	485 Compare W8, 0
	486 JumpIfEqual {828}
	487 Move X8, [X26]
	488 Move [X26+32], X27
	489 Move X1, [X8+64]
	490 Move X0, X23
	491 Call 0x1C17E00
	492 Compare X0, 0
	493 JumpIfEqual {831}
	494 Move W8, [X26+24]
	495 NotImplemented "Instruction CMP not yet implemented."
	496 Move [X26+40], X23
	497 Compare X24, 0
	498 JumpIfEqual {826}
	499 Move X8, [X24]
	500 Move X9, [X8+424]
	501 Move X1, [X8+432]
	502 Move X0, X24
	503 NotImplemented "Instruction BLR not yet implemented."
	504 Move X23, X0
	505 Compare X0, 0
	506 JumpIfEqual {513}
	507 Move X8, [X26]
	508 Move X1, [X8+64]
	509 Move X0, X23
	510 Call 0x1C17E00
	511 Compare X0, 0
	512 JumpIfEqual {843}
	513 Move W8, [X26+24]
	514 NotImplemented "Instruction CMP not yet implemented."
	515 Move [X26+48], X23
	516 Compare X25, 0
	517 JumpIfEqual {525}
	518 Move X8, [X26]
	519 Move X1, [X8+64]
	520 Move X0, X25
	521 Call 0x1C17E00
	522 Compare X0, 0
	523 JumpIfEqual {837}
	524 Move W8, [X26+24]
	525 NotImplemented "Instruction CMP not yet implemented."
	526 Move [X26+56], X25
	527 Move X8, 0xC14000
	528 Move X8, [X8+1696]
	529 Move X1, [X8]
	530 Move X0, X19
	531 Move X2, X26
	532 Move X3, X31
	533 Call StringBuilder.AppendFormat, X0, X1, X2
	534 Move X8, 0xBD3000
	535 Move X8, [X8+3832]
	536 Move X1, [X8]
	537 Move X0, X19
	538 Move X2, X23
	539 Move X3, X25
	540 Move X4, X31
	541 Call StringBuilder.AppendFormat, X0, X1, X2, X3
	542 Move X0, [X21]
	543 Move X9, 0xC05000
	544 Move W8, [X0+224]
	545 Move X9, [X9+368]
	546 Move X26, [X9]
	547 Compare W8, 0
	548 JumpIfNotEqual {550}
	549 Call 0x1C17DFC
	550 Move X0, X26
	551 Move X1, X31
	552 Call Type.GetTypeFromHandle, X0
	553 Move X1, X0
	554 Move X0, X24
	555 Move X2, X31
	556 Call Type.op_Equality, X0, X1
	557 Move TEMP, X0
	558 And TEMP, TEMP, 1
	559 Compare TEMP, 1
	560 JumpIfNotEqual {575}
	561 Move X8, [X22]
	562 Move X1, [X29]
	563 NotImplemented "Instruction LDRH not yet implemented."
	564 Compare X9, 0
	565 JumpIfEqual {572}
	566 Move X10, [X8+176]
	567 Add X10, X10, 8
	568 NotImplemented "Instruction LDUR not yet implemented."
	569 NotImplemented "Instruction CMP not yet implemented."
	570 Subtract X9, X9, 1
	571 Add X10, X10, 16
	572 Move X0, X22
	573 Move W2, W31
	574 Call 0x1C5D788
	575 Move X0, [X21]
	576 Move X9, 0xC05000
	577 Move W8, [X0+224]
	578 Move X9, [X9+280]
	579 Move X26, [X9]
	580 Compare W8, 0
	581 JumpIfNotEqual {583}
	582 Call 0x1C17DFC
	583 Move X0, X26
	584 Move X1, X31
	585 Call Type.GetTypeFromHandle, X0
	586 Move X1, X0
	587 Move X0, X24
	588 Move X2, X31
	589 Call Type.op_Equality, X0, X1
	590 Move X8, [X22]
	591 Move X1, [X29]
	592 NotImplemented "Instruction LDRH not yet implemented."
	593 Move TEMP, X0
	594 And TEMP, TEMP, 1
	595 Compare TEMP, 1
	596 JumpIfNotEqual {640}
	597 Compare W9, 0
	598 JumpIfEqual {605}
	599 Move X10, [X8+176]
	600 Add X10, X10, 8
	601 NotImplemented "Instruction LDUR not yet implemented."
	602 NotImplemented "Instruction CMP not yet implemented."
	603 Subtract X9, X9, 1
	604 Add X10, X10, 16
	605 Move X0, X22
	606 Move W2, W31
	607 Call 0x1C5D788
	608 NotImplemented "Instruction LDRSW not yet implemented."
	609 Add X8, X8, X9
	610 Add X0, X8, 312
	611 Move X8, [X0]
	612 Move X2, [X0+8]
	613 Move X0, X22
	614 Move X1, X23
	615 NotImplemented "Instruction BLR not yet implemented."
	616 Move X8, 0xBDB000
	617 Move X8, [X8+3680]
	618 Move X25, X0
	619 Move X0, [X8]
	620 Move W8, [X0+224]
	621 Compare W8, 0
	622 JumpIfNotEqual {624}
	623 Call 0x1C17DFC
	624 Compare X25, 0
	625 JumpIfEqual {637}
	626 Move X9, 0xC13000
	627 Move X8, [X25]
	628 Move X9, [X9+3096]
	629 Move W10, [X8+304]
	630 Move X1, [X9]
	631 Move W9, [X1+304]
	632 NotImplemented "Instruction CMP not yet implemented."
	633 Move X8, [X8+200]
	634 Add X8, X8, X9
	635 NotImplemented "Instruction LDUR not yet implemented."
	636 NotImplemented "Instruction CMP not yet implemented."
	637 Move W1, 1
	638 Move X0, X25
	639 Call SupportClass.DictionaryToString, X0, X1
	640 Compare W9, 0
	641 JumpIfEqual {648}
	642 Move X10, [X8+176]
	643 Add X10, X10, 8
	644 NotImplemented "Instruction LDUR not yet implemented."
	645 NotImplemented "Instruction CMP not yet implemented."
	646 Subtract X9, X9, 1
	647 Add X10, X10, 16
	648 Move X0, X22
	649 Move W2, W31
	650 Call 0x1C5D788
	651 NotImplemented "Instruction LDRSW not yet implemented."
	652 Add X8, X8, X9
	653 Add X0, X8, 312
	654 Move X8, [X0]
	655 Move X2, [X0+8]
	656 Move X0, X22
	657 Move X1, X23
	658 NotImplemented "Instruction BLR not yet implemented."
	659 Move X8, 0xBD5000
	660 Move X8, [X8+928]
	661 Move X26, X0
	662 Move X25, [X8]
	663 Compare X0, 0
	664 JumpIfEqual {674}
	665 Move X8, 0xBD3000
	666 Move X8, [X8+2760]
	667 Move X27, [X8]
	668 Move X0, X26
	669 Move X1, X27
	670 Call 0x1C17E00
	671 Move X1, X0
	672 Compare X1, 0
	673 JumpIfNotEqual {675}
	674 Move X1, X31
	675 Move X0, X25
	676 Move X2, X31
	677 Call String.Join, X0, X1
	678 Move X1, X0
	679 Move X8, 0xC14000
	680 Move X8, [X8+1704]
	681 Move X0, [X8]
	682 Move X2, X31
	683 Call String.Format, X0, X1
	684 NotImplemented "Instruction LDRSW not yet implemented."
	685 Add X8, X8, X9
	686 Add X0, X8, 312
	687 Move X8, [X0]
	688 Move X2, [X0+8]
	689 Move X0, X22
	690 Move X1, X23
	691 NotImplemented "Instruction BLR not yet implemented."
	692 Move X25, X0
	693 Compare X0, 0
	694 JumpIfEqual {861}
	695 Move X8, 0xBD3000
	696 Move X8, [X8+1560]
	697 Move X26, [X8]
	698 Move X0, X25
	699 Move X1, X26
	700 Call 0x1C17E00
	701 Compare X0, 0
	702 JumpIfEqual {858}
	703 Move X8, 0xBD3000
	704 Move X8, [X8+1560]
	705 Move X26, [X8]
	706 Move X0, X25
	707 Move X1, X26
	708 Call 0x1C17E00
	709 Compare X0, 0
	710 JumpIfEqual {855}
	711 Move X9, 0xBD3000
	712 Move X8, [X0+24]
	713 Move X9, [X9+1880]
	714 Move [X31+12], W8
	715 Move X0, [X9]
	716 Add X1, X31, 12
	717 Call 0x1C17E04
	718 Move X1, X0
	719 Move X8, 0xC14000
	720 Move X8, [X8+1712]
	721 Move X0, [X8]
	722 Move X2, X31
	723 Call String.Format, X0, X1
	724 NotImplemented "Instruction LDRSW not yet implemented."
	725 Add X8, X8, X9
	726 Add X0, X8, 312
	727 Move X8, [X0]
	728 Move X2, [X0+8]
	729 Move X0, X22
	730 Move X1, X23
	731 NotImplemented "Instruction BLR not yet implemented."
	732 Move X8, X0
	733 Compare X0, 0
	734 JumpIfEqual {451}
	735 Move X10, 0xBFC000
	736 Move X9, [X8]
	737 Move X10, [X10+1784]
	738 Move W12, [X9+304]
	739 Move X10, [X10]
	740 Move W11, [X10+304]
	741 NotImplemented "Instruction CMP not yet implemented."
	742 Move X12, [X9+200]
	743 Add X11, X12, X11
	744 NotImplemented "Instruction LDUR not yet implemented."
	745 NotImplemented "Instruction CMP not yet implemented."
	746 Move X10, [X9+440]
	747 Move X2, [X9+448]
	748 Move W9, [X31+8]
	749 Move X0, X8
	750 And W1, W9, 1
	751 NotImplemented "Instruction BLR not yet implemented."
	752 Move X8, 0xBD3000
	753 Move X8, [X8+3832]
	754 Move X3, X0
	755 Move X1, [X8]
	756 Move X0, X19
	757 Move X2, X23
	758 Move X4, X31
	759 Call StringBuilder.AppendFormat, X0, X1, X2, X3
	760 Move X23, 0xBD3000
	761 Move X23, [X23+3584]
	762 Move X22, X31
	763 Move W21, 19
	764 Move X1, [X23]
	765 Move X0, X20
	766 Call 0x1C17E00
	767 Compare X0, 0
	768 JumpIfEqual {791}
	769 Move X8, [X0]
	770 Move X1, [X23]
	771 Move X20, X0
	772 NotImplemented "Instruction LDRH not yet implemented."
	773 Compare X9, 0
	774 JumpIfEqual {781}
	775 Move X10, [X8+176]
	776 Add X10, X10, 8
	777 NotImplemented "Instruction LDUR not yet implemented."
	778 NotImplemented "Instruction CMP not yet implemented."
	779 Subtract X9, X9, 1
	780 Add X10, X10, 16
	781 Move X0, X20
	782 Move W2, W31
	783 Call 0x1C5D788
	784 NotImplemented "Instruction LDRSW not yet implemented."
	785 Add X8, X8, X9
	786 Add X0, X8, 312
	787 Move X8, [X0]
	788 Move X1, [X0+8]
	789 Move X0, X20
	790 NotImplemented "Instruction BLR not yet implemented."
	791 Compare X22, 0
	792 JumpIfNotEqual {853}
	793 NotImplemented "Instruction CMP not yet implemented."
	794 Compare W21, 0
	795 JumpIfNotEqual {807}
	796 Move X8, 0xBDE000
	797 Move X8, [X8+1752]
	798 Move X0, X19
	799 Move X2, X31
	800 Move X1, [X8]
	801 Call StringBuilder.Append, X0, X1
	802 Move X8, [X19]
	803 Move X0, X19
	804 Move X9, [X8+360]
	805 Move X1, [X8+368]
	806 NotImplemented "Instruction BLR not yet implemented."
	807 Move X20, [X31+96]
	808 Move X19, [X31+104]
	809 Move X22, [X31+80]
	810 Move X21, [X31+88]
	811 Move X24, [X31+64]
	812 Move X23, [X31+72]
	813 Move X26, [X31+48]
	814 Move X25, [X31+56]
	815 Move X28, [X31+32]
	816 Move X27, [X31+40]
	817 Move X29, [X31+16]
	818 Move X30, [X31+24]
	819 Add X31, X31, 112
	820 Return X0
	821 Call 0x1C17F20
	822 Call 0x1C17F20
	823 Call 0x1C17F20
	824 Call 0x1C17F20
	825 Call 0x1C17F28
	826 Call 0x1C17F20
	827 Call 0x1C17F28
	828 Call 0x1C17F28
	829 Call 0x1C17F20
	830 Call 0x1C17F28
	831 Call 0x1C17F44
	832 Move X1, X31
	833 Call 0x1C17DEC
	834 Move X0, X25
	835 Move X1, X26
	836 Call 0x1C181E0
	837 Call 0x1C17F44
	838 Move X1, X31
	839 Call 0x1C17DEC
	840 Call 0x1C17F44
	841 Move X1, X31
	842 Call 0x1C17DEC
	843 Call 0x1C17F44
	844 Move X1, X31
	845 Call 0x1C17DEC
	846 Move X0, X25
	847 Call 0x1C181E0
	848 Call 0x1C17F20
	849 Move X0, X26
	850 Move X1, X27
	851 Call 0x1C181E0
	852 Call 0x1C17F20
	853 Move X0, X22
	854 Call 0x1C17F18
	855 Move X0, X25
	856 Move X1, X26
	857 Call 0x1C181E0
	858 Move X0, X25
	859 Move X1, X26
	860 Call 0x1C181E0
	861 Call 0x1C17F20
	862 Move X23, 0xBD3000
	863 Move X23, [X23+3584]
	864 Move X21, X0
	865 NotImplemented "Instruction CMP not yet implemented."
	866 Move X0, X21
	867 Call 0x3EB2AD0
	868 Move X22, [X0]
	869 Call 0x3EB2AE0
	870 Move W21, W31
	871 Move X22, X31
	872 Move X21, X0
	873 Move X8, 0xBD3000
	874 Move X8, [X8+3584]
	875 Move X1, [X8]
	876 Move X0, X20
	877 Call 0x1C17E00
	878 Move X19, X0
	879 Compare X0, 0
	880 JumpIfEqual {904}
	881 Move X8, [X19]
	882 Move X10, 0xBD3000
	883 NotImplemented "Instruction LDRH not yet implemented."
	884 Move X10, [X10+3584]
	885 Move X1, [X10]
	886 Compare X9, 0
	887 JumpIfEqual {894}
	888 Move X10, [X8+176]
	889 Add X10, X10, 8
	890 NotImplemented "Instruction LDUR not yet implemented."
	891 NotImplemented "Instruction CMP not yet implemented."
	892 Subtract X9, X9, 1
	893 Add X10, X10, 16
	894 Move X0, X19
	895 Move W2, W31
	896 Call 0x1C5D788
	897 NotImplemented "Instruction LDRSW not yet implemented."
	898 Add X8, X8, X9
	899 Add X0, X8, 312
	900 Move X8, [X0]
	901 Move X1, [X0+8]
	902 Move X0, X19
	903 NotImplemented "Instruction BLR not yet implemented."
	904 Compare X22, 0
	905 JumpIfNotEqual {908}
	906 Move X0, X21
	907 Call 0x1D2D690
	908 Move X0, X22
	909 Call 0x1C17F18
	910 Call 0x1991590

Method: System.String DictionaryToString(ExitGames.Client.Photon.NonAllocDictionary`2<System.Byte, System.Object> dictionary, System.Boolean includeTypes = True)

Disassembly:
	0x03522028 LDR X20, [X0]
	0x0352202C BL 0x3EB1AE0
	0x03522030 MOV W21, W31
	0x03522034 B 0x3521FD4
	0x03522038 MOV X20, X31
	0x0352203C B 0x3522044
	0x03522040 MOV X21, X0
	0x03522044 LDRB W8, [X31 + 0xC]
	0x03522048 CBZ W8, 0x3522058
	0x0352204C MOV X0, X19
	0x03522050 MOV X1, X31
	0x03522054 BL 0x33E14E4
	0x03522058 CBNZ X20, 0x3522064
	0x0352205C MOV X0, X21
	0x03522060 BL 0x1D2C690
	0x03522064 MOV X0, X20
	0x03522068 BL 0x1C16F18
	0x0352206C BL 0x1990590
	0x03522070 MOV X1, X31
	0x03522074 B 0x33BDD8C
	0x03522078 STP X30, X21, [X31 - 0x20]!
	0x0352207C STP X20, X19, [X31 + 0x10]
	0x03522080 ADRP X19, 0xEBD000
	0x03522084 ADRP X21, 0xBD8000
	0x03522088 ADRP X20, 0xC11000
	0x0352208C LDRB W8, [X19 + 0xB3E]
	0x03522090 LDR X21, [X21 + 0x2E8]
	0x03522094 LDR X20, [X20 + 0x7C8]
	0x03522098 TBNZ X8, 0x0, 0x35220BC
	0x0352209C ADRP X0, 0xBD8000
	0x035220A0 LDR X0, [X0 + 0x2E8]
	0x035220A4 BL 0x1C16CF4
	0x035220A8 ADRP X0, 0xC11000
	0x035220AC LDR X0, [X0 + 0x7C8]
	0x035220B0 BL 0x1C16CF4
	0x035220B4 MOVZ W8, 0x1
	0x035220B8 STRB W8, [X19 + 0xB3E]
	0x035220BC LDR X0, [X21]
	0x035220C0 BL 0x1C16F10
	0x035220C4 MOV X1, X31
	0x035220C8 MOV X19, X0
	0x035220CC BL 0x338E3CC
	0x035220D0 LDR X8, [X20]
	0x035220D4 LDR X8, [X8 + 0xB8]
	0x035220D8 STR X19, [X8]
	0x035220DC LDP X20, X19, [X31 + 0x10]
	0x035220E0 LDP X30, X21, [X31], #0x20
	0x035220E4 RET
	0x035220E8 STR X30, [X31 - 0x20]!
	0x035220EC STP X20, X19, [X31 + 0x10]
	0x035220F0 ADRP X19, 0xEBD000
	0x035220F4 ADRP X20, 0xC12000
	0x035220F8 LDRB W8, [X19 + 0xB3F]
	0x035220FC LDR X20, [X20 + 0x6E0]
	0x03522100 TBNZ X8, 0x0, 0x3522118
	0x03522104 ADRP X0, 0xC12000
	0x03522108 LDR X0, [X0 + 0x6E0]
	0x0352210C BL 0x1C16CF4
	0x03522110 MOVZ W8, 0x1
	0x03522114 STRB W8, [X19 + 0xB3F]
	0x03522118 LDR X0, [X20]
	0x0352211C BL 0x1C16F10
	0x03522120 MOV X1, X31
	0x03522124 MOV X19, X0
	0x03522128 BL 0x33BDD8C
	0x0352212C LDR X8, [X20]
	0x03522130 LDR X8, [X8 + 0xB8]
	0x03522134 STR X19, [X8]
	0x03522138 LDP X20, X19, [X31 + 0x10]
	0x0352213C LDR X30, [X31], #0x20
	0x03522140 RET
	0x03522144 MOV X1, X31
	0x03522148 B 0x33BDD8C
	0x0352214C MOV X0, X31
	0x03522150 B 0x33C18F4
	0x03522154 STP X30, X19, [X31 - 0x10]!
	0x03522158 MOV X19, X0
	0x0352215C LDR X8, [X19 + 0x18]
	0x03522160 CBZ X8, 0x3522190
	0x03522164 LDR X0, [X8 + 0x40]
	0x03522168 LDR X1, [X8 + 0x28]
	0x0352216C LDR X9, [X8 + 0x18]
	0x03522170 BLR X9
	0x03522174 TBZ X0, 0x0, 0x3522188
	0x03522178 LDR W0, [X19 + 0x10]
	0x0352217C MOV X1, X31
	0x03522180 BL 0x33E3BEC
	0x03522184 B 0x352215C
	0x03522188 LDP X30, X19, [X31], #0x10
	0x0352218C RET
	0x03522190 BL 0x1C16F20
	0x03522194 B 0x352219C
	0x03522198 B 0x352219C
	0x0352219C MOV X19, X0
	0x035221A0 CMP W1, 0x1
	0x035221A4 B.NE 0x3522200
	0x035221A8 MOV X0, X19
	0x035221AC BL 0x3EB1AD0
	0x035221B0 MOV X19, X0
	0x035221B4 ADRP X0, 0xBFA000
	0x035221B8 LDR X0, [X0 + 0xBB8]
	0x035221BC BL 0x1C16D08
	0x035221C0 LDR X8, [X19]
	0x035221C4 LDR X1, [X8]
	0x035221C8 BL 0x1C17270
	0x035221CC TBZ X0, 0x0, 0x35221D8
	0x035221D0 LDP X30, X19, [X31], #0x10
	0x035221D4 B 0x3EB1AE0
	0x035221D8 MOVZ W0, 0x8
	0x035221DC BL 0x3EB1AF0
	0x035221E0 LDR X8, [X19]
	0x035221E4 STR X8, [X0]
	0x035221E8 ADRP X1, 0x992000
	0x035221EC ADD X1, X1, 0xE58
	0x035221F0 MOV X2, X31
	0x035221F4 BL 0x3EB1B00
	0x035221F8 MOV X19, X0
	0x035221FC BL 0x3EB1AE0
	0x03522200 MOV X0, X19
	0x03522204 BL 0x1D2C690
	0x03522208 BL 0x1990590
	0x0352220C MOV X1, X31
	0x03522210 B 0x33A51F0
	0x03522214 STR X30, [X31 - 0x20]!
	0x03522218 STP X20, X19, [X31 + 0x10]
	0x0352221C ADRP X20, 0xEBD000
	0x03522220 LDRB W8, [X20 + 0xB40]
	0x03522224 MOV X19, X0
	0x03522228 TBNZ X8, 0x0, 0x3522240
	0x0352222C ADRP X0, 0xC11000
	0x03522230 LDR X0, [X0 + 0x990]
	0x03522234 BL 0x1C16CF4
	0x03522238 MOVZ W8, 0x1
	0x0352223C STRB W8, [X20 + 0xB40]
	0x03522240 LDR X8, [X19 + 0x120]
	0x03522244 CBZ X8, 0x3522258
	0x03522248 LDR W0, [X8 + 0x20]
	0x0352224C LDP X20, X19, [X31 + 0x10]
	0x03522250 LDR X30, [X31], #0x20
	0x03522254 RET
	0x03522258 BL 0x1C16F20
	0x0352225C LDR W0, [X0 + 0xE0]
	0x03522260 RET
	0x03522264 STP X30, X23, [X31 - 0x30]!
	0x03522268 STP X22, X21, [X31 + 0x10]
	0x0352226C STP X20, X19, [X31 + 0x20]
	0x03522270 ADRP X22, 0xEBD000
	0x03522274 ADRP X23, 0xC11000
	0x03522278 ADRP X20, 0xC11000
	0x0352227C ADRP X21, 0xBD1000
	0x03522280 LDRB W8, [X22 + 0xB41]
	0x03522284 LDR X23, [X23 + 0xD40]
	0x03522288 LDR X20, [X20 + 0xD48]
	0x0352228C LDR X21, [X21 + 0x618]
	0x03522290 MOV X19, X0
	0x03522294 TBNZ X8, 0x0, 0x35222DC
	0x03522298 ADRP X0, 0xBD1000
	0x0352229C LDR X0, [X0 + 0x618]
	0x035222A0 BL 0x1C16CF4
	0x035222A4 ADRP X0, 0xBDA000
	0x035222A8 LDR X0, [X0 + 0x6F8]
	0x035222AC BL 0x1C16CF4
	0x035222B0 ADRP X0, 0xC11000
	0x035222B4 LDR X0, [X0 + 0x778]
	0x035222B8 BL 0x1C16CF4
	0x035222BC ADRP X0, 0xC11000
	0x035222C0 LDR X0, [X0 + 0xD48]
	0x035222C4 BL 0x1C16CF4
	0x035222C8 ADRP X0, 0xC11000
	0x035222CC LDR X0, [X0 + 0xD40]
	0x035222D0 BL 0x1C16CF4
	0x035222D4 MOVZ W8, 0x1
	0x035222D8 STRB W8, [X22 + 0xB41]
	0x035222DC LDR X0, [X23]
	0x035222E0 BL 0x1C16F10
	0x035222E4 LDR X2, [X20]
	0x035222E8 MOVZ W1, 0x20
	0x035222EC MOV X20, X0
	0x035222F0 BL 0x24F12C8
	0x035222F4 STR X20, [X19 + 0x120]
	0x035222F8 LDR X0, [X21]
	0x035222FC MOVZ W1, 0x5
	0x03522300 BL 0x1C16D6C
	0x03522304 CBZ X0, 0x352237C
	0x03522308 LDR W8, [X0 + 0x18]
	0x0352230C CBZ W8, 0x3522380
	0x03522310 ADRP X8, 0xBDA000
	0x03522314 LDR X8, [X8 + 0x6F8]
	0x03522318 MOVZ W9, 0xF0
	0x0352231C STRB W9, [X0 + 0x20]
	0x03522320 STR X0, [X19 + 0x138]
	0x03522324 LDR X0, [X8]
	0x03522328 ADRP X21, 0xC11000
	0x0352232C LDR X21, [X21 + 0x778]
	0x03522330 BL 0x1C16F10
	0x03522334 MOV X1, X31
	0x03522338 MOV X20, X0
	0x0352233C BL 0x34FB6A4
	0x03522340 MOVZ W8, 0x101
	0x03522344 STR X20, [X19 + 0x140]
	0x03522348 STRH W8, [X19 + 0x148]
	0x0352234C LDR X0, [X21]
	0x03522350 LDR W8, [X0 + 0xE0]
	0x03522354 CBNZ W8, 0x352235C
	0x03522358 BL 0x1C16DFC
	0x0352235C MOV X0, X19
	0x03522360 MOV X1, X31
	0x03522364 BL 0x34EF3B0
	0x03522368 STR W31, [X19 + 0x118]
	0x0352236C LDP X20, X19, [X31 + 0x20]
	0x03522370 LDP X22, X21, [X31 + 0x10]
	0x03522374 LDP X30, X23, [X31], #0x30
	0x03522378 RET
	0x0352237C BL 0x1C16F20
	0x03522380 BL 0x1C16F28
	0x03522384 LDRB W8, [X0 + 0x20]
	0x03522388 CMP W8, 0x5
	0x0352238C CSET W0, EQ
	0x03522390 RET
	0x03522394 STP X30, X21, [X31 - 0x20]!
	0x03522398 STP X20, X19, [X31 + 0x10]
	0x0352239C ADRP X20, 0xEBD000
	0x035223A0 LDRB W8, [X20 + 0xB42]
	0x035223A4 MOV X19, X0
	0x035223A8 TBNZ X8, 0x0, 0x35223CC
	0x035223AC ADRP X0, 0xC11000
	0x035223B0 LDR X0, [X0 + 0xD48]
	0x035223B4 BL 0x1C16CF4
	0x035223B8 ADRP X0, 0xC11000
	0x035223BC LDR X0, [X0 + 0xD40]
	0x035223C0 BL 0x1C16CF4
	0x035223C4 MOVZ W8, 0x1
	0x035223C8 STRB W8, [X20 + 0xB42]
	0x035223CC MOV X0, X19
	0x035223D0 MOV X1, X31
	0x035223D4 BL 0x34EF9F4
	0x035223D8 LDR X8, [X19 + 0x10]
	0x035223DC CBZ X8, 0x3522468
	0x035223E0 ADRP X21, 0xC11000
	0x035223E4 ADRP X20, 0xC11000
	0x035223E8 LDR X1, [X8 + 0xF0]
	0x035223EC LDR X21, [X21 + 0xD40]
	0x035223F0 LDR X20, [X20 + 0xD48]
	0x035223F4 CBZ X1, 0x3522418
	0x035223F8 LDRB W8, [X19 + 0x20]
	0x035223FC CMP W8, 0x5
	0x03522400 B.EQ 0x3522418
	0x03522404 LDR X8, [X19]
	0x03522408 MOV X0, X19
	0x0352240C LDR X9, [X8 + 0x288]
	0x03522410 LDR X2, [X8 + 0x290]
	0x03522414 BLR X9
	0x03522418 LDR X0, [X21]
	0x0352241C BL 0x1C16F10
	0x03522420 LDR X2, [X20]
	0x03522424 MOVZ W1, 0x20
	0x03522428 MOV X20, X0
	0x0352242C BL 0x24F12C8
	0x03522430 MOV X0, X19
	0x03522434 MOV X1, X31
	0x03522438 STR X20, [X19 + 0x120]
	0x0352243C BL 0x34F39AC
	0x03522440 STR W0, [X19 + 0x88]
	0x03522444 MOV X0, X19
	0x03522448 MOV X1, X31
	0x0352244C BL 0x34F39AC
	0x03522450 MOVZ W8, 0x1
	0x03522454 STR W0, [X19 + 0x130]
	0x03522458 STRB W8, [X19 + 0x149]
	0x0352245C LDP X20, X19, [X31 + 0x10]
	0x03522460 LDP X30, X21, [X31], #0x20
	0x03522464 RET
	0x03522468 BL 0x1C16F20
	0x0352246C STR X30, [X31 - 0x50]!
	0x03522470 STP X26, X25, [X31 + 0x10]
	0x03522474 STP X24, X23, [X31 + 0x20]
	0x03522478 STP X22, X21, [X31 + 0x30]
	0x0352247C STP X20, X19, [X31 + 0x40]
	0x03522480 ADRP X25, 0xEBD000
	0x03522484 ADRP X26, 0xC12000
	0x03522488 ADRP X23, 0xC12000
	0x0352248C ADRP X24, 0xC11000
	0x03522490 LDRB W8, [X25 + 0xB43]
	0x03522494 LDR X26, [X26 + 0x6F8]
	0x03522498 LDR X23, [X23 + 0x700]
	0x0352249C LDR X24, [X24 + 0xCB8]
	0x035224A0 MOV X20, X4
	0x035224A4 MOV X21, X3
	0x035224A8 MOV X22, X1
	0x035224AC MOV X19, X0
	0x035224B0 TBNZ X8, 0x0, 0x35224E0
	0x035224B4 ADRP X0, 0xC12000
	0x035224B8 LDR X0, [X0 + 0x700]
	0x035224BC BL 0x1C16CF4
	0x035224C0 ADRP X0, 0xC12000
	0x035224C4 LDR X0, [X0 + 0x6F8]
	0x035224C8 BL 0x1C16CF4
	0x035224CC ADRP X0, 0xC11000
	0x035224D0 LDR X0, [X0 + 0xCB8]
	0x035224D4 BL 0x1C16CF4
	0x035224D8 MOVZ W8, 0x1
	0x035224DC STRB W8, [X25 + 0xB43]
	0x035224E0 LDR X0, [X26]
	0x035224E4 BL 0x1C16F10
	0x035224E8 LDR X1, [X23]
	0x035224EC MOV X23, X0
	0x035224F0 BL 0x301B7C4
	0x035224F4 STR X23, [X19 + 0x128]
	0x035224F8 LDR X0, [X24]
	0x035224FC LDRB W23, [X19 + 0x148]
	0x03522500 LDR W8, [X0 + 0xE0]
	0x03522504 CBNZ W8, 0x3522510
	0x03522508 BL 0x1C16DFC
	0x0352250C LDR X0, [X24]
	0x03522510 LDR X8, [X0 + 0xB8]
	0x03522514 CMP W23, 0x0
	0x03522518 LDRB W10, [X19 + 0x20]
	0x0352251C ADD X9, X8, 0x8
	0x03522520 CSEL X8, X9, X8, EQ
	0x03522524 LDR X8, [X8]
	0x03522528 AND W9, W10, 0xFE
	0x0352252C CMP W9, 0x4
	0x03522530 STR X8, [X19 + 0xE8]
	0x03522534 B.NE 0x352255C
	0x03522538 LDR X23, [X19 + 0x28]
	0x0352253C MOV X0, X19
	0x03522540 MOV X1, X22
	0x03522544 MOV X2, X21
	0x03522548 MOV X3, X20
	0x0352254C MOV X4, X31
	0x03522550 BL 0x34FCDF0
	0x03522554 CBZ X23, 0x3522598
	0x03522558 STR X0, [X23 + 0x28]
	0x0352255C LDR X0, [X19 + 0x28]
	0x03522560 CBZ X0, 0x3522598
	0x03522564 LDR X8, [X0]
	0x03522568 LDP X9, X1, [X8 + 0x178]
	0x0352256C BLR X9
	0x03522570 TBZ X0, 0x0, 0x352257C
	0x03522574 MOVZ W8, 0x1
	0x03522578 STRB W8, [X19 + 0x40]
	0x0352257C LDP X20, X19, [X31 + 0x40]
	0x03522580 LDP X22, X21, [X31 + 0x30]
	0x03522584 LDP X24, X23, [X31 + 0x20]
	0x03522588 LDP X26, X25, [X31 + 0x10]
	0x0352258C AND W0, W0, 0x1
	0x03522590 LDR X30, [X31], #0x50
	0x03522594 RET
	0x03522598 BL 0x1C16F20
	0x0352259C STP X30, X19, [X31 - 0x10]!
	0x035225A0 MOV X1, X31
	0x035225A4 MOV X19, X0
	0x035225A8 BL 0x34F39AC
	0x035225AC LDRB W8, [X19 + 0x148]
	0x035225B0 STR W0, [X19 + 0x130]
	0x035225B4 CBNZ W8, 0x35225C0
	0x035225B8 LDR X8, [X19 + 0xA0]
	0x035225BC CBZ X8, 0x35225F8
	0x035225C0 MOVZ W8, 0x1
	0x035225C4 MOV X0, X19
	0x035225C8 MOV X1, X31
	0x035225CC STRB W8, [X19 + 0x149]
	0x035225D0 BL 0x34F8110
	0x035225D4 MOV X1, X0
	0x035225D8 MOV X0, X19
	0x035225DC BL 0x3522600
	0x035225E0 LDR X8, [X19]
	0x035225E4 MOV X0, X19
	0x035225E8 LDR X2, [X8 + 0x238]
	0x035225EC LDR X1, [X8 + 0x240]
	0x035225F0 LDP X30, X19, [X31], #0x10
	0x035225F4 BR X2
	0x035225F8 STRB W31, [X19 + 0x149]
	0x035225FC B 0x35225E0
	0x03522600 STR X30, [X31 - 0x30]!
	0x03522604 STP X22, X21, [X31 + 0x10]
	0x03522608 STP X20, X19, [X31 + 0x20]
	0x0352260C ADRP X20, 0xEBD000
	0x03522610 LDRB W8, [X20 + 0xB46]
	0x03522614 MOV X21, X1
	0x03522618 MOV X19, X0
	0x0352261C TBNZ X8, 0x0, 0x352264C
	0x03522620 ADRP X0, 0xBD1000
	0x03522624 LDR X0, [X0 + 0x618]
	0x03522628 BL 0x1C16CF4
	0x0352262C ADRP X0, 0xBD9000
	0x03522630 LDR X0, [X0 + 0xF00]
	0x03522634 BL 0x1C16CF4
	0x03522638 ADRP X0, 0xBDA000
	0x0352263C LDR X0, [X0 + 0xBA8]
	0x03522640 BL 0x1C16CF4
	0x03522644 MOVZ W8, 0x1
	0x03522648 STRB W8, [X20 + 0xB46]
	0x0352264C CBZ X21, 0x3522770
	0x03522650 ADRP X8, 0xBDA000
	0x03522654 LDR X8, [X8 + 0xBA8]
	0x03522658 ADRP X22, 0xBD1000
	0x0352265C LDR X0, [X8]
	0x03522660 LDR X22, [X22 + 0x618]
	0x03522664 BL 0x1C16F10
	0x03522668 LDR W8, [X21 + 0x18]
	0x0352266C MOV X20, X0
	0x03522670 ADD W1, W8, 0x20
	0x03522674 BL 0x3517E94
	0x03522678 LDR X0, [X22]
	0x0352267C MOVZ W1, 0x7
	0x03522680 BL 0x1C16D6C
	0x03522684 CBZ X0, 0x3522770
	0x03522688 LDR W8, [X0 + 0x18]
	0x0352268C MOV X22, X0
	0x03522690 CBZ W8, 0x3522774
	0x03522694 MOVZ W9, 0xFB
	0x03522698 CMP W8, 0x6
	0x0352269C STRB W9, [X22 + 0x20]
	0x035226A0 B.LS 0x3522774
	0x035226A4 ADRP X9, 0xBD9000
	0x035226A8 LDR X9, [X9 + 0xF00]
	0x035226AC MOVZ W10, 0x1
	0x035226B0 STRB W10, [X22 + 0x26]
	0x035226B4 STR W10, [X31 + 0xC]
	0x035226B8 LDR X0, [X9]
	0x035226BC LDR W9, [X0 + 0xE0]
	0x035226C0 CBNZ W9, 0x35226CC
	0x035226C4 BL 0x1C16DFC
	0x035226C8 LDR W8, [X22 + 0x18]
	0x035226CC LDR W9, [X21 + 0x18]
	0x035226D0 ADD X2, X31, 0xC
	0x035226D4 MOV X1, X22
	0x035226D8 MOV X3, X31
	0x035226DC ADD W0, W8, W9
	0x035226E0 BL 0x35067BC
	0x035226E4 CBZ X20, 0x3522770
	0x035226E8 LDR W3, [X22 + 0x18]
	0x035226EC MOV X0, X20
	0x035226F0 MOV X1, X22
	0x035226F4 MOV W2, W31
	0x035226F8 BL 0x3517F60
	0x035226FC LDR W3, [X21 + 0x18]
	0x03522700 MOV X0, X20
	0x03522704 MOV X1, X21
	0x03522708 MOV W2, W31
	0x0352270C BL 0x3517F60
	0x03522710 MOV X0, X19
	0x03522714 MOV X1, X31
	0x03522718 BL 0x34EFFC0
	0x0352271C TBZ X0, 0x0, 0x352274C
	0x03522720 MOV X0, X19
	0x03522724 MOV X1, X31
	0x03522728 BL 0x34EFFDC
	0x0352272C CBZ X0, 0x3522770
	0x03522730 LDR W8, [X20 + 0x14]
	0x03522734 LDR W9, [X0 + 0x38]
	0x03522738 LDR W10, [X0 + 0x20]
	0x0352273C ADD W8, W9, W8
	0x03522740 ADD W9, W10, 0x1
	0x03522744 STR W8, [X0 + 0x38]
	0x03522748 STR W9, [X0 + 0x20]
	0x0352274C MOVZ W1, 0x1
	0x03522750 MOV X0, X19
	0x03522754 MOV X2, X20
	0x03522758 MOV W3, W31
	0x0352275C BL 0x3522CF8
	0x03522760 LDP X20, X19, [X31 + 0x20]
	0x03522764 LDP X22, X21, [X31 + 0x10]
	0x03522768 LDR X30, [X31], #0x30
	0x0352276C RET
	0x03522770 BL 0x1C16F20
	0x03522774 BL 0x1C16F28
	0x03522778 STP X30, X21, [X31 - 0x20]!
	0x0352277C STP X20, X19, [X31 + 0x10]
	0x03522780 ADRP X20, 0xEBD000
	0x03522784 LDRB W8, [X20 + 0xB44]
	0x03522788 MOV X19, X0
	0x0352278C TBNZ X8, 0x0, 0x35227B0
	0x03522790 ADRP X0, 0xBD9000
	0x03522794 LDR X0, [X0 + 0xBC8]
	0x03522798 BL 0x1C16CF4
	0x0352279C ADRP X0, 0xC12000
	0x035227A0 LDR X0, [X0 + 0x708]
	0x035227A4 BL 0x1C16CF4
	0x035227A8 MOVZ W8, 0x1
	0x035227AC STRB W8, [X20 + 0xB44]
	0x035227B0 LDRB W8, [X19 + 0x40]
	0x035227B4 ORR W8, W8, 0x4
	0x035227B8 CMP W8, 0x4
	0x035227BC B.NE 0x35227CC
	0x035227C0 LDP X20, X19, [X31 + 0x10]
	0x035227C4 LDP X30, X21, [X31], #0x20
	0x035227C8 RET
	0x035227CC MOV X0, X19
	0x035227D0 MOV X1, X31
	0x035227D4 BL 0x34F1150
	0x035227D8 AND W8, W0, 0xFF
	0x035227DC CMP W8, 0x5
	0x035227E0 B.CC 0x352286C
	0x035227E4 MOV X0, X19
	0x035227E8 MOV X1, X31
	0x035227EC BL 0x34F104C
	0x035227F0 CBZ X0, 0x3522884
	0x035227F4 ADRP X9, 0xBD9000
	0x035227F8 LDR X8, [X0]
	0x035227FC LDR X9, [X9 + 0xBC8]
	0x03522800 ADRP X10, 0xC12000
	0x03522804 MOV X20, X0
	0x03522808 LDR X1, [X9]
	0x0352280C LDR X10, [X10 + 0x708]
	0x03522810 LDRH W9, [X8 + 0x12E]
	0x03522814 LDR X21, [X10]
	0x03522818 CBZ X9, 0x352283C
	0x0352281C LDR X10, [X8 + 0xB0]
	0x03522820 ADD X10, X10, 0x8
	0x03522824 LDUR X11, [X10 - 0x8]
	0x03522828 CMP X11, X1
	0x0352282C B.EQ 0x352284C
	0x03522830 SUBS X9, X9, 0x1
	0x03522834 ADD X10, X10, 0x10
	0x03522838 B.NE 0x3522824
	0x0352283C MOV X0, X20
	0x03522840 MOV W2, W31
	0x03522844 BL 0x1C5C788
	0x03522848 B 0x3522858
	0x0352284C LDRSW X9, [X10]
	0x03522850 ADD X8, X8, X9, 0x4, LSL
	0x03522854 ADD X0, X8, 0x138
	0x03522858 LDP X8, X3, [X0]
	0x0352285C MOVZ W1, 0x5
	0x03522860 MOV X0, X20
	0x03522864 MOV X2, X21
	0x03522868 BLR X8
	0x0352286C LDR X8, [X19]
	0x03522870 MOV X0, X19
	0x03522874 LDP X20, X19, [X31 + 0x10]
	0x03522878 LDP X2, X1, [X8 + 0x1F8]
	0x0352287C LDP X30, X21, [X31], #0x20
	0x03522880 BR X2
	0x03522884 BL 0x1C16F20
	0x03522888 STR X30, [X31 - 0x30]!
	0x0352288C STP X22, X21, [X31 + 0x10]
	0x03522890 STP X20, X19, [X31 + 0x20]
	0x03522894 ADRP X20, 0xEBD000
	0x03522898 LDRB W8, [X20 + 0xB45]
	0x0352289C MOV X19, X0
	0x035228A0 TBNZ X8, 0x0, 0x35228B8
	0x035228A4 ADRP X0, 0xC11000
	0x035228A8 LDR X0, [X0 + 0xE40]
	0x035228AC BL 0x1C16CF4
	0x035228B0 MOVZ W8, 0x1
	0x035228B4 STRB W8, [X20 + 0xB45]
	0x035228B8 LDR X0, [X19 + 0x28]
	0x035228BC MOVZ W8, 0x4
	0x035228C0 STRB W8, [X19 + 0x40]
	0x035228C4 CBZ X0, 0x35228D4
	0x035228C8 LDR X8, [X0]
	0x035228CC LDP X9, X1, [X8 + 0x188]
	0x035228D0 BLR X9
	0x035228D4 LDR X20, [X19 + 0x120]
	0x035228D8 STRB W31, [X31 + 0xC]
	0x035228DC ADD X1, X31, 0xC
	0x035228E0 MOV X0, X20
	0x035228E4 MOV X2, X31
	0x035228E8 BL 0x33DE64C
	0x035228EC LDR X0, [X19 + 0x120]
	0x035228F0 CBZ X0, 0x352295C
	0x035228F4 ADRP X8, 0xC11000
	0x035228F8 LDR X8, [X8 + 0xE40]
	0x035228FC LDR X1, [X8]
	0x03522900 BL 0x24F1410
	0x03522904 MOV X21, X31
	0x03522908 MOVZ W22, 0x3
	0x0352290C LDRB W8, [X31 + 0xC]
	0x03522910 CBZ W8, 0x3522920
	0x03522914 MOV X0, X20
	0x03522918 MOV X1, X31
	0x0352291C BL 0x33E14E4
	0x03522920 CBNZ X21, 0x3522954
	0x03522924 CMP W22, 0x3
	0x03522928 B.EQ 0x3522930
	0x0352292C CBNZ W22, 0x3522944
	0x03522930 MOVZ W1, 0x401
	0x03522934 MOV X0, X19
	0x03522938 MOV X2, X31
	0x0352293C STRB W31, [X19 + 0x40]
	0x03522940 BL 0x34F0DFC
	0x03522944 LDP X20, X19, [X31 + 0x20]
	0x03522948 LDP X22, X21, [X31 + 0x10]
	0x0352294C LDR X30, [X31], #0x30
	0x03522950 RET
	0x03522954 MOV X0, X21
	0x03522958 BL 0x1C16F18
	0x0352295C BL 0x1C16F20
	0x03522960 B 0x3522964
	0x03522964 MOV X22, X0
	0x03522968 CMP W1, 0x1
	0x0352296C B.NE 0x3522988
	0x03522970 MOV X0, X22
	0x03522974 BL 0x3EB1AD0
	0x03522978 LDR X21, [X0]
	0x0352297C BL 0x3EB1AE0
	0x03522980 MOV W22, W31
	0x03522984 B 0x352290C
	0x03522988 MOV X21, X31
	0x0352298C B 0x3522994
	0x03522990 MOV X22, X0
	0x03522994 LDRB W8, [X31 + 0xC]
	0x03522998 CBZ W8, 0x35229A8
	0x0352299C MOV X0, X20
	0x035229A0 MOV X1, X31
	0x035229A4 BL 0x33E14E4
	0x035229A8 CBNZ X21, 0x35229B4
	0x035229AC MOV X0, X22
	0x035229B0 BL 0x1D2C690
	0x035229B4 MOV X0, X21
	0x035229B8 BL 0x1C16F18
	0x035229BC BL 0x1990590
	0x035229C0 STP X30, X19, [X31 - 0x10]!
	0x035229C4 MOV X19, X0
	0x035229C8 BL 0x35229D8
	0x035229CC STRB W31, [X19 + 0x70]
	0x035229D0 LDP X30, X19, [X31], #0x10
	0x035229D4 RET
	0x035229D8 SUB X31, X31, 0x40
	0x035229DC STP X30, X23, [X31 + 0x10]
	0x035229E0 STP X22, X21, [X31 + 0x20]
	0x035229E4 STP X20, X19, [X31 + 0x30]
	0x035229E8 ADRP X20, 0xEBD000
	0x035229EC LDRB W8, [X20 + 0xB4A]
	0x035229F0 MOV X19, X0
	0x035229F4 TBNZ X8, 0x0, 0x3522A30
	0x035229F8 ADRP X0, 0xBD1000
	0x035229FC LDR X0, [X0 + 0x758]
	0x03522A00 BL 0x1C16CF4
	0x03522A04 ADRP X0, 0xC11000
	0x03522A08 LDR X0, [X0 + 0x778]
	0x03522A0C BL 0x1C16CF4
	0x03522A10 ADRP X0, 0xC11000
	0x03522A14 LDR X0, [X0 + 0xC68]
	0x03522A18 BL 0x1C16CF4
	0x03522A1C ADRP X0, 0xBD9000
	0x03522A20 LDR X0, [X0 + 0xF00]
	0x03522A24 BL 0x1C16CF4
	0x03522A28 MOVZ W8, 0x1
	0x03522A2C STRB W8, [X20 + 0xB4A]
	0x03522A30 MOV X0, X19
	0x03522A34 MOV X1, X31
	0x03522A38 STRB W31, [X31 + 0xC]
	0x03522A3C STR W31, [X31 + 0x8]
	0x03522A40 BL 0x34F39AC
	0x03522A44 LDR W21, [X19 + 0x130]
	0x03522A48 MOV W20, W0
	0x03522A4C MOV X0, X19
	0x03522A50 MOV X1, X31
	0x03522A54 BL 0x34F4CC8
	0x03522A58 SUB W8, W20, W21
	0x03522A5C CMP W8, W0
	0x03522A60 B.LT 0x3522C50
	0x03522A64 LDRB W8, [X19 + 0x40]
	0x03522A68 CMP W8, 0x3
	0x03522A6C B.EQ 0x3522A80
	0x03522A70 CMP W8, 0x1
	0x03522A74 B.NE 0x3522C50
	0x03522A78 LDRB W8, [X19 + 0x149]
	0x03522A7C CBNZ W8, 0x3522C50
	0x03522A80 MOV X0, X19
	0x03522A84 MOV X1, X31
	0x03522A88 BL 0x34F39AC
	0x03522A8C LDRB W8, [X19 + 0x148]
	0x03522A90 MOV W21, W0
	0x03522A94 STR W0, [X19 + 0x130]
	0x03522A98 CBZ W8, 0x3522B98
	0x03522A9C ADRP X8, 0xBD9000
	0x03522AA0 LDR X8, [X8 + 0xF00]
	0x03522AA4 LDR X0, [X8]
	0x03522AA8 MOVZ W8, 0x1
	0x03522AAC STR W8, [X31 + 0x8]
	0x03522AB0 LDR X20, [X19 + 0x138]
	0x03522AB4 LDR W8, [X0 + 0xE0]
	0x03522AB8 CBNZ W8, 0x3522AC0
	0x03522ABC BL 0x1C16DFC
	0x03522AC0 ADD X2, X31, 0x8

ISIL:
	001 Subtract X31, X31, 144
	002 Move [X31+48], X29
	003 Move [X31+56], X30
	004 Move [X31+64], X28
	005 Move [X31+72], X27
	006 Move [X31+80], X26
	007 Move [X31+88], X25
	008 Move [X31+96], X24
	009 Move [X31+104], X23
	010 Move [X31+112], X22
	011 Move [X31+120], X21
	012 Move [X31+128], X20
	013 Move [X31+136], X19
	014 Move X19, 0xEBE000
	015 Move W8, [X19+2871]
	016 Move W20, W1
	017 Move X21, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {120}
	022 Move X0, 0xC04000
	023 Move X0, [X0+280]
	024 Call 0x1C17CF4
	025 Move X0, 0xBD2000
	026 Move X0, [X0+1560]
	027 Call 0x1C17CF4
	028 Move X0, 0xBD3000
	029 Move X0, [X0+2520]
	030 Call 0x1C17CF4
	031 Move X0, 0xC13000
	032 Move X0, [X0+136]
	033 Call 0x1C17CF4
	034 Move X0, 0xC02000
	035 Move X0, [X0+3896]
	036 Call 0x1C17CF4
	037 Move X0, 0xBD2000
	038 Move X0, [X0+2072]
	039 Call 0x1C17CF4
	040 Move X0, 0xBD2000
	041 Move X0, [X0+1880]
	042 Call 0x1C17CF4
	043 Move X0, 0xC13000
	044 Move X0, [X0+1720]
	045 Call 0x1C17CF4
	046 Move X0, 0xC13000
	047 Move X0, [X0+1728]
	048 Call 0x1C17CF4
	049 Move X0, 0xC13000
	050 Move X0, [X0+1736]
	051 Call 0x1C17CF4
	052 Move X0, 0xC13000
	053 Move X0, [X0+1744]
	054 Call 0x1C17CF4
	055 Move X0, 0xBFB000
	056 Move X0, [X0+520]
	057 Call 0x1C17CF4
	058 Move X0, 0xC13000
	059 Move X0, [X0+1752]
	060 Call 0x1C17CF4
	061 Move X0, 0xC13000
	062 Move X0, [X0+1688]
	063 Call 0x1C17CF4
	064 Move X0, 0xC12000
	065 Move X0, [X0+3096]
	066 Call 0x1C17CF4
	067 Move X0, 0xBD2000
	068 Move X0, [X0+2512]
	069 Call 0x1C17CF4
	070 Move X0, 0xBDC000
	071 Move X0, [X0+2408]
	072 Call 0x1C17CF4
	073 Move X0, 0xBD2000
	074 Move X0, [X0+2288]
	075 Call 0x1C17CF4
	076 Move X0, 0xC04000
	077 Move X0, [X0+368]
	078 Call 0x1C17CF4
	079 Move X0, 0xBD2000
	080 Move X0, [X0+2760]
	081 Call 0x1C17CF4
	082 Move X0, 0xBFB000
	083 Move X0, [X0+1784]
	084 Call 0x1C17CF4
	085 Move X0, 0xBDA000
	086 Move X0, [X0+3680]
	087 Call 0x1C17CF4
	088 Move X0, 0xBD2000
	089 Move X0, [X0+1728]
	090 Call 0x1C17CF4
	091 Move X0, 0xBD2000
	092 Move X0, [X0+3832]
	093 Call 0x1C17CF4
	094 Move X0, 0xBFF000
	095 Move X0, [X0+864]
	096 Call 0x1C17CF4
	097 Move X0, 0xC13000
	098 Move X0, [X0+1696]
	099 Call 0x1C17CF4
	100 Move X0, 0xBDD000
	101 Move X0, [X0+1752]
	102 Call 0x1C17CF4
	103 Move X0, 0xC13000
	104 Move X0, [X0+1704]
	105 Call 0x1C17CF4
	106 Move X0, 0xBD2000
	107 Move X0, [X0+2096]
	108 Call 0x1C17CF4
	109 Move X0, 0xBD2000
	110 Move X0, [X0+2104]
	111 Call 0x1C17CF4
	112 Move X0, 0xC13000
	113 Move X0, [X0+1712]
	114 Call 0x1C17CF4
	115 Move X0, 0xBD4000
	116 Move X0, [X0+928]
	117 Call 0x1C17CF4
	118 Move W8, 1
	119 Move [X19+2871], W8
	120 Move X8, 0xBD2000
	121 Move X8, [X8+2096]
	122 Move [X31+32], X31
	123 Move [X31+40], X31
	124 Compare X21, 0
	125 JumpIfEqual {596}
	126 Move X8, 0xBD2000
	127 Move X8, [X8+2288]
	128 Move X0, [X8]
	129 Call 0x1C17F10
	130 Move X1, X31
	131 Move X19, X0
	132 Call StringBuilder..ctor, X0
	133 Compare X19, 0
	134 JumpIfEqual {640}
	135 Move X8, 0xBFF000
	136 Move X8, [X8+864]
	137 Move X22, 0xC13000
	138 Move X23, 0xC13000
	139 Move X29, 0xBFB000
	140 Move X28, 0xBD2000
	141 Move X27, 0xBD3000
	142 Move X22, [X22+1752]
	143 Move X23, [X23+1728]
	144 Move X29, [X29+520]
	145 Move X28, [X28+1728]
	146 Move X27, [X27+2520]
	147 Move X1, [X8]
	148 Move X0, X19
	149 Move X2, X31
	150 Call StringBuilder.Append, X0, X1
	151 Move X1, [X22]
	152 Move X0, X21
	153 Call 0x24263E8, X0
	154 Move X8, [X23]
	155 Move [X31+16], X0
	156 Move [X31+24], X1
	157 Add X0, X31, 16
	158 Move X1, X8
	159 Call 0x2EDB510, X0
	160 Move [X31+32], X0
	161 Move [X31+40], X1
	162 Move X8, 0xC13000
	163 Move X8, [X8+1736]
	164 Move X1, [X8]
	165 Add X0, X31, 32
	166 Call 0x2EDB60C, X0
	167 Move TEMP, X0
	168 And TEMP, TEMP, 1
	169 Compare TEMP, 1
	170 JumpIfNotEqual {580}
	171 Move X8, 0xC13000
	172 Move X8, [X8+1744]
	173 Move X1, [X8]
	174 Add X0, X31, 32
	175 Call 0x2EDB5C0, X0
	176 Move W22, W0
	177 Move X0, X19
	178 Move X1, X31
	179 Call StringBuilder.get_Length, X0
	180 NotImplemented "Instruction CMP not yet implemented."
	181 Move X8, 0xBD2000
	182 Move X8, [X8+2104]
	183 Move X1, [X8]
	184 Move X0, X19
	185 Move X2, X31
	186 Call StringBuilder.Append, X0, X1
	187 Move X2, [X29]
	188 Move X0, X21
	189 Move W1, W22
	190 Call 0x24266C8, X0, X1
	191 Compare X0, 0
	192 JumpIfEqual {213}
	193 Move X2, [X29]
	194 Move X0, X21
	195 Move W1, W22
	196 Call 0x24266C8, X0, X1
	197 Compare X0, 0
	198 JumpIfEqual {612}
	199 Move X1, X31
	200 Call "il2cpp_vm_object_is_inst", X0
	201 Move X2, [X29]
	202 Move X23, X0
	203 Move X0, X21
	204 Move W1, W22
	205 Call 0x24266C8, X0, X1
	206 Compare X0, 0
	207 JumpIfEqual {611}
	208 Move X8, [X0]
	209 Move X9, [X8+360]
	210 Move X1, [X8+368]
	211 NotImplemented "Instruction BLR not yet implemented."
	212 Move X24, X0
	213 Move X0, [X28]
	214 Move X9, 0xBDC000
	215 Move W8, [X0+224]
	216 Move X9, [X9+2408]
	217 Move X23, [X9]
	218 Compare W8, 0
	219 JumpIfNotEqual {221}
	220 Call 0x1C17DFC
	221 Move X0, X23
	222 Move X1, X31
	223 Call Type.GetTypeFromHandle, X0
	224 Move X8, 0xBD2000
	225 Move X8, [X8+2096]
	226 Move X23, X0
	227 Move X24, [X8]
	228 Move X0, [X28]
	229 Move X9, 0xC02000
	230 Move W8, [X0+224]
	231 Move X9, [X9+3896]
	232 Move X25, [X9]
	233 Compare W8, 0
	234 JumpIfNotEqual {236}
	235 Call 0x1C17DFC
	236 Move X0, X25
	237 Move X1, X31
	238 Call Type.GetTypeFromHandle, X0
	239 Move X1, X0
	240 Move X0, X23
	241 Move X2, X31
	242 Call Type.op_Equality, X0, X1
	243 Move TEMP, X0
	244 And TEMP, TEMP, 1
	245 Compare TEMP, 1
	246 JumpIfEqual {266}
	247 Move X0, [X28]
	248 Move X9, 0xC13000
	249 Move W8, [X0+224]
	250 Move X9, [X9+136]
	251 Move X25, [X9]
	252 Compare W8, 0
	253 JumpIfNotEqual {255}
	254 Call 0x1C17DFC
	255 Move X0, X25
	256 Move X1, X31
	257 Call Type.GetTypeFromHandle, X0
	258 Move X1, X0
	259 Move X0, X23
	260 Move X2, X31
	261 Call Type.op_Equality, X0, X1
	262 Move TEMP, X0
	263 And TEMP, TEMP, 1
	264 Compare TEMP, 1
	265 JumpIfNotEqual {394}
	266 Move X2, [X29]
	267 Move X0, X21
	268 Move W1, W22
	269 Call 0x24266C8, X0, X1
	270 Move X8, 0xBDA000
	271 Move X8, [X8+3680]
	272 Move X24, X0
	273 Move X0, [X8]
	274 Move W8, [X0+224]
	275 Compare W8, 0
	276 JumpIfNotEqual {278}
	277 Call 0x1C17DFC
	278 Compare X24, 0
	279 JumpIfEqual {288}
	280 Move X8, 0xBD2000
	281 Move X8, [X8+2072]
	282 Move X25, [X8]
	283 Move X0, X24
	284 Move X1, X25
	285 Call 0x1C17E00
	286 Compare X0, 0
	287 JumpIfNotEqual {289}
	288 Move X0, X31
	289 Move W1, 1
	290 Call SupportClass.DictionaryToString, X0, X1
	291 Move X24, X0
	292 Move TEMP, X20
	293 And TEMP, TEMP, 1
	294 Compare TEMP, 1
	295 JumpIfNotEqual {382}
	296 Move X8, 0xBD2000
	297 Move X8, [X8+2512]
	298 Move X0, [X8]
	299 Move W1, 4
	300 Call 0x1C17D6C
	301 Move X25, X0
	302 Move X0, [X27]
	303 Move [X31+12], W22
	304 Add X1, X31, 12
	305 Call 0x1C17E04
	306 Move X1, X31
	307 Call "il2cpp_vm_object_is_inst", X0
	308 Compare X0, 0
	309 JumpIfEqual {614}
	310 Move X8, [X0]
	311 Move X9, [X8+424]
	312 Move X1, [X8+432]
	313 NotImplemented "Instruction BLR not yet implemented."
	314 Compare X25, 0
	315 JumpIfEqual {615}
	316 Move X26, X0
	317 Compare X0, 0
	318 JumpIfEqual {325}
	319 Move X8, [X25]
	320 Move X1, [X8+64]
	321 Move X0, X26
	322 Call 0x1C17E00
	323 Compare X0, 0
	324 JumpIfEqual {629}
	325 Move W8, [X25+24]
	326 Compare W8, 0
	327 JumpIfEqual {613}
	328 Move [X25+32], X26
	329 Move X0, [X27]
	330 Move [X31+8], W22
	331 Add X1, X31, 8
	332 Call 0x1C17E04
	333 Move X22, X0
	334 Compare X0, 0
	335 JumpIfEqual {342}
	336 Move X8, [X25]
	337 Move X1, [X8+64]
	338 Move X0, X22
	339 Call 0x1C17E00
	340 Compare X0, 0
	341 JumpIfEqual {623}
	342 Move W8, [X25+24]
	343 NotImplemented "Instruction CMP not yet implemented."
	344 Move [X25+40], X22
	345 Compare X23, 0
	346 JumpIfEqual {618}
	347 Move X8, [X23]
	348 Move X9, [X8+424]
	349 Move X1, [X8+432]
	350 Move X0, X23
	351 NotImplemented "Instruction BLR not yet implemented."
	352 Move X22, X0
	353 Compare X0, 0
	354 JumpIfEqual {361}
	355 Move X8, [X25]
	356 Move X1, [X8+64]
	357 Move X0, X22
	358 Call 0x1C17E00
	359 Compare X0, 0
	360 JumpIfEqual {632}
	361 Move W8, [X25+24]
	362 NotImplemented "Instruction CMP not yet implemented."
	363 Move [X25+48], X22
	364 Compare X24, 0
	365 JumpIfEqual {373}
	366 Move X8, [X25]
	367 Move X1, [X8+64]
	368 Move X0, X24
	369 Call 0x1C17E00
	370 Compare X0, 0
	371 JumpIfEqual {626}
	372 Move W8, [X25+24]
	373 NotImplemented "Instruction CMP not yet implemented."
	374 Move [X25+56], X24
	375 Move X8, 0xC13000
	376 Move X8, [X8+1696]
	377 Move X1, [X8]
	378 Move X0, X19
	379 Move X2, X25
	380 Move X3, X31
	381 Call StringBuilder.AppendFormat, X0, X1, X2
	382 Move X0, [X27]
	383 Move [X31+12], W22
	384 Add X1, X31, 12
	385 Call 0x1C17E04
	386 Move X8, 0xBD2000
	387 Move X8, [X8+3832]
	388 Move X2, X0
	389 Move X1, [X8]
	390 Move X0, X19
	391 Move X3, X24
	392 Move X4, X31
	393 Call StringBuilder.AppendFormat, X0, X1, X2, X3
	394 Move X0, [X28]
	395 Move X9, 0xC13000
	396 Move W8, [X0+224]
	397 Move X9, [X9+1688]
	398 Move X25, [X9]
	399 Compare W8, 0
	400 JumpIfNotEqual {402}
	401 Call 0x1C17DFC
	402 Move X0, X25
	403 Move X1, X31
	404 Call Type.GetTypeFromHandle, X0
	405 Move X1, X0
	406 Move X0, X23
	407 Move X2, X31
	408 Call Type.op_Equality, X0, X1
	409 Move TEMP, X0
	410 And TEMP, TEMP, 1
	411 Compare TEMP, 1
	412 JumpIfNotEqual {441}
	413 Move X2, [X29]
	414 Move X0, X21
	415 Move W1, W22
	416 Call 0x24266C8, X0, X1
	417 Move X8, 0xBDA000
	418 Move X8, [X8+3680]
	419 Move X24, X0
	420 Move X0, [X8]
	421 Move W8, [X0+224]
	422 Compare W8, 0
	423 JumpIfNotEqual {425}
	424 Call 0x1C17DFC
	425 Compare X24, 0
	426 JumpIfEqual {438}
	427 Move X9, 0xC12000
	428 Move X8, [X24]
	429 Move X9, [X9+3096]
	430 Move W10, [X8+304]
	431 Move X1, [X9]
	432 Move W9, [X1+304]
	433 NotImplemented "Instruction CMP not yet implemented."
	434 Move X8, [X8+200]
	435 Add X8, X8, X9
	436 NotImplemented "Instruction LDUR not yet implemented."
	437 NotImplemented "Instruction CMP not yet implemented."
	438 Move W1, 1
	439 Move X0, X24
	440 Call SupportClass.DictionaryToString, X0, X1
	441 Move X0, [X28]
	442 Move X9, 0xC04000
	443 Move W8, [X0+224]
	444 Move X9, [X9+368]
	445 Move X25, [X9]
	446 Compare W8, 0
	447 JumpIfNotEqual {449}
	448 Call 0x1C17DFC
	449 Move X0, X25
	450 Move X1, X31
	451 Call Type.GetTypeFromHandle, X0
	452 Move X1, X0
	453 Move X0, X23
	454 Move X2, X31
	455 Call Type.op_Equality, X0, X1
	456 Move TEMP, X0
	457 And TEMP, TEMP, 1
	458 Compare TEMP, 1
	459 JumpIfNotEqual {479}
	460 Move X2, [X29]
	461 Move X0, X21
	462 Move W1, W22
	463 Call 0x24266C8, X0, X1
	464 Move X8, 0xBD4000
	465 Move X8, [X8+928]
	466 Move X25, X0
	467 Move X24, [X8]
	468 Compare X0, 0
	469 JumpIfEqual {570}
	470 Move X8, 0xBD2000
	471 Move X8, [X8+2760]
	472 Move X26, [X8]
	473 Move X0, X25
	474 Move X1, X26
	475 Call 0x1C17E00
	476 Move X1, X0
	477 Compare X1, 0
	478 JumpIfNotEqual {571}
	479 Move X0, [X28]
	480 Move X9, 0xC04000
	481 Move W8, [X0+224]
	482 Move X9, [X9+280]
	483 Move X25, [X9]
	484 Compare W8, 0
	485 JumpIfNotEqual {487}
	486 Call 0x1C17DFC
	487 Move X0, X25
	488 Move X1, X31
	489 Call Type.GetTypeFromHandle, X0
	490 Move X1, X0
	491 Move X0, X23
	492 Move X2, X31
	493 Call Type.op_Equality, X0, X1
	494 Move X2, [X29]
	495 Move TEMP, X0
	496 And TEMP, TEMP, 1
	497 Compare TEMP, 1
	498 JumpIfNotEqual {534}
	499 Move X0, X21
	500 Move W1, W22
	501 Call 0x24266C8, X0, X1
	502 Move X24, X0
	503 Compare X0, 0
	504 JumpIfEqual {647}
	505 Move X8, 0xBD2000
	506 Move X8, [X8+1560]
	507 Move X25, [X8]
	508 Move X0, X24
	509 Move X1, X25
	510 Call 0x1C17E00
	511 Compare X0, 0
	512 JumpIfEqual {644}
	513 Move X8, 0xBD2000
	514 Move X8, [X8+1560]
	515 Move X25, [X8]
	516 Move X0, X24
	517 Move X1, X25
	518 Call 0x1C17E00
	519 Compare X0, 0
	520 JumpIfEqual {641}
	521 Move X9, 0xBD2000
	522 Move X8, [X0+24]
	523 Move X9, [X9+1880]
	524 Move [X31+12], W8
	525 Move X0, [X9]
	526 Add X1, X31, 12
	527 Call 0x1C17E04
	528 Move X1, X0
	529 Move X8, 0xC13000
	530 Move X8, [X8+1712]
	531 Move X0, [X8]
	532 Move X2, X31
	533 Call String.Format, X0, X1
	534 Move X0, X21
	535 Move W1, W22
	536 Call 0x24266C8, X0, X1
	537 Move X25, X0
	538 Compare X0, 0
	539 JumpIfEqual {292}
	540 Move X8, 0xBFB000
	541 Move X9, [X25]
	542 Move X8, [X8+1784]
	543 Move W11, [X9+304]
	544 Move X8, [X8]
	545 Move W10, [X8+304]
	546 NotImplemented "Instruction CMP not yet implemented."
	547 Move X9, [X9+200]
	548 Add X9, X9, X10
	549 NotImplemented "Instruction LDUR not yet implemented."
	550 NotImplemented "Instruction CMP not yet implemented."
	551 Move X0, [X27]
	552 Move [X31+12], W22
	553 Add X1, X31, 12
	554 Call 0x1C17E04
	555 Move X8, [X25]
	556 Move X22, X0
	557 Move X9, [X8+440]
	558 Move X2, [X8+448]
	559 And W1, W20, 1
	560 Move X0, X25
	561 NotImplemented "Instruction BLR not yet implemented."
	562 Move X8, 0xBD2000
	563 Move X8, [X8+3832]
	564 Move X3, X0
	565 Move X1, [X8]
	566 Move X0, X19
	567 Move X2, X22
	568 Move X4, X31
	569 Call StringBuilder.AppendFormat, X0, X1, X2, X3
	570 Move X1, X31
	571 Move X0, X24
	572 Move X2, X31
	573 Call String.Join, X0, X1
	574 Move X1, X0
	575 Move X8, 0xC13000
	576 Move X8, [X8+1704]
	577 Move X0, [X8]
	578 Move X2, X31
	579 Call String.Format, X0, X1
	580 Move X8, 0xC13000
	581 Move X8, [X8+1720]
	582 Add X0, X31, 32
	583 Move X1, [X8]
	584 Call 0x2EDB698, X0
	585 Move X8, 0xBDD000
	586 Move X8, [X8+1752]
	587 Move X0, X19
	588 Move X2, X31
	589 Move X1, [X8]
	590 Call StringBuilder.Append, X0, X1
	591 Move X8, [X19]
	592 Move X0, X19
	593 Move X9, [X8+360]
	594 Move X1, [X8+368]
	595 NotImplemented "Instruction BLR not yet implemented."
	596 Move X0, [X8]
	597 Move X20, [X31+128]
	598 Move X19, [X31+136]
	599 Move X22, [X31+112]
	600 Move X21, [X31+120]
	601 Move X24, [X31+96]
	602 Move X23, [X31+104]
	603 Move X26, [X31+80]
	604 Move X25, [X31+88]
	605 Move X28, [X31+64]
	606 Move X27, [X31+72]
	607 Move X29, [X31+48]
	608 Move X30, [X31+56]
	609 Add X31, X31, 144
	610 Return X0
	611 Call 0x1C17F20
	612 Call 0x1C17F20
	613 Call 0x1C17F28
	614 Call 0x1C17F20
	615 Call 0x1C17F20
	616 Call 0x1C17F28
	617 Call 0x1C17F28
	618 Call 0x1C17F20
	619 Call 0x1C17F28
	620 Move X0, X24
	621 Move X1, X25
	622 Call 0x1C181E0
	623 Call 0x1C17F44
	624 Move X1, X31
	625 Call 0x1C17DEC
	626 Call 0x1C17F44
	627 Move X1, X31
	628 Call 0x1C17DEC
	629 Call 0x1C17F44
	630 Move X1, X31
	631 Call 0x1C17DEC
	632 Call 0x1C17F44
	633 Move X1, X31
	634 Call 0x1C17DEC
	635 Move X0, X24
	636 Call 0x1C181E0
	637 Move X0, X25
	638 Move X1, X26
	639 Call 0x1C181E0
	640 Call 0x1C17F20
	641 Move X0, X24
	642 Move X1, X25
	643 Call 0x1C181E0
	644 Move X0, X24
	645 Move X1, X25
	646 Call 0x1C181E0
	647 Call 0x1C17F20
	648 Move X20, X0
	649 NotImplemented "Instruction CMP not yet implemented."
	650 Move X0, X20
	651 Call 0x3EB2AD0
	652 Move X21, [X0]
	653 Call 0x3EB2AE0
	654 Move X8, 0xC13000
	655 Move X8, [X8+1720]
	656 Add X0, X31, 32
	657 Move X1, [X8]
	658 Call 0x2EDB698, X0
	659 Compare X21, 0
	660 JumpIfEqual {585}
	661 Move X0, X21
	662 Call 0x1C17F18
	663 Move X21, X31
	664 Move X20, X0
	665 Move X8, 0xC13000
	666 Move X8, [X8+1720]
	667 Move X1, [X8]
	668 Add X0, X31, 32
	669 Call 0x2EDB698, X0
	670 Compare X21, 0
	671 JumpIfNotEqual {674}
	672 Move X0, X20
	673 Call 0x1D2D690
	674 Move X0, X21
	675 Call 0x1C17F18
	676 Call 0x1991590

Method: System.String HashtableToString(ExitGames.Client.Photon.Hashtable hash)

Disassembly:
	0x03522AC4 MOV W0, W21
	0x03522AC8 MOV X1, X20
	0x03522ACC MOV X3, X31
	0x03522AD0 BL 0x35067BC
	0x03522AD4 ADRP X8, 0xC11000
	0x03522AD8 LDR X8, [X8 + 0x778]
	0x03522ADC LDR X0, [X8]
	0x03522AE0 LDR W8, [X0 + 0xE0]
	0x03522AE4 CBNZ W8, 0x3522AEC
	0x03522AE8 BL 0x1C16DFC
	0x03522AEC MOV X0, X31
	0x03522AF0 BL 0x34F5754
	0x03522AF4 LDR X1, [X19 + 0x138]
	0x03522AF8 CBZ X1, 0x3522C64
	0x03522AFC MOV X21, X0
	0x03522B00 CBZ X0, 0x3522C64
	0x03522B04 LDR W3, [X1 + 0x18]
	0x03522B08 MOV X0, X21
	0x03522B0C MOV W2, W31
	0x03522B10 BL 0x3517F60
	0x03522B14 MOV X0, X19
	0x03522B18 MOV X1, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xEBE000
	006 Move X21, 0xBDA000
	007 Move W8, [X20+2872]
	008 Move X21, [X21+3680]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xBDA000
	015 Move X0, [X0+3680]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2872], W8
	019 Move X0, [X21]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {24}
	023 Call 0x1C17DFC
	024 Move X0, X19
	025 Move X20, [X31+16]
	026 Move X19, [X31+24]
	027 Move W1, 1
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Call SupportClass.DictionaryToString, X0, X1
	031 Return X0

Method: System.String ByteArrayToString(System.Byte[] list, System.Int32 length = -1)

Disassembly:
	0x03522B1C BL 0x34EFFC0
	0x03522B20 TBZ X0, 0x0, 0x3522B58
	0x03522B24 MOV X0, X19
	0x03522B28 MOV X1, X31
	0x03522B2C BL 0x34EFFDC
	0x03522B30 CBZ X21, 0x3522C64
	0x03522B34 CBZ X0, 0x3522C64
	0x03522B38 LDR W8, [X21 + 0x14]
	0x03522B3C LDR W9, [X0 + 0x38]
	0x03522B40 LDR W10, [X0 + 0x20]
	0x03522B44 ADD W8, W9, W8
	0x03522B48 ADD W9, W10, 0x1
	0x03522B4C STR W8, [X0 + 0x38]
	0x03522B50 STR W9, [X0 + 0x20]
	0x03522B54 B 0x3522B5C
	0x03522B58 CBZ X21, 0x3522C64
	0x03522B5C LDR X1, [X21 + 0x18]
	0x03522B60 LDR W2, [X21 + 0x14]
	0x03522B64 MOV X0, X19
	0x03522B68 BL 0x3523688
	0x03522B6C CBNZ W0, 0x3522C50
	0x03522B70 ADRP X8, 0xC11000
	0x03522B74 LDR X8, [X8 + 0x778]
	0x03522B78 LDR X0, [X8]
	0x03522B7C LDR W8, [X0 + 0xE0]
	0x03522B80 CBNZ W8, 0x3522B88
	0x03522B84 BL 0x1C16DFC
	0x03522B88 MOV X0, X21
	0x03522B8C MOV X1, X31
	0x03522B90 BL 0x34F5924
	0x03522B94 B 0x3522C50

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xEBE000
	006 Move W8, [X21+2873]
	007 Move W19, W1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xBD4000
	014 Move X0, [X0+632]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+2873], W8
	018 Compare X20, 0
	019 JumpIfEqual {33}
	020 Move W8, [X20+24]
	021 Move X0, X20
	022 Move W1, W31
	023 Move X3, X31
	024 NotImplemented "Instruction CMP not yet implemented."
	025 NotImplemented "Instruction CCMP not yet implemented."
	026 NotImplemented "Instruction CSEL not yet implemented."
	027 Move X20, [X31+16]
	028 Move X19, [X31+24]
	029 Move X30, [X31+32]
	030 Move X21, [X31+40]
	031 Call BitConverter.ToString, X0, X1, X2
	032 Return X0
	033 Move X8, 0xBD4000
	034 Move X8, [X8+632]
	035 Move X20, [X31+16]
	036 Move X19, [X31+24]
	037 Move X8, [X8]
	038 Move X8, [X8+184]
	039 Move X0, [X8]
	040 Move X30, [X31+32]
	041 Move X21, [X31+40]
	042 Return X0

Method: System.UInt32[] InitializeTable(System.UInt32 polynomial)

Disassembly:
	0x03522B98 LDR X20, [X19 + 0x140]
	0x03522B9C STRB W31, [X31 + 0xC]
	0x03522BA0 ADD X1, X31, 0xC
	0x03522BA4 MOV X0, X20
	0x03522BA8 MOV X2, X31
	0x03522BAC BL 0x33DE64C
	0x03522BB0 ADRP X8, 0xBD1000
	0x03522BB4 LDR X22, [X19 + 0x140]
	0x03522BB8 LDR X8, [X8 + 0x758]
	0x03522BBC STR W21, [X31 + 0x4]
	0x03522BC0 LDR X0, [X8]
	0x03522BC4 ADD X1, X31, 0x4
	0x03522BC8 BL 0x1C16E04
	0x03522BCC CBZ X22, 0x3522C70
	0x03522BD0 MOV X2, X0
	0x03522BD4 MOVZ W1, 0x1
	0x03522BD8 MOV X0, X22
	0x03522BDC MOV X3, X31
	0x03522BE0 BL 0x34FBA68
	0x03522BE4 ADRP X21, 0xC11000
	0x03522BE8 LDR X21, [X21 + 0xC68]
	0x03522BEC LDR X0, [X21]
	0x03522BF0 LDR W8, [X0 + 0xE0]
	0x03522BF4 CBNZ W8, 0x3522C00
	0x03522BF8 BL 0x1C16DFC
	0x03522BFC LDR X0, [X21]
	0x03522C00 LDR X8, [X0 + 0xB8]
	0x03522C04 LDR X2, [X19 + 0x140]
	0x03522C08 LDRB W1, [X8 + 0x4]
	0x03522C0C MOVZ W3, 0x6
	0x03522C10 MOV X0, X19
	0x03522C14 MOV W4, W31
	0x03522C18 MOV X5, X31
	0x03522C1C BL 0x34FD310
	0x03522C20 MOV X21, X0
	0x03522C24 MOV X22, X31
	0x03522C28 MOVZ W23, 0xA
	0x03522C2C LDRB W8, [X31 + 0xC]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xEBE000
	006 Move X21, 0xBFB000
	007 Move W8, [X20+2874]
	008 Move X21, [X21+3336]
	009 Move W19, W0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xBFB000
	015 Move X0, [X0+3336]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2874], W8
	019 Move X0, [X21]
	020 Move W1, 256
	021 Call 0x1C17D6C
	022 Move X8, X31
	023 Move W10, 8
	024 Move W9, W8
	025 NotImplemented "Instruction SBFM not yet implemented."
	026 And W11, W11, W19
	027 Subtract W10, W10, 1
	028 Xor W9, W11, W9
	029 Compare X0, 0
	030 JumpIfEqual {42}
	031 Move W10, [X0+24]
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Add X10, X0, X8
	034 Add X8, X8, 1
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Move [X10+32], W9
	037 Move X20, [X31+16]
	038 Move X19, [X31+24]
	039 Move X30, [X31+32]
	040 Move X21, [X31+40]
	041 Return X0
	042 Call 0x1C17F20
	043 Call 0x1C17F28

Method: System.UInt32 CalculateCrc(System.Byte[] buffer, System.Int32 length)

Disassembly:
	0x03522C30 CBZ W8, 0x3522C40
	0x03522C34 MOV X0, X20
	0x03522C38 MOV X1, X31
	0x03522C3C BL 0x33E14E4
	0x03522C40 CBNZ X22, 0x3522C68
	0x03522C44 CBZ W23, 0x3522B14
	0x03522C48 CMP W23, 0xA
	0x03522C4C B.EQ 0x3522B14
	0x03522C50 LDP X20, X19, [X31 + 0x30]
	0x03522C54 LDP X22, X21, [X31 + 0x20]
	0x03522C58 LDP X30, X23, [X31 + 0x10]
	0x03522C5C ADD X31, X31, 0x40
	0x03522C60 RET
	0x03522C64 BL 0x1C16F20
	0x03522C68 MOV X0, X22
	0x03522C6C BL 0x1C16F18
	0x03522C70 BL 0x1C16F20
	0x03522C74 B 0x3522C7C
	0x03522C78 B 0x3522C7C
	0x03522C7C MOV X21, X0
	0x03522C80 CMP W1, 0x1
	0x03522C84 B.NE 0x3522CA4
	0x03522C88 MOV X0, X21
	0x03522C8C BL 0x3EB1AD0
	0x03522C90 LDR X22, [X0]
	0x03522C94 BL 0x3EB1AE0
	0x03522C98 MOV W23, W31
	0x03522C9C MOV X21, X31
	0x03522CA0 B 0x3522C2C
	0x03522CA4 MOV X22, X31
	0x03522CA8 B 0x3522CB0
	0x03522CAC MOV X21, X0
	0x03522CB0 LDRB W8, [X31 + 0xC]
	0x03522CB4 CBZ W8, 0x3522CC4
	0x03522CB8 MOV X0, X20
	0x03522CBC MOV X1, X31
	0x03522CC0 BL 0x33E14E4
	0x03522CC4 CBNZ X22, 0x3522CD0
	0x03522CC8 MOV X0, X21
	0x03522CCC BL 0x1D2C690
	0x03522CD0 MOV X0, X22
	0x03522CD4 BL 0x1C16F18
	0x03522CD8 BL 0x1990590
	0x03522CDC LDR W8, [X0 + 0x38]
	0x03522CE0 LDR W9, [X0 + 0x20]
	0x03522CE4 ADD W8, W8, W1
	0x03522CE8 ADD W9, W9, 0x1
	0x03522CEC STR W8, [X0 + 0x38]
	0x03522CF0 STR W9, [X0 + 0x20]
	0x03522CF4 RET
	0x03522CF8 SUB X31, X31, 0x50
	0x03522CFC STR X30, [X31 + 0x10]
	0x03522D00 STP X24, X23, [X31 + 0x20]
	0x03522D04 STP X22, X21, [X31 + 0x30]
	0x03522D08 STP X20, X19, [X31 + 0x40]
	0x03522D0C ADRP X22, 0xEBD000
	0x03522D10 LDRB W8, [X22 + 0xB49]
	0x03522D14 MOV W23, W3
	0x03522D18 MOV X21, X2
	0x03522D1C MOV W20, W1
	0x03522D20 MOV X19, X0
	0x03522D24 TBNZ X8, 0x0, 0x3522D48
	0x03522D28 ADRP X0, 0xC12000
	0x03522D2C LDR X0, [X0 + 0x710]
	0x03522D30 BL 0x1C16CF4
	0x03522D34 ADRP X0, 0xBD9000
	0x03522D38 LDR X0, [X0 + 0xF00]
	0x03522D3C BL 0x1C16CF4
	0x03522D40 MOVZ W8, 0x1
	0x03522D44 STRB W8, [X22 + 0xB49]
	0x03522D48 STR W31, [X31 + 0x1C]
	0x03522D4C STRB W31, [X31 + 0x18]
	0x03522D50 CBZ X21, 0x3522DE0
	0x03522D54 LDRB W8, [X19 + 0x148]
	0x03522D58 CBZ W8, 0x3522E18

ISIL:
	001 Move [X31-64], X30
	002 Move [X31+16], X24
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X22, 0xEBE000
	009 Move X21, 0xBDA000
	010 Move W8, [X22+2875]
	011 Move X21, [X21+3680]
	012 Move W20, W1
	013 Move X19, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0xBDA000
	019 Move X0, [X0+3680]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+2875], W8
	023 Move X8, [X21]
	024 Move W9, [X8+224]
	025 Compare W9, 0
	026 JumpIfNotEqual {30}
	027 Move X0, X8
	028 Call 0x1C17DFC
	029 Move X8, [X21]
	030 Move X9, [X8+184]
	031 Move X9, [X9+24]
	032 Compare X9, 0
	033 JumpIfNotEqual {45}
	034 Move W9, [X8+224]
	035 Compare W9, 0
	036 JumpIfNotEqual {39}
	037 Move X0, X8
	038 Call 0x1C17DFC
	039 Move W0, 0x8320
	040 NotImplemented "Instruction MOVK not yet implemented."
	041 Call SupportClass.InitializeTable, X0
	042 Move X8, [X21]
	043 Move X9, [X8+184]
	044 Move [X9+24], X0
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Move X22, X31
	047 Move W23, W20
	048 Add X24, X19, 32
	049 Move TEMP, 0
	050 Not TEMP
	051 Move W20, TEMP
	052 Move W9, [X8+224]
	053 Compare W9, 0
	054 JumpIfNotEqual {58}
	055 Move X0, X8
	056 Call 0x1C17DFC
	057 Move X8, [X21]
	058 Compare X19, 0
	059 JumpIfEqual {88}
	060 Move W9, [X19+24]
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Move X9, [X8+184]
	063 Move X9, [X9+24]
	064 Compare X9, 0
	065 JumpIfEqual {88}
	066 Move W10, [X24]
	067 Move W11, [X9+24]
	068 And W12, W20, 255
	069 Xor W10, W12, W10
	070 NotImplemented "Instruction CMP not yet implemented."
	071 Add X9, X9, W10
	072 Move W9, [X9+32]
	073 Add X22, X22, 1
	074 NotImplemented "Instruction CMP not yet implemented."
	075 Xor W20, W9, W20
	076 Move TEMP, 0
	077 Not TEMP
	078 Move W20, TEMP
	079 Move W0, W20
	080 Move X20, [X31+48]
	081 Move X19, [X31+56]
	082 Move X22, [X31+32]
	083 Move X21, [X31+40]
	084 Move X24, [X31+16]
	085 Move X23, [X31+24]
	086 Move X30, [X31+64]
	087 Return X0
	088 Call 0x1C17F20
	089 Call 0x1C17F28

Method: System.Void .ctor()

Disassembly:
	0x03522D5C ADRP X8, 0xBD9000
	0x03522D60 LDR X8, [X8 + 0xF00]

ISIL:
	001 Move X1, X31
	002 Call Object..ctor, X0
	003 Return 

Method: System.Void .cctor()

Disassembly:
	0x03522D64 LDR X22, [X21 + 0x18]
	0x03522D68 LDR X0, [X8]
	0x03522D6C MOVZ W8, 0x1
	0x03522D70 STR W8, [X31 + 0x1C]
	0x03522D74 LDR W24, [X21 + 0x14]
	0x03522D78 LDR W8, [X0 + 0xE0]
	0x03522D7C CBNZ W8, 0x3522D84
	0x03522D80 BL 0x1C16DFC
	0x03522D84 ADD X2, X31, 0x1C
	0x03522D88 MOV W0, W24
	0x03522D8C MOV X1, X22
	0x03522D90 MOV X3, X31
	0x03522D94 BL 0x35067BC
	0x03522D98 CBZ X22, 0x3522F9C
	0x03522D9C LDR W8, [X22 + 0x18]
	0x03522DA0 CMP W8, 0x5
	0x03522DA4 B.LS 0x3522F98
	0x03522DA8 CMP W20, 0x3
	0x03522DAC STRB W23, [X22 + 0x25]
	0x03522DB0 B.HI 0x3522FB0
	0x03522DB4 ADRP X10, 0xFFFFFFFFFD674000
	0x03522DB8 MOV W9, W20
	0x03522DBC ADD X10, X10, 0xCEF
	0x03522DC0 ADR X11, 0x10
	0x03522DC4 LDRB W12, [X10, X9, LSL]
	0x03522DC8 ADD X11, X11, X12, 0x2, LSL
	0x03522DCC BR X11
	0x03522DD0 CMP W8, 0x6
	0x03522DD4 B.LS 0x3522F98
	0x03522DD8 MOV W8, W31
	0x03522DDC B 0x3522E14
	0x03522DE0 MOV W8, W31
	0x03522DE4 B 0x3522F7C
	0x03522DE8 CMP W8, 0x6
	0x03522DEC B.LS 0x3522F98
	0x03522DF0 MOVZ W8, 0x2
	0x03522DF4 B 0x3522E14
	0x03522DF8 CMP W8, 0x6
	0x03522DFC B.LS 0x3522F98
	0x03522E00 MOVZ W8, 0x3
	0x03522E04 B 0x3522E14
	0x03522E08 CMP W8, 0x6
	0x03522E0C B.LS 0x3522F98
	0x03522E10 MOVZ W8, 0x1
	0x03522E14 STRB W8, [X22 + 0x26]
	0x03522E18 LDR X22, [X19 + 0x128]
	0x03522E1C STRB W31, [X31 + 0x18]
	0x03522E20 ADD X1, X31, 0x18
	0x03522E24 MOV X0, X22
	0x03522E28 MOV X2, X31
	0x03522E2C BL 0x33DE64C
	0x03522E30 LDR X0, [X19 + 0x128]
	0x03522E34 CBZ X0, 0x3522FA8
	0x03522E38 ADRP X9, 0xC12000
	0x03522E3C LDR X9, [X9 + 0x710]
	0x03522E40 LDR W10, [X0 + 0x1C]
	0x03522E44 LDR X8, [X0 + 0x10]
	0x03522E48 LDR X9, [X9]
	0x03522E4C ADD W10, W10, 0x1
	0x03522E50 STR W10, [X0 + 0x1C]
	0x03522E54 CBZ X8, 0x3522FAC

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0xEBE000
	008 Move X19, 0xBD8000
	009 Move X21, 0xBDA000
	010 Move X20, 0xC13000
	011 Move W8, [X22+2876]
	012 Move X19, [X19+3264]
	013 Move X21, [X21+3680]
	014 Move X20, [X20+1760]
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {36}
	019 Move X0, 0xC13000
	020 Move X0, [X0+1768]
	021 Call 0x1C17CF4
	022 Move X0, 0xBD8000
	023 Move X0, [X0+3264]
	024 Call 0x1C17CF4
	025 Move X0, 0xBDA000
	026 Move X0, [X0+3680]
	027 Call 0x1C17CF4
	028 Move X0, 0xC13000
	029 Move X0, [X0+1776]
	030 Call 0x1C17CF4
	031 Move X0, 0xC13000
	032 Move X0, [X0+1760]
	033 Call 0x1C17CF4
	034 Move W8, 1
	035 Move [X22+2876], W8
	036 Move X0, [X19]
	037 Move X23, 0xC13000
	038 Move X22, 0xC13000
	039 Move X23, [X23+1768]
	040 Move X22, [X22+1776]
	041 Call 0x1C17F10
	042 Move X1, X31
	043 Move X19, X0
	044 Call Object..ctor, X0
	045 Move X8, [X21]
	046 Move X8, [X8+184]
	047 Move [X8+8], X19
	048 Move X0, [X20]
	049 Move W8, [X0+224]
	050 Compare W8, 0
	051 JumpIfNotEqual {54}
	052 Call 0x1C17DFC
	053 Move X0, [X20]
	054 Move X8, [X0+184]
	055 Move X0, [X23]
	056 Move X19, [X8]
	057 Call 0x1C17F10
	058 Move X2, [X22]
	059 Move X1, X19
	060 Move X20, X0
	061 Call IntegerMillisecondsDelegate..ctor, X0, X1, X2
	062 Move X8, [X21]
	063 Move X22, [X31+16]
	064 Move X21, [X31+24]
	065 Move X8, [X8+184]
	066 Move [X8+16], X20
	067 Move X20, [X31+32]
	068 Move X19, [X31+40]
	069 Move X30, [X31+48]
	070 Move X23, [X31+56]
	071 Return 

