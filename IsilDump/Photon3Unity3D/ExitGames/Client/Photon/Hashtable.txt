Type: ExitGames.Client.Photon.Hashtable

Method: System.Object GetBoxedByte(System.Byte value)

Disassembly:
	0x034EE65C ADRP X0, 0xC45000
	0x034EE660 LDR X0, [X0 + 0x6E0]
	0x034EE664 BL 0x1C16CF4
	0x034EE668 ADRP X0, 0xC45000
	0x034EE66C LDR X0, [X0 + 0x6D8]
	0x034EE670 BL 0x1C16CF4
	0x034EE674 ADRP X0, 0xC45000
	0x034EE678 LDR X0, [X0 + 0x6D0]
	0x034EE67C BL 0x1C16CF4
	0x034EE680 MOVZ W8, 0x1
	0x034EE684 STRB W8, [X28 + 0xA13]
	0x034EE688 LDR X0, [X29]
	0x034EE68C BL 0x1C16F10
	0x034EE690 LDR X1, [X22]
	0x034EE694 MOV X22, X0
	0x034EE698 BL 0x2DA9EF4
	0x034EE69C MOV X0, X19
	0x034EE6A0 MOV X1, X31
	0x034EE6A4 STR X22, [X19 + 0x60]
	0x034EE6A8 BL 0x33BDD8C
	0x034EE6AC STRB W21, [X19 + 0x10]
	0x034EE6B0 LDR X0, [X26]
	0x034EE6B4 BL 0x1C16F10
	0x034EE6B8 LDR X2, [X25]
	0x034EE6BC MOV W1, W20
	0x034EE6C0 MOV X21, X0
	0x034EE6C4 BL 0x2426944
	0x034EE6C8 STR X21, [X19 + 0x18]
	0x034EE6CC LDR X0, [X26]
	0x034EE6D0 BL 0x1C16F10
	0x034EE6D4 LDR X2, [X25]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xEF2000
	006 Move X20, 0xC0E000
	007 Move W8, [X21+2559]
	008 Move X20, [X20+3488]
	009 Move W19, W0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xC0E000
	015 Move X0, [X0+3488]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+2559], W8
	019 Move X0, [X20]
	020 Move W8, [X0+224]
	021 Compare W8, 0
	022 JumpIfNotEqual {25}
	023 Call 0x1C17DFC
	024 Move X0, [X20]
	025 Move X8, [X0+184]
	026 Move X8, [X8]
	027 Compare X8, 0
	028 JumpIfEqual {38}
	029 Move W9, [X8+24]
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Add X8, X8, W19
	032 Move X0, [X8+32]
	033 Move X20, [X31+16]
	034 Move X19, [X31+24]
	035 Move X30, [X31+32]
	036 Move X21, [X31+40]
	037 Return X0
	038 Call 0x1C17F20
	039 Call 0x1C17F28

Method: System.Void .cctor()

Disassembly:
	0x034EE6D8 MOV W1, W20
	0x034EE6DC MOV X21, X0
	0x034EE6E0 BL 0x2426944
	0x034EE6E4 STR X21, [X19 + 0x20]
	0x034EE6E8 LDR X0, [X24]
	0x034EE6EC BL 0x1C16F10
	0x034EE6F0 LDR X1, [X27]
	0x034EE6F4 MOV X21, X0
	0x034EE6F8 BL 0x24F1248
	0x034EE6FC STR X21, [X19 + 0x28]
	0x034EE700 LDR X0, [X26]
	0x034EE704 BL 0x1C16F10
	0x034EE708 LDR X2, [X25]
	0x034EE70C MOVZ W1, 0x1D
	0x034EE710 MOV X21, X0
	0x034EE714 BL 0x2426944
	0x034EE718 STR X21, [X19 + 0x30]
	0x034EE71C LDR X0, [X24]
	0x034EE720 BL 0x1C16F10
	0x034EE724 LDR X2, [X23]
	0x034EE728 MOV W1, W20
	0x034EE72C MOV X21, X0
	0x034EE730 BL 0x24F12C8
	0x034EE734 STR X21, [X19 + 0x38]
	0x034EE738 LDR X0, [X24]
	0x034EE73C BL 0x1C16F10
	0x034EE740 LDR X2, [X23]
	0x034EE744 MOV W1, W20
	0x034EE748 MOV X21, X0
	0x034EE74C BL 0x24F12C8
	0x034EE750 STR X21, [X19 + 0x40]
	0x034EE754 LDP X20, X19, [X31 + 0x50]
	0x034EE758 LDP X22, X21, [X31 + 0x40]
	0x034EE75C LDP X24, X23, [X31 + 0x30]
	0x034EE760 LDP X26, X25, [X31 + 0x20]
	0x034EE764 LDP X28, X27, [X31 + 0x10]
	0x034EE768 LDP X29, X30, [X31], #0x60
	0x034EE76C RET
	0x034EE770 STP X30, X21, [X31 - 0x20]!
	0x034EE774 STP X20, X19, [X31 + 0x10]
	0x034EE778 ADRP X21, 0xEF1000
	0x034EE77C LDRB W8, [X21 + 0xA14]
	0x034EE780 MOV W19, W1
	0x034EE784 MOV X20, X0
	0x034EE788 TBNZ X8, 0x0, 0x34EE7A0
	0x034EE78C ADRP X0, 0xC45000
	0x034EE790 LDR X0, [X0 + 0x6E8]
	0x034EE794 BL 0x1C16CF4
	0x034EE798 MOVZ W8, 0x1
	0x034EE79C STRB W8, [X21 + 0xA14]
	0x034EE7A0 LDR X0, [X20 + 0x20]
	0x034EE7A4 CBZ X0, 0x34EE7C4
	0x034EE7A8 ADRP X8, 0xC45000
	0x034EE7AC LDR X8, [X8 + 0x6E8]
	0x034EE7B0 MOV W1, W19
	0x034EE7B4 LDP X20, X19, [X31 + 0x10]
	0x034EE7B8 LDR X2, [X8]
	0x034EE7BC LDP X30, X21, [X31], #0x20
	0x034EE7C0 B 0x2426A60
	0x034EE7C4 BL 0x1C16F20
	0x034EE7C8 STP X30, X21, [X31 - 0x20]!
	0x034EE7CC STP X20, X19, [X31 + 0x10]
	0x034EE7D0 ADRP X21, 0xEF1000
	0x034EE7D4 LDRB W8, [X21 + 0xA15]

ISIL:
	001 Subtract X31, X31, 64
	002 Move [X31+16], X30
	003 Move [X31+24], X23
	004 Move [X31+32], X22
	005 Move [X31+40], X21
	006 Move [X31+48], X20
	007 Move [X31+56], X19
	008 Move X21, 0xEF2000
	009 Move X19, 0xC06000
	010 Move X20, 0xC0E000
	011 Move W8, [X21+2560]
	012 Move X19, [X19+2512]
	013 Move X20, [X20+3488]
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {29}
	018 Move X0, 0xC07000
	019 Move X0, [X0+2520]
	020 Call 0x1C17CF4
	021 Move X0, 0xC0E000
	022 Move X0, [X0+3488]
	023 Call 0x1C17CF4
	024 Move X0, 0xC06000
	025 Move X0, [X0+2512]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X21+2560], W8
	029 Move X0, [X19]
	030 Move X21, 0xC07000
	031 Move X21, [X21+2520]
	032 Move W1, 256
	033 Call 0x1C17D6C
	034 Move X8, [X20]
	035 Move X22, X31
	036 Move X8, [X8+184]
	037 Move [X8], X0
	038 Move X8, [X20]
	039 Move X0, [X21]
	040 Add X1, X31, 12
	041 Move X8, [X8+184]
	042 Move X23, [X8]
	043 Move [X31+12], W22
	044 Call 0x1C17E04
	045 Compare X23, 0
	046 JumpIfEqual {70}
	047 Move X19, X0
	048 Compare X0, 0
	049 JumpIfEqual {56}
	050 Move X8, [X23]
	051 Move X0, X19
	052 Move X1, [X8+64]
	053 Call 0x1C17E00
	054 Compare X0, 0
	055 JumpIfEqual {72}
	056 Move W8, [X23+24]
	057 NotImplemented "Instruction CMP not yet implemented."
	058 Add X8, X23, X22
	059 Add X22, X22, 1
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Move [X8+32], X19
	062 Move X20, [X31+48]
	063 Move X19, [X31+56]
	064 Move X22, [X31+32]
	065 Move X21, [X31+40]
	066 Move X30, [X31+16]
	067 Move X23, [X31+24]
	068 Add X31, X31, 64
	069 Return 
	070 Call 0x1C17F20
	071 Call 0x1C17F28
	072 Call 0x1C17F44
	073 Move X1, X31
	074 Call 0x1C17DEC

Method: System.Void .ctor()

Disassembly:
	0x034EE7D8 MOV W19, W1
	0x034EE7DC MOV X20, X0
	0x034EE7E0 TBNZ X8, 0x0, 0x34EE7F8
	0x034EE7E4 ADRP X0, 0xC45000
	0x034EE7E8 LDR X0, [X0 + 0x6F0]
	0x034EE7EC BL 0x1C16CF4
	0x034EE7F0 MOVZ W8, 0x1
	0x034EE7F4 STRB W8, [X21 + 0xA15]
	0x034EE7F8 LDR X0, [X20 + 0x20]
	0x034EE7FC CBZ X0, 0x34EE81C
	0x034EE800 ADRP X8, 0xC45000
	0x034EE804 LDR X8, [X8 + 0x6F0]
	0x034EE808 MOV W1, W19
	0x034EE80C LDP X20, X19, [X31 + 0x10]
	0x034EE810 LDR X2, [X8]
	0x034EE814 LDP X30, X21, [X31], #0x20
	0x034EE818 B 0x2426B8C
	0x034EE81C BL 0x1C16F20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0xEF2000
	006 Move X21, 0xC37000
	007 Move W8, [X20+2561]
	008 Move X21, [X21+2864]
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xC37000
	015 Move X0, [X0+2864]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X20+2561], W8
	019 Move X1, [X21]
	020 Move X0, X19
	021 Move X20, [X31+16]
	022 Move X19, [X31+24]
	023 Move X30, [X31+32]
	024 Move X21, [X31+40]
	025 Call Dictionary`2<Object, Object>..ctor, X0
	026 Return 

Method: System.Void .ctor(System.Int32 x)

Disassembly:
	0x034EE820 STP X30, X21, [X31 - 0x20]!
	0x034EE824 STP X20, X19, [X31 + 0x10]
	0x034EE828 ADRP X21, 0xEF1000
	0x034EE82C LDRB W8, [X21 + 0xA16]
	0x034EE830 MOV W19, W1
	0x034EE834 MOV X20, X0
	0x034EE838 TBNZ X8, 0x0, 0x34EE850
	0x034EE83C ADRP X0, 0xC45000
	0x034EE840 LDR X0, [X0 + 0x6E8]
	0x034EE844 BL 0x1C16CF4
	0x034EE848 MOVZ W8, 0x1
	0x034EE84C STRB W8, [X21 + 0xA16]
	0x034EE850 LDR X0, [X20 + 0x18]
	0x034EE854 CBZ X0, 0x34EE874
	0x034EE858 ADRP X8, 0xC45000
	0x034EE85C LDR X8, [X8 + 0x6E8]
	0x034EE860 MOV W1, W19
	0x034EE864 LDP X20, X19, [X31 + 0x10]
	0x034EE868 LDR X2, [X8]
	0x034EE86C LDP X30, X21, [X31], #0x20
	0x034EE870 B 0x2426A60
	0x034EE874 BL 0x1C16F20

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xEF2000
	007 Move X22, 0xC46000
	008 Move W8, [X21+2562]
	009 Move X22, [X22+1632]
	010 Move W19, W1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xC46000
	017 Move X0, [X0+1632]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X21+2562], W8
	021 Move X2, [X22]
	022 Move X0, X20
	023 Move W1, W19
	024 Move X20, [X31+32]
	025 Move X19, [X31+40]
	026 Move X22, [X31+16]
	027 Move X21, [X31+24]
	028 Move X30, [X31+48]
	029 Call Dictionary`2<Object, Object>..ctor, X0, X1
	030 Return 

Method: System.Object get_Item(System.Object key)

Disassembly:
	0x034EE878 STP X30, X21, [X31 - 0x20]!
	0x034EE87C STP X20, X19, [X31 + 0x10]
	0x034EE880 ADRP X21, 0xEF1000
	0x034EE884 LDRB W8, [X21 + 0xA17]
	0x034EE888 MOV W19, W1
	0x034EE88C MOV X20, X0
	0x034EE890 TBNZ X8, 0x0, 0x34EE8A8
	0x034EE894 ADRP X0, 0xC45000
	0x034EE898 LDR X0, [X0 + 0x6F0]
	0x034EE89C BL 0x1C16CF4
	0x034EE8A0 MOVZ W8, 0x1
	0x034EE8A4 STRB W8, [X21 + 0xA17]
	0x034EE8A8 LDR X0, [X20 + 0x18]
	0x034EE8AC CBZ X0, 0x34EE8CC
	0x034EE8B0 ADRP X8, 0xC45000
	0x034EE8B4 LDR X8, [X8 + 0x6F0]
	0x034EE8B8 MOV W1, W19
	0x034EE8BC LDP X20, X19, [X31 + 0x10]
	0x034EE8C0 LDR X2, [X8]
	0x034EE8C4 LDP X30, X21, [X31], #0x20
	0x034EE8C8 B 0x2426B8C
	0x034EE8CC BL 0x1C16F20
	0x034EE8D0 STP X30, X23, [X31 - 0x30]!
	0x034EE8D4 STP X22, X21, [X31 + 0x10]
	0x034EE8D8 STP X20, X19, [X31 + 0x20]
	0x034EE8DC ADRP X23, 0xEF1000

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xEF2000
	007 Move X21, 0xC2F000
	008 Move W8, [X22+2563]
	009 Move X21, [X21+1792]
	010 Move X19, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0xC2F000
	017 Move X0, [X0+1792]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+2563], W8
	021 Move X3, [X21]
	022 Add X2, X31, 8
	023 Move X0, X20
	024 Move X1, X19
	025 Move [X31+8], X31
	026 Call Dictionary`2<Object, Object>.TryGetValue, X0, X1, X2
	027 Move X0, [X31+8]
	028 Move X20, [X31+32]
	029 Move X19, [X31+40]
	030 Move X22, [X31+16]
	031 Move X21, [X31+24]
	032 Move X30, [X31+48]
	033 Return X0

Method: System.Void set_Item(System.Object key, System.Object value)

Disassembly:
	0x034EE8E0 LDRB W8, [X23 + 0xA18]
	0x034EE8E4 MOV X19, X3
	0x034EE8E8 MOV W21, W2
	0x034EE8EC MOV W20, W1
	0x034EE8F0 MOV X22, X0
	0x034EE8F4 TBNZ X8, 0x0, 0x34EE90C
	0x034EE8F8 ADRP X0, 0xC45000
	0x034EE8FC LDR X0, [X0 + 0x6F8]
	0x034EE900 BL 0x1C16CF4
	0x034EE904 MOVZ W8, 0x1
	0x034EE908 STRB W8, [X23 + 0xA18]
	0x034EE90C TBZ X21, 0x0, 0x34EE91C
	0x034EE910 LDR X0, [X22 + 0x18]
	0x034EE914 CBNZ X0, 0x34EE924
	0x034EE918 BL 0x1C16F20
	0x034EE91C LDR X0, [X22 + 0x30]
	0x034EE920 CBZ X0, 0x34EE918
	0x034EE924 ADRP X8, 0xC45000
	0x034EE928 LDR X8, [X8 + 0x6F8]
	0x034EE92C MOV W1, W20
	0x034EE930 MOV X2, X19
	0x034EE934 LDP X20, X19, [X31 + 0x20]
	0x034EE938 LDR X3, [X8]
	0x034EE93C LDP X22, X21, [X31 + 0x10]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0xEF2000
	008 Move X23, 0xC46000
	009 Move W8, [X22+2564]
	010 Move X23, [X23+1640]
	011 Move X19, X2
	012 Move X20, X1
	013 Move X21, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {23}
	018 Move X0, 0xC46000
	019 Move X0, [X0+1640]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+2564], W8
	023 Move X3, [X23]
	024 Move X0, X21
	025 Move X1, X20
	026 Move X2, X19
	027 Move X20, [X31+32]
	028 Move X19, [X31+40]
	029 Move X22, [X31+16]
	030 Move X21, [X31+24]
	031 Move X30, [X31+48]
	032 Move X23, [X31+56]
	033 Call Dictionary`2<Object, Object>.set_Item, X0, X1, X2
	034 Return 

Method: System.Object get_Item(System.Byte key)

Disassembly:
	0x034EE940 LDP X30, X23, [X31], #0x30
	0x034EE944 B 0x2426B20
	0x034EE948 STR X30, [X31 - 0x30]!
	0x034EE94C STP X22, X21, [X31 + 0x10]
	0x034EE950 STP X20, X19, [X31 + 0x20]
	0x034EE954 ADRP X22, 0xEF1000
	0x034EE958 LDRB W8, [X22 + 0xA19]
	0x034EE95C MOV W20, W2
	0x034EE960 MOV W19, W1
	0x034EE964 MOV X21, X0
	0x034EE968 TBNZ X8, 0x0, 0x34EE980
	0x034EE96C ADRP X0, 0xC45000
	0x034EE970 LDR X0, [X0 + 0x700]
	0x034EE974 BL 0x1C16CF4
	0x034EE978 MOVZ W8, 0x1
	0x034EE97C STRB W8, [X22 + 0xA19]
	0x034EE980 TBZ X20, 0x0, 0x34EE990
	0x034EE984 LDR X0, [X21 + 0x18]
	0x034EE988 CBNZ X0, 0x34EE998
	0x034EE98C BL 0x1C16F20
	0x034EE990 LDR X0, [X21 + 0x30]
	0x034EE994 CBZ X0, 0x34EE98C
	0x034EE998 ADRP X8, 0xC45000
	0x034EE99C LDR X8, [X8 + 0x700]
	0x034EE9A0 MOV W1, W19
	0x034EE9A4 LDP X20, X19, [X31 + 0x20]
	0x034EE9A8 LDP X22, X21, [X31 + 0x10]
	0x034EE9AC LDR X2, [X8]
	0x034EE9B0 LDR X30, [X31], #0x30
	0x034EE9B4 B 0x2427018
	0x034EE9B8 SUB X31, X31, 0x30
	0x034EE9BC STP X30, X21, [X31 + 0x10]
	0x034EE9C0 STP X20, X19, [X31 + 0x20]
	0x034EE9C4 ADRP X20, 0xEF1000
	0x034EE9C8 LDRB W8, [X20 + 0xA1A]
	0x034EE9CC MOV X19, X0
	0x034EE9D0 TBNZ X8, 0x0, 0x34EE9F4
	0x034EE9D4 ADRP X0, 0xC45000
	0x034EE9D8 LDR X0, [X0 + 0x708]
	0x034EE9DC BL 0x1C16CF4
	0x034EE9E0 ADRP X0, 0xC45000
	0x034EE9E4 LDR X0, [X0 + 0x710]
	0x034EE9E8 BL 0x1C16CF4
	0x034EE9EC MOVZ W8, 0x1
	0x034EE9F0 STRB W8, [X20 + 0xA1A]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xEF2000
	007 Move X21, 0xC0E000
	008 Move W8, [X22+2565]
	009 Move X21, [X21+3488]
	010 Move W20, W1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xC2F000
	017 Move X0, [X0+1792]
	018 Call 0x1C17CF4
	019 Move X0, 0xC0E000
	020 Move X0, [X0+3488]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+2565], W8
	024 Move X0, [X21]
	025 Move [X31+8], X31
	026 Move W8, [X0+224]
	027 Compare W8, 0
	028 JumpIfNotEqual {31}
	029 Call 0x1C17DFC
	030 Move X0, [X21]
	031 Move X8, [X0+184]
	032 Move X8, [X8]
	033 Compare X8, 0
	034 JumpIfEqual {52}
	035 Move W9, [X8+24]
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Move X9, 0xC2F000
	038 Move X9, [X9+1792]
	039 Add X8, X8, W20
	040 Move X1, [X8+32]
	041 Add X2, X31, 8
	042 Move X3, [X9]
	043 Move X0, X19
	044 Call Dictionary`2<Object, Object>.TryGetValue, X0, X1, X2
	045 Move X0, [X31+8]
	046 Move X20, [X31+32]
	047 Move X19, [X31+40]
	048 Move X22, [X31+16]
	049 Move X21, [X31+24]
	050 Move X30, [X31+48]
	051 Return X0
	052 Call 0x1C17F20
	053 Call 0x1C17F28

Method: System.Void set_Item(System.Byte key, System.Object value)

Disassembly:
	0x034EE9F4 STRB W31, [X31 + 0xC]
	0x034EE9F8 ADD X1, X31, 0xC
	0x034EE9FC MOV X0, X19
	0x034EEA00 MOV X2, X31
	0x034EEA04 BL 0x33DE64C
	0x034EEA08 LDR X0, [X19 + 0x18]
	0x034EEA0C CBZ X0, 0x34EEAAC
	0x034EEA10 ADRP X20, 0xC45000
	0x034EEA14 LDR X20, [X20 + 0x708]
	0x034EEA18 LDR X1, [X20]
	0x034EEA1C BL 0x2427720
	0x034EEA20 LDR X0, [X19 + 0x20]
	0x034EEA24 CBZ X0, 0x34EEAB0
	0x034EEA28 LDR X1, [X20]
	0x034EEA2C BL 0x2427720
	0x034EEA30 LDR X0, [X19 + 0x28]
	0x034EEA34 CBZ X0, 0x34EEAB4
	0x034EEA38 ADRP X21, 0xC45000
	0x034EEA3C LDR X21, [X21 + 0x710]
	0x034EEA40 LDR X1, [X21]
	0x034EEA44 BL 0x24F1410
	0x034EEA48 LDR X0, [X19 + 0x30]
	0x034EEA4C CBZ X0, 0x34EEAB8
	0x034EEA50 LDR X1, [X20]
	0x034EEA54 BL 0x2427720
	0x034EEA58 LDR X0, [X19 + 0x38]
	0x034EEA5C CBZ X0, 0x34EEABC
	0x034EEA60 LDR X1, [X21]
	0x034EEA64 BL 0x24F1410
	0x034EEA68 LDR X0, [X19 + 0x40]
	0x034EEA6C CBZ X0, 0x34EEAC0
	0x034EEA70 LDR X1, [X21]
	0x034EEA74 BL 0x24F1410
	0x034EEA78 MOV X20, X31
	0x034EEA7C LDRB W8, [X31 + 0xC]
	0x034EEA80 CBZ W8, 0x34EEA90
	0x034EEA84 MOV X0, X19
	0x034EEA88 MOV X1, X31
	0x034EEA8C BL 0x33E14E4
	0x034EEA90 CBNZ X20, 0x34EEAA4
	0x034EEA94 LDP X20, X19, [X31 + 0x20]
	0x034EEA98 LDP X30, X21, [X31 + 0x10]
	0x034EEA9C ADD X31, X31, 0x30

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0xEF2000
	008 Move X22, 0xC0E000
	009 Move W8, [X23+2566]
	010 Move X22, [X22+3488]
	011 Move X19, X2
	012 Move W21, W1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0xC46000
	019 Move X0, [X0+1640]
	020 Call 0x1C17CF4
	021 Move X0, 0xC0E000
	022 Move X0, [X0+3488]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X23+2566], W8
	026 Move X0, [X22]
	027 Move W8, [X0+224]
	028 Compare W8, 0
	029 JumpIfNotEqual {32}
	030 Call 0x1C17DFC
	031 Move X0, [X22]
	032 Move X8, [X0+184]
	033 Move X8, [X8]
	034 Compare X8, 0
	035 JumpIfEqual {53}
	036 Move W9, [X8+24]
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move X9, 0xC46000
	039 Move X9, [X9+1640]
	040 Add X8, X8, W21
	041 Move X1, [X8+32]
	042 Move X0, X20
	043 Move X3, [X9]
	044 Move X2, X19
	045 Move X20, [X31+32]
	046 Move X19, [X31+40]
	047 Move X22, [X31+16]
	048 Move X21, [X31+24]
	049 Move X30, [X31+48]
	050 Move X23, [X31+56]
	051 Call Dictionary`2<Object, Object>.set_Item, X0, X1, X2
	052 Return 
	053 Call 0x1C17F20
	054 Call 0x1C17F28

Method: System.Void Add(System.Byte k, System.Object v)

Disassembly:
	0x034EEAA0 RET
	0x034EEAA4 MOV X0, X20
	0x034EEAA8 BL 0x1C16F18
	0x034EEAAC BL 0x1C16F20
	0x034EEAB0 BL 0x1C16F20
	0x034EEAB4 BL 0x1C16F20
	0x034EEAB8 BL 0x1C16F20
	0x034EEABC BL 0x1C16F20
	0x034EEAC0 BL 0x1C16F20
	0x034EEAC4 B 0x34EEADC
	0x034EEAC8 B 0x34EEADC
	0x034EEACC B 0x34EEADC
	0x034EEAD0 B 0x34EEADC
	0x034EEAD4 B 0x34EEADC
	0x034EEAD8 B 0x34EEADC
	0x034EEADC MOV X21, X0
	0x034EEAE0 CMP W1, 0x1
	0x034EEAE4 B.NE 0x34EEAFC
	0x034EEAE8 MOV X0, X21
	0x034EEAEC BL 0x3EB1AD0
	0x034EEAF0 LDR X20, [X0]
	0x034EEAF4 BL 0x3EB1AE0
	0x034EEAF8 B 0x34EEA7C
	0x034EEAFC MOV X20, X31
	0x034EEB00 B 0x34EEB08
	0x034EEB04 MOV X21, X0
	0x034EEB08 LDRB W8, [X31 + 0xC]
	0x034EEB0C CBZ W8, 0x34EEB1C
	0x034EEB10 MOV X0, X19
	0x034EEB14 MOV X1, X31
	0x034EEB18 BL 0x33E14E4
	0x034EEB1C CBNZ X20, 0x34EEB28
	0x034EEB20 MOV X0, X21
	0x034EEB24 BL 0x1D2C690
	0x034EEB28 MOV X0, X20
	0x034EEB2C BL 0x1C16F18
	0x034EEB30 BL 0x1990590
	0x034EEB34 STR X30, [X31 - 0x30]!
	0x034EEB38 STP X22, X21, [X31 + 0x10]
	0x034EEB3C STP X20, X19, [X31 + 0x20]
	0x034EEB40 ADRP X21, 0xEF1000
	0x034EEB44 LDRB W8, [X21 + 0xA1B]
	0x034EEB48 MOV X19, X1

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X23, 0xEF2000
	008 Move X22, 0xC0E000
	009 Move W8, [X23+2567]
	010 Move X22, [X22+3488]
	011 Move X19, X2
	012 Move W21, W1
	013 Move X20, X0
	014 Move TEMP, X8
	015 And TEMP, TEMP, 1
	016 Compare TEMP, 1
	017 JumpIfEqual {26}
	018 Move X0, 0xC46000
	019 Move X0, [X0+1648]
	020 Call 0x1C17CF4
	021 Move X0, 0xC0E000
	022 Move X0, [X0+3488]
	023 Call 0x1C17CF4
	024 Move W8, 1
	025 Move [X23+2567], W8
	026 Move X0, [X22]
	027 Move W8, [X0+224]
	028 Compare W8, 0
	029 JumpIfNotEqual {32}
	030 Call 0x1C17DFC
	031 Move X0, [X22]
	032 Move X8, [X0+184]
	033 Move X8, [X8]
	034 Compare X8, 0
	035 JumpIfEqual {53}
	036 Move W9, [X8+24]
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move X9, 0xC46000
	039 Move X9, [X9+1648]
	040 Add X8, X8, W21
	041 Move X1, [X8+32]
	042 Move X0, X20
	043 Move X3, [X9]
	044 Move X2, X19
	045 Move X20, [X31+32]
	046 Move X19, [X31+40]
	047 Move X22, [X31+16]
	048 Move X21, [X31+24]
	049 Move X30, [X31+48]
	050 Move X23, [X31+56]
	051 Call Dictionary`2<Object, Object>.Add, X0, X1, X2
	052 Return 
	053 Call 0x1C17F20
	054 Call 0x1C17F28

Method: System.Void Remove(System.Byte k)

Disassembly:
	0x034EEB4C MOV X20, X0
	0x034EEB50 TBNZ X8, 0x0, 0x34EEB98
	0x034EEB54 ADRP X0, 0xC07000
	0x034EEB58 LDR X0, [X0 + 0x9D8]
	0x034EEB5C BL 0x1C16CF4
	0x034EEB60 ADRP X0, 0xC06000
	0x034EEB64 LDR X0, [X0 + 0xDF8]
	0x034EEB68 BL 0x1C16CF4
	0x034EEB6C ADRP X0, 0xC12000
	0x034EEB70 LDR X0, [X0 + 0x5A0]
	0x034EEB74 BL 0x1C16CF4
	0x034EEB78 ADRP X0, 0xC45000
	0x034EEB7C LDR X0, [X0 + 0x718]
	0x034EEB80 BL 0x1C16CF4
	0x034EEB84 ADRP X0, 0xC45000
	0x034EEB88 LDR X0, [X0 + 0x720]
	0x034EEB8C BL 0x1C16CF4
	0x034EEB90 MOVZ W8, 0x1
	0x034EEB94 STRB W8, [X21 + 0xA1B]
	0x034EEB98 CBZ X19, 0x34EECB0
	0x034EEB9C LDR W1, [X19 + 0x14]
	0x034EEBA0 LDR W8, [X20 + 0x5C]
	0x034EEBA4 CMP W1, W8
	0x034EEBA8 B.LE 0x34EEBC8
	0x034EEBAC LDR X0, [X20 + 0x60]
	0x034EEBB0 CBZ X0, 0x34EECB0
	0x034EEBB4 ADRP X21, 0xC06000
	0x034EEBB8 LDR X21, [X21 + 0xDF8]
	0x034EEBBC LDR X2, [X21]
	0x034EEBC0 BL 0x2DAA59C
	0x034EEBC4 TBZ X0, 0x0, 0x34EEBD0
	0x034EEBC8 MOV W0, W31
	0x034EEBCC B 0x34EECA0
	0x034EEBD0 LDR W8, [X20 + 0x5C]
	0x034EEBD4 LDR W1, [X19 + 0x14]
	0x034EEBD8 ADD W8, W8, 0x1
	0x034EEBDC CMP W1, W8
	0x034EEBE0 B.NE 0x34EEBEC
	0x034EEBE4 STR W1, [X20 + 0x5C]
	0x034EEBE8 B 0x34EEC04
	0x034EEBEC LDR X0, [X20 + 0x60]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xEF2000
	007 Move X21, 0xC0E000
	008 Move W8, [X22+2568]
	009 Move X21, [X21+3488]
	010 Move W20, W1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xC0E000
	017 Move X0, [X0+3880]
	018 Call 0x1C17CF4
	019 Move X0, 0xC0E000
	020 Move X0, [X0+3488]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+2568], W8
	024 Move X0, [X21]
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {30}
	028 Call 0x1C17DFC
	029 Move X0, [X21]
	030 Move X8, [X0+184]
	031 Move X8, [X8]
	032 Compare X8, 0
	033 JumpIfEqual {49}
	034 Move W9, [X8+24]
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Move X9, 0xC0E000
	037 Move X9, [X9+3880]
	038 Add X8, X8, W20
	039 Move X1, [X8+32]
	040 Move X0, X19
	041 Move X2, [X9]
	042 Move X20, [X31+32]
	043 Move X19, [X31+40]
	044 Move X22, [X31+16]
	045 Move X21, [X31+24]
	046 Move X30, [X31+48]
	047 Call Dictionary`2<Object, Object>.Remove, X0, X1
	048 Return 
	049 Call 0x1C17F20
	050 Call 0x1C17F28

Method: System.Boolean ContainsKey(System.Byte key)

Disassembly:
	0x034EEBF0 CBZ X0, 0x34EECB0
	0x034EEBF4 ADRP X8, 0xC07000
	0x034EEBF8 LDR X8, [X8 + 0x9D8]
	0x034EEBFC LDR X2, [X8]
	0x034EEC00 BL 0x2DAB03C
	0x034EEC04 LDR X0, [X20 + 0x60]
	0x034EEC08 CBZ X0, 0x34EECB0
	0x034EEC0C ADRP X22, 0xC12000
	0x034EEC10 LDR X22, [X22 + 0x5A0]
	0x034EEC14 LDR W8, [X20 + 0x5C]
	0x034EEC18 LDR X2, [X21]
	0x034EEC1C ADD W1, W8, 0x1
	0x034EEC20 BL 0x2DAA59C
	0x034EEC24 TBZ X0, 0x0, 0x34EEC50
	0x034EEC28 LDR W8, [X20 + 0x5C]
	0x034EEC2C LDR X0, [X20 + 0x60]
	0x034EEC30 ADD W1, W8, 0x1
	0x034EEC34 STR W1, [X20 + 0x5C]
	0x034EEC38 CBZ X0, 0x34EECB0
	0x034EEC3C LDR X2, [X22]
	0x034EEC40 BL 0x2DAA770
	0x034EEC44 LDR X0, [X20 + 0x60]
	0x034EEC48 CBNZ X0, 0x34EEC14
	0x034EEC4C B 0x34EECB0
	0x034EEC50 LDRB W8, [X19 + 0x11]
	0x034EEC54 CMP W8, 0xF
	0x034EEC58 B.NE 0x34EEC80
	0x034EEC5C LDR X0, [X20 + 0x30]
	0x034EEC60 CBZ X0, 0x34EECB0
	0x034EEC64 ADRP X8, 0xC45000
	0x034EEC68 LDR W1, [X19 + 0x14]
	0x034EEC6C LDR X8, [X8 + 0x718]
	0x034EEC70 MOV X2, X19
	0x034EEC74 LDR X3, [X8]
	0x034EEC78 BL 0x2426E98
	0x034EEC7C B 0x34EEC9C
	0x034EEC80 LDR X0, [X20 + 0x28]
	0x034EEC84 CBZ X0, 0x34EECB0
	0x034EEC88 ADRP X8, 0xC45000
	0x034EEC8C LDR X8, [X8 + 0x720]
	0x034EEC90 MOV X1, X19

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xEF2000
	007 Move X21, 0xC0E000
	008 Move W8, [X22+2569]
	009 Move X21, [X21+3488]
	010 Move W20, W1
	011 Move X19, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xC0E000
	017 Move X0, [X0+3416]
	018 Call 0x1C17CF4
	019 Move X0, 0xC0E000
	020 Move X0, [X0+3488]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+2569], W8
	024 Move X0, [X21]
	025 Move W8, [X0+224]
	026 Compare W8, 0
	027 JumpIfNotEqual {30}
	028 Call 0x1C17DFC
	029 Move X0, [X21]
	030 Move X8, [X0+184]
	031 Move X8, [X8]
	032 Compare X8, 0
	033 JumpIfEqual {49}
	034 Move W9, [X8+24]
	035 NotImplemented "Instruction CMP not yet implemented."
	036 Move X9, 0xC0E000
	037 Move X9, [X9+3416]
	038 Add X8, X8, W20
	039 Move X1, [X8+32]
	040 Move X0, X19
	041 Move X2, [X9]
	042 Move X20, [X31+32]
	043 Move X19, [X31+40]
	044 Move X22, [X31+16]
	045 Move X21, [X31+24]
	046 Move X30, [X31+48]
	047 Call Dictionary`2<Object, Object>.ContainsKey, X0, X1
	048 Return X0
	049 Call 0x1C17F20
	050 Call 0x1C17F28

Method: ExitGames.Client.Photon.DictionaryEntryEnumerator GetEnumerator()

Disassembly:
	0x034EEC94 LDR X2, [X8]
	0x034EEC98 BL 0x24F1750
	0x034EEC9C MOVZ W0, 0x1
	0x034EECA0 LDP X20, X19, [X31 + 0x20]
	0x034EECA4 LDP X22, X21, [X31 + 0x10]
	0x034EECA8 LDR X30, [X31], #0x30
	0x034EECAC RET
	0x034EECB0 BL 0x1C16F20
	0x034EECB4 STR X30, [X31 - 0x40]!
	0x034EECB8 STP X24, X23, [X31 + 0x10]
	0x034EECBC STP X22, X21, [X31 + 0x20]
	0x034EECC0 STP X20, X19, [X31 + 0x30]
	0x034EECC4 ADRP X19, 0xEF1000
	0x034EECC8 LDRB W8, [X19 + 0xA1C]
	0x034EECCC MOV X21, X0
	0x034EECD0 TBNZ X8, 0x0, 0x34EECE8
	0x034EECD4 ADRP X0, 0xC45000
	0x034EECD8 LDR X0, [X0 + 0x728]
	0x034EECDC BL 0x1C16CF4
	0x034EECE0 MOVZ W8, 0x1
	0x034EECE4 STRB W8, [X19 + 0xA1C]
	0x034EECE8 LDR X19, [X21 + 0x188]
	0x034EECEC STRB W31, [X31 + 0xC]
	0x034EECF0 ADD X1, X31, 0xC
	0x034EECF4 MOV X0, X19
	0x034EECF8 MOV X2, X31
	0x034EECFC BL 0x33DE64C
	0x034EED00 LDR X8, [X21 + 0x188]
	0x034EED04 CBZ X8, 0x34EEDC0
	0x034EED08 ADRP X23, 0xC45000
	0x034EED0C LDR X23, [X23 + 0x728]

ISIL:
	001 Subtract X31, X31, 128
	002 Move [X31+80], X30
	003 Move [X31+96], X22
	004 Move [X31+104], X21
	005 Move [X31+112], X20
	006 Move [X31+120], X19
	007 Move X21, 0xEF2000
	008 Move X22, 0xC46000
	009 Move X19, X8
	010 Move W8, [X21+2570]
	011 Move X22, [X22+1656]
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {22}
	017 Move X0, 0xC46000
	018 Move X0, [X0+1656]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+2570], W8
	022 Move X1, [X22]
	023 Add X8, X31, 40
	024 Move X0, X20
	025 Call Dictionary`2<Object, Object>.GetEnumerator, X0
	026 Move X8, [X31+72]
	027 Move X30, [X31+80]
	028 NotImplemented "Instruction LDUR not yet implemented."
	029 NotImplemented "Instruction LDUR not yet implemented."
	030 Move X22, [X31+96]
	031 Move X21, [X31+104]
	032 Move [X19+32], X8
	033 Move [X31+32], X8
	034 Move [X19], V1
	035 Move [X19+8], V0
	036 Move X20, [X31+112]
	037 Move X19, [X31+120]
	038 Move [X31], V1
	039 Move [X31+8], V0
	040 Add X31, X31, 128
	041 Return X0

Method: System.String ToString()

Disassembly:
	0x034EED24 CMP W22, W9
	0x034EED28 B.CS 0x34EEDB4
	0x034EED2C ADD X8, X8, X22, 0x3, LSL
	0x034EED30 LDR X24, [X8 + 0x20]
	0x034EED34 CBZ X24, 0x34EEDB0
	0x034EED38 LDR X0, [X24 + 0x18]
	0x034EED3C CBZ X0, 0x34EEDA8
	0x034EED40 LDR X1, [X23]
	0x034EED44 BL 0x2426924
	0x034EED48 MOV W8, W0
	0x034EED4C LDR X0, [X24 + 0x20]
	0x034EED50 ADD W20, W8, W20
	0x034EED54 CBZ X0, 0x34EEDAC
	0x034EED58 LDR X1, [X23]
	0x034EED5C BL 0x2426924
	0x034EED60 LDR X8, [X21 + 0x188]
	0x034EED64 ADD W20, W0, W20
	0x034EED68 ADD X22, X22, 0x1
	0x034EED6C CBNZ X8, 0x34EED18
	0x034EED70 BL 0x1C16F20
	0x034EED74 MOV X22, X31
	0x034EED78 LDRB W8, [X31 + 0xC]
	0x034EED7C CBZ W8, 0x34EED8C
	0x034EED80 MOV X0, X19
	0x034EED84 MOV X1, X31
	0x034EED88 BL 0x33E14E4
	0x034EED8C CBNZ X22, 0x34EEDB8
	0x034EED90 MOV W0, W20
	0x034EED94 LDP X20, X19, [X31 + 0x30]
	0x034EED98 LDP X22, X21, [X31 + 0x20]
	0x034EED9C LDP X24, X23, [X31 + 0x10]
	0x034EEDA0 LDR X30, [X31], #0x40
	0x034EEDA4 RET
	0x034EEDA8 BL 0x1C16F20
	0x034EEDAC BL 0x1C16F20
	0x034EEDB0 BL 0x1C16F20
	0x034EEDB4 BL 0x1C16F28
	0x034EEDB8 MOV X0, X22
	0x034EEDBC BL 0x1C16F18
	0x034EEDC0 MOV W20, W31
	0x034EEDC4 B 0x34EED70
	0x034EEDC8 MOV X21, X0
	0x034EEDCC MOV W20, W31
	0x034EEDD0 B 0x34EEDF0
	0x034EEDD4 B 0x34EEDEC
	0x034EEDD8 B 0x34EEDEC
	0x034EEDDC B 0x34EEDEC
	0x034EEDE0 B 0x34EEDEC
	0x034EEDE4 B 0x34EEDEC
	0x034EEDE8 B 0x34EEDEC
	0x034EEDEC MOV X21, X0
	0x034EEDF0 CMP W1, 0x1
	0x034EEDF4 B.NE 0x34EEE0C
	0x034EEDF8 MOV X0, X21
	0x034EEDFC BL 0x3EB1AD0
	0x034EEE00 LDR X22, [X0]
	0x034EEE04 BL 0x3EB1AE0
	0x034EEE08 B 0x34EED78
	0x034EEE0C MOV X22, X31
	0x034EEE10 B 0x34EEE18
	0x034EEE14 MOV X21, X0
	0x034EEE18 LDRB W8, [X31 + 0xC]
	0x034EEE1C CBZ W8, 0x34EEE2C
	0x034EEE20 MOV X0, X19
	0x034EEE24 MOV X1, X31
	0x034EEE28 BL 0x33E14E4
	0x034EEE2C CBNZ X22, 0x34EEE38
	0x034EEE30 MOV X0, X21
	0x034EEE34 BL 0x1D2C690
	0x034EEE38 MOV X0, X22
	0x034EEE3C BL 0x1C16F18
	0x034EEE40 BL 0x1990590
	0x034EEE44 STR X30, [X31 - 0x50]!
	0x034EEE48 STP X26, X25, [X31 + 0x10]
	0x034EEE4C STP X24, X23, [X31 + 0x20]
	0x034EEE50 STP X22, X21, [X31 + 0x30]
	0x034EEE54 STP X20, X19, [X31 + 0x40]
	0x034EEE58 ADRP X19, 0xEF1000
	0x034EEE5C LDRB W8, [X19 + 0xA1D]
	0x034EEE60 MOV X21, X0
	0x034EEE64 TBNZ X8, 0x0, 0x34EEE7C
	0x034EEE68 ADRP X0, 0xC45000
	0x034EEE6C LDR X0, [X0 + 0x730]
	0x034EEE70 BL 0x1C16CF4
	0x034EEE74 MOVZ W8, 0x1
	0x034EEE78 STRB W8, [X19 + 0xA1D]
	0x034EEE7C STRB W31, [X31 + 0x8]
	0x034EEE80 LDR X19, [X21 + 0x188]
	0x034EEE84 STRB W31, [X31 + 0xC]
	0x034EEE88 ADD X1, X31, 0xC
	0x034EEE8C MOV X0, X19
	0x034EEE90 MOV X2, X31
	0x034EEE94 BL 0x33DE64C
	0x034EEE98 LDR X8, [X21 + 0x188]
	0x034EEE9C CBZ X8, 0x34EEFE4
	0x034EEEA0 MOV X25, X31
	0x034EEEA4 MOV W20, W31
	0x034EEEA8 LDR W9, [X8 + 0x18]
	0x034EEEAC CMP X25, W9, SXTW
	0x034EEEB0 B.GE 0x34EEF6C
	0x034EEEB4 CMP X25, X9
	0x034EEEB8 B.CS 0x34EEFAC
	0x034EEEBC ADD X8, X8, X25, 0x3, LSL
	0x034EEEC0 LDR X22, [X8 + 0x20]
	0x034EEEC4 STRB W31, [X31 + 0x8]
	0x034EEEC8 ADD X1, X31, 0x8
	0x034EEECC MOV X0, X22
	0x034EEED0 MOV X2, X31
	0x034EEED4 BL 0x33DE64C
	0x034EEED8 CBZ X22, 0x34EEF28
	0x034EEEDC LDR X8, [X22 + 0x38]
	0x034EEEE0 CBZ X8, 0x34EEF30
	0x034EEEE4 LDR W9, [X8 + 0x20]
	0x034EEEE8 LDR X8, [X22 + 0x40]
	0x034EEEEC ADD W20, W9, W20
	0x034EEEF0 CBZ X8, 0x34EEF38
	0x034EEEF4 LDR W8, [X8 + 0x20]
	0x034EEEF8 MOV X24, X31
	0x034EEEFC ADD W20, W8, W20
	0x034EEF00 LDRB W8, [X31 + 0x8]
	0x034EEF04 CBZ W8, 0x34EEF14
	0x034EEF08 MOV X0, X22
	0x034EEF0C MOV X1, X31
	0x034EEF10 BL 0x33E14E4
	0x034EEF14 CBNZ X24, 0x34EEFA4
	0x034EEF18 LDR X8, [X21 + 0x188]
	0x034EEF1C ADD X25, X25, 0x1
	0x034EEF20 CBNZ X8, 0x34EEEA8
	0x034EEF24 B 0x34EEFE8
	0x034EEF28 BL 0x1C16F20
	0x034EEF2C B 0x34EEFEC
	0x034EEF30 BL 0x1C16F20
	0x034EEF34 B 0x34EEFEC
	0x034EEF38 BL 0x1C16F20
	0x034EEF3C B 0x34EEFEC
	0x034EEF40 B 0x34EEF4C
	0x034EEF44 B 0x34EEF4C
	0x034EEF48 B 0x34EEF4C
	0x034EEF4C MOV X26, X0
	0x034EEF50 CMP W1, 0x1
	0x034EEF54 B.NE 0x34EEFB0
	0x034EEF58 MOV X0, X26
	0x034EEF5C BL 0x3EB1AD0
	0x034EEF60 LDR X24, [X0]
	0x034EEF64 BL 0x3EB1AE0
	0x034EEF68 B 0x34EEF00
	0x034EEF6C MOV X21, X31
	0x034EEF70 LDRB W8, [X31 + 0xC]
	0x034EEF74 CBZ W8, 0x34EEF84
	0x034EEF78 MOV X0, X19
	0x034EEF7C MOV X1, X31
	0x034EEF80 BL 0x33E14E4
	0x034EEF84 CBNZ X21, 0x34EEFDC
	0x034EEF88 MOV W0, W20
	0x034EEF8C LDP X20, X19, [X31 + 0x40]
	0x034EEF90 LDP X22, X21, [X31 + 0x30]
	0x034EEF94 LDP X24, X23, [X31 + 0x20]
	0x034EEF98 LDP X26, X25, [X31 + 0x10]
	0x034EEF9C LDR X30, [X31], #0x50
	0x034EEFA0 RET
	0x034EEFA4 MOV X0, X24
	0x034EEFA8 BL 0x1C16F18
	0x034EEFAC BL 0x1C16F28
	0x034EEFB0 MOV X23, X1
	0x034EEFB4 MOV X24, X31
	0x034EEFB8 LDRB W8, [X31 + 0x8]
	0x034EEFBC CBZ W8, 0x34EEFCC
	0x034EEFC0 MOV X0, X22
	0x034EEFC4 MOV X1, X31
	0x034EEFC8 BL 0x33E14E4
	0x034EEFCC MOV X1, X23
	0x034EEFD0 CBZ X24, 0x34EF014
	0x034EEFD4 MOV X0, X24
	0x034EEFD8 BL 0x1C16F18
	0x034EEFDC MOV X0, X21
	0x034EEFE0 BL 0x1C16F18
	0x034EEFE4 MOV W20, W31
	0x034EEFE8 BL 0x1C16F20
	0x034EEFEC MOV X23, X1
	0x034EEFF0 MOV X26, X0
	0x034EEFF4 B 0x34EEFB8
	0x034EEFF8 MOV X26, X0
	0x034EEFFC MOV W20, W31
	0x034EF000 B 0x34EF014
	0x034EF004 B 0x34EF010
	0x034EF008 B 0x34EF010
	0x034EF00C B 0x34EF010
	0x034EF010 MOV X26, X0
	0x034EF014 CMP W1, 0x1
	0x034EF018 B.NE 0x34EF030
	0x034EF01C MOV X0, X26
	0x034EF020 BL 0x3EB1AD0
	0x034EF024 LDR X21, [X0]
	0x034EF028 BL 0x3EB1AE0
	0x034EF02C B 0x34EEF70
	0x034EF030 MOV X21, X31
	0x034EF034 B 0x34EF03C
	0x034EF038 MOV X26, X0
	0x034EF03C LDRB W8, [X31 + 0xC]
	0x034EF040 CBZ W8, 0x34EF050
	0x034EF044 MOV X0, X19
	0x034EF048 MOV X1, X31
	0x034EF04C BL 0x33E14E4
	0x034EF050 CBNZ X21, 0x34EF05C
	0x034EF054 MOV X0, X26
	0x034EF058 BL 0x1D2C690
	0x034EF05C MOV X0, X21
	0x034EF060 BL 0x1C16F18
	0x034EF064 BL 0x1990590
	0x034EF068 STR X30, [X31 - 0x20]!
	0x034EF06C STP X20, X19, [X31 + 0x10]
	0x034EF070 ADRP X20, 0xEF0000
	0x034EF074 LDRB W8, [X20 + 0xA1E]
	0x034EF078 MOV X19, X0
	0x034EF07C TBNZ X8, 0x0, 0x34EF094
	0x034EF080 ADRP X0, 0xC44000
	0x034EF084 LDR X0, [X0 + 0x738]
	0x034EF088 BL 0x1C16CF4
	0x034EF08C MOVZ W8, 0x1
	0x034EF090 STRB W8, [X20 + 0xA1E]
	0x034EF094 LDR X8, [X19 + 0x128]
	0x034EF098 CBZ X8, 0x34EF0AC
	0x034EF09C LDR W0, [X8 + 0x18]
	0x034EF0A0 LDP X20, X19, [X31 + 0x10]
	0x034EF0A4 LDR X30, [X31], #0x20
	0x034EF0A8 RET
	0x034EF0AC BL 0x1C16F20
	0x034EF0B0 STR X30, [X31 - 0x10]!
	0x034EF0B4 ADD X0, X0, 0x130
	0x034EF0B8 MOVZ W1, 0x1
	0x034EF0BC MOVZ W2, 0x1
	0x034EF0C0 MOV X3, X31
	0x034EF0C4 BL 0x33E7AB4
	0x034EF0C8 CMP W0, 0x1
	0x034EF0CC CSET W0, EQ
	0x034EF0D0 LDR X30, [X31], #0x10
	0x034EF0D4 RET
	0x034EF0D8 ADD X0, X0, 0x130
	0x034EF0DC TBZ X1, 0x0, 0x34EF0F0
	0x034EF0E0 MOVZ W1, 0x1
	0x034EF0E4 MOV W2, W31
	0x034EF0E8 MOV X3, X31
	0x034EF0EC B 0x33E7AB4
	0x034EF0F0 MOVZ W2, 0x1
	0x034EF0F4 MOV W1, W31
	0x034EF0F8 MOV X3, X31
	0x034EF0FC B 0x33E7AB4
	0x034EF100 STP X29, X30, [X31 - 0x60]!
	0x034EF104 STP X28, X27, [X31 + 0x10]
	0x034EF108 STP X26, X25, [X31 + 0x20]
	0x034EF10C STP X24, X23, [X31 + 0x30]
	0x034EF110 STP X22, X21, [X31 + 0x40]
	0x034EF114 STP X20, X19, [X31 + 0x50]
	0x034EF118 ADRP X29, 0xEF0000
	0x034EF11C ADRP X20, 0xC44000
	0x034EF120 ADRP X23, 0xC44000
	0x034EF124 ADRP X22, 0xC44000
	0x034EF128 ADRP X21, 0xC05000
	0x034EF12C ADRP X28, 0xC44000
	0x034EF130 ADRP X27, 0xC08000
	0x034EF134 ADRP X26, 0xC08000
	0x034EF138 ADRP X25, 0xC44000
	0x034EF13C ADRP X24, 0xC44000
	0x034EF140 LDR X20, [X20 + 0x740]
	0x034EF144 LDR X23, [X23 + 0x748]
	0x034EF148 LDR X22, [X22 + 0x750]
	0x034EF14C LDR X21, [X21 + 0xE58]
	0x034EF150 LDR X28, [X28 + 0x758]
	0x034EF154 LDR X27, [X27 + 0x7A8]
	0x034EF158 LDR X26, [X26 + 0x7A0]
	0x034EF15C LDRB W8, [X29 + 0xA1F]
	0x034EF160 LDR X25, [X25 + 0x6D0]
	0x034EF164 LDR X24, [X24 + 0x6D8]
	0x034EF168 MOV X19, X0
	0x034EF16C TBNZ X8, 0x0, 0x34EF214
	0x034EF170 ADRP X0, 0xC44000
	0x034EF174 LDR X0, [X0 + 0x758]
	0x034EF178 BL 0x1C16CF4
	0x034EF17C ADRP X0, 0xC44000
	0x034EF180 LDR X0, [X0 + 0x760]
	0x034EF184 BL 0x1C16CF4
	0x034EF188 ADRP X0, 0xC44000
	0x034EF18C LDR X0, [X0 + 0x768]
	0x034EF190 BL 0x1C16CF4
	0x034EF194 ADRP X0, 0xC44000
	0x034EF198 LDR X0, [X0 + 0x770]
	0x034EF19C BL 0x1C16CF4
	0x034EF1A0 ADRP X0, 0xC05000
	0x034EF1A4 LDR X0, [X0 + 0xE58]
	0x034EF1A8 BL 0x1C16CF4
	0x034EF1AC ADRP X0, 0xC44000
	0x034EF1B0 LDR X0, [X0 + 0x750]
	0x034EF1B4 BL 0x1C16CF4
	0x034EF1B8 ADRP X0, 0xC44000
	0x034EF1BC LDR X0, [X0 + 0x748]
	0x034EF1C0 BL 0x1C16CF4
	0x034EF1C4 ADRP X0, 0xC44000
	0x034EF1C8 LDR X0, [X0 + 0x740]
	0x034EF1CC BL 0x1C16CF4
	0x034EF1D0 ADRP X0, 0xC44000
	0x034EF1D4 LDR X0, [X0 + 0x778]
	0x034EF1D8 BL 0x1C16CF4
	0x034EF1DC ADRP X0, 0xC08000
	0x034EF1E0 LDR X0, [X0 + 0x7A0]
	0x034EF1E4 BL 0x1C16CF4
	0x034EF1E8 ADRP X0, 0xC44000
	0x034EF1EC LDR X0, [X0 + 0x6D8]
	0x034EF1F0 BL 0x1C16CF4
	0x034EF1F4 ADRP X0, 0xC44000
	0x034EF1F8 LDR X0, [X0 + 0x6D0]
	0x034EF1FC BL 0x1C16CF4
	0x034EF200 ADRP X0, 0xC08000
	0x034EF204 LDR X0, [X0 + 0x7A8]
	0x034EF208 BL 0x1C16CF4
	0x034EF20C MOVZ W8, 0x1
	0x034EF210 STRB W8, [X29 + 0xA1F]
	0x034EF214 LDR X0, [X20]
	0x034EF218 ADRP X29, 0xC44000
	0x034EF21C LDR X29, [X29 + 0x760]
	0x034EF220 BL 0x1C16F10
	0x034EF224 MOV X20, X0
	0x034EF228 BL 0x34EF334
	0x034EF22C STR X20, [X19 + 0x120]
	0x034EF230 LDR X0, [X23]
	0x034EF234 BL 0x1C16F10
	0x034EF238 LDR X1, [X22]
	0x034EF23C MOV X20, X0
	0x034EF240 BL 0x301B7C4
	0x034EF244 STR X20, [X19 + 0x128]
	0x034EF248 STR W31, [X19 + 0x130]
	0x034EF24C LDR X0, [X21]
	0x034EF250 MOVZ W1, 0x4
	0x034EF254 BL 0x1C16D6C
	0x034EF258 MOVZ W8, 0x64
	0x034EF25C STR X0, [X19 + 0x140]
	0x034EF260 STR W8, [X19 + 0x170]
	0x034EF264 LDR X0, [X28]
	0x034EF268 MOV W1, W31
	0x034EF26C BL 0x1C16D6C
	0x034EF270 STR X0, [X19 + 0x188]
	0x034EF274 LDR X0, [X27]
	0x034EF278 BL 0x1C16F10
	0x034EF27C LDR X1, [X26]
	0x034EF280 MOV X20, X0
	0x034EF284 BL 0x24EFEE4
	0x034EF288 STP X20, X31, [X19 + 0x190]
	0x034EF28C STR W31, [X19 + 0x1A0]
	0x034EF290 LDR X0, [X25]
	0x034EF294 BL 0x1C16F10
	0x034EF298 LDR X1, [X24]
	0x034EF29C MOV X20, X0
	0x034EF2A0 BL 0x24F1248
	0x034EF2A4 STR X20, [X19 + 0x1A8]
	0x034EF2A8 ADRP X8, 0xC44000
	0x034EF2AC LDR X8, [X8 + 0x770]
	0x034EF2B0 LDR X0, [X8]
	0x034EF2B4 BL 0x1C16F10
	0x034EF2B8 ADRP X8, 0xC44000

ISIL:
	001 Subtract X31, X31, 160
	002 Move [X31+64], X29
	003 Move [X31+72], X30
	004 Move [X31+80], X28
	005 Move [X31+88], X27
	006 Move [X31+96], X26
	007 Move [X31+104], X25
	008 Move [X31+112], X24
	009 Move [X31+120], X23
	010 Move [X31+128], X22
	011 Move [X31+136], X21
	012 Move [X31+144], X20
	013 Move [X31+152], X19
	014 Move X23, 0xEF2000
	015 Move X22, 0xC07000
	016 Move X19, 0xC07000
	017 Move X21, 0xC0F000
	018 Move W8, [X23+2571]
	019 Move X22, [X22+464]
	020 Move X19, [X19+448]
	021 Move X21, [X21+568]
	022 Move X20, X0
	023 Move TEMP, X8
	024 And TEMP, TEMP, 1
	025 Compare TEMP, 1
	026 JumpIfEqual {74}
	027 Move X0, 0xC0F000
	028 Move X0, [X0+568]
	029 Call 0x1C17CF4
	030 Move X0, 0xC0F000
	031 Move X0, [X0+576]
	032 Call 0x1C17CF4
	033 Move X0, 0xC0F000
	034 Move X0, [X0+584]
	035 Call 0x1C17CF4
	036 Move X0, 0xC0F000
	037 Move X0, [X0+592]
	038 Call 0x1C17CF4
	039 Move X0, 0xC0F000
	040 Move X0, [X0+600]
	041 Call 0x1C17CF4
	042 Move X0, 0xC07000
	043 Move X0, [X0+440]
	044 Call 0x1C17CF4
	045 Move X0, 0xC08000
	046 Move X0, [X0+3704]
	047 Call 0x1C17CF4
	048 Move X0, 0xC07000
	049 Move X0, [X0+448]
	050 Call 0x1C17CF4
	051 Move X0, 0xC07000
	052 Move X0, [X0+464]
	053 Call 0x1C17CF4
	054 Move X0, 0xC06000
	055 Move X0, [X0+2760]
	056 Call 0x1C17CF4
	057 Move X0, 0xC33000
	058 Move X0, [X0+4024]
	059 Call 0x1C17CF4
	060 Move X0, 0xC06000
	061 Move X0, [X0+2104]
	062 Call 0x1C17CF4
	063 Move X0, 0xC11000
	064 Move X0, [X0+784]
	065 Call 0x1C17CF4
	066 Move X0, 0xC07000
	067 Move X0, [X0+1544]
	068 Call 0x1C17CF4
	069 Move X0, 0xC46000
	070 Move X0, [X0+1664]
	071 Call 0x1C17CF4
	072 Move W8, 1
	073 Move [X23+2571], W8
	074 Move X0, [X22]
	075 Move [X31+32], X31
	076 Move [X31+40], X31
	077 Move [X31+48], X31
	078 Call 0x1C17F10
	079 Move X1, [X19]
	080 Move X19, X0
	081 Call List`1<Object>..ctor, X0
	082 Move X1, [X21]
	083 Move X0, X20
	084 Call Dictionary`2<Object, Object>.get_Keys, X0
	085 Compare X0, 0
	086 JumpIfEqual {321}
	087 Move X8, 0xC0F000
	088 Move X8, [X8+600]
	089 Move X27, 0xC0F000
	090 Move X28, 0xC33000
	091 Move X29, 0xC07000
	092 Move X27, [X27+584]
	093 Move X28, [X28+4024]
	094 Move X29, [X29+440]
	095 Move X1, [X8]
	096 Add X8, X31, 8
	097 Call KeyCollection<Object, Object>.GetEnumerator, X0
	098 NotImplemented "Instruction LDUR not yet implemented."
	099 Move X8, [X31+24]
	100 Move X21, X31
	101 Move X22, X31
	102 Move X23, X31
	103 Move X24, X31
	104 Move [X31+2], V0
	105 Move [X31+48], X8
	106 Move X1, [X27]
	107 Add X0, X31, 32
	108 Call Enumerator<Object, Object>.MoveNext, X0
	109 Move TEMP, X0
	110 And TEMP, TEMP, 1
	111 Compare TEMP, 1
	112 JumpIfNotEqual {285}
	113 Move X25, [X31+48]
	114 Compare X25, 0
	115 JumpIfEqual {127}
	116 Move X0, X20
	117 Move X1, X25
	118 Call Hashtable.get_Item, X0, X1
	119 Compare X0, 0
	120 JumpIfNotEqual {171}
	121 Move X8, [X25]
	122 Move X9, [X8+360]
	123 Move X1, [X8+368]
	124 Move X0, X25
	125 NotImplemented "Instruction BLR not yet implemented."
	126 Move X26, X0
	127 Move X26, X31
	128 Move X0, X20
	129 Move X1, X25
	130 Call Hashtable.get_Item, X0, X1
	131 Move X25, [X28]
	132 NotImplemented "Instruction CMP not yet implemented."
	133 NotImplemented "Instruction CSEL not yet implemented."
	134 Compare X0, 0
	135 JumpIfEqual {144}
	136 Compare X24, 0
	137 JumpIfEqual {320}
	138 Move X8, [X24]
	139 Move X9, [X8+360]
	140 Move X1, [X8+368]
	141 Move X0, X24
	142 NotImplemented "Instruction BLR not yet implemented."
	143 Move X2, X0
	144 Move X2, X31
	145 Move X0, X26
	146 Move X1, X25
	147 Move X3, X31
	148 Call String.Concat, X0, X1, X2
	149 Move X1, X0
	150 Compare X19, 0
	151 JumpIfEqual {318}
	152 Move W10, [X19+28]
	153 Move X8, [X19+16]
	154 Move X9, [X29]
	155 Add W10, W10, 1
	156 Move [X19+28], W10
	157 Compare X8, 0
	158 JumpIfEqual {319}
	159 NotImplemented "Instruction LDRSW not yet implemented."
	160 Move W11, [X8+24]
	161 NotImplemented "Instruction CMP not yet implemented."
	162 Add W9, W10, 1
	163 Add X8, X8, X10
	164 Move [X19+24], W9
	165 Move [X8+32], X1
	166 Move X8, [X9+32]
	167 Move X8, [X8+192]
	168 Move X2, [X8+112]
	169 Move X0, X19
	170 Call List`1<Object>.AddWithResize, X0, X1
	171 Move X8, 0xC06000
	172 Move X8, [X8+2760]
	173 Move X0, [X8]
	174 Move W1, 8
	175 Call 0x1C17D6C
	176 Move X26, X0
	177 Compare X0, 0
	178 JumpIfEqual {328}
	179 Move W8, [X26+24]
	180 Compare W8, 0
	181 JumpIfEqual {331}
	182 Move X8, 0xC11000
	183 Move X8, [X8+784]
	184 Move X8, [X8]
	185 Move [X26+32], X8
	186 Move X0, X25
	187 Move X1, X31
	188 Call "il2cpp_vm_object_is_inst", X0
	189 NotImplemented "Instruction CMP not yet implemented."
	190 NotImplemented "Instruction CSEL not yet implemented."
	191 Compare X0, 0
	192 JumpIfEqual {200}
	193 Compare X23, 0
	194 JumpIfEqual {334}
	195 Move X8, [X23]
	196 Move X9, [X8+360]
	197 Move X1, [X8+368]
	198 Move X0, X23
	199 NotImplemented "Instruction BLR not yet implemented."
	200 Move W8, [X26+24]
	201 NotImplemented "Instruction CMP not yet implemented."
	202 NotImplemented "Instruction CMP not yet implemented."
	203 Move [X26+40], X0
	204 Move X8, 0xC06000
	205 Move X8, [X8+1544]
	206 Move X8, [X8]
	207 Move [X26+48], X8
	208 Move X8, [X25]
	209 Move X9, [X8+360]
	210 Move X1, [X8+368]
	211 Move X0, X25
	212 NotImplemented "Instruction BLR not yet implemented."
	213 Move W8, [X26+24]
	214 NotImplemented "Instruction CMP not yet implemented."
	215 NotImplemented "Instruction CMP not yet implemented."
	216 Move [X26+56], X0
	217 Move X8, 0xC45000
	218 Move X8, [X8+1664]
	219 Move X8, [X8]
	220 Move [X26+64], X8
	221 Move X0, X20
	222 Move X1, X25
	223 Call Hashtable.get_Item, X0, X1
	224 Compare X0, 0
	225 JumpIfEqual {333}
	226 Move X1, X31
	227 Call "il2cpp_vm_object_is_inst", X0
	228 NotImplemented "Instruction CMP not yet implemented."
	229 NotImplemented "Instruction CSEL not yet implemented."
	230 Compare X0, 0
	231 JumpIfEqual {239}
	232 Compare X21, 0
	233 JumpIfEqual {335}
	234 Move X8, [X21]
	235 Move X9, [X8+360]
	236 Move X1, [X8+368]
	237 Move X0, X21
	238 NotImplemented "Instruction BLR not yet implemented."
	239 Move W8, [X26+24]
	240 NotImplemented "Instruction CMP not yet implemented."
	241 NotImplemented "Instruction CMP not yet implemented."
	242 Move [X26+72], X0
	243 Move X8, 0xC06000
	244 Move X8, [X8+1544]
	245 Move X8, [X8]
	246 Move [X26+80], X8
	247 Move X0, X20
	248 Move X1, X25
	249 Call Hashtable.get_Item, X0, X1
	250 NotImplemented "Instruction CMP not yet implemented."
	251 NotImplemented "Instruction CSEL not yet implemented."
	252 Compare X0, 0
	253 JumpIfEqual {261}
	254 Compare X22, 0
	255 JumpIfEqual {336}
	256 Move X8, [X22]
	257 Move X9, [X8+360]
	258 Move X1, [X8+368]
	259 Move X0, X22
	260 NotImplemented "Instruction BLR not yet implemented."
	261 Move W8, [X26+24]
	262 NotImplemented "Instruction CMP not yet implemented."
	263 Move [X26+88], X0
	264 Move X0, X26
	265 Move X1, X31
	266 Call String.Concat, X0
	267 Move X1, X0
	268 Compare X19, 0
	269 JumpIfEqual {332}
	270 Move W10, [X19+28]
	271 Move X8, [X19+16]
	272 Move X9, [X29]
	273 Add W10, W10, 1
	274 Move [X19+28], W10
	275 Compare X8, 0
	276 JumpIfEqual {329}
	277 NotImplemented "Instruction LDRSW not yet implemented."
	278 Move W11, [X8+24]
	279 NotImplemented "Instruction CMP not yet implemented."
	280 Move X8, [X9+32]
	281 Move X8, [X8+192]
	282 Move X2, [X8+112]
	283 Move X0, X19
	284 Call List`1<Object>.AddWithResize, X0, X1
	285 Move X8, 0xC0E000
	286 Move X8, [X8+576]
	287 Add X0, X31, 32
	288 Move X1, [X8]
	289 Call Enumerator<Object, Object>.Dispose, X0
	290 Compare X19, 0
	291 JumpIfEqual {321}
	292 Move X8, 0xC07000
	293 Move X8, [X8+3704]
	294 Move X0, X19
	295 Move X1, [X8]
	296 Call List`1<Object>.ToArray, X0
	297 Move X8, 0xC05000
	298 Move X8, [X8+2104]
	299 Move X1, X0
	300 Move X2, X31
	301 Move X8, [X8]
	302 Move X0, X8
	303 Call String.Join, X0, X1
	304 Move X20, [X31+144]
	305 Move X19, [X31+152]
	306 Move X22, [X31+128]
	307 Move X21, [X31+136]
	308 Move X24, [X31+112]
	309 Move X23, [X31+120]
	310 Move X26, [X31+96]
	311 Move X25, [X31+104]
	312 Move X28, [X31+80]
	313 Move X27, [X31+88]
	314 Move X29, [X31+64]
	315 Move X30, [X31+72]
	316 Add X31, X31, 160
	317 Return X0
	318 Call 0x1C17F20
	319 Call 0x1C17F20
	320 Call 0x1C17F20
	321 Call 0x1C17F20
	322 Call 0x1C17F28
	323 Call 0x1C17F28
	324 Call 0x1C17F28
	325 Call 0x1C17F28
	326 Call 0x1C17F28
	327 Call 0x1C17F28
	328 Call 0x1C17F20
	329 Call 0x1C17F20
	330 Call 0x1C17F28
	331 Call 0x1C17F28
	332 Call 0x1C17F20
	333 Call 0x1C17F20
	334 Call 0x1C17F20
	335 Call 0x1C17F20
	336 Call 0x1C17F20
	337 Move X20, X0
	338 NotImplemented "Instruction CMP not yet implemented."
	339 Move X0, X20
	340 Call 0x3EB2AD0
	341 Move X21, [X0]
	342 Call 0x3EB2AE0
	343 Move X8, 0xC0E000
	344 Move X8, [X8+576]
	345 Add X0, X31, 32
	346 Move X1, [X8]
	347 Call Enumerator<Object, Object>.Dispose, X0
	348 Compare X21, 0
	349 JumpIfEqual {290}
	350 Move X0, X21
	351 Call 0x1C17F18
	352 Move X21, X31
	353 Move X20, X0
	354 Move X8, 0xC0E000
	355 Move X8, [X8+576]
	356 Move X1, [X8]
	357 Add X0, X31, 32
	358 Call Enumerator<Object, Object>.Dispose, X0
	359 Compare X21, 0
	360 JumpIfNotEqual {363}
	361 Move X0, X20
	362 Call 0x1D2D690
	363 Move X0, X21
	364 Call 0x1C17F18
	365 Call 0x1991590

Method: System.Object Clone()

Disassembly:
	0x034EF2BC LDR X8, [X8 + 0x768]
	0x034EF2C0 MOV X20, X0
	0x034EF2C4 LDR X1, [X8]
	0x034EF2C8 BL 0x2D8C06C
	0x034EF2CC STR X20, [X19 + 0x1B0]
	0x034EF2D0 ADRP X8, 0xC44000
	0x034EF2D4 LDR X8, [X8 + 0x778]
	0x034EF2D8 LDR X0, [X8]
	0x034EF2DC LDR W8, [X0 + 0xE0]
	0x034EF2E0 CBNZ W8, 0x34EF2E8
	0x034EF2E4 BL 0x1C16DFC
	0x034EF2E8 MOV X0, X19
	0x034EF2EC BL 0x34EF3B0
	0x034EF2F0 MOVZ W8, 0xC
	0x034EF2F4 STR W8, [X19 + 0x118]
	0x034EF2F8 LDR X0, [X29]
	0x034EF2FC LDR W8, [X0 + 0xE0]
	0x034EF300 CBNZ W8, 0x34EF30C
	0x034EF304 BL 0x1C16DFC
	0x034EF308 LDR X0, [X29]
	0x034EF30C LDR X8, [X0 + 0xB8]
	0x034EF310 LDP X22, X21, [X31 + 0x40]
	0x034EF314 LDP X24, X23, [X31 + 0x30]
	0x034EF318 LDP X26, X25, [X31 + 0x20]
	0x034EF31C LDR X8, [X8]
	0x034EF320 LDP X28, X27, [X31 + 0x10]
	0x034EF324 STR X8, [X19 + 0xE8]
	0x034EF328 LDP X20, X19, [X31 + 0x50]
	0x034EF32C LDP X29, X30, [X31], #0x60
	0x034EF330 RET

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xEF1000
	007 Move X22, 0xC36000
	008 Move X20, 0xC45000
	009 Move W8, [X21+2572]
	010 Move X22, [X22+2856]
	011 Move X20, [X20+1672]
	012 Move X19, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {25}
	017 Move X0, 0xC45000
	018 Move X0, [X0+1672]
	019 Call 0x1C17CF4
	020 Move X0, 0xC36000
	021 Move X0, [X0+2856]
	022 Call 0x1C17CF4
	023 Move W8, 1
	024 Move [X21+2572], W8
	025 Move X0, [X22]
	026 Call 0x1C17F10
	027 Move X2, [X20]
	028 Move X1, X19
	029 Move X20, X0
	030 Call Dictionary`2<Object, Object>..ctor, X0, X1
	031 Move X0, X20
	032 Move X20, [X31+32]
	033 Move X19, [X31+40]
	034 Move X22, [X31+16]
	035 Move X21, [X31+24]
	036 Move X30, [X31+48]
	037 Return X0

