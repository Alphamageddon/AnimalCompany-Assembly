Type: System.Numerics.BigNumber

Method: System.Char ParseFormatSpecifier(System.ReadOnlySpan`1<System.Char> format, out System.Int32 digits)

Disassembly:
	0x03611AB0 MOVZ W8, 0x1
	0x03611AB4 STRB W8, [X19 + 0x762]
	0x03611AB8 CBZ X27, 0x3611B04
	0x03611ABC MOV X0, X27
	0x03611AC0 MOV X1, X31
	0x03611AC4 BL 0x3225708
	0x03611AC8 LDR W24, [X27 + 0x10]
	0x03611ACC MOV X25, X0
	0x03611AD0 TBZ X22, 0x0, 0x3611B10
	0x03611AD4 LDP X1, X2, [X29 - 0x70]
	0x03611AD8 LDUR X3, [X29 - 0x60]
	0x03611ADC LDUR X6, [X29 - 0x78]
	0x03611AE0 SUB X0, X29, 0x18
	0x03611AE4 MOV X4, X25
	0x03611AE8 MOV X5, X24
	0x03611AEC MOV X7, X31
	0x03611AF0 BL 0x337B970
	0x03611AF4 MOV W8, W0
	0x03611AF8 AND W8, W8, 0x1
	0x03611AFC MOV X0, X31
	0x03611B00 B 0x3611C24
	0x03611B04 MOV X25, X31
	0x03611B08 MOV X24, X31
	0x03611B0C TBNZ X22, 0x0, 0x3611AD4
	0x03611B10 LDUR X8, [X29 - 0x60]
	0x03611B14 LDUR X2, [X29 - 0x78]
	0x03611B18 SUB X0, X29, 0x18
	0x03611B1C MOV X1, X27
	0x03611B20 MOV X3, X31
	0x03611B24 STR W31, [X8]
	0x03611B28 STRB W31, [X23]
	0x03611B2C BL 0x337B8BC
	0x03611B30 B 0x361161C
	0x03611B34 LDUR X24, [X29 - 0x78]
	0x03611B38 LDUR W8, [X29 - 0x18]
	0x03611B3C TBNZ X8, 0x1F, 0x3611B68
	0x03611B40 SUB W19, W19, W27
	0x03611B44 TBZ X22, 0x0, 0x3611C2C
	0x03611B48 CBNZ X26, 0x3611BC8
	0x03611B4C ORR W8, W19, W27, 0x0
	0x03611B50 CBZ W8, 0x3611B5C
	0x03611B54 MOV X0, X31
	0x03611B58 BL 0x339D6EC
	0x03611B5C MOV X8, X31
	0x03611B60 MOV W9, W31
	0x03611B64 B 0x3611BF0
	0x03611B68 CBZ X24, 0x3611BBC
	0x03611B6C LDR X0, [X24 + 0x30]
	0x03611B70 CBZ X0, 0x3611BBC
	0x03611B74 LDR W8, [X0 + 0x10]
	0x03611B78 SUBS W20, W8, 0x1
	0x03611B7C B.MI 0x3611B40
	0x03611B80 SUB W27, W27, 0x1
	0x03611B84 MOV W1, W20
	0x03611B88 MOV X2, X31
	0x03611B8C BL 0x3222A1C
	0x03611B90 CBZ X26, 0x3611BBC
	0x03611B94 LDR W8, [X26 + 0x18]
	0x03611B98 CMP W27, W8
	0x03611B9C B.CS 0x3611C68

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xDD0000
	007 Move W8, [X22+1078]
	008 Move X19, X2
	009 Move X21, X1
	010 Move X20, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0xB12000
	016 Move X0, [X0+40]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X22+1078], W8
	020 Move TEMP, 0
	021 Not TEMP
	022 Move W8, TEMP
	023 Move [X19], W8
	024 Compare W21, 0
	025 JumpIfEqual {44}
	026 NotImplemented "Instruction LDRH not yet implemented."
	027 And W8, W0, 0xFFFFFFDF
	028 Subtract W8, W8, 65
	029 And W8, W8, 0xFFFF
	030 NotImplemented "Instruction CMP not yet implemented."
	031 NotImplemented "Instruction CMP not yet implemented."
	032 NotImplemented "Instruction LDRH not yet implemented."
	033 Subtract W8, W8, 48
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Move W9, 1
	036 Move TEMP, 0
	037 Not TEMP
	038 Move W8, TEMP
	039 NotImplemented "Instruction CMP not yet implemented."
	040 NotImplemented "Instruction LDRH not yet implemented."
	041 Compare W9, 0
	042 JumpIfEqual {55}
	043 Move W0, W31
	044 Move W0, 82
	045 Move W9, 2
	046 Move W10, 10
	047 NotImplemented "Instruction CMP not yet implemented."
	048 NotImplemented "Instruction LDRH not yet implemented."
	049 Subtract W12, W11, 48
	050 NotImplemented "Instruction CMP not yet implemented."
	051 NotImplemented "Instruction MADD not yet implemented."
	052 Subtract W8, W8, 48
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Add W9, W9, 1
	055 Move [X19], W8
	056 Move X20, [X31+32]
	057 Move X19, [X31+40]
	058 Move X22, [X31+16]
	059 Move X21, [X31+24]
	060 Move X30, [X31+48]
	061 Return X0
	062 Call 0x1C17F28

Method: System.String FormatBigIntegerToHex(System.Boolean targetSpan, System.Numerics.BigInteger value, System.Char format, System.Int32 digits, System.Globalization.NumberFormatInfo info, System.Span`1<System.Char> destination, out System.Int32 charsWritten, out System.Boolean spanSuccess)

Disassembly:
	0x03611BA0 ADD X8, X26, W27, 0x1, SXTW
	0x03611BA4 SUBS W20, W20, 0x1
	0x03611BA8 STRH W0, [X8 + 0x20]
	0x03611BAC B.MI 0x3611BC0
	0x03611BB0 LDR X0, [X24 + 0x30]
	0x03611BB4 SUB W27, W27, 0x1
	0x03611BB8 CBNZ X0, 0x3611B84
	0x03611BBC BL 0x1C16F20
	0x03611BC0 SUB W19, W19, W27
	0x03611BC4 TBZ X22, 0x0, 0x3611C2C
	0x03611BC8 LDR W8, [X26 + 0x18]
	0x03611BCC SUBS W8, W8, W27
	0x03611BD0 B.CC 0x3611BDC
	0x03611BD4 CMP W8, W19
	0x03611BD8 B.CS 0x3611BE4
	0x03611BDC MOV X0, X31
	0x03611BE0 BL 0x339D6EC
	0x03611BE4 ADD X8, X26, W27, 0x1, SXTW
	0x03611BE8 ADD X8, X8, 0x20
	0x03611BEC MOV W9, W19
	0x03611BF0 ADRP X10, 0xB19000
	0x03611BF4 LDR X10, [X10 + 0xFC8]
	0x03611BF8 LDP X1, X2, [X29 - 0x70]
	0x03611BFC SUB X0, X29, 0x50
	0x03611C00 STUR X8, [X29 - 0x50]
	0x03611C04 LDR X3, [X10]
	0x03611C08 STP W9, W31, [X29 - 0x48]
	0x03611C0C BL 0x25BECB8
	0x03611C10 TBZ X0, 0x0, 0x3611C54
	0x03611C14 LDUR X8, [X29 - 0x60]
	0x03611C18 MOV X0, X31
	0x03611C1C STR W19, [X8]
	0x03611C20 MOVZ W8, 0x1
	0x03611C24 STRB W8, [X23]
	0x03611C28 B 0x361161C
	0x03611C2C LDUR X8, [X29 - 0x60]
	0x03611C30 MOV X0, X31
	0x03611C34 MOV X1, X26
	0x03611C38 MOV W2, W27
	0x03611C3C MOV W3, W19
	0x03611C40 MOV X4, X31
	0x03611C44 STR W31, [X8]
	0x03611C48 STRB W31, [X23]
	0x03611C4C BL 0x322EAE4
	0x03611C50 B 0x361161C
	0x03611C54 LDUR X8, [X29 - 0x60]
	0x03611C58 MOV X0, X31
	0x03611C5C STR W31, [X8]
	0x03611C60 STRB W31, [X23]
	0x03611C64 B 0x361161C
	0x03611C68 BL 0x1C16F28
	0x03611C6C BL 0x1C16F30
	0x03611C70 ADRP X8, 0xB29000
	0x03611C74 LDR X8, [X8 + 0xEF0]
	0x03611C78 LDR X1, [X8]
	0x03611C7C BL 0x1C16DEC
	0x03611C80 BL 0x1C16F30
	0x03611C84 ADRP X8, 0xB29000
	0x03611C88 LDR X8, [X8 + 0xEF0]
	0x03611C8C LDR X1, [X8]
	0x03611C90 BL 0x1C16DEC
	0x03611C94 BL 0x1C16F30
	0x03611C98 ADRP X8, 0xB29000
	0x03611C9C LDR X8, [X8 + 0xEF0]
	0x03611CA0 LDR X1, [X8]
	0x03611CA4 BL 0x1C16DEC
	0x03611CA8 BL 0x1C16F20
	0x03611CAC BL 0x1C16F20
	0x03611CB0 BL 0x1C16F30
	0x03611CB4 ADRP X8, 0xB29000
	0x03611CB8 LDR X8, [X8 + 0xEF0]
	0x03611CBC LDR X1, [X8]
	0x03611CC0 BL 0x1C16DEC
	0x03611CC4 BL 0x3EB1B20
	0x03611CC8 B 0x3611CD0
	0x03611CCC B 0x3611CD0
	0x03611CD0 MOV X19, X0
	0x03611CD4 CMP W1, 0x1
	0x03611CD8 B.NE 0x3611EAC
	0x03611CDC MOV X0, X19
	0x03611CE0 BL 0x3EB1AD0
	0x03611CE4 MOV X19, X0
	0x03611CE8 ADRP X0, 0xAE2000
	0x03611CEC LDR X0, [X0 + 0x858]
	0x03611CF0 BL 0x1C16D08
	0x03611CF4 LDR X8, [X19]
	0x03611CF8 LDR X1, [X8]
	0x03611CFC BL 0x1C17270
	0x03611D00 TBNZ X0, 0x0, 0x3611E30
	0x03611D04 MOVZ W0, 0x8
	0x03611D08 BL 0x3EB1AF0
	0x03611D0C LDR X8, [X19]
	0x03611D10 STR X8, [X0]
	0x03611D14 ADRP X1, 0x8A3000
	0x03611D18 ADD X1, X1, 0xE58
	0x03611D1C MOV X2, X31
	0x03611D20 BL 0x3EB1B00
	0x03611D24 B 0x3611EA4
	0x03611D28 MOV X19, X0
	0x03611D2C BL 0x3EB1AE0
	0x03611D30 B 0x3611EAC
	0x03611D34 CMP W1, 0x1
	0x03611D38 MOV X19, X0
	0x03611D3C B.NE 0x3611EAC
	0x03611D40 MOV X0, X19
	0x03611D44 BL 0x3EB1AD0
	0x03611D48 MOV X19, X0
	0x03611D4C ADRP X0, 0xAE2000
	0x03611D50 LDR X0, [X0 + 0x858]
	0x03611D54 BL 0x1C16D08
	0x03611D58 LDR X8, [X19]
	0x03611D5C LDR X1, [X8]
	0x03611D60 BL 0x1C17270
	0x03611D64 TBNZ X0, 0x0, 0x3611E30
	0x03611D68 MOVZ W0, 0x8
	0x03611D6C BL 0x3EB1AF0
	0x03611D70 LDR X8, [X19]
	0x03611D74 STR X8, [X0]
	0x03611D78 ADRP X1, 0x8A3000
	0x03611D7C ADD X1, X1, 0xE58
	0x03611D80 MOV X2, X31
	0x03611D84 BL 0x3EB1B00
	0x03611D88 B 0x3611EA4
	0x03611D8C MOV X19, X0
	0x03611D90 BL 0x3EB1AE0
	0x03611D94 B 0x3611EAC
	0x03611D98 CMP W1, 0x1
	0x03611D9C MOV X19, X0
	0x03611DA0 B.NE 0x3611EAC
	0x03611DA4 MOV X0, X19
	0x03611DA8 BL 0x3EB1AD0
	0x03611DAC MOV X19, X0
	0x03611DB0 ADRP X0, 0xAE2000
	0x03611DB4 LDR X0, [X0 + 0x858]
	0x03611DB8 BL 0x1C16D08
	0x03611DBC LDR X8, [X19]
	0x03611DC0 LDR X1, [X8]
	0x03611DC4 BL 0x1C17270
	0x03611DC8 TBNZ X0, 0x0, 0x3611E30
	0x03611DCC MOVZ W0, 0x8
	0x03611DD0 BL 0x3EB1AF0
	0x03611DD4 LDR X8, [X19]
	0x03611DD8 STR X8, [X0]
	0x03611DDC ADRP X1, 0x8A3000
	0x03611DE0 ADD X1, X1, 0xE58
	0x03611DE4 MOV X2, X31
	0x03611DE8 BL 0x3EB1B00
	0x03611DEC B 0x3611EA4
	0x03611DF0 MOV X19, X0
	0x03611DF4 BL 0x3EB1AE0
	0x03611DF8 B 0x3611EAC
	0x03611DFC CMP W1, 0x1
	0x03611E00 MOV X19, X0
	0x03611E04 B.NE 0x3611EAC
	0x03611E08 MOV X0, X19
	0x03611E0C BL 0x3EB1AD0
	0x03611E10 MOV X19, X0
	0x03611E14 ADRP X0, 0xAE2000
	0x03611E18 LDR X0, [X0 + 0x858]
	0x03611E1C BL 0x1C16D08
	0x03611E20 LDR X8, [X19]
	0x03611E24 LDR X1, [X8]
	0x03611E28 BL 0x1C17270
	0x03611E2C TBZ X0, 0x0, 0x3611E84
	0x03611E30 LDR X19, [X19]
	0x03611E34 BL 0x3EB1AE0
	0x03611E38 ADRP X0, 0xB0F000
	0x03611E3C LDR X0, [X0 + 0xC08]
	0x03611E40 BL 0x1C16D08
	0x03611E44 BL 0x1C16F10
	0x03611E48 MOV X20, X0
	0x03611E4C ADRP X0, 0xB29000
	0x03611E50 LDR X0, [X0 + 0xF00]
	0x03611E54 BL 0x1C16D08
	0x03611E58 MOV X1, X0
	0x03611E5C MOV X0, X20
	0x03611E60 MOV X2, X19
	0x03611E64 MOV X3, X31
	0x03611E68 BL 0x33674C4
	0x03611E6C ADRP X0, 0xB29000
	0x03611E70 LDR X0, [X0 + 0xEF0]
	0x03611E74 BL 0x1C16D08
	0x03611E78 MOV X1, X0
	0x03611E7C MOV X0, X20
	0x03611E80 BL 0x1C16DEC
	0x03611E84 MOVZ W0, 0x8
	0x03611E88 BL 0x3EB1AF0
	0x03611E8C LDR X8, [X19]
	0x03611E90 STR X8, [X0]
	0x03611E94 ADRP X1, 0x8A3000
	0x03611E98 ADD X1, X1, 0xE58
	0x03611E9C MOV X2, X31
	0x03611EA0 BL 0x3EB1B00
	0x03611EA4 MOV X19, X0
	0x03611EA8 BL 0x3EB1AE0
	0x03611EAC MOV X0, X19
	0x03611EB0 BL 0x1D2C690
	0x03611EB4 BL 0x1990590
	0x03611EB8 SUB X31, X31, 0x70
	0x03611EBC STP X30, X27, [X31 + 0x20]
	0x03611EC0 STP X26, X25, [X31 + 0x30]
	0x03611EC4 STP X24, X23, [X31 + 0x40]
	0x03611EC8 STP X22, X21, [X31 + 0x50]
	0x03611ECC STP X20, X19, [X31 + 0x60]
	0x03611ED0 ADRP X26, 0xDCF000
	0x03611ED4 LDRB W8, [X26 + 0x439]
	0x03611ED8 MOV X25, X7
	0x03611EDC MOV X19, X6
	0x03611EE0 MOV X21, X5
	0x03611EE4 MOV X22, X4
	0x03611EE8 MOV W23, W2
	0x03611EEC MOV W24, W1
	0x03611EF0 MOV X20, X0
	0x03611EF4 AND W27, W3, 0x1
	0x03611EF8 TBNZ X8, 0x0, 0x3611F10
	0x03611EFC ADRP X0, 0xB29000
	0x03611F00 LDR X0, [X0 + 0xF08]
	0x03611F04 BL 0x1C16CF4
	0x03611F08 MOVZ W8, 0x1
	0x03611F0C STRB W8, [X26 + 0x439]
	0x03611F10 ADRP X26, 0xB29000
	0x03611F14 LDR W8, [X31 + 0x70]
	0x03611F18 LDR X26, [X26 + 0xF08]
	0x03611F1C STR W31, [X31 + 0x4]
	0x03611F20 CBZ X25, 0x3611F34
	0x03611F24 LDR W9, [X25 + 0x18]
	0x03611F28 CBZ W9, 0x3611F34
	0x03611F2C ADD X9, X25, 0x20
	0x03611F30 B 0x3611F38
	0x03611F34 MOV X9, X31
	0x03611F38 LDR X0, [X26]
	0x03611F3C ADD X8, X9, W8, 0x1, SXTW
	0x03611F40 STP X31, X31, [X31 + 0x8]
	0x03611F44 STR X8, [X31 + 0x18]
	0x03611F48 STP W24, W23, [X31 + 0x8]
	0x03611F4C STRB W27, [X31 + 0x10]
	0x03611F50 LDR W8, [X0 + 0xE0]
	0x03611F54 CBNZ W8, 0x3611F5C
	0x03611F58 BL 0x1C16DFC
	0x03611F5C ADD X2, X31, 0x4
	0x03611F60 MOV X0, X22
	0x03611F64 MOV X1, X21
	0x03611F68 BL 0x3611FF8
	0x03611F6C ANDS W31, W0, 0xFFFF
	0x03611F70 B.EQ 0x3611FAC
	0x03611F74 MOV W23, W0
	0x03611F78 LDR X0, [X26]
	0x03611F7C LDR W21, [X31 + 0x4]
	0x03611F80 LDR W8, [X0 + 0xE0]
	0x03611F84 CBNZ W8, 0x3611F8C
	0x03611F88 BL 0x1C16DFC
	0x03611F8C ADD X1, X31, 0x8
	0x03611F90 MOV X0, X20
	0x03611F94 MOV W2, W23
	0x03611F98 MOV W3, W21
	0x03611F9C MOV X4, X19
	0x03611FA0 MOV W5, W31
	0x03611FA4 BL 0x361213C
	0x03611FA8 B 0x3611FD4
	0x03611FAC LDR X0, [X26]
	0x03611FB0 LDR W8, [X0 + 0xE0]
	0x03611FB4 CBNZ W8, 0x3611FBC
	0x03611FB8 BL 0x1C16DFC
	0x03611FBC ADD X1, X31, 0x8
	0x03611FC0 MOV X0, X20
	0x03611FC4 MOV X2, X22
	0x03611FC8 MOV X3, X21
	0x03611FCC MOV X4, X19
	0x03611FD0 BL 0x3612694
	0x03611FD4 LDP X20, X19, [X31 + 0x60]
	0x03611FD8 LDP X22, X21, [X31 + 0x50]
	0x03611FDC LDP X24, X23, [X31 + 0x40]
	0x03611FE0 LDP X26, X25, [X31 + 0x30]
	0x03611FE4 LDP X30, X27, [X31 + 0x20]
	0x03611FE8 ADD X31, X31, 0x70
	0x03611FEC RET
	0x03611FF0 EOR W0, W1, W0, 0x19
	0x03611FF4 RET
	0x03611FF8 STR X30, [X31 - 0x30]!
	0x03611FFC STP X22, X21, [X31 + 0x10]
	0x03612000 STP X20, X19, [X31 + 0x20]
	0x03612004 ADRP X22, 0xDCE000
	0x03612008 LDRB W8, [X22 + 0x43A]
	0x0361200C MOV X19, X2
	0x03612010 MOV X20, X1
	0x03612014 MOV X21, X0
	0x03612018 TBNZ X8, 0x0, 0x3612030
	0x0361201C ADRP X0, 0xB10000
	0x03612020 LDR X0, [X0 + 0x28]
	0x03612024 BL 0x1C16CF4
	0x03612028 MOVZ W8, 0x1
	0x0361202C STRB W8, [X22 + 0x43A]
	0x03612030 CMP W20, 0x1
	0x03612034 B.LT 0x3612090
	0x03612038 LDRH W0, [X21]
	0x0361203C AND W8, W0, 0xFFFFFFDF
	0x03612040 SUB W8, W8, 0x41
	0x03612044 CMP W8, 0x19
	0x03612048 B.HI 0x3612108
	0x0361204C CMP W20, 0x1
	0x03612050 B.EQ 0x361209C
	0x03612054 CMP W20, 0x2
	0x03612058 B.EQ 0x36120A4
	0x0361205C CMP W20, 0x3
	0x03612060 B.NE 0x36120B4
	0x03612064 LDRH W8, [X21 + 0x2]
	0x03612068 SUB W8, W8, 0x30
	0x0361206C CMP W8, 0x9
	0x03612070 B.HI 0x36120B4
	0x03612074 LDRH W9, [X21 + 0x4]
	0x03612078 SUB W9, W9, 0x30
	0x0361207C CMP W9, 0x9
	0x03612080 B.HI 0x36120B4
	0x03612084 MOVZ W10, 0xA
	0x03612088 MADD W8, W8, W10, W9
	0x0361208C B 0x3612124
	0x03612090 MOVN W8, 0x0
	0x03612094 STR W8, [X19]
	0x03612098 B 0x361211C
	0x0361209C MOVN W8, 0x0
	0x036120A0 B 0x3612124
	0x036120A4 LDRH W8, [X21 + 0x2]
	0x036120A8 SUB W8, W8, 0x30
	0x036120AC CMP W8, 0x9
	0x036120B0 B.LS 0x3612124
	0x036120B4 MOV W8, W31
	0x036120B8 MOVZ W10, 0x1
	0x036120BC MOVZ W9, 0xA
	0x036120C0 CMP W8, 0x9
	0x036120C4 SXTW X11, W10
	0x036120C8 B.GT 0x36120F0
	0x036120CC LDRH W10, [X21, W10, SXTW]
	0x036120D0 SUB W12, W10, 0x30
	0x036120D4 CMP W12, 0xA
	0x036120D8 B.CS 0x36120F0
	0x036120DC ADD W10, W11, 0x1
	0x036120E0 CMP W20, W10
	0x036120E4 MADD W8, W8, W9, W12
	0x036120E8 B.NE 0x36120C0
	0x036120EC B 0x3612124
	0x036120F0 CMP W20, W11
	0x036120F4 B.EQ 0x3612124
	0x036120F8 CMP W11, W20
	0x036120FC B.CS 0x3612138
	0x03612100 LDRH W9, [X21, X11, LSL #1]
	0x03612104 CBZ W9, 0x3612124
	0x03612108 MOVN W8, 0x0
	0x0361210C STR W8, [X19]
	0x03612110 CBZ W0, 0x361211C
	0x03612114 MOV W0, W31
	0x03612118 B 0x3612128
	0x0361211C MOVZ W0, 0x47
	0x03612120 B 0x3612128
	0x03612124 STR W8, [X19]
	0x03612128 LDP X20, X19, [X31 + 0x20]
	0x0361212C LDP X22, X21, [X31 + 0x10]
	0x03612130 LDR X30, [X31], #0x30
	0x03612134 RET
	0x03612138 BL 0x1C16F28
	0x0361213C SUB X31, X31, 0x60
	0x03612140 STP X30, X27, [X31 + 0x10]
	0x03612144 STP X26, X25, [X31 + 0x20]
	0x03612148 STP X24, X23, [X31 + 0x30]
	0x0361214C STP X22, X21, [X31 + 0x40]

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Add X29, X31, 0
	014 Subtract X31, X31, 112
	015 Move [X29-104], X6
	016 Move [X29-96], X7
	017 Move [X29-68], W3
	018 Move [X29-84], W0
	019 NotImplemented "Instruction MRS not yet implemented."
	020 Move X8, [X21+40]
	021 Move X20, 0xDD0000
	022 Move X19, 0xB24000
	023 Move W22, W4
	024 Move [X29-8], X8
	025 Move [X29-24], X1
	026 Move [X29-16], X2
	027 Move W8, [X20+1079]
	028 Move X19, [X19+2368]
	029 Move TEMP, X8
	030 And TEMP, TEMP, 1
	031 Compare TEMP, 1
	032 JumpIfEqual {65}
	033 Move X0, 0xB0E000
	034 Move X0, [X0+3408]
	035 Call 0x1C17CF4
	036 Move X0, 0xB0E000
	037 Move X0, [X0+3432]
	038 Call 0x1C17CF4
	039 Move X0, 0xB24000
	040 Move X0, [X0+2368]
	041 Call 0x1C17CF4
	042 Move X0, 0xB0E000
	043 Move X0, [X0+752]
	044 Call 0x1C17CF4
	045 Move X0, 0xB12000
	046 Move X0, [X0+1256]
	047 Call 0x1C17CF4
	048 Move X0, 0xB11000
	049 Move X0, [X0+2104]
	050 Call 0x1C17CF4
	051 Move X0, 0xB12000
	052 Move X0, [X0+2344]
	053 Call 0x1C17CF4
	054 Move X0, 0xB12000
	055 Move X0, [X0+760]
	056 Call 0x1C17CF4
	057 Move X0, 0xB17000
	058 Move X0, [X0+4080]
	059 Call 0x1C17CF4
	060 Move X0, 0xB2A000
	061 Move X0, [X0+3808]
	062 Call 0x1C17CF4
	063 Move W8, 1
	064 Move [X20+1079], W8
	065 Add X8, X31, 0
	066 NotImplemented "Instruction MOVI not yet implemented."
	067 Subtract X25, X8, 64
	068 Move [X29-28], W31
	069 Move [X29-64], V0
	070 Move [X29-56], V0
	071 Add X31, X25, 0
	072 Move X0, [X19]
	073 Move [X8-32], V0
	074 Move [X8-24], V0
	075 Move [X8-64], V0
	076 Move [X8-56], V0
	077 Move W8, [X0+224]
	078 Compare W8, 0
	079 JumpIfNotEqual {81}
	080 Call 0x1C17DFC
	081 Move X23, 0xB0E000
	082 Move X20, 0xB0E000
	083 Move X23, [X23+3432]
	084 Move X20, [X20+3408]
	085 Subtract X0, X29, 24
	086 Subtract X3, X29, 28
	087 Move W2, 64
	088 Move X1, X25
	089 Move W4, W31
	090 Move W5, W31
	091 Move W26, 64
	092 Call BigInteger.TryWriteOrCountBytes, X0, X1, X2, X3, X4
	093 Move [X29-80], X21
	094 Move TEMP, X0
	095 And TEMP, TEMP, 1
	096 Compare TEMP, 1
	097 JumpIfNotEqual {99}
	098 Move X24, X31
	099 Move X0, [X23]
	100 Move W8, [X0+224]
	101 Compare W8, 0
	102 JumpIfNotEqual {104}
	103 Call 0x1C17DFC
	104 Move X20, [X20]
	105 Move X0, [X20+32]
	106 Move W8, [X0+309]
	107 Move TEMP, X8
	108 And TEMP, TEMP, 1
	109 Compare TEMP, 1
	110 JumpIfEqual {112}
	111 Call 0x1C5D684
	112 Move X8, [X0+192]
	113 Move X0, [X8+8]
	114 Move W8, [X0+309]
	115 Move TEMP, X8
	116 And TEMP, TEMP, 1
	117 Compare TEMP, 1
	118 JumpIfEqual {120}
	119 Call 0x1C5D684
	120 Move W8, [X0+224]
	121 Compare W8, 0
	122 JumpIfNotEqual {124}
	123 Call 0x1C17DFC
	124 Move X0, [X20+32]
	125 Move W8, [X0+309]
	126 Move TEMP, X8
	127 And TEMP, TEMP, 1
	128 Compare TEMP, 1
	129 JumpIfEqual {131}
	130 Call 0x1C5D684
	131 Move X8, [X0+192]
	132 Move X0, [X8+8]
	133 Move W8, [X0+309]
	134 Move TEMP, X8
	135 And TEMP, TEMP, 1
	136 Compare TEMP, 1
	137 JumpIfEqual {139}
	138 Call 0x1C5D684
	139 Move X8, [X0+184]
	140 Move X0, [X8]
	141 Compare X0, 0
	142 JumpIfEqual {417}
	143 Move X8, [X0]
	144 NotImplemented "Instruction LDUR not yet implemented."
	145 Move X9, [X8+376]
	146 Move X2, [X8+384]
	147 NotImplemented "Instruction BLR not yet implemented."
	148 Move X8, 0xB12000
	149 Move X8, [X8+760]
	150 Move X24, X0
	151 Move X1, [X8]
	152 Call 0x25FC4C0, X0
	153 Move X25, X0
	154 Move X0, [X19]
	155 Move X26, X1
	156 Move W8, [X0+224]
	157 Compare W8, 0
	158 JumpIfNotEqual {160}
	159 Call 0x1C17DFC
	160 Subtract X0, X29, 24
	161 Subtract X3, X29, 28
	162 Move X1, X25
	163 Move X2, X26
	164 Move W4, W31
	165 Move W5, W31
	166 Call BigInteger.TryWriteBytes, X0, X1, X2, X3, X4
	167 Move [X29-72], W22
	168 Move X8, 0xB0E000
	169 NotImplemented "Instruction LDUR not yet implemented."
	170 Move X8, [X8+752]
	171 NotImplemented "Instruction CMP not yet implemented."
	172 Move X20, [X8]
	173 Move X0, X31
	174 Call ThrowHelper.ThrowArgumentOutOfRangeException
	175 Move X0, [X20+32]
	176 Move W8, [X0+309]
	177 Move TEMP, X8
	178 And TEMP, TEMP, 1
	179 Compare TEMP, 1
	180 JumpIfEqual {182}
	181 Call 0x1C5D684
	182 Subtract X26, X31, 256
	183 Add X31, X26, 0
	184 Move W2, 256
	185 Move X0, X26
	186 Move W1, W31
	187 Call 0x3EB2B10
	188 Move W8, 128
	189 Subtract W20, W19, 1
	190 Move [X29-64], X31
	191 Move [X29-56], X26
	192 Move [X29-48], X8
	193 Move [X29-40], W31
	194 Move W8, [X25]
	195 Add W9, W8, 16
	196 NotImplemented "Instruction CMP not yet implemented."
	197 NotImplemented "Instruction CSEL not yet implemented."
	198 NotImplemented "Instruction CMP not yet implemented."
	199 And W8, W9, 255
	200 NotImplemented "Instruction CMP not yet implemented."
	201 NotImplemented "Instruction CMP not yet implemented."
	202 Add W26, W8, 48
	203 NotImplemented "Instruction LDUR not yet implemented."
	204 And W8, W8, 15
	205 And W9, W9, 0xFFFF
	206 NotImplemented "Instruction CMP not yet implemented."
	207 Add W26, W8, 55
	208 Add W26, W8, 87
	209 Move X20, 0xDD0000
	210 Move W8, [X20+1107]
	211 Compare W8, 0
	212 JumpIfNotEqual {218}
	213 Move X0, 0xB12000
	214 Move X0, [X0+1416]
	215 Call 0x1C17CF4
	216 Move W8, 1
	217 Move [X20+1107], W8
	218 NotImplemented "Instruction LDURSW not yet implemented."
	219 NotImplemented "Instruction LDUR not yet implemented."
	220 NotImplemented "Instruction CMP not yet implemented."
	221 NotImplemented "Instruction CMP not yet implemented."
	222 NotImplemented "Instruction LDUR not yet implemented."
	223 Add W10, W8, 1
	224 NotImplemented "Instruction STRH not yet implemented."
	225 Move [X29-40], W10
	226 Subtract X0, X29, 64
	227 Move W1, W26
	228 Call ValueStringBuilder.GrowAndAppend, X0, X1
	229 Subtract W20, W19, 2
	230 Move X21, 0xDD0000
	231 Move W8, [X21+1108]
	232 Move W9, W20
	233 ShiftRight W9, 31
	234 And W9, W9, 0x3FFFFFFF
	235 Add W26, W9, 2
	236 Compare W8, 0
	237 JumpIfNotEqual {246}
	238 Move X0, 0xB11000
	239 Move X0, [X0+2128]
	240 Call 0x1C17CF4
	241 Move X0, 0xB12000
	242 Move X0, [X0+1416]
	243 Call 0x1C17CF4
	244 Move W8, 1
	245 Move [X21+1108], W8
	246 NotImplemented "Instruction LDUR not yet implemented."
	247 NotImplemented "Instruction LDURSW not yet implemented."
	248 Subtract W9, W8, W26
	249 NotImplemented "Instruction CMP not yet implemented."
	250 Subtract X0, X29, 64
	251 Move W1, W26
	252 Call ValueStringBuilder.Grow, X0, X1
	253 NotImplemented "Instruction LDUR not yet implemented."
	254 Move X9, 0xB11000
	255 Move X9, [X9+2128]
	256 Subtract W8, W8, W21
	257 Move X23, [X9]
	258 Add W9, W21, W26
	259 Move [X29-40], W9
	260 NotImplemented "Instruction CMP not yet implemented."
	261 Move X0, X31
	262 Call ThrowHelper.ThrowArgumentOutOfRangeException
	263 Move X0, [X23+32]
	264 Move X27, 0xB2A000
	265 Move X28, 0xB17000
	266 NotImplemented "Instruction LDUR not yet implemented."
	267 Move W8, [X0+309]
	268 Move X27, [X27+3808]
	269 Move X28, [X28+4080]
	270 Move TEMP, X8
	271 And TEMP, TEMP, 1
	272 Compare TEMP, 1
	273 JumpIfEqual {275}
	274 Call 0x1C5D684
	275 NotImplemented "Instruction LDUR not yet implemented."
	276 Move W23, W31
	277 Add X21, X22, X21
	278 Move W20, W20
	279 And W8, W8, 0xFFFF
	280 NotImplemented "Instruction CMP not yet implemented."
	281 NotImplemented "Instruction CSEL not yet implemented."
	282 Move X27, [X8]
	283 NotImplemented "Instruction CMP not yet implemented."
	284 NotImplemented "Instruction CMP not yet implemented."
	285 Compare X27, 0
	286 JumpIfEqual {417}
	287 Move W22, [X25]
	288 Move X0, X27
	289 Move X2, X31
	290 Move W1, W22
	291 ShiftRight W1, 4
	292 And W1, W1, 0x7FFFFFFF
	293 Call String.get_Chars, X0, X1
	294 Add W28, W23, 1
	295 NotImplemented "Instruction CMP not yet implemented."
	296 NotImplemented "Instruction STRH not yet implemented."
	297 And W1, W22, 15
	298 Move X0, X27
	299 Move X2, X31
	300 Add W23, W23, 1
	301 Call String.get_Chars, X0, X1
	302 NotImplemented "Instruction STRH not yet implemented."
	303 NotImplemented "Instruction CMP not yet implemented."
	304 Subtract X20, X20, 1
	305 Add W23, W28, 1
	306 NotImplemented "Instruction LDUR not yet implemented."
	307 NotImplemented "Instruction LDUR not yet implemented."
	308 NotImplemented "Instruction CMP not yet implemented."
	309 NotImplemented "Instruction LDUR not yet implemented."
	310 NotImplemented "Instruction LDUR not yet implemented."
	311 Move W11, 70
	312 Move W12, 102
	313 And W10, W10, 0xFFFF
	314 NotImplemented "Instruction CMP not yet implemented."
	315 Move W13, 48
	316 NotImplemented "Instruction CSEL not yet implemented."
	317 NotImplemented "Instruction CMP not yet implemented."
	318 NotImplemented "Instruction CSEL not yet implemented."
	319 Subtract W3, W14, W8
	320 Subtract X0, X29, 64
	321 Move W1, W31
	322 Call ValueStringBuilder.Insert, X0, X1, X2, X3
	323 Compare X24, 0
	324 JumpIfEqual {379}
	325 Move X8, 0xB0D000
	326 Move X8, [X8+3432]
	327 Move X0, [X8]
	328 Move W8, [X0+224]
	329 Compare W8, 0
	330 JumpIfNotEqual {332}
	331 Call 0x1C17DFC
	332 Move X8, 0xB0D000
	333 Move X8, [X8+3408]
	334 Move X19, [X8]
	335 Move X0, [X19+32]
	336 Move W8, [X0+309]
	337 Move TEMP, X8
	338 And TEMP, TEMP, 1
	339 Compare TEMP, 1
	340 JumpIfEqual {342}
	341 Call 0x1C5D684
	342 Move X8, [X0+192]
	343 Move X0, [X8+8]
	344 Move W8, [X0+309]
	345 Move TEMP, X8
	346 And TEMP, TEMP, 1
	347 Compare TEMP, 1
	348 JumpIfEqual {350}
	349 Call 0x1C5D684
	350 Move W8, [X0+224]
	351 Compare W8, 0
	352 JumpIfNotEqual {354}
	353 Call 0x1C17DFC
	354 Move X0, [X19+32]
	355 Move W8, [X0+309]
	356 Move TEMP, X8
	357 And TEMP, TEMP, 1
	358 Compare TEMP, 1
	359 JumpIfEqual {361}
	360 Call 0x1C5D684
	361 Move X8, [X0+192]
	362 Move X0, [X8+8]
	363 Move W8, [X0+309]
	364 Move TEMP, X8
	365 And TEMP, TEMP, 1
	366 Compare TEMP, 1
	367 JumpIfEqual {369}
	368 Call 0x1C5D684
	369 Move X8, [X0+184]
	370 Move X0, [X8]
	371 Compare X0, 0
	372 JumpIfEqual {417}
	373 Move X8, [X0]
	374 Move X1, X24
	375 Move W2, W31
	376 Move X9, [X8+392]
	377 Move X3, [X8+400]
	378 NotImplemented "Instruction BLR not yet implemented."
	379 Move X3, [X29+96]
	380 Move X19, [X29+104]
	381 NotImplemented "Instruction LDUR not yet implemented."
	382 Move TEMP, X8
	383 And TEMP, TEMP, 1
	384 Compare TEMP, 1
	385 JumpIfNotEqual {394}
	386 Move X1, [X29-104]
	387 Move X2, [X29-96]
	388 Subtract X0, X29, 64
	389 Call ValueStringBuilder.TryCopyTo, X0, X1, X2
	390 Move W8, W0
	391 And W8, W8, 1
	392 Move X0, X31
	393 Move [X19], W8
	394 Subtract X0, X29, 64
	395 Move [X3], W31
	396 Move [X19], W31
	397 Call ValueStringBuilder.ToString, X0
	398 NotImplemented "Instruction LDUR not yet implemented."
	399 Move X8, [X8+40]
	400 NotImplemented "Instruction LDUR not yet implemented."
	401 NotImplemented "Instruction CMP not yet implemented."
	402 Add X31, X29, 0
	403 Move X20, [X31+80]
	404 Move X19, [X31+88]
	405 Move X22, [X31+64]
	406 Move X21, [X31+72]
	407 Move X24, [X31+48]
	408 Move X23, [X31+56]
	409 Move X26, [X31+32]
	410 Move X25, [X31+40]
	411 Move X28, [X31+16]
	412 Move X27, [X31+24]
	413 Move X29, [X31+96]
	414 Move X30, [X31+104]
	415 Return X0
	416 Call 0x1C17F28
	417 Call 0x1C17F20
	418 Call 0x3EB2B20

Method: System.String FormatBigInteger(System.Numerics.BigInteger value, System.String format, System.Globalization.NumberFormatInfo info)

Disassembly:
	0x0360E4AC EOR W23, W20, W21, 0x0
	0x0360E4B0 LDR W8, [X0 + 0xE0]
	0x0360E4B4 CBZ W8, 0x360E4E0
	0x0360E4B8 TBNZ X23, 0x1F, 0x360E4E8
	0x0360E4BC MOV X0, X22
	0x0360E4C0 MOV W1, W21
	0x0360E4C4 MOV X2, X19
	0x0360E4C8 MOV W3, W20
	0x0360E4CC LDP X20, X19, [X31 + 0x30]
	0x0360E4D0 LDP X22, X21, [X31 + 0x20]
	0x0360E4D4 LDP X24, X23, [X31 + 0x10]
	0x0360E4D8 LDR X30, [X31], #0x40
	0x0360E4DC B 0x360D590
	0x0360E4E0 BL 0x1C16DFC
	0x0360E4E4 TBZ X23, 0x1F, 0x360E4BC
	0x0360E4E8 SUB W3, W31, W20
	0x0360E4EC MOV X0, X22
	0x0360E4F0 MOV W1, W21
	0x0360E4F4 MOV X2, X19
	0x0360E4F8 LDP X20, X19, [X31 + 0x30]
	0x0360E4FC LDP X22, X21, [X31 + 0x20]
	0x0360E500 LDP X24, X23, [X31 + 0x10]
	0x0360E504 LDR X30, [X31], #0x40
	0x0360E508 B 0x360D94C
	0x0360E50C SUB X31, X31, 0x40
	0x0360E510 STP X1, X30, [X31 + 0x8]
	0x0360E514 STP X22, X21, [X31 + 0x20]
	0x0360E518 STP X20, X19, [X31 + 0x30]
	0x0360E51C ADRP X22, 0xDD2000
	0x0360E520 STR X0, [X31]
	0x0360E524 ADRP X21, 0xB26000
	0x0360E528 LDRB W8, [X22 + 0x40E]
	0x0360E52C LDR X21, [X21 + 0x940]
	0x0360E530 MOV X19, X3
	0x0360E534 MOV X20, X2
	0x0360E538 TBNZ X8, 0x0, 0x360E550
	0x0360E53C ADRP X0, 0xB26000
	0x0360E540 LDR X0, [X0 + 0x940]
	0x0360E544 BL 0x1C16CF4
	0x0360E548 MOVZ W8, 0x1
	0x0360E54C STRB W8, [X22 + 0x40E]
	0x0360E550 LDR X0, [X21]
	0x0360E554 LDR W8, [X0 + 0xE0]

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+48], X30
	003 Move [X31+56], X23
	004 Move [X31+64], X22
	005 Move [X31+72], X21
	006 Move [X31+80], X20
	007 Move [X31+88], X19
	008 Move X23, 0xDCC000
	009 Move W8, [X23+1890]
	010 Move X19, X3
	011 Move X20, X2
	012 Move X21, X1
	013 Move X22, X0
	014 Move [X31+44], W31
	015 Move [X31+40], W31
	016 Compare W8, 0
	017 JumpIfEqual {25}
	018 Compare X20, 0
	019 JumpIfEqual {32}
	020 Move X0, X20
	021 Move X1, X31
	022 Call String.GetRawStringData, X0
	023 Move W5, [X20+16]
	024 Move X4, X0
	025 Move X0, 0xB0D000
	026 Move X0, [X0+656]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X23+1890], W8
	030 Compare X20, 0
	031 JumpIfNotEqual {20}
	032 Move X4, X31
	033 Move X5, X31
	034 Add X8, X31, 40
	035 Add X9, X31, 44
	036 Move W0, W31
	037 Move X1, X22
	038 Move X2, X21
	039 Move X3, X20
	040 Move X6, X19
	041 Move [X31], X31
	042 Move [X31+8], X31
	043 Move [X31+16], X9
	044 Move [X31+24], X8
	045 Call BigNumber.FormatBigInteger, X0, X1, X2, X3, X4, X5, X6, X7
	046 Move X20, [X31+80]
	047 Move X19, [X31+88]
	048 Move X22, [X31+64]
	049 Move X21, [X31+72]
	050 Move X30, [X31+48]
	051 Move X23, [X31+56]
	052 Add X31, X31, 96
	053 Return X0

Method: System.String FormatBigInteger(System.Boolean targetSpan, System.Numerics.BigInteger value, System.String formatString, System.ReadOnlySpan`1<System.Char> formatSpan, System.Globalization.NumberFormatInfo info, System.Span`1<System.Char> destination, out System.Int32 charsWritten, out System.Boolean spanSuccess)

Disassembly:
	0x036124D8 LDP X30, X27, [X31 + 0x10]
	0x036124DC ADD X31, X31, 0x60
	0x036124E0 B 0x361420C
	0x036124E4 MOV X0, X21
	0x036124E8 MOV X1, X23
	0x036124EC BL 0x3615B50
	0x036124F0 B 0x36124F8
	0x036124F4 CBZ X19, 0x3612644
	0x036124F8 LDR X0, [X24]
	0x036124FC LDR X19, [X19 + 0x38]
	0x03612500 LDR W8, [X0 + 0xE0]
	0x03612504 CBNZ W8, 0x361250C
	0x03612508 BL 0x1C16DFC
	0x0361250C MOV X0, X21
	0x03612510 MOV X1, X20
	0x03612514 MOV W3, W22
	0x03612518 MOV X5, X31
	0x0361251C MOV X6, X19
	0x03612520 MOV X7, X31
	0x03612524 BL 0x3613AB8
	0x03612528 LDP X20, X19, [X31 + 0x50]
	0x0361252C LDP X22, X21, [X31 + 0x40]
	0x03612530 LDP X24, X23, [X31 + 0x30]
	0x03612534 LDP X26, X25, [X31 + 0x20]
	0x03612538 LDP X30, X27, [X31 + 0x10]
	0x0361253C ADD X31, X31, 0x60
	0x03612540 RET
	0x03612544 LDR W22, [X20]
	0x03612548 ADRP X8, 0xB28000
	0x0361254C LDR X8, [X8 + 0xF08]
	0x03612550 LDR X0, [X8]
	0x03612554 LDR W8, [X0 + 0xE0]
	0x03612558 CBNZ W8, 0x3612560
	0x0361255C BL 0x1C16DFC
	0x03612560 MOV X0, X20
	0x03612564 MOV W1, W22
	0x03612568 BL 0x3613788
	0x0361256C MOV W24, W31
	0x03612570 LDRB W8, [X20 + 0x8]
	0x03612574 CBZ W8, 0x36125F8
	0x03612578 CBZ X19, 0x3612644
	0x0361257C ADRP X26, 0xDCE000
	0x03612580 LDRB W8, [X26 + 0x455]
	0x03612584 LDR X25, [X19 + 0x30]
	0x03612588 CBNZ W8, 0x36125A0
	0x0361258C ADRP X0, 0xB10000
	0x03612590 LDR X0, [X0 + 0x588]
	0x03612594 BL 0x1C16CF4
	0x03612598 MOVZ W8, 0x1
	0x0361259C STRB W8, [X26 + 0x455]
	0x036125A0 CBZ X25, 0x3612644
	0x036125A4 LDR W8, [X25 + 0x10]
	0x036125A8 CMP W8, 0x1
	0x036125AC B.NE 0x36125EC
	0x036125B0 LDRSW X26, [X21 + 0x18]
	0x036125B4 LDR W8, [X21 + 0x10]
	0x036125B8 CMP W26, W8
	0x036125BC B.GE 0x36125EC
	0x036125C0 CMP W26, W8
	0x036125C4 B.CS 0x3612690
	0x036125C8 LDR X27, [X21 + 0x8]
	0x036125CC MOV X0, X25
	0x036125D0 MOV W1, W31
	0x036125D4 MOV X2, X31
	0x036125D8 BL 0x3222A1C
	0x036125DC ADD W8, W26, 0x1
	0x036125E0 STRH W0, [X27, X26, LSL #1]
	0x036125E4 STR W8, [X21 + 0x18]
	0x036125E8 B 0x36125F8
	0x036125EC MOV X0, X21
	0x036125F0 MOV X1, X25
	0x036125F4 BL 0x3615B50
	0x036125F8 ADRP X8, 0xB28000
	0x036125FC LDR X8, [X8 + 0xF08]
	0x03612600 LDR X0, [X8]
	0x03612604 LDR W8, [X0 + 0xE0]
	0x03612608 CBNZ W8, 0x3612610
	0x0361260C BL 0x1C16DFC
	0x03612610 SUB W5, W23, 0x2
	0x03612614 MOV X0, X21
	0x03612618 MOV X1, X20
	0x0361261C MOV W3, W22
	0x03612620 MOV X4, X19
	0x03612624 MOV W6, W24
	0x03612628 LDP X20, X19, [X31 + 0x50]
	0x0361262C LDP X22, X21, [X31 + 0x40]
	0x03612630 LDP X24, X23, [X31 + 0x30]
	0x03612634 LDP X26, X25, [X31 + 0x20]
	0x03612638 LDP X30, X27, [X31 + 0x10]
	0x0361263C ADD X31, X31, 0x60
	0x03612640 B 0x3614448
	0x03612644 BL 0x1C16F20
	0x03612648 ADRP X0, 0xB0E000
	0x0361264C LDR X0, [X0 + 0xC08]
	0x03612650 BL 0x1C16D08
	0x03612654 BL 0x1C16F10
	0x03612658 MOV X19, X0
	0x0361265C ADRP X0, 0xB16000
	0x03612660 LDR X0, [X0 + 0x570]
	0x03612664 BL 0x1C16D08
	0x03612668 MOV X1, X0
	0x0361266C MOV X0, X19
	0x03612670 MOV X2, X31
	0x03612674 BL 0x33674A0
	0x03612678 ADRP X0, 0xB28000
	0x0361267C LDR X0, [X0 + 0xF10]
	0x03612680 BL 0x1C16D08
	0x03612684 MOV X1, X0
	0x03612688 MOV X0, X19
	0x0361268C BL 0x1C16DEC
	0x03612690 BL 0x1C16F28
	0x03612694 STP X29, X30, [X31 - 0x60]!
	0x03612698 STP X28, X27, [X31 + 0x10]
	0x0361269C STP X26, X25, [X31 + 0x20]
	0x036126A0 STP X24, X23, [X31 + 0x30]
	0x036126A4 STP X22, X21, [X31 + 0x40]
	0x036126A8 STP X20, X19, [X31 + 0x50]
	0x036126AC ADD X29, X31, 0x0
	0x036126B0 SUB X31, X31, 0x90
	0x036126B4 STUR X2, [X29 - 0x28]
	0x036126B8 MRS X27, 0xC000
	0x036126BC LDR X8, [X27 + 0x28]
	0x036126C0 ADRP X19, 0xDCE000
	0x036126C4 MOV X21, X4
	0x036126C8 MOV X20, X3
	0x036126CC STUR X8, [X29 - 0x8]
	0x036126D0 LDRB W8, [X19 + 0x444]
	0x036126D4 MOV X23, X1
	0x036126D8 MOV X22, X0
	0x036126DC TBNZ X8, 0x0, 0x3612748
	0x036126E0 ADRP X0, 0xAE2000
	0x036126E4 LDR X0, [X0 + 0xE58]
	0x036126E8 BL 0x1C16CF4
	0x036126EC ADRP X0, 0xB10000
	0x036126F0 LDR X0, [X0 + 0x20]
	0x036126F4 BL 0x1C16CF4
	0x036126F8 ADRP X0, 0xB28000
	0x036126FC LDR X0, [X0 + 0xF08]
	0x03612700 BL 0x1C16CF4
	0x03612704 ADRP X0, 0xB10000
	0x03612708 LDR X0, [X0 + 0x28]
	0x0361270C BL 0x1C16CF4
	0x03612710 ADRP X0, 0xB15000
	0x03612714 LDR X0, [X0 + 0x8D0]
	0x03612718 BL 0x1C16CF4
	0x0361271C ADRP X0, 0xB10000
	0x03612720 LDR X0, [X0 + 0x160]
	0x03612724 BL 0x1C16CF4
	0x03612728 ADRP X0, 0xB15000
	0x0361272C LDR X0, [X0 + 0x8D8]
	0x03612730 BL 0x1C16CF4
	0x03612734 ADRP X0, 0xB15000
	0x03612738 LDR X0, [X0 + 0x8E0]
	0x0361273C BL 0x1C16CF4
	0x03612740 MOVZ W8, 0x1
	0x03612744 STRB W8, [X19 + 0x444]
	0x03612748 STP X31, X31, [X29 - 0x18]
	0x0361274C LDR X8, [X23 + 0x10]
	0x03612750 STUR X8, [X29 - 0x30]
	0x03612754 LDRH W8, [X8]
	0x03612758 CBZ W8, 0x3612764
	0x0361275C LDRB W24, [X23 + 0x8]
	0x03612760 B 0x3612768
	0x03612764 MOVZ W24, 0x2
	0x03612768 STUR X21, [X29 - 0x48]
	0x0361276C ADRP X8, 0xB28000
	0x03612770 LDR X8, [X8 + 0xF08]
	0x03612774 LDR X0, [X8]
	0x03612778 LDR W8, [X0 + 0xE0]
	0x0361277C CBNZ W8, 0x3612784
	0x03612780 BL 0x1C16DFC
	0x03612784 LDUR X0, [X29 - 0x28]
	0x03612788 MOV X1, X20
	0x0361278C MOV W2, W24
	0x03612790 BL 0x3614F48
	0x03612794 SXTW X25, W20
	0x03612798 STUR W31, [X29 - 0x3C]
	0x0361279C ADRP X8, 0xB10000
	0x036127A0 LDR X8, [X8 + 0x20]
	0x036127A4 MOV W21, W0
	0x036127A8 LDUR X0, [X29 - 0x28]
	0x036127AC MOV X1, X20
	0x036127B0 LDR X2, [X8]
	0x036127B4 BL 0x2218CF8
	0x036127B8 CMP W21, W20
	0x036127BC B.GE 0x36129B0
	0x036127C0 STUR W31, [X29 - 0x1C]
	0x036127C4 MOV W28, W31
	0x036127C8 MOV W19, W31
	0x036127CC STUR W31, [X29 - 0x38]
	0x036127D0 MOV W8, W31
	0x036127D4 MOVN W26, 0x80000000
	0x036127D8 MOVN W9, 0x0
	0x036127DC MOVN W10, 0x0
	0x036127E0 MOV W13, W21
	0x036127E4 LDRH W12, [X0, W13, SXTW]
	0x036127E8 CMP W12, 0x3B
	0x036127EC B.EQ 0x36129D0
	0x036127F0 CBZ W12, 0x36129D0
	0x036127F4 CMP W12, 0x45
	0x036127F8 ADD W11, W13, 0x1
	0x036127FC B.HI 0x361285C
	0x03612800 SUB W14, W12, 0x22
	0x03612804 CMP W14, 0xE
	0x03612808 B.HI 0x361289C
	0x0361280C ADRP X16, 0xFFFFFFFFFD585000
	0x03612810 ADD X16, X16, 0x300
	0x03612814 ADR X13, 0x10
	0x03612818 LDRB W15, [X16, X14, LSL]
	0x0361281C ADD X13, X13, X15, 0x2, LSL
	0x03612820 BR X13
	0x03612824 SXTW X13, W11
	0x03612828 CMP X25, W11, SXTW
	0x0361282C CSEL X14, X13, X25, LT
	0x03612830 ADD X11, X0, W11, 0x1, SXTW
	0x03612834 CMP X14, X13
	0x03612838 B.EQ 0x361298C
	0x0361283C LDRH W15, [X11]
	0x03612840 CBZ W15, 0x3612854
	0x03612844 ADD X13, X13, 0x1
	0x03612848 CMP W15, W12
	0x0361284C ADD X11, X11, 0x2
	0x03612850 B.NE 0x3612834
	0x03612854 MOV W11, W13
	0x03612858 B 0x36129A0
	0x0361285C CMP W12, 0x5C
	0x03612860 B.EQ 0x3612880
	0x03612864 CMP W12, 0x65
	0x03612868 B.EQ 0x36128A4
	0x0361286C MOVZ W13, 0x2030
	0x03612870 CMP W12, W13
	0x03612874 B.NE 0x36129A0
	0x03612878 ADD W8, W8, 0x3
	0x0361287C B 0x36129A0
	0x03612880 CMP W11, W20
	0x03612884 B.GE 0x36129A0
	0x03612888 LDRH W12, [X0, W11, SXTW]
	0x0361288C ADD W13, W13, 0x2
	0x03612890 CMP W12, 0x0
	0x03612894 CSEL W11, W11, W13, EQ
	0x03612898 B 0x36129A0
	0x0361289C CMP W12, 0x45
	0x036128A0 B.NE 0x36129A0
	0x036128A4 CMP W11, W20
	0x036128A8 B.GE 0x36128B8
	0x036128AC LDRH W12, [X0, W11, SXTW]
	0x036128B0 CMP W12, 0x30
	0x036128B4 B.EQ 0x36128E4
	0x036128B8 ADD W12, W13, 0x2
	0x036128BC CMP W12, W20
	0x036128C0 B.GE 0x36129A0
	0x036128C4 LDRH W13, [X0, W11, SXTW]
	0x036128C8 CMP W13, 0x2D
	0x036128CC B.EQ 0x36128D8
	0x036128D0 CMP W13, 0x2B
	0x036128D4 B.NE 0x36129A0
	0x036128D8 LDRH W12, [X0, W12, SXTW]
	0x036128DC CMP W12, 0x30
	0x036128E0 B.NE 0x36129A0
	0x036128E4 ADD W11, W11, 0x1
	0x036128E8 CMP W11, W20
	0x036128EC B.GE 0x36129CC
	0x036128F0 LDRH W12, [X0, W11, SXTW]
	0x036128F4 CMP W12, 0x30
	0x036128F8 B.EQ 0x36128E4
	0x036128FC MOVZ W19, 0x1
	0x03612900 B 0x36129A0
	0x03612904 MOVN W12, 0x80000000
	0x03612908 CMP W26, W12
	0x0361290C LDUR W12, [X29 - 0x1C]
	0x03612910 ADD W28, W12, 0x1
	0x03612914 CSEL W26, W12, W26, EQ
	0x03612918 STUR W28, [X29 - 0x1C]
	0x0361291C B 0x36129A0
	0x03612920 LDUR W12, [X29 - 0x1C]
	0x03612924 ADD W12, W12, 0x1
	0x03612928 STUR W12, [X29 - 0x1C]
	0x0361292C B 0x36129A0
	0x03612930 ADD W8, W8, 0x2
	0x03612934 B 0x36129A0
	0x03612938 TBZ X9, 0x1F, 0x36129A0
	0x0361293C LDUR W12, [X29 - 0x1C]
	0x03612940 CMP W12, 0x1
	0x03612944 B.LT 0x36129A0
	0x03612948 TBNZ X10, 0x1F, 0x3612994
	0x0361294C LDUR W12, [X29 - 0x1C]
	0x03612950 LDUR W13, [X29 - 0x38]
	0x03612954 CMP W10, W12
	0x03612958 CSET W10, NE
	0x0361295C ORR W13, W13, W10, 0x0
	0x03612960 LDUR W10, [X29 - 0x3C]
	0x03612964 STUR W13, [X29 - 0x38]
	0x03612968 MOVZ W13, 0x1
	0x0361296C CSINC W10, W13, W10, NE
	0x03612970 STUR W10, [X29 - 0x3C]
	0x03612974 MOV W10, W12
	0x03612978 B 0x36129A0
	0x0361297C LDUR W12, [X29 - 0x1C]
	0x03612980 CMP W9, 0x0
	0x03612984 CSEL W9, W9, W12, GE
	0x03612988 B 0x36129A0
	0x0361298C MOV W11, W14
	0x03612990 B 0x36129A0
	0x03612994 MOVZ W10, 0x1
	0x03612998 STUR W10, [X29 - 0x3C]
	0x0361299C LDUR W10, [X29 - 0x1C]
	0x036129A0 CMP W11, W20
	0x036129A4 MOV W13, W11
	0x036129A8 B.LT 0x36127E4
	0x036129AC B 0x36129D0
	0x036129B0 STUR X31, [X29 - 0x38]
	0x036129B4 MOV W19, W31
	0x036129B8 MOV W28, W31
	0x036129BC STUR W31, [X29 - 0x1C]
	0x036129C0 MOV W8, W31
	0x036129C4 MOVN W26, 0x80000000
	0x036129C8 B 0x3612A04
	0x036129CC MOVZ W19, 0x1
	0x036129D0 LDUR W11, [X29 - 0x1C]
	0x036129D4 CMP W9, 0x0
	0x036129D8 CSEL W9, W9, W11, GE
	0x036129DC STUR W9, [X29 - 0x34]
	0x036129E0 TBNZ X10, 0x1F, 0x3612A04
	0x036129E4 CMP W10, W9
	0x036129E8 B.NE 0x36129FC
	0x036129EC LDUR W9, [X29 - 0x3C]
	0x036129F0 SUB W9, W9, W9, 0x2, LSL
	0x036129F4 ADD W8, W9, W8
	0x036129F8 B 0x3612A04
	0x036129FC MOVZ W9, 0x1
	0x03612A00 STUR W9, [X29 - 0x38]
	0x03612A04 LDUR X9, [X29 - 0x30]
	0x03612A08 LDRH W9, [X9]
	0x03612A0C CBZ W9, 0x3612A9C
	0x03612A10 LDR W9, [X23 + 0x4]
	0x03612A14 ANDS W31, W19, 0x1
	0x03612A18 ADD W8, W9, W8
	0x03612A1C STR W8, [X23 + 0x4]
	0x03612A20 ADRP X9, 0xB28000
	0x03612A24 LDR X9, [X9 + 0xF08]
	0x03612A28 LDUR W11, [X29 - 0x1C]
	0x03612A2C LDUR W10, [X29 - 0x34]
	0x03612A30 LDR X0, [X9]
	0x03612A34 SUB W10, W11, W10
	0x03612A38 ADD W8, W10, W8
	0x03612A3C LDR W9, [X0 + 0xE0]
	0x03612A40 CSEL W24, W11, W8, NE
	0x03612A44 CBNZ W9, 0x3612A4C
	0x03612A48 BL 0x1C16DFC
	0x03612A4C MOV X0, X23
	0x03612A50 MOV W1, W24
	0x03612A54 BL 0x3613788
	0x03612A58 LDUR X8, [X29 - 0x30]
	0x03612A5C LDRH W8, [X8]
	0x03612A60 CBNZ W8, 0x3612A94
	0x03612A64 ADRP X8, 0xB28000
	0x03612A68 LDR X8, [X8 + 0xF08]
	0x03612A6C LDR X0, [X8]
	0x03612A70 LDR W8, [X0 + 0xE0]
	0x03612A74 CBNZ W8, 0x3612A7C
	0x03612A78 BL 0x1C16DFC
	0x03612A7C LDUR X0, [X29 - 0x28]
	0x03612A80 MOVZ W2, 0x2
	0x03612A84 MOV X1, X20
	0x03612A88 BL 0x3614F48
	0x03612A8C CMP W0, W21
	0x03612A90 B.NE 0x361279C
	0x03612A94 STUR W21, [X29 - 0x3C]
	0x03612A98 B 0x3612AA8
	0x03612A9C STUR W21, [X29 - 0x3C]
	0x03612AA0 STRB W31, [X23 + 0x8]
	0x03612AA4 STR W31, [X23 + 0x4]
	0x03612AA8 LDUR W9, [X29 - 0x34]
	0x03612AAC SUBS W8, W9, W26
	0x03612AB0 CSEL W10, W8, W31, GT
	0x03612AB4 SUBS W8, W9, W28
	0x03612AB8 CSEL W8, W8, W31, LT
	0x03612ABC STP W8, W10, [X29 - 0x78]
	0x03612AC0 TBZ X19, 0x0, 0x3612AD8
	0x03612AC4 LDUR X0, [X29 - 0x48]
	0x03612AC8 MOV W21, W31
	0x03612ACC MOVZ W19, 0x1
	0x03612AD0 MOV W28, W9
	0x03612AD4 B 0x3612AEC
	0x03612AD8 LDR W8, [X23 + 0x4]
	0x03612ADC LDUR X0, [X29 - 0x48]
	0x03612AE0 MOV W19, W31
	0x03612AE4 SUBS W21, W8, W9
	0x03612AE8 CSEL W28, W8, W9, GT
	0x03612AEC ADD X8, X31, 0x0
	0x03612AF0 SUB X9, X8, 0x10
	0x03612AF4 ADD X31, X9, 0x0
	0x03612AF8 ADRP X10, 0xFFFFFFFFFD4DB000
	0x03612AFC LDR V0, [X10 + 0x3D0]
	0x03612B00 STP X31, X31, [X8 - 0x10]
	0x03612B04 LDUR W8, [X29 - 0x38]
	0x03612B08 STUR X9, [X29 - 0x18]
	0x03612B0C STUR D0, [X29 - 0x10]
	0x03612B10 STP X27, X23, [X29 - 0x70]
	0x03612B14 STUR W19, [X29 - 0x5C]
	0x03612B18 STUR W21, [X29 - 0x4C]
	0x03612B1C TBZ X8, 0x0, 0x3612B58
	0x03612B20 CBZ X0, 0x3613724
	0x03612B24 LDR X8, [X0 + 0x40]
	0x03612B28 CBZ X8, 0x3613724
	0x03612B2C LDR W8, [X8 + 0x10]
	0x03612B30 CMP W8, 0x1
	0x03612B34 B.LT 0x3612B58
	0x03612B38 MOV X1, X31
	0x03612B3C BL 0x333B088
	0x03612B40 CBZ X0, 0x3613724
	0x03612B44 LDR W8, [X0 + 0x18]
	0x03612B48 LDUR W9, [X29 - 0x4C]
	0x03612B4C CBZ W8, 0x3613614
	0x03612B50 LDR W26, [X0 + 0x20]
	0x03612B54 B 0x3613618
	0x03612B58 MOVN W19, 0x0
	0x03612B5C LDUR W8, [X29 - 0x3C]
	0x03612B60 LDUR X9, [X29 - 0x48]
	0x03612B64 CBNZ W8, 0x3612BF4
	0x03612B68 LDUR X8, [X29 - 0x68]
	0x03612B6C LDRB W8, [X8 + 0x8]
	0x03612B70 CBZ W8, 0x3612BF4
	0x03612B74 CBZ X9, 0x3613724
	0x03612B78 ADRP X23, 0xDCE000
	0x03612B7C LDRB W8, [X23 + 0x455]
	0x03612B80 LDR X24, [X9 + 0x30]
	0x03612B84 CBNZ W8, 0x3612B9C
	0x03612B88 ADRP X0, 0xB10000
	0x03612B8C LDR X0, [X0 + 0x588]
	0x03612B90 BL 0x1C16CF4
	0x03612B94 MOVZ W8, 0x1
	0x03612B98 STRB W8, [X23 + 0x455]
	0x03612B9C CBZ X24, 0x3613724
	0x03612BA0 LDR W8, [X24 + 0x10]
	0x03612BA4 CMP W8, 0x1
	0x03612BA8 B.NE 0x3612BE8
	0x03612BAC LDRSW X23, [X22 + 0x18]
	0x03612BB0 LDR W8, [X22 + 0x10]
	0x03612BB4 CMP W23, W8
	0x03612BB8 B.GE 0x3612BE8
	0x03612BBC CMP W23, W8
	0x03612BC0 B.CS 0x3613720
	0x03612BC4 LDR X25, [X22 + 0x8]
	0x03612BC8 MOV X0, X24
	0x03612BCC MOV W1, W31
	0x03612BD0 MOV X2, X31
	0x03612BD4 BL 0x3222A1C
	0x03612BD8 ADD W8, W23, 0x1
	0x03612BDC STRH W0, [X25, X23, LSL #1]
	0x03612BE0 STR W8, [X22 + 0x18]
	0x03612BE4 B 0x3612BF4
	0x03612BE8 MOV X0, X22
	0x03612BEC MOV X1, X24
	0x03612BF0 BL 0x3615B50
	0x03612BF4 ADRP X8, 0xB10000
	0x03612BF8 LDR X8, [X8 + 0x20]
	0x03612BFC LDUR X0, [X29 - 0x28]
	0x03612C00 MOV X1, X20
	0x03612C04 LDR X2, [X8]
	0x03612C08 BL 0x2218CF8
	0x03612C0C LDUR W8, [X29 - 0x3C]
	0x03612C10 STUR X0, [X29 - 0x58]
	0x03612C14 CMP W8, W20
	0x03612C18 B.GE 0x36135E0
	0x03612C1C LDUR W8, [X29 - 0x38]
	0x03612C20 LDUR X27, [X29 - 0x30]
	0x03612C24 STUR W31, [X29 - 0x7C]
	0x03612C28 EOR W8, W8, 0x1
	0x03612C2C STUR W8, [X29 - 0x28]
	0x03612C30 SUB W8, W20, 0x2
	0x03612C34 STUR W8, [X29 - 0x8C]
	0x03612C38 MOV W8, W20
	0x03612C3C SXTW X8, W8
	0x03612C40 STUR X8, [X29 - 0x88]
	0x03612C44 LDUR W8, [X29 - 0x3C]
	0x03612C48 LDUR X9, [X29 - 0x58]
	0x03612C4C LDRH W25, [X9, W8, SXTW]
	0x03612C50 CMP W25, 0x3B
	0x03612C54 B.EQ 0x36135E0
	0x03612C58 CBZ W25, 0x36135E0
	0x03612C5C LDUR W24, [X29 - 0x4C]
	0x03612C60 CMP W24, 0x1
	0x03612C64 B.LT 0x3612DF4
	0x03612C68 CMP W25, 0x30
	0x03612C6C B.HI 0x3612DF4
	0x03612C70 MOV W8, W25
	0x03612C74 MOVZ W9, 0x1
	0x03612C78 LSLV X8, X9, X8
	0x03612C7C MOVZ X9, 0x4008
	0x03612C80 MOVK X9, 0x10000
	0x03612C84 ANDS X31, X8, X9, 0x0
	0x03612C88 B.EQ 0x3612DF4
	0x03612C8C SUB W8, W28, W24
	0x03612C90 ADD W23, W24, 0x1
	0x03612C94 LDUR X21, [X29 - 0x48]
	0x03612C98 LDUR W24, [X29 - 0x28]
	0x03612C9C STUR W8, [X29 - 0x38]
	0x03612CA0 MOV X8, X27
	0x03612CA4 LDRH W9, [X8], #0x2
	0x03612CA8 ADRP X10, 0xDCE000
	0x03612CAC LDRB W10, [X10 + 0x453]
	0x03612CB0 MOVZ W11, 0x30
	0x03612CB4 CMP W9, 0x0
	0x03612CB8 CSEL W26, W11, W9, EQ
	0x03612CBC CSEL X27, X27, X8, EQ
	0x03612CC0 CBNZ W10, 0x3612CDC
	0x03612CC4 ADRP X0, 0xB10000
	0x03612CC8 LDR X0, [X0 + 0x588]
	0x03612CCC BL 0x1C16CF4
	0x03612CD0 ADRP X8, 0xDCE000
	0x03612CD4 MOVZ W9, 0x1
	0x03612CD8 STRB W9, [X8 + 0x453]
	0x03612CDC LDRSW X8, [X22 + 0x18]
	0x03612CE0 LDR W9, [X22 + 0x10]
	0x03612CE4 CMP W8, W9
	0x03612CE8 B.GE 0x3612D08
	0x03612CEC CMP W8, W9
	0x03612CF0 B.CS 0x3613720
	0x03612CF4 LDR X9, [X22 + 0x8]
	0x03612CF8 ADD W10, W8, 0x1
	0x03612CFC STRH W26, [X9, X8, LSL #1]
	0x03612D00 STR W10, [X22 + 0x18]
	0x03612D04 B 0x3612D14
	0x03612D08 MOV X0, X22
	0x03612D0C MOV W1, W26
	0x03612D10 BL 0x3615A24
	0x03612D14 CMP W28, 0x2
	0x03612D18 CSET W8, LT
	0x03612D1C TBNZ X19, 0x1F, 0x3612DD8
	0x03612D20 ORR W8, W8, W24, 0x0
	0x03612D24 TBNZ X8, 0x0, 0x3612DD8
	0x03612D28 LDUR W8, [X29 - 0x10]
	0x03612D2C CMP W19, W8
	0x03612D30 B.CS 0x3613720
	0x03612D34 LDUR X8, [X29 - 0x18]
	0x03612D38 LDR W8, [X8, W19, UXTW]
	0x03612D3C ADD W8, W8, 0x1
	0x03612D40 CMP W28, W8
	0x03612D44 B.NE 0x3612DD8
	0x03612D48 CBZ X21, 0x3613724
	0x03612D4C ADRP X8, 0xDCE000
	0x03612D50 LDRB W8, [X8 + 0x455]
	0x03612D54 LDR X26, [X21 + 0x40]
	0x03612D58 CBNZ W8, 0x3612D74
	0x03612D5C ADRP X0, 0xB10000
	0x03612D60 LDR X0, [X0 + 0x588]
	0x03612D64 BL 0x1C16CF4
	0x03612D68 MOVZ W8, 0x1
	0x03612D6C ADRP X9, 0xDCE000
	0x03612D70 STRB W8, [X9 + 0x455]
	0x03612D74 CBZ X26, 0x3613724
	0x03612D78 LDR W8, [X26 + 0x10]
	0x03612D7C CMP W8, 0x1
	0x03612D80 B.NE 0x3612DC4
	0x03612D84 LDRSW X24, [X22 + 0x18]
	0x03612D88 LDR W8, [X22 + 0x10]
	0x03612D8C CMP W24, W8
	0x03612D90 B.GE 0x3612DC4
	0x03612D94 CMP W24, W8
	0x03612D98 B.CS 0x3613720
	0x03612D9C LDR X21, [X22 + 0x8]
	0x03612DA0 MOV X0, X26
	0x03612DA4 MOV W1, W31
	0x03612DA8 MOV X2, X31
	0x03612DAC BL 0x3222A1C
	0x03612DB0 STRH W0, [X21, X24, LSL #1]
	0x03612DB4 LDUR X21, [X29 - 0x48]
	0x03612DB8 ADD W8, W24, 0x1
	0x03612DBC STR W8, [X22 + 0x18]
	0x03612DC0 B 0x3612DD0
	0x03612DC4 MOV X0, X22
	0x03612DC8 MOV X1, X26
	0x03612DCC BL 0x3615B50
	0x03612DD0 LDUR W24, [X29 - 0x28]
	0x03612DD4 SUB W19, W19, 0x1
	0x03612DD8 SUB W23, W23, 0x1
	0x03612DDC CMP W23, 0x1
	0x03612DE0 SUB W28, W28, 0x1
	0x03612DE4 B.GT 0x3612CA0
	0x03612DE8 LDUR W28, [X29 - 0x38]
	0x03612DEC MOV W24, W31
	0x03612DF0 B 0x3612DF8
	0x03612DF4 LDUR X21, [X29 - 0x48]
	0x03612DF8 LDUR W8, [X29 - 0x3C]
	0x03612DFC CMP W25, 0x45
	0x03612E00 ADD W26, W8, 0x1
	0x03612E04 B.HI 0x3612EE0
	0x03612E08 SUB W8, W25, 0x22
	0x03612E0C CMP W8, 0xE
	0x03612E10 B.HI 0x3612FF8
	0x03612E14 ADRP X11, 0xFFFFFFFFFD585000
	0x03612E18 ADD X11, X11, 0x310
	0x03612E1C ADR X9, 0x10
	0x03612E20 LDRH W10, [X11, X8, LSL #1]
	0x03612E24 ADD X9, X9, X10, 0x2, LSL
	0x03612E28 BR X9
	0x03612E2C CMP W26, W20
	0x03612E30 B.GE 0x36135CC
	0x03612E34 LDUR W8, [X29 - 0x3C]
	0x03612E38 STUR W28, [X29 - 0x38]
	0x03612E3C STUR W24, [X29 - 0x4C]
	0x03612E40 SBFM X23, X26, 0x20, 0x1F
	0x03612E44 ORN W21, W31, W8, 0x0
	0x03612E48 LDUR X8, [X29 - 0x58]
	0x03612E4C ADD X28, X8, W26, 0x1, SXTW
	0x03612E50 LDUR X8, [X29 - 0x88]
	0x03612E54 SUB X24, X8, W26, SXTW
	0x03612E58 LDRH W26, [X28]
	0x03612E5C CBZ W26, 0x3613278
	0x03612E60 CMP W26, W25
	0x03612E64 B.EQ 0x3613278
	0x03612E68 ADRP X8, 0xDCE000
	0x03612E6C LDRB W8, [X8 + 0x453]
	0x03612E70 CBNZ W8, 0x3612E8C
	0x03612E74 ADRP X0, 0xB10000
	0x03612E78 LDR X0, [X0 + 0x588]
	0x03612E7C BL 0x1C16CF4
	0x03612E80 ADRP X8, 0xDCE000
	0x03612E84 MOVZ W9, 0x1
	0x03612E88 STRB W9, [X8 + 0x453]
	0x03612E8C LDRSW X8, [X22 + 0x18]
	0x03612E90 LDR W9, [X22 + 0x10]
	0x03612E94 CMP W8, W9
	0x03612E98 B.GE 0x3612EB8
	0x03612E9C CMP W8, W9
	0x03612EA0 B.CS 0x3613720
	0x03612EA4 LDR X9, [X22 + 0x8]
	0x03612EA8 ADD W10, W8, 0x1
	0x03612EAC STRH W26, [X9, X8, LSL #1]
	0x03612EB0 STR W10, [X22 + 0x18]
	0x03612EB4 B 0x3612EC4

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Add X29, X31, 0
	014 Subtract X31, X31, 128
	015 Move X9, [X29+104]
	016 NotImplemented "Instruction MRS not yet implemented."
	017 Move X8, [X21+40]
	018 Move X19, 0xDCF000
	019 Move [X29-104], X9
	020 Move X9, [X29+96]
	021 Move X24, X5
	022 Move X25, X4
	023 Move X27, X3
	024 Move [X29-120], X6
	025 Move [X29-112], X9
	026 Move [X29-8], X8
	027 Move W8, [X19+1080]
	028 Move X9, [X29+112]
	029 Move X23, [X29+120]
	030 Move X28, X2
	031 Move X20, X1
	032 Move W22, W0
	033 Move [X29-96], X9
	034 Move [X29-24], X1
	035 Move [X29-16], X2
	036 Move TEMP, X8
	037 And TEMP, TEMP, 1
	038 Compare TEMP, 1
	039 JumpIfEqual {69}
	040 Move X0, 0xB29000
	041 Move X0, [X0+3824]
	042 Call 0x1C17CF4
	043 Move X0, 0xAEB000
	044 Move X0, [X0+2264]
	045 Call 0x1C17CF4
	046 Move X0, 0xAE2000
	047 Move X0, [X0+1880]
	048 Call 0x1C17CF4
	049 Move X0, 0xB19000
	050 Move X0, [X0+4040]
	051 Call 0x1C17CF4
	052 Move X0, 0xB19000
	053 Move X0, [X0+3592]
	054 Call 0x1C17CF4
	055 Move X0, 0xB11000
	056 Move X0, [X0+1256]
	057 Call 0x1C17CF4
	058 Move X0, 0xB0B000
	059 Move X0, [X0+3336]
	060 Call 0x1C17CF4
	061 Move X0, 0xB0A000
	062 Move X0, [X0+3040]
	063 Call 0x1C17CF4
	064 Move X0, 0xB29000
	065 Move X0, [X0+3832]
	066 Call 0x1C17CF4
	067 Move W8, 1
	068 Move [X19+1080], W8
	069 NotImplemented "Instruction MOVI not yet implemented."
	070 Subtract X2, X29, 28
	071 Move X0, X25
	072 Move X1, X24
	073 Move [X29-80], X31
	074 Move [X29-72], X31
	075 Move [X29-64], V0
	076 Move [X29-56], V0
	077 Move [X29-28], W31
	078 Call BigNumber.ParseFormatSpecifier, X0, X1
	079 Or W8, W0, 32
	080 And W8, W8, 0xFFFF
	081 Move W26, W0
	082 NotImplemented "Instruction CMP not yet implemented."
	083 NotImplemented "Instruction LDUR not yet implemented."
	084 Subtract X31, X31, 32
	085 NotImplemented "Instruction LDUR not yet implemented."
	086 Move X6, [X29-112]
	087 Move X7, [X29-104]
	088 And W0, W22, 1
	089 Move X1, X20
	090 Move X2, X28
	091 Move W3, W26
	092 Move [X31+8], X23
	093 Move [X31], X8
	094 Call BigNumber.FormatBigIntegerToHex, X0, X1, X2, X3, X4, X5, X6, X7
	095 Add X31, X31, 32
	096 Move X8, [X21+40]
	097 NotImplemented "Instruction LDUR not yet implemented."
	098 NotImplemented "Instruction CMP not yet implemented."
	099 Add X31, X29, 0
	100 Move X20, [X31+80]
	101 Move X19, [X31+88]
	102 Move X22, [X31+64]
	103 Move X21, [X31+72]
	104 Move X24, [X31+48]
	105 Move X23, [X31+56]
	106 Move X26, [X31+32]
	107 Move X25, [X31+40]
	108 Move X28, [X31+16]
	109 Move X27, [X31+24]
	110 Move X29, [X31+96]
	111 Move X30, [X31+104]
	112 Return X0
	113 Compare X28, 0
	114 JumpIfEqual {223}
	115 Move X19, [X28+24]
	116 Move [X29-128], X23
	117 Move X8, W19
	118 Move X8, X8
	119 ShiftRight X8, 62
	120 And X8, X8, 0x1FFFFFFF
	121 Add X8, X8, W19
	122 Move X8, X8
	123 ShiftRight X8, 63
	124 And X8, X8, 0x3FFFFFFF
	125 NotImplemented "Instruction CMP not yet implemented."
	126 Move X10, 0xB0B000
	127 Move X10, [X10+3336]
	128 Add W8, W19, W19
	129 Move W9, 0x8E39
	130 NotImplemented "Instruction MOVK not yet implemented."
	131 Move W8, W8
	132 ShiftRight W8, 31
	133 And W8, W8, 0x3FFFFFFF
	134 Move X0, [X10]
	135 NotImplemented "Instruction SMADDL not yet implemented."
	136 Move X9, X8
	137 ShiftRight X9, 32
	138 And X9, X9, 0x7FFFFFFF
	139 Move X8, X8
	140 ShiftRight X8, 63
	141 And X8, X8, 0x7FFFFFFF
	142 Add W8, W8, W9
	143 Move W23, 0xCA00
	144 Add W1, W8, 2
	145 NotImplemented "Instruction MOVK not yet implemented."
	146 Call 0x1C17D6C
	147 Move W9, 0x4B83
	148 Move X28, X0
	149 Move W11, W31
	150 Add X8, X0, 32
	151 NotImplemented "Instruction MOVK not yet implemented."
	152 Move W20, W11
	153 Subtract W19, W19, 1
	154 NotImplemented "Instruction LDUR not yet implemented."
	155 Compare X10, 0
	156 JumpIfEqual {486}
	157 Move W11, [X10+24]
	158 NotImplemented "Instruction CMP not yet implemented."
	159 Add X10, X10, W19
	160 Move W10, [X10+32]
	161 NotImplemented "Instruction CMP not yet implemented."
	162 Compare X28, 0
	163 JumpIfEqual {486}
	164 Move W11, [X28+24]
	165 Move X12, X31
	166 NotImplemented "Instruction CMP not yet implemented."
	167 Move W13, [X8]
	168 Move W14, W10
	169 NotImplemented "Instruction BFM not yet implemented."
	170 NotImplemented "Instruction UDIV not yet implemented."
	171 NotImplemented "Instruction MSUB not yet implemented."
	172 Move [X8], W13
	173 Add X12, X12, 1
	174 NotImplemented "Instruction CMP not yet implemented."
	175 Compare W10, 0
	176 JumpIfEqual {153}
	177 Compare X28, 0
	178 JumpIfEqual {486}
	179 Move W12, [X28+24]
	180 NotImplemented "Instruction CMP not yet implemented."
	181 Move W13, W10
	182 ShiftRight W13, 9
	183 And W13, W13, 0x7FFFFFFF
	184 NotImplemented "Instruction UMADDL not yet implemented."
	185 Move X13, X13
	186 ShiftRight X13, 39
	187 And X13, X13, 0x7FFFFFFF
	188 Add W11, W20, 1
	189 Add X14, X28, W20
	190 NotImplemented "Instruction MSUB not yet implemented."
	191 NotImplemented "Instruction CMP not yet implemented."
	192 Move [X14+32], W15
	193 NotImplemented "Instruction CMP not yet implemented."
	194 Add X10, X28, W11
	195 Add W11, W20, 2
	196 Move [X10+32], W13
	197 Move X8, W20
	198 Move X8, X8
	199 ShiftRight X8, 61
	200 And X8, X8, 0xFFFFFFF
	201 Add X8, X8, W20
	202 NotImplemented "Instruction CMP not yet implemented."
	203 And W8, W26, 0xFFFF
	204 Subtract W8, W8, 68
	205 Add W19, W20, W20
	206 NotImplemented "Instruction CMP not yet implemented."
	207 Move W23, 1
	208 Move W9, 1
	209 NotImplemented "Instruction LSLV not yet implemented."
	210 Move X9, 0x4009
	211 NotImplemented "Instruction MOVK not yet implemented."
	212 And X31, X8, X9
	213 Move W8, [X29-28]
	214 Move W9, [X29-24]
	215 NotImplemented "Instruction CMP not yet implemented."
	216 NotImplemented "Instruction CCMP not yet implemented."
	217 NotImplemented "Instruction CSEL not yet implemented."
	218 Move TEMP, X9
	219 And TEMP, TEMP, -2147483648
	220 Compare TEMP, -2147483648
	221 JumpIfEqual {247}
	222 Move W23, W31
	223 And W8, W26, 0xFFFF
	224 Subtract W8, W8, 71
	225 NotImplemented "Instruction CMP not yet implemented."
	226 Move W9, 1
	227 NotImplemented "Instruction LSLV not yet implemented."
	228 Move X9, 2049
	229 NotImplemented "Instruction MOVK not yet implemented."
	230 And X31, X8, X9
	231 NotImplemented "Instruction LDUR not yet implemented."
	232 NotImplemented "Instruction CMP not yet implemented."
	233 Move X9, 0xAE2000
	234 Move X9, [X9+1880]
	235 Subtract X1, X29, 84
	236 Move [X29-84], W8
	237 Move X0, [X9]
	238 Call 0x1C17E04
	239 Move X8, 0xB29000
	240 Move X8, [X8+3832]
	241 Move X1, X0
	242 Move X2, X31
	243 Move X8, [X8]
	244 Move X0, X8
	245 Call String.Format, X0, X1
	246 Move X27, X0
	247 NotImplemented "Instruction LDUR not yet implemented."
	248 Compare X8, 0
	249 JumpIfEqual {548}
	250 Move X8, [X8+48]
	251 Compare X8, 0
	252 JumpIfEqual {549}
	253 Move W8, [X8+16]
	254 Add W31, W19, W8
	255 Move W23, W31
	256 Add W19, W8, W19
	257 Move TEMP, 0x80000000
	258 Not TEMP
	259 Move W8, TEMP
	260 NotImplemented "Instruction CMP not yet implemented."
	261 Move X8, 0xAEB000
	262 Move X8, [X8+2264]
	263 Add W1, W19, 1
	264 Move X0, [X8]
	265 Call 0x1C17D6C
	266 Compare X28, 0
	267 JumpIfEqual {486}
	268 Move X9, [X28+24]
	269 Subtract W10, W20, 1
	270 Move X26, X0
	271 NotImplemented "Instruction CMP not yet implemented."
	272 Move X8, W10
	273 Move W27, W19
	274 Move W13, 0xCCCD
	275 Move X11, X31
	276 And X12, X9, 0
	277 NotImplemented "Instruction MOVK not yet implemented."
	278 Move W14, 10
	279 Move W27, W19
	280 NotImplemented "Instruction CMP not yet implemented."
	281 Compare X26, 0
	282 JumpIfEqual {486}
	283 Add X15, X28, X11
	284 Move W17, [X15+32]
	285 Move W16, [X26+24]
	286 Move W15, 9
	287 Add W0, W27, W15
	288 Subtract W0, W0, 10
	289 NotImplemented "Instruction CMP not yet implemented."
	290 NotImplemented "Instruction UMADDL not yet implemented."
	291 Move X1, X1
	292 ShiftRight X1, 35
	293 And X1, X1, 0x7FFFFFFF
	294 NotImplemented "Instruction MSUB not yet implemented."
	295 Add X0, X26, W0
	296 Subtract W15, W15, 1
	297 Or W17, W17, 48
	298 NotImplemented "Instruction CMP not yet implemented."
	299 NotImplemented "Instruction STRH not yet implemented."
	300 Move W17, W1
	301 Add X11, X11, 1
	302 Add W15, W27, W15
	303 NotImplemented "Instruction CMP not yet implemented."
	304 Subtract W27, W15, 9
	305 NotImplemented "Instruction CMP not yet implemented."
	306 Add X8, X28, X8
	307 Move W8, [X8+32]
	308 Compare W8, 0
	309 JumpIfEqual {328}
	310 Compare X26, 0
	311 JumpIfEqual {486}
	312 Move W9, [X26+24]
	313 Move W10, 0xCCCD
	314 NotImplemented "Instruction MOVK not yet implemented."
	315 Move W11, 10
	316 Subtract W27, W27, 1
	317 NotImplemented "Instruction CMP not yet implemented."
	318 NotImplemented "Instruction UMADDL not yet implemented."
	319 Move X12, X12
	320 ShiftRight X12, 35
	321 And X12, X12, 0x7FFFFFFF
	322 NotImplemented "Instruction MSUB not yet implemented."
	323 Add X13, X26, W27
	324 Or W14, W14, 48
	325 NotImplemented "Instruction CMP not yet implemented."
	326 Move W8, W12
	327 NotImplemented "Instruction STRH not yet implemented."
	328 Compare W23, 0
	329 JumpIfEqual {370}
	330 NotImplemented "Instruction LDUR not yet implemented."
	331 Subtract X28, X31, 256
	332 Subtract W20, W19, W27
	333 Add X31, X28, 0
	334 Move W2, 256
	335 Move X0, X28
	336 Move W1, W31
	337 Call 0x3EB2B10
	338 Move W8, 128
	339 Move [X29-64], X31
	340 Move [X29-56], X28
	341 Move [X29-48], X8
	342 Move [X29-40], W31
	343 Move W3, W23
	344 ShiftRight W3, 31
	345 And W3, W3, 0x7FFFFFFF
	346 Subtract X0, X29, 64
	347 Move W1, 29
	348 Move [X31-16], W27
	349 NotImplemented "Instruction LDUR not yet implemented."
	350 Move W2, W20
	351 Move X4, X25
	352 Move X5, X24
	353 Move X7, X26
	354 Call FormatProvider.FormatBigInteger, X0, X1, X2, X3, X4, X5, X6, X7
	355 Add X31, X31, 16
	356 Move TEMP, X22
	357 And TEMP, TEMP, 1
	358 Compare TEMP, 1
	359 JumpIfNotEqual {389}
	360 Move X1, [X29-112]
	361 Move X2, [X29-104]
	362 NotImplemented "Instruction LDUR not yet implemented."
	363 Subtract X0, X29, 64
	364 Call ValueStringBuilder.TryCopyTo, X0, X1, X2
	365 NotImplemented "Instruction LDUR not yet implemented."
	366 Move W8, W0
	367 And W8, W8, 1
	368 Move X0, X31
	369 Move [X9], W8
	370 NotImplemented "Instruction LDUR not yet implemented."
	371 NotImplemented "Instruction LDUR not yet implemented."
	372 NotImplemented "Instruction CMP not yet implemented."
	373 NotImplemented "Instruction LDUR not yet implemented."
	374 Subtract W8, W19, W27
	375 NotImplemented "Instruction CMP not yet implemented."
	376 Move W10, 48
	377 Compare X26, 0
	378 JumpIfEqual {486}
	379 Move W11, [X26+24]
	380 Subtract W27, W27, 1
	381 NotImplemented "Instruction CMP not yet implemented."
	382 Add X11, X26, W27
	383 NotImplemented "Instruction CMP not yet implemented."
	384 NotImplemented "Instruction STRH not yet implemented."
	385 Subtract W11, W9, 1
	386 NotImplemented "Instruction CMP not yet implemented."
	387 Move W9, W11
	388 Move [X29-28], W11
	389 NotImplemented "Instruction LDUR not yet implemented."
	390 Subtract X0, X29, 64
	391 Move [X8], W31
	392 NotImplemented "Instruction LDUR not yet implemented."
	393 Move [X8], W31
	394 Call ValueStringBuilder.ToString, X0
	395 Move X8, 0xB0A000
	396 Move X8, [X8+3040]
	397 Move X27, [X8]
	398 Move X19, 0xDC8000
	399 Move W8, [X19+1890]
	400 Compare W8, 0
	401 JumpIfNotEqual {407}
	402 Move X0, 0xB09000
	403 Move X0, [X0+656]
	404 Call 0x1C17CF4
	405 Move W8, 1
	406 Move [X19+1890], W8
	407 Compare X27, 0
	408 JumpIfEqual {430}
	409 Move X0, X27
	410 Move X1, X31
	411 Call String.GetRawStringData, X0
	412 Move W24, [X27+16]
	413 Move X25, X0
	414 Move TEMP, X22
	415 And TEMP, TEMP, 1
	416 Compare TEMP, 1
	417 JumpIfNotEqual {436}
	418 Move X1, [X29-112]
	419 Move X2, [X29-104]
	420 NotImplemented "Instruction LDUR not yet implemented."
	421 NotImplemented "Instruction LDUR not yet implemented."
	422 Subtract X0, X29, 24
	423 Move X4, X25
	424 Move X5, X24
	425 Move X7, X31
	426 Call Int32.TryFormat, X0, X1, X2, X3, X4
	427 Move W8, W0
	428 And W8, W8, 1
	429 Move X0, X31
	430 Move X25, X31
	431 Move X24, X31
	432 Move TEMP, X22
	433 And TEMP, TEMP, 1
	434 Compare TEMP, 1
	435 JumpIfEqual {418}
	436 NotImplemented "Instruction LDUR not yet implemented."
	437 NotImplemented "Instruction LDUR not yet implemented."
	438 Subtract X0, X29, 24
	439 Move X1, X27
	440 Move X3, X31
	441 Move [X8], W31
	442 Move [X23], W31
	443 Call Int32.ToString, X0, X1, X2
	444 NotImplemented "Instruction LDUR not yet implemented."
	445 NotImplemented "Instruction LDUR not yet implemented."
	446 Move TEMP, X8
	447 And TEMP, TEMP, -2147483648
	448 Compare TEMP, -2147483648
	449 JumpIfEqual {464}
	450 Subtract W19, W19, W27
	451 Move TEMP, X22
	452 And TEMP, TEMP, 1
	453 Compare TEMP, 1
	454 JumpIfNotEqual {519}
	455 Compare X26, 0
	456 JumpIfNotEqual {492}
	457 Or W8, W19, W27
	458 Compare W8, 0
	459 JumpIfEqual {462}
	460 Move X0, X31
	461 Call ThrowHelper.ThrowArgumentOutOfRangeException
	462 Move X8, X31
	463 Move W9, W31
	464 Compare X24, 0
	465 JumpIfEqual {486}
	466 Move X0, [X24+48]
	467 Compare X0, 0
	468 JumpIfEqual {486}
	469 Move W8, [X0+16]
	470 Subtract W20, W8, 1
	471 Subtract W27, W27, 1
	472 Move W1, W20
	473 Move X2, X31
	474 Call String.get_Chars, X0, X1
	475 Compare X26, 0
	476 JumpIfEqual {486}
	477 Move W8, [X26+24]
	478 NotImplemented "Instruction CMP not yet implemented."
	479 Add X8, X26, W27
	480 Subtract W20, W20, 1
	481 NotImplemented "Instruction STRH not yet implemented."
	482 Move X0, [X24+48]
	483 Subtract W27, W27, 1
	484 Compare X0, 0
	485 JumpIfNotEqual {472}
	486 Call 0x1C17F20
	487 Subtract W19, W19, W27
	488 Move TEMP, X22
	489 And TEMP, TEMP, 1
	490 Compare TEMP, 1
	491 JumpIfNotEqual {519}
	492 Move W8, [X26+24]
	493 Subtract W8, W8, W27
	494 NotImplemented "Instruction CMP not yet implemented."
	495 Move X0, X31
	496 Call ThrowHelper.ThrowArgumentOutOfRangeException
	497 Add X8, X26, W27
	498 Add X8, X8, 32
	499 Move W9, W19
	500 Move X10, 0xB19000
	501 Move X10, [X10+4040]
	502 Move X1, [X29-112]
	503 Move X2, [X29-104]
	504 Subtract X0, X29, 80
	505 Move [X29-80], X8
	506 Move X3, [X10]
	507 Move [X29-72], W9
	508 Move [X29-68], W31
	509 Call ReadOnlySpan`1<Char>.TryCopyTo, X0, X1
	510 Move TEMP, X0
	511 And TEMP, TEMP, 1
	512 Compare TEMP, 1
	513 JumpIfNotEqual {528}
	514 NotImplemented "Instruction LDUR not yet implemented."
	515 Move X0, X31
	516 Move [X8], W19
	517 Move W8, 1
	518 Move [X23], W8
	519 NotImplemented "Instruction LDUR not yet implemented."
	520 Move X0, X31
	521 Move X1, X26
	522 Move W2, W27
	523 Move W3, W19
	524 Move X4, X31
	525 Move [X8], W31
	526 Move [X23], W31
	527 Call String.CreateString, X0, X1, X2, X3
	528 NotImplemented "Instruction LDUR not yet implemented."
	529 Move X0, X31
	530 Move [X8], W31
	531 Move [X23], W31
	532 Call 0x1C17F28
	533 Call 0x1C17F30
	534 Move X8, 0xB29000
	535 Move X8, [X8+3824]
	536 Move X1, [X8]
	537 Call 0x1C17DEC
	538 Call 0x1C17F30
	539 Move X8, 0xB29000
	540 Move X8, [X8+3824]
	541 Move X1, [X8]
	542 Call 0x1C17DEC
	543 Call 0x1C17F30
	544 Move X8, 0xB29000
	545 Move X8, [X8+3824]
	546 Move X1, [X8]
	547 Call 0x1C17DEC
	548 Call 0x1C17F20
	549 Call 0x1C17F20
	550 Call 0x1C17F30
	551 Move X8, 0xB29000
	552 Move X8, [X8+3824]
	553 Move X1, [X8]
	554 Call 0x1C17DEC
	555 Call 0x3EB2B20
	556 Move X19, X0
	557 NotImplemented "Instruction CMP not yet implemented."
	558 Move X0, X19
	559 Call 0x3EB2AD0
	560 Move X19, X0
	561 Move X0, 0xAE2000
	562 Move X0, [X0+2136]
	563 Call 0x1C17D08
	564 Move X8, [X19]
	565 Move X1, [X8]
	566 Call 0x1C18270
	567 Move TEMP, X0
	568 And TEMP, TEMP, 1
	569 Compare TEMP, 1
	570 JumpIfEqual {646}
	571 Move W0, 8
	572 Call 0x3EB2AF0
	573 Move X8, [X19]
	574 Move [X0], X8
	575 Move X1, 0x8A3000
	576 Add X1, X1, 3672
	577 Move X2, X31
	578 Call 0x3EB2B00
	579 Move X19, X0
	580 Call 0x3EB2AE0
	581 NotImplemented "Instruction CMP not yet implemented."
	582 Move X19, X0
	583 Move X0, X19
	584 Call 0x3EB2AD0
	585 Move X19, X0
	586 Move X0, 0xAE2000
	587 Move X0, [X0+2136]
	588 Call 0x1C17D08
	589 Move X8, [X19]
	590 Move X1, [X8]
	591 Call 0x1C18270
	592 Move TEMP, X0
	593 And TEMP, TEMP, 1
	594 Compare TEMP, 1
	595 JumpIfEqual {646}
	596 Move W0, 8
	597 Call 0x3EB2AF0
	598 Move X8, [X19]
	599 Move [X0], X8
	600 Move X1, 0x8A3000
	601 Add X1, X1, 3672
	602 Move X2, X31
	603 Call 0x3EB2B00
	604 Move X19, X0
	605 Call 0x3EB2AE0
	606 NotImplemented "Instruction CMP not yet implemented."
	607 Move X19, X0
	608 Move X0, X19
	609 Call 0x3EB2AD0
	610 Move X19, X0
	611 Move X0, 0xAE2000
	612 Move X0, [X0+2136]
	613 Call 0x1C17D08
	614 Move X8, [X19]
	615 Move X1, [X8]
	616 Call 0x1C18270
	617 Move TEMP, X0
	618 And TEMP, TEMP, 1
	619 Compare TEMP, 1
	620 JumpIfEqual {646}
	621 Move W0, 8
	622 Call 0x3EB2AF0
	623 Move X8, [X19]
	624 Move [X0], X8
	625 Move X1, 0x8A3000
	626 Add X1, X1, 3672
	627 Move X2, X31
	628 Call 0x3EB2B00
	629 Move X19, X0
	630 Call 0x3EB2AE0
	631 NotImplemented "Instruction CMP not yet implemented."
	632 Move X19, X0
	633 Move X0, X19
	634 Call 0x3EB2AD0
	635 Move X19, X0
	636 Move X0, 0xAE2000
	637 Move X0, [X0+2136]
	638 Call 0x1C17D08
	639 Move X8, [X19]
	640 Move X1, [X8]
	641 Call 0x1C18270
	642 Move TEMP, X0
	643 And TEMP, TEMP, 1
	644 Compare TEMP, 1
	645 JumpIfNotEqual {667}
	646 Move X19, [X19]
	647 Call 0x3EB2AE0
	648 Move X0, 0xB0F000
	649 Move X0, [X0+3080]
	650 Call 0x1C17D08
	651 Call 0x1C17F10
	652 Move X20, X0
	653 Move X0, 0xB29000
	654 Move X0, [X0+3840]
	655 Call 0x1C17D08
	656 Move X1, X0
	657 Move X0, X20
	658 Move X2, X19
	659 Move X3, X31
	660 Call FormatException..ctor, X0, X1, X2
	661 Move X0, 0xB29000
	662 Move X0, [X0+3824]
	663 Call 0x1C17D08
	664 Move X1, X0
	665 Move X0, X20
	666 Call 0x1C17DEC
	667 Move W0, 8
	668 Call 0x3EB2AF0
	669 Move X8, [X19]
	670 Move [X0], X8
	671 Move X1, 0x8A3000
	672 Add X1, X1, 3672
	673 Move X2, X31
	674 Call 0x3EB2B00
	675 Move X19, X0
	676 Call 0x3EB2AE0
	677 Move X0, X19
	678 Call 0x1D2D690
	679 Call 0x1991590

