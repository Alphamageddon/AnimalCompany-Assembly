Type: System.Numerics.BigIntegerCalculator/FastReducer

Method: System.Void .ctor(System.UInt32[] modulus)

Disassembly:
	0x03610640 ADRP X20, 0xB2A000
	0x03610644 LDRB W8, [X19 + 0x42A]
	0x03610648 LDR X20, [X20 + 0xE88]
	0x0361064C TBNZ X8, 0x0, 0x3610664
	0x03610650 ADRP X0, 0xB2A000
	0x03610654 LDR X0, [X0 + 0xE88]
	0x03610658 BL 0x1C16CF4
	0x0361065C MOVZ W8, 0x1
	0x03610660 STRB W8, [X19 + 0x42A]
	0x03610664 LDR X8, [X20]
	0x03610668 ADRP X9, 0xFFFFFFFFFD4DB000
	0x0361066C LDR V0, [X9 + 0x98]
	0x03610670 LDP X20, X19, [X31 + 0x10]
	0x03610674 LDR X8, [X8 + 0xB8]
	0x03610678 STR V0, [X8]
	0x0361067C LDR X30, [X31], #0x20
	0x03610680 RET
	0x03610684 STP X30, X23, [X31 - 0x30]!
	0x03610688 STP X22, X21, [X31 + 0x10]
	0x0361068C STP X20, X19, [X31 + 0x20]
	0x03610690 ADRP X22, 0xDD0000
	0x03610694 ADRP X23, 0xB2A000
	0x03610698 LDRB W8, [X22 + 0x431]
	0x0361069C LDR X23, [X23 + 0xE88]
	0x036106A0 MOV W20, W2
	0x036106A4 MOV X21, X1
	0x036106A8 MOV X19, X0
	0x036106AC TBNZ X8, 0x0, 0x36106C4
	0x036106B0 ADRP X0, 0xB2A000
	0x036106B4 LDR X0, [X0 + 0xE88]
	0x036106B8 BL 0x1C16CF4
	0x036106BC MOVZ W8, 0x1
	0x036106C0 STRB W8, [X22 + 0x431]
	0x036106C4 LDR X0, [X19]
	0x036106C8 LDR W2, [X19 + 0x8]
	0x036106CC MOV W1, W31
	0x036106D0 MOV X3, X31
	0x036106D4 BL 0x339FA34
	0x036106D8 LDR X8, [X19]
	0x036106DC LDR X22, [X21]
	0x036106E0 STR X8, [X21]
	0x036106E4 STR X22, [X19]
	0x036106E8 LDR X0, [X23]
	0x036106EC LDR W8, [X0 + 0xE0]
	0x036106F0 CBNZ W8, 0x36106F8
	0x036106F4 BL 0x1C16DFC
	0x036106F8 MOV X0, X22
	0x036106FC MOV W1, W20
	0x03610700 BL 0x360FCDC
	0x03610704 STR W0, [X19 + 0x8]
	0x03610708 LDP X20, X19, [X31 + 0x20]
	0x0361070C LDP X22, X21, [X31 + 0x10]
	0x03610710 LDP X30, X23, [X31], #0x30
	0x03610714 RET
	0x03610718 STP X30, X21, [X31 - 0x20]!
	0x0361071C STP X20, X19, [X31 + 0x10]
	0x03610720 LDR X8, [X0]
	0x03610724 CBZ X8, 0x36107B0
	0x03610728 LDR W8, [X8 + 0x18]
	0x0361072C MOV W19, W2
	0x03610730 CMP W8, W2
	0x03610734 B.LE 0x3610748
	0x03610738 MOV W0, W19
	0x0361073C LDP X20, X19, [X31 + 0x10]
	0x03610740 LDP X30, X21, [X31], #0x20

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0xDD1000
	008 Move W8, [X21+1075]
	009 Move X20, X1
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0xB2B000
	016 Move X0, [X0+3720]
	017 Call 0x1C17CF4
	018 Move X0, 0xB0D000
	019 Move X0, [X0+3336]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X21+1075], W8
	023 Compare X20, 0
	024 JumpIfEqual {80}
	025 Move X23, 0xB0D000
	026 Move X23, [X23+3336]
	027 Move W8, [X20+24]
	028 Move W1, 1
	029 Move X0, [X23]
	030 NotImplemented "Instruction BFM not yet implemented."
	031 Call 0x1C17D6C
	032 Compare X0, 0
	033 JumpIfEqual {80}
	034 Move X8, [X0+24]
	035 Move X22, X0
	036 Compare W8, 0
	037 JumpIfEqual {81}
	038 Move X9, 0xB2B000
	039 Move X9, [X9+3720]
	040 Move X10, INVALID
	041 Add X8, X10, X8
	042 Add X8, X22, X8
	043 Move W21, 1
	044 Move [X8+32], W21
	045 Move X0, [X9]
	046 Move W8, [X0+224]
	047 Compare W8, 0
	048 JumpIfNotEqual {50}
	049 Call 0x1C17DFC
	050 Move X0, X22
	051 Move X1, X20
	052 Call BigIntegerCalculator.Divide, X0, X1
	053 Move [X19], X20
	054 Move [X19+8], X0
	055 Move W8, [X20+24]
	056 Move X0, [X23]
	057 Move W8, W8
	058 ShiftRight W8, 31
	059 And W8, W8, 0x3FFFFFFF
	060 Add W1, W8, 2
	061 Call 0x1C17D6C
	062 Move [X19+16], X0
	063 Move W8, [X20+24]
	064 Move X0, [X23]
	065 NotImplemented "Instruction BFM not yet implemented."
	066 Move W1, W21
	067 Call 0x1C17D6C
	068 Move X8, [X19+8]
	069 Move [X19+24], X0
	070 Move X0, X8
	071 Call BigIntegerCalculator.ActualLength, X0
	072 Move [X19+32], W0
	073 Move X20, [X31+32]
	074 Move X19, [X31+40]
	075 Move X22, [X31+16]
	076 Move X21, [X31+24]
	077 Move X30, [X31+48]
	078 Move X23, [X31+56]
	079 Return 
	080 Call 0x1C17F20
	081 Call 0x1C17F28

Method: System.Int32 Reduce(System.UInt32[] value, System.Int32 length)

Disassembly:
	0x03611718 STR W13, [X8, X12, LSL #2]
	0x0361171C ADD X12, X12, 0x1
	0x03611720 CMP X20, X12
	0x03611724 B.NE 0x36116FC
	0x03611728 CBZ W10, 0x36116C4
	0x0361172C CBZ X28, 0x3611BBC
	0x03611730 LDR W12, [X28 + 0x18]
	0x03611734 CMP W20, W12
	0x03611738 B.CS 0x3611C68
	0x0361173C UBFM W13, W10, 0x9, 0x1F
	0x03611740 UMADDL X13, X13, X9, X31
	0x03611744 UBFM X13, X13, 0x27, 0x3F
	0x03611748 ADD W11, W20, 0x1
	0x0361174C ADD X14, X28, W20, 0x2, SXTW
	0x03611750 MSUB W15, W13, W23, W10
	0x03611754 CMP W10, W23
	0x03611758 STR W15, [X14 + 0x20]
	0x0361175C B.CC 0x36116C0
	0x03611760 CMP W11, W12
	0x03611764 B.CS 0x3611C68
	0x03611768 ADD X10, X28, W11, 0x2, SXTW
	0x0361176C ADD W11, W20, 0x2
	0x03611770 STR W13, [X10 + 0x20]
	0x03611774 B 0x36116C0
	0x03611778 SXTW X8, W20
	0x0361177C UBFM X8, X8, 0x3D, 0x3C
	0x03611780 ADD X8, X8, W20, SXTW
	0x03611784 CMP X8, W8, SXTW
	0x03611788 B.NE 0x3611C80
	0x0361178C AND W8, W26, 0xFFFF
	0x03611790 SUB W8, W8, 0x44
	0x03611794 ADD W19, W20, W20, 0x3, LSL
	0x03611798 CMP W8, 0x2E
	0x0361179C MOVZ W23, 0x1
	0x036117A0 B.HI 0x361186C
	0x036117A4 MOVZ W9, 0x1
	0x036117A8 LSLV X8, X9, X8
	0x036117AC MOVZ X9, 0x4009
	0x036117B0 MOVK X9, 0x4009

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X8, [X0]
	006 Compare X8, 0
	007 JumpIfEqual {50}
	008 Move W8, [X8+24]
	009 Move W19, W2
	010 NotImplemented "Instruction CMP not yet implemented."
	011 Move W0, W19
	012 Move X20, [X31+16]
	013 Move X19, [X31+24]
	014 Move X30, [X31+32]
	015 Move X21, [X31+40]
	016 Return X0
	017 Move W3, [X0+32]
	018 Move X2, [X0+8]
	019 Move X4, [X0+16]
	020 Move X20, X0
	021 Move X21, X1
	022 Subtract W5, W8, 1
	023 Move X0, X1
	024 Move W1, W19
	025 Call FastReducer.DivMul, X0, X1, X2, X3, X4, X5
	026 Move X2, [X20]
	027 Compare X2, 0
	028 JumpIfEqual {50}
	029 Move W3, [X2+24]
	030 Move W1, W0
	031 Move X0, [X20+16]
	032 Move X4, [X20+24]
	033 Add W5, W3, 1
	034 Call FastReducer.DivMul, X0, X1, X2, X3, X4, X5
	035 Move X4, [X20]
	036 Compare X4, 0
	037 JumpIfEqual {50}
	038 Move W8, [X4+24]
	039 Move X2, [X20+24]
	040 Move W1, W19
	041 Move X20, [X31+16]
	042 Move X19, [X31+24]
	043 Move W3, W0
	044 Add W5, W8, 1
	045 Move X0, X21
	046 Move X30, [X31+32]
	047 Move X21, [X31+40]
	048 Call FastReducer.SubMod, X0, X1, X2, X3, X4, X5
	049 Return X0
	050 Call 0x1C17F20

Method: System.Int32 DivMul(System.UInt32[] left, System.Int32 leftLength, System.UInt32[] right, System.Int32 rightLength, System.UInt32[] bits, System.Int32 k)

Disassembly:
	0x036117BC LDP W8, W9, [X29 - 0x1C]
	0x036117C0 CMP W8, W19
	0x036117C4 CCMP W8, 0x0, 0x4, GT
	0x036117C8 CSEL W19, W8, W19, GT
	0x036117CC TBNZ X9, 0x1F, 0x3611848
	0x036117D0 MOV W23, W31
	0x036117D4 B 0x361186C
	0x036117D8 AND W8, W26, 0xFFFF
	0x036117DC SUB W8, W8, 0x47
	0x036117E0 CMP W8, 0x2B
	0x036117E4 B.HI 0x3611AD0
	0x036117E8 MOVZ W9, 0x1
	0x036117EC LSLV X8, X9, X8
	0x036117F0 MOVZ X9, 0x801
	0x036117F4 MOVK X9, 0x801
	0x036117F8 ANDS X31, X8, X9, 0x0
	0x036117FC B.EQ 0x3611AD0
	0x03611800 LDUR W8, [X29 - 0x1C]
	0x03611804 CMP W8, 0x0
	0x03611808 B.LE 0x3611A8C
	0x0361180C ADRP X9, 0xAE2000
	0x03611810 LDR X9, [X9 + 0x758]
	0x03611814 SUB X1, X29, 0x54
	0x03611818 STUR W8, [X29 - 0x54]
	0x0361181C LDR X0, [X9]
	0x03611820 BL 0x1C16E04
	0x03611824 ADRP X8, 0xB29000
	0x03611828 LDR X8, [X8 + 0xEF8]
	0x0361182C MOV X1, X0
	0x03611830 MOV X2, X31
	0x03611834 LDR X8, [X8]
	0x03611838 MOV X0, X8
	0x0361183C BL 0x321EFD0
	0x03611840 MOV X27, X0
	0x03611844 B 0x3611A98
	0x03611848 LDUR X8, [X29 - 0x78]
	0x0361184C CBZ X8, 0x3611CA8
	0x03611850 LDR X8, [X8 + 0x30]
	0x03611854 CBZ X8, 0x3611CAC
	0x03611858 LDR W8, [X8 + 0x10]
	0x0361185C ADDS W31, W19, W8
	0x03611860 B.VS 0x3611CB0
	0x03611864 MOV W23, W31
	0x03611868 ADD W19, W8, W19
	0x0361186C MOVN W8, 0x80000000
	0x03611870 CMP W19, W8
	0x03611874 B.EQ 0x3611C94
	0x03611878 ADRP X8, 0xAEB000
	0x0361187C LDR X8, [X8 + 0x8D8]
	0x03611880 ADD W1, W19, 0x1
	0x03611884 LDR X0, [X8]
	0x03611888 BL 0x1C16D6C
	0x0361188C CBZ X28, 0x3611BBC
	0x03611890 LDR X9, [X28 + 0x18]
	0x03611894 SUB W10, W20, 0x1
	0x03611898 MOV X26, X0
	0x0361189C CMP W10, 0x1
	0x036118A0 SXTW X8, W10
	0x036118A4 MOV W27, W19
	0x036118A8 B.LT 0x361192C
	0x036118AC MOVZ W13, 0xCCCD
	0x036118B0 MOV X11, X31
	0x036118B4 AND X12, X9, 0x0
	0x036118B8 MOVK W13, 0xCCCC0000
	0x036118BC MOVZ W14, 0xA
	0x036118C0 MOV W27, W19
	0x036118C4 CMP X11, X12
	0x036118C8 B.EQ 0x3611C68
	0x036118CC CBZ X26, 0x3611BBC
	0x036118D0 ADD X15, X28, X11, 0x2, LSL
	0x036118D4 LDR W17, [X15 + 0x20]
	0x036118D8 LDR W16, [X26 + 0x18]
	0x036118DC MOVZ W15, 0x9
	0x036118E0 ADD W0, W27, W15
	0x036118E4 SUB W0, W0, 0xA
	0x036118E8 CMP W0, W16
	0x036118EC B.CS 0x3611C68
	0x036118F0 UMADDL X1, X17, X13, X31
	0x036118F4 UBFM X1, X1, 0x23, 0x3F
	0x036118F8 MSUB W17, W1, W14, W17
	0x036118FC ADD X0, X26, W0, 0x1, SXTW
	0x03611900 SUB W15, W15, 0x1
	0x03611904 ORR W17, W17, 0x30
	0x03611908 CMP W15, 0x0

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X25, 0xDD0000
	011 Move W8, [X25+1076]
	012 Move W21, W5
	013 Move X19, X4
	014 Move W20, W3
	015 Move X23, X2
	016 Move W22, W1
	017 Move X24, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {27}
	022 Move X0, 0xB2A000
	023 Move X0, [X0+3720]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X25+1076], W8
	027 Compare X19, 0
	028 JumpIfEqual {103}
	029 Move W2, [X19+24]
	030 Move X0, X19
	031 Move W1, W31
	032 Move X3, X31
	033 Call Array.Clear, X0, X1, X2
	034 Subtract W22, W22, W21
	035 Compare X24, 0
	036 JumpIfEqual {54}
	037 Move W8, [X24+24]
	038 Compare W8, 0
	039 JumpIfEqual {54}
	040 Add X25, X24, 32
	041 Compare X23, 0
	042 JumpIfNotEqual {57}
	043 Move X20, [X31+64]
	044 Move X19, [X31+72]
	045 Move X22, [X31+48]
	046 Move X21, [X31+56]
	047 Move X24, [X31+32]
	048 Move X23, [X31+40]
	049 Move X26, [X31+16]
	050 Move X25, [X31+24]
	051 Move W0, W31
	052 Move X30, [X31+80]
	053 Return X0
	054 Move X25, X31
	055 Compare X23, 0
	056 JumpIfEqual {61}
	057 Move W8, [X23+24]
	058 Add X9, X23, 32
	059 NotImplemented "Instruction CMP not yet implemented."
	060 NotImplemented "Instruction CSEL not yet implemented."
	061 Move X26, 0xB2A000
	062 Move X26, [X26+3720]
	063 Move W8, [X19+24]
	064 Add X10, X19, 32
	065 Move X0, [X26]
	066 NotImplemented "Instruction CMP not yet implemented."
	067 NotImplemented "Instruction CSEL not yet implemented."
	068 Move W9, [X0+224]
	069 Compare W9, 0
	070 JumpIfNotEqual {72}
	071 Call 0x1C17DFC
	072 Add X2, X25, W21
	073 NotImplemented "Instruction CMP not yet implemented."
	074 Add W21, W22, W20
	075 Move X0, X23
	076 Move W1, W20
	077 Move W3, W22
	078 Move X0, X2
	079 Move W1, W22
	080 Move X2, X23
	081 Move W3, W20
	082 Move X4, X24
	083 Move W5, W21
	084 Call BigIntegerCalculator.Multiply, X0, X1, X2, X3, X4, X5
	085 Move X0, [X26]
	086 Move W8, [X0+224]
	087 Compare W8, 0
	088 JumpIfNotEqual {90}
	089 Call 0x1C17DFC
	090 Move X0, X19
	091 Move W1, W21
	092 Move X20, [X31+64]
	093 Move X19, [X31+72]
	094 Move X22, [X31+48]
	095 Move X21, [X31+56]
	096 Move X24, [X31+32]
	097 Move X23, [X31+40]
	098 Move X26, [X31+16]
	099 Move X25, [X31+24]
	100 Move X30, [X31+80]
	101 Call BigIntegerCalculator.ActualLength, X0, X1
	102 Return X0
	103 Call 0x1C17F20

Method: System.Int32 SubMod(System.UInt32[] left, System.Int32 leftLength, System.UInt32[] right, System.Int32 rightLength, System.UInt32[] modulus, System.Int32 k)

Disassembly:
	0x0361190C STRH W17, [X0 + 0x20]
	0x03611910 MOV W17, W1
	0x03611914 B.GT 0x36118E0
	0x03611918 ADD X11, X11, 0x1
	0x0361191C ADD W15, W27, W15
	0x03611920 CMP X11, X8
	0x03611924 SUB W27, W15, 0x9
	0x03611928 B.NE 0x36118C4
	0x0361192C CMP W10, W9
	0x03611930 B.CS 0x3611C68
	0x03611934 ADD X8, X28, X8, 0x2, LSL
	0x03611938 LDR W8, [X8 + 0x20]
	0x0361193C CBZ W8, 0x3611984
	0x03611940 CBZ X26, 0x3611BBC
	0x03611944 LDR W9, [X26 + 0x18]
	0x03611948 MOVZ W10, 0xCCCD
	0x0361194C MOVK W10, 0xCCCC0000
	0x03611950 MOVZ W11, 0xA
	0x03611954 SUB W27, W27, 0x1
	0x03611958 CMP W27, W9
	0x0361195C B.CS 0x3611C68
	0x03611960 UMADDL X12, X8, X10, X31
	0x03611964 UBFM X12, X12, 0x23, 0x3F
	0x03611968 MSUB W14, W12, W11, W8
	0x0361196C ADD X13, X26, W27, 0x1, SXTW
	0x03611970 ORR W14, W14, 0x30
	0x03611974 CMP W8, 0x9
	0x03611978 MOV W8, W12
	0x0361197C STRH W14, [X13 + 0x20]
	0x03611980 B.HI 0x3611954
	0x03611984 CBZ W23, 0x3611A10
	0x03611988 LDUR W23, [X29 - 0x18]
	0x0361198C SUB X28, X31, 0x100
	0x03611990 SUB W20, W19, W27
	0x03611994 ADD X31, X28, 0x0
	0x03611998 MOVZ W2, 0x100
	0x0361199C MOV X0, X28
	0x036119A0 MOV W1, W31
	0x036119A4 BL 0x3EB1B10
	0x036119A8 MOVZ W8, 0x80
	0x036119AC STP X31, X28, [X29 - 0x40]
	0x036119B0 STUR X8, [X29 - 0x30]
	0x036119B4 STUR W31, [X29 - 0x28]
	0x036119B8 UBFM W3, W23, 0x1F, 0x1F
	0x036119BC SUB X0, X29, 0x40
	0x036119C0 MOVZ W1, 0x1D
	0x036119C4 STR W27, [X31 - 0x10]!
	0x036119C8 LDUR X6, [X29 - 0x78]
	0x036119CC MOV W2, W20
	0x036119D0 MOV X4, X25
	0x036119D4 MOV X5, X24
	0x036119D8 MOV X7, X26
	0x036119DC BL 0x3611EB8
	0x036119E0 ADD X31, X31, 0x10
	0x036119E4 TBZ X22, 0x0, 0x3611A70
	0x036119E8 LDP X1, X2, [X29 - 0x70]
	0x036119EC LDUR X3, [X29 - 0x60]
	0x036119F0 SUB X0, X29, 0x40
	0x036119F4 BL 0x3611324
	0x036119F8 LDUR X9, [X29 - 0x80]
	0x036119FC MOV W8, W0
	0x03611A00 AND W8, W8, 0x1
	0x03611A04 MOV X0, X31
	0x03611A08 STRB W8, [X9]
	0x03611A0C B 0x361161C
	0x03611A10 LDUR W9, [X29 - 0x1C]
	0x03611A14 LDUR X23, [X29 - 0x80]
	0x03611A18 CMP W9, 0x1
	0x03611A1C B.LT 0x3611B34
	0x03611A20 LDUR X24, [X29 - 0x78]
	0x03611A24 SUB W8, W19, W27
	0x03611A28 CMP W9, W8
	0x03611A2C B.LE 0x3611B38
	0x03611A30 MOVZ W10, 0x30
	0x03611A34 CBZ X26, 0x3611BBC
	0x03611A38 LDR W11, [X26 + 0x18]
	0x03611A3C SUB W27, W27, 0x1
	0x03611A40 CMP W27, W11
	0x03611A44 B.CS 0x3611C68
	0x03611A48 ADD X11, X26, W27, 0x1, SXTW
	0x03611A4C CMP W9, 0x2
	0x03611A50 STRH W10, [X11 + 0x20]
	0x03611A54 SUB W11, W9, 0x1
	0x03611A58 B.LT 0x3611A68
	0x03611A5C CMP W11, W8
	0x03611A60 MOV W9, W11
	0x03611A64 B.GT 0x3611A34
	0x03611A68 STUR W11, [X29 - 0x1C]
	0x03611A6C B 0x3611B38
	0x03611A70 LDUR X8, [X29 - 0x60]
	0x03611A74 SUB X0, X29, 0x40
	0x03611A78 STR W31, [X8]
	0x03611A7C LDUR X8, [X29 - 0x80]
	0x03611A80 STRB W31, [X8]
	0x03611A84 BL 0x361140C
	0x03611A88 B 0x361161C
	0x03611A8C ADRP X8, 0xB0A000
	0x03611A90 LDR X8, [X8 + 0xBE0]
	0x03611A94 LDR X27, [X8]
	0x03611A98 ADRP X19, 0xDC8000
	0x03611A9C LDRB W8, [X19 + 0x762]
	0x03611AA0 CBNZ W8, 0x3611AB8
	0x03611AA4 ADRP X0, 0xB09000
	0x03611AA8 LDR X0, [X0 + 0x290]
	0x03611AAC BL 0x1C16CF4

ISIL:
	001 Move [X31-80], X30
	002 Move [X31+16], X26
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X25, 0xDD0000
	011 Move W8, [X25+1077]
	012 Move W21, W5
	013 Move X20, X4
	014 Move W24, W3
	015 Move X22, X2
	016 Move W23, W1
	017 Move X19, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {27}
	022 Move X0, 0xB2A000
	023 Move X0, [X0+3720]
	024 Call 0x1C17CF4
	025 Move W8, 1
	026 Move [X25+1077], W8
	027 NotImplemented "Instruction CMP not yet implemented."
	028 NotImplemented "Instruction CSEL not yet implemented."
	029 NotImplemented "Instruction CMP not yet implemented."
	030 NotImplemented "Instruction CSEL not yet implemented."
	031 Compare X19, 0
	032 JumpIfEqual {43}
	033 Move W8, [X19+24]
	034 Add X9, X19, 32
	035 NotImplemented "Instruction CMP not yet implemented."
	036 NotImplemented "Instruction CSEL not yet implemented."
	037 Compare X22, 0
	038 JumpIfEqual {46}
	039 Move W8, [X22+24]
	040 Add X9, X22, 32
	041 NotImplemented "Instruction CMP not yet implemented."
	042 NotImplemented "Instruction CSEL not yet implemented."
	043 Move X21, X31
	044 Compare X22, 0
	045 JumpIfNotEqual {39}
	046 Move X25, X31
	047 Move X26, 0xB2A000
	048 Move X26, [X26+3720]
	049 Compare X20, 0
	050 JumpIfEqual {55}
	051 Move W8, [X20+24]
	052 Add X9, X20, 32
	053 NotImplemented "Instruction CMP not yet implemented."
	054 NotImplemented "Instruction CSEL not yet implemented."
	055 Move X22, X31
	056 Move X0, [X26]
	057 Move W8, [X0+224]
	058 Compare W8, 0
	059 JumpIfNotEqual {61}
	060 Call 0x1C17DFC
	061 Move X0, X21
	062 Move W1, W23
	063 Move X2, X25
	064 Move W3, W24
	065 Call BigIntegerCalculator.SubtractSelf, X0, X1, X2, X3
	066 Move X0, X19
	067 Move W1, W23
	068 Call BigIntegerCalculator.ActualLength, X0, X1
	069 Compare X20, 0
	070 JumpIfEqual {121}
	071 Move W23, W0
	072 Move X0, [X26]
	073 Move W8, [X0+224]
	074 Compare W8, 0
	075 JumpIfNotEqual {77}
	076 Call 0x1C17DFC
	077 Move W3, [X20+24]
	078 NotImplemented "Instruction CMP not yet implemented."
	079 Subtract W8, W23, 1
	080 Move TEMP, X8
	081 And TEMP, TEMP, -2147483648
	082 Compare TEMP, -2147483648
	083 JumpIfEqual {89}
	084 Move W9, [X21]
	085 Move W10, [X22]
	086 NotImplemented "Instruction CMP not yet implemented."
	087 NotImplemented "Instruction CMP not yet implemented."
	088 Subtract W8, W8, 1
	089 Move X0, [X26]
	090 Move W8, [X0+224]
	091 Compare W8, 0
	092 JumpIfNotEqual {95}
	093 Call 0x1C17DFC
	094 Move W3, [X20+24]
	095 Move X0, X21
	096 Move W1, W23
	097 Move X2, X22
	098 Call BigIntegerCalculator.SubtractSelf, X0, X1, X2, X3
	099 Move X0, X19
	100 Move W1, W23
	101 Call BigIntegerCalculator.ActualLength, X0, X1
	102 Compare X19, 0
	103 JumpIfEqual {121}
	104 Move W8, [X19+24]
	105 Move X0, X19
	106 Move W1, W23
	107 Move X3, X31
	108 Subtract W2, W8, W23
	109 Call Array.Clear, X0, X1, X2
	110 Move W0, W23
	111 Move X20, [X31+64]
	112 Move X19, [X31+72]
	113 Move X22, [X31+48]
	114 Move X21, [X31+56]
	115 Move X24, [X31+32]
	116 Move X23, [X31+40]
	117 Move X26, [X31+16]
	118 Move X25, [X31+24]
	119 Move X30, [X31+80]
	120 Return X0
	121 Call 0x1C17F20

