Type: System.Globalization.FormatProvider/Number

Method: System.Void Int32ToDecChars(System.Char* buffer, ref System.Int32 index, System.UInt32 value, System.Int32 digits)

Disassembly:
	0x0361472C BL 0x3615A24
	0x03614730 LDRH W24, [X27 + 0x2]!
	0x03614734 CBNZ W24, 0x36146E4
	0x03614738 CBZ W26, 0x3614794
	0x0361473C ADRP X8, 0xB26000
	0x03614740 LDR X8, [X8 + 0xF08]
	0x03614744 LDR X9, [X31 + 0x8]
	0x03614748 LDR X0, [X8]
	0x0361474C LDR W19, [X9 + 0x4]
	0x03614750 LDR W8, [X0 + 0xE0]
	0x03614754 CBNZ W8, 0x361475C
	0x03614758 BL 0x1C16DFC
	0x0361475C SUB W2, W19, 0x1
	0x03614760 MOV X0, X21
	0x03614764 MOV X1, X22
	0x03614768 MOV W3, W29
	0x0361476C LDP X20, X19, [X31 + 0x60]
	0x03614770 LDP X22, X21, [X31 + 0x50]
	0x03614774 LDP X24, X23, [X31 + 0x40]
	0x03614778 LDP X26, X25, [X31 + 0x30]
	0x0361477C LDP X28, X27, [X31 + 0x20]
	0x03614780 LDP X29, X30, [X31 + 0x10]
	0x03614784 MOVZ W4, 0x2

ISIL:
	001 NotImplemented "Instruction CMP not yet implemented."
	002 Compare W2, 0
	003 JumpIfNotEqual {5}
	004 Return 
	005 Move W8, [X1]
	006 Move W9, 0xCCCD
	007 Subtract W11, W3, 2
	008 NotImplemented "Instruction MOVK not yet implemented."
	009 Move W10, 10
	010 Move W13, W11
	011 NotImplemented "Instruction UMADDL not yet implemented."
	012 Move W12, W2
	013 Move X2, X11
	014 ShiftRight X2, 35
	015 And X2, X2, 0x7FFFFFFF
	016 NotImplemented "Instruction MSUB not yet implemented."
	017 Subtract W8, W8, 1
	018 Or W11, W11, 48
	019 NotImplemented "Instruction STRH not yet implemented."
	020 Subtract W11, W13, 1
	021 Move TEMP, X13
	022 And TEMP, TEMP, -2147483648
	023 Compare TEMP, -2147483648
	024 JumpIfNotEqual {10}
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move [X1], W8
	027 Return 

Method: System.Char ParseFormatSpecifier(System.ReadOnlySpan`1<System.Char> format, out System.Int32 digits)

Disassembly:
	0x03612FF8 CMP W25, 0x45
	0x03612FFC B.NE 0x3613038
	0x03613000 LDUR W8, [X29 - 0x5C]
	0x03613004 TBZ X8, 0x0, 0x3613088
	0x03613008 LDUR X12, [X29 - 0x68]
	0x0361300C LDUR W11, [X29 - 0x3C]
	0x03613010 CMP W26, W20
	0x03613014 B.GE 0x36130DC
	0x03613018 LDUR X8, [X29 - 0x58]
	0x0361301C LDRH W8, [X8, W26, SXTW]
	0x03613020 CMP W8, 0x30
	0x03613024 B.NE 0x36130DC
	0x03613028 MOV W5, W31
	0x0361302C ADD W8, W11, 0x2
	0x03613030 MOVZ W9, 0x1
	0x03613034 B 0x36134B4
	0x03613038 ADRP X8, 0xDCD000
	0x0361303C LDRB W8, [X8 + 0x453]
	0x03613040 CBNZ W8, 0x361305C
	0x03613044 ADRP X0, 0xB0F000
	0x03613048 LDR X0, [X0 + 0x588]
	0x0361304C BL 0x1C16CF4
	0x03613050 ADRP X8, 0xDCD000
	0x03613054 MOVZ W9, 0x1
	0x03613058 STRB W9, [X8 + 0x453]
	0x0361305C LDRSW X8, [X22 + 0x18]
	0x03613060 LDR W9, [X22 + 0x10]
	0x03613064 CMP W8, W9
	0x03613068 B.GE 0x3612FD4
	0x0361306C CMP W8, W9
	0x03613070 B.CS 0x3613720
	0x03613074 LDR X9, [X22 + 0x8]
	0x03613078 ADD W10, W8, 0x1
	0x0361307C STRH W25, [X9, X8, LSL #1]
	0x03613080 STR W10, [X22 + 0x18]
	0x03613084 B 0x36135CC
	0x03613088 ADRP X8, 0xDCD000
	0x0361308C LDRB W8, [X8 + 0x453]
	0x03613090 LDUR W21, [X29 - 0x3C]
	0x03613094 CBNZ W8, 0x36130B0
	0x03613098 ADRP X0, 0xB0F000
	0x0361309C LDR X0, [X0 + 0x588]
	0x036130A0 BL 0x1C16CF4
	0x036130A4 ADRP X8, 0xDCD000
	0x036130A8 MOVZ W9, 0x1
	0x036130AC STRB W9, [X8 + 0x453]
	0x036130B0 LDRSW X8, [X22 + 0x18]
	0x036130B4 LDR W9, [X22 + 0x10]
	0x036130B8 CMP W8, W9
	0x036130BC B.GE 0x36131F8
	0x036130C0 CMP W8, W9
	0x036130C4 B.CS 0x3613720
	0x036130C8 LDR X9, [X22 + 0x8]
	0x036130CC ADD W10, W8, 0x1
	0x036130D0 STRH W25, [X9, X8, LSL #1]
	0x036130D4 STR W10, [X22 + 0x18]
	0x036130D8 B 0x3613204
	0x036130DC ADD W8, W11, 0x2
	0x036130E0 CMP W8, W20
	0x036130E4 B.GE 0x36134F4
	0x036130E8 LDUR X9, [X29 - 0x58]
	0x036130EC LDRH W9, [X9, W26, SXTW]
	0x036130F0 CMP W9, 0x2D
	0x036130F4 B.EQ 0x361349C
	0x036130F8 CMP W9, 0x2B
	0x036130FC B.NE 0x36134F4
	0x03613100 LDUR X9, [X29 - 0x58]
	0x03613104 LDRH W9, [X9, W8, SXTW]
	0x03613108 CMP W9, 0x30
	0x0361310C B.NE 0x36134F4
	0x03613110 MOV W9, W31
	0x03613114 MOVZ W5, 0x1
	0x03613118 B 0x36134B4
	0x0361311C CBZ X21, 0x3613724
	0x03613120 ADRP X8, 0xDCD000
	0x03613124 LDRB W8, [X8 + 0x455]
	0x03613128 LDR X25, [X21 + 0x90]
	0x0361312C CBNZ W8, 0x3612F28
	0x03613130 B 0x3612F10
	0x03613134 LDUR W9, [X29 - 0x7C]
	0x03613138 CMP W28, 0x0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xDCE000
	007 Move W8, [X22+1082]
	008 Move X19, X2
	009 Move X20, X1
	010 Move X21, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {20}
	015 Move X0, 0xB10000
	016 Move X0, [X0+40]
	017 Call 0x1C17CF4
	018 Move W8, 1
	019 Move [X22+1082], W8
	020 NotImplemented "Instruction CMP not yet implemented."
	021 NotImplemented "Instruction LDRH not yet implemented."
	022 And W8, W0, 0xFFFFFFDF
	023 Subtract W8, W8, 65
	024 NotImplemented "Instruction CMP not yet implemented."
	025 NotImplemented "Instruction CMP not yet implemented."
	026 NotImplemented "Instruction CMP not yet implemented."
	027 NotImplemented "Instruction CMP not yet implemented."
	028 NotImplemented "Instruction LDRH not yet implemented."
	029 Subtract W8, W8, 48
	030 NotImplemented "Instruction CMP not yet implemented."
	031 NotImplemented "Instruction LDRH not yet implemented."
	032 Subtract W9, W9, 48
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move W10, 10
	035 NotImplemented "Instruction MADD not yet implemented."
	036 Move TEMP, 0
	037 Not TEMP
	038 Move W8, TEMP
	039 Move [X19], W8
	040 Move TEMP, 0
	041 Not TEMP
	042 Move W8, TEMP
	043 NotImplemented "Instruction LDRH not yet implemented."
	044 Subtract W8, W8, 48
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Move W8, W31
	047 Move W10, 1
	048 Move W9, 10
	049 NotImplemented "Instruction CMP not yet implemented."
	050 Move X11, W10
	051 NotImplemented "Instruction LDRH not yet implemented."
	052 Subtract W12, W10, 48
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Add W10, W11, 1
	055 NotImplemented "Instruction CMP not yet implemented."
	056 NotImplemented "Instruction MADD not yet implemented."
	057 NotImplemented "Instruction CMP not yet implemented."
	058 NotImplemented "Instruction CMP not yet implemented."
	059 NotImplemented "Instruction LDRH not yet implemented."
	060 Compare W9, 0
	061 JumpIfEqual {70}
	062 Move TEMP, 0
	063 Not TEMP
	064 Move W8, TEMP
	065 Move [X19], W8
	066 Compare W0, 0
	067 JumpIfEqual {69}
	068 Move W0, W31
	069 Move W0, 71
	070 Move [X19], W8
	071 Move X20, [X31+32]
	072 Move X19, [X31+40]
	073 Move X22, [X31+16]
	074 Move X21, [X31+24]
	075 Move X30, [X31+48]
	076 Return X0
	077 Call 0x1C17F28

Method: System.Void NumberToString(ref System.Text.ValueStringBuilder sb, ref System.Globalization.FormatProvider/Number/NumberBuffer number, System.Char format, System.Int32 nMaxDigits, System.Globalization.NumberFormatInfo info, System.Boolean isDecimal)

Disassembly:
	0x0361313C CSET W8, NE
	0x03613140 ORR W8, W9, W8, 0x0
	0x03613144 TBNZ X8, 0x0, 0x36135CC
	0x03613148 LDUR W9, [X29 - 0x34]
	0x0361314C LDUR W8, [X29 - 0x78]
	0x03613150 TBNZ X8, 0x1F, 0x3613168
	0x03613154 LDUR W8, [X29 - 0x1C]
	0x03613158 CMP W8, W9
	0x0361315C B.LE 0x3613474
	0x03613160 LDRH W8, [X27]
	0x03613164 CBZ W8, 0x3613474
	0x03613168 CBZ X21, 0x3613724
	0x0361316C ADRP X8, 0xDCD000
	0x03613170 LDRB W8, [X8 + 0x455]
	0x03613174 LDR X25, [X21 + 0x38]
	0x03613178 CBNZ W8, 0x3613194
	0x0361317C ADRP X0, 0xB0F000
	0x03613180 LDR X0, [X0 + 0x588]
	0x03613184 BL 0x1C16CF4
	0x03613188 MOVZ W8, 0x1
	0x0361318C ADRP X9, 0xDCD000
	0x03613190 STRB W8, [X9 + 0x455]
	0x03613194 CBZ X25, 0x3613724
	0x03613198 LDR W8, [X25 + 0x10]
	0x0361319C CMP W8, 0x1
	0x036131A0 B.NE 0x3613480
	0x036131A4 LDRSW X21, [X22 + 0x18]
	0x036131A8 LDR W8, [X22 + 0x10]
	0x036131AC CMP W21, W8
	0x036131B0 B.GE 0x3613480
	0x036131B4 CMP W21, W8
	0x036131B8 B.CS 0x3613720
	0x036131BC LDR X23, [X22 + 0x8]
	0x036131C0 MOV X0, X25
	0x036131C4 MOV W1, W31
	0x036131C8 MOV X2, X31
	0x036131CC BL 0x3222A1C
	0x036131D0 ADD W8, W21, 0x1
	0x036131D4 MOV W28, W31
	0x036131D8 STRH W0, [X23, X21, LSL #1]
	0x036131DC STR W8, [X22 + 0x18]
	0x036131E0 B 0x3613490
	0x036131E4 LDUR W8, [X29 - 0x74]
	0x036131E8 ADD W24, W24, 0x1
	0x036131EC CMP W28, W8
	0x036131F0 B.LE 0x36132A8
	0x036131F4 B 0x36133C8
	0x036131F8 MOV X0, X22
	0x036131FC MOV W1, W25
	0x03613200 BL 0x3615A24
	0x03613204 CMP W26, W20
	0x03613208 B.GE 0x36135C8
	0x0361320C LDUR X8, [X29 - 0x58]
	0x03613210 LDRH W25, [X8, W26, SXTW]
	0x03613214 CMP W25, 0x2D
	0x03613218 B.EQ 0x3613224
	0x0361321C CMP W25, 0x2B
	0x03613220 B.NE 0x36133DC
	0x03613224 ADRP X8, 0xDCD000
	0x03613228 LDRB W8, [X8 + 0x453]
	0x0361322C CBNZ W8, 0x3613248
	0x03613230 ADRP X0, 0xB0F000
	0x03613234 LDR X0, [X0 + 0x588]
	0x03613238 BL 0x1C16CF4
	0x0361323C ADRP X8, 0xDCD000
	0x03613240 MOVZ W9, 0x1
	0x03613244 STRB W9, [X8 + 0x453]
	0x03613248 LDRSW X8, [X22 + 0x18]
	0x0361324C LDR W9, [X22 + 0x10]
	0x03613250 ADD W26, W21, 0x2
	0x03613254 CMP W8, W9
	0x03613258 B.GE 0x36133D0
	0x0361325C CMP W8, W9
	0x03613260 B.CS 0x3613720
	0x03613264 LDR X9, [X22 + 0x8]
	0x03613268 ADD W10, W8, 0x1
	0x0361326C STRH W25, [X9, X8, LSL #1]
	0x03613270 STR W10, [X22 + 0x18]
	0x03613274 B 0x36133DC
	0x03613278 LDUR X9, [X29 - 0x58]
	0x0361327C SBFM X8, X23, 0x1F, 0x3F
	0x03613280 LDUR W24, [X29 - 0x4C]
	0x03613284 LDUR W28, [X29 - 0x38]
	0x03613288 LDRH W8, [X8, X9, LSL]
	0x0361328C CMP W8, 0x0
	0x03613290 CSET W8, NE
	0x03613294 SUB W26, W8, W21
	0x03613298 B 0x36135CC
	0x0361329C LDUR W8, [X29 - 0x78]
	0x036132A0 CMP W28, W8
	0x036132A4 B.LE 0x36133C8
	0x036132A8 MOVZ W25, 0x30
	0x036132AC ADRP X8, 0xDCD000
	0x036132B0 LDRB W8, [X8 + 0x453]
	0x036132B4 CBNZ W8, 0x36132D0
	0x036132B8 ADRP X0, 0xB0F000
	0x036132BC LDR X0, [X0 + 0x588]
	0x036132C0 BL 0x1C16CF4
	0x036132C4 ADRP X8, 0xDCD000
	0x036132C8 MOVZ W9, 0x1
	0x036132CC STRB W9, [X8 + 0x453]
	0x036132D0 LDRSW X8, [X22 + 0x18]
	0x036132D4 LDR W9, [X22 + 0x10]
	0x036132D8 CMP W8, W9
	0x036132DC B.GE 0x36132FC
	0x036132E0 CMP W8, W9
	0x036132E4 B.CS 0x3613720
	0x036132E8 LDR X9, [X22 + 0x8]
	0x036132EC ADD W10, W8, 0x1
	0x036132F0 STRH W25, [X9, X8, LSL #1]
	0x036132F4 STR W10, [X22 + 0x18]
	0x036132F8 B 0x3613308
	0x036132FC MOV X0, X22
	0x03613300 MOV W1, W25
	0x03613304 BL 0x3615A24
	0x03613308 CMP W28, 0x2
	0x0361330C CSET W8, LT
	0x03613310 TBNZ X19, 0x1F, 0x36133C8
	0x03613314 LDUR W9, [X29 - 0x28]
	0x03613318 ORR W8, W8, W9, 0x0
	0x0361331C TBNZ X8, 0x0, 0x36133C8
	0x03613320 LDUR W8, [X29 - 0x10]
	0x03613324 CMP W19, W8
	0x03613328 B.CS 0x3613720
	0x0361332C LDUR X8, [X29 - 0x18]
	0x03613330 LDR W8, [X8, W19, UXTW]
	0x03613334 ADD W8, W8, 0x1
	0x03613338 CMP W28, W8
	0x0361333C B.NE 0x36133C8
	0x03613340 CBZ X21, 0x3613724
	0x03613344 ADRP X8, 0xDCD000
	0x03613348 LDRB W8, [X8 + 0x455]
	0x0361334C LDR X25, [X21 + 0x40]
	0x03613350 CBNZ W8, 0x361336C
	0x03613354 ADRP X0, 0xB0F000
	0x03613358 LDR X0, [X0 + 0x588]
	0x0361335C BL 0x1C16CF4
	0x03613360 MOVZ W8, 0x1
	0x03613364 ADRP X9, 0xDCD000
	0x03613368 STRB W8, [X9 + 0x455]
	0x0361336C CBZ X25, 0x3613724
	0x03613370 LDR W8, [X25 + 0x10]
	0x03613374 CMP W8, 0x1
	0x03613378 B.NE 0x36133B8
	0x0361337C LDRSW X21, [X22 + 0x18]
	0x03613380 LDR W8, [X22 + 0x10]
	0x03613384 CMP W21, W8
	0x03613388 B.GE 0x36133B8
	0x0361338C CMP W21, W8
	0x03613390 B.CS 0x3613720
	0x03613394 LDR X23, [X22 + 0x8]
	0x03613398 MOV X0, X25
	0x0361339C MOV W1, W31
	0x036133A0 MOV X2, X31
	0x036133A4 BL 0x3222A1C
	0x036133A8 ADD W8, W21, 0x1
	0x036133AC STRH W0, [X23, X21, LSL #1]
	0x036133B0 STR W8, [X22 + 0x18]
	0x036133B4 B 0x36133C4
	0x036133B8 MOV X0, X22
	0x036133BC MOV X1, X25
	0x036133C0 BL 0x3615B50
	0x036133C4 SUB W19, W19, 0x1
	0x036133C8 SUB W28, W28, 0x1
	0x036133CC B 0x36135CC
	0x036133D0 MOV X0, X22
	0x036133D4 MOV W1, W25
	0x036133D8 BL 0x3615A24
	0x036133DC CMP W26, W20
	0x036133E0 B.GE 0x36135C8
	0x036133E4 LDUR X8, [X29 - 0x58]
	0x036133E8 ADD X21, X8, W26, 0x1, SXTW
	0x036133EC LDUR X8, [X29 - 0x88]
	0x036133F0 SUB X23, X8, W26, SXTW
	0x036133F4 LDRH W8, [X21]
	0x036133F8 CMP W8, 0x30
	0x036133FC B.NE 0x36135C8
	0x03613400 ADRP X8, 0xDCD000
	0x03613404 LDRB W8, [X8 + 0x453]
	0x03613408 CBNZ W8, 0x3613424
	0x0361340C ADRP X0, 0xB0F000
	0x03613410 LDR X0, [X0 + 0x588]
	0x03613414 BL 0x1C16CF4
	0x03613418 ADRP X8, 0xDCD000
	0x0361341C MOVZ W9, 0x1
	0x03613420 STRB W9, [X8 + 0x453]
	0x03613424 LDRSW X8, [X22 + 0x18]
	0x03613428 LDR W9, [X22 + 0x10]
	0x0361342C CMP W8, W9
	0x03613430 B.GE 0x3613454
	0x03613434 CMP W8, W9
	0x03613438 B.CS 0x3613720
	0x0361343C LDR X9, [X22 + 0x8]
	0x03613440 ADD W10, W8, 0x1
	0x03613444 MOVZ W11, 0x30
	0x03613448 STRH W11, [X9, X8, LSL #1]
	0x0361344C STR W10, [X22 + 0x18]
	0x03613450 B 0x3613460
	0x03613454 MOVZ W1, 0x30
	0x03613458 MOV X0, X22
	0x0361345C BL 0x3615A24
	0x03613460 ADD W26, W26, 0x1
	0x03613464 SUBS X23, X23, 0x1
	0x03613468 ADD X21, X21, 0x2
	0x0361346C B.NE 0x36133F4
	0x03613470 B 0x36135E0
	0x03613474 STUR W31, [X29 - 0x7C]
	0x03613478 MOV W28, W31
	0x0361347C B 0x36135CC
	0x03613480 MOV X0, X22
	0x03613484 MOV X1, X25
	0x03613488 BL 0x3615B50
	0x0361348C MOV W28, W31
	0x03613490 MOVZ W8, 0x1
	0x03613494 STUR W8, [X29 - 0x7C]
	0x03613498 B 0x36135CC
	0x0361349C LDUR X9, [X29 - 0x58]
	0x036134A0 LDRH W9, [X9, W8, SXTW]
	0x036134A4 CMP W9, 0x30
	0x036134A8 B.NE 0x36134F4
	0x036134AC MOV W9, W31
	0x036134B0 MOV W5, W31
	0x036134B4 CMP W8, W20
	0x036134B8 B.GE 0x361355C
	0x036134BC LDUR W10, [X29 - 0x8C]
	0x036134C0 ADD W10, W10, W9
	0x036134C4 SUB W10, W10, W11
	0x036134C8 LDUR X11, [X29 - 0x58]
	0x036134CC LDRH W11, [X11, W8, SXTW]
	0x036134D0 CMP W11, 0x30
	0x036134D4 B.NE 0x361355C
	0x036134D8 ADD W8, W8, 0x1
	0x036134DC CMP W20, W8
	0x036134E0 ADD W9, W9, 0x1
	0x036134E4 B.NE 0x36134C8
	0x036134E8 MOV W9, W10
	0x036134EC MOV W26, W20
	0x036134F0 B 0x3613560
	0x036134F4 ADRP X8, 0xDCD000
	0x036134F8 LDRB W8, [X8 + 0x453]
	0x036134FC CBNZ W8, 0x3613518
	0x03613500 ADRP X0, 0xB0F000
	0x03613504 LDR X0, [X0 + 0x588]
	0x03613508 BL 0x1C16CF4
	0x0361350C ADRP X8, 0xDCD000
	0x03613510 MOVZ W9, 0x1
	0x03613514 STRB W9, [X8 + 0x453]
	0x03613518 LDRSW X8, [X22 + 0x18]
	0x0361351C LDR W9, [X22 + 0x10]
	0x03613520 CMP W8, W9
	0x03613524 B.GE 0x3613544
	0x03613528 CMP W8, W9
	0x0361352C B.CS 0x3613720
	0x03613530 LDR X9, [X22 + 0x8]
	0x03613534 ADD W10, W8, 0x1
	0x03613538 STRH W25, [X9, X8, LSL #1]
	0x0361353C STR W10, [X22 + 0x18]
	0x03613540 B 0x3613550
	0x03613544 MOV X0, X22
	0x03613548 MOV W1, W25
	0x0361354C BL 0x3615A24
	0x03613550 MOVZ W8, 0x1
	0x03613554 STUR W8, [X29 - 0x5C]
	0x03613558 B 0x36135CC
	0x0361355C MOV W26, W8
	0x03613560 LDUR X8, [X29 - 0x30]
	0x03613564 CMP W9, 0xA
	0x03613568 MOVZ W10, 0xA
	0x0361356C CSEL W4, W9, W10, LT
	0x03613570 LDRH W8, [X8]
	0x03613574 CBZ W8, 0x3613588
	0x03613578 LDR W8, [X12 + 0x4]
	0x0361357C LDUR W9, [X29 - 0x34]
	0x03613580 SUB W21, W8, W9
	0x03613584 B 0x361358C
	0x03613588 MOV W21, W31
	0x0361358C ADRP X8, 0xB27000
	0x03613590 LDR X8, [X8 + 0xF08]
	0x03613594 LDR X0, [X8]
	0x03613598 LDR W8, [X0 + 0xE0]
	0x0361359C CBNZ W8, 0x36135B4
	0x036135A0 STUR W5, [X29 - 0x38]
	0x036135A4 MOV W23, W4
	0x036135A8 BL 0x1C16DFC
	0x036135AC LDUR W5, [X29 - 0x38]
	0x036135B0 MOV W4, W23
	0x036135B4 LDUR X1, [X29 - 0x48]
	0x036135B8 MOV X0, X22
	0x036135BC MOV W2, W21
	0x036135C0 MOV W3, W25
	0x036135C4 BL 0x3614C58
	0x036135C8 STUR W31, [X29 - 0x5C]
	0x036135CC CMP W26, W20
	0x036135D0 STUR W24, [X29 - 0x4C]
	0x036135D4 MOV W8, W26
	0x036135D8 STUR W26, [X29 - 0x3C]
	0x036135DC B.LT 0x3612C44
	0x036135E0 LDUR X8, [X29 - 0x70]
	0x036135E4 LDR X8, [X8 + 0x28]
	0x036135E8 LDUR X9, [X29 - 0x8]
	0x036135EC CMP X8, X9
	0x036135F0 B.NE 0x3613728
	0x036135F4 ADD X31, X29, 0x0
	0x036135F8 LDP X20, X19, [X31 + 0x50]
	0x036135FC LDP X22, X21, [X31 + 0x40]
	0x03613600 LDP X24, X23, [X31 + 0x30]
	0x03613604 LDP X26, X25, [X31 + 0x20]
	0x03613608 LDP X28, X27, [X31 + 0x10]
	0x0361360C LDP X29, X30, [X31], #0x60
	0x03613610 RET
	0x03613614 MOV W26, W31
	0x03613618 LDUR W10, [X29 - 0x74]
	0x0361361C AND W9, W9, W9, 0x1F
	0x03613620 ADD W9, W9, W28
	0x03613624 MOVN W19, 0x0
	0x03613628 CMP W10, W9
	0x0361362C CSEL W21, W10, W9, GT
	0x03613630 CBZ W26, 0x3612B5C
	0x03613634 CMP W21, W26
	0x03613638 B.LE 0x3612B5C
	0x0361363C MOV W24, W31
	0x03613640 SUB W11, W8, 0x1
	0x03613644 MOVN W19, 0x0
	0x03613648 MOV W27, W26
	0x0361364C STUR X0, [X29 - 0x58]
	0x03613650 LDUR W1, [X29 - 0x10]
	0x03613654 ADD W19, W19, 0x1
	0x03613658 CMP W19, W1
	0x0361365C B.LT 0x36136D8
	0x03613660 ADRP X8, 0xAE1000
	0x03613664 LDR X8, [X8 + 0xE58]
	0x03613668 UBFM W1, W1, 0x1F, 0x1E
	0x0361366C MOV X23, X20
	0x03613670 MOV W20, W11
	0x03613674 LDR X0, [X8]
	0x03613678 BL 0x1C16D6C
	0x0361367C ADRP X8, 0xB14000
	0x03613680 LDR X8, [X8 + 0x8E0]
	0x03613684 MOV X25, X0
	0x03613688 LDR X1, [X8]
	0x0361368C BL 0x25FC3C4
	0x03613690 ADRP X8, 0xB14000

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+16], X30
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X25, 0xDCE000
	013 Move W8, [X25+1083]
	014 Move W24, W5
	015 Move X19, X4
	016 Move W22, W3
	017 Move W23, W2
	018 Move X20, X1
	019 Move X21, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {29}
	024 Move X0, 0xB28000
	025 Move X0, [X0+3848]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X25+1083], W8
	029 And W8, W23, 0xFFFF
	030 NotImplemented "Instruction CMP not yet implemented."
	031 Subtract W8, W8, 67
	032 NotImplemented "Instruction CMP not yet implemented."
	033 Move X9, -44544000
	034 Add X9, X9, 740
	035 NotImplemented "Instruction ADR not yet implemented."
	036 NotImplemented "Instruction LDRH not yet implemented."
	037 Add X10, X10, X11
	038 CallNoReturn X10
	039 Subtract W8, W8, 99
	040 NotImplemented "Instruction CMP not yet implemented."
	041 Move X9, -44544000
	042 Add X9, X9, 712
	043 NotImplemented "Instruction ADR not yet implemented."
	044 NotImplemented "Instruction LDRH not yet implemented."
	045 Add X10, X10, X11
	046 CallNoReturn X10
	047 Move TEMP, X22
	048 And TEMP, TEMP, -2147483648
	049 Compare TEMP, -2147483648
	050 JumpIfNotEqual {54}
	051 Compare X19, 0
	052 JumpIfEqual {389}
	053 Move W22, [X19+176]
	054 Move X8, 0xB28000
	055 Move X8, [X8+3848]
	056 Move W23, [X20+4]
	057 Move X0, [X8]
	058 Move W8, [X0+224]
	059 Compare W8, 0
	060 JumpIfNotEqual {62}
	061 Call 0x1C17DFC
	062 Add W1, W23, W22
	063 Move X0, X20
	064 Call Number.RoundNumber, X0, X1
	065 Move X0, X21
	066 Move X1, X20
	067 Move W2, W22
	068 Move W3, W22
	069 Move X4, X19
	070 Move X20, [X31+80]
	071 Move X19, [X31+88]
	072 Move X22, [X31+64]
	073 Move X21, [X31+72]
	074 Move X24, [X31+48]
	075 Move X23, [X31+56]
	076 Move X26, [X31+32]
	077 Move X25, [X31+40]
	078 Move X30, [X31+16]
	079 Move X27, [X31+24]
	080 Add X31, X31, 96
	081 Call Number.FormatCurrency, X0, X1, X2, X3, X4
	082 Return 
	083 Move X25, 0xB28000
	084 Move X25, [X25+3848]
	085 NotImplemented "Instruction CMP not yet implemented."
	086 Move W9, 7
	087 NotImplemented "Instruction CSINC not yet implemented."
	088 Move X0, [X25]
	089 Move W8, [X0+224]
	090 Compare W8, 0
	091 JumpIfNotEqual {93}
	092 Call 0x1C17DFC
	093 Move X0, X20
	094 Move W1, W22
	095 Call Number.RoundNumber, X0, X1
	096 Move W8, [X20+8]
	097 Compare W8, 0
	098 JumpIfEqual {264}
	099 Compare X19, 0
	100 JumpIfEqual {389}
	101 Move X26, 0xDCE000
	102 Move W8, [X26+1109]
	103 Move X24, [X19+48]
	104 Compare W8, 0
	105 JumpIfNotEqual {111}
	106 Move X0, 0xB10000
	107 Move X0, [X0+1416]
	108 Call 0x1C17CF4
	109 Move W8, 1
	110 Move [X26+1109], W8
	111 Compare X24, 0
	112 JumpIfEqual {389}
	113 Move W8, [X24+16]
	114 NotImplemented "Instruction CMP not yet implemented."
	115 NotImplemented "Instruction LDRSW not yet implemented."
	116 Move W8, [X21+16]
	117 NotImplemented "Instruction CMP not yet implemented."
	118 NotImplemented "Instruction CMP not yet implemented."
	119 Move X27, [X21+8]
	120 Move X0, X24
	121 Move W1, W31
	122 Move X2, X31
	123 Call String.get_Chars, X0, X1
	124 Add W8, W26, 1
	125 NotImplemented "Instruction STRH not yet implemented."
	126 Move [X21+24], W8
	127 Move TEMP, X22
	128 And TEMP, TEMP, -2147483648
	129 Compare TEMP, -2147483648
	130 JumpIfNotEqual {134}
	131 Compare X19, 0
	132 JumpIfEqual {389}
	133 Move W22, [X19+172]
	134 Move X24, 0xB28000
	135 Move X24, [X24+3848]
	136 Move W23, [X20+4]
	137 Move X0, [X24]
	138 Move W8, [X0+224]
	139 Compare W8, 0
	140 JumpIfNotEqual {142}
	141 Call 0x1C17DFC
	142 Add W1, W23, W22
	143 Move X0, X20
	144 Call Number.RoundNumber, X0, X1
	145 Move W8, [X20+8]
	146 Compare W8, 0
	147 JumpIfEqual {290}
	148 Compare X19, 0
	149 JumpIfEqual {389}
	150 Move X25, 0xDCE000
	151 Move W8, [X25+1109]
	152 Move X23, [X19+48]
	153 Compare W8, 0
	154 JumpIfNotEqual {160}
	155 Move X0, 0xB10000
	156 Move X0, [X0+1416]
	157 Call 0x1C17CF4
	158 Move W8, 1
	159 Move [X25+1109], W8
	160 Compare X23, 0
	161 JumpIfEqual {389}
	162 Move W8, [X23+16]
	163 NotImplemented "Instruction CMP not yet implemented."
	164 NotImplemented "Instruction LDRSW not yet implemented."
	165 Move W8, [X21+16]
	166 NotImplemented "Instruction CMP not yet implemented."
	167 NotImplemented "Instruction CMP not yet implemented."
	168 Move X26, [X21+8]
	169 Move X0, X23
	170 Move W1, W31
	171 Move X2, X31
	172 Call String.get_Chars, X0, X1
	173 Add W8, W25, 1
	174 NotImplemented "Instruction STRH not yet implemented."
	175 Move [X21+24], W8
	176 NotImplemented "Instruction CMP not yet implemented."
	177 Add W31, W22, 1
	178 Move TEMP, X24
	179 And TEMP, TEMP, 1
	180 Compare TEMP, 1
	181 JumpIfNotEqual {317}
	182 Move X8, [X20+16]
	183 NotImplemented "Instruction LDRH not yet implemented."
	184 Compare W8, 0
	185 JumpIfNotEqual {187}
	186 Move [X20+8], W31
	187 Move W24, 1
	188 Move W22, 29
	189 Move TEMP, X22
	190 And TEMP, TEMP, -2147483648
	191 Compare TEMP, -2147483648
	192 JumpIfNotEqual {196}
	193 Compare X19, 0
	194 JumpIfEqual {389}
	195 Move W22, [X19+172]
	196 Move X8, 0xB28000
	197 Move X8, [X8+3848]
	198 Move W23, [X20+4]
	199 Move X0, [X8]
	200 Move W8, [X0+224]
	201 Compare W8, 0
	202 JumpIfNotEqual {204}
	203 Call 0x1C17DFC
	204 Add W1, W23, W22
	205 Move X0, X20
	206 Call Number.RoundNumber, X0, X1
	207 Move X0, X21
	208 Move X1, X20
	209 Move W3, W22
	210 Move X4, X19
	211 Move X20, [X31+80]
	212 Move X19, [X31+88]
	213 Move X22, [X31+64]
	214 Move X21, [X31+72]
	215 Move X24, [X31+48]
	216 Move X23, [X31+56]
	217 Move X26, [X31+32]
	218 Move X25, [X31+40]
	219 Move X30, [X31+16]
	220 Move X27, [X31+24]
	221 Add X31, X31, 96
	222 Call Number.FormatNumber, X0, X1, X2, X3, X4
	223 Return 
	224 Move TEMP, X22
	225 And TEMP, TEMP, -2147483648
	226 Compare TEMP, -2147483648
	227 JumpIfNotEqual {231}
	228 Compare X19, 0
	229 JumpIfEqual {389}
	230 Move W22, [X19+200]
	231 Move W8, [X20+4]
	232 Add W23, W8, 2
	233 Move [X20+4], W23
	234 Move X8, 0xB28000
	235 Move X8, [X8+3848]
	236 Move X0, [X8]
	237 Move W8, [X0+224]
	238 Compare W8, 0
	239 JumpIfNotEqual {241}
	240 Call 0x1C17DFC
	241 Add W1, W23, W22
	242 Move X0, X20
	243 Call Number.RoundNumber, X0, X1
	244 Move X0, X21
	245 Move X1, X20
	246 Move W3, W22
	247 Move X4, X19
	248 Move X20, [X31+80]
	249 Move X19, [X31+88]
	250 Move X22, [X31+64]
	251 Move X21, [X31+72]
	252 Move X24, [X31+48]
	253 Move X23, [X31+56]
	254 Move X26, [X31+32]
	255 Move X25, [X31+40]
	256 Move X30, [X31+16]
	257 Move X27, [X31+24]
	258 Add X31, X31, 96
	259 Call Number.FormatPercent, X0, X1, X2, X3, X4
	260 Return 
	261 Move X0, X21
	262 Move X1, X24
	263 Call ValueStringBuilder.AppendSlow, X0, X1
	264 Move X0, [X25]
	265 Move W8, [X0+224]
	266 Compare W8, 0
	267 JumpIfNotEqual {269}
	268 Call 0x1C17DFC
	269 Move X0, X21
	270 Move X1, X20
	271 Move W3, W22
	272 Move X4, X19
	273 Move W5, W23
	274 Move X20, [X31+80]
	275 Move X19, [X31+88]
	276 Move X22, [X31+64]
	277 Move X21, [X31+72]
	278 Move X24, [X31+48]
	279 Move X23, [X31+56]
	280 Move X26, [X31+32]
	281 Move X25, [X31+40]
	282 Move X30, [X31+16]
	283 Move X27, [X31+24]
	284 Add X31, X31, 96
	285 Call Number.FormatScientific, X0, X1, X2, X3, X4, X5
	286 Return 
	287 Move X0, X21
	288 Move X1, X23
	289 Call ValueStringBuilder.AppendSlow, X0, X1
	290 Compare X19, 0
	291 JumpIfEqual {389}
	292 Move X0, [X24]
	293 Move X19, [X19+56]
	294 Move W8, [X0+224]
	295 Compare W8, 0
	296 JumpIfNotEqual {298}
	297 Call 0x1C17DFC
	298 Move X0, X21
	299 Move X1, X20
	300 Move W3, W22
	301 Move X5, X31
	302 Move X6, X19
	303 Move X7, X31
	304 Call Number.FormatFixed, X0, X1, X2, X3, X4, X5, X6, X7
	305 Move X20, [X31+80]
	306 Move X19, [X31+88]
	307 Move X22, [X31+64]
	308 Move X21, [X31+72]
	309 Move X24, [X31+48]
	310 Move X23, [X31+56]
	311 Move X26, [X31+32]
	312 Move X25, [X31+40]
	313 Move X30, [X31+16]
	314 Move X27, [X31+24]
	315 Add X31, X31, 96
	316 Return 
	317 Move W22, [X20]
	318 Move X8, 0xB28000
	319 Move X8, [X8+3848]
	320 Move X0, [X8]
	321 Move W8, [X0+224]
	322 Compare W8, 0
	323 JumpIfNotEqual {325}
	324 Call 0x1C17DFC
	325 Move X0, X20
	326 Move W1, W22
	327 Call Number.RoundNumber, X0, X1
	328 Move W24, W31
	329 Move W8, [X20+8]
	330 Compare W8, 0
	331 JumpIfEqual {363}
	332 Compare X19, 0
	333 JumpIfEqual {389}
	334 Move X26, 0xDCE000
	335 Move W8, [X26+1109]
	336 Move X25, [X19+48]
	337 Compare W8, 0
	338 JumpIfNotEqual {344}
	339 Move X0, 0xB10000
	340 Move X0, [X0+1416]
	341 Call 0x1C17CF4
	342 Move W8, 1
	343 Move [X26+1109], W8
	344 Compare X25, 0
	345 JumpIfEqual {389}
	346 Move W8, [X25+16]
	347 NotImplemented "Instruction CMP not yet implemented."
	348 NotImplemented "Instruction LDRSW not yet implemented."
	349 Move W8, [X21+16]
	350 NotImplemented "Instruction CMP not yet implemented."
	351 NotImplemented "Instruction CMP not yet implemented."
	352 Move X27, [X21+8]
	353 Move X0, X25
	354 Move W1, W31
	355 Move X2, X31
	356 Call String.get_Chars, X0, X1
	357 Add W8, W26, 1
	358 NotImplemented "Instruction STRH not yet implemented."
	359 Move [X21+24], W8
	360 Move X0, X21
	361 Move X1, X25
	362 Call ValueStringBuilder.AppendSlow, X0, X1
	363 Move X8, 0xB28000
	364 Move X8, [X8+3848]
	365 Move X0, [X8]
	366 Move W8, [X0+224]
	367 Compare W8, 0
	368 JumpIfNotEqual {370}
	369 Call 0x1C17DFC
	370 Subtract W5, W23, 2
	371 Move X0, X21
	372 Move X1, X20
	373 Move W3, W22
	374 Move X4, X19
	375 Move W6, W24
	376 Move X20, [X31+80]
	377 Move X19, [X31+88]
	378 Move X22, [X31+64]
	379 Move X21, [X31+72]
	380 Move X24, [X31+48]
	381 Move X23, [X31+56]
	382 Move X26, [X31+32]
	383 Move X25, [X31+40]
	384 Move X30, [X31+16]
	385 Move X27, [X31+24]
	386 Add X31, X31, 96
	387 Call Number.FormatGeneral, X0, X1, X2, X3, X4, X5, X6
	388 Return 
	389 Call 0x1C17F20
	390 Move X0, 0xB0E000
	391 Move X0, [X0+3080]
	392 Call 0x1C17D08
	393 Call 0x1C17F10
	394 Move X19, X0
	395 Move X0, 0xB16000
	396 Move X0, [X0+1392]
	397 Call 0x1C17D08
	398 Move X1, X0
	399 Move X0, X19
	400 Move X2, X31
	401 Call FormatException..ctor, X0, X1
	402 Move X0, 0xB28000
	403 Move X0, [X0+3856]
	404 Call 0x1C17D08
	405 Move X1, X0
	406 Move X0, X19
	407 Call 0x1C17DEC
	408 Call 0x1C17F28

Method: System.Void FormatCurrency(ref System.Text.ValueStringBuilder sb, ref System.Globalization.FormatProvider/Number/NumberBuffer number, System.Int32 nMinDigits, System.Int32 nMaxDigits, System.Globalization.NumberFormatInfo info)

Disassembly:
	0x03614858 CBZ X19, 0x3614A28
	0x0361485C LDR X8, [X8 + 0x10]
	0x03614860 CBZ X8, 0x3614A28
	0x03614864 LDR W9, [X19 + 0xC0]
	0x03614868 LDR W10, [X8 + 0x18]
	0x0361486C CMP W9, W10
	0x03614870 B.CS 0x3614A2C
	0x03614874 ADD X8, X8, W9, 0x3, SXTW
	0x03614878 LDR X23, [X8 + 0x20]
	0x0361487C CBZ X23, 0x3614A28
	0x03614880 LDR W8, [X23 + 0x10]
	0x03614884 CMP W8, 0x1
	0x03614888 B.LT 0x3614A08
	0x0361488C MOV W24, W31
	0x03614890 ADRP X29, 0xDCC000
	0x03614894 ADRP X25, 0xDCC000
	0x03614898 MOV X0, X23
	0x0361489C MOV W1, W24
	0x036148A0 MOV X2, X31
	0x036148A4 BL 0x3222A1C
	0x036148A8 AND W8, W0, 0xFFFF
	0x036148AC CMP W8, 0x2D
	0x036148B0 B.EQ 0x3614914
	0x036148B4 CMP W8, 0x25
	0x036148B8 B.EQ 0x3614924
	0x036148BC CMP W8, 0x23
	0x036148C0 B.NE 0x36149A0
	0x036148C4 MOV X0, X19
	0x036148C8 MOV X1, X31
	0x036148CC BL 0x333B100
	0x036148D0 ADRP X8, 0xB26000
	0x036148D4 LDR X8, [X8 + 0xF08]
	0x036148D8 LDP X27, X26, [X19 + 0x80]
	0x036148DC MOV X28, X0
	0x036148E0 LDR X8, [X8]
	0x036148E4 LDR W9, [X8 + 0xE0]
	0x036148E8 CBNZ W9, 0x36148F4
	0x036148EC MOV X0, X8
	0x036148F0 BL 0x1C16DFC
	0x036148F4 MOV X0, X22
	0x036148F8 MOV X1, X21
	0x036148FC MOV W3, W20
	0x03614900 MOV X5, X28
	0x03614904 MOV X6, X27
	0x03614908 MOV X7, X26
	0x0361490C BL 0x3613AB8
	0x03614910 B 0x36149F8
	0x03614914 LDRB W8, [X29 + 0x455]
	0x03614918 LDR X26, [X19 + 0x30]
	0x0361491C CBNZ W8, 0x3614944
	0x03614920 B 0x3614930
	0x03614924 LDRB W8, [X29 + 0x455]
	0x03614928 LDR X26, [X19 + 0x90]
	0x0361492C CBNZ W8, 0x3614944
	0x03614930 ADRP X0, 0xB0E000
	0x03614934 LDR X0, [X0 + 0x588]
	0x03614938 BL 0x1C16CF4
	0x0361493C MOVZ W8, 0x1
	0x03614940 STRB W8, [X29 + 0x455]
	0x03614944 CBZ X26, 0x3614A28
	0x03614948 LDR W8, [X26 + 0x10]
	0x0361494C CMP W8, 0x1
	0x03614950 B.NE 0x3614990
	0x03614954 LDRSW X27, [X22 + 0x18]
	0x03614958 LDR W8, [X22 + 0x10]
	0x0361495C CMP W27, W8
	0x03614960 B.GE 0x3614990
	0x03614964 CMP W27, W8
	0x03614968 B.CS 0x3614A2C
	0x0361496C LDR X28, [X22 + 0x8]
	0x03614970 MOV X0, X26
	0x03614974 MOV W1, W31
	0x03614978 MOV X2, X31
	0x0361497C BL 0x3222A1C
	0x03614980 ADD W8, W27, 0x1
	0x03614984 STRH W0, [X28, X27, LSL #1]
	0x03614988 STR W8, [X22 + 0x18]
	0x0361498C B 0x36149F8
	0x03614990 MOV X0, X22
	0x03614994 MOV X1, X26
	0x03614998 BL 0x3615B50
	0x0361499C B 0x36149F8
	0x036149A0 LDRB W8, [X25 + 0x453]
	0x036149A4 MOV W26, W0
	0x036149A8 CBNZ W8, 0x36149C0
	0x036149AC ADRP X0, 0xB0E000
	0x036149B0 LDR X0, [X0 + 0x588]
	0x036149B4 BL 0x1C16CF4
	0x036149B8 MOVZ W8, 0x1
	0x036149BC STRB W8, [X25 + 0x453]
	0x036149C0 LDRSW X8, [X22 + 0x18]
	0x036149C4 LDR W9, [X22 + 0x10]
	0x036149C8 CMP W8, W9
	0x036149CC B.GE 0x36149EC
	0x036149D0 CMP W8, W9
	0x036149D4 B.CS 0x3614A2C
	0x036149D8 LDR X9, [X22 + 0x8]
	0x036149DC ADD W10, W8, 0x1
	0x036149E0 STRH W26, [X9, X8, LSL #1]
	0x036149E4 STR W10, [X22 + 0x18]
	0x036149E8 B 0x36149F8
	0x036149EC MOV X0, X22
	0x036149F0 MOV W1, W26
	0x036149F4 BL 0x3615A24
	0x036149F8 LDR W8, [X23 + 0x10]
	0x036149FC ADD W24, W24, 0x1
	0x03614A00 CMP W24, W8
	0x03614A04 B.LT 0x3614898
	0x03614A08 LDP X20, X19, [X31 + 0x60]
	0x03614A0C LDP X22, X21, [X31 + 0x50]
	0x03614A10 LDP X24, X23, [X31 + 0x40]
	0x03614A14 LDP X26, X25, [X31 + 0x30]
	0x03614A18 LDP X28, X27, [X31 + 0x20]
	0x03614A1C LDP X29, X30, [X31 + 0x10]
	0x03614A20 ADD X31, X31, 0x70
	0x03614A24 RET
	0x03614A28 BL 0x1C16F20
	0x03614A2C BL 0x1C16F28
	0x03614A30 LDRH W8, [X0]
	0x03614A34 CBZ W8, 0x3614A48
	0x03614A38 MOV W8, W31
	0x03614A3C LDRH W9, [X0 + 0x2]!
	0x03614A40 ADD W8, W8, 0x1
	0x03614A44 CBNZ W9, 0x3614A3C
	0x03614A48 MOV W0, W8
	0x03614A4C RET
	0x03614A50 STP X30, X23, [X31 - 0x30]!
	0x03614A54 STP X22, X21, [X31 + 0x10]
	0x03614A58 STP X20, X19, [X31 + 0x20]
	0x03614A5C ADRP X22, 0xDCC000
	0x03614A60 LDRB W8, [X22 + 0x44E]
	0x03614A64 MOV W19, W2
	0x03614A68 MOV X20, X1
	0x03614A6C MOV X21, X0
	0x03614A70 TBNZ X8, 0x0, 0x3614A94
	0x03614A74 ADRP X0, 0xB0D000
	0x03614A78 LDR X0, [X0 + 0x850]
	0x03614A7C BL 0x1C16CF4
	0x03614A80 ADRP X0, 0xB0E000
	0x03614A84 LDR X0, [X0 + 0x588]
	0x03614A88 BL 0x1C16CF4
	0x03614A8C MOVZ W8, 0x1
	0x03614A90 STRB W8, [X22 + 0x44E]
	0x03614A94 LDR W8, [X21 + 0x10]
	0x03614A98 LDR W22, [X21 + 0x18]
	0x03614A9C ADRP X23, 0xB0D000
	0x03614AA0 LDR X23, [X23 + 0x850]
	0x03614AA4 SUB W9, W8, W19
	0x03614AA8 CMP W22, W9
	0x03614AAC B.LE 0x3614AC4
	0x03614AB0 MOV X0, X21
	0x03614AB4 MOV W1, W19

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X23, 0xDCD000
	015 Move X24, 0xB27000
	016 Move W8, [X23+1084]
	017 Move X24, [X24+3848]
	018 Move X19, X4
	019 Move W20, W3
	020 Move X21, X1
	021 Move X22, X0
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {31}
	026 Move X0, 0xB27000
	027 Move X0, [X0+3848]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X23+1084], W8
	031 Move X0, [X24]
	032 Move W23, [X21+8]
	033 Move W8, [X0+224]
	034 Compare W8, 0
	035 JumpIfNotEqual {38}
	036 Call 0x1C17DFC
	037 Move X0, [X24]
	038 Move X8, [X0+184]
	039 Compare W23, 0
	040 JumpIfEqual {47}
	041 Compare X19, 0
	042 JumpIfEqual {162}
	043 Move X8, [X8+8]
	044 Compare X8, 0
	045 JumpIfEqual {162}
	046 Move W9, [X19+184]
	047 Compare X19, 0
	048 JumpIfEqual {162}
	049 Move X8, [X8]
	050 Compare X8, 0
	051 JumpIfEqual {162}
	052 Move W9, [X19+180]
	053 Move W10, [X8+24]
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Add X8, X8, W9
	056 Move X23, [X8+32]
	057 Compare X23, 0
	058 JumpIfEqual {162}
	059 Move W8, [X23+16]
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Move W24, W31
	062 Move X29, 0xDCD000
	063 Move X25, 0xDCD000
	064 Move X0, X23
	065 Move W1, W24
	066 Move X2, X31
	067 Call String.get_Chars, X0, X1
	068 And W8, W0, 0xFFFF
	069 NotImplemented "Instruction CMP not yet implemented."
	070 NotImplemented "Instruction CMP not yet implemented."
	071 NotImplemented "Instruction CMP not yet implemented."
	072 Move X0, X19
	073 Move X1, X31
	074 Call NumberFormatInfo.get_CurrencyGroupSizes, X0
	075 Move X8, 0xB27000
	076 Move X8, [X8+3848]
	077 Move X26, [X19+72]
	078 Move X27, [X19+80]
	079 Move X28, X0
	080 Move X8, [X8]
	081 Move W9, [X8+224]
	082 Compare W9, 0
	083 JumpIfNotEqual {86}
	084 Move X0, X8
	085 Call 0x1C17DFC
	086 Move X0, X22
	087 Move X1, X21
	088 Move W3, W20
	089 Move X5, X28
	090 Move X6, X27
	091 Move X7, X26
	092 Call Number.FormatFixed, X0, X1, X2, X3, X4, X5, X6, X7
	093 Move W8, [X29+1109]
	094 Move X26, [X19+48]
	095 Compare W8, 0
	096 JumpIfNotEqual {106}
	097 Move W8, [X29+1109]
	098 Move X26, [X19+88]
	099 Compare W8, 0
	100 JumpIfNotEqual {106}
	101 Move X0, 0xB0F000
	102 Move X0, [X0+1416]
	103 Call 0x1C17CF4
	104 Move W8, 1
	105 Move [X29+1109], W8
	106 Compare X26, 0
	107 JumpIfEqual {162}
	108 Move W8, [X26+16]
	109 NotImplemented "Instruction CMP not yet implemented."
	110 NotImplemented "Instruction LDRSW not yet implemented."
	111 Move W8, [X22+16]
	112 NotImplemented "Instruction CMP not yet implemented."
	113 NotImplemented "Instruction CMP not yet implemented."
	114 Move X28, [X22+8]
	115 Move X0, X26
	116 Move W1, W31
	117 Move X2, X31
	118 Call String.get_Chars, X0, X1
	119 Add W8, W27, 1
	120 NotImplemented "Instruction STRH not yet implemented."
	121 Move [X22+24], W8
	122 Move X0, X22
	123 Move X1, X26
	124 Call ValueStringBuilder.AppendSlow, X0, X1
	125 Move W8, [X25+1107]
	126 Move W26, W0
	127 Compare W8, 0
	128 JumpIfNotEqual {134}
	129 Move X0, 0xB0F000
	130 Move X0, [X0+1416]
	131 Call 0x1C17CF4
	132 Move W8, 1
	133 Move [X25+1107], W8
	134 NotImplemented "Instruction LDRSW not yet implemented."
	135 Move W9, [X22+16]
	136 NotImplemented "Instruction CMP not yet implemented."
	137 NotImplemented "Instruction CMP not yet implemented."
	138 Move X9, [X22+8]
	139 Add W10, W8, 1
	140 NotImplemented "Instruction STRH not yet implemented."
	141 Move [X22+24], W10
	142 Move X0, X22
	143 Move W1, W26
	144 Call ValueStringBuilder.GrowAndAppend, X0, X1
	145 Move W8, [X23+16]
	146 Add W24, W24, 1
	147 NotImplemented "Instruction CMP not yet implemented."
	148 Move X20, [X31+96]
	149 Move X19, [X31+104]
	150 Move X22, [X31+80]
	151 Move X21, [X31+88]
	152 Move X24, [X31+64]
	153 Move X23, [X31+72]
	154 Move X26, [X31+48]
	155 Move X25, [X31+56]
	156 Move X28, [X31+32]
	157 Move X27, [X31+40]
	158 Move X29, [X31+16]
	159 Move X30, [X31+24]
	160 Add X31, X31, 112
	161 Return 
	162 Call 0x1C17F20
	163 Call 0x1C17F28

Method: System.Int32 wcslen(System.Char* s)

Disassembly:
	0x03615A30 ADRP X21, 0xB0D000
	0x03615A34 LDR X21, [X21 + 0x588]
	0x03615A38 MOV W19, W1
	0x03615A3C MOV X20, X0
	0x03615A40 MOVZ W22, 0x1
	0x03615A44 ADRP X23, 0xDCB000
	0x03615A48 MOVZ W1, 0x1
	0x03615A4C MOV X0, X20

ISIL:
	001 NotImplemented "Instruction LDRH not yet implemented."
	002 Compare W8, 0
	003 JumpIfEqual {9}
	004 Move W8, W31
	005 NotImplemented "Instruction LDRH not yet implemented."
	006 Add W8, W8, 1
	007 Compare W9, 0
	008 JumpIfNotEqual {5}
	009 Move W0, W8
	010 Return X0

Method: System.Void FormatFixed(ref System.Text.ValueStringBuilder sb, ref System.Globalization.FormatProvider/Number/NumberBuffer number, System.Int32 nMinDigits, System.Int32 nMaxDigits, System.Globalization.NumberFormatInfo info, System.Int32[] groupDigits, System.String sDecimal, System.String sGroup)

Disassembly:
	0x03614AB8 BL 0x3615764
	0x03614ABC LDR W22, [X21 + 0x18]
	0x03614AC0 LDR W8, [X21 + 0x10]
	0x03614AC4 LDR X23, [X23]
	0x03614AC8 SUBS W8, W8, W22
	0x03614ACC B.CC 0x3614AD8
	0x03614AD0 CMP W8, W19
	0x03614AD4 B.CS 0x3614AE0
	0x03614AD8 MOV X0, X31
	0x03614ADC BL 0x339D6EC
	0x03614AE0 LDR X0, [X23 + 0x20]
	0x03614AE4 LDR X23, [X21 + 0x8]
	0x03614AE8 LDRB W8, [X0 + 0x135]
	0x03614AEC TBNZ X8, 0x0, 0x3614AF4
	0x03614AF0 BL 0x1C5C684
	0x03614AF4 CMP W19, 0x1
	0x03614AF8 B.LT 0x3614B14
	0x03614AFC ADD X8, X23, W22, 0x1, SXTW
	0x03614B00 MOV W9, W19
	0x03614B04 LDRH W10, [X20], #0x2
	0x03614B08 SUBS X9, X9, 0x1
	0x03614B0C STRH W10, [X8], #0x2
	0x03614B10 B.NE 0x3614B04
	0x03614B14 LDR W8, [X21 + 0x18]
	0x03614B18 ADD W8, W8, W19
	0x03614B1C STR W8, [X21 + 0x18]
	0x03614B20 LDP X20, X19, [X31 + 0x20]
	0x03614B24 LDP X22, X21, [X31 + 0x10]
	0x03614B28 LDP X30, X23, [X31], #0x30
	0x03614B2C RET
	0x03614B30 STP X30, X23, [X31 - 0x30]!
	0x03614B34 STP X22, X21, [X31 + 0x10]
	0x03614B38 STP X20, X19, [X31 + 0x20]
	0x03614B3C ADRP X22, 0xDCC000
	0x03614B40 LDRB W8, [X22 + 0x44D]
	0x03614B44 MOV W19, W2
	0x03614B48 MOV W20, W1
	0x03614B4C MOV X21, X0
	0x03614B50 TBNZ X8, 0x0, 0x3614B74
	0x03614B54 ADRP X0, 0xB0D000
	0x03614B58 LDR X0, [X0 + 0x850]
	0x03614B5C BL 0x1C16CF4
	0x03614B60 ADRP X0, 0xB0E000
	0x03614B64 LDR X0, [X0 + 0x588]
	0x03614B68 BL 0x1C16CF4
	0x03614B6C MOVZ W8, 0x1
	0x03614B70 STRB W8, [X22 + 0x44D]
	0x03614B74 LDR W8, [X21 + 0x10]
	0x03614B78 LDR W22, [X21 + 0x18]
	0x03614B7C ADRP X23, 0xB0D000
	0x03614B80 LDR X23, [X23 + 0x850]
	0x03614B84 SUB W9, W8, W19
	0x03614B88 CMP W22, W9
	0x03614B8C B.LE 0x3614BA4
	0x03614B90 MOV X0, X21
	0x03614B94 MOV W1, W19
	0x03614B98 BL 0x3615764
	0x03614B9C LDR W22, [X21 + 0x18]
	0x03614BA0 LDR W8, [X21 + 0x10]
	0x03614BA4 LDR X23, [X23]
	0x03614BA8 SUBS W8, W8, W22
	0x03614BAC B.CC 0x3614BB8
	0x03614BB0 CMP W8, W19
	0x03614BB4 B.CS 0x3614BC0
	0x03614BB8 MOV X0, X31
	0x03614BBC BL 0x339D6EC
	0x03614BC0 LDR X0, [X23 + 0x20]
	0x03614BC4 LDR X23, [X21 + 0x8]
	0x03614BC8 LDRB W8, [X0 + 0x135]
	0x03614BCC TBNZ X8, 0x0, 0x3614BD4
	0x03614BD0 BL 0x1C5C684
	0x03614BD4 CMP W19, 0x1
	0x03614BD8 B.LT 0x3614C3C
	0x03614BDC ADRP X10, 0xFFFFFFFFFD4D6000
	0x03614BE0 LDR V0, [X10 + 0x79]
	0x03614BE4 SXTW X8, W22
	0x03614BE8 MOV W9, W19
	0x03614BEC ADD X11, X9, 0x1
	0x03614BF0 SUB X9, X9, 0x1
	0x03614BF4 ADD X12, X23, X8, 0x1, LSL
	0x03614BF8 MOVZ W10, 0x2
	0x03614BFC AND X8, X11, 0x0
	0x03614C00 UNIMPLEMENTED
	0x03614C04 ADD X9, X12, 0x2
	0x03614C08 UNIMPLEMENTED
	0x00000000 INVALID
	0x03614C10 UNIMPLEMENTED
	0x03614C14 FMOV W10, S3
	0x03614C18 TBZ X10, 0x0, 0x3614C20
	0x03614C1C STURH W20, [X9 - 0x2]
	0x03614C20 UNIMPLEMENTED
	0x03614C24 TBZ X10, 0x0, 0x3614C2C
	0x03614C28 STRH W20, [X9]
	0x00000000 INVALID
	0x03614C30 SUBS X8, X8, 0x2
	0x03614C34 ADD X9, X9, 0x4
	0x03614C38 B.NE 0x3614C0C
	0x03614C3C LDR W8, [X21 + 0x18]
	0x03614C40 ADD W8, W8, W19
	0x03614C44 STR W8, [X21 + 0x18]
	0x03614C48 LDP X20, X19, [X31 + 0x20]
	0x03614C4C LDP X22, X21, [X31 + 0x10]
	0x03614C50 LDP X30, X23, [X31], #0x30
	0x03614C54 RET
	0x03614C58 STP X29, X30, [X31 - 0x50]!
	0x03614C5C STP X26, X25, [X31 + 0x10]
	0x03614C60 STP X24, X23, [X31 + 0x20]
	0x03614C64 STP X22, X21, [X31 + 0x30]
	0x03614C68 STP X20, X19, [X31 + 0x40]
	0x03614C6C ADD X29, X31, 0x0
	0x03614C70 SUB X31, X31, 0x10
	0x03614C74 MRS X25, 0xC000
	0x03614C78 LDR X8, [X25 + 0x28]
	0x03614C7C ADRP X26, 0xDCC000
	0x03614C80 MOV W23, W5
	0x03614C84 MOV W20, W4
	0x03614C88 STUR X8, [X29 - 0x8]
	0x03614C8C LDRB W8, [X26 + 0x440]
	0x03614C90 MOV W24, W3
	0x03614C94 MOV W21, W2
	0x03614C98 MOV X22, X1
	0x03614C9C MOV X19, X0
	0x03614CA0 TBNZ X8, 0x0, 0x3614CB8
	0x03614CA4 ADRP X0, 0xB26000
	0x03614CA8 LDR X0, [X0 + 0xF08]
	0x03614CAC BL 0x1C16CF4
	0x03614CB0 MOVZ W8, 0x1
	0x03614CB4 STRB W8, [X26 + 0x440]
	0x03614CB8 ADRP X26, 0xDCC000
	0x03614CBC LDRB W8, [X26 + 0x453]
	0x03614CC0 CBNZ W8, 0x3614CD8
	0x03614CC4 ADRP X0, 0xB0E000
	0x03614CC8 LDR X0, [X0 + 0x588]
	0x03614CCC BL 0x1C16CF4
	0x03614CD0 MOVZ W8, 0x1
	0x03614CD4 STRB W8, [X26 + 0x453]
	0x03614CD8 LDRSW X8, [X19 + 0x18]
	0x03614CDC LDR W9, [X19 + 0x10]
	0x03614CE0 CMP W8, W9
	0x03614CE4 B.GE 0x3614D78
	0x03614CE8 CMP W8, W9
	0x03614CEC B.CS 0x3614F3C
	0x03614CF0 LDR X9, [X19 + 0x8]
	0x03614CF4 ADD W10, W8, 0x1
	0x03614CF8 STRH W24, [X9, X8, LSL #1]
	0x03614CFC STR W10, [X19 + 0x18]
	0x03614D00 TBZ X21, 0x1F, 0x3614D88
	0x03614D04 CBZ X22, 0x3614F40
	0x03614D08 ADRP X23, 0xDCC000
	0x03614D0C LDRB W8, [X23 + 0x455]
	0x03614D10 LDR X22, [X22 + 0x30]
	0x03614D14 CBNZ W8, 0x3614D2C
	0x03614D18 ADRP X0, 0xB0E000
	0x03614D1C LDR X0, [X0 + 0x588]
	0x03614D20 BL 0x1C16CF4
	0x03614D24 MOVZ W8, 0x1
	0x03614D28 STRB W8, [X23 + 0x455]
	0x03614D2C CBZ X22, 0x3614F40
	0x03614D30 LDR W8, [X22 + 0x10]
	0x03614D34 CMP W8, 0x1
	0x03614D38 B.NE 0x3614E00
	0x03614D3C LDRSW X23, [X19 + 0x18]
	0x03614D40 LDR W8, [X19 + 0x10]
	0x03614D44 CMP W23, W8
	0x03614D48 B.GE 0x3614E00
	0x03614D4C CMP W23, W8
	0x03614D50 B.CS 0x3614F3C
	0x03614D54 LDR X24, [X19 + 0x8]
	0x03614D58 MOV X0, X22
	0x03614D5C MOV W1, W31
	0x03614D60 MOV X2, X31
	0x03614D64 BL 0x3222A1C
	0x03614D68 ADD W8, W23, 0x1
	0x03614D6C STRH W0, [X24, X23, LSL #1]
	0x03614D70 STR W8, [X19 + 0x18]
	0x03614D74 B 0x3614E0C
	0x03614D78 MOV X0, X19
	0x03614D7C MOV W1, W24
	0x03614D80 BL 0x3615A24
	0x03614D84 TBNZ X21, 0x1F, 0x3614D04
	0x03614D88 TBZ X23, 0x0, 0x3614E20
	0x03614D8C CBZ X22, 0x3614F40
	0x03614D90 ADRP X23, 0xDCC000
	0x03614D94 LDRB W8, [X23 + 0x455]
	0x03614D98 LDR X22, [X22 + 0x28]
	0x03614D9C CBNZ W8, 0x3614DB4
	0x03614DA0 ADRP X0, 0xB0E000
	0x03614DA4 LDR X0, [X0 + 0x588]
	0x03614DA8 BL 0x1C16CF4
	0x03614DAC MOVZ W8, 0x1
	0x03614DB0 STRB W8, [X23 + 0x455]
	0x03614DB4 CBZ X22, 0x3614F40
	0x03614DB8 LDR W8, [X22 + 0x10]
	0x03614DBC CMP W8, 0x1
	0x03614DC0 B.NE 0x3614E14
	0x03614DC4 LDRSW X23, [X19 + 0x18]
	0x03614DC8 LDR W8, [X19 + 0x10]
	0x03614DCC CMP W23, W8
	0x03614DD0 B.GE 0x3614E14
	0x03614DD4 CMP W23, W8
	0x03614DD8 B.CS 0x3614F3C
	0x03614DDC LDR X24, [X19 + 0x8]
	0x03614DE0 MOV X0, X22
	0x03614DE4 MOV W1, W31
	0x03614DE8 MOV X2, X31
	0x03614DEC BL 0x3222A1C
	0x03614DF0 ADD W8, W23, 0x1
	0x03614DF4 STRH W0, [X24, X23, LSL #1]
	0x03614DF8 STR W8, [X19 + 0x18]
	0x03614DFC B 0x3614E20
	0x03614E00 MOV X0, X19
	0x03614E04 MOV X1, X22
	0x03614E08 BL 0x3615B50
	0x03614E0C SUB W21, W31, W21
	0x03614E10 B 0x3614E20
	0x03614E14 MOV X0, X19
	0x03614E18 MOV X1, X22
	0x03614E1C BL 0x3615B50
	0x03614E20 ADRP X8, 0xB26000
	0x03614E24 LDR X8, [X8 + 0xF08]
	0x03614E28 ADD X9, X31, 0x0
	0x03614E2C SUB X22, X9, 0x20
	0x03614E30 ADD X31, X22, 0x0
	0x03614E34 LDR X0, [X8]
	0x03614E38 STP X31, X31, [X9 - 0x20]
	0x03614E3C STUR X31, [X9 - 0x12]
	0x03614E40 LDR W8, [X0 + 0xE0]
	0x03614E44 CBNZ W8, 0x3614E4C
	0x03614E48 BL 0x1C16DFC
	0x03614E4C CMP W20, 0x1
	0x03614E50 MOVZ W8, 0xA
	0x03614E54 B.PL 0x3614E60
	0x03614E58 MOVZ W23, 0xA
	0x03614E5C CBZ W21, 0x3614E9C
	0x03614E60 MOVZ W9, 0xCCCD
	0x03614E64 MOVK W9, 0xCCCC0000
	0x03614E68 MOVZ W23, 0xA
	0x03614E6C UMADDL X12, X21, X9, X31
	0x03614E70 MOV W10, W21
	0x03614E74 UBFM X21, X12, 0x23, 0x3F
	0x03614E78 ADD W11, W20, W23
	0x03614E7C MSUB W12, W21, W8, W10
	0x03614E80 SUB W23, W23, 0x1
	0x03614E84 ORR W12, W12, 0x30
	0x03614E88 CMP W11, 0xC
	0x03614E8C STRH W12, [X22, W23, SXTW]
	0x03614E90 B.PL 0x3614E6C
	0x03614E94 CMP W10, 0x9
	0x03614E98 B.HI 0x3614E6C
	0x03614E9C MOVZ W8, 0x9
	0x03614EA0 CMP W8, W23
	0x03614EA4 B.MI 0x3614F10
	0x03614EA8 ADRP X20, 0xB0E000
	0x03614EAC LDR X20, [X20 + 0x588]
	0x03614EB0 MOVZ W24, 0x1
	0x03614EB4 LDRB W8, [X26 + 0x453]
	0x03614EB8 LDRH W21, [X22, W23, SXTW]
	0x03614EBC CBNZ W8, 0x3614ECC
	0x03614EC0 MOV X0, X20
	0x03614EC4 BL 0x1C16CF4
	0x03614EC8 STRB W24, [X26 + 0x453]
	0x03614ECC LDRSW X8, [X19 + 0x18]
	0x03614ED0 LDR W9, [X19 + 0x10]
	0x03614ED4 CMP W8, W9
	0x03614ED8 B.GE 0x3614EF8
	0x03614EDC CMP W8, W9
	0x03614EE0 B.CS 0x3614F3C
	0x03614EE4 LDR X9, [X19 + 0x8]
	0x03614EE8 ADD W10, W8, 0x1
	0x03614EEC STRH W21, [X9, X8, LSL #1]
	0x03614EF0 STR W10, [X19 + 0x18]
	0x03614EF4 B 0x3614F04
	0x03614EF8 MOV X0, X19
	0x03614EFC MOV W1, W21
	0x03614F00 BL 0x3615A24
	0x03614F04 ADD W23, W23, 0x1
	0x03614F08 CMP W23, 0xA
	0x03614F0C B.NE 0x3614EB4
	0x03614F10 LDR X8, [X25 + 0x28]
	0x03614F14 LDUR X9, [X29 - 0x8]
	0x03614F18 CMP X8, X9
	0x03614F1C B.NE 0x3614F44
	0x03614F20 ADD X31, X29, 0x0
	0x03614F24 LDP X20, X19, [X31 + 0x40]
	0x03614F28 LDP X22, X21, [X31 + 0x30]
	0x03614F2C LDP X24, X23, [X31 + 0x20]
	0x03614F30 LDP X26, X25, [X31 + 0x10]
	0x03614F34 LDP X29, X30, [X31], #0x50
	0x03614F38 RET
	0x03614F3C BL 0x1C16F28
	0x03614F40 BL 0x1C16F20
	0x03614F44 BL 0x3EB1B20
	0x03614F48 STR X30, [X31 - 0x30]!
	0x03614F4C STP X22, X21, [X31 + 0x10]
	0x03614F50 STP X20, X19, [X31 + 0x20]
	0x03614F54 ADRP X22, 0xDCC000
	0x03614F58 LDRB W8, [X22 + 0x443]
	0x03614F5C MOV W20, W2
	0x03614F60 MOV X19, X1
	0x03614F64 MOV X21, X0
	0x03614F68 TBNZ X8, 0x0, 0x3614F8C
	0x03614F6C ADRP X0, 0xB0E000
	0x03614F70 LDR X0, [X0 + 0x20]
	0x03614F74 BL 0x1C16CF4
	0x03614F78 ADRP X0, 0xB0E000
	0x03614F7C LDR X0, [X0 + 0x28]
	0x03614F80 BL 0x1C16CF4
	0x03614F84 MOVZ W8, 0x1
	0x03614F88 STRB W8, [X22 + 0x443]
	0x03614F8C CBZ W20, 0x361507C
	0x03614F90 ADRP X8, 0xB0E000
	0x03614F94 LDR X8, [X8 + 0x20]
	0x03614F98 MOV X0, X21
	0x03614F9C MOV X1, X19
	0x03614FA0 LDR X2, [X8]
	0x03614FA4 BL 0x2218CF8
	0x03614FA8 MOV W8, W31
	0x03614FAC SXTW X9, W19
	0x03614FB0 CMP W8, W19
	0x03614FB4 B.GE 0x361507C
	0x03614FB8 MOV W11, W8
	0x03614FBC LDRH W10, [X0, W11, SXTW]
	0x03614FC0 ADD W8, W11, 0x1

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Add X29, X31, 0
	014 Subtract X31, X31, 80
	015 NotImplemented "Instruction MRS not yet implemented."
	016 Move X8, [X27+40]
	017 Move X22, 0xDCD000
	018 Move X21, 0xB27000
	019 Move X24, X7
	020 Move [X29-8], X8
	021 Move W8, [X22+1085]
	022 Move X21, [X21+3848]
	023 Move X25, X6
	024 Move W23, W3
	025 Move X20, X1
	026 Move X19, X0
	027 Move [X29-16], X5
	028 Move TEMP, X8
	029 And TEMP, TEMP, 1
	030 Compare TEMP, 1
	031 JumpIfEqual {44}
	032 Move X0, 0xAE0000
	033 Move X0, [X0+1448]
	034 Call 0x1C17CF4
	035 Move X0, 0xB27000
	036 Move X0, [X0+3864]
	037 Call 0x1C17CF4
	038 Move X0, 0xB27000
	039 Move X0, [X0+3848]
	040 Call 0x1C17CF4
	041 NotImplemented "Instruction LDUR not yet implemented."
	042 Move W8, 1
	043 Move [X22+1085], W8
	044 Move X0, [X21]
	045 Move W21, [X20+4]
	046 Move X20, [X20+16]
	047 Move W8, [X0+224]
	048 Compare W8, 0
	049 JumpIfNotEqual {52}
	050 Call 0x1C17DFC
	051 NotImplemented "Instruction LDUR not yet implemented."
	052 NotImplemented "Instruction LDRH not yet implemented."
	053 Compare W8, 0
	054 JumpIfEqual {61}
	055 Move W28, W31
	056 Move X8, X20
	057 NotImplemented "Instruction LDRH not yet implemented."
	058 Add W28, W28, 1
	059 Compare W9, 0
	060 JumpIfNotEqual {57}
	061 Move W28, W31
	062 NotImplemented "Instruction CMP not yet implemented."
	063 Compare X5, 0
	064 JumpIfEqual {143}
	065 Move W8, [X5+24]
	066 Compare W8, 0
	067 JumpIfEqual {336}
	068 Compare X24, 0
	069 JumpIfEqual {337}
	070 Move W9, [X5+32]
	071 Move W14, [X24+16]
	072 Move W10, W31
	073 Subtract W15, W8, 1
	074 Move W12, W9
	075 Move W26, W21
	076 Move W11, W9
	077 NotImplemented "Instruction CMP not yet implemented."
	078 NotImplemented "Instruction CMP not yet implemented."
	079 Compare W12, 0
	080 JumpIfEqual {106}
	081 NotImplemented "Instruction CMP not yet implemented."
	082 NotImplemented "Instruction CINC not yet implemented."
	083 NotImplemented "Instruction CMP not yet implemented."
	084 Add X12, X5, W10
	085 Move W12, [X12+32]
	086 Add W26, W26, W14
	087 Add W11, W12, W11
	088 Or W13, W11, W26
	089 Move TEMP, X13
	090 And TEMP, TEMP, -2147483648
	091 Compare TEMP, -2147483648
	092 JumpIfNotEqual {77}
	093 Move X0, 0xAE8000
	094 Move X0, [X0+1888]
	095 Call 0x1C17D08
	096 Call 0x1C17F10
	097 Move X1, X31
	098 Move X19, X0
	099 Call ArgumentOutOfRangeException..ctor, X0
	100 Move X0, 0xB27000
	101 Move X0, [X0+3864]
	102 Call 0x1C17D08
	103 Move X1, X0
	104 Move X0, X19
	105 Call 0x1C17DEC
	106 NotImplemented "Instruction CMP not yet implemented."
	107 Move W8, W26
	108 Move [X29-44], W23
	109 NotImplemented "Instruction CSEL not yet implemented."
	110 Move X22, X8
	111 ShiftRight X22, 63
	112 And X22, X22, 0x3FFFFFFF
	113 Move [X29-28], W15
	114 Move [X29-24], W14
	115 Move [X29-56], X25
	116 Compare W26, 0
	117 JumpIfEqual {168}
	118 Add X9, X22, 15
	119 Add X8, X31, 0
	120 And X9, X9, 0x3FFFFFFFF
	121 Subtract X8, X8, X9
	122 Add X31, X8, 0
	123 Move W22, W21
	124 Move X21, 0xDCD000
	125 Move W8, [X21+1107]
	126 Compare W8, 0
	127 JumpIfNotEqual {133}
	128 Move X0, 0xB0F000
	129 Move X0, [X0+1416]
	130 Call 0x1C17CF4
	131 Move W8, 1
	132 Move [X21+1107], W8
	133 NotImplemented "Instruction LDRSW not yet implemented."
	134 Move W9, [X19+16]
	135 NotImplemented "Instruction CMP not yet implemented."
	136 NotImplemented "Instruction CMP not yet implemented."
	137 Move X9, [X19+8]
	138 Move W10, 48
	139 Add W11, W8, 1
	140 Move W21, W22
	141 NotImplemented "Instruction STRH not yet implemented."
	142 Move [X19+24], W11
	143 Move X8, 0xAE0000
	144 Move X8, [X8+1448]
	145 Move X0, [X8]
	146 Move W8, [X0+224]
	147 Compare W8, 0
	148 JumpIfNotEqual {150}
	149 Call 0x1C17DFC
	150 Move W0, W28
	151 Move W1, W21
	152 Move X2, X31
	153 Call Math.Min, X0, X1
	154 Move W22, W0
	155 Move X0, X19
	156 Move X1, X20
	157 Move W2, W22
	158 Call ValueStringBuilder.Append, X0, X1, X2
	159 Subtract W2, W21, W28
	160 Add X20, X20, W22
	161 Move W1, 48
	162 Move X0, X19
	163 Call ValueStringBuilder.Append, X0, X1, X2
	164 Move W1, 48
	165 Move X0, X19
	166 Call ValueStringBuilder.GrowAndAppend, X0, X1
	167 Move W21, W22
	168 Move X8, X31
	169 Move X0, X8
	170 Move W1, W31
	171 Move X2, X22
	172 Move [X29-40], X27
	173 Move X27, X8
	174 Call 0x3EB2B10
	175 NotImplemented "Instruction CMP not yet implemented."
	176 NotImplemented "Instruction CSEL not yet implemented."
	177 Subtract W25, W21, 1
	178 Move [X29-60], W21
	179 Move [X29-72], X27
	180 Add X9, X22, X27
	181 Move W12, [X29-28]
	182 Move W22, [X29-24]
	183 NotImplemented "Instruction LDUR not yet implemented."
	184 Move W21, W31
	185 Move W8, W31
	186 Subtract X9, X9, 2
	187 Subtract W10, W22, 1
	188 Move [X29-20], W10
	189 NotImplemented "Instruction CMP not yet implemented."
	190 Subtract X27, X9, 2
	191 NotImplemented "Instruction LDRH not yet implemented."
	192 Move W10, 48
	193 NotImplemented "Instruction CMP not yet implemented."
	194 NotImplemented "Instruction STRH not yet implemented."
	195 Add W8, W8, 1
	196 Compare W25, 0
	197 JumpIfEqual {222}
	198 NotImplemented "Instruction CMP not yet implemented."
	199 NotImplemented "Instruction LDUR not yet implemented."
	200 Move TEMP, X8
	201 And TEMP, TEMP, -2147483648
	202 Compare TEMP, -2147483648
	203 JumpIfEqual {214}
	204 Subtract W22, W22, 1
	205 Move X0, X24
	206 Move W1, W22
	207 Move X2, X31
	208 Call String.get_Chars, X0, X1
	209 NotImplemented "Instruction CMP not yet implemented."
	210 NotImplemented "Instruction STRH not yet implemented."
	211 NotImplemented "Instruction LDUR not yet implemented."
	212 Move W12, [X29-28]
	213 Move W22, [X29-24]
	214 NotImplemented "Instruction CMP not yet implemented."
	215 Move W8, [X11+24]
	216 Move X9, W21
	217 Add X21, X9, 1
	218 NotImplemented "Instruction CMP not yet implemented."
	219 Add X8, X11, X21
	220 Move W23, [X8+32]
	221 Move W8, W31
	222 Subtract W25, W25, 1
	223 Move X9, X27
	224 NotImplemented "Instruction LDUR not yet implemented."
	225 Move X0, X19
	226 Move W2, W26
	227 Call ValueStringBuilder.Append, X0, X1, X2
	228 NotImplemented "Instruction LDUR not yet implemented."
	229 NotImplemented "Instruction LDUR not yet implemented."
	230 NotImplemented "Instruction LDUR not yet implemented."
	231 NotImplemented "Instruction LDUR not yet implemented."
	232 Add X20, X20, W28
	233 NotImplemented "Instruction CMP not yet implemented."
	234 Move W24, W21
	235 Move X21, 0xDCD000
	236 Move W8, [X21+1109]
	237 Compare W8, 0
	238 JumpIfNotEqual {244}
	239 Move X0, 0xB0F000
	240 Move X0, [X0+1416]
	241 Call 0x1C17CF4
	242 Move W8, 1
	243 Move [X21+1109], W8
	244 Compare X25, 0
	245 JumpIfEqual {337}
	246 Move W8, [X25+16]
	247 NotImplemented "Instruction CMP not yet implemented."
	248 NotImplemented "Instruction LDRSW not yet implemented."
	249 Move W8, [X19+16]
	250 NotImplemented "Instruction CMP not yet implemented."
	251 NotImplemented "Instruction CMP not yet implemented."
	252 Move X22, [X19+8]
	253 Move X0, X25
	254 Move W1, W31
	255 Move X2, X31
	256 Call String.get_Chars, X0, X1
	257 Add W8, W21, 1
	258 NotImplemented "Instruction STRH not yet implemented."
	259 Move [X19+24], W8
	260 Move TEMP, X24
	261 And TEMP, TEMP, -2147483648
	262 Compare TEMP, -2147483648
	263 JumpIfNotEqual {289}
	264 Move X0, X19
	265 Move X1, X25
	266 Call ValueStringBuilder.AppendSlow, X0, X1
	267 Move TEMP, X24
	268 And TEMP, TEMP, -2147483648
	269 Compare TEMP, -2147483648
	270 JumpIfNotEqual {289}
	271 Move X8, 0xAE0000
	272 Move X8, [X8+1448]
	273 Move X0, [X8]
	274 Move W8, [X0+224]
	275 Compare W8, 0
	276 JumpIfNotEqual {278}
	277 Call 0x1C17DFC
	278 Subtract W0, W31, W24
	279 Move W1, W23
	280 Move X2, X31
	281 Call Math.Min, X0, X1
	282 Move W22, W0
	283 Move W1, 48
	284 Move X0, X19
	285 Move W2, W22
	286 Call ValueStringBuilder.Append, X0, X1, X2
	287 Subtract W23, W23, W22
	288 NotImplemented "Instruction CMP not yet implemented."
	289 Move X21, 0xB0F000
	290 Move X21, [X21+1416]
	291 Add W23, W23, 1
	292 Move W24, 48
	293 Move X25, 0xDCD000
	294 Move W26, 1
	295 Move X8, X20
	296 NotImplemented "Instruction LDRH not yet implemented."
	297 Move W10, [X25+1107]
	298 NotImplemented "Instruction CMP not yet implemented."
	299 NotImplemented "Instruction CSEL not yet implemented."
	300 NotImplemented "Instruction CSEL not yet implemented."
	301 Compare W10, 0
	302 JumpIfNotEqual {306}
	303 Move X0, X21
	304 Call 0x1C17CF4
	305 Move [X25+1107], W26
	306 NotImplemented "Instruction LDRSW not yet implemented."
	307 Move W9, [X19+16]
	308 NotImplemented "Instruction CMP not yet implemented."
	309 NotImplemented "Instruction CMP not yet implemented."
	310 Move X9, [X19+8]
	311 Add W10, W8, 1
	312 NotImplemented "Instruction STRH not yet implemented."
	313 Move [X19+24], W10
	314 Move X0, X19
	315 Move W1, W22
	316 Call ValueStringBuilder.GrowAndAppend, X0, X1
	317 Subtract W23, W23, 1
	318 NotImplemented "Instruction CMP not yet implemented."
	319 Move X8, [X27+40]
	320 NotImplemented "Instruction LDUR not yet implemented."
	321 NotImplemented "Instruction CMP not yet implemented."
	322 Add X31, X29, 0
	323 Move X20, [X31+80]
	324 Move X19, [X31+88]
	325 Move X22, [X31+64]
	326 Move X21, [X31+72]
	327 Move X24, [X31+48]
	328 Move X23, [X31+56]
	329 Move X26, [X31+32]
	330 Move X25, [X31+40]
	331 Move X28, [X31+16]
	332 Move X27, [X31+24]
	333 Move X29, [X31+96]
	334 Move X30, [X31+104]
	335 Return 
	336 Call 0x1C17F28
	337 Call 0x1C17F20
	338 Call 0x3EB2B20

Method: System.Void FormatNumber(ref System.Text.ValueStringBuilder sb, ref System.Globalization.FormatProvider/Number/NumberBuffer number, System.Int32 nMinDigits, System.Int32 nMaxDigits, System.Globalization.NumberFormatInfo info)

Disassembly:
	0x03614FC4 CMP W10, 0x22
	0x03614FC8 B.HI 0x3614FD8
	0x03614FCC B.EQ 0x3614FF4
	0x03614FD0 CBNZ W10, 0x361504C
	0x03614FD4 B 0x361507C
	0x03614FD8 CMP W10, 0x27
	0x03614FDC B.EQ 0x3614FF4
	0x03614FE0 CMP W10, 0x5C
	0x03614FE4 B.EQ 0x361502C
	0x03614FE8 CMP W10, 0x3B
	0x03614FEC B.NE 0x361504C
	0x03614FF0 B 0x361505C
	0x03614FF4 SXTW X11, W8
	0x03614FF8 CMP X9, W8, SXTW
	0x03614FFC CSEL X12, X11, X9, LT
	0x03615000 ADD X8, X0, W8, 0x1, SXTW
	0x03615004 CMP X12, X11
	0x03615008 B.EQ 0x3615048
	0x0361500C LDRH W13, [X8]
	0x03615010 CBZ W13, 0x3615024
	0x03615014 ADD X11, X11, 0x1
	0x03615018 CMP W13, W10
	0x0361501C ADD X8, X8, 0x2
	0x03615020 B.NE 0x3615004
	0x03615024 MOV W8, W11
	0x03615028 B 0x361504C
	0x0361502C CMP W8, W19
	0x03615030 B.GE 0x361504C
	0x03615034 LDRH W10, [X0, W8, SXTW]
	0x03615038 ADD W11, W11, 0x2
	0x0361503C CMP W10, 0x0
	0x03615040 CSEL W8, W8, W11, EQ
	0x03615044 B 0x361504C
	0x03615048 MOV W8, W12
	0x0361504C CMP W8, W19
	0x03615050 MOV W11, W8
	0x03615054 B.LT 0x3614FBC
	0x03615058 B 0x361507C
	0x0361505C SUBS W20, W20, 0x1
	0x03615060 B.NE 0x3614FB0
	0x03615064 CMP W8, W19
	0x03615068 B.GE 0x361507C
	0x0361506C LDRH W9, [X0, W8, SXTW]
	0x03615070 CMP W9, 0x3B
	0x03615074 B.EQ 0x361507C
	0x03615078 CBNZ W9, 0x3615080
	0x0361507C MOV W8, W31
	0x03615080 LDP X20, X19, [X31 + 0x20]
	0x03615084 LDP X22, X21, [X31 + 0x10]
	0x03615088 MOV W0, W8
	0x0361508C LDR X30, [X31], #0x30
	0x03615090 RET
	0x03615094 STR X30, [X31 - 0x20]!
	0x03615098 STP X20, X19, [X31 + 0x10]
	0x0361509C ADRP X20, 0xDCB000
	0x036150A0 ADRP X19, 0xADE000
	0x036150A4 LDRB W8, [X20 + 0x445]
	0x036150A8 LDR X19, [X19 + 0xAC8]
	0x036150AC TBNZ X8, 0x0, 0x36152C8
	0x036150B0 ADRP X0, 0xB25000
	0x036150B4 LDR X0, [X0 + 0xF08]
	0x036150B8 BL 0x1C16CF4
	0x036150BC ADRP X0, 0xADE000
	0x036150C0 LDR X0, [X0 + 0xAC8]
	0x036150C4 BL 0x1C16CF4
	0x036150C8 ADRP X0, 0xB16000
	0x036150CC LDR X0, [X0 + 0x28]
	0x036150D0 BL 0x1C16CF4
	0x036150D4 ADRP X0, 0xB16000
	0x036150D8 LDR X0, [X0 + 0x30]
	0x036150DC BL 0x1C16CF4
	0x036150E0 ADRP X0, 0xB16000
	0x036150E4 LDR X0, [X0 + 0x38]
	0x036150E8 BL 0x1C16CF4
	0x036150EC ADRP X0, 0xADF000
	0x036150F0 LDR X0, [X0 + 0xA08]
	0x036150F4 BL 0x1C16CF4
	0x036150F8 ADRP X0, 0xB16000
	0x036150FC LDR X0, [X0 + 0x40]
	0x03615100 BL 0x1C16CF4
	0x03615104 ADRP X0, 0xB16000
	0x03615108 LDR X0, [X0 + 0x48]
	0x0361510C BL 0x1C16CF4
	0x03615110 ADRP X0, 0xB16000
	0x03615114 LDR X0, [X0 + 0x50]
	0x03615118 BL 0x1C16CF4
	0x0361511C ADRP X0, 0xB16000
	0x03615120 LDR X0, [X0 + 0x58]
	0x03615124 BL 0x1C16CF4
	0x03615128 ADRP X0, 0xB16000
	0x0361512C LDR X0, [X0 + 0x60]
	0x03615130 BL 0x1C16CF4
	0x03615134 ADRP X0, 0xB16000
	0x03615138 LDR X0, [X0 + 0x68]
	0x0361513C BL 0x1C16CF4
	0x03615140 ADRP X0, 0xB16000
	0x03615144 LDR X0, [X0 + 0x70]
	0x03615148 BL 0x1C16CF4
	0x0361514C ADRP X0, 0xB16000
	0x03615150 LDR X0, [X0 + 0x78]
	0x03615154 BL 0x1C16CF4
	0x03615158 ADRP X0, 0xB16000
	0x0361515C LDR X0, [X0 + 0x80]
	0x03615160 BL 0x1C16CF4
	0x03615164 ADRP X0, 0xB16000
	0x03615168 LDR X0, [X0 + 0x88]
	0x0361516C BL 0x1C16CF4
	0x03615170 ADRP X0, 0xB16000
	0x03615174 LDR X0, [X0 + 0x90]
	0x03615178 BL 0x1C16CF4
	0x0361517C ADRP X0, 0xB16000
	0x03615180 LDR X0, [X0 + 0x98]
	0x03615184 BL 0x1C16CF4
	0x03615188 ADRP X0, 0xB16000
	0x0361518C LDR X0, [X0 + 0xA0]
	0x03615190 BL 0x1C16CF4
	0x03615194 ADRP X0, 0xB16000
	0x03615198 LDR X0, [X0 + 0xA8]
	0x0361519C BL 0x1C16CF4
	0x036151A0 ADRP X0, 0xB16000
	0x036151A4 LDR X0, [X0 + 0xB0]
	0x036151A8 BL 0x1C16CF4
	0x036151AC ADRP X0, 0xB16000
	0x036151B0 LDR X0, [X0 + 0xB8]
	0x036151B4 BL 0x1C16CF4
	0x036151B8 ADRP X0, 0xB16000
	0x036151BC LDR X0, [X0 + 0xC0]
	0x036151C0 BL 0x1C16CF4
	0x036151C4 ADRP X0, 0xB16000
	0x036151C8 LDR X0, [X0 + 0xC8]
	0x036151CC BL 0x1C16CF4
	0x036151D0 ADRP X0, 0xB16000
	0x036151D4 LDR X0, [X0 + 0xD0]
	0x036151D8 BL 0x1C16CF4
	0x036151DC ADRP X0, 0xB16000
	0x036151E0 LDR X0, [X0 + 0xD8]
	0x036151E4 BL 0x1C16CF4
	0x036151E8 ADRP X0, 0xB16000
	0x036151EC LDR X0, [X0 + 0xE0]
	0x036151F0 BL 0x1C16CF4
	0x036151F4 ADRP X0, 0xB16000
	0x036151F8 LDR X0, [X0 + 0xE8]
	0x036151FC BL 0x1C16CF4
	0x03615200 ADRP X0, 0xB16000
	0x03615204 LDR X0, [X0 + 0xF0]
	0x03615208 BL 0x1C16CF4

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X23, 0xDCD000
	015 Move X24, 0xB27000
	016 Move W8, [X23+1086]
	017 Move X24, [X24+3848]
	018 Move X19, X4
	019 Move W20, W3
	020 Move X21, X1
	021 Move X22, X0
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {31}
	026 Move X0, 0xB26000
	027 Move X0, [X0+3848]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X23+1086], W8
	031 Move X0, [X24]
	032 Move W23, [X21+8]
	033 Move W8, [X0+224]
	034 Compare W8, 0
	035 JumpIfNotEqual {38}
	036 Call 0x1C17DFC
	037 Move X0, [X24]
	038 Move X8, [X0+184]
	039 Compare W23, 0
	040 JumpIfEqual {51}
	041 Compare X19, 0
	042 JumpIfEqual {157}
	043 Move X8, [X8+32]
	044 Compare X8, 0
	045 JumpIfEqual {157}
	046 NotImplemented "Instruction LDRSW not yet implemented."
	047 Move W10, [X8+24]
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Add X8, X8, X9
	050 Add X8, X8, 32
	051 Add X8, X8, 40
	052 Move X23, [X8]
	053 Compare X23, 0
	054 JumpIfEqual {157}
	055 Move W8, [X23+16]
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Move W24, W31
	058 Move X25, 0xDCC000
	059 Move X29, 0xDCC000
	060 Move X0, X23
	061 Move W1, W24
	062 Move X2, X31
	063 Call String.get_Chars, X0, X1
	064 And W8, W0, 0xFFFF
	065 NotImplemented "Instruction CMP not yet implemented."
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Compare X19, 0
	068 JumpIfEqual {157}
	069 Move X0, X19
	070 Move X1, X31
	071 Call NumberFormatInfo.get_NumberGroupSizes, X0
	072 Move X8, 0xB26000
	073 Move X8, [X8+3848]
	074 Move X27, [X19+56]
	075 Move X26, [X19+64]
	076 Move X28, X0
	077 Move X8, [X8]
	078 Move W9, [X8+224]
	079 Compare W9, 0
	080 JumpIfNotEqual {83}
	081 Move X0, X8
	082 Call 0x1C17DFC
	083 Move X0, X22
	084 Move X1, X21
	085 Move W3, W20
	086 Move X5, X28
	087 Move X6, X27
	088 Move X7, X26
	089 Call Number.FormatFixed, X0, X1, X2, X3, X4, X5, X6, X7
	090 Compare X19, 0
	091 JumpIfEqual {157}
	092 Move W8, [X25+1109]
	093 Move X26, [X19+48]
	094 Compare W8, 0
	095 JumpIfNotEqual {101}
	096 Move X0, 0xB0E000
	097 Move X0, [X0+1416]
	098 Call 0x1C17CF4
	099 Move W8, 1
	100 Move [X25+1109], W8
	101 Compare X26, 0
	102 JumpIfEqual {157}
	103 Move W8, [X26+16]
	104 NotImplemented "Instruction CMP not yet implemented."
	105 NotImplemented "Instruction LDRSW not yet implemented."
	106 Move W8, [X22+16]
	107 NotImplemented "Instruction CMP not yet implemented."
	108 NotImplemented "Instruction CMP not yet implemented."
	109 Move X28, [X22+8]
	110 Move X0, X26
	111 Move W1, W31
	112 Move X2, X31
	113 Call String.get_Chars, X0, X1
	114 Add W8, W27, 1
	115 NotImplemented "Instruction STRH not yet implemented."
	116 Move [X22+24], W8
	117 Move W8, [X29+1107]
	118 Move W26, W0
	119 Compare W8, 0
	120 JumpIfNotEqual {126}
	121 Move X0, 0xB0E000
	122 Move X0, [X0+1416]
	123 Call 0x1C17CF4
	124 Move W8, 1
	125 Move [X29+1107], W8
	126 NotImplemented "Instruction LDRSW not yet implemented."
	127 Move W9, [X22+16]
	128 NotImplemented "Instruction CMP not yet implemented."
	129 NotImplemented "Instruction CMP not yet implemented."
	130 Move X9, [X22+8]
	131 Add W10, W8, 1
	132 NotImplemented "Instruction STRH not yet implemented."
	133 Move [X22+24], W10
	134 Move X0, X22
	135 Move X1, X26
	136 Call ValueStringBuilder.AppendSlow, X0, X1
	137 Move X0, X22
	138 Move W1, W26
	139 Call ValueStringBuilder.GrowAndAppend, X0, X1
	140 Move W8, [X23+16]
	141 Add W24, W24, 1
	142 NotImplemented "Instruction CMP not yet implemented."
	143 Move X20, [X31+96]
	144 Move X19, [X31+104]
	145 Move X22, [X31+80]
	146 Move X21, [X31+88]
	147 Move X24, [X31+64]
	148 Move X23, [X31+72]
	149 Move X26, [X31+48]
	150 Move X25, [X31+56]
	151 Move X28, [X31+32]
	152 Move X27, [X31+40]
	153 Move X29, [X31+16]
	154 Move X30, [X31+24]
	155 Add X31, X31, 112
	156 Return 
	157 Call 0x1C17F20
	158 Call 0x1C17F28

Method: System.Void FormatScientific(ref System.Text.ValueStringBuilder sb, ref System.Globalization.FormatProvider/Number/NumberBuffer number, System.Int32 nMinDigits, System.Int32 nMaxDigits, System.Globalization.NumberFormatInfo info, System.Char expChar)

Disassembly:
	0x0361520C ADRP X0, 0xB16000
	0x03615210 LDR X0, [X0 + 0xF8]
	0x03615214 BL 0x1C16CF4
	0x03615218 ADRP X0, 0xB16000
	0x0361521C LDR X0, [X0 + 0x100]
	0x03615220 BL 0x1C16CF4
	0x03615224 ADRP X0, 0xB16000
	0x03615228 LDR X0, [X0 + 0x108]
	0x0361522C BL 0x1C16CF4
	0x03615230 ADRP X0, 0xB16000
	0x03615234 LDR X0, [X0 + 0x110]
	0x03615238 BL 0x1C16CF4
	0x0361523C ADRP X0, 0xB16000
	0x03615240 LDR X0, [X0 + 0x118]
	0x03615244 BL 0x1C16CF4
	0x03615248 ADRP X0, 0xB16000
	0x0361524C LDR X0, [X0 + 0x120]
	0x03615250 BL 0x1C16CF4
	0x03615254 ADRP X0, 0xB16000
	0x03615258 LDR X0, [X0 + 0x128]
	0x0361525C BL 0x1C16CF4
	0x03615260 ADRP X0, 0xB16000
	0x03615264 LDR X0, [X0 + 0x130]
	0x03615268 BL 0x1C16CF4
	0x0361526C ADRP X0, 0xB16000
	0x03615270 LDR X0, [X0 + 0x138]
	0x03615274 BL 0x1C16CF4
	0x03615278 ADRP X0, 0xB16000
	0x0361527C LDR X0, [X0 + 0x140]
	0x03615280 BL 0x1C16CF4
	0x03615284 ADRP X0, 0xB16000
	0x03615288 LDR X0, [X0 + 0x148]
	0x0361528C BL 0x1C16CF4
	0x03615290 ADRP X0, 0xB16000
	0x03615294 LDR X0, [X0 + 0x150]
	0x03615298 BL 0x1C16CF4
	0x0361529C ADRP X0, 0xB16000
	0x036152A0 LDR X0, [X0 + 0x158]
	0x036152A4 BL 0x1C16CF4
	0x036152A8 ADRP X0, 0xB16000
	0x036152AC LDR X0, [X0 + 0x160]
	0x036152B0 BL 0x1C16CF4
	0x036152B4 ADRP X0, 0xB16000
	0x036152B8 LDR X0, [X0 + 0x168]
	0x036152BC BL 0x1C16CF4
	0x036152C0 MOVZ W8, 0x1
	0x036152C4 STRB W8, [X20 + 0x445]
	0x036152C8 LDR X0, [X19]
	0x036152CC MOVZ W1, 0x4
	0x036152D0 BL 0x1C16D6C
	0x036152D4 CBZ X0, 0x3615750
	0x036152D8 LDR W8, [X0 + 0x18]
	0x036152DC CBZ W8, 0x361574C
	0x036152E0 ADRP X9, 0xB16000
	0x036152E4 LDR X9, [X9 + 0x160]
	0x036152E8 CMP W8, 0x1
	0x036152EC LDR X9, [X9]
	0x036152F0 STR X9, [X0 + 0x20]
	0x036152F4 B.EQ 0x361574C
	0x036152F8 ADRP X9, 0xB16000
	0x036152FC LDR X9, [X9 + 0xC0]
	0x03615300 CMP W8, 0x2
	0x03615304 LDR X9, [X9]
	0x03615308 STR X9, [X0 + 0x28]
	0x0361530C B.LS 0x361574C
	0x03615310 ADRP X9, 0xB16000
	0x03615314 LDR X9, [X9 + 0x68]
	0x03615318 CMP W8, 0x3
	0x0361531C LDR X9, [X9]
	0x03615320 STR X9, [X0 + 0x30]
	0x03615324 B.EQ 0x361574C
	0x03615328 ADRP X8, 0xB16000
	0x0361532C LDR X8, [X8 + 0x140]
	0x03615330 ADRP X20, 0xB25000
	0x03615334 MOVZ W1, 0x10
	0x03615338 LDR X8, [X8]
	0x0361533C LDR X20, [X20 + 0xF08]
	0x03615340 STR X8, [X0 + 0x38]
	0x03615344 LDR X8, [X20]
	0x03615348 LDR X8, [X8 + 0xB8]
	0x0361534C STR X0, [X8]
	0x03615350 LDR X0, [X19]
	0x03615354 BL 0x1C16D6C
	0x03615358 CBZ X0, 0x3615750
	0x0361535C LDR W8, [X0 + 0x18]
	0x03615360 CBZ W8, 0x361574C
	0x03615364 ADRP X9, 0xB16000
	0x03615368 LDR X9, [X9 + 0x128]
	0x0361536C CMP W8, 0x1
	0x03615370 LDR X9, [X9]
	0x03615374 STR X9, [X0 + 0x20]
	0x03615378 B.EQ 0x361574C
	0x0361537C ADRP X9, 0xB16000
	0x03615380 LDR X9, [X9 + 0x58]
	0x03615384 CMP W8, 0x2
	0x03615388 LDR X9, [X9]
	0x0361538C STR X9, [X0 + 0x28]
	0x03615390 B.LS 0x361574C
	0x03615394 ADRP X9, 0xB16000
	0x03615398 LDR X9, [X9 + 0x148]
	0x0361539C CMP W8, 0x3
	0x036153A0 LDR X9, [X9]
	0x036153A4 STR X9, [X0 + 0x30]
	0x036153A8 B.EQ 0x361574C
	0x036153AC ADRP X9, 0xB16000
	0x036153B0 LDR X9, [X9 + 0xB8]
	0x036153B4 CMP W8, 0x4
	0x036153B8 LDR X9, [X9]
	0x036153BC STR X9, [X0 + 0x38]
	0x036153C0 B.LS 0x361574C
	0x036153C4 ADRP X9, 0xB16000
	0x036153C8 LDR X9, [X9 + 0x60]
	0x036153CC CMP W8, 0x5
	0x036153D0 LDR X9, [X9]
	0x036153D4 STR X9, [X0 + 0x40]
	0x036153D8 B.EQ 0x361574C
	0x036153DC ADRP X9, 0xB16000
	0x036153E0 LDR X9, [X9 + 0x100]
	0x036153E4 CMP W8, 0x6
	0x036153E8 LDR X9, [X9]
	0x036153EC STR X9, [X0 + 0x48]
	0x036153F0 B.LS 0x361574C
	0x036153F4 ADRP X9, 0xB16000
	0x036153F8 LDR X9, [X9 + 0x90]
	0x036153FC CMP W8, 0x7
	0x03615400 LDR X9, [X9]
	0x03615404 STR X9, [X0 + 0x50]
	0x03615408 B.EQ 0x361574C
	0x0361540C ADRP X9, 0xB16000
	0x03615410 LDR X9, [X9 + 0xA8]
	0x03615414 CMP W8, 0x8
	0x03615418 LDR X9, [X9]
	0x0361541C STR X9, [X0 + 0x58]
	0x03615420 B.LS 0x361574C
	0x03615424 ADRP X9, 0xB16000
	0x03615428 LDR X9, [X9 + 0x120]
	0x0361542C CMP W8, 0x9
	0x03615430 LDR X9, [X9]
	0x03615434 STR X9, [X0 + 0x60]
	0x03615438 B.EQ 0x361574C
	0x0361543C ADRP X9, 0xB16000
	0x03615440 LDR X9, [X9 + 0x130]
	0x03615444 CMP W8, 0xA

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X24, 0xDCC000
	014 Move W8, [X24+1087]
	015 Move W19, W5
	016 Move X20, X4
	017 Move W23, W3
	018 Move X22, X1
	019 Move X21, X0
	020 Move TEMP, X8
	021 And TEMP, TEMP, 1
	022 Compare TEMP, 1
	023 JumpIfEqual {29}
	024 Move X0, 0xB26000
	025 Move X0, [X0+3848]
	026 Call 0x1C17CF4
	027 Move W8, 1
	028 Move [X24+1087], W8
	029 Move X8, [X22+16]
	030 Move X25, 0xDCC000
	031 Move W12, 48
	032 Move X9, X8
	033 NotImplemented "Instruction LDRH not yet implemented."
	034 Move W11, [X25+1107]
	035 NotImplemented "Instruction CMP not yet implemented."
	036 NotImplemented "Instruction CSEL not yet implemented."
	037 NotImplemented "Instruction CSEL not yet implemented."
	038 Compare W11, 0
	039 JumpIfNotEqual {45}
	040 Move X0, 0xB0E000
	041 Move X0, [X0+1416]
	042 Call 0x1C17CF4
	043 Move W8, 1
	044 Move [X25+1107], W8
	045 NotImplemented "Instruction LDRSW not yet implemented."
	046 Move W9, [X21+16]
	047 NotImplemented "Instruction CMP not yet implemented."
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Move X9, [X21+8]
	050 Add W10, W8, 1
	051 NotImplemented "Instruction STRH not yet implemented."
	052 Move [X21+24], W10
	053 Move X0, X21
	054 Move W1, W24
	055 Call ValueStringBuilder.GrowAndAppend, X0, X1
	056 Subtract W27, W23, 1
	057 Compare X20, 0
	058 JumpIfEqual {152}
	059 Move X24, 0xDCC000
	060 Move W8, [X24+1109]
	061 Move X23, [X20+56]
	062 Compare W8, 0
	063 JumpIfNotEqual {69}
	064 Move X0, 0xB0E000
	065 Move X0, [X0+1416]
	066 Call 0x1C17CF4
	067 Move W8, 1
	068 Move [X24+1109], W8
	069 Compare X23, 0
	070 JumpIfEqual {152}
	071 Move W8, [X23+16]
	072 NotImplemented "Instruction CMP not yet implemented."
	073 NotImplemented "Instruction LDRSW not yet implemented."
	074 Move W8, [X21+16]
	075 NotImplemented "Instruction CMP not yet implemented."
	076 NotImplemented "Instruction CMP not yet implemented."
	077 Move X28, [X21+8]
	078 Move X0, X23
	079 Move W1, W31
	080 Move X2, X31
	081 Call String.get_Chars, X0, X1
	082 Add W8, W24, 1
	083 NotImplemented "Instruction STRH not yet implemented."
	084 Move [X21+24], W8
	085 Move X0, X21
	086 Move X1, X23
	087 Call ValueStringBuilder.AppendSlow, X0, X1
	088 NotImplemented "Instruction CMP not yet implemented."
	089 Move X23, 0xB0E000
	090 Move X23, [X23+1416]
	091 Move W28, 48
	092 Move W29, 1
	093 Move X8, X26
	094 NotImplemented "Instruction LDRH not yet implemented."
	095 Move W10, [X25+1107]
	096 NotImplemented "Instruction CMP not yet implemented."
	097 NotImplemented "Instruction CSEL not yet implemented."
	098 NotImplemented "Instruction CSEL not yet implemented."
	099 Compare W10, 0
	100 JumpIfNotEqual {104}
	101 Move X0, X23
	102 Call 0x1C17CF4
	103 Move [X25+1107], W29
	104 NotImplemented "Instruction LDRSW not yet implemented."
	105 Move W9, [X21+16]
	106 NotImplemented "Instruction CMP not yet implemented."
	107 NotImplemented "Instruction CMP not yet implemented."
	108 Move X9, [X21+8]
	109 Add W10, W8, 1
	110 NotImplemented "Instruction STRH not yet implemented."
	111 Move [X21+24], W10
	112 Move X0, X21
	113 Move W1, W24
	114 Call ValueStringBuilder.GrowAndAppend, X0, X1
	115 Subtract W27, W27, 1
	116 NotImplemented "Instruction CMP not yet implemented."
	117 Move X8, [X22+16]
	118 NotImplemented "Instruction LDRH not yet implemented."
	119 Move X8, 0xB26000
	120 Move X8, [X8+3848]
	121 Compare W9, 0
	122 JumpIfEqual {125}
	123 Move W9, [X22+4]
	124 Subtract W22, W9, 1
	125 Move W22, W31
	126 Move X0, [X8]
	127 Move W8, [X0+224]
	128 Compare W8, 0
	129 JumpIfNotEqual {131}
	130 Call 0x1C17DFC
	131 Move X0, X21
	132 Move X1, X20
	133 Move W2, W22
	134 Move W3, W19
	135 Move X20, [X31+80]
	136 Move X19, [X31+88]
	137 Move X22, [X31+64]
	138 Move X21, [X31+72]
	139 Move X24, [X31+48]
	140 Move X23, [X31+56]
	141 Move X26, [X31+32]
	142 Move X25, [X31+40]
	143 Move X28, [X31+16]
	144 Move X27, [X31+24]
	145 Move W4, 3
	146 Move W5, 1
	147 Move X29, [X31+96]
	148 Move X30, [X31+104]
	149 Call Number.FormatExponent, X0, X1, X2, X3, X4, X5
	150 Return 
	151 Call 0x1C17F28
	152 Call 0x1C17F20

Method: System.Void FormatExponent(ref System.Text.ValueStringBuilder sb, System.Globalization.NumberFormatInfo info, System.Int32 value, System.Char expChar, System.Int32 minDigits, System.Boolean positiveSign)

Disassembly:
	0x03615C58 LDP X22, X21, [X31 + 0x30]
	0x03615C5C LDP X24, X23, [X31 + 0x20]
	0x03615C60 LDR X30, [X31 + 0x10]
	0x03615C64 ADD W8, W9, W8
	0x03615C68 STR W8, [X20 + 0x18]
	0x03615C6C LDP X20, X19, [X31 + 0x40]
	0x03615C70 ADD X31, X31, 0x50
	0x03615C74 RET
	0x03615C78 BL 0x1C16F20
	0x03615C7C STR X30, [X31 - 0x30]!
	0x03615C80 STP X22, X21, [X31 + 0x10]
	0x03615C84 STP X20, X19, [X31 + 0x20]
	0x03615C88 ADRP X21, 0xDCB000
	0x03615C8C LDRB W8, [X21 + 0x44F]
	0x03615C90 MOV W19, W1
	0x03615C94 MOV X20, X0
	0x03615C98 TBNZ X8, 0x0, 0x3615CBC
	0x03615C9C ADRP X0, 0xB0C000
	0x03615CA0 LDR X0, [X0 + 0x850]
	0x03615CA4 BL 0x1C16CF4
	0x03615CA8 ADRP X0, 0xB0D000
	0x03615CAC LDR X0, [X0 + 0x588]
	0x03615CB0 BL 0x1C16CF4
	0x03615CB4 MOVZ W8, 0x1
	0x03615CB8 STRB W8, [X21 + 0x44F]
	0x03615CBC LDR W8, [X20 + 0x10]
	0x03615CC0 LDRSW X21, [X20 + 0x18]
	0x03615CC4 ADRP X22, 0xB0C000
	0x03615CC8 LDR X22, [X22 + 0x850]
	0x03615CCC SUB W9, W8, W19
	0x03615CD0 CMP W21, W9
	0x03615CD4 B.LE 0x3615CE8
	0x03615CD8 MOV X0, X20
	0x03615CDC MOV W1, W19
	0x03615CE0 BL 0x3615764
	0x03615CE4 LDR W8, [X20 + 0x10]
	0x03615CE8 ADD W9, W21, W19
	0x03615CEC STR W9, [X20 + 0x18]
	0x03615CF0 LDR X22, [X22]
	0x03615CF4 SUBS W8, W8, W21
	0x03615CF8 B.CC 0x3615D04
	0x03615CFC CMP W8, W19
	0x03615D00 B.CS 0x3615D0C
	0x03615D04 MOV X0, X31
	0x03615D08 BL 0x339D6EC
	0x03615D0C LDR X0, [X22 + 0x20]
	0x03615D10 LDR X20, [X20 + 0x8]
	0x03615D14 LDRB W8, [X0 + 0x135]
	0x03615D18 TBNZ X8, 0x0, 0x3615D20
	0x03615D1C BL 0x1C5C684
	0x03615D20 ADD X0, X20, X21, 0x1, LSL
	0x03615D24 MOV W1, W19
	0x03615D28 LDP X20, X19, [X31 + 0x20]
	0x03615D2C LDP X22, X21, [X31 + 0x10]
	0x03615D30 LDR X30, [X31], #0x30
	0x03615D34 RET
	0x03615D38 STR X30, [X31 - 0x20]!
	0x03615D3C STP X20, X19, [X31 + 0x10]
	0x03615D40 ADRP X19, 0xDCB000
	0x03615D44 LDRB W8, [X19 + 0x451]
	0x03615D48 MOV X20, X0
	0x03615D4C TBNZ X8, 0x0, 0x3615D70
	0x03615D50 ADRP X0, 0xB09000
	0x03615D54 LDR X0, [X0 + 0xD58]
	0x03615D58 BL 0x1C16CF4
	0x03615D5C ADRP X0, 0xB09000
	0x03615D60 LDR X0, [X0 + 0xD60]
	0x03615D64 BL 0x1C16CF4
	0x03615D68 MOVZ W8, 0x1
	0x03615D6C STRB W8, [X19 + 0x451]
	0x03615D70 LDR X19, [X20]
	0x03615D74 MOVI V0.2D, 0x0
	0x03615D78 STP V0, V0, [X20]
	0x03615D7C CBZ X19, 0x3615E20
	0x03615D80 ADRP X8, 0xB09000
	0x03615D84 LDR X8, [X8 + 0xD60]
	0x03615D88 ADRP X20, 0xB09000
	0x03615D8C LDR X0, [X8]
	0x03615D90 LDR W8, [X0 + 0xE0]
	0x03615D94 LDR X20, [X20 + 0xD58]
	0x03615D98 CBNZ W8, 0x3615DA0
	0x03615D9C BL 0x1C16DFC
	0x03615DA0 LDR X20, [X20]
	0x03615DA4 LDR X0, [X20 + 0x20]
	0x03615DA8 LDRB W8, [X0 + 0x135]
	0x03615DAC TBNZ X8, 0x0, 0x3615DB4
	0x03615DB0 BL 0x1C5C684
	0x03615DB4 LDR X8, [X0 + 0xC0]
	0x03615DB8 LDR X0, [X8 + 0x8]
	0x03615DBC LDRB W8, [X0 + 0x135]
	0x03615DC0 TBNZ X8, 0x0, 0x3615DC8
	0x03615DC4 BL 0x1C5C684
	0x03615DC8 LDR W8, [X0 + 0xE0]
	0x03615DCC CBNZ W8, 0x3615DD4
	0x03615DD0 BL 0x1C16DFC
	0x03615DD4 LDR X0, [X20 + 0x20]
	0x03615DD8 LDRB W8, [X0 + 0x135]
	0x03615DDC TBNZ X8, 0x0, 0x3615DE4
	0x03615DE0 BL 0x1C5C684
	0x03615DE4 LDR X8, [X0 + 0xC0]
	0x03615DE8 LDR X0, [X8 + 0x8]
	0x03615DEC LDRB W8, [X0 + 0x135]
	0x03615DF0 TBNZ X8, 0x0, 0x3615DF8
	0x03615DF4 BL 0x1C5C684
	0x03615DF8 LDR X8, [X0 + 0xB8]
	0x03615DFC LDR X0, [X8]
	0x03615E00 CBZ X0, 0x3615E2C
	0x03615E04 LDR X8, [X0]
	0x03615E08 MOV X1, X19
	0x03615E0C LDP X20, X19, [X31 + 0x10]
	0x03615E10 MOV W2, W31
	0x03615E14 LDP X4, X3, [X8 + 0x188]
	0x03615E18 LDR X30, [X31], #0x20
	0x03615E1C BR X4
	0x03615E20 LDP X20, X19, [X31 + 0x10]
	0x03615E24 LDR X30, [X31], #0x20
	0x03615E28 RET
	0x03615E2C BL 0x1C16F20
	0x03615E30 STR X30, [X31 - 0x20]!
	0x03615E34 STP X20, X19, [X31 + 0x10]
	0x03615E38 ADRP X19, 0xDCB000
	0x03615E3C LDRB W8, [X19 + 0x456]
	0x03615E40 MOV X20, X0
	0x03615E44 CBNZ W8, 0x3615E68
	0x03615E48 ADRP X0, 0xB09000
	0x03615E4C LDR X0, [X0 + 0xD58]
	0x03615E50 BL 0x1C16CF4
	0x03615E54 ADRP X0, 0xB09000
	0x03615E58 LDR X0, [X0 + 0xD60]
	0x03615E5C BL 0x1C16CF4
	0x03615E60 MOVZ W8, 0x1
	0x03615E64 STRB W8, [X19 + 0x456]
	0x03615E68 LDR X19, [X20]
	0x03615E6C MOVI V0.2D, 0x0
	0x03615E70 STP V0, V0, [X20]
	0x03615E74 CBZ X19, 0x3615F18
	0x03615E78 ADRP X8, 0xB09000
	0x03615E7C LDR X8, [X8 + 0xD60]
	0x03615E80 LDR X0, [X8]
	0x03615E84 LDR W8, [X0 + 0xE0]
	0x03615E88 CBNZ W8, 0x3615E90
	0x03615E8C BL 0x1C16DFC
	0x03615E90 ADRP X8, 0xB09000
	0x03615E94 LDR X8, [X8 + 0xD58]
	0x03615E98 LDR X20, [X8]
	0x03615E9C LDR X0, [X20 + 0x20]
	0x03615EA0 LDRB W8, [X0 + 0x135]
	0x03615EA4 TBNZ X8, 0x0, 0x3615EAC
	0x03615EA8 BL 0x1C5C684
	0x03615EAC LDR X8, [X0 + 0xC0]
	0x03615EB0 LDR X0, [X8 + 0x8]
	0x03615EB4 LDRB W8, [X0 + 0x135]
	0x03615EB8 TBNZ X8, 0x0, 0x3615EC0
	0x03615EBC BL 0x1C5C684
	0x03615EC0 LDR W8, [X0 + 0xE0]
	0x03615EC4 CBNZ W8, 0x3615ECC
	0x03615EC8 BL 0x1C16DFC
	0x03615ECC LDR X0, [X20 + 0x20]
	0x03615ED0 LDRB W8, [X0 + 0x135]
	0x03615ED4 TBNZ X8, 0x0, 0x3615EDC
	0x03615ED8 BL 0x1C5C684
	0x03615EDC LDR X8, [X0 + 0xC0]
	0x03615EE0 LDR X0, [X8 + 0x8]
	0x03615EE4 LDRB W8, [X0 + 0x135]
	0x03615EE8 TBNZ X8, 0x0, 0x3615EF0
	0x03615EEC BL 0x1C5C684
	0x03615EF0 LDR X8, [X0 + 0xB8]
	0x03615EF4 LDR X0, [X8]
	0x03615EF8 CBZ X0, 0x3615F24
	0x03615EFC LDR X8, [X0]
	0x03615F00 MOV X1, X19
	0x03615F04 LDP X20, X19, [X31 + 0x10]
	0x03615F08 MOV W2, W31
	0x03615F0C LDP X4, X3, [X8 + 0x188]
	0x03615F10 LDR X30, [X31], #0x20
	0x03615F14 BR X4
	0x03615F18 LDP X20, X19, [X31 + 0x10]
	0x03615F1C LDR X30, [X31], #0x20
	0x03615F20 RET
	0x03615F24 BL 0x1C16F20
	0x03615F28 MOVN W8, 0x0
	0x03615F2C MOVZ W9, 0x1
	0x03615F30 MOV X1, X31
	0x03615F34 STR W8, [X0 + 0x1C]
	0x03615F38 STRB W9, [X0 + 0x20]
	0x03615F3C B 0x33A51F0
	0x03615F40 LDR X0, [X0 + 0x10]
	0x03615F44 RET

ISIL:
	001 Move [X31-80], X29
	002 Move [X31-72], X30
	003 Move [X31+16], X26
	004 Move [X31+24], X25
	005 Move [X31+32], X24
	006 Move [X31+40], X23
	007 Move [X31+48], X22
	008 Move [X31+56], X21
	009 Move [X31+64], X20
	010 Move [X31+72], X19
	011 Add X29, X31, 0
	012 Subtract X31, X31, 16
	013 NotImplemented "Instruction MRS not yet implemented."
	014 Move X8, [X25+40]
	015 Move X26, 0xDCC000
	016 Move W23, W5
	017 Move W20, W4
	018 Move [X29-8], X8
	019 Move W8, [X26+1088]
	020 Move W24, W3
	021 Move W21, W2
	022 Move X22, X1
	023 Move X19, X0
	024 Move TEMP, X8
	025 And TEMP, TEMP, 1
	026 Compare TEMP, 1
	027 JumpIfEqual {33}
	028 Move X0, 0xB26000
	029 Move X0, [X0+3848]
	030 Call 0x1C17CF4
	031 Move W8, 1
	032 Move [X26+1088], W8
	033 Move X26, 0xDCC000
	034 Move W8, [X26+1107]
	035 Compare W8, 0
	036 JumpIfNotEqual {42}
	037 Move X0, 0xB0E000
	038 Move X0, [X0+1416]
	039 Call 0x1C17CF4
	040 Move W8, 1
	041 Move [X26+1107], W8
	042 NotImplemented "Instruction LDRSW not yet implemented."
	043 Move W9, [X19+16]
	044 NotImplemented "Instruction CMP not yet implemented."
	045 NotImplemented "Instruction CMP not yet implemented."
	046 Move X9, [X19+8]
	047 Add W10, W8, 1
	048 NotImplemented "Instruction STRH not yet implemented."
	049 Move [X19+24], W10
	050 Move TEMP, X21
	051 And TEMP, TEMP, -2147483648
	052 Compare TEMP, -2147483648
	053 JumpIfNotEqual {89}
	054 Compare X22, 0
	055 JumpIfEqual {202}
	056 Move X23, 0xDCC000
	057 Move W8, [X23+1109]
	058 Move X22, [X22+48]
	059 Compare W8, 0
	060 JumpIfNotEqual {66}
	061 Move X0, 0xB0E000
	062 Move X0, [X0+1416]
	063 Call 0x1C17CF4
	064 Move W8, 1
	065 Move [X23+1109], W8
	066 Compare X22, 0
	067 JumpIfEqual {202}
	068 Move W8, [X22+16]
	069 NotImplemented "Instruction CMP not yet implemented."
	070 NotImplemented "Instruction LDRSW not yet implemented."
	071 Move W8, [X19+16]
	072 NotImplemented "Instruction CMP not yet implemented."
	073 NotImplemented "Instruction CMP not yet implemented."
	074 Move X24, [X19+8]
	075 Move X0, X22
	076 Move W1, W31
	077 Move X2, X31
	078 Call String.get_Chars, X0, X1
	079 Add W8, W23, 1
	080 NotImplemented "Instruction STRH not yet implemented."
	081 Move [X19+24], W8
	082 Move X0, X19
	083 Move W1, W24
	084 Call ValueStringBuilder.GrowAndAppend, X0, X1
	085 Move TEMP, X21
	086 And TEMP, TEMP, -2147483648
	087 Compare TEMP, -2147483648
	088 JumpIfEqual {54}
	089 Move TEMP, X23
	090 And TEMP, TEMP, 1
	091 Compare TEMP, 1
	092 JumpIfNotEqual {128}
	093 Compare X22, 0
	094 JumpIfEqual {202}
	095 Move X23, 0xDCC000
	096 Move W8, [X23+1109]
	097 Move X22, [X22+40]
	098 Compare W8, 0
	099 JumpIfNotEqual {105}
	100 Move X0, 0xB0E000
	101 Move X0, [X0+1416]
	102 Call 0x1C17CF4
	103 Move W8, 1
	104 Move [X23+1109], W8
	105 Compare X22, 0
	106 JumpIfEqual {202}
	107 Move W8, [X22+16]
	108 NotImplemented "Instruction CMP not yet implemented."
	109 NotImplemented "Instruction LDRSW not yet implemented."
	110 Move W8, [X19+16]
	111 NotImplemented "Instruction CMP not yet implemented."
	112 NotImplemented "Instruction CMP not yet implemented."
	113 Move X24, [X19+8]
	114 Move X0, X22
	115 Move W1, W31
	116 Move X2, X31
	117 Call String.get_Chars, X0, X1
	118 Add W8, W23, 1
	119 NotImplemented "Instruction STRH not yet implemented."
	120 Move [X19+24], W8
	121 Move X0, X19
	122 Move X1, X22
	123 Call ValueStringBuilder.AppendSlow, X0, X1
	124 Subtract W21, W31, W21
	125 Move X0, X19
	126 Move X1, X22
	127 Call ValueStringBuilder.AppendSlow, X0, X1
	128 Move X8, 0xB26000
	129 Move X8, [X8+3848]
	130 Add X9, X31, 0
	131 Subtract X22, X9, 32
	132 Add X31, X22, 0
	133 Move X0, [X8]
	134 Move [X9-32], X31
	135 Move [X9-24], X31
	136 Move [X9-18], X31
	137 Move W8, [X0+224]
	138 Compare W8, 0
	139 JumpIfNotEqual {141}
	140 Call 0x1C17DFC
	141 NotImplemented "Instruction CMP not yet implemented."
	142 Move W8, 10
	143 Move W23, 10
	144 Compare W21, 0
	145 JumpIfEqual {161}
	146 Move W9, 0xCCCD
	147 NotImplemented "Instruction MOVK not yet implemented."
	148 Move W23, 10
	149 NotImplemented "Instruction UMADDL not yet implemented."
	150 Move W10, W21
	151 Move X21, X12
	152 ShiftRight X21, 35
	153 And X21, X21, 0x7FFFFFFF
	154 Add W11, W20, W23
	155 NotImplemented "Instruction MSUB not yet implemented."
	156 Subtract W23, W23, 1
	157 Or W12, W12, 48
	158 NotImplemented "Instruction CMP not yet implemented."
	159 NotImplemented "Instruction STRH not yet implemented."
	160 NotImplemented "Instruction CMP not yet implemented."
	161 Move W8, 9
	162 NotImplemented "Instruction CMP not yet implemented."
	163 Move X20, 0xB0E000
	164 Move X20, [X20+1416]
	165 Move W24, 1
	166 Move W8, [X26+1107]
	167 NotImplemented "Instruction LDRH not yet implemented."
	168 Compare W8, 0
	169 JumpIfNotEqual {173}
	170 Move X0, X20
	171 Call 0x1C17CF4
	172 Move [X26+1107], W24
	173 NotImplemented "Instruction LDRSW not yet implemented."
	174 Move W9, [X19+16]
	175 NotImplemented "Instruction CMP not yet implemented."
	176 NotImplemented "Instruction CMP not yet implemented."
	177 Move X9, [X19+8]
	178 Add W10, W8, 1
	179 NotImplemented "Instruction STRH not yet implemented."
	180 Move [X19+24], W10
	181 Move X0, X19
	182 Move W1, W21
	183 Call ValueStringBuilder.GrowAndAppend, X0, X1
	184 Add W23, W23, 1
	185 NotImplemented "Instruction CMP not yet implemented."
	186 Move X8, [X25+40]
	187 NotImplemented "Instruction LDUR not yet implemented."
	188 NotImplemented "Instruction CMP not yet implemented."
	189 Add X31, X29, 0
	190 Move X20, [X31+64]
	191 Move X19, [X31+72]
	192 Move X22, [X31+48]
	193 Move X21, [X31+56]
	194 Move X24, [X31+32]
	195 Move X23, [X31+40]
	196 Move X26, [X31+16]
	197 Move X25, [X31+24]
	198 Move X29, [X31+80]
	199 Move X30, [X31+88]
	200 Return 
	201 Call 0x1C17F28
	202 Call 0x1C17F20
	203 Call 0x3EB2B20

Method: System.Void FormatGeneral(ref System.Text.ValueStringBuilder sb, ref System.Globalization.FormatProvider/Number/NumberBuffer number, System.Int32 nMinDigits, System.Int32 nMaxDigits, System.Globalization.NumberFormatInfo info, System.Char expChar, System.Boolean bSuppressScientific)

Disassembly:
	0x03615448 LDR X9, [X9]
	0x0361544C STR X9, [X0 + 0x68]
	0x03615450 B.LS 0x361574C
	0x03615454 ADRP X9, 0xB16000
	0x03615458 LDR X9, [X9 + 0x150]
	0x0361545C CMP W8, 0xB
	0x03615460 LDR X9, [X9]
	0x03615464 STR X9, [X0 + 0x70]
	0x03615468 B.EQ 0x361574C
	0x0361546C ADRP X9, 0xB16000
	0x03615470 LDR X9, [X9 + 0x80]
	0x03615474 CMP W8, 0xC
	0x03615478 LDR X9, [X9]
	0x0361547C STR X9, [X0 + 0x78]
	0x03615480 B.LS 0x361574C
	0x03615484 ADRP X9, 0xB16000
	0x03615488 LDR X9, [X9 + 0xC8]
	0x0361548C CMP W8, 0xD
	0x03615490 LDR X9, [X9]
	0x03615494 STR X9, [X0 + 0x80]
	0x03615498 B.EQ 0x361574C
	0x0361549C ADRP X9, 0xB16000
	0x036154A0 LDR X9, [X9 + 0x40]
	0x036154A4 CMP W8, 0xE
	0x036154A8 LDR X9, [X9]
	0x036154AC STR X9, [X0 + 0x88]
	0x036154B0 B.LS 0x361574C
	0x036154B4 ADRP X9, 0xB16000
	0x036154B8 LDR X9, [X9 + 0xB0]
	0x036154BC CMP W8, 0xF
	0x036154C0 LDR X9, [X9]
	0x036154C4 STR X9, [X0 + 0x90]
	0x036154C8 B.EQ 0x361574C
	0x036154CC ADRP X8, 0xB16000
	0x036154D0 LDR X8, [X8 + 0x138]
	0x036154D4 MOVZ W1, 0x4
	0x036154D8 LDR X8, [X8]
	0x036154DC STR X8, [X0 + 0x98]
	0x036154E0 LDR X8, [X20]
	0x036154E4 LDR X8, [X8 + 0xB8]
	0x036154E8 STR X0, [X8 + 0x8]
	0x036154EC LDR X0, [X19]
	0x036154F0 BL 0x1C16D6C
	0x036154F4 CBZ X0, 0x3615750
	0x036154F8 LDR W8, [X0 + 0x18]
	0x036154FC CBZ W8, 0x361574C
	0x03615500 ADRP X9, 0xB16000
	0x03615504 LDR X9, [X9 + 0x118]
	0x03615508 CMP W8, 0x1
	0x0361550C LDR X9, [X9]
	0x03615510 STR X9, [X0 + 0x20]
	0x03615514 B.EQ 0x361574C
	0x03615518 ADRP X9, 0xB16000
	0x0361551C LDR X9, [X9 + 0x70]
	0x03615520 CMP W8, 0x2
	0x03615524 LDR X9, [X9]
	0x03615528 STR X9, [X0 + 0x28]
	0x0361552C B.LS 0x361574C
	0x03615530 ADRP X9, 0xB16000
	0x03615534 LDR X9, [X9 + 0x50]
	0x03615538 CMP W8, 0x3
	0x0361553C LDR X9, [X9]
	0x03615540 STR X9, [X0 + 0x30]
	0x03615544 B.EQ 0x361574C
	0x03615548 ADRP X8, 0xB16000
	0x0361554C LDR X8, [X8 + 0xD0]
	0x03615550 MOVZ W1, 0xC
	0x03615554 LDR X8, [X8]
	0x03615558 STR X8, [X0 + 0x38]
	0x0361555C LDR X8, [X20]
	0x03615560 LDR X8, [X8 + 0xB8]
	0x03615564 STR X0, [X8 + 0x10]
	0x03615568 LDR X0, [X19]
	0x0361556C BL 0x1C16D6C
	0x03615570 CBZ X0, 0x3615750
	0x03615574 LDR W8, [X0 + 0x18]
	0x03615578 CBZ W8, 0x361574C
	0x0361557C ADRP X9, 0xB16000
	0x03615580 LDR X9, [X9 + 0x110]
	0x03615584 CMP W8, 0x1
	0x03615588 LDR X9, [X9]
	0x0361558C STR X9, [X0 + 0x20]
	0x03615590 B.EQ 0x361574C
	0x03615594 ADRP X9, 0xB16000
	0x03615598 LDR X9, [X9 + 0x158]
	0x0361559C CMP W8, 0x2
	0x036155A0 LDR X9, [X9]
	0x036155A4 STR X9, [X0 + 0x28]
	0x036155A8 B.LS 0x361574C
	0x036155AC ADRP X9, 0xB16000
	0x036155B0 LDR X9, [X9 + 0x78]
	0x036155B4 CMP W8, 0x3
	0x036155B8 LDR X9, [X9]
	0x036155BC STR X9, [X0 + 0x30]
	0x036155C0 B.EQ 0x361574C
	0x036155C4 ADRP X9, 0xB16000
	0x036155C8 LDR X9, [X9 + 0x28]
	0x036155CC CMP W8, 0x4
	0x036155D0 LDR X9, [X9]
	0x036155D4 STR X9, [X0 + 0x38]
	0x036155D8 B.LS 0x361574C
	0x036155DC ADRP X9, 0xB16000
	0x036155E0 LDR X9, [X9 + 0x30]
	0x036155E4 CMP W8, 0x5
	0x036155E8 LDR X9, [X9]
	0x036155EC STR X9, [X0 + 0x40]
	0x036155F0 B.EQ 0x361574C
	0x036155F4 ADRP X9, 0xB16000
	0x036155F8 LDR X9, [X9 + 0x108]
	0x036155FC CMP W8, 0x6
	0x03615600 LDR X9, [X9]
	0x03615604 STR X9, [X0 + 0x48]
	0x03615608 B.LS 0x361574C
	0x0361560C ADRP X9, 0xB16000
	0x03615610 LDR X9, [X9 + 0xD8]
	0x03615614 CMP W8, 0x7
	0x03615618 LDR X9, [X9]
	0x0361561C STR X9, [X0 + 0x50]
	0x03615620 B.EQ 0x361574C
	0x03615624 ADRP X9, 0xB16000
	0x03615628 LDR X9, [X9 + 0xF8]
	0x0361562C CMP W8, 0x8
	0x03615630 LDR X9, [X9]
	0x03615634 STR X9, [X0 + 0x58]
	0x03615638 B.LS 0x361574C
	0x0361563C ADRP X9, 0xB16000
	0x03615640 LDR X9, [X9 + 0xE8]
	0x03615644 CMP W8, 0x9
	0x03615648 LDR X9, [X9]
	0x0361564C STR X9, [X0 + 0x60]
	0x03615650 B.EQ 0x361574C
	0x03615654 ADRP X9, 0xB16000
	0x03615658 LDR X9, [X9 + 0x38]
	0x0361565C CMP W8, 0xA
	0x03615660 LDR X9, [X9]
	0x03615664 STR X9, [X0 + 0x68]
	0x03615668 B.LS 0x361574C
	0x0361566C ADRP X9, 0xB16000
	0x03615670 LDR X9, [X9 + 0xA0]
	0x03615674 CMP W8, 0xB
	0x03615678 LDR X9, [X9]
	0x0361567C STR X9, [X0 + 0x70]
	0x03615680 B.EQ 0x361574C
	0x03615684 ADRP X8, 0xB16000
	0x03615688 LDR X8, [X8 + 0x88]
	0x0361568C MOVZ W1, 0x5
	0x03615690 LDR X8, [X8]
	0x03615694 STR X8, [X0 + 0x78]
	0x03615698 LDR X8, [X20]
	0x0361569C LDR X8, [X8 + 0xB8]
	0x036156A0 STR X0, [X8 + 0x18]
	0x036156A4 LDR X0, [X19]
	0x036156A8 BL 0x1C16D6C
	0x036156AC CBZ X0, 0x3615750
	0x036156B0 LDR W8, [X0 + 0x18]
	0x036156B4 CBZ W8, 0x361574C
	0x036156B8 ADRP X9, 0xB16000
	0x036156BC LDR X9, [X9 + 0x168]
	0x036156C0 CMP W8, 0x1
	0x036156C4 LDR X9, [X9]
	0x036156C8 STR X9, [X0 + 0x20]
	0x036156CC B.EQ 0x361574C
	0x036156D0 ADRP X9, 0xB16000
	0x036156D4 LDR X9, [X9 + 0x48]
	0x036156D8 CMP W8, 0x2
	0x036156DC LDR X9, [X9]
	0x036156E0 STR X9, [X0 + 0x28]
	0x036156E4 B.LS 0x361574C
	0x036156E8 ADRP X9, 0xB16000
	0x036156EC LDR X9, [X9 + 0xE0]
	0x036156F0 CMP W8, 0x3
	0x036156F4 LDR X9, [X9]
	0x036156F8 STR X9, [X0 + 0x30]
	0x036156FC B.EQ 0x361574C
	0x03615700 ADRP X9, 0xB16000
	0x03615704 LDR X9, [X9 + 0x98]
	0x03615708 CMP W8, 0x4
	0x0361570C LDR X9, [X9]
	0x03615710 STR X9, [X0 + 0x38]
	0x03615714 B.LS 0x361574C
	0x03615718 ADRP X8, 0xB16000
	0x0361571C LDR X8, [X8 + 0xF0]
	0x03615720 ADRP X9, 0xADF000
	0x03615724 LDR X8, [X8]
	0x03615728 STR X8, [X0 + 0x40]
	0x0361572C LDR X8, [X20]
	0x03615730 LDR X8, [X8 + 0xB8]
	0x03615734 LDR X9, [X9 + 0xA08]
	0x03615738 LDP X20, X19, [X31 + 0x10]
	0x0361573C LDR X9, [X9]
	0x03615740 STP X0, X9, [X8 + 0x20]
	0x03615744 LDR X30, [X31], #0x20
	0x03615748 RET
	0x0361574C BL 0x1C16F28
	0x03615750 BL 0x1C16F20
	0x03615754 LDR X0, [X0 + 0x10]
	0x03615758 RET
	0x0361575C LDR W0, [X0 + 0x18]
	0x03615760 RET
	0x03615764 STP X30, X25, [X31 - 0x40]!
	0x03615768 STP X24, X23, [X31 + 0x10]
	0x0361576C STP X22, X21, [X31 + 0x20]
	0x03615770 STP X20, X19, [X31 + 0x30]
	0x03615774 ADRP X21, 0xDCB000
	0x03615778 ADRP X22, 0xB09000
	0x0361577C LDRB W8, [X21 + 0x450]
	0x03615780 LDR X22, [X22 + 0xD60]
	0x03615784 MOV W20, W1
	0x03615788 MOV X19, X0
	0x0361578C TBNZ X8, 0x0, 0x36157E0
	0x03615790 ADRP X0, 0xB09000
	0x03615794 LDR X0, [X0 + 0xD58]
	0x03615798 BL 0x1C16CF4
	0x0361579C ADRP X0, 0xB09000
	0x036157A0 LDR X0, [X0 + 0xD60]
	0x036157A4 BL 0x1C16CF4
	0x036157A8 ADRP X0, 0xADE000
	0x036157AC LDR X0, [X0 + 0x5A8]
	0x036157B0 BL 0x1C16CF4
	0x036157B4 ADRP X0, 0xB0D000
	0x036157B8 LDR X0, [X0 + 0x918]
	0x036157BC BL 0x1C16CF4
	0x036157C0 ADRP X0, 0xB0D000
	0x036157C4 LDR X0, [X0 + 0x588]
	0x036157C8 BL 0x1C16CF4
	0x036157CC ADRP X0, 0xB0D000

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X19, 0xDCC000
	015 Move W8, [X19+1089]
	016 Move W24, W6
	017 Move W29, W5
	018 Move X22, X4
	019 Move W23, W3
	020 Move X27, X1
	021 Move X21, X0
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {31}
	026 Move X0, 0xB26000
	027 Move X0, [X0+3848]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X19+1089], W8
	031 Move W28, [X27+4]
	032 Move X25, 0xDCC000
	033 Move [X31+8], X27
	034 Move TEMP, X24
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfNotEqual {39}
	038 Move W26, W31
	039 Add W31, W28, 3
	040 NotImplemented "Instruction CSET not yet implemented."
	041 NotImplemented "Instruction CMP not yet implemented."
	042 NotImplemented "Instruction CSET not yet implemented."
	043 Or W26, W9, W8
	044 Add W31, W28, 4
	045 Move X27, [X27+16]
	046 NotImplemented "Instruction CMP not yet implemented."
	047 Move W20, W26
	048 Move W26, W29
	049 Move W8, [X25+1107]
	050 Compare W8, 0
	051 JumpIfNotEqual {57}
	052 Move X0, 0xB0E000
	053 Move X0, [X0+1416]
	054 Call 0x1C17CF4
	055 Move W8, 1
	056 Move [X25+1107], W8
	057 NotImplemented "Instruction LDRSW not yet implemented."
	058 Move W9, [X21+16]
	059 NotImplemented "Instruction CMP not yet implemented."
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Move X9, [X21+8]
	062 Move W10, 48
	063 Add W11, W8, 1
	064 NotImplemented "Instruction STRH not yet implemented."
	065 Move [X21+24], W11
	066 Move TEMP, X28
	067 And TEMP, TEMP, -2147483648
	068 Compare TEMP, -2147483648
	069 JumpIfNotEqual {110}
	070 Move X27, [X27+16]
	071 Move W20, W26
	072 Move W26, W29
	073 Move W28, 1
	074 Move X23, 0xB0E000
	075 Move X23, [X23+1416]
	076 Add W28, W28, 1
	077 Move W29, 48
	078 Move W19, 1
	079 Move X8, X27
	080 NotImplemented "Instruction LDRH not yet implemented."
	081 Move W10, [X25+1107]
	082 NotImplemented "Instruction CMP not yet implemented."
	083 NotImplemented "Instruction CSEL not yet implemented."
	084 NotImplemented "Instruction CSEL not yet implemented."
	085 Compare W10, 0
	086 JumpIfNotEqual {90}
	087 Move X0, X23
	088 Call 0x1C17CF4
	089 Move [X25+1107], W19
	090 NotImplemented "Instruction LDRSW not yet implemented."
	091 Move W9, [X21+16]
	092 NotImplemented "Instruction CMP not yet implemented."
	093 NotImplemented "Instruction CMP not yet implemented."
	094 Move X9, [X21+8]
	095 Add W10, W8, 1
	096 NotImplemented "Instruction STRH not yet implemented."
	097 Move [X21+24], W10
	098 Move X0, X21
	099 Move W1, W24
	100 Call ValueStringBuilder.GrowAndAppend, X0, X1
	101 Subtract W28, W28, 1
	102 NotImplemented "Instruction CMP not yet implemented."
	103 Move W28, W31
	104 Move W29, W26
	105 Move W26, W20
	106 Move TEMP, X28
	107 And TEMP, TEMP, -2147483648
	108 Compare TEMP, -2147483648
	109 JumpIfEqual {113}
	110 NotImplemented "Instruction LDRH not yet implemented."
	111 Compare W8, 0
	112 JumpIfEqual {200}
	113 Compare X22, 0
	114 JumpIfEqual {254}
	115 Move X19, 0xDCC000
	116 Move W8, [X19+1109]
	117 Move X23, [X22+56]
	118 Compare W8, 0
	119 JumpIfNotEqual {125}
	120 Move X0, 0xB0E000
	121 Move X0, [X0+1416]
	122 Call 0x1C17CF4
	123 Move W8, 1
	124 Move [X19+1109], W8
	125 Compare X23, 0
	126 JumpIfEqual {254}
	127 Move W8, [X23+16]
	128 NotImplemented "Instruction CMP not yet implemented."
	129 NotImplemented "Instruction LDRSW not yet implemented."
	130 Move W8, [X21+16]
	131 NotImplemented "Instruction CMP not yet implemented."
	132 NotImplemented "Instruction CMP not yet implemented."
	133 Move X24, [X21+8]
	134 Move X0, X23
	135 Move W1, W31
	136 Move X2, X31
	137 Call String.get_Chars, X0, X1
	138 Add W8, W19, 1
	139 NotImplemented "Instruction STRH not yet implemented."
	140 Move [X21+24], W8
	141 Move TEMP, X28
	142 And TEMP, TEMP, -2147483648
	143 Compare TEMP, -2147483648
	144 JumpIfNotEqual {174}
	145 Move X0, X21
	146 Move X1, X23
	147 Call ValueStringBuilder.AppendSlow, X0, X1
	148 Move TEMP, X28
	149 And TEMP, TEMP, -2147483648
	150 Compare TEMP, -2147483648
	151 JumpIfNotEqual {174}
	152 Move X23, 0xB0E000
	153 Move X23, [X23+1416]
	154 Move W19, 1
	155 Move W24, 48
	156 Move W8, [X25+1107]
	157 Compare W8, 0
	158 JumpIfNotEqual {162}
	159 Move X0, X23
	160 Call 0x1C17CF4
	161 Move [X25+1107], W19
	162 NotImplemented "Instruction LDRSW not yet implemented."
	163 Move W9, [X21+16]
	164 NotImplemented "Instruction CMP not yet implemented."
	165 NotImplemented "Instruction CMP not yet implemented."
	166 Move X9, [X21+8]
	167 Add W10, W8, 1
	168 NotImplemented "Instruction STRH not yet implemented."
	169 Move [X21+24], W10
	170 Move W1, 48
	171 Move X0, X21
	172 Call ValueStringBuilder.GrowAndAppend, X0, X1
	173 Add W28, W28, 1
	174 NotImplemented "Instruction LDRH not yet implemented."
	175 Compare W24, 0
	176 JumpIfEqual {200}
	177 Move X23, 0xB0E000
	178 Move X23, [X23+1416]
	179 Move W19, 1
	180 Move W8, [X25+1107]
	181 Compare W8, 0
	182 JumpIfNotEqual {186}
	183 Move X0, X23
	184 Call 0x1C17CF4
	185 Move [X25+1107], W19
	186 NotImplemented "Instruction LDRSW not yet implemented."
	187 Move W9, [X21+16]
	188 NotImplemented "Instruction CMP not yet implemented."
	189 NotImplemented "Instruction CMP not yet implemented."
	190 Move X9, [X21+8]
	191 Add W10, W8, 1
	192 NotImplemented "Instruction STRH not yet implemented."
	193 Move [X21+24], W10
	194 Move X0, X21
	195 Move W1, W24
	196 Call ValueStringBuilder.GrowAndAppend, X0, X1
	197 NotImplemented "Instruction LDRH not yet implemented."
	198 Compare W24, 0
	199 JumpIfNotEqual {180}
	200 Compare W26, 0
	201 JumpIfEqual {232}
	202 Move X8, 0xB26000
	203 Move X8, [X8+3848]
	204 Move X9, [X31+8]
	205 Move X0, [X8]
	206 Move W19, [X9+4]
	207 Move W8, [X0+224]
	208 Compare W8, 0
	209 JumpIfNotEqual {211}
	210 Call 0x1C17DFC
	211 Subtract W2, W19, 1
	212 Move X0, X21
	213 Move X1, X22
	214 Move W3, W29
	215 Move X20, [X31+96]
	216 Move X19, [X31+104]
	217 Move X22, [X31+80]
	218 Move X21, [X31+88]
	219 Move X24, [X31+64]
	220 Move X23, [X31+72]
	221 Move X26, [X31+48]
	222 Move X25, [X31+56]
	223 Move X28, [X31+32]
	224 Move X27, [X31+40]
	225 Move X29, [X31+16]
	226 Move X30, [X31+24]
	227 Move W4, 2
	228 Move W5, 1
	229 Add X31, X31, 112
	230 Call Number.FormatExponent, X0, X1, X2, X3, X4, X5
	231 Return 
	232 Move X20, [X31+96]
	233 Move X19, [X31+104]
	234 Move X22, [X31+80]
	235 Move X21, [X31+88]
	236 Move X24, [X31+64]
	237 Move X23, [X31+72]
	238 Move X26, [X31+48]
	239 Move X25, [X31+56]
	240 Move X28, [X31+32]
	241 Move X27, [X31+40]
	242 Move X29, [X31+16]
	243 Move X30, [X31+24]
	244 Add X31, X31, 112
	245 Return 
	246 Move W1, 48
	247 Move X0, X21
	248 Call ValueStringBuilder.GrowAndAppend, X0, X1
	249 Move TEMP, X28
	250 And TEMP, TEMP, -2147483648
	251 Compare TEMP, -2147483648
	252 JumpIfNotEqual {110}
	253 Call 0x1C17F28
	254 Call 0x1C17F20

Method: System.Void FormatPercent(ref System.Text.ValueStringBuilder sb, ref System.Globalization.FormatProvider/Number/NumberBuffer number, System.Int32 nMinDigits, System.Int32 nMaxDigits, System.Globalization.NumberFormatInfo info)

Disassembly:
	0x036157D0 LDR X0, [X0 + 0x2D0]
	0x036157D4 BL 0x1C16CF4
	0x036157D8 MOVZ W8, 0x1
	0x036157DC STRB W8, [X21 + 0x450]
	0x036157E0 LDR X0, [X22]
	0x036157E4 ADRP X23, 0xB09000
	0x036157E8 LDR W8, [X0 + 0xE0]
	0x036157EC LDR X23, [X23 + 0xD58]
	0x036157F0 CBNZ W8, 0x36157F8
	0x036157F4 BL 0x1C16DFC
	0x036157F8 LDR X21, [X23]
	0x036157FC LDR X0, [X21 + 0x20]
	0x03615800 LDRB W8, [X0 + 0x135]
	0x03615804 TBNZ X8, 0x0, 0x361580C
	0x03615808 BL 0x1C5C684
	0x0361580C LDR X8, [X0 + 0xC0]
	0x03615810 LDR X0, [X8 + 0x8]
	0x03615814 LDRB W8, [X0 + 0x135]
	0x03615818 TBNZ X8, 0x0, 0x3615820
	0x0361581C BL 0x1C5C684
	0x03615820 LDR W8, [X0 + 0xE0]
	0x03615824 CBNZ W8, 0x361582C
	0x03615828 BL 0x1C16DFC
	0x0361582C LDR X0, [X21 + 0x20]
	0x03615830 LDRB W8, [X0 + 0x135]
	0x03615834 TBNZ X8, 0x0, 0x361583C
	0x03615838 BL 0x1C5C684
	0x0361583C LDR X8, [X0 + 0xC0]
	0x03615840 ADRP X21, 0xADE000
	0x03615844 LDR X0, [X8 + 0x8]
	0x03615848 LDRB W8, [X0 + 0x135]
	0x0361584C LDR X21, [X21 + 0x5A8]
	0x03615850 TBNZ X8, 0x0, 0x3615858
	0x03615854 BL 0x1C5C684
	0x03615858 LDR X8, [X0 + 0xB8]
	0x0361585C LDR X0, [X21]
	0x03615860 LDR W24, [X19 + 0x18]
	0x03615864 LDR W25, [X19 + 0x10]
	0x03615868 LDR X21, [X8]
	0x0361586C LDR W8, [X0 + 0xE0]
	0x03615870 CBNZ W8, 0x3615878
	0x03615874 BL 0x1C16DFC
	0x03615878 ADD W0, W24, W20
	0x0361587C UBFM W1, W25, 0x1F, 0x1E
	0x03615880 MOV X2, X31
	0x03615884 BL 0x337EDF0
	0x03615888 CBZ X21, 0x36159A4
	0x0361588C LDR X8, [X21]
	0x03615890 ADRP X24, 0xB0D000
	0x03615894 ADRP X25, 0xB0D000
	0x03615898 MOV W1, W0
	0x0361589C LDP X9, X2, [X8 + 0x178]
	0x036158A0 LDR X24, [X24 + 0x2D0]
	0x036158A4 LDR X25, [X25 + 0x918]
	0x036158A8 MOV X0, X21
	0x036158AC ADD X20, X19, 0x8
	0x036158B0 BLR X9
	0x036158B4 LDR X1, [X24]
	0x036158B8 MOV X21, X0
	0x036158BC BL 0x25FBC40
	0x036158C0 LDR X3, [X25]
	0x036158C4 MOV X2, X0
	0x036158C8 MOV X4, X1
	0x036158CC MOV X0, X20
	0x036158D0 MOV X1, X2
	0x036158D4 MOV X2, X4
	0x036158D8 BL 0x25FB714
	0x036158DC LDR X20, [X19]
	0x036158E0 STR X21, [X19]
	0x036158E4 LDR X1, [X24]
	0x036158E8 MOV X0, X21
	0x036158EC BL 0x25FBC40
	0x036158F0 STP X0, X1, [X19 + 0x8]
	0x036158F4 CBZ X20, 0x3615990
	0x036158F8 LDR X0, [X22]
	0x036158FC LDR W8, [X0 + 0xE0]
	0x03615900 CBNZ W8, 0x3615908
	0x03615904 BL 0x1C16DFC
	0x03615908 LDR X19, [X23]
	0x0361590C LDR X0, [X19 + 0x20]
	0x03615910 LDRB W8, [X0 + 0x135]
	0x03615914 TBNZ X8, 0x0, 0x361591C
	0x03615918 BL 0x1C5C684
	0x0361591C LDR X8, [X0 + 0xC0]
	0x03615920 LDR X0, [X8 + 0x8]
	0x03615924 LDRB W8, [X0 + 0x135]
	0x03615928 TBNZ X8, 0x0, 0x3615930
	0x0361592C BL 0x1C5C684
	0x03615930 LDR W8, [X0 + 0xE0]
	0x03615934 CBNZ W8, 0x361593C
	0x03615938 BL 0x1C16DFC
	0x0361593C LDR X0, [X19 + 0x20]
	0x03615940 LDRB W8, [X0 + 0x135]
	0x03615944 TBNZ X8, 0x0, 0x361594C
	0x03615948 BL 0x1C5C684
	0x0361594C LDR X8, [X0 + 0xC0]
	0x03615950 LDR X0, [X8 + 0x8]
	0x03615954 LDRB W8, [X0 + 0x135]
	0x03615958 TBNZ X8, 0x0, 0x3615960
	0x0361595C BL 0x1C5C684
	0x03615960 LDR X8, [X0 + 0xB8]
	0x03615964 LDR X0, [X8]
	0x03615968 CBZ X0, 0x36159A4
	0x0361596C LDR X8, [X0]
	0x03615970 MOV X1, X20
	0x03615974 LDP X20, X19, [X31 + 0x30]
	0x03615978 LDP X22, X21, [X31 + 0x20]
	0x0361597C LDP X4, X3, [X8 + 0x188]
	0x03615980 LDP X24, X23, [X31 + 0x10]
	0x03615984 MOV W2, W31
	0x03615988 LDP X30, X25, [X31], #0x40
	0x0361598C BR X4
	0x03615990 LDP X20, X19, [X31 + 0x30]
	0x03615994 LDP X22, X21, [X31 + 0x20]
	0x03615998 LDP X24, X23, [X31 + 0x10]
	0x0361599C LDP X30, X25, [X31], #0x40
	0x036159A0 RET
	0x036159A4 BL 0x1C16F20
	0x036159A8 STP X30, X21, [X31 - 0x20]!
	0x036159AC STP X20, X19, [X31 + 0x10]
	0x036159B0 ADRP X21, 0xDCB000
	0x036159B4 LDRB W8, [X21 + 0x44A]
	0x036159B8 MOV W19, W1
	0x036159BC MOV X20, X0
	0x036159C0 TBNZ X8, 0x0, 0x36159D8
	0x036159C4 ADRP X0, 0xB0D000
	0x036159C8 LDR X0, [X0 + 0x588]
	0x036159CC BL 0x1C16CF4
	0x036159D0 MOVZ W8, 0x1
	0x036159D4 STRB W8, [X21 + 0x44A]
	0x036159D8 LDRSW X8, [X20 + 0x18]
	0x036159DC LDR W9, [X20 + 0x10]
	0x036159E0 CMP W8, W9
	0x036159E4 B.GE 0x3615A0C
	0x036159E8 CMP W8, W9
	0x036159EC B.CS 0x3615A20
	0x036159F0 LDR X9, [X20 + 0x8]
	0x036159F4 ADD W10, W8, 0x1
	0x036159F8 STRH W19, [X9, X8, LSL #1]
	0x036159FC STR W10, [X20 + 0x18]
	0x03615A00 LDP X20, X19, [X31 + 0x10]
	0x03615A04 LDP X30, X21, [X31], #0x20
	0x03615A08 RET
	0x03615A0C MOV X0, X20
	0x03615A10 MOV W1, W19
	0x03615A14 LDP X20, X19, [X31 + 0x10]
	0x03615A18 LDP X30, X21, [X31], #0x20
	0x03615A1C B 0x3615A24
	0x03615A20 BL 0x1C16F28
	0x03615A24 STP X30, X23, [X31 - 0x30]!
	0x03615A28 STP X22, X21, [X31 + 0x10]
	0x03615A2C STP X20, X19, [X31 + 0x20]

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X23, 0xDCC000
	015 Move X24, 0xB26000
	016 Move W8, [X23+1090]
	017 Move X24, [X24+3848]
	018 Move X19, X4
	019 Move W20, W3
	020 Move X21, X1
	021 Move X22, X0
	022 Move TEMP, X8
	023 And TEMP, TEMP, 1
	024 Compare TEMP, 1
	025 JumpIfEqual {31}
	026 Move X0, 0xB26000
	027 Move X0, [X0+3848]
	028 Call 0x1C17CF4
	029 Move W8, 1
	030 Move [X23+1090], W8
	031 Move X0, [X24]
	032 Move W23, [X21+8]
	033 Move W8, [X0+224]
	034 Compare W8, 0
	035 JumpIfNotEqual {38}
	036 Call 0x1C17DFC
	037 Move X0, [X24]
	038 Move X8, [X0+184]
	039 Compare W23, 0
	040 JumpIfEqual {47}
	041 Compare X19, 0
	042 JumpIfEqual {162}
	043 Move X8, [X8+24]
	044 Compare X8, 0
	045 JumpIfEqual {162}
	046 Move W9, [X19+196]
	047 Compare X19, 0
	048 JumpIfEqual {162}
	049 Move X8, [X8+16]
	050 Compare X8, 0
	051 JumpIfEqual {162}
	052 Move W9, [X19+192]
	053 Move W10, [X8+24]
	054 NotImplemented "Instruction CMP not yet implemented."
	055 Add X8, X8, W9
	056 Move X23, [X8+32]
	057 Compare X23, 0
	058 JumpIfEqual {162}
	059 Move W8, [X23+16]
	060 NotImplemented "Instruction CMP not yet implemented."
	061 Move W24, W31
	062 Move X29, 0xDCC000
	063 Move X25, 0xDCC000
	064 Move X0, X23
	065 Move W1, W24
	066 Move X2, X31
	067 Call String.get_Chars, X0, X1
	068 And W8, W0, 0xFFFF
	069 NotImplemented "Instruction CMP not yet implemented."
	070 NotImplemented "Instruction CMP not yet implemented."
	071 NotImplemented "Instruction CMP not yet implemented."
	072 Move X0, X19
	073 Move X1, X31
	074 Call NumberFormatInfo.get_PercentGroupSizes, X0
	075 Move X8, 0xB26000
	076 Move X8, [X8+3848]
	077 Move X27, [X19+128]
	078 Move X26, [X19+136]
	079 Move X28, X0
	080 Move X8, [X8]
	081 Move W9, [X8+224]
	082 Compare W9, 0
	083 JumpIfNotEqual {86}
	084 Move X0, X8
	085 Call 0x1C17DFC
	086 Move X0, X22
	087 Move X1, X21
	088 Move W3, W20
	089 Move X5, X28
	090 Move X6, X27
	091 Move X7, X26
	092 Call Number.FormatFixed, X0, X1, X2, X3, X4, X5, X6, X7
	093 Move W8, [X29+1109]
	094 Move X26, [X19+48]
	095 Compare W8, 0
	096 JumpIfNotEqual {106}
	097 Move W8, [X29+1109]
	098 Move X26, [X19+144]
	099 Compare W8, 0
	100 JumpIfNotEqual {106}
	101 Move X0, 0xB0E000
	102 Move X0, [X0+1416]
	103 Call 0x1C17CF4
	104 Move W8, 1
	105 Move [X29+1109], W8
	106 Compare X26, 0
	107 JumpIfEqual {162}
	108 Move W8, [X26+16]
	109 NotImplemented "Instruction CMP not yet implemented."
	110 NotImplemented "Instruction LDRSW not yet implemented."
	111 Move W8, [X22+16]
	112 NotImplemented "Instruction CMP not yet implemented."
	113 NotImplemented "Instruction CMP not yet implemented."
	114 Move X28, [X22+8]
	115 Move X0, X26
	116 Move W1, W31
	117 Move X2, X31
	118 Call String.get_Chars, X0, X1
	119 Add W8, W27, 1
	120 NotImplemented "Instruction STRH not yet implemented."
	121 Move [X22+24], W8
	122 Move X0, X22
	123 Move X1, X26
	124 Call ValueStringBuilder.AppendSlow, X0, X1
	125 Move W8, [X25+1107]
	126 Move W26, W0
	127 Compare W8, 0
	128 JumpIfNotEqual {134}
	129 Move X0, 0xB0E000
	130 Move X0, [X0+1416]
	131 Call 0x1C17CF4
	132 Move W8, 1
	133 Move [X25+1107], W8
	134 NotImplemented "Instruction LDRSW not yet implemented."
	135 Move W9, [X22+16]
	136 NotImplemented "Instruction CMP not yet implemented."
	137 NotImplemented "Instruction CMP not yet implemented."
	138 Move X9, [X22+8]
	139 Add W10, W8, 1
	140 NotImplemented "Instruction STRH not yet implemented."
	141 Move [X22+24], W10
	142 Move X0, X22
	143 Move W1, W26
	144 Call ValueStringBuilder.GrowAndAppend, X0, X1
	145 Move W8, [X23+16]
	146 Add W24, W24, 1
	147 NotImplemented "Instruction CMP not yet implemented."
	148 Move X20, [X31+96]
	149 Move X19, [X31+104]
	150 Move X22, [X31+80]
	151 Move X21, [X31+88]
	152 Move X24, [X31+64]
	153 Move X23, [X31+72]
	154 Move X26, [X31+48]
	155 Move X25, [X31+56]
	156 Move X28, [X31+32]
	157 Move X27, [X31+40]
	158 Move X29, [X31+16]
	159 Move X30, [X31+24]
	160 Add X31, X31, 112
	161 Return 
	162 Call 0x1C17F20
	163 Call 0x1C17F28

Method: System.Void RoundNumber(ref System.Globalization.FormatProvider/Number/NumberBuffer number, System.Int32 pos)

Disassembly:
	0x03614788 MOVZ W5, 0x1
	0x0361478C ADD X31, X31, 0x70
	0x03614790 B 0x3614C58
	0x03614794 LDP X20, X19, [X31 + 0x60]
	0x03614798 LDP X22, X21, [X31 + 0x50]
	0x0361479C LDP X24, X23, [X31 + 0x40]
	0x036147A0 LDP X26, X25, [X31 + 0x30]
	0x036147A4 LDP X28, X27, [X31 + 0x20]
	0x036147A8 LDP X29, X30, [X31 + 0x10]
	0x036147AC ADD X31, X31, 0x70
	0x036147B0 RET
	0x036147B4 MOVZ W1, 0x30
	0x036147B8 MOV X0, X21
	0x036147BC BL 0x3615A24
	0x036147C0 TBZ X28, 0x1F, 0x36145DC
	0x036147C4 B 0x36145E4
	0x036147C8 BL 0x1C16F28
	0x036147CC BL 0x1C16F20
	0x036147D0 SUB X31, X31, 0x70
	0x036147D4 STP X29, X30, [X31 + 0x10]
	0x036147D8 STP X28, X27, [X31 + 0x20]
	0x036147DC STP X26, X25, [X31 + 0x30]
	0x036147E0 STP X24, X23, [X31 + 0x40]
	0x036147E4 STP X22, X21, [X31 + 0x50]
	0x036147E8 STP X20, X19, [X31 + 0x60]
	0x036147EC ADRP X23, 0xDCC000
	0x036147F0 ADRP X24, 0xB26000
	0x036147F4 LDRB W8, [X23 + 0x442]
	0x036147F8 LDR X24, [X24 + 0xF08]
	0x036147FC MOV X19, X4
	0x03614800 MOV W20, W3
	0x03614804 MOV X21, X1
	0x03614808 MOV X22, X0
	0x0361480C TBNZ X8, 0x0, 0x3614824
	0x03614810 ADRP X0, 0xB26000
	0x03614814 LDR X0, [X0 + 0xF08]
	0x03614818 BL 0x1C16CF4
	0x0361481C MOVZ W8, 0x1
	0x03614820 STRB W8, [X23 + 0x442]
	0x03614824 LDR X0, [X24]
	0x03614828 LDRB W23, [X21 + 0x8]
	0x0361482C LDR W8, [X0 + 0xE0]
	0x03614830 CBNZ W8, 0x361483C
	0x03614834 BL 0x1C16DFC
	0x03614838 LDR X0, [X24]
	0x0361483C LDR X8, [X0 + 0xB8]
	0x03614840 CBZ W23, 0x3614858
	0x03614844 CBZ X19, 0x3614A28
	0x03614848 LDR X8, [X8 + 0x18]
	0x0361484C CBZ X8, 0x3614A28
	0x03614850 LDR W9, [X19 + 0xC4]
	0x03614854 B 0x3614868

ISIL:
	001 Move X8, [X0+16]
	002 NotImplemented "Instruction CMP not yet implemented."
	003 Move W9, W1
	004 Move X10, X31
	005 Move X11, X8
	006 NotImplemented "Instruction LDRH not yet implemented."
	007 Compare W12, 0
	008 JumpIfEqual {14}
	009 Add X10, X10, 1
	010 NotImplemented "Instruction CMP not yet implemented."
	011 Add X11, X11, 2
	012 Move W10, W9
	013 Move W10, W31
	014 NotImplemented "Instruction CMP not yet implemented."
	015 NotImplemented "Instruction LDRH not yet implemented."
	016 NotImplemented "Instruction CMP not yet implemented."
	017 Move W9, W10
	018 Add X10, X8, W10
	019 Subtract X10, X10, 2
	020 Subtract X9, X9, 1
	021 NotImplemented "Instruction LDRH not yet implemented."
	022 NotImplemented "Instruction CMP not yet implemented."
	023 Move X9, X31
	024 Move [X0+4], W31
	025 Move [X0+8], W31
	026 Add X10, X8, W1
	027 Subtract X9, X9, 1
	028 NotImplemented "Instruction LDRH not yet implemented."
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Add W11, W11, 1
	031 NotImplemented "Instruction STRH not yet implemented."
	032 Add X9, X9, 1
	033 Move W9, [X0+4]
	034 Move W10, 49
	035 Add W9, W9, 1
	036 Move [X0+4], W9
	037 NotImplemented "Instruction STRH not yet implemented."
	038 Move W9, 1
	039 NotImplemented "Instruction SBFM not yet implemented."
	040 NotImplemented "Instruction STRH not yet implemented."
	041 Return 

Method: System.Int32 FindSection(System.ReadOnlySpan`1<System.Char> format, System.Int32 section)

Disassembly:
	0x03615F48 MOVZ W8, 0x1
	0x03615F4C STR X1, [X0 + 0x10]
	0x03615F50 STRB W8, [X0 + 0x18]
	0x03615F54 RET
	0x03615F58 MOV X1, X31
	0x03615F5C B 0x33A51F0
	0x03615F60 STR X30, [X31 - 0x30]!
	0x03615F64 STP X22, X21, [X31 + 0x10]
	0x03615F68 STP X20, X19, [X31 + 0x20]
	0x03615F6C ADRP X21, 0xDCB000
	0x03615F70 ADRP X22, 0xAE0000
	0x03615F74 LDRB W8, [X21 + 0x457]
	0x03615F78 LDR X22, [X22 + 0xC48]
	0x03615F7C MOV X19, X1
	0x03615F80 MOV X20, X0
	0x03615F84 TBNZ X8, 0x0, 0x3615F9C
	0x03615F88 ADRP X0, 0xAE0000
	0x03615F8C LDR X0, [X0 + 0xC48]
	0x03615F90 BL 0x1C16CF4
	0x03615F94 MOVZ W8, 0x1
	0x03615F98 STRB W8, [X21 + 0x457]
	0x03615F9C LDR X0, [X22]
	0x03615FA0 LDR W8, [X0 + 0xE0]
	0x03615FA4 CBNZ W8, 0x3615FAC
	0x03615FA8 BL 0x1C16DFC
	0x03615FAC MOV X0, X31
	0x03615FB0 BL 0x3338524
	0x03615FB4 MOV X1, X20
	0x03615FB8 MOV X2, X19
	0x03615FBC LDP X20, X19, [X31 + 0x20]
	0x03615FC0 LDP X22, X21, [X31 + 0x10]
	0x03615FC4 MOV X3, X31
	0x03615FC8 LDR X30, [X31], #0x30
	0x03615FCC B 0x3227E0C
	0x03615FD0 MOV X3, X31
	0x03615FD4 B 0x3227E0C
	0x03615FD8 STP X30, X21, [X31 - 0x20]!
	0x03615FDC STP X20, X19, [X31 + 0x10]
	0x03615FE0 ADRP X21, 0xDCB000
	0x03615FE4 ADRP X20, 0xB25000
	0x03615FE8 LDRB W8, [X21 + 0x458]
	0x03615FEC LDR X20, [X20 + 0xF20]
	0x03615FF0 MOV W19, W0
	0x03615FF4 TBNZ X8, 0x0, 0x361600C
	0x03615FF8 ADRP X0, 0xB25000
	0x03615FFC LDR X0, [X0 + 0xF20]
	0x03616000 BL 0x1C16CF4
	0x03616004 MOVZ W8, 0x1
	0x03616008 STRB W8, [X21 + 0x458]
	0x0361600C LDR X0, [X20]
	0x03616010 LDR W8, [X0 + 0xE0]
	0x03616014 CBNZ W8, 0x3616020
	0x03616018 BL 0x1C16DFC
	0x0361601C LDR X0, [X20]
	0x03616020 LDR X8, [X0 + 0xB8]
	0x03616024 LDP W9, W10, [X8]
	0x03616028 AND W11, W9, W19, 0x0
	0x0361602C AND W9, W9, W19, 0x1
	0x03616030 ADD W9, W9, W11
	0x03616034 AND W11, W9, W10, 0x0
	0x03616038 AND W9, W10, W9, 0x2
	0x0361603C LDP W12, W10, [X8 + 0x8]
	0x03616040 ADD W9, W9, W11
	0x03616044 LDR W8, [X8 + 0x10]
	0x03616048 LDP X20, X19, [X31 + 0x10]
	0x0361604C AND W11, W9, W12, 0x0
	0x03616050 AND W9, W12, W9, 0x4
	0x03616054 ADD W9, W9, W11
	0x03616058 AND W11, W9, W10, 0x0
	0x0361605C AND W9, W10, W9, 0x8
	0x03616060 ADD W9, W9, W11
	0x03616064 AND W8, W9, W8, 0x0
	0x03616068 ADD W0, W8, W9, 0x10, LSR
	0x0361606C LDP X30, X21, [X31], #0x20
	0x03616070 RET
	0x03616074 STR X30, [X31 - 0x20]!
	0x03616078 STP X20, X19, [X31 + 0x10]
	0x0361607C ADRP X20, 0xDCA000
	0x03616080 LDRB W8, [X20 + 0x459]
	0x03616084 MOV W19, W0
	0x03616088 TBNZ X8, 0x0, 0x36160A0
	0x0361608C ADRP X0, 0xB24000
	0x03616090 LDR X0, [X0 + 0xF20]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0xDCC000
	007 Move W8, [X22+1091]
	008 Move W20, W2
	009 Move X19, X1
	010 Move X21, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0xB0E000
	016 Move X0, [X0+32]
	017 Call 0x1C17CF4
	018 Move X0, 0xB0E000
	019 Move X0, [X0+40]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X22+1091], W8
	023 Compare W20, 0
	024 JumpIfEqual {69}
	025 Move X8, 0xB0E000
	026 Move X8, [X8+32]
	027 Move X0, X21
	028 Move X1, X19
	029 Move X2, [X8]
	030 Call MemoryMarshal.GetReference, X0
	031 Move W8, W31
	032 Move X9, W19
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move W11, W8
	035 NotImplemented "Instruction LDRH not yet implemented."
	036 Add W8, W11, 1
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Compare W10, 0
	039 JumpIfNotEqual {61}
	040 NotImplemented "Instruction CMP not yet implemented."
	041 NotImplemented "Instruction CMP not yet implemented."
	042 NotImplemented "Instruction CMP not yet implemented."
	043 Move X11, W8
	044 NotImplemented "Instruction CMP not yet implemented."
	045 NotImplemented "Instruction CSEL not yet implemented."
	046 Add X8, X0, W8
	047 NotImplemented "Instruction CMP not yet implemented."
	048 NotImplemented "Instruction LDRH not yet implemented."
	049 Compare W13, 0
	050 JumpIfEqual {54}
	051 Add X11, X11, 1
	052 NotImplemented "Instruction CMP not yet implemented."
	053 Add X8, X8, 2
	054 Move W8, W11
	055 NotImplemented "Instruction CMP not yet implemented."
	056 NotImplemented "Instruction LDRH not yet implemented."
	057 Add W11, W11, 2
	058 NotImplemented "Instruction CMP not yet implemented."
	059 NotImplemented "Instruction CSEL not yet implemented."
	060 Move W8, W12
	061 NotImplemented "Instruction CMP not yet implemented."
	062 Move W11, W8
	063 Subtract W20, W20, 1
	064 NotImplemented "Instruction CMP not yet implemented."
	065 NotImplemented "Instruction LDRH not yet implemented."
	066 NotImplemented "Instruction CMP not yet implemented."
	067 Compare W9, 0
	068 JumpIfNotEqual {70}
	069 Move W8, W31
	070 Move X20, [X31+32]
	071 Move X19, [X31+40]
	072 Move X22, [X31+16]
	073 Move X21, [X31+24]
	074 Move W0, W8
	075 Move X30, [X31+48]
	076 Return X0

Method: System.Void NumberToStringFormat(ref System.Text.ValueStringBuilder sb, ref System.Globalization.FormatProvider/Number/NumberBuffer number, System.ReadOnlySpan`1<System.Char> format, System.Globalization.NumberFormatInfo info)

Disassembly:
	0x03613694 LDR X8, [X8 + 0x8D0]
	0x03613698 MOV X2, X0
	0x0361369C MOV X4, X1
	0x036136A0 SUB X0, X29, 0x18
	0x036136A4 LDR X3, [X8]
	0x036136A8 MOV X1, X2
	0x036136AC MOV X2, X4
	0x036136B0 BL 0x25FBE98
	0x036136B4 ADRP X8, 0xB14000
	0x036136B8 LDR X8, [X8 + 0x8E0]
	0x036136BC MOV X0, X25
	0x036136C0 LDR X1, [X8]
	0x036136C4 BL 0x25FC3C4
	0x036136C8 STP X0, X1, [X29 - 0x18]
	0x036136CC LDUR X0, [X29 - 0x58]
	0x036136D0 MOV W11, W20
	0x036136D4 MOV X20, X23
	0x036136D8 CMP W19, W1
	0x036136DC B.CS 0x3613720
	0x036136E0 LDUR X8, [X29 - 0x18]
	0x036136E4 CMP W24, W11
	0x036136E8 STR W26, [X8, W19, SXTW]
	0x036136EC B.GE 0x361370C
	0x036136F0 LDR W8, [X0 + 0x18]
	0x036136F4 SXTW X9, W24
	0x036136F8 ADD X24, X9, 0x1
	0x036136FC CMP W24, W8
	0x03613700 B.CS 0x3613720
	0x03613704 ADD X8, X0, X24, 0x2, LSL
	0x03613708 LDR W27, [X8 + 0x20]
	0x0361370C CBZ W27, 0x3612B5C
	0x03613710 ADD W26, W27, W26
	0x03613714 CMP W21, W26
	0x03613718 B.GT 0x3613650
	0x0361371C B 0x3612B5C
	0x03613720 BL 0x1C16F28
	0x03613724 BL 0x1C16F20
	0x03613728 BL 0x3EB1B20
	0x0361372C CMP W3, 0x1
	0x03613730 B.PL 0x361373C
	0x03613734 CBNZ W2, 0x361373C
	0x03613738 RET
	0x0361373C LDR W8, [X1]
	0x03613740 MOVZ W9, 0xCCCD
	0x03613744 SUB W11, W3, 0x2
	0x03613748 MOVK W9, 0xCCCC0000
	0x0361374C MOVZ W10, 0xA
	0x03613750 MOV W13, W11
	0x03613754 UMADDL X11, X2, X9, X31
	0x03613758 MOV W12, W2
	0x0361375C UBFM X2, X11, 0x23, 0x3F
	0x03613760 MSUB W11, W2, W10, W12
	0x03613764 SUB W8, W8, 0x1
	0x03613768 ORR W11, W11, 0x30
	0x0361376C STRH W11, [X0, W8, SXTW]
	0x03613770 SUB W11, W13, 0x1
	0x03613774 TBZ X13, 0x1F, 0x3613750
	0x03613778 CMP W12, 0x9
	0x0361377C B.HI 0x3613750
	0x03613780 STR W8, [X1]
	0x03613784 RET
	0x03613788 LDR X8, [X0 + 0x10]
	0x0361378C CMP W1, 0x1
	0x03613790 MOV W9, W1
	0x03613794 B.LT 0x36137C0
	0x03613798 MOV X10, X31
	0x0361379C MOV X11, X8
	0x036137A0 LDRH W12, [X11]
	0x036137A4 CBZ W12, 0x36137C4
	0x036137A8 ADD X10, X10, 0x1
	0x036137AC CMP X9, X10
	0x036137B0 ADD X11, X11, 0x2
	0x036137B4 B.NE 0x36137A0
	0x036137B8 MOV W10, W9
	0x036137BC B 0x36137CC
	0x036137C0 MOV W10, W31
	0x036137C4 CMP W10, W1
	0x036137C8 B.NE 0x36137D8
	0x036137CC LDRH W11, [X8, W1, UXTW]
	0x036137D0 CMP W11, 0x35
	0x036137D4 B.CS 0x361380C
	0x036137D8 MOV W9, W10
	0x036137DC ADD X10, X8, W10, 0x1, UXTW
	0x036137E0 SUB X10, X10, 0x2
	0x036137E4 SUBS X9, X9, 0x1
	0x036137E8 B.LT 0x36137FC
	0x036137EC LDRH W11, [X10], #0xFFFFFFFFFFFFFFFE
	0x036137F0 CMP W11, 0x30
	0x036137F4 B.EQ 0x36137E4
	0x036137F8 B 0x361382C
	0x036137FC MOV X9, X31
	0x03613800 STR W31, [X0 + 0x4]
	0x03613804 STRB W31, [X0 + 0x8]
	0x03613808 B 0x361384C
	0x0361380C ADD X10, X8, W1, 0x1, UXTW
	0x03613810 SUBS X9, X9, 0x1
	0x03613814 B.LT 0x3613834
	0x03613818 LDRH W11, [X10 - 0x2]!
	0x0361381C CMP W11, 0x39
	0x03613820 B.EQ 0x3613810
	0x03613824 ADD W11, W11, 0x1
	0x03613828 STRH W11, [X10]
	0x0361382C ADD X9, X9, 0x1
	0x03613830 B 0x361384C
	0x03613834 LDR W9, [X0 + 0x4]
	0x03613838 MOVZ W10, 0x31
	0x0361383C ADD W9, W9, 0x1
	0x03613840 STR W9, [X0 + 0x4]
	0x03613844 STRH W10, [X8]
	0x03613848 MOVZ W9, 0x1
	0x0361384C SBFM X9, X9, 0x3F, 0x1F
	0x03613850 STRH W31, [X9, X8, LSL]
	0x03613854 RET
	0x03613858 SUB X31, X31, 0x70
	0x0361385C STP X29, X30, [X31 + 0x10]
	0x03613860 STP X28, X27, [X31 + 0x20]
	0x03613864 STP X26, X25, [X31 + 0x30]
	0x03613868 STP X24, X23, [X31 + 0x40]
	0x0361386C STP X22, X21, [X31 + 0x50]
	0x03613870 STP X20, X19, [X31 + 0x60]
	0x03613874 ADRP X23, 0xDCD000
	0x03613878 ADRP X24, 0xB27000
	0x0361387C LDRB W8, [X23 + 0x43C]
	0x03613880 LDR X24, [X24 + 0xF08]
	0x03613884 MOV X19, X4
	0x03613888 MOV W20, W3
	0x0361388C MOV X21, X1
	0x03613890 MOV X22, X0
	0x03613894 TBNZ X8, 0x0, 0x36138AC
	0x03613898 ADRP X0, 0xB27000
	0x0361389C LDR X0, [X0 + 0xF08]
	0x036138A0 BL 0x1C16CF4
	0x036138A4 MOVZ W8, 0x1
	0x036138A8 STRB W8, [X23 + 0x43C]
	0x036138AC LDR X0, [X24]
	0x036138B0 LDRB W23, [X21 + 0x8]
	0x036138B4 LDR W8, [X0 + 0xE0]
	0x036138B8 CBNZ W8, 0x36138C4
	0x036138BC BL 0x1C16DFC
	0x036138C0 LDR X0, [X24]
	0x036138C4 LDR X8, [X0 + 0xB8]
	0x036138C8 CBZ W23, 0x36138E0
	0x036138CC CBZ X19, 0x3613AB0
	0x036138D0 LDR X8, [X8 + 0x8]
	0x036138D4 CBZ X8, 0x3613AB0
	0x036138D8 LDR W9, [X19 + 0xB8]
	0x036138DC B 0x36138F0
	0x036138E0 CBZ X19, 0x3613AB0
	0x036138E4 LDR X8, [X8]
	0x036138E8 CBZ X8, 0x3613AB0
	0x036138EC LDR W9, [X19 + 0xB4]
	0x036138F0 LDR W10, [X8 + 0x18]
	0x036138F4 CMP W9, W10
	0x036138F8 B.CS 0x3613AB4
	0x036138FC ADD X8, X8, W9, 0x3, SXTW
	0x03613900 LDR X23, [X8 + 0x20]
	0x03613904 CBZ X23, 0x3613AB0
	0x03613908 LDR W8, [X23 + 0x10]
	0x0361390C CMP W8, 0x1
	0x03613910 B.LT 0x3613A90
	0x03613914 MOV W24, W31
	0x03613918 ADRP X29, 0xDCD000
	0x0361391C ADRP X25, 0xDCD000
	0x03613920 MOV X0, X23
	0x03613924 MOV W1, W24
	0x03613928 MOV X2, X31
	0x0361392C BL 0x3222A1C
	0x03613930 AND W8, W0, 0xFFFF
	0x03613934 CMP W8, 0x2D
	0x03613938 B.EQ 0x361399C
	0x0361393C CMP W8, 0x24
	0x03613940 B.EQ 0x36139AC
	0x03613944 CMP W8, 0x23
	0x03613948 B.NE 0x3613A28
	0x0361394C MOV X0, X19
	0x03613950 MOV X1, X31
	0x03613954 BL 0x333B010
	0x03613958 ADRP X8, 0xB27000
	0x0361395C LDR X8, [X8 + 0xF08]
	0x03613960 LDP X26, X27, [X19 + 0x48]
	0x03613964 MOV X28, X0
	0x03613968 LDR X8, [X8]
	0x0361396C LDR W9, [X8 + 0xE0]
	0x03613970 CBNZ W9, 0x361397C
	0x03613974 MOV X0, X8
	0x03613978 BL 0x1C16DFC
	0x0361397C MOV X0, X22
	0x03613980 MOV X1, X21
	0x03613984 MOV W3, W20
	0x03613988 MOV X5, X28
	0x0361398C MOV X6, X27
	0x03613990 MOV X7, X26
	0x03613994 BL 0x3613AB8
	0x03613998 B 0x3613A80
	0x0361399C LDRB W8, [X29 + 0x455]
	0x036139A0 LDR X26, [X19 + 0x30]
	0x036139A4 CBNZ W8, 0x36139CC
	0x036139A8 B 0x36139B8
	0x036139AC LDRB W8, [X29 + 0x455]
	0x036139B0 LDR X26, [X19 + 0x58]
	0x036139B4 CBNZ W8, 0x36139CC
	0x036139B8 ADRP X0, 0xB0F000
	0x036139BC LDR X0, [X0 + 0x588]
	0x036139C0 BL 0x1C16CF4
	0x036139C4 MOVZ W8, 0x1
	0x036139C8 STRB W8, [X29 + 0x455]
	0x036139CC CBZ X26, 0x3613AB0
	0x036139D0 LDR W8, [X26 + 0x10]
	0x036139D4 CMP W8, 0x1
	0x036139D8 B.NE 0x3613A18
	0x036139DC LDRSW X27, [X22 + 0x18]
	0x036139E0 LDR W8, [X22 + 0x10]
	0x036139E4 CMP W27, W8
	0x036139E8 B.GE 0x3613A18
	0x036139EC CMP W27, W8
	0x036139F0 B.CS 0x3613AB4
	0x036139F4 LDR X28, [X22 + 0x8]
	0x036139F8 MOV X0, X26
	0x036139FC MOV W1, W31
	0x03613A00 MOV X2, X31
	0x03613A04 BL 0x3222A1C
	0x03613A08 ADD W8, W27, 0x1
	0x03613A0C STRH W0, [X28, X27, LSL #1]
	0x03613A10 STR W8, [X22 + 0x18]
	0x03613A14 B 0x3613A80
	0x03613A18 MOV X0, X22
	0x03613A1C MOV X1, X26
	0x03613A20 BL 0x3615B50
	0x03613A24 B 0x3613A80
	0x03613A28 LDRB W8, [X25 + 0x453]
	0x03613A2C MOV W26, W0
	0x03613A30 CBNZ W8, 0x3613A48
	0x03613A34 ADRP X0, 0xB0F000
	0x03613A38 LDR X0, [X0 + 0x588]
	0x03613A3C BL 0x1C16CF4
	0x03613A40 MOVZ W8, 0x1
	0x03613A44 STRB W8, [X25 + 0x453]
	0x03613A48 LDRSW X8, [X22 + 0x18]
	0x03613A4C LDR W9, [X22 + 0x10]
	0x03613A50 CMP W8, W9
	0x03613A54 B.GE 0x3613A74
	0x03613A58 CMP W8, W9
	0x03613A5C B.CS 0x3613AB4
	0x03613A60 LDR X9, [X22 + 0x8]
	0x03613A64 ADD W10, W8, 0x1
	0x03613A68 STRH W26, [X9, X8, LSL #1]
	0x03613A6C STR W10, [X22 + 0x18]
	0x03613A70 B 0x3613A80
	0x03613A74 MOV X0, X22
	0x03613A78 MOV W1, W26
	0x03613A7C BL 0x3615A24
	0x03613A80 LDR W8, [X23 + 0x10]
	0x03613A84 ADD W24, W24, 0x1
	0x03613A88 CMP W24, W8
	0x03613A8C B.LT 0x3613920
	0x03613A90 LDP X20, X19, [X31 + 0x60]
	0x03613A94 LDP X22, X21, [X31 + 0x50]
	0x03613A98 LDP X24, X23, [X31 + 0x40]
	0x03613A9C LDP X26, X25, [X31 + 0x30]
	0x03613AA0 LDP X28, X27, [X31 + 0x20]
	0x03613AA4 LDP X29, X30, [X31 + 0x10]
	0x03613AA8 ADD X31, X31, 0x70
	0x03613AAC RET
	0x03613AB0 BL 0x1C16F20
	0x03613AB4 BL 0x1C16F28
	0x03613AB8 STP X29, X30, [X31 - 0x60]!
	0x03613ABC STP X28, X27, [X31 + 0x10]
	0x03613AC0 STP X26, X25, [X31 + 0x20]
	0x03613AC4 STP X24, X23, [X31 + 0x30]
	0x03613AC8 STP X22, X21, [X31 + 0x40]
	0x03613ACC STP X20, X19, [X31 + 0x50]
	0x03613AD0 ADD X29, X31, 0x0
	0x03613AD4 SUB X31, X31, 0x50
	0x03613AD8 MRS X27, 0xC000
	0x03613ADC LDR X8, [X27 + 0x28]
	0x03613AE0 ADRP X22, 0xDCD000
	0x03613AE4 ADRP X21, 0xB27000
	0x03613AE8 MOV X24, X7
	0x03613AEC STUR X8, [X29 - 0x8]
	0x03613AF0 LDRB W8, [X22 + 0x43D]
	0x03613AF4 LDR X21, [X21 + 0xF08]
	0x03613AF8 MOV X25, X6
	0x03613AFC MOV W23, W3
	0x03613B00 MOV X20, X1
	0x03613B04 MOV X19, X0
	0x03613B08 STUR X5, [X29 - 0x10]
	0x03613B0C TBNZ X8, 0x0, 0x3613B40
	0x03613B10 ADRP X0, 0xAE0000
	0x03613B14 LDR X0, [X0 + 0x5A8]
	0x03613B18 BL 0x1C16CF4
	0x03613B1C ADRP X0, 0xB27000
	0x03613B20 LDR X0, [X0 + 0xF18]
	0x03613B24 BL 0x1C16CF4
	0x03613B28 ADRP X0, 0xB27000
	0x03613B2C LDR X0, [X0 + 0xF08]
	0x03613B30 BL 0x1C16CF4
	0x03613B34 LDUR X5, [X29 - 0x10]
	0x03613B38 MOVZ W8, 0x1
	0x03613B3C STRB W8, [X22 + 0x43D]
	0x03613B40 LDR X0, [X21]
	0x03613B44 LDR W21, [X20 + 0x4]
	0x03613B48 LDR X20, [X20 + 0x10]
	0x03613B4C LDR W8, [X0 + 0xE0]
	0x03613B50 CBNZ W8, 0x3613B5C
	0x03613B54 BL 0x1C16DFC
	0x03613B58 LDUR X5, [X29 - 0x10]
	0x03613B5C LDRH W8, [X20]
	0x03613B60 CBZ W8, 0x3613B7C
	0x03613B64 MOV W28, W31
	0x03613B68 MOV X8, X20
	0x03613B6C LDRH W9, [X8 + 0x2]!
	0x03613B70 ADD W28, W28, 0x1
	0x03613B74 CBNZ W9, 0x3613B6C
	0x03613B78 B 0x3613B80
	0x03613B7C MOV W28, W31
	0x03613B80 CMP W21, 0x1
	0x03613B84 B.LT 0x3613C5C
	0x03613B88 CBZ X5, 0x3613CB4
	0x03613B8C LDR W8, [X5 + 0x18]
	0x03613B90 CBZ W8, 0x3613FB8
	0x03613B94 CBZ X24, 0x3613FBC
	0x03613B98 LDR W9, [X5 + 0x20]
	0x03613B9C LDR W14, [X24 + 0x10]
	0x03613BA0 MOV W10, W31
	0x03613BA4 SUB W15, W8, 0x1
	0x03613BA8 MOV W12, W9
	0x03613BAC MOV W26, W21
	0x03613BB0 MOV W11, W9
	0x03613BB4 CMP W21, W11
	0x03613BB8 B.LE 0x3613C24
	0x03613BBC CMP W10, W8
	0x03613BC0 B.CS 0x3613FB8
	0x03613BC4 CBZ W12, 0x3613C24
	0x03613BC8 CMP W10, W15
	0x03613BCC CINC W10, W10, LT
	0x03613BD0 CMP W10, W8
	0x03613BD4 B.CS 0x3613FB8
	0x03613BD8 ADD X12, X5, W10, 0x2, SXTW
	0x03613BDC LDR W12, [X12 + 0x20]
	0x03613BE0 ADD W26, W26, W14
	0x03613BE4 ADD W11, W12, W11
	0x03613BE8 ORR W13, W11, W26, 0x0
	0x03613BEC TBZ X13, 0x1F, 0x3613BB4
	0x03613BF0 ADRP X0, 0xAE8000
	0x03613BF4 LDR X0, [X0 + 0x760]
	0x03613BF8 BL 0x1C16D08
	0x03613BFC BL 0x1C16F10
	0x03613C00 MOV X1, X31
	0x03613C04 MOV X19, X0
	0x03613C08 BL 0x3315FB8
	0x03613C0C ADRP X0, 0xB27000
	0x03613C10 LDR X0, [X0 + 0xF18]
	0x03613C14 BL 0x1C16D08
	0x03613C18 MOV X1, X0
	0x03613C1C MOV X0, X19
	0x03613C20 BL 0x1C16DEC
	0x03613C24 CMP W11, 0x0
	0x03613C28 MOV W8, W26
	0x03613C2C STUR W23, [X29 - 0x2C]
	0x03613C30 CSEL W23, W31, W9, EQ
	0x03613C34 UBFM X22, X8, 0x3F, 0x3E
	0x03613C38 STP W15, W14, [X29 - 0x1C]
	0x03613C3C STUR X25, [X29 - 0x38]
	0x03613C40 CBZ W26, 0x3613D20
	0x03613C44 ADD X9, X22, 0xF
	0x03613C48 ADD X8, X31, 0x0
	0x03613C4C AND X9, X9, 0x3FFFFFFFF
	0x03613C50 SUB X8, X8, X9
	0x03613C54 ADD X31, X8, 0x0
	0x03613C58 B 0x3613D24
	0x03613C5C MOV W22, W21
	0x03613C60 ADRP X21, 0xDCD000
	0x03613C64 LDRB W8, [X21 + 0x453]
	0x03613C68 CBNZ W8, 0x3613C80
	0x03613C6C ADRP X0, 0xB0F000
	0x03613C70 LDR X0, [X0 + 0x588]
	0x03613C74 BL 0x1C16CF4
	0x03613C78 MOVZ W8, 0x1
	0x03613C7C STRB W8, [X21 + 0x453]
	0x03613C80 LDRSW X8, [X19 + 0x18]
	0x03613C84 LDR W9, [X19 + 0x10]
	0x03613C88 CMP W8, W9
	0x03613C8C B.GE 0x3613D0C
	0x03613C90 CMP W8, W9
	0x03613C94 B.CS 0x3613FB8
	0x03613C98 LDR X9, [X19 + 0x8]
	0x03613C9C MOVZ W10, 0x30
	0x03613CA0 ADD W11, W8, 0x1
	0x03613CA4 MOV W21, W22
	0x03613CA8 STRH W10, [X9, X8, LSL #1]
	0x03613CAC STR W11, [X19 + 0x18]
	0x03613CB0 B 0x3613E30
	0x03613CB4 ADRP X8, 0xAE0000
	0x03613CB8 LDR X8, [X8 + 0x5A8]
	0x03613CBC LDR X0, [X8]
	0x03613CC0 LDR W8, [X0 + 0xE0]
	0x03613CC4 CBNZ W8, 0x3613CCC
	0x03613CC8 BL 0x1C16DFC
	0x03613CCC MOV W0, W28
	0x03613CD0 MOV W1, W21
	0x03613CD4 MOV X2, X31
	0x03613CD8 BL 0x337EE94
	0x03613CDC MOV W22, W0
	0x03613CE0 MOV X0, X19
	0x03613CE4 MOV X1, X20
	0x03613CE8 MOV W2, W22
	0x03613CEC BL 0x3614A50
	0x03613CF0 SUBS W2, W21, W28
	0x03613CF4 ADD X20, X20, W22, 0x1, SXTW
	0x03613CF8 B.LE 0x3613E30
	0x03613CFC MOVZ W1, 0x30
	0x03613D00 MOV X0, X19
	0x03613D04 BL 0x3614B30
	0x03613D08 B 0x3613E30
	0x03613D0C MOVZ W1, 0x30
	0x03613D10 MOV X0, X19
	0x03613D14 BL 0x3615A24
	0x03613D18 MOV W21, W22
	0x03613D1C B 0x3613E30
	0x03613D20 MOV X8, X31
	0x03613D24 MOV X0, X8
	0x03613D28 MOV W1, W31
	0x03613D2C MOV X2, X22
	0x03613D30 STUR X27, [X29 - 0x28]
	0x03613D34 MOV X27, X8
	0x03613D38 BL 0x3EB1B10
	0x03613D3C CMP W21, W28
	0x03613D40 CSEL W28, W21, W28, LT
	0x03613D44 SUBS W25, W21, 0x1
	0x03613D48 STUR W21, [X29 - 0x3C]
	0x03613D4C STUR X27, [X29 - 0x48]
	0x03613D50 B.MI 0x3613E0C
	0x03613D54 ADD X9, X22, X27
	0x03613D58 LDP W12, W22, [X29 - 0x1C]
	0x03613D5C LDUR X11, [X29 - 0x10]
	0x03613D60 MOV W21, W31
	0x03613D64 MOV W8, W31
	0x03613D68 SUB X9, X9, 0x2
	0x03613D6C SUB W10, W22, 0x1
	0x03613D70 STUR W10, [X29 - 0x14]
	0x03613D74 CMP W25, W28
	0x03613D78 SUB X27, X9, 0x2
	0x03613D7C B.GE 0x3613D88
	0x03613D80 LDRH W10, [X20, W25, UXTW]
	0x03613D84 B 0x3613D8C
	0x03613D88 MOVZ W10, 0x30
	0x03613D8C CMP W23, 0x1
	0x03613D90 STRH W10, [X9]
	0x03613D94 B.LT 0x3613E00
	0x03613D98 ADD W8, W8, 0x1
	0x03613D9C CBZ W25, 0x3613E00
	0x03613DA0 CMP W8, W23
	0x03613DA4 B.NE 0x3613E00
	0x03613DA8 LDUR W8, [X29 - 0x14]
	0x03613DAC TBNZ X8, 0x1F, 0x3613DD8
	0x03613DB0 SUB W22, W22, 0x1
	0x03613DB4 MOV X0, X24
	0x03613DB8 MOV W1, W22
	0x03613DBC MOV X2, X31
	0x03613DC0 BL 0x3222A1C
	0x03613DC4 CMP W22, 0x0
	0x03613DC8 STRH W0, [X27], #0xFFFFFFFFFFFFFFFE
	0x03613DCC B.GT 0x3613DB0
	0x03613DD0 LDUR X11, [X29 - 0x10]
	0x03613DD4 LDP W12, W22, [X29 - 0x1C]
	0x03613DD8 CMP W21, W12
	0x03613DDC B.GE 0x3613DFC
	0x03613DE0 LDR W8, [X11 + 0x18]
	0x03613DE4 SXTW X9, W21
	0x03613DE8 ADD X21, X9, 0x1
	0x03613DEC CMP W21, W8
	0x03613DF0 B.CS 0x3613FB8
	0x03613DF4 ADD X8, X11, X21, 0x2, LSL
	0x03613DF8 LDR W23, [X8 + 0x20]
	0x03613DFC MOV W8, W31
	0x03613E00 SUBS W25, W25, 0x1
	0x03613E04 MOV X9, X27
	0x03613E08 B.PL 0x3613D74
	0x03613E0C LDUR X1, [X29 - 0x48]
	0x03613E10 MOV X0, X19
	0x03613E14 MOV W2, W26
	0x03613E18 BL 0x3614A50
	0x03613E1C LDUR X27, [X29 - 0x28]
	0x03613E20 LDUR W23, [X29 - 0x2C]
	0x03613E24 LDUR X25, [X29 - 0x38]
	0x03613E28 LDUR W21, [X29 - 0x3C]
	0x03613E2C ADD X20, X20, W28, 0x1, SXTW
	0x03613E30 CMP W23, 0x1
	0x03613E34 B.LT 0x3613F88
	0x03613E38 MOV W24, W21
	0x03613E3C ADRP X21, 0xDCD000
	0x03613E40 LDRB W8, [X21 + 0x455]
	0x03613E44 CBNZ W8, 0x3613E5C
	0x03613E48 ADRP X0, 0xB0F000
	0x03613E4C LDR X0, [X0 + 0x588]
	0x03613E50 BL 0x1C16CF4
	0x03613E54 MOVZ W8, 0x1
	0x03613E58 STRB W8, [X21 + 0x455]
	0x03613E5C CBZ X25, 0x3613FBC
	0x03613E60 LDR W8, [X25 + 0x10]
	0x03613E64 CMP W8, 0x1
	0x03613E68 B.NE 0x3613EAC
	0x03613E6C LDRSW X21, [X19 + 0x18]
	0x03613E70 LDR W8, [X19 + 0x10]
	0x03613E74 CMP W21, W8
	0x03613E78 B.GE 0x3613EAC
	0x03613E7C CMP W21, W8
	0x03613E80 B.CS 0x3613FB8
	0x03613E84 LDR X22, [X19 + 0x8]
	0x03613E88 MOV X0, X25
	0x03613E8C MOV W1, W31
	0x03613E90 MOV X2, X31
	0x03613E94 BL 0x3222A1C
	0x03613E98 ADD W8, W21, 0x1
	0x03613E9C STRH W0, [X22, X21, LSL #1]
	0x03613EA0 STR W8, [X19 + 0x18]
	0x03613EA4 TBZ X24, 0x1F, 0x3613F04
	0x03613EA8 B 0x3613EBC
	0x03613EAC MOV X0, X19
	0x03613EB0 MOV X1, X25
	0x03613EB4 BL 0x3615B50
	0x03613EB8 TBZ X24, 0x1F, 0x3613F04
	0x03613EBC ADRP X8, 0xAE0000
	0x03613EC0 LDR X8, [X8 + 0x5A8]
	0x03613EC4 LDR X0, [X8]
	0x03613EC8 LDR W8, [X0 + 0xE0]
	0x03613ECC CBNZ W8, 0x3613ED4
	0x03613ED0 BL 0x1C16DFC
	0x03613ED4 SUB W0, W31, W24
	0x03613ED8 MOV W1, W23
	0x03613EDC MOV X2, X31
	0x03613EE0 BL 0x337EE94
	0x03613EE4 MOV W22, W0
	0x03613EE8 MOVZ W1, 0x30
	0x03613EEC MOV X0, X19
	0x03613EF0 MOV W2, W22
	0x03613EF4 BL 0x3614B30
	0x03613EF8 SUB W23, W23, W22
	0x03613EFC CMP W23, 0x1
	0x03613F00 B.LT 0x3613F88
	0x03613F04 ADRP X21, 0xB0F000
	0x03613F08 LDR X21, [X21 + 0x588]
	0x03613F0C ADD W23, W23, 0x1
	0x03613F10 MOVZ W24, 0x30
	0x03613F14 ADRP X25, 0xDCD000
	0x03613F18 MOVZ W26, 0x1
	0x03613F1C MOV X8, X20
	0x03613F20 LDRH W9, [X8], #0x2
	0x03613F24 LDRB W10, [X25 + 0x453]
	0x03613F28 CMP W9, 0x0
	0x03613F2C CSEL W22, W24, W9, EQ
	0x03613F30 CSEL X20, X20, X8, EQ
	0x03613F34 CBNZ W10, 0x3613F44
	0x03613F38 MOV X0, X21
	0x03613F3C BL 0x1C16CF4
	0x03613F40 STRB W26, [X25 + 0x453]
	0x03613F44 LDRSW X8, [X19 + 0x18]
	0x03613F48 LDR W9, [X19 + 0x10]
	0x03613F4C CMP W8, W9
	0x03613F50 B.GE 0x3613F70
	0x03613F54 CMP W8, W9
	0x03613F58 B.CS 0x3613FB8
	0x03613F5C LDR X9, [X19 + 0x8]
	0x03613F60 ADD W10, W8, 0x1
	0x03613F64 STRH W22, [X9, X8, LSL #1]
	0x03613F68 STR W10, [X19 + 0x18]
	0x03613F6C B 0x3613F7C
	0x03613F70 MOV X0, X19
	0x03613F74 MOV W1, W22
	0x03613F78 BL 0x3615A24
	0x03613F7C SUB W23, W23, 0x1
	0x03613F80 CMP W23, 0x1
	0x03613F84 B.GT 0x3613F1C
	0x03613F88 LDR X8, [X27 + 0x28]
	0x03613F8C LDUR X9, [X29 - 0x8]
	0x03613F90 CMP X8, X9
	0x03613F94 B.NE 0x3613FC0
	0x03613F98 ADD X31, X29, 0x0
	0x03613F9C LDP X20, X19, [X31 + 0x50]
	0x03613FA0 LDP X22, X21, [X31 + 0x40]
	0x03613FA4 LDP X24, X23, [X31 + 0x30]
	0x03613FA8 LDP X26, X25, [X31 + 0x20]
	0x03613FAC LDP X28, X27, [X31 + 0x10]
	0x03613FB0 LDP X29, X30, [X31], #0x60
	0x03613FB4 RET
	0x03613FB8 BL 0x1C16F28
	0x03613FBC BL 0x1C16F20
	0x03613FC0 BL 0x3EB1B20
	0x03613FC4 SUB X31, X31, 0x70
	0x03613FC8 STP X29, X30, [X31 + 0x10]
	0x03613FCC STP X28, X27, [X31 + 0x20]
	0x03613FD0 STP X26, X25, [X31 + 0x30]
	0x03613FD4 STP X24, X23, [X31 + 0x40]
	0x03613FD8 STP X22, X21, [X31 + 0x50]
	0x03613FDC STP X20, X19, [X31 + 0x60]
	0x03613FE0 ADRP X23, 0xDCD000
	0x03613FE4 ADRP X24, 0xB27000
	0x03613FE8 LDRB W8, [X23 + 0x43E]
	0x03613FEC LDR X24, [X24 + 0xF08]
	0x03613FF0 MOV X19, X4
	0x03613FF4 MOV W20, W3
	0x03613FF8 MOV X21, X1
	0x03613FFC MOV X22, X0
	0x03614000 TBNZ X8, 0x0, 0x3614018
	0x03614004 ADRP X0, 0xB26000
	0x03614008 LDR X0, [X0 + 0xF08]
	0x0361400C BL 0x1C16CF4
	0x03614010 MOVZ W8, 0x1
	0x03614014 STRB W8, [X23 + 0x43E]
	0x03614018 LDR X0, [X24]
	0x0361401C LDRB W23, [X21 + 0x8]
	0x03614020 LDR W8, [X0 + 0xE0]
	0x03614024 CBNZ W8, 0x3614030
	0x03614028 BL 0x1C16DFC
	0x0361402C LDR X0, [X24]
	0x03614030 LDR X8, [X0 + 0xB8]
	0x03614034 CBZ W23, 0x3614060
	0x03614038 CBZ X19, 0x3614204
	0x0361403C LDR X8, [X8 + 0x20]
	0x03614040 CBZ X8, 0x3614204
	0x03614044 LDRSW X9, [X19 + 0xBC]
	0x03614048 LDR W10, [X8 + 0x18]
	0x0361404C CMP W9, W10
	0x03614050 B.CS 0x3614208
	0x03614054 ADD X8, X8, X9, 0x3, LSL
	0x03614058 ADD X8, X8, 0x20
	0x0361405C B 0x3614064
	0x03614060 ADD X8, X8, 0x28
	0x03614064 LDR X23, [X8]
	0x03614068 CBZ X23, 0x3614204
	0x0361406C LDR W8, [X23 + 0x10]
	0x03614070 CMP W8, 0x1
	0x03614074 B.LT 0x36141E4
	0x03614078 MOV W24, W31
	0x0361407C ADRP X25, 0xDCC000
	0x03614080 ADRP X29, 0xDCC000
	0x03614084 MOV X0, X23
	0x03614088 MOV W1, W24
	0x0361408C MOV X2, X31
	0x03614090 BL 0x3222A1C
	0x03614094 AND W8, W0, 0xFFFF
	0x03614098 CMP W8, 0x2D
	0x0361409C B.EQ 0x36140FC
	0x036140A0 CMP W8, 0x23
	0x036140A4 B.NE 0x361416C
	0x036140A8 CBZ X19, 0x3614204
	0x036140AC MOV X0, X19
	0x036140B0 MOV X1, X31
	0x036140B4 BL 0x333B088
	0x036140B8 ADRP X8, 0xB26000
	0x036140BC LDR X8, [X8 + 0xF08]
	0x036140C0 LDP X27, X26, [X19 + 0x38]
	0x036140C4 MOV X28, X0
	0x036140C8 LDR X8, [X8]
	0x036140CC LDR W9, [X8 + 0xE0]
	0x036140D0 CBNZ W9, 0x36140DC
	0x036140D4 MOV X0, X8
	0x036140D8 BL 0x1C16DFC
	0x036140DC MOV X0, X22
	0x036140E0 MOV X1, X21
	0x036140E4 MOV W3, W20
	0x036140E8 MOV X5, X28
	0x036140EC MOV X6, X27
	0x036140F0 MOV X7, X26
	0x036140F4 BL 0x3613AB8
	0x036140F8 B 0x36141D4
	0x036140FC CBZ X19, 0x3614204
	0x03614100 LDRB W8, [X25 + 0x455]
	0x03614104 LDR X26, [X19 + 0x30]
	0x03614108 CBNZ W8, 0x3614120
	0x0361410C ADRP X0, 0xB0E000
	0x03614110 LDR X0, [X0 + 0x588]
	0x03614114 BL 0x1C16CF4
	0x03614118 MOVZ W8, 0x1
	0x0361411C STRB W8, [X25 + 0x455]
	0x03614120 CBZ X26, 0x3614204
	0x03614124 LDR W8, [X26 + 0x10]
	0x03614128 CMP W8, 0x1
	0x0361412C B.NE 0x36141B8
	0x03614130 LDRSW X27, [X22 + 0x18]
	0x03614134 LDR W8, [X22 + 0x10]
	0x03614138 CMP W27, W8
	0x0361413C B.GE 0x36141B8
	0x03614140 CMP W27, W8
	0x03614144 B.CS 0x3614208
	0x03614148 LDR X28, [X22 + 0x8]
	0x0361414C MOV X0, X26
	0x03614150 MOV W1, W31
	0x03614154 MOV X2, X31
	0x03614158 BL 0x3222A1C
	0x0361415C ADD W8, W27, 0x1
	0x03614160 STRH W0, [X28, X27, LSL #1]
	0x03614164 STR W8, [X22 + 0x18]
	0x03614168 B 0x36141D4
	0x0361416C LDRB W8, [X29 + 0x453]
	0x03614170 MOV W26, W0
	0x03614174 CBNZ W8, 0x361418C
	0x03614178 ADRP X0, 0xB0E000
	0x0361417C LDR X0, [X0 + 0x588]
	0x03614180 BL 0x1C16CF4
	0x03614184 MOVZ W8, 0x1
	0x03614188 STRB W8, [X29 + 0x453]
	0x0361418C LDRSW X8, [X22 + 0x18]
	0x03614190 LDR W9, [X22 + 0x10]
	0x03614194 CMP W8, W9
	0x03614198 B.GE 0x36141C8
	0x0361419C CMP W8, W9
	0x036141A0 B.CS 0x3614208
	0x036141A4 LDR X9, [X22 + 0x8]
	0x036141A8 ADD W10, W8, 0x1
	0x036141AC STRH W26, [X9, X8, LSL #1]
	0x036141B0 STR W10, [X22 + 0x18]
	0x036141B4 B 0x36141D4
	0x036141B8 MOV X0, X22
	0x036141BC MOV X1, X26
	0x036141C0 BL 0x3615B50
	0x036141C4 B 0x36141D4
	0x036141C8 MOV X0, X22
	0x036141CC MOV W1, W26
	0x036141D0 BL 0x3615A24
	0x036141D4 LDR W8, [X23 + 0x10]
	0x036141D8 ADD W24, W24, 0x1
	0x036141DC CMP W24, W8
	0x036141E0 B.LT 0x3614084
	0x036141E4 LDP X20, X19, [X31 + 0x60]
	0x036141E8 LDP X22, X21, [X31 + 0x50]
	0x036141EC LDP X24, X23, [X31 + 0x40]
	0x036141F0 LDP X26, X25, [X31 + 0x30]
	0x036141F4 LDP X28, X27, [X31 + 0x20]
	0x036141F8 LDP X29, X30, [X31 + 0x10]
	0x036141FC ADD X31, X31, 0x70
	0x03614200 RET
	0x03614204 BL 0x1C16F20
	0x03614208 BL 0x1C16F28
	0x0361420C STP X29, X30, [X31 - 0x60]!
	0x03614210 STP X28, X27, [X31 + 0x10]
	0x03614214 STP X26, X25, [X31 + 0x20]
	0x03614218 STP X24, X23, [X31 + 0x30]
	0x0361421C STP X22, X21, [X31 + 0x40]
	0x03614220 STP X20, X19, [X31 + 0x50]
	0x03614224 ADRP X24, 0xDCC000
	0x03614228 LDRB W8, [X24 + 0x43F]
	0x0361422C MOV W19, W5
	0x03614230 MOV X20, X4
	0x03614234 MOV W23, W3
	0x03614238 MOV X22, X1
	0x0361423C MOV X21, X0
	0x03614240 TBNZ X8, 0x0, 0x3614258
	0x03614244 ADRP X0, 0xB26000
	0x03614248 LDR X0, [X0 + 0xF08]
	0x0361424C BL 0x1C16CF4
	0x03614250 MOVZ W8, 0x1
	0x03614254 STRB W8, [X24 + 0x43F]
	0x03614258 LDR X8, [X22 + 0x10]
	0x0361425C ADRP X25, 0xDCC000
	0x03614260 MOVZ W12, 0x30
	0x03614264 MOV X9, X8
	0x03614268 LDRH W10, [X9], #0x2
	0x0361426C LDRB W11, [X25 + 0x453]
	0x03614270 CMP W10, 0x0
	0x03614274 CSEL W24, W12, W10, EQ
	0x03614278 CSEL X26, X8, X9, EQ
	0x0361427C CBNZ W11, 0x3614294
	0x03614280 ADRP X0, 0xB0E000
	0x03614284 LDR X0, [X0 + 0x588]
	0x03614288 BL 0x1C16CF4
	0x0361428C MOVZ W8, 0x1
	0x03614290 STRB W8, [X25 + 0x453]
	0x03614294 LDRSW X8, [X21 + 0x18]
	0x03614298 LDR W9, [X21 + 0x10]
	0x0361429C CMP W8, W9
	0x036142A0 B.GE 0x36142C0
	0x036142A4 CMP W8, W9
	0x036142A8 B.CS 0x3614440
	0x036142AC LDR X9, [X21 + 0x8]
	0x036142B0 ADD W10, W8, 0x1
	0x036142B4 STRH W24, [X9, X8, LSL #1]
	0x036142B8 STR W10, [X21 + 0x18]
	0x036142BC B 0x36142CC
	0x036142C0 MOV X0, X21
	0x036142C4 MOV W1, W24
	0x036142C8 BL 0x3615A24
	0x036142CC SUBS W27, W23, 0x1
	0x036142D0 B.EQ 0x36143D8
	0x036142D4 CBZ X20, 0x3614444
	0x036142D8 ADRP X24, 0xDCC000
	0x036142DC LDRB W8, [X24 + 0x455]
	0x036142E0 LDR X23, [X20 + 0x38]
	0x036142E4 CBNZ W8, 0x36142FC
	0x036142E8 ADRP X0, 0xB0E000
	0x036142EC LDR X0, [X0 + 0x588]
	0x036142F0 BL 0x1C16CF4
	0x036142F4 MOVZ W8, 0x1
	0x036142F8 STRB W8, [X24 + 0x455]
	0x036142FC CBZ X23, 0x3614444
	0x03614300 LDR W8, [X23 + 0x10]
	0x03614304 CMP W8, 0x1
	0x03614308 B.NE 0x3614348
	0x0361430C LDRSW X24, [X21 + 0x18]
	0x03614310 LDR W8, [X21 + 0x10]
	0x03614314 CMP W24, W8
	0x03614318 B.GE 0x3614348
	0x0361431C CMP W24, W8
	0x03614320 B.CS 0x3614440
	0x03614324 LDR X28, [X21 + 0x8]
	0x03614328 MOV X0, X23
	0x0361432C MOV W1, W31
	0x03614330 MOV X2, X31
	0x03614334 BL 0x3222A1C
	0x03614338 ADD W8, W24, 0x1
	0x0361433C STRH W0, [X28, X24, LSL #1]
	0x03614340 STR W8, [X21 + 0x18]
	0x03614344 B 0x3614354
	0x03614348 MOV X0, X21
	0x0361434C MOV X1, X23
	0x03614350 BL 0x3615B50
	0x03614354 CMP W27, 0x1
	0x03614358 B.LT 0x36143D8
	0x0361435C ADRP X23, 0xB0E000
	0x03614360 LDR X23, [X23 + 0x588]
	0x03614364 MOVZ W28, 0x30
	0x03614368 MOVZ W29, 0x1
	0x0361436C MOV X8, X26
	0x03614370 LDRH W9, [X8], #0x2
	0x03614374 LDRB W10, [X25 + 0x453]
	0x03614378 CMP W9, 0x0
	0x0361437C CSEL W24, W28, W9, EQ
	0x03614380 CSEL X26, X26, X8, EQ
	0x03614384 CBNZ W10, 0x3614394
	0x03614388 MOV X0, X23
	0x0361438C BL 0x1C16CF4
	0x03614390 STRB W29, [X25 + 0x453]
	0x03614394 LDRSW X8, [X21 + 0x18]
	0x03614398 LDR W9, [X21 + 0x10]
	0x0361439C CMP W8, W9
	0x036143A0 B.GE 0x36143C0
	0x036143A4 CMP W8, W9
	0x036143A8 B.CS 0x3614440
	0x036143AC LDR X9, [X21 + 0x8]
	0x036143B0 ADD W10, W8, 0x1
	0x036143B4 STRH W24, [X9, X8, LSL #1]
	0x036143B8 STR W10, [X21 + 0x18]
	0x036143BC B 0x36143CC
	0x036143C0 MOV X0, X21
	0x036143C4 MOV W1, W24
	0x036143C8 BL 0x3615A24
	0x036143CC SUB W27, W27, 0x1
	0x036143D0 CMP W27, 0x0
	0x036143D4 B.GT 0x361436C
	0x036143D8 LDR X8, [X22 + 0x10]
	0x036143DC LDRH W9, [X8]
	0x036143E0 ADRP X8, 0xB26000
	0x036143E4 LDR X8, [X8 + 0xF08]
	0x036143E8 CBZ W9, 0x36143F8
	0x036143EC LDR W9, [X22 + 0x4]
	0x036143F0 SUB W22, W9, 0x1
	0x036143F4 B 0x36143FC
	0x036143F8 MOV W22, W31
	0x036143FC LDR X0, [X8]
	0x03614400 LDR W8, [X0 + 0xE0]
	0x03614404 CBNZ W8, 0x361440C
	0x03614408 BL 0x1C16DFC
	0x0361440C MOV X0, X21
	0x03614410 MOV X1, X20
	0x03614414 MOV W2, W22
	0x03614418 MOV W3, W19
	0x0361441C LDP X20, X19, [X31 + 0x50]
	0x03614420 LDP X22, X21, [X31 + 0x40]
	0x03614424 LDP X24, X23, [X31 + 0x30]
	0x03614428 LDP X26, X25, [X31 + 0x20]
	0x0361442C LDP X28, X27, [X31 + 0x10]
	0x03614430 MOVZ W4, 0x3
	0x03614434 MOVZ W5, 0x1
	0x03614438 LDP X29, X30, [X31], #0x60
	0x0361443C B 0x3614C58
	0x03614440 BL 0x1C16F28
	0x03614444 BL 0x1C16F20
	0x03614448 SUB X31, X31, 0x70
	0x0361444C STP X29, X30, [X31 + 0x10]
	0x03614450 STP X28, X27, [X31 + 0x20]
	0x03614454 STP X26, X25, [X31 + 0x30]
	0x03614458 STP X24, X23, [X31 + 0x40]
	0x0361445C STP X22, X21, [X31 + 0x50]
	0x03614460 STP X20, X19, [X31 + 0x60]
	0x03614464 ADRP X19, 0xDCC000
	0x03614468 LDRB W8, [X19 + 0x441]
	0x0361446C MOV W24, W6
	0x03614470 MOV W29, W5
	0x03614474 MOV X22, X4
	0x03614478 MOV W23, W3
	0x0361447C MOV X27, X1
	0x03614480 MOV X21, X0
	0x03614484 TBNZ X8, 0x0, 0x361449C
	0x03614488 ADRP X0, 0xB26000
	0x0361448C LDR X0, [X0 + 0xF08]
	0x03614490 BL 0x1C16CF4
	0x03614494 MOVZ W8, 0x1
	0x03614498 STRB W8, [X19 + 0x441]
	0x0361449C LDR W28, [X27 + 0x4]
	0x036144A0 ADRP X25, 0xDCC000
	0x036144A4 STR X27, [X31 + 0x8]
	0x036144A8 TBZ X24, 0x0, 0x36144B4
	0x036144AC MOV W26, W31
	0x036144B0 B 0x36144D4
	0x036144B4 ADDS W31, W28, 0x3
	0x036144B8 CSET W8, LT
	0x036144BC CMP W28, W23
	0x036144C0 CSET W9, GT
	0x036144C4 ORR W26, W9, W8, 0x0
	0x036144C8 B.GT 0x361453C
	0x036144CC ADDS W31, W28, 0x4
	0x036144D0 B.LE 0x361453C
	0x036144D4 LDR X27, [X27 + 0x10]
	0x036144D8 CMP W28, 0x1
	0x036144DC B.LT 0x36144EC
	0x036144E0 MOV W20, W26
	0x036144E4 MOV W26, W29
	0x036144E8 B 0x361454C
	0x036144EC LDRB W8, [X25 + 0x453]
	0x036144F0 CBNZ W8, 0x3614508
	0x036144F4 ADRP X0, 0xB0E000
	0x036144F8 LDR X0, [X0 + 0x588]
	0x036144FC BL 0x1C16CF4
	0x03614500 MOVZ W8, 0x1
	0x03614504 STRB W8, [X25 + 0x453]
	0x03614508 LDRSW X8, [X21 + 0x18]
	0x0361450C LDR W9, [X21 + 0x10]
	0x03614510 CMP W8, W9
	0x03614514 B.GE 0x36147B4
	0x03614518 CMP W8, W9
	0x0361451C B.CS 0x36147C8
	0x03614520 LDR X9, [X21 + 0x8]
	0x03614524 MOVZ W10, 0x30
	0x03614528 ADD W11, W8, 0x1
	0x0361452C STRH W10, [X9, X8, LSL #1]
	0x03614530 STR W11, [X21 + 0x18]
	0x03614534 TBZ X28, 0x1F, 0x36145DC
	0x03614538 B 0x36145E4
	0x0361453C LDR X27, [X27 + 0x10]
	0x03614540 MOV W20, W26
	0x03614544 MOV W26, W29
	0x03614548 MOVZ W28, 0x1
	0x0361454C ADRP X23, 0xB0E000
	0x03614550 LDR X23, [X23 + 0x588]
	0x03614554 ADD W28, W28, 0x1
	0x03614558 MOVZ W29, 0x30
	0x0361455C MOVZ W19, 0x1
	0x03614560 MOV X8, X27
	0x03614564 LDRH W9, [X8], #0x2
	0x03614568 LDRB W10, [X25 + 0x453]
	0x0361456C CMP W9, 0x0
	0x03614570 CSEL W24, W29, W9, EQ
	0x03614574 CSEL X27, X27, X8, EQ
	0x03614578 CBNZ W10, 0x3614588
	0x0361457C MOV X0, X23
	0x03614580 BL 0x1C16CF4
	0x03614584 STRB W19, [X25 + 0x453]
	0x03614588 LDRSW X8, [X21 + 0x18]
	0x0361458C LDR W9, [X21 + 0x10]
	0x03614590 CMP W8, W9
	0x03614594 B.GE 0x36145B4
	0x03614598 CMP W8, W9
	0x0361459C B.CS 0x36147C8
	0x036145A0 LDR X9, [X21 + 0x8]
	0x036145A4 ADD W10, W8, 0x1
	0x036145A8 STRH W24, [X9, X8, LSL #1]
	0x036145AC STR W10, [X21 + 0x18]
	0x036145B0 B 0x36145C0
	0x036145B4 MOV X0, X21
	0x036145B8 MOV W1, W24
	0x036145BC BL 0x3615A24
	0x036145C0 SUB W28, W28, 0x1
	0x036145C4 CMP W28, 0x1
	0x036145C8 B.GT 0x3614560
	0x036145CC MOV W28, W31
	0x036145D0 MOV W29, W26
	0x036145D4 MOV W26, W20
	0x036145D8 TBNZ X28, 0x1F, 0x36145E4
	0x036145DC LDRH W8, [X27]
	0x036145E0 CBZ W8, 0x3614738
	0x036145E4 CBZ X22, 0x36147CC
	0x036145E8 ADRP X19, 0xDCC000
	0x036145EC LDRB W8, [X19 + 0x455]
	0x036145F0 LDR X23, [X22 + 0x38]
	0x036145F4 CBNZ W8, 0x361460C
	0x036145F8 ADRP X0, 0xB0E000
	0x036145FC LDR X0, [X0 + 0x588]
	0x03614600 BL 0x1C16CF4
	0x03614604 MOVZ W8, 0x1
	0x03614608 STRB W8, [X19 + 0x455]
	0x0361460C CBZ X23, 0x36147CC
	0x03614610 LDR W8, [X23 + 0x10]
	0x03614614 CMP W8, 0x1
	0x03614618 B.NE 0x361465C
	0x0361461C LDRSW X19, [X21 + 0x18]
	0x03614620 LDR W8, [X21 + 0x10]
	0x03614624 CMP W19, W8
	0x03614628 B.GE 0x361465C
	0x0361462C CMP W19, W8
	0x03614630 B.CS 0x36147C8
	0x03614634 LDR X24, [X21 + 0x8]
	0x03614638 MOV X0, X23
	0x0361463C MOV W1, W31
	0x03614640 MOV X2, X31
	0x03614644 BL 0x3222A1C
	0x03614648 ADD W8, W19, 0x1
	0x0361464C STRH W0, [X24, X19, LSL #1]
	0x03614650 STR W8, [X21 + 0x18]
	0x03614654 TBZ X28, 0x1F, 0x36146D0
	0x03614658 B 0x361466C
	0x0361465C MOV X0, X21
	0x03614660 MOV X1, X23
	0x03614664 BL 0x3615B50
	0x03614668 TBZ X28, 0x1F, 0x36146D0
	0x0361466C ADRP X23, 0xB0E000
	0x03614670 LDR X23, [X23 + 0x588]
	0x03614674 MOVZ W19, 0x1
	0x03614678 MOVZ W24, 0x30
	0x0361467C LDRB W8, [X25 + 0x453]
	0x03614680 CBNZ W8, 0x3614690
	0x03614684 MOV X0, X23
	0x03614688 BL 0x1C16CF4
	0x0361468C STRB W19, [X25 + 0x453]
	0x03614690 LDRSW X8, [X21 + 0x18]
	0x03614694 LDR W9, [X21 + 0x10]
	0x03614698 CMP W8, W9
	0x0361469C B.GE 0x36146BC
	0x036146A0 CMP W8, W9
	0x036146A4 B.CS 0x36147C8
	0x036146A8 LDR X9, [X21 + 0x8]
	0x036146AC ADD W10, W8, 0x1
	0x036146B0 STRH W24, [X9, X8, LSL #1]
	0x036146B4 STR W10, [X21 + 0x18]
	0x036146B8 B 0x36146C8
	0x036146BC MOVZ W1, 0x30
	0x036146C0 MOV X0, X21
	0x036146C4 BL 0x3615A24
	0x036146C8 ADDS W28, W28, 0x1
	0x036146CC B.CC 0x361467C
	0x036146D0 LDRH W24, [X27]
	0x036146D4 CBZ W24, 0x3614738
	0x036146D8 ADRP X23, 0xB0E000
	0x036146DC LDR X23, [X23 + 0x588]
	0x036146E0 MOVZ W19, 0x1
	0x036146E4 LDRB W8, [X25 + 0x453]
	0x036146E8 CBNZ W8, 0x36146F8
	0x036146EC MOV X0, X23
	0x036146F0 BL 0x1C16CF4
	0x036146F4 STRB W19, [X25 + 0x453]
	0x036146F8 LDRSW X8, [X21 + 0x18]
	0x036146FC LDR W9, [X21 + 0x10]
	0x03614700 CMP W8, W9
	0x03614704 B.GE 0x3614724
	0x03614708 CMP W8, W9
	0x0361470C B.CS 0x36147C8
	0x03614710 LDR X9, [X21 + 0x8]
	0x03614714 ADD W10, W8, 0x1
	0x03614718 STRH W24, [X9, X8, LSL #1]
	0x0361471C STR W10, [X21 + 0x18]
	0x03614720 B 0x3614730
	0x03614724 MOV X0, X21
	0x03614728 MOV W1, W24

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Add X29, X31, 0
	014 Subtract X31, X31, 144
	015 Move [X29-40], X2
	016 NotImplemented "Instruction MRS not yet implemented."
	017 Move X8, [X27+40]
	018 Move X19, 0xDCE000
	019 Move X21, X4
	020 Move X20, X3
	021 Move [X29-8], X8
	022 Move W8, [X19+1092]
	023 Move X23, X1
	024 Move X22, X0
	025 Move TEMP, X8
	026 And TEMP, TEMP, 1
	027 Compare TEMP, 1
	028 JumpIfEqual {55}
	029 Move X0, 0xAE2000
	030 Move X0, [X0+3672]
	031 Call 0x1C17CF4
	032 Move X0, 0xB10000
	033 Move X0, [X0+32]
	034 Call 0x1C17CF4
	035 Move X0, 0xB28000
	036 Move X0, [X0+3848]
	037 Call 0x1C17CF4
	038 Move X0, 0xB10000
	039 Move X0, [X0+40]
	040 Call 0x1C17CF4
	041 Move X0, 0xB15000
	042 Move X0, [X0+2256]
	043 Call 0x1C17CF4
	044 Move X0, 0xB10000
	045 Move X0, [X0+352]
	046 Call 0x1C17CF4
	047 Move X0, 0xB15000
	048 Move X0, [X0+2264]
	049 Call 0x1C17CF4
	050 Move X0, 0xB15000
	051 Move X0, [X0+2272]
	052 Call 0x1C17CF4
	053 Move W8, 1
	054 Move [X19+1092], W8
	055 Move [X29-24], X31
	056 Move [X29-16], X31
	057 Move X8, [X23+16]
	058 Move [X29-48], X8
	059 NotImplemented "Instruction LDRH not yet implemented."
	060 Compare W8, 0
	061 JumpIfEqual {63}
	062 Move W24, [X23+8]
	063 Move W24, 2
	064 Move [X29-72], X21
	065 Move X8, 0xB28000
	066 Move X8, [X8+3848]
	067 Move X0, [X8]
	068 Move W8, [X0+224]
	069 Compare W8, 0
	070 JumpIfNotEqual {72}
	071 Call 0x1C17DFC
	072 NotImplemented "Instruction LDUR not yet implemented."
	073 Move X1, X20
	074 Move W2, W24
	075 Call Number.FindSection, X0, X1
	076 Move X25, W20
	077 Move [X29-60], W31
	078 Move X8, 0xB10000
	079 Move X8, [X8+32]
	080 Move W21, W0
	081 NotImplemented "Instruction LDUR not yet implemented."
	082 Move X1, X20
	083 Move X2, [X8]
	084 Call MemoryMarshal.GetReference, X0
	085 NotImplemented "Instruction CMP not yet implemented."
	086 Move [X29-28], W31
	087 Move W28, W31
	088 Move W19, W31
	089 Move [X29-56], W31
	090 Move W8, W31
	091 Move TEMP, 0x80000000
	092 Not TEMP
	093 Move W26, TEMP
	094 Move TEMP, 0
	095 Not TEMP
	096 Move W9, TEMP
	097 Move TEMP, 0
	098 Not TEMP
	099 Move W10, TEMP
	100 Move W13, W21
	101 NotImplemented "Instruction LDRH not yet implemented."
	102 NotImplemented "Instruction CMP not yet implemented."
	103 Compare W12, 0
	104 JumpIfEqual {204}
	105 NotImplemented "Instruction CMP not yet implemented."
	106 Add W11, W13, 1
	107 Subtract W14, W12, 34
	108 NotImplemented "Instruction CMP not yet implemented."
	109 Move X16, -44544000
	110 Add X16, X16, 768
	111 NotImplemented "Instruction ADR not yet implemented."
	112 Move W15, [X16]
	113 Add X13, X13, X15
	114 CallNoReturn X13
	115 Move X13, W11
	116 NotImplemented "Instruction CMP not yet implemented."
	117 NotImplemented "Instruction CSEL not yet implemented."
	118 Add X11, X0, W11
	119 NotImplemented "Instruction CMP not yet implemented."
	120 NotImplemented "Instruction LDRH not yet implemented."
	121 Compare W15, 0
	122 JumpIfEqual {126}
	123 Add X13, X13, 1
	124 NotImplemented "Instruction CMP not yet implemented."
	125 Add X11, X11, 2
	126 Move W11, W13
	127 NotImplemented "Instruction CMP not yet implemented."
	128 NotImplemented "Instruction CMP not yet implemented."
	129 Move W13, 0x2030
	130 NotImplemented "Instruction CMP not yet implemented."
	131 Add W8, W8, 3
	132 NotImplemented "Instruction CMP not yet implemented."
	133 NotImplemented "Instruction LDRH not yet implemented."
	134 Add W13, W13, 2
	135 NotImplemented "Instruction CMP not yet implemented."
	136 NotImplemented "Instruction CSEL not yet implemented."
	137 NotImplemented "Instruction CMP not yet implemented."
	138 NotImplemented "Instruction CMP not yet implemented."
	139 NotImplemented "Instruction LDRH not yet implemented."
	140 NotImplemented "Instruction CMP not yet implemented."
	141 Add W12, W13, 2
	142 NotImplemented "Instruction CMP not yet implemented."
	143 NotImplemented "Instruction LDRH not yet implemented."
	144 NotImplemented "Instruction CMP not yet implemented."
	145 NotImplemented "Instruction CMP not yet implemented."
	146 NotImplemented "Instruction LDRH not yet implemented."
	147 NotImplemented "Instruction CMP not yet implemented."
	148 Add W11, W11, 1
	149 NotImplemented "Instruction CMP not yet implemented."
	150 NotImplemented "Instruction LDRH not yet implemented."
	151 NotImplemented "Instruction CMP not yet implemented."
	152 Move W19, 1
	153 Move TEMP, 0x80000000
	154 Not TEMP
	155 Move W12, TEMP
	156 NotImplemented "Instruction CMP not yet implemented."
	157 NotImplemented "Instruction LDUR not yet implemented."
	158 Add W28, W12, 1
	159 NotImplemented "Instruction CSEL not yet implemented."
	160 Move [X29-28], W28
	161 NotImplemented "Instruction LDUR not yet implemented."
	162 Add W12, W12, 1
	163 Move [X29-28], W12
	164 Add W8, W8, 2
	165 Move TEMP, X9
	166 And TEMP, TEMP, -2147483648
	167 Compare TEMP, -2147483648
	168 JumpIfNotEqual {193}
	169 NotImplemented "Instruction LDUR not yet implemented."
	170 NotImplemented "Instruction CMP not yet implemented."
	171 Move TEMP, X10
	172 And TEMP, TEMP, -2147483648
	173 Compare TEMP, -2147483648
	174 JumpIfEqual {190}
	175 NotImplemented "Instruction LDUR not yet implemented."
	176 NotImplemented "Instruction LDUR not yet implemented."
	177 NotImplemented "Instruction CMP not yet implemented."
	178 NotImplemented "Instruction CSET not yet implemented."
	179 Or W13, W13, W10
	180 NotImplemented "Instruction LDUR not yet implemented."
	181 Move [X29-56], W13
	182 Move W13, 1
	183 NotImplemented "Instruction CSINC not yet implemented."
	184 Move [X29-60], W10
	185 Move W10, W12
	186 NotImplemented "Instruction LDUR not yet implemented."
	187 NotImplemented "Instruction CMP not yet implemented."
	188 NotImplemented "Instruction CSEL not yet implemented."
	189 Move W11, W14
	190 Move W10, 1
	191 Move [X29-60], W10
	192 NotImplemented "Instruction LDUR not yet implemented."
	193 NotImplemented "Instruction CMP not yet implemented."
	194 Move W13, W11
	195 Move [X29-56], X31
	196 Move W19, W31
	197 Move W28, W31
	198 Move [X29-28], W31
	199 Move W8, W31
	200 Move TEMP, 0x80000000
	201 Not TEMP
	202 Move W26, TEMP
	203 Move W19, 1
	204 NotImplemented "Instruction LDUR not yet implemented."
	205 NotImplemented "Instruction CMP not yet implemented."
	206 NotImplemented "Instruction CSEL not yet implemented."
	207 Move [X29-52], W9
	208 Move TEMP, X10
	209 And TEMP, TEMP, -2147483648
	210 Compare TEMP, -2147483648
	211 JumpIfEqual {218}
	212 NotImplemented "Instruction CMP not yet implemented."
	213 NotImplemented "Instruction LDUR not yet implemented."
	214 Subtract W9, W9, W9
	215 Add W8, W9, W8
	216 Move W9, 1
	217 Move [X29-56], W9
	218 NotImplemented "Instruction LDUR not yet implemented."
	219 NotImplemented "Instruction LDRH not yet implemented."
	220 Compare W9, 0
	221 JumpIfEqual {258}
	222 Move W9, [X23+4]
	223 And W31, W19, 1
	224 Add W8, W9, W8
	225 Move [X23+4], W8
	226 Move X9, 0xB28000
	227 Move X9, [X9+3848]
	228 NotImplemented "Instruction LDUR not yet implemented."
	229 NotImplemented "Instruction LDUR not yet implemented."
	230 Move X0, [X9]
	231 Subtract W10, W11, W10
	232 Add W8, W10, W8
	233 Move W9, [X0+224]
	234 NotImplemented "Instruction CSEL not yet implemented."
	235 Compare W9, 0
	236 JumpIfNotEqual {238}
	237 Call 0x1C17DFC
	238 Move X0, X23
	239 Move W1, W24
	240 Call Number.RoundNumber, X0, X1
	241 NotImplemented "Instruction LDUR not yet implemented."
	242 NotImplemented "Instruction LDRH not yet implemented."
	243 Compare W8, 0
	244 JumpIfNotEqual {257}
	245 Move X8, 0xB28000
	246 Move X8, [X8+3848]
	247 Move X0, [X8]
	248 Move W8, [X0+224]
	249 Compare W8, 0
	250 JumpIfNotEqual {252}
	251 Call 0x1C17DFC
	252 NotImplemented "Instruction LDUR not yet implemented."
	253 Move W2, 2
	254 Move X1, X20
	255 Call Number.FindSection, X0, X1
	256 NotImplemented "Instruction CMP not yet implemented."
	257 Move [X29-60], W21
	258 Move [X29-60], W21
	259 Move [X23+8], W31
	260 Move [X23+4], W31
	261 NotImplemented "Instruction LDUR not yet implemented."
	262 Subtract W8, W9, W26
	263 NotImplemented "Instruction CSEL not yet implemented."
	264 Subtract W8, W9, W28
	265 NotImplemented "Instruction CSEL not yet implemented."
	266 Move [X29-120], W8
	267 Move [X29-116], W10
	268 Move TEMP, X19
	269 And TEMP, TEMP, 1
	270 Compare TEMP, 1
	271 JumpIfNotEqual {276}
	272 NotImplemented "Instruction LDUR not yet implemented."
	273 Move W21, W31
	274 Move W19, 1
	275 Move W28, W9
	276 Move W8, [X23+4]
	277 NotImplemented "Instruction LDUR not yet implemented."
	278 Move W19, W31
	279 Subtract W21, W8, W9
	280 NotImplemented "Instruction CSEL not yet implemented."
	281 Add X8, X31, 0
	282 Subtract X9, X8, 16
	283 Add X31, X9, 0
	284 Move X10, -45240320
	285 Move V0, [X10+976]
	286 Move [X8-16], X31
	287 Move [X8-8], X31
	288 NotImplemented "Instruction LDUR not yet implemented."
	289 Move [X29-24], X9
	290 Move [X29-16], D0
	291 Move [X29-112], X27
	292 Move [X29-104], X23
	293 Move [X29-92], W19
	294 Move [X29-76], W21
	295 Move TEMP, X8
	296 And TEMP, TEMP, 1
	297 Compare TEMP, 1
	298 JumpIfNotEqual {315}
	299 Compare X0, 0
	300 JumpIfEqual {1036}
	301 Move X8, [X0+64]
	302 Compare X8, 0
	303 JumpIfEqual {1036}
	304 Move W8, [X8+16]
	305 NotImplemented "Instruction CMP not yet implemented."
	306 Move X1, X31
	307 Call NumberFormatInfo.get_NumberGroupSizes, X0
	308 Compare X0, 0
	309 JumpIfEqual {1036}
	310 Move W8, [X0+24]
	311 NotImplemented "Instruction LDUR not yet implemented."
	312 Compare W8, 0
	313 JumpIfEqual {966}
	314 Move W26, [X0+32]
	315 Move TEMP, 0
	316 Not TEMP
	317 Move W19, TEMP
	318 NotImplemented "Instruction LDUR not yet implemented."
	319 NotImplemented "Instruction LDUR not yet implemented."
	320 Compare W8, 0
	321 JumpIfNotEqual {357}
	322 NotImplemented "Instruction LDUR not yet implemented."
	323 Move W8, [X8+8]
	324 Compare W8, 0
	325 JumpIfEqual {357}
	326 Compare X9, 0
	327 JumpIfEqual {1036}
	328 Move X23, 0xDCE000
	329 Move W8, [X23+1109]
	330 Move X24, [X9+48]
	331 Compare W8, 0
	332 JumpIfNotEqual {338}
	333 Move X0, 0xB10000
	334 Move X0, [X0+1416]
	335 Call 0x1C17CF4
	336 Move W8, 1
	337 Move [X23+1109], W8
	338 Compare X24, 0
	339 JumpIfEqual {1036}
	340 Move W8, [X24+16]
	341 NotImplemented "Instruction CMP not yet implemented."
	342 NotImplemented "Instruction LDRSW not yet implemented."
	343 Move W8, [X22+16]
	344 NotImplemented "Instruction CMP not yet implemented."
	345 NotImplemented "Instruction CMP not yet implemented."
	346 Move X25, [X22+8]
	347 Move X0, X24
	348 Move W1, W31
	349 Move X2, X31
	350 Call String.get_Chars, X0, X1
	351 Add W8, W23, 1
	352 NotImplemented "Instruction STRH not yet implemented."
	353 Move [X22+24], W8
	354 Move X0, X22
	355 Move X1, X24
	356 Call ValueStringBuilder.AppendSlow, X0, X1
	357 Move X8, 0xB10000
	358 Move X8, [X8+32]
	359 NotImplemented "Instruction LDUR not yet implemented."
	360 Move X1, X20
	361 Move X2, [X8]
	362 Call MemoryMarshal.GetReference, X0
	363 NotImplemented "Instruction LDUR not yet implemented."
	364 Move [X29-88], X0
	365 NotImplemented "Instruction CMP not yet implemented."
	366 NotImplemented "Instruction LDUR not yet implemented."
	367 NotImplemented "Instruction LDUR not yet implemented."
	368 Move [X29-124], W31
	369 Xor W8, W8, 1
	370 Move [X29-40], W8
	371 Subtract W8, W20, 2
	372 Move [X29-140], W8
	373 Move W8, W20
	374 Move X8, W8
	375 Move [X29-136], X8
	376 NotImplemented "Instruction LDUR not yet implemented."
	377 NotImplemented "Instruction LDUR not yet implemented."
	378 NotImplemented "Instruction LDRH not yet implemented."
	379 NotImplemented "Instruction CMP not yet implemented."
	380 Compare W25, 0
	381 JumpIfEqual {948}
	382 NotImplemented "Instruction LDUR not yet implemented."
	383 NotImplemented "Instruction CMP not yet implemented."
	384 NotImplemented "Instruction CMP not yet implemented."
	385 Move W8, W25
	386 Move W9, 1
	387 NotImplemented "Instruction LSLV not yet implemented."
	388 Move X9, 0x4008
	389 NotImplemented "Instruction MOVK not yet implemented."
	390 And X31, X8, X9
	391 Subtract W8, W28, W24
	392 Add W23, W24, 1
	393 NotImplemented "Instruction LDUR not yet implemented."
	394 NotImplemented "Instruction LDUR not yet implemented."
	395 Move [X29-56], W8
	396 Move X8, X27
	397 NotImplemented "Instruction LDRH not yet implemented."
	398 Move X10, 0xDCE000
	399 Move W10, [X10+1107]
	400 Move W11, 48
	401 NotImplemented "Instruction CMP not yet implemented."
	402 NotImplemented "Instruction CSEL not yet implemented."
	403 NotImplemented "Instruction CSEL not yet implemented."
	404 Compare W10, 0
	405 JumpIfNotEqual {412}
	406 Move X0, 0xB10000
	407 Move X0, [X0+1416]
	408 Call 0x1C17CF4
	409 Move X8, 0xDCE000
	410 Move W9, 1
	411 Move [X8+1107], W9
	412 NotImplemented "Instruction LDRSW not yet implemented."
	413 Move W9, [X22+16]
	414 NotImplemented "Instruction CMP not yet implemented."
	415 NotImplemented "Instruction CMP not yet implemented."
	416 Move X9, [X22+8]
	417 Add W10, W8, 1
	418 NotImplemented "Instruction STRH not yet implemented."
	419 Move [X22+24], W10
	420 Move X0, X22
	421 Move W1, W26
	422 Call ValueStringBuilder.GrowAndAppend, X0, X1
	423 NotImplemented "Instruction CMP not yet implemented."
	424 NotImplemented "Instruction CSET not yet implemented."
	425 Move TEMP, X19
	426 And TEMP, TEMP, -2147483648
	427 Compare TEMP, -2147483648
	428 JumpIfEqual {475}
	429 Or W8, W8, W24
	430 Move TEMP, X8
	431 And TEMP, TEMP, 1
	432 Compare TEMP, 1
	433 JumpIfEqual {475}
	434 NotImplemented "Instruction LDUR not yet implemented."
	435 NotImplemented "Instruction CMP not yet implemented."
	436 NotImplemented "Instruction LDUR not yet implemented."
	437 Move W8, [X8]
	438 Add W8, W8, 1
	439 NotImplemented "Instruction CMP not yet implemented."
	440 Compare X21, 0
	441 JumpIfEqual {1036}
	442 Move X8, 0xDCE000
	443 Move W8, [X8+1109]
	444 Move X26, [X21+64]
	445 Compare W8, 0
	446 JumpIfNotEqual {453}
	447 Move X0, 0xB10000
	448 Move X0, [X0+1416]
	449 Call 0x1C17CF4
	450 Move W8, 1
	451 Move X9, 0xDCE000
	452 Move [X9+1109], W8
	453 Compare X26, 0
	454 JumpIfEqual {1036}
	455 Move W8, [X26+16]
	456 NotImplemented "Instruction CMP not yet implemented."
	457 NotImplemented "Instruction LDRSW not yet implemented."
	458 Move W8, [X22+16]
	459 NotImplemented "Instruction CMP not yet implemented."
	460 NotImplemented "Instruction CMP not yet implemented."
	461 Move X21, [X22+8]
	462 Move X0, X26
	463 Move W1, W31
	464 Move X2, X31
	465 Call String.get_Chars, X0, X1
	466 NotImplemented "Instruction STRH not yet implemented."
	467 NotImplemented "Instruction LDUR not yet implemented."
	468 Add W8, W24, 1
	469 Move [X22+24], W8
	470 Move X0, X22
	471 Move X1, X26
	472 Call ValueStringBuilder.AppendSlow, X0, X1
	473 NotImplemented "Instruction LDUR not yet implemented."
	474 Subtract W19, W19, 1
	475 Subtract W23, W23, 1
	476 NotImplemented "Instruction CMP not yet implemented."
	477 Subtract W28, W28, 1
	478 NotImplemented "Instruction LDUR not yet implemented."
	479 Move W24, W31
	480 NotImplemented "Instruction LDUR not yet implemented."
	481 NotImplemented "Instruction LDUR not yet implemented."
	482 NotImplemented "Instruction CMP not yet implemented."
	483 Add W26, W8, 1
	484 Subtract W8, W25, 34
	485 NotImplemented "Instruction CMP not yet implemented."
	486 Move X11, -44544000
	487 Add X11, X11, 784
	488 NotImplemented "Instruction ADR not yet implemented."
	489 NotImplemented "Instruction LDRH not yet implemented."
	490 Add X9, X9, X10
	491 CallNoReturn X9
	492 NotImplemented "Instruction CMP not yet implemented."
	493 NotImplemented "Instruction LDUR not yet implemented."
	494 Move [X29-56], W28
	495 Move [X29-76], W24
	496 NotImplemented "Instruction SBFM not yet implemented."
	497 NotImplemented "Instruction ORN not yet implemented."
	498 NotImplemented "Instruction LDUR not yet implemented."
	499 Add X28, X8, W26
	500 NotImplemented "Instruction LDUR not yet implemented."
	501 Subtract X24, X8, W26
	502 NotImplemented "Instruction LDRH not yet implemented."
	503 Compare W26, 0
	504 JumpIfEqual {748}
	505 NotImplemented "Instruction CMP not yet implemented."
	506 Move X8, 0xDCE000
	507 Move W8, [X8+1107]
	508 Compare W8, 0
	509 JumpIfNotEqual {516}
	510 Move X0, 0xB10000
	511 Move X0, [X0+1416]
	512 Call 0x1C17CF4
	513 Move X8, 0xDCE000
	514 Move W9, 1
	515 Move [X8+1107], W9
	516 NotImplemented "Instruction LDRSW not yet implemented."
	517 Move W9, [X22+16]
	518 NotImplemented "Instruction CMP not yet implemented."
	519 NotImplemented "Instruction CMP not yet implemented."
	520 Move X9, [X22+8]
	521 Add W10, W8, 1
	522 NotImplemented "Instruction STRH not yet implemented."
	523 Move [X22+24], W10
	524 Move X0, X22
	525 Move W1, W26
	526 Call ValueStringBuilder.GrowAndAppend, X0, X1
	527 Move X8, 1
	528 Add X23, X23, X8
	529 Subtract W21, W21, 1
	530 Subtract X24, X24, 1
	531 Add X28, X28, 2
	532 NotImplemented "Instruction CMP not yet implemented."
	533 NotImplemented "Instruction CMP not yet implemented."
	534 Move W8, 0x2030
	535 NotImplemented "Instruction CMP not yet implemented."
	536 Compare X21, 0
	537 JumpIfEqual {1036}
	538 Move X8, 0xDCE000
	539 Move W8, [X8+1109]
	540 Move X25, [X21+152]
	541 Compare W8, 0
	542 JumpIfNotEqual {549}
	543 Move X0, 0xB10000
	544 Move X0, [X0+1416]
	545 Call 0x1C17CF4
	546 Move W8, 1
	547 Move X9, 0xDCE000
	548 Move [X9+1109], W8
	549 Compare X25, 0
	550 JumpIfEqual {1036}
	551 Move W8, [X25+16]
	552 NotImplemented "Instruction CMP not yet implemented."
	553 NotImplemented "Instruction LDRSW not yet implemented."
	554 Move W8, [X22+16]
	555 NotImplemented "Instruction CMP not yet implemented."
	556 NotImplemented "Instruction CMP not yet implemented."
	557 Move X23, [X22+8]
	558 Move X0, X25
	559 Move W1, W31
	560 Move X2, X31
	561 Call String.get_Chars, X0, X1
	562 Add W8, W21, 1
	563 NotImplemented "Instruction STRH not yet implemented."
	564 Move [X22+24], W8
	565 Move X0, X22
	566 Move X1, X25
	567 Call ValueStringBuilder.AppendSlow, X0, X1
	568 NotImplemented "Instruction CMP not yet implemented."
	569 NotImplemented "Instruction LDUR not yet implemented."
	570 NotImplemented "Instruction LDRH not yet implemented."
	571 Compare W25, 0
	572 JumpIfEqual {944}
	573 Move X8, 0xDCE000
	574 Move W8, [X8+1107]
	575 Compare W8, 0
	576 JumpIfNotEqual {583}
	577 Move X0, 0xB10000
	578 Move X0, [X0+1416]
	579 Call 0x1C17CF4
	580 Move X8, 0xDCE000
	581 Move W9, 1
	582 Move [X8+1107], W9
	583 NotImplemented "Instruction LDRSW not yet implemented."
	584 Move W9, [X22+16]
	585 NotImplemented "Instruction LDUR not yet implemented."
	586 NotImplemented "Instruction CMP not yet implemented."
	587 Add W26, W10, 2
	588 Move X0, X22
	589 Move W1, W25
	590 Call ValueStringBuilder.GrowAndAppend, X0, X1
	591 Move TEMP, X24
	592 And TEMP, TEMP, -2147483648
	593 Compare TEMP, -2147483648
	594 JumpIfEqual {718}
	595 NotImplemented "Instruction LDRH not yet implemented."
	596 Compare W25, 0
	597 JumpIfEqual {756}
	598 Add X27, X27, 2
	599 NotImplemented "Instruction CMP not yet implemented."
	600 NotImplemented "Instruction LDUR not yet implemented."
	601 Move TEMP, X8
	602 And TEMP, TEMP, 1
	603 Compare TEMP, 1
	604 JumpIfNotEqual {632}
	605 NotImplemented "Instruction LDUR not yet implemented."
	606 NotImplemented "Instruction LDUR not yet implemented."
	607 NotImplemented "Instruction CMP not yet implemented."
	608 NotImplemented "Instruction LDUR not yet implemented."
	609 NotImplemented "Instruction LDRH not yet implemented."
	610 NotImplemented "Instruction CMP not yet implemented."
	611 Move W5, W31
	612 Add W8, W11, 2
	613 Move W9, 1
	614 Move X8, 0xDCD000
	615 Move W8, [X8+1107]
	616 Compare W8, 0
	617 JumpIfNotEqual {624}
	618 Move X0, 0xB0F000
	619 Move X0, [X0+1416]
	620 Call 0x1C17CF4
	621 Move X8, 0xDCD000
	622 Move W9, 1
	623 Move [X8+1107], W9
	624 NotImplemented "Instruction LDRSW not yet implemented."
	625 Move W9, [X22+16]
	626 NotImplemented "Instruction CMP not yet implemented."
	627 NotImplemented "Instruction CMP not yet implemented."
	628 Move X9, [X22+8]
	629 Add W10, W8, 1
	630 NotImplemented "Instruction STRH not yet implemented."
	631 Move [X22+24], W10
	632 Move X8, 0xDCD000
	633 Move W8, [X8+1107]
	634 NotImplemented "Instruction LDUR not yet implemented."
	635 Compare W8, 0
	636 JumpIfNotEqual {643}
	637 Move X0, 0xB0F000
	638 Move X0, [X0+1416]
	639 Call 0x1C17CF4
	640 Move X8, 0xDCD000
	641 Move W9, 1
	642 Move [X8+1107], W9
	643 NotImplemented "Instruction LDRSW not yet implemented."
	644 Move W9, [X22+16]
	645 NotImplemented "Instruction CMP not yet implemented."
	646 NotImplemented "Instruction CMP not yet implemented."
	647 Move X9, [X22+8]
	648 Add W10, W8, 1
	649 NotImplemented "Instruction STRH not yet implemented."
	650 Move [X22+24], W10
	651 Add W8, W11, 2
	652 NotImplemented "Instruction CMP not yet implemented."
	653 NotImplemented "Instruction LDUR not yet implemented."
	654 NotImplemented "Instruction LDRH not yet implemented."
	655 NotImplemented "Instruction CMP not yet implemented."
	656 NotImplemented "Instruction CMP not yet implemented."
	657 NotImplemented "Instruction LDUR not yet implemented."
	658 NotImplemented "Instruction LDRH not yet implemented."
	659 NotImplemented "Instruction CMP not yet implemented."
	660 Move W9, W31
	661 Move W5, 1
	662 Compare X21, 0
	663 JumpIfEqual {1036}
	664 Move X8, 0xDCD000
	665 Move W8, [X8+1109]
	666 Move X25, [X21+144]
	667 Compare W8, 0
	668 JumpIfNotEqual {549}
	669 NotImplemented "Instruction LDUR not yet implemented."
	670 NotImplemented "Instruction CMP not yet implemented."
	671 NotImplemented "Instruction CSET not yet implemented."
	672 Or W8, W9, W8
	673 Move TEMP, X8
	674 And TEMP, TEMP, 1
	675 Compare TEMP, 1
	676 JumpIfEqual {944}
	677 NotImplemented "Instruction LDUR not yet implemented."
	678 NotImplemented "Instruction LDUR not yet implemented."
	679 Move TEMP, X8
	680 And TEMP, TEMP, -2147483648
	681 Compare TEMP, -2147483648
	682 JumpIfEqual {688}
	683 NotImplemented "Instruction LDUR not yet implemented."
	684 NotImplemented "Instruction CMP not yet implemented."
	685 NotImplemented "Instruction LDRH not yet implemented."
	686 Compare W8, 0
	687 JumpIfEqual {867}
	688 Compare X21, 0
	689 JumpIfEqual {1036}
	690 Move X8, 0xDCD000
	691 Move W8, [X8+1109]
	692 Move X25, [X21+56]
	693 Compare W8, 0
	694 JumpIfNotEqual {701}
	695 Move X0, 0xB0F000
	696 Move X0, [X0+1416]
	697 Call 0x1C17CF4
	698 Move W8, 1
	699 Move X9, 0xDCD000
	700 Move [X9+1109], W8
	701 Compare X25, 0
	702 JumpIfEqual {1036}
	703 Move W8, [X25+16]
	704 NotImplemented "Instruction CMP not yet implemented."
	705 NotImplemented "Instruction LDRSW not yet implemented."
	706 Move W8, [X22+16]
	707 NotImplemented "Instruction CMP not yet implemented."
	708 NotImplemented "Instruction CMP not yet implemented."
	709 Move X23, [X22+8]
	710 Move X0, X25
	711 Move W1, W31
	712 Move X2, X31
	713 Call String.get_Chars, X0, X1
	714 Add W8, W21, 1
	715 Move W28, W31
	716 NotImplemented "Instruction STRH not yet implemented."
	717 Move [X22+24], W8
	718 NotImplemented "Instruction LDUR not yet implemented."
	719 Add W24, W24, 1
	720 NotImplemented "Instruction CMP not yet implemented."
	721 Move X0, X22
	722 Move W1, W25
	723 Call ValueStringBuilder.GrowAndAppend, X0, X1
	724 NotImplemented "Instruction CMP not yet implemented."
	725 NotImplemented "Instruction LDUR not yet implemented."
	726 NotImplemented "Instruction LDRH not yet implemented."
	727 NotImplemented "Instruction CMP not yet implemented."
	728 NotImplemented "Instruction CMP not yet implemented."
	729 Move X8, 0xDCD000
	730 Move W8, [X8+1107]
	731 Compare W8, 0
	732 JumpIfNotEqual {739}
	733 Move X0, 0xB0F000
	734 Move X0, [X0+1416]
	735 Call 0x1C17CF4
	736 Move X8, 0xDCD000
	737 Move W9, 1
	738 Move [X8+1107], W9
	739 NotImplemented "Instruction LDRSW not yet implemented."
	740 Move W9, [X22+16]
	741 Add W26, W21, 2
	742 NotImplemented "Instruction CMP not yet implemented."
	743 NotImplemented "Instruction CMP not yet implemented."
	744 Move X9, [X22+8]
	745 Add W10, W8, 1
	746 NotImplemented "Instruction STRH not yet implemented."
	747 Move [X22+24], W10
	748 NotImplemented "Instruction LDUR not yet implemented."
	749 NotImplemented "Instruction SBFM not yet implemented."
	750 NotImplemented "Instruction LDUR not yet implemented."
	751 NotImplemented "Instruction LDUR not yet implemented."
	752 NotImplemented "Instruction LDRH not yet implemented."
	753 NotImplemented "Instruction CMP not yet implemented."
	754 NotImplemented "Instruction CSET not yet implemented."
	755 Subtract W26, W8, W21
	756 NotImplemented "Instruction LDUR not yet implemented."
	757 NotImplemented "Instruction CMP not yet implemented."
	758 Move W25, 48
	759 Move X8, 0xDCD000
	760 Move W8, [X8+1107]
	761 Compare W8, 0
	762 JumpIfNotEqual {769}
	763 Move X0, 0xB0F000
	764 Move X0, [X0+1416]
	765 Call 0x1C17CF4
	766 Move X8, 0xDCD000
	767 Move W9, 1
	768 Move [X8+1107], W9
	769 NotImplemented "Instruction LDRSW not yet implemented."
	770 Move W9, [X22+16]
	771 NotImplemented "Instruction CMP not yet implemented."
	772 NotImplemented "Instruction CMP not yet implemented."
	773 Move X9, [X22+8]
	774 Add W10, W8, 1
	775 NotImplemented "Instruction STRH not yet implemented."
	776 Move [X22+24], W10
	777 Move X0, X22
	778 Move W1, W25
	779 Call ValueStringBuilder.GrowAndAppend, X0, X1
	780 NotImplemented "Instruction CMP not yet implemented."
	781 NotImplemented "Instruction CSET not yet implemented."
	782 Move TEMP, X19
	783 And TEMP, TEMP, -2147483648
	784 Compare TEMP, -2147483648
	785 JumpIfEqual {831}
	786 NotImplemented "Instruction LDUR not yet implemented."
	787 Or W8, W8, W9
	788 Move TEMP, X8
	789 And TEMP, TEMP, 1
	790 Compare TEMP, 1
	791 JumpIfEqual {831}
	792 NotImplemented "Instruction LDUR not yet implemented."
	793 NotImplemented "Instruction CMP not yet implemented."
	794 NotImplemented "Instruction LDUR not yet implemented."
	795 Move W8, [X8]
	796 Add W8, W8, 1
	797 NotImplemented "Instruction CMP not yet implemented."
	798 Compare X21, 0
	799 JumpIfEqual {1036}
	800 Move X8, 0xDCD000
	801 Move W8, [X8+1109]
	802 Move X25, [X21+64]
	803 Compare W8, 0
	804 JumpIfNotEqual {811}
	805 Move X0, 0xB0F000
	806 Move X0, [X0+1416]
	807 Call 0x1C17CF4
	808 Move W8, 1
	809 Move X9, 0xDCD000
	810 Move [X9+1109], W8
	811 Compare X25, 0
	812 JumpIfEqual {1036}
	813 Move W8, [X25+16]
	814 NotImplemented "Instruction CMP not yet implemented."
	815 NotImplemented "Instruction LDRSW not yet implemented."
	816 Move W8, [X22+16]
	817 NotImplemented "Instruction CMP not yet implemented."
	818 NotImplemented "Instruction CMP not yet implemented."
	819 Move X23, [X22+8]
	820 Move X0, X25
	821 Move W1, W31
	822 Move X2, X31
	823 Call String.get_Chars, X0, X1
	824 Add W8, W21, 1
	825 NotImplemented "Instruction STRH not yet implemented."
	826 Move [X22+24], W8
	827 Move X0, X22
	828 Move X1, X25
	829 Call ValueStringBuilder.AppendSlow, X0, X1
	830 Subtract W19, W19, 1
	831 Subtract W28, W28, 1
	832 Move X0, X22
	833 Move W1, W25
	834 Call ValueStringBuilder.GrowAndAppend, X0, X1
	835 NotImplemented "Instruction CMP not yet implemented."
	836 NotImplemented "Instruction LDUR not yet implemented."
	837 Add X21, X8, W26
	838 NotImplemented "Instruction LDUR not yet implemented."
	839 Subtract X23, X8, W26
	840 NotImplemented "Instruction LDRH not yet implemented."
	841 NotImplemented "Instruction CMP not yet implemented."
	842 Move X8, 0xDCD000
	843 Move W8, [X8+1107]
	844 Compare W8, 0
	845 JumpIfNotEqual {852}
	846 Move X0, 0xB0F000
	847 Move X0, [X0+1416]
	848 Call 0x1C17CF4
	849 Move X8, 0xDCD000
	850 Move W9, 1
	851 Move [X8+1107], W9
	852 NotImplemented "Instruction LDRSW not yet implemented."
	853 Move W9, [X22+16]
	854 NotImplemented "Instruction CMP not yet implemented."
	855 NotImplemented "Instruction CMP not yet implemented."
	856 Move X9, [X22+8]
	857 Add W10, W8, 1
	858 Move W11, 48
	859 NotImplemented "Instruction STRH not yet implemented."
	860 Move [X22+24], W10
	861 Move W1, 48
	862 Move X0, X22
	863 Call ValueStringBuilder.GrowAndAppend, X0, X1
	864 Add W26, W26, 1
	865 Subtract X23, X23, 1
	866 Add X21, X21, 2
	867 Move [X29-124], W31
	868 Move W28, W31
	869 Move X0, X22
	870 Move X1, X25
	871 Call ValueStringBuilder.AppendSlow, X0, X1
	872 Move W28, W31
	873 Move W8, 1
	874 Move [X29-124], W8
	875 NotImplemented "Instruction LDUR not yet implemented."
	876 NotImplemented "Instruction LDRH not yet implemented."
	877 NotImplemented "Instruction CMP not yet implemented."
	878 Move W9, W31
	879 Move W5, W31
	880 NotImplemented "Instruction CMP not yet implemented."
	881 NotImplemented "Instruction LDUR not yet implemented."
	882 Add W10, W10, W9
	883 Subtract W10, W10, W11
	884 NotImplemented "Instruction LDUR not yet implemented."
	885 NotImplemented "Instruction LDRH not yet implemented."
	886 NotImplemented "Instruction CMP not yet implemented."
	887 Add W8, W8, 1
	888 NotImplemented "Instruction CMP not yet implemented."
	889 Add W9, W9, 1
	890 Move W9, W10
	891 Move W26, W20
	892 Move X8, 0xDCD000
	893 Move W8, [X8+1107]
	894 Compare W8, 0
	895 JumpIfNotEqual {902}
	896 Move X0, 0xB0F000
	897 Move X0, [X0+1416]
	898 Call 0x1C17CF4
	899 Move X8, 0xDCD000
	900 Move W9, 1
	901 Move [X8+1107], W9
	902 NotImplemented "Instruction LDRSW not yet implemented."
	903 Move W9, [X22+16]
	904 NotImplemented "Instruction CMP not yet implemented."
	905 NotImplemented "Instruction CMP not yet implemented."
	906 Move X9, [X22+8]
	907 Add W10, W8, 1
	908 NotImplemented "Instruction STRH not yet implemented."
	909 Move [X22+24], W10
	910 Move X0, X22
	911 Move W1, W25
	912 Call ValueStringBuilder.GrowAndAppend, X0, X1
	913 Move W8, 1
	914 Move [X29-92], W8
	915 Move W26, W8
	916 NotImplemented "Instruction LDUR not yet implemented."
	917 NotImplemented "Instruction CMP not yet implemented."
	918 Move W10, 10
	919 NotImplemented "Instruction CSEL not yet implemented."
	920 NotImplemented "Instruction LDRH not yet implemented."
	921 Compare W8, 0
	922 JumpIfEqual {926}
	923 Move W8, [X12+4]
	924 NotImplemented "Instruction LDUR not yet implemented."
	925 Subtract W21, W8, W9
	926 Move W21, W31
	927 Move X8, 0xB27000
	928 Move X8, [X8+3848]
	929 Move X0, [X8]
	930 Move W8, [X0+224]
	931 Compare W8, 0
	932 JumpIfNotEqual {938}
	933 Move [X29-56], W5
	934 Move W23, W4
	935 Call 0x1C17DFC
	936 NotImplemented "Instruction LDUR not yet implemented."
	937 Move W4, W23
	938 NotImplemented "Instruction LDUR not yet implemented."
	939 Move X0, X22
	940 Move W2, W21
	941 Move W3, W25
	942 Call Number.FormatExponent, X0, X1, X2, X3, X4, X5
	943 Move [X29-92], W31
	944 NotImplemented "Instruction CMP not yet implemented."
	945 Move [X29-76], W24
	946 Move W8, W26
	947 Move [X29-60], W26
	948 NotImplemented "Instruction LDUR not yet implemented."
	949 Move X8, [X8+40]
	950 NotImplemented "Instruction LDUR not yet implemented."
	951 NotImplemented "Instruction CMP not yet implemented."
	952 Add X31, X29, 0
	953 Move X20, [X31+80]
	954 Move X19, [X31+88]
	955 Move X22, [X31+64]
	956 Move X21, [X31+72]
	957 Move X24, [X31+48]
	958 Move X23, [X31+56]
	959 Move X26, [X31+32]
	960 Move X25, [X31+40]
	961 Move X28, [X31+16]
	962 Move X27, [X31+24]
	963 Move X29, [X31+96]
	964 Move X30, [X31+104]
	965 Return 
	966 Move W26, W31
	967 NotImplemented "Instruction LDUR not yet implemented."
	968 And W9, W9, W9
	969 Add W9, W9, W28
	970 Move TEMP, 0
	971 Not TEMP
	972 Move W19, TEMP
	973 NotImplemented "Instruction CMP not yet implemented."
	974 NotImplemented "Instruction CSEL not yet implemented."
	975 Compare W26, 0
	976 JumpIfEqual {318}
	977 NotImplemented "Instruction CMP not yet implemented."
	978 Move W24, W31
	979 Subtract W11, W8, 1
	980 Move TEMP, 0
	981 Not TEMP
	982 Move W19, TEMP
	983 Move W27, W26
	984 Move [X29-88], X0
	985 NotImplemented "Instruction LDUR not yet implemented."
	986 Add W19, W19, 1
	987 NotImplemented "Instruction CMP not yet implemented."
	988 Move X8, 0xAE1000
	989 Move X8, [X8+3672]
	990 Move W1, W1
	991 ShiftRight W1, 31
	992 And W1, W1, 0x3FFFFFFF
	993 Move X23, X20
	994 Move W20, W11
	995 Move X0, [X8]
	996 Call 0x1C17D6C
	997 Move X8, 0xB14000
	998 Move X8, [X8+2272]
	999 Move X25, X0
	1000 Move X1, [X8]
	1001 Call Span`1<Int32>.op_Implicit, X0
	1002 Move X8, 0xB14000
	1003 Move X8, [X8+2256]
	1004 Move X2, X0
	1005 Move X4, X1
	1006 Subtract X0, X29, 24
	1007 Move X3, [X8]
	1008 Move X1, X2
	1009 Move X2, X4
	1010 Call Span`1<Int32>.CopyTo, X0, X1
	1011 Move X8, 0xB14000
	1012 Move X8, [X8+2272]
	1013 Move X0, X25
	1014 Move X1, [X8]
	1015 Call Span`1<Int32>.op_Implicit, X0
	1016 Move [X29-24], X0
	1017 Move [X29-16], X1
	1018 NotImplemented "Instruction LDUR not yet implemented."
	1019 Move W11, W20
	1020 Move X20, X23
	1021 NotImplemented "Instruction CMP not yet implemented."
	1022 NotImplemented "Instruction LDUR not yet implemented."
	1023 NotImplemented "Instruction CMP not yet implemented."
	1024 Move [X8], W26
	1025 Move W8, [X0+24]
	1026 Move X9, W24
	1027 Add X24, X9, 1
	1028 NotImplemented "Instruction CMP not yet implemented."
	1029 Add X8, X0, X24
	1030 Move W27, [X8+32]
	1031 Compare W27, 0
	1032 JumpIfEqual {318}
	1033 Add W26, W27, W26
	1034 NotImplemented "Instruction CMP not yet implemented."
	1035 Call 0x1C17F28
	1036 Call 0x1C17F20
	1037 Call 0x3EB2B20

Method: System.Void .cctor()

Disassembly:
	0x03616094 BL 0x1C16CF4
	0x03616098 MOVZ W8, 0x1
	0x0361609C STRB W8, [X20 + 0x459]
	0x036160A0 CBZ W19, 0x36160D0
	0x036160A4 ADRP X8, 0xB24000
	0x036160A8 LDR X8, [X8 + 0xF20]
	0x036160AC LDR X0, [X8]
	0x036160B0 LDR W8, [X0 + 0xE0]
	0x036160B4 CBNZ W8, 0x36160BC
	0x036160B8 BL 0x1C16DFC
	0x036160BC SUB W8, W19, 0x1
	0x036160C0 EOR W0, W8, W19, 0x0
	0x036160C4 LDP X20, X19, [X31 + 0x10]
	0x036160C8 LDR X30, [X31], #0x20
	0x036160CC B 0x3615FD8
	0x036160D0 LDP X20, X19, [X31 + 0x10]
	0x036160D4 MOV W0, W31
	0x036160D8 LDR X30, [X31], #0x20
	0x036160DC RET
	0x036160E0 STR X30, [X31 - 0x20]!
	0x036160E4 STP X20, X19, [X31 + 0x10]
	0x036160E8 ADRP X19, 0xDCA000
	0x036160EC ADRP X20, 0xB24000
	0x036160F0 LDRB W8, [X19 + 0x45A]
	0x036160F4 LDR X20, [X20 + 0xF20]
	0x036160F8 TBNZ X8, 0x0, 0x3616110
	0x036160FC ADRP X0, 0xB24000
	0x03616100 LDR X0, [X0 + 0xF20]
	0x03616104 BL 0x1C16CF4
	0x03616108 MOVZ W8, 0x1
	0x0361610C STRB W8, [X19 + 0x45A]
	0x03616110 LDR X8, [X20]
	0x03616114 ADRP X9, 0xFFFFFFFFFD4D4000
	0x03616118 LDR V0, [X9 + 0x65]
	0x0361611C LDP X20, X19, [X31 + 0x10]
	0x03616120 LDR X8, [X8 + 0xB8]
	0x03616124 MOVZ W9, 0xFFFF
	0x03616128 STR V0, [X8]
	0x0361612C STR W9, [X8 + 0x10]
	0x03616130 LDR X30, [X31], #0x20
	0x03616134 RET
	0x03616138 STR X30, [X31 - 0x20]!
	0x0361613C STP X20, X19, [X31 + 0x10]
	0x03616140 ADRP X19, 0xDCA000
	0x03616144 ADRP X20, 0xB24000
	0x03616148 LDRB W8, [X19 + 0x45B]
	0x0361614C LDR X20, [X20 + 0xF28]
	0x03616150 TBNZ X8, 0x0, 0x3616168
	0x03616154 ADRP X0, 0xB24000
	0x03616158 LDR X0, [X0 + 0xF28]
	0x0361615C BL 0x1C16CF4
	0x03616160 MOVZ W8, 0x1
	0x03616164 STRB W8, [X19 + 0x45B]
	0x03616168 LDR X8, [X20]
	0x0361616C ADRP X9, 0xFFFFFFFFFD4D7000
	0x03616170 LDR V0, [X9 + 0xCC8]
	0x03616174 LDP X20, X19, [X31 + 0x10]
	0x03616178 LDR X8, [X8 + 0xB8]
	0x0361617C MOVZ W9, 0x659C
	0x03616180 MOVK W9, 0x20000
	0x03616184 STR D0, [X8]
	0x03616188 STR W9, [X8 + 0x8]
	0x0361618C LDR X30, [X31], #0x20
	0x03616190 RET
	0x03616194 STR X30, [X31 - 0x20]!
	0x03616198 STP X20, X19, [X31 + 0x10]
	0x0361619C ADRP X19, 0xDCA000
	0x036161A0 ADRP X20, 0xB24000
	0x036161A4 LDRB W8, [X19 + 0x45D]
	0x036161A8 LDR X20, [X20 + 0xF30]
	0x036161AC TBNZ X8, 0x0, 0x36161D0
	0x036161B0 ADRP X0, 0xAE3000
	0x036161B4 LDR X0, [X0 + 0xCC0]
	0x036161B8 BL 0x1C16CF4
	0x036161BC ADRP X0, 0xB24000
	0x036161C0 LDR X0, [X0 + 0xF30]
	0x036161C4 BL 0x1C16CF4
	0x036161C8 MOVZ W8, 0x1
	0x036161CC STRB W8, [X19 + 0x45D]
	0x036161D0 LDR X8, [X20]
	0x036161D4 LDR X8, [X8 + 0xB8]
	0x036161D8 LDR X0, [X8]
	0x036161DC CBNZ X0, 0x361621C
	0x036161E0 ADRP X8, 0xAE3000
	0x036161E4 LDR X8, [X8 + 0xCC0]
	0x036161E8 LDR X0, [X8]
	0x036161EC BL 0x1C16F10
	0x036161F0 MOV X1, X31
	0x036161F4 MOV X19, X0
	0x036161F8 BL 0x33BDD8C
	0x036161FC LDR X8, [X20]
	0x03616200 MOV X1, X19
	0x03616204 MOV X2, X31
	0x03616208 LDR X0, [X8 + 0xB8]
	0x0361620C BL 0x1C24138
	0x03616210 LDR X8, [X20]
	0x03616214 LDR X8, [X8 + 0xB8]
	0x03616218 LDR X0, [X8]
	0x0361621C LDP X20, X19, [X31 + 0x10]
	0x03616220 LDR X30, [X31], #0x20
	0x03616224 RET
	0x03616228 STR X30, [X31 - 0x30]!
	0x0361622C STP X22, X21, [X31 + 0x10]
	0x03616230 STP X20, X19, [X31 + 0x20]
	0x03616234 ADRP X19, 0xDCA000
	0x03616238 LDRB W8, [X19 + 0x45E]
	0x0361623C TBNZ X8, 0x0, 0x36162B4
	0x03616240 ADRP X0, 0xADD000
	0x03616244 LDR X0, [X0 + 0x618]
	0x03616248 BL 0x1C16CF4
	0x0361624C ADRP X0, 0xB24000
	0x03616250 LDR X0, [X0 + 0xF30]
	0x03616254 BL 0x1C16CF4
	0x03616258 ADRP X0, 0xB24000
	0x0361625C LDR X0, [X0 + 0xF38]
	0x03616260 BL 0x1C16CF4
	0x03616264 ADRP X0, 0xB24000
	0x03616268 LDR X0, [X0 + 0xF40]
	0x0361626C BL 0x1C16CF4
	0x03616270 ADRP X0, 0xB24000
	0x03616274 LDR X0, [X0 + 0xF48]
	0x03616278 BL 0x1C16CF4
	0x0361627C ADRP X0, 0xB24000
	0x03616280 LDR X0, [X0 + 0xF50]
	0x03616284 BL 0x1C16CF4
	0x03616288 ADRP X0, 0xB24000
	0x0361628C LDR X0, [X0 + 0xF58]
	0x03616290 BL 0x1C16CF4
	0x03616294 ADRP X0, 0xB24000
	0x03616298 LDR X0, [X0 + 0xF60]
	0x0361629C BL 0x1C16CF4
	0x036162A0 ADRP X0, 0xB24000
	0x036162A4 LDR X0, [X0 + 0xF68]
	0x036162A8 BL 0x1C16CF4
	0x036162AC MOVZ W8, 0x1
	0x036162B0 STRB W8, [X19 + 0x45E]
	0x036162B4 BL 0x3616194
	0x036162B8 MOV X19, X0
	0x036162BC STRB W31, [X31 + 0xC]
	0x036162C0 ADD X1, X31, 0xC
	0x036162C4 MOV X2, X31
	0x036162C8 BL 0x33DE64C
	0x036162CC ADRP X22, 0xB24000
	0x036162D0 LDR X22, [X22 + 0xF30]
	0x036162D4 LDR X8, [X22]
	0x036162D8 LDR X8, [X8 + 0xB8]
	0x036162DC LDR X20, [X8 + 0x8]
	0x036162E0 BL 0x1C16D44
	0x036162E4 CBZ X20, 0x36162F0
	0x036162E8 MOV X21, X31
	0x036162EC B 0x36163D8
	0x036162F0 ADRP X8, 0xADD000
	0x036162F4 LDR X8, [X8 + 0x618]
	0x036162F8 LDR X0, [X8]
	0x036162FC MOVZ W1, 0x10000
	0x03616300 BL 0x1C16D6C
	0x03616304 ADRP X8, 0xB24000
	0x03616308 LDR X8, [X8 + 0xF48]
	0x0361630C MOV X20, X0
	0x03616310 LDR X1, [X8]
	0x03616314 MOVZ W2, 0x1
	0x03616318 BL 0x3616488
	0x0361631C ADRP X8, 0xB24000
	0x03616320 LDR X8, [X8 + 0xF40]
	0x03616324 LDR X1, [X8]
	0x03616328 MOVZ W2, 0x2
	0x0361632C MOV X0, X20
	0x03616330 BL 0x3616488
	0x03616334 ADRP X8, 0xB24000
	0x03616338 LDR X8, [X8 + 0xF60]
	0x0361633C LDR X1, [X8]
	0x03616340 MOVZ W2, 0x4
	0x03616344 MOV X0, X20
	0x03616348 BL 0x3616488
	0x0361634C ADRP X21, 0xB24000
	0x03616350 LDR X21, [X21 + 0xF38]
	0x03616354 LDR X1, [X21]
	0x03616358 MOVZ W2, 0x8
	0x0361635C MOV X0, X20
	0x03616360 BL 0x3616488
	0x03616364 ADRP X8, 0xB24000
	0x03616368 LDR X8, [X8 + 0xF68]
	0x0361636C LDR X1, [X8]
	0x03616370 MOVZ W2, 0x10
	0x03616374 MOV X0, X20
	0x03616378 BL 0x3616488
	0x0361637C LDR X1, [X21]
	0x03616380 MOVZ W2, 0x20
	0x03616384 MOV X0, X20
	0x03616388 BL 0x3616488
	0x0361638C ADRP X8, 0xB24000
	0x03616390 LDR X8, [X8 + 0xF58]
	0x03616394 LDR X1, [X8]
	0x03616398 MOVZ W2, 0x40
	0x0361639C MOV X0, X20
	0x036163A0 BL 0x3616488
	0x036163A4 ADRP X8, 0xB24000
	0x036163A8 LDR X8, [X8 + 0xF50]
	0x036163AC LDR X1, [X8]
	0x036163B0 MOVZ W2, 0x80
	0x036163B4 MOV X0, X20
	0x036163B8 BL 0x3616488
	0x036163BC MOV X0, X31
	0x036163C0 BL 0x33E6F84
	0x036163C4 BL 0x1C16D44
	0x036163C8 LDR X8, [X22]
	0x036163CC MOV X21, X31
	0x036163D0 LDR X8, [X8 + 0xB8]
	0x036163D4 STR X20, [X8 + 0x8]
	0x036163D8 LDRB W8, [X31 + 0xC]
	0x036163DC CBZ W8, 0x36163EC
	0x036163E0 MOV X0, X19
	0x036163E4 MOV X1, X31
	0x036163E8 BL 0x33E14E4
	0x036163EC CBNZ X21, 0x3616400
	0x036163F0 LDP X20, X19, [X31 + 0x20]
	0x036163F4 LDP X22, X21, [X31 + 0x10]
	0x036163F8 LDR X30, [X31], #0x30
	0x036163FC RET
	0x03616400 MOV X0, X21
	0x03616404 BL 0x1C16F18
	0x03616408 B 0x3616430
	0x0361640C B 0x3616430
	0x03616410 B 0x3616430
	0x03616414 B 0x3616430
	0x03616418 B 0x3616430
	0x0361641C B 0x3616430
	0x03616420 B 0x3616430
	0x03616424 B 0x3616430
	0x03616428 B 0x3616430
	0x0361642C B 0x3616430
	0x03616430 MOV X20, X0
	0x03616434 CMP W1, 0x1
	0x03616438 B.NE 0x3616450
	0x0361643C MOV X0, X20
	0x03616440 BL 0x3EB1AD0
	0x03616444 LDR X21, [X0]
	0x03616448 BL 0x3EB1AE0
	0x0361644C B 0x36163D8
	0x03616450 MOV X21, X31
	0x03616454 B 0x361645C
	0x03616458 MOV X20, X0
	0x0361645C LDRB W8, [X31 + 0xC]
	0x03616460 CBZ W8, 0x3616470
	0x03616464 MOV X0, X19
	0x03616468 MOV X1, X31
	0x0361646C BL 0x33E14E4
	0x03616470 CBNZ X21, 0x361647C
	0x03616474 MOV X0, X20
	0x03616478 BL 0x1D2C690
	0x0361647C MOV X0, X21
	0x03616480 BL 0x1C16F18
	0x03616484 BL 0x1990590
	0x03616488 STP X30, X25, [X31 - 0x40]!
	0x0361648C STP X24, X23, [X31 + 0x10]
	0x03616490 STP X22, X21, [X31 + 0x20]
	0x03616494 STP X20, X19, [X31 + 0x30]
	0x03616498 CBZ X1, 0x3616548
	0x0361649C LDR W8, [X1 + 0x10]
	0x036164A0 MOV X20, X1
	0x036164A4 CMP W8, 0x1
	0x036164A8 B.LT 0x3616530
	0x036164AC MOV W19, W2
	0x036164B0 MOV X21, X0
	0x036164B4 MOV W22, W31
	0x036164B8 ADD X24, X0, 0x20
	0x036164BC MOV X0, X20
	0x036164C0 MOV W1, W22
	0x036164C4 MOV X2, X31
	0x036164C8 BL 0x3222A1C
	0x036164CC MOV W23, W0
	0x036164D0 AND W25, W0, 0xFFFF
	0x036164D4 ORR W1, W22, 0x1
	0x036164D8 MOV X0, X20
	0x036164DC MOV X2, X31
	0x036164E0 BL 0x3222A1C
	0x036164E4 CMP W25, W0, UXTH
	0x036164E8 B.HI 0x3616520
	0x036164EC CBZ X21, 0x3616548
	0x036164F0 LDR W8, [X21 + 0x18]
	0x036164F4 AND X10, X0, 0xFFFF
	0x036164F8 AND X9, X23, 0xFFFF
	0x036164FC ADD X10, X10, 0x1
	0x03616500 CMP X9, X8
	0x03616504 B.CS 0x3616544
	0x03616508 LDRB W11, [X24, X9, LSL]
	0x0361650C ORR W11, W11, W19, 0x0
	0x03616510 STRB W11, [X24, X9, LSL]
	0x03616514 ADD X9, X9, 0x1
	0x03616518 CMP X10, X9
	0x0361651C B.NE 0x3616500
	0x03616520 LDR W8, [X20 + 0x10]
	0x03616524 ADD W22, W22, 0x2
	0x03616528 CMP W22, W8
	0x0361652C B.LT 0x36164BC
	0x03616530 LDP X20, X19, [X31 + 0x30]
	0x03616534 LDP X22, X21, [X31 + 0x20]
	0x03616538 LDP X24, X23, [X31 + 0x10]
	0x0361653C LDP X30, X25, [X31], #0x40
	0x03616540 RET
	0x03616544 BL 0x1C16F28
	0x03616548 BL 0x1C16F20
	0x0361654C STR X1, [X0]
	0x03616550 RET
	0x03616554 STR X30, [X31 - 0x20]!
	0x03616558 STP X20, X19, [X31 + 0x10]
	0x0361655C ADRP X20, 0xDCA000
	0x03616560 ADRP X19, 0xB24000
	0x03616564 LDRB W8, [X20 + 0x45F]
	0x03616568 LDR X19, [X19 + 0xF30]
	0x0361656C TBNZ X8, 0x0, 0x3616584
	0x03616570 ADRP X0, 0xB24000
	0x03616574 LDR X0, [X0 + 0xF30]
	0x03616578 BL 0x1C16CF4
	0x0361657C MOVZ W8, 0x1
	0x03616580 STRB W8, [X20 + 0x45F]
	0x03616584 LDR X8, [X19]
	0x03616588 LDR X8, [X8 + 0xB8]
	0x0361658C LDR X20, [X8 + 0x8]
	0x03616590 BL 0x1C16D44
	0x03616594 CBNZ X20, 0x361659C
	0x03616598 BL 0x3616228
	0x0361659C LDR X8, [X19]
	0x036165A0 LDR X8, [X8 + 0xB8]
	0x036165A4 LDR X19, [X8 + 0x8]
	0x036165A8 BL 0x1C16D44
	0x036165AC MOV X0, X19
	0x036165B0 LDP X20, X19, [X31 + 0x10]
	0x036165B4 LDR X30, [X31], #0x20
	0x036165B8 RET
	0x036165BC SUB X31, X31, 0x40
	0x036165C0 STP X30, X21, [X31 + 0x20]
	0x036165C4 STP X20, X19, [X31 + 0x30]
	0x036165C8 ADRP X21, 0xDCA000
	0x036165CC LDRB W8, [X21 + 0x460]
	0x036165D0 MOV W20, W1
	0x036165D4 MOV X19, X0
	0x036165D8 STR X0, [X31 + 0x18]
	0x036165DC TBNZ X8, 0x0, 0x361660C
	0x036165E0 ADRP X0, 0xADE000
	0x036165E4 LDR X0, [X0 + 0x9F0]
	0x036165E8 BL 0x1C16CF4
	0x036165EC ADRP X0, 0xB21000
	0x036165F0 LDR X0, [X0 + 0x400]
	0x036165F4 BL 0x1C16CF4
	0x036165F8 ADRP X0, 0xB24000
	0x036165FC LDR X0, [X0 + 0xF70]
	0x03616600 BL 0x1C16CF4
	0x03616604 MOVZ W8, 0x1
	0x03616608 STRB W8, [X21 + 0x460]
	0x0361660C CMP W20, 0x3
	0x03616610 STP X31, X31, [X31 + 0x8]
	0x03616614 B.HI 0x3616700
	0x03616618 ADRP X9, 0xFFFFFFFFFD581000
	0x0361661C MOV W8, W20
	0x03616620 ADD X9, X9, 0x32E
	0x03616624 ADRP X20, 0xB24000
	0x03616628 ADR X10, 0x14
	0x0361662C LDRB W11, [X9, X8, LSL]
	0x03616630 ADD X10, X10, X11, 0x2, LSL
	0x03616634 LDR X20, [X20 + 0xF70]
	0x03616638 BR X10
	0x0361663C ADRP X8, 0xB21000
	0x03616640 LDR X8, [X8 + 0x400]
	0x03616644 LDR X0, [X8]
	0x03616648 LDR W8, [X0 + 0xE0]
	0x0361664C CBNZ W8, 0x3616654
	0x03616650 BL 0x1C16DFC
	0x03616654 MOV X0, X19
	0x03616658 BL 0x36167E4
	0x0361665C B 0x3616680
	0x03616660 ADRP X8, 0xB21000
	0x03616664 LDR X8, [X8 + 0x400]
	0x03616668 LDR X0, [X8]
	0x0361666C LDR W8, [X0 + 0xE0]
	0x03616670 CBNZ W8, 0x3616678
	0x03616674 BL 0x1C16DFC
	0x03616678 MOV X0, X19
	0x0361667C BL 0x36168B8
	0x03616680 MOV X19, X0
	0x03616684 STR X0, [X31 + 0x18]
	0x03616688 B 0x36166C8
	0x0361668C ADRP X8, 0xADE000
	0x03616690 LDR X8, [X8 + 0x9F0]
	0x03616694 LDR X0, [X8]
	0x03616698 LDR W8, [X0 + 0xE0]
	0x0361669C CBNZ W8, 0x36166A4
	0x036166A0 BL 0x1C16DFC
	0x036166A4 ADD X0, X31, 0x18
	0x036166A8 MOV X1, X31
	0x036166AC BL 0x3361708
	0x036166B0 MOV X1, X0
	0x036166B4 ADD X0, X31, 0x18
	0x036166B8 MOV W2, W31
	0x036166BC MOV X3, X31
	0x036166C0 BL 0x335EF44
	0x036166C4 LDR X19, [X31 + 0x18]
	0x036166C8 LDR X0, [X20]
	0x036166CC LDR W8, [X0 + 0xE0]
	0x036166D0 CBNZ W8, 0x36166D8
	0x036166D4 BL 0x1C16DFC
	0x036166D8 ADD X0, X31, 0x8
	0x036166DC MOVZ W2, 0x1
	0x036166E0 MOV X1, X19
	0x036166E4 BL 0x3616998
	0x036166E8 ADD X0, X31, 0x8
	0x036166EC BL 0x3616B58
	0x036166F0 LDP X20, X19, [X31 + 0x30]
	0x036166F4 LDP X30, X21, [X31 + 0x20]
	0x036166F8 ADD X31, X31, 0x40
	0x036166FC RET
	0x03616700 ADRP X0, 0xADD000
	0x03616704 LDR X0, [X0 + 0x9D0]
	0x03616708 BL 0x1C16D08
	0x0361670C MOVZ W1, 0x2
	0x03616710 BL 0x1C16D6C
	0x03616714 MOV X19, X0
	0x03616718 STR W20, [X31 + 0x4]
	0x0361671C ADRP X0, 0xB24000
	0x03616720 LDR X0, [X0 + 0xF78]
	0x03616724 BL 0x1C16D08
	0x03616728 ADD X1, X31, 0x4
	0x0361672C BL 0x1C16E04
	0x03616730 MOV X20, X0
	0x03616734 MOV X0, X19
	0x03616738 BL 0x19903C0
	0x0361673C MOV X0, X19
	0x03616740 MOV X1, X20
	0x03616744 BL 0x19980B4
	0x03616748 MOV X0, X19
	0x0361674C MOV X1, X31
	0x03616750 MOV X2, X20

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0xDCB000
	005 Move X19, 0xADE000
	006 Move W8, [X20+1093]
	007 Move X19, [X19+2760]
	008 Move TEMP, X8
	009 And TEMP, TEMP, 1
	010 Compare TEMP, 1
	011 JumpIfEqual {146}
	012 Move X0, 0xB25000
	013 Move X0, [X0+3848]
	014 Call 0x1C17CF4
	015 Move X0, 0xADE000
	016 Move X0, [X0+2760]
	017 Call 0x1C17CF4
	018 Move X0, 0xB16000
	019 Move X0, [X0+40]
	020 Call 0x1C17CF4
	021 Move X0, 0xB16000
	022 Move X0, [X0+48]
	023 Call 0x1C17CF4
	024 Move X0, 0xB16000
	025 Move X0, [X0+56]
	026 Call 0x1C17CF4
	027 Move X0, 0xADF000
	028 Move X0, [X0+2568]
	029 Call 0x1C17CF4
	030 Move X0, 0xB16000
	031 Move X0, [X0+64]
	032 Call 0x1C17CF4
	033 Move X0, 0xB16000
	034 Move X0, [X0+72]
	035 Call 0x1C17CF4
	036 Move X0, 0xB16000
	037 Move X0, [X0+80]
	038 Call 0x1C17CF4
	039 Move X0, 0xB16000
	040 Move X0, [X0+88]
	041 Call 0x1C17CF4
	042 Move X0, 0xB16000
	043 Move X0, [X0+96]
	044 Call 0x1C17CF4
	045 Move X0, 0xB16000
	046 Move X0, [X0+104]
	047 Call 0x1C17CF4
	048 Move X0, 0xB16000
	049 Move X0, [X0+112]
	050 Call 0x1C17CF4
	051 Move X0, 0xB16000
	052 Move X0, [X0+120]
	053 Call 0x1C17CF4
	054 Move X0, 0xB16000
	055 Move X0, [X0+128]
	056 Call 0x1C17CF4
	057 Move X0, 0xB16000
	058 Move X0, [X0+136]
	059 Call 0x1C17CF4
	060 Move X0, 0xB16000
	061 Move X0, [X0+144]
	062 Call 0x1C17CF4
	063 Move X0, 0xB16000
	064 Move X0, [X0+152]
	065 Call 0x1C17CF4
	066 Move X0, 0xB16000
	067 Move X0, [X0+160]
	068 Call 0x1C17CF4
	069 Move X0, 0xB16000
	070 Move X0, [X0+168]
	071 Call 0x1C17CF4
	072 Move X0, 0xB16000
	073 Move X0, [X0+176]
	074 Call 0x1C17CF4
	075 Move X0, 0xB16000
	076 Move X0, [X0+184]
	077 Call 0x1C17CF4
	078 Move X0, 0xB16000
	079 Move X0, [X0+192]
	080 Call 0x1C17CF4
	081 Move X0, 0xB16000
	082 Move X0, [X0+200]
	083 Call 0x1C17CF4
	084 Move X0, 0xB16000
	085 Move X0, [X0+208]
	086 Call 0x1C17CF4
	087 Move X0, 0xB16000
	088 Move X0, [X0+216]
	089 Call 0x1C17CF4
	090 Move X0, 0xB16000
	091 Move X0, [X0+224]
	092 Call 0x1C17CF4
	093 Move X0, 0xB16000
	094 Move X0, [X0+232]
	095 Call 0x1C17CF4
	096 Move X0, 0xB16000
	097 Move X0, [X0+240]
	098 Call 0x1C17CF4
	099 Move X0, 0xB16000
	100 Move X0, [X0+248]
	101 Call 0x1C17CF4
	102 Move X0, 0xB16000
	103 Move X0, [X0+256]
	104 Call 0x1C17CF4
	105 Move X0, 0xB16000
	106 Move X0, [X0+264]
	107 Call 0x1C17CF4
	108 Move X0, 0xB16000
	109 Move X0, [X0+272]
	110 Call 0x1C17CF4
	111 Move X0, 0xB16000
	112 Move X0, [X0+280]
	113 Call 0x1C17CF4
	114 Move X0, 0xB16000
	115 Move X0, [X0+288]
	116 Call 0x1C17CF4
	117 Move X0, 0xB16000
	118 Move X0, [X0+296]
	119 Call 0x1C17CF4
	120 Move X0, 0xB16000
	121 Move X0, [X0+304]
	122 Call 0x1C17CF4
	123 Move X0, 0xB16000
	124 Move X0, [X0+312]
	125 Call 0x1C17CF4
	126 Move X0, 0xB16000
	127 Move X0, [X0+320]
	128 Call 0x1C17CF4
	129 Move X0, 0xB16000
	130 Move X0, [X0+328]
	131 Call 0x1C17CF4
	132 Move X0, 0xB16000
	133 Move X0, [X0+336]
	134 Call 0x1C17CF4
	135 Move X0, 0xB16000
	136 Move X0, [X0+344]
	137 Call 0x1C17CF4
	138 Move X0, 0xB16000
	139 Move X0, [X0+352]
	140 Call 0x1C17CF4
	141 Move X0, 0xB16000
	142 Move X0, [X0+360]
	143 Call 0x1C17CF4
	144 Move W8, 1
	145 Move [X20+1093], W8
	146 Move X0, [X19]
	147 Move W1, 4
	148 Call 0x1C17D6C
	149 Compare X0, 0
	150 JumpIfEqual {412}
	151 Move W8, [X0+24]
	152 Compare W8, 0
	153 JumpIfEqual {411}
	154 Move X9, 0xB16000
	155 Move X9, [X9+352]
	156 NotImplemented "Instruction CMP not yet implemented."
	157 Move X9, [X9]
	158 Move [X0+32], X9
	159 Move X9, 0xB16000
	160 Move X9, [X9+192]
	161 NotImplemented "Instruction CMP not yet implemented."
	162 Move X9, [X9]
	163 Move [X0+40], X9
	164 Move X9, 0xB16000
	165 Move X9, [X9+104]
	166 NotImplemented "Instruction CMP not yet implemented."
	167 Move X9, [X9]
	168 Move [X0+48], X9
	169 Move X8, 0xB16000
	170 Move X8, [X8+320]
	171 Move X20, 0xB25000
	172 Move W1, 16
	173 Move X8, [X8]
	174 Move X20, [X20+3848]
	175 Move [X0+56], X8
	176 Move X8, [X20]
	177 Move X8, [X8+184]
	178 Move [X8], X0
	179 Move X0, [X19]
	180 Call 0x1C17D6C
	181 Compare X0, 0
	182 JumpIfEqual {412}
	183 Move W8, [X0+24]
	184 Compare W8, 0
	185 JumpIfEqual {411}
	186 Move X9, 0xB16000
	187 Move X9, [X9+296]
	188 NotImplemented "Instruction CMP not yet implemented."
	189 Move X9, [X9]
	190 Move [X0+32], X9
	191 Move X9, 0xB16000
	192 Move X9, [X9+88]
	193 NotImplemented "Instruction CMP not yet implemented."
	194 Move X9, [X9]
	195 Move [X0+40], X9
	196 Move X9, 0xB16000
	197 Move X9, [X9+328]
	198 NotImplemented "Instruction CMP not yet implemented."
	199 Move X9, [X9]
	200 Move [X0+48], X9
	201 Move X9, 0xB16000
	202 Move X9, [X9+184]
	203 NotImplemented "Instruction CMP not yet implemented."
	204 Move X9, [X9]
	205 Move [X0+56], X9
	206 Move X9, 0xB16000
	207 Move X9, [X9+96]
	208 NotImplemented "Instruction CMP not yet implemented."
	209 Move X9, [X9]
	210 Move [X0+64], X9
	211 Move X9, 0xB16000
	212 Move X9, [X9+256]
	213 NotImplemented "Instruction CMP not yet implemented."
	214 Move X9, [X9]
	215 Move [X0+72], X9
	216 Move X9, 0xB16000
	217 Move X9, [X9+144]
	218 NotImplemented "Instruction CMP not yet implemented."
	219 Move X9, [X9]
	220 Move [X0+80], X9
	221 Move X9, 0xB16000
	222 Move X9, [X9+168]
	223 NotImplemented "Instruction CMP not yet implemented."
	224 Move X9, [X9]
	225 Move [X0+88], X9
	226 Move X9, 0xB16000
	227 Move X9, [X9+288]
	228 NotImplemented "Instruction CMP not yet implemented."
	229 Move X9, [X9]
	230 Move [X0+96], X9
	231 Move X9, 0xB16000
	232 Move X9, [X9+304]
	233 NotImplemented "Instruction CMP not yet implemented."
	234 Move X9, [X9]
	235 Move [X0+104], X9
	236 Move X9, 0xB16000
	237 Move X9, [X9+336]
	238 NotImplemented "Instruction CMP not yet implemented."
	239 Move X9, [X9]
	240 Move [X0+112], X9
	241 Move X9, 0xB16000
	242 Move X9, [X9+128]
	243 NotImplemented "Instruction CMP not yet implemented."
	244 Move X9, [X9]
	245 Move [X0+120], X9
	246 Move X9, 0xB16000
	247 Move X9, [X9+200]
	248 NotImplemented "Instruction CMP not yet implemented."
	249 Move X9, [X9]
	250 Move [X0+128], X9
	251 Move X9, 0xB16000
	252 Move X9, [X9+64]
	253 NotImplemented "Instruction CMP not yet implemented."
	254 Move X9, [X9]
	255 Move [X0+136], X9
	256 Move X9, 0xB16000
	257 Move X9, [X9+176]
	258 NotImplemented "Instruction CMP not yet implemented."
	259 Move X9, [X9]
	260 Move [X0+144], X9
	261 Move X8, 0xB16000
	262 Move X8, [X8+312]
	263 Move W1, 4
	264 Move X8, [X8]
	265 Move [X0+152], X8
	266 Move X8, [X20]
	267 Move X8, [X8+184]
	268 Move [X8+8], X0
	269 Move X0, [X19]
	270 Call 0x1C17D6C
	271 Compare X0, 0
	272 JumpIfEqual {412}
	273 Move W8, [X0+24]
	274 Compare W8, 0
	275 JumpIfEqual {411}
	276 Move X9, 0xB16000
	277 Move X9, [X9+280]
	278 NotImplemented "Instruction CMP not yet implemented."
	279 Move X9, [X9]
	280 Move [X0+32], X9
	281 Move X9, 0xB16000
	282 Move X9, [X9+112]
	283 NotImplemented "Instruction CMP not yet implemented."
	284 Move X9, [X9]
	285 Move [X0+40], X9
	286 Move X9, 0xB16000
	287 Move X9, [X9+80]
	288 NotImplemented "Instruction CMP not yet implemented."
	289 Move X9, [X9]
	290 Move [X0+48], X9
	291 Move X8, 0xB16000
	292 Move X8, [X8+208]
	293 Move W1, 12
	294 Move X8, [X8]
	295 Move [X0+56], X8
	296 Move X8, [X20]
	297 Move X8, [X8+184]
	298 Move [X8+16], X0
	299 Move X0, [X19]
	300 Call 0x1C17D6C
	301 Compare X0, 0
	302 JumpIfEqual {412}
	303 Move W8, [X0+24]
	304 Compare W8, 0
	305 JumpIfEqual {411}
	306 Move X9, 0xB16000
	307 Move X9, [X9+272]
	308 NotImplemented "Instruction CMP not yet implemented."
	309 Move X9, [X9]
	310 Move [X0+32], X9
	311 Move X9, 0xB16000
	312 Move X9, [X9+344]
	313 NotImplemented "Instruction CMP not yet implemented."
	314 Move X9, [X9]
	315 Move [X0+40], X9
	316 Move X9, 0xB16000
	317 Move X9, [X9+120]
	318 NotImplemented "Instruction CMP not yet implemented."
	319 Move X9, [X9]
	320 Move [X0+48], X9
	321 Move X9, 0xB16000
	322 Move X9, [X9+40]
	323 NotImplemented "Instruction CMP not yet implemented."
	324 Move X9, [X9]
	325 Move [X0+56], X9
	326 Move X9, 0xB16000
	327 Move X9, [X9+48]
	328 NotImplemented "Instruction CMP not yet implemented."
	329 Move X9, [X9]
	330 Move [X0+64], X9
	331 Move X9, 0xB16000
	332 Move X9, [X9+264]
	333 NotImplemented "Instruction CMP not yet implemented."
	334 Move X9, [X9]
	335 Move [X0+72], X9
	336 Move X9, 0xB16000
	337 Move X9, [X9+216]
	338 NotImplemented "Instruction CMP not yet implemented."
	339 Move X9, [X9]
	340 Move [X0+80], X9
	341 Move X9, 0xB16000
	342 Move X9, [X9+248]
	343 NotImplemented "Instruction CMP not yet implemented."
	344 Move X9, [X9]
	345 Move [X0+88], X9
	346 Move X9, 0xB16000
	347 Move X9, [X9+232]
	348 NotImplemented "Instruction CMP not yet implemented."
	349 Move X9, [X9]
	350 Move [X0+96], X9
	351 Move X9, 0xB16000
	352 Move X9, [X9+56]
	353 NotImplemented "Instruction CMP not yet implemented."
	354 Move X9, [X9]
	355 Move [X0+104], X9
	356 Move X9, 0xB16000
	357 Move X9, [X9+160]
	358 NotImplemented "Instruction CMP not yet implemented."
	359 Move X9, [X9]
	360 Move [X0+112], X9
	361 Move X8, 0xB16000
	362 Move X8, [X8+136]
	363 Move W1, 5
	364 Move X8, [X8]
	365 Move [X0+120], X8
	366 Move X8, [X20]
	367 Move X8, [X8+184]
	368 Move [X8+24], X0
	369 Move X0, [X19]
	370 Call 0x1C17D6C
	371 Compare X0, 0
	372 JumpIfEqual {412}
	373 Move W8, [X0+24]
	374 Compare W8, 0
	375 JumpIfEqual {411}
	376 Move X9, 0xB16000
	377 Move X9, [X9+360]
	378 NotImplemented "Instruction CMP not yet implemented."
	379 Move X9, [X9]
	380 Move [X0+32], X9
	381 Move X9, 0xB16000
	382 Move X9, [X9+72]
	383 NotImplemented "Instruction CMP not yet implemented."
	384 Move X9, [X9]
	385 Move [X0+40], X9
	386 Move X9, 0xB16000
	387 Move X9, [X9+224]
	388 NotImplemented "Instruction CMP not yet implemented."
	389 Move X9, [X9]
	390 Move [X0+48], X9
	391 Move X9, 0xB16000
	392 Move X9, [X9+152]
	393 NotImplemented "Instruction CMP not yet implemented."
	394 Move X9, [X9]
	395 Move [X0+56], X9
	396 Move X8, 0xB16000
	397 Move X8, [X8+240]
	398 Move X9, 0xADF000
	399 Move X8, [X8]
	400 Move [X0+64], X8
	401 Move X8, [X20]
	402 Move X8, [X8+184]
	403 Move X9, [X9+2568]
	404 Move X20, [X31+16]
	405 Move X19, [X31+24]
	406 Move X9, [X9]
	407 Move [X8+32], X0
	408 Move [X8+40], X9
	409 Move X30, [X31+32]
	410 Return 
	411 Call 0x1C17F28
	412 Call 0x1C17F20

