Type: System.Text.ValueStringBuilder

Method: System.Void .ctor(System.Span`1<System.Char> initialBuffer)

Disassembly:
	0x03612150 STP X20, X19, [X31 + 0x50]
	0x03612154 ADRP X25, 0xDCE000
	0x03612158 LDRB W8, [X25 + 0x43B]
	0x0361215C MOV W24, W5

ISIL:
	001 Move [X0], X31
	002 Move [X0+8], X1
	003 Move [X0+16], X2
	004 Move [X0+24], W31
	005 Return 

Method: System.Int32 get_Length()

Disassembly:
	0x0361675C BL 0x19903C0
	0x03616760 ADRP X20, 0xB24000

ISIL:
	001 Move W0, [X0+24]
	002 Return X0

Method: System.String ToString()

Disassembly:
	0x0361240C MOV W3, W22
	0x03612410 MOV X4, X19
	0x03612414 LDP X20, X19, [X31 + 0x50]
	0x03612418 LDP X22, X21, [X31 + 0x40]
	0x0361241C LDP X24, X23, [X31 + 0x30]
	0x03612420 LDP X26, X25, [X31 + 0x20]
	0x03612424 LDP X30, X27, [X31 + 0x10]
	0x03612428 ADD X31, X31, 0x60
	0x0361242C B 0x3613FC4
	0x03612430 TBZ X22, 0x1F, 0x361243C
	0x03612434 CBZ X19, 0x3612644
	0x03612438 LDR W22, [X19 + 0xC8]
	0x0361243C LDR W8, [X20 + 0x4]
	0x03612440 ADD W23, W8, 0x2
	0x03612444 STR W23, [X20 + 0x4]
	0x03612448 ADRP X8, 0xB28000
	0x0361244C LDR X8, [X8 + 0xF08]
	0x03612450 LDR X0, [X8]
	0x03612454 LDR W8, [X0 + 0xE0]
	0x03612458 CBNZ W8, 0x3612460
	0x0361245C BL 0x1C16DFC
	0x03612460 ADD W1, W23, W22
	0x03612464 MOV X0, X20
	0x03612468 BL 0x3613788
	0x0361246C MOV X0, X21
	0x03612470 MOV X1, X20
	0x03612474 MOV W3, W22
	0x03612478 MOV X4, X19
	0x0361247C LDP X20, X19, [X31 + 0x50]
	0x03612480 LDP X22, X21, [X31 + 0x40]
	0x03612484 LDP X24, X23, [X31 + 0x30]
	0x03612488 LDP X26, X25, [X31 + 0x20]
	0x0361248C LDP X30, X27, [X31 + 0x10]
	0x03612490 ADD X31, X31, 0x60
	0x03612494 B 0x36147D0
	0x03612498 MOV X0, X21
	0x0361249C MOV X1, X24
	0x036124A0 BL 0x3615B50
	0x036124A4 LDR X0, [X25]
	0x036124A8 LDR W8, [X0 + 0xE0]
	0x036124AC CBNZ W8, 0x36124B4
	0x036124B0 BL 0x1C16DFC
	0x036124B4 MOV X0, X21
	0x036124B8 MOV X1, X20
	0x036124BC MOV W3, W22
	0x036124C0 MOV X4, X19
	0x036124C4 MOV W5, W23
	0x036124C8 LDP X20, X19, [X31 + 0x50]
	0x036124CC LDP X22, X21, [X31 + 0x40]
	0x036124D0 LDP X24, X23, [X31 + 0x30]
	0x036124D4 LDP X26, X25, [X31 + 0x20]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0xDCF000
	007 Move X21, 0xB10000
	008 Move W8, [X20+1095]
	009 Move X21, [X21+2128]
	010 Move X19, X0
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {23}
	015 Move X0, 0xB10000
	016 Move X0, [X0+2128]
	017 Call 0x1C17CF4
	018 Move X0, 0xB10000
	019 Move X0, [X0+2136]
	020 Call 0x1C17CF4
	021 Move W8, 1
	022 Move [X20+1095], W8
	023 Move W20, [X19+24]
	024 Move W8, [X19+16]
	025 Move X21, [X21]
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move X0, X31
	028 Call ThrowHelper.ThrowArgumentOutOfRangeException
	029 Move X0, [X21+32]
	030 Move X22, 0xB10000
	031 Move X21, [X19+8]
	032 Move W8, [X0+309]
	033 Move X22, [X22+2136]
	034 Move TEMP, X8
	035 And TEMP, TEMP, 1
	036 Compare TEMP, 1
	037 JumpIfEqual {39}
	038 Call 0x1C5D684
	039 Move X2, [X22]
	040 Move X0, X21
	041 Move X1, X20
	042 Call Span`1<Char>.op_Implicit, X0
	043 Move X2, X0
	044 Move X3, X1
	045 Move X0, X31
	046 Move X1, X2
	047 Move X2, X3
	048 Move X3, X31
	049 Call String.CreateString, X0, X1
	050 Move X20, X0
	051 Move X0, X19
	052 Move X1, X31
	053 Call 0x3616E30
	054 Move X0, X20
	055 Move X20, [X31+32]
	056 Move X19, [X31+40]
	057 Move X22, [X31+16]
	058 Move X21, [X31+24]
	059 Move X30, [X31+48]
	060 Return X0

Method: System.Boolean TryCopyTo(System.Span`1<System.Char> destination, out System.Int32 charsWritten)

Disassembly:
	0x03612324 LDRB W8, [X20 + 0x8]
	0x03612328 CBZ W8, 0x36124F4
	0x0361232C CBZ X19, 0x3612644
	0x03612330 ADRP X25, 0xDCE000
	0x03612334 LDRB W8, [X25 + 0x455]
	0x03612338 LDR X23, [X19 + 0x30]
	0x0361233C CBNZ W8, 0x3612354
	0x03612340 ADRP X0, 0xB10000
	0x03612344 LDR X0, [X0 + 0x588]
	0x03612348 BL 0x1C16CF4
	0x0361234C MOVZ W8, 0x1
	0x03612350 STRB W8, [X25 + 0x455]
	0x03612354 CBZ X23, 0x3612644
	0x03612358 LDR W8, [X23 + 0x10]
	0x0361235C CMP W8, 0x1
	0x03612360 B.NE 0x36124E4
	0x03612364 LDRSW X25, [X21 + 0x18]
	0x03612368 LDR W8, [X21 + 0x10]
	0x0361236C CMP W25, W8
	0x03612370 B.GE 0x36124E4
	0x03612374 CMP W25, W8
	0x03612378 B.CS 0x3612690
	0x0361237C LDR X26, [X21 + 0x8]
	0x03612380 MOV X0, X23
	0x03612384 MOV W1, W31
	0x03612388 MOV X2, X31
	0x0361238C BL 0x3222A1C
	0x03612390 ADD W8, W25, 0x1
	0x03612394 STRH W0, [X26, X25, LSL #1]
	0x03612398 STR W8, [X21 + 0x18]
	0x0361239C B 0x36124F8
	0x036123A0 CMP W22, 0x0
	0x036123A4 B.GT 0x3612548
	0x036123A8 ADDS W31, W22, 0x1
	0x036123AC B.NE 0x3612544
	0x036123B0 TBZ X24, 0x0, 0x3612544
	0x036123B4 LDR X8, [X20 + 0x10]
	0x036123B8 LDRH W8, [X8]
	0x036123BC CBNZ W8, 0x36123C4
	0x036123C0 STRB W31, [X20 + 0x8]
	0x036123C4 MOVZ W24, 0x1
	0x036123C8 MOVZ W22, 0x1D
	0x036123CC B 0x3612570
	0x036123D0 TBZ X22, 0x1F, 0x36123DC
	0x036123D4 CBZ X19, 0x3612644
	0x036123D8 LDR W22, [X19 + 0xAC]
	0x036123DC ADRP X8, 0xB28000
	0x036123E0 LDR X8, [X8 + 0xF08]
	0x036123E4 LDR W23, [X20 + 0x4]
	0x036123E8 LDR X0, [X8]
	0x036123EC LDR W8, [X0 + 0xE0]
	0x036123F0 CBNZ W8, 0x36123F8
	0x036123F4 BL 0x1C16DFC
	0x036123F8 ADD W1, W23, W22
	0x036123FC MOV X0, X20
	0x03612400 BL 0x3613788
	0x03612404 MOV X0, X21
	0x03612408 MOV X1, X20

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+24], X25
	004 Move [X31+32], X24
	005 Move [X31+40], X23
	006 Move [X31+48], X22
	007 Move [X31+56], X21
	008 Move [X31+64], X20
	009 Move [X31+72], X19
	010 Move X23, 0xDCF000
	011 Move X24, 0xB10000
	012 Move W8, [X23+1096]
	013 Move X24, [X24+2128]
	014 Move X20, X3
	015 Move X21, X2
	016 Move X22, X1
	017 Move X19, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {30}
	022 Move X0, 0xB10000
	023 Move X0, [X0+2128]
	024 Call 0x1C17CF4
	025 Move X0, 0xB11000
	026 Move X0, [X0+2320]
	027 Call 0x1C17CF4
	028 Move W8, 1
	029 Move [X23+1096], W8
	030 Move W23, [X19+24]
	031 Move W8, [X19+16]
	032 Move X24, [X24]
	033 NotImplemented "Instruction CMP not yet implemented."
	034 Move X0, X31
	035 Call ThrowHelper.ThrowArgumentOutOfRangeException
	036 Move X0, [X24+32]
	037 Move X25, 0xB11000
	038 Move X24, [X19+8]
	039 Move W8, [X0+309]
	040 Move X25, [X25+2320]
	041 Move TEMP, X8
	042 And TEMP, TEMP, 1
	043 Compare TEMP, 1
	044 JumpIfEqual {46}
	045 Call 0x1C5D684
	046 Move X3, [X25]
	047 Add X0, X31, 0
	048 Move X1, X22
	049 Move X2, X21
	050 Move [X31], X24
	051 Move [X31+8], X23
	052 Call Span`1<Char>.TryCopyTo, X0, X1
	053 Move W21, W0
	054 Move TEMP, X0
	055 And TEMP, TEMP, 1
	056 Compare TEMP, 1
	057 JumpIfNotEqual {59}
	058 Move W8, [X19+24]
	059 Move W8, W31
	060 Move X0, X19
	061 Move X1, X31
	062 Move [X20], W8
	063 Call 0x3616E30
	064 And W0, W21, 1
	065 Move X20, [X31+64]
	066 Move X19, [X31+72]
	067 Move X22, [X31+48]
	068 Move X21, [X31+56]
	069 Move X24, [X31+32]
	070 Move X23, [X31+40]
	071 Move X30, [X31+16]
	072 Move X25, [X31+24]
	073 Add X31, X31, 80
	074 Return X0

Method: System.Void Insert(System.Int32 index, System.Char value, System.Int32 count)

Disassembly:
	0x03612160 MOV X19, X4
	0x03612164 MOV W22, W3
	0x03612168 MOV W23, W2
	0x0361216C MOV X20, X1
	0x03612170 MOV X21, X0
	0x03612174 TBNZ X8, 0x0, 0x361218C
	0x03612178 ADRP X0, 0xB28000
	0x0361217C LDR X0, [X0 + 0xF08]
	0x03612180 BL 0x1C16CF4
	0x03612184 MOVZ W8, 0x1
	0x03612188 STRB W8, [X25 + 0x43B]
	0x0361218C AND W8, W23, 0xFFFF
	0x03612190 CMP W8, 0x50
	0x03612194 B.HI 0x36121BC
	0x03612198 SUB W8, W8, 0x43
	0x0361219C CMP W8, 0xD
	0x036121A0 B.HI 0x3612648
	0x036121A4 ADRP X9, 0xFFFFFFFFFD585000
	0x036121A8 ADD X9, X9, 0x2E4
	0x036121AC ADR X10, 0x34
	0x036121B0 LDRH W11, [X9, X8, LSL #1]
	0x036121B4 ADD X10, X10, X11, 0x2, LSL
	0x036121B8 BR X10
	0x036121BC SUB W8, W8, 0x63
	0x036121C0 CMP W8, 0xD
	0x036121C4 B.HI 0x3612648
	0x036121C8 ADRP X9, 0xFFFFFFFFFD585000
	0x036121CC ADD X9, X9, 0x2C8
	0x036121D0 ADR X10, 0x10
	0x036121D4 LDRH W11, [X9, X8, LSL #1]
	0x036121D8 ADD X10, X10, X11, 0x2, LSL
	0x036121DC BR X10
	0x036121E0 TBZ X22, 0x1F, 0x36121EC
	0x036121E4 CBZ X19, 0x3612644
	0x036121E8 LDR W22, [X19 + 0xB0]
	0x036121EC ADRP X8, 0xB28000
	0x036121F0 LDR X8, [X8 + 0xF08]
	0x036121F4 LDR W23, [X20 + 0x4]
	0x036121F8 LDR X0, [X8]
	0x036121FC LDR W8, [X0 + 0xE0]
	0x03612200 CBNZ W8, 0x3612208
	0x03612204 BL 0x1C16DFC
	0x03612208 ADD W1, W23, W22
	0x0361220C MOV X0, X20
	0x03612210 BL 0x3613788
	0x03612214 MOV X0, X21
	0x03612218 MOV X1, X20
	0x0361221C MOV W2, W22
	0x03612220 MOV W3, W22
	0x03612224 MOV X4, X19
	0x03612228 LDP X20, X19, [X31 + 0x50]
	0x0361222C LDP X22, X21, [X31 + 0x40]
	0x03612230 LDP X24, X23, [X31 + 0x30]
	0x03612234 LDP X26, X25, [X31 + 0x20]
	0x03612238 LDP X30, X27, [X31 + 0x10]
	0x0361223C ADD X31, X31, 0x60
	0x03612240 B 0x3613858
	0x03612244 ADRP X25, 0xB28000
	0x03612248 LDR X25, [X25 + 0xF08]
	0x0361224C CMP W22, 0x0
	0x03612250 MOVZ W9, 0x7
	0x03612254 CSINC W22, W9, W22, LT
	0x03612258 LDR X0, [X25]
	0x0361225C LDR W8, [X0 + 0xE0]
	0x03612260 CBNZ W8, 0x3612268
	0x03612264 BL 0x1C16DFC
	0x03612268 MOV X0, X20
	0x0361226C MOV W1, W22
	0x03612270 BL 0x3613788
	0x03612274 LDRB W8, [X20 + 0x8]
	0x03612278 CBZ W8, 0x36124A4
	0x0361227C CBZ X19, 0x3612644
	0x03612280 ADRP X26, 0xDCE000
	0x03612284 LDRB W8, [X26 + 0x455]
	0x03612288 LDR X24, [X19 + 0x30]
	0x0361228C CBNZ W8, 0x36122A4
	0x03612290 ADRP X0, 0xB10000
	0x03612294 LDR X0, [X0 + 0x588]
	0x03612298 BL 0x1C16CF4
	0x0361229C MOVZ W8, 0x1
	0x036122A0 STRB W8, [X26 + 0x455]
	0x036122A4 CBZ X24, 0x3612644
	0x036122A8 LDR W8, [X24 + 0x10]
	0x036122AC CMP W8, 0x1
	0x036122B0 B.NE 0x3612498
	0x036122B4 LDRSW X26, [X21 + 0x18]
	0x036122B8 LDR W8, [X21 + 0x10]
	0x036122BC CMP W26, W8
	0x036122C0 B.GE 0x3612498
	0x036122C4 CMP W26, W8
	0x036122C8 B.CS 0x3612690
	0x036122CC LDR X27, [X21 + 0x8]
	0x036122D0 MOV X0, X24
	0x036122D4 MOV W1, W31
	0x036122D8 MOV X2, X31
	0x036122DC BL 0x3222A1C
	0x036122E0 ADD W8, W26, 0x1
	0x036122E4 STRH W0, [X27, X26, LSL #1]
	0x036122E8 STR W8, [X21 + 0x18]
	0x036122EC B 0x36124A4
	0x036122F0 TBZ X22, 0x1F, 0x36122FC
	0x036122F4 CBZ X19, 0x3612644
	0x036122F8 LDR W22, [X19 + 0xAC]
	0x036122FC ADRP X24, 0xB28000
	0x03612300 LDR X24, [X24 + 0xF08]
	0x03612304 LDR W23, [X20 + 0x4]
	0x03612308 LDR X0, [X24]
	0x0361230C LDR W8, [X0 + 0xE0]
	0x03612310 CBNZ W8, 0x3612318
	0x03612314 BL 0x1C16DFC
	0x03612318 ADD W1, W23, W22
	0x0361231C MOV X0, X20
	0x03612320 BL 0x3613788

ISIL:
	001 Subtract X31, X31, 96
	002 Move [X31+16], X30
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X23, 0xDCF000
	013 Move W8, [X23+1097]
	014 Move W19, W3
	015 Move W21, W2
	016 Move W22, W1
	017 Move X20, X0
	018 Move TEMP, X8
	019 And TEMP, TEMP, 1
	020 Compare TEMP, 1
	021 JumpIfEqual {39}
	022 Move X0, 0xB11000
	023 Move X0, [X0+2328]
	024 Call 0x1C17CF4
	025 Move X0, 0xB29000
	026 Move X0, [X0+3816]
	027 Call 0x1C17CF4
	028 Move X0, 0xB11000
	029 Move X0, [X0+424]
	030 Call 0x1C17CF4
	031 Move X0, 0xB10000
	032 Move X0, [X0+2128]
	033 Call 0x1C17CF4
	034 Move X0, 0xB11000
	035 Move X0, [X0+1416]
	036 Call 0x1C17CF4
	037 Move W8, 1
	038 Move [X23+1097], W8
	039 Move W9, [X20+16]
	040 Move W8, [X20+24]
	041 Move X23, 0xB10000
	042 Move X23, [X23+2128]
	043 Subtract W10, W9, W19
	044 NotImplemented "Instruction CMP not yet implemented."
	045 Move X0, X20
	046 Move W1, W19
	047 Call ValueStringBuilder.Grow, X0, X1
	048 Move W8, [X20+24]
	049 Move W9, [X20+16]
	050 Move X25, [X23]
	051 Subtract W9, W9, W22
	052 Subtract W24, W8, W22
	053 NotImplemented "Instruction CMP not yet implemented."
	054 Move X0, X31
	055 Call ThrowHelper.ThrowArgumentOutOfRangeException
	056 Move X0, [X25+32]
	057 Move X26, 0xB11000
	058 Move X25, [X20+8]
	059 Move W8, [X0+309]
	060 Move X26, [X26+424]
	061 Move TEMP, X8
	062 And TEMP, TEMP, 1
	063 Compare TEMP, 1
	064 JumpIfEqual {66}
	065 Call 0x1C5D684
	066 Add X8, X25, W22
	067 Move W9, W24
	068 Move [X31], X8
	069 Move [X31+8], X9
	070 Move W25, [X20+16]
	071 Move X26, [X26]
	072 Add W24, W19, W22
	073 NotImplemented "Instruction CMP not yet implemented."
	074 Move X0, X31
	075 Call ThrowHelper.ThrowArgumentOutOfRangeException
	076 Move W25, [X20+16]
	077 Move X0, [X26+32]
	078 Move X27, 0xB11000
	079 Move X26, [X20+8]
	080 Move W8, [X0+309]
	081 Move X27, [X27+2328]
	082 Move TEMP, X8
	083 And TEMP, TEMP, 1
	084 Compare TEMP, 1
	085 JumpIfEqual {87}
	086 Call 0x1C5D684
	087 Move X3, [X27]
	088 Subtract W2, W25, W24
	089 Add X1, X26, W24
	090 Add X0, X31, 0
	091 Call Span`1<Char>.CopyTo, X0, X1
	092 Move W8, [X20+16]
	093 Move X23, [X23]
	094 Subtract W8, W8, W22
	095 NotImplemented "Instruction CMP not yet implemented."
	096 Move X0, X31
	097 Call ThrowHelper.ThrowArgumentOutOfRangeException
	098 Move X0, [X23+32]
	099 Move X23, 0xB29000
	100 Move X24, [X20+8]
	101 Move X22, W22
	102 Move W8, [X0+309]
	103 Move X23, [X23+3816]
	104 Move TEMP, X8
	105 And TEMP, TEMP, 1
	106 Compare TEMP, 1
	107 JumpIfEqual {109}
	108 Call 0x1C5D684
	109 Move X2, [X23]
	110 Add X8, X24, X22
	111 Move W9, W19
	112 Add X0, X31, 0
	113 Move W1, W21
	114 Move [X31], X8
	115 Move [X31+8], X9
	116 Call Span`1<Char>.Fill, X0, X1
	117 Move W8, [X20+24]
	118 Move X22, [X31+64]
	119 Move X21, [X31+72]
	120 Move X24, [X31+48]
	121 Move X23, [X31+56]
	122 Move X26, [X31+32]
	123 Move X25, [X31+40]
	124 Add W8, W8, W19
	125 Move [X20+24], W8
	126 Move X20, [X31+80]
	127 Move X19, [X31+88]
	128 Move X30, [X31+16]
	129 Move X27, [X31+24]
	130 Add X31, X31, 96
	131 Return 

Method: System.Void Append(System.Char c)

Disassembly:
	0x036169A8 ADRP X23, 0xDCA000
	0x036169AC STR X1, [X31 + 0x8]
	0x036169B0 ADRP X22, 0xB24000
	0x036169B4 LDRB W8, [X23 + 0x464]
	0x036169B8 LDR X22, [X22 + 0xF20]
	0x036169BC MOV W20, W2
	0x036169C0 MOV X21, X1
	0x036169C4 MOV X19, X0
	0x036169C8 TBNZ X8, 0x0, 0x3616A04
	0x036169CC ADRP X0, 0xB24000
	0x036169D0 LDR X0, [X0 + 0xF20]
	0x036169D4 BL 0x1C16CF4
	0x036169D8 ADRP X0, 0xADE000
	0x036169DC LDR X0, [X0 + 0x9F0]
	0x036169E0 BL 0x1C16CF4
	0x036169E4 ADRP X0, 0xADF000
	0x036169E8 LDR X0, [X0 + 0x570]
	0x036169EC BL 0x1C16CF4
	0x036169F0 ADRP X0, 0xB11000
	0x036169F4 LDR X0, [X0 + 0xA38]
	0x036169F8 BL 0x1C16CF4
	0x036169FC MOVZ W8, 0x1
	0x03616A00 STRB W8, [X23 + 0x464]
	0x03616A04 STR X31, [X31]
	0x03616A08 STR X21, [X19]
	0x03616A0C LDR X0, [X22]
	0x03616A10 ADRP X21, 0xADE000
	0x03616A14 LDR W8, [X0 + 0xE0]
	0x03616A18 LDR X21, [X21 + 0x9F0]
	0x03616A1C CBNZ W8, 0x3616A24
	0x03616A20 BL 0x1C16DFC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0xDCB000
	006 Move W8, [X21+1098]
	007 Move W19, W1
	008 Move X20, X0
	009 Move TEMP, X8
	010 And TEMP, TEMP, 1
	011 Compare TEMP, 1
	012 JumpIfEqual {18}
	013 Move X0, 0xB0D000
	014 Move X0, [X0+1416]
	015 Call 0x1C17CF4
	016 Move W8, 1
	017 Move [X21+1098], W8
	018 NotImplemented "Instruction LDRSW not yet implemented."
	019 Move W9, [X20+16]
	020 NotImplemented "Instruction CMP not yet implemented."
	021 NotImplemented "Instruction CMP not yet implemented."
	022 Move X9, [X20+8]
	023 Add W10, W8, 1
	024 NotImplemented "Instruction STRH not yet implemented."
	025 Move [X20+24], W10
	026 Move X20, [X31+16]
	027 Move X19, [X31+24]
	028 Move X30, [X31+32]
	029 Move X21, [X31+40]
	030 Return 
	031 Move X0, X20
	032 Move W1, W19
	033 Move X20, [X31+16]
	034 Move X19, [X31+24]
	035 Move X30, [X31+32]
	036 Move X21, [X31+40]
	037 Call 0x1C17F28

Method: System.Void Append(System.String s)

Disassembly:
	0x03616AA4 BL 0x330D608
	0x03616AA8 ADRP X21, 0xADF000
	0x03616AAC LDR X21, [X21 + 0x570]
	0x03616AB0 STR X0, [X31]
	0x03616AB4 LDR X8, [X21]
	0x03616AB8 LDR W9, [X8 + 0xE0]
	0x03616ABC CBZ W9, 0x3616AC8
	0x03616AC0 MOV X22, X0
	0x03616AC4 B 0x3616AE4
	0x03616AC8 MOV X0, X8
	0x03616ACC BL 0x1C16DFC
	0x03616AD0 LDR X0, [X21]
	0x03616AD4 LDR X22, [X31]
	0x03616AD8 LDR W8, [X0 + 0xE0]
	0x03616ADC CBNZ W8, 0x3616AE4
	0x03616AE0 BL 0x1C16DFC
	0x03616AE4 ADD X0, X31, 0x0
	0x03616AE8 MOV X1, X31
	0x03616AEC BL 0x33940AC
	0x03616AF0 MOV W21, W0
	0x03616AF4 TBNZ X22, 0x0, 0x3616B10
	0x03616AF8 ADD X0, X31, 0x0
	0x03616AFC MOV X1, X31
	0x03616B00 BL 0x339413C
	0x03616B04 MOV W8, W0
	0x03616B08 MOVZ W0, 0x30000
	0x03616B0C B 0x3616B28
	0x03616B10 ADD X0, X31, 0x0
	0x03616B14 MOV X1, X31
	0x03616B18 SUB W21, W31, W21
	0x03616B1C BL 0x339413C
	0x03616B20 SUB W8, W31, W0
	0x03616B24 MOVZ W0, 0x20000
	0x03616B28 MOVZ W9, 0xFF000000
	0x03616B2C ADD W9, W9, W20, 0x18, LSL
	0x03616B30 ORR W9, W0, W9, 0x0
	0x03616B34 ORR W8, W8, W9, 0x0
	0x03616B38 ORR W8, W8, W21, 0x8
	0x03616B3C STR W8, [X19 + 0x8]
	0x03616B40 LDP X20, X19, [X31 + 0x30]
	0x03616B44 LDP X22, X21, [X31 + 0x20]
	0x03616B48 LDP X30, X23, [X31 + 0x10]
	0x03616B4C ADD X31, X31, 0x40

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xDCB000
	007 Move W8, [X21+1099]
	008 Move X20, X1
	009 Move X19, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {19}
	014 Move X0, 0xB0D000
	015 Move X0, [X0+1416]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X21+1099], W8
	019 Compare X20, 0
	020 JumpIfEqual {48}
	021 Move W8, [X20+16]
	022 NotImplemented "Instruction CMP not yet implemented."
	023 NotImplemented "Instruction LDRSW not yet implemented."
	024 Move W8, [X19+16]
	025 NotImplemented "Instruction CMP not yet implemented."
	026 NotImplemented "Instruction CMP not yet implemented."
	027 Move X22, [X19+8]
	028 Move X0, X20
	029 Move W1, W31
	030 Move X2, X31
	031 Call String.get_Chars, X0, X1
	032 Add W8, W21, 1
	033 NotImplemented "Instruction STRH not yet implemented."
	034 Move [X19+24], W8
	035 Move X20, [X31+32]
	036 Move X19, [X31+40]
	037 Move X22, [X31+16]
	038 Move X21, [X31+24]
	039 Move X30, [X31+48]
	040 Return 
	041 Move X0, X19
	042 Move X1, X20
	043 Move X20, [X31+32]
	044 Move X19, [X31+40]
	045 Move X22, [X31+16]
	046 Move X21, [X31+24]
	047 Move X30, [X31+48]
	048 Call 0x1C17F20
	049 Call 0x1C17F28

Method: System.Void AppendSlow(System.String s)

Disassembly:
	0x03616B50 RET
	0x03616B54 BL 0x1C16F20
	0x03616B58 STP X30, X23, [X31 - 0x30]!
	0x03616B5C STP X22, X21, [X31 + 0x10]
	0x03616B60 STP X20, X19, [X31 + 0x20]
	0x03616B64 ADRP X20, 0xDCA000
	0x03616B68 ADRP X21, 0xADD000
	0x03616B6C ADRP X23, 0xB24000
	0x03616B70 LDRB W8, [X20 + 0x46C]
	0x03616B74 LDR X21, [X21 + 0x8F0]
	0x03616B78 LDR X23, [X23 + 0xF70]
	0x03616B7C MOV X19, X0
	0x03616B80 TBNZ X8, 0x0, 0x3616BB0
	0x03616B84 ADRP X0, 0xAE6000
	0x03616B88 LDR X0, [X0 + 0x8D8]
	0x03616B8C BL 0x1C16CF4
	0x03616B90 ADRP X0, 0xADD000
	0x03616B94 LDR X0, [X0 + 0x8F0]
	0x03616B98 BL 0x1C16CF4
	0x03616B9C ADRP X0, 0xB24000
	0x03616BA0 LDR X0, [X0 + 0xF70]
	0x03616BA4 BL 0x1C16CF4
	0x03616BA8 MOVZ W8, 0x1
	0x03616BAC STRB W8, [X20 + 0x46C]
	0x03616BB0 LDR X0, [X21]
	0x03616BB4 BL 0x1C16F10
	0x03616BB8 MOVZ W1, 0x40
	0x03616BBC MOV X2, X31
	0x03616BC0 MOV X20, X0
	0x03616BC4 BL 0x3231B28
	0x03616BC8 LDR X0, [X23]
	0x03616BCC LDR W8, [X0 + 0xE0]
	0x03616BD0 CBNZ W8, 0x3616BD8
	0x03616BD4 BL 0x1C16DFC
	0x03616BD8 LDR W8, [X19 + 0x8]
	0x03616BDC UBFM W8, W8, 0x18, 0x1F
	0x03616BE0 CMP W8, 0x7
	0x03616BE4 B.HI 0x3616F58
	0x03616BE8 ADRP X9, 0xFFFFFFFFFD581000
	0x03616BEC ADD X9, X9, 0x332
	0x03616BF0 ADR X10, 0x10
	0x03616BF4 LDRB W11, [X9, X8, LSL]
	0x03616BF8 ADD X10, X10, X11, 0x2, LSL
	0x03616BFC BR X10
	0x03616C00 LDR X0, [X23]
	0x03616C04 LDR W8, [X0 + 0xE0]
	0x03616C08 CBNZ W8, 0x3616C10
	0x03616C0C BL 0x1C16DFC
	0x03616C10 MOV X0, X19
	0x03616C14 MOV X1, X20
	0x03616C18 BL 0x36173CC
	0x03616C1C CBZ X20, 0x3616F94
	0x03616C20 MOVZ W1, 0x54
	0x03616C24 MOV X0, X20
	0x03616C28 MOV X2, X31
	0x03616C2C BL 0x3233D30
	0x03616C30 B 0x3616C44
	0x03616C34 LDR X0, [X23]
	0x03616C38 LDR W8, [X0 + 0xE0]
	0x03616C3C CBNZ W8, 0x3616C44
	0x03616C40 BL 0x1C16DFC
	0x03616C44 MOV X0, X19
	0x03616C48 MOV X1, X20
	0x03616C4C BL 0x3617510
	0x03616C50 B 0x3616F58
	0x03616C54 LDR X0, [X23]
	0x03616C58 LDR W8, [X0 + 0xE0]
	0x03616C5C CBNZ W8, 0x3616C64
	0x03616C60 BL 0x1C16DFC
	0x03616C64 MOV X0, X19
	0x03616C68 MOV X1, X20
	0x03616C6C BL 0x36173CC
	0x03616C70 B 0x3616F58
	0x03616C74 LDR X0, [X23]
	0x03616C78 LDR W8, [X0 + 0xE0]

ISIL:
	001 Subtract X31, X31, 80
	002 Move [X31+16], X30
	003 Move [X31+32], X24
	004 Move [X31+40], X23
	005 Move [X31+48], X22
	006 Move [X31+56], X21
	007 Move [X31+64], X20
	008 Move [X31+72], X19
	009 Move X21, 0xDCB000
	010 Move W8, [X21+1100]
	011 Move X19, X1
	012 Move X20, X0
	013 Move TEMP, X8
	014 And TEMP, TEMP, 1
	015 Compare TEMP, 1
	016 JumpIfEqual {28}
	017 Move X0, 0xB0D000
	018 Move X0, [X0+408]
	019 Call 0x1C17CF4
	020 Move X0, 0xB0D000
	021 Move X0, [X0+424]
	022 Call 0x1C17CF4
	023 Move X0, 0xB0D000
	024 Move X0, [X0+1416]
	025 Call 0x1C17CF4
	026 Move W8, 1
	027 Move [X21+1100], W8
	028 Compare X19, 0
	029 JumpIfEqual {88}
	030 Move W8, [X20+16]
	031 Move W1, [X19+16]
	032 NotImplemented "Instruction LDRSW not yet implemented."
	033 Subtract W8, W8, W1
	034 NotImplemented "Instruction CMP not yet implemented."
	035 Move X0, X20
	036 Call ValueStringBuilder.Grow, X0, X1
	037 Move X22, 0xDC7000
	038 Move X23, 0xB0D000
	039 Move W8, [X22+939]
	040 Move X23, [X23+424]
	041 Compare W8, 0
	042 JumpIfNotEqual {48}
	043 Move X0, 0xB05000
	044 Move X0, [X0+656]
	045 Call 0x1C17CF4
	046 Move W8, 1
	047 Move [X22+939], W8
	048 Move X0, X19
	049 Move X1, X31
	050 Call String.GetRawStringData, X0
	051 Move W8, [X19+16]
	052 Move X23, [X23]
	053 Move [X31], X0
	054 Move [X31+8], X8
	055 Move W22, [X20+16]
	056 NotImplemented "Instruction CMP not yet implemented."
	057 Move X0, X31
	058 Call ThrowHelper.ThrowArgumentOutOfRangeException
	059 Move W22, [X20+16]
	060 Move X0, [X23+32]
	061 Move X24, 0xB0D000
	062 Move X23, [X20+8]
	063 Move W8, [X0+309]
	064 Move X24, [X24+408]
	065 Move TEMP, X8
	066 And TEMP, TEMP, 1
	067 Compare TEMP, 1
	068 JumpIfEqual {70}
	069 Call 0x1C5D684
	070 Move X3, [X24]
	071 Subtract W2, W22, W21
	072 Add X1, X23, X21
	073 Add X0, X31, 0
	074 Call ReadOnlySpan`1<Char>.CopyTo, X0, X1
	075 Move W8, [X20+24]
	076 Move W9, [X19+16]
	077 Move X22, [X31+48]
	078 Move X21, [X31+56]
	079 Move X24, [X31+32]
	080 Move X23, [X31+40]
	081 Move X30, [X31+16]
	082 Add W8, W9, W8
	083 Move [X20+24], W8
	084 Move X20, [X31+64]
	085 Move X19, [X31+72]
	086 Add X31, X31, 80
	087 Return 
	088 Call 0x1C17F20

Method: System.Void Append(System.Char c, System.Int32 count)

Disassembly:
	0x03615B30 MOV X0, X19
	0x03615B34 MOV X1, X20
	0x03615B38 LDP X20, X19, [X31 + 0x20]
	0x03615B3C LDP X22, X21, [X31 + 0x10]
	0x03615B40 LDR X30, [X31], #0x30
	0x03615B44 B 0x3615B50
	0x03615B48 BL 0x1C16F20
	0x03615B4C BL 0x1C16F28
	0x03615B50 SUB X31, X31, 0x50
	0x03615B54 STR X30, [X31 + 0x10]
	0x03615B58 STP X24, X23, [X31 + 0x20]
	0x03615B5C STP X22, X21, [X31 + 0x30]
	0x03615B60 STP X20, X19, [X31 + 0x40]
	0x03615B64 ADRP X21, 0xDCB000
	0x03615B68 LDRB W8, [X21 + 0x44C]
	0x03615B6C MOV X19, X1
	0x03615B70 MOV X20, X0
	0x03615B74 TBNZ X8, 0x0, 0x3615BA4
	0x03615B78 ADRP X0, 0xB0D000
	0x03615B7C LDR X0, [X0 + 0x198]
	0x03615B80 BL 0x1C16CF4
	0x03615B84 ADRP X0, 0xB0D000
	0x03615B88 LDR X0, [X0 + 0x1A8]
	0x03615B8C BL 0x1C16CF4
	0x03615B90 ADRP X0, 0xB0D000
	0x03615B94 LDR X0, [X0 + 0x588]
	0x03615B98 BL 0x1C16CF4
	0x03615B9C MOVZ W8, 0x1
	0x03615BA0 STRB W8, [X21 + 0x44C]
	0x03615BA4 CBZ X19, 0x3615C78
	0x03615BA8 LDR W8, [X20 + 0x10]
	0x03615BAC LDR W1, [X19 + 0x10]
	0x03615BB0 LDRSW X21, [X20 + 0x18]
	0x03615BB4 SUB W8, W8, W1
	0x03615BB8 CMP W21, W8
	0x03615BBC B.LE 0x3615BC8
	0x03615BC0 MOV X0, X20
	0x03615BC4 BL 0x3615764
	0x03615BC8 ADRP X22, 0xDC7000
	0x03615BCC ADRP X23, 0xB0D000
	0x03615BD0 LDRB W8, [X22 + 0x3AB]
	0x03615BD4 LDR X23, [X23 + 0x1A8]
	0x03615BD8 CBNZ W8, 0x3615BF0
	0x03615BDC ADRP X0, 0xB05000
	0x03615BE0 LDR X0, [X0 + 0x290]
	0x03615BE4 BL 0x1C16CF4
	0x03615BE8 MOVZ W8, 0x1
	0x03615BEC STRB W8, [X22 + 0x3AB]
	0x03615BF0 MOV X0, X19
	0x03615BF4 MOV X1, X31
	0x03615BF8 BL 0x3225708
	0x03615BFC LDR W8, [X19 + 0x10]
	0x03615C00 LDR X23, [X23]
	0x03615C04 STP X0, X8, [X31]
	0x03615C08 LDR W22, [X20 + 0x10]
	0x03615C0C CMP W22, W21
	0x03615C10 B.CS 0x3615C20
	0x03615C14 MOV X0, X31
	0x03615C18 BL 0x339D6EC
	0x03615C1C LDR W22, [X20 + 0x10]
	0x03615C20 LDR X0, [X23 + 0x20]
	0x03615C24 ADRP X24, 0xB0D000
	0x03615C28 LDR X23, [X20 + 0x8]
	0x03615C2C LDRB W8, [X0 + 0x135]
	0x03615C30 LDR X24, [X24 + 0x198]
	0x03615C34 TBNZ X8, 0x0, 0x3615C3C
	0x03615C38 BL 0x1C5C684
	0x03615C3C LDR X3, [X24]
	0x03615C40 SUB W2, W22, W21
	0x03615C44 ADD X1, X23, X21, 0x1, LSL
	0x03615C48 ADD X0, X31, 0x0
	0x03615C4C BL 0x25BEC30
	0x03615C50 LDR W8, [X20 + 0x18]
	0x03615C54 LDR W9, [X19 + 0x10]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0xDCC000
	008 Move W8, [X22+1101]
	009 Move W19, W2
	010 Move W20, W1
	011 Move X21, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xB0D000
	017 Move X0, [X0+2128]
	018 Call 0x1C17CF4
	019 Move X0, 0xB0E000
	020 Move X0, [X0+1416]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+1101], W8
	024 Move W8, [X21+16]
	025 Move W22, [X21+24]
	026 Move X23, 0xB0D000
	027 Move X23, [X23+2128]
	028 Subtract W9, W8, W19
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move X0, X21
	031 Move W1, W19
	032 Call ValueStringBuilder.Grow, X0, X1
	033 Move W22, [X21+24]
	034 Move W8, [X21+16]
	035 Move X23, [X23]
	036 Subtract W8, W8, W22
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move X0, X31
	039 Call ThrowHelper.ThrowArgumentOutOfRangeException
	040 Move X0, [X23+32]
	041 Move X23, [X21+8]
	042 Move W8, [X0+309]
	043 Move TEMP, X8
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfEqual {48}
	047 Call 0x1C5D684
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Move X10, -45260800
	050 Move V0, [X10+121]
	051 Move X8, W22
	052 Move W9, W19
	053 Add X11, X9, 1
	054 Subtract X9, X9, 1
	055 Add X12, X23, X8
	056 Move W10, 2
	057 And X8, X11, 0
	058 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	059 Add X9, X12, 2
	060 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	061 NotImplemented "Instruction INVALID not yet implemented."
	062 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	063 Move W10, S3
	064 Move TEMP, X10
	065 And TEMP, TEMP, 1
	066 Compare TEMP, 1
	067 JumpIfNotEqual {69}
	068 NotImplemented "Instruction STURH not yet implemented."
	069 NotImplemented "Instruction UNIMPLEMENTED not yet implemented."
	070 Move TEMP, X10
	071 And TEMP, TEMP, 1
	072 Compare TEMP, 1
	073 Invalid "Jump target not found in method."
	074 NotImplemented "Instruction STRH not yet implemented."
	075 NotImplemented "Instruction INVALID not yet implemented."
	076 Subtract X8, X8, 2
	077 Add X9, X9, 4
	078 Move W8, [X21+24]
	079 Add W8, W8, W19
	080 Move [X21+24], W8
	081 Move X20, [X31+32]
	082 Move X19, [X31+40]
	083 Move X22, [X31+16]
	084 Move X21, [X31+24]
	085 Move X30, [X31+48]
	086 Move X23, [X31+56]
	087 Return 

Method: System.Void Append(System.Char* value, System.Int32 length)

Disassembly:
	0x03615A50 BL 0x3615764
	0x03615A54 LDRB W8, [X23 + 0x453]
	0x03615A58 CBNZ W8, 0x3615A68
	0x03615A5C MOV X0, X21
	0x03615A60 BL 0x1C16CF4
	0x03615A64 STRB W22, [X23 + 0x453]
	0x03615A68 LDRSW X8, [X20 + 0x18]
	0x03615A6C LDR W9, [X20 + 0x10]
	0x03615A70 CMP W8, W9
	0x03615A74 B.GE 0x3615A48
	0x03615A78 CMP W8, W9
	0x03615A7C B.CS 0x3615AA0
	0x03615A80 LDR X9, [X20 + 0x8]
	0x03615A84 ADD W10, W8, 0x1
	0x03615A88 LDP X22, X21, [X31 + 0x10]
	0x03615A8C STRH W19, [X9, X8, LSL #1]
	0x03615A90 STR W10, [X20 + 0x18]
	0x03615A94 LDP X20, X19, [X31 + 0x20]
	0x03615A98 LDP X30, X23, [X31], #0x30
	0x03615A9C RET
	0x03615AA0 BL 0x1C16F28
	0x03615AA4 STR X30, [X31 - 0x30]!
	0x03615AA8 STP X22, X21, [X31 + 0x10]
	0x03615AAC STP X20, X19, [X31 + 0x20]
	0x03615AB0 ADRP X21, 0xDCB000
	0x03615AB4 LDRB W8, [X21 + 0x44B]
	0x03615AB8 MOV X20, X1
	0x03615ABC MOV X19, X0
	0x03615AC0 TBNZ X8, 0x0, 0x3615AD8
	0x03615AC4 ADRP X0, 0xB0D000
	0x03615AC8 LDR X0, [X0 + 0x588]
	0x03615ACC BL 0x1C16CF4
	0x03615AD0 MOVZ W8, 0x1
	0x03615AD4 STRB W8, [X21 + 0x44B]
	0x03615AD8 CBZ X20, 0x3615B48
	0x03615ADC LDR W8, [X20 + 0x10]
	0x03615AE0 CMP W8, 0x1
	0x03615AE4 B.NE 0x3615B30
	0x03615AE8 LDRSW X21, [X19 + 0x18]
	0x03615AEC LDR W8, [X19 + 0x10]
	0x03615AF0 CMP W21, W8
	0x03615AF4 B.GE 0x3615B30
	0x03615AF8 CMP W21, W8
	0x03615AFC B.CS 0x3615B4C
	0x03615B00 LDR X22, [X19 + 0x8]
	0x03615B04 MOV X0, X20
	0x03615B08 MOV W1, W31
	0x03615B0C MOV X2, X31
	0x03615B10 BL 0x3222A1C
	0x03615B14 ADD W8, W21, 0x1
	0x03615B18 STRH W0, [X22, X21, LSL #1]
	0x03615B1C STR W8, [X19 + 0x18]
	0x03615B20 LDP X20, X19, [X31 + 0x20]
	0x03615B24 LDP X22, X21, [X31 + 0x10]
	0x03615B28 LDR X30, [X31], #0x30
	0x03615B2C RET

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0xDCC000
	008 Move W8, [X22+1102]
	009 Move W19, W2
	010 Move X20, X1
	011 Move X21, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {24}
	016 Move X0, 0xB0D000
	017 Move X0, [X0+2128]
	018 Call 0x1C17CF4
	019 Move X0, 0xB0E000
	020 Move X0, [X0+1416]
	021 Call 0x1C17CF4
	022 Move W8, 1
	023 Move [X22+1102], W8
	024 Move W8, [X21+16]
	025 Move W22, [X21+24]
	026 Move X23, 0xB0D000
	027 Move X23, [X23+2128]
	028 Subtract W9, W8, W19
	029 NotImplemented "Instruction CMP not yet implemented."
	030 Move X0, X21
	031 Move W1, W19
	032 Call ValueStringBuilder.Grow, X0, X1
	033 Move W22, [X21+24]
	034 Move W8, [X21+16]
	035 Move X23, [X23]
	036 Subtract W8, W8, W22
	037 NotImplemented "Instruction CMP not yet implemented."
	038 Move X0, X31
	039 Call ThrowHelper.ThrowArgumentOutOfRangeException
	040 Move X0, [X23+32]
	041 Move X23, [X21+8]
	042 Move W8, [X0+309]
	043 Move TEMP, X8
	044 And TEMP, TEMP, 1
	045 Compare TEMP, 1
	046 JumpIfEqual {48}
	047 Call 0x1C5D684
	048 NotImplemented "Instruction CMP not yet implemented."
	049 Add X8, X23, W22
	050 Move W9, W19
	051 NotImplemented "Instruction LDRH not yet implemented."
	052 Subtract X9, X9, 1
	053 NotImplemented "Instruction STRH not yet implemented."
	054 Move W8, [X21+24]
	055 Add W8, W8, W19
	056 Move [X21+24], W8
	057 Move X20, [X31+32]
	058 Move X19, [X31+40]
	059 Move X22, [X31+16]
	060 Move X21, [X31+24]
	061 Move X30, [X31+48]
	062 Move X23, [X31+56]
	063 Return 

Method: System.Span`1<System.Char> AppendSpan(System.Int32 length)

Disassembly:
	0x03616C7C CBNZ W8, 0x3616C88
	0x03616C80 BL 0x1C16DFC
	0x03616C84 LDR X0, [X23]
	0x03616C88 ADRP X9, 0xAE6000
	0x03616C8C LDR X8, [X0 + 0xB8]
	0x03616C90 LDR X9, [X9 + 0x8D8]
	0x03616C94 LDR W1, [X8 + 0x8]
	0x03616C98 LDR X0, [X9]
	0x03616C9C BL 0x1C16D6C
	0x03616CA0 MOV X21, X0
	0x03616CA4 MOV X0, X19
	0x03616CA8 BL 0x3617094
	0x03616CAC MOVZ W4, 0x4
	0x03616CB0 MOV X1, X21
	0x03616CB4 MOV W2, W31
	0x03616CB8 MOV W3, W0
	0x03616CBC BL 0x3617764
	0x03616CC0 CBZ X21, 0x3616F94
	0x03616CC4 LDR X8, [X23]
	0x03616CC8 LDR W10, [X21 + 0x18]
	0x03616CCC LDR X8, [X8 + 0xB8]
	0x03616CD0 LDRSW X9, [X8]
	0x03616CD4 CMP W9, W10
	0x03616CD8 B.CS 0x3616F98
	0x03616CDC ADD X9, X21, X9, 0x1, LSL
	0x03616CE0 MOVZ W10, 0x2D
	0x03616CE4 STRH W10, [X9 + 0x20]
	0x03616CE8 LDR W22, [X8 + 0x4]
	0x03616CEC MOV X0, X19
	0x03616CF0 BL 0x36170EC
	0x03616CF4 B 0x3616E78
	0x03616CF8 LDR X0, [X23]
	0x03616CFC LDR W8, [X0 + 0xE0]
	0x03616D00 CBNZ W8, 0x3616D0C
	0x03616D04 BL 0x1C16DFC
	0x03616D08 LDR X0, [X23]
	0x03616D0C ADRP X9, 0xAE6000
	0x03616D10 LDR X8, [X0 + 0xB8]
	0x03616D14 LDR X9, [X9 + 0x8D8]
	0x03616D18 LDR W1, [X8]
	0x03616D1C LDR X0, [X9]
	0x03616D20 BL 0x1C16D6C
	0x03616D24 MOV X21, X0
	0x03616D28 MOV X0, X19
	0x03616D2C BL 0x3617094
	0x03616D30 MOVZ W4, 0x4
	0x03616D34 MOV X1, X21

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X21, 0xDCB000
	007 Move W8, [X21+1103]
	008 Move W19, W1
	009 Move X20, X0
	010 Move TEMP, X8
	011 And TEMP, TEMP, 1
	012 Compare TEMP, 1
	013 JumpIfEqual {22}
	014 Move X0, 0xB0C000
	015 Move X0, [X0+2128]
	016 Call 0x1C17CF4
	017 Move X0, 0xB0D000
	018 Move X0, [X0+1416]
	019 Call 0x1C17CF4
	020 Move W8, 1
	021 Move [X21+1103], W8
	022 Move W8, [X20+16]
	023 NotImplemented "Instruction LDRSW not yet implemented."
	024 Move X22, 0xB0C000
	025 Move X22, [X22+2128]
	026 Subtract W9, W8, W19
	027 NotImplemented "Instruction CMP not yet implemented."
	028 Move X0, X20
	029 Move W1, W19
	030 Call ValueStringBuilder.Grow, X0, X1
	031 Move W8, [X20+16]
	032 Add W9, W21, W19
	033 Move [X20+24], W9
	034 Move X22, [X22]
	035 Subtract W8, W8, W21
	036 NotImplemented "Instruction CMP not yet implemented."
	037 Move X0, X31
	038 Call ThrowHelper.ThrowArgumentOutOfRangeException
	039 Move X0, [X22+32]
	040 Move X20, [X20+8]
	041 Move W8, [X0+309]
	042 Move TEMP, X8
	043 And TEMP, TEMP, 1
	044 Compare TEMP, 1
	045 JumpIfEqual {47}
	046 Call 0x1C5D684
	047 Add X0, X20, X21
	048 Move W1, W19
	049 Move X20, [X31+32]
	050 Move X19, [X31+40]
	051 Move X22, [X31+16]
	052 Move X21, [X31+24]
	053 Move X30, [X31+48]
	054 Return X0

Method: System.Void GrowAndAppend(System.Char c)

Disassembly:
	0x03616A24 MOV W0, W20
	0x03616A28 BL 0x3616074
	0x03616A2C LDR X8, [X21]
	0x03616A30 MOV W20, W0
	0x03616A34 LDR W9, [X8 + 0xE0]
	0x03616A38 CBNZ W9, 0x3616A44
	0x03616A3C MOV X0, X8
	0x03616A40 BL 0x1C16DFC
	0x03616A44 ADD X0, X31, 0x8
	0x03616A48 MOV X1, X31
	0x03616A4C BL 0x336139C
	0x03616A50 CBZ W0, 0x3616A6C
	0x03616A54 CMP W0, 0x1
	0x03616A58 B.NE 0x3616A78
	0x03616A5C MOV W8, W31
	0x03616A60 MOV W21, W31
	0x03616A64 MOVZ W0, 0x10000
	0x03616A68 B 0x3616B28
	0x03616A6C MOV W8, W0
	0x03616A70 MOV W21, W0
	0x03616A74 B 0x3616B28
	0x03616A78 ADRP X8, 0xB11000
	0x03616A7C LDR X8, [X8 + 0xA38]
	0x03616A80 LDR X0, [X8]
	0x03616A84 LDR W8, [X0 + 0xE0]
	0x03616A88 CBNZ W8, 0x3616A90
	0x03616A8C BL 0x1C16DFC
	0x03616A90 MOV X0, X31
	0x03616A94 BL 0x330A840
	0x03616A98 CBZ X0, 0x3616B54
	0x03616A9C LDR X1, [X31 + 0x8]
	0x03616AA0 MOV X2, X31

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X21, 0xB0D000
	008 Move X21, [X21+1416]
	009 Move W19, W1
	010 Move X20, X0
	011 Move W22, 1
	012 Move X23, 0xDCB000
	013 Move W1, 1
	014 Move X0, X20
	015 Call ValueStringBuilder.Grow, X0, X1
	016 Move W8, [X23+1107]
	017 Compare W8, 0
	018 JumpIfNotEqual {22}
	019 Move X0, X21
	020 Call 0x1C17CF4
	021 Move [X23+1107], W22
	022 NotImplemented "Instruction LDRSW not yet implemented."
	023 Move W9, [X20+16]
	024 NotImplemented "Instruction CMP not yet implemented."
	025 NotImplemented "Instruction CMP not yet implemented."
	026 Move X9, [X20+8]
	027 Add W10, W8, 1
	028 Move X22, [X31+16]
	029 Move X21, [X31+24]
	030 NotImplemented "Instruction STRH not yet implemented."
	031 Move [X20+24], W10
	032 Move X20, [X31+32]
	033 Move X19, [X31+40]
	034 Move X30, [X31+48]
	035 Move X23, [X31+56]
	036 Return 
	037 Call 0x1C17F28

Method: System.Void Grow(System.Int32 requiredAdditionalCapacity)

Disassembly:
	0x03616764 LDR X20, [X20 + 0xF80]
	0x03616768 MOV X0, X20
	0x0361676C BL 0x1C16D08
	0x03616770 MOV X1, X0
	0x03616774 MOV X0, X19
	0x03616778 BL 0x19980B4
	0x0361677C MOV X0, X20
	0x03616780 BL 0x1C16D08
	0x03616784 MOV X2, X0
	0x03616788 MOVZ W1, 0x1
	0x0361678C MOV X0, X19
	0x03616790 BL 0x1993444
	0x03616794 ADRP X0, 0xB24000
	0x03616798 LDR X0, [X0 + 0xF88]
	0x0361679C BL 0x1C16D08
	0x036167A0 MOV X1, X19
	0x036167A4 BL 0x361698C
	0x036167A8 MOV X19, X0
	0x036167AC ADRP X0, 0xAE5000
	0x036167B0 LDR X0, [X0 + 0x578]
	0x036167B4 BL 0x1C16D08
	0x036167B8 BL 0x1C16F10
	0x036167BC MOV X1, X19
	0x036167C0 MOV X2, X31
	0x036167C4 MOV X20, X0
	0x036167C8 BL 0x3314A68
	0x036167CC ADRP X0, 0xB24000
	0x036167D0 LDR X0, [X0 + 0xF90]
	0x036167D4 BL 0x1C16D08
	0x036167D8 MOV X1, X0
	0x036167DC MOV X0, X20
	0x036167E0 BL 0x1C16DEC
	0x036167E4 SUB X31, X31, 0x30
	0x036167E8 STP X0, X30, [X31 + 0x8]
	0x036167EC STP X20, X19, [X31 + 0x20]
	0x036167F0 ADRP X20, 0xDCA000
	0x036167F4 ADRP X19, 0xADE000
	0x036167F8 LDRB W8, [X20 + 0x461]
	0x036167FC LDR X19, [X19 + 0x9F0]
	0x03616800 TBNZ X8, 0x0, 0x3616818
	0x03616804 ADRP X0, 0xADE000
	0x03616808 LDR X0, [X0 + 0x9F0]
	0x0361680C BL 0x1C16CF4
	0x03616810 MOVZ W8, 0x1
	0x03616814 STRB W8, [X20 + 0x461]
	0x03616818 LDR X0, [X19]
	0x0361681C LDR W8, [X0 + 0xE0]
	0x03616820 CBNZ W8, 0x3616828
	0x03616824 BL 0x1C16DFC
	0x03616828 ADD X0, X31, 0x8
	0x0361682C MOV X1, X31
	0x03616830 BL 0x336139C
	0x03616834 CBZ W0, 0x361684C
	0x03616838 CMP W0, 0x1
	0x0361683C B.EQ 0x3616888
	0x03616840 CMP W0, 0x2
	0x03616844 LDR X0, [X31 + 0x8]
	0x03616848 B 0x36168A4
	0x0361684C LDR X0, [X19]
	0x03616850 LDR W8, [X0 + 0xE0]
	0x03616854 CBNZ W8, 0x361685C
	0x03616858 BL 0x1C16DFC
	0x0361685C ADD X0, X31, 0x8
	0x03616860 MOV X1, X31
	0x03616864 BL 0x3361708
	0x03616868 MOV X1, X0
	0x0361686C ADD X0, X31, 0x18
	0x03616870 MOVZ W2, 0x2
	0x03616874 MOV X3, X31
	0x03616878 STR X31, [X31 + 0x18]
	0x0361687C BL 0x335EF44
	0x03616880 LDR X0, [X31 + 0x18]
	0x03616884 B 0x36168A8
	0x03616888 LDR X0, [X19]
	0x0361688C LDR W8, [X0 + 0xE0]
	0x03616890 CBNZ W8, 0x3616898
	0x03616894 BL 0x1C16DFC
	0x03616898 ADD X0, X31, 0x8
	0x0361689C MOV X1, X31
	0x036168A0 BL 0x3361FC4
	0x036168A4 STR X0, [X31 + 0x18]
	0x036168A8 LDP X20, X19, [X31 + 0x20]
	0x036168AC LDR X30, [X31 + 0x10]
	0x036168B0 ADD X31, X31, 0x30
	0x036168B4 RET
	0x036168B8 SUB X31, X31, 0x30
	0x036168BC STP X0, X30, [X31 + 0x8]
	0x036168C0 STP X20, X19, [X31 + 0x20]
	0x036168C4 ADRP X20, 0xDCA000
	0x036168C8 ADRP X19, 0xADE000
	0x036168CC LDRB W8, [X20 + 0x462]
	0x036168D0 LDR X19, [X19 + 0x9F0]
	0x036168D4 TBNZ X8, 0x0, 0x36168EC
	0x036168D8 ADRP X0, 0xADE000
	0x036168DC LDR X0, [X0 + 0x9F0]
	0x036168E0 BL 0x1C16CF4
	0x036168E4 MOVZ W8, 0x1
	0x036168E8 STRB W8, [X20 + 0x462]
	0x036168EC LDR X0, [X19]
	0x036168F0 LDR W8, [X0 + 0xE0]
	0x036168F4 CBNZ W8, 0x36168FC
	0x036168F8 BL 0x1C16DFC
	0x036168FC ADD X0, X31, 0x8
	0x03616900 MOV X1, X31
	0x03616904 BL 0x336139C
	0x03616908 CBZ W0, 0x3616920
	0x0361690C CMP W0, 0x2
	0x03616910 B.EQ 0x361695C
	0x03616914 CMP W0, 0x1
	0x03616918 LDR X0, [X31 + 0x8]
	0x0361691C B 0x3616978
	0x03616920 LDR X0, [X19]
	0x03616924 LDR W8, [X0 + 0xE0]
	0x03616928 CBNZ W8, 0x3616930
	0x0361692C BL 0x1C16DFC
	0x03616930 ADD X0, X31, 0x8
	0x03616934 MOV X1, X31
	0x03616938 BL 0x3361708
	0x0361693C MOV X1, X0
	0x03616940 ADD X0, X31, 0x18
	0x03616944 MOVZ W2, 0x1
	0x03616948 MOV X3, X31
	0x0361694C STR X31, [X31 + 0x18]
	0x03616950 BL 0x335EF44
	0x03616954 LDR X0, [X31 + 0x18]
	0x03616958 B 0x361697C
	0x0361695C LDR X0, [X19]
	0x03616960 LDR W8, [X0 + 0xE0]
	0x03616964 CBNZ W8, 0x361696C
	0x03616968 BL 0x1C16DFC
	0x0361696C ADD X0, X31, 0x8
	0x03616970 MOV X1, X31
	0x03616974 BL 0x3362548
	0x03616978 STR X0, [X31 + 0x18]
	0x0361697C LDP X20, X19, [X31 + 0x20]
	0x03616980 LDR X30, [X31 + 0x10]
	0x03616984 ADD X31, X31, 0x30
	0x03616988 RET
	0x0361698C CBZ X1, 0x3616994
	0x03616990 B 0x3615F60
	0x03616994 RET
	0x03616998 SUB X31, X31, 0x40
	0x0361699C STP X30, X23, [X31 + 0x10]
	0x036169A0 STP X22, X21, [X31 + 0x20]
	0x036169A4 STP X20, X19, [X31 + 0x30]

ISIL:
	001 Move [X31-64], X30
	002 Move [X31-56], X25
	003 Move [X31+16], X24
	004 Move [X31+24], X23
	005 Move [X31+32], X22
	006 Move [X31+40], X21
	007 Move [X31+48], X20
	008 Move [X31+56], X19
	009 Move X21, 0xDCB000
	010 Move X22, 0xB09000
	011 Move W8, [X21+1104]
	012 Move X22, [X22+3424]
	013 Move W20, W1
	014 Move X19, X0
	015 Move TEMP, X8
	016 And TEMP, TEMP, 1
	017 Compare TEMP, 1
	018 JumpIfEqual {39}
	019 Move X0, 0xB09000
	020 Move X0, [X0+3416]
	021 Call 0x1C17CF4
	022 Move X0, 0xB09000
	023 Move X0, [X0+3424]
	024 Call 0x1C17CF4
	025 Move X0, 0xADE000
	026 Move X0, [X0+1448]
	027 Call 0x1C17CF4
	028 Move X0, 0xB0D000
	029 Move X0, [X0+2328]
	030 Call 0x1C17CF4
	031 Move X0, 0xB0D000
	032 Move X0, [X0+1416]
	033 Call 0x1C17CF4
	034 Move X0, 0xB0D000
	035 Move X0, [X0+720]
	036 Call 0x1C17CF4
	037 Move W8, 1
	038 Move [X21+1104], W8
	039 Move X0, [X22]
	040 Move X23, 0xB09000
	041 Move W8, [X0+224]
	042 Move X23, [X23+3416]
	043 Compare W8, 0
	044 JumpIfNotEqual {46}
	045 Call 0x1C17DFC
	046 Move X21, [X23]
	047 Move X0, [X21+32]
	048 Move W8, [X0+309]
	049 Move TEMP, X8
	050 And TEMP, TEMP, 1
	051 Compare TEMP, 1
	052 JumpIfEqual {54}
	053 Call 0x1C5D684
	054 Move X8, [X0+192]
	055 Move X0, [X8+8]
	056 Move W8, [X0+309]
	057 Move TEMP, X8
	058 And TEMP, TEMP, 1
	059 Compare TEMP, 1
	060 JumpIfEqual {62}
	061 Call 0x1C5D684
	062 Move W8, [X0+224]
	063 Compare W8, 0
	064 JumpIfNotEqual {66}
	065 Call 0x1C17DFC
	066 Move X0, [X21+32]
	067 Move W8, [X0+309]
	068 Move TEMP, X8
	069 And TEMP, TEMP, 1
	070 Compare TEMP, 1
	071 JumpIfEqual {73}
	072 Call 0x1C5D684
	073 Move X8, [X0+192]
	074 Move X21, 0xADE000
	075 Move X0, [X8+8]
	076 Move W8, [X0+309]
	077 Move X21, [X21+1448]
	078 Move TEMP, X8
	079 And TEMP, TEMP, 1
	080 Compare TEMP, 1
	081 JumpIfEqual {83}
	082 Call 0x1C5D684
	083 Move X8, [X0+184]
	084 Move X0, [X21]
	085 Move W24, [X19+24]
	086 Move W25, [X19+16]
	087 Move X21, [X8]
	088 Move W8, [X0+224]
	089 Compare W8, 0
	090 JumpIfNotEqual {92}
	091 Call 0x1C17DFC
	092 Add W0, W24, W20
	093 Move W1, W25
	094 ShiftRight W1, 31
	095 And W1, W1, 0x3FFFFFFF
	096 Move X2, X31
	097 Call Math.Max, X0, X1
	098 Compare X21, 0
	099 JumpIfEqual {197}
	100 Move X8, [X21]
	101 Move X24, 0xB0D000
	102 Move X25, 0xB0D000
	103 Move W1, W0
	104 Move X9, [X8+376]
	105 Move X2, [X8+384]
	106 Move X24, [X24+720]
	107 Move X25, [X25+2328]
	108 Move X0, X21
	109 Add X20, X19, 8
	110 NotImplemented "Instruction BLR not yet implemented."
	111 Move X1, [X24]
	112 Move X21, X0
	113 Call Span`1<Char>.op_Implicit, X0
	114 Move X3, [X25]
	115 Move X2, X0
	116 Move X4, X1
	117 Move X0, X20
	118 Move X1, X2
	119 Move X2, X4
	120 Call Span`1<Char>.CopyTo, X0, X1
	121 Move X20, [X19]
	122 Move [X19], X21
	123 Move X1, [X24]
	124 Move X0, X21
	125 Call Span`1<Char>.op_Implicit, X0
	126 Move [X19+8], X0
	127 Move [X19+16], X1
	128 Compare X20, 0
	129 JumpIfEqual {188}
	130 Move X0, [X22]
	131 Move W8, [X0+224]
	132 Compare W8, 0
	133 JumpIfNotEqual {135}
	134 Call 0x1C17DFC
	135 Move X19, [X23]
	136 Move X0, [X19+32]
	137 Move W8, [X0+309]
	138 Move TEMP, X8
	139 And TEMP, TEMP, 1
	140 Compare TEMP, 1
	141 JumpIfEqual {143}
	142 Call 0x1C5D684
	143 Move X8, [X0+192]
	144 Move X0, [X8+8]
	145 Move W8, [X0+309]
	146 Move TEMP, X8
	147 And TEMP, TEMP, 1
	148 Compare TEMP, 1
	149 JumpIfEqual {151}
	150 Call 0x1C5D684
	151 Move W8, [X0+224]
	152 Compare W8, 0
	153 JumpIfNotEqual {155}
	154 Call 0x1C17DFC
	155 Move X0, [X19+32]
	156 Move W8, [X0+309]
	157 Move TEMP, X8
	158 And TEMP, TEMP, 1
	159 Compare TEMP, 1
	160 JumpIfEqual {162}
	161 Call 0x1C5D684
	162 Move X8, [X0+192]
	163 Move X0, [X8+8]
	164 Move W8, [X0+309]
	165 Move TEMP, X8
	166 And TEMP, TEMP, 1
	167 Compare TEMP, 1
	168 JumpIfEqual {170}
	169 Call 0x1C5D684
	170 Move X8, [X0+184]
	171 Move X0, [X8]
	172 Compare X0, 0
	173 JumpIfEqual {197}
	174 Move X8, [X0]
	175 Move X1, X20
	176 Move X20, [X31+48]
	177 Move X19, [X31+56]
	178 Move X22, [X31+32]
	179 Move X21, [X31+40]
	180 Move X4, [X8+392]
	181 Move X3, [X8+400]
	182 Move X24, [X31+16]
	183 Move X23, [X31+24]
	184 Move W2, W31
	185 Move X30, [X31+64]
	186 Move X25, [X31+72]
	187 CallNoReturn X4
	188 Move X20, [X31+48]
	189 Move X19, [X31+56]
	190 Move X22, [X31+32]
	191 Move X21, [X31+40]
	192 Move X24, [X31+16]
	193 Move X23, [X31+24]
	194 Move X30, [X31+64]
	195 Move X25, [X31+72]
	196 Return 
	197 Call 0x1C17F20

Method: System.Void Dispose()

Disassembly:
	0x03616D38 MOV W2, W31
	0x03616D3C MOV W3, W0
	0x03616D40 BL 0x3617764
	0x03616D44 CBNZ X20, 0x3616F48
	0x03616D48 B 0x3616F94
	0x03616D4C LDR X0, [X23]
	0x03616D50 LDR W8, [X0 + 0xE0]
	0x03616D54 CBNZ W8, 0x3616D60
	0x03616D58 BL 0x1C16DFC
	0x03616D5C LDR X0, [X23]
	0x03616D60 ADRP X9, 0xAE6000
	0x03616D64 LDR X8, [X0 + 0xB8]
	0x03616D68 LDR X9, [X9 + 0x8D8]
	0x03616D6C LDR W1, [X8 + 0x4C]
	0x03616D70 LDR X0, [X9]
	0x03616D74 BL 0x1C16D6C
	0x03616D78 CBZ X0, 0x3616F94
	0x03616D7C LDR W9, [X0 + 0x18]
	0x03616D80 MOV X21, X0
	0x03616D84 CBZ W9, 0x3616F98
	0x03616D88 MOVZ W8, 0x2D
	0x03616D8C STRH W8, [X21 + 0x20]
	0x03616D90 LDR X10, [X23]
	0x03616D94 LDR X10, [X10 + 0xB8]
	0x03616D98 LDRSW X11, [X10 + 0x2C]
	0x03616D9C CMP W11, W9
	0x03616DA0 B.CS 0x3616F98
	0x03616DA4 ADD X9, X21, X11, 0x1, LSL
	0x03616DA8 STRH W8, [X9 + 0x20]
	0x03616DAC LDR W22, [X10 + 0x3C]
	0x03616DB0 MOV X0, X19
	0x03616DB4 BL 0x36170EC
	0x03616DB8 MOV X1, X21
	0x03616DBC MOV W2, W22
	0x03616DC0 MOV W3, W0
	0x03616DC4 BL 0x36177CC
	0x03616DC8 LDR X8, [X23]
	0x03616DCC LDR W10, [X21 + 0x18]
	0x03616DD0 LDR X8, [X8 + 0xB8]
	0x03616DD4 LDRSW X9, [X8 + 0x40]
	0x03616DD8 CMP W9, W10
	0x03616DDC B.CS 0x3616F98
	0x03616DE0 ADD X9, X21, X9, 0x1, LSL
	0x03616DE4 MOVZ W10, 0x2D
	0x03616DE8 STRH W10, [X9 + 0x20]
	0x03616DEC LDR W22, [X8 + 0x44]
	0x03616DF0 B 0x3616E70
	0x03616DF4 LDR X0, [X23]
	0x03616DF8 LDR W8, [X0 + 0xE0]
	0x03616DFC CBNZ W8, 0x3616E08
	0x03616E00 BL 0x1C16DFC
	0x03616E04 LDR X0, [X23]
	0x03616E08 ADRP X9, 0xAE6000
	0x03616E0C LDR X8, [X0 + 0xB8]
	0x03616E10 LDR X9, [X9 + 0x8D8]
	0x03616E14 LDR W1, [X8 + 0x54]
	0x03616E18 LDR X0, [X9]
	0x03616E1C BL 0x1C16D6C
	0x03616E20 CBZ X0, 0x3616F94
	0x03616E24 LDR W9, [X0 + 0x18]
	0x03616E28 MOV X21, X0
	0x03616E2C CBZ W9, 0x3616F98
	0x03616E30 MOVZ W10, 0x2D
	0x03616E34 STRH W10, [X21 + 0x20]
	0x03616E38 LDR X8, [X23]
	0x03616E3C LDR X8, [X8 + 0xB8]
	0x03616E40 LDRSW X11, [X8 + 0x2C]
	0x03616E44 CMP W11, W9
	0x03616E48 B.CS 0x3616F98
	0x03616E4C ADD X11, X21, X11, 0x1, LSL
	0x03616E50 STRH W10, [X11 + 0x20]
	0x03616E54 LDRSW X10, [X8 + 0x3C]
	0x03616E58 CMP W10, W9
	0x03616E5C B.CS 0x3616F98
	0x03616E60 ADD X9, X21, X10, 0x1, LSL
	0x03616E64 MOVZ W10, 0x2D
	0x03616E68 STRH W10, [X9 + 0x20]
	0x03616E6C LDR W22, [X8 + 0x50]
	0x03616E70 MOV X0, X19
	0x03616E74 BL 0x3617144
	0x03616E78 MOV X1, X21
	0x03616E7C MOV W2, W22
	0x03616E80 MOV W3, W0
	0x03616E84 BL 0x36177CC
	0x03616E88 CBNZ X20, 0x3616F48
	0x03616E8C B 0x3616F94
	0x03616E90 LDR X0, [X23]
	0x03616E94 LDR W8, [X0 + 0xE0]
	0x03616E98 CBNZ W8, 0x3616EA4
	0x03616E9C BL 0x1C16DFC
	0x03616EA0 LDR X0, [X23]
	0x03616EA4 ADRP X9, 0xAE6000
	0x03616EA8 LDR X8, [X0 + 0xB8]
	0x03616EAC LDR X9, [X9 + 0x8D8]
	0x03616EB0 LDR W1, [X8 + 0x48]
	0x03616EB4 LDR X0, [X9]
	0x03616EB8 BL 0x1C16D6C
	0x03616EBC CBZ X0, 0x3616F94
	0x03616EC0 LDR W9, [X0 + 0x18]
	0x03616EC4 MOV X21, X0
	0x03616EC8 CBZ W9, 0x3616F98
	0x03616ECC MOVZ W8, 0x2D
	0x03616ED0 STRH W8, [X21 + 0x20]
	0x03616ED4 LDR X10, [X23]
	0x03616ED8 LDR X10, [X10 + 0xB8]
	0x03616EDC LDRSW X11, [X10 + 0x2C]
	0x03616EE0 CMP W11, W9
	0x03616EE4 B.CS 0x3616F98
	0x03616EE8 ADD X9, X21, X11, 0x1, LSL
	0x03616EEC STRH W8, [X9 + 0x20]
	0x03616EF0 LDR W22, [X10 + 0x3C]
	0x03616EF4 MOV X0, X19
	0x03616EF8 BL 0x36170EC
	0x03616EFC MOV X1, X21
	0x03616F00 MOV W2, W22
	0x03616F04 MOV W3, W0
	0x03616F08 BL 0x36177CC
	0x03616F0C LDR X8, [X23]
	0x03616F10 LDR W9, [X21 + 0x18]
	0x03616F14 LDR X8, [X8 + 0xB8]
	0x03616F18 LDRSW X10, [X8 + 0x40]
	0x03616F1C CMP W10, W9
	0x03616F20 B.CS 0x3616F98
	0x03616F24 ADD X11, X21, X10, 0x1, LSL

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X19, 0xDCB000
	005 Move W8, [X19+1105]
	006 Move X20, X0
	007 Move TEMP, X8
	008 And TEMP, TEMP, 1
	009 Compare TEMP, 1
	010 JumpIfEqual {19}
	011 Move X0, 0xB09000
	012 Move X0, [X0+3416]
	013 Call 0x1C17CF4
	014 Move X0, 0xB09000
	015 Move X0, [X0+3424]
	016 Call 0x1C17CF4
	017 Move W8, 1
	018 Move [X19+1105], W8
	019 Move X19, [X20]
	020 NotImplemented "Instruction MOVI not yet implemented."
	021 Move [X20], V0
	022 Move [X20+8], V0
	023 Compare X19, 0
	024 JumpIfEqual {82}
	025 Move X8, 0xB09000
	026 Move X8, [X8+3424]
	027 Move X20, 0xB09000
	028 Move X0, [X8]
	029 Move W8, [X0+224]
	030 Move X20, [X20+3416]
	031 Compare W8, 0
	032 JumpIfNotEqual {34}
	033 Call 0x1C17DFC
	034 Move X20, [X20]
	035 Move X0, [X20+32]
	036 Move W8, [X0+309]
	037 Move TEMP, X8
	038 And TEMP, TEMP, 1
	039 Compare TEMP, 1
	040 JumpIfEqual {42}
	041 Call 0x1C5D684
	042 Move X8, [X0+192]
	043 Move X0, [X8+8]
	044 Move W8, [X0+309]
	045 Move TEMP, X8
	046 And TEMP, TEMP, 1
	047 Compare TEMP, 1
	048 JumpIfEqual {50}
	049 Call 0x1C5D684
	050 Move W8, [X0+224]
	051 Compare W8, 0
	052 JumpIfNotEqual {54}
	053 Call 0x1C17DFC
	054 Move X0, [X20+32]
	055 Move W8, [X0+309]
	056 Move TEMP, X8
	057 And TEMP, TEMP, 1
	058 Compare TEMP, 1
	059 JumpIfEqual {61}
	060 Call 0x1C5D684
	061 Move X8, [X0+192]
	062 Move X0, [X8+8]
	063 Move W8, [X0+309]
	064 Move TEMP, X8
	065 And TEMP, TEMP, 1
	066 Compare TEMP, 1
	067 JumpIfEqual {69}
	068 Call 0x1C5D684
	069 Move X8, [X0+184]
	070 Move X0, [X8]
	071 Compare X0, 0
	072 JumpIfEqual {86}
	073 Move X8, [X0]
	074 Move X1, X19
	075 Move X20, [X31+16]
	076 Move X19, [X31+24]
	077 Move W2, W31
	078 Move X4, [X8+392]
	079 Move X3, [X8+400]
	080 Move X30, [X31+32]
	081 CallNoReturn X4
	082 Move X20, [X31+16]
	083 Move X19, [X31+24]
	084 Move X30, [X31+32]
	085 Return 
	086 Call 0x1C17F20
	087 Move [X31-32], X30
	088 Move [X31+16], X20
	089 Move [X31+24], X19
	090 Move X19, 0xDCB000
	091 Move W8, [X19+1110]
	092 Move X20, X0
	093 Compare W8, 0
	094 JumpIfNotEqual {103}
	095 Move X0, 0xB09000
	096 Move X0, [X0+3416]
	097 Call 0x1C17CF4
	098 Move X0, 0xB09000
	099 Move X0, [X0+3424]
	100 Call 0x1C17CF4
	101 Move W8, 1
	102 Move [X19+1110], W8
	103 Move X19, [X20]
	104 NotImplemented "Instruction MOVI not yet implemented."
	105 Move [X20], V0
	106 Move [X20+8], V0
	107 Compare X19, 0
	108 JumpIfEqual {166}
	109 Move X8, 0xB09000
	110 Move X8, [X8+3424]
	111 Move X0, [X8]
	112 Move W8, [X0+224]
	113 Compare W8, 0
	114 JumpIfNotEqual {116}
	115 Call 0x1C17DFC
	116 Move X8, 0xB09000
	117 Move X8, [X8+3416]
	118 Move X20, [X8]
	119 Move X0, [X20+32]
	120 Move W8, [X0+309]
	121 Move TEMP, X8
	122 And TEMP, TEMP, 1
	123 Compare TEMP, 1
	124 JumpIfEqual {126}
	125 Call 0x1C5D684
	126 Move X8, [X0+192]
	127 Move X0, [X8+8]
	128 Move W8, [X0+309]
	129 Move TEMP, X8
	130 And TEMP, TEMP, 1
	131 Compare TEMP, 1
	132 JumpIfEqual {134}
	133 Call 0x1C5D684
	134 Move W8, [X0+224]
	135 Compare W8, 0
	136 JumpIfNotEqual {138}
	137 Call 0x1C17DFC
	138 Move X0, [X20+32]
	139 Move W8, [X0+309]
	140 Move TEMP, X8
	141 And TEMP, TEMP, 1
	142 Compare TEMP, 1
	143 JumpIfEqual {145}
	144 Call 0x1C5D684
	145 Move X8, [X0+192]
	146 Move X0, [X8+8]
	147 Move W8, [X0+309]
	148 Move TEMP, X8
	149 And TEMP, TEMP, 1
	150 Compare TEMP, 1
	151 JumpIfEqual {153}
	152 Call 0x1C5D684
	153 Move X8, [X0+184]
	154 Move X0, [X8]
	155 Compare X0, 0
	156 JumpIfEqual {170}
	157 Move X8, [X0]
	158 Move X1, X19
	159 Move X20, [X31+16]
	160 Move X19, [X31+24]
	161 Move W2, W31
	162 Move X4, [X8+392]
	163 Move X3, [X8+400]
	164 Move X30, [X31+32]
	165 CallNoReturn X4
	166 Move X20, [X31+16]
	167 Move X19, [X31+24]
	168 Move X30, [X31+32]
	169 Return 
	170 Call 0x1C17F20

