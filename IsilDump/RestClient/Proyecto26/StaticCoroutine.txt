Type: Proyecto26.StaticCoroutine

Method: Proyecto26.StaticCoroutine/CoroutineHolder get_runner()

Disassembly:
	0x0358C7D4 ADRP X21, 0xBAA000
	0x0358C7D8 LDRB W8, [X23 + 0xF48]
	0x0358C7DC LDR X24, [X24 + 0xB10]
	0x0358C7E0 LDR X20, [X20 + 0xB18]
	0x0358C7E4 LDR X22, [X22 + 0xB18]
	0x0358C7E8 LDR X21, [X21 + 0xB20]
	0x0358C7EC MOV X19, X0
	0x0358C7F0 TBNZ X8, 0x0, 0x358C82C
	0x0358C7F4 ADRP X0, 0xB8F000
	0x0358C7F8 LDR X0, [X0 + 0xB18]
	0x0358C7FC BL 0x1C16CF4
	0x0358C800 ADRP X0, 0xBAA000
	0x0358C804 LDR X0, [X0 + 0xB18]
	0x0358C808 BL 0x1C16CF4
	0x0358C80C ADRP X0, 0xBAA000
	0x0358C810 LDR X0, [X0 + 0xB10]
	0x0358C814 BL 0x1C16CF4
	0x0358C818 ADRP X0, 0xBAA000
	0x0358C81C LDR X0, [X0 + 0xB20]
	0x0358C820 BL 0x1C16CF4
	0x0358C824 MOVZ W8, 0x1
	0x0358C828 STRB W8, [X23 + 0xF48]
	0x0358C82C LDR X0, [X24]
	0x0358C830 BL 0x1C16F10
	0x0358C834 LDR X1, [X20]
	0x0358C838 MOV X20, X0
	0x0358C83C BL 0x24DFE84
	0x0358C840 LDR X0, [X22]
	0x0358C844 BL 0x1C16F10
	0x0358C848 LDR X2, [X21]
	0x0358C84C MOV X1, X20
	0x0358C850 MOV X3, X31
	0x0358C854 MOV X21, X0
	0x0358C858 BL 0x2A76D00
	0x0358C85C MOV X0, X19
	0x0358C860 MOV X1, X21
	0x0358C864 BL 0x358BFA8
	0x0358C868 MOV X0, X20
	0x0358C86C LDP X20, X19, [X31 + 0x30]
	0x0358C870 LDP X22, X21, [X31 + 0x20]
	0x0358C874 LDP X24, X23, [X31 + 0x10]
	0x0358C878 LDR X30, [X31], #0x40
	0x0358C87C RET
	0x0358C880 STR X30, [X31 - 0x40]!
	0x0358C884 STP X24, X23, [X31 + 0x10]
	0x0358C888 STP X22, X21, [X31 + 0x20]
	0x0358C88C STP X20, X19, [X31 + 0x30]
	0x0358C890 ADRP X20, 0xE53000
	0x0358C894 LDRB W8, [X20 + 0xF49]
	0x0358C898 MOV X21, X1
	0x0358C89C MOV X19, X0
	0x0358C8A0 TBNZ X8, 0x0, 0x358C8DC
	0x0358C8A4 ADRP X0, 0xB67000
	0x0358C8A8 LDR X0, [X0 + 0x618]
	0x0358C8AC BL 0x1C16CF4
	0x0358C8B0 ADRP X0, 0xBAA000
	0x0358C8B4 LDR X0, [X0 + 0xB28]
	0x0358C8B8 BL 0x1C16CF4
	0x0358C8BC ADRP X0, 0xB92000
	0x0358C8C0 LDR X0, [X0 + 0x578]
	0x0358C8C4 BL 0x1C16CF4
	0x0358C8C8 ADRP X0, 0xBAA000
	0x0358C8CC LDR X0, [X0 + 0xB30]
	0x0358C8D0 BL 0x1C16CF4
	0x0358C8D4 MOVZ W8, 0x1
	0x0358C8D8 STRB W8, [X20 + 0xF49]
	0x0358C8DC MOV X0, X31
	0x0358C8E0 BL 0x3E610DC
	0x0358C8E4 CBZ X21, 0x358CA20
	0x0358C8E8 MOV X20, X0
	0x0358C8EC LDR X0, [X21 + 0x80]
	0x0358C8F0 MOV X1, X20
	0x0358C8F4 MOV X2, X31
	0x0358C8F8 BL 0x3E60904
	0x0358C8FC MOV X21, X0
	0x0358C900 MOV X0, X31
	0x0358C904 BL 0x3241948
	0x0358C908 MOV X22, X0
	0x0358C90C MOV X0, X31
	0x0358C910 BL 0x3241948
	0x0358C914 CBZ X0, 0x358CA20
	0x0358C918 LDR X8, [X0]
	0x0358C91C ADRP X23, 0xBAA000
	0x0358C920 ADRP X24, 0xB92000
	0x0358C924 MOV X1, X20
	0x0358C928 LDR X9, [X8 + 0x378]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X19, 0xE54000
	006 Move X20, 0xBAB000
	007 Move X21, 0xB68000
	008 Move W8, [X19+3882]
	009 Move X20, [X20+2776]
	010 Move X21, [X21+1432]
	011 Move TEMP, X8
	012 And TEMP, TEMP, 1
	013 Compare TEMP, 1
	014 JumpIfEqual {35}
	015 Move X0, 0xB68000
	016 Move X0, [X0+2416]
	017 Call 0x1C17CF4
	018 Move X0, 0xBAB000
	019 Move X0, [X0+2784]
	020 Call 0x1C17CF4
	021 Move X0, 0xB68000
	022 Move X0, [X0+2648]
	023 Call 0x1C17CF4
	024 Move X0, 0xB68000
	025 Move X0, [X0+1432]
	026 Call 0x1C17CF4
	027 Move X0, 0xBAB000
	028 Move X0, [X0+2776]
	029 Call 0x1C17CF4
	030 Move X0, 0xBAB000
	031 Move X0, [X0+2792]
	032 Call 0x1C17CF4
	033 Move W8, 1
	034 Move [X19+3882], W8
	035 Move X8, [X20]
	036 Move X0, [X21]
	037 Move X8, [X8+184]
	038 Move W9, [X0+224]
	039 Move X19, [X8]
	040 Compare W9, 0
	041 JumpIfNotEqual {43}
	042 Call 0x1C17DFC
	043 Move X0, X19
	044 Move X1, X31
	045 Move X2, X31
	046 Call Object.op_Equality, X0, X1
	047 Move TEMP, X0
	048 And TEMP, TEMP, 1
	049 Compare TEMP, 1
	050 JumpIfNotEqual {95}
	051 Move X8, 0xB68000
	052 Move X8, [X8+2648]
	053 Move X0, [X8]
	054 Call 0x1C17F10
	055 Move X8, 0xBAB000
	056 Move X8, [X8+2792]
	057 Move X2, X31
	058 Move X19, X0
	059 Move X1, [X8]
	060 Call GameObject..ctor, X0, X1
	061 Compare X19, 0
	062 JumpIfEqual {103}
	063 Move X8, 0xBAB000
	064 Move X8, [X8+2784]
	065 Move X0, X19
	066 Move X1, [X8]
	067 Call 0x21E61FC, X0
	068 Move X8, [X20]
	069 Move X8, [X8+184]
	070 Move [X8], X0
	071 Move X8, 0xB68000
	072 Move X8, [X8+2416]
	073 Move X0, [X8]
	074 Move W8, [X0+224]
	075 Compare W8, 0
	076 JumpIfNotEqual {78}
	077 Call 0x1C17DFC
	078 Move X0, X31
	079 Call Application.get_isPlaying
	080 Move TEMP, X0
	081 And TEMP, TEMP, 1
	082 Compare TEMP, 1
	083 JumpIfNotEqual {95}
	084 Move X8, [X20]
	085 Move X0, [X21]
	086 Move X8, [X8+184]
	087 Move W9, [X0+224]
	088 Move X19, [X8]
	089 Compare W9, 0
	090 JumpIfNotEqual {92}
	091 Call 0x1C17DFC
	092 Move X0, X19
	093 Move X1, X31
	094 Call Object.DontDestroyOnLoad, X0
	095 Move X8, [X20]
	096 Move X20, [X31+16]
	097 Move X19, [X31+24]
	098 Move X8, [X8+184]
	099 Move X0, [X8]
	100 Move X30, [X31+32]
	101 Move X21, [X31+40]
	102 Return X0
	103 Call 0x1C17F20

Method: UnityEngine.Coroutine StartCoroutine(System.Collections.IEnumerator coroutine)

Disassembly:
	0x0358C92C LDR X2, [X8 + 0x380]
	0x0358C930 LDR X23, [X23 + 0xB28]
	0x0358C934 LDR X24, [X24 + 0x578]
	0x0358C938 BLR X9
	0x0358C93C LDR X8, [X23]
	0x0358C940 LDR X2, [X24]
	0x0358C944 MOV X1, X0
	0x0358C948 MOV X3, X31
	0x0358C94C MOV X0, X8

ISIL:
	001 Move [X31-16], X30
	002 Move [X31-8], X19
	003 Move X19, X0
	004 Call StaticCoroutine.get_runner
	005 Compare X0, 0
	006 JumpIfEqual {13}
	007 Move X1, X19
	008 Move X2, X31
	009 Move X30, [X31+16]
	010 Move X19, [X31+24]
	011 Call MonoBehaviour.StartCoroutine, X0, X1
	012 Return X0
	013 Call 0x1C17F20

