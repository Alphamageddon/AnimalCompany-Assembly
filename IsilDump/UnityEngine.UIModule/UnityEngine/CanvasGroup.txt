Type: UnityEngine.CanvasGroup

Method: System.Single get_alpha()

Disassembly:
	0x03E2326C TBNZ X8, 0x0, 0x3E23284
	0x03E23270 ADRP X0, 0x326000
	0x03E23274 LDR X0, [X0 + 0x6B8]
	0x03E23278 BL 0x1C16CF4
	0x03E2327C MOVZ W8, 0x1
	0x03E23280 STRB W8, [X21 + 0x552]
	0x03E23284 LDR X0, [X22]
	0x03E23288 LDR W8, [X0 + 0xE0]
	0x03E2328C CBNZ W8, 0x3E23294
	0x03E23290 BL 0x1C16DFC
	0x03E23294 ADRP X21, 0x5C5000
	0x03E23298 LDR X8, [X21 + 0x570]
	0x03E2329C CBNZ X8, 0x3E232B4
	0x03E232A0 ADRP X0, 0xFFFFFFFFFCCFE000
	0x03E232A4 ADD X0, X0, 0x861

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x5C6000
	005 Move X1, [X20+1104]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -53571584
	010 Add X0, X0, 3134
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+1104], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Void set_alpha(System.Single value)

Disassembly:
	0x03E232A8 BL 0x1C16CB8
	0x03E232AC MOV X8, X0
	0x03E232B0 STR X0, [X21 + 0x570]
	0x03E232B4 ADD X0, X31, 0x18
	0x03E232B8 ADD X3, X31, 0x0
	0x03E232BC MOV X1, X20
	0x03E232C0 MOV X2, X19
	0x03E232C4 BLR X8
	0x03E232C8 LDP X20, X19, [X31 + 0x30]
	0x03E232CC LDP X22, X21, [X31 + 0x20]
	0x03E232D0 LDR X30, [X31 + 0x10]
	0x03E232D4 AND W0, W0, 0x1
	0x03E232D8 ADD X31, X31, 0x40
	0x03E232DC RET
	0x03E232E0 STP X30, X23, [X31 - 0x30]!
	0x03E232E4 STP X22, X21, [X31 + 0x10]
	0x03E232E8 STP X20, X19, [X31 + 0x20]
	0x03E232EC ADRP X23, 0x5C5000
	0x03E232F0 LDR X4, [X23 + 0x570]

ISIL:
	001 Move [X31-32], D8
	002 Move [X31+8], X30
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X20, 0x5C6000
	006 Move X1, [X20+1112]
	007 Move V8, V0
	008 Move X19, X0
	009 Compare X1, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -53669888
	012 Add X0, X0, 3236
	013 Call 0x1C17CB8
	014 Move X1, X0
	015 Move [X20+1112], X0
	016 Move X0, X19
	017 Move X20, [X31+16]
	018 Move X19, [X31+24]
	019 Move X30, [X31+8]
	020 Move V0, V8
	021 Move V8, [X31+32]
	022 CallNoReturn X1

Method: System.Boolean get_interactable()

Disassembly:
	0x03E232F4 MOV X19, X3
	0x03E232F8 MOV X20, X2
	0x03E232FC MOV X21, X1
	0x03E23300 MOV X22, X0
	0x03E23304 CBNZ X4, 0x3E2331C
	0x03E23308 ADRP X0, 0xFFFFFFFFFCCFE000
	0x03E2330C ADD X0, X0, 0x861
	0x03E23310 BL 0x1C16CB8
	0x03E23314 MOV X4, X0
	0x03E23318 STR X0, [X23 + 0x570]
	0x03E2331C MOV X0, X22
	0x03E23320 MOV X1, X21
	0x03E23324 MOV X2, X20
	0x03E23328 MOV X3, X19
	0x03E2332C LDP X20, X19, [X31 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x5C6000
	005 Move X1, [X20+1120]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -53514240
	010 Add X0, X0, 2112
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+1120], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Boolean get_blocksRaycasts()

Disassembly:
	0x03E23330 LDP X22, X21, [X31 + 0x10]
	0x03E23334 LDP X30, X23, [X31], #0x30
	0x03E23338 BR X4
	0x03E2333C STP D13, D12, [X31 - 0x60]!
	0x03E23340 STP D11, D10, [X31 + 0x10]
	0x03E23344 STP D9, D8, [X31 + 0x20]
	0x03E23348 STR X30, [X31 + 0x30]
	0x03E2334C STP X22, X21, [X31 + 0x40]
	0x03E23350 STP X20, X19, [X31 + 0x50]
	0x03E23354 ADRP X21, 0x5C5000
	0x03E23358 LDRB W8, [X21 + 0x553]
	0x03E2335C MOV X19, X1
	0x03E23360 MOV V8.16B, V1.16B
	0x03E23364 MOV V9.16B, V0.16B
	0x03E23368 MOV X20, X0

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x5C6000
	005 Move X1, [X20+1128]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -53448704
	010 Add X0, X0, 1301
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+1128], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Boolean get_ignoreParentGroups()

Disassembly:
	0x03E2336C TBNZ X8, 0x0, 0x3E23384
	0x03E23370 ADRP X0, 0x326000
	0x03E23374 LDR X0, [X0 + 0x6B8]
	0x03E23378 BL 0x1C16CF4
	0x03E2337C MOVZ W8, 0x1
	0x03E23380 STRB W8, [X21 + 0x553]
	0x03E23384 ADRP X22, 0x5B5000
	0x03E23388 ADRP X21, 0x326000
	0x03E2338C LDRB W8, [X22 + 0xE5A]
	0x03E23390 LDR X21, [X21 + 0x6B8]
	0x03E23394 CBNZ W8, 0x3E233AC
	0x03E23398 ADRP X0, 0x2D7000
	0x03E2339C LDR X0, [X0 + 0x9A0]
	0x03E233A0 BL 0x1C16CF4
	0x03E233A4 MOVZ W8, 0x1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x5C6000
	005 Move X1, [X20+1136]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -53432320
	010 Add X0, X0, 162
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+1136], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Void set_ignoreParentGroups(System.Boolean value)

Disassembly:
	0x03E233A8 STRB W8, [X22 + 0xE5A]
	0x03E233AC ADRP X8, 0x2D7000
	0x03E233B0 LDR X8, [X8 + 0x9A0]
	0x03E233B4 LDR X0, [X21]
	0x03E233B8 LDR X8, [X8]
	0x03E233BC LDR W9, [X0 + 0xE0]
	0x03E233C0 LDR X8, [X8 + 0xB8]
	0x03E233C4 LDP S13, S12, [X8]
	0x03E233C8 LDP S11, S10, [X8 + 0x8]
	0x03E233CC CBNZ W9, 0x3E233D4
	0x03E233D0 BL 0x1C16DFC
	0x03E233D4 MOV X0, X20
	0x03E233D8 MOV V0.16B, V9.16B
	0x03E233DC MOV V1.16B, V8.16B
	0x03E233E0 MOV X1, X19
	0x03E233E4 MOV V4.16B, V11.16B
	0x03E233E8 MOV V5.16B, V10.16B

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x5C6000
	006 Move X2, [X21+1144]
	007 Move W19, W1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -53645312
	012 Add X0, X0, 3759
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+1144], X0
	016 And W1, W19, 1
	017 Move X0, X20
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Boolean IsRaycastLocationValid(UnityEngine.Vector2 sp, UnityEngine.Camera eventCamera)

Disassembly:
	0x03E233EC LDP X20, X19, [X31 + 0x50]
	0x03E233F0 LDP X22, X21, [X31 + 0x40]
	0x03E233F4 LDR X30, [X31 + 0x30]
	0x03E233F8 LDP D9, D8, [X31 + 0x20]
	0x03E233FC LDP D11, D10, [X31 + 0x10]
	0x03E23400 MOV V2.16B, V13.16B
	0x03E23404 MOV V3.16B, V12.16B
	0x03E23408 LDP D13, D12, [X31], #0x60
	0x03E2340C B 0x3E23410
	0x03E23410 STP D13, D12, [X31 - 0x60]!
	0x03E23414 STP D11, D10, [X31 + 0x10]
	0x03E23418 STP D9, D8, [X31 + 0x20]
	0x03E2341C STR X30, [X31 + 0x30]
	0x03E23420 STP X22, X21, [X31 + 0x40]
	0x03E23424 STP X20, X19, [X31 + 0x50]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x5C6000
	005 Move X1, [X20+1128]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -53448704
	010 Add X0, X0, 1301
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+1128], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

