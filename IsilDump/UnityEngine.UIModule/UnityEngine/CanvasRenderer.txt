Type: UnityEngine.CanvasRenderer

Method: System.Void set_hasPopInstruction(System.Boolean value)

Disassembly:
	0x03E23428 ADRP X22, 0x5C5000
	0x03E2342C ADRP X21, 0x326000
	0x03E23430 LDRB W8, [X22 + 0x554]
	0x03E23434 LDR X21, [X21 + 0x6B8]
	0x03E23438 MOV V8.16B, V5.16B
	0x03E2343C MOV V9.16B, V4.16B
	0x03E23440 MOV V10.16B, V3.16B
	0x03E23444 MOV V11.16B, V2.16B
	0x03E23448 MOV X19, X1
	0x03E2344C MOV V12.16B, V1.16B
	0x03E23450 MOV V13.16B, V0.16B
	0x03E23454 MOV X20, X0
	0x03E23458 TBNZ X8, 0x0, 0x3E23470
	0x03E2345C ADRP X0, 0x326000
	0x03E23460 LDR X0, [X0 + 0x6B8]
	0x03E23464 BL 0x1C16CF4
	0x03E23468 MOVZ W8, 0x1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x5C6000
	006 Move X2, [X21+1152]
	007 Move W19, W1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -53575680
	012 Add X0, X0, 60
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+1152], X0
	016 And W1, W19, 1
	017 Move X0, X20
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Int32 get_materialCount()

Disassembly:
	0x03E2346C STRB W8, [X22 + 0x554]
	0x03E23470 LDR X0, [X21]
	0x03E23474 LDR W8, [X0 + 0xE0]
	0x03E23478 CBNZ W8, 0x3E23480
	0x03E2347C BL 0x1C16DFC
	0x03E23480 MOV X0, X20
	0x03E23484 MOV X1, X19
	0x03E23488 MOV V2.16B, V11.16B
	0x03E2348C MOV V3.16B, V10.16B
	0x03E23490 MOV V4.16B, V9.16B
	0x03E23494 MOV V5.16B, V8.16B
	0x03E23498 LDP X20, X19, [X31 + 0x50]
	0x03E2349C LDP X22, X21, [X31 + 0x40]
	0x03E234A0 LDR X30, [X31 + 0x30]
	0x03E234A4 LDP D9, D8, [X31 + 0x20]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x5C6000
	005 Move X1, [X20+1160]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -53530624
	010 Add X0, X0, 1310
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+1160], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Void set_materialCount(System.Int32 value)

Disassembly:
	0x03E234A8 LDP D11, D10, [X31 + 0x10]
	0x03E234AC MOV V0.16B, V13.16B
	0x03E234B0 MOV V1.16B, V12.16B
	0x03E234B4 LDP D13, D12, [X31], #0x60
	0x03E234B8 B 0x3E23238
	0x03E234BC SUB X31, X31, 0xB0
	0x03E234C0 STP D15, D14, [X31 + 0x30]
	0x03E234C4 STP D13, D12, [X31 + 0x40]
	0x03E234C8 STP D11, D10, [X31 + 0x50]
	0x03E234CC STP D9, D8, [X31 + 0x60]
	0x03E234D0 STR X30, [X31 + 0x70]
	0x03E234D4 STP X24, X23, [X31 + 0x80]
	0x03E234D8 STP X22, X21, [X31 + 0x90]
	0x03E234DC STP X20, X19, [X31 + 0xA0]
	0x03E234E0 ADRP X22, 0x5C5000
	0x03E234E4 LDRB W8, [X22 + 0x555]
	0x03E234E8 MOV X19, X2

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x5C6000
	006 Move X2, [X21+1168]
	007 Move W19, W1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -53538816
	012 Add X0, X0, 1673
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+1168], X0
	016 Move X0, X20
	017 Move W1, W19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Void set_popMaterialCount(System.Int32 value)

Disassembly:
	0x03E234EC MOV X21, X1
	0x03E234F0 MOV V8.16B, V1.16B
	0x03E234F4 MOV V9.16B, V0.16B
	0x03E234F8 MOV X20, X0
	0x03E234FC TBNZ X8, 0x0, 0x3E23514
	0x03E23500 ADRP X0, 0x326000
	0x03E23504 LDR X0, [X0 + 0x6B8]
	0x03E23508 BL 0x1C16CF4
	0x03E2350C MOVZ W8, 0x1
	0x03E23510 STRB W8, [X22 + 0x555]
	0x03E23514 ADRP X23, 0x5B6000
	0x03E23518 ADRP X22, 0x326000
	0x03E2351C LDRB W8, [X23 + 0x78F]
	0x03E23520 LDR X22, [X22 + 0x6B8]
	0x03E23524 STP X31, X31, [X31 + 0x18]
	0x03E23528 STR X31, [X31 + 0x28]
	0x03E2352C CBNZ W8, 0x3E23544

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x5C6000
	006 Move X2, [X21+1176]
	007 Move W19, W1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -53481472
	012 Add X0, X0, 2082
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+1176], X0
	016 Move X0, X20
	017 Move W1, W19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Int32 get_absoluteDepth()

Disassembly:
	0x03E23530 ADRP X0, 0x2D8000
	0x03E23534 LDR X0, [X0 + 0xF08]
	0x03E23538 BL 0x1C16CF4
	0x03E2353C MOVZ W8, 0x1
	0x03E23540 STRB W8, [X23 + 0x78F]
	0x03E23544 ADRP X8, 0x2D8000
	0x03E23548 LDR X8, [X8 + 0xF08]
	0x03E2354C LDR X8, [X8]
	0x03E23550 LDR X8, [X8 + 0xB8]
	0x03E23554 LDR V0, [X8]
	0x03E23558 STR W31, [X19 + 0x8]
	0x03E2355C STR D0, [X19]
	0x03E23560 LDR X0, [X22]
	0x03E23564 LDR W8, [X0 + 0xE0]
	0x03E23568 CBNZ W8, 0x3E23570

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x5C6000
	005 Move X1, [X20+1184]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -53620736
	010 Add X0, X0, 2559
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+1184], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Boolean get_hasMoved()

Disassembly:
	0x03E2356C BL 0x1C16DFC
	0x03E23570 ADD X8, X31, 0x18
	0x03E23574 MOV X0, X21
	0x03E23578 MOV V0.16B, V9.16B
	0x03E2357C MOV V1.16B, V8.16B
	0x03E23580 BL 0x3E238E0
	0x03E23584 CBZ X20, 0x3E238DC
	0x03E23588 MOV X0, X20
	0x03E2358C MOV X1, X31
	0x03E23590 BL 0x3C3DEB4
	0x03E23594 ADRP X21, 0x5B5000
	0x03E23598 LDRB W8, [X21 + 0xDDE]
	0x03E2359C MOV V8.16B, V0.16B
	0x03E235A0 MOV V9.16B, V1.16B
	0x03E235A4 MOV V10.16B, V2.16B

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x5C6000
	005 Move X1, [X20+1192]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -53661696
	010 Add X0, X0, 3695
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+1192], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Boolean get_cullTransparentMesh()

Disassembly:
	0x03E235A8 MOV V11.16B, V3.16B
	0x03E235AC CBNZ W8, 0x3E235C4
	0x03E235B0 ADRP X0, 0x2D0000
	0x03E235B4 LDR X0, [X0 + 0x5A0]
	0x03E235B8 BL 0x1C16CF4
	0x03E235BC MOVZ W8, 0x1
	0x03E235C0 STRB W8, [X21 + 0xDDE]
	0x03E235C4 ADRP X21, 0x2D0000
	0x03E235C8 LDR X21, [X21 + 0x5A0]
	0x03E235CC MOV V0.16B, V8.16B
	0x03E235D0 MOV V1.16B, V9.16B
	0x03E235D4 MOV V2.16B, V10.16B
	0x03E235D8 LDR X8, [X21]
	0x03E235DC MOV V3.16B, V11.16B
	0x03E235E0 MOV X0, X31

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x5C6000
	005 Move X1, [X20+1200]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -53653504
	010 Add X0, X0, 3827
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+1200], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Void set_cullTransparentMesh(System.Boolean value)

Disassembly:
	0x03E235E4 LDR X8, [X8 + 0xB8]
	0x03E235E8 LDP S4, S5, [X8 + 0x54]
	0x03E235EC LDR V6, [X8 + 0x5C]
	0x03E235F0 BL 0x3C2A9FC
	0x03E235F4 MOV X0, X20
	0x03E235F8 MOV X1, X31
	0x03E235FC MOV V11.16B, V0.16B
	0x03E23600 MOV V12.16B, V1.16B
	0x03E23604 MOV V13.16B, V2.16B
	0x03E23608 BL 0x3C3F58C
	0x03E2360C ADRP X22, 0x5B5000
	0x03E23610 LDRB W8, [X22 + 0x785]
	0x03E23614 MOV V8.16B, V0.16B
	0x03E23618 MOV V9.16B, V1.16B
	0x03E2361C MOV V14.16B, V2.16B
	0x03E23620 CBNZ W8, 0x3E23638
	0x03E23624 ADRP X0, 0x2D0000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x5C6000
	006 Move X2, [X21+1208]
	007 Move W19, W1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -53678080
	012 Add X0, X0, 2930
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+1208], X0
	016 And W1, W19, 1
	017 Move X0, X20
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Boolean get_cull()

Disassembly:
	0x03E23628 LDR X0, [X0 + 0x5A8]
	0x03E2362C BL 0x1C16CF4
	0x03E23630 MOVZ W8, 0x1
	0x03E23634 STRB W8, [X22 + 0x785]
	0x03E23638 ADRP X23, 0x2D0000
	0x03E2363C LDR X23, [X23 + 0x5A8]
	0x03E23640 LDR X0, [X23]
	0x03E23644 LDR W8, [X0 + 0xE0]
	0x03E23648 CBNZ W8, 0x3E23650
	0x03E2364C BL 0x1C16DFC
	0x03E23650 ADRP X8, 0xFFFFFFFFFCCC7000
	0x03E23654 FMUL S0, S11, S11
	0x03E23658 FMUL S1, S12, S12
	0x03E2365C LDR V10, [X8 + 0x17C]
	0x03E23660 FADD S0, S0, S1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x5C6000
	005 Move X1, [X20+1216]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -53612544
	010 Add X0, X0, 2754
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+1216], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Void set_cull(System.Boolean value)

Disassembly:
	0x03E23664 FMUL S1, S13, S13
	0x03E23668 FADD S0, S1, S0
	0x03E2366C FSQRT S0, S0
	0x03E23670 FCMP S0, S10
	0x03E23674 STP S9, S8, [X31 + 0x10]
	0x03E23678 STR S14, [X31 + 0xC]
	0x03E2367C B.LE 0x3E23694
	0x03E23680 FDIV S2, S11, S0
	0x03E23684 FDIV S1, S12, S0
	0x03E23688 STP S1, S2, [X31 + 0x78]
	0x03E2368C FDIV S8, S13, S0
	0x03E23690 B 0x3E236C8
	0x03E23694 ADRP X24, 0x5B5000
	0x03E23698 LDRB W8, [X24 + 0x783]
	0x03E2369C CBNZ W8, 0x3E236B4
	0x03E236A0 ADRP X0, 0x2D0000
	0x03E236A4 LDR X0, [X0 + 0x5A0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x5C6000
	006 Move X2, [X21+1224]
	007 Move W19, W1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -53440512
	012 Add X0, X0, 884
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+1224], X0
	016 And W1, W19, 1
	017 Move X0, X20
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Void SetColor(UnityEngine.Color color)

Disassembly:
	0x03E236A8 BL 0x1C16CF4
	0x03E236AC MOVZ W8, 0x1
	0x03E236B0 STRB W8, [X24 + 0x783]
	0x03E236B4 LDR X8, [X21]
	0x03E236B8 LDR X8, [X8 + 0xB8]
	0x03E236BC LDR V1, [X8]
	0x03E236C0 LDP S0, S8, [X8 + 0x4]
	0x03E236C4 STP S0, S1, [X31 + 0x78]
	0x03E236C8 MOV X0, X20
	0x03E236CC MOV X1, X31
	0x03E236D0 BL 0x3C3F58C
	0x03E236D4 LDP S4, S5, [X31 + 0x18]
	0x03E236D8 LDRB W8, [X22 + 0x785]
	0x03E236DC LDR V15, [X31 + 0x20]
	0x03E236E0 MOV V11.16B, V0.16B
	0x03E236E4 MOV V12.16B, V1.16B
	0x03E236E8 MOV V13.16B, V2.16B
	0x03E236EC CBNZ W8, 0x3E23714
	0x03E236F0 ADRP X0, 0x2D0000
	0x03E236F4 LDR X0, [X0 + 0x5A8]
	0x03E236F8 MOV V9.16B, V4.16B

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+32], X20
	004 Move [X31+40], X19
	005 Move X20, 0x5C6000
	006 Move X8, [X20+1328]
	007 Move X19, X0
	008 Move [X31], S0
	009 Move [X31+8], S1
	010 Move [X31+8], S2
	011 Move [X31+16], S3
	012 Compare X8, 0
	013 JumpIfNotEqual {19}
	014 Move X0, -53678080
	015 Add X0, X0, 2998
	016 Call 0x1C17CB8
	017 Move X8, X0
	018 Move [X20+1328], X0
	019 Add X1, X31, 0
	020 Move X0, X19
	021 NotImplemented "Instruction BLR not yet implemented."
	022 Move X20, [X31+32]
	023 Move X19, [X31+40]
	024 Move X30, [X31+16]
	025 Add X31, X31, 48
	026 Return 

Method: UnityEngine.Color GetColor()

Disassembly:
	0x03E23740 FMUL S0, S9, S9
	0x03E23744 FMUL S1, S12, S12
	0x03E23748 FADD S0, S0, S1
	0x03E2374C FMUL S1, S11, S11
	0x03E23750 FADD S0, S1, S0
	0x03E23754 FSQRT S2, S0
	0x03E23758 FCMP S2, S10
	0x03E2375C B.LE 0x3E23770
	0x03E23760 FDIV S0, S9, S2
	0x03E23764 FDIV S1, S12, S2
	0x03E23768 FDIV S2, S11, S2
	0x03E2376C B 0x3E237B0
	0x03E23770 ADRP X20, 0x5B5000
	0x03E23774 LDRB W8, [X20 + 0x783]
	0x03E23778 CBNZ W8, 0x3E237A0
	0x03E2377C ADRP X0, 0x2D0000
	0x03E23780 LDR X0, [X0 + 0x5A0]
	0x03E23784 MOV V9.16B, V4.16B
	0x03E23788 MOV V10.16B, V5.16B
	0x03E2378C BL 0x1C16CF4
	0x03E23790 MOV V5.16B, V10.16B
	0x03E23794 MOV V4.16B, V9.16B

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+8], X31
	003 Move [X31+16], X30
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X20, 0x5C6000
	007 Move X8, [X20+1336]
	008 Move X19, X0
	009 Move [X31], X31
	010 Compare X8, 0
	011 JumpIfNotEqual {17}
	012 Move X0, -53575680
	013 Add X0, X0, 186
	014 Call 0x1C17CB8
	015 Move X8, X0
	016 Move [X20+1336], X0
	017 Add X1, X31, 0
	018 Move X0, X19
	019 NotImplemented "Instruction BLR not yet implemented."
	020 Move S0, [X31]
	021 Move S1, [X31+4]
	022 Move S2, [X31+8]
	023 Move S3, [X31+12]
	024 Move X20, [X31+32]
	025 Move X19, [X31+40]
	026 Move X30, [X31+16]
	027 Add X31, X31, 48
	028 Return X0

Method: System.Void EnableRectClipping(UnityEngine.Rect rect)

Disassembly:
	0x03E237DC FMUL S4, S7, S4
	0x03E237E0 FMUL S5, S16, S5
	0x03E237E4 FMUL S0, S0, S7
	0x03E237E8 FMUL S1, S1, S16
	0x03E237EC FADD S0, S0, S1
	0x03E237F0 LDP S1, S3, [X31 + 0x24]
	0x03E237F4 FADD S4, S4, S5
	0x03E237F8 LDR V5, [X31 + 0x2C]
	0x03E237FC ADRP X20, 0x5B6000
	0x03E23800 LDRB W8, [X20 + 0x5AA]
	0x03E23804 FMUL S2, S2, S8
	0x03E23808 FMUL S6, S8, S15
	0x03E2380C FMUL S1, S7, S1
	0x03E23810 FMUL S3, S16, S3
	0x03E23814 FADD S0, S2, S0
	0x03E23818 FADD S2, S6, S4
	0x03E2381C FMUL S4, S8, S5
	0x03E23820 FADD S1, S1, S3
	0x03E23824 FADD S8, S4, S1
	0x03E23828 FSUB S9, S0, S2
	0x03E2382C CBNZ W8, 0x3E23844

ISIL:
	001 Subtract X31, X31, 48
	002 Move [X31+16], X30
	003 Move [X31+32], X20
	004 Move [X31+40], X19
	005 Move X20, 0x5C6000
	006 Move X8, [X20+1344]
	007 Move X19, X0
	008 Move [X31], S0
	009 Move [X31+8], S1
	010 Move [X31+8], S2
	011 Move [X31+16], S3
	012 Compare X8, 0
	013 JumpIfNotEqual {19}
	014 Move X0, -53596160
	015 Add X0, X0, 2947
	016 Call 0x1C17CB8
	017 Move X8, X0
	018 Move [X20+1344], X0
	019 Add X1, X31, 0
	020 Move X0, X19
	021 NotImplemented "Instruction BLR not yet implemented."
	022 Move X20, [X31+32]
	023 Move X19, [X31+40]
	024 Move X30, [X31+16]
	025 Add X31, X31, 48
	026 Return 

Method: System.Void set_clippingSoftness(UnityEngine.Vector2 value)

Disassembly:
	0x03E23874 MOV W0, W31
	0x03E23878 LDR V3, [X8]
	0x03E2387C FMUL S3, S3, S4
	0x03E23880 FCMP S2, S3
	0x03E23884 FCSEL S2, S2, S3, GT
	0x03E23888 FCMP S0, 0x0
	0x03E2388C B.LE 0x3E238B4
	0x03E23890 FABD S1, S1, S1
	0x03E23894 FCMP S1, S2
	0x03E23898 B.MI 0x3E238B4
	0x03E2389C ADD X0, X31, 0x18
	0x03E238A0 MOV X1, X31
	0x03E238A4 BL 0x3C0B1B4
	0x03E238A8 MOVZ W0, 0x1
	0x03E238AC STP S0, S1, [X19]
	0x03E238B0 STR S2, [X19 + 0x8]
	0x03E238B4 LDP X20, X19, [X31 + 0xA0]
	0x03E238B8 LDP X22, X21, [X31 + 0x90]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x5C6000
	005 Move X8, [X20+1352]
	006 Move X19, X0
	007 Move [X31+8], S0
	008 Move [X31+16], S1
	009 Compare X8, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -53465088
	012 Add X0, X0, 2684
	013 Call 0x1C17CB8
	014 Move X8, X0
	015 Move [X20+1352], X0
	016 Add X1, X31, 8
	017 Move X0, X19
	018 NotImplemented "Instruction BLR not yet implemented."
	019 Move X20, [X31+16]
	020 Move X19, [X31+24]
	021 Move X30, [X31+32]
	022 Return 

Method: System.Void DisableRectClipping()

Disassembly:
	0x03E23900 MOV X19, X8
	0x03E23904 LDRB W8, [X22 + 0x557]
	0x03E23908 LDR X21, [X21 + 0x598]
	0x03E2390C MOV V8.16B, V1.16B
	0x03E23910 MOV V9.16B, V0.16B
	0x03E23914 MOV X20, X0
	0x03E23918 TBNZ X8, 0x0, 0x3E23930
	0x03E2391C ADRP X0, 0x2D0000
	0x03E23920 LDR X0, [X0 + 0x598]
	0x03E23924 BL 0x1C16CF4
	0x03E23928 MOVZ W8, 0x1
	0x03E2392C STRB W8, [X22 + 0x557]
	0x03E23930 LDR X0, [X21]
	0x03E23934 LDR W8, [X0 + 0xE0]
	0x03E23938 CBNZ W8, 0x3E23940

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x5C6000
	005 Move X1, [X20+1232]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -53538816
	010 Add X0, X0, 1733
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+1232], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Void SetMaterial(UnityEngine.Material material, System.Int32 index)

Disassembly:
	0x03E2393C BL 0x1C16DFC
	0x03E23940 MOV X0, X20
	0x03E23944 MOV X1, X31
	0x03E23948 MOV X2, X31
	0x03E2394C BL 0x3C354F8
	0x03E23950 TBZ X0, 0x0, 0x3E23988
	0x03E23954 CBZ X20, 0x3E23A94
	0x03E23958 ADD X8, X31, 0x8
	0x03E2395C FMOV S2, W31
	0x03E23960 MOV X0, X20
	0x03E23964 MOV V0.16B, V9.16B
	0x03E23968 MOV V1.16B, V8.16B
	0x03E2396C MOV X1, X31
	0x03E23970 BL 0x3C047B4
	0x03E23974 LDP S9, S8, [X31 + 0x8]
	0x03E23978 LDR V2, [X31 + 0x10]
	0x03E2397C LDUR V0, [X31 + 0x14]
	0x03E23980 LDR V1, [X31 + 0x1C]
	0x03E23984 B 0x3E23A68
	0x03E23988 ADRP X20, 0x5B5000
	0x03E2398C LDRB W8, [X20 + 0xA1F]

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x5C6000
	007 Move X3, [X22+1240]
	008 Move W19, W2
	009 Move X20, X1
	010 Move X21, X0
	011 Compare X3, 0
	012 JumpIfNotEqual {18}
	013 Move X0, -53661696
	014 Add X0, X0, 3738
	015 Call 0x1C17CB8
	016 Move X3, X0
	017 Move [X22+1240], X0
	018 Move X0, X21
	019 Move X1, X20
	020 Move W2, W19
	021 Move X20, [X31+32]
	022 Move X19, [X31+40]
	023 Move X22, [X31+16]
	024 Move X21, [X31+24]
	025 Move X30, [X31+48]
	026 CallNoReturn X3

Method: UnityEngine.Material GetMaterial(System.Int32 index)

Disassembly:
	0x03E23990 CBNZ W8, 0x3E239A8
	0x03E23994 ADRP X0, 0x2D0000
	0x03E23998 LDR X0, [X0 + 0x5A0]
	0x03E2399C BL 0x1C16CF4
	0x03E239A0 MOVZ W8, 0x1
	0x03E239A4 STRB W8, [X20 + 0xA1F]
	0x03E239A8 ADRP X20, 0x2D0000
	0x03E239AC LDR X20, [X20 + 0x5A0]
	0x03E239B0 ADRP X21, 0x5B5000
	0x03E239B4 LDRB W9, [X21 + 0x785]
	0x03E239B8 LDR X8, [X20]
	0x03E239BC LDR X8, [X8 + 0xB8]
	0x03E239C0 LDR V10, [X8 + 0x48]
	0x03E239C4 LDR V11, [X8 + 0x50]
	0x03E239C8 CBNZ W9, 0x3E239E0
	0x03E239CC ADRP X0, 0x2D0000
	0x03E239D0 LDR X0, [X0 + 0x5A8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x5C6000
	006 Move X2, [X21+1248]
	007 Move W19, W1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -53620736
	012 Add X0, X0, 2607
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+1248], X0
	016 Move X0, X20
	017 Move W1, W19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Void SetPopMaterial(UnityEngine.Material material, System.Int32 index)

Disassembly:
	0x03E239D4 BL 0x1C16CF4
	0x03E239D8 MOVZ W8, 0x1
	0x03E239DC STRB W8, [X21 + 0x785]
	0x03E239E0 ADRP X8, 0x2D0000
	0x03E239E4 LDR X8, [X8 + 0x5A8]
	0x03E239E8 LDR X0, [X8]
	0x03E239EC LDR W8, [X0 + 0xE0]
	0x03E239F0 CBNZ W8, 0x3E239F8
	0x03E239F4 BL 0x1C16DFC
	0x03E239F8 ADRP X8, 0xFFFFFFFFFCCC7000
	0x00000000 INVALID
	0x03E23A00 LDR V2, [X8 + 0x17C]
	0x03E23A04 FADDP S0, V0.2S
	0x03E23A08 FMUL S1, S11, S11
	0x03E23A0C FADD S0, S1, S0
	0x03E23A10 FSQRT S1, S0
	0x03E23A14 FCMP S1, S2
	0x03E23A18 B.LE 0x3E23A30
	0x03E23A1C UNIMPLEMENTED
	0x03E23A20 MOVZ W8, 0xC2C80000
	0x00000000 INVALID

ISIL:
	001 Move [X31-48], X30
	002 Move [X31+16], X22
	003 Move [X31+24], X21
	004 Move [X31+32], X20
	005 Move [X31+40], X19
	006 Move X22, 0x5C6000
	007 Move X3, [X22+1256]
	008 Move W19, W2
	009 Move X20, X1
	010 Move X21, X0
	011 Compare X3, 0
	012 JumpIfNotEqual {18}
	013 Move X0, -53645312
	014 Add X0, X0, 3823
	015 Call 0x1C17CB8
	016 Move X3, X0
	017 Move [X22+1256], X0
	018 Move X0, X21
	019 Move X1, X20
	020 Move W2, W19
	021 Move X20, [X31+32]
	022 Move X19, [X31+40]
	023 Move X22, [X31+16]
	024 Move X21, [X31+24]
	025 Move X30, [X31+48]
	026 CallNoReturn X3

Method: System.Void SetTexture(UnityEngine.Texture texture)

Disassembly:
	0x03E23A28 FDIV S1, S11, S1
	0x03E23A2C B 0x3E23A64
	0x03E23A30 ADRP X21, 0x5B5000
	0x03E23A34 LDRB W8, [X21 + 0x783]
	0x03E23A38 CBNZ W8, 0x3E23A50
	0x03E23A3C ADRP X0, 0x2D0000
	0x03E23A40 LDR X0, [X0 + 0x5A0]
	0x03E23A44 BL 0x1C16CF4
	0x03E23A48 MOVZ W8, 0x1
	0x03E23A4C STRB W8, [X21 + 0x783]
	0x03E23A50 LDR X8, [X20]
	0x03E23A54 LDR X8, [X8 + 0xB8]
	0x03E23A58 LDR V0, [X8]
	0x03E23A5C LDR V1, [X8 + 0x8]
	0x03E23A60 MOVZ W8, 0xC2C80000
	0x03E23A64 FMOV S2, W8
	0x03E23A68 STP S9, S8, [X19]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x5C6000
	006 Move X2, [X21+1264]
	007 Move X19, X1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -53575680
	012 Add X0, X0, 126
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+1264], X0
	016 Move X0, X20
	017 Move X1, X19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Void SetAlphaTexture(UnityEngine.Texture texture)

Disassembly:
	0x03E23A6C STR S2, [X19 + 0x8]
	0x03E23A70 STUR D0, [X19 + 0xC]
	0x03E23A74 STR S1, [X19 + 0x14]
	0x03E23A78 LDP X20, X19, [X31 + 0x60]
	0x03E23A7C LDP X22, X21, [X31 + 0x50]
	0x03E23A80 LDR X30, [X31 + 0x40]
	0x03E23A84 LDP D9, D8, [X31 + 0x30]
	0x03E23A88 LDP D11, D10, [X31 + 0x20]
	0x03E23A8C ADD X31, X31, 0x70
	0x03E23A90 RET
	0x03E23A94 BL 0x1C16F20
	0x03E23A98 SUB X31, X31, 0x50
	0x03E23A9C STP D9, D8, [X31 + 0x10]
	0x03E23AA0 STP X30, X23, [X31 + 0x20]
	0x03E23AA4 STP X22, X21, [X31 + 0x30]
	0x03E23AA8 STP X20, X19, [X31 + 0x40]
	0x03E23AAC ADRP X22, 0x5C5000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x5C6000
	006 Move X2, [X21+1272]
	007 Move X19, X1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -53448704
	012 Add X0, X0, 1347
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+1272], X0
	016 Move X0, X20
	017 Move X1, X19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Void SetMesh(UnityEngine.Mesh mesh)

Disassembly:
	0x03E23AB0 LDRB W8, [X22 + 0x556]
	0x03E23AB4 MOV X19, X2
	0x03E23AB8 MOV X21, X1
	0x03E23ABC MOV V8.16B, V1.16B
	0x03E23AC0 MOV V9.16B, V0.16B
	0x03E23AC4 MOV X20, X0
	0x03E23AC8 TBNZ X8, 0x0, 0x3E23AE0
	0x03E23ACC ADRP X0, 0x326000
	0x03E23AD0 LDR X0, [X0 + 0x6B8]
	0x03E23AD4 BL 0x1C16CF4
	0x03E23AD8 MOVZ W8, 0x1
	0x03E23ADC STRB W8, [X22 + 0x556]
	0x03E23AE0 ADRP X23, 0x5B6000
	0x03E23AE4 ADRP X22, 0x326000
	0x03E23AE8 LDRB W8, [X23 + 0x78F]
	0x03E23AEC LDR X22, [X22 + 0x6B8]
	0x03E23AF0 STR W31, [X31 + 0x8]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x5C6000
	006 Move X2, [X21+1280]
	007 Move X19, X1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -53587968
	012 Add X0, X0, 3152
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+1280], X0
	016 Move X0, X20
	017 Move X1, X19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Void Clear()

Disassembly:
	0x03E23AF4 STR X31, [X31]
	0x03E23AF8 CBNZ W8, 0x3E23B10
	0x03E23AFC ADRP X0, 0x2D8000
	0x03E23B00 LDR X0, [X0 + 0xF08]
	0x03E23B04 BL 0x1C16CF4
	0x03E23B08 MOVZ W8, 0x1
	0x03E23B0C STRB W8, [X23 + 0x78F]
	0x03E23B10 ADRP X8, 0x2D8000
	0x03E23B14 LDR X8, [X8 + 0xF08]
	0x03E23B18 LDR X8, [X8]
	0x03E23B1C LDR X8, [X8 + 0xB8]
	0x03E23B20 LDR V0, [X8]
	0x03E23B24 STR D0, [X19]
	0x03E23B28 LDR X0, [X22]
	0x03E23B2C LDR W8, [X0 + 0xE0]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x5C6000
	005 Move X1, [X20+1288]
	006 Move X19, X0
	007 Compare X1, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -53604352
	010 Add X0, X0, 3812
	011 Call 0x1C17CB8
	012 Move X1, X0
	013 Move [X20+1288], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move X30, [X31+32]
	018 CallNoReturn X1

Method: System.Void SetAlpha(System.Single alpha)

Disassembly:
	0x03E23B30 CBNZ W8, 0x3E23B38
	0x03E23B34 BL 0x1C16DFC
	0x03E23B38 ADD X2, X31, 0x0
	0x03E23B3C MOV X0, X20
	0x03E23B40 MOV V0.16B, V9.16B
	0x03E23B44 MOV V1.16B, V8.16B
	0x03E23B48 MOV X1, X21
	0x03E23B4C BL 0x3E234BC
	0x03E23B50 MOV W21, W0
	0x03E23B54 TBZ X0, 0x0, 0x3E23B74

ISIL:
	001 Move [X31-32], D8
	002 Move [X31+16], X30
	003 Move [X31+24], X19
	004 Move V8, V0
	005 Move X19, X0
	006 Call CanvasRenderer.GetColor, X0
	007 Move X0, X19
	008 Move X30, [X31+16]
	009 Move X19, [X31+24]
	010 Move V3, V8
	011 Move V8, [X31+32]
	012 Call CanvasRenderer.SetColor, X0, X1
	013 Return 

Method: System.Void SetMaterial(UnityEngine.Material material, UnityEngine.Texture texture)

Disassembly:
	0x03E23B58 CBZ X20, 0x3E23B90
	0x03E23B5C LDP S1, S2, [X31 + 0x4]
	0x03E23B60 LDR V0, [X31]
	0x03E23B64 MOV X0, X20
	0x03E23B68 MOV X1, X31
	0x03E23B6C BL 0x3C40B58
	0x03E23B70 STP S0, S1, [X19]
	0x03E23B74 AND W0, W21, 0x1
	0x03E23B78 LDP X20, X19, [X31 + 0x40]
	0x03E23B7C LDP X22, X21, [X31 + 0x30]
	0x03E23B80 LDP X30, X23, [X31 + 0x20]
	0x03E23B84 LDP D9, D8, [X31 + 0x10]
	0x03E23B88 ADD X31, X31, 0x50
	0x03E23B8C RET
	0x03E23B90 BL 0x1C16F20
	0x03E23B94 STR D10, [X31 - 0x40]!
	0x03E23B98 STP D9, D8, [X31 + 0x10]
	0x03E23B9C STP X30, X21, [X31 + 0x20]
	0x03E23BA0 STP X20, X19, [X31 + 0x30]
	0x03E23BA4 ADRP X20, 0x5C5000
	0x03E23BA8 ADRP X21, 0x2D0000
	0x03E23BAC LDRB W8, [X20 + 0x558]
	0x03E23BB0 LDR X21, [X21 + 0x598]
	0x03E23BB4 MOV V10.16B, V2.16B
	0x03E23BB8 MOV V8.16B, V1.16B
	0x03E23BBC MOV V9.16B, V0.16B
	0x03E23BC0 MOV X19, X0
	0x03E23BC4 TBNZ X8, 0x0, 0x3E23BDC
	0x03E23BC8 ADRP X0, 0x2D0000
	0x03E23BCC LDR X0, [X0 + 0x598]
	0x03E23BD0 BL 0x1C16CF4
	0x03E23BD4 MOVZ W8, 0x1
	0x03E23BD8 STRB W8, [X20 + 0x558]
	0x03E23BDC LDR X0, [X21]
	0x03E23BE0 LDR W8, [X0 + 0xE0]
	0x03E23BE4 CBNZ W8, 0x3E23BEC
	0x03E23BE8 BL 0x1C16DFC
	0x03E23BEC MOV X0, X19
	0x03E23BF0 MOV X1, X31
	0x03E23BF4 MOV X2, X31
	0x03E23BF8 BL 0x3C3883C
	0x03E23BFC TBNZ X0, 0x0, 0x3E23C24
	0x03E23C00 CBZ X19, 0x3E23C40
	0x03E23C04 MOV X0, X19
	0x03E23C08 MOV V0.16B, V9.16B
	0x03E23C0C MOV V1.16B, V8.16B
	0x03E23C10 MOV V2.16B, V10.16B
	0x03E23C14 MOV X1, X31
	0x03E23C18 BL 0x3C045DC
	0x03E23C1C MOV V9.16B, V0.16B
	0x03E23C20 MOV V8.16B, V1.16B
	0x03E23C24 MOV V0.16B, V9.16B
	0x03E23C28 MOV V1.16B, V8.16B
	0x03E23C2C LDP X20, X19, [X31 + 0x30]
	0x03E23C30 LDP X30, X21, [X31 + 0x20]
	0x03E23C34 LDP D9, D8, [X31 + 0x10]
	0x03E23C38 LDR V10, [X31], #0x40
	0x03E23C3C RET
	0x03E23C40 BL 0x1C16F20
	0x03E23C44 STP D11, D10, [X31 - 0x70]!
	0x03E23C48 STP D9, D8, [X31 + 0x10]
	0x03E23C4C STR X30, [X31 + 0x20]
	0x03E23C50 STP X26, X25, [X31 + 0x30]
	0x03E23C54 STP X24, X23, [X31 + 0x40]
	0x03E23C58 STP X22, X21, [X31 + 0x50]
	0x03E23C5C STP X20, X19, [X31 + 0x60]
	0x03E23C60 ADRP X23, 0x5C5000
	0x03E23C64 ADRP X24, 0x2D0000
	0x03E23C68 LDRB W8, [X23 + 0x559]
	0x03E23C6C LDR X24, [X24 + 0x598]
	0x03E23C70 MOV W22, W3
	0x03E23C74 MOV W21, W2
	0x03E23C78 MOV W20, W1
	0x03E23C7C MOV X19, X0

ISIL:
	001 Move [X31-48], X30
	002 Move [X31-40], X23
	003 Move [X31+16], X22
	004 Move [X31+24], X21
	005 Move [X31+32], X20
	006 Move [X31+40], X19
	007 Move X22, 0x5C6000
	008 Move W8, [X22+1296]
	009 Move X19, X2
	010 Move X21, X1
	011 Move X20, X0
	012 Move TEMP, X8
	013 And TEMP, TEMP, 1
	014 Compare TEMP, 1
	015 JumpIfEqual {21}
	016 Move X0, 0x2D1000
	017 Move X0, [X0+1448]
	018 Call 0x1C17CF4
	019 Move W8, 1
	020 Move [X22+1296], W8
	021 Move X23, 0x5C6000
	022 Move X22, 0x2D1000
	023 Move X8, [X23+1160]
	024 Move X22, [X22+1448]
	025 Compare X8, 0
	026 JumpIfNotEqual {32}
	027 Move X0, -53530624
	028 Add X0, X0, 1310
	029 Call 0x1C17CB8
	030 Move X8, X0
	031 Move [X23+1160], X0
	032 Move X0, X20
	033 NotImplemented "Instruction BLR not yet implemented."
	034 Move X8, [X22]
	035 Move W22, W0
	036 Move W9, [X8+224]
	037 Compare W9, 0
	038 JumpIfNotEqual {41}
	039 Move X0, X8
	040 Call 0x1C17DFC
	041 Move W0, 1
	042 Move W1, W22
	043 Move X2, X31
	044 Call Math.Max, X0, X1
	045 Move X23, 0x5C6000
	046 Move X8, [X23+1168]
	047 Move W22, W0
	048 Compare X8, 0
	049 JumpIfNotEqual {55}
	050 Move X0, -53538816
	051 Add X0, X0, 1673
	052 Call 0x1C17CB8
	053 Move X8, X0
	054 Move [X23+1168], X0
	055 Move X0, X20
	056 Move W1, W22
	057 NotImplemented "Instruction BLR not yet implemented."
	058 Move X22, 0x5C6000
	059 Move X8, [X22+1240]
	060 Compare X8, 0
	061 JumpIfNotEqual {67}
	062 Move X0, -53661696
	063 Add X0, X0, 3738
	064 Call 0x1C17CB8
	065 Move X8, X0
	066 Move [X22+1240], X0
	067 Move X0, X20
	068 Move X1, X21
	069 Move W2, W31
	070 NotImplemented "Instruction BLR not yet implemented."
	071 Move X21, 0x5C6000
	072 Move X2, [X21+1264]
	073 Compare X2, 0
	074 JumpIfNotEqual {80}
	075 Move X0, -53575680
	076 Add X0, X0, 126
	077 Call 0x1C17CB8
	078 Move X2, X0
	079 Move [X21+1264], X0
	080 Move X0, X20
	081 Move X1, X19
	082 Move X20, [X31+32]
	083 Move X19, [X31+40]
	084 Move X22, [X31+16]
	085 Move X21, [X31+24]
	086 Move X30, [X31+48]
	087 Move X23, [X31+56]
	088 CallNoReturn X2

Method: UnityEngine.Material GetMaterial()

Disassembly:
	0x03E23C80 TBNZ X8, 0x0, 0x3E23CB0
	0x03E23C84 ADRP X0, 0x2D0000
	0x03E23C88 LDR X0, [X0 + 0x598]
	0x03E23C8C BL 0x1C16CF4
	0x03E23C90 ADRP X0, 0x326000
	0x03E23C94 LDR X0, [X0 + 0x6B8]
	0x03E23C98 BL 0x1C16CF4
	0x03E23C9C ADRP X0, 0x2F7000
	0x03E23CA0 LDR X0, [X0 + 0xC70]
	0x03E23CA4 BL 0x1C16CF4
	0x03E23CA8 MOVZ W8, 0x1
	0x03E23CAC STRB W8, [X23 + 0x559]
	0x03E23CB0 LDR X0, [X24]
	0x03E23CB4 LDR W8, [X0 + 0xE0]
	0x03E23CB8 CBNZ W8, 0x3E23CC0
	0x03E23CBC BL 0x1C16DFC

ISIL:
	001 Move [X31-32], X30
	002 Move [X31+16], X20
	003 Move [X31+24], X19
	004 Move X20, 0x5C6000
	005 Move X2, [X20+1248]
	006 Move X19, X0
	007 Compare X2, 0
	008 JumpIfNotEqual {14}
	009 Move X0, -53620736
	010 Add X0, X0, 2607
	011 Call 0x1C17CB8
	012 Move X2, X0
	013 Move [X20+1248], X0
	014 Move X0, X19
	015 Move X20, [X31+16]
	016 Move X19, [X31+24]
	017 Move W1, W31
	018 Move X30, [X31+32]
	019 CallNoReturn X2

Method: System.Void SplitUIVertexStreams(System.Collections.Generic.List`1<UnityEngine.UIVertex> verts, System.Collections.Generic.List`1<UnityEngine.Vector3> positions, System.Collections.Generic.List`1<UnityEngine.Color32> colors, System.Collections.Generic.List`1<UnityEngine.Vector4> uv0S, System.Collections.Generic.List`1<UnityEngine.Vector4> uv1S, System.Collections.Generic.List`1<UnityEngine.Vector4> uv2S, System.Collections.Generic.List`1<UnityEngine.Vector4> uv3S, System.Collections.Generic.List`1<UnityEngine.Vector3> normals, System.Collections.Generic.List`1<UnityEngine.Vector4> tangents, System.Collections.Generic.List`1<System.Int32> indices)

Disassembly:
	0x03E23CC0 MOV X0, X19
	0x03E23CC4 MOV X1, X31
	0x03E23CC8 MOV X2, X31
	0x03E23CCC BL 0x3C3883C
	0x03E23CD0 TBNZ X0, 0x0, 0x3E23DD0
	0x03E23CD4 TBZ X22, 0x0, 0x3E23D90
	0x03E23CD8 CBZ X19, 0x3E23EB8
	0x03E23CDC MOV X0, X19
	0x03E23CE0 MOV X1, X31
	0x03E23CE4 BL 0x3C40C8C
	0x03E23CE8 CMP W0, 0x1
	0x03E23CEC B.LT 0x3E23D90
	0x03E23CF0 ADRP X25, 0x326000
	0x03E23CF4 ADRP X26, 0x2F7000
	0x03E23CF8 LDR X25, [X25 + 0x6B8]
	0x03E23CFC LDR X26, [X26 + 0xC70]
	0x03E23D00 MOV W22, W31
	0x03E23D04 MOV X0, X19
	0x03E23D08 MOV W1, W22
	0x03E23D0C MOV X2, X31
	0x03E23D10 BL 0x3C410A0
	0x03E23D14 CBZ X0, 0x3E23D2C
	0x03E23D18 LDR X8, [X26]
	0x03E23D1C LDR X9, [X0]
	0x03E23D20 CMP X9, X8
	0x03E23D24 CSEL X23, X0, X31, EQ
	0x03E23D28 B 0x3E23D30
	0x03E23D2C MOV X23, X31
	0x03E23D30 LDR X0, [X24]
	0x03E23D34 LDR W8, [X0 + 0xE0]
	0x03E23D38 CBNZ W8, 0x3E23D40
	0x03E23D3C BL 0x1C16DFC
	0x03E23D40 MOV X0, X23
	0x03E23D44 MOV X1, X31
	0x03E23D48 MOV X2, X31
	0x03E23D4C BL 0x3C354F8
	0x03E23D50 TBZ X0, 0x0, 0x3E23D78
	0x03E23D54 LDR X0, [X25]
	0x03E23D58 LDR W8, [X0 + 0xE0]
	0x03E23D5C CBNZ W8, 0x3E23D64
	0x03E23D60 BL 0x1C16DFC
	0x03E23D64 MOVZ W3, 0x1
	0x03E23D68 MOV X0, X23
	0x03E23D6C MOV W1, W20
	0x03E23D70 MOV W2, W31
	0x03E23D74 BL 0x3E23C44
	0x03E23D78 MOV X0, X19
	0x03E23D7C MOV X1, X31
	0x03E23D80 ADD W22, W22, 0x1
	0x03E23D84 BL 0x3C40C8C
	0x03E23D88 CMP W22, W0
	0x03E23D8C B.LT 0x3E23D04

ISIL:
	001 Subtract X31, X31, 112
	002 Move [X31+16], X29
	003 Move [X31+24], X30
	004 Move [X31+32], X28
	005 Move [X31+40], X27
	006 Move [X31+48], X26
	007 Move [X31+56], X25
	008 Move [X31+64], X24
	009 Move [X31+72], X23
	010 Move [X31+80], X22
	011 Move [X31+88], X21
	012 Move [X31+96], X20
	013 Move [X31+104], X19
	014 Move X29, 0x5C6000
	015 Move X8, [X29+1312]
	016 Move X28, [X31+112]
	017 Move X19, [X31+120]
	018 Move X21, X7
	019 Move X22, X6
	020 Move X23, X5
	021 Move X24, X4
	022 Move X25, X3
	023 Move X26, X2
	024 Move X27, X1
	025 Move X20, X0
	026 Compare X8, 0
	027 JumpIfNotEqual {33}
	028 Move X0, -53432320
	029 Add X0, X0, 212
	030 Call 0x1C17CB8
	031 Move X8, X0
	032 Move [X29+1312], X0
	033 Move X0, X20
	034 Move X1, X27
	035 Move X2, X26
	036 Move X3, X25
	037 Move X4, X24
	038 Move X5, X23
	039 Move X6, X22
	040 Move X7, X21
	041 Move [X31], X28
	042 NotImplemented "Instruction BLR not yet implemented."
	043 Move X21, 0x5C6000
	044 Move X2, [X21+1304]
	045 Compare X2, 0
	046 JumpIfNotEqual {52}
	047 Move X0, -53587968
	048 Add X0, X0, 3206
	049 Call 0x1C17CB8
	050 Move X2, X0
	051 Move [X21+1304], X0
	052 Move X0, X20
	053 Move X1, X19
	054 Move X20, [X31+96]
	055 Move X19, [X31+104]
	056 Move X22, [X31+80]
	057 Move X21, [X31+88]
	058 Move X24, [X31+64]
	059 Move X23, [X31+72]
	060 Move X26, [X31+48]
	061 Move X25, [X31+56]
	062 Move X28, [X31+32]
	063 Move X27, [X31+40]
	064 Move X29, [X31+16]
	065 Move X30, [X31+24]
	066 Add X31, X31, 112
	067 CallNoReturn X2

Method: System.Void CreateUIVertexStream(System.Collections.Generic.List`1<UnityEngine.UIVertex> verts, System.Collections.Generic.List`1<UnityEngine.Vector3> positions, System.Collections.Generic.List`1<UnityEngine.Color32> colors, System.Collections.Generic.List`1<UnityEngine.Vector4> uv0S, System.Collections.Generic.List`1<UnityEngine.Vector4> uv1S, System.Collections.Generic.List`1<UnityEngine.Vector4> uv2S, System.Collections.Generic.List`1<UnityEngine.Vector4> uv3S, System.Collections.Generic.List`1<UnityEngine.Vector3> normals, System.Collections.Generic.List`1<UnityEngine.Vector4> tangents, System.Collections.Generic.List`1<System.Int32> indices)

Disassembly:
	0x03E23E70 FSUB S0, S1, S9
	0x03E23E74 FSUB S9, S1, S11
	0x03E23E78 MOV X0, X19
	0x03E23E7C MOV V1.16B, V8.16B
	0x03E23E80 MOV X1, X31
	0x03E23E84 BL 0x3C3E648
	0x03E23E88 MOV X0, X19
	0x03E23E8C MOV V0.16B, V9.16B
	0x03E23E90 LDP X20, X19, [X31 + 0x60]
	0x03E23E94 LDP X22, X21, [X31 + 0x50]
	0x03E23E98 LDP X24, X23, [X31 + 0x40]
	0x03E23E9C LDP X26, X25, [X31 + 0x30]
	0x03E23EA0 LDR X30, [X31 + 0x20]
	0x03E23EA4 LDP D9, D8, [X31 + 0x10]
	0x03E23EA8 MOV V1.16B, V10.16B
	0x03E23EAC MOV X1, X31
	0x03E23EB0 LDP D11, D10, [X31], #0x70
	0x03E23EB4 B 0x3C3E764
	0x03E23EB8 BL 0x1C16F20
	0x03E23EBC ADRP X0, 0x2DA000
	0x03E23EC0 LDR X0, [X0 + 0xF78]
	0x03E23EC4 BL 0x1C16D08
	0x03E23EC8 BL 0x1C16F10
	0x03E23ECC MOV X19, X0
	0x03E23ED0 ADRP X0, 0x322000
	0x03E23ED4 LDR X0, [X0 + 0xFF8]
	0x03E23ED8 BL 0x1C16D08
	0x03E23EDC MOV X1, X0
	0x03E23EE0 MOV X0, X19
	0x03E23EE4 MOV X2, X31
	0x03E23EE8 BL 0x3379B6C
	0x03E23EEC ADRP X0, 0x323000
	0x03E23EF0 LDR X0, [X0]
	0x03E23EF4 BL 0x1C16D08
	0x03E23EF8 MOV X1, X0
	0x03E23EFC MOV X0, X19
	0x03E23F00 BL 0x1C16DEC
	0x03E23F04 STP D9, D8, [X31 - 0x50]!
	0x03E23F08 STP X30, X25, [X31 + 0x10]

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X29, 0x5C6000
	014 Move X8, [X29+1320]
	015 Move X27, [X31+96]
	016 Move X28, [X31+104]
	017 Move X19, X7
	018 Move X20, X6
	019 Move X21, X5
	020 Move X22, X4
	021 Move X23, X3
	022 Move X24, X2
	023 Move X25, X1
	024 Move X26, X0
	025 Compare X8, 0
	026 JumpIfNotEqual {32}
	027 Move X0, -53669888
	028 Add X0, X0, 3286
	029 Call 0x1C17CB8
	030 Move X8, X0
	031 Move [X29+1320], X0
	032 Move [X31+96], X27
	033 Move [X31+104], X28
	034 Move X0, X26
	035 Move X1, X25
	036 Move X2, X24
	037 Move X3, X23
	038 Move X4, X22
	039 Move X5, X21
	040 Move X6, X20
	041 Move X7, X19
	042 Move X20, [X31+80]
	043 Move X19, [X31+88]
	044 Move X22, [X31+64]
	045 Move X21, [X31+72]
	046 Move X24, [X31+48]
	047 Move X23, [X31+56]
	048 Move X26, [X31+32]
	049 Move X25, [X31+40]
	050 Move X28, [X31+16]
	051 Move X27, [X31+24]
	052 Move X29, [X31+96]
	053 Move X30, [X31+104]
	054 CallNoReturn X8

Method: System.Void AddUIVertexStream(System.Collections.Generic.List`1<UnityEngine.UIVertex> verts, System.Collections.Generic.List`1<UnityEngine.Vector3> positions, System.Collections.Generic.List`1<UnityEngine.Color32> colors, System.Collections.Generic.List`1<UnityEngine.Vector4> uv0S, System.Collections.Generic.List`1<UnityEngine.Vector4> uv1S, System.Collections.Generic.List`1<UnityEngine.Vector4> uv2S, System.Collections.Generic.List`1<UnityEngine.Vector4> uv3S, System.Collections.Generic.List`1<UnityEngine.Vector3> normals, System.Collections.Generic.List`1<UnityEngine.Vector4> tangents)

Disassembly:
	0x03E23FA8 ADRP X25, 0x2F7000
	0x03E23FAC LDR X24, [X24 + 0x6B8]
	0x03E23FB0 LDR X25, [X25 + 0xC70]
	0x03E23FB4 MOV W21, W31
	0x03E23FB8 MOV X0, X19
	0x03E23FBC MOV W1, W21
	0x03E23FC0 MOV X2, X31
	0x03E23FC4 BL 0x3C410A0
	0x03E23FC8 CBZ X0, 0x3E23FE0
	0x03E23FCC LDR X8, [X25]
	0x03E23FD0 LDR X9, [X0]
	0x03E23FD4 CMP X9, X8
	0x03E23FD8 CSEL X22, X0, X31, EQ
	0x03E23FDC B 0x3E23FE4
	0x03E23FE0 MOV X22, X31
	0x03E23FE4 LDR X0, [X23]
	0x03E23FE8 LDR W8, [X0 + 0xE0]
	0x03E23FEC CBNZ W8, 0x3E23FF4
	0x03E23FF0 BL 0x1C16DFC
	0x03E23FF4 MOV X0, X22
	0x03E23FF8 MOV X1, X31
	0x03E23FFC MOV X2, X31
	0x03E24000 BL 0x3C354F8
	0x03E24004 TBZ X0, 0x0, 0x3E24028
	0x03E24008 LDR X0, [X24]
	0x03E2400C LDR W8, [X0 + 0xE0]
	0x03E24010 CBNZ W8, 0x3E24018
	0x03E24014 BL 0x1C16DFC
	0x03E24018 MOVZ W2, 0x1
	0x03E2401C MOV X0, X22
	0x03E24020 MOV W1, W31
	0x03E24024 BL 0x3E23F04
	0x03E24028 MOV X0, X19
	0x03E2402C MOV X1, X31
	0x03E24030 ADD W21, W21, 0x1
	0x03E24034 BL 0x3C40C8C
	0x03E24038 CMP W21, W0
	0x03E2403C B.LT 0x3E23FB8
	0x03E24040 CBZ X19, 0x3E24158

ISIL:
	001 Move [X31-96], X30
	002 Move [X31+16], X28
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X28, 0x5C6000
	013 Move X8, [X28+1312]
	014 Move X27, [X31+96]
	015 Move X19, X7
	016 Move X20, X6
	017 Move X21, X5
	018 Move X22, X4
	019 Move X23, X3
	020 Move X24, X2
	021 Move X25, X1
	022 Move X26, X0
	023 Compare X8, 0
	024 JumpIfNotEqual {30}
	025 Move X0, -53432320
	026 Add X0, X0, 212
	027 Call 0x1C17CB8
	028 Move X8, X0
	029 Move [X28+1312], X0
	030 Move [X31+96], X27
	031 Move X0, X26
	032 Move X1, X25
	033 Move X2, X24
	034 Move X3, X23
	035 Move X4, X22
	036 Move X5, X21
	037 Move X6, X20
	038 Move X7, X19
	039 Move X20, [X31+80]
	040 Move X19, [X31+88]
	041 Move X22, [X31+64]
	042 Move X21, [X31+72]
	043 Move X24, [X31+48]
	044 Move X23, [X31+56]
	045 Move X26, [X31+32]
	046 Move X25, [X31+40]
	047 Move X28, [X31+16]
	048 Move X27, [X31+24]
	049 Move X30, [X31+96]
	050 CallNoReturn X8

Method: System.Void SplitIndicesStreamsInternal(System.Object verts, System.Object indices)

Disassembly:
	0x03E23E2C MOV X0, X19
	0x03E23E30 MOV X1, X31
	0x03E23E34 MOV V11.16B, V0.16B
	0x03E23E38 MOV V8.16B, V1.16B
	0x03E23E3C BL 0x3C3E6D4
	0x03E23E40 MOV V9.16B, V0.16B
	0x03E23E44 MOV V10.16B, V1.16B
	0x03E23E48 CBZ W20, 0x3E23E6C
	0x03E23E4C CMP W20, 0x1
	0x03E23E50 B.NE 0x3E23EBC
	0x03E23E54 FMOV S0, 1
	0x03E23E58 FSUB S1, S0, S10
	0x03E23E5C FSUB S10, S0, S8
	0x03E23E60 MOV V8.16B, V1.16B
	0x03E23E64 MOV V0.16B, V11.16B
	0x03E23E68 B 0x3E23E78
	0x03E23E6C FMOV S1, 1

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x5C6000
	006 Move X2, [X21+1304]
	007 Move X19, X1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -53587968
	012 Add X0, X0, 3206
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+1304], X0
	016 Move X0, X20
	017 Move X1, X19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Void SplitUIVertexStreamsInternal(System.Object verts, System.Object positions, System.Object colors, System.Object uv0S, System.Object uv1S, System.Object uv2S, System.Object uv3S, System.Object normals, System.Object tangents)

Disassembly:
	0x03E23D90 CBZ X19, 0x3E23EB8
	0x03E23D94 MOV X0, X19
	0x03E23D98 MOV X1, X31
	0x03E23D9C BL 0x3C3EA28
	0x03E23DA0 CBZ W20, 0x3E23DB8
	0x03E23DA4 CMP W20, 0x1
	0x03E23DA8 B.NE 0x3E23EBC
	0x03E23DAC FMOV S2, 1
	0x03E23DB0 FSUB S1, S2, S1
	0x03E23DB4 B 0x3E23DC0
	0x03E23DB8 FMOV S2, 1
	0x03E23DBC FSUB S0, S2, S0
	0x03E23DC0 MOV X0, X19
	0x03E23DC4 MOV X1, X31
	0x03E23DC8 BL 0x3C3EAB8
	0x03E23DCC TBZ X21, 0x0, 0x3E23DF0
	0x03E23DD0 LDP X20, X19, [X31 + 0x60]
	0x03E23DD4 LDP X22, X21, [X31 + 0x50]
	0x03E23DD8 LDP X24, X23, [X31 + 0x40]
	0x03E23DDC LDP X26, X25, [X31 + 0x30]
	0x03E23DE0 LDR X30, [X31 + 0x20]
	0x03E23DE4 LDP D9, D8, [X31 + 0x10]
	0x03E23DE8 LDP D11, D10, [X31], #0x70
	0x03E23DEC RET
	0x03E23DF0 MOV X0, X19
	0x03E23DF4 MOV X1, X31
	0x03E23DF8 BL 0x3C3E7F0
	0x03E23DFC CBZ W20, 0x3E23E10
	0x03E23E00 CMP W20, 0x1
	0x03E23E04 B.NE 0x3E23EBC
	0x03E23E08 FNEG S1, S1
	0x03E23E0C B 0x3E23E14
	0x03E23E10 FNEG S0, S0
	0x03E23E14 MOV X0, X19
	0x03E23E18 MOV X1, X31
	0x03E23E1C BL 0x3C3E880
	0x03E23E20 MOV X0, X19
	0x03E23E24 MOV X1, X31
	0x03E23E28 BL 0x3C3E5B8

ISIL:
	001 Move [X31-96], X30
	002 Move [X31+16], X28
	003 Move [X31+24], X27
	004 Move [X31+32], X26
	005 Move [X31+40], X25
	006 Move [X31+48], X24
	007 Move [X31+56], X23
	008 Move [X31+64], X22
	009 Move [X31+72], X21
	010 Move [X31+80], X20
	011 Move [X31+88], X19
	012 Move X28, 0x5C6000
	013 Move X8, [X28+1312]
	014 Move X27, [X31+96]
	015 Move X19, X7
	016 Move X20, X6
	017 Move X21, X5
	018 Move X22, X4
	019 Move X23, X3
	020 Move X24, X2
	021 Move X25, X1
	022 Move X26, X0
	023 Compare X8, 0
	024 JumpIfNotEqual {30}
	025 Move X0, -53432320
	026 Add X0, X0, 212
	027 Call 0x1C17CB8
	028 Move X8, X0
	029 Move [X28+1312], X0
	030 Move [X31+96], X27
	031 Move X0, X26
	032 Move X1, X25
	033 Move X2, X24
	034 Move X3, X23
	035 Move X4, X22
	036 Move X5, X21
	037 Move X6, X20
	038 Move X7, X19
	039 Move X20, [X31+80]
	040 Move X19, [X31+88]
	041 Move X22, [X31+64]
	042 Move X21, [X31+72]
	043 Move X24, [X31+48]
	044 Move X23, [X31+56]
	045 Move X26, [X31+32]
	046 Move X25, [X31+40]
	047 Move X28, [X31+16]
	048 Move X27, [X31+24]
	049 Move X30, [X31+96]
	050 CallNoReturn X8

Method: System.Void CreateUIVertexStreamInternal(System.Object verts, System.Object positions, System.Object colors, System.Object uv0S, System.Object uv1S, System.Object uv2S, System.Object uv3S, System.Object normals, System.Object tangents, System.Object indices)

Disassembly:
	0x03E23F0C STP X24, X23, [X31 + 0x20]
	0x03E23F10 STP X22, X21, [X31 + 0x30]
	0x03E23F14 STP X20, X19, [X31 + 0x40]
	0x03E23F18 ADRP X22, 0x5C5000
	0x03E23F1C ADRP X23, 0x2D0000
	0x03E23F20 LDRB W8, [X22 + 0x55A]
	0x03E23F24 LDR X23, [X23 + 0x598]
	0x03E23F28 MOV W21, W2
	0x03E23F2C MOV W20, W1
	0x03E23F30 MOV X19, X0
	0x03E23F34 TBNZ X8, 0x0, 0x3E23F64
	0x03E23F38 ADRP X0, 0x2D0000
	0x03E23F3C LDR X0, [X0 + 0x598]
	0x03E23F40 BL 0x1C16CF4
	0x03E23F44 ADRP X0, 0x326000
	0x03E23F48 LDR X0, [X0 + 0x6B8]
	0x03E23F4C BL 0x1C16CF4
	0x03E23F50 ADRP X0, 0x2F7000
	0x03E23F54 LDR X0, [X0 + 0xC70]
	0x03E23F58 BL 0x1C16CF4
	0x03E23F5C MOVZ W8, 0x1
	0x03E23F60 STRB W8, [X22 + 0x55A]
	0x03E23F64 LDR X0, [X23]
	0x03E23F68 LDR W8, [X0 + 0xE0]
	0x03E23F6C CBNZ W8, 0x3E23F74
	0x03E23F70 BL 0x1C16DFC
	0x03E23F74 MOV X0, X19
	0x03E23F78 MOV X1, X31
	0x03E23F7C MOV X2, X31
	0x03E23F80 BL 0x3C3883C
	0x03E23F84 TBNZ X0, 0x0, 0x3E240AC
	0x03E23F88 TBZ X21, 0x0, 0x3E24040
	0x03E23F8C CBZ X19, 0x3E24158
	0x03E23F90 MOV X0, X19
	0x03E23F94 MOV X1, X31
	0x03E23F98 BL 0x3C40C8C
	0x03E23F9C CMP W0, 0x1
	0x03E23FA0 B.LT 0x3E24040
	0x03E23FA4 ADRP X24, 0x326000

ISIL:
	001 Move [X31-96], X29
	002 Move [X31-88], X30
	003 Move [X31+16], X28
	004 Move [X31+24], X27
	005 Move [X31+32], X26
	006 Move [X31+40], X25
	007 Move [X31+48], X24
	008 Move [X31+56], X23
	009 Move [X31+64], X22
	010 Move [X31+72], X21
	011 Move [X31+80], X20
	012 Move [X31+88], X19
	013 Move X29, 0x5C6000
	014 Move X8, [X29+1320]
	015 Move X27, [X31+96]
	016 Move X28, [X31+104]
	017 Move X19, X7
	018 Move X20, X6
	019 Move X21, X5
	020 Move X22, X4
	021 Move X23, X3
	022 Move X24, X2
	023 Move X25, X1
	024 Move X26, X0
	025 Compare X8, 0
	026 JumpIfNotEqual {32}
	027 Move X0, -53669888
	028 Add X0, X0, 3286
	029 Call 0x1C17CB8
	030 Move X8, X0
	031 Move [X29+1320], X0
	032 Move [X31+96], X27
	033 Move [X31+104], X28
	034 Move X0, X26
	035 Move X1, X25
	036 Move X2, X24
	037 Move X3, X23
	038 Move X4, X22
	039 Move X5, X21
	040 Move X6, X20
	041 Move X7, X19
	042 Move X20, [X31+80]
	043 Move X19, [X31+88]
	044 Move X22, [X31+64]
	045 Move X21, [X31+72]
	046 Move X24, [X31+48]
	047 Move X23, [X31+56]
	048 Move X26, [X31+32]
	049 Move X25, [X31+40]
	050 Move X28, [X31+16]
	051 Move X27, [X31+24]
	052 Move X29, [X31+96]
	053 Move X30, [X31+104]
	054 CallNoReturn X8

Method: System.Void SetColor_Injected(ref UnityEngine.Color color)

Disassembly:
	0x03E236FC MOV V14.16B, V5.16B
	0x03E23700 BL 0x1C16CF4
	0x03E23704 MOV V5.16B, V14.16B
	0x03E23708 MOV V4.16B, V9.16B
	0x03E2370C MOVZ W8, 0x1
	0x03E23710 STRB W8, [X22 + 0x785]
	0x03E23714 LDR X0, [X23]
	0x03E23718 FSUB S9, S11, S4
	0x03E2371C FSUB S12, S12, S5
	0x03E23720 FSUB S11, S13, S15
	0x03E23724 LDR W8, [X0 + 0xE0]
	0x03E23728 CBNZ W8, 0x3E23740
	0x03E2372C MOV V13.16B, V4.16B
	0x03E23730 MOV V14.16B, V5.16B
	0x03E23734 BL 0x1C16DFC
	0x03E23738 MOV V5.16B, V14.16B
	0x03E2373C MOV V4.16B, V13.16B

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x5C6000
	006 Move X2, [X21+1328]
	007 Move X19, X1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -53678080
	012 Add X0, X0, 2998
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+1328], X0
	016 Move X0, X20
	017 Move X1, X19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Void GetColor_Injected(out UnityEngine.Color ret)

Disassembly:
	0x03E23798 MOVZ W8, 0x1
	0x03E2379C STRB W8, [X20 + 0x783]
	0x03E237A0 LDR X8, [X21]
	0x03E237A4 LDR X8, [X8 + 0xB8]
	0x03E237A8 LDP S0, S1, [X8]
	0x03E237AC LDR V2, [X8 + 0x8]
	0x03E237B0 LDP S16, S7, [X31 + 0x78]
	0x03E237B4 FMUL S0, S7, S0
	0x03E237B8 FMUL S1, S16, S1
	0x03E237BC FADD S0, S0, S1
	0x03E237C0 FMUL S1, S8, S2
	0x03E237C4 FADD S0, S1, S0
	0x03E237C8 FCMP S0, 0x0
	0x03E237CC FMOV S0, W31
	0x03E237D0 B.EQ 0x3E2389C
	0x03E237D4 LDP S1, S0, [X31 + 0x10]
	0x03E237D8 LDR V2, [X31 + 0xC]

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x5C6000
	006 Move X2, [X21+1336]
	007 Move X19, X1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -53575680
	012 Add X0, X0, 186
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+1336], X0
	016 Move X0, X20
	017 Move X1, X19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Void EnableRectClipping_Injected(ref UnityEngine.Rect rect)

Disassembly:
	0x03E23830 ADRP X0, 0x2D7000
	0x03E23834 LDR X0, [X0 + 0x4B8]
	0x03E23838 BL 0x1C16CF4
	0x03E2383C MOVZ W8, 0x1
	0x03E23840 STRB W8, [X20 + 0x5AA]
	0x03E23844 ADRP X8, 0x2D7000
	0x03E23848 LDR X8, [X8 + 0x4B8]
	0x03E2384C ADRP X9, 0xFFFFFFFFFCCC7000
	0x03E23850 LDR V0, [X9 + 0x240]
	0x03E23854 FABS S2, S8
	0x03E23858 LDR X8, [X8]
	0x03E2385C FMOV S1, W31
	0x03E23860 FMAXNM S2, S2, S1
	0x03E23864 FMOV S4, 8
	0x03E23868 LDR X8, [X8 + 0xB8]
	0x03E2386C FMUL S2, S2, S0
	0x03E23870 FDIV S0, S9, S8

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x5C6000
	006 Move X2, [X21+1344]
	007 Move X19, X1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -53596160
	012 Add X0, X0, 2947
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+1344], X0
	016 Move X0, X20
	017 Move X1, X19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

Method: System.Void set_clippingSoftness_Injected(ref UnityEngine.Vector2 value)

Disassembly:
	0x03E238BC LDP X24, X23, [X31 + 0x80]
	0x03E238C0 LDR X30, [X31 + 0x70]
	0x03E238C4 LDP D9, D8, [X31 + 0x60]
	0x03E238C8 LDP D11, D10, [X31 + 0x50]
	0x03E238CC LDP D13, D12, [X31 + 0x40]
	0x03E238D0 LDP D15, D14, [X31 + 0x30]
	0x03E238D4 ADD X31, X31, 0xB0
	0x03E238D8 RET
	0x03E238DC BL 0x1C16F20
	0x03E238E0 SUB X31, X31, 0x70
	0x03E238E4 STP D11, D10, [X31 + 0x20]
	0x03E238E8 STP D9, D8, [X31 + 0x30]
	0x03E238EC STR X30, [X31 + 0x40]
	0x03E238F0 STP X22, X21, [X31 + 0x50]
	0x03E238F4 STP X20, X19, [X31 + 0x60]
	0x03E238F8 ADRP X22, 0x5C5000
	0x03E238FC ADRP X21, 0x2D0000

ISIL:
	001 Move [X31-32], X30
	002 Move [X31-24], X21
	003 Move [X31+16], X20
	004 Move [X31+24], X19
	005 Move X21, 0x5C6000
	006 Move X2, [X21+1352]
	007 Move X19, X1
	008 Move X20, X0
	009 Compare X2, 0
	010 JumpIfNotEqual {16}
	011 Move X0, -53465088
	012 Add X0, X0, 2684
	013 Call 0x1C17CB8
	014 Move X2, X0
	015 Move [X21+1352], X0
	016 Move X0, X20
	017 Move X1, X19
	018 Move X20, [X31+16]
	019 Move X19, [X31+24]
	020 Move X30, [X31+32]
	021 Move X21, [X31+40]
	022 CallNoReturn X2

